
cfba8ba63b05a47e604cfdeed1373f1708cf035dc61eedaa0372480be36ecf1a.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	sub    esp,0x14
   10644:	mov    DWORD PTR [ebp-0x14],ecx
   10647:	mov    eax,DWORD PTR [ebp-0x14]
   1064a:	mov    DWORD PTR [ebp-0x8],eax
   1064d:	mov    eax,DWORD PTR [ebp-0x14]
   10650:	mov    DWORD PTR [ebp-0x10],eax
   10653:	mov    DWORD PTR [ebp-0x4],0x1
   1065a:	mov    DWORD PTR [ebp-0xc],0x509
   10661:	mov    eax,DWORD PTR [ebp-0x8]
   10664:	mov    ecx,DWORD PTR [ebp+0x8]
   10667:	mov    DWORD PTR [eax],ecx
   10669:	mov    eax,DWORD PTR [ebp-0x8]
   1066c:	add    eax,0x4
   1066f:	mov    DWORD PTR [ebp-0x8],eax
   10672:	jmp    0x1067b
   10674:	mov    eax,DWORD PTR [ebp-0x4]
   10677:	inc    eax
   10678:	mov    DWORD PTR [ebp-0x4],eax
   1067b:	cmp    DWORD PTR [ebp-0x4],0x270
   10682:	jge    0x106b7
   10684:	mov    eax,DWORD PTR [ebp-0x10]
   10687:	mov    eax,DWORD PTR [eax]
   10689:	shr    eax,0x1e
   1068c:	mov    ecx,DWORD PTR [ebp-0x10]
   1068f:	xor    eax,DWORD PTR [ecx]
   10691:	imul   eax,eax,0x15747d
   10697:	imul   eax,DWORD PTR [ebp-0xc]
   1069b:	add    eax,DWORD PTR [ebp-0x4]
   1069e:	mov    ecx,DWORD PTR [ebp-0x8]
   106a1:	mov    DWORD PTR [ecx],eax
   106a3:	mov    eax,DWORD PTR [ebp-0x8]
   106a6:	add    eax,0x4
   106a9:	mov    DWORD PTR [ebp-0x8],eax
   106ac:	mov    eax,DWORD PTR [ebp-0x10]
   106af:	add    eax,0x4
   106b2:	mov    DWORD PTR [ebp-0x10],eax
   106b5:	jmp    0x10674
   106b7:	leave  
   106b8:	ret    0x4
   106bb:	int3   
   106bc:	int3   
   106bd:	int3   
   106be:	int3   
   106bf:	int3   
   106c0:	mov    edi,edi
   106c2:	push   ebp
   106c3:	mov    ebp,esp
   106c5:	push   ecx
   106c6:	push   ebx
   106c7:	push   esi
   106c8:	push   edi
   106c9:	mov    edi,ecx
   106cb:	mov    esi,edi
   106cd:	mov    ebx,0xe3
   106d2:	push   DWORD PTR [esi+0x4]
   106d5:	mov    ecx,edi
   106d7:	push   DWORD PTR [esi]
   106d9:	dec    ebx
   106da:	push   DWORD PTR [esi+0x634]
   106e0:	call   0x10606
   106e5:	mov    DWORD PTR [esi],eax
   106e7:	add    esi,0x4
   106ea:	test   ebx,ebx
   106ec:	jne    0x106d2
   106ee:	mov    DWORD PTR [ebp-0x4],0x18c
   106f5:	lea    ebx,[esi+0x4]
   106f8:	push   DWORD PTR [ebx]
   106fa:	mov    ecx,edi
   106fc:	push   DWORD PTR [esi]
   106fe:	push   DWORD PTR [esi-0x38c]
   10704:	call   0x10606
   10709:	dec    DWORD PTR [ebp-0x4]
   1070c:	mov    DWORD PTR [esi],eax
   1070e:	mov    esi,ebx
   10710:	jne    0x106f5
   10712:	push   DWORD PTR [edi]
   10714:	mov    ecx,edi
   10716:	push   DWORD PTR [esi]
   10718:	push   DWORD PTR [esi-0x38c]
   1071e:	call   0x10606
   10723:	mov    DWORD PTR [esi],eax
   10725:	mov    DWORD PTR [edi+0x9c4],0x270
   1072f:	mov    DWORD PTR [edi+0x9c0],edi
   10735:	pop    edi
   10736:	pop    esi
   10737:	pop    ebx
   10738:	leave  
   10739:	ret    
   1073a:	int3   
   1073b:	int3   
   1073c:	int3   
   1073d:	int3   
   1073e:	int3   
   1073f:	int3   
   10740:	mov    edi,edi
   10742:	push   ebp
   10743:	mov    ebp,esp
   10745:	push   esi
   10746:	push   DWORD PTR [ebp+0x8]
   10749:	mov    esi,ecx
   1074b:	call   0x1063c
   10750:	mov    ecx,esi
   10752:	call   0x106c0
   10757:	pop    esi
   10758:	pop    ebp
   10759:	ret    0x4
   1075c:	int3   
   1075d:	int3   
   1075e:	int3   
   1075f:	int3   
   10760:	int3   
   10761:	int3   
   10762:	mov    edi,edi
   10764:	push   esi
   10765:	push   edi
   10766:	mov    edi,ecx
   10768:	lea    esi,[edi+0x9c4]
   1076e:	cmp    DWORD PTR [esi],0x0
   10771:	jne    0x10778
   10773:	call   0x106c0
   10778:	dec    DWORD PTR [esi]
   1077a:	lea    eax,[edi+0x9c0]
   10780:	mov    edx,DWORD PTR [eax]
   10782:	mov    ecx,DWORD PTR [edx]
   10784:	add    edx,0x4
   10787:	mov    DWORD PTR [eax],edx
   10789:	mov    eax,ecx
   1078b:	shr    eax,0xb
   1078e:	xor    ecx,eax
   10790:	mov    eax,ecx
   10792:	and    eax,0xff3a58ad
   10797:	shl    eax,0x7
   1079a:	xor    ecx,eax
   1079c:	mov    eax,ecx
   1079e:	and    eax,0xffffdf8c
   107a3:	shl    eax,0xf
   107a6:	xor    ecx,eax
   107a8:	mov    eax,ecx
   107aa:	shr    eax,0x12
   107ad:	pop    edi
   107ae:	xor    eax,ecx
   107b0:	pop    esi
   107b1:	ret    
   107b2:	int3   
   107b3:	int3   
   107b4:	int3   
   107b5:	int3   
   107b6:	int3   
   107b7:	int3   
   107b8:	mov    edi,edi
   107ba:	push   ebp
   107bb:	mov    ebp,esp
   107bd:	push   esi
   107be:	mov    esi,DWORD PTR [ebp+0x8]
   107c1:	shr    esi,1
   107c3:	or     esi,DWORD PTR [ebp+0x8]
   107c6:	push   edi
   107c7:	mov    eax,esi
   107c9:	shr    eax,0x2
   107cc:	or     esi,eax
   107ce:	mov    eax,esi
   107d0:	shr    eax,0x4
   107d3:	or     esi,eax
   107d5:	mov    eax,esi
   107d7:	shr    eax,0x8
   107da:	or     esi,eax
   107dc:	mov    eax,esi
   107de:	shr    eax,0x10
   107e1:	mov    edi,ecx
   107e3:	or     esi,eax
   107e5:	mov    ecx,edi
   107e7:	call   0x10762
   107ec:	and    eax,esi
   107ee:	cmp    eax,DWORD PTR [ebp+0x8]
   107f1:	ja     0x107e5
   107f3:	pop    edi
   107f4:	pop    esi
   107f5:	pop    ebp
   107f6:	ret    0x4
   107f9:	int3   
   107fa:	int3   
   107fb:	int3   
   107fc:	int3   
   107fd:	int3   
   107fe:	mov    edi,edi
   10800:	push   ebp
   10801:	mov    ebp,esp
   10803:	sub    esp,0xa04
   10809:	push   ebx
   1080a:	push   esi
   1080b:	mov    esi,DWORD PTR [ebp+0x14]
   1080e:	push   edi
   1080f:	test   esi,esi
   10811:	jne    0x108ec
   10817:	xor    ecx,ecx
   10819:	lea    eax,[ebp-0x3c]
   1081c:	mov    edx,0xff
   10821:	shl    edx,cl
   10823:	and    edx,DWORD PTR [ebp+0x8]
   10826:	shr    edx,cl
   10828:	inc    ecx
   10829:	inc    ecx
   1082a:	mov    DWORD PTR [eax],edx
   1082c:	add    eax,0x4
   1082f:	cmp    ecx,0x14
   10832:	jne    0x1081c
   10834:	mov    ebx,DWORD PTR [ebp+0xc]
   10837:	xor    eax,eax
   10839:	mov    WORD PTR [ebx],ax
   1083c:	mov    eax,DWORD PTR [ebp-0x3c]
   1083f:	push   0x5
   10841:	cdq    
   10842:	pop    ecx
   10843:	idiv   ecx
   10845:	mov    DWORD PTR [ebp-0x14],0x1de56
   1084c:	mov    DWORD PTR [ebp-0x10],0x1de4c
   10853:	mov    DWORD PTR [ebp-0xc],0x1de44
   1085a:	mov    DWORD PTR [ebp-0x8],0x1de3a
   10861:	mov    DWORD PTR [ebp-0x4],0x1de30
   10868:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1086c:	mov    ecx,edx
   1086e:	mov    ax,WORD PTR [edx]
   10871:	inc    edx
   10872:	inc    edx
   10873:	test   ax,ax
   10876:	jne    0x1086e
   10878:	sub    edx,ecx
   1087a:	mov    edi,ebx
   1087c:	dec    edi
   1087d:	mov    esi,ecx
   1087f:	dec    edi
   10880:	mov    ax,WORD PTR [edi+0x2]
   10884:	inc    edi
   10885:	inc    edi
   10886:	test   ax,ax
   10889:	jne    0x10880
   1088b:	mov    ecx,edx
   1088d:	shr    ecx,0x2
   10890:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10892:	mov    ecx,edx
   10894:	and    ecx,0x3
   10897:	mov    eax,ebx
   10899:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1089b:	lea    ecx,[eax+0x2]
   1089e:	mov    dx,WORD PTR [eax]
   108a1:	inc    eax
   108a2:	inc    eax
   108a3:	test   dx,dx
   108a6:	jne    0x1089e
   108a8:	sub    eax,ecx
   108aa:	sar    eax,1
   108ac:	mov    ecx,eax
   108ae:	mov    eax,DWORD PTR [ebp-0x38]
   108b1:	push   0x3
   108b3:	cdq    
   108b4:	pop    esi
   108b5:	idiv   esi
   108b7:	cmp    edx,0xfffffffe
   108ba:	je     0x109a0
   108c0:	add    edx,0x2
   108c3:	lea    esi,[ebp-0x34]
   108c6:	mov    DWORD PTR [ebp+0x8],edx
   108c9:	mov    eax,DWORD PTR [esi]
   108cb:	cdq    
   108cc:	push   0x1a
   108ce:	pop    edi
   108cf:	idiv   edi
   108d1:	add    esi,0x4
   108d4:	xor    eax,eax
   108d6:	add    edx,0x61
   108d9:	mov    WORD PTR [ebx+ecx*2],dx
   108dd:	inc    ecx
   108de:	dec    DWORD PTR [ebp+0x8]
   108e1:	mov    WORD PTR [ebx+ecx*2],ax
   108e5:	jne    0x108c9
   108e7:	jmp    0x109a0
   108ec:	cmp    esi,0x1
   108ef:	je     0x108fc
   108f1:	mov    eax,esi
   108f3:	imul   eax,eax,0xa
   108f6:	add    eax,DWORD PTR [ebp+0x10]
   108f9:	add    DWORD PTR [ebp+0x8],eax
   108fc:	push   DWORD PTR [ebp+0x8]
   108ff:	lea    ecx,[ebp-0xa04]
   10905:	call   0x10740
   1090a:	lea    eax,[esi-0x1]
   1090d:	cmp    eax,0x5
   10910:	ja     0x10921
   10912:	imul   esi,esi,0x3
   10915:	add    esi,DWORD PTR [ebp+0x10]
   10918:	mov    esi,DWORD PTR [esi*4+0x776bc]
   1091f:	jmp    0x10926
   10921:	mov    esi,0x1de2e
   10926:	mov    ebx,DWORD PTR [ebp+0xc]
   10929:	xor    eax,eax
   1092b:	mov    WORD PTR [ebx],ax
   1092e:	mov    eax,esi
   10930:	mov    edx,esi
   10932:	mov    cx,WORD PTR [eax]
   10935:	inc    eax
   10936:	inc    eax
   10937:	test   cx,cx
   1093a:	jne    0x10932
   1093c:	sub    eax,edx
   1093e:	mov    edi,ebx
   10940:	dec    edi
   10941:	dec    edi
   10942:	mov    cx,WORD PTR [edi+0x2]
   10946:	inc    edi
   10947:	inc    edi
   10948:	test   cx,cx
   1094b:	jne    0x10942
   1094d:	mov    ecx,eax
   1094f:	shr    ecx,0x2
   10952:	mov    esi,edx
   10954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10956:	mov    ecx,eax
   10958:	and    ecx,0x3
   1095b:	mov    eax,ebx
   1095d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1095f:	lea    ecx,[eax+0x2]
   10962:	mov    dx,WORD PTR [eax]
   10965:	inc    eax
   10966:	inc    eax
   10967:	test   dx,dx
   1096a:	jne    0x10962
   1096c:	sub    eax,ecx
   1096e:	sar    eax,1
   10970:	push   0x5
   10972:	mov    esi,eax
   10974:	pop    edi
   10975:	push   0x23
   10977:	lea    ecx,[ebp-0xa04]
   1097d:	call   0x107b8
   10982:	cmp    eax,0xa
   10985:	jae    0x1098c
   10987:	add    eax,0x30
   1098a:	jmp    0x1098f
   1098c:	add    eax,0x57
   1098f:	movzx  eax,ax
   10992:	mov    WORD PTR [ebx+esi*2],ax
   10996:	inc    esi
   10997:	xor    eax,eax
   10999:	dec    edi
   1099a:	mov    WORD PTR [ebx+esi*2],ax
   1099e:	jne    0x10975
   109a0:	pop    edi
   109a1:	pop    esi
   109a2:	pop    ebx
   109a3:	leave  
   109a4:	ret    0x10
   109a7:	int3   
   109a8:	int3   
   109a9:	int3   
   109aa:	int3   
   109ab:	int3   
   109ac:	mov    edi,edi
   109ae:	push   ebp
   109af:	mov    ebp,esp
   109b1:	mov    eax,DWORD PTR [ebp+0x8]
   109b4:	lea    edx,[eax+0x2]
   109b7:	mov    cx,WORD PTR [eax]
   109ba:	inc    eax
   109bb:	inc    eax
   109bc:	test   cx,cx
   109bf:	jne    0x109b7
   109c1:	sub    eax,edx
   109c3:	sar    eax,1
   109c5:	pop    ebp
   109c6:	ret    0x4
   109c9:	int3   
   109ca:	int3   
   109cb:	int3   
   109cc:	int3   
   109cd:	int3   
   109ce:	mov    eax,ecx
   109d0:	ret    
   109d1:	int3   
   109d2:	int3   
   109d3:	int3   
   109d4:	int3   
   109d5:	int3   
   109d6:	ret    
   109d7:	int3   
   109d8:	int3   
   109d9:	int3   
   109da:	int3   
   109db:	int3   
   109dc:	mov    edi,edi
   109de:	push   ebp
   109df:	mov    ebp,esp
   109e1:	push   esi
   109e2:	mov    esi,DWORD PTR [ebp+0x8]
   109e5:	push   edi
   109e6:	mov    edi,DWORD PTR [ebp+0xc]
   109e9:	jmp    0x10a39
   109eb:	push   0x0
   109ed:	push   0x100
   109f2:	push   edi
   109f3:	push   esi
   109f4:	call   0x1da72
   109f9:	lea    eax,[eax*8+0x782b0]
   10a00:	add    DWORD PTR [eax],esi
   10a02:	adc    DWORD PTR [eax+0x4],edi
   10a05:	test   edi,edi
   10a07:	jl     0x10a42
   10a09:	jg     0x10a0f
   10a0b:	test   esi,esi
   10a0d:	jbe    0x10a42
   10a0f:	mov    eax,esi
   10a11:	xor    ecx,ecx
   10a13:	and    eax,0x1
   10a16:	or     eax,ecx
   10a18:	push   ecx
   10a19:	jne    0x10a26
   10a1b:	push   0x2
   10a1d:	push   edi
   10a1e:	push   esi
   10a1f:	call   0x1da66
   10a24:	jmp    0x10a35
   10a26:	push   0x3
   10a28:	push   edi
   10a29:	push   esi
   10a2a:	call   0x1da5a
   10a2f:	add    eax,0x1
   10a32:	adc    edx,0x0
   10a35:	mov    edi,edx
   10a37:	mov    esi,eax
   10a39:	cmp    esi,0x4
   10a3c:	jne    0x109eb
   10a3e:	test   edi,edi
   10a40:	jne    0x109eb
   10a42:	mov    edx,edi
   10a44:	pop    edi
   10a45:	mov    eax,esi
   10a47:	pop    esi
   10a48:	pop    ebp
   10a49:	ret    0x8
   10a4c:	int3   
   10a4d:	int3   
   10a4e:	int3   
   10a4f:	int3   
   10a50:	int3   
   10a51:	int3   
   10a52:	mov    edi,edi
   10a54:	push   ebp
   10a55:	mov    ebp,esp
   10a57:	push   esi
   10a58:	push   0x20
   10a5a:	push   0x61737973
   10a5f:	push   DWORD PTR [ebp+0x8]
   10a62:	push   0x1
   10a64:	call   DWORD PTR ds:0x1ee1c
   10a6a:	mov    esi,eax
   10a6c:	test   esi,esi
   10a6e:	jne    0x10a7b
   10a70:	push   0xc000009a
   10a75:	call   DWORD PTR ds:0x1ee18
   10a7b:	mov    eax,esi
   10a7d:	pop    esi
   10a7e:	pop    ebp
   10a7f:	ret    
   10a80:	int3   
   10a81:	int3   
   10a82:	int3   
   10a83:	int3   
   10a84:	int3   
   10a85:	int3   
   10a86:	mov    edi,edi
   10a88:	push   esi
   10a89:	mov    esi,ecx
   10a8b:	dec    DWORD PTR [esi+0x4]
   10a8e:	jne    0x10a9f
   10a90:	push   DWORD PTR [esi]
   10a92:	call   0x1d9fc
   10a97:	push   esi
   10a98:	call   0x1d9fc
   10a9d:	pop    ecx
   10a9e:	pop    ecx
   10a9f:	pop    esi
   10aa0:	ret    
   10aa1:	int3   
   10aa2:	int3   
   10aa3:	int3   
   10aa4:	int3   
   10aa5:	int3   
   10aa6:	mov    edi,edi
   10aa8:	push   ebp
   10aa9:	mov    ebp,esp
   10aab:	push   esi
   10aac:	xor    esi,esi
   10aae:	xor    edx,edx
   10ab0:	cmp    DWORD PTR [ebp+0xc],esi
   10ab3:	je     0x10ad0
   10ab5:	mov    eax,DWORD PTR [ebp+0x8]
   10ab8:	mov    ecx,DWORD PTR [ebp+0x10]
   10abb:	mov    cl,BYTE PTR [edx+ecx*1]
   10abe:	add    eax,esi
   10ac0:	xor    BYTE PTR [eax],cl
   10ac2:	lea    eax,[edx+0x1]
   10ac5:	xor    edx,edx
   10ac7:	div    DWORD PTR [ebp+0x14]
   10aca:	inc    esi
   10acb:	cmp    esi,DWORD PTR [ebp+0xc]
   10ace:	jne    0x10ab5
   10ad0:	pop    esi
   10ad1:	pop    ebp
   10ad2:	ret    0x10
   10ad5:	int3   
   10ad6:	int3   
   10ad7:	int3   
   10ad8:	int3   
   10ad9:	int3   
   10ada:	mov    edi,edi
   10adc:	push   ebp
   10add:	mov    ebp,esp
   10adf:	mov    ecx,DWORD PTR [ebp+0x8]
   10ae2:	mov    eax,ecx
   10ae4:	lea    edx,[eax+0x2]
   10ae7:	push   esi
   10ae8:	mov    si,WORD PTR [eax]
   10aeb:	inc    eax
   10aec:	inc    eax
   10aed:	test   si,si
   10af0:	jne    0x10ae8
   10af2:	sub    eax,edx
   10af4:	sar    eax,1
   10af6:	cmp    eax,0xc
   10af9:	jae    0x10b02
   10afb:	xor    al,al
   10afd:	jmp    0x10bd0
   10b02:	lea    eax,[ecx+eax*2-0x18]
   10b06:	movzx  ecx,WORD PTR [eax]
   10b09:	cmp    cx,0x69
   10b0d:	je     0x10b15
   10b0f:	cmp    cx,0x49
   10b13:	jne    0x10afb
   10b15:	movzx  ecx,WORD PTR [eax+0x2]
   10b19:	push   0x45
   10b1b:	pop    esi
   10b1c:	push   0x65
   10b1e:	pop    edx
   10b1f:	cmp    cx,dx
   10b22:	je     0x10b29
   10b24:	cmp    cx,si
   10b27:	jne    0x10afb
   10b29:	movzx  ecx,WORD PTR [eax+0x4]
   10b2d:	cmp    cx,0x78
   10b31:	je     0x10b39
   10b33:	cmp    cx,0x58
   10b37:	jne    0x10afb
   10b39:	movzx  ecx,WORD PTR [eax+0x6]
   10b3d:	cmp    cx,0x70
   10b41:	je     0x10b49
   10b43:	cmp    cx,0x50
   10b47:	jne    0x10afb
   10b49:	movzx  ecx,WORD PTR [eax+0x8]
   10b4d:	cmp    cx,0x6c
   10b51:	je     0x10b59
   10b53:	cmp    cx,0x4c
   10b57:	jne    0x10afb
   10b59:	movzx  ecx,WORD PTR [eax+0xa]
   10b5d:	cmp    cx,0x6f
   10b61:	je     0x10b69
   10b63:	cmp    cx,0x4f
   10b67:	jne    0x10afb
   10b69:	movzx  ecx,WORD PTR [eax+0xc]
   10b6d:	cmp    cx,0x72
   10b71:	je     0x10b79
   10b73:	cmp    cx,0x52
   10b77:	jne    0x10afb
   10b79:	movzx  ecx,WORD PTR [eax+0xe]
   10b7d:	cmp    cx,dx
   10b80:	je     0x10b8b
   10b82:	cmp    cx,si
   10b85:	jne    0x10afb
   10b8b:	cmp    WORD PTR [eax+0x10],0x2e
   10b90:	jne    0x10afb
   10b96:	movzx  ecx,WORD PTR [eax+0x12]
   10b9a:	cmp    cx,dx
   10b9d:	je     0x10ba8
   10b9f:	cmp    cx,si
   10ba2:	jne    0x10afb
   10ba8:	movzx  ecx,WORD PTR [eax+0x14]
   10bac:	cmp    cx,0x78
   10bb0:	je     0x10bbc
   10bb2:	cmp    cx,0x58
   10bb6:	jne    0x10afb
   10bbc:	movzx  eax,WORD PTR [eax+0x16]
   10bc0:	cmp    ax,dx
   10bc3:	je     0x10bce
   10bc5:	cmp    ax,si
   10bc8:	jne    0x10afb
   10bce:	mov    al,0x1
   10bd0:	pop    esi
   10bd1:	pop    ebp
   10bd2:	ret    0x4
   10bd5:	int3   
   10bd6:	int3   
   10bd7:	int3   
   10bd8:	int3   
   10bd9:	int3   
   10bda:	mov    edi,edi
   10bdc:	push   ebp
   10bdd:	mov    ebp,esp
   10bdf:	mov    ecx,DWORD PTR [ebp+0x8]
   10be2:	mov    eax,ecx
   10be4:	lea    edx,[eax+0x2]
   10be7:	push   esi
   10be8:	mov    si,WORD PTR [eax]
   10beb:	inc    eax
   10bec:	inc    eax
   10bed:	test   si,si
   10bf0:	jne    0x10be8
   10bf2:	sub    eax,edx
   10bf4:	sar    eax,1
   10bf6:	pop    esi
   10bf7:	cmp    eax,0xb
   10bfa:	jae    0x10c03
   10bfc:	xor    al,al
   10bfe:	jmp    0x10cbf
   10c03:	lea    eax,[ecx+eax*2-0x16]
   10c07:	movzx  ecx,WORD PTR [eax]
   10c0a:	cmp    cx,0x66
   10c0e:	je     0x10c16
   10c10:	cmp    cx,0x46
   10c14:	jne    0x10bfc
   10c16:	movzx  ecx,WORD PTR [eax+0x2]
   10c1a:	cmp    cx,0x69
   10c1e:	je     0x10c26
   10c20:	cmp    cx,0x49
   10c24:	jne    0x10bfc
   10c26:	movzx  ecx,WORD PTR [eax+0x4]
   10c2a:	cmp    cx,0x72
   10c2e:	je     0x10c36
   10c30:	cmp    cx,0x52
   10c34:	jne    0x10bfc
   10c36:	movzx  ecx,WORD PTR [eax+0x6]
   10c3a:	cmp    cx,0x65
   10c3e:	je     0x10c46
   10c40:	cmp    cx,0x45
   10c44:	jne    0x10bfc
   10c46:	movzx  ecx,WORD PTR [eax+0x8]
   10c4a:	cmp    cx,0x66
   10c4e:	je     0x10c56
   10c50:	cmp    cx,0x46
   10c54:	jne    0x10bfc
   10c56:	movzx  ecx,WORD PTR [eax+0xa]
   10c5a:	cmp    cx,0x6f
   10c5e:	je     0x10c66
   10c60:	cmp    cx,0x4f
   10c64:	jne    0x10bfc
   10c66:	movzx  ecx,WORD PTR [eax+0xc]
   10c6a:	cmp    cx,0x58
   10c6e:	je     0x10c76
   10c70:	cmp    cx,0x78
   10c74:	jne    0x10bfc
   10c76:	cmp    WORD PTR [eax+0xe],0x2e
   10c7b:	jne    0x10bfc
   10c81:	movzx  ecx,WORD PTR [eax+0x10]
   10c85:	cmp    cx,0x65
   10c89:	je     0x10c95
   10c8b:	cmp    cx,0x45
   10c8f:	jne    0x10bfc
   10c95:	movzx  ecx,WORD PTR [eax+0x12]
   10c99:	cmp    cx,0x78
   10c9d:	je     0x10ca9
   10c9f:	cmp    cx,0x58
   10ca3:	jne    0x10bfc
   10ca9:	movzx  eax,WORD PTR [eax+0x14]
   10cad:	cmp    ax,0x65
   10cb1:	je     0x10cbd
   10cb3:	cmp    ax,0x45
   10cb7:	jne    0x10bfc
   10cbd:	mov    al,0x1
   10cbf:	pop    ebp
   10cc0:	ret    0x4
   10cc3:	int3   
   10cc4:	int3   
   10cc5:	int3   
   10cc6:	int3   
   10cc7:	int3   
   10cc8:	mov    edi,edi
   10cca:	push   ebp
   10ccb:	mov    ebp,esp
   10ccd:	mov    ecx,DWORD PTR [ebp+0x8]
   10cd0:	mov    eax,ecx
   10cd2:	lea    edx,[eax+0x2]
   10cd5:	push   esi
   10cd6:	mov    si,WORD PTR [eax]
   10cd9:	inc    eax
   10cda:	inc    eax
   10cdb:	test   si,si
   10cde:	jne    0x10cd6
   10ce0:	sub    eax,edx
   10ce2:	sar    eax,1
   10ce4:	pop    esi
   10ce5:	cmp    eax,0xa
   10ce8:	jae    0x10cf1
   10cea:	xor    al,al
   10cec:	jmp    0x10d99
   10cf1:	lea    eax,[ecx+eax*2-0x14]
   10cf5:	movzx  ecx,WORD PTR [eax]
   10cf8:	cmp    cx,0x63
   10cfc:	je     0x10d04
   10cfe:	cmp    cx,0x43
   10d02:	jne    0x10cea
   10d04:	movzx  ecx,WORD PTR [eax+0x2]
   10d08:	cmp    cx,0x68
   10d0c:	je     0x10d14
   10d0e:	cmp    cx,0x48
   10d12:	jne    0x10cea
   10d14:	movzx  ecx,WORD PTR [eax+0x4]
   10d18:	cmp    cx,0x72
   10d1c:	je     0x10d24
   10d1e:	cmp    cx,0x52
   10d22:	jne    0x10cea
   10d24:	movzx  ecx,WORD PTR [eax+0x6]
   10d28:	cmp    cx,0x6f
   10d2c:	je     0x10d34
   10d2e:	cmp    cx,0x4f
   10d32:	jne    0x10cea
   10d34:	movzx  ecx,WORD PTR [eax+0x8]
   10d38:	cmp    cx,0x6d
   10d3c:	je     0x10d44
   10d3e:	cmp    cx,0x4d
   10d42:	jne    0x10cea
   10d44:	movzx  ecx,WORD PTR [eax+0xa]
   10d48:	cmp    cx,0x65
   10d4c:	je     0x10d54
   10d4e:	cmp    cx,0x45
   10d52:	jne    0x10cea
   10d54:	cmp    WORD PTR [eax+0xc],0x2e
   10d59:	jne    0x10cea
   10d5b:	movzx  ecx,WORD PTR [eax+0xe]
   10d5f:	cmp    cx,0x65
   10d63:	je     0x10d6f
   10d65:	cmp    cx,0x45
   10d69:	jne    0x10cea
   10d6f:	movzx  ecx,WORD PTR [eax+0x10]
   10d73:	cmp    cx,0x78
   10d77:	je     0x10d83
   10d79:	cmp    cx,0x58
   10d7d:	jne    0x10cea
   10d83:	movzx  eax,WORD PTR [eax+0x12]
   10d87:	cmp    ax,0x65
   10d8b:	je     0x10d97
   10d8d:	cmp    ax,0x45
   10d91:	jne    0x10cea
   10d97:	mov    al,0x1
   10d99:	pop    ebp
   10d9a:	ret    0x4
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	push   DWORD PTR [ebp+0x8]
   10daa:	call   0x10ada
   10daf:	test   al,al
   10db1:	je     0x10db8
   10db3:	xor    eax,eax
   10db5:	inc    eax
   10db6:	jmp    0x10ddb
   10db8:	push   DWORD PTR [ebp+0x8]
   10dbb:	call   0x10bda
   10dc0:	test   al,al
   10dc2:	je     0x10dc9
   10dc4:	push   0x2
   10dc6:	pop    eax
   10dc7:	jmp    0x10ddb
   10dc9:	push   DWORD PTR [ebp+0x8]
   10dcc:	call   0x10cc8
   10dd1:	movzx  eax,al
   10dd4:	neg    eax
   10dd6:	sbb    eax,eax
   10dd8:	and    eax,0x3
   10ddb:	pop    ebp
   10ddc:	ret    0x4
   10ddf:	int3   
   10de0:	int3   
   10de1:	int3   
   10de2:	int3   
   10de3:	int3   
   10de4:	mov    edi,edi
   10de6:	push   ebp
   10de7:	mov    ebp,esp
   10de9:	sub    esp,0x10
   10dec:	push   esi
   10ded:	push   edi
   10dee:	xor    eax,eax
   10df0:	mov    WORD PTR [ebp-0x8],ax
   10df4:	lea    edi,[ebp-0x6]
   10df7:	stos   DWORD PTR es:[edi],eax
   10df8:	stos   WORD PTR es:[edi],ax
   10dfa:	mov    eax,DWORD PTR [ebp+0xc]
   10dfd:	mov    DWORD PTR [ebp-0x4],eax
   10e00:	lea    ecx,[eax+0x2]
   10e03:	mov    dx,WORD PTR [eax]
   10e06:	inc    eax
   10e07:	inc    eax
   10e08:	test   dx,dx
   10e0b:	jne    0x10e03
   10e0d:	mov    esi,DWORD PTR [ebp+0x8]
   10e10:	movzx  edx,WORD PTR [esi]
   10e13:	sub    eax,ecx
   10e15:	sar    eax,1
   10e17:	lea    ecx,[eax+eax*1]
   10e1a:	mov    WORD PTR [ebp-0x8],cx
   10e1e:	mov    WORD PTR [ebp-0x6],cx
   10e22:	cmp    dx,cx
   10e25:	jb     0x10e64
   10e27:	xor    eax,eax
   10e29:	lea    edi,[ebp-0xe]
   10e2c:	stos   DWORD PTR es:[edi],eax
   10e2d:	stos   WORD PTR es:[edi],ax
   10e2f:	mov    WORD PTR [ebp-0x10],cx
   10e33:	mov    WORD PTR [ebp-0xe],cx
   10e37:	movzx  eax,dx
   10e3a:	movzx  ecx,cx
   10e3d:	sub    eax,ecx
   10e3f:	mov    ecx,DWORD PTR [esi+0x4]
   10e42:	cdq    
   10e43:	sub    eax,edx
   10e45:	sar    eax,1
   10e47:	lea    eax,[ecx+eax*2]
   10e4a:	mov    DWORD PTR [ebp-0xc],eax
   10e4d:	push   0x1
   10e4f:	lea    eax,[ebp-0x8]
   10e52:	push   eax
   10e53:	lea    eax,[ebp-0x10]
   10e56:	push   eax
   10e57:	call   DWORD PTR ds:0x1ee24
   10e5d:	neg    eax
   10e5f:	sbb    eax,eax
   10e61:	inc    eax
   10e62:	jmp    0x10e66
   10e64:	xor    al,al
   10e66:	pop    edi
   10e67:	pop    esi
   10e68:	leave  
   10e69:	ret    0x8
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	int3   
   10e71:	int3   
   10e72:	mov    edi,edi
   10e74:	push   ebp
   10e75:	mov    ebp,esp
   10e77:	push   ebx
   10e78:	xor    eax,eax
   10e7a:	push   eax
   10e7b:	push   eax
   10e7c:	push   eax
   10e7d:	push   eax
   10e7e:	mov    ebx,0x7772c
   10e83:	push   ebx
   10e84:	call   DWORD PTR ds:0x1ee2c
   10e8a:	test   eax,eax
   10e8c:	jge    0x10e92
   10e8e:	xor    al,al
   10e90:	jmp    0x10eb5
   10e92:	push   esi
   10e93:	mov    esi,DWORD PTR [ebp+0x8]
   10e96:	push   edi
   10e97:	imul   esi,esi,0x14
   10e9a:	mov    edi,DWORD PTR [ebp+0xc]
   10e9d:	push   0x5
   10e9f:	pop    ecx
   10ea0:	push   0x0
   10ea2:	add    esi,0x7817c
   10ea8:	push   ebx
   10ea9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10eab:	call   DWORD PTR ds:0x1ee28
   10eb1:	pop    edi
   10eb2:	mov    al,0x1
   10eb4:	pop    esi
   10eb5:	pop    ebx
   10eb6:	pop    ebp
   10eb7:	ret    0x8
   10eba:	int3   
   10ebb:	int3   
   10ebc:	int3   
   10ebd:	int3   
   10ebe:	int3   
   10ebf:	int3   
   10ec0:	mov    edi,edi
   10ec2:	push   ebp
   10ec3:	mov    ebp,esp
   10ec5:	push   ebx
   10ec6:	xor    eax,eax
   10ec8:	push   eax
   10ec9:	push   eax
   10eca:	push   eax
   10ecb:	push   eax
   10ecc:	mov    ebx,0x7772c
   10ed1:	push   ebx
   10ed2:	call   DWORD PTR ds:0x1ee2c
   10ed8:	test   eax,eax
   10eda:	jl     0x10efd
   10edc:	push   esi
   10edd:	mov    esi,DWORD PTR [ebp+0xc]
   10ee0:	push   edi
   10ee1:	mov    edi,DWORD PTR [ebp+0x8]
   10ee4:	imul   edi,edi,0x14
   10ee7:	push   0x5
   10ee9:	pop    ecx
   10eea:	push   0x0
   10eec:	add    edi,0x7817c
   10ef2:	push   ebx
   10ef3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ef5:	call   DWORD PTR ds:0x1ee28
   10efb:	pop    edi
   10efc:	pop    esi
   10efd:	pop    ebx
   10efe:	pop    ebp
   10eff:	ret    0x8
   10f02:	int3   
   10f03:	int3   
   10f04:	int3   
   10f05:	int3   
   10f06:	int3   
   10f07:	int3   
   10f08:	mov    edi,edi
   10f0a:	push   ebp
   10f0b:	mov    ebp,esp
   10f0d:	sub    esp,0x14
   10f10:	and    DWORD PTR [ebp-0x14],0x0
   10f14:	push   edi
   10f15:	xor    eax,eax
   10f17:	lea    edi,[ebp-0x10]
   10f1a:	stos   DWORD PTR es:[edi],eax
   10f1b:	stos   DWORD PTR es:[edi],eax
   10f1c:	stos   DWORD PTR es:[edi],eax
   10f1d:	stos   DWORD PTR es:[edi],eax
   10f1e:	lea    eax,[ebp-0x14]
   10f21:	push   eax
   10f22:	push   DWORD PTR [ebp+0x8]
   10f25:	call   0x10ec0
   10f2a:	pop    edi
   10f2b:	leave  
   10f2c:	ret    0x4
   10f2f:	int3   
   10f30:	int3   
   10f31:	int3   
   10f32:	int3   
   10f33:	int3   
   10f34:	mov    edi,edi
   10f36:	push   ebp
   10f37:	mov    ebp,esp
   10f39:	push   ebx
   10f3a:	xor    eax,eax
   10f3c:	push   eax
   10f3d:	push   eax
   10f3e:	push   eax
   10f3f:	push   eax
   10f40:	mov    ebx,0x780b8
   10f45:	push   ebx
   10f46:	call   DWORD PTR ds:0x1ee2c
   10f4c:	test   eax,eax
   10f4e:	jl     0x10f6a
   10f50:	push   esi
   10f51:	mov    esi,DWORD PTR [ebp+0x8]
   10f54:	push   edi
   10f55:	push   0x40
   10f57:	pop    ecx
   10f58:	push   0x0
   10f5a:	mov    edi,0x781a8
   10f5f:	push   ebx
   10f60:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f62:	call   DWORD PTR ds:0x1ee28
   10f68:	pop    edi
   10f69:	pop    esi
   10f6a:	pop    ebx
   10f6b:	pop    ebp
   10f6c:	ret    0x4
   10f6f:	int3   
   10f70:	int3   
   10f71:	int3   
   10f72:	int3   
   10f73:	int3   
   10f74:	mov    edi,edi
   10f76:	push   ebp
   10f77:	mov    ebp,esp
   10f79:	push   ebx
   10f7a:	xor    eax,eax
   10f7c:	push   eax
   10f7d:	push   eax
   10f7e:	push   eax
   10f7f:	push   eax
   10f80:	mov    ebx,0x780b8
   10f85:	push   ebx
   10f86:	call   DWORD PTR ds:0x1ee2c
   10f8c:	test   eax,eax
   10f8e:	jge    0x10f94
   10f90:	xor    al,al
   10f92:	jmp    0x10fba
   10f94:	push   esi
   10f95:	push   edi
   10f96:	mov    edi,DWORD PTR [ebp+0x8]
   10f99:	push   0x40
   10f9b:	pop    ecx
   10f9c:	push   0x0
   10f9e:	mov    esi,0x781a8
   10fa3:	push   ebx
   10fa4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fa6:	call   DWORD PTR ds:0x1ee28
   10fac:	xor    eax,eax
   10fae:	cmp    WORD PTR ds:0x781a8,ax
   10fb5:	pop    edi
   10fb6:	setne  al
   10fb9:	pop    esi
   10fba:	pop    ebx
   10fbb:	pop    ebp
   10fbc:	ret    0x4
   10fbf:	int3   
   10fc0:	int3   
   10fc1:	int3   
   10fc2:	int3   
   10fc3:	int3   
   10fc4:	mov    edi,edi
   10fc6:	push   ebp
   10fc7:	mov    ebp,esp
   10fc9:	push   ebx
   10fca:	mov    ebx,DWORD PTR [ebp+0x8]
   10fcd:	cmp    ebx,0x40
   10fd0:	ja     0x10ffd
   10fd2:	push   esi
   10fd3:	push   edi
   10fd4:	xor    edi,edi
   10fd6:	push   edi
   10fd7:	push   edi
   10fd8:	push   edi
   10fd9:	push   edi
   10fda:	mov    esi,0x780f4
   10fdf:	push   esi
   10fe0:	call   DWORD PTR ds:0x1ee2c
   10fe6:	test   eax,eax
   10fe8:	jl     0x10ffb
   10fea:	push   edi
   10feb:	lea    eax,[ebx*4+0x777b8]
   10ff2:	inc    DWORD PTR [eax]
   10ff4:	push   esi
   10ff5:	call   DWORD PTR ds:0x1ee28
   10ffb:	pop    edi
   10ffc:	pop    esi
   10ffd:	pop    ebx
   10ffe:	pop    ebp
   10fff:	ret    0x4
   11002:	int3   
   11003:	int3   
   11004:	int3   
   11005:	int3   
   11006:	int3   
   11007:	int3   
   11008:	mov    edi,edi
   1100a:	push   ebp
   1100b:	mov    ebp,esp
   1100d:	push   ebx
   1100e:	push   esi
   1100f:	push   edi
   11010:	mov    edi,DWORD PTR [ebp+0x8]
   11013:	cmp    edi,0x40
   11016:	ja     0x11041
   11018:	xor    ebx,ebx
   1101a:	push   ebx
   1101b:	push   ebx
   1101c:	push   ebx
   1101d:	push   ebx
   1101e:	mov    esi,0x780f4
   11023:	push   esi
   11024:	call   DWORD PTR ds:0x1ee2c
   1102a:	test   eax,eax
   1102c:	jl     0x11041
   1102e:	mov    edi,DWORD PTR [edi*4+0x777b8]
   11035:	push   ebx
   11036:	push   esi
   11037:	call   DWORD PTR ds:0x1ee28
   1103d:	mov    eax,edi
   1103f:	jmp    0x11043
   11041:	xor    eax,eax
   11043:	pop    edi
   11044:	pop    esi
   11045:	pop    ebx
   11046:	pop    ebp
   11047:	ret    0x4
   1104a:	int3   
   1104b:	int3   
   1104c:	int3   
   1104d:	int3   
   1104e:	int3   
   1104f:	int3   
   11050:	mov    edi,edi
   11052:	push   ebp
   11053:	mov    ebp,esp
   11055:	push   esi
   11056:	mov    esi,DWORD PTR [ebp+0x8]
   11059:	push   edi
   1105a:	push   DWORD PTR [esi]
   1105c:	call   0x10a52
   11061:	push   DWORD PTR [esi]
   11063:	mov    edi,eax
   11065:	push   esi
   11066:	push   edi
   11067:	call   0x1da8a
   1106c:	add    esp,0x10
   1106f:	mov    eax,edi
   11071:	pop    edi
   11072:	pop    esi
   11073:	pop    ebp
   11074:	ret    0x4
   11077:	int3   
   11078:	int3   
   11079:	int3   
   1107a:	int3   
   1107b:	int3   
   1107c:	mov    edi,edi
   1107e:	push   esi
   1107f:	mov    esi,ecx
   11081:	push   DWORD PTR [esi+0x8]
   11084:	call   0x1d9fc
   11089:	push   DWORD PTR [esi]
   1108b:	call   0x1d9fc
   11090:	pop    ecx
   11091:	pop    ecx
   11092:	pop    esi
   11093:	ret    
   11094:	int3   
   11095:	int3   
   11096:	int3   
   11097:	int3   
   11098:	int3   
   11099:	int3   
   1109a:	mov    edi,edi
   1109c:	push   ebp
   1109d:	mov    ebp,esp
   1109f:	push   esi
   110a0:	mov    esi,DWORD PTR [ebp+0xc]
   110a3:	push   edi
   110a4:	mov    edi,ecx
   110a6:	cmp    esi,0xffffffff
   110a9:	jne    0x110ba
   110ab:	mov    esi,DWORD PTR [ebp+0x8]
   110ae:	lea    ecx,[esi+0x1]
   110b1:	mov    al,BYTE PTR [esi]
   110b3:	inc    esi
   110b4:	test   al,al
   110b6:	jne    0x110b1
   110b8:	sub    esi,ecx
   110ba:	lea    eax,[esi+0x1]
   110bd:	push   eax
   110be:	call   0x10a52
   110c3:	pop    ecx
   110c4:	mov    DWORD PTR [edi],eax
   110c6:	test   eax,eax
   110c8:	jne    0x110d5
   110ca:	push   0xc000009a
   110cf:	call   DWORD PTR ds:0x1ee18
   110d5:	mov    eax,DWORD PTR [edi]
   110d7:	push   esi
   110d8:	push   DWORD PTR [ebp+0x8]
   110db:	mov    BYTE PTR [esi+eax*1],0x0
   110df:	push   DWORD PTR [edi]
   110e1:	call   0x1da8a
   110e6:	add    esp,0xc
   110e9:	mov    DWORD PTR [edi+0x4],esi
   110ec:	pop    edi
   110ed:	pop    esi
   110ee:	pop    ebp
   110ef:	ret    0x8
   110f2:	int3   
   110f3:	int3   
   110f4:	int3   
   110f5:	int3   
   110f6:	int3   
   110f7:	int3   
   110f8:	mov    edi,edi
   110fa:	push   ebp
   110fb:	mov    ebp,esp
   110fd:	mov    eax,DWORD PTR [ebp+0x8]
   11100:	mov    edx,DWORD PTR [ebp+0xc]
   11103:	push   esi
   11104:	xor    esi,esi
   11106:	jmp    0x1112b
   11108:	mov    ecx,eax
   1110a:	and    ecx,0x1
   1110d:	or     ecx,esi
   1110f:	push   esi
   11110:	jne    0x1111d
   11112:	push   0x2
   11114:	push   edx
   11115:	push   eax
   11116:	call   0x1da66
   1111b:	jmp    0x1112b
   1111d:	push   0x3
   1111f:	push   edx
   11120:	push   eax
   11121:	call   0x1da5a
   11126:	add    eax,0x1
   11129:	adc    edx,esi
   1112b:	cmp    eax,0x4
   1112e:	jne    0x11108
   11130:	cmp    edx,esi
   11132:	jne    0x11108
   11134:	pop    esi
   11135:	pop    ebp
   11136:	ret    0x8
   11139:	int3   
   1113a:	int3   
   1113b:	int3   
   1113c:	int3   
   1113d:	int3   
   1113e:	mov    edi,edi
   11140:	push   ebp
   11141:	mov    ebp,esp
   11143:	push   esi
   11144:	push   edi
   11145:	mov    edi,DWORD PTR [ebp+0xc]
   11148:	mov    esi,ecx
   1114a:	cmp    edi,0xffffffff
   1114d:	jne    0x11159
   1114f:	push   DWORD PTR [ebp+0x8]
   11152:	call   0x109ac
   11157:	mov    edi,eax
   11159:	xor    ecx,ecx
   1115b:	push   0x2
   1115d:	pop    edx
   1115e:	lea    eax,[edi+0x1]
   11161:	mul    edx
   11163:	seto   cl
   11166:	neg    ecx
   11168:	or     ecx,eax
   1116a:	push   ecx
   1116b:	call   0x10a52
   11170:	pop    ecx
   11171:	mov    DWORD PTR [esi],eax
   11173:	test   eax,eax
   11175:	jne    0x11182
   11177:	push   0xc000009a
   1117c:	call   DWORD PTR ds:0x1ee18
   11182:	mov    ecx,DWORD PTR [esi]
   11184:	lea    eax,[edi+edi*1]
   11187:	push   eax
   11188:	push   DWORD PTR [ebp+0x8]
   1118b:	xor    edx,edx
   1118d:	mov    WORD PTR [eax+ecx*1],dx
   11191:	push   DWORD PTR [esi]
   11193:	call   0x1da8a
   11198:	add    esp,0xc
   1119b:	mov    DWORD PTR [esi+0x4],edi
   1119e:	pop    edi
   1119f:	pop    esi
   111a0:	pop    ebp
   111a1:	ret    0x8
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	int3   
   111a9:	int3   
   111aa:	mov    edi,edi
   111ac:	push   ebp
   111ad:	mov    ebp,esp
   111af:	mov    eax,DWORD PTR [ebp+0x8]
   111b2:	mov    edx,DWORD PTR ds:0x78ab0
   111b8:	jmp    0x111bc
   111ba:	mov    eax,ecx
   111bc:	mov    ecx,DWORD PTR [eax+0x8]
   111bf:	cmp    ecx,edx
   111c1:	jne    0x111ba
   111c3:	pop    ebp
   111c4:	ret    0x4
   111c7:	int3   
   111c8:	int3   
   111c9:	int3   
   111ca:	int3   
   111cb:	int3   
   111cc:	mov    edi,edi
   111ce:	push   ebp
   111cf:	mov    ebp,esp
   111d1:	mov    eax,DWORD PTR [ebp+0x8]
   111d4:	mov    edx,DWORD PTR ds:0x78ab0
   111da:	jmp    0x111de
   111dc:	mov    eax,ecx
   111de:	mov    ecx,DWORD PTR [eax]
   111e0:	cmp    ecx,edx
   111e2:	jne    0x111dc
   111e4:	pop    ebp
   111e5:	ret    0x4
   111e8:	int3   
   111e9:	int3   
   111ea:	int3   
   111eb:	int3   
   111ec:	int3   
   111ed:	int3   
   111ee:	mov    edi,edi
   111f0:	push   ebp
   111f1:	mov    ebp,esp
   111f3:	mov    eax,DWORD PTR [ebp+0x8]
   111f6:	mov    edx,DWORD PTR ds:0x78ab4
   111fc:	jmp    0x11200
   111fe:	mov    eax,ecx
   11200:	mov    ecx,DWORD PTR [eax+0x8]
   11203:	cmp    ecx,edx
   11205:	jne    0x111fe
   11207:	pop    ebp
   11208:	ret    0x4
   1120b:	int3   
   1120c:	int3   
   1120d:	int3   
   1120e:	int3   
   1120f:	int3   
   11210:	mov    edi,edi
   11212:	push   ebp
   11213:	mov    ebp,esp
   11215:	mov    eax,DWORD PTR [ebp+0x8]
   11218:	mov    edx,DWORD PTR ds:0x78ab4
   1121e:	jmp    0x11222
   11220:	mov    eax,ecx
   11222:	mov    ecx,DWORD PTR [eax]
   11224:	cmp    ecx,edx
   11226:	jne    0x11220
   11228:	pop    ebp
   11229:	ret    0x4
   1122c:	int3   
   1122d:	int3   
   1122e:	int3   
   1122f:	int3   
   11230:	int3   
   11231:	int3   
   11232:	mov    edi,edi
   11234:	push   ebp
   11235:	mov    ebp,esp
   11237:	mov    eax,DWORD PTR [ebp+0x8]
   1123a:	mov    edx,DWORD PTR ds:0x78ab8
   11240:	jmp    0x11244
   11242:	mov    eax,ecx
   11244:	mov    ecx,DWORD PTR [eax+0x8]
   11247:	cmp    ecx,edx
   11249:	jne    0x11242
   1124b:	pop    ebp
   1124c:	ret    0x4
   1124f:	int3   
   11250:	int3   
   11251:	int3   
   11252:	int3   
   11253:	int3   
   11254:	mov    edi,edi
   11256:	push   ebp
   11257:	mov    ebp,esp
   11259:	mov    eax,DWORD PTR [ebp+0x8]
   1125c:	mov    edx,DWORD PTR ds:0x78ab8
   11262:	jmp    0x11266
   11264:	mov    eax,ecx
   11266:	mov    ecx,DWORD PTR [eax]
   11268:	cmp    ecx,edx
   1126a:	jne    0x11264
   1126c:	pop    ebp
   1126d:	ret    0x4
   11270:	int3   
   11271:	int3   
   11272:	int3   
   11273:	int3   
   11274:	int3   
   11275:	int3   
   11276:	mov    edi,edi
   11278:	push   esi
   11279:	mov    esi,ecx
   1127b:	mov    ecx,DWORD PTR [esi]
   1127d:	cmp    DWORD PTR [ecx+0x14],0x0
   11281:	jne    0x11290
   11283:	mov    eax,DWORD PTR [ecx+0x4]
   11286:	cmp    DWORD PTR [eax+0x4],ecx
   11289:	jne    0x11290
   1128b:	mov    eax,DWORD PTR [ecx+0x8]
   1128e:	jmp    0x112ad
   11290:	mov    eax,DWORD PTR [ecx]
   11292:	cmp    eax,DWORD PTR ds:0x78ab0
   11298:	je     0x112a6
   1129a:	push   eax
   1129b:	call   0x111aa
   112a0:	jmp    0x112ad
   112a2:	mov    DWORD PTR [esi],eax
   112a4:	mov    ecx,eax
   112a6:	mov    eax,DWORD PTR [ecx+0x4]
   112a9:	cmp    ecx,DWORD PTR [eax]
   112ab:	je     0x112a2
   112ad:	mov    DWORD PTR [esi],eax
   112af:	pop    esi
   112b0:	ret    
   112b1:	int3   
   112b2:	int3   
   112b3:	int3   
   112b4:	int3   
   112b5:	int3   
   112b6:	mov    edi,edi
   112b8:	push   esi
   112b9:	mov    esi,ecx
   112bb:	mov    ecx,DWORD PTR [esi]
   112bd:	mov    eax,DWORD PTR [ecx+0x8]
   112c0:	cmp    eax,DWORD PTR ds:0x78ab0
   112c6:	je     0x112d4
   112c8:	push   eax
   112c9:	call   0x111cc
   112ce:	jmp    0x112e3
   112d0:	mov    DWORD PTR [esi],eax
   112d2:	mov    ecx,eax
   112d4:	mov    eax,DWORD PTR [ecx+0x4]
   112d7:	cmp    ecx,DWORD PTR [eax+0x8]
   112da:	je     0x112d0
   112dc:	mov    ecx,DWORD PTR [esi]
   112de:	cmp    DWORD PTR [ecx+0x8],eax
   112e1:	je     0x112e5
   112e3:	mov    DWORD PTR [esi],eax
   112e5:	pop    esi
   112e6:	ret    
   112e7:	int3   
   112e8:	int3   
   112e9:	int3   
   112ea:	int3   
   112eb:	int3   
   112ec:	mov    edi,edi
   112ee:	push   ebp
   112ef:	mov    ebp,esp
   112f1:	mov    edx,DWORD PTR [ebp+0x8]
   112f4:	mov    eax,DWORD PTR [edx+0x8]
   112f7:	push   esi
   112f8:	mov    esi,DWORD PTR [eax]
   112fa:	mov    DWORD PTR [edx+0x8],esi
   112fd:	mov    esi,DWORD PTR [eax]
   112ff:	cmp    esi,DWORD PTR ds:0x78abc
   11305:	je     0x1130a
   11307:	mov    DWORD PTR [esi+0x4],edx
   1130a:	mov    esi,DWORD PTR [edx+0x4]
   1130d:	mov    DWORD PTR [eax+0x4],esi
   11310:	mov    ecx,DWORD PTR [ecx+0x4]
   11313:	pop    esi
   11314:	cmp    edx,DWORD PTR [ecx+0x4]
   11317:	jne    0x1131e
   11319:	mov    DWORD PTR [ecx+0x4],eax
   1131c:	jmp    0x1132c
   1131e:	mov    ecx,DWORD PTR [edx+0x4]
   11321:	cmp    edx,DWORD PTR [ecx]
   11323:	jne    0x11329
   11325:	mov    DWORD PTR [ecx],eax
   11327:	jmp    0x1132c
   11329:	mov    DWORD PTR [ecx+0x8],eax
   1132c:	mov    DWORD PTR [eax],edx
   1132e:	mov    DWORD PTR [edx+0x4],eax
   11331:	pop    ebp
   11332:	ret    0x4
   11335:	int3   
   11336:	int3   
   11337:	int3   
   11338:	int3   
   11339:	int3   
   1133a:	mov    edi,edi
   1133c:	push   ebp
   1133d:	mov    ebp,esp
   1133f:	mov    eax,DWORD PTR [ebp+0x8]
   11342:	mov    edx,DWORD PTR ds:0x78abc
   11348:	jmp    0x1134c
   1134a:	mov    eax,ecx
   1134c:	mov    ecx,DWORD PTR [eax+0x8]
   1134f:	cmp    ecx,edx
   11351:	jne    0x1134a
   11353:	pop    ebp
   11354:	ret    0x4
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	int3   
   1135b:	int3   
   1135c:	mov    edi,edi
   1135e:	push   ebp
   1135f:	mov    ebp,esp
   11361:	mov    edx,DWORD PTR [ebp+0x8]
   11364:	mov    eax,DWORD PTR [edx]
   11366:	push   esi
   11367:	mov    esi,DWORD PTR [eax+0x8]
   1136a:	mov    DWORD PTR [edx],esi
   1136c:	mov    esi,DWORD PTR [eax+0x8]
   1136f:	cmp    esi,DWORD PTR ds:0x78abc
   11375:	je     0x1137a
   11377:	mov    DWORD PTR [esi+0x4],edx
   1137a:	mov    esi,DWORD PTR [edx+0x4]
   1137d:	mov    DWORD PTR [eax+0x4],esi
   11380:	mov    ecx,DWORD PTR [ecx+0x4]
   11383:	pop    esi
   11384:	cmp    edx,DWORD PTR [ecx+0x4]
   11387:	jne    0x1138e
   11389:	mov    DWORD PTR [ecx+0x4],eax
   1138c:	jmp    0x1139d
   1138e:	mov    ecx,DWORD PTR [edx+0x4]
   11391:	cmp    edx,DWORD PTR [ecx+0x8]
   11394:	jne    0x1139b
   11396:	mov    DWORD PTR [ecx+0x8],eax
   11399:	jmp    0x1139d
   1139b:	mov    DWORD PTR [ecx],eax
   1139d:	mov    DWORD PTR [eax+0x8],edx
   113a0:	mov    DWORD PTR [edx+0x4],eax
   113a3:	pop    ebp
   113a4:	ret    0x4
   113a7:	int3   
   113a8:	int3   
   113a9:	int3   
   113aa:	int3   
   113ab:	int3   
   113ac:	mov    edi,edi
   113ae:	push   esi
   113af:	mov    esi,ecx
   113b1:	mov    ecx,DWORD PTR [esi]
   113b3:	cmp    DWORD PTR [ecx+0x68],0x0
   113b7:	jne    0x113c6
   113b9:	mov    eax,DWORD PTR [ecx+0x4]
   113bc:	cmp    DWORD PTR [eax+0x4],ecx
   113bf:	jne    0x113c6
   113c1:	mov    eax,DWORD PTR [ecx+0x8]
   113c4:	jmp    0x113e3
   113c6:	mov    eax,DWORD PTR [ecx]
   113c8:	cmp    eax,DWORD PTR ds:0x78abc
   113ce:	je     0x113dc
   113d0:	push   eax
   113d1:	call   0x1133a
   113d6:	jmp    0x113e3
   113d8:	mov    DWORD PTR [esi],eax
   113da:	mov    ecx,eax
   113dc:	mov    eax,DWORD PTR [ecx+0x4]
   113df:	cmp    ecx,DWORD PTR [eax]
   113e1:	je     0x113d8
   113e3:	mov    DWORD PTR [esi],eax
   113e5:	pop    esi
   113e6:	ret    
   113e7:	int3   
   113e8:	int3   
   113e9:	int3   
   113ea:	int3   
   113eb:	int3   
   113ec:	mov    edi,edi
   113ee:	push   ebp
   113ef:	mov    ebp,esp
   113f1:	mov    eax,DWORD PTR [ebp+0x8]
   113f4:	mov    edx,DWORD PTR ds:0x78ac0
   113fa:	jmp    0x113fe
   113fc:	mov    eax,ecx
   113fe:	mov    ecx,DWORD PTR [eax+0x8]
   11401:	cmp    ecx,edx
   11403:	jne    0x113fc
   11405:	pop    ebp
   11406:	ret    0x4
   11409:	int3   
   1140a:	int3   
   1140b:	int3   
   1140c:	int3   
   1140d:	int3   
   1140e:	mov    edi,edi
   11410:	push   ebp
   11411:	mov    ebp,esp
   11413:	mov    eax,DWORD PTR [ebp+0x8]
   11416:	mov    edx,DWORD PTR ds:0x78ac0
   1141c:	jmp    0x11420
   1141e:	mov    eax,ecx
   11420:	mov    ecx,DWORD PTR [eax]
   11422:	cmp    ecx,edx
   11424:	jne    0x1141e
   11426:	pop    ebp
   11427:	ret    0x4
   1142a:	int3   
   1142b:	int3   
   1142c:	int3   
   1142d:	int3   
   1142e:	int3   
   1142f:	int3   
   11430:	mov    edi,edi
   11432:	push   esi
   11433:	mov    esi,ecx
   11435:	mov    ecx,DWORD PTR [esi]
   11437:	cmp    DWORD PTR [ecx+0x1c],0x0
   1143b:	jne    0x1144a
   1143d:	mov    eax,DWORD PTR [ecx+0x4]
   11440:	cmp    DWORD PTR [eax+0x4],ecx
   11443:	jne    0x1144a
   11445:	mov    eax,DWORD PTR [ecx+0x8]
   11448:	jmp    0x11467
   1144a:	mov    eax,DWORD PTR [ecx]
   1144c:	cmp    eax,DWORD PTR ds:0x78ac0
   11452:	je     0x11460
   11454:	push   eax
   11455:	call   0x113ec
   1145a:	jmp    0x11467
   1145c:	mov    DWORD PTR [esi],eax
   1145e:	mov    ecx,eax
   11460:	mov    eax,DWORD PTR [ecx+0x4]
   11463:	cmp    ecx,DWORD PTR [eax]
   11465:	je     0x1145c
   11467:	mov    DWORD PTR [esi],eax
   11469:	pop    esi
   1146a:	ret    
   1146b:	int3   
   1146c:	int3   
   1146d:	int3   
   1146e:	int3   
   1146f:	int3   
   11470:	mov    edi,edi
   11472:	push   ebp
   11473:	mov    ebp,esp
   11475:	mov    eax,DWORD PTR [ebp+0x8]
   11478:	mov    edx,DWORD PTR ds:0x78ac4
   1147e:	jmp    0x11482
   11480:	mov    eax,ecx
   11482:	mov    ecx,DWORD PTR [eax+0x8]
   11485:	cmp    ecx,edx
   11487:	jne    0x11480
   11489:	pop    ebp
   1148a:	ret    0x4
   1148d:	int3   
   1148e:	int3   
   1148f:	int3   
   11490:	int3   
   11491:	int3   
   11492:	mov    edi,edi
   11494:	push   ebp
   11495:	mov    ebp,esp
   11497:	mov    eax,DWORD PTR [ebp+0x8]
   1149a:	mov    edx,DWORD PTR ds:0x78ac4
   114a0:	jmp    0x114a4
   114a2:	mov    eax,ecx
   114a4:	mov    ecx,DWORD PTR [eax]
   114a6:	cmp    ecx,edx
   114a8:	jne    0x114a2
   114aa:	pop    ebp
   114ab:	ret    0x4
   114ae:	int3   
   114af:	int3   
   114b0:	int3   
   114b1:	int3   
   114b2:	int3   
   114b3:	int3   
   114b4:	mov    edi,edi
   114b6:	push   esi
   114b7:	mov    esi,ecx
   114b9:	mov    ecx,DWORD PTR [esi]
   114bb:	cmp    DWORD PTR [ecx+0x14],0x0
   114bf:	jne    0x114ce
   114c1:	mov    eax,DWORD PTR [ecx+0x4]
   114c4:	cmp    DWORD PTR [eax+0x4],ecx
   114c7:	jne    0x114ce
   114c9:	mov    eax,DWORD PTR [ecx+0x8]
   114cc:	jmp    0x114eb
   114ce:	mov    eax,DWORD PTR [ecx]
   114d0:	cmp    eax,DWORD PTR ds:0x78ac4
   114d6:	je     0x114e4
   114d8:	push   eax
   114d9:	call   0x11470
   114de:	jmp    0x114eb
   114e0:	mov    DWORD PTR [esi],eax
   114e2:	mov    ecx,eax
   114e4:	mov    eax,DWORD PTR [ecx+0x4]
   114e7:	cmp    ecx,DWORD PTR [eax]
   114e9:	je     0x114e0
   114eb:	mov    DWORD PTR [esi],eax
   114ed:	pop    esi
   114ee:	ret    
   114ef:	int3   
   114f0:	int3   
   114f1:	int3   
   114f2:	int3   
   114f3:	int3   
   114f4:	mov    edi,edi
   114f6:	push   esi
   114f7:	mov    esi,ecx
   114f9:	mov    ecx,DWORD PTR [esi]
   114fb:	cmp    DWORD PTR [ecx+0x70],0x0
   114ff:	jne    0x1150e
   11501:	mov    eax,DWORD PTR [ecx+0x4]
   11504:	cmp    DWORD PTR [eax+0x4],ecx
   11507:	jne    0x1150e
   11509:	mov    eax,DWORD PTR [ecx+0x8]
   1150c:	jmp    0x1152b
   1150e:	mov    eax,DWORD PTR [ecx]
   11510:	cmp    eax,DWORD PTR ds:0x78ab8
   11516:	je     0x11524
   11518:	push   eax
   11519:	call   0x11232
   1151e:	jmp    0x1152b
   11520:	mov    DWORD PTR [esi],eax
   11522:	mov    ecx,eax
   11524:	mov    eax,DWORD PTR [ecx+0x4]
   11527:	cmp    ecx,DWORD PTR [eax]
   11529:	je     0x11520
   1152b:	mov    DWORD PTR [esi],eax
   1152d:	pop    esi
   1152e:	ret    
   1152f:	int3   
   11530:	int3   
   11531:	int3   
   11532:	int3   
   11533:	int3   
   11534:	mov    edi,edi
   11536:	push   esi
   11537:	mov    esi,ecx
   11539:	mov    ecx,DWORD PTR [esi]
   1153b:	mov    eax,DWORD PTR [ecx+0x8]
   1153e:	cmp    eax,DWORD PTR ds:0x78ac0
   11544:	je     0x11552
   11546:	push   eax
   11547:	call   0x1140e
   1154c:	jmp    0x11561
   1154e:	mov    DWORD PTR [esi],eax
   11550:	mov    ecx,eax
   11552:	mov    eax,DWORD PTR [ecx+0x4]
   11555:	cmp    ecx,DWORD PTR [eax+0x8]
   11558:	je     0x1154e
   1155a:	mov    ecx,DWORD PTR [esi]
   1155c:	cmp    DWORD PTR [ecx+0x8],eax
   1155f:	je     0x11563
   11561:	mov    DWORD PTR [esi],eax
   11563:	pop    esi
   11564:	ret    
   11565:	int3   
   11566:	int3   
   11567:	int3   
   11568:	int3   
   11569:	int3   
   1156a:	mov    edi,edi
   1156c:	push   esi
   1156d:	mov    esi,ecx
   1156f:	mov    ecx,DWORD PTR [esi]
   11571:	mov    eax,DWORD PTR [ecx+0x8]
   11574:	cmp    eax,DWORD PTR ds:0x78ac4
   1157a:	je     0x11588
   1157c:	push   eax
   1157d:	call   0x11492
   11582:	jmp    0x11597
   11584:	mov    DWORD PTR [esi],eax
   11586:	mov    ecx,eax
   11588:	mov    eax,DWORD PTR [ecx+0x4]
   1158b:	cmp    ecx,DWORD PTR [eax+0x8]
   1158e:	je     0x11584
   11590:	mov    ecx,DWORD PTR [esi]
   11592:	cmp    DWORD PTR [ecx+0x8],eax
   11595:	je     0x11599
   11597:	mov    DWORD PTR [esi],eax
   11599:	pop    esi
   1159a:	ret    
   1159b:	int3   
   1159c:	int3   
   1159d:	int3   
   1159e:	int3   
   1159f:	int3   
   115a0:	mov    edi,edi
   115a2:	push   ebp
   115a3:	mov    ebp,esp
   115a5:	mov    eax,DWORD PTR [ebp+0x8]
   115a8:	mov    edx,DWORD PTR ds:0x78acc
   115ae:	jmp    0x115b2
   115b0:	mov    eax,ecx
   115b2:	mov    ecx,DWORD PTR [eax+0x8]
   115b5:	cmp    ecx,edx
   115b7:	jne    0x115b0
   115b9:	pop    ebp
   115ba:	ret    0x4
   115bd:	int3   
   115be:	int3   
   115bf:	int3   
   115c0:	int3   
   115c1:	int3   
   115c2:	mov    edi,edi
   115c4:	push   ebp
   115c5:	mov    ebp,esp
   115c7:	push   ecx
   115c8:	push   ecx
   115c9:	mov    eax,DWORD PTR [ebp+0x8]
   115cc:	mov    DWORD PTR [ebp-0x4],eax
   115cf:	lea    ecx,[eax+0x2]
   115d2:	mov    dx,WORD PTR [eax]
   115d5:	inc    eax
   115d6:	inc    eax
   115d7:	test   dx,dx
   115da:	jne    0x115d2
   115dc:	sub    eax,ecx
   115de:	sar    eax,1
   115e0:	mov    WORD PTR [ebp-0x8],ax
   115e4:	mov    eax,DWORD PTR [ebp-0x8]
   115e7:	add    eax,eax
   115e9:	mov    WORD PTR [ebp-0x6],ax
   115ed:	mov    WORD PTR [ebp-0x8],ax
   115f1:	lea    eax,[ebp-0x8]
   115f4:	push   eax
   115f5:	call   DWORD PTR ds:0x1ee38
   115fb:	leave  
   115fc:	ret    0x4
   115ff:	int3   
   11600:	int3   
   11601:	int3   
   11602:	int3   
   11603:	int3   
   11604:	mov    edi,edi
   11606:	push   ebp
   11607:	mov    ebp,esp
   11609:	cmp    DWORD PTR [ebp+0x8],0x0
   1160d:	jge    0x11613
   1160f:	and    DWORD PTR [ebp+0x8],0x0
   11613:	push   DWORD PTR [ebp+0x8]
   11616:	call   0x10a52
   1161b:	pop    ecx
   1161c:	pop    ebp
   1161d:	ret    0x8
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	int3   
   11625:	int3   
   11626:	mov    edi,edi
   11628:	push   ebp
   11629:	mov    ebp,esp
   1162b:	mov    eax,DWORD PTR [ebp+0x8]
   1162e:	test   eax,eax
   11630:	je     0x11639
   11632:	mov    ecx,DWORD PTR [ebp+0xc]
   11635:	mov    ecx,DWORD PTR [ecx]
   11637:	mov    DWORD PTR [eax],ecx
   11639:	pop    ebp
   1163a:	ret    0x8
   1163d:	int3   
   1163e:	int3   
   1163f:	int3   
   11640:	int3   
   11641:	int3   
   11642:	mov    edi,edi
   11644:	push   ebp
   11645:	mov    ebp,esp
   11647:	mov    eax,DWORD PTR [ebp+0x8]
   1164a:	test   eax,eax
   1164c:	je     0x1165b
   1164e:	mov    ecx,DWORD PTR [ebp+0xc]
   11651:	mov    edx,DWORD PTR [ecx]
   11653:	mov    DWORD PTR [eax],edx
   11655:	mov    ecx,DWORD PTR [ecx+0x4]
   11658:	mov    DWORD PTR [eax+0x4],ecx
   1165b:	pop    ebp
   1165c:	ret    0x8
   1165f:	int3   
   11660:	int3   
   11661:	int3   
   11662:	int3   
   11663:	int3   
   11664:	mov    edi,edi
   11666:	push   ebp
   11667:	mov    ebp,esp
   11669:	push   esi
   1166a:	mov    esi,ecx
   1166c:	call   0x1107c
   11671:	test   BYTE PTR [ebp+0x8],0x1
   11675:	je     0x1167e
   11677:	push   esi
   11678:	call   0x1d9fc
   1167d:	pop    ecx
   1167e:	mov    eax,esi
   11680:	pop    esi
   11681:	pop    ebp
   11682:	ret    0x4
   11685:	int3   
   11686:	int3   
   11687:	int3   
   11688:	int3   
   11689:	int3   
   1168a:	test   BYTE PTR ds:0x78ad4,0x1
   11691:	jne    0x116a9
   11693:	or     DWORD PTR ds:0x78ad4,0x1
   1169a:	push   0x1defc
   1169f:	call   0x115c2
   116a4:	mov    ds:0x78ad0,eax
   116a9:	mov    eax,ds:0x78ad0
   116ae:	ret    
   116af:	int3   
   116b0:	int3   
   116b1:	int3   
   116b2:	int3   
   116b3:	int3   
   116b4:	test   BYTE PTR ds:0x78adc,0x1
   116bb:	jne    0x116d3
   116bd:	or     DWORD PTR ds:0x78adc,0x1
   116c4:	push   0x1df18
   116c9:	call   0x115c2
   116ce:	mov    ds:0x78ad8,eax
   116d3:	mov    eax,ds:0x78ad8
   116d8:	ret    
   116d9:	int3   
   116da:	int3   
   116db:	int3   
   116dc:	int3   
   116dd:	int3   
   116de:	test   BYTE PTR ds:0x78ae4,0x1
   116e5:	jne    0x116fd
   116e7:	or     DWORD PTR ds:0x78ae4,0x1
   116ee:	push   0x1df50
   116f3:	call   0x115c2
   116f8:	mov    ds:0x78ae0,eax
   116fd:	mov    eax,ds:0x78ae0
   11702:	ret    
   11703:	int3   
   11704:	int3   
   11705:	int3   
   11706:	int3   
   11707:	int3   
   11708:	test   BYTE PTR ds:0x78aec,0x1
   1170f:	jne    0x11727
   11711:	or     DWORD PTR ds:0x78aec,0x1
   11718:	push   0x1df72
   1171d:	call   0x115c2
   11722:	mov    ds:0x78ae8,eax
   11727:	mov    eax,ds:0x78ae8
   1172c:	ret    
   1172d:	int3   
   1172e:	int3   
   1172f:	int3   
   11730:	int3   
   11731:	int3   
   11732:	test   BYTE PTR ds:0x78af4,0x1
   11739:	jne    0x11751
   1173b:	or     DWORD PTR ds:0x78af4,0x1
   11742:	push   0x1dfb2
   11747:	call   0x115c2
   1174c:	mov    ds:0x78af0,eax
   11751:	mov    eax,ds:0x78af0
   11756:	ret    
   11757:	int3   
   11758:	int3   
   11759:	int3   
   1175a:	int3   
   1175b:	int3   
   1175c:	test   BYTE PTR ds:0x78afc,0x1
   11763:	jne    0x1177b
   11765:	or     DWORD PTR ds:0x78afc,0x1
   1176c:	push   0x1dfc8
   11771:	call   0x115c2
   11776:	mov    ds:0x78af8,eax
   1177b:	mov    eax,ds:0x78af8
   11780:	ret    
   11781:	int3   
   11782:	int3   
   11783:	int3   
   11784:	int3   
   11785:	int3   
   11786:	test   BYTE PTR ds:0x78b04,0x1
   1178d:	jne    0x117a5
   1178f:	or     DWORD PTR ds:0x78b04,0x1
   11796:	push   0x1dffc
   1179b:	call   0x115c2
   117a0:	mov    ds:0x78b00,eax
   117a5:	mov    eax,ds:0x78b00
   117aa:	ret    
   117ab:	int3   
   117ac:	int3   
   117ad:	int3   
   117ae:	int3   
   117af:	int3   
   117b0:	test   BYTE PTR ds:0x78b0c,0x1
   117b7:	jne    0x117cf
   117b9:	or     DWORD PTR ds:0x78b0c,0x1
   117c0:	push   0x1e02e
   117c5:	call   0x115c2
   117ca:	mov    ds:0x78b08,eax
   117cf:	mov    eax,ds:0x78b08
   117d4:	ret    
   117d5:	int3   
   117d6:	int3   
   117d7:	int3   
   117d8:	int3   
   117d9:	int3   
   117da:	test   BYTE PTR ds:0x78b14,0x1
   117e1:	jne    0x117f9
   117e3:	or     DWORD PTR ds:0x78b14,0x1
   117ea:	push   0x1e042
   117ef:	call   0x115c2
   117f4:	mov    ds:0x78b10,eax
   117f9:	mov    eax,ds:0x78b10
   117fe:	ret    
   117ff:	int3   
   11800:	int3   
   11801:	int3   
   11802:	int3   
   11803:	int3   
   11804:	test   BYTE PTR ds:0x78b1c,0x1
   1180b:	jne    0x11823
   1180d:	or     DWORD PTR ds:0x78b1c,0x1
   11814:	push   0x1e05a
   11819:	call   0x115c2
   1181e:	mov    ds:0x78b18,eax
   11823:	mov    eax,ds:0x78b18
   11828:	ret    
   11829:	int3   
   1182a:	int3   
   1182b:	int3   
   1182c:	int3   
   1182d:	int3   
   1182e:	test   BYTE PTR ds:0x78b24,0x1
   11835:	jne    0x1184d
   11837:	or     DWORD PTR ds:0x78b24,0x1
   1183e:	push   0x1e076
   11843:	call   0x115c2
   11848:	mov    ds:0x78b20,eax
   1184d:	mov    eax,ds:0x78b20
   11852:	ret    
   11853:	int3   
   11854:	int3   
   11855:	int3   
   11856:	int3   
   11857:	int3   
   11858:	test   BYTE PTR ds:0x78b2c,0x1
   1185f:	jne    0x11877
   11861:	or     DWORD PTR ds:0x78b2c,0x1
   11868:	push   0x1e0b0
   1186d:	call   0x115c2
   11872:	mov    ds:0x78b28,eax
   11877:	mov    eax,ds:0x78b28
   1187c:	ret    
   1187d:	int3   
   1187e:	int3   
   1187f:	int3   
   11880:	int3   
   11881:	int3   
   11882:	test   BYTE PTR ds:0x78b34,0x1
   11889:	jne    0x118a1
   1188b:	or     DWORD PTR ds:0x78b34,0x1
   11892:	push   0x1e0ca
   11897:	call   0x115c2
   1189c:	mov    ds:0x78b30,eax
   118a1:	mov    eax,ds:0x78b30
   118a6:	ret    
   118a7:	int3   
   118a8:	int3   
   118a9:	int3   
   118aa:	int3   
   118ab:	int3   
   118ac:	test   BYTE PTR ds:0x78b3c,0x1
   118b3:	jne    0x118cb
   118b5:	or     DWORD PTR ds:0x78b3c,0x1
   118bc:	push   0x1e0ec
   118c1:	call   0x115c2
   118c6:	mov    ds:0x78b38,eax
   118cb:	mov    eax,ds:0x78b38
   118d0:	ret    
   118d1:	int3   
   118d2:	int3   
   118d3:	int3   
   118d4:	int3   
   118d5:	int3   
   118d6:	test   BYTE PTR ds:0x78b44,0x1
   118dd:	jne    0x118f5
   118df:	or     DWORD PTR ds:0x78b44,0x1
   118e6:	push   0x1e126
   118eb:	call   0x115c2
   118f0:	mov    ds:0x78b40,eax
   118f5:	mov    eax,ds:0x78b40
   118fa:	ret    
   118fb:	int3   
   118fc:	int3   
   118fd:	int3   
   118fe:	int3   
   118ff:	int3   
   11900:	test   BYTE PTR ds:0x78b4c,0x1
   11907:	jne    0x1191f
   11909:	or     DWORD PTR ds:0x78b4c,0x1
   11910:	push   0x1e14c
   11915:	call   0x115c2
   1191a:	mov    ds:0x78b48,eax
   1191f:	mov    eax,ds:0x78b48
   11924:	ret    
   11925:	int3   
   11926:	int3   
   11927:	int3   
   11928:	int3   
   11929:	int3   
   1192a:	test   BYTE PTR ds:0x78b54,0x1
   11931:	jne    0x11949
   11933:	or     DWORD PTR ds:0x78b54,0x1
   1193a:	push   0x1e17c
   1193f:	call   0x115c2
   11944:	mov    ds:0x78b50,eax
   11949:	mov    eax,ds:0x78b50
   1194e:	ret    
   1194f:	int3   
   11950:	int3   
   11951:	int3   
   11952:	int3   
   11953:	int3   
   11954:	test   BYTE PTR ds:0x78b5c,0x1
   1195b:	jne    0x11973
   1195d:	or     DWORD PTR ds:0x78b5c,0x1
   11964:	push   0x1e1ae
   11969:	call   0x115c2
   1196e:	mov    ds:0x78b58,eax
   11973:	mov    eax,ds:0x78b58
   11978:	ret    
   11979:	int3   
   1197a:	int3   
   1197b:	int3   
   1197c:	int3   
   1197d:	int3   
   1197e:	test   BYTE PTR ds:0x78b64,0x1
   11985:	jne    0x1199d
   11987:	or     DWORD PTR ds:0x78b64,0x1
   1198e:	push   0x1e1be
   11993:	call   0x115c2
   11998:	mov    ds:0x78b60,eax
   1199d:	mov    eax,ds:0x78b60
   119a2:	ret    
   119a3:	int3   
   119a4:	int3   
   119a5:	int3   
   119a6:	int3   
   119a7:	int3   
   119a8:	test   BYTE PTR ds:0x78b6c,0x1
   119af:	jne    0x119c7
   119b1:	or     DWORD PTR ds:0x78b6c,0x1
   119b8:	push   0x1e1d2
   119bd:	call   0x115c2
   119c2:	mov    ds:0x78b68,eax
   119c7:	mov    eax,ds:0x78b68
   119cc:	ret    
   119cd:	int3   
   119ce:	int3   
   119cf:	int3   
   119d0:	int3   
   119d1:	int3   
   119d2:	test   BYTE PTR ds:0x78b74,0x1
   119d9:	jne    0x119f1
   119db:	or     DWORD PTR ds:0x78b74,0x1
   119e2:	push   0x1e1f0
   119e7:	call   0x115c2
   119ec:	mov    ds:0x78b70,eax
   119f1:	mov    eax,ds:0x78b70
   119f6:	ret    
   119f7:	int3   
   119f8:	int3   
   119f9:	int3   
   119fa:	int3   
   119fb:	int3   
   119fc:	test   BYTE PTR ds:0x78b7c,0x1
   11a03:	jne    0x11a1b
   11a05:	or     DWORD PTR ds:0x78b7c,0x1
   11a0c:	push   0x1e20a
   11a11:	call   0x115c2
   11a16:	mov    ds:0x78b78,eax
   11a1b:	mov    eax,ds:0x78b78
   11a20:	ret    
   11a21:	int3   
   11a22:	int3   
   11a23:	int3   
   11a24:	int3   
   11a25:	int3   
   11a26:	test   BYTE PTR ds:0x78b84,0x1
   11a2d:	jne    0x11a45
   11a2f:	or     DWORD PTR ds:0x78b84,0x1
   11a36:	push   0x1e222
   11a3b:	call   0x115c2
   11a40:	mov    ds:0x78b80,eax
   11a45:	mov    eax,ds:0x78b80
   11a4a:	ret    
   11a4b:	int3   
   11a4c:	int3   
   11a4d:	int3   
   11a4e:	int3   
   11a4f:	int3   
   11a50:	test   BYTE PTR ds:0x78b8c,0x1
   11a57:	jne    0x11a6f
   11a59:	or     DWORD PTR ds:0x78b8c,0x1
   11a60:	push   0x1e240
   11a65:	call   0x115c2
   11a6a:	mov    ds:0x78b88,eax
   11a6f:	mov    eax,ds:0x78b88
   11a74:	ret    
   11a75:	int3   
   11a76:	int3   
   11a77:	int3   
   11a78:	int3   
   11a79:	int3   
   11a7a:	test   BYTE PTR ds:0x78b94,0x1
   11a81:	jne    0x11a99
   11a83:	or     DWORD PTR ds:0x78b94,0x1
   11a8a:	push   0x1e260
   11a8f:	call   0x115c2
   11a94:	mov    ds:0x78b90,eax
   11a99:	mov    eax,ds:0x78b90
   11a9e:	ret    
   11a9f:	int3   
   11aa0:	int3   
   11aa1:	int3   
   11aa2:	int3   
   11aa3:	int3   
   11aa4:	test   BYTE PTR ds:0x78b9c,0x1
   11aab:	jne    0x11ac3
   11aad:	or     DWORD PTR ds:0x78b9c,0x1
   11ab4:	push   0x1e280
   11ab9:	call   0x115c2
   11abe:	mov    ds:0x78b98,eax
   11ac3:	mov    eax,ds:0x78b98
   11ac8:	ret    
   11ac9:	int3   
   11aca:	int3   
   11acb:	int3   
   11acc:	int3   
   11acd:	int3   
   11ace:	test   BYTE PTR ds:0x78ba4,0x1
   11ad5:	jne    0x11aed
   11ad7:	or     DWORD PTR ds:0x78ba4,0x1
   11ade:	push   0x1e2a0
   11ae3:	call   0x115c2
   11ae8:	mov    ds:0x78ba0,eax
   11aed:	mov    eax,ds:0x78ba0
   11af2:	ret    
   11af3:	int3   
   11af4:	int3   
   11af5:	int3   
   11af6:	int3   
   11af7:	int3   
   11af8:	test   BYTE PTR ds:0x78bac,0x1
   11aff:	jne    0x11b17
   11b01:	or     DWORD PTR ds:0x78bac,0x1
   11b08:	push   0x1e2b6
   11b0d:	call   0x115c2
   11b12:	mov    ds:0x78ba8,eax
   11b17:	mov    eax,ds:0x78ba8
   11b1c:	ret    
   11b1d:	int3   
   11b1e:	int3   
   11b1f:	int3   
   11b20:	int3   
   11b21:	int3   
   11b22:	test   BYTE PTR ds:0x78bb4,0x1
   11b29:	jne    0x11b41
   11b2b:	or     DWORD PTR ds:0x78bb4,0x1
   11b32:	push   0x1e2e0
   11b37:	call   0x115c2
   11b3c:	mov    ds:0x78bb0,eax
   11b41:	mov    eax,ds:0x78bb0
   11b46:	ret    
   11b47:	int3   
   11b48:	int3   
   11b49:	int3   
   11b4a:	int3   
   11b4b:	int3   
   11b4c:	test   BYTE PTR ds:0x78bbc,0x1
   11b53:	jne    0x11b6b
   11b55:	or     DWORD PTR ds:0x78bbc,0x1
   11b5c:	push   0x1e2f8
   11b61:	call   0x115c2
   11b66:	mov    ds:0x78bb8,eax
   11b6b:	mov    eax,ds:0x78bb8
   11b70:	ret    
   11b71:	int3   
   11b72:	int3   
   11b73:	int3   
   11b74:	int3   
   11b75:	int3   
   11b76:	test   BYTE PTR ds:0x78bc4,0x1
   11b7d:	jne    0x11b95
   11b7f:	or     DWORD PTR ds:0x78bc4,0x1
   11b86:	push   0x1e326
   11b8b:	call   0x115c2
   11b90:	mov    ds:0x78bc0,eax
   11b95:	mov    eax,ds:0x78bc0
   11b9a:	ret    
   11b9b:	int3   
   11b9c:	int3   
   11b9d:	int3   
   11b9e:	int3   
   11b9f:	int3   
   11ba0:	test   BYTE PTR ds:0x78bcc,0x1
   11ba7:	jne    0x11bbf
   11ba9:	or     DWORD PTR ds:0x78bcc,0x1
   11bb0:	push   0x1e350
   11bb5:	call   0x115c2
   11bba:	mov    ds:0x78bc8,eax
   11bbf:	mov    eax,ds:0x78bc8
   11bc4:	ret    
   11bc5:	int3   
   11bc6:	int3   
   11bc7:	int3   
   11bc8:	int3   
   11bc9:	int3   
   11bca:	test   BYTE PTR ds:0x78bd4,0x1
   11bd1:	jne    0x11be9
   11bd3:	or     DWORD PTR ds:0x78bd4,0x1
   11bda:	push   0x1e36e
   11bdf:	call   0x115c2
   11be4:	mov    ds:0x78bd0,eax
   11be9:	mov    eax,ds:0x78bd0
   11bee:	ret    
   11bef:	int3   
   11bf0:	int3   
   11bf1:	int3   
   11bf2:	int3   
   11bf3:	int3   
   11bf4:	test   BYTE PTR ds:0x78bdc,0x1
   11bfb:	jne    0x11c13
   11bfd:	or     DWORD PTR ds:0x78bdc,0x1
   11c04:	push   0x1e39c
   11c09:	call   0x115c2
   11c0e:	mov    ds:0x78bd8,eax
   11c13:	mov    eax,ds:0x78bd8
   11c18:	ret    
   11c19:	int3   
   11c1a:	int3   
   11c1b:	int3   
   11c1c:	int3   
   11c1d:	int3   
   11c1e:	test   BYTE PTR ds:0x78be4,0x1
   11c25:	jne    0x11c3d
   11c27:	or     DWORD PTR ds:0x78be4,0x1
   11c2e:	push   0x1e3c2
   11c33:	call   0x115c2
   11c38:	mov    ds:0x78be0,eax
   11c3d:	mov    eax,ds:0x78be0
   11c42:	ret    
   11c43:	int3   
   11c44:	int3   
   11c45:	int3   
   11c46:	int3   
   11c47:	int3   
   11c48:	test   BYTE PTR ds:0x78bec,0x1
   11c4f:	jne    0x11c67
   11c51:	or     DWORD PTR ds:0x78bec,0x1
   11c58:	push   0x1e3e2
   11c5d:	call   0x115c2
   11c62:	mov    ds:0x78be8,eax
   11c67:	mov    eax,ds:0x78be8
   11c6c:	ret    
   11c6d:	int3   
   11c6e:	int3   
   11c6f:	int3   
   11c70:	int3   
   11c71:	int3   
   11c72:	test   BYTE PTR ds:0x78bf4,0x1
   11c79:	jne    0x11c91
   11c7b:	or     DWORD PTR ds:0x78bf4,0x1
   11c82:	push   0x1e40c
   11c87:	call   0x115c2
   11c8c:	mov    ds:0x78bf0,eax
   11c91:	mov    eax,ds:0x78bf0
   11c96:	ret    
   11c97:	int3   
   11c98:	int3   
   11c99:	int3   
   11c9a:	int3   
   11c9b:	int3   
   11c9c:	test   BYTE PTR ds:0x78bfc,0x1
   11ca3:	jne    0x11cbb
   11ca5:	or     DWORD PTR ds:0x78bfc,0x1
   11cac:	push   0x1e430
   11cb1:	call   0x115c2
   11cb6:	mov    ds:0x78bf8,eax
   11cbb:	mov    eax,ds:0x78bf8
   11cc0:	ret    
   11cc1:	int3   
   11cc2:	int3   
   11cc3:	int3   
   11cc4:	int3   
   11cc5:	int3   
   11cc6:	test   BYTE PTR ds:0x78c04,0x1
   11ccd:	jne    0x11ce5
   11ccf:	or     DWORD PTR ds:0x78c04,0x1
   11cd6:	push   0x1e466
   11cdb:	call   0x115c2
   11ce0:	mov    ds:0x78c00,eax
   11ce5:	mov    eax,ds:0x78c00
   11cea:	ret    
   11ceb:	int3   
   11cec:	int3   
   11ced:	int3   
   11cee:	int3   
   11cef:	int3   
   11cf0:	call   0x1168a
   11cf5:	test   eax,eax
   11cf7:	jne    0x11cfc
   11cf9:	xor    eax,eax
   11cfb:	ret    
   11cfc:	call   0x116b4
   11d01:	test   eax,eax
   11d03:	je     0x11cf9
   11d05:	call   0x116de
   11d0a:	test   eax,eax
   11d0c:	je     0x11cf9
   11d0e:	call   0x11708
   11d13:	test   eax,eax
   11d15:	je     0x11cf9
   11d17:	call   0x11732
   11d1c:	test   eax,eax
   11d1e:	je     0x11cf9
   11d20:	call   0x1175c
   11d25:	test   eax,eax
   11d27:	je     0x11cf9
   11d29:	call   0x11786
   11d2e:	test   eax,eax
   11d30:	je     0x11cf9
   11d32:	call   0x117b0
   11d37:	test   eax,eax
   11d39:	je     0x11cf9
   11d3b:	call   0x117da
   11d40:	test   eax,eax
   11d42:	je     0x11cf9
   11d44:	call   0x11804
   11d49:	test   eax,eax
   11d4b:	je     0x11cf9
   11d4d:	call   0x1182e
   11d52:	test   eax,eax
   11d54:	je     0x11cf9
   11d56:	call   0x11858
   11d5b:	test   eax,eax
   11d5d:	je     0x11cf9
   11d5f:	call   0x11882
   11d64:	test   eax,eax
   11d66:	je     0x11cf9
   11d68:	call   0x118ac
   11d6d:	test   eax,eax
   11d6f:	je     0x11cf9
   11d71:	call   0x118d6
   11d76:	test   eax,eax
   11d78:	je     0x11cf9
   11d7e:	call   0x11900
   11d83:	test   eax,eax
   11d85:	je     0x11cf9
   11d8b:	call   0x1192a
   11d90:	test   eax,eax
   11d92:	je     0x11cf9
   11d98:	call   0x11954
   11d9d:	test   eax,eax
   11d9f:	je     0x11cf9
   11da5:	call   0x1197e
   11daa:	test   eax,eax
   11dac:	je     0x11cf9
   11db2:	call   0x119a8
   11db7:	test   eax,eax
   11db9:	je     0x11cf9
   11dbf:	call   0x119d2
   11dc4:	test   eax,eax
   11dc6:	je     0x11cf9
   11dcc:	call   0x119fc
   11dd1:	test   eax,eax
   11dd3:	je     0x11cf9
   11dd9:	call   0x11a26
   11dde:	test   eax,eax
   11de0:	je     0x11cf9
   11de6:	call   0x11a50
   11deb:	test   eax,eax
   11ded:	je     0x11cf9
   11df3:	call   0x11a7a
   11df8:	test   eax,eax
   11dfa:	je     0x11cf9
   11e00:	call   0x11aa4
   11e05:	test   eax,eax
   11e07:	je     0x11cf9
   11e0d:	call   0x11ace
   11e12:	test   eax,eax
   11e14:	je     0x11cf9
   11e1a:	call   0x11af8
   11e1f:	test   eax,eax
   11e21:	je     0x11cf9
   11e27:	call   0x11b22
   11e2c:	test   eax,eax
   11e2e:	je     0x11cf9
   11e34:	call   0x11b4c
   11e39:	test   eax,eax
   11e3b:	je     0x11cf9
   11e41:	call   0x11b76
   11e46:	test   eax,eax
   11e48:	je     0x11cf9
   11e4e:	call   0x11ba0
   11e53:	test   eax,eax
   11e55:	je     0x11cf9
   11e5b:	call   0x11bca
   11e60:	test   eax,eax
   11e62:	je     0x11cf9
   11e68:	call   0x11bf4
   11e6d:	test   eax,eax
   11e6f:	je     0x11cf9
   11e75:	call   0x11c1e
   11e7a:	test   eax,eax
   11e7c:	je     0x11cf9
   11e82:	call   0x11c48
   11e87:	test   eax,eax
   11e89:	je     0x11cf9
   11e8f:	call   0x11c72
   11e94:	test   eax,eax
   11e96:	je     0x11cf9
   11e9c:	call   0x11c9c
   11ea1:	test   eax,eax
   11ea3:	je     0x11cf9
   11ea9:	call   0x11cc6
   11eae:	neg    eax
   11eb0:	sbb    eax,eax
   11eb2:	neg    eax
   11eb4:	ret    
   11eb5:	int3   
   11eb6:	int3   
   11eb7:	int3   
   11eb8:	int3   
   11eb9:	int3   
   11eba:	mov    edi,edi
   11ebc:	push   esi
   11ebd:	mov    esi,ecx
   11ebf:	push   DWORD PTR [esi+0x48]
   11ec2:	call   0x1d9fc
   11ec7:	push   DWORD PTR [esi+0x24]
   11eca:	call   0x1d9fc
   11ecf:	push   DWORD PTR [esi+0x1c]
   11ed2:	call   0x1d9fc
   11ed7:	push   DWORD PTR [esi+0x14]
   11eda:	call   0x1d9fc
   11edf:	push   DWORD PTR [esi+0x8]
   11ee2:	call   0x1d9fc
   11ee7:	push   DWORD PTR [esi]
   11ee9:	call   0x1d9fc
   11eee:	add    esp,0x18
   11ef1:	pop    esi
   11ef2:	ret    
   11ef3:	int3   
   11ef4:	int3   
   11ef5:	int3   
   11ef6:	int3   
   11ef7:	int3   
   11ef8:	mov    edi,edi
   11efa:	push   ebp
   11efb:	mov    ebp,esp
   11efd:	mov    eax,ecx
   11eff:	mov    ecx,DWORD PTR [ebp+0x8]
   11f02:	mov    edx,DWORD PTR [ecx]
   11f04:	test   edx,edx
   11f06:	je     0x11f0f
   11f08:	mov    DWORD PTR [eax],edx
   11f0a:	inc    DWORD PTR [edx+0x4]
   11f0d:	jmp    0x11f12
   11f0f:	and    DWORD PTR [eax],0x0
   11f12:	pop    ebp
   11f13:	ret    0x4
   11f16:	int3   
   11f17:	int3   
   11f18:	int3   
   11f19:	int3   
   11f1a:	int3   
   11f1b:	int3   
   11f1c:	mov    edi,edi
   11f1e:	push   ebp
   11f1f:	mov    ebp,esp
   11f21:	push   esi
   11f22:	mov    esi,ecx
   11f24:	mov    ecx,DWORD PTR [esi]
   11f26:	test   ecx,ecx
   11f28:	je     0x11f2f
   11f2a:	call   0x10a86
   11f2f:	mov    eax,DWORD PTR [ebp+0x8]
   11f32:	mov    eax,DWORD PTR [eax]
   11f34:	mov    DWORD PTR [esi],eax
   11f36:	inc    DWORD PTR [eax+0x4]
   11f39:	mov    eax,esi
   11f3b:	pop    esi
   11f3c:	pop    ebp
   11f3d:	ret    0x4
   11f40:	int3   
   11f41:	int3   
   11f42:	int3   
   11f43:	int3   
   11f44:	int3   
   11f45:	int3   
   11f46:	mov    edi,edi
   11f48:	push   ebp
   11f49:	mov    ebp,esp
   11f4b:	push   ebx
   11f4c:	push   esi
   11f4d:	push   edi
   11f4e:	mov    edi,DWORD PTR [ebp+0xc]
   11f51:	mov    esi,ecx
   11f53:	and    DWORD PTR [esi+0x4],0x0
   11f57:	lea    eax,[edi+0x1]
   11f5a:	push   eax
   11f5b:	mov    DWORD PTR [esi+0x8],edi
   11f5e:	call   0x10a52
   11f63:	push   edi
   11f64:	push   DWORD PTR [ebp+0x8]
   11f67:	mov    ebx,eax
   11f69:	push   ebx
   11f6a:	call   0x1da8a
   11f6f:	add    esp,0x10
   11f72:	inc    DWORD PTR [esi+0x4]
   11f75:	pop    edi
   11f76:	mov    DWORD PTR [esi],ebx
   11f78:	mov    eax,esi
   11f7a:	pop    esi
   11f7b:	pop    ebx
   11f7c:	pop    ebp
   11f7d:	ret    0x8
   11f80:	int3   
   11f81:	int3   
   11f82:	int3   
   11f83:	int3   
   11f84:	int3   
   11f85:	int3   
   11f86:	mov    edi,edi
   11f88:	push   ebp
   11f89:	mov    ebp,esp
   11f8b:	push   ecx
   11f8c:	push   edi
   11f8d:	lea    eax,[ebp-0x4]
   11f90:	push   eax
   11f91:	xor    edi,edi
   11f93:	push   edi
   11f94:	push   edi
   11f95:	push   0x1b
   11f97:	push   DWORD PTR [ebp+0x8]
   11f9a:	call   0x1175c
   11f9f:	call   eax
   11fa1:	cmp    eax,0xc0000004
   11fa6:	jne    0x1200e
   11fa8:	mov    ecx,DWORD PTR [ebp-0x4]
   11fab:	push   ebx
   11fac:	mov    ebx,DWORD PTR [ebp+0xc]
   11faf:	movzx  edx,WORD PTR [ebx+0x2]
   11fb3:	lea    eax,[ecx-0x8]
   11fb6:	cmp    edx,eax
   11fb8:	jae    0x11fc4
   11fba:	mov    WORD PTR [ebx],ax
   11fbd:	mov    eax,0x80000005
   11fc2:	jmp    0x1200d
   11fc4:	push   esi
   11fc5:	push   0x20736649
   11fca:	push   ecx
   11fcb:	push   edi
   11fcc:	call   DWORD PTR ds:0x1ee64
   11fd2:	mov    esi,eax
   11fd4:	cmp    esi,edi
   11fd6:	jne    0x11fdf
   11fd8:	mov    eax,0xc000009a
   11fdd:	jmp    0x1200c
   11fdf:	lea    eax,[ebp-0x4]
   11fe2:	push   eax
   11fe3:	push   DWORD PTR [ebp-0x4]
   11fe6:	push   esi
   11fe7:	push   0x1b
   11fe9:	push   DWORD PTR [ebp+0x8]
   11fec:	call   0x1175c
   11ff1:	call   eax
   11ff3:	mov    edi,eax
   11ff5:	test   edi,edi
   11ff7:	jl     0x12001
   11ff9:	push   esi
   11ffa:	push   ebx
   11ffb:	call   DWORD PTR ds:0x1ee3c
   12001:	push   0x0
   12003:	push   esi
   12004:	call   DWORD PTR ds:0x1ee20
   1200a:	mov    eax,edi
   1200c:	pop    esi
   1200d:	pop    ebx
   1200e:	pop    edi
   1200f:	leave  
   12010:	ret    0x8
   12013:	int3   
   12014:	int3   
   12015:	int3   
   12016:	int3   
   12017:	int3   
   12018:	mov    edi,edi
   1201a:	push   ebp
   1201b:	mov    ebp,esp
   1201d:	sub    esp,0x18
   12020:	push   0x0
   12022:	push   0x18
   12024:	lea    eax,[ebp-0x18]
   12027:	push   eax
   12028:	push   0x0
   1202a:	push   DWORD PTR [ebp+0x8]
   1202d:	call   0x1175c
   12032:	call   eax
   12034:	test   eax,eax
   12036:	jl     0x1203d
   12038:	mov    eax,DWORD PTR [ebp-0x8]
   1203b:	jmp    0x1203f
   1203d:	xor    eax,eax
   1203f:	leave  
   12040:	ret    0x4
   12043:	int3   
   12044:	int3   
   12045:	int3   
   12046:	int3   
   12047:	int3   
   12048:	mov    edi,edi
   1204a:	push   ebp
   1204b:	mov    ebp,esp
   1204d:	mov    ecx,DWORD PTR ds:0x781a4
   12053:	sub    esp,0x38
   12056:	push   esi
   12057:	xor    esi,esi
   12059:	cmp    ecx,esi
   1205b:	jne    0x12065
   1205d:	or     eax,0xffffffff
   12060:	jmp    0x1214c
   12065:	push   edi
   12066:	xor    eax,eax
   12068:	mov    DWORD PTR [ebp-0x20],esi
   1206b:	lea    edi,[ebp-0x1c]
   1206e:	stos   DWORD PTR es:[edi],eax
   1206f:	lea    eax,[ebp-0x18]
   12072:	push   eax
   12073:	lea    eax,[ebp-0x38]
   12076:	push   eax
   12077:	push   0x400
   1207c:	lea    eax,[ebp-0x10]
   1207f:	push   eax
   12080:	mov    DWORD PTR [ebp-0x4],esi
   12083:	mov    DWORD PTR [ebp-0x38],0x18
   1208a:	mov    DWORD PTR [ebp-0x34],esi
   1208d:	mov    DWORD PTR [ebp-0x2c],esi
   12090:	mov    DWORD PTR [ebp-0x30],esi
   12093:	mov    DWORD PTR [ebp-0x28],esi
   12096:	mov    DWORD PTR [ebp-0x24],esi
   12099:	mov    DWORD PTR [ebp-0x18],ecx
   1209c:	mov    DWORD PTR [ebp-0x14],esi
   1209f:	call   0x1168a
   120a4:	call   eax
   120a6:	mov    edi,eax
   120a8:	cmp    edi,esi
   120aa:	jl     0x12149
   120b0:	lea    eax,[ebp-0xc]
   120b3:	push   eax
   120b4:	push   0x8
   120b6:	push   DWORD PTR [ebp-0x10]
   120b9:	call   0x118d6
   120be:	call   eax
   120c0:	mov    edi,eax
   120c2:	cmp    edi,esi
   120c4:	jl     0x1213f
   120c6:	lea    eax,[ebp-0x4]
   120c9:	push   eax
   120ca:	push   0x1
   120cc:	push   esi
   120cd:	push   esi
   120ce:	push   0x1
   120d0:	push   DWORD PTR [ebp-0xc]
   120d3:	call   0x116de
   120d8:	call   eax
   120da:	mov    edi,eax
   120dc:	cmp    edi,esi
   120de:	jl     0x12135
   120e0:	mov    eax,DWORD PTR [ebp+0x8]
   120e3:	mov    DWORD PTR [ebp-0x18],eax
   120e6:	lea    eax,[ebp-0x18]
   120e9:	push   eax
   120ea:	lea    eax,[ebp-0x38]
   120ed:	push   eax
   120ee:	push   0x200
   120f3:	lea    eax,[ebp-0x8]
   120f6:	push   eax
   120f7:	call   0x1168a
   120fc:	call   eax
   120fe:	mov    edi,eax
   12100:	cmp    edi,esi
   12102:	jl     0x1212b
   12104:	mov    eax,DWORD PTR [ebp-0x4]
   12107:	push   0x8
   12109:	mov    DWORD PTR [ebp-0x20],eax
   1210c:	lea    eax,[ebp-0x20]
   1210f:	push   eax
   12110:	push   0x9
   12112:	push   DWORD PTR [ebp-0x8]
   12115:	mov    DWORD PTR [ebp-0x1c],esi
   12118:	call   0x11900
   1211d:	call   eax
   1211f:	push   DWORD PTR [ebp-0x8]
   12122:	mov    edi,eax
   12124:	call   0x11954
   12129:	call   eax
   1212b:	push   DWORD PTR [ebp-0x4]
   1212e:	call   0x11954
   12133:	call   eax
   12135:	push   DWORD PTR [ebp-0xc]
   12138:	call   0x11954
   1213d:	call   eax
   1213f:	push   DWORD PTR [ebp-0x10]
   12142:	call   0x11954
   12147:	call   eax
   12149:	mov    eax,edi
   1214b:	pop    edi
   1214c:	pop    esi
   1214d:	leave  
   1214e:	ret    0x4
   12151:	int3   
   12152:	int3   
   12153:	int3   
   12154:	int3   
   12155:	int3   
   12156:	mov    edi,edi
   12158:	push   ebp
   12159:	mov    ebp,esp
   1215b:	sub    esp,0x43c
   12161:	mov    eax,ds:0x7771c
   12166:	xor    eax,ebp
   12168:	mov    DWORD PTR [ebp-0x4],eax
   1216b:	mov    eax,DWORD PTR [ebp+0xc]
   1216e:	push   ebx
   1216f:	push   esi
   12170:	mov    esi,DWORD PTR [ebp+0x8]
   12173:	push   edi
   12174:	xor    ebx,ebx
   12176:	push   0x3ff
   1217b:	mov    DWORD PTR [ebp-0x418],eax
   12181:	lea    eax,[ebp-0x403]
   12187:	push   ebx
   12188:	push   eax
   12189:	mov    DWORD PTR [ebp-0x424],esi
   1218f:	mov    BYTE PTR [ebp-0x404],bl
   12195:	call   0x1da7e
   1219a:	add    esp,0xc
   1219d:	lea    eax,[ebp-0x410]
   121a3:	push   eax
   121a4:	push   0x400
   121a9:	lea    eax,[ebp-0x404]
   121af:	push   eax
   121b0:	push   ebx
   121b1:	push   ebx
   121b2:	push   esi
   121b3:	jmp    0x12362
   121b8:	cmp    eax,ebx
   121ba:	jl     0x12384
   121c0:	mov    eax,DWORD PTR [ebp-0x418]
   121c6:	lea    edx,[eax+0x2]
   121c9:	mov    cx,WORD PTR [eax]
   121cc:	inc    eax
   121cd:	inc    eax
   121ce:	cmp    cx,bx
   121d1:	jne    0x121c9
   121d3:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121d9:	sub    eax,edx
   121db:	shr    ecx,1
   121dd:	sar    eax,1
   121df:	lea    esi,[ecx+eax*1+0x2]
   121e3:	xor    ecx,ecx
   121e5:	push   0x2
   121e7:	pop    edx
   121e8:	mov    eax,esi
   121ea:	mul    edx
   121ec:	seto   cl
   121ef:	neg    ecx
   121f1:	or     ecx,eax
   121f3:	push   ecx
   121f4:	call   0x10a52
   121f9:	mov    edi,eax
   121fb:	lea    eax,[esi+esi*1]
   121fe:	push   eax
   121ff:	push   ebx
   12200:	push   edi
   12201:	mov    DWORD PTR [ebp-0x40c],edi
   12207:	call   0x1da7e
   1220c:	mov    eax,DWORD PTR [ebp-0x418]
   12212:	add    esp,0x10
   12215:	mov    ecx,eax
   12217:	mov    dx,WORD PTR [eax]
   1221a:	inc    eax
   1221b:	inc    eax
   1221c:	cmp    dx,bx
   1221f:	jne    0x12217
   12221:	sub    eax,ecx
   12223:	dec    edi
   12224:	mov    esi,ecx
   12226:	dec    edi
   12227:	mov    cx,WORD PTR [edi+0x2]
   1222b:	inc    edi
   1222c:	inc    edi
   1222d:	cmp    cx,bx
   12230:	jne    0x12227
   12232:	mov    ecx,eax
   12234:	shr    ecx,0x2
   12237:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12239:	mov    ecx,eax
   1223b:	and    ecx,0x3
   1223e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12240:	mov    edi,DWORD PTR [ebp-0x40c]
   12246:	dec    edi
   12247:	dec    edi
   12248:	mov    ax,WORD PTR [edi+0x2]
   1224c:	inc    edi
   1224d:	inc    edi
   1224e:	cmp    ax,bx
   12251:	jne    0x12248
   12253:	mov    esi,0x1de2a
   12258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12259:	mov    eax,DWORD PTR [ebp-0x3f8]
   1225f:	shr    eax,1
   12261:	push   eax
   12262:	lea    eax,[ebp-0x3f4]
   12268:	push   eax
   12269:	push   DWORD PTR [ebp-0x40c]
   1226f:	call   0x1da96
   12274:	mov    esi,DWORD PTR [ebp-0x40c]
   1227a:	mov    eax,esi
   1227c:	add    esp,0xc
   1227f:	mov    DWORD PTR [ebp-0x41c],esi
   12285:	lea    edx,[eax+0x2]
   12288:	mov    cx,WORD PTR [eax]
   1228b:	inc    eax
   1228c:	inc    eax
   1228d:	cmp    cx,bx
   12290:	jne    0x12288
   12292:	sub    eax,edx
   12294:	sar    eax,1
   12296:	add    eax,eax
   12298:	mov    WORD PTR [ebp-0x41e],ax
   1229f:	mov    WORD PTR [ebp-0x420],ax
   122a6:	lea    eax,[ebp-0x420]
   122ac:	mov    DWORD PTR [ebp-0x434],eax
   122b2:	lea    eax,[ebp-0x43c]
   122b8:	push   eax
   122b9:	push   0xf003f
   122be:	lea    eax,[ebp-0x414]
   122c4:	push   eax
   122c5:	mov    DWORD PTR [ebp-0x43c],0x18
   122cf:	mov    DWORD PTR [ebp-0x438],ebx
   122d5:	mov    DWORD PTR [ebp-0x430],0x40
   122df:	mov    DWORD PTR [ebp-0x42c],ebx
   122e5:	mov    DWORD PTR [ebp-0x428],ebx
   122eb:	call   0x117b0
   122f0:	call   eax
   122f2:	push   esi
   122f3:	test   eax,eax
   122f5:	jl     0x1237e
   122fb:	push   DWORD PTR [ebp-0x414]
   12301:	call   0x12156
   12306:	push   esi
   12307:	mov    BYTE PTR [ebp-0x405],al
   1230d:	call   0x1d9fc
   12312:	pop    ecx
   12313:	push   DWORD PTR [ebp-0x414]
   12319:	call   0x117da
   1231e:	call   eax
   12320:	test   eax,eax
   12322:	jl     0x12384
   12324:	cmp    BYTE PTR [ebp-0x405],bl
   1232a:	je     0x12384
   1232c:	push   0x3ff
   12331:	lea    eax,[ebp-0x403]
   12337:	push   ebx
   12338:	push   eax
   12339:	mov    BYTE PTR [ebp-0x404],bl
   1233f:	call   0x1da7e
   12344:	add    esp,0xc
   12347:	lea    eax,[ebp-0x410]
   1234d:	push   eax
   1234e:	push   0x400
   12353:	lea    eax,[ebp-0x404]
   12359:	push   eax
   1235a:	push   ebx
   1235b:	push   ebx
   1235c:	push   DWORD PTR [ebp-0x424]
   12362:	mov    DWORD PTR [ebp-0x410],ebx
   12368:	call   0x119a8
   1236d:	call   eax
   1236f:	cmp    eax,0x8000001a
   12374:	jne    0x121b8
   1237a:	mov    al,0x1
   1237c:	jmp    0x12386
   1237e:	call   0x1d9fc
   12383:	pop    ecx
   12384:	xor    al,al
   12386:	mov    ecx,DWORD PTR [ebp-0x4]
   12389:	pop    edi
   1238a:	pop    esi
   1238b:	xor    ecx,ebp
   1238d:	pop    ebx
   1238e:	call   0x1da19
   12393:	leave  
   12394:	ret    0x8
   12397:	int3   
   12398:	int3   
   12399:	int3   
   1239a:	int3   
   1239b:	int3   
   1239c:	mov    eax,ds:0x78124
   123a1:	test   eax,eax
   123a3:	je     0x123b4
   123a5:	push   eax
   123a6:	call   0x11a26
   123ab:	call   eax
   123ad:	and    DWORD PTR ds:0x78124,0x0
   123b4:	ret    
   123b5:	int3   
   123b6:	int3   
   123b7:	int3   
   123b8:	int3   
   123b9:	int3   
   123ba:	push   0x28
   123bc:	push   0x77368
   123c1:	call   0x1dabc
   123c6:	xor    eax,eax
   123c8:	mov    DWORD PTR [ebp-0x28],eax
   123cb:	mov    DWORD PTR [ebp-0x2c],eax
   123ce:	mov    ebx,DWORD PTR [ebp+0x8]
   123d1:	cmp    ebx,eax
   123d3:	jne    0x123dc
   123d5:	xor    eax,eax
   123d7:	jmp    0x124b9
   123dc:	mov    DWORD PTR [ebp-0x4],eax
   123df:	lea    ecx,[ebp-0x2c]
   123e2:	push   ecx
   123e3:	push   eax
   123e4:	push   0x1
   123e6:	push   ebx
   123e7:	call   0x118ac
   123ec:	call   eax
   123ee:	mov    edx,eax
   123f0:	sub    edx,ebx
   123f2:	mov    DWORD PTR [ebp-0x38],edx
   123f5:	mov    esi,DWORD PTR [eax+0x1c]
   123f8:	add    esi,ebx
   123fa:	mov    edi,DWORD PTR [eax+0x24]
   123fd:	add    edi,ebx
   123ff:	mov    ecx,DWORD PTR [eax+0x20]
   12402:	add    ecx,ebx
   12404:	and    DWORD PTR [ebp-0x20],0x0
   12408:	mov    ebx,DWORD PTR [ebp-0x20]
   1240b:	cmp    ebx,DWORD PTR [eax+0x18]
   1240e:	jae    0x124a1
   12414:	movsx  ebx,WORD PTR [edi+ebx*2]
   12418:	cmp    ebx,DWORD PTR [eax+0x14]
   1241b:	jae    0x12495
   1241d:	lea    ebx,[esi+ebx*4]
   12420:	mov    DWORD PTR [ebp-0x34],ebx
   12423:	cmp    DWORD PTR [ebx],edx
   12425:	jb     0x12433
   12427:	mov    ebx,DWORD PTR [ebp-0x2c]
   1242a:	add    edx,ebx
   1242c:	mov    ebx,DWORD PTR [ebp-0x34]
   1242f:	cmp    DWORD PTR [ebx],edx
   12431:	jb     0x1248a
   12433:	mov    edx,DWORD PTR [ebp+0xc]
   12436:	mov    DWORD PTR [ebp-0x30],edx
   12439:	mov    edx,DWORD PTR [ebp-0x20]
   1243c:	mov    edx,DWORD PTR [ecx+edx*4]
   1243f:	add    edx,DWORD PTR [ebp+0x8]
   12442:	mov    DWORD PTR [ebp-0x24],edx
   12445:	mov    dl,BYTE PTR [edx]
   12447:	mov    ebx,DWORD PTR [ebp-0x30]
   1244a:	cmp    dl,BYTE PTR [ebx]
   1244c:	jne    0x12477
   1244e:	test   dl,dl
   12450:	je     0x12473
   12452:	mov    edx,DWORD PTR [ebp-0x24]
   12455:	mov    dl,BYTE PTR [edx+0x1]
   12458:	mov    BYTE PTR [ebp-0x19],dl
   1245b:	cmp    dl,BYTE PTR [ebx+0x1]
   1245e:	jne    0x12477
   12460:	mov    edx,DWORD PTR [ebp-0x24]
   12463:	inc    edx
   12464:	inc    edx
   12465:	mov    DWORD PTR [ebp-0x24],edx
   12468:	inc    ebx
   12469:	inc    ebx
   1246a:	mov    DWORD PTR [ebp-0x30],ebx
   1246d:	cmp    BYTE PTR [ebp-0x19],0x0
   12471:	jne    0x12445
   12473:	xor    edx,edx
   12475:	jmp    0x1247c
   12477:	sbb    edx,edx
   12479:	sbb    edx,0xffffffff
   1247c:	test   edx,edx
   1247e:	jne    0x1248a
   12480:	mov    eax,DWORD PTR [ebp-0x34]
   12483:	mov    eax,DWORD PTR [eax]
   12485:	add    eax,DWORD PTR [ebp+0x8]
   12488:	jmp    0x124af
   1248a:	inc    DWORD PTR [ebp-0x20]
   1248d:	mov    edx,DWORD PTR [ebp-0x38]
   12490:	jmp    0x12408
   12495:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1249c:	jmp    0x123d5
   124a1:	mov    eax,DWORD PTR [ebp-0x28]
   124a4:	jmp    0x124b2
   124a6:	xor    eax,eax
   124a8:	inc    eax
   124a9:	ret    
   124aa:	mov    esp,DWORD PTR [ebp-0x18]
   124ad:	xor    eax,eax
   124af:	mov    DWORD PTR [ebp-0x28],eax
   124b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124b9:	call   0x1db01
   124be:	ret    0x8
   124c1:	int3   
   124c2:	int3   
   124c3:	int3   
   124c4:	int3   
   124c5:	int3   
   124c6:	mov    edi,edi
   124c8:	push   ebp
   124c9:	mov    ebp,esp
   124cb:	sub    esp,0x48
   124ce:	mov    eax,DWORD PTR [ebp+0xc]
   124d1:	mov    eax,DWORD PTR [eax]
   124d3:	push   edi
   124d4:	mov    DWORD PTR [ebp-0x30],eax
   124d7:	lea    eax,[ebp-0x30]
   124da:	push   eax
   124db:	lea    eax,[ebp-0x48]
   124de:	push   eax
   124df:	xor    edi,edi
   124e1:	push   0x1f0fff
   124e6:	lea    eax,[ebp-0x10]
   124e9:	push   eax
   124ea:	mov    DWORD PTR [ebp-0x48],0x18
   124f1:	mov    DWORD PTR [ebp-0x44],edi
   124f4:	mov    DWORD PTR [ebp-0x3c],0x200
   124fb:	mov    DWORD PTR [ebp-0x40],edi
   124fe:	mov    DWORD PTR [ebp-0x38],edi
   12501:	mov    DWORD PTR [ebp-0x34],edi
   12504:	mov    DWORD PTR [ebp-0x2c],edi
   12507:	mov    DWORD PTR [ebp-0x10],edi
   1250a:	call   0x1168a
   1250f:	call   eax
   12511:	test   eax,eax
   12513:	jl     0x12867
   12519:	push   ebx
   1251a:	push   esi
   1251b:	mov    esi,DWORD PTR ds:0x1ee44
   12521:	push   0x40
   12523:	mov    ebx,0x1000
   12528:	push   ebx
   12529:	lea    eax,[ebp-0x14]
   1252c:	push   eax
   1252d:	push   edi
   1252e:	lea    eax,[ebp-0xc]
   12531:	push   eax
   12532:	push   DWORD PTR [ebp-0x10]
   12535:	mov    DWORD PTR [ebp-0xc],edi
   12538:	mov    DWORD PTR [ebp-0x14],0x400
   1253f:	call   esi
   12541:	test   eax,eax
   12543:	jl     0x1254e
   12545:	mov    eax,DWORD PTR [ebp-0xc]
   12548:	mov    ecx,DWORD PTR [ebp+0xc]
   1254b:	mov    DWORD PTR [ecx+0x8],eax
   1254e:	push   0x4
   12550:	push   ebx
   12551:	lea    eax,[ebp-0x14]
   12554:	push   eax
   12555:	push   edi
   12556:	lea    eax,[ebp-0x18]
   12559:	push   eax
   1255a:	push   DWORD PTR [ebp-0x10]
   1255d:	mov    DWORD PTR [ebp-0x18],edi
   12560:	mov    DWORD PTR [ebp-0x14],0x400
   12567:	call   esi
   12569:	test   eax,eax
   1256b:	jl     0x12576
   1256d:	mov    eax,DWORD PTR [ebp-0x18]
   12570:	mov    ecx,DWORD PTR [ebp+0xc]
   12573:	mov    DWORD PTR [ecx+0xc],eax
   12576:	lea    eax,[ebp-0x24]
   12579:	push   eax
   1257a:	push   DWORD PTR [ebp-0x30]
   1257d:	call   0x11c9c
   12582:	call   eax
   12584:	test   eax,eax
   12586:	jl     0x12865
   1258c:	push   DWORD PTR [ebp-0x24]
   1258f:	call   0x11a7a
   12594:	call   eax
   12596:	mov    eax,DWORD PTR [ebp-0xc]
   12599:	mov    DWORD PTR [ebp-0x20],edi
   1259c:	cmp    eax,edi
   1259e:	je     0x1284b
   125a4:	mov    esi,DWORD PTR [ebp-0x18]
   125a7:	cmp    esi,edi
   125a9:	je     0x127b8
   125af:	push   0x214
   125b4:	push   edi
   125b5:	push   esi
   125b6:	mov    DWORD PTR [ebp-0x4],eax
   125b9:	call   0x1da7e
   125be:	mov    eax,DWORD PTR [ebp-0x4]
   125c1:	add    esp,0xc
   125c4:	push   0x60
   125c6:	lea    ebx,[esi+0xc]
   125c9:	push   eax
   125ca:	mov    DWORD PTR [ebx],edi
   125cc:	mov    DWORD PTR [esi],edi
   125ce:	mov    DWORD PTR [ebp-0x20],eax
   125d1:	call   0x197f8
   125d6:	push   0x68
   125d8:	push   eax
   125d9:	call   0x197f8
   125de:	push   ebx
   125df:	push   eax
   125e0:	call   0x19810
   125e5:	push   0x6a
   125e7:	pop    ebx
   125e8:	push   ebx
   125e9:	push   eax
   125ea:	call   0x197f8
   125ef:	push   edi
   125f0:	push   eax
   125f1:	call   0x197f8
   125f6:	push   ebx
   125f7:	push   eax
   125f8:	call   0x197f8
   125fd:	push   edi
   125fe:	push   eax
   125ff:	call   0x197f8
   12604:	push   0x68
   12606:	push   eax
   12607:	call   0x197f8
   1260c:	push   edi
   1260d:	push   eax
   1260e:	mov    DWORD PTR [ebp-0x28],eax
   12611:	call   0x19810
   12616:	push   ebx
   12617:	push   eax
   12618:	call   0x197f8
   1261d:	push   edi
   1261e:	push   eax
   1261f:	call   0x197f8
   12624:	push   ebx
   12625:	push   eax
   12626:	call   0x197f8
   1262b:	push   edi
   1262c:	push   eax
   1262d:	call   0x197f8
   12632:	push   0xb8
   12637:	push   eax
   12638:	call   0x197f8
   1263d:	push   DWORD PTR ds:0x78170
   12643:	push   eax
   12644:	call   0x19810
   12649:	mov    ebx,0xc00b
   1264e:	push   ebx
   1264f:	push   eax
   12650:	call   0x1982a
   12655:	push   0x74
   12657:	push   eax
   12658:	call   0x197f8
   1265d:	push   0x9
   1265f:	push   eax
   12660:	call   0x197f8
   12665:	mov    edi,0xd0ff
   1266a:	push   edi
   1266b:	push   eax
   1266c:	call   0x1982a
   12671:	push   0xb9
   12676:	push   eax
   12677:	call   0x197f8
   1267c:	lea    ecx,[esi+0x10]
   1267f:	push   ecx
   12680:	push   eax
   12681:	call   0x19810
   12686:	push   0x189
   1268b:	push   eax
   1268c:	call   0x1982a
   12691:	push   0x61
   12693:	push   eax
   12694:	call   0x197f8
   12699:	and    DWORD PTR [ebp-0x8],0x0
   1269d:	mov    DWORD PTR [ebp-0x4],eax
   126a0:	mov    eax,DWORD PTR [ebp+0x8]
   126a3:	mov    DWORD PTR [ebp-0x1c],eax
   126a6:	push   0x0
   126a8:	push   DWORD PTR [ebp-0x1c]
   126ab:	push   DWORD PTR [ebp-0x4]
   126ae:	call   0x19faa
   126b3:	mov    ecx,eax
   126b5:	sub    ecx,DWORD PTR [ebp-0x1c]
   126b8:	mov    DWORD PTR [ebp-0x1c],eax
   126bb:	add    DWORD PTR [ebp-0x8],ecx
   126be:	add    DWORD PTR [ebp-0x4],ecx
   126c1:	cmp    DWORD PTR [ebp-0x8],0x5
   126c5:	jb     0x126a6
   126c7:	mov    ecx,DWORD PTR [ebp+0x8]
   126ca:	push   DWORD PTR [ebp-0x4]
   126cd:	mov    eax,DWORD PTR [ebp-0x8]
   126d0:	add    eax,ecx
   126d2:	push   eax
   126d3:	call   0x1986e
   126d8:	push   eax
   126d9:	push   DWORD PTR [ebp-0x28]
   126dc:	mov    DWORD PTR [ebp-0x4],eax
   126df:	call   0x19810
   126e4:	mov    eax,DWORD PTR [ebp-0x4]
   126e7:	push   0xeb
   126ec:	push   eax
   126ed:	mov    DWORD PTR [esi],eax
   126ef:	call   0x197f8
   126f4:	push   0x0
   126f6:	push   eax
   126f7:	mov    DWORD PTR [esi+0x4],eax
   126fa:	call   0x197f8
   126ff:	push   0x68
   12701:	push   eax
   12702:	call   0x197f8
   12707:	push   0x3e8
   1270c:	push   eax
   1270d:	call   0x19810
   12712:	push   0xb8
   12717:	push   eax
   12718:	call   0x197f8
   1271d:	push   DWORD PTR ds:0x78174
   12723:	push   eax
   12724:	call   0x19810
   12729:	push   ebx
   1272a:	push   eax
   1272b:	call   0x1982a
   12730:	push   0x74
   12732:	push   eax
   12733:	call   0x197f8
   12738:	push   0x2
   1273a:	push   eax
   1273b:	call   0x197f8
   12740:	push   edi
   12741:	push   eax
   12742:	call   0x1982a
   12747:	push   eax
   12748:	push   DWORD PTR [esi]
   1274a:	call   0x1986e
   1274f:	mov    cl,al
   12751:	sub    cl,BYTE PTR [esi+0x4]
   12754:	push   0x68
   12756:	dec    cl
   12758:	push   eax
   12759:	mov    BYTE PTR [esi+0x8],cl
   1275c:	call   0x197f8
   12761:	add    esi,0x14
   12764:	push   esi
   12765:	push   eax
   12766:	call   0x19810
   1276b:	push   0xb8
   12770:	push   eax
   12771:	call   0x197f8
   12776:	push   DWORD PTR ds:0x78168
   1277c:	push   eax
   1277d:	call   0x19810
   12782:	push   ebx
   12783:	push   eax
   12784:	call   0x1982a
   12789:	push   0x74
   1278b:	push   eax
   1278c:	call   0x197f8
   12791:	push   0x2
   12793:	push   eax
   12794:	call   0x197f8
   12799:	push   edi
   1279a:	push   eax
   1279b:	call   0x1982a
   127a0:	push   0xc2
   127a5:	push   eax
   127a6:	call   0x197f8
   127ab:	push   0x4
   127ad:	push   eax
   127ae:	call   0x1982a
   127b3:	mov    eax,DWORD PTR [ebp-0xc]
   127b6:	xor    edi,edi
   127b8:	cmp    eax,edi
   127ba:	je     0x1284b
   127c0:	add    eax,0x400
   127c5:	lea    esi,[eax-0xc]
   127c8:	lea    ecx,[eax-0x8]
   127cb:	push   esi
   127cc:	lea    ebx,[eax-0x4]
   127cf:	lea    edx,[eax-0x10]
   127d2:	push   0x40
   127d4:	add    eax,0xffffffe8
   127d7:	push   ecx
   127d8:	mov    DWORD PTR [ebp-0x1c],eax
   127db:	mov    eax,DWORD PTR [ebp+0x8]
   127de:	mov    DWORD PTR [ebx],eax
   127e0:	push   ebx
   127e1:	mov    DWORD PTR [ecx],0x5
   127e7:	push   0xffffffff
   127e9:	mov    DWORD PTR [ebp-0x8],ecx
   127ec:	mov    DWORD PTR [ebp-0x28],edx
   127ef:	mov    DWORD PTR [esi],edi
   127f1:	call   DWORD PTR ds:0x780e4
   127f7:	test   eax,eax
   127f9:	jl     0x1284b
   127fb:	mov    eax,DWORD PTR [ebp-0x20]
   127fe:	sub    eax,DWORD PTR [ebp+0x8]
   12801:	sub    eax,0x5
   12804:	push   eax
   12805:	mov    eax,DWORD PTR [ebp-0x1c]
   12808:	inc    eax
   12809:	push   eax
   1280a:	call   0x19810
   1280f:	push   0xe9
   12814:	push   DWORD PTR [ebp-0x1c]
   12817:	call   0x197f8
   1281c:	mov    eax,DWORD PTR [ebp-0x28]
   1281f:	push   eax
   12820:	push   0x5
   12822:	push   DWORD PTR [ebp-0x1c]
   12825:	mov    DWORD PTR [eax],edi
   12827:	push   DWORD PTR [ebp+0x8]
   1282a:	push   0xffffffff
   1282c:	call   DWORD PTR ds:0x780d8
   12832:	mov    eax,DWORD PTR [ebp+0xc]
   12835:	mov    BYTE PTR [eax+0x10],0x1
   12839:	lea    eax,[ebp-0x20]
   1283c:	push   eax
   1283d:	push   DWORD PTR [esi]
   1283f:	push   DWORD PTR [ebp-0x8]
   12842:	push   ebx
   12843:	push   0xffffffff
   12845:	call   DWORD PTR ds:0x780e4
   1284b:	call   0x11a50
   12850:	call   eax
   12852:	mov    ecx,DWORD PTR [ebp-0x24]
   12855:	call   DWORD PTR ds:0x1ee60
   1285b:	push   DWORD PTR [ebp-0x10]
   1285e:	call   0x11954
   12863:	call   eax
   12865:	pop    esi
   12866:	pop    ebx
   12867:	pop    edi
   12868:	leave  
   12869:	ret    0x8
   1286c:	int3   
   1286d:	int3   
   1286e:	int3   
   1286f:	int3   
   12870:	int3   
   12871:	int3   
   12872:	mov    edi,edi
   12874:	push   ebp
   12875:	mov    ebp,esp
   12877:	sub    esp,0x18
   1287a:	and    DWORD PTR [ebp-0x18],0x0
   1287e:	push   edi
   1287f:	xor    eax,eax
   12881:	lea    edi,[ebp-0x14]
   12884:	stos   DWORD PTR es:[edi],eax
   12885:	stos   DWORD PTR es:[edi],eax
   12886:	stos   DWORD PTR es:[edi],eax
   12887:	stos   DWORD PTR es:[edi],eax
   12888:	lea    eax,[ebp-0x18]
   1288b:	push   eax
   1288c:	push   0x1
   1288e:	call   0x10e72
   12893:	pop    edi
   12894:	test   al,al
   12896:	je     0x128ed
   12898:	cmp    DWORD PTR [ebp-0x18],0x0
   1289c:	je     0x128ed
   1289e:	lea    eax,[ebp-0x4]
   128a1:	push   eax
   128a2:	push   DWORD PTR [ebp-0x18]
   128a5:	call   0x11c9c
   128aa:	call   eax
   128ac:	test   eax,eax
   128ae:	jl     0x128ed
   128b0:	push   esi
   128b1:	push   DWORD PTR [ebp-0x4]
   128b4:	call   0x11a7a
   128b9:	call   eax
   128bb:	mov    esi,DWORD PTR [ebp-0xc]
   128be:	mov    eax,DWORD PTR [ebp+0x8]
   128c1:	lea    edx,[esi+0x14]
   128c4:	sub    edx,eax
   128c6:	movzx  ecx,WORD PTR [eax]
   128c9:	mov    WORD PTR [edx+eax*1],cx
   128cd:	inc    eax
   128ce:	inc    eax
   128cf:	test   cx,cx
   128d2:	jne    0x128c6
   128d4:	mov    eax,DWORD PTR [esi+0x4]
   128d7:	mov    cl,BYTE PTR [esi+0x8]
   128da:	mov    BYTE PTR [eax],cl
   128dc:	call   0x11a50
   128e1:	call   eax
   128e3:	mov    ecx,DWORD PTR [ebp-0x4]
   128e6:	call   DWORD PTR ds:0x1ee60
   128ec:	pop    esi
   128ed:	leave  
   128ee:	ret    0x4
   128f1:	int3   
   128f2:	int3   
   128f3:	int3   
   128f4:	int3   
   128f5:	int3   
   128f6:	mov    edi,edi
   128f8:	push   ebp
   128f9:	mov    ebp,esp
   128fb:	push   ecx
   128fc:	and    DWORD PTR [ebp-0x4],0x0
   12900:	push   ebx
   12901:	push   esi
   12902:	push   edi
   12903:	mov    esi,0x1000
   12908:	push   0x20736649
   1290d:	push   esi
   1290e:	push   0x0
   12910:	call   DWORD PTR ds:0x1ee64
   12916:	mov    edi,eax
   12918:	test   edi,edi
   1291a:	je     0x1294e
   1291c:	lea    eax,[ebp-0x4]
   1291f:	push   eax
   12920:	push   esi
   12921:	push   edi
   12922:	push   DWORD PTR [ebp+0x8]
   12925:	call   0x11786
   1292a:	call   eax
   1292c:	mov    ebx,eax
   1292e:	cmp    ebx,0xc0000004
   12934:	jne    0x12941
   12936:	push   0x0
   12938:	push   edi
   12939:	call   DWORD PTR ds:0x1ee20
   1293f:	add    esi,esi
   12941:	test   ebx,ebx
   12943:	jne    0x12908
   12945:	mov    eax,edi
   12947:	pop    edi
   12948:	pop    esi
   12949:	pop    ebx
   1294a:	leave  
   1294b:	ret    0x4
   1294e:	xor    eax,eax
   12950:	jmp    0x12947
   12952:	int3   
   12953:	int3   
   12954:	int3   
   12955:	int3   
   12956:	int3   
   12957:	int3   
   12958:	push   0x0
   1295a:	push   0x780f4
   1295f:	call   0x11c72
   12964:	call   eax
   12966:	push   0x100
   1296b:	push   0x0
   1296d:	push   0x777b8
   12972:	call   0x1da7e
   12977:	add    esp,0xc
   1297a:	ret    
   1297b:	int3   
   1297c:	int3   
   1297d:	int3   
   1297e:	int3   
   1297f:	int3   
   12980:	mov    edi,edi
   12982:	push   ebp
   12983:	mov    ebp,esp
   12985:	push   esi
   12986:	push   DWORD PTR [ebp+0xc]
   12989:	mov    esi,ecx
   1298b:	push   DWORD PTR [ebp+0x8]
   1298e:	call   0x1109a
   12993:	mov    eax,esi
   12995:	pop    esi
   12996:	pop    ebp
   12997:	ret    0x8
   1299a:	int3   
   1299b:	int3   
   1299c:	int3   
   1299d:	int3   
   1299e:	int3   
   1299f:	int3   
   129a0:	mov    edi,edi
   129a2:	push   ebp
   129a3:	mov    ebp,esp
   129a5:	mov    eax,DWORD PTR [ebp+0x8]
   129a8:	push   esi
   129a9:	push   DWORD PTR [eax+0x4]
   129ac:	mov    esi,ecx
   129ae:	push   DWORD PTR [eax]
   129b0:	call   0x1109a
   129b5:	mov    eax,esi
   129b7:	pop    esi
   129b8:	pop    ebp
   129b9:	ret    0x4
   129bc:	int3   
   129bd:	int3   
   129be:	int3   
   129bf:	int3   
   129c0:	int3   
   129c1:	int3   
   129c2:	mov    edi,edi
   129c4:	push   ebp
   129c5:	mov    ebp,esp
   129c7:	push   ebx
   129c8:	push   esi
   129c9:	push   edi
   129ca:	mov    edi,DWORD PTR [ebp+0x8]
   129cd:	mov    eax,DWORD PTR [edi+0x4]
   129d0:	mov    esi,ecx
   129d2:	mov    ebx,DWORD PTR [esi]
   129d4:	mov    DWORD PTR [esi+0x4],eax
   129d7:	inc    eax
   129d8:	push   eax
   129d9:	call   0x10a52
   129de:	push   DWORD PTR [esi+0x4]
   129e1:	mov    DWORD PTR [esi],eax
   129e3:	push   DWORD PTR [edi]
   129e5:	push   eax
   129e6:	call   0x1da8a
   129eb:	mov    eax,DWORD PTR [esi+0x4]
   129ee:	mov    ecx,DWORD PTR [esi]
   129f0:	push   ebx
   129f1:	mov    BYTE PTR [eax+ecx*1],0x0
   129f5:	call   0x1d9fc
   129fa:	add    esp,0x14
   129fd:	pop    edi
   129fe:	mov    eax,esi
   12a00:	pop    esi
   12a01:	pop    ebx
   12a02:	pop    ebp
   12a03:	ret    0x4
   12a06:	int3   
   12a07:	int3   
   12a08:	int3   
   12a09:	int3   
   12a0a:	int3   
   12a0b:	int3   
   12a0c:	mov    edi,edi
   12a0e:	push   esi
   12a0f:	push   edi
   12a10:	push   0x20736649
   12a15:	push   0x20
   12a17:	push   0x0
   12a19:	mov    esi,ecx
   12a1b:	call   DWORD PTR ds:0x1ee64
   12a21:	push   0x0
   12a23:	mov    edi,eax
   12a25:	push   0x1
   12a27:	mov    ecx,esi
   12a29:	mov    DWORD PTR [esi],edi
   12a2b:	call   0x110f8
   12a30:	mov    DWORD PTR [esi+0x8],eax
   12a33:	mov    DWORD PTR [esi+0xc],edx
   12a36:	test   edi,edi
   12a38:	jne    0x12a45
   12a3a:	push   0xc000009a
   12a3f:	call   DWORD PTR ds:0x1ee18
   12a45:	pop    edi
   12a46:	mov    eax,esi
   12a48:	pop    esi
   12a49:	ret    
   12a4a:	int3   
   12a4b:	int3   
   12a4c:	int3   
   12a4d:	int3   
   12a4e:	int3   
   12a4f:	int3   
   12a50:	mov    edi,edi
   12a52:	push   ebp
   12a53:	mov    ebp,esp
   12a55:	push   esi
   12a56:	push   edi
   12a57:	mov    edi,DWORD PTR [ebp+0x8]
   12a5a:	push   edi
   12a5b:	mov    esi,ecx
   12a5d:	call   0x129c2
   12a62:	lea    eax,[edi+0x8]
   12a65:	push   eax
   12a66:	lea    ecx,[esi+0x8]
   12a69:	call   0x129c2
   12a6e:	mov    eax,DWORD PTR [edi+0x10]
   12a71:	mov    DWORD PTR [esi+0x10],eax
   12a74:	lea    eax,[edi+0x14]
   12a77:	push   eax
   12a78:	lea    ecx,[esi+0x14]
   12a7b:	call   0x129c2
   12a80:	lea    eax,[edi+0x1c]
   12a83:	push   eax
   12a84:	lea    ecx,[esi+0x1c]
   12a87:	call   0x129c2
   12a8c:	lea    eax,[edi+0x24]
   12a8f:	push   eax
   12a90:	lea    ecx,[esi+0x24]
   12a93:	call   0x129c2
   12a98:	mov    eax,DWORD PTR [edi+0x2c]
   12a9b:	mov    DWORD PTR [esi+0x2c],eax
   12a9e:	mov    eax,DWORD PTR [edi+0x30]
   12aa1:	mov    DWORD PTR [esi+0x30],eax
   12aa4:	mov    eax,DWORD PTR [edi+0x38]
   12aa7:	mov    DWORD PTR [esi+0x38],eax
   12aaa:	mov    eax,DWORD PTR [edi+0x3c]
   12aad:	mov    DWORD PTR [esi+0x3c],eax
   12ab0:	mov    eax,DWORD PTR [edi+0x40]
   12ab3:	mov    DWORD PTR [esi+0x40],eax
   12ab6:	mov    eax,DWORD PTR [edi+0x44]
   12ab9:	add    edi,0x48
   12abc:	push   edi
   12abd:	lea    ecx,[esi+0x48]
   12ac0:	mov    DWORD PTR [esi+0x44],eax
   12ac3:	call   0x129c2
   12ac8:	pop    edi
   12ac9:	mov    eax,esi
   12acb:	pop    esi
   12acc:	pop    ebp
   12acd:	ret    0x4
   12ad0:	int3   
   12ad1:	int3   
   12ad2:	int3   
   12ad3:	int3   
   12ad4:	int3   
   12ad5:	int3   
   12ad6:	mov    edi,edi
   12ad8:	push   esi
   12ad9:	mov    esi,ecx
   12adb:	lea    ecx,[esi+0x8]
   12ade:	call   0x11eba
   12ae3:	push   DWORD PTR [esi]
   12ae5:	call   0x1d9fc
   12aea:	pop    ecx
   12aeb:	pop    esi
   12aec:	ret    
   12aed:	int3   
   12aee:	int3   
   12aef:	int3   
   12af0:	int3   
   12af1:	int3   
   12af2:	mov    edi,edi
   12af4:	push   ebp
   12af5:	mov    ebp,esp
   12af7:	push   esi
   12af8:	push   DWORD PTR [ebp+0xc]
   12afb:	mov    esi,ecx
   12afd:	push   DWORD PTR [ebp+0x8]
   12b00:	call   0x1113e
   12b05:	mov    eax,esi
   12b07:	pop    esi
   12b08:	pop    ebp
   12b09:	ret    0x8
   12b0c:	int3   
   12b0d:	int3   
   12b0e:	int3   
   12b0f:	int3   
   12b10:	int3   
   12b11:	int3   
   12b12:	mov    edi,edi
   12b14:	push   ebp
   12b15:	mov    ebp,esp
   12b17:	mov    eax,DWORD PTR [ebp+0x8]
   12b1a:	push   esi
   12b1b:	push   DWORD PTR [eax+0x4]
   12b1e:	mov    esi,ecx
   12b20:	push   DWORD PTR [eax]
   12b22:	call   0x1113e
   12b27:	mov    eax,esi
   12b29:	pop    esi
   12b2a:	pop    ebp
   12b2b:	ret    0x4
   12b2e:	int3   
   12b2f:	int3   
   12b30:	int3   
   12b31:	int3   
   12b32:	int3   
   12b33:	int3   
   12b34:	mov    edi,edi
   12b36:	push   ebp
   12b37:	mov    ebp,esp
   12b39:	push   ebx
   12b3a:	push   esi
   12b3b:	push   edi
   12b3c:	mov    edi,DWORD PTR [ebp+0x8]
   12b3f:	mov    eax,DWORD PTR [edi+0x4]
   12b42:	mov    esi,ecx
   12b44:	mov    ebx,DWORD PTR [esi]
   12b46:	mov    DWORD PTR [esi+0x4],eax
   12b49:	xor    ecx,ecx
   12b4b:	push   0x2
   12b4d:	inc    eax
   12b4e:	pop    edx
   12b4f:	mul    edx
   12b51:	seto   cl
   12b54:	neg    ecx
   12b56:	or     ecx,eax
   12b58:	push   ecx
   12b59:	call   0x10a52
   12b5e:	mov    ecx,DWORD PTR [esi+0x4]
   12b61:	add    ecx,ecx
   12b63:	push   ecx
   12b64:	mov    DWORD PTR [esi],eax
   12b66:	push   DWORD PTR [edi]
   12b68:	push   eax
   12b69:	call   0x1da8a
   12b6e:	mov    eax,DWORD PTR [esi+0x4]
   12b71:	mov    ecx,DWORD PTR [esi]
   12b73:	xor    edx,edx
   12b75:	push   ebx
   12b76:	mov    WORD PTR [ecx+eax*2],dx
   12b7a:	call   0x1d9fc
   12b7f:	add    esp,0x14
   12b82:	pop    edi
   12b83:	mov    eax,esi
   12b85:	pop    esi
   12b86:	pop    ebx
   12b87:	pop    ebp
   12b88:	ret    0x4
   12b8b:	int3   
   12b8c:	int3   
   12b8d:	int3   
   12b8e:	int3   
   12b8f:	int3   
   12b90:	mov    edi,edi
   12b92:	push   ebp
   12b93:	mov    ebp,esp
   12b95:	push   esi
   12b96:	mov    esi,DWORD PTR [ebp+0x8]
   12b99:	lea    eax,[ebp+0xc]
   12b9c:	push   eax
   12b9d:	mov    ecx,esi
   12b9f:	call   0x12b12
   12ba4:	xor    ecx,ecx
   12ba6:	inc    ecx
   12ba7:	cmp    DWORD PTR [esi+0x4],ecx
   12baa:	jbe    0x12bbe
   12bac:	mov    eax,DWORD PTR [esi]
   12bae:	lea    eax,[eax+ecx*2]
   12bb1:	mov    dx,WORD PTR [eax-0x2]
   12bb5:	xor    WORD PTR [eax],dx
   12bb8:	inc    ecx
   12bb9:	cmp    ecx,DWORD PTR [esi+0x4]
   12bbc:	jb     0x12bac
   12bbe:	push   DWORD PTR [ebp+0xc]
   12bc1:	call   0x1d9fc
   12bc6:	pop    ecx
   12bc7:	mov    eax,esi
   12bc9:	pop    esi
   12bca:	pop    ebp
   12bcb:	ret    0xc
   12bce:	int3   
   12bcf:	int3   
   12bd0:	int3   
   12bd1:	int3   
   12bd2:	int3   
   12bd3:	int3   
   12bd4:	mov    edi,edi
   12bd6:	push   ebp
   12bd7:	mov    ebp,esp
   12bd9:	push   esi
   12bda:	mov    esi,DWORD PTR [ebp+0x8]
   12bdd:	lea    eax,[ebp+0xc]
   12be0:	push   eax
   12be1:	mov    ecx,esi
   12be3:	call   0x129a0
   12be8:	xor    ecx,ecx
   12bea:	inc    ecx
   12beb:	cmp    DWORD PTR [esi+0x4],ecx
   12bee:	jbe    0x12bff
   12bf0:	mov    eax,DWORD PTR [esi]
   12bf2:	add    eax,ecx
   12bf4:	mov    dl,BYTE PTR [eax-0x1]
   12bf7:	xor    BYTE PTR [eax],dl
   12bf9:	inc    ecx
   12bfa:	cmp    ecx,DWORD PTR [esi+0x4]
   12bfd:	jb     0x12bf0
   12bff:	push   DWORD PTR [ebp+0xc]
   12c02:	call   0x1d9fc
   12c07:	pop    ecx
   12c08:	mov    eax,esi
   12c0a:	pop    esi
   12c0b:	pop    ebp
   12c0c:	ret    0xc
   12c0f:	int3   
   12c10:	int3   
   12c11:	int3   
   12c12:	int3   
   12c13:	int3   
   12c14:	mov    edi,edi
   12c16:	push   ebp
   12c17:	mov    ebp,esp
   12c19:	mov    eax,DWORD PTR [ebp+0x8]
   12c1c:	mov    eax,DWORD PTR [eax]
   12c1e:	push   esi
   12c1f:	push   DWORD PTR [ebp+0xc]
   12c22:	mov    esi,ecx
   12c24:	lea    ecx,[esi+0x4]
   12c27:	mov    DWORD PTR [esi],eax
   12c29:	call   0x11ef8
   12c2e:	mov    eax,esi
   12c30:	pop    esi
   12c31:	pop    ebp
   12c32:	ret    0x8
   12c35:	int3   
   12c36:	int3   
   12c37:	int3   
   12c38:	int3   
   12c39:	int3   
   12c3a:	mov    edi,edi
   12c3c:	push   ebp
   12c3d:	mov    ebp,esp
   12c3f:	push   esi
   12c40:	push   edi
   12c41:	mov    edi,DWORD PTR [ebp+0x8]
   12c44:	push   edi
   12c45:	mov    esi,ecx
   12c47:	call   0x129a0
   12c4c:	lea    eax,[edi+0x8]
   12c4f:	push   eax
   12c50:	lea    ecx,[esi+0x8]
   12c53:	call   0x129a0
   12c58:	mov    eax,DWORD PTR [edi+0x10]
   12c5b:	mov    DWORD PTR [esi+0x10],eax
   12c5e:	lea    eax,[edi+0x14]
   12c61:	push   eax
   12c62:	lea    ecx,[esi+0x14]
   12c65:	call   0x129a0
   12c6a:	lea    eax,[edi+0x1c]
   12c6d:	push   eax
   12c6e:	lea    ecx,[esi+0x1c]
   12c71:	call   0x129a0
   12c76:	lea    eax,[edi+0x24]
   12c79:	push   eax
   12c7a:	lea    ecx,[esi+0x24]
   12c7d:	call   0x129a0
   12c82:	mov    eax,DWORD PTR [edi+0x2c]
   12c85:	mov    DWORD PTR [esi+0x2c],eax
   12c88:	mov    eax,DWORD PTR [edi+0x30]
   12c8b:	mov    DWORD PTR [esi+0x30],eax
   12c8e:	mov    eax,DWORD PTR [edi+0x38]
   12c91:	mov    DWORD PTR [esi+0x38],eax
   12c94:	mov    eax,DWORD PTR [edi+0x3c]
   12c97:	mov    DWORD PTR [esi+0x3c],eax
   12c9a:	mov    eax,DWORD PTR [edi+0x40]
   12c9d:	mov    DWORD PTR [esi+0x40],eax
   12ca0:	mov    eax,DWORD PTR [edi+0x44]
   12ca3:	add    edi,0x48
   12ca6:	push   edi
   12ca7:	lea    ecx,[esi+0x48]
   12caa:	mov    DWORD PTR [esi+0x44],eax
   12cad:	call   0x129a0
   12cb2:	pop    edi
   12cb3:	mov    eax,esi
   12cb5:	pop    esi
   12cb6:	pop    ebp
   12cb7:	ret    0x4
   12cba:	int3   
   12cbb:	int3   
   12cbc:	int3   
   12cbd:	int3   
   12cbe:	int3   
   12cbf:	int3   
   12cc0:	mov    edi,edi
   12cc2:	push   ebp
   12cc3:	mov    ebp,esp
   12cc5:	mov    eax,DWORD PTR [ebp+0x8]
   12cc8:	mov    edx,DWORD PTR ds:0x78abc
   12cce:	jmp    0x12cd2
   12cd0:	mov    eax,ecx
   12cd2:	mov    ecx,DWORD PTR [eax]
   12cd4:	cmp    ecx,edx
   12cd6:	jne    0x12cd0
   12cd8:	pop    ebp
   12cd9:	ret    0x4
   12cdc:	int3   
   12cdd:	int3   
   12cde:	int3   
   12cdf:	int3   
   12ce0:	int3   
   12ce1:	int3   
   12ce2:	mov    edi,edi
   12ce4:	push   ebp
   12ce5:	mov    ebp,esp
   12ce7:	push   esi
   12ce8:	push   DWORD PTR [ebp+0x8]
   12ceb:	mov    esi,ecx
   12ced:	call   0x12b12
   12cf2:	push   DWORD PTR [ebp+0xc]
   12cf5:	lea    ecx,[esi+0x8]
   12cf8:	call   0x12b12
   12cfd:	mov    eax,esi
   12cff:	pop    esi
   12d00:	pop    ebp
   12d01:	ret    0x8
   12d04:	int3   
   12d05:	int3   
   12d06:	int3   
   12d07:	int3   
   12d08:	int3   
   12d09:	int3   
   12d0a:	mov    edi,edi
   12d0c:	push   ebp
   12d0d:	mov    ebp,esp
   12d0f:	mov    eax,DWORD PTR [ecx+0x4]
   12d12:	mov    ecx,DWORD PTR [eax+0x4]
   12d15:	mov    edx,DWORD PTR ds:0x78ab0
   12d1b:	cmp    ecx,edx
   12d1d:	je     0x12d38
   12d1f:	push   esi
   12d20:	mov    esi,DWORD PTR [ebp+0x8]
   12d23:	mov    esi,DWORD PTR [esi]
   12d25:	cmp    DWORD PTR [ecx+0xc],esi
   12d28:	jae    0x12d2f
   12d2a:	mov    ecx,DWORD PTR [ecx+0x8]
   12d2d:	jmp    0x12d33
   12d2f:	mov    eax,ecx
   12d31:	mov    ecx,DWORD PTR [ecx]
   12d33:	cmp    ecx,edx
   12d35:	jne    0x12d25
   12d37:	pop    esi
   12d38:	pop    ebp
   12d39:	ret    0x4
   12d3c:	int3   
   12d3d:	int3   
   12d3e:	int3   
   12d3f:	int3   
   12d40:	int3   
   12d41:	int3   
   12d42:	mov    edi,edi
   12d44:	push   ebp
   12d45:	mov    ebp,esp
   12d47:	mov    edx,DWORD PTR [ebp+0x8]
   12d4a:	mov    eax,DWORD PTR [edx+0x8]
   12d4d:	push   esi
   12d4e:	mov    esi,DWORD PTR [eax]
   12d50:	mov    DWORD PTR [edx+0x8],esi
   12d53:	mov    esi,DWORD PTR [eax]
   12d55:	cmp    esi,DWORD PTR ds:0x78ab0
   12d5b:	je     0x12d60
   12d5d:	mov    DWORD PTR [esi+0x4],edx
   12d60:	mov    esi,DWORD PTR [edx+0x4]
   12d63:	mov    DWORD PTR [eax+0x4],esi
   12d66:	mov    ecx,DWORD PTR [ecx+0x4]
   12d69:	pop    esi
   12d6a:	cmp    edx,DWORD PTR [ecx+0x4]
   12d6d:	jne    0x12d74
   12d6f:	mov    DWORD PTR [ecx+0x4],eax
   12d72:	jmp    0x12d82
   12d74:	mov    ecx,DWORD PTR [edx+0x4]
   12d77:	cmp    edx,DWORD PTR [ecx]
   12d79:	jne    0x12d7f
   12d7b:	mov    DWORD PTR [ecx],eax
   12d7d:	jmp    0x12d82
   12d7f:	mov    DWORD PTR [ecx+0x8],eax
   12d82:	mov    DWORD PTR [eax],edx
   12d84:	mov    DWORD PTR [edx+0x4],eax
   12d87:	pop    ebp
   12d88:	ret    0x4
   12d8b:	int3   
   12d8c:	int3   
   12d8d:	int3   
   12d8e:	int3   
   12d8f:	int3   
   12d90:	mov    edi,edi
   12d92:	push   ebp
   12d93:	mov    ebp,esp
   12d95:	mov    edx,DWORD PTR [ebp+0x8]
   12d98:	mov    eax,DWORD PTR [edx]
   12d9a:	push   esi
   12d9b:	mov    esi,DWORD PTR [eax+0x8]
   12d9e:	mov    DWORD PTR [edx],esi
   12da0:	mov    esi,DWORD PTR [eax+0x8]
   12da3:	cmp    esi,DWORD PTR ds:0x78ab0
   12da9:	je     0x12dae
   12dab:	mov    DWORD PTR [esi+0x4],edx
   12dae:	mov    esi,DWORD PTR [edx+0x4]
   12db1:	mov    DWORD PTR [eax+0x4],esi
   12db4:	mov    ecx,DWORD PTR [ecx+0x4]
   12db7:	pop    esi
   12db8:	cmp    edx,DWORD PTR [ecx+0x4]
   12dbb:	jne    0x12dc2
   12dbd:	mov    DWORD PTR [ecx+0x4],eax
   12dc0:	jmp    0x12dd1
   12dc2:	mov    ecx,DWORD PTR [edx+0x4]
   12dc5:	cmp    edx,DWORD PTR [ecx+0x8]
   12dc8:	jne    0x12dcf
   12dca:	mov    DWORD PTR [ecx+0x8],eax
   12dcd:	jmp    0x12dd1
   12dcf:	mov    DWORD PTR [ecx],eax
   12dd1:	mov    DWORD PTR [eax+0x8],edx
   12dd4:	mov    DWORD PTR [edx+0x4],eax
   12dd7:	pop    ebp
   12dd8:	ret    0x4
   12ddb:	int3   
   12ddc:	int3   
   12ddd:	int3   
   12dde:	int3   
   12ddf:	int3   
   12de0:	mov    edi,edi
   12de2:	push   ebp
   12de3:	mov    ebp,esp
   12de5:	mov    eax,DWORD PTR [ecx+0x4]
   12de8:	push   esi
   12de9:	mov    esi,DWORD PTR [eax+0x4]
   12dec:	push   edi
   12ded:	mov    edi,eax
   12def:	jmp    0x12e0a
   12df1:	push   DWORD PTR [ebp+0x8]
   12df4:	lea    eax,[esi+0x10]
   12df7:	push   eax
   12df8:	call   0x197b8
   12dfd:	test   al,al
   12dff:	je     0x12e06
   12e01:	mov    esi,DWORD PTR [esi+0x8]
   12e04:	jmp    0x12e0a
   12e06:	mov    edi,esi
   12e08:	mov    esi,DWORD PTR [esi]
   12e0a:	cmp    esi,DWORD PTR ds:0x78abc
   12e10:	jne    0x12df1
   12e12:	mov    eax,edi
   12e14:	pop    edi
   12e15:	pop    esi
   12e16:	pop    ebp
   12e17:	ret    0x4
   12e1a:	int3   
   12e1b:	int3   
   12e1c:	int3   
   12e1d:	int3   
   12e1e:	int3   
   12e1f:	int3   
   12e20:	mov    edi,edi
   12e22:	push   ebp
   12e23:	mov    ebp,esp
   12e25:	mov    eax,DWORD PTR [ecx+0x4]
   12e28:	push   esi
   12e29:	mov    esi,DWORD PTR [eax+0x4]
   12e2c:	push   edi
   12e2d:	mov    edi,eax
   12e2f:	jmp    0x12e4a
   12e31:	push   DWORD PTR [ebp+0x8]
   12e34:	lea    eax,[esi+0xc]
   12e37:	push   eax
   12e38:	call   0x197b8
   12e3d:	test   al,al
   12e3f:	je     0x12e46
   12e41:	mov    esi,DWORD PTR [esi+0x8]
   12e44:	jmp    0x12e4a
   12e46:	mov    edi,esi
   12e48:	mov    esi,DWORD PTR [esi]
   12e4a:	cmp    esi,DWORD PTR ds:0x78ac0
   12e50:	jne    0x12e31
   12e52:	mov    eax,edi
   12e54:	pop    edi
   12e55:	pop    esi
   12e56:	pop    ebp
   12e57:	ret    0x4
   12e5a:	int3   
   12e5b:	int3   
   12e5c:	int3   
   12e5d:	int3   
   12e5e:	int3   
   12e5f:	int3   
   12e60:	mov    edi,edi
   12e62:	push   ebp
   12e63:	mov    ebp,esp
   12e65:	mov    eax,DWORD PTR [ecx+0x4]
   12e68:	mov    ecx,DWORD PTR [eax+0x4]
   12e6b:	mov    edx,DWORD PTR ds:0x78ac4
   12e71:	cmp    ecx,edx
   12e73:	je     0x12e8e
   12e75:	push   esi
   12e76:	mov    esi,DWORD PTR [ebp+0x8]
   12e79:	mov    esi,DWORD PTR [esi]
   12e7b:	cmp    DWORD PTR [ecx+0xc],esi
   12e7e:	jge    0x12e85
   12e80:	mov    ecx,DWORD PTR [ecx+0x8]
   12e83:	jmp    0x12e89
   12e85:	mov    eax,ecx
   12e87:	mov    ecx,DWORD PTR [ecx]
   12e89:	cmp    ecx,edx
   12e8b:	jne    0x12e7b
   12e8d:	pop    esi
   12e8e:	pop    ebp
   12e8f:	ret    0x4
   12e92:	int3   
   12e93:	int3   
   12e94:	int3   
   12e95:	int3   
   12e96:	int3   
   12e97:	int3   
   12e98:	mov    edi,edi
   12e9a:	push   esi
   12e9b:	mov    esi,ecx
   12e9d:	mov    ecx,DWORD PTR [esi]
   12e9f:	mov    eax,DWORD PTR [ecx+0x8]
   12ea2:	cmp    eax,DWORD PTR ds:0x78ab8
   12ea8:	je     0x12eb6
   12eaa:	push   eax
   12eab:	call   0x11254
   12eb0:	jmp    0x12ec5
   12eb2:	mov    DWORD PTR [esi],eax
   12eb4:	mov    ecx,eax
   12eb6:	mov    eax,DWORD PTR [ecx+0x4]
   12eb9:	cmp    ecx,DWORD PTR [eax+0x8]
   12ebc:	je     0x12eb2
   12ebe:	mov    ecx,DWORD PTR [esi]
   12ec0:	cmp    DWORD PTR [ecx+0x8],eax
   12ec3:	je     0x12ec7
   12ec5:	mov    DWORD PTR [esi],eax
   12ec7:	pop    esi
   12ec8:	ret    
   12ec9:	int3   
   12eca:	int3   
   12ecb:	int3   
   12ecc:	int3   
   12ecd:	int3   
   12ece:	mov    edi,edi
   12ed0:	push   esi
   12ed1:	mov    esi,ecx
   12ed3:	mov    ecx,DWORD PTR [esi]
   12ed5:	cmp    DWORD PTR [ecx+0x10],0x0
   12ed9:	jne    0x12ee8
   12edb:	mov    eax,DWORD PTR [ecx+0x4]
   12ede:	cmp    DWORD PTR [eax+0x4],ecx
   12ee1:	jne    0x12ee8
   12ee3:	mov    eax,DWORD PTR [ecx+0x8]
   12ee6:	jmp    0x12f05
   12ee8:	mov    eax,DWORD PTR [ecx]
   12eea:	cmp    eax,DWORD PTR ds:0x78ab4
   12ef0:	je     0x12efe
   12ef2:	push   eax
   12ef3:	call   0x111ee
   12ef8:	jmp    0x12f05
   12efa:	mov    DWORD PTR [esi],eax
   12efc:	mov    ecx,eax
   12efe:	mov    eax,DWORD PTR [ecx+0x4]
   12f01:	cmp    ecx,DWORD PTR [eax]
   12f03:	je     0x12efa
   12f05:	mov    DWORD PTR [esi],eax
   12f07:	pop    esi
   12f08:	ret    
   12f09:	int3   
   12f0a:	int3   
   12f0b:	int3   
   12f0c:	int3   
   12f0d:	int3   
   12f0e:	mov    edi,edi
   12f10:	push   esi
   12f11:	mov    esi,ecx
   12f13:	mov    ecx,DWORD PTR [esi]
   12f15:	mov    eax,DWORD PTR [ecx+0x8]
   12f18:	cmp    eax,DWORD PTR ds:0x78ab4
   12f1e:	je     0x12f2c
   12f20:	push   eax
   12f21:	call   0x11210
   12f26:	jmp    0x12f3b
   12f28:	mov    DWORD PTR [esi],eax
   12f2a:	mov    ecx,eax
   12f2c:	mov    eax,DWORD PTR [ecx+0x4]
   12f2f:	cmp    ecx,DWORD PTR [eax+0x8]
   12f32:	je     0x12f28
   12f34:	mov    ecx,DWORD PTR [esi]
   12f36:	cmp    DWORD PTR [ecx+0x8],eax
   12f39:	je     0x12f3d
   12f3b:	mov    DWORD PTR [esi],eax
   12f3d:	pop    esi
   12f3e:	ret    
   12f3f:	int3   
   12f40:	int3   
   12f41:	int3   
   12f42:	int3   
   12f43:	int3   
   12f44:	mov    edi,edi
   12f46:	push   ebp
   12f47:	mov    ebp,esp
   12f49:	mov    edx,DWORD PTR [ebp+0x8]
   12f4c:	mov    eax,DWORD PTR [edx+0x8]
   12f4f:	push   esi
   12f50:	mov    esi,DWORD PTR [eax]
   12f52:	mov    DWORD PTR [edx+0x8],esi
   12f55:	mov    esi,DWORD PTR [eax]
   12f57:	cmp    esi,DWORD PTR ds:0x78ab4
   12f5d:	je     0x12f62
   12f5f:	mov    DWORD PTR [esi+0x4],edx
   12f62:	mov    esi,DWORD PTR [edx+0x4]
   12f65:	mov    DWORD PTR [eax+0x4],esi
   12f68:	mov    ecx,DWORD PTR [ecx+0x4]
   12f6b:	pop    esi
   12f6c:	cmp    edx,DWORD PTR [ecx+0x4]
   12f6f:	jne    0x12f76
   12f71:	mov    DWORD PTR [ecx+0x4],eax
   12f74:	jmp    0x12f84
   12f76:	mov    ecx,DWORD PTR [edx+0x4]
   12f79:	cmp    edx,DWORD PTR [ecx]
   12f7b:	jne    0x12f81
   12f7d:	mov    DWORD PTR [ecx],eax
   12f7f:	jmp    0x12f84
   12f81:	mov    DWORD PTR [ecx+0x8],eax
   12f84:	mov    DWORD PTR [eax],edx
   12f86:	mov    DWORD PTR [edx+0x4],eax
   12f89:	pop    ebp
   12f8a:	ret    0x4
   12f8d:	int3   
   12f8e:	int3   
   12f8f:	int3   
   12f90:	int3   
   12f91:	int3   
   12f92:	mov    edi,edi
   12f94:	push   ebp
   12f95:	mov    ebp,esp
   12f97:	mov    edx,DWORD PTR [ebp+0x8]
   12f9a:	mov    eax,DWORD PTR [edx]
   12f9c:	push   esi
   12f9d:	mov    esi,DWORD PTR [eax+0x8]
   12fa0:	mov    DWORD PTR [edx],esi
   12fa2:	mov    esi,DWORD PTR [eax+0x8]
   12fa5:	cmp    esi,DWORD PTR ds:0x78ab4
   12fab:	je     0x12fb0
   12fad:	mov    DWORD PTR [esi+0x4],edx
   12fb0:	mov    esi,DWORD PTR [edx+0x4]
   12fb3:	mov    DWORD PTR [eax+0x4],esi
   12fb6:	mov    ecx,DWORD PTR [ecx+0x4]
   12fb9:	pop    esi
   12fba:	cmp    edx,DWORD PTR [ecx+0x4]
   12fbd:	jne    0x12fc4
   12fbf:	mov    DWORD PTR [ecx+0x4],eax
   12fc2:	jmp    0x12fd3
   12fc4:	mov    ecx,DWORD PTR [edx+0x4]
   12fc7:	cmp    edx,DWORD PTR [ecx+0x8]
   12fca:	jne    0x12fd1
   12fcc:	mov    DWORD PTR [ecx+0x8],eax
   12fcf:	jmp    0x12fd3
   12fd1:	mov    DWORD PTR [ecx],eax
   12fd3:	mov    DWORD PTR [eax+0x8],edx
   12fd6:	mov    DWORD PTR [edx+0x4],eax
   12fd9:	pop    ebp
   12fda:	ret    0x4
   12fdd:	int3   
   12fde:	int3   
   12fdf:	int3   
   12fe0:	int3   
   12fe1:	int3   
   12fe2:	mov    edi,edi
   12fe4:	push   ebp
   12fe5:	mov    ebp,esp
   12fe7:	mov    eax,DWORD PTR [ecx+0x4]
   12fea:	push   esi
   12feb:	mov    esi,DWORD PTR [eax+0x4]
   12fee:	push   edi
   12fef:	mov    edi,eax
   12ff1:	jmp    0x1300c
   12ff3:	push   DWORD PTR [ebp+0x8]
   12ff6:	lea    eax,[esi+0x10]
   12ff9:	push   eax
   12ffa:	call   0x197b8
   12fff:	test   al,al
   13001:	je     0x13008
   13003:	mov    esi,DWORD PTR [esi+0x8]
   13006:	jmp    0x1300c
   13008:	mov    edi,esi
   1300a:	mov    esi,DWORD PTR [esi]
   1300c:	cmp    esi,DWORD PTR ds:0x78ab8
   13012:	jne    0x12ff3
   13014:	mov    eax,edi
   13016:	pop    edi
   13017:	pop    esi
   13018:	pop    ebp
   13019:	ret    0x4
   1301c:	int3   
   1301d:	int3   
   1301e:	int3   
   1301f:	int3   
   13020:	int3   
   13021:	int3   
   13022:	mov    edi,edi
   13024:	push   ebp
   13025:	mov    ebp,esp
   13027:	mov    edx,DWORD PTR [ebp+0x8]
   1302a:	mov    eax,DWORD PTR [edx+0x8]
   1302d:	push   esi
   1302e:	mov    esi,DWORD PTR [eax]
   13030:	mov    DWORD PTR [edx+0x8],esi
   13033:	mov    esi,DWORD PTR [eax]
   13035:	cmp    esi,DWORD PTR ds:0x78ab8
   1303b:	je     0x13040
   1303d:	mov    DWORD PTR [esi+0x4],edx
   13040:	mov    esi,DWORD PTR [edx+0x4]
   13043:	mov    DWORD PTR [eax+0x4],esi
   13046:	mov    ecx,DWORD PTR [ecx+0x4]
   13049:	pop    esi
   1304a:	cmp    edx,DWORD PTR [ecx+0x4]
   1304d:	jne    0x13054
   1304f:	mov    DWORD PTR [ecx+0x4],eax
   13052:	jmp    0x13062
   13054:	mov    ecx,DWORD PTR [edx+0x4]
   13057:	cmp    edx,DWORD PTR [ecx]
   13059:	jne    0x1305f
   1305b:	mov    DWORD PTR [ecx],eax
   1305d:	jmp    0x13062
   1305f:	mov    DWORD PTR [ecx+0x8],eax
   13062:	mov    DWORD PTR [eax],edx
   13064:	mov    DWORD PTR [edx+0x4],eax
   13067:	pop    ebp
   13068:	ret    0x4
   1306b:	int3   
   1306c:	int3   
   1306d:	int3   
   1306e:	int3   
   1306f:	int3   
   13070:	mov    edi,edi
   13072:	push   ebp
   13073:	mov    ebp,esp
   13075:	mov    edx,DWORD PTR [ebp+0x8]
   13078:	mov    eax,DWORD PTR [edx]
   1307a:	push   esi
   1307b:	mov    esi,DWORD PTR [eax+0x8]
   1307e:	mov    DWORD PTR [edx],esi
   13080:	mov    esi,DWORD PTR [eax+0x8]
   13083:	cmp    esi,DWORD PTR ds:0x78ab8
   13089:	je     0x1308e
   1308b:	mov    DWORD PTR [esi+0x4],edx
   1308e:	mov    esi,DWORD PTR [edx+0x4]
   13091:	mov    DWORD PTR [eax+0x4],esi
   13094:	mov    ecx,DWORD PTR [ecx+0x4]
   13097:	pop    esi
   13098:	cmp    edx,DWORD PTR [ecx+0x4]
   1309b:	jne    0x130a2
   1309d:	mov    DWORD PTR [ecx+0x4],eax
   130a0:	jmp    0x130b1
   130a2:	mov    ecx,DWORD PTR [edx+0x4]
   130a5:	cmp    edx,DWORD PTR [ecx+0x8]
   130a8:	jne    0x130af
   130aa:	mov    DWORD PTR [ecx+0x8],eax
   130ad:	jmp    0x130b1
   130af:	mov    DWORD PTR [ecx],eax
   130b1:	mov    DWORD PTR [eax+0x8],edx
   130b4:	mov    DWORD PTR [edx+0x4],eax
   130b7:	pop    ebp
   130b8:	ret    0x4
   130bb:	int3   
   130bc:	int3   
   130bd:	int3   
   130be:	int3   
   130bf:	int3   
   130c0:	mov    edi,edi
   130c2:	push   ebp
   130c3:	mov    ebp,esp
   130c5:	mov    eax,DWORD PTR [ecx+0x4]
   130c8:	mov    ecx,DWORD PTR [eax+0x4]
   130cb:	mov    edx,DWORD PTR ds:0x78ab0
   130d1:	cmp    ecx,edx
   130d3:	je     0x130ee
   130d5:	push   esi
   130d6:	mov    esi,DWORD PTR [ebp+0x8]
   130d9:	mov    esi,DWORD PTR [esi]
   130db:	cmp    esi,DWORD PTR [ecx+0xc]
   130de:	jae    0x130e6
   130e0:	mov    eax,ecx
   130e2:	mov    ecx,DWORD PTR [ecx]
   130e4:	jmp    0x130e9
   130e6:	mov    ecx,DWORD PTR [ecx+0x8]
   130e9:	cmp    ecx,edx
   130eb:	jne    0x130db
   130ed:	pop    esi
   130ee:	pop    ebp
   130ef:	ret    0x4
   130f2:	int3   
   130f3:	int3   
   130f4:	int3   
   130f5:	int3   
   130f6:	int3   
   130f7:	int3   
   130f8:	mov    edi,edi
   130fa:	push   ebp
   130fb:	mov    ebp,esp
   130fd:	mov    eax,DWORD PTR [ecx+0x4]
   13100:	push   esi
   13101:	mov    esi,DWORD PTR [eax+0x4]
   13104:	push   edi
   13105:	mov    edi,eax
   13107:	jmp    0x13122
   13109:	lea    eax,[esi+0x10]
   1310c:	push   eax
   1310d:	push   DWORD PTR [ebp+0x8]
   13110:	call   0x197b8
   13115:	test   al,al
   13117:	je     0x1311f
   13119:	mov    edi,esi
   1311b:	mov    esi,DWORD PTR [esi]
   1311d:	jmp    0x13122
   1311f:	mov    esi,DWORD PTR [esi+0x8]
   13122:	cmp    esi,DWORD PTR ds:0x78abc
   13128:	jne    0x13109
   1312a:	mov    eax,edi
   1312c:	pop    edi
   1312d:	pop    esi
   1312e:	pop    ebp
   1312f:	ret    0x4
   13132:	int3   
   13133:	int3   
   13134:	int3   
   13135:	int3   
   13136:	int3   
   13137:	int3   
   13138:	mov    edi,edi
   1313a:	push   ebp
   1313b:	mov    ebp,esp
   1313d:	mov    edx,DWORD PTR [ebp+0x8]
   13140:	mov    eax,DWORD PTR [edx+0x8]
   13143:	push   esi
   13144:	mov    esi,DWORD PTR [eax]
   13146:	mov    DWORD PTR [edx+0x8],esi
   13149:	mov    esi,DWORD PTR [eax]
   1314b:	cmp    esi,DWORD PTR ds:0x78ac0
   13151:	je     0x13156
   13153:	mov    DWORD PTR [esi+0x4],edx
   13156:	mov    esi,DWORD PTR [edx+0x4]
   13159:	mov    DWORD PTR [eax+0x4],esi
   1315c:	mov    ecx,DWORD PTR [ecx+0x4]
   1315f:	pop    esi
   13160:	cmp    edx,DWORD PTR [ecx+0x4]
   13163:	jne    0x1316a
   13165:	mov    DWORD PTR [ecx+0x4],eax
   13168:	jmp    0x13178
   1316a:	mov    ecx,DWORD PTR [edx+0x4]
   1316d:	cmp    edx,DWORD PTR [ecx]
   1316f:	jne    0x13175
   13171:	mov    DWORD PTR [ecx],eax
   13173:	jmp    0x13178
   13175:	mov    DWORD PTR [ecx+0x8],eax
   13178:	mov    DWORD PTR [eax],edx
   1317a:	mov    DWORD PTR [edx+0x4],eax
   1317d:	pop    ebp
   1317e:	ret    0x4
   13181:	int3   
   13182:	int3   
   13183:	int3   
   13184:	int3   
   13185:	int3   
   13186:	mov    edi,edi
   13188:	push   ebp
   13189:	mov    ebp,esp
   1318b:	mov    edx,DWORD PTR [ebp+0x8]
   1318e:	mov    eax,DWORD PTR [edx]
   13190:	push   esi
   13191:	mov    esi,DWORD PTR [eax+0x8]
   13194:	mov    DWORD PTR [edx],esi
   13196:	mov    esi,DWORD PTR [eax+0x8]
   13199:	cmp    esi,DWORD PTR ds:0x78ac0
   1319f:	je     0x131a4
   131a1:	mov    DWORD PTR [esi+0x4],edx
   131a4:	mov    esi,DWORD PTR [edx+0x4]
   131a7:	mov    DWORD PTR [eax+0x4],esi
   131aa:	mov    ecx,DWORD PTR [ecx+0x4]
   131ad:	pop    esi
   131ae:	cmp    edx,DWORD PTR [ecx+0x4]
   131b1:	jne    0x131b8
   131b3:	mov    DWORD PTR [ecx+0x4],eax
   131b6:	jmp    0x131c7
   131b8:	mov    ecx,DWORD PTR [edx+0x4]
   131bb:	cmp    edx,DWORD PTR [ecx+0x8]
   131be:	jne    0x131c5
   131c0:	mov    DWORD PTR [ecx+0x8],eax
   131c3:	jmp    0x131c7
   131c5:	mov    DWORD PTR [ecx],eax
   131c7:	mov    DWORD PTR [eax+0x8],edx
   131ca:	mov    DWORD PTR [edx+0x4],eax
   131cd:	pop    ebp
   131ce:	ret    0x4
   131d1:	int3   
   131d2:	int3   
   131d3:	int3   
   131d4:	int3   
   131d5:	int3   
   131d6:	mov    edi,edi
   131d8:	push   ebp
   131d9:	mov    ebp,esp
   131db:	mov    eax,DWORD PTR [ecx+0x4]
   131de:	push   esi
   131df:	mov    esi,DWORD PTR [eax+0x4]
   131e2:	push   edi
   131e3:	mov    edi,eax
   131e5:	jmp    0x13200
   131e7:	lea    eax,[esi+0xc]
   131ea:	push   eax
   131eb:	push   DWORD PTR [ebp+0x8]
   131ee:	call   0x197b8
   131f3:	test   al,al
   131f5:	je     0x131fd
   131f7:	mov    edi,esi
   131f9:	mov    esi,DWORD PTR [esi]
   131fb:	jmp    0x13200
   131fd:	mov    esi,DWORD PTR [esi+0x8]
   13200:	cmp    esi,DWORD PTR ds:0x78ac0
   13206:	jne    0x131e7
   13208:	mov    eax,edi
   1320a:	pop    edi
   1320b:	pop    esi
   1320c:	pop    ebp
   1320d:	ret    0x4
   13210:	int3   
   13211:	int3   
   13212:	int3   
   13213:	int3   
   13214:	int3   
   13215:	int3   
   13216:	mov    edi,edi
   13218:	push   ebp
   13219:	mov    ebp,esp
   1321b:	mov    edx,DWORD PTR [ebp+0x8]
   1321e:	mov    eax,DWORD PTR [edx+0x8]
   13221:	push   esi
   13222:	mov    esi,DWORD PTR [eax]
   13224:	mov    DWORD PTR [edx+0x8],esi
   13227:	mov    esi,DWORD PTR [eax]
   13229:	cmp    esi,DWORD PTR ds:0x78ac4
   1322f:	je     0x13234
   13231:	mov    DWORD PTR [esi+0x4],edx
   13234:	mov    esi,DWORD PTR [edx+0x4]
   13237:	mov    DWORD PTR [eax+0x4],esi
   1323a:	mov    ecx,DWORD PTR [ecx+0x4]
   1323d:	pop    esi
   1323e:	cmp    edx,DWORD PTR [ecx+0x4]
   13241:	jne    0x13248
   13243:	mov    DWORD PTR [ecx+0x4],eax
   13246:	jmp    0x13256
   13248:	mov    ecx,DWORD PTR [edx+0x4]
   1324b:	cmp    edx,DWORD PTR [ecx]
   1324d:	jne    0x13253
   1324f:	mov    DWORD PTR [ecx],eax
   13251:	jmp    0x13256
   13253:	mov    DWORD PTR [ecx+0x8],eax
   13256:	mov    DWORD PTR [eax],edx
   13258:	mov    DWORD PTR [edx+0x4],eax
   1325b:	pop    ebp
   1325c:	ret    0x4
   1325f:	int3   
   13260:	int3   
   13261:	int3   
   13262:	int3   
   13263:	int3   
   13264:	mov    edi,edi
   13266:	push   ebp
   13267:	mov    ebp,esp
   13269:	mov    edx,DWORD PTR [ebp+0x8]
   1326c:	mov    eax,DWORD PTR [edx]
   1326e:	push   esi
   1326f:	mov    esi,DWORD PTR [eax+0x8]
   13272:	mov    DWORD PTR [edx],esi
   13274:	mov    esi,DWORD PTR [eax+0x8]
   13277:	cmp    esi,DWORD PTR ds:0x78ac4
   1327d:	je     0x13282
   1327f:	mov    DWORD PTR [esi+0x4],edx
   13282:	mov    esi,DWORD PTR [edx+0x4]
   13285:	mov    DWORD PTR [eax+0x4],esi
   13288:	mov    ecx,DWORD PTR [ecx+0x4]
   1328b:	pop    esi
   1328c:	cmp    edx,DWORD PTR [ecx+0x4]
   1328f:	jne    0x13296
   13291:	mov    DWORD PTR [ecx+0x4],eax
   13294:	jmp    0x132a5
   13296:	mov    ecx,DWORD PTR [edx+0x4]
   13299:	cmp    edx,DWORD PTR [ecx+0x8]
   1329c:	jne    0x132a3
   1329e:	mov    DWORD PTR [ecx+0x8],eax
   132a1:	jmp    0x132a5
   132a3:	mov    DWORD PTR [ecx],eax
   132a5:	mov    DWORD PTR [eax+0x8],edx
   132a8:	mov    DWORD PTR [edx+0x4],eax
   132ab:	pop    ebp
   132ac:	ret    0x4
   132af:	int3   
   132b0:	int3   
   132b1:	int3   
   132b2:	int3   
   132b3:	int3   
   132b4:	mov    edi,edi
   132b6:	push   ebp
   132b7:	mov    ebp,esp
   132b9:	mov    eax,DWORD PTR [ecx+0x4]
   132bc:	mov    ecx,DWORD PTR [eax+0x4]
   132bf:	mov    edx,DWORD PTR ds:0x78ac4
   132c5:	cmp    ecx,edx
   132c7:	je     0x132e2
   132c9:	push   esi
   132ca:	mov    esi,DWORD PTR [ebp+0x8]
   132cd:	mov    esi,DWORD PTR [esi]
   132cf:	cmp    esi,DWORD PTR [ecx+0xc]
   132d2:	jge    0x132da
   132d4:	mov    eax,ecx
   132d6:	mov    ecx,DWORD PTR [ecx]
   132d8:	jmp    0x132dd
   132da:	mov    ecx,DWORD PTR [ecx+0x8]
   132dd:	cmp    ecx,edx
   132df:	jne    0x132cf
   132e1:	pop    esi
   132e2:	pop    ebp
   132e3:	ret    0x4
   132e6:	int3   
   132e7:	int3   
   132e8:	int3   
   132e9:	int3   
   132ea:	int3   
   132eb:	int3   
   132ec:	mov    edi,edi
   132ee:	push   ebp
   132ef:	mov    ebp,esp
   132f1:	mov    eax,DWORD PTR [ecx+0x4]
   132f4:	push   esi
   132f5:	mov    esi,DWORD PTR [eax+0x4]
   132f8:	push   edi
   132f9:	mov    edi,eax
   132fb:	jmp    0x13316
   132fd:	push   DWORD PTR [ebp+0x8]
   13300:	lea    eax,[esi+0xc]
   13303:	push   eax
   13304:	call   0x197e8
   13309:	test   al,al
   1330b:	je     0x13312
   1330d:	mov    esi,DWORD PTR [esi+0x8]
   13310:	jmp    0x13316
   13312:	mov    edi,esi
   13314:	mov    esi,DWORD PTR [esi]
   13316:	cmp    esi,DWORD PTR ds:0x78acc
   1331c:	jne    0x132fd
   1331e:	mov    eax,edi
   13320:	pop    edi
   13321:	pop    esi
   13322:	pop    ebp
   13323:	ret    0x4
   13326:	int3   
   13327:	int3   
   13328:	int3   
   13329:	int3   
   1332a:	int3   
   1332b:	int3   
   1332c:	mov    edi,edi
   1332e:	push   ebp
   1332f:	mov    ebp,esp
   13331:	mov    edx,DWORD PTR [ebp+0x8]
   13334:	mov    eax,DWORD PTR [edx+0x8]
   13337:	push   esi
   13338:	mov    esi,DWORD PTR [eax]
   1333a:	mov    DWORD PTR [edx+0x8],esi
   1333d:	mov    esi,DWORD PTR [eax]
   1333f:	cmp    esi,DWORD PTR ds:0x78acc
   13345:	je     0x1334a
   13347:	mov    DWORD PTR [esi+0x4],edx
   1334a:	mov    esi,DWORD PTR [edx+0x4]
   1334d:	mov    DWORD PTR [eax+0x4],esi
   13350:	mov    ecx,DWORD PTR [ecx+0x4]
   13353:	pop    esi
   13354:	cmp    edx,DWORD PTR [ecx+0x4]
   13357:	jne    0x1335e
   13359:	mov    DWORD PTR [ecx+0x4],eax
   1335c:	jmp    0x1336c
   1335e:	mov    ecx,DWORD PTR [edx+0x4]
   13361:	cmp    edx,DWORD PTR [ecx]
   13363:	jne    0x13369
   13365:	mov    DWORD PTR [ecx],eax
   13367:	jmp    0x1336c
   13369:	mov    DWORD PTR [ecx+0x8],eax
   1336c:	mov    DWORD PTR [eax],edx
   1336e:	mov    DWORD PTR [edx+0x4],eax
   13371:	pop    ebp
   13372:	ret    0x4
   13375:	int3   
   13376:	int3   
   13377:	int3   
   13378:	int3   
   13379:	int3   
   1337a:	mov    edi,edi
   1337c:	push   ebp
   1337d:	mov    ebp,esp
   1337f:	mov    edx,DWORD PTR [ebp+0x8]
   13382:	mov    eax,DWORD PTR [edx]
   13384:	push   esi
   13385:	mov    esi,DWORD PTR [eax+0x8]
   13388:	mov    DWORD PTR [edx],esi
   1338a:	mov    esi,DWORD PTR [eax+0x8]
   1338d:	cmp    esi,DWORD PTR ds:0x78acc
   13393:	je     0x13398
   13395:	mov    DWORD PTR [esi+0x4],edx
   13398:	mov    esi,DWORD PTR [edx+0x4]
   1339b:	mov    DWORD PTR [eax+0x4],esi
   1339e:	mov    ecx,DWORD PTR [ecx+0x4]
   133a1:	pop    esi
   133a2:	cmp    edx,DWORD PTR [ecx+0x4]
   133a5:	jne    0x133ac
   133a7:	mov    DWORD PTR [ecx+0x4],eax
   133aa:	jmp    0x133bb
   133ac:	mov    ecx,DWORD PTR [edx+0x4]
   133af:	cmp    edx,DWORD PTR [ecx+0x8]
   133b2:	jne    0x133b9
   133b4:	mov    DWORD PTR [ecx+0x8],eax
   133b7:	jmp    0x133bb
   133b9:	mov    DWORD PTR [ecx],eax
   133bb:	mov    DWORD PTR [eax+0x8],edx
   133be:	mov    DWORD PTR [edx+0x4],eax
   133c1:	pop    ebp
   133c2:	ret    0x4
   133c5:	int3   
   133c6:	int3   
   133c7:	int3   
   133c8:	int3   
   133c9:	int3   
   133ca:	mov    edi,edi
   133cc:	push   esi
   133cd:	mov    esi,ecx
   133cf:	mov    ecx,DWORD PTR [esi]
   133d1:	cmp    DWORD PTR [ecx+0x1c],0x0
   133d5:	jne    0x133e4
   133d7:	mov    eax,DWORD PTR [ecx+0x4]
   133da:	cmp    DWORD PTR [eax+0x4],ecx
   133dd:	jne    0x133e4
   133df:	mov    eax,DWORD PTR [ecx+0x8]
   133e2:	jmp    0x13401
   133e4:	mov    eax,DWORD PTR [ecx]
   133e6:	cmp    eax,DWORD PTR ds:0x78acc
   133ec:	je     0x133fa
   133ee:	push   eax
   133ef:	call   0x115a0
   133f4:	jmp    0x13401
   133f6:	mov    DWORD PTR [esi],eax
   133f8:	mov    ecx,eax
   133fa:	mov    eax,DWORD PTR [ecx+0x4]
   133fd:	cmp    ecx,DWORD PTR [eax]
   133ff:	je     0x133f6
   13401:	mov    DWORD PTR [esi],eax
   13403:	pop    esi
   13404:	ret    
   13405:	int3   
   13406:	int3   
   13407:	int3   
   13408:	int3   
   13409:	int3   
   1340a:	mov    edi,edi
   1340c:	push   ebp
   1340d:	mov    ebp,esp
   1340f:	mov    eax,DWORD PTR [ecx+0x4]
   13412:	mov    ecx,DWORD PTR [eax+0x4]
   13415:	mov    edx,DWORD PTR ds:0x78ab4
   1341b:	cmp    ecx,edx
   1341d:	je     0x13438
   1341f:	push   esi
   13420:	mov    esi,DWORD PTR [ebp+0x8]
   13423:	mov    esi,DWORD PTR [esi]
   13425:	cmp    DWORD PTR [ecx+0xc],esi
   13428:	jae    0x1342f
   1342a:	mov    ecx,DWORD PTR [ecx+0x8]
   1342d:	jmp    0x13433
   1342f:	mov    eax,ecx
   13431:	mov    ecx,DWORD PTR [ecx]
   13433:	cmp    ecx,edx
   13435:	jne    0x13425
   13437:	pop    esi
   13438:	pop    ebp
   13439:	ret    0x4
   1343c:	int3   
   1343d:	int3   
   1343e:	int3   
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	mov    edi,edi
   13444:	push   ebp
   13445:	mov    ebp,esp
   13447:	mov    eax,DWORD PTR [ecx+0x4]
   1344a:	mov    ecx,DWORD PTR [eax+0x4]
   1344d:	mov    edx,DWORD PTR ds:0x78ab4
   13453:	cmp    ecx,edx
   13455:	je     0x13470
   13457:	push   esi
   13458:	mov    esi,DWORD PTR [ebp+0x8]
   1345b:	mov    esi,DWORD PTR [esi]
   1345d:	cmp    esi,DWORD PTR [ecx+0xc]
   13460:	jae    0x13468
   13462:	mov    eax,ecx
   13464:	mov    ecx,DWORD PTR [ecx]
   13466:	jmp    0x1346b
   13468:	mov    ecx,DWORD PTR [ecx+0x8]
   1346b:	cmp    ecx,edx
   1346d:	jne    0x1345d
   1346f:	pop    esi
   13470:	pop    ebp
   13471:	ret    0x4
   13474:	int3   
   13475:	int3   
   13476:	int3   
   13477:	int3   
   13478:	int3   
   13479:	int3   
   1347a:	mov    edi,edi
   1347c:	push   ebp
   1347d:	mov    ebp,esp
   1347f:	mov    ecx,DWORD PTR [ebp+0x8]
   13482:	push   0x0
   13484:	call   0x11664
   13489:	pop    ebp
   1348a:	ret    0x4
   1348d:	int3   
   1348e:	int3   
   1348f:	int3   
   13490:	int3   
   13491:	int3   
   13492:	mov    edi,edi
   13494:	push   ebp
   13495:	mov    ebp,esp
   13497:	push   esi
   13498:	push   edi
   13499:	mov    edi,DWORD PTR [ebp+0x8]
   1349c:	push   edi
   1349d:	mov    esi,ecx
   1349f:	call   0x12c3a
   134a4:	mov    eax,DWORD PTR [edi+0x50]
   134a7:	mov    DWORD PTR [esi+0x50],eax
   134aa:	pop    edi
   134ab:	mov    eax,esi
   134ad:	pop    esi
   134ae:	pop    ebp
   134af:	ret    0x4
   134b2:	int3   
   134b3:	int3   
   134b4:	int3   
   134b5:	int3   
   134b6:	int3   
   134b7:	int3   
   134b8:	mov    edi,edi
   134ba:	push   ebp
   134bb:	mov    ebp,esp
   134bd:	push   esi
   134be:	push   edi
   134bf:	mov    edi,DWORD PTR [ebp+0x8]
   134c2:	push   edi
   134c3:	mov    esi,ecx
   134c5:	call   0x129a0
   134ca:	add    edi,0x8
   134cd:	push   edi
   134ce:	lea    ecx,[esi+0x8]
   134d1:	call   0x13492
   134d6:	pop    edi
   134d7:	mov    eax,esi
   134d9:	pop    esi
   134da:	pop    ebp
   134db:	ret    0x4
   134de:	int3   
   134df:	int3   
   134e0:	int3   
   134e1:	int3   
   134e2:	int3   
   134e3:	int3   
   134e4:	mov    edi,edi
   134e6:	push   ebp
   134e7:	mov    ebp,esp
   134e9:	push   esi
   134ea:	push   edi
   134eb:	mov    edi,DWORD PTR [ebp+0x8]
   134ee:	push   edi
   134ef:	mov    esi,ecx
   134f1:	call   0x129a0
   134f6:	add    edi,0x8
   134f9:	push   edi
   134fa:	lea    ecx,[esi+0x8]
   134fd:	call   0x12c3a
   13502:	pop    edi
   13503:	mov    eax,esi
   13505:	pop    esi
   13506:	pop    ebp
   13507:	ret    0x4
   1350a:	int3   
   1350b:	int3   
   1350c:	int3   
   1350d:	int3   
   1350e:	int3   
   1350f:	int3   
   13510:	mov    edi,edi
   13512:	push   ebp
   13513:	mov    ebp,esp
   13515:	push   esi
   13516:	mov    esi,ecx
   13518:	call   0x12ad6
   1351d:	test   BYTE PTR [ebp+0x8],0x1
   13521:	je     0x1352a
   13523:	push   esi
   13524:	call   0x1d9fc
   13529:	pop    ecx
   1352a:	mov    eax,esi
   1352c:	pop    esi
   1352d:	pop    ebp
   1352e:	ret    0x4
   13531:	int3   
   13532:	int3   
   13533:	int3   
   13534:	int3   
   13535:	int3   
   13536:	mov    edi,edi
   13538:	push   ebp
   13539:	mov    ebp,esp
   1353b:	push   esi
   1353c:	push   edi
   1353d:	mov    edi,DWORD PTR [ebp+0x8]
   13540:	push   edi
   13541:	mov    esi,ecx
   13543:	call   0x129a0
   13548:	add    edi,0x8
   1354b:	push   edi
   1354c:	lea    ecx,[esi+0x8]
   1354f:	call   0x129a0
   13554:	pop    edi
   13555:	mov    eax,esi
   13557:	pop    esi
   13558:	pop    ebp
   13559:	ret    0x4
   1355c:	int3   
   1355d:	int3   
   1355e:	int3   
   1355f:	int3   
   13560:	int3   
   13561:	int3   
   13562:	mov    edi,edi
   13564:	push   ebp
   13565:	mov    ebp,esp
   13567:	mov    eax,DWORD PTR [ebp+0x8]
   1356a:	push   esi
   1356b:	mov    esi,ecx
   1356d:	mov    ecx,DWORD PTR [eax]
   1356f:	add    eax,0x4
   13572:	mov    DWORD PTR [esi],ecx
   13574:	push   eax
   13575:	lea    ecx,[esi+0x4]
   13578:	call   0x11ef8
   1357d:	mov    eax,esi
   1357f:	pop    esi
   13580:	pop    ebp
   13581:	ret    0x4
   13584:	int3   
   13585:	int3   
   13586:	int3   
   13587:	int3   
   13588:	int3   
   13589:	int3   
   1358a:	mov    edi,edi
   1358c:	push   ebp
   1358d:	mov    ebp,esp
   1358f:	push   esi
   13590:	mov    esi,ecx
   13592:	mov    ecx,DWORD PTR [esi+0x4]
   13595:	test   ecx,ecx
   13597:	je     0x1359e
   13599:	call   0x10a86
   1359e:	test   BYTE PTR [ebp+0x8],0x1
   135a2:	je     0x135ab
   135a4:	push   esi
   135a5:	call   0x1d9fc
   135aa:	pop    ecx
   135ab:	mov    eax,esi
   135ad:	pop    esi
   135ae:	pop    ebp
   135af:	ret    0x4
   135b2:	int3   
   135b3:	int3   
   135b4:	int3   
   135b5:	int3   
   135b6:	int3   
   135b7:	int3   
   135b8:	mov    edi,edi
   135ba:	push   ebp
   135bb:	mov    ebp,esp
   135bd:	push   esi
   135be:	push   edi
   135bf:	mov    edi,DWORD PTR [ebp+0x8]
   135c2:	push   edi
   135c3:	mov    esi,ecx
   135c5:	call   0x12b12
   135ca:	add    edi,0x8
   135cd:	push   edi
   135ce:	lea    ecx,[esi+0x8]
   135d1:	call   0x12b12
   135d6:	pop    edi
   135d7:	mov    eax,esi
   135d9:	pop    esi
   135da:	pop    ebp
   135db:	ret    0x4
   135de:	int3   
   135df:	int3   
   135e0:	int3   
   135e1:	int3   
   135e2:	int3   
   135e3:	int3   
   135e4:	mov    edi,edi
   135e6:	push   ebp
   135e7:	mov    ebp,esp
   135e9:	push   esi
   135ea:	push   DWORD PTR [ebp+0x8]
   135ed:	mov    esi,ecx
   135ef:	call   0x129a0
   135f4:	push   DWORD PTR [ebp+0xc]
   135f7:	lea    ecx,[esi+0x8]
   135fa:	call   0x13492
   135ff:	mov    eax,esi
   13601:	pop    esi
   13602:	pop    ebp
   13603:	ret    0x8
   13606:	int3   
   13607:	int3   
   13608:	int3   
   13609:	int3   
   1360a:	int3   
   1360b:	int3   
   1360c:	mov    edi,edi
   1360e:	push   ebp
   1360f:	mov    ebp,esp
   13611:	push   esi
   13612:	push   DWORD PTR [ebp+0x8]
   13615:	mov    esi,ecx
   13617:	call   0x129a0
   1361c:	push   DWORD PTR [ebp+0xc]
   1361f:	lea    ecx,[esi+0x8]
   13622:	call   0x129a0
   13627:	mov    eax,esi
   13629:	pop    esi
   1362a:	pop    ebp
   1362b:	ret    0x8
   1362e:	int3   
   1362f:	int3   
   13630:	int3   
   13631:	int3   
   13632:	int3   
   13633:	int3   
   13634:	mov    edi,edi
   13636:	push   ebp
   13637:	mov    ebp,esp
   13639:	push   edi
   1363a:	mov    edi,DWORD PTR [ebp+0xc]
   1363d:	cmp    DWORD PTR [ebp+0x8],edi
   13640:	je     0x13656
   13642:	push   esi
   13643:	mov    esi,DWORD PTR [ebp+0x10]
   13646:	inc    DWORD PTR [esi]
   13648:	lea    ecx,[ebp+0x8]
   1364b:	call   0x112b6
   13650:	cmp    DWORD PTR [ebp+0x8],edi
   13653:	jne    0x13646
   13655:	pop    esi
   13656:	pop    edi
   13657:	pop    ebp
   13658:	ret    
   13659:	int3   
   1365a:	int3   
   1365b:	int3   
   1365c:	int3   
   1365d:	int3   
   1365e:	mov    edi,edi
   13660:	push   ebp
   13661:	mov    ebp,esp
   13663:	push   edi
   13664:	mov    edi,DWORD PTR [ebp+0xc]
   13667:	cmp    DWORD PTR [ebp+0x8],edi
   1366a:	je     0x13680
   1366c:	push   esi
   1366d:	mov    esi,DWORD PTR [ebp+0x10]
   13670:	inc    DWORD PTR [esi]
   13672:	lea    ecx,[ebp+0x8]
   13675:	call   0x11534
   1367a:	cmp    DWORD PTR [ebp+0x8],edi
   1367d:	jne    0x13670
   1367f:	pop    esi
   13680:	pop    edi
   13681:	pop    ebp
   13682:	ret    
   13683:	int3   
   13684:	int3   
   13685:	int3   
   13686:	int3   
   13687:	int3   
   13688:	mov    edi,edi
   1368a:	push   ebp
   1368b:	mov    ebp,esp
   1368d:	push   edi
   1368e:	mov    edi,DWORD PTR [ebp+0xc]
   13691:	cmp    DWORD PTR [ebp+0x8],edi
   13694:	je     0x136aa
   13696:	push   esi
   13697:	mov    esi,DWORD PTR [ebp+0x10]
   1369a:	inc    DWORD PTR [esi]
   1369c:	lea    ecx,[ebp+0x8]
   1369f:	call   0x1156a
   136a4:	cmp    DWORD PTR [ebp+0x8],edi
   136a7:	jne    0x1369a
   136a9:	pop    esi
   136aa:	pop    edi
   136ab:	pop    ebp
   136ac:	ret    
   136ad:	int3   
   136ae:	int3   
   136af:	int3   
   136b0:	int3   
   136b1:	int3   
   136b2:	mov    edi,edi
   136b4:	push   ebp
   136b5:	mov    ebp,esp
   136b7:	push   edi
   136b8:	mov    edi,DWORD PTR [ebp+0xc]
   136bb:	cmp    DWORD PTR [ebp+0x8],edi
   136be:	je     0x136d4
   136c0:	push   esi
   136c1:	mov    esi,DWORD PTR [ebp+0x10]
   136c4:	inc    DWORD PTR [esi]
   136c6:	lea    ecx,[ebp+0x8]
   136c9:	call   0x12f0e
   136ce:	cmp    DWORD PTR [ebp+0x8],edi
   136d1:	jne    0x136c4
   136d3:	pop    esi
   136d4:	pop    edi
   136d5:	pop    ebp
   136d6:	ret    
   136d7:	int3   
   136d8:	int3   
   136d9:	int3   
   136da:	int3   
   136db:	int3   
   136dc:	mov    edi,edi
   136de:	push   ebx
   136df:	push   esi
   136e0:	push   edi
   136e1:	or     ebx,0xffffffff
   136e4:	push   ebx
   136e5:	mov    edi,0x1dec8
   136ea:	push   edi
   136eb:	mov    esi,ecx
   136ed:	call   0x1109a
   136f2:	push   ebx
   136f3:	push   edi
   136f4:	lea    ecx,[esi+0x8]
   136f7:	call   0x1109a
   136fc:	push   ebx
   136fd:	push   edi
   136fe:	lea    ecx,[esi+0x14]
   13701:	call   0x1109a
   13706:	push   ebx
   13707:	push   edi
   13708:	lea    ecx,[esi+0x1c]
   1370b:	call   0x1109a
   13710:	push   ebx
   13711:	push   edi
   13712:	lea    ecx,[esi+0x24]
   13715:	call   0x1109a
   1371a:	push   ebx
   1371b:	push   edi
   1371c:	lea    ecx,[esi+0x48]
   1371f:	call   0x1109a
   13724:	xor    eax,eax
   13726:	mov    DWORD PTR [esi+0x10],eax
   13729:	mov    DWORD PTR [esi+0x30],eax
   1372c:	mov    DWORD PTR [esi+0x2c],eax
   1372f:	mov    DWORD PTR [esi+0x40],eax
   13732:	mov    DWORD PTR [esi+0x44],eax
   13735:	pop    edi
   13736:	mov    eax,esi
   13738:	pop    esi
   13739:	pop    ebx
   1373a:	ret    
   1373b:	int3   
   1373c:	int3   
   1373d:	int3   
   1373e:	int3   
   1373f:	int3   
   13740:	mov    edi,edi
   13742:	push   ebp
   13743:	mov    ebp,esp
   13745:	push   esi
   13746:	push   DWORD PTR [ebp+0x8]
   13749:	mov    esi,ecx
   1374b:	call   0x129a0
   13750:	push   DWORD PTR [ebp+0xc]
   13753:	lea    ecx,[esi+0x8]
   13756:	call   0x129a0
   1375b:	mov    eax,DWORD PTR [ebp+0x10]
   1375e:	push   0xffffffff
   13760:	push   0x1dec8
   13765:	lea    ecx,[esi+0x14]
   13768:	mov    DWORD PTR [esi+0x10],eax
   1376b:	call   0x1109a
   13770:	push   DWORD PTR [ebp+0x14]
   13773:	lea    ecx,[esi+0x1c]
   13776:	call   0x129a0
   1377b:	push   DWORD PTR [ebp+0x18]
   1377e:	lea    ecx,[esi+0x24]
   13781:	call   0x129a0
   13786:	mov    eax,DWORD PTR [ebp+0x20]
   13789:	push   DWORD PTR [ebp+0x1c]
   1378c:	mov    DWORD PTR [esi+0x2c],eax
   1378f:	mov    eax,DWORD PTR [ebp+0x24]
   13792:	lea    ecx,[esi+0x48]
   13795:	mov    DWORD PTR [esi+0x30],eax
   13798:	call   0x129a0
   1379d:	and    DWORD PTR [esi+0x40],0x0
   137a1:	and    DWORD PTR [esi+0x44],0x0
   137a5:	mov    eax,DWORD PTR [ebp+0x28]
   137a8:	mov    ecx,DWORD PTR [eax]
   137aa:	mov    DWORD PTR [esi+0x38],ecx
   137ad:	mov    eax,DWORD PTR [eax+0x4]
   137b0:	mov    DWORD PTR [esi+0x3c],eax
   137b3:	mov    eax,esi
   137b5:	pop    esi
   137b6:	pop    ebp
   137b7:	ret    0x24
   137ba:	int3   
   137bb:	int3   
   137bc:	int3   
   137bd:	int3   
   137be:	int3   
   137bf:	int3   
   137c0:	mov    edi,edi
   137c2:	push   ebp
   137c3:	mov    ebp,esp
   137c5:	push   esi
   137c6:	push   0xc
   137c8:	mov    esi,ecx
   137ca:	call   0x10a52
   137cf:	pop    ecx
   137d0:	test   eax,eax
   137d2:	je     0x137e3
   137d4:	push   DWORD PTR [ebp+0xc]
   137d7:	mov    ecx,eax
   137d9:	push   DWORD PTR [ebp+0x8]
   137dc:	call   0x11f46
   137e1:	jmp    0x137e5
   137e3:	xor    eax,eax
   137e5:	mov    DWORD PTR [esi],eax
   137e7:	mov    eax,esi
   137e9:	pop    esi
   137ea:	pop    ebp
   137eb:	ret    0x8
   137ee:	int3   
   137ef:	int3   
   137f0:	int3   
   137f1:	int3   
   137f2:	int3   
   137f3:	int3   
   137f4:	mov    edi,edi
   137f6:	push   ebp
   137f7:	mov    ebp,esp
   137f9:	sub    esp,0x18
   137fc:	lea    eax,[ebp-0x18]
   137ff:	push   eax
   13800:	push   DWORD PTR [ebp+0x8]
   13803:	call   0x10e72
   13808:	test   al,al
   1380a:	je     0x13878
   1380c:	lea    eax,[ebp-0x4]
   1380f:	push   eax
   13810:	push   DWORD PTR [ebp+0xc]
   13813:	call   0x11c9c
   13818:	call   eax
   1381a:	test   eax,eax
   1381c:	jl     0x13878
   1381e:	push   esi
   1381f:	push   0x5
   13821:	call   0x128f6
   13826:	mov    esi,eax
   13828:	test   esi,esi
   1382a:	je     0x13877
   1382c:	mov    edx,DWORD PTR [ebp+0x10]
   1382f:	cmp    DWORD PTR [esi+0x44],edx
   13832:	je     0x13841
   13834:	mov    ecx,DWORD PTR [eax]
   13836:	test   ecx,ecx
   13838:	je     0x13865
   1383a:	add    eax,ecx
   1383c:	cmp    DWORD PTR [eax+0x44],edx
   1383f:	jne    0x13834
   13841:	cmp    DWORD PTR [eax+0x4],0x0
   13845:	je     0x13865
   13847:	mov    ecx,DWORD PTR [eax+0xd8]
   1384d:	mov    eax,DWORD PTR [eax+0xdc]
   13853:	mov    DWORD PTR [ebp-0x14],eax
   13856:	lea    eax,[ebp-0x18]
   13859:	push   eax
   1385a:	push   DWORD PTR [ebp+0x8]
   1385d:	mov    DWORD PTR [ebp-0x18],ecx
   13860:	call   0x10ec0
   13865:	mov    ecx,DWORD PTR [ebp-0x4]
   13868:	call   DWORD PTR ds:0x1ee60
   1386e:	push   0x0
   13870:	push   esi
   13871:	call   DWORD PTR ds:0x1ee20
   13877:	pop    esi
   13878:	leave  
   13879:	ret    0x10
   1387c:	int3   
   1387d:	int3   
   1387e:	int3   
   1387f:	int3   
   13880:	int3   
   13881:	int3   
   13882:	mov    edi,edi
   13884:	push   esi
   13885:	mov    esi,ecx
   13887:	mov    ecx,DWORD PTR [esi]
   13889:	mov    eax,DWORD PTR [ecx+0x8]
   1388c:	cmp    eax,DWORD PTR ds:0x78abc
   13892:	je     0x138a0
   13894:	push   eax
   13895:	call   0x12cc0
   1389a:	jmp    0x138af
   1389c:	mov    DWORD PTR [esi],eax
   1389e:	mov    ecx,eax
   138a0:	mov    eax,DWORD PTR [ecx+0x4]
   138a3:	cmp    ecx,DWORD PTR [eax+0x8]
   138a6:	je     0x1389c
   138a8:	mov    ecx,DWORD PTR [esi]
   138aa:	cmp    DWORD PTR [ecx+0x8],eax
   138ad:	je     0x138b1
   138af:	mov    DWORD PTR [esi],eax
   138b1:	pop    esi
   138b2:	ret    
   138b3:	int3   
   138b4:	int3   
   138b5:	int3   
   138b6:	int3   
   138b7:	int3   
   138b8:	mov    edi,edi
   138ba:	push   ebp
   138bb:	mov    ebp,esp
   138bd:	push   esi
   138be:	push   DWORD PTR [ebp+0x8]
   138c1:	mov    esi,ecx
   138c3:	call   0x129a0
   138c8:	push   DWORD PTR [ebp+0xc]
   138cb:	lea    ecx,[esi+0x8]
   138ce:	call   0x12c3a
   138d3:	mov    eax,esi
   138d5:	pop    esi
   138d6:	pop    ebp
   138d7:	ret    0x8
   138da:	int3   
   138db:	int3   
   138dc:	int3   
   138dd:	int3   
   138de:	int3   
   138df:	int3   
   138e0:	mov    edi,edi
   138e2:	push   ebp
   138e3:	mov    ebp,esp
   138e5:	push   ebx
   138e6:	push   esi
   138e7:	push   edi
   138e8:	mov    edi,DWORD PTR [ebp+0x8]
   138eb:	mov    ebx,ecx
   138ed:	mov    esi,edi
   138ef:	cmp    edi,DWORD PTR ds:0x78ab0
   138f5:	je     0x13914
   138f7:	push   DWORD PTR [esi+0x8]
   138fa:	mov    ecx,ebx
   138fc:	call   0x138e0
   13901:	mov    esi,DWORD PTR [esi]
   13903:	push   edi
   13904:	call   0x1d9fc
   13909:	pop    ecx
   1390a:	mov    edi,esi
   1390c:	cmp    esi,DWORD PTR ds:0x78ab0
   13912:	jne    0x138f7
   13914:	pop    edi
   13915:	pop    esi
   13916:	pop    ebx
   13917:	pop    ebp
   13918:	ret    0x4
   1391b:	int3   
   1391c:	int3   
   1391d:	int3   
   1391e:	int3   
   1391f:	int3   
   13920:	mov    edi,edi
   13922:	push   ebp
   13923:	mov    ebp,esp
   13925:	push   ebx
   13926:	push   esi
   13927:	push   edi
   13928:	mov    edi,DWORD PTR [ebp+0x8]
   1392b:	mov    ebx,ecx
   1392d:	mov    esi,edi
   1392f:	cmp    edi,DWORD PTR ds:0x78ab4
   13935:	je     0x13954
   13937:	push   DWORD PTR [esi+0x8]
   1393a:	mov    ecx,ebx
   1393c:	call   0x13920
   13941:	mov    esi,DWORD PTR [esi]
   13943:	push   edi
   13944:	call   0x1d9fc
   13949:	pop    ecx
   1394a:	mov    edi,esi
   1394c:	cmp    esi,DWORD PTR ds:0x78ab4
   13952:	jne    0x13937
   13954:	pop    edi
   13955:	pop    esi
   13956:	pop    ebx
   13957:	pop    ebp
   13958:	ret    0x4
   1395b:	int3   
   1395c:	int3   
   1395d:	int3   
   1395e:	int3   
   1395f:	int3   
   13960:	mov    edi,edi
   13962:	push   ebp
   13963:	mov    ebp,esp
   13965:	push   0x0
   13967:	push   0x18
   13969:	call   0x11604
   1396e:	mov    ecx,DWORD PTR [ebp+0x8]
   13971:	mov    DWORD PTR [eax+0x4],ecx
   13974:	mov    ecx,DWORD PTR [ebp+0xc]
   13977:	mov    DWORD PTR [eax+0x14],ecx
   1397a:	pop    ebp
   1397b:	ret    0x8
   1397e:	int3   
   1397f:	int3   
   13980:	int3   
   13981:	int3   
   13982:	int3   
   13983:	int3   
   13984:	mov    edi,edi
   13986:	push   ebp
   13987:	mov    ebp,esp
   13989:	push   0x0
   1398b:	push   0x70
   1398d:	call   0x11604
   13992:	mov    ecx,DWORD PTR [ebp+0x8]
   13995:	mov    DWORD PTR [eax+0x4],ecx
   13998:	mov    ecx,DWORD PTR [ebp+0xc]
   1399b:	mov    DWORD PTR [eax+0x68],ecx
   1399e:	pop    ebp
   1399f:	ret    0x8
   139a2:	int3   
   139a3:	int3   
   139a4:	int3   
   139a5:	int3   
   139a6:	int3   
   139a7:	int3   
   139a8:	mov    edi,edi
   139aa:	push   ebp
   139ab:	mov    ebp,esp
   139ad:	push   0x0
   139af:	push   0x20
   139b1:	call   0x11604
   139b6:	mov    ecx,DWORD PTR [ebp+0x8]
   139b9:	mov    DWORD PTR [eax+0x4],ecx
   139bc:	mov    ecx,DWORD PTR [ebp+0xc]
   139bf:	mov    DWORD PTR [eax+0x1c],ecx
   139c2:	pop    ebp
   139c3:	ret    0x8
   139c6:	int3   
   139c7:	int3   
   139c8:	int3   
   139c9:	int3   
   139ca:	int3   
   139cb:	int3   
   139cc:	mov    edi,edi
   139ce:	push   ebp
   139cf:	mov    ebp,esp
   139d1:	push   0x0
   139d3:	push   0x14
   139d5:	call   0x11604
   139da:	mov    ecx,DWORD PTR [ebp+0x8]
   139dd:	mov    DWORD PTR [eax+0x4],ecx
   139e0:	mov    ecx,DWORD PTR [ebp+0xc]
   139e3:	mov    DWORD PTR [eax+0x10],ecx
   139e6:	pop    ebp
   139e7:	ret    0x8
   139ea:	int3   
   139eb:	int3   
   139ec:	int3   
   139ed:	int3   
   139ee:	int3   
   139ef:	int3   
   139f0:	mov    edi,edi
   139f2:	push   ebp
   139f3:	mov    ebp,esp
   139f5:	push   0x0
   139f7:	push   0x78
   139f9:	call   0x11604
   139fe:	mov    ecx,DWORD PTR [ebp+0x8]
   13a01:	mov    DWORD PTR [eax+0x4],ecx
   13a04:	mov    ecx,DWORD PTR [ebp+0xc]
   13a07:	mov    DWORD PTR [eax+0x70],ecx
   13a0a:	pop    ebp
   13a0b:	ret    0x8
   13a0e:	int3   
   13a0f:	int3   
   13a10:	int3   
   13a11:	int3   
   13a12:	int3   
   13a13:	int3   
   13a14:	mov    edi,edi
   13a16:	push   ebp
   13a17:	mov    ebp,esp
   13a19:	push   ecx
   13a1a:	push   DWORD PTR [ebp-0x4]
   13a1d:	push   DWORD PTR [ebp+0x10]
   13a20:	push   DWORD PTR [ebp+0xc]
   13a23:	push   DWORD PTR [ebp+0x8]
   13a26:	call   0x13634
   13a2b:	add    esp,0x10
   13a2e:	leave  
   13a2f:	ret    
   13a30:	int3   
   13a31:	int3   
   13a32:	int3   
   13a33:	int3   
   13a34:	int3   
   13a35:	int3   
   13a36:	mov    edi,edi
   13a38:	push   ebp
   13a39:	mov    ebp,esp
   13a3b:	push   ecx
   13a3c:	push   DWORD PTR [ebp-0x4]
   13a3f:	push   DWORD PTR [ebp+0x10]
   13a42:	push   DWORD PTR [ebp+0xc]
   13a45:	push   DWORD PTR [ebp+0x8]
   13a48:	call   0x1365e
   13a4d:	add    esp,0x10
   13a50:	leave  
   13a51:	ret    
   13a52:	int3   
   13a53:	int3   
   13a54:	int3   
   13a55:	int3   
   13a56:	int3   
   13a57:	int3   
   13a58:	mov    edi,edi
   13a5a:	push   ebp
   13a5b:	mov    ebp,esp
   13a5d:	push   ecx
   13a5e:	push   DWORD PTR [ebp-0x4]
   13a61:	push   DWORD PTR [ebp+0x10]
   13a64:	push   DWORD PTR [ebp+0xc]
   13a67:	push   DWORD PTR [ebp+0x8]
   13a6a:	call   0x13688
   13a6f:	add    esp,0x10
   13a72:	leave  
   13a73:	ret    
   13a74:	int3   
   13a75:	int3   
   13a76:	int3   
   13a77:	int3   
   13a78:	int3   
   13a79:	int3   
   13a7a:	mov    edi,edi
   13a7c:	push   ebp
   13a7d:	mov    ebp,esp
   13a7f:	push   ecx
   13a80:	push   DWORD PTR [ebp-0x4]
   13a83:	push   DWORD PTR [ebp+0x10]
   13a86:	push   DWORD PTR [ebp+0xc]
   13a89:	push   DWORD PTR [ebp+0x8]
   13a8c:	call   0x136b2
   13a91:	add    esp,0x10
   13a94:	leave  
   13a95:	ret    
   13a96:	int3   
   13a97:	int3   
   13a98:	int3   
   13a99:	int3   
   13a9a:	int3   
   13a9b:	int3   
   13a9c:	mov    edi,edi
   13a9e:	push   ebp
   13a9f:	mov    ebp,esp
   13aa1:	mov    ecx,DWORD PTR [ebp+0x8]
   13aa4:	test   ecx,ecx
   13aa6:	je     0x13ab0
   13aa8:	push   DWORD PTR [ebp+0xc]
   13aab:	call   0x134b8
   13ab0:	pop    ebp
   13ab1:	ret    0x8
   13ab4:	int3   
   13ab5:	int3   
   13ab6:	int3   
   13ab7:	int3   
   13ab8:	int3   
   13ab9:	int3   
   13aba:	mov    edi,edi
   13abc:	push   ebp
   13abd:	mov    ebp,esp
   13abf:	mov    ecx,DWORD PTR [ebp+0x8]
   13ac2:	test   ecx,ecx
   13ac4:	je     0x13ace
   13ac6:	push   DWORD PTR [ebp+0xc]
   13ac9:	call   0x134e4
   13ace:	pop    ebp
   13acf:	ret    0x8
   13ad2:	int3   
   13ad3:	int3   
   13ad4:	int3   
   13ad5:	int3   
   13ad6:	int3   
   13ad7:	int3   
   13ad8:	mov    edi,edi
   13ada:	push   ebp
   13adb:	mov    ebp,esp
   13add:	mov    ecx,DWORD PTR [ebp+0x8]
   13ae0:	push   0x0
   13ae2:	call   0x13510
   13ae7:	pop    ebp
   13ae8:	ret    0x4
   13aeb:	int3   
   13aec:	int3   
   13aed:	int3   
   13aee:	int3   
   13aef:	int3   
   13af0:	mov    edi,edi
   13af2:	push   ebp
   13af3:	mov    ebp,esp
   13af5:	mov    ecx,DWORD PTR [ebp+0x8]
   13af8:	test   ecx,ecx
   13afa:	je     0x13b04
   13afc:	push   DWORD PTR [ebp+0xc]
   13aff:	call   0x13536
   13b04:	pop    ebp
   13b05:	ret    0x8
   13b08:	int3   
   13b09:	int3   
   13b0a:	int3   
   13b0b:	int3   
   13b0c:	int3   
   13b0d:	int3   
   13b0e:	mov    edi,edi
   13b10:	push   ebp
   13b11:	mov    ebp,esp
   13b13:	mov    ecx,DWORD PTR [ebp+0x8]
   13b16:	test   ecx,ecx
   13b18:	je     0x13b22
   13b1a:	push   DWORD PTR [ebp+0xc]
   13b1d:	call   0x13562
   13b22:	pop    ebp
   13b23:	ret    0x8
   13b26:	int3   
   13b27:	int3   
   13b28:	int3   
   13b29:	int3   
   13b2a:	int3   
   13b2b:	int3   
   13b2c:	mov    edi,edi
   13b2e:	push   ebp
   13b2f:	mov    ebp,esp
   13b31:	mov    ecx,DWORD PTR [ebp+0x8]
   13b34:	push   0x0
   13b36:	call   0x1358a
   13b3b:	pop    ebp
   13b3c:	ret    0x4
   13b3f:	int3   
   13b40:	int3   
   13b41:	int3   
   13b42:	int3   
   13b43:	int3   
   13b44:	mov    edi,edi
   13b46:	push   ebp
   13b47:	mov    ebp,esp
   13b49:	mov    ecx,DWORD PTR [ebp+0x8]
   13b4c:	test   ecx,ecx
   13b4e:	je     0x13b58
   13b50:	push   DWORD PTR [ebp+0xc]
   13b53:	call   0x135b8
   13b58:	pop    ebp
   13b59:	ret    0x8
   13b5c:	int3   
   13b5d:	int3   
   13b5e:	int3   
   13b5f:	int3   
   13b60:	int3   
   13b61:	int3   
   13b62:	mov    edi,edi
   13b64:	push   ebp
   13b65:	mov    ebp,esp
   13b67:	push   ecx
   13b68:	mov    eax,ds:0x78ab4
   13b6d:	push   ebx
   13b6e:	mov    ebx,DWORD PTR [ebp+0xc]
   13b71:	push   esi
   13b72:	mov    esi,DWORD PTR [ebp+0x8]
   13b75:	mov    DWORD PTR [ebp-0x4],ecx
   13b78:	mov    DWORD PTR [ebp+0x8],esi
   13b7b:	cmp    esi,eax
   13b7d:	je     0x13bc2
   13b7f:	push   edi
   13b80:	push   DWORD PTR [esi+0x10]
   13b83:	mov    ecx,DWORD PTR [ebp-0x4]
   13b86:	push   ebx
   13b87:	call   0x139cc
   13b8c:	mov    edi,eax
   13b8e:	cmp    DWORD PTR [ebp+0x8],esi
   13b91:	jne    0x13b96
   13b93:	mov    DWORD PTR [ebp+0x8],edi
   13b96:	mov    ecx,DWORD PTR [ebp-0x4]
   13b99:	push   edi
   13b9a:	push   DWORD PTR [esi+0x8]
   13b9d:	call   0x13b62
   13ba2:	mov    DWORD PTR [edi+0x8],eax
   13ba5:	lea    eax,[esi+0xc]
   13ba8:	push   eax
   13ba9:	lea    eax,[edi+0xc]
   13bac:	push   eax
   13bad:	call   0x11626
   13bb2:	mov    DWORD PTR [ebx],edi
   13bb4:	mov    esi,DWORD PTR [esi]
   13bb6:	mov    eax,ds:0x78ab4
   13bbb:	mov    ebx,edi
   13bbd:	cmp    esi,eax
   13bbf:	jne    0x13b80
   13bc1:	pop    edi
   13bc2:	mov    DWORD PTR [ebx],eax
   13bc4:	mov    eax,DWORD PTR [ebp+0x8]
   13bc7:	pop    esi
   13bc8:	pop    ebx
   13bc9:	leave  
   13bca:	ret    0x8
   13bcd:	int3   
   13bce:	int3   
   13bcf:	int3   
   13bd0:	int3   
   13bd1:	int3   
   13bd2:	mov    edi,edi
   13bd4:	push   ebp
   13bd5:	mov    ebp,esp
   13bd7:	push   ecx
   13bd8:	push   esi
   13bd9:	push   edi
   13bda:	mov    edi,DWORD PTR [ebp+0xc]
   13bdd:	push   edi
   13bde:	mov    esi,ecx
   13be0:	call   0x12d0a
   13be5:	mov    esi,DWORD PTR [esi+0x4]
   13be8:	mov    DWORD PTR [ebp+0xc],eax
   13beb:	cmp    eax,esi
   13bed:	je     0x13bfb
   13bef:	mov    ecx,DWORD PTR [edi]
   13bf1:	cmp    ecx,DWORD PTR [eax+0xc]
   13bf4:	jb     0x13bfb
   13bf6:	lea    eax,[ebp+0xc]
   13bf9:	jmp    0x13c01
   13bfb:	mov    DWORD PTR [ebp-0x4],esi
   13bfe:	lea    eax,[ebp-0x4]
   13c01:	mov    ecx,DWORD PTR [eax]
   13c03:	mov    eax,DWORD PTR [ebp+0x8]
   13c06:	pop    edi
   13c07:	mov    DWORD PTR [eax],ecx
   13c09:	pop    esi
   13c0a:	leave  
   13c0b:	ret    0x8
   13c0e:	int3   
   13c0f:	int3   
   13c10:	int3   
   13c11:	int3   
   13c12:	int3   
   13c13:	int3   
   13c14:	mov    edi,edi
   13c16:	push   ebp
   13c17:	mov    ebp,esp
   13c19:	push   ecx
   13c1a:	push   esi
   13c1b:	push   DWORD PTR [ebp+0xc]
   13c1e:	mov    esi,ecx
   13c20:	call   0x12de0
   13c25:	mov    DWORD PTR [ebp-0x4],eax
   13c28:	cmp    eax,DWORD PTR [esi+0x4]
   13c2b:	je     0x13c42
   13c2d:	add    eax,0x10
   13c30:	push   eax
   13c31:	push   DWORD PTR [ebp+0xc]
   13c34:	call   0x197b8
   13c39:	test   al,al
   13c3b:	jne    0x13c42
   13c3d:	lea    eax,[ebp-0x4]
   13c40:	jmp    0x13c4b
   13c42:	mov    eax,DWORD PTR [esi+0x4]
   13c45:	mov    DWORD PTR [ebp+0xc],eax
   13c48:	lea    eax,[ebp+0xc]
   13c4b:	mov    ecx,DWORD PTR [eax]
   13c4d:	mov    eax,DWORD PTR [ebp+0x8]
   13c50:	mov    DWORD PTR [eax],ecx
   13c52:	pop    esi
   13c53:	leave  
   13c54:	ret    0x8
   13c57:	int3   
   13c58:	int3   
   13c59:	int3   
   13c5a:	int3   
   13c5b:	int3   
   13c5c:	mov    edi,edi
   13c5e:	push   ebp
   13c5f:	mov    ebp,esp
   13c61:	push   ecx
   13c62:	push   esi
   13c63:	push   DWORD PTR [ebp+0xc]
   13c66:	mov    esi,ecx
   13c68:	call   0x12e20
   13c6d:	mov    DWORD PTR [ebp-0x4],eax
   13c70:	cmp    eax,DWORD PTR [esi+0x4]
   13c73:	je     0x13c8a
   13c75:	add    eax,0xc
   13c78:	push   eax
   13c79:	push   DWORD PTR [ebp+0xc]
   13c7c:	call   0x197b8
   13c81:	test   al,al
   13c83:	jne    0x13c8a
   13c85:	lea    eax,[ebp-0x4]
   13c88:	jmp    0x13c93
   13c8a:	mov    eax,DWORD PTR [esi+0x4]
   13c8d:	mov    DWORD PTR [ebp+0xc],eax
   13c90:	lea    eax,[ebp+0xc]
   13c93:	mov    ecx,DWORD PTR [eax]
   13c95:	mov    eax,DWORD PTR [ebp+0x8]
   13c98:	mov    DWORD PTR [eax],ecx
   13c9a:	pop    esi
   13c9b:	leave  
   13c9c:	ret    0x8
   13c9f:	int3   
   13ca0:	int3   
   13ca1:	int3   
   13ca2:	int3   
   13ca3:	int3   
   13ca4:	mov    edi,edi
   13ca6:	push   ebp
   13ca7:	mov    ebp,esp
   13ca9:	push   ecx
   13caa:	push   esi
   13cab:	push   edi
   13cac:	mov    edi,DWORD PTR [ebp+0xc]
   13caf:	push   edi
   13cb0:	mov    esi,ecx
   13cb2:	call   0x12e60
   13cb7:	mov    esi,DWORD PTR [esi+0x4]
   13cba:	mov    DWORD PTR [ebp+0xc],eax
   13cbd:	cmp    eax,esi
   13cbf:	je     0x13ccd
   13cc1:	mov    ecx,DWORD PTR [edi]
   13cc3:	cmp    ecx,DWORD PTR [eax+0xc]
   13cc6:	jl     0x13ccd
   13cc8:	lea    eax,[ebp+0xc]
   13ccb:	jmp    0x13cd3
   13ccd:	mov    DWORD PTR [ebp-0x4],esi
   13cd0:	lea    eax,[ebp-0x4]
   13cd3:	mov    ecx,DWORD PTR [eax]
   13cd5:	mov    eax,DWORD PTR [ebp+0x8]
   13cd8:	pop    edi
   13cd9:	mov    DWORD PTR [eax],ecx
   13cdb:	pop    esi
   13cdc:	leave  
   13cdd:	ret    0x8
   13ce0:	int3   
   13ce1:	int3   
   13ce2:	int3   
   13ce3:	int3   
   13ce4:	int3   
   13ce5:	int3   
   13ce6:	mov    edi,edi
   13ce8:	push   ebp
   13ce9:	mov    ebp,esp
   13ceb:	push   ecx
   13cec:	mov    eax,DWORD PTR [ecx]
   13cee:	lea    ecx,[ebp-0x4]
   13cf1:	mov    DWORD PTR [ebp-0x4],eax
   13cf4:	call   0x12ece
   13cf9:	mov    eax,DWORD PTR [ebp-0x4]
   13cfc:	add    eax,0xc
   13cff:	leave  
   13d00:	ret    
   13d01:	int3   
   13d02:	int3   
   13d03:	int3   
   13d04:	int3   
   13d05:	int3   
   13d06:	mov    edi,edi
   13d08:	push   ebp
   13d09:	mov    ebp,esp
   13d0b:	push   ecx
   13d0c:	push   esi
   13d0d:	push   DWORD PTR [ebp+0xc]
   13d10:	mov    esi,ecx
   13d12:	call   0x12fe2
   13d17:	mov    DWORD PTR [ebp-0x4],eax
   13d1a:	cmp    eax,DWORD PTR [esi+0x4]
   13d1d:	je     0x13d34
   13d1f:	add    eax,0x10
   13d22:	push   eax
   13d23:	push   DWORD PTR [ebp+0xc]
   13d26:	call   0x197b8
   13d2b:	test   al,al
   13d2d:	jne    0x13d34
   13d2f:	lea    eax,[ebp-0x4]
   13d32:	jmp    0x13d3d
   13d34:	mov    eax,DWORD PTR [esi+0x4]
   13d37:	mov    DWORD PTR [ebp+0xc],eax
   13d3a:	lea    eax,[ebp+0xc]
   13d3d:	mov    ecx,DWORD PTR [eax]
   13d3f:	mov    eax,DWORD PTR [ebp+0x8]
   13d42:	mov    DWORD PTR [eax],ecx
   13d44:	pop    esi
   13d45:	leave  
   13d46:	ret    0x8
   13d49:	int3   
   13d4a:	int3   
   13d4b:	int3   
   13d4c:	int3   
   13d4d:	int3   
   13d4e:	mov    edi,edi
   13d50:	push   ebp
   13d51:	mov    ebp,esp
   13d53:	push   ecx
   13d54:	push   ecx
   13d55:	push   ebx
   13d56:	push   esi
   13d57:	mov    DWORD PTR [ebp-0x4],ecx
   13d5a:	push   edi
   13d5b:	mov    edi,DWORD PTR [ebp+0xc]
   13d5e:	lea    ecx,[ebp+0xc]
   13d61:	call   0x112b6
   13d66:	mov    esi,DWORD PTR [edi]
   13d68:	mov    eax,ds:0x78ab0
   13d6d:	mov    ebx,edi
   13d6f:	mov    DWORD PTR [ebp-0x8],esi
   13d72:	cmp    esi,eax
   13d74:	jne    0x13d92
   13d76:	mov    esi,DWORD PTR [edi+0x8]
   13d79:	mov    eax,DWORD PTR [ebx+0x4]
   13d7c:	mov    ecx,DWORD PTR [ebp-0x4]
   13d7f:	mov    DWORD PTR [esi+0x4],eax
   13d82:	mov    eax,DWORD PTR [ecx+0x4]
   13d85:	cmp    DWORD PTR [eax+0x4],edi
   13d88:	jne    0x13e07
   13d8a:	mov    DWORD PTR [eax+0x4],esi
   13d8d:	jmp    0x13e15
   13d92:	mov    ecx,DWORD PTR [edi+0x8]
   13d95:	cmp    ecx,eax
   13d97:	je     0x13d79
   13d99:	push   ecx
   13d9a:	call   0x111cc
   13d9f:	mov    ebx,eax
   13da1:	mov    esi,DWORD PTR [ebx+0x8]
   13da4:	cmp    ebx,edi
   13da6:	je     0x13d79
   13da8:	mov    eax,DWORD PTR [ebp-0x8]
   13dab:	mov    DWORD PTR [eax+0x4],ebx
   13dae:	mov    eax,DWORD PTR [edi]
   13db0:	mov    DWORD PTR [ebx],eax
   13db2:	cmp    ebx,DWORD PTR [edi+0x8]
   13db5:	jne    0x13dbc
   13db7:	mov    DWORD PTR [esi+0x4],ebx
   13dba:	jmp    0x13dd3
   13dbc:	mov    eax,DWORD PTR [ebx+0x4]
   13dbf:	mov    DWORD PTR [esi+0x4],eax
   13dc2:	mov    eax,DWORD PTR [ebx+0x4]
   13dc5:	mov    DWORD PTR [eax],esi
   13dc7:	mov    eax,DWORD PTR [edi+0x8]
   13dca:	mov    DWORD PTR [ebx+0x8],eax
   13dcd:	mov    eax,DWORD PTR [edi+0x8]
   13dd0:	mov    DWORD PTR [eax+0x4],ebx
   13dd3:	mov    eax,DWORD PTR [ebp-0x4]
   13dd6:	mov    eax,DWORD PTR [eax+0x4]
   13dd9:	cmp    DWORD PTR [eax+0x4],edi
   13ddc:	jne    0x13de3
   13dde:	mov    DWORD PTR [eax+0x4],ebx
   13de1:	jmp    0x13df1
   13de3:	mov    eax,DWORD PTR [edi+0x4]
   13de6:	cmp    DWORD PTR [eax],edi
   13de8:	jne    0x13dee
   13dea:	mov    DWORD PTR [eax],ebx
   13dec:	jmp    0x13df1
   13dee:	mov    DWORD PTR [eax+0x8],ebx
   13df1:	mov    eax,DWORD PTR [edi+0x4]
   13df4:	mov    DWORD PTR [ebx+0x4],eax
   13df7:	mov    eax,DWORD PTR [ebx+0x14]
   13dfa:	mov    ecx,DWORD PTR [edi+0x14]
   13dfd:	mov    DWORD PTR [ebx+0x14],ecx
   13e00:	mov    DWORD PTR [edi+0x14],eax
   13e03:	mov    ebx,edi
   13e05:	jmp    0x13e68
   13e07:	mov    eax,DWORD PTR [edi+0x4]
   13e0a:	cmp    DWORD PTR [eax],edi
   13e0c:	jne    0x13e12
   13e0e:	mov    DWORD PTR [eax],esi
   13e10:	jmp    0x13e15
   13e12:	mov    DWORD PTR [eax+0x8],esi
   13e15:	mov    eax,DWORD PTR [ecx+0x4]
   13e18:	mov    DWORD PTR [ebp-0x8],eax
   13e1b:	cmp    DWORD PTR [eax],edi
   13e1d:	jne    0x13e3f
   13e1f:	mov    edx,DWORD PTR [edi+0x8]
   13e22:	cmp    edx,DWORD PTR ds:0x78ab0
   13e28:	jne    0x13e31
   13e2a:	mov    edx,DWORD PTR [edi+0x4]
   13e2d:	mov    DWORD PTR [eax],edx
   13e2f:	jmp    0x13e3f
   13e31:	push   esi
   13e32:	call   0x111cc
   13e37:	mov    ecx,DWORD PTR [ebp-0x8]
   13e3a:	mov    DWORD PTR [ecx],eax
   13e3c:	mov    ecx,DWORD PTR [ebp-0x4]
   13e3f:	mov    eax,DWORD PTR [ecx+0x4]
   13e42:	mov    DWORD PTR [ebp-0x8],eax
   13e45:	cmp    DWORD PTR [eax+0x8],edi
   13e48:	jne    0x13e68
   13e4a:	mov    ecx,DWORD PTR [edi]
   13e4c:	cmp    ecx,DWORD PTR ds:0x78ab0
   13e52:	jne    0x13e5c
   13e54:	mov    ecx,DWORD PTR [edi+0x4]
   13e57:	mov    DWORD PTR [eax+0x8],ecx
   13e5a:	jmp    0x13e68
   13e5c:	push   esi
   13e5d:	call   0x111aa
   13e62:	mov    ecx,DWORD PTR [ebp-0x8]
   13e65:	mov    DWORD PTR [ecx+0x8],eax
   13e68:	xor    edi,edi
   13e6a:	inc    edi
   13e6b:	cmp    DWORD PTR [ebx+0x14],edi
   13e6e:	jne    0x13f85
   13e74:	jmp    0x13f33
   13e79:	cmp    DWORD PTR [esi+0x14],edi
   13e7c:	jne    0x13f82
   13e82:	mov    eax,DWORD PTR [esi+0x4]
   13e85:	cmp    esi,DWORD PTR [eax]
   13e87:	jne    0x13efe
   13e89:	mov    eax,DWORD PTR [eax+0x8]
   13e8c:	cmp    DWORD PTR [eax+0x14],0x0
   13e90:	jne    0x13eaa
   13e92:	mov    DWORD PTR [eax+0x14],edi
   13e95:	mov    eax,DWORD PTR [esi+0x4]
   13e98:	and    DWORD PTR [eax+0x14],0x0
   13e9c:	push   DWORD PTR [esi+0x4]
   13e9f:	call   0x12d42
   13ea4:	mov    eax,DWORD PTR [esi+0x4]
   13ea7:	mov    eax,DWORD PTR [eax+0x8]
   13eaa:	mov    ecx,DWORD PTR [eax]
   13eac:	cmp    DWORD PTR [ecx+0x14],edi
   13eaf:	jne    0x13eb9
   13eb1:	mov    ecx,DWORD PTR [eax+0x8]
   13eb4:	cmp    DWORD PTR [ecx+0x14],edi
   13eb7:	je     0x13f2c
   13eb9:	mov    ecx,DWORD PTR [eax+0x8]
   13ebc:	cmp    DWORD PTR [ecx+0x14],edi
   13ebf:	jne    0x13ed9
   13ec1:	mov    ecx,DWORD PTR [eax]
   13ec3:	mov    DWORD PTR [ecx+0x14],edi
   13ec6:	mov    ecx,DWORD PTR [ebp-0x4]
   13ec9:	and    DWORD PTR [eax+0x14],0x0
   13ecd:	push   eax
   13ece:	call   0x12d90
   13ed3:	mov    eax,DWORD PTR [esi+0x4]
   13ed6:	mov    eax,DWORD PTR [eax+0x8]
   13ed9:	mov    ecx,DWORD PTR [esi+0x4]
   13edc:	mov    ecx,DWORD PTR [ecx+0x14]
   13edf:	mov    DWORD PTR [eax+0x14],ecx
   13ee2:	mov    ecx,DWORD PTR [esi+0x4]
   13ee5:	mov    DWORD PTR [ecx+0x14],edi
   13ee8:	mov    eax,DWORD PTR [eax+0x8]
   13eeb:	mov    ecx,DWORD PTR [ebp-0x4]
   13eee:	mov    DWORD PTR [eax+0x14],edi
   13ef1:	push   DWORD PTR [esi+0x4]
   13ef4:	call   0x12d42
   13ef9:	jmp    0x13f82
   13efe:	mov    eax,DWORD PTR [eax]
   13f00:	cmp    DWORD PTR [eax+0x14],0x0
   13f04:	jne    0x13f1d
   13f06:	mov    DWORD PTR [eax+0x14],edi
   13f09:	mov    eax,DWORD PTR [esi+0x4]
   13f0c:	and    DWORD PTR [eax+0x14],0x0
   13f10:	push   DWORD PTR [esi+0x4]
   13f13:	call   0x12d90
   13f18:	mov    eax,DWORD PTR [esi+0x4]
   13f1b:	mov    eax,DWORD PTR [eax]
   13f1d:	mov    ecx,DWORD PTR [eax+0x8]
   13f20:	cmp    DWORD PTR [ecx+0x14],edi
   13f23:	jne    0x13f44
   13f25:	mov    ecx,DWORD PTR [eax]
   13f27:	cmp    DWORD PTR [ecx+0x14],edi
   13f2a:	jne    0x13f44
   13f2c:	and    DWORD PTR [eax+0x14],0x0
   13f30:	mov    esi,DWORD PTR [esi+0x4]
   13f33:	mov    ecx,DWORD PTR [ebp-0x4]
   13f36:	mov    eax,DWORD PTR [ecx+0x4]
   13f39:	cmp    esi,DWORD PTR [eax+0x4]
   13f3c:	jne    0x13e79
   13f42:	jmp    0x13f82
   13f44:	mov    ecx,DWORD PTR [eax]
   13f46:	cmp    DWORD PTR [ecx+0x14],edi
   13f49:	jne    0x13f63
   13f4b:	mov    ecx,DWORD PTR [eax+0x8]
   13f4e:	mov    DWORD PTR [ecx+0x14],edi
   13f51:	mov    ecx,DWORD PTR [ebp-0x4]
   13f54:	and    DWORD PTR [eax+0x14],0x0
   13f58:	push   eax
   13f59:	call   0x12d42
   13f5e:	mov    eax,DWORD PTR [esi+0x4]
   13f61:	mov    eax,DWORD PTR [eax]
   13f63:	mov    ecx,DWORD PTR [esi+0x4]
   13f66:	mov    ecx,DWORD PTR [ecx+0x14]
   13f69:	mov    DWORD PTR [eax+0x14],ecx
   13f6c:	mov    ecx,DWORD PTR [esi+0x4]
   13f6f:	mov    DWORD PTR [ecx+0x14],edi
   13f72:	mov    eax,DWORD PTR [eax]
   13f74:	mov    ecx,DWORD PTR [ebp-0x4]
   13f77:	mov    DWORD PTR [eax+0x14],edi
   13f7a:	push   DWORD PTR [esi+0x4]
   13f7d:	call   0x12d90
   13f82:	mov    DWORD PTR [esi+0x14],edi
   13f85:	push   ebx
   13f86:	call   0x1d9fc
   13f8b:	mov    eax,DWORD PTR [ebp-0x4]
   13f8e:	dec    DWORD PTR [eax+0xc]
   13f91:	mov    eax,DWORD PTR [ebp+0x8]
   13f94:	pop    ecx
   13f95:	mov    ecx,DWORD PTR [ebp+0xc]
   13f98:	pop    edi
   13f99:	pop    esi
   13f9a:	mov    DWORD PTR [eax],ecx
   13f9c:	pop    ebx
   13f9d:	leave  
   13f9e:	ret    0x8
   13fa1:	int3   
   13fa2:	int3   
   13fa3:	int3   
   13fa4:	int3   
   13fa5:	int3   
   13fa6:	mov    edi,edi
   13fa8:	push   ebp
   13fa9:	mov    ebp,esp
   13fab:	push   esi
   13fac:	push   edi
   13fad:	push   DWORD PTR [ebp+0xc]
   13fb0:	mov    edi,ecx
   13fb2:	call   0x130c0
   13fb7:	push   DWORD PTR [ebp+0xc]
   13fba:	mov    ecx,edi
   13fbc:	mov    esi,eax
   13fbe:	call   0x12d0a
   13fc3:	mov    ecx,DWORD PTR [ebp+0x8]
   13fc6:	pop    edi
   13fc7:	mov    DWORD PTR [ecx],eax
   13fc9:	mov    DWORD PTR [ecx+0x4],esi
   13fcc:	mov    eax,ecx
   13fce:	pop    esi
   13fcf:	pop    ebp
   13fd0:	ret    0x8
   13fd3:	int3   
   13fd4:	int3   
   13fd5:	int3   
   13fd6:	int3   
   13fd7:	int3   
   13fd8:	mov    edi,edi
   13fda:	push   esi
   13fdb:	push   edi
   13fdc:	push   0x1
   13fde:	xor    edi,edi
   13fe0:	push   edi
   13fe1:	mov    esi,ecx
   13fe3:	call   0x13960
   13fe8:	cmp    DWORD PTR ds:0x78ab0,edi
   13fee:	jne    0x14005
   13ff0:	mov    ecx,eax
   13ff2:	mov    DWORD PTR ds:0x78ab0,ecx
   13ff8:	mov    DWORD PTR [ecx],edi
   13ffa:	mov    ecx,DWORD PTR ds:0x78ab0
   14000:	xor    eax,eax
   14002:	mov    DWORD PTR [ecx+0x8],edi
   14005:	inc    DWORD PTR ds:0x78c08
   1400b:	cmp    eax,edi
   1400d:	je     0x14016
   1400f:	push   eax
   14010:	call   0x1d9fc
   14015:	pop    ecx
   14016:	push   edi
   14017:	push   DWORD PTR ds:0x78ab0
   1401d:	mov    ecx,esi
   1401f:	call   0x13960
   14024:	mov    DWORD PTR [esi+0xc],edi
   14027:	mov    DWORD PTR [esi+0x4],eax
   1402a:	mov    DWORD PTR [eax],eax
   1402c:	mov    esi,DWORD PTR [esi+0x4]
   1402f:	pop    edi
   14030:	mov    DWORD PTR [esi+0x8],esi
   14033:	pop    esi
   14034:	ret    
   14035:	int3   
   14036:	int3   
   14037:	int3   
   14038:	int3   
   14039:	int3   
   1403a:	mov    edi,edi
   1403c:	push   ebp
   1403d:	mov    ebp,esp
   1403f:	push   esi
   14040:	push   edi
   14041:	push   DWORD PTR [ebp+0xc]
   14044:	mov    edi,ecx
   14046:	call   0x130f8
   1404b:	push   DWORD PTR [ebp+0xc]
   1404e:	mov    ecx,edi
   14050:	mov    esi,eax
   14052:	call   0x12de0
   14057:	mov    ecx,DWORD PTR [ebp+0x8]
   1405a:	pop    edi
   1405b:	mov    DWORD PTR [ecx],eax
   1405d:	mov    DWORD PTR [ecx+0x4],esi
   14060:	mov    eax,ecx
   14062:	pop    esi
   14063:	pop    ebp
   14064:	ret    0x8
   14067:	int3   
   14068:	int3   
   14069:	int3   
   1406a:	int3   
   1406b:	int3   
   1406c:	mov    edi,edi
   1406e:	push   esi
   1406f:	push   edi
   14070:	push   0x1
   14072:	xor    edi,edi
   14074:	push   edi
   14075:	mov    esi,ecx
   14077:	call   0x13984
   1407c:	cmp    DWORD PTR ds:0x78abc,edi
   14082:	jne    0x14099
   14084:	mov    ecx,eax
   14086:	mov    DWORD PTR ds:0x78abc,ecx
   1408c:	mov    DWORD PTR [ecx],edi
   1408e:	mov    ecx,DWORD PTR ds:0x78abc
   14094:	xor    eax,eax
   14096:	mov    DWORD PTR [ecx+0x8],edi
   14099:	inc    DWORD PTR ds:0x78c0c
   1409f:	cmp    eax,edi
   140a1:	je     0x140aa
   140a3:	push   eax
   140a4:	call   0x1d9fc
   140a9:	pop    ecx
   140aa:	push   edi
   140ab:	push   DWORD PTR ds:0x78abc
   140b1:	mov    ecx,esi
   140b3:	call   0x13984
   140b8:	mov    DWORD PTR [esi+0xc],edi
   140bb:	mov    DWORD PTR [esi+0x4],eax
   140be:	mov    DWORD PTR [eax],eax
   140c0:	mov    esi,DWORD PTR [esi+0x4]
   140c3:	pop    edi
   140c4:	mov    DWORD PTR [esi+0x8],esi
   140c7:	pop    esi
   140c8:	ret    
   140c9:	int3   
   140ca:	int3   
   140cb:	int3   
   140cc:	int3   
   140cd:	int3   
   140ce:	mov    edi,edi
   140d0:	push   ebp
   140d1:	mov    ebp,esp
   140d3:	push   esi
   140d4:	push   edi
   140d5:	push   DWORD PTR [ebp+0xc]
   140d8:	mov    edi,ecx
   140da:	call   0x131d6
   140df:	push   DWORD PTR [ebp+0xc]
   140e2:	mov    ecx,edi
   140e4:	mov    esi,eax
   140e6:	call   0x12e20
   140eb:	mov    ecx,DWORD PTR [ebp+0x8]
   140ee:	pop    edi
   140ef:	mov    DWORD PTR [ecx],eax
   140f1:	mov    DWORD PTR [ecx+0x4],esi
   140f4:	mov    eax,ecx
   140f6:	pop    esi
   140f7:	pop    ebp
   140f8:	ret    0x8
   140fb:	int3   
   140fc:	int3   
   140fd:	int3   
   140fe:	int3   
   140ff:	int3   
   14100:	mov    edi,edi
   14102:	push   esi
   14103:	push   edi
   14104:	push   0x1
   14106:	xor    edi,edi
   14108:	push   edi
   14109:	mov    esi,ecx
   1410b:	call   0x139a8
   14110:	cmp    DWORD PTR ds:0x78ac0,edi
   14116:	jne    0x1412d
   14118:	mov    ecx,eax
   1411a:	mov    DWORD PTR ds:0x78ac0,ecx
   14120:	mov    DWORD PTR [ecx],edi
   14122:	mov    ecx,DWORD PTR ds:0x78ac0
   14128:	xor    eax,eax
   1412a:	mov    DWORD PTR [ecx+0x8],edi
   1412d:	inc    DWORD PTR ds:0x78c10
   14133:	cmp    eax,edi
   14135:	je     0x1413e
   14137:	push   eax
   14138:	call   0x1d9fc
   1413d:	pop    ecx
   1413e:	push   edi
   1413f:	push   DWORD PTR ds:0x78ac0
   14145:	mov    ecx,esi
   14147:	call   0x139a8
   1414c:	mov    DWORD PTR [esi+0xc],edi
   1414f:	mov    DWORD PTR [esi+0x4],eax
   14152:	mov    DWORD PTR [eax],eax
   14154:	mov    esi,DWORD PTR [esi+0x4]
   14157:	pop    edi
   14158:	mov    DWORD PTR [esi+0x8],esi
   1415b:	pop    esi
   1415c:	ret    
   1415d:	int3   
   1415e:	int3   
   1415f:	int3   
   14160:	int3   
   14161:	int3   
   14162:	mov    edi,edi
   14164:	push   ebp
   14165:	mov    ebp,esp
   14167:	push   esi
   14168:	push   edi
   14169:	push   DWORD PTR [ebp+0xc]
   1416c:	mov    edi,ecx
   1416e:	call   0x132b4
   14173:	push   DWORD PTR [ebp+0xc]
   14176:	mov    ecx,edi
   14178:	mov    esi,eax
   1417a:	call   0x12e60
   1417f:	mov    ecx,DWORD PTR [ebp+0x8]
   14182:	pop    edi
   14183:	mov    DWORD PTR [ecx],eax
   14185:	mov    DWORD PTR [ecx+0x4],esi
   14188:	mov    eax,ecx
   1418a:	pop    esi
   1418b:	pop    ebp
   1418c:	ret    0x8
   1418f:	int3   
   14190:	int3   
   14191:	int3   
   14192:	int3   
   14193:	int3   
   14194:	mov    edi,edi
   14196:	push   esi
   14197:	push   edi
   14198:	push   0x1
   1419a:	xor    edi,edi
   1419c:	push   edi
   1419d:	mov    esi,ecx
   1419f:	call   0x13960
   141a4:	cmp    DWORD PTR ds:0x78ac4,edi
   141aa:	jne    0x141c1
   141ac:	mov    ecx,eax
   141ae:	mov    DWORD PTR ds:0x78ac4,ecx
   141b4:	mov    DWORD PTR [ecx],edi
   141b6:	mov    ecx,DWORD PTR ds:0x78ac4
   141bc:	xor    eax,eax
   141be:	mov    DWORD PTR [ecx+0x8],edi
   141c1:	inc    DWORD PTR ds:0x78c14
   141c7:	cmp    eax,edi
   141c9:	je     0x141d2
   141cb:	push   eax
   141cc:	call   0x1d9fc
   141d1:	pop    ecx
   141d2:	push   edi
   141d3:	push   DWORD PTR ds:0x78ac4
   141d9:	mov    ecx,esi
   141db:	call   0x13960
   141e0:	mov    DWORD PTR [esi+0xc],edi
   141e3:	mov    DWORD PTR [esi+0x4],eax
   141e6:	mov    DWORD PTR [eax],eax
   141e8:	mov    esi,DWORD PTR [esi+0x4]
   141eb:	pop    edi
   141ec:	mov    DWORD PTR [esi+0x8],esi
   141ef:	pop    esi
   141f0:	ret    
   141f1:	int3   
   141f2:	int3   
   141f3:	int3   
   141f4:	int3   
   141f5:	int3   
   141f6:	mov    edi,edi
   141f8:	push   ebp
   141f9:	mov    ebp,esp
   141fb:	push   ecx
   141fc:	push   esi
   141fd:	push   DWORD PTR [ebp+0xc]
   14200:	mov    esi,ecx
   14202:	call   0x132ec
   14207:	mov    DWORD PTR [ebp-0x4],eax
   1420a:	cmp    eax,DWORD PTR [esi+0x4]
   1420d:	je     0x14224
   1420f:	add    eax,0xc
   14212:	push   eax
   14213:	push   DWORD PTR [ebp+0xc]
   14216:	call   0x197e8
   1421b:	test   al,al
   1421d:	jne    0x14224
   1421f:	lea    eax,[ebp-0x4]
   14222:	jmp    0x1422d
   14224:	mov    eax,DWORD PTR [esi+0x4]
   14227:	mov    DWORD PTR [ebp+0xc],eax
   1422a:	lea    eax,[ebp+0xc]
   1422d:	mov    ecx,DWORD PTR [eax]
   1422f:	mov    eax,DWORD PTR [ebp+0x8]
   14232:	mov    DWORD PTR [eax],ecx
   14234:	pop    esi
   14235:	leave  
   14236:	ret    0x8
   14239:	int3   
   1423a:	int3   
   1423b:	int3   
   1423c:	int3   
   1423d:	int3   
   1423e:	mov    edi,edi
   14240:	push   ebp
   14241:	mov    ebp,esp
   14243:	push   ecx
   14244:	push   ecx
   14245:	push   ebx
   14246:	push   esi
   14247:	mov    DWORD PTR [ebp-0x4],ecx
   1424a:	push   edi
   1424b:	mov    edi,DWORD PTR [ebp+0xc]
   1424e:	lea    ecx,[ebp+0xc]
   14251:	call   0x12f0e
   14256:	mov    esi,DWORD PTR [edi]
   14258:	mov    eax,ds:0x78ab4
   1425d:	mov    ebx,edi
   1425f:	mov    DWORD PTR [ebp-0x8],esi
   14262:	cmp    esi,eax
   14264:	jne    0x14282
   14266:	mov    esi,DWORD PTR [edi+0x8]
   14269:	mov    eax,DWORD PTR [ebx+0x4]
   1426c:	mov    ecx,DWORD PTR [ebp-0x4]
   1426f:	mov    DWORD PTR [esi+0x4],eax
   14272:	mov    eax,DWORD PTR [ecx+0x4]
   14275:	cmp    DWORD PTR [eax+0x4],edi
   14278:	jne    0x142f7
   1427a:	mov    DWORD PTR [eax+0x4],esi
   1427d:	jmp    0x14305
   14282:	mov    ecx,DWORD PTR [edi+0x8]
   14285:	cmp    ecx,eax
   14287:	je     0x14269
   14289:	push   ecx
   1428a:	call   0x11210
   1428f:	mov    ebx,eax
   14291:	mov    esi,DWORD PTR [ebx+0x8]
   14294:	cmp    ebx,edi
   14296:	je     0x14269
   14298:	mov    eax,DWORD PTR [ebp-0x8]
   1429b:	mov    DWORD PTR [eax+0x4],ebx
   1429e:	mov    eax,DWORD PTR [edi]
   142a0:	mov    DWORD PTR [ebx],eax
   142a2:	cmp    ebx,DWORD PTR [edi+0x8]
   142a5:	jne    0x142ac
   142a7:	mov    DWORD PTR [esi+0x4],ebx
   142aa:	jmp    0x142c3
   142ac:	mov    eax,DWORD PTR [ebx+0x4]
   142af:	mov    DWORD PTR [esi+0x4],eax
   142b2:	mov    eax,DWORD PTR [ebx+0x4]
   142b5:	mov    DWORD PTR [eax],esi
   142b7:	mov    eax,DWORD PTR [edi+0x8]
   142ba:	mov    DWORD PTR [ebx+0x8],eax
   142bd:	mov    eax,DWORD PTR [edi+0x8]
   142c0:	mov    DWORD PTR [eax+0x4],ebx
   142c3:	mov    eax,DWORD PTR [ebp-0x4]
   142c6:	mov    eax,DWORD PTR [eax+0x4]
   142c9:	cmp    DWORD PTR [eax+0x4],edi
   142cc:	jne    0x142d3
   142ce:	mov    DWORD PTR [eax+0x4],ebx
   142d1:	jmp    0x142e1
   142d3:	mov    eax,DWORD PTR [edi+0x4]
   142d6:	cmp    DWORD PTR [eax],edi
   142d8:	jne    0x142de
   142da:	mov    DWORD PTR [eax],ebx
   142dc:	jmp    0x142e1
   142de:	mov    DWORD PTR [eax+0x8],ebx
   142e1:	mov    eax,DWORD PTR [edi+0x4]
   142e4:	mov    DWORD PTR [ebx+0x4],eax
   142e7:	mov    eax,DWORD PTR [ebx+0x10]
   142ea:	mov    ecx,DWORD PTR [edi+0x10]
   142ed:	mov    DWORD PTR [ebx+0x10],ecx
   142f0:	mov    DWORD PTR [edi+0x10],eax
   142f3:	mov    ebx,edi
   142f5:	jmp    0x14358
   142f7:	mov    eax,DWORD PTR [edi+0x4]
   142fa:	cmp    DWORD PTR [eax],edi
   142fc:	jne    0x14302
   142fe:	mov    DWORD PTR [eax],esi
   14300:	jmp    0x14305
   14302:	mov    DWORD PTR [eax+0x8],esi
   14305:	mov    eax,DWORD PTR [ecx+0x4]
   14308:	mov    DWORD PTR [ebp-0x8],eax
   1430b:	cmp    DWORD PTR [eax],edi
   1430d:	jne    0x1432f
   1430f:	mov    edx,DWORD PTR [edi+0x8]
   14312:	cmp    edx,DWORD PTR ds:0x78ab4
   14318:	jne    0x14321
   1431a:	mov    edx,DWORD PTR [edi+0x4]
   1431d:	mov    DWORD PTR [eax],edx
   1431f:	jmp    0x1432f
   14321:	push   esi
   14322:	call   0x11210
   14327:	mov    ecx,DWORD PTR [ebp-0x8]
   1432a:	mov    DWORD PTR [ecx],eax
   1432c:	mov    ecx,DWORD PTR [ebp-0x4]
   1432f:	mov    eax,DWORD PTR [ecx+0x4]
   14332:	mov    DWORD PTR [ebp-0x8],eax
   14335:	cmp    DWORD PTR [eax+0x8],edi
   14338:	jne    0x14358
   1433a:	mov    ecx,DWORD PTR [edi]
   1433c:	cmp    ecx,DWORD PTR ds:0x78ab4
   14342:	jne    0x1434c
   14344:	mov    ecx,DWORD PTR [edi+0x4]
   14347:	mov    DWORD PTR [eax+0x8],ecx
   1434a:	jmp    0x14358
   1434c:	push   esi
   1434d:	call   0x111ee
   14352:	mov    ecx,DWORD PTR [ebp-0x8]
   14355:	mov    DWORD PTR [ecx+0x8],eax
   14358:	xor    edi,edi
   1435a:	inc    edi
   1435b:	cmp    DWORD PTR [ebx+0x10],edi
   1435e:	jne    0x14475
   14364:	jmp    0x14423
   14369:	cmp    DWORD PTR [esi+0x10],edi
   1436c:	jne    0x14472
   14372:	mov    eax,DWORD PTR [esi+0x4]
   14375:	cmp    esi,DWORD PTR [eax]
   14377:	jne    0x143ee
   14379:	mov    eax,DWORD PTR [eax+0x8]
   1437c:	cmp    DWORD PTR [eax+0x10],0x0
   14380:	jne    0x1439a
   14382:	mov    DWORD PTR [eax+0x10],edi
   14385:	mov    eax,DWORD PTR [esi+0x4]
   14388:	and    DWORD PTR [eax+0x10],0x0
   1438c:	push   DWORD PTR [esi+0x4]
   1438f:	call   0x12f44
   14394:	mov    eax,DWORD PTR [esi+0x4]
   14397:	mov    eax,DWORD PTR [eax+0x8]
   1439a:	mov    ecx,DWORD PTR [eax]
   1439c:	cmp    DWORD PTR [ecx+0x10],edi
   1439f:	jne    0x143a9
   143a1:	mov    ecx,DWORD PTR [eax+0x8]
   143a4:	cmp    DWORD PTR [ecx+0x10],edi
   143a7:	je     0x1441c
   143a9:	mov    ecx,DWORD PTR [eax+0x8]
   143ac:	cmp    DWORD PTR [ecx+0x10],edi
   143af:	jne    0x143c9
   143b1:	mov    ecx,DWORD PTR [eax]
   143b3:	mov    DWORD PTR [ecx+0x10],edi
   143b6:	mov    ecx,DWORD PTR [ebp-0x4]
   143b9:	and    DWORD PTR [eax+0x10],0x0
   143bd:	push   eax
   143be:	call   0x12f92
   143c3:	mov    eax,DWORD PTR [esi+0x4]
   143c6:	mov    eax,DWORD PTR [eax+0x8]
   143c9:	mov    ecx,DWORD PTR [esi+0x4]
   143cc:	mov    ecx,DWORD PTR [ecx+0x10]
   143cf:	mov    DWORD PTR [eax+0x10],ecx
   143d2:	mov    ecx,DWORD PTR [esi+0x4]
   143d5:	mov    DWORD PTR [ecx+0x10],edi
   143d8:	mov    eax,DWORD PTR [eax+0x8]
   143db:	mov    ecx,DWORD PTR [ebp-0x4]
   143de:	mov    DWORD PTR [eax+0x10],edi
   143e1:	push   DWORD PTR [esi+0x4]
   143e4:	call   0x12f44
   143e9:	jmp    0x14472
   143ee:	mov    eax,DWORD PTR [eax]
   143f0:	cmp    DWORD PTR [eax+0x10],0x0
   143f4:	jne    0x1440d
   143f6:	mov    DWORD PTR [eax+0x10],edi
   143f9:	mov    eax,DWORD PTR [esi+0x4]
   143fc:	and    DWORD PTR [eax+0x10],0x0
   14400:	push   DWORD PTR [esi+0x4]
   14403:	call   0x12f92
   14408:	mov    eax,DWORD PTR [esi+0x4]
   1440b:	mov    eax,DWORD PTR [eax]
   1440d:	mov    ecx,DWORD PTR [eax+0x8]
   14410:	cmp    DWORD PTR [ecx+0x10],edi
   14413:	jne    0x14434
   14415:	mov    ecx,DWORD PTR [eax]
   14417:	cmp    DWORD PTR [ecx+0x10],edi
   1441a:	jne    0x14434
   1441c:	and    DWORD PTR [eax+0x10],0x0
   14420:	mov    esi,DWORD PTR [esi+0x4]
   14423:	mov    ecx,DWORD PTR [ebp-0x4]
   14426:	mov    eax,DWORD PTR [ecx+0x4]
   14429:	cmp    esi,DWORD PTR [eax+0x4]
   1442c:	jne    0x14369
   14432:	jmp    0x14472
   14434:	mov    ecx,DWORD PTR [eax]
   14436:	cmp    DWORD PTR [ecx+0x10],edi
   14439:	jne    0x14453
   1443b:	mov    ecx,DWORD PTR [eax+0x8]
   1443e:	mov    DWORD PTR [ecx+0x10],edi
   14441:	mov    ecx,DWORD PTR [ebp-0x4]
   14444:	and    DWORD PTR [eax+0x10],0x0
   14448:	push   eax
   14449:	call   0x12f44
   1444e:	mov    eax,DWORD PTR [esi+0x4]
   14451:	mov    eax,DWORD PTR [eax]
   14453:	mov    ecx,DWORD PTR [esi+0x4]
   14456:	mov    ecx,DWORD PTR [ecx+0x10]
   14459:	mov    DWORD PTR [eax+0x10],ecx
   1445c:	mov    ecx,DWORD PTR [esi+0x4]
   1445f:	mov    DWORD PTR [ecx+0x10],edi
   14462:	mov    eax,DWORD PTR [eax]
   14464:	mov    ecx,DWORD PTR [ebp-0x4]
   14467:	mov    DWORD PTR [eax+0x10],edi
   1446a:	push   DWORD PTR [esi+0x4]
   1446d:	call   0x12f92
   14472:	mov    DWORD PTR [esi+0x10],edi
   14475:	push   ebx
   14476:	call   0x1d9fc
   1447b:	mov    eax,DWORD PTR [ebp-0x4]
   1447e:	dec    DWORD PTR [eax+0xc]
   14481:	mov    eax,DWORD PTR [ebp+0x8]
   14484:	pop    ecx
   14485:	mov    ecx,DWORD PTR [ebp+0xc]
   14488:	pop    edi
   14489:	pop    esi
   1448a:	mov    DWORD PTR [eax],ecx
   1448c:	pop    ebx
   1448d:	leave  
   1448e:	ret    0x8
   14491:	int3   
   14492:	int3   
   14493:	int3   
   14494:	int3   
   14495:	int3   
   14496:	mov    edi,edi
   14498:	push   ebp
   14499:	mov    ebp,esp
   1449b:	push   esi
   1449c:	push   edi
   1449d:	push   DWORD PTR [ebp+0xc]
   144a0:	mov    edi,ecx
   144a2:	call   0x13442
   144a7:	push   DWORD PTR [ebp+0xc]
   144aa:	mov    ecx,edi
   144ac:	mov    esi,eax
   144ae:	call   0x1340a
   144b3:	mov    ecx,DWORD PTR [ebp+0x8]
   144b6:	pop    edi
   144b7:	mov    DWORD PTR [ecx],eax
   144b9:	mov    DWORD PTR [ecx+0x4],esi
   144bc:	mov    eax,ecx
   144be:	pop    esi
   144bf:	pop    ebp
   144c0:	ret    0x8
   144c3:	int3   
   144c4:	int3   
   144c5:	int3   
   144c6:	int3   
   144c7:	int3   
   144c8:	mov    edi,edi
   144ca:	push   esi
   144cb:	push   edi
   144cc:	push   0x1
   144ce:	xor    edi,edi
   144d0:	push   edi
   144d1:	mov    esi,ecx
   144d3:	call   0x139cc
   144d8:	cmp    DWORD PTR ds:0x78ab4,edi
   144de:	jne    0x144f5
   144e0:	mov    ecx,eax
   144e2:	mov    DWORD PTR ds:0x78ab4,ecx
   144e8:	mov    DWORD PTR [ecx],edi
   144ea:	mov    ecx,DWORD PTR ds:0x78ab4
   144f0:	xor    eax,eax
   144f2:	mov    DWORD PTR [ecx+0x8],edi
   144f5:	inc    DWORD PTR ds:0x78c18
   144fb:	cmp    eax,edi
   144fd:	je     0x14506
   144ff:	push   eax
   14500:	call   0x1d9fc
   14505:	pop    ecx
   14506:	push   edi
   14507:	push   DWORD PTR ds:0x78ab4
   1450d:	mov    ecx,esi
   1450f:	call   0x139cc
   14514:	mov    DWORD PTR [esi+0xc],edi
   14517:	mov    DWORD PTR [esi+0x4],eax
   1451a:	mov    DWORD PTR [eax],eax
   1451c:	mov    esi,DWORD PTR [esi+0x4]
   1451f:	pop    edi
   14520:	mov    DWORD PTR [esi+0x8],esi
   14523:	pop    esi
   14524:	ret    
   14525:	int3   
   14526:	int3   
   14527:	int3   
   14528:	int3   
   14529:	int3   
   1452a:	mov    edi,edi
   1452c:	push   ebp
   1452d:	mov    ebp,esp
   1452f:	push   ebx
   14530:	push   esi
   14531:	mov    esi,DWORD PTR [ebp+0x10]
   14534:	push   edi
   14535:	push   0x0
   14537:	push   esi
   14538:	mov    edi,ecx
   1453a:	call   0x139cc
   1453f:	push   DWORD PTR [ebp+0x14]
   14542:	mov    ebx,eax
   14544:	mov    eax,ds:0x78ab4
   14549:	mov    DWORD PTR [ebx],eax
   1454b:	mov    eax,ds:0x78ab4
   14550:	mov    DWORD PTR [ebx+0x8],eax
   14553:	lea    eax,[ebx+0xc]
   14556:	push   eax
   14557:	call   0x11626
   1455c:	inc    DWORD PTR [edi+0xc]
   1455f:	cmp    esi,DWORD PTR [edi+0x4]
   14562:	je     0x14586
   14564:	mov    eax,DWORD PTR [ebp+0xc]
   14567:	cmp    eax,DWORD PTR ds:0x78ab4
   1456d:	jne    0x14586
   1456f:	mov    eax,DWORD PTR [ebp+0x14]
   14572:	mov    eax,DWORD PTR [eax]
   14574:	cmp    eax,DWORD PTR [esi+0xc]
   14577:	jb     0x14586
   14579:	mov    DWORD PTR [esi+0x8],ebx
   1457c:	mov    eax,DWORD PTR [edi+0x4]
   1457f:	cmp    esi,DWORD PTR [eax+0x8]
   14582:	jne    0x145a0
   14584:	jmp    0x14595
   14586:	mov    DWORD PTR [esi],ebx
   14588:	mov    eax,DWORD PTR [edi+0x4]
   1458b:	cmp    esi,eax
   1458d:	jne    0x1459a
   1458f:	mov    DWORD PTR [eax+0x4],ebx
   14592:	mov    eax,DWORD PTR [edi+0x4]
   14595:	mov    DWORD PTR [eax+0x8],ebx
   14598:	jmp    0x145a0
   1459a:	cmp    esi,DWORD PTR [eax]
   1459c:	jne    0x145a0
   1459e:	mov    DWORD PTR [eax],ebx
   145a0:	mov    eax,DWORD PTR [edi+0x4]
   145a3:	mov    esi,ebx
   145a5:	cmp    ebx,DWORD PTR [eax+0x4]
   145a8:	je     0x1465c
   145ae:	mov    eax,DWORD PTR [esi+0x4]
   145b1:	xor    edx,edx
   145b3:	cmp    DWORD PTR [eax+0x10],edx
   145b6:	jne    0x1465c
   145bc:	mov    ecx,DWORD PTR [eax+0x4]
   145bf:	cmp    eax,DWORD PTR [ecx]
   145c1:	jne    0x145fd
   145c3:	mov    ecx,DWORD PTR [ecx+0x8]
   145c6:	cmp    DWORD PTR [ecx+0x10],edx
   145c9:	je     0x14604
   145cb:	cmp    esi,DWORD PTR [eax+0x8]
   145ce:	jne    0x145da
   145d0:	mov    esi,eax
   145d2:	push   esi
   145d3:	mov    ecx,edi
   145d5:	call   0x12f44
   145da:	mov    eax,DWORD PTR [esi+0x4]
   145dd:	mov    DWORD PTR [eax+0x10],0x1
   145e4:	mov    eax,DWORD PTR [esi+0x4]
   145e7:	mov    eax,DWORD PTR [eax+0x4]
   145ea:	and    DWORD PTR [eax+0x10],0x0
   145ee:	mov    eax,DWORD PTR [esi+0x4]
   145f1:	push   DWORD PTR [eax+0x4]
   145f4:	mov    ecx,edi
   145f6:	call   0x12f92
   145fb:	jmp    0x14650
   145fd:	mov    ecx,DWORD PTR [ecx]
   145ff:	cmp    DWORD PTR [ecx+0x10],edx
   14602:	jne    0x14621
   14604:	mov    edx,eax
   14606:	xor    eax,eax
   14608:	inc    eax
   14609:	mov    DWORD PTR [edx+0x10],eax
   1460c:	mov    DWORD PTR [ecx+0x10],eax
   1460f:	mov    eax,DWORD PTR [esi+0x4]
   14612:	mov    eax,DWORD PTR [eax+0x4]
   14615:	and    DWORD PTR [eax+0x10],0x0
   14619:	mov    eax,DWORD PTR [esi+0x4]
   1461c:	mov    esi,DWORD PTR [eax+0x4]
   1461f:	jmp    0x14650
   14621:	cmp    esi,DWORD PTR [eax]
   14623:	jne    0x1462f
   14625:	mov    esi,eax
   14627:	push   esi
   14628:	mov    ecx,edi
   1462a:	call   0x12f92
   1462f:	mov    eax,DWORD PTR [esi+0x4]
   14632:	mov    DWORD PTR [eax+0x10],0x1
   14639:	mov    eax,DWORD PTR [esi+0x4]
   1463c:	mov    eax,DWORD PTR [eax+0x4]
   1463f:	and    DWORD PTR [eax+0x10],0x0
   14643:	mov    eax,DWORD PTR [esi+0x4]
   14646:	push   DWORD PTR [eax+0x4]
   14649:	mov    ecx,edi
   1464b:	call   0x12f44
   14650:	mov    eax,DWORD PTR [edi+0x4]
   14653:	cmp    esi,DWORD PTR [eax+0x4]
   14656:	jne    0x145ae
   1465c:	mov    eax,DWORD PTR [edi+0x4]
   1465f:	mov    eax,DWORD PTR [eax+0x4]
   14662:	pop    edi
   14663:	mov    DWORD PTR [eax+0x10],0x1
   1466a:	mov    eax,DWORD PTR [ebp+0x8]
   1466d:	pop    esi
   1466e:	mov    DWORD PTR [eax],ebx
   14670:	pop    ebx
   14671:	pop    ebp
   14672:	ret    0x10
   14675:	int3   
   14676:	int3   
   14677:	int3   
   14678:	int3   
   14679:	int3   
   1467a:	mov    edi,edi
   1467c:	push   esi
   1467d:	push   edi
   1467e:	push   0x1
   14680:	xor    edi,edi
   14682:	push   edi
   14683:	mov    esi,ecx
   14685:	call   0x139f0
   1468a:	cmp    DWORD PTR ds:0x78ab8,edi
   14690:	jne    0x146a7
   14692:	mov    ecx,eax
   14694:	mov    DWORD PTR ds:0x78ab8,ecx
   1469a:	mov    DWORD PTR [ecx],edi
   1469c:	mov    ecx,DWORD PTR ds:0x78ab8
   146a2:	xor    eax,eax
   146a4:	mov    DWORD PTR [ecx+0x8],edi
   146a7:	inc    DWORD PTR ds:0x78c1c
   146ad:	cmp    eax,edi
   146af:	je     0x146b8
   146b1:	push   eax
   146b2:	call   0x1d9fc
   146b7:	pop    ecx
   146b8:	push   edi
   146b9:	push   DWORD PTR ds:0x78ab8
   146bf:	mov    ecx,esi
   146c1:	call   0x139f0
   146c6:	mov    DWORD PTR [esi+0xc],edi
   146c9:	mov    DWORD PTR [esi+0x4],eax
   146cc:	mov    DWORD PTR [eax],eax
   146ce:	mov    esi,DWORD PTR [esi+0x4]
   146d1:	pop    edi
   146d2:	mov    DWORD PTR [esi+0x8],esi
   146d5:	pop    esi
   146d6:	ret    
   146d7:	int3   
   146d8:	int3   
   146d9:	int3   
   146da:	int3   
   146db:	int3   
   146dc:	mov    edi,edi
   146de:	push   ebp
   146df:	mov    ebp,esp
   146e1:	push   ebx
   146e2:	push   esi
   146e3:	mov    esi,DWORD PTR [ebp+0x10]
   146e6:	push   edi
   146e7:	push   0x0
   146e9:	push   esi
   146ea:	mov    edi,ecx
   146ec:	call   0x13960
   146f1:	push   DWORD PTR [ebp+0x14]
   146f4:	mov    ebx,eax
   146f6:	mov    eax,ds:0x78ab0
   146fb:	mov    DWORD PTR [ebx],eax
   146fd:	mov    eax,ds:0x78ab0
   14702:	mov    DWORD PTR [ebx+0x8],eax
   14705:	lea    eax,[ebx+0xc]
   14708:	push   eax
   14709:	call   0x11642
   1470e:	inc    DWORD PTR [edi+0xc]
   14711:	cmp    esi,DWORD PTR [edi+0x4]
   14714:	je     0x14738
   14716:	mov    eax,DWORD PTR [ebp+0xc]
   14719:	cmp    eax,DWORD PTR ds:0x78ab0
   1471f:	jne    0x14738
   14721:	mov    eax,DWORD PTR [ebp+0x14]
   14724:	mov    eax,DWORD PTR [eax]
   14726:	cmp    eax,DWORD PTR [esi+0xc]
   14729:	jb     0x14738
   1472b:	mov    DWORD PTR [esi+0x8],ebx
   1472e:	mov    eax,DWORD PTR [edi+0x4]
   14731:	cmp    esi,DWORD PTR [eax+0x8]
   14734:	jne    0x14752
   14736:	jmp    0x14747
   14738:	mov    DWORD PTR [esi],ebx
   1473a:	mov    eax,DWORD PTR [edi+0x4]
   1473d:	cmp    esi,eax
   1473f:	jne    0x1474c
   14741:	mov    DWORD PTR [eax+0x4],ebx
   14744:	mov    eax,DWORD PTR [edi+0x4]
   14747:	mov    DWORD PTR [eax+0x8],ebx
   1474a:	jmp    0x14752
   1474c:	cmp    esi,DWORD PTR [eax]
   1474e:	jne    0x14752
   14750:	mov    DWORD PTR [eax],ebx
   14752:	mov    eax,DWORD PTR [edi+0x4]
   14755:	mov    esi,ebx
   14757:	cmp    ebx,DWORD PTR [eax+0x4]
   1475a:	je     0x1480e
   14760:	mov    eax,DWORD PTR [esi+0x4]
   14763:	xor    edx,edx
   14765:	cmp    DWORD PTR [eax+0x14],edx
   14768:	jne    0x1480e
   1476e:	mov    ecx,DWORD PTR [eax+0x4]
   14771:	cmp    eax,DWORD PTR [ecx]
   14773:	jne    0x147af
   14775:	mov    ecx,DWORD PTR [ecx+0x8]
   14778:	cmp    DWORD PTR [ecx+0x14],edx
   1477b:	je     0x147b6
   1477d:	cmp    esi,DWORD PTR [eax+0x8]
   14780:	jne    0x1478c
   14782:	mov    esi,eax
   14784:	push   esi
   14785:	mov    ecx,edi
   14787:	call   0x12d42
   1478c:	mov    eax,DWORD PTR [esi+0x4]
   1478f:	mov    DWORD PTR [eax+0x14],0x1
   14796:	mov    eax,DWORD PTR [esi+0x4]
   14799:	mov    eax,DWORD PTR [eax+0x4]
   1479c:	and    DWORD PTR [eax+0x14],0x0
   147a0:	mov    eax,DWORD PTR [esi+0x4]
   147a3:	push   DWORD PTR [eax+0x4]
   147a6:	mov    ecx,edi
   147a8:	call   0x12d90
   147ad:	jmp    0x14802
   147af:	mov    ecx,DWORD PTR [ecx]
   147b1:	cmp    DWORD PTR [ecx+0x14],edx
   147b4:	jne    0x147d3
   147b6:	mov    edx,eax
   147b8:	xor    eax,eax
   147ba:	inc    eax
   147bb:	mov    DWORD PTR [edx+0x14],eax
   147be:	mov    DWORD PTR [ecx+0x14],eax
   147c1:	mov    eax,DWORD PTR [esi+0x4]
   147c4:	mov    eax,DWORD PTR [eax+0x4]
   147c7:	and    DWORD PTR [eax+0x14],0x0
   147cb:	mov    eax,DWORD PTR [esi+0x4]
   147ce:	mov    esi,DWORD PTR [eax+0x4]
   147d1:	jmp    0x14802
   147d3:	cmp    esi,DWORD PTR [eax]
   147d5:	jne    0x147e1
   147d7:	mov    esi,eax
   147d9:	push   esi
   147da:	mov    ecx,edi
   147dc:	call   0x12d90
   147e1:	mov    eax,DWORD PTR [esi+0x4]
   147e4:	mov    DWORD PTR [eax+0x14],0x1
   147eb:	mov    eax,DWORD PTR [esi+0x4]
   147ee:	mov    eax,DWORD PTR [eax+0x4]
   147f1:	and    DWORD PTR [eax+0x14],0x0
   147f5:	mov    eax,DWORD PTR [esi+0x4]
   147f8:	push   DWORD PTR [eax+0x4]
   147fb:	mov    ecx,edi
   147fd:	call   0x12d42
   14802:	mov    eax,DWORD PTR [edi+0x4]
   14805:	cmp    esi,DWORD PTR [eax+0x4]
   14808:	jne    0x14760
   1480e:	mov    eax,DWORD PTR [edi+0x4]
   14811:	mov    eax,DWORD PTR [eax+0x4]
   14814:	pop    edi
   14815:	mov    DWORD PTR [eax+0x14],0x1
   1481c:	mov    eax,DWORD PTR [ebp+0x8]
   1481f:	pop    esi
   14820:	mov    DWORD PTR [eax],ebx
   14822:	pop    ebx
   14823:	pop    ebp
   14824:	ret    0x10
   14827:	int3   
   14828:	int3   
   14829:	int3   
   1482a:	int3   
   1482b:	int3   
   1482c:	mov    edi,edi
   1482e:	push   ebp
   1482f:	mov    ebp,esp
   14831:	push   ecx
   14832:	push   ecx
   14833:	push   ebx
   14834:	push   esi
   14835:	mov    DWORD PTR [ebp-0x4],ecx
   14838:	push   edi
   14839:	mov    edi,DWORD PTR [ebp+0xc]
   1483c:	lea    ecx,[ebp+0xc]
   1483f:	call   0x11534
   14844:	mov    esi,DWORD PTR [edi]
   14846:	mov    eax,ds:0x78ac0
   1484b:	mov    ebx,edi
   1484d:	mov    DWORD PTR [ebp-0x8],esi
   14850:	cmp    esi,eax
   14852:	jne    0x14870
   14854:	mov    esi,DWORD PTR [edi+0x8]
   14857:	mov    eax,DWORD PTR [ebx+0x4]
   1485a:	mov    ecx,DWORD PTR [ebp-0x4]
   1485d:	mov    DWORD PTR [esi+0x4],eax
   14860:	mov    eax,DWORD PTR [ecx+0x4]
   14863:	cmp    DWORD PTR [eax+0x4],edi
   14866:	jne    0x148e5
   14868:	mov    DWORD PTR [eax+0x4],esi
   1486b:	jmp    0x148f3
   14870:	mov    ecx,DWORD PTR [edi+0x8]
   14873:	cmp    ecx,eax
   14875:	je     0x14857
   14877:	push   ecx
   14878:	call   0x1140e
   1487d:	mov    ebx,eax
   1487f:	mov    esi,DWORD PTR [ebx+0x8]
   14882:	cmp    ebx,edi
   14884:	je     0x14857
   14886:	mov    eax,DWORD PTR [ebp-0x8]
   14889:	mov    DWORD PTR [eax+0x4],ebx
   1488c:	mov    eax,DWORD PTR [edi]
   1488e:	mov    DWORD PTR [ebx],eax
   14890:	cmp    ebx,DWORD PTR [edi+0x8]
   14893:	jne    0x1489a
   14895:	mov    DWORD PTR [esi+0x4],ebx
   14898:	jmp    0x148b1
   1489a:	mov    eax,DWORD PTR [ebx+0x4]
   1489d:	mov    DWORD PTR [esi+0x4],eax
   148a0:	mov    eax,DWORD PTR [ebx+0x4]
   148a3:	mov    DWORD PTR [eax],esi
   148a5:	mov    eax,DWORD PTR [edi+0x8]
   148a8:	mov    DWORD PTR [ebx+0x8],eax
   148ab:	mov    eax,DWORD PTR [edi+0x8]
   148ae:	mov    DWORD PTR [eax+0x4],ebx
   148b1:	mov    eax,DWORD PTR [ebp-0x4]
   148b4:	mov    eax,DWORD PTR [eax+0x4]
   148b7:	cmp    DWORD PTR [eax+0x4],edi
   148ba:	jne    0x148c1
   148bc:	mov    DWORD PTR [eax+0x4],ebx
   148bf:	jmp    0x148cf
   148c1:	mov    eax,DWORD PTR [edi+0x4]
   148c4:	cmp    DWORD PTR [eax],edi
   148c6:	jne    0x148cc
   148c8:	mov    DWORD PTR [eax],ebx
   148ca:	jmp    0x148cf
   148cc:	mov    DWORD PTR [eax+0x8],ebx
   148cf:	mov    eax,DWORD PTR [edi+0x4]
   148d2:	mov    DWORD PTR [ebx+0x4],eax
   148d5:	mov    eax,DWORD PTR [ebx+0x1c]
   148d8:	mov    ecx,DWORD PTR [edi+0x1c]
   148db:	mov    DWORD PTR [ebx+0x1c],ecx
   148de:	mov    DWORD PTR [edi+0x1c],eax
   148e1:	mov    ebx,edi
   148e3:	jmp    0x14946
   148e5:	mov    eax,DWORD PTR [edi+0x4]
   148e8:	cmp    DWORD PTR [eax],edi
   148ea:	jne    0x148f0
   148ec:	mov    DWORD PTR [eax],esi
   148ee:	jmp    0x148f3
   148f0:	mov    DWORD PTR [eax+0x8],esi
   148f3:	mov    eax,DWORD PTR [ecx+0x4]
   148f6:	mov    DWORD PTR [ebp-0x8],eax
   148f9:	cmp    DWORD PTR [eax],edi
   148fb:	jne    0x1491d
   148fd:	mov    edx,DWORD PTR [edi+0x8]
   14900:	cmp    edx,DWORD PTR ds:0x78ac0
   14906:	jne    0x1490f
   14908:	mov    edx,DWORD PTR [edi+0x4]
   1490b:	mov    DWORD PTR [eax],edx
   1490d:	jmp    0x1491d
   1490f:	push   esi
   14910:	call   0x1140e
   14915:	mov    ecx,DWORD PTR [ebp-0x8]
   14918:	mov    DWORD PTR [ecx],eax
   1491a:	mov    ecx,DWORD PTR [ebp-0x4]
   1491d:	mov    eax,DWORD PTR [ecx+0x4]
   14920:	mov    DWORD PTR [ebp-0x8],eax
   14923:	cmp    DWORD PTR [eax+0x8],edi
   14926:	jne    0x14946
   14928:	mov    ecx,DWORD PTR [edi]
   1492a:	cmp    ecx,DWORD PTR ds:0x78ac0
   14930:	jne    0x1493a
   14932:	mov    ecx,DWORD PTR [edi+0x4]
   14935:	mov    DWORD PTR [eax+0x8],ecx
   14938:	jmp    0x14946
   1493a:	push   esi
   1493b:	call   0x113ec
   14940:	mov    ecx,DWORD PTR [ebp-0x8]
   14943:	mov    DWORD PTR [ecx+0x8],eax
   14946:	xor    edi,edi
   14948:	inc    edi
   14949:	cmp    DWORD PTR [ebx+0x1c],edi
   1494c:	jne    0x14a63
   14952:	jmp    0x14a11
   14957:	cmp    DWORD PTR [esi+0x1c],edi
   1495a:	jne    0x14a60
   14960:	mov    eax,DWORD PTR [esi+0x4]
   14963:	cmp    esi,DWORD PTR [eax]
   14965:	jne    0x149dc
   14967:	mov    eax,DWORD PTR [eax+0x8]
   1496a:	cmp    DWORD PTR [eax+0x1c],0x0
   1496e:	jne    0x14988
   14970:	mov    DWORD PTR [eax+0x1c],edi
   14973:	mov    eax,DWORD PTR [esi+0x4]
   14976:	and    DWORD PTR [eax+0x1c],0x0
   1497a:	push   DWORD PTR [esi+0x4]
   1497d:	call   0x13138
   14982:	mov    eax,DWORD PTR [esi+0x4]
   14985:	mov    eax,DWORD PTR [eax+0x8]
   14988:	mov    ecx,DWORD PTR [eax]
   1498a:	cmp    DWORD PTR [ecx+0x1c],edi
   1498d:	jne    0x14997
   1498f:	mov    ecx,DWORD PTR [eax+0x8]
   14992:	cmp    DWORD PTR [ecx+0x1c],edi
   14995:	je     0x14a0a
   14997:	mov    ecx,DWORD PTR [eax+0x8]
   1499a:	cmp    DWORD PTR [ecx+0x1c],edi
   1499d:	jne    0x149b7
   1499f:	mov    ecx,DWORD PTR [eax]
   149a1:	mov    DWORD PTR [ecx+0x1c],edi
   149a4:	mov    ecx,DWORD PTR [ebp-0x4]
   149a7:	and    DWORD PTR [eax+0x1c],0x0
   149ab:	push   eax
   149ac:	call   0x13186
   149b1:	mov    eax,DWORD PTR [esi+0x4]
   149b4:	mov    eax,DWORD PTR [eax+0x8]
   149b7:	mov    ecx,DWORD PTR [esi+0x4]
   149ba:	mov    ecx,DWORD PTR [ecx+0x1c]
   149bd:	mov    DWORD PTR [eax+0x1c],ecx
   149c0:	mov    ecx,DWORD PTR [esi+0x4]
   149c3:	mov    DWORD PTR [ecx+0x1c],edi
   149c6:	mov    eax,DWORD PTR [eax+0x8]
   149c9:	mov    ecx,DWORD PTR [ebp-0x4]
   149cc:	mov    DWORD PTR [eax+0x1c],edi
   149cf:	push   DWORD PTR [esi+0x4]
   149d2:	call   0x13138
   149d7:	jmp    0x14a60
   149dc:	mov    eax,DWORD PTR [eax]
   149de:	cmp    DWORD PTR [eax+0x1c],0x0
   149e2:	jne    0x149fb
   149e4:	mov    DWORD PTR [eax+0x1c],edi
   149e7:	mov    eax,DWORD PTR [esi+0x4]
   149ea:	and    DWORD PTR [eax+0x1c],0x0
   149ee:	push   DWORD PTR [esi+0x4]
   149f1:	call   0x13186
   149f6:	mov    eax,DWORD PTR [esi+0x4]
   149f9:	mov    eax,DWORD PTR [eax]
   149fb:	mov    ecx,DWORD PTR [eax+0x8]
   149fe:	cmp    DWORD PTR [ecx+0x1c],edi
   14a01:	jne    0x14a22
   14a03:	mov    ecx,DWORD PTR [eax]
   14a05:	cmp    DWORD PTR [ecx+0x1c],edi
   14a08:	jne    0x14a22
   14a0a:	and    DWORD PTR [eax+0x1c],0x0
   14a0e:	mov    esi,DWORD PTR [esi+0x4]
   14a11:	mov    ecx,DWORD PTR [ebp-0x4]
   14a14:	mov    eax,DWORD PTR [ecx+0x4]
   14a17:	cmp    esi,DWORD PTR [eax+0x4]
   14a1a:	jne    0x14957
   14a20:	jmp    0x14a60
   14a22:	mov    ecx,DWORD PTR [eax]
   14a24:	cmp    DWORD PTR [ecx+0x1c],edi
   14a27:	jne    0x14a41
   14a29:	mov    ecx,DWORD PTR [eax+0x8]
   14a2c:	mov    DWORD PTR [ecx+0x1c],edi
   14a2f:	mov    ecx,DWORD PTR [ebp-0x4]
   14a32:	and    DWORD PTR [eax+0x1c],0x0
   14a36:	push   eax
   14a37:	call   0x13138
   14a3c:	mov    eax,DWORD PTR [esi+0x4]
   14a3f:	mov    eax,DWORD PTR [eax]
   14a41:	mov    ecx,DWORD PTR [esi+0x4]
   14a44:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a47:	mov    DWORD PTR [eax+0x1c],ecx
   14a4a:	mov    ecx,DWORD PTR [esi+0x4]
   14a4d:	mov    DWORD PTR [ecx+0x1c],edi
   14a50:	mov    eax,DWORD PTR [eax]
   14a52:	mov    ecx,DWORD PTR [ebp-0x4]
   14a55:	mov    DWORD PTR [eax+0x1c],edi
   14a58:	push   DWORD PTR [esi+0x4]
   14a5b:	call   0x13186
   14a60:	mov    DWORD PTR [esi+0x1c],edi
   14a63:	lea    eax,[ebx+0xc]
   14a66:	push   eax
   14a67:	call   0x1347a
   14a6c:	push   ebx
   14a6d:	call   0x1d9fc
   14a72:	mov    eax,DWORD PTR [ebp-0x4]
   14a75:	dec    DWORD PTR [eax+0xc]
   14a78:	mov    eax,DWORD PTR [ebp+0x8]
   14a7b:	pop    ecx
   14a7c:	mov    ecx,DWORD PTR [ebp+0xc]
   14a7f:	pop    edi
   14a80:	pop    esi
   14a81:	mov    DWORD PTR [eax],ecx
   14a83:	pop    ebx
   14a84:	leave  
   14a85:	ret    0x8
   14a88:	int3   
   14a89:	int3   
   14a8a:	int3   
   14a8b:	int3   
   14a8c:	int3   
   14a8d:	int3   
   14a8e:	mov    edi,edi
   14a90:	push   ebp
   14a91:	mov    ebp,esp
   14a93:	push   ebx
   14a94:	push   esi
   14a95:	push   edi
   14a96:	mov    edi,DWORD PTR [ebp+0x8]
   14a99:	mov    ebx,ecx
   14a9b:	mov    esi,edi
   14a9d:	cmp    edi,DWORD PTR ds:0x78ac0
   14aa3:	je     0x14acb
   14aa5:	push   DWORD PTR [esi+0x8]
   14aa8:	mov    ecx,ebx
   14aaa:	call   0x14a8e
   14aaf:	mov    esi,DWORD PTR [esi]
   14ab1:	lea    eax,[edi+0xc]
   14ab4:	push   eax
   14ab5:	call   0x1347a
   14aba:	push   edi
   14abb:	call   0x1d9fc
   14ac0:	pop    ecx
   14ac1:	mov    edi,esi
   14ac3:	cmp    esi,DWORD PTR ds:0x78ac0
   14ac9:	jne    0x14aa5
   14acb:	pop    edi
   14acc:	pop    esi
   14acd:	pop    ebx
   14ace:	pop    ebp
   14acf:	ret    0x4
   14ad2:	int3   
   14ad3:	int3   
   14ad4:	int3   
   14ad5:	int3   
   14ad6:	int3   
   14ad7:	int3   
   14ad8:	mov    edi,edi
   14ada:	push   esi
   14adb:	push   edi
   14adc:	push   0x1
   14ade:	xor    edi,edi
   14ae0:	push   edi
   14ae1:	mov    esi,ecx
   14ae3:	call   0x139f0
   14ae8:	cmp    DWORD PTR ds:0x78ac8,edi
   14aee:	jne    0x14b05
   14af0:	mov    ecx,eax
   14af2:	mov    DWORD PTR ds:0x78ac8,ecx
   14af8:	mov    DWORD PTR [ecx],edi
   14afa:	mov    ecx,DWORD PTR ds:0x78ac8
   14b00:	xor    eax,eax
   14b02:	mov    DWORD PTR [ecx+0x8],edi
   14b05:	inc    DWORD PTR ds:0x78c20
   14b0b:	cmp    eax,edi
   14b0d:	je     0x14b16
   14b0f:	push   eax
   14b10:	call   0x1d9fc
   14b15:	pop    ecx
   14b16:	push   edi
   14b17:	push   DWORD PTR ds:0x78ac8
   14b1d:	mov    ecx,esi
   14b1f:	call   0x139f0
   14b24:	mov    DWORD PTR [esi+0xc],edi
   14b27:	mov    DWORD PTR [esi+0x4],eax
   14b2a:	mov    DWORD PTR [eax],eax
   14b2c:	mov    esi,DWORD PTR [esi+0x4]
   14b2f:	pop    edi
   14b30:	mov    DWORD PTR [esi+0x8],esi
   14b33:	pop    esi
   14b34:	ret    
   14b35:	int3   
   14b36:	int3   
   14b37:	int3   
   14b38:	int3   
   14b39:	int3   
   14b3a:	mov    edi,edi
   14b3c:	push   ebp
   14b3d:	mov    ebp,esp
   14b3f:	push   ebx
   14b40:	mov    ebx,DWORD PTR [ebp+0x8]
   14b43:	mov    eax,DWORD PTR [ebx+0x4]
   14b46:	push   esi
   14b47:	push   edi
   14b48:	mov    esi,ecx
   14b4a:	mov    edi,DWORD PTR [esi+0x4]
   14b4d:	add    eax,0x4
   14b50:	push   edi
   14b51:	push   DWORD PTR [eax]
   14b53:	call   0x13b62
   14b58:	mov    DWORD PTR [edi+0x4],eax
   14b5b:	mov    eax,DWORD PTR [ebx+0xc]
   14b5e:	mov    edi,DWORD PTR [esi+0x4]
   14b61:	mov    DWORD PTR [esi+0xc],eax
   14b64:	mov    eax,DWORD PTR [edi+0x4]
   14b67:	cmp    eax,DWORD PTR ds:0x78ab4
   14b6d:	je     0x14b87
   14b6f:	push   eax
   14b70:	call   0x11210
   14b75:	mov    DWORD PTR [edi],eax
   14b77:	mov    esi,DWORD PTR [esi+0x4]
   14b7a:	push   DWORD PTR [esi+0x4]
   14b7d:	call   0x111ee
   14b82:	mov    DWORD PTR [esi+0x8],eax
   14b85:	jmp    0x14b8f
   14b87:	mov    DWORD PTR [edi],edi
   14b89:	mov    esi,DWORD PTR [esi+0x4]
   14b8c:	mov    DWORD PTR [esi+0x8],esi
   14b8f:	pop    edi
   14b90:	pop    esi
   14b91:	pop    ebx
   14b92:	pop    ebp
   14b93:	ret    0x4
   14b96:	int3   
   14b97:	int3   
   14b98:	int3   
   14b99:	int3   
   14b9a:	int3   
   14b9b:	int3   
   14b9c:	mov    edi,edi
   14b9e:	push   ebp
   14b9f:	mov    ebp,esp
   14ba1:	push   edi
   14ba2:	mov    edi,DWORD PTR [ebp+0xc]
   14ba5:	cmp    DWORD PTR [ebp+0x8],edi
   14ba8:	je     0x14bbe
   14baa:	push   esi
   14bab:	mov    esi,DWORD PTR [ebp+0x10]
   14bae:	inc    DWORD PTR [esi]
   14bb0:	lea    ecx,[ebp+0x8]
   14bb3:	call   0x13882
   14bb8:	cmp    DWORD PTR [ebp+0x8],edi
   14bbb:	jne    0x14bae
   14bbd:	pop    esi
   14bbe:	pop    edi
   14bbf:	pop    ebp
   14bc0:	ret    
   14bc1:	int3   
   14bc2:	int3   
   14bc3:	int3   
   14bc4:	int3   
   14bc5:	int3   
   14bc6:	mov    edi,edi
   14bc8:	push   ebp
   14bc9:	mov    ebp,esp
   14bcb:	push   DWORD PTR [ebp+0xc]
   14bce:	push   DWORD PTR [ebp+0x8]
   14bd1:	call   0x13c5c
   14bd6:	mov    eax,DWORD PTR [ebp+0x8]
   14bd9:	pop    ebp
   14bda:	ret    0x8
   14bdd:	int3   
   14bde:	int3   
   14bdf:	int3   
   14be0:	int3   
   14be1:	int3   
   14be2:	mov    edi,edi
   14be4:	push   ebp
   14be5:	mov    ebp,esp
   14be7:	push   ecx
   14be8:	push   esi
   14be9:	mov    esi,ecx
   14beb:	cmp    DWORD PTR [esi+0xc],0x0
   14bef:	mov    ecx,DWORD PTR [ebp+0xc]
   14bf2:	je     0x14c2c
   14bf4:	mov    eax,DWORD PTR [esi+0x4]
   14bf7:	cmp    ecx,DWORD PTR [eax]
   14bf9:	jne    0x14c2c
   14bfb:	cmp    DWORD PTR [ebp+0x10],eax
   14bfe:	jne    0x14c2c
   14c00:	push   DWORD PTR [eax+0x4]
   14c03:	mov    ecx,esi
   14c05:	call   0x138e0
   14c0a:	mov    ecx,DWORD PTR ds:0x78ab0
   14c10:	mov    eax,DWORD PTR [esi+0x4]
   14c13:	mov    DWORD PTR [eax+0x4],ecx
   14c16:	mov    eax,DWORD PTR [esi+0x4]
   14c19:	and    DWORD PTR [esi+0xc],0x0
   14c1d:	mov    DWORD PTR [eax],eax
   14c1f:	mov    eax,DWORD PTR [esi+0x4]
   14c22:	mov    DWORD PTR [eax+0x8],eax
   14c25:	mov    eax,DWORD PTR [esi+0x4]
   14c28:	mov    ecx,DWORD PTR [eax]
   14c2a:	jmp    0x14c51
   14c2c:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c2f:	je     0x14c51
   14c31:	push   edi
   14c32:	mov    edi,ecx
   14c34:	lea    ecx,[ebp+0xc]
   14c37:	call   0x112b6
   14c3c:	push   edi
   14c3d:	lea    eax,[ebp-0x4]
   14c40:	push   eax
   14c41:	mov    ecx,esi
   14c43:	call   0x13d4e
   14c48:	mov    ecx,DWORD PTR [ebp+0xc]
   14c4b:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c4e:	jne    0x14c32
   14c50:	pop    edi
   14c51:	mov    eax,DWORD PTR [ebp+0x8]
   14c54:	mov    DWORD PTR [eax],ecx
   14c56:	pop    esi
   14c57:	leave  
   14c58:	ret    0xc
   14c5b:	int3   
   14c5c:	int3   
   14c5d:	int3   
   14c5e:	int3   
   14c5f:	int3   
   14c60:	mov    edi,edi
   14c62:	push   ebp
   14c63:	mov    ebp,esp
   14c65:	push   ecx
   14c66:	push   ecx
   14c67:	push   esi
   14c68:	push   DWORD PTR [ebp+0x8]
   14c6b:	lea    eax,[ebp-0x8]
   14c6e:	push   eax
   14c6f:	mov    esi,ecx
   14c71:	call   0x13fa6
   14c76:	and    DWORD PTR [ebp+0x8],0x0
   14c7a:	lea    eax,[ebp+0x8]
   14c7d:	push   eax
   14c7e:	push   DWORD PTR [ebp-0x4]
   14c81:	push   DWORD PTR [ebp-0x8]
   14c84:	call   0x13a14
   14c89:	add    esp,0xc
   14c8c:	push   DWORD PTR [ebp-0x4]
   14c8f:	lea    eax,[ebp-0x4]
   14c92:	push   DWORD PTR [ebp-0x8]
   14c95:	mov    ecx,esi
   14c97:	push   eax
   14c98:	call   0x14be2
   14c9d:	mov    eax,DWORD PTR [ebp+0x8]
   14ca0:	pop    esi
   14ca1:	leave  
   14ca2:	ret    0x4
   14ca5:	int3   
   14ca6:	int3   
   14ca7:	int3   
   14ca8:	int3   
   14ca9:	int3   
   14caa:	mov    edi,edi
   14cac:	push   ebp
   14cad:	mov    ebp,esp
   14caf:	push   ecx
   14cb0:	push   ebx
   14cb1:	push   esi
   14cb2:	push   edi
   14cb3:	mov    edi,ecx
   14cb5:	mov    eax,DWORD PTR [edi+0x4]
   14cb8:	mov    esi,DWORD PTR [eax+0x4]
   14cbb:	mov    ebx,eax
   14cbd:	mov    eax,ds:0x78ab4
   14cc2:	mov    dl,0x1
   14cc4:	cmp    esi,eax
   14cc6:	je     0x14ce4
   14cc8:	mov    ecx,DWORD PTR [ebp+0xc]
   14ccb:	mov    ecx,DWORD PTR [ecx]
   14ccd:	cmp    ecx,DWORD PTR [esi+0xc]
   14cd0:	mov    ebx,esi
   14cd2:	setb   dl
   14cd5:	test   dl,dl
   14cd7:	je     0x14cdd
   14cd9:	mov    esi,DWORD PTR [esi]
   14cdb:	jmp    0x14ce0
   14cdd:	mov    esi,DWORD PTR [esi+0x8]
   14ce0:	cmp    esi,eax
   14ce2:	jne    0x14ccd
   14ce4:	cmp    BYTE PTR [edi+0x8],0x0
   14ce8:	je     0x14d05
   14cea:	push   DWORD PTR [ebp+0xc]
   14ced:	push   ebx
   14cee:	push   esi
   14cef:	lea    eax,[ebp+0xc]
   14cf2:	push   eax
   14cf3:	mov    ecx,edi
   14cf5:	call   0x1452a
   14cfa:	mov    ecx,DWORD PTR [eax]
   14cfc:	mov    eax,DWORD PTR [ebp+0x8]
   14cff:	mov    BYTE PTR [eax+0x4],0x1
   14d03:	jmp    0x14d34
   14d05:	mov    ecx,ebx
   14d07:	mov    DWORD PTR [ebp-0x4],ecx
   14d0a:	test   dl,dl
   14d0c:	je     0x14d20
   14d0e:	mov    eax,DWORD PTR [edi+0x4]
   14d11:	cmp    ebx,DWORD PTR [eax]
   14d13:	je     0x14cea
   14d15:	lea    ecx,[ebp-0x4]
   14d18:	call   0x12ece
   14d1d:	mov    ecx,DWORD PTR [ebp-0x4]
   14d20:	mov    edx,DWORD PTR [ecx+0xc]
   14d23:	mov    eax,DWORD PTR [ebp+0xc]
   14d26:	cmp    edx,DWORD PTR [eax]
   14d28:	jae    0x14d2d
   14d2a:	push   eax
   14d2b:	jmp    0x14ced
   14d2d:	mov    eax,DWORD PTR [ebp+0x8]
   14d30:	mov    BYTE PTR [eax+0x4],0x0
   14d34:	pop    edi
   14d35:	pop    esi
   14d36:	mov    DWORD PTR [eax],ecx
   14d38:	pop    ebx
   14d39:	leave  
   14d3a:	ret    0x8
   14d3d:	int3   
   14d3e:	int3   
   14d3f:	int3   
   14d40:	int3   
   14d41:	int3   
   14d42:	mov    edi,edi
   14d44:	push   ebp
   14d45:	mov    ebp,esp
   14d47:	push   ecx
   14d48:	push   esi
   14d49:	mov    esi,ecx
   14d4b:	cmp    DWORD PTR [esi+0xc],0x0
   14d4f:	mov    ecx,DWORD PTR [ebp+0xc]
   14d52:	je     0x14d8c
   14d54:	mov    eax,DWORD PTR [esi+0x4]
   14d57:	cmp    ecx,DWORD PTR [eax]
   14d59:	jne    0x14d8c
   14d5b:	cmp    DWORD PTR [ebp+0x10],eax
   14d5e:	jne    0x14d8c
   14d60:	push   DWORD PTR [eax+0x4]
   14d63:	mov    ecx,esi
   14d65:	call   0x13920
   14d6a:	mov    ecx,DWORD PTR ds:0x78ab4
   14d70:	mov    eax,DWORD PTR [esi+0x4]
   14d73:	mov    DWORD PTR [eax+0x4],ecx
   14d76:	mov    eax,DWORD PTR [esi+0x4]
   14d79:	and    DWORD PTR [esi+0xc],0x0
   14d7d:	mov    DWORD PTR [eax],eax
   14d7f:	mov    eax,DWORD PTR [esi+0x4]
   14d82:	mov    DWORD PTR [eax+0x8],eax
   14d85:	mov    eax,DWORD PTR [esi+0x4]
   14d88:	mov    ecx,DWORD PTR [eax]
   14d8a:	jmp    0x14db1
   14d8c:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d8f:	je     0x14db1
   14d91:	push   edi
   14d92:	mov    edi,ecx
   14d94:	lea    ecx,[ebp+0xc]
   14d97:	call   0x12f0e
   14d9c:	push   edi
   14d9d:	lea    eax,[ebp-0x4]
   14da0:	push   eax
   14da1:	mov    ecx,esi
   14da3:	call   0x1423e
   14da8:	mov    ecx,DWORD PTR [ebp+0xc]
   14dab:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dae:	jne    0x14d92
   14db0:	pop    edi
   14db1:	mov    eax,DWORD PTR [ebp+0x8]
   14db4:	mov    DWORD PTR [eax],ecx
   14db6:	pop    esi
   14db7:	leave  
   14db8:	ret    0xc
   14dbb:	int3   
   14dbc:	int3   
   14dbd:	int3   
   14dbe:	int3   
   14dbf:	int3   
   14dc0:	mov    edi,edi
   14dc2:	push   ebp
   14dc3:	mov    ebp,esp
   14dc5:	push   ecx
   14dc6:	push   ecx
   14dc7:	push   esi
   14dc8:	push   DWORD PTR [ebp+0x8]
   14dcb:	lea    eax,[ebp-0x8]
   14dce:	push   eax
   14dcf:	mov    esi,ecx
   14dd1:	call   0x14496
   14dd6:	and    DWORD PTR [ebp+0x8],0x0
   14dda:	lea    eax,[ebp+0x8]
   14ddd:	push   eax
   14dde:	push   DWORD PTR [ebp-0x4]
   14de1:	push   DWORD PTR [ebp-0x8]
   14de4:	call   0x13a7a
   14de9:	add    esp,0xc
   14dec:	push   DWORD PTR [ebp-0x4]
   14def:	lea    eax,[ebp-0x4]
   14df2:	push   DWORD PTR [ebp-0x8]
   14df5:	mov    ecx,esi
   14df7:	push   eax
   14df8:	call   0x14d42
   14dfd:	mov    eax,DWORD PTR [ebp+0x8]
   14e00:	pop    esi
   14e01:	leave  
   14e02:	ret    0x4
   14e05:	int3   
   14e06:	int3   
   14e07:	int3   
   14e08:	int3   
   14e09:	int3   
   14e0a:	mov    edi,edi
   14e0c:	push   ebp
   14e0d:	mov    ebp,esp
   14e0f:	push   ecx
   14e10:	push   ebx
   14e11:	push   esi
   14e12:	push   edi
   14e13:	mov    edi,ecx
   14e15:	mov    eax,DWORD PTR [edi+0x4]
   14e18:	mov    esi,DWORD PTR [eax+0x4]
   14e1b:	mov    ebx,eax
   14e1d:	mov    eax,ds:0x78ab0
   14e22:	mov    dl,0x1
   14e24:	cmp    esi,eax
   14e26:	je     0x14e44
   14e28:	mov    ecx,DWORD PTR [ebp+0xc]
   14e2b:	mov    ecx,DWORD PTR [ecx]
   14e2d:	cmp    ecx,DWORD PTR [esi+0xc]
   14e30:	mov    ebx,esi
   14e32:	setb   dl
   14e35:	test   dl,dl
   14e37:	je     0x14e3d
   14e39:	mov    esi,DWORD PTR [esi]
   14e3b:	jmp    0x14e40
   14e3d:	mov    esi,DWORD PTR [esi+0x8]
   14e40:	cmp    esi,eax
   14e42:	jne    0x14e2d
   14e44:	cmp    BYTE PTR [edi+0x8],0x0
   14e48:	je     0x14e65
   14e4a:	push   DWORD PTR [ebp+0xc]
   14e4d:	push   ebx
   14e4e:	push   esi
   14e4f:	lea    eax,[ebp+0xc]
   14e52:	push   eax
   14e53:	mov    ecx,edi
   14e55:	call   0x146dc
   14e5a:	mov    ecx,DWORD PTR [eax]
   14e5c:	mov    eax,DWORD PTR [ebp+0x8]
   14e5f:	mov    BYTE PTR [eax+0x4],0x1
   14e63:	jmp    0x14e94
   14e65:	mov    ecx,ebx
   14e67:	mov    DWORD PTR [ebp-0x4],ecx
   14e6a:	test   dl,dl
   14e6c:	je     0x14e80
   14e6e:	mov    eax,DWORD PTR [edi+0x4]
   14e71:	cmp    ebx,DWORD PTR [eax]
   14e73:	je     0x14e4a
   14e75:	lea    ecx,[ebp-0x4]
   14e78:	call   0x11276
   14e7d:	mov    ecx,DWORD PTR [ebp-0x4]
   14e80:	mov    edx,DWORD PTR [ecx+0xc]
   14e83:	mov    eax,DWORD PTR [ebp+0xc]
   14e86:	cmp    edx,DWORD PTR [eax]
   14e88:	jae    0x14e8d
   14e8a:	push   eax
   14e8b:	jmp    0x14e4d
   14e8d:	mov    eax,DWORD PTR [ebp+0x8]
   14e90:	mov    BYTE PTR [eax+0x4],0x0
   14e94:	pop    edi
   14e95:	pop    esi
   14e96:	mov    DWORD PTR [eax],ecx
   14e98:	pop    ebx
   14e99:	leave  
   14e9a:	ret    0x8
   14e9d:	int3   
   14e9e:	int3   
   14e9f:	int3   
   14ea0:	int3   
   14ea1:	int3   
   14ea2:	mov    edi,edi
   14ea4:	push   ebp
   14ea5:	mov    ebp,esp
   14ea7:	push   ecx
   14ea8:	push   esi
   14ea9:	mov    esi,ecx
   14eab:	cmp    DWORD PTR [esi+0xc],0x0
   14eaf:	mov    ecx,DWORD PTR [ebp+0xc]
   14eb2:	je     0x14eec
   14eb4:	mov    eax,DWORD PTR [esi+0x4]
   14eb7:	cmp    ecx,DWORD PTR [eax]
   14eb9:	jne    0x14eec
   14ebb:	cmp    DWORD PTR [ebp+0x10],eax
   14ebe:	jne    0x14eec
   14ec0:	push   DWORD PTR [eax+0x4]
   14ec3:	mov    ecx,esi
   14ec5:	call   0x14a8e
   14eca:	mov    ecx,DWORD PTR ds:0x78ac0
   14ed0:	mov    eax,DWORD PTR [esi+0x4]
   14ed3:	mov    DWORD PTR [eax+0x4],ecx
   14ed6:	mov    eax,DWORD PTR [esi+0x4]
   14ed9:	and    DWORD PTR [esi+0xc],0x0
   14edd:	mov    DWORD PTR [eax],eax
   14edf:	mov    eax,DWORD PTR [esi+0x4]
   14ee2:	mov    DWORD PTR [eax+0x8],eax
   14ee5:	mov    eax,DWORD PTR [esi+0x4]
   14ee8:	mov    ecx,DWORD PTR [eax]
   14eea:	jmp    0x14f11
   14eec:	cmp    ecx,DWORD PTR [ebp+0x10]
   14eef:	je     0x14f11
   14ef1:	push   edi
   14ef2:	mov    edi,ecx
   14ef4:	lea    ecx,[ebp+0xc]
   14ef7:	call   0x11534
   14efc:	push   edi
   14efd:	lea    eax,[ebp-0x4]
   14f00:	push   eax
   14f01:	mov    ecx,esi
   14f03:	call   0x1482c
   14f08:	mov    ecx,DWORD PTR [ebp+0xc]
   14f0b:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f0e:	jne    0x14ef2
   14f10:	pop    edi
   14f11:	mov    eax,DWORD PTR [ebp+0x8]
   14f14:	mov    DWORD PTR [eax],ecx
   14f16:	pop    esi
   14f17:	leave  
   14f18:	ret    0xc
   14f1b:	int3   
   14f1c:	int3   
   14f1d:	int3   
   14f1e:	int3   
   14f1f:	int3   
   14f20:	mov    edi,edi
   14f22:	push   ebp
   14f23:	mov    ebp,esp
   14f25:	push   ecx
   14f26:	push   ecx
   14f27:	push   ebx
   14f28:	push   esi
   14f29:	mov    DWORD PTR [ebp-0x4],ecx
   14f2c:	push   edi
   14f2d:	mov    edi,DWORD PTR [ebp+0xc]
   14f30:	lea    ecx,[ebp+0xc]
   14f33:	call   0x12e98
   14f38:	mov    esi,DWORD PTR [edi]
   14f3a:	mov    eax,ds:0x78ab8
   14f3f:	mov    ebx,edi
   14f41:	mov    DWORD PTR [ebp-0x8],esi
   14f44:	cmp    esi,eax
   14f46:	jne    0x14f64
   14f48:	mov    esi,DWORD PTR [edi+0x8]
   14f4b:	mov    eax,DWORD PTR [ebx+0x4]
   14f4e:	mov    ecx,DWORD PTR [ebp-0x4]
   14f51:	mov    DWORD PTR [esi+0x4],eax
   14f54:	mov    eax,DWORD PTR [ecx+0x4]
   14f57:	cmp    DWORD PTR [eax+0x4],edi
   14f5a:	jne    0x14fd9
   14f5c:	mov    DWORD PTR [eax+0x4],esi
   14f5f:	jmp    0x14fe7
   14f64:	mov    ecx,DWORD PTR [edi+0x8]
   14f67:	cmp    ecx,eax
   14f69:	je     0x14f4b
   14f6b:	push   ecx
   14f6c:	call   0x11254
   14f71:	mov    ebx,eax
   14f73:	mov    esi,DWORD PTR [ebx+0x8]
   14f76:	cmp    ebx,edi
   14f78:	je     0x14f4b
   14f7a:	mov    eax,DWORD PTR [ebp-0x8]
   14f7d:	mov    DWORD PTR [eax+0x4],ebx
   14f80:	mov    eax,DWORD PTR [edi]
   14f82:	mov    DWORD PTR [ebx],eax
   14f84:	cmp    ebx,DWORD PTR [edi+0x8]
   14f87:	jne    0x14f8e
   14f89:	mov    DWORD PTR [esi+0x4],ebx
   14f8c:	jmp    0x14fa5
   14f8e:	mov    eax,DWORD PTR [ebx+0x4]
   14f91:	mov    DWORD PTR [esi+0x4],eax
   14f94:	mov    eax,DWORD PTR [ebx+0x4]
   14f97:	mov    DWORD PTR [eax],esi
   14f99:	mov    eax,DWORD PTR [edi+0x8]
   14f9c:	mov    DWORD PTR [ebx+0x8],eax
   14f9f:	mov    eax,DWORD PTR [edi+0x8]
   14fa2:	mov    DWORD PTR [eax+0x4],ebx
   14fa5:	mov    eax,DWORD PTR [ebp-0x4]
   14fa8:	mov    eax,DWORD PTR [eax+0x4]
   14fab:	cmp    DWORD PTR [eax+0x4],edi
   14fae:	jne    0x14fb5
   14fb0:	mov    DWORD PTR [eax+0x4],ebx
   14fb3:	jmp    0x14fc3
   14fb5:	mov    eax,DWORD PTR [edi+0x4]
   14fb8:	cmp    DWORD PTR [eax],edi
   14fba:	jne    0x14fc0
   14fbc:	mov    DWORD PTR [eax],ebx
   14fbe:	jmp    0x14fc3
   14fc0:	mov    DWORD PTR [eax+0x8],ebx
   14fc3:	mov    eax,DWORD PTR [edi+0x4]
   14fc6:	mov    DWORD PTR [ebx+0x4],eax
   14fc9:	mov    eax,DWORD PTR [ebx+0x70]
   14fcc:	mov    ecx,DWORD PTR [edi+0x70]
   14fcf:	mov    DWORD PTR [ebx+0x70],ecx
   14fd2:	mov    DWORD PTR [edi+0x70],eax
   14fd5:	mov    ebx,edi
   14fd7:	jmp    0x1503a
   14fd9:	mov    eax,DWORD PTR [edi+0x4]
   14fdc:	cmp    DWORD PTR [eax],edi
   14fde:	jne    0x14fe4
   14fe0:	mov    DWORD PTR [eax],esi
   14fe2:	jmp    0x14fe7
   14fe4:	mov    DWORD PTR [eax+0x8],esi
   14fe7:	mov    eax,DWORD PTR [ecx+0x4]
   14fea:	mov    DWORD PTR [ebp-0x8],eax
   14fed:	cmp    DWORD PTR [eax],edi
   14fef:	jne    0x15011
   14ff1:	mov    edx,DWORD PTR [edi+0x8]
   14ff4:	cmp    edx,DWORD PTR ds:0x78ab8
   14ffa:	jne    0x15003
   14ffc:	mov    edx,DWORD PTR [edi+0x4]
   14fff:	mov    DWORD PTR [eax],edx
   15001:	jmp    0x15011
   15003:	push   esi
   15004:	call   0x11254
   15009:	mov    ecx,DWORD PTR [ebp-0x8]
   1500c:	mov    DWORD PTR [ecx],eax
   1500e:	mov    ecx,DWORD PTR [ebp-0x4]
   15011:	mov    eax,DWORD PTR [ecx+0x4]
   15014:	mov    DWORD PTR [ebp-0x8],eax
   15017:	cmp    DWORD PTR [eax+0x8],edi
   1501a:	jne    0x1503a
   1501c:	mov    ecx,DWORD PTR [edi]
   1501e:	cmp    ecx,DWORD PTR ds:0x78ab8
   15024:	jne    0x1502e
   15026:	mov    ecx,DWORD PTR [edi+0x4]
   15029:	mov    DWORD PTR [eax+0x8],ecx
   1502c:	jmp    0x1503a
   1502e:	push   esi
   1502f:	call   0x11232
   15034:	mov    ecx,DWORD PTR [ebp-0x8]
   15037:	mov    DWORD PTR [ecx+0x8],eax
   1503a:	xor    edi,edi
   1503c:	inc    edi
   1503d:	cmp    DWORD PTR [ebx+0x70],edi
   15040:	jne    0x15157
   15046:	jmp    0x15105
   1504b:	cmp    DWORD PTR [esi+0x70],edi
   1504e:	jne    0x15154
   15054:	mov    eax,DWORD PTR [esi+0x4]
   15057:	cmp    esi,DWORD PTR [eax]
   15059:	jne    0x150d0
   1505b:	mov    eax,DWORD PTR [eax+0x8]
   1505e:	cmp    DWORD PTR [eax+0x70],0x0
   15062:	jne    0x1507c
   15064:	mov    DWORD PTR [eax+0x70],edi
   15067:	mov    eax,DWORD PTR [esi+0x4]
   1506a:	and    DWORD PTR [eax+0x70],0x0
   1506e:	push   DWORD PTR [esi+0x4]
   15071:	call   0x13022
   15076:	mov    eax,DWORD PTR [esi+0x4]
   15079:	mov    eax,DWORD PTR [eax+0x8]
   1507c:	mov    ecx,DWORD PTR [eax]
   1507e:	cmp    DWORD PTR [ecx+0x70],edi
   15081:	jne    0x1508b
   15083:	mov    ecx,DWORD PTR [eax+0x8]
   15086:	cmp    DWORD PTR [ecx+0x70],edi
   15089:	je     0x150fe
   1508b:	mov    ecx,DWORD PTR [eax+0x8]
   1508e:	cmp    DWORD PTR [ecx+0x70],edi
   15091:	jne    0x150ab
   15093:	mov    ecx,DWORD PTR [eax]
   15095:	mov    DWORD PTR [ecx+0x70],edi
   15098:	mov    ecx,DWORD PTR [ebp-0x4]
   1509b:	and    DWORD PTR [eax+0x70],0x0
   1509f:	push   eax
   150a0:	call   0x13070
   150a5:	mov    eax,DWORD PTR [esi+0x4]
   150a8:	mov    eax,DWORD PTR [eax+0x8]
   150ab:	mov    ecx,DWORD PTR [esi+0x4]
   150ae:	mov    ecx,DWORD PTR [ecx+0x70]
   150b1:	mov    DWORD PTR [eax+0x70],ecx
   150b4:	mov    ecx,DWORD PTR [esi+0x4]
   150b7:	mov    DWORD PTR [ecx+0x70],edi
   150ba:	mov    eax,DWORD PTR [eax+0x8]
   150bd:	mov    ecx,DWORD PTR [ebp-0x4]
   150c0:	mov    DWORD PTR [eax+0x70],edi
   150c3:	push   DWORD PTR [esi+0x4]
   150c6:	call   0x13022
   150cb:	jmp    0x15154
   150d0:	mov    eax,DWORD PTR [eax]
   150d2:	cmp    DWORD PTR [eax+0x70],0x0
   150d6:	jne    0x150ef
   150d8:	mov    DWORD PTR [eax+0x70],edi
   150db:	mov    eax,DWORD PTR [esi+0x4]
   150de:	and    DWORD PTR [eax+0x70],0x0
   150e2:	push   DWORD PTR [esi+0x4]
   150e5:	call   0x13070
   150ea:	mov    eax,DWORD PTR [esi+0x4]
   150ed:	mov    eax,DWORD PTR [eax]
   150ef:	mov    ecx,DWORD PTR [eax+0x8]
   150f2:	cmp    DWORD PTR [ecx+0x70],edi
   150f5:	jne    0x15116
   150f7:	mov    ecx,DWORD PTR [eax]
   150f9:	cmp    DWORD PTR [ecx+0x70],edi
   150fc:	jne    0x15116
   150fe:	and    DWORD PTR [eax+0x70],0x0
   15102:	mov    esi,DWORD PTR [esi+0x4]
   15105:	mov    ecx,DWORD PTR [ebp-0x4]
   15108:	mov    eax,DWORD PTR [ecx+0x4]
   1510b:	cmp    esi,DWORD PTR [eax+0x4]
   1510e:	jne    0x1504b
   15114:	jmp    0x15154
   15116:	mov    ecx,DWORD PTR [eax]
   15118:	cmp    DWORD PTR [ecx+0x70],edi
   1511b:	jne    0x15135
   1511d:	mov    ecx,DWORD PTR [eax+0x8]
   15120:	mov    DWORD PTR [ecx+0x70],edi
   15123:	mov    ecx,DWORD PTR [ebp-0x4]
   15126:	and    DWORD PTR [eax+0x70],0x0
   1512a:	push   eax
   1512b:	call   0x13022
   15130:	mov    eax,DWORD PTR [esi+0x4]
   15133:	mov    eax,DWORD PTR [eax]
   15135:	mov    ecx,DWORD PTR [esi+0x4]
   15138:	mov    ecx,DWORD PTR [ecx+0x70]
   1513b:	mov    DWORD PTR [eax+0x70],ecx
   1513e:	mov    ecx,DWORD PTR [esi+0x4]
   15141:	mov    DWORD PTR [ecx+0x70],edi
   15144:	mov    eax,DWORD PTR [eax]
   15146:	mov    ecx,DWORD PTR [ebp-0x4]
   15149:	mov    DWORD PTR [eax+0x70],edi
   1514c:	push   DWORD PTR [esi+0x4]
   1514f:	call   0x13070
   15154:	mov    DWORD PTR [esi+0x70],edi
   15157:	lea    eax,[ebx+0x10]
   1515a:	push   eax
   1515b:	call   0x13ad8
   15160:	push   ebx
   15161:	call   0x1d9fc
   15166:	mov    eax,DWORD PTR [ebp-0x4]
   15169:	dec    DWORD PTR [eax+0xc]
   1516c:	mov    eax,DWORD PTR [ebp+0x8]
   1516f:	pop    ecx
   15170:	mov    ecx,DWORD PTR [ebp+0xc]
   15173:	pop    edi
   15174:	pop    esi
   15175:	mov    DWORD PTR [eax],ecx
   15177:	pop    ebx
   15178:	leave  
   15179:	ret    0x8
   1517c:	int3   
   1517d:	int3   
   1517e:	int3   
   1517f:	int3   
   15180:	int3   
   15181:	int3   
   15182:	mov    edi,edi
   15184:	push   ebp
   15185:	mov    ebp,esp
   15187:	push   ebx
   15188:	push   esi
   15189:	push   edi
   1518a:	mov    edi,DWORD PTR [ebp+0x8]
   1518d:	mov    ebx,ecx
   1518f:	mov    esi,edi
   15191:	cmp    edi,DWORD PTR ds:0x78ab8
   15197:	je     0x151bf
   15199:	push   DWORD PTR [esi+0x8]
   1519c:	mov    ecx,ebx
   1519e:	call   0x15182
   151a3:	mov    esi,DWORD PTR [esi]
   151a5:	lea    eax,[edi+0x10]
   151a8:	push   eax
   151a9:	call   0x13ad8
   151ae:	push   edi
   151af:	call   0x1d9fc
   151b4:	pop    ecx
   151b5:	mov    edi,esi
   151b7:	cmp    esi,DWORD PTR ds:0x78ab8
   151bd:	jne    0x15199
   151bf:	pop    edi
   151c0:	pop    esi
   151c1:	pop    ebx
   151c2:	pop    ebp
   151c3:	ret    0x4
   151c6:	int3   
   151c7:	int3   
   151c8:	int3   
   151c9:	int3   
   151ca:	int3   
   151cb:	int3   
   151cc:	mov    edi,edi
   151ce:	push   ebp
   151cf:	mov    ebp,esp
   151d1:	push   ebx
   151d2:	push   esi
   151d3:	mov    esi,DWORD PTR [ebp+0x10]
   151d6:	push   edi
   151d7:	push   0x0
   151d9:	push   esi
   151da:	mov    edi,ecx
   151dc:	call   0x139f0
   151e1:	push   DWORD PTR [ebp+0x14]
   151e4:	mov    ebx,eax
   151e6:	mov    eax,ds:0x78ab8
   151eb:	mov    DWORD PTR [ebx],eax
   151ed:	mov    eax,ds:0x78ab8
   151f2:	mov    DWORD PTR [ebx+0x8],eax
   151f5:	lea    eax,[ebx+0x10]
   151f8:	push   eax
   151f9:	call   0x13a9c
   151fe:	inc    DWORD PTR [edi+0xc]
   15201:	cmp    esi,DWORD PTR [edi+0x4]
   15204:	je     0x1522e
   15206:	mov    eax,DWORD PTR [ebp+0xc]
   15209:	cmp    eax,DWORD PTR ds:0x78ab8
   1520f:	jne    0x1522e
   15211:	lea    eax,[esi+0x10]
   15214:	push   eax
   15215:	push   DWORD PTR [ebp+0x14]
   15218:	call   0x197b8
   1521d:	test   al,al
   1521f:	jne    0x1522e
   15221:	mov    DWORD PTR [esi+0x8],ebx
   15224:	mov    eax,DWORD PTR [edi+0x4]
   15227:	cmp    esi,DWORD PTR [eax+0x8]
   1522a:	jne    0x15248
   1522c:	jmp    0x1523d
   1522e:	mov    DWORD PTR [esi],ebx
   15230:	mov    eax,DWORD PTR [edi+0x4]
   15233:	cmp    esi,eax
   15235:	jne    0x15242
   15237:	mov    DWORD PTR [eax+0x4],ebx
   1523a:	mov    eax,DWORD PTR [edi+0x4]
   1523d:	mov    DWORD PTR [eax+0x8],ebx
   15240:	jmp    0x15248
   15242:	cmp    esi,DWORD PTR [eax]
   15244:	jne    0x15248
   15246:	mov    DWORD PTR [eax],ebx
   15248:	mov    eax,DWORD PTR [edi+0x4]
   1524b:	mov    esi,ebx
   1524d:	cmp    ebx,DWORD PTR [eax+0x4]
   15250:	je     0x15304
   15256:	mov    eax,DWORD PTR [esi+0x4]
   15259:	xor    edx,edx
   1525b:	cmp    DWORD PTR [eax+0x70],edx
   1525e:	jne    0x15304
   15264:	mov    ecx,DWORD PTR [eax+0x4]
   15267:	cmp    eax,DWORD PTR [ecx]
   15269:	jne    0x152a5
   1526b:	mov    ecx,DWORD PTR [ecx+0x8]
   1526e:	cmp    DWORD PTR [ecx+0x70],edx
   15271:	je     0x152ac
   15273:	cmp    esi,DWORD PTR [eax+0x8]
   15276:	jne    0x15282
   15278:	mov    esi,eax
   1527a:	push   esi
   1527b:	mov    ecx,edi
   1527d:	call   0x13022
   15282:	mov    eax,DWORD PTR [esi+0x4]
   15285:	mov    DWORD PTR [eax+0x70],0x1
   1528c:	mov    eax,DWORD PTR [esi+0x4]
   1528f:	mov    eax,DWORD PTR [eax+0x4]
   15292:	and    DWORD PTR [eax+0x70],0x0
   15296:	mov    eax,DWORD PTR [esi+0x4]
   15299:	push   DWORD PTR [eax+0x4]
   1529c:	mov    ecx,edi
   1529e:	call   0x13070
   152a3:	jmp    0x152f8
   152a5:	mov    ecx,DWORD PTR [ecx]
   152a7:	cmp    DWORD PTR [ecx+0x70],edx
   152aa:	jne    0x152c9
   152ac:	mov    edx,eax
   152ae:	xor    eax,eax
   152b0:	inc    eax
   152b1:	mov    DWORD PTR [edx+0x70],eax
   152b4:	mov    DWORD PTR [ecx+0x70],eax
   152b7:	mov    eax,DWORD PTR [esi+0x4]
   152ba:	mov    eax,DWORD PTR [eax+0x4]
   152bd:	and    DWORD PTR [eax+0x70],0x0
   152c1:	mov    eax,DWORD PTR [esi+0x4]
   152c4:	mov    esi,DWORD PTR [eax+0x4]
   152c7:	jmp    0x152f8
   152c9:	cmp    esi,DWORD PTR [eax]
   152cb:	jne    0x152d7
   152cd:	mov    esi,eax
   152cf:	push   esi
   152d0:	mov    ecx,edi
   152d2:	call   0x13070
   152d7:	mov    eax,DWORD PTR [esi+0x4]
   152da:	mov    DWORD PTR [eax+0x70],0x1
   152e1:	mov    eax,DWORD PTR [esi+0x4]
   152e4:	mov    eax,DWORD PTR [eax+0x4]
   152e7:	and    DWORD PTR [eax+0x70],0x0
   152eb:	mov    eax,DWORD PTR [esi+0x4]
   152ee:	push   DWORD PTR [eax+0x4]
   152f1:	mov    ecx,edi
   152f3:	call   0x13022
   152f8:	mov    eax,DWORD PTR [edi+0x4]
   152fb:	cmp    esi,DWORD PTR [eax+0x4]
   152fe:	jne    0x15256
   15304:	mov    eax,DWORD PTR [edi+0x4]
   15307:	mov    eax,DWORD PTR [eax+0x4]
   1530a:	pop    edi
   1530b:	mov    DWORD PTR [eax+0x70],0x1
   15312:	mov    eax,DWORD PTR [ebp+0x8]
   15315:	pop    esi
   15316:	mov    DWORD PTR [eax],ebx
   15318:	pop    ebx
   15319:	pop    ebp
   1531a:	ret    0x10
   1531d:	int3   
   1531e:	int3   
   1531f:	int3   
   15320:	int3   
   15321:	int3   
   15322:	mov    edi,edi
   15324:	push   ebp
   15325:	mov    ebp,esp
   15327:	push   ecx
   15328:	push   ecx
   15329:	push   ebx
   1532a:	push   esi
   1532b:	mov    DWORD PTR [ebp-0x4],ecx
   1532e:	push   edi
   1532f:	mov    edi,DWORD PTR [ebp+0xc]
   15332:	lea    ecx,[ebp+0xc]
   15335:	call   0x13882
   1533a:	mov    esi,DWORD PTR [edi]
   1533c:	mov    eax,ds:0x78abc
   15341:	mov    ebx,edi
   15343:	mov    DWORD PTR [ebp-0x8],esi
   15346:	cmp    esi,eax
   15348:	jne    0x15366
   1534a:	mov    esi,DWORD PTR [edi+0x8]
   1534d:	mov    eax,DWORD PTR [ebx+0x4]
   15350:	mov    ecx,DWORD PTR [ebp-0x4]
   15353:	mov    DWORD PTR [esi+0x4],eax
   15356:	mov    eax,DWORD PTR [ecx+0x4]
   15359:	cmp    DWORD PTR [eax+0x4],edi
   1535c:	jne    0x153db
   1535e:	mov    DWORD PTR [eax+0x4],esi
   15361:	jmp    0x153e9
   15366:	mov    ecx,DWORD PTR [edi+0x8]
   15369:	cmp    ecx,eax
   1536b:	je     0x1534d
   1536d:	push   ecx
   1536e:	call   0x12cc0
   15373:	mov    ebx,eax
   15375:	mov    esi,DWORD PTR [ebx+0x8]
   15378:	cmp    ebx,edi
   1537a:	je     0x1534d
   1537c:	mov    eax,DWORD PTR [ebp-0x8]
   1537f:	mov    DWORD PTR [eax+0x4],ebx
   15382:	mov    eax,DWORD PTR [edi]
   15384:	mov    DWORD PTR [ebx],eax
   15386:	cmp    ebx,DWORD PTR [edi+0x8]
   15389:	jne    0x15390
   1538b:	mov    DWORD PTR [esi+0x4],ebx
   1538e:	jmp    0x153a7
   15390:	mov    eax,DWORD PTR [ebx+0x4]
   15393:	mov    DWORD PTR [esi+0x4],eax
   15396:	mov    eax,DWORD PTR [ebx+0x4]
   15399:	mov    DWORD PTR [eax],esi
   1539b:	mov    eax,DWORD PTR [edi+0x8]
   1539e:	mov    DWORD PTR [ebx+0x8],eax
   153a1:	mov    eax,DWORD PTR [edi+0x8]
   153a4:	mov    DWORD PTR [eax+0x4],ebx
   153a7:	mov    eax,DWORD PTR [ebp-0x4]
   153aa:	mov    eax,DWORD PTR [eax+0x4]
   153ad:	cmp    DWORD PTR [eax+0x4],edi
   153b0:	jne    0x153b7
   153b2:	mov    DWORD PTR [eax+0x4],ebx
   153b5:	jmp    0x153c5
   153b7:	mov    eax,DWORD PTR [edi+0x4]
   153ba:	cmp    DWORD PTR [eax],edi
   153bc:	jne    0x153c2
   153be:	mov    DWORD PTR [eax],ebx
   153c0:	jmp    0x153c5
   153c2:	mov    DWORD PTR [eax+0x8],ebx
   153c5:	mov    eax,DWORD PTR [edi+0x4]
   153c8:	mov    DWORD PTR [ebx+0x4],eax
   153cb:	mov    eax,DWORD PTR [ebx+0x68]
   153ce:	mov    ecx,DWORD PTR [edi+0x68]
   153d1:	mov    DWORD PTR [ebx+0x68],ecx
   153d4:	mov    DWORD PTR [edi+0x68],eax
   153d7:	mov    ebx,edi
   153d9:	jmp    0x1543c
   153db:	mov    eax,DWORD PTR [edi+0x4]
   153de:	cmp    DWORD PTR [eax],edi
   153e0:	jne    0x153e6
   153e2:	mov    DWORD PTR [eax],esi
   153e4:	jmp    0x153e9
   153e6:	mov    DWORD PTR [eax+0x8],esi
   153e9:	mov    eax,DWORD PTR [ecx+0x4]
   153ec:	mov    DWORD PTR [ebp-0x8],eax
   153ef:	cmp    DWORD PTR [eax],edi
   153f1:	jne    0x15413
   153f3:	mov    edx,DWORD PTR [edi+0x8]
   153f6:	cmp    edx,DWORD PTR ds:0x78abc
   153fc:	jne    0x15405
   153fe:	mov    edx,DWORD PTR [edi+0x4]
   15401:	mov    DWORD PTR [eax],edx
   15403:	jmp    0x15413
   15405:	push   esi
   15406:	call   0x12cc0
   1540b:	mov    ecx,DWORD PTR [ebp-0x8]
   1540e:	mov    DWORD PTR [ecx],eax
   15410:	mov    ecx,DWORD PTR [ebp-0x4]
   15413:	mov    eax,DWORD PTR [ecx+0x4]
   15416:	mov    DWORD PTR [ebp-0x8],eax
   15419:	cmp    DWORD PTR [eax+0x8],edi
   1541c:	jne    0x1543c
   1541e:	mov    ecx,DWORD PTR [edi]
   15420:	cmp    ecx,DWORD PTR ds:0x78abc
   15426:	jne    0x15430
   15428:	mov    ecx,DWORD PTR [edi+0x4]
   1542b:	mov    DWORD PTR [eax+0x8],ecx
   1542e:	jmp    0x1543c
   15430:	push   esi
   15431:	call   0x1133a
   15436:	mov    ecx,DWORD PTR [ebp-0x8]
   15439:	mov    DWORD PTR [ecx+0x8],eax
   1543c:	xor    edi,edi
   1543e:	inc    edi
   1543f:	cmp    DWORD PTR [ebx+0x68],edi
   15442:	jne    0x15559
   15448:	jmp    0x15507
   1544d:	cmp    DWORD PTR [esi+0x68],edi
   15450:	jne    0x15556
   15456:	mov    eax,DWORD PTR [esi+0x4]
   15459:	cmp    esi,DWORD PTR [eax]
   1545b:	jne    0x154d2
   1545d:	mov    eax,DWORD PTR [eax+0x8]
   15460:	cmp    DWORD PTR [eax+0x68],0x0
   15464:	jne    0x1547e
   15466:	mov    DWORD PTR [eax+0x68],edi
   15469:	mov    eax,DWORD PTR [esi+0x4]
   1546c:	and    DWORD PTR [eax+0x68],0x0
   15470:	push   DWORD PTR [esi+0x4]
   15473:	call   0x112ec
   15478:	mov    eax,DWORD PTR [esi+0x4]
   1547b:	mov    eax,DWORD PTR [eax+0x8]
   1547e:	mov    ecx,DWORD PTR [eax]
   15480:	cmp    DWORD PTR [ecx+0x68],edi
   15483:	jne    0x1548d
   15485:	mov    ecx,DWORD PTR [eax+0x8]
   15488:	cmp    DWORD PTR [ecx+0x68],edi
   1548b:	je     0x15500
   1548d:	mov    ecx,DWORD PTR [eax+0x8]
   15490:	cmp    DWORD PTR [ecx+0x68],edi
   15493:	jne    0x154ad
   15495:	mov    ecx,DWORD PTR [eax]
   15497:	mov    DWORD PTR [ecx+0x68],edi
   1549a:	mov    ecx,DWORD PTR [ebp-0x4]
   1549d:	and    DWORD PTR [eax+0x68],0x0
   154a1:	push   eax
   154a2:	call   0x1135c
   154a7:	mov    eax,DWORD PTR [esi+0x4]
   154aa:	mov    eax,DWORD PTR [eax+0x8]
   154ad:	mov    ecx,DWORD PTR [esi+0x4]
   154b0:	mov    ecx,DWORD PTR [ecx+0x68]
   154b3:	mov    DWORD PTR [eax+0x68],ecx
   154b6:	mov    ecx,DWORD PTR [esi+0x4]
   154b9:	mov    DWORD PTR [ecx+0x68],edi
   154bc:	mov    eax,DWORD PTR [eax+0x8]
   154bf:	mov    ecx,DWORD PTR [ebp-0x4]
   154c2:	mov    DWORD PTR [eax+0x68],edi
   154c5:	push   DWORD PTR [esi+0x4]
   154c8:	call   0x112ec
   154cd:	jmp    0x15556
   154d2:	mov    eax,DWORD PTR [eax]
   154d4:	cmp    DWORD PTR [eax+0x68],0x0
   154d8:	jne    0x154f1
   154da:	mov    DWORD PTR [eax+0x68],edi
   154dd:	mov    eax,DWORD PTR [esi+0x4]
   154e0:	and    DWORD PTR [eax+0x68],0x0
   154e4:	push   DWORD PTR [esi+0x4]
   154e7:	call   0x1135c
   154ec:	mov    eax,DWORD PTR [esi+0x4]
   154ef:	mov    eax,DWORD PTR [eax]
   154f1:	mov    ecx,DWORD PTR [eax+0x8]
   154f4:	cmp    DWORD PTR [ecx+0x68],edi
   154f7:	jne    0x15518
   154f9:	mov    ecx,DWORD PTR [eax]
   154fb:	cmp    DWORD PTR [ecx+0x68],edi
   154fe:	jne    0x15518
   15500:	and    DWORD PTR [eax+0x68],0x0
   15504:	mov    esi,DWORD PTR [esi+0x4]
   15507:	mov    ecx,DWORD PTR [ebp-0x4]
   1550a:	mov    eax,DWORD PTR [ecx+0x4]
   1550d:	cmp    esi,DWORD PTR [eax+0x4]
   15510:	jne    0x1544d
   15516:	jmp    0x15556
   15518:	mov    ecx,DWORD PTR [eax]
   1551a:	cmp    DWORD PTR [ecx+0x68],edi
   1551d:	jne    0x15537
   1551f:	mov    ecx,DWORD PTR [eax+0x8]
   15522:	mov    DWORD PTR [ecx+0x68],edi
   15525:	mov    ecx,DWORD PTR [ebp-0x4]
   15528:	and    DWORD PTR [eax+0x68],0x0
   1552c:	push   eax
   1552d:	call   0x112ec
   15532:	mov    eax,DWORD PTR [esi+0x4]
   15535:	mov    eax,DWORD PTR [eax]
   15537:	mov    ecx,DWORD PTR [esi+0x4]
   1553a:	mov    ecx,DWORD PTR [ecx+0x68]
   1553d:	mov    DWORD PTR [eax+0x68],ecx
   15540:	mov    ecx,DWORD PTR [esi+0x4]
   15543:	mov    DWORD PTR [ecx+0x68],edi
   15546:	mov    eax,DWORD PTR [eax]
   15548:	mov    ecx,DWORD PTR [ebp-0x4]
   1554b:	mov    DWORD PTR [eax+0x68],edi
   1554e:	push   DWORD PTR [esi+0x4]
   15551:	call   0x1135c
   15556:	mov    DWORD PTR [esi+0x68],edi
   15559:	lea    eax,[ebx+0x10]
   1555c:	push   eax
   1555d:	call   0x13ad8
   15562:	push   ebx
   15563:	call   0x1d9fc
   15568:	mov    eax,DWORD PTR [ebp-0x4]
   1556b:	dec    DWORD PTR [eax+0xc]
   1556e:	mov    eax,DWORD PTR [ebp+0x8]
   15571:	pop    ecx
   15572:	mov    ecx,DWORD PTR [ebp+0xc]
   15575:	pop    edi
   15576:	pop    esi
   15577:	mov    DWORD PTR [eax],ecx
   15579:	pop    ebx
   1557a:	leave  
   1557b:	ret    0x8
   1557e:	int3   
   1557f:	int3   
   15580:	int3   
   15581:	int3   
   15582:	int3   
   15583:	int3   
   15584:	mov    edi,edi
   15586:	push   ebp
   15587:	mov    ebp,esp
   15589:	push   ebx
   1558a:	push   esi
   1558b:	push   edi
   1558c:	mov    edi,DWORD PTR [ebp+0x8]
   1558f:	mov    ebx,ecx
   15591:	mov    esi,edi
   15593:	cmp    edi,DWORD PTR ds:0x78abc
   15599:	je     0x155c1
   1559b:	push   DWORD PTR [esi+0x8]
   1559e:	mov    ecx,ebx
   155a0:	call   0x15584
   155a5:	mov    esi,DWORD PTR [esi]
   155a7:	lea    eax,[edi+0x10]
   155aa:	push   eax
   155ab:	call   0x13ad8
   155b0:	push   edi
   155b1:	call   0x1d9fc
   155b6:	pop    ecx
   155b7:	mov    edi,esi
   155b9:	cmp    esi,DWORD PTR ds:0x78abc
   155bf:	jne    0x1559b
   155c1:	pop    edi
   155c2:	pop    esi
   155c3:	pop    ebx
   155c4:	pop    ebp
   155c5:	ret    0x4
   155c8:	int3   
   155c9:	int3   
   155ca:	int3   
   155cb:	int3   
   155cc:	int3   
   155cd:	int3   
   155ce:	mov    edi,edi
   155d0:	push   ebp
   155d1:	mov    ebp,esp
   155d3:	push   ebx
   155d4:	push   esi
   155d5:	mov    esi,DWORD PTR [ebp+0x10]
   155d8:	push   edi
   155d9:	push   0x0
   155db:	push   esi
   155dc:	mov    edi,ecx
   155de:	call   0x13984
   155e3:	push   DWORD PTR [ebp+0x14]
   155e6:	mov    ebx,eax
   155e8:	mov    eax,ds:0x78abc
   155ed:	mov    DWORD PTR [ebx],eax
   155ef:	mov    eax,ds:0x78abc
   155f4:	mov    DWORD PTR [ebx+0x8],eax
   155f7:	lea    eax,[ebx+0x10]
   155fa:	push   eax
   155fb:	call   0x13aba
   15600:	inc    DWORD PTR [edi+0xc]
   15603:	cmp    esi,DWORD PTR [edi+0x4]
   15606:	je     0x15630
   15608:	mov    eax,DWORD PTR [ebp+0xc]
   1560b:	cmp    eax,DWORD PTR ds:0x78abc
   15611:	jne    0x15630
   15613:	lea    eax,[esi+0x10]
   15616:	push   eax
   15617:	push   DWORD PTR [ebp+0x14]
   1561a:	call   0x197b8
   1561f:	test   al,al
   15621:	jne    0x15630
   15623:	mov    DWORD PTR [esi+0x8],ebx
   15626:	mov    eax,DWORD PTR [edi+0x4]
   15629:	cmp    esi,DWORD PTR [eax+0x8]
   1562c:	jne    0x1564a
   1562e:	jmp    0x1563f
   15630:	mov    DWORD PTR [esi],ebx
   15632:	mov    eax,DWORD PTR [edi+0x4]
   15635:	cmp    esi,eax
   15637:	jne    0x15644
   15639:	mov    DWORD PTR [eax+0x4],ebx
   1563c:	mov    eax,DWORD PTR [edi+0x4]
   1563f:	mov    DWORD PTR [eax+0x8],ebx
   15642:	jmp    0x1564a
   15644:	cmp    esi,DWORD PTR [eax]
   15646:	jne    0x1564a
   15648:	mov    DWORD PTR [eax],ebx
   1564a:	mov    eax,DWORD PTR [edi+0x4]
   1564d:	mov    esi,ebx
   1564f:	cmp    ebx,DWORD PTR [eax+0x4]
   15652:	je     0x15706
   15658:	mov    eax,DWORD PTR [esi+0x4]
   1565b:	xor    edx,edx
   1565d:	cmp    DWORD PTR [eax+0x68],edx
   15660:	jne    0x15706
   15666:	mov    ecx,DWORD PTR [eax+0x4]
   15669:	cmp    eax,DWORD PTR [ecx]
   1566b:	jne    0x156a7
   1566d:	mov    ecx,DWORD PTR [ecx+0x8]
   15670:	cmp    DWORD PTR [ecx+0x68],edx
   15673:	je     0x156ae
   15675:	cmp    esi,DWORD PTR [eax+0x8]
   15678:	jne    0x15684
   1567a:	mov    esi,eax
   1567c:	push   esi
   1567d:	mov    ecx,edi
   1567f:	call   0x112ec
   15684:	mov    eax,DWORD PTR [esi+0x4]
   15687:	mov    DWORD PTR [eax+0x68],0x1
   1568e:	mov    eax,DWORD PTR [esi+0x4]
   15691:	mov    eax,DWORD PTR [eax+0x4]
   15694:	and    DWORD PTR [eax+0x68],0x0
   15698:	mov    eax,DWORD PTR [esi+0x4]
   1569b:	push   DWORD PTR [eax+0x4]
   1569e:	mov    ecx,edi
   156a0:	call   0x1135c
   156a5:	jmp    0x156fa
   156a7:	mov    ecx,DWORD PTR [ecx]
   156a9:	cmp    DWORD PTR [ecx+0x68],edx
   156ac:	jne    0x156cb
   156ae:	mov    edx,eax
   156b0:	xor    eax,eax
   156b2:	inc    eax
   156b3:	mov    DWORD PTR [edx+0x68],eax
   156b6:	mov    DWORD PTR [ecx+0x68],eax
   156b9:	mov    eax,DWORD PTR [esi+0x4]
   156bc:	mov    eax,DWORD PTR [eax+0x4]
   156bf:	and    DWORD PTR [eax+0x68],0x0
   156c3:	mov    eax,DWORD PTR [esi+0x4]
   156c6:	mov    esi,DWORD PTR [eax+0x4]
   156c9:	jmp    0x156fa
   156cb:	cmp    esi,DWORD PTR [eax]
   156cd:	jne    0x156d9
   156cf:	mov    esi,eax
   156d1:	push   esi
   156d2:	mov    ecx,edi
   156d4:	call   0x1135c
   156d9:	mov    eax,DWORD PTR [esi+0x4]
   156dc:	mov    DWORD PTR [eax+0x68],0x1
   156e3:	mov    eax,DWORD PTR [esi+0x4]
   156e6:	mov    eax,DWORD PTR [eax+0x4]
   156e9:	and    DWORD PTR [eax+0x68],0x0
   156ed:	mov    eax,DWORD PTR [esi+0x4]
   156f0:	push   DWORD PTR [eax+0x4]
   156f3:	mov    ecx,edi
   156f5:	call   0x112ec
   156fa:	mov    eax,DWORD PTR [edi+0x4]
   156fd:	cmp    esi,DWORD PTR [eax+0x4]
   15700:	jne    0x15658
   15706:	mov    eax,DWORD PTR [edi+0x4]
   15709:	mov    eax,DWORD PTR [eax+0x4]
   1570c:	pop    edi
   1570d:	mov    DWORD PTR [eax+0x68],0x1
   15714:	mov    eax,DWORD PTR [ebp+0x8]
   15717:	pop    esi
   15718:	mov    DWORD PTR [eax],ebx
   1571a:	pop    ebx
   1571b:	pop    ebp
   1571c:	ret    0x10
   1571f:	int3   
   15720:	int3   
   15721:	int3   
   15722:	int3   
   15723:	int3   
   15724:	mov    edi,edi
   15726:	push   ebp
   15727:	mov    ebp,esp
   15729:	push   ebx
   1572a:	push   esi
   1572b:	mov    esi,DWORD PTR [ebp+0x10]
   1572e:	push   edi
   1572f:	push   0x0
   15731:	push   esi
   15732:	mov    edi,ecx
   15734:	call   0x139a8
   15739:	push   DWORD PTR [ebp+0x14]
   1573c:	mov    ebx,eax
   1573e:	mov    eax,ds:0x78ac0
   15743:	mov    DWORD PTR [ebx],eax
   15745:	mov    eax,ds:0x78ac0
   1574a:	mov    DWORD PTR [ebx+0x8],eax
   1574d:	lea    eax,[ebx+0xc]
   15750:	push   eax
   15751:	call   0x13af0
   15756:	inc    DWORD PTR [edi+0xc]
   15759:	cmp    esi,DWORD PTR [edi+0x4]
   1575c:	je     0x15786
   1575e:	mov    eax,DWORD PTR [ebp+0xc]
   15761:	cmp    eax,DWORD PTR ds:0x78ac0
   15767:	jne    0x15786
   15769:	lea    eax,[esi+0xc]
   1576c:	push   eax
   1576d:	push   DWORD PTR [ebp+0x14]
   15770:	call   0x197b8
   15775:	test   al,al
   15777:	jne    0x15786
   15779:	mov    DWORD PTR [esi+0x8],ebx
   1577c:	mov    eax,DWORD PTR [edi+0x4]
   1577f:	cmp    esi,DWORD PTR [eax+0x8]
   15782:	jne    0x157a0
   15784:	jmp    0x15795
   15786:	mov    DWORD PTR [esi],ebx
   15788:	mov    eax,DWORD PTR [edi+0x4]
   1578b:	cmp    esi,eax
   1578d:	jne    0x1579a
   1578f:	mov    DWORD PTR [eax+0x4],ebx
   15792:	mov    eax,DWORD PTR [edi+0x4]
   15795:	mov    DWORD PTR [eax+0x8],ebx
   15798:	jmp    0x157a0
   1579a:	cmp    esi,DWORD PTR [eax]
   1579c:	jne    0x157a0
   1579e:	mov    DWORD PTR [eax],ebx
   157a0:	mov    eax,DWORD PTR [edi+0x4]
   157a3:	mov    esi,ebx
   157a5:	cmp    ebx,DWORD PTR [eax+0x4]
   157a8:	je     0x1585c
   157ae:	mov    eax,DWORD PTR [esi+0x4]
   157b1:	xor    edx,edx
   157b3:	cmp    DWORD PTR [eax+0x1c],edx
   157b6:	jne    0x1585c
   157bc:	mov    ecx,DWORD PTR [eax+0x4]
   157bf:	cmp    eax,DWORD PTR [ecx]
   157c1:	jne    0x157fd
   157c3:	mov    ecx,DWORD PTR [ecx+0x8]
   157c6:	cmp    DWORD PTR [ecx+0x1c],edx
   157c9:	je     0x15804
   157cb:	cmp    esi,DWORD PTR [eax+0x8]
   157ce:	jne    0x157da
   157d0:	mov    esi,eax
   157d2:	push   esi
   157d3:	mov    ecx,edi
   157d5:	call   0x13138
   157da:	mov    eax,DWORD PTR [esi+0x4]
   157dd:	mov    DWORD PTR [eax+0x1c],0x1
   157e4:	mov    eax,DWORD PTR [esi+0x4]
   157e7:	mov    eax,DWORD PTR [eax+0x4]
   157ea:	and    DWORD PTR [eax+0x1c],0x0
   157ee:	mov    eax,DWORD PTR [esi+0x4]
   157f1:	push   DWORD PTR [eax+0x4]
   157f4:	mov    ecx,edi
   157f6:	call   0x13186
   157fb:	jmp    0x15850
   157fd:	mov    ecx,DWORD PTR [ecx]
   157ff:	cmp    DWORD PTR [ecx+0x1c],edx
   15802:	jne    0x15821
   15804:	mov    edx,eax
   15806:	xor    eax,eax
   15808:	inc    eax
   15809:	mov    DWORD PTR [edx+0x1c],eax
   1580c:	mov    DWORD PTR [ecx+0x1c],eax
   1580f:	mov    eax,DWORD PTR [esi+0x4]
   15812:	mov    eax,DWORD PTR [eax+0x4]
   15815:	and    DWORD PTR [eax+0x1c],0x0
   15819:	mov    eax,DWORD PTR [esi+0x4]
   1581c:	mov    esi,DWORD PTR [eax+0x4]
   1581f:	jmp    0x15850
   15821:	cmp    esi,DWORD PTR [eax]
   15823:	jne    0x1582f
   15825:	mov    esi,eax
   15827:	push   esi
   15828:	mov    ecx,edi
   1582a:	call   0x13186
   1582f:	mov    eax,DWORD PTR [esi+0x4]
   15832:	mov    DWORD PTR [eax+0x1c],0x1
   15839:	mov    eax,DWORD PTR [esi+0x4]
   1583c:	mov    eax,DWORD PTR [eax+0x4]
   1583f:	and    DWORD PTR [eax+0x1c],0x0
   15843:	mov    eax,DWORD PTR [esi+0x4]
   15846:	push   DWORD PTR [eax+0x4]
   15849:	mov    ecx,edi
   1584b:	call   0x13138
   15850:	mov    eax,DWORD PTR [edi+0x4]
   15853:	cmp    esi,DWORD PTR [eax+0x4]
   15856:	jne    0x157ae
   1585c:	mov    eax,DWORD PTR [edi+0x4]
   1585f:	mov    eax,DWORD PTR [eax+0x4]
   15862:	pop    edi
   15863:	mov    DWORD PTR [eax+0x1c],0x1
   1586a:	mov    eax,DWORD PTR [ebp+0x8]
   1586d:	pop    esi
   1586e:	mov    DWORD PTR [eax],ebx
   15870:	pop    ebx
   15871:	pop    ebp
   15872:	ret    0x10
   15875:	int3   
   15876:	int3   
   15877:	int3   
   15878:	int3   
   15879:	int3   
   1587a:	mov    edi,edi
   1587c:	push   ebp
   1587d:	mov    ebp,esp
   1587f:	push   ecx
   15880:	push   ecx
   15881:	push   ebx
   15882:	push   esi
   15883:	mov    DWORD PTR [ebp-0x4],ecx
   15886:	push   edi
   15887:	mov    edi,DWORD PTR [ebp+0xc]
   1588a:	lea    ecx,[ebp+0xc]
   1588d:	call   0x1156a
   15892:	mov    esi,DWORD PTR [edi]
   15894:	mov    eax,ds:0x78ac4
   15899:	mov    ebx,edi
   1589b:	mov    DWORD PTR [ebp-0x8],esi
   1589e:	cmp    esi,eax
   158a0:	jne    0x158be
   158a2:	mov    esi,DWORD PTR [edi+0x8]
   158a5:	mov    eax,DWORD PTR [ebx+0x4]
   158a8:	mov    ecx,DWORD PTR [ebp-0x4]
   158ab:	mov    DWORD PTR [esi+0x4],eax
   158ae:	mov    eax,DWORD PTR [ecx+0x4]
   158b1:	cmp    DWORD PTR [eax+0x4],edi
   158b4:	jne    0x15933
   158b6:	mov    DWORD PTR [eax+0x4],esi
   158b9:	jmp    0x15941
   158be:	mov    ecx,DWORD PTR [edi+0x8]
   158c1:	cmp    ecx,eax
   158c3:	je     0x158a5
   158c5:	push   ecx
   158c6:	call   0x11492
   158cb:	mov    ebx,eax
   158cd:	mov    esi,DWORD PTR [ebx+0x8]
   158d0:	cmp    ebx,edi
   158d2:	je     0x158a5
   158d4:	mov    eax,DWORD PTR [ebp-0x8]
   158d7:	mov    DWORD PTR [eax+0x4],ebx
   158da:	mov    eax,DWORD PTR [edi]
   158dc:	mov    DWORD PTR [ebx],eax
   158de:	cmp    ebx,DWORD PTR [edi+0x8]
   158e1:	jne    0x158e8
   158e3:	mov    DWORD PTR [esi+0x4],ebx
   158e6:	jmp    0x158ff
   158e8:	mov    eax,DWORD PTR [ebx+0x4]
   158eb:	mov    DWORD PTR [esi+0x4],eax
   158ee:	mov    eax,DWORD PTR [ebx+0x4]
   158f1:	mov    DWORD PTR [eax],esi
   158f3:	mov    eax,DWORD PTR [edi+0x8]
   158f6:	mov    DWORD PTR [ebx+0x8],eax
   158f9:	mov    eax,DWORD PTR [edi+0x8]
   158fc:	mov    DWORD PTR [eax+0x4],ebx
   158ff:	mov    eax,DWORD PTR [ebp-0x4]
   15902:	mov    eax,DWORD PTR [eax+0x4]
   15905:	cmp    DWORD PTR [eax+0x4],edi
   15908:	jne    0x1590f
   1590a:	mov    DWORD PTR [eax+0x4],ebx
   1590d:	jmp    0x1591d
   1590f:	mov    eax,DWORD PTR [edi+0x4]
   15912:	cmp    DWORD PTR [eax],edi
   15914:	jne    0x1591a
   15916:	mov    DWORD PTR [eax],ebx
   15918:	jmp    0x1591d
   1591a:	mov    DWORD PTR [eax+0x8],ebx
   1591d:	mov    eax,DWORD PTR [edi+0x4]
   15920:	mov    DWORD PTR [ebx+0x4],eax
   15923:	mov    eax,DWORD PTR [ebx+0x14]
   15926:	mov    ecx,DWORD PTR [edi+0x14]
   15929:	mov    DWORD PTR [ebx+0x14],ecx
   1592c:	mov    DWORD PTR [edi+0x14],eax
   1592f:	mov    ebx,edi
   15931:	jmp    0x15994
   15933:	mov    eax,DWORD PTR [edi+0x4]
   15936:	cmp    DWORD PTR [eax],edi
   15938:	jne    0x1593e
   1593a:	mov    DWORD PTR [eax],esi
   1593c:	jmp    0x15941
   1593e:	mov    DWORD PTR [eax+0x8],esi
   15941:	mov    eax,DWORD PTR [ecx+0x4]
   15944:	mov    DWORD PTR [ebp-0x8],eax
   15947:	cmp    DWORD PTR [eax],edi
   15949:	jne    0x1596b
   1594b:	mov    edx,DWORD PTR [edi+0x8]
   1594e:	cmp    edx,DWORD PTR ds:0x78ac4
   15954:	jne    0x1595d
   15956:	mov    edx,DWORD PTR [edi+0x4]
   15959:	mov    DWORD PTR [eax],edx
   1595b:	jmp    0x1596b
   1595d:	push   esi
   1595e:	call   0x11492
   15963:	mov    ecx,DWORD PTR [ebp-0x8]
   15966:	mov    DWORD PTR [ecx],eax
   15968:	mov    ecx,DWORD PTR [ebp-0x4]
   1596b:	mov    eax,DWORD PTR [ecx+0x4]
   1596e:	mov    DWORD PTR [ebp-0x8],eax
   15971:	cmp    DWORD PTR [eax+0x8],edi
   15974:	jne    0x15994
   15976:	mov    ecx,DWORD PTR [edi]
   15978:	cmp    ecx,DWORD PTR ds:0x78ac4
   1597e:	jne    0x15988
   15980:	mov    ecx,DWORD PTR [edi+0x4]
   15983:	mov    DWORD PTR [eax+0x8],ecx
   15986:	jmp    0x15994
   15988:	push   esi
   15989:	call   0x11470
   1598e:	mov    ecx,DWORD PTR [ebp-0x8]
   15991:	mov    DWORD PTR [ecx+0x8],eax
   15994:	xor    edi,edi
   15996:	inc    edi
   15997:	cmp    DWORD PTR [ebx+0x14],edi
   1599a:	jne    0x15ab1
   159a0:	jmp    0x15a5f
   159a5:	cmp    DWORD PTR [esi+0x14],edi
   159a8:	jne    0x15aae
   159ae:	mov    eax,DWORD PTR [esi+0x4]
   159b1:	cmp    esi,DWORD PTR [eax]
   159b3:	jne    0x15a2a
   159b5:	mov    eax,DWORD PTR [eax+0x8]
   159b8:	cmp    DWORD PTR [eax+0x14],0x0
   159bc:	jne    0x159d6
   159be:	mov    DWORD PTR [eax+0x14],edi
   159c1:	mov    eax,DWORD PTR [esi+0x4]
   159c4:	and    DWORD PTR [eax+0x14],0x0
   159c8:	push   DWORD PTR [esi+0x4]
   159cb:	call   0x13216
   159d0:	mov    eax,DWORD PTR [esi+0x4]
   159d3:	mov    eax,DWORD PTR [eax+0x8]
   159d6:	mov    ecx,DWORD PTR [eax]
   159d8:	cmp    DWORD PTR [ecx+0x14],edi
   159db:	jne    0x159e5
   159dd:	mov    ecx,DWORD PTR [eax+0x8]
   159e0:	cmp    DWORD PTR [ecx+0x14],edi
   159e3:	je     0x15a58
   159e5:	mov    ecx,DWORD PTR [eax+0x8]
   159e8:	cmp    DWORD PTR [ecx+0x14],edi
   159eb:	jne    0x15a05
   159ed:	mov    ecx,DWORD PTR [eax]
   159ef:	mov    DWORD PTR [ecx+0x14],edi
   159f2:	mov    ecx,DWORD PTR [ebp-0x4]
   159f5:	and    DWORD PTR [eax+0x14],0x0
   159f9:	push   eax
   159fa:	call   0x13264
   159ff:	mov    eax,DWORD PTR [esi+0x4]
   15a02:	mov    eax,DWORD PTR [eax+0x8]
   15a05:	mov    ecx,DWORD PTR [esi+0x4]
   15a08:	mov    ecx,DWORD PTR [ecx+0x14]
   15a0b:	mov    DWORD PTR [eax+0x14],ecx
   15a0e:	mov    ecx,DWORD PTR [esi+0x4]
   15a11:	mov    DWORD PTR [ecx+0x14],edi
   15a14:	mov    eax,DWORD PTR [eax+0x8]
   15a17:	mov    ecx,DWORD PTR [ebp-0x4]
   15a1a:	mov    DWORD PTR [eax+0x14],edi
   15a1d:	push   DWORD PTR [esi+0x4]
   15a20:	call   0x13216
   15a25:	jmp    0x15aae
   15a2a:	mov    eax,DWORD PTR [eax]
   15a2c:	cmp    DWORD PTR [eax+0x14],0x0
   15a30:	jne    0x15a49
   15a32:	mov    DWORD PTR [eax+0x14],edi
   15a35:	mov    eax,DWORD PTR [esi+0x4]
   15a38:	and    DWORD PTR [eax+0x14],0x0
   15a3c:	push   DWORD PTR [esi+0x4]
   15a3f:	call   0x13264
   15a44:	mov    eax,DWORD PTR [esi+0x4]
   15a47:	mov    eax,DWORD PTR [eax]
   15a49:	mov    ecx,DWORD PTR [eax+0x8]
   15a4c:	cmp    DWORD PTR [ecx+0x14],edi
   15a4f:	jne    0x15a70
   15a51:	mov    ecx,DWORD PTR [eax]
   15a53:	cmp    DWORD PTR [ecx+0x14],edi
   15a56:	jne    0x15a70
   15a58:	and    DWORD PTR [eax+0x14],0x0
   15a5c:	mov    esi,DWORD PTR [esi+0x4]
   15a5f:	mov    ecx,DWORD PTR [ebp-0x4]
   15a62:	mov    eax,DWORD PTR [ecx+0x4]
   15a65:	cmp    esi,DWORD PTR [eax+0x4]
   15a68:	jne    0x159a5
   15a6e:	jmp    0x15aae
   15a70:	mov    ecx,DWORD PTR [eax]
   15a72:	cmp    DWORD PTR [ecx+0x14],edi
   15a75:	jne    0x15a8f
   15a77:	mov    ecx,DWORD PTR [eax+0x8]
   15a7a:	mov    DWORD PTR [ecx+0x14],edi
   15a7d:	mov    ecx,DWORD PTR [ebp-0x4]
   15a80:	and    DWORD PTR [eax+0x14],0x0
   15a84:	push   eax
   15a85:	call   0x13216
   15a8a:	mov    eax,DWORD PTR [esi+0x4]
   15a8d:	mov    eax,DWORD PTR [eax]
   15a8f:	mov    ecx,DWORD PTR [esi+0x4]
   15a92:	mov    ecx,DWORD PTR [ecx+0x14]
   15a95:	mov    DWORD PTR [eax+0x14],ecx
   15a98:	mov    ecx,DWORD PTR [esi+0x4]
   15a9b:	mov    DWORD PTR [ecx+0x14],edi
   15a9e:	mov    eax,DWORD PTR [eax]
   15aa0:	mov    ecx,DWORD PTR [ebp-0x4]
   15aa3:	mov    DWORD PTR [eax+0x14],edi
   15aa6:	push   DWORD PTR [esi+0x4]
   15aa9:	call   0x13264
   15aae:	mov    DWORD PTR [esi+0x14],edi
   15ab1:	lea    eax,[ebx+0xc]
   15ab4:	push   eax
   15ab5:	call   0x13b2c
   15aba:	push   ebx
   15abb:	call   0x1d9fc
   15ac0:	mov    eax,DWORD PTR [ebp-0x4]
   15ac3:	dec    DWORD PTR [eax+0xc]
   15ac6:	mov    eax,DWORD PTR [ebp+0x8]
   15ac9:	pop    ecx
   15aca:	mov    ecx,DWORD PTR [ebp+0xc]
   15acd:	pop    edi
   15ace:	pop    esi
   15acf:	mov    DWORD PTR [eax],ecx
   15ad1:	pop    ebx
   15ad2:	leave  
   15ad3:	ret    0x8
   15ad6:	int3   
   15ad7:	int3   
   15ad8:	int3   
   15ad9:	int3   
   15ada:	int3   
   15adb:	int3   
   15adc:	mov    edi,edi
   15ade:	push   ebp
   15adf:	mov    ebp,esp
   15ae1:	push   ebx
   15ae2:	push   esi
   15ae3:	push   edi
   15ae4:	mov    edi,DWORD PTR [ebp+0x8]
   15ae7:	mov    ebx,ecx
   15ae9:	mov    esi,edi
   15aeb:	cmp    edi,DWORD PTR ds:0x78ac4
   15af1:	je     0x15b19
   15af3:	push   DWORD PTR [esi+0x8]
   15af6:	mov    ecx,ebx
   15af8:	call   0x15adc
   15afd:	mov    esi,DWORD PTR [esi]
   15aff:	lea    eax,[edi+0xc]
   15b02:	push   eax
   15b03:	call   0x13b2c
   15b08:	push   edi
   15b09:	call   0x1d9fc
   15b0e:	pop    ecx
   15b0f:	mov    edi,esi
   15b11:	cmp    esi,DWORD PTR ds:0x78ac4
   15b17:	jne    0x15af3
   15b19:	pop    edi
   15b1a:	pop    esi
   15b1b:	pop    ebx
   15b1c:	pop    ebp
   15b1d:	ret    0x4
   15b20:	int3   
   15b21:	int3   
   15b22:	int3   
   15b23:	int3   
   15b24:	int3   
   15b25:	int3   
   15b26:	mov    edi,edi
   15b28:	push   ebp
   15b29:	mov    ebp,esp
   15b2b:	push   ebx
   15b2c:	push   esi
   15b2d:	mov    esi,DWORD PTR [ebp+0x10]
   15b30:	push   edi
   15b31:	push   0x0
   15b33:	push   esi
   15b34:	mov    edi,ecx
   15b36:	call   0x13960
   15b3b:	push   DWORD PTR [ebp+0x14]
   15b3e:	mov    ebx,eax
   15b40:	mov    eax,ds:0x78ac4
   15b45:	mov    DWORD PTR [ebx],eax
   15b47:	mov    eax,ds:0x78ac4
   15b4c:	mov    DWORD PTR [ebx+0x8],eax
   15b4f:	lea    eax,[ebx+0xc]
   15b52:	push   eax
   15b53:	call   0x13b0e
   15b58:	inc    DWORD PTR [edi+0xc]
   15b5b:	cmp    esi,DWORD PTR [edi+0x4]
   15b5e:	je     0x15b82
   15b60:	mov    eax,DWORD PTR [ebp+0xc]
   15b63:	cmp    eax,DWORD PTR ds:0x78ac4
   15b69:	jne    0x15b82
   15b6b:	mov    eax,DWORD PTR [ebp+0x14]
   15b6e:	mov    eax,DWORD PTR [eax]
   15b70:	cmp    eax,DWORD PTR [esi+0xc]
   15b73:	jl     0x15b82
   15b75:	mov    DWORD PTR [esi+0x8],ebx
   15b78:	mov    eax,DWORD PTR [edi+0x4]
   15b7b:	cmp    esi,DWORD PTR [eax+0x8]
   15b7e:	jne    0x15b9c
   15b80:	jmp    0x15b91
   15b82:	mov    DWORD PTR [esi],ebx
   15b84:	mov    eax,DWORD PTR [edi+0x4]
   15b87:	cmp    esi,eax
   15b89:	jne    0x15b96
   15b8b:	mov    DWORD PTR [eax+0x4],ebx
   15b8e:	mov    eax,DWORD PTR [edi+0x4]
   15b91:	mov    DWORD PTR [eax+0x8],ebx
   15b94:	jmp    0x15b9c
   15b96:	cmp    esi,DWORD PTR [eax]
   15b98:	jne    0x15b9c
   15b9a:	mov    DWORD PTR [eax],ebx
   15b9c:	mov    eax,DWORD PTR [edi+0x4]
   15b9f:	mov    esi,ebx
   15ba1:	cmp    ebx,DWORD PTR [eax+0x4]
   15ba4:	je     0x15c58
   15baa:	mov    eax,DWORD PTR [esi+0x4]
   15bad:	xor    edx,edx
   15baf:	cmp    DWORD PTR [eax+0x14],edx
   15bb2:	jne    0x15c58
   15bb8:	mov    ecx,DWORD PTR [eax+0x4]
   15bbb:	cmp    eax,DWORD PTR [ecx]
   15bbd:	jne    0x15bf9
   15bbf:	mov    ecx,DWORD PTR [ecx+0x8]
   15bc2:	cmp    DWORD PTR [ecx+0x14],edx
   15bc5:	je     0x15c00
   15bc7:	cmp    esi,DWORD PTR [eax+0x8]
   15bca:	jne    0x15bd6
   15bcc:	mov    esi,eax
   15bce:	push   esi
   15bcf:	mov    ecx,edi
   15bd1:	call   0x13216
   15bd6:	mov    eax,DWORD PTR [esi+0x4]
   15bd9:	mov    DWORD PTR [eax+0x14],0x1
   15be0:	mov    eax,DWORD PTR [esi+0x4]
   15be3:	mov    eax,DWORD PTR [eax+0x4]
   15be6:	and    DWORD PTR [eax+0x14],0x0
   15bea:	mov    eax,DWORD PTR [esi+0x4]
   15bed:	push   DWORD PTR [eax+0x4]
   15bf0:	mov    ecx,edi
   15bf2:	call   0x13264
   15bf7:	jmp    0x15c4c
   15bf9:	mov    ecx,DWORD PTR [ecx]
   15bfb:	cmp    DWORD PTR [ecx+0x14],edx
   15bfe:	jne    0x15c1d
   15c00:	mov    edx,eax
   15c02:	xor    eax,eax
   15c04:	inc    eax
   15c05:	mov    DWORD PTR [edx+0x14],eax
   15c08:	mov    DWORD PTR [ecx+0x14],eax
   15c0b:	mov    eax,DWORD PTR [esi+0x4]
   15c0e:	mov    eax,DWORD PTR [eax+0x4]
   15c11:	and    DWORD PTR [eax+0x14],0x0
   15c15:	mov    eax,DWORD PTR [esi+0x4]
   15c18:	mov    esi,DWORD PTR [eax+0x4]
   15c1b:	jmp    0x15c4c
   15c1d:	cmp    esi,DWORD PTR [eax]
   15c1f:	jne    0x15c2b
   15c21:	mov    esi,eax
   15c23:	push   esi
   15c24:	mov    ecx,edi
   15c26:	call   0x13264
   15c2b:	mov    eax,DWORD PTR [esi+0x4]
   15c2e:	mov    DWORD PTR [eax+0x14],0x1
   15c35:	mov    eax,DWORD PTR [esi+0x4]
   15c38:	mov    eax,DWORD PTR [eax+0x4]
   15c3b:	and    DWORD PTR [eax+0x14],0x0
   15c3f:	mov    eax,DWORD PTR [esi+0x4]
   15c42:	push   DWORD PTR [eax+0x4]
   15c45:	mov    ecx,edi
   15c47:	call   0x13216
   15c4c:	mov    eax,DWORD PTR [edi+0x4]
   15c4f:	cmp    esi,DWORD PTR [eax+0x4]
   15c52:	jne    0x15baa
   15c58:	mov    eax,DWORD PTR [edi+0x4]
   15c5b:	mov    eax,DWORD PTR [eax+0x4]
   15c5e:	pop    edi
   15c5f:	mov    DWORD PTR [eax+0x14],0x1
   15c66:	mov    eax,DWORD PTR [ebp+0x8]
   15c69:	pop    esi
   15c6a:	mov    DWORD PTR [eax],ebx
   15c6c:	pop    ebx
   15c6d:	pop    ebp
   15c6e:	ret    0x10
   15c71:	int3   
   15c72:	int3   
   15c73:	int3   
   15c74:	int3   
   15c75:	int3   
   15c76:	mov    edi,edi
   15c78:	push   ebp
   15c79:	mov    ebp,esp
   15c7b:	push   ebx
   15c7c:	push   esi
   15c7d:	mov    esi,DWORD PTR [ebp+0x10]
   15c80:	push   edi
   15c81:	push   0x0
   15c83:	push   esi
   15c84:	mov    edi,ecx
   15c86:	call   0x139a8
   15c8b:	push   DWORD PTR [ebp+0x14]
   15c8e:	mov    ebx,eax
   15c90:	mov    eax,ds:0x78acc
   15c95:	mov    DWORD PTR [ebx],eax
   15c97:	mov    eax,ds:0x78acc
   15c9c:	mov    DWORD PTR [ebx+0x8],eax
   15c9f:	lea    eax,[ebx+0xc]
   15ca2:	push   eax
   15ca3:	call   0x13b44
   15ca8:	inc    DWORD PTR [edi+0xc]
   15cab:	cmp    esi,DWORD PTR [edi+0x4]
   15cae:	je     0x15cd8
   15cb0:	mov    eax,DWORD PTR [ebp+0xc]
   15cb3:	cmp    eax,DWORD PTR ds:0x78acc
   15cb9:	jne    0x15cd8
   15cbb:	lea    eax,[esi+0xc]
   15cbe:	push   eax
   15cbf:	push   DWORD PTR [ebp+0x14]
   15cc2:	call   0x197e8
   15cc7:	test   al,al
   15cc9:	jne    0x15cd8
   15ccb:	mov    DWORD PTR [esi+0x8],ebx
   15cce:	mov    eax,DWORD PTR [edi+0x4]
   15cd1:	cmp    esi,DWORD PTR [eax+0x8]
   15cd4:	jne    0x15cf2
   15cd6:	jmp    0x15ce7
   15cd8:	mov    DWORD PTR [esi],ebx
   15cda:	mov    eax,DWORD PTR [edi+0x4]
   15cdd:	cmp    esi,eax
   15cdf:	jne    0x15cec
   15ce1:	mov    DWORD PTR [eax+0x4],ebx
   15ce4:	mov    eax,DWORD PTR [edi+0x4]
   15ce7:	mov    DWORD PTR [eax+0x8],ebx
   15cea:	jmp    0x15cf2
   15cec:	cmp    esi,DWORD PTR [eax]
   15cee:	jne    0x15cf2
   15cf0:	mov    DWORD PTR [eax],ebx
   15cf2:	mov    eax,DWORD PTR [edi+0x4]
   15cf5:	mov    esi,ebx
   15cf7:	cmp    ebx,DWORD PTR [eax+0x4]
   15cfa:	je     0x15dae
   15d00:	mov    eax,DWORD PTR [esi+0x4]
   15d03:	xor    edx,edx
   15d05:	cmp    DWORD PTR [eax+0x1c],edx
   15d08:	jne    0x15dae
   15d0e:	mov    ecx,DWORD PTR [eax+0x4]
   15d11:	cmp    eax,DWORD PTR [ecx]
   15d13:	jne    0x15d4f
   15d15:	mov    ecx,DWORD PTR [ecx+0x8]
   15d18:	cmp    DWORD PTR [ecx+0x1c],edx
   15d1b:	je     0x15d56
   15d1d:	cmp    esi,DWORD PTR [eax+0x8]
   15d20:	jne    0x15d2c
   15d22:	mov    esi,eax
   15d24:	push   esi
   15d25:	mov    ecx,edi
   15d27:	call   0x1332c
   15d2c:	mov    eax,DWORD PTR [esi+0x4]
   15d2f:	mov    DWORD PTR [eax+0x1c],0x1
   15d36:	mov    eax,DWORD PTR [esi+0x4]
   15d39:	mov    eax,DWORD PTR [eax+0x4]
   15d3c:	and    DWORD PTR [eax+0x1c],0x0
   15d40:	mov    eax,DWORD PTR [esi+0x4]
   15d43:	push   DWORD PTR [eax+0x4]
   15d46:	mov    ecx,edi
   15d48:	call   0x1337a
   15d4d:	jmp    0x15da2
   15d4f:	mov    ecx,DWORD PTR [ecx]
   15d51:	cmp    DWORD PTR [ecx+0x1c],edx
   15d54:	jne    0x15d73
   15d56:	mov    edx,eax
   15d58:	xor    eax,eax
   15d5a:	inc    eax
   15d5b:	mov    DWORD PTR [edx+0x1c],eax
   15d5e:	mov    DWORD PTR [ecx+0x1c],eax
   15d61:	mov    eax,DWORD PTR [esi+0x4]
   15d64:	mov    eax,DWORD PTR [eax+0x4]
   15d67:	and    DWORD PTR [eax+0x1c],0x0
   15d6b:	mov    eax,DWORD PTR [esi+0x4]
   15d6e:	mov    esi,DWORD PTR [eax+0x4]
   15d71:	jmp    0x15da2
   15d73:	cmp    esi,DWORD PTR [eax]
   15d75:	jne    0x15d81
   15d77:	mov    esi,eax
   15d79:	push   esi
   15d7a:	mov    ecx,edi
   15d7c:	call   0x1337a
   15d81:	mov    eax,DWORD PTR [esi+0x4]
   15d84:	mov    DWORD PTR [eax+0x1c],0x1
   15d8b:	mov    eax,DWORD PTR [esi+0x4]
   15d8e:	mov    eax,DWORD PTR [eax+0x4]
   15d91:	and    DWORD PTR [eax+0x1c],0x0
   15d95:	mov    eax,DWORD PTR [esi+0x4]
   15d98:	push   DWORD PTR [eax+0x4]
   15d9b:	mov    ecx,edi
   15d9d:	call   0x1332c
   15da2:	mov    eax,DWORD PTR [edi+0x4]
   15da5:	cmp    esi,DWORD PTR [eax+0x4]
   15da8:	jne    0x15d00
   15dae:	mov    eax,DWORD PTR [edi+0x4]
   15db1:	mov    eax,DWORD PTR [eax+0x4]
   15db4:	pop    edi
   15db5:	mov    DWORD PTR [eax+0x1c],0x1
   15dbc:	mov    eax,DWORD PTR [ebp+0x8]
   15dbf:	pop    esi
   15dc0:	mov    DWORD PTR [eax],ebx
   15dc2:	pop    ebx
   15dc3:	pop    ebp
   15dc4:	ret    0x10
   15dc7:	int3   
   15dc8:	int3   
   15dc9:	int3   
   15dca:	int3   
   15dcb:	int3   
   15dcc:	mov    edi,edi
   15dce:	push   ebp
   15dcf:	mov    ebp,esp
   15dd1:	push   ecx
   15dd2:	push   DWORD PTR [ebp-0x4]
   15dd5:	push   DWORD PTR [ebp+0x10]
   15dd8:	push   DWORD PTR [ebp+0xc]
   15ddb:	push   DWORD PTR [ebp+0x8]
   15dde:	call   0x14b9c
   15de3:	add    esp,0x10
   15de6:	leave  
   15de7:	ret    
   15de8:	int3   
   15de9:	int3   
   15dea:	int3   
   15deb:	int3   
   15dec:	int3   
   15ded:	int3   
   15dee:	mov    edi,edi
   15df0:	push   ebp
   15df1:	mov    ebp,esp
   15df3:	push   esi
   15df4:	push   edi
   15df5:	mov    edi,DWORD PTR [ebp+0x8]
   15df8:	mov    al,BYTE PTR [edi+0x8]
   15dfb:	mov    esi,ecx
   15dfd:	mov    BYTE PTR [esi+0x8],al
   15e00:	call   0x144c8
   15e05:	push   edi
   15e06:	mov    ecx,esi
   15e08:	call   0x14b3a
   15e0d:	pop    edi
   15e0e:	mov    eax,esi
   15e10:	pop    esi
   15e11:	pop    ebp
   15e12:	ret    0x4
   15e15:	int3   
   15e16:	int3   
   15e17:	int3   
   15e18:	int3   
   15e19:	int3   
   15e1a:	mov    edi,edi
   15e1c:	push   ebp
   15e1d:	mov    ebp,esp
   15e1f:	push   ecx
   15e20:	push   esi
   15e21:	mov    esi,ecx
   15e23:	cmp    esi,DWORD PTR [ebp+0x8]
   15e26:	je     0x15e44
   15e28:	mov    eax,DWORD PTR [esi+0x4]
   15e2b:	mov    ecx,DWORD PTR [eax]
   15e2d:	push   eax
   15e2e:	push   ecx
   15e2f:	lea    eax,[ebp-0x4]
   15e32:	push   eax
   15e33:	mov    ecx,esi
   15e35:	call   0x14d42
   15e3a:	push   DWORD PTR [ebp+0x8]
   15e3d:	mov    ecx,esi
   15e3f:	call   0x14b3a
   15e44:	mov    eax,esi
   15e46:	pop    esi
   15e47:	leave  
   15e48:	ret    0x4
   15e4b:	int3   
   15e4c:	int3   
   15e4d:	int3   
   15e4e:	int3   
   15e4f:	int3   
   15e50:	mov    edi,edi
   15e52:	push   ebp
   15e53:	mov    ebp,esp
   15e55:	push   ecx
   15e56:	push   ebx
   15e57:	push   esi
   15e58:	push   edi
   15e59:	xor    edi,edi
   15e5b:	push   edi
   15e5c:	push   edi
   15e5d:	push   edi
   15e5e:	mov    esi,ecx
   15e60:	mov    eax,DWORD PTR [esi+0x10]
   15e63:	push   edi
   15e64:	push   eax
   15e65:	xor    ebx,ebx
   15e67:	call   DWORD PTR ds:0x1ee2c
   15e6d:	test   eax,eax
   15e6f:	jge    0x15e75
   15e71:	xor    eax,eax
   15e73:	jmp    0x15e9b
   15e75:	lea    eax,[ebp+0x8]
   15e78:	push   eax
   15e79:	lea    eax,[ebp-0x4]
   15e7c:	push   eax
   15e7d:	mov    ecx,esi
   15e7f:	call   0x13bd2
   15e84:	mov    eax,DWORD PTR [ebp-0x4]
   15e87:	cmp    eax,DWORD PTR [esi+0x4]
   15e8a:	je     0x15e8f
   15e8c:	mov    ebx,DWORD PTR [eax+0x10]
   15e8f:	push   edi
   15e90:	push   DWORD PTR [esi+0x10]
   15e93:	call   DWORD PTR ds:0x1ee28
   15e99:	mov    eax,ebx
   15e9b:	pop    edi
   15e9c:	pop    esi
   15e9d:	pop    ebx
   15e9e:	leave  
   15e9f:	ret    0x4
   15ea2:	int3   
   15ea3:	int3   
   15ea4:	int3   
   15ea5:	int3   
   15ea6:	int3   
   15ea7:	int3   
   15ea8:	push   0x10
   15eaa:	push   0x77388
   15eaf:	call   0x1dabc
   15eb4:	xor    ebx,ebx
   15eb6:	push   ebx
   15eb7:	push   ebx
   15eb8:	push   ebx
   15eb9:	push   ebx
   15eba:	push   0x77758
   15ebf:	call   DWORD PTR ds:0x1ee2c
   15ec5:	cmp    eax,ebx
   15ec7:	jl     0x15f84
   15ecd:	mov    DWORD PTR [ebp-0x4],ebx
   15ed0:	push   0xffffffff
   15ed2:	push   0x1dec8
   15ed7:	lea    ecx,[ebp-0x20]
   15eda:	call   0x1109a
   15edf:	mov    esi,DWORD PTR [ebp+0x8]
   15ee2:	push   esi
   15ee3:	lea    eax,[ebp+0x8]
   15ee6:	push   eax
   15ee7:	mov    ecx,DWORD PTR ds:0x77728
   15eed:	call   0x14bc6
   15ef2:	mov    eax,ds:0x77728
   15ef7:	mov    eax,DWORD PTR [eax+0x4]
   15efa:	mov    ecx,DWORD PTR [ebp+0x8]
   15efd:	cmp    ecx,eax
   15eff:	je     0x15f0d
   15f01:	add    ecx,0x14
   15f04:	push   ecx
   15f05:	lea    ecx,[ebp-0x20]
   15f08:	call   0x129c2
   15f0d:	mov    edx,DWORD PTR [esi+0x4]
   15f10:	mov    eax,DWORD PTR [ebp-0x1c]
   15f13:	lea    ecx,[eax+edx*1+0x2]
   15f17:	mov    eax,DWORD PTR [ebp+0xc]
   15f1a:	cmp    ecx,DWORD PTR [eax]
   15f1c:	jbe    0x15f29
   15f1e:	mov    DWORD PTR [eax],ecx
   15f20:	mov    DWORD PTR [eax+0x8],0x2
   15f27:	jmp    0x15f4c
   15f29:	mov    DWORD PTR [eax+0x8],ebx
   15f2c:	mov    esi,DWORD PTR [esi]
   15f2e:	lea    edi,[eax+0xc]
   15f31:	mov    cl,BYTE PTR [esi]
   15f33:	mov    BYTE PTR [edi],cl
   15f35:	inc    esi
   15f36:	inc    edi
   15f37:	cmp    cl,bl
   15f39:	jne    0x15f31
   15f3b:	mov    esi,DWORD PTR [ebp-0x20]
   15f3e:	lea    eax,[edx+eax*1+0xd]
   15f42:	mov    cl,BYTE PTR [esi]
   15f44:	mov    BYTE PTR [eax],cl
   15f46:	inc    esi
   15f47:	inc    eax
   15f48:	cmp    cl,bl
   15f4a:	jne    0x15f42
   15f4c:	push   DWORD PTR [ebp-0x20]
   15f4f:	call   0x1d9fc
   15f54:	pop    ecx
   15f55:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f5c:	jmp    0x15f78
   15f5e:	xor    eax,eax
   15f60:	inc    eax
   15f61:	ret    
   15f62:	mov    esp,DWORD PTR [ebp-0x18]
   15f65:	mov    eax,DWORD PTR [ebp+0xc]
   15f68:	mov    DWORD PTR [eax+0x8],0x4
   15f6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f76:	xor    ebx,ebx
   15f78:	push   ebx
   15f79:	push   0x77758
   15f7e:	call   DWORD PTR ds:0x1ee28
   15f84:	call   0x1db01
   15f89:	ret    0x8
   15f8c:	int3   
   15f8d:	int3   
   15f8e:	int3   
   15f8f:	int3   
   15f90:	int3   
   15f91:	int3   
   15f92:	push   0xc
   15f94:	push   0x773a8
   15f99:	call   0x1dabc
   15f9e:	xor    edi,edi
   15fa0:	push   edi
   15fa1:	push   edi
   15fa2:	push   edi
   15fa3:	push   edi
   15fa4:	push   0x77758
   15fa9:	call   DWORD PTR ds:0x1ee2c
   15faf:	cmp    eax,edi
   15fb1:	jl     0x16060
   15fb7:	mov    DWORD PTR [ebp-0x4],edi
   15fba:	lea    eax,[ebp+0x8]
   15fbd:	push   eax
   15fbe:	lea    eax,[ebp-0x1c]
   15fc1:	push   eax
   15fc2:	mov    esi,DWORD PTR ds:0x777b4
   15fc8:	mov    ecx,esi
   15fca:	call   0x13ca4
   15fcf:	mov    esi,DWORD PTR [esi+0x4]
   15fd2:	mov    ecx,DWORD PTR [ebp-0x1c]
   15fd5:	cmp    ecx,esi
   15fd7:	jne    0x15fe5
   15fd9:	mov    eax,DWORD PTR [ebp+0xc]
   15fdc:	mov    DWORD PTR [eax+0x8],0x1
   15fe3:	jmp    0x16031
   15fe5:	mov    eax,DWORD PTR [ecx+0x10]
   15fe8:	cmp    eax,edi
   15fea:	jne    0x15ff0
   15fec:	xor    edx,edx
   15fee:	jmp    0x15ff3
   15ff0:	mov    edx,DWORD PTR [eax+0x8]
   15ff3:	mov    eax,DWORD PTR [ebp+0xc]
   15ff6:	cmp    edx,DWORD PTR [eax]
   15ff8:	jbe    0x16005
   15ffa:	mov    DWORD PTR [eax],edx
   15ffc:	mov    DWORD PTR [eax+0x8],0x2
   16003:	jmp    0x16031
   16005:	mov    DWORD PTR [eax+0x8],edi
   16008:	mov    edx,DWORD PTR [ecx+0x10]
   1600b:	cmp    edx,edi
   1600d:	jne    0x16013
   1600f:	xor    edx,edx
   16011:	jmp    0x16016
   16013:	mov    edx,DWORD PTR [edx+0x8]
   16016:	mov    ecx,DWORD PTR [ecx+0x10]
   16019:	cmp    ecx,edi
   1601b:	jne    0x16021
   1601d:	xor    ecx,ecx
   1601f:	jmp    0x16023
   16021:	mov    ecx,DWORD PTR [ecx]
   16023:	push   edx
   16024:	push   ecx
   16025:	add    eax,0xc
   16028:	push   eax
   16029:	call   0x1da8a
   1602e:	add    esp,0xc
   16031:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16038:	jmp    0x16054
   1603a:	xor    eax,eax
   1603c:	inc    eax
   1603d:	ret    
   1603e:	mov    esp,DWORD PTR [ebp-0x18]
   16041:	mov    eax,DWORD PTR [ebp+0xc]
   16044:	mov    DWORD PTR [eax+0x8],0x4
   1604b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16052:	xor    edi,edi
   16054:	push   edi
   16055:	push   0x77758
   1605a:	call   DWORD PTR ds:0x1ee28
   16060:	call   0x1db01
   16065:	ret    0x8
   16068:	int3   
   16069:	int3   
   1606a:	int3   
   1606b:	int3   
   1606c:	int3   
   1606d:	int3   
   1606e:	mov    edi,edi
   16070:	push   ebp
   16071:	mov    ebp,esp
   16073:	push   ebx
   16074:	push   esi
   16075:	push   DWORD PTR [ebp+0x8]
   16078:	mov    esi,ecx
   1607a:	lea    eax,[ebp+0x8]
   1607d:	push   eax
   1607e:	lea    ecx,[esi+0x4]
   16081:	xor    bl,bl
   16083:	call   0x13d06
   16088:	mov    eax,DWORD PTR [ebp+0x8]
   1608b:	cmp    eax,DWORD PTR [esi+0x8]
   1608e:	je     0x1609e
   16090:	mov    ecx,DWORD PTR [ebp+0xc]
   16093:	add    eax,0x18
   16096:	push   eax
   16097:	call   0x12a50
   1609c:	inc    bl
   1609e:	pop    esi
   1609f:	mov    al,bl
   160a1:	pop    ebx
   160a2:	pop    ebp
   160a3:	ret    0x8
   160a6:	int3   
   160a7:	int3   
   160a8:	int3   
   160a9:	int3   
   160aa:	int3   
   160ab:	int3   
   160ac:	mov    edi,edi
   160ae:	push   ebp
   160af:	mov    ebp,esp
   160b1:	push   ecx
   160b2:	push   ecx
   160b3:	push   DWORD PTR [ebp+0xc]
   160b6:	lea    eax,[ebp-0x8]
   160b9:	push   eax
   160ba:	call   0x14caa
   160bf:	mov    eax,DWORD PTR [ebp+0x8]
   160c2:	mov    ecx,DWORD PTR [ebp-0x8]
   160c5:	mov    DWORD PTR [eax],ecx
   160c7:	mov    cl,BYTE PTR [ebp-0x4]
   160ca:	mov    BYTE PTR [eax+0x4],cl
   160cd:	leave  
   160ce:	ret    0x8
   160d1:	int3   
   160d2:	int3   
   160d3:	int3   
   160d4:	int3   
   160d5:	int3   
   160d6:	mov    edi,edi
   160d8:	push   ebp
   160d9:	mov    ebp,esp
   160db:	push   ecx
   160dc:	push   esi
   160dd:	mov    esi,ecx
   160df:	mov    eax,DWORD PTR [esi+0x4]
   160e2:	mov    ecx,DWORD PTR [eax]
   160e4:	push   eax
   160e5:	push   ecx
   160e6:	lea    eax,[ebp-0x4]
   160e9:	push   eax
   160ea:	mov    ecx,esi
   160ec:	call   0x14d42
   160f1:	push   DWORD PTR [esi+0x4]
   160f4:	call   0x1d9fc
   160f9:	xor    eax,eax
   160fb:	mov    DWORD PTR [esi+0x4],eax
   160fe:	mov    DWORD PTR [esi+0xc],eax
   16101:	dec    DWORD PTR ds:0x78c18
   16107:	pop    ecx
   16108:	pop    esi
   16109:	jne    0x16121
   1610b:	mov    ecx,DWORD PTR ds:0x78ab4
   16111:	mov    ds:0x78ab4,eax
   16116:	cmp    ecx,eax
   16118:	je     0x16121
   1611a:	push   ecx
   1611b:	call   0x1d9fc
   16120:	pop    ecx
   16121:	leave  
   16122:	ret    
   16123:	int3   
   16124:	int3   
   16125:	int3   
   16126:	int3   
   16127:	int3   
   16128:	mov    edi,edi
   1612a:	push   ebp
   1612b:	mov    ebp,esp
   1612d:	push   ecx
   1612e:	push   ecx
   1612f:	push   DWORD PTR [ebp+0xc]
   16132:	lea    eax,[ebp-0x8]
   16135:	push   eax
   16136:	call   0x14e0a
   1613b:	mov    eax,DWORD PTR [ebp+0x8]
   1613e:	mov    ecx,DWORD PTR [ebp-0x8]
   16141:	mov    DWORD PTR [eax],ecx
   16143:	mov    cl,BYTE PTR [ebp-0x4]
   16146:	mov    BYTE PTR [eax+0x4],cl
   16149:	leave  
   1614a:	ret    0x8
   1614d:	int3   
   1614e:	int3   
   1614f:	int3   
   16150:	int3   
   16151:	int3   
   16152:	mov    edi,edi
   16154:	push   ebp
   16155:	mov    ebp,esp
   16157:	push   ecx
   16158:	push   ecx
   16159:	push   DWORD PTR [ebp+0x8]
   1615c:	lea    eax,[ebp-0x8]
   1615f:	push   eax
   16160:	call   0x1403a
   16165:	and    DWORD PTR [ebp+0x8],0x0
   16169:	lea    eax,[ebp+0x8]
   1616c:	push   eax
   1616d:	push   DWORD PTR [ebp-0x4]
   16170:	push   DWORD PTR [ebp-0x8]
   16173:	call   0x15dcc
   16178:	mov    eax,DWORD PTR [ebp+0x8]
   1617b:	add    esp,0xc
   1617e:	leave  
   1617f:	ret    0x4
   16182:	int3   
   16183:	int3   
   16184:	int3   
   16185:	int3   
   16186:	int3   
   16187:	int3   
   16188:	mov    edi,edi
   1618a:	push   ebp
   1618b:	mov    ebp,esp
   1618d:	push   ecx
   1618e:	push   ecx
   1618f:	push   esi
   16190:	push   DWORD PTR [ebp+0x8]
   16193:	lea    eax,[ebp-0x8]
   16196:	push   eax
   16197:	mov    esi,ecx
   16199:	call   0x140ce
   1619e:	and    DWORD PTR [ebp+0x8],0x0
   161a2:	lea    eax,[ebp+0x8]
   161a5:	push   eax
   161a6:	push   DWORD PTR [ebp-0x4]
   161a9:	push   DWORD PTR [ebp-0x8]
   161ac:	call   0x13a36
   161b1:	add    esp,0xc
   161b4:	push   DWORD PTR [ebp-0x4]
   161b7:	lea    eax,[ebp-0x4]
   161ba:	push   DWORD PTR [ebp-0x8]
   161bd:	mov    ecx,esi
   161bf:	push   eax
   161c0:	call   0x14ea2
   161c5:	mov    eax,DWORD PTR [ebp+0x8]
   161c8:	pop    esi
   161c9:	leave  
   161ca:	ret    0x4
   161cd:	int3   
   161ce:	int3   
   161cf:	int3   
   161d0:	int3   
   161d1:	int3   
   161d2:	mov    edi,edi
   161d4:	push   ebp
   161d5:	mov    ebp,esp
   161d7:	push   ecx
   161d8:	push   ebx
   161d9:	push   esi
   161da:	push   edi
   161db:	mov    edi,ecx
   161dd:	mov    eax,DWORD PTR [edi+0x4]
   161e0:	mov    esi,DWORD PTR [eax+0x4]
   161e3:	mov    ebx,eax
   161e5:	mov    al,0x1
   161e7:	jmp    0x16202
   161e9:	lea    eax,[esi+0x10]
   161ec:	push   eax
   161ed:	push   DWORD PTR [ebp+0xc]
   161f0:	mov    ebx,esi
   161f2:	call   0x197b8
   161f7:	test   al,al
   161f9:	je     0x161ff
   161fb:	mov    esi,DWORD PTR [esi]
   161fd:	jmp    0x16202
   161ff:	mov    esi,DWORD PTR [esi+0x8]
   16202:	cmp    esi,DWORD PTR ds:0x78ab8
   16208:	jne    0x161e9
   1620a:	cmp    BYTE PTR [edi+0x8],0x0
   1620e:	je     0x1622b
   16210:	push   DWORD PTR [ebp+0xc]
   16213:	lea    eax,[ebp+0xc]
   16216:	push   ebx
   16217:	push   esi
   16218:	push   eax
   16219:	mov    ecx,edi
   1621b:	call   0x151cc
   16220:	mov    ecx,DWORD PTR [eax]
   16222:	mov    eax,DWORD PTR [ebp+0x8]
   16225:	mov    BYTE PTR [eax+0x4],0x1
   16229:	jmp    0x1625e
   1622b:	mov    DWORD PTR [ebp-0x4],ebx
   1622e:	test   al,al
   16230:	je     0x16241
   16232:	mov    eax,DWORD PTR [edi+0x4]
   16235:	cmp    ebx,DWORD PTR [eax]
   16237:	je     0x16210
   16239:	lea    ecx,[ebp-0x4]
   1623c:	call   0x114f4
   16241:	push   DWORD PTR [ebp+0xc]
   16244:	mov    eax,DWORD PTR [ebp-0x4]
   16247:	add    eax,0x10
   1624a:	push   eax
   1624b:	call   0x197b8
   16250:	test   al,al
   16252:	jne    0x16210
   16254:	mov    eax,DWORD PTR [ebp+0x8]
   16257:	mov    ecx,DWORD PTR [ebp-0x4]
   1625a:	mov    BYTE PTR [eax+0x4],0x0
   1625e:	pop    edi
   1625f:	pop    esi
   16260:	mov    DWORD PTR [eax],ecx
   16262:	pop    ebx
   16263:	leave  
   16264:	ret    0x8
   16267:	int3   
   16268:	int3   
   16269:	int3   
   1626a:	int3   
   1626b:	int3   
   1626c:	mov    edi,edi
   1626e:	push   ebp
   1626f:	mov    ebp,esp
   16271:	push   ecx
   16272:	push   esi
   16273:	mov    esi,ecx
   16275:	cmp    DWORD PTR [esi+0xc],0x0
   16279:	mov    ecx,DWORD PTR [ebp+0xc]
   1627c:	je     0x162b6
   1627e:	mov    eax,DWORD PTR [esi+0x4]
   16281:	cmp    ecx,DWORD PTR [eax]
   16283:	jne    0x162b6
   16285:	cmp    DWORD PTR [ebp+0x10],eax
   16288:	jne    0x162b6
   1628a:	push   DWORD PTR [eax+0x4]
   1628d:	mov    ecx,esi
   1628f:	call   0x15182
   16294:	mov    ecx,DWORD PTR ds:0x78ab8
   1629a:	mov    eax,DWORD PTR [esi+0x4]
   1629d:	mov    DWORD PTR [eax+0x4],ecx
   162a0:	mov    eax,DWORD PTR [esi+0x4]
   162a3:	and    DWORD PTR [esi+0xc],0x0
   162a7:	mov    DWORD PTR [eax],eax
   162a9:	mov    eax,DWORD PTR [esi+0x4]
   162ac:	mov    DWORD PTR [eax+0x8],eax
   162af:	mov    eax,DWORD PTR [esi+0x4]
   162b2:	mov    ecx,DWORD PTR [eax]
   162b4:	jmp    0x162db
   162b6:	cmp    ecx,DWORD PTR [ebp+0x10]
   162b9:	je     0x162db
   162bb:	push   edi
   162bc:	mov    edi,ecx
   162be:	lea    ecx,[ebp+0xc]
   162c1:	call   0x12e98
   162c6:	push   edi
   162c7:	lea    eax,[ebp-0x4]
   162ca:	push   eax
   162cb:	mov    ecx,esi
   162cd:	call   0x14f20
   162d2:	mov    ecx,DWORD PTR [ebp+0xc]
   162d5:	cmp    ecx,DWORD PTR [ebp+0x10]
   162d8:	jne    0x162bc
   162da:	pop    edi
   162db:	mov    eax,DWORD PTR [ebp+0x8]
   162de:	mov    DWORD PTR [eax],ecx
   162e0:	pop    esi
   162e1:	leave  
   162e2:	ret    0xc
   162e5:	int3   
   162e6:	int3   
   162e7:	int3   
   162e8:	int3   
   162e9:	int3   
   162ea:	mov    edi,edi
   162ec:	push   ebp
   162ed:	mov    ebp,esp
   162ef:	push   ecx
   162f0:	push   ebx
   162f1:	push   esi
   162f2:	push   edi
   162f3:	mov    edi,ecx
   162f5:	mov    eax,DWORD PTR [edi+0x4]
   162f8:	mov    esi,DWORD PTR [eax+0x4]
   162fb:	mov    ebx,eax
   162fd:	mov    al,0x1
   162ff:	jmp    0x1631a
   16301:	lea    eax,[esi+0x10]
   16304:	push   eax
   16305:	push   DWORD PTR [ebp+0xc]
   16308:	mov    ebx,esi
   1630a:	call   0x197b8
   1630f:	test   al,al
   16311:	je     0x16317
   16313:	mov    esi,DWORD PTR [esi]
   16315:	jmp    0x1631a
   16317:	mov    esi,DWORD PTR [esi+0x8]
   1631a:	cmp    esi,DWORD PTR ds:0x78abc
   16320:	jne    0x16301
   16322:	cmp    BYTE PTR [edi+0x8],0x0
   16326:	je     0x16343
   16328:	push   DWORD PTR [ebp+0xc]
   1632b:	lea    eax,[ebp+0xc]
   1632e:	push   ebx
   1632f:	push   esi
   16330:	push   eax
   16331:	mov    ecx,edi
   16333:	call   0x155ce
   16338:	mov    ecx,DWORD PTR [eax]
   1633a:	mov    eax,DWORD PTR [ebp+0x8]
   1633d:	mov    BYTE PTR [eax+0x4],0x1
   16341:	jmp    0x16376
   16343:	mov    DWORD PTR [ebp-0x4],ebx
   16346:	test   al,al
   16348:	je     0x16359
   1634a:	mov    eax,DWORD PTR [edi+0x4]
   1634d:	cmp    ebx,DWORD PTR [eax]
   1634f:	je     0x16328
   16351:	lea    ecx,[ebp-0x4]
   16354:	call   0x113ac
   16359:	push   DWORD PTR [ebp+0xc]
   1635c:	mov    eax,DWORD PTR [ebp-0x4]
   1635f:	add    eax,0x10
   16362:	push   eax
   16363:	call   0x197b8
   16368:	test   al,al
   1636a:	jne    0x16328
   1636c:	mov    eax,DWORD PTR [ebp+0x8]
   1636f:	mov    ecx,DWORD PTR [ebp-0x4]
   16372:	mov    BYTE PTR [eax+0x4],0x0
   16376:	pop    edi
   16377:	pop    esi
   16378:	mov    DWORD PTR [eax],ecx
   1637a:	pop    ebx
   1637b:	leave  
   1637c:	ret    0x8
   1637f:	int3   
   16380:	int3   
   16381:	int3   
   16382:	int3   
   16383:	int3   
   16384:	mov    edi,edi
   16386:	push   ebp
   16387:	mov    ebp,esp
   16389:	push   ecx
   1638a:	push   esi
   1638b:	mov    esi,ecx
   1638d:	cmp    DWORD PTR [esi+0xc],0x0
   16391:	mov    ecx,DWORD PTR [ebp+0xc]
   16394:	je     0x163ce
   16396:	mov    eax,DWORD PTR [esi+0x4]
   16399:	cmp    ecx,DWORD PTR [eax]
   1639b:	jne    0x163ce
   1639d:	cmp    DWORD PTR [ebp+0x10],eax
   163a0:	jne    0x163ce
   163a2:	push   DWORD PTR [eax+0x4]
   163a5:	mov    ecx,esi
   163a7:	call   0x15584
   163ac:	mov    ecx,DWORD PTR ds:0x78abc
   163b2:	mov    eax,DWORD PTR [esi+0x4]
   163b5:	mov    DWORD PTR [eax+0x4],ecx
   163b8:	mov    eax,DWORD PTR [esi+0x4]
   163bb:	and    DWORD PTR [esi+0xc],0x0
   163bf:	mov    DWORD PTR [eax],eax
   163c1:	mov    eax,DWORD PTR [esi+0x4]
   163c4:	mov    DWORD PTR [eax+0x8],eax
   163c7:	mov    eax,DWORD PTR [esi+0x4]
   163ca:	mov    ecx,DWORD PTR [eax]
   163cc:	jmp    0x163f3
   163ce:	cmp    ecx,DWORD PTR [ebp+0x10]
   163d1:	je     0x163f3
   163d3:	push   edi
   163d4:	mov    edi,ecx
   163d6:	lea    ecx,[ebp+0xc]
   163d9:	call   0x13882
   163de:	push   edi
   163df:	lea    eax,[ebp-0x4]
   163e2:	push   eax
   163e3:	mov    ecx,esi
   163e5:	call   0x15322
   163ea:	mov    ecx,DWORD PTR [ebp+0xc]
   163ed:	cmp    ecx,DWORD PTR [ebp+0x10]
   163f0:	jne    0x163d4
   163f2:	pop    edi
   163f3:	mov    eax,DWORD PTR [ebp+0x8]
   163f6:	mov    DWORD PTR [eax],ecx
   163f8:	pop    esi
   163f9:	leave  
   163fa:	ret    0xc
   163fd:	int3   
   163fe:	int3   
   163ff:	int3   
   16400:	int3   
   16401:	int3   
   16402:	mov    edi,edi
   16404:	push   ebp
   16405:	mov    ebp,esp
   16407:	push   ecx
   16408:	push   ebx
   16409:	push   esi
   1640a:	push   edi
   1640b:	mov    edi,ecx
   1640d:	mov    eax,DWORD PTR [edi+0x4]
   16410:	mov    esi,DWORD PTR [eax+0x4]
   16413:	mov    ebx,eax
   16415:	mov    al,0x1
   16417:	jmp    0x16432
   16419:	lea    eax,[esi+0xc]
   1641c:	push   eax
   1641d:	push   DWORD PTR [ebp+0xc]
   16420:	mov    ebx,esi
   16422:	call   0x197b8
   16427:	test   al,al
   16429:	je     0x1642f
   1642b:	mov    esi,DWORD PTR [esi]
   1642d:	jmp    0x16432
   1642f:	mov    esi,DWORD PTR [esi+0x8]
   16432:	cmp    esi,DWORD PTR ds:0x78ac0
   16438:	jne    0x16419
   1643a:	cmp    BYTE PTR [edi+0x8],0x0
   1643e:	je     0x1645b
   16440:	push   DWORD PTR [ebp+0xc]
   16443:	lea    eax,[ebp+0xc]
   16446:	push   ebx
   16447:	push   esi
   16448:	push   eax
   16449:	mov    ecx,edi
   1644b:	call   0x15724
   16450:	mov    ecx,DWORD PTR [eax]
   16452:	mov    eax,DWORD PTR [ebp+0x8]
   16455:	mov    BYTE PTR [eax+0x4],0x1
   16459:	jmp    0x1648e
   1645b:	mov    DWORD PTR [ebp-0x4],ebx
   1645e:	test   al,al
   16460:	je     0x16471
   16462:	mov    eax,DWORD PTR [edi+0x4]
   16465:	cmp    ebx,DWORD PTR [eax]
   16467:	je     0x16440
   16469:	lea    ecx,[ebp-0x4]
   1646c:	call   0x11430
   16471:	push   DWORD PTR [ebp+0xc]
   16474:	mov    eax,DWORD PTR [ebp-0x4]
   16477:	add    eax,0xc
   1647a:	push   eax
   1647b:	call   0x197b8
   16480:	test   al,al
   16482:	jne    0x16440
   16484:	mov    eax,DWORD PTR [ebp+0x8]
   16487:	mov    ecx,DWORD PTR [ebp-0x4]
   1648a:	mov    BYTE PTR [eax+0x4],0x0
   1648e:	pop    edi
   1648f:	pop    esi
   16490:	mov    DWORD PTR [eax],ecx
   16492:	pop    ebx
   16493:	leave  
   16494:	ret    0x8
   16497:	int3   
   16498:	int3   
   16499:	int3   
   1649a:	int3   
   1649b:	int3   
   1649c:	mov    edi,edi
   1649e:	push   ebp
   1649f:	mov    ebp,esp
   164a1:	push   ecx
   164a2:	push   ebx
   164a3:	push   esi
   164a4:	push   edi
   164a5:	mov    edi,ecx
   164a7:	mov    eax,DWORD PTR [edi+0x4]
   164aa:	mov    esi,DWORD PTR [eax+0x4]
   164ad:	mov    ebx,eax
   164af:	mov    eax,ds:0x78ac4
   164b4:	mov    dl,0x1
   164b6:	cmp    esi,eax
   164b8:	je     0x164d6
   164ba:	mov    ecx,DWORD PTR [ebp+0xc]
   164bd:	mov    ecx,DWORD PTR [ecx]
   164bf:	cmp    ecx,DWORD PTR [esi+0xc]
   164c2:	mov    ebx,esi
   164c4:	setl   dl
   164c7:	test   dl,dl
   164c9:	je     0x164cf
   164cb:	mov    esi,DWORD PTR [esi]
   164cd:	jmp    0x164d2
   164cf:	mov    esi,DWORD PTR [esi+0x8]
   164d2:	cmp    esi,eax
   164d4:	jne    0x164bf
   164d6:	cmp    BYTE PTR [edi+0x8],0x0
   164da:	je     0x164f7
   164dc:	push   DWORD PTR [ebp+0xc]
   164df:	push   ebx
   164e0:	push   esi
   164e1:	lea    eax,[ebp+0xc]
   164e4:	push   eax
   164e5:	mov    ecx,edi
   164e7:	call   0x15b26
   164ec:	mov    ecx,DWORD PTR [eax]
   164ee:	mov    eax,DWORD PTR [ebp+0x8]
   164f1:	mov    BYTE PTR [eax+0x4],0x1
   164f5:	jmp    0x16526
   164f7:	mov    ecx,ebx
   164f9:	mov    DWORD PTR [ebp-0x4],ecx
   164fc:	test   dl,dl
   164fe:	je     0x16512
   16500:	mov    eax,DWORD PTR [edi+0x4]
   16503:	cmp    ebx,DWORD PTR [eax]
   16505:	je     0x164dc
   16507:	lea    ecx,[ebp-0x4]
   1650a:	call   0x114b4
   1650f:	mov    ecx,DWORD PTR [ebp-0x4]
   16512:	mov    edx,DWORD PTR [ecx+0xc]
   16515:	mov    eax,DWORD PTR [ebp+0xc]
   16518:	cmp    edx,DWORD PTR [eax]
   1651a:	jge    0x1651f
   1651c:	push   eax
   1651d:	jmp    0x164df
   1651f:	mov    eax,DWORD PTR [ebp+0x8]
   16522:	mov    BYTE PTR [eax+0x4],0x0
   16526:	pop    edi
   16527:	pop    esi
   16528:	mov    DWORD PTR [eax],ecx
   1652a:	pop    ebx
   1652b:	leave  
   1652c:	ret    0x8
   1652f:	int3   
   16530:	int3   
   16531:	int3   
   16532:	int3   
   16533:	int3   
   16534:	mov    edi,edi
   16536:	push   ebp
   16537:	mov    ebp,esp
   16539:	push   ecx
   1653a:	push   esi
   1653b:	mov    esi,ecx
   1653d:	cmp    DWORD PTR [esi+0xc],0x0
   16541:	mov    ecx,DWORD PTR [ebp+0xc]
   16544:	je     0x1657e
   16546:	mov    eax,DWORD PTR [esi+0x4]
   16549:	cmp    ecx,DWORD PTR [eax]
   1654b:	jne    0x1657e
   1654d:	cmp    DWORD PTR [ebp+0x10],eax
   16550:	jne    0x1657e
   16552:	push   DWORD PTR [eax+0x4]
   16555:	mov    ecx,esi
   16557:	call   0x15adc
   1655c:	mov    ecx,DWORD PTR ds:0x78ac4
   16562:	mov    eax,DWORD PTR [esi+0x4]
   16565:	mov    DWORD PTR [eax+0x4],ecx
   16568:	mov    eax,DWORD PTR [esi+0x4]
   1656b:	and    DWORD PTR [esi+0xc],0x0
   1656f:	mov    DWORD PTR [eax],eax
   16571:	mov    eax,DWORD PTR [esi+0x4]
   16574:	mov    DWORD PTR [eax+0x8],eax
   16577:	mov    eax,DWORD PTR [esi+0x4]
   1657a:	mov    ecx,DWORD PTR [eax]
   1657c:	jmp    0x165a3
   1657e:	cmp    ecx,DWORD PTR [ebp+0x10]
   16581:	je     0x165a3
   16583:	push   edi
   16584:	mov    edi,ecx
   16586:	lea    ecx,[ebp+0xc]
   16589:	call   0x1156a
   1658e:	push   edi
   1658f:	lea    eax,[ebp-0x4]
   16592:	push   eax
   16593:	mov    ecx,esi
   16595:	call   0x1587a
   1659a:	mov    ecx,DWORD PTR [ebp+0xc]
   1659d:	cmp    ecx,DWORD PTR [ebp+0x10]
   165a0:	jne    0x16584
   165a2:	pop    edi
   165a3:	mov    eax,DWORD PTR [ebp+0x8]
   165a6:	mov    DWORD PTR [eax],ecx
   165a8:	pop    esi
   165a9:	leave  
   165aa:	ret    0xc
   165ad:	int3   
   165ae:	int3   
   165af:	int3   
   165b0:	int3   
   165b1:	int3   
   165b2:	mov    edi,edi
   165b4:	push   ebp
   165b5:	mov    ebp,esp
   165b7:	push   ecx
   165b8:	push   ebx
   165b9:	push   esi
   165ba:	push   edi
   165bb:	mov    edi,ecx
   165bd:	mov    eax,DWORD PTR [edi+0x4]
   165c0:	mov    esi,DWORD PTR [eax+0x4]
   165c3:	mov    ebx,eax
   165c5:	mov    al,0x1
   165c7:	jmp    0x165e2
   165c9:	lea    eax,[esi+0xc]
   165cc:	push   eax
   165cd:	push   DWORD PTR [ebp+0xc]
   165d0:	mov    ebx,esi
   165d2:	call   0x197e8
   165d7:	test   al,al
   165d9:	je     0x165df
   165db:	mov    esi,DWORD PTR [esi]
   165dd:	jmp    0x165e2
   165df:	mov    esi,DWORD PTR [esi+0x8]
   165e2:	cmp    esi,DWORD PTR ds:0x78acc
   165e8:	jne    0x165c9
   165ea:	cmp    BYTE PTR [edi+0x8],0x0
   165ee:	je     0x1660b
   165f0:	push   DWORD PTR [ebp+0xc]
   165f3:	lea    eax,[ebp+0xc]
   165f6:	push   ebx
   165f7:	push   esi
   165f8:	push   eax
   165f9:	mov    ecx,edi
   165fb:	call   0x15c76
   16600:	mov    ecx,DWORD PTR [eax]
   16602:	mov    eax,DWORD PTR [ebp+0x8]
   16605:	mov    BYTE PTR [eax+0x4],0x1
   16609:	jmp    0x1663e
   1660b:	mov    DWORD PTR [ebp-0x4],ebx
   1660e:	test   al,al
   16610:	je     0x16621
   16612:	mov    eax,DWORD PTR [edi+0x4]
   16615:	cmp    ebx,DWORD PTR [eax]
   16617:	je     0x165f0
   16619:	lea    ecx,[ebp-0x4]
   1661c:	call   0x133ca
   16621:	push   DWORD PTR [ebp+0xc]
   16624:	mov    eax,DWORD PTR [ebp-0x4]
   16627:	add    eax,0xc
   1662a:	push   eax
   1662b:	call   0x197e8
   16630:	test   al,al
   16632:	jne    0x165f0
   16634:	mov    eax,DWORD PTR [ebp+0x8]
   16637:	mov    ecx,DWORD PTR [ebp-0x4]
   1663a:	mov    BYTE PTR [eax+0x4],0x0
   1663e:	pop    edi
   1663f:	pop    esi
   16640:	mov    DWORD PTR [eax],ecx
   16642:	pop    ebx
   16643:	leave  
   16644:	ret    0x8
   16647:	int3   
   16648:	int3   
   16649:	int3   
   1664a:	int3   
   1664b:	int3   
   1664c:	mov    edi,edi
   1664e:	push   ebp
   1664f:	mov    ebp,esp
   16651:	sub    esp,0x10
   16654:	push   DWORD PTR [ebp+0x8]
   16657:	lea    ecx,[ebp-0x10]
   1665a:	call   0x15dee
   1665f:	push   DWORD PTR [ebp+0xc]
   16662:	mov    ecx,DWORD PTR [ebp+0x8]
   16665:	call   0x15e1a
   1666a:	mov    ecx,DWORD PTR [ebp+0xc]
   1666d:	lea    eax,[ebp-0x10]
   16670:	push   eax
   16671:	call   0x15e1a
   16676:	lea    ecx,[ebp-0x10]
   16679:	call   0x160d6
   1667e:	leave  
   1667f:	ret    0x8
   16682:	int3   
   16683:	int3   
   16684:	int3   
   16685:	int3   
   16686:	int3   
   16687:	int3   
   16688:	mov    edi,edi
   1668a:	push   ebp
   1668b:	mov    ebp,esp
   1668d:	push   esi
   1668e:	push   edi
   1668f:	xor    edi,edi
   16691:	push   edi
   16692:	push   edi
   16693:	push   edi
   16694:	mov    esi,ecx
   16696:	mov    eax,DWORD PTR [esi+0x10]
   16699:	push   edi
   1669a:	push   eax
   1669b:	call   DWORD PTR ds:0x1ee2c
   166a1:	test   eax,eax
   166a3:	jl     0x166ba
   166a5:	lea    eax,[ebp+0x8]
   166a8:	push   eax
   166a9:	mov    ecx,esi
   166ab:	call   0x14c60
   166b0:	push   edi
   166b1:	push   DWORD PTR [esi+0x10]
   166b4:	call   DWORD PTR ds:0x1ee28
   166ba:	pop    edi
   166bb:	pop    esi
   166bc:	pop    ebp
   166bd:	ret    0x4
   166c0:	int3   
   166c1:	int3   
   166c2:	int3   
   166c3:	int3   
   166c4:	int3   
   166c5:	int3   
   166c6:	mov    edi,edi
   166c8:	push   ebp
   166c9:	mov    ebp,esp
   166cb:	sub    esp,0x50
   166ce:	test   BYTE PTR [ebp+0x8],0x20
   166d2:	je     0x16781
   166d8:	push   ebx
   166d9:	lea    ecx,[ebp-0x50]
   166dc:	call   0x136dc
   166e1:	mov    ecx,DWORD PTR ds:0x780e8
   166e7:	lea    eax,[ebp-0x50]
   166ea:	push   eax
   166eb:	push   DWORD PTR [ebp+0xc]
   166ee:	call   0x1606e
   166f3:	test   al,al
   166f5:	je     0x1677d
   166fb:	mov    ecx,DWORD PTR [ebp+0x10]
   166fe:	lea    eax,[ebp-0x48]
   16701:	push   eax
   16702:	call   0x129c2
   16707:	mov    eax,DWORD PTR [ebp+0x14]
   1670a:	mov    ecx,DWORD PTR [ebp-0x40]
   1670d:	mov    DWORD PTR [eax],ecx
   1670f:	mov    ecx,DWORD PTR [ebp+0x18]
   16712:	lea    eax,[ebp-0x3c]
   16715:	push   eax
   16716:	call   0x129c2
   1671b:	mov    ecx,DWORD PTR [ebp+0x1c]
   1671e:	lea    eax,[ebp-0x34]
   16721:	push   eax
   16722:	call   0x129c2
   16727:	mov    ecx,DWORD PTR [ebp+0x20]
   1672a:	lea    eax,[ebp-0x2c]
   1672d:	push   eax
   1672e:	call   0x129c2
   16733:	mov    eax,DWORD PTR [ebp+0x28]
   16736:	mov    ecx,DWORD PTR [ebp-0x24]
   16739:	mov    DWORD PTR [eax],ecx
   1673b:	mov    ecx,DWORD PTR [ebp+0x24]
   1673e:	lea    eax,[ebp-0x8]
   16741:	push   eax
   16742:	call   0x129c2
   16747:	mov    eax,DWORD PTR [ebp+0x30]
   1674a:	mov    ecx,DWORD PTR [ebp-0x18]
   1674d:	mov    DWORD PTR [eax],ecx
   1674f:	mov    ecx,DWORD PTR [ebp-0x14]
   16752:	mov    DWORD PTR [eax+0x4],ecx
   16755:	mov    eax,DWORD PTR [ebp+0x34]
   16758:	mov    ecx,DWORD PTR [ebp-0x10]
   1675b:	mov    DWORD PTR [eax],ecx
   1675d:	mov    ecx,DWORD PTR [ebp-0xc]
   16760:	mov    DWORD PTR [eax+0x4],ecx
   16763:	mov    eax,DWORD PTR [ebp+0x2c]
   16766:	mov    ecx,DWORD PTR [ebp-0x20]
   16769:	mov    DWORD PTR [eax],ecx
   1676b:	mov    bl,0x1
   1676d:	lea    ecx,[ebp-0x50]
   16770:	call   0x11eba
   16775:	mov    al,bl
   16777:	pop    ebx
   16778:	jmp    0x16818
   1677d:	xor    bl,bl
   1677f:	jmp    0x1676d
   16781:	mov    ecx,DWORD PTR ds:0x780e0
   16787:	push   esi
   16788:	push   DWORD PTR [ebp+0xc]
   1678b:	lea    eax,[ebp+0xc]
   1678e:	push   eax
   1678f:	call   0x13c14
   16794:	mov    esi,DWORD PTR [ebp+0xc]
   16797:	mov    eax,ds:0x780e0
   1679c:	cmp    esi,DWORD PTR [eax+0x4]
   1679f:	jne    0x167a5
   167a1:	xor    al,al
   167a3:	jmp    0x16817
   167a5:	mov    ecx,DWORD PTR [ebp+0x10]
   167a8:	lea    eax,[esi+0x20]
   167ab:	push   eax
   167ac:	call   0x129c2
   167b1:	mov    eax,DWORD PTR [esi+0x28]
   167b4:	mov    ecx,DWORD PTR [ebp+0x14]
   167b7:	mov    DWORD PTR [ecx],eax
   167b9:	mov    ecx,DWORD PTR [ebp+0x18]
   167bc:	lea    eax,[esi+0x2c]
   167bf:	push   eax
   167c0:	call   0x129c2
   167c5:	mov    ecx,DWORD PTR [ebp+0x1c]
   167c8:	lea    eax,[esi+0x34]
   167cb:	push   eax
   167cc:	call   0x129c2
   167d1:	mov    ecx,DWORD PTR [ebp+0x20]
   167d4:	lea    eax,[esi+0x3c]
   167d7:	push   eax
   167d8:	call   0x129c2
   167dd:	mov    ecx,DWORD PTR [ebp+0x24]
   167e0:	lea    eax,[esi+0x60]
   167e3:	push   eax
   167e4:	call   0x129c2
   167e9:	mov    eax,DWORD PTR [esi+0x44]
   167ec:	mov    ecx,DWORD PTR [ebp+0x28]
   167ef:	mov    DWORD PTR [ecx],eax
   167f1:	mov    ecx,DWORD PTR [esi+0x50]
   167f4:	mov    eax,DWORD PTR [ebp+0x30]
   167f7:	mov    DWORD PTR [eax],ecx
   167f9:	mov    ecx,DWORD PTR [esi+0x54]
   167fc:	mov    DWORD PTR [eax+0x4],ecx
   167ff:	mov    ecx,DWORD PTR [esi+0x58]
   16802:	mov    eax,DWORD PTR [ebp+0x34]
   16805:	mov    DWORD PTR [eax],ecx
   16807:	mov    ecx,DWORD PTR [esi+0x5c]
   1680a:	mov    DWORD PTR [eax+0x4],ecx
   1680d:	mov    eax,DWORD PTR [esi+0x48]
   16810:	mov    ecx,DWORD PTR [ebp+0x2c]
   16813:	mov    DWORD PTR [ecx],eax
   16815:	mov    al,0x1
   16817:	pop    esi
   16818:	leave  
   16819:	ret    0x30
   1681c:	int3   
   1681d:	int3   
   1681e:	int3   
   1681f:	int3   
   16820:	int3   
   16821:	int3   
   16822:	push   0x54
   16824:	push   0x773c8
   16829:	call   0x1dabc
   1682e:	xor    esi,esi
   16830:	push   esi
   16831:	push   esi
   16832:	push   esi
   16833:	push   esi
   16834:	push   0x77758
   16839:	call   DWORD PTR ds:0x1ee2c
   1683f:	cmp    eax,esi
   16841:	jl     0x16a02
   16847:	mov    DWORD PTR [ebp-0x4],esi
   1684a:	or     edi,0xffffffff
   1684d:	push   edi
   1684e:	mov    esi,0x1dec8
   16853:	push   esi
   16854:	lea    ecx,[ebp-0x54]
   16857:	call   0x1109a
   1685c:	push   edi
   1685d:	push   esi
   1685e:	lea    ecx,[ebp-0x4c]
   16861:	call   0x1109a
   16866:	push   edi
   16867:	push   esi
   16868:	lea    ecx,[ebp-0x44]
   1686b:	call   0x1109a
   16870:	push   edi
   16871:	push   esi
   16872:	lea    ecx,[ebp-0x3c]
   16875:	call   0x1109a
   1687a:	push   edi
   1687b:	push   esi
   1687c:	lea    ecx,[ebp-0x34]
   1687f:	call   0x1109a
   16884:	lea    eax,[ebp-0x64]
   16887:	push   eax
   16888:	lea    eax,[ebp-0x5c]
   1688b:	push   eax
   1688c:	lea    eax,[ebp-0x20]
   1688f:	push   eax
   16890:	lea    eax,[ebp-0x1c]
   16893:	push   eax
   16894:	lea    eax,[ebp-0x34]
   16897:	push   eax
   16898:	lea    eax,[ebp-0x3c]
   1689b:	push   eax
   1689c:	lea    eax,[ebp-0x44]
   1689f:	push   eax
   168a0:	lea    eax,[ebp-0x54]
   168a3:	push   eax
   168a4:	lea    eax,[ebp-0x24]
   168a7:	push   eax
   168a8:	lea    eax,[ebp-0x4c]
   168ab:	push   eax
   168ac:	mov    edi,DWORD PTR [ebp+0x8]
   168af:	push   edi
   168b0:	mov    esi,DWORD PTR [ebp+0xc]
   168b3:	push   DWORD PTR [esi+0x4]
   168b6:	call   0x166c6
   168bb:	test   al,al
   168bd:	jne    0x168cb
   168bf:	mov    DWORD PTR [esi+0x8],0x1
   168c6:	jmp    0x169b0
   168cb:	mov    edx,DWORD PTR [edi+0x4]
   168ce:	mov    eax,DWORD PTR [ebp-0x48]
   168d1:	lea    ecx,[eax+edx*1+0x2]
   168d5:	mov    eax,DWORD PTR [ebp-0x50]
   168d8:	lea    edi,[eax+ecx*1+0x5]
   168dc:	mov    eax,DWORD PTR [ebp-0x40]
   168df:	lea    eax,[eax+edi*1+0x1]
   168e3:	mov    DWORD PTR [ebp-0x28],eax
   168e6:	mov    ebx,DWORD PTR [ebp-0x38]
   168e9:	lea    eax,[ebx+eax*1+0x1]
   168ed:	mov    DWORD PTR [ebp-0x2c],eax
   168f0:	mov    ebx,DWORD PTR [ebp-0x30]
   168f3:	lea    eax,[ebx+eax*1+0x1]
   168f7:	cmp    eax,DWORD PTR [esi]
   168f9:	jbe    0x16909
   168fb:	mov    DWORD PTR [esi],eax
   168fd:	mov    DWORD PTR [esi+0x8],0x2
   16904:	jmp    0x169b0
   16909:	and    DWORD PTR [esi+0x8],0x0
   1690d:	mov    eax,DWORD PTR [ebp-0x1c]
   16910:	mov    DWORD PTR [esi+0xc],eax
   16913:	mov    eax,DWORD PTR [ebp-0x5c]
   16916:	mov    DWORD PTR [esi+0x18],eax
   16919:	mov    eax,DWORD PTR [ebp-0x58]
   1691c:	mov    DWORD PTR [esi+0x1c],eax
   1691f:	mov    eax,DWORD PTR [ebp-0x64]
   16922:	mov    DWORD PTR [esi+0x20],eax
   16925:	mov    eax,DWORD PTR [ebp-0x60]
   16928:	mov    DWORD PTR [esi+0x24],eax
   1692b:	mov    eax,DWORD PTR [ebp-0x20]
   1692e:	mov    DWORD PTR [esi+0x10],eax
   16931:	mov    eax,DWORD PTR [ebp+0x8]
   16934:	mov    eax,DWORD PTR [eax]
   16936:	mov    DWORD PTR [ebp-0x1c],eax
   16939:	lea    eax,[esi+0x28]
   1693c:	mov    ebx,DWORD PTR [ebp-0x1c]
   1693f:	mov    bl,BYTE PTR [ebx]
   16941:	mov    BYTE PTR [ebp+0xb],bl
   16944:	mov    BYTE PTR [eax],bl
   16946:	inc    DWORD PTR [ebp-0x1c]
   16949:	inc    eax
   1694a:	test   bl,bl
   1694c:	jne    0x1693c
   1694e:	mov    ebx,DWORD PTR [ebp-0x4c]
   16951:	lea    edx,[edx+esi*1+0x29]
   16955:	mov    al,BYTE PTR [ebx]
   16957:	mov    BYTE PTR [edx],al
   16959:	inc    ebx
   1695a:	inc    edx
   1695b:	test   al,al
   1695d:	jne    0x16955
   1695f:	mov    eax,DWORD PTR [ebp-0x24]
   16962:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   16966:	mov    edx,DWORD PTR [ebp-0x54]
   16969:	lea    ecx,[ecx+esi*1+0x2c]
   1696d:	mov    al,BYTE PTR [edx]
   1696f:	mov    BYTE PTR [ecx],al
   16971:	inc    edx
   16972:	inc    ecx
   16973:	test   al,al
   16975:	jne    0x1696d
   16977:	mov    ecx,DWORD PTR [ebp-0x44]
   1697a:	lea    edi,[edi+esi*1+0x28]
   1697e:	mov    al,BYTE PTR [ecx]
   16980:	mov    BYTE PTR [edi],al
   16982:	inc    ecx
   16983:	inc    edi
   16984:	test   al,al
   16986:	jne    0x1697e
   16988:	mov    edx,DWORD PTR [ebp-0x3c]
   1698b:	mov    eax,DWORD PTR [ebp-0x28]
   1698e:	lea    eax,[eax+esi*1+0x28]
   16992:	mov    cl,BYTE PTR [edx]
   16994:	mov    BYTE PTR [eax],cl
   16996:	inc    edx
   16997:	inc    eax
   16998:	test   cl,cl
   1699a:	jne    0x16992
   1699c:	mov    ecx,DWORD PTR [ebp-0x34]
   1699f:	mov    eax,DWORD PTR [ebp-0x2c]
   169a2:	lea    esi,[eax+esi*1+0x28]
   169a6:	mov    al,BYTE PTR [ecx]
   169a8:	mov    BYTE PTR [esi],al
   169aa:	inc    ecx
   169ab:	inc    esi
   169ac:	test   al,al
   169ae:	jne    0x169a6
   169b0:	push   DWORD PTR [ebp-0x34]
   169b3:	call   0x1d9fc
   169b8:	push   DWORD PTR [ebp-0x3c]
   169bb:	call   0x1d9fc
   169c0:	push   DWORD PTR [ebp-0x44]
   169c3:	call   0x1d9fc
   169c8:	push   DWORD PTR [ebp-0x4c]
   169cb:	call   0x1d9fc
   169d0:	push   DWORD PTR [ebp-0x54]
   169d3:	call   0x1d9fc
   169d8:	add    esp,0x14
   169db:	jmp    0x169ee
   169dd:	xor    eax,eax
   169df:	inc    eax
   169e0:	ret    
   169e1:	mov    esp,DWORD PTR [ebp-0x18]
   169e4:	mov    eax,DWORD PTR [ebp+0xc]
   169e7:	mov    DWORD PTR [eax+0x8],0x4
   169ee:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169f5:	push   0x0
   169f7:	push   0x77758
   169fc:	call   DWORD PTR ds:0x1ee28
   16a02:	call   0x1db01
   16a07:	ret    0x8
   16a0a:	int3   
   16a0b:	int3   
   16a0c:	int3   
   16a0d:	int3   
   16a0e:	int3   
   16a0f:	int3   
   16a10:	mov    edi,edi
   16a12:	push   ebp
   16a13:	mov    ebp,esp
   16a15:	sub    esp,0x10
   16a18:	mov    eax,DWORD PTR [ebp+0x8]
   16a1b:	mov    eax,DWORD PTR [eax]
   16a1d:	and    DWORD PTR [ebp-0x4],0x0
   16a21:	mov    DWORD PTR [ebp-0x8],eax
   16a24:	lea    eax,[ebp-0x8]
   16a27:	push   eax
   16a28:	lea    eax,[ebp-0x10]
   16a2b:	push   eax
   16a2c:	call   0x16128
   16a31:	mov    eax,DWORD PTR [eax]
   16a33:	add    eax,0x10
   16a36:	leave  
   16a37:	ret    0x4
   16a3a:	int3   
   16a3b:	int3   
   16a3c:	int3   
   16a3d:	int3   
   16a3e:	int3   
   16a3f:	int3   
   16a40:	mov    edi,edi
   16a42:	push   esi
   16a43:	mov    esi,ecx
   16a45:	mov    BYTE PTR [esi+0x8],0x0
   16a49:	call   0x14100
   16a4e:	mov    eax,esi
   16a50:	pop    esi
   16a51:	ret    0x8
   16a54:	int3   
   16a55:	int3   
   16a56:	int3   
   16a57:	int3   
   16a58:	int3   
   16a59:	int3   
   16a5a:	mov    edi,edi
   16a5c:	push   ebp
   16a5d:	mov    ebp,esp
   16a5f:	push   ecx
   16a60:	push   ecx
   16a61:	push   DWORD PTR [ebp+0xc]
   16a64:	lea    eax,[ebp-0x8]
   16a67:	push   eax
   16a68:	call   0x161d2
   16a6d:	mov    eax,DWORD PTR [ebp+0x8]
   16a70:	mov    ecx,DWORD PTR [ebp-0x8]
   16a73:	mov    DWORD PTR [eax],ecx
   16a75:	mov    cl,BYTE PTR [ebp-0x4]
   16a78:	mov    BYTE PTR [eax+0x4],cl
   16a7b:	leave  
   16a7c:	ret    0x8
   16a7f:	int3   
   16a80:	int3   
   16a81:	int3   
   16a82:	int3   
   16a83:	int3   
   16a84:	mov    edi,edi
   16a86:	push   ebp
   16a87:	mov    ebp,esp
   16a89:	push   ecx
   16a8a:	push   esi
   16a8b:	mov    esi,ecx
   16a8d:	mov    eax,DWORD PTR [esi+0x4]
   16a90:	mov    ecx,DWORD PTR [eax]
   16a92:	push   eax
   16a93:	push   ecx
   16a94:	lea    eax,[ebp-0x4]
   16a97:	push   eax
   16a98:	mov    ecx,esi
   16a9a:	call   0x1626c
   16a9f:	push   DWORD PTR [esi+0x4]
   16aa2:	call   0x1d9fc
   16aa7:	xor    eax,eax
   16aa9:	mov    DWORD PTR [esi+0x4],eax
   16aac:	mov    DWORD PTR [esi+0xc],eax
   16aaf:	dec    DWORD PTR ds:0x78c1c
   16ab5:	pop    ecx
   16ab6:	pop    esi
   16ab7:	jne    0x16acf
   16ab9:	mov    ecx,DWORD PTR ds:0x78ab8
   16abf:	mov    ds:0x78ab8,eax
   16ac4:	cmp    ecx,eax
   16ac6:	je     0x16acf
   16ac8:	push   ecx
   16ac9:	call   0x1d9fc
   16ace:	pop    ecx
   16acf:	leave  
   16ad0:	ret    
   16ad1:	int3   
   16ad2:	int3   
   16ad3:	int3   
   16ad4:	int3   
   16ad5:	int3   
   16ad6:	mov    edi,edi
   16ad8:	push   ebp
   16ad9:	mov    ebp,esp
   16adb:	push   ecx
   16adc:	push   ecx
   16add:	push   DWORD PTR [ebp+0xc]
   16ae0:	lea    eax,[ebp-0x8]
   16ae3:	push   eax
   16ae4:	call   0x162ea
   16ae9:	mov    eax,DWORD PTR [ebp+0x8]
   16aec:	mov    ecx,DWORD PTR [ebp-0x8]
   16aef:	mov    DWORD PTR [eax],ecx
   16af1:	mov    cl,BYTE PTR [ebp-0x4]
   16af4:	mov    BYTE PTR [eax+0x4],cl
   16af7:	leave  
   16af8:	ret    0x8
   16afb:	int3   
   16afc:	int3   
   16afd:	int3   
   16afe:	int3   
   16aff:	int3   
   16b00:	mov    edi,edi
   16b02:	push   ebp
   16b03:	mov    ebp,esp
   16b05:	push   ecx
   16b06:	mov    eax,DWORD PTR [ecx+0x4]
   16b09:	mov    edx,DWORD PTR [eax]
   16b0b:	push   eax
   16b0c:	push   edx
   16b0d:	lea    eax,[ebp-0x4]
   16b10:	push   eax
   16b11:	call   0x16384
   16b16:	leave  
   16b17:	ret    
   16b18:	int3   
   16b19:	int3   
   16b1a:	int3   
   16b1b:	int3   
   16b1c:	int3   
   16b1d:	int3   
   16b1e:	mov    edi,edi
   16b20:	push   ebp
   16b21:	mov    ebp,esp
   16b23:	push   ecx
   16b24:	push   ecx
   16b25:	push   DWORD PTR [ebp+0xc]
   16b28:	lea    eax,[ebp-0x8]
   16b2b:	push   eax
   16b2c:	call   0x16402
   16b31:	mov    eax,DWORD PTR [ebp+0x8]
   16b34:	mov    ecx,DWORD PTR [ebp-0x8]
   16b37:	mov    DWORD PTR [eax],ecx
   16b39:	mov    cl,BYTE PTR [ebp-0x4]
   16b3c:	mov    BYTE PTR [eax+0x4],cl
   16b3f:	leave  
   16b40:	ret    0x8
   16b43:	int3   
   16b44:	int3   
   16b45:	int3   
   16b46:	int3   
   16b47:	int3   
   16b48:	mov    edi,edi
   16b4a:	push   ebp
   16b4b:	mov    ebp,esp
   16b4d:	push   ecx
   16b4e:	push   ecx
   16b4f:	push   DWORD PTR [ebp+0xc]
   16b52:	lea    eax,[ebp-0x8]
   16b55:	push   eax
   16b56:	call   0x1649c
   16b5b:	mov    eax,DWORD PTR [ebp+0x8]
   16b5e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b61:	mov    DWORD PTR [eax],ecx
   16b63:	mov    cl,BYTE PTR [ebp-0x4]
   16b66:	mov    BYTE PTR [eax+0x4],cl
   16b69:	leave  
   16b6a:	ret    0x8
   16b6d:	int3   
   16b6e:	int3   
   16b6f:	int3   
   16b70:	int3   
   16b71:	int3   
   16b72:	mov    edi,edi
   16b74:	push   ebp
   16b75:	mov    ebp,esp
   16b77:	push   ecx
   16b78:	push   ecx
   16b79:	push   esi
   16b7a:	push   DWORD PTR [ebp+0x8]
   16b7d:	lea    eax,[ebp-0x8]
   16b80:	push   eax
   16b81:	mov    esi,ecx
   16b83:	call   0x14162
   16b88:	and    DWORD PTR [ebp+0x8],0x0
   16b8c:	lea    eax,[ebp+0x8]
   16b8f:	push   eax
   16b90:	push   DWORD PTR [ebp-0x4]
   16b93:	push   DWORD PTR [ebp-0x8]
   16b96:	call   0x13a58
   16b9b:	add    esp,0xc
   16b9e:	push   DWORD PTR [ebp-0x4]
   16ba1:	lea    eax,[ebp-0x4]
   16ba4:	push   DWORD PTR [ebp-0x8]
   16ba7:	mov    ecx,esi
   16ba9:	push   eax
   16baa:	call   0x16534
   16baf:	mov    eax,DWORD PTR [ebp+0x8]
   16bb2:	pop    esi
   16bb3:	leave  
   16bb4:	ret    0x4
   16bb7:	int3   
   16bb8:	int3   
   16bb9:	int3   
   16bba:	int3   
   16bbb:	int3   
   16bbc:	mov    edi,edi
   16bbe:	push   ebp
   16bbf:	mov    ebp,esp
   16bc1:	push   ecx
   16bc2:	mov    eax,DWORD PTR [ecx+0x4]
   16bc5:	mov    edx,DWORD PTR [eax]
   16bc7:	push   eax
   16bc8:	push   edx
   16bc9:	lea    eax,[ebp-0x4]
   16bcc:	push   eax
   16bcd:	call   0x16534
   16bd2:	leave  
   16bd3:	ret    
   16bd4:	int3   
   16bd5:	int3   
   16bd6:	int3   
   16bd7:	int3   
   16bd8:	int3   
   16bd9:	int3   
   16bda:	mov    edi,edi
   16bdc:	push   ebp
   16bdd:	mov    ebp,esp
   16bdf:	push   ecx
   16be0:	push   ecx
   16be1:	push   DWORD PTR [ebp+0xc]
   16be4:	lea    eax,[ebp-0x8]
   16be7:	push   eax
   16be8:	call   0x165b2
   16bed:	mov    eax,DWORD PTR [ebp+0x8]
   16bf0:	mov    ecx,DWORD PTR [ebp-0x8]
   16bf3:	mov    DWORD PTR [eax],ecx
   16bf5:	mov    cl,BYTE PTR [ebp-0x4]
   16bf8:	mov    BYTE PTR [eax+0x4],cl
   16bfb:	leave  
   16bfc:	ret    0x8
   16bff:	int3   
   16c00:	int3   
   16c01:	int3   
   16c02:	int3   
   16c03:	int3   
   16c04:	mov    edi,edi
   16c06:	push   esi
   16c07:	mov    esi,ecx
   16c09:	push   edi
   16c0a:	mov    BYTE PTR [esi+0x8],0x0
   16c0e:	call   0x13fd8
   16c13:	lea    edi,[esi+0x10]
   16c16:	mov    ecx,edi
   16c18:	call   0x12a0c
   16c1d:	mov    edi,DWORD PTR [edi]
   16c1f:	push   0x0
   16c21:	push   edi
   16c22:	call   0x11c72
   16c27:	call   eax
   16c29:	pop    edi
   16c2a:	mov    eax,esi
   16c2c:	pop    esi
   16c2d:	ret    
   16c2e:	int3   
   16c2f:	int3   
   16c30:	int3   
   16c31:	int3   
   16c32:	int3   
   16c33:	int3   
   16c34:	mov    edi,edi
   16c36:	push   ebp
   16c37:	mov    ebp,esp
   16c39:	push   esi
   16c3a:	push   edi
   16c3b:	xor    edi,edi
   16c3d:	push   edi
   16c3e:	push   edi
   16c3f:	push   edi
   16c40:	mov    esi,ecx
   16c42:	mov    eax,DWORD PTR [esi+0x10]
   16c45:	push   edi
   16c46:	push   eax
   16c47:	call   DWORD PTR ds:0x1ee2c
   16c4d:	test   eax,eax
   16c4f:	jl     0x16c6b
   16c51:	lea    eax,[ebp+0x8]
   16c54:	push   eax
   16c55:	mov    ecx,esi
   16c57:	call   0x16a10
   16c5c:	mov    ecx,DWORD PTR [ebp+0xc]
   16c5f:	push   edi
   16c60:	mov    DWORD PTR [eax],ecx
   16c62:	push   DWORD PTR [esi+0x10]
   16c65:	call   DWORD PTR ds:0x1ee28
   16c6b:	pop    edi
   16c6c:	pop    esi
   16c6d:	pop    ebp
   16c6e:	ret    0x8
   16c71:	int3   
   16c72:	int3   
   16c73:	int3   
   16c74:	int3   
   16c75:	int3   
   16c76:	mov    edi,edi
   16c78:	push   ebp
   16c79:	mov    ebp,esp
   16c7b:	sub    esp,0x38
   16c7e:	push   esi
   16c7f:	call   0x1a1c4
   16c84:	test   al,al
   16c86:	jne    0x16c90
   16c88:	mov    eax,DWORD PTR [ebp+0x8]
   16c8b:	jmp    0x16d61
   16c90:	push   DWORD PTR [ebp+0xc]
   16c93:	lea    ecx,[ebp-0x8]
   16c96:	push   DWORD PTR [ebp+0x8]
   16c99:	call   0x12af2
   16c9e:	mov    ecx,DWORD PTR ds:0x78c48
   16ca4:	lea    eax,[ebp-0x8]
   16ca7:	push   eax
   16ca8:	lea    eax,[ebp+0xc]
   16cab:	push   eax
   16cac:	call   0x141f6
   16cb1:	mov    esi,DWORD PTR [ebp+0xc]
   16cb4:	mov    eax,ds:0x78c48
   16cb9:	cmp    esi,DWORD PTR [eax+0x4]
   16cbc:	jne    0x16d1c
   16cbe:	push   ecx
   16cbf:	push   ecx
   16cc0:	lea    eax,[ebp-0x8]
   16cc3:	mov    ecx,esp
   16cc5:	push   eax
   16cc6:	call   0x12b12
   16ccb:	lea    eax,[ebp-0x10]
   16cce:	push   eax
   16ccf:	call   0x12b90
   16cd4:	lea    eax,[ebp-0x10]
   16cd7:	push   eax
   16cd8:	lea    eax,[ebp-0x8]
   16cdb:	push   eax
   16cdc:	lea    ecx,[ebp-0x38]
   16cdf:	call   0x12ce2
   16ce4:	lea    eax,[ebp-0x38]
   16ce7:	push   eax
   16ce8:	lea    ecx,[ebp-0x28]
   16ceb:	call   0x135b8
   16cf0:	mov    ecx,DWORD PTR ds:0x78c48
   16cf6:	lea    eax,[ebp-0x28]
   16cf9:	push   eax
   16cfa:	lea    eax,[ebp-0x18]
   16cfd:	push   eax
   16cfe:	call   0x16bda
   16d03:	lea    ecx,[ebp-0x28]
   16d06:	call   0x1107c
   16d0b:	lea    ecx,[ebp-0x38]
   16d0e:	call   0x1107c
   16d13:	push   DWORD PTR [ebp-0x10]
   16d16:	call   0x1d9fc
   16d1b:	pop    ecx
   16d1c:	mov    eax,DWORD PTR [ebp+0x10]
   16d1f:	movzx  eax,BYTE PTR [eax]
   16d22:	cmp    eax,0x100
   16d27:	jge    0x16d3f
   16d29:	mov    ecx,DWORD PTR ds:0x78c48
   16d2f:	lea    eax,[ebp-0x8]
   16d32:	push   eax
   16d33:	lea    eax,[ebp+0xc]
   16d36:	push   eax
   16d37:	call   0x141f6
   16d3c:	mov    esi,DWORD PTR [ebp+0xc]
   16d3f:	mov    eax,ds:0x78c48
   16d44:	cmp    esi,DWORD PTR [eax+0x4]
   16d47:	je     0x16d4e
   16d49:	mov    esi,DWORD PTR [esi+0x14]
   16d4c:	jmp    0x16d51
   16d4e:	mov    esi,DWORD PTR [ebp+0x8]
   16d51:	call   0x1a1e0
   16d56:	push   DWORD PTR [ebp-0x8]
   16d59:	call   0x1d9fc
   16d5e:	pop    ecx
   16d5f:	mov    eax,esi
   16d61:	pop    esi
   16d62:	leave  
   16d63:	ret    0xc
   16d66:	int3   
   16d67:	int3   
   16d68:	int3   
   16d69:	int3   
   16d6a:	int3   
   16d6b:	int3   
   16d6c:	mov    edi,edi
   16d6e:	push   ebp
   16d6f:	mov    ebp,esp
   16d71:	sub    esp,0x38
   16d74:	push   esi
   16d75:	call   0x1a1c4
   16d7a:	test   al,al
   16d7c:	jne    0x16d86
   16d7e:	mov    eax,DWORD PTR [ebp+0x8]
   16d81:	jmp    0x16e57
   16d86:	push   DWORD PTR [ebp+0xc]
   16d89:	lea    ecx,[ebp-0x8]
   16d8c:	push   DWORD PTR [ebp+0x8]
   16d8f:	call   0x12980
   16d94:	mov    ecx,DWORD PTR ds:0x78c4c
   16d9a:	lea    eax,[ebp-0x8]
   16d9d:	push   eax
   16d9e:	lea    eax,[ebp+0xc]
   16da1:	push   eax
   16da2:	call   0x13c5c
   16da7:	mov    esi,DWORD PTR [ebp+0xc]
   16daa:	mov    eax,ds:0x78c4c
   16daf:	cmp    esi,DWORD PTR [eax+0x4]
   16db2:	jne    0x16e12
   16db4:	push   ecx
   16db5:	push   ecx
   16db6:	lea    eax,[ebp-0x8]
   16db9:	mov    ecx,esp
   16dbb:	push   eax
   16dbc:	call   0x129a0
   16dc1:	lea    eax,[ebp-0x10]
   16dc4:	push   eax
   16dc5:	call   0x12bd4
   16dca:	lea    eax,[ebp-0x10]
   16dcd:	push   eax
   16dce:	lea    eax,[ebp-0x8]
   16dd1:	push   eax
   16dd2:	lea    ecx,[ebp-0x38]
   16dd5:	call   0x1360c
   16dda:	lea    eax,[ebp-0x38]
   16ddd:	push   eax
   16dde:	lea    ecx,[ebp-0x28]
   16de1:	call   0x13536
   16de6:	mov    ecx,DWORD PTR ds:0x78c4c
   16dec:	lea    eax,[ebp-0x28]
   16def:	push   eax
   16df0:	lea    eax,[ebp-0x18]
   16df3:	push   eax
   16df4:	call   0x16b1e
   16df9:	lea    ecx,[ebp-0x28]
   16dfc:	call   0x1107c
   16e01:	lea    ecx,[ebp-0x38]
   16e04:	call   0x1107c
   16e09:	push   DWORD PTR [ebp-0x10]
   16e0c:	call   0x1d9fc
   16e11:	pop    ecx
   16e12:	mov    eax,DWORD PTR [ebp+0x10]
   16e15:	movzx  eax,BYTE PTR [eax]
   16e18:	cmp    eax,0x100
   16e1d:	jge    0x16e35
   16e1f:	mov    ecx,DWORD PTR ds:0x78c4c
   16e25:	lea    eax,[ebp-0x8]
   16e28:	push   eax
   16e29:	lea    eax,[ebp+0xc]
   16e2c:	push   eax
   16e2d:	call   0x13c5c
   16e32:	mov    esi,DWORD PTR [ebp+0xc]
   16e35:	mov    eax,ds:0x78c4c
   16e3a:	cmp    esi,DWORD PTR [eax+0x4]
   16e3d:	je     0x16e44
   16e3f:	mov    esi,DWORD PTR [esi+0x14]
   16e42:	jmp    0x16e47
   16e44:	mov    esi,DWORD PTR [ebp+0x8]
   16e47:	call   0x1a1e0
   16e4c:	push   DWORD PTR [ebp-0x8]
   16e4f:	call   0x1d9fc
   16e54:	pop    ecx
   16e55:	mov    eax,esi
   16e57:	pop    esi
   16e58:	leave  
   16e59:	ret    0xc
   16e5c:	int3   
   16e5d:	int3   
   16e5e:	int3   
   16e5f:	int3   
   16e60:	int3   
   16e61:	int3   
   16e62:	mov    edi,edi
   16e64:	push   esi
   16e65:	mov    esi,ecx
   16e67:	mov    BYTE PTR [esi+0x8],0x0
   16e6b:	call   0x1406c
   16e70:	mov    eax,esi
   16e72:	pop    esi
   16e73:	ret    0x8
   16e76:	int3   
   16e77:	int3   
   16e78:	int3   
   16e79:	int3   
   16e7a:	int3   
   16e7b:	int3   
   16e7c:	mov    edi,edi
   16e7e:	push   ebp
   16e7f:	mov    ebp,esp
   16e81:	sub    esp,0xb0
   16e87:	push   esi
   16e88:	mov    esi,ecx
   16e8a:	lea    ecx,[ebp-0x58]
   16e8d:	call   0x136dc
   16e92:	push   eax
   16e93:	push   DWORD PTR [ebp+0x8]
   16e96:	lea    ecx,[ebp-0xb0]
   16e9c:	call   0x138b8
   16ea1:	push   eax
   16ea2:	lea    eax,[ebp-0x8]
   16ea5:	push   eax
   16ea6:	mov    ecx,esi
   16ea8:	call   0x16ad6
   16ead:	mov    esi,DWORD PTR [eax]
   16eaf:	lea    ecx,[ebp-0xb0]
   16eb5:	call   0x12ad6
   16eba:	lea    ecx,[ebp-0x58]
   16ebd:	call   0x11eba
   16ec2:	lea    eax,[esi+0x18]
   16ec5:	pop    esi
   16ec6:	leave  
   16ec7:	ret    0x4
   16eca:	int3   
   16ecb:	int3   
   16ecc:	int3   
   16ecd:	int3   
   16ece:	int3   
   16ecf:	int3   
   16ed0:	mov    edi,edi
   16ed2:	push   ebp
   16ed3:	mov    ebp,esp
   16ed5:	sub    esp,0x20
   16ed8:	push   esi
   16ed9:	push   0xffffffff
   16edb:	mov    esi,ecx
   16edd:	push   0x1dec8
   16ee2:	lea    ecx,[ebp-0x8]
   16ee5:	call   0x1109a
   16eea:	lea    eax,[ebp-0x8]
   16eed:	push   eax
   16eee:	push   DWORD PTR [ebp+0x8]
   16ef1:	lea    ecx,[ebp-0x20]
   16ef4:	call   0x1360c
   16ef9:	push   eax
   16efa:	lea    eax,[ebp-0x10]
   16efd:	push   eax
   16efe:	mov    ecx,esi
   16f00:	call   0x16b1e
   16f05:	mov    esi,DWORD PTR [eax]
   16f07:	lea    ecx,[ebp-0x20]
   16f0a:	call   0x1107c
   16f0f:	push   DWORD PTR [ebp-0x8]
   16f12:	call   0x1d9fc
   16f17:	pop    ecx
   16f18:	lea    eax,[esi+0x14]
   16f1b:	pop    esi
   16f1c:	leave  
   16f1d:	ret    0x4
   16f20:	int3   
   16f21:	int3   
   16f22:	int3   
   16f23:	int3   
   16f24:	int3   
   16f25:	int3   
   16f26:	mov    edi,edi
   16f28:	push   esi
   16f29:	mov    esi,ecx
   16f2b:	mov    BYTE PTR [esi+0x8],0x0
   16f2f:	call   0x14194
   16f34:	mov    eax,esi
   16f36:	pop    esi
   16f37:	ret    0x8
   16f3a:	int3   
   16f3b:	int3   
   16f3c:	int3   
   16f3d:	int3   
   16f3e:	int3   
   16f3f:	int3   
   16f40:	mov    edi,edi
   16f42:	push   ebp
   16f43:	mov    ebp,esp
   16f45:	sub    esp,0x14
   16f48:	and    DWORD PTR [ebp-0x4],0x0
   16f4c:	push   esi
   16f4d:	lea    eax,[ebp-0x4]
   16f50:	push   eax
   16f51:	push   DWORD PTR [ebp+0x8]
   16f54:	mov    esi,ecx
   16f56:	lea    ecx,[ebp-0xc]
   16f59:	call   0x12c14
   16f5e:	push   eax
   16f5f:	lea    eax,[ebp-0x14]
   16f62:	push   eax
   16f63:	mov    ecx,esi
   16f65:	call   0x16b48
   16f6a:	mov    ecx,DWORD PTR [ebp-0x8]
   16f6d:	mov    esi,DWORD PTR [eax]
   16f6f:	test   ecx,ecx
   16f71:	je     0x16f78
   16f73:	call   0x10a86
   16f78:	lea    eax,[esi+0x10]
   16f7b:	pop    esi
   16f7c:	leave  
   16f7d:	ret    0x4
   16f80:	int3   
   16f81:	int3   
   16f82:	int3   
   16f83:	int3   
   16f84:	int3   
   16f85:	int3   
   16f86:	mov    edi,edi
   16f88:	push   ebp
   16f89:	mov    ebp,esp
   16f8b:	sub    esp,0x20
   16f8e:	push   esi
   16f8f:	mov    esi,ecx
   16f91:	mov    eax,DWORD PTR [esi+0x24]
   16f94:	mov    ecx,DWORD PTR [esi+0x28]
   16f97:	add    ecx,eax
   16f99:	cmp    DWORD PTR [esi+0x10],ecx
   16f9c:	jbe    0x1702f
   16fa2:	mov    ecx,DWORD PTR [esi+0x18]
   16fa5:	mov    ecx,DWORD PTR [ecx]
   16fa7:	push   edi
   16fa8:	mov    DWORD PTR [ebp-0x4],ecx
   16fab:	test   eax,eax
   16fad:	je     0x16fbc
   16faf:	mov    edi,eax
   16fb1:	lea    ecx,[ebp-0x4]
   16fb4:	call   0x12f0e
   16fb9:	dec    edi
   16fba:	jne    0x16fb1
   16fbc:	mov    eax,DWORD PTR [ebp-0x4]
   16fbf:	mov    edi,DWORD PTR [eax+0xc]
   16fc2:	lea    ecx,[ebp-0x20]
   16fc5:	mov    BYTE PTR [ebp-0x18],0x0
   16fc9:	call   0x144c8
   16fce:	mov    eax,DWORD PTR [esi+0x8]
   16fd1:	mov    ecx,DWORD PTR [eax]
   16fd3:	mov    DWORD PTR [ebp-0x4],ecx
   16fd6:	cmp    ecx,eax
   16fd8:	je     0x17019
   16fda:	lea    edx,[ecx+0x68]
   16fdd:	mov    eax,DWORD PTR [edx]
   16fdf:	cmp    eax,edi
   16fe1:	jae    0x16ff8
   16fe3:	push   ecx
   16fe4:	lea    eax,[ebp-0x8]
   16fe7:	push   eax
   16fe8:	lea    ecx,[esi+0x4]
   16feb:	call   0x14f20
   16ff0:	mov    ecx,DWORD PTR [ebp-0x8]
   16ff3:	mov    DWORD PTR [ebp-0x4],ecx
   16ff6:	jmp    0x17014
   16ff8:	sub    eax,edi
   16ffa:	mov    DWORD PTR [edx],eax
   16ffc:	push   edx
   16ffd:	lea    eax,[ebp-0x10]
   17000:	push   eax
   17001:	lea    ecx,[ebp-0x20]
   17004:	call   0x160ac
   17009:	lea    ecx,[ebp-0x4]
   1700c:	call   0x12e98
   17011:	mov    ecx,DWORD PTR [ebp-0x4]
   17014:	cmp    ecx,DWORD PTR [esi+0x8]
   17017:	jne    0x16fda
   17019:	lea    eax,[ebp-0x20]
   1701c:	push   eax
   1701d:	add    esi,0x14
   17020:	push   esi
   17021:	call   0x1664c
   17026:	lea    ecx,[ebp-0x20]
   17029:	call   0x160d6
   1702e:	pop    edi
   1702f:	pop    esi
   17030:	leave  
   17031:	ret    
   17032:	int3   
   17033:	int3   
   17034:	int3   
   17035:	int3   
   17036:	int3   
   17037:	int3   
   17038:	mov    edi,edi
   1703a:	push   ebp
   1703b:	mov    ebp,esp
   1703d:	sub    esp,0x20
   17040:	push   esi
   17041:	push   0xffffffff
   17043:	mov    esi,ecx
   17045:	push   0x1de2e
   1704a:	lea    ecx,[ebp-0x8]
   1704d:	call   0x1113e
   17052:	lea    eax,[ebp-0x8]
   17055:	push   eax
   17056:	push   DWORD PTR [ebp+0x8]
   17059:	lea    ecx,[ebp-0x20]
   1705c:	call   0x12ce2
   17061:	push   eax
   17062:	lea    eax,[ebp-0x10]
   17065:	push   eax
   17066:	mov    ecx,esi
   17068:	call   0x16bda
   1706d:	mov    esi,DWORD PTR [eax]
   1706f:	lea    ecx,[ebp-0x20]
   17072:	call   0x1107c
   17077:	push   DWORD PTR [ebp-0x8]
   1707a:	call   0x1d9fc
   1707f:	pop    ecx
   17080:	lea    eax,[esi+0x14]
   17083:	pop    esi
   17084:	leave  
   17085:	ret    0x4
   17088:	int3   
   17089:	int3   
   1708a:	int3   
   1708b:	int3   
   1708c:	int3   
   1708d:	int3   
   1708e:	mov    edi,edi
   17090:	push   ebp
   17091:	mov    ebp,esp
   17093:	sub    esp,0x838
   17099:	mov    eax,ds:0x7771c
   1709e:	xor    eax,ebp
   170a0:	mov    DWORD PTR [ebp-0x4],eax
   170a3:	mov    eax,DWORD PTR [ebp+0x8]
   170a6:	push   ebx
   170a7:	push   esi
   170a8:	push   edi
   170a9:	mov    DWORD PTR [ebp-0x808],eax
   170af:	xor    eax,eax
   170b1:	push   0x7fe
   170b6:	mov    WORD PTR [ebp-0x804],ax
   170bd:	xor    ebx,ebx
   170bf:	lea    eax,[ebp-0x802]
   170c5:	push   ebx
   170c6:	push   eax
   170c7:	call   0x1da7e
   170cc:	mov    eax,0x778b8
   170d1:	add    esp,0xc
   170d4:	mov    edx,eax
   170d6:	mov    cx,WORD PTR [eax]
   170d9:	inc    eax
   170da:	inc    eax
   170db:	cmp    cx,bx
   170de:	jne    0x170d6
   170e0:	sub    eax,edx
   170e2:	lea    edi,[ebp-0x804]
   170e8:	dec    edi
   170e9:	dec    edi
   170ea:	mov    cx,WORD PTR [edi+0x2]
   170ee:	inc    edi
   170ef:	inc    edi
   170f0:	cmp    cx,bx
   170f3:	jne    0x170ea
   170f5:	mov    ecx,eax
   170f7:	shr    ecx,0x2
   170fa:	mov    esi,edx
   170fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170fe:	mov    ecx,eax
   17100:	mov    eax,DWORD PTR [ebp-0x808]
   17106:	and    ecx,0x3
   17109:	add    eax,0x400
   1710e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17110:	mov    edx,eax
   17112:	mov    cx,WORD PTR [eax]
   17115:	inc    eax
   17116:	inc    eax
   17117:	cmp    cx,bx
   1711a:	jne    0x17112
   1711c:	sub    eax,edx
   1711e:	lea    edi,[ebp-0x804]
   17124:	dec    edi
   17125:	dec    edi
   17126:	mov    cx,WORD PTR [edi+0x2]
   1712a:	inc    edi
   1712b:	inc    edi
   1712c:	cmp    cx,bx
   1712f:	jne    0x17126
   17131:	mov    ecx,eax
   17133:	shr    ecx,0x2
   17136:	mov    esi,edx
   17138:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1713a:	mov    ecx,eax
   1713c:	and    ecx,0x3
   1713f:	lea    eax,[ebp-0x804]
   17145:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17147:	mov    DWORD PTR [ebp-0x818],eax
   1714d:	lea    ecx,[eax+0x2]
   17150:	mov    dx,WORD PTR [eax]
   17153:	inc    eax
   17154:	inc    eax
   17155:	cmp    dx,bx
   17158:	jne    0x17150
   1715a:	sub    eax,ecx
   1715c:	sar    eax,1
   1715e:	add    eax,eax
   17160:	mov    WORD PTR [ebp-0x81a],ax
   17167:	mov    WORD PTR [ebp-0x81c],ax
   1716e:	lea    eax,[ebp-0x81c]
   17174:	mov    DWORD PTR [ebp-0x82c],eax
   1717a:	lea    eax,[ebp-0x838]
   17180:	push   eax
   17181:	xor    edi,edi
   17183:	inc    edi
   17184:	push   edi
   17185:	push   ebx
   17186:	push   ebx
   17187:	lea    eax,[ebp-0x834]
   1718d:	push   eax
   1718e:	push   0xf003f
   17193:	lea    eax,[ebp-0x80c]
   17199:	push   eax
   1719a:	mov    DWORD PTR [ebp-0x834],0x18
   171a4:	mov    DWORD PTR [ebp-0x830],ebx
   171aa:	mov    DWORD PTR [ebp-0x828],0x40
   171b4:	mov    DWORD PTR [ebp-0x824],ebx
   171ba:	mov    DWORD PTR [ebp-0x820],ebx
   171c0:	call   0x119fc
   171c5:	call   eax
   171c7:	test   eax,eax
   171c9:	jl     0x17359
   171cf:	push   0x1e516
   171d4:	push   0x9
   171d6:	push   0x1e502
   171db:	call   0x16c76
   171e0:	mov    DWORD PTR [ebp-0x810],eax
   171e6:	lea    edx,[eax+0x2]
   171e9:	mov    cx,WORD PTR [eax]
   171ec:	inc    eax
   171ed:	inc    eax
   171ee:	cmp    cx,bx
   171f1:	jne    0x171e9
   171f3:	sub    eax,edx
   171f5:	sar    eax,1
   171f7:	add    eax,eax
   171f9:	mov    WORD PTR [ebp-0x812],ax
   17200:	mov    WORD PTR [ebp-0x814],ax
   17207:	mov    eax,DWORD PTR [ebp-0x808]
   1720d:	lea    ecx,[eax+0x2]
   17210:	mov    dx,WORD PTR [eax]
   17213:	inc    eax
   17214:	inc    eax
   17215:	cmp    dx,bx
   17218:	jne    0x17210
   1721a:	sub    eax,ecx
   1721c:	sar    eax,1
   1721e:	inc    eax
   1721f:	movzx  eax,ax
   17222:	add    eax,eax
   17224:	push   eax
   17225:	push   DWORD PTR [ebp-0x808]
   1722b:	lea    eax,[ebp-0x814]
   17231:	push   edi
   17232:	push   ebx
   17233:	push   eax
   17234:	push   DWORD PTR [ebp-0x80c]
   1723a:	call   0x11804
   1723f:	call   eax
   17241:	test   eax,eax
   17243:	jl     0x17359
   17249:	push   0x1e4da
   1724e:	push   0x5
   17250:	push   0x1e4ce
   17255:	mov    DWORD PTR [ebp-0x808],0x3
   1725f:	call   0x16c76
   17264:	mov    DWORD PTR [ebp-0x810],eax
   1726a:	lea    edx,[eax+0x2]
   1726d:	mov    cx,WORD PTR [eax]
   17270:	inc    eax
   17271:	inc    eax
   17272:	cmp    cx,bx
   17275:	jne    0x1726d
   17277:	sub    eax,edx
   17279:	push   0x4
   1727b:	sar    eax,1
   1727d:	pop    esi
   1727e:	add    eax,eax
   17280:	push   esi
   17281:	mov    WORD PTR [ebp-0x812],ax
   17288:	mov    WORD PTR [ebp-0x814],ax
   1728f:	lea    eax,[ebp-0x808]
   17295:	push   eax
   17296:	push   esi
   17297:	push   ebx
   17298:	lea    eax,[ebp-0x814]
   1729e:	push   eax
   1729f:	push   DWORD PTR [ebp-0x80c]
   172a5:	call   0x11804
   172aa:	call   eax
   172ac:	test   eax,eax
   172ae:	jl     0x17359
   172b4:	push   0x1e496
   172b9:	push   esi
   172ba:	push   0x1e48c
   172bf:	mov    DWORD PTR [ebp-0x808],edi
   172c5:	call   0x16c76
   172ca:	mov    DWORD PTR [ebp-0x810],eax
   172d0:	lea    ecx,[eax+0x2]
   172d3:	mov    dx,WORD PTR [eax]
   172d6:	inc    eax
   172d7:	inc    eax
   172d8:	cmp    dx,bx
   172db:	jne    0x172d3
   172dd:	sub    eax,ecx
   172df:	sar    eax,1
   172e1:	add    eax,eax
   172e3:	push   esi
   172e4:	mov    WORD PTR [ebp-0x812],ax
   172eb:	mov    WORD PTR [ebp-0x814],ax
   172f2:	lea    eax,[ebp-0x808]
   172f8:	push   eax
   172f9:	push   esi
   172fa:	push   ebx
   172fb:	lea    eax,[ebp-0x814]
   17301:	push   eax
   17302:	push   DWORD PTR [ebp-0x80c]
   17308:	call   0x11804
   1730d:	call   eax
   1730f:	test   eax,eax
   17311:	jl     0x17359
   17313:	lea    eax,[ebp-0x81c]
   17319:	push   eax
   1731a:	call   0x119d2
   1731f:	call   eax
   17321:	test   eax,eax
   17323:	jl     0x17359
   17325:	lea    eax,[ebp-0x804]
   1732b:	push   eax
   1732c:	push   DWORD PTR [ebp-0x80c]
   17332:	call   0x12156
   17337:	test   al,al
   17339:	je     0x1734c
   1733b:	push   DWORD PTR [ebp-0x80c]
   17341:	call   0x117da
   17346:	call   eax
   17348:	test   eax,eax
   1734a:	jl     0x17359
   1734c:	push   DWORD PTR [ebp-0x80c]
   17352:	call   0x11954
   17357:	call   eax
   17359:	mov    ecx,DWORD PTR [ebp-0x4]
   1735c:	pop    edi
   1735d:	pop    esi
   1735e:	xor    ecx,ebp
   17360:	pop    ebx
   17361:	call   0x1da19
   17366:	leave  
   17367:	ret    0x4
   1736a:	int3   
   1736b:	int3   
   1736c:	int3   
   1736d:	int3   
   1736e:	int3   
   1736f:	int3   
   17370:	mov    edi,edi
   17372:	push   ebp
   17373:	mov    ebp,esp
   17375:	sub    esp,0x44
   17378:	mov    eax,DWORD PTR [ebp+0xc]
   1737b:	mov    eax,DWORD PTR [eax]
   1737d:	push   esi
   1737e:	mov    DWORD PTR [ebp-0x2c],eax
   17381:	lea    eax,[ebp-0x2c]
   17384:	push   eax
   17385:	lea    eax,[ebp-0x44]
   17388:	push   eax
   17389:	xor    esi,esi
   1738b:	push   0x1f0fff
   17390:	lea    eax,[ebp-0x10]
   17393:	push   eax
   17394:	mov    DWORD PTR [ebp-0x44],0x18
   1739b:	mov    DWORD PTR [ebp-0x40],esi
   1739e:	mov    DWORD PTR [ebp-0x38],0x200
   173a5:	mov    DWORD PTR [ebp-0x3c],esi
   173a8:	mov    DWORD PTR [ebp-0x34],esi
   173ab:	mov    DWORD PTR [ebp-0x30],esi
   173ae:	mov    DWORD PTR [ebp-0x28],esi
   173b1:	mov    DWORD PTR [ebp-0x10],esi
   173b4:	call   0x1168a
   173b9:	call   eax
   173bb:	test   eax,eax
   173bd:	jl     0x1762e
   173c3:	push   ebx
   173c4:	push   edi
   173c5:	push   0x40
   173c7:	mov    edi,0x1000
   173cc:	push   edi
   173cd:	lea    eax,[ebp-0x14]
   173d0:	push   eax
   173d1:	push   esi
   173d2:	lea    eax,[ebp-0x8]
   173d5:	push   eax
   173d6:	push   DWORD PTR [ebp-0x10]
   173d9:	mov    DWORD PTR [ebp-0x8],esi
   173dc:	mov    esi,DWORD PTR ds:0x1ee44
   173e2:	mov    ebx,0x400
   173e7:	mov    DWORD PTR [ebp-0x14],ebx
   173ea:	call   esi
   173ec:	test   eax,eax
   173ee:	jl     0x173f9
   173f0:	mov    eax,DWORD PTR [ebp-0x8]
   173f3:	mov    ecx,DWORD PTR [ebp+0xc]
   173f6:	mov    DWORD PTR [ecx+0x8],eax
   173f9:	and    DWORD PTR [ebp-0x18],0x0
   173fd:	push   0x4
   173ff:	push   edi
   17400:	lea    eax,[ebp-0x14]
   17403:	push   eax
   17404:	push   0x0
   17406:	lea    eax,[ebp-0x18]
   17409:	push   eax
   1740a:	push   DWORD PTR [ebp-0x10]
   1740d:	mov    DWORD PTR [ebp-0x14],ebx
   17410:	call   esi
   17412:	test   eax,eax
   17414:	jl     0x1741f
   17416:	mov    eax,DWORD PTR [ebp-0x18]
   17419:	mov    ecx,DWORD PTR [ebp+0xc]
   1741c:	mov    DWORD PTR [ecx+0xc],eax
   1741f:	lea    eax,[ebp-0x1c]
   17422:	push   eax
   17423:	push   DWORD PTR [ebp-0x2c]
   17426:	call   0x11c9c
   1742b:	call   eax
   1742d:	test   eax,eax
   1742f:	jl     0x1762c
   17435:	push   DWORD PTR [ebp-0x1c]
   17438:	call   0x11a7a
   1743d:	call   eax
   1743f:	mov    ebx,DWORD PTR [ebp-0x8]
   17442:	and    DWORD PTR [ebp-0x4],0x0
   17446:	test   ebx,ebx
   17448:	je     0x17612
   1744e:	mov    edi,DWORD PTR [ebp-0x18]
   17451:	push   0x40
   17453:	push   0x77608
   17458:	push   edi
   17459:	mov    DWORD PTR [ebp-0xc],edi
   1745c:	call   0x19846
   17461:	push   0x1e55a
   17466:	push   0x4
   17468:	push   0x1e550
   1746d:	call   0x16c76
   17472:	mov    esi,eax
   17474:	mov    cx,WORD PTR [eax]
   17477:	inc    eax
   17478:	inc    eax
   17479:	test   cx,cx
   1747c:	jne    0x17474
   1747e:	sub    eax,esi
   17480:	dec    edi
   17481:	dec    edi
   17482:	mov    cx,WORD PTR [edi+0x2]
   17486:	inc    edi
   17487:	inc    edi
   17488:	test   cx,cx
   1748b:	jne    0x17482
   1748d:	mov    ecx,eax
   1748f:	shr    ecx,0x2
   17492:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17494:	mov    ecx,eax
   17496:	push   0x60
   17498:	and    ecx,0x3
   1749b:	push   ebx
   1749c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1749e:	mov    DWORD PTR [ebp-0x20],ebx
   174a1:	call   0x197f8
   174a6:	push   0x68
   174a8:	push   eax
   174a9:	call   0x197f8
   174ae:	push   DWORD PTR [ebp-0xc]
   174b1:	push   eax
   174b2:	call   0x19810
   174b7:	push   0xb8
   174bc:	push   eax
   174bd:	call   0x197f8
   174c2:	push   DWORD PTR ds:0x78168
   174c8:	push   eax
   174c9:	call   0x19810
   174ce:	push   0xc00b
   174d3:	push   eax
   174d4:	call   0x1982a
   174d9:	push   0x74
   174db:	push   eax
   174dc:	call   0x197f8
   174e1:	push   0x2
   174e3:	push   eax
   174e4:	call   0x197f8
   174e9:	push   0xd0ff
   174ee:	push   eax
   174ef:	call   0x1982a
   174f4:	push   0x61
   174f6:	push   eax
   174f7:	call   0x197f8
   174fc:	mov    ebx,DWORD PTR [ebp+0x8]
   174ff:	mov    edi,eax
   17501:	mov    esi,ebx
   17503:	push   0x0
   17505:	push   esi
   17506:	push   edi
   17507:	call   0x19faa
   1750c:	mov    ecx,eax
   1750e:	sub    ecx,esi
   17510:	add    DWORD PTR [ebp-0x4],ecx
   17513:	add    edi,ecx
   17515:	cmp    DWORD PTR [ebp-0x4],0x5
   17519:	mov    esi,eax
   1751b:	jb     0x17503
   1751d:	mov    eax,DWORD PTR [ebp-0x4]
   17520:	push   edi
   17521:	add    eax,ebx
   17523:	push   eax
   17524:	call   0x1986e
   17529:	mov    eax,DWORD PTR [ebp-0x8]
   1752c:	test   eax,eax
   1752e:	je     0x17612
   17534:	add    eax,0x400
   17539:	lea    ecx,[eax-0x10]
   1753c:	mov    DWORD PTR [ebp-0x24],ecx
   1753f:	mov    ecx,DWORD PTR [ebp-0x4]
   17542:	lea    esi,[eax-0xc]
   17545:	push   esi
   17546:	lea    edi,[eax-0x4]
   17549:	lea    ebx,[eax-0x8]
   1754c:	shr    ecx,0x2
   1754f:	lea    ecx,[ecx*4+0x14]
   17556:	push   0x40
   17558:	sub    eax,ecx
   1755a:	push   ebx
   1755b:	mov    DWORD PTR [ebp-0xc],eax
   1755e:	mov    eax,DWORD PTR [ebp+0x8]
   17561:	mov    DWORD PTR [edi],eax
   17563:	push   edi
   17564:	mov    DWORD PTR [ebx],0x5
   1756a:	and    DWORD PTR [esi],0x0
   1756d:	push   0xffffffff
   1756f:	call   DWORD PTR ds:0x780e4
   17575:	test   eax,eax
   17577:	jl     0x175dc
   17579:	push   DWORD PTR [ebp-0x4]
   1757c:	push   0x90
   17581:	push   DWORD PTR [ebp-0xc]
   17584:	call   0x1da7e
   17589:	mov    eax,DWORD PTR [ebp-0x20]
   1758c:	sub    eax,DWORD PTR [ebp+0x8]
   1758f:	add    esp,0xc
   17592:	sub    eax,0x5
   17595:	push   eax
   17596:	mov    eax,DWORD PTR [ebp-0xc]
   17599:	inc    eax
   1759a:	push   eax
   1759b:	call   0x19810
   175a0:	push   0xe9
   175a5:	push   DWORD PTR [ebp-0xc]
   175a8:	call   0x197f8
   175ad:	mov    eax,DWORD PTR [ebp-0x24]
   175b0:	and    DWORD PTR [eax],0x0
   175b3:	push   eax
   175b4:	push   DWORD PTR [ebp-0x4]
   175b7:	push   DWORD PTR [ebp-0xc]
   175ba:	push   DWORD PTR [ebp+0x8]
   175bd:	push   0xffffffff
   175bf:	call   DWORD PTR ds:0x780d8
   175c5:	mov    eax,DWORD PTR [ebp+0xc]
   175c8:	mov    BYTE PTR [eax+0x10],0x1
   175cc:	lea    eax,[ebp-0x20]
   175cf:	push   eax
   175d0:	push   DWORD PTR [esi]
   175d2:	push   ebx
   175d3:	push   edi
   175d4:	push   0xffffffff
   175d6:	call   DWORD PTR ds:0x780e4
   175dc:	mov    esi,DWORD PTR [ebp-0x8]
   175df:	test   esi,esi
   175e1:	je     0x17612
   175e3:	lea    eax,[esi+0x400]
   175e9:	lea    ecx,[eax-0x4]
   175ec:	lea    edx,[eax-0x8]
   175ef:	add    eax,0xfffffff4
   175f2:	push   eax
   175f3:	push   0x20
   175f5:	push   edx
   175f6:	mov    DWORD PTR [ecx],esi
   175f8:	push   ecx
   175f9:	mov    DWORD PTR [edx],0x400
   175ff:	and    DWORD PTR [eax],0x0
   17602:	push   0xffffffff
   17604:	call   DWORD PTR ds:0x780e4
   1760a:	test   eax,eax
   1760c:	jge    0x17612
   1760e:	and    DWORD PTR [ebp-0x8],0x0
   17612:	call   0x11a50
   17617:	call   eax
   17619:	mov    ecx,DWORD PTR [ebp-0x1c]
   1761c:	call   DWORD PTR ds:0x1ee60
   17622:	push   DWORD PTR [ebp-0x10]
   17625:	call   0x11954
   1762a:	call   eax
   1762c:	pop    edi
   1762d:	pop    ebx
   1762e:	pop    esi
   1762f:	leave  
   17630:	ret    0x8
   17633:	int3   
   17634:	int3   
   17635:	int3   
   17636:	int3   
   17637:	int3   
   17638:	mov    edi,edi
   1763a:	push   ebp
   1763b:	mov    ebp,esp
   1763d:	cmp    DWORD PTR ds:0x78168,0x0
   17644:	push   esi
   17645:	mov    esi,DWORD PTR [ebp+0x10]
   17648:	jne    0x17713
   1764e:	push   0x1e6ea
   17653:	push   0xc
   17655:	push   0x1e6d0
   1765a:	call   0x16c76
   1765f:	push   eax
   17660:	push   DWORD PTR [ebp+0x8]
   17663:	call   0x10de4
   17668:	test   al,al
   1766a:	je     0x17713
   17670:	mov    eax,DWORD PTR [esi+0x4]
   17673:	push   0x1e6ae
   17678:	push   0xc
   1767a:	push   0x1e6a0
   1767f:	mov    ds:0x78160,eax
   17684:	call   0x16d6c
   17689:	push   eax
   1768a:	push   DWORD PTR [esi+0x4]
   1768d:	call   0x123ba
   17692:	push   0x1e67a
   17697:	push   0xc
   17699:	push   0x1e66c
   1769e:	mov    ds:0x78168,eax
   176a3:	call   0x16d6c
   176a8:	push   eax
   176a9:	push   DWORD PTR [esi+0x4]
   176ac:	call   0x123ba
   176b1:	push   0x1e640
   176b6:	push   0xc
   176b8:	push   0x1e632
   176bd:	mov    ds:0x7816c,eax
   176c2:	call   0x16d6c
   176c7:	push   eax
   176c8:	push   DWORD PTR [esi+0x4]
   176cb:	call   0x123ba
   176d0:	push   0x1e602
   176d5:	push   0x5
   176d7:	push   0x1e5fc
   176dc:	mov    ds:0x78170,eax
   176e1:	call   0x16d6c
   176e6:	push   eax
   176e7:	push   DWORD PTR [esi+0x4]
   176ea:	call   0x123ba
   176ef:	push   0x1e5d0
   176f4:	push   0x4
   176f6:	push   0x1e5ca
   176fb:	mov    ds:0x78174,eax
   17700:	call   0x16d6c
   17705:	push   eax
   17706:	push   DWORD PTR [esi+0x4]
   17709:	call   0x123ba
   1770e:	mov    ds:0x78178,eax
   17713:	cmp    DWORD PTR ds:0x78164,0x0
   1771a:	jne    0x17742
   1771c:	push   0x1e59a
   17721:	push   0x9
   17723:	push   0x1e586
   17728:	call   0x16c76
   1772d:	push   eax
   1772e:	push   DWORD PTR [ebp+0x8]
   17731:	call   0x10de4
   17736:	test   al,al
   17738:	je     0x17742
   1773a:	mov    eax,DWORD PTR [esi+0x4]
   1773d:	mov    ds:0x78164,eax
   17742:	pop    esi
   17743:	pop    ebp
   17744:	ret    0xc
   17747:	int3   
   17748:	int3   
   17749:	int3   
   1774a:	int3   
   1774b:	int3   
   1774c:	mov    edi,edi
   1774e:	push   ebp
   1774f:	mov    ebp,esp
   17751:	sub    esp,0x4c
   17754:	push   ebx
   17755:	push   esi
   17756:	push   edi
   17757:	push   DWORD PTR [ebp+0xc]
   1775a:	push   DWORD PTR [ebp+0x8]
   1775d:	call   DWORD PTR ds:0x780f0
   17763:	mov    DWORD PTR [ebp-0x8],eax
   17766:	xor    eax,eax
   17768:	xor    ebx,ebx
   1776a:	mov    DWORD PTR [ebp-0x30],ebx
   1776d:	lea    edi,[ebp-0x2c]
   17770:	stos   DWORD PTR es:[edi],eax
   17771:	stos   DWORD PTR es:[edi],eax
   17772:	stos   DWORD PTR es:[edi],eax
   17773:	stos   DWORD PTR es:[edi],eax
   17774:	xor    eax,eax
   17776:	mov    DWORD PTR [ebp-0x1c],ebx
   17779:	lea    edi,[ebp-0x18]
   1777c:	stos   DWORD PTR es:[edi],eax
   1777d:	stos   DWORD PTR es:[edi],eax
   1777e:	stos   DWORD PTR es:[edi],eax
   1777f:	stos   DWORD PTR es:[edi],eax
   17780:	lea    eax,[ebp-0x30]
   17783:	push   eax
   17784:	push   ebx
   17785:	call   0x10e72
   1778a:	mov    BYTE PTR [ebp+0xf],al
   1778d:	lea    eax,[ebp-0x1c]
   17790:	push   eax
   17791:	push   0x1
   17793:	call   0x10e72
   17798:	mov    BYTE PTR [ebp-0x1],al
   1779b:	cmp    BYTE PTR [ebp+0xf],bl
   1779e:	je     0x177ff
   177a0:	mov    esi,DWORD PTR [ebp-0x30]
   177a3:	cmp    esi,ebx
   177a5:	je     0x177ff
   177a7:	push   0x6
   177a9:	pop    ecx
   177aa:	push   ebx
   177ab:	xor    eax,eax
   177ad:	mov    DWORD PTR [ebp-0x4c],ebx
   177b0:	lea    edi,[ebp-0x48]
   177b3:	push   0x1c
   177b5:	rep stos DWORD PTR es:[edi],eax
   177b7:	lea    eax,[ebp-0x4c]
   177ba:	push   eax
   177bb:	push   ebx
   177bc:	push   DWORD PTR [ebp+0x8]
   177bf:	call   0x1192a
   177c4:	call   eax
   177c6:	cmp    DWORD PTR [ebp-0x44],esi
   177c9:	jne    0x177ff
   177cb:	push   ebx
   177cc:	push   0x4
   177ce:	lea    eax,[ebp+0xc]
   177d1:	push   eax
   177d2:	push   0x9
   177d4:	push   DWORD PTR [ebp+0x8]
   177d7:	mov    DWORD PTR [ebp+0xc],ebx
   177da:	call   0x1192a
   177df:	call   eax
   177e1:	test   eax,eax
   177e3:	jge    0x177e8
   177e5:	mov    DWORD PTR [ebp+0xc],ebx
   177e8:	cmp    DWORD PTR [ebp+0xc],ebx
   177eb:	je     0x177ff
   177ed:	lea    eax,[ebp-0x30]
   177f0:	push   eax
   177f1:	push   DWORD PTR [ebp+0xc]
   177f4:	call   0x17370
   177f9:	push   ebx
   177fa:	call   0x10f08
   177ff:	cmp    BYTE PTR [ebp-0x1],bl
   17802:	je     0x1786d
   17804:	mov    esi,DWORD PTR [ebp-0x1c]
   17807:	cmp    esi,ebx
   17809:	je     0x1786d
   1780b:	cmp    BYTE PTR [ebp-0xc],bl
   1780e:	jne    0x1786d
   17810:	push   0x6
   17812:	pop    ecx
   17813:	push   ebx
   17814:	xor    eax,eax
   17816:	mov    DWORD PTR [ebp-0x4c],ebx
   17819:	lea    edi,[ebp-0x48]
   1781c:	push   0x1c
   1781e:	rep stos DWORD PTR es:[edi],eax
   17820:	lea    eax,[ebp-0x4c]
   17823:	push   eax
   17824:	push   ebx
   17825:	push   DWORD PTR [ebp+0x8]
   17828:	call   0x1192a
   1782d:	call   eax
   1782f:	cmp    DWORD PTR [ebp-0x44],esi
   17832:	jne    0x1786d
   17834:	push   ebx
   17835:	push   0x4
   17837:	lea    eax,[ebp+0xc]
   1783a:	push   eax
   1783b:	push   0x9
   1783d:	push   DWORD PTR [ebp+0x8]
   17840:	mov    DWORD PTR [ebp+0xc],ebx
   17843:	call   0x1192a
   17848:	call   eax
   1784a:	test   eax,eax
   1784c:	jge    0x17851
   1784e:	mov    DWORD PTR [ebp+0xc],ebx
   17851:	cmp    DWORD PTR [ebp+0xc],ebx
   17854:	je     0x1786d
   17856:	lea    eax,[ebp-0x1c]
   17859:	push   eax
   1785a:	push   DWORD PTR [ebp+0xc]
   1785d:	call   0x124c6
   17862:	lea    eax,[ebp-0x1c]
   17865:	push   eax
   17866:	push   0x1
   17868:	call   0x10ec0
   1786d:	mov    eax,DWORD PTR [ebp-0x8]
   17870:	pop    edi
   17871:	pop    esi
   17872:	pop    ebx
   17873:	leave  
   17874:	ret    0x8
   17877:	int3   
   17878:	int3   
   17879:	int3   
   1787a:	int3   
   1787b:	int3   
   1787c:	push   0x24
   1787e:	push   0x773e8
   17883:	call   0x1dabc
   17888:	xor    ebx,ebx
   1788a:	push   ebx
   1788b:	push   ebx
   1788c:	push   ebx
   1788d:	push   ebx
   1788e:	push   0x77758
   17893:	call   DWORD PTR ds:0x1ee2c
   17899:	cmp    eax,ebx
   1789b:	jge    0x178ac
   1789d:	mov    eax,DWORD PTR [ebp+0x8]
   178a0:	mov    DWORD PTR [eax+0x8],0x4
   178a7:	jmp    0x17964
   178ac:	mov    DWORD PTR [ebp-0x4],ebx
   178af:	push   0xffffffff
   178b1:	mov    esi,DWORD PTR [ebp+0x8]
   178b4:	lea    eax,[esi+0xc]
   178b7:	push   eax
   178b8:	lea    ecx,[ebp-0x24]
   178bb:	call   0x12980
   178c0:	push   0xffffffff
   178c2:	mov    eax,DWORD PTR [ebp-0x20]
   178c5:	lea    eax,[eax+esi*1+0xd]
   178c9:	push   eax
   178ca:	lea    ecx,[ebp-0x2c]
   178cd:	call   0x12980
   178d2:	push   0xffffffff
   178d4:	push   0x1dec8
   178d9:	lea    ecx,[ebp-0x34]
   178dc:	call   0x1109a
   178e1:	lea    eax,[ebp-0x34]
   178e4:	push   eax
   178e5:	lea    eax,[ebp-0x2c]
   178e8:	push   eax
   178e9:	call   0x197c8
   178ee:	mov    BYTE PTR [ebp-0x19],al
   178f1:	push   DWORD PTR [ebp-0x34]
   178f4:	call   0x1d9fc
   178f9:	pop    ecx
   178fa:	lea    eax,[ebp-0x24]
   178fd:	mov    ecx,DWORD PTR ds:0x77728
   17903:	push   eax
   17904:	cmp    BYTE PTR [ebp-0x19],bl
   17907:	je     0x17910
   17909:	call   0x16188
   1790e:	jmp    0x17920
   17910:	call   0x16ed0
   17915:	lea    ecx,[ebp-0x2c]
   17918:	push   ecx
   17919:	mov    ecx,eax
   1791b:	call   0x129c2
   17920:	mov    DWORD PTR [esi+0x8],ebx
   17923:	push   DWORD PTR [ebp-0x2c]
   17926:	call   0x1d9fc
   1792b:	push   DWORD PTR [ebp-0x24]
   1792e:	call   0x1d9fc
   17933:	pop    ecx
   17934:	pop    ecx
   17935:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1793c:	jmp    0x17958
   1793e:	xor    eax,eax
   17940:	inc    eax
   17941:	ret    
   17942:	mov    esp,DWORD PTR [ebp-0x18]
   17945:	mov    eax,DWORD PTR [ebp+0x8]
   17948:	mov    DWORD PTR [eax+0x8],0x4
   1794f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17956:	xor    ebx,ebx
   17958:	push   ebx
   17959:	push   0x77758
   1795e:	call   DWORD PTR ds:0x1ee28
   17964:	call   0x1db01
   17969:	ret    0x4
   1796c:	int3   
   1796d:	int3   
   1796e:	int3   
   1796f:	int3   
   17970:	int3   
   17971:	int3   
   17972:	push   0xc
   17974:	push   0x77408
   17979:	call   0x1dabc
   1797e:	xor    edi,edi
   17980:	push   edi
   17981:	push   edi
   17982:	push   edi
   17983:	push   edi
   17984:	push   0x77758
   17989:	call   DWORD PTR ds:0x1ee2c
   1798f:	cmp    eax,edi
   17991:	jge    0x1799f
   17993:	mov    eax,DWORD PTR [ebp+0x8]
   17996:	mov    DWORD PTR [eax+0x8],0x4
   1799d:	jmp    0x17a15
   1799f:	mov    DWORD PTR [ebp-0x4],edi
   179a2:	mov    esi,DWORD PTR [ebp+0x8]
   179a5:	lea    eax,[esi+0x4]
   179a8:	mov    ecx,DWORD PTR ds:0x777b4
   179ae:	push   eax
   179af:	cmp    DWORD PTR [esi],edi
   179b1:	jbe    0x179de
   179b3:	call   0x16f40
   179b8:	mov    ebx,eax
   179ba:	push   DWORD PTR [esi]
   179bc:	lea    eax,[esi+0xc]
   179bf:	push   eax
   179c0:	lea    ecx,[ebp-0x1c]
   179c3:	call   0x137c0
   179c8:	push   eax
   179c9:	mov    ecx,ebx
   179cb:	call   0x11f1c
   179d0:	mov    ecx,DWORD PTR [ebp-0x1c]
   179d3:	cmp    ecx,edi
   179d5:	je     0x179e3
   179d7:	call   0x10a86
   179dc:	jmp    0x179e3
   179de:	call   0x16b72
   179e3:	mov    DWORD PTR [esi+0x8],edi
   179e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179ed:	jmp    0x17a09
   179ef:	xor    eax,eax
   179f1:	inc    eax
   179f2:	ret    
   179f3:	mov    esp,DWORD PTR [ebp-0x18]
   179f6:	mov    eax,DWORD PTR [ebp+0x8]
   179f9:	mov    DWORD PTR [eax+0x8],0x4
   17a00:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a07:	xor    edi,edi
   17a09:	push   edi
   17a0a:	push   0x77758
   17a0f:	call   DWORD PTR ds:0x1ee28
   17a15:	call   0x1db01
   17a1a:	ret    0x4
   17a1d:	int3   
   17a1e:	int3   
   17a1f:	int3   
   17a20:	int3   
   17a21:	int3   
   17a22:	mov    edi,edi
   17a24:	push   ebp
   17a25:	mov    ebp,esp
   17a27:	sub    esp,0x10
   17a2a:	and    DWORD PTR [ebp-0xc],0x0
   17a2e:	xor    ecx,ecx
   17a30:	mov    DWORD PTR [ebp-0x10],0x1
   17a37:	xor    eax,eax
   17a39:	mov    dl,BYTE PTR [eax+0x73760]
   17a3f:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a43:	inc    ecx
   17a44:	inc    eax
   17a45:	and    eax,0xf
   17a48:	cmp    ecx,0x8
   17a4b:	jne    0x17a39
   17a4d:	push   ecx
   17a4e:	lea    eax,[ebp-0x10]
   17a51:	push   eax
   17a52:	lea    ecx,[ebp-0x8]
   17a55:	mov    DWORD PTR [ebp-0x4],0x2
   17a5c:	call   0x137c0
   17a61:	mov    ecx,DWORD PTR ds:0x777b4
   17a67:	push   eax
   17a68:	lea    eax,[ebp-0x4]
   17a6b:	push   eax
   17a6c:	call   0x16f40
   17a71:	mov    ecx,eax
   17a73:	call   0x11f1c
   17a78:	mov    ecx,DWORD PTR [ebp-0x8]
   17a7b:	test   ecx,ecx
   17a7d:	je     0x17a84
   17a7f:	call   0x10a86
   17a84:	leave  
   17a85:	ret    
   17a86:	int3   
   17a87:	int3   
   17a88:	int3   
   17a89:	int3   
   17a8a:	int3   
   17a8b:	int3   
   17a8c:	push   0x848
   17a91:	push   0x77428
   17a96:	call   0x1ddc0
   17a9b:	xor    ebx,ebx
   17a9d:	mov    BYTE PTR [ebp-0x81d],bl
   17aa3:	xor    eax,eax
   17aa5:	mov    WORD PTR [ebp-0x81c],ax
   17aac:	push   0x7fe
   17ab1:	push   ebx
   17ab2:	lea    eax,[ebp-0x81a]
   17ab8:	push   eax
   17ab9:	call   0x1da7e
   17abe:	add    esp,0xc
   17ac1:	push   0x1e768
   17ac6:	push   0x15
   17ac8:	push   0x1e73c
   17acd:	call   0x16c76
   17ad2:	mov    edx,eax
   17ad4:	mov    cx,WORD PTR [eax]
   17ad7:	inc    eax
   17ad8:	inc    eax
   17ad9:	cmp    cx,bx
   17adc:	jne    0x17ad4
   17ade:	sub    eax,edx
   17ae0:	lea    edi,[ebp-0x81c]
   17ae6:	dec    edi
   17ae7:	dec    edi
   17ae8:	mov    cx,WORD PTR [edi+0x2]
   17aec:	inc    edi
   17aed:	inc    edi
   17aee:	cmp    cx,bx
   17af1:	jne    0x17ae8
   17af3:	mov    ecx,eax
   17af5:	mov    esi,edx
   17af7:	shr    ecx,0x2
   17afa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17afc:	mov    ecx,eax
   17afe:	and    ecx,0x3
   17b01:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b03:	mov    eax,0x77608
   17b08:	mov    edx,eax
   17b0a:	mov    cx,WORD PTR [eax]
   17b0d:	inc    eax
   17b0e:	inc    eax
   17b0f:	cmp    cx,bx
   17b12:	jne    0x17b0a
   17b14:	sub    eax,edx
   17b16:	lea    edi,[ebp-0x81c]
   17b1c:	dec    edi
   17b1d:	dec    edi
   17b1e:	mov    cx,WORD PTR [edi+0x2]
   17b22:	inc    edi
   17b23:	inc    edi
   17b24:	cmp    cx,bx
   17b27:	jne    0x17b1e
   17b29:	mov    ecx,eax
   17b2b:	mov    esi,edx
   17b2d:	shr    ecx,0x2
   17b30:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b32:	mov    ecx,eax
   17b34:	and    ecx,0x3
   17b37:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b39:	push   0x1e716
   17b3e:	push   0x4
   17b40:	push   0x1e550
   17b45:	call   0x16c76
   17b4a:	mov    edx,eax
   17b4c:	mov    cx,WORD PTR [eax]
   17b4f:	inc    eax
   17b50:	inc    eax
   17b51:	cmp    cx,bx
   17b54:	jne    0x17b4c
   17b56:	sub    eax,edx
   17b58:	lea    edi,[ebp-0x81c]
   17b5e:	dec    edi
   17b5f:	dec    edi
   17b60:	mov    cx,WORD PTR [edi+0x2]
   17b64:	inc    edi
   17b65:	inc    edi
   17b66:	cmp    cx,bx
   17b69:	jne    0x17b60
   17b6b:	mov    ecx,eax
   17b6d:	mov    esi,edx
   17b6f:	shr    ecx,0x2
   17b72:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b74:	mov    ecx,eax
   17b76:	and    ecx,0x3
   17b79:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b7b:	lea    eax,[ebp-0x81c]
   17b81:	push   eax
   17b82:	lea    eax,[ebp-0x858]
   17b88:	push   eax
   17b89:	call   DWORD PTR ds:0x1ee08
   17b8f:	mov    DWORD PTR [ebp-0x824],ebx
   17b95:	xor    eax,eax
   17b97:	lea    edi,[ebp-0x84c]
   17b9d:	stos   DWORD PTR es:[edi],eax
   17b9e:	stos   DWORD PTR es:[edi],eax
   17b9f:	stos   DWORD PTR es:[edi],eax
   17ba0:	stos   DWORD PTR es:[edi],eax
   17ba1:	stos   DWORD PTR es:[edi],eax
   17ba2:	mov    DWORD PTR [ebp-0x830],ebx
   17ba8:	xor    eax,eax
   17baa:	lea    edi,[ebp-0x82c]
   17bb0:	stos   DWORD PTR es:[edi],eax
   17bb1:	mov    DWORD PTR [ebp-0x850],0x18
   17bbb:	mov    DWORD PTR [ebp-0x84c],ebx
   17bc1:	mov    DWORD PTR [ebp-0x844],0x240
   17bcb:	lea    eax,[ebp-0x858]
   17bd1:	mov    DWORD PTR [ebp-0x848],eax
   17bd7:	mov    DWORD PTR [ebp-0x840],ebx
   17bdd:	mov    DWORD PTR [ebp-0x83c],ebx
   17be3:	push   ebx
   17be4:	push   ebx
   17be5:	push   0x60
   17be7:	push   0x1
   17be9:	push   ebx
   17bea:	push   0x80
   17bef:	push   ebx
   17bf0:	lea    eax,[ebp-0x830]
   17bf6:	push   eax
   17bf7:	lea    eax,[ebp-0x850]
   17bfd:	push   eax
   17bfe:	push   0x100001
   17c03:	lea    eax,[ebp-0x824]
   17c09:	push   eax
   17c0a:	call   0x11858
   17c0f:	call   eax
   17c11:	cmp    eax,ebx
   17c13:	jge    0x17c1c
   17c15:	xor    al,al
   17c17:	jmp    0x17cb2
   17c1c:	mov    DWORD PTR [ebp-0x4],ebx
   17c1f:	mov    esi,DWORD PTR [ebp+0xc]
   17c22:	mov    eax,0x10000
   17c27:	cmp    esi,eax
   17c29:	jbe    0x17c2d
   17c2b:	mov    esi,eax
   17c2d:	push   esi
   17c2e:	call   0x10a52
   17c33:	pop    ecx
   17c34:	mov    DWORD PTR [ebp-0x828],eax
   17c3a:	mov    DWORD PTR [ebp-0x838],ebx
   17c40:	xor    eax,eax
   17c42:	lea    edi,[ebp-0x834]
   17c48:	stos   DWORD PTR es:[edi],eax
   17c49:	push   ebx
   17c4a:	lea    eax,[ebp-0x838]
   17c50:	push   eax
   17c51:	push   esi
   17c52:	push   DWORD PTR [ebp-0x828]
   17c58:	lea    eax,[ebp-0x830]
   17c5e:	push   eax
   17c5f:	push   ebx
   17c60:	push   ebx
   17c61:	push   ebx
   17c62:	push   DWORD PTR [ebp-0x824]
   17c68:	call   0x11ace
   17c6d:	call   eax
   17c6f:	cmp    eax,ebx
   17c71:	jl     0x17c98
   17c73:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c79:	mov    edi,DWORD PTR [ebp+0x8]
   17c7c:	mov    esi,DWORD PTR [ebp-0x828]
   17c82:	xor    eax,eax
   17c84:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c86:	sete   al
   17c89:	mov    BYTE PTR [ebp-0x81d],al
   17c8f:	jmp    0x17c98
   17c91:	xor    eax,eax
   17c93:	inc    eax
   17c94:	ret    
   17c95:	mov    esp,DWORD PTR [ebp-0x18]
   17c98:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c9f:	push   DWORD PTR [ebp-0x824]
   17ca5:	call   0x11954
   17caa:	call   eax
   17cac:	mov    al,BYTE PTR [ebp-0x81d]
   17cb2:	call   0x1de08
   17cb7:	ret    0x8
   17cba:	int3   
   17cbb:	int3   
   17cbc:	int3   
   17cbd:	int3   
   17cbe:	int3   
   17cbf:	int3   
   17cc0:	push   0x874
   17cc5:	push   0x77448
   17cca:	call   0x1ddc0
   17ccf:	mov    eax,DWORD PTR [ebp+0x8]
   17cd2:	mov    DWORD PTR [ebp-0x830],eax
   17cd8:	xor    ebx,ebx
   17cda:	mov    BYTE PTR [ebp-0x81d],bl
   17ce0:	xor    eax,eax
   17ce2:	mov    WORD PTR [ebp-0x81c],ax
   17ce9:	push   0x7fe
   17cee:	push   ebx
   17cef:	lea    eax,[ebp-0x81a]
   17cf5:	push   eax
   17cf6:	call   0x1da7e
   17cfb:	add    esp,0xc
   17cfe:	push   0x1e7d8
   17d03:	push   0x15
   17d05:	push   0x1e73c
   17d0a:	call   0x16c76
   17d0f:	mov    edx,eax
   17d11:	mov    cx,WORD PTR [eax]
   17d14:	inc    eax
   17d15:	inc    eax
   17d16:	cmp    cx,bx
   17d19:	jne    0x17d11
   17d1b:	sub    eax,edx
   17d1d:	lea    edi,[ebp-0x81c]
   17d23:	dec    edi
   17d24:	dec    edi
   17d25:	mov    cx,WORD PTR [edi+0x2]
   17d29:	inc    edi
   17d2a:	inc    edi
   17d2b:	cmp    cx,bx
   17d2e:	jne    0x17d25
   17d30:	mov    ecx,eax
   17d32:	mov    esi,edx
   17d34:	shr    ecx,0x2
   17d37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d39:	mov    ecx,eax
   17d3b:	and    ecx,0x3
   17d3e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d40:	mov    eax,0x77608
   17d45:	mov    edx,eax
   17d47:	mov    cx,WORD PTR [eax]
   17d4a:	inc    eax
   17d4b:	inc    eax
   17d4c:	cmp    cx,bx
   17d4f:	jne    0x17d47
   17d51:	sub    eax,edx
   17d53:	lea    edi,[ebp-0x81c]
   17d59:	dec    edi
   17d5a:	dec    edi
   17d5b:	mov    cx,WORD PTR [edi+0x2]
   17d5f:	inc    edi
   17d60:	inc    edi
   17d61:	cmp    cx,bx
   17d64:	jne    0x17d5b
   17d66:	mov    ecx,eax
   17d68:	mov    esi,edx
   17d6a:	shr    ecx,0x2
   17d6d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d6f:	mov    ecx,eax
   17d71:	and    ecx,0x3
   17d74:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d76:	push   0x1e7a0
   17d7b:	push   0x4
   17d7d:	push   0x1e550
   17d82:	call   0x16c76
   17d87:	mov    edx,eax
   17d89:	mov    cx,WORD PTR [eax]
   17d8c:	inc    eax
   17d8d:	inc    eax
   17d8e:	cmp    cx,bx
   17d91:	jne    0x17d89
   17d93:	sub    eax,edx
   17d95:	lea    edi,[ebp-0x81c]
   17d9b:	dec    edi
   17d9c:	dec    edi
   17d9d:	mov    cx,WORD PTR [edi+0x2]
   17da1:	inc    edi
   17da2:	inc    edi
   17da3:	cmp    cx,bx
   17da6:	jne    0x17d9d
   17da8:	mov    ecx,eax
   17daa:	mov    esi,edx
   17dac:	shr    ecx,0x2
   17daf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17db1:	mov    ecx,eax
   17db3:	and    ecx,0x3
   17db6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17db8:	lea    eax,[ebp-0x81c]
   17dbe:	push   eax
   17dbf:	lea    eax,[ebp-0x884]
   17dc5:	push   eax
   17dc6:	call   DWORD PTR ds:0x1ee08
   17dcc:	mov    DWORD PTR [ebp-0x824],ebx
   17dd2:	xor    eax,eax
   17dd4:	lea    edi,[ebp-0x850]
   17dda:	stos   DWORD PTR es:[edi],eax
   17ddb:	stos   DWORD PTR es:[edi],eax
   17ddc:	stos   DWORD PTR es:[edi],eax
   17ddd:	stos   DWORD PTR es:[edi],eax
   17dde:	stos   DWORD PTR es:[edi],eax
   17ddf:	mov    DWORD PTR [ebp-0x82c],ebx
   17de5:	xor    eax,eax
   17de7:	lea    edi,[ebp-0x828]
   17ded:	stos   DWORD PTR es:[edi],eax
   17dee:	mov    DWORD PTR [ebp-0x854],0x18
   17df8:	mov    DWORD PTR [ebp-0x850],ebx
   17dfe:	mov    DWORD PTR [ebp-0x848],0x240
   17e08:	lea    eax,[ebp-0x884]
   17e0e:	mov    DWORD PTR [ebp-0x84c],eax
   17e14:	mov    DWORD PTR [ebp-0x844],ebx
   17e1a:	mov    DWORD PTR [ebp-0x840],ebx
   17e20:	push   ebx
   17e21:	push   ebx
   17e22:	push   0x60
   17e24:	push   ebx
   17e25:	push   ebx
   17e26:	push   0x80
   17e2b:	push   ebx
   17e2c:	lea    eax,[ebp-0x82c]
   17e32:	push   eax
   17e33:	lea    eax,[ebp-0x854]
   17e39:	push   eax
   17e3a:	push   0x100002
   17e3f:	lea    eax,[ebp-0x824]
   17e45:	push   eax
   17e46:	call   0x11858
   17e4b:	call   eax
   17e4d:	cmp    eax,ebx
   17e4f:	jge    0x17e58
   17e51:	xor    al,al
   17e53:	jmp    0x17f5e
   17e58:	mov    DWORD PTR [ebp-0x4],ebx
   17e5b:	xor    eax,eax
   17e5d:	lea    edi,[ebp-0x82c]
   17e63:	stos   DWORD PTR es:[edi],eax
   17e64:	stos   DWORD PTR es:[edi],eax
   17e65:	xor    edi,edi
   17e67:	mov    esi,0x10000
   17e6c:	mov    DWORD PTR [ebp-0x834],edi
   17e72:	mov    eax,DWORD PTR [ebp+0xc]
   17e75:	cmp    edi,eax
   17e77:	jae    0x17ec2
   17e79:	mov    DWORD PTR [ebp-0x83c],ebx
   17e7f:	mov    DWORD PTR [ebp-0x83c],edi
   17e85:	mov    DWORD PTR [ebp-0x838],ebx
   17e8b:	sub    eax,edi
   17e8d:	cmp    eax,esi
   17e8f:	jb     0x17e93
   17e91:	mov    eax,esi
   17e93:	push   ebx
   17e94:	push   ebx
   17e95:	push   eax
   17e96:	mov    eax,DWORD PTR [ebp-0x830]
   17e9c:	add    eax,edi
   17e9e:	push   eax
   17e9f:	lea    eax,[ebp-0x82c]
   17ea5:	push   eax
   17ea6:	push   ebx
   17ea7:	push   ebx
   17ea8:	push   ebx
   17ea9:	push   DWORD PTR [ebp-0x824]
   17eaf:	call   0x11b22
   17eb4:	call   eax
   17eb6:	cmp    eax,ebx
   17eb8:	jl     0x17f44
   17ebe:	add    edi,esi
   17ec0:	jmp    0x17e6c
   17ec2:	mov    BYTE PTR [ebp-0x81d],0x1
   17ec9:	mov    DWORD PTR [ebp-0x87c],ebx
   17ecf:	push   0x9
   17ed1:	pop    ecx
   17ed2:	xor    eax,eax
   17ed4:	lea    edi,[ebp-0x878]
   17eda:	rep stos DWORD PTR es:[edi],eax
   17edc:	mov    eax,DWORD PTR [ebp+0x10]
   17edf:	mov    DWORD PTR [ebp-0x86c],eax
   17ee5:	mov    ecx,DWORD PTR [ebp+0x14]
   17ee8:	mov    DWORD PTR [ebp-0x868],ecx
   17eee:	mov    DWORD PTR [ebp-0x874],eax
   17ef4:	mov    DWORD PTR [ebp-0x870],ecx
   17efa:	mov    DWORD PTR [ebp-0x864],eax
   17f00:	mov    DWORD PTR [ebp-0x860],ecx
   17f06:	mov    DWORD PTR [ebp-0x87c],eax
   17f0c:	mov    DWORD PTR [ebp-0x878],ecx
   17f12:	mov    DWORD PTR [ebp-0x85c],0x80
   17f1c:	push   0x4
   17f1e:	push   0x28
   17f20:	lea    eax,[ebp-0x87c]
   17f26:	push   eax
   17f27:	lea    eax,[ebp-0x82c]
   17f2d:	push   eax
   17f2e:	push   DWORD PTR [ebp-0x824]
   17f34:	call   0x11af8
   17f39:	call   eax
   17f3b:	jmp    0x17f44
   17f3d:	xor    eax,eax
   17f3f:	inc    eax
   17f40:	ret    
   17f41:	mov    esp,DWORD PTR [ebp-0x18]
   17f44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f4b:	push   DWORD PTR [ebp-0x824]
   17f51:	call   0x11954
   17f56:	call   eax
   17f58:	mov    al,BYTE PTR [ebp-0x81d]
   17f5e:	call   0x1de08
   17f63:	ret    0x10
   17f66:	int3   
   17f67:	int3   
   17f68:	int3   
   17f69:	int3   
   17f6a:	int3   
   17f6b:	int3   
   17f6c:	push   0x874
   17f71:	push   0x77468
   17f76:	call   0x1ddc0
   17f7b:	xor    ebx,ebx
   17f7d:	mov    BYTE PTR [ebp-0x81d],bl
   17f83:	mov    BYTE PTR [ebp-0x81e],bl
   17f89:	mov    DWORD PTR [ebp-0x828],ebx
   17f8f:	mov    DWORD PTR [ebp-0x824],ebx
   17f95:	xor    eax,eax
   17f97:	mov    WORD PTR [ebp-0x81c],ax
   17f9e:	push   0x7fe
   17fa3:	push   ebx
   17fa4:	lea    eax,[ebp-0x81a]
   17faa:	push   eax
   17fab:	call   0x1da7e
   17fb0:	add    esp,0xc
   17fb3:	push   0x1e876
   17fb8:	push   0x1d
   17fba:	push   0x1e83a
   17fbf:	call   0x16c76
   17fc4:	mov    edx,eax
   17fc6:	mov    cx,WORD PTR [eax]
   17fc9:	inc    eax
   17fca:	inc    eax
   17fcb:	cmp    cx,bx
   17fce:	jne    0x17fc6
   17fd0:	sub    eax,edx
   17fd2:	lea    edi,[ebp-0x81c]
   17fd8:	dec    edi
   17fd9:	dec    edi
   17fda:	mov    cx,WORD PTR [edi+0x2]
   17fde:	inc    edi
   17fdf:	inc    edi
   17fe0:	cmp    cx,bx
   17fe3:	jne    0x17fda
   17fe5:	mov    ecx,eax
   17fe7:	mov    esi,edx
   17fe9:	shr    ecx,0x2
   17fec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fee:	mov    ecx,eax
   17ff0:	and    ecx,0x3
   17ff3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ff5:	mov    eax,0x77648
   17ffa:	mov    edx,eax
   17ffc:	mov    cx,WORD PTR [eax]
   17fff:	inc    eax
   18000:	inc    eax
   18001:	cmp    cx,bx
   18004:	jne    0x17ffc
   18006:	sub    eax,edx
   18008:	lea    edi,[ebp-0x81c]
   1800e:	dec    edi
   1800f:	dec    edi
   18010:	mov    cx,WORD PTR [edi+0x2]
   18014:	inc    edi
   18015:	inc    edi
   18016:	cmp    cx,bx
   18019:	jne    0x18010
   1801b:	mov    ecx,eax
   1801d:	mov    esi,edx
   1801f:	shr    ecx,0x2
   18022:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18024:	mov    ecx,eax
   18026:	and    ecx,0x3
   18029:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1802b:	push   0x1e80c
   18030:	push   0x4
   18032:	push   0x1e802
   18037:	call   0x16c76
   1803c:	mov    edx,eax
   1803e:	mov    cx,WORD PTR [eax]
   18041:	inc    eax
   18042:	inc    eax
   18043:	cmp    cx,bx
   18046:	jne    0x1803e
   18048:	sub    eax,edx
   1804a:	lea    edi,[ebp-0x81c]
   18050:	dec    edi
   18051:	dec    edi
   18052:	mov    cx,WORD PTR [edi+0x2]
   18056:	inc    edi
   18057:	inc    edi
   18058:	cmp    cx,bx
   1805b:	jne    0x18052
   1805d:	mov    ecx,eax
   1805f:	mov    esi,edx
   18061:	shr    ecx,0x2
   18064:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18066:	mov    ecx,eax
   18068:	and    ecx,0x3
   1806b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1806d:	lea    eax,[ebp-0x81c]
   18073:	push   eax
   18074:	lea    eax,[ebp-0x85c]
   1807a:	push   eax
   1807b:	call   DWORD PTR ds:0x1ee08
   18081:	xor    eax,eax
   18083:	lea    edi,[ebp-0x850]
   18089:	stos   DWORD PTR es:[edi],eax
   1808a:	stos   DWORD PTR es:[edi],eax
   1808b:	stos   DWORD PTR es:[edi],eax
   1808c:	stos   DWORD PTR es:[edi],eax
   1808d:	stos   DWORD PTR es:[edi],eax
   1808e:	mov    DWORD PTR [ebp-0x834],ebx
   18094:	xor    eax,eax
   18096:	lea    edi,[ebp-0x830]
   1809c:	stos   DWORD PTR es:[edi],eax
   1809d:	mov    DWORD PTR [ebp-0x82c],ebx
   180a3:	mov    DWORD PTR [ebp-0x854],0x18
   180ad:	mov    DWORD PTR [ebp-0x850],ebx
   180b3:	mov    DWORD PTR [ebp-0x848],0x240
   180bd:	lea    eax,[ebp-0x85c]
   180c3:	mov    DWORD PTR [ebp-0x84c],eax
   180c9:	mov    DWORD PTR [ebp-0x844],ebx
   180cf:	mov    DWORD PTR [ebp-0x840],ebx
   180d5:	push   ebx
   180d6:	push   ebx
   180d7:	push   ebx
   180d8:	push   0x1
   180da:	push   0x7
   180dc:	push   ebx
   180dd:	push   ebx
   180de:	lea    eax,[ebp-0x834]
   180e4:	push   eax
   180e5:	lea    eax,[ebp-0x854]
   180eb:	push   eax
   180ec:	push   0x89
   180f1:	lea    eax,[ebp-0x82c]
   180f7:	push   eax
   180f8:	call   0x11858
   180fd:	call   eax
   180ff:	cmp    eax,ebx
   18101:	jge    0x1810a
   18103:	xor    al,al
   18105:	jmp    0x1822a
   1810a:	mov    DWORD PTR [ebp-0x884],ebx
   18110:	push   0x9
   18112:	pop    ecx
   18113:	xor    eax,eax
   18115:	lea    edi,[ebp-0x880]
   1811b:	rep stos DWORD PTR es:[edi],eax
   1811d:	mov    DWORD PTR [ebp-0x4],ebx
   18120:	push   0x4
   18122:	push   0x28
   18124:	lea    eax,[ebp-0x884]
   1812a:	push   eax
   1812b:	lea    eax,[ebp-0x834]
   18131:	push   eax
   18132:	push   DWORD PTR [ebp-0x82c]
   18138:	call   0x11b4c
   1813d:	call   eax
   1813f:	cmp    eax,ebx
   18141:	jl     0x181bf
   18143:	mov    esi,0x54897
   18148:	push   esi
   18149:	call   0x10a52
   1814e:	mov    edi,eax
   18150:	push   esi
   18151:	push   0x1eea0
   18156:	push   edi
   18157:	call   0x1da8a
   1815c:	add    esp,0x10
   1815f:	push   0x25
   18161:	push   0x73738
   18166:	push   esi
   18167:	push   edi
   18168:	call   0x10aa6
   1816d:	lea    eax,[ebp-0x828]
   18173:	push   eax
   18174:	push   esi
   18175:	push   edi
   18176:	lea    eax,[ebp-0x83c]
   1817c:	push   eax
   1817d:	call   0x1a03a
   18182:	mov    BYTE PTR [ebp-0x83c],bl
   18188:	mov    eax,DWORD PTR [ebp-0x838]
   1818e:	mov    DWORD PTR [ebp-0x824],eax
   18194:	cmp    eax,ebx
   18196:	je     0x181b1
   18198:	push   DWORD PTR [ebp-0x828]
   1819e:	push   eax
   1819f:	call   0x17a8c
   181a4:	test   al,al
   181a6:	je     0x181b1
   181a8:	mov    BYTE PTR [ebp-0x81d],0x1
   181af:	jmp    0x181bf
   181b1:	mov    BYTE PTR [ebp-0x81d],0x1
   181b8:	mov    BYTE PTR [ebp-0x81e],0x1
   181bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181c6:	jmp    0x181d8
   181c8:	xor    eax,eax
   181ca:	inc    eax
   181cb:	ret    
   181cc:	mov    esp,DWORD PTR [ebp-0x18]
   181cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181d6:	xor    ebx,ebx
   181d8:	push   DWORD PTR [ebp-0x82c]
   181de:	call   0x11954
   181e3:	call   eax
   181e5:	cmp    BYTE PTR [ebp-0x81e],bl
   181eb:	je     0x18210
   181ed:	push   DWORD PTR [ebp-0x880]
   181f3:	push   DWORD PTR [ebp-0x884]
   181f9:	push   DWORD PTR [ebp-0x828]
   181ff:	push   DWORD PTR [ebp-0x824]
   18205:	call   0x17cc0
   1820a:	mov    BYTE PTR [ebp-0x81d],al
   18210:	cmp    DWORD PTR [ebp-0x824],ebx
   18216:	je     0x18224
   18218:	push   DWORD PTR [ebp-0x824]
   1821e:	call   0x1d9fc
   18223:	pop    ecx
   18224:	mov    al,BYTE PTR [ebp-0x81d]
   1822a:	call   0x1de08
   1822f:	ret    
   18230:	int3   
   18231:	int3   
   18232:	int3   
   18233:	int3   
   18234:	int3   
   18235:	int3   
   18236:	mov    edi,edi
   18238:	push   ebp
   18239:	mov    ebp,esp
   1823b:	sub    esp,0xbc
   18241:	mov    eax,ds:0x7771c
   18246:	xor    eax,ebp
   18248:	mov    DWORD PTR [ebp-0x4],eax
   1824b:	push   ebx
   1824c:	push   edi
   1824d:	push   0x1e8b0
   18252:	push   0xb
   18254:	push   0x1e898
   18259:	call   0x16c76
   1825e:	push   eax
   1825f:	lea    eax,[ebp-0xbc]
   18265:	push   eax
   18266:	call   DWORD PTR ds:0x1ee08
   1826c:	xor    eax,eax
   1826e:	lea    edi,[ebp-0xb0]
   18274:	stos   DWORD PTR es:[edi],eax
   18275:	stos   DWORD PTR es:[edi],eax
   18276:	stos   DWORD PTR es:[edi],eax
   18277:	stos   DWORD PTR es:[edi],eax
   18278:	xor    ebx,ebx
   1827a:	push   ebx
   1827b:	stos   DWORD PTR es:[edi],eax
   1827c:	push   ebx
   1827d:	push   ebx
   1827e:	push   0x1
   18280:	xor    eax,eax
   18282:	push   0x7
   18284:	push   ebx
   18285:	mov    DWORD PTR [ebp-0x94],ebx
   1828b:	lea    edi,[ebp-0x90]
   18291:	stos   DWORD PTR es:[edi],eax
   18292:	lea    eax,[ebp-0xbc]
   18298:	mov    DWORD PTR [ebp-0xac],eax
   1829e:	push   ebx
   1829f:	lea    eax,[ebp-0x94]
   182a5:	push   eax
   182a6:	lea    eax,[ebp-0xb4]
   182ac:	push   eax
   182ad:	push   0x89
   182b2:	lea    eax,[ebp-0x8c]
   182b8:	push   eax
   182b9:	mov    DWORD PTR [ebp-0x8c],ebx
   182bf:	mov    DWORD PTR [ebp-0xb4],0x18
   182c9:	mov    DWORD PTR [ebp-0xb0],ebx
   182cf:	mov    DWORD PTR [ebp-0xa8],0x240
   182d9:	mov    DWORD PTR [ebp-0xa4],ebx
   182df:	mov    DWORD PTR [ebp-0xa0],ebx
   182e5:	call   0x11858
   182ea:	call   eax
   182ec:	test   eax,eax
   182ee:	jge    0x182f7
   182f0:	xor    al,al
   182f2:	jmp    0x183b3
   182f7:	push   esi
   182f8:	mov    esi,0x20c
   182fd:	push   esi
   182fe:	call   0x10a52
   18303:	pop    ecx
   18304:	push   0x1
   18306:	mov    edi,eax
   18308:	push   esi
   18309:	push   edi
   1830a:	lea    eax,[ebp-0x94]
   18310:	push   eax
   18311:	push   DWORD PTR [ebp-0x8c]
   18317:	cmp    edi,ebx
   18319:	setne  BYTE PTR [ebp-0x9c]
   18320:	call   0x1182e
   18325:	call   eax
   18327:	push   DWORD PTR [ebp-0x8c]
   1832d:	mov    esi,eax
   1832f:	call   0x11954
   18334:	call   eax
   18336:	cmp    esi,ebx
   18338:	pop    esi
   18339:	jge    0x1834c
   1833b:	cmp    BYTE PTR [ebp-0x9c],bl
   18341:	je     0x182f0
   18343:	push   edi
   18344:	call   0x1d9fc
   18349:	pop    ecx
   1834a:	jmp    0x182f0
   1834c:	push   0x6
   1834e:	push   0x1
   18350:	lea    eax,[ebp-0x84]
   18356:	push   eax
   18357:	push   DWORD PTR [edi+0x8]
   1835a:	call   0x107fe
   1835f:	mov    ecx,0x77608
   18364:	lea    eax,[ebp-0x84]
   1836a:	mov    dx,WORD PTR [eax]
   1836d:	cmp    dx,WORD PTR [ecx]
   18370:	jne    0x18390
   18372:	cmp    dx,bx
   18375:	je     0x1838c
   18377:	mov    dx,WORD PTR [eax+0x2]
   1837b:	cmp    dx,WORD PTR [ecx+0x2]
   1837f:	jne    0x18390
   18381:	add    eax,0x4
   18384:	add    ecx,0x4
   18387:	cmp    dx,bx
   1838a:	jne    0x1836a
   1838c:	xor    eax,eax
   1838e:	jmp    0x18395
   18390:	sbb    eax,eax
   18392:	sbb    eax,0xffffffff
   18395:	cmp    eax,ebx
   18397:	sete   BYTE PTR [ebp-0x85]
   1839e:	cmp    BYTE PTR [ebp-0x9c],bl
   183a4:	je     0x183ad
   183a6:	push   edi
   183a7:	call   0x1d9fc
   183ac:	pop    ecx
   183ad:	mov    al,BYTE PTR [ebp-0x85]
   183b3:	mov    ecx,DWORD PTR [ebp-0x4]
   183b6:	pop    edi
   183b7:	xor    ecx,ebp
   183b9:	pop    ebx
   183ba:	call   0x1da19
   183bf:	leave  
   183c0:	ret    
   183c1:	int3   
   183c2:	int3   
   183c3:	int3   
   183c4:	int3   
   183c5:	int3   
   183c6:	push   0x0
   183c8:	push   0x19
   183ca:	call   0x109dc
   183cf:	test   edx,edx
   183d1:	jl     0x18404
   183d3:	jg     0x183da
   183d5:	cmp    eax,0x3
   183d8:	jbe    0x18404
   183da:	call   0x1a256
   183df:	push   0x1e940
   183e4:	push   0x34
   183e6:	push   0x1e8d6
   183eb:	call   0x16c76
   183f0:	mov    edx,0x778b8
   183f5:	movzx  ecx,WORD PTR [eax]
   183f8:	inc    eax
   183f9:	mov    WORD PTR [edx],cx
   183fc:	inc    eax
   183fd:	inc    edx
   183fe:	inc    edx
   183ff:	test   cx,cx
   18402:	jne    0x183f5
   18404:	ret    
   18405:	int3   
   18406:	int3   
   18407:	int3   
   18408:	int3   
   18409:	int3   
   1840a:	mov    edi,edi
   1840c:	push   ebp
   1840d:	mov    ebp,esp
   1840f:	push   esi
   18410:	mov    esi,ecx
   18412:	lea    ecx,[esi+0x4]
   18415:	mov    DWORD PTR [esi],0x73770
   1841b:	mov    BYTE PTR [ecx+0x8],0x0
   1841f:	call   0x1467a
   18424:	lea    ecx,[esi+0x14]
   18427:	mov    BYTE PTR [ecx+0x8],0x0
   1842b:	call   0x144c8
   18430:	mov    eax,DWORD PTR [ebp+0x8]
   18433:	mov    DWORD PTR [esi+0x24],eax
   18436:	mov    eax,DWORD PTR [ebp+0xc]
   18439:	mov    DWORD PTR [esi+0x28],eax
   1843c:	mov    eax,esi
   1843e:	pop    esi
   1843f:	pop    ebp
   18440:	ret    0x8
   18443:	int3   
   18444:	int3   
   18445:	int3   
   18446:	int3   
   18447:	int3   
   18448:	mov    edi,edi
   1844a:	push   esi
   1844b:	mov    esi,ecx
   1844d:	lea    ecx,[esi+0x14]
   18450:	mov    DWORD PTR [esi],0x73770
   18456:	call   0x160d6
   1845b:	lea    ecx,[esi+0x4]
   1845e:	pop    esi
   1845f:	jmp    0x16a84
   18464:	int3   
   18465:	int3   
   18466:	int3   
   18467:	int3   
   18468:	int3   
   18469:	int3   
   1846a:	mov    edi,edi
   1846c:	push   ebp
   1846d:	mov    ebp,esp
   1846f:	sub    esp,0x124
   18475:	push   ebx
   18476:	push   esi
   18477:	push   edi
   18478:	mov    esi,ecx
   1847a:	call   0x16f86
   1847f:	push   DWORD PTR [ebp+0x8]
   18482:	lea    eax,[ebp-0x4]
   18485:	lea    edi,[esi+0x4]
   18488:	push   eax
   18489:	mov    ecx,edi
   1848b:	call   0x13d06
   18490:	mov    ebx,DWORD PTR [ebp-0x4]
   18493:	cmp    ebx,DWORD PTR [esi+0x8]
   18496:	je     0x184e1
   18498:	mov    eax,DWORD PTR [esi+0x18]
   1849b:	lea    ecx,[ebp+0x8]
   1849e:	mov    DWORD PTR [ebp+0x8],eax
   184a1:	call   0x13ce6
   184a6:	mov    edi,DWORD PTR [eax]
   184a8:	lea    eax,[ebx+0x68]
   184ab:	add    esi,0x14
   184ae:	inc    edi
   184af:	push   eax
   184b0:	mov    ecx,esi
   184b2:	mov    DWORD PTR [ebp+0x8],edi
   184b5:	mov    DWORD PTR [ebp-0x4],eax
   184b8:	call   0x14dc0
   184bd:	lea    eax,[ebp+0x8]
   184c0:	push   eax
   184c1:	lea    eax,[ebp-0xc]
   184c4:	push   eax
   184c5:	mov    ecx,esi
   184c7:	call   0x160ac
   184cc:	push   DWORD PTR [ebp+0xc]
   184cf:	lea    ecx,[ebx+0x18]
   184d2:	call   0x12a50
   184d7:	mov    eax,DWORD PTR [ebp-0x4]
   184da:	mov    DWORD PTR [eax],edi
   184dc:	jmp    0x18576
   184e1:	lea    ecx,[ebp-0x64]
   184e4:	call   0x136dc
   184e9:	xor    eax,eax
   184eb:	cmp    DWORD PTR [esi+0x20],eax
   184ee:	je     0x18501
   184f0:	mov    eax,DWORD PTR [esi+0x18]
   184f3:	lea    ecx,[ebp-0x4]
   184f6:	mov    DWORD PTR [ebp-0x4],eax
   184f9:	call   0x13ce6
   184fe:	mov    eax,DWORD PTR [eax]
   18500:	inc    eax
   18501:	push   DWORD PTR [ebp+0xc]
   18504:	lea    ecx,[ebp-0x64]
   18507:	mov    DWORD PTR [ebp-0x4],eax
   1850a:	mov    DWORD PTR [ebp-0x14],eax
   1850d:	call   0x12a50
   18512:	lea    eax,[ebp-0x64]
   18515:	push   eax
   18516:	push   DWORD PTR [ebp+0x8]
   18519:	lea    ecx,[ebp-0x124]
   1851f:	call   0x135e4
   18524:	lea    eax,[ebp-0x124]
   1852a:	push   eax
   1852b:	lea    ecx,[ebp-0xc4]
   18531:	call   0x134b8
   18536:	lea    eax,[ebp-0xc4]
   1853c:	push   eax
   1853d:	lea    eax,[ebp-0xc]
   18540:	push   eax
   18541:	mov    ecx,edi
   18543:	call   0x16a5a
   18548:	lea    ecx,[ebp-0xc4]
   1854e:	call   0x12ad6
   18553:	lea    ecx,[ebp-0x124]
   18559:	call   0x12ad6
   1855e:	lea    eax,[ebp-0x4]
   18561:	push   eax
   18562:	lea    eax,[ebp-0xc]
   18565:	push   eax
   18566:	lea    ecx,[esi+0x14]
   18569:	call   0x160ac
   1856e:	lea    ecx,[ebp-0x64]
   18571:	call   0x11eba
   18576:	pop    edi
   18577:	pop    esi
   18578:	pop    ebx
   18579:	leave  
   1857a:	ret    0x8
   1857d:	int3   
   1857e:	int3   
   1857f:	int3   
   18580:	int3   
   18581:	int3   
   18582:	mov    edi,edi
   18584:	push   ebp
   18585:	mov    ebp,esp
   18587:	sub    esp,0x10
   1858a:	call   0x1a1c4
   1858f:	test   al,al
   18591:	jne    0x1859b
   18593:	mov    eax,DWORD PTR [ebp+0x8]
   18596:	jmp    0x1862f
   1859b:	push   esi
   1859c:	mov    esi,DWORD PTR [ebp+0x8]
   1859f:	push   0xffffffff
   185a1:	push   esi
   185a2:	lea    ecx,[ebp-0x8]
   185a5:	call   0x1113e
   185aa:	mov    ecx,DWORD PTR ds:0x78c48
   185b0:	lea    eax,[ebp-0x8]
   185b3:	push   eax
   185b4:	lea    eax,[ebp+0x8]
   185b7:	push   eax
   185b8:	call   0x141f6
   185bd:	mov    eax,DWORD PTR [ebp+0x8]
   185c0:	mov    ecx,DWORD PTR ds:0x78c48
   185c6:	cmp    eax,DWORD PTR [ecx+0x4]
   185c9:	jne    0x185fa
   185cb:	lea    eax,[ebp-0x8]
   185ce:	push   eax
   185cf:	lea    ecx,[ebp-0x10]
   185d2:	call   0x12b12
   185d7:	mov    ecx,DWORD PTR ds:0x78c48
   185dd:	lea    eax,[ebp-0x10]
   185e0:	push   eax
   185e1:	lea    eax,[ebp-0x8]
   185e4:	push   eax
   185e5:	call   0x17038
   185ea:	mov    ecx,eax
   185ec:	call   0x12b34
   185f1:	push   DWORD PTR [ebp-0x10]
   185f4:	call   0x1d9fc
   185f9:	pop    ecx
   185fa:	mov    ecx,DWORD PTR ds:0x78c48
   18600:	lea    eax,[ebp-0x8]
   18603:	push   eax
   18604:	lea    eax,[ebp+0x8]
   18607:	push   eax
   18608:	call   0x141f6
   1860d:	mov    eax,DWORD PTR [ebp+0x8]
   18610:	mov    ecx,DWORD PTR ds:0x78c48
   18616:	cmp    eax,DWORD PTR [ecx+0x4]
   18619:	je     0x1861e
   1861b:	mov    esi,DWORD PTR [eax+0x14]
   1861e:	call   0x1a1e0
   18623:	push   DWORD PTR [ebp-0x8]
   18626:	call   0x1d9fc
   1862b:	pop    ecx
   1862c:	mov    eax,esi
   1862e:	pop    esi
   1862f:	leave  
   18630:	ret    0x4
   18633:	int3   
   18634:	int3   
   18635:	int3   
   18636:	int3   
   18637:	int3   
   18638:	mov    edi,edi
   1863a:	push   ebp
   1863b:	mov    ebp,esp
   1863d:	push   esi
   1863e:	mov    esi,ecx
   18640:	call   0x18448
   18645:	test   BYTE PTR [ebp+0x8],0x1
   18649:	je     0x18652
   1864b:	push   esi
   1864c:	call   0x1d9fc
   18651:	pop    ecx
   18652:	mov    eax,esi
   18654:	pop    esi
   18655:	pop    ebp
   18656:	ret    0x4
   18659:	int3   
   1865a:	int3   
   1865b:	int3   
   1865c:	int3   
   1865d:	int3   
   1865e:	mov    edi,edi
   18660:	push   ebp
   18661:	mov    ebp,esp
   18663:	push   esi
   18664:	push   DWORD PTR [ebp+0xc]
   18667:	mov    esi,ecx
   18669:	push   DWORD PTR [ebp+0x8]
   1866c:	call   0x1840a
   18671:	mov    eax,esi
   18673:	pop    esi
   18674:	pop    ebp
   18675:	ret    0x8
   18678:	int3   
   18679:	int3   
   1867a:	int3   
   1867b:	int3   
   1867c:	int3   
   1867d:	int3   
   1867e:	push   0x33c
   18683:	push   0x77488
   18688:	call   0x1ddc0
   1868d:	mov    esi,DWORD PTR [ebp+0xc]
   18690:	mov    DWORD PTR [ebp-0x32c],esi
   18696:	call   DWORD PTR ds:0x1ee00
   1869c:	xor    ebx,ebx
   1869e:	cmp    BYTE PTR [ebp+0x10],bl
   186a1:	jne    0x186df
   186a3:	push   esi
   186a4:	mov    ecx,DWORD PTR ds:0x77750
   186aa:	call   0x15e50
   186af:	mov    edi,eax
   186b1:	push   esi
   186b2:	mov    ecx,DWORD PTR ds:0x77750
   186b8:	call   0x16688
   186bd:	mov    eax,edi
   186bf:	dec    eax
   186c0:	je     0x186d4
   186c2:	dec    eax
   186c3:	je     0x186d0
   186c5:	dec    eax
   186c6:	jne    0x188ba
   186cc:	push   0xa
   186ce:	jmp    0x186d5
   186d0:	push   0x2
   186d2:	jmp    0x186d5
   186d4:	push   ebx
   186d5:	call   0x10fc4
   186da:	jmp    0x188ba
   186df:	mov    DWORD PTR [ebp-0x320],ebx
   186e5:	xor    eax,eax
   186e7:	lea    edi,[ebp-0x326]
   186ed:	stos   DWORD PTR es:[edi],eax
   186ee:	stos   WORD PTR es:[edi],ax
   186f0:	xor    eax,eax
   186f2:	mov    WORD PTR [ebp-0x21c],ax
   186f9:	push   0x1fc
   186fe:	push   ebx
   186ff:	lea    eax,[ebp-0x21a]
   18705:	push   eax
   18706:	call   0x1da7e
   1870b:	add    esp,0xc
   1870e:	lea    eax,[ebp-0x21c]
   18714:	mov    DWORD PTR [ebp-0x324],eax
   1871a:	xor    eax,eax
   1871c:	mov    WORD PTR [ebp-0x328],ax
   18723:	mov    eax,0x1fe
   18728:	mov    WORD PTR [ebp-0x326],ax
   1872f:	mov    DWORD PTR [ebp-0x34c],0x18
   18739:	mov    DWORD PTR [ebp-0x348],ebx
   1873f:	mov    DWORD PTR [ebp-0x340],0x200
   18749:	mov    DWORD PTR [ebp-0x344],ebx
   1874f:	mov    DWORD PTR [ebp-0x33c],ebx
   18755:	mov    DWORD PTR [ebp-0x338],ebx
   1875b:	mov    DWORD PTR [ebp-0x334],esi
   18761:	mov    DWORD PTR [ebp-0x330],ebx
   18767:	lea    eax,[ebp-0x334]
   1876d:	push   eax
   1876e:	lea    eax,[ebp-0x34c]
   18774:	push   eax
   18775:	push   0x1f0fff
   1877a:	lea    eax,[ebp-0x320]
   18780:	push   eax
   18781:	call   0x1168a
   18786:	call   eax
   18788:	test   eax,eax
   1878a:	jl     0x188ba
   18790:	lea    eax,[ebp-0x328]
   18796:	push   eax
   18797:	push   DWORD PTR [ebp-0x320]
   1879d:	call   0x11f86
   187a2:	cmp    eax,ebx
   187a4:	jl     0x188ad
   187aa:	movzx  eax,WORD PTR [ebp-0x328]
   187b1:	shr    eax,1
   187b3:	xor    ecx,ecx
   187b5:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   187bd:	push   DWORD PTR [ebp-0x320]
   187c3:	call   0x12018
   187c8:	lea    eax,[ebp-0x21c]
   187ce:	push   eax
   187cf:	call   0x10da2
   187d4:	cmp    eax,ebx
   187d6:	je     0x187fb
   187d8:	push   eax
   187d9:	push   esi
   187da:	mov    ecx,DWORD PTR ds:0x77750
   187e0:	call   0x16c34
   187e5:	push   DWORD PTR [ebp-0x320]
   187eb:	push   DWORD PTR [ebp-0x320]
   187f1:	call   0x12018
   187f6:	push   eax
   187f7:	push   esi
   187f8:	push   ebx
   187f9:	jmp    0x18879
   187fb:	push   0x1e980
   18800:	push   0x9
   18802:	push   0x1e96c
   18807:	call   0x16c76
   1880c:	push   eax
   1880d:	lea    eax,[ebp-0x328]
   18813:	push   eax
   18814:	call   0x10de4
   18819:	test   al,al
   1881b:	je     0x18880
   1881d:	cmp    DWORD PTR ds:0x78c24,ebx
   18823:	jne    0x18856
   18825:	mov    DWORD PTR ds:0x78c24,0x1
   1882f:	mov    DWORD PTR [ebp-0x4],ebx
   18832:	call   0x17f6c
   18837:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1883e:	jmp    0x18856
   18840:	xor    eax,eax
   18842:	inc    eax
   18843:	ret    
   18844:	mov    esp,DWORD PTR [ebp-0x18]
   18847:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1884e:	xor    ebx,ebx
   18850:	mov    esi,DWORD PTR [ebp-0x32c]
   18856:	cmp    DWORD PTR ds:0x781a4,ebx
   1885c:	jne    0x18864
   1885e:	mov    DWORD PTR ds:0x781a4,esi
   18864:	push   DWORD PTR [ebp-0x320]
   1886a:	push   DWORD PTR [ebp-0x320]
   18870:	call   0x12018
   18875:	push   eax
   18876:	push   esi
   18877:	push   0x1
   18879:	call   0x137f4
   1887e:	jmp    0x188ad
   18880:	lea    eax,[ebp-0x31c]
   18886:	push   eax
   18887:	call   0x10f74
   1888c:	test   al,al
   1888e:	je     0x188ad
   18890:	lea    eax,[ebp-0x31c]
   18896:	push   eax
   18897:	lea    eax,[ebp-0x328]
   1889d:	push   eax
   1889e:	call   0x10de4
   188a3:	test   al,al
   188a5:	je     0x188ad
   188a7:	push   esi
   188a8:	call   0x12048
   188ad:	push   DWORD PTR [ebp-0x320]
   188b3:	call   0x11954
   188b8:	call   eax
   188ba:	call   0x1de08
   188bf:	ret    0xc
   188c2:	int3   
   188c3:	int3   
   188c4:	int3   
   188c5:	int3   
   188c6:	int3   
   188c7:	int3   
   188c8:	mov    edi,edi
   188ca:	push   ebp
   188cb:	mov    ebp,esp
   188cd:	push   ecx
   188ce:	cli    
   188cf:	mov    eax,cr0
   188d2:	mov    DWORD PTR [ebp-0x4],eax
   188d5:	and    eax,0xfffeffff
   188da:	mov    cr0,eax
   188dd:	push   0x1774c
   188e2:	push   DWORD PTR ds:0x780ec
   188e8:	call   0x19890
   188ed:	push   0x0
   188ef:	push   0x1867e
   188f4:	mov    ds:0x780f0,eax
   188f9:	call   0x11708
   188fe:	call   eax
   18900:	push   0x17638
   18905:	call   0x116b4
   1890a:	call   eax
   1890c:	mov    eax,DWORD PTR [ebp-0x4]
   1890f:	mov    cr0,eax
   18912:	sti    
   18913:	leave  
   18914:	ret    
   18915:	int3   
   18916:	int3   
   18917:	int3   
   18918:	int3   
   18919:	int3   
   1891a:	mov    edi,edi
   1891c:	push   ebp
   1891d:	mov    ebp,esp
   1891f:	sub    esp,0x50
   18922:	push   ebx
   18923:	mov    ebx,DWORD PTR [ebp+0x8]
   18926:	push   esi
   18927:	test   bl,0x20
   1892a:	je     0x1896d
   1892c:	push   DWORD PTR [ebp+0x30]
   1892f:	mov    esi,DWORD PTR ds:0x780e8
   18935:	push   DWORD PTR [ebp+0x2c]
   18938:	lea    ecx,[ebp-0x50]
   1893b:	push   DWORD PTR [ebp+0x28]
   1893e:	push   DWORD PTR [ebp+0x24]
   18941:	push   DWORD PTR [ebp+0x20]
   18944:	push   DWORD PTR [ebp+0x1c]
   18947:	push   DWORD PTR [ebp+0x14]
   1894a:	push   DWORD PTR [ebp+0x10]
   1894d:	push   DWORD PTR [ebp+0xc]
   18950:	call   0x13740
   18955:	push   eax
   18956:	push   DWORD PTR [ebp+0xc]
   18959:	mov    ecx,esi
   1895b:	call   0x1846a
   18960:	lea    ecx,[ebp-0x50]
   18963:	call   0x11eba
   18968:	jmp    0x18ab2
   1896d:	push   DWORD PTR [ebp+0xc]
   18970:	mov    ecx,DWORD PTR ds:0x780e0
   18976:	call   0x16152
   1897b:	test   eax,eax
   1897d:	jne    0x1898b
   1897f:	test   bl,0x1
   18982:	jne    0x1898b
   18984:	xor    al,al
   18986:	jmp    0x18ab4
   1898b:	push   DWORD PTR [ebp+0xc]
   1898e:	mov    ecx,DWORD PTR ds:0x780e0
   18994:	call   0x16e7c
   18999:	mov    esi,eax
   1899b:	test   bl,0x1
   1899e:	je     0x189e8
   189a0:	mov    eax,DWORD PTR [ebp+0x28]
   189a3:	push   DWORD PTR [ebp+0xc]
   189a6:	mov    ecx,esi
   189a8:	mov    DWORD PTR [esi+0x2c],eax
   189ab:	call   0x129c2
   189b0:	push   DWORD PTR [ebp+0x10]
   189b3:	lea    ecx,[esi+0x8]
   189b6:	call   0x129c2
   189bb:	mov    eax,DWORD PTR [ebp+0x14]
   189be:	push   DWORD PTR [ebp+0x18]
   189c1:	lea    ecx,[esi+0x14]
   189c4:	mov    DWORD PTR [esi+0x10],eax
   189c7:	call   0x129c2
   189cc:	push   DWORD PTR [ebp+0x1c]
   189cf:	lea    ecx,[esi+0x1c]
   189d2:	call   0x129c2
   189d7:	push   DWORD PTR [ebp+0x20]
   189da:	lea    ecx,[esi+0x24]
   189dd:	call   0x129c2
   189e2:	mov    eax,DWORD PTR [ebp+0x2c]
   189e5:	mov    DWORD PTR [esi+0x30],eax
   189e8:	mov    DWORD PTR [ebp+0x28],ebx
   189eb:	and    DWORD PTR [ebp+0x28],0x2
   189ef:	je     0x189ff
   189f1:	mov    eax,DWORD PTR [ebp+0x30]
   189f4:	mov    ecx,DWORD PTR [eax]
   189f6:	mov    DWORD PTR [esi+0x38],ecx
   189f9:	mov    eax,DWORD PTR [eax+0x4]
   189fc:	mov    DWORD PTR [esi+0x3c],eax
   189ff:	mov    DWORD PTR [ebp+0x10],ebx
   18a02:	and    DWORD PTR [ebp+0x10],0x4
   18a06:	je     0x18a16
   18a08:	mov    eax,DWORD PTR [ebp+0x34]
   18a0b:	mov    ecx,DWORD PTR [eax]
   18a0d:	mov    DWORD PTR [esi+0x40],ecx
   18a10:	mov    eax,DWORD PTR [eax+0x4]
   18a13:	mov    DWORD PTR [esi+0x44],eax
   18a16:	test   bl,0x10
   18a19:	je     0x18ab2
   18a1f:	cmp    DWORD PTR [esi+0x18],0x0
   18a23:	jbe    0x18ab2
   18a29:	mov    eax,ds:0x780e0
   18a2e:	mov    eax,DWORD PTR [eax+0x4]
   18a31:	push   edi
   18a32:	mov    edi,DWORD PTR [eax]
   18a34:	mov    DWORD PTR [ebp+0x14],edi
   18a37:	cmp    edi,eax
   18a39:	je     0x18ab1
   18a3b:	push   DWORD PTR [ebp+0xc]
   18a3e:	lea    ebx,[edi+0x10]
   18a41:	push   ebx
   18a42:	call   0x197d8
   18a47:	test   al,al
   18a49:	je     0x18a9c
   18a4b:	lea    eax,[esi+0x14]
   18a4e:	push   eax
   18a4f:	add    edi,0x2c
   18a52:	push   edi
   18a53:	call   0x197c8
   18a58:	test   al,al
   18a5a:	je     0x18a9c
   18a5c:	cmp    DWORD PTR [ebp+0x28],0x0
   18a60:	je     0x18a7c
   18a62:	mov    ecx,DWORD PTR ds:0x780e0
   18a68:	push   ebx
   18a69:	call   0x16e7c
   18a6e:	mov    ecx,DWORD PTR [ebp+0x30]
   18a71:	mov    edx,DWORD PTR [ecx]
   18a73:	mov    DWORD PTR [eax+0x38],edx
   18a76:	mov    ecx,DWORD PTR [ecx+0x4]
   18a79:	mov    DWORD PTR [eax+0x3c],ecx
   18a7c:	cmp    DWORD PTR [ebp+0x10],0x0
   18a80:	je     0x18a9c
   18a82:	mov    ecx,DWORD PTR ds:0x780e0
   18a88:	push   ebx
   18a89:	call   0x16e7c
   18a8e:	mov    ecx,DWORD PTR [ebp+0x34]
   18a91:	mov    edx,DWORD PTR [ecx]
   18a93:	mov    DWORD PTR [eax+0x40],edx
   18a96:	mov    ecx,DWORD PTR [ecx+0x4]
   18a99:	mov    DWORD PTR [eax+0x44],ecx
   18a9c:	lea    ecx,[ebp+0x14]
   18a9f:	call   0x13882
   18aa4:	mov    edi,DWORD PTR [ebp+0x14]
   18aa7:	mov    eax,ds:0x780e0
   18aac:	cmp    edi,DWORD PTR [eax+0x4]
   18aaf:	jne    0x18a3b
   18ab1:	pop    edi
   18ab2:	mov    al,0x1
   18ab4:	pop    esi
   18ab5:	pop    ebx
   18ab6:	leave  
   18ab7:	ret    0x30
   18aba:	int3   
   18abb:	int3   
   18abc:	int3   
   18abd:	int3   
   18abe:	int3   
   18abf:	int3   
   18ac0:	push   0x4c
   18ac2:	push   0x774a8
   18ac7:	call   0x1dabc
   18acc:	xor    esi,esi
   18ace:	push   esi
   18acf:	push   esi
   18ad0:	push   esi
   18ad1:	push   esi
   18ad2:	push   0x77758
   18ad7:	call   DWORD PTR ds:0x1ee2c
   18add:	cmp    eax,esi
   18adf:	jge    0x18af0
   18ae1:	mov    eax,DWORD PTR [ebp+0x8]
   18ae4:	mov    DWORD PTR [eax+0x8],0x4
   18aeb:	jmp    0x18c25
   18af0:	mov    DWORD PTR [ebp-0x4],esi
   18af3:	or     ebx,0xffffffff
   18af6:	push   ebx
   18af7:	mov    esi,DWORD PTR [ebp+0x8]
   18afa:	lea    eax,[esi+0x28]
   18afd:	push   eax
   18afe:	lea    ecx,[ebp-0x44]
   18b01:	call   0x12980
   18b06:	mov    edi,DWORD PTR [ebp-0x40]
   18b09:	inc    edi
   18b0a:	push   ebx
   18b0b:	lea    eax,[edi+esi*1+0x28]
   18b0f:	push   eax
   18b10:	lea    ecx,[ebp-0x3c]
   18b13:	call   0x12980
   18b18:	mov    eax,DWORD PTR [ebp-0x38]
   18b1b:	lea    edi,[edi+eax*1+0x1]
   18b1f:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b23:	mov    DWORD PTR [ebp-0x1c],eax
   18b26:	add    edi,0x4
   18b29:	push   ebx
   18b2a:	lea    eax,[edi+esi*1+0x28]
   18b2e:	push   eax
   18b2f:	lea    ecx,[ebp-0x34]
   18b32:	call   0x12980
   18b37:	mov    eax,DWORD PTR [ebp-0x30]
   18b3a:	lea    edi,[edi+eax*1+0x1]
   18b3e:	push   ebx
   18b3f:	lea    eax,[edi+esi*1+0x28]
   18b43:	push   eax
   18b44:	lea    ecx,[ebp-0x2c]
   18b47:	call   0x12980
   18b4c:	mov    eax,DWORD PTR [ebp-0x28]
   18b4f:	lea    edi,[edi+eax*1+0x1]
   18b53:	push   ebx
   18b54:	lea    eax,[edi+esi*1+0x28]
   18b58:	push   eax
   18b59:	lea    ecx,[ebp-0x24]
   18b5c:	call   0x12980
   18b61:	mov    eax,DWORD PTR [ebp-0x20]
   18b64:	lea    eax,[edi+eax*1+0x1]
   18b68:	push   ebx
   18b69:	lea    eax,[eax+esi*1+0x28]
   18b6d:	push   eax
   18b6e:	lea    ecx,[ebp-0x5c]
   18b71:	call   0x12980
   18b76:	mov    eax,DWORD PTR [esi+0xc]
   18b79:	mov    ecx,DWORD PTR [esi+0x18]
   18b7c:	mov    DWORD PTR [ebp-0x54],ecx
   18b7f:	mov    ecx,DWORD PTR [esi+0x1c]
   18b82:	mov    DWORD PTR [ebp-0x50],ecx
   18b85:	mov    ecx,DWORD PTR [esi+0x20]
   18b88:	mov    DWORD PTR [ebp-0x4c],ecx
   18b8b:	mov    ecx,DWORD PTR [esi+0x24]
   18b8e:	mov    DWORD PTR [ebp-0x48],ecx
   18b91:	mov    ecx,DWORD PTR [esi+0x10]
   18b94:	lea    edx,[ebp-0x4c]
   18b97:	push   edx
   18b98:	lea    edx,[ebp-0x54]
   18b9b:	push   edx
   18b9c:	push   ecx
   18b9d:	push   eax
   18b9e:	lea    eax,[ebp-0x5c]
   18ba1:	push   eax
   18ba2:	lea    eax,[ebp-0x24]
   18ba5:	push   eax
   18ba6:	lea    eax,[ebp-0x2c]
   18ba9:	push   eax
   18baa:	lea    eax,[ebp-0x34]
   18bad:	push   eax
   18bae:	push   DWORD PTR [ebp-0x1c]
   18bb1:	lea    eax,[ebp-0x3c]
   18bb4:	push   eax
   18bb5:	lea    eax,[ebp-0x44]
   18bb8:	push   eax
   18bb9:	push   DWORD PTR [esi+0x4]
   18bbc:	call   0x1891a
   18bc1:	xor    ecx,ecx
   18bc3:	test   al,al
   18bc5:	sete   cl
   18bc8:	mov    DWORD PTR [esi+0x8],ecx
   18bcb:	push   DWORD PTR [ebp-0x5c]
   18bce:	call   0x1d9fc
   18bd3:	push   DWORD PTR [ebp-0x24]
   18bd6:	call   0x1d9fc
   18bdb:	push   DWORD PTR [ebp-0x2c]
   18bde:	call   0x1d9fc
   18be3:	push   DWORD PTR [ebp-0x34]
   18be6:	call   0x1d9fc
   18beb:	push   DWORD PTR [ebp-0x3c]
   18bee:	call   0x1d9fc
   18bf3:	push   DWORD PTR [ebp-0x44]
   18bf6:	call   0x1d9fc
   18bfb:	add    esp,0x18
   18bfe:	jmp    0x18c11
   18c00:	xor    eax,eax
   18c02:	inc    eax
   18c03:	ret    
   18c04:	mov    esp,DWORD PTR [ebp-0x18]
   18c07:	mov    eax,DWORD PTR [ebp+0x8]
   18c0a:	mov    DWORD PTR [eax+0x8],0x4
   18c11:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c18:	push   0x0
   18c1a:	push   0x77758
   18c1f:	call   DWORD PTR ds:0x1ee28
   18c25:	call   0x1db01
   18c2a:	ret    0x4
   18c2d:	int3   
   18c2e:	int3   
   18c2f:	int3   
   18c30:	int3   
   18c31:	int3   
   18c32:	push   0x2c
   18c34:	push   0x774c8
   18c39:	call   0x1dabc
   18c3e:	xor    edi,edi
   18c40:	mov    DWORD PTR [ebp-0x24],edi
   18c43:	mov    ebx,DWORD PTR [ebp+0xc]
   18c46:	mov    DWORD PTR [ebx+0x18],edi
   18c49:	mov    DWORD PTR [ebx+0x1c],edi
   18c4c:	mov    eax,DWORD PTR [ebx+0x60]
   18c4f:	cmp    BYTE PTR [eax],0xe
   18c52:	jne    0x190f2
   18c58:	mov    eax,DWORD PTR [eax+0xc]
   18c5b:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c62:	mov    ecx,0x22c068
   18c67:	cmp    eax,ecx
   18c69:	ja     0x18fa3
   18c6f:	je     0x18f94
   18c75:	add    ecx,0xffffffd0
   18c78:	cmp    eax,ecx
   18c7a:	ja     0x18d97
   18c80:	je     0x18d7e
   18c86:	sub    eax,0x22c020
   18c8b:	je     0x18d48
   18c91:	push   0x4
   18c93:	pop    esi
   18c94:	sub    eax,esi
   18c96:	je     0x18d12
   18c98:	sub    eax,esi
   18c9a:	je     0x18cf7
   18c9c:	sub    eax,esi
   18c9e:	je     0x18cea
   18ca0:	sub    eax,esi
   18ca2:	je     0x18cb9
   18ca4:	sub    eax,esi
   18ca6:	jne    0x19092
   18cac:	push   DWORD PTR [ebx+0xc]
   18caf:	call   0x17972
   18cb4:	jmp    0x190ef
   18cb9:	mov    esi,DWORD PTR [ebx+0xc]
   18cbc:	mov    eax,DWORD PTR [esi]
   18cbe:	add    eax,0x28
   18cc1:	mov    DWORD PTR [ebx+0x1c],eax
   18cc4:	push   0xffffffff
   18cc6:	lea    eax,[esi+0x28]
   18cc9:	push   eax
   18cca:	lea    ecx,[ebp-0x34]
   18ccd:	call   0x1109a
   18cd2:	push   esi
   18cd3:	lea    eax,[ebp-0x34]
   18cd6:	push   eax
   18cd7:	call   0x16822
   18cdc:	push   DWORD PTR [ebp-0x34]
   18cdf:	call   0x1d9fc
   18ce4:	pop    ecx
   18ce5:	jmp    0x190f2
   18cea:	push   DWORD PTR [ebx+0xc]
   18ced:	call   0x18ac0
   18cf2:	jmp    0x190ef
   18cf7:	mov    ecx,DWORD PTR ds:0x780e0
   18cfd:	call   0x16b00
   18d02:	mov    ecx,DWORD PTR ds:0x777b4
   18d08:	call   0x16bbc
   18d0d:	jmp    0x190f2
   18d12:	mov    eax,DWORD PTR [ebx+0xc]
   18d15:	mov    DWORD PTR [ebx+0x1c],0x10
   18d1c:	mov    ecx,DWORD PTR [eax]
   18d1e:	cmp    ecx,edi
   18d20:	jl     0x190f2
   18d26:	cmp    ecx,0x6
   18d29:	jge    0x190f2
   18d2f:	mov    edx,DWORD PTR [eax+0x8]
   18d32:	mov    DWORD PTR [ecx*8+0x78130],edx
   18d39:	mov    eax,DWORD PTR [eax+0xc]
   18d3c:	mov    DWORD PTR [ecx*8+0x78134],eax
   18d43:	jmp    0x190f2
   18d48:	mov    eax,DWORD PTR [ebx+0xc]
   18d4b:	mov    DWORD PTR [ebx+0x1c],0x10
   18d52:	mov    ecx,DWORD PTR [eax]
   18d54:	cmp    ecx,edi
   18d56:	jl     0x190f2
   18d5c:	cmp    ecx,0x6
   18d5f:	jge    0x190f2
   18d65:	mov    edx,DWORD PTR [ecx*8+0x78130]
   18d6c:	mov    DWORD PTR [eax+0x8],edx
   18d6f:	mov    ecx,DWORD PTR [ecx*8+0x78134]
   18d76:	mov    DWORD PTR [eax+0xc],ecx
   18d79:	jmp    0x190f2
   18d7e:	mov    eax,DWORD PTR [ebx+0xc]
   18d81:	mov    ecx,DWORD PTR [eax]
   18d83:	add    ecx,0xc
   18d86:	mov    DWORD PTR [ebx+0x1c],ecx
   18d89:	push   eax
   18d8a:	push   DWORD PTR [eax+0x4]
   18d8d:	call   0x15f92
   18d92:	jmp    0x190f2
   18d97:	sub    eax,0x22c03c
   18d9c:	je     0x18f10
   18da2:	sub    eax,0x10
   18da5:	je     0x18f06
   18dab:	push   0x4
   18dad:	pop    esi
   18dae:	sub    eax,esi
   18db0:	je     0x18e06
   18db2:	sub    eax,0xc
   18db5:	je     0x18dee
   18db7:	sub    eax,esi
   18db9:	je     0x18dd0
   18dbb:	sub    eax,esi
   18dbd:	jne    0x19092
   18dc3:	push   DWORD PTR [ebx+0xc]
   18dc6:	call   0x12872
   18dcb:	jmp    0x190ef
   18dd0:	mov    DWORD PTR [ebx+0x1c],0x8
   18dd7:	mov    ebx,DWORD PTR [ebx+0xc]
   18dda:	mov    eax,ds:0x78114
   18ddf:	mov    DWORD PTR [ebx],eax
   18de1:	mov    eax,ds:0x78118
   18de6:	mov    DWORD PTR [ebx+0x4],eax
   18de9:	jmp    0x190f2
   18dee:	mov    eax,DWORD PTR [ebx+0xc]
   18df1:	mov    ecx,DWORD PTR [eax]
   18df3:	mov    DWORD PTR ds:0x78114,ecx
   18df9:	mov    eax,DWORD PTR [eax+0x4]
   18dfc:	mov    ds:0x78118,eax
   18e01:	jmp    0x190ef
   18e06:	mov    DWORD PTR [ebx+0x1c],edi
   18e09:	mov    esi,DWORD PTR [ebx+0xc]
   18e0c:	mov    DWORD PTR [ebp-0x20],esi
   18e0f:	push   0xffffffff
   18e11:	push   0x1dec8
   18e16:	lea    ecx,[ebp-0x2c]
   18e19:	call   0x1109a
   18e1e:	xor    edi,edi
   18e20:	inc    edi
   18e21:	mov    DWORD PTR [esi+0x8],edi
   18e24:	xor    eax,eax
   18e26:	push   eax
   18e27:	push   eax
   18e28:	push   eax
   18e29:	push   eax
   18e2a:	push   0x77758
   18e2f:	call   DWORD PTR ds:0x1ee2c
   18e35:	test   eax,eax
   18e37:	jge    0x18e41
   18e39:	push   DWORD PTR [ebp-0x2c]
   18e3c:	jmp    0x18cdf
   18e41:	and    DWORD PTR [ebp-0x4],0x0
   18e45:	mov    DWORD PTR [ebp-0x4],edi
   18e48:	mov    eax,DWORD PTR [esi]
   18e4a:	add    eax,0x28
   18e4d:	mov    DWORD PTR [ebx+0x1c],eax
   18e50:	mov    eax,ds:0x780e0
   18e55:	mov    ebx,DWORD PTR [eax+0x4]
   18e58:	mov    eax,DWORD PTR [ebx]
   18e5a:	mov    DWORD PTR [ebp+0xc],eax
   18e5d:	and    DWORD PTR [ebp-0x1c],0x0
   18e61:	mov    edi,DWORD PTR [esi+0x28]
   18e64:	cmp    DWORD PTR [ebp-0x1c],edi
   18e67:	jge    0x18e7b
   18e69:	cmp    DWORD PTR [ebp+0xc],ebx
   18e6c:	je     0x18e7b
   18e6e:	lea    ecx,[ebp+0xc]
   18e71:	call   0x13882
   18e76:	inc    DWORD PTR [ebp-0x1c]
   18e79:	jmp    0x18e64
   18e7b:	mov    eax,DWORD PTR [ebp+0xc]
   18e7e:	cmp    eax,ebx
   18e80:	je     0x18e94
   18e82:	and    DWORD PTR [esi+0x8],0x0
   18e86:	add    eax,0x10
   18e89:	push   eax
   18e8a:	lea    ecx,[ebp-0x2c]
   18e8d:	call   0x129c2
   18e92:	jmp    0x18e9b
   18e94:	mov    DWORD PTR [esi+0x8],0x1
   18e9b:	and    DWORD PTR [esi+0x4],0x0
   18e9f:	and    DWORD PTR [ebp-0x4],0x0
   18ea3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18eaa:	call   0x18ef8
   18eaf:	cmp    DWORD PTR [esi+0x8],0x0
   18eb3:	jne    0x18e39
   18eb5:	push   esi
   18eb6:	lea    eax,[ebp-0x2c]
   18eb9:	push   eax
   18eba:	call   0x16822
   18ebf:	jmp    0x18e39
   18ec4:	xor    eax,eax
   18ec6:	inc    eax
   18ec7:	ret    
   18ec8:	mov    esp,DWORD PTR [ebp-0x18]
   18ecb:	mov    eax,DWORD PTR [ebp-0x20]
   18ece:	mov    DWORD PTR [eax+0x8],0x4
   18ed5:	push   DWORD PTR [ebp-0x2c]
   18ed8:	call   0x1d9fc
   18edd:	push   0xfffffffe
   18edf:	lea    eax,[ebp-0x10]
   18ee2:	push   eax
   18ee3:	push   0x7771c
   18ee8:	call   0x1dc7c
   18eed:	add    esp,0x10
   18ef0:	jmp    0x190f2
   18ef5:	mov    esi,DWORD PTR [ebp-0x20]
   18ef8:	push   0x0
   18efa:	push   0x77758
   18eff:	call   DWORD PTR ds:0x1ee28
   18f05:	ret    
   18f06:	call   0x1239c
   18f0b:	jmp    0x190f2
   18f10:	mov    eax,DWORD PTR [ebx+0xc]
   18f13:	mov    ecx,DWORD PTR ds:0x77604
   18f19:	mov    esi,eax
   18f1b:	sub    esi,ecx
   18f1d:	push   0x2
   18f1f:	pop    edi
   18f20:	movzx  edx,WORD PTR [ecx]
   18f23:	mov    WORD PTR [esi+ecx*1],dx
   18f27:	add    ecx,edi
   18f29:	test   dx,dx
   18f2c:	jne    0x18f20
   18f2e:	mov    ecx,0x77648
   18f33:	lea    esi,[eax+0x50]
   18f36:	sub    esi,ecx
   18f38:	movzx  edx,WORD PTR [ecx]
   18f3b:	mov    WORD PTR [esi+ecx*1],dx
   18f3f:	add    ecx,edi
   18f41:	test   dx,dx
   18f44:	jne    0x18f38
   18f46:	mov    ecx,0x77608
   18f4b:	lea    esi,[eax+0x90]
   18f51:	sub    esi,ecx
   18f53:	movzx  edx,WORD PTR [ecx]
   18f56:	mov    WORD PTR [esi+ecx*1],dx
   18f5a:	add    ecx,edi
   18f5c:	test   dx,dx
   18f5f:	jne    0x18f53
   18f61:	mov    ecx,0x77688
   18f66:	lea    esi,[eax+0xd0]
   18f6c:	sub    esi,ecx
   18f6e:	movzx  edx,WORD PTR [ecx]
   18f71:	mov    WORD PTR [esi+ecx*1],dx
   18f75:	add    ecx,edi
   18f77:	test   dx,dx
   18f7a:	jne    0x18f6e
   18f7c:	lea    edi,[eax+0x40]
   18f7f:	mov    esi,0x73760
   18f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f88:	mov    DWORD PTR [ebx+0x1c],0x110
   18f8f:	jmp    0x190f2
   18f94:	mov    eax,DWORD PTR [ebx+0xc]
   18f97:	push   DWORD PTR [eax]
   18f99:	call   0x10fc4
   18f9e:	jmp    0x190ef
   18fa3:	mov    ecx,0x22c088
   18fa8:	cmp    eax,ecx
   18faa:	ja     0x19074
   18fb0:	je     0x19049
   18fb6:	sub    eax,0x22c06c
   18fbb:	je     0x19031
   18fbd:	push   0x4
   18fbf:	pop    esi
   18fc0:	sub    eax,esi
   18fc2:	je     0x19024
   18fc4:	push   0x8
   18fc6:	pop    ecx
   18fc7:	sub    eax,ecx
   18fc9:	je     0x19017
   18fcb:	sub    eax,esi
   18fcd:	je     0x18fff
   18fcf:	sub    eax,esi
   18fd1:	je     0x18fe8
   18fd3:	sub    eax,esi
   18fd5:	jne    0x19092
   18fdb:	push   DWORD PTR [ebx+0xc]
   18fde:	call   0x1787c
   18fe3:	jmp    0x190ef
   18fe8:	mov    DWORD PTR [ebx+0x1c],ecx
   18feb:	mov    ebx,DWORD PTR [ebx+0xc]
   18fee:	mov    eax,ds:0x7811c
   18ff3:	mov    DWORD PTR [ebx],eax
   18ff5:	mov    eax,ds:0x78120
   18ffa:	jmp    0x18de6
   18fff:	mov    eax,DWORD PTR [ebx+0xc]
   19002:	mov    ecx,DWORD PTR [eax]
   19004:	mov    DWORD PTR ds:0x7811c,ecx
   1900a:	mov    eax,DWORD PTR [eax+0x4]
   1900d:	mov    ds:0x78120,eax
   19012:	jmp    0x190ef
   19017:	push   DWORD PTR [ebx+0xc]
   1901a:	call   0x1708e
   1901f:	jmp    0x190ef
   19024:	push   DWORD PTR [ebx+0xc]
   19027:	call   0x10f34
   1902c:	jmp    0x190ef
   19031:	mov    esi,DWORD PTR [ebx+0xc]
   19034:	push   DWORD PTR [esi]
   19036:	call   0x11008
   1903b:	mov    DWORD PTR [esi],eax
   1903d:	mov    DWORD PTR [ebx+0x1c],0x4
   19044:	jmp    0x190f2
   19049:	mov    esi,DWORD PTR [ebx+0xc]
   1904c:	mov    eax,DWORD PTR [esi]
   1904e:	add    eax,0xc
   19051:	mov    DWORD PTR [ebx+0x1c],eax
   19054:	push   0xffffffff
   19056:	lea    eax,[esi+0xc]
   19059:	push   eax
   1905a:	lea    ecx,[ebp-0x3c]
   1905d:	call   0x1109a
   19062:	push   esi
   19063:	lea    eax,[ebp-0x3c]
   19066:	push   eax
   19067:	call   0x15ea8
   1906c:	push   DWORD PTR [ebp-0x3c]
   1906f:	jmp    0x18cdf
   19074:	sub    eax,0x22c08c
   19079:	je     0x190e1
   1907b:	push   0x4
   1907d:	pop    esi
   1907e:	sub    eax,esi
   19080:	je     0x190cd
   19082:	sub    eax,esi
   19084:	je     0x190c6
   19086:	sub    eax,esi
   19088:	je     0x190b2
   1908a:	sub    eax,esi
   1908c:	je     0x190a8
   1908e:	sub    eax,esi
   19090:	je     0x1909b
   19092:	mov    DWORD PTR [ebp-0x24],0xc0000010
   19099:	jmp    0x190ef
   1909b:	push   DWORD PTR [ebx+0xc]
   1909e:	call   0x1aa5a
   190a3:	mov    DWORD PTR [ebx+0x1c],esi
   190a6:	jmp    0x190f2
   190a8:	push   DWORD PTR [ebx+0xc]
   190ab:	call   0x1b4e0
   190b0:	jmp    0x190ef
   190b2:	mov    eax,DWORD PTR [ebx+0xc]
   190b5:	mov    ecx,DWORD PTR [eax+0x4]
   190b8:	add    ecx,0x8
   190bb:	mov    DWORD PTR [ebx+0x1c],ecx
   190be:	push   eax
   190bf:	call   0x1b7ae
   190c4:	jmp    0x190f2
   190c6:	call   0x1b3f0
   190cb:	jmp    0x190ef
   190cd:	mov    eax,DWORD PTR [ebx+0xc]
   190d0:	mov    ecx,DWORD PTR [eax+0x4]
   190d3:	add    ecx,0x8
   190d6:	mov    DWORD PTR [ebx+0x1c],ecx
   190d9:	push   eax
   190da:	call   0x1a83a
   190df:	jmp    0x190f2
   190e1:	push   DWORD PTR [ebx+0xc]
   190e4:	call   0x11050
   190e9:	push   eax
   190ea:	call   0x1b612
   190ef:	mov    DWORD PTR [ebx+0x1c],edi
   190f2:	mov    eax,DWORD PTR [ebp-0x24]
   190f5:	call   0x1db01
   190fa:	ret    0x8
   190fd:	int3   
   190fe:	int3   
   190ff:	int3   
   19100:	int3   
   19101:	int3   
   19102:	push   0xc
   19104:	push   0x774f0
   19109:	call   0x1dabc
   1910e:	and    DWORD PTR [ebp-0x4],0x0
   19112:	push   DWORD PTR [ebp+0xc]
   19115:	push   DWORD PTR [ebp+0x8]
   19118:	call   0x18c32
   1911d:	mov    esi,eax
   1911f:	jmp    0x19134
   19121:	xor    eax,eax
   19123:	inc    eax
   19124:	ret    
   19125:	mov    esp,DWORD PTR [ebp-0x18]
   19128:	push   0xd
   1912a:	call   0x10fc4
   1912f:	mov    esi,0xc0000001
   19134:	mov    DWORD PTR [ebp-0x1c],esi
   19137:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1913e:	cmp    esi,0x103
   19144:	je     0x19154
   19146:	mov    ecx,DWORD PTR [ebp+0xc]
   19149:	mov    DWORD PTR [ecx+0x18],esi
   1914c:	xor    dl,dl
   1914e:	call   DWORD PTR ds:0x1ee48
   19154:	mov    eax,esi
   19156:	call   0x1db01
   1915b:	ret    0x8
   1915e:	int3   
   1915f:	int3   
   19160:	int3   
   19161:	int3   
   19162:	int3   
   19163:	int3   
   19164:	mov    edi,edi
   19166:	push   ebp
   19167:	mov    ebp,esp
   19169:	push   esi
   1916a:	mov    esi,ecx
   1916c:	mov    BYTE PTR [esi+0x8],0x0
   19170:	call   0x14ad8
   19175:	lea    ecx,[esi+0x10]
   19178:	mov    BYTE PTR [ecx+0x8],0x0
   1917c:	call   0x144c8
   19181:	mov    eax,DWORD PTR [ebp+0x8]
   19184:	mov    DWORD PTR [esi+0x20],eax
   19187:	mov    eax,DWORD PTR [ebp+0xc]
   1918a:	mov    DWORD PTR [esi+0x24],eax
   1918d:	mov    eax,esi
   1918f:	pop    esi
   19190:	pop    ebp
   19191:	ret    0x8
   19194:	int3   
   19195:	int3   
   19196:	int3   
   19197:	int3   
   19198:	int3   
   19199:	int3   
   1919a:	push   0x850
   1919f:	push   0x77510
   191a4:	call   0x1ddc0
   191a9:	mov    esi,DWORD PTR [ebp+0x8]
   191ac:	mov    DWORD PTR [ebp-0x828],esi
   191b2:	mov    edi,DWORD PTR [ebp+0xc]
   191b5:	call   0x183c6
   191ba:	call   0x11cf0
   191bf:	test   eax,eax
   191c1:	je     0x1969e
   191c7:	xor    ebx,ebx
   191c9:	mov    DWORD PTR [ebp-0x838],ebx
   191cf:	call   0x18236
   191d4:	cmp    al,bl
   191d6:	jne    0x192c7
   191dc:	mov    DWORD PTR [ebp-0x4],ebx
   191df:	push   ebx
   191e0:	push   0x19
   191e2:	call   0x109dc
   191e7:	cmp    edx,ebx
   191e9:	jl     0x191ff
   191eb:	jg     0x191f2
   191ed:	cmp    eax,0x5
   191f0:	jbe    0x191ff
   191f2:	push   ebx
   191f3:	push   0x780b8
   191f8:	call   0x11c72
   191fd:	call   eax
   191ff:	push   edi
   19200:	push   0x1ebaa
   19205:	lea    eax,[ebp-0x41c]
   1920b:	push   eax
   1920c:	call   0x1daae
   19211:	add    esp,0xc
   19214:	lea    eax,[ebp-0x858]
   1921a:	push   eax
   1921b:	call   DWORD PTR ds:0x1ee50
   19221:	push   0x1eb7e
   19226:	push   0x4
   19228:	push   0x1eb74
   1922d:	call   0x16c76
   19232:	mov    DWORD PTR [ebp-0x82c],eax
   19238:	lea    ecx,[eax+0x2]
   1923b:	mov    dx,WORD PTR [eax]
   1923e:	inc    eax
   1923f:	inc    eax
   19240:	cmp    dx,bx
   19243:	jne    0x1923b
   19245:	sub    eax,ecx
   19247:	sar    eax,1
   19249:	add    eax,eax
   1924b:	mov    WORD PTR [ebp-0x82e],ax
   19252:	mov    WORD PTR [ebp-0x830],ax
   19259:	mov    DWORD PTR [ebp-0x850],0x18
   19263:	mov    DWORD PTR [ebp-0x84c],ebx
   19269:	mov    DWORD PTR [ebp-0x844],0x40
   19273:	lea    eax,[ebp-0x830]
   19279:	mov    DWORD PTR [ebp-0x848],eax
   1927f:	mov    DWORD PTR [ebp-0x840],ebx
   19285:	mov    DWORD PTR [ebp-0x83c],ebx
   1928b:	mov    eax,DWORD PTR [ebp-0x82c]
   19291:	lea    ecx,[eax+0x2]
   19294:	mov    dx,WORD PTR [eax]
   19297:	inc    eax
   19298:	inc    eax
   19299:	cmp    dx,bx
   1929c:	jne    0x19294
   1929e:	sub    eax,ecx
   192a0:	sar    eax,1
   192a2:	mov    DWORD PTR [ebp-0x838],eax
   192a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192af:	jmp    0x192c7
   192b1:	xor    eax,eax
   192b3:	inc    eax
   192b4:	ret    
   192b5:	mov    esp,DWORD PTR [ebp-0x18]
   192b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192bf:	xor    ebx,ebx
   192c1:	mov    esi,DWORD PTR [ebp-0x828]
   192c7:	cmp    DWORD PTR [ebp-0x838],ebx
   192cd:	jne    0x1969e
   192d3:	xor    eax,eax
   192d5:	lea    edi,[ebp-0x840]
   192db:	stos   DWORD PTR es:[edi],eax
   192dc:	stos   DWORD PTR es:[edi],eax
   192dd:	mov    DWORD PTR [ebp-0x844],0xc
   192e7:	mov    DWORD PTR [ebp-0x840],0x2
   192f1:	mov    BYTE PTR [ebp-0x83c],bl
   192f7:	mov    BYTE PTR [ebp-0x83b],bl
   192fd:	push   0x77778
   19302:	push   ebx
   19303:	lea    eax,[ebp-0x844]
   19309:	push   eax
   1930a:	call   0x11cc6
   1930f:	call   eax
   19311:	push   eax
   19312:	call   0x11bca
   19317:	call   eax
   19319:	push   0x10
   1931b:	call   0x10a52
   19320:	pop    ecx
   19321:	cmp    eax,ebx
   19323:	je     0x19341
   19325:	lea    ecx,[ebp-0x81d]
   1932b:	push   ecx
   1932c:	lea    ecx,[ebp-0x81d]
   19332:	push   ecx
   19333:	mov    ecx,eax
   19335:	call   0x16e62
   1933a:	mov    ds:0x780e0,eax
   1933f:	jmp    0x19347
   19341:	mov    DWORD PTR ds:0x780e0,ebx
   19347:	push   0x2c
   19349:	call   0x10a52
   1934e:	pop    ecx
   1934f:	cmp    eax,ebx
   19351:	je     0x19368
   19353:	push   0x5dc
   19358:	push   0x14
   1935a:	mov    ecx,eax
   1935c:	call   0x1865e
   19361:	mov    ds:0x780e8,eax
   19366:	jmp    0x1936e
   19368:	mov    DWORD PTR ds:0x780e8,ebx
   1936e:	push   0x10
   19370:	call   0x10a52
   19375:	pop    ecx
   19376:	cmp    eax,ebx
   19378:	je     0x19396
   1937a:	lea    ecx,[ebp-0x81d]
   19380:	push   ecx
   19381:	lea    ecx,[ebp-0x81d]
   19387:	push   ecx
   19388:	mov    ecx,eax
   1938a:	call   0x16a40
   1938f:	mov    ds:0x77728,eax
   19394:	jmp    0x1939c
   19396:	mov    DWORD PTR ds:0x77728,ebx
   1939c:	push   0x10
   1939e:	call   0x10a52
   193a3:	pop    ecx
   193a4:	cmp    eax,ebx
   193a6:	je     0x193c4
   193a8:	lea    ecx,[ebp-0x81d]
   193ae:	push   ecx
   193af:	lea    ecx,[ebp-0x81d]
   193b5:	push   ecx
   193b6:	mov    ecx,eax
   193b8:	call   0x16f26
   193bd:	mov    ds:0x777b4,eax
   193c2:	jmp    0x193ca
   193c4:	mov    DWORD PTR ds:0x777b4,ebx
   193ca:	push   0x28
   193cc:	call   0x10a52
   193d1:	pop    ecx
   193d2:	cmp    eax,ebx
   193d4:	je     0x193eb
   193d6:	push   0x3e8
   193db:	push   0x14
   193dd:	mov    ecx,eax
   193df:	call   0x19164
   193e4:	mov    ds:0x77754,eax
   193e9:	jmp    0x193f1
   193eb:	mov    DWORD PTR ds:0x77754,ebx
   193f1:	push   0x20
   193f3:	call   0x10a52
   193f8:	pop    ecx
   193f9:	cmp    eax,ebx
   193fb:	je     0x1940b
   193fd:	mov    ecx,eax
   193ff:	call   0x16c04
   19404:	mov    ds:0x77750,eax
   19409:	jmp    0x19411
   1940b:	mov    DWORD PTR ds:0x77750,ebx
   19411:	call   0x12958
   19416:	call   0x1b57a
   1941b:	call   0x17a22
   19420:	push   0x1eb64
   19425:	call   0x18582
   1942a:	push   eax
   1942b:	push   0x1eb2e
   19430:	push   0xa
   19432:	push   0x1eb18
   19437:	call   0x16c76
   1943c:	push   eax
   1943d:	lea    eax,[ebp-0x81c]
   19443:	push   eax
   19444:	call   0x1daa2
   19449:	add    esp,0xc
   1944c:	lea    eax,[ebp-0x81c]
   19452:	push   eax
   19453:	lea    eax,[ebp-0x860]
   19459:	push   eax
   1945a:	mov    edi,DWORD PTR ds:0x1ee08
   19460:	call   edi
   19462:	push   0x1eb64
   19467:	call   0x18582
   1946c:	push   eax
   1946d:	push   0x1eaf4
   19472:	push   0xe
   19474:	push   0x1ead6
   19479:	call   0x16c76
   1947e:	push   eax
   1947f:	lea    eax,[ebp-0x41c]
   19485:	push   eax
   19486:	call   0x1daa2
   1948b:	add    esp,0xc
   1948e:	lea    eax,[ebp-0x41c]
   19494:	push   eax
   19495:	lea    eax,[ebp-0x858]
   1949b:	push   eax
   1949c:	call   edi
   1949e:	push   0x78124
   194a3:	push   ebx
   194a4:	push   0x100
   194a9:	push   0x22
   194ab:	lea    eax,[ebp-0x860]
   194b1:	push   eax
   194b2:	push   ebx
   194b3:	push   esi
   194b4:	call   0x11ba0
   194b9:	call   eax
   194bb:	cmp    eax,ebx
   194bd:	jl     0x196a0
   194c3:	mov    eax,0x19102
   194c8:	mov    DWORD PTR [esi+0x94],eax
   194ce:	mov    DWORD PTR [esi+0x90],eax
   194d4:	mov    DWORD PTR [esi+0xa4],eax
   194da:	mov    DWORD PTR [esi+0x70],eax
   194dd:	mov    DWORD PTR [esi+0x48],eax
   194e0:	mov    DWORD PTR [esi+0x44],eax
   194e3:	mov    DWORD PTR [esi+0x40],eax
   194e6:	mov    DWORD PTR [esi+0x38],eax
   194e9:	mov    eax,ds:0x78124
   194ee:	or     DWORD PTR [eax+0x1c],0x4
   194f2:	lea    eax,[ebp-0x860]
   194f8:	push   eax
   194f9:	lea    eax,[ebp-0x858]
   194ff:	push   eax
   19500:	call   0x11b76
   19505:	call   eax
   19507:	mov    DWORD PTR [ebp-0x828],eax
   1950d:	cmp    eax,ebx
   1950f:	jge    0x19526
   19511:	push   DWORD PTR [esi+0x4]
   19514:	call   0x11a26
   19519:	call   eax
   1951b:	mov    eax,DWORD PTR [ebp-0x828]
   19521:	jmp    0x196a0
   19526:	push   ebx
   19527:	push   0x780b8
   1952c:	call   0x11c72
   19531:	call   eax
   19533:	push   ebx
   19534:	push   0x77758
   19539:	call   0x11c72
   1953e:	call   eax
   19540:	push   ebx
   19541:	push   0x7772c
   19546:	call   0x11c72
   1954b:	call   eax
   1954d:	push   0x8000000
   19552:	push   0x1ea98
   19557:	push   0x9
   19559:	push   0x1e70c
   1955e:	call   0x16d6c
   19563:	push   eax
   19564:	lea    eax,[ebp-0x824]
   1956a:	push   eax
   1956b:	call   0x19ada
   19570:	push   DWORD PTR [ebp-0x824]
   19576:	call   0x11882
   1957b:	call   eax
   1957d:	mov    DWORD PTR [ebp-0x834],eax
   19583:	push   ebx
   19584:	push   0x1ea6c
   19589:	push   0x16
   1958b:	push   0x1ea54
   19590:	call   0x16d6c
   19595:	push   eax
   19596:	push   DWORD PTR [ebp-0x824]
   1959c:	call   0x199c0
   195a1:	push   eax
   195a2:	push   DWORD PTR [ebp-0x834]
   195a8:	call   0x19966
   195ad:	mov    edi,eax
   195af:	add    edi,DWORD PTR [ebp-0x824]
   195b5:	mov    esi,0x1deca
   195ba:	push   esi
   195bb:	call   0x115c2
   195c0:	mov    DWORD PTR [ebp-0x82c],eax
   195c6:	push   edi
   195c7:	call   0x1990e
   195cc:	mov    ecx,DWORD PTR [ebp-0x82c]
   195d2:	mov    ecx,DWORD PTR [ecx]
   195d4:	mov    eax,DWORD PTR [ecx+eax*4]
   195d7:	mov    ds:0x780e4,eax
   195dc:	push   ebx
   195dd:	push   0x1ea1a
   195e2:	push   0x14
   195e4:	push   0x1ea04
   195e9:	call   0x16d6c
   195ee:	push   eax
   195ef:	push   DWORD PTR [ebp-0x824]
   195f5:	call   0x199c0
   195fa:	push   eax
   195fb:	push   DWORD PTR [ebp-0x834]
   19601:	call   0x19966
   19606:	mov    edi,eax
   19608:	add    edi,DWORD PTR [ebp-0x824]
   1960e:	push   esi
   1960f:	call   0x115c2
   19614:	mov    DWORD PTR [ebp-0x82c],eax
   1961a:	push   edi
   1961b:	call   0x1990e
   19620:	mov    ecx,DWORD PTR [ebp-0x82c]
   19626:	mov    ecx,DWORD PTR [ecx]
   19628:	mov    eax,DWORD PTR [ecx+eax*4]
   1962b:	mov    ds:0x780d8,eax
   19630:	push   ebx
   19631:	push   0x1e9c6
   19636:	push   0xe
   19638:	push   0x1e9b6
   1963d:	call   0x16d6c
   19642:	push   eax
   19643:	push   DWORD PTR [ebp-0x824]
   19649:	call   0x199c0
   1964e:	push   eax
   1964f:	push   DWORD PTR [ebp-0x834]
   19655:	call   0x19966
   1965a:	mov    edi,eax
   1965c:	add    edi,DWORD PTR [ebp-0x824]
   19662:	push   esi
   19663:	call   0x115c2
   19668:	mov    esi,eax
   1966a:	push   edi
   1966b:	call   0x1990e
   19670:	mov    ecx,DWORD PTR [esi]
   19672:	mov    eax,DWORD PTR [ecx+eax*4]
   19675:	mov    ds:0x780ec,eax
   1967a:	push   DWORD PTR [ebp-0x824]
   19680:	call   0x19c28
   19685:	push   ebx
   19686:	push   0x19
   19688:	call   0x109dc
   1968d:	call   0x188c8
   19692:	mov    BYTE PTR ds:0x78128,0x1
   19699:	jmp    0x1951b
   1969e:	xor    eax,eax
   196a0:	call   0x1de08
   196a5:	ret    0x8
   196a8:	int3   
   196a9:	int3   
   196aa:	int3   
   196ab:	int3   
   196ac:	int3   
   196ad:	int3   
   196ae:	mov    edi,edi
   196b0:	push   ebp
   196b1:	mov    ebp,esp
   196b3:	push   ecx
   196b4:	mov    ecx,DWORD PTR [ebp+0x8]
   196b7:	mov    eax,DWORD PTR [ecx+0x4]
   196ba:	mov    edx,DWORD PTR [ebp+0xc]
   196bd:	push   ebx
   196be:	mov    ebx,DWORD PTR [edx+0x4]
   196c1:	push   esi
   196c2:	push   edi
   196c3:	mov    DWORD PTR [ebp-0x4],eax
   196c6:	mov    DWORD PTR [ebp+0x8],eax
   196c9:	cmp    eax,ebx
   196cb:	jbe    0x196d0
   196cd:	mov    DWORD PTR [ebp+0x8],ebx
   196d0:	xor    eax,eax
   196d2:	cmp    DWORD PTR [ebp+0x8],eax
   196d5:	jbe    0x196ed
   196d7:	mov    esi,DWORD PTR [ecx]
   196d9:	mov    edi,DWORD PTR [edx]
   196db:	mov    cl,BYTE PTR [esi+eax*1]
   196de:	mov    dl,BYTE PTR [edi+eax*1]
   196e1:	cmp    cl,dl
   196e3:	jl     0x196fa
   196e5:	jg     0x196fe
   196e7:	inc    eax
   196e8:	cmp    eax,DWORD PTR [ebp+0x8]
   196eb:	jb     0x196db
   196ed:	cmp    DWORD PTR [ebp-0x4],ebx
   196f0:	setb   al
   196f3:	pop    edi
   196f4:	pop    esi
   196f5:	pop    ebx
   196f6:	leave  
   196f7:	ret    0x8
   196fa:	mov    al,0x1
   196fc:	jmp    0x196f3
   196fe:	xor    al,al
   19700:	jmp    0x196f3
   19702:	int3   
   19703:	int3   
   19704:	int3   
   19705:	int3   
   19706:	int3   
   19707:	int3   
   19708:	mov    edi,edi
   1970a:	push   ebp
   1970b:	mov    ebp,esp
   1970d:	mov    eax,DWORD PTR [ebp+0x8]
   19710:	mov    ecx,DWORD PTR [eax+0x4]
   19713:	mov    edx,DWORD PTR [ebp+0xc]
   19716:	cmp    ecx,DWORD PTR [edx+0x4]
   19719:	je     0x1971f
   1971b:	xor    al,al
   1971d:	jmp    0x1972e
   1971f:	push   esi
   19720:	mov    esi,DWORD PTR [eax]
   19722:	push   edi
   19723:	mov    edi,DWORD PTR [edx]
   19725:	xor    eax,eax
   19727:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19729:	pop    edi
   1972a:	sete   al
   1972d:	pop    esi
   1972e:	pop    ebp
   1972f:	ret    0x8
   19732:	int3   
   19733:	int3   
   19734:	int3   
   19735:	int3   
   19736:	int3   
   19737:	int3   
   19738:	mov    edi,edi
   1973a:	push   ebp
   1973b:	mov    ebp,esp
   1973d:	push   DWORD PTR [ebp+0xc]
   19740:	push   DWORD PTR [ebp+0x8]
   19743:	call   0x19708
   19748:	xor    ecx,ecx
   1974a:	test   al,al
   1974c:	sete   cl
   1974f:	mov    al,cl
   19751:	pop    ebp
   19752:	ret    0x8
   19755:	int3   
   19756:	int3   
   19757:	int3   
   19758:	int3   
   19759:	int3   
   1975a:	mov    edi,edi
   1975c:	push   ebp
   1975d:	mov    ebp,esp
   1975f:	push   ecx
   19760:	mov    ecx,DWORD PTR [ebp+0x8]
   19763:	mov    eax,DWORD PTR [ebp+0xc]
   19766:	push   ebx
   19767:	mov    ebx,DWORD PTR [eax+0x4]
   1976a:	push   esi
   1976b:	push   edi
   1976c:	mov    edi,DWORD PTR [ecx+0x4]
   1976f:	mov    DWORD PTR [ebp-0x4],edi
   19772:	cmp    edi,ebx
   19774:	jbe    0x19778
   19776:	mov    edi,ebx
   19778:	and    DWORD PTR [ebp+0x8],0x0
   1977c:	test   edi,edi
   1977e:	jbe    0x1979e
   19780:	mov    eax,DWORD PTR [eax]
   19782:	mov    ecx,DWORD PTR [ecx]
   19784:	sub    ecx,eax
   19786:	movzx  edx,WORD PTR [ecx+eax*1]
   1978a:	movzx  esi,WORD PTR [eax]
   1978d:	cmp    dx,si
   19790:	jb     0x197ab
   19792:	ja     0x197af
   19794:	inc    DWORD PTR [ebp+0x8]
   19797:	inc    eax
   19798:	inc    eax
   19799:	cmp    DWORD PTR [ebp+0x8],edi
   1979c:	jb     0x19786
   1979e:	cmp    DWORD PTR [ebp-0x4],ebx
   197a1:	setb   al
   197a4:	pop    edi
   197a5:	pop    esi
   197a6:	pop    ebx
   197a7:	leave  
   197a8:	ret    0x8
   197ab:	mov    al,0x1
   197ad:	jmp    0x197a4
   197af:	xor    al,al
   197b1:	jmp    0x197a4
   197b3:	int3   
   197b4:	int3   
   197b5:	int3   
   197b6:	int3   
   197b7:	int3   
   197b8:	mov    edi,edi
   197ba:	push   ebp
   197bb:	mov    ebp,esp
   197bd:	pop    ebp
   197be:	jmp    0x196ae
   197c3:	int3   
   197c4:	int3   
   197c5:	int3   
   197c6:	int3   
   197c7:	int3   
   197c8:	mov    edi,edi
   197ca:	push   ebp
   197cb:	mov    ebp,esp
   197cd:	pop    ebp
   197ce:	jmp    0x19708
   197d3:	int3   
   197d4:	int3   
   197d5:	int3   
   197d6:	int3   
   197d7:	int3   
   197d8:	mov    edi,edi
   197da:	push   ebp
   197db:	mov    ebp,esp
   197dd:	pop    ebp
   197de:	jmp    0x19738
   197e3:	int3   
   197e4:	int3   
   197e5:	int3   
   197e6:	int3   
   197e7:	int3   
   197e8:	mov    edi,edi
   197ea:	push   ebp
   197eb:	mov    ebp,esp
   197ed:	pop    ebp
   197ee:	jmp    0x1975a
   197f3:	int3   
   197f4:	int3   
   197f5:	int3   
   197f6:	int3   
   197f7:	int3   
   197f8:	mov    edi,edi
   197fa:	push   ebp
   197fb:	mov    ebp,esp
   197fd:	mov    eax,DWORD PTR [ebp+0x8]
   19800:	mov    cl,BYTE PTR [ebp+0xc]
   19803:	mov    BYTE PTR [eax],cl
   19805:	inc    eax
   19806:	pop    ebp
   19807:	ret    0x8
   1980a:	int3   
   1980b:	int3   
   1980c:	int3   
   1980d:	int3   
   1980e:	int3   
   1980f:	int3   
   19810:	mov    edi,edi
   19812:	push   ebp
   19813:	mov    ebp,esp
   19815:	mov    eax,DWORD PTR [ebp+0x8]
   19818:	mov    ecx,DWORD PTR [ebp+0xc]
   1981b:	mov    DWORD PTR [eax],ecx
   1981d:	add    eax,0x4
   19820:	pop    ebp
   19821:	ret    0x8
   19824:	int3   
   19825:	int3   
   19826:	int3   
   19827:	int3   
   19828:	int3   
   19829:	int3   
   1982a:	mov    edi,edi
   1982c:	push   ebp
   1982d:	mov    ebp,esp
   1982f:	mov    eax,DWORD PTR [ebp+0x8]
   19832:	mov    cx,WORD PTR [ebp+0xc]
   19836:	mov    WORD PTR [eax],cx
   19839:	add    eax,0x2
   1983c:	pop    ebp
   1983d:	ret    0x8
   19840:	int3   
   19841:	int3   
   19842:	int3   
   19843:	int3   
   19844:	int3   
   19845:	int3   
   19846:	mov    edi,edi
   19848:	push   ebp
   19849:	mov    ebp,esp
   1984b:	push   esi
   1984c:	mov    esi,DWORD PTR [ebp+0x10]
   1984f:	push   edi
   19850:	mov    edi,DWORD PTR [ebp+0x8]
   19853:	push   esi
   19854:	push   DWORD PTR [ebp+0xc]
   19857:	push   edi
   19858:	call   0x1da8a
   1985d:	add    esp,0xc
   19860:	lea    eax,[edi+esi*1]
   19863:	pop    edi
   19864:	pop    esi
   19865:	pop    ebp
   19866:	ret    0xc
   19869:	int3   
   1986a:	int3   
   1986b:	int3   
   1986c:	int3   
   1986d:	int3   
   1986e:	mov    edi,edi
   19870:	push   ebp
   19871:	mov    ebp,esp
   19873:	mov    eax,DWORD PTR [ebp+0xc]
   19876:	mov    ecx,DWORD PTR [ebp+0x8]
   19879:	sub    ecx,eax
   1987b:	sub    ecx,0x5
   1987e:	mov    BYTE PTR [eax],0xe9
   19881:	mov    DWORD PTR [eax+0x1],ecx
   19884:	add    eax,0x5
   19887:	pop    ebp
   19888:	ret    0x8
   1988b:	int3   
   1988c:	int3   
   1988d:	int3   
   1988e:	int3   
   1988f:	int3   
   19890:	mov    edi,edi
   19892:	push   ebp
   19893:	mov    ebp,esp
   19895:	push   ecx
   19896:	push   ebx
   19897:	mov    ebx,DWORD PTR [ebp+0x8]
   1989a:	and    DWORD PTR [ebp+0x8],0x0
   1989e:	push   edi
   1989f:	mov    edi,ebx
   198a1:	test   ebx,ebx
   198a3:	jne    0x198a9
   198a5:	xor    eax,eax
   198a7:	jmp    0x19903
   198a9:	push   esi
   198aa:	push   0x20736649
   198af:	push   0x80
   198b4:	push   0x0
   198b6:	call   DWORD PTR ds:0x1ee64
   198bc:	mov    esi,eax
   198be:	mov    DWORD PTR [ebp-0x4],esi
   198c1:	push   0x0
   198c3:	push   edi
   198c4:	push   esi
   198c5:	call   0x19faa
   198ca:	mov    ecx,eax
   198cc:	sub    ecx,edi
   198ce:	add    DWORD PTR [ebp+0x8],ecx
   198d1:	add    esi,ecx
   198d3:	cmp    DWORD PTR [ebp+0x8],0x5
   198d7:	mov    edi,eax
   198d9:	jb     0x198c1
   198db:	push   DWORD PTR [ebp+0x8]
   198de:	push   0x90
   198e3:	push   ebx
   198e4:	call   0x1da7e
   198e9:	add    esp,0xc
   198ec:	push   esi
   198ed:	lea    eax,[ebx+0x5]
   198f0:	push   eax
   198f1:	call   0x1986e
   198f6:	push   ebx
   198f7:	push   DWORD PTR [ebp+0xc]
   198fa:	call   0x1986e
   198ff:	mov    eax,DWORD PTR [ebp-0x4]
   19902:	pop    esi
   19903:	pop    edi
   19904:	pop    ebx
   19905:	leave  
   19906:	ret    0x8
   19909:	int3   
   1990a:	int3   
   1990b:	int3   
   1990c:	int3   
   1990d:	int3   
   1990e:	mov    edi,edi
   19910:	push   ebp
   19911:	mov    ebp,esp
   19913:	mov    eax,DWORD PTR [ebp+0x8]
   19916:	mov    eax,DWORD PTR [eax+0x1]
   19919:	pop    ebp
   1991a:	ret    0x4
   1991d:	int3   
   1991e:	int3   
   1991f:	int3   
   19920:	int3   
   19921:	int3   
   19922:	mov    edi,edi
   19924:	push   ebp
   19925:	mov    ebp,esp
   19927:	mov    ecx,DWORD PTR [ebp+0x8]
   1992a:	movzx  eax,WORD PTR [ecx+0x14]
   1992e:	lea    eax,[eax+ecx*1+0x18]
   19932:	movzx  ecx,WORD PTR [ecx+0x6]
   19936:	push   esi
   19937:	xor    esi,esi
   19939:	push   edi
   1993a:	test   ecx,ecx
   1993c:	jbe    0x19958
   1993e:	mov    edx,DWORD PTR [eax+0xc]
   19941:	cmp    DWORD PTR [ebp+0xc],edx
   19944:	jb     0x19950
   19946:	mov    edi,DWORD PTR [eax+0x8]
   19949:	add    edi,edx
   1994b:	cmp    DWORD PTR [ebp+0xc],edi
   1994e:	jb     0x1995a
   19950:	add    eax,0x28
   19953:	inc    esi
   19954:	cmp    esi,ecx
   19956:	jb     0x1993e
   19958:	xor    eax,eax
   1995a:	pop    edi
   1995b:	pop    esi
   1995c:	pop    ebp
   1995d:	ret    0x8
   19960:	int3   
   19961:	int3   
   19962:	int3   
   19963:	int3   
   19964:	int3   
   19965:	int3   
   19966:	mov    edi,edi
   19968:	push   ebp
   19969:	mov    ebp,esp
   1996b:	push   esi
   1996c:	push   DWORD PTR [ebp+0xc]
   1996f:	mov    esi,DWORD PTR [ebp+0x8]
   19972:	push   esi
   19973:	call   0x19922
   19978:	mov    ecx,eax
   1997a:	test   ecx,ecx
   1997c:	je     0x1998f
   1997e:	mov    eax,DWORD PTR [esi+0x3c]
   19981:	dec    eax
   19982:	not    eax
   19984:	and    eax,DWORD PTR [ecx+0x14]
   19987:	sub    eax,DWORD PTR [ecx+0xc]
   1998a:	add    eax,DWORD PTR [ebp+0xc]
   1998d:	jmp    0x19992
   1998f:	mov    eax,DWORD PTR [ebp+0xc]
   19992:	pop    esi
   19993:	pop    ebp
   19994:	ret    0x8
   19997:	int3   
   19998:	int3   
   19999:	int3   
   1999a:	int3   
   1999b:	int3   
   1999c:	mov    edi,edi
   1999e:	push   ebp
   1999f:	mov    ebp,esp
   199a1:	cmp    DWORD PTR [ebp+0x10],0x0
   199a5:	je     0x199ac
   199a7:	mov    eax,DWORD PTR [ebp+0xc]
   199aa:	jmp    0x199b7
   199ac:	push   DWORD PTR [ebp+0xc]
   199af:	push   DWORD PTR [ebp+0x8]
   199b2:	call   0x19966
   199b7:	pop    ebp
   199b8:	ret    0xc
   199bb:	int3   
   199bc:	int3   
   199bd:	int3   
   199be:	int3   
   199bf:	int3   
   199c0:	mov    edi,edi
   199c2:	push   ebp
   199c3:	mov    ebp,esp
   199c5:	sub    esp,0x1c
   199c8:	push   ebx
   199c9:	push   esi
   199ca:	mov    esi,DWORD PTR [ebp+0x8]
   199cd:	push   edi
   199ce:	push   esi
   199cf:	call   0x11882
   199d4:	call   eax
   199d6:	mov    ebx,eax
   199d8:	lea    eax,[ebp-0x14]
   199db:	push   eax
   199dc:	push   0x0
   199de:	push   0x0
   199e0:	push   esi
   199e1:	mov    DWORD PTR [ebp-0x4],ebx
   199e4:	call   0x118ac
   199e9:	call   eax
   199eb:	mov    edi,eax
   199ed:	mov    eax,DWORD PTR [ebx+0x50]
   199f0:	mov    ecx,edi
   199f2:	sub    ecx,esi
   199f4:	cmp    eax,ecx
   199f6:	jb     0x19a47
   199f8:	mov    ecx,DWORD PTR [ebp-0x14]
   199fb:	sub    ecx,esi
   199fd:	add    ecx,edi
   199ff:	cmp    eax,ecx
   19a01:	jb     0x19a47
   19a03:	push   DWORD PTR [ebp+0x10]
   19a06:	push   DWORD PTR [edi+0x20]
   19a09:	push   ebx
   19a0a:	call   0x1999c
   19a0f:	push   DWORD PTR [ebp+0x10]
   19a12:	mov    ebx,eax
   19a14:	push   DWORD PTR [edi+0x1c]
   19a17:	add    ebx,esi
   19a19:	push   DWORD PTR [ebp-0x4]
   19a1c:	call   0x1999c
   19a21:	push   DWORD PTR [ebp+0x10]
   19a24:	add    eax,esi
   19a26:	push   DWORD PTR [edi+0x24]
   19a29:	mov    DWORD PTR [ebp-0x1c],eax
   19a2c:	push   DWORD PTR [ebp-0x4]
   19a2f:	call   0x1999c
   19a34:	and    DWORD PTR [ebp-0xc],0x0
   19a38:	add    eax,esi
   19a3a:	mov    esi,DWORD PTR [edi+0x18]
   19a3d:	mov    DWORD PTR [ebp-0x18],eax
   19a40:	mov    DWORD PTR [ebp-0x8],esi
   19a43:	test   esi,esi
   19a45:	jg     0x19a53
   19a47:	xor    eax,eax
   19a49:	pop    edi
   19a4a:	pop    esi
   19a4b:	pop    ebx
   19a4c:	leave  
   19a4d:	ret    0xc
   19a50:	mov    esi,DWORD PTR [ebp-0x8]
   19a53:	mov    eax,DWORD PTR [ebp-0xc]
   19a56:	push   DWORD PTR [ebp+0x10]
   19a59:	add    esi,eax
   19a5b:	mov    eax,DWORD PTR [ebp+0xc]
   19a5e:	sar    esi,1
   19a60:	push   DWORD PTR [ebx+esi*4]
   19a63:	mov    DWORD PTR [ebp-0x10],eax
   19a66:	push   DWORD PTR [ebp-0x4]
   19a69:	call   0x1999c
   19a6e:	add    eax,DWORD PTR [ebp+0x8]
   19a71:	mov    cl,BYTE PTR [eax]
   19a73:	mov    edx,DWORD PTR [ebp-0x10]
   19a76:	cmp    cl,BYTE PTR [edx]
   19a78:	jne    0x19a95
   19a7a:	test   cl,cl
   19a7c:	je     0x19a91
   19a7e:	mov    cl,BYTE PTR [eax+0x1]
   19a81:	cmp    cl,BYTE PTR [edx+0x1]
   19a84:	jne    0x19a95
   19a86:	inc    eax
   19a87:	inc    eax
   19a88:	inc    edx
   19a89:	inc    edx
   19a8a:	mov    DWORD PTR [ebp-0x10],edx
   19a8d:	test   cl,cl
   19a8f:	jne    0x19a71
   19a91:	xor    eax,eax
   19a93:	jmp    0x19a9a
   19a95:	sbb    eax,eax
   19a97:	sbb    eax,0xffffffff
   19a9a:	test   eax,eax
   19a9c:	je     0x19ab3
   19a9e:	jge    0x19aa6
   19aa0:	inc    esi
   19aa1:	mov    DWORD PTR [ebp-0xc],esi
   19aa4:	jmp    0x19aa9
   19aa6:	mov    DWORD PTR [ebp-0x8],esi
   19aa9:	mov    eax,DWORD PTR [ebp-0x8]
   19aac:	cmp    DWORD PTR [ebp-0xc],eax
   19aaf:	jl     0x19a50
   19ab1:	jmp    0x19a47
   19ab3:	mov    eax,DWORD PTR [ebp-0x18]
   19ab6:	movzx  eax,WORD PTR [eax+esi*2]
   19aba:	mov    ecx,DWORD PTR [ebp-0x1c]
   19abd:	mov    ecx,DWORD PTR [ecx+eax*4]
   19ac0:	mov    eax,ecx
   19ac2:	sub    eax,edi
   19ac4:	add    eax,DWORD PTR [ebp+0x8]
   19ac7:	cmp    eax,DWORD PTR [ebp-0x14]
   19aca:	sbb    eax,eax
   19acc:	not    eax
   19ace:	and    eax,ecx
   19ad0:	jmp    0x19a49
   19ad5:	int3   
   19ad6:	int3   
   19ad7:	int3   
   19ad8:	int3   
   19ad9:	int3   
   19ada:	mov    edi,edi
   19adc:	push   ebp
   19add:	mov    ebp,esp
   19adf:	sub    esp,0x814
   19ae5:	mov    eax,ds:0x7771c
   19aea:	xor    eax,ebp
   19aec:	mov    DWORD PTR [ebp-0x4],eax
   19aef:	mov    ecx,DWORD PTR [ebp+0xc]
   19af2:	push   ebx
   19af3:	mov    ebx,DWORD PTR [ebp+0x8]
   19af6:	push   esi
   19af7:	push   edi
   19af8:	xor    esi,esi
   19afa:	xor    eax,eax
   19afc:	push   ecx
   19afd:	mov    DWORD PTR [ebp-0x7ec],esi
   19b03:	lea    edi,[ebp-0x7e8]
   19b09:	stos   DWORD PTR es:[edi],eax
   19b0a:	lea    eax,[ebp-0x7d4]
   19b10:	push   0x1ebae
   19b15:	push   eax
   19b16:	mov    DWORD PTR [ebp-0x7d8],esi
   19b1c:	mov    DWORD PTR [ebp-0x7e4],esi
   19b22:	call   DWORD PTR ds:0x1ee4c
   19b28:	add    esp,0xc
   19b2b:	lea    eax,[ebp-0x7d4]
   19b31:	push   eax
   19b32:	lea    eax,[ebp-0x80c]
   19b38:	push   eax
   19b39:	call   DWORD PTR ds:0x1ee08
   19b3f:	push   0x10
   19b41:	lea    eax,[ebp-0x80c]
   19b47:	mov    DWORD PTR [ebp-0x7fc],eax
   19b4d:	push   0x1
   19b4f:	lea    eax,[ebp-0x814]
   19b55:	push   eax
   19b56:	lea    eax,[ebp-0x804]
   19b5c:	push   eax
   19b5d:	push   0x80100000
   19b62:	lea    eax,[ebp-0x7dc]
   19b68:	push   eax
   19b69:	mov    DWORD PTR [ebp-0x804],0x18
   19b73:	mov    DWORD PTR [ebp-0x800],esi
   19b79:	mov    DWORD PTR [ebp-0x7f8],esi
   19b7f:	mov    DWORD PTR [ebp-0x7f4],esi
   19b85:	mov    DWORD PTR [ebp-0x7f0],esi
   19b8b:	call   0x11732
   19b90:	call   eax
   19b92:	cmp    eax,esi
   19b94:	jl     0x19c12
   19b96:	push   DWORD PTR [ebp-0x7dc]
   19b9c:	lea    eax,[ebp-0x7ec]
   19ba2:	push   DWORD PTR [ebp+0x10]
   19ba5:	push   0x2
   19ba7:	push   eax
   19ba8:	push   esi
   19ba9:	push   0x4
   19bab:	lea    eax,[ebp-0x7e0]
   19bb1:	push   eax
   19bb2:	call   0x11c1e
   19bb7:	call   eax
   19bb9:	push   DWORD PTR [ebp-0x7dc]
   19bbf:	mov    edi,eax
   19bc1:	call   0x11954
   19bc6:	call   eax
   19bc8:	cmp    edi,esi
   19bca:	jge    0x19bd0
   19bcc:	mov    eax,edi
   19bce:	jmp    0x19c12
   19bd0:	push   0x2
   19bd2:	push   esi
   19bd3:	push   0x2
   19bd5:	lea    eax,[ebp-0x7e4]
   19bdb:	push   eax
   19bdc:	push   esi
   19bdd:	push   esi
   19bde:	push   esi
   19bdf:	lea    eax,[ebp-0x7d8]
   19be5:	push   eax
   19be6:	push   0xffffffff
   19be8:	push   DWORD PTR [ebp-0x7e0]
   19bee:	call   0x11bf4
   19bf3:	call   eax
   19bf5:	push   DWORD PTR [ebp-0x7e0]
   19bfb:	mov    edi,eax
   19bfd:	call   0x11954
   19c02:	call   eax
   19c04:	cmp    edi,esi
   19c06:	jl     0x19bcc
   19c08:	mov    eax,DWORD PTR [ebp-0x7d8]
   19c0e:	mov    DWORD PTR [ebx],eax
   19c10:	xor    eax,eax
   19c12:	mov    ecx,DWORD PTR [ebp-0x4]
   19c15:	pop    edi
   19c16:	pop    esi
   19c17:	xor    ecx,ebp
   19c19:	pop    ebx
   19c1a:	call   0x1da19
   19c1f:	leave  
   19c20:	ret    0xc
   19c23:	int3   
   19c24:	int3   
   19c25:	int3   
   19c26:	int3   
   19c27:	int3   
   19c28:	mov    edi,edi
   19c2a:	push   ebp
   19c2b:	mov    ebp,esp
   19c2d:	push   DWORD PTR [ebp+0x8]
   19c30:	push   0xffffffff
   19c32:	call   0x11c48
   19c37:	call   eax
   19c39:	pop    ebp
   19c3a:	ret    0x4
   19c3d:	int3   
   19c3e:	int3   
   19c3f:	int3   
   19c40:	int3   
   19c41:	int3   
   19c42:	mov    edi,edi
   19c44:	push   ebp
   19c45:	mov    ebp,esp
   19c47:	push   esi
   19c48:	mov    esi,DWORD PTR [ebp+0x8]
   19c4b:	test   esi,esi
   19c4d:	jne    0x19c52
   19c4f:	lea    esi,[ecx+0x18]
   19c52:	mov    edx,DWORD PTR [ebp+0xc]
   19c55:	test   edx,edx
   19c57:	jne    0x19c5d
   19c59:	xor    eax,eax
   19c5b:	jmp    0x19c6d
   19c5d:	movzx  eax,BYTE PTR [edx]
   19c60:	push   edx
   19c61:	lea    eax,[eax*8+0x73878]
   19c68:	push   esi
   19c69:	push   eax
   19c6a:	call   DWORD PTR [eax+0x4]
   19c6d:	pop    esi
   19c6e:	pop    ebp
   19c6f:	ret    0x8
   19c72:	int3   
   19c73:	int3   
   19c74:	int3   
   19c75:	int3   
   19c76:	int3   
   19c77:	int3   
   19c78:	mov    edi,edi
   19c7a:	push   ebp
   19c7b:	mov    ebp,esp
   19c7d:	mov    eax,DWORD PTR [ebp+0x14]
   19c80:	push   ebx
   19c81:	mov    ebx,DWORD PTR [ebp+0x8]
   19c84:	push   esi
   19c85:	mov    esi,DWORD PTR [ebp+0x10]
   19c88:	sub    esi,eax
   19c8a:	push   edi
   19c8b:	lea    edi,[ebx+eax*1]
   19c8e:	mov    eax,esi
   19c90:	xor    edx,edx
   19c92:	dec    eax
   19c93:	je     0x19cb4
   19c95:	dec    eax
   19c96:	je     0x19ca6
   19c98:	dec    eax
   19c99:	dec    eax
   19c9a:	jne    0x19cc0
   19c9c:	mov    eax,DWORD PTR [ecx+0xc]
   19c9f:	mov    edx,DWORD PTR [edi]
   19ca1:	and    DWORD PTR [eax],0x0
   19ca4:	jmp    0x19cc0
   19ca6:	mov    eax,DWORD PTR [ecx+0xc]
   19ca9:	movsx  edx,WORD PTR [edi]
   19cac:	mov    DWORD PTR [eax],0x2
   19cb2:	jmp    0x19cc0
   19cb4:	mov    eax,DWORD PTR [ecx+0xc]
   19cb7:	movsx  edx,BYTE PTR [edi]
   19cba:	mov    DWORD PTR [eax],0x3
   19cc0:	mov    ecx,DWORD PTR [ebp+0xc]
   19cc3:	lea    eax,[edx+ecx*1]
   19cc6:	add    eax,DWORD PTR [ebp+0x10]
   19cc9:	sub    edx,ebx
   19ccb:	add    edx,ecx
   19ccd:	dec    esi
   19cce:	je     0x19ce0
   19cd0:	dec    esi
   19cd1:	je     0x19cdb
   19cd3:	dec    esi
   19cd4:	dec    esi
   19cd5:	jne    0x19ce2
   19cd7:	mov    DWORD PTR [edi],edx
   19cd9:	jmp    0x19ce2
   19cdb:	mov    WORD PTR [edi],dx
   19cde:	jmp    0x19ce2
   19ce0:	mov    BYTE PTR [edi],dl
   19ce2:	pop    edi
   19ce3:	pop    esi
   19ce4:	pop    ebx
   19ce5:	pop    ebp
   19ce6:	ret    0x10
   19ce9:	int3   
   19cea:	int3   
   19ceb:	int3   
   19cec:	int3   
   19ced:	int3   
   19cee:	mov    edi,edi
   19cf0:	push   ebp
   19cf1:	mov    ebp,esp
   19cf3:	mov    eax,DWORD PTR [ebp+0x10]
   19cf6:	inc    eax
   19cf7:	pop    ebp
   19cf8:	ret    0xc
   19cfb:	int3   
   19cfc:	int3   
   19cfd:	int3   
   19cfe:	int3   
   19cff:	int3   
   19d00:	mov    edi,edi
   19d02:	push   ebp
   19d03:	mov    ebp,esp
   19d05:	mov    eax,ecx
   19d07:	mov    ecx,DWORD PTR [ebp+0x8]
   19d0a:	and    DWORD PTR [eax],0x0
   19d0d:	and    DWORD PTR [eax+0x4],0x0
   19d11:	test   ecx,ecx
   19d13:	jne    0x19d18
   19d15:	lea    ecx,[eax+0x14]
   19d18:	mov    edx,DWORD PTR [ebp+0xc]
   19d1b:	mov    DWORD PTR [eax+0x8],ecx
   19d1e:	test   edx,edx
   19d20:	jne    0x19d25
   19d22:	lea    edx,[eax+0x10]
   19d25:	mov    DWORD PTR [eax+0xc],edx
   19d28:	and    DWORD PTR [ecx],0x0
   19d2b:	mov    ecx,DWORD PTR [eax+0xc]
   19d2e:	and    DWORD PTR [ecx],0x0
   19d31:	pop    ebp
   19d32:	ret    0x8
   19d35:	int3   
   19d36:	int3   
   19d37:	int3   
   19d38:	int3   
   19d39:	int3   
   19d3a:	mov    edi,edi
   19d3c:	push   ebp
   19d3d:	mov    ebp,esp
   19d3f:	push   ecx
   19d40:	mov    eax,DWORD PTR [ebp+0x8]
   19d43:	mov    eax,DWORD PTR [eax]
   19d45:	push   ebx
   19d46:	push   esi
   19d47:	push   edi
   19d48:	mov    DWORD PTR [ebp-0x4],ecx
   19d4b:	mov    esi,eax
   19d4d:	test   eax,0x200000
   19d52:	je     0x19d5f
   19d54:	cmp    DWORD PTR [ecx+0x4],0x0
   19d58:	je     0x19d64
   19d5a:	shr    esi,0xb
   19d5d:	jmp    0x19d67
   19d5f:	cmp    DWORD PTR [ecx],0x0
   19d62:	jmp    0x19d58
   19d64:	shr    esi,0x8
   19d67:	mov    ebx,DWORD PTR [ebp+0x10]
   19d6a:	and    esi,0x7
   19d6d:	shr    eax,0xe
   19d70:	and    eax,0x7
   19d73:	mov    edi,esi
   19d75:	jbe    0x19db1
   19d77:	add    eax,ebx
   19d79:	mov    cl,BYTE PTR [eax]
   19d7b:	movzx  edx,cl
   19d7e:	mov    dl,BYTE PTR [edx+0x73778]
   19d84:	test   dl,0x10
   19d87:	je     0x19da9
   19d89:	mov    al,BYTE PTR [eax+0x1]
   19d8c:	and    al,0x7
   19d8e:	cmp    al,0x5
   19d90:	jne    0x19da9
   19d92:	and    cl,0xc0
   19d95:	je     0x19da6
   19d97:	cmp    cl,0x40
   19d9a:	jne    0x19da1
   19d9c:	lea    edi,[esi+0x1]
   19d9f:	jmp    0x19da9
   19da1:	cmp    cl,0x80
   19da4:	jne    0x19da9
   19da6:	lea    edi,[esi+0x4]
   19da9:	movzx  eax,dl
   19dac:	and    eax,0xf
   19daf:	add    edi,eax
   19db1:	push   edi
   19db2:	push   ebx
   19db3:	push   DWORD PTR [ebp+0xc]
   19db6:	call   0x1da8a
   19dbb:	mov    ecx,DWORD PTR [ebp+0x8]
   19dbe:	mov    eax,DWORD PTR [ecx]
   19dc0:	shl    eax,0xc
   19dc3:	sar    eax,0x1d
   19dc6:	add    esp,0xc
   19dc9:	test   eax,eax
   19dcb:	je     0x19de7
   19dcd:	push   eax
   19dce:	push   esi
   19dcf:	mov    esi,DWORD PTR [ebp-0x4]
   19dd2:	push   ebx
   19dd3:	push   DWORD PTR [ebp+0xc]
   19dd6:	mov    ecx,esi
   19dd8:	call   0x19c78
   19ddd:	mov    ecx,DWORD PTR [esi+0x8]
   19de0:	mov    DWORD PTR [ecx],eax
   19de2:	mov    ecx,DWORD PTR [ebp+0x8]
   19de5:	jmp    0x19dea
   19de7:	mov    esi,DWORD PTR [ebp-0x4]
   19dea:	test   DWORD PTR [ecx],0x400000
   19df0:	je     0x19df7
   19df2:	mov    eax,DWORD PTR [esi+0xc]
   19df5:	neg    DWORD PTR [eax]
   19df7:	test   DWORD PTR [ecx],0x100000
   19dfd:	je     0x19e05
   19dff:	mov    eax,DWORD PTR [esi+0x8]
   19e02:	or     DWORD PTR [eax],0xffffffff
   19e05:	lea    eax,[edi+ebx*1]
   19e08:	pop    edi
   19e09:	pop    esi
   19e0a:	pop    ebx
   19e0b:	leave  
   19e0c:	ret    0xc
   19e0f:	int3   
   19e10:	int3   
   19e11:	int3   
   19e12:	int3   
   19e13:	int3   
   19e14:	mov    edi,edi
   19e16:	push   ebp
   19e17:	mov    ebp,esp
   19e19:	push   ebx
   19e1a:	push   esi
   19e1b:	mov    esi,DWORD PTR [ebp+0x10]
   19e1e:	push   edi
   19e1f:	mov    edi,DWORD PTR [ebp+0xc]
   19e22:	push   esi
   19e23:	push   edi
   19e24:	push   DWORD PTR [ebp+0x8]
   19e27:	mov    ebx,ecx
   19e29:	call   0x19d3a
   19e2e:	lea    eax,[esi+0x1]
   19e31:	movzx  edx,BYTE PTR [eax]
   19e34:	push   eax
   19e35:	inc    edi
   19e36:	lea    edx,[edx*8+0x73878]
   19e3d:	push   edi
   19e3e:	push   edx
   19e3f:	mov    ecx,ebx
   19e41:	call   DWORD PTR [edx+0x4]
   19e44:	pop    edi
   19e45:	pop    esi
   19e46:	pop    ebx
   19e47:	pop    ebp
   19e48:	ret    0xc
   19e4b:	int3   
   19e4c:	int3   
   19e4d:	int3   
   19e4e:	int3   
   19e4f:	int3   
   19e50:	mov    edi,edi
   19e52:	push   ebp
   19e53:	mov    ebp,esp
   19e55:	push   ebx
   19e56:	push   esi
   19e57:	mov    esi,DWORD PTR [ebp+0x10]
   19e5a:	push   edi
   19e5b:	mov    edi,DWORD PTR [ebp+0xc]
   19e5e:	push   esi
   19e5f:	push   edi
   19e60:	push   DWORD PTR [ebp+0x8]
   19e63:	mov    ebx,ecx
   19e65:	call   0x19d3a
   19e6a:	lea    eax,[esi+0x1]
   19e6d:	movzx  edx,BYTE PTR [eax]
   19e70:	push   eax
   19e71:	inc    edi
   19e72:	lea    edx,[edx*8+0x74080]
   19e79:	push   edi
   19e7a:	push   edx
   19e7b:	mov    ecx,ebx
   19e7d:	call   DWORD PTR [edx+0x4]
   19e80:	pop    edi
   19e81:	pop    esi
   19e82:	pop    ebx
   19e83:	pop    ebp
   19e84:	ret    0xc
   19e87:	int3   
   19e88:	int3   
   19e89:	int3   
   19e8a:	int3   
   19e8b:	int3   
   19e8c:	mov    edi,edi
   19e8e:	push   ebp
   19e8f:	mov    ebp,esp
   19e91:	mov    DWORD PTR [ecx],0x1
   19e97:	pop    ebp
   19e98:	jmp    0x19e14
   19e9d:	int3   
   19e9e:	int3   
   19e9f:	int3   
   19ea0:	int3   
   19ea1:	int3   
   19ea2:	mov    edi,edi
   19ea4:	push   ebp
   19ea5:	mov    ebp,esp
   19ea7:	mov    DWORD PTR [ecx+0x4],0x1
   19eae:	pop    ebp
   19eaf:	jmp    0x19e14
   19eb4:	int3   
   19eb5:	int3   
   19eb6:	int3   
   19eb7:	int3   
   19eb8:	int3   
   19eb9:	int3   
   19eba:	mov    edi,edi
   19ebc:	push   ebp
   19ebd:	mov    ebp,esp
   19ebf:	mov    eax,DWORD PTR [ebp+0x10]
   19ec2:	sub    esp,0x10
   19ec5:	test   BYTE PTR [eax+0x1],0x38
   19ec9:	push   eax
   19eca:	push   DWORD PTR [ebp+0xc]
   19ecd:	jne    0x19ee2
   19ecf:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19ed6:	mov    DWORD PTR [ebp-0x4],0x19d3a
   19edd:	lea    eax,[ebp-0x8]
   19ee0:	jmp    0x19ef3
   19ee2:	mov    DWORD PTR [ebp-0x10],0x52f6
   19ee9:	mov    DWORD PTR [ebp-0xc],0x19d3a
   19ef0:	lea    eax,[ebp-0x10]
   19ef3:	push   eax
   19ef4:	call   0x19d3a
   19ef9:	leave  
   19efa:	ret    0xc
   19efd:	int3   
   19efe:	int3   
   19eff:	int3   
   19f00:	int3   
   19f01:	int3   
   19f02:	mov    edi,edi
   19f04:	push   ebp
   19f05:	mov    ebp,esp
   19f07:	mov    eax,DWORD PTR [ebp+0x10]
   19f0a:	sub    esp,0x10
   19f0d:	test   BYTE PTR [eax+0x1],0x38
   19f11:	push   eax
   19f12:	push   DWORD PTR [ebp+0xc]
   19f15:	jne    0x19f2a
   19f17:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f1e:	mov    DWORD PTR [ebp-0x4],0x19d3a
   19f25:	lea    eax,[ebp-0x8]
   19f28:	jmp    0x19f3b
   19f2a:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f31:	mov    DWORD PTR [ebp-0xc],0x19d3a
   19f38:	lea    eax,[ebp-0x10]
   19f3b:	push   eax
   19f3c:	call   0x19d3a
   19f41:	leave  
   19f42:	ret    0xc
   19f45:	int3   
   19f46:	int3   
   19f47:	int3   
   19f48:	int3   
   19f49:	int3   
   19f4a:	mov    edi,edi
   19f4c:	push   ebp
   19f4d:	mov    ebp,esp
   19f4f:	push   ecx
   19f50:	push   ecx
   19f51:	mov    edx,DWORD PTR [ebp+0x10]
   19f54:	mov    al,BYTE PTR [edx+0x1]
   19f57:	cmp    al,0x15
   19f59:	je     0x19f79
   19f5b:	cmp    al,0x25
   19f5d:	je     0x19f79
   19f5f:	and    al,0x38
   19f61:	cmp    al,0x10
   19f63:	je     0x19f71
   19f65:	cmp    al,0x18
   19f67:	je     0x19f71
   19f69:	cmp    al,0x20
   19f6b:	je     0x19f71
   19f6d:	cmp    al,0x28
   19f6f:	jne    0x19f85
   19f71:	mov    eax,DWORD PTR [ecx+0x8]
   19f74:	or     DWORD PTR [eax],0xffffffff
   19f77:	jmp    0x19f85
   19f79:	mov    eax,DWORD PTR [edx+0x2]
   19f7c:	mov    eax,DWORD PTR [eax]
   19f7e:	push   esi
   19f7f:	mov    esi,DWORD PTR [ecx+0x8]
   19f82:	mov    DWORD PTR [esi],eax
   19f84:	pop    esi
   19f85:	push   edx
   19f86:	push   DWORD PTR [ebp+0xc]
   19f89:	lea    eax,[ebp-0x8]
   19f8c:	push   eax
   19f8d:	mov    DWORD PTR [ebp-0x8],0x52ff
   19f94:	mov    DWORD PTR [ebp-0x4],0x19d3a
   19f9b:	call   0x19d3a
   19fa0:	leave  
   19fa1:	ret    0xc
   19fa4:	int3   
   19fa5:	int3   
   19fa6:	int3   
   19fa7:	int3   
   19fa8:	int3   
   19fa9:	int3   
   19faa:	mov    edi,edi
   19fac:	push   ebp
   19fad:	mov    ebp,esp
   19faf:	sub    esp,0x5c
   19fb2:	mov    eax,ds:0x7771c
   19fb7:	xor    eax,ebp
   19fb9:	mov    DWORD PTR [ebp-0x4],eax
   19fbc:	mov    eax,DWORD PTR [ebp+0x10]
   19fbf:	push   esi
   19fc0:	mov    esi,DWORD PTR [ebp+0x8]
   19fc3:	push   edi
   19fc4:	mov    edi,DWORD PTR [ebp+0xc]
   19fc7:	push   0x0
   19fc9:	push   eax
   19fca:	lea    ecx,[ebp-0x5c]
   19fcd:	call   0x19d00
   19fd2:	push   edi
   19fd3:	push   esi
   19fd4:	lea    ecx,[ebp-0x5c]
   19fd7:	call   0x19c42
   19fdc:	mov    ecx,DWORD PTR [ebp-0x4]
   19fdf:	pop    edi
   19fe0:	xor    ecx,ebp
   19fe2:	pop    esi
   19fe3:	call   0x1da19
   19fe8:	leave  
   19fe9:	ret    0xc
   19fec:	int3   
   19fed:	int3   
   19fee:	int3   
   19fef:	int3   
   19ff0:	int3   
   19ff1:	int3   
   19ff2:	mov    edi,edi
   19ff4:	push   ebp
   19ff5:	mov    ebp,esp
   19ff7:	push   esi
   19ff8:	mov    esi,DWORD PTR [ebp+0x8]
   19ffb:	push   edi
   19ffc:	mov    edi,ecx
   19ffe:	cmp    edi,esi
   1a000:	je     0x1a02d
   1a002:	mov    eax,DWORD PTR [edi+0x4]
   1a005:	cmp    eax,DWORD PTR [esi+0x4]
   1a008:	je     0x1a01c
   1a00a:	cmp    BYTE PTR [edi],0x0
   1a00d:	je     0x1a016
   1a00f:	push   eax
   1a010:	call   0x1d9fc
   1a015:	pop    ecx
   1a016:	mov    al,BYTE PTR [esi]
   1a018:	mov    BYTE PTR [edi],al
   1a01a:	jmp    0x1a024
   1a01c:	cmp    BYTE PTR [esi],0x0
   1a01f:	je     0x1a024
   1a021:	mov    BYTE PTR [edi],0x1
   1a024:	mov    eax,DWORD PTR [esi+0x4]
   1a027:	mov    BYTE PTR [esi],0x0
   1a02a:	mov    DWORD PTR [edi+0x4],eax
   1a02d:	mov    eax,edi
   1a02f:	pop    edi
   1a030:	pop    esi
   1a031:	pop    ebp
   1a032:	ret    0x4
   1a035:	int3   
   1a036:	int3   
   1a037:	int3   
   1a038:	int3   
   1a039:	int3   
   1a03a:	mov    edi,edi
   1a03c:	push   ebp
   1a03d:	mov    ebp,esp
   1a03f:	sub    esp,0x50
   1a042:	push   ebx
   1a043:	push   esi
   1a044:	push   edi
   1a045:	mov    edi,0x4000
   1a04a:	push   edi
   1a04b:	call   0x10a52
   1a050:	pop    ecx
   1a051:	xor    ebx,ebx
   1a053:	push   0x38
   1a055:	push   0x1ebde
   1a05a:	cmp    eax,ebx
   1a05c:	mov    DWORD PTR [ebp-0x4],eax
   1a05f:	mov    DWORD PTR [ebp-0xc],eax
   1a062:	push   0x2f
   1a064:	lea    eax,[ebp-0x50]
   1a067:	setne  BYTE PTR [ebp-0x10]
   1a06b:	push   eax
   1a06c:	xor    esi,esi
   1a06e:	mov    DWORD PTR [ebp-0x30],ebx
   1a071:	mov    DWORD PTR [ebp-0x2c],ebx
   1a074:	mov    DWORD PTR [ebp-0x28],ebx
   1a077:	mov    DWORD PTR [ebp-0x4c],ebx
   1a07a:	mov    DWORD PTR [ebp-0x50],ebx
   1a07d:	call   0x1b8f0
   1a082:	test   eax,eax
   1a084:	je     0x1a0a3
   1a086:	mov    esi,DWORD PTR [ebp+0x8]
   1a089:	mov    BYTE PTR [esi],bl
   1a08b:	mov    DWORD PTR [esi+0x4],ebx
   1a08e:	cmp    BYTE PTR [ebp-0x10],bl
   1a091:	je     0x1a09c
   1a093:	push   DWORD PTR [ebp-0x4]
   1a096:	call   0x1d9fc
   1a09b:	pop    ecx
   1a09c:	mov    eax,esi
   1a09e:	jmp    0x1a1b8
   1a0a3:	mov    eax,DWORD PTR [ebp+0x10]
   1a0a6:	mov    DWORD PTR [ebp-0x4c],eax
   1a0a9:	mov    eax,DWORD PTR [ebp+0xc]
   1a0ac:	mov    DWORD PTR [ebp-0x50],eax
   1a0af:	mov    eax,DWORD PTR [ebp-0xc]
   1a0b2:	add    eax,esi
   1a0b4:	mov    DWORD PTR [ebp-0x44],eax
   1a0b7:	push   0x4
   1a0b9:	lea    eax,[ebp-0x50]
   1a0bc:	push   eax
   1a0bd:	mov    DWORD PTR [ebp-0x40],edi
   1a0c0:	call   0x1ba84
   1a0c5:	cmp    eax,0xfffffffc
   1a0c8:	mov    DWORD PTR [ebp+0x10],eax
   1a0cb:	jl     0x1a0df
   1a0cd:	cmp    eax,0xfffffffd
   1a0d0:	jle    0x1a168
   1a0d6:	cmp    eax,0x2
   1a0d9:	je     0x1a168
   1a0df:	mov    eax,edi
   1a0e1:	sub    eax,DWORD PTR [ebp-0x40]
   1a0e4:	add    esi,eax
   1a0e6:	cmp    DWORD PTR [ebp-0x40],ebx
   1a0e9:	jne    0x1a152
   1a0eb:	mov    al,BYTE PTR [ebp-0x10]
   1a0ee:	mov    BYTE PTR [ebp-0x18],al
   1a0f1:	mov    eax,DWORD PTR [ebp-0xc]
   1a0f4:	mov    DWORD PTR [ebp-0x14],eax
   1a0f7:	lea    eax,[esi+0x4000]
   1a0fd:	push   eax
   1a0fe:	mov    BYTE PTR [ebp-0x10],bl
   1a101:	call   0x10a52
   1a106:	pop    ecx
   1a107:	cmp    eax,ebx
   1a109:	setne  cl
   1a10c:	mov    DWORD PTR [ebp-0x4],eax
   1a10f:	lea    eax,[ebp-0x8]
   1a112:	mov    BYTE PTR [ebp-0x8],cl
   1a115:	push   eax
   1a116:	lea    ecx,[ebp-0x10]
   1a119:	call   0x19ff2
   1a11e:	cmp    BYTE PTR [ebp-0x8],bl
   1a121:	je     0x1a12c
   1a123:	push   DWORD PTR [ebp-0x4]
   1a126:	call   0x1d9fc
   1a12b:	pop    ecx
   1a12c:	push   esi
   1a12d:	push   DWORD PTR [ebp-0x14]
   1a130:	push   DWORD PTR [ebp-0xc]
   1a133:	call   0x1da8a
   1a138:	add    esp,0xc
   1a13b:	cmp    BYTE PTR [ebp-0x18],bl
   1a13e:	je     0x1a149
   1a140:	push   DWORD PTR [ebp-0x14]
   1a143:	call   0x1d9fc
   1a148:	pop    ecx
   1a149:	cmp    DWORD PTR [ebp-0x40],ebx
   1a14c:	je     0x1a0af
   1a152:	lea    eax,[ebp-0x50]
   1a155:	push   eax
   1a156:	call   0x1cca2
   1a15b:	cmp    DWORD PTR [ebp+0x10],0x1
   1a15f:	jne    0x1a18a
   1a161:	mov    eax,DWORD PTR [ebp+0x14]
   1a164:	mov    DWORD PTR [eax],esi
   1a166:	jmp    0x1a1aa
   1a168:	lea    eax,[ebp-0x50]
   1a16b:	push   eax
   1a16c:	call   0x1cca2
   1a171:	mov    esi,DWORD PTR [ebp+0x8]
   1a174:	mov    BYTE PTR [esi],bl
   1a176:	mov    DWORD PTR [esi+0x4],ebx
   1a179:	cmp    BYTE PTR [ebp-0x10],bl
   1a17c:	je     0x1a09c
   1a182:	push   DWORD PTR [ebp-0xc]
   1a185:	jmp    0x1a096
   1a18a:	lea    eax,[ebp-0x18]
   1a18d:	push   eax
   1a18e:	lea    ecx,[ebp-0x10]
   1a191:	mov    BYTE PTR [ebp-0x18],bl
   1a194:	mov    DWORD PTR [ebp-0x14],ebx
   1a197:	call   0x19ff2
   1a19c:	cmp    BYTE PTR [ebp-0x18],bl
   1a19f:	je     0x1a1aa
   1a1a1:	push   DWORD PTR [ebp-0x14]
   1a1a4:	call   0x1d9fc
   1a1a9:	pop    ecx
   1a1aa:	mov    eax,DWORD PTR [ebp+0x8]
   1a1ad:	mov    cl,BYTE PTR [ebp-0x10]
   1a1b0:	mov    BYTE PTR [eax],cl
   1a1b2:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1b5:	mov    DWORD PTR [eax+0x4],ecx
   1a1b8:	pop    edi
   1a1b9:	pop    esi
   1a1ba:	pop    ebx
   1a1bb:	leave  
   1a1bc:	ret    0x10
   1a1bf:	int3   
   1a1c0:	int3   
   1a1c1:	int3   
   1a1c2:	int3   
   1a1c3:	int3   
   1a1c4:	xor    eax,eax
   1a1c6:	push   eax
   1a1c7:	push   eax
   1a1c8:	push   eax
   1a1c9:	push   eax
   1a1ca:	push   0x78c28
   1a1cf:	call   DWORD PTR ds:0x1ee2c
   1a1d5:	test   eax,eax
   1a1d7:	setge  al
   1a1da:	ret    
   1a1db:	int3   
   1a1dc:	int3   
   1a1dd:	int3   
   1a1de:	int3   
   1a1df:	int3   
   1a1e0:	push   0x0
   1a1e2:	push   0x78c28
   1a1e7:	call   DWORD PTR ds:0x1ee28
   1a1ed:	ret    
   1a1ee:	int3   
   1a1ef:	int3   
   1a1f0:	int3   
   1a1f1:	int3   
   1a1f2:	int3   
   1a1f3:	int3   
   1a1f4:	mov    edi,edi
   1a1f6:	push   esi
   1a1f7:	push   edi
   1a1f8:	push   0x1
   1a1fa:	xor    edi,edi
   1a1fc:	push   edi
   1a1fd:	mov    esi,ecx
   1a1ff:	call   0x139a8
   1a204:	cmp    DWORD PTR ds:0x78acc,edi
   1a20a:	jne    0x1a221
   1a20c:	mov    ecx,eax
   1a20e:	mov    DWORD PTR ds:0x78acc,ecx
   1a214:	mov    DWORD PTR [ecx],edi
   1a216:	mov    ecx,DWORD PTR ds:0x78acc
   1a21c:	xor    eax,eax
   1a21e:	mov    DWORD PTR [ecx+0x8],edi
   1a221:	inc    DWORD PTR ds:0x78c50
   1a227:	cmp    eax,edi
   1a229:	je     0x1a232
   1a22b:	push   eax
   1a22c:	call   0x1d9fc
   1a231:	pop    ecx
   1a232:	push   edi
   1a233:	push   DWORD PTR ds:0x78acc
   1a239:	mov    ecx,esi
   1a23b:	call   0x139a8
   1a240:	mov    DWORD PTR [esi+0xc],edi
   1a243:	mov    DWORD PTR [esi+0x4],eax
   1a246:	mov    DWORD PTR [eax],eax
   1a248:	mov    esi,DWORD PTR [esi+0x4]
   1a24b:	pop    edi
   1a24c:	mov    DWORD PTR [esi+0x8],esi
   1a24f:	pop    esi
   1a250:	ret    
   1a251:	int3   
   1a252:	int3   
   1a253:	int3   
   1a254:	int3   
   1a255:	int3   
   1a256:	mov    edi,edi
   1a258:	push   ebx
   1a259:	push   esi
   1a25a:	xor    ebx,ebx
   1a25c:	push   ebx
   1a25d:	push   0x78c28
   1a262:	call   0x11c72
   1a267:	call   eax
   1a269:	push   0x10
   1a26b:	call   0x10a52
   1a270:	mov    esi,eax
   1a272:	pop    ecx
   1a273:	cmp    esi,ebx
   1a275:	je     0x1a289
   1a277:	mov    ecx,esi
   1a279:	mov    BYTE PTR [esi+0x8],bl
   1a27c:	call   0x1a1f4
   1a281:	mov    DWORD PTR ds:0x78c48,esi
   1a287:	jmp    0x1a28f
   1a289:	mov    DWORD PTR ds:0x78c48,ebx
   1a28f:	push   0x10
   1a291:	call   0x10a52
   1a296:	mov    esi,eax
   1a298:	pop    ecx
   1a299:	cmp    esi,ebx
   1a29b:	je     0x1a2af
   1a29d:	mov    ecx,esi
   1a29f:	mov    BYTE PTR [esi+0x8],bl
   1a2a2:	call   0x14100
   1a2a7:	mov    DWORD PTR ds:0x78c4c,esi
   1a2ad:	jmp    0x1a2b5
   1a2af:	mov    DWORD PTR ds:0x78c4c,ebx
   1a2b5:	pop    esi
   1a2b6:	pop    ebx
   1a2b7:	ret    
   1a2b8:	int3   
   1a2b9:	int3   
   1a2ba:	int3   
   1a2bb:	int3   
   1a2bc:	int3   
   1a2bd:	int3   
   1a2be:	mov    edi,edi
   1a2c0:	push   ebp
   1a2c1:	mov    ebp,esp
   1a2c3:	mov    eax,ecx
   1a2c5:	mov    ecx,DWORD PTR [ebp+0xc]
   1a2c8:	mov    edx,DWORD PTR [ecx]
   1a2ca:	mov    DWORD PTR [eax],edx
   1a2cc:	mov    edx,DWORD PTR [ecx]
   1a2ce:	add    edx,0x1000
   1a2d4:	mov    DWORD PTR [eax+0x4],edx
   1a2d7:	mov    edx,DWORD PTR [ebp+0x8]
   1a2da:	mov    DWORD PTR [eax+0x8],edx
   1a2dd:	mov    DWORD PTR [eax+0xc],ecx
   1a2e0:	pop    ebp
   1a2e1:	ret    0x8
   1a2e4:	int3   
   1a2e5:	int3   
   1a2e6:	int3   
   1a2e7:	int3   
   1a2e8:	int3   
   1a2e9:	int3   
   1a2ea:	mov    edi,edi
   1a2ec:	push   ebp
   1a2ed:	mov    ebp,esp
   1a2ef:	mov    eax,DWORD PTR [ebp+0x8]
   1a2f2:	mov    edx,DWORD PTR ds:0x78c84
   1a2f8:	jmp    0x1a2fc
   1a2fa:	mov    eax,ecx
   1a2fc:	mov    ecx,DWORD PTR [eax+0x8]
   1a2ff:	cmp    ecx,edx
   1a301:	jne    0x1a2fa
   1a303:	pop    ebp
   1a304:	ret    0x4
   1a307:	int3   
   1a308:	int3   
   1a309:	int3   
   1a30a:	int3   
   1a30b:	int3   
   1a30c:	mov    edi,edi
   1a30e:	push   ebp
   1a30f:	mov    ebp,esp
   1a311:	mov    eax,DWORD PTR [ebp+0x8]
   1a314:	mov    edx,DWORD PTR ds:0x78c84
   1a31a:	jmp    0x1a31e
   1a31c:	mov    eax,ecx
   1a31e:	mov    ecx,DWORD PTR [eax]
   1a320:	cmp    ecx,edx
   1a322:	jne    0x1a31c
   1a324:	pop    ebp
   1a325:	ret    0x4
   1a328:	int3   
   1a329:	int3   
   1a32a:	int3   
   1a32b:	int3   
   1a32c:	int3   
   1a32d:	int3   
   1a32e:	mov    edi,edi
   1a330:	push   esi
   1a331:	mov    esi,ecx
   1a333:	mov    ecx,DWORD PTR [esi]
   1a335:	mov    eax,DWORD PTR [ecx+0x8]
   1a338:	cmp    eax,DWORD PTR ds:0x78c84
   1a33e:	je     0x1a34c
   1a340:	push   eax
   1a341:	call   0x1a30c
   1a346:	jmp    0x1a35b
   1a348:	mov    DWORD PTR [esi],eax
   1a34a:	mov    ecx,eax
   1a34c:	mov    eax,DWORD PTR [ecx+0x4]
   1a34f:	cmp    ecx,DWORD PTR [eax+0x8]
   1a352:	je     0x1a348
   1a354:	mov    ecx,DWORD PTR [esi]
   1a356:	cmp    DWORD PTR [ecx+0x8],eax
   1a359:	je     0x1a35d
   1a35b:	mov    DWORD PTR [esi],eax
   1a35d:	pop    esi
   1a35e:	ret    
   1a35f:	int3   
   1a360:	int3   
   1a361:	int3   
   1a362:	int3   
   1a363:	int3   
   1a364:	mov    edi,edi
   1a366:	push   ebp
   1a367:	mov    ebp,esp
   1a369:	mov    eax,DWORD PTR [ebp+0x8]
   1a36c:	jmp    0x1a37c
   1a36e:	mov    ecx,DWORD PTR [eax]
   1a370:	mov    edx,DWORD PTR [ebp+0x10]
   1a373:	add    DWORD PTR [ebp+0x10],0x4
   1a377:	mov    DWORD PTR [edx],ecx
   1a379:	add    eax,0x4
   1a37c:	cmp    eax,DWORD PTR [ebp+0xc]
   1a37f:	jne    0x1a36e
   1a381:	mov    eax,DWORD PTR [ebp+0x10]
   1a384:	pop    ebp
   1a385:	ret    0xc
   1a388:	int3   
   1a389:	int3   
   1a38a:	int3   
   1a38b:	int3   
   1a38c:	int3   
   1a38d:	int3   
   1a38e:	mov    edi,edi
   1a390:	push   ebp
   1a391:	mov    ebp,esp
   1a393:	mov    eax,DWORD PTR [ebp+0x8]
   1a396:	test   eax,eax
   1a398:	jge    0x1a39c
   1a39a:	xor    eax,eax
   1a39c:	shl    eax,0x2
   1a39f:	push   eax
   1a3a0:	call   0x10a52
   1a3a5:	pop    ecx
   1a3a6:	pop    ebp
   1a3a7:	ret    0x8
   1a3aa:	int3   
   1a3ab:	int3   
   1a3ac:	int3   
   1a3ad:	int3   
   1a3ae:	int3   
   1a3af:	int3   
   1a3b0:	mov    edi,edi
   1a3b2:	push   ebp
   1a3b3:	mov    ebp,esp
   1a3b5:	push   esi
   1a3b6:	mov    esi,ecx
   1a3b8:	push   DWORD PTR [esi]
   1a3ba:	call   0x1d9fc
   1a3bf:	test   BYTE PTR [ebp+0x8],0x1
   1a3c3:	pop    ecx
   1a3c4:	je     0x1a3cd
   1a3c6:	push   esi
   1a3c7:	call   0x1d9fc
   1a3cc:	pop    ecx
   1a3cd:	mov    eax,esi
   1a3cf:	pop    esi
   1a3d0:	pop    ebp
   1a3d1:	ret    0x4
   1a3d4:	int3   
   1a3d5:	int3   
   1a3d6:	int3   
   1a3d7:	int3   
   1a3d8:	int3   
   1a3d9:	int3   
   1a3da:	mov    eax,ecx
   1a3dc:	add    DWORD PTR [eax+0x8],0x4
   1a3e0:	mov    ecx,DWORD PTR [eax+0x8]
   1a3e3:	cmp    ecx,DWORD PTR [eax+0x4]
   1a3e6:	jne    0x1a401
   1a3e8:	add    DWORD PTR [eax+0xc],0x4
   1a3ec:	mov    ecx,DWORD PTR [eax+0xc]
   1a3ef:	mov    ecx,DWORD PTR [ecx]
   1a3f1:	mov    DWORD PTR [eax],ecx
   1a3f3:	add    ecx,0x1000
   1a3f9:	mov    DWORD PTR [eax+0x4],ecx
   1a3fc:	mov    ecx,DWORD PTR [eax]
   1a3fe:	mov    DWORD PTR [eax+0x8],ecx
   1a401:	ret    
   1a402:	int3   
   1a403:	int3   
   1a404:	int3   
   1a405:	int3   
   1a406:	int3   
   1a407:	int3   
   1a408:	mov    edi,edi
   1a40a:	push   ebp
   1a40b:	mov    ebp,esp
   1a40d:	mov    eax,ds:0x78c7c
   1a412:	sub    esp,0x20
   1a415:	push   ebx
   1a416:	push   esi
   1a417:	push   edi
   1a418:	lea    esi,[eax+0x4]
   1a41b:	lea    edi,[ebp-0x10]
   1a41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a422:	lea    ebx,[eax+0x14]
   1a425:	jmp    0x1a443
   1a427:	mov    eax,DWORD PTR [eax]
   1a429:	mov    ecx,DWORD PTR [eax+0x8]
   1a42c:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a42f:	jne    0x1a43b
   1a431:	cmp    BYTE PTR [eax+0x24],0x0
   1a435:	jne    0x1a454
   1a437:	mov    BYTE PTR [eax+0x24],0x1
   1a43b:	lea    ecx,[ebp-0x10]
   1a43e:	call   0x1a3da
   1a443:	mov    eax,DWORD PTR [ebp-0x8]
   1a446:	lea    edi,[ebp-0x20]
   1a449:	mov    esi,ebx
   1a44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44f:	cmp    eax,DWORD PTR [ebp-0x18]
   1a452:	jne    0x1a427
   1a454:	pop    edi
   1a455:	pop    esi
   1a456:	pop    ebx
   1a457:	leave  
   1a458:	ret    0x4
   1a45b:	int3   
   1a45c:	int3   
   1a45d:	int3   
   1a45e:	int3   
   1a45f:	int3   
   1a460:	mov    eax,ecx
   1a462:	xor    ecx,ecx
   1a464:	mov    DWORD PTR [eax+0x4],ecx
   1a467:	mov    DWORD PTR [eax+0x8],ecx
   1a46a:	mov    DWORD PTR [eax+0xc],ecx
   1a46d:	mov    DWORD PTR [eax+0x10],ecx
   1a470:	mov    DWORD PTR [eax+0x14],ecx
   1a473:	mov    DWORD PTR [eax+0x18],ecx
   1a476:	mov    DWORD PTR [eax+0x1c],ecx
   1a479:	mov    DWORD PTR [eax+0x20],ecx
   1a47c:	mov    DWORD PTR [eax+0x24],ecx
   1a47f:	mov    DWORD PTR [eax+0x28],ecx
   1a482:	mov    DWORD PTR [eax+0x2c],ecx
   1a485:	ret    0x4
   1a488:	int3   
   1a489:	int3   
   1a48a:	int3   
   1a48b:	int3   
   1a48c:	int3   
   1a48d:	int3   
   1a48e:	mov    edi,edi
   1a490:	push   ebp
   1a491:	mov    ebp,esp
   1a493:	sub    esp,0x10
   1a496:	push   esi
   1a497:	push   edi
   1a498:	lea    esi,[ecx+0x4]
   1a49b:	lea    edi,[ebp-0x10]
   1a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a2:	mov    eax,DWORD PTR [ebp-0x8]
   1a4a5:	pop    edi
   1a4a6:	pop    esi
   1a4a7:	leave  
   1a4a8:	ret    
   1a4a9:	int3   
   1a4aa:	int3   
   1a4ab:	int3   
   1a4ac:	int3   
   1a4ad:	int3   
   1a4ae:	mov    edi,edi
   1a4b0:	push   ebp
   1a4b1:	mov    ebp,esp
   1a4b3:	mov    edx,DWORD PTR [ebp+0x8]
   1a4b6:	mov    eax,DWORD PTR [edx+0x8]
   1a4b9:	push   esi
   1a4ba:	mov    esi,DWORD PTR [eax]
   1a4bc:	mov    DWORD PTR [edx+0x8],esi
   1a4bf:	mov    esi,DWORD PTR [eax]
   1a4c1:	cmp    esi,DWORD PTR ds:0x78c84
   1a4c7:	je     0x1a4cc
   1a4c9:	mov    DWORD PTR [esi+0x4],edx
   1a4cc:	mov    esi,DWORD PTR [edx+0x4]
   1a4cf:	mov    DWORD PTR [eax+0x4],esi
   1a4d2:	mov    ecx,DWORD PTR [ecx+0x4]
   1a4d5:	pop    esi
   1a4d6:	cmp    edx,DWORD PTR [ecx+0x4]
   1a4d9:	jne    0x1a4e0
   1a4db:	mov    DWORD PTR [ecx+0x4],eax
   1a4de:	jmp    0x1a4ee
   1a4e0:	mov    ecx,DWORD PTR [edx+0x4]
   1a4e3:	cmp    edx,DWORD PTR [ecx]
   1a4e5:	jne    0x1a4eb
   1a4e7:	mov    DWORD PTR [ecx],eax
   1a4e9:	jmp    0x1a4ee
   1a4eb:	mov    DWORD PTR [ecx+0x8],eax
   1a4ee:	mov    DWORD PTR [eax],edx
   1a4f0:	mov    DWORD PTR [edx+0x4],eax
   1a4f3:	pop    ebp
   1a4f4:	ret    0x4
   1a4f7:	int3   
   1a4f8:	int3   
   1a4f9:	int3   
   1a4fa:	int3   
   1a4fb:	int3   
   1a4fc:	mov    edi,edi
   1a4fe:	push   ebp
   1a4ff:	mov    ebp,esp
   1a501:	mov    edx,DWORD PTR [ebp+0x8]
   1a504:	mov    eax,DWORD PTR [edx]
   1a506:	push   esi
   1a507:	mov    esi,DWORD PTR [eax+0x8]
   1a50a:	mov    DWORD PTR [edx],esi
   1a50c:	mov    esi,DWORD PTR [eax+0x8]
   1a50f:	cmp    esi,DWORD PTR ds:0x78c84
   1a515:	je     0x1a51a
   1a517:	mov    DWORD PTR [esi+0x4],edx
   1a51a:	mov    esi,DWORD PTR [edx+0x4]
   1a51d:	mov    DWORD PTR [eax+0x4],esi
   1a520:	mov    ecx,DWORD PTR [ecx+0x4]
   1a523:	pop    esi
   1a524:	cmp    edx,DWORD PTR [ecx+0x4]
   1a527:	jne    0x1a52e
   1a529:	mov    DWORD PTR [ecx+0x4],eax
   1a52c:	jmp    0x1a53d
   1a52e:	mov    ecx,DWORD PTR [edx+0x4]
   1a531:	cmp    edx,DWORD PTR [ecx+0x8]
   1a534:	jne    0x1a53b
   1a536:	mov    DWORD PTR [ecx+0x8],eax
   1a539:	jmp    0x1a53d
   1a53b:	mov    DWORD PTR [ecx],eax
   1a53d:	mov    DWORD PTR [eax+0x8],edx
   1a540:	mov    DWORD PTR [edx+0x4],eax
   1a543:	pop    ebp
   1a544:	ret    0x4
   1a547:	int3   
   1a548:	int3   
   1a549:	int3   
   1a54a:	int3   
   1a54b:	int3   
   1a54c:	mov    edi,edi
   1a54e:	push   esi
   1a54f:	mov    esi,ecx
   1a551:	mov    ecx,DWORD PTR [esi]
   1a553:	cmp    DWORD PTR [ecx+0x14],0x0
   1a557:	jne    0x1a566
   1a559:	mov    eax,DWORD PTR [ecx+0x4]
   1a55c:	cmp    DWORD PTR [eax+0x4],ecx
   1a55f:	jne    0x1a566
   1a561:	mov    eax,DWORD PTR [ecx+0x8]
   1a564:	jmp    0x1a583
   1a566:	mov    eax,DWORD PTR [ecx]
   1a568:	cmp    eax,DWORD PTR ds:0x78c84
   1a56e:	je     0x1a57c
   1a570:	push   eax
   1a571:	call   0x1a2ea
   1a576:	jmp    0x1a583
   1a578:	mov    DWORD PTR [esi],eax
   1a57a:	mov    ecx,eax
   1a57c:	mov    eax,DWORD PTR [ecx+0x4]
   1a57f:	cmp    ecx,DWORD PTR [eax]
   1a581:	je     0x1a578
   1a583:	mov    DWORD PTR [esi],eax
   1a585:	pop    esi
   1a586:	ret    
   1a587:	int3   
   1a588:	int3   
   1a589:	int3   
   1a58a:	int3   
   1a58b:	int3   
   1a58c:	mov    edi,edi
   1a58e:	push   ebp
   1a58f:	mov    ebp,esp
   1a591:	mov    eax,DWORD PTR [ecx+0x4]
   1a594:	push   esi
   1a595:	mov    esi,DWORD PTR [eax+0x4]
   1a598:	push   edi
   1a599:	mov    edi,eax
   1a59b:	jmp    0x1a5b6
   1a59d:	push   DWORD PTR [ebp+0x8]
   1a5a0:	lea    eax,[esi+0xc]
   1a5a3:	push   eax
   1a5a4:	call   0x197b8
   1a5a9:	test   al,al
   1a5ab:	je     0x1a5b2
   1a5ad:	mov    esi,DWORD PTR [esi+0x8]
   1a5b0:	jmp    0x1a5b6
   1a5b2:	mov    edi,esi
   1a5b4:	mov    esi,DWORD PTR [esi]
   1a5b6:	cmp    esi,DWORD PTR ds:0x78c84
   1a5bc:	jne    0x1a59d
   1a5be:	mov    eax,edi
   1a5c0:	pop    edi
   1a5c1:	pop    esi
   1a5c2:	pop    ebp
   1a5c3:	ret    0x4
   1a5c6:	int3   
   1a5c7:	int3   
   1a5c8:	int3   
   1a5c9:	int3   
   1a5ca:	int3   
   1a5cb:	int3   
   1a5cc:	mov    edi,edi
   1a5ce:	push   ebp
   1a5cf:	mov    ebp,esp
   1a5d1:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d4:	push   esi
   1a5d5:	mov    esi,DWORD PTR [eax+0x4]
   1a5d8:	push   edi
   1a5d9:	mov    edi,eax
   1a5db:	jmp    0x1a5f6
   1a5dd:	lea    eax,[esi+0xc]
   1a5e0:	push   eax
   1a5e1:	push   DWORD PTR [ebp+0x8]
   1a5e4:	call   0x197b8
   1a5e9:	test   al,al
   1a5eb:	je     0x1a5f3
   1a5ed:	mov    edi,esi
   1a5ef:	mov    esi,DWORD PTR [esi]
   1a5f1:	jmp    0x1a5f6
   1a5f3:	mov    esi,DWORD PTR [esi+0x8]
   1a5f6:	cmp    esi,DWORD PTR ds:0x78c84
   1a5fc:	jne    0x1a5dd
   1a5fe:	mov    eax,edi
   1a600:	pop    edi
   1a601:	pop    esi
   1a602:	pop    ebp
   1a603:	ret    0x4
   1a606:	int3   
   1a607:	int3   
   1a608:	int3   
   1a609:	int3   
   1a60a:	int3   
   1a60b:	int3   
   1a60c:	mov    edi,edi
   1a60e:	push   ebp
   1a60f:	mov    ebp,esp
   1a611:	mov    ecx,DWORD PTR [ebp+0x8]
   1a614:	test   ecx,ecx
   1a616:	je     0x1a620
   1a618:	push   DWORD PTR [ebp+0xc]
   1a61b:	call   0x129a0
   1a620:	pop    ebp
   1a621:	ret    0x8
   1a624:	int3   
   1a625:	int3   
   1a626:	int3   
   1a627:	int3   
   1a628:	int3   
   1a629:	int3   
   1a62a:	mov    edi,edi
   1a62c:	push   ebp
   1a62d:	mov    ebp,esp
   1a62f:	mov    ecx,DWORD PTR [ebp+0x8]
   1a632:	push   0x0
   1a634:	call   0x1a3b0
   1a639:	pop    ebp
   1a63a:	ret    0x4
   1a63d:	int3   
   1a63e:	int3   
   1a63f:	int3   
   1a640:	int3   
   1a641:	int3   
   1a642:	mov    edi,edi
   1a644:	push   ebp
   1a645:	mov    ebp,esp
   1a647:	push   edi
   1a648:	mov    edi,DWORD PTR [ebp+0xc]
   1a64b:	cmp    DWORD PTR [ebp+0x8],edi
   1a64e:	je     0x1a664
   1a650:	push   esi
   1a651:	mov    esi,DWORD PTR [ebp+0x10]
   1a654:	inc    DWORD PTR [esi]
   1a656:	lea    ecx,[ebp+0x8]
   1a659:	call   0x1a32e
   1a65e:	cmp    DWORD PTR [ebp+0x8],edi
   1a661:	jne    0x1a654
   1a663:	pop    esi
   1a664:	pop    edi
   1a665:	pop    ebp
   1a666:	ret    
   1a667:	int3   
   1a668:	int3   
   1a669:	int3   
   1a66a:	int3   
   1a66b:	int3   
   1a66c:	mov    edi,edi
   1a66e:	push   ebp
   1a66f:	mov    ebp,esp
   1a671:	mov    eax,DWORD PTR [ebp+0xc]
   1a674:	mov    ecx,DWORD PTR [eax+0x34]
   1a677:	lea    eax,[ecx+eax*1+0x40]
   1a67b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a67e:	push   0xffffffff
   1a680:	push   eax
   1a681:	call   0x12980
   1a686:	mov    eax,DWORD PTR [ebp+0x8]
   1a689:	pop    ebp
   1a68a:	ret    0x8
   1a68d:	int3   
   1a68e:	int3   
   1a68f:	int3   
   1a690:	int3   
   1a691:	int3   
   1a692:	mov    edi,edi
   1a694:	push   ebp
   1a695:	mov    ebp,esp
   1a697:	mov    eax,DWORD PTR [ebp+0xc]
   1a69a:	mov    ecx,DWORD PTR [eax+0x38]
   1a69d:	lea    eax,[ecx+eax*1+0x40]
   1a6a1:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6a4:	push   0xffffffff
   1a6a6:	push   eax
   1a6a7:	call   0x12980
   1a6ac:	mov    eax,DWORD PTR [ebp+0x8]
   1a6af:	pop    ebp
   1a6b0:	ret    0x8
   1a6b3:	int3   
   1a6b4:	int3   
   1a6b5:	int3   
   1a6b6:	int3   
   1a6b7:	int3   
   1a6b8:	mov    edi,edi
   1a6ba:	push   ebp
   1a6bb:	mov    ebp,esp
   1a6bd:	mov    eax,DWORD PTR [ebp+0xc]
   1a6c0:	mov    ecx,DWORD PTR [eax+0x3c]
   1a6c3:	lea    eax,[ecx+eax*1+0x40]
   1a6c7:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6ca:	push   0xffffffff
   1a6cc:	push   eax
   1a6cd:	call   0x12980
   1a6d2:	mov    eax,DWORD PTR [ebp+0x8]
   1a6d5:	pop    ebp
   1a6d6:	ret    0x8
   1a6d9:	int3   
   1a6da:	int3   
   1a6db:	int3   
   1a6dc:	int3   
   1a6dd:	int3   
   1a6de:	mov    edi,edi
   1a6e0:	push   ebp
   1a6e1:	mov    ebp,esp
   1a6e3:	sub    esp,0x1c
   1a6e6:	mov    eax,ds:0x78c7c
   1a6eb:	and    DWORD PTR [ebp-0x4],0x0
   1a6ef:	push   ebx
   1a6f0:	mov    ebx,DWORD PTR [ebp+0x8]
   1a6f3:	push   esi
   1a6f4:	push   edi
   1a6f5:	lea    esi,[eax+0x4]
   1a6f8:	mov    edi,ebx
   1a6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6fe:	lea    esi,[eax+0x14]
   1a701:	jmp    0x1a75e
   1a703:	push   DWORD PTR [ebp+0xc]
   1a706:	mov    eax,DWORD PTR [ebx+0x8]
   1a709:	push   DWORD PTR [eax]
   1a70b:	or     DWORD PTR [ebp-0x4],0x1
   1a70f:	lea    eax,[ebp-0xc]
   1a712:	push   eax
   1a713:	call   0x1a6b8
   1a718:	push   eax
   1a719:	call   0x197c8
   1a71e:	test   al,al
   1a720:	je     0x1a731
   1a722:	mov    eax,DWORD PTR [ebx+0x8]
   1a725:	mov    eax,DWORD PTR [eax]
   1a727:	cmp    BYTE PTR [eax+0x1c],0x0
   1a72b:	mov    BYTE PTR [ebp+0xb],0x1
   1a72f:	jne    0x1a735
   1a731:	mov    BYTE PTR [ebp+0xb],0x0
   1a735:	test   BYTE PTR [ebp-0x4],0x1
   1a739:	je     0x1a748
   1a73b:	push   DWORD PTR [ebp-0xc]
   1a73e:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a742:	call   0x1d9fc
   1a747:	pop    ecx
   1a748:	cmp    BYTE PTR [ebp+0xb],0x0
   1a74c:	jne    0x1a76d
   1a74e:	mov    ecx,ebx
   1a750:	call   0x1a3da
   1a755:	mov    esi,DWORD PTR ds:0x78c7c
   1a75b:	add    esi,0x14
   1a75e:	mov    eax,DWORD PTR [ebx+0x8]
   1a761:	lea    edi,[ebp-0x1c]
   1a764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a768:	cmp    eax,DWORD PTR [ebp-0x14]
   1a76b:	jne    0x1a703
   1a76d:	pop    edi
   1a76e:	pop    esi
   1a76f:	mov    eax,ebx
   1a771:	pop    ebx
   1a772:	leave  
   1a773:	ret    0x8
   1a776:	int3   
   1a777:	int3   
   1a778:	int3   
   1a779:	int3   
   1a77a:	int3   
   1a77b:	int3   
   1a77c:	mov    edi,edi
   1a77e:	push   ebp
   1a77f:	mov    ebp,esp
   1a781:	sub    esp,0x28
   1a784:	mov    eax,DWORD PTR [ebp+0x8]
   1a787:	push   ebx
   1a788:	push   esi
   1a789:	push   edi
   1a78a:	lea    esi,[eax+0x4]
   1a78d:	mov    DWORD PTR [ebp-0x8],esi
   1a790:	lea    edi,[ebp-0x18]
   1a793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a795:	and    DWORD PTR [ebp-0x4],0x0
   1a799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a79b:	lea    ecx,[eax+0x14]
   1a79e:	mov    eax,DWORD PTR [ebp-0x10]
   1a7a1:	mov    esi,ecx
   1a7a3:	lea    edi,[ebp-0x28]
   1a7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a9:	push   0x4
   1a7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ac:	pop    ebx
   1a7ad:	mov    DWORD PTR [ebp+0x8],ecx
   1a7b0:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7b3:	je     0x1a7d5
   1a7b5:	mov    esi,ecx
   1a7b7:	lea    edi,[ebp-0x28]
   1a7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7be:	mov    eax,DWORD PTR [eax]
   1a7c0:	add    ebx,DWORD PTR [eax]
   1a7c2:	inc    DWORD PTR [ebp-0x4]
   1a7c5:	lea    ecx,[ebp-0x18]
   1a7c8:	call   0x1a3da
   1a7cd:	mov    eax,DWORD PTR [ebp-0x10]
   1a7d0:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7d3:	jne    0x1a7be
   1a7d5:	mov    eax,DWORD PTR [ebp+0xc]
   1a7d8:	cmp    ebx,DWORD PTR [eax+0x4]
   1a7db:	mov    DWORD PTR [eax+0x4],ebx
   1a7de:	jbe    0x1a7e8
   1a7e0:	mov    DWORD PTR [eax],0x1
   1a7e6:	jmp    0x1a82e
   1a7e8:	and    DWORD PTR [eax],0x0
   1a7eb:	mov    esi,DWORD PTR [ebp-0x8]
   1a7ee:	lea    ebx,[eax+0x8]
   1a7f1:	mov    eax,DWORD PTR [ebp-0x4]
   1a7f4:	mov    DWORD PTR [ebx],eax
   1a7f6:	lea    edi,[ebp-0x28]
   1a7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7fc:	add    ebx,0x4
   1a7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a800:	jmp    0x1a81c
   1a802:	mov    eax,DWORD PTR [esi]
   1a804:	push   DWORD PTR [eax]
   1a806:	push   eax
   1a807:	push   ebx
   1a808:	call   0x1da8a
   1a80d:	mov    eax,DWORD PTR [esi]
   1a80f:	add    ebx,DWORD PTR [eax]
   1a811:	add    esp,0xc
   1a814:	lea    ecx,[ebp-0x28]
   1a817:	call   0x1a3da
   1a81c:	mov    esi,DWORD PTR [ebp+0x8]
   1a81f:	lea    edi,[ebp-0x18]
   1a822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a826:	mov    esi,DWORD PTR [ebp-0x20]
   1a829:	cmp    esi,DWORD PTR [ebp-0x10]
   1a82c:	jne    0x1a802
   1a82e:	pop    edi
   1a82f:	pop    esi
   1a830:	pop    ebx
   1a831:	leave  
   1a832:	ret    0x8
   1a835:	int3   
   1a836:	int3   
   1a837:	int3   
   1a838:	int3   
   1a839:	int3   
   1a83a:	push   0x8
   1a83c:	push   0x77530
   1a841:	call   0x1dabc
   1a846:	xor    esi,esi
   1a848:	push   esi
   1a849:	push   esi
   1a84a:	push   esi
   1a84b:	push   esi
   1a84c:	push   0x78c54
   1a851:	call   DWORD PTR ds:0x1ee2c
   1a857:	cmp    eax,esi
   1a859:	jl     0x1a89a
   1a85b:	mov    DWORD PTR [ebp-0x4],esi
   1a85e:	push   DWORD PTR [ebp+0x8]
   1a861:	push   DWORD PTR ds:0x78c7c
   1a867:	call   0x1a77c
   1a86c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a873:	jmp    0x1a88e
   1a875:	xor    eax,eax
   1a877:	inc    eax
   1a878:	ret    
   1a879:	mov    esp,DWORD PTR [ebp-0x18]
   1a87c:	mov    eax,DWORD PTR [ebp+0x8]
   1a87f:	mov    DWORD PTR [eax],0x2
   1a885:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a88c:	xor    esi,esi
   1a88e:	push   esi
   1a88f:	push   0x78c54
   1a894:	call   DWORD PTR ds:0x1ee28
   1a89a:	call   0x1db01
   1a89f:	ret    0x4
   1a8a2:	int3   
   1a8a3:	int3   
   1a8a4:	int3   
   1a8a5:	int3   
   1a8a6:	int3   
   1a8a7:	int3   
   1a8a8:	mov    edi,edi
   1a8aa:	push   ebp
   1a8ab:	mov    ebp,esp
   1a8ad:	sub    esp,0x10
   1a8b0:	push   ebx
   1a8b1:	mov    ebx,ecx
   1a8b3:	mov    eax,DWORD PTR [ebx+0x10]
   1a8b6:	push   esi
   1a8b7:	lea    ecx,[eax+0x4]
   1a8ba:	push   edi
   1a8bb:	mov    DWORD PTR [ebx+0x10],ecx
   1a8be:	push   DWORD PTR [eax]
   1a8c0:	call   0x1d9fc
   1a8c5:	xor    eax,eax
   1a8c7:	pop    ecx
   1a8c8:	cmp    DWORD PTR [ebx+0x2c],eax
   1a8cb:	jne    0x1a8f8
   1a8cd:	mov    DWORD PTR [ebp-0x10],eax
   1a8d0:	mov    DWORD PTR [ebp-0xc],eax
   1a8d3:	mov    DWORD PTR [ebp-0x8],eax
   1a8d6:	mov    DWORD PTR [ebp-0x4],eax
   1a8d9:	lea    edi,[ebx+0x4]
   1a8dc:	lea    esi,[ebp-0x10]
   1a8df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e1:	push   DWORD PTR [ebx+0x24]
   1a8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e6:	lea    edi,[ebx+0x14]
   1a8e9:	lea    esi,[ebp-0x10]
   1a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f0:	call   0x1d9fc
   1a8f5:	pop    ecx
   1a8f6:	jmp    0x1a90f
   1a8f8:	mov    eax,DWORD PTR [ebx+0x10]
   1a8fb:	push   eax
   1a8fc:	push   DWORD PTR [eax]
   1a8fe:	lea    ecx,[ebp-0x10]
   1a901:	call   0x1a2be
   1a906:	lea    edi,[ebx+0x4]
   1a909:	mov    esi,eax
   1a90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a90f:	pop    edi
   1a910:	pop    esi
   1a911:	pop    ebx
   1a912:	leave  
   1a913:	ret    
   1a914:	int3   
   1a915:	int3   
   1a916:	int3   
   1a917:	int3   
   1a918:	int3   
   1a919:	int3   
   1a91a:	mov    edi,edi
   1a91c:	push   ebp
   1a91d:	mov    ebp,esp
   1a91f:	mov    eax,DWORD PTR [ebp+0xc]
   1a922:	push   esi
   1a923:	mov    esi,ecx
   1a925:	mov    ecx,DWORD PTR [eax]
   1a927:	mov    DWORD PTR [ebp+0xc],ecx
   1a92a:	mov    ecx,DWORD PTR [eax+0x4]
   1a92d:	mov    edx,DWORD PTR [eax]
   1a92f:	mov    DWORD PTR [ecx],edx
   1a931:	mov    ecx,DWORD PTR [eax]
   1a933:	mov    edx,DWORD PTR [eax+0x4]
   1a936:	push   eax
   1a937:	mov    DWORD PTR [ecx+0x4],edx
   1a93a:	call   0x1d9fc
   1a93f:	mov    eax,DWORD PTR [ebp+0x8]
   1a942:	dec    DWORD PTR [esi+0x8]
   1a945:	pop    ecx
   1a946:	mov    ecx,DWORD PTR [ebp+0xc]
   1a949:	mov    DWORD PTR [eax],ecx
   1a94b:	pop    esi
   1a94c:	pop    ebp
   1a94d:	ret    0x8
   1a950:	int3   
   1a951:	int3   
   1a952:	int3   
   1a953:	int3   
   1a954:	int3   
   1a955:	int3   
   1a956:	mov    edi,edi
   1a958:	push   ebp
   1a959:	mov    ebp,esp
   1a95b:	push   ecx
   1a95c:	push   esi
   1a95d:	mov    esi,ecx
   1a95f:	jmp    0x1a974
   1a961:	mov    eax,ecx
   1a963:	mov    ecx,DWORD PTR [ecx]
   1a965:	push   eax
   1a966:	lea    eax,[ebp-0x4]
   1a969:	mov    DWORD PTR [ebp+0xc],ecx
   1a96c:	push   eax
   1a96d:	mov    ecx,esi
   1a96f:	call   0x1a91a
   1a974:	mov    ecx,DWORD PTR [ebp+0xc]
   1a977:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a97a:	jne    0x1a961
   1a97c:	mov    eax,DWORD PTR [ebp+0x8]
   1a97f:	mov    DWORD PTR [eax],ecx
   1a981:	pop    esi
   1a982:	leave  
   1a983:	ret    0xc
   1a986:	int3   
   1a987:	int3   
   1a988:	int3   
   1a989:	int3   
   1a98a:	int3   
   1a98b:	int3   
   1a98c:	mov    edi,edi
   1a98e:	push   ebp
   1a98f:	mov    ebp,esp
   1a991:	push   0x0
   1a993:	push   0xc
   1a995:	call   0x11604
   1a99a:	mov    ecx,DWORD PTR [ebp+0x8]
   1a99d:	test   ecx,ecx
   1a99f:	jne    0x1a9a3
   1a9a1:	mov    ecx,eax
   1a9a3:	mov    DWORD PTR [eax],ecx
   1a9a5:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9a8:	test   ecx,ecx
   1a9aa:	jne    0x1a9ae
   1a9ac:	mov    ecx,eax
   1a9ae:	mov    DWORD PTR [eax+0x4],ecx
   1a9b1:	pop    ebp
   1a9b2:	ret    0x8
   1a9b5:	int3   
   1a9b6:	int3   
   1a9b7:	int3   
   1a9b8:	int3   
   1a9b9:	int3   
   1a9ba:	mov    edi,edi
   1a9bc:	push   esi
   1a9bd:	mov    esi,ecx
   1a9bf:	mov    eax,DWORD PTR [esi+0x28]
   1a9c2:	shl    eax,0x2
   1a9c5:	push   0x0
   1a9c7:	push   eax
   1a9c8:	call   0x11604
   1a9cd:	mov    DWORD PTR [esi+0x24],eax
   1a9d0:	pop    esi
   1a9d1:	ret    
   1a9d2:	int3   
   1a9d3:	int3   
   1a9d4:	int3   
   1a9d5:	int3   
   1a9d6:	int3   
   1a9d7:	int3   
   1a9d8:	mov    edi,edi
   1a9da:	push   ebp
   1a9db:	mov    ebp,esp
   1a9dd:	push   ebx
   1a9de:	push   esi
   1a9df:	push   edi
   1a9e0:	mov    edi,DWORD PTR [ebp+0x8]
   1a9e3:	mov    eax,0xfffffff
   1a9e8:	mov    esi,ecx
   1a9ea:	cmp    edi,eax
   1a9ec:	jbe    0x1a9f0
   1a9ee:	mov    edi,eax
   1a9f0:	mov    eax,edi
   1a9f2:	push   0x0
   1a9f4:	shl    eax,0x2
   1a9f7:	push   eax
   1a9f8:	call   0x11604
   1a9fd:	mov    ebx,eax
   1a9ff:	mov    eax,edi
   1aa01:	shr    eax,0x2
   1aa04:	lea    eax,[ebx+eax*4]
   1aa07:	push   eax
   1aa08:	mov    DWORD PTR [ebp+0x8],eax
   1aa0b:	mov    eax,DWORD PTR [esi+0x20]
   1aa0e:	add    eax,0x4
   1aa11:	push   eax
   1aa12:	push   DWORD PTR [esi+0x10]
   1aa15:	call   0x1a364
   1aa1a:	push   DWORD PTR [esi+0x24]
   1aa1d:	call   0x1d9fc
   1aa22:	mov    eax,DWORD PTR [ebp+0x8]
   1aa25:	pop    ecx
   1aa26:	mov    DWORD PTR [esi+0x28],edi
   1aa29:	pop    edi
   1aa2a:	mov    DWORD PTR [esi+0x24],ebx
   1aa2d:	pop    esi
   1aa2e:	pop    ebx
   1aa2f:	pop    ebp
   1aa30:	ret    0x4
   1aa33:	int3   
   1aa34:	int3   
   1aa35:	int3   
   1aa36:	int3   
   1aa37:	int3   
   1aa38:	mov    edi,edi
   1aa3a:	push   ebp
   1aa3b:	mov    ebp,esp
   1aa3d:	push   ecx
   1aa3e:	push   DWORD PTR [ebp-0x4]
   1aa41:	push   DWORD PTR [ebp+0x10]
   1aa44:	push   DWORD PTR [ebp+0xc]
   1aa47:	push   DWORD PTR [ebp+0x8]
   1aa4a:	call   0x1a642
   1aa4f:	add    esp,0x10
   1aa52:	leave  
   1aa53:	ret    
   1aa54:	int3   
   1aa55:	int3   
   1aa56:	int3   
   1aa57:	int3   
   1aa58:	int3   
   1aa59:	int3   
   1aa5a:	mov    edi,edi
   1aa5c:	push   ebp
   1aa5d:	mov    ebp,esp
   1aa5f:	sub    esp,0x28
   1aa62:	push   ebx
   1aa63:	mov    ebx,DWORD PTR [ebp+0x8]
   1aa66:	push   esi
   1aa67:	push   edi
   1aa68:	push   0xffffffff
   1aa6a:	push   ebx
   1aa6b:	lea    ecx,[ebp-0x8]
   1aa6e:	call   0x1109a
   1aa73:	and    DWORD PTR [ebx],0x0
   1aa76:	lea    eax,[ebp-0x8]
   1aa79:	push   eax
   1aa7a:	lea    eax,[ebp-0x18]
   1aa7d:	push   eax
   1aa7e:	call   0x1a6de
   1aa83:	mov    esi,DWORD PTR ds:0x78c7c
   1aa89:	mov    eax,DWORD PTR [ebp-0x10]
   1aa8c:	push   DWORD PTR [ebp-0x8]
   1aa8f:	add    esi,0x14
   1aa92:	lea    edi,[ebp-0x28]
   1aa95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa99:	cmp    eax,DWORD PTR [ebp-0x20]
   1aa9c:	je     0x1aaa6
   1aa9e:	mov    eax,DWORD PTR [eax]
   1aaa0:	mov    eax,DWORD PTR [eax+0x20]
   1aaa3:	inc    eax
   1aaa4:	mov    DWORD PTR [ebx],eax
   1aaa6:	call   0x1d9fc
   1aaab:	pop    ecx
   1aaac:	pop    edi
   1aaad:	pop    esi
   1aaae:	pop    ebx
   1aaaf:	leave  
   1aab0:	ret    0x4
   1aab3:	int3   
   1aab4:	int3   
   1aab5:	int3   
   1aab6:	int3   
   1aab7:	int3   
   1aab8:	add    DWORD PTR [ecx+0xc],0x4
   1aabc:	dec    DWORD PTR [ecx+0x2c]
   1aabf:	mov    eax,DWORD PTR [ecx+0xc]
   1aac2:	je     0x1aac9
   1aac4:	cmp    eax,DWORD PTR [ecx+0x8]
   1aac7:	jne    0x1aace
   1aac9:	jmp    0x1a8a8
   1aace:	ret    
   1aacf:	int3   
   1aad0:	int3   
   1aad1:	int3   
   1aad2:	int3   
   1aad3:	int3   
   1aad4:	mov    edi,edi
   1aad6:	push   esi
   1aad7:	push   0x0
   1aad9:	push   0xc
   1aadb:	mov    esi,ecx
   1aadd:	call   0x11604
   1aae2:	mov    DWORD PTR [eax],eax
   1aae4:	mov    DWORD PTR [eax+0x4],eax
   1aae7:	and    DWORD PTR [esi+0x8],0x0
   1aaeb:	mov    DWORD PTR [esi+0x4],eax
   1aaee:	mov    eax,esi
   1aaf0:	pop    esi
   1aaf1:	ret    0x4
   1aaf4:	int3   
   1aaf5:	int3   
   1aaf6:	int3   
   1aaf7:	int3   
   1aaf8:	int3   
   1aaf9:	int3   
   1aafa:	mov    edi,edi
   1aafc:	push   ebp
   1aafd:	mov    ebp,esp
   1aaff:	push   ecx
   1ab00:	push   esi
   1ab01:	mov    esi,ecx
   1ab03:	mov    eax,DWORD PTR [esi+0x4]
   1ab06:	mov    ecx,DWORD PTR [eax]
   1ab08:	push   eax
   1ab09:	push   ecx
   1ab0a:	lea    eax,[ebp-0x4]
   1ab0d:	push   eax
   1ab0e:	mov    ecx,esi
   1ab10:	call   0x1a956
   1ab15:	push   DWORD PTR [esi+0x4]
   1ab18:	call   0x1d9fc
   1ab1d:	and    DWORD PTR [esi+0x4],0x0
   1ab21:	and    DWORD PTR [esi+0x8],0x0
   1ab25:	pop    ecx
   1ab26:	pop    esi
   1ab27:	leave  
   1ab28:	ret    
   1ab29:	int3   
   1ab2a:	int3   
   1ab2b:	int3   
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	mov    edi,edi
   1ab30:	push   ebp
   1ab31:	mov    ebp,esp
   1ab33:	push   ecx
   1ab34:	mov    eax,DWORD PTR [ecx+0x4]
   1ab37:	push   DWORD PTR [eax]
   1ab39:	lea    eax,[ebp-0x4]
   1ab3c:	push   eax
   1ab3d:	call   0x1a91a
   1ab42:	leave  
   1ab43:	ret    
   1ab44:	int3   
   1ab45:	int3   
   1ab46:	int3   
   1ab47:	int3   
   1ab48:	int3   
   1ab49:	int3   
   1ab4a:	mov    edi,edi
   1ab4c:	push   ebp
   1ab4d:	mov    ebp,esp
   1ab4f:	sub    esp,0x18
   1ab52:	push   ebx
   1ab53:	push   esi
   1ab54:	push   edi
   1ab55:	push   0x0
   1ab57:	push   0x400
   1ab5c:	mov    ebx,ecx
   1ab5e:	call   0x1a38e
   1ab63:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ab67:	mov    esi,eax
   1ab69:	mov    DWORD PTR [ebp-0x8],esi
   1ab6c:	jne    0x1aba3
   1ab6e:	mov    ecx,ebx
   1ab70:	mov    DWORD PTR [ebx+0x28],0x2
   1ab77:	call   0x1a9ba
   1ab7c:	mov    eax,DWORD PTR [ebx+0x24]
   1ab7f:	mov    DWORD PTR [eax+0x4],esi
   1ab82:	mov    eax,DWORD PTR [ebx+0x24]
   1ab85:	add    eax,0x4
   1ab88:	push   eax
   1ab89:	add    esi,0x800
   1ab8f:	push   esi
   1ab90:	lea    ecx,[ebp-0x18]
   1ab93:	call   0x1a2be
   1ab98:	lea    edi,[ebx+0x4]
   1ab9b:	mov    esi,eax
   1ab9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba1:	jmp    0x1ac01
   1aba3:	mov    ecx,DWORD PTR [ebx+0x28]
   1aba6:	mov    edx,DWORD PTR [ebx+0x24]
   1aba9:	mov    eax,DWORD PTR [ebx+0x20]
   1abac:	lea    ecx,[edx+ecx*4-0x4]
   1abb0:	cmp    eax,ecx
   1abb2:	jae    0x1abc2
   1abb4:	add    eax,0x4
   1abb7:	mov    DWORD PTR [ebx+0x20],eax
   1abba:	mov    DWORD PTR [eax],esi
   1abbc:	push   DWORD PTR [ebx+0x20]
   1abbf:	push   esi
   1abc0:	jmp    0x1abf9
   1abc2:	sub    eax,DWORD PTR [ebx+0x10]
   1abc5:	mov    ecx,ebx
   1abc7:	sar    eax,0x2
   1abca:	inc    eax
   1abcb:	mov    edi,eax
   1abcd:	lea    eax,[edi+edi*1]
   1abd0:	push   eax
   1abd1:	call   0x1a9d8
   1abd6:	lea    ecx,[eax+edi*4]
   1abd9:	mov    DWORD PTR [ecx],esi
   1abdb:	push   eax
   1abdc:	push   DWORD PTR [ebx+0xc]
   1abdf:	mov    DWORD PTR [ebp-0x4],ecx
   1abe2:	lea    ecx,[ebp-0x18]
   1abe5:	call   0x1a2be
   1abea:	push   DWORD PTR [ebp-0x4]
   1abed:	lea    edi,[ebx+0x4]
   1abf0:	push   DWORD PTR [ebp-0x8]
   1abf3:	mov    esi,eax
   1abf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf9:	lea    ecx,[ebp-0x18]
   1abfc:	call   0x1a2be
   1ac01:	lea    edi,[ebx+0x14]
   1ac04:	mov    esi,eax
   1ac06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac0a:	pop    edi
   1ac0b:	pop    esi
   1ac0c:	pop    ebx
   1ac0d:	leave  
   1ac0e:	ret    
   1ac0f:	int3   
   1ac10:	int3   
   1ac11:	int3   
   1ac12:	int3   
   1ac13:	int3   
   1ac14:	mov    edi,edi
   1ac16:	push   ebp
   1ac17:	mov    ebp,esp
   1ac19:	mov    eax,DWORD PTR [ebp+0xc]
   1ac1c:	push   ebx
   1ac1d:	push   esi
   1ac1e:	push   edi
   1ac1f:	lea    edi,[eax+0x4]
   1ac22:	push   DWORD PTR [edi]
   1ac24:	mov    ebx,ecx
   1ac26:	push   eax
   1ac27:	call   0x1a98c
   1ac2c:	push   DWORD PTR [ebp+0x10]
   1ac2f:	mov    esi,eax
   1ac31:	mov    DWORD PTR [edi],esi
   1ac33:	mov    eax,DWORD PTR [esi+0x4]
   1ac36:	mov    DWORD PTR [eax],esi
   1ac38:	lea    eax,[esi+0x8]
   1ac3b:	push   eax
   1ac3c:	call   0x11626
   1ac41:	mov    eax,DWORD PTR [ebp+0x8]
   1ac44:	inc    DWORD PTR [ebx+0x8]
   1ac47:	pop    edi
   1ac48:	mov    DWORD PTR [eax],esi
   1ac4a:	pop    esi
   1ac4b:	pop    ebx
   1ac4c:	pop    ebp
   1ac4d:	ret    0xc
   1ac50:	int3   
   1ac51:	int3   
   1ac52:	int3   
   1ac53:	int3   
   1ac54:	int3   
   1ac55:	int3   
   1ac56:	mov    edi,edi
   1ac58:	push   ebp
   1ac59:	mov    ebp,esp
   1ac5b:	push   ecx
   1ac5c:	mov    eax,DWORD PTR [ebp+0xc]
   1ac5f:	push   esi
   1ac60:	mov    esi,ecx
   1ac62:	jmp    0x1ac7e
   1ac64:	add    eax,0x8
   1ac67:	push   eax
   1ac68:	push   DWORD PTR [ebp+0x8]
   1ac6b:	lea    eax,[ebp-0x4]
   1ac6e:	push   eax
   1ac6f:	mov    ecx,esi
   1ac71:	call   0x1ac14
   1ac76:	mov    eax,DWORD PTR [ebp+0xc]
   1ac79:	mov    eax,DWORD PTR [eax]
   1ac7b:	mov    DWORD PTR [ebp+0xc],eax
   1ac7e:	cmp    eax,DWORD PTR [ebp+0x10]
   1ac81:	jne    0x1ac64
   1ac83:	pop    esi
   1ac84:	leave  
   1ac85:	ret    0xc
   1ac88:	int3   
   1ac89:	int3   
   1ac8a:	int3   
   1ac8b:	int3   
   1ac8c:	int3   
   1ac8d:	int3   
   1ac8e:	mov    edi,edi
   1ac90:	push   ebp
   1ac91:	mov    ebp,esp
   1ac93:	push   esi
   1ac94:	push   edi
   1ac95:	push   DWORD PTR [ebp+0xc]
   1ac98:	mov    edi,ecx
   1ac9a:	call   0x1a5cc
   1ac9f:	push   DWORD PTR [ebp+0xc]
   1aca2:	mov    ecx,edi
   1aca4:	mov    esi,eax
   1aca6:	call   0x1a58c
   1acab:	mov    ecx,DWORD PTR [ebp+0x8]
   1acae:	pop    edi
   1acaf:	mov    DWORD PTR [ecx],eax
   1acb1:	mov    DWORD PTR [ecx+0x4],esi
   1acb4:	mov    eax,ecx
   1acb6:	pop    esi
   1acb7:	pop    ebp
   1acb8:	ret    0x8
   1acbb:	int3   
   1acbc:	int3   
   1acbd:	int3   
   1acbe:	int3   
   1acbf:	int3   
   1acc0:	mov    edi,edi
   1acc2:	push   ebp
   1acc3:	mov    ebp,esp
   1acc5:	push   ecx
   1acc6:	push   ebx
   1acc7:	push   esi
   1acc8:	push   edi
   1acc9:	push   0x1
   1accb:	xor    edi,edi
   1accd:	push   edi
   1acce:	mov    esi,ecx
   1acd0:	call   0x13960
   1acd5:	lea    ecx,[ebp-0x1]
   1acd8:	mov    ebx,eax
   1acda:	call   DWORD PTR ds:0x77354
   1ace0:	cmp    DWORD PTR ds:0x78c84,edi
   1ace6:	jne    0x1acfb
   1ace8:	mov    eax,ebx
   1acea:	mov    ds:0x78c84,eax
   1acef:	mov    DWORD PTR [eax],edi
   1acf1:	mov    eax,ds:0x78c84
   1acf6:	xor    ebx,ebx
   1acf8:	mov    DWORD PTR [eax+0x8],edi
   1acfb:	inc    DWORD PTR ds:0x78c88
   1ad01:	lea    ecx,[ebp-0x1]
   1ad04:	call   DWORD PTR ds:0x77350
   1ad0a:	cmp    ebx,edi
   1ad0c:	je     0x1ad15
   1ad0e:	push   ebx
   1ad0f:	call   0x1d9fc
   1ad14:	pop    ecx
   1ad15:	push   edi
   1ad16:	push   DWORD PTR ds:0x78c84
   1ad1c:	mov    ecx,esi
   1ad1e:	call   0x13960
   1ad23:	mov    DWORD PTR [esi+0xc],edi
   1ad26:	mov    DWORD PTR [esi+0x4],eax
   1ad29:	mov    DWORD PTR [eax],eax
   1ad2b:	mov    esi,DWORD PTR [esi+0x4]
   1ad2e:	pop    edi
   1ad2f:	mov    DWORD PTR [esi+0x8],esi
   1ad32:	pop    esi
   1ad33:	pop    ebx
   1ad34:	leave  
   1ad35:	ret    
   1ad36:	int3   
   1ad37:	int3   
   1ad38:	int3   
   1ad39:	int3   
   1ad3a:	int3   
   1ad3b:	int3   
   1ad3c:	mov    edi,edi
   1ad3e:	push   ebp
   1ad3f:	mov    ebp,esp
   1ad41:	push   ebx
   1ad42:	push   esi
   1ad43:	mov    esi,DWORD PTR [ebp+0x10]
   1ad46:	push   edi
   1ad47:	push   0x0
   1ad49:	push   esi
   1ad4a:	mov    edi,ecx
   1ad4c:	call   0x13960
   1ad51:	push   DWORD PTR [ebp+0x14]
   1ad54:	mov    ebx,eax
   1ad56:	mov    eax,ds:0x78c84
   1ad5b:	mov    DWORD PTR [ebx],eax
   1ad5d:	mov    eax,ds:0x78c84
   1ad62:	mov    DWORD PTR [ebx+0x8],eax
   1ad65:	lea    eax,[ebx+0xc]
   1ad68:	push   eax
   1ad69:	call   0x1a60c
   1ad6e:	inc    DWORD PTR [edi+0xc]
   1ad71:	cmp    esi,DWORD PTR [edi+0x4]
   1ad74:	je     0x1ad9e
   1ad76:	mov    eax,DWORD PTR [ebp+0xc]
   1ad79:	cmp    eax,DWORD PTR ds:0x78c84
   1ad7f:	jne    0x1ad9e
   1ad81:	lea    eax,[esi+0xc]
   1ad84:	push   eax
   1ad85:	push   DWORD PTR [ebp+0x14]
   1ad88:	call   0x197b8
   1ad8d:	test   al,al
   1ad8f:	jne    0x1ad9e
   1ad91:	mov    DWORD PTR [esi+0x8],ebx
   1ad94:	mov    eax,DWORD PTR [edi+0x4]
   1ad97:	cmp    esi,DWORD PTR [eax+0x8]
   1ad9a:	jne    0x1adb8
   1ad9c:	jmp    0x1adad
   1ad9e:	mov    DWORD PTR [esi],ebx
   1ada0:	mov    eax,DWORD PTR [edi+0x4]
   1ada3:	cmp    esi,eax
   1ada5:	jne    0x1adb2
   1ada7:	mov    DWORD PTR [eax+0x4],ebx
   1adaa:	mov    eax,DWORD PTR [edi+0x4]
   1adad:	mov    DWORD PTR [eax+0x8],ebx
   1adb0:	jmp    0x1adb8
   1adb2:	cmp    esi,DWORD PTR [eax]
   1adb4:	jne    0x1adb8
   1adb6:	mov    DWORD PTR [eax],ebx
   1adb8:	mov    eax,DWORD PTR [edi+0x4]
   1adbb:	mov    esi,ebx
   1adbd:	cmp    ebx,DWORD PTR [eax+0x4]
   1adc0:	je     0x1ae74
   1adc6:	mov    eax,DWORD PTR [esi+0x4]
   1adc9:	xor    edx,edx
   1adcb:	cmp    DWORD PTR [eax+0x14],edx
   1adce:	jne    0x1ae74
   1add4:	mov    ecx,DWORD PTR [eax+0x4]
   1add7:	cmp    eax,DWORD PTR [ecx]
   1add9:	jne    0x1ae15
   1addb:	mov    ecx,DWORD PTR [ecx+0x8]
   1adde:	cmp    DWORD PTR [ecx+0x14],edx
   1ade1:	je     0x1ae1c
   1ade3:	cmp    esi,DWORD PTR [eax+0x8]
   1ade6:	jne    0x1adf2
   1ade8:	mov    esi,eax
   1adea:	push   esi
   1adeb:	mov    ecx,edi
   1aded:	call   0x1a4ae
   1adf2:	mov    eax,DWORD PTR [esi+0x4]
   1adf5:	mov    DWORD PTR [eax+0x14],0x1
   1adfc:	mov    eax,DWORD PTR [esi+0x4]
   1adff:	mov    eax,DWORD PTR [eax+0x4]
   1ae02:	and    DWORD PTR [eax+0x14],0x0
   1ae06:	mov    eax,DWORD PTR [esi+0x4]
   1ae09:	push   DWORD PTR [eax+0x4]
   1ae0c:	mov    ecx,edi
   1ae0e:	call   0x1a4fc
   1ae13:	jmp    0x1ae68
   1ae15:	mov    ecx,DWORD PTR [ecx]
   1ae17:	cmp    DWORD PTR [ecx+0x14],edx
   1ae1a:	jne    0x1ae39
   1ae1c:	mov    edx,eax
   1ae1e:	xor    eax,eax
   1ae20:	inc    eax
   1ae21:	mov    DWORD PTR [edx+0x14],eax
   1ae24:	mov    DWORD PTR [ecx+0x14],eax
   1ae27:	mov    eax,DWORD PTR [esi+0x4]
   1ae2a:	mov    eax,DWORD PTR [eax+0x4]
   1ae2d:	and    DWORD PTR [eax+0x14],0x0
   1ae31:	mov    eax,DWORD PTR [esi+0x4]
   1ae34:	mov    esi,DWORD PTR [eax+0x4]
   1ae37:	jmp    0x1ae68
   1ae39:	cmp    esi,DWORD PTR [eax]
   1ae3b:	jne    0x1ae47
   1ae3d:	mov    esi,eax
   1ae3f:	push   esi
   1ae40:	mov    ecx,edi
   1ae42:	call   0x1a4fc
   1ae47:	mov    eax,DWORD PTR [esi+0x4]
   1ae4a:	mov    DWORD PTR [eax+0x14],0x1
   1ae51:	mov    eax,DWORD PTR [esi+0x4]
   1ae54:	mov    eax,DWORD PTR [eax+0x4]
   1ae57:	and    DWORD PTR [eax+0x14],0x0
   1ae5b:	mov    eax,DWORD PTR [esi+0x4]
   1ae5e:	push   DWORD PTR [eax+0x4]
   1ae61:	mov    ecx,edi
   1ae63:	call   0x1a4ae
   1ae68:	mov    eax,DWORD PTR [edi+0x4]
   1ae6b:	cmp    esi,DWORD PTR [eax+0x4]
   1ae6e:	jne    0x1adc6
   1ae74:	mov    eax,DWORD PTR [edi+0x4]
   1ae77:	mov    eax,DWORD PTR [eax+0x4]
   1ae7a:	pop    edi
   1ae7b:	mov    DWORD PTR [eax+0x14],0x1
   1ae82:	mov    eax,DWORD PTR [ebp+0x8]
   1ae85:	pop    esi
   1ae86:	mov    DWORD PTR [eax],ebx
   1ae88:	pop    ebx
   1ae89:	pop    ebp
   1ae8a:	ret    0x10
   1ae8d:	int3   
   1ae8e:	int3   
   1ae8f:	int3   
   1ae90:	int3   
   1ae91:	int3   
   1ae92:	mov    edi,edi
   1ae94:	push   ebp
   1ae95:	mov    ebp,esp
   1ae97:	sub    esp,0x10
   1ae9a:	push   ebx
   1ae9b:	push   esi
   1ae9c:	mov    DWORD PTR [ebp-0xc],ecx
   1ae9f:	push   edi
   1aea0:	mov    edi,DWORD PTR [ebp+0xc]
   1aea3:	lea    ecx,[ebp+0xc]
   1aea6:	call   0x1a32e
   1aeab:	mov    esi,DWORD PTR [edi]
   1aead:	mov    eax,ds:0x78c84
   1aeb2:	lea    ebx,[edi+0x8]
   1aeb5:	mov    DWORD PTR [ebp-0x8],edi
   1aeb8:	mov    DWORD PTR [ebp-0x10],ebx
   1aebb:	cmp    esi,eax
   1aebd:	jne    0x1aec3
   1aebf:	mov    esi,DWORD PTR [ebx]
   1aec1:	jmp    0x1aeda
   1aec3:	mov    ecx,DWORD PTR [ebx]
   1aec5:	cmp    ecx,eax
   1aec7:	je     0x1aeda
   1aec9:	push   ecx
   1aeca:	call   0x1a30c
   1aecf:	mov    DWORD PTR [ebp-0x8],eax
   1aed2:	add    eax,0x8
   1aed5:	mov    esi,DWORD PTR [eax]
   1aed7:	mov    DWORD PTR [ebp-0x10],eax
   1aeda:	lea    ecx,[ebp-0x1]
   1aedd:	call   DWORD PTR ds:0x77354
   1aee3:	mov    eax,DWORD PTR [ebp-0x8]
   1aee6:	cmp    eax,edi
   1aee8:	je     0x1af4a
   1aeea:	mov    ecx,DWORD PTR [edi]
   1aeec:	mov    DWORD PTR [ecx+0x4],eax
   1aeef:	mov    ecx,DWORD PTR [edi]
   1aef1:	mov    DWORD PTR [eax],ecx
   1aef3:	cmp    eax,DWORD PTR [ebx]
   1aef5:	jne    0x1aefc
   1aef7:	mov    DWORD PTR [esi+0x4],eax
   1aefa:	jmp    0x1af13
   1aefc:	mov    ecx,DWORD PTR [eax+0x4]
   1aeff:	mov    edx,DWORD PTR [ebp-0x10]
   1af02:	mov    DWORD PTR [esi+0x4],ecx
   1af05:	mov    ecx,DWORD PTR [eax+0x4]
   1af08:	mov    DWORD PTR [ecx],esi
   1af0a:	mov    ecx,DWORD PTR [ebx]
   1af0c:	mov    DWORD PTR [edx],ecx
   1af0e:	mov    ecx,DWORD PTR [ebx]
   1af10:	mov    DWORD PTR [ecx+0x4],eax
   1af13:	mov    ebx,DWORD PTR [ebp-0xc]
   1af16:	mov    ecx,DWORD PTR [ebx+0x4]
   1af19:	cmp    DWORD PTR [ecx+0x4],edi
   1af1c:	jne    0x1af23
   1af1e:	mov    DWORD PTR [ecx+0x4],eax
   1af21:	jmp    0x1af31
   1af23:	mov    ecx,DWORD PTR [edi+0x4]
   1af26:	cmp    DWORD PTR [ecx],edi
   1af28:	jne    0x1af2e
   1af2a:	mov    DWORD PTR [ecx],eax
   1af2c:	jmp    0x1af31
   1af2e:	mov    DWORD PTR [ecx+0x8],eax
   1af31:	mov    ecx,DWORD PTR [edi+0x4]
   1af34:	mov    DWORD PTR [eax+0x4],ecx
   1af37:	mov    ecx,DWORD PTR [eax+0x14]
   1af3a:	mov    edx,DWORD PTR [edi+0x14]
   1af3d:	mov    DWORD PTR [eax+0x14],edx
   1af40:	mov    DWORD PTR [edi+0x14],ecx
   1af43:	mov    DWORD PTR [ebp-0x8],edi
   1af46:	mov    eax,edi
   1af48:	jmp    0x1afc3
   1af4a:	mov    ecx,DWORD PTR [eax+0x4]
   1af4d:	mov    edx,DWORD PTR [ebp-0xc]
   1af50:	mov    DWORD PTR [esi+0x4],ecx
   1af53:	mov    ecx,DWORD PTR [edx+0x4]
   1af56:	cmp    DWORD PTR [ecx+0x4],edi
   1af59:	jne    0x1af60
   1af5b:	mov    DWORD PTR [ecx+0x4],esi
   1af5e:	jmp    0x1af6e
   1af60:	mov    ecx,DWORD PTR [edi+0x4]
   1af63:	cmp    DWORD PTR [ecx],edi
   1af65:	jne    0x1af6b
   1af67:	mov    DWORD PTR [ecx],esi
   1af69:	jmp    0x1af6e
   1af6b:	mov    DWORD PTR [ecx+0x8],esi
   1af6e:	mov    ecx,DWORD PTR [edx+0x4]
   1af71:	mov    DWORD PTR [ebp-0x10],ecx
   1af74:	cmp    DWORD PTR [ecx],edi
   1af76:	jne    0x1af9a
   1af78:	mov    ebx,DWORD PTR [ebx]
   1af7a:	cmp    ebx,DWORD PTR ds:0x78c84
   1af80:	jne    0x1af89
   1af82:	mov    ebx,DWORD PTR [edi+0x4]
   1af85:	mov    DWORD PTR [ecx],ebx
   1af87:	jmp    0x1af9a
   1af89:	push   esi
   1af8a:	call   0x1a30c
   1af8f:	mov    ecx,DWORD PTR [ebp-0x10]
   1af92:	mov    edx,DWORD PTR [ebp-0xc]
   1af95:	mov    DWORD PTR [ecx],eax
   1af97:	mov    eax,DWORD PTR [ebp-0x8]
   1af9a:	mov    ebx,DWORD PTR [edx+0x4]
   1af9d:	cmp    DWORD PTR [ebx+0x8],edi
   1afa0:	jne    0x1afc0
   1afa2:	mov    ecx,DWORD PTR [edi]
   1afa4:	cmp    ecx,DWORD PTR ds:0x78c84
   1afaa:	jne    0x1afb4
   1afac:	mov    ecx,DWORD PTR [edi+0x4]
   1afaf:	mov    DWORD PTR [ebx+0x8],ecx
   1afb2:	jmp    0x1afc0
   1afb4:	push   esi
   1afb5:	call   0x1a2ea
   1afba:	mov    DWORD PTR [ebx+0x8],eax
   1afbd:	mov    eax,DWORD PTR [ebp-0x8]
   1afc0:	mov    ebx,DWORD PTR [ebp-0xc]
   1afc3:	xor    edi,edi
   1afc5:	inc    edi
   1afc6:	cmp    DWORD PTR [eax+0x14],edi
   1afc9:	jne    0x1b0dd
   1afcf:	jmp    0x1b090
   1afd4:	cmp    DWORD PTR [esi+0x14],edi
   1afd7:	jne    0x1b0da
   1afdd:	mov    eax,DWORD PTR [esi+0x4]
   1afe0:	cmp    esi,DWORD PTR [eax]
   1afe2:	jne    0x1b059
   1afe4:	mov    eax,DWORD PTR [eax+0x8]
   1afe7:	cmp    DWORD PTR [eax+0x14],0x0
   1afeb:	jne    0x1b007
   1afed:	mov    DWORD PTR [eax+0x14],edi
   1aff0:	mov    eax,DWORD PTR [esi+0x4]
   1aff3:	and    DWORD PTR [eax+0x14],0x0
   1aff7:	push   DWORD PTR [esi+0x4]
   1affa:	mov    ecx,ebx
   1affc:	call   0x1a4ae
   1b001:	mov    eax,DWORD PTR [esi+0x4]
   1b004:	mov    eax,DWORD PTR [eax+0x8]
   1b007:	mov    ecx,DWORD PTR [eax]
   1b009:	cmp    DWORD PTR [ecx+0x14],edi
   1b00c:	jne    0x1b016
   1b00e:	mov    ecx,DWORD PTR [eax+0x8]
   1b011:	cmp    DWORD PTR [ecx+0x14],edi
   1b014:	je     0x1b089
   1b016:	mov    ecx,DWORD PTR [eax+0x8]
   1b019:	cmp    DWORD PTR [ecx+0x14],edi
   1b01c:	jne    0x1b035
   1b01e:	mov    ecx,DWORD PTR [eax]
   1b020:	mov    DWORD PTR [ecx+0x14],edi
   1b023:	and    DWORD PTR [eax+0x14],0x0
   1b027:	push   eax
   1b028:	mov    ecx,ebx
   1b02a:	call   0x1a4fc
   1b02f:	mov    eax,DWORD PTR [esi+0x4]
   1b032:	mov    eax,DWORD PTR [eax+0x8]
   1b035:	mov    ecx,DWORD PTR [esi+0x4]
   1b038:	mov    ecx,DWORD PTR [ecx+0x14]
   1b03b:	mov    DWORD PTR [eax+0x14],ecx
   1b03e:	mov    ecx,DWORD PTR [esi+0x4]
   1b041:	mov    DWORD PTR [ecx+0x14],edi
   1b044:	mov    eax,DWORD PTR [eax+0x8]
   1b047:	mov    DWORD PTR [eax+0x14],edi
   1b04a:	push   DWORD PTR [esi+0x4]
   1b04d:	mov    ecx,ebx
   1b04f:	call   0x1a4ae
   1b054:	jmp    0x1b0da
   1b059:	mov    eax,DWORD PTR [eax]
   1b05b:	cmp    DWORD PTR [eax+0x14],0x0
   1b05f:	jne    0x1b07a
   1b061:	mov    DWORD PTR [eax+0x14],edi
   1b064:	mov    eax,DWORD PTR [esi+0x4]
   1b067:	and    DWORD PTR [eax+0x14],0x0
   1b06b:	push   DWORD PTR [esi+0x4]
   1b06e:	mov    ecx,ebx
   1b070:	call   0x1a4fc
   1b075:	mov    eax,DWORD PTR [esi+0x4]
   1b078:	mov    eax,DWORD PTR [eax]
   1b07a:	mov    ecx,DWORD PTR [eax+0x8]
   1b07d:	cmp    DWORD PTR [ecx+0x14],edi
   1b080:	jne    0x1b09e
   1b082:	mov    ecx,DWORD PTR [eax]
   1b084:	cmp    DWORD PTR [ecx+0x14],edi
   1b087:	jne    0x1b09e
   1b089:	and    DWORD PTR [eax+0x14],0x0
   1b08d:	mov    esi,DWORD PTR [esi+0x4]
   1b090:	mov    eax,DWORD PTR [ebx+0x4]
   1b093:	cmp    esi,DWORD PTR [eax+0x4]
   1b096:	jne    0x1afd4
   1b09c:	jmp    0x1b0da
   1b09e:	mov    ecx,DWORD PTR [eax]
   1b0a0:	cmp    DWORD PTR [ecx+0x14],edi
   1b0a3:	jne    0x1b0bc
   1b0a5:	mov    ecx,DWORD PTR [eax+0x8]
   1b0a8:	mov    DWORD PTR [ecx+0x14],edi
   1b0ab:	and    DWORD PTR [eax+0x14],0x0
   1b0af:	push   eax
   1b0b0:	mov    ecx,ebx
   1b0b2:	call   0x1a4ae
   1b0b7:	mov    eax,DWORD PTR [esi+0x4]
   1b0ba:	mov    eax,DWORD PTR [eax]
   1b0bc:	mov    ecx,DWORD PTR [esi+0x4]
   1b0bf:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0c2:	mov    DWORD PTR [eax+0x14],ecx
   1b0c5:	mov    ecx,DWORD PTR [esi+0x4]
   1b0c8:	mov    DWORD PTR [ecx+0x14],edi
   1b0cb:	mov    eax,DWORD PTR [eax]
   1b0cd:	mov    DWORD PTR [eax+0x14],edi
   1b0d0:	push   DWORD PTR [esi+0x4]
   1b0d3:	mov    ecx,ebx
   1b0d5:	call   0x1a4fc
   1b0da:	mov    DWORD PTR [esi+0x14],edi
   1b0dd:	lea    ecx,[ebp-0x1]
   1b0e0:	call   DWORD PTR ds:0x77350
   1b0e6:	mov    esi,DWORD PTR [ebp-0x8]
   1b0e9:	lea    eax,[esi+0xc]
   1b0ec:	push   eax
   1b0ed:	call   0x1a62a
   1b0f2:	push   esi
   1b0f3:	call   0x1d9fc
   1b0f8:	mov    eax,DWORD PTR [ebp+0x8]
   1b0fb:	dec    DWORD PTR [ebx+0xc]
   1b0fe:	pop    ecx
   1b0ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1b102:	pop    edi
   1b103:	pop    esi
   1b104:	mov    DWORD PTR [eax],ecx
   1b106:	pop    ebx
   1b107:	leave  
   1b108:	ret    0x8
   1b10b:	int3   
   1b10c:	int3   
   1b10d:	int3   
   1b10e:	int3   
   1b10f:	int3   
   1b110:	mov    edi,edi
   1b112:	push   ebp
   1b113:	mov    ebp,esp
   1b115:	push   ebx
   1b116:	push   esi
   1b117:	push   edi
   1b118:	mov    edi,DWORD PTR [ebp+0x8]
   1b11b:	mov    ebx,ecx
   1b11d:	mov    esi,edi
   1b11f:	cmp    edi,DWORD PTR ds:0x78c84
   1b125:	je     0x1b14d
   1b127:	push   DWORD PTR [esi+0x8]
   1b12a:	mov    ecx,ebx
   1b12c:	call   0x1b110
   1b131:	mov    esi,DWORD PTR [esi]
   1b133:	lea    eax,[edi+0xc]
   1b136:	push   eax
   1b137:	call   0x1a62a
   1b13c:	push   edi
   1b13d:	call   0x1d9fc
   1b142:	pop    ecx
   1b143:	mov    edi,esi
   1b145:	cmp    esi,DWORD PTR ds:0x78c84
   1b14b:	jne    0x1b127
   1b14d:	pop    edi
   1b14e:	pop    esi
   1b14f:	pop    ebx
   1b150:	pop    ebp
   1b151:	ret    0x4
   1b154:	int3   
   1b155:	int3   
   1b156:	int3   
   1b157:	int3   
   1b158:	int3   
   1b159:	int3   
   1b15a:	mov    edi,edi
   1b15c:	push   esi
   1b15d:	mov    esi,ecx
   1b15f:	jmp    0x1b168
   1b161:	mov    ecx,esi
   1b163:	call   0x1aab8
   1b168:	cmp    DWORD PTR [esi+0x2c],0x0
   1b16c:	jne    0x1b161
   1b16e:	pop    esi
   1b16f:	ret    
   1b170:	int3   
   1b171:	int3   
   1b172:	int3   
   1b173:	int3   
   1b174:	int3   
   1b175:	int3   
   1b176:	mov    edi,edi
   1b178:	push   ebp
   1b179:	mov    ebp,esp
   1b17b:	push   esi
   1b17c:	mov    esi,ecx
   1b17e:	cmp    DWORD PTR [esi+0x2c],0x0
   1b182:	je     0x1b1aa
   1b184:	mov    ecx,DWORD PTR [esi+0x1c]
   1b187:	mov    edx,DWORD PTR [esi+0x18]
   1b18a:	cmp    ecx,edx
   1b18c:	je     0x1b1aa
   1b18e:	push   DWORD PTR [ebp+0x8]
   1b191:	lea    eax,[ecx+0x4]
   1b194:	mov    DWORD PTR [esi+0x1c],eax
   1b197:	push   ecx
   1b198:	cmp    eax,edx
   1b19a:	jne    0x1b1be
   1b19c:	call   0x11626
   1b1a1:	mov    ecx,esi
   1b1a3:	call   0x1ab4a
   1b1a8:	jmp    0x1b1c3
   1b1aa:	mov    ecx,esi
   1b1ac:	call   0x1ab4a
   1b1b1:	mov    eax,DWORD PTR [esi+0x1c]
   1b1b4:	push   DWORD PTR [ebp+0x8]
   1b1b7:	lea    ecx,[eax+0x4]
   1b1ba:	mov    DWORD PTR [esi+0x1c],ecx
   1b1bd:	push   eax
   1b1be:	call   0x11626
   1b1c3:	inc    DWORD PTR [esi+0x2c]
   1b1c6:	pop    esi
   1b1c7:	pop    ebp
   1b1c8:	ret    0x4
   1b1cb:	int3   
   1b1cc:	int3   
   1b1cd:	int3   
   1b1ce:	int3   
   1b1cf:	int3   
   1b1d0:	mov    edi,edi
   1b1d2:	push   ebp
   1b1d3:	mov    ebp,esp
   1b1d5:	push   esi
   1b1d6:	push   0x0
   1b1d8:	push   0xc
   1b1da:	mov    esi,ecx
   1b1dc:	call   0x11604
   1b1e1:	mov    ecx,DWORD PTR [ebp+0x8]
   1b1e4:	mov    DWORD PTR [eax],eax
   1b1e6:	mov    DWORD PTR [eax+0x4],eax
   1b1e9:	and    DWORD PTR [esi+0x8],0x0
   1b1ed:	mov    DWORD PTR [esi+0x4],eax
   1b1f0:	mov    ecx,DWORD PTR [ecx+0x4]
   1b1f3:	mov    edx,DWORD PTR [ecx]
   1b1f5:	mov    eax,DWORD PTR [eax]
   1b1f7:	push   ecx
   1b1f8:	push   edx
   1b1f9:	push   eax
   1b1fa:	mov    ecx,esi
   1b1fc:	call   0x1ac56
   1b201:	mov    eax,esi
   1b203:	pop    esi
   1b204:	pop    ebp
   1b205:	ret    0x4
   1b208:	int3   
   1b209:	int3   
   1b20a:	int3   
   1b20b:	int3   
   1b20c:	int3   
   1b20d:	int3   
   1b20e:	mov    edi,edi
   1b210:	push   ebp
   1b211:	mov    ebp,esp
   1b213:	push   ecx
   1b214:	mov    edx,DWORD PTR [ebp+0x8]
   1b217:	mov    DWORD PTR [ebp-0x4],ecx
   1b21a:	cmp    ecx,edx
   1b21c:	je     0x1b25b
   1b21e:	push   ebx
   1b21f:	mov    ebx,DWORD PTR [edx+0x4]
   1b222:	push   esi
   1b223:	mov    esi,DWORD PTR [ecx+0x4]
   1b226:	mov    eax,DWORD PTR [esi]
   1b228:	push   edi
   1b229:	mov    edi,DWORD PTR [ebx]
   1b22b:	jmp    0x1b23b
   1b22d:	cmp    edi,ebx
   1b22f:	je     0x1b23f
   1b231:	mov    edx,DWORD PTR [edi+0x8]
   1b234:	mov    DWORD PTR [eax+0x8],edx
   1b237:	mov    eax,DWORD PTR [eax]
   1b239:	mov    edi,DWORD PTR [edi]
   1b23b:	cmp    eax,esi
   1b23d:	jne    0x1b22d
   1b23f:	push   esi
   1b240:	push   eax
   1b241:	lea    eax,[ebp+0x8]
   1b244:	push   eax
   1b245:	call   0x1a956
   1b24a:	mov    ecx,DWORD PTR [ebp-0x4]
   1b24d:	push   ebx
   1b24e:	push   edi
   1b24f:	push   esi
   1b250:	call   0x1ac56
   1b255:	mov    ecx,DWORD PTR [ebp-0x4]
   1b258:	pop    edi
   1b259:	pop    esi
   1b25a:	pop    ebx
   1b25b:	mov    eax,ecx
   1b25d:	leave  
   1b25e:	ret    0x4
   1b261:	int3   
   1b262:	int3   
   1b263:	int3   
   1b264:	int3   
   1b265:	int3   
   1b266:	mov    edi,edi
   1b268:	push   ebp
   1b269:	mov    ebp,esp
   1b26b:	push   DWORD PTR [ebp+0x8]
   1b26e:	mov    eax,DWORD PTR [ecx+0x4]
   1b271:	push   eax
   1b272:	lea    eax,[ebp+0x8]
   1b275:	push   eax
   1b276:	call   0x1ac14
   1b27b:	pop    ebp
   1b27c:	ret    0x4
   1b27f:	int3   
   1b280:	int3   
   1b281:	int3   
   1b282:	int3   
   1b283:	int3   
   1b284:	mov    edi,edi
   1b286:	push   ebp
   1b287:	mov    ebp,esp
   1b289:	push   ecx
   1b28a:	push   ebx
   1b28b:	push   esi
   1b28c:	push   edi
   1b28d:	mov    edi,ecx
   1b28f:	mov    eax,DWORD PTR [edi+0x4]
   1b292:	mov    esi,DWORD PTR [eax+0x4]
   1b295:	mov    ebx,eax
   1b297:	mov    al,0x1
   1b299:	jmp    0x1b2b4
   1b29b:	lea    eax,[esi+0xc]
   1b29e:	push   eax
   1b29f:	push   DWORD PTR [ebp+0xc]
   1b2a2:	mov    ebx,esi
   1b2a4:	call   0x197b8
   1b2a9:	test   al,al
   1b2ab:	je     0x1b2b1
   1b2ad:	mov    esi,DWORD PTR [esi]
   1b2af:	jmp    0x1b2b4
   1b2b1:	mov    esi,DWORD PTR [esi+0x8]
   1b2b4:	cmp    esi,DWORD PTR ds:0x78c84
   1b2ba:	jne    0x1b29b
   1b2bc:	cmp    BYTE PTR [edi+0x8],0x0
   1b2c0:	je     0x1b2dd
   1b2c2:	push   DWORD PTR [ebp+0xc]
   1b2c5:	lea    eax,[ebp+0xc]
   1b2c8:	push   ebx
   1b2c9:	push   esi
   1b2ca:	push   eax
   1b2cb:	mov    ecx,edi
   1b2cd:	call   0x1ad3c
   1b2d2:	mov    ecx,DWORD PTR [eax]
   1b2d4:	mov    eax,DWORD PTR [ebp+0x8]
   1b2d7:	mov    BYTE PTR [eax+0x4],0x1
   1b2db:	jmp    0x1b310
   1b2dd:	mov    DWORD PTR [ebp-0x4],ebx
   1b2e0:	test   al,al
   1b2e2:	je     0x1b2f3
   1b2e4:	mov    eax,DWORD PTR [edi+0x4]
   1b2e7:	cmp    ebx,DWORD PTR [eax]
   1b2e9:	je     0x1b2c2
   1b2eb:	lea    ecx,[ebp-0x4]
   1b2ee:	call   0x1a54c
   1b2f3:	push   DWORD PTR [ebp+0xc]
   1b2f6:	mov    eax,DWORD PTR [ebp-0x4]
   1b2f9:	add    eax,0xc
   1b2fc:	push   eax
   1b2fd:	call   0x197b8
   1b302:	test   al,al
   1b304:	jne    0x1b2c2
   1b306:	mov    eax,DWORD PTR [ebp+0x8]
   1b309:	mov    ecx,DWORD PTR [ebp-0x4]
   1b30c:	mov    BYTE PTR [eax+0x4],0x0
   1b310:	pop    edi
   1b311:	pop    esi
   1b312:	mov    DWORD PTR [eax],ecx
   1b314:	pop    ebx
   1b315:	leave  
   1b316:	ret    0x8
   1b319:	int3   
   1b31a:	int3   
   1b31b:	int3   
   1b31c:	int3   
   1b31d:	int3   
   1b31e:	mov    edi,edi
   1b320:	push   ebp
   1b321:	mov    ebp,esp
   1b323:	push   ecx
   1b324:	push   ecx
   1b325:	push   DWORD PTR [ebp+0x8]
   1b328:	lea    eax,[ebp-0x8]
   1b32b:	push   eax
   1b32c:	call   0x1ac8e
   1b331:	and    DWORD PTR [ebp+0x8],0x0
   1b335:	lea    eax,[ebp+0x8]
   1b338:	push   eax
   1b339:	push   DWORD PTR [ebp-0x4]
   1b33c:	push   DWORD PTR [ebp-0x8]
   1b33f:	call   0x1aa38
   1b344:	mov    eax,DWORD PTR [ebp+0x8]
   1b347:	add    esp,0xc
   1b34a:	leave  
   1b34b:	ret    0x4
   1b34e:	int3   
   1b34f:	int3   
   1b350:	int3   
   1b351:	int3   
   1b352:	int3   
   1b353:	int3   
   1b354:	mov    edi,edi
   1b356:	push   ebp
   1b357:	mov    ebp,esp
   1b359:	push   ecx
   1b35a:	push   esi
   1b35b:	mov    esi,ecx
   1b35d:	cmp    DWORD PTR [esi+0xc],0x0
   1b361:	mov    ecx,DWORD PTR [ebp+0xc]
   1b364:	je     0x1b39e
   1b366:	mov    eax,DWORD PTR [esi+0x4]
   1b369:	cmp    ecx,DWORD PTR [eax]
   1b36b:	jne    0x1b39e
   1b36d:	cmp    DWORD PTR [ebp+0x10],eax
   1b370:	jne    0x1b39e
   1b372:	push   DWORD PTR [eax+0x4]
   1b375:	mov    ecx,esi
   1b377:	call   0x1b110
   1b37c:	mov    ecx,DWORD PTR ds:0x78c84
   1b382:	mov    eax,DWORD PTR [esi+0x4]
   1b385:	mov    DWORD PTR [eax+0x4],ecx
   1b388:	mov    eax,DWORD PTR [esi+0x4]
   1b38b:	and    DWORD PTR [esi+0xc],0x0
   1b38f:	mov    DWORD PTR [eax],eax
   1b391:	mov    eax,DWORD PTR [esi+0x4]
   1b394:	mov    DWORD PTR [eax+0x8],eax
   1b397:	mov    eax,DWORD PTR [esi+0x4]
   1b39a:	mov    ecx,DWORD PTR [eax]
   1b39c:	jmp    0x1b3c3
   1b39e:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3a1:	je     0x1b3c3
   1b3a3:	push   edi
   1b3a4:	mov    edi,ecx
   1b3a6:	lea    ecx,[ebp+0xc]
   1b3a9:	call   0x1a32e
   1b3ae:	push   edi
   1b3af:	lea    eax,[ebp-0x4]
   1b3b2:	push   eax
   1b3b3:	mov    ecx,esi
   1b3b5:	call   0x1ae92
   1b3ba:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3bd:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3c0:	jne    0x1b3a4
   1b3c2:	pop    edi
   1b3c3:	mov    eax,DWORD PTR [ebp+0x8]
   1b3c6:	mov    DWORD PTR [eax],ecx
   1b3c8:	pop    esi
   1b3c9:	leave  
   1b3ca:	ret    0xc
   1b3cd:	int3   
   1b3ce:	int3   
   1b3cf:	int3   
   1b3d0:	int3   
   1b3d1:	int3   
   1b3d2:	mov    edi,edi
   1b3d4:	push   ebp
   1b3d5:	mov    ebp,esp
   1b3d7:	push   esi
   1b3d8:	push   DWORD PTR [ebp+0x8]
   1b3db:	mov    esi,ecx
   1b3dd:	mov    ecx,DWORD PTR [esi]
   1b3df:	call   0x1b176
   1b3e4:	mov    eax,esi
   1b3e6:	pop    esi
   1b3e7:	pop    ebp
   1b3e8:	ret    0x4
   1b3eb:	int3   
   1b3ec:	int3   
   1b3ed:	int3   
   1b3ee:	int3   
   1b3ef:	int3   
   1b3f0:	mov    edi,edi
   1b3f2:	push   ebp
   1b3f3:	mov    ebp,esp
   1b3f5:	push   ecx
   1b3f6:	push   esi
   1b3f7:	push   edi
   1b3f8:	xor    edi,edi
   1b3fa:	push   edi
   1b3fb:	push   edi
   1b3fc:	push   edi
   1b3fd:	push   edi
   1b3fe:	mov    esi,0x78c54
   1b403:	push   esi
   1b404:	call   DWORD PTR ds:0x1ee2c
   1b40a:	test   eax,eax
   1b40c:	jl     0x1b430
   1b40e:	mov    eax,ds:0x78c80
   1b413:	mov    ecx,DWORD PTR ds:0x78c78
   1b419:	add    eax,0x9
   1b41c:	mov    DWORD PTR [ebp-0x4],eax
   1b41f:	lea    eax,[ebp-0x4]
   1b422:	push   eax
   1b423:	call   0x1b266
   1b428:	push   edi
   1b429:	push   esi
   1b42a:	call   DWORD PTR ds:0x1ee28
   1b430:	pop    edi
   1b431:	pop    esi
   1b432:	leave  
   1b433:	ret    
   1b434:	int3   
   1b435:	int3   
   1b436:	int3   
   1b437:	int3   
   1b438:	int3   
   1b439:	int3   
   1b43a:	mov    edi,edi
   1b43c:	push   ebp
   1b43d:	mov    ebp,esp
   1b43f:	push   ecx
   1b440:	push   ecx
   1b441:	push   DWORD PTR [ebp+0xc]
   1b444:	lea    eax,[ebp-0x8]
   1b447:	push   eax
   1b448:	call   0x1b284
   1b44d:	mov    eax,DWORD PTR [ebp+0x8]
   1b450:	mov    ecx,DWORD PTR [ebp-0x8]
   1b453:	mov    DWORD PTR [eax],ecx
   1b455:	mov    cl,BYTE PTR [ebp-0x4]
   1b458:	mov    BYTE PTR [eax+0x4],cl
   1b45b:	leave  
   1b45c:	ret    0x8
   1b45f:	int3   
   1b460:	int3   
   1b461:	int3   
   1b462:	int3   
   1b463:	int3   
   1b464:	mov    edi,edi
   1b466:	push   ebp
   1b467:	mov    ebp,esp
   1b469:	push   ecx
   1b46a:	push   ecx
   1b46b:	push   esi
   1b46c:	push   DWORD PTR [ebp+0x8]
   1b46f:	lea    eax,[ebp-0x8]
   1b472:	push   eax
   1b473:	mov    esi,ecx
   1b475:	call   0x1ac8e
   1b47a:	and    DWORD PTR [ebp+0x8],0x0
   1b47e:	lea    eax,[ebp+0x8]
   1b481:	push   eax
   1b482:	push   DWORD PTR [ebp-0x4]
   1b485:	push   DWORD PTR [ebp-0x8]
   1b488:	call   0x1aa38
   1b48d:	add    esp,0xc
   1b490:	push   DWORD PTR [ebp-0x4]
   1b493:	lea    eax,[ebp-0x4]
   1b496:	push   DWORD PTR [ebp-0x8]
   1b499:	mov    ecx,esi
   1b49b:	push   eax
   1b49c:	call   0x1b354
   1b4a1:	mov    eax,DWORD PTR [ebp+0x8]
   1b4a4:	pop    esi
   1b4a5:	leave  
   1b4a6:	ret    0x4
   1b4a9:	int3   
   1b4aa:	int3   
   1b4ab:	int3   
   1b4ac:	int3   
   1b4ad:	int3   
   1b4ae:	mov    edi,edi
   1b4b0:	push   ebp
   1b4b1:	mov    ebp,esp
   1b4b3:	jmp    0x1b4c6
   1b4b5:	push   eax
   1b4b6:	lea    ecx,[ebp+0x2c]
   1b4b9:	call   0x1b3d2
   1b4be:	lea    ecx,[ebp+0xc]
   1b4c1:	call   0x1a3da
   1b4c6:	mov    eax,DWORD PTR [ebp+0x14]
   1b4c9:	cmp    eax,DWORD PTR [ebp+0x24]
   1b4cc:	jne    0x1b4b5
   1b4ce:	mov    eax,DWORD PTR [ebp+0x8]
   1b4d1:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b4d4:	mov    DWORD PTR [eax],ecx
   1b4d6:	pop    ebp
   1b4d7:	ret    0x28
   1b4da:	int3   
   1b4db:	int3   
   1b4dc:	int3   
   1b4dd:	int3   
   1b4de:	int3   
   1b4df:	int3   
   1b4e0:	mov    edi,edi
   1b4e2:	push   ebp
   1b4e3:	mov    ebp,esp
   1b4e5:	sub    esp,0x10
   1b4e8:	push   0xffffffff
   1b4ea:	push   DWORD PTR [ebp+0x8]
   1b4ed:	lea    ecx,[ebp-0x8]
   1b4f0:	call   0x1109a
   1b4f5:	mov    ecx,DWORD PTR ds:0x78c74
   1b4fb:	lea    eax,[ebp-0x8]
   1b4fe:	push   eax
   1b4ff:	lea    eax,[ebp-0x10]
   1b502:	push   eax
   1b503:	call   0x1b43a
   1b508:	push   DWORD PTR [ebp-0x8]
   1b50b:	call   0x1d9fc
   1b510:	pop    ecx
   1b511:	leave  
   1b512:	ret    0x4
   1b515:	int3   
   1b516:	int3   
   1b517:	int3   
   1b518:	int3   
   1b519:	int3   
   1b51a:	mov    edi,edi
   1b51c:	push   ebp
   1b51d:	mov    ebp,esp
   1b51f:	xor    eax,eax
   1b521:	push   ebx
   1b522:	push   esi
   1b523:	push   edi
   1b524:	mov    ebx,ecx
   1b526:	mov    DWORD PTR [ebx+0x4],eax
   1b529:	mov    DWORD PTR [ebx+0x8],eax
   1b52c:	mov    DWORD PTR [ebx+0xc],eax
   1b52f:	mov    DWORD PTR [ebx+0x10],eax
   1b532:	mov    DWORD PTR [ebx+0x14],eax
   1b535:	mov    DWORD PTR [ebx+0x18],eax
   1b538:	mov    DWORD PTR [ebx+0x1c],eax
   1b53b:	mov    DWORD PTR [ebx+0x20],eax
   1b53e:	mov    DWORD PTR [ebx+0x24],eax
   1b541:	mov    DWORD PTR [ebx+0x28],eax
   1b544:	mov    DWORD PTR [ebx+0x2c],eax
   1b547:	mov    eax,DWORD PTR [ebp+0x8]
   1b54a:	push   ebx
   1b54b:	sub    esp,0x10
   1b54e:	mov    edi,esp
   1b550:	lea    esi,[eax+0x14]
   1b553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b557:	sub    esp,0x10
   1b55a:	lea    esi,[eax+0x4]
   1b55d:	mov    edi,esp
   1b55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b562:	lea    eax,[ebp+0x8]
   1b565:	push   eax
   1b566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b567:	call   0x1b4ae
   1b56c:	pop    edi
   1b56d:	pop    esi
   1b56e:	mov    eax,ebx
   1b570:	pop    ebx
   1b571:	pop    ebp
   1b572:	ret    0x4
   1b575:	int3   
   1b576:	int3   
   1b577:	int3   
   1b578:	int3   
   1b579:	int3   
   1b57a:	mov    edi,edi
   1b57c:	push   ebp
   1b57d:	mov    ebp,esp
   1b57f:	push   ecx
   1b580:	push   ebx
   1b581:	push   0x30
   1b583:	call   0x10a52
   1b588:	xor    ebx,ebx
   1b58a:	pop    ecx
   1b58b:	cmp    eax,ebx
   1b58d:	je     0x1b5a1
   1b58f:	lea    ecx,[ebp-0x1]
   1b592:	push   ecx
   1b593:	mov    ecx,eax
   1b595:	call   0x1a460
   1b59a:	mov    ds:0x78c7c,eax
   1b59f:	jmp    0x1b5a7
   1b5a1:	mov    DWORD PTR ds:0x78c7c,ebx
   1b5a7:	push   esi
   1b5a8:	push   0x10
   1b5aa:	call   0x10a52
   1b5af:	mov    esi,eax
   1b5b1:	pop    ecx
   1b5b2:	cmp    esi,ebx
   1b5b4:	je     0x1b5c8
   1b5b6:	mov    ecx,esi
   1b5b8:	mov    BYTE PTR [esi+0x8],bl
   1b5bb:	call   0x1acc0
   1b5c0:	mov    DWORD PTR ds:0x78c74,esi
   1b5c6:	jmp    0x1b5ce
   1b5c8:	mov    DWORD PTR ds:0x78c74,ebx
   1b5ce:	push   0xc
   1b5d0:	call   0x10a52
   1b5d5:	pop    ecx
   1b5d6:	pop    esi
   1b5d7:	cmp    eax,ebx
   1b5d9:	je     0x1b5ed
   1b5db:	lea    ecx,[ebp-0x1]
   1b5de:	push   ecx
   1b5df:	mov    ecx,eax
   1b5e1:	call   0x1aad4
   1b5e6:	mov    ds:0x78c78,eax
   1b5eb:	jmp    0x1b5f3
   1b5ed:	mov    DWORD PTR ds:0x78c78,ebx
   1b5f3:	push   ebx
   1b5f4:	push   0x78c54
   1b5f9:	call   0x11c72
   1b5fe:	call   eax
   1b600:	mov    DWORD PTR ds:0x78c80,0x1
   1b60a:	pop    ebx
   1b60b:	leave  
   1b60c:	ret    
   1b60d:	int3   
   1b60e:	int3   
   1b60f:	int3   
   1b610:	int3   
   1b611:	int3   
   1b612:	push   0x3c
   1b614:	push   0x77550
   1b619:	call   0x1dabc
   1b61e:	xor    esi,esi
   1b620:	push   esi
   1b621:	push   esi
   1b622:	push   esi
   1b623:	push   esi
   1b624:	push   0x78c54
   1b629:	call   DWORD PTR ds:0x1ee2c
   1b62f:	cmp    eax,esi
   1b631:	jl     0x1b7a1
   1b637:	mov    DWORD PTR [ebp-0x4],esi
   1b63a:	mov    edi,DWORD PTR [ebp+0x8]
   1b63d:	push   edi
   1b63e:	lea    eax,[ebp-0x24]
   1b641:	push   eax
   1b642:	call   0x1a66c
   1b647:	cmp    DWORD PTR [eax+0x4],esi
   1b64a:	setne  BYTE PTR [ebp-0x19]
   1b64e:	push   DWORD PTR [ebp-0x24]
   1b651:	call   0x1d9fc
   1b656:	pop    ecx
   1b657:	push   edi
   1b658:	lea    eax,[ebp-0x2c]
   1b65b:	push   eax
   1b65c:	call   0x1a692
   1b661:	xor    al,al
   1b663:	cmp    DWORD PTR [edi+0x14],esi
   1b666:	jne    0x1b67c
   1b668:	lea    eax,[ebp-0x2c]
   1b66b:	push   eax
   1b66c:	mov    ecx,DWORD PTR ds:0x78c74
   1b672:	call   0x1b31e
   1b677:	test   eax,eax
   1b679:	setne  al
   1b67c:	test   al,al
   1b67e:	je     0x1b68f
   1b680:	lea    eax,[ebp-0x2c]
   1b683:	push   eax
   1b684:	mov    ecx,DWORD PTR ds:0x78c74
   1b68a:	call   0x1b464
   1b68f:	mov    ebx,DWORD PTR ds:0x78c7c
   1b695:	cmp    DWORD PTR [ebx+0x2c],esi
   1b698:	jbe    0x1b6f8
   1b69a:	mov    eax,ds:0x7811c
   1b69f:	mov    DWORD PTR [ebp-0x20],eax
   1b6a2:	cmp    eax,esi
   1b6a4:	ja     0x1b6ad
   1b6a6:	mov    DWORD PTR [ebp-0x20],0x1
   1b6ad:	mov    eax,DWORD PTR [ebp-0x20]
   1b6b0:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6b3:	jb     0x1b6f8
   1b6b5:	lea    esi,[ebx+0x4]
   1b6b8:	lea    edi,[ebp-0x3c]
   1b6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6bf:	mov    eax,DWORD PTR [ebp-0x34]
   1b6c2:	mov    eax,DWORD PTR [eax]
   1b6c4:	mov    eax,DWORD PTR [eax+0xc]
   1b6c7:	xor    ecx,ecx
   1b6c9:	add    eax,0x9c40
   1b6ce:	push   ecx
   1b6cf:	pop    esi
   1b6d0:	adc    ecx,esi
   1b6d2:	mov    edx,DWORD PTR [ebp+0x8]
   1b6d5:	mov    edx,DWORD PTR [edx+0xc]
   1b6d8:	cmp    ecx,esi
   1b6da:	ja     0x1b6f8
   1b6dc:	jb     0x1b6e2
   1b6de:	cmp    eax,edx
   1b6e0:	jae    0x1b6f8
   1b6e2:	mov    ecx,ebx
   1b6e4:	call   0x1a48e
   1b6e9:	mov    ecx,ebx
   1b6eb:	call   0x1aab8
   1b6f0:	mov    ebx,DWORD PTR ds:0x78c7c
   1b6f6:	jmp    0x1b6ad
   1b6f8:	push   DWORD PTR [ebp+0x8]
   1b6fb:	lea    eax,[ebp-0x24]
   1b6fe:	push   eax
   1b6ff:	call   0x1a692
   1b704:	push   eax
   1b705:	lea    eax,[ebp-0x3c]
   1b708:	push   eax
   1b709:	call   0x1a6de
   1b70e:	push   DWORD PTR [ebp-0x24]
   1b711:	call   0x1d9fc
   1b716:	pop    ecx
   1b717:	mov    ebx,DWORD PTR ds:0x78c7c
   1b71d:	lea    esi,[ebx+0x14]
   1b720:	lea    edi,[ebp-0x4c]
   1b723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b727:	mov    esi,DWORD PTR [ebp-0x34]
   1b72a:	cmp    esi,DWORD PTR [ebp-0x44]
   1b72d:	je     0x1b761
   1b72f:	mov    eax,DWORD PTR [esi]
   1b731:	mov    BYTE PTR [eax+0x1c],0x0
   1b735:	mov    eax,DWORD PTR [esi]
   1b737:	cmp    BYTE PTR [eax+0x24],0x0
   1b73b:	jne    0x1b74b
   1b73d:	mov    BYTE PTR [eax+0x24],0x1
   1b741:	mov    eax,DWORD PTR [esi]
   1b743:	push   DWORD PTR [eax+0x8]
   1b746:	call   0x1a408
   1b74b:	mov    eax,DWORD PTR [esi]
   1b74d:	mov    ecx,DWORD PTR [eax+0x8]
   1b750:	mov    eax,DWORD PTR [ebp+0x8]
   1b753:	mov    DWORD PTR [eax+0x8],ecx
   1b756:	mov    ecx,DWORD PTR [esi]
   1b758:	mov    ecx,DWORD PTR [ecx+0x20]
   1b75b:	inc    ecx
   1b75c:	mov    DWORD PTR [eax+0x20],ecx
   1b75f:	jmp    0x1b764
   1b761:	mov    eax,DWORD PTR [ebp+0x8]
   1b764:	mov    cl,BYTE PTR [ebp-0x19]
   1b767:	mov    BYTE PTR [eax+0x1c],cl
   1b76a:	lea    eax,[ebp+0x8]
   1b76d:	push   eax
   1b76e:	mov    ecx,ebx
   1b770:	call   0x1b176
   1b775:	inc    DWORD PTR ds:0x78c80
   1b77b:	push   DWORD PTR [ebp-0x2c]
   1b77e:	call   0x1d9fc
   1b783:	pop    ecx
   1b784:	jmp    0x1b78d
   1b786:	xor    eax,eax
   1b788:	inc    eax
   1b789:	ret    
   1b78a:	mov    esp,DWORD PTR [ebp-0x18]
   1b78d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b794:	push   0x0
   1b796:	push   0x78c54
   1b79b:	call   DWORD PTR ds:0x1ee28
   1b7a1:	call   0x1db01
   1b7a6:	ret    0x4
   1b7a9:	int3   
   1b7aa:	int3   
   1b7ab:	int3   
   1b7ac:	int3   
   1b7ad:	int3   
   1b7ae:	push   0x48
   1b7b0:	push   0x77570
   1b7b5:	call   0x1dabc
   1b7ba:	xor    ebx,ebx
   1b7bc:	push   ebx
   1b7bd:	push   ebx
   1b7be:	push   ebx
   1b7bf:	push   ebx
   1b7c0:	push   0x78c54
   1b7c5:	call   DWORD PTR ds:0x1ee2c
   1b7cb:	cmp    eax,ebx
   1b7cd:	jl     0x1b87b
   1b7d3:	mov    DWORD PTR [ebp-0x4],ebx
   1b7d6:	push   DWORD PTR ds:0x78c78
   1b7dc:	lea    ecx,[ebp-0x28]
   1b7df:	call   0x1b1d0
   1b7e4:	mov    BYTE PTR [ebp-0x19],bl
   1b7e7:	cmp    DWORD PTR [ebp-0x20],ebx
   1b7ea:	je     0x1b80a
   1b7ec:	mov    eax,DWORD PTR [ebp-0x24]
   1b7ef:	mov    eax,DWORD PTR [eax]
   1b7f1:	mov    eax,DWORD PTR [eax+0x8]
   1b7f4:	cmp    eax,DWORD PTR ds:0x78c80
   1b7fa:	ja     0x1b80a
   1b7fc:	mov    BYTE PTR [ebp-0x19],0x1
   1b800:	lea    ecx,[ebp-0x28]
   1b803:	call   0x1ab2e
   1b808:	jmp    0x1b7e7
   1b80a:	cmp    BYTE PTR [ebp-0x19],bl
   1b80d:	je     0x1b845
   1b80f:	push   DWORD PTR ds:0x78c7c
   1b815:	lea    ecx,[ebp-0x58]
   1b818:	call   0x1b51a
   1b81d:	mov    esi,DWORD PTR [ebp+0x8]
   1b820:	push   esi
   1b821:	lea    eax,[ebp-0x58]
   1b824:	push   eax
   1b825:	call   0x1a77c
   1b82a:	cmp    DWORD PTR [esi],ebx
   1b82c:	jne    0x1b83d
   1b82e:	lea    eax,[ebp-0x28]
   1b831:	push   eax
   1b832:	mov    ecx,DWORD PTR ds:0x78c78
   1b838:	call   0x1b20e
   1b83d:	lea    ecx,[ebp-0x58]
   1b840:	call   0x1b15a
   1b845:	lea    ecx,[ebp-0x28]
   1b848:	call   0x1aafa
   1b84d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b854:	jmp    0x1b86f
   1b856:	xor    eax,eax
   1b858:	inc    eax
   1b859:	ret    
   1b85a:	mov    esp,DWORD PTR [ebp-0x18]
   1b85d:	mov    eax,DWORD PTR [ebp+0x8]
   1b860:	mov    DWORD PTR [eax],0x2
   1b866:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b86d:	xor    ebx,ebx
   1b86f:	push   ebx
   1b870:	push   0x78c54
   1b875:	call   DWORD PTR ds:0x1ee28
   1b87b:	call   0x1db01
   1b880:	ret    0x4
   1b883:	int3   
   1b884:	int3   
   1b885:	int3   
   1b886:	int3   
   1b887:	int3   
   1b888:	mov    edi,edi
   1b88a:	push   ebp
   1b88b:	mov    ebp,esp
   1b88d:	mov    ecx,DWORD PTR [ebp+0x8]
   1b890:	xor    edx,edx
   1b892:	cmp    ecx,edx
   1b894:	je     0x1b8e4
   1b896:	mov    eax,DWORD PTR [ecx+0x1c]
   1b899:	cmp    eax,edx
   1b89b:	je     0x1b8e4
   1b89d:	mov    DWORD PTR [eax+0x1c],edx
   1b8a0:	mov    DWORD PTR [ecx+0x14],edx
   1b8a3:	mov    DWORD PTR [ecx+0x8],edx
   1b8a6:	mov    DWORD PTR [ecx+0x18],edx
   1b8a9:	mov    DWORD PTR [ecx+0x30],0x1
   1b8b0:	lea    ecx,[eax+0x530]
   1b8b6:	mov    DWORD PTR [eax],edx
   1b8b8:	mov    DWORD PTR [eax+0x4],edx
   1b8bb:	mov    DWORD PTR [eax+0xc],edx
   1b8be:	mov    DWORD PTR [eax+0x14],0x8000
   1b8c5:	mov    DWORD PTR [eax+0x20],edx
   1b8c8:	mov    DWORD PTR [eax+0x28],edx
   1b8cb:	mov    DWORD PTR [eax+0x2c],edx
   1b8ce:	mov    DWORD PTR [eax+0x30],edx
   1b8d1:	mov    DWORD PTR [eax+0x38],edx
   1b8d4:	mov    DWORD PTR [eax+0x3c],edx
   1b8d7:	mov    DWORD PTR [eax+0x6c],ecx
   1b8da:	mov    DWORD PTR [eax+0x50],ecx
   1b8dd:	mov    DWORD PTR [eax+0x4c],ecx
   1b8e0:	xor    eax,eax
   1b8e2:	jmp    0x1b8e7
   1b8e4:	push   0xfffffffe
   1b8e6:	pop    eax
   1b8e7:	pop    ebp
   1b8e8:	ret    0x4
   1b8eb:	int3   
   1b8ec:	int3   
   1b8ed:	int3   
   1b8ee:	int3   
   1b8ef:	int3   
   1b8f0:	mov    edi,edi
   1b8f2:	push   ebp
   1b8f3:	mov    ebp,esp
   1b8f5:	mov    eax,DWORD PTR [ebp+0x10]
   1b8f8:	push   esi
   1b8f9:	push   edi
   1b8fa:	xor    edi,edi
   1b8fc:	cmp    eax,edi
   1b8fe:	je     0x1b999
   1b904:	cmp    BYTE PTR [eax],0x31
   1b907:	jne    0x1b999
   1b90d:	cmp    DWORD PTR [ebp+0x14],0x38
   1b911:	jne    0x1b999
   1b917:	mov    esi,DWORD PTR [ebp+0x8]
   1b91a:	cmp    esi,edi
   1b91c:	jne    0x1b922
   1b91e:	push   0xfffffffe
   1b920:	jmp    0x1b99b
   1b922:	mov    DWORD PTR [esi+0x18],edi
   1b925:	cmp    DWORD PTR [esi+0x20],edi
   1b928:	jne    0x1b934
   1b92a:	mov    DWORD PTR [esi+0x20],0x1cce8
   1b931:	mov    DWORD PTR [esi+0x28],edi
   1b934:	cmp    DWORD PTR [esi+0x24],edi
   1b937:	jne    0x1b940
   1b939:	mov    DWORD PTR [esi+0x24],0x1cd04
   1b940:	push   0x2530
   1b945:	push   0x1
   1b947:	push   DWORD PTR [esi+0x28]
   1b94a:	call   DWORD PTR [esi+0x20]
   1b94d:	cmp    eax,edi
   1b94f:	jne    0x1b955
   1b951:	push   0xfffffffc
   1b953:	jmp    0x1b99b
   1b955:	mov    ecx,DWORD PTR [ebp+0xc]
   1b958:	cmp    ecx,edi
   1b95a:	mov    DWORD PTR [esi+0x1c],eax
   1b95d:	jge    0x1b966
   1b95f:	mov    DWORD PTR [eax+0x8],edi
   1b962:	neg    ecx
   1b964:	jmp    0x1b977
   1b966:	mov    edx,ecx
   1b968:	sar    edx,0x4
   1b96b:	inc    edx
   1b96c:	cmp    ecx,0x30
   1b96f:	mov    DWORD PTR [eax+0x8],edx
   1b972:	jge    0x1b977
   1b974:	and    ecx,0xf
   1b977:	lea    edx,[ecx-0x8]
   1b97a:	cmp    edx,0x7
   1b97d:	ja     0x1b98d
   1b97f:	push   esi
   1b980:	mov    DWORD PTR [eax+0x24],ecx
   1b983:	mov    DWORD PTR [eax+0x34],edi
   1b986:	call   0x1b888
   1b98b:	jmp    0x1b99c
   1b98d:	push   eax
   1b98e:	push   DWORD PTR [esi+0x28]
   1b991:	call   DWORD PTR [esi+0x24]
   1b994:	mov    DWORD PTR [esi+0x1c],edi
   1b997:	jmp    0x1b91e
   1b999:	push   0xfffffffa
   1b99b:	pop    eax
   1b99c:	pop    edi
   1b99d:	pop    esi
   1b99e:	pop    ebp
   1b99f:	ret    0x10
   1b9a2:	int3   
   1b9a3:	int3   
   1b9a4:	int3   
   1b9a5:	int3   
   1b9a6:	int3   
   1b9a7:	int3   
   1b9a8:	mov    edi,edi
   1b9aa:	push   ebp
   1b9ab:	mov    ebp,esp
   1b9ad:	push   ecx
   1b9ae:	push   ebx
   1b9af:	push   esi
   1b9b0:	mov    esi,DWORD PTR [edi+0x1c]
   1b9b3:	cmp    DWORD PTR [esi+0x34],0x0
   1b9b7:	mov    ebx,eax
   1b9b9:	jne    0x1b9d9
   1b9bb:	mov    ecx,DWORD PTR [esi+0x24]
   1b9be:	xor    eax,eax
   1b9c0:	inc    eax
   1b9c1:	shl    eax,cl
   1b9c3:	push   0x1
   1b9c5:	push   eax
   1b9c6:	push   DWORD PTR [edi+0x28]
   1b9c9:	call   DWORD PTR [edi+0x20]
   1b9cc:	mov    DWORD PTR [esi+0x34],eax
   1b9cf:	test   eax,eax
   1b9d1:	jne    0x1b9d9
   1b9d3:	inc    eax
   1b9d4:	jmp    0x1ba7b
   1b9d9:	xor    eax,eax
   1b9db:	cmp    DWORD PTR [esi+0x28],eax
   1b9de:	jne    0x1b9f1
   1b9e0:	mov    ecx,DWORD PTR [esi+0x24]
   1b9e3:	xor    edx,edx
   1b9e5:	inc    edx
   1b9e6:	shl    edx,cl
   1b9e8:	mov    DWORD PTR [esi+0x30],eax
   1b9eb:	mov    DWORD PTR [esi+0x2c],eax
   1b9ee:	mov    DWORD PTR [esi+0x28],edx
   1b9f1:	sub    ebx,DWORD PTR [edi+0x10]
   1b9f4:	mov    eax,DWORD PTR [esi+0x28]
   1b9f7:	cmp    ebx,eax
   1b9f9:	jb     0x1ba13
   1b9fb:	mov    ecx,DWORD PTR [edi+0xc]
   1b9fe:	push   eax
   1b9ff:	sub    ecx,eax
   1ba01:	push   ecx
   1ba02:	push   DWORD PTR [esi+0x34]
   1ba05:	call   0x1da8a
   1ba0a:	add    esp,0xc
   1ba0d:	and    DWORD PTR [esi+0x30],0x0
   1ba11:	jmp    0x1ba54
   1ba13:	sub    eax,DWORD PTR [esi+0x30]
   1ba16:	mov    DWORD PTR [ebp-0x4],eax
   1ba19:	cmp    eax,ebx
   1ba1b:	jbe    0x1ba20
   1ba1d:	mov    DWORD PTR [ebp-0x4],ebx
   1ba20:	mov    eax,DWORD PTR [edi+0xc]
   1ba23:	push   DWORD PTR [ebp-0x4]
   1ba26:	sub    eax,ebx
   1ba28:	push   eax
   1ba29:	mov    eax,DWORD PTR [esi+0x34]
   1ba2c:	add    eax,DWORD PTR [esi+0x30]
   1ba2f:	push   eax
   1ba30:	call   0x1da8a
   1ba35:	mov    eax,DWORD PTR [ebp-0x4]
   1ba38:	add    esp,0xc
   1ba3b:	sub    ebx,eax
   1ba3d:	je     0x1ba5c
   1ba3f:	mov    eax,DWORD PTR [edi+0xc]
   1ba42:	push   ebx
   1ba43:	sub    eax,ebx
   1ba45:	push   eax
   1ba46:	push   DWORD PTR [esi+0x34]
   1ba49:	call   0x1da8a
   1ba4e:	add    esp,0xc
   1ba51:	mov    DWORD PTR [esi+0x30],ebx
   1ba54:	mov    eax,DWORD PTR [esi+0x28]
   1ba57:	mov    DWORD PTR [esi+0x2c],eax
   1ba5a:	jmp    0x1ba79
   1ba5c:	add    DWORD PTR [esi+0x30],eax
   1ba5f:	mov    ecx,DWORD PTR [esi+0x30]
   1ba62:	mov    edx,DWORD PTR [esi+0x28]
   1ba65:	cmp    ecx,edx
   1ba67:	jne    0x1ba6d
   1ba69:	and    DWORD PTR [esi+0x30],0x0
   1ba6d:	mov    ecx,DWORD PTR [esi+0x2c]
   1ba70:	cmp    ecx,edx
   1ba72:	jae    0x1ba79
   1ba74:	add    ecx,eax
   1ba76:	mov    DWORD PTR [esi+0x2c],ecx
   1ba79:	xor    eax,eax
   1ba7b:	pop    esi
   1ba7c:	pop    ebx
   1ba7d:	leave  
   1ba7e:	ret    
   1ba7f:	int3   
   1ba80:	int3   
   1ba81:	int3   
   1ba82:	int3   
   1ba83:	int3   
   1ba84:	mov    edi,edi
   1ba86:	push   ebp
   1ba87:	mov    ebp,esp
   1ba89:	mov    edx,DWORD PTR [ebp+0x8]
   1ba8c:	sub    esp,0x2c
   1ba8f:	push   ebx
   1ba90:	xor    eax,eax
   1ba92:	push   esi
   1ba93:	push   edi
   1ba94:	cmp    edx,eax
   1ba96:	je     0x1bae6
   1ba98:	mov    esi,DWORD PTR [edx+0x1c]
   1ba9b:	cmp    esi,eax
   1ba9d:	je     0x1bae6
   1ba9f:	cmp    DWORD PTR [edx+0xc],eax
   1baa2:	je     0x1bae6
   1baa4:	cmp    DWORD PTR [edx],eax
   1baa6:	jne    0x1baad
   1baa8:	cmp    DWORD PTR [edx+0x4],eax
   1baab:	jne    0x1bae6
   1baad:	cmp    DWORD PTR [esi],0xb
   1bab0:	jne    0x1bab8
   1bab2:	mov    DWORD PTR [esi],0xc
   1bab8:	mov    eax,DWORD PTR [edx+0xc]
   1babb:	mov    ecx,DWORD PTR [edx+0x10]
   1babe:	and    DWORD PTR [ebp-0x24],0x0
   1bac2:	mov    ebx,DWORD PTR [esi+0x38]
   1bac5:	mov    edi,DWORD PTR [esi+0x3c]
   1bac8:	mov    DWORD PTR [ebp-0x18],eax
   1bacb:	mov    eax,DWORD PTR [edx]
   1bacd:	mov    DWORD PTR [ebp-0x4],eax
   1bad0:	mov    eax,DWORD PTR [edx+0x4]
   1bad3:	mov    DWORD PTR [ebp-0x8],eax
   1bad6:	mov    DWORD PTR [ebp-0x2c],eax
   1bad9:	mov    eax,DWORD PTR [esi]
   1badb:	mov    DWORD PTR [ebp-0x10],ecx
   1bade:	mov    DWORD PTR [ebp-0x1c],ecx
   1bae1:	cmp    eax,0x1c
   1bae4:	jbe    0x1baf3
   1bae6:	push   0xfffffffe
   1bae8:	pop    eax
   1bae9:	pop    edi
   1baea:	pop    esi
   1baeb:	pop    ebx
   1baec:	leave  
   1baed:	ret    0x8
   1baf0:	mov    edx,DWORD PTR [ebp+0x8]
   1baf3:	jmp    DWORD PTR [eax*4+0x1cc28]
   1bafa:	mov    eax,DWORD PTR [esi+0x8]
   1bafd:	test   eax,eax
   1baff:	jne    0x1bb2b
   1bb01:	mov    DWORD PTR [esi],0xc
   1bb07:	jmp    0x1caf9
   1bb0c:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb10:	je     0x1cb47
   1bb16:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb19:	movzx  edx,BYTE PTR [ecx]
   1bb1c:	dec    DWORD PTR [ebp-0x8]
   1bb1f:	mov    ecx,edi
   1bb21:	shl    edx,cl
   1bb23:	add    ebx,edx
   1bb25:	inc    DWORD PTR [ebp-0x4]
   1bb28:	add    edi,0x8
   1bb2b:	cmp    edi,0x10
   1bb2e:	jb     0x1bb0c
   1bb30:	test   al,0x2
   1bb32:	je     0x1bb6f
   1bb34:	cmp    ebx,0x8b1f
   1bb3a:	jne    0x1bb6f
   1bb3c:	xor    edi,edi
   1bb3e:	push   edi
   1bb3f:	push   edi
   1bb40:	push   edi
   1bb41:	call   0x1d9aa
   1bb46:	mov    DWORD PTR [esi+0x18],eax
   1bb49:	push   0x2
   1bb4b:	lea    eax,[ebp-0x14]
   1bb4e:	push   eax
   1bb4f:	mov    BYTE PTR [ebp-0x14],0x1f
   1bb53:	mov    BYTE PTR [ebp-0x13],0x8b
   1bb57:	push   DWORD PTR [esi+0x18]
   1bb5a:	call   0x1d9aa
   1bb5f:	mov    DWORD PTR [esi+0x18],eax
   1bb62:	xor    ebx,ebx
   1bb64:	mov    DWORD PTR [esi],0x1
   1bb6a:	jmp    0x1caf9
   1bb6f:	mov    eax,DWORD PTR [esi+0x20]
   1bb72:	and    DWORD PTR [esi+0x10],0x0
   1bb76:	test   eax,eax
   1bb78:	je     0x1bb7e
   1bb7a:	or     DWORD PTR [eax+0x30],0xffffffff
   1bb7e:	test   BYTE PTR [esi+0x8],0x1
   1bb82:	je     0x1bc08
   1bb88:	movzx  eax,bl
   1bb8b:	shl    eax,0x8
   1bb8e:	mov    ecx,ebx
   1bb90:	shr    ecx,0x8
   1bb93:	add    eax,ecx
   1bb95:	push   0x1f
   1bb97:	xor    edx,edx
   1bb99:	pop    ecx
   1bb9a:	div    ecx
   1bb9c:	test   edx,edx
   1bb9e:	jne    0x1bc08
   1bba0:	mov    eax,ebx
   1bba2:	and    al,0xf
   1bba4:	cmp    al,0x8
   1bba6:	je     0x1bbb7
   1bba8:	mov    eax,DWORD PTR [ebp+0x8]
   1bbab:	mov    DWORD PTR [eax+0x18],0x1ed78
   1bbb2:	jmp    0x1caf3
   1bbb7:	shr    ebx,0x4
   1bbba:	mov    ecx,ebx
   1bbbc:	and    ecx,0xf
   1bbbf:	add    ecx,0x8
   1bbc2:	sub    edi,0x4
   1bbc5:	cmp    ecx,DWORD PTR [esi+0x24]
   1bbc8:	jbe    0x1bbd9
   1bbca:	mov    eax,DWORD PTR [ebp+0x8]
   1bbcd:	mov    DWORD PTR [eax+0x18],0x1ed64
   1bbd4:	jmp    0x1caf3
   1bbd9:	xor    eax,eax
   1bbdb:	xor    edi,edi
   1bbdd:	inc    eax
   1bbde:	push   edi
   1bbdf:	shl    eax,cl
   1bbe1:	push   edi
   1bbe2:	push   edi
   1bbe3:	mov    DWORD PTR [esi+0x14],eax
   1bbe6:	call   0x1d508
   1bbeb:	mov    ecx,DWORD PTR [ebp+0x8]
   1bbee:	shr    ebx,0x8
   1bbf1:	not    ebx
   1bbf3:	and    ebx,0x2
   1bbf6:	or     ebx,0x9
   1bbf9:	mov    DWORD PTR [esi+0x18],eax
   1bbfc:	mov    DWORD PTR [ecx+0x30],eax
   1bbff:	mov    DWORD PTR [esi],ebx
   1bc01:	xor    ebx,ebx
   1bc03:	jmp    0x1caf9
   1bc08:	mov    eax,DWORD PTR [ebp+0x8]
   1bc0b:	mov    DWORD PTR [eax+0x18],0x1ed4c
   1bc12:	jmp    0x1caf3
   1bc17:	cmp    edi,0x10
   1bc1a:	jae    0x1bc43
   1bc1c:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc20:	je     0x1cb47
   1bc26:	mov    eax,DWORD PTR [ebp-0x4]
   1bc29:	movzx  eax,BYTE PTR [eax]
   1bc2c:	dec    DWORD PTR [ebp-0x8]
   1bc2f:	mov    ecx,edi
   1bc31:	shl    eax,cl
   1bc33:	add    edi,0x8
   1bc36:	add    ebx,eax
   1bc38:	inc    DWORD PTR [ebp-0x4]
   1bc3b:	cmp    edi,0x10
   1bc3e:	jb     0x1bc1c
   1bc40:	mov    edx,DWORD PTR [ebp+0x8]
   1bc43:	mov    DWORD PTR [esi+0x10],ebx
   1bc46:	cmp    bl,0x8
   1bc49:	je     0x1bc57
   1bc4b:	mov    DWORD PTR [edx+0x18],0x1ed78
   1bc52:	jmp    0x1caf3
   1bc57:	test   ebx,0xe000
   1bc5d:	je     0x1bc6b
   1bc5f:	mov    DWORD PTR [edx+0x18],0x1ed32
   1bc66:	jmp    0x1caf3
   1bc6b:	mov    eax,DWORD PTR [esi+0x20]
   1bc6e:	test   eax,eax
   1bc70:	je     0x1bc7c
   1bc72:	mov    ecx,ebx
   1bc74:	shr    ecx,0x8
   1bc77:	and    ecx,0x1
   1bc7a:	mov    DWORD PTR [eax],ecx
   1bc7c:	test   DWORD PTR [esi+0x10],0x200
   1bc83:	je     0x1bca2
   1bc85:	mov    BYTE PTR [ebp-0x14],bl
   1bc88:	push   0x2
   1bc8a:	lea    eax,[ebp-0x14]
   1bc8d:	shr    ebx,0x8
   1bc90:	push   eax
   1bc91:	mov    BYTE PTR [ebp-0x13],bl
   1bc94:	push   DWORD PTR [esi+0x18]
   1bc97:	call   0x1d9aa
   1bc9c:	mov    edx,DWORD PTR [ebp+0x8]
   1bc9f:	mov    DWORD PTR [esi+0x18],eax
   1bca2:	xor    ebx,ebx
   1bca4:	xor    edi,edi
   1bca6:	mov    DWORD PTR [esi],0x2
   1bcac:	cmp    edi,0x20
   1bcaf:	jae    0x1bcd8
   1bcb1:	cmp    DWORD PTR [ebp-0x8],0x0
   1bcb5:	je     0x1cb47
   1bcbb:	mov    eax,DWORD PTR [ebp-0x4]
   1bcbe:	movzx  eax,BYTE PTR [eax]
   1bcc1:	dec    DWORD PTR [ebp-0x8]
   1bcc4:	mov    ecx,edi
   1bcc6:	shl    eax,cl
   1bcc8:	add    edi,0x8
   1bccb:	add    ebx,eax
   1bccd:	inc    DWORD PTR [ebp-0x4]
   1bcd0:	cmp    edi,0x20
   1bcd3:	jb     0x1bcb1
   1bcd5:	mov    edx,DWORD PTR [ebp+0x8]
   1bcd8:	mov    eax,DWORD PTR [esi+0x20]
   1bcdb:	test   eax,eax
   1bcdd:	je     0x1bce2
   1bcdf:	mov    DWORD PTR [eax+0x4],ebx
   1bce2:	test   DWORD PTR [esi+0x10],0x200
   1bce9:	je     0x1bd18
   1bceb:	mov    eax,ebx
   1bced:	shr    eax,0x8
   1bcf0:	mov    BYTE PTR [ebp-0x13],al
   1bcf3:	mov    eax,ebx
   1bcf5:	shr    eax,0x10
   1bcf8:	mov    BYTE PTR [ebp-0x12],al
   1bcfb:	mov    BYTE PTR [ebp-0x14],bl
   1bcfe:	push   0x4
   1bd00:	lea    eax,[ebp-0x14]
   1bd03:	shr    ebx,0x18
   1bd06:	push   eax
   1bd07:	mov    BYTE PTR [ebp-0x11],bl
   1bd0a:	push   DWORD PTR [esi+0x18]
   1bd0d:	call   0x1d9aa
   1bd12:	mov    edx,DWORD PTR [ebp+0x8]
   1bd15:	mov    DWORD PTR [esi+0x18],eax
   1bd18:	xor    ebx,ebx
   1bd1a:	xor    edi,edi
   1bd1c:	mov    DWORD PTR [esi],0x3
   1bd22:	cmp    edi,0x10
   1bd25:	jae    0x1bd4e
   1bd27:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd2b:	je     0x1cb47
   1bd31:	mov    eax,DWORD PTR [ebp-0x4]
   1bd34:	movzx  eax,BYTE PTR [eax]
   1bd37:	dec    DWORD PTR [ebp-0x8]
   1bd3a:	mov    ecx,edi
   1bd3c:	shl    eax,cl
   1bd3e:	add    edi,0x8
   1bd41:	add    ebx,eax
   1bd43:	inc    DWORD PTR [ebp-0x4]
   1bd46:	cmp    edi,0x10
   1bd49:	jb     0x1bd27
   1bd4b:	mov    edx,DWORD PTR [ebp+0x8]
   1bd4e:	mov    eax,DWORD PTR [esi+0x20]
   1bd51:	test   eax,eax
   1bd53:	je     0x1bd6b
   1bd55:	mov    ecx,ebx
   1bd57:	and    ecx,0xff
   1bd5d:	mov    DWORD PTR [eax+0x8],ecx
   1bd60:	mov    ecx,DWORD PTR [esi+0x20]
   1bd63:	mov    eax,ebx
   1bd65:	shr    eax,0x8
   1bd68:	mov    DWORD PTR [ecx+0xc],eax
   1bd6b:	test   DWORD PTR [esi+0x10],0x200
   1bd72:	je     0x1bd91
   1bd74:	mov    BYTE PTR [ebp-0x14],bl
   1bd77:	push   0x2
   1bd79:	lea    eax,[ebp-0x14]
   1bd7c:	shr    ebx,0x8
   1bd7f:	push   eax
   1bd80:	mov    BYTE PTR [ebp-0x13],bl
   1bd83:	push   DWORD PTR [esi+0x18]
   1bd86:	call   0x1d9aa
   1bd8b:	mov    edx,DWORD PTR [ebp+0x8]
   1bd8e:	mov    DWORD PTR [esi+0x18],eax
   1bd91:	xor    ebx,ebx
   1bd93:	xor    edi,edi
   1bd95:	mov    DWORD PTR [esi],0x4
   1bd9b:	test   DWORD PTR [esi+0x10],0x400
   1bda2:	je     0x1be09
   1bda4:	cmp    edi,0x10
   1bda7:	jae    0x1bdd0
   1bda9:	cmp    DWORD PTR [ebp-0x8],0x0
   1bdad:	je     0x1cb47
   1bdb3:	mov    eax,DWORD PTR [ebp-0x4]
   1bdb6:	movzx  eax,BYTE PTR [eax]
   1bdb9:	dec    DWORD PTR [ebp-0x8]
   1bdbc:	mov    ecx,edi
   1bdbe:	shl    eax,cl
   1bdc0:	add    edi,0x8
   1bdc3:	add    ebx,eax
   1bdc5:	inc    DWORD PTR [ebp-0x4]
   1bdc8:	cmp    edi,0x10
   1bdcb:	jb     0x1bda9
   1bdcd:	mov    edx,DWORD PTR [ebp+0x8]
   1bdd0:	mov    eax,DWORD PTR [esi+0x20]
   1bdd3:	mov    DWORD PTR [esi+0x40],ebx
   1bdd6:	test   eax,eax
   1bdd8:	je     0x1bddd
   1bdda:	mov    DWORD PTR [eax+0x14],ebx
   1bddd:	test   DWORD PTR [esi+0x10],0x200
   1bde4:	je     0x1be03
   1bde6:	mov    BYTE PTR [ebp-0x14],bl
   1bde9:	push   0x2
   1bdeb:	lea    eax,[ebp-0x14]
   1bdee:	shr    ebx,0x8
   1bdf1:	push   eax
   1bdf2:	mov    BYTE PTR [ebp-0x13],bl
   1bdf5:	push   DWORD PTR [esi+0x18]
   1bdf8:	call   0x1d9aa
   1bdfd:	mov    edx,DWORD PTR [ebp+0x8]
   1be00:	mov    DWORD PTR [esi+0x18],eax
   1be03:	xor    ebx,ebx
   1be05:	xor    edi,edi
   1be07:	jmp    0x1be14
   1be09:	mov    eax,DWORD PTR [esi+0x20]
   1be0c:	test   eax,eax
   1be0e:	je     0x1be14
   1be10:	and    DWORD PTR [eax+0x10],0x0
   1be14:	mov    DWORD PTR [esi],0x5
   1be1a:	test   DWORD PTR [esi+0x10],0x400
   1be21:	je     0x1beab
   1be27:	mov    edx,DWORD PTR [esi+0x40]
   1be2a:	mov    eax,DWORD PTR [ebp-0x8]
   1be2d:	mov    DWORD PTR [ebp-0xc],edx
   1be30:	cmp    edx,eax
   1be32:	jbe    0x1be37
   1be34:	mov    DWORD PTR [ebp-0xc],eax
   1be37:	cmp    DWORD PTR [ebp-0xc],0x0
   1be3b:	je     0x1be9e
   1be3d:	mov    ecx,DWORD PTR [esi+0x20]
   1be40:	test   ecx,ecx
   1be42:	je     0x1be78
   1be44:	mov    eax,DWORD PTR [ecx+0x10]
   1be47:	mov    DWORD PTR [ebp-0x28],eax
   1be4a:	test   eax,eax
   1be4c:	je     0x1be78
   1be4e:	mov    eax,DWORD PTR [ecx+0x14]
   1be51:	mov    ecx,DWORD PTR [ecx+0x18]
   1be54:	sub    eax,edx
   1be56:	mov    edx,DWORD PTR [ebp-0xc]
   1be59:	add    edx,eax
   1be5b:	cmp    edx,ecx
   1be5d:	jbe    0x1be63
   1be5f:	sub    ecx,eax
   1be61:	jmp    0x1be66
   1be63:	mov    ecx,DWORD PTR [ebp-0xc]
   1be66:	push   ecx
   1be67:	mov    ecx,DWORD PTR [ebp-0x28]
   1be6a:	push   DWORD PTR [ebp-0x4]
   1be6d:	add    ecx,eax
   1be6f:	push   ecx
   1be70:	call   0x1da8a
   1be75:	add    esp,0xc
   1be78:	test   DWORD PTR [esi+0x10],0x200
   1be7f:	je     0x1be92
   1be81:	push   DWORD PTR [ebp-0xc]
   1be84:	push   DWORD PTR [ebp-0x4]
   1be87:	push   DWORD PTR [esi+0x18]
   1be8a:	call   0x1d9aa
   1be8f:	mov    DWORD PTR [esi+0x18],eax
   1be92:	mov    eax,DWORD PTR [ebp-0xc]
   1be95:	sub    DWORD PTR [ebp-0x8],eax
   1be98:	add    DWORD PTR [ebp-0x4],eax
   1be9b:	sub    DWORD PTR [esi+0x40],eax
   1be9e:	cmp    DWORD PTR [esi+0x40],0x0
   1bea2:	jne    0x1cb47
   1bea8:	mov    edx,DWORD PTR [ebp+0x8]
   1beab:	and    DWORD PTR [esi+0x40],0x0
   1beaf:	mov    DWORD PTR [esi],0x6
   1beb5:	test   DWORD PTR [esi+0x10],0x800
   1bebc:	je     0x1bf39
   1bebe:	cmp    DWORD PTR [ebp-0x8],0x0
   1bec2:	je     0x1cb47
   1bec8:	xor    ecx,ecx
   1beca:	mov    eax,DWORD PTR [ebp-0x4]
   1becd:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bed1:	inc    ecx
   1bed2:	mov    DWORD PTR [ebp-0xc],ecx
   1bed5:	mov    ecx,DWORD PTR [esi+0x20]
   1bed8:	mov    DWORD PTR [ebp-0x20],eax
   1bedb:	test   ecx,ecx
   1bedd:	je     0x1befa
   1bedf:	mov    edx,DWORD PTR [ecx+0x1c]
   1bee2:	mov    DWORD PTR [ebp-0x28],edx
   1bee5:	test   edx,edx
   1bee7:	je     0x1befa
   1bee9:	mov    edx,DWORD PTR [esi+0x40]
   1beec:	cmp    edx,DWORD PTR [ecx+0x20]
   1beef:	jae    0x1befa
   1bef1:	mov    ecx,DWORD PTR [ebp-0x28]
   1bef4:	mov    BYTE PTR [ecx+edx*1],al
   1bef7:	inc    DWORD PTR [esi+0x40]
   1befa:	test   eax,eax
   1befc:	je     0x1bf06
   1befe:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf01:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf04:	jb     0x1beca
   1bf06:	test   DWORD PTR [esi+0x10],0x200
   1bf0d:	je     0x1bf23
   1bf0f:	push   DWORD PTR [ebp-0xc]
   1bf12:	push   DWORD PTR [ebp-0x4]
   1bf15:	push   DWORD PTR [esi+0x18]
   1bf18:	call   0x1d9aa
   1bf1d:	mov    DWORD PTR [esi+0x18],eax
   1bf20:	mov    eax,DWORD PTR [ebp-0x20]
   1bf23:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf26:	sub    DWORD PTR [ebp-0x8],ecx
   1bf29:	add    DWORD PTR [ebp-0x4],ecx
   1bf2c:	test   eax,eax
   1bf2e:	jne    0x1cb47
   1bf34:	mov    edx,DWORD PTR [ebp+0x8]
   1bf37:	jmp    0x1bf44
   1bf39:	mov    eax,DWORD PTR [esi+0x20]
   1bf3c:	test   eax,eax
   1bf3e:	je     0x1bf44
   1bf40:	and    DWORD PTR [eax+0x1c],0x0
   1bf44:	and    DWORD PTR [esi+0x40],0x0
   1bf48:	mov    DWORD PTR [esi],0x7
   1bf4e:	test   DWORD PTR [esi+0x10],0x1000
   1bf55:	je     0x1bfd2
   1bf57:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf5b:	je     0x1cb47
   1bf61:	xor    ecx,ecx
   1bf63:	mov    eax,DWORD PTR [ebp-0x4]
   1bf66:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf6a:	inc    ecx
   1bf6b:	mov    DWORD PTR [ebp-0xc],ecx
   1bf6e:	mov    ecx,DWORD PTR [esi+0x20]
   1bf71:	mov    DWORD PTR [ebp-0x20],eax
   1bf74:	test   ecx,ecx
   1bf76:	je     0x1bf93
   1bf78:	mov    edx,DWORD PTR [ecx+0x24]
   1bf7b:	mov    DWORD PTR [ebp-0x28],edx
   1bf7e:	test   edx,edx
   1bf80:	je     0x1bf93
   1bf82:	mov    edx,DWORD PTR [esi+0x40]
   1bf85:	cmp    edx,DWORD PTR [ecx+0x28]
   1bf88:	jae    0x1bf93
   1bf8a:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf8d:	mov    BYTE PTR [ecx+edx*1],al
   1bf90:	inc    DWORD PTR [esi+0x40]
   1bf93:	test   eax,eax
   1bf95:	je     0x1bf9f
   1bf97:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf9a:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf9d:	jb     0x1bf63
   1bf9f:	test   DWORD PTR [esi+0x10],0x200
   1bfa6:	je     0x1bfbc
   1bfa8:	push   DWORD PTR [ebp-0xc]
   1bfab:	push   DWORD PTR [ebp-0x4]
   1bfae:	push   DWORD PTR [esi+0x18]
   1bfb1:	call   0x1d9aa
   1bfb6:	mov    DWORD PTR [esi+0x18],eax
   1bfb9:	mov    eax,DWORD PTR [ebp-0x20]
   1bfbc:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfbf:	sub    DWORD PTR [ebp-0x8],ecx
   1bfc2:	add    DWORD PTR [ebp-0x4],ecx
   1bfc5:	test   eax,eax
   1bfc7:	jne    0x1cb47
   1bfcd:	mov    edx,DWORD PTR [ebp+0x8]
   1bfd0:	jmp    0x1bfdd
   1bfd2:	mov    eax,DWORD PTR [esi+0x20]
   1bfd5:	test   eax,eax
   1bfd7:	je     0x1bfdd
   1bfd9:	and    DWORD PTR [eax+0x24],0x0
   1bfdd:	mov    DWORD PTR [esi],0x8
   1bfe3:	test   DWORD PTR [esi+0x10],0x200
   1bfea:	je     0x1c030
   1bfec:	cmp    edi,0x10
   1bfef:	jae    0x1c018
   1bff1:	cmp    DWORD PTR [ebp-0x8],0x0
   1bff5:	je     0x1cb47
   1bffb:	mov    eax,DWORD PTR [ebp-0x4]
   1bffe:	movzx  eax,BYTE PTR [eax]
   1c001:	dec    DWORD PTR [ebp-0x8]
   1c004:	mov    ecx,edi
   1c006:	shl    eax,cl
   1c008:	add    edi,0x8
   1c00b:	add    ebx,eax
   1c00d:	inc    DWORD PTR [ebp-0x4]
   1c010:	cmp    edi,0x10
   1c013:	jb     0x1bff1
   1c015:	mov    edx,DWORD PTR [ebp+0x8]
   1c018:	movzx  eax,WORD PTR [esi+0x18]
   1c01c:	cmp    ebx,eax
   1c01e:	je     0x1c02c
   1c020:	mov    DWORD PTR [edx+0x18],0x1ed1e
   1c027:	jmp    0x1caf3
   1c02c:	xor    ebx,ebx
   1c02e:	xor    edi,edi
   1c030:	mov    eax,DWORD PTR [esi+0x20]
   1c033:	test   eax,eax
   1c035:	je     0x1c04b
   1c037:	mov    edx,DWORD PTR [esi+0x10]
   1c03a:	xor    ecx,ecx
   1c03c:	inc    ecx
   1c03d:	sar    edx,0x9
   1c040:	and    edx,ecx
   1c042:	mov    DWORD PTR [eax+0x2c],edx
   1c045:	mov    eax,DWORD PTR [esi+0x20]
   1c048:	mov    DWORD PTR [eax+0x30],ecx
   1c04b:	xor    eax,eax
   1c04d:	push   eax
   1c04e:	push   eax
   1c04f:	push   eax
   1c050:	call   0x1d9aa
   1c055:	mov    ecx,DWORD PTR [ebp+0x8]
   1c058:	mov    DWORD PTR [esi+0x18],eax
   1c05b:	mov    DWORD PTR [ecx+0x30],eax
   1c05e:	jmp    0x1c75c
   1c063:	cmp    edi,0x20
   1c066:	jae    0x1c08f
   1c068:	cmp    DWORD PTR [ebp-0x8],0x0
   1c06c:	je     0x1cb47
   1c072:	mov    eax,DWORD PTR [ebp-0x4]
   1c075:	movzx  eax,BYTE PTR [eax]
   1c078:	dec    DWORD PTR [ebp-0x8]
   1c07b:	mov    ecx,edi
   1c07d:	shl    eax,cl
   1c07f:	add    edi,0x8
   1c082:	add    ebx,eax
   1c084:	inc    DWORD PTR [ebp-0x4]
   1c087:	cmp    edi,0x20
   1c08a:	jb     0x1c068
   1c08c:	mov    edx,DWORD PTR [ebp+0x8]
   1c08f:	mov    ecx,ebx
   1c091:	mov    eax,0xff00
   1c096:	and    ecx,eax
   1c098:	mov    edi,ebx
   1c09a:	shl    edi,0x10
   1c09d:	add    ecx,edi
   1c09f:	mov    edi,ebx
   1c0a1:	shr    edi,0x8
   1c0a4:	and    edi,eax
   1c0a6:	shl    ecx,0x8
   1c0a9:	shr    ebx,0x18
   1c0ac:	add    ecx,edi
   1c0ae:	lea    eax,[ecx+ebx*1]
   1c0b1:	mov    DWORD PTR [esi+0x18],eax
   1c0b4:	mov    DWORD PTR [edx+0x30],eax
   1c0b7:	xor    ebx,ebx
   1c0b9:	xor    edi,edi
   1c0bb:	mov    DWORD PTR [esi],0xa
   1c0c1:	cmp    DWORD PTR [esi+0xc],0x0
   1c0c5:	je     0x1cb09
   1c0cb:	xor    eax,eax
   1c0cd:	push   eax
   1c0ce:	push   eax
   1c0cf:	push   eax
   1c0d0:	call   0x1d508
   1c0d5:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0d8:	mov    DWORD PTR [esi+0x18],eax
   1c0db:	mov    DWORD PTR [ecx+0x30],eax
   1c0de:	mov    DWORD PTR [esi],0xb
   1c0e4:	cmp    DWORD PTR [ebp+0xc],0x5
   1c0e8:	je     0x1cb47
   1c0ee:	mov    edx,DWORD PTR [ebp+0x8]
   1c0f1:	cmp    DWORD PTR [esi+0x4],0x0
   1c0f5:	je     0x1c10b
   1c0f7:	mov    ecx,edi
   1c0f9:	and    ecx,0x7
   1c0fc:	shr    ebx,cl
   1c0fe:	sub    edi,ecx
   1c100:	mov    DWORD PTR [esi],0x18
   1c106:	jmp    0x1caf9
   1c10b:	cmp    edi,0x3
   1c10e:	jae    0x1c137
   1c110:	cmp    DWORD PTR [ebp-0x8],0x0
   1c114:	je     0x1cb47
   1c11a:	mov    eax,DWORD PTR [ebp-0x4]
   1c11d:	movzx  eax,BYTE PTR [eax]
   1c120:	dec    DWORD PTR [ebp-0x8]
   1c123:	mov    ecx,edi
   1c125:	shl    eax,cl
   1c127:	add    edi,0x8
   1c12a:	add    ebx,eax
   1c12c:	inc    DWORD PTR [ebp-0x4]
   1c12f:	cmp    edi,0x3
   1c132:	jb     0x1c110
   1c134:	mov    edx,DWORD PTR [ebp+0x8]
   1c137:	mov    eax,ebx
   1c139:	and    eax,0x1
   1c13c:	shr    ebx,1
   1c13e:	mov    DWORD PTR [esi+0x4],eax
   1c141:	mov    eax,ebx
   1c143:	and    eax,0x3
   1c146:	dec    edi
   1c147:	sub    eax,0x0
   1c14a:	je     0x1c190
   1c14c:	dec    eax
   1c14d:	je     0x1c16c
   1c14f:	dec    eax
   1c150:	je     0x1c164
   1c152:	dec    eax
   1c153:	jne    0x1c196
   1c155:	mov    DWORD PTR [edx+0x18],0x1ed0a
   1c15c:	mov    DWORD PTR [esi],0x1b
   1c162:	jmp    0x1c196
   1c164:	mov    DWORD PTR [esi],0xf
   1c16a:	jmp    0x1c196
   1c16c:	mov    DWORD PTR [esi+0x4c],0x74888
   1c173:	mov    DWORD PTR [esi+0x54],0x9
   1c17a:	mov    DWORD PTR [esi+0x50],0x75088
   1c181:	mov    DWORD PTR [esi+0x58],0x5
   1c188:	mov    DWORD PTR [esi],0x12
   1c18e:	jmp    0x1c196
   1c190:	mov    DWORD PTR [esi],0xd
   1c196:	shr    ebx,0x2
   1c199:	dec    edi
   1c19a:	dec    edi
   1c19b:	jmp    0x1caf9
   1c1a0:	mov    ecx,edi
   1c1a2:	and    ecx,0x7
   1c1a5:	sub    edi,ecx
   1c1a7:	shr    ebx,cl
   1c1a9:	cmp    edi,0x20
   1c1ac:	jae    0x1c1d5
   1c1ae:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1b2:	je     0x1cb47
   1c1b8:	mov    eax,DWORD PTR [ebp-0x4]
   1c1bb:	movzx  eax,BYTE PTR [eax]
   1c1be:	dec    DWORD PTR [ebp-0x8]
   1c1c1:	mov    ecx,edi
   1c1c3:	shl    eax,cl
   1c1c5:	add    edi,0x8
   1c1c8:	add    ebx,eax
   1c1ca:	inc    DWORD PTR [ebp-0x4]
   1c1cd:	cmp    edi,0x20
   1c1d0:	jb     0x1c1ae
   1c1d2:	mov    edx,DWORD PTR [ebp+0x8]
   1c1d5:	mov    ecx,ebx
   1c1d7:	mov    eax,ebx
   1c1d9:	not    ecx
   1c1db:	and    eax,0xffff
   1c1e0:	shr    ecx,0x10
   1c1e3:	cmp    eax,ecx
   1c1e5:	je     0x1c1f3
   1c1e7:	mov    DWORD PTR [edx+0x18],0x1ecec
   1c1ee:	jmp    0x1caf3
   1c1f3:	xor    ebx,ebx
   1c1f5:	mov    DWORD PTR [esi+0x40],eax
   1c1f8:	xor    edi,edi
   1c1fa:	mov    DWORD PTR [esi],0xe
   1c200:	mov    eax,DWORD PTR [esi+0x40]
   1c203:	mov    DWORD PTR [ebp-0xc],eax
   1c206:	test   eax,eax
   1c208:	je     0x1c75c
   1c20e:	mov    eax,DWORD PTR [ebp-0x8]
   1c211:	cmp    DWORD PTR [ebp-0xc],eax
   1c214:	jbe    0x1c219
   1c216:	mov    DWORD PTR [ebp-0xc],eax
   1c219:	mov    eax,DWORD PTR [ebp-0x10]
   1c21c:	cmp    DWORD PTR [ebp-0xc],eax
   1c21f:	jbe    0x1c224
   1c221:	mov    DWORD PTR [ebp-0xc],eax
   1c224:	cmp    DWORD PTR [ebp-0xc],0x0
   1c228:	je     0x1cb47
   1c22e:	push   DWORD PTR [ebp-0xc]
   1c231:	push   DWORD PTR [ebp-0x4]
   1c234:	push   DWORD PTR [ebp-0x18]
   1c237:	call   0x1da8a
   1c23c:	mov    eax,DWORD PTR [ebp-0xc]
   1c23f:	sub    DWORD PTR [ebp-0x8],eax
   1c242:	add    DWORD PTR [ebp-0x4],eax
   1c245:	sub    DWORD PTR [ebp-0x10],eax
   1c248:	add    DWORD PTR [ebp-0x18],eax
   1c24b:	add    esp,0xc
   1c24e:	sub    DWORD PTR [esi+0x40],eax
   1c251:	jmp    0x1caf9
   1c256:	cmp    edi,0xe
   1c259:	jae    0x1c282
   1c25b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c25f:	je     0x1cb47
   1c265:	mov    eax,DWORD PTR [ebp-0x4]
   1c268:	movzx  eax,BYTE PTR [eax]
   1c26b:	dec    DWORD PTR [ebp-0x8]
   1c26e:	mov    ecx,edi
   1c270:	shl    eax,cl
   1c272:	add    edi,0x8
   1c275:	add    ebx,eax
   1c277:	inc    DWORD PTR [ebp-0x4]
   1c27a:	cmp    edi,0xe
   1c27d:	jb     0x1c25b
   1c27f:	mov    edx,DWORD PTR [ebp+0x8]
   1c282:	mov    eax,ebx
   1c284:	and    eax,0x1f
   1c287:	add    eax,0x101
   1c28c:	mov    DWORD PTR [esi+0x60],eax
   1c28f:	shr    ebx,0x5
   1c292:	mov    eax,ebx
   1c294:	and    eax,0x1f
   1c297:	inc    eax
   1c298:	shr    ebx,0x5
   1c29b:	mov    DWORD PTR [esi+0x64],eax
   1c29e:	mov    eax,ebx
   1c2a0:	and    eax,0xf
   1c2a3:	add    eax,0x4
   1c2a6:	shr    ebx,0x4
   1c2a9:	sub    edi,0xe
   1c2ac:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2b3:	mov    DWORD PTR [esi+0x5c],eax
   1c2b6:	ja     0x1c2ca
   1c2b8:	cmp    DWORD PTR [esi+0x64],0x1e
   1c2bc:	ja     0x1c2ca
   1c2be:	and    DWORD PTR [esi+0x68],0x0
   1c2c2:	mov    DWORD PTR [esi],0x10
   1c2c8:	jmp    0x1c318
   1c2ca:	mov    DWORD PTR [edx+0x18],0x1ecc8
   1c2d1:	jmp    0x1caf3
   1c2d6:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2da:	je     0x1cb47
   1c2e0:	mov    eax,DWORD PTR [ebp-0x4]
   1c2e3:	movzx  eax,BYTE PTR [eax]
   1c2e6:	dec    DWORD PTR [ebp-0x8]
   1c2e9:	mov    ecx,edi
   1c2eb:	shl    eax,cl
   1c2ed:	add    ebx,eax
   1c2ef:	inc    DWORD PTR [ebp-0x4]
   1c2f2:	add    edi,0x8
   1c2f5:	cmp    edi,0x3
   1c2f8:	jb     0x1c2d6
   1c2fa:	mov    ecx,DWORD PTR [esi+0x68]
   1c2fd:	movzx  ecx,WORD PTR [ecx*2+0x75108]
   1c305:	mov    eax,ebx
   1c307:	and    eax,0x7
   1c30a:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c30f:	inc    DWORD PTR [esi+0x68]
   1c312:	shr    ebx,0x3
   1c315:	sub    edi,0x3
   1c318:	mov    eax,DWORD PTR [esi+0x68]
   1c31b:	cmp    eax,DWORD PTR [esi+0x5c]
   1c31e:	jb     0x1c2f5
   1c320:	jmp    0x1c337
   1c322:	mov    eax,DWORD PTR [esi+0x68]
   1c325:	movzx  eax,WORD PTR [eax*2+0x75108]
   1c32d:	xor    ecx,ecx
   1c32f:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c334:	inc    DWORD PTR [esi+0x68]
   1c337:	cmp    DWORD PTR [esi+0x68],0x13
   1c33b:	jb     0x1c322
   1c33d:	lea    eax,[esi+0x530]
   1c343:	lea    ecx,[esi+0x6c]
   1c346:	mov    DWORD PTR [ecx],eax
   1c348:	mov    DWORD PTR [esi+0x4c],eax
   1c34b:	lea    edx,[esi+0x2f0]
   1c351:	push   edx
   1c352:	lea    eax,[esi+0x54]
   1c355:	push   eax
   1c356:	push   ecx
   1c357:	mov    DWORD PTR [eax],0x7
   1c35d:	push   0x13
   1c35f:	lea    eax,[esi+0x70]
   1c362:	push   eax
   1c363:	push   0x0
   1c365:	call   0x1d102
   1c36a:	mov    DWORD PTR [ebp-0x24],eax
   1c36d:	test   eax,eax
   1c36f:	je     0x1c380
   1c371:	mov    eax,DWORD PTR [ebp+0x8]
   1c374:	mov    DWORD PTR [eax+0x18],0x1ecae
   1c37b:	jmp    0x1caf3
   1c380:	and    DWORD PTR [esi+0x68],0x0
   1c384:	mov    DWORD PTR [esi],0x11
   1c38a:	jmp    0x1c586
   1c38f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c393:	je     0x1cb47
   1c399:	mov    eax,DWORD PTR [ebp-0x4]
   1c39c:	movzx  eax,BYTE PTR [eax]
   1c39f:	dec    DWORD PTR [ebp-0x8]
   1c3a2:	mov    ecx,edi
   1c3a4:	shl    eax,cl
   1c3a6:	add    ebx,eax
   1c3a8:	inc    DWORD PTR [ebp-0x4]
   1c3ab:	add    edi,0x8
   1c3ae:	mov    ecx,DWORD PTR [esi+0x54]
   1c3b1:	xor    eax,eax
   1c3b3:	inc    eax
   1c3b4:	shl    eax,cl
   1c3b6:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3b9:	dec    eax
   1c3ba:	and    eax,ebx
   1c3bc:	mov    eax,DWORD PTR [ecx+eax*4]
   1c3bf:	mov    ecx,eax
   1c3c1:	shr    ecx,0x8
   1c3c4:	movzx  ecx,cl
   1c3c7:	mov    DWORD PTR [ebp-0x20],eax
   1c3ca:	cmp    ecx,edi
   1c3cc:	ja     0x1c38f
   1c3ce:	mov    ecx,eax
   1c3d0:	shr    ecx,0x10
   1c3d3:	cmp    cx,0x10
   1c3d7:	jae    0x1c424
   1c3d9:	mov    ecx,eax
   1c3db:	shr    ecx,0x8
   1c3de:	movzx  ecx,cl
   1c3e1:	jmp    0x1c405
   1c3e3:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3e7:	je     0x1cb47
   1c3ed:	mov    ecx,DWORD PTR [ebp-0x4]
   1c3f0:	movzx  edx,BYTE PTR [ecx]
   1c3f3:	dec    DWORD PTR [ebp-0x8]
   1c3f6:	mov    ecx,edi
   1c3f8:	shl    edx,cl
   1c3fa:	movzx  ecx,ah
   1c3fd:	add    ebx,edx
   1c3ff:	inc    DWORD PTR [ebp-0x4]
   1c402:	add    edi,0x8
   1c405:	cmp    edi,ecx
   1c407:	jb     0x1c3e3
   1c409:	movzx  ecx,ah
   1c40c:	mov    eax,DWORD PTR [esi+0x68]
   1c40f:	shr    ebx,cl
   1c411:	sub    edi,ecx
   1c413:	mov    cx,WORD PTR [ebp-0x1e]
   1c417:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c41c:	inc    DWORD PTR [esi+0x68]
   1c41f:	jmp    0x1c586
   1c424:	cmp    WORD PTR [ebp-0x1e],0x10
   1c429:	jne    0x1c481
   1c42b:	movzx  eax,ah
   1c42e:	jmp    0x1c44f
   1c430:	cmp    DWORD PTR [ebp-0x8],0x0
   1c434:	je     0x1cb47
   1c43a:	mov    ecx,DWORD PTR [ebp-0x4]
   1c43d:	movzx  edx,BYTE PTR [ecx]
   1c440:	dec    DWORD PTR [ebp-0x8]
   1c443:	mov    ecx,edi
   1c445:	shl    edx,cl
   1c447:	add    ebx,edx
   1c449:	inc    DWORD PTR [ebp-0x4]
   1c44c:	add    edi,0x8
   1c44f:	lea    ecx,[eax+0x2]
   1c452:	cmp    edi,ecx
   1c454:	jb     0x1c430
   1c456:	mov    ecx,eax
   1c458:	sub    edi,eax
   1c45a:	mov    eax,DWORD PTR [esi+0x68]
   1c45d:	shr    ebx,cl
   1c45f:	test   eax,eax
   1c461:	je     0x1c597
   1c467:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c46c:	mov    DWORD PTR [ebp-0x20],eax
   1c46f:	mov    eax,ebx
   1c471:	and    eax,0x3
   1c474:	add    eax,0x3
   1c477:	shr    ebx,0x2
   1c47a:	dec    edi
   1c47b:	dec    edi
   1c47c:	jmp    0x1c506
   1c481:	cmp    WORD PTR [ebp-0x1e],0x11
   1c486:	movzx  edx,ah
   1c489:	jne    0x1c4e5
   1c48b:	jmp    0x1c4ac
   1c48d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c491:	je     0x1cb47
   1c497:	mov    eax,DWORD PTR [ebp-0x4]
   1c49a:	movzx  eax,BYTE PTR [eax]
   1c49d:	dec    DWORD PTR [ebp-0x8]
   1c4a0:	mov    ecx,edi
   1c4a2:	shl    eax,cl
   1c4a4:	add    ebx,eax
   1c4a6:	inc    DWORD PTR [ebp-0x4]
   1c4a9:	add    edi,0x8
   1c4ac:	lea    eax,[edx+0x3]
   1c4af:	cmp    edi,eax
   1c4b1:	jb     0x1c48d
   1c4b3:	mov    ecx,edx
   1c4b5:	shr    ebx,cl
   1c4b7:	push   0xfffffffd
   1c4b9:	mov    eax,ebx
   1c4bb:	and    eax,0x7
   1c4be:	add    eax,0x3
   1c4c1:	shr    ebx,0x3
   1c4c4:	jmp    0x1c4fd
   1c4c6:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4ca:	je     0x1cb47
   1c4d0:	mov    eax,DWORD PTR [ebp-0x4]
   1c4d3:	movzx  eax,BYTE PTR [eax]
   1c4d6:	dec    DWORD PTR [ebp-0x8]
   1c4d9:	mov    ecx,edi
   1c4db:	shl    eax,cl
   1c4dd:	add    ebx,eax
   1c4df:	inc    DWORD PTR [ebp-0x4]
   1c4e2:	add    edi,0x8
   1c4e5:	lea    eax,[edx+0x7]
   1c4e8:	cmp    edi,eax
   1c4ea:	jb     0x1c4c6
   1c4ec:	mov    ecx,edx
   1c4ee:	shr    ebx,cl
   1c4f0:	push   0xfffffff9
   1c4f2:	mov    eax,ebx
   1c4f4:	and    eax,0x7f
   1c4f7:	add    eax,0xb
   1c4fa:	shr    ebx,0x7
   1c4fd:	and    DWORD PTR [ebp-0x20],0x0
   1c501:	pop    ecx
   1c502:	sub    ecx,edx
   1c504:	add    edi,ecx
   1c506:	mov    ecx,DWORD PTR [esi+0x64]
   1c509:	mov    edx,DWORD PTR [esi+0x68]
   1c50c:	add    ecx,DWORD PTR [esi+0x60]
   1c50f:	add    edx,eax
   1c511:	cmp    edx,ecx
   1c513:	jbe    0x1c582
   1c515:	mov    eax,DWORD PTR [ebp+0x8]
   1c518:	mov    DWORD PTR [eax+0x18],0x1ec94
   1c51f:	mov    DWORD PTR [esi],0x1b
   1c525:	cmp    DWORD PTR [esi],0x1b
   1c528:	je     0x1caf9
   1c52e:	lea    eax,[esi+0x530]
   1c534:	lea    ecx,[esi+0x6c]
   1c537:	mov    DWORD PTR [ecx],eax
   1c539:	mov    DWORD PTR [esi+0x4c],eax
   1c53c:	lea    edx,[esi+0x2f0]
   1c542:	push   edx
   1c543:	lea    eax,[esi+0x54]
   1c546:	push   eax
   1c547:	push   ecx
   1c548:	push   DWORD PTR [esi+0x60]
   1c54b:	mov    DWORD PTR [eax],0x9
   1c551:	lea    eax,[esi+0x70]
   1c554:	push   eax
   1c555:	push   0x1
   1c557:	call   0x1d102
   1c55c:	mov    DWORD PTR [ebp-0x24],eax
   1c55f:	test   eax,eax
   1c561:	je     0x1c5a6
   1c563:	mov    eax,DWORD PTR [ebp+0x8]
   1c566:	mov    DWORD PTR [eax+0x18],0x1ec78
   1c56d:	jmp    0x1caf3
   1c572:	mov    ecx,DWORD PTR [esi+0x68]
   1c575:	mov    dx,WORD PTR [ebp-0x20]
   1c579:	dec    eax
   1c57a:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c57f:	inc    DWORD PTR [esi+0x68]
   1c582:	test   eax,eax
   1c584:	jne    0x1c572
   1c586:	mov    eax,DWORD PTR [esi+0x64]
   1c589:	add    eax,DWORD PTR [esi+0x60]
   1c58c:	cmp    DWORD PTR [esi+0x68],eax
   1c58f:	jb     0x1c3ae
   1c595:	jmp    0x1c525
   1c597:	mov    eax,DWORD PTR [ebp+0x8]
   1c59a:	mov    DWORD PTR [eax+0x18],0x1ec94
   1c5a1:	jmp    0x1caf3
   1c5a6:	lea    ecx,[esi+0x6c]
   1c5a9:	mov    eax,DWORD PTR [ecx]
   1c5ab:	mov    DWORD PTR [esi+0x50],eax
   1c5ae:	lea    edx,[esi+0x2f0]
   1c5b4:	push   edx
   1c5b5:	lea    eax,[esi+0x58]
   1c5b8:	push   eax
   1c5b9:	push   ecx
   1c5ba:	push   DWORD PTR [esi+0x64]
   1c5bd:	mov    DWORD PTR [eax],0x6
   1c5c3:	mov    eax,DWORD PTR [esi+0x60]
   1c5c6:	lea    eax,[esi+eax*2+0x70]
   1c5ca:	push   eax
   1c5cb:	push   0x2
   1c5cd:	call   0x1d102
   1c5d2:	mov    DWORD PTR [ebp-0x24],eax
   1c5d5:	test   eax,eax
   1c5d7:	je     0x1c5e8
   1c5d9:	mov    eax,DWORD PTR [ebp+0x8]
   1c5dc:	mov    DWORD PTR [eax+0x18],0x1ec62
   1c5e3:	jmp    0x1caf3
   1c5e8:	mov    DWORD PTR [esi],0x12
   1c5ee:	cmp    DWORD PTR [ebp-0x8],0x6
   1c5f2:	jb     0x1c64b
   1c5f4:	cmp    DWORD PTR [ebp-0x10],0x102
   1c5fb:	jb     0x1c64b
   1c5fd:	mov    eax,DWORD PTR [ebp+0x8]
   1c600:	mov    ecx,DWORD PTR [ebp-0x18]
   1c603:	push   DWORD PTR [ebp-0x1c]
   1c606:	mov    DWORD PTR [eax+0xc],ecx
   1c609:	mov    ecx,DWORD PTR [ebp-0x10]
   1c60c:	mov    DWORD PTR [eax+0x10],ecx
   1c60f:	mov    ecx,DWORD PTR [ebp-0x4]
   1c612:	mov    DWORD PTR [eax],ecx
   1c614:	mov    ecx,DWORD PTR [ebp-0x8]
   1c617:	mov    DWORD PTR [eax+0x4],ecx
   1c61a:	push   eax
   1c61b:	mov    DWORD PTR [esi+0x38],ebx
   1c61e:	mov    DWORD PTR [esi+0x3c],edi
   1c621:	call   0x1cd1c
   1c626:	mov    eax,DWORD PTR [ebp+0x8]
   1c629:	mov    ecx,DWORD PTR [eax+0xc]
   1c62c:	mov    ebx,DWORD PTR [esi+0x38]
   1c62f:	mov    edi,DWORD PTR [esi+0x3c]
   1c632:	mov    DWORD PTR [ebp-0x18],ecx
   1c635:	mov    ecx,DWORD PTR [eax+0x10]
   1c638:	mov    DWORD PTR [ebp-0x10],ecx
   1c63b:	mov    ecx,DWORD PTR [eax]
   1c63d:	mov    eax,DWORD PTR [eax+0x4]
   1c640:	mov    DWORD PTR [ebp-0x4],ecx
   1c643:	mov    DWORD PTR [ebp-0x8],eax
   1c646:	jmp    0x1caf9
   1c64b:	mov    ecx,DWORD PTR [esi+0x54]
   1c64e:	mov    eax,DWORD PTR [esi+0x4c]
   1c651:	xor    edx,edx
   1c653:	inc    edx
   1c654:	shl    edx,cl
   1c656:	dec    edx
   1c657:	and    edx,ebx
   1c659:	mov    eax,DWORD PTR [eax+edx*4]
   1c65c:	jmp    0x1c68e
   1c65e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c662:	je     0x1cb47
   1c668:	mov    eax,DWORD PTR [ebp-0x4]
   1c66b:	movzx  eax,BYTE PTR [eax]
   1c66e:	dec    DWORD PTR [ebp-0x8]
   1c671:	mov    ecx,edi
   1c673:	shl    eax,cl
   1c675:	mov    ecx,DWORD PTR [esi+0x54]
   1c678:	add    edi,0x8
   1c67b:	add    ebx,eax
   1c67d:	inc    DWORD PTR [ebp-0x4]
   1c680:	xor    eax,eax
   1c682:	inc    eax
   1c683:	shl    eax,cl
   1c685:	mov    ecx,DWORD PTR [esi+0x4c]
   1c688:	dec    eax
   1c689:	and    eax,ebx
   1c68b:	mov    eax,DWORD PTR [ecx+eax*4]
   1c68e:	mov    ecx,eax
   1c690:	shr    ecx,0x8
   1c693:	movzx  ecx,cl
   1c696:	cmp    ecx,edi
   1c698:	ja     0x1c65e
   1c69a:	test   al,al
   1c69c:	je     0x1c735
   1c6a2:	test   al,0xf0
   1c6a4:	jne    0x1c735
   1c6aa:	mov    DWORD PTR [ebp-0xc],eax
   1c6ad:	shr    DWORD PTR [ebp-0xc],0x8
   1c6b1:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6b5:	mov    DWORD PTR [ebp-0x28],edx
   1c6b8:	movzx  ecx,al
   1c6bb:	add    ecx,edx
   1c6bd:	xor    edx,edx
   1c6bf:	inc    edx
   1c6c0:	shl    edx,cl
   1c6c2:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6c5:	mov    DWORD PTR [ebp-0x20],eax
   1c6c8:	shr    eax,0x10
   1c6cb:	dec    edx
   1c6cc:	and    edx,ebx
   1c6ce:	shr    edx,cl
   1c6d0:	add    edx,eax
   1c6d2:	mov    eax,DWORD PTR [esi+0x4c]
   1c6d5:	mov    eax,DWORD PTR [eax+edx*4]
   1c6d8:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6dc:	jmp    0x1c71f
   1c6de:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6e2:	je     0x1cb47
   1c6e8:	mov    eax,DWORD PTR [ebp-0x4]
   1c6eb:	movzx  eax,BYTE PTR [eax]
   1c6ee:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c6f2:	dec    DWORD PTR [ebp-0x8]
   1c6f5:	mov    ecx,edi
   1c6f7:	shl    eax,cl
   1c6f9:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c6fd:	add    ebx,eax
   1c6ff:	inc    DWORD PTR [ebp-0x4]
   1c702:	xor    eax,eax
   1c704:	add    ecx,edx
   1c706:	inc    eax
   1c707:	shl    eax,cl
   1c709:	add    edi,0x8
   1c70c:	mov    ecx,edx
   1c70e:	dec    eax
   1c70f:	and    eax,ebx
   1c711:	shr    eax,cl
   1c713:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c717:	add    eax,ecx
   1c719:	mov    ecx,DWORD PTR [esi+0x4c]
   1c71c:	mov    eax,DWORD PTR [ecx+eax*4]
   1c71f:	mov    ecx,eax
   1c721:	shr    ecx,0x8
   1c724:	movzx  ecx,cl
   1c727:	add    ecx,edx
   1c729:	cmp    ecx,edi
   1c72b:	ja     0x1c6de
   1c72d:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c731:	shr    ebx,cl
   1c733:	sub    edi,ecx
   1c735:	mov    ecx,eax
   1c737:	shr    ecx,0x8
   1c73a:	movzx  ecx,cl
   1c73d:	shr    ebx,cl
   1c73f:	sub    edi,ecx
   1c741:	mov    ecx,eax
   1c743:	shr    ecx,0x10
   1c746:	mov    DWORD PTR [esi+0x40],ecx
   1c749:	test   al,al
   1c74b:	jne    0x1c758
   1c74d:	mov    DWORD PTR [esi],0x17
   1c753:	jmp    0x1caf9
   1c758:	test   al,0x20
   1c75a:	je     0x1c767
   1c75c:	mov    DWORD PTR [esi],0xb
   1c762:	jmp    0x1caf9
   1c767:	test   al,0x40
   1c769:	je     0x1c77a
   1c76b:	mov    eax,DWORD PTR [ebp+0x8]
   1c76e:	mov    DWORD PTR [eax+0x18],0x1ec46
   1c775:	jmp    0x1caf3
   1c77a:	movzx  eax,al
   1c77d:	and    eax,0xf
   1c780:	mov    DWORD PTR [esi+0x48],eax
   1c783:	mov    DWORD PTR [esi],0x13
   1c789:	mov    eax,DWORD PTR [esi+0x48]
   1c78c:	test   eax,eax
   1c78e:	je     0x1c7c9
   1c790:	cmp    edi,eax
   1c792:	jae    0x1c7b8
   1c794:	cmp    DWORD PTR [ebp-0x8],0x0
   1c798:	je     0x1cb47
   1c79e:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7a1:	movzx  edx,BYTE PTR [ecx]
   1c7a4:	dec    DWORD PTR [ebp-0x8]
   1c7a7:	mov    ecx,edi
   1c7a9:	shl    edx,cl
   1c7ab:	add    edi,0x8
   1c7ae:	add    ebx,edx
   1c7b0:	inc    DWORD PTR [ebp-0x4]
   1c7b3:	cmp    edi,DWORD PTR [esi+0x48]
   1c7b6:	jb     0x1c794
   1c7b8:	xor    edx,edx
   1c7ba:	inc    edx
   1c7bb:	mov    ecx,eax
   1c7bd:	shl    edx,cl
   1c7bf:	dec    edx
   1c7c0:	and    edx,ebx
   1c7c2:	add    DWORD PTR [esi+0x40],edx
   1c7c5:	shr    ebx,cl
   1c7c7:	sub    edi,eax
   1c7c9:	mov    DWORD PTR [esi],0x14
   1c7cf:	mov    ecx,DWORD PTR [esi+0x58]
   1c7d2:	mov    eax,DWORD PTR [esi+0x50]
   1c7d5:	xor    edx,edx
   1c7d7:	inc    edx
   1c7d8:	shl    edx,cl
   1c7da:	dec    edx
   1c7db:	and    edx,ebx
   1c7dd:	mov    eax,DWORD PTR [eax+edx*4]
   1c7e0:	jmp    0x1c812
   1c7e2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7e6:	je     0x1cb47
   1c7ec:	mov    eax,DWORD PTR [ebp-0x4]
   1c7ef:	movzx  eax,BYTE PTR [eax]
   1c7f2:	dec    DWORD PTR [ebp-0x8]
   1c7f5:	mov    ecx,edi
   1c7f7:	shl    eax,cl
   1c7f9:	mov    ecx,DWORD PTR [esi+0x58]
   1c7fc:	add    edi,0x8
   1c7ff:	add    ebx,eax
   1c801:	inc    DWORD PTR [ebp-0x4]
   1c804:	xor    eax,eax
   1c806:	inc    eax
   1c807:	shl    eax,cl
   1c809:	mov    ecx,DWORD PTR [esi+0x50]
   1c80c:	dec    eax
   1c80d:	and    eax,ebx
   1c80f:	mov    eax,DWORD PTR [ecx+eax*4]
   1c812:	mov    ecx,eax
   1c814:	shr    ecx,0x8
   1c817:	movzx  ecx,cl
   1c81a:	cmp    ecx,edi
   1c81c:	ja     0x1c7e2
   1c81e:	test   al,0xf0
   1c820:	jne    0x1c8b1
   1c826:	mov    DWORD PTR [ebp-0xc],eax
   1c829:	shr    DWORD PTR [ebp-0xc],0x8
   1c82d:	movzx  edx,BYTE PTR [ebp-0xc]
   1c831:	mov    DWORD PTR [ebp-0x28],edx
   1c834:	movzx  ecx,al
   1c837:	add    ecx,edx
   1c839:	xor    edx,edx
   1c83b:	inc    edx
   1c83c:	shl    edx,cl
   1c83e:	mov    ecx,DWORD PTR [ebp-0x28]
   1c841:	mov    DWORD PTR [ebp-0x20],eax
   1c844:	shr    eax,0x10
   1c847:	dec    edx
   1c848:	and    edx,ebx
   1c84a:	shr    edx,cl
   1c84c:	add    edx,eax
   1c84e:	mov    eax,DWORD PTR [esi+0x50]
   1c851:	mov    eax,DWORD PTR [eax+edx*4]
   1c854:	movzx  edx,BYTE PTR [ebp-0xc]
   1c858:	jmp    0x1c89b
   1c85a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c85e:	je     0x1cb47
   1c864:	mov    eax,DWORD PTR [ebp-0x4]
   1c867:	movzx  eax,BYTE PTR [eax]
   1c86a:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c86e:	dec    DWORD PTR [ebp-0x8]
   1c871:	mov    ecx,edi
   1c873:	shl    eax,cl
   1c875:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c879:	add    ebx,eax
   1c87b:	inc    DWORD PTR [ebp-0x4]
   1c87e:	xor    eax,eax
   1c880:	add    ecx,edx
   1c882:	inc    eax
   1c883:	shl    eax,cl
   1c885:	add    edi,0x8
   1c888:	mov    ecx,edx
   1c88a:	dec    eax
   1c88b:	and    eax,ebx
   1c88d:	shr    eax,cl
   1c88f:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c893:	add    eax,ecx
   1c895:	mov    ecx,DWORD PTR [esi+0x50]
   1c898:	mov    eax,DWORD PTR [ecx+eax*4]
   1c89b:	mov    ecx,eax
   1c89d:	shr    ecx,0x8
   1c8a0:	movzx  ecx,cl
   1c8a3:	add    ecx,edx
   1c8a5:	cmp    ecx,edi
   1c8a7:	ja     0x1c85a
   1c8a9:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8ad:	shr    ebx,cl
   1c8af:	sub    edi,ecx
   1c8b1:	mov    ecx,eax
   1c8b3:	shr    ecx,0x8
   1c8b6:	movzx  ecx,cl
   1c8b9:	shr    ebx,cl
   1c8bb:	sub    edi,ecx
   1c8bd:	test   al,0x40
   1c8bf:	je     0x1c8d0
   1c8c1:	mov    eax,DWORD PTR [ebp+0x8]
   1c8c4:	mov    DWORD PTR [eax+0x18],0x1ec30
   1c8cb:	jmp    0x1caf3
   1c8d0:	mov    edx,DWORD PTR [ebp+0x8]
   1c8d3:	mov    ecx,eax
   1c8d5:	movzx  eax,al
   1c8d8:	shr    ecx,0x10
   1c8db:	and    eax,0xf
   1c8de:	mov    DWORD PTR [esi+0x44],ecx
   1c8e1:	mov    DWORD PTR [esi+0x48],eax
   1c8e4:	mov    DWORD PTR [esi],0x15
   1c8ea:	mov    eax,DWORD PTR [esi+0x48]
   1c8ed:	test   eax,eax
   1c8ef:	je     0x1c92e
   1c8f1:	cmp    edi,eax
   1c8f3:	jae    0x1c91c
   1c8f5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8f9:	je     0x1cb47
   1c8ff:	mov    eax,DWORD PTR [ebp-0x4]
   1c902:	movzx  eax,BYTE PTR [eax]
   1c905:	dec    DWORD PTR [ebp-0x8]
   1c908:	mov    ecx,edi
   1c90a:	shl    eax,cl
   1c90c:	add    edi,0x8
   1c90f:	add    ebx,eax
   1c911:	inc    DWORD PTR [ebp-0x4]
   1c914:	cmp    edi,DWORD PTR [esi+0x48]
   1c917:	jb     0x1c8f5
   1c919:	mov    edx,DWORD PTR [ebp+0x8]
   1c91c:	mov    ecx,DWORD PTR [esi+0x48]
   1c91f:	xor    eax,eax
   1c921:	inc    eax
   1c922:	shl    eax,cl
   1c924:	dec    eax
   1c925:	and    eax,ebx
   1c927:	add    DWORD PTR [esi+0x44],eax
   1c92a:	shr    ebx,cl
   1c92c:	sub    edi,ecx
   1c92e:	mov    eax,DWORD PTR [esi+0x2c]
   1c931:	sub    eax,DWORD PTR [ebp-0x10]
   1c934:	add    eax,DWORD PTR [ebp-0x1c]
   1c937:	cmp    DWORD PTR [esi+0x44],eax
   1c93a:	jbe    0x1c948
   1c93c:	mov    DWORD PTR [edx+0x18],0x1ec12
   1c943:	jmp    0x1caf3
   1c948:	mov    DWORD PTR [esi],0x16
   1c94e:	cmp    DWORD PTR [ebp-0x10],0x0
   1c952:	je     0x1cb47
   1c958:	mov    eax,DWORD PTR [ebp-0x1c]
   1c95b:	sub    eax,DWORD PTR [ebp-0x10]
   1c95e:	mov    ecx,DWORD PTR [esi+0x44]
   1c961:	cmp    ecx,eax
   1c963:	jbe    0x1c992
   1c965:	sub    ecx,eax
   1c967:	mov    eax,DWORD PTR [esi+0x34]
   1c96a:	mov    DWORD PTR [ebp-0xc],ecx
   1c96d:	mov    ecx,DWORD PTR [esi+0x30]
   1c970:	cmp    DWORD PTR [ebp-0xc],ecx
   1c973:	jbe    0x1c980
   1c975:	add    eax,DWORD PTR [esi+0x28]
   1c978:	sub    DWORD PTR [ebp-0xc],ecx
   1c97b:	sub    eax,DWORD PTR [ebp-0xc]
   1c97e:	jmp    0x1c985
   1c980:	sub    eax,DWORD PTR [ebp-0xc]
   1c983:	add    eax,ecx
   1c985:	mov    ecx,DWORD PTR [esi+0x40]
   1c988:	mov    DWORD PTR [ebp-0x28],ecx
   1c98b:	cmp    DWORD PTR [ebp-0xc],ecx
   1c98e:	jbe    0x1c9a0
   1c990:	jmp    0x1c99d
   1c992:	mov    eax,DWORD PTR [ebp-0x18]
   1c995:	sub    eax,ecx
   1c997:	mov    ecx,DWORD PTR [esi+0x40]
   1c99a:	mov    DWORD PTR [ebp-0x28],ecx
   1c99d:	mov    DWORD PTR [ebp-0xc],ecx
   1c9a0:	mov    ecx,DWORD PTR [ebp-0x10]
   1c9a3:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9a6:	jbe    0x1c9ab
   1c9a8:	mov    DWORD PTR [ebp-0xc],ecx
   1c9ab:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9ae:	mov    DWORD PTR [ebp-0x10],ecx
   1c9b1:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9b4:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9b7:	mov    DWORD PTR [esi+0x40],ecx
   1c9ba:	mov    edx,DWORD PTR [ebp-0x18]
   1c9bd:	mov    cl,BYTE PTR [eax]
   1c9bf:	inc    DWORD PTR [ebp-0x18]
   1c9c2:	inc    eax
   1c9c3:	dec    DWORD PTR [ebp-0xc]
   1c9c6:	mov    BYTE PTR [edx],cl
   1c9c8:	jne    0x1c9ba
   1c9ca:	cmp    DWORD PTR [esi+0x40],0x0
   1c9ce:	jne    0x1caf9
   1c9d4:	jmp    0x1c9ee
   1c9d6:	cmp    DWORD PTR [ebp-0x10],0x0
   1c9da:	je     0x1cb47
   1c9e0:	mov    ecx,DWORD PTR [ebp-0x18]
   1c9e3:	mov    al,BYTE PTR [esi+0x40]
   1c9e6:	inc    DWORD PTR [ebp-0x18]
   1c9e9:	dec    DWORD PTR [ebp-0x10]
   1c9ec:	mov    BYTE PTR [ecx],al
   1c9ee:	mov    DWORD PTR [esi],0x12
   1c9f4:	jmp    0x1caf9
   1c9f9:	cmp    DWORD PTR [esi+0x8],0x0
   1c9fd:	je     0x1caad
   1ca03:	cmp    edi,0x20
   1ca06:	jae    0x1ca2f
   1ca08:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca0c:	je     0x1cb47
   1ca12:	mov    eax,DWORD PTR [ebp-0x4]
   1ca15:	movzx  eax,BYTE PTR [eax]
   1ca18:	dec    DWORD PTR [ebp-0x8]
   1ca1b:	mov    ecx,edi
   1ca1d:	shl    eax,cl
   1ca1f:	add    edi,0x8
   1ca22:	add    ebx,eax
   1ca24:	inc    DWORD PTR [ebp-0x4]
   1ca27:	cmp    edi,0x20
   1ca2a:	jb     0x1ca08
   1ca2c:	mov    edx,DWORD PTR [ebp+0x8]
   1ca2f:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca32:	sub    eax,DWORD PTR [ebp-0x10]
   1ca35:	add    DWORD PTR [edx+0x14],eax
   1ca38:	add    DWORD PTR [esi+0x1c],eax
   1ca3b:	mov    DWORD PTR [ebp-0x1c],eax
   1ca3e:	test   eax,eax
   1ca40:	je     0x1ca6a
   1ca42:	push   eax
   1ca43:	mov    eax,DWORD PTR [ebp-0x18]
   1ca46:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca49:	cmp    DWORD PTR [esi+0x10],0x0
   1ca4d:	push   eax
   1ca4e:	push   DWORD PTR [esi+0x18]
   1ca51:	je     0x1ca5a
   1ca53:	call   0x1d9aa
   1ca58:	jmp    0x1ca5f
   1ca5a:	call   0x1d508
   1ca5f:	mov    ecx,DWORD PTR [ebp+0x8]
   1ca62:	mov    DWORD PTR [esi+0x18],eax
   1ca65:	mov    DWORD PTR [ecx+0x30],eax
   1ca68:	mov    edx,ecx
   1ca6a:	cmp    DWORD PTR [esi+0x10],0x0
   1ca6e:	mov    eax,DWORD PTR [ebp-0x10]
   1ca71:	mov    DWORD PTR [ebp-0x1c],eax
   1ca74:	mov    eax,ebx
   1ca76:	jne    0x1ca9b
   1ca78:	and    eax,0xff00
   1ca7d:	mov    ecx,ebx
   1ca7f:	shl    ecx,0x10
   1ca82:	add    eax,ecx
   1ca84:	mov    ecx,ebx
   1ca86:	shr    ecx,0x8
   1ca89:	and    ecx,0xff00
   1ca8f:	shl    eax,0x8
   1ca92:	add    eax,ecx
   1ca94:	mov    ecx,ebx
   1ca96:	shr    ecx,0x18
   1ca99:	add    eax,ecx
   1ca9b:	cmp    eax,DWORD PTR [esi+0x18]
   1ca9e:	je     0x1caa9
   1caa0:	mov    DWORD PTR [edx+0x18],0x1ebfc
   1caa7:	jmp    0x1caf3
   1caa9:	xor    ebx,ebx
   1caab:	xor    edi,edi
   1caad:	mov    DWORD PTR [esi],0x19
   1cab3:	cmp    DWORD PTR [esi+0x8],0x0
   1cab7:	je     0x1cb31
   1cab9:	cmp    DWORD PTR [esi+0x10],0x0
   1cabd:	je     0x1cb31
   1cabf:	cmp    edi,0x20
   1cac2:	jae    0x1cae7
   1cac4:	cmp    DWORD PTR [ebp-0x8],0x0
   1cac8:	je     0x1cb47
   1caca:	mov    eax,DWORD PTR [ebp-0x4]
   1cacd:	movzx  eax,BYTE PTR [eax]
   1cad0:	dec    DWORD PTR [ebp-0x8]
   1cad3:	mov    ecx,edi
   1cad5:	shl    eax,cl
   1cad7:	add    edi,0x8
   1cada:	add    ebx,eax
   1cadc:	inc    DWORD PTR [ebp-0x4]
   1cadf:	cmp    edi,0x20
   1cae2:	jb     0x1cac4
   1cae4:	mov    edx,DWORD PTR [ebp+0x8]
   1cae7:	cmp    ebx,DWORD PTR [esi+0x1c]
   1caea:	je     0x1cb2d
   1caec:	mov    DWORD PTR [edx+0x18],0x1ebe4
   1caf3:	mov    DWORD PTR [esi],0x1b
   1caf9:	mov    eax,DWORD PTR [esi]
   1cafb:	cmp    eax,0x1c
   1cafe:	jbe    0x1baf0
   1cb04:	jmp    0x1bae6
   1cb09:	mov    eax,DWORD PTR [ebp-0x18]
   1cb0c:	mov    DWORD PTR [edx+0xc],eax
   1cb0f:	mov    eax,DWORD PTR [ebp-0x10]
   1cb12:	mov    DWORD PTR [edx+0x10],eax
   1cb15:	mov    eax,DWORD PTR [ebp-0x4]
   1cb18:	mov    DWORD PTR [edx],eax
   1cb1a:	mov    eax,DWORD PTR [ebp-0x8]
   1cb1d:	mov    DWORD PTR [edx+0x4],eax
   1cb20:	mov    DWORD PTR [esi+0x38],ebx
   1cb23:	mov    DWORD PTR [esi+0x3c],edi
   1cb26:	push   0x2
   1cb28:	jmp    0x1bae8
   1cb2d:	xor    ebx,ebx
   1cb2f:	xor    edi,edi
   1cb31:	mov    DWORD PTR [esi],0x1a
   1cb37:	mov    DWORD PTR [ebp-0x24],0x1
   1cb3e:	jmp    0x1cb47
   1cb40:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb47:	mov    eax,DWORD PTR [ebp+0x8]
   1cb4a:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb4d:	mov    DWORD PTR [eax+0xc],ecx
   1cb50:	mov    ecx,DWORD PTR [ebp-0x10]
   1cb53:	mov    DWORD PTR [eax+0x10],ecx
   1cb56:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb59:	mov    DWORD PTR [eax],ecx
   1cb5b:	mov    ecx,DWORD PTR [ebp-0x8]
   1cb5e:	mov    DWORD PTR [eax+0x4],ecx
   1cb61:	cmp    DWORD PTR [esi+0x28],0x0
   1cb65:	mov    DWORD PTR [esi+0x38],ebx
   1cb68:	mov    DWORD PTR [esi+0x3c],edi
   1cb6b:	jne    0x1cb7d
   1cb6d:	cmp    DWORD PTR [esi],0x18
   1cb70:	jge    0x1cb99
   1cb72:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb75:	mov    ecx,DWORD PTR [ebp+0x8]
   1cb78:	cmp    eax,DWORD PTR [ecx+0x10]
   1cb7b:	je     0x1cb99
   1cb7d:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb80:	mov    edi,DWORD PTR [ebp+0x8]
   1cb83:	call   0x1b9a8
   1cb88:	test   eax,eax
   1cb8a:	je     0x1cb99
   1cb8c:	mov    DWORD PTR [esi],0x1c
   1cb92:	push   0xfffffffc
   1cb94:	jmp    0x1bae8
   1cb99:	mov    edi,DWORD PTR [ebp+0x8]
   1cb9c:	mov    eax,DWORD PTR [ebp-0x2c]
   1cb9f:	sub    eax,DWORD PTR [edi+0x4]
   1cba2:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cba5:	sub    ebx,DWORD PTR [edi+0x10]
   1cba8:	add    DWORD PTR [edi+0x8],eax
   1cbab:	add    DWORD PTR [edi+0x14],ebx
   1cbae:	add    DWORD PTR [esi+0x1c],ebx
   1cbb1:	cmp    DWORD PTR [esi+0x8],0x0
   1cbb5:	mov    DWORD PTR [ebp-0x2c],eax
   1cbb8:	je     0x1cbe3
   1cbba:	test   ebx,ebx
   1cbbc:	je     0x1cbe3
   1cbbe:	mov    eax,DWORD PTR [edi+0xc]
   1cbc1:	push   ebx
   1cbc2:	sub    eax,ebx
   1cbc4:	cmp    DWORD PTR [esi+0x10],0x0
   1cbc8:	push   eax
   1cbc9:	push   DWORD PTR [esi+0x18]
   1cbcc:	je     0x1cbd5
   1cbce:	call   0x1d9aa
   1cbd3:	jmp    0x1cbda
   1cbd5:	call   0x1d508
   1cbda:	mov    DWORD PTR [esi+0x18],eax
   1cbdd:	mov    DWORD PTR [edi+0x30],eax
   1cbe0:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbe3:	cmp    DWORD PTR [esi],0xb
   1cbe6:	jne    0x1cbef
   1cbe8:	mov    ecx,0x80
   1cbed:	jmp    0x1cbf1
   1cbef:	xor    ecx,ecx
   1cbf1:	mov    edx,DWORD PTR [esi+0x4]
   1cbf4:	neg    edx
   1cbf6:	sbb    edx,edx
   1cbf8:	and    edx,0x40
   1cbfb:	add    edx,ecx
   1cbfd:	add    edx,DWORD PTR [esi+0x3c]
   1cc00:	mov    DWORD PTR [edi+0x2c],edx
   1cc03:	test   eax,eax
   1cc05:	jne    0x1cc0b
   1cc07:	test   ebx,ebx
   1cc09:	je     0x1cc11
   1cc0b:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc0f:	jne    0x1cc1e
   1cc11:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc15:	jne    0x1cc1e
   1cc17:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc1e:	mov    eax,DWORD PTR [ebp-0x24]
   1cc21:	jmp    0x1bae9
   1cc26:	mov    edi,edi
   1cc28:	cli    
   1cc29:	mov    edx,0xbc170001
   1cc2e:	add    DWORD PTR [eax],eax
   1cc30:	lods   al,BYTE PTR ds:[esi]
   1cc31:	mov    esp,0xbd220001
   1cc36:	add    DWORD PTR [eax],eax
   1cc38:	fwait
   1cc39:	mov    ebp,0xbe1a0001
   1cc3e:	add    DWORD PTR [eax],eax
   1cc40:	mov    ch,0xbe
   1cc42:	add    DWORD PTR [eax],eax
   1cc44:	dec    esi
   1cc45:	mov    edi,0xbfe30001
   1cc4a:	add    DWORD PTR [eax],eax
   1cc4c:	arpl   ax,ax
   1cc4e:	add    DWORD PTR [eax],eax
   1cc50:	rol    eax,0x1
   1cc53:	add    ah,ah
   1cc55:	rol    BYTE PTR [ecx],0x0
   1cc58:	icebp  
   1cc59:	rol    BYTE PTR [ecx],0x0
   1cc5c:	mov    al,ds:0x1c1
   1cc61:	ret    0x1
   1cc64:	push   esi
   1cc65:	ret    0x1
   1cc68:	sbb    bl,al
   1cc6a:	add    DWORD PTR [eax],eax
   1cc6c:	xchg   ch,al
   1cc6e:	add    DWORD PTR [eax],eax
   1cc70:	out    dx,al
   1cc71:	lds    eax,FWORD PTR [ecx]
   1cc73:	add    BYTE PTR [ecx-0x30fffe39],cl
   1cc79:	mov    DWORD PTR [ecx],0x1c8ea00
   1cc7f:	add    BYTE PTR [esi-0x37],cl
   1cc82:	add    DWORD PTR [eax],eax
   1cc84:	(bad)  
   1cc85:	leave  
   1cc86:	add    DWORD PTR [eax],eax
   1cc88:	stc    
   1cc89:	leave  
   1cc8a:	add    DWORD PTR [eax],eax
   1cc8c:	mov    bl,0xca
   1cc8e:	add    DWORD PTR [eax],eax
   1cc90:	aaa    
   1cc91:	retf   
   1cc92:	add    DWORD PTR [eax],eax
   1cc94:	inc    eax
   1cc95:	retf   
   1cc96:	add    DWORD PTR [eax],eax
   1cc98:	xchg   edx,eax
   1cc99:	retf   
   1cc9a:	add    DWORD PTR [eax],eax
   1cc9c:	int3   
   1cc9d:	int3   
   1cc9e:	int3   
   1cc9f:	int3   
   1cca0:	int3   
   1cca1:	int3   
   1cca2:	mov    edi,edi
   1cca4:	push   ebp
   1cca5:	mov    ebp,esp
   1cca7:	push   esi
   1cca8:	mov    esi,DWORD PTR [ebp+0x8]
   1ccab:	test   esi,esi
   1ccad:	je     0x1ccdb
   1ccaf:	mov    eax,DWORD PTR [esi+0x1c]
   1ccb2:	test   eax,eax
   1ccb4:	je     0x1ccdb
   1ccb6:	mov    ecx,DWORD PTR [esi+0x24]
   1ccb9:	test   ecx,ecx
   1ccbb:	je     0x1ccdb
   1ccbd:	mov    eax,DWORD PTR [eax+0x34]
   1ccc0:	test   eax,eax
   1ccc2:	je     0x1ccca
   1ccc4:	push   eax
   1ccc5:	push   DWORD PTR [esi+0x28]
   1ccc8:	call   ecx
   1ccca:	push   DWORD PTR [esi+0x1c]
   1cccd:	push   DWORD PTR [esi+0x28]
   1ccd0:	call   DWORD PTR [esi+0x24]
   1ccd3:	and    DWORD PTR [esi+0x1c],0x0
   1ccd7:	xor    eax,eax
   1ccd9:	jmp    0x1ccde
   1ccdb:	push   0xfffffffe
   1ccdd:	pop    eax
   1ccde:	pop    esi
   1ccdf:	pop    ebp
   1cce0:	ret    0x4
   1cce3:	int3   
   1cce4:	int3   
   1cce5:	int3   
   1cce6:	int3   
   1cce7:	int3   
   1cce8:	mov    edi,edi
   1ccea:	push   ebp
   1cceb:	mov    ebp,esp
   1cced:	mov    eax,DWORD PTR [ebp+0xc]
   1ccf0:	imul   eax,DWORD PTR [ebp+0x10]
   1ccf4:	push   eax
   1ccf5:	call   0x1d9ce
   1ccfa:	pop    ecx
   1ccfb:	pop    ebp
   1ccfc:	ret    0xc
   1ccff:	int3   
   1cd00:	int3   
   1cd01:	int3   
   1cd02:	int3   
   1cd03:	int3   
   1cd04:	mov    edi,edi
   1cd06:	push   ebp
   1cd07:	mov    ebp,esp
   1cd09:	push   DWORD PTR [ebp+0xc]
   1cd0c:	call   0x1d9fc
   1cd11:	pop    ecx
   1cd12:	pop    ebp
   1cd13:	ret    0x8
   1cd16:	int3   
   1cd17:	int3   
   1cd18:	int3   
   1cd19:	int3   
   1cd1a:	int3   
   1cd1b:	int3   
   1cd1c:	mov    edi,edi
   1cd1e:	push   ebp
   1cd1f:	mov    ebp,esp
   1cd21:	sub    esp,0x40
   1cd24:	mov    eax,DWORD PTR [ebp+0x8]
   1cd27:	mov    ecx,DWORD PTR [eax+0x4]
   1cd2a:	mov    edx,DWORD PTR [eax+0x10]
   1cd2d:	push   ebx
   1cd2e:	mov    ebx,DWORD PTR [eax]
   1cd30:	dec    ebx
   1cd31:	lea    ecx,[ecx+ebx*1-0x5]
   1cd35:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd38:	mov    ecx,edx
   1cd3a:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd3d:	push   esi
   1cd3e:	mov    esi,DWORD PTR [eax+0x1c]
   1cd41:	push   edi
   1cd42:	mov    edi,DWORD PTR [eax+0xc]
   1cd45:	dec    edi
   1cd46:	add    ecx,edi
   1cd48:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd4b:	lea    ecx,[edx+edi*1-0x101]
   1cd52:	mov    DWORD PTR [ebp-0x30],ecx
   1cd55:	mov    ecx,DWORD PTR [esi+0x28]
   1cd58:	mov    DWORD PTR [ebp-0x24],ecx
   1cd5b:	mov    ecx,DWORD PTR [esi+0x2c]
   1cd5e:	mov    DWORD PTR [ebp-0x40],ecx
   1cd61:	mov    ecx,DWORD PTR [esi+0x30]
   1cd64:	mov    DWORD PTR [ebp-0x18],ecx
   1cd67:	mov    ecx,DWORD PTR [esi+0x34]
   1cd6a:	mov    DWORD PTR [ebp-0x28],ecx
   1cd6d:	mov    ecx,DWORD PTR [esi+0x38]
   1cd70:	mov    DWORD PTR [ebp-0x4],ecx
   1cd73:	mov    ecx,DWORD PTR [esi+0x3c]
   1cd76:	mov    DWORD PTR [ebp+0xc],ecx
   1cd79:	mov    ecx,DWORD PTR [esi+0x4c]
   1cd7c:	xor    edx,edx
   1cd7e:	mov    DWORD PTR [ebp-0x1c],ecx
   1cd81:	mov    ecx,DWORD PTR [esi+0x50]
   1cd84:	inc    edx
   1cd85:	mov    DWORD PTR [ebp-0x20],ecx
   1cd88:	mov    ecx,DWORD PTR [esi+0x54]
   1cd8b:	shl    edx,cl
   1cd8d:	mov    ecx,DWORD PTR [esi+0x58]
   1cd90:	dec    edx
   1cd91:	mov    DWORD PTR [ebp-0x34],edx
   1cd94:	xor    edx,edx
   1cd96:	inc    edx
   1cd97:	shl    edx,cl
   1cd99:	dec    edx
   1cd9a:	mov    DWORD PTR [ebp-0x38],edx
   1cd9d:	mov    ecx,DWORD PTR [ebp+0xc]
   1cda0:	cmp    ecx,0xf
   1cda3:	jae    0x1cdc2
   1cda5:	add    DWORD PTR [ebp+0xc],0x8
   1cda9:	inc    ebx
   1cdaa:	movzx  edx,BYTE PTR [ebx]
   1cdad:	shl    edx,cl
   1cdaf:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdb2:	add    DWORD PTR [ebp-0x4],edx
   1cdb5:	inc    ebx
   1cdb6:	movzx  edx,BYTE PTR [ebx]
   1cdb9:	shl    edx,cl
   1cdbb:	add    DWORD PTR [ebp-0x4],edx
   1cdbe:	add    DWORD PTR [ebp+0xc],0x8
   1cdc2:	mov    ecx,DWORD PTR [ebp-0x34]
   1cdc5:	and    ecx,DWORD PTR [ebp-0x4]
   1cdc8:	mov    edx,DWORD PTR [ebp-0x1c]
   1cdcb:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cdce:	mov    DWORD PTR [ebp-0x10],ecx
   1cdd1:	mov    edx,DWORD PTR [ebp-0x10]
   1cdd4:	shr    ecx,0x8
   1cdd7:	movzx  ecx,cl
   1cdda:	shr    DWORD PTR [ebp-0x4],cl
   1cddd:	sub    DWORD PTR [ebp+0xc],ecx
   1cde0:	mov    DWORD PTR [ebp-0x8],ecx
   1cde3:	movzx  ecx,dl
   1cde6:	mov    DWORD PTR [ebp-0x8],ecx
   1cde9:	test   ecx,ecx
   1cdeb:	je     0x1ce34
   1cded:	mov    ecx,DWORD PTR [ebp-0x8]
   1cdf0:	test   cl,0x10
   1cdf3:	jne    0x1ce3f
   1cdf5:	test   cl,0x40
   1cdf8:	jne    0x1d08e
   1cdfe:	xor    edx,edx
   1ce00:	inc    edx
   1ce01:	shl    edx,cl
   1ce03:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce06:	shr    ecx,0x10
   1ce09:	dec    edx
   1ce0a:	and    edx,DWORD PTR [ebp-0x4]
   1ce0d:	add    edx,ecx
   1ce0f:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce12:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce15:	mov    DWORD PTR [ebp-0x10],ecx
   1ce18:	mov    edx,DWORD PTR [ebp-0x10]
   1ce1b:	shr    ecx,0x8
   1ce1e:	movzx  ecx,cl
   1ce21:	shr    DWORD PTR [ebp-0x4],cl
   1ce24:	sub    DWORD PTR [ebp+0xc],ecx
   1ce27:	mov    DWORD PTR [ebp-0x8],ecx
   1ce2a:	movzx  ecx,dl
   1ce2d:	mov    DWORD PTR [ebp-0x8],ecx
   1ce30:	test   ecx,ecx
   1ce32:	jne    0x1cded
   1ce34:	inc    edi
   1ce35:	shr    edx,0x10
   1ce38:	mov    BYTE PTR [edi],dl
   1ce3a:	jmp    0x1d06c
   1ce3f:	shr    edx,0x10
   1ce42:	and    ecx,0xf
   1ce45:	mov    DWORD PTR [ebp-0xc],edx
   1ce48:	mov    DWORD PTR [ebp-0x8],ecx
   1ce4b:	je     0x1ce77
   1ce4d:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce50:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce53:	jae    0x1ce62
   1ce55:	inc    ebx
   1ce56:	movzx  edx,BYTE PTR [ebx]
   1ce59:	shl    edx,cl
   1ce5b:	add    DWORD PTR [ebp-0x4],edx
   1ce5e:	add    DWORD PTR [ebp+0xc],0x8
   1ce62:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce65:	xor    edx,edx
   1ce67:	inc    edx
   1ce68:	shl    edx,cl
   1ce6a:	dec    edx
   1ce6b:	and    edx,DWORD PTR [ebp-0x4]
   1ce6e:	shr    DWORD PTR [ebp-0x4],cl
   1ce71:	add    DWORD PTR [ebp-0xc],edx
   1ce74:	sub    DWORD PTR [ebp+0xc],ecx
   1ce77:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce7a:	cmp    ecx,0xf
   1ce7d:	jae    0x1ce9c
   1ce7f:	add    DWORD PTR [ebp+0xc],0x8
   1ce83:	inc    ebx
   1ce84:	movzx  edx,BYTE PTR [ebx]
   1ce87:	shl    edx,cl
   1ce89:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce8c:	add    DWORD PTR [ebp-0x4],edx
   1ce8f:	inc    ebx
   1ce90:	movzx  edx,BYTE PTR [ebx]
   1ce93:	shl    edx,cl
   1ce95:	add    DWORD PTR [ebp-0x4],edx
   1ce98:	add    DWORD PTR [ebp+0xc],0x8
   1ce9c:	mov    ecx,DWORD PTR [ebp-0x38]
   1ce9f:	and    ecx,DWORD PTR [ebp-0x4]
   1cea2:	mov    edx,DWORD PTR [ebp-0x20]
   1cea5:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cea8:	jmp    0x1cec8
   1ceaa:	test   cl,0x40
   1cead:	jne    0x1d085
   1ceb3:	xor    edx,edx
   1ceb5:	inc    edx
   1ceb6:	shl    edx,cl
   1ceb8:	movzx  ecx,WORD PTR [ebp-0xe]
   1cebc:	dec    edx
   1cebd:	and    edx,DWORD PTR [ebp-0x4]
   1cec0:	add    edx,ecx
   1cec2:	mov    ecx,DWORD PTR [ebp-0x20]
   1cec5:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cec8:	mov    DWORD PTR [ebp-0x10],ecx
   1cecb:	mov    edx,DWORD PTR [ebp-0x10]
   1cece:	shr    ecx,0x8
   1ced1:	movzx  ecx,cl
   1ced4:	shr    DWORD PTR [ebp-0x4],cl
   1ced7:	sub    DWORD PTR [ebp+0xc],ecx
   1ceda:	mov    DWORD PTR [ebp-0x8],ecx
   1cedd:	movzx  ecx,dl
   1cee0:	test   cl,0x10
   1cee3:	je     0x1ceaa
   1cee5:	and    ecx,0xf
   1cee8:	shr    edx,0x10
   1ceeb:	mov    DWORD PTR [ebp-0x14],edx
   1ceee:	mov    DWORD PTR [ebp-0x8],ecx
   1cef1:	cmp    DWORD PTR [ebp+0xc],ecx
   1cef4:	jae    0x1cf21
   1cef6:	mov    ecx,DWORD PTR [ebp+0xc]
   1cef9:	add    DWORD PTR [ebp+0xc],0x8
   1cefd:	inc    ebx
   1cefe:	movzx  edx,BYTE PTR [ebx]
   1cf01:	shl    edx,cl
   1cf03:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf06:	add    DWORD PTR [ebp-0x4],edx
   1cf09:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf0c:	jae    0x1cf21
   1cf0e:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf11:	inc    ebx
   1cf12:	movzx  edx,BYTE PTR [ebx]
   1cf15:	shl    edx,cl
   1cf17:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf1a:	add    DWORD PTR [ebp-0x4],edx
   1cf1d:	add    DWORD PTR [ebp+0xc],0x8
   1cf21:	xor    edx,edx
   1cf23:	inc    edx
   1cf24:	shl    edx,cl
   1cf26:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf29:	sub    DWORD PTR [ebp+0xc],ecx
   1cf2c:	dec    edx
   1cf2d:	and    edx,DWORD PTR [ebp-0x4]
   1cf30:	shr    DWORD PTR [ebp-0x4],cl
   1cf33:	add    DWORD PTR [ebp-0x14],edx
   1cf36:	mov    edx,DWORD PTR [ebp-0x14]
   1cf39:	mov    ecx,edi
   1cf3b:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf3e:	cmp    edx,ecx
   1cf40:	jbe    0x1d034
   1cf46:	sub    edx,ecx
   1cf48:	mov    DWORD PTR [ebp-0x8],edx
   1cf4b:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf4e:	ja     0x1d07c
   1cf54:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf57:	dec    ecx
   1cf58:	mov    DWORD PTR [ebp-0x10],ecx
   1cf5b:	mov    ecx,DWORD PTR [ebp-0x18]
   1cf5e:	test   ecx,ecx
   1cf60:	jne    0x1cf88
   1cf62:	mov    ecx,DWORD PTR [ebp-0x24]
   1cf65:	sub    ecx,edx
   1cf67:	add    DWORD PTR [ebp-0x10],ecx
   1cf6a:	mov    ecx,edx
   1cf6c:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cf6f:	jae    0x1cffd
   1cf75:	sub    DWORD PTR [ebp-0xc],ecx
   1cf78:	mov    ecx,DWORD PTR [ebp-0x10]
   1cf7b:	inc    ecx
   1cf7c:	mov    dl,BYTE PTR [ecx]
   1cf7e:	inc    edi
   1cf7f:	dec    DWORD PTR [ebp-0x8]
   1cf82:	mov    BYTE PTR [edi],dl
   1cf84:	jne    0x1cf7b
   1cf86:	jmp    0x1cfd3
   1cf88:	cmp    ecx,edx
   1cf8a:	jae    0x1cfdd
   1cf8c:	sub    ecx,edx
   1cf8e:	add    ecx,DWORD PTR [ebp-0x24]
   1cf91:	add    DWORD PTR [ebp-0x10],ecx
   1cf94:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf97:	sub    ecx,DWORD PTR [ebp-0x18]
   1cf9a:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cf9d:	jae    0x1cffd
   1cf9f:	sub    DWORD PTR [ebp-0xc],ecx
   1cfa2:	inc    DWORD PTR [ebp-0x10]
   1cfa5:	mov    edx,DWORD PTR [ebp-0x10]
   1cfa8:	mov    dl,BYTE PTR [edx]
   1cfaa:	inc    edi
   1cfab:	dec    ecx
   1cfac:	mov    BYTE PTR [edi],dl
   1cfae:	jne    0x1cfa2
   1cfb0:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfb3:	dec    ecx
   1cfb4:	mov    DWORD PTR [ebp-0x10],ecx
   1cfb7:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfba:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfbd:	jae    0x1cffd
   1cfbf:	sub    DWORD PTR [ebp-0xc],ecx
   1cfc2:	mov    DWORD PTR [ebp-0x8],ecx
   1cfc5:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfc8:	inc    ecx
   1cfc9:	mov    dl,BYTE PTR [ecx]
   1cfcb:	inc    edi
   1cfcc:	dec    DWORD PTR [ebp-0x8]
   1cfcf:	mov    BYTE PTR [edi],dl
   1cfd1:	jne    0x1cfc8
   1cfd3:	mov    ecx,edi
   1cfd5:	sub    ecx,DWORD PTR [ebp-0x14]
   1cfd8:	mov    DWORD PTR [ebp-0x10],ecx
   1cfdb:	jmp    0x1d000
   1cfdd:	sub    ecx,edx
   1cfdf:	add    DWORD PTR [ebp-0x10],ecx
   1cfe2:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfe5:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfe8:	jae    0x1cffd
   1cfea:	sub    DWORD PTR [ebp-0xc],ecx
   1cfed:	mov    ecx,DWORD PTR [ebp-0x10]
   1cff0:	inc    ecx
   1cff1:	mov    dl,BYTE PTR [ecx]
   1cff3:	inc    edi
   1cff4:	dec    DWORD PTR [ebp-0x8]
   1cff7:	mov    BYTE PTR [edi],dl
   1cff9:	jne    0x1cff0
   1cffb:	jmp    0x1cfd3
   1cffd:	mov    ecx,DWORD PTR [ebp-0x10]
   1d000:	mov    edx,DWORD PTR [ebp-0xc]
   1d003:	cmp    edx,0x2
   1d006:	jbe    0x1d054
   1d008:	lea    eax,[edx-0x3]
   1d00b:	push   0x3
   1d00d:	xor    edx,edx
   1d00f:	pop    ecx
   1d010:	div    ecx
   1d012:	mov    ecx,DWORD PTR [ebp-0x10]
   1d015:	inc    eax
   1d016:	sub    DWORD PTR [ebp-0xc],0x3
   1d01a:	inc    ecx
   1d01b:	mov    dl,BYTE PTR [ecx]
   1d01d:	inc    edi
   1d01e:	mov    BYTE PTR [edi],dl
   1d020:	inc    ecx
   1d021:	mov    dl,BYTE PTR [ecx]
   1d023:	inc    edi
   1d024:	inc    ecx
   1d025:	mov    BYTE PTR [edi],dl
   1d027:	mov    dl,BYTE PTR [ecx]
   1d029:	inc    edi
   1d02a:	dec    eax
   1d02b:	mov    BYTE PTR [edi],dl
   1d02d:	jne    0x1d016
   1d02f:	mov    eax,DWORD PTR [ebp+0x8]
   1d032:	jmp    0x1d054
   1d034:	mov    ecx,edi
   1d036:	sub    ecx,edx
   1d038:	sub    DWORD PTR [ebp-0xc],0x3
   1d03c:	inc    ecx
   1d03d:	mov    dl,BYTE PTR [ecx]
   1d03f:	inc    edi
   1d040:	mov    BYTE PTR [edi],dl
   1d042:	inc    ecx
   1d043:	mov    dl,BYTE PTR [ecx]
   1d045:	inc    edi
   1d046:	inc    ecx
   1d047:	mov    BYTE PTR [edi],dl
   1d049:	mov    dl,BYTE PTR [ecx]
   1d04b:	inc    edi
   1d04c:	cmp    DWORD PTR [ebp-0xc],0x2
   1d050:	mov    BYTE PTR [edi],dl
   1d052:	ja     0x1d038
   1d054:	cmp    DWORD PTR [ebp-0xc],0x0
   1d058:	je     0x1d06c
   1d05a:	inc    ecx
   1d05b:	mov    dl,BYTE PTR [ecx]
   1d05d:	inc    edi
   1d05e:	cmp    DWORD PTR [ebp-0xc],0x1
   1d062:	mov    BYTE PTR [edi],dl
   1d064:	jbe    0x1d06c
   1d066:	mov    cl,BYTE PTR [ecx+0x1]
   1d069:	inc    edi
   1d06a:	mov    BYTE PTR [edi],cl
   1d06c:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d06f:	jae    0x1d0a8
   1d071:	cmp    edi,DWORD PTR [ebp-0x30]
   1d074:	jb     0x1cd9d
   1d07a:	jmp    0x1d0a8
   1d07c:	mov    DWORD PTR [eax+0x18],0x1ec12
   1d083:	jmp    0x1d0a2
   1d085:	mov    DWORD PTR [eax+0x18],0x1ec30
   1d08c:	jmp    0x1d0a2
   1d08e:	test   cl,0x20
   1d091:	je     0x1d09b
   1d093:	mov    DWORD PTR [esi],0xb
   1d099:	jmp    0x1d0a8
   1d09b:	mov    DWORD PTR [eax+0x18],0x1ec46
   1d0a2:	mov    DWORD PTR [esi],0x1b
   1d0a8:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0ab:	shr    ecx,0x3
   1d0ae:	sub    ebx,ecx
   1d0b0:	shl    ecx,0x3
   1d0b3:	sub    DWORD PTR [ebp+0xc],ecx
   1d0b6:	xor    ecx,ecx
   1d0b8:	inc    ecx
   1d0b9:	mov    edx,ecx
   1d0bb:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0be:	shl    edx,cl
   1d0c0:	dec    edx
   1d0c1:	mov    ecx,edx
   1d0c3:	mov    edx,DWORD PTR [ebp-0x4]
   1d0c6:	and    edx,ecx
   1d0c8:	lea    ecx,[ebx+0x1]
   1d0cb:	mov    DWORD PTR [eax],ecx
   1d0cd:	lea    ecx,[edi+0x1]
   1d0d0:	mov    DWORD PTR [eax+0xc],ecx
   1d0d3:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d0d6:	sub    ecx,ebx
   1d0d8:	add    ecx,0x5
   1d0db:	mov    DWORD PTR [eax+0x4],ecx
   1d0de:	mov    ecx,DWORD PTR [ebp-0x30]
   1d0e1:	sub    ecx,edi
   1d0e3:	add    ecx,0x101
   1d0e9:	mov    DWORD PTR [eax+0x10],ecx
   1d0ec:	mov    eax,DWORD PTR [ebp+0xc]
   1d0ef:	pop    edi
   1d0f0:	mov    DWORD PTR [esi+0x38],edx
   1d0f3:	mov    DWORD PTR [esi+0x3c],eax
   1d0f6:	pop    esi
   1d0f7:	pop    ebx
   1d0f8:	leave  
   1d0f9:	ret    0x8
   1d0fc:	int3   
   1d0fd:	int3   
   1d0fe:	int3   
   1d0ff:	int3   
   1d100:	int3   
   1d101:	int3   
   1d102:	mov    edi,edi
   1d104:	push   ebp
   1d105:	mov    ebp,esp
   1d107:	sub    esp,0x90
   1d10d:	mov    eax,ds:0x7771c
   1d112:	xor    eax,ebp
   1d114:	mov    DWORD PTR [ebp-0x4],eax
   1d117:	mov    eax,DWORD PTR [ebp+0xc]
   1d11a:	mov    edx,DWORD PTR [ebp+0x18]
   1d11d:	mov    DWORD PTR [ebp-0x7c],eax
   1d120:	mov    eax,DWORD PTR [ebp+0x1c]
   1d123:	push   ebx
   1d124:	mov    DWORD PTR [ebp-0x4c],eax
   1d127:	xor    eax,eax
   1d129:	push   esi
   1d12a:	mov    esi,DWORD PTR [ebp+0x14]
   1d12d:	movzx  ebx,ax
   1d130:	push   edi
   1d131:	mov    eax,ebx
   1d133:	shl    ebx,0x10
   1d136:	push   0x8
   1d138:	or     eax,ebx
   1d13a:	pop    ecx
   1d13b:	lea    edi,[ebp-0x24]
   1d13e:	rep stos DWORD PTR es:[edi],eax
   1d140:	xor    edi,edi
   1d142:	xor    ecx,ecx
   1d144:	mov    DWORD PTR [ebp-0x90],edx
   1d14a:	cmp    DWORD PTR [ebp+0x10],edi
   1d14d:	jbe    0x1d163
   1d14f:	mov    eax,DWORD PTR [ebp-0x7c]
   1d152:	movzx  eax,WORD PTR [eax+ecx*2]
   1d156:	lea    eax,[ebp+eax*2-0x24]
   1d15a:	inc    WORD PTR [eax]
   1d15d:	inc    ecx
   1d15e:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d161:	jb     0x1d14f
   1d163:	mov    ecx,DWORD PTR [edx]
   1d165:	push   0xf
   1d167:	pop    eax
   1d168:	mov    DWORD PTR [ebp-0x54],ecx
   1d16b:	mov    DWORD PTR [ebp-0x60],eax
   1d16e:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d173:	jne    0x1d17e
   1d175:	dec    eax
   1d176:	mov    DWORD PTR [ebp-0x60],eax
   1d179:	cmp    eax,0x1
   1d17c:	jae    0x1d16e
   1d17e:	cmp    ecx,eax
   1d180:	jbe    0x1d185
   1d182:	mov    DWORD PTR [ebp-0x54],eax
   1d185:	cmp    eax,edi
   1d187:	jne    0x1d1b3
   1d189:	mov    ecx,DWORD PTR [esi]
   1d18b:	xor    eax,eax
   1d18d:	mov    BYTE PTR [ebp-0x48],0x40
   1d191:	mov    BYTE PTR [ebp-0x47],0x1
   1d195:	mov    WORD PTR [ebp-0x46],ax
   1d199:	mov    eax,DWORD PTR [ebp-0x48]
   1d19c:	mov    DWORD PTR [ecx],eax
   1d19e:	add    DWORD PTR [esi],0x4
   1d1a1:	mov    ecx,DWORD PTR [esi]
   1d1a3:	mov    DWORD PTR [ecx],eax
   1d1a5:	add    DWORD PTR [esi],0x4
   1d1a8:	mov    DWORD PTR [edx],0x1
   1d1ae:	jmp    0x1d4ef
   1d1b3:	xor    ecx,ecx
   1d1b5:	inc    ecx
   1d1b6:	mov    edx,ecx
   1d1b8:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d1bd:	jne    0x1d1c5
   1d1bf:	inc    edx
   1d1c0:	cmp    edx,0xf
   1d1c3:	jbe    0x1d1b8
   1d1c5:	cmp    DWORD PTR [ebp-0x54],edx
   1d1c8:	jae    0x1d1cd
   1d1ca:	mov    DWORD PTR [ebp-0x54],edx
   1d1cd:	mov    edi,ecx
   1d1cf:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d1d4:	add    edi,edi
   1d1d6:	sub    edi,ebx
   1d1d8:	js     0x1d264
   1d1de:	inc    ecx
   1d1df:	cmp    ecx,0xf
   1d1e2:	jbe    0x1d1cf
   1d1e4:	xor    ebx,ebx
   1d1e6:	cmp    edi,ebx
   1d1e8:	jle    0x1d1f4
   1d1ea:	cmp    DWORD PTR [ebp+0x8],ebx
   1d1ed:	je     0x1d264
   1d1ef:	cmp    eax,0x1
   1d1f2:	jne    0x1d264
   1d1f4:	xor    eax,eax
   1d1f6:	push   0x2
   1d1f8:	mov    WORD PTR [ebp-0x42],ax
   1d1fc:	pop    ecx
   1d1fd:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d202:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d207:	inc    ecx
   1d208:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d20d:	inc    ecx
   1d20e:	cmp    ecx,0x1e
   1d211:	jb     0x1d1fd
   1d213:	mov    eax,DWORD PTR [ebp-0x4c]
   1d216:	xor    edi,edi
   1d218:	cmp    DWORD PTR [ebp+0x10],ebx
   1d21b:	jbe    0x1d246
   1d21d:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d220:	lea    ecx,[ecx+edi*2]
   1d223:	cmp    WORD PTR [ecx],bx
   1d226:	je     0x1d240
   1d228:	movzx  ebx,WORD PTR [ecx]
   1d22b:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d230:	mov    WORD PTR [eax+ebx*2],di
   1d234:	movzx  ecx,WORD PTR [ecx]
   1d237:	lea    ecx,[ebp+ecx*2-0x44]
   1d23b:	inc    WORD PTR [ecx]
   1d23e:	xor    ebx,ebx
   1d240:	inc    edi
   1d241:	cmp    edi,DWORD PTR [ebp+0x10]
   1d244:	jb     0x1d21d
   1d246:	mov    ecx,DWORD PTR [ebp+0x8]
   1d249:	sub    ecx,ebx
   1d24b:	je     0x1d28e
   1d24d:	dec    ecx
   1d24e:	je     0x1d26c
   1d250:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d254:	mov    DWORD PTR [ebp-0x6c],0x75288
   1d25b:	mov    DWORD PTR [ebp-0x78],0x752c8
   1d262:	jmp    0x1d29b
   1d264:	or     eax,0xffffffff
   1d267:	jmp    0x1d4f1
   1d26c:	mov    ecx,0x202
   1d271:	mov    edi,0x75208
   1d276:	sub    edi,ecx
   1d278:	mov    DWORD PTR [ebp-0x6c],edi
   1d27b:	mov    edi,0x75248
   1d280:	sub    edi,ecx
   1d282:	mov    DWORD PTR [ebp-0x78],edi
   1d285:	mov    DWORD PTR [ebp-0x68],0x100
   1d28c:	jmp    0x1d29b
   1d28e:	mov    DWORD PTR [ebp-0x78],eax
   1d291:	mov    DWORD PTR [ebp-0x6c],eax
   1d294:	mov    DWORD PTR [ebp-0x68],0x13
   1d29b:	mov    ecx,DWORD PTR [ebp-0x54]
   1d29e:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2a2:	mov    edi,DWORD PTR [esi]
   1d2a4:	mov    eax,edx
   1d2a6:	xor    edx,edx
   1d2a8:	inc    edx
   1d2a9:	shl    edx,cl
   1d2ab:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2af:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2b2:	mov    DWORD PTR [ebp-0x84],eax
   1d2b8:	lea    ecx,[edx-0x1]
   1d2bb:	mov    DWORD PTR [ebp-0x50],ebx
   1d2be:	mov    DWORD PTR [ebp-0x80],edx
   1d2c1:	mov    DWORD PTR [ebp-0x64],edx
   1d2c4:	mov    DWORD PTR [ebp-0x88],ecx
   1d2ca:	jne    0x1d2dc
   1d2cc:	cmp    edx,0x5b0
   1d2d2:	jb     0x1d2dc
   1d2d4:	xor    eax,eax
   1d2d6:	inc    eax
   1d2d7:	jmp    0x1d4f1
   1d2dc:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d2df:	mov    DWORD PTR [ebp-0x58],ecx
   1d2e2:	mov    cl,al
   1d2e4:	sub    cl,BYTE PTR [ebp-0x50]
   1d2e7:	mov    BYTE PTR [ebp-0x47],cl
   1d2ea:	mov    ecx,DWORD PTR [ebp-0x58]
   1d2ed:	movzx  edx,WORD PTR [ecx]
   1d2f0:	movzx  ecx,dx
   1d2f3:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d2f6:	jge    0x1d302
   1d2f8:	mov    BYTE PTR [ebp-0x48],0x0
   1d2fc:	mov    WORD PTR [ebp-0x46],dx
   1d300:	jmp    0x1d328
   1d302:	jle    0x1d31e
   1d304:	mov    ecx,DWORD PTR [ebp-0x58]
   1d307:	movzx  ecx,WORD PTR [ecx]
   1d30a:	mov    edx,DWORD PTR [ebp-0x78]
   1d30d:	add    ecx,ecx
   1d30f:	mov    dl,BYTE PTR [ecx+edx*1]
   1d312:	mov    BYTE PTR [ebp-0x48],dl
   1d315:	mov    edx,DWORD PTR [ebp-0x6c]
   1d318:	mov    cx,WORD PTR [ecx+edx*1]
   1d31c:	jmp    0x1d324
   1d31e:	mov    BYTE PTR [ebp-0x48],0x60
   1d322:	xor    ecx,ecx
   1d324:	mov    WORD PTR [ebp-0x46],cx
   1d328:	xor    edx,edx
   1d32a:	mov    ecx,eax
   1d32c:	sub    ecx,DWORD PTR [ebp-0x50]
   1d32f:	inc    edx
   1d330:	shl    edx,cl
   1d332:	mov    ecx,DWORD PTR [ebp-0x80]
   1d335:	mov    DWORD PTR [ebp-0x4c],ecx
   1d338:	mov    DWORD PTR [ebp-0x70],ecx
   1d33b:	mov    ecx,DWORD PTR [ebp-0x50]
   1d33e:	shr    ebx,cl
   1d340:	add    ebx,DWORD PTR [ebp-0x4c]
   1d343:	lea    ecx,[edi+ebx*4]
   1d346:	sub    DWORD PTR [ebp-0x4c],edx
   1d349:	mov    ebx,edx
   1d34b:	shl    ebx,0x2
   1d34e:	sub    ecx,ebx
   1d350:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d354:	mov    ebx,DWORD PTR [ebp-0x48]
   1d357:	mov    DWORD PTR [ecx],ebx
   1d359:	jne    0x1d346
   1d35b:	xor    edx,edx
   1d35d:	lea    ecx,[eax-0x1]
   1d360:	inc    edx
   1d361:	shl    edx,cl
   1d363:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d366:	jmp    0x1d36a
   1d368:	shr    edx,1
   1d36a:	test   ecx,edx
   1d36c:	jne    0x1d368
   1d36e:	test   edx,edx
   1d370:	je     0x1d37b
   1d372:	lea    ebx,[edx-0x1]
   1d375:	and    ebx,ecx
   1d377:	add    ebx,edx
   1d379:	jmp    0x1d37d
   1d37b:	xor    ebx,ebx
   1d37d:	add    DWORD PTR [ebp-0x58],0x2
   1d381:	lea    ecx,[ebp+eax*2-0x24]
   1d385:	mov    edx,0xffff
   1d38a:	add    WORD PTR [ecx],dx
   1d38d:	movzx  ecx,WORD PTR [ecx]
   1d390:	mov    DWORD PTR [ebp-0x5c],ebx
   1d393:	test   cx,cx
   1d396:	jne    0x1d3b4
   1d398:	cmp    eax,DWORD PTR [ebp-0x60]
   1d39b:	je     0x1d477
   1d3a1:	mov    eax,DWORD PTR [ebp-0x58]
   1d3a4:	movzx  eax,WORD PTR [eax]
   1d3a7:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3aa:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3ae:	mov    DWORD PTR [ebp-0x84],eax
   1d3b4:	mov    edx,DWORD PTR [ebp-0x54]
   1d3b7:	cmp    eax,edx
   1d3b9:	jbe    0x1d2e2
   1d3bf:	mov    ecx,DWORD PTR [ebp-0x88]
   1d3c5:	and    ecx,ebx
   1d3c7:	mov    DWORD PTR [ebp-0x8c],ecx
   1d3cd:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d3d0:	je     0x1d2e2
   1d3d6:	cmp    DWORD PTR [ebp-0x50],0x0
   1d3da:	jne    0x1d3df
   1d3dc:	mov    DWORD PTR [ebp-0x50],edx
   1d3df:	mov    ecx,DWORD PTR [ebp-0x70]
   1d3e2:	lea    edi,[edi+ecx*4]
   1d3e5:	mov    ecx,eax
   1d3e7:	mov    eax,DWORD PTR [ebp-0x50]
   1d3ea:	xor    edx,edx
   1d3ec:	sub    ecx,eax
   1d3ee:	inc    edx
   1d3ef:	add    eax,ecx
   1d3f1:	shl    edx,cl
   1d3f3:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3f6:	jae    0x1d420
   1d3f8:	mov    DWORD PTR [ebp-0x4c],eax
   1d3fb:	lea    eax,[ebp+eax*2-0x24]
   1d3ff:	jmp    0x1d404
   1d401:	mov    eax,DWORD PTR [ebp-0x70]
   1d404:	movzx  ebx,WORD PTR [eax]
   1d407:	sub    edx,ebx
   1d409:	test   edx,edx
   1d40b:	jle    0x1d420
   1d40d:	inc    ecx
   1d40e:	inc    DWORD PTR [ebp-0x4c]
   1d411:	inc    eax
   1d412:	inc    eax
   1d413:	mov    DWORD PTR [ebp-0x70],eax
   1d416:	mov    eax,DWORD PTR [ebp-0x4c]
   1d419:	add    edx,edx
   1d41b:	cmp    eax,DWORD PTR [ebp-0x60]
   1d41e:	jb     0x1d401
   1d420:	xor    eax,eax
   1d422:	inc    eax
   1d423:	mov    edx,eax
   1d425:	shl    edx,cl
   1d427:	add    DWORD PTR [ebp-0x64],edx
   1d42a:	mov    DWORD PTR [ebp-0x80],edx
   1d42d:	cmp    DWORD PTR [ebp+0x8],eax
   1d430:	jne    0x1d43f
   1d432:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d439:	jae    0x1d4f1
   1d43f:	mov    eax,DWORD PTR [ebp-0x8c]
   1d445:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d448:	mov    edx,eax
   1d44a:	mov    DWORD PTR [ebp-0x74],eax
   1d44d:	mov    eax,DWORD PTR [esi]
   1d44f:	shl    edx,0x2
   1d452:	mov    BYTE PTR [edx+eax*1],cl
   1d455:	mov    eax,DWORD PTR [esi]
   1d457:	mov    cl,BYTE PTR [ebp-0x54]
   1d45a:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d45e:	mov    eax,DWORD PTR [esi]
   1d460:	mov    ecx,edi
   1d462:	sub    ecx,eax
   1d464:	sar    ecx,0x2
   1d467:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d46c:	mov    eax,DWORD PTR [ebp-0x84]
   1d472:	jmp    0x1d2e2
   1d477:	mov    cl,al
   1d479:	sub    cl,BYTE PTR [ebp-0x50]
   1d47c:	mov    BYTE PTR [ebp-0x48],0x40
   1d480:	mov    BYTE PTR [ebp-0x47],cl
   1d483:	xor    ecx,ecx
   1d485:	mov    WORD PTR [ebp-0x46],cx
   1d489:	jmp    0x1d4d8
   1d48b:	cmp    DWORD PTR [ebp-0x50],0x0
   1d48f:	je     0x1d4aa
   1d491:	mov    ecx,DWORD PTR [ebp-0x88]
   1d497:	and    ecx,ebx
   1d499:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d49c:	je     0x1d4aa
   1d49e:	mov    eax,DWORD PTR [ebp-0x54]
   1d4a1:	and    DWORD PTR [ebp-0x50],0x0
   1d4a5:	mov    edi,DWORD PTR [esi]
   1d4a7:	mov    BYTE PTR [ebp-0x47],al
   1d4aa:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4ad:	mov    edx,ebx
   1d4af:	shr    edx,cl
   1d4b1:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4b4:	mov    DWORD PTR [edi+edx*4],ecx
   1d4b7:	xor    edx,edx
   1d4b9:	lea    ecx,[eax-0x1]
   1d4bc:	inc    edx
   1d4bd:	shl    edx,cl
   1d4bf:	jmp    0x1d4c3
   1d4c1:	shr    edx,1
   1d4c3:	test   ebx,edx
   1d4c5:	jne    0x1d4c1
   1d4c7:	test   edx,edx
   1d4c9:	je     0x1d4d6
   1d4cb:	lea    ecx,[edx-0x1]
   1d4ce:	and    ecx,ebx
   1d4d0:	add    ecx,edx
   1d4d2:	mov    ebx,ecx
   1d4d4:	jmp    0x1d4d8
   1d4d6:	xor    ebx,ebx
   1d4d8:	test   ebx,ebx
   1d4da:	jne    0x1d48b
   1d4dc:	mov    eax,DWORD PTR [ebp-0x64]
   1d4df:	mov    ecx,DWORD PTR [ebp-0x54]
   1d4e2:	shl    eax,0x2
   1d4e5:	add    DWORD PTR [esi],eax
   1d4e7:	mov    eax,DWORD PTR [ebp-0x90]
   1d4ed:	mov    DWORD PTR [eax],ecx
   1d4ef:	xor    eax,eax
   1d4f1:	mov    ecx,DWORD PTR [ebp-0x4]
   1d4f4:	pop    edi
   1d4f5:	pop    esi
   1d4f6:	xor    ecx,ebp
   1d4f8:	pop    ebx
   1d4f9:	call   0x1da19
   1d4fe:	leave  
   1d4ff:	ret    0x18
   1d502:	int3   
   1d503:	int3   
   1d504:	int3   
   1d505:	int3   
   1d506:	int3   
   1d507:	int3   
   1d508:	mov    edi,edi
   1d50a:	push   ebp
   1d50b:	mov    ebp,esp
   1d50d:	push   ebx
   1d50e:	mov    ebx,DWORD PTR [ebp+0x10]
   1d511:	push   esi
   1d512:	mov    esi,DWORD PTR [ebp+0x8]
   1d515:	push   edi
   1d516:	xor    eax,eax
   1d518:	mov    edi,esi
   1d51a:	inc    eax
   1d51b:	shr    edi,0x10
   1d51e:	and    esi,0xffff
   1d524:	cmp    ebx,eax
   1d526:	jne    0x1d54c
   1d528:	mov    eax,DWORD PTR [ebp+0xc]
   1d52b:	movzx  eax,BYTE PTR [eax]
   1d52e:	add    esi,eax
   1d530:	mov    eax,0xfff1
   1d535:	cmp    esi,eax
   1d537:	jb     0x1d53b
   1d539:	sub    esi,eax
   1d53b:	add    edi,esi
   1d53d:	cmp    edi,eax
   1d53f:	jb     0x1d71e
   1d545:	sub    edi,eax
   1d547:	jmp    0x1d71e
   1d54c:	mov    ecx,DWORD PTR [ebp+0xc]
   1d54f:	test   ecx,ecx
   1d551:	je     0x1d725
   1d557:	cmp    ebx,0x10
   1d55a:	jb     0x1d6e1
   1d560:	cmp    ebx,0x15b0
   1d566:	jb     0x1d634
   1d56c:	mov    eax,ebx
   1d56e:	mov    ebx,0x15b0
   1d573:	xor    edx,edx
   1d575:	div    ebx
   1d577:	mov    ebx,DWORD PTR [ebp+0x10]
   1d57a:	mov    DWORD PTR [ebp+0xc],eax
   1d57d:	sub    ebx,0x15b0
   1d583:	mov    eax,0x15b
   1d588:	movzx  edx,BYTE PTR [ecx]
   1d58b:	add    esi,edx
   1d58d:	movzx  edx,BYTE PTR [ecx+0x1]
   1d591:	add    edi,esi
   1d593:	add    esi,edx
   1d595:	movzx  edx,BYTE PTR [ecx+0x2]
   1d599:	add    edi,esi
   1d59b:	add    esi,edx
   1d59d:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5a1:	add    edi,esi
   1d5a3:	add    esi,edx
   1d5a5:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5a9:	add    edi,esi
   1d5ab:	add    esi,edx
   1d5ad:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5b1:	add    edi,esi
   1d5b3:	add    esi,edx
   1d5b5:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5b9:	add    edi,esi
   1d5bb:	add    esi,edx
   1d5bd:	movzx  edx,BYTE PTR [ecx+0x7]
   1d5c1:	add    edi,esi
   1d5c3:	add    esi,edx
   1d5c5:	movzx  edx,BYTE PTR [ecx+0x8]
   1d5c9:	add    edi,esi
   1d5cb:	add    esi,edx
   1d5cd:	movzx  edx,BYTE PTR [ecx+0x9]
   1d5d1:	add    edi,esi
   1d5d3:	add    esi,edx
   1d5d5:	movzx  edx,BYTE PTR [ecx+0xa]
   1d5d9:	add    edi,esi
   1d5db:	add    esi,edx
   1d5dd:	movzx  edx,BYTE PTR [ecx+0xb]
   1d5e1:	add    edi,esi
   1d5e3:	add    esi,edx
   1d5e5:	movzx  edx,BYTE PTR [ecx+0xc]
   1d5e9:	add    edi,esi
   1d5eb:	add    esi,edx
   1d5ed:	movzx  edx,BYTE PTR [ecx+0xd]
   1d5f1:	add    edi,esi
   1d5f3:	add    esi,edx
   1d5f5:	movzx  edx,BYTE PTR [ecx+0xe]
   1d5f9:	add    edi,esi
   1d5fb:	add    esi,edx
   1d5fd:	movzx  edx,BYTE PTR [ecx+0xf]
   1d601:	add    edi,esi
   1d603:	add    esi,edx
   1d605:	add    edi,esi
   1d607:	add    ecx,0x10
   1d60a:	dec    eax
   1d60b:	jne    0x1d588
   1d611:	mov    eax,esi
   1d613:	xor    edx,edx
   1d615:	mov    esi,0xfff1
   1d61a:	div    esi
   1d61c:	mov    eax,edi
   1d61e:	mov    edi,0xfff1
   1d623:	mov    esi,edx
   1d625:	xor    edx,edx
   1d627:	div    edi
   1d629:	dec    DWORD PTR [ebp+0xc]
   1d62c:	mov    edi,edx
   1d62e:	jne    0x1d57d
   1d634:	test   ebx,ebx
   1d636:	je     0x1d71e
   1d63c:	cmp    ebx,0x10
   1d63f:	jb     0x1d703
   1d645:	mov    eax,ebx
   1d647:	shr    eax,0x4
   1d64a:	movzx  edx,BYTE PTR [ecx]
   1d64d:	add    esi,edx
   1d64f:	movzx  edx,BYTE PTR [ecx+0x1]
   1d653:	add    edi,esi
   1d655:	add    esi,edx
   1d657:	movzx  edx,BYTE PTR [ecx+0x2]
   1d65b:	add    edi,esi
   1d65d:	add    esi,edx
   1d65f:	movzx  edx,BYTE PTR [ecx+0x3]
   1d663:	add    edi,esi
   1d665:	add    esi,edx
   1d667:	movzx  edx,BYTE PTR [ecx+0x4]
   1d66b:	add    edi,esi
   1d66d:	add    esi,edx
   1d66f:	movzx  edx,BYTE PTR [ecx+0x5]
   1d673:	add    edi,esi
   1d675:	add    esi,edx
   1d677:	movzx  edx,BYTE PTR [ecx+0x6]
   1d67b:	add    edi,esi
   1d67d:	add    esi,edx
   1d67f:	movzx  edx,BYTE PTR [ecx+0x7]
   1d683:	add    edi,esi
   1d685:	add    esi,edx
   1d687:	movzx  edx,BYTE PTR [ecx+0x8]
   1d68b:	add    edi,esi
   1d68d:	add    esi,edx
   1d68f:	movzx  edx,BYTE PTR [ecx+0x9]
   1d693:	add    edi,esi
   1d695:	add    esi,edx
   1d697:	movzx  edx,BYTE PTR [ecx+0xa]
   1d69b:	add    edi,esi
   1d69d:	add    esi,edx
   1d69f:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6a3:	add    edi,esi
   1d6a5:	add    esi,edx
   1d6a7:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6ab:	add    edi,esi
   1d6ad:	add    esi,edx
   1d6af:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6b3:	add    edi,esi
   1d6b5:	add    esi,edx
   1d6b7:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6bb:	add    edi,esi
   1d6bd:	add    esi,edx
   1d6bf:	movzx  edx,BYTE PTR [ecx+0xf]
   1d6c3:	add    edi,esi
   1d6c5:	add    esi,edx
   1d6c7:	sub    ebx,0x10
   1d6ca:	add    edi,esi
   1d6cc:	add    ecx,0x10
   1d6cf:	dec    eax
   1d6d0:	jne    0x1d64a
   1d6d6:	jmp    0x1d703
   1d6d8:	movzx  eax,BYTE PTR [ecx]
   1d6db:	dec    ebx
   1d6dc:	add    esi,eax
   1d6de:	inc    ecx
   1d6df:	add    edi,esi
   1d6e1:	test   ebx,ebx
   1d6e3:	jne    0x1d6d8
   1d6e5:	mov    ecx,0xfff1
   1d6ea:	cmp    esi,ecx
   1d6ec:	jb     0x1d6f0
   1d6ee:	sub    esi,ecx
   1d6f0:	mov    eax,edi
   1d6f2:	xor    edx,edx
   1d6f4:	div    ecx
   1d6f6:	mov    eax,edx
   1d6f8:	jmp    0x1d720
   1d6fa:	movzx  eax,BYTE PTR [ecx]
   1d6fd:	dec    ebx
   1d6fe:	add    esi,eax
   1d700:	inc    ecx
   1d701:	add    edi,esi
   1d703:	test   ebx,ebx
   1d705:	jne    0x1d6fa
   1d707:	mov    eax,esi
   1d709:	mov    ecx,0xfff1
   1d70e:	xor    edx,edx
   1d710:	mov    esi,ecx
   1d712:	div    esi
   1d714:	mov    eax,edi
   1d716:	mov    esi,edx
   1d718:	xor    edx,edx
   1d71a:	div    ecx
   1d71c:	mov    edi,edx
   1d71e:	mov    eax,edi
   1d720:	shl    eax,0x10
   1d723:	or     eax,esi
   1d725:	pop    edi
   1d726:	pop    esi
   1d727:	pop    ebx
   1d728:	pop    ebp
   1d729:	ret    0xc
   1d72c:	int3   
   1d72d:	int3   
   1d72e:	int3   
   1d72f:	int3   
   1d730:	int3   
   1d731:	int3   
   1d732:	mov    edi,edi
   1d734:	push   ebp
   1d735:	mov    ebp,esp
   1d737:	push   ecx
   1d738:	cmp    DWORD PTR [ebp+0x8],0x0
   1d73c:	push   esi
   1d73d:	not    eax
   1d73f:	mov    ecx,0xff
   1d744:	je     0x1d762
   1d746:	test   dl,0x3
   1d749:	je     0x1d762
   1d74b:	movzx  esi,BYTE PTR [edx]
   1d74e:	xor    esi,eax
   1d750:	and    esi,ecx
   1d752:	shr    eax,0x8
   1d755:	xor    eax,DWORD PTR [esi*4+0x75308]
   1d75c:	inc    edx
   1d75d:	dec    DWORD PTR [ebp+0x8]
   1d760:	jne    0x1d746
   1d762:	cmp    DWORD PTR [ebp+0x8],0x20
   1d766:	push   ebx
   1d767:	push   edi
   1d768:	push   0x4
   1d76a:	mov    esi,edx
   1d76c:	pop    edi
   1d76d:	jb     0x1d931
   1d773:	mov    edx,DWORD PTR [ebp+0x8]
   1d776:	shr    edx,0x5
   1d779:	mov    DWORD PTR [ebp-0x4],edx
   1d77c:	xor    eax,DWORD PTR [esi]
   1d77e:	add    esi,edi
   1d780:	mov    edx,eax
   1d782:	shr    edx,0x10
   1d785:	mov    ebx,eax
   1d787:	shr    ebx,0x8
   1d78a:	and    edx,ecx
   1d78c:	mov    edx,DWORD PTR [edx*4+0x75708]
   1d793:	and    ebx,ecx
   1d795:	xor    edx,DWORD PTR [ebx*4+0x75b08]
   1d79c:	mov    ebx,eax
   1d79e:	shr    ebx,0x18
   1d7a1:	xor    edx,DWORD PTR [ebx*4+0x75308]
   1d7a8:	and    eax,ecx
   1d7aa:	xor    edx,DWORD PTR [eax*4+0x75f08]
   1d7b1:	xor    edx,DWORD PTR [esi]
   1d7b3:	add    esi,edi
   1d7b5:	mov    eax,edx
   1d7b7:	shr    eax,0x10
   1d7ba:	mov    ebx,edx
   1d7bc:	shr    ebx,0x8
   1d7bf:	and    eax,ecx
   1d7c1:	mov    eax,DWORD PTR [eax*4+0x75708]
   1d7c8:	and    ebx,ecx
   1d7ca:	xor    eax,DWORD PTR [ebx*4+0x75b08]
   1d7d1:	mov    ebx,edx
   1d7d3:	shr    ebx,0x18
   1d7d6:	xor    eax,DWORD PTR [ebx*4+0x75308]
   1d7dd:	and    edx,ecx
   1d7df:	xor    eax,DWORD PTR [edx*4+0x75f08]
   1d7e6:	xor    eax,DWORD PTR [esi]
   1d7e8:	add    esi,edi
   1d7ea:	mov    edx,eax
   1d7ec:	shr    edx,0x10
   1d7ef:	mov    ebx,eax
   1d7f1:	and    edx,ecx
   1d7f3:	mov    edx,DWORD PTR [edx*4+0x75708]
   1d7fa:	shr    ebx,0x8
   1d7fd:	and    ebx,ecx
   1d7ff:	xor    edx,DWORD PTR [ebx*4+0x75b08]
   1d806:	mov    ebx,eax
   1d808:	shr    ebx,0x18
   1d80b:	xor    edx,DWORD PTR [ebx*4+0x75308]
   1d812:	and    eax,ecx
   1d814:	xor    edx,DWORD PTR [eax*4+0x75f08]
   1d81b:	xor    edx,DWORD PTR [esi]
   1d81d:	add    esi,edi
   1d81f:	mov    eax,edx
   1d821:	shr    eax,0x10
   1d824:	mov    ebx,edx
   1d826:	shr    ebx,0x8
   1d829:	and    eax,ecx
   1d82b:	mov    eax,DWORD PTR [eax*4+0x75708]
   1d832:	and    ebx,ecx
   1d834:	xor    eax,DWORD PTR [ebx*4+0x75b08]
   1d83b:	mov    ebx,edx
   1d83d:	shr    ebx,0x18
   1d840:	xor    eax,DWORD PTR [ebx*4+0x75308]
   1d847:	and    edx,ecx
   1d849:	xor    eax,DWORD PTR [edx*4+0x75f08]
   1d850:	xor    eax,DWORD PTR [esi]
   1d852:	add    esi,edi
   1d854:	mov    edx,eax
   1d856:	shr    edx,0x10
   1d859:	mov    ebx,eax
   1d85b:	and    edx,ecx
   1d85d:	mov    edx,DWORD PTR [edx*4+0x75708]
   1d864:	shr    ebx,0x8
   1d867:	and    ebx,ecx
   1d869:	xor    edx,DWORD PTR [ebx*4+0x75b08]
   1d870:	mov    ebx,eax
   1d872:	shr    ebx,0x18
   1d875:	xor    edx,DWORD PTR [ebx*4+0x75308]
   1d87c:	and    eax,ecx
   1d87e:	xor    edx,DWORD PTR [eax*4+0x75f08]
   1d885:	xor    edx,DWORD PTR [esi]
   1d887:	add    esi,edi
   1d889:	mov    eax,edx
   1d88b:	shr    eax,0x10
   1d88e:	and    eax,ecx
   1d890:	mov    ebx,edx
   1d892:	mov    eax,DWORD PTR [eax*4+0x75708]
   1d899:	shr    ebx,0x8
   1d89c:	and    ebx,ecx
   1d89e:	xor    eax,DWORD PTR [ebx*4+0x75b08]
   1d8a5:	mov    ebx,edx
   1d8a7:	shr    ebx,0x18
   1d8aa:	xor    eax,DWORD PTR [ebx*4+0x75308]
   1d8b1:	and    edx,ecx
   1d8b3:	xor    eax,DWORD PTR [edx*4+0x75f08]
   1d8ba:	sub    DWORD PTR [ebp+0x8],0x20
   1d8be:	xor    eax,DWORD PTR [esi]
   1d8c0:	add    esi,edi
   1d8c2:	mov    edx,eax
   1d8c4:	mov    ebx,eax
   1d8c6:	shr    edx,0x10
   1d8c9:	shr    ebx,0x8
   1d8cc:	and    edx,ecx
   1d8ce:	mov    edx,DWORD PTR [edx*4+0x75708]
   1d8d5:	and    ebx,ecx
   1d8d7:	xor    edx,DWORD PTR [ebx*4+0x75b08]
   1d8de:	mov    ebx,eax
   1d8e0:	shr    ebx,0x18
   1d8e3:	xor    edx,DWORD PTR [ebx*4+0x75308]
   1d8ea:	and    eax,ecx
   1d8ec:	xor    edx,DWORD PTR [eax*4+0x75f08]
   1d8f3:	xor    edx,DWORD PTR [esi]
   1d8f5:	add    esi,edi
   1d8f7:	mov    eax,edx
   1d8f9:	shr    eax,0x10
   1d8fc:	and    eax,ecx
   1d8fe:	mov    eax,DWORD PTR [eax*4+0x75708]
   1d905:	mov    ebx,edx
   1d907:	shr    ebx,0x8
   1d90a:	and    ebx,ecx
   1d90c:	xor    eax,DWORD PTR [ebx*4+0x75b08]
   1d913:	mov    ebx,edx
   1d915:	shr    ebx,0x18
   1d918:	xor    eax,DWORD PTR [ebx*4+0x75308]
   1d91f:	and    edx,ecx
   1d921:	xor    eax,DWORD PTR [edx*4+0x75f08]
   1d928:	dec    DWORD PTR [ebp-0x4]
   1d92b:	jne    0x1d77c
   1d931:	cmp    DWORD PTR [ebp+0x8],edi
   1d934:	jb     0x1d97e
   1d936:	mov    edx,DWORD PTR [ebp+0x8]
   1d939:	shr    edx,0x2
   1d93c:	mov    DWORD PTR [ebp-0x4],edx
   1d93f:	xor    eax,DWORD PTR [esi]
   1d941:	sub    DWORD PTR [ebp+0x8],edi
   1d944:	mov    edx,eax
   1d946:	shr    edx,0x10
   1d949:	and    edx,ecx
   1d94b:	mov    edx,DWORD PTR [edx*4+0x75708]
   1d952:	mov    ebx,eax
   1d954:	shr    ebx,0x8
   1d957:	and    ebx,ecx
   1d959:	xor    edx,DWORD PTR [ebx*4+0x75b08]
   1d960:	mov    ebx,eax
   1d962:	shr    ebx,0x18
   1d965:	xor    edx,DWORD PTR [ebx*4+0x75308]
   1d96c:	and    eax,ecx
   1d96e:	xor    edx,DWORD PTR [eax*4+0x75f08]
   1d975:	add    esi,edi
   1d977:	dec    DWORD PTR [ebp-0x4]
   1d97a:	mov    eax,edx
   1d97c:	jne    0x1d93f
   1d97e:	cmp    DWORD PTR [ebp+0x8],0x0
   1d982:	pop    edi
   1d983:	pop    ebx
   1d984:	je     0x1d99d
   1d986:	movzx  edx,BYTE PTR [esi]
   1d989:	xor    edx,eax
   1d98b:	and    edx,ecx
   1d98d:	shr    eax,0x8
   1d990:	xor    eax,DWORD PTR [edx*4+0x75308]
   1d997:	inc    esi
   1d998:	dec    DWORD PTR [ebp+0x8]
   1d99b:	jne    0x1d986
   1d99d:	not    eax
   1d99f:	pop    esi
   1d9a0:	leave  
   1d9a1:	ret    0x4
   1d9a4:	int3   
   1d9a5:	int3   
   1d9a6:	int3   
   1d9a7:	int3   
   1d9a8:	int3   
   1d9a9:	int3   
   1d9aa:	mov    edi,edi
   1d9ac:	push   ebp
   1d9ad:	mov    ebp,esp
   1d9af:	mov    edx,DWORD PTR [ebp+0xc]
   1d9b2:	test   edx,edx
   1d9b4:	jne    0x1d9ba
   1d9b6:	xor    eax,eax
   1d9b8:	jmp    0x1d9c5
   1d9ba:	push   DWORD PTR [ebp+0x10]
   1d9bd:	mov    eax,DWORD PTR [ebp+0x8]
   1d9c0:	call   0x1d732
   1d9c5:	pop    ebp
   1d9c6:	ret    0xc
   1d9c9:	int3   
   1d9ca:	int3   
   1d9cb:	int3   
   1d9cc:	int3   
   1d9cd:	int3   
   1d9ce:	mov    edi,edi
   1d9d0:	push   ebp
   1d9d1:	mov    ebp,esp
   1d9d3:	push   0x20
   1d9d5:	push   0x61737973
   1d9da:	push   DWORD PTR [ebp+0x8]
   1d9dd:	push   0x1
   1d9df:	call   DWORD PTR ds:0x1ee1c
   1d9e5:	test   eax,eax
   1d9e7:	jne    0x1d9f4
   1d9e9:	push   0xc000009a
   1d9ee:	call   DWORD PTR ds:0x1ee18
   1d9f4:	pop    ebp
   1d9f5:	ret    
   1d9f6:	int3   
   1d9f7:	int3   
   1d9f8:	int3   
   1d9f9:	int3   
   1d9fa:	int3   
   1d9fb:	int3   
   1d9fc:	mov    edi,edi
   1d9fe:	push   ebp
   1d9ff:	mov    ebp,esp
   1da01:	cmp    DWORD PTR [ebp+0x8],0x0
   1da05:	je     0x1da12
   1da07:	push   0x0
   1da09:	push   DWORD PTR [ebp+0x8]
   1da0c:	call   DWORD PTR ds:0x1ee20
   1da12:	pop    ebp
   1da13:	ret    
   1da14:	int3   
   1da15:	int3   
   1da16:	int3   
   1da17:	int3   
   1da18:	int3   
   1da19:	cmp    ecx,DWORD PTR ds:0x7771c
   1da1f:	jne    0x1da24
   1da21:	ret    0x0
   1da24:	jmp    0x1da2e
   1da29:	int3   
   1da2a:	int3   
   1da2b:	int3   
   1da2c:	int3   
   1da2d:	int3   
   1da2e:	mov    edi,edi
   1da30:	push   ebp
   1da31:	mov    ebp,esp
   1da33:	push   ecx
   1da34:	mov    DWORD PTR [ebp-0x4],ecx
   1da37:	push   0x0
   1da39:	push   DWORD PTR ds:0x77720
   1da3f:	push   DWORD PTR ds:0x7771c
   1da45:	push   DWORD PTR [ebp-0x4]
   1da48:	push   0xf7
   1da4d:	call   DWORD PTR ds:0x1ee5c
   1da53:	int3   
   1da54:	int3   
   1da55:	int3   
   1da56:	int3   
   1da57:	int3   
   1da58:	int3   
   1da59:	int3   
   1da5a:	jmp    DWORD PTR ds:0x1ee0c
   1da60:	int3   
   1da61:	int3   
   1da62:	int3   
   1da63:	int3   
   1da64:	int3   
   1da65:	int3   
   1da66:	jmp    DWORD PTR ds:0x1ee10
   1da6c:	int3   
   1da6d:	int3   
   1da6e:	int3   
   1da6f:	int3   
   1da70:	int3   
   1da71:	int3   
   1da72:	jmp    DWORD PTR ds:0x1ee14
   1da78:	int3   
   1da79:	int3   
   1da7a:	int3   
   1da7b:	int3   
   1da7c:	int3   
   1da7d:	int3   
   1da7e:	jmp    DWORD PTR ds:0x1ee30
   1da84:	int3   
   1da85:	int3   
   1da86:	int3   
   1da87:	int3   
   1da88:	int3   
   1da89:	int3   
   1da8a:	jmp    DWORD PTR ds:0x1ee34
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	int3   
   1da95:	int3   
   1da96:	jmp    DWORD PTR ds:0x1ee40
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	int3   
   1da9f:	int3   
   1daa0:	int3   
   1daa1:	int3   
   1daa2:	jmp    DWORD PTR ds:0x1ee4c
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	int3   
   1daab:	int3   
   1daac:	int3   
   1daad:	int3   
   1daae:	jmp    DWORD PTR ds:0x1ee54
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	int3   
   1dabb:	int3   
   1dabc:	push   0x1db20
   1dac1:	push   DWORD PTR fs:0x0
   1dac8:	mov    eax,DWORD PTR [esp+0x10]
   1dacc:	mov    DWORD PTR [esp+0x10],ebp
   1dad0:	lea    ebp,[esp+0x10]
   1dad4:	sub    esp,eax
   1dad6:	push   ebx
   1dad7:	push   esi
   1dad8:	push   edi
   1dad9:	mov    eax,ds:0x7771c
   1dade:	xor    DWORD PTR [ebp-0x4],eax
   1dae1:	xor    eax,ebp
   1dae3:	push   eax
   1dae4:	mov    DWORD PTR [ebp-0x18],esp
   1dae7:	push   DWORD PTR [ebp-0x8]
   1daea:	mov    eax,DWORD PTR [ebp-0x4]
   1daed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1daf4:	mov    DWORD PTR [ebp-0x8],eax
   1daf7:	lea    eax,[ebp-0x10]
   1dafa:	mov    fs:0x0,eax
   1db00:	ret    
   1db01:	mov    ecx,DWORD PTR [ebp-0x10]
   1db04:	mov    DWORD PTR fs:0x0,ecx
   1db0b:	pop    ecx
   1db0c:	pop    edi
   1db0d:	pop    edi
   1db0e:	pop    esi
   1db0f:	pop    ebx
   1db10:	mov    esp,ebp
   1db12:	pop    ebp
   1db13:	push   ecx
   1db14:	ret    
   1db15:	int3   
   1db16:	int3   
   1db17:	int3   
   1db18:	int3   
   1db19:	int3   
   1db1a:	int3   
   1db1b:	int3   
   1db1c:	int3   
   1db1d:	int3   
   1db1e:	int3   
   1db1f:	int3   
   1db20:	mov    edi,edi
   1db22:	push   ebp
   1db23:	mov    ebp,esp
   1db25:	sub    esp,0x14
   1db28:	push   ebx
   1db29:	mov    ebx,DWORD PTR [ebp+0xc]
   1db2c:	push   esi
   1db2d:	mov    esi,DWORD PTR [ebx+0x8]
   1db30:	xor    esi,DWORD PTR ds:0x7771c
   1db36:	push   edi
   1db37:	mov    eax,DWORD PTR [esi]
   1db39:	mov    BYTE PTR [ebp-0x1],0x0
   1db3d:	mov    DWORD PTR [ebp-0x8],0x1
   1db44:	lea    edi,[ebx+0x10]
   1db47:	cmp    eax,0xfffffffe
   1db4a:	je     0x1db59
   1db4c:	mov    ecx,DWORD PTR [esi+0x4]
   1db4f:	add    ecx,edi
   1db51:	xor    ecx,DWORD PTR [eax+edi*1]
   1db54:	call   0x1da19
   1db59:	mov    ecx,DWORD PTR [esi+0xc]
   1db5c:	mov    eax,DWORD PTR [esi+0x8]
   1db5f:	add    ecx,edi
   1db61:	xor    ecx,DWORD PTR [eax+edi*1]
   1db64:	call   0x1da19
   1db69:	mov    eax,DWORD PTR [ebp+0x8]
   1db6c:	test   BYTE PTR [eax+0x4],0x66
   1db70:	jne    0x1dc58
   1db76:	mov    ecx,DWORD PTR [ebp+0x10]
   1db79:	lea    edx,[ebp-0x14]
   1db7c:	mov    DWORD PTR [ebx-0x4],edx
   1db7f:	mov    ebx,DWORD PTR [ebx+0xc]
   1db82:	mov    DWORD PTR [ebp-0x14],eax
   1db85:	mov    DWORD PTR [ebp-0x10],ecx
   1db88:	cmp    ebx,0xfffffffe
   1db8b:	je     0x1dbec
   1db8d:	lea    ecx,[ecx+0x0]
   1db90:	lea    eax,[ebx+ebx*2]
   1db93:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1db97:	lea    eax,[esi+eax*4+0x10]
   1db9b:	mov    DWORD PTR [ebp-0xc],eax
   1db9e:	mov    eax,DWORD PTR [eax]
   1dba0:	mov    DWORD PTR [ebp+0x8],eax
   1dba3:	test   ecx,ecx
   1dba5:	je     0x1dbbb
   1dba7:	mov    edx,edi
   1dba9:	call   0x1dd61
   1dbae:	mov    BYTE PTR [ebp-0x1],0x1
   1dbb2:	test   eax,eax
   1dbb4:	jl     0x1dbf6
   1dbb6:	jg     0x1dbff
   1dbb8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbbb:	mov    ebx,eax
   1dbbd:	cmp    eax,0xfffffffe
   1dbc0:	jne    0x1db90
   1dbc2:	cmp    BYTE PTR [ebp-0x1],0x0
   1dbc6:	je     0x1dbec
   1dbc8:	mov    eax,DWORD PTR [esi]
   1dbca:	cmp    eax,0xfffffffe
   1dbcd:	je     0x1dbdc
   1dbcf:	mov    ecx,DWORD PTR [esi+0x4]
   1dbd2:	add    ecx,edi
   1dbd4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbd7:	call   0x1da19
   1dbdc:	mov    ecx,DWORD PTR [esi+0xc]
   1dbdf:	mov    edx,DWORD PTR [esi+0x8]
   1dbe2:	add    ecx,edi
   1dbe4:	xor    ecx,DWORD PTR [edx+edi*1]
   1dbe7:	call   0x1da19
   1dbec:	mov    eax,DWORD PTR [ebp-0x8]
   1dbef:	pop    edi
   1dbf0:	pop    esi
   1dbf1:	pop    ebx
   1dbf2:	mov    esp,ebp
   1dbf4:	pop    ebp
   1dbf5:	ret    
   1dbf6:	mov    DWORD PTR [ebp-0x8],0x0
   1dbfd:	jmp    0x1dbc8
   1dbff:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc02:	call   0x1dd8a
   1dc07:	mov    eax,DWORD PTR [ebp+0xc]
   1dc0a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc0d:	je     0x1dc21
   1dc0f:	push   0x7771c
   1dc14:	push   edi
   1dc15:	mov    edx,ebx
   1dc17:	mov    ecx,eax
   1dc19:	call   0x1dda4
   1dc1e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc21:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc24:	mov    DWORD PTR [eax+0xc],ecx
   1dc27:	mov    eax,DWORD PTR [esi]
   1dc29:	cmp    eax,0xfffffffe
   1dc2c:	je     0x1dc3b
   1dc2e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc31:	add    ecx,edi
   1dc33:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc36:	call   0x1da19
   1dc3b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc3e:	mov    edx,DWORD PTR [esi+0x8]
   1dc41:	add    ecx,edi
   1dc43:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc46:	call   0x1da19
   1dc4b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc4e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc51:	mov    edx,edi
   1dc53:	call   0x1dd78
   1dc58:	mov    edx,0xfffffffe
   1dc5d:	cmp    DWORD PTR [ebx+0xc],edx
   1dc60:	je     0x1dbec
   1dc62:	push   0x7771c
   1dc67:	push   edi
   1dc68:	mov    ecx,ebx
   1dc6a:	call   0x1dda4
   1dc6f:	jmp    0x1dbc8
   1dc74:	int3   
   1dc75:	int3   
   1dc76:	int3   
   1dc77:	int3   
   1dc78:	int3   
   1dc79:	int3   
   1dc7a:	int3   
   1dc7b:	int3   
   1dc7c:	push   ebx
   1dc7d:	push   esi
   1dc7e:	push   edi
   1dc7f:	mov    edx,DWORD PTR [esp+0x10]
   1dc83:	mov    eax,DWORD PTR [esp+0x14]
   1dc87:	mov    ecx,DWORD PTR [esp+0x18]
   1dc8b:	push   ebp
   1dc8c:	push   edx
   1dc8d:	push   eax
   1dc8e:	push   ecx
   1dc8f:	push   ecx
   1dc90:	push   0x1dcff
   1dc95:	push   DWORD PTR fs:0x0
   1dc9c:	mov    eax,ds:0x7771c
   1dca1:	xor    eax,esp
   1dca3:	mov    DWORD PTR [esp+0x8],eax
   1dca7:	mov    DWORD PTR fs:0x0,esp
   1dcae:	mov    eax,DWORD PTR [esp+0x30]
   1dcb2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcb5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcb9:	xor    ebx,DWORD PTR [ecx]
   1dcbb:	mov    esi,DWORD PTR [eax+0xc]
   1dcbe:	cmp    esi,0xfffffffe
   1dcc1:	je     0x1dcf1
   1dcc3:	mov    edx,DWORD PTR [esp+0x34]
   1dcc7:	cmp    edx,0xfffffffe
   1dcca:	je     0x1dcd0
   1dccc:	cmp    esi,edx
   1dcce:	jbe    0x1dcf1
   1dcd0:	lea    esi,[esi+esi*2]
   1dcd3:	lea    ebx,[ebx+esi*4+0x10]
   1dcd7:	mov    ecx,DWORD PTR [ebx]
   1dcd9:	mov    DWORD PTR [eax+0xc],ecx
   1dcdc:	cmp    DWORD PTR [ebx+0x4],0x0
   1dce0:	jne    0x1dcae
   1dce2:	mov    ecx,0x1
   1dce7:	mov    eax,DWORD PTR [ebx+0x8]
   1dcea:	call   0x1de1c
   1dcef:	jmp    0x1dcae
   1dcf1:	pop    DWORD PTR fs:0x0
   1dcf8:	add    esp,0x18
   1dcfb:	pop    edi
   1dcfc:	pop    esi
   1dcfd:	pop    ebx
   1dcfe:	ret    
   1dcff:	mov    ecx,DWORD PTR [esp+0x4]
   1dd03:	test   DWORD PTR [ecx+0x4],0x6
   1dd0a:	mov    eax,0x1
   1dd0f:	je     0x1dd44
   1dd11:	mov    eax,DWORD PTR [esp+0x8]
   1dd15:	mov    ecx,DWORD PTR [eax+0x8]
   1dd18:	xor    ecx,eax
   1dd1a:	call   0x1da19
   1dd1f:	push   ebp
   1dd20:	mov    ebp,DWORD PTR [eax+0x18]
   1dd23:	push   DWORD PTR [eax+0xc]
   1dd26:	push   DWORD PTR [eax+0x10]
   1dd29:	push   DWORD PTR [eax+0x14]
   1dd2c:	call   0x1dc7c
   1dd31:	add    esp,0xc
   1dd34:	pop    ebp
   1dd35:	mov    eax,DWORD PTR [esp+0x8]
   1dd39:	mov    edx,DWORD PTR [esp+0x10]
   1dd3d:	mov    DWORD PTR [edx],eax
   1dd3f:	mov    eax,0x3
   1dd44:	ret    
   1dd45:	push   ebp
   1dd46:	mov    ecx,DWORD PTR [esp+0x8]
   1dd4a:	mov    ebp,DWORD PTR [ecx]
   1dd4c:	push   DWORD PTR [ecx+0x1c]
   1dd4f:	push   DWORD PTR [ecx+0x18]
   1dd52:	push   DWORD PTR [ecx+0x28]
   1dd55:	call   0x1dc7c
   1dd5a:	add    esp,0xc
   1dd5d:	pop    ebp
   1dd5e:	ret    0x4
   1dd61:	push   ebp
   1dd62:	push   esi
   1dd63:	push   edi
   1dd64:	push   ebx
   1dd65:	mov    ebp,edx
   1dd67:	xor    eax,eax
   1dd69:	xor    ebx,ebx
   1dd6b:	xor    edx,edx
   1dd6d:	xor    esi,esi
   1dd6f:	xor    edi,edi
   1dd71:	call   ecx
   1dd73:	pop    ebx
   1dd74:	pop    edi
   1dd75:	pop    esi
   1dd76:	pop    ebp
   1dd77:	ret    
   1dd78:	mov    ebp,edx
   1dd7a:	mov    esi,ecx
   1dd7c:	mov    eax,ecx
   1dd7e:	xor    eax,eax
   1dd80:	xor    ebx,ebx
   1dd82:	xor    ecx,ecx
   1dd84:	xor    edx,edx
   1dd86:	xor    edi,edi
   1dd88:	jmp    esi
   1dd8a:	push   ebp
   1dd8b:	mov    ebp,esp
   1dd8d:	push   ebx
   1dd8e:	push   esi
   1dd8f:	push   edi
   1dd90:	push   0x0
   1dd92:	push   0x0
   1dd94:	push   0x1dd9f
   1dd99:	push   ecx
   1dd9a:	call   0x1de24
   1dd9f:	pop    edi
   1dda0:	pop    esi
   1dda1:	pop    ebx
   1dda2:	pop    ebp
   1dda3:	ret    
   1dda4:	push   ebp
   1dda5:	mov    ebp,DWORD PTR [esp+0x8]
   1dda9:	push   edx
   1ddaa:	push   ecx
   1ddab:	push   DWORD PTR [esp+0x14]
   1ddaf:	call   0x1dc7c
   1ddb4:	add    esp,0xc
   1ddb7:	pop    ebp
   1ddb8:	ret    0x8
   1ddbb:	int3   
   1ddbc:	int3   
   1ddbd:	int3   
   1ddbe:	int3   
   1ddbf:	int3   
   1ddc0:	push   0x1db20
   1ddc5:	push   DWORD PTR fs:0x0
   1ddcc:	mov    eax,DWORD PTR [esp+0x10]
   1ddd0:	mov    DWORD PTR [esp+0x10],ebp
   1ddd4:	lea    ebp,[esp+0x10]
   1ddd8:	sub    esp,eax
   1ddda:	push   ebx
   1dddb:	push   esi
   1dddc:	push   edi
   1dddd:	mov    eax,ds:0x7771c
   1dde2:	xor    DWORD PTR [ebp-0x4],eax
   1dde5:	xor    eax,ebp
   1dde7:	mov    DWORD PTR [ebp-0x1c],eax
   1ddea:	push   eax
   1ddeb:	mov    DWORD PTR [ebp-0x18],esp
   1ddee:	push   DWORD PTR [ebp-0x8]
   1ddf1:	mov    eax,DWORD PTR [ebp-0x4]
   1ddf4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1ddfb:	mov    DWORD PTR [ebp-0x8],eax
   1ddfe:	lea    eax,[ebp-0x10]
   1de01:	mov    fs:0x0,eax
   1de07:	ret    
   1de08:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de0b:	xor    ecx,ebp
   1de0d:	call   0x1da19
   1de12:	jmp    0x1db01
   1de17:	int3   
   1de18:	int3   
   1de19:	int3   
   1de1a:	int3   
   1de1b:	int3   
   1de1c:	call   eax
   1de1e:	ret    
   1de1f:	int3   
   1de20:	int3   
   1de21:	int3   
   1de22:	int3   
   1de23:	int3   
   1de24:	jmp    DWORD PTR ds:0x1ee68
   1de2a:	pop    esp
   1de2b:	add    BYTE PTR [eax],al
   1de2d:	add    BYTE PTR [eax],al
   1de2f:	add    BYTE PTR [ebx+0x0],ch
   1de32:	bound  eax,QWORD PTR [eax]
   1de34:	add    BYTE PTR fs:[ecx+0x0],dh
   1de38:	add    BYTE PTR [eax],al
   1de3a:	add    BYTE PTR fs:[ebx],dh
   1de3d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de41:	add    BYTE PTR [eax],al
   1de43:	add    BYTE PTR [esi+0x0],ch
   1de46:	je     0x1de48
   1de48:	outs   dx,BYTE PTR ds:[esi]
   1de49:	add    BYTE PTR [eax],al
   1de4b:	add    BYTE PTR [ebx+0x0],dh
   1de4e:	jns    0x1de50
   1de50:	jae    0x1de52
   1de52:	popa   
   1de53:	add    BYTE PTR [eax],al
   1de55:	add    BYTE PTR [edi+0x0],dh
   1de58:	imul   eax,DWORD PTR [eax],0x65006e
   1de5e:	add    BYTE PTR [eax],al
   1de60:	jo     0x1de62
   1de62:	arpl   WORD PTR [eax],ax
   1de64:	imul   eax,DWORD PTR [eax],0x6d0000
   1de6a:	jae    0x1de6c
   1de6c:	jb     0x1de6e
   1de6e:	add    BYTE PTR [eax],al
   1de70:	je     0x1de72
   1de72:	ins    DWORD PTR es:[edi],dx
   1de73:	add    BYTE PTR [eax+0x0],dh
   1de76:	add    BYTE PTR [eax],al
   1de78:	jne    0x1de7a
   1de7a:	jae    0x1de7c
   1de7c:	bound  eax,QWORD PTR [eax]
   1de7e:	add    BYTE PTR [eax],al
   1de80:	outs   dx,DWORD PTR ds:[esi]
   1de81:	add    BYTE PTR [eax+eax*1+0x65],ch
   1de85:	add    BYTE PTR [eax],al
   1de87:	add    BYTE PTR [ecx+0x0],ah
   1de8a:	imul   eax,DWORD PTR [eax],0x70
   1de90:	push   0x0
   1de92:	popa   
   1de93:	add    BYTE PTR [ecx+0x0],bh
   1de96:	add    BYTE PTR [eax],al
   1de98:	jbe    0x1de9a
   1de9a:	add    BYTE PTR gs:[edx+0x0],dh
   1de9e:	add    BYTE PTR [eax],al
   1dea0:	jae    0x1dea2
   1dea2:	popa   
   1dea3:	add    BYTE PTR [ecx+0x0],ch
   1dea6:	add    BYTE PTR [eax],al
   1dea8:	ins    BYTE PTR es:[edi],dx
   1dea9:	add    BYTE PTR [ecx+0x0],ah
   1deac:	arpl   WORD PTR [eax],ax
   1deae:	add    BYTE PTR [eax],al
   1deb0:	push   0x0
   1deb2:	jo     0x1deb4
   1deb4:	add    BYTE PTR [bx+si],al
   1deb7:	add    BYTE PTR [eax+0x0],ch
   1deba:	imul   eax,DWORD PTR [eax],0x64
   1dec0:	jo     0x1dec2
   1dec2:	outs   dx,BYTE PTR ds:[esi]
   1dec3:	add    BYTE PTR [edi+0x0],ah
   1dec6:	add    BYTE PTR [eax],al
   1dec8:	add    ah,cl
   1deca:	dec    ebx
   1decb:	add    BYTE PTR [ebp+0x0],ah
   1dece:	push   ebx
   1decf:	add    BYTE PTR [ebp+0x0],ah
   1ded2:	jb     0x1ded4
   1ded4:	jbe    0x1ded6
   1ded6:	imul   eax,DWORD PTR [eax],0x650063
   1dedc:	inc    esp
   1dedd:	add    BYTE PTR [ebp+0x0],ah
   1dee0:	jae    0x1dee2
   1dee2:	arpl   WORD PTR [eax],ax
   1dee4:	jb     0x1dee6
   1dee6:	imul   eax,DWORD PTR [eax],0x740070
   1deec:	outs   dx,DWORD PTR ds:[esi]
   1deed:	add    BYTE PTR [edx+0x0],dh
   1def0:	push   esp
   1def1:	add    BYTE PTR [ecx+0x0],ah
   1def4:	bound  eax,QWORD PTR [eax]
   1def6:	ins    BYTE PTR es:[edi],dx
   1def7:	add    BYTE PTR [ebp+0x0],ah
   1defa:	add    BYTE PTR [eax],al
   1defc:	pop    edx
   1defd:	add    BYTE PTR [edi+0x0],dh
   1df00:	dec    edi
   1df01:	add    BYTE PTR [eax+0x0],dh
   1df04:	add    BYTE PTR gs:[esi+0x0],ch
   1df08:	push   eax
   1df09:	add    BYTE PTR [edx+0x0],dh
   1df0c:	outs   dx,DWORD PTR ds:[esi]
   1df0d:	add    BYTE PTR [ebx+0x0],ah
   1df10:	add    BYTE PTR gs:[ebx+0x0],dh
   1df14:	jae    0x1df16
   1df16:	add    BYTE PTR [eax],al
   1df18:	push   eax
   1df19:	add    BYTE PTR [ebx+0x0],dh
   1df1c:	push   ebx
   1df1d:	add    BYTE PTR [ebp+0x0],ah
   1df20:	je     0x1df22
   1df22:	dec    esp
   1df23:	add    BYTE PTR [edi+0x0],ch
   1df26:	popa   
   1df27:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df2b:	add    BYTE PTR [ebp+0x0],ch
   1df2e:	popa   
   1df2f:	add    BYTE PTR [edi+0x0],ah
   1df32:	add    BYTE PTR gs:[esi+0x0],cl
   1df36:	outs   dx,DWORD PTR ds:[esi]
   1df37:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df3b:	add    BYTE PTR [esi+0x0],ah
   1df3e:	jns    0x1df40
   1df40:	push   edx
   1df41:	add    BYTE PTR [edi+0x0],ch
   1df44:	jne    0x1df46
   1df46:	je     0x1df48
   1df48:	imul   eax,DWORD PTR [eax],0x65006e
   1df4e:	add    BYTE PTR [eax],al
   1df50:	pop    edx
   1df51:	add    BYTE PTR [edi+0x0],dh
   1df54:	inc    esp
   1df55:	add    BYTE PTR [ebp+0x0],dh
   1df58:	jo     0x1df5a
   1df5a:	ins    BYTE PTR es:[edi],dx
   1df5b:	add    BYTE PTR [ecx+0x0],ch
   1df5e:	arpl   WORD PTR [eax],ax
   1df60:	popa   
   1df61:	add    BYTE PTR [eax+eax*1+0x65],dh
   1df65:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1df69:	add    BYTE PTR [ebx+0x0],ch
   1df6c:	add    BYTE PTR gs:[esi+0x0],ch
   1df70:	add    BYTE PTR [eax],al
   1df72:	push   eax
   1df73:	add    BYTE PTR [ebx+0x0],dh
   1df76:	push   ebx
   1df77:	add    BYTE PTR [ebp+0x0],ah
   1df7a:	je     0x1df7c
   1df7c:	inc    ebx
   1df7d:	add    BYTE PTR [edx+0x0],dh
   1df80:	add    BYTE PTR gs:[ecx+0x0],ah
   1df84:	je     0x1df86
   1df86:	add    BYTE PTR gs:[eax+0x0],dl
   1df8a:	jb     0x1df8c
   1df8c:	outs   dx,DWORD PTR ds:[esi]
   1df8d:	add    BYTE PTR [ebx+0x0],ah
   1df90:	add    BYTE PTR gs:[ebx+0x0],dh
   1df94:	jae    0x1df96
   1df96:	dec    esi
   1df97:	add    BYTE PTR [edi+0x0],ch
   1df9a:	je     0x1df9c
   1df9c:	imul   eax,DWORD PTR [eax],0x790066
   1dfa2:	push   edx
   1dfa3:	add    BYTE PTR [edi+0x0],ch
   1dfa6:	jne    0x1dfa8
   1dfa8:	je     0x1dfaa
   1dfaa:	imul   eax,DWORD PTR [eax],0x65006e
   1dfb0:	add    BYTE PTR [eax],al
   1dfb2:	pop    edx
   1dfb3:	add    BYTE PTR [edi+0x0],dh
   1dfb6:	dec    edi
   1dfb7:	add    BYTE PTR [eax+0x0],dh
   1dfba:	add    BYTE PTR gs:[esi+0x0],ch
   1dfbe:	inc    esi
   1dfbf:	add    BYTE PTR [ecx+0x0],ch
   1dfc2:	ins    BYTE PTR es:[edi],dx
   1dfc3:	add    BYTE PTR [ebp+0x0],ah
   1dfc6:	add    BYTE PTR [eax],al
   1dfc8:	pop    edx
   1dfc9:	add    BYTE PTR [edi+0x0],dh
   1dfcc:	push   ecx
   1dfcd:	add    BYTE PTR [ebp+0x0],dh
   1dfd0:	add    BYTE PTR gs:[edx+0x0],dh
   1dfd4:	jns    0x1dfd6
   1dfd6:	dec    ecx
   1dfd7:	add    BYTE PTR [esi+0x0],ch
   1dfda:	data16 add BYTE PTR [edi+0x0],ch
   1dfde:	jb     0x1dfe0
   1dfe0:	ins    DWORD PTR es:[edi],dx
   1dfe1:	add    BYTE PTR [ecx+0x0],ah
   1dfe4:	je     0x1dfe6
   1dfe6:	imul   eax,DWORD PTR [eax],0x6e006f
   1dfec:	push   eax
   1dfed:	add    BYTE PTR [edx+0x0],dh
   1dff0:	outs   dx,DWORD PTR ds:[esi]
   1dff1:	add    BYTE PTR [ebx+0x0],ah
   1dff4:	add    BYTE PTR gs:[ebx+0x0],dh
   1dff8:	jae    0x1dffa
   1dffa:	add    BYTE PTR [eax],al
   1dffc:	pop    edx
   1dffd:	add    BYTE PTR [edi+0x0],dh
   1e000:	push   ecx
   1e001:	add    BYTE PTR [ebp+0x0],dh
   1e004:	add    BYTE PTR gs:[edx+0x0],dh
   1e008:	jns    0x1e00a
   1e00a:	push   ebx
   1e00b:	add    BYTE PTR [ecx+0x0],bh
   1e00e:	jae    0x1e010
   1e010:	je     0x1e012
   1e012:	add    BYTE PTR gs:[ebp+0x0],ch
   1e016:	dec    ecx
   1e017:	add    BYTE PTR [esi+0x0],ch
   1e01a:	data16 add BYTE PTR [edi+0x0],ch
   1e01e:	jb     0x1e020
   1e020:	ins    DWORD PTR es:[edi],dx
   1e021:	add    BYTE PTR [ecx+0x0],ah
   1e024:	je     0x1e026
   1e026:	imul   eax,DWORD PTR [eax],0x6e006f
   1e02c:	add    BYTE PTR [eax],al
   1e02e:	pop    edx
   1e02f:	add    BYTE PTR [edi+0x0],dh
   1e032:	dec    edi
   1e033:	add    BYTE PTR [eax+0x0],dh
   1e036:	add    BYTE PTR gs:[esi+0x0],ch
   1e03a:	dec    ebx
   1e03b:	add    BYTE PTR [ebp+0x0],ah
   1e03e:	jns    0x1e040
   1e040:	add    BYTE PTR [eax],al
   1e042:	pop    edx
   1e043:	add    BYTE PTR [edi+0x0],dh
   1e046:	inc    esp
   1e047:	add    BYTE PTR [ebp+0x0],ah
   1e04a:	ins    BYTE PTR es:[edi],dx
   1e04b:	add    BYTE PTR [ebp+0x0],ah
   1e04e:	je     0x1e050
   1e050:	add    BYTE PTR gs:[ebx+0x0],cl
   1e054:	add    BYTE PTR gs:[ecx+0x0],bh
   1e058:	add    BYTE PTR [eax],al
   1e05a:	pop    edx
   1e05b:	add    BYTE PTR [edi+0x0],dh
   1e05e:	push   ebx
   1e05f:	add    BYTE PTR [ebp+0x0],ah
   1e062:	je     0x1e064
   1e064:	push   esi
   1e065:	add    BYTE PTR [ecx+0x0],ah
   1e068:	ins    BYTE PTR es:[edi],dx
   1e069:	add    BYTE PTR [ebp+0x0],dh
   1e06c:	add    BYTE PTR gs:[ebx+0x0],cl
   1e070:	add    BYTE PTR gs:[ecx+0x0],bh
   1e074:	add    BYTE PTR [eax],al
   1e076:	pop    edx
   1e077:	add    BYTE PTR [edi+0x0],dh
   1e07a:	push   ecx
   1e07b:	add    BYTE PTR [ebp+0x0],dh
   1e07e:	add    BYTE PTR gs:[edx+0x0],dh
   1e082:	jns    0x1e084
   1e084:	push   esi
   1e085:	add    BYTE PTR [edi+0x0],ch
   1e088:	ins    BYTE PTR es:[edi],dx
   1e089:	add    BYTE PTR [ebp+0x0],dh
   1e08c:	ins    DWORD PTR es:[edi],dx
   1e08d:	add    BYTE PTR [ebp+0x0],ah
   1e090:	dec    ecx
   1e091:	add    BYTE PTR [esi+0x0],ch
   1e094:	data16 add BYTE PTR [edi+0x0],ch
   1e098:	jb     0x1e09a
   1e09a:	ins    DWORD PTR es:[edi],dx
   1e09b:	add    BYTE PTR [ecx+0x0],ah
   1e09e:	je     0x1e0a0
   1e0a0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0a6:	inc    esi
   1e0a7:	add    BYTE PTR [ecx+0x0],ch
   1e0aa:	ins    BYTE PTR es:[edi],dx
   1e0ab:	add    BYTE PTR [ebp+0x0],ah
   1e0ae:	add    BYTE PTR [eax],al
   1e0b0:	pop    edx
   1e0b1:	add    BYTE PTR [edi+0x0],dh
   1e0b4:	inc    ebx
   1e0b5:	add    BYTE PTR [edx+0x0],dh
   1e0b8:	add    BYTE PTR gs:[ecx+0x0],ah
   1e0bc:	je     0x1e0be
   1e0be:	add    BYTE PTR gs:[esi+0x0],al
   1e0c2:	imul   eax,DWORD PTR [eax],0x65006c
   1e0c8:	add    BYTE PTR [eax],al
   1e0ca:	push   edx
   1e0cb:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0cf:	add    BYTE PTR [ecx+0x0],cl
   1e0d2:	ins    DWORD PTR es:[edi],dx
   1e0d3:	add    BYTE PTR [ecx+0x0],ah
   1e0d6:	add    BYTE PTR [di+0x0],ah
   1e0da:	dec    esi
   1e0db:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e0df:	add    BYTE PTR [ebp+0x0],ah
   1e0e2:	popa   
   1e0e3:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e0e7:	add    BYTE PTR [edx+0x0],dh
   1e0ea:	add    BYTE PTR [eax],al
   1e0ec:	push   edx
   1e0ed:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0f1:	add    BYTE PTR [ecx+0x0],cl
   1e0f4:	ins    DWORD PTR es:[edi],dx
   1e0f5:	add    BYTE PTR [ecx+0x0],ah
   1e0f8:	add    BYTE PTR [di+0x0],ah
   1e0fc:	inc    esp
   1e0fd:	add    BYTE PTR [ecx+0x0],ch
   1e100:	jb     0x1e102
   1e102:	add    BYTE PTR gs:[ebx+0x0],ah
   1e106:	je     0x1e108
   1e108:	outs   dx,DWORD PTR ds:[esi]
   1e109:	add    BYTE PTR [edx+0x0],dh
   1e10c:	jns    0x1e10e
   1e10e:	inc    ebp
   1e10f:	add    BYTE PTR [esi+0x0],ch
   1e112:	je     0x1e114
   1e114:	jb     0x1e116
   1e116:	jns    0x1e118
   1e118:	push   esp
   1e119:	add    BYTE PTR [edi+0x0],ch
   1e11c:	inc    esp
   1e11d:	add    BYTE PTR [ecx+0x0],ah
   1e120:	je     0x1e122
   1e122:	popa   
   1e123:	add    BYTE PTR [eax],al
   1e125:	add    BYTE PTR [edx+0x0],bl
   1e128:	ja     0x1e12a
   1e12a:	dec    edi
   1e12b:	add    BYTE PTR [eax+0x0],dh
   1e12e:	add    BYTE PTR gs:[esi+0x0],ch
   1e132:	push   eax
   1e133:	add    BYTE PTR [edx+0x0],dh
   1e136:	outs   dx,DWORD PTR ds:[esi]
   1e137:	add    BYTE PTR [ebx+0x0],ah
   1e13a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e13e:	jae    0x1e140
   1e140:	push   esp
   1e141:	add    BYTE PTR [edi+0x0],ch
   1e144:	imul   eax,DWORD PTR [eax],0x65
   1e147:	add    BYTE PTR [esi+0x0],ch
   1e14a:	add    BYTE PTR [eax],al
   1e14c:	pop    edx
   1e14d:	add    BYTE PTR [edi+0x0],dh
   1e150:	push   ebx
   1e151:	add    BYTE PTR [ebp+0x0],ah
   1e154:	je     0x1e156
   1e156:	dec    ecx
   1e157:	add    BYTE PTR [esi+0x0],ch
   1e15a:	data16 add BYTE PTR [edi+0x0],ch
   1e15e:	jb     0x1e160
   1e160:	ins    DWORD PTR es:[edi],dx
   1e161:	add    BYTE PTR [ecx+0x0],ah
   1e164:	je     0x1e166
   1e166:	imul   eax,DWORD PTR [eax],0x6e006f
   1e16c:	push   eax
   1e16d:	add    BYTE PTR [edx+0x0],dh
   1e170:	outs   dx,DWORD PTR ds:[esi]
   1e171:	add    BYTE PTR [ebx+0x0],ah
   1e174:	add    BYTE PTR gs:[ebx+0x0],dh
   1e178:	jae    0x1e17a
   1e17a:	add    BYTE PTR [eax],al
   1e17c:	pop    edx
   1e17d:	add    BYTE PTR [edi+0x0],dh
   1e180:	push   ecx
   1e181:	add    BYTE PTR [ebp+0x0],dh
   1e184:	add    BYTE PTR gs:[edx+0x0],dh
   1e188:	jns    0x1e18a
   1e18a:	dec    ecx
   1e18b:	add    BYTE PTR [esi+0x0],ch
   1e18e:	data16 add BYTE PTR [edi+0x0],ch
   1e192:	jb     0x1e194
   1e194:	ins    DWORD PTR es:[edi],dx
   1e195:	add    BYTE PTR [ecx+0x0],ah
   1e198:	je     0x1e19a
   1e19a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1a0:	push   esp
   1e1a1:	add    BYTE PTR [eax+0x0],ch
   1e1a4:	jb     0x1e1a6
   1e1a6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1aa:	add    BYTE PTR fs:[eax],al
   1e1ad:	add    BYTE PTR [edx+0x0],bl
   1e1b0:	ja     0x1e1b2
   1e1b2:	inc    ebx
   1e1b3:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e1b7:	add    BYTE PTR [ebx+0x0],dh
   1e1ba:	add    BYTE PTR gs:[eax],al
   1e1bd:	add    BYTE PTR [edx+0x0],dl
   1e1c0:	je     0x1e1c2
   1e1c2:	ins    BYTE PTR es:[edi],dx
   1e1c3:	add    BYTE PTR [ecx+0x0],al
   1e1c6:	jae    0x1e1c8
   1e1c8:	jae    0x1e1ca
   1e1ca:	add    BYTE PTR gs:[edx+0x0],dh
   1e1ce:	je     0x1e1d0
   1e1d0:	add    BYTE PTR [eax],al
   1e1d2:	pop    edx
   1e1d3:	add    BYTE PTR [edi+0x0],dh
   1e1d6:	inc    ebp
   1e1d7:	add    BYTE PTR [esi+0x0],ch
   1e1da:	jne    0x1e1dc
   1e1dc:	ins    DWORD PTR es:[edi],dx
   1e1dd:	add    BYTE PTR [ebp+0x0],ah
   1e1e0:	jb     0x1e1e2
   1e1e2:	popa   
   1e1e3:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1e7:	add    BYTE PTR [ebx+0x0],cl
   1e1ea:	add    BYTE PTR gs:[ecx+0x0],bh
   1e1ee:	add    BYTE PTR [eax],al
   1e1f0:	pop    edx
   1e1f1:	add    BYTE PTR [edi+0x0],dh
   1e1f4:	dec    esp
   1e1f5:	add    BYTE PTR [edi+0x0],ch
   1e1f8:	popa   
   1e1f9:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e1fd:	add    BYTE PTR [edx+0x0],dh
   1e200:	imul   eax,DWORD PTR [eax],0x650076
   1e206:	jb     0x1e208
   1e208:	add    BYTE PTR [eax],al
   1e20a:	pop    edx
   1e20b:	add    BYTE PTR [edi+0x0],dh
   1e20e:	inc    ebx
   1e20f:	add    BYTE PTR [edx+0x0],dh
   1e212:	add    BYTE PTR gs:[ecx+0x0],ah
   1e216:	je     0x1e218
   1e218:	add    BYTE PTR gs:[ebx+0x0],cl
   1e21c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e220:	add    BYTE PTR [eax],al
   1e222:	dec    ecx
   1e223:	add    BYTE PTR [edi+0x0],ch
   1e226:	inc    esp
   1e227:	add    BYTE PTR [ebp+0x0],ah
   1e22a:	ins    BYTE PTR es:[edi],dx
   1e22b:	add    BYTE PTR [ebp+0x0],ah
   1e22e:	je     0x1e230
   1e230:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e235:	add    BYTE PTR [esi+0x0],dh
   1e238:	imul   eax,DWORD PTR [eax],0x650063
   1e23e:	add    BYTE PTR [eax],al
   1e240:	dec    ebx
   1e241:	add    BYTE PTR [ebp+0x0],ah
   1e244:	inc    esp
   1e245:	add    BYTE PTR [ebp+0x0],ah
   1e248:	je     0x1e24a
   1e24a:	popa   
   1e24b:	add    BYTE PTR [ebx+0x0],ah
   1e24e:	push   0x72005000
   1e253:	add    BYTE PTR [edi+0x0],ch
   1e256:	arpl   WORD PTR [eax],ax
   1e258:	add    BYTE PTR gs:[ebx+0x0],dh
   1e25c:	jae    0x1e25e
   1e25e:	add    BYTE PTR [eax],al
   1e260:	dec    ebx
   1e261:	add    BYTE PTR [ebp+0x0],ah
   1e264:	inc    ecx
   1e265:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e269:	add    BYTE PTR [ecx+0x0],ah
   1e26c:	arpl   WORD PTR [eax],ax
   1e26e:	push   0x72005000
   1e273:	add    BYTE PTR [edi+0x0],ch
   1e276:	arpl   WORD PTR [eax],ax
   1e278:	add    BYTE PTR gs:[ebx+0x0],dh
   1e27c:	jae    0x1e27e
   1e27e:	add    BYTE PTR [eax],al
   1e280:	pop    edx
   1e281:	add    BYTE PTR [edi+0x0],dh
   1e284:	push   ecx
   1e285:	add    BYTE PTR [ebp+0x0],dh
   1e288:	add    BYTE PTR gs:[edx+0x0],dh
   1e28c:	jns    0x1e28e
   1e28e:	push   esi
   1e28f:	add    BYTE PTR [ecx+0x0],ah
   1e292:	ins    BYTE PTR es:[edi],dx
   1e293:	add    BYTE PTR [ebp+0x0],dh
   1e296:	add    BYTE PTR gs:[ebx+0x0],cl
   1e29a:	add    BYTE PTR gs:[ecx+0x0],bh
   1e29e:	add    BYTE PTR [eax],al
   1e2a0:	pop    edx
   1e2a1:	add    BYTE PTR [edi+0x0],dh
   1e2a4:	push   edx
   1e2a5:	add    BYTE PTR [ebp+0x0],ah
   1e2a8:	popa   
   1e2a9:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2ad:	add    BYTE PTR [ecx+0x0],ch
   1e2b0:	ins    BYTE PTR es:[edi],dx
   1e2b1:	add    BYTE PTR [ebp+0x0],ah
   1e2b4:	add    BYTE PTR [eax],al
   1e2b6:	pop    edx
   1e2b7:	add    BYTE PTR [edi+0x0],dh
   1e2ba:	push   ebx
   1e2bb:	add    BYTE PTR [ebp+0x0],ah
   1e2be:	je     0x1e2c0
   1e2c0:	dec    ecx
   1e2c1:	add    BYTE PTR [esi+0x0],ch
   1e2c4:	data16 add BYTE PTR [edi+0x0],ch
   1e2c8:	jb     0x1e2ca
   1e2ca:	ins    DWORD PTR es:[edi],dx
   1e2cb:	add    BYTE PTR [ecx+0x0],ah
   1e2ce:	je     0x1e2d0
   1e2d0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e2d6:	inc    esi
   1e2d7:	add    BYTE PTR [ecx+0x0],ch
   1e2da:	ins    BYTE PTR es:[edi],dx
   1e2db:	add    BYTE PTR [ebp+0x0],ah
   1e2de:	add    BYTE PTR [eax],al
   1e2e0:	pop    edx
   1e2e1:	add    BYTE PTR [edi+0x0],dh
   1e2e4:	push   edi
   1e2e5:	add    BYTE PTR [edx+0x0],dh
   1e2e8:	imul   eax,DWORD PTR [eax],0x650074
   1e2ee:	inc    esi
   1e2ef:	add    BYTE PTR [ecx+0x0],ch
   1e2f2:	ins    BYTE PTR es:[edi],dx
   1e2f3:	add    BYTE PTR [ebp+0x0],ah
   1e2f6:	add    BYTE PTR [eax],al
   1e2f8:	pop    edx
   1e2f9:	add    BYTE PTR [edi+0x0],dh
   1e2fc:	push   ecx
   1e2fd:	add    BYTE PTR [ebp+0x0],dh
   1e300:	add    BYTE PTR gs:[edx+0x0],dh
   1e304:	jns    0x1e306
   1e306:	dec    ecx
   1e307:	add    BYTE PTR [esi+0x0],ch
   1e30a:	data16 add BYTE PTR [edi+0x0],ch
   1e30e:	jb     0x1e310
   1e310:	ins    DWORD PTR es:[edi],dx
   1e311:	add    BYTE PTR [ecx+0x0],ah
   1e314:	je     0x1e316
   1e316:	imul   eax,DWORD PTR [eax],0x6e006f
   1e31c:	inc    esi
   1e31d:	add    BYTE PTR [ecx+0x0],ch
   1e320:	ins    BYTE PTR es:[edi],dx
   1e321:	add    BYTE PTR [ebp+0x0],ah
   1e324:	add    BYTE PTR [eax],al
   1e326:	dec    ecx
   1e327:	add    BYTE PTR [edi+0x0],ch
   1e32a:	inc    ebx
   1e32b:	add    BYTE PTR [edx+0x0],dh
   1e32e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e332:	je     0x1e334
   1e334:	add    BYTE PTR gs:[ebx+0x0],dl
   1e338:	jns    0x1e33a
   1e33a:	ins    DWORD PTR es:[edi],dx
   1e33b:	add    BYTE PTR [edx+0x0],ah
   1e33e:	outs   dx,DWORD PTR ds:[esi]
   1e33f:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e343:	add    BYTE PTR [ebx+0x0],ah
   1e346:	dec    esp
   1e347:	add    BYTE PTR [ecx+0x0],ch
   1e34a:	outs   dx,BYTE PTR ds:[esi]
   1e34b:	add    BYTE PTR [ebx+0x0],ch
   1e34e:	add    BYTE PTR [eax],al
   1e350:	dec    ecx
   1e351:	add    BYTE PTR [edi+0x0],ch
   1e354:	inc    ebx
   1e355:	add    BYTE PTR [edx+0x0],dh
   1e358:	add    BYTE PTR gs:[ecx+0x0],ah
   1e35c:	je     0x1e35e
   1e35e:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e363:	add    BYTE PTR [esi+0x0],dh
   1e366:	imul   eax,DWORD PTR [eax],0x650063
   1e36c:	add    BYTE PTR [eax],al
   1e36e:	push   ebx
   1e36f:	add    BYTE PTR [ebp+0x0],ah
   1e372:	inc    ebx
   1e373:	add    BYTE PTR [edx+0x0],dh
   1e376:	add    BYTE PTR gs:[ecx+0x0],ah
   1e37a:	je     0x1e37c
   1e37c:	add    BYTE PTR gs:[ebx+0x0],al
   1e380:	ins    BYTE PTR es:[edi],dx
   1e381:	add    BYTE PTR [ecx+0x0],ch
   1e384:	add    BYTE PTR gs:[esi+0x0],ch
   1e388:	je     0x1e38a
   1e38a:	push   ebx
   1e38b:	add    BYTE PTR [ebp+0x0],ah
   1e38e:	arpl   WORD PTR [eax],ax
   1e390:	jne    0x1e392
   1e392:	jb     0x1e394
   1e394:	imul   eax,DWORD PTR [eax],0x790074
   1e39a:	add    BYTE PTR [eax],al
   1e39c:	pop    edx
   1e39d:	add    BYTE PTR [edi+0x0],dh
   1e3a0:	dec    ebp
   1e3a1:	add    BYTE PTR [ecx+0x0],ah
   1e3a4:	jo     0x1e3a6
   1e3a6:	push   esi
   1e3a7:	add    BYTE PTR [ecx+0x0],ch
   1e3aa:	add    BYTE PTR gs:[edi+0x0],dh
   1e3ae:	dec    edi
   1e3af:	add    BYTE PTR [esi+0x0],ah
   1e3b2:	push   ebx
   1e3b3:	add    BYTE PTR [ebp+0x0],ah
   1e3b6:	arpl   WORD PTR [eax],ax
   1e3b8:	je     0x1e3ba
   1e3ba:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3c0:	add    BYTE PTR [eax],al
   1e3c2:	pop    edx
   1e3c3:	add    BYTE PTR [edi+0x0],dh
   1e3c6:	inc    ebx
   1e3c7:	add    BYTE PTR [edx+0x0],dh
   1e3ca:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3ce:	je     0x1e3d0
   1e3d0:	add    BYTE PTR gs:[ebx+0x0],dl
   1e3d4:	add    BYTE PTR gs:[ebx+0x0],ah
   1e3d8:	je     0x1e3da
   1e3da:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3e0:	add    BYTE PTR [eax],al
   1e3e2:	pop    edx
   1e3e3:	add    BYTE PTR [edi+0x0],dh
   1e3e6:	push   ebp
   1e3e7:	add    BYTE PTR [esi+0x0],ch
   1e3ea:	ins    DWORD PTR es:[edi],dx
   1e3eb:	add    BYTE PTR [ecx+0x0],ah
   1e3ee:	jo     0x1e3f0
   1e3f0:	push   esi
   1e3f1:	add    BYTE PTR [ecx+0x0],ch
   1e3f4:	add    BYTE PTR gs:[edi+0x0],dh
   1e3f8:	dec    edi
   1e3f9:	add    BYTE PTR [esi+0x0],ah
   1e3fc:	push   ebx
   1e3fd:	add    BYTE PTR [ebp+0x0],ah
   1e400:	arpl   WORD PTR [eax],ax
   1e402:	je     0x1e404
   1e404:	imul   eax,DWORD PTR [eax],0x6e006f
   1e40a:	add    BYTE PTR [eax],al
   1e40c:	dec    ebx
   1e40d:	add    BYTE PTR [ebp+0x0],ah
   1e410:	dec    ecx
   1e411:	add    BYTE PTR [esi+0x0],ch
   1e414:	imul   eax,DWORD PTR [eax],0x690074
   1e41a:	popa   
   1e41b:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e41f:	add    BYTE PTR [edx+0x0],bh
   1e422:	add    BYTE PTR gs:[ebp+0x0],cl
   1e426:	jne    0x1e428
   1e428:	je     0x1e42a
   1e42a:	add    BYTE PTR gs:[eax+0x0],bh
   1e42e:	add    BYTE PTR [eax],al
   1e430:	push   eax
   1e431:	add    BYTE PTR [ebx+0x0],dh
   1e434:	dec    esp
   1e435:	add    BYTE PTR [edi+0x0],ch
   1e438:	outs   dx,DWORD PTR ds:[esi]
   1e439:	add    BYTE PTR [ebx+0x0],ch
   1e43c:	jne    0x1e43e
   1e43e:	jo     0x1e440
   1e440:	push   eax
   1e441:	add    BYTE PTR [edx+0x0],dh
   1e444:	outs   dx,DWORD PTR ds:[esi]
   1e445:	add    BYTE PTR [ebx+0x0],ah
   1e448:	add    BYTE PTR gs:[ebx+0x0],dh
   1e44c:	jae    0x1e44e
   1e44e:	inc    edx
   1e44f:	add    BYTE PTR [ecx+0x0],bh
   1e452:	push   eax
   1e453:	add    BYTE PTR [edx+0x0],dh
   1e456:	outs   dx,DWORD PTR ds:[esi]
   1e457:	add    BYTE PTR [ebx+0x0],ah
   1e45a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e45e:	jae    0x1e460
   1e460:	dec    ecx
   1e461:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e465:	add    BYTE PTR [ebx+0x0],cl
   1e468:	add    BYTE PTR gs:[edi+0x0],al
   1e46c:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e471:	add    BYTE PTR [ebp+0x0],dh
   1e474:	jb     0x1e476
   1e476:	jb     0x1e478
   1e478:	add    BYTE PTR gs:[esi+0x0],ch
   1e47c:	je     0x1e47e
   1e47e:	push   esp
   1e47f:	add    BYTE PTR [eax+0x0],ch
   1e482:	jb     0x1e484
   1e484:	add    BYTE PTR gs:[ecx+0x0],ah
   1e488:	add    BYTE PTR fs:[eax],al
   1e48b:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e48f:	add    BYTE PTR [ecx],cl
   1e491:	add    BYTE PTR ds:0xb2000000,dl
   1e497:	push   0xffffff88
   1e499:	das    
   1e49a:	mov    BYTE PTR [ecx+ecx*4-0x44],al
   1e49e:	mov    bl,0x61
   1e4a0:	sti    
   1e4a1:	adc    al,ah
   1e4a3:	jae    0x1e47b
   1e4a5:	dec    edi
   1e4a6:	inc    ebx
   1e4a7:	ret    
   1e4a8:	test   al,0xc5
   1e4aa:	fs lahf 
   1e4ac:	pop    esi
   1e4ad:	call   ecx
   1e4af:	shl    BYTE PTR [esi+0x72],0x14
   1e4b3:	xchg   esi,eax
   1e4b4:	fsubr  DWORD PTR [edx+0x4]
   1e4b7:	jmp    FWORD PTR [ebp-0x73]
   1e4ba:	mov    ds:0x82bb7899,al
   1e4bf:	add    al,0x1a
   1e4c1:	push   eax
   1e4c2:	fadd   QWORD PTR [ecx+0x22]
   1e4c5:	pop    esi
   1e4c6:	jp     0x1e47f
   1e4c8:	and    eax,0xb1f976f8
   1e4cd:	add    BYTE PTR [ebx+0x0],dl
   1e4d0:	daa    
   1e4d1:	add    BYTE PTR ds:0x6001300,dl
   1e4d7:	add    BYTE PTR [eax],al
   1e4d9:	add    BYTE PTR [ecx-0xa],dl
   1e4dc:	lods   al,BYTE PTR ds:[esi]
   1e4dd:	arpl   dx,ax
   1e4df:	popf   
   1e4e0:	xchg   edx,eax
   1e4e1:	xchg   esi,eax
   1e4e2:	and    DWORD PTR [ecx],esp
   1e4e4:	push   ebx
   1e4e5:	or     eax,0x759025b1
   1e4ea:	inc    ecx
   1e4eb:	push   0xa67c53ee
   1e4f0:	sbb    al,0x60
   1e4f2:	ss dec edi
   1e4f4:	xchg   DWORD PTR [edi+0x7],esi
   1e4f7:	jbe    0x1e575
   1e4f9:	rcl    BYTE PTR [edi],1
   1e4fb:	fidivr WORD PTR [ebp-0x73]
   1e4fe:	pop    ebx
   1e4ff:	cs add ah,cl
   1e502:	dec    ecx
   1e503:	add    BYTE PTR [eax+eax*1],ah
   1e506:	or     al,0x0
   1e508:	push   es
   1e509:	add    BYTE PTR [edx],al
   1e50b:	add    BYTE PTR ds:0x15003100,dh
   1e511:	add    BYTE PTR [eax+eax*1],bl
   1e514:	add    BYTE PTR [eax],al
   1e516:	ret    0xff32
   1e519:	adc    eax,0x5240be5
   1e51e:	call   FWORD PTR cs:[edx]
   1e521:	in     al,dx
   1e522:	aad    0x5
   1e524:	ds jbe 0x1e559
   1e527:	mov    ebp,0xe1648a8f
   1e52c:	outs   dx,DWORD PTR ds:[esi]
   1e52d:	lock popa 
   1e52f:	icebp  
   1e530:	mov    esi,0xd7874514
   1e535:	shl    bh,0x5f
   1e538:	call   0x89136e63
   1e53d:	lods   al,BYTE PTR ds:[esi]
   1e53e:	push   ebp
   1e53f:	iret   
   1e540:	jg     0x1e4cc
   1e542:	add    eax,0x8f1cd357
   1e547:	mov    eax,0xefe10ea2
   1e54c:	ins    DWORD PTR es:[edi],dx
   1e54d:	outs   dx,BYTE PTR ds:[esi]
   1e54e:	add    ah,cl
   1e550:	add    BYTE PTR cs:[edx+0x0],cl
   1e554:	or     BYTE PTR [eax],al
   1e556:	add    BYTE PTR [eax],al
   1e558:	add    BYTE PTR [eax],al
   1e55a:	push   es
   1e55b:	xchg   edi,eax
   1e55c:	push   0xffffff85
   1e55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e55f:	jp     0x1e5dc
   1e561:	inc    ecx
   1e562:	push   cs
   1e563:	fisub  DWORD PTR ds:0x86e4992
   1e569:	cmp    ecx,ebp
   1e56b:	mov    al,ds:0x793d4be5
   1e570:	lock pop ebx
   1e572:	mov    ?,WORD PTR [esi-0x639aa53c]
   1e578:	fs jns 0x1e4ff
   1e57b:	pusha  
   1e57c:	xchg   edx,eax
   1e57d:	lahf   
   1e57e:	jmp    0x99004094
   1e583:	out    dx,al
   1e584:	retf   0x6e00
   1e587:	add    BYTE PTR [edx],bl
   1e589:	add    BYTE PTR [eax],dl
   1e58b:	add    BYTE PTR [eax],cl
   1e58d:	add    BYTE PTR [eax],al
   1e58f:	add    BYTE PTR [edx+0x0],al
   1e592:	dec    edx
   1e593:	add    BYTE PTR [eax],cl
   1e595:	add    BYTE PTR [eax],al
   1e597:	add    BYTE PTR [eax],al
   1e599:	add    BYTE PTR ds:0x143551e1,cl
   1e59f:	cmc    
   1e5a0:	jno    0x1e538
   1e5a2:	jmp    0xe60ff9c
   1e5a7:	ja     0x1e5f0
   1e5a9:	push   esp
   1e5aa:	jp     0x1e5fd
   1e5ac:	out    0x93,eax
   1e5ae:	pop    es
   1e5af:	les    edi,FWORD PTR [edx]
   1e5b1:	rcl    DWORD PTR [esi-0x35],0x17
   1e5b5:	fisub  DWORD PTR [ebx-0x52]
   1e5b8:	out    dx,eax
   1e5b9:	pop    esi
   1e5ba:	inc    edx
   1e5bb:	shr    BYTE PTR [esi-0x14c7b905],0xa6
   1e5c2:	sbb    BYTE PTR [edx-0x4896c2fd],ch
   1e5c8:	add    ah,cl
   1e5ca:	inc    edx
   1e5cb:	daa    
   1e5cc:	add    BYTE PTR ds:0xcc72cc00,dl
   1e5d2:	jg     0x1e585
   1e5d4:	retf   0x1562
   1e5d7:	add    dh,BYTE PTR [edi]
   1e5d9:	dec    esi
   1e5da:	stc    
   1e5db:	mov    eax,ds:0x59233c7e
   1e5e0:	push   edx
   1e5e1:	inc    esp
   1e5e2:	popa   
   1e5e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e5e4:	dec    edi
   1e5e5:	popf   
   1e5e6:	loopne 0x1e646
   1e5e8:	pop    esp
   1e5e9:	je     0x1e632
   1e5eb:	test   eax,0x4941c993
   1e5f0:	gs dec esp
   1e5f2:	in     al,0xbb
   1e5f4:	push   ss
   1e5f5:	jle    0x1e642
   1e5f7:	lods   al,BYTE PTR ds:[esi]
   1e5f8:	mov    ds:0x53cc0076,al
   1e5fd:	aas    
   1e5fe:	or     DWORD PTR [eax],eax
   1e600:	adc    eax,0x9395a400
   1e605:	mov    cl,0x35
   1e607:	or     al,0xe6
   1e609:	mov    bh,0x5b
   1e60b:	imul   edx,DWORD PTR [ebx-0x1748ee35],0xffffff83
   1e612:	and    eax,0xb874104f
   1e617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e618:	or     BYTE PTR [esi],bh
   1e61a:	sbb    al,0x22
   1e61c:	push   0xffffff8b
   1e61e:	dec    edx
   1e61f:	in     al,0x7d
   1e621:	inc    esi
   1e622:	inc    ecx
   1e623:	je     0x1e5f0
   1e625:	mov    ds,WORD PTR [edi+0x31]
   1e628:	jo     0x1e5c1
   1e62a:	xor    ecx,eax
   1e62c:	neg    edi
   1e62e:	inc    ecx
   1e62f:	add    eax,DWORD PTR [eax]
   1e631:	int3   
   1e632:	inc    ebx
   1e633:	xor    DWORD PTR [edi],edx
   1e635:	add    al,0x15
   1e637:	adc    DWORD PTR [ecx],esi
   1e639:	cmp    al,0x1a
   1e63b:	pop    ss
   1e63c:	add    al,0x5
   1e63e:	add    ah,cl
   1e640:	push   esi
   1e641:	and    DWORD PTR [esi],edx
   1e643:	test   DWORD PTR [ecx+ecx*8],edi
   1e646:	mov    ebx,0x5b59dae0
   1e64b:	mov    ebp,0x22b0cce9
   1e650:	scas   eax,DWORD PTR es:[edi]
   1e651:	and    DWORD PTR [ecx+0x7fd0c405],ecx
   1e657:	dec    ebx
   1e658:	push   esi
   1e659:	sub    DWORD PTR [edi],esp
   1e65b:	push   ecx
   1e65c:	nop
   1e65d:	mov    eax,ds:0xdb9e5b66
   1e662:	add    eax,0x945065cf
   1e667:	inc    eax
   1e668:	scas   eax,DWORD PTR es:[edi]
   1e669:	in     al,0x0
   1e66b:	int3   
   1e66c:	dec    esp
   1e66d:	and    ecx,DWORD PTR [esi]
   1e66f:	add    eax,0x100b2528
   1e674:	adc    edx,DWORD PTR [ebx]
   1e676:	or     edi,DWORD PTR [eax]
   1e678:	add    ah,cl
   1e67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e67b:	and    dh,BYTE PTR [ecx-0x7b8f8804]
   1e681:	xor    dl,BYTE PTR [ecx]
   1e683:	dec    eax
   1e684:	sahf   
   1e685:	mov    WORD PTR [eax-0x1a],?
   1e688:	sbb    ecx,DWORD PTR [esi+ebp*8]
   1e68b:	adc    al,0x98
   1e68d:	test   BYTE PTR [esi],cl
   1e68f:	adc    al,0x0
   1e691:	sub    al,0x7f
   1e693:	sub    DWORD PTR [bp-0x4b90],edx
   1e698:	stos   BYTE PTR es:[edi],al
   1e699:	test   DWORD PTR [ecx-0xb6bfbec],eax
   1e69f:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1e6a3:	add    eax,0x100b2528
   1e6a8:	adc    edx,DWORD PTR [ebx]
   1e6aa:	or     ebp,DWORD PTR [esi]
   1e6ac:	add    ah,cl
   1e6ae:	inc    esp
   1e6af:	sbb    ebx,DWORD PTR [esi]
   1e6b1:	push   esp
   1e6b2:	xchg   BYTE PTR [ebx],dh
   1e6b4:	inc    edx
   1e6b5:	stc    
   1e6b6:	fdivrp st(1),st
   1e6b8:	push   eax
   1e6b9:	mov    dh,0xf5
   1e6bb:	dec    esi
   1e6bc:	pushf  
   1e6bd:	sahf   
   1e6be:	cwde   
   1e6bf:	shl    esp,0xe8
   1e6c2:	inc    eax
   1e6c3:	xor    dl,BYTE PTR [ebp+0x20]
   1e6c6:	cmp    eax,0x1f21b136
   1e6cb:	in     al,dx
   1e6cc:	mov    esp,gs
   1e6ce:	add    ah,cl
   1e6d0:	imul   eax,DWORD PTR [eax],0xe
   1e6d3:	add    BYTE PTR [edi],dl
   1e6d5:	add    BYTE PTR [eax+eax*1],bl
   1e6d8:	or     eax,DWORD PTR [eax]
   1e6da:	or     DWORD PTR [eax],eax
   1e6dc:	pop    edi
   1e6dd:	add    BYTE PTR [ecx],al
   1e6df:	add    BYTE PTR [eax+eax*1],bl
   1e6e2:	dec    edx
   1e6e3:	add    BYTE PTR [eax],cl
   1e6e5:	add    BYTE PTR [eax],al
   1e6e7:	add    BYTE PTR [eax],al
   1e6e9:	add    BYTE PTR [edi-0x34],bh
   1e6ec:	inc    ecx
   1e6ed:	jnp    0x1e719
   1e6ef:	add    BYTE PTR [ecx-0x63],cl
   1e6f2:	rcl    ecx,1
   1e6f4:	adc    cl,bh
   1e6f6:	sbb    DWORD PTR [ecx],esp
   1e6f8:	adc    DWORD PTR [ebp+0x5432173c],esp
   1e6fe:	sbb    ebp,esi
   1e700:	icebp  
   1e701:	xlat   BYTE PTR ds:[ebx]
   1e702:	xor    cl,ch
   1e704:	test   DWORD PTR [ecx+ebx*4],ecx
   1e707:	shl    DWORD PTR [ecx+0x6e0082b3],1
   1e70d:	sbb    dl,BYTE PTR [eax]
   1e70f:	or     BYTE PTR [eax],al
   1e711:	inc    edx
   1e712:	dec    edx
   1e713:	or     BYTE PTR [eax],al
   1e715:	add    BYTE PTR ds:0xfc25453d,dh
   1e71b:	or     ebp,DWORD PTR [eax+edx*8-0x5536a4c7]
   1e722:	mov    dl,0x41
   1e724:	sbb    eax,0x5e55de34
   1e729:	inc    edi
   1e72a:	neg    BYTE PTR [ecx]
   1e72c:	mov    cl,dh
   1e72e:	and    BYTE PTR [ecx+0x5f],cl
   1e731:	jbe    0x1e708
   1e733:	jp     0x1e79a
   1e735:	pop    ds
   1e736:	xor    bl,BYTE PTR [edx]
   1e738:	pop    edx
   1e739:	add    al,0xf
   1e73b:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e73f:	add    BYTE PTR [edx],ch
   1e741:	add    BYTE PTR [edx],cl
   1e743:	add    BYTE PTR [edi],al
   1e745:	add    BYTE PTR [ecx],dl
   1e747:	add    BYTE PTR [eax],cl
   1e749:	add    BYTE PTR [edi],bh
   1e74b:	add    BYTE PTR ds:0x1b000000,bh
   1e751:	add    BYTE PTR [eax],ch
   1e753:	add    BYTE PTR [edi],ch
   1e755:	add    BYTE PTR [edx],cl
   1e757:	add    BYTE PTR [edx],cl
   1e759:	add    BYTE PTR [edi],al
   1e75b:	add    BYTE PTR [ecx],dl
   1e75d:	add    BYTE PTR [eax],cl
   1e75f:	add    BYTE PTR [esi+0x0],bl
   1e762:	add    DWORD PTR [eax],eax
   1e764:	outs   dx,BYTE PTR ds:[esi]
   1e765:	add    BYTE PTR [eax],al
   1e767:	add    dl,dl
   1e769:	add    eax,0x150f9ed4
   1e76e:	imul   ebp,DWORD PTR ds:0x49a612e7,0x912cbbad
   1e778:	dec    esp
   1e779:	pop    edx
   1e77a:	loope  0x1e7e6
   1e77c:	push   edi
   1e77d:	lock or al,0x18
   1e780:	into   
   1e781:	rcl    DWORD PTR [edx+0x53ad01a2],1
   1e787:	dec    edi
   1e788:	dec    eax
   1e789:	imul   edi,DWORD PTR [eax-0x5d],0x202045e9
   1e790:	or     DWORD PTR [edx-0x44f9d2e4],esi
   1e796:	xor    ebx,DWORD PTR [ebx]
   1e798:	push   ebp
   1e799:	push   0xda6c83a7
   1e79e:	add    ah,cl
   1e7a0:	fsubr  st(0),st
   1e7a2:	and    BYTE PTR [ebx],0x35
   1e7a5:	cmp    BYTE PTR [ebp+0x4f],ch
   1e7a8:	jno    0x1e747
   1e7aa:	jae    0x1e7e0
   1e7ac:	retf   0xaacd
   1e7af:	jno    0x1e771
   1e7b1:	dec    edi
   1e7b2:	adc    DWORD PTR [edi-0x4b7d7a68],edi
   1e7b8:	xor    eax,0xd4de2193
   1e7bd:	gs push ecx
   1e7bf:	rcr    DWORD PTR [esp+ecx*2+0x655a7526],0xec
   1e7c7:	xchg   edi,eax
   1e7c8:	sub    al,dl
   1e7ca:	push   esi
   1e7cb:	fwait
   1e7cc:	sbb    BYTE PTR [esi],cl
   1e7ce:	(bad)
   1e7d1:	mov    dh,0xd9
   1e7d3:	in     eax,0x45
   1e7d5:	jecxz  0x1e7d7
   1e7d7:	int3   
   1e7d8:	mov    eax,ds:0x909037b9
   1e7dd:	ret    0xce77
   1e7e0:	frstor [ecx-0x37]
   1e7e3:	addr16 leave 
   1e7e5:	or     eax,ebx
   1e7e7:	push   edi
   1e7e8:	inc    ebp
   1e7e9:	je     0x1e819
   1e7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e7ec:	retf   0xb5e3
   1e7ef:	(bad)  
   1e7f1:	pop    edi
   1e7f2:	push   edx
   1e7f3:	outs   dx,DWORD PTR ds:[esi]
   1e7f4:	pop    ecx
   1e7f5:	inc    ecx
   1e7f6:	and    BYTE PTR [ebp+0x68],dh
   1e7f9:	(bad)  
   1e7fa:	and    al,0xaa
   1e7fc:	nop
   1e7fd:	mov    cl,0x20
   1e7ff:	adc    eax,DWORD PTR [eax]
   1e801:	int3   
   1e802:	add    BYTE PTR cs:[ebp+0x0],bl
   1e806:	or     al,BYTE PTR [eax]
   1e808:	or     al,BYTE PTR [eax]
   1e80a:	add    BYTE PTR [eax],al
   1e80c:	shr    DWORD PTR [edx+0x24],0xeb
   1e810:	jmp    0x281602e7
   1e815:	cmp    esi,ebp
   1e817:	shr    BYTE PTR ds:0x7fcb0f00,0x76
   1e81e:	outs   dx,BYTE PTR ds:[esi]
   1e81f:	shr    eax,0x56
   1e822:	out    0x8b,eax
   1e824:	inc    edx
   1e825:	xchg   edx,eax
   1e827:	mov    al,ds:0x7531bfd8
   1e82c:	inc    ecx
   1e82d:	mov    ecx,0x48c6632b
   1e832:	ret    0x5587
   1e835:	xor    BYTE PTR [ebp+edi*8+0x0],0xcc
   1e83a:	pop    esp
   1e83b:	add    BYTE PTR [edi],cl
   1e83d:	add    BYTE PTR [edx],ch
   1e83f:	add    BYTE PTR [edx],cl
   1e841:	add    BYTE PTR [edi],al
   1e843:	add    BYTE PTR [ecx],dl
   1e845:	add    BYTE PTR [eax],cl
   1e847:	add    BYTE PTR [edi],bh
   1e849:	add    BYTE PTR ds:0x1b000000,bh
   1e84f:	add    BYTE PTR [eax],ch
   1e851:	add    BYTE PTR [edi],ch
   1e853:	add    BYTE PTR [edx],cl
   1e855:	add    BYTE PTR [edx],cl
   1e857:	add    BYTE PTR [edi],al
   1e859:	add    BYTE PTR [ecx],dl
   1e85b:	add    BYTE PTR [eax],cl
   1e85d:	add    BYTE PTR [esi+0x0],bl
   1e860:	add    DWORD PTR [eax],eax
   1e862:	outs   dx,BYTE PTR ds:[esi]
   1e863:	add    BYTE PTR [eax],bh
   1e865:	add    BYTE PTR [esi],dl
   1e867:	add    BYTE PTR [ebx],bl
   1e869:	add    BYTE PTR [edi],bl
   1e86b:	add    BYTE PTR [ebx],dl
   1e86d:	add    BYTE PTR [edi],dl
   1e86f:	add    BYTE PTR [ecx],al
   1e871:	add    BYTE PTR [edi],ch
   1e873:	add    BYTE PTR [eax],al
   1e875:	add    BYTE PTR [ecx-0x7c],al
   1e878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e879:	int3   
   1e87a:	add    al,0x99
   1e87c:	inc    eax
   1e87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e87e:	inc    esi
   1e87f:	xchg   esp,eax
   1e880:	cs ret 
   1e882:	adc    DWORD PTR [edx-0x5],eax
   1e885:	jne    0x1e88a
   1e887:	rcr    DWORD PTR [eax-0x54],0x1b
   1e88b:	xor    al,0xf6
   1e88d:	addr16 fwait
   1e88f:	push   eax
   1e890:	jne    0x1e87f
   1e892:	imul   eax,DWORD PTR [eax],0x39cbdd
   1e898:	pop    esp
   1e899:	add    BYTE PTR [edi],cl
   1e89b:	add    BYTE PTR [edx],ch
   1e89d:	add    BYTE PTR [edx],cl
   1e89f:	add    BYTE PTR [edi],al
   1e8a1:	add    BYTE PTR [ecx],dl
   1e8a3:	add    BYTE PTR [eax],cl
   1e8a5:	add    BYTE PTR [edi],bh
   1e8a7:	add    BYTE PTR ds:0x1b000000,bh
   1e8ad:	add    BYTE PTR [eax],al
   1e8af:	add    BYTE PTR [edx-0xb895ea9],bl
   1e8b5:	imul   eax,DWORD PTR [ecx+0x4e],0xffffffb6
   1e8b9:	rcl    BYTE PTR ds:0x3b3d7b57,1
   1e8bf:	cdq    
   1e8c0:	sub    esi,DWORD PTR [esi]
   1e8c2:	sbb    DWORD PTR [ebx+0x1f],ecx
   1e8c5:	adc    eax,0x6aa39b8f
   1e8ca:	aad    0x1f
   1e8cc:	ret    
   1e8cd:	sub    DWORD PTR [edx+0x469f9bae],esi
   1e8d3:	add    al,0x0
   1e8d5:	int3   
   1e8d6:	pop    esp
   1e8d7:	add    BYTE PTR [esi],cl
   1e8d9:	add    BYTE PTR [edi],dh
   1e8db:	add    BYTE PTR [edx],al
   1e8dd:	add    BYTE PTR [esi],cl
   1e8df:	add    BYTE PTR [edx],bl
   1e8e1:	add    BYTE PTR [edi],al
   1e8e3:	add    BYTE PTR [esi],al
   1e8e5:	add    BYTE PTR [ebx],cl
   1e8e7:	add    BYTE PTR ds:0x2c001100,ah
   1e8ed:	add    BYTE PTR [edx],al
   1e8ef:	add    BYTE PTR [ebx],cl
   1e8f1:	add    BYTE PTR [ecx],al
   1e8f3:	add    BYTE PTR [edi],al
   1e8f5:	add    BYTE PTR [ebx],cl
   1e8f7:	add    BYTE PTR [ecx],bh
   1e8f9:	add    BYTE PTR [edi],cl
   1e8fb:	add    BYTE PTR [edx],cl
   1e8fd:	add    BYTE PTR [edx],cl
   1e8ff:	add    BYTE PTR [edi],al
   1e901:	add    BYTE PTR [ecx],dl
   1e903:	add    BYTE PTR [eax],cl
   1e905:	add    BYTE PTR [ecx],dl
   1e907:	add    BYTE PTR [edi],bl
   1e909:	add    BYTE PTR [esi],dh
   1e90b:	add    BYTE PTR [edi],al
   1e90d:	add    BYTE PTR [eax],al
   1e90f:	add    BYTE PTR [edi],dl
   1e911:	add    BYTE PTR [ebx],cl
   1e913:	add    BYTE PTR [edx],bl
   1e915:	add    BYTE PTR [edi],dh
   1e917:	add    BYTE PTR [eax+eax*1],ch
   1e91a:	add    DWORD PTR [eax],eax
   1e91c:	sbb    al,BYTE PTR [eax]
   1e91e:	push   es
   1e91f:	add    BYTE PTR ds:0x3f000300,bl
   1e925:	add    BYTE PTR [esi],dh
   1e927:	add    BYTE PTR [ecx],dl
   1e929:	add    BYTE PTR [eax],ch
   1e92b:	add    BYTE PTR [edi],cl
   1e92d:	add    BYTE PTR [esi],dh
   1e92f:	add    BYTE PTR [edi],dl
   1e931:	add    BYTE PTR [eax+eax*1],al
   1e934:	pop    ds
   1e935:	add    BYTE PTR [edx],cl
   1e937:	add    BYTE PTR [esi],al
   1e939:	add    BYTE PTR [esi],dl
   1e93b:	add    BYTE PTR [edi],ch
   1e93d:	add    BYTE PTR [eax],al
   1e93f:	add    BYTE PTR [esi],dl
   1e941:	cs (bad) 
   1e943:	dec    ebx
   1e944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e945:	cmp    ebp,edi
   1e947:	sti    
   1e948:	pushf  
   1e949:	mov    esp,0xca66d0a7
   1e94e:	and    al,0x2a
   1e950:	popf   
   1e951:	inc    edi
   1e952:	(bad)  
   1e953:	jle    0x1e987
   1e955:	stos   BYTE PTR es:[edi],al
   1e956:	(bad)
   1e95a:	fidivr DWORD PTR [esp+ebx*4]
   1e95d:	pusha  
   1e95e:	inc    edi
   1e95f:	fs mov bl,0xdf
   1e962:	dec    ebx
   1e963:	neg    ebx
   1e965:	fmul   DWORD PTR [eax-0x35]
   1e968:	inc    ecx
   1e969:	fisttp WORD PTR [eax+eax*1]
   1e96c:	ins    BYTE PTR es:[edi],dx
   1e96d:	add    BYTE PTR [edi],bl
   1e96f:	add    BYTE PTR [edx],dl
   1e971:	add    BYTE PTR [edx],dl
   1e973:	add    BYTE PTR [eax],al
   1e975:	add    BYTE PTR [ebp+0x0],bl
   1e978:	dec    ebx
   1e979:	add    BYTE PTR ds:0x1d00,bl
   1e97f:	add    ch,ah
   1e981:	add    edx,0x6875fb05
   1e987:	cwde   
   1e988:	rep lods eax,DWORD PTR ds:[esi]
   1e98a:	mov    dl,0x49
   1e98c:	ret    0xe3c5
   1e98f:	push   ebx
   1e990:	or     ecx,DWORD PTR ds:[ecx]
   1e993:	sub    BYTE PTR [edx+edi*2-0x200804f7],0x6e
   1e99b:	jmp    0xeccac83d
   1e9a0:	dec    esp
   1e9a1:	xor    ebx,DWORD PTR [edx-0x1927498e]
   1e9a7:	jns    0x1e9e4
   1e9a9:	or     al,0xfc
   1e9ab:	(bad)  
   1e9ac:	cld    
   1e9ad:	jo     0x1e9d2
   1e9af:	pop    edi
   1e9b0:	sbb    eax,0xf32d72a8
   1e9b5:	add    BYTE PTR [edx+0x2d],bl
   1e9b8:	and    eax,0x18061637
   1e9bd:	or     BYTE PTR [ecx],dh
   1e9bf:	cmp    al,0x1a
   1e9c1:	pop    ss
   1e9c2:	add    al,0x5
   1e9c4:	add    ah,cl
   1e9c6:	push   ds
   1e9c7:	fsub   DWORD PTR [edi+0x5b54bd7d]
   1e9cd:	dec    ebx
   1e9ce:	nop
   1e9cf:	mov    dh,0x9a
   1e9d1:	nop
   1e9d2:	sahf   
   1e9d3:	jae    0x1e9f5
   1e9d5:	es test al,0xad
   1e9d8:	sbb    DWORD PTR [edx],ecx
   1e9da:	mov    esi,0xb7bcdb7e
   1e9df:	dec    ecx
   1e9e0:	js     0x1ea34
   1e9e2:	jb     0x1ea0b
   1e9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e9e5:	add    ecx,DWORD PTR gs:[ebx]
   1e9e8:	scas   al,BYTE PTR es:[edi]
   1e9e9:	sub    DWORD PTR [ebp-0x5a],0xffffffaa
   1e9ed:	xor    al,0x59
   1e9ef:	and    esp,ecx
   1e9f1:	pop    ecx
   1e9f2:	cmp    bl,BYTE PTR [edi+0x1bb838f8]
   1e9f8:	xor    eax,0x2acff5f6
   1e9fd:	rol    ecx,cl
   1e9ff:	mov    al,ds:0xcc005ef8
   1ea04:	dec    esi
   1ea05:	cmp    ah,BYTE PTR [ebx]
   1ea07:	and    eax,0x33111d1b
   1ea0c:	aas    
   1ea0d:	sbb    eax,DWORD PTR [esi]
   1ea0f:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea16:	sbb    eax,0x75cc000b
   1ea1b:	mov    ?,WORD PTR [edx+eax*4]
   1ea1e:	jecxz  0x1ea2a
   1ea20:	enter  0xc52e,0xfc
   1ea24:	adc    eax,0x12e579ef
   1ea29:	jge    0x1e9e8
   1ea2b:	add    ah,BYTE PTR [eax]
   1ea2d:	retf   
   1ea2e:	sahf   
   1ea2f:	xchg   esi,eax
   1ea30:	sub    al,0xa2
   1ea32:	mov    esp,0x3158eb88
   1ea37:	lahf   
   1ea38:	pusha  
   1ea39:	jbe    0x1e9d3
   1ea3b:	mov    edi,ecx
   1ea3d:	ss stos BYTE PTR es:[edi],al
   1ea3f:	cmc    
   1ea40:	pop    ebx
   1ea41:	arpl   cx,si
   1ea43:	pop    esp
   1ea44:	push   edi
   1ea45:	sbb    BYTE PTR ds:0x3f7f2deb,bh
   1ea4b:	lods   al,BYTE PTR ds:[esi]
   1ea4c:	pop    ds
   1ea4d:	aad    0xd7
   1ea4f:	in     al,dx
   1ea50:	mov    ch,0xce
   1ea52:	add    ah,cl
   1ea54:	pop    edx
   1ea55:	sub    eax,0x1b1d2227
   1ea5a:	adc    DWORD PTR [esi],eax
   1ea5c:	pop    ss
   1ea5d:	and    bh,BYTE PTR [edi]
   1ea5f:	sbb    eax,DWORD PTR [esi]
   1ea61:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea68:	sbb    eax,0x83cc000b
   1ea6d:	pop    ss
   1ea6e:	ins    BYTE PTR es:[edi],dx
   1ea6f:	in     al,dx
   1ea70:	mov    edi,0x6d5d6ec1
   1ea75:	fwait
   1ea76:	cmc    
   1ea77:	outs   dx,BYTE PTR ds:[esi]
   1ea78:	jecxz  0x1eaf4
   1ea7a:	xchg   ebp,eax
   1ea7b:	mul    DWORD PTR [edx+0x3bc091e]
   1ea81:	inc    bh
   1ea83:	add    DWORD PTR [ebp-0x1],edx
   1ea86:	mov    dh,0x5f
   1ea88:	lea    ebp,[esi-0x7585d56f]
   1ea8e:	sub    al,0x5d
   1ea90:	mov    ah,0xe8
   1ea92:	adc    BYTE PTR [ebx],bl
   1ea94:	out    0x12,al
   1ea96:	add    ah,cl
   1ea98:	mov    eax,ds:0x7c75aaa5
   1ea9d:	push   edx
   1ea9e:	adc    cl,BYTE PTR [ebx-0x70ae684c]
   1eaa4:	and    al,0x82
   1eaa6:	lods   al,BYTE PTR ds:[esi]
   1eaa7:	push   edi
   1eaa8:	xor    DWORD PTR [edx],ebp
   1eaaa:	ins    DWORD PTR es:[edi],dx
   1eaab:	jmp    0x79da2576
   1eab0:	cmp    BYTE PTR [ebx-0x64],dl
   1eab3:	mov    bl,0x37
   1eab5:	dec    ecx
   1eab6:	pop    edi
   1eab7:	imul   bp,WORD PTR fs:[esi-0x5a],0xdf8c
   1eabe:	and    al,0xfb
   1eac0:	cld    
   1eac1:	fadd   QWORD PTR [ebp-0x72]
   1eac4:	push   ebp
   1eac5:	in     eax,dx
   1eac6:	enter  0x7603,0xa8
   1eaca:	in     al,dx
   1eacb:	inc    esi
   1eacc:	lods   al,BYTE PTR ds:[esi]
   1eacd:	in     al,dx
   1eace:	lock out dx,eax
   1ead0:	ds dec edi
   1ead2:	retf   
   1ead3:	leave  
   1ead4:	add    ah,cl
   1ead6:	pop    esp
   1ead7:	add    BYTE PTR [eax],bl
   1ead9:	add    BYTE PTR [ebx],ch
   1eadb:	add    BYTE PTR [eax+eax*1],bl
   1eade:	aaa    
   1eadf:	add    BYTE PTR [ecx],ah
   1eae1:	add    BYTE PTR [ebx],dl
   1eae3:	add    BYTE PTR [edi],bl
   1eae5:	add    BYTE PTR [edx],cl
   1eae7:	add    BYTE PTR [esi],al
   1eae9:	add    BYTE PTR [esi],dl
   1eaeb:	add    BYTE PTR [edi],ch
   1eaed:	add    BYTE PTR [ecx+0x0],bh
   1eaf0:	push   esi
   1eaf1:	add    BYTE PTR [eax],al
   1eaf3:	add    BYTE PTR [edx-0x33],ch
   1eaf6:	in     al,0xf9
   1eaf8:	arpl   WORD PTR [ebp+0x45],sp
   1eafb:	test   eax,0x8db18164
   1eb00:	sbb    ah,BYTE PTR [ebx]
   1eb02:	out    dx,eax
   1eb03:	mov    edi,0x7f898f2a
   1eb08:	dec    esp
   1eb09:	loope  0x1ead1
   1eb0b:	rcl    DWORD PTR [esi],1
   1eb0d:	mov    bl,0x47
   1eb0f:	cmp    eax,0xc7463070
   1eb14:	adc    eax,0x5ccc00ae
   1eb19:	add    BYTE PTR [eax],bl
   1eb1b:	add    BYTE PTR [ecx],ah
   1eb1d:	add    BYTE PTR [ebx],dl
   1eb1f:	add    BYTE PTR [edi],bl
   1eb21:	add    BYTE PTR [edx],cl
   1eb23:	add    BYTE PTR [esi],al
   1eb25:	add    BYTE PTR [ecx],bh
   1eb27:	add    BYTE PTR [ecx+0x0],bh
   1eb2a:	push   esi
   1eb2b:	add    BYTE PTR [eax],al
   1eb2d:	add    BYTE PTR [edi-0x72faec3a],dl
   1eb33:	nop
   1eb34:	cmp    dl,dh
   1eb36:	imul   ebx,edi,0x49
   1eb39:	hlt    
   1eb3a:	pop    eax
   1eb3b:	sub    esi,DWORD PTR [edx+0x384147d9]
   1eb41:	fisttp WORD PTR [ebx-0x2ef83bf6]
   1eb47:	iret   
   1eb48:	adc    eax,0x687640eb
   1eb4d:	xor    al,0x46
   1eb4f:	xchg   esi,eax
   1eb50:	lahf   
   1eb51:	xor    eax,DWORD PTR [ecx+0x40]
   1eb54:	sub    eax,0x20806b0
   1eb59:	and    DWORD PTR [esi+0x67],ebp
   1eb5c:	xchg   edx,eax
   1eb5d:	repnz shr BYTE PTR [ebp-0x33fff39a],0x53
   1eb65:	add    BYTE PTR [ecx+0x0],bh
   1eb68:	jae    0x1eb6a
   1eb6a:	inc    ebp
   1eb6b:	add    BYTE PTR [esi+0x0],dh
   1eb6e:	je     0x1eb70
   1eb70:	inc    ebx
   1eb71:	add    BYTE PTR [eax],al
   1eb73:	add    BYTE PTR [eax+eax*1+0x0],bl
   1eb77:	add    BYTE PTR [edx+0x0],dh
   1eb7a:	jb     0x1eb7c
   1eb7c:	add    BYTE PTR [eax],al
   1eb7e:	sub    BYTE PTR [ebp+0x4f],ch
   1eb81:	adc    al,0xdb
   1eb83:	dec    esp
   1eb84:	add    DWORD PTR gs:[esi],ebx
   1eb87:	sub    ecx,DWORD PTR [edx]
   1eb89:	mov    ebx,gs
   1eb8b:	out    0x61,eax
   1eb8d:	ins    BYTE PTR es:[edi],dx
   1eb8e:	imul   esp,DWORD PTR [edx+0x41f73ab4],0xec7d608f
   1eb98:	xchg   ebp,eax
   1eb99:	dec    ebp
   1eb9a:	imul   esp,DWORD PTR [ecx],0x9c04e0a4
   1eba0:	and    esi,edi
   1eba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1eba3:	ins    BYTE PTR es:[edi],dx
   1eba4:	sbb    bl,BYTE PTR [ebx+0x5f]
   1eba7:	jp     0x1eba9
   1eba9:	int3   
   1ebaa:	and    eax,0x5ccc0053
   1ebaf:	add    BYTE PTR [ebx+0x0],dh
   1ebb2:	jns    0x1ebb4
   1ebb4:	jae    0x1ebb6
   1ebb6:	je     0x1ebb8
   1ebb8:	add    BYTE PTR gs:[ebp+0x0],ch
   1ebbc:	jb     0x1ebbe
   1ebbe:	outs   dx,DWORD PTR ds:[esi]
   1ebbf:	add    BYTE PTR [edi+0x0],ch
   1ebc2:	je     0x1ebc4
   1ebc4:	pop    esp
   1ebc5:	add    BYTE PTR [ebx+0x0],dh
   1ebc8:	jns    0x1ebca
   1ebca:	jae    0x1ebcc
   1ebcc:	je     0x1ebce
   1ebce:	add    BYTE PTR gs:[ebp+0x0],ch
   1ebd2:	xor    eax,DWORD PTR [eax]
   1ebd4:	xor    al,BYTE PTR [eax]
   1ebd6:	pop    esp
   1ebd7:	add    BYTE PTR ds:0x5300,ah
   1ebdd:	add    BYTE PTR [ecx],dh
   1ebdf:	xor    ch,BYTE PTR cs:[esi]
   1ebe2:	xor    eax,DWORD PTR [eax]
   1ebe4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ebeb:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ebef:	outs   dx,BYTE PTR gs:[esi]
   1ebf1:	addr16 je 0x1ec5c
   1ebf4:	and    BYTE PTR [ebx+0x68],ah
   1ebf7:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ebfb:	int3   
   1ebfc:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec03:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec07:	popa   
   1ec08:	je     0x1ec6b
   1ec0a:	and    BYTE PTR [ebx+0x68],ah
   1ec0d:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec11:	int3   
   1ec12:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec19:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ec1d:	je     0x1ec80
   1ec1f:	outs   dx,BYTE PTR ds:[esi]
   1ec20:	arpl   WORD PTR [ebp+0x20],sp
   1ec23:	je     0x1ec94
   1ec25:	outs   dx,DWORD PTR ds:[esi]
   1ec26:	and    BYTE PTR [esi+0x61],ah
   1ec29:	jb     0x1ec4b
   1ec2b:	bound  esp,QWORD PTR [ecx+0x63]
   1ec2e:	imul   eax,DWORD PTR [eax],0x69
   1ec31:	outs   dx,BYTE PTR ds:[esi]
   1ec32:	jbe    0x1ec95
   1ec34:	ins    BYTE PTR es:[edi],dx
   1ec35:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ec3d:	outs   dx,BYTE PTR ds:[esi]
   1ec3e:	arpl   WORD PTR [ebp+0x20],sp
   1ec41:	arpl   WORD PTR [edi+0x64],bp
   1ec44:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ec48:	jbe    0x1ecab
   1ec4a:	ins    BYTE PTR es:[edi],dx
   1ec4b:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ec53:	popa   
   1ec54:	ins    BYTE PTR es:[edi],dx
   1ec55:	das    
   1ec56:	ins    BYTE PTR es:[edi],dx
   1ec57:	outs   dx,BYTE PTR gs:[esi]
   1ec59:	addr16 je 0x1ecc4
   1ec5c:	and    BYTE PTR [ebx+0x6f],ah
   1ec5f:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ec64:	jbe    0x1ecc7
   1ec66:	ins    BYTE PTR es:[edi],dx
   1ec67:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ec6f:	outs   dx,BYTE PTR ds:[esi]
   1ec70:	arpl   WORD PTR [ebp+0x73],sp
   1ec73:	and    BYTE PTR [ebx+0x65],dh
   1ec76:	je     0x1ec78
   1ec78:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec7f:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ec83:	gs jb  0x1ece7
   1ec86:	ins    BYTE PTR es:[edi],dx
   1ec87:	das    
   1ec88:	ins    BYTE PTR es:[edi],dx
   1ec89:	outs   dx,BYTE PTR gs:[esi]
   1ec8b:	addr16 je 0x1ecf6
   1ec8e:	jae    0x1ecb0
   1ec90:	jae    0x1ecf7
   1ec92:	je     0x1ec94
   1ec94:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec9b:	and    BYTE PTR [edx+0x69],ah
   1ec9e:	je     0x1ecc0
   1eca0:	ins    BYTE PTR es:[edi],dx
   1eca1:	outs   dx,BYTE PTR gs:[esi]
   1eca3:	addr16 je 0x1ed0e
   1eca6:	and    BYTE PTR [edx+0x65],dh
   1eca9:	jo     0x1ed10
   1ecab:	popa   
   1ecac:	je     0x1ecae
   1ecae:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecb5:	and    BYTE PTR [ebx+0x6f],ah
   1ecb8:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ecbe:	addr16 je 0x1ed29
   1ecc1:	jae    0x1ece3
   1ecc3:	jae    0x1ed2a
   1ecc5:	je     0x1ecc7
   1ecc7:	int3   
   1ecc8:	je     0x1ed39
   1ecca:	outs   dx,DWORD PTR ds:[esi]
   1eccb:	and    BYTE PTR [ebp+0x61],ch
   1ecce:	outs   dx,BYTE PTR ds:[esi]
   1eccf:	jns    0x1ecf1
   1ecd1:	ins    BYTE PTR es:[edi],dx
   1ecd2:	outs   dx,BYTE PTR gs:[esi]
   1ecd4:	addr16 je 0x1ed3f
   1ecd7:	and    BYTE PTR [edi+0x72],ch
   1ecda:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ecde:	je     0x1ed41
   1ece0:	outs   dx,BYTE PTR ds:[esi]
   1ece1:	arpl   WORD PTR [ebp+0x20],sp
   1ece4:	jae    0x1ed5f
   1ece6:	ins    DWORD PTR es:[edi],dx
   1ece7:	bound  ebp,QWORD PTR [edi+0x6c]
   1ecea:	jae    0x1ecec
   1ecec:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecf3:	and    BYTE PTR [ebx+0x74],dh
   1ecf6:	outs   dx,DWORD PTR ds:[esi]
   1ecf7:	jb     0x1ed5e
   1ecf9:	and    BYTE PTR fs:[edx+0x6c],ah
   1ecfd:	outs   dx,DWORD PTR ds:[esi]
   1ecfe:	arpl   WORD PTR [ebx+0x20],bp
   1ed01:	ins    BYTE PTR es:[edi],dx
   1ed02:	outs   dx,BYTE PTR gs:[esi]
   1ed04:	addr16 je 0x1ed6f
   1ed07:	jae    0x1ed09
   1ed09:	int3   
   1ed0a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed11:	and    BYTE PTR [edx+0x6c],ah
   1ed14:	outs   dx,DWORD PTR ds:[esi]
   1ed15:	arpl   WORD PTR [ebx+0x20],bp
   1ed18:	je     0x1ed93
   1ed1a:	jo     0x1ed81
   1ed1c:	add    ah,cl
   1ed1e:	push   0x65646165
   1ed23:	jb     0x1ed45
   1ed25:	arpl   WORD PTR [edx+0x63],si
   1ed28:	and    BYTE PTR [ebp+0x69],ch
   1ed2b:	jae    0x1ed9a
   1ed2d:	popa   
   1ed2e:	je     0x1ed93
   1ed30:	push   0x6b6e7500
   1ed35:	outs   dx,BYTE PTR ds:[esi]
   1ed36:	outs   dx,DWORD PTR ds:[esi]
   1ed37:	ja     0x1eda7
   1ed39:	and    BYTE PTR [eax+0x65],ch
   1ed3c:	popa   
   1ed3d:	fs gs jb 0x1ed61
   1ed41:	data16 ins BYTE PTR es:[edi],dx
   1ed43:	popa   
   1ed44:	addr16 jae 0x1ed67
   1ed47:	jae    0x1edae
   1ed49:	je     0x1ed4b
   1ed4b:	int3   
   1ed4c:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ed53:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1ed57:	gs popa 
   1ed59:	fs gs jb 0x1ed7d
   1ed5d:	arpl   WORD PTR [eax+0x65],bp
   1ed60:	arpl   WORD PTR [ebx+0x0],bp
   1ed63:	int3   
   1ed64:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed6b:	and    BYTE PTR [edi+0x69],dh
   1ed6e:	outs   dx,BYTE PTR ds:[esi]
   1ed6f:	outs   dx,DWORD PTR fs:[esi]
   1ed71:	ja     0x1ed93
   1ed73:	jae    0x1edde
   1ed75:	jp     0x1eddc
   1ed77:	add    BYTE PTR [ebp+0x6e],dh
   1ed7a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ed7e:	outs   dx,BYTE PTR ds:[esi]
   1ed7f:	and    BYTE PTR [ebx+0x6f],ah
   1ed82:	ins    DWORD PTR es:[edi],dx
   1ed83:	jo     0x1edf7
   1ed85:	gs jae 0x1edfb
   1ed88:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ed8f:	.byte 0x68
   1ed90:	outs   dx,DWORD PTR ds:[esi]
   1ed91:	fs
	...

Disassembly of section INIT:

00078e00 <INIT>:
   78e00:	add    BYTE PTR [eax],al
   78e02:	add    BYTE PTR [eax],al
   78e04:	add    BYTE PTR [ecx+0x7771c],ah
   78e0a:	mov    ecx,0xbb40e64e
   78e0f:	test   eax,eax
   78e11:	je     0x78e17
   78e13:	cmp    eax,ecx
   78e15:	jne    0x78e31
   78e17:	mov    eax,ds:0x1ee58
   78e1c:	mov    eax,DWORD PTR [eax]
   78e1e:	xor    eax,0x7771c
   78e23:	mov    ds:0x7771c,eax
   78e28:	jne    0x78e31
   78e2a:	mov    eax,ecx
   78e2c:	mov    ds:0x7771c,eax
   78e31:	not    eax
   78e33:	mov    ds:0x77720,eax
   78e38:	ret    
   78e39:	lock pop edi
   78e3b:	push   0xff8ba299
   78e40:	push   ebp
   78e41:	mov    ebp,esp
   78e43:	call   0x78e05
   78e48:	pop    ebp
   78e49:	jmp    0x1919a
   78e4e:	int3   
   78e4f:	int3   
   78e50:	xchg   esp,eax
   78e51:	mov    es,WORD PTR [esi]
	...
   78e5b:	add    BYTE PTR [eax+edx*4-0x11f7fffa],dh
   78e62:	add    BYTE PTR [eax],al
   78e64:	mov    WORD PTR [esi+0x6],cs
   78e6a:	add    BYTE PTR [eax],al
   78e6c:	add    BYTE PTR [eax],al
   78e6e:	add    BYTE PTR [eax],al
   78e70:	(bad)  
   78e71:	nop
   78e72:	push   es
   78e73:	add    BYTE PTR [eax],al
   78e75:	out    dx,al
	...
   78e8a:	add    BYTE PTR [eax],al
   78e8c:	ret    0x690
   78e8f:	add    BYTE PTR [eax],al
   78e91:	add    BYTE PTR [eax],al
   78e93:	add    BYTE PTR [edi+ecx*4],dl
   78e96:	push   es
   78e97:	add    BYTE PTR [edi+ecx*4],ch
   78e9a:	push   es
   78e9b:	add    BYTE PTR [esi],dh
   78e9d:	pop    DWORD PTR [esi]
   78e9f:	add    BYTE PTR [eax-0x71],al
   78ea2:	push   es
   78ea3:	add    BYTE PTR [edx-0x71],cl
   78ea6:	push   es
   78ea7:	add    BYTE PTR [edx-0x71],bl
   78eaa:	push   es
   78eab:	add    BYTE PTR [edx-0x71],bh
   78eae:	push   es
   78eaf:	add    BYTE PTR [esi-0x57fff971],cl
   78eb5:	pop    DWORD PTR [esi]
   78eb7:	add    BYTE PTR [edx-0x2dfff971],bh
   78ebd:	pop    DWORD PTR [esi]
   78ebf:	add    ah,dh
   78ec1:	pop    DWORD PTR [esi]
   78ec3:	add    dh,bh
   78ec5:	pop    DWORD PTR [esi]
   78ec7:	add    BYTE PTR [edx],bl
   78ec9:	nop
   78eca:	push   es
   78ecb:	add    BYTE PTR [edx],dh
   78ecd:	nop
   78ece:	push   es
   78ecf:	add    BYTE PTR [eax+edx*4],bh
   78ed2:	push   es
   78ed3:	add    BYTE PTR [esi-0x70],dl
   78ed6:	push   es
   78ed7:	add    BYTE PTR [eax+edx*4+0x6],ch
   78edb:	add    BYTE PTR [eax-0x70],bh
   78ede:	push   es
   78edf:	add    BYTE PTR [eax+edx*4-0x6f69fffa],cl
   78ee6:	push   es
   78ee7:	add    BYTE PTR [eax+edx*4-0x7103fffa],ah
   78eee:	push   es
   78eef:	add    ah,bl
   78ef1:	pop    DWORD PTR [esi]
   78ef3:	add    dh,bl
   78ef5:	nop
   78ef6:	push   es
   78ef7:	add    BYTE PTR [eax],al
   78ef9:	add    BYTE PTR [eax],al
   78efb:	add    BYTE PTR [eax],dh
   78efd:	add    ecx,DWORD PTR [edi+0x62]
   78f00:	inc    sp
   78f02:	gs jb  0x78f6a
   78f05:	data16 gs jb 0x78f6e
   78f09:	outs   dx,BYTE PTR ds:[esi]
   78f0a:	arpl   WORD PTR [ebp+0x4f],sp
   78f0d:	bound  ebp,QWORD PTR [edx+0x65]
   78f10:	arpl   WORD PTR [eax+eax*1+0x0],si
   78f14:	sbb    eax,0x6c745204
   78f19:	dec    ecx
   78f1a:	outs   dx,BYTE PTR ds:[esi]
   78f1b:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   78f23:	gs push ebx
   78f25:	je     0x78f99
   78f27:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   78f2e:	pop    edi
   78f2f:	popa   
   78f30:	ins    BYTE PTR es:[edi],dx
   78f31:	ins    BYTE PTR es:[edi],dx
   78f32:	ins    DWORD PTR es:[edi],dx
   78f33:	jne    0x78fa1
   78f35:	add    BYTE PTR [ecx+0x5],bh
   78f38:	pop    edi
   78f39:	popa   
   78f3a:	ins    BYTE PTR es:[edi],dx
   78f3b:	ins    BYTE PTR es:[edi],dx
   78f3c:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   78f44:	ins    BYTE PTR es:[edi],dx
   78f45:	ins    BYTE PTR es:[edi],dx
   78f46:	jb     0x78fad
   78f48:	ins    DWORD PTR es:[edi],dx
   78f49:	add    BYTE PTR [ebp+0x0],dh
   78f4c:	inc    ebp
   78f4d:	js     0x78fa1
   78f4f:	popa   
   78f50:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78f57:	jne    0x78fcc
   78f59:	add    BYTE PTR [edx+0x0],al
   78f5c:	inc    ebp
   78f5d:	js     0x78fa0
   78f5f:	ins    BYTE PTR es:[edi],dx
   78f60:	ins    BYTE PTR es:[edi],dx
   78f61:	outs   dx,DWORD PTR ds:[esi]
   78f62:	arpl   WORD PTR [ecx+0x74],sp
   78f65:	gs push eax
   78f67:	outs   dx,DWORD PTR ds:[esi]
   78f68:	outs   dx,DWORD PTR ds:[esi]
   78f69:	ins    BYTE PTR es:[edi],dx
   78f6a:	push   edi
   78f6b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   78f73:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78f7a:	dec    esi
   78f7b:	add    BYTE PTR [ebp+0x78],al
   78f7e:	inc    esi
   78f7f:	jb     0x78fe6
   78f81:	gs push eax
   78f83:	outs   dx,DWORD PTR ds:[esi]
   78f84:	outs   dx,DWORD PTR ds:[esi]
   78f85:	ins    BYTE PTR es:[edi],dx
   78f86:	push   edi
   78f87:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   78f8f:	add    edx,DWORD PTR [edx+0x74]
   78f92:	ins    BYTE PTR es:[edi],dx
   78f93:	inc    ebx
   78f94:	outs   dx,DWORD PTR ds:[esi]
   78f95:	ins    DWORD PTR es:[edi],dx
   78f96:	jo     0x78ff9
   78f98:	jb     0x78fff
   78f9a:	push   ebp
   78f9b:	outs   dx,BYTE PTR ds:[esi]
   78f9c:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   78fa3:	jb     0x7900e
   78fa5:	outs   dx,BYTE PTR ds:[esi]
   78fa6:	add    BYTE PTR [bp+si+0x2],al
   78faa:	dec    ebx
   78fab:	gs push edx
   78fad:	gs ins BYTE PTR es:[edi],dx
   78faf:	gs popa 
   78fb1:	jae    0x79018
   78fb3:	dec    ebp
   78fb4:	jne    0x7902a
   78fb6:	gs js  0x78fb9
   78fb9:	add    BYTE PTR [ebp+0x2],ch
   78fbc:	dec    ebx
   78fbd:	gs push edi
   78fbf:	popa   
   78fc0:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   78fc8:	ins    BYTE PTR es:[di],dx
   78fca:	gs dec edi
   78fcc:	bound  ebp,QWORD PTR [edx+0x65]
   78fcf:	arpl   WORD PTR [eax+eax*1-0x57],si
   78fd3:	add    eax,0x736d656d
   78fd8:	gs je  0x78fdb
   78fdb:	add    BYTE PTR [ecx+0x0],al
   78fde:	inc    ebp
   78fdf:	js     0x79022
   78fe1:	ins    BYTE PTR es:[edi],dx
   78fe2:	ins    BYTE PTR es:[edi],dx
   78fe3:	outs   dx,DWORD PTR ds:[esi]
   78fe4:	arpl   WORD PTR [ecx+0x74],sp
   78fe7:	gs push eax
   78fe9:	outs   dx,DWORD PTR ds:[esi]
   78fea:	outs   dx,DWORD PTR ds:[esi]
   78feb:	ins    BYTE PTR es:[edi],dx
   78fec:	push   edi
   78fed:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   78ff5:	add    eax,0x636d656d
   78ffa:	jo     0x79075
   78ffc:	add    BYTE PTR [eax],al
   78ffe:	mov    eax,ds:0x476d4d02
   79003:	gs je  0x79059
   79006:	jns    0x7907b
   79008:	je     0x7906f
   7900a:	ins    DWORD PTR es:[edi],dx
   7900b:	push   edx
   7900c:	outs   dx,DWORD PTR ds:[esi]
   7900d:	jne    0x79083
   7900f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   79016:	gs jae 0x7908c
   79019:	add    bh,al
   7901b:	add    edx,DWORD PTR [edx+0x74]
   7901e:	ins    BYTE PTR es:[edi],dx
   7901f:	inc    ebx
   79020:	outs   dx,DWORD PTR ds:[esi]
   79021:	jo     0x7909c
   79023:	push   ebp
   79024:	outs   dx,BYTE PTR ds:[esi]
   79025:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7902c:	jb     0x79097
   7902e:	outs   dx,BYTE PTR ds:[esi]
   7902f:	add    BYTE PTR [bx+si],al
   79032:	mov    DWORD PTR ds:0x6e736377,0x746163
   7903c:	push   es
   7903d:	add    eax,0x6c41775a
   79042:	ins    BYTE PTR es:[edi],dx
   79043:	outs   dx,DWORD PTR ds:[esi]
   79044:	arpl   WORD PTR [ecx+0x74],sp
   79047:	gs push esi
   79049:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   79050:	gs ins DWORD PTR es:[edi],dx
   79052:	outs   dx,DWORD PTR ds:[esi]
   79053:	jb     0x790ce
   79055:	add    bl,ah
   79057:	add    DWORD PTR [ecx+0x6f],ecx
   7905a:	inc    bx
   7905c:	outs   dx,DWORD PTR ds:[esi]
   7905d:	ins    DWORD PTR es:[edi],dx
   7905e:	jo     0x790cc
   79060:	gs je  0x790c8
   79063:	push   edx
   79064:	gs jno 0x790dc
   79067:	gs jae 0x790de
   7906a:	add    BYTE PTR [eax],al
   7906c:	mov    ecx,0x70777305
   79071:	jb     0x790dc
   79073:	outs   dx,BYTE PTR ds:[esi]
   79074:	je     0x790dc
   79076:	add    BYTE PTR [eax],al
   79078:	xor    eax,DWORD PTR [edx]
   7907a:	dec    ebx
   7907b:	gs push ecx
   7907d:	jne    0x790e4
   7907f:	jb     0x790fa
   79081:	push   ebx
   79082:	jns    0x790f7
   79084:	je     0x790eb
   79086:	ins    DWORD PTR es:[edi],dx
   79087:	push   esp
   79088:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7908f:	jo     0x79103
   79091:	imul   ebp,DWORD PTR [esi+0x74],0x2660066
   79098:	dec    ebx
   79099:	gs push esp
   7909b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   790a2:	je     0x790a4
   790a4:	test   BYTE PTR [ecx],0x4b
   790a7:	gs inc edx
   790a9:	jne    0x79112
   790ab:	inc    ebx
   790ac:	push   0x456b6365
   790b1:	js     0x790b3
   790b3:	add    BYTE PTR [esi+0x74],ch
   790b6:	outs   dx,DWORD PTR ds:[esi]
   790b7:	jae    0x79124
   790b9:	jb     0x79129
   790bb:	ins    BYTE PTR es:[edi],dx
   790bc:	cs gs js 0x79125
   790c0:	add    BYTE PTR [eax],al
   790c2:	inc    eax
   790c3:	add    BYTE PTR [ebx+0x65],cl
   790c6:	inc    edi
   790c7:	gs je  0x7910d
   790ca:	jne    0x7913e
   790cc:	jb     0x79133
   790ce:	outs   dx,BYTE PTR ds:[esi]
   790cf:	je     0x7911a
   790d1:	jb     0x79144
   790d3:	ins    BYTE PTR es:[edi],dx
   790d4:	add    BYTE PTR [eax],al
   790d6:	dec    eax
   790d7:	inc    ecx
   790d8:	dec    esp
   790d9:	cs fs ins BYTE PTR es:[edi],dx
   790dc:	ins    BYTE PTR es:[edi],dx
   790dd:	add    BYTE PTR [eax+0x6c745204],ah
   790e3:	push   ebp
   790e4:	outs   dx,BYTE PTR ds:[esi]
   790e5:	ja     0x79150
   790e7:	outs   dx,BYTE PTR ds:[esi]
   790e8:	fs
	...
