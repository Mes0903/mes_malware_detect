
13c149d0c448c2ba24b033c53ab941a80b5795aead9ad3ec62de4f358ea6a244.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edi,esi,0x7a755745
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x39],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1642f8bf
  40298a:	std    
  40298b:	push   esp
  40298c:	jae    0x4029fa
  40298e:	aaa    
  40298f:	hlt    
  402990:	out    dx,al
  402991:	mov    edx,0x235860a5
  402996:	mul    DWORD PTR [esi+ebx*1-0x51]
  40299a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40299b:	lahf   
  40299c:	sbb    al,0xd6
  40299e:	push   es
  40299f:	or     esi,DWORD PTR [ebp+0x2f]
  4029a2:	mov    al,0xa
  4029a4:	aas    
  4029a5:	cld    
  4029a6:	bound  edx,QWORD PTR [edi]
  4029a8:	lea    edx,[edx+0x7a]
  4029ab:	rcl    DWORD PTR [edx],0x99
  4029ae:	cmovge ebx,DWORD PTR [esi-0x3d39e455]
  4029b5:	mov    ch,0xa3
  4029b7:	add    dl,0xb
  4029ba:	xsave  ds:0x89b8b7dc
  4029c1:	imul   ebp,DWORD PTR [edx-0x78],0xb54cf828
  4029c8:	js     0x402989
  4029ca:	outs   dx,DWORD PTR ds:[esi]
  4029cb:	shr    BYTE PTR [edx+0x5e],1
  4029ce:	mov    ecx,DWORD PTR [ebx+ebx*1+0x39]
  4029d2:	sbb    eax,0xda6dc853
  4029d7:	leave  
  4029d8:	jbe    0x4029ea
  4029da:	mov    dh,ch
  4029dc:	das    
  4029dd:	jnp    0x402966
  4029df:	push   0x24
  4029e1:	sbb    esi,DWORD PTR [eax+0x79]
  4029e4:	mov    ebx,0x81a857c2
  4029e9:	gs es stc 
  4029ec:	call   0x91e9d8ea
  4029f1:	aaa    
  4029f2:	ins    BYTE PTR es:[edi],dx
  4029f3:	xchg   ebp,eax
  4029f4:	pusha  
  4029f5:	repnz imul ebp,DWORD PTR [ecx-0x45],0xffffff83
  4029fa:	sub    BYTE PTR [edx],al
  4029fc:	add    bh,dl
  4029fe:	je     0x40299a
  402a00:	mov    eax,DWORD PTR [ecx]
  402a02:	outs   dx,DWORD PTR ds:[esi]
  402a03:	repz iret 
  402a05:	fiadd  DWORD PTR [ecx]
  402a07:	fldcw  WORD PTR [eax+edi*4]
  402a0a:	out    dx,al
  402a0b:	(bad)
  402a0e:	push   ebp
  402a0f:	rol    DWORD PTR [ebx-0x6d],1
  402a12:	jl     0x402a91
  402a14:	mov    edx,0x6ae91e04
  402a19:	call   DWORD PTR [eax]
  402a1b:	sbb    eax,0xc0d8890d
  402a20:	push   ds
  402a21:	add    ebx,ebx
  402a23:	adc    eax,0xb5915375
  402a28:	stos   DWORD PTR es:[edi],eax
  402a29:	jnp    0x4029de
  402a2b:	xchg   ebp,eax
  402a2c:	xchg   ebp,eax
  402a2d:	sbb    ch,bl
  402a2f:	(bad)  
  402a30:	jge    0x402a0b
  402a32:	(bad)  
  402a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a34:	inc    esi
  402a35:	adc    eax,DWORD PTR [edi-0x318d8f76]
  402a3b:	or     DWORD PTR ds:0x9d0e3c46,ebp
  402a41:	push   edi
  402a42:	inc    DWORD PTR [edi+0x59555429]
  402a48:	adc    dl,BYTE PTR [ebx-0x4a47773b]
  402a4e:	inc    esi
  402a4f:	daa    
  402a50:	lods   al,BYTE PTR ds:[esi]
  402a51:	(bad)  
  402a52:	(bad)  [esi]
  402a54:	(bad)  
  402a55:	fbld   TBYTE PTR [edx-0x68d2b36e]
  402a5b:	sub    al,0xbb
  402a5d:	mov    esp,0xfb423b0a
  402a62:	sub    al,0x2c
  402a64:	in     al,0xee
  402a66:	iret   
  402a67:	les    edi,FWORD PTR [eax]
  402a69:	xchg   ecx,eax
  402a6a:	pop    ebp
  402a6b:	imul   ebx,DWORD PTR [esi+0x1d],0x85228823
  402a72:	inc    esp
  402a73:	inc    eax
  402a74:	ror    DWORD PTR [edx-0x77ea248b],0x4c
  402a7b:	xor    ch,BYTE PTR [ebx-0x19]
  402a7e:	cs xchg ebp,eax
  402a80:	lea    ebp,[edi+ecx*4+0x6b]
  402a84:	fstp   TBYTE PTR [ebx+0x3ab45c71]
  402a8a:	mov    ebp,gs
  402a8c:	pop    es
  402a8d:	push   edx
  402a8e:	adc    BYTE PTR [esi+0x58dff9f6],0x9c
  402a95:	jb     0x402abb
  402a97:	and    dh,al
  402a99:	ins    DWORD PTR es:[edi],dx
  402a9a:	test   esp,eax
  402a9c:	fs add al,0xc
  402a9f:	mov    eax,ds:0x31b99828
  402aa4:	int3   
  402aa5:	mov    dl,0xe2
  402aa7:	xor    eax,0x280c2616
  402aac:	push   cs
  402aad:	cld    
  402aae:	nop
  402aaf:	push   eax
  402ab0:	rol    DWORD PTR [esi-0x49],0xd0
  402ab4:	or     al,BYTE PTR fs:[ebx+0x64e2e3f5]
  402abb:	(bad)  
  402abc:	aam    0xf9
  402abe:	jno    0x402afd
  402ac0:	pop    edi
  402ac1:	adc    al,0x1d
  402ac3:	stc    
  402ac4:	dec    ebp
  402ac5:	sar    BYTE PTR [eax-0x59],0x8a
  402ac9:	or     eax,0x27aaab6e
  402ace:	(bad)  
  402acf:	in     eax,0x47
  402ad1:	dec    edx
  402ad2:	adc    esi,DWORD PTR [edi-0x1c]
  402ad5:	add    ecx,DWORD PTR [edx-0x68bce8a6]
  402adb:	fs xchg edx,eax
  402add:	je     0x402ae2
  402adf:	xchg   ebx,eax
  402ae0:	shr    DWORD PTR [ebx-0x6323413f],1
  402ae6:	jl     0x402b4d
  402ae8:	dec    edx
  402ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aea:	pushf  
  402aeb:	and    dl,dh
  402aed:	xor    dh,dl
  402aef:	mov    ah,0xe8
  402af1:	jae    0x402aeb
  402af3:	mov    edx,0x1574310d
  402af8:	ror    BYTE PTR [edx],1
  402afa:	test   dh,cl
  402afc:	pop    esp
  402afd:	in     al,dx
  402afe:	xor    BYTE PTR [edi+0x13],bl
  402b01:	or     ch,BYTE PTR [ebx+0x11e1571c]
  402b07:	test   al,0x4a
  402b09:	test   BYTE PTR [edi-0x38f63bd6],0x64
  402b10:	mov    ds:0xdb38212,eax
  402b15:	sti    
  402b16:	aam    0xda
  402b18:	cmp    DWORD PTR [eax-0xc615acc],esp
  402b1e:	push   es
  402b1f:	fistp  QWORD PTR [esi+0x5e]
  402b22:	rcl    BYTE PTR [ecx+0x13],0x97
  402b26:	ret    
  402b27:	shr    dl,1
  402b29:	es cs inc esi
  402b2c:	arpl   dx,sp
  402b2e:	pushf  
  402b2f:	clc    
  402b30:	call   0x3a38:0xa014b375
  402b37:	bnd je 0x402b46
  402b3a:	cld    
  402b3b:	scas   eax,DWORD PTR es:[edi]
  402b3c:	sub    dl,bl
  402b3e:	jg     0x402b5e
  402b40:	jg     0x402b8a
  402b42:	imul   ecx,DWORD PTR [edx+0x47],0x3106a859
  402b49:	and    esi,DWORD PTR [ebx-0x4bd3e5e0]
  402b4f:	mov    cl,0xaa
  402b51:	xchg   edi,edx
  402b53:	int    0x5
  402b55:	xor    eax,0x458df57f
  402b5a:	ja     0x402afd
  402b5c:	jmp    0x402bba
  402b5e:	cli    
  402b5f:	in     al,dx
  402b60:	mov    ecx,0x70a115fd
  402b65:	test   eax,0xa5679cea
  402b6a:	pop    eax
  402b6b:	pop    ebp
  402b6c:	jp     0x402b99
  402b6e:	addr16 inc ecx
  402b70:	stos   BYTE PTR es:[edi],al
  402b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b72:	loope  0x402bae
  402b74:	stc    
  402b75:	repz or al,0x26
  402b78:	adc    ch,ah
  402b7a:	cdq    
  402b7b:	adc    eax,0x51c06f64
  402b80:	sbb    DWORD PTR [ecx],esp
  402b82:	xor    BYTE PTR [esi-0x7c248ac8],al
  402b88:	pop    esp
  402b89:	out    0x9,al
  402b8b:	pop    ebp
  402b8c:	loope  0x402bee
  402b8e:	mov    esi,0x3136fb50
  402b93:	cmc    
  402b94:	fmul   DWORD PTR [esi-0x23]
  402b97:	adc    DWORD PTR [ebp-0x6f42f23b],edi
  402b9d:	jg     0x402c1a
  402b9f:	out    0xc5,eax
  402ba1:	xchg   cl,ch
  402ba3:	aaa    
  402ba4:	stc    
  402ba5:	push   ds
  402ba6:	out    dx,al
  402ba7:	ja     0x402bda
  402ba9:	pop    ss
  402baa:	rcl    edi,cl
  402bac:	fcmovbe st,st(1)
  402bae:	stc    
  402baf:	inc    ebx
  402bb0:	push   es
  402bb1:	lods   al,BYTE PTR ds:[esi]
  402bb2:	jg     0x402bd7
  402bb4:	sub    eax,0xacc7dae3
  402bb9:	jbe    0x402bde
  402bbb:	enter  0xe41e,0x49
  402bbf:	jae    0x402b82
  402bc1:	mov    al,0x37
  402bc3:	inc    edi
  402bc4:	and    edi,DWORD PTR [eax+0x1f065f7e]
  402bca:	rcr    bh,cl
  402bcc:	mov    cl,0x1f
  402bce:	ss sbb al,0x45
  402bd1:	mov    esp,0x955cefc8
  402bd6:	out    0x7a,al
  402bd8:	icebp  
  402bd9:	mov    edi,0x50f661fb
  402bde:	cdq    
  402bdf:	pop    ebp
  402be0:	mov    esp,0x7afb84bf
  402be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402be6:	mov    dl,0xf2
  402be8:	lods   al,BYTE PTR ds:[esi]
  402be9:	fdivr  DWORD PTR [edx]
  402beb:	int    0xd2
  402bed:	(bad)  
  402bee:	sar    BYTE PTR [ebx-0x4fb53257],0xb
  402bf5:	jecxz  0x402bf6
  402bf7:	and    eax,0xb4ba4997
  402bfc:	add    eax,esp
  402bfe:	leave  
  402bff:	adc    al,0xc6
  402c01:	add    BYTE PTR [eax+ebp*1],dh
  402c04:	push   ecx
  402c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c06:	std    
  402c07:	call   0x7ec02f4e
  402c0c:	in     al,dx
  402c0d:	sub    dl,BYTE PTR [esi-0x30a7d6b7]
  402c13:	(bad)  
  402c14:	pop    ds
  402c15:	addr16 adc eax,0x771a11f4
  402c1b:	mov    al,ds:0xe8084447
  402c20:	rcl    BYTE PTR [ebx+eiz*2],cl
  402c23:	mov    al,0xf2
  402c25:	push   eax
  402c26:	and    BYTE PTR [ebp-0x53],ah
  402c29:	cmp    edi,DWORD PTR [ebx]
  402c2b:	retf   0x82fe
  402c2e:	and    al,BYTE PTR [ecx+0x45]
  402c31:	addr16 cwde 
  402c33:	lods   eax,DWORD PTR ds:[esi]
  402c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c35:	mov    ah,0xc2
  402c37:	push   ebx
  402c38:	push   0x46e8d78e
  402c3d:	or     eax,esp
  402c3f:	in     al,dx
  402c40:	enter  0x104b,0xae
  402c44:	iret   
  402c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c46:	add    dl,BYTE PTR [esi]
  402c48:	cli    
  402c49:	or     al,0xa0
  402c4b:	data16 add bh,BYTE PTR [eax+0x64]
  402c4f:	lahf   
  402c50:	das    
  402c51:	add    esp,esp
  402c53:	cmp    dh,dl
  402c55:	lods   al,BYTE PTR ds:[esi]
  402c56:	out    dx,al
  402c57:	outs   dx,DWORD PTR ds:[esi]
  402c58:	pmuludq mm5,QWORD PTR [ebx]
  402c5b:	gs pop ebp
  402c5d:	ja     0x402cb5
  402c5f:	or     DWORD PTR [ecx+0x47cbddda],edx
  402c65:	push   eax
  402c66:	fwait
  402c67:	lods   eax,DWORD PTR ds:[esi]
  402c68:	push   ecx
  402c69:	pop    ebp
  402c6a:	cmp    eax,ebx
  402c6c:	push   esi
  402c6d:	std    
  402c6e:	mov    edi,0x8ad88d68
  402c73:	enter  0xe872,0xe2
  402c77:	fucomip st,st(1)
  402c79:	xor    ebx,0xfffffff9
  402c7c:	scas   al,BYTE PTR es:[edi]
  402c7d:	pop    ss
  402c7e:	or     al,0xe4
  402c80:	jno    0x402c06
  402c82:	pop    edx
  402c83:	js     0x402c78
  402c85:	sbb    bh,BYTE PTR [edi+0x351befb4]
  402c8b:	lods   al,BYTE PTR ds:[esi]
  402c8c:	out    0x77,eax
  402c8e:	push   ecx
  402c8f:	gs daa 
  402c91:	mov    esp,0x1c0d4167
  402c96:	xchg   esp,eax
  402c97:	(bad)  
  402c99:	mov    ebp,0x898c1154
  402c9e:	mov    bh,0x67
  402ca0:	shl    DWORD PTR [ebx+ebx*1+0x62],1
  402ca4:	ja     0x402cff
  402ca6:	int    0x14
  402ca8:	inc    edi
  402ca9:	out    dx,al
  402caa:	adc    DWORD PTR [esi-0x19],0x93954fae
  402cb1:	fbstp  TBYTE PTR [eax+0x797fb9ab]
  402cb7:	or     edx,esp
  402cb9:	arpl   WORD PTR cs:[esi-0x49],dx
  402cbd:	repz (bad) 
  402cbf:	add    DWORD PTR [esi+0x37],esp
  402cc2:	sub    al,0x9d
  402cc4:	or     al,cl
  402cc6:	xor    BYTE PTR [ebx+0x67],dl
  402cc9:	sbb    esi,DWORD PTR [edx]
  402ccb:	fdiv   QWORD PTR [eax]
  402ccd:	leave  
  402cce:	call   DWORD PTR [edi+0xe5a1bdd]
  402cd4:	add    dh,dl
  402cd6:	test   DWORD PTR [esi*8+0x63ee7ce3],ebp
  402cdd:	jnp    0x402c6a
  402cdf:	push   0x19
  402ce1:	cmc    
  402ce2:	jmp    0x6f0bc4c5
  402ce7:	test   eax,0x8844adcf
  402cec:	sub    eax,0x47b3dfd6
  402cf1:	fwait
  402cf2:	and    al,0xdf
  402cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf5:	inc    ecx
  402cf6:	sbb    DWORD PTR ds:0xec1a2352,ebx
  402cfc:	in     al,0xcf
  402cfe:	loope  0x402cfd
  402d00:	ss (bad) 
  402d02:	bound  ebx,QWORD PTR [edi+0x75df2b7f]
  402d08:	pop    ecx
  402d09:	dec    eax
  402d0a:	cmp    dl,BYTE PTR [ecx-0xe8ea683]
  402d10:	mov    eax,0x4b15cb83
  402d15:	xlat   BYTE PTR ds:[ebx]
  402d16:	mov    BYTE PTR [edi-0x14],ch
  402d19:	push   ebp
  402d1a:	sub    eax,0x58f0d8bb
  402d1f:	sub    eax,0x63a14799
  402d24:	icebp  
  402d25:	push   ebp
  402d26:	lea    ecx,[edi]
  402d28:	mov    al,0x2f
  402d2a:	stos   DWORD PTR es:[edi],eax
  402d2b:	inc    edi
  402d2c:	inc    esi
  402d2d:	push   ecx
  402d2e:	clc    
  402d2f:	pop    eax
  402d30:	imul   ebx,DWORD PTR [edx-0x764edd3b],0xffffffc3
  402d37:	cs xchg esp,eax
  402d39:	pop    ebp
  402d3a:	inc    edi
  402d3b:	dec    edx
  402d3c:	add    eax,0x13d6670
  402d41:	ficomp WORD PTR [esi-0x76]
  402d44:	push   ebp
  402d45:	je     0x402d80
  402d47:	leave  
  402d48:	xor    BYTE PTR ds:0x5d4b449d,ah
  402d4e:	xchg   esi,eax
  402d4f:	xchg   ebp,eax
  402d50:	iret   
  402d51:	dec    edx
  402d52:	inc    ebp
  402d53:	jmp    0xb505f852
  402d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d59:	cmp    ebp,DWORD PTR [ebx-0x33c23d3a]
  402d5f:	xchg   edx,eax
  402d60:	arpl   WORD PTR [ecx],si
  402d62:	lods   al,BYTE PTR ds:[esi]
  402d63:	fiadd  DWORD PTR [ebx+0x3f]
  402d66:	jmp    0xf94307d4
  402d6b:	cli    
  402d6c:	or     eax,0x58f8d348
  402d71:	jae    0x402d1f
  402d73:	mov    BYTE PTR [eax],dh
  402d75:	mov    esp,0x6f6fa2f
  402d7a:	std    
  402d7b:	cmp    eax,0xbdbfe8f8
  402d80:	rcl    BYTE PTR [ebp+0x4f1943ca],cl
  402d86:	xchg   ecx,eax
  402d87:	mov    ch,0xda
  402d89:	jmp    0x6c31:0x8f5d5df4
  402d90:	xor    bl,BYTE PTR [eax-0x6b]
  402d93:	mov    cl,BYTE PTR [ebx+edi*8+0x59]
  402d97:	ret    
  402d98:	xchg   ebp,eax
  402d99:	add    ebp,DWORD PTR [ecx]
  402d9b:	pop    ebp
  402d9c:	mov    dh,0xa6
  402d9e:	push   ebp
  402d9f:	rol    BYTE PTR [ebx+0x7e3e65f0],cl
  402da5:	add    BYTE PTR [ecx+0x2a],bl
  402da8:	mov    ah,BYTE PTR [esp+ebx*2-0x14a32a71]
  402daf:	in     eax,0x90
  402db1:	xor    edi,eax
  402db3:	mov    esi,0xad327d54
  402db8:	(bad)  
  402db9:	xor    esp,DWORD PTR [ebx-0x49]
  402dbc:	nop
  402dbd:	mov    ds:0x4880fc92,eax
  402dc2:	sub    BYTE PTR [ecx],ch
  402dc4:	js     0x402d9d
  402dc6:	call   0x49369c54
  402dcb:	inc    esp
  402dcc:	pop    ecx
  402dcd:	enter  0x4d55,0x9d
  402dd1:	jb     0x402d89
  402dd3:	or     DWORD PTR ds:0x21d5b723,esi
  402dd9:	mov    eax,ds:0xd66488f3
  402dde:	outs   dx,BYTE PTR ds:[esi]
  402ddf:	jle    0x402da5
  402de1:	or     eax,0x543fd3c3
  402de6:	pop    ebx
  402de7:	popf   
  402de8:	xchg   edx,eax
  402de9:	(bad)  
  402dea:	push   ebx
  402deb:	pop    ss
  402dec:	jo     0x402de1
  402dee:	sbb    esi,DWORD PTR [edi]
  402df0:	sub    eax,0xfddaedbc
  402df5:	ret    0x7b51
  402df8:	xchg   ebp,ebx
  402dfa:	lds    ecx,FWORD PTR [ebp+0x30]
  402dfd:	pop    ebx
  402dfe:	or     eax,0x67d15a14
  402e03:	sbb    BYTE PTR [ebp-0x68a6d1ed],bl
  402e09:	inc    edi
  402e0a:	addr16 inc ebp
  402e0c:	mov    cl,0xfe
  402e0e:	in     eax,dx
  402e0f:	maxps  xmm1,XMMWORD PTR [ebx+0x69]
  402e13:	das    
  402e14:	cmp    dl,dl
  402e16:	or     dl,dl
  402e18:	iret   
  402e19:	sub    DWORD PTR [ecx+0x66b66f64],0xa36666a0
  402e23:	xchg   esp,eax
  402e24:	xchg   ecx,eax
  402e25:	pop    ebp
  402e26:	add    al,BYTE PTR [edi+ecx*2]
  402e29:	mov    ah,0xcd
  402e2b:	test   BYTE PTR [ebp-0x58],al
  402e2e:	mov    edx,0xa40a5139
  402e33:	nop
  402e34:	jns    0x402de3
  402e36:	outs   dx,BYTE PTR ds:[esi]
  402e37:	inc    esp
  402e38:	xchg   esp,eax
  402e39:	cmp    DWORD PTR [ebp+0x33],edx
  402e3c:	das    
  402e3d:	pop    esp
  402e3e:	jp     0x402de6
  402e40:	add    al,0xbe
  402e42:	in     al,dx
  402e43:	in     al,0xb3
  402e45:	xor    BYTE PTR [ebp-0x5bd8010e],bh
  402e4b:	loopne 0x402ea3
  402e4d:	sub    edx,DWORD PTR [edi]
  402e4f:	or     eax,0xf8b7d777
  402e54:	pop    esp
  402e55:	cmc    
  402e56:	pop    edx
  402e57:	xchg   DWORD PTR [ecx+0x74328ea2],ebp
  402e5d:	xchg   BYTE PTR [edi],dh
  402e5f:	inc    edi
  402e60:	lods   eax,DWORD PTR ds:[esi]
  402e61:	aam    0x72
  402e63:	icebp  
  402e64:	test   DWORD PTR [edx-0x6d443a22],edi
  402e6a:	dec    ebp
  402e6b:	test   eax,0x4715f545
  402e70:	call   0xec55:0x2f9b881
  402e77:	ret    0x5782
  402e7a:	pop    es
  402e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7c:	(bad)  
  402e7d:	(bad)  
  402e7e:	div    dh
  402e80:	nop
  402e81:	rcl    DWORD PTR [eax+0x476ac7de],0x4
  402e88:	pop    eax
  402e89:	adc    al,0x34
  402e8b:	or     eax,0x7e6212c8
  402e90:	rcr    BYTE PTR [ebp+0x5773b14e],cl
  402e96:	lds    ebx,FWORD PTR [edx+0x29]
  402e99:	ds xor bh,bh
  402e9c:	push   ecx
  402e9d:	ds in  al,0x1d
  402ea0:	bound  ecx,QWORD PTR [ebx+edx*8+0x41d78559]
  402ea7:	out    dx,al
  402ea8:	ja     0x402ed2
  402eaa:	fcomp  QWORD PTR [esi-0x2]
  402ead:	dec    ebp
  402eae:	(bad)  
  402eaf:	lds    eax,FWORD PTR [eax-0x22738cb9]
  402eb5:	push   ebp
  402eb6:	pop    ebx
  402eb7:	inc    esi
  402eb8:	ins    BYTE PTR es:[edi],dx
  402eb9:	push   ebx
  402eba:	fmulp  st(1),st
  402ebc:	mov    al,ds:0x95f70bb0
  402ec1:	push   0x87921bfb
  402ec6:	js     0x402eee
  402ec8:	xor    DWORD PTR [ebx+0x6272da56],ecx
  402ece:	loopne 0x402f4b
  402ed0:	jmp    0x4800:0xd90d248f
  402ed7:	jg     0x402eb5
  402ed9:	dec    ebp
  402eda:	add    DWORD PTR [ebx+0x2a],ebp
  402edd:	in     al,0x95
  402edf:	fsubrp st(1),st
  402ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee2:	pop    ds
  402ee3:	jbe    0x402f1a
  402ee5:	push   esi
  402ee6:	cmp    eax,0x6c374af0
  402eeb:	xchg   BYTE PTR [eax-0x3a],ch
  402eee:	loope  0x402f32
  402ef0:	dec    ecx
  402ef1:	les    ebp,FWORD PTR [edi-0x3b9e88ba]
  402ef7:	mov    al,ds:0x67e410a7
  402efc:	add    eax,0x1248841b
  402f01:	jg     0x402ea3
  402f03:	push   ebp
  402f04:	adc    eax,DWORD PTR cs:[edi]
  402f07:	jmp    DWORD PTR [esi-0x6d]
  402f0a:	out    0x37,al
  402f0c:	and    BYTE PTR [esi+0x9],bl
  402f0f:	mov    ebx,0xc3494e4e
  402f14:	dec    edi
  402f15:	int3   
  402f16:	not    ebx
  402f18:	jnp    0x402f98
  402f1a:	dec    esi
  402f1b:	int3   
  402f1c:	cmc    
  402f1d:	pop    edi
  402f1e:	sbb    ch,BYTE PTR [ecx-0x258f2e7f]
  402f24:	imul   BYTE PTR cs:[esi+0x1b]
  402f28:	lahf   
  402f29:	push   0xc
  402f2b:	sub    eax,0x9a4925d0
  402f30:	pop    edx
  402f31:	int    0x7a
  402f33:	cmp    edx,ebp
  402f35:	div    DWORD PTR [ecx]
  402f37:	ret    0x4ad0
  402f3a:	sti    
  402f3b:	sbb    eax,eax
  402f3d:	pushf  
  402f3e:	mov    ecx,0xe6745ba8
  402f43:	push   ecx
  402f44:	sub    al,0x78
  402f46:	int3   
  402f47:	mov    bh,0xd
  402f49:	stc    
  402f4a:	mov    esp,0xe62d8520
  402f4f:	pop    es
  402f50:	pop    ss
  402f51:	mov    edi,0xae4b9e8
  402f56:	ins    DWORD PTR es:[edi],dx
  402f57:	xchg   esi,eax
  402f58:	inc    edx
  402f59:	(bad)  
  402f5a:	add    esp,DWORD PTR [ebx]
  402f5c:	xlat   BYTE PTR ds:[ebx]
  402f5d:	mov    ch,0xfe
  402f5f:	pop    ebx
  402f60:	test   al,0x3a
  402f62:	fcmovb st,st(5)
  402f64:	jp     0x402f9f
  402f66:	jnp    0x402f4a
  402f68:	xor    al,0xfe
  402f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f6b:	enter  0x31d7,0xc7
  402f6f:	call   0xfb79ceeb
  402f74:	les    ebx,FWORD PTR es:[esi+0x3f]
  402f78:	dec    eax
  402f79:	push   edx
  402f7a:	add    ecx,DWORD PTR [eax+eiz*1]
  402f7d:	mov    ?,WORD PTR [eax+eiz*8+0x0]
  402f81:	dec    esi
  402f82:	fild   QWORD PTR [ecx-0x12]
  402f85:	(bad)  
  402f86:	jo     0x402f0b
  402f88:	sbb    al,0x83
  402f8a:	(bad)  
  402f8b:	out    dx,al
  402f8c:	pop    edi
  402f8d:	jg     0x402f78
  402f8f:	shl    DWORD PTR [ebp+0x45],1
  402f92:	scas   eax,DWORD PTR es:[edi]
  402f93:	dec    edx
  402f94:	pop    esi
  402f95:	sbb    eax,DWORD PTR [edi-0x26]
  402f98:	mov    gs,WORD PTR [ebx-0x78]
  402f9b:	(bad)  
  402f9c:	(bad)  
  402f9d:	ss jns 0x402fee
  402fa0:	sti    
  402fa1:	and    eax,0x7f0a4af4
  402fa6:	enter  0xf3a2,0xd7
  402faa:	rdmsr  
  402fac:	adc    al,0x3a
  402fae:	fiadd  DWORD PTR [ecx-0x66ecf915]
  402fb4:	push   cs
  402fb5:	sahf   
  402fb6:	pop    edx
  402fb7:	mov    ebp,0x43a5b997
  402fbc:	call   0x3ac29ff4
  402fc1:	or     ah,al
  402fc3:	xchg   ecx,eax
  402fc4:	ss int 0x96
  402fc7:	add    BYTE PTR [eax+eiz*8+0x4b5ccf00],0xe9
  402fcf:	or     DWORD PTR [edi+0x7d15fb60],esp
  402fd5:	mov    edi,0x9d4c380d
  402fda:	sbb    BYTE PTR [ebx-0x4d],0xba
  402fde:	mov    esp,0xb21e1228
  402fe3:	pop    edx
  402fe4:	mov    cl,0x51
  402fe6:	pop    edi
  402fe7:	(bad)  
  402fe8:	sbb    al,cl
  402fea:	jg     0x403043
  402fec:	xor    eax,0xef497055
  402ff1:	(bad)  
  402ff2:	(bad)  
  402ff3:	fiadd  DWORD PTR [esi+0x28]
  402ff6:	sbb    bl,0xe9
  402ff9:	es nop
  402ffb:	push   0x4ab60cad
  403000:	or     BYTE PTR [edx-0x6a8df538],0xfa
  403007:	ja     0x403023
  403009:	lods   al,BYTE PTR ds:[esi]
  40300a:	les    ebx,FWORD PTR [ebp-0x2843e0fc]
  403010:	add    ah,0xdc
  403013:	gs int 0x86
  403016:	lds    ebx,FWORD PTR ds:0x27972f4b
  40301c:	lods   al,BYTE PTR ds:[esi]
  40301d:	call   0xc91ae735
  403022:	xchg   ecx,eax
  403023:	jbe    0x40303b
  403025:	cmp    DWORD PTR [ebp-0x7f5b9f2d],edi
  40302b:	lock sub al,0x52
  40302e:	xchg   edx,eax
  40302f:	dec    eax
  403030:	add    bh,BYTE PTR [ecx+ebx*1+0x50b4c44e]
  403037:	adc    BYTE PTR [eax-0x14e9cca0],ah
  40303d:	xchg   edi,edx
  40303f:	dec    esp
  403040:	pop    es
  403041:	in     eax,dx
  403042:	cmc    
  403043:	in     al,dx
  403044:	call   0xe0df:0x8d107e80
  40304b:	push   esp
  40304c:	xor    ecx,DWORD PTR [eax+0x6413148a]
  403052:	add    edi,DWORD PTR [ecx+0x2760545c]
  403058:	mov    dl,BYTE PTR [edx+0x7a]
  40305b:	sahf   
  40305c:	out    dx,eax
  40305d:	jb     0x40301b
  40305f:	push   esi
  403060:	xchg   esi,eax
  403061:	loope  0x4030b1
  403063:	popa   
  403064:	and    edx,DWORD PTR [edx]
  403066:	sbb    al,0x7d
  403068:	jb     0x403000
  40306a:	and    ebx,DWORD PTR [ebx-0x6b983a2c]
  403070:	adc    eax,0x40e243d9
  403075:	xchg   esi,eax
  403076:	xchg   esi,eax
  403078:	xor    edi,DWORD PTR [edx]
  40307a:	mov    cl,0xdb
  40307c:	add    bp,WORD PTR [eax-0x158d52ab]
  403083:	mov    ds:0x1ed08234,al
  403088:	pop    ebp
  403089:	int    0xa6
  40308b:	popf   
  40308c:	sar    ch,1
  40308e:	pop    edi
  40308f:	ja     0x4030e7
  403091:	es xor dl,cl
  403094:	cli    
  403095:	jle    0x4030d5
  403097:	cmp    eax,0x2a8b820b
  40309c:	mov    edi,0x3bc166b
  4030a1:	and    BYTE PTR [ebp-0x6e],ah
  4030a4:	sub    DWORD PTR [ebp-0x51],ebx
  4030a7:	iret   
  4030a8:	push   ecx
  4030a9:	cwde   
  4030aa:	cwde   
  4030ab:	pop    es
  4030ac:	lods   eax,DWORD PTR ds:[esi]
  4030ad:	popf   
  4030ae:	lock test bl,ah
  4030b1:	in     eax,0xc2
  4030b3:	and    DWORD PTR [ecx+0x2021825d],esi
  4030b9:	retf   0x19ee
  4030bc:	lods   eax,DWORD PTR ds:[esi]
  4030bd:	fwait
  4030be:	mov    al,0x6
  4030c0:	push   esp
  4030c1:	pop    edx
  4030c2:	fldenv [ebx+0x2d]
  4030c5:	jne    0x4030a3
  4030c7:	push   esp
  4030c8:	ins    BYTE PTR es:[edi],dx
  4030c9:	(bad)  
  4030ca:	mov    ah,dl
  4030cc:	cli    
  4030cd:	push   esp
  4030ce:	rcl    ecx,cl
  4030d0:	push   ebp
  4030d1:	push   ss
  4030d2:	sub    BYTE PTR [ebx-0x62],bl
  4030d5:	(bad)  ds:0x8dccf94c
  4030db:	pop    ecx
  4030dc:	or     esp,DWORD PTR [edi]
  4030de:	jle    0x4030f1
  4030e0:	xor    DWORD PTR [ebx+0x889c82c],esi
  4030e6:	out    dx,eax
  4030e7:	xchg   esp,eax
  4030e8:	gs sub eax,0x4fe511f1
  4030ee:	lea    esp,[ebx+0x28]
  4030f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f2:	pop    edi
  4030f3:	push   es
  4030f4:	push   ds
  4030f5:	xchg   DWORD PTR [eax],ebx
  4030f7:	pop    ebx
  4030f8:	mov    ch,0xe7
  4030fa:	pop    eax
  4030fb:	lock pop eax
  4030fd:	int3   
  4030fe:	push   edi
  4030ff:	(bad)  
  403100:	mov    eax,DWORD PTR ds:[ebp-0x3b8d6fd8]
  403107:	pop    esi
  403108:	mov    ch,0xab
  40310a:	inc    ecx
  40310b:	lahf   
  40310c:	sub    ah,ch
  40310e:	pop    edx
  40310f:	dec    ebp
  403110:	xchg   dl,dl
  403112:	in     eax,dx
  403113:	xchg   ebp,eax
  403114:	adc    dh,ch
  403116:	jmp    0xfa15:0x97daf3a5
  40311d:	jne    0x40311b
  40311f:	outs   dx,DWORD PTR ds:[esi]
  403120:	inc    esi
  403121:	jo     0x40312a
  403123:	leave  
  403124:	cmc    
  403125:	mov    esi,0x86b66763
  40312a:	sub    edi,DWORD PTR [eax-0x3022443b]
  403130:	hlt    
  403131:	inc    ecx
  403132:	and    BYTE PTR [eax+0x49a5f031],cl
  403138:	xchg   edi,eax
  403139:	xor    eax,0x99fdba01
  40313e:	dec    edx
  40313f:	or     eax,DWORD PTR [edi-0x53]
  403142:	fbld   TBYTE PTR [edx+0xc]
  403145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403146:	and    BYTE PTR [esi+0x6482ee0a],dl
  40314c:	xor    dl,dl
  40314e:	jle    0x403146
  403150:	gs mov es,edi
  403153:	and    al,0x54
  403155:	stos   BYTE PTR es:[edi],al
  403156:	mov    al,ds:0xc77adb91
  40315b:	mov    ch,0xfa
  40315d:	mov    ah,0x6a
  40315f:	out    0xc5,al
  403161:	(bad)  
  403162:	mov    eax,ds:0xc05204de
  403167:	jb     0x40316a
  403169:	dec    edx
  40316a:	icebp  
  40316b:	adc    BYTE PTR [eax-0x79163537],bh
  403171:	adc    BYTE PTR [ebx-0x69],bl
  403174:	call   0x47f6:0x2469593b
  40317b:	stos   BYTE PTR es:[edi],al
  40317c:	jl     0x403127
  40317e:	jae    0x4031b1
  403180:	outs   dx,BYTE PTR ds:[esi]
  403181:	stos   DWORD PTR es:[edi],eax
  403182:	setge  BYTE PTR [esi+0x18a93e15]
  403189:	jle    0x403208
  40318b:	out    0x64,al
  40318d:	inc    eax
  40318e:	xchg   ebx,eax
  40318f:	retf   0x630
  403192:	sbb    al,0xc5
  403194:	iret   
  403195:	cwde   
  403196:	dec    edx
  403197:	adc    DWORD PTR [ebx],esp
  403199:	cmp    BYTE PTR [ebx],ah
  40319b:	aaa    
  40319c:	imul   esi,DWORD PTR [edx],0x917736a8
  4031a2:	clc    
  4031a3:	bound  esp,QWORD PTR [esi-0x57d8c71f]
  4031a9:	or     eax,0x3f9d2760
  4031ae:	adc    DWORD PTR [ecx+0x524e1e43],eax
  4031b4:	or     BYTE PTR [ebp+0x7],bh
  4031b7:	retf   
  4031b8:	cmp    DWORD PTR [edi+0x14],edi
  4031bb:	jae    0x403173
  4031bd:	out    dx,al
  4031be:	xor    BYTE PTR [ecx],al
  4031c0:	inc    ebx
  4031c1:	rcl    DWORD PTR [esi],cl
  4031c3:	mov    eax,ds:0xd74f1063
  4031c8:	rcr    BYTE PTR [ebx],1
  4031ca:	lea    ebx,[eax+ebx*2-0x65]
  4031ce:	xor    ah,dl
  4031d0:	mov    ch,0xe8
  4031d2:	lahf   
  4031d3:	push   ecx
  4031d4:	push   ebx
  4031d5:	add    al,BYTE PTR [edi-0x458ca124]
  4031db:	out    dx,al
  4031dc:	ins    DWORD PTR es:[edi],dx
  4031dd:	xor    al,0x6a
  4031df:	stos   DWORD PTR es:[edi],eax
  4031e0:	in     eax,dx
  4031e1:	data16 add bl,bl
  4031e4:	and    ah,ch
  4031e6:	idiv   DWORD PTR [edi+0x7d]
  4031e9:	imul   edx,DWORD PTR [ecx+0x6f],0x95c3674f
  4031f0:	js     0x403181
  4031f2:	outs   dx,BYTE PTR ds:[esi]
  4031f3:	add    dl,BYTE PTR [edx+0x1e]
  4031f6:	in     al,dx
  4031f7:	pop    ebp
  4031f8:	dec    esi
  4031f9:	popa   
  4031fa:	inc    ebp
  4031fb:	mov    bl,0xdf
  4031fd:	out    0xf6,eax
  4031ff:	xor    esp,DWORD PTR [esp+eax*2-0x51]
  403203:	sbb    DWORD PTR [esi-0x65f2768f],ecx
  403209:	cmp    al,0x9
  40320b:	repz sub dh,BYTE PTR [ebx-0x45550951]
  403212:	std    
  403213:	js     0x403271
  403215:	in     eax,dx
  403216:	push   ds
  403217:	clc    
  403218:	mov    dh,0x48
  40321a:	sub    DWORD PTR [edx-0x6796e123],edi
  403220:	mov    al,ds:0x75775b79
  403225:	out    dx,eax
  403226:	rcl    DWORD PTR [edi],0x77
  403229:	push   ebp
  40322a:	jae    0x4032a4
  40322c:	jbe    0x403273
  40322e:	loop   0x40327d
  403230:	jb     0x4031bd
  403232:	imul   edi,DWORD PTR [esi],0x153f8491
  403238:	mov    ebp,0xf26e736d
  40323d:	pop    ebp
  40323e:	add    al,0x79
  403240:	retf   0x806d
  403243:	iret   
  403244:	(bad)  
  403246:	sub    BYTE PTR [eax],al
  403248:	cli    
  403249:	dec    ecx
  40324a:	mov    ebx,0x77fe64d8
  40324f:	out    dx,al
  403250:	inc    edi
  403251:	lahf   
  403252:	sbb    ah,ch
  403254:	dec    ebx
  403255:	adc    edx,edx
  403257:	push   ds
  403258:	aam    0xb6
  40325a:	sub    BYTE PTR [ecx-0x76],ah
  40325d:	imul   edx,DWORD PTR [ebp-0x2de8635d],0x932e5f48
  403267:	jge    0x4032a8
  403269:	adc    DWORD PTR ds:0x8dd05448,esi
  40326f:	sbb    al,0x8c
  403271:	or     DWORD PTR [ecx-0x31],ecx
  403274:	cli    
  403275:	stos   DWORD PTR es:[edi],eax
  403276:	xlat   BYTE PTR ds:[ebx]
  403277:	inc    edi
  403278:	fisub  DWORD PTR [esi+ecx*8+0x60]
  40327c:	pextrw ebp,(bad),0xc5
  40327e:	imul   ebx,DWORD PTR [edi+0x3c8035fa],0x39
  403285:	out    0x6d,eax
  403287:	nop
  403288:	imul   eax,eax,0x49a5ce8f
  40328e:	push   ebx
  40328f:	loopne 0x4032c5
  403291:	xor    al,0xe6
  403293:	or     al,0xd5
  403295:	adc    eax,0x450d4db8
  40329a:	dec    ebp
  40329b:	xchg   ebp,eax
  40329c:	cmp    eax,0x498b504b
  4032a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a2:	popf   
  4032a3:	dec    ecx
  4032a4:	cmp    ah,BYTE PTR [eax]
  4032a6:	(bad)  
  4032a7:	xlat   BYTE PTR ds:[ebx]
  4032a8:	cmc    
  4032a9:	mov    dh,0xfa
  4032ab:	adc    al,0xb6
  4032ad:	test   DWORD PTR [ebp+0xef35dbc],ecx
  4032b3:	cmp    edi,DWORD PTR [eax+0x5d2474d1]
  4032b9:	mov    ebp,0x8d04200b
  4032be:	mov    fs,WORD PTR [edi+0x46]
  4032c1:	aam    0x70
  4032c3:	push   cs
  4032c4:	fidiv  WORD PTR [esi+0x8fa6d26]
  4032ca:	mov    ch,0x2f
  4032cc:	mov    bl,0xe9
  4032ce:	sub    BYTE PTR [edx],cl
  4032d0:	inc    edi
  4032d1:	je     0x403331
  4032d3:	hlt    
  4032d4:	sub    eax,0xbf4145e3
  4032d9:	inc    edx
  4032da:	scas   eax,DWORD PTR es:[edi]
  4032db:	cdq    
  4032dc:	pop    esi
  4032dd:	ja     0x4032a4
  4032df:	mov    dh,BYTE PTR [eax+esi*8+0x3f]
  4032e3:	int3   
  4032e4:	retf   0x6d00
  4032e7:	fcomp  st(2)
  4032e9:	pop    edi
  4032ea:	cld    
  4032eb:	push   esp
  4032ec:	jmp    0x4032ad
  4032ee:	lds    ecx,FWORD PTR [edi+0x4c995ff]
  4032f4:	add    eax,DWORD PTR [esi-0x7af9c2d7]
  4032fa:	arpl   WORD PTR [ebx],cx
  4032fc:	push   esp
  4032fd:	into   
  4032fe:	imul   ebx,DWORD PTR [ebx+0x58329636],0xffffffb3
  403305:	repnz icebp 
  403307:	retf   0x2349
  40330a:	dec    ecx
  40330b:	mul    DWORD PTR [ecx-0x502efd0d]
  403311:	pop    esp
  403312:	pop    ss
  403313:	mov    esp,0xe4578569
  403318:	mov    eax,0xed18144d
  40331d:	inc    esi
  40331e:	pop    edx
  40331f:	dec    edi
  403320:	(bad)  
  403321:	in     eax,dx
  403322:	xchg   edx,eax
  403323:	cs mov edx,0x6fb12ce5
  403329:	inc    ecx
  40332a:	ds pop es
  40332c:	dec    eax
  40332d:	dec    ebp
  40332e:	loopne 0x4032e3
  403330:	dec    ecx
  403331:	push   ds
  403332:	sub    cl,ah
  403334:	or     esp,DWORD PTR [ebp+ebp*8+0x5b]
  403338:	mov    ah,0xa2
  40333a:	shl    BYTE PTR [ecx-0x23c2d79b],0x37
  403341:	or     edx,DWORD PTR [esi]
  403343:	add    BYTE PTR [esi],ah
  403345:	sub    eax,0x1beea5b6
  40334a:	push   esp
  40334b:	add    BYTE PTR [ebx],ch
  40334d:	push   es
  40334e:	rcr    DWORD PTR [ebp+edi*1-0x4a],1
  403352:	cmp    eax,0x1235f459
  403357:	loopne 0x4033cc
  403359:	mov    WORD PTR [ebx-0x70],ds
  40335c:	fisubr WORD PTR [edi-0x4e6e2f8d]
  403362:	push   ebp
  403363:	outs   dx,BYTE PTR ds:[esi]
  403364:	(bad)  
  403366:	aas    
  403367:	adc    DWORD PTR [edx+0x4d591f90],edx
  40336d:	sub    al,0x94
  40336f:	xlat   BYTE PTR ds:[ebx]
  403370:	mov    esp,0x5b3a31f4
  403375:	es mov al,0x6a
  403378:	(bad)  
  40337a:	sub    DWORD PTR [esi],ecx
  40337c:	pusha  
  40337d:	sbb    al,0xfb
  40337f:	push   ss
  403380:	pusha  
  403381:	jmp    DWORD PTR [esi+ebx*1-0x4759d39c]
  403388:	pusha  
  403389:	bnd jbe 0x403394
  40338c:	pop    es
  40338d:	mov    edi,es
  40338f:	mov    al,ds:0x38dc2374
  403394:	sar    bh,cl
  403396:	inc    BYTE PTR [ebx-0x71d9eb20]
  40339c:	repz das 
  40339e:	in     eax,0xda
  4033a0:	pop    ebp
  4033a1:	pop    ebx
  4033a2:	push   ebx
  4033a3:	sbb    DWORD PTR [ebx+esi*4],ebx
  4033a6:	xor    eax,0x1718bad7
  4033ab:	cmp    al,0xa8
  4033ad:	aaa    
  4033ae:	lock fst QWORD PTR [ebp-0x12]
  4033b2:	mov    fs,WORD PTR [edi-0x2a]
  4033b5:	ret    
  4033b6:	lods   eax,DWORD PTR ds:[esi]
  4033b7:	dec    esi
  4033b8:	ins    BYTE PTR es:[edi],dx
  4033b9:	and    DWORD PTR [eax-0x5f29c36f],0xffffffe3
  4033c0:	dec    ebx
  4033c1:	jmp    0x961272b3
  4033c6:	loop   0x403349
  4033c8:	aaa    
  4033c9:	xchg   edi,eax
  4033ca:	cld    
  4033cb:	sbb    DWORD PTR [edi+0x68],esp
  4033ce:	ret    
  4033cf:	xchg   ebx,eax
  4033d0:	inc    esi
  4033d1:	pushf  
  4033d2:	or     al,0xe7
  4033d4:	add    DWORD PTR [esi-0x4b],0x9a1860af
  4033db:	js     0x4033fb
  4033dd:	ins    DWORD PTR es:[edi],dx
  4033de:	push   eax
  4033df:	dec    ebp
  4033e0:	and    DWORD PTR [ebx+0x4ce0d60f],edx
  4033e6:	mov    ds:0x9f5aedb6,eax
  4033eb:	inc    ebx
  4033ec:	xor    al,0x8e
  4033ef:	sbb    DWORD PTR [ebx+0x32],ecx
  4033f2:	and    al,0x4f
  4033f4:	fsincos 
  4033f6:	cli    
  4033f7:	jg     0x40339a
  4033f9:	and    al,0x63
  4033fb:	out    0x2a,al
  4033fd:	mov    ah,al
  4033ff:	retf   
  403400:	rcr    DWORD PTR [edi+0x6e],1
  403403:	mov    ebx,0x6ed63595
  403408:	mov    esi,DWORD PTR [edx-0x4e]
  40340b:	repz rcr dh,0xed
  40340f:	int3   
  403410:	pop    ds
  403411:	imul   esp,edx,0x25
  403414:	ins    BYTE PTR es:[edi],dx
  403415:	push   ds
  403416:	div    BYTE PTR [edi+esi*1-0x12]
  40341a:	xchg   esi,eax
  40341b:	xor    DWORD PTR [ebp+edi*4-0x379452a4],esi
  403422:	push   es
  403423:	adc    ah,dl
  403425:	ss pushf 
  403427:	retf   
  403428:	lds    ecx,FWORD PTR [eax-0x2a43694d]
  40342e:	retf   0xe4a9
  403431:	cmc    
  403432:	enter  0xda20,0x3c
  403436:	mov    ds:0xa52daf91,al
  40343b:	cmp    esp,edx
  40343d:	dec    edi
  40343e:	fisub  DWORD PTR [edx+0x2818cc4a]
  403444:	xlat   BYTE PTR ds:[ebx]
  403445:	mov    eax,0xf81c747b
  40344a:	jns    0x4034a8
  40344c:	mov    ds:0xe225929c,eax
  403451:	sub    eax,0xe0f9eb8a
  403456:	or     BYTE PTR [esi-0x55b57aa2],ch
  40345c:	xor    al,0xa4
  40345e:	push   es
  40345f:	push   es
  403460:	fld    DWORD PTR es:[esi-0x5a]
  403464:	push   edx
  403465:	mov    cl,BYTE PTR [ebp+eiz*1+0x56]
  403469:	adc    DWORD PTR ds:[edx],eax
  40346c:	adc    edi,edx
  40346e:	cmp    DWORD PTR [ebx],ecx
  403470:	jbe    0x403491
  403472:	push   edx
  403473:	hlt    
  403474:	nop
  403475:	jae    0x403411
  403477:	dec    ebx
  403478:	hlt    
  403479:	sbb    al,0x2f
  40347b:	fs pop ds
  40347d:	mov    edi,0xf4155394
  403482:	pop    eax
  403483:	and    eax,0x91b79c36
  403488:	cs push ds
  40348a:	aam    0xb0
  40348c:	imul   ebx,edi,0xdc08139f
  403492:	aam    0x98
  403494:	fwait
  403495:	mov    cl,0x25
  403497:	jae    0x403461
  403499:	rcl    BYTE PTR [edi],0x93
  40349c:	inc    esi
  40349d:	jo     0x4034b9
  40349f:	dec    ecx
  4034a0:	pop    edx
  4034a1:	or     ebx,DWORD PTR [ecx-0x5e3d284]
  4034a7:	pop    ds
  4034a8:	jno    0x4034c5
  4034aa:	push   ebp
  4034ab:	sbb    eax,0x82be516c
  4034b0:	mov    edx,0xa0839d0a
  4034b5:	and    ebp,DWORD PTR [ebx-0x9cfafe6]
  4034bb:	mov    ebx,0x412065a7
  4034c0:	xchg   edi,eax
  4034c1:	hlt    
  4034c2:	test   DWORD PTR [edi-0x537ba868],esp
  4034c8:	retf   
  4034c9:	retf   
  4034ca:	out    0xd2,al
  4034cc:	xchg   ecx,eax
  4034cd:	push   eax
  4034ce:	lahf   
  4034cf:	das    
  4034d0:	fisub  WORD PTR [esi-0x33694e00]
  4034d6:	in     eax,0x7e
  4034d8:	jg     0x403482
  4034da:	popa   
  4034db:	inc    edx
  4034dc:	mov    dh,0x50
  4034de:	jmp    DWORD PTR [esp+eax*4+0x234b9de2]
  4034e5:	ret    
  4034e6:	pusha  
  4034e7:	pop    edx
  4034e8:	cmp    eax,0x1b123402
  4034ed:	mov    ebx,0xc3e7f35e
  4034f2:	dec    ecx
  4034f3:	xor    al,0x17
  4034f5:	outs   dx,DWORD PTR ds:[esi]
  4034f6:	test   DWORD PTR [eax+0x277f3a2b],edi
  4034fc:	push   cs
  4034fd:	ror    BYTE PTR ds:0xf2791172,1
  403503:	sti    
  403504:	pushf  
  403505:	stos   DWORD PTR es:[edi],eax
  403506:	(bad)  
  403507:	sti    
  403508:	inc    edi
  403509:	mov    eax,ds:0x401b33c4
  40350e:	addr16 jg 0x4034eb
  403511:	add    esi,eax
  403513:	ins    BYTE PTR es:[edi],dx
  403514:	(bad)  
  403515:	lock add BYTE PTR ds:0xada0f82d,bl
  40351c:	push   ds
  40351d:	jl     0x403564
  40351f:	inc    esi
  403520:	push   ebx
  403521:	cmp    al,0xbe
  403523:	xor    bh,ah
  403525:	dec    ebp
  403526:	inc    ebx
  403527:	lea    ebp,[ebx]
  403529:	ror    BYTE PTR [eax-0x2c3366d3],0xcb
  403530:	ret    0x6365
  403533:	mov    eax,ds:0x520368bd
  403538:	push   esp
  403539:	sub    edi,DWORD PTR [ecx+0x73]
  40353c:	jge    0x403560
  40353e:	mov    edx,0xce1812a8
  403543:	cdq    
  403544:	shr    DWORD PTR [esi-0x25dfe547],0x7a
  40354b:	inc    ebx
  40354c:	adc    esp,DWORD PTR [ebx+ebp*1-0x7b]
  403550:	inc    edx
  403551:	mov    WORD PTR [ecx+ecx*4+0x73c7e4bd],?
  403558:	hlt    
  403559:	std    
  40355a:	add    ch,BYTE PTR [eax]
  40355c:	neg    DWORD PTR [edi+0x6b]
  40355f:	mov    esi,0x4b7aa64
  403564:	icebp  
  403565:	mov    ebp,0x99a37898
  40356a:	inc    ebx
  40356b:	jbe    0x40355c
  40356d:	inc    esp
  40356e:	inc    edi
  40356f:	inc    edx
  403570:	mov    esi,0x1b6e8a76
  403575:	in     eax,dx
  403576:	aad    0x1
  403578:	iret   
  403579:	shl    DWORD PTR [eax+ebx*8-0x43e19f6a],cl
  403580:	mov    ebx,0xbca95264
  403585:	xor    al,0x20
  403587:	cmp    dh,BYTE PTR [ebp-0x4bb6826e]
  40358d:	adc    DWORD PTR [esi],0xffffff9d
  403590:	adc    dh,BYTE PTR ds:0x2d97b8f5
  403596:	jg     0x4035f2
  403598:	frstor [eax+0x6e06bf93]
  40359e:	jae    0x4035b7
  4035a0:	cmc    
  4035a1:	inc    ecx
  4035a2:	push   edi
  4035a3:	lea    esi,[eax+ebp*4+0x67]
  4035a7:	es jmp 0x4035ed
  4035aa:	test   BYTE PTR [ecx-0x1d48795e],cl
  4035b0:	inc    ebp
  4035b1:	mov    ebp,0x8c7c1730
  4035b6:	mov    edi,eax
  4035b8:	test   DWORD PTR ds:0x1c90503a,0xc6534b46
  4035c2:	in     ax,0xcd
  4035c5:	sbb    DWORD PTR [ecx],0x85f079b1
  4035cb:	adc    al,0x62
  4035cd:	mov    al,0x97
  4035cf:	in     eax,dx
  4035d0:	mov    esp,0x656f615a
  4035d5:	jnp    0x403648
  4035d7:	nop
  4035d8:	popa   
  4035d9:	cld    
  4035da:	cmp    DWORD PTR [eax],esp
  4035dc:	loope  0x40361f
  4035de:	repnz ins BYTE PTR es:[edi],dx
  4035e0:	int    0xdc
  4035e2:	add    BYTE PTR [eax+0x697f2660],bh
  4035e8:	into   
  4035e9:	mov    ah,0x7d
  4035eb:	or     BYTE PTR [ebx-0x7c1d32cd],ch
  4035f1:	lahf   
  4035f2:	dec    edx
  4035f3:	pop    ss
  4035f4:	nop
  4035f5:	jp     0x4035c3
  4035f7:	hlt    
  4035f8:	cmc    
  4035f9:	mov    eax,ds:0x88c77ce0
  4035fe:	or     al,0xa1
  403600:	ret    
  403601:	in     eax,0xb6
  403603:	mov    ebx,0x8505b7ca
  403608:	in     al,0x4
  40360a:	xor    BYTE PTR [edx+0x27f98875],al
  403610:	call   0x5a5d9545
  403615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403616:	clc    
  403617:	push   0x64e6cd6d
  40361c:	bound  edx,QWORD PTR [ebp-0x2697b494]
  403622:	xchg   ah,ah
  403624:	mov    cl,0xa6
  403626:	fld    TBYTE PTR [eax-0x6d]
  403629:	and    DWORD PTR [ebx-0x34],eax
  40362c:	ret    
  40362d:	hlt    
  40362e:	xor    bh,BYTE PTR [edx-0x5bbd234a]
  403634:	dec    ecx
  403635:	stos   BYTE PTR es:[edi],al
  403636:	ror    DWORD PTR [eax-0x6c],1
  403639:	xor    BYTE PTR [eax-0x3f80257],0x6
  403640:	gs sbb al,0x9a
  403643:	and    eax,edx
  403645:	mov    ds:0x48da369b,al
  40364a:	sbb    dh,BYTE PTR [esi+0x6508d0d6]
  403650:	fcomp  DWORD PTR [edx]
  403652:	cmp    DWORD PTR [ebx],esi
  403654:	xor    BYTE PTR [eax-0x5253a0ef],ah
  40365a:	add    cl,0x9f
  40365d:	and    BYTE PTR [ecx+0x5f],al
  403660:	ss leave 
  403662:	pop    ds
  403663:	inc    edi
  403664:	retf   0x8556
  403667:	arpl   WORD PTR [eax+0x2e],cx
  40366a:	shr    DWORD PTR [ecx-0x2d],cl
  40366d:	adc    ebx,0x394f5a21
  403673:	add    DWORD PTR [ecx],ebx
  403675:	xor    ah,ah
  403677:	jg     0x40361e
  403679:	test   eax,0x9da0bf15
  40367e:	lods   eax,DWORD PTR ds:[esi]
  403680:	xor    dl,bh
  403682:	and    eax,0x559f638c
  403687:	mov    BYTE PTR [edi],bh
  403689:	dec    BYTE PTR [ecx+0x7bdc61e3]
  40368f:	repnz xor al,0xf
  403692:	push   edi
  403693:	push   eax
  403694:	mov    bh,BYTE PTR [esi+eiz*4+0x6f]
  403698:	enter  0xcdfd,0x2b
  40369c:	fsubrp st(1),st
  40369e:	retf   0xfd2e
  4036a1:	ds push esi
  4036a3:	loop   0x403695
  4036a5:	mov    dh,0xc2
  4036a7:	jle    0x40371f
  4036a9:	or     al,bl
  4036ab:	je     0x4036c0
  4036ad:	mov    WORD PTR [edi],?
  4036af:	gs ja  0x40371d
  4036b2:	pop    ds
  4036b3:	repnz xor BYTE PTR ds:0x7e922821,dh
  4036ba:	xchg   BYTE PTR [esi-0x67494810],dl
  4036c0:	outs   dx,BYTE PTR ds:[esi]
  4036c1:	sbb    dh,BYTE PTR [esi+0x36]
  4036c4:	lock push 0x76e3dfb2
  4036ca:	jecxz  0x4036cd
  4036cc:	mov    bh,0x54
  4036ce:	pop    edx
  4036cf:	cmp    DWORD PTR [ebx],edx
  4036d1:	sub    BYTE PTR [edi+0x2e],ah
  4036d4:	jmp    0x403670
  4036d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d7:	and    BYTE PTR [edi-0x7c56d45e],bh
  4036dd:	popf   
  4036de:	ins    DWORD PTR es:[edi],dx
  4036df:	lea    ebp,[edi-0x1a29da0e]
  4036e5:	mov    eax,ds:0x6b64e750
  4036ea:	lds    eax,FWORD PTR [ebx]
  4036ec:	lea    ebx,[ebx+0x7d7e5ff3]
  4036f2:	not    al
  4036f4:	fisubr DWORD PTR [ebx-0x2596a971]
  4036fa:	xor    edx,ecx
  4036fc:	stos   BYTE PTR es:[edi],al
  4036fd:	daa    
  4036fe:	int    0x73
  403700:	xchg   ebp,eax
  403701:	inc    ebx
  403702:	jg     0x4036bf
  403704:	mov    DWORD PTR [esi-0x23],ecx
  403707:	cwde   
  403708:	xor    BYTE PTR [ebx+0x16],cl
  40370b:	pop    eax
  40370c:	ret    0xc389
  40370f:	cmp    dl,al
  403711:	fisubr DWORD PTR [esi]
  403713:	xchg   DWORD PTR [esi-0x74bbe1d7],esp
  403719:	inc    ebp
  40371a:	int3   
  40371b:	rcl    DWORD PTR [ebx-0x17ea5b32],1
  403721:	jne    0x403773
  403723:	sub    al,0x4
  403725:	xlat   BYTE PTR ds:[ebx]
  403726:	(bad)  
  403727:	mov    ds:0xd86731e3,al
  40372c:	pminub mm7,mm1
  40372f:	lock pop ebp
  403731:	cld    
  403732:	mov    ebx,ds
  403734:	aad    0x8a
  403736:	xor    dl,BYTE PTR [edx-0x49]
  403739:	jl     0x40375b
  40373b:	mov    al,0x57
  40373d:	sbb    bl,BYTE PTR [ecx+eax*4]
  403740:	cdq    
  403741:	sub    edi,ecx
  403743:	pusha  
  403744:	dec    ebp
  403745:	mov    dl,0xe4
  403747:	lds    edi,FWORD PTR [edi+ebp*1+0x791213ee]
  40374e:	push   0x54
  403750:	aam    0x76
  403752:	icebp  
  403753:	(bad)  [eax]
  403755:	mov    al,0x3a
  403757:	mov    esi,0x2b0135d1
  40375c:	mov    bl,0xe9
  40375e:	mov    ah,0xb8
  403760:	mov    al,0xb6
  403762:	inc    eax
  403763:	in     al,0x9d
  403765:	loope  0x40377b
  403767:	jo     0x40373c
  403769:	daa    
  40376a:	inc    esp
  40376b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40376c:	mov    ds:0xe1e3295c,al
  403771:	push   cs
  403772:	inc    ebx
  403773:	lahf   
  403774:	xchg   ebp,eax
  403775:	mov    dh,0xe5
  403777:	ret    
  403778:	mov    esi,0xcd1451cd
  40377d:	popf   
  40377e:	sbb    bl,ch
  403780:	not    BYTE PTR [edi+0x48ee8fa]
  403786:	xor    ah,BYTE PTR [esi-0x66]
  403789:	enter  0x4948,0x93
  40378d:	push   ebp
  40378e:	jno    0x4037d4
  403790:	addr16 inc esi
  403792:	in     eax,dx
  403793:	dec    esp
  403794:	ins    BYTE PTR es:[edi],dx
  403795:	jmp    0x9620:0xf6a98e1
  40379c:	outs   dx,BYTE PTR ds:[esi]
  40379d:	imul   ebx,ebx,0x79c13c3b
  4037a3:	shr    DWORD PTR [esi],0xe7
  4037a6:	xor    DWORD PTR [ecx+ecx*1+0x61b73404],ebx
  4037ad:	and    al,0xdf
  4037af:	jae    0x40377c
  4037b1:	scas   eax,DWORD PTR es:[edi]
  4037b2:	(bad)  
  4037b3:	cmp    DWORD PTR [esi-0x59],ebx
  4037b6:	mov    esp,0x732874fb
  4037bb:	sbb    BYTE PTR [ecx],0x87
  4037be:	test   al,0xe4
  4037c0:	xchg   ecx,eax
  4037c1:	push   es
  4037c2:	mov    cl,0x8d
  4037c4:	jmp    0x4037aa
  4037c6:	into   
  4037c7:	cmp    BYTE PTR [ecx],dl
  4037c9:	dec    ebx
  4037ca:	cmp    edx,DWORD PTR [eax+0x34]
  4037cd:	lods   eax,DWORD PTR ds:[si]
  4037cf:	xchg   ebx,eax
  4037d0:	mov    bh,0xe2
  4037d2:	jo     0x403771
  4037d4:	stos   BYTE PTR es:[edi],al
  4037d5:	addr16 call 0xc7940b32
  4037db:	inc    esi
  4037dc:	push   ecx
  4037dd:	jnp    0x403779
  4037df:	shl    BYTE PTR [ebx+edx*4-0x4ee90c74],1
  4037e6:	jge    0x4037d7
  4037e8:	mov    edi,0xa6971250
  4037ed:	push   eax
  4037ee:	inc    ebx
  4037ef:	cmp    al,0xe1
  4037f1:	fcomp  DWORD PTR [edx-0x475268e2]
  4037f7:	rol    BYTE PTR [ebx+0x20],cl
  4037fa:	loope  0x40383d
  4037fc:	xchg   DWORD PTR [esi-0x46d382e4],ebx
  403802:	scas   eax,DWORD PTR es:[edi]
  403803:	out    dx,al
  403804:	jmp    0xccdb2070
  403809:	loop   0x4037bd
  40380b:	lds    ebp,FWORD PTR [edi+0x35]
  40380e:	aam    0x94
  403810:	mov    cl,0x5d
  403812:	pop    ds
  403813:	pause  
  403815:	fcom   DWORD PTR [esi]
  403817:	shl    ecx,0xac
  40381a:	call   0x6ea91f03
  40381f:	push   edx
  403820:	xor    BYTE PTR [edx+edx*1+0x6837db6b],ch
  403827:	push   ebp
  403828:	cmp    dh,BYTE PTR [edx-0x494cdd3]
  40382e:	popa   
  40382f:	ja     0x4037bf
  403831:	add    ah,ah
  403833:	mov    BYTE PTR [ebx],bl
  403835:	add    DWORD PTR [ebx-0x19],ebx
  403838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403839:	sbb    eax,0xf8e5a2bc
  40383e:	xor    BYTE PTR [eax-0x51a14495],ch
  403844:	test   al,0x49
  403846:	mov    eax,ds:0x9e00beb6
  40384b:	iret   
  40384c:	std    
  40384d:	dec    edi
  40384e:	xchg   esp,eax
  40384f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403850:	dec    bh
  403852:	mov    bh,0x82
  403854:	retf   0xb768
  403857:	push   ds
  403858:	aam    0x88
  40385a:	or     cl,BYTE PTR [edi]
  40385c:	aas    
  40385d:	sbb    eax,0x2fbfc286
  403862:	adc    DWORD PTR [ecx-0x4f],0x682c355e
  403869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386a:	or     al,0xb2
  40386c:	ret    0x419f
  40386f:	jmp    0x3d7884a7
  403874:	pusha  
  403875:	xor    BYTE PTR es:[edi+eiz*4],0xb5
  40387a:	and    dh,ch
  40387c:	scas   al,BYTE PTR es:[edi]
  40387d:	pop    edi
  40387e:	test   DWORD PTR [edx+0x15],ecx
  403881:	(bad)  
  403883:	cmp    esp,esi
  403885:	je     0x403844
  403887:	push   es
  403888:	cmp    eax,0xe672409b
  40388d:	sub    ebx,ecx
  40388f:	xor    eax,0xe16d98f5
  403894:	test   eax,0xf0a29d2f
  403899:	xor    edx,edi
  40389b:	je     0x4038e6
  40389d:	call   0x92c6:0xbe277dea
  4038a4:	sub    DWORD PTR [esi-0x69],0x88f8daff
  4038ab:	retf   
  4038ac:	mov    bl,0x42
  4038ae:	sbb    al,0x2a
  4038b0:	cmp    eax,0x2c34c3d0
  4038b5:	shr    esi,cl
  4038b7:	addr16 pushf 
  4038b9:	jb     0x403868
  4038bb:	pop    eax
  4038bc:	cld    
  4038bd:	les    ebx,FWORD PTR [ecx]
  4038bf:	mov    ecx,0xb8f59aba
  4038c4:	pusha  
  4038c5:	cmp    al,0x1d
  4038c7:	mov    DWORD PTR [edx],esp
  4038c9:	and    eax,0x4fa254d
  4038ce:	sbb    ecx,DWORD PTR [esi]
  4038d0:	jle    0x403933
  4038d2:	cld    
  4038d3:	xchg   ebx,eax
  4038d4:	inc    esi
  4038d5:	inc    ecx
  4038d6:	repnz add esp,0x7bfa378a
  4038dd:	mov    esp,0x95e7491d
  4038e2:	pop    ebp
  4038e3:	test   ebx,0x9f676940
  4038e9:	xchg   ebx,eax
  4038ea:	(bad)  
  4038eb:	test   BYTE PTR [eax],0x90
  4038ee:	mov    ch,0xed
  4038f0:	hlt    
  4038f1:	sbb    esi,DWORD PTR [esi+0x14]
  4038f4:	mov    ds:0x9a18d87a,al
  4038f9:	xchg   esp,eax
  4038fa:	add    al,BYTE PTR [edx-0x6a]
  4038fd:	leave  
  4038fe:	test   al,0x37
  403900:	out    0x94,eax
  403902:	and    eax,DWORD PTR [ecx+ebx*4]
  403905:	lods   al,BYTE PTR ds:[esi]
  403906:	pop    esi
  403907:	loope  0x40391b
  403909:	mov    edi,0xc40ef5f0
  40390e:	adc    ebp,DWORD PTR [eax-0x55e42a7a]
  403914:	dec    esp
  403915:	sbb    DWORD PTR [edx+0x5e],eax
  403918:	loope  0x4038ec
  40391a:	(bad)  
  40391c:	xchg   ebx,eax
  40391d:	int3   
  40391e:	fistp  WORD PTR [esi+0x32]
  403921:	sbb    DWORD PTR [ebx+0x168a0c58],eax
  403927:	in     eax,0xa6
  403929:	lock xor esp,DWORD PTR [ecx+eiz*1]
  40392d:	rcl    BYTE PTR [edi+esi*8],1
  403930:	mov    ch,BYTE PTR [ebx-0x5]
  403933:	repnz inc eax
  403935:	sub    al,0x1f
  403937:	cmp    eax,DWORD PTR [eax-0x7c]
  40393a:	mov    esi,0x3ce1ad0c
  40393f:	and    al,0x94
  403941:	dec    edx
  403942:	add    BYTE PTR [eax-0x7e4bf7e3],bl
  403948:	loopne 0x4038ce
  40394a:	scas   eax,DWORD PTR es:[edi]
  40394b:	rol    DWORD PTR [ebp-0x5d083158],1
  403951:	xchg   edi,eax
  403952:	les    edi,FWORD PTR [edx]
  403954:	cmp    al,0x40
  403956:	div    BYTE PTR [edx]
  403958:	mov    BYTE PTR [esi+edi*4-0xd],cl
  40395c:	xchg   esi,eax
  40395d:	push   ecx
  40395e:	aas    
  40395f:	(bad)  
  403960:	shr    BYTE PTR [esi],1
  403962:	clc    
  403963:	push   esp
  403964:	inc    DWORD PTR [edi+0x11]
  403967:	lds    ebx,FWORD PTR [edx]
  403969:	into   
  40396a:	xchg   edi,eax
  40396b:	scas   al,BYTE PTR es:[edi]
  40396c:	mov    eax,ds:0x7713f4b7
  403971:	cdq    
  403972:	xchg   BYTE PTR [edi+0x52728332],cl
  403978:	in     al,dx
  403979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397a:	xchg   ecx,eax
  40397b:	dec    edx
  40397c:	push   0x7a
  40397e:	cmp    al,0x97
  403980:	aad    0xd4
  403982:	fstp   DWORD PTR [eax-0x77b04c4b]
  403988:	and    BYTE PTR [eax+0x48],0x98
  40398c:	pop    ecx
  40398d:	fwait
  40398e:	mov    ecx,DWORD PTR [ebp+ebx*1+0x837b98]
  403995:	cmp    DWORD PTR [ecx-0x52],ebx
  403998:	or     ah,BYTE PTR [ebx-0x2e]
  40399b:	push   ecx
  40399c:	jmp    0x403969
  40399e:	in     al,0x51
  4039a0:	xchg   ecx,eax
  4039a1:	mov    esp,0xe82274f5
  4039a6:	or     al,0xa7
  4039a8:	jp     0x40399a
  4039aa:	xchg   edi,eax
  4039ab:	add    DWORD PTR [eax],ecx
  4039ad:	jle    0x40394c
  4039af:	sub    DWORD PTR [edx],ebx
  4039b1:	cli    
  4039b2:	push   cs
  4039b3:	(bad)  
  4039b4:	stc    
  4039b5:	xor    edi,ebx
  4039b7:	jecxz  0x403a0c
  4039b9:	mov    dh,0x3a
  4039bb:	mov    al,ds:0xb81db75e
  4039c0:	mov    edi,0xe366fb7e
  4039c5:	push   0x57
  4039c7:	mov    ecx,0x1b2a4fd0
  4039cc:	push   ebx
  4039cd:	xchg   ebx,eax
  4039ce:	xchg   ch,ah
  4039d0:	es push esp
  4039d2:	lods   eax,DWORD PTR ds:[esi]
  4039d3:	mov    al,0x7f
  4039d5:	add    DWORD PTR [ecx+0x369b71a1],eax
  4039db:	test   BYTE PTR [esi+0x73],al
  4039de:	xor    BYTE PTR [ecx+0xbb4bd33],al
  4039e4:	push   eax
  4039e5:	in     eax,0x20
  4039e7:	and    ebp,DWORD PTR [ebx]
  4039e9:	jle    0x403a3b
  4039eb:	ja     0x403a27
  4039ed:	inc    ebx
  4039ee:	jb     0x403a22
  4039f0:	inc    ebx
  4039f1:	adc    eax,DWORD PTR [edi+0x3a]
  4039f4:	and    esp,DWORD PTR [eax]
  4039f6:	fwait
  4039f7:	mov    esi,0xe8f9ce78
  4039fc:	jbe    0x403a13
  4039fe:	out    dx,al
  4039ff:	mov    bl,0xa7
  403a01:	hlt    
  403a02:	clc    
  403a03:	pop    ebp
  403a04:	push   ecx
  403a05:	jle    0x4039d0
  403a07:	(bad)  
  403a08:	aas    
  403a09:	pop    ecx
  403a0a:	sbb    dl,BYTE PTR [edx]
  403a0c:	inc    ebp
  403a0d:	repnz add ecx,DWORD PTR ds:[ebx+0x52b10d74]
  403a15:	arpl   WORD PTR [ebp+0x160f1aba],dx
  403a1b:	push   edi
  403a1c:	cli    
  403a1d:	out    0xc9,eax
  403a1f:	rol    BYTE PTR [esi+0x24],1
  403a22:	out    0x7f,al
  403a24:	mov    ch,0xf
  403a26:	push   ebx
  403a27:	mov    ebp,0x7a144955
  403a2c:	inc    esp
  403a2d:	sbb    al,0xf6
  403a2f:	pop    esp
  403a30:	mov    edx,0x8f2b8d4c
  403a35:	inc    edx
  403a36:	sti    
  403a37:	test   BYTE PTR ds:0xc3767393,cl
  403a3d:	xchg   ebx,eax
  403a3e:	cmp    DWORD PTR [ebx*1-0x357d46f],esi
  403a45:	mov    al,0x63
  403a47:	xchg   ebp,eax
  403a48:	inc    edx
  403a49:	or     DWORD PTR [esi],0x9b1defc6
  403a4f:	inc    ebp
  403a50:	les    esi,FWORD PTR [edx-0x34]
  403a53:	xor    BYTE PTR [eax+ecx*1-0x27aff2fa],0x51
  403a5b:	out    0x28,eax
  403a5d:	mov    cl,0xbd
  403a5f:	or     BYTE PTR [edx],bl
  403a61:	push   ebp
  403a62:	rol    BYTE PTR ds:[eax+0x6d312161],0x9c
  403a6a:	dec    ecx
  403a6b:	aaa    
  403a6c:	test   eax,0x7c42b81e
  403a71:	ret    0x2b73
  403a74:	cld    
  403a75:	hlt    
  403a76:	jp     0x403abc
  403a78:	call   0xc06b:0x922e07c0
  403a7f:	dec    ebx
  403a80:	ds dec eax
  403a82:	stos   DWORD PTR es:[edi],eax
  403a83:	mov    ch,0x70
  403a85:	xchg   BYTE PTR [eax-0x2d],bl
  403a88:	lods   al,BYTE PTR ds:[esi]
  403a89:	bound  eax,QWORD PTR [ebx-0x4b621c4e]
  403a8f:	aas    
  403a90:	cmp    DWORD PTR [eax+0x10],eax
  403a93:	icebp  
  403a94:	adc    al,0xdc
  403a96:	in     al,dx
  403a97:	fild   WORD PTR [esi-0x59]
  403a9a:	push   eax
  403a9b:	(bad)  
  403a9c:	sbb    ah,ch
  403a9e:	jns    0x403a6e
  403aa0:	xchg   DWORD PTR [ebx-0x1e],ecx
  403aa3:	test   BYTE PTR [ebx+0x77],0xd9
  403aa7:	dec    ebx
  403aa8:	jg     0x403aba
  403aaa:	lea    esi,[edi+0x6c867a1d]
  403ab0:	xor    eax,0x8f711f6
  403ab5:	push   0x4a3eb0de
  403aba:	clc    
  403abb:	vminss xmm3,xmm1,DWORD PTR [edx-0x7a]
  403ac0:	inc    esp
  403ac1:	xchg   esi,eax
  403ac2:	jg     0x403a83
  403ac4:	jnp    0x403acf
  403ac6:	sub    esi,DWORD PTR [ecx]
  403ac8:	pop    ebx
  403ac9:	adc    BYTE PTR [edx+eiz*4],al
  403acc:	ret    
  403acd:	lea    esi,[edx]
  403acf:	arpl   WORD PTR [ebx+0xd],si
  403ad2:	lods   al,BYTE PTR ds:[esi]
  403ad3:	add    edx,0xdd88156c
  403ad9:	cmp    ch,BYTE PTR [esi+edi*4+0xad62ea9]
  403ae0:	lods   al,BYTE PTR ds:[esi]
  403ae1:	dec    ebp
  403ae2:	sahf   
  403ae3:	sbb    ah,ah
  403ae5:	nop
  403ae6:	enter  0xf320,0xaf
  403aea:	cli    
  403aeb:	xlat   BYTE PTR ds:[ebx]
  403aec:	cdq    
  403aed:	or     eax,0x52657d44
  403af2:	test   BYTE PTR [edx],dl
  403af4:	jnp    0x403acb
  403af6:	jns    0x403b5d
  403af8:	or     al,0xbf
  403afa:	aaa    
  403afb:	shl    BYTE PTR [edx],1
  403afd:	dec    esp
  403afe:	repnz or esp,DWORD PTR [ebx-0x6d]
  403b02:	mov    bl,0x6
  403b04:	loopne 0x403b1e
  403b06:	cdq    
  403b07:	icebp  
  403b08:	jmp    0x403b5d
  403b0a:	sub    eax,0x786835a8
  403b0f:	jno    0x403b47
  403b11:	mov    ebx,0x18fc633e
  403b16:	in     eax,0x2f
  403b18:	jmp    0x286f:0x363a15f
  403b1f:	(bad)  
  403b20:	xor    dl,BYTE PTR [ecx]
  403b22:	hlt    
  403b23:	mov    bl,0x97
  403b25:	fadd   DWORD PTR [ebx]
  403b27:	cmp    BYTE PTR [ecx+0x2a],bh
  403b2a:	int    0x7c
  403b2c:	sub    ah,BYTE PTR [edi+0x75]
  403b2f:	mov    edx,0xc8c2d5ac
  403b34:	(bad)  
  403b35:	pop    ebp
  403b36:	mov    esp,DWORD PTR [ebp+0x64d3b148]
  403b3c:	xor    ch,BYTE PTR [ecx+0x42]
  403b3f:	in     al,0xe7
  403b41:	sbb    ebx,edx
  403b43:	sub    DWORD PTR [edx],edi
  403b45:	loopne 0x403af8
  403b47:	scas   eax,DWORD PTR es:[edi]
  403b48:	sub    ecx,DWORD PTR [ecx-0x1d]
  403b4b:	(bad)  
  403b4d:	fnstenv [ecx-0x6b777fcb]
  403b53:	pop    es
  403b54:	lea    eax,[edx+0x6392d637]
  403b5a:	pop    es
  403b5b:	test   DWORD PTR [ebp-0xc],esp
  403b5e:	int    0xac
  403b60:	not    DWORD PTR [esi+ecx*2]
  403b63:	or     DWORD PTR [ecx],0x7f
  403b66:	test   BYTE PTR [edi+0x37],0xf0
  403b6a:	je     0x403b9f
  403b6c:	fdivr  DWORD PTR [ebp-0x52405b34]
  403b72:	pop    ebp
  403b73:	and    al,0x9b
  403b76:	xor    BYTE PTR [edx-0x75],al
  403b79:	and    ah,BYTE PTR ds:0x36eab0c3
  403b7f:	das    
  403b80:	ds adc eax,0xc9674bb3
  403b86:	sub    dl,BYTE PTR [ebp-0x136167b6]
  403b8c:	mov    ah,0xb6
  403b8e:	test   eax,0x2c5991a7
  403b93:	jmp    0x387111ad
  403b98:	add    ebp,DWORD PTR [ebp-0x409b7f99]
  403b9e:	retf   0x3c0e
  403ba1:	shr    BYTE PTR [edi],cl
  403ba3:	cli    
  403ba4:	sar    BYTE PTR [ebx+0x1a],cl
  403ba7:	scas   eax,DWORD PTR es:[edi]
  403ba8:	dec    esi
  403ba9:	in     eax,dx
  403baa:	mov    esp,0x715b00fa
  403baf:	mov    al,ds:0xe3fba4b6
  403bb4:	test   BYTE PTR [edx+0x30],ch
  403bb7:	sbb    ah,BYTE PTR [eax+0x19f766ac]
  403bbd:	xor    al,0x20
  403bbf:	adc    BYTE PTR [esi+0x3af1993f],ch
  403bc5:	mov    ch,0xe4
  403bc7:	mov    ds,edi
  403bc9:	sbb    bl,BYTE PTR [edi]
  403bcb:	jne    0x403b7e
  403bcd:	cmp    eax,0x415b0d66
  403bd2:	jbe    0x403b79
  403bd4:	call   0x98e764b3
  403bd9:	fs (bad) 
  403bdb:	pop    esi
  403bdc:	xlat   BYTE PTR ds:[ebx]
  403bdd:	inc    esp
  403bde:	pop    esi
  403bdf:	in     eax,0xfe
  403be1:	in     al,dx
  403be2:	or     DWORD PTR ds:0xdad03934,eax
  403be8:	sbb    DWORD PTR [esi-0x58e009aa],edx
  403bee:	mov    dl,0xa6
  403bf0:	dec    ecx
  403bf1:	jnp    0x403bc8
  403bf3:	mov    esp,0x110afe2d
  403bf8:	ins    BYTE PTR es:[edi],dx
  403bf9:	cli    
  403bfa:	jmp    0x9d69f797
  403bff:	adc    al,0xc5
  403c01:	pusha  
  403c02:	sbb    BYTE PTR [esi-0x75],0xc8
  403c06:	mov    al,0x63
  403c08:	dec    ebp
  403c09:	dec    ebp
  403c0a:	loope  0x403bc4
  403c0c:	lahf   
  403c0d:	aam    0xe0
  403c0f:	fadd   DWORD PTR [eax]
  403c11:	add    eax,0xe5c9776e
  403c16:	imul   ebp,esp,0xa5269425
  403c1c:	dec    esi
  403c1d:	mov    dh,0xae
  403c1f:	lock xor al,0x1a
  403c22:	dec    ecx
  403c23:	jb     0x403c1a
  403c25:	jbe    0x403c66
  403c27:	sar    DWORD PTR [edi+0x1b],cl
  403c2a:	lahf   
  403c2b:	mov    esi,0xe8c37fcf
  403c30:	jle    0x403c92
  403c32:	sbb    bh,BYTE PTR es:[edi-0x6d84708e]
  403c39:	leave  
  403c3a:	hlt    
  403c3b:	int3   
  403c3c:	stc    
  403c3d:	pop    ds
  403c3e:	outs   dx,DWORD PTR ds:[esi]
  403c3f:	mov    gs,WORD PTR [edx+esi*4]
  403c42:	jnp    0x403bcd
  403c44:	xchg   ecx,eax
  403c45:	adc    ebp,DWORD PTR [edx-0x32426285]
  403c4b:	jns    0x403ccb
  403c4d:	rol    bh,0xc5
  403c50:	xor    al,0x87
  403c52:	div    DWORD PTR [edi]
  403c54:	data16 cli 
  403c56:	in     eax,0x28
  403c58:	mov    eax,ds:0x1ed509eb
  403c5d:	arpl   WORD PTR [esi],ax
  403c5f:	js     0x403c9f
  403c61:	pop    es
  403c62:	loop   0x403bf6
  403c64:	mov    al,ds:0x993523f
  403c69:	in     eax,dx
  403c6a:	cmp    eax,0x33617c9b
  403c6f:	mov    WORD PTR [edi+0x16d4d0ff],?
  403c75:	test   BYTE PTR [ebx],al
  403c77:	addr16 add al,0x22
  403c7a:	in     al,dx
  403c7b:	imul   ebx,DWORD PTR [ebx],0x2a
  403c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c7f:	cmp    bl,ch
  403c81:	mov    al,ds:0x345cca67
  403c86:	pop    edx
  403c87:	rcr    BYTE PTR [ecx-0x1e],0x74
  403c8b:	shl    BYTE PTR [esi],cl
  403c8d:	fsubr  DWORD PTR [edx+0x69]
  403c90:	dec    edi
  403c91:	add    al,0x3c
  403c93:	mov    ah,0x3d
  403c95:	xchg   esp,eax
  403c96:	lahf   
  403c97:	cmc    
  403c98:	xchg   esi,eax
  403c99:	retf   
  403c9a:	sub    DWORD PTR [esp+eiz*8-0x78],eax
  403c9e:	mov    cl,0xb9
  403ca0:	adc    eax,0xd6cb0a3a
  403ca5:	inc    esi
  403ca6:	adc    DWORD PTR [edx-0x53],esi
  403ca9:	cli    
  403caa:	push   0x3a
  403cac:	sbb    esp,ebx
  403cae:	fdivr  DWORD PTR [ecx-0x48]
  403cb1:	in     eax,0x69
  403cb3:	add    eax,0x2f2fd20
  403cb8:	ficomp DWORD PTR [edi-0x4cc88bca]
  403cbe:	test   DWORD PTR [edi+0x30],ebp
  403cc1:	nop
  403cc2:	mov    ds:0xb1413024,al
  403cc7:	lahf   
  403cc8:	pop    eax
  403cc9:	mov    ch,0xe4
  403ccb:	scas   al,BYTE PTR es:[edi]
  403ccc:	aaa    
  403ccd:	xor    DWORD PTR [edi],0x19481bac
  403cd3:	popf   
  403cd4:	sub    cl,BYTE PTR [edx]
  403cd6:	inc    esp
  403cd7:	push   0xffffffb5
  403cd9:	sub    al,0x2b
  403cdb:	or     cl,bl
  403cdd:	adc    eax,0x757fecbb
  403ce2:	fsubrp st(3),st
  403ce4:	or     ch,BYTE PTR [ebx-0x6f7a76af]
  403cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ceb:	(bad)  
  403cec:	daa    
  403ced:	and    al,0x4e
  403cef:	cs js  0x403c78
  403cf2:	(bad)  
  403cf3:	sbb    al,0x91
  403cf5:	mov    dl,0x5
  403cf7:	jge    0x403ccd
  403cf9:	call   0x9f77:0x728edec8
  403d00:	mov    edx,0xd6f9730a
  403d05:	mov    dh,0x9d
  403d07:	pop    ebp
  403d08:	push   eax
  403d09:	mov    cl,0x59
  403d0b:	jg     0x403d3f
  403d0d:	call   0xc0c6dd62
  403d12:	mov    dh,BYTE PTR [edi-0x7dd91023]
  403d18:	push   ss
  403d19:	scas   al,BYTE PTR es:[edi]
  403d1a:	pusha  
  403d1b:	gs jae 0x403d5d
  403d1e:	(bad)  
  403d1f:	ins    DWORD PTR es:[edi],dx
  403d20:	mov    ecx,0x5aaef6ed
  403d25:	ins    DWORD PTR es:[edi],dx
  403d26:	stos   BYTE PTR es:[edi],al
  403d27:	push   edx
  403d28:	sub    BYTE PTR [ebp+0x1b632182],ah
  403d2e:	cmp    al,0xea
  403d30:	gs scas eax,DWORD PTR es:[edi]
  403d32:	ret    0xc20d
  403d35:	mov    edx,ecx
  403d37:	xor    al,0x8
  403d39:	sbb    al,0x7f
  403d3b:	shr    DWORD PTR [ebp+0x59b55b69],0xbc
  403d42:	sub    esi,esp
  403d44:	inc    esp
  403d45:	outs   dx,BYTE PTR ds:[esi]
  403d46:	add    eax,0xad09904
  403d4b:	(bad)  
  403d4c:	ss pop edi
  403d4e:	mov    ds:0xd5e5ad,eax
  403d53:	fild   DWORD PTR [esi]
  403d55:	test   BYTE PTR [ebx+0x6],bl
  403d58:	nop
  403d59:	(bad)
  403d5c:	ffree  st(2)
  403d5e:	leave  
  403d5f:	sbb    BYTE PTR [ebx-0x64f81e0f],bl
  403d65:	mov    bh,BYTE PTR [esi-0x39f7d5de]
  403d6b:	add    eax,0x5dca8baf
  403d70:	mov    ch,0x62
  403d72:	ins    BYTE PTR es:[edi],dx
  403d73:	shl    DWORD PTR [eax+0x2f],cl
  403d76:	xor    BYTE PTR [eax],bl
  403d78:	mov    al,0xa7
  403d7a:	or     al,0x2b
  403d7c:	imul   esp,DWORD PTR [ecx+0x540ea77d],0xf
  403d83:	rcr    bl,cl
  403d85:	ret    0x14c7
  403d88:	push   ecx
  403d89:	in     al,0xcc
  403d8b:	sub    DWORD PTR [edi+esi*8+0x4acf8492],esp
  403d92:	jae    0x403d3b
  403d94:	jns    0x403dd8
  403d96:	fidivr DWORD PTR [edx+0x28]
  403d99:	pcmpeqd mm6,QWORD PTR [ecx+0x79068c3d]
  403da0:	mov    eax,DWORD PTR [ecx]
  403da2:	mov    esp,0x97118e78
  403da7:	inc    ecx
  403da8:	xlat   BYTE PTR ds:[ebx]
  403da9:	sbb    ah,BYTE PTR fs:[ebx-0x2c]
  403dad:	pop    eax
  403dae:	mov    DWORD PTR [esp+ecx*4+0x5a5d4254],ebp
  403db5:	pop    edi
  403db6:	inc    edx
  403db7:	hlt    
  403db8:	and    dh,BYTE PTR [eax+eax*8]
  403dbb:	cld    
  403dbc:	(bad)  
  403dbd:	enter  0xef48,0x90
  403dc1:	pop    esi
  403dc2:	xchg   ebx,eax
  403dc3:	sar    BYTE PTR [esi],0x18
  403dc6:	push   es
  403dc7:	or     DWORD PTR [eax],esi
  403dc9:	es addr16 push ebp
  403dcc:	jecxz  0x403d68
  403dce:	test   edi,0x7ffef875
  403dd4:	mov    ah,0xca
  403dd6:	call   FWORD PTR [ecx-0x52]
  403dd9:	jg     0x403db9
  403ddb:	call   0xef00cc5e
  403de0:	dec    eax
  403de1:	xor    bl,bh
  403de3:	in     eax,dx
  403de4:	cmp    eax,0xe8a2563f
  403de9:	cli    
  403dea:	mov    edx,0x6c5d5289
  403def:	push   ss
  403df0:	div    BYTE PTR [edi]
  403df2:	jbe    0x403de8
  403df4:	inc    esi
  403df5:	sub    al,dl
  403df7:	jno    0x403d7d
  403df9:	jg     0x403dd7
  403dfb:	mov    eax,0xd20f8e98
  403e00:	jno    0x403e55
  403e02:	out    dx,eax
  403e03:	add    ebx,DWORD PTR [ebx]
  403e05:	xor    DWORD PTR [ebx+ebx*8],ecx
  403e08:	aas    
  403e09:	xchg   esi,eax
  403e0a:	xchg   ecx,eax
  403e0b:	pop    es
  403e0c:	cmp    dh,BYTE PTR [edx]
  403e0e:	dec    ebp
  403e0f:	out    dx,al
  403e10:	or     al,0x92
  403e12:	mov    DWORD PTR [ebx],ebp
  403e14:	fistp  QWORD PTR [ebx+0x52]
  403e17:	stos   DWORD PTR es:[edi],eax
  403e18:	inc    esp
  403e19:	jbe    0x403de0
  403e1b:	ja     0x403e8f
  403e1d:	lea    eax,[ebp+0x24fe60d8]
  403e23:	iret   
  403e24:	push   eax
  403e25:	inc    esp
  403e26:	test   al,0x8c
  403e28:	retf   0xc9d0
  403e2b:	out    dx,eax
  403e2c:	jmp    0xae88d61a
  403e31:	scas   eax,DWORD PTR es:[edi]
  403e32:	xchg   esi,eax
  403e33:	add    eax,0xf82cd789
  403e38:	and    BYTE PTR [ebp+0x6],ah
  403e3b:	sbb    ebp,edx
  403e3d:	push   ds
  403e3e:	js     0x403e0e
  403e40:	not    esp
  403e42:	push   cs
  403e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e44:	jecxz  0x403e43
  403e46:	add    dl,bl
  403e48:	jbe    0x403e63
  403e4a:	add    BYTE PTR [eax-0x5be21ae],dl
  403e50:	popa   
  403e51:	and    al,0x2f
  403e53:	mov    ah,bl
  403e55:	xor    DWORD PTR [edi+0x62e102d3],ecx
  403e5b:	inc    eax
  403e5c:	call   0xf9d9:0x6e593b53
  403e63:	mov    esp,0xf72af76
  403e68:	pop    eax
  403e69:	mov    esi,0x428fec76
  403e6e:	push   ds
  403e6f:	cmc    
  403e70:	mov    bl,0x81
  403e72:	xor    bh,BYTE PTR [edx+0x4a]
  403e75:	popf   
  403e76:	ror    eax,1
  403e78:	push   ss
  403e79:	lods   al,BYTE PTR ds:[esi]
  403e7a:	std    
  403e7b:	pushf  
  403e7c:	mov    bh,0x6
  403e7e:	cs push 0xffffff90
  403e81:	xchg   edi,eax
  403e82:	cmp    BYTE PTR [ebx-0x4fabc26f],0x1c
  403e89:	mov    ?,WORD PTR [eax]
  403e8b:	mov    dh,0x72
  403e8d:	mov    al,0x43
  403e8f:	pop    ss
  403e90:	mov    edx,0x64edb919
  403e95:	cld    
  403e96:	dec    eax
  403e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e99:	mov    ah,0x9e
  403e9b:	retf   0xcf91
  403e9e:	add    BYTE PTR [esi],bl
  403ea0:	mov    bh,al
  403ea2:	in     eax,dx
  403ea3:	add    DWORD PTR [edx-0x53ae617f],edi
  403ea9:	das    
  403eaa:	jns    0x403eb6
  403eac:	fidiv  DWORD PTR [edi+0x7d]
  403eaf:	push   es
  403eb0:	out    dx,eax
  403eb1:	imul   esp,DWORD PTR [ecx-0x5ba51097],0x2c
  403eb8:	test   BYTE PTR [edi-0x5],dh
  403ebb:	pop    esi
  403ebc:	fist   DWORD PTR [eax]
  403ebe:	and    DWORD PTR [ebx],esp
  403ec0:	int3   
  403ec1:	mov    eax,ds:0x589167a4
  403ec6:	cmp    ch,ch
  403ec8:	and    al,0x70
  403eca:	test   BYTE PTR [ebx+0x6d1a3c2],0x62
  403ed1:	mov    bl,0x74
  403ed3:	sti    
  403ed4:	fild   QWORD PTR [ebp+0x5309cb95]
  403eda:	sbb    eax,0xe1e04c9
  403edf:	pushf  
  403ee0:	push   ebp
  403ee1:	fs push eax
  403ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee4:	push   ss
  403ee5:	inc    eax
  403ee6:	pop    ds
  403ee7:	loope  0x403f4f
  403ee9:	sbb    al,0xad
  403eeb:	dec    esp
  403eec:	mov    ebx,0x8f5e195b
  403ef1:	mov    ds:0xd34b8071,eax
  403ef6:	gs (bad) 
  403ef8:	pop    eax
  403ef9:	sbb    ecx,DWORD PTR [edx]
  403efb:	adc    DWORD PTR [eax+0x6bb4ddc6],esi
  403f01:	icebp  
  403f02:	sahf   
  403f03:	push   esp
  403f04:	std    
  403f05:	xchg   esp,eax
  403f06:	mov    dh,0x5b
  403f08:	cld    
  403f09:	inc    esp
  403f0a:	pop    es
  403f0b:	sub    eax,0xb32a7dc9
  403f10:	(bad)  
  403f11:	ds inc ecx
  403f13:	mov    DWORD PTR [edx],ecx
  403f15:	in     al,0x39
  403f17:	mov    WORD PTR [esp+eiz*4],es
  403f1a:	cwde   
  403f1b:	loopne 0x403f50
  403f1d:	fdiv   DWORD PTR [edx+0x50]
  403f20:	retf   0xde64
  403f23:	enter  0xfe33,0x62
  403f27:	jne    0x403f83
  403f29:	lahf   
  403f2a:	loope  0x403f2e
  403f2c:	cmp    BYTE PTR [esi],bl
  403f2e:	popa   
  403f2f:	push   ebx
  403f30:	(bad)  
  403f31:	xchg   esp,eax
  403f32:	add    BYTE PTR [ebx],dl
  403f34:	rol    cl,0x58
  403f37:	(bad)  
  403f38:	mov    ebp,0xd11ada7c
  403f3d:	call   0x5c5:0x3f278fad
  403f44:	(bad)  
  403f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f47:	push   edi
  403f48:	jmp    0xea07dd63
  403f4d:	lea    esi,[edi]
  403f4f:	cmp    al,0x4d
  403f51:	pop    esp
  403f52:	loopne 0x403f2c
  403f54:	jae    0x403f8a
  403f56:	popa   
  403f57:	retf   0xf278
  403f5a:	jl     0x403f11
  403f5c:	sbb    DWORD PTR [ebx+0x7538773f],esi
  403f62:	mov    bh,0xe5
  403f64:	add    BYTE PTR [esi-0x7c],0x8d
  403f68:	adc    ecx,DWORD PTR [eax-0x508bc47]
  403f6e:	dec    ecx
  403f6f:	mov    eax,0x13b200ab
  403f74:	add    eax,0x9f0a38ec
  403f79:	jmp    0x403fe5
  403f7b:	mov    ch,0x3b
  403f7d:	stos   BYTE PTR es:[edi],al
  403f7e:	mov    ds:0x79e9d0a5,al
  403f83:	(bad)  
  403f84:	mov    eax,0x5377d529
  403f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8a:	lds    esp,FWORD PTR [eax+0x46ea67b6]
  403f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f92:	and    BYTE PTR [edx+edi*2],ch
  403f95:	pop    es
  403f96:	jmp    0x558a463a
  403f9b:	push   edx
  403f9c:	bound  ebx,QWORD PTR [ebx-0x30]
  403f9f:	fsub   DWORD PTR [edi]
  403fa1:	sahf   
  403fa2:	push   es
  403fa3:	in     eax,dx
  403fa4:	loope  0x403f88
  403fa6:	pop    ss
  403fa7:	cmp    ch,dh
  403fa9:	out    dx,eax
  403faa:	call   0xac3d:0x72418e2b
  403fb1:	in     al,dx
  403fb2:	arpl   WORD PTR [ebx],cx
  403fb4:	lods   eax,DWORD PTR ds:[esi]
  403fb5:	mov    ch,dh
  403fb7:	lock adc bl,BYTE PTR [edi-0x232c0efd]
  403fbe:	push   ebx
  403fbf:	inc    eax
  403fc0:	xor    al,0x48
  403fc2:	shr    BYTE PTR [ecx+0x6ca3465a],1
  403fc8:	cmp    al,0xc7
  403fca:	(bad)  
  403fcb:	or     al,0xe3
  403fcd:	push   ss
  403fce:	aad    0x9f
  403fd0:	mov    esp,0xd2503c02
  403fd5:	mov    eax,DWORD PTR [ebp+0x59e131d]
  403fdb:	sub    ch,cl
  403fdd:	pop    edx
  403fde:	cmp    ecx,eax
  403fe0:	inc    edi
  403fe1:	test   esp,esi
  403fe3:	popa   
  403fe4:	mov    esp,0x3143343b
  403fe9:	loope  0x40401f
  403feb:	imul   edi,ecx,0xffffff8d
  403fee:	xor    edx,DWORD PTR [esi+0xb]
  403ff1:	and    al,0xda
  403ff3:	(bad)  
  403ff4:	call   0x4d06c0ed
  403ff9:	test   BYTE PTR [ecx+eax*2-0x76a8b41c],al
  404000:	inc    ebp
  404001:	rcr    BYTE PTR [eax+0x412663dd],0x54
  404008:	sbb    DWORD PTR [ecx],0x88081de0
  40400e:	push   0xffffffa7
  404010:	xchg   ebx,eax
  404011:	dec    edi
  404012:	mov    edx,0x831a0849
  404017:	jno    0x404076
  404019:	iret   
  40401a:	push   ss
  40401b:	mov    al,0x1e
  40401d:	je     0x40402f
  40401f:	pushf  
  404020:	retf   0xa1e7
  404023:	mov    ds:0x7a75cae3,al
  404028:	pop    es
  404029:	and    dh,BYTE PTR [ebx]
  40402b:	push   0x57
  40402d:	sub    eax,0x50704e32
  404032:	lock inc edi
  404034:	jle    0x403fd5
  404036:	push   ds
  404037:	rcl    dl,cl
  404039:	ror    BYTE PTR [esi-0x45],0xf4
  40403d:	inc    eax
  40403e:	add    dl,BYTE PTR [ebx-0x6e]
  404041:	adc    edi,DWORD PTR [edi+0x1]
  404044:	mov    edi,0x64c5a77c
  404049:	out    0x89,al
  40404b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40404c:	retf   0x43c5
  40404f:	jmp    0x23073464
  404054:	xchg   edx,eax
  404055:	loope  0x40407c
  404057:	jge    0x4040d2
  404059:	mov    dl,0x1f
  40405b:	mov    ecx,0x7bbab45b
  404060:	pop    ss
  404061:	imul   edi,eax,0xffffffe1
  404064:	xor    eax,0x37379b03
  404069:	popa   
  40406a:	mov    cl,0x65
  40406c:	cmp    ecx,DWORD PTR [edi+0x1b2d39bd]
  404072:	ins    DWORD PTR es:[edi],dx
  404073:	(bad)  
  404074:	scas   eax,DWORD PTR es:[edi]
  404075:	leave  
  404076:	push   esp
  404077:	inc    esi
  404078:	bound  ebp,QWORD PTR [eax-0x29660d72]
  40407e:	rcl    BYTE PTR [edx+0x4c3ad569],0x26
  404085:	mov    ds,edi
  404087:	dec    esi
  404088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404089:	and    esi,DWORD PTR [eax+0x1515dfab]
  40408f:	mov    edx,0xb1487b30
  404094:	scas   al,BYTE PTR es:[edi]
  404095:	in     al,0x79
  404097:	sahf   
  404098:	ss and esi,esi
  40409b:	enter  0x1c6c,0xf8
  40409f:	mov    dh,0xd3
  4040a1:	add    BYTE PTR [edi+0x5f535efa],dh
  4040a7:	mul    BYTE PTR [ecx+0xa2336c9]
  4040ad:	popa   
  4040ae:	nop
  4040af:	call   FWORD PTR [ebp+0x78812e90]
  4040b5:	aam    0x7d
  4040b7:	push   ecx
  4040b8:	scas   al,BYTE PTR es:[edi]
  4040b9:	les    ecx,FWORD PTR [edx-0xb65dc03]
  4040bf:	jno    0x404124
  4040c1:	cli    
  4040c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c3:	repnz les ebx,FWORD PTR [edi]
  4040c6:	xchg   esi,ecx
  4040c8:	cmp    edi,ebp
  4040ca:	nop
  4040cb:	clc    
  4040cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cd:	push   es
  4040ce:	jae    0x40409a
  4040d0:	enter  0x4fca,0x1
  4040d4:	pop    ebp
  4040d5:	sub    eax,0x512d58f7
  4040da:	push   ebp
  4040db:	xor    cl,ch
  4040dd:	scas   eax,DWORD PTR es:[edi]
  4040de:	xor    al,0x56
  4040e0:	jle    0x404148
  4040e2:	dec    ebp
  4040e3:	mov    BYTE PTR [eax+0x4c0dbc3a],bh
  4040e9:	xchg   edx,eax
  4040ea:	mov    ch,0xe9
  4040ec:	jo     0x40415a
  4040ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ef:	ror    al,cl
  4040f1:	pop    ss
  4040f2:	test   eax,0x35a3dc47
  4040f7:	lods   al,BYTE PTR ds:[esi]
  4040f8:	mov    esp,0x2b5fa2df
  4040fd:	imul   ecx,esp,0x4c
  404100:	scas   al,BYTE PTR es:[edi]
  404101:	mov    esp,0x78bf6089
  404106:	call   0x103c:0xae1700b
  40410d:	add    dl,BYTE PTR [edx+0x5d]
  404110:	nop
  404111:	sar    BYTE PTR [edi],0x74
  404114:	pop    ecx
  404115:	dec    edi
  404116:	int    0xf2
  404118:	clc    
  404119:	xchg   esi,eax
  40411a:	les    esp,FWORD PTR [eax]
  40411c:	jb     0x404112
  40411e:	es clc 
  404120:	(bad)  
  404121:	retf   0x266e
  404124:	sub    DWORD PTR gs:[ebx+0x56bae68e],ebx
  40412b:	cmp    DWORD PTR [edi+0x5f],ebp
  40412e:	add    DWORD PTR [eax-0x78],eax
  404131:	sbb    DWORD PTR [esi-0x94471dc],eax
  404137:	(bad)  
  404138:	in     al,0xaf
  40413a:	sub    eax,0xdb08185d
  40413f:	mov    bl,0xda
  404141:	enter  0xb78b,0x2c
  404145:	jl     0x4040c8
  404147:	arpl   dx,bp
  404149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40414a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40414b:	and    DWORD PTR [ecx-0x1b178bb4],ebp
  404151:	leave  
  404152:	test   al,0xe6
  404154:	lds    edi,FWORD PTR [esi]
  404156:	in     al,dx
  404157:	sub    eax,0x7725b018
  40415c:	jle    0x404137
  40415e:	mov    bh,0x26
  404160:	ret    
  404161:	lods   eax,DWORD PTR ds:[esi]
  404162:	mov    ds:0x62b0842b,al
  404167:	xor    BYTE PTR [edi-0x6261ce10],dl
  40416d:	sbb    BYTE PTR [esi-0x4c],cl
  404170:	call   0xd5f5e91d
  404175:	sar    BYTE PTR [ebx+ecx*8+0x64],1
  404179:	popf   
  40417a:	popf   
  40417b:	adc    eax,0x6fc56fc6
  404180:	mov    DWORD PTR [ebp+0x74],ebp
  404183:	jnp    0x404183
  404185:	std    
  404186:	push   ebx
  404187:	mov    ds:0x279966d2,eax
  40418c:	jmp    0x58a:0x5fa0a8fa
  404193:	leave  
  404194:	sbb    eax,0x367be965
  404199:	jmp    0x404166
  40419b:	(bad)  
  40419c:	shl    BYTE PTR [ecx-0x44],1
  40419f:	mov    edx,0xb46f20e2
  4041a4:	cs cmp ebp,edx
  4041a7:	xchg   DWORD PTR [ebx],esi
  4041a9:	mov    DWORD PTR [esi],ebp
  4041ab:	fild   WORD PTR [edi+0xa]
  4041ae:	sub    al,0x12
  4041b0:	int    0x65
  4041b2:	sub    dh,bh
  4041b4:	mov    edi,fs
  4041b6:	das    
  4041b7:	xchg   esi,eax
  4041b8:	lock cwde 
  4041ba:	rol    BYTE PTR [edi+0x11],1
  4041bd:	stos   DWORD PTR es:[edi],eax
  4041be:	fdivr  QWORD PTR [edi]
  4041c0:	iret   
  4041c1:	lahf   
  4041c2:	mov    al,0x47
  4041c4:	pusha  
  4041c5:	mov    al,ds:0x2fbea0b9
  4041ca:	pop    edi
  4041cb:	jg     0x404220
  4041cd:	sub    eax,0x3af042f6
  4041d2:	inc    edi
  4041d3:	adc    DWORD PTR [esi-0x4f],eax
  4041d6:	stos   DWORD PTR es:[edi],eax
  4041d7:	and    DWORD PTR [ecx-0x55625d4d],eax
  4041dd:	add    BYTE PTR [ebx-0x71c10e48],bl
  4041e3:	mov    bh,0xa8
  4041e5:	call   0x20fe:0xa04cf0a5
  4041ec:	js     0x4041da
  4041ee:	cmp    al,0x75
  4041f0:	shl    DWORD PTR ds:0xa0cacd08,cl
  4041f6:	mov    ah,0x8e
  4041f8:	call   0xef7:0xfa04baa1
  4041ff:	xor    al,0xed
  404201:	push   ecx
  404202:	mov    edx,DWORD PTR ds:[edx]
  404205:	rol    BYTE PTR [ecx-0x213c4670],0x26
  40420c:	pop    eax
  40420d:	inc    ebp
  40420e:	test   al,0x2f
  404210:	xlat   BYTE PTR ds:[ebx]
  404211:	adc    edx,DWORD PTR [ebp+eiz*8-0x23]
  404215:	and    DWORD PTR [ecx],esi
  404217:	inc    BYTE PTR [ecx]
  404219:	mov    bh,0xd8
  40421b:	or     al,dh
  40421d:	ins    DWORD PTR es:[edi],dx
  40421e:	pop    ss
  40421f:	inc    esi
  404220:	or     dh,BYTE PTR [ebx+0x8d195cc]
  404226:	je     0x40427d
  404228:	mov    bl,0x86
  40422a:	and    esp,DWORD PTR [esi-0x5c6092b1]
  404230:	fwait
  404231:	retf   
  404232:	jno    0x404235
  404234:	adc    eax,0xa43e41b1
  404239:	es mov esi,0xf38458f7
  40423f:	add    BYTE PTR [ebx-0x4c],cl
  404242:	lds    edi,FWORD PTR [esi-0x5030126f]
  404248:	xor    edi,ecx
  40424a:	sub    BYTE PTR [ecx+0x7e],0x47
  40424e:	mov    ecx,0xf8e184ca
  404253:	mov    ecx,0xe6608d68
  404258:	pop    ecx
  404259:	in     al,dx
  40425a:	xchg   DWORD PTR [eax],esp
  40425c:	cmp    al,0x31
  40425e:	sbb    DWORD PTR [edi],edx
  404260:	xor    ah,al
  404262:	push   esi
  404263:	test   BYTE PTR [edx-0x41],al
  404266:	dec    di
  404268:	mov    dl,0x2b
  40426a:	sub    al,0x58
  40426c:	lods   al,BYTE PTR ds:[esi]
  40426d:	sbb    eax,0x9fb710d2
  404272:	clc    
  404273:	pop    ecx
  404274:	mov    ah,0x31
  404276:	cli    
  404277:	push   edx
  404278:	push   0xcb991f1c
  40427d:	cwde   
  40427e:	sbb    bh,BYTE PTR [ebx-0x54]
  404281:	and    dl,BYTE PTR [ebx]
  404283:	lea    edx,[esi-0x50d0bd2f]
  404289:	push   edx
  40428a:	jmp    0x546e:0x1f153562
  404291:	loop   0x404261
  404293:	adc    bh,cl
  404295:	mov    al,0x44
  404297:	xor    edi,DWORD PTR [ebx+0x27]
  40429a:	adc    al,BYTE PTR [ecx-0x58]
  40429d:	pop    ss
  40429e:	or     eax,0xb2047287
  4042a3:	jne    0x40430c
  4042a5:	jae    0x40423b
  4042a7:	dec    ecx
  4042a8:	xchg   esp,eax
  4042a9:	(bad)  
  4042aa:	idiv   ch
  4042ac:	into   
  4042ad:	xor    eax,0xfa0abee7
  4042b2:	xchg   BYTE PTR [bp+di+0x51],bl
  4042b6:	out    dx,eax
  4042b7:	xlat   BYTE PTR ds:[ebx]
  4042b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b9:	inc    ebx
  4042ba:	jl     0x40427d
  4042bc:	push   esp
  4042bd:	daa    
  4042be:	shl    BYTE PTR [edi],cl
  4042c0:	push   edx
  4042c1:	lods   eax,DWORD PTR ds:[esi]
  4042c2:	enter  0x9c16,0x4
  4042c6:	cmc    
  4042c7:	ret    
  4042c8:	mov    ebx,0x39f1c6cb
  4042cd:	pop    esi
  4042ce:	and    eax,0x4bf20d63
  4042d3:	ins    BYTE PTR es:[edi],dx
  4042d4:	mov    cl,0x33
  4042d6:	stc    
  4042d7:	and    eax,0x3a9d678a
  4042dc:	pop    ebx
  4042dd:	jne    0x4042ca
  4042df:	jg     0x4042b7
  4042e1:	je     0x404361
  4042e3:	xchg   edi,eax
  4042e4:	dec    ebx
  4042e5:	dec    edi
  4042e6:	mov    bh,0x4b
  4042e8:	fwait
  4042e9:	cli    
  4042ea:	rcl    DWORD PTR [ecx-0x75da03],1
  4042f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f1:	xor    ebp,edx
  4042f3:	test   DWORD PTR [ecx+ebx*4+0x49b68f6f],ebp
  4042fa:	hlt    
  4042fb:	jnp    0x404310
  4042fd:	pop    ecx
  4042fe:	sbb    eax,0x83296f4e
  404303:	cld    
  404304:	add    eax,0x8ed691d1
  404309:	das    
  40430a:	inc    ebp
  40430b:	les    edx,FWORD PTR [edi+0x34c64e6c]
  404311:	dec    esi
  404312:	adc    ch,BYTE PTR [esi]
  404314:	enter  0x4070,0xaf
  404318:	pop    ebx
  404319:	in     eax,0xb6
  40431b:	sahf   
  40431c:	add    edi,DWORD PTR [ecx+edx*4]
  40431f:	jne    0x4042dc
  404321:	jae    0x4042e2
  404323:	xor    eax,0x8dcc56a7
  404328:	data16 int3 
  40432a:	jno    0x40433e
  40432c:	and    al,dh
  40432e:	ss iret 
  404330:	pop    ds
  404331:	sub    eax,0x7344e688
  404336:	hlt    
  404337:	stos   DWORD PTR es:[edi],eax
  404338:	jb     0x4042d1
  40433a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40433b:	sub    ch,al
  40433d:	sub    edx,0x7f
  404340:	jmp    0x1b0:0xc247e80c
  404347:	jl     0x4042f5
  404349:	dec    esi
  40434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40434b:	cmp    BYTE PTR [ebx+0x2289cf51],0x7d
  404352:	lods   eax,DWORD PTR ds:[esi]
  404353:	ficomp DWORD PTR [eax+0x7f]
  404356:	push   esi
  404357:	mov    edi,0x6bf3e1d8
  40435c:	cmp    BYTE PTR [ebx-0x12ae2ba6],al
  404362:	hlt    
  404363:	les    edi,FWORD PTR [edx-0x3a0e4be2]
  404369:	push   ecx
  40436a:	retf   0x41cb
  40436d:	push   0x50a8c991
  404372:	jg     0x404371
  404374:	xor    eax,0xaaf15850
  404379:	cld    
  40437a:	inc    ecx
  40437b:	push   ebp
  40437c:	xchg   esp,eax
  40437d:	leave  
  40437e:	sub    eax,0x83dfeaed
  404383:	leave  
  404384:	ror    BYTE PTR [ecx+0x66b1369f],cl
  40438a:	es push ebp
  40438c:	ret    
  40438d:	or     dh,BYTE PTR [ebx-0x7a]
  404390:	repz add eax,0x2b32d48c
  404396:	call   0x7e15b55f
  40439b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40439c:	ins    BYTE PTR es:[edi],dx
  40439d:	xchg   esp,eax
  40439e:	xchg   edi,eax
  40439f:	mov    ecx,0x5fa1c9ea
  4043a4:	mov    al,ds:0x237d6c3d
  4043a9:	inc    ebx
  4043aa:	add    DWORD PTR [edx],ebp
  4043ac:	repz xor DWORD PTR [edi],ebp
  4043af:	cld    
  4043b0:	ss es push edx
  4043b3:	loopne 0x4043db
  4043b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b6:	je     0x4043a2
  4043b8:	shl    BYTE PTR [ebp+0x68],0xd7
  4043bc:	shl    BYTE PTR [ecx+0x54],cl
  4043bf:	pop    esp
  4043c0:	jecxz  0x404353
  4043c2:	push   DWORD PTR ds:0xe0f8901b
  4043c8:	mov    al,ds:0x2aabbf38
  4043cd:	fadd   QWORD PTR [eax-0x61]
  4043d0:	inc    esi
  4043d1:	or     DWORD PTR [ecx+0x4d],ecx
  4043d4:	clc    
  4043d5:	xor    bh,al
  4043d7:	adc    BYTE PTR [ecx+0xd],dh
  4043da:	or     al,0x7a
  4043dc:	and    BYTE PTR [edx+eax*1],al
  4043df:	in     eax,0x8b
  4043e1:	pop    ebp
  4043e2:	push   ds
  4043e3:	int3   
  4043e4:	jne    0x404446
  4043e6:	fs jae 0x404415
  4043e9:	mov    ecx,0xbf3f581f
  4043ee:	add    eax,0x51c972bf
  4043f3:	ja     0x40438a
  4043f5:	in     eax,0x90
  4043f7:	cmp    edx,esi
  4043f9:	test   DWORD PTR [ecx],ecx
  4043fb:	or     BYTE PTR [ecx+eax*1+0x58],dl
  4043ff:	not    DWORD PTR [esi-0x6d86a941]
  404405:	retf   
  404406:	dec    edx
  404407:	adc    esp,DWORD PTR [ebx+0xc]
  40440a:	add    ecx,ecx
  40440c:	push   ss
  40440d:	jp     0x4043cc
  40440f:	ss mov ebx,0x125f664a
  404415:	stos   DWORD PTR es:[edi],eax
  404416:	in     al,dx
  404417:	mov    ds,WORD PTR [ebx+eax*8]
  40441a:	cwde   
  40441b:	dec    ecx
  40441c:	add    ecx,esi
  40441e:	loopne 0x404495
  404420:	cmp    ebx,DWORD PTR [ecx]
  404422:	(bad)  
  404423:	dec    ebx
  404424:	(bad)  
  404425:	push   ecx
  404426:	pop    esi
  404427:	icebp  
  404428:	xchg   BYTE PTR [edi-0x29],dl
  40442b:	mov    gs,WORD PTR [ebp-0x1a46baf1]
  404431:	and    esp,ebp
  404433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404434:	retf   0x9495
  404437:	dec    edi
  404438:	dec    esp
  404439:	fwait
  40443a:	lods   eax,DWORD PTR ds:[esi]
  40443b:	sbb    dl,BYTE PTR [ebx]
  40443d:	or     bh,BYTE PTR [ebp+0x6]
  404440:	sbb    eax,0x517568cc
  404445:	pop    esp
  404446:	adc    eax,0x82bc2e02
  40444b:	push   edx
  40444c:	(bad)  
  40444e:	cmp    BYTE PTR [ecx+0x30],ah
  404451:	add    al,0x16
  404453:	mov    ch,0xcd
  404455:	rol    BYTE PTR [eax+0x1b],0x2
  404459:	sar    DWORD PTR [eax-0x2b],0x17
  40445d:	lds    ecx,FWORD PTR [esi+0x7fdddcb]
  404463:	fs cli 
  404465:	jg     0x4044d6
  404467:	ds call 0x6fa5:0x60844dfc
  40446f:	ja     0x4044cd
  404471:	sar    DWORD PTR [edx-0x1bcf038b],0x25
  404478:	dec    esi
  404479:	jno    0x4044c4
  40447b:	sub    al,0xf0
  40447d:	add    eax,0x39b170f1
  404482:	int3   
  404483:	aaa    
  404484:	push   edi
  404485:	outs   dx,DWORD PTR ds:[esi]
  404486:	clc    
  404487:	mov    ds:0x55b5648a,eax
  40448c:	into   
  40448d:	mov    bl,0x53
  40448f:	ss rcr ch,1
  404492:	mov    dh,0x38
  404494:	aam    0xfc
  404496:	xor    ecx,DWORD PTR [eax-0x1a9021d7]
  40449c:	push   0xef00c9b7
  4044a1:	cmp    BYTE PTR [esi+0x6fbf5786],al
  4044a7:	jle    0x404451
  4044a9:	es adc al,0x52
  4044ac:	test   DWORD PTR [edx],ecx
  4044ae:	or     ebx,edx
  4044b0:	pop    ds
  4044b1:	push   edi
  4044b2:	sbb    al,0x0
  4044b4:	bound  eax,QWORD PTR [ebp-0x68b8fa78]
  4044ba:	cmc    
  4044bb:	ins    DWORD PTR es:[edi],dx
  4044bc:	rcr    BYTE PTR [eax-0x6f],cl
  4044bf:	pusha  
  4044c0:	je     0x4044b2
  4044c2:	mov    ah,0x7
  4044c4:	sub    esp,DWORD PTR [ecx-0x20a41a77]
  4044ca:	mov    edx,0xc4f2cf9c
  4044cf:	ficomp DWORD PTR [esi-0x33]
  4044d2:	cdq    
  4044d3:	push   esi
  4044d4:	int3   
  4044d5:	shl    DWORD PTR [ebp+0x6a],1
  4044d8:	mov    ebp,edi
  4044da:	mov    al,ds:0x81904c87
  4044df:	mov    WORD PTR [esi-0x26f9a3e8],es
  4044e5:	out    0x30,al
  4044e7:	rcr    DWORD PTR [eax+0x40],1
  4044ea:	lahf   
  4044eb:	mov    ss,WORD PTR [ecx+0x55]
  4044ee:	add    ah,BYTE PTR es:[esi+eiz*1]
  4044f2:	ins    DWORD PTR es:[edi],dx
  4044f3:	xor    BYTE PTR [esp+eax*4-0x16e712a0],cl
  4044fa:	inc    edi
  4044fb:	aad    0x4e
  4044fd:	rcl    BYTE PTR [esi+0x28],cl
  404500:	cmp    DWORD PTR [esi+esi*4],esp
  404503:	out    dx,al
  404504:	ins    BYTE PTR es:[edi],dx
  404505:	test   DWORD PTR ds:[ecx-0x3a1a63c8],ecx
  40450c:	push   0x7b158c8b
  404511:	adc    edi,DWORD PTR [eax+esi*4]
  404514:	add    DWORD PTR [edx+0x2ec02cc6],ecx
  40451a:	xor    eax,0x5cc175ec
  40451f:	stc    
  404520:	sbb    BYTE PTR [ebp-0xb71a908],dh
  404526:	mov    edx,0x5d5ed9a0
  40452b:	and    al,0x45
  40452d:	push   0xffffff80
  40452f:	loope  0x404516
  404531:	adc    eax,0x66549044
  404536:	jmp    0x404584
  404538:	test   eax,0x1c2a795f
  40453d:	mov    ecx,0x17c27648
  404542:	xchg   edi,eax
  404543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404544:	fisttp DWORD PTR ds:0x93ab4346
  40454a:	jne    0x4044e5
  40454c:	loop   0x404526
  40454e:	dec    ebx
  40454f:	push   ecx
  404550:	sbb    al,0x9c
  404552:	enter  0xb7e4,0xbd
  404556:	and    eax,DWORD PTR [esi+0x15]
  404559:	jl     0x40452e
  40455b:	dec    eax
  40455c:	adc    al,0xd2
  40455e:	iret   
  40455f:	mov    edi,0xa039acd5
  404564:	pop    ss
  404565:	repnz aaa 
  404567:	mov    eax,ds:0x79252e52
  40456c:	xor    al,0x50
  40456e:	push   ds
  40456f:	cmp    al,0x63
  404571:	mov    BYTE PTR [edx+0x3ad9b44f],dl
  404577:	adc    DWORD PTR [eax],0x7d28d16b
  40457d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40457e:	outs   dx,DWORD PTR ds:[esi]
  40457f:	xchg   edi,eax
  404580:	xchg   BYTE PTR [ebp+esi*2-0x31],ch
  404584:	popa   
  404585:	sub    esp,ebp
  404587:	dec    ecx
  404588:	and    esi,DWORD PTR [eax+ecx*4+0x5ad5040c]
  40458f:	push   edx
  404590:	adc    DWORD PTR [eax],esp
  404592:	lds    ebx,FWORD PTR [eax-0x41]
  404595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404596:	push   edi
  404597:	les    ecx,FWORD PTR [esi]
  404599:	scas   eax,DWORD PTR es:[edi]
  40459a:	sub    eax,0xb9368f1e
  40459f:	loopne 0x4045c9
  4045a1:	test   eax,ebx
  4045a3:	(bad)  
  4045a5:	iret   
  4045a6:	sbb    al,0x1b
  4045a8:	adc    eax,0xb4ca8a72
  4045ad:	cmp    cl,BYTE PTR [esi+0x3257dcee]
  4045b3:	xchg   esp,eax
  4045b4:	cli    
  4045b5:	jb     0x4045f4
  4045b7:	jns    0x404585
  4045b9:	cmp    ebx,esi
  4045bb:	je     0x404635
  4045bd:	xabort 0x66
  4045c0:	mov    ds:0x1179a7e3,al
  4045c5:	or     dl,BYTE PTR [edi-0x5b]
  4045c8:	cs push esp
  4045ca:	mov    esp,DWORD PTR [ecx]
  4045cc:	sub    edi,DWORD PTR [edi]
  4045ce:	hlt    
  4045cf:	(bad)  
  4045d0:	fnsave [ebp*1+0x38ca2c1f]
  4045d7:	jecxz  0x40462b
  4045d9:	jnp    0x404643
  4045db:	cdq    
  4045dc:	adc    al,0xc7
  4045de:	inc    esp
  4045df:	mov    ebx,0x8c9539bf
  4045e4:	mov    ch,0xba
  4045e6:	xchg   BYTE PTR [edx-0x7e8f4001],dh
  4045ec:	ja     0x404655
  4045ee:	std    
  4045ef:	(bad)  
  4045f0:	out    0xe7,al
  4045f2:	loopne 0x40457f
  4045f4:	(bad)  [edx-0x5d6b4847]
  4045fa:	push   ss
  4045fb:	push   esi
  4045fc:	xchg   esp,eax
  4045fd:	hlt    
  4045fe:	mov    esi,0x7e4fbc77
  404603:	loop   0x4045d9
  404605:	push   0x8620747a
  40460a:	cmp    DWORD PTR [ebp-0x685543d6],ebx
  404610:	sti    
  404611:	stc    
  404612:	bound  edx,QWORD PTR [eax]
  404614:	inc    edx
  404615:	xchg   ebx,eax
  404616:	jbe    0x404623
  404618:	mov    ecx,0xe7826161
  40461d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461e:	lods   eax,DWORD PTR ds:[esi]
  40461f:	cmp    al,0x49
  404621:	cmp    dh,bl
  404623:	shl    BYTE PTR [ecx+edi*2+0x3f],cl
  404627:	aam    0x96
  404629:	pop    edx
  40462a:	fdiv   st,st(5)
  40462c:	pop    ss
  40462d:	xchg   dl,bh
  40462f:	dec    ebx
  404630:	sub    dh,bh
  404632:	ficomp WORD PTR [ecx+0x72]
  404635:	mov    ch,ch
  404637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404638:	inc    ebp
  404639:	adc    edi,DWORD PTR [eax+0x3f]
  40463c:	fsub   st,st(6)
  40463e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40463f:	cli    
  404640:	cmp    BYTE PTR [eax],0xeb
  404643:	adc    al,0x28
  404646:	movd   mm0,ebp
  404649:	clc    
  40464a:	mov    ch,0x59
  40464c:	adc    BYTE PTR [edi-0x41],dl
  40464f:	inc    ebx
  404650:	inc    esi
  404651:	test   eax,0xd0cd144a
  404656:	pop    ebp
  404657:	lahf   
  404658:	cld    
  404659:	push   eax
  40465a:	mov    BYTE PTR [edx+0x6b551e03],ah
  404660:	out    dx,al
  404661:	lods   al,BYTE PTR ds:[esi]
  404662:	jae    0x4046e2
  404664:	mov    dh,ah
  404666:	push   cs
  404667:	mov    WORD PTR [edi],?
  404669:	mov    dh,0xb3
  40466b:	sub    esi,DWORD PTR [edi-0x6597720e]
  404671:	xor    BYTE PTR [edx+0x51],ch
  404674:	outs   dx,BYTE PTR ds:[esi]
  404675:	add    al,BYTE PTR [ecx-0x74b2dc71]
  40467b:	or     esi,edi
  40467d:	adc    ebx,edi
  40467f:	mov    DWORD PTR [edx-0x2ec3ed29],ebx
  404685:	xchg   dh,cl
  404687:	imul   esi,DWORD PTR [ebp+0x5d276a70],0x6ccf2541
  404691:	jmp    0x6939d76c
  404696:	dec    edx
  404697:	arpl   WORD PTR [ecx+0x13a71008],cx
  40469d:	add    DWORD PTR [ecx-0x79],edx
  4046a0:	dec    eax
  4046a1:	xchg   edx,eax
  4046a2:	pop    es
  4046a3:	xchg   DWORD PTR [edi],esp
  4046a5:	jnp    0x404657
  4046a7:	mov    cl,0x4c
  4046a9:	mov    al,0x4f
  4046ab:	mov    eax,ds:0xc4f18364
  4046b0:	(bad)  
  4046b1:	xchg   ebx,eax
  4046b2:	cmp    ebp,DWORD PTR [eax-0x4f1b4bbf]
  4046b8:	fucomi st,st(0)
  4046ba:	imul   DWORD PTR [ebp+eiz*8+0x8]
  4046be:	jnp    0x404685
  4046c0:	push   ebx
  4046c1:	jne    0x404665
  4046c3:	inc    eax
  4046c4:	inc    esp
  4046c5:	mov    DWORD PTR [esi],esi
  4046c7:	xchg   edi,eax
  4046c8:	mov    esi,eax
  4046ca:	push   es
  4046cb:	cdq    
  4046cc:	lds    esi,FWORD PTR ds:0xd9b737d
  4046d2:	pop    esi
  4046d3:	add    ch,BYTE PTR [esi-0x66852cbe]
  4046d9:	and    DWORD PTR [esi-0x22ecf60f],ebp
  4046df:	ret    0xe0ad
  4046e2:	fdiv   st,st(5)
  4046e4:	add    al,0x8e
  4046e6:	cld    
  4046e7:	in     eax,dx
  4046e8:	inc    ebx
  4046e9:	fild   DWORD PTR [edx-0x69]
  4046ec:	cwde   
  4046ed:	inc    DWORD PTR [ecx+eiz*1+0x24]
  4046f1:	or     DWORD PTR [ecx+esi*1+0x6c],eax
  4046f5:	xor    DWORD PTR [ebp-0x19],0xa9b4d5d6
  4046fc:	and    eax,0x7bf94175
  404701:	pop    eax
  404702:	add    al,0x4
  404704:	mov    ds:0x7d76b1d9,al
  404709:	aas    
  40470a:	mov    edx,DWORD PTR [ebx+ebp*1]
  40470d:	mov    eax,0x751f07e4
  404712:	outs   dx,BYTE PTR ds:[esi]
  404713:	mov    ebx,0xd1ce6e2a
  404718:	cmc    
  404719:	outs   dx,DWORD PTR ds:[esi]
  40471a:	mov    ch,0xf1
  40471c:	fidiv  DWORD PTR [ebp-0x16c0895d]
  404722:	cmp    DWORD PTR [ebp-0x2c1e8bee],esi
  404728:	enter  0xbc88,0x86
  40472c:	push   ecx
  40472d:	call   0x7e04ca6f
  404732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404733:	mov    eax,ds:0x5790242
  404738:	aad    0xb4
  40473a:	and    BYTE PTR [edi+0x3ff017b4],al
  404740:	ss xchg esp,eax
  404742:	push   0xffffffd5
  404744:	dec    esp
  404745:	ja     0x404707
  404747:	cwde   
  404748:	jge    0x4047b3
  40474a:	inc    ebx
  40474b:	push   eax
  40474c:	call   0x1a391c98
  404751:	in     eax,dx
  404752:	dec    esi
  404753:	mov    dh,0xf5
  404755:	jmp    0x3302:0x43dfaf5e
  40475c:	rcr    DWORD PTR [ebx],1
  40475e:	pushf  
  40475f:	imul   ebp,DWORD PTR [esi],0xa2296589
  404765:	sub    bl,0x8c
  404768:	sub    DWORD PTR [ebp-0x59],edx
  40476b:	bound  edx,QWORD PTR [eax+0x33]
  40476e:	inc    esp
  40476f:	arpl   WORD PTR [esi],ax
  404771:	mov    dl,0x6f
  404773:	xchg   ecx,eax
  404774:	jne    0x404724
  404776:	or     BYTE PTR [eax-0x1e2a4c56],cl
  40477c:	stos   BYTE PTR es:[edi],al
  40477d:	sbb    ecx,DWORD PTR [ebp+0x42ea9b0b]
  404783:	callw  0x5589
  404787:	js     0x40476b
  404789:	imul   esp,ecx,0x57124126
  40478f:	pop    ecx
  404790:	retf   
  404791:	inc    ebx
  404792:	int    0x58
  404794:	sbb    dh,BYTE PTR [edx]
  404796:	jno    0x404757
  404798:	sub    eax,0x204fae5d
  40479d:	pop    edi
  40479e:	jo     0x4047ed
  4047a0:	mov    dl,0xd6
  4047a2:	pop    ebx
  4047a3:	push   0x17
  4047a5:	sbb    BYTE PTR [eax],dl
  4047a7:	std    
  4047a8:	push   ss
  4047a9:	cmp    BYTE PTR [ebx-0x57452cbc],dh
  4047af:	cmp    BYTE PTR [ecx-0x7f],ah
  4047b2:	and    eax,0xf6db4b8
  4047b7:	xor    BYTE PTR ds:[esi],al
  4047ba:	dec    edi
  4047bb:	pop    edi
  4047bc:	test   BYTE PTR [ecx+0x6fa9d4ec],0x12
  4047c3:	mov    ecx,DWORD PTR [eax]
  4047c5:	mov    DWORD PTR [eax+0x37],ebp
  4047c8:	repnz sub DWORD PTR ds:0xf325a425,edi
  4047cf:	pop    es
  4047d0:	stos   BYTE PTR es:[edi],al
  4047d1:	leave  
  4047d2:	sbb    eax,0x65004806
  4047d7:	cli    
  4047d8:	sbb    edi,DWORD PTR [edi-0x10]
  4047db:	inc    ecx
  4047dc:	popa   
  4047dd:	xcrypt-ctr (bad)
  4047de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047df:	cwde   
  4047e0:	push   edi
  4047e1:	outs   dx,BYTE PTR ds:[esi]
  4047e2:	push   es
  4047e3:	xor    BYTE PTR ss:[edi],bh
  4047e6:	sar    DWORD PTR [ecx-0x4c],cl
  4047e9:	cmc    
  4047ea:	pop    esp
  4047eb:	(bad)  
  4047ec:	xor    ah,BYTE PTR [ebp-0x36]
  4047ef:	rol    ch,cl
  4047f1:	es fs xchg edx,eax
  4047f4:	sbb    edi,ecx
  4047f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f7:	les    esp,FWORD PTR [ebp+0x1f951425]
  4047fd:	jl     0x404857
  4047ff:	inc    edx
  404800:	dec    ecx
  404801:	dec    ebx
  404802:	pop    eax
  404803:	xchg   ebp,eax
  404804:	mov    dh,0x5d
  404806:	adc    edi,ecx
  404808:	aaa    
  404809:	stos   BYTE PTR es:[edi],al
  40480a:	cmp    ebp,DWORD PTR [eax+0x28]
  40480d:	in     eax,dx
  40480e:	fimul  DWORD PTR [eax]
  404810:	retf   
  404811:	test   DWORD PTR [ecx+0x20],0x91a3d389
  404818:	jmp    0x40483f
  40481a:	cmp    edi,DWORD PTR [esi-0x7]
  40481d:	fs jne 0x40484b
  404820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404821:	and    bl,cl
  404823:	add    al,0x2e
  404825:	sub    DWORD PTR [ecx+0x65a58aa7],ecx
  40482b:	inc    ecx
  40482c:	and    DWORD PTR [esi+0x45],esi
  40482f:	pop    ds
  404830:	pop    eax
  404831:	in     al,0x2f
  404833:	rcl    bl,1
  404835:	mov    ds:0x90717d0d,eax
  40483a:	and    al,0xcb
  40483c:	and    eax,0xbabbd976
  404841:	mov    cs,WORD PTR [eax-0x6c3fb40e]
  404847:	js     0x404805
  404849:	jle    0x404834
  40484b:	stos   DWORD PTR es:[edi],eax
  40484c:	lea    eax,[ebp-0x186278a3]
  404852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404853:	or     DWORD PTR [ecx-0x6302bc1a],eax
  404859:	add    dl,cl
  40485b:	pop    ebx
  40485c:	daa    
  40485d:	jge    0x40486a
  40485f:	cs shl BYTE PTR cs:[ebp+edx*2+0x4a],0x56
  404866:	mov    ds:0x650eb8a4,eax
  40486b:	sub    DWORD PTR [ecx],esi
  40486d:	shr    DWORD PTR [edx+0x682b6322],1
  404873:	dec    esp
  404874:	inc    ecx
  404875:	jae    0x4048df
  404877:	mov    edi,0x7675d892
  40487c:	outs   dx,BYTE PTR ds:[esi]
  40487d:	sub    eax,0x769ee36b
  404882:	(bad)
  404887:	pop    ss
  404888:	xor    esi,DWORD PTR [edi+0x4a56ba60]
  40488e:	dec    ebp
  40488f:	dec    ecx
  404890:	lods   al,BYTE PTR ds:[esi]
  404891:	jae    0x40490e
  404893:	cmp    al,BYTE PTR [esi]
  404895:	ror    DWORD PTR [eax],cl
  404897:	stos   DWORD PTR es:[edi],eax
  404898:	test   eax,0x56aa2312
  40489d:	test   BYTE PTR [esi+edi*8],ah
  4048a0:	and    cl,BYTE PTR [esp+esi*2+0x60]
  4048a4:	xchg   ecx,eax
  4048a5:	xor    ecx,DWORD PTR [eax]
  4048a7:	xchg   esi,eax
  4048a8:	pop    ss
  4048a9:	push   ebx
  4048aa:	or     dh,BYTE PTR [eax+0x18f6b21]
  4048b0:	jg     0x404863
  4048b2:	or     ah,BYTE PTR [ebx+0x2b1b2c13]
  4048b8:	inc    esp
  4048b9:	adc    al,0x85
  4048bb:	mov    al,ds:0x265bdd5
  4048c0:	xchg   edi,eax
  4048c1:	stc    
  4048c2:	mov    ebx,0x86bfa5b4
  4048c7:	std    
  4048c8:	pop    edi
  4048c9:	cli    
  4048ca:	stos   BYTE PTR es:[edi],al
  4048cb:	sti    
  4048cc:	ret    
  4048cd:	add    ecx,DWORD PTR [edx-0x45]
  4048d0:	push   edx
  4048d1:	in     al,dx
  4048d2:	sub    ebp,esi
  4048d4:	in     al,0x81
  4048d6:	mov    edi,0x2f3419fb
  4048db:	jns    0x4048d4
  4048dd:	sti    
  4048de:	mov    ch,0xcc
  4048e0:	push   sp
  4048e2:	in     al,dx
  4048e3:	mov    ss,WORD PTR [ecx-0x62]
  4048e6:	pop    eax
  4048e7:	icebp  
  4048e8:	das    
  4048e9:	or     BYTE PTR [esi+0x4d0b4a12],bl
  4048ef:	not    dh
  4048f1:	mov    bl,BYTE PTR [eax]
  4048f3:	(bad)  
  4048f5:	adc    DWORD PTR cs:[ecx],0x6c45ad9
  4048fc:	out    dx,al
  4048fd:	scas   eax,DWORD PTR es:[edi]
  4048fe:	fcomip st,st(1)
  404900:	push   0x6e9c4061
  404905:	js     0x4048f7
  404907:	dec    edi
  404908:	cld    
  404909:	int3   
  40490a:	nop
  40490b:	mov    es,WORD PTR [eax]
  40490d:	inc    esp
  40490e:	mov    al,0x51
  404910:	xor    edi,DWORD PTR es:[edi]
  404913:	(bad)  
  404914:	retf   0xf0d4
  404917:	lahf   
  404918:	or     BYTE PTR [eax-0x6e],bh
  40491b:	enter  0xa8fc,0xf5
  40491f:	lock fwait
  404921:	xchg   esi,eax
  404922:	sbb    al,0xc1
  404924:	xor    bl,ah
  404926:	call   0xa2cd:0xa01318f5
  40492d:	sbb    al,0x1
  40492f:	xchg   esp,eax
  404930:	adc    eax,0xea28148
  404935:	add    DWORD PTR [eax],ecx
  404937:	xor    BYTE PTR [ecx],cl
  404939:	scas   al,BYTE PTR es:[edi]
  40493a:	scas   al,BYTE PTR es:[edi]
  40493b:	rcr    BYTE PTR [ecx],0xf1
  40493e:	ffreep st(7)
  404940:	enter  0x34a2,0xdb
  404944:	xlat   BYTE PTR ds:[ebx]
  404945:	xor    eax,0x68e7a2cb
  40494a:	and    bl,0xc2
  40494d:	adc    BYTE PTR ds:0x9f041b94,ch
  404953:	or     dh,BYTE PTR [eax]
  404955:	rol    BYTE PTR [edi],0x81
  404958:	test   eax,0x169bbacd
  40495d:	lds    ecx,FWORD PTR [edx]
  40495f:	add    al,0x6
  404961:	ja     0x4049d2
  404963:	xchg   edi,eax
  404964:	inc    edx
  404965:	(bad)  
  404966:	pop    esi
  404967:	cmp    eax,0xb5069159
  40496c:	ins    BYTE PTR es:[edi],dx
  40496d:	out    dx,eax
  40496e:	imul   eax,DWORD PTR [edi],0xbbb001fc
  404974:	jae    0x404939
  404976:	mov    ecx,0x40b00ba8
  40497b:	ror    DWORD PTR [ecx+0x30],cl
  40497e:	jo     0x4049e0
  404980:	xor    ebx,edi
  404982:	outs   dx,DWORD PTR ds:[esi]
  404983:	mov    al,0xa2
  404985:	push   esp
  404986:	fxam   
  404988:	pop    ecx
  404989:	jge    0x404941
  40498b:	jl     0x4049e1
  40498d:	aam    0xa3
  40498f:	lds    esi,FWORD PTR [ebx+0xc4e7a4e]
  404995:	mov    esi,0xae1aa906
  40499a:	fcmovne st,st(5)
  40499c:	dec    ebp
  40499d:	push   ecx
  40499e:	aam    0xed
  4049a0:	cld    
  4049a1:	pop    edi
  4049a2:	cmp    BYTE PTR [ebx+0x18],bl
  4049a5:	ret    0x9e9
  4049a8:	shr    DWORD PTR [edx+eiz*1+0x2],0x64
  4049ad:	idiv   esi
  4049af:	cmp    ecx,DWORD PTR [edi]
  4049b1:	pop    es
  4049b2:	mov    ds:0x580ea019,eax
  4049b7:	cmp    DWORD PTR [esi-0x7b],0x14a3d865
  4049be:	ja     0x4049e5
  4049c0:	(bad)  
  4049c1:	rcr    DWORD PTR [edx],0x40
  4049c4:	push   ebp
  4049c5:	inc    esp
  4049c6:	or     BYTE PTR [ebx+0x1ca4a5d3],0xea
  4049cd:	inc    esi
  4049ce:	add    al,0xbd
  4049d0:	mov    ds:0xfd105a67,al
  4049d5:	in     al,0xb3
  4049d7:	cmp    esi,ecx
  4049d9:	pop    es
  4049da:	cmc    
  4049db:	test   eax,edi
  4049dd:	daa    
  4049de:	mov    WORD PTR es:0x13072335,gs
  4049e5:	xchg   ebx,eax
  4049e6:	cli    
  4049e7:	mov    ebx,0xcb692ab0
  4049ec:	out    dx,al
  4049ed:	mov    ds:0xe9b287b3,eax
  4049f2:	or     al,BYTE PTR [bx+si+0x52]
  4049f6:	sub    BYTE PTR [ecx-0xd4cdab1],al
  4049fc:	aaa    
  4049fd:	cmp    bh,BYTE PTR [ecx-0x3c]
  404a00:	lods   eax,DWORD PTR ds:[esi]
  404a01:	mov    dh,0x4f
  404a03:	stos   BYTE PTR es:[edi],al
  404a04:	fcom   QWORD PTR [ebx-0x7c416a2e]
  404a0a:	push   ss
  404a0b:	cmp    eax,0x8448dbe1
  404a10:	push   cs
  404a11:	dec    eax
  404a12:	mov    ds:0xd57211ec,al
  404a17:	sbb    bl,BYTE PTR [ecx+0x601c1d82]
  404a1d:	sbb    edx,DWORD PTR [eax+0x73]
  404a20:	pop    edx
  404a21:	mov    ch,0x66
  404a23:	mov    ebx,0x8c344a4e
  404a28:	test   eax,0x8ebf871d
  404a2d:	jmp    0xd302ea4
  404a32:	popa   
  404a33:	and    al,0x72
  404a35:	pusha  
  404a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a37:	sub    edi,edx
  404a39:	adc    eax,0x6707d151
  404a3e:	shl    edx,cl
  404a40:	out    0x9a,eax
  404a42:	je     0x404a57
  404a44:	xchg   BYTE PTR [ebp-0x46],bh
  404a47:	mov    WORD PTR [eax],?
  404a49:	sar    DWORD PTR [ecx+0x44a6c6af],cl
  404a4f:	push   edx
  404a50:	and    eax,0xd86f8049
  404a55:	dec    esp
  404a56:	sahf   
  404a57:	or     ch,BYTE PTR [ecx+0xea53b1c]
  404a5d:	mov    al,0xa8
  404a5f:	push   ebp
  404a60:	jno    0x4049fc
  404a62:	daa    
  404a63:	push   0x1be3fd74
  404a68:	and    edx,DWORD PTR [edx+edx*2-0x5150d1a4]
  404a6f:	test   DWORD PTR [ebp+0x21],esp
  404a72:	lods   al,BYTE PTR ds:[esi]
  404a73:	add    eax,esi
  404a75:	mov    cl,0x55
  404a77:	sbb    al,0xc2
  404a79:	add    al,0x4c
  404a7b:	or     bh,BYTE PTR [eax+0x6e]
  404a7e:	leave  
  404a7f:	mov    eax,0xa20023a0
  404a84:	push   esi
  404a85:	in     eax,dx
  404a86:	xor    al,0x1e
  404a88:	and    ch,bl
  404a8a:	xor    eax,0x966e771d
  404a8f:	mov    edi,0x963914d
  404a94:	mov    edx,0xd6b7d1cc
  404a99:	pop    eax
  404a9a:	fldcw  WORD PTR [edi+0x27]
  404a9d:	add    BYTE PTR [edx],ah
  404a9f:	fidiv  WORD PTR [esi+0x4555b611]
  404aa5:	aas    
  404aa6:	cli    
  404aa7:	(bad)  
  404aa9:	cmp    BYTE PTR [ecx+0x696c4dd0],0xac
  404ab0:	cdq    
  404ab1:	sbb    dh,BYTE PTR [ebp+0x9c7afbf]
  404ab7:	add    esi,0x679f53f0
  404abd:	mov    esp,DWORD PTR [ecx]
  404abf:	xor    bl,BYTE PTR [esi+0x741a10e1]
  404ac5:	lods   eax,DWORD PTR ds:[esi]
  404ac6:	xor    eax,0x28bedc8c
  404acb:	mov    dh,0x7f
  404acd:	mov    al,0xac
  404acf:	jmp    0x491:0x49e9ed6b
  404ad6:	ret    0x5e8a
  404ad9:	inc    ebx
  404ada:	(bad)  
  404adb:	dec    esi
  404adc:	and    eax,0xac5dfd5a
  404ae1:	fldcw  WORD PTR [eax-0xa]
  404ae4:	xchg   edx,eax
  404ae5:	pusha  
  404ae6:	sub    eax,0x3826d7d3
  404aeb:	cmp    ah,0x1d
  404aee:	push   ecx
  404aef:	imul   eax,DWORD PTR [eax-0x24a2219d],0x17
  404af6:	getsec 
  404af8:	cmp    esi,edi
  404afa:	sbb    al,0xa
  404afc:	cmc    
  404afd:	arpl   WORD PTR [eax+0x1],dx
  404b00:	(bad)  
  404b01:	lgs    ecx,FWORD PTR fs:[edi+edi*2-0xe]
  404b07:	pop    ebx
  404b08:	clc    
  404b09:	jmp    0x9256e3d3
  404b0e:	mov    edi,0x51d56429
  404b13:	ret    0x43c9
  404b16:	jg     0x404af8
  404b18:	stc    
  404b19:	or     edi,DWORD PTR [ebp+0x797e30cc]
  404b1f:	and    eax,0x30b60cb4
  404b24:	mov    cl,0x66
  404b26:	jmp    0xb948386b
  404b2b:	adc    ch,BYTE PTR [ecx-0x1128e012]
  404b31:	mov    DWORD PTR [ebp*4-0x7590629b],ecx
  404b38:	cdq    
  404b39:	gs mov edi,0x91c1f831
  404b3f:	mov    eax,0x33b653e5
  404b44:	ja     0x404af6
  404b46:	inc    esp
  404b47:	dec    eax
  404b48:	and    eax,0x11ba9ae0
  404b4d:	dec    edx
  404b4e:	addr16 dec esp
  404b50:	adc    al,0x6e
  404b52:	pop    esp
  404b53:	mov    al,0xe8
  404b55:	push   ebx
  404b56:	jbe    0x404bbc
  404b58:	push   0xffffffe3
  404b5a:	pop    ebp
  404b5b:	in     eax,dx
  404b5c:	ins    BYTE PTR es:[edi],dx
  404b5d:	sbb    DWORD PTR [ebp-0x23],eax
  404b60:	add    al,0x29
  404b62:	pop    ebx
  404b63:	retf   0x3d0
  404b66:	cmp    DWORD PTR [esi+0x60],0xffffffb1
  404b6a:	add    eax,0xb8402156
  404b6f:	int3   
  404b70:	bound  ebp,QWORD PTR [edi+0xe]
  404b73:	fdiv   DWORD PTR [edx]
  404b75:	(bad)  
  404b76:	(bad)  
  404b77:	ficom  WORD PTR [edi-0x5125671b]
  404b7d:	ret    
  404b7e:	jmp    0x404ba8
  404b80:	hlt    
  404b81:	xor    DWORD PTR [ecx-0x21ab188b],eax
  404b87:	(bad)  
  404b88:	sbb    DWORD PTR [ebp+0x6c],ebx
  404b8b:	fist   WORD PTR [ecx+0xd]
  404b8e:	fsub   st(0),st
  404b90:	mov    dl,0x42
  404b92:	ins    BYTE PTR es:[edi],dx
  404b93:	int    0xb4
  404b95:	jl     0x404b2e
  404b97:	sub    bh,BYTE PTR [eax]
  404b99:	out    dx,eax
  404b9a:	or     eax,0xf9bec3d7
  404b9f:	mov    gs,WORD PTR [ebx]
  404ba1:	mul    BYTE PTR [eax+0x29]
  404ba4:	repnz adc eax,0x8a10d467
  404baa:	div    DWORD PTR [edi+eiz*2]
  404bad:	pop    esi
  404bae:	fs adc esi,0x33
  404bb2:	ss pusha 
  404bb4:	xor    dh,BYTE PTR [ebx]
  404bb6:	sbb    BYTE PTR [edx-0x69],al
  404bb9:	dec    ebx
  404bba:	leave  
  404bbb:	mov    eax,0xf2729758
  404bc0:	mov    eax,ds:0x111f65fc
  404bc5:	inc    esi
  404bc6:	mov    dl,0xb2
  404bc8:	lds    edi,FWORD PTR [ecx]
  404bca:	sbb    ebx,DWORD PTR [edi]
  404bcc:	adc    edx,DWORD PTR [ebp+0x7b]
  404bcf:	jbe    0x404c2f
  404bd1:	mov    dl,0x58
  404bd3:	inc    esi
  404bd4:	out    dx,al
  404bd5:	adc    BYTE PTR [edx+0x1f83342c],0x65
  404bdc:	shl    BYTE PTR [ebp+0x41b5b78f],cl
  404be2:	xchg   esp,eax
  404be3:	inc    ebp
  404be4:	pop    eax
  404be5:	cs dec ecx
  404be7:	aad    0x4b
  404be9:	int3   
  404bea:	ins    DWORD PTR es:[edi],dx
  404beb:	cdq    
  404bec:	es ret 
  404bee:	sbb    dl,BYTE PTR [ebx+edx*4-0x4f]
  404bf2:	push   0x64
  404bf4:	inc    edi
  404bf5:	out    0xda,al
  404bf7:	add    al,bh
  404bf9:	das    
  404bfa:	iret   
  404bfb:	jmp    0x9c2b2cd0
  404c00:	sar    BYTE PTR [esp+ebx*2],1
  404c03:	sub    al,0xa0
  404c05:	inc    edx
  404c06:	xchg   cx,ax
  404c08:	imul   ecx,DWORD PTR [edi+0x72],0xffffffce
  404c0c:	add    ch,BYTE PTR [edi+edx*1]
  404c0f:	jne    0x404bfa
  404c11:	mov    edi,0x6ea92e2c
  404c16:	repz and bh,bh
  404c19:	cmc    
  404c1a:	and    eax,0x4d442b6e
  404c1f:	punpcklwd mm6,mm1
  404c22:	xor    DWORD PTR [eax+0x29],eax
  404c25:	out    dx,eax
  404c26:	lods   al,BYTE PTR ds:[esi]
  404c27:	adc    ah,BYTE PTR [esi+0x79]
  404c2a:	adc    ecx,DWORD PTR [esi+0xf775029]
  404c30:	les    esp,FWORD PTR [ecx+0x466f9122]
  404c36:	test   ebp,esp
  404c38:	pusha  
  404c39:	xlat   BYTE PTR ds:[ebx]
  404c3a:	push   esp
  404c3b:	stos   BYTE PTR es:[edi],al
  404c3c:	dec    eax
  404c3d:	rcr    DWORD PTR [ecx-0x25],1
  404c40:	scas   eax,DWORD PTR es:[edi]
  404c41:	ss pop sp
  404c44:	nop
  404c45:	aaa    
  404c46:	aad    0x67
  404c48:	cmp    eax,0x11325957
  404c4d:	enter  0x82c5,0x3f
  404c51:	jecxz  0x404c96
  404c53:	xchg   ebp,eax
  404c54:	xchg   ebp,eax
  404c55:	dec    BYTE PTR [ebx+0x4d8bfc45]
  404c5b:	call   0xc7440f93
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	iret   
  404e97:	popf   
  404e98:	dec    esp
  404e99:	jmp    0x7abaada8
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404f11
  404ea3:	sub    esp,DWORD PTR ds:0x2bfe48bf
  404ea9:	push   cs
  404eaa:	mov    ecx,0x5c49b8a8
  404eaf:	popa   
  404eb0:	push   edi
  404eb1:	push   ds
  404eb2:	adc    ebp,DWORD PTR [ebx+0x5]
  404eb5:	xchg   BYTE PTR [eax+edx*1-0x75ae5589],bl
  404ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ebd:	push   ebp
  404ebe:	xor    al,0xf1
  404ec0:	cmp    ecx,DWORD PTR [ecx-0x64]
  404ec3:	mov    dl,0xc4
  404ec5:	inc    edx
  404ec6:	imul   esi,edi,0x6751a6ac
  404ecc:	mov    bh,0xfd
  404ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ecf:	sbb    esp,DWORD PTR cs:[edi+0x354f43]
  404ed6:	mov    ecx,0xac3970be
  404edb:	adc    eax,0xcb86f6d0
  404ee0:	push   ds
  404ee1:	and    BYTE PTR [esi+0x2ec9923f],0x23
  404ee8:	push   ss
  404ee9:	push   edx
  404eea:	lds    ebp,FWORD PTR [edi+esi*8-0xc94c386]
  404ef1:	sbb    DWORD PTR [esi+ebp*4],edx
  404ef4:	dec    eax
  404ef5:	inc    ecx
  404ef6:	pop    esi
  404ef7:	shr    DWORD PTR [edx-0xe],1
  404efa:	push   esi
  404efb:	add    cl,dh
  404efd:	xchg   ecx,eax
  404efe:	dec    edx
  404eff:	int3   
  404f00:	stos   BYTE PTR es:[edi],al
  404f01:	sbb    al,0xb5
  404f03:	call   0xefef323b
  404f08:	call   0x9709:0x12451728
  404f0f:	and    al,0x85
  404f11:	lods   al,BYTE PTR ds:[esi]
  404f12:	mov    esi,0xef4031c8
  404f17:	pop    edi
  404f18:	cmp    DWORD PTR [ebx-0x4f],edx
  404f1b:	in     al,dx
  404f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f1d:	xchg   edi,eax
  404f1e:	cdq    
  404f1f:	sbb    al,0xa7
  404f21:	daa    
  404f22:	arpl   WORD PTR [ecx+0x4a66840],sp
  404f28:	shl    DWORD PTR [eax+0x4f0b7c56],0xa7
  404f2f:	xor    ebx,DWORD PTR [edi-0x5a60ca9c]
  404f35:	shl    BYTE PTR [ebx-0x29],1
  404f38:	sbb    DWORD PTR [ebx],0xd75db303
  404f3e:	mov    ?,WORD PTR [edx]
  404f40:	dec    esi
  404f41:	gs cld 
  404f43:	in     eax,0x9f
  404f45:	mov    ds:0x47e99626,eax
  404f4a:	mov    al,0x19
  404f4c:	inc    eax
  404f4d:	cld    
  404f4e:	dec    edx
  404f4f:	mov    ecx,0xfe6cb4d1
  404f54:	dec    ecx
  404f55:	mov    DWORD PTR ss:[esi-0x36],esi
  404f59:	ret    
  404f5a:	push   ss
  404f5b:	pop    esp
  404f5c:	pop    edx
  404f5d:	xchg   edi,eax
  404f5e:	jle    0x404f1b
  404f60:	pushf  
  404f61:	sub    DWORD PTR [eax+0x3d],ecx
  404f64:	mov    esp,0xe4c4c08a
  404f69:	aas    
  404f6a:	mov    bl,0xaf
  404f6c:	xor    ecx,DWORD PTR [esi]
  404f6e:	lods   al,BYTE PTR ds:[esi]
  404f6f:	inc    ebx
  404f70:	pop    edi
  404f71:	add    esi,DWORD PTR [esi+edx*1]
  404f74:	ss mov eax,0x4cefb809
  404f7a:	ins    BYTE PTR es:[edi],dx
  404f7b:	(bad)  {k6}{z}
  404f80:	or     al,0x78
  404f82:	mov    edx,0xcb46dce3
  404f87:	sahf   
  404f88:	push   cs
  404f89:	sbb    ah,ch
  404f8b:	ins    DWORD PTR es:[edi],dx
  404f8c:	cs add eax,0x9ac0be1d
  404f92:	dec    edi
  404f93:	(bad)  [edi-0x32fdf178]
  404f99:	cmp    ecx,edi
  404f9b:	mov    ds:0xe12c5899,eax
  404fa0:	fcmovbe st,st(2)
  404fa2:	ds mov bh,0xb4
  404fa5:	rcl    BYTE PTR [eax-0x2d0b48ff],0xef
  404fac:	rol    ebx,1
  404fae:	xor    eax,0x3ebe511c
  404fb3:	push   edi
  404fb4:	dec    esi
  404fb5:	xchg   esi,eax
  404fb6:	push   esi
  404fb7:	pop    eax
  404fb8:	dec    ecx
  404fb9:	xchg   edx,eax
  404fba:	dec    ecx
  404fbb:	and    dh,0x20
  404fbe:	ins    BYTE PTR es:[edi],dx
  404fbf:	arpl   bx,cx
  404fc1:	sub    eax,0xd8bc2dd7
  404fc6:	push   ss
  404fc7:	test   al,0x21
  404fc9:	inc    edi
  404fca:	hlt    
  404fcb:	sbb    BYTE PTR [ebx],ah
  404fcd:	dec    BYTE PTR [edx-0x39]
  404fd0:	pop    es
  404fd1:	mov    edi,0x94513ac5
  404fd6:	mov    ebx,0xf0615483
  404fdb:	fadd   DWORD PTR [ebp+0x13]
  404fde:	(bad)  
  404fdf:	arpl   WORD PTR [edi],cx
  404fe1:	mov    esi,0x852f505
  404fe6:	and    al,0xca
  404fe8:	test   DWORD PTR [edx+eiz*1],ebp
  404feb:	mov    dh,0xbe
  404fed:	mov    al,ds:0x2be8d6f6
  404ff2:	mov    dh,0x30
  404ff4:	shl    esi,cl
  404ff6:	jno    0x404fa0
  404ff8:	repz mov WORD PTR [edi-0x64],es
  404ffc:	stos   BYTE PTR es:[edi],al
  404ffd:	or     BYTE PTR [edx],al
  404fff:	xchg   ecx,eax
  405000:	jb     0x405028
  405002:	fld    DWORD PTR [edx]
  405004:	sbb    ebp,DWORD PTR [edx+0x2b519c2c]
  40500a:	stc    
  40500b:	out    0x1d,eax
  40500d:	pop    ss
  40500e:	hlt    
  40500f:	xchg   ebx,eax
  405010:	mov    al,0xf8
  405012:	push   ecx
  405013:	inc    edx
  405014:	shl    DWORD PTR [esi+edi*8-0x5d402e79],1
  40501b:	ret    
  40501c:	pop    edi
  40501d:	sub    ch,0x6b
  405020:	add    esi,DWORD PTR [esi-0x2a]
  405023:	sub    eax,0x1d89c322
  405028:	jmp    0x586b:0x63030806
  40502f:	xchg   edi,eax
  405030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405031:	push   0x65e660a8
  405036:	xchg   ecx,eax
  405037:	aam    0xf4
  405039:	cld    
  40503a:	pop    esi
  40503b:	cmp    bh,BYTE PTR es:[ebx+0x3d]
  40503f:	sbb    BYTE PTR [ebp+0x61],bh
  405042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405043:	nop
  405044:	hlt    
  405045:	push   0x38
  405047:	pushf  
  405048:	jnp    0x40507e
  40504a:	jns    0x40500b
  40504c:	sub    bl,BYTE PTR [esi+0x2243a8ee]
  405052:	mov    ecx,0x3812ae70
  405057:	jmp    0x786da7b4
  40505c:	xchg   edx,eax
  40505d:	sbb    edi,DWORD PTR ds:0xd012ac0b
  405063:	or     bh,BYTE PTR [eax-0x12e5b5c4]
  405069:	clc    
  40506a:	mov    eax,0x336726be
  40506f:	cmp    eax,ebx
  405071:	rol    DWORD PTR [edi-0x53],1
  405074:	fwait
  405075:	scas   al,BYTE PTR es:[edi]
  405076:	cdq    
  405077:	push   ss
  405078:	pop    DWORD PTR [ebp+0x13]
  40507b:	frstor [edx]
  40507d:	adc    al,0xf3
  40507f:	aad    0xd9
  405081:	xor    eax,edx
  405083:	jge    0x405054
  405085:	mov    eax,ds:0xdf297330
  40508a:	aas    
  40508b:	xor    bl,BYTE PTR [eax]
  40508d:	and    dl,BYTE PTR [edx]
  40508f:	push   edi
  405090:	mov    esp,edx
  405092:	push   esi
  405093:	xor    eax,esp
  405095:	pop    eax
  405096:	test   al,0xfb
  405098:	scas   eax,DWORD PTR es:[edi]
  405099:	dec    eax
  40509a:	add    al,0x9e
  40509c:	icebp  
  40509d:	inc    ecx
  40509e:	xchg   edx,eax
  40509f:	shr    DWORD PTR [esi],0x82
  4050a2:	mov    DWORD PTR [eax],0xd7e46189
  4050a8:	dec    esi
  4050a9:	test   BYTE PTR ds:0x417302f5,0x59
  4050b0:	xlat   BYTE PTR ds:[ebx]
  4050b1:	sub    BYTE PTR [ecx],0x9c
  4050b4:	fwait
  4050b5:	ds push esi
  4050b7:	repz jl 0x4050e1
  4050ba:	sub    esp,DWORD PTR [esi+edi*4-0x43]
  4050be:	adc    cl,dh
  4050c0:	mov    al,0xf5
  4050c2:	ins    DWORD PTR es:[edi],dx
  4050c3:	or     DWORD PTR [esi],esp
  4050c5:	inc    eax
  4050c6:	mov    ebx,0x5615b1c2
  4050cb:	mov    dl,0x30
  4050cd:	gs aaa 
  4050cf:	and    bh,dl
  4050d1:	xor    eax,DWORD PTR [ebx+esi*2]
  4050d4:	sbb    ebp,eax
  4050d6:	dec    ebp
  4050d7:	push   esp
  4050d8:	jl     0x405092
  4050da:	test   eax,0xcb49fc0d
  4050df:	push   ss
  4050e0:	mov    es,WORD PTR [edx-0x42]
  4050e3:	sub    ebx,eax
  4050e5:	mov    dl,0x20
  4050e7:	and    BYTE PTR [edi+edi*4-0x50],0x7b
  4050ec:	pushf  
  4050ed:	sub    dh,dh
  4050ef:	xor    eax,0xfc484f63
  4050f4:	cmp    eax,0x439f8f37
  4050f9:	xchg   ebp,eax
  4050fa:	popf   
  4050fb:	dec    ebx
  4050fc:	mov    eax,0x53a5703d
  405101:	sub    al,0xec
  405103:	retf   0xe054
  405106:	adc    ebx,DWORD PTR [edi-0x7a9247f4]
  40510c:	sbb    eax,0x8da2a78b
  405111:	adc    bl,dl
  405113:	scas   al,BYTE PTR es:[edi]
  405114:	popf   
  405115:	arpl   bp,si
  405117:	xlat   BYTE PTR ds:[ebx]
  405118:	popf   
  405119:	or     eax,0x7ed6792b
  40511e:	mov    ch,BYTE PTR es:[edx+0x245c3a90]
  405125:	cmp    BYTE PTR [eax-0x6d748574],bh
  40512b:	(bad)  
  40512c:	adc    bh,BYTE PTR [ebp-0x436864af]
  405132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405133:	mov    cl,0xd5
  405135:	shl    BYTE PTR [edx+0x3fd5f1a4],1
  40513b:	jl     0x40516d
  40513d:	mov    dh,0xf1
  40513f:	mov    ah,0x4c
  405141:	xchg   esi,eax
  405142:	push   es
  405143:	out    0xb0,eax
  405145:	pop    ss
  405146:	pushf  
  405147:	xor    bl,BYTE PTR [edx+0x4c]
  40514a:	mov    esi,0x20681237
  40514f:	int    0x60
  405151:	bswap  esi
  405153:	jnp    0x405123
  405155:	scas   al,BYTE PTR es:[edi]
  405156:	cli    
  405157:	mov    edi,0xf1382650
  40515c:	enter  0xcbbf,0xf2
  405160:	(bad)  
  405161:	imul   esp,DWORD PTR [ebx+0x7c7504b],0x5
  405168:	shl    DWORD PTR [ecx-0x4c],cl
  40516b:	mov    esi,0x26ef8f4f
  405170:	fistp  QWORD PTR [ebp-0x24]
  405173:	stos   BYTE PTR es:[edi],al
  405174:	gs cs mov ch,0x9c
  405178:	xchg   ecx,eax
  405179:	and    eax,0xd5739db1
  40517e:	jge    0x4051c2
  405180:	or     cl,ah
  405182:	and    DWORD PTR [edx-0x62],edx
  405185:	mov    al,ds:0x7037719c
  40518a:	cmc    
  40518b:	fdiv   QWORD PTR [eax]
  40518d:	mov    esp,0x714753a4
  405192:	lods   al,BYTE PTR ds:[esi]
  405193:	adc    eax,0x64f9c832
  405198:	pushf  
  405199:	das    
  40519a:	mov    ecx,0x696675b5
  40519f:	scas   eax,DWORD PTR es:[edi]
  4051a0:	cmp    eax,edi
  4051a2:	xor    eax,0xdb1f7126
  4051a7:	rol    DWORD PTR [edi],0xb1
  4051aa:	(bad)  
  4051ab:	repnz fcomp QWORD PTR [edx+0x406b9695]
  4051b2:	dec    ebx
  4051b3:	cmc    
  4051b4:	cmp    al,0x4a
  4051b6:	inc    eax
  4051b7:	jne    0x4051d7
  4051b9:	gs std 
  4051bb:	(bad)  
  4051bd:	push   ebx
  4051be:	pop    edi
  4051bf:	push   cs
  4051c0:	xor    al,0x2
  4051c2:	rol    BYTE PTR [eax],0x8
  4051c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c7:	in     eax,dx
  4051c8:	mov    bl,0xff
  4051ca:	cmp    DWORD PTR [ebx],0x25306809
  4051d0:	cld    
  4051d1:	xor    BYTE PTR [eax-0x61],bl
  4051d4:	xlat   BYTE PTR ds:[ebx]
  4051d5:	je     0x4051db
  4051d7:	pand   mm2,QWORD PTR [esi]
  4051da:	mov    eax,0xb9d68406
  4051df:	(bad)  
  4051e1:	popf   
  4051e2:	jge    0x40524b
  4051e4:	sub    al,0xd1
  4051e6:	push   0x30
  4051e8:	mov    dh,BYTE PTR [ecx]
  4051ea:	xchg   esi,eax
  4051eb:	sbb    eax,0x6908eb9b
  4051f0:	dec    edi
  4051f1:	imul   edi,DWORD PTR [edx+0x68],0xf00d19db
  4051f8:	add    edi,ecx
  4051fa:	mov    ch,BYTE PTR [ebx]
  4051fc:	adc    edi,esp
  4051fe:	xor    esi,esp
  405200:	mov    ah,0x22
  405202:	stc    
  405203:	fstp   QWORD PTR [edx+0x2f4998fe]
  405209:	xlat   BYTE PTR ds:[ebx]
  40520a:	adc    al,0x58
  40520c:	push   eax
  40520d:	in     eax,0xaa
  40520f:	call   0xec9dda65
  405214:	les    edi,FWORD PTR [edx]
  405216:	mov    al,al
  405218:	mov    BYTE PTR [ecx-0x60],bl
  40521b:	shl    dh,cl
  40521d:	xor    edx,0xaf5fc8dd
  405223:	adc    ecx,eax
  405225:	jmp    0x281a2e45
  40522a:	fwait
  40522b:	mov    cl,0xaa
  40522d:	shl    BYTE PTR [eax-0x49bc0f57],0xdc
  405234:	pop    esi
  405235:	xchg   ebp,eax
  405236:	pop    ebx
  405237:	or     al,BYTE PTR [ebx+0x78]
  40523a:	push   edi
  40523b:	rcr    BYTE PTR [ebp+0x2c8aca02],cl
  405241:	jl     0x4051ed
  405243:	test   al,0x27
  405245:	scas   al,BYTE PTR es:[edi]
  405246:	inc    esp
  405247:	xchg   ebx,eax
  405248:	pop    ss
  405249:	jecxz  0x4052a2
  40524b:	xchg   edx,eax
  40524c:	loopne 0x40521b
  40524e:	xchg   esp,eax
  40524f:	aaa    
  405250:	ret    
  405251:	adc    DWORD PTR [esi+eiz*4],edi
  405254:	jge    0x405219
  405256:	adc    eax,0xc91087ea
  40525b:	aad    0x58
  40525d:	fbld   TBYTE PTR [eax+0x23]
  405260:	leave  
  405261:	fucomi st,st(0)
  405263:	lahf   
  405264:	pop    esp
  405265:	stos   BYTE PTR es:[edi],al
  405266:	gs jns 0x405290
  405269:	into   
  40526a:	adc    BYTE PTR [ecx+0x65],bl
  40526d:	and    esp,DWORD PTR [edi-0x64420e0a]
  405273:	out    dx,al
  405274:	xchg   BYTE PTR [eax-0x2d],dh
  405277:	or     al,0x3f
  405279:	and    eax,0xbf540a22
  40527e:	cmp    al,0x39
  405280:	out    dx,eax
  405281:	sbb    ebx,DWORD PTR [eax+0x416267bd]
  405287:	test   DWORD PTR [edx],0x8f2e929a
  40528d:	mov    eax,0x134c70a9
  405292:	push   esi
  405293:	inc    ebx
  405294:	icebp  
  405295:	hlt    
  405296:	xchg   ebx,eax
  405297:	test   DWORD PTR [ebx+0x18],ebp
  40529a:	adc    eax,0x7de04a0d
  40529f:	int3   
  4052a0:	retf   
  4052a1:	inc    esp
  4052a2:	xlat   BYTE PTR ds:[ebx]
  4052a3:	cmp    dh,ah
  4052a5:	xchg   edx,eax
  4052a6:	dec    ebp
  4052a7:	or     DWORD PTR [edx+ebp*4-0x66a985b0],0x42dd7a9a
  4052b2:	ds aas 
  4052b4:	fwait
  4052b5:	xchg   esp,eax
  4052b6:	fistp  DWORD PTR [esi+esi*1-0xd]
  4052ba:	les    esi,FWORD PTR [edx+eax*4+0x4c]
  4052be:	xor    ecx,DWORD PTR [ecx-0x6cd0d519]
  4052c4:	jmp    0x30ec2d77
  4052c9:	mov    esi,0x7e7420d
  4052ce:	lds    esi,FWORD PTR [ecx]
  4052d0:	mov    eax,ds:0x5f32478c
  4052d5:	xchg   esi,eax
  4052d6:	fcmovnbe st,st(1)
  4052d8:	mov    ds:0x7deebf6e,eax
  4052dd:	in     eax,dx
  4052de:	adc    bh,al
  4052e0:	and    al,0x51
  4052e2:	jle    0x40526c
  4052e4:	int    0x3
  4052e6:	rcl    DWORD PTR [edi-0x74922d87],cl
  4052ec:	pop    es
  4052ed:	push   edx
  4052ee:	popf   
  4052ef:	icebp  
  4052f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f1:	adc    eax,DWORD PTR [esi+0x67]
  4052f4:	enter  0xb194,0x42
  4052f8:	enter  0x8cbe,0xbb
  4052fc:	mov    ds:0x11ba07e2,eax
  405301:	stc    
  405302:	or     bl,BYTE PTR [ebx+0x4f]
  405305:	add    eax,esp
  405307:	jns    0x4052cd
  405309:	xor    BYTE PTR [ebp+0x3],ch
  40530c:	clc    
  40530d:	rcl    DWORD PTR [edx+0x7f5a06e9],cl
  405313:	cmp    BYTE PTR [ebx-0x3a],dl
  405316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405317:	push   ds
  405318:	ins    BYTE PTR es:[edi],dx
  405319:	pushf  
  40531a:	mov    bl,0xc6
  40531c:	(bad)  
  40531d:	lahf   
  40531e:	or     eax,0x2dac73ce
  405323:	xlat   BYTE PTR ds:[ebx]
  405324:	add    ebp,DWORD PTR [edx]
  405326:	mov    ebx,0x257c0231
  40532b:	mov    gs,WORD PTR [eax]
  40532d:	lods   eax,DWORD PTR ds:[esi]
  40532e:	frndint 
  405330:	rol    DWORD PTR [ebp+0x75],0xf4
  405334:	bound  esi,QWORD PTR [ebp-0x23c6c21c]
  40533a:	js     0x405324
  40533c:	sub    DWORD PTR [ebx+edx*4+0x67],edx
  405340:	and    eax,0xd4c45bea
  405346:	adc    al,0xbb
  405348:	cmp    DWORD PTR [esi+edx*4-0x7edc37d4],ebp
  40534f:	sub    BYTE PTR [edi+0x4a],ch
  405352:	(bad)  
  405353:	add    dh,BYTE PTR [ebp-0x1259c57b]
  405359:	arpl   di,dx
  40535b:	shl    BYTE PTR [edx+eiz*1],cl
  40535e:	pusha  
  40535f:	xchg   edi,eax
  405360:	call   0xac8b0bd3
  405365:	ret    
  405366:	in     eax,0x97
  405368:	scas   al,BYTE PTR es:[edi]
  405369:	fnstsw WORD PTR [ecx+ecx*2]
  40536c:	or     eax,0x2425747c
  405371:	test   eax,0x15af2385
  405376:	cdq    
  405377:	ret    0xaf0
  40537a:	lds    esi,FWORD PTR [eax]
  40537c:	stos   BYTE PTR es:[edi],al
  40537d:	(bad)  
  40537e:	mov    dl,0x4d
  405380:	mov    ebp,0x64aeefd3
  405385:	mov    dl,0x15
  405387:	outs   dx,BYTE PTR ds:[esi]
  405388:	imul   ebp,DWORD PTR [eax],0x2bc2e23f
  40538e:	xchg   ecx,eax
  40538f:	scas   al,BYTE PTR es:[edi]
  405390:	ja     0x405327
  405392:	add    al,0xb2
  405394:	mov    ebx,0xbd4b392
  405399:	outs   dx,BYTE PTR ds:[esi]
  40539a:	enter  0xa4d7,0x33
  40539e:	fxch   st(2)
  4053a0:	cwde   
  4053a1:	das    
  4053a2:	pop    es
  4053a3:	mov    ds:0xf40f5d94,al
  4053a8:	jae    0x4053db
  4053aa:	lock adc al,0x93
  4053ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ae:	xor    eax,0x75a2187e
  4053b3:	pop    esi
  4053b4:	or     DWORD PTR [edi+0xf],0x3e
  4053b8:	mov    dh,0x46
  4053ba:	(bad)  
  4053bb:	popf   
  4053bc:	dec    ebx
  4053bd:	fdiv   st,st(4)
  4053bf:	add    eax,0xa0335540
  4053c4:	sbb    DWORD PTR [eax],edi
  4053c6:	xchg   BYTE PTR [edi-0x20],al
  4053c9:	int    0x1d
  4053cb:	push   ecx
  4053cc:	test   esp,esi
  4053ce:	mov    bh,0xd9
  4053d0:	pop    es
  4053d1:	fbld   TBYTE PTR [ecx+0x1b987067]
  4053d7:	add    al,0x55
  4053d9:	test   eax,0x258cc658
  4053de:	inc    BYTE PTR [edx]
  4053e0:	(bad)  
  4053e2:	jg     0x405367
  4053e4:	dec    esi
  4053e5:	xor    DWORD PTR [ebx],0xa8fea500
  4053eb:	jl     0x4053a9
  4053ed:	pop    ds
  4053ee:	mov    ds,WORD PTR [edi-0x3ae7b9a4]
  4053f4:	xchg   BYTE PTR [edx-0x67d57da3],dh
  4053fa:	inc    ebx
  4053fb:	mov    ch,0xfd
  4053fd:	jg     0x4053d5
  4053ff:	jnp    0x4053af
  405401:	mov    WORD PTR [ebx+0x5bb452c6],ss
  405407:	sbb    ah,BYTE PTR es:[esi-0x28af07ef]
  40540e:	neg    DWORD PTR [esp+esi*1]
  405411:	mov    DWORD PTR [edx],ecx
  405413:	sahf   
  405414:	xchg   ebp,eax
  405415:	jns    0x405445
  405417:	and    DWORD PTR ds:0x4c72fb90,eax
  40541d:	(bad)  
  40541f:	adc    bh,0x33
  405422:	not    BYTE PTR [ebp+0x21]
  405425:	(bad)  
  405426:	test   DWORD PTR [esi],0xe10abfb4
  40542c:	sbb    ebx,DWORD PTR [ebx-0x33b77235]
  405432:	pop    ecx
  405433:	cmp    al,0xff
  405435:	jns    0x4053ff
  405437:	mov    edi,0x64e124a2
  40543c:	test   ah,bl
  40543e:	cli    
  40543f:	(bad)  [ecx]
  405441:	daa    
  405442:	and    eax,0x33e8d1da
  405447:	sbb    dh,BYTE PTR [edx]
  405449:	pop    ss
  40544a:	sbb    ah,BYTE PTR [ebp+0x5]
  40544d:	retf   
  40544e:	pusha  
  40544f:	xchg   ebp,eax
  405450:	pop    eax
  405451:	sbb    eax,esp
  405453:	push   edi
  405454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405455:	in     al,0xd2
  405457:	int    0xca
  405459:	cld    
  40545a:	xchg   DWORD PTR [edi-0x9],edi
  40545d:	sub    eax,0xd8c1204a
  405462:	xor    ebp,DWORD PTR [ebp+ebx*1-0x5120f002]
  405469:	mov    ds:0x561718f9,al
  40546e:	sbb    al,0x40
  405470:	inc    esp
  405471:	add    cl,BYTE PTR [ecx]
  405473:	cmp    al,0x1b
  405475:	sub    ecx,DWORD PTR [esi]
  405477:	add    edx,DWORD PTR [edx-0x42]
  40547a:	popf   
  40547b:	xchg   edx,eax
  40547c:	stc    
  40547d:	outs   dx,DWORD PTR ds:[esi]
  40547e:	sbb    eax,0x52a9ef8e
  405483:	mov    bh,BYTE PTR [ebx+0x36866aae]
  405489:	add    dh,BYTE PTR [ecx]
  40548b:	inc    edx
  40548c:	pop    eax
  40548d:	lds    ebx,FWORD PTR [edi-0x1709afd2]
  405493:	imul   eax,DWORD PTR [ebp+0x3d],0xfffffff6
  405497:	(bad)  
  405498:	jnp    0x4054e5
  40549a:	clc    
  40549b:	rcl    DWORD PTR [ecx],0x6e
  40549e:	push   edi
  40549f:	mov    cl,0x61
  4054a1:	gs pop ss
  4054a3:	das    
  4054a4:	xchg   DWORD PTR [ebx+0x9212ef0],ecx
  4054aa:	dec    eax
  4054ab:	mov    al,0xf7
  4054ad:	cld    
  4054ae:	xor    ebp,DWORD PTR [edx+0x32158ee2]
  4054b4:	int3   
  4054b5:	mov    ah,0xc2
  4054b7:	aaa    
  4054b8:	mov    ds,esi
  4054ba:	rcr    DWORD PTR [edx],0x9c
  4054bd:	popa   
  4054be:	cmp    DWORD PTR [edx+0x49],ebp
  4054c1:	jge    0x40548b
  4054c3:	mov    dl,0x59
  4054c5:	je     0x4054b9
  4054c7:	mov    ch,BYTE PTR [edx]
  4054c9:	jmp    0xb48:0x2e725aa7
  4054d0:	xchg   ecx,eax
  4054d1:	aam    0x2c
  4054d3:	jae    0x40554a
  4054d5:	fiadd  WORD PTR [ebx]
  4054d7:	dec    edx
  4054d8:	and    eax,0x63a499c1
  4054dd:	lds    edx,FWORD PTR [esi+0x3ca4f805]
  4054e3:	push   0x11
  4054e5:	pop    edx
  4054e6:	cmp    eax,DWORD PTR [ecx]
  4054e8:	dec    ebx
  4054e9:	xchg   bl,cl
  4054eb:	stc    
  4054ec:	jmp    0xc891e385
  4054f1:	ja     0x4054db
  4054f3:	lds    ecx,FWORD PTR [ebp-0x6f51082e]
  4054f9:	jno    0x405533
  4054fb:	push   ss
  4054fc:	add    DWORD PTR [ebp-0xcc9f54e],edi
  405502:	xor    al,0x7
  405504:	jno    0x405560
  405506:	pop    edi
  405507:	pop    ebp
  405508:	mov    ah,0x44
  40550a:	into   
  40550b:	lfs    ecx,FWORD PTR [ecx+ebp*4+0x5e509eb6]
  405513:	mov    ah,0x26
  405515:	cmp    al,0x57
  405517:	and    eax,0xf159d784
  40551c:	or     BYTE PTR [edx-0x28],0xef
  405520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405521:	adc    bh,dh
  405523:	cdq    
  405524:	fst    DWORD PTR [ebx-0x402320e3]
  40552a:	mov    ds:0x4b91137c,eax
  40552f:	sub    dh,BYTE PTR [ecx+ebx*4+0x44d4586c]
  405536:	cli    
  405537:	retf   0x532b
  40553a:	into   
  40553b:	loopne 0x405576
  40553d:	pusha  
  40553e:	pop    esp
  40553f:	pop    edi
  405540:	dec    edx
  405541:	pushf  
  405542:	xor    ah,ah
  405544:	out    0x7d,al
  405546:	rcr    BYTE PTR [eax+esi*8+0x527f3efd],0x82
  40554e:	pop    ebx
  40554f:	sub    eax,0x94959459
  405554:	mov    ebp,0x6d693524
  405559:	popa   
  40555a:	lea    edi,[ebp-0x46]
  40555d:	pop    edi
  40555e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40555f:	dec    ecx
  405560:	in     al,dx
  405561:	imul   ebp,DWORD PTR [edi-0x460a2b63],0xffffff91
  405568:	aas    
  405569:	test   ebx,0xce5219f0
  40556f:	pop    ebx
  405570:	aas    
  405571:	dec    esp
  405572:	retf   0x6cca
  405575:	repnz cmp ecx,edi
  405578:	mov    ebx,0x9ca6154f
  40557d:	sti    
  40557e:	frstor [ecx-0x7b787bc5]
  405584:	fld    QWORD PTR [esi]
  405586:	or     eax,0x40e19325
  40558b:	inc    eax
  40558c:	imul   edx,DWORD PTR [edx+0x16],0x25
  405590:	call   0xa24d:0x3cb27dab
  405597:	rol    DWORD PTR [edx+0x46],0xb5
  40559b:	ror    BYTE PTR [ecx-0x1844e7f5],0xf
  4055a2:	push   es
  4055a3:	stos   DWORD PTR es:[edi],eax
  4055a4:	or     bh,bh
  4055a6:	sti    
  4055a7:	lods   eax,DWORD PTR ds:[esi]
  4055a8:	repz fcom DWORD PTR [ecx-0x46]
  4055ac:	cmc    
  4055ad:	adc    BYTE PTR [edx+0x5cd20e93],cl
  4055b3:	push   eax
  4055b4:	add    eax,0x46a37ddc
  4055b9:	test   DWORD PTR [edx+0x71972d52],ecx
  4055bf:	ret    0xb5df
  4055c2:	cmp    ah,BYTE PTR [edx]
  4055c4:	in     eax,0x10
  4055c6:	mov    fs,WORD PTR [edi+0x6f]
  4055c9:	cmp    DWORD PTR [ebx],esi
  4055cb:	nop
  4055cc:	mov    al,ds:0x76899254
  4055d1:	xor    edi,DWORD PTR [ebp-0x4e05a707]
  4055d7:	cmc    
  4055d8:	imul   eax,DWORD PTR [edi-0x5d43f375],0x8
  4055df:	cli    
  4055e0:	enter  0x1aad,0x7a
  4055e4:	iret   
  4055e5:	cmp    DWORD PTR [eax+0x6fb6ef4a],esi
  4055eb:	and    al,0x5c
  4055ed:	in     eax,dx
  4055ee:	push   edi
  4055ef:	fwait
  4055f0:	mov    WORD PTR [ebx+0x70],fs
  4055f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055f4:	dec    esi
  4055f5:	mov    al,ds:0xa2a5a0c5
  4055fa:	push   ds
  4055fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055fc:	cdq    
  4055fd:	sbb    BYTE PTR [eax+ebp*4+0x279cf90e],ah
  405604:	xor    al,0xa3
  405606:	test   bh,0x7c
  405609:	pop    ebp
  40560a:	imul   edx,DWORD PTR [ebp+ebx*2-0x62e3114b],0xffffff88
  405612:	out    dx,eax
  405613:	fisttp QWORD PTR [ebx-0x2f204c45]
  405619:	lock mov ch,0xc7
  40561c:	adc    ecx,ecx
  40561e:	sahf   
  40561f:	cdq    
  405620:	retf   0x765c
  405623:	loopne 0x405611
  405625:	adc    dh,bh
  405627:	and    ebp,DWORD PTR [ebp+0x4e0675e9]
  40562d:	mov    bh,BYTE PTR [ebx-0x59bbe40c]
  405633:	or     eax,0x6f732cf
  405638:	sub    DWORD PTR [ebx+0x1e266f3f],esi
  40563e:	push   edi
  40563f:	sub    BYTE PTR [ebx],al
  405641:	xor    eax,0x180e774b
  405646:	push   ebx
  405647:	out    dx,eax
  405648:	jge    0x40568c
  40564a:	dec    esp
  40564b:	adc    DWORD PTR [edx-0x505183eb],edx
  405651:	mov    ebp,0x7ccf06b
  405656:	aad    0xc2
  405658:	xor    ebx,DWORD PTR [ebx-0x8a566c8]
  40565e:	mov    al,ds:0x1b3db24b
  405663:	mov    ds:0x3a84941,al
  405668:	fmul   DWORD PTR [ebx-0x3]
  40566b:	ret    0x46b8
  40566e:	data16 add al,cl
  405671:	push   ds
  405672:	test   al,0xbf
  405674:	mov    ecx,0x6188454b
  405679:	es in  al,dx
  40567b:	push   ecx
  40567c:	cmp    al,0xd6
  40567e:	mov    dh,0xbb
  405680:	mov    ebp,0x31261963
  405685:	xchg   ebp,eax
  405686:	adc    ecx,0xc71bcc91
  40568c:	and    ecx,DWORD PTR [ecx+0x582422a2]
  405692:	add    al,0xd0
  405694:	(bad)  
  405695:	into   
  405696:	cmp    BYTE PTR [ebp-0x17],0x78
  40569a:	shl    BYTE PTR [ebx-0x5],cl
  40569d:	cmc    
  40569e:	or     al,0xcd
  4056a0:	dec    esi
  4056a1:	bound  ebx,QWORD PTR [esi+0x3e]
  4056a4:	push   esi
  4056a5:	int    0x28
  4056a7:	or     al,BYTE PTR [edx+0x504c24c4]
  4056ad:	cmp    cl,bh
  4056af:	mov    ah,0xb3
  4056b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b3:	int    0x6e
  4056b5:	fbstp  TBYTE PTR ds:0x3b07a444
  4056bb:	dec    esp
  4056bc:	imul   DWORD PTR [eax+0x70dbc140]
  4056c2:	push   esp
  4056c3:	test   BYTE PTR [edx+eax*1+0x29],dh
  4056c7:	adc    DWORD PTR [eax-0x3a],edi
  4056ca:	dec    ecx
  4056cb:	or     al,0x34
  4056cd:	cmc    
  4056ce:	mov    edi,0xdd857732
  4056d3:	frstor [ebx]
  4056d5:	sub    al,0xfe
  4056d7:	pop    ebx
  4056d8:	aad    0x31
  4056da:	jb     0x40567c
  4056dc:	sub    al,0x8
  4056de:	pop    ecx
  4056df:	imul   esi,DWORD PTR es:[edi],0x37ca2788
  4056e6:	daa    
  4056e7:	push   ds
  4056e8:	cmc    
  4056e9:	mov    edi,DWORD PTR [edi]
  4056eb:	sbb    dh,bl
  4056ed:	es jmp 0xcb84a97
  4056f3:	pop    ds
  4056f4:	and    eax,0xfd019b2
  4056f9:	sub    ecx,eax
  4056fb:	jne    0x405767
  4056fd:	push   esp
  4056fe:	imul   ebx,DWORD PTR [edx-0x13],0x2d
  405702:	mov    ds,WORD PTR [eax]
  405704:	(bad)  
  405705:	out    dx,eax
  405706:	lods   eax,DWORD PTR ds:[esi]
  405707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405708:	test   DWORD PTR ds:0x28d4cd7e,esi
  40570e:	or     esi,DWORD PTR [edx+ecx*8+0x6c]
  405712:	jp     0x4056a5
  405714:	cmp    edi,esi
  405716:	pop    esi
  405717:	arpl   WORD PTR [esi],bp
  405719:	addr16 sbb eax,0x728c8985
  40571f:	xchg   edx,eax
  405720:	push   esp
  405721:	ins    BYTE PTR es:[edi],dx
  405722:	cwde   
  405723:	sahf   
  405724:	loope  0x40573d
  405726:	mov    cl,0x37
  405728:	dec    ebx
  405729:	mov    ecx,0xc0106a02
  40572e:	mov    ebp,0x7a933b28
  405733:	or     bh,BYTE PTR [eax+0x63]
  405736:	mov    dh,BYTE PTR [edx-0x633844da]
  40573c:	dec    ebx
  40573d:	ins    BYTE PTR es:[edi],dx
  40573e:	mov    dh,0xad
  405740:	mov    ebp,0x1d25ace0
  405745:	rol    BYTE PTR [ebx-0x4cd8c2],0xd0
  40574c:	pop    ss
  40574d:	push   ebx
  40574e:	pop    ebp
  40574f:	mov    WORD PTR [edi-0x62],?
  405752:	rcr    BYTE PTR gs:[esi+0x5961258f],1
  405759:	lea    eax,[edi+0x42]
  40575c:	lahf   
  40575d:	push   ebx
  40575e:	and    DWORD PTR [eax-0x1a495322],edi
  405764:	pushw  es
  405766:	int3   
  405767:	jp     0x405742
  405769:	out    dx,eax
  40576a:	out    dx,eax
  40576b:	js     0x40570a
  40576d:	rol    DWORD PTR [eax+ebp*1+0x57],cl
  405771:	outs   dx,DWORD PTR ds:[esi]
  405772:	int3   
  405773:	frstor [eax]
  405775:	mov    ds:0xce89ecbb,eax
  40577a:	fs dec edi
  40577c:	aam    0x2b
  40577e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40577f:	dec    ebp
  405780:	pop    edx
  405781:	dec    ebp
  405782:	cmp    ecx,DWORD PTR [edi-0x62]
  405785:	out    0xa8,al
  405787:	std    
  405788:	jge    0x40571f
  40578a:	and    eax,0x1c41d2d3
  40578f:	and    eax,ebp
  405791:	adc    eax,0x7e60e0c9
  405796:	and    eax,0x247c895f
  40579b:	sub    dl,ch
  40579d:	jnp    0x4057a6
  40579f:	push   0xffffffb3
  4057a1:	inc    ebp
  4057a2:	sub    al,0x95
  4057a4:	jge    0x405769
  4057a6:	dec    edx
  4057a7:	mov    bl,0xd9
  4057a9:	hlt    
  4057aa:	adc    eax,0x470465b6
  4057af:	js     0x4057bd
  4057b1:	ror    BYTE PTR [edx],cl
  4057b3:	lahf   
  4057b4:	dec    ecx
  4057b5:	mov    edi,0xbf88f1e6
  4057ba:	jge    0x405760
  4057bc:	or     al,0x39
  4057be:	dec    esp
  4057bf:	out    dx,al
  4057c0:	fiadd  DWORD PTR [esi+0x10]
  4057c3:	pop    edx
  4057c4:	push   ds
  4057c5:	and    bh,BYTE PTR [esi+edi*8-0x2e7090ec]
  4057cc:	add    ch,bl
  4057ce:	mov    ebx,0xeff0efb6
  4057d3:	inc    eax
  4057d4:	aad    0xfb
  4057d6:	or     cl,BYTE PTR [ebx-0x5dbca18f]
  4057dc:	cmc    
  4057dd:	leave  
  4057de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057df:	or     esp,eax
  4057e1:	xchg   esp,eax
  4057e2:	in     eax,0x87
  4057e4:	ret    
  4057e5:	xor    al,0xd
  4057e7:	or     esp,DWORD PTR [ebp+0x7]
  4057ea:	inc    edi
  4057eb:	mov    ah,0xce
  4057ed:	mov    al,bl
  4057ef:	and    eax,edx
  4057f1:	adc    DWORD PTR [esi-0x74],eax
  4057f4:	js     0x4057d9
  4057f6:	cmp    eax,0x2d1483c7
  4057fb:	inc    eax
  4057fc:	test   eax,0x869eb6d5
  405801:	cmp    BYTE PTR [esi],ch
  405803:	push   ebx
  405804:	push   cs
  405805:	xor    eax,0xf80f47fd
  40580a:	xor    DWORD PTR [ebx-0x723a3776],esp
  405810:	cmp    al,0x1d
  405812:	jne    0x40586c
  405814:	mov    al,0xe
  405816:	cli    
  405817:	inc    eax
  405818:	xchg   edx,eax
  405819:	xchg   ebx,eax
  40581a:	and    eax,DWORD PTR [esi+0x6ec4aa6f]
  405820:	xchg   DWORD PTR [esi],eax
  405822:	jae    0x405811
  405824:	aaa    
  405825:	jg     0x40586a
  405827:	dec    edi
  405828:	out    dx,eax
  405829:	stos   DWORD PTR es:[edi],eax
  40582a:	xchg   ebp,eax
  40582b:	test   DWORD PTR [ecx-0x22],edi
  40582e:	lods   al,BYTE PTR ds:[esi]
  40582f:	lds    ebx,FWORD PTR [edx-0x15]
  405832:	inc    edi
  405833:	iret   
  405834:	inc    ecx
  405835:	dec    esp
  405836:	push   esp
  405837:	loop   0x40585a
  405839:	xor    ecx,eax
  40583b:	clc    
  40583c:	je     0x40581c
  40583e:	sub    BYTE PTR [edx],bh
  405840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405841:	bt     DWORD PTR [esi],esi
  405844:	push   esi
  405845:	mov    ebx,0x314574cb
  40584a:	add    ah,BYTE PTR [ebx+edi*1]
  40584d:	xchg   edx,eax
  40584e:	sahf   
  40584f:	out    0xc2,eax
  405851:	sbb    BYTE PTR [ebx],ch
  405853:	mov    al,0xd4
  405855:	pop    ebx
  405856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405857:	or     al,0x1
  405859:	push   edi
  40585a:	jmp    0x405886
  40585c:	fimul  WORD PTR [ecx]
  40585e:	shr    ah,cl
  405860:	rol    DWORD PTR [edi-0x33a0db38],1
  405866:	(bad)  
  405867:	outs   dx,BYTE PTR ds:[esi]
  405868:	mov    cl,0xb0
  40586a:	in     al,0xe5
  40586c:	hlt    
  40586d:	or     bh,BYTE PTR [ecx+0x5a]
  405870:	xor    BYTE PTR [ecx-0x4c],0xe
  405874:	sbb    eax,0x7e9b5c41
  405879:	xchg   esi,eax
  40587a:	xchg   edx,eax
  40587b:	inc    esi
  40587c:	fsub   QWORD PTR [edx-0x11f4753f]
  405882:	push   edx
  405883:	fwait
  405884:	xor    DWORD PTR ss:[eax],eax
  405887:	rcl    bl,0x5a
  40588a:	inc    edi
  40588b:	pusha  
  40588c:	push   ebx
  40588d:	jl     0x4058da
  40588f:	xchg   ecx,eax
  405890:	popf   
  405891:	(bad)  
  405892:	fdivp  st(3),st
  405894:	out    dx,al
  405895:	in     al,dx
  405896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405897:	pushf  
  405898:	cmp    al,0xbf
  40589a:	mov    ebp,0xbbbbd740
  40589f:	call   0x8cf5:0x411c5b76
  4058a6:	adc    al,0xc6
  4058a8:	shl    BYTE PTR [ebx+0x72f8c749],1
  4058ae:	ins    DWORD PTR es:[edi],dx
  4058af:	xor    DWORD PTR [edx+0x2034f971],edi
  4058b5:	arpl   WORD PTR [ebx],di
  4058b7:	test   al,0x85
  4058b9:	dec    ebx
  4058ba:	add    BYTE PTR [edx-0x20],dl
  4058bd:	mov    ds:0x7a0fd2b0,al
  4058c2:	mov    ds:0x670c43c4,al
  4058c7:	fistp  QWORD PTR [ebx]
  4058c9:	xor    al,0xe9
  4058cb:	pop    ebp
  4058cc:	xor    eax,0x7e5bb0dc
  4058d1:	stos   DWORD PTR es:[edi],eax
  4058d2:	or     BYTE PTR [esi-0x7d],dl
  4058d5:	cwde   
  4058d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d7:	pop    edi
  4058d8:	imul   ebp,edi,0x66
  4058db:	xchg   esp,ebp
  4058dd:	(bad)  
  4058df:	(bad)  
  4058e0:	cwde   
  4058e1:	into   
  4058e2:	xchg   edx,eax
  4058e3:	pop    esp
  4058e4:	cmp    DWORD PTR [esi],eax
  4058e6:	mov    esi,0xd4d5f41c
  4058eb:	call   0xe544:0xf5e4e088
  4058f2:	xor    DWORD PTR [ebp+0x39e8e9cf],0xffffffdd
  4058f9:	push   ds
  4058fa:	into   
  4058fb:	je     0x4058e5
  4058fd:	repnz repnz xor eax,0xd3a5d9c3
  405904:	mov    BYTE PTR [ebx+0x15],bl
  405907:	stos   BYTE PTR es:[edi],al
  405908:	and    eax,0xe0e6869b
  40590d:	jecxz  0x405980
  40590f:	dec    eax
  405910:	ficom  WORD PTR [ebp+0xa]
  405913:	les    eax,FWORD PTR [esp+eax*1]
  405916:	nop
  405917:	loope  0x4058f1
  405919:	fld    DWORD PTR [ecx-0x17109989]
  40591f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405920:	ins    DWORD PTR es:[edi],dx
  405921:	icebp  
  405922:	mov    edi,0x698e07cc
  405927:	dec    ebx
  405928:	sbb    BYTE PTR [ecx+0x35],bh
  40592b:	js     0x405948
  40592d:	inc    DWORD PTR [ebp+ecx*8-0x2346c3d3]
  405934:	pushw  0xffa1
  405937:	fwait
  405938:	pop    esi
  405939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593a:	inc    esi
  40593b:	inc    edx
  40593c:	add    al,0x9c
  40593e:	jecxz  0x405982
  405940:	pushf  
  405941:	push   es
  405942:	mov    bl,BYTE PTR [edx-0x3896f80d]
  405948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405949:	inc    BYTE PTR es:[ecx+0x35]
  40594d:	popf   
  40594e:	xchg   edi,eax
  40594f:	or     DWORD PTR [ebp-0x458cb72c],esi
  405955:	dec    edx
  405956:	es pop edx
  405958:	(bad)  
  405959:	shr    esp,cl
  40595b:	xor    ebp,edi
  40595d:	int    0x37
  40595f:	pop    ds
  405960:	sbb    dl,BYTE PTR [edx]
  405962:	pop    esp
  405963:	daa    
  405964:	es xor al,0xa7
  405967:	sub    esi,DWORD PTR [ebp+0x2e2bbb59]
  40596d:	push   es
  40596e:	fwait
  40596f:	cmp    esp,ebp
  405971:	je     0x4059e0
  405973:	ins    DWORD PTR es:[edi],dx
  405974:	xor    esp,0x27247021
  40597a:	fiadd  WORD PTR [edx]
  40597c:	fiadd  WORD PTR [edi+0x5202758c]
  405982:	xchg   DWORD PTR [esi-0x10b6085b],edi
  405988:	pop    ecx
  405989:	jb     0x4059db
  40598b:	icebp  
  40598c:	and    esi,eax
  40598e:	push   ebx
  40598f:	retf   0xf858
  405992:	inc    edx
  405993:	aam    0x13
  405995:	xor    BYTE PTR [eax],dh
  405997:	sub    ch,0x21
  40599a:	xor    dl,BYTE PTR [edx+0x4c844dea]
  4059a0:	or     DWORD PTR [edi+0x79],edx
  4059a3:	jmp    0xfac6:0x4b76aa7d
  4059aa:	dec    ebx
  4059ab:	push   edi
  4059ac:	push   ss
  4059ad:	dec    ecx
  4059ae:	repz or BYTE PTR [ebp-0x7b],dl
  4059b2:	lahf   
  4059b3:	mov    DWORD PTR [eax],edi
  4059b5:	hlt    
  4059b6:	test   al,0x27
  4059b8:	mov    eax,ds:0x9dfae9fd
  4059bd:	or     BYTE PTR [edi-0x24],dh
  4059c0:	xchg   edx,eax
  4059c1:	xor    cl,BYTE PTR [ebp-0xe5ca4ed]
  4059c7:	sahf   
  4059c8:	mov    ah,0x76
  4059ca:	inc    ebx
  4059cb:	fnclex 
  4059cd:	outs   dx,DWORD PTR ds:[esi]
  4059ce:	adc    eax,0xec08215d
  4059d3:	mov    es,WORD PTR [eax+0x4c]
  4059d6:	xlat   BYTE PTR ds:[ebx]
  4059d7:	cs push es
  4059d9:	pop    esp
  4059da:	add    eax,0x7c6a4170
  4059df:	mov    eax,0x2acfb139
  4059e4:	in     al,dx
  4059e5:	jmp    0x40597d
  4059e7:	mov    dl,0x89
  4059e9:	mov    ah,cl
  4059eb:	fsub   st,st(1)
  4059ed:	addr16 jp 0x4059a5
  4059f0:	or     ah,al
  4059f2:	in     al,dx
  4059f3:	cmc    
  4059f4:	repz adc esp,eax
  4059f7:	mov    ebx,0xa4bfe3cc
  4059fc:	add    DWORD PTR [eax+eax*2],eax
  4059ff:	iret   
  405a00:	jbe    0x4059b7
  405a02:	xor    DWORD PTR fs:[eax],eax
  405a05:	mov    eax,ds:0x1092b27a
  405a0a:	xchg   BYTE PTR [edi+0x7c3e015b],bh
  405a10:	(bad)  
  405a11:	cli    
  405a12:	push   ebp
  405a13:	repz push edi
  405a15:	out    0x30,eax
  405a17:	(bad)
  405a1b:	sahf   
  405a1c:	sub    al,0xa1
  405a1e:	ss adc al,0x1d
  405a21:	adc    ah,BYTE PTR [ecx-0x48]
  405a24:	in     eax,dx
  405a25:	xchg   ecx,eax
  405a26:	sub    ecx,DWORD PTR [ebx-0x7d20cb76]
  405a2c:	xor    eax,0x48785b5
  405a31:	sbb    al,0xb7
  405a33:	inc    edi
  405a34:	push   ebp
  405a35:	lds    ecx,FWORD PTR [ebx+0x7daf9812]
  405a3b:	cmp    DWORD PTR [eax],0x53ace942
  405a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a42:	dec    edi
  405a43:	xchg   ecx,eax
  405a44:	jmp    0x9b294421
  405a49:	test   eax,0xb6af8a7f
  405a4e:	scas   eax,DWORD PTR es:[edi]
  405a4f:	fs es aad 0x37
  405a53:	leave  
  405a54:	rcr    BYTE PTR [esi+0x74e78ee3],cl
  405a5a:	push   0xffffff96
  405a5c:	in     eax,0x3e
  405a5e:	mov    bh,0xd7
  405a60:	jb     0x405a03
  405a62:	pop    eax
  405a63:	div    BYTE PTR [ecx+0x4bbb5ac8]
  405a69:	std    
  405a6a:	sub    bl,ch
  405a6c:	rcl    DWORD PTR [ebx+0x37],1
  405a6f:	push   eax
  405a70:	loopne 0x405a7e
  405a72:	xchg   BYTE PTR [edx+0x5e],bl
  405a75:	pushf  
  405a76:	pop    ecx
  405a77:	push   es
  405a78:	sub    DWORD PTR [edx-0x7e],esp
  405a7b:	test   ebp,0x671b45ec
  405a81:	sub    DWORD PTR [eax+0x34],esp
  405a84:	mov    ds,WORD PTR [ecx+0x44]
  405a87:	push   cs
  405a88:	xchg   edx,eax
  405a89:	in     al,dx
  405a8a:	sub    ebp,0x3b65f669
  405a90:	retf   
  405a91:	mov    DWORD PTR [eax+edi*1+0x53],edx
  405a95:	and    al,BYTE PTR [esi+0x55035890]
  405a9b:	retf   
  405a9c:	jns    0x405a8c
  405a9e:	int    0xf1
  405aa0:	std    
  405aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa2:	jae    0x405a53
  405aa4:	adc    al,0xa3
  405aa6:	add    al,0xb5
  405aa8:	jns    0x405b0b
  405aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aab:	lods   eax,DWORD PTR ds:[esi]
  405aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aad:	loope  0x405a89
  405aaf:	push   cs
  405ab0:	test   DWORD PTR [ebp+0x55],esi
  405ab3:	test   BYTE PTR [edx],0xd1
  405ab6:	add    BYTE PTR es:[edx+0x7c],bl
  405aba:	push   0x6d
  405abc:	cmp    al,0x7a
  405abe:	call   0x53966d5f
  405ac3:	jle    0x405ae1
  405ac5:	retf   0x6794
  405ac8:	pop    ecx
  405ac9:	adc    al,0x32
  405acb:	cmp    BYTE PTR [eax-0xc],bh
  405ace:	mov    edx,0x1301668a
  405ad3:	jg     0x405ac4
  405ad5:	push   ds
  405ad6:	(bad)  
  405ad7:	cmp    al,0xd1
  405ad9:	jmp    0x41b295ff
  405ade:	pop    es
  405adf:	cdq    
  405ae0:	jle    0x405b34
  405ae2:	cli    
  405ae3:	xchg   DWORD PTR [eax-0x5c],ebx
  405ae6:	jb     0x405aee
  405ae8:	arpl   WORD PTR [eax+eax*8+0x52],cx
  405aec:	mov    cl,0x83
  405aee:	into   
  405aef:	dec    esp
  405af0:	shr    dh,0x5d
  405af3:	jno    0x405b6a
  405af5:	push   edi
  405af6:	das    
  405af7:	cmp    DWORD PTR [edi+eax*4-0x2e],ebp
  405afb:	retf   
  405afc:	xor    eax,0xcb04c8fe
  405b01:	arpl   ax,bp
  405b03:	sti    
  405b04:	xor    eax,0xde48dd82
  405b09:	cmp    al,0xe5
  405b0b:	cld    
  405b0c:	ss (bad) 
  405b0e:	mov    eax,DWORD PTR [esi]
  405b10:	push   ecx
  405b11:	repz inc ecx
  405b13:	pop    eax
  405b14:	sub    BYTE PTR [ebp+0x4a39e40f],al
  405b1a:	mov    esp,ss
  405b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b1d:	and    al,0x91
  405b1f:	sbb    al,0xbe
  405b21:	mov    cl,0xde
  405b23:	loope  0x405b4a
  405b25:	stos   DWORD PTR es:[edi],eax
  405b26:	jp     0x405b53
  405b28:	sub    al,0x4
  405b2a:	pop    ds
  405b2b:	inc    ebx
  405b2c:	int    0xa1
  405b2e:	mov    bh,0xbb
  405b30:	inc    esi
  405b31:	adc    eax,DWORD PTR [ebp+0x0]
  405b34:	dec    ebx
  405b35:	mov    dh,0xa1
  405b37:	mov    ah,0x52
  405b39:	sub    al,0xf7
  405b3b:	jnp    0x405b5a
  405b3d:	adc    esi,DWORD PTR [edx-0x516668ce]
  405b43:	mov    ch,0x83
  405b45:	or     esp,esp
  405b47:	jae    0x405b16
  405b49:	(bad)  
  405b4b:	mov    ds:0x66e8cd00,eax
  405b50:	(bad)  
  405b51:	and    ecx,ebx
  405b53:	hlt    
  405b54:	int3   
  405b55:	lock in al,0xf0
  405b58:	dec    ecx
  405b59:	mov    ch,0x3f
  405b5b:	push   ds
  405b5c:	bnd jo 0x405b78
  405b5f:	xchg   DWORD PTR [ebx],ecx
  405b61:	es dec ebp
  405b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b64:	sbb    al,0x8e
  405b66:	xor    esi,DWORD PTR [ecx+0x5b]
  405b69:	ret    
  405b6a:	jns    0x405be2
  405b6c:	(bad)  
  405b6d:	aam    0xe1
  405b6f:	xchg   esi,eax
  405b70:	ins    BYTE PTR es:[edi],dx
  405b71:	sbb    eax,DWORD PTR [edx-0xf]
  405b74:	sar    DWORD PTR [ebp-0x76],cl
  405b77:	xor    edi,DWORD PTR ds:0x92d503ba
  405b7d:	jne    0x405b0e
  405b7f:	xchg   DWORD PTR [ecx+0x9],esp
  405b82:	mov    fs,WORD PTR ds:0x90d3f154
  405b88:	pop    es
  405b89:	into   
  405b8a:	jle    0x405b96
  405b8c:	scas   al,BYTE PTR es:[edi]
  405b8d:	(bad)  
  405b8e:	test   al,0x5d
  405b90:	fs loop 0x405b4c
  405b93:	pop    ebp
  405b94:	into   
  405b95:	sbb    bl,BYTE PTR [ebp+0x795e7d7a]
  405b9b:	jle    0x405baf
  405b9d:	sub    DWORD PTR [ecx+edi*1],edi
  405ba0:	aaa    
  405ba1:	pusha  
  405ba2:	add    edx,DWORD PTR [ebx]
  405ba4:	fbstp  TBYTE PTR [ecx+0x78]
  405ba7:	gs pop es
  405ba9:	loope  0x405c1a
  405bab:	mov    al,ds:0x394cfbb4
  405bb0:	ja     0x405c16
  405bb2:	mov    edx,?
  405bb4:	or     bh,BYTE PTR [ebx+0x8890b72]
  405bba:	into   
  405bbb:	mov    ?,ebp
  405bbd:	mov    esp,0xd7bbcc79
  405bc2:	xor    al,0xfe
  405bc4:	jp     0x405bcc
  405bc6:	jo     0x405bac
  405bc8:	int3   
  405bc9:	in     al,dx
  405bca:	adc    bh,BYTE PTR [edx]
  405bcc:	dec    ecx
  405bcd:	fdivp  st(0),st
  405bcf:	pop    ss
  405bd0:	xchg   edi,eax
  405bd1:	and    ebp,ebx
  405bd3:	je     0x405c26
  405bd5:	xchg   ebx,eax
  405bd6:	adc    dl,dl
  405bd8:	mov    dl,0x37
  405bda:	stc    
  405bdb:	mov    ch,0xf2
  405bdd:	mov    BYTE PTR [edx],cl
  405bdf:	stos   DWORD PTR es:[edi],eax
  405be0:	aam    0x55
  405be2:	cmp    eax,0x5b50b816
  405be7:	pop    esp
  405be8:	sub    al,0xa3
  405bea:	pshufw mm6,QWORD PTR [edi+0x2e],0x82
  405bef:	push   eax
  405bf0:	push   0x97aff5b8
  405bf5:	cwde   
  405bf6:	ret    0xe421
  405bf9:	dec    esp
  405bfa:	iret   
  405bfb:	ja     0x405bea
  405bfd:	push   0xa61c6fc8
  405c02:	sub    BYTE PTR [esi-0x60ca9fcc],bh
  405c08:	sub    eax,0x160701f5
  405c0d:	call   0x448d:0xe54a6df1
  405c14:	jmp    FWORD PTR [eax+ebp*1-0x4e]
  405c18:	dec    ebp
  405c19:	adc    eax,0xaa186132
  405c1f:	rol    BYTE PTR [edi],1
  405c21:	inc    ebx
  405c22:	js     0x405c41
  405c24:	in     eax,0x46
  405c26:	imul   edi,DWORD PTR ds:0x82a22c18,0x429d4bf3
  405c30:	fstp   TBYTE PTR [ecx+0x37]
  405c33:	popf   
  405c34:	xlat   BYTE PTR ds:[ebx]
  405c35:	test   eax,0x7dcff80e
  405c3a:	ret    
  405c3b:	mov    dl,BYTE PTR [edx-0x6f]
  405c3e:	cmp    eax,0x6677a538
  405c43:	ror    BYTE PTR [esi],1
  405c45:	jmpw   0x51c9
  405c49:	pop    edi
  405c4a:	aaa    
  405c4b:	sbb    eax,0x7019d5f
  405c50:	inc    ebx
  405c51:	or     BYTE PTR [edx-0x13],ah
  405c54:	jmp    0xbde:0xc99dba2b
  405c5b:	pop    es
  405c5c:	pop    eax
  405c5d:	je     0x405cb8
  405c5f:	xor    bl,BYTE PTR [ecx]
  405c61:	sbb    eax,0x2c448076
  405c66:	aaa    
  405c67:	iret   
  405c68:	push   es
  405c69:	mov    WORD PTR [esi],fs
  405c6b:	cmp    al,0xfd
  405c6d:	aam    0x32
  405c6f:	or     al,0xcd
  405c71:	or     BYTE PTR [ebx+ebp*2-0x4d75912],cl
  405c78:	js     0x405c8d
  405c7a:	int3   
  405c7b:	and    BYTE PTR [esi-0x508dacde],0xb7
  405c82:	dec    edx
  405c83:	ss pop ecx
  405c85:	dec    edi
  405c86:	ins    BYTE PTR es:[edi],dx
  405c87:	repnz adc BYTE PTR [eax+eax*2+0x7a],bl
  405c8c:	mov    edx,0xdeebfdb3
  405c91:	lea    esi,[edi-0x6497e73a]
  405c97:	ror    DWORD PTR [eax+0x29],1
  405c9a:	adc    ebx,ecx
  405c9c:	xchg   BYTE PTR [esi-0x2b],dh
  405c9f:	dec    esi
  405ca0:	xchg   ebx,eax
  405ca1:	aad    0xc1
  405ca3:	cdq    
  405ca4:	in     al,0x7e
  405ca6:	mov    DWORD PTR [eax],edi
  405ca8:	cmp    eax,0x8068355e
  405cad:	pop    edi
  405cae:	shr    ebp,0x11
  405cb1:	into   
  405cb2:	repnz pop eax
  405cb4:	ret    
  405cb5:	out    0x92,eax
  405cb7:	sub    esp,DWORD PTR [ebx+0x4]
  405cba:	pop    ss
  405cbb:	sbb    esp,edi
  405cbd:	mov    al,ds:0x489d80ec
  405cc2:	jo     0x405cf1
  405cc4:	cmc    
  405cc5:	mov    cl,0xe1
  405cc7:	jle    0x405c4f
  405cc9:	mov    al,0x13
  405ccb:	lea    ebp,[esi]
  405ccd:	push   edx
  405cce:	sbb    eax,0x6622c27c
  405cd3:	test   al,0x81
  405cd5:	mov    dh,0x37
  405cd7:	repz pushf 
  405cd9:	jp     0x405d2e
  405cdb:	push   ebx
  405cdc:	sub    eax,0x97a893cd
  405ce1:	mov    dl,0x28
  405ce3:	scas   eax,DWORD PTR es:[edi]
  405ce4:	xor    DWORD PTR [eax],ebp
  405ce6:	dec    edx
  405ce7:	mov    al,ds:0x83d7fa58
  405cec:	sub    BYTE PTR [esi+edi*8],cl
  405cef:	fimul  WORD PTR [ebp+0xf]
  405cf2:	add    al,0x6c
  405cf4:	mov    edi,DWORD PTR ds:0x82c81b45
  405cfa:	sub    cl,al
  405cfc:	or     eax,0xa3ff5dc9
  405d01:	scas   eax,DWORD PTR es:[edi]
  405d02:	push   cs
  405d03:	pop    ecx
  405d04:	in     eax,dx
  405d05:	test   DWORD PTR [esi],esp
  405d07:	aaa    
  405d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d09:	cdq    
  405d0a:	(bad)  
  405d0b:	add    DWORD PTR [ebx],0x6eed8511
  405d11:	dec    eax
  405d12:	test   eax,0xb0f861f4
  405d17:	test   DWORD PTR [edi+0x4c11c305],ecx
  405d1d:	shl    DWORD PTR [eax-0x24aa8ba0],cl
  405d23:	add    eax,0xf894ebbc
  405d28:	mov    ah,0x42
  405d2a:	popf   
  405d2b:	lds    esp,FWORD PTR [ebx-0x7b]
  405d2e:	mov    ds:0x4e82fe2b,al
  405d33:	repz popf 
  405d35:	and    BYTE PTR [ebx+0x37],bh
  405d38:	pop    eax
  405d39:	sbb    al,0x9d
  405d3b:	inc    ebx
  405d3c:	repz test al,0x91
  405d3f:	test   DWORD PTR [edx-0x55],edx
  405d42:	sub    al,0x55
  405d44:	jp     0x405d3b
  405d46:	jmp    0x405da5
  405d48:	movntps XMMWORD PTR [ebx+0x42],xmm4
  405d4c:	or     BYTE PTR [ebx+esi*2+0xce6d68b],0x11
  405d54:	xor    dl,ah
  405d56:	xor    DWORD PTR [edi+eax*8+0x3ac1c2f8],ecx
  405d5d:	ins    BYTE PTR es:[edi],dx
  405d5e:	mov    esi,0x39315862
  405d63:	lods   al,BYTE PTR ds:[esi]
  405d64:	cmp    eax,0x9eb05b50
  405d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d6a:	les    esp,FWORD PTR [esi+0x28]
  405d6d:	pop    esp
  405d6e:	aam    0x5
  405d70:	nop
  405d71:	adc    BYTE PTR [ecx+0x6bd31c6a],dl
  405d77:	(bad)  
  405d78:	adc    eax,0x86b4d901
  405d7d:	mov    bl,0xa7
  405d7f:	fcmovnu st,st(6)
  405d81:	enter  0xacb6,0xac
  405d85:	(bad)  [ecx+eax*1-0x4afe7457]
  405d8c:	add    eax,0x50074b52
  405d91:	sub    DWORD PTR ss:[ebx+0x41549294],edi
  405d98:	pop    ds
  405d99:	fwait
  405d9a:	and    ah,bl
  405d9c:	inc    ebp
  405d9d:	push   0xd03aad81
  405da2:	sub    ebx,DWORD PTR [ebx+0x6b]
  405da5:	mov    bh,al
  405da7:	jnp    0x405d3d
  405da9:	or     BYTE PTR [ebx],ch
  405dab:	xlat   BYTE PTR ds:[ebx]
  405dac:	ret    0x8079
  405daf:	sub    eax,ecx
  405db1:	cwde   
  405db2:	enter  0xe0f3,0xd6
  405db6:	shr    DWORD PTR [eax+0x46],cl
  405db9:	test   DWORD PTR [eax+0x5bb4de8f],eax
  405dbf:	mov    bh,0x75
  405dc1:	mov    edx,0xf19dba46
  405dc6:	or     al,0xfd
  405dc8:	xor    esi,DWORD PTR [eax+0x6f]
  405dcb:	ret    
  405dcc:	or     BYTE PTR [edx],dl
  405dce:	into   
  405dcf:	xor    DWORD PTR [edx+0x69],esp
  405dd2:	or     DWORD PTR [esi],esp
  405dd4:	call   0xf92a8903
  405dd9:	(bad)  
  405ddb:	mov    ds:0x5c8aa8a1,eax
  405de0:	adc    eax,0x7e8ae008
  405de5:	xchg   BYTE PTR [ebp-0x75],dl
  405de8:	mov    ebp,0x8d4a2935
  405ded:	jp     0x405e30
  405def:	add    dl,BYTE PTR [esi]
  405df1:	cli    
  405df2:	call   0x6d66e7cf
  405df7:	mov    esp,0x31e4b16e
  405dfc:	int    0xfa
  405dfe:	dec    eax
  405dff:	adc    ebx,DWORD PTR ds:0x256f1824
  405e05:	(bad)  
  405e08:	cmp    ch,BYTE PTR [ebp+0x62]
  405e0b:	lods   eax,DWORD PTR ds:[esi]
  405e0c:	push   ss
  405e0d:	int    0x56
  405e0f:	push   es
  405e10:	mov    eax,ds:0x58fbe95b
  405e15:	stos   DWORD PTR es:[edi],eax
  405e16:	mov    edx,0x25fa0bf0
  405e1b:	ja     0x405e1e
  405e1d:	loop   0x405dd8
  405e1f:	jp     0x405da7
  405e21:	arpl   WORD PTR [ecx-0x2d43a786],sp
  405e27:	sub    dl,BYTE PTR [ebx]
  405e29:	outs   dx,DWORD PTR ds:[esi]
  405e2a:	pusha  
  405e2b:	xchg   BYTE PTR [edx],ch
  405e2d:	jne    0x405e0b
  405e2f:	fcom   DWORD PTR [ebx]
  405e31:	iret   
  405e32:	call   0xac04:0xf83c51db
  405e39:	adc    al,0xff
  405e3b:	mov    edx,0x617c264e
  405e40:	pop    esi
  405e41:	sub    eax,0xe3089c0
  405e46:	jae    0x405e35
  405e48:	das    
  405e49:	rcr    dh,0x34
  405e4c:	push   ebp
  405e4d:	xor    BYTE PTR ds:0x8d626f9e,0x5f
  405e54:	or     al,0xfe
  405e56:	dec    eax
  405e57:	mov    ch,0x49
  405e59:	sub    eax,0x3a3589cf
  405e5e:	mov    ds:0xb5976110,eax
  405e63:	add    bh,bh
  405e65:	mov    ds:0x3f765be1,eax
  405e6a:	mov    edi,0x265f3574
  405e6f:	out    dx,al
  405e70:	into   
  405e71:	mov    cl,0x67
  405e73:	jmp    0x8cb5:0x9247162b
  405e7a:	xor    DWORD PTR [edi+0x15],esp
  405e7d:	fadd   DWORD PTR ds:0x7accf1f8
  405e83:	ret    0xd891
  405e86:	outs   dx,DWORD PTR ds:[esi]
  405e87:	xor    BYTE PTR [ebx-0x2a],al
  405e8a:	mov    ebp,0x3128c8e4
  405e8f:	xchg   cl,dl
  405e91:	add    DWORD PTR [ecx+0x239c3e4e],ecx
  405e97:	mov    ebp,DWORD PTR [esi+0x0]
  405e9a:	retf   
  405e9b:	sub    edi,0xffffff93
  405e9e:	js     0x405e3c
  405ea0:	or     eax,ebp
  405ea2:	das    
  405ea3:	ds std 
  405ea5:	push   esi
  405ea6:	test   DWORD PTR [ebp-0x6a],edx
  405ea9:	int3   
  405eaa:	xlat   BYTE PTR ds:[ebx]
  405eab:	ins    DWORD PTR es:[edi],dx
  405eac:	ins    DWORD PTR es:[edi],dx
  405ead:	test   DWORD PTR ds:0x99faed44,ecx
  405eb3:	cmc    
  405eb4:	popa   
  405eb5:	icebp  
  405eb6:	push   ebx
  405eb7:	push   eax
  405eb8:	jo     0x405ec0
  405eba:	mov    al,ds:0xdaf9a0a8
  405ebf:	aaa    
  405ec0:	inc    ebp
  405ec1:	(bad)  
  405ec2:	xchg   DWORD PTR [eax-0x6c],ebp
  405ec5:	xor    ch,al
  405ec7:	adc    ecx,DWORD PTR [esi]
  405ec9:	test   eax,0x3b833ae5
  405ece:	in     al,0x64
  405ed0:	(bad)  
  405ed1:	nop
  405ed2:	xchg   edx,eax
  405ed3:	jae    0x405ea4
  405ed5:	ret    
  405ed6:	rcl    DWORD PTR [esi+ecx*4],0x7
  405eda:	pop    esi
  405edb:	test   eax,0x2c4ef6f
  405ee0:	cwde   
  405ee1:	mov    BYTE PTR [ecx],cl
  405ee3:	sub    eax,0x63a3330a
  405ee8:	je     0x405e9e
  405eea:	mov    bh,0x64
  405eec:	loop   0x405e78
  405eee:	idiv   DWORD PTR [ecx+0x70]
  405ef1:	ins    DWORD PTR es:[edi],dx
  405ef2:	jb     0x405e79
  405ef4:	dec    ebx
  405ef5:	and    eax,0xfb5d639f
  405efa:	add    eax,0x382e79bb
  405eff:	fiadd  WORD PTR [esi]
  405f01:	xor    BYTE PTR [edi],bl
  405f03:	pop    ecx
  405f04:	ret    0x933e
  405f07:	adc    DWORD PTR [esi+0x6d3ab308],eax
  405f0d:	shl    ecx,1
  405f0f:	pop    ecx
  405f10:	jae    0x405f5f
  405f12:	inc    eax
  405f13:	cmp    eax,0x6e12ae70
  405f18:	mov    bh,0x80
  405f1a:	xlat   BYTE PTR ds:[ebx]
  405f1b:	call   0xa311192
  405f20:	add    eax,0xf5ad0b45
  405f25:	test   DWORD PTR [ebx-0x2c7cd347],esp
  405f2b:	enter  0x3784,0x0
  405f2f:	push   cs
  405f30:	xchg   esp,eax
  405f31:	or     ah,ah
  405f33:	jg     0x405f15
  405f35:	xchg   ebp,eax
  405f36:	push   eax
  405f37:	shr    BYTE PTR [eax+0xddb28cc],0x45
  405f3e:	lea    eax,[esp+ebp*1+0x4ebb24e4]
  405f45:	fstp   TBYTE PTR [eax]
  405f47:	cmp    al,0xd7
  405f49:	imul   edi,DWORD PTR [edi-0x78712769],0xd91a874f
  405f53:	(bad)  
  405f54:	outs   dx,BYTE PTR ds:[esi]
  405f55:	mov    esi,0x2b445295
  405f5a:	xchg   ebp,eax
  405f5b:	mov    ebx,0xeea30bfa
  405f60:	add    BYTE PTR [eax-0x8],dl
  405f63:	mov    bh,0x9b
  405f65:	lods   al,BYTE PTR ds:[esi]
  405f66:	call   0x92b8:0xfc3c2de0
  405f6d:	sbb    DWORD PTR [esi+0x46f84490],ebp
  405f73:	rol    DWORD PTR [edi],1
  405f75:	mov    WORD PTR [ebp+0x60],fs
  405f78:	out    dx,al
  405f79:	shr    DWORD PTR [ecx+0x73cc7985],cl
  405f7f:	push   ss
  405f80:	neg    DWORD PTR [ecx]
  405f82:	jecxz  0x405fce
  405f84:	je     0x405fde
  405f86:	dec    eax
  405f88:	jmp    0xf1e9:0x93be0562
  405f8f:	repnz pop ss
  405f91:	or     al,0xbd
  405f93:	outs   dx,DWORD PTR ds:[esi]
  405f94:	adc    DWORD PTR [eax],ebp
  405f96:	test   BYTE PTR [esi+0x5b3a7361],al
  405f9c:	xchg   esp,eax
  405f9d:	and    BYTE PTR [ebx],al
  405f9f:	pop    eax
  405fa0:	jne    0x405fdd
  405fa2:	(bad)  
  405fa3:	(bad)  
  405fa4:	imul   BYTE PTR [ebp-0x56]
  405fa7:	xor    WORD PTR [ecx],0x1f
  405fab:	xchg   BYTE PTR [esp+ebp*4+0x7],dh
  405faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb0:	cmp    eax,0x44da0b24
  405fb5:	fdiv   st(2),st
  405fb7:	lods   eax,DWORD PTR ds:[esi]
  405fb8:	pop    edx
  405fb9:	cli    
  405fba:	inc    esi
  405fbb:	inc    ecx
  405fbc:	cmp    esi,DWORD PTR [edi-0x30c94810]
  405fc2:	adc    eax,0x4785b302
  405fc7:	fidivr WORD PTR [ebp+0x13912051]
  405fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fce:	mov    bh,bl
  405fd0:	sbb    eax,0x2e094238
  405fd5:	int    0x81
  405fd7:	retf   
  405fd8:	outs   dx,DWORD PTR ds:[esi]
  405fd9:	loopne 0x405fb9
  405fdb:	and    al,0x43
  405fdd:	mov    bl,0x17
  405fdf:	and    DWORD PTR [ebp+0x5425c949],esp
  405fe5:	nop
  405fe6:	and    eax,0xee888e13
  405feb:	mov    eax,ds:0xaa6e5650
  405ff0:	pop    ebx
  405ff1:	push   esi
  405ff2:	or     al,BYTE PTR [edx+0x3d]
  405ff5:	test   al,0xe5
  405ff7:	sbb    eax,0xec3dad16
  405ffc:	in     eax,0x8e
  405ffe:	cld    
  405fff:	sub    BYTE PTR [ecx+eiz*2-0xa],dh
  406003:	js     0x405f86
  406005:	xchg   edx,eax
  406006:	pop    esi
  406007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406008:	bound  ecx,QWORD PTR [ebx]
  40600a:	push   es
  40600b:	cmp    ebx,DWORD PTR [ecx+0x712a619d]
  406011:	push   edi
  406012:	hlt    
  406013:	ds xor al,0x0
  406016:	jno    0x405fdf
  406018:	mov    ecx,0x37a33e08
  40601d:	inc    edi
  40601e:	dec    edx
  40601f:	enter  0xed7a,0x7a
  406023:	cmp    DWORD PTR [ebp+0x12],esi
  406026:	and    edx,eax
  406028:	cdq    
  406029:	cli    
  40602a:	dec    ecx
  40602b:	mov    cl,dh
  40602d:	mov    WORD PTR [eax],gs
  40602f:	mov    cl,0x38
  406031:	or     eax,0x6c09be4f
  406036:	inc    ecx
  406037:	and    eax,0x6e4d5b00
  40603c:	sbb    ebx,ebp
  40603e:	jp     0x40601a
  406040:	sub    bh,cl
  406042:	jae    0x405ff3
  406044:	jmp    0x40608a
  406046:	mov    ch,0xea
  406048:	fidiv  WORD PTR [edi+0x51]
  40604b:	mov    ch,0xf1
  40604d:	jl     0x406015
  40604f:	mov    esp,0x6e38e246
  406054:	or     eax,0x2da3da47
  406059:	mov    bl,0x65
  40605b:	ja     0x406093
  40605d:	popf   
  40605e:	ror    DWORD PTR [ebp+0x76fd4b27],0x78
  406065:	or     BYTE PTR ds:0x68e2ba5d,cl
  40606b:	adc    al,0x0
  40606d:	push   cs
  40606e:	cdq    
  40606f:	push   cs
  406070:	fwait
  406071:	ret    0x3ebf
  406074:	fld    DWORD PTR [ebp+0xc466e73]
  40607a:	daa    
  40607b:	outs   dx,BYTE PTR ds:[esi]
  40607c:	pop    ds
  40607d:	mov    esp,0xef0303e0
  406082:	hlt    
  406083:	mov    ds:0xf4a5a5e1,al
  406088:	dec    esi
  406089:	pop    edi
  40608a:	pop    esi
  40608b:	sti    
  40608c:	das    
  40608d:	retf   0x229f
  406090:	mov    es,WORD PTR [ebp-0x19]
  406093:	mov    esi,0x9ed834fb
  406098:	xchg   ecx,eax
  406099:	(bad)  
  40609a:	mov    dl,BYTE PTR [eax]
  40609c:	fldenv [esi+eax*8]
  40609f:	fild   WORD PTR [ebp-0x66cabd6f]
  4060a5:	shl    ch,cl
  4060a7:	fsub   QWORD PTR ds:0x9abd8b3c
  4060ad:	jge    0x4060a6
  4060af:	add    al,0xdd
  4060b1:	sub    dh,BYTE PTR ss:[ebx-0x4fa49600]
  4060b8:	das    
  4060b9:	sbb    dh,BYTE PTR [ebx+eax*2]
  4060bc:	jmp    0x406130
  4060be:	nop
  4060bf:	dec    DWORD PTR [edx+0x3eed58b0]
  4060c5:	mov    dl,0xf7
  4060c7:	(bad)  
  4060c8:	fnsave [esi]
  4060ca:	mov    cl,0x21
  4060cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060cd:	inc    eax
  4060ce:	or     BYTE PTR [ebx],dh
  4060d0:	jae    0x40605a
  4060d2:	cmp    bh,BYTE PTR [eax]
  4060d4:	jns    0x406081
  4060d6:	or     DWORD PTR [edi+0x26],ebx
  4060d9:	xchg   edi,eax
  4060da:	ret    0x21a1
  4060dd:	dec    ebp
  4060de:	mov    cl,0xfa
  4060e0:	mov    ecx,edi
  4060e2:	mov    WORD PTR [ebx+ebp*8+0x7593b28d],ss
  4060e9:	adc    eax,0x74921af9
  4060ee:	sub    eax,0x1711354d
  4060f3:	daa    
  4060f4:	adc    eax,0x9038bbe4
  4060f9:	pop    ds
  4060fa:	nop
  4060fb:	inc    ecx
  4060fc:	loop   0x40609a
  4060fe:	cld    
  4060ff:	sti    
  406100:	adc    ah,0xa
  406103:	jecxz  0x4060ba
  406105:	and    eax,0x7112743c
  40610a:	sub    dh,bh
  40610c:	cdq    
  40610d:	mov    WORD PTR [esi+edx*2],gs
  406110:	addr16 mov ecx,0x5fddb811
  406116:	add    ebp,DWORD PTR [edi]
  406118:	xlat   BYTE PTR ds:[ebx]
  406119:	scas   eax,DWORD PTR es:[edi]
  40611a:	fimul  WORD PTR [esi]
  40611c:	mov    ch,0x2f
  40611e:	push   edx
  40611f:	add    DWORD PTR [esi+0x433ba03f],ebp
  406125:	add    eax,0x7d823bbf
  40612a:	arpl   cx,bp
  40612c:	test   al,0x57
  40612e:	mov    ah,0xe4
  406130:	(bad)  
  406131:	dec    esp
  406132:	pop    ecx
  406133:	sbb    eax,DWORD PTR [ebx+ecx*2]
  406136:	in     al,dx
  406137:	and    ecx,DWORD PTR [ecx]
  406139:	push   ds
  40613a:	nop
  40613b:	sti    
  40613c:	and    eax,DWORD PTR [edx-0x3e]
  40613f:	ins    BYTE PTR es:[edi],dx
  406140:	push   es
  406141:	fstp   QWORD PTR [eax]
  406143:	adc    ebx,esp
  406145:	and    edi,DWORD PTR [eax+0x265d82d]
  40614b:	retf   0xaa17
  40614e:	shl    edi,1
  406150:	xbegin 0x224351a6
  406156:	in     al,0x84
  406158:	test   eax,0x95fa8bcb
  40615d:	or     ebx,DWORD PTR [ecx]
  40615f:	aam    0xec
  406161:	aad    0x52
  406163:	addr16 cmp dh,bh
  406166:	and    BYTE PTR [edi+0x2bce1f44],al
  40616c:	xlat   BYTE PTR ds:[ebx]
  40616d:	jp     0x4060f6
  40616f:	and    DWORD PTR [edi+0x6a12029d],0x36
  406176:	lock jo 0x40614f
  406179:	mov    esp,0xd109d244
  40617e:	int3   
  40617f:	idiv   DWORD PTR [ebp-0x69]
  406182:	inc    ecx
  406183:	push   ebx
  406184:	clc    
  406185:	push   esp
  406186:	mov    DWORD PTR ds:0xe564d57b,edx
  40618c:	shl    BYTE PTR [edi+0x3b],cl
  40618f:	adc    DWORD PTR [eax+0x23],ebp
  406192:	lods   al,BYTE PTR ds:[esi]
  406193:	xor    al,0x25
  406195:	pop    ds
  406196:	xchg   ebp,eax
  406197:	stos   BYTE PTR es:[edi],al
  406198:	das    
  406199:	add    eax,DWORD PTR [eax-0x60]
  40619c:	adc    BYTE PTR [esi+0xf],dh
  40619f:	jbe    0x406184
  4061a1:	jb     0x40621e
  4061a3:	pop    esi
  4061a4:	add    bl,BYTE PTR [ebx+0x2f]
  4061a7:	and    al,0xe5
  4061a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061aa:	scas   al,BYTE PTR es:[edi]
  4061ab:	in     al,0x1e
  4061ad:	inc    ebp
  4061ae:	xor    al,0x8b
  4061b0:	xchg   esp,eax
  4061b1:	rcr    ch,0x5f
  4061b4:	and    al,0x5c
  4061b6:	xlat   BYTE PTR ds:[ebx]
  4061b7:	leave  
  4061b8:	gs into 
  4061ba:	in     eax,0x8d
  4061bc:	lahf   
  4061bd:	aas    
  4061be:	in     eax,dx
  4061bf:	and    BYTE PTR [eax+0x1d],bl
  4061c2:	mov    fs,WORD PTR [edi-0x74]
  4061c5:	jb     0x4061ad
  4061c7:	cmp    cl,dl
  4061c9:	dec    ebx
  4061ca:	pop    edi
  4061cb:	mov    bh,0xc3
  4061cd:	lock push ds
  4061cf:	sbb    eax,0xd15612e
  4061d4:	aam    0x1b
  4061d6:	jb     0x406253
  4061d8:	sub    edi,eax
  4061da:	cmc    
  4061db:	inc    esi
  4061dc:	ss jnp 0x40621d
  4061df:	and    eax,0x446b944a
  4061e4:	nop
  4061e5:	call   0x2dab:0x58a1fa73
  4061ec:	inc    ebp
  4061ed:	das    
  4061ee:	shl    DWORD PTR [ecx-0x66ce9b2d],cl
  4061f4:	xor    eax,0x9350bb1a
  4061f9:	or     ebp,ebx
  4061fb:	sub    eax,DWORD PTR [eax-0x4b]
  4061fe:	pushf  
  4061ff:	sbb    eax,0xa1330576
  406204:	enter  0x4ed3,0x29
  406208:	sub    eax,0xa3766961
  40620d:	iret   
  40620e:	nop
  40620f:	mov    bl,0xa9
  406211:	xchg   ecx,eax
  406212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406213:	inc    ebp
  406214:	mov    bl,0x60
  406216:	xchg   DWORD PTR es:[ecx-0x1d],ebp
  40621a:	push   ecx
  40621b:	xchg   ecx,eax
  40621c:	sbb    BYTE PTR [edi+0x76],dl
  40621f:	sub    eax,0x92551eef
  406224:	jmp    FWORD PTR [ebp+0x20]
  406227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406228:	out    0xdb,al
  40622a:	push   ecx
  40622b:	gs push ss
  40622d:	test   DWORD PTR [edi],edi
  40622f:	mov    DWORD PTR [edi-0x5f2f9955],edi
  406235:	aad    0x73
  406237:	pusha  
  406238:	popa   
  406239:	cli    
  40623a:	mov    edx,0x5ffa7621
  40623f:	stc    
  406240:	mov    eax,0xb7140b9c
  406245:	(bad)  [ecx+0x72]
  406248:	(bad)  
  406249:	mov    ch,cl
  40624b:	imul   edx,DWORD PTR [ebx+0x2634307b],0xcaa96ab4
  406255:	adc    eax,0x168f2089
  40625a:	push   ss
  40625b:	mov    al,0x58
  40625d:	out    0x21,al
  40625f:	sub    BYTE PTR [edx],bh
  406261:	cmp    ecx,esi
  406263:	xor    ebp,DWORD PTR [ebx-0x6f88d2ce]
  406269:	stos   DWORD PTR es:[edi],eax
  40626a:	push   esi
  40626b:	mov    eax,ds:0x35c07e8f
  406270:	sbb    ecx,DWORD PTR ds:0xf2a91bc0
  406276:	mov    ds:0xe67dd8a4,al
  40627b:	out    0x34,al
  40627d:	lock mov eax,ds:0xae98b374
  406283:	dec    edi
  406284:	mov    ds:0xb7b2484b,al
  406289:	das    
  40628a:	ret    0xeb3
  40628d:	xor    BYTE PTR [ecx-0x37],dl
  406290:	and    edi,DWORD PTR ds:0x9242df68
  406296:	jp     0x406287
  406298:	cmp    BYTE PTR [ebp+0x11],al
  40629b:	mov    bh,0xcd
  40629d:	(bad)  
  40629e:	or     eax,0x5ca84109
  4062a3:	sub    ecx,DWORD PTR [ebx+0x1c8127ee]
  4062a9:	jns    0x406275
  4062ab:	mov    ds,WORD PTR [edi+0x36b6d59]
  4062b1:	call   0x61ead471
  4062b6:	or     edi,DWORD PTR [esi]
  4062b8:	xchg   ecx,eax
  4062b9:	sub    cl,BYTE PTR [edx+eax*2+0x7a]
  4062bd:	add    edx,DWORD PTR [ecx]
  4062bf:	adc    BYTE PTR [esi],bh
  4062c1:	leave  
  4062c2:	jle    0x406323
  4062c4:	mov    edi,0x7e8ccc07
  4062c9:	sub    ecx,DWORD PTR [ecx]
  4062cb:	and    al,0x79
  4062cd:	xchg   ecx,eax
  4062ce:	test   ecx,eax
  4062d0:	jns    0x4062cb
  4062d2:	pop    ebp
  4062d3:	pop    esi
  4062d4:	dec    ebx
  4062d5:	pop    ebp
  4062d6:	and    al,0x7a
  4062d8:	mov    DWORD PTR [edx-0x5b1bc19c],esi
  4062de:	repnz (bad) [edx]
  4062e1:	retf   
  4062e2:	aas    
  4062e3:	push   es
  4062e4:	hlt    
  4062e5:	mov    al,ds:0xdfe8021
  4062ea:	dec    ebx
  4062eb:	mov    al,ds:0x4b404f8c
  4062f0:	push   edi
  4062f1:	xor    eax,0x4386fbaf
  4062f6:	js     0x406341
  4062f8:	add    eax,0x13abf034
  4062fd:	outs   dx,BYTE PTR ds:[esi]
  4062fe:	and    al,0x10
  406300:	or     DWORD PTR gs:[edi+0xe],edx
  406304:	test   DWORD PTR [ecx],esp
  406306:	outs   dx,BYTE PTR ds:[esi]
  406307:	jae    0x406314
  406309:	mov    eax,ds:0x8c7dc7c9
  40630e:	cmp    eax,0xd1e40af8
  406313:	shl    DWORD PTR [esi],cl
  406315:	ss call 0x8a4e:0xfd5d56d0
  40631d:	xchg   ebp,eax
  40631e:	sar    esp,1
  406320:	push   ds
  406321:	mov    cl,0xb3
  406323:	mov    dl,0xe9
  406325:	scas   al,BYTE PTR es:[edi]
  406326:	sub    DWORD PTR [ebp+0x2d],edx
  406329:	popf   
  40632a:	hlt    
  40632b:	cmp    eax,DWORD PTR [ecx]
  40632d:	loop   0x4062cf
  40632f:	sbb    eax,0x4f7b6f1e
  406334:	cld    
  406335:	lock pushf 
  406337:	add    eax,0x2d963f68
  40633c:	pop    edi
  40633d:	(bad)  
  40633e:	xor    al,0x4b
  406340:	cmc    
  406341:	dec    edi
  406342:	dec    ecx
  406343:	adc    cl,ch
  406345:	pop    edx
  406346:	jns    0x4062eb
  406348:	push   ss
  406349:	sar    DWORD PTR [esi-0x683a9f97],cl
  40634f:	push   esp
  406350:	cmc    
  406351:	fcom   QWORD PTR [edi-0x76]
  406354:	xchg   edi,eax
  406355:	int3   
  406356:	jnp    0x406354
  406358:	pop    edx
  406359:	sub    al,0x58
  40635b:	xor    ebx,DWORD PTR [ebx]
  40635d:	test   DWORD PTR [ebx+0xe39ce5],ecx
  406363:	(bad)  
  406364:	ins    BYTE PTR es:[edi],dx
  406365:	daa    
  406366:	mov    eax,ds:0x4517c6c8
  40636b:	push   0x25
  40636d:	test   eax,0xb86d73b5
  406372:	xchg   edi,eax
  406373:	jl     0x4063b2
  406375:	cwde   
  406376:	adc    DWORD PTR [eax],ebx
  406378:	inc    ebx
  406379:	push   edx
  40637a:	mov    dl,BYTE PTR ds:[esp+ebx*2+0x3a60e9f2]
  406382:	call   0x6f77:0x3ac3a5f9
  406389:	push   eax
  40638a:	data16 sbb BYTE PTR [ecx+0x51],dh
  40638e:	int    0xa1
  406390:	jns    0x4063a3
  406392:	sbb    esp,0xffffff80
  406395:	mov    ecx,0xc210caa5
  40639a:	adc    al,BYTE PTR [ebx+eiz*8-0x36ab4a76]
  4063a1:	ret    0x2e7d
  4063a4:	aam    0x5c
  4063a6:	and    cl,dl
  4063a8:	push   cs
  4063a9:	jge    0x406382
  4063ab:	pop    esp
  4063ac:	xor    DWORD PTR [esi],ebx
  4063ae:	add    BYTE PTR [eax-0x4d],bl
  4063b1:	pop    eax
  4063b2:	mov    WORD PTR [esi+0x6c444e25],sp
  4063b9:	or     dh,BYTE PTR [esp+ecx*1]
  4063bc:	stos   DWORD PTR es:[edi],eax
  4063bd:	adc    bl,BYTE PTR [edi+eiz*2-0x55]
  4063c1:	push   0x8c548115
  4063c6:	adc    dl,BYTE PTR [esi+0x19]
  4063c9:	bound  edi,QWORD PTR [eax-0x56]
  4063cc:	js     0x4063a2
  4063ce:	(bad)  
  4063cf:	bound  ebx,QWORD PTR [ebp-0x26]
  4063d2:	stos   BYTE PTR es:[edi],al
  4063d3:	retf   0xb6f2
  4063d6:	xor    al,0x46
  4063d8:	call   0x64f9:0x177ed3a4
  4063df:	scas   eax,DWORD PTR es:[edi]
  4063e0:	test   BYTE PTR [ebx],bl
  4063e2:	xor    BYTE PTR [esi-0x2844496f],bl
  4063e8:	dec    edi
  4063e9:	dec    esp
  4063ea:	push   esi
  4063eb:	jne    0x406442
  4063ed:	fs out 0x41,eax
  4063f0:	mov    fs,WORD PTR [esi]
  4063f2:	repnz pop edx
  4063f4:	cs nop
  4063f6:	sub    BYTE PTR [ecx+0x6d],dh
  4063f9:	xchg   ecx,eax
  4063fa:	ds mov dl,0x1d
  4063fd:	sti    
  4063fe:	test   DWORD PTR [ebp+0x7e578ae1],esp
  406404:	fmul   QWORD PTR [edx+0x6a208c9b]
  40640a:	sub    bh,BYTE PTR [ecx-0x273e97de]
  406410:	dec    ebx
  406411:	jmp    0xcf469070
  406416:	jge    0x4063ef
  406418:	and    edi,eax
  40641a:	mov    BYTE PTR [eax+edi*4-0x5],cl
  40641e:	inc    esp
  40641f:	jmp    DWORD PTR [eax]
  406421:	push   ebx
  406422:	retf   0x4f13
  406425:	fwait
  406426:	test   eax,0xc7b0c0ad
  40642b:	aas    
  40642c:	jmp    0x50c41136
  406431:	mov    ds,WORD PTR [ebx-0x1c]
  406434:	mov    ds:0xc2cc5e6f,al
  406439:	push   ebp
  40643a:	mov    BYTE PTR [edx],ch
  40643c:	outs   dx,DWORD PTR ds:[esi]
  40643d:	into   
  40643e:	push   ebp
  40643f:	loop   0x40648f
  406441:	xchg   BYTE PTR [edi-0x6f],bl
  406444:	xchg   esi,eax
  406445:	push   0xffffff82
  406447:	addr16 aam 0x68
  40644a:	(bad)  
  40644b:	ja     0x406438
  40644d:	sbb    eax,edi
  40644f:	inc    esp
  406450:	sahf   
  406451:	neg    BYTE PTR [edx-0x41]
  406454:	cmp    eax,0x5f2406fd
  406459:	sub    DWORD PTR [esp+ebp*1+0x54],ebx
  40645d:	sbb    eax,0x1d89dee0
  406462:	rol    DWORD PTR [edi+0x1dc2f015],cl
  406468:	or     BYTE PTR [ebx+0x75],cl
  40646b:	mov    esi,0x2e689b2a
  406470:	mov    al,ds:0x7373d9ce
  406475:	ds sbb eax,0xa5cb6da5
  40647b:	dec    ebp
  40647c:	push   ebx
  40647d:	test   DWORD PTR [esi],edx
  40647f:	add    eax,0x9a031b0c
  406484:	popa   
  406485:	or     BYTE PTR [edx+0x25],ah
  406488:	fsub   DWORD PTR [ecx]
  40648a:	adc    al,0x1b
  40648c:	sar    BYTE PTR [edx-0x1a],0x4a
  406490:	and    al,0x90
  406492:	dec    ebp
  406493:	jno    0x406438
  406495:	add    esp,esp
  406497:	fstenv [esi+eiz*4+0x5d]
  40649c:	(bad)  
  40649d:	jbe    0x4064e0
  40649f:	sbb    bl,0xe3
  4064a2:	fmul   st,st(6)
  4064a4:	lods   al,BYTE PTR ds:[esi]
  4064a5:	xchg   ecx,eax
  4064a6:	adc    al,BYTE PTR [eax+0x6beb1404]
  4064ac:	popa   
  4064ad:	mov    esp,0xaef75a26
  4064b2:	xchg   ecx,eax
  4064b3:	adc    ah,cl
  4064b5:	clc    
  4064b6:	(bad)  
  4064b7:	jo     0x4064e5
  4064b9:	and    dh,BYTE PTR [esi]
  4064bb:	sahf   
  4064bc:	stc    
  4064bd:	test   al,0x94
  4064bf:	adc    al,0x28
  4064c1:	fiadd  WORD PTR [edi-0x4e]
  4064c4:	dec    edx
  4064c5:	dec    ecx
  4064c6:	mov    WORD PTR [edx+0x177a4cb3],gs
  4064cc:	mov    ecx,DWORD PTR [edx-0x6a]
  4064cf:	push   0x21
  4064d1:	or     eax,0xf295e850
  4064d6:	sub    dl,BYTE PTR [esi+0x5200bc96]
  4064dc:	mov    eax,0x7b5dc7
  4064e1:	mov    bh,0x18
  4064e3:	mov    ecx,0x1bc4f419
  4064e8:	test   eax,ebp
  4064ea:	das    
  4064eb:	scas   al,BYTE PTR es:[edi]
  4064ec:	fbstp  TBYTE PTR [ebx]
  4064ee:	fucomip st,st(6)
  4064f0:	push   es
  4064f1:	aam    0xff
  4064f3:	dec    eax
  4064f4:	hlt    
  4064f5:	xor    eax,0xad14f38
  4064fa:	fidivr DWORD PTR [eax-0x7c]
  4064fd:	mov    BYTE PTR [edx+0x1b],ah
  406500:	daa    
  406501:	call   0xe9fc5bbc
  406506:	and    eax,0xd2bfb60a
  40650b:	xchg   ebx,eax
  40650c:	pop    esi
  40650d:	mov    ebp,0x9789435e
  406512:	retf   
  406513:	out    0x7c,al
  406515:	dec    edi
  406516:	cwde   
  406517:	jns    0x40655c
  406519:	scas   al,BYTE PTR es:[edi]
  40651a:	mov    bl,0x28
  40651c:	xchg   esp,eax
  40651d:	fdiv   QWORD PTR [esi+eax*4-0x4170cb3b]
  406524:	cmp    al,BYTE PTR [edi-0xbf43ade]
  40652a:	jae    0x406503
  40652c:	leave  
  40652d:	rep ins DWORD PTR es:[edi],dx
  40652f:	jge    0x4064eb
  406531:	int    0xdb
  406533:	int    0xd8
  406535:	and    esp,DWORD PTR [eax+0x128bdc5b]
  40653b:	mov    dl,0xf8
  40653d:	icebp  
  40653e:	lods   al,BYTE PTR ds:[esi]
  40653f:	std    
  406540:	mov    BYTE PTR [edx],bl
  406542:	call   0x35cf:0x163dbce8
  406549:	jbe    0x406512
  40654b:	es cmp ebp,ebx
  40654e:	mov    al,0xd
  406550:	stos   DWORD PTR es:[edi],eax
  406551:	add    DWORD PTR [edi-0x41a0cb80],0xffffffce
  406558:	xchg   bl,bh
  40655a:	mov    bh,0x75
  40655c:	mov    eax,0xa572ac62
  406561:	test   eax,0xdcadc23
  406566:	cli    
  406567:	push   ecx
  406568:	mov    bl,0xe1
  40656a:	push   0xffffffe0
  40656c:	or     edx,ecx
  40656e:	xchg   ebp,eax
  40656f:	popf   
  406570:	sbb    edi,DWORD PTR [ebp-0x3b3246bb]
  406576:	scas   eax,DWORD PTR es:[edi]
  406577:	mov    bl,0xed
  406579:	imul   DWORD PTR [ebp+0xa]
  40657c:	xchg   eax,esi
  40657e:	ret    
  40657f:	(bad)  
  406580:	xor    dl,BYTE PTR [ecx+0x57]
  406583:	fiadd  WORD PTR [ecx-0x22]
  406586:	mov    dl,0x33
  406588:	retf   
  406589:	test   BYTE PTR ds:0x6f6c33ad,ch
  40658f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406590:	xchg   ebp,eax
  406591:	dec    ecx
  406592:	jge    0x406586
  406594:	mov    WORD PTR [ecx+0x1d],ss
  406597:	(bad)  
  406598:	ror    DWORD PTR [ebx-0x45],cl
  40659b:	iret   
  40659c:	hlt    
  40659d:	call   0x6490c117
  4065a2:	jb     0x406599
  4065a4:	ret    0x7cc2
  4065a7:	call   0x66401800
  4065ac:	dec    eax
  4065ad:	and    edx,DWORD PTR [edx-0x6642925]
  4065b3:	int    0xb2
  4065b5:	fsub   QWORD PTR [ebx-0x36]
  4065b8:	fiadd  DWORD PTR [edi+0x47]
  4065bb:	and    ebx,DWORD PTR [edi-0x6c]
  4065be:	mov    edx,0x3e74349d
  4065c3:	xchg   ebp,eax
  4065c4:	jle    0x40661c
  4065c6:	dec    esp
  4065c7:	in     al,0xf1
  4065c9:	cs (bad) 
  4065cb:	xchg   ebp,eax
  4065cc:	push   0xffffffaa
  4065ce:	sahf   
  4065cf:	dec    esp
  4065d0:	xlat   BYTE PTR ds:[ebx]
  4065d1:	fs adc al,0x99
  4065d4:	pop    ds
  4065d5:	test   BYTE PTR ds:[ebx+0x3c7f39e9],cl
  4065dc:	pop    ebp
  4065dd:	dec    edi
  4065de:	or     BYTE PTR [edx-0x1d],0x58
  4065e2:	or     al,cl
  4065e4:	push   esp
  4065e5:	lahf   
  4065e6:	ins    BYTE PTR es:[edi],dx
  4065e7:	xlat   BYTE PTR ds:[ebx]
  4065e8:	test   al,0x3b
  4065ea:	push   edi
  4065eb:	add    BYTE PTR [ecx-0x2e],ah
  4065ee:	mov    ecx,0x90f48e40
  4065f3:	ja     0x406597
  4065f5:	dec    eax
  4065f6:	call   DWORD PTR [eax+0x39784da8]
  4065fc:	sbb    edx,ebp
  4065fe:	add    al,0xfe
  406600:	fistp  DWORD PTR [edi-0x1cfa1c]
  406606:	loope  0x4065f7
  406608:	add    al,0xf5
  40660a:	jo     0x40659c
  40660c:	mov    dl,0x13
  40660e:	leave  
  40660f:	in     eax,dx
  406610:	xchg   ebx,eax
  406611:	outs   dx,DWORD PTR ds:[esi]
  406612:	in     al,0x3c
  406614:	xor    al,BYTE PTR [ecx-0x2d46819d]
  40661a:	xchg   ebx,eax
  40661b:	inc    edi
  40661c:	dec    edx
  40661d:	xchg   edi,eax
  40661e:	shl    BYTE PTR [ecx+edx*1-0x14369615],1
  406625:	cwde   
  406626:	xchg   esp,eax
  406627:	sar    DWORD PTR [edi],0x9c
  40662a:	dec    DWORD PTR gs:[ecx+0x16]
  40662e:	pop    ecx
  40662f:	push   edx
  406630:	jecxz  0x406691
  406632:	cmp    ebx,ecx
  406634:	lea    eax,[eax+edi*2]
  406637:	cmc    
  406638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406639:	sbb    al,0x56
  40663b:	outs   dx,DWORD PTR ds:[esi]
  40663c:	add    BYTE PTR [eax],bh
  40663e:	dec    edi
  40663f:	rol    BYTE PTR ds:0x87709ffd,1
  406645:	shl    ch,0xd8
  406648:	push   eax
  406649:	jne    0x4065d4
  40664b:	cwde   
  40664c:	mov    ch,0x90
  40664e:	inc    edi
  40664f:	push   0xffffffa1
  406651:	addr16 xchg edx,eax
  406653:	imul   esp,DWORD PTR [edx],0x5a
  406656:	out    0x2a,al
  406658:	pop    ecx
  406659:	adc    al,0xad
  40665b:	and    al,0xf0
  40665d:	pop    ds
  40665e:	adc    ecx,DWORD PTR [eax]
  406660:	adc    al,0x83
  406662:	xchg   edi,eax
  406663:	fidiv  WORD PTR [edx+0x50]
  406666:	add    ah,cl
  406668:	div    ebx
  40666a:	mov    esi,0x43ac7f5c
  40666f:	jb     0x4066e5
  406671:	nop
  406672:	(bad)  
  406673:	mov    edi,0xed60d5dd
  406678:	out    0x79,al
  40667a:	(bad)  
  40667b:	shr    esp,1
  40667d:	bound  eax,QWORD PTR [eax+0x64d38840]
  406683:	pop    ss
  406684:	jb     0x4066bc
  406686:	inc    ebp
  406687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406688:	and    al,0xec
  40668a:	out    dx,al
  40668b:	loope  0x4066e6
  40668d:	sbb    eax,0x88e77d67
  406692:	les    ecx,FWORD PTR [edi+0x2f]
  406695:	shr    DWORD PTR [ebx],1
  406697:	in     al,0x53
  406699:	jl     0x40671a
  40669b:	mov    ecx,DWORD PTR [ebx-0x4c]
  40669e:	jecxz  0x4066ed
  4066a0:	retf   
  4066a1:	aaa    
  4066a2:	ret    0x8b63
  4066a5:	ins    DWORD PTR es:[edi],dx
  4066a6:	ins    BYTE PTR es:[edi],dx
  4066a7:	shl    BYTE PTR [ebp-0x73f67b9f],cl
  4066ad:	mov    edi,0x322405fc
  4066b2:	or     eax,DWORD PTR [edi+0x33736caa]
  4066b8:	popf   
  4066b9:	loope  0x406713
  4066bb:	pop    ds
  4066bc:	jb     0x4066f3
  4066be:	add    esi,DWORD PTR [esi-0x37]
  4066c1:	loop   0x406738
  4066c3:	imul   edi,DWORD PTR [esi+0xf2eeb21],0xffffff9e
  4066ca:	not    BYTE PTR [esi+0x60eae12f]
  4066d0:	mov    bh,0x81
  4066d2:	popa   
  4066d3:	jmp    0x90a6927c
  4066d8:	fwait
  4066d9:	jge    0x4066fb
  4066db:	xor    ch,BYTE PTR [edi+0x3d]
  4066de:	int    0xc3
  4066e0:	dec    esi
  4066e1:	xchg   esp,eax
  4066e2:	push   esp
  4066e3:	fcomp  QWORD PTR [ebp-0x7d691b1d]
  4066e9:	or     DWORD PTR [eax],ebx
  4066eb:	call   0xead0:0xf308d13f
  4066f2:	jl     0x4066ba
  4066f4:	mov    esi,0x951ea857
  4066f9:	mov    bl,BYTE PTR [esi]
  4066fb:	mov    dl,0x6a
  4066fd:	test   edi,edi
  4066ff:	fdivr  QWORD PTR [ebp-0x27821ba7]
  406705:	dec    ebp
  406706:	daa    
  406707:	adc    al,0x89
  406709:	jb     0x406747
  40670b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40670c:	not    BYTE PTR [esi+0x57]
  40670f:	mov    ds:0x1ef6de34,al
  406714:	(bad)  
  406715:	int3   
  406716:	cmp    ecx,eax
  406718:	pop    esi
  406719:	add    bl,BYTE PTR [eax+0x6929f016]
  40671f:	push   0xfffffff2
  406721:	mov    BYTE PTR [ecx+0x16],bl
  406724:	popf   
  406725:	push   ds
  406726:	jle    0x406781
  406728:	shl    ebp,cl
  40672a:	inc    ecx
  40672b:	xor    al,0xde
  40672d:	in     eax,dx
  40672e:	shr    BYTE PTR [esi-0x28],0xba
  406732:	mov    ds:0x6b917dae,al
  406737:	clc    
  406738:	and    eax,0xea275598
  40673d:	aas    
  40673e:	loopne 0x40676e
  406740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406741:	js     0x4066e7
  406743:	lods   eax,DWORD PTR ds:[esi]
  406744:	inc    eax
  406745:	nop
  406746:	mov    al,ds:0x63e99665
  40674b:	fwait
  40674c:	gs and eax,0xe48fe44e
  406752:	dec    edi
  406753:	inc    eax
  406754:	adc    eax,0x9cf4e5
  406759:	jo     0x4066f2
  40675b:	stos   BYTE PTR es:[edi],al
  40675c:	mov    ds:0xabc6727f,al
  406761:	pushf  
  406762:	(bad)  
  406763:	outs   dx,DWORD PTR ds:[esi]
  406764:	retf   
  406765:	lock jle 0x406796
  406768:	dec    ecx
  406769:	dec    eax
  40676a:	inc    esi
  40676b:	adc    ebp,esi
  40676d:	dec    eax
  40676e:	xor    al,BYTE PTR [ebp+0x12]
  406771:	(bad)  
  406772:	rol    bh,1
  406774:	out    0xb1,eax
  406776:	rcl    BYTE PTR [edi+0xe8c546b],0x22
  40677d:	mov    al,ds:0xbe16c770
  406782:	retf   0xd25f
  406785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406786:	mov    ebx,0xd45c214e
  40678b:	xchg   esp,eax
  40678c:	mov    BYTE PTR [ebp+ebp*8+0x1f784aee],ch
  406793:	out    0x7c,eax
  406795:	out    0xe6,al
  406797:	cld    
  406798:	inc    edx
  406799:	jl     0x406769
  40679b:	and    esi,ecx
  40679d:	daa    
  40679e:	xor    BYTE PTR [eax+0x46e12b5d],bh
  4067a4:	pusha  
  4067a5:	test   al,0x3a
  4067a7:	std    
  4067a8:	add    DWORD PTR [ebx+0x686f25c8],0x0
  4067af:	icebp  
  4067b0:	and    BYTE PTR [ecx+0x55],dh
  4067b3:	div    ebx
  4067b5:	or     eax,0xe713a971
  4067ba:	inc    eax
  4067bb:	mov    ch,0x3a
  4067bd:	jno    0x40682b
  4067bf:	pop    ds
  4067c0:	add    al,0xca
  4067c2:	dec    eax
  4067c3:	xor    BYTE PTR [ecx+edx*8+0x7d],ch
  4067c7:	xor    al,al
  4067c9:	test   DWORD PTR [edx],esp
  4067cb:	fcomp  DWORD PTR [esi-0x2b89efaf]
  4067d1:	pusha  
  4067d2:	nop
  4067d3:	jecxz  0x406827
  4067d5:	retf   0x3325
  4067d8:	pop    ecx
  4067d9:	jmp    DWORD PTR [edx-0x41d9dc26]
  4067df:	rcr    cl,cl
  4067e1:	jle    0x4067b5
  4067e3:	les    edi,FWORD PTR [ebp+0x63d93c3e]
  4067e9:	add    BYTE PTR [esi-0x19],0x86
  4067ed:	jne    0x406842
  4067ef:	ins    DWORD PTR es:[edi],dx
  4067f0:	je     0x406789
  4067f2:	mov    bh,0xbc
  4067f4:	inc    DWORD PTR [edx+0x1aecebee]
  4067fa:	dec    esp
  4067fb:	sbb    al,0x49
  4067fd:	adc    eax,0x80fbe771
  406802:	xlat   BYTE PTR ds:[ebx]
  406803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406804:	mov    dl,0x66
  406806:	dec    edx
  406807:	addr16 mov edx,ds
  40680a:	lock push edx
  40680c:	popa   
  40680d:	push   ebx
  40680e:	aad    0x5c
  406810:	push   ecx
  406811:	enter  0x37f0,0x2b
  406815:	push   ss
  406816:	or     edi,DWORD PTR [ecx]
  406818:	add    eax,0xaad6d0c5
  40681d:	popf   
  40681e:	cld    
  40681f:	aas    
  406820:	mov    edx,0x55d8adaa
  406825:	cld    
  406826:	adc    dh,dh
  406828:	cmc    
  406829:	push   es
  40682a:	pop    esi
  40682b:	sti    
  40682c:	add    al,0xfd
  40682e:	mov    ch,0xf9
  406830:	shl    DWORD PTR [ecx-0x54],1
  406833:	in     al,0xb8
  406835:	ds inc ebx
  406837:	adc    dl,bl
  406839:	sub    cl,bh
  40683b:	scas   eax,DWORD PTR es:[edi]
  40683c:	or     ebx,ebp
  40683e:	push   0x27
  406840:	xchg   esp,eax
  406841:	push   0x41
  406843:	inc    edi
  406844:	push   ds
  406845:	push   eax
  406846:	shld   DWORD PTR [edx],edi,cl
  406849:	pop    ebp
  40684a:	cwde   
  40684b:	loope  0x4067e4
  40684d:	nop
  40684e:	dec    ebp
  40684f:	sub    edx,DWORD PTR [ecx-0x4128d6b7]
  406855:	push   ss
  406856:	out    dx,eax
  406857:	jo     0x406865
  406859:	add    dl,BYTE PTR [ecx+0x5027b643]
  40685f:	mov    ah,0xb1
  406861:	ja     0x4068a8
  406863:	xchg   edi,eax
  406864:	push   esp
  406865:	adc    al,0xe3
  406867:	outs   dx,BYTE PTR ds:[esi]
  406868:	shr    BYTE PTR [esp+edi*2-0x73],cl
  40686c:	cmp    DWORD PTR [edi],ebp
  40686e:	das    
  40686f:	cdq    
  406870:	push   ebx
  406871:	call   0x3e74c346
  406876:	nop
  406877:	push   esp
  406878:	pop    esp
  406879:	mov    esi,fs
  40687b:	sub    eax,0xec95d68a
  406880:	inc    esp
  406881:	test   eax,0xdc6a229f
  406886:	add    eax,0x44dbd505
  40688b:	add    al,0xe4
  40688d:	addr16 (bad) 
  40688f:	shl    BYTE PTR [edx-0x5994251e],1
  406895:	dec    ebp
  406896:	lock mov dl,0xb6
  406899:	mov    ss,WORD PTR [ecx+0x19]
  40689c:	lods   al,BYTE PTR ds:[esi]
  40689d:	and    eax,0xc82dd940
  4068a2:	mov    ebx,ebx
  4068a4:	add    eax,0x8f394efd
  4068a9:	stos   BYTE PTR es:[edi],al
  4068aa:	shl    BYTE PTR [ebp-0x314a1657],cl
  4068b0:	sub    esi,DWORD PTR ds:0xc292ce7c
  4068b6:	dec    esi
  4068b7:	in     eax,dx
  4068b8:	inc    edi
  4068b9:	or     edi,DWORD PTR [eax]
  4068bb:	popf   
  4068bc:	cmp    DWORD PTR [esi-0x4d],ebp
  4068bf:	adc    esi,ecx
  4068c1:	mov    eax,ds:0x71f55cd9
  4068c6:	fs jle 0x4068c8
  4068c9:	cwde   
  4068ca:	jae    0x4068f2
  4068cc:	cmp    DWORD PTR [ebx],esi
  4068ce:	inc    ebp
  4068cf:	xchg   ebp,eax
  4068d0:	xor    eax,0xdb5bd7d1
  4068d5:	data16 mov cl,bl
  4068d8:	cmp    BYTE PTR [edi+0x77],ah
  4068db:	call   0xe220:0x384f7179
  4068e2:	pop    ebp
  4068e3:	jl     0x4068bf
  4068e5:	les    eax,FWORD PTR ds:[esi+0x5a]
  4068e9:	sub    al,0x5b
  4068eb:	aas    
  4068ec:	push   0xf64fbc64
  4068f1:	mov    ds:0xa2bf6505,eax
  4068f6:	add    eax,0x147cd0c4
  4068fb:	fdivr  st(6),st
  4068fd:	or     edx,esp
  4068ff:	xor    eax,0x5168286c
  406904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406905:	xchg   ah,al
  406907:	push   ecx
  406909:	cmp    eax,0xe38911ab
  40690e:	in     eax,dx
  40690f:	pusha  
  406910:	jg     0x4068b6
  406912:	mov    cl,0x7f
  406915:	arpl   bx,bx
  406917:	(bad)  
  406918:	in     al,dx
  406919:	into   
  40691a:	sbb    dl,BYTE PTR [edx]
  40691c:	dec    ebp
  40691d:	pop    ss
  40691e:	sub    al,0x80
  406920:	nop
  406921:	xor    edx,eax
  406923:	jns    0x4068c2
  406925:	lahf   
  406926:	mov    edx,0x4f594fe1
  40692b:	enter  0x10d3,0x74
  40692f:	sub    ebp,DWORD PTR [edi+0x25]
  406932:	(bad)  
  406933:	or     ebp,DWORD PTR [eax]
  406935:	mul    BYTE PTR [ebp+0x20]
  406938:	and    eax,0xd2453808
  40693d:	pop    ebp
  40693e:	push   ds
  40693f:	or     dl,bh
  406941:	push   ds
  406942:	mov    bl,0xb1
  406944:	mov    esp,0xbe55c19d
  406949:	adc    al,0xeb
  40694b:	int3   
  40694c:	leave  
  40694d:	std    
  40694e:	mov    esp,0x98ce4f27
  406953:	pop    ss
  406954:	sti    
  406955:	nop
  406956:	enter  0xfdb4,0xcc
  40695a:	adc    al,0xde
  40695c:	inc    ebp
  40695d:	mov    esp,0xf76f4777
  406962:	adc    DWORD PTR [ecx+0x56],0x4db1072b
  406969:	push   ss
  40696a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696b:	(bad)  
  40696c:	lods   eax,DWORD PTR ds:[esi]
  40696d:	sbb    bl,BYTE PTR ds:0x8708344b
  406973:	push   esp
  406974:	aaa    
  406975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406976:	jecxz  0x406988
  406978:	pop    es
  406979:	(bad)  
  40697a:	pushf  
  40697b:	sbb    DWORD PTR [ebx],ecx
  40697d:	cmc    
  40697e:	fist   DWORD PTR [eax+0x79]
  406981:	and    DWORD PTR [edi+0x79d76d4e],ebx
  406987:	mov    DWORD PTR [ecx-0x2f7ff103],eax
  40698d:	dec    esi
  40698e:	in     eax,dx
  40698f:	mov    BYTE PTR [ebp+0xc],dl
  406992:	test   eax,0x7e2e37c1
  406997:	dec    eax
  406998:	sbb    al,0xcd
  40699a:	mov    ds:0x87972d6c,al
  40699f:	and    BYTE PTR ds:0x8c2c5be,0x75
  4069a6:	mov    bh,0x57
  4069a8:	jp     0x4069cd
  4069aa:	mov    ebx,0x69e544f0
  4069af:	scas   eax,DWORD PTR es:[edi]
  4069b0:	bound  esi,QWORD PTR [ecx]
  4069b2:	lock loop 0x406a17
  4069b5:	push   ss
  4069b6:	adc    al,0x46
  4069b8:	in     eax,0x77
  4069ba:	mov    edx,0xf4e52980
  4069bf:	inc    ebp
  4069c0:	cld    
  4069c1:	jle    0x406a26
  4069c3:	xchg   ebx,eax
  4069c4:	jge    0x4069e5
  4069c6:	or     eax,0xc23ac17a
  4069cb:	and    bl,BYTE PTR [esp+edi*4-0x4b]
  4069cf:	ret    0xcc11
  4069d2:	jge    0x406a0e
  4069d4:	inc    esp
  4069d5:	mov    DWORD PTR ds:0x83fa1aa0,ebp
  4069db:	xchg   edx,eax
  4069dc:	jb     0x4069d3
  4069de:	loope  0x4069f1
  4069e0:	xchg   ecx,eax
  4069e1:	jge    0x4069eb
  4069e3:	add    edx,eax
  4069e5:	push   edi
  4069e6:	jno    0x406a42
  4069e8:	xor    ah,bh
  4069ea:	jmp    FWORD PTR [eax+edi*8+0x1f]
  4069ee:	leave  
  4069ef:	out    0x28,al
  4069f1:	mov    edi,0x6beae0e9
  4069f6:	mov    ah,0x99
  4069f8:	jle    0x406a24
  4069fa:	scas   eax,DWORD PTR es:[edi]
  4069fb:	loop   0x4069ed
  4069fd:	fisttp DWORD PTR [edi]
  4069ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a00:	out    0x6d,al
  406a02:	push   esi
  406a03:	adc    eax,0x2140edeb
  406a08:	in     al,0x20
  406a0a:	adc    DWORD PTR [edx],ebp
  406a0c:	xchg   ecx,eax
  406a0d:	ja     0x4069f1
  406a0f:	jnp    0x406a2d
  406a11:	add    esi,DWORD PTR [ecx]
  406a13:	clc    
  406a14:	fwait
  406a15:	stos   DWORD PTR es:[edi],eax
  406a16:	int    0x8c
  406a18:	dec    esp
  406a19:	fisttp QWORD PTR [esi+0x6a]
  406a1c:	cmp    DWORD PTR ds:0x6bde2ad3,edi
  406a22:	cmp    al,0x7
  406a24:	dec    eax
  406a25:	dec    edi
  406a26:	fsubr  st(1),st
  406a28:	fwait
  406a29:	sub    al,0x48
  406a2b:	(bad)  
  406a2e:	add    BYTE PTR [ebx],cl
  406a30:	ret    
  406a31:	(bad)  
  406a32:	push   esp
  406a33:	push   cs
  406a34:	jns    0x4069cc
  406a36:	adc    ecx,DWORD PTR [edi]
  406a38:	stos   DWORD PTR es:[edi],eax
  406a39:	mov    eax,ebp
  406a3b:	dec    ecx
  406a3c:	shl    BYTE PTR [esi],cl
  406a3e:	jno    0x406a0a
  406a40:	cwde   
  406a41:	inc    ebp
  406a42:	fidivr WORD PTR [esi]
  406a44:	stos   DWORD PTR es:[edi],eax
  406a45:	sub    BYTE PTR fs:[esi+0x42e0b6b2],dh
  406a4c:	popa   
  406a4d:	stc    
  406a4e:	imul   edi,DWORD PTR [ebx+0x68a0019d],0x1bde9998
  406a58:	ret    
  406a59:	jle    0x4069f0
  406a5b:	add    al,ah
  406a5d:	je     0x406a7e
  406a5f:	test   eax,0xb7515481
  406a64:	pop    ebp
  406a65:	fdivr  st(3),st
  406a67:	int    0xfb
  406a69:	cmp    ecx,DWORD PTR [eax-0x55e5990a]
  406a6f:	inc    ebp
  406a70:	add    eax,0xb077dcae
  406a75:	pop    ss
  406a76:	dec    esp
  406a77:	fs push ebx
  406a79:	mov    ds:0x623714d4,al
  406a7e:	test   eax,0xf82785c
  406a83:	add    DWORD PTR [eax],eax
  406a85:	adc    ebx,DWORD PTR [edx+0x2d]
  406a88:	inc    ecx
  406a89:	(bad)  
  406a8a:	adc    BYTE PTR [esi],bh
  406a8c:	ss aad 0x45
  406a8f:	fs retf 
  406a91:	adc    dl,al
  406a93:	mov    ebx,0x10973b55
  406a98:	aas    
  406a99:	xor    ebx,0x3e
  406a9c:	mov    es,WORD PTR [ecx+eiz*2]
  406a9f:	xor    BYTE PTR [eax+0x74],0x64
  406aa3:	les    esp,FWORD PTR [edi-0x33]
  406aa6:	sub    eax,0x2783d7ee
  406aab:	test   eax,0xb2f08ffe
  406ab0:	push   esp
  406ab1:	cmp    dh,al
  406ab3:	lahf   
  406ab4:	push   ebx
  406ab5:	mov    bl,0x3e
  406ab7:	(bad)  
  406ab8:	out    dx,eax
  406ab9:	mov    ebx,DWORD PTR [ebx+0x50aba89]
  406abf:	sub    edi,esi
  406ac1:	cli    
  406ac2:	nop    DWORD PTR [ecx]
  406ac5:	or     BYTE PTR [esi+0x4eaa10dc],dh
  406acb:	int3   
  406acc:	leave  
  406acd:	cli    
  406ace:	xchg   edx,eax
  406acf:	add    al,0xb9
  406ad1:	test   eax,0x682bb1a4
  406ad6:	rcl    DWORD PTR [ebx-0x3],cl
  406ad9:	cmp    eax,0x2fce8162
  406ade:	iret   
  406adf:	push   ds
  406ae0:	jl     0x406a7a
  406ae2:	xchg   edx,eax
  406ae3:	aas    
  406ae4:	bound  esi,QWORD PTR [esp+edi*4]
  406ae7:	(bad)  
  406ae8:	in     eax,dx
  406ae9:	xchg   edi,eax
  406aea:	arpl   sp,sp
  406aec:	mov    al,0x5d
  406aee:	and    dh,BYTE PTR [edi+0x5286199b]
  406af4:	addr16 pop ss
  406af6:	push   cs
  406af7:	fucomi st,st(7)
  406af9:	xchg   BYTE PTR [ecx],bl
  406afb:	mov    BYTE PTR [eax-0x6813617d],ah
  406b01:	cmp    BYTE PTR [edi+0x141055d8],0x3e
  406b08:	mov    edi,0xbbc0cc99
  406b0d:	ret    0x5764
  406b10:	ror    ebx,1
  406b12:	mov    ds:0x4f3457f1,eax
  406b17:	mov    eax,0xeca71213
  406b1c:	jns    0x4b7f9164
  406b22:	stos   DWORD PTR es:[edi],eax
  406b23:	outs   dx,BYTE PTR ds:[esi]
  406b24:	xor    DWORD PTR [ecx+0x3b3a442d],esi
  406b2a:	sub    cl,bl
  406b2c:	fmulp  st(0),st
  406b2e:	mov    ds:0xd088920c,eax
  406b33:	dec    ebp
  406b34:	adc    ebp,DWORD PTR [edi+0x54]
  406b37:	pop    ecx
  406b38:	sbb    DWORD PTR [eax+0x26],0x7e
  406b3c:	xchg   ebx,eax
  406b3d:	pop    esp
  406b3e:	das    
  406b3f:	mov    eax,ds:0xf7fb8d68
  406b44:	mov    bl,0x1d
  406b46:	mov    esp,0x2abdc5bb
  406b4b:	mov    esp,0x2afbe062
  406b50:	mov    al,0x45
  406b52:	call   0x4433bd85
  406b57:	fnstsw WORD PTR cs:[edx-0x4f]
  406b5b:	pop    ds
  406b5c:	xor    BYTE PTR [ebx],bl
  406b5e:	mov    esp,0x36d0726a
  406b63:	push   edi
  406b64:	add    eax,0x86a36ae2
  406b69:	inc    edx
  406b6a:	jae    0x406b3a
  406b6c:	pop    ss
  406b6d:	xchg   BYTE PTR [eax],ch
  406b6f:	push   edx
  406b70:	repz test al,0xb4
  406b73:	js     0x406be4
  406b75:	jmp    0xfe9bf193
  406b7a:	imul   edi,DWORD PTR [eax-0x32],0x6d4ea780
  406b81:	inc    ebx
  406b82:	cmp    al,0x2c
  406b84:	inc    eax
  406b85:	mov    esi,0x32615e83
  406b8a:	xor    al,0x68
  406b8c:	or     BYTE PTR [eax-0x665ad096],ch
  406b92:	and    al,BYTE PTR [ebx]
  406b94:	test   al,0xec
  406b96:	xor    BYTE PTR [edx-0x150bb05d],dh
  406b9c:	pop    ecx
  406b9d:	neg    BYTE PTR [ebx-0x3b]
  406ba0:	pushf  
  406ba1:	mov    edi,0x5ea21ee
  406ba6:	outs   dx,DWORD PTR ds:[esi]
  406ba7:	nop
  406ba8:	dec    esi
  406ba9:	jp     0x406b3d
  406bab:	out    0x5e,eax
  406bad:	jmp    esi
  406baf:	dec    ecx
  406bb0:	out    dx,al
  406bb1:	dec    esi
  406bb2:	ins    DWORD PTR es:[edi],dx
  406bb3:	fnstenv [edi+0x71]
  406bb6:	pop    ebp
  406bb7:	jbe    0x406b9e
  406bb9:	and    eax,0x2bc5dcc
  406bbe:	js     0x406b61
  406bc0:	adc    DWORD PTR [esi],0x31
  406bc3:	stos   BYTE PTR es:[edi],al
  406bc4:	icebp  
  406bc5:	jecxz  0x406b57
  406bc7:	fistp  DWORD PTR [ebx+0x2e]
  406bca:	push   ebp
  406bcb:	mov    ah,0x19
  406bcd:	jno    0x406c2e
  406bcf:	xchg   edi,eax
  406bd0:	sahf   
  406bd1:	and    eax,0x3799284f
  406bd6:	xlat   BYTE PTR ds:[ebx]
  406bd7:	fild   QWORD PTR [ecx-0x2b7590e5]
  406bdd:	push   cs
  406bde:	lock iret 
  406be0:	xor    BYTE PTR [ecx-0x797cd444],ch
  406be6:	cli    
  406be7:	push   eax
  406be8:	in     eax,dx
  406be9:	fsubr  QWORD PTR [edx-0x24e92d86]
  406bef:	sub    bh,BYTE PTR [ebx-0x7c07ac8b]
  406bf5:	push   0xe0a642d9
  406bfa:	dec    esp
  406bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfc:	call   0x3319:0x51db320
  406c03:	add    BYTE PTR [edi],cl
  406c05:	stos   DWORD PTR es:[edi],eax
  406c06:	cmp    al,0x3b
  406c08:	push   es
  406c09:	push   es
  406c0a:	sbb    eax,0xbc78ed3c
  406c0f:	inc    ebx
  406c10:	data16 int 0xfc
  406c13:	jp     0x406bc1
  406c15:	pusha  
  406c16:	mov    ebx,0x840dc26f
  406c1b:	mov    WORD PTR [edx],?
  406c1d:	push   eax
  406c1e:	cli    
  406c1f:	ret    0x4563
  406c22:	sub    DWORD PTR [ebx+0x3a],edx
  406c25:	popw   es
  406c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c28:	push   es
  406c29:	or     dh,al
  406c2b:	xchg   esi,eax
  406c2c:	mov    eax,ds:0x54240d90
  406c31:	popf   
  406c32:	adc    BYTE PTR [ecx+0x7cca9c24],dl
  406c38:	test   BYTE PTR [esi+0x4cf0b97f],dl
  406c3e:	mov    dh,0xba
  406c40:	sbb    bh,BYTE PTR [ebx+esi*4+0x39]
  406c44:	cld    
  406c45:	cmc    
  406c46:	push   edx
  406c47:	mov    esp,0xfd1402b4
  406c4c:	push   ebx
  406c4d:	xor    BYTE PTR [edx-0x1464ef9d],bh
  406c53:	out    dx,al
  406c54:	sbb    ah,BYTE PTR [ebx]
  406c56:	jo     0x406bfc
  406c58:	data16 mov ch,BYTE PTR ds:0x61199e5c
  406c5f:	scas   eax,DWORD PTR es:[edi]
  406c60:	stos   BYTE PTR es:[edi],al
  406c61:	and    BYTE PTR [eax+0x39caefd0],al
  406c67:	adc    DWORD PTR [ebp+0x27b070f],eax
  406c6d:	mov    ds:0x4aeba022,eax
  406c72:	cs pop ebp
  406c74:	call   0xcc37e0cf
  406c79:	popa   
  406c7a:	sar    BYTE PTR [ecx],1
  406c7c:	sti    
  406c7d:	or     BYTE PTR [eax-0x7017d4cd],0x0
  406c84:	shl    al,cl
  406c86:	xor    DWORD PTR [ebx],ebx
  406c88:	mov    esi,ecx
  406c8a:	xchg   edi,eax
  406c8b:	jmp    0xa4c3:0xeb696b09
  406c92:	mov    DWORD PTR [ecx-0xc],esp
  406c95:	push   ebx
  406c96:	jl     0x406c5e
  406c98:	ins    BYTE PTR es:[edi],dx
  406c99:	adc    al,0x4
  406c9b:	jle    0x406ceb
  406c9d:	and    ebx,ebp
  406c9f:	xor    bh,BYTE PTR [ecx+eiz*2-0x6dbb1072]
  406ca6:	xchg   BYTE PTR [eax],al
  406ca8:	popa   
  406ca9:	pop    edi
  406caa:	test   esi,0x822234da
  406cb0:	add    BYTE PTR [ebp+0x55cd8f54],0x34
  406cb7:	jb     0x406cce
  406cb9:	aad    0x46
  406cbb:	leave  
  406cbc:	mov    esi,0x5fb9bd0c
  406cc1:	popf   
  406cc2:	adc    edi,DWORD PTR [ecx*8+0x566964a1]
  406cc9:	dec    edi
  406cca:	pop    ebp
  406ccb:	ins    DWORD PTR es:[edi],dx
  406ccc:	add    ebp,DWORD PTR [bp-0x4b1]
  406cd1:	pop    edi
  406cd2:	cs push esi
  406cd4:	adc    cl,BYTE PTR [esi]
  406cd6:	les    edi,FWORD PTR [eax]
  406cd8:	add    bl,BYTE PTR [ecx]
  406cda:	popf   
  406cdb:	xor    ecx,esi
  406cdd:	xchg   esp,eax
  406cde:	lods   al,BYTE PTR ds:[esi]
  406cdf:	call   0xcf29:0x75babd29
  406ce6:	sub    al,0x71
  406ce8:	fist   DWORD PTR [edi]
  406cea:	aaa    
  406ceb:	jecxz  0x406d50
  406ced:	dec    esi
  406cee:	aad    0xf0
  406cf0:	sub    DWORD PTR [eax+eiz*4],ecx
  406cf3:	pop    esp
  406cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf5:	sub    DWORD PTR [eax],0x6b
  406cf8:	mov    ecx,0x49ffd020
  406cfd:	push   ss
  406cfe:	lods   al,BYTE PTR ds:[esi]
  406cff:	dec    edx
  406d00:	jo     0x406d17
  406d02:	xchg   edi,eax
  406d03:	jecxz  0x406d7d
  406d05:	push   edx
  406d06:	int    0xcf
  406d08:	and    eax,0xab41f8a3
  406d0d:	and    edi,0xffffffec
  406d10:	push   ds
  406d11:	out    dx,al
  406d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d13:	int3   
  406d14:	mov    DWORD PTR [ebx],0x40dc0af
  406d1a:	fldcw  WORD PTR [edi+0x3e2cb569]
  406d20:	les    eax,FWORD PTR [esi+0x50]
  406d23:	inc    ecx
  406d24:	retf   0x8409
  406d27:	sub    BYTE PTR [ebp+ebp*4-0x792cae1],ah
  406d2e:	call   0x532c:0xd05a6e64
  406d35:	(bad)  
  406d36:	mov    eax,0x86e2d7e5
  406d3b:	or     DWORD PTR [edx+ecx*1-0x66],edx
  406d3f:	test   DWORD PTR [edi-0xd33c4c5],edi
  406d45:	jbe    0x406cda
  406d47:	xchg   edx,eax
  406d48:	mov    bl,0x3b
  406d4a:	xor    ch,BYTE PTR [esi+0x4459fd28]
  406d50:	add    ecx,DWORD PTR [edi]
  406d52:	pop    esp
  406d53:	(bad)  
  406d54:	or     eax,0xf56939bf
  406d59:	fisub  WORD PTR [eax]
  406d5b:	js     0x406d58
  406d5d:	adc    bh,cl
  406d5f:	sar    DWORD PTR [ebx],cl
  406d61:	imul   esi,DWORD PTR [edx-0x52],0xa15ac83b
  406d68:	pop    ss
  406d69:	mov    esi,0x2069ce0b
  406d6e:	sbb    BYTE PTR gs:[ebx-0x1cb9d497],dl
  406d75:	dec    edx
  406d76:	push   cs
  406d77:	and    BYTE PTR [ecx-0x11],al
  406d7a:	add    al,0xd7
  406d7c:	(bad)  ds:0xc419d793
  406d82:	pop    ss
  406d83:	loop   0x406d86
  406d85:	into   
  406d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d87:	mov    esi,0x6558abb3
  406d8c:	mov    ah,0x9a
  406d8e:	inc    ebp
  406d8f:	add    ch,0x7b
  406d92:	add    esp,0x55
  406d95:	add    eax,0x302cf68
  406d9a:	or     eax,0x69a763a
  406d9f:	fdivrp st(6),st
  406da1:	cmp    edi,0x59
  406da4:	psubw  mm4,mm4
  406da7:	inc    esp
  406da8:	pop    esp
  406da9:	or     dl,BYTE PTR [eax+edx*2+0x29]
  406dad:	mov    edx,0x13687fbe
  406db2:	or     BYTE PTR [esi+0x66],0xd2
  406db6:	jne    0x406d9d
  406db8:	cld    
  406db9:	push   es
  406dba:	loopne 0x406dc5
  406dbc:	mov    ds:0xa05dea17,al
  406dc1:	push   ebx
  406dc2:	xchg   edx,eax
  406dc3:	mov    bl,0xc2
  406dc5:	sbb    edx,edi
  406dc7:	fisubr DWORD PTR [ebx-0x372d6ee9]
  406dcd:	aaa    
  406dce:	mov    cl,0x35
  406dd0:	(bad)
  406dd3:	icebp  
  406dd4:	mov    ebp,0xa6a043cc
  406dd9:	test   BYTE PTR [ebp+0x6f7859d4],cl
  406ddf:	mov    eax,ds:0x20344b4e
  406de4:	xchg   DWORD PTR [eax],eax
  406de6:	adc    ah,bh
  406de8:	cmp    esi,DWORD PTR [edx+0x1e2ec223]
  406dee:	lods   ax,WORD PTR ds:[esi]
  406df0:	shr    BYTE PTR [ecx-0x75],0xa8
  406df4:	add    al,0x4e
  406df6:	sahf   
  406df7:	stos   DWORD PTR es:[edi],eax
  406df8:	xor    DWORD PTR [ecx+0x14],ebx
  406dfb:	mov    ss,WORD PTR [ebx]
  406dfd:	push   edx
  406dfe:	scas   eax,DWORD PTR es:[edi]
  406dff:	adc    ah,bl
  406e01:	lahf   
  406e02:	sub    BYTE PTR [ecx-0x16],bl
  406e05:	sub    DWORD PTR [edi],0xffffffc1
  406e08:	imul   ebp,DWORD PTR [ebp-0x36],0x16
  406e0c:	lods   al,BYTE PTR ss:[esi]
  406e0e:	mov    ds:0x54af103e,eax
  406e13:	xchg   esi,eax
  406e14:	add    BYTE PTR [edx+edx*4],dh
  406e17:	fst    st(0)
  406e19:	mov    edi,0xd884d0d3
  406e1e:	or     DWORD PTR [ebp+0x72],edx
  406e21:	int    0xb4
  406e23:	jmp    0xa44df9e9
  406e28:	sbb    eax,0xe152edfe
  406e2d:	mov    ds:0xbb3967bd,eax
  406e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e33:	(bad)  
  406e34:	fild   QWORD PTR [ebx]
  406e36:	mov    dh,0x54
  406e38:	popa   
  406e39:	and    BYTE PTR [esi],dl
  406e3b:	jno    0x406e61
  406e3d:	aad    0x41
  406e3f:	jmp    0xc4bd2c89
  406e44:	into   
  406e45:	pop    es
  406e46:	lods   al,BYTE PTR ds:[esi]
  406e47:	and    eax,0x113240f9
  406e4c:	inc    esp
  406e4d:	xor    eax,0x50503cc
  406e52:	fucomi st,st(7)
  406e54:	gs pushf 
  406e56:	arpl   cx,di
  406e58:	dec    eax
  406e59:	sub    BYTE PTR [ebx],bl
  406e5b:	add    DWORD PTR [ecx],ebp
  406e5d:	adc    BYTE PTR [edx],bh
  406e5f:	fwait
  406e60:	push   edi
  406e61:	sbb    eax,0x72db6736
  406e66:	(bad)  
  406e67:	sti    
  406e68:	pop    ecx
  406e69:	fnsave [edi+0x2b099c93]
  406e6f:	sbb    DWORD PTR [ecx+eiz*8+0xeca19c],ebx
  406e76:	out    dx,al
  406e77:	add    DWORD PTR [edi+edi*8],esp
  406e7a:	adc    BYTE PTR [edx],cl
  406e7c:	adc    bh,BYTE PTR [edx-0x1c]
  406e7f:	scas   al,BYTE PTR es:[edi]
  406e80:	fisubr DWORD PTR [ebx]
  406e82:	push   ecx
  406e83:	data16 cs jg 0x406e8c
  406e87:	shl    BYTE PTR [edx],0x7f
  406e8a:	pop    edx
  406e8b:	mov    ch,0x22
  406e8d:	add    al,0xb1
  406e8f:	mov    ds:0x38395429,eax
  406e94:	test   ecx,0xd6b6fe39
  406e9a:	call   0x7cb8:0x4e2d2b41
  406ea1:	rcl    bl,cl
  406ea3:	xor    DWORD PTR [ecx+edi*2-0x1f],0xc7aae1d9
  406eab:	cdq    
  406eac:	adc    cl,al
  406eae:	xchg   BYTE PTR [edx+0x24822043],ch
  406eb4:	sbb    dh,BYTE PTR [edx]
  406eb6:	aaa    
  406eb7:	in     eax,dx
  406eb8:	outs   dx,DWORD PTR ds:[esi]
  406eb9:	loop   0x406f10
  406ebb:	lock push edi
  406ebd:	cli    
  406ebe:	and    esi,DWORD PTR [eax+0x1e]
  406ec1:	mov    al,ds:0xf8bbe27c
  406ec6:	in     al,0x9f
  406ec8:	lods   al,BYTE PTR ds:[esi]
  406ec9:	pop    es
  406eca:	sbb    DWORD PTR [edx+eiz*4],esp
  406ecd:	sub    al,0x9d
  406ecf:	ror    BYTE PTR [edx+0x4e4d3b8f],0x68
  406ed6:	dec    eax
  406ed7:	xor    DWORD PTR [edx+0x1c2a48aa],ebx
  406edd:	mov    esp,0xdd2111bd
  406ee2:	mov    DWORD PTR [esi-0x2c84438d],esi
  406ee8:	das    
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	mov    dl,0xba
  406eec:	or     al,0x80
  406eee:	in     al,0x16
  406ef0:	loop   0x406ec0
  406ef2:	in     al,dx
  406ef3:	cmp    DWORD PTR [esi+0x52],edx
  406ef6:	ins    DWORD PTR es:[edi],dx
  406ef7:	dec    edx
  406ef8:	and    cl,ah
  406efa:	test   BYTE PTR [edi],ah
  406efc:	scas   eax,DWORD PTR es:[edi]
  406efd:	sbb    ebx,DWORD PTR [ebp-0x3b]
  406f00:	es js  0x406f17
  406f03:	xchg   esp,eax
  406f04:	ror    BYTE PTR [edx],cl
  406f06:	sub    ecx,ecx
  406f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f09:	push   0x75
  406f0b:	retf   0x97eb
  406f0e:	mov    edi,0xa6cadc3a
  406f13:	int    0xc6
  406f15:	cmp    ch,BYTE PTR [ebp+0x277267cc]
  406f1b:	and    DWORD PTR [ecx],edx
  406f1d:	jne    0x406f40
  406f1f:	ror    DWORD PTR [ecx-0x56],1
  406f22:	(bad)  
  406f23:	shl    DWORD PTR [bx-0x438],cl
  406f28:	imul   BYTE PTR [ecx+0x489804f0]
  406f2e:	int    0x84
  406f30:	mov    WORD PTR [edx],ds
  406f32:	mov    ?,WORD PTR [esi+0x22fd7cb]
  406f38:	jle    0x406f06
  406f3a:	je     0x406ee7
  406f3c:	sub    DWORD PTR [ecx+0x35],ebp
  406f3f:	fidiv  WORD PTR [ebp+0x11]
  406f42:	sar    DWORD PTR [ecx+0x4cf22918],cl
  406f48:	mov    dh,0xd5
  406f4a:	cmp    BYTE PTR [ecx-0x48],ch
  406f4d:	dec    edi
  406f4e:	jno    0x406f6f
  406f50:	and    esi,esp
  406f52:	gs pop ebx
  406f54:	xchg   ebp,eax
  406f55:	pop    ebx
  406f56:	sub    eax,0x81e2fac8
  406f5b:	jmp    0xe987:0xb66fa464
  406f62:	mov    al,0x3d
  406f64:	popa   
  406f65:	stos   BYTE PTR es:[edi],al
  406f66:	adc    DWORD PTR [edx],ecx
  406f68:	push   ebx
  406f69:	add    BYTE PTR [edi-0x51],bl
  406f6c:	jae    0x406efe
  406f6e:	fwait
  406f6f:	aaa    
  406f70:	repnz mov ecx,0xc89de587
  406f76:	(bad)  cs:[edi+0x2f]
  406f7a:	scas   al,BYTE PTR es:[edi]
  406f7b:	es mov cl,0xe8
  406f7e:	test   dl,cl
  406f80:	mov    dh,0x36
  406f82:	(bad)  
  406f83:	in     al,0x75
  406f85:	add    ch,bl
  406f87:	push   edi
  406f88:	shr    BYTE PTR [eax-0x4abb99a],0x49
  406f8f:	(bad)
  406f92:	mov    eax,ss
  406f94:	sub    BYTE PTR [ebp-0x30a2a5e5],ch
  406f9a:	sub    ch,BYTE PTR [eax-0x33]
  406f9d:	jne    0x406f70
  406f9f:	mov    bl,0xe5
  406fa1:	xchg   edi,eax
  406fa2:	pop    ss
  406fa3:	jg     0x406f64
  406fa5:	mov    al,0x70
  406fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa8:	or     eax,0xc118295b
  406fad:	gs inc ecx
  406faf:	fbstp  TBYTE PTR [ebp-0x170b41f6]
  406fb5:	xchg   ebx,eax
  406fb6:	jg     0x407035
  406fb8:	mov    ah,0x80
  406fba:	xchg   edx,eax
  406fbb:	xor    eax,0x2a336770
  406fc0:	ficom  WORD PTR [ecx-0x7ed87e80]
  406fc6:	cmp    al,0x2e
  406fc8:	cdq    
  406fc9:	dec    ecx
  406fca:	jnp    0x40701f
  406fcc:	push   0x64551c44
  406fd1:	fidivr DWORD PTR [ecx]
  406fd3:	xor    al,0x40
  406fd5:	outs   dx,DWORD PTR ds:[esi]
  406fd6:	aas    
  406fd7:	lods   eax,DWORD PTR ds:[esi]
  406fd8:	mov    cl,0x1f
  406fda:	sbb    cl,dh
  406fdc:	dec    ebp
  406fdd:	add    bl,BYTE PTR [ecx]
  406fdf:	outs   dx,DWORD PTR ds:[esi]
  406fe0:	sub    ch,BYTE PTR [esi-0x7341ff67]
  406fe6:	fisubr DWORD PTR ds:0x4e9dae7d
  406fec:	xchg   ecx,eax
  406fed:	mov    ebp,0x339c809b
  406ff2:	popf   
  406ff3:	sub    eax,ebp
  406ff5:	sahf   
  406ff6:	imul   edi,DWORD PTR [esi],0x3b0e5a5
  406ffc:	mov    bl,BYTE PTR [edi]
  406ffe:	sub    al,0xab
  407000:	add    bh,BYTE PTR [edi+eiz*8]
  407003:	ret    
  407004:	adc    bh,BYTE PTR [ecx]
  407006:	and    BYTE PTR [eax],dh
  407008:	push   edi
  407009:	ffreep st(4)
  40700b:	xchg   edx,eax
  40700c:	xlat   BYTE PTR ds:[ebx]
  40700d:	mov    dh,0xe0
  40700f:	outs   dx,DWORD PTR ds:[esi]
  407010:	xchg   DWORD PTR [edx+0x58d26531],eax
  407016:	sub    ebp,DWORD PTR [ebp+0x130d304e]
  40701c:	popa   
  40701d:	mov    cs,WORD PTR [edx]
  40701f:	mov    bh,BYTE PTR gs:[ecx+0x4f]
  407023:	fild   DWORD PTR [edx+0x1754a561]
  407029:	mov    dh,0x8f
  40702b:	xchg   esp,eax
  40702c:	xchg   eax,eax
  40702e:	scas   eax,DWORD PTR es:[edi]
  40702f:	mov    bl,0xf6
  407031:	ss in  eax,dx
  407033:	es jp  0x407030
  407036:	mov    esp,0x8a17eec
  40703b:	(bad)  
  40703c:	sub    DWORD PTR [edi],ecx
  40703e:	repz adc al,0xc
  407041:	mov    ecx,0x958a3085
  407046:	jmp    0x40708d
  407048:	retf   0x9e71
  40704b:	cli    
  40704c:	fdivr  st,st(0)
  40704e:	not    BYTE PTR [esi+edx*8-0x74fa9a9d]
  407055:	repz push ds
  407057:	out    0x24,al
  407059:	add    ebx,edi
  40705b:	pop    edx
  40705c:	dec    edx
  40705d:	pop    es
  40705e:	icebp  
  40705f:	pop    ebx
  407060:	inc    ecx
  407061:	push   ebp
  407062:	xchg   esp,eax
  407063:	hlt    
  407064:	daa    
  407065:	fist   WORD PTR [ecx+0x25]
  407068:	xchg   ecx,eax
  407069:	test   eax,0xea6f446a
  40706e:	sub    ebp,edx
  407070:	mov    ch,0x9b
  407072:	sahf   
  407073:	mov    bl,0x20
  407075:	or     edi,0xffffff84
  407078:	dec    esi
  407079:	gs scas eax,DWORD PTR es:[edi]
  40707b:	xor    BYTE PTR [edx],bl
  40707d:	pusha  
  40707e:	fistp  DWORD PTR [ebp+eax*4+0x3a]
  407082:	das    
  407083:	jnp    0x407095
  407085:	push   esi
  407086:	xlat   BYTE PTR ds:[ebx]
  407087:	out    dx,eax
  407088:	mov    es,WORD PTR [edx+0x4e]
  40708b:	jne    0x40708c
  40708d:	(bad)  
  40708e:	pop    eax
  40708f:	push   ss
  407090:	call   DWORD PTR [ecx+0x6156af86]
  407096:	iret   
  407097:	out    dx,eax
  407098:	mov    eax,ds:0x91c6fb6e
  40709d:	mov    esp,0xec90e367
  4070a2:	ficomp WORD PTR [esi+eax*8]
  4070a5:	mov    esp,0xa9f2168e
  4070aa:	les    eax,FWORD PTR [ebx+0x7e2e18bc]
  4070b0:	push   ebx
  4070b1:	retf   0x8ce1
  4070b4:	jg     0x407109
  4070b6:	jmp    0x407121
  4070b8:	xchg   ebp,eax
  4070b9:	adc    DWORD PTR ds:[esi-0x70],edx
  4070bd:	popf   
  4070be:	iret   
  4070bf:	sub    DWORD PTR [edi-0x5c9228bc],edx
  4070c5:	or     eax,0x3598f7e6
  4070ca:	bound  eax,QWORD PTR [edx]
  4070cc:	repz arpl WORD PTR [esi],ax
  4070cf:	mov    bh,0xf0
  4070d1:	or     bh,BYTE PTR [eax+0x6cd224b9]
  4070d7:	loopne 0x407068
  4070d9:	sub    dh,BYTE PTR [ecx]
  4070db:	addr16 push ecx
  4070dd:	jp     0x4070e8
  4070df:	mov    ebp,0xab678af0
  4070e4:	ficom  WORD PTR [ecx]
  4070e6:	les    sp,DWORD PTR [ebx+ebx*4-0xf]
  4070eb:	retf   
  4070ec:	sub    al,0xdf
  4070ee:	adc    BYTE PTR [ebx],ah
  4070f0:	and    al,0x8b
  4070f2:	call   0x5520:0x62ce9491
  4070f9:	test   BYTE PTR [edx+0x39bfe00d],bl
  4070ff:	aam    0x30
  407101:	adc    ebp,DWORD PTR [ecx-0x5acde537]
  407107:	repz mov ss,WORD PTR [ecx+ecx*8-0x11]
  40710c:	icebp  
  40710d:	das    
  40710e:	mov    DWORD PTR [eax+0xd],esi
  407111:	jns    0x40710d
  407113:	ja     0x4070a7
  407115:	loopne 0x4070f8
  407117:	jns    0x4070c2
  407119:	push   ecx
  40711a:	cmp    esp,DWORD PTR [ecx-0x24a67758]
  407120:	jg     0x4070ee
  407122:	cmp    ebp,ebx
  407124:	pop    es
  407125:	rcl    DWORD PTR [ecx],1
  407127:	je     0x40715a
  407129:	mov    ecx,0xc86455b4
  40712e:	rol    BYTE PTR [ebx+0x3cc15df2],1
  407134:	cmp    al,0xbd
  407136:	mov    esi,0xfa762f78
  40713b:	and    BYTE PTR [ebp+0x22],0xe1
  40713f:	jnp    0x407130
  407141:	add    eax,0xcb2fcfed
  407146:	and    dl,BYTE PTR [edi+esi*4]
  407149:	adc    dh,ch
  40714b:	imul   BYTE PTR [eax+0x7c00e16f]
  407151:	out    dx,al
  407152:	out    dx,al
  407153:	les    edx,FWORD PTR [edi-0x7d]
  407156:	push   0x72066c82
  40715b:	and    BYTE PTR [edx+0x0],al
  40715e:	ins    BYTE PTR es:[edi],dx
  40715f:	(bad)  
  407160:	into   
  407161:	push   ss
  407162:	jge    0x40713b
  407164:	mov    WORD PTR [ebp+0x230cc37f],ss
  40716a:	and    al,0xa7
  40716c:	mov    ah,0x65
  40716e:	pop    es
  40716f:	in     al,0x85
  407171:	inc    edx
  407172:	jo     0x40713a
  407174:	xchg   ebx,eax
  407175:	outs   dx,BYTE PTR ds:[esi]
  407176:	in     al,0xf8
  407178:	cmp    eax,edi
  40717a:	fsubr  QWORD PTR [edx+0x44]
  40717d:	fild   QWORD PTR [ecx-0x32315107]
  407183:	icebp  
  407184:	rcr    DWORD PTR [ebp-0x59f99116],1
  40718a:	mov    ebp,0x2b271734
  40718f:	fnsave [ebx+ecx*2-0x5e61c874]
  407196:	call   0xa579:0x715b0f76
  40719d:	pop    esi
  40719e:	jbe    0x40713a
  4071a0:	mov    esp,DWORD PTR [esi]
  4071a2:	push   ss
  4071a3:	iret   
  4071a4:	ins    BYTE PTR es:[edi],dx
  4071a5:	loop   0x407191
  4071a7:	xchg   esp,eax
  4071a8:	scas   eax,DWORD PTR es:[edi]
  4071a9:	push   ecx
  4071aa:	cmp    al,0xa
  4071ac:	adc    edx,DWORD PTR [edi]
  4071ae:	add    eax,0x25f49d6c
  4071b3:	fimul  WORD PTR [ecx]
  4071b5:	or     eax,0x8f60305e
  4071ba:	adc    DWORD PTR [ecx-0x2],esi
  4071bd:	call   0x42a9:0x90b5ea93
  4071c4:	hlt    
  4071c5:	in     al,0x76
  4071c7:	daa    
  4071c8:	fdiv   QWORD PTR [esi+0x20]
  4071cb:	cmp    bh,BYTE PTR [ebx+0x62]
  4071ce:	add    DWORD PTR [ebx+0x1ba53aaf],edx
  4071d4:	scas   eax,DWORD PTR es:[edi]
  4071d5:	xor    esp,ecx
  4071d7:	mov    ah,0x96
  4071d9:	addr16 cmp al,0x7a
  4071dc:	jge    0x4071a6
  4071de:	mov    cl,0x51
  4071e0:	mov    bl,0x12
  4071e2:	mov    WORD PTR [ebp+ecx*2+0x64],?
  4071e6:	test   eax,0x4f2e855c
  4071eb:	ror    DWORD PTR [edx],cl
  4071ed:	retf   0x9cc9
  4071f0:	dec    esi
  4071f1:	out    0xa8,al
  4071f3:	out    dx,eax
  4071f4:	in     al,0x99
  4071f6:	sub    ch,ah
  4071f8:	push   edi
  4071f9:	mov    esi,0x78dfae54
  4071fe:	sub    eax,edx
  407200:	sub    eax,0x4890b619
  407205:	pop    ecx
  407206:	aam    0x8e
  407208:	repnz and eax,0xe81f3c9e
  40720e:	jbe    0x4071f1
  407210:	cmc    
  407211:	test   BYTE PTR [ebx],dh
  407213:	sar    DWORD PTR [edx+0x3272dd],0x3
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	and    DWORD PTR [edi],ecx
  407751:	jl     0x407794
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x407724
  40775c:	push   cs
  40775d:	mov    eax,0x8389f71a
  407762:	arpl   WORD PTR [ebx+0x70],bp
  407765:	mov    fs,WORD PTR [eax+0x48]
  407768:	(bad)  
  407769:	test   eax,0x68ec05a8
  40776e:	inc    edx
  40776f:	sbb    BYTE PTR [esi-0x32005190],0x2f
  407776:	imul   ebx,esi,0x54
  407779:	xor    BYTE PTR [edx-0x22],dl
  40777c:	dec    ebx
  40777d:	mov    ah,0x48
  40777f:	mov    ds:0xc07eb248,eax
  407784:	mov    edi,0x92cc4077
  407789:	fst    DWORD PTR [ebx-0x10027ec4]
  40778f:	jp     0x4077bc
  407791:	cdq    
  407792:	ja     0x4077ab
  407794:	push   edx
  407795:	mov    esi,0x7a117bfe
  40779a:	push   0xc
  40779c:	rcr    ecx,1
  40779e:	out    dx,eax
  40779f:	shl    BYTE PTR [eax],1
  4077a1:	ins    DWORD PTR es:[edi],dx
  4077a2:	cdq    
  4077a3:	stos   BYTE PTR es:[edi],al
  4077a4:	add    al,0x3a
  4077a6:	and    edx,0x70
  4077a9:	xor    DWORD PTR [esi+edx*1],esi
  4077ac:	cwde   
  4077ad:	imul   esp,DWORD PTR [edx],0x58
  4077b0:	gs aad 0xb2
  4077b3:	push   ecx
  4077b4:	pushf  
  4077b5:	mov    ebp,0x9f75e93e
  4077ba:	adc    ah,dh
  4077bc:	lods   al,BYTE PTR ds:[esi]
  4077bd:	pop    es
  4077be:	fnstcw WORD PTR [esi-0x255d8749]
  4077c4:	sbb    bh,BYTE PTR [ebx-0x3d]
  4077c7:	leave  
  4077c8:	cmc    
  4077c9:	sahf   
  4077ca:	push   ss
  4077cb:	jmp    0x72107af6
  4077d0:	and    eax,0xa1e6c67b
  4077d5:	pop    ecx
  4077d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d7:	mov    ebp,0x34f47e85
  4077dc:	mov    al,cl
  4077de:	mov    dh,0x19
  4077e0:	xchg   esp,eax
  4077e1:	inc    ebp
  4077e2:	sub    BYTE PTR fs:[edi],0x7a
  4077e6:	add    al,0xfb
  4077e8:	lock cmp edx,DWORD PTR [edx]
  4077eb:	bound  esi,QWORD PTR [ecx-0x30]
  4077ee:	inc    BYTE PTR [ebx]
  4077f0:	adc    BYTE PTR [ebx-0x44],bh
  4077f3:	push   ss
  4077f4:	data16 repnz xlat BYTE PTR ds:[ebx]
  4077f7:	jge    0x4077ee
  4077f9:	jle    0x4077fe
  4077fb:	imul   eax,DWORD PTR [ebx-0x5ecb909a],0xffffffec
  407802:	dec    ebx
  407803:	push   esp
  407804:	lods   eax,DWORD PTR ds:[esi]
  407805:	inc    esi
  407806:	fmul   QWORD PTR [ebp+eax*8-0xf4015c7]
  40780d:	xor    al,0x28
  40780f:	lahf   
  407810:	mov    al,BYTE PTR [eax]
  407812:	adc    BYTE PTR [edx],dl
  407814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407815:	and    eax,0x1ec37a76
  40781a:	int3   
  40781b:	in     al,dx
  40781c:	adc    BYTE PTR [ecx-0x6beea17e],0x4e
  407823:	jnp    0x40785c
  407825:	and    DWORD PTR [ecx-0x1c5cb92a],0xceef79dc
  40782f:	and    BYTE PTR [esi-0x5c],al
  407832:	and    DWORD PTR [ebx-0x22],ebp
  407835:	inc    esi
  407836:	sahf   
  407837:	out    dx,eax
  407838:	(bad)  
  40783a:	xchg   esp,eax
  40783b:	adc    BYTE PTR [esi],bh
  40783d:	sub    dl,BYTE PTR [eax+0x1e]
  407840:	dec    eax
  407841:	pop    eax
  407842:	les    ebp,FWORD PTR [ecx]
  407844:	mov    DWORD PTR [ebp-0x76],eax
  407847:	or     al,0xfd
  407849:	xlat   BYTE PTR ds:[ebx]
  40784a:	jne    0x4077e2
  40784c:	inc    esi
  40784d:	xor    al,0x29
  40784f:	repz pop edx
  407851:	xor    DWORD PTR [ebp+0x13],ecx
  407854:	sbb    BYTE PTR [esi+0x60f83a37],dl
  40785a:	xor    BYTE PTR [ebx],bl
  40785c:	leave  
  40785d:	and    eax,0xbe8318c0
  407862:	fsub   QWORD PTR [esi]
  407864:	mov    esi,0x4d9887ca
  407869:	pushf  
  40786a:	jnp    0x407879
  40786c:	mov    eax,ds:0x18aad3fd
  407871:	cmp    eax,0x87913630
  407876:	js     0x4078b4
  407878:	cmp    eax,DWORD PTR [ebp+0x1480ea2a]
  40787e:	in     eax,0x5b
  407880:	jmp    0x4078c9
  407882:	sahf   
  407883:	(bad)  
  407884:	leave  
  407885:	stos   BYTE PTR es:[edi],al
  407886:	mov    DWORD PTR [ecx+0x9],ebx
  407889:	sti    
  40788a:	xchg   ebx,eax
  40788b:	and    edx,DWORD PTR [ecx-0x75]
  40788e:	inc    ecx
  40788f:	shl    DWORD PTR [edi+0xa],0x4
  407893:	fnsave [edi+0x65e5660d]
  407899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40789a:	inc    eax
  40789b:	mov    esi,0xa2213ca0
  4078a0:	mov    esp,0xd5cc59e1
  4078a5:	mov    eax,0x18efdf08
  4078aa:	out    0x8f,eax
  4078ac:	aam    0xbc
  4078ae:	out    dx,eax
  4078af:	pop    edi
  4078b0:	js     0x40789b
  4078b2:	ret    
  4078b3:	mov    dl,0x27
  4078b5:	mov    esi,0xf18dcaac
  4078ba:	xchg   esp,eax
  4078bb:	pop    edx
  4078bc:	imul   ebx,DWORD PTR [ebx-0x7b],0x6b
  4078c0:	mov    eax,ds:0x3c352099
  4078c5:	or     BYTE PTR [eax+0x614bf7d4],0x20
  4078cc:	retf   0x33ff
  4078cf:	dec    ecx
  4078d0:	xlat   BYTE PTR ds:[ebx]
  4078d1:	call   0x4f1a:0x72996b32
  4078d8:	fdivr  QWORD PTR [esi]
  4078da:	stos   BYTE PTR es:[edi],al
  4078db:	pop    ebp
  4078dc:	sbb    al,0x53
  4078de:	pop    ebx
  4078df:	div    dl
  4078e1:	pusha  
  4078e2:	shl    ah,0xf0
  4078e5:	fstp   DWORD PTR [eax-0x2b822e71]
  4078eb:	ins    BYTE PTR es:[edi],dx
  4078ec:	int    0x74
  4078ee:	mov    fs:0x16a50255,eax
  4078f4:	mov    eax,0x838a2621
  4078f9:	dec    esi
  4078fa:	push   ebp
  4078fb:	out    dx,al
  4078fc:	mov    bh,0xbf
  4078fe:	push   ebx
  407900:	(bad)  
  407901:	push   ds
  407902:	(bad)  
  407903:	(bad)  
  407904:	scas   eax,DWORD PTR es:[edi]
  407905:	jmp    0x8a2b:0x4b6a
  40790b:	xor    eax,0x4a2e46b4
  407910:	dec    eax
  407911:	inc    ebp
  407912:	xor    eax,0x722f7d6d
  407917:	mov    ds:0x68bb6ede,al
  40791c:	pop    esi
  40791d:	jmp    0x4078cd
  40791f:	mov    ds:0xbe2d0c4a,eax
  407924:	inc    ecx
  407925:	js     0x4078b8
  407927:	shl    BYTE PTR [ecx-0x278d0d60],cl
  40792d:	ss jge 0x4078c7
  407930:	or     eax,0xe69c0919
  407935:	push   ebp
  407936:	arpl   WORD PTR [ecx],sp
  407938:	aam    0xed
  40793a:	or     ecx,DWORD PTR [ebp-0x49009663]
  407940:	dec    ebx
  407941:	mov    edi,DWORD PTR [ebx-0x593a8e8]
  407947:	loop   0x407944
  407949:	mov    eax,ds:0xd63e6472
  40794e:	xor    dl,ch
  407950:	pop    es
  407951:	mov    esp,0xdf3e0741
  407956:	pop    eax
  407957:	push   es
  407958:	repnz pop edi
  40795a:	std    
  40795b:	inc    DWORD PTR [edi]
  40795d:	or     eax,0x24f82c54
  407962:	cmp    esi,DWORD PTR [ebx+0x60e9a8c7]
  407968:	ja     0x40790e
  40796a:	push   ds
  40796b:	push   ecx
  40796c:	jecxz  0x407949
  40796e:	imul   BYTE PTR [ebp+0x55525fc]
  407974:	push   0xffffff88
  407976:	xchg   BYTE PTR [edi+0x68],dl
  407979:	in     eax,0x1a
  40797b:	dec    edi
  40797c:	jp     0x4079c6
  40797e:	pop    ss
  40797f:	xor    DWORD PTR [ecx-0x42],0x19
  407983:	xor    BYTE PTR ds:0xffbaa32,bh
  407989:	call   FWORD PTR [esi-0x368eded9]
  40798f:	or     al,0x5
  407991:	xchg   ecx,eax
  407992:	inc    edx
  407993:	loope  0x40798f
  407995:	inc    edi
  407996:	pop    esp
  407997:	mov    dl,0x1c
  407999:	ss dec esp
  40799b:	sub    BYTE PTR [esi-0xb471348],cl
  4079a1:	stc    
  4079a2:	jge    0x407973
  4079a4:	mov    ah,0xb
  4079a6:	push   es
  4079a7:	retf   0x1086
  4079aa:	pop    eax
  4079ab:	sub    dl,BYTE PTR [ebx+0x71]
  4079ae:	inc    ebp
  4079af:	mov    DWORD PTR [ecx+ecx*4-0x78],edx
  4079b3:	dec    ebp
  4079b4:	dec    BYTE PTR [esi+0x27]
  4079b7:	imul   eax,edx,0x7d1e2c35
  4079bd:	test   BYTE PTR [ebp-0x545d838f],0xbc
  4079c4:	(bad)  
  4079c5:	aas    
  4079c6:	sub    ah,BYTE PTR [edi]
  4079c8:	jnp    0x40794c
  4079ca:	push   ds
  4079cb:	int3   
  4079cc:	jb     0x407a23
  4079ce:	pop    esi
  4079cf:	pop    ecx
  4079d0:	dec    edi
  4079d1:	or     BYTE PTR [ebx+0x1d],bl
  4079d4:	mov    edx,0x76956c85
  4079d9:	imul   ecx,DWORD PTR [ecx+0x66447c17],0x59fd99b1
  4079e3:	mov    dh,0x26
  4079e5:	sbb    DWORD PTR [ebx+ebp*8+0x78],0x1c
  4079ea:	xchg   edx,eax
  4079eb:	cmp    al,BYTE PTR [ecx]
  4079ed:	inc    esi
  4079ee:	out    dx,eax
  4079ef:	mov    bh,0x6b
  4079f1:	or     dl,BYTE PTR [edx]
  4079f3:	repnz loop 0x407a64
  4079f6:	rcl    DWORD PTR es:0x2b700067,cl
  4079fd:	xor    DWORD PTR [ebp-0x75],edx
  407a00:	xor    ebp,DWORD PTR [ecx-0x59035270]
  407a06:	xchg   ebp,eax
  407a07:	out    dx,eax
  407a08:	mov    esp,0x679f3cc1
  407a0d:	add    al,bl
  407a0f:	rcr    DWORD PTR [esi-0x78],cl
  407a12:	jo     0x4079f2
  407a14:	pop    esp
  407a15:	adc    al,0x47
  407a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a18:	daa    
  407a19:	push   0x74
  407a1b:	test   eax,0xa3dc762e
  407a20:	mov    eax,0xff12a2c8
  407a25:	jb     0x4079db
  407a27:	out    dx,eax
  407a28:	out    dx,al
  407a29:	cmp    cl,bl
  407a2b:	shl    dh,1
  407a2d:	cdq    
  407a2e:	scas   al,BYTE PTR es:[edi]
  407a2f:	sti    
  407a30:	mov    ebp,0xeacb445e
  407a35:	inc    eax
  407a36:	xchg   esi,eax
  407a37:	inc    ecx
  407a38:	jno    0x4079bc
  407a3a:	and    edx,edi
  407a3c:	call   0xf8073f10
  407a41:	aam    0x55
  407a43:	popf   
  407a44:	mov    dh,0x1f
  407a46:	xchg   ebp,eax
  407a47:	loop   0x4079f5
  407a49:	mov    ecx,0x48061ff9
  407a4e:	inc    DWORD PTR [edx]
  407a50:	mov    es,WORD PTR [ebx+0x681110e4]
  407a56:	sbb    DWORD PTR [ecx+0x40],ecx
  407a59:	std    
  407a5a:	pushf  
  407a5b:	and    DWORD PTR [edi-0x1d],ebp
  407a5e:	loope  0x407ad2
  407a60:	sbb    al,0xa6
  407a62:	mov    ds:0xc456f54d,al
  407a67:	shl    bl,1
  407a69:	sahf   
  407a6a:	ins    DWORD PTR es:[edi],dx
  407a6b:	bound  ebx,QWORD PTR [edi]
  407a6d:	ins    BYTE PTR es:[edi],dx
  407a6e:	push   esp
  407a6f:	ins    DWORD PTR es:[edi],dx
  407a70:	mov    DWORD PTR [esi-0x12],esi
  407a73:	push   esi
  407a74:	add    DWORD PTR [esi],esi
  407a76:	pushf  
  407a77:	jbe    0x407a3b
  407a79:	not    BYTE PTR [ebp+0x15be8848]
  407a7f:	stos   BYTE PTR es:[edi],al
  407a80:	and    BYTE PTR [eax+0x5a992d1a],ah
  407a86:	enter  0x1c27,0xec
  407a8a:	sbb    BYTE PTR [ecx+ebx*1+0x62abae7],dl
  407a91:	pop    ebp
  407a92:	jns    0x407a86
  407a94:	jl     0x407a1f
  407a96:	push   ecx
  407a97:	and    BYTE PTR [edx-0x4d2c38a8],cl
  407a9d:	adc    eax,0x78d5689e
  407aa2:	mov    ebp,0x9a7ba0fc
  407aa7:	inc    esp
  407aa8:	xor    dh,dh
  407aaa:	mov    ecx,0x6cf29fb3
  407aaf:	or     eax,DWORD PTR [eax]
  407ab1:	daa    
  407ab2:	or     eax,DWORD PTR [edi]
  407ab4:	adc    BYTE PTR [ebx],cl
  407ab6:	or     eax,0xf98d15af
  407abb:	sbb    bh,cl
  407abd:	sub    ebx,edx
  407abf:	int    0xaf
  407ac1:	call   FWORD PTR [edx-0x5b00b714]
  407ac7:	imul   edi,DWORD PTR [esi+ebx*8+0x39],0xffffffa4
  407acc:	es push ebp
  407ace:	mov    edx,0xd31e3710
  407ad3:	sub    eax,DWORD PTR [eax+0x10]
  407ad6:	jne    0x407aa9
  407ad8:	ins    BYTE PTR es:[edi],dx
  407ad9:	dec    edi
  407ada:	cmc    
  407adb:	or     DWORD PTR [ebx-0x155cb329],esp
  407ae1:	out    0x21,al
  407ae3:	adc    al,0x5c
  407ae5:	add    eax,0xf14360f7
  407aea:	xor    eax,0x3f1eff27
  407aef:	pop    ss
  407af0:	or     BYTE PTR [ebx],dl
  407af2:	dec    edx
  407af3:	fwait
  407af4:	ror    BYTE PTR [eax+0x6b101f31],1
  407afa:	xor    al,0xe2
  407afc:	out    dx,eax
  407afd:	loope  0x407b7c
  407aff:	sub    BYTE PTR [edx+0x7412f50c],dh
  407b05:	xchg   DWORD PTR [esi],ecx
  407b07:	pop    ds
  407b08:	push   ebx
  407b09:	(bad)  
  407b0a:	sub    eax,0xb1e78d75
  407b0f:	sub    ebx,0x78
  407b12:	jne    0x407b66
  407b14:	mov    ch,0x27
  407b16:	jge    0x407b18
  407b18:	mov    ch,0xba
  407b1a:	xchg   edi,eax
  407b1b:	popa   
  407b1c:	push   cs
  407b1d:	push   edi
  407b1e:	add    bh,BYTE PTR [ebx+0x5c4ab750]
  407b24:	mov    dh,0x17
  407b26:	imul   ebx,DWORD PTR [edi+0x9d4ffaa],0x6ded8eb8
  407b30:	sar    BYTE PTR [ebp-0x44c3cf37],0x3b
  407b37:	loop   0x407b33
  407b39:	jbe    0x407b5d
  407b3b:	mov    dh,0x2f
  407b3d:	repz (bad) 
  407b3f:	mov    ecx,0xab1cb69b
  407b44:	or     bh,BYTE PTR [ecx+0x34c10c07]
  407b4a:	mov    ds:0x3caa629b,al
  407b4f:	adc    bl,BYTE PTR [edi+0x6b2f277d]
  407b55:	cmp    al,0x1f
  407b57:	(bad)  
  407b58:	mov    ds:0x3a7b1c7e,eax
  407b5d:	mov    cl,0xb8
  407b5f:	fbld   TBYTE PTR [ecx+0x35]
  407b62:	mov    ?,ebp
  407b64:	and    dl,BYTE PTR ds:0xa4f261c2
  407b6a:	xchg   edi,eax
  407b6b:	push   esp
  407b6c:	iret   
  407b6d:	test   BYTE PTR [esi-0x6d],0x8a
  407b71:	xchg   esi,eax
  407b72:	jg     0x407b02
  407b74:	int3   
  407b75:	stos   BYTE PTR es:[edi],al
  407b76:	test   ebp,ebx
  407b78:	and    al,0xb5
  407b7a:	jmp    0x4d181294
  407b7f:	xchg   ebx,eax
  407b80:	adc    BYTE PTR [eax],0x6f
  407b83:	outs   dx,DWORD PTR ds:[esi]
  407b84:	bound  ebp,QWORD PTR [ebx+0x3a77939f]
  407b8a:	xor    al,0x7d
  407b8c:	jo     0x407ba9
  407b8e:	or     eax,0x7f02fc74
  407b93:	retf   
  407b94:	scas   eax,DWORD PTR es:[edi]
  407b95:	inc    esp
  407b96:	push   ss
  407b97:	icebp  
  407b98:	sub    dl,BYTE PTR [edx]
  407b9a:	mov    cl,0x8c
  407b9c:	xor    BYTE PTR [esi-0x17e7f497],bh
  407ba2:	ins    DWORD PTR es:[edi],dx
  407ba3:	ins    BYTE PTR es:[edi],dx
  407ba4:	push   ebp
  407ba5:	push   0xffffffa9
  407ba7:	test   eax,0x978628f1
  407bac:	xlat   BYTE PTR ds:[ebx]
  407bad:	sub    al,0x8b
  407baf:	fild   QWORD PTR [edi+0x4]
  407bb2:	imul   esi,DWORD PTR [ebx-0x2f],0xffffffd9
  407bb6:	addr16 je 0x407b5a
  407bb9:	out    dx,eax
  407bba:	loop   0x407bac
  407bbc:	(bad)  [edx]
  407bbe:	ds in  eax,0x76
  407bc1:	sahf   
  407bc2:	(bad)  
  407bc3:	out    dx,eax
  407bc4:	test   BYTE PTR [eax+ebx*4+0x6263953e],0xad
  407bcc:	neg    DWORD PTR [ebx]
  407bce:	xor    eax,0x1ce52ce0
  407bd3:	shr    BYTE PTR [edx-0x2ee73db0],cl
  407bd9:	sub    dh,bh
  407bdb:	leave  
  407bdc:	push   ebx
  407bdd:	pop    ss
  407bde:	stos   DWORD PTR es:[edi],eax
  407bdf:	add    ebp,DWORD PTR [ecx+esi*8-0x75b956a2]
  407be6:	dec    esi
  407be7:	jle    0x407bc2
  407be9:	test   DWORD PTR ds:0x8c7f8d42,esi
  407bef:	push   esp
  407bf0:	test   BYTE PTR [edi+0x53702d12],ch
  407bf6:	xchg   BYTE PTR [edi-0x78c85b0c],ch
  407bfc:	push   edx
  407bfd:	loop   0x407bc2
  407bff:	pop    edx
  407c00:	sub    DWORD PTR [ebp+0x5ea54659],edi
  407c06:	cld    
  407c07:	xor    BYTE PTR [ecx-0x5d],dh
  407c0a:	cmp    ebp,DWORD PTR [edx+eiz*8]
  407c0d:	xchg   edx,eax
  407c0e:	in     eax,dx
  407c0f:	sbb    BYTE PTR [edx+0x3fc7a846],bl
  407c15:	inc    edi
  407c16:	cs dec esi
  407c18:	popf   
  407c19:	pop    esp
  407c1a:	cmc    
  407c1b:	and    BYTE PTR [ecx-0x56ee9524],0xed
  407c22:	sub    DWORD PTR [ecx],ecx
  407c24:	dec    esi
  407c25:	in     eax,dx
  407c26:	enter  0x2a52,0x37
  407c2a:	cmc    
  407c2b:	mov    dl,0xee
  407c2d:	stos   BYTE PTR es:[edi],al
  407c2e:	les    eax,FWORD PTR [ecx-0x5dee8fcc]
  407c34:	mov    bh,BYTE PTR [edx+0x6f]
  407c37:	jb     0x407c20
  407c39:	or     esp,DWORD PTR [eax+0x4cf591dd]
  407c3f:	add    al,0x6f
  407c41:	test   eax,0x4259892f
  407c46:	mov    ebx,0xad372923
  407c4b:	xchg   BYTE PTR [eax+0x6b77737c],ah
  407c51:	retf   0xb926
  407c54:	gs test eax,0x320804f
  407c5a:	cmc    
  407c5b:	pushf  
  407c5c:	xchg   ebx,eax
  407c5d:	lds    esi,FWORD PTR [eax+0x7b358f6]
  407c63:	lahf   
  407c64:	add    bh,bl
  407c66:	jne    0x407c1b
  407c68:	int3   
  407c69:	push   esp
  407c6a:	cld    
  407c6b:	and    esi,edi
  407c6d:	iret   
  407c6e:	dec    esp
  407c6f:	mov    WORD PTR [ecx-0x523280bb],ds
  407c75:	xchg   esp,eax
  407c76:	mov    ds:0xe5381fa7,al
  407c7b:	push   0xffffff8e
  407c7d:	cmp    eax,0x6e1689c8
  407c82:	mov    ds:0x4aaf6cce,eax
  407c87:	add    al,0xbf
  407c89:	repz call 0x8511:0x3f002207
  407c91:	or     DWORD PTR [ebx-0x7d],0x58
  407c95:	push   edi
  407c96:	dec    eax
  407c97:	mov    ds:0x6b2845a7,eax
  407c9c:	sub    edx,DWORD PTR [esi-0x53]
  407c9f:	add    BYTE PTR [esi-0x7b7f26ca],0x4c
  407ca6:	aad    0xcf
  407ca8:	jo     0x407c7d
  407caa:	mov    eax,ds:0x4270a8d
  407caf:	mov    ch,0x55
  407cb1:	fs sub al,ch
  407cb4:	jmp    0xf554dab2
  407cb9:	scas   eax,DWORD PTR es:[edi]
  407cba:	and    ebp,edi
  407cbc:	adc    DWORD PTR [edi-0x7071bc56],0x30
  407cc3:	mov    al,0xc2
  407cc5:	add    al,ah
  407cc7:	nop
  407cc8:	push   eax
  407cc9:	pop    esi
  407cca:	daa    
  407ccb:	xchg   esp,eax
  407ccc:	pop    ebx
  407ccd:	pop    esi
  407cce:	sbb    ebp,DWORD PTR [eax]
  407cd0:	jecxz  0x407cad
  407cd2:	iret   
  407cd3:	(bad)  
  407cd4:	loopne 0x407cde
  407cd6:	and    eax,DWORD PTR [edx]
  407cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd9:	loopne 0x407c5b
  407cdb:	adc    bl,BYTE PTR [ecx+0x49bbdf4d]
  407ce1:	pop    ebx
  407ce2:	stos   DWORD PTR es:[edi],eax
  407ce3:	mov    esi,eax
  407ce5:	jecxz  0x407d23
  407ce7:	jle    0x407ca7
  407ce9:	leave  
  407cea:	and    bl,cl
  407cec:	mov    ah,0x9c
  407cee:	mov    ecx,DWORD PTR [edx+0x74]
  407cf1:	(bad)  
  407cf2:	call   0x5c6f:0xe4f5e64a
  407cf9:	in     al,dx
  407cfa:	mov    edi,0xac800704
  407cff:	push   edx
  407d00:	push   ecx
  407d01:	dec    esi
  407d02:	or     DWORD PTR [eax-0x2f],edx
  407d05:	jnp    0x407cea
  407d07:	lahf   
  407d08:	sbb    eax,0xd4f03a62
  407d0d:	std    
  407d0e:	fist   WORD PTR [eax-0x4]
  407d11:	dec    edx
  407d12:	into   
  407d13:	adc    al,0xec
  407d15:	icebp  
  407d16:	js     0x407d46
  407d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d19:	or     al,0xc9
  407d1b:	repz inc eax
  407d1d:	sbb    BYTE PTR [esi-0x217a0198],ch
  407d23:	sbb    al,0x4b
  407d25:	jecxz  0x407ce7
  407d27:	mov    ebp,0xd55f6ed8
  407d2c:	(bad)
  407d30:	sbb    al,0xff
  407d32:	hlt    
  407d33:	xchg   ebp,eax
  407d34:	loop   0x407d53
  407d36:	ds dec esi
  407d38:	lods   eax,DWORD PTR ds:[esi]
  407d39:	add    DWORD PTR [edx-0x322ab958],edi
  407d3f:	cmp    DWORD PTR [ecx],eax
  407d41:	dec    edi
  407d42:	fistp  DWORD PTR [ecx]
  407d44:	jns    0x407d37
  407d46:	and    edi,esp
  407d48:	adc    cl,bl
  407d4a:	pop    edx
  407d4b:	inc    ebp
  407d4c:	das    
  407d4d:	jne    0x407d8c
  407d4f:	in     al,0xd
  407d51:	les    edx,FWORD PTR [esi+0x6309db2b]
  407d57:	adc    BYTE PTR [esi+0x4f],ch
  407d5a:	paddq  mm7,QWORD PTR [eax+0x2d224a3d]
  407d61:	push   eax
  407d62:	retf   0xd02c
  407d65:	mov    al,0x1f
  407d67:	add    BYTE PTR [esi-0xc],ah
  407d6a:	pop    esp
  407d6b:	loopne 0x407dd9
  407d6d:	call   0x7b9bf19e
  407d72:	pop    ecx
  407d73:	inc    edx
  407d74:	(bad)  
  407d75:	pop    ebp
  407d76:	in     al,0x42
  407d78:	xchg   edx,eax
  407d79:	js     0x407d54
  407d7b:	mov    DWORD PTR [edx+ecx*1-0x666da78a],edi
  407d82:	lods   eax,DWORD PTR ds:[esi]
  407d83:	test   DWORD PTR ds:0x7754aecb,ebx
  407d89:	cmp    BYTE PTR [eax-0x72],0xee
  407d8d:	(bad)  
  407d8e:	sbb    eax,0x56b3a4f3
  407d93:	push   ds
  407d94:	or     eax,0x6b6192a
  407d99:	mov    ah,0x26
  407d9b:	sbb    ah,BYTE PTR [ebx-0x5f56940b]
  407da1:	adc    al,0x85
  407da3:	scas   al,BYTE PTR es:[edi]
  407da4:	adc    cl,BYTE PTR [esi-0x1b3a2399]
  407daa:	add    esp,DWORD PTR ds:0xa6e3464e
  407db0:	aas    
  407db1:	outs   dx,DWORD PTR ds:[esi]
  407db2:	shl    ecx,0x4
  407db5:	add    cl,ch
  407db7:	pushf  
  407db8:	loop   0x407d40
  407dba:	xor    ah,BYTE PTR [ebx-0x17]
  407dbd:	les    esi,FWORD PTR [esi+0x66239ca4]
  407dc3:	loope  0x407d96
  407dc5:	mov    ebp,0x861d30ad
  407dca:	jns    0x407e24
  407dcc:	out    0xff,al
  407dce:	or     DWORD PTR [ecx],eax
  407dd0:	jb     0x407de5
  407dd2:	mov    esp,0x75b21d03
  407dd7:	push   ebp
  407dd8:	and    ebx,DWORD PTR [eax]
  407dda:	or     BYTE PTR [eax],ch
  407ddc:	ds pop ebx
  407dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ddf:	mov    cl,0xc0
  407de1:	out    0x7b,al
  407de3:	and    ebp,esp
  407de5:	sbb    DWORD PTR [esi-0x6f],edi
  407de8:	jb     0x407e66
  407dea:	hlt    
  407deb:	(bad)  
  407dec:	out    dx,eax
  407ded:	out    0xc5,eax
  407def:	fst    DWORD PTR [esi]
  407df1:	or     al,0x99
  407df3:	int    0x2f
  407df5:	loop   0x407e24
  407df7:	ins    DWORD PTR es:[edi],dx
  407df8:	leave  
  407df9:	jbe    0x407e18
  407dfb:	mov    edx,0x2ebb42ab
  407e00:	js     0x407db1
  407e02:	mov    BYTE PTR [ebx],bl
  407e04:	pop    edi
  407e05:	mov    esi,0xf44ede70
  407e0a:	add    esi,DWORD PTR [ebp+0x441f2a2f]
  407e10:	adc    DWORD PTR ds:0x7923bd2a,ebx
  407e16:	jecxz  0x407e59
  407e18:	inc    esi
  407e19:	xor    dh,cl
  407e1b:	daa    
  407e1c:	ret    0x6759
  407e1f:	outs   dx,DWORD PTR ds:[esi]
  407e20:	popa   
  407e21:	adc    eax,edx
  407e23:	cmp    BYTE PTR [eax-0x42],dh
  407e26:	jge    0x407dd3
  407e28:	cmp    BYTE PTR [esi],al
  407e2a:	mov    WORD PTR [ebp+0x342e8931],ds
  407e30:	adc    cl,BYTE PTR [ecx+0x6]
  407e33:	call   0x9091d30c
  407e38:	and    al,0x4
  407e3a:	xlat   BYTE PTR ds:[ebx]
  407e3b:	cmp    DWORD PTR [edx-0x6da91805],ebp
  407e41:	cmp    cl,BYTE PTR [esi+0x63]
  407e44:	cmp    BYTE PTR [edx+0x60],0x88
  407e48:	out    dx,al
  407e49:	test   ebx,edx
  407e4b:	mov    bl,0x10
  407e4d:	jl     0x407ebe
  407e4f:	lods   al,BYTE PTR ds:[esi]
  407e50:	pop    edx
  407e51:	inc    esi
  407e52:	or     eax,DWORD PTR [eax+0xb]
  407e55:	adc    eax,ebx
  407e57:	mov    BYTE PTR [ebx-0x45b2b050],cl
  407e5d:	xchg   esi,eax
  407e5e:	leave  
  407e5f:	frndint 
  407e61:	jg     0x407e29
  407e63:	mov    edx,ecx
  407e65:	loop   0x407e0f
  407e67:	sub    eax,0xec7d1bc7
  407e6c:	les    ecx,FWORD PTR [esi+0x6e]
  407e6f:	fst    DWORD PTR [edi+0x5529df56]
  407e75:	mov    bh,0xe7
  407e77:	push   edi
  407e78:	stos   DWORD PTR es:[edi],eax
  407e79:	(bad)  
  407e7a:	out    0x31,eax
  407e7c:	push   edx
  407e7d:	sbb    ebx,edx
  407e7f:	adc    bh,BYTE PTR [ecx-0x2f]
  407e82:	dec    esi
  407e83:	add    DWORD PTR [ebx+edx*2-0x2d],eax
  407e87:	mov    esi,0x4db52ee8
  407e8c:	dec    eax
  407e8d:	push   ecx
  407e8e:	xchg   ebp,eax
  407e8f:	pop    ss
  407e90:	call   0x597d:0x7dc1bb0e
  407e97:	fimul  DWORD PTR [esi+0x2ac87ee5]
  407e9d:	xchg   edi,eax
  407e9e:	lea    ebx,[esi]
  407ea0:	aam    0x40
  407ea2:	div    BYTE PTR [ecx]
  407ea4:	or     esi,ebx
  407ea6:	jmp    0xbab8:0xdbcf6bd5
  407ead:	lods   eax,DWORD PTR ds:[esi]
  407eae:	icebp  
  407eaf:	fimul  WORD PTR [ebx]
  407eb1:	repnz fistp WORD PTR [esi-0x15]
  407eb5:	mov    al,ds:0x88beffe6
  407eba:	jg     0x407e40
  407ebc:	cli    
  407ebd:	into   
  407ebe:	jbe    0x407f2e
  407ec0:	in     al,0x3f
  407ec2:	imul   ecx,DWORD PTR [ebp-0x7dc7f925],0x3698d464
  407ecc:	add    BYTE PTR [esi+0x6d199443],0x65
  407ed3:	call   0x435b:0x3f106695
  407eda:	aas    
  407edb:	dec    esp
  407edc:	sub    BYTE PTR ds:[eax],0x84
  407ee0:	cs mov esi,0xc9046235
  407ee6:	cmp    cl,cl
  407ee8:	ss stc 
  407eea:	lock scas eax,DWORD PTR es:[edi]
  407eec:	test   al,0xb2
  407eee:	pop    ebx
  407eef:	repz push ss
  407ef1:	mov    edi,0xf6f01d77
  407ef6:	jmp    0x407f6b
  407ef8:	inc    esi
  407ef9:	lock sub eax,0xbf9e8059
  407eff:	dec    edi
  407f00:	cmp    DWORD PTR [esi+edi*1],esp
  407f03:	or     ch,BYTE PTR [ebp-0x546d201e]
  407f09:	mov    esp,0xf419f356
  407f0e:	sub    DWORD PTR ds:0xbeadf723,ebx
  407f14:	sub    eax,0xa4eb916b
  407f19:	ja     0x407ea6
  407f1b:	jb     0x407f46
  407f1d:	clc    
  407f1e:	or     DWORD PTR [eax+0x5122f452],ebx
  407f24:	retf   0xd75f
  407f27:	int    0x44
  407f29:	sub    eax,ebp
  407f2b:	adc    DWORD PTR [esi+esi*4+0x735d5c0a],edi
  407f32:	in     al,dx
  407f33:	and    dh,BYTE PTR [edi-0xcbdc9c8]
  407f39:	lock in al,0xf2
  407f3c:	xor    esp,DWORD PTR [eax]
  407f3e:	or     dh,BYTE PTR [ebp-0x3]
  407f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f42:	into   
  407f43:	js     0x407f2c
  407f45:	add    ebx,ecx
  407f47:	pop    ebp
  407f48:	push   es
  407f49:	stos   BYTE PTR es:[edi],al
  407f4a:	inc    esi
  407f4b:	sub    ecx,DWORD PTR ds:0xb996b8e7
  407f51:	jnp    0x407f21
  407f53:	call   0xc056e5d8
  407f58:	sbb    DWORD PTR [esi+0x53d98343],ecx
  407f5e:	pusha  
  407f5f:	sar    BYTE PTR [esi],0x75
  407f62:	nop
  407f63:	pop    ds
  407f64:	cmp    eax,0x608fd09e
  407f69:	mov    bh,BYTE PTR [ecx+0x261b18fe]
  407f6f:	sub    cl,dh
  407f71:	out    dx,eax
  407f72:	jne    0x407fd1
  407f74:	jle    0x407ef9
  407f76:	inc    edx
  407f77:	dec    ebx
  407f78:	int3   
  407f79:	and    eax,0xf48c43e
  407f7e:	mov    esp,0xc092a829
  407f83:	dec    ecx
  407f84:	arpl   WORD PTR [edi-0x69],bp
  407f87:	push   edi
  407f88:	mov    bh,0xa
  407f8a:	xlat   BYTE PTR ds:[ebx]
  407f8b:	fwait
  407f8c:	mov    cl,0xe
  407f8e:	mov    ds:0x52bfbf89,eax
  407f93:	shr    edi,1
  407f95:	shr    BYTE PTR [eax],cl
  407f97:	(bad)  
  407f98:	stos   BYTE PTR es:[edi],al
  407f99:	jl     0x407f32
  407f9b:	mov    ds,WORD PTR [eax-0xf0ee596]
  407fa1:	outs   dx,DWORD PTR ds:[esi]
  407fa2:	call   0xc0fc02ee
  407fa7:	dec    edi
  407fa8:	fs push ebx
  407faa:	jmp    FWORD PTR [ecx+0x120d7929]
  407fb0:	cmp    ebx,DWORD PTR [ebp+0x6d]
  407fb3:	fwait
  407fb4:	arpl   WORD PTR [edi-0x680bb7a4],bx
  407fba:	sbb    dl,BYTE PTR [ebp+0x4e]
  407fbd:	xor    edx,esi
  407fbf:	inc    esp
  407fc0:	mov    ebp,0xc7bfd2ce
  407fc5:	sub    dl,bh
  407fc7:	fstp   st(0)
  407fc9:	rcr    DWORD PTR [ebx+0x45766b48],0xd2
  407fd0:	cmp    DWORD PTR [ebx],ecx
  407fd2:	aas    
  407fd3:	push   edx
  407fd4:	scas   eax,DWORD PTR es:[edi]
  407fd5:	out    dx,al
  407fd6:	push   ecx
  407fd7:	sbb    ecx,0x30a691a1
  407fdd:	scas   eax,DWORD PTR es:[edi]
  407fde:	add    cl,BYTE PTR [esi+0x469732de]
  407fe4:	clc    
  407fe5:	aaa    
  407fe6:	jo     0x408062
  407fe8:	(bad)  
  407fe9:	jmp    0xf00c:0x9621d1f6
  407ff0:	mov    ebx,DWORD PTR [ecx+0x53f02654]
  407ff6:	add    al,0x8c
  407ff8:	(bad)  
  407ff9:	cld    
  407ffa:	sbb    esp,ebp
  407ffc:	push   0x6f18b726
  408001:	dec    esp
  408002:	xchg   ecx,eax
  408003:	jo     0x407fcb
  408005:	dec    ebp
  408006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408007:	mov    ds:0x6c1ce3d0,al
  40800c:	leave  
  40800d:	or     BYTE PTR [eax],dh
  40800f:	mov    ecx,0xc4b2429e
  408014:	or     DWORD PTR [edi-0x4f321e6c],edi
  40801a:	rol    ah,0x17
  40801d:	push   eax
  40801e:	ret    0xece0
  408021:	das    
  408022:	outs   dx,DWORD PTR ds:[esi]
  408023:	cmp    eax,0x203dfe3e
  408028:	sub    BYTE PTR [ecx-0x6e],dh
  40802b:	xor    ebp,edi
  40802d:	enter  0xe444,0xb6
  408031:	int3   
  408032:	jno    0x4080a6
  408034:	mov    eax,0x999b66d9
  408039:	fiadd  WORD PTR [ecx]
  40803b:	push   bx
  40803d:	cmp    eax,0x3c9b252
  408042:	xor    DWORD PTR [eax],eax
  408044:	dec    esi
  408045:	sbb    al,0x6e
  408047:	cmp    bh,bh
  408049:	out    dx,al
  40804a:	xchg   esi,eax
  40804b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804c:	push   es
  40804d:	imul   edi,DWORD PTR [edi-0x7c00581],0xffffffee
  408054:	dec    esi
  408055:	mov    ebp,0xe7522521
  40805a:	add    esp,DWORD PTR [ecx-0x2ee72938]
  408060:	out    0xe2,al
  408062:	adc    eax,ebp
  408064:	out    0x83,eax
  408066:	jp     0x408000
  408068:	in     eax,dx
  408069:	cwde   
  40806a:	add    BYTE PTR [esi+0x28],0x5a
  40806e:	or     DWORD PTR [ecx+ebx*1-0x2e],ebp
  408072:	clc    
  408073:	pusha  
  408074:	scas   eax,DWORD PTR es:[edi]
  408075:	pop    eax
  408076:	js     0x408050
  408078:	test   eax,0xc90b0670
  40807d:	imul   esi,DWORD PTR [eax+eax*2],0x7d
  408081:	inc    esi
  408082:	sar    DWORD PTR [ecx-0x9],0x24
  408086:	iret   
  408087:	pop    esi
  408088:	lods   eax,DWORD PTR ds:[esi]
  408089:	pop    es
  40808a:	rol    DWORD PTR [ecx+esi*1+0x2fdeae59],0xb9
  408092:	retf   
  408093:	addr16 push esp
  408095:	jb     0x4080d6
  408097:	int3   
  408098:	and    al,0x97
  40809a:	daa    
  40809b:	bound  esi,QWORD PTR [ecx]
  40809d:	test   DWORD PTR [edi+0x6b431f97],eax
  4080a3:	fs pop esi
  4080a5:	es pop ecx
  4080a7:	add    esi,DWORD PTR [eax]
  4080a9:	jle    0x4080d0
  4080ab:	or     al,0x89
  4080ad:	(bad)  [ecx]
  4080af:	out    dx,eax
  4080b0:	or     edi,ebx
  4080b2:	(bad)  
  4080b3:	aas    
  4080b4:	or     ch,al
  4080b6:	cld    
  4080b7:	xchg   edi,eax
  4080b8:	adc    al,0xde
  4080ba:	lahf   
  4080bb:	xchg   BYTE PTR [eax+esi*8],bl
  4080be:	mov    ch,0x64
  4080c0:	xchg   si,ax
  4080c2:	fdiv   DWORD PTR [ecx-0x1c]
  4080c5:	dec    esp
  4080c6:	(bad)  
  4080c7:	out    dx,eax
  4080c8:	mov    al,ds:0x9f4d24a8
  4080cd:	int    0x84
  4080cf:	jnp    0x4080ce
  4080d1:	adc    BYTE PTR [edx-0x12],bl
  4080d4:	ins    DWORD PTR es:[edi],dx
  4080d5:	mov    ecx,0xc71818d1
  4080da:	or     edi,DWORD PTR [edi-0x3]
  4080dd:	mov    dh,0x74
  4080df:	ins    BYTE PTR es:[edi],dx
  4080e0:	mov    eax,ds:0xd6f55ca9
  4080e5:	cdq    
  4080e6:	mov    esp,0x54b9abe8
  4080eb:	out    0x3b,eax
  4080ed:	xor    esi,edi
  4080ef:	pop    ebx
  4080f0:	sbb    al,0xca
  4080f2:	xchg   esp,eax
  4080f3:	out    0xe9,eax
  4080f5:	aaa    
  4080f6:	call   0xa21b0c43
  4080fb:	xchg   edx,eax
  4080fc:	xchg   DWORD PTR ds:0xf26644cf,eax
  408102:	adc    BYTE PTR [eax+eax*8-0x31],al
  408106:	push   ebx
  408107:	and    al,0x19
  408109:	ja     0x4080f9
  40810b:	jecxz  0x40812a
  40810d:	out    0xb2,al
  40810f:	jnp    0x4080e0
  408111:	sub    al,0xe1
  408113:	jg     0x408188
  408115:	imul   esi,DWORD PTR [edi],0x2c8af512
  40811b:	into   
  40811c:	imul   edi,ebp,0x8e296e2f
  408122:	pusha  
  408123:	push   edx
  408124:	push   0xffffff9f
  408126:	mov    bh,0x5f
  408128:	and    eax,0x2b7e01c9
  40812d:	sbb    DWORD PTR [ebp+0x7],ebx
  408130:	(bad)  
  408131:	pop    esi
  408132:	push   ds
  408133:	push   cs
  408134:	div    DWORD PTR [ebx+eax*4-0x24ac6187]
  40813b:	pop    ds
  40813c:	(bad)  
  40813d:	xchg   esp,eax
  40813e:	loope  0x4080e5
  408140:	fimul  DWORD PTR [ebx]
  408142:	in     al,dx
  408143:	inc    esp
  408144:	xor    al,0x28
  408146:	lods   al,BYTE PTR ds:[esi]
  408147:	retf   
  408148:	test   al,0xa6
  40814a:	and    bl,BYTE PTR [ebx-0x2db13e3f]
  408150:	hlt    
  408151:	leave  
  408152:	mov    cl,0x2
  408154:	call   0x486271dc
  408159:	jne    0x4081c9
  40815b:	shr    cl,0x57
  40815e:	xchg   edi,eax
  40815f:	cs inc esp
  408161:	das    
  408162:	in     al,dx
  408163:	push   ds
  408164:	push   eax
  408165:	cmp    edx,edi
  408167:	dec    edi
  408168:	mov    eax,ds:0x1fc0625c
  40816d:	pop    ss
  40816e:	and    bh,BYTE PTR [eax+ecx*4]
  408171:	mov    esp,DWORD PTR [ebx]
  408173:	fcomp  QWORD PTR [edx]
  408175:	loopne 0x408118
  408177:	mov    BYTE PTR [ecx-0x1696d380],al
  40817d:	mov    edx,esp
  40817f:	dec    edx
  408180:	adc    BYTE PTR [edi-0x5da2c9f0],0x2c
  408187:	dec    esi
  408188:	sbb    BYTE PTR [ecx-0x599633d2],0xce
  40818f:	add    eax,0x8556d3e2
  408194:	add    al,0x9d
  408196:	dec    eax
  408197:	or     edi,eax
  408199:	stos   DWORD PTR es:[edi],eax
  40819a:	mov    dl,0xd7
  40819c:	(bad)  
  40819d:	call   0x6d92:0x927c759
  4081a4:	pop    ds
  4081a5:	adc    eax,0xf6388f33
  4081aa:	or     dh,dl
  4081ac:	mov    ?,WORD PTR [ebx-0x7b]
  4081af:	adc    DWORD PTR [esi],esp
  4081b1:	aam    0xfd
  4081b3:	mov    dl,0xb
  4081b5:	bound  ecx,QWORD PTR [ebx-0x9]
  4081b8:	or     eax,ecx
  4081ba:	adc    DWORD PTR [esi],0x3f
  4081bd:	sub    bl,BYTE PTR [edx]
  4081bf:	sbb    ebp,0xffffffc7
  4081c2:	test   BYTE PTR [esi+0x23b4029e],ch
  4081c8:	inc    ebp
  4081c9:	pop    ecx
  4081ca:	adc    bh,ah
  4081cc:	out    0x83,eax
  4081ce:	fdiv   st(4),st
  4081d0:	inc    ecx
  4081d1:	shl    BYTE PTR [edx],1
  4081d3:	ds jo  0x408211
  4081d6:	clc    
  4081d7:	iret   
  4081d8:	stos   BYTE PTR es:[edi],al
  4081d9:	mov    eax,0xd4de1ca
  4081de:	in     eax,dx
  4081df:	xchg   edi,eax
  4081e0:	sub    al,0x76
  4081e2:	jle    0x40819c
  4081e4:	adc    eax,0xba868aca
  4081e9:	(bad)  [ebx+0x4e]
  4081ec:	scas   al,BYTE PTR es:[edi]
  4081ed:	jne    0x4081fd
  4081ef:	(bad)  
  4081f0:	icebp  
  4081f1:	sahf   
  4081f2:	pop    ebp
  4081f3:	rcl    BYTE PTR [edx+ebx*8+0x717a241b],1
  4081fa:	cmp    bl,BYTE PTR [eax+0x2eff914f]
  408200:	adc    esp,0x5f
  408203:	mov    bh,0x63
  408205:	and    bl,BYTE PTR [esp+eiz*4+0x5d5d464a]
  40820c:	(bad)
  40820f:	mov    bh,0xb9
  408211:	adc    al,0x7d
  408213:	iret   
  408214:	sbb    ebp,DWORD PTR ds:0x1d3cad6a
  40821a:	and    al,0xa
  40821c:	shr    BYTE PTR [edi+0x5d2e4159],0xb0
  408223:	out    0x64,al
  408225:	and    dl,0x2c
  408228:	sar    DWORD PTR [esi-0x7bda2103],cl
  40822e:	jb     0x4081f4
  408230:	jl     0x408249
  408232:	int    0xb3
  408234:	repnz cmp al,0xc3
  408237:	jg     0x40820d
  408239:	bound  esp,QWORD PTR [edi-0x2e]
  40823c:	adc    al,0xcb
  40823e:	adc    BYTE PTR [edx-0x30],al
  408241:	jl     0x408256
  408243:	ins    BYTE PTR es:[edi],dx
  408244:	ror    BYTE PTR [edi-0x44],0x6
  408248:	jge    0x408241
  40824a:	mov    dh,0xa8
  40824c:	adc    BYTE PTR [esi+0x3e91da8e],cl
  408252:	sbb    ecx,esi
  408254:	jmp    0xa1d53bb5
  408259:	retf   0xf46
  40825c:	test   BYTE PTR [ecx+0x48c834b3],ah
  408262:	jle    0x4082c1
  408264:	sbb    al,0xe9
  408266:	xor    DWORD PTR [ebx],ebp
  408268:	stc    
  408269:	int    0x18
  40826b:	sub    ah,BYTE PTR [edx-0x4a9ac39e]
  408271:	icebp  
  408272:	out    dx,al
  408273:	rol    dl,0x10
  408276:	test   eax,eax
  408278:	sub    eax,0xbcdfd1fe
  40827d:	xchg   ebx,eax
  40827e:	aas    
  40827f:	iret   
  408280:	aas    
  408281:	pop    eax
  408282:	push   cs
  408283:	xlat   BYTE PTR ds:[ebx]
  408284:	jbe    0x4082ef
  408286:	inc    esp
  408287:	adc    DWORD PTR [ecx],esp
  408289:	xor    bl,dh
  40828b:	mov    dh,0x6b
  40828d:	(bad)  
  40828f:	jo     0x408306
  408291:	jmp    0x2dff:0xc13cb2d9
  408298:	bound  eax,QWORD PTR [esi]
  40829a:	lahf   
  40829b:	mov    edx,DWORD PTR [ebx]
  40829d:	adc    al,0x4a
  40829f:	call   0xe6dfd116
  4082a4:	xor    edi,0x4f845aa9
  4082aa:	loopne 0x4082bd
  4082ac:	sub    BYTE PTR [ebx+edi*4],bh
  4082af:	sub    eax,DWORD PTR [ebx-0x50]
  4082b2:	sub    bl,BYTE PTR [eax+0x7b68b0e2]
  4082b8:	pusha  
  4082b9:	jge    0x4082e6
  4082bb:	mov    esp,0xf9b46711
  4082c0:	inc    ecx
  4082c1:	cvtpi2ps xmm5,mm0
  4082c4:	mov    bh,0x78
  4082c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082c7:	mov    edi,ebx
  4082c9:	imul   edi,DWORD PTR [edi],0xffffffcd
  4082cc:	jmp    0x4fce96b5
  4082d1:	push   ds
  4082d2:	fsub   st,st(0)
  4082d4:	(bad)  
  4082d5:	mov    ds:0x3a77029d,al
  4082da:	repz pop es
  4082dc:	pop    esi
  4082dd:	cmp    BYTE PTR [edx+0x7fe8c97e],ah
  4082e3:	cwde   
  4082e4:	cmp    esp,DWORD PTR [edi+0x4c]
  4082e7:	jae    0x4082eb
  4082e9:	fs and eax,esp
  4082ec:	mov    cl,0xab
  4082ee:	cmc    
  4082ef:	and    ebx,eax
  4082f1:	repnz (bad) 
  4082f3:	xor    BYTE PTR [ebx+0x2692bd03],ah
  4082f9:	fs jmp 0x408363
  4082fc:	xor    DWORD PTR [edx+ebp*8+0x67cd3d93],ebp
  408303:	pushf  
  408304:	out    dx,eax
  408305:	or     BYTE PTR [eax],dh
  408307:	dec    esp
  408308:	pop    esi
  408309:	push   ds
  40830a:	cmp    ebx,eax
  40830c:	adc    esi,0xffffffc1
  40830f:	outs   dx,BYTE PTR ds:[esi]
  408310:	xor    BYTE PTR [ebx],ah
  408312:	sbb    ebx,esi
  408314:	adc    DWORD PTR [esi-0x63],0x19
  408318:	pop    esi
  408319:	in     eax,0x31
  40831b:	sbb    edi,DWORD PTR [eax]
  40831d:	dec    eax
  40831e:	scas   eax,DWORD PTR es:[edi]
  40831f:	lock leave 
  408321:	retf   0xd98b
  408324:	dec    edi
  408325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408326:	ds push ebp
  408328:	std    
  408329:	cdq    
  40832a:	pop    es
  40832b:	xchg   ebp,eax
  40832c:	adc    al,BYTE PTR [ecx]
  40832e:	imul   ebp,DWORD PTR [ebx],0x21
  408331:	pop    es
  408332:	and    BYTE PTR [ebp-0x2912bf45],bh
  408338:	jmp    0x40833b
  40833a:	popf   
  40833b:	xchg   DWORD PTR [edi+0x69],eax
  40833e:	pop    es
  40833f:	xor    esi,ebp
  408341:	sub    ecx,0x7
  408344:	lods   al,BYTE PTR ds:[esi]
  408345:	test   bl,dh
  408347:	(bad)  
  408348:	js     0x408352
  40834a:	xchg   edi,eax
  40834b:	cdq    
  40834c:	lock repnz in al,dx
  40834f:	mov    bh,0x70
  408351:	sahf   
  408352:	mov    eax,esp
  408354:	pop    ss
  408355:	mov    ebp,DWORD PTR fs:[ebx-0x7b]
  408359:	pop    ss
  40835a:	jmp    0xb56bc888
  40835f:	mov    ds:0x1c029a2e,al
  408364:	xor    esp,eax
  408366:	scas   eax,DWORD PTR es:[edi]
  408367:	cli    
  408368:	int3   
  408369:	pop    edx
  40836a:	fwait
  40836b:	loope  0x40831c
  40836d:	inc    ebp
  40836e:	mov    ds:0xa8ca265d,eax
  408373:	push   ebp
  408374:	mov    ebp,0x563dcdc9
  408379:	int3   
  40837a:	test   al,0xae
  40837c:	or     BYTE PTR [ebx],ah
  40837e:	or     esp,ebp
  408380:	stos   DWORD PTR es:[edi],eax
  408381:	dec    ecx
  408382:	cmp    edi,DWORD PTR [eax]
  408384:	inc    eax
  408385:	and    BYTE PTR [ecx],cl
  408387:	shr    ecx,0x14
  40838a:	call   0x9007325e
  40838f:	(bad)  
  408390:	jmp    0x7ded:0x6feb0e8
  408397:	sbb    ecx,DWORD PTR [ecx]
  408399:	outs   dx,BYTE PTR ds:[esi]
  40839a:	xor    edx,DWORD PTR [edi+0x69]
  40839d:	js     0x4083af
  40839f:	dec    esi
  4083a0:	in     al,0x4e
  4083a2:	mov    dh,0xad
  4083a4:	inc    edi
  4083a5:	outs   dx,BYTE PTR ds:[esi]
  4083a6:	test   DWORD PTR [ecx*2-0x5aa904d],esp
  4083ad:	cmp    edx,ecx
  4083af:	sti    
  4083b0:	test   al,0x3e
  4083b2:	stos   BYTE PTR es:[edi],al
  4083b3:	jno    0x408392
  4083b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b6:	ss sbb esi,DWORD PTR ss:[ebx-0x42]
  4083bb:	scas   eax,DWORD PTR es:[edi]
  4083bc:	in     eax,0x81
  4083be:	pop    edi
  4083bf:	pop    ebp
  4083c0:	repz push DWORD PTR [esi+ecx*8-0x67e90357]
  4083c8:	jnp    0x408395
  4083ca:	and    al,0x6e
  4083cc:	sub    dl,BYTE PTR [esi]
  4083ce:	push   ebp
  4083cf:	fisttp DWORD PTR ss:[edi-0x39]
  4083d3:	fs jl  0x408451
  4083d6:	scas   al,BYTE PTR es:[edi]
  4083d7:	ins    DWORD PTR es:[edi],dx
  4083d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d9:	cmp    dl,0x2f
  4083dc:	sbb    BYTE PTR [edx+0x19c21978],cl
  4083e2:	fild   QWORD PTR [ecx-0x536444ff]
  4083e8:	pop    ebp
  4083e9:	call   0x6981:0xdc3c8745
  4083f0:	int    0x24
  4083f2:	lock test DWORD PTR [ebx],esi
  4083f5:	mov    edi,0x1bec8141
  4083fa:	mov    esi,0x395e8fe7
  4083ff:	add    eax,0xa2681acf
  408404:	(bad)  
  408406:	mov    dh,0x14
  408408:	pop    edx
  408409:	scas   al,BYTE PTR es:[edi]
  40840a:	(bad)  
  40840b:	xor    bh,BYTE PTR [edi+0x23]
  40840e:	ss pop edx
  408410:	dec    esi
  408411:	ins    BYTE PTR es:[edi],dx
  408412:	push   ss
  408413:	sar    DWORD PTR [ebx+0x77c1cf57],1
  408419:	pop    esp
  40841a:	mov    ah,0x50
  40841c:	in     al,0x7b
  40841e:	sbb    ebx,DWORD PTR [edx+edx*4+0x10a7d519]
  408425:	adc    BYTE PTR [bx+di],0xc3
  408429:	inc    eax
  40842a:	cmc    
  40842b:	xchg   ebp,eax
  40842c:	(bad)  
  40842d:	(bad)  
  40842e:	fdivp  st(7),st
  408430:	pop    ds
  408431:	push   cs
  408432:	xor    al,BYTE PTR [edi-0x57]
  408435:	into   
  408436:	and    DWORD PTR [edx+0x6b],eax
  408439:	pop    eax
  40843a:	mov    ebx,0xe613c7f3
  40843f:	test   DWORD PTR [ecx+0x1b],ebx
  408442:	jle    0x408470
  408444:	mov    bl,0x6d
  408446:	push   ebx
  408447:	xor    DWORD PTR [esi],eax
  408449:	ss in  al,0x1b
  40844c:	sub    DWORD PTR [eax-0x21],edi
  40844f:	(bad)  
  408450:	into   
  408451:	icebp  
  408452:	fild   QWORD PTR [esi]
  408454:	out    dx,eax
  408455:	push   ebx
  408456:	mul    DWORD PTR [esp+esi*8-0x59c8069c]
  40845d:	sbb    BYTE PTR [eax+ebx*2],ch
  408460:	mov    dl,0x25
  408462:	add    bl,BYTE PTR [ecx]
  408464:	dec    eax
  408465:	ss and dl,bl
  408468:	xchg   BYTE PTR [esi-0x34],ch
  40846b:	daa    
  40846c:	mov    dl,0x27
  40846e:	push   ebx
  40846f:	sub    BYTE PTR [ecx],dh
  408471:	push   eax
  408472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408473:	mov    bl,0xe7
  408475:	xchg   ecx,eax
  408476:	push   ds
  408477:	sub    ecx,DWORD PTR [ebx-0x551b3e0b]
  40847d:	sbb    ah,dl
  40847f:	or     bl,BYTE PTR [ebx+0x5e17e23]
  408485:	inc    eax
  408486:	repz mov dh,0xc8
  408489:	push   ss
  40848a:	pop    edi
  40848b:	mov    ds:0xe459dc15,eax
  408490:	(bad)  
  408491:	iret   
  408492:	lods   al,BYTE PTR ds:[esi]
  408493:	test   BYTE PTR [ecx-0x922fde5],dh
  408499:	and    DWORD PTR [ecx+eax*1+0x43],eax
  40849d:	loope  0x408448
  40849f:	mov    edx,0x714c0bdc
  4084a4:	(bad)  
  4084a5:	jmp    0x9767:0xa525b009
  4084ac:	dec    esp
  4084ad:	out    dx,eax
  4084ae:	xor    bl,bh
  4084b0:	clc    
  4084b1:	(bad)  
  4084b2:	xchg   edx,eax
  4084b3:	loop   0x408533
  4084b5:	popa   
  4084b6:	sub    eax,0xf6619ec8
  4084bb:	les    ebp,FWORD PTR [edi+ebp*2+0x6f]
  4084bf:	pop    ss
  4084c0:	ins    DWORD PTR es:[edi],dx
  4084c1:	fldcw  WORD PTR [ebx]
  4084c3:	mov    ds:0xd9bc6edd,eax
  4084c8:	mov    eax,0x49919db0
  4084cd:	xchg   esi,eax
  4084ce:	out    0x97,eax
  4084d0:	hlt    
  4084d1:	fisubr WORD PTR cs:[edi-0x693779af]
  4084d8:	push   0x29d2f62b
  4084dd:	cli    
  4084de:	aas    
  4084df:	mov    al,0xa5
  4084e1:	mov    ah,0xc6
  4084e3:	pop    ebx
  4084e4:	(bad)  
  4084e5:	inc    DWORD PTR [edi]
  4084e7:	out    dx,eax
  4084e8:	pushf  
  4084e9:	xor    ah,dl
  4084eb:	ja     0x408522
  4084ed:	jge    0x40855b
  4084ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084f0:	ins    DWORD PTR es:[edi],dx
  4084f1:	outs   dx,DWORD PTR ds:[esi]
  4084f2:	mov    ebp,0x5792cc72
  4084f7:	aam    0xed
  4084f9:	xor    DWORD PTR [ebx+0x566fe063],ebx
  4084ff:	add    eax,0x9ad7981d
  408504:	jno    0x408568
  408506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408507:	mov    cl,0x58
  408509:	mov    ds:0x1a8becc8,al
  40850e:	(bad)
  408512:	add    eax,0xb3749b58
  408517:	out    dx,eax
  408518:	xchg   ebx,eax
  408519:	std    
  40851a:	gs call 0xc5ae:0x4afbba10
  408522:	ret    0xbcef
  408525:	sbb    eax,0x8aa9d961
  40852a:	push   ebp
  40852b:	ss sub eax,0x57880ee0
  408531:	ret    0x6d31
  408534:	or     ebp,ecx
  408536:	push   edi
  408537:	retf   0xc919
  40853a:	outs   dx,DWORD PTR ds:[esi]
  40853b:	lea    ecx,[esp+edx*4+0x61]
  40853f:	aad    0x9b
  408541:	out    dx,eax
  408542:	xor    DWORD PTR [edi],edx
  408544:	fidiv  DWORD PTR [ebx]
  408546:	fisttp WORD PTR [edi-0x5c]
  408549:	inc    ebx
  40854a:	xor    BYTE PTR [edx+esi*1-0x3188093f],dh
  408551:	pop    eax
  408552:	sbb    ebx,edi
  408554:	jae    0x408537
  408556:	test   BYTE PTR [ebp-0x8],dl
  408559:	aaa    
  40855a:	cmp    ebp,DWORD PTR [eax+0x52]
  40855d:	and    al,0x18
  40855f:	adc    DWORD PTR cs:[ecx+0x782d6e05],ecx
  408566:	fcomp  QWORD PTR [esi+0x5aefb8be]
  40856c:	cmp    BYTE PTR [edi+0x333e6984],cl
  408572:	loope  0x408555
  408574:	ins    BYTE PTR es:[edi],dx
  408575:	cld    
  408576:	inc    eax
  408577:	shl    esp,1
  408579:	mov    eax,0x3abaa3e2
  40857e:	test   eax,0xf9477c4a
  408583:	test   al,0x75
  408585:	inc    eax
  408586:	jmp    0x48f2:0x5eabebfc
  40858d:	mov    edx,DWORD PTR [esi-0x18cd682c]
  408593:	jle    0x408590
  408595:	icebp  
  408596:	call   0x57c8657c
  40859b:	pop    ebp
  40859c:	xchg   BYTE PTR [bx+si],al
  40859f:	fisub  DWORD PTR [edx+0x4d79d173]
  4085a5:	lea    ebx,[esi+0x4f]
  4085a8:	ret    
  4085a9:	cmp    eax,0x55133105
  4085ae:	dec    esi
  4085af:	pop    ebx
  4085b0:	(bad)  
  4085b1:	ins    BYTE PTR es:[edi],dx
  4085b2:	adc    DWORD PTR [ebx+ebp*4-0x75],esi
  4085b6:	ret    
  4085b7:	cmp    al,ch
  4085b9:	sar    DWORD PTR [eax],1
  4085bb:	mov    dh,0x67
  4085bd:	add    bl,BYTE PTR [eax-0x15f692ff]
  4085c3:	push   edx
  4085c4:	pop    ebx
  4085c5:	rol    BYTE PTR [edi],1
  4085c7:	sbb    DWORD PTR [edi],ebp
  4085c9:	mov    dl,0xaf
  4085cb:	ror    DWORD PTR [edi+edi*1+0xb7dd83b],cl
  4085d2:	mov    ecx,0xd3f568ed
  4085d7:	lds    ebx,FWORD PTR [esi-0x4]
  4085da:	cmp    al,dh
  4085dc:	mov    al,al
  4085de:	arpl   WORD PTR [edi],bp
  4085e0:	dec    edx
  4085e1:	inc    BYTE PTR ds:0x3eb740c2
  4085e7:	cmp    dl,al
  4085e9:	push   cs
  4085ea:	retf   0xb127
  4085ed:	int3   
  4085ee:	jp     0x4085e9
  4085f0:	push   eax
  4085f1:	cmp    al,0x31
  4085f3:	rol    DWORD PTR [edi+0x15],0x7
  4085f7:	xor    ah,BYTE PTR [ebp-0x10]
  4085fa:	jmp    0x4085cd
  4085fc:	mov    gs,eax
  4085fe:	dec    ebx
  4085ff:	lea    ebx,[eax+0x10]
  408602:	and    al,ah
  408604:	or     DWORD PTR ss:[ebx+eiz*8+0x28],eax
  408609:	adc    eax,0xeaec790d
  40860e:	ret    
  40860f:	rcr    dl,1
  408611:	sbb    eax,0xe9144c29
  408616:	or     al,0x4b
  408618:	fcom   st(7)
  40861a:	mov    DWORD PTR [ebx-0x1a0aba4f],0x7c37c916
  408624:	retf   
  408625:	lods   eax,DWORD PTR ds:[esi]
  408626:	sbb    al,ch
  408628:	add    al,0xf5
  40862a:	xor    edx,DWORD PTR [esp+eax*1]
  40862d:	imul   eax,ecx,0xffffffb3
  408630:	mov    al,BYTE PTR [ebp-0x6cd79278]
  408636:	lea    esi,ds:0x86c279ab
  40863c:	nop
  40863d:	jne    0x4086b7
  40863f:	inc    eax
  408640:	sub    edx,DWORD PTR [eax]
  408642:	xor    eax,eax
  408644:	adc    ebp,DWORD PTR [edx+0x24340a6a]
  40864a:	fadd   DWORD PTR [edx-0x4eb3cf9b]
  408650:	mov    dl,0x3
  408652:	inc    ebp
  408653:	mov    al,ds:0xcb87bd60
  408658:	xor    BYTE PTR [esp+eiz*4+0x1f],0xff
  40865d:	popf   
  40865e:	into   
  40865f:	cmp    al,0xb
  408661:	jns    0x408661
  408663:	xor    al,0xdd
  408665:	imul   esi,DWORD PTR [esi],0x6b
  408668:	xchg   BYTE PTR [edx],bh
  40866a:	jmp    0xa7cd:0x90b0f9d
  408671:	ins    BYTE PTR es:[edi],dx
  408672:	and    ah,dh
  408674:	push   es
  408675:	mov    ebp,0x55dd232e
  40867a:	dec    eax
  40867b:	in     eax,0x1d
  40867d:	sub    DWORD PTR [esi-0x39],0x6c
  408681:	in     eax,dx
  408682:	ds jp  0x4086e0
  408685:	sbb    al,0x1a
  408687:	das    
  408688:	jmp    0x4086d3
  40868a:	jg     0x408677
  40868c:	out    dx,al
  40868d:	xchg   ebx,eax
  40868e:	jbe    0x408673
  408690:	sub    BYTE PTR [ebx+0x4c79f17],al
  408696:	sbb    esi,ebx
  408698:	mov    ebp,0x805d694a
  40869d:	mov    dh,0x5f
  40869f:	mov    edx,0xa866461b
  4086a4:	xchg   esi,eax
  4086a5:	aaa    
  4086a6:	mov    ch,0x35
  4086a8:	out    dx,eax
  4086a9:	lea    eax,[ebp-0x3e9d05df]
  4086af:	popf   
  4086b0:	(bad)  
  4086b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086b2:	cli    
  4086b3:	es and ebp,ecx
  4086b6:	pop    eax
  4086b7:	fs adc ecx,edi
  4086ba:	repz ss and eax,0x8be0160b
  4086c1:	shr    DWORD PTR [ebp-0x75],cl
  4086c4:	mov    ?,WORD PTR [esi]
  4086c6:	jecxz  0x408709
  4086c8:	xor    eax,0x2d5a472f
  4086cd:	xor    al,0x8c
  4086cf:	fwait
  4086d0:	add    DWORD PTR [eax+0x77ba9046],ebx
  4086d6:	xchg   ebx,eax
  4086d7:	fwait
  4086d8:	mov    edi,0x1f6e39fb
  4086dd:	inc    ecx
  4086de:	push   cs
  4086df:	out    0x3f,al
  4086e1:	loop   0x4086a6
  4086e3:	mov    ds:0xf0b65313,al
  4086e8:	jb     0x408740
  4086ea:	or     DWORD PTR [esi+eiz*2-0x70],edx
  4086ee:	lahf   
  4086ef:	jmp    DWORD PTR [ecx+0x65553254]
  4086f5:	test   al,0x4c
  4086f7:	loop   0x408706
  4086f9:	sub    bh,bl
  4086fb:	jbe    0x408696
  4086fd:	je     0x4086fe
  4086ff:	adc    al,0x6d
  408701:	lods   al,BYTE PTR ds:[esi]
  408702:	sar    BYTE PTR [edx+0x542e427],cl
  408708:	js     0x4086a1
  40870a:	mov    ebp,0x543f4cc6
  40870f:	(bad)  
  408711:	sar    DWORD PTR ds:[esi+0x7d],0x91
  408716:	mov    ch,0x4e
  408718:	test   DWORD PTR [edi+0xc],eax
  40871b:	push   edi
  40871c:	cmp    al,dl
  40871e:	xor    ebx,DWORD PTR cs:[ebp+0x197ef78]
  408725:	es sahf 
  408727:	ja     0x4086d0
  408729:	neg    DWORD PTR [eax+ebx*4]
  40872c:	jae    0x40877e
  40872e:	mov    ebx,0x38041701
  408733:	push   ss
  408734:	or     al,0xd4
  408736:	sub    al,0x23
  408738:	(bad)  
  40873a:	mov    edi,0x4e81dc88
  40873f:	mov    bh,0x68
  408741:	mov    edi,0x78457983
  408746:	xlat   BYTE PTR ds:[ebx]
  408747:	sti    
  408748:	(bad)  
  408749:	imul   ebx,esi,0xfffffff6
  40874c:	xchg   ebp,eax
  40874d:	mov    edi,DWORD PTR [edi-0x52]
  408750:	push   ds
  408751:	call   0x706ebbac
  408756:	mov    ah,0xb4
  408758:	jl     0x40871f
  40875a:	bound  edi,QWORD PTR [edx+0x59881414]
  408760:	push   ebx
  408761:	rol    DWORD PTR [ebp+0x4d],0x92
  408765:	mov    al,ds:0x9097118d
  40876a:	add    eax,0x65571cda
  40876f:	in     eax,dx
  408770:	in     al,dx
  408771:	mov    WORD PTR [esi+0x4fc31a4e],ss
  408777:	xrelease mov DWORD PTR [edx],ebx
  40877a:	add    esi,DWORD PTR [esi-0x630127ca]
  408780:	dec    ebx
  408781:	pop    esi
  408782:	adc    DWORD PTR [eax+0x23],0x4dbf4de0
  408789:	and    eax,0x14f7d069
  40878e:	jl     0x4087c3
  408790:	mov    ds:0x8365a853,eax
  408795:	inc    esp
  408796:	cs mov ebp,0x9681313
  40879c:	and    DWORD PTR [ebp-0x2e],esi
  40879f:	jno    0x408820
  4087a1:	xchg   ebp,eax
  4087a2:	loopne 0x4087fd
  4087a4:	into   
  4087a5:	pop    ebx
  4087a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a7:	ret    
  4087a8:	jp     0x40876b
  4087aa:	jecxz  0x40878f
  4087ac:	bound  eax,QWORD PTR ds:0xbeb2848c
  4087b2:	hlt    
  4087b3:	pop    ecx
  4087b4:	xchg   esp,eax
  4087b5:	xor    BYTE PTR [eax+0x549749b9],al
  4087bb:	dec    ebp
  4087bc:	xchg   edi,eax
  4087bd:	push   edi
  4087be:	in     eax,0x49
  4087c0:	push   eax
  4087c1:	adc    bl,BYTE PTR [esi]
  4087c3:	xchg   esp,eax
  4087c4:	jbe    0x40881b
  4087c6:	cld    
  4087c7:	sub    edi,ecx
  4087c9:	add    edx,esp
  4087cb:	push   eax
  4087cc:	iret   
  4087cd:	or     ebp,edx
  4087cf:	ins    BYTE PTR es:[edi],dx
  4087d0:	lods   eax,DWORD PTR ds:[esi]
  4087d1:	test   BYTE PTR ds:[ebp-0x1b],dh
  4087d5:	pop    ecx
  4087d6:	inc    eax
  4087d7:	aad    0xbf
  4087d9:	std    
  4087da:	ret    0x9762
  4087dd:	je     0x4087ad
  4087df:	lahf   
  4087e0:	ins    BYTE PTR es:[edi],dx
  4087e1:	pop    eax
  4087e2:	add    al,bl
  4087e4:	dec    ebp
  4087e5:	or     DWORD PTR [ebx+ebx*8],0x7f
  4087e9:	push   ebp
  4087ea:	imul   ebx,DWORD PTR [ecx-0x2115f047],0x37
  4087f1:	inc    esp
  4087f2:	leave  
  4087f3:	sbb    al,0xbd
  4087f5:	enter  0xc466,0x8f
  4087f9:	(bad)  
  4087fa:	js     0x40886e
  4087fc:	fs in  eax,dx
  4087fe:	mov    cl,0x16
  408800:	and    al,0xd7
  408802:	int    0xea
  408804:	jecxz  0x40887a
  408806:	jge    0x408851
  408808:	mov    al,0x89
  40880a:	inc    edx
  40880b:	push   esi
  40880c:	sar    BYTE PTR [ebx],0x1d
  40880f:	jmp    0x6ed1920d
  408814:	sbb    eax,0xe179f2d1
  408819:	ret    
  40881a:	fsubr  DWORD PTR [ecx+0x79]
  40881d:	push   cs
  40881e:	call   0xe994394e
  408823:	pop    ecx
  408824:	and    DWORD PTR [esi],esi
  408826:	test   eax,0xe1a26bfc
  40882b:	stc    
  40882c:	jg     0x408835
  40882e:	jno    0x4087b3
  408830:	sbb    cl,dl
  408832:	mov    bl,dl
  408834:	std    
  408835:	sar    DWORD PTR [eax+0x4fe34fe2],0x13
  40883c:	gs js  0x408881
  40883f:	js     0x408854
  408841:	sti    
  408842:	into   
  408843:	(bad)  
  408844:	(bad)  
  408845:	pop    esp
  408846:	retf   0x3e35
  408849:	pop    es
  40884a:	lock xor dl,BYTE PTR [edi-0x18b40db2]
  408851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408852:	out    dx,eax
  408853:	mov    WORD PTR [eax-0xefda4d4],?
  408859:	ret    
  40885a:	leave  
  40885b:	inc    ebp
  40885c:	imul   ebp,DWORD PTR [esi-0xb],0xfbd8bc14
  408863:	mov    cl,0x42
  408865:	es dec eax
  408867:	pop    es
  408868:	loopne 0x40883c
  40886a:	ret    0x54ab
  40886d:	test   eax,0x13bfc123
  408872:	into   
  408873:	jno    0x40883f
  408875:	push   esi
  408876:	mov    bl,0x38
  408878:	jbe    0x408868
  40887a:	pop    ecx
  40887b:	or     al,0x1
  40887d:	aas    
  40887e:	mov    cl,0x40
  408880:	pop    bp
  408882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408883:	xor    dh,BYTE PTR [edx]
  408885:	dec    ebp
  408886:	cmp    DWORD PTR [esp+ebp*4-0x78],ecx
  40888a:	and    DWORD PTR [edx],esi
  40888c:	aas    
  40888d:	jle    0x4088c8
  40888f:	dec    edi
  408890:	adc    DWORD PTR [edi-0x69df40c1],ecx
  408896:	dec    esp
  408897:	pop    ss
  408898:	pop    ebp
  408899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889a:	lds    ecx,FWORD PTR [ecx-0x70a77649]
  4088a0:	sbb    eax,DWORD PTR [edi*8-0x3de860ed]
  4088a7:	jl     0x408845
  4088a9:	xchg   cl,bl
  4088ab:	push   ecx
  4088ac:	arpl   WORD PTR [ebx+0x74],si
  4088af:	xchg   ebx,eax
  4088b0:	push   ss
  4088b1:	std    
  4088b2:	sti    
  4088b3:	adc    al,0x5
  4088b5:	adc    edx,DWORD PTR [edx-0x65]
  4088b8:	adc    cl,BYTE PTR [ecx+0x6b]
  4088bb:	or     al,0xeb
  4088bd:	icebp  
  4088be:	pop    eax
  4088bf:	jp     0x408871
  4088c1:	arpl   WORD PTR [edx+0x553e6ab6],dx
  4088c7:	or     DWORD PTR [ebx-0x72],edx
  4088ca:	aam    0x8e
  4088cc:	retf   0xb4a5
  4088cf:	inc    edx
  4088d0:	xchg   esi,eax
  4088d1:	imul   ebx,DWORD PTR [ebp+ecx*8-0x5f],0x23
  4088d6:	imul   ebx,ebp,0x54
  4088d9:	cs pop esp
  4088db:	jmp    0x4088b7
  4088dd:	imul   edi,DWORD PTR [edx],0xa8b985e7
  4088e3:	fisubr DWORD PTR [esi+eax*4]
  4088e6:	(bad)  
  4088e7:	jo     0x4088a8
  4088e9:	shl    BYTE PTR [edx-0xcde47f8],1
  4088ef:	inc    esi
  4088f0:	pushf  
  4088f1:	test   DWORD PTR [edx-0x2b45ba9d],edi
  4088f7:	cld    
  4088f8:	jno    0x408909
  4088fa:	mov    bl,0xaa
  4088fc:	loope  0x4088b4
  4088fe:	xchg   ebx,eax
  4088ff:	or     DWORD PTR [edx-0x37],edi
  408902:	mov    ch,0x53
  408904:	mov    esi,0xfdaaa1ad
  408909:	xchg   esp,eax
  40890a:	dec    ebx
  40890b:	sbb    BYTE PTR [eax-0x2ebd2b84],bl
  408911:	xlat   BYTE PTR ds:[ebx]
  408912:	push   ebp
  408913:	sbb    BYTE PTR [edi-0x8],bl
  408916:	dec    ebp
  408917:	or     al,0xdb
  408919:	push   cs
  40891a:	push   es
  40891b:	xlat   BYTE PTR ds:[ebx]
  40891c:	enterw 0x8d65,0x19
  408921:	test   DWORD PTR ds:0x38953abd,esp
  408927:	jae    0x4088ca
  408929:	mov    ebp,0x3f6d797d
  40892e:	inc    edx
  40892f:	je     0x408939
  408931:	outs   dx,BYTE PTR ds:[esi]
  408932:	sub    eax,0x682d7550
  408937:	pop    ebp
  408938:	sbb    al,0x2e
  40893a:	adc    dh,cl
  40893c:	mov    cl,0x81
  40893e:	pop    edi
  40893f:	sar    DWORD PTR [eax-0x68],cl
  408942:	sahf   
  408943:	outs   dx,BYTE PTR ds:[esi]
  408944:	test   al,0xe5
  408946:	ins    BYTE PTR es:[edi],dx
  408947:	push   esp
  408948:	fsubr  st,st(4)
  40894a:	push   ecx
  40894b:	and    ch,BYTE PTR [eax]
  40894d:	int3   
  40894e:	pop    ebx
  40894f:	sahf   
  408950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408951:	shl    BYTE PTR [ebp+0xb],0xca
  408955:	mov    eax,ds:0x182c7e50
  40895a:	xor    BYTE PTR [ebx],0x71
  40895d:	and    BYTE PTR [ebx+0x12],dl
  408960:	out    0x9,eax
  408962:	iret   
  408963:	or     DWORD PTR ds:0x116ddfd3,0x2c8354f4
  40896d:	push   edi
  40896e:	adc    DWORD PTR [ebx+0x67],esi
  408971:	add    edx,eax
  408973:	push   cs
  408974:	cli    
  408975:	sub    al,0x85
  408977:	adc    ebx,esi
  408979:	stos   DWORD PTR es:[edi],eax
  40897a:	xor    DWORD PTR [esi-0x4e],edx
  40897d:	jp     0x40891f
  40897f:	pop    ebx
  408980:	in     al,dx
  408981:	jmp    0x6004:0x518a91b9
  408988:	enter  0xf3a,0xd
  40898c:	cld    
  40898d:	adc    edx,DWORD PTR [ecx]
  40898f:	in     eax,0x0
  408991:	push   esi
  408992:	inc    ecx
  408993:	(bad)  
  408994:	outs   dx,BYTE PTR ds:[esi]
  408995:	inc    edi
  408996:	add    ecx,ecx
  408998:	(bad)  
  408999:	and    DWORD PTR [eax-0x236e8b60],esi
  40899f:	mov    cl,0xa5
  4089a1:	pop    ss
  4089a2:	stos   DWORD PTR es:[edi],eax
  4089a3:	mov    bl,0xb4
  4089a5:	fldcw  WORD PTR [edi]
  4089a7:	mov    WORD PTR [edx+0x2f960fb2],es
  4089ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ae:	popf   
  4089af:	xchg   ebx,eax
  4089b0:	cmc    
  4089b1:	repnz out 0x49,eax
  4089b4:	push   ecx
  4089b5:	or     dh,bh
  4089b7:	popa   
  4089b8:	outs   dx,BYTE PTR ds:[esi]
  4089b9:	add    DWORD PTR [ecx+edx*1],ebx
  4089bc:	scas   al,BYTE PTR es:[edi]
  4089bd:	lds    ebp,FWORD PTR [edx]
  4089bf:	sahf   
  4089c0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4089c2:	mov    dl,0xad
  4089c4:	mov    ebp,0x4f7e5d4e
  4089c9:	push   ds
  4089ca:	or     al,0xf1
  4089cc:	pusha  
  4089cd:	sti    
  4089ce:	retf   
  4089cf:	mov    dl,0xbf
  4089d1:	int    0x2
  4089d3:	xchg   edx,eax
  4089d4:	addr16 jb 0x408a1c
  4089d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d8:	lods   eax,DWORD PTR ds:[esi]
  4089d9:	sbb    eax,0x15867db6
  4089de:	out    0x3f,al
  4089e0:	arpl   WORD PTR ds:0xa60d6a7d,cx
  4089e6:	cdq    
  4089e7:	lods   eax,DWORD PTR ds:[esi]
  4089e8:	ror    al,1
  4089ea:	aad    0xfb
  4089ec:	add    ah,BYTE PTR [edx+0x5f]
  4089ef:	sbb    DWORD PTR [ecx-0x5cf49622],edi
  4089f5:	xor    DWORD PTR [eax],edi
  4089f7:	lock in eax,dx
  4089f9:	xchg   BYTE PTR [ebx+0x3],bh
  4089fc:	int    0x6c
  4089fe:	sbb    DWORD PTR [esi-0x15],0x67b71097
  408a05:	and    al,0xa8
  408a07:	lods   al,BYTE PTR ds:[esi]
  408a08:	repnz push esp
  408a0a:	mov    cl,0xb4
  408a0c:	push   edx
  408a0d:	lahf   
  408a0e:	fild   QWORD PTR [ebp+0x8a2157c]
  408a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a15:	mov    esp,0x61a1109b
  408a1a:	aaa    
  408a1b:	xor    al,0x78
  408a1d:	leave  
  408a1e:	pop    ebx
  408a1f:	test   WORD PTR [eax+0x682d9c54],bp
  408a26:	dec    esp
  408a27:	push   eax
  408a28:	mov    ds:0xe1894ca1,eax
  408a2d:	sbb    BYTE PTR ds:0x2bdde8b6,ah
  408a33:	adc    al,0x5f
  408a35:	inc    esp
  408a36:	xchg   ebp,eax
  408a37:	sti    
  408a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a39:	ja     0x4089f7
  408a3b:	pop    esp
  408a3c:	mov    WORD PTR [edx+0x30a0353],?
  408a42:	jo     0x408a1f
  408a44:	sbb    DWORD PTR [ecx],edi
  408a46:	mov    esi,0x7cd46c9c
  408a4b:	sbb    ah,ah
  408a4d:	jno    0x4089fa
  408a4f:	mov    eax,ecx
  408a51:	xchg   ebx,eax
  408a52:	dec    edx
  408a53:	mov    esp,0xd97ac0b3
  408a58:	leave  
  408a59:	xor    al,0x8
  408a5b:	stos   DWORD PTR es:[edi],eax
  408a5c:	push   esi
  408a5d:	or     ch,BYTE PTR [edi+edx*2]
  408a60:	or     ecx,DWORD PTR [edi-0x7dd86c6b]
  408a66:	sbb    al,0xf1
  408a68:	inc    edi
  408a69:	in     eax,dx
  408a6a:	(bad)  
  408a6b:	jae    0x408acf
  408a6d:	mov    dh,0x5a
  408a6f:	jno    0x408aed
  408a71:	ffreep st(7)
  408a73:	out    0x43,al
  408a75:	pop    esp
  408a76:	fistp  DWORD PTR [edi+0xb]
  408a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a7a:	and    ebp,esi
  408a7c:	adc    eax,DWORD PTR fs:[di+0x4d]
  408a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a82:	jecxz  0x408a85
  408a84:	xor    DWORD PTR [edx-0x200fc462],ecx
  408a8a:	lock ins DWORD PTR es:[edi],dx
  408a8c:	inc    ebp
  408a8d:	mov    ds,WORD PTR [esi]
  408a8f:	adc    al,0xfa
  408a91:	xor    ebx,ecx
  408a93:	mov    eax,0x33309507
  408a98:	not    ah
  408a9a:	lea    edx,[eax-0x5f]
  408a9d:	sbb    DWORD PTR [eax+eax*2],0xf135828
  408aa4:	mov    ecx,0xf01aeb23
  408aa9:	mov    ah,0xe8
  408aab:	xor    al,0x66
  408aad:	arpl   WORD PTR [ebx+0x50],bp
  408ab0:	arpl   WORD PTR [ebx-0x47],bp
  408ab3:	sti    
  408ab4:	inc    esi
  408ab5:	icebp  
  408ab6:	jmp    0x408aa0
  408ab8:	mov    esp,0xbc3a81c3
  408abd:	inc    esi
  408abe:	jno    0x408a69
  408ac0:	or     dl,dl
  408ac2:	inc    ebx
  408ac3:	push   cs
  408ac4:	idiv   BYTE PTR [esi+0x71f1d09a]
  408aca:	out    0x3d,eax
  408acc:	cmp    al,0x84
  408ace:	and    BYTE PTR [esi-0x333145c0],bh
  408ad4:	push   edx
  408ad5:	int3   
  408ad6:	pushf  
  408ad7:	push   0x35
  408ad9:	and    eax,ecx
  408adb:	add    cl,BYTE PTR ds:0x21a02265
  408ae1:	sbb    dh,BYTE PTR [ebx]
  408ae3:	ret    0xd09b
  408ae6:	mul    BYTE PTR [ecx+0x14dfce8a]
  408aec:	fldenv [edx+0xd]
  408aef:	das    
  408af0:	add    edx,DWORD PTR [edi-0x6f]
  408af3:	or     BYTE PTR [eax],0xef
  408af6:	hlt    
  408af7:	and    al,0x87
  408af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408afa:	aaa    
  408afb:	lock out 0x11,eax
  408afe:	xchg   ecx,eax
  408aff:	lea    edx,[ebp+edi*4-0x7d]
  408b03:	ins    DWORD PTR es:[edi],dx
  408b04:	repnz xor eax,DWORD PTR [edi+0xa]
  408b08:	inc    eax
  408b09:	xchg   DWORD PTR [esi+0x786ea24],edx
  408b0f:	xchg   edi,eax
  408b10:	rcl    BYTE PTR [ebx+0x7731ae6],0x1d
  408b17:	ror    DWORD PTR [esi+0x70],0x26
  408b1b:	pop    edi
  408b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1d:	in     al,dx
  408b1e:	mov    ecx,0x78c20b20
  408b23:	sti    
  408b24:	mov    ebx,0x3d3e7cfb
  408b29:	xchg   DWORD PTR [ebx],ebp
  408b2b:	add    DWORD PTR [edi+0x40],edi
  408b2e:	aam    0x83
  408b30:	pop    DWORD PTR [esi+0x463e487c]
  408b36:	ja     0x408b67
  408b38:	add    bh,cl
  408b3a:	int3   
  408b3b:	idiv   BYTE PTR [ebp-0xb4c5ad]
  408b41:	std    
  408b42:	pop    ebp
  408b43:	iret   
  408b44:	fidivr DWORD PTR [ecx]
  408b46:	add    edx,DWORD PTR [edx+0x3f]
  408b49:	je     0x408acf
  408b4b:	int    0x4b
  408b4d:	scas   al,BYTE PTR es:[edi]
  408b4e:	call   0x605bdafd
  408b53:	push   ebx
  408b54:	inc    esp
  408b55:	push   esi
  408b56:	icebp  
  408b57:	scas   eax,DWORD PTR es:[edi]
  408b58:	cs in  eax,dx
  408b5a:	out    0x3c,eax
  408b5c:	mov    ch,0x9e
  408b5e:	sub    DWORD PTR [eax+esi*8-0x3c27c61e],eax
  408b65:	xchg   ebx,eax
  408b66:	jo     0x408b15
  408b68:	or     edi,DWORD PTR [ebx+0x15298d73]
  408b6e:	sub    edi,DWORD PTR [ebp+edx*8+0x518c80c1]
  408b75:	(bad)  
  408b76:	not    bh
  408b78:	(bad)  
  408b79:	lock daa 
  408b7b:	pop    DWORD PTR [ecx+eax*4-0x2bf3b77f]
  408b82:	or     eax,0xbd880d2d
  408b87:	(bad)  
  408b88:	mov    ds:0x1b328915,eax
  408b8d:	add    eax,0x97084619
  408b92:	aad    0x39
  408b94:	int    0x86
  408b96:	repnz test BYTE PTR [esi-0x2b4cf40],al
  408b9d:	inc    ebp
  408b9e:	mov    WORD PTR [edi-0x50],gs
  408ba1:	cmp    eax,0x94e468f4
  408ba6:	pop    edx
  408ba7:	jmp    0x4d08:0xbdd743be
  408bae:	hlt    
  408baf:	or     DWORD PTR [ecx+0x7e5f304b],eax
  408bb5:	mov    ds:0x92989980,eax
  408bba:	pusha  
  408bbb:	fistp  DWORD PTR es:[edi-0x2d2d22a3]
  408bc2:	fbld   TBYTE PTR [ebx+0x7e49e9f2]
  408bc8:	loop   0x408c03
  408bca:	mov    ds:0xea5f9063,eax
  408bcf:	mov    ds:0xdff00bf8,eax
  408bd4:	test   al,0xfb
  408bd6:	and    esp,DWORD PTR [edx]
  408bd8:	(bad)  
  408bd9:	aam    0xf5
  408bdb:	lock mov eax,0xa428c2bb
  408be1:	pop    eax
  408be2:	and    eax,0xb0a837
  408be7:	lea    edx,[eax]
  408be9:	mov    esi,0x9ec07206
  408bee:	icebp  
  408bef:	in     al,dx
  408bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf1:	lods   eax,DWORD PTR ds:[esi]
  408bf2:	fisttp DWORD PTR [edi+0x37]
  408bf5:	push   ebx
  408bf6:	fdivp  st(1),st
  408bf8:	fcomi  st,st(1)
  408bfa:	rcl    eax,1
  408bfc:	repnz stc 
  408bfe:	fsubr  DWORD PTR [eax-0x370e5d36]
  408c04:	xlat   BYTE PTR ds:[ebx]
  408c05:	xor    DWORD PTR [edx+0x2bcb3f90],0xc8251341
  408c0f:	stos   DWORD PTR es:[edi],eax
  408c10:	jns    0x408c33
  408c12:	mov    ecx,0x40a93170
  408c17:	sbb    bl,ch
  408c19:	mov    ds,WORD PTR [edi]
  408c1b:	fwait
  408c1c:	dec    ebx
  408c1d:	sub    BYTE PTR [edx-0x7b9ea2c4],dl
  408c23:	lods   al,BYTE PTR ds:[esi]
  408c24:	or     DWORD PTR [ebx-0x60],ebp
  408c27:	popf   
  408c28:	add    DWORD PTR [ebx],esp
  408c2a:	add    esi,ebp
  408c2c:	cmp    eax,esi
  408c2e:	cli    
  408c2f:	add    ecx,edi
  408c31:	adc    BYTE PTR [edx+esi*4-0xadfef7e],al
  408c38:	push   edx
  408c39:	scas   al,BYTE PTR es:[edi]
  408c3a:	adc    al,BYTE PTR [esi+0x38]
  408c3d:	push   ss
  408c3e:	add    edi,DWORD PTR [ebp-0x23]
  408c41:	sbb    eax,0x4cd1a6bf
  408c46:	pop    ebp
  408c47:	ret    0x735e
  408c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4b:	or     eax,0x99441efd
  408c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c52:	sub    ebx,DWORD PTR [ebx]
  408c54:	push   cs
  408c55:	test   al,0x39
  408c57:	jnp    0x408be1
  408c59:	fidivr DWORD PTR [ebp-0x6b]
  408c5c:	daa    
  408c5d:	outs   dx,DWORD PTR ds:[esi]
  408c5e:	out    dx,al
  408c5f:	mov    edx,DWORD PTR [esi+ebx*8]
  408c62:	and    edx,DWORD PTR [edx-0x7ff597d9]
  408c68:	inc    edi
  408c69:	or     cl,BYTE PTR [esi]
  408c6b:	lea    ebx,[edx-0x7d]
  408c6e:	and    bh,BYTE PTR [ecx-0x2d]
  408c71:	lods   eax,DWORD PTR ds:[esi]
  408c72:	out    dx,eax
  408c73:	cmp    eax,0x9b6421ae
  408c78:	das    
  408c79:	sbb    eax,0x7a176a05
  408c7e:	aam    0x88
  408c80:	sahf   
  408c81:	mov    dl,BYTE PTR [ebx+0x2500fc63]
  408c87:	fadd   st,st(1)
  408c89:	xchg   ecx,eax
  408c8a:	jmp    0x3235ce46
  408c8f:	push   0x3545e2bc
  408c94:	jae    0x408c96
  408c96:	dec    edi
  408c97:	xlat   BYTE PTR ds:[ebx]
  408c98:	adc    DWORD PTR [eax+edx*1],ebp
  408c9b:	inc    eax
  408c9c:	ja     0x408c89
  408c9e:	cdq    
  408c9f:	int    0xeb
  408ca1:	popw   ss
  408ca3:	rcl    DWORD PTR [edi+0x378a57df],cl
  408ca9:	adc    eax,0x368e3148
  408cae:	arpl   ax,si
  408cb0:	push   cs
  408cb1:	lods   eax,DWORD PTR ds:[esi]
  408cb2:	ja     0x408c9c
  408cb4:	pop    edx
  408cb5:	add    ebp,esp
  408cb7:	adc    al,0x29
  408cb9:	shl    DWORD PTR ds:0x9542c845,cl
  408cbf:	fsubr  QWORD PTR [eax-0x492388d6]
  408cc5:	push   ecx
  408cc6:	shl    DWORD PTR [ebp-0x284be48a],cl
  408ccc:	push   ds
  408ccd:	add    DWORD PTR [eax+0x393a5423],edx
  408cd3:	mov    dl,0x6f
  408cd5:	mov    al,0xe
  408cd7:	adc    al,0x7d
  408cd9:	std    
  408cda:	out    dx,al
  408cdb:	mov    DWORD PTR [edx],ebp
  408cdd:	xor    BYTE PTR [edi-0x36],0x8a
  408ce1:	jp     0x408d07
  408ce3:	mov    ch,0x3d
  408ce5:	pop    esp
  408ce6:	jmp    0x95da9fe8
  408ceb:	cmp    BYTE PTR [ebp-0x6f64fd9b],0x7e
  408cf2:	push   ecx
  408cf3:	mov    dl,0x3e
  408cf5:	xor    cl,0x1d
  408cf8:	mov    edx,0xd49581db
  408cfd:	xor    al,0xe1
  408cff:	dec    esp
  408d00:	icebp  
  408d01:	add    edx,DWORD PTR [edi-0x336a007e]
  408d07:	inc    esi
  408d08:	into   
  408d09:	xchg   esi,eax
  408d0a:	call   0x58d10b6e
  408d0f:	mov    ah,0x5d
  408d11:	sbb    DWORD PTR ds:0x969def7d,eax
  408d17:	in     eax,dx
  408d18:	fidivr WORD PTR [ecx+0x67]
  408d1b:	and    cl,BYTE PTR [esi+0x5dcf6dd8]
  408d21:	call   0x542a84a4
  408d26:	jecxz  0x408d0b
  408d28:	jg     0x408ce8
  408d2a:	sub    DWORD PTR [edi-0x23613082],ebx
  408d30:	aam    0x7b
  408d32:	(bad)  
  408d33:	(bad)  
  408d34:	jno    0x408d03
  408d36:	daa    
  408d37:	dec    ebx
  408d38:	mov    ds:0x856a8cf2,eax
  408d3d:	shl    bl,1
  408d3f:	cmp    edi,DWORD PTR [ebp+0x4c726f0d]
  408d45:	(bad)
  408d49:	outs   dx,DWORD PTR ds:[esi]
  408d4a:	bound  ebp,QWORD PTR [eax+0x18]
  408d4d:	arpl   WORD PTR [eax-0x103d1e3b],dx
  408d53:	jns    0x408ce7
  408d55:	pop    esi
  408d56:	mov    al,0x52
  408d58:	loope  0x408d29
  408d5a:	jmp    0xe451e374
  408d5f:	cmp    DWORD PTR [ecx+0x19],edx
  408d62:	test   al,0xe1
  408d64:	rcr    BYTE PTR ds:0xc410b347,1
  408d6a:	adc    ecx,DWORD PTR [ecx]
  408d6c:	push   ebp
  408d6d:	dec    ebx
  408d6e:	xchg   edi,eax
  408d6f:	sar    DWORD PTR ds:0xddf7e4e6,cl
  408d75:	adc    al,0x37
  408d77:	xor    dh,BYTE PTR [ebx-0x1baf12cc]
  408d7d:	inc    esp
  408d7e:	jle    0x408d28
  408d80:	ret    0x857d
  408d83:	push   edx
  408d84:	or     ecx,ebx
  408d86:	add    esp,DWORD PTR [eax+edi*1+0x440ec493]
  408d8d:	aas    
  408d8e:	mov    cl,0x51
  408d90:	imul   ebx,DWORD PTR [ebp+0x209958e7],0x1e82e6b4
  408d9a:	fdiv   QWORD PTR [edx+0x2b]
  408d9d:	dec    edx
  408d9e:	push   edx
  408d9f:	popa   
  408da0:	(bad)  
  408da1:	xchg   edx,eax
  408da2:	xchg   esp,eax
  408da3:	mov    ebx,0x3badfe71
  408da8:	pop    es
  408da9:	lock and eax,0x9fa9c198
  408daf:	fimul  WORD PTR [eax]
  408db1:	push   ebp
  408db2:	in     eax,0x2d
  408db4:	cli    
  408db5:	ins    DWORD PTR es:[edi],dx
  408db6:	pop    eax
  408db7:	fbld   TBYTE PTR [ebp+0xbdc94e]
  408dbd:	std    
  408dbe:	mov    BYTE PTR [edi],ch
  408dc0:	test   al,0x88
  408dc2:	and    al,0x6e
  408dc4:	aas    
  408dc5:	inc    esp
  408dc6:	retf   0x3f31
  408dc9:	and    eax,0xbefe583e
  408dce:	leave  
  408dcf:	sub    BYTE PTR [edx+0x9],bh
  408dd2:	pop    ds
  408dd3:	pop    ebp
  408dd4:	jbe    0x408e51
  408dd6:	aas    
  408dd7:	ins    BYTE PTR es:[edi],dx
  408dd8:	xchg   ebx,eax
  408dd9:	xchg   ebp,eax
  408dda:	xlat   BYTE PTR ds:[ebx]
  408ddb:	test   eax,0x62fd3558
  408de0:	out    dx,al
  408de1:	addr16 xchg ebp,eax
  408de3:	cmp    edx,DWORD PTR [esi+0xe]
  408de6:	es (bad) 
  408de8:	mov    ds:0xce1e9807,eax
  408ded:	sar    al,1
  408def:	jns    0x408dac
  408df1:	bnd jle 0x408dd1
  408df4:	mov    BYTE PTR [eax+0x58f9c2c5],ch
  408dfa:	push   ebp
  408dfb:	jbe    0x408d83
  408dfd:	jg     0x408e02
  408dff:	push   esi
  408e00:	repnz or ebx,DWORD PTR [esi+edx*4-0x15]
  408e05:	adc    eax,0x67d4b37a
  408e0a:	push   edx
  408e0b:	dec    eax
  408e0c:	jne    0x408e51
  408e0e:	push   0x20ac9b42
  408e13:	xor    BYTE PTR [eax+eiz*1+0x20b4443b],0xcd
  408e1b:	sar    DWORD PTR [ecx-0x57108431],1
  408e21:	mov    eax,DWORD PTR [ebx]
  408e23:	xchg   edx,eax
  408e24:	xor    DWORD PTR [ecx+ebp*8+0x5ae2d855],esi
  408e2b:	and    eax,edi
  408e2d:	push   0x1f
  408e2f:	mov    bl,0x30
  408e31:	jb     0x408de1
  408e33:	loopne 0x408e8d
  408e35:	mov    ah,0x7a
  408e37:	ss inc ecx
  408e39:	mov    edx,0xf839090
  408e3e:	fstp   TBYTE PTR [edx]
  408e40:	or     BYTE PTR [ebx+ecx*1],cl
  408e43:	or     eax,0x31b6c1db
  408e48:	inc    esi
  408e49:	fstp   TBYTE PTR [eax+ebp*2+0x6c]
  408e4d:	cmp    ah,ah
  408e4f:	lods   eax,DWORD PTR ds:[esi]
  408e50:	es cdq 
  408e52:	xchg   ecx,eax
  408e53:	(bad)  
  408e54:	int3   
  408e55:	jns    0x408e09
  408e57:	jns    0x408e49
  408e59:	pushf  
  408e5a:	sar    BYTE PTR [edi+0x38531a90],0x4c
  408e61:	ror    DWORD PTR [ecx+0x79538e79],0x67
  408e68:	lds    edi,FWORD PTR [edx]
  408e6a:	jnp    0x408eb3
  408e6c:	mov    bh,0x8f
  408e6e:	jae    0x408e84
  408e70:	inc    eax
  408e71:	fist   DWORD PTR [ebx-0x6a28f1e4]
  408e77:	loope  0x408eb3
  408e79:	mul    BYTE PTR [esi]
  408e7b:	mov    cl,0xdd
  408e7d:	adc    eax,0x91af5fa2
  408e82:	xchg   esi,eax
  408e83:	fstp   TBYTE PTR [eax-0x76]
  408e86:	lahf   
  408e87:	fsub   st,st(5)
  408e89:	ret    0xd80
  408e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e8d:	test   bh,0x15
  408e90:	js     0x408e20
  408e92:	iret   
  408e93:	xor    cl,BYTE PTR [ecx+0x1926fdbe]
  408e99:	add    BYTE PTR [ebx+0x76bf6d67],bl
  408e9f:	mov    eax,ds:0x94e3df8d
  408ea4:	add    eax,0x3d0b7b95
  408ea9:	push   ss
  408eaa:	neg    BYTE PTR [eax]
  408eac:	jae    0x408ed0
  408eae:	ja     0x408eb3
  408eb0:	xchg   BYTE PTR [ebp-0x2c93707a],cl
  408eb6:	test   al,0xe
  408eb8:	pop    eax
  408eb9:	mov    eax,ds:0x3a83147b
  408ebe:	rcl    DWORD PTR [edi-0xc],1
  408ec1:	mov    eax,0xb8127255
  408ec6:	pmaxsw mm4,QWORD PTR [ecx]
  408ec9:	stos   BYTE PTR es:[edi],al
  408eca:	(bad)  
  408ecb:	pop    es
  408ecc:	(bad)  
  408ecd:	ins    BYTE PTR es:[edi],dx
  408ece:	enter  0xf8b7,0x95
  408ed2:	popa   
  408ed3:	push   es
  408ed4:	cmp    edi,DWORD PTR [ebx+0x75ae7363]
  408eda:	pushf  
  408edb:	or     al,0x71
  408edd:	lods   eax,DWORD PTR ds:[esi]
  408ede:	mov    ecx,fs
  408ee0:	js     0x408edf
  408ee2:	cmp    bh,BYTE PTR [edi+eiz*1-0x7e]
  408ee6:	jg     0x408ebd
  408ee8:	out    0xbe,al
  408eea:	inc    eax
  408eeb:	lea    esp,[edi-0x8]
  408eee:	dec    eax
  408eef:	cmc    
  408ef0:	shl    DWORD PTR [ebx],cl
  408ef2:	mov    DWORD PTR cs:[eax+0x41],ebx
  408ef6:	retf   0xe978
  408ef9:	mov    esi,0x8cb4a42f
  408efe:	pop    ebp
  408eff:	push   0x31
  408f01:	inc    eax
  408f02:	out    dx,eax
  408f03:	pop    es
  408f04:	pop    edi
  408f05:	add    BYTE PTR [ebx-0x47],0x73
  408f09:	push   ebp
  408f0a:	call   0x535f75bc
  408f0f:	pop    edi
  408f10:	jo     0x408ee0
  408f12:	into   
  408f13:	pop    es
  408f14:	lods   eax,DWORD PTR ds:[esi]
  408f15:	cdq    
  408f16:	loop   0x408f6f
  408f18:	inc    edx
  408f1a:	push   ss
  408f1b:	les    ecx,FWORD PTR [ebx+edi*4+0x669032ab]
  408f22:	aaa    
  408f23:	outs   dx,BYTE PTR ds:[esi]
  408f24:	inc    edi
  408f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f26:	in     al,0xb8
  408f28:	in     al,dx
  408f29:	fisttp WORD PTR [ecx-0xd]
  408f2c:	pop    ecx
  408f2d:	mov    edi,0x58546e8b
  408f32:	jle    0x408f70
  408f34:	test   al,0xa1
  408f36:	test   BYTE PTR [eax+0x68612d81],bh
  408f3c:	cmp    eax,0x8354bd
  408f41:	jmp    0x7220c4d7
  408f46:	sub    ah,0xab
  408f49:	mov    ch,0x69
  408f4b:	test   ah,ch
  408f4d:	retf   
  408f4e:	mov    ch,0xf0
  408f50:	pop    edx
  408f51:	ins    BYTE PTR es:[edi],dx
  408f52:	sub    al,0xd
  408f54:	rcr    dh,cl
  408f56:	jl     0x408f85
  408f58:	popa   
  408f59:	xor    dl,BYTE PTR [edi]
  408f5b:	jmp    0xbf3ba834
  408f60:	dec    esp
  408f61:	in     al,dx
  408f62:	xchg   ebp,eax
  408f63:	add    al,0xa1
  408f65:	ja     0x408f5e
  408f67:	es (bad) 
  408f69:	cmp    dl,al
  408f6b:	or     al,BYTE PTR [edx+0xfe4c3c4]
  408f71:	(bad)  
  408f72:	xor    al,0xe4
  408f74:	push   0xd8239f39
  408f79:	std    
  408f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f7b:	fist   DWORD PTR [ebx]
  408f7d:	shr    BYTE PTR [ebp+0x5345f301],1
  408f83:	sti    
  408f84:	leave  
  408f85:	mov    ds:0xdd3489e7,eax
  408f8a:	pop    es
  408f8b:	shr    DWORD PTR [edi],cl
  408f8d:	push   ebp
  408f8e:	fst    QWORD PTR [edi-0x3817ac02]
  408f94:	mov    eax,ds:0x7ead1f0
  408f99:	test   al,0xfc
  408f9b:	repnz std 
  408f9d:	jge    0x409010
  408f9f:	dec    edx
  408fa0:	dec    eax
  408fa1:	popa   
  408fa2:	mov    edi,0x594486a4
  408fa7:	repnz mov ch,0xc7
  408faa:	dec    edi
  408fab:	mov    esp,0x99c63d44
  408fb0:	add    DWORD PTR [eax-0x4f],0xe067c4a7
  408fb7:	ror    DWORD PTR [ecx-0x74e496f9],1
  408fbd:	gs std 
  408fbf:	(bad)  
  408fc1:	imul   edi,esp,0x37cabf6d
  408fc7:	enter  0x3ec2,0xc2
  408fcb:	cmp    dh,BYTE PTR [esi+0x45]
  408fce:	daa    
  408fcf:	in     eax,0x6d
  408fd1:	jmp    0x1f13:0xb955e6d6
  408fd8:	jp     0x408fcf
  408fda:	xchg   ch,dl
  408fdc:	test   eax,0x419bc97e
  408fe1:	loope  0x408ff5
  408fe3:	rol    ecx,1
  408fe5:	(bad)  
  408fe6:	adc    al,0x78
  408fe8:	xchg   ecx,eax
  408fe9:	popa   
  408fea:	jl     0x408fa1
  408fec:	imul   edx,ecx,0x4b6d70c4
  408ff2:	sub    al,0xee
  408ff4:	mov    bh,0xad
  408ff6:	push   0xd6845ee5
  408ffb:	mov    edi,0x367cbaed
  409000:	out    0x3d,eax
  409002:	fisub  DWORD PTR ds:0x88e167af
  409008:	mov    esp,0xa8127f09
  40900d:	ret    
  40900e:	arpl   WORD PTR ds:0xa9b7ff40,ax
  409014:	mov    dh,0x84
  409016:	jne    0x40905b
  409018:	div    BYTE PTR [ebx]
  40901a:	cdq    
  40901b:	(bad)  
  40901c:	scas   eax,DWORD PTR es:[edi]
  40901d:	icebp  
  40901e:	data16 sahf 
  409020:	jns    0x408fb6
  409022:	push   ebx
  409023:	ds jmp 0xb79:0x4a225acb
  40902b:	push   0xa3cbe1ab
  409030:	sar    DWORD PTR [eax+ebx*8],1
  409033:	mov    WORD PTR [edx],gs
  409035:	retf   
  409036:	push   es
  409037:	div    edi
  409039:	mov    edi,DWORD PTR [ecx]
  40903b:	test   eax,0xd13ad658
  409040:	les    eax,FWORD PTR [ebp+0x913905e]
  409046:	in     al,0xe
  409048:	repnz push 0xae35fb3a
  40904e:	test   al,0x2a
  409050:	add    ebp,ecx
  409052:	dec    esi
  409053:	xlat   BYTE PTR ds:[ebx]
  409054:	sbb    eax,0x1fdd917f
  409059:	mov    esp,0xbb4aeaf7
  40905e:	popa   
  40905f:	stos   DWORD PTR es:[edi],eax
  409060:	mov    ah,0x85
  409062:	cld    
  409063:	mul    bl
  409065:	add    DWORD PTR [esi-0x2a],esp
  409068:	out    dx,eax
  409069:	xor    DWORD PTR [eax],edi
  40906b:	iret   
  40906c:	ins    DWORD PTR es:[edi],dx
  40906d:	mov    dl,0xc9
  40906f:	hlt    
  409070:	ja     0xc51ff27e
  409076:	adc    al,0xc4
  409078:	push   ss
  409079:	dec    ecx
  40907a:	test   DWORD PTR [eax+0x1f],0xd01f48ac
  409081:	loopne 0x4090a6
  409083:	jnp    0x40903b
  409085:	fs adc ecx,esp
  409088:	sub    dh,bl
  40908a:	test   BYTE PTR [ebx],0x37
  40908d:	aad    0xac
  40908f:	inc    ebx
  409090:	imul   esi,DWORD PTR [ebx-0x3e],0x2518f7e9
  409097:	sahf   
  409098:	push   0xffffffd9
  40909a:	ds push 0x84101e3d
  4090a0:	push   ebx
  4090a2:	arpl   cx,cx
  4090a4:	sub    eax,0xfeb0d572
  4090a9:	jmp    0xc1a26507
  4090ae:	xchg   esi,eax
  4090af:	and    bl,BYTE PTR [ecx-0x49]
  4090b2:	push   ds
  4090b3:	push   0xc76ddac4
  4090b8:	ds scas al,BYTE PTR es:[edi]
  4090ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090bb:	ret    
  4090bc:	(bad)  
  4090bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090be:	test   eax,0xd4a388f6
  4090c3:	(bad)  
  4090c4:	adc    BYTE PTR [ebp-0x59bb0f67],dh
  4090ca:	add    al,0xc9
  4090cc:	inc    ecx
  4090cd:	mov    al,0xe9
  4090cf:	adc    ch,0xb
  4090d2:	push   ecx
  4090d3:	jmp    0xe113:0x50d94af3
  4090da:	add    bh,cl
  4090dc:	sbb    BYTE PTR [eax],bl
  4090de:	xor    ebx,DWORD PTR [ebx]
  4090e0:	fdiv   DWORD PTR [eax+0x7ca23155]
  4090e6:	jge    0x40915b
  4090e8:	add    bh,BYTE PTR [esi]
  4090ea:	aaa    
  4090eb:	sub    al,ah
  4090ed:	mov    edx,0xca5b884c
  4090f2:	dec    ebx
  4090f3:	inc    esp
  4090f4:	xchg   edi,eax
  4090f5:	xor    eax,0xedb19ef2
  4090fa:	mov    DWORD PTR [edi+0x58],eax
  4090fd:	int3   
  4090fe:	mov    ch,0x24
  409100:	mov    al,ds:0x236a1575
  409105:	sub    edi,DWORD PTR [ebp+ebp*8+0x11245399]
  40910c:	or     DWORD PTR [edx],esp
  40910e:	jmp    0x409140
  409110:	repz pop edx
  409112:	push   esp
  409113:	push   0xee9aaa96
  409118:	stos   BYTE PTR es:[edi],al
  409119:	cmp    ebp,DWORD PTR [esi]
  40911b:	lea    esi,[ebx-0x7b]
  40911e:	(bad)  
  409121:	test   al,0xe0
  409123:	xor    DWORD PTR [esp+eax*2+0x63],0x227095fb
  40912b:	aaa    
  40912c:	mov    bl,0xe8
  40912e:	inc    eax
  40912f:	pop    esi
  409130:	mov    ah,0x87
  409132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409133:	push   es
  409134:	pop    esi
  409135:	ror    DWORD PTR [edx+0x1],1
  409138:	ds mov bh,0x7e
  40913b:	fcom   QWORD PTR [ebp+esi*8+0x611a6bc0]
  409142:	fxch   st(6)
  409144:	(bad)  
  409145:	xchg   ebp,eax
  409146:	sbb    al,0x96
  409148:	xchg   ecx,eax
  409149:	fmul   DWORD PTR [eax]
  40914b:	fisub  DWORD PTR [edi]
  40914d:	data16 jecxz 0x409168
  409150:	pop    esi
  409151:	mov    ebx,0x1830364d
  409156:	shl    BYTE PTR [ecx+0x260c6585],1
  40915c:	xchg   ecx,eax
  40915d:	xchg   ebx,eax
  40915e:	outs   dx,DWORD PTR ds:[esi]
  40915f:	popf   
  409160:	xor    DWORD PTR [edi],edx
  409162:	std    
  409163:	out    dx,al
  409164:	fisubr DWORD PTR [edx-0x4b7fefee]
  40916a:	xor    edx,DWORD PTR [edx]
  40916c:	mov    ah,BYTE PTR [ecx+0x69]
  40916f:	push   ecx
  409170:	jb     0x409148
  409172:	or     ebx,DWORD PTR [esi-0x5f4a25c8]
  409178:	test   DWORD PTR [ecx],0x69674668
  40917e:	push   es
  40917f:	leave  
  409180:	jp     0x4091ec
  409182:	pop    ss
  409183:	sub    cl,BYTE PTR [ebx+0x7f]
  409186:	or     eax,edi
  409188:	leave  
  409189:	ins    BYTE PTR es:[edi],dx
  40918a:	pop    eax
  40918b:	sbb    eax,0xa027393e
  409190:	std    
  409191:	ret    
  409192:	pop    ss
  409193:	jae    0x4091ca
  409195:	xor    eax,0xb74d9aae
  40919a:	dec    esi
  40919b:	jno    0x40912a
  40919d:	and    BYTE PTR [edi+0x27],dh
  4091a0:	xor    al,0x1b
  4091a2:	mov    BYTE PTR [edx],cl
  4091a4:	jp     0x409210
  4091a6:	es data16 mov cl,0xfd
  4091aa:	jae    0x4091a1
  4091ac:	sub    ch,ch
  4091ae:	xor    esp,ecx
  4091b0:	rol    DWORD PTR [eax+0x64],cl
  4091b3:	test   eax,0x6c26a289
  4091b8:	imul   edx,DWORD PTR [edx+0x28b78bd0],0x70
  4091bf:	arpl   WORD PTR [edi-0x6b],bx
  4091c2:	(bad)  
  4091c3:	cld    
  4091c4:	repnz mov bh,bl
  4091c7:	inc    edi
  4091c8:	loope  0x409241
  4091ca:	push   cs
  4091cb:	jbe    0x4091bf
  4091cd:	inc    eax
  4091ce:	push   ss
  4091cf:	stos   BYTE PTR es:[edi],al
  4091d0:	adc    ah,BYTE PTR [ebx+0x2f]
  4091d3:	jnp    0x4091aa
  4091d5:	push   esp
  4091d6:	add    DWORD PTR [edi],0xfd043815
  4091dc:	push   ebp
  4091dd:	out    0x51,eax
  4091df:	(bad)  
  4091e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e1:	xor    eax,DWORD PTR [ecx+0xa8ed87]
  4091e7:	scas   al,BYTE PTR es:[edi]
  4091e8:	mov    al,ds:0xbc1eaac4
  4091ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ee:	ret    0x7e5a
  4091f1:	cmp    esi,DWORD PTR cs:[edi]
  4091f4:	jnp    0x40924a
  4091f6:	adc    BYTE PTR [edi],al
  4091f8:	shl    edi,cl
  4091fa:	enter  0x3e30,0x9f
  4091fe:	adc    eax,0x28ee5253
  409203:	popa   
  409204:	(bad)  
  409205:	addr16 out dx,al
  409207:	ins    BYTE PTR es:[edi],dx
  409208:	and    al,0x62
  40920a:	adc    eax,0xd159434d
  40920f:	pop    es
  409210:	sbb    al,0x28
  409212:	es mov esi,0xe534aa8d
  409218:	sbb    eax,0xeae9fb0c
  40921d:	or     bh,BYTE PTR [esi-0x2f]
  409220:	dec    ebp
  409221:	sub    ecx,DWORD PTR [edi]
  409223:	or     ecx,DWORD PTR [esi]
  409225:	or     BYTE PTR [edi],bl
  409227:	fcom   DWORD PTR [ecx]
  409229:	idiv   ebx
  40922b:	push   esi
  40922c:	rcl    DWORD PTR [ebx+0x7],0x5e
  409230:	cmc    
  409231:	pushf  
  409232:	fs sar edx,1
  409235:	adc    al,0x57
  409237:	xchg   DWORD PTR [eax],edi
  409239:	popa   
  40923a:	push   0xffffffcc
  40923c:	mov    WORD PTR [edx+0x3a],cs
  40923f:	jnp    0x4091d0
  409241:	add    bh,BYTE PTR es:[ebx-0x3571b83f]
  409248:	test   BYTE PTR [esi+0x70f9d168],bh
  40924e:	loope  0x4092c6
  409250:	ret    0x9fd4
  409253:	add    eax,0x1dc604ff
  409258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409259:	xchg   edx,eax
  40925a:	mov    esp,0xd7521c17
  40925f:	push   0x89a3ab2e
  409264:	push   edi
  409265:	and    DWORD PTR [edi+ecx*2-0x266f0eb1],eax
  40926c:	addr16 mov cl,bh
  40926f:	jg     0x4092b5
  409271:	stos   BYTE PTR es:[edi],al
  409272:	push   ss
  409273:	jmp    FWORD PTR [edx+eax*8+0x2]
  409277:	clc    
  409278:	sbb    cl,BYTE PTR [eax-0x3a7ec2e4]
  40927e:	mov    edi,0xbf2ed097
  409283:	lahf   
  409284:	dec    esp
  409285:	mov    dl,BYTE PTR [edi]
  409287:	adc    esp,ecx
  409289:	xchg   edi,eax
  40928a:	iret   
  40928b:	xor    ecx,edi
  40928d:	cs and al,0xd9
  409290:	shl    al,1
  409292:	adc    bh,BYTE PTR [ecx]
  409294:	(bad)  
  409295:	cmp    eax,0x1f07210f
  40929a:	pushf  
  40929b:	and    al,bh
  40929d:	rol    DWORD PTR [eax+0x295d214e],cl
  4092a3:	mov    cl,0xb3
  4092a5:	inc    esp
  4092a6:	xchg   edx,eax
  4092a7:	call   0x8ed0e389
  4092ac:	mov    ebp,0xcd7884f0
  4092b1:	dec    ebp
  4092b2:	sbb    DWORD PTR [ecx-0x7],ebp
  4092b5:	add    al,0x6c
  4092b7:	mov    ecx,0x3b9542a2
  4092bc:	cmp    DWORD PTR [ebp-0x6],0xffffffdf
  4092c0:	sti    
  4092c1:	pop    ss
  4092c2:	dec    ebp
  4092c3:	jne    0x4092d0
  4092c5:	aas    
  4092c6:	mov    ecx,0x40fc14b8
  4092cb:	(bad)  
  4092cc:	or     al,0xad
  4092ce:	(bad)  
  4092cf:	add    dh,BYTE PTR [eax+eax*4+0x3141e644]
  4092d6:	sbb    ebp,DWORD PTR [esi]
  4092d8:	test   DWORD PTR [edi-0x6554912e],ecx
  4092de:	test   eax,0xd96abcc9
  4092e3:	popa   
  4092e4:	aad    0xcc
  4092e6:	xchg   ecx,edi
  4092e8:	xchg   BYTE PTR [ecx-0x3e],cl
  4092eb:	retf   0xdcd3
  4092ee:	shl    BYTE PTR [esi-0x54f40fdd],0x8b
  4092f5:	inc    ebp
  4092f6:	xor    ebp,DWORD PTR [ebx+eax*2+0x32]
  4092fa:	and    al,0xc7
  4092fc:	mov    ds:0x557a83f8,eax
  409301:	(bad)  
  409302:	xor    edi,DWORD PTR [edi]
  409304:	mov    esi,0x55528067
  409309:	jecxz  0x40934c
  40930b:	push   0xffffffe6
  40930d:	rol    DWORD PTR [esi],cl
  40930f:	call   0x1dd:0x2f3bf42a
  409316:	push   esi
  409317:	push   edi
  409318:	xchg   ecx,eax
  409319:	(bad)  
  40931a:	pop    ss
  40931b:	dec    ecx
  40931c:	jl     0x4092da
  40931e:	xchg   ecx,eax
  40931f:	mov    DWORD PTR [edi+edx*8],edx
  409322:	push   ss
  409323:	lahf   
  409324:	xor    cl,BYTE PTR [ecx]
  409326:	scas   eax,DWORD PTR es:[edi]
  409327:	in     eax,dx
  409328:	pop    eax
  409329:	add    DWORD PTR [esi],0x33d0ee0b
  40932f:	push   dx
  409331:	stos   BYTE PTR es:[edi],al
  409332:	retf   
  409333:	(bad)  
  409334:	adc    BYTE PTR [eax],cl
  409336:	aaa    
  409337:	push   edi
  409338:	inc    edx
  409339:	fcom   QWORD PTR [esi+0x56]
  40933c:	mov    edi,0x39bb6990
  409341:	adc    edi,edx
  409343:	jle    0x4093b0
  409345:	inc    edi
  409346:	push   ds
  409347:	adc    al,0x1f
  409349:	cmp    edi,esi
  40934b:	cvtps2pi mm3,xmm6
  40934e:	shl    BYTE PTR [ecx-0x34],0x67
  409352:	lock add DWORD PTR gs:[edx+ebp*8],edx
  409357:	pusha  
  409358:	pop    es
  409359:	out    0x67,eax
  40935b:	inc    edx
  40935c:	test   DWORD PTR [edx-0x4f],edi
  40935f:	pop    eax
  409360:	pop    ds
  409361:	push   edx
  409362:	stos   DWORD PTR es:[edi],eax
  409363:	xchg   ebx,eax
  409364:	mov    edx,0xddff448
  409369:	mov    edx,0x15dd4fca
  40936e:	gs fsub st,st(2)
  409371:	fistp  QWORD PTR [ebp-0x77]
  409374:	fstp   TBYTE PTR [edx+0x42f0471b]
  40937a:	div    cl
  40937c:	add    eax,0xabb888c3
  409381:	or     ebp,DWORD PTR [ecx+0x7b]
  409384:	push   edx
  409385:	ja     0x409387
  409387:	sbb    al,0x55
  409389:	mov    DWORD PTR [ebp+0x3f],edi
  40938c:	repz pop edi
  40938e:	and    eax,DWORD PTR [ebp+ebp*8+0x684a7cdb]
  409395:	imul   edi,ebp,0xf5b7cfbb
  40939b:	scas   al,BYTE PTR es:[edi]
  40939c:	loope  0x4093ca
  40939e:	cmp    DWORD PTR [ecx-0x3a],esp
  4093a1:	and    BYTE PTR [ecx-0x33db1b61],0xda
  4093a8:	xor    al,0xf2
  4093aa:	push   edx
  4093ab:	xchg   esp,eax
  4093ac:	xchg   edi,eax
  4093ad:	xor    eax,0x2fb329be
  4093b2:	sbb    dh,BYTE PTR [ecx]
  4093b4:	dec    esp
  4093b5:	sub    eax,0x8ce778a6
  4093ba:	das    
  4093bb:	mov    ecx,0xcd368771
  4093c0:	inc    ebp
  4093c1:	(bad)  
  4093c2:	scas   eax,DWORD PTR es:[edi]
  4093c3:	add    al,0x5b
  4093c5:	pusha  
  4093c6:	xchg   esp,eax
  4093c7:	cdq    
  4093c8:	int    0xbe
  4093ca:	jns    0x40939d
  4093cc:	dec    edx
  4093cd:	xchg   DWORD PTR [ecx-0x22],eax
  4093d0:	jno    0x409420
  4093d2:	pop    edx
  4093d3:	les    edx,FWORD PTR [edx]
  4093d5:	sar    ebp,0x7e
  4093d8:	sbb    eax,0x82f63736
  4093dd:	inc    ecx
  4093de:	loope  0x40943c
  4093e0:	cmp    BYTE PTR [edx-0x2f59d738],bl
  4093e6:	adc    al,0x20
  4093e8:	mov    bh,BYTE PTR [eax-0x60]
  4093eb:	jne    0x409418
  4093ed:	add    BYTE PTR [edi-0x42],dh
  4093f0:	sar    BYTE PTR [edx+0x2fc4b8ae],0x82
  4093f7:	pop    edx
  4093f8:	dec    edi
  4093f9:	inc    edi
  4093fa:	adc    eax,0x86023941
  4093ff:	stos   BYTE PTR es:[edi],al
  409400:	and    BYTE PTR [ebp+0x3],dh
  409403:	mov    es,WORD PTR [ebp+0x46]
  409406:	lahf   
  409407:	rcr    DWORD PTR [edi-0x6d],1
  40940a:	xor    edx,0x6e60643f
  409410:	add    dl,ah
  409412:	cs lock xchg ecx,eax
  409415:	out    0xd5,al
  409417:	sbb    al,0xdc
  409419:	and    BYTE PTR [ecx-0x53],al
  40941c:	mov    edx,DWORD PTR [eax]
  40941e:	test   DWORD PTR [esi+0xd],edi
  409421:	push   esi
  409422:	mov    DWORD PTR [ebx],0x82feb931
  409428:	sbb    bl,BYTE PTR [eax+0x4c]
  40942b:	fisttp QWORD PTR [ebx+0x53]
  40942e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40942f:	cs aam 0x8a
  409432:	mov    esp,0x84767c31
  409437:	jo     0x4093e1
  409439:	data16 fild DWORD PTR [edx+ecx*8-0x43]
  40943e:	pop    esi
  40943f:	inc    esi
  409440:	mov    al,ds:0x9453af22
  409445:	or     eax,0x863a9810
  40944a:	mov    cl,0x2f
  40944c:	dec    esi
  40944d:	mov    eax,ds:0x7aa6712a
  409452:	(bad)
  409455:	add    BYTE PTR [edi-0x37fec908],cl
  40945b:	push   ecx
  40945c:	fdiv   QWORD PTR [edx]
  40945e:	fwait
  40945f:	mov    WORD PTR [ecx-0x28f0345e],es
  409465:	push   eax
  409466:	pushf  
  409467:	sub    DWORD PTR [ebp-0x34b0d50],0xffffffa0
  40946e:	popa   
  40946f:	push   ebx
  409470:	mov    bl,0x85
  409472:	add    DWORD PTR ds:0x879d7f26,esi
  409478:	jecxz  0x409481
  40947a:	and    eax,DWORD PTR [ebp+0x12a4fd82]
  409480:	inc    ebp
  409481:	jl     0x40940d
  409483:	pop    esi
  409484:	mov    ebx,0x417733cb
  409489:	and    DWORD PTR [esi],0xfffffff4
  40948c:	fcom   QWORD PTR ds:0x81f4d8f0
  409492:	je     0x409428
  409494:	push   DWORD PTR [esi-0x16cc6b84]
  40949a:	loopne 0x4094f3
  40949c:	(bad)  
  40949d:	jae    0x40946e
  40949f:	or     ebx,ebp
  4094a1:	add    ch,0x3c
  4094a4:	add    bl,cl
  4094a6:	outs   dx,BYTE PTR ds:[esi]
  4094a7:	loopne 0x4094f2
  4094a9:	xchg   esi,eax
  4094aa:	cmp    ebx,DWORD PTR ds:0x15011217
  4094b0:	mov    ebp,0x8f28e673
  4094b5:	icebp  
  4094b6:	cmp    eax,0x8a8e4a03
  4094bb:	lahf   
  4094bc:	mov    ecx,ss
  4094be:	jne    0x4094de
  4094c0:	inc    ebp
  4094c1:	aaa    
  4094c2:	(bad)  
  4094c3:	or     edx,DWORD PTR [esi-0x3c]
  4094c6:	dec    esp
  4094c7:	mov    edx,0x7567c047
  4094cd:	dec    edx
  4094ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094cf:	les    ebp,FWORD PTR [esi]
  4094d1:	stos   DWORD PTR es:[edi],eax
  4094d2:	scas   eax,DWORD PTR es:[edi]
  4094d3:	mov    al,0x2b
  4094d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d6:	aad    0xe8
  4094d8:	mov    ds:0x43248437,eax
  4094dd:	or     al,0x6e
  4094df:	pop    ds
  4094e0:	jns    0x4094aa
  4094e2:	jle    0x4094b0
  4094e4:	cmp    BYTE PTR [eax+0xd],al
  4094e7:	cmp    DWORD PTR [esi+0x78],esi
  4094ea:	je     0x4094ce
  4094ec:	mov    edx,eax
  4094ee:	ret    
  4094ef:	mov    dl,0x13
  4094f1:	retf   0x13b1
  4094f4:	dec    edi
  4094f5:	jmp    0xc5f6ab8e
  4094fa:	imul   DWORD PTR [edx]
  4094fc:	rol    esi,1
  4094fe:	test   eax,0xc738924b
  409503:	or     DWORD PTR [eax-0x4d76efe2],0x23e20a13
  40950d:	pop    eax
  40950e:	pop    edx
  40950f:	mov    WORD PTR [ebx+0x50],ss
  409512:	std    
  409513:	mov    ah,0xe9
  409515:	mov    eax,ds:0x84a66d42
  40951a:	xchg   edi,eax
  40951b:	mov    esp,0x3810cf9
  409520:	mov    DWORD PTR es:[esi],esi
  409523:	popf   
  409524:	xchg   ebp,eax
  409525:	popa   
  409526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409527:	dec    esp
  409528:	cmp    ecx,DWORD PTR [ecx+0x3f]
  40952b:	addr16 jae 0x4094d6
  40952e:	cld    
  40952f:	jmp    0x409536
  409531:	ins    BYTE PTR es:[edi],dx
  409532:	xor    bh,BYTE PTR [ebx+eiz*8+0x6f]
  409536:	dec    esp
  409537:	jecxz  0x409568
  409539:	ucomiss xmm3,DWORD PTR [edx-0x58]
  40953d:	jle    0x409599
  40953f:	imul   edi,edi,0xffffffd1
  409542:	and    ecx,DWORD PTR [edi+ebp*2-0x3fbf4ea9]
  409549:	out    dx,eax
  40954a:	pop    esp
  40954b:	push   eax
  40954c:	add    al,0x93
  40954e:	mov    al,cl
  409550:	(bad)  
  409551:	fistp  QWORD PTR [edx-0x4e]
  409554:	mov    ch,0x28
  409556:	call   0xb30fcd7d
  40955b:	inc    edx
  40955c:	or     bl,BYTE PTR [eax-0xc7b5411]
  409562:	push   cs
  409563:	jle    0x409595
  409565:	mov    DWORD PTR [eax+0x39],ebp
  409568:	mov    esp,0x67dd6edb
  40956d:	stos   BYTE PTR es:[edi],al
  40956e:	push   ss
  40956f:	or     DWORD PTR [ebp-0x45c14152],0x1e5eac5c
  409579:	mov    edx,0x25e0a2a4
  40957e:	hlt    
  40957f:	xor    al,0x64
  409581:	or     bh,BYTE PTR [eax+0x3f]
  409584:	popa   
  409585:	mov    ds,WORD PTR [esi-0x43]
  409588:	nop
  409589:	dec    eax
  40958a:	es sar esi,0x58
  40958e:	pushf  
  40958f:	lods   al,BYTE PTR ds:[esi]
  409590:	add    BYTE PTR [edi-0x3e2fd041],bl
  409596:	mov    eax,?
  409598:	xchg   edi,eax
  409599:	lock pop edx
  40959b:	add    DWORD PTR [ebx],0x5adc9a77
  4095a1:	push   0x2f
  4095a3:	add    esp,0xfffffffe
  4095a6:	(bad)  
  4095a7:	fist   WORD PTR [esp+ebp*1]
  4095aa:	add    DWORD PTR [ebx+ebx*1],ebp
  4095ad:	inc    ebp
  4095ae:	sub    al,BYTE PTR [esi]
  4095b0:	pushf  
  4095b1:	lods   eax,DWORD PTR ds:[esi]
  4095b2:	(bad)  
  4095b3:	pop    eax
  4095b4:	or     bh,BYTE PTR [ebx+ecx*1+0x2a]
  4095b8:	(bad)  
  4095b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ba:	mov    edi,0xa9ea60a0
  4095bf:	inc    DWORD PTR [ebx]
  4095c1:	or     DWORD PTR [edi+0x70460789],ebx
  4095c7:	repnz xor ax,0xb61b
  4095cc:	ficomp WORD PTR [eax-0x1dca9792]
  4095d2:	(bad)  
  4095d3:	sbb    edx,DWORD PTR [ebx-0x19]
  4095d6:	sub    DWORD PTR [edi],ebx
  4095d8:	cmp    eax,DWORD PTR [ebp+0x59b3c781]
  4095de:	xchg   edx,eax
  4095df:	cmp    cl,cl
  4095e1:	jno    0x40961d
  4095e3:	xor    eax,0xec32217b
  4095e8:	es mov dh,0x14
  4095eb:	hlt    
  4095ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ed:	and    al,bh
  4095ef:	stos   DWORD PTR es:[edi],eax
  4095f0:	pop    esi
  4095f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f2:	sbb    ebx,DWORD PTR [esi-0x2f]
  4095f5:	in     al,dx
  4095f6:	mov    eax,DWORD PTR [eax]
  4095f8:	lods   eax,DWORD PTR ds:[esi]
  4095f9:	dec    ecx
  4095fa:	scas   eax,DWORD PTR es:[edi]
  4095fb:	ret    0xa872
  4095fe:	stos   BYTE PTR es:[edi],al
  4095ff:	mov    WORD PTR [ebp+0xe8833f3],gs
  409605:	dec    ebp
  409606:	and    esi,ecx
  409608:	sbb    BYTE PTR ds:0x4c301743,0xbc
  40960f:	hlt    
  409610:	test   BYTE PTR [ecx-0x20],bh
  409613:	rol    DWORD PTR [ebp-0x282dfdee],1
  409619:	xor    BYTE PTR [ecx+0x38eadd51],cl
  40961f:	jmp    0x4095ca
  409621:	sub    ebp,ecx
  409623:	cmp    al,0x4b
  409625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409626:	pop    edi
  409627:	lea    esp,[esp+eax*8]
  40962a:	ret    
  40962b:	dec    ebp
  40962c:	xor    bl,ah
  40962e:	dec    eax
  40962f:	cwde   
  409630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409631:	push   ebx
  409632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409633:	std    
  409634:	mov    dl,0xdd
  409636:	out    dx,al
  409637:	xchg   esp,eax
  409638:	jmp    0x8ca5:0x1edfdb17
  40963f:	mov    dh,0xe6
  409641:	fwait
  409642:	out    0x70,eax
  409644:	jg     0x409673
  409646:	inc    edx
  409647:	arpl   sp,sp
  409649:	and    bl,BYTE PTR [edi+0x56f697e1]
  40964f:	mov    esp,0xa6160df5
  409654:	(bad)  
  409655:	jmp    0x55a5:0x58c27a77
  40965c:	stos   DWORD PTR es:[edi],eax
  40965d:	mov    ch,0x7a
  40965f:	lea    ecx,[eax+0x2fe5ac45]
  409665:	sti    
  409666:	pop    edx
  409667:	scas   eax,DWORD PTR es:[edi]
  409668:	ds out 0x5d,al
  40966b:	(bad)  
  40966c:	or     BYTE PTR [edi+edx*8-0x45],dl
  409670:	xchg   esi,eax
  409671:	outs   dx,DWORD PTR ds:[esi]
  409672:	pop    edx
  409673:	call   0xcdf5:0xd3b404cd
  40967a:	add    edx,DWORD PTR [eax-0x459a2fad]
  409680:	out    dx,al
  409681:	mov    edx,0xd3e8d7ad
  409686:	js     0x40961d
  409688:	sti    
  409689:	sbb    DWORD PTR [esi+esi*1],0xffffff90
  40968d:	test   eax,0x36268a1
  409692:	pop    edi
  409693:	dec    esi
  409694:	and    bh,al
  409696:	in     al,dx
  409697:	dec    esp
  409698:	add    al,0xdd
  40969a:	lods   al,BYTE PTR ds:[esi]
  40969b:	sbb    eax,0xe2f3834c
  4096a0:	adc    ebp,DWORD PTR [edx-0x77]
  4096a3:	push   0x3e
  4096a5:	inc    esp
  4096a6:	(bad)  
  4096a8:	and    dh,BYTE PTR [eax+0x2b]
  4096ab:	dec    esi
  4096ac:	ret    
  4096ad:	mov    cl,0x20
  4096af:	dec    eax
  4096b0:	sbb    eax,0xc4a4db70
  4096b5:	loopne 0x409720
  4096b7:	(bad)  
  4096b8:	into   
  4096b9:	sti    
  4096ba:	adc    edx,DWORD PTR [eax+0x2cbf43e1]
  4096c0:	adc    edx,esi
  4096c2:	push   0x36
  4096c4:	jg     0x409716
  4096c6:	and    esp,ecx
  4096c8:	adc    al,0x7
  4096ca:	cmp    eax,0x4a2b6069
  4096cf:	aas    
  4096d0:	or     al,0x0
  4096d2:	cli    
  4096d3:	adc    eax,0x52a5f980
  4096d8:	or     al,0x16
  4096da:	push   es
  4096db:	mov    edi,0x5f3ce07b
  4096e0:	adc    esi,esi
  4096e2:	(bad)  
  4096e3:	push   0x6416b8af
  4096e8:	mov    ch,0x3a
  4096ea:	in     al,0xfc
  4096ec:	jbe    0x4096f3
  4096ee:	jecxz  0x40975b
  4096f0:	int    0x84
  4096f2:	cmc    
  4096f3:	dec    di
  4096f5:	enter  0x337e,0x47
  4096f9:	popa   
  4096fa:	jno    0x4096f3
  4096fc:	add    edx,edx
  4096fe:	(bad)  
  409700:	adc    esp,DWORD PTR [ecx+eiz*8-0x158a1f5b]
  409707:	mov    bl,0x8a
  409709:	push   es
  40970a:	cwde   
  40970b:	sbb    ebx,DWORD PTR [ebx]
  40970d:	dec    esi
  40970e:	pusha  
  40970f:	adc    edi,DWORD PTR [eax+0x740701bc]
  409715:	cmp    BYTE PTR [ecx-0x6a005a3a],bh
  40971b:	fwait
  40971c:	xchg   esp,eax
  40971d:	mov    ah,0x51
  40971f:	and    eax,0x42a507df
  409724:	pop    ecx
  409725:	repnz xor BYTE PTR [edi],bl
  409728:	or     eax,0x5caebb49
  40972d:	lods   eax,DWORD PTR ds:[esi]
  40972e:	minps  xmm5,XMMWORD PTR [edx]
  409731:	push   eax
  409732:	sub    eax,0x934a35ca
  409737:	fmul   QWORD PTR [esi]
  409739:	call   0xbc7f0bd6
  40973e:	addr16 xor ch,ah
  409741:	clc    
  409742:	outs   dx,DWORD PTR ds:[esi]
  409743:	pop    esi
  409744:	arpl   WORD PTR [edx+0x3e],sp
  409747:	bound  esp,QWORD PTR [ecx]
  409749:	push   cs
  40974a:	mov    ebp,edx
  40974c:	inc    edi
  40974d:	xchg   ebx,eax
  40974e:	ficomp WORD PTR [esi]
  409750:	imul   ebp,eax,0xc4e5c241
  409756:	xor    cl,bh
  409758:	fmul   st,st(2)
  40975a:	and    ebx,DWORD PTR [edi+0x1b7f1547]
  409760:	xchg   ebx,eax
  409761:	ret    
  409762:	ds enter 0x8e8,0xd0
  409767:	inc    ebp
  409768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409769:	div    BYTE PTR [ebx+0x44]
  40976c:	lea    eax,[esi-0x11]
  40976f:	arpl   WORD PTR [edx+0x45091ece],bx
  409775:	shl    edx,1
  409777:	cmp    BYTE PTR [eax-0x6],ah
  40977a:	and    DWORD PTR [esi],ebp
  40977c:	sub    DWORD PTR [ebx+eax*1+0x5a],0xffffffa1
  409781:	cld    
  409782:	aam    0x9a
  409784:	rcr    DWORD PTR [edi-0x70],cl
  409787:	dec    ebp
  409788:	mov    ebx,0x2270c1bd
  40978d:	and    eax,DWORD PTR [edi-0x6a]
  409790:	pop    es
  409791:	call   0xd7db76d3
  409796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409797:	(bad)  
  409798:	enter  0x2e8e,0x18
  40979c:	push   cs
  40979d:	repnz xor al,BYTE PTR [ebx+0x6d44292b]
  4097a4:	fdiv   QWORD PTR [eax-0x464b6d5d]
  4097aa:	adc    eax,0x1d258449
  4097af:	sub    bl,BYTE PTR [edi+ebx*1+0x2d]
  4097b3:	dec    ecx
  4097b4:	fcom   QWORD PTR [ebx-0x1a]
  4097b7:	dec    eax
  4097b8:	jge    0x40980b
  4097ba:	int3   
  4097bb:	jg     0x409747
  4097bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097be:	cmp    BYTE PTR [edi],bh
  4097c0:	sbb    DWORD PTR [ecx],0x5bf8bbb3
  4097c6:	ds push edx
  4097c8:	out    0x3c,al
  4097ca:	shl    BYTE PTR [ebp-0x1c],1
  4097cd:	push   edx
  4097ce:	xchg   BYTE PTR [ebx-0x11fc7007],ch
  4097d4:	mov    ds:0xb2f3ac55,al
  4097d9:	adc    al,0x20
  4097db:	pushf  
  4097dc:	push   0xffffff8d
  4097de:	mov    WORD PTR [ebx-0x51dcaaad],?
  4097e4:	ja     0x4097c7
  4097e6:	jno    0x4097b5
  4097e8:	inc    ebx
  4097e9:	pop    esp
  4097ea:	jmp    0x2645:0xfd9e0158
  4097f1:	sub    al,0x97
  4097f3:	mul    BYTE PTR [eax-0x70]
  4097f6:	clc    
  4097f7:	loope  0x409873
  4097f9:	icebp  
  4097fa:	(bad)  
  4097fb:	sar    DWORD PTR [esi-0x740c25bf],1
  409801:	xchg   DWORD PTR [esp+ebx*1+0x38ca4959],ebx
  409808:	sub    eax,ebp
  40980a:	and    al,0x6b
  40980c:	xor    BYTE PTR [ebx],dh
  40980e:	cmc    
  40980f:	push   es
  409810:	inc    esp
  409811:	rol    al,1
  409813:	inc    ecx
  409814:	in     eax,dx
  409815:	cmp    BYTE PTR [eax+0x2b4e1397],0xc9
  40981c:	cmp    al,0x6c
  40981e:	xor    DWORD PTR [edi],ebp
  409820:	rol    BYTE PTR ds:0x24a5f56b,cl
  409826:	xor    edi,DWORD PTR ds:0x2fb60597
  40982c:	and    eax,0xd32fabb1
  409831:	inc    ebp
  409832:	iret   
  409833:	icebp  
  409834:	lea    edi,[ecx]
  409836:	cmp    al,0x4b
  409838:	cwde   
  409839:	ds (bad) 
  40983b:	call   0xc5b8bee9
  409840:	xchg   ebp,eax
  409841:	test   BYTE PTR [eax],ah
  409843:	aam    0x56
  409845:	cmp    DWORD PTR [esi-0x56],ebp
  409848:	gs retf 
  40984a:	outs   dx,DWORD PTR ds:[esi]
  40984b:	ins    DWORD PTR es:[edi],dx
  40984c:	dec    eax
  40984d:	xchg   DWORD PTR [edi],ebx
  40984f:	mov    esi,0xf0f4e6cf
  409854:	xchg   esi,eax
  409855:	popa   
  409856:	pop    esp
  409857:	add    eax,0xe2fe93a1
  40985c:	icebp  
  40985d:	out    0x4b,eax
  40985f:	gs mov bh,ch
  409862:	mov    ?,WORD PTR [ebp+edi*1-0x6d]
  409866:	mov    esp,0x817166b3
  40986b:	shl    DWORD PTR [edx+0x7c],1
  40986e:	sub    dh,BYTE PTR [edx-0x3bf6b694]
  409874:	imul   eax,esp,0x71
  409877:	jecxz  0x4098c5
  409879:	fwait
  40987a:	in     eax,dx
  40987b:	lahf   
  40987c:	cmc    
  40987d:	ins    BYTE PTR es:[edi],dx
  40987e:	in     eax,dx
  40987f:	pop    ebp
  409880:	push   cs
  409881:	lods   al,BYTE PTR ds:[esi]
  409882:	inc    ebx
  409883:	in     al,dx
  409884:	push   esp
  409885:	repnz and al,BYTE PTR [edi+0x3fa31dde]
  40988c:	jb     0x409860
  40988e:	mov    bh,0xc3
  409890:	sbb    DWORD PTR [esi-0x35c95b64],esp
  409896:	mov    ah,0x29
  409898:	mov    dh,0x46
  40989a:	push   eax
  40989b:	sbb    edx,DWORD PTR [edx+0x3f]
  40989e:	test   BYTE PTR [eax],cl
  4098a0:	inc    ebp
  4098a1:	inc    eax
  4098a2:	jno    0x409836
  4098a4:	frstor [eax]
  4098a6:	mov    ?,WORD PTR [esi+0x26]
  4098a9:	mov    DWORD PTR [ebp-0x79],esi
  4098ac:	fwait
  4098ad:	push   esp
  4098ae:	mov    bh,0x9b
  4098b0:	mov    edi,0x8c108c3c
  4098b5:	sti    
  4098b6:	add    BYTE PTR [esi+ebx*1+0x41],0x35
  4098bb:	cmp    BYTE PTR [eax+0x4ff63ebb],bh
  4098c1:	rol    BYTE PTR [ebx-0x4ae6444b],cl
  4098c7:	push   esp
  4098c8:	or     al,0x45
  4098ca:	xchg   esi,eax
  4098cb:	xlat   BYTE PTR ds:[ebx]
  4098cc:	retf   0x1f05
  4098cf:	mov    edx,0x88991cc
  4098d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d5:	xchg   ecx,eax
  4098d6:	das    
  4098d7:	and    bh,BYTE PTR [ebx-0x4f]
  4098da:	mov    edx,ecx
  4098dc:	popf   
  4098dd:	(bad)  
  4098df:	jns    0x4098f6
  4098e1:	out    0x79,eax
  4098e3:	mov    bl,0x79
  4098e5:	fs adc bl,ah
  4098e8:	or     edx,ebp
  4098ea:	int3   
  4098eb:	in     al,0x4e
  4098ed:	gs xchg ecx,eax
  4098ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f0:	cmp    ebp,esi
  4098f2:	jl     0x40988b
  4098f4:	dec    ebx
  4098f5:	sar    DWORD PTR ds:0xeaa825d8,0xfd
  4098fc:	xor    ebp,DWORD PTR [ebp+eax*8+0x7a634fd6]
  409903:	fs cld 
  409905:	out    0x69,eax
  409907:	cmp    ah,BYTE PTR [ecx]
  409909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990a:	lods   eax,DWORD PTR ds:[esi]
  40990b:	jle    0x40991d
  40990d:	into   
  40990e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990f:	xlat   BYTE PTR ds:[ebx]
  409910:	xchg   edi,eax
  409911:	dec    ebp
  409912:	inc    edi
  409913:	mov    dl,0xc9
  409915:	mov    edi,0xd1ae699b
  40991a:	lds    ecx,FWORD PTR [ebp+0x3c]
  40991d:	popf   
  40991e:	push   esi
  40991f:	lds    ebp,FWORD PTR [eax+0x2d]
  409922:	cdq    
  409923:	rcr    DWORD PTR [edx-0x31bb9fd5],1
  409929:	push   edi
  40992a:	and    DWORD PTR [edi+0x40],0xffffffad
  40992e:	clc    
  40992f:	or     ebp,DWORD PTR [edx]
  409931:	xchg   edx,eax
  409932:	add    BYTE PTR fs:[ecx],ch
  409935:	cdq    
  409936:	imul   edi,DWORD PTR [edi],0x5fa8e47
  40993c:	pop    esi
  40993d:	add    eax,DWORD PTR [esi-0x64]
  409940:	out    0xc3,eax
  409942:	ins    BYTE PTR es:[edi],dx
  409943:	imul   edi,DWORD PTR ss:[edx],0x337b7e59
  40994a:	xor    DWORD PTR [eax-0x64],ebp
  40994d:	outs   dx,BYTE PTR ds:[esi]
  40994e:	add    eax,0x37a4c8ea
  409953:	shl    DWORD PTR [esi],cl
  409955:	call   0x7cd5:0xa0ae7304
  40995c:	call   0x20f665b2
  409961:	sbb    eax,0xed050c39
  409966:	push   ebp
  409967:	fmul   QWORD PTR [eax]
  409969:	(bad)  
  40996a:	addr16 adc ax,0x4b69
  40996f:	cmp    BYTE PTR [ebx-0x24],ah
  409972:	add    al,0x2
  409974:	call   0x4ca1:0x8075d4c3
  40997b:	push   ebp
  40997c:	ret    
  40997d:	mov    DWORD PTR [ebp-0x3b],esp
  409980:	mov    al,0x10
  409982:	sar    BYTE PTR [eax+edx*2],cl
  409985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409986:	(bad)  
  409987:	(bad)  
  409988:	adc    ah,BYTE PTR [ebx+0x19]
  40998b:	push   es
  40998c:	xchg   ebx,eax
  40998d:	inc    ebp
  40998e:	jg     0x409923
  409990:	dec    esp
  409991:	push   es
  409992:	rcl    BYTE PTR [esi+0x32cd8d28],cl
  409998:	test   DWORD PTR es:[ecx-0x18],esi
  40999c:	and    BYTE PTR [esi-0x5341889d],cl
  4099a2:	inc    esp
  4099a3:	das    
  4099a4:	je     0x4099d7
  4099a6:	(bad)  
  4099a7:	test   al,0xb8
  4099a9:	mov    ebp,0xcd2a1285
  4099ae:	gs push eax
  4099b0:	or     ecx,DWORD PTR [edx-0x7380b0ea]
  4099b6:	jae    0x409a25
  4099b8:	pop    ecx
  4099b9:	outs   dx,DWORD PTR ds:[esi]
  4099ba:	jne    0x4099e3
  4099bc:	push   ebp
  4099bd:	cmp    bh,BYTE PTR [edx+edi*2-0x6e]
  4099c1:	stos   DWORD PTR es:[edi],eax
  4099c2:	sub    ax,0xf838
  4099c6:	mov    dh,0x6d
  4099c8:	xchg   ecx,eax
  4099c9:	test   eax,0xcede3b19
  4099ce:	xchg   esp,eax
  4099cf:	shr    DWORD PTR [edx-0x7b],0x7
  4099d3:	jg     0x4099f0
  4099d5:	jecxz  0x4099d6
  4099d7:	inc    esp
  4099d8:	inc    ecx
  4099d9:	repz jmp 0x2df19f2d
  4099df:	ss jmp 0xa0ad:0x6cfd881f
  4099e7:	mov    DWORD PTR [esi+0x2a7fd0c2],ebp
  4099ed:	cmp    WORD PTR [edx-0xb],cx
  4099f1:	xor    BYTE PTR [ebx-0x37],dh
  4099f4:	pop    ss
  4099f5:	mov    al,ds:0x3b955351
  4099fa:	inc    esp
  4099fb:	(bad)  
  4099fc:	imul   BYTE PTR [esi]
  4099fe:	push   ss
  4099ff:	rcl    DWORD PTR ds:[ebx+0x13793ffa],cl
  409a06:	lock mov al,ds:0xf1a75eeb
  409a0c:	add    al,0xd3
  409a0e:	hlt    
  409a0f:	cdq    
  409a10:	add    BYTE PTR [eax+0x4e73a5d],dh
  409a16:	jno    0x409a67
  409a18:	adc    edx,esp
  409a1a:	inc    ebp
  409a1b:	add    ecx,eax
  409a1d:	int    0x49
  409a1f:	dec    eax
  409a20:	js     0x409a7a
  409a22:	test   DWORD PTR [edx-0x18],0xe0392ce9
  409a29:	sub    DWORD PTR [esi],0x4febc837
  409a2f:	inc    ecx
  409a30:	retf   0x52e6
  409a33:	dec    esi
  409a34:	cmp    al,0x1c
  409a36:	mov    ebp,0x6a7aef11
  409a3b:	aam    0x3
  409a3d:	pop    es
  409a3e:	fidiv  WORD PTR [edi+0x53]
  409a41:	xor    bh,BYTE PTR [ebp-0x34dd4f2e]
  409a47:	aaa    
  409a48:	fidivr WORD PTR [eax]
  409a4a:	adc    DWORD PTR [edi-0x3b3112c0],ecx
  409a50:	mov    es,WORD PTR [ebp+0x73]
  409a53:	call   0xb8f47cb9
  409a58:	mov    al,0x55
  409a5a:	mov    ds:0xbdaa12a5,eax
  409a5f:	sbb    ah,dh
  409a61:	adc    ebx,ebx
  409a63:	test   eax,0xa069ae48
  409a68:	mov    bh,0x8b
  409a6a:	ss sti 
  409a6c:	int3   
  409a6d:	cmp    BYTE PTR [esi-0x6b],al
  409a70:	(bad)  
  409a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a72:	btr    DWORD PTR [esi],ecx
  409a75:	pusha  
  409a76:	fs jns 0x409a3c
  409a79:	pusha  
  409a7a:	cmp    al,0xb3
  409a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a7d:	dec    ebp
  409a7e:	enter  0xd28b,0xd
  409a82:	jne    0x409a3a
  409a84:	or     cl,dh
  409a86:	das    
  409a87:	lea    ebx,[ebx+esi*1-0x19168155]
  409a8e:	cwde   
  409a8f:	fwait
  409a90:	into   
  409a91:	leave  
  409a92:	mov    edi,0x895a8fdc
  409a97:	fs in  al,dx
  409a99:	(bad)  
  409a9a:	hlt    
  409a9b:	mov    ch,BYTE PTR [eax+0x4f31d1a9]
  409aa1:	sbb    bh,ah
  409aa3:	fldcw  WORD PTR [esi+0x7e446584]
  409aa9:	jb     0x409a51
  409aab:	mov    ah,0xa
  409aad:	inc    edx
  409aae:	push   edx
  409aaf:	pusha  
  409ab0:	in     al,0x60
  409ab2:	enter  0x9e4d,0xdd
  409ab6:	inc    esi
  409ab7:	add    edx,DWORD PTR [esi-0x75]
  409aba:	or     eax,0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b9d
  409b48:	push   ebp
  409b49:	mov    al,ds:0x7a043907
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	into   
  409b54:	or     cl,BYTE PTR [ebx]
  409b56:	and    eax,0xb3c03596
  409b5b:	pop    eax
  409b5c:	pop    ecx
  409b5d:	mov    ecx,0x45451edf
  409b62:	mov    eax,0xe9aa763c
  409b67:	mov    cl,0xa3
  409b69:	xchg   ecx,eax
  409b6a:	ins    DWORD PTR es:[edi],dx
  409b6b:	sbb    edi,DWORD PTR [edx+0xe3c939c]
  409b71:	push   esi
  409b72:	mov    esp,0xfc6ae2d
  409b77:	lods   al,BYTE PTR ds:[esi]
  409b78:	mov    ebx,0xb522f3a1
  409b7d:	fs gs sub eax,0x825c95d6
  409b84:	mov    esi,0xcec0868b
  409b89:	sub    al,0xef
  409b8b:	dec    edi
  409b8c:	push   cs
  409b8d:	mov    eax,0x85d355c9
  409b92:	imul   esi,DWORD PTR [ecx],0xffffff87
  409b95:	arpl   di,bx
  409b97:	mov    fs,WORD PTR [edi+0x3a]
  409b9a:	arpl   WORD PTR [edx-0x11ed4208],di
  409ba0:	lds    eax,FWORD PTR [eax+0x3e]
  409ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba4:	jmp    0x409c1b
  409ba6:	inc    esi
  409ba7:	mov    dl,0x8
  409ba9:	push   edi
  409baa:	dec    edi
  409bab:	xchg   ebp,eax
  409bac:	imul   esp,DWORD PTR ss:[esi+0x7d],0x4d408276
  409bb4:	mov    edx,0xfd397778
  409bb9:	daa    
  409bba:	div    BYTE PTR [eax]
  409bbc:	mov    eax,ds:0xf50a9ec3
  409bc1:	adc    DWORD PTR [eax],esp
  409bc3:	pop    ss
  409bc4:	dec    eax
  409bc5:	jnp    0x409b4d
  409bc7:	xor    BYTE PTR [edx-0x5c920705],bh
  409bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bce:	xchg   ebp,eax
  409bcf:	adc    DWORD PTR [ebx+0x513242d7],ebp
  409bd5:	mov    al,0x90
  409bd7:	ins    DWORD PTR es:[edi],dx
  409bd8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409bda:	les    eax,FWORD PTR [edi]
  409bdc:	jno    0x409bc2
  409bde:	dec    edx
  409bdf:	pop    edx
  409be0:	or     bl,BYTE PTR [ebp-0x6a987f1b]
  409be6:	mov    ebp,eax
  409be8:	mov    ebx,0xea25b2ca
  409bed:	jg     0x409c3e
  409bef:	outs   dx,DWORD PTR ds:[esi]
  409bf0:	pop    es
  409bf1:	popf   
  409bf2:	and    edi,DWORD PTR [edi+0x3928b249]
  409bf8:	fdivr  DWORD PTR [esi+0x58876bf9]
  409bfe:	pop    ecx
  409bff:	mov    edx,0x5efd7ff4
  409c04:	inc    eax
  409c05:	pop    edx
  409c06:	push   es
  409c07:	mov    al,0xa1
  409c09:	loop   0x409bdd
  409c0b:	or     ah,0x46
  409c0e:	sub    bl,BYTE PTR [esi+0x71]
  409c11:	push   es
  409c12:	add    eax,0xdf30e4ee
  409c17:	test   DWORD PTR [ecx-0x55c7dfb],eax
  409c1d:	dec    esi
  409c1e:	push   ds
  409c1f:	je     0x409c5a
  409c21:	pop    es
  409c22:	and    DWORD PTR [ebx],0xffffffb7
  409c25:	or     BYTE PTR ds:0x1132b63b,bl
  409c2b:	mov    ds:0xf0d9a368,al
  409c30:	retf   
  409c31:	(bad)  
  409c32:	fcomp  QWORD PTR [ecx]
  409c34:	jns    0x409c1f
  409c36:	call   DWORD PTR [ebx]
  409c38:	sti    
  409c39:	pop    ss
  409c3a:	sar    DWORD PTR [edi-0x2c],cl
  409c3d:	sbb    BYTE PTR [ebx-0x6a],bl
  409c40:	shl    BYTE PTR [ecx],cl
  409c42:	fsub   DWORD PTR [eax-0x1f8826c7]
  409c48:	xchg   ebx,eax
  409c49:	jno    0x409c63
  409c4b:	jae    0x409c9d
  409c4d:	in     eax,dx
  409c4e:	adc    ch,BYTE PTR [ecx-0x10]
  409c51:	jmp    0x10ed0ff1
  409c56:	int3   
  409c57:	xchg   BYTE PTR [edx],bl
  409c59:	add    al,0xc4
  409c5b:	push   0xfffffff5
  409c5d:	pop    ecx
  409c5e:	sahf   
  409c5f:	dec    ecx
  409c60:	add    al,0xeb
  409c62:	dec    eax
  409c63:	xor    eax,0x4fde28c7
  409c68:	inc    ebx
  409c69:	push   edx
  409c6a:	and    BYTE PTR [eax],dl
  409c6c:	push   eax
  409c6d:	sahf   
  409c6e:	ins    BYTE PTR es:[edi],dx
  409c6f:	push   ds
  409c70:	cli    
  409c71:	ror    BYTE PTR cs:[ebx],1
  409c74:	in     eax,0xde
  409c76:	shr    DWORD PTR ds:0x8951601,1
  409c7c:	or     al,0x98
  409c7e:	ror    eax,1
  409c80:	hlt    
  409c81:	lahf   
  409c82:	test   eax,0x272adab4
  409c87:	ret    0xfabf
  409c8a:	mov    DWORD PTR [eax+0x8],0xe2b60578
  409c91:	jns    0x409c6e
  409c93:	or     eax,0x149f0f61
  409c98:	dec    esp
  409c99:	rep lods al,BYTE PTR ds:[esi]
  409c9b:	jge    0x409c6d
  409c9d:	pop    ss
  409c9e:	xchg   bl,bl
  409ca0:	ds ret 0x89b1
  409ca4:	and    DWORD PTR [ecx],ecx
  409ca6:	scas   al,BYTE PTR es:[edi]
  409ca7:	sub    al,0x85
  409ca9:	cmp    eax,0x8964123a
  409cae:	add    ebx,DWORD PTR [edx-0x189b7888]
  409cb4:	les    ebp,FWORD PTR [ebx]
  409cb6:	pop    es
  409cb7:	bnd je 0x409d33
  409cba:	fisub  DWORD PTR [ecx]
  409cbc:	jg     0x409cfe
  409cbe:	stos   BYTE PTR es:[edi],al
  409cbf:	sti    
  409cc0:	sahf   
  409cc1:	clc    
  409cc2:	jle    0x409cea
  409cc4:	push   esi
  409cc5:	sub    eax,0xa37cd9ac
  409cca:	sbb    al,0x6
  409ccc:	ret    
  409ccd:	iret   
  409cce:	hlt    
  409ccf:	rcr    BYTE PTR [eax+ebx*2-0x72],cl
  409cd3:	push   0x13b8f6d6
  409cd8:	cs pop ebp
  409cda:	data16 rcr BYTE PTR [edx],0xfa
  409cde:	mov    bh,0xfa
  409ce0:	into   
  409ce1:	and    ecx,DWORD PTR [edx+0x376bc95c]
  409ce7:	mov    WORD PTR [edi],?
  409ce9:	fstp   TBYTE PTR [esi-0x477561be]
  409cef:	je     0x409cc0
  409cf1:	inc    ebx
  409cf2:	inc    eax
  409cf3:	cmp    eax,0xd03b302b
  409cf8:	mov    eax,0xe7bbcf97
  409cfd:	mov    dh,BYTE PTR [ebp-0x590e1042]
  409d03:	(bad)  
  409d04:	push   esi
  409d05:	xor    al,cl
  409d07:	les    esi,FWORD PTR [edx+0x53]
  409d0a:	sbb    ebp,eax
  409d0c:	and    ebp,DWORD PTR [edx]
  409d0e:	loopne 0x409d53
  409d10:	sub    DWORD PTR [edi+0x18],esp
  409d13:	dec    esi
  409d14:	sbb    ch,BYTE PTR [edi]
  409d16:	mov    eax,ds:0xa950d3e6
  409d1b:	dec    edi
  409d1c:	push   cs
  409d1d:	dec    esi
  409d1e:	arpl   WORD PTR [esi-0x6a],bx
  409d21:	aas    
  409d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d23:	mov    ch,0x87
  409d25:	test   DWORD PTR [eax+0x1b9e2f43],eax
  409d2b:	leave  
  409d2c:	jo     0x409d09
  409d2e:	pop    ecx
  409d2f:	xor    edi,DWORD PTR [edi]
  409d31:	les    esp,FWORD PTR [edi]
  409d33:	pop    ds
  409d34:	(bad)  
  409d35:	idiv   esp
  409d37:	adc    DWORD PTR [edi],0xffffffef
  409d3a:	ja     0x409d3d
  409d3c:	xlat   BYTE PTR ds:[ebx]
  409d3d:	and    DWORD PTR [ecx+eax*8-0x4e922a33],ecx
  409d44:	and    esi,esp
  409d46:	popa   
  409d47:	mov    edx,0x2a10a39a
  409d4c:	inc    esp
  409d4d:	imul   eax,eax,0x23a13ccd
  409d53:	jne    0x409db4
  409d55:	out    dx,eax
  409d56:	pop    edi
  409d57:	shl    DWORD PTR [esi+0x5f69d2c6],cl
  409d5d:	arpl   WORD PTR [esi+0xa623f48],bx
  409d63:	cmp    BYTE PTR [esp+ecx*2],0xc3
  409d67:	or     ch,ch
  409d69:	push   esp
  409d6a:	xor    esi,esi
  409d6c:	rcr    ch,1
  409d6e:	sub    eax,0xeebc0b23
  409d73:	data16 js 0x409dd7
  409d76:	dec    ebp
  409d77:	push   edx
  409d78:	mov    dl,0xab
  409d7a:	push   ebx
  409d7b:	xchg   esi,eax
  409d7c:	repnz mov fs,WORD PTR [edx+0x50145de5]
  409d83:	les    ebx,FWORD PTR [ecx+0x31]
  409d86:	dec    ebp
  409d87:	jo     0x409dab
  409d89:	xor    DWORD PTR [esi],eax
  409d8b:	mov    esi,0x87f83d26
  409d90:	add    BYTE PTR [eax+0x70808743],0x2e
  409d97:	mov    eax,ds:0x4180c094
  409d9c:	retf   
  409d9d:	xor    eax,0xb81e382c
  409da2:	ret    
  409da3:	jg     0x409dfc
  409da5:	add    eax,0x3eedf5eb
  409daa:	gs jo  0x409d5f
  409dad:	sub    ebp,DWORD PTR [ecx]
  409daf:	out    0xb2,eax
  409db1:	enter  0x955f,0x74
  409db5:	dec    esi
  409db6:	jecxz  0x409e30
  409db8:	fs call 0xae8edc1d
  409dbe:	pop    ebp
  409dbf:	aam    0xce
  409dc1:	xor    ebx,DWORD PTR [ebp+0xa4d4c52]
  409dc7:	sbb    BYTE PTR [edi],bl
  409dc9:	or     DWORD PTR [edi-0x7b],ecx
  409dcc:	(bad)  
  409dcd:	in     al,0xf8
  409dcf:	mov    esp,0x4bfa2151
  409dd4:	dec    ebx
  409dd5:	outs   dx,DWORD PTR ds:[esi]
  409dd6:	push   cs
  409dd7:	shr    BYTE PTR [ebp-0x590c446a],1
  409ddd:	outs   dx,DWORD PTR ds:[esi]
  409dde:	add    al,0x8c
  409de0:	bound  ebx,QWORD PTR [edi-0x4d]
  409de3:	and    esp,eax
  409de5:	and    DWORD PTR [esi],esi
  409de7:	das    
  409de8:	or     al,0x3d
  409dea:	xchg   esp,eax
  409deb:	and    BYTE PTR [ecx+0x46],al
  409dee:	hlt    
  409def:	inc    BYTE PTR [ebx]
  409df1:	cmp    BYTE PTR [ebx+0x7e],ch
  409df4:	xchg   esi,eax
  409df5:	stos   DWORD PTR es:[edi],eax
  409df6:	into   
  409df7:	adc    eax,0x5f65948a
  409dfc:	inc    eax
  409dfd:	xor    eax,edx
  409dff:	mov    eax,0xd0fcfbbf
  409e04:	mov    WORD PTR [ebx],ss
  409e06:	retf   
  409e07:	int    0xfd
  409e09:	adc    ebx,DWORD PTR [ebx+0x1a3a2e56]
  409e0f:	mov    dh,0x37
  409e11:	pop    edi
  409e12:	and    ebp,0xfffffffc
  409e15:	shl    ch,0x21
  409e18:	push   ss
  409e19:	jecxz  0x409de1
  409e1b:	mov    esp,0xfe3f0ffe
  409e20:	fs jae 0x409e44
  409e23:	add    BYTE PTR [esi+0x37],0x7c
  409e27:	andnps xmm4,XMMWORD PTR [edx+0x66]
  409e2b:	repnz inc ebx
  409e2d:	clc    
  409e2e:	pop    ds
  409e2f:	bound  ebx,QWORD PTR [ecx]
  409e31:	cmp    ebx,edi
  409e33:	(bad)  
  409e34:	fnsave [ecx+0x735fe188]
  409e3a:	jp     0x409e85
  409e3c:	dec    eax
  409e3d:	into   
  409e3e:	mov    al,0x4c
  409e40:	mov    ebx,ecx
  409e42:	xor    BYTE PTR [eax+0x755e38cb],bl
  409e48:	and    eax,0xefcc8537
  409e4d:	pop    ss
  409e4e:	pop    ecx
  409e4f:	outs   dx,DWORD PTR ds:[esi]
  409e50:	cmp    edi,DWORD PTR [eax]
  409e52:	and    DWORD PTR [ecx],edx
  409e54:	int3   
  409e55:	je     0x409e71
  409e57:	gs loope 0x409e92
  409e5a:	je     0x409de8
  409e5c:	mov    dl,0xa3
  409e5e:	sbb    al,0x4
  409e60:	dec    ecx
  409e61:	pop    eax
  409e62:	in     al,dx
  409e63:	add    BYTE PTR [ebp-0x11],ch
  409e66:	test   DWORD PTR ss:[edx-0x31],ebx
  409e6a:	pusha  
  409e6b:	inc    esi
  409e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6d:	xor    al,BYTE PTR [ebp-0x33b5d640]
  409e73:	das    
  409e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e75:	fstp   TBYTE PTR [eax-0x12]
  409e78:	mov    ch,BYTE PTR [eax]
  409e7a:	rcl    BYTE PTR [edi],1
  409e7c:	add    al,0xe3
  409e7e:	loop   0x409e45
  409e80:	and    esp,DWORD PTR [ebx]
  409e82:	adc    DWORD PTR [ecx],ebp
  409e84:	inc    ebx
  409e85:	sub    al,0x92
  409e87:	jns    0x409e48
  409e89:	fwait
  409e8a:	sbb    DWORD PTR [ecx+eiz*4-0x49],ebp
  409e8e:	cmp    DWORD PTR [edx-0x9],esp
  409e91:	stos   DWORD PTR es:[edi],eax
  409e92:	mov    eax,ds:0x6e3abde
  409e97:	cwde   
  409e98:	outs   dx,DWORD PTR ds:[esi]
  409e99:	inc    esi
  409e9a:	pop    edx
  409e9b:	(bad)  
  409e9c:	pop    ecx
  409e9d:	pop    ebp
  409e9e:	(bad)  
  409e9f:	aam    0xaa
  409ea1:	(bad)  
  409ea3:	and    DWORD PTR [edx+0x2e36d849],0xffffffae
  409eaa:	ins    BYTE PTR es:[edi],dx
  409eab:	inc    esp
  409eac:	dec    ecx
  409ead:	stos   DWORD PTR es:[edi],eax
  409eae:	outs   dx,BYTE PTR ds:[esi]
  409eaf:	test   DWORD PTR [ebx-0x5e],0x46cf09a0
  409eb6:	das    
  409eb7:	jle    0x409e83
  409eb9:	mov    eax,0xd185eb19
  409ebe:	imul   ecx,DWORD PTR [ecx+0x11],0xfffffff0
  409ec2:	push   edi
  409ec3:	dec    ecx
  409ec4:	add    eax,0x7b11f852
  409ec9:	out    0xc1,eax
  409ecb:	sbb    al,0xd0
  409ecd:	fimul  DWORD PTR [edx+eax*8+0x6888a7c8]
  409ed4:	xchg   edx,eax
  409ed6:	adc    al,0x59
  409ed8:	jp     0x409ea1
  409eda:	pop    esi
  409edb:	and    eax,0xdc2ce8e3
  409ee0:	fs loope 0x409eea
  409ee3:	ins    DWORD PTR es:[edi],dx
  409ee4:	pop    esp
  409ee5:	outs   dx,DWORD PTR ds:[esi]
  409ee6:	icebp  
  409ee7:	imul   ebp,DWORD PTR [edx+esi*2-0x22],0xfb7f64a2
  409eef:	lahf   
  409ef0:	lahf   
  409ef1:	sbb    DWORD PTR [ebp+0x5436b078],eax
  409ef7:	iret   
  409ef8:	ret    
  409ef9:	push   esp
  409efa:	fcom   QWORD PTR [eax+0xc]
  409efd:	in     al,dx
  409efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eff:	cdq    
  409f00:	cmp    al,0x53
  409f02:	fild   WORD PTR ds:0xc559fd31
  409f08:	or     DWORD PTR [edx+0x69fada74],0xe5a6089c
  409f12:	icebp  
  409f13:	and    al,0xa5
  409f15:	mov    ch,0xa2
  409f17:	mov    esi,0xd4227550
  409f1c:	mov    bh,0x42
  409f1e:	xor    al,0x37
  409f20:	test   eax,0x996a3ea6
  409f25:	dec    ebx
  409f26:	fdivr  QWORD PTR [ebx-0x35]
  409f29:	sbb    BYTE PTR [esi+0x37def19b],ch
  409f2f:	pop    es
  409f30:	pop    es
  409f31:	shld   DWORD PTR [ebx-0x7a],ebp,0x30
  409f36:	add    edi,eax
  409f38:	daa    
  409f39:	push   ss
  409f3a:	stos   DWORD PTR es:[edi],eax
  409f3b:	push   ecx
  409f3c:	int3   
  409f3d:	cwde   
  409f3e:	jo     0x409f99
  409f40:	adc    DWORD PTR [edi+0x1fc7821b],eax
  409f46:	add    eax,0xd78436ea
  409f4b:	leave  
  409f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4d:	mov    al,ds:0x90612473
  409f52:	fcmovnu st,st(2)
  409f54:	inc    ebp
  409f55:	hlt    
  409f56:	adc    eax,0x45ddf05a
  409f5b:	in     eax,0xf0
  409f5d:	jmpw   0x400b
  409f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f62:	dec    ebx
  409f63:	sahf   
  409f64:	cmp    ebp,ebp
  409f66:	in     al,0x60
  409f68:	into   
  409f69:	les    ebx,FWORD PTR ds:[esi-0x2d5680f9]
  409f70:	ss hlt 
  409f72:	loopne 0x409f60
  409f74:	clc    
  409f75:	add    eax,0x135ffe2d
  409f7a:	lods   al,BYTE PTR ds:[esi]
  409f7b:	scas   al,BYTE PTR es:[edi]
  409f7c:	pop    ss
  409f7d:	loop   0x409f37
  409f7f:	cld    
  409f80:	cmp    al,0x27
  409f82:	inc    ecx
  409f83:	jbe    0x409f6d
  409f85:	mov    WORD PTR [ebp+0x46f7b612],?
  409f8b:	jbe    0x409fab
  409f8d:	jae    0x409f26
  409f8f:	jbe    0x40a006
  409f91:	add    al,0x3a
  409f93:	loopne 0x409f3e
  409f95:	mov    ah,0xe
  409f97:	stos   DWORD PTR es:[edi],eax
  409f98:	frstpm(287 only) 
  409f9a:	js     0x40a018
  409f9c:	test   al,0x3f
  409f9e:	mov    eax,ebx
  409fa0:	mov    ds:0xf48aaccf,eax
  409fa5:	out    dx,eax
  409fa6:	adc    al,ah
  409fa8:	and    esp,0x69
  409fab:	retf   
  409fac:	adc    al,0xc7
  409fae:	mov    ebp,0x8df5bfe9
  409fb3:	adc    DWORD PTR [edx+esi*1],ecx
  409fb6:	xor    edi,DWORD PTR [eax+0x52]
  409fb9:	adc    DWORD PTR [eax+0x65292940],esp
  409fbf:	mul    BYTE PTR [ecx-0x2e]
  409fc2:	xor    al,0xc2
  409fc4:	(bad)  
  409fc5:	popf   
  409fc6:	pop    ecx
  409fc7:	outs   dx,DWORD PTR ds:[esi]
  409fc8:	shl    DWORD PTR [ecx],1
  409fca:	cmp    BYTE PTR [ecx],ah
  409fcc:	out    dx,al
  409fcd:	imul   esi,DWORD PTR [ebx],0xffffff88
  409fd0:	outs   dx,DWORD PTR ds:[esi]
  409fd1:	test   eax,0x5d1d5559
  409fd6:	sbb    DWORD PTR [eax-0x2ae52fdd],ebx
  409fdc:	imul   ebx,DWORD PTR [ecx+0x13],0x15349fb6
  409fe3:	lea    ebx,[eax-0x2033f388]
  409fe9:	mov    BYTE PTR [edx+ebx*4],dl
  409fec:	(bad)  
  409fed:	push   edi
  409fee:	test   eax,0xd6691893
  409ff3:	mov    DWORD PTR [edi+eax*2],esi
  409ff6:	sti    
  409ff7:	mov    ch,0xc6
  409ff9:	ins    DWORD PTR es:[edi],dx
  409ffa:	xor    BYTE PTR [eax],ah
  409ffc:	cmp    eax,0xcbf2a235
  40a001:	cmp    BYTE PTR ds:0x22a811cb,ch
  40a007:	loop   0x40a00d
  40a009:	icebp  
  40a00a:	or     al,0xc4
  40a00c:	mov    ah,0x40
  40a00e:	and    eax,0x90ac88d9
  40a013:	leave  
  40a014:	repnz xor DWORD PTR [esi],ebx
  40a017:	mov    ch,ah
  40a019:	jmp    0xdf22:0xa630df17
  40a020:	cmp    dl,bl
  40a022:	ss enter 0x1d96,0xa7
  40a027:	cmp    bl,dh
  40a029:	aas    
  40a02a:	mov    dl,0xba
  40a02c:	inc    esp
  40a02d:	ret    
  40a02e:	add    ch,BYTE PTR [ebx]
  40a030:	sub    edi,DWORD PTR [ebx+0x66]
  40a033:	mov    dh,0x8c
  40a035:	lea    eax,[esi-0x72953249]
  40a03b:	sti    
  40a03c:	mov    ebp,0x85355a31
  40a041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a042:	sbb    al,BYTE PTR [eax+0x1a3e994e]
  40a048:	fcomp  st(2)
  40a04a:	and    eax,0xd7a48b3b
  40a04f:	std    
  40a050:	sar    BYTE PTR [eax],cl
  40a052:	mov    ch,al
  40a054:	mov    eax,DWORD PTR [ecx-0x415f1b39]
  40a05a:	icebp  
  40a05b:	outs   dx,DWORD PTR ds:[esi]
  40a05c:	div    BYTE PTR [ebx+0x73]
  40a05f:	inc    ecx
  40a060:	jb     0x40a030
  40a062:	aad    0x79
  40a064:	fdiv   st,st(4)
  40a066:	cmc    
  40a067:	hlt    
  40a068:	std    
  40a069:	add    ah,dl
  40a06b:	les    esi,FWORD PTR [edx+0x2c]
  40a06e:	mov    al,0x21
  40a070:	call   0x7804faf6
  40a075:	ret    
  40a076:	pop    es
  40a077:	dec    ebx
  40a078:	call   0x2709438
  40a07d:	loope  0x40a022
  40a07f:	jmp    0x6ded:0x2dd5a1fb
  40a086:	ins    BYTE PTR es:[edi],dx
  40a087:	ins    BYTE PTR es:[edi],dx
  40a088:	mov    ebx,0x8489a0d1
  40a08d:	repz retf 
  40a08f:	call   0xbbad:0x31110ff3
  40a096:	test   BYTE PTR [ebx+edi*4-0x17],0xa1
  40a09b:	das    
  40a09c:	ret    
  40a09d:	shl    DWORD PTR [eax-0x38],0xdf
  40a0a1:	mov    ah,0x6a
  40a0a3:	adc    edx,0x9f67a177
  40a0a9:	pop    ebx
  40a0aa:	adc    al,0x15
  40a0ac:	mov    fs,WORD PTR [esi+0x4a]
  40a0af:	clc    
  40a0b0:	fwait
  40a0b1:	into   
  40a0b2:	push   ebx
  40a0b3:	ja     0x40a0f7
  40a0b5:	ds sbb al,0x4e
  40a0b8:	in     al,0xed
  40a0ba:	adc    eax,0xcd02a08f
  40a0bf:	ror    BYTE PTR [eax+0xaad7183],1
  40a0c5:	jmp    0x40a048
  40a0c7:	pop    ds
  40a0c8:	xchg   edx,eax
  40a0c9:	xor    al,BYTE PTR [edi]
  40a0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0cc:	push   es
  40a0cd:	sbb    eax,0xfc208dd8
  40a0d2:	and    ebx,esi
  40a0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d5:	leave  
  40a0d6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a0d8:	mov    edx,0x5ea1b91a
  40a0dd:	mov    dh,0x58
  40a0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e0:	xor    ebx,esp
  40a0e2:	jnp    0x40a113
  40a0e4:	scas   eax,DWORD PTR es:[edi]
  40a0e5:	lods   eax,DWORD PTR ds:[esi]
  40a0e6:	push   edi
  40a0e7:	sub    bl,cl
  40a0e9:	dec    ebp
  40a0ea:	pop    ebx
  40a0eb:	in     eax,dx
  40a0ec:	ja     0x40a0dd
  40a0ee:	adc    ebp,esp
  40a0f0:	inc    ebx
  40a0f1:	mov    bh,BYTE PTR [esi-0x456662d5]
  40a0f7:	scas   al,BYTE PTR es:[edi]
  40a0f8:	cwde   
  40a0f9:	cmp    eax,0x50ba26f2
  40a0fe:	jmp    DWORD PTR [edx-0x5f]
  40a101:	xor    BYTE PTR [ebx],dh
  40a103:	jl     0x40a16b
  40a105:	icebp  
  40a106:	out    dx,al
  40a107:	cdq    
  40a108:	pop    eax
  40a109:	sbb    BYTE PTR [esi+0x4d6c007f],0xc0
  40a110:	xchg   ecx,eax
  40a111:	imul   BYTE PTR [edx-0x4a]
  40a114:	imul   ecx,DWORD PTR [eax+0x4ef1c351],0xb00a6c39
  40a11e:	mov    ds:0x12a3c3c1,eax
  40a123:	cld    
  40a124:	sahf   
  40a125:	test   BYTE PTR [eax],ch
  40a127:	inc    edx
  40a128:	out    dx,al
  40a129:	ret    
  40a12a:	mov    eax,ds:0x8008b284
  40a12f:	cwde   
  40a130:	xor    eax,0x3929fea6
  40a135:	or     eax,0x3a1f00fe
  40a13a:	cmp    eax,0x94d1644
  40a13f:	sti    
  40a140:	sar    eax,0x11
  40a143:	test   BYTE PTR [ebp-0x16263da8],dh
  40a149:	sub    BYTE PTR [edx+0xbfcac1c],dl
  40a14f:	jmp    0x8dfc738b
  40a154:	inc    esi
  40a155:	inc    edx
  40a157:	ja     0x40a10d
  40a159:	rol    edx,1
  40a15b:	and    al,BYTE PTR [ebx-0x6c]
  40a15e:	shl    DWORD PTR [edx],1
  40a160:	jbe    0x40a0ee
  40a162:	mov    eax,ds:0xaac33e1d
  40a167:	adc    BYTE PTR [eax],ah
  40a169:	outs   dx,BYTE PTR ds:[esi]
  40a16a:	and    ebx,DWORD PTR [ebp+0xb5fb4d8]
  40a170:	(bad)  
  40a172:	shl    edi,0x13
  40a175:	sub    ah,BYTE PTR [ebp-0xe]
  40a178:	or     edi,ecx
  40a17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a17b:	int3   
  40a17c:	das    
  40a17d:	retf   
  40a17e:	scas   al,BYTE PTR es:[edi]
  40a17f:	bound  ebx,QWORD PTR [eax+0x75f90d0f]
  40a185:	retw   
  40a187:	jne    0x40a12f
  40a189:	inc    ah
  40a18b:	ret    
  40a18c:	dec    esp
  40a18d:	aas    
  40a18e:	inc    ebx
  40a18f:	xor    al,0x73
  40a191:	(bad)  
  40a192:	jbe    0x40a1ea
  40a194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a195:	jl     0x40a13d
  40a197:	adc    BYTE PTR [ecx-0x64],dh
  40a19a:	push   esi
  40a19b:	jb     0x40a1fe
  40a19d:	out    dx,al
  40a19e:	add    DWORD PTR ss:[edx+esi*4],ebp
  40a1a2:	retf   
  40a1a3:	(bad)  
  40a1a4:	int    0xfd
  40a1a6:	shl    ecx,1
  40a1a8:	ret    
  40a1a9:	and    DWORD PTR [edx],edx
  40a1ab:	mov    ss,WORD PTR [ebp-0x4b1132e8]
  40a1b1:	mov    ah,bl
  40a1b3:	(bad)  
  40a1b4:	xor    bl,BYTE PTR [ecx]
  40a1b6:	stos   DWORD PTR es:[edi],eax
  40a1b7:	call   0xe00f:0x9bd93b1
  40a1be:	cmp    edx,esi
  40a1c0:	push   ss
  40a1c1:	shr    DWORD PTR [ecx+0x1d],cl
  40a1c4:	loope  0x40a158
  40a1c6:	jne    0x40a1d0
  40a1c8:	sub    DWORD PTR [edi+0x74d9c8b2],ecx
  40a1ce:	shl    DWORD PTR ds:0x7e11c25,0xed
  40a1d5:	lds    esi,FWORD PTR [ecx-0x52]
  40a1d8:	lock scas al,BYTE PTR es:[edi]
  40a1da:	adc    DWORD PTR [ecx-0x331011aa],edx
  40a1e0:	xchg   ebp,eax
  40a1e1:	jge    0x40a22c
  40a1e3:	mov    edi,0x96efc25c
  40a1e8:	stc    
  40a1e9:	fwait
  40a1ea:	xor    ch,BYTE PTR [edx+ecx*1-0x45]
  40a1ee:	out    0xcc,eax
  40a1f0:	mov    cl,0x22
  40a1f2:	in     eax,0x6e
  40a1f4:	xor    dh,BYTE PTR [esp+edx*8+0x67]
  40a1f8:	cmp    ah,cl
  40a1fa:	jne    0x40a269
  40a1fc:	imul   esp,DWORD PTR [eax-0xe3f9c7d],0xffffffa2
  40a203:	nop
  40a204:	dec    ebx
  40a205:	add    DWORD PTR [esi+0x7df0c7],ebp
  40a20b:	inc    edx
  40a20c:	adc    esp,DWORD PTR [ecx]
  40a20e:	dec    ebp
  40a20f:	mov    cl,0xb9
  40a211:	pop    edx
  40a212:	loopne 0x40a1a7
  40a214:	int3   
  40a215:	retf   
  40a216:	and    eax,0xecf2f9d7
  40a21b:	pop    ss
  40a21c:	push   ds
  40a21d:	sub    ebp,ebp
  40a21f:	pop    esi
  40a220:	in     eax,dx
  40a221:	scas   eax,DWORD PTR es:[edi]
  40a222:	or     eax,0x28b17d57
  40a227:	inc    ebp
  40a228:	pop    eax
  40a229:	call   0xfddf83d9
  40a22e:	xor    eax,DWORD PTR [ebx-0x5c]
  40a231:	jge    0x40a28d
  40a233:	lds    esi,FWORD PTR [esi]
  40a235:	stos   BYTE PTR es:[edi],al
  40a236:	or     cl,ah
  40a238:	int    0x30
  40a23a:	mov    WORD PTR [ecx],?
  40a23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a23d:	ret    0xc397
  40a240:	or     al,0x74
  40a242:	inc    edi
  40a243:	or     al,BYTE PTR [ebp+0x7]
  40a246:	inc    ebx
  40a247:	mov    cs,WORD PTR [esi-0x7e]
  40a24a:	xchg   edi,eax
  40a24b:	aad    0x46
  40a24d:	pop    ss
  40a24e:	or     ebx,DWORD PTR [edi+0x778eb9a4]
  40a254:	mov    al,bl
  40a256:	(bad)  
  40a257:	or     ebp,DWORD PTR [esi]
  40a259:	push   ss
  40a25a:	add    eax,0xb645d47c
  40a25f:	inc    edi
  40a260:	loope  0x40a2c3
  40a262:	or     eax,0xc7fc6cac
  40a267:	call   0xb0f3:0x39153943
  40a26e:	neg    BYTE PTR [eax-0x13]
  40a271:	push   ebx
  40a272:	rol    BYTE PTR [edi+0x3b],1
  40a275:	adc    bl,BYTE PTR [ecx-0x5d18ed0c]
  40a27b:	xlat   BYTE PTR ds:[ebx]
  40a27c:	xor    al,0x5b
  40a27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a27f:	mov    cs,WORD PTR [edx-0x11]
  40a282:	hlt    
  40a283:	and    BYTE PTR [edx+esi*1+0x5287ead6],bh
  40a28a:	inc    ebp
  40a28b:	pop    ecx
  40a28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28d:	imul   ecx,esp,0x4958a51d
  40a293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a294:	mov    edx,?
  40a296:	jnp    0x40a2d3
  40a298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a299:	mov    eax,0xc01e9953
  40a29e:	int    0x54
  40a2a0:	sbb    esp,DWORD PTR [bp+di]
  40a2a3:	stos   BYTE PTR es:[edi],al
  40a2a4:	mov    edi,0x8526a7ac
  40a2a9:	sub    al,al
  40a2ab:	xor    esi,DWORD PTR [ebp-0x23]
  40a2ae:	test   esp,0xa0d38452
  40a2b4:	retf   0x9363
  40a2b7:	rcl    DWORD PTR [edx+edx*4],0xff
  40a2bb:	or     bh,cl
  40a2bd:	sbb    esp,edx
  40a2bf:	and    dl,BYTE PTR [edx+edx*4-0x5]
  40a2c3:	stos   DWORD PTR es:[edi],eax
  40a2c4:	xchg   edx,eax
  40a2c5:	and    al,0x31
  40a2c7:	fs xchg esp,eax
  40a2c9:	es dec esi
  40a2cb:	js     0x40a29e
  40a2cd:	js     0x40a34e
  40a2cf:	in     al,0xa5
  40a2d1:	add    al,0xcb
  40a2d3:	sub    dl,BYTE PTR [edi+0x23]
  40a2d6:	test   BYTE PTR [ebp+0x3debd9b7],al
  40a2dc:	cdq    
  40a2dd:	repnz add dh,BYTE PTR [esi]
  40a2e0:	popa   
  40a2e1:	ret    
  40a2e2:	stos   BYTE PTR es:[edi],al
  40a2e3:	adc    al,BYTE PTR [ebx-0x46]
  40a2e6:	jbe    0x40a365
  40a2e8:	and    ebp,DWORD PTR [ebx+eiz*1]
  40a2eb:	outs   dx,BYTE PTR ds:[esi]
  40a2ec:	jo     0x40a292
  40a2ee:	sbb    al,0x21
  40a2f0:	cli    
  40a2f1:	or     edi,DWORD PTR [ebp-0x457d7ff1]
  40a2f7:	loope  0x40a35b
  40a2f9:	adc    DWORD PTR [eax-0x2b],ecx
  40a2fc:	std    
  40a2fd:	data16 sub ah,BYTE PTR [eax+0x38ef8822]
  40a304:	(bad)  
  40a305:	loope  0x40a322
  40a307:	xor    bh,bh
  40a309:	add    ch,BYTE PTR [esi*1+0x315ee6fd]
  40a310:	jns    0x40a2f5
  40a312:	mov    eax,0xddd67468
  40a317:	aam    0xc2
  40a319:	bound  ebp,QWORD PTR [ecx-0x6879462e]
  40a31f:	jp     0x40a392
  40a321:	popf   
  40a322:	div    BYTE PTR [ecx]
  40a324:	leave  
  40a325:	jnp    0x40a34b
  40a327:	bound  ecx,QWORD PTR [eax+0x69]
  40a32a:	cmp    al,0x95
  40a32c:	adc    eax,0xefd27788
  40a331:	es fs inc esi
  40a334:	xchg   esi,eax
  40a335:	bound  esi,QWORD PTR [ecx]
  40a337:	mov    bh,0xa0
  40a339:	lods   eax,DWORD PTR ds:[esi]
  40a33a:	in     eax,dx
  40a33b:	out    0xdd,al
  40a33d:	rep ins DWORD PTR es:[edi],dx
  40a33f:	push   ebp
  40a340:	mov    ebp,0x529ea47d
  40a345:	scas   eax,DWORD PTR es:[edi]
  40a346:	xor    bh,BYTE PTR [edx-0x66]
  40a349:	iret   
  40a34a:	mov    esp,DWORD PTR [ecx+0x66]
  40a34d:	popa   
  40a34e:	ror    DWORD PTR [ebx+edx*2+0x1f331a63],1
  40a355:	push   0x36
  40a357:	out    dx,eax
  40a358:	ja     0x40a385
  40a35a:	lds    ecx,FWORD PTR [edi+0xf4c7dcb]
  40a360:	(bad)  
  40a361:	enter  0x59f9,0xdb
  40a365:	sub    eax,0x9eec3bf6
  40a36a:	mov    ds:0xb728e193,eax
  40a36f:	dec    eax
  40a370:	mov    al,0x88
  40a372:	(bad)
  40a375:	psadbw mm2,QWORD PTR [edx+0x51]
  40a379:	js     0x40a30c
  40a37b:	shl    BYTE PTR [ecx-0x1],0xc8
  40a37f:	sub    al,BYTE PTR [esi]
  40a381:	inc    edx
  40a382:	outs   dx,DWORD PTR ds:[esi]
  40a383:	push   edi
  40a384:	inc    ebx
  40a385:	add    DWORD PTR [ebx],esi
  40a387:	adc    al,0x7b
  40a389:	xor    ecx,edx
  40a38b:	mov    ebx,0xc88e1cc5
  40a390:	mov    ah,0x8
  40a392:	push   ebx
  40a393:	dec    esp
  40a394:	out    dx,al
  40a395:	addr16 push ecx
  40a397:	call   0xf0a8:0xebdc6fc
  40a39e:	jmp    0x1b718233
  40a3a3:	inc    ebp
  40a3a4:	out    dx,eax
  40a3a5:	mov    DWORD PTR [ebx-0x413a2eea],esi
  40a3ab:	sbb    eax,0x9a92e990
  40a3b0:	into   
  40a3b1:	cmp    al,0xcc
  40a3b3:	outs   dx,DWORD PTR ds:[esi]
  40a3b4:	mov    dl,0xf3
  40a3b6:	inc    eax
  40a3b7:	mov    DWORD PTR [eax*8-0x141e4aef],0xdd011171
  40a3c2:	mov    ebp,0xddfdd562
  40a3c7:	sbb    DWORD PTR [edx+0x29],ecx
  40a3ca:	(bad)  
  40a3cb:	ins    BYTE PTR es:[edi],dx
  40a3cc:	es push eax
  40a3ce:	mov    DWORD PTR [eax],0xb776498d
  40a3d4:	push   ecx
  40a3d5:	in     eax,dx
  40a3d6:	mov    WORD PTR [ebx-0x78],?
  40a3d9:	or     dl,BYTE PTR [ecx]
  40a3db:	or     bl,BYTE PTR [edx+0x6efd7cf4]
  40a3e1:	ficom  DWORD PTR [eax-0x3586af78]
  40a3e7:	dec    ebp
  40a3e8:	dec    edx
  40a3e9:	mov    eax,ds:0x2c336df3
  40a3ee:	mov    edi,eax
  40a3f0:	jecxz  0x40a374
  40a3f2:	in     al,0x2b
  40a3f4:	jns    0x40a418
  40a3f6:	jmp    0x3f3cb2f2
  40a3fb:	dec    ecx
  40a3fc:	addr16 pop ss
  40a3fe:	push   ss
  40a3ff:	aam    0xb1
  40a401:	in     al,dx
  40a402:	ret    0x1750
  40a405:	(bad)  
  40a407:	xor    esi,DWORD PTR ss:[ebx-0xd]
  40a40b:	adc    eax,DWORD PTR [ebx]
  40a40d:	push   esp
  40a40e:	mov    dl,0x1e
  40a410:	pop    ds
  40a411:	cmp    DWORD PTR [edx-0x449231a6],esp
  40a417:	pop    ecx
  40a418:	xor    bl,ah
  40a41a:	addr16 popa 
  40a41c:	mov    ds:0xbbc76497,eax
  40a421:	aad    0xc
  40a423:	push   ebp
  40a424:	lea    ebx,[edx+0xe791760]
  40a42a:	mov    dl,0x2f
  40a42c:	out    0xc5,al
  40a42e:	inc    esp
  40a42f:	cmp    DWORD PTR [edi-0x3b3f4faf],ecx
  40a435:	jnp    0x40a47e
  40a437:	add    DWORD PTR [edi-0x6df9406b],edi
  40a43d:	fisub  WORD PTR [esi+0xb]
  40a440:	xor    BYTE PTR [esi],bh
  40a442:	jp     0x40a494
  40a444:	jl     0x40a48b
  40a446:	add    ebp,edi
  40a448:	sar    BYTE PTR [eax],1
  40a44a:	dec    eax
  40a44b:	pop    edx
  40a44c:	mov    bh,0x5e
  40a44e:	adc    edi,DWORD PTR [edx-0x71]
  40a451:	adc    eax,0x803e57d4
  40a456:	adc    bl,BYTE PTR [esi+ebx*1+0x18]
  40a45a:	mov    ah,0xd
  40a45c:	push   ebx
  40a45d:	fdivr  DWORD PTR [ebp-0x59c5c404]
  40a463:	jno    0x40a467
  40a465:	jns    0x40a41a
  40a467:	mov    es,WORD PTR ds:0x98902fef
  40a46d:	arpl   WORD PTR [ebp-0x65],di
  40a470:	popf   
  40a471:	std    
  40a472:	int3   
  40a473:	dec    ecx
  40a474:	add    al,BYTE PTR [esi+0x64ae9cf2]
  40a47a:	das    
  40a47b:	push   eax
  40a47c:	and    DWORD PTR [esi+ebx*2-0x52050a7a],eax
  40a483:	cwde   
  40a484:	jmp    0x6fa86082
  40a489:	push   eax
  40a48a:	(bad)  
  40a48b:	in     al,0xb5
  40a48d:	enter  0x583c,0x7f
  40a491:	in     al,0x1d
  40a493:	pop    ecx
  40a494:	out    dx,eax
  40a495:	pop    eax
  40a496:	mov    ds:0xb796a512,eax
  40a49b:	in     eax,dx
  40a49c:	jp     0x40a446
  40a49e:	std    
  40a49f:	xor    DWORD PTR [esi-0x5c],ebx
  40a4a2:	add    al,0xa5
  40a4a4:	jne    0x40a474
  40a4a6:	sbb    eax,0xfe347b0f
  40a4ab:	mov    ch,BYTE PTR [eax]
  40a4ad:	add    ch,BYTE PTR [ecx+0x6e40c35a]
  40a4b3:	sbb    al,0x85
  40a4b5:	ror    DWORD PTR [eax+0x706e91ba],0xcb
  40a4bc:	test   al,0x36
  40a4be:	add    ah,bl
  40a4c0:	adc    dh,bh
  40a4c2:	add    bh,BYTE PTR gs:[ebp+0x3922b32e]
  40a4c9:	stc    
  40a4ca:	and    edx,ebp
  40a4cc:	sub    DWORD PTR [esi-0x1041cd4],esp
  40a4d2:	mov    esi,0xdc519745
  40a4d7:	mov    ah,0xb4
  40a4d9:	stos   DWORD PTR es:[edi],eax
  40a4da:	xchg   edi,eax
  40a4db:	mov    ebx,0x789a22c9
  40a4e0:	ins    DWORD PTR es:[edi],dx
  40a4e1:	adc    eax,0xadff6aa5
  40a4e6:	cwde   
  40a4e7:	pop    edx
  40a4e8:	push   0x4f
  40a4ea:	arpl   WORD PTR [ecx],di
  40a4ec:	loope  0x40a484
  40a4ee:	push   edx
  40a4ef:	lds    ebp,FWORD PTR ds:0xcee1f3a1
  40a4f5:	dec    ebp
  40a4f6:	mov    ch,BYTE PTR [eax]
  40a4f8:	(bad)  
  40a4f9:	fs sahf 
  40a4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4fc:	mov    WORD PTR [esi],ds
  40a4fe:	ficom  WORD PTR [edi+0x19]
  40a501:	inc    ebx
  40a502:	jbe    0x40a498
  40a504:	jbe    0x40a570
  40a506:	mov    esp,0xeeec3be6
  40a50b:	cli    
  40a50c:	int    0x39
  40a50e:	sub    eax,0xeb15f1b4
  40a513:	and    BYTE PTR [ecx-0x47dbef6e],dl
  40a519:	and    ah,BYTE PTR [ebx-0x56719492]
  40a51f:	xlat   BYTE PTR ds:[ebx]
  40a520:	out    dx,eax
  40a521:	in     eax,0xd9
  40a523:	adc    al,0x75
  40a525:	pop    esp
  40a526:	ins    BYTE PTR es:[edi],dx
  40a527:	shl    DWORD PTR [eax],1
  40a529:	(bad)  
  40a52a:	mov    bl,0x20
  40a52c:	stc    
  40a52d:	add    eax,0x94121d53
  40a532:	mov    ebp,0x98b8a90c
  40a537:	mov    bh,0xef
  40a539:	jae    0x40a570
  40a53b:	xchg   esi,eax
  40a53c:	mov    bh,0x4
  40a53e:	in     eax,0x5d
  40a540:	outs   dx,DWORD PTR ds:[esi]
  40a541:	push   0x30
  40a543:	daa    
  40a544:	add    BYTE PTR [ebp+0x418bdd1f],0x89
  40a54b:	gs mov esi,0x5e7a1221
  40a551:	and    bh,0xba
  40a554:	inc    ecx
  40a555:	dec    esp
  40a556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a557:	push   edx
  40a558:	lock icebp 
  40a55a:	stos   DWORD PTR es:[edi],eax
  40a55b:	xor    eax,0xbcdad59a
  40a560:	sub    BYTE PTR [ecx-0x73],dh
  40a563:	jo     0x40a5d1
  40a565:	popf   
  40a566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a567:	mov    esp,0x5e7f5bb0
  40a56c:	inc    ebp
  40a56d:	sub    DWORD PTR [edi],0xb4c0f5cc
  40a573:	popf   
  40a574:	mov    BYTE PTR [ebx+eax*2],ch
  40a577:	fstp   QWORD PTR [eax]
  40a579:	in     eax,dx
  40a57a:	les    ecx,FWORD PTR [eax-0x75]
  40a57d:	lods   eax,DWORD PTR ds:[esi]
  40a57e:	dec    ebp
  40a57f:	fcmovnbe st,st(2)
  40a581:	dec    eax
  40a582:	inc    esp
  40a583:	scas   al,BYTE PTR es:[edi]
  40a584:	mov    ds:0x96bc13ba,eax
  40a589:	lods   eax,DWORD PTR ds:[esi]
  40a58a:	mov    ds:0xaf58775a,eax
  40a58f:	mov    al,BYTE PTR [edi]
  40a591:	sbb    ebp,0xfe15dd42
  40a597:	(bad)  
  40a598:	push   esp
  40a599:	push   cs
  40a59a:	cmc    
  40a59b:	les    ebp,FWORD PTR [edx]
  40a59d:	jmp    0x3828:0x1c79f963
  40a5a4:	sbb    ch,BYTE PTR [ecx+0x5873a866]
  40a5aa:	inc    edi
  40a5ab:	jne    0x40a565
  40a5ad:	clc    
  40a5ae:	cmp    al,0x8
  40a5b0:	lock neg ecx
  40a5b3:	out    0x61,al
  40a5b5:	test   BYTE PTR ds:0xc4e0de3a,ah
  40a5bb:	lock xchg esp,eax
  40a5bd:	pop    edx
  40a5be:	cmp    ecx,DWORD PTR [ebx-0x39fe15da]
  40a5c4:	(bad)  
  40a5c5:	std    
  40a5c6:	sbb    BYTE PTR [eax-0x3f],0xad
  40a5ca:	dec    edi
  40a5cb:	xlat   BYTE PTR ds:[ebx]
  40a5cc:	lahf   
  40a5cd:	pusha  
  40a5ce:	mov    ds:0x50eef76b,eax
  40a5d3:	int3   
  40a5d4:	sub    ebp,DWORD PTR [edi-0x11]
  40a5d7:	add    ecx,DWORD PTR [eax]
  40a5d9:	test   DWORD PTR [esi-0x1e],0xb63bc17f
  40a5e0:	cmp    bl,0xf2
  40a5e3:	mov    ss,ebp
  40a5e5:	sub    ebx,DWORD PTR [ebx+0x14e2d3f9]
  40a5eb:	adc    eax,0xd4fb7bc3
  40a5f0:	cli    
  40a5f1:	jnp    0x40a61d
  40a5f3:	sub    eax,0xd52da44d
  40a5f8:	inc    ebx
  40a5f9:	lds    esp,FWORD PTR [ebp+0xbe2f517]
  40a5ff:	adc    ebx,DWORD PTR [esi-0xa87661c]
  40a605:	ss loope 0x40a626
  40a608:	adc    DWORD PTR [edx-0x5b],edi
  40a60b:	pop    ebx
  40a60c:	push   es
  40a60d:	rcl    DWORD PTR [esi],0x37
  40a610:	push   esi
  40a611:	js     0x40a65a
  40a613:	es mov ecx,0x2d67bf76
  40a619:	xor    DWORD PTR [edi],edi
  40a61b:	fwait
  40a61c:	loop   0x40a66e
  40a61e:	inc    eax
  40a61f:	cmp    cl,ah
  40a621:	xor    ah,BYTE PTR [ebx+0x3c]
  40a624:	rcr    BYTE PTR [ecx],1
  40a626:	fnstsw WORD PTR [ebx]
  40a628:	push   ds
  40a629:	in     al,dx
  40a62a:	test   ch,dh
  40a62c:	mov    WORD PTR [edi],ds
  40a62e:	adc    edx,DWORD PTR [ebx+ecx*4+0x3cfd1949]
  40a635:	lahf   
  40a636:	push   0xffffffd6
  40a638:	mov    ebx,0x1d2b5d69
  40a63d:	imul   esi,edx,0x130b2f8c
  40a643:	mov    edx,0x124b514d
  40a648:	mov    ds:0x6ecc9dd9,al
  40a64d:	inc    eax
  40a64e:	mov    al,0xc
  40a650:	push   ss
  40a651:	add    DWORD PTR [ecx-0x2b0b7b97],0x32924e8
  40a65b:	into   
  40a65c:	fimul  DWORD PTR [ebp+0x74bf5783]
  40a662:	inc    esp
  40a663:	mov    al,0xf7
  40a665:	std    
  40a666:	mov    edx,0x147e4531
  40a66b:	cmp    dh,ch
  40a66d:	retf   0xec93
  40a670:	in     al,dx
  40a671:	jg     0x40a6e6
  40a673:	mov    edx,DWORD PTR [edx-0x5778dfa6]
  40a679:	sbb    edi,DWORD PTR [ebp+0x18975719]
  40a67f:	mov    edi,edx
  40a681:	cld    
  40a682:	cmp    BYTE PTR [esi+0x4c],ch
  40a685:	movq   QWORD PTR [ecx+esi*2+0x4b5cc175],mm6
  40a68d:	scas   eax,DWORD PTR es:[edi]
  40a68e:	fdiv   QWORD PTR [ecx+0x70]
  40a691:	mov    ecx,0xdaffdbc6
  40a696:	inc    edi
  40a697:	jno    0x40a6f4
  40a699:	out    dx,eax
  40a69a:	imul   dh
  40a69c:	adc    dh,dl
  40a69e:	call   0x3884:0xb26286b0
  40a6a5:	ret    
  40a6a6:	icebp  
  40a6a7:	xchg   BYTE PTR [ebp+0x6d],ah
  40a6aa:	icebp  
  40a6ab:	rcl    BYTE PTR [eax],1
  40a6ad:	xchg   esi,eax
  40a6ae:	imul   esp,DWORD PTR [ecx-0x7f],0xffffff86
  40a6b2:	lahf   
  40a6b3:	pop    eax
  40a6b4:	xchg   ecx,eax
  40a6b5:	mov    cl,0xa1
  40a6b7:	push   ss
  40a6b8:	arpl   bx,dx
  40a6ba:	test   BYTE PTR [ebx+0x65],cl
  40a6bd:	cwde   
  40a6be:	add    esi,eax
  40a6c0:	(bad)  
  40a6c2:	mov    bh,0x19
  40a6c4:	sbb    al,BYTE PTR [ebx+0xc]
  40a6c7:	xchg   edx,eax
  40a6c8:	cmp    al,0xf8
  40a6ca:	ret    
  40a6cb:	ds pop eax
  40a6cd:	popa   
  40a6ce:	retf   
  40a6cf:	cli    
  40a6d0:	push   es
  40a6d1:	mov    ch,BYTE PTR [edi-0xc]
  40a6d4:	aam    0xdd
  40a6d6:	mov    ebp,0xb0fa4462
  40a6db:	sahf   
  40a6dc:	fwait
  40a6dd:	push   es
  40a6de:	and    eax,0x48d786b2
  40a6e3:	cmp    bl,0x19
  40a6e6:	mov    ebx,0xf8a72ec5
  40a6eb:	cs scas eax,DWORD PTR es:[edi]
  40a6ed:	jne    0x40a68f
  40a6ef:	into   
  40a6f0:	fdivr  QWORD PTR [eax]
  40a6f2:	daa    
  40a6f3:	lea    eax,[ecx+0x64]
  40a6f6:	or     ecx,DWORD PTR [esi-0x2f697ba9]
  40a6fc:	inc    ebx
  40a6fd:	push   eax
  40a6fe:	cs test al,0x2b
  40a701:	jge    0x40a6da
  40a703:	pop    edi
  40a704:	push   esp
  40a705:	jo     0x40a6a9
  40a707:	mov    ah,0xce
  40a709:	iret   
  40a70a:	push   ds
  40a70b:	mov    ds:0x34771691,eax
  40a710:	sbb    al,0x9e
  40a712:	clc    
  40a713:	pop    ecx
  40a714:	add    ebx,DWORD PTR [ecx-0x78]
  40a717:	repz inc esp
  40a719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a71a:	imul   esi
  40a71c:	lods   al,BYTE PTR fs:[esi]
  40a71e:	mov    esi,DWORD PTR [edx-0x6b]
  40a721:	sahf   
  40a722:	outs   dx,BYTE PTR ds:[esi]
  40a723:	cld    
  40a724:	mov    ecx,0x63631102
  40a729:	inc    edi
  40a72a:	neg    BYTE PTR ds:0xf4b1a7d7
  40a730:	leave  
  40a731:	sub    eax,0x20a4226a
  40a736:	in     eax,0xca
  40a738:	cmp    bl,BYTE PTR [edi]
  40a73a:	pushf  
  40a73b:	pop    eax
  40a73c:	xchg   esi,eax
  40a73d:	and    eax,0x64c4f6c0
  40a742:	in     eax,dx
  40a743:	jmp    0x40a723
  40a745:	push   edx
  40a746:	xchg   ecx,eax
  40a747:	mov    edi,0x834e1d0e
  40a74c:	cli    
  40a74d:	pop    edi
  40a74e:	add    ch,ah
  40a750:	or     DWORD PTR [esi+ebp*8-0x6f],ecx
  40a754:	outs   dx,DWORD PTR ds:[esi]
  40a755:	pop    eax
  40a756:	and    BYTE PTR [esi],cl
  40a758:	pusha  
  40a759:	push   eax
  40a75a:	xor    ecx,DWORD PTR [esi]
  40a75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75d:	cmp    DWORD PTR [edi+0x646c5db5],0xf6bc1ebc
  40a767:	ficomp DWORD PTR [edi+0x5a]
  40a76a:	mov    al,ds:0x88274711
  40a76f:	arpl   WORD PTR [ecx-0x35],bp
  40a772:	aam    0x59
  40a774:	dec    ecx
  40a775:	inc    ebp
  40a776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a777:	shl    BYTE PTR [edx-0x4bbbf82b],cl
  40a77d:	enter  0xe471,0x61
  40a781:	mov    eax,0xb08ac793
  40a786:	and    eax,DWORD PTR [esi]
  40a788:	(bad)
  40a78b:	and    eax,DWORD PTR [eax]
  40a78d:	mov    ecx,0x8586cd7b
  40a792:	sbb    eax,0x858e194
  40a797:	pop    esi
  40a798:	adc    al,0x73
  40a79a:	dec    esp
  40a79b:	sbb    eax,0x8967a01d
  40a7a0:	or     ah,cl
  40a7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a3:	scas   al,BYTE PTR es:[edi]
  40a7a4:	adc    al,BYTE PTR [eax]
  40a7a6:	aam    0x8d
  40a7a8:	xchg   BYTE PTR [edi],al
  40a7aa:	jbe    0x40a7c8
  40a7ac:	in     al,0x6d
  40a7ae:	jmp    0x40a741
  40a7b0:	dec    esi
  40a7b1:	cld    
  40a7b2:	inc    eax
  40a7b3:	mov    eax,ds:0x847e8173
  40a7b8:	out    dx,eax
  40a7b9:	jl     0x40a7ca
  40a7bb:	inc    edi
  40a7bc:	push   0x58
  40a7be:	sbb    dh,dh
  40a7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c1:	pop    esp
  40a7c2:	ret    0xf593
  40a7c5:	jmp    DWORD PTR [ecx+0xb]
  40a7c8:	int    0x3b
  40a7ca:	addr16 jbe 0x40a827
  40a7cd:	and    edi,DWORD PTR [ebx+0x6ef749e8]
  40a7d3:	dec    eax
  40a7d4:	loope  0x40a816
  40a7d6:	neg    BYTE PTR [ebx-0x372e9b1c]
  40a7dc:	adc    al,0x34
  40a7de:	sbb    eax,esi
  40a7e0:	jbe    0x40a7a8
  40a7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7e3:	inc    esp
  40a7e4:	sub    BYTE PTR [ebp-0x6],cl
  40a7e7:	shl    BYTE PTR [edx-0x19],0x68
  40a7eb:	mov    ch,0x50
  40a7ed:	jg     0x40a7fc
  40a7ef:	cmp    DWORD PTR [esi+eax*4+0x5576a83e],ecx
  40a7f6:	in     eax,0xe6
  40a7f8:	push   ebp
  40a7f9:	mov    ah,0x89
  40a7fb:	stos   DWORD PTR es:[edi],eax
  40a7fc:	shl    DWORD PTR [edi-0x2b0b2870],0x49
  40a803:	std    
  40a804:	pop    ebp
  40a805:	mov    eax,ds:0x71405078
  40a80a:	mov    esp,0xf07e2b01
  40a80f:	push   ss
  40a810:	xchg   edi,eax
  40a811:	ret    
  40a812:	in     al,dx
  40a813:	jo     0x40a83f
  40a815:	stos   DWORD PTR es:[edi],eax
  40a816:	bnd jno 0x40a7dc
  40a819:	mov    bl,0x8a
  40a81b:	or     BYTE PTR [ebx],ch
  40a81d:	mov    esp,0x96a2b14f
  40a822:	fcmovb st,st(4)
  40a824:	sti    
  40a825:	xchg   esi,eax
  40a826:	imul   eax,DWORD PTR [esi-0x3d471e92],0xe483f1a0
  40a830:	cdq    
  40a831:	pushf  
  40a832:	xor    esp,DWORD PTR [edi-0x46247663]
  40a838:	je     0x40a8b2
  40a83a:	cmp    dh,BYTE PTR cs:[eax]
  40a83d:	arpl   WORD PTR [ecx],bp
  40a83f:	mov    eax,ds:0xcf5f1c0b
  40a844:	inc    ebp
  40a845:	or     DWORD PTR [ebx-0x3929d32b],esi
  40a84b:	aad    0xb6
  40a84d:	and    BYTE PTR [ebx-0x68],bl
  40a850:	jnp    0x40a833
  40a852:	das    
  40a853:	adc    eax,0x42ef3c70
  40a858:	and    edi,edi
  40a85a:	jbe    0x40a861
  40a85c:	test   DWORD PTR [edx],0xbc1e966f
  40a862:	std    
  40a863:	adc    eax,0xbd42e217
  40a868:	cld    
  40a869:	iret   
  40a86a:	(bad)  [esi-0x2c89fd97]
  40a870:	cmp    al,0xe8
  40a872:	les    edi,FWORD PTR [eax*1-0x2f57d3f3]
  40a879:	pop    ebp
  40a87a:	rcl    DWORD PTR [ebx-0x26c669fb],1
  40a880:	jg     0x40a870
  40a882:	rol    DWORD PTR [ebp-0x40b95bd6],1
  40a888:	les    edx,FWORD PTR [eax+0x4c]
  40a88b:	test   DWORD PTR [edi-0x29],0xd1bd9a6e
  40a892:	dec    DWORD PTR [ebp+0x53aabb29]
  40a898:	in     al,0x62
  40a89a:	je     0x40a83d
  40a89c:	xor    eax,0xdb242f65
  40a8a1:	jbe    0x40a89b
  40a8a3:	or     eax,DWORD PTR [eax+0x2d]
  40a8a6:	xor    BYTE PTR [esi+edx*4+0x36e3e2d1],bl
  40a8ad:	popf   
  40a8ae:	and    dh,cl
  40a8b0:	into   
  40a8b1:	shr    al,cl
  40a8b3:	fld    QWORD PTR [eax]
  40a8b5:	loop   0x40a888
  40a8b7:	jbe    0x40a8f9
  40a8b9:	test   eax,0x86b9e402
  40a8be:	ret    0x51cb
  40a8c1:	or     esi,DWORD PTR ds:0x5907c580
  40a8c7:	data16 add BYTE PTR [edx+0x500c538e],ah
  40a8ce:	shr    bl,1
  40a8d0:	stc    
  40a8d1:	inc    esp
  40a8d2:	sahf   
  40a8d3:	aad    0x3a
  40a8d5:	mov    ah,0xab
  40a8d7:	add    eax,esi
  40a8d9:	xchg   ebx,eax
  40a8da:	rcl    BYTE PTR [ebp+0x4b7f181],cl
  40a8e0:	adc    eax,0xab210d28
  40a8e5:	cmc    
  40a8e6:	ret    0xbcee
  40a8e9:	add    ch,dh
  40a8eb:	push   0x18
  40a8ed:	cdq    
  40a8ee:	mov    dh,ah
  40a8f0:	xchg   edi,eax
  40a8f1:	into   
  40a8f2:	add    DWORD PTR [ecx-0x51],0x1f2052e
  40a8f9:	prefetchnta BYTE PTR [ebx]
  40a8fc:	into   
  40a8fd:	pop    ebx
  40a8fe:	mov    dh,0xc1
  40a900:	adc    al,0xf4
  40a902:	sbb    DWORD PTR [edi],eax
  40a904:	mov    ecx,0x3ae30191
  40a909:	cdq    
  40a90a:	fidiv  DWORD PTR [esi+0x17a6c9de]
  40a910:	dec    esp
  40a911:	dec    ecx
  40a912:	xchg   eax,esp
  40a914:	jp     0x40a8a0
  40a916:	mov    WORD PTR [edi-0x70],gs
  40a919:	fdivr  QWORD PTR [edi-0x14]
  40a91c:	test   DWORD PTR [ecx-0x6c],0x329693f3
  40a923:	jnp    0x40a949
  40a925:	or     eax,0x6ef1cf2b
  40a92a:	push   ecx
  40a92b:	push   ebp
  40a92c:	push   ebx
  40a92d:	es loope 0x40a8b4
  40a930:	dec    eax
  40a931:	int3   
  40a932:	and    cl,BYTE PTR [edx+esi*8]
  40a935:	shr    BYTE PTR [ebp-0x1d],cl
  40a938:	div    BYTE PTR [eax+0x5d]
  40a93b:	hlt    
  40a93c:	sbb    DWORD PTR [edx+0x313e6545],ecx
  40a942:	call   0xb077:0x5cece714
  40a949:	scas   eax,DWORD PTR es:[edi]
  40a94a:	inc    ecx
  40a94b:	gs cwde 
  40a94d:	mov    eax,DWORD PTR [ebx-0x23]
  40a950:	shl    DWORD PTR [esi],cl
  40a952:	mov    cl,0x47
  40a954:	ins    BYTE PTR es:[edi],dx
  40a955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a956:	outs   dx,DWORD PTR ds:[esi]
  40a957:	push   cs
  40a958:	sub    eax,0xe977204b
  40a95d:	xor    DWORD PTR [esi],edi
  40a95f:	sbb    al,0xa8
  40a961:	xor    eax,0x98c9357c
  40a966:	fidivr DWORD PTR [eax+eiz*2+0x7765ca68]
  40a96d:	out    dx,eax
  40a96e:	and    eax,0xec06b583
  40a973:	(bad)  
  40a974:	xor    bh,BYTE PTR [ebx+0x6f]
  40a977:	lods   eax,DWORD PTR ds:[esi]
  40a978:	fsub   QWORD PTR [esi-0x22151e8e]
  40a97e:	or     ebp,eax
  40a980:	(bad)  
  40a981:	dec    edx
  40a982:	lock test al,0x6c
  40a985:	or     eax,0x85ba1e8a
  40a98a:	outs   dx,DWORD PTR ds:[esi]
  40a98b:	loope  0x40a9ef
  40a98d:	dec    ebp
  40a98e:	jbe    0x40a92c
  40a990:	cmp    dl,BYTE PTR [esi+0x72]
  40a993:	sub    BYTE PTR [edx-0x7f094bba],0x74
  40a99a:	imul   dx,cx,0xde25
  40a99f:	(bad)  
  40a9a0:	fild   DWORD PTR [edi-0x61c76e88]
  40a9a6:	shr    esp,cl
  40a9a8:	outs   dx,BYTE PTR ds:[esi]
  40a9a9:	cwde   
  40a9aa:	(bad)  
  40a9ac:	push   ss
  40a9ad:	repnz leave 
  40a9af:	mov    ds:0xf2280399,eax
  40a9b4:	and    BYTE PTR [ebx+0x1f7709d],0xf7
  40a9bb:	xchg   edi,eax
  40a9bc:	or     ebp,DWORD PTR [ebx-0x25]
  40a9bf:	dec    edi
  40a9c0:	aaa    
  40a9c1:	mov    ss,WORD PTR [edi]
  40a9c3:	jp     0x40a9c9
  40a9c5:	(bad)  
  40a9c6:	std    
  40a9c7:	ins    BYTE PTR es:[edi],dx
  40a9c8:	loopne 0x40a957
  40a9ca:	sahf   
  40a9cb:	jae    0x40aa3d
  40a9cd:	scas   eax,DWORD PTR es:[edi]
  40a9ce:	fidivr DWORD PTR [edi-0x2d]
  40a9d1:	push   ebx
  40a9d2:	jmp    0x40aa13
  40a9d4:	mov    ds,edi
  40a9d6:	mov    WORD PTR [esi],ss
  40a9d8:	int    0xb5
  40a9da:	pop    eax
  40a9db:	add    esp,0xfae3ab4e
  40a9e1:	mov    ah,0xdf
  40a9e3:	(bad)  
  40a9e5:	fldcw  WORD PTR [esi-0x53b5b246]
  40a9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ec:	inc    ecx
  40a9ed:	icebp  
  40a9ee:	mov    WORD PTR [eax],ds
  40a9f0:	mov    al,ds:0x845054f7
  40a9f5:	adc    DWORD PTR [edx-0x51],esp
  40a9f8:	inc    edx
  40a9f9:	mov    edi,0x72728471
  40a9fe:	mov    ah,0xf4
  40aa00:	xchg   edi,eax
  40aa01:	popf   
  40aa02:	cmp    ebp,DWORD PTR [edi+0x2c]
  40aa05:	(bad)  
  40aa07:	mov    esp,0x7530226f
  40aa0c:	fstp   DWORD PTR [eax]
  40aa0e:	retf   0xb1d7
  40aa11:	adc    esp,DWORD PTR [edi+eax*8+0x243bc783]
  40aa18:	imul   edx,DWORD PTR [esi],0x6d471f4e
  40aa1e:	mov    esi,eax
  40aa20:	iret   
  40aa21:	xlat   BYTE PTR ds:[ebx]
  40aa22:	cmp    al,0x2f
  40aa24:	cdq    
  40aa25:	iret   
  40aa26:	arpl   cx,sp
  40aa28:	mov    DWORD PTR [ebx+edi*1-0x77fcc7cc],esi
  40aa2f:	inc    esp
  40aa30:	lahf   
  40aa31:	jmp    0xdec240e8
  40aa36:	sbb    esi,edi
  40aa38:	(bad)  
  40aa39:	iret   
  40aa3a:	pop    ebx
  40aa3b:	arpl   WORD PTR [ebx+ebx*2],bx
  40aa3e:	jo     0x40aa58
  40aa40:	ja     0x40a9ce
  40aa42:	sub    eax,0x6b36445
  40aa47:	push   ss
  40aa48:	or     DWORD PTR [edi+ebp*4],ebp
  40aa4b:	es add eax,0xf7af31da
  40aa51:	or     BYTE PTR [ebx+ecx*1+0x4258cbab],bl
  40aa58:	fsubr  DWORD PTR [esi+0x40bc0a44]
  40aa5e:	dec    esi
  40aa5f:	cmp    ecx,DWORD PTR [ebp+0x77f4ec56]
  40aa65:	xchg   edi,eax
  40aa66:	add    DWORD PTR [esi+0x34],ebx
  40aa69:	mov    DWORD PTR [ecx],esi
  40aa6b:	xchg   ebx,eax
  40aa6c:	(bad)  
  40aa6f:	or     al,0x2a
  40aa71:	js     0x40aaa1
  40aa73:	stos   DWORD PTR es:[edi],eax
  40aa74:	popf   
  40aa75:	cdq    
  40aa76:	cmp    al,0x0
  40aa78:	pushw  es
  40aa7a:	(bad)  
  40aa7b:	fidivr DWORD PTR [ebx+0x52]
  40aa7e:	and    DWORD PTR [ebp+0xf],0x5e
  40aa82:	std    
  40aa83:	adc    DWORD PTR [ecx+0x39],edx
  40aa86:	mov    ds:0x911c3857,al
  40aa8b:	jbe    0x40aad6
  40aa8d:	fs loopne 0x40ab08
  40aa90:	lahf   
  40aa91:	dec    ebx
  40aa92:	loop   0x40aafa
  40aa94:	leave  
  40aa95:	xchg   edx,eax
  40aa96:	mov    cl,0x76
  40aa98:	popf   
  40aa99:	cmc    
  40aa9a:	cmp    eax,0x1fdce854
  40aa9f:	xchg   ebp,eax
  40aaa0:	push   edx
  40aaa1:	push   eax
  40aaa2:	jp     0x40aad5
  40aaa4:	shr    BYTE PTR [ecx],cl
  40aaa6:	test   BYTE PTR [eax-0x38433b03],cl
  40aaac:	jno    0x40aa51
  40aaae:	xchg   edx,eax
  40aaaf:	xchg   DWORD PTR [ebx+0x150a24c],ebx
  40aab5:	cdq    
  40aab6:	fcmovnb st,st(1)
  40aab8:	fstp   TBYTE PTR ds:0x15d84008
  40aabf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac0:	sbb    al,0x88
  40aac2:	dec    ebx
  40aac3:	inc    eax
  40aac4:	jmp    0x40aaa6
  40aac6:	pop    esp
  40aac7:	push   ss
  40aac8:	xchg   BYTE PTR [ebx+ebp*4-0x6d],dh
  40aacc:	sbb    eax,0x4fd1d457
  40aad1:	test   eax,0x7e4350d4
  40aad6:	jbe    0x40aaf4
  40aad8:	xlat   BYTE PTR ds:[ebx]
  40aad9:	xor    edx,DWORD PTR [ebp+0x71cdf15]
  40aadf:	inc    esi
  40aae0:	fsubr  QWORD PTR [eax]
  40aae2:	or     BYTE PTR [edi],cl
  40aae4:	or     al,0xcd
  40aae6:	push   0x4a
  40aae8:	push   esi
  40aae9:	mov    esi,0x2bf7ff9e
  40aaee:	xor    dl,BYTE PTR [edi]
  40aaf0:	jle    0x40aa8f
  40aaf2:	fld    st(2)
  40aaf4:	jae    0x40aaf1
  40aaf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf7:	(bad)  
  40aaf8:	mov    ebp,0xf71874ce
  40aafd:	lea    edx,[edx]
  40aaff:	add    DWORD PTR [edx],ebx
  40ab01:	cwde   
  40ab02:	or     al,0x15
  40ab04:	ret    
  40ab05:	in     eax,dx
  40ab06:	jbe    0x40ab74
  40ab08:	sub    ebp,DWORD PTR [edi+0xd347b3]
  40ab0e:	das    
  40ab0f:	or     dh,dl
  40ab11:	cmp    eax,0xa2aefb2e
  40ab16:	dec    ebx
  40ab17:	mov    al,ds:0x42ff6bbb
  40ab1c:	test   BYTE PTR [ebp-0x15f7f2a3],ah
  40ab22:	in     eax,0x1d
  40ab24:	dec    edx
  40ab25:	adc    esi,DWORD PTR fs:[edi+ecx*8-0x6ae70f8]
  40ab2d:	outs   dx,DWORD PTR ds:[esi]
  40ab2e:	mov    ds:0x18e26920,eax
  40ab33:	aas    
  40ab34:	ret    
  40ab35:	les    eax,FWORD PTR ds:0x49f51a86
  40ab3b:	data16 in al,dx
  40ab3d:	int    0x3
  40ab3f:	not    ebx
  40ab41:	dec    edi
  40ab42:	jl     0x40abbc
  40ab44:	and    ebx,DWORD PTR ds:0x27d61369
  40ab4a:	(bad)  [eax+edx*8]
  40ab4d:	in     eax,dx
  40ab4e:	mov    esi,0x9c60c191
  40ab53:	aas    
  40ab54:	and    al,0x19
  40ab56:	fwait
  40ab57:	stos   DWORD PTR es:[edi],eax
  40ab58:	mov    dl,0xed
  40ab5a:	cmp    DWORD PTR [ebx],esi
  40ab5c:	(bad)  
  40ab5d:	sbb    al,0x6d
  40ab5f:	fild   QWORD PTR [ecx]
  40ab61:	pop    eax
  40ab62:	mov    dh,0xef
  40ab64:	cmp    al,0x83
  40ab66:	jle    0x40aba8
  40ab68:	out    dx,al
  40ab69:	jmp    0x40ab08
  40ab6b:	out    dx,al
  40ab6c:	pop    es
  40ab6d:	xchg   BYTE PTR [esi+0x1b],ch
  40ab70:	imul   edi,DWORD PTR [esi],0xffffffa1
  40ab73:	pusha  
  40ab74:	inc    ebx
  40ab75:	add    ecx,DWORD PTR [edx]
  40ab77:	call   0x2194:0xa1aaa6b9
  40ab7e:	pushf  
  40ab7f:	mov    eax,ecx
  40ab81:	fdiv   st(6),st
  40ab83:	stos   DWORD PTR es:[edi],eax
  40ab84:	inc    ebx
  40ab85:	adc    eax,0xe49d8458
  40ab8a:	and    bh,BYTE PTR [ebx+0x7e]
  40ab8d:	add    dh,dh
  40ab8f:	mov    al,ds:0xfca40f6d
  40ab94:	scas   eax,DWORD PTR es:[edi]
  40ab95:	dec    esp
  40ab96:	lock dec ecx
  40ab98:	es jmp 0x40ab42
  40ab9b:	gs cs add dh,bh
  40ab9f:	inc    eax
  40aba0:	daa    
  40aba1:	dec    esp
  40aba2:	push   esp
  40aba3:	adc    edx,DWORD PTR [esi*4-0x539e0f03]
  40abaa:	jb     0x40ab58
  40abac:	jge    0x40abcc
  40abae:	inc    edi
  40abaf:	ja     0x40aba4
  40abb1:	mov    ch,0xd1
  40abb3:	fwait
  40abb4:	and    eax,DWORD PTR [edx-0x28]
  40abb7:	adc    al,0x9d
  40abb9:	xchg   esp,eax
  40abba:	add    DWORD PTR [edi],ecx
  40abbc:	push   ebx
  40abbd:	inc    ebx
  40abbe:	cwde   
  40abbf:	in     al,0x87
  40abc1:	inc    ebp
  40abc2:	scas   al,BYTE PTR es:[edi]
  40abc3:	loope  0x40ac42
  40abc5:	push   ds
  40abc6:	test   DWORD PTR [ecx+0x199afb31],0xc791e7ea
  40abd0:	push   ds
  40abd1:	aam    0xe5
  40abd3:	rcl    edi,1
  40abd5:	sbb    BYTE PTR [ebp+0x41],bl
  40abd8:	imul   eax,ebp,0x4f372ee4
  40abde:	sbb    DWORD PTR [ebx+0x1c],ecx
  40abe1:	out    dx,eax
  40abe2:	lods   eax,DWORD PTR ds:[esi]
  40abe3:	sub    BYTE PTR [esi-0x34],bl
  40abe6:	inc    edi
  40abe7:	clc    
  40abe8:	loope  0x40ac48
  40abea:	rcr    eax,cl
  40abec:	pop    eax
  40abed:	cmp    ecx,esi
  40abef:	push   ebp
  40abf0:	cmp    eax,DWORD PTR [ecx-0x796eb080]
  40abf6:	pop    ebp
  40abf7:	enter  0x41b7,0x89
  40abfb:	fild   WORD PTR [eax+0x12ee843e]
  40ac01:	jmp    0x40aba8
  40ac03:	mov    ecx,0x8d15ce27
  40ac08:	or     BYTE PTR [esi+0x69815434],0x44
  40ac0f:	hlt    
  40ac10:	lods   eax,DWORD PTR ds:[esi]
  40ac11:	mov    al,dh
  40ac13:	add    al,0x23
  40ac15:	cmp    DWORD PTR [ebx],edx
  40ac17:	test   ah,dh
  40ac19:	pop    esi
  40ac1a:	cmp    eax,0xe7c03df9
  40ac1f:	inc    esi
  40ac20:	int    0x1a
  40ac22:	sub    al,0x6a
  40ac24:	(bad)  
  40ac26:	sub    eax,0x4e5c5d11
  40ac2b:	push   0x4c57a240
  40ac30:	adc    DWORD PTR [edi+0x7d22798f],0x1f8b374e
  40ac3a:	lahf   
  40ac3b:	adc    DWORD PTR [eax+0x8],ecx
  40ac3e:	vandps ymm3,ymm6,YMMWORD PTR [esi]
  40ac42:	mov    WORD PTR [esi-0x80],ss
  40ac45:	mov    cl,0x74
  40ac47:	(bad)  
  40ac48:	mov    ds:0x38142826,eax
  40ac4d:	dec    ebp
  40ac4e:	xchg   ebp,eax
  40ac4f:	test   al,0x57
  40ac51:	dec    ebp
  40ac52:	neg    BYTE PTR [edi]
  40ac54:	fsubr  DWORD PTR [edx-0x55]
  40ac57:	inc    ebx
  40ac58:	sbb    ch,bl
  40ac5a:	xor    BYTE PTR [eax],0x14
  40ac5d:	dec    BYTE PTR [esi+0xd]
  40ac60:	jp     0x40accf
  40ac62:	mov    al,0xbc
  40ac64:	or     eax,DWORD PTR [edx]
  40ac66:	mov    ss,WORD PTR [ebp-0x5b]
  40ac69:	int    0x45
  40ac6b:	iret   
  40ac6c:	xchg   DWORD PTR [ebp+0x603adcd0],eax
  40ac72:	jg     0x40ac30
  40ac74:	call   DWORD PTR [ebx+0x41cb4ad6]
  40ac7a:	ret    0xcfca
  40ac7d:	daa    
  40ac7e:	(bad)  
  40ac80:	or     eax,0x26eab9bb
  40ac85:	cli    
  40ac86:	inc    ebx
  40ac87:	fst    st(0)
  40ac89:	jmp    0x40acef
  40ac8b:	sbb    BYTE PTR [ecx],ah
  40ac8d:	sti    
  40ac8e:	ror    DWORD PTR [ebp+eiz*2-0x4c0a085e],0x19
  40ac96:	xchg   ecx,eax
  40ac97:	xor    BYTE PTR es:[edx-0x278930d7],al
  40ac9e:	daa    
  40ac9f:	fsub   st,st(0)
  40aca1:	les    edx,FWORD PTR [ebx-0x4e5852eb]
  40aca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca8:	nop
  40aca9:	shl    edi,cl
  40acab:	xor    ecx,DWORD PTR ds:0xd27d1cb2
  40acb1:	outs   dx,DWORD PTR ds:[esi]
  40acb2:	fwait
  40acb3:	js     0x40ad23
  40acb5:	xor    BYTE PTR [ecx+0x14d331de],0xe
  40acbc:	ja     0x40aca4
  40acbe:	ja     0x40acb2
  40acc0:	test   eax,0xce306766
  40acc5:	fmulp  st(4),st
  40acc7:	mov    cl,0x84
  40acc9:	in     al,dx
  40acca:	pushf  
  40accb:	out    0x5c,al
  40accd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acce:	sub    al,0x38
  40acd0:	xor    BYTE PTR [esi-0x28ca0db8],0x87
  40acd7:	repz out 0x52,eax
  40acda:	sbb    al,al
  40acdc:	dec    ebp
  40acdd:	xor    al,0x65
  40acdf:	pop    ebx
  40ace0:	xchg   BYTE PTR ds:0xffe237c4,ah
  40ace6:	das    
  40ace7:	sbb    al,0x15
  40ace9:	cmp    BYTE PTR [edx-0x680fb2e2],ch
  40acef:	or     eax,0x5d052706
  40acf4:	pop    eax
  40acf5:	push   edi
  40acf6:	push   edi
  40acf7:	jg     0x40ac7d
  40acf9:	sub    BYTE PTR [ebx+0x4a],cl
  40acfc:	mov    esp,0x7700eef5
  40ad01:	push   edx
  40ad02:	mov    dh,0xe9
  40ad04:	stos   DWORD PTR es:[edi],eax
  40ad05:	sub    ah,BYTE PTR [esp+ebx*1-0x23]
  40ad09:	mov    ah,0x6
  40ad0b:	bound  ebp,QWORD PTR [ebp-0xf]
  40ad0e:	(bad)  
  40ad0f:	in     al,0x8f
  40ad11:	mov    WORD PTR [edi+0xc],?
  40ad14:	(bad)  [eax]
  40ad16:	ds (bad) 
  40ad18:	xchg   ecx,eax
  40ad19:	add    eax,0x8fa7feec
  40ad1e:	xchg   BYTE PTR [ecx+0x24530441],al
  40ad24:	and    al,0x50
  40ad26:	sub    eax,0x841d920f
  40ad2b:	pop    ecx
  40ad2c:	inc    ebx
  40ad2d:	add    ecx,ebx
  40ad2f:	js     0x40adab
  40ad31:	sub    ebp,DWORD PTR [edi+0x3e51d727]
  40ad37:	or     al,0xf0
  40ad39:	add    BYTE PTR [edx+0x62],dl
  40ad3c:	mov    cl,0x3e
  40ad3e:	jmp    DWORD PTR [ebp-0x3f]
  40ad41:	push   edi
  40ad42:	and    eax,0xd5c27313
  40ad47:	inc    edx
  40ad48:	fs and bl,ch
  40ad4b:	sub    al,0xd7
  40ad4d:	ja     0x40accf
  40ad4f:	pop    ss
  40ad50:	push   0x767c5cc1
  40ad55:	repnz adc dl,BYTE PTR [edx+0x7a906f43]
  40ad5c:	fld    QWORD PTR [eax-0x1a]
  40ad5f:	mov    ecx,0x2bfd70dc
  40ad64:	das    
  40ad65:	sub    al,0x15
  40ad67:	fimul  WORD PTR [ecx+eiz*1-0x6d713659]
  40ad6e:	mov    bl,0x7b
  40ad70:	popa   
  40ad71:	xchg   edx,eax
  40ad72:	push   esi
  40ad73:	xchg   DWORD PTR [eax-0x1f598e02],esp
  40ad79:	imul   esp,DWORD PTR [edi+esi*8-0x6bc19e60],0x43eb6226
  40ad84:	cmp    DWORD PTR [edx],0xffffffbf
  40ad87:	nop    DWORD PTR [edx-0x58ea0a7f]
  40ad8e:	jne    0x40ad23
  40ad90:	push   cs
  40ad91:	sub    BYTE PTR [edi+ecx*8],cl
  40ad94:	mov    eax,ds:0x95e5db0e
  40ad99:	fld    DWORD PTR [ebx-0x64]
  40ad9c:	(bad)  
  40ad9d:	push   ss
  40ad9e:	and    eax,0xd192f530
  40ada3:	jmp    0x53:0xfa44425c
  40adaa:	push   0xa708f56f
  40adaf:	dec    esi
  40adb0:	in     eax,dx
  40adb1:	in     eax,dx
  40adb2:	dec    DWORD PTR [edx+0x5a]
  40adb5:	sub    al,ch
  40adb7:	inc    ecx
  40adb8:	je     0x40ae11
  40adba:	aad    0x95
  40adbc:	data16 jns 0x40ad82
  40adbf:	and    eax,0x479656ac
  40adc4:	pop    ebp
  40adc5:	xor    al,0x83
  40adc7:	jmp    0x8e11d7e6
  40adcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adce:	xchg   edx,eax
  40adcf:	add    al,0xd9
  40add1:	pop    bp
  40add3:	je     0x40ad71
  40add5:	cli    
  40add6:	push   edx
  40add7:	(bad)  
  40add8:	int3   
  40add9:	popa   
  40adda:	call   0x67fc9660
  40addf:	cmp    BYTE PTR [eax+0x55],ah
  40ade2:	retf   0x55e7
  40ade5:	cdq    
  40ade6:	push   ds
  40ade7:	div    BYTE PTR [ebp+0x1cb87592]
  40aded:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adef:	lahf   
  40adf0:	xor    DWORD PTR [edx-0x25],ebp
  40adf3:	jae    0x40ad76
  40adf5:	pushf  
  40adf6:	sbb    eax,0x85d25f5e
  40adfb:	sbb    al,0xb2
  40adfd:	xlat   BYTE PTR ds:[ebx]
  40adfe:	mov    esp,0xfdb9eb46
  40ae03:	aam    0x5f
  40ae05:	lds    ebp,FWORD PTR [edx+eiz*4-0x53]
  40ae09:	sbb    ebp,esp
  40ae0b:	shr    BYTE PTR [edi],cl
  40ae0d:	sbb    ebx,esi
  40ae0f:	mov    WORD PTR [ecx+eiz*8-0x5184e0ec],ds
  40ae16:	xchg   edx,eax
  40ae17:	inc    esp
  40ae18:	cmp    bl,dh
  40ae1a:	mov    cl,0x0
  40ae1c:	in     eax,0xdf
  40ae1e:	push   esp
  40ae1f:	sub    al,0x1e
  40ae21:	pop    ss
  40ae22:	xchg   esp,ecx
  40ae24:	jg     0x40adb2
  40ae26:	pusha  
  40ae27:	ficomp DWORD PTR [ecx]
  40ae29:	inc    edi
  40ae2a:	or     eax,0x7be77bdf
  40ae2f:	stc    
  40ae30:	mov    BYTE PTR [eax+0x105ac811],al
  40ae36:	jecxz  0x40ae4c
  40ae38:	in     al,0x25
  40ae3a:	popa   
  40ae3b:	jl     0x40adbf
  40ae3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae3e:	mov    es,eax
  40ae40:	jbe    0x40aeb0
  40ae42:	inc    ecx
  40ae43:	shl    BYTE PTR [edi+0xa97ec12],cl
  40ae49:	push   ebx
  40ae4a:	push   esp
  40ae4b:	rcr    DWORD PTR [edx-0x2f15b0cd],0xf0
  40ae52:	jno    0x40ae36
  40ae54:	or     BYTE PTR [edx],bh
  40ae56:	fcomi  st,st(2)
  40ae58:	mov    es,WORD PTR [ebx-0x6f]
  40ae5b:	push   es
  40ae5c:	jl     0x40ae25
  40ae5e:	xor    BYTE PTR [ebp+0x4472e832],ch
  40ae64:	inc    esp
  40ae65:	dec    ebp
  40ae66:	dec    edx
  40ae67:	rcr    DWORD PTR ds:0x5bc933e7,0xa1
  40ae6e:	das    
  40ae6f:	sub    ebp,esp
  40ae71:	(bad)  
  40ae72:	int    0x85
  40ae74:	inc    ebp
  40ae75:	shl    BYTE PTR [edi],0x24
  40ae78:	dec    edi
  40ae79:	mov    ch,0x6a
  40ae7b:	inc    esp
  40ae7c:	imul   esp,DWORD PTR [ebx],0xffffffc3
  40ae7f:	inc    ebx
  40ae80:	sub    eax,DWORD PTR [esi]
  40ae82:	sub    BYTE PTR [ecx],0x9a
  40ae85:	adc    DWORD PTR [eax],ebx
  40ae87:	repz sbb al,0xba
  40ae8a:	ret    0xeb7c
  40ae8d:	je     0x40ae77
  40ae8f:	out    0x48,eax
  40ae91:	add    al,0xd7
  40ae94:	mov    esp,0xd34827d3
  40ae99:	push   edi
  40ae9a:	pusha  
  40ae9b:	jecxz  0x40ae70
  40ae9d:	jns    0x40af00
  40ae9f:	dec    esi
  40aea0:	push   esi
  40aea1:	outs   dx,BYTE PTR ds:[esi]
  40aea2:	xchg   bh,al
  40aea4:	and    esi,edi
  40aea6:	mov    ch,0x62
  40aea8:	(bad)  
  40aea9:	aad    0x25
  40aeab:	outs   dx,BYTE PTR ds:[esi]
  40aeac:	retf   
  40aead:	pop    ebx
  40aeae:	mov    ah,cl
  40aeb0:	sub    al,0x3f
  40aeb2:	and    ebx,DWORD PTR [eax+0x6a]
  40aeb5:	jb     0x40aec9
  40aeb7:	jo     0x40aeac
  40aeb9:	outs   dx,DWORD PTR ds:[esi]
  40aeba:	aam    0xac
  40aebc:	push   edi
  40aebd:	cmp    edx,DWORD PTR [ecx+0x6c9064c3]
  40aec3:	pushf  
  40aec4:	jg     0x40aee5
  40aec6:	nop
  40aec7:	push   0xffffffac
  40aec9:	stos   DWORD PTR es:[edi],eax
  40aeca:	loope  0x40aef0
  40aecc:	dec    ebp
  40aecd:	mov    al,ds:0x1678cd8c
  40aed2:	fsub   DWORD PTR [edi+0x62]
  40aed5:	clc    
  40aed6:	test   DWORD PTR [ebx-0x17],ebp
  40aed9:	xchg   esp,eax
  40aeda:	pop    ss
  40aedb:	inc    ecx
  40aedc:	call   DWORD PTR [ecx]
  40aede:	or     al,0x23
  40aee0:	cld    
  40aee1:	push   ds
  40aee2:	gs sbb eax,0x4a4e40d0
  40aee8:	aam    0xc4
  40aeea:	loope  0x40af4b
  40aeec:	dec    ebx
  40aeed:	or     ecx,DWORD PTR [ecx]
  40aeef:	push   esp
  40aef0:	mov    esi,0xef382ba3
  40aef5:	xor    DWORD PTR [eax+0x1b],0x4b03dde0
  40aefc:	cmp    al,0xf3
  40aefe:	mov    ecx,0x49604b51
  40af03:	test   eax,0x2d6cccfc
  40af08:	(bad)  
  40af09:	jmp    0x2a22985a
  40af0e:	adc    DWORD PTR ds:0x9220e8a6,0xffffffaa
  40af15:	les    eax,FWORD PTR [esi-0x9]
  40af18:	mov    ds:0x931f7beb,al
  40af1d:	icebp  
  40af1e:	jg     0x40aec2
  40af20:	(bad)  
  40af22:	push   ds
  40af23:	sti    
  40af24:	outs   dx,BYTE PTR ds:[esi]
  40af25:	sbb    BYTE PTR [ebx],bl
  40af27:	aas    
  40af28:	sbb    dl,BYTE PTR [edx+0x4a]
  40af2b:	adc    eax,0xf285c988
  40af30:	cmp    eax,0xf28220d5
  40af35:	add    dh,BYTE PTR [ecx-0x65]
  40af38:	xchg   BYTE PTR [edx+0x4b5974c6],cl
  40af3e:	pop    es
  40af3f:	sbb    eax,0x3b2aa335
  40af44:	adc    BYTE PTR [edi+esi*8-0x31a7369a],0xb1
  40af4c:	sahf   
  40af4d:	mov    DWORD PTR [ebx+0x31],ecx
  40af50:	add    ebx,esi
  40af52:	pop    edx
  40af53:	push   esi
  40af54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af55:	mov    cs,WORD PTR [ecx+0x87a83ea]
  40af5b:	popf   
  40af5c:	jb     0x40aeee
  40af5e:	popf   
  40af5f:	mov    al,0xbb
  40af61:	sahf   
  40af62:	ja     0x40aee5
  40af64:	adc    BYTE PTR [esi-0x31e37adc],0x94
  40af6b:	pushf  
  40af6c:	test   eax,0x36e1fef9
  40af71:	ins    DWORD PTR es:[edi],dx
  40af72:	dec    esp
  40af73:	retf   0x28c4
  40af76:	or     eax,0xab4caabe
  40af7b:	rcl    BYTE PTR [eax],1
  40af7d:	or     bh,BYTE PTR [edi+ebx*4]
  40af80:	sbb    DWORD PTR [edi],edi
  40af82:	dec    ecx
  40af83:	jb     0x40af2f
  40af85:	jmp    0x40afbc
  40af87:	sub    BYTE PTR [esi-0x16937460],bl
  40af8d:	push   edx
  40af8e:	dec    ebp
  40af8f:	pop    es
  40af90:	int    0x22
  40af92:	pop    edi
  40af93:	int    0x18
  40af95:	pop    esi
  40af96:	test   al,0xf4
  40af98:	jne    0x40b00d
  40af9a:	jg     0x40af7f
  40af9c:	fs xchg esi,eax
  40af9e:	jp     0x40af9d
  40afa0:	pop    ebx
  40afa1:	call   0x1443:0xe097ad1f
  40afa8:	cld    
  40afa9:	test   DWORD PTR [eax+0x3bfa6856],edx
  40afaf:	rol    esp,0x4b
  40afb2:	in     al,dx
  40afb3:	add    BYTE PTR [ebp-0xa3a4ad6],bh
  40afb9:	es inc eax
  40afbb:	sahf   
  40afbc:	pop    ss
  40afbd:	std    
  40afbe:	push   edx
  40afbf:	jg     0x40af97
  40afc1:	jmp    0x103d:0xeda9f12d
  40afc8:	xor    eax,0xa759ecb4
  40afcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afce:	ds into 
  40afd0:	pop    ebp
  40afd1:	push   edx
  40afd2:	xchg   edx,eax
  40afd3:	sbb    DWORD PTR [ebx+0x3],ebx
  40afd6:	and    DWORD PTR [edx+0x770af4c2],ebp
  40afdc:	jmp    0x40b036
  40afde:	ficom  WORD PTR [ebx-0x65]
  40afe1:	or     BYTE PTR [edx],dh
  40afe3:	mov    DWORD PTR [ebp+0x2a1b0914],esp
  40afe9:	or     eax,0xd87e6378
  40afee:	xor    al,0xa4
  40aff0:	outs   dx,BYTE PTR ds:[esi]
  40aff1:	dec    edi
  40aff2:	mov    esi,0x62031214
  40aff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff8:	test   DWORD PTR [edi+eax*2-0x5b12f753],esp
  40afff:	mov    esi,0x3e80fcd
  40b004:	icebp  
  40b005:	xor    ch,al
  40b007:	sar    bh,cl
  40b009:	or     DWORD PTR [esi-0x61],ecx
  40b00c:	mov    DWORD PTR [ebx+eiz*2-0x7f8497ff],ecx
  40b013:	xchg   esi,eax
  40b014:	dec    ebp
  40b015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b016:	stos   BYTE PTR es:[edi],al
  40b017:	dec    esp
  40b018:	xor    esp,DWORD PTR [eax-0x2f349457]
  40b01e:	xchg   ecx,eax
  40b01f:	or     al,0x9c
  40b021:	outs   dx,DWORD PTR ds:[esi]
  40b022:	fisub  DWORD PTR ds:0x44fa1946
  40b028:	sub    al,0x6e
  40b02a:	rol    DWORD PTR ds:0xa212d17e,0x68
  40b031:	out    0x48,al
  40b033:	mov    ebp,0xf857240e
  40b038:	pushf  
  40b039:	fild   WORD PTR [esi+0x17dde1fe]
  40b03f:	shr    DWORD PTR [ebx+eiz*8-0x1085fed2],cl
  40b046:	xchg   ecx,eax
  40b047:	push   esi
  40b048:	push   ds
  40b049:	pop    edi
  40b04a:	xchg   DWORD PTR [ecx-0x12],esi
  40b04d:	cmp    eax,0xd1271d32
  40b052:	mov    esp,0x3b9d9e91
  40b057:	or     esp,DWORD PTR [eax+eiz*8-0x6fbc7312]
  40b05e:	aad    0xa1
  40b060:	jno    0x40b0b2
  40b062:	jae    0x40b0ac
  40b064:	sub    ecx,0xfffffff7
  40b067:	pop    ss
  40b068:	jecxz  0x40b0b8
  40b06a:	mov    edx,esp
  40b06c:	mov    ds:0xe8c26522,eax
  40b071:	jecxz  0x40b020
  40b073:	rcr    BYTE PTR [eax+edi*4-0x1e],cl
  40b077:	inc    edx
  40b078:	stc    
  40b079:	lods   eax,DWORD PTR ds:[esi]
  40b07a:	pop    edx
  40b07b:	popa   
  40b07c:	sbb    BYTE PTR [ebx+0x6c4dd6f6],0x40
  40b083:	retf   
  40b084:	push   esi
  40b085:	add    BYTE PTR [edx],0x4e
  40b088:	add    ah,dl
  40b08a:	cmc    
  40b08b:	sbb    DWORD PTR [eax],esp
  40b08d:	ret    0x439f
  40b090:	test   eax,0x3fea1f1
  40b095:	ins    BYTE PTR es:[edi],dx
  40b096:	fwait
  40b097:	jmp    0xe89:0x7460f2f4
  40b09e:	sub    esi,ebp
  40b0a0:	outs   dx,DWORD PTR ds:[esi]
  40b0a1:	ja     0x40b030
  40b0a3:	and    DWORD PTR ds:[edx],edx
  40b0a6:	sub    dh,bh
  40b0a8:	push   esi
  40b0a9:	repnz outs dx,BYTE PTR ds:[esi]
  40b0ab:	adc    DWORD PTR [edi],0x6e
  40b0ae:	fistp  DWORD PTR [ecx]
  40b0b0:	inc    eax
  40b0b1:	frstor [ebx+0x3e0512f7]
  40b0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b8:	mov    al,0xb5
  40b0ba:	call   0xbafc:0x67d82539
  40b0c1:	jmp    0xf926:0x11e00c1
  40b0c8:	pop    edx
  40b0c9:	cmc    
  40b0ca:	mov    cl,0x96
  40b0cc:	mov    DWORD PTR [ebx],esi
  40b0ce:	icebp  
  40b0cf:	retf   0x7b03
  40b0d2:	add    dh,al
  40b0d4:	mov    ecx,0x1cdba6fb
  40b0d9:	xchg   edi,eax
  40b0da:	loope  0x40b061
  40b0dc:	outs   dx,BYTE PTR ds:[esi]
  40b0dd:	mov    edx,0xf604695
  40b0e2:	jl     0x40b11b
  40b0e4:	push   eax
  40b0e5:	mov    dh,0x29
  40b0e7:	push   esi
  40b0e8:	in     eax,dx
  40b0e9:	ss push edx
  40b0eb:	sahf   
  40b0ec:	lods   eax,DWORD PTR ds:[esi]
  40b0ed:	rcl    DWORD PTR [edi],cl
  40b0ef:	pop    esp
  40b0f0:	mov    ebx,0x2eafd695
  40b0f5:	jp     0x40b114
  40b0f7:	sub    edi,eax
  40b0f9:	lods   eax,DWORD PTR ds:[esi]
  40b0fa:	push   ecx
  40b0fb:	in     al,0x81
  40b0fd:	and    BYTE PTR [ebx],al
  40b0ff:	dec    BYTE PTR [ecx+0x45]
  40b102:	jb     0x40b129
  40b104:	jg     0x40b0cb
  40b106:	fdiv   st,st(5)
  40b108:	out    0x58,eax
  40b10a:	test   DWORD PTR [ebp-0x6],edx
  40b10d:	jae    0x40b091
  40b10f:	add    dh,BYTE PTR [edi+0x756f9240]
  40b115:	push   edx
  40b116:	jae    0x40b0c3
  40b118:	out    dx,eax
  40b119:	inc    edx
  40b11a:	sub    al,0x7e
  40b11c:	fcmovne st,st(6)
  40b11e:	mov    ds:0xa199729c,eax
  40b123:	xor    BYTE PTR [ebx+0x7deb5ce4],ah
  40b129:	mov    ?,ebp
  40b12b:	xchg   ebp,eax
  40b12c:	test   al,0xbb
  40b12e:	scas   al,BYTE PTR es:[edi]
  40b12f:	add    edx,DWORD PTR [esi+ecx*1-0x69]
  40b133:	ds dec ebp
  40b135:	push   ds
  40b136:	mov    eax,0x987114f8
  40b13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13c:	cli    
  40b13d:	add    eax,0xff4d670d
  40b142:	fwait
  40b143:	fs jnp 0x40b13d
  40b146:	retf   0xeb64
  40b149:	in     eax,0x25
  40b14b:	sti    
  40b14c:	push   edi
  40b14d:	das    
  40b14e:	je     0x40b0e2
  40b150:	jmp    0x2db54b14
  40b155:	dec    edi
  40b156:	or     bl,BYTE PTR [ebx+edi*2-0x406341c1]
  40b15d:	mov    cl,0x88
  40b15f:	dec    ebp
  40b160:	test   BYTE PTR [esi+0x30398e54],0x34
  40b167:	and    esi,eax
  40b169:	mov    ch,BYTE PTR [ecx]
  40b16b:	ins    DWORD PTR es:[edi],dx
  40b16c:	inc    esi
  40b16d:	lock xchg dx,ax
  40b170:	mov    edx,0x2ab06b8d
  40b175:	repnz mov ah,0xd0
  40b178:	enter  0xfc8d,0x52
  40b17c:	jecxz  0x40b17e
  40b17e:	retf   0x560c
  40b181:	xchg   ebx,eax
  40b182:	and    ah,dh
  40b184:	(bad)  
  40b185:	outs   dx,DWORD PTR ds:[esi]
  40b186:	mov    fs,WORD PTR [ebp-0x79]
  40b189:	int    0x71
  40b18b:	adc    BYTE PTR [ecx-0x26],bl
  40b18e:	mov    ebp,0xde24c194
  40b193:	popa   
  40b194:	ret    0x5493
  40b197:	fnstcw WORD PTR [ebx]
  40b199:	leave  
  40b19a:	mov    ecx,0xa6f24ee1
  40b19f:	scas   eax,DWORD PTR es:[edi]
  40b1a0:	ret    0x92bd
  40b1a3:	mov    esp,0x254a889f
  40b1a8:	or     DWORD PTR [ebp-0x67],esi
  40b1ab:	fsub   DWORD PTR [edx+0x2ddb5af7]
  40b1b1:	jnp    0x40b1a1
  40b1b3:	in     eax,0xf3
  40b1b5:	fwait
  40b1b6:	scas   al,BYTE PTR es:[edi]
  40b1b7:	or     al,0xec
  40b1b9:	pop    edx
  40b1ba:	push   ss
  40b1bb:	shl    BYTE PTR [edi-0x70],0x48
  40b1bf:	cs inc ebp
  40b1c1:	mov    ds,esi
  40b1c3:	shr    BYTE PTR [edi-0x4b951b7],cl
  40b1c9:	pop    es
  40b1ca:	push   esi
  40b1cb:	push   eax
  40b1cc:	cmc    
  40b1cd:	jmp    0x40b1b8
  40b1cf:	add    edx,DWORD PTR [ebx]
  40b1d1:	jnp    0x40b221
  40b1d3:	sub    al,0x8e
  40b1d5:	das    
  40b1d6:	mov    edi,0x2fc28c6a
  40b1db:	or     esp,DWORD PTR [edi+0x5]
  40b1de:	xor    esi,DWORD PTR [edx-0x60]
  40b1e1:	cmp    al,0xef
  40b1e3:	leave  
  40b1e4:	retf   0xa809
  40b1e7:	mov    DWORD PTR [eax],edi
  40b1e9:	shl    BYTE PTR [esi],1
  40b1eb:	jl     0x40b20a
  40b1ed:	xchg   BYTE PTR [esi-0x613b6e39],ch
  40b1f3:	inc    edx
  40b1f4:	push   ds
  40b1f5:	mov    ecx,0xb83b753
  40b1fa:	into   
  40b1fb:	mov    ebx,DWORD PTR [edi-0x42]
  40b1fe:	xor    al,0xf6
  40b200:	cdq    
  40b201:	push   edi
  40b202:	data16 jae 0x40b237
  40b205:	or     eax,0x3dc7aed9
  40b20a:	mov    edi,0x81f326ca
  40b20f:	adc    dl,BYTE PTR [ebx+edi*8]
  40b212:	mov    eax,ds:0x9ac8341b
  40b217:	jne    0x40b1ba
  40b219:	arpl   WORD PTR [ebp+0x50],dx
  40b21c:	fwait
  40b21d:	push   ss
  40b21e:	mov    WORD PTR [edx+eiz*2-0x7a67cb91],es
  40b225:	cld    
  40b226:	daa    
  40b227:	dec    edi
  40b228:	aas    
  40b229:	mov    ch,0xde
  40b22b:	aad    0x2f
  40b22d:	add    edx,DWORD PTR [esp+eiz*4+0x65]
  40b231:	xor    dh,cl
  40b233:	pop    ebp
  40b234:	sahf   
  40b235:	sub    eax,0x2321578b
  40b23a:	icebp  
  40b23b:	sub    eax,0x66b130c9
  40b240:	mov    dl,0xd1
  40b242:	xlat   BYTE PTR ds:[ebx]
  40b243:	(bad)  
  40b244:	jo     0x40b1cf
  40b246:	jle    0x40b29e
  40b248:	data16 add al,0xfb
  40b24b:	cmp    ebx,DWORD PTR [edx+0x25]
  40b24e:	xor    dh,BYTE PTR [edi]
  40b250:	xor    al,0x25
  40b252:	xor    al,0x23
  40b254:	xor    edx,eax
  40b256:	cdq    
  40b257:	add    cl,bh
  40b259:	cmp    BYTE PTR [esi-0x67bb40fd],ch
  40b25f:	mov    eax,DWORD PTR [edi+0x4cd4709f]
  40b265:	mov    ebp,0x7623ad87
  40b26a:	fistp  WORD PTR [edx+0xf]
  40b26d:	push   0x23bfc7ca
  40b272:	sub    DWORD PTR [esi],esi
  40b274:	xchg   DWORD PTR [edi],esp
  40b276:	es inc esi
  40b278:	inc    edi
  40b279:	bound  esp,QWORD PTR [esi+0x5100bfe4]
  40b27f:	jp     0x40b22d
  40b281:	clc    
  40b282:	stos   DWORD PTR es:[edi],eax
  40b283:	sbb    BYTE PTR [ecx+eax*1-0x65b9921f],cl
  40b28a:	lock fwait
  40b28c:	xchg   BYTE PTR [eax],dh
  40b28e:	dec    ebx
  40b28f:	jnp    0x40b256
  40b291:	jecxz  0x40b226
  40b293:	leave  
  40b294:	xor    eax,0x2a65f117
  40b299:	popf   
  40b29a:	enter  0xd3eb,0xe
  40b29e:	push   ecx
  40b29f:	push   es
  40b2a0:	jns    0x40b2a2
  40b2a2:	shr    BYTE PTR [eax],0xca
  40b2a5:	jp     0x40b237
  40b2a7:	sbb    eax,0xf0a03c86
  40b2ac:	xsaves [esi+0x669b9473]
  40b2b3:	aad    0x84
  40b2b5:	jno    0x40b248
  40b2b7:	mov    BYTE PTR [edi-0x6b10125f],dh
  40b2bd:	clc    
  40b2be:	out    0xa1,eax
  40b2c0:	sahf   
  40b2c1:	fist   DWORD PTR [eax-0x7511402]
  40b2c7:	inc    ebp
  40b2c8:	adc    ch,ch
  40b2ca:	dec    esi
  40b2cb:	pop    ss
  40b2cc:	cmp    eax,0xb04f638a
  40b2d1:	int    0xa1
  40b2d3:	xchg   esp,eax
  40b2d4:	dec    eax
  40b2d5:	and    esi,DWORD PTR ss:[edx]
  40b2d8:	dec    ebx
  40b2d9:	push   ds
  40b2da:	xor    al,0x8d
  40b2dc:	cdq    
  40b2dd:	loope  0x40b282
  40b2df:	or     BYTE PTR [edi+0x13],cl
  40b2e2:	sbb    al,0xba
  40b2e4:	ins    BYTE PTR es:[edi],dx
  40b2e5:	leave  
  40b2e6:	jl     0x40b342
  40b2e8:	dec    edi
  40b2e9:	ins    DWORD PTR es:[edi],dx
  40b2ea:	fiadd  DWORD PTR [edi+0x42]
  40b2ed:	dec    ebx
  40b2ee:	or     DWORD PTR [esi-0x1938b88d],edi
  40b2f4:	xlat   BYTE PTR ds:[ebx]
  40b2f5:	test   BYTE PTR [edx],cl
  40b2f7:	mov    esp,0x2fc66de2
  40b2fc:	sub    al,BYTE PTR [eax]
  40b2fe:	cwde   
  40b2ff:	ins    DWORD PTR es:[edi],dx
  40b300:	mov    bh,0x96
  40b302:	push   0x10
  40b304:	sub    al,0xcc
  40b306:	inc    edx
  40b307:	or     al,0x36
  40b309:	jae    0x40b2c4
  40b30b:	adc    eax,0x977cd7b
  40b310:	dec    esp
  40b311:	push   cs
  40b312:	mov    bh,dh
  40b314:	mov    esi,0xbf21c034
  40b319:	dec    ebx
  40b31a:	fucom  st(6)
  40b31c:	std    
  40b31d:	dec    esi
  40b31e:	xor    al,0xd4
  40b320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b321:	shr    DWORD PTR [edi],cl
  40b323:	jns    0x40b2c1
  40b325:	jns    0x40b379
  40b327:	sbb    ch,cl
  40b329:	pop    es
  40b32a:	aad    0x64
  40b32c:	mov    dh,BYTE PTR [esi+0x62899b76]
  40b332:	lods   al,BYTE PTR ds:[esi]
  40b333:	add    eax,0xa0ea337a
  40b338:	push   ebp
  40b339:	xor    eax,0xf5fd743f
  40b33e:	push   ds
  40b33f:	push   ecx
  40b340:	ret    0x71f6
  40b343:	dec    ecx
  40b344:	add    DWORD PTR [edi+0x79c2caa3],0xaa7d9f3
  40b34e:	sbb    cl,dl
  40b350:	mov    esi,0x8b076fdb
  40b355:	ins    BYTE PTR es:[edi],dx
  40b356:	lea    ebx,[esi]
  40b358:	mov    bl,0x65
  40b35a:	sub    DWORD PTR [ebx-0x2a00cc68],eax
  40b360:	shl    DWORD PTR fs:0x4f997e4a,1
  40b367:	into   
  40b368:	pop    ebp
  40b369:	pop    ss
  40b36a:	or     edx,esi
  40b36c:	mov    ah,0xca
  40b36e:	in     al,dx
  40b36f:	stc    
  40b370:	popf   
  40b371:	in     al,0x8b
  40b373:	cmp    BYTE PTR [eax+0x31af491],al
  40b379:	xor    al,0x9b
  40b37b:	icebp  
  40b37c:	arpl   WORD PTR [ebx+ebp*1+0xd823c68],cx
  40b383:	sub    BYTE PTR ss:0x14bb02c2,0xf9
  40b38b:	xchg   edi,eax
  40b38c:	xchg   ebx,eax
  40b38d:	mov    ebp,0xd9e7e6b7
  40b392:	and    ah,BYTE PTR [esi]
  40b394:	ins    BYTE PTR es:[edi],dx
  40b395:	inc    edx
  40b396:	push   ebp
  40b397:	add    DWORD PTR [edx+0x28bda47],esi
  40b39d:	sbb    ch,dh
  40b39f:	push   esp
  40b3a0:	lods   eax,DWORD PTR ds:[esi]
  40b3a1:	add    bl,0x36
  40b3a4:	sti    
  40b3a5:	sbb    BYTE PTR ss:[ebx-0x4f437af6],dl
  40b3ac:	xor    al,BYTE PTR [ebp+edx*2+0x1b8be740]
  40b3b3:	(bad)  
  40b3b4:	frstor [edx+0x6a0deb6a]
  40b3ba:	int3   
  40b3bb:	repnz outs dx,DWORD PTR ds:[esi]
  40b3bd:	push   esp
  40b3be:	std    
  40b3bf:	mov    esi,0xc3b7667e
  40b3c4:	or     eax,DWORD PTR [edx]
  40b3c6:	push   0x32
  40b3c8:	(bad)  
  40b3c9:	mov    esp,0xe4fe3e8c
  40b3ce:	add    ebp,DWORD PTR [edx+0x58]
  40b3d1:	xchg   ebp,eax
  40b3d2:	or     eax,DWORD PTR ds:0x8c8f72da
  40b3d8:	sbb    edi,DWORD PTR [ebx+0x2d]
  40b3db:	mov    bl,0xdd
  40b3dd:	xor    eax,0x76e87171
  40b3e2:	dec    edx
  40b3e3:	call   0x4d67:0x139a53e4
  40b3ea:	cmp    eax,0xdac1fb3e
  40b3ef:	test   al,0x8f
  40b3f1:	lods   al,BYTE PTR ds:[esi]
  40b3f2:	add    al,0xcb
  40b3f4:	pop    esi
  40b3f5:	outs   dx,BYTE PTR ds:[esi]
  40b3f6:	test   al,0x71
  40b3f8:	outs   dx,BYTE PTR ds:[esi]
  40b3f9:	mov    al,ds:0x6f52069a
  40b3fe:	add    bh,BYTE PTR [esi-0x7c4f9064]
  40b404:	pop    ss
  40b405:	push   esp
  40b406:	push   ecx
  40b407:	inc    esi
  40b408:	jae    0x40b3c4
  40b40a:	std    
  40b40b:	(bad)  
  40b40c:	stc    
  40b40d:	mov    dl,0xef
  40b40f:	inc    ecx
  40b410:	cmp    ecx,edi
  40b412:	ret    0xace1
  40b415:	pop    ebx
  40b416:	push   ss
  40b417:	mov    edi,0x2db8eade
  40b41c:	sti    
  40b41d:	and    ah,BYTE PTR [edi-0x786f46dc]
  40b423:	push   edi
  40b424:	in     al,0x76
  40b426:	ins    BYTE PTR es:[edi],dx
  40b427:	or     edi,0x77
  40b42a:	arpl   WORD PTR [eax+0x7c],bx
  40b42d:	jmp    0xb1109690
  40b432:	mov    ebx,DWORD PTR [esi-0x15]
  40b435:	iret   
  40b436:	dec    eax
  40b437:	int    0xa2
  40b439:	inc    ebp
  40b43a:	lahf   
  40b43b:	cmp    DWORD PTR [ebx-0x68b2f625],esi
  40b441:	je     0x40b424
  40b443:	popa   
  40b444:	add    ch,ah
  40b446:	inc    ebx
  40b447:	mov    BYTE PTR [eax-0x6bc23ceb],ch
  40b44d:	mov    al,ds:0xceaeb62b
  40b452:	push   esp
  40b453:	arpl   cx,cx
  40b455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b456:	popa   
  40b457:	rol    DWORD PTR [edx-0x80],0xf7
  40b45b:	leave  
  40b45c:	fsub   DWORD PTR [ecx+0x7d]
  40b45f:	mul    DWORD PTR cs:[eax+0x7a]
  40b463:	push   esp
  40b464:	pop    esi
  40b465:	mov    ebp,0xa2cd5a7f
  40b46a:	lea    ecx,[esi-0x26]
  40b46d:	cmp    DWORD PTR ds:0x79c1fb1f,esi
  40b473:	and    BYTE PTR [ebx+0xe],dl
  40b476:	inc    edx
  40b477:	pop    es
  40b478:	mov    ah,0xbd
  40b47a:	sbb    BYTE PTR [edx-0x30],al
  40b47d:	test   DWORD PTR [esi+0x3e],0x2d1d4d1
  40b484:	rcl    bh,cl
  40b486:	jb     0x40b45c
  40b488:	or     eax,0xa7839671
  40b48d:	jle    0x40b4e8
  40b48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b490:	call   0xc3c7:0x4789e37b
  40b497:	(bad)  
  40b498:	and    eax,0xcdbca4f3
  40b49d:	lods   al,BYTE PTR ds:[esi]
  40b49e:	pop    esi
  40b49f:	into   
  40b4a0:	jo     0x40b4b8
  40b4a2:	jb     0x40b44c
  40b4a4:	dec    edx
  40b4a5:	mov    edi,0x1b1391de
  40b4aa:	push   ebx
  40b4ab:	(bad)  
  40b4ac:	dec    edx
  40b4ad:	push   ebx
  40b4ae:	jnp    0x40b4f4
  40b4b0:	and    DWORD PTR [ecx+0x52ad8fd1],edi
  40b4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b7:	lods   eax,DWORD PTR ds:[esi]
  40b4b8:	jno    0x40b43d
  40b4ba:	pop    esp
  40b4bb:	push   ss
  40b4bc:	sub    dh,BYTE PTR [edx+0x9436d51]
  40b4c2:	adc    al,0xef
  40b4c4:	aas    
  40b4c5:	xor    eax,0x9de55860
  40b4ca:	push   esp
  40b4cb:	out    dx,al
  40b4cc:	push   esi
  40b4cd:	aam    0xcb
  40b4cf:	mov    al,0x34
  40b4d1:	add    al,0x53
  40b4d3:	hlt    
  40b4d4:	fxch   st(7)
  40b4d6:	stc    
  40b4d7:	adc    eax,0xdce3e7e6
  40b4dc:	lahf   
  40b4dd:	outs   dx,DWORD PTR ds:[esi]
  40b4de:	mov    dl,0x91
  40b4e0:	and    al,0x3f
  40b4e2:	and    edi,ecx
  40b4e4:	and    BYTE PTR [edx+esi*8],cl
  40b4e7:	push   eax
  40b4e8:	add    BYTE PTR [ebp+0x3d],dl
  40b4eb:	mov    eax,0xe2c7f5a3
  40b4f0:	sub    BYTE PTR [bp+si],cl
  40b4f3:	ss inc edx
  40b4f5:	test   eax,0x8ecf41b9
  40b4fa:	pop    ss
  40b4fb:	scas   al,BYTE PTR es:[edi]
  40b4fc:	add    bh,BYTE PTR [ecx+0x61f6641e]
  40b502:	leave  
  40b503:	or     ch,bl
  40b505:	call   0xb3cc5643
  40b50a:	push   esi
  40b50b:	daa    
  40b50c:	jno    0x40b4a4
  40b50e:	lea    ebx,[edx+0x51636da3]
  40b514:	ja     0x40b568
  40b516:	retf   0x8eb
  40b519:	and    esp,ecx
  40b51b:	and    dh,BYTE PTR [edi]
  40b51d:	addr16 xchg ebx,eax
  40b51f:	fcomi  st,st(7)
  40b521:	dec    ebx
  40b522:	pushf  
  40b523:	push   esp
  40b524:	call   0x8912a3c5
  40b529:	neg    BYTE PTR [ebp-0x44]
  40b52c:	jmp    0x40b4d8
  40b52e:	sub    ebx,DWORD PTR [eax-0x1a]
  40b531:	or     cl,BYTE PTR [ebp+0x61]
  40b534:	push   esi
  40b535:	adc    al,BYTE PTR [edi+0x14]
  40b538:	sbb    ebx,esp
  40b53a:	lods   al,BYTE PTR ds:[esi]
  40b53b:	ret    0x33d9
  40b53e:	push   esp
  40b53f:	sbb    dh,0x2
  40b542:	repz aaa 
  40b544:	or     ah,bl
  40b546:	(bad)  
  40b548:	mov    ebx,0x997e5e47
  40b54d:	sahf   
  40b54e:	das    
  40b54f:	xchg   ebx,eax
  40b550:	outs   dx,BYTE PTR ds:[esi]
  40b551:	or     al,0x81
  40b553:	xchg   esi,eax
  40b554:	jb     0x40b570
  40b556:	nop
  40b557:	imul   esi,esi,0x8d870edb
  40b55d:	dec    ebp
  40b55e:	pop    eax
  40b55f:	out    dx,al
  40b560:	mov    bh,0x36
  40b562:	lahf   
  40b563:	push   edi
  40b564:	(bad)  
  40b565:	out    dx,eax
  40b566:	xchg   ecx,eax
  40b567:	fdivp  st(1),st
  40b569:	in     eax,dx
  40b56a:	sbb    eax,0xd848d91b
  40b56f:	repz push es
  40b571:	xchg   esi,eax
  40b572:	fwait
  40b573:	or     dh,BYTE PTR [ecx]
  40b575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b576:	stos   DWORD PTR es:[edi],eax
  40b577:	jae    0x40b503
  40b579:	fbstp  TBYTE PTR [edx-0x16]
  40b57c:	cli    
  40b57d:	push   0x2f
  40b57f:	mov    ebx,0x4185fff2
  40b584:	dec    ebx
  40b585:	ret    
  40b586:	(bad)  
  40b588:	(bad)  [edx+eax*8]
  40b58b:	pop    ds
  40b58c:	loope  0x40b5f9
  40b58e:	sbb    eax,0xfd71ec38
  40b593:	int3   
  40b594:	and    ecx,DWORD PTR [eax]
  40b596:	in     al,dx
  40b597:	or     BYTE PTR [edi],0x13
  40b59a:	mov    ebp,0x2e2e3194
  40b59f:	push   es
  40b5a0:	sbb    ch,BYTE PTR [esp+ebp*4]
  40b5a3:	push   esi
  40b5a4:	inc    esp
  40b5a5:	popf   
  40b5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a7:	xlat   BYTE PTR ds:[ebx]
  40b5a8:	fs mov dl,0xd6
  40b5ab:	pop    esi
  40b5ac:	(bad)  [eax+edi*4+0xfb6a778]
  40b5b3:	add    DWORD PTR ds:[ebx+0x2ba8a3a9],edx
  40b5ba:	int    0x14
  40b5bc:	repnz aaa 
  40b5be:	outs   dx,BYTE PTR ds:[esi]
  40b5bf:	xchg   ecx,eax
  40b5c0:	jae    0x40b5dc
  40b5c2:	(bad)  [ecx-0x3d]
  40b5c5:	xchg   ecx,eax
  40b5c6:	retf   0x4791
  40b5c9:	inc    ebx
  40b5ca:	test   DWORD PTR [esi-0x1ab3b17],0x2304e014
  40b5d4:	loopne 0x40b613
  40b5d6:	shl    DWORD PTR [ebp-0x922c3a],cl
  40b5dc:	cmc    
  40b5dd:	sar    DWORD PTR [ecx-0x53],cl
  40b5e0:	pop    esp
  40b5e1:	mov    eax,DWORD PTR [edx+0x1e3cb585]
  40b5e7:	xchg   esi,eax
  40b5e8:	cmp    BYTE PTR [eax-0x2d218364],ah
  40b5ee:	cli    
  40b5ef:	inc    ebx
  40b5f0:	mov    edi,0x22e4b9b4
  40b5f5:	es stos BYTE PTR es:[edi],al
  40b5f7:	or     bh,ch
  40b5f9:	mov    ebp,0xb237aba5
  40b5fe:	mov    al,ds:0x3bafbbba
  40b603:	adc    eax,0x66e2daa0
  40b608:	or     al,0xe0
  40b60a:	mov    cl,0x8f
  40b60c:	cld    
  40b60d:	aad    0x70
  40b60f:	push   ds
  40b610:	mov    esp,DWORD PTR [esi+edx*8-0x25]
  40b614:	sbb    bl,BYTE PTR [esi+esi*8-0x1e6f8797]
  40b61b:	dec    ecx
  40b61c:	or     ah,dl
  40b61e:	cli    
  40b61f:	jo     0x40b626
  40b621:	je     0x40b669
  40b623:	nop
  40b624:	pop    esp
  40b625:	xor    BYTE PTR [esi-0x3c],bh
  40b628:	xor    DWORD PTR [edx],0xc10b168b
  40b62e:	adc    bl,dl
  40b630:	jle    0x40b5c5
  40b632:	add    dl,cl
  40b634:	jmp    0x40b6a2
  40b636:	mov    bl,0xa9
  40b638:	out    dx,eax
  40b639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b63a:	es push ebp
  40b63c:	hlt    
  40b63d:	cmp    DWORD PTR [ebx-0x3418f7bb],esi
  40b643:	adc    bl,BYTE PTR [ebx]
  40b645:	xor    eax,0x85e2c7f8
  40b64a:	add    ebp,DWORD PTR [ebx]
  40b64c:	xlat   BYTE PTR ds:[ebx]
  40b64d:	dec    ebp
  40b64e:	sub    al,0x96
  40b650:	test   al,bh
  40b652:	push   ss
  40b653:	mov    esi,0xa567b9d0
  40b658:	pop    edx
  40b659:	mov    edx,ebp
  40b65b:	mov    bh,0xba
  40b65d:	fist   DWORD PTR [esp+esi*2+0x5e]
  40b661:	loopne 0x40b5fb
  40b663:	nop
  40b664:	or     ah,dh
  40b666:	xchg   ebx,eax
  40b667:	nop
  40b668:	jp     0x40b5ee
  40b66a:	pop    esi
  40b66b:	aaa    
  40b66c:	test   eax,0xfae253b0
  40b671:	xchg   ebp,eax
  40b672:	or     ecx,DWORD PTR [edx+0x7200a0e4]
  40b678:	cmc    
  40b679:	xchg   edi,eax
  40b67a:	cmp    DWORD PTR [edi-0x18],esp
  40b67d:	jl     0x40b665
  40b67f:	jne    0x40b60e
  40b681:	iret   
  40b682:	sbb    al,BYTE PTR [eax+0x16]
  40b685:	sub    esp,0xffffffa0
  40b688:	sti    
  40b689:	cmp    edi,esi
  40b68b:	dec    eax
  40b68c:	(bad)  
  40b68d:	fcom   QWORD PTR [ebx-0xba29e89]
  40b693:	xchg   esp,eax
  40b694:	adc    al,bh
  40b696:	push   ebp
  40b697:	adc    eax,esi
  40b699:	fdivrp st(1),st
  40b69b:	dec    ecx
  40b69c:	sahf   
  40b69d:	in     eax,dx
  40b69e:	adc    edx,eax
  40b6a0:	stos   BYTE PTR es:[edi],al
  40b6a1:	pop    eax
  40b6a2:	sti    
  40b6a3:	sbb    edi,DWORD PTR [edx+0x1]
  40b6a6:	mov    ?,WORD PTR [ebp-0x25]
  40b6a9:	xor    BYTE PTR [edx+0x6deac283],0x4e
  40b6b0:	enter  0x1d19,0x61
  40b6b4:	(bad)  
  40b6b5:	mov    edx,0x7da7096f
  40b6ba:	mov    bh,0xab
  40b6bc:	ja     0x40b68c
  40b6be:	(bad)  
  40b6bf:	cmp    BYTE PTR [esi-0x48],dh
  40b6c2:	enter  0x3968,0x4e
  40b6c6:	stos   DWORD PTR es:[edi],eax
  40b6c7:	xor    eax,0xe5b2df8a
  40b6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cd:	inc    ecx
  40b6ce:	mov    esp,0x8f2010a0
  40b6d3:	loop   0x40b6be
  40b6d5:	cmp    eax,0x6be64935
  40b6da:	(bad)  
  40b6db:	dec    DWORD PTR [esi-0x5d]
  40b6de:	jl     0x40b752
  40b6e0:	xlat   BYTE PTR ds:[ebx]
  40b6e1:	sbb    eax,0xb9b27d40
  40b6e6:	es mov ebx,0x4c8fed8a
  40b6ec:	add    al,0x76
  40b6ee:	mov    bh,0x96
  40b6f0:	sub    eax,0xe826ff2d
  40b6f5:	in     eax,dx
  40b6f6:	sub    BYTE PTR [ecx-0x3c5fd1f4],al
  40b6fc:	sar    ebp,cl
  40b6fe:	in     al,dx
  40b6ff:	cmp    DWORD PTR [esi],edx
  40b701:	xchg   edi,eax
  40b702:	mov    dh,0x18
  40b704:	add    ebp,edi
  40b706:	and    ebx,DWORD PTR [eax-0x37]
  40b709:	pushf  
  40b70a:	pop    edx
  40b70b:	adc    ebx,DWORD PTR [edx+0x5dc728cd]
  40b711:	sbb    al,BYTE PTR [eax-0x68659014]
  40b717:	icebp  
  40b718:	pop    ds
  40b719:	xchg   edi,eax
  40b71a:	ret    
  40b71b:	addr16 out 0xe5,eax
  40b71e:	cmp    al,0x49
  40b720:	push   edx
  40b721:	jl     0x40b736
  40b723:	mov    ecx,ebx
  40b725:	aam    0xf8
  40b727:	test   al,0x3c
  40b729:	add    BYTE PTR [ebp-0x2d],ch
  40b72c:	jo     0x40b715
  40b72e:	push   ds
  40b72f:	xor    ch,dh
  40b731:	mov    edi,0x4711d3a9
  40b736:	inc    ebx
  40b737:	pop    edx
  40b738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b739:	scas   al,BYTE PTR es:[edi]
  40b73a:	into   
  40b73b:	inc    esp
  40b73c:	aas    
  40b73d:	sub    DWORD PTR [ebx-0x64],eax
  40b740:	jmp    0x7aeddd9a
  40b745:	jns    0x40b6fb
  40b747:	pop    eax
  40b748:	gs retf 0xa336
  40b74c:	mov    al,ds:0x51bc5d2a
  40b751:	xchg   esi,eax
  40b752:	adc    al,0x11
  40b754:	sahf   
  40b755:	adc    edx,DWORD PTR [ebx-0x1a91f7b7]
  40b75b:	cmc    
  40b75c:	ret    0xac07
  40b75f:	mov    BYTE PTR [eax-0x6670590c],cl
  40b765:	pop    eax
  40b766:	xor    BYTE PTR [ebp-0x7edf3ea1],dl
  40b76c:	iret   
  40b76d:	xor    bh,0xbd
  40b770:	in     al,dx
  40b771:	mov    esi,0x65e7c7f8
  40b776:	pop    eax
  40b777:	shr    DWORD PTR [eax],1
  40b779:	ins    BYTE PTR es:[edi],dx
  40b77a:	mov    dl,0x75
  40b77c:	inc    edi
  40b77d:	in     al,dx
  40b77e:	mov    ebx,0x25804864
  40b783:	dec    edx
  40b784:	jbe    0x40b73a
  40b786:	js     0x40b744
  40b788:	leave  
  40b789:	push   edx
  40b78a:	retf   0x70d
  40b78d:	xor    ecx,DWORD PTR [eax+ecx*8-0x6f]
  40b791:	ficom  DWORD PTR [esi-0x1c]
  40b794:	xor    bl,al
  40b796:	jae    0x40b740
  40b798:	mov    al,0xcd
  40b79a:	xlat   BYTE PTR es:[ebx]
  40b79c:	adc    DWORD PTR [ebx+0x476dd6c4],0x2c
  40b7a3:	out    dx,eax
  40b7a4:	pop    edi
  40b7a5:	iret   
  40b7a6:	iret   
  40b7a7:	jg     0x40b783
  40b7a9:	push   ecx
  40b7aa:	pusha  
  40b7ab:	xor    eax,0xd99cee01
  40b7b0:	test   edi,esp
  40b7b2:	pusha  
  40b7b3:	repnz cmc 
  40b7b5:	rol    DWORD PTR [esp+eax*4+0x9],0x4b
  40b7ba:	nop
  40b7bb:	mov    ds:0xe144297e,eax
  40b7c0:	stc    
  40b7c1:	mov    eax,0x13682bc8
  40b7c6:	pop    edi
  40b7c7:	lds    ebp,FWORD PTR [esi]
  40b7c9:	test   al,0x17
  40b7cb:	add    bx,WORD PTR [esi+0x421313ed]
  40b7d2:	hlt    
  40b7d3:	mov    ch,0x98
  40b7d5:	gs das 
  40b7d7:	stos   BYTE PTR es:[edi],al
  40b7d8:	cwde   
  40b7d9:	sar    BYTE PTR [eax-0x2105f99],cl
  40b7df:	inc    ecx
  40b7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e1:	loopne 0x40b829
  40b7e3:	dec    edi
  40b7e4:	cwde   
  40b7e5:	mov    ecx,0x6830206e
  40b7ea:	push   ebp
  40b7eb:	test   DWORD PTR [ebx+0x1edf9f92],ecx
  40b7f1:	mov    ebp,0x3892b0df
  40b7f6:	xor    cl,BYTE PTR [ebp-0x16]
  40b7f9:	dec    eax
  40b7fa:	dec    ecx
  40b7fb:	sbb    al,0x3d
  40b7fd:	xchg   ecx,eax
  40b7fe:	pop    ebx
  40b7ff:	and    dh,BYTE PTR [ecx+edi*2-0x6b0a4a38]
  40b806:	fisubr DWORD PTR [edx+0x54eb4669]
  40b80c:	or     DWORD PTR [edi],0xffffff87
  40b80f:	mov    DWORD PTR [ebx],esi
  40b811:	sti    
  40b812:	and    eax,0x55624e0a
  40b817:	ret    
  40b818:	and    DWORD PTR [esi+0x438f379],eax
  40b81e:	and    al,0xba
  40b820:	push   0xffffff8e
  40b822:	dec    edx
  40b823:	add    edi,DWORD PTR [ebp-0x6186bd02]
  40b829:	push   esp
  40b82a:	cmp    al,0xb8
  40b82c:	xchg   edi,eax
  40b82d:	jmp    0x3a4ba242
  40b832:	in     al,dx
  40b833:	aaa    
  40b834:	sbb    eax,DWORD PTR [ebx-0x11dc5532]
  40b83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b83b:	gs mov al,0xc2
  40b83f:	adc    dh,BYTE PTR [eax+0x10]
  40b842:	frstor [esi]
  40b844:	xchg   ecx,eax
  40b845:	xor    DWORD PTR gs:[ecx-0x4f],esi
  40b849:	stos   BYTE PTR es:[edi],al
  40b84a:	push   ebx
  40b84b:	jp     0x40b7d2
  40b84d:	jle    0x40b825
  40b84f:	mov    esi,0x939c82c6
  40b854:	repz imul esp,eax,0xffffff84
  40b858:	(bad)  
  40b859:	leave  
  40b85a:	(bad)  
  40b85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b85c:	dec    esi
  40b85d:	mov    ch,0xe5
  40b85f:	mov    esp,0x441a9668
  40b864:	adc    bh,dh
  40b866:	xlat   BYTE PTR ds:[ebx]
  40b867:	dec    ecx
  40b868:	data16 fadd st(7),st
  40b86b:	aas    
  40b86c:	push   edi
  40b86d:	inc    ebx
  40b86e:	ret    
  40b86f:	sub    esp,edi
  40b871:	mov    esp,ecx
  40b873:	mov    esi,0xa82ebb43
  40b878:	punpcklwd mm1,DWORD PTR [ebx-0x266cebee]
  40b87f:	jbe    0x40b8d1
  40b881:	push   edx
  40b882:	push   ss
  40b883:	into   
  40b884:	push   0x60cc92a6
  40b889:	call   0xa012:0xad7d1ff9
  40b890:	fdivrp st(4),st
  40b892:	frstor [esi]
  40b894:	daa    
  40b895:	shl    BYTE PTR [ebp-0x3c],0xe6
  40b899:	sbb    ah,ch
  40b89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b89c:	ret    0xb4b7
  40b89f:	push   ds
  40b8a0:	sub    BYTE PTR [ecx],cl
  40b8a2:	mov    ebx,?
  40b8a4:	fs idiv bh
  40b8a7:	in     al,dx
  40b8a8:	fs push edi
  40b8aa:	retf   
  40b8ab:	push   esp
  40b8ac:	popf   
  40b8ad:	fsub   QWORD PTR [eax+0xef469ee]
  40b8b3:	lods   eax,DWORD PTR ds:[esi]
  40b8b4:	cld    
  40b8b5:	nop
  40b8b6:	dec    eax
  40b8b7:	(bad)  
  40b8b8:	(bad)  
  40b8ba:	cld    
  40b8bb:	jmp    0x9ee3:0x654a2d2a
  40b8c2:	outs   dx,DWORD PTR fs:[esi]
  40b8c4:	mov    bh,0x8b
  40b8c6:	xchg   edx,eax
  40b8c7:	js     0x40b89c
  40b8c9:	add    DWORD PTR [ecx+0x40],esp
  40b8cc:	aas    
  40b8cd:	aad    0x45
  40b8cf:	in     eax,dx
  40b8d0:	shl    esp,0x27
  40b8d3:	or     ch,BYTE PTR [edi-0x4679fd63]
  40b8d9:	mov    ss,WORD PTR [eax+eax*2-0x22]
  40b8dd:	xor    esp,DWORD PTR [ecx-0x66a55787]
  40b8e3:	xchg   ebp,eax
  40b8e4:	pop    esi
  40b8e5:	jecxz  0x40b916
  40b8e7:	es xor al,0xa3
  40b8eb:	lgs    eax,FWORD PTR es:[ecx]
  40b8ef:	add    BYTE PTR [ebx-0x6a1bccc8],cl
  40b8f5:	mov    WORD PTR [esi+0x68],ds
  40b8f8:	jecxz  0x40b8b2
  40b8fa:	addr16 xchg ecx,eax
  40b8fc:	jmp    0x6d726704
  40b901:	test   al,0x3b
  40b903:	cmp    esp,DWORD PTR [ebp-0x26b5a970]
  40b909:	hlt    
  40b90a:	dec    esp
  40b90b:	xchg   ebp,eax
  40b90c:	sub    al,0x93
  40b90e:	push   ebp
  40b90f:	(bad)
  40b913:	pop    eax
  40b914:	pushf  
  40b915:	add    ch,BYTE PTR [ebx+0x34]
  40b918:	jp     0x40b950
  40b91a:	mov    eax,0x531db428
  40b91f:	inc    ebx
  40b920:	jmp    0x6d9b:0x9b3399f3
  40b927:	in     al,dx
  40b928:	mov    esp,0x1ab6268a
  40b92d:	fsubr  st,st(2)
  40b92f:	push   ebx
  40b930:	rcl    DWORD PTR [edi+0x821800a],1
  40b936:	nop
  40b937:	fstp   DWORD PTR [edi+0x4bd58340]
  40b93d:	xor    DWORD PTR [ebx-0x40],edx
  40b940:	imul   edx,DWORD PTR ds:0x15be7511,0xb2a229a9
  40b94a:	mov    bh,0xcb
  40b94c:	sbb    DWORD PTR [ebx-0x473e65b1],esp
  40b952:	mov    eax,ebp
  40b954:	push   es
  40b955:	and    bl,BYTE PTR [esi-0x23f99ba2]
  40b95b:	push   esp
  40b95c:	(bad)  
  40b95d:	icebp  
  40b95e:	outs   dx,BYTE PTR ds:[esi]
  40b95f:	jmp    0xc52f:0xf4f76775
  40b966:	pop    edi
  40b967:	outs   dx,BYTE PTR ds:[esi]
  40b968:	stc    
  40b969:	mov    ah,0x6f
  40b96b:	dec    ecx
  40b96c:	loopne 0x40b92a
  40b96e:	jg     0x40b9c6
  40b970:	ins    BYTE PTR es:[edi],dx
  40b971:	sbb    edi,DWORD PTR [edx]
  40b973:	es iret 
  40b975:	xor    DWORD PTR [esi],ebp
  40b977:	xchg   ebp,eax
  40b978:	loope  0x40b97d
  40b97a:	jb     0x40b90a
  40b97c:	pop    ebx
  40b97d:	and    edi,edi
  40b97f:	stos   BYTE PTR es:[edi],al
  40b980:	aas    
  40b981:	cdq    
  40b982:	sub    BYTE PTR [esi-0x79],ch
  40b985:	xor    ch,BYTE PTR [esi+0x33]
  40b988:	xchg   ecx,eax
  40b989:	push   eax
  40b98a:	ins    BYTE PTR es:[edi],dx
  40b98b:	sbb    al,0x88
  40b98d:	mov    BYTE PTR ds:0x408cb4db,0x50
  40b994:	jne    0x40b91f
  40b996:	xchg   esi,eax
  40b997:	add    eax,0x57629e8d
  40b99c:	fcmovu st,st(4)
  40b99e:	nop
  40b99f:	add    dh,cl
  40b9a1:	fidivr DWORD PTR [ecx-0x14ab51b3]
  40b9a7:	call   0xeba:0xef8c57b6
  40b9ae:	int3   
  40b9af:	mov    cl,0xfc
  40b9b1:	cmp    BYTE PTR [ebx-0x4046c230],dh
  40b9b7:	xor    al,0x7e
  40b9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ba:	jl     0x40b9ec
  40b9bc:	in     eax,dx
  40b9bd:	ja     0x40b997
  40b9bf:	(bad)  
  40b9c0:	fsubr  st(7),st
  40b9c2:	test   BYTE PTR [ecx+edi*4-0x1f361657],al
  40b9c9:	or     eax,0x34e5f279
  40b9ce:	inc    edx
  40b9cf:	mov    eax,ds:0x82b3d9da
  40b9d4:	fimul  WORD PTR [ebp+0x54889e15]
  40b9da:	bound  edx,QWORD PTR [esi+0x7ac37f82]
  40b9e0:	(bad)  
  40b9e1:	into   
  40b9e2:	pop    ss
  40b9e3:	aaa    
  40b9e4:	aas    
  40b9e5:	cmp    edi,DWORD PTR [ecx+0x0]
  40b9e8:	jp     0x40b997
  40b9ea:	adc    BYTE PTR [ecx-0x4a74773f],bl
  40b9f0:	dec    ebx
  40b9f1:	inc    ebp
  40b9f2:	repz jns 0x40b9b8
  40b9f5:	in     al,dx
  40b9f6:	mov    ch,0x51
  40b9f8:	or     BYTE PTR [ebx+0x585e95cf],ah
  40b9fe:	imul   esi,DWORD PTR [edi-0x1d],0xffffffe2
  40ba02:	push   ebx
  40ba03:	repnz fmul DWORD PTR [edi]
  40ba06:	inc    eax
  40ba07:	aas    
  40ba08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba09:	xchg   DWORD PTR [eax+eiz*1],ebp
  40ba0c:	inc    edx
  40ba0d:	xchg   cl,al
  40ba0f:	jp     0x40ba64
  40ba11:	pushf  
  40ba12:	adc    al,0xc7
  40ba14:	mov    bl,BYTE PTR [eax*4-0x658beb82]
  40ba1b:	pop    eax
  40ba1c:	retf   
  40ba1d:	rcr    esi,0x95
  40ba20:	inc    ebx
  40ba21:	cmp    cl,0x96
  40ba24:	and    al,0x81
  40ba26:	fwait
  40ba27:	add    BYTE PTR [ecx],al
  40ba29:	xor    eax,0xd090830
  40ba2e:	addr16 pop ecx
  40ba30:	ins    BYTE PTR es:[edi],dx
  40ba31:	inc    esi
  40ba32:	popa   
  40ba33:	add    edi,esi
  40ba35:	or     esp,esi
  40ba37:	pusha  
  40ba38:	jmp    0x40ba71
  40ba3a:	and    ecx,DWORD PTR [ebp-0x1f]
  40ba3d:	lods   al,BYTE PTR es:[esi]
  40ba3f:	jbe    0x40ba12
  40ba41:	mov    bh,0xab
  40ba43:	sub    dl,ah
  40ba45:	pop    edi
  40ba46:	add    ebp,0x5
  40ba49:	adc    BYTE PTR [ebp-0x59],al
  40ba4c:	cld    
  40ba4d:	add    BYTE PTR [edi-0x1a],al
  40ba50:	sbb    eax,0x343c2359
  40ba55:	mov    ebx,0x12927b94
  40ba5a:	loope  0x40ba90
  40ba5c:	add    al,0xb3
  40ba5e:	pop    esi
  40ba5f:	inc    edi
  40ba60:	repnz lds ebx,FWORD PTR [eax+0x77890bf1]
  40ba67:	inc    edi
  40ba68:	add    eax,0x9649bd19
  40ba6d:	push   esi
  40ba6e:	loop   0x40baaa
  40ba70:	aaa    
  40ba71:	cmp    al,0xf4
  40ba73:	jo     0x40bae1
  40ba75:	jb     0x40ba70
  40ba77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba78:	add    dh,BYTE PTR [eax+0x72]
  40ba7b:	pop    ebx
  40ba7c:	push   es
  40ba7d:	fnstcw WORD PTR [ecx]
  40ba7f:	cld    
  40ba80:	adc    al,0x3
  40ba82:	inc    ecx
  40ba83:	cmp    eax,0x2cfeae7e
  40ba88:	call   FWORD PTR [esi+0x8]
  40ba8b:	shl    ecx,0x3b
  40ba8e:	aad    0xa2
  40ba90:	xchg   esp,eax
  40ba91:	inc    ebx
  40ba92:	adc    BYTE PTR [ecx+0x11],bl
  40ba95:	mov    esp,gs
  40ba97:	add    eax,0xde962b9c
  40ba9c:	push   edi
  40ba9d:	inc    esp
  40ba9e:	add    al,0x10
  40baa0:	dec    esi
  40baa1:	dec    ebx
  40baa2:	jnp    0x40ba7e
  40baa4:	mov    WORD PTR [ebp+0x3f],ds
  40baa7:	icebp  
  40baa8:	jecxz  0x40ba3e
  40baaa:	adc    BYTE PTR [ecx+0x51c5af28],ch
  40bab0:	ins    DWORD PTR es:[edi],dx
  40bab1:	and    eax,0x980906e6
  40bab6:	add    al,0x9
  40bab8:	dec    ebx
  40bab9:	sqrtps xmm6,XMMWORD PTR [esi-0x7b]
  40babd:	test   DWORD PTR [esi-0xa],0x49504943
  40bac4:	mov    edx,?
  40bac6:	xchg   edi,eax
  40bac7:	mov    dl,0x31
  40baca:	lea    ecx,[ecx+0x7d6aaefe]
  40bad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad1:	add    BYTE PTR [ebx+0x425b931d],0x7e
  40bad8:	push   0x778fc8d2
  40badd:	(bad)  
  40bade:	out    dx,al
  40badf:	push   edx
  40bae0:	jmp    0x40bb04
  40bae2:	mov    DWORD PTR [esi],ecx
  40bae4:	ror    DWORD PTR [esi+0x5c],1
  40bae7:	pop    esi
  40bae8:	jecxz  0x40ba97
  40baea:	and    ecx,DWORD PTR [edi-0xb7dabf5]
  40baf0:	std    
  40baf1:	mov    ebx,0x9581a2c7
  40baf6:	(bad)  
  40baf7:	adc    ah,BYTE PTR [esi+0x51]
  40bafa:	in     eax,0x1b
  40bafc:	addr16 and eax,0x62f08bb0
  40bb02:	sub    DWORD PTR [esi],edx
  40bb04:	fld    TBYTE PTR [esi+0x50]
  40bb07:	stos   BYTE PTR es:[edi],al
  40bb08:	push   0xffffffb7
  40bb0a:	sub    ebp,DWORD PTR [edi]
  40bb0c:	fld    DWORD PTR [ebx+eax*4]
  40bb0f:	fbld   TBYTE PTR [eax]
  40bb11:	vpcmpeqb xmm6,xmm3,XMMWORD PTR [esi-0x1b]
  40bb16:	cdq    
  40bb17:	sub    DWORD PTR [ebp-0x12ba955],edi
  40bb1d:	xchg   ebx,eax
  40bb1e:	mov    ch,0xac
  40bb20:	out    0xd3,eax
  40bb22:	jmp    0x7cec:0x1c10b0cd
  40bb29:	pop    edx
  40bb2a:	xor    al,0x76
  40bb2c:	lea    ebx,[edi-0x5c4caf38]
  40bb32:	jmp    esp
  40bb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb35:	lods   eax,DWORD PTR ds:[esi]
  40bb36:	mov    ds:0x646b3880,eax
  40bb3b:	sbb    ebx,DWORD PTR [esp+edi*8+0x6f]
  40bb3f:	out    dx,al
  40bb40:	mov    dl,0x66
  40bb42:	mov    bh,0x3b
  40bb44:	neg    BYTE PTR [edi+0x21]
  40bb47:	jge    0x40bb6a
  40bb49:	jmp    0x1100:0x50ec1bf3
  40bb50:	lahf   
  40bb51:	mul    bh
  40bb53:	mov    bl,0x2f
  40bb55:	retf   0x8bb1
  40bb58:	pop    ds
  40bb59:	cmp    al,0xc1
  40bb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb5c:	in     eax,0x73
  40bb5e:	jl     0x40bb61
  40bb60:	mov    esp,0xdfcae24e
  40bb65:	push   edx
  40bb66:	loopne 0x40bbe6
  40bb68:	adc    ebp,DWORD PTR [eax+0x6f1b31fa]
  40bb6e:	push   ds
  40bb6f:	push   edx
  40bb70:	call   0x52762ee
  40bb75:	sbb    ch,ch
  40bb77:	stc    
  40bb78:	shr    DWORD PTR cs:[esi],0x46
  40bb7c:	not    DWORD PTR [edx+eax*4]
  40bb7f:	cmp    bh,BYTE PTR [esi]
  40bb81:	fist   DWORD PTR [edx+0x79]
  40bb84:	xor    al,0x54
  40bb86:	pop    eax
  40bb87:	or     DWORD PTR [edi-0x40b1d162],edx
  40bb8d:	mov    edi,?
  40bb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb90:	push   0x1c
  40bb92:	pop    ebx
  40bb93:	pop    edx
  40bb94:	cmp    DWORD PTR [esi+0x54],0xffffff87
  40bb98:	adc    bl,BYTE PTR ds:0x64c3555f
  40bb9e:	sahf   
  40bb9f:	xor    ah,BYTE PTR [eax-0x716a98a3]
  40bba5:	pextrw eax,(bad),0xc5
  40bba7:	sub    BYTE PTR [esi+0x6ec85bdd],0x5a
  40bbae:	push   edx
  40bbaf:	cmp    BYTE PTR [ebp+0x71],ch
  40bbb2:	jmp    0x40bb91
  40bbb4:	rol    BYTE PTR [esi],cl
  40bbb6:	inc    ecx
  40bbb7:	adc    DWORD PTR [eax],0xa356e30f
  40bbbd:	ins    DWORD PTR es:[edi],dx
  40bbbe:	add    al,0x10
  40bbc0:	push   ds
  40bbc1:	loop   0x40bc2e
  40bbc3:	ss inc eax
  40bbc5:	jmp    0x66097349
  40bbca:	xor    al,0x9f
  40bbcc:	jg     0x40bb81
  40bbce:	fiadd  DWORD PTR [edx-0x3f]
  40bbd1:	fwait
  40bbd2:	mov    ebx,0x8600e120
  40bbd7:	mov    ds:0x38a2b858,al
  40bbdc:	stc    
  40bbdd:	fnstenv [edx+0x42]
  40bbe0:	mov    DWORD PTR [esi+0x16],ebx
  40bbe3:	test   al,0x91
  40bbe5:	mov    ah,0xe2
  40bbe7:	push   eax
  40bbe8:	icebp  
  40bbe9:	pop    ecx
  40bbea:	jmp    0x40bb74
  40bbec:	rcr    DWORD PTR [ecx],1
  40bbee:	mov    ch,0x4e
  40bbf0:	cmp    al,0xa1
  40bbf2:	mov    ds:0xd83d459b,eax
  40bbf7:	enter  0xf89a,0xd5
  40bbfb:	js     0x40bc56
  40bbfd:	ret    0xc9bc
  40bc00:	adc    DWORD PTR [ecx+0x188d4b9c],eax
  40bc06:	mov    esi,0x4b516f95
  40bc0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0c:	push   esp
  40bc0d:	push   ecx
  40bc0e:	xchg   ebp,eax
  40bc0f:	outs   dx,DWORD PTR ds:[esi]
  40bc10:	gs add al,0x23
  40bc13:	sbb    BYTE PTR [eax-0x34],bl
  40bc16:	ss jb  0x40bc5a
  40bc19:	jne    0x40bc97
  40bc1b:	xor    al,0x97
  40bc1d:	lds    edi,FWORD PTR gs:[edx]
  40bc20:	inc    esp
  40bc21:	jge    0x40bc15
  40bc23:	shl    BYTE PTR ds:0x96489e8d,1
  40bc29:	push   ebx
  40bc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc2b:	sar    bh,0x74
  40bc2e:	xchg   ebp,eax
  40bc2f:	jae    0x40bc7d
  40bc31:	fisub  WORD PTR [ebp+0x28]
  40bc34:	push   ebp
  40bc35:	popf   
  40bc36:	fsubr  QWORD PTR [esp+eax*4-0xa9d5d0e]
  40bc3d:	xor    bl,BYTE PTR [ecx]
  40bc3f:	clc    
  40bc40:	mov    cl,0x77
  40bc42:	shl    BYTE PTR [ebx-0x6b],cl
  40bc45:	push   esp
  40bc46:	and    dh,dh
  40bc48:	sub    eax,0xf108064c
  40bc4d:	out    0xc0,eax
  40bc4f:	popf   
  40bc50:	mov    ebx,0xeb849b26
  40bc55:	fs push es
  40bc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc58:	jne    0x40bc23
  40bc5a:	sbb    eax,0x88a5fc71
  40bc5f:	push   edx
  40bc60:	inc    esp
  40bc61:	sbb    eax,0x62685a7d
  40bc66:	aaa    
  40bc67:	dec    esp
  40bc68:	pop    ecx
  40bc69:	daa    
  40bc6a:	push   es
  40bc6b:	test   eax,0x8cce73d3
  40bc70:	inc    esp
  40bc71:	std    
  40bc72:	xor    DWORD PTR [ebx-0x76],edi
  40bc75:	cli    
  40bc76:	cld    
  40bc77:	daa    
  40bc78:	and    BYTE PTR [edi+0x6e16a65e],bh
  40bc7e:	(bad)  
  40bc80:	aam    0xb4
  40bc82:	lods   eax,DWORD PTR ds:[esi]
  40bc83:	dec    ecx
  40bc84:	lea    eax,[edi+0xa48b0f]
  40bc8a:	aas    
  40bc8b:	inc    ebp
  40bc8c:	ins    BYTE PTR es:[edi],dx
  40bc8d:	test   al,0xe
  40bc8f:	or     DWORD PTR [edx-0x40b53c7],ecx
  40bc95:	mov    dh,0x4c
  40bc97:	xor    cl,BYTE PTR [edi-0x4167d67b]
  40bc9d:	aas    
  40bc9e:	jg     0x40bcf8
  40bca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca1:	inc    esp
  40bca2:	inc    esp
  40bca3:	inc    esp
  40bca4:	call   0x5b44:0x35c8b187
  40bcab:	inc    ebp
  40bcac:	popa   
  40bcad:	loope  0x40bcbc
  40bcaf:	push   ecx
  40bcb0:	jbe    0x40bcd8
  40bcb2:	xchg   esi,eax
  40bcb3:	push   ss
  40bcb4:	sbb    BYTE PTR [ecx],0xca
  40bcb7:	xlat   BYTE PTR ds:[ebx]
  40bcb8:	jl     0x40bc94
  40bcba:	sti    
  40bcbb:	out    0xf6,eax
  40bcbd:	pop    esp
  40bcbe:	add    DWORD PTR [ecx-0x20c5451],ebx
  40bcc4:	ds cmp ecx,DWORD PTR es:[ebx+0x42]
  40bcc9:	mov    dl,0xc0
  40bccb:	mov    dh,0x5a
  40bccd:	ins    DWORD PTR es:[edi],dx
  40bcce:	enter  0x401c,0x99
  40bcd2:	ficom  WORD PTR [ebp+ebx*1+0x36]
  40bcd6:	call   0xfa6a:0xc119db6c
  40bcdd:	fistp  WORD PTR [esi-0x376989f3]
  40bce3:	sub    al,0xe3
  40bce5:	pusha  
  40bce6:	push   es
  40bce7:	loopne 0x40bd09
  40bce9:	sbb    ebp,ecx
  40bceb:	push   ss
  40bcec:	pop    es
  40bced:	cs aas 
  40bcef:	mov    bl,0x8a
  40bcf1:	add    bl,BYTE PTR [ebx]
  40bcf3:	stos   BYTE PTR es:[edi],al
  40bcf4:	sub    esp,edi
  40bcf6:	cmp    esi,DWORD PTR [eax+eax*4-0x5c70dfae]
  40bcfd:	loop   0x40bd4a
  40bcff:	test   DWORD PTR [esi-0xa],edi
  40bd02:	sub    cl,BYTE PTR [edx]
  40bd04:	sub    DWORD PTR [ecx],esp
  40bd06:	loope  0x40bd56
  40bd08:	push   esi
  40bd09:	or     dl,BYTE PTR [ebx+edi*8+0x4b56b0f3]
  40bd10:	sbb    cl,bh
  40bd12:	test   eax,0x84d543d
  40bd17:	mov    dl,0xcd
  40bd19:	push   edx
  40bd1a:	cmp    DWORD PTR [ecx],esi
  40bd1c:	dec    ecx
  40bd1d:	jbe    0x40bccd
  40bd1f:	push   edi
  40bd20:	mov    BYTE PTR [ecx+0x2c],bh
  40bd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd24:	cmp    bl,0x57
  40bd27:	outs   dx,DWORD PTR ds:[esi]
  40bd28:	push   edi
  40bd29:	mov    edi,0x34b2882e
  40bd2e:	push   ds
  40bd2f:	pushf  
  40bd30:	std    
  40bd31:	enter  0xda1,0xd4
  40bd35:	and    bl,BYTE PTR [esi+0x70e0347c]
  40bd3b:	adc    al,0xf
  40bd3d:	jge    0x40bd40
  40bd3f:	hlt    
  40bd40:	xor    BYTE PTR [ebx+0x8044aa7],ch
  40bd46:	xchg   esi,eax
  40bd47:	push   0xffffff8d
  40bd49:	dec    eax
  40bd4a:	mov    ds:0x2e8ad7c1,al
  40bd4f:	js     0x40bda0
  40bd51:	add    eax,0x68480b28
  40bd56:	neg    BYTE PTR [ebx-0x5c]
  40bd59:	stos   BYTE PTR es:[edi],al
  40bd5a:	shr    DWORD PTR [ebx-0x598b3c9],1
  40bd60:	push   eax
  40bd61:	cli    
  40bd62:	inc    edx
  40bd63:	cmp    ch,0xd6
  40bd66:	inc    ebx
  40bd67:	clc    
  40bd68:	dec    esi
  40bd69:	lods   al,BYTE PTR ds:[esi]
  40bd6a:	out    0xbd,al
  40bd6c:	loop   0x40bd5e
  40bd6e:	xor    al,0xa0
  40bd70:	xor    DWORD PTR [ebx+eiz*1-0x5b],edi
  40bd74:	mov    bh,0x52
  40bd76:	icebp  
  40bd77:	push   edi
  40bd78:	daa    
  40bd79:	mov    ds:0x3057aedc,eax
  40bd7e:	mov    ebp,0x18f8bd1b
  40bd83:	test   eax,0xccd466f2
  40bd88:	xchg   esi,eax
  40bd89:	popa   
  40bd8a:	xor    eax,0xb76c0f27
  40bd8f:	mov    DWORD PTR ss:[edi-0x350d9fad],0x16448f01
  40bd9a:	fmul   DWORD PTR [eax]
  40bd9c:	pop    esi
  40bd9d:	mov    dl,0x94
  40bd9f:	mov    al,0x12
  40bda1:	push   edx
  40bda2:	add    BYTE PTR [edx+eiz*2],cl
  40bda5:	adc    DWORD PTR [edx],ebx
  40bda7:	xchg   ecx,eax
  40bda8:	(bad)  
  40bda9:	xlat   BYTE PTR ds:[ebx]
  40bdaa:	in     eax,dx
  40bdab:	jp     0x40bd6e
  40bdad:	(bad)  
  40bdae:	xchg   ebx,eax
  40bdaf:	and    BYTE PTR [eax+ebp*8+0x20],bl
  40bdb3:	or     al,0x2e
  40bdb5:	mov    ds:0x97f5f88b,al
  40bdba:	add    eax,0x11a45f48
  40bdbf:	push   ebp
  40bdc0:	fnstsw WORD PTR [ebp-0x18fb50ab]
  40bdc6:	aad    0x3e
  40bdc8:	sbb    BYTE PTR [edx+0x5337caac],dh
  40bdce:	lock das 
  40bdd0:	dec    ebx
  40bdd1:	je     0x40bdaf
  40bdd3:	pop    ebp
  40bdd4:	mov    ch,0xaa
  40bdd6:	aam    0xf8
  40bdd8:	cmc    
  40bdd9:	sub    DWORD PTR es:[ebx+0x30cc1aba],0xffffff8f
  40bde1:	dec    esp
  40bde2:	cld    
  40bde3:	fimul  DWORD PTR [edi+0x74647f2b]
  40bde9:	stos   DWORD PTR es:[edi],eax
  40bdea:	cmc    
  40bdeb:	lea    esi,[esi+0x29]
  40bdee:	push   ebx
  40bdef:	cmp    bl,BYTE PTR [esp+edi*2]
  40bdf2:	xchg   edi,eax
  40bdf3:	xor    DWORD PTR [edx-0x45],esi
  40bdf6:	ins    DWORD PTR es:[edi],dx
  40bdf7:	pop    ds
  40bdf8:	jo     0x40bda8
  40bdfa:	dec    ebx
  40bdfb:	sahf   
  40bdfc:	mov    ds:0x983071ea,al
  40be01:	sbb    eax,0x69cd817b
  40be06:	test   BYTE PTR [edx+0x1a],bh
  40be09:	sbb    ebp,eax
  40be0b:	arpl   WORD PTR [edi-0x58],ax
  40be0e:	out    0xcb,al
  40be10:	dec    ebp
  40be11:	gs xor eax,0xb9bda092
  40be17:	loopne 0x40bdd1
  40be19:	scas   al,BYTE PTR es:[edi]
  40be1a:	inc    ecx
  40be1b:	pop    edi
  40be1c:	out    0x34,al
  40be1e:	jmp    0x40be25
  40be20:	and    DWORD PTR [ebx+0x7a68c6d],0xffffffbf
  40be27:	popf   
  40be28:	jns    0x40bdd0
  40be2a:	jge    0x40bdcc
  40be2c:	xor    eax,0xfd930b46
  40be31:	pop    eax
  40be32:	mov    eax,ds:0x11e27313
  40be37:	sub    dh,ah
  40be39:	mov    ah,0x79
  40be3b:	stc    
  40be3c:	jl     0x40be73
  40be3e:	mov    ebx,0x24dc2024
  40be43:	push   ds
  40be44:	sub    al,0xd0
  40be46:	or     edx,esi
  40be48:	repnz xor DWORD PTR [ebx+0x3dc0c2d7],0xffffffbf
  40be50:	aad    0xe9
  40be52:	pop    esp
  40be53:	jle    0x40be01
  40be55:	mov    ch,0x51
  40be57:	sbb    eax,0x66dd2ae3
  40be5c:	jae    0x40be77
  40be5e:	mov    ch,0x40
  40be60:	adc    eax,0x4abd1cf7
  40be65:	pop    ss
  40be66:	sub    ebx,DWORD PTR [edx-0xd]
  40be69:	push   cs
  40be6a:	pushf  
  40be6b:	add    eax,0x94c8b9b7
  40be70:	dec    edx
  40be71:	add    DWORD PTR [ebx],esi
  40be73:	add    BYTE PTR [ecx+0x13a57407],0x8d
  40be7a:	loope  0x40befb
  40be7c:	addr16 mov ds:0x422c,eax
  40be80:	sbb    al,0x99
  40be82:	push   ebp
  40be83:	pusha  
  40be84:	repnz mov edi,0x1a5c4e3
  40be8a:	pop    esp
  40be8b:	into   
  40be8c:	clc    
  40be8d:	es push es
  40be8f:	jb     0x40be33
  40be91:	adc    ch,dh
  40be93:	pusha  
  40be94:	adc    eax,0x62b7b9dd
  40be99:	cmp    esp,DWORD PTR [ecx]
  40be9b:	jp     0x40beb6
  40be9d:	mov    eax,0x1d0d3695
  40bea2:	and    eax,0x681560f8
  40bea7:	retf   
  40bea8:	dec    edx
  40bea9:	add    BYTE PTR [edi],cl
  40beab:	mov    ecx,0x5ccab6d
  40beb0:	mov    edi,DWORD PTR [ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	pushf  
  40c013:	push   esp
  40c014:	adc    BYTE PTR [edi-0x2c],dl
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	jp     0x40bfc2
  40c020:	scas   al,BYTE PTR es:[edi]
  40c021:	xchg   esi,eax
  40c022:	lea    edx,[eax+0x7b]
  40c025:	xchg   esi,eax
  40c026:	push   edx
  40c027:	sbb    DWORD PTR [eax],ebp
  40c029:	mov    bh,0xf
  40c02b:	es inc esi
  40c02d:	mov    al,ds:0x65bda464
  40c032:	clc    
  40c033:	and    edi,eax
  40c035:	in     al,0xae
  40c037:	imul   ebx,DWORD PTR [ebx+ebp*8+0x6c20331b],0x979a3702
  40c042:	repnz data16 fimul DWORD PTR [esi-0x4dc5e53d]
  40c04a:	sub    al,ah
  40c04c:	pop    ebx
  40c04d:	cs ss sub eax,0x44594b75
  40c054:	scas   eax,DWORD PTR es:[edi]
  40c055:	mov    dh,0x86
  40c057:	push   esi
  40c058:	jne    0x40c013
  40c05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c05b:	push   0xbd6477b7
  40c060:	sub    BYTE PTR [esi],ch
  40c062:	dec    edx
  40c063:	call   0x2c914713
  40c068:	fld    QWORD PTR [edx]
  40c06a:	(bad)  
  40c06c:	retf   0x9f37
  40c06f:	push   ecx
  40c070:	pop    ds
  40c071:	rol    al,cl
  40c073:	repnz sub DWORD PTR [ecx+ebx*2-0xce15c73],esi
  40c07b:	cwde   
  40c07c:	xor    al,0xae
  40c07e:	add    ecx,DWORD PTR [edi+0x5c]
  40c081:	or     DWORD PTR [eax+ebx*1-0x6],eax
  40c085:	clc    
  40c086:	and    ebp,DWORD PTR [eax-0x39]
  40c089:	rcl    BYTE PTR [ebp-0x6],1
  40c08c:	fstp   QWORD PTR [esi]
  40c08e:	cmp    BYTE PTR [ebp+ebp*4+0x771ab2f0],ch
  40c095:	and    dh,BYTE PTR [esi+0x33]
  40c098:	fs aad 0x79
  40c09b:	mov    esi,0xc03693a7
  40c0a0:	mov    cl,BYTE PTR [eax-0x7f57e3f4]
  40c0a6:	sar    BYTE PTR [edx+0x2794d286],cl
  40c0ac:	js     0x40c032
  40c0ae:	scas   al,BYTE PTR es:[edi]
  40c0af:	jnp    0x40c063
  40c0b1:	sbb    BYTE PTR [eax-0x3984ad37],bh
  40c0b7:	fdivr  st(7),st
  40c0b9:	jne    0x40c0f9
  40c0bb:	pushf  
  40c0bc:	ins    DWORD PTR es:[edi],dx
  40c0bd:	bound  edx,QWORD PTR [ebp+0x59]
  40c0c0:	dec    ebp
  40c0c1:	jne    0x40c049
  40c0c3:	or     al,0xd4
  40c0c5:	scas   al,BYTE PTR es:[edi]
  40c0c6:	cmp    DWORD PTR [esi+0x3af0b65d],0xadb7723
  40c0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d1:	adc    ebp,DWORD PTR [ecx-0x1818f51e]
  40c0d7:	test   edi,esi
  40c0d9:	mov    ?,WORD PTR ds:0x9a286f61
  40c0df:	lods   eax,DWORD PTR ds:[esi]
  40c0e0:	adc    eax,DWORD PTR [ecx+eax*8+0x52]
  40c0e4:	adc    ch,BYTE PTR [ebx-0x4e]
  40c0e7:	xchg   edi,eax
  40c0e8:	loopne 0x40c13b
  40c0ea:	dec    ebp
  40c0eb:	(bad)  
  40c0ed:	push   esp
  40c0ee:	mov    ch,0x2e
  40c0f0:	mov    bl,0xcc
  40c0f2:	sub    eax,esi
  40c0f4:	inc    ebx
  40c0f5:	sahf   
  40c0f6:	sbb    DWORD PTR [edx+0x8],edx
  40c0f9:	les    esp,FWORD PTR [ebx]
  40c0fb:	push   0xd993f913
  40c100:	int    0xb1
  40c102:	xchg   esp,eax
  40c103:	xor    eax,0x6ee80b60
  40c108:	jecxz  0x40c133
  40c10a:	imul   edx,DWORD PTR [edi-0x5129b074],0x4c8e8146
  40c114:	pop    esi
  40c115:	shl    DWORD PTR [edi+0x11],cl
  40c118:	pop    eax
  40c119:	test   al,0xb1
  40c11b:	or     DWORD PTR [eax-0xa],esp
  40c11e:	sbb    ebp,DWORD PTR [ecx+ecx*8+0x78]
  40c122:	test   eax,0x9d8309aa
  40c127:	xchg   ecx,eax
  40c129:	fsubrp st(7),st
  40c12b:	sbb    edi,DWORD PTR [edi]
  40c12d:	arpl   WORD PTR [esi+0x7c436ee8],bx
  40c133:	mov    ch,0x55
  40c135:	jmp    0x40c160
  40c137:	jg     0x40c178
  40c139:	adc    dh,dl
  40c13b:	out    dx,al
  40c13c:	dec    esp
  40c13d:	ja     0x40c121
  40c13f:	mov    ds,ebp
  40c141:	mov    ebx,0x64775e7e
  40c146:	mov    ah,al
  40c148:	mov    ?,ebx
  40c14a:	jae    0x40c191
  40c14c:	add    ebp,edi
  40c14e:	push   esp
  40c14f:	push   ss
  40c150:	lds    eax,FWORD PTR [edi+0x5e]
  40c153:	adc    bl,al
  40c155:	or     dh,bl
  40c157:	push   ss
  40c158:	aaa    
  40c159:	sbb    ebx,ebp
  40c15b:	stos   DWORD PTR es:[edi],eax
  40c15c:	mov    edi,0xe768afb4
  40c161:	sbb    esi,DWORD PTR [ebp-0x4]
  40c164:	pcmpgtw mm6,QWORD PTR [edx-0x2befcf79]
  40c16b:	push   ds
  40c16c:	cs sbb ax,0x6fb2
  40c171:	pop    eax
  40c172:	retf   
  40c173:	add    al,bl
  40c175:	popa   
  40c176:	dec    eax
  40c177:	sub    ecx,esi
  40c179:	inc    edx
  40c17a:	loop   0x40c1d4
  40c17c:	push   eax
  40c17d:	out    0x44,al
  40c17f:	es mov edx,0x9ded9daf
  40c185:	call   0x36b6251d
  40c18a:	dec    ebp
  40c18b:	imul   edi,DWORD PTR ds:0xdef28235,0xffffffbe
  40c192:	xor    bh,BYTE PTR [esi-0x782021ac]
  40c198:	addr16 push ss
  40c19a:	sub    eax,DWORD PTR [ebx-0x5c]
  40c19d:	jno    0x40c12e
  40c19f:	fwait
  40c1a0:	daa    
  40c1a1:	rol    ecx,1
  40c1a3:	mov    ds:0x1cc9e25c,al
  40c1a8:	mov    edx,DWORD PTR [edi]
  40c1aa:	rol    cl,cl
  40c1ac:	test   eax,eax
  40c1ae:	ret    
  40c1af:	stos   BYTE PTR es:[edi],al
  40c1b0:	xchg   esi,eax
  40c1b1:	xchg   edi,eax
  40c1b2:	dec    ebp
  40c1b3:	push   eax
  40c1b4:	mov    bh,0x69
  40c1b6:	mov    ch,0x36
  40c1b8:	sar    BYTE PTR [edi-0x6],0x1d
  40c1bc:	lahf   
  40c1bd:	out    0xc3,eax
  40c1bf:	and    BYTE PTR [ebx],al
  40c1c1:	jbe    0x40c1a5
  40c1c3:	cmp    DWORD PTR [esi+0x5d92553],ecx
  40c1c9:	mov    ebp,0x266f524b
  40c1ce:	push   esi
  40c1cf:	arpl   ax,cx
  40c1d1:	add    eax,0xf58fa97e
  40c1d6:	fist   WORD PTR [eax+0x6a73b3be]
  40c1dc:	dec    esp
  40c1dd:	xchg   esp,eax
  40c1de:	xchg   edx,eax
  40c1df:	mov    DWORD PTR [eax-0x7f9d4a75],edi
  40c1e5:	push   eax
  40c1e6:	xor    al,0xdb
  40c1e8:	mov    edi,0x42279936
  40c1ed:	jne    0x40c1bf
  40c1ef:	sti    
  40c1f0:	aam    0xa6
  40c1f2:	in     eax,dx
  40c1f3:	imul   si,WORD PTR [edx],0x4919
  40c1f8:	adc    DWORD PTR [eax-0x12],esp
  40c1fb:	aam    0x67
  40c1fd:	pop    ecx
  40c1fe:	and    ah,BYTE PTR [ecx+0x6b]
  40c201:	inc    ebx
  40c202:	sub    DWORD PTR [ecx],ebp
  40c204:	inc    ebp
  40c205:	cdq    
  40c206:	adc    DWORD PTR [ebx-0x6f774cc7],edx
  40c20c:	mov    WORD PTR [edx-0x2e1b1ceb],gs
  40c212:	adc    al,0x7f
  40c214:	mov    ebp,0xc90a44a3
  40c219:	repnz lea esi,[edi+0x52fbc298]
  40c220:	add    DWORD PTR [edx-0x7ab6bd54],esp
  40c226:	ins    BYTE PTR es:[edi],dx
  40c227:	loope  0x40c1b4
  40c229:	das    
  40c22a:	ficomp WORD PTR [eax-0x7e]
  40c22d:	xchg   BYTE PTR [edx+ebp*2],al
  40c230:	fnstenv [esi]
  40c232:	ja     0x40c284
  40c234:	repnz add dh,BYTE PTR [ebp-0x58]
  40c238:	add    dh,BYTE PTR [edi]
  40c23a:	inc    ecx
  40c23b:	pop    esp
  40c23c:	cmp    DWORD PTR [ebx-0x3a534b],ebx
  40c242:	sahf   
  40c243:	cdq    
  40c244:	pop    es
  40c245:	xor    edx,DWORD PTR [ebx+esi*2]
  40c248:	ins    BYTE PTR es:[edi],dx
  40c249:	mov    eax,0xffafd693
  40c24e:	add    dh,BYTE PTR [edx-0x64]
  40c251:	addr16 mov ah,0x5d
  40c254:	xor    ch,dl
  40c256:	cld    
  40c257:	loop   0x40c2b0
  40c259:	jp     0x40c214
  40c25b:	mov    WORD PTR [ebx+0x5d32ef0c],es
  40c261:	rcl    dh,cl
  40c263:	add    eax,0xcc32cfa3
  40c268:	call   0x6468:0x6ff29d82
  40c26f:	push   esp
  40c270:	(bad)
  40c273:	and    al,0x2d
  40c275:	sub    DWORD PTR [esi+0x4e],edx
  40c278:	cs fs add al,0x59
  40c27c:	lahf   
  40c27d:	inc    edx
  40c27e:	scas   al,BYTE PTR es:[edi]
  40c27f:	mov    dh,0xc4
  40c281:	add    ah,al
  40c283:	mov    dx,WORD PTR [ecx+0x2b]
  40c287:	adc    DWORD PTR [edi-0x56],0x17
  40c28b:	sbb    eax,DWORD PTR [eax+0x72]
  40c28e:	mov    al,ds:0x9a5458fa
  40c293:	push   ecx
  40c294:	retf   0xcff7
  40c297:	adc    BYTE PTR [edx],al
  40c299:	push   ebp
  40c29a:	std    
  40c29b:	or     ah,dl
  40c29d:	addr16 push eax
  40c29f:	xor    ebx,ecx
  40c2a1:	xchg   esi,eax
  40c2a2:	test   al,0x22
  40c2a4:	xor    al,0x97
  40c2a6:	push   es
  40c2a7:	bnd jnp 0x40c288
  40c2aa:	ficomp DWORD PTR [edi+0x3e]
  40c2ad:	(bad)  
  40c2ae:	in     eax,dx
  40c2af:	int    0x46
  40c2b1:	and    edx,DWORD PTR [ecx+0x3c]
  40c2b4:	ror    esi,1
  40c2b6:	sbb    DWORD PTR [esi+ecx*8-0x71],esi
  40c2ba:	bound  ebx,QWORD PTR [ebx]
  40c2bc:	xor    esp,DWORD PTR [ebp+0x28]
  40c2bf:	or     al,0xce
  40c2c1:	pop    edx
  40c2c2:	sbb    BYTE PTR [eax-0x18],ah
  40c2c5:	dec    edx
  40c2c6:	xlat   BYTE PTR ds:[ebx]
  40c2c7:	xchg   edx,eax
  40c2c8:	and    dl,bh
  40c2ca:	out    dx,eax
  40c2cb:	pop    ebx
  40c2cc:	add    DWORD PTR [ecx+0x2f268c8e],ecx
  40c2d2:	je     0x40c2f8
  40c2d4:	jmp    0x40c314
  40c2d6:	xor    edi,ebp
  40c2d8:	stos   BYTE PTR es:[edi],al
  40c2d9:	mov    DWORD PTR [ecx+0x65],ebx
  40c2dc:	sbb    ebx,DWORD PTR [ecx+0x2f]
  40c2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2e0:	push   0xffffffc1
  40c2e2:	push   esp
  40c2e3:	enter  0x5d11,0x28
  40c2e7:	add    ch,BYTE PTR [ecx]
  40c2e9:	xlat   BYTE PTR ds:[ebx]
  40c2ea:	hlt    
  40c2eb:	lea    ebx,[esi+ecx*8]
  40c2ee:	jmp    0xdf34:0x9ea49f31
  40c2f5:	aam    0x9b
  40c2f7:	xchg   DWORD PTR [edx-0x24],eax
  40c2fa:	(bad)  
  40c2fc:	cmp    al,0x8
  40c2fe:	push   ss
  40c2ff:	(bad)  
  40c300:	fs push edx
  40c302:	jg     0x40c2dd
  40c304:	push   eax
  40c305:	sub    al,0x27
  40c307:	mov    eax,0xd6f3eb40
  40c30c:	pop    ecx
  40c30d:	(bad)  
  40c30e:	sub    al,0xa9
  40c310:	call   0x6382:0x438855a4
  40c317:	repz pop edi
  40c319:	test   DWORD PTR [ecx+ebp*2+0x3a],0x5c3a3d23
  40c321:	xchg   DWORD PTR ds:0x96c9b299,eax
  40c327:	mov    DWORD PTR [ebx+0x43],esi
  40c32a:	push   ebp
  40c32b:	into   
  40c32c:	call   0x2afe7c7c
  40c331:	mov    cl,0xf1
  40c333:	aaa    
  40c334:	mov    ebp,0x43e6d350
  40c339:	repz jb 0x40c371
  40c33c:	stc    
  40c33d:	stc    
  40c33e:	xor    cl,BYTE PTR [edi]
  40c340:	mov    cl,bl
  40c342:	inc    esp
  40c343:	icebp  
  40c344:	push   esi
  40c345:	adc    ch,BYTE PTR [edi]
  40c347:	mov    al,0xd2
  40c349:	lock mov eax,0x3aa13e06
  40c34f:	pusha  
  40c350:	push   fs
  40c352:	xchg   BYTE PTR [edx-0x50c8502b],bl
  40c358:	in     eax,0xfa
  40c35a:	imul   edi,DWORD PTR [eax+0x1e],0xd6fcb8a0
  40c361:	ror    DWORD PTR [edi],1
  40c363:	mov    dl,BYTE PTR [edi-0x79]
  40c366:	imul   edi,DWORD PTR [edx+edi*4+0x68],0x38bd0411
  40c36e:	sub    eax,0x74720e1c
  40c373:	mov    ah,BYTE PTR [ebx+ecx*8-0x2c]
  40c377:	pop    edi
  40c378:	sar    BYTE PTR [edi],1
  40c37a:	jae    0x40c324
  40c37c:	into   
  40c37d:	mov    ebx,0xa445c09
  40c382:	cwde   
  40c383:	mov    WORD PTR [ebx],cs
  40c385:	mov    ecx,0x879769e4
  40c38a:	dec    edx
  40c38b:	sub    DWORD PTR ds:0x265b40dc,0x160b94db
  40c395:	mov    dh,0x38
  40c397:	jno    0x40c402
  40c399:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c39b:	mov    BYTE PTR [ecx-0x7a1d988a],bh
  40c3a1:	popa   
  40c3a2:	mul    eax
  40c3a4:	ins    BYTE PTR es:[edi],dx
  40c3a5:	loop   0x40c3db
  40c3a7:	imul   esp,ebp,0xaedfd0f4
  40c3ad:	adc    DWORD PTR [edx+0x529ec1fa],esi
  40c3b3:	jo     0x40c388
  40c3b5:	ja     0x40c36d
  40c3b7:	pop    es
  40c3b8:	fwait
  40c3b9:	push   ecx
  40c3ba:	fcmovu st,st(5)
  40c3bc:	popa   
  40c3bd:	ss mov ecx,0x8b46d7a
  40c3c3:	leave  
  40c3c4:	sub    eax,0x170a4fb1
  40c3c9:	(bad)  
  40c3ca:	out    dx,al
  40c3cb:	adc    BYTE PTR [eax+0x47],dh
  40c3ce:	fsub   st(4),st
  40c3d0:	or     eax,0xf330c86f
  40c3d5:	out    dx,eax
  40c3d6:	mov    WORD PTR [eax-0x24],ss
  40c3d9:	cwde   
  40c3da:	lahf   
  40c3db:	inc    esp
  40c3dc:	dec    edi
  40c3dd:	pop    ds
  40c3de:	leave  
  40c3df:	dec    esp
  40c3e0:	lea    ebx,[edx+0x1e]
  40c3e3:	dec    eax
  40c3e4:	out    dx,al
  40c3e5:	xor    BYTE PTR [edx+ecx*4-0x68100564],0x68
  40c3ed:	pop    esi
  40c3ee:	out    dx,al
  40c3ef:	leave  
  40c3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f1:	pop    ebx
  40c3f2:	data16 and ch,ch
  40c3f5:	pop    edx
  40c3f6:	push   ecx
  40c3f7:	hlt    
  40c3f8:	jmp    0xe0666a44
  40c3fd:	and    edx,DWORD PTR [ebx]
  40c3ff:	loopne 0x40c40a
  40c401:	jmp    0x40c45c
  40c403:	pop    edx
  40c404:	inc    eax
  40c405:	ds xchg esi,eax
  40c407:	shl    bl,cl
  40c409:	inc    ecx
  40c40a:	scas   eax,DWORD PTR es:[edi]
  40c40b:	pop    esp
  40c40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c40d:	test   al,0xc2
  40c40f:	and    cl,BYTE PTR [ecx]
  40c411:	(bad)  
  40c412:	fsub   st(7),st
  40c414:	call   0x6318:0x7812e783
  40c41b:	jmp    0x5274226e
  40c420:	dec    ebx
  40c421:	pop    edx
  40c422:	sub    al,0xcc
  40c424:	push   edx
  40c425:	imul   bp,WORD PTR [ecx-0x3a],0x4f
  40c42a:	call   0xefbe:0xc71c2b8a
  40c431:	xchg   BYTE PTR [edx-0xa1d949],ch
  40c437:	inc    esp
  40c438:	outs   dx,DWORD PTR ds:[esi]
  40c439:	cmp    BYTE PTR [edi+0x20],0x5b
  40c43d:	jmp    0xac29:0xf4e4d25
  40c444:	cmp    DWORD PTR [ebx-0x57ea2ba9],ebx
  40c44a:	push   ds
  40c44b:	jno    0x40c4ac
  40c44d:	and    DWORD PTR [esp+esi*2-0x67],edx
  40c451:	fimul  DWORD PTR [esi-0x4c]
  40c454:	(bad)
  40c457:	push   esi
  40c458:	clc    
  40c459:	or     BYTE PTR [esi-0x651a2fd4],0xca
  40c460:	jo     0x40c4b2
  40c462:	mov    eax,ds:0x5d678c79
  40c467:	sub    edi,esp
  40c469:	(bad)  
  40c46a:	mov    dh,0x0
  40c46c:	add    DWORD PTR [ebx+0x76670b9f],esp
  40c472:	popf   
  40c473:	inc    edi
  40c474:	push   0xa37a6104
  40c479:	lods   eax,DWORD PTR fs:[esi]
  40c47b:	xchg   DWORD PTR [edx-0x46a9463e],edx
  40c481:	imul   edx,DWORD PTR [edx-0x699ca249],0xf1a4275b
  40c48b:	lods   al,BYTE PTR ds:[esi]
  40c48c:	scas   al,BYTE PTR es:[edi]
  40c48d:	pop    ebx
  40c48e:	push   cs
  40c48f:	sbb    BYTE PTR [edx-0x4a],bh
  40c492:	sbb    ah,BYTE PTR [ebx-0x22625c6]
  40c498:	xor    BYTE PTR [esi+0x1763082b],al
  40c49e:	xchg   ebx,eax
  40c49f:	fadd   QWORD PTR [ebx+esi*2+0x14c2636]
  40c4a6:	in     eax,dx
  40c4a7:	aad    0x68
  40c4a9:	sbb    BYTE PTR [edx-0x722db6f8],cl
  40c4af:	mov    al,0x83
  40c4b1:	call   0x5f1ad8c4
  40c4b6:	jl     0x40c4d7
  40c4b8:	stc    
  40c4b9:	into   
  40c4ba:	sahf   
  40c4bb:	(bad)  
  40c4bc:	or     al,0x7a
  40c4be:	and    al,0x40
  40c4c0:	xor    BYTE PTR [ecx-0x1f],al
  40c4c3:	adc    eax,0x35503252
  40c4c8:	inc    edx
  40c4c9:	cmp    DWORD PTR [eax],ebx
  40c4cb:	(bad)  
  40c4cd:	pop    esp
  40c4ce:	popf   
  40c4cf:	jp     0x40c4e7
  40c4d1:	imul   DWORD PTR ds:0xd7e860d6
  40c4d7:	sub    al,0x14
  40c4d9:	mov    bl,0x1f
  40c4db:	outs   dx,DWORD PTR ds:[esi]
  40c4dc:	gs ins DWORD PTR es:[edi],dx
  40c4de:	add    al,0x93
  40c4e0:	imul   ebp,ebx,0x6286de45
  40c4e6:	into   
  40c4e7:	mov    edx,0xcfa73649
  40c4ec:	retf   
  40c4ed:	aaa    
  40c4ee:	or     ch,bh
  40c4f0:	lods   eax,DWORD PTR ds:[esi]
  40c4f1:	(bad)  
  40c4f2:	data16 sbb bl,BYTE PTR [esi]
  40c4f5:	mov    ds:0x8ece8eda,eax
  40c4fa:	push   edi
  40c4fb:	sbb    BYTE PTR [eax+edi*8-0x7d291579],0xa8
  40c503:	jmp    0x822e:0x87a6f8df
  40c50a:	mov    edi,0x6bb4ff98
  40c50f:	arpl   WORD PTR [ecx+0x6f66f6d1],sp
  40c515:	loop   0x40c4ca
  40c517:	pop    ebx
  40c518:	outs   dx,BYTE PTR ds:[esi]
  40c519:	ret    
  40c51a:	xor    BYTE PTR [esi+esi*8+0x56],dl
  40c51e:	stos   DWORD PTR es:[edi],eax
  40c51f:	add    dl,dh
  40c521:	jne    0x40c565
  40c523:	sbb    ebx,DWORD PTR [ebx]
  40c525:	inc    BYTE PTR cs:[esi+0x20d55ac5]
  40c52c:	xchg   esp,eax
  40c52d:	in     al,dx
  40c52e:	jp     0x40c578
  40c530:	daa    
  40c531:	sub    edx,DWORD PTR [ecx-0x1d]
  40c534:	out    dx,eax
  40c535:	mov    ch,0x69
  40c537:	jns    0x40c561
  40c539:	lds    ebx,FWORD PTR [ebx+eax*4+0x1b317d2d]
  40c540:	mov    eax,ds:0x9cfb0a02
  40c545:	lods   al,BYTE PTR ds:[esi]
  40c546:	push   ss
  40c547:	rol    BYTE PTR [eax+eiz*8-0x9ad473a],0x70
  40c54f:	push   ecx
  40c550:	and    ebp,DWORD PTR [edi+0x43]
  40c553:	repz and DWORD PTR [edx],eax
  40c556:	pusha  
  40c557:	shr    BYTE PTR [esi],cl
  40c559:	sub    ecx,DWORD PTR [eax+esi*4+0x12]
  40c55d:	inc    ebx
  40c55e:	outs   dx,DWORD PTR ds:[esi]
  40c55f:	cli    
  40c560:	mov    bl,0x7d
  40c562:	int    0xbd
  40c564:	jmp    0xb7d6:0xe4c27e74
  40c56b:	or     cl,cl
  40c56d:	out    dx,al
  40c56e:	and    al,0x1a
  40c570:	mov    ds:0xbd9af40e,eax
  40c575:	cdq    
  40c576:	push   ds
  40c577:	loopne 0x40c5c6
  40c579:	ds stos DWORD PTR es:[edi],eax
  40c57b:	sti    
  40c57c:	xor    al,0xb2
  40c57e:	(bad)  
  40c57f:	in     al,0x37
  40c581:	push   esi
  40c582:	sub    DWORD PTR [esi+0x36cb80e5],eax
  40c588:	mov    al,0xb8
  40c58a:	push   DWORD PTR [ebp-0x40]
  40c58d:	and    eax,esp
  40c58f:	push   0x21
  40c591:	lds    edx,FWORD PTR [ebx+0x507416e5]
  40c597:	int3   
  40c598:	xlat   BYTE PTR ds:[ebx]
  40c599:	fs pop es
  40c59b:	sti    
  40c59c:	sub    BYTE PTR [ebp-0x51],cl
  40c59f:	lods   al,BYTE PTR ds:[esi]
  40c5a0:	loop   0x40c597
  40c5a2:	jp     0x40c600
  40c5a4:	and    dh,BYTE PTR [edi+0x57c9c1d6]
  40c5aa:	pop    edi
  40c5ab:	push   edi
  40c5ac:	adc    DWORD PTR [ecx],ebp
  40c5ae:	outs   dx,BYTE PTR ds:[esi]
  40c5af:	(bad)  
  40c5b0:	in     eax,dx
  40c5b1:	test   BYTE PTR [eax+0x5da2119f],bh
  40c5b7:	rcl    DWORD PTR [edx+0x55a2499],0x45
  40c5be:	push   ebx
  40c5bf:	or     ah,BYTE PTR [ecx-0x149d7b3a]
  40c5c5:	mov    eax,edi
  40c5c7:	mov    ds:0xfdf87e42,al
  40c5cc:	(bad)  [eax+0x4c]
  40c5cf:	pop    ebp
  40c5d0:	or     eax,0x4a9cd5d1
  40c5d5:	mov    bh,0x3a
  40c5d7:	fwait
  40c5d8:	iret   
  40c5d9:	add    eax,0xc85c67b0
  40c5de:	jae    0x40c5dc
  40c5e0:	into   
  40c5e1:	lahf   
  40c5e2:	and    al,0x1e
  40c5e4:	xchg   ebx,eax
  40c5e5:	out    0x8b,eax
  40c5e7:	cld    
  40c5e8:	or     al,BYTE PTR [edx-0x10c22b55]
  40c5ee:	scas   eax,DWORD PTR es:[edi]
  40c5ef:	call   0x8f382ae8
  40c5f4:	pop    edi
  40c5f5:	sbb    edx,DWORD PTR [ebx-0x18d086b3]
  40c5fb:	mov    esp,0xcc3011b7
  40c600:	cmp    BYTE PTR [esi-0x3c2606bb],al
  40c606:	jmp    0x40c634
  40c608:	ja     0x40c62e
  40c60a:	ss leave 
  40c60c:	add    ah,BYTE PTR [edx]
  40c60e:	sti    
  40c60f:	mov    ah,0x40
  40c611:	nop    DWORD PTR [edi]
  40c614:	fist   DWORD PTR [ecx]
  40c616:	or     ebx,DWORD PTR [ebp-0x6e]
  40c619:	jg     0x40c683
  40c61b:	and    al,0xde
  40c61d:	adc    al,0x88
  40c61f:	loop   0x40c683
  40c621:	push   eax
  40c622:	add    eax,0xea49e18b
  40c627:	(bad)  
  40c628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c629:	add    al,0x7f
  40c62b:	fcom   DWORD PTR ss:[ecx]
  40c62e:	repz fidivr WORD PTR [ebx-0x16707301]
  40c635:	(bad)  
  40c636:	cdq    
  40c637:	sub    BYTE PTR [eax-0x3107d994],dh
  40c63d:	xchg   edx,eax
  40c63e:	and    al,0xed
  40c640:	sbb    eax,0xa41900ad
  40c645:	mov    ecx,DWORD PTR [edx+0x3039c7e7]
  40c64b:	ret    
  40c64c:	(bad)  
  40c64d:	and    al,0x47
  40c64f:	mov    ah,ch
  40c651:	mov    esp,DWORD PTR fs:[ecx]
  40c654:	xchg   BYTE PTR [edi-0x46],dl
  40c657:	push   eax
  40c658:	jbe    0x40c652
  40c65a:	sbb    edx,DWORD PTR [esi]
  40c65c:	sbb    al,0x94
  40c65e:	test   DWORD PTR [edi-0x7e],esp
  40c661:	or     eax,0xe3e86c43
  40c666:	mov    eax,0x7c1704e0
  40c66b:	dec    ecx
  40c66c:	jecxz  0x40c5f4
  40c66e:	add    BYTE PTR [edx-0x74aedb32],ah
  40c674:	push   ds
  40c675:	push   eax
  40c676:	into   
  40c677:	xor    BYTE PTR [ebp+0x79],ah
  40c67a:	jmp    0x2d08:0x6eab21e7
  40c681:	outs   dx,DWORD PTR ds:[esi]
  40c682:	popf   
  40c683:	loope  0x40c694
  40c685:	sub    al,0x54
  40c687:	mov    edi,0xfc3fcb96
  40c68c:	sub    dl,BYTE PTR [ecx+0x35]
  40c68f:	pop    edx
  40c690:	adc    al,0xfe
  40c692:	jns    0x40c624
  40c694:	nop
  40c695:	out    0x10,eax
  40c697:	nop    ebp
  40c69a:	jb     0x40c64d
  40c69c:	push   eax
  40c69d:	int3   
  40c69e:	clc    
  40c69f:	dec    ecx
  40c6a0:	les    ecx,FWORD PTR [esi+0x19]
  40c6a3:	les    ebp,FWORD PTR [eax]
  40c6a5:	imul   esp,DWORD PTR ds:0x91b4de42,0xffffffd5
  40c6ac:	(bad)  
  40c6ad:	push   ss
  40c6ae:	cwde   
  40c6af:	fist   DWORD PTR [ecx]
  40c6b1:	loop   0x40c67b
  40c6b3:	stc    
  40c6b4:	xor    edi,DWORD PTR [ebp+0x27]
  40c6b7:	or     eax,0x7334fe0d
  40c6bc:	pushf  
  40c6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6be:	in     al,dx
  40c6bf:	retf   0xf977
  40c6c2:	repnz ins BYTE PTR es:[edi],dx
  40c6c4:	lods   eax,DWORD PTR ds:[esi]
  40c6c5:	push   ss
  40c6c6:	jmp    0x2827:0x255111dd
  40c6cd:	jnp    0x40c654
  40c6cf:	cmp    ah,BYTE PTR [esi]
  40c6d1:	(bad)  
  40c6d2:	jl     0x40c69a
  40c6d4:	add    edx,eax
  40c6d6:	repz int3 
  40c6d8:	fidivr WORD PTR [ecx+0x0]
  40c6db:	adc    DWORD PTR [edi+0x27],esp
  40c6de:	push   0xb82e34a9
  40c6e3:	mov    esp,0x92cb4d21
  40c6e8:	in     al,0xdc
  40c6ea:	int3   
  40c6eb:	xor    DWORD PTR [edi],edi
  40c6ed:	xor    eax,ebp
  40c6ef:	jg     0x40c682
  40c6f1:	xchg   esi,ebx
  40c6f3:	int3   
  40c6f4:	and    BYTE PTR [edi],dh
  40c6f6:	and    DWORD PTR [ebx],esi
  40c6f8:	cli    
  40c6f9:	push   ecx
  40c6fa:	cmp    BYTE PTR [esi],dh
  40c6fc:	mov    ebp,0xd9d42092
  40c701:	test   eax,0x9090a065
  40c706:	je     0x40c780
  40c708:	ss sti 
  40c70a:	dec    eax
  40c70b:	rcr    DWORD PTR [eax],cl
  40c70d:	jecxz  0x40c6b4
  40c70f:	lods   eax,DWORD PTR ds:[esi]
  40c710:	loop   0x40c695
  40c712:	dec    ecx
  40c713:	mov    bl,0xaa
  40c715:	fstp   DWORD PTR [ecx+0x2b]
  40c718:	imul   edx,DWORD PTR [esi+esi*8+0x8],0xffffff9b
  40c71d:	jo     0x40c6c5
  40c71f:	nop
  40c720:	jno    0x40c6da
  40c722:	int    0x84
  40c724:	xchg   esp,eax
  40c725:	mov    edi,DWORD PTR [ebx+edx*8+0x300aeb0]
  40c72c:	dec    esp
  40c72d:	lods   eax,DWORD PTR ds:[esi]
  40c72e:	cmp    al,0xc4
  40c730:	push   0xffffffd6
  40c732:	jae    0x40c797
  40c734:	push   esi
  40c735:	cs ja  0x40c782
  40c738:	or     BYTE PTR [eax+0x52],dl
  40c73b:	jnp    0x40c725
  40c73d:	push   esi
  40c73e:	xor    al,0x2a
  40c740:	ds test al,0xd3
  40c743:	inc    esp
  40c744:	dec    eax
  40c745:	pop    ds
  40c746:	icebp  
  40c747:	rcl    BYTE PTR [eax+0x3b5936b7],0xb0
  40c74e:	in     al,dx
  40c74f:	fistp  WORD PTR [eax+ebx*8-0x7c0bd92d]
  40c756:	inc    edx
  40c757:	mov    al,ds:0xb213b2b4
  40c75c:	fistp  QWORD PTR [ecx]
  40c75e:	jnp    0x40c706
  40c760:	ret    
  40c761:	sbb    al,0xc4
  40c763:	xchg   di,ax
  40c765:	push   esp
  40c766:	(bad)  [ebx+0x51]
  40c769:	ds cmp eax,0x9120234e
  40c76f:	in     al,0x81
  40c771:	mov    dl,0x0
  40c773:	in     eax,dx
  40c774:	sbb    esi,eax
  40c776:	dec    ebp
  40c777:	jle    0x40c75b
  40c779:	mov    bl,0xab
  40c77b:	adc    DWORD PTR [edx+0x13645252],0x3c
  40c782:	mov    dh,0x85
  40c784:	cmp    dl,dl
  40c786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c788:	cmc    
  40c789:	mov    ebx,0x8525d17
  40c78e:	add    BYTE PTR [eax+0x6e2dffe4],al
  40c794:	pop    es
  40c795:	mov    eax,0x6a2fc194
  40c79a:	adc    bh,bl
  40c79c:	push   esp
  40c79d:	push   ebp
  40c79e:	xchg   ebx,eax
  40c79f:	jmp    0xaf0c:0x277c8338
  40c7a6:	cld    
  40c7a7:	cs pop ebp
  40c7a9:	sub    al,0x44
  40c7ab:	addr16 enterw 0x5f34,0x14
  40c7b1:	mov    bl,0x42
  40c7b3:	mov    eax,0x5d1b6906
  40c7b8:	mov    edi,0x6cdcb734
  40c7bd:	jmp    0xfa859d1a
  40c7c2:	test   al,0x3e
  40c7c4:	mov    BYTE PTR [ecx],dl
  40c7c6:	and    BYTE PTR [esi],0xb1
  40c7c9:	xchg   esp,eax
  40c7ca:	aam    0xc1
  40c7cc:	shr    al,cl
  40c7ce:	mov    eax,DWORD PTR [ebx-0x7d]
  40c7d1:	(bad)  
  40c7d2:	and    ah,BYTE PTR [ebp-0x554ca105]
  40c7d8:	adc    DWORD PTR [eax],esp
  40c7da:	jne    0x40c7cc
  40c7dc:	dec    ebp
  40c7dd:	frstor [edx]
  40c7df:	dec    esi
  40c7e0:	in     eax,0x23
  40c7e2:	add    eax,0x24e9192b
  40c7e7:	and    eax,0x564b072c
  40c7ec:	test   al,0x53
  40c7ee:	add    al,0x46
  40c7f0:	mov    es,WORD PTR [ebx-0x1f1576c7]
  40c7f6:	jbe    0x40c790
  40c7f8:	scas   al,BYTE PTR es:[edi]
  40c7f9:	mov    eax,0x5f9fe752
  40c7fe:	out    dx,eax
  40c7ff:	daa    
  40c800:	ss cld 
  40c802:	mov    esp,0xe7096593
  40c807:	and    al,0x29
  40c809:	adc    edi,eax
  40c80b:	ss ret 
  40c80d:	fild   WORD PTR [ecx]
  40c80f:	pop    ss
  40c810:	daa    
  40c811:	mov    ch,0x84
  40c813:	cli    
  40c814:	ror    esi,cl
  40c816:	out    0x57,al
  40c818:	sub    bl,ch
  40c81a:	fbstp  TBYTE PTR [ebp+0x73f569f]
  40c820:	call   0xaec9f4bc
  40c825:	es stos BYTE PTR es:[edi],al
  40c827:	push   edi
  40c828:	dec    ebp
  40c829:	imul   ebx,esi,0xbc8cf52f
  40c82f:	outs   dx,BYTE PTR ds:[esi]
  40c830:	or     DWORD PTR [edi],edx
  40c832:	add    DWORD PTR [ecx-0x161fdda4],ebx
  40c838:	xchg   edi,eax
  40c839:	std    
  40c83a:	jl     0x40c7ed
  40c83c:	sub    ch,BYTE PTR [edi-0x3b210db4]
  40c842:	mov    ebp,0xf58991dc
  40c847:	aas    
  40c848:	and    BYTE PTR [ebp-0x55],ch
  40c84b:	ror    BYTE PTR [ecx+ecx*4+0x16051463],1
  40c852:	pusha  
  40c853:	xchg   dh,al
  40c855:	inc    esp
  40c856:	push   esi
  40c857:	push   0xffffffae
  40c859:	sar    DWORD PTR cs:[esi-0x68],1
  40c85d:	add    DWORD PTR [esi],ecx
  40c85f:	and    BYTE PTR [esi+0x6e],ch
  40c862:	xchg   esp,eax
  40c863:	into   
  40c864:	mov    ebp,0xd82ac00f
  40c869:	xchg   ebx,eax
  40c86a:	pop    ds
  40c86b:	lea    esi,[ebx+edi*4+0x7ca8f722]
  40c872:	scas   al,BYTE PTR es:[edi]
  40c873:	and    al,0x3
  40c875:	aad    0x78
  40c877:	mov    eax,ds:0x947dc05c
  40c87c:	xchg   ecx,eax
  40c87d:	and    DWORD PTR [ecx+edi*1],ebp
  40c880:	lods   eax,DWORD PTR ds:[esi]
  40c881:	sub    eax,0x37e46e19
  40c886:	arpl   WORD PTR [edx],bx
  40c888:	xchg   esp,esi
  40c88a:	rol    DWORD PTR [esi-0xe76dbda],cl
  40c890:	mov    ah,dh
  40c892:	test   al,0xf7
  40c894:	rcl    DWORD PTR [ebp-0x3f35f9f],cl
  40c89a:	cmp    bl,BYTE PTR [ebx+ecx*2-0x6b]
  40c89e:	sub    DWORD PTR [ebx+0x33],0xd5e24563
  40c8a5:	(bad)  
  40c8a6:	in     al,0xaf
  40c8a8:	fld    QWORD PTR [edi-0x36f5132a]
  40c8ae:	mov    bh,0xe0
  40c8b0:	ins    BYTE PTR es:[edi],dx
  40c8b1:	cli    
  40c8b2:	ficom  WORD PTR [edi+ebx*2+0x3bba65ad]
  40c8b9:	add    BYTE PTR [esi-0x41e5b5d7],cl
  40c8bf:	jp     0x40c8af
  40c8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c2:	and    al,0xe5
  40c8c4:	cld    
  40c8c5:	dec    ebx
  40c8c6:	xchg   ebx,eax
  40c8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8c8:	fldcw  WORD PTR [edi]
  40c8ca:	push   eax
  40c8cb:	add    eax,0x6c0f5601
  40c8d0:	outs   dx,DWORD PTR ds:[esi]
  40c8d1:	jmp    0x40c883
  40c8d3:	pushf  
  40c8d4:	in     al,dx
  40c8d5:	push   cs
  40c8d6:	sub    BYTE PTR [edx],bl
  40c8d8:	cmp    al,0xa2
  40c8da:	call   0x6fb5:0x3fde4878
  40c8e1:	add    al,BYTE PTR [edi]
  40c8e3:	and    eax,0x4bad8696
  40c8e8:	push   ds
  40c8e9:	push   ecx
  40c8ea:	loope  0x40c882
  40c8ec:	fidivr WORD PTR ss:[ebx]
  40c8ef:	out    0xcc,eax
  40c8f1:	mov    gs,WORD PTR [esi-0x37]
  40c8f4:	outs   dx,BYTE PTR ds:[esi]
  40c8f5:	cli    
  40c8f6:	out    0xca,al
  40c8f8:	lds    edx,FWORD PTR [eax]
  40c8fa:	adc    al,0x50
  40c8fc:	xchg   ebx,edi
  40c8fe:	and    DWORD PTR [ebx+edx*8],ebx
  40c901:	int    0xc
  40c903:	inc    ebp
  40c904:	popa   
  40c905:	(bad)  
  40c907:	lds    edx,FWORD PTR [edi-0x5e57317f]
  40c90d:	ds mov dl,0x7e
  40c910:	cli    
  40c911:	imul   ebp,DWORD PTR [ecx+0x66],0x6789578d
  40c918:	xor    DWORD PTR [ebx],esi
  40c91a:	pop    ss
  40c91b:	xor    ebp,ecx
  40c91d:	ret    0xa943
  40c920:	sbb    bl,BYTE PTR [eax]
  40c922:	add    eax,0x41c4de0d
  40c927:	xchg   edx,eax
  40c928:	dec    edi
  40c929:	mov    ebp,0xf17ddd7b
  40c92e:	std    
  40c92f:	lock bound eax,QWORD PTR [edi-0x1943094f]
  40c936:	pusha  
  40c937:	lods   eax,DWORD PTR ds:[esi]
  40c938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c939:	lods   al,BYTE PTR ds:[esi]
  40c93a:	xor    ch,BYTE PTR [ebp+0x1e]
  40c93d:	mov    fs,WORD PTR [edx+edx*1+0x44]
  40c941:	xchg   ebp,eax
  40c942:	xchg   ecx,eax
  40c943:	shl    DWORD PTR [eax],cl
  40c945:	in     al,0xef
  40c947:	jge    0x40c940
  40c949:	(bad)  
  40c94a:	push   ecx
  40c94b:	fidiv  WORD PTR [eax]
  40c94d:	mov    bh,0x2a
  40c94f:	mov    ds:0xd7b050a2,eax
  40c954:	pusha  
  40c955:	add    BYTE PTR [ebx+0x40],0x6d
  40c959:	cmp    DWORD PTR [ebp-0x66],edx
  40c95c:	iret   
  40c95d:	pop    eax
  40c95e:	data16 cmc 
  40c960:	sub    cl,bh
  40c962:	push   0xd5840b4b
  40c967:	xor    al,ch
  40c969:	inc    esi
  40c96a:	test   DWORD PTR [esi+0x61],0x3b3acc4e
  40c971:	rcl    DWORD PTR [ebx],cl
  40c973:	and    al,0x97
  40c975:	pop    eax
  40c976:	cmp    BYTE PTR [ecx-0x7c668644],ah
  40c97c:	jbe    0x40c9cd
  40c97e:	dec    eax
  40c97f:	xchg   edi,eax
  40c980:	dec    esp
  40c981:	jmp    0x3a95:0x37dfb5e5
  40c988:	rcr    DWORD PTR [esi-0x4abf747f],0x51
  40c98f:	xchg   esp,eax
  40c990:	test   eax,0xaa9ffaad
  40c995:	inc    ebx
  40c996:	imul   ebx,DWORD PTR [ecx],0xffffff9a
  40c999:	popf   
  40c99a:	xchg   esp,eax
  40c99b:	popf   
  40c99c:	dec    ebx
  40c99d:	sub    bl,cl
  40c99f:	mov    BYTE PTR [ecx],al
  40c9a1:	(bad)  
  40c9a2:	leave  
  40c9a3:	int    0x55
  40c9a5:	nop
  40c9a6:	dec    edi
  40c9a7:	inc    edi
  40c9a8:	ret    
  40c9a9:	es push cs
  40c9ab:	push   DWORD PTR [edi+ebp*2]
  40c9ae:	dec    edi
  40c9af:	jl     0x40c951
  40c9b1:	ret    0xcf9
  40c9b4:	or     edi,DWORD PTR [ebp+0x3e841c65]
  40c9ba:	xor    BYTE PTR [ecx-0x152e96ff],bl
  40c9c0:	or     esi,DWORD PTR [edx]
  40c9c2:	add    BYTE PTR [ecx],dh
  40c9c4:	cmp    eax,0x1efc949c
  40c9c9:	nop
  40c9ca:	pop    esi
  40c9cb:	lea    esi,[ebp+0x31]
  40c9ce:	inc    ecx
  40c9cf:	hlt    
  40c9d0:	pop    ecx
  40c9d1:	lods   eax,DWORD PTR ds:[esi]
  40c9d2:	inc    edx
  40c9d3:	sar    bh,1
  40c9d5:	mov    ebx,ebx
  40c9d7:	push   ss
  40c9d8:	adc    BYTE PTR [edi],dh
  40c9da:	jo     0x40ca2b
  40c9dc:	add    ecx,DWORD PTR [eax+edi*2-0x2b]
  40c9e0:	test   DWORD PTR [esi+0x41],edx
  40c9e3:	inc    ebp
  40c9e4:	adc    esi,DWORD PTR [ecx+0x1b]
  40c9e7:	mov    cl,0x28
  40c9e9:	rcr    DWORD PTR [eax-0x3b],0x27
  40c9ed:	cmp    ecx,ebp
  40c9ef:	or     eax,0xdd6795e6
  40c9f4:	sub    bh,BYTE PTR [eax+0x75d67213]
  40c9fa:	or     esi,edi
  40c9fc:	repnz and eax,0x92185727
  40ca02:	mov    cl,0xd1
  40ca04:	ja     0x40ca57
  40ca06:	lahf   
  40ca07:	inc    al
  40ca09:	int    0x73
  40ca0b:	push   ecx
  40ca0c:	pop    ebx
  40ca0d:	call   ebx
  40ca0f:	ins    BYTE PTR es:[edi],dx
  40ca10:	popa   
  40ca11:	pop    eax
  40ca12:	jge    0x40ca59
  40ca14:	aas    
  40ca15:	lock data16 jle 0x40c9e8
  40ca19:	je     0x40ca45
  40ca1b:	loopne 0x40c9fe
  40ca1d:	jecxz  0x40ca81
  40ca1f:	aas    
  40ca20:	push   ecx
  40ca21:	jb     0x40ca0a
  40ca23:	jno    0x40ca33
  40ca25:	sbb    eax,0xab59c7db
  40ca2a:	mov    al,ds:0x2ae1db3f
  40ca2f:	mov    ds:0x80fb62d7,al
  40ca34:	adc    eax,0xb6f48820
  40ca39:	mov    ch,0xb6
  40ca3b:	dec    edx
  40ca3c:	jecxz  0x40ca0e
  40ca3e:	arpl   WORD PTR [ebp+edi*8-0x3301f21d],cx
  40ca45:	cmc    
  40ca46:	(bad)  ss:[eax-0x6fcd72fc]
  40ca4d:	or     bl,ah
  40ca4f:	pop    ds
  40ca50:	call   0x3be0:0x9da3130c
  40ca57:	jbe    0x40cab9
  40ca59:	mov    al,ds:0x980a4a8f
  40ca5e:	sub    al,0x2f
  40ca60:	inc    edi
  40ca61:	ins    DWORD PTR es:[edi],dx
  40ca62:	push   ebp
  40ca63:	mul    DWORD PTR [edi]
  40ca65:	in     al,dx
  40ca66:	dec    eax
  40ca67:	mov    bh,0x90
  40ca69:	cmc    
  40ca6a:	std    
  40ca6b:	sub    eax,0x8c0169d8
  40ca70:	popa   
  40ca71:	mov    bl,0x5f
  40ca73:	or     eax,0x31a14cb9
  40ca78:	xchg   edi,eax
  40ca79:	fisub  WORD PTR [esp+esi*8]
  40ca7c:	fidiv  WORD PTR [esi+0x72c26165]
  40ca82:	repz or eax,0x61d1c08b
  40ca88:	xchg   ecx,eax
  40ca89:	stc    
  40ca8a:	sbb    DWORD PTR [edx],0xe22c887b
  40ca90:	push   edi
  40ca91:	jnp    0x40ca74
  40ca93:	sbb    BYTE PTR [ebx],ch
  40ca95:	pop    esi
  40ca96:	add    al,0x96
  40ca98:	jbe    0x40ca6e
  40ca9a:	adc    bl,bh
  40ca9c:	inc    ebx
  40ca9d:	or     al,0x38
  40ca9f:	cmp    BYTE PTR [bx+0x40],bl
  40caa3:	or     al,0xaf
  40caa5:	(bad)  
  40caa6:	cmp    dh,BYTE PTR [ebp-0x6a73be95]
  40caac:	push   eax
  40caad:	js     0x40cacb
  40caaf:	xor    ebp,edi
  40cab1:	xchg   edx,eax
  40cab2:	push   esp
  40cab3:	arpl   WORD PTR [edi],bp
  40cab5:	fdivr  DWORD PTR [esi+0x38]
  40cab8:	repnz push edx
  40caba:	cmp    BYTE PTR [edx+0x42a5cca5],dh
  40cac0:	scas   al,BYTE PTR es:[edi]
  40cac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac2:	je     0x40cabb
  40cac4:	push   eax
  40cac5:	ret    0xf421
  40cac8:	je     0x40cb37
  40caca:	lods   al,BYTE PTR ds:[esi]
  40cacb:	add    bl,BYTE PTR [ebx+0x35]
  40cace:	xor    BYTE PTR [esi+0x49],ch
  40cad1:	xor    cl,cl
  40cad3:	cld    
  40cad4:	or     eax,0x6320552b
  40cad9:	aam    0x5e
  40cadb:	push   0xffffff87
  40cadd:	and    cl,BYTE PTR [ecx-0x28]
  40cae0:	in     al,dx
  40cae1:	test   al,0xb4
  40cae3:	enter  0x42eb,0x99
  40cae7:	push   ds
  40cae8:	jnp    0x40cb2c
  40caea:	sbb    ebx,0xea096732
  40caf0:	enter  0x49b1,0x71
  40caf4:	xlat   BYTE PTR ds:[ebx]
  40caf5:	adc    esi,ebp
  40caf7:	ds es sti 
  40cafa:	xor    DWORD PTR [edx-0x53da61c2],esp
  40cb00:	adc    cl,dh
  40cb02:	jmp    0xde398a30
  40cb07:	sub    ah,BYTE PTR [ebp+0x55ad7b45]
  40cb0d:	inc    ebp
  40cb0e:	xchg   edx,eax
  40cb0f:	pushf  
  40cb10:	fwait
  40cb11:	shl    BYTE PTR [ecx+0x5f8e5b26],1
  40cb17:	sbb    eax,0x5964eb74
  40cb1c:	out    dx,al
  40cb1d:	dec    ecx
  40cb1e:	mov    eax,0x10ccbeab
  40cb23:	cmp    BYTE PTR [esi+0x75],dh
  40cb26:	fimul  WORD PTR [edx+edx*8-0x19]
  40cb2a:	xchg   esi,eax
  40cb2b:	jae    0x40cae9
  40cb2d:	xor    al,0x51
  40cb2f:	push   edi
  40cb30:	inc    ebx
  40cb31:	int    0x10
  40cb33:	(bad)  
  40cb34:	add    al,0x7c
  40cb36:	adc    esp,esi
  40cb38:	push   eax
  40cb39:	and    al,0xd2
  40cb3b:	jb     0x40cafa
  40cb3d:	push   es
  40cb3e:	fxch   st(2)
  40cb40:	adc    eax,0x4408b509
  40cb45:	call   0x5c3bc308
  40cb4a:	add    esi,DWORD PTR [edi-0x35]
  40cb4d:	adc    cl,BYTE PTR [ebx-0x67]
  40cb50:	push   esi
  40cb51:	iret   
  40cb52:	clc    
  40cb53:	mov    eax,0x219ed5b2
  40cb58:	sar    BYTE PTR [edi-0x14],0xae
  40cb5c:	imul   ebp,DWORD PTR [eax-0x4e4b3e7e],0x59
  40cb63:	or     edi,eax
  40cb65:	cs popa 
  40cb67:	(bad)
  40cb6b:	(bad)  
  40cb6c:	shl    BYTE PTR [ecx-0x52],0xd6
  40cb70:	or     al,0x1
  40cb72:	lahf   
  40cb73:	inc    ebp
  40cb74:	std    
  40cb75:	add    ah,BYTE PTR [ebx]
  40cb77:	mul    DWORD PTR [esi+edx*2-0x24]
  40cb7b:	mov    cl,0xaa
  40cb7d:	lahf   
  40cb7e:	(bad)  
  40cb80:	test   eax,0xf7edf0f8
  40cb85:	pop    eax
  40cb86:	and    al,BYTE PTR ds:0xa9ca7bcd
  40cb8c:	pusha  
  40cb8d:	jne    0x40cc01
  40cb8f:	push   esi
  40cb90:	adc    DWORD PTR [eax+0x34],edx
  40cb93:	loope  0x40cb4b
  40cb95:	inc    eax
  40cb96:	test   BYTE PTR [ecx],dh
  40cb98:	fcmove st,st(0)
  40cb9a:	add    BYTE PTR [esi+0x3d],al
  40cb9d:	mov    al,ds:0xca6dae58
  40cba2:	cld    
  40cba3:	mov    ds,WORD PTR [edi+0x4f8fe609]
  40cba9:	sub    cl,BYTE PTR [ecx]
  40cbab:	mov    DWORD PTR [ebx-0xf],esi
  40cbae:	out    0x6,eax
  40cbb0:	shl    BYTE PTR [edi+edx*1+0x7e1b19f9],0x10
  40cbb8:	pop    esi
  40cbb9:	adc    eax,DWORD PTR [ebx]
  40cbbb:	popa   
  40cbbc:	clc    
  40cbbd:	xor    eax,0x483de9fa
  40cbc2:	mov    edx,0x3b578e5f
  40cbc7:	xchg   esi,eax
  40cbc8:	add    BYTE PTR [ebp+0x6b],bh
  40cbcb:	dec    ecx
  40cbcc:	inc    edx
  40cbcd:	(bad)  
  40cbce:	iret   
  40cbcf:	inc    ebp
  40cbd0:	fisttp WORD PTR ds:0x6a838d08
  40cbd6:	inc    bp
  40cbd8:	bound  esp,QWORD PTR [edx]
  40cbda:	cdq    
  40cbdb:	daa    
  40cbdc:	push   esp
  40cbdd:	mov    bl,0xfa
  40cbdf:	fwait
  40cbe0:	inc    edx
  40cbe1:	scas   al,BYTE PTR es:[edi]
  40cbe2:	adc    esi,esi
  40cbe4:	loope  0x40cbf8
  40cbe6:	clc    
  40cbe7:	add    eax,0xb7cacdfa
  40cbec:	add    BYTE PTR [edi-0x425c3eb6],0x83
  40cbf3:	call   0xca8c:0xa39f694c
  40cbfa:	ret    
  40cbfb:	ret    0xd33e
  40cbfe:	mov    esp,0x27b70f53
  40cc03:	mov    ah,0xa6
  40cc05:	inc    eax
  40cc06:	jmp    0x7d265d1e
  40cc0b:	test   eax,0x55adfd1e
  40cc10:	ins    DWORD PTR es:[edi],dx
  40cc11:	loop   0x40cc31
  40cc13:	test   BYTE PTR [edx+0x3df66a16],bh
  40cc19:	inc    edx
  40cc1a:	jb     0x40cc8e
  40cc1c:	cmp    BYTE PTR [ebp+0x28],dh
  40cc1f:	int3   
  40cc20:	cdq    
  40cc21:	pusha  
  40cc22:	int3   
  40cc23:	mov    dl,0xd6
  40cc26:	mov    bh,0x7b
  40cc28:	push   ebp
  40cc29:	jnp    0x40cbeb
  40cc2b:	mov    cl,0xbd
  40cc2d:	cmp    eax,0xadd470fc
  40cc32:	js     0x40cc8f
  40cc34:	clc    
  40cc35:	lock adc ch,ah
  40cc38:	push   ebp
  40cc39:	xchg   esp,eax
  40cc3a:	mov    al,0xe8
  40cc3c:	dec    esp
  40cc3d:	add    esp,DWORD PTR [edx]
  40cc3f:	pop    esi
  40cc40:	fsubr  st,st(3)
  40cc42:	pop    esp
  40cc43:	adc    dl,dh
  40cc45:	pop    ds
  40cc46:	xlat   BYTE PTR ds:[ebx]
  40cc47:	fwait
  40cc48:	lds    esi,FWORD PTR [edi]
  40cc4a:	xor    eax,0x9198970a
  40cc4f:	out    dx,al
  40cc50:	jecxz  0x40cc93
  40cc52:	inc    eax
  40cc53:	in     eax,dx
  40cc54:	inc    ebp
  40cc55:	mov    dl,0x9a
  40cc57:	add    eax,0x84ded34c
  40cc5c:	mov    ds:0xa660ea5a,eax
  40cc61:	inc    ebx
  40cc62:	shl    BYTE PTR [edi+0x7983f0c6],0x8d
  40cc69:	out    0x4d,eax
  40cc6b:	lea    ebx,[edx]
  40cc6d:	mov    cl,0x4b
  40cc6f:	pop    eax
  40cc70:	dec    esp
  40cc71:	cmp    al,0xf1
  40cc73:	xor    BYTE PTR [eax-0x49],0x58
  40cc77:	bound  ecx,QWORD PTR [eax-0x12]
  40cc7a:	push   ds
  40cc7b:	jmp    0x40cc33
  40cc7d:	jmp    0x40ccb9
  40cc7f:	and    esp,DWORD PTR [edx]
  40cc81:	or     DWORD PTR [edi+eax*1+0x103d62ac],ebx
  40cc88:	popf   
  40cc89:	or     eax,0x5bc74d09
  40cc8e:	dec    edx
  40cc8f:	shl    al,0xa8
  40cc92:	add    eax,0xfdb1d136
  40cc97:	fs push ebx
  40cc99:	daa    
  40cc9a:	or     DWORD PTR [edi+ebp*1-0x5c96cb1d],edx
  40cca1:	(bad)  
  40cca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cca4:	pop    ss
  40cca5:	out    0xe5,eax
  40cca7:	push   ax
  40cca9:	loopne 0x40cc5b
  40ccab:	xchg   esp,eax
  40ccac:	call   FWORD PTR [ebx-0x39]
  40ccaf:	xchg   edx,eax
  40ccb0:	sbb    BYTE PTR [eax],ah
  40ccb2:	jle    0x40ccc8
  40ccb4:	xchg   edx,eax
  40ccb5:	xor    eax,0xab72bde0
  40ccba:	repz mov ch,0x15
  40ccbd:	ja     0x40cd1b
  40ccbf:	fmul   DWORD PTR [eax-0x4b]
  40ccc2:	ins    DWORD PTR es:[edi],dx
  40ccc3:	xchg   ebx,eax
  40ccc4:	fs mov esp,0xb1d076ea
  40ccca:	jmp    0x334c738
  40cccf:	jl     0x40cca6
  40ccd1:	xchg   ebx,eax
  40ccd2:	add    esi,ebx
  40ccd4:	cmp    cl,ch
  40ccd6:	loopne 0x40cc83
  40ccd8:	jmp    0xf3ca:0x606e40f3
  40ccdf:	repz inc edi
  40cce1:	lahf   
  40cce2:	mov    ecx,0xca998b7f
  40cce7:	lahf   
  40cce8:	call   0x9402c442
  40cced:	jecxz  0x40cc8b
  40ccef:	adc    eax,0xa6b3e2c7
  40ccf4:	lds    edi,FWORD PTR ds:[ebx+0x25d33536]
  40ccfb:	mov    eax,0xe215bb3b
  40cd00:	add    DWORD PTR [eax+0x78666cc9],edi
  40cd06:	ss inc eax
  40cd08:	mov    bl,BYTE PTR [edx-0x46]
  40cd0b:	push   esi
  40cd0c:	jmp    0xb625:0x1059ee7c
  40cd13:	xor    DWORD PTR [eax+0x58f1e718],ecx
  40cd19:	or     DWORD PTR gs:[esi],esp
  40cd1c:	push   0xffffffad
  40cd1e:	imul   edi,eax,0xffffffa0
  40cd21:	mov    al,ds:0x2e4e9134
  40cd26:	inc    eax
  40cd27:	sbb    dl,dl
  40cd29:	xchg   ebx,eax
  40cd2a:	cmp    eax,0x249faaf6
  40cd2f:	jle    0x40ccf1
  40cd31:	out    dx,eax
  40cd32:	les    eax,FWORD PTR [esi-0x6bce245c]
  40cd38:	cmp    BYTE PTR [ebx],dh
  40cd3a:	lds    edx,FWORD PTR [edx-0x60]
  40cd3d:	lods   eax,DWORD PTR ds:[esi]
  40cd3e:	push   edx
  40cd3f:	(bad)  
  40cd40:	sar    BYTE PTR [eax+0x40],0x3c
  40cd44:	stos   DWORD PTR es:[edi],eax
  40cd45:	imul   ecx
  40cd47:	pop    es
  40cd48:	mov    cl,0x47
  40cd4a:	sub    BYTE PTR [edx+0x56],bh
  40cd4d:	pusha  
  40cd4e:	and    eax,DWORD PTR [eax]
  40cd50:	jb     0x40ccd3
  40cd52:	and    al,0xb5
  40cd54:	mov    dh,0xd7
  40cd56:	dec    eax
  40cd57:	ror    DWORD PTR [ebx],1
  40cd59:	outs   dx,BYTE PTR ds:[esi]
  40cd5a:	sub    cl,BYTE PTR [bx+di+0x562b]
  40cd5f:	mov    eax,ds:0xc7e58b5d
  40cd64:	stos   BYTE PTR es:[di],al
  40cd66:	dec    ecx
  40cd67:	hlt    
  40cd68:	xchg   esi,eax
  40cd69:	push   edi
  40cd6a:	fs cwde 
  40cd6c:	mov    dh,0xc1
  40cd6e:	lods   al,BYTE PTR ds:[esi]
  40cd6f:	test   DWORD PTR ds:0x4757caed,eax
  40cd75:	and    BYTE PTR [edx+0x570ad69e],cl
  40cd7b:	aaa    
  40cd7c:	pop    esi
  40cd7d:	xchg   ebx,eax
  40cd7e:	js     0x40cda6
  40cd80:	jns    0x40cd84
  40cd82:	lock and DWORD PTR [edi],esp
  40cd85:	test   DWORD PTR [ebx],ebp
  40cd87:	push   ecx
  40cd88:	ret    
  40cd89:	mov    ds:0xd5cd2533,al
  40cd8e:	sbb    al,0x12
  40cd90:	jp     0x40cdff
  40cd92:	mov    ah,0xd4
  40cd94:	ja     0x40cdbc
  40cd96:	ja     0x40cd9b
  40cd98:	int    0x2d
  40cd9a:	xor    eax,0xab2852f1
  40cd9f:	mov    DWORD PTR [ecx-0x54],esp
  40cda2:	and    DWORD PTR [edi-0x49aaeaf1],eax
  40cda8:	and    DWORD PTR [ebx+edi*4-0x23],eax
  40cdac:	test   ecx,edx
  40cdae:	cmp    BYTE PTR [ebx+0x7d133216],al
  40cdb4:	stc    
  40cdb5:	out    0x35,eax
  40cdb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdb8:	pop    ebx
  40cdb9:	mov    al,ds:0x358d2584
  40cdbe:	sub    eax,0x8810f833
  40cdc3:	jmp    0x40cdbf
  40cdc5:	lahf   
  40cdc6:	pop    ss
  40cdc7:	mov    WORD PTR [eax-0x3f],?
  40cdca:	jnp    0x40cd85
  40cdcc:	scas   eax,DWORD PTR es:[edi]
  40cdcd:	sbb    esi,ebp
  40cdcf:	jbe    0x40cda1
  40cdd1:	sbb    eax,0xbc16b8ed
  40cdd6:	mov    bl,0x90
  40cdd8:	jl     0x40ce49
  40cdda:	aas    
  40cddb:	dec    eax
  40cddc:	scas   al,BYTE PTR es:[edi]
  40cddd:	ins    DWORD PTR es:[edi],dx
  40cdde:	jno    0x40ce11
  40cde0:	inc    ecx
  40cde1:	mov    WORD PTR [edi],es
  40cde3:	cmp    al,0x42
  40cde5:	fld    QWORD PTR [esi+0x13]
  40cde8:	dec    esi
  40cde9:	sub    bl,ch
  40cdeb:	pop    esi
  40cdec:	add    cl,dh
  40cdee:	clc    
  40cdef:	or     edx,DWORD PTR [eax]
  40cdf1:	sub    bl,BYTE PTR [esi+esi*4]
  40cdf4:	and    BYTE PTR [eax+0x48],dh
  40cdf7:	inc    eax
  40cdf8:	mov    al,0x98
  40cdfa:	es repnz stos DWORD PTR es:[edi],eax
  40cdfd:	jbe    0x40cd97
  40cdff:	adc    BYTE PTR [ecx-0x76],dl
  40ce02:	cmp    DWORD PTR [ebx+esi*2+0x5e44b708],ecx
  40ce09:	rcl    DWORD PTR [edi-0x5b],1
  40ce0c:	jmp    0xe2003a1c
  40ce11:	das    
  40ce12:	sub    BYTE PTR [edx],0x3c
  40ce15:	cdq    
  40ce16:	inc    eax
  40ce17:	lahf   
  40ce18:	pop    ebx
  40ce19:	dec    edi
  40ce1a:	popa   
  40ce1b:	cmp    bl,dl
  40ce1d:	fs jg  0x40cdac
  40ce20:	adc    edi,DWORD PTR [edx-0x19de1625]
  40ce26:	xchg   edx,eax
  40ce27:	push   ecx
  40ce28:	pop    eax
  40ce29:	jecxz  0x40ce54
  40ce2b:	out    dx,al
  40ce2c:	addr16 pop esp
  40ce2e:	xor    al,0xe7
  40ce30:	mov    dl,0x87
  40ce32:	mov    ss,WORD PTR [edi]
  40ce34:	test   eax,ebx
  40ce36:	mov    esp,0x5d63fa87
  40ce3b:	inc    esi
  40ce3c:	inc    ebx
  40ce3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce3e:	dec    ebx
  40ce3f:	out    dx,eax
  40ce40:	and    BYTE PTR [edi-0x58318044],dh
  40ce46:	test   al,bl
  40ce48:	mov    esp,0x62dceb25
  40ce4d:	popf   
  40ce4e:	outs   dx,BYTE PTR ds:[esi]
  40ce4f:	dec    edi
  40ce50:	call   0x3ecbecb3
  40ce55:	cmp    ch,BYTE PTR [ecx-0x6472fc43]
  40ce5b:	iret   
  40ce5c:	daa    
  40ce5d:	leave  
  40ce5e:	loopne 0x40ceb3
  40ce60:	scas   eax,DWORD PTR es:[edi]
  40ce61:	sbb    al,0xdc
  40ce63:	sahf   
  40ce64:	neg    dl
  40ce66:	imul   edi,DWORD PTR [esp+edi*4-0x5faaab68],0xffffffca
  40ce6e:	pop    es
  40ce6f:	bound  edx,QWORD PTR [edi]
  40ce71:	fs jp  0x40ce35
  40ce74:	jl     0x40cef4
  40ce76:	pop    ebx
  40ce77:	arpl   WORD PTR [ebx+edi*1+0x32e92f6e],bx
  40ce7e:	xchg   BYTE PTR [eax],dh
  40ce80:	lods   eax,DWORD PTR ds:[esi]
  40ce81:	loope  0x40cee6
  40ce83:	dec    ebp
  40ce84:	sub    dl,BYTE PTR [edx+0x31]
  40ce87:	leave  
  40ce88:	adc    al,0x4
  40ce8a:	shl    DWORD PTR [edx+0x55],1
  40ce8d:	add    DWORD PTR [ebx+0x55f4f67d],esp
  40ce93:	and    eax,DWORD PTR [ebp+0x5ced0787]
  40ce99:	sub    DWORD PTR [esp+esi*8+0x6bce9a21],edx
  40cea0:	(bad)  [esi+0x4b8f172]
  40cea6:	sbb    al,0x28
  40cea8:	add    al,0x77
  40ceaa:	cmp    ch,BYTE PTR [esi+0x45bce5c2]
  40ceb0:	lods   eax,DWORD PTR ds:[esi]
  40ceb1:	std    
  40ceb2:	xor    al,0x57
  40ceb4:	and    ah,bl
  40ceb6:	(bad)  
  40ceb7:	(bad)  
  40ceb8:	jecxz  0x40cf24
  40ceba:	mov    ebx,0x80a0bce6
  40cebf:	dec    ebp
  40cec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec1:	or     al,0x63
  40cec3:	xor    bh,dh
  40cec5:	call   0x79cfe178
  40ceca:	sub    BYTE PTR [ecx],0xa6
  40cecd:	call   0xe8c1:0x22ad4a59
  40ced4:	pushf  
  40ced5:	aam    0xd
  40ced7:	pusha  
  40ced8:	add    BYTE PTR [edx],bh
  40ceda:	pop    edi
  40cedb:	repnz (bad) 
  40cedd:	shr    DWORD PTR [ecx],0x17
  40cee0:	mov    ds,WORD PTR [ebx+0x12f2c85d]
  40cee6:	xchg   esp,eax
  40cee7:	pop    eax
  40cee8:	out    dx,al
  40cee9:	loop   0x40cebd
  40ceeb:	push   0xffffffce
  40ceed:	cmp    BYTE PTR [ebx+edi*2],bh
  40cef0:	cmp    eax,0xdbbf542c
  40cef5:	push   0xc966cdf9
  40cefa:	pop    es
  40cefb:	loopne 0x40cf59
  40cefd:	push   ss
  40cefe:	data16 stc 
  40cf00:	jns    0x40cee0
  40cf02:	dec    eax
  40cf03:	test   BYTE PTR [ecx-0x1e100229],ah
  40cf09:	out    0xc1,al
  40cf0b:	or     BYTE PTR [esi],cl
  40cf0d:	test   eax,0x4ac75949
  40cf12:	cmp    DWORD PTR [ebp+eax*2-0x39cbfe75],ecx
  40cf19:	jnp    0x40cf79
  40cf1b:	or     ebx,DWORD PTR [esi-0x4c5edcb6]
  40cf21:	aaa    
  40cf22:	jp     0x40cf17
  40cf24:	ror    BYTE PTR [ebx+0x2378e880],cl
  40cf2a:	mov    dh,0x2d
  40cf2c:	repz mov dl,0x7f
  40cf2f:	cmp    al,0x72
  40cf31:	jns    0x40cfa9
  40cf33:	data16 fimul WORD PTR [ebp+0x4e]
  40cf37:	aam    0x88
  40cf39:	out    dx,eax
  40cf3a:	ret    
  40cf3b:	out    0xca,eax
  40cf3d:	jne    0x40ceda
  40cf3f:	fimul  DWORD PTR [esi+0x14]
  40cf42:	adc    eax,0xf3abea30
  40cf47:	mov    DWORD PTR [esi+0x0],esp
  40cf4a:	call   ebp
  40cf4c:	mov    ds:0x2de99fa7,eax
  40cf51:	pushf  
  40cf52:	push   ebx
  40cf53:	in     eax,0x67
  40cf55:	inc    ebp
  40cf56:	push   edx
  40cf57:	jecxz  0x40cf2f
  40cf59:	ds aad 0x28
  40cf5c:	mov    esp,0x72e5bc5b
  40cf61:	xchg   edi,eax
  40cf62:	cmp    eax,0xfb667708
  40cf67:	in     eax,0x3d
  40cf69:	(bad)  
  40cf6a:	fsubrp st(5),st
  40cf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf6d:	(bad)  
  40cf6e:	cmp    eax,DWORD PTR [esi-0xb]
  40cf71:	or     BYTE PTR [edi-0x74ce5d1],ah
  40cf77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf78:	ficomp DWORD PTR [esi+0x33]
  40cf7b:	(bad)  
  40cf7c:	hlt    
  40cf7d:	daa    
  40cf7e:	jmp    FWORD PTR [edi+0x1885d78d]
  40cf84:	dec    edx
  40cf85:	enter  0xcfe0,0xc0
  40cf89:	sub    bl,dh
  40cf8b:	out    0x7a,al
  40cf8d:	jg     0x40cf43
  40cf8f:	pop    ebp
  40cf90:	popa   
  40cf91:	pop    ds
  40cf92:	scas   al,BYTE PTR es:[edi]
  40cf93:	(bad)
  40cf96:	sub    al,0x2c
  40cf98:	pop    ebx
  40cf99:	or     al,0xb6
  40cf9b:	mov    ebx,0xdf912d6d
  40cfa0:	fist   DWORD PTR [eax]
  40cfa2:	adc    eax,0x702e3e7c
  40cfa7:	jp     0x40cfae
  40cfa9:	push   edx
  40cfaa:	sub    edi,DWORD PTR [ecx-0xd]
  40cfad:	in     eax,0x46
  40cfaf:	jno    0x40cf66
  40cfb1:	cmp    ebx,ecx
  40cfb3:	loopne 0x40cf4a
  40cfb5:	push   ecx
  40cfb6:	ss call 0x861ec8ab
  40cfbc:	push   es
  40cfbd:	pop    ebx
  40cfbe:	lods   eax,DWORD PTR ds:[esi]
  40cfbf:	loope  0x40d035
  40cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc2:	pushw  es
  40cfc4:	or     al,0xe
  40cfc6:	aad    0xb
  40cfc8:	mov    esp,0xf3d8024c
  40cfcd:	call   0xc4539085
  40cfd2:	mov    ds:0x335adeed,eax
  40cfd7:	sbb    eax,0xb52ea4a
  40cfdc:	dec    ecx
  40cfdd:	test   eax,0x385f12cd
  40cfe2:	ret    
  40cfe3:	xor    ah,BYTE PTR [ebx+0x195829e7]
  40cfe9:	jge    0x40cfb0
  40cfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfec:	mov    dh,BYTE PTR [esi+0x72]
  40cfef:	imul   ebx,DWORD PTR [ecx+0x5d],0x3a
  40cff3:	xlat   BYTE PTR ds:[ebx]
  40cff4:	out    0x93,eax
  40cff6:	or     eax,0x539e9827
  40cffb:	imul   edx,DWORD PTR [edx-0x13],0xffffffee
  40cfff:	out    0x87,al
  40d001:	dec    esi
  40d002:	jnp    0x40d062
  40d004:	das    
  40d005:	ds ins BYTE PTR es:[edi],dx
  40d007:	(bad)  
  40d008:	hlt    
  40d009:	ficomp DWORD PTR [ebx]
  40d00b:	sub    BYTE PTR gs:[esi+0x44],dh
  40d00f:	nop
  40d010:	add    al,0xd7
  40d012:	into   
  40d013:	dec    eax
  40d014:	cmp    eax,DWORD PTR [edx+0x25741835]
  40d01a:	cmp    ecx,eax
  40d01c:	push   ds
  40d01d:	xchg   DWORD PTR [eax],ebx
  40d01f:	jb     0x40d03a
  40d021:	cmp    DWORD PTR [ebx],eax
  40d023:	sub    DWORD PTR [edi-0x35],ebx
  40d026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d027:	push   esp
  40d028:	shl    DWORD PTR [eax-0x549f860d],1
  40d02e:	test   dh,cl
  40d030:	or     BYTE PTR [ecx-0x78a7e908],ah
  40d036:	pop    eax
  40d037:	ror    al,1
  40d039:	mov    esp,0x34e77b14
  40d03e:	lahf   
  40d03f:	push   0x4c
  40d041:	loop   0x40d012
  40d043:	div    BYTE PTR [ebx+eax*2]
  40d046:	dec    esp
  40d047:	push   cs
  40d048:	push   ebx
  40d049:	ficom  WORD PTR [eax]
  40d04b:	ror    DWORD PTR [edi+0x48eff434],0x31
  40d052:	cmp    al,0xc1
  40d054:	mov    DWORD PTR [edx+0x38],0xa25614ec
  40d05b:	or     DWORD PTR [edx+0x2f],edx
  40d05e:	popa   
  40d05f:	stos   DWORD PTR es:[edi],eax
  40d060:	cmp    ah,ah
  40d062:	aad    0x23
  40d064:	out    dx,al
  40d065:	push   edx
  40d066:	jge    0x40d0c7
  40d068:	and    eax,0x266e7b0b
  40d06d:	pop    ecx
  40d06e:	and    al,0xe2
  40d070:	add    ebp,DWORD PTR [ebx+0x740e3fc]
  40d076:	lock and al,0x47
  40d079:	and    ebp,DWORD PTR [edi]
  40d07b:	xchg   ebp,eax
  40d07c:	xor    ebx,DWORD PTR [eax+ecx*8-0x39]
  40d080:	or     ch,BYTE PTR [ebp-0x48]
  40d083:	fld    TBYTE PTR [ecx+0x266f2bf2]
  40d089:	xchg   esi,eax
  40d08a:	rcr    ecx,1
  40d08c:	cmp    ah,BYTE PTR [eax]
  40d08e:	popa   
  40d08f:	aam    0xec
  40d091:	repnz pusha 
  40d093:	(bad)  
  40d094:	cdq    
  40d095:	jg     0x40d055
  40d097:	std    
  40d098:	push   esp
  40d099:	loopne 0x40d090
  40d09b:	icebp  
  40d09c:	push   0x77fe0434
  40d0a1:	mov    bl,0x2d
  40d0a3:	mov    dh,0xdb
  40d0a5:	iret   
  40d0a6:	and    ecx,DWORD PTR [ecx]
  40d0a8:	ret    0xcddc
  40d0ab:	jg     0x40d0a1
  40d0ad:	shl    DWORD PTR [edx+0x14f49595],1
  40d0b3:	scas   eax,DWORD PTR es:[edi]
  40d0b4:	push   ecx
  40d0b5:	mov    ecx,0x2dc80d2
  40d0ba:	adc    al,BYTE PTR [esi+0x4123c90c]
  40d0c0:	mov    eax,ds:0x835d4b6c
  40d0c5:	addr16 mov edx,0x265ee7eb
  40d0cb:	popf   
  40d0cc:	jg     0x40d0f8
  40d0ce:	adc    ch,dl
  40d0d0:	mov    al,ds:0xe24ff982
  40d0d5:	jno    0x40d0e7
  40d0d7:	xor    al,0xcc
  40d0d9:	xchg   ebx,eax
  40d0da:	pushf  
  40d0db:	(bad)  
  40d0dc:	aas    
  40d0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0de:	(bad)  
  40d0df:	out    dx,eax
  40d0e0:	ins    BYTE PTR es:[edi],dx
  40d0e1:	cmp    eax,DWORD PTR [edi-0x3a56bc3c]
  40d0e7:	mov    esp,0xe20e9f2f
  40d0ec:	sub    DWORD PTR [edi],edi
  40d0ee:	sub    eax,0xf0d39b7f
  40d0f3:	xchg   ebp,eax
  40d0f4:	nop
  40d0f5:	cmp    BYTE PTR [edi+0x5e809552],dl
  40d0fb:	add    eax,0xb1c66671
  40d100:	inc    ebp
  40d101:	dec    esp
  40d102:	les    edx,FWORD PTR [edx+ebp*4+0x1155fca]
  40d109:	loopne 0x40d113
  40d10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d10c:	inc    ebp
  40d10d:	outs   dx,BYTE PTR ds:[esi]
  40d10e:	pop    esi
  40d10f:	pop    eax
  40d110:	mov    ch,0x5a
  40d112:	jo     0x40d169
  40d114:	lds    ebx,FWORD PTR [edi-0x5ddacbe6]
  40d11a:	into   
  40d11b:	cmp    eax,DWORD PTR [eax]
  40d11d:	ret    0x5c13
  40d120:	and    eax,edx
  40d122:	mov    dh,0x69
  40d124:	cwde   
  40d125:	js     0x40d19f
  40d127:	mov    ds:0xbc2621d4,al
  40d12c:	cwde   
  40d12d:	push   ecx
  40d12e:	add    dl,BYTE PTR [edi+ecx*1]
  40d131:	jb     0x40d0ee
  40d133:	nop
  40d134:	fist   WORD PTR [esi+0x66f77e03]
  40d13a:	xchg   ecx,eax
  40d13b:	adc    ebp,DWORD PTR [ecx]
  40d13d:	add    BYTE PTR [ecx+0x1988f153],ah
  40d143:	adc    cl,BYTE PTR [ebx+0x6d7bf2cc]
  40d149:	sub    dh,dl
  40d14b:	adc    dl,ch
  40d14d:	xor    ebx,DWORD PTR [esi]
  40d14f:	sub    BYTE PTR [eax],ch
  40d151:	ret    
  40d152:	stc    
  40d153:	fbstp  TBYTE PTR [ecx-0x3b0add09]
  40d159:	or     al,0x4d
  40d15b:	ds data16 das 
  40d15e:	mov    WORD PTR [ebp+0x1aa18e11],?
  40d164:	mov    ecx,0x9517e10
  40d169:	test   BYTE PTR ds:0x5d45c43e,dh
  40d16f:	pop    ebx
  40d170:	push   ebx
  40d171:	test   eax,0x57314866
  40d176:	mul    BYTE PTR [edi-0x74]
  40d179:	iret   
  40d17a:	pop    ebp
  40d17b:	adc    BYTE PTR [eax-0x272b661e],ah
  40d181:	mov    eax,0x2bf4759e
  40d186:	jl     0x40d11b
  40d188:	xchg   esp,ecx
  40d18a:	push   es
  40d18b:	jb     0x40d171
  40d18d:	(bad)  
  40d18e:	popf   
  40d18f:	loope  0x40d13c
  40d191:	push   ss
  40d192:	jmp    0xfcae:0x38837012
  40d199:	mov    ah,0x66
  40d19b:	jg     0x40d205
  40d19d:	dec    edx
  40d19e:	ud2    
  40d1a0:	repz loop 0x40d131
  40d1a3:	ins    DWORD PTR es:[edi],dx
  40d1a4:	call   0xaa09:0x50c821ba
  40d1ab:	mov    bl,0xf0
  40d1ad:	and    edi,esp
  40d1af:	push   cs
  40d1b0:	cmp    esi,DWORD PTR [ebx]
  40d1b2:	xchg   esp,eax
  40d1b3:	sub    ah,BYTE PTR [ebx]
  40d1b5:	sbb    ah,BYTE PTR [ebx-0x3a]
  40d1b8:	fistp  QWORD PTR [edi-0xf0aa134]
  40d1be:	xchg   ebp,eax
  40d1bf:	int    0xa8
  40d1c1:	jno    0x40d205
  40d1c3:	xchg   ebx,eax
  40d1c4:	lods   al,BYTE PTR ds:[esi]
  40d1c5:	pop    edi
  40d1c6:	add    al,0x19
  40d1c8:	(bad)  
  40d1c9:	pop    es
  40d1ca:	rcr    edx,1
  40d1cc:	ins    DWORD PTR es:[edi],dx
  40d1cd:	sub    eax,0xce668bcd
  40d1d2:	pop    ebp
  40d1d3:	or     DWORD PTR [edx+0x332fdc3e],edx
  40d1d9:	or     BYTE PTR [eax-0x68],ah
  40d1dc:	sub    al,0x4
  40d1de:	cmp    DWORD PTR [ecx+0x27],esp
  40d1e1:	or     al,BYTE PTR [edx-0x54]
  40d1e4:	mov    dh,0xf1
  40d1e6:	push   esp
  40d1e7:	inc    esp
  40d1e8:	adc    BYTE PTR [edi],bl
  40d1ea:	(bad)  
  40d1eb:	shr    BYTE PTR [eax-0x6e],1
  40d1ee:	outs   dx,DWORD PTR ds:[esi]
  40d1ef:	je     0x40d256
  40d1f1:	repz mov al,0xa0
  40d1f4:	xor    al,0xfb
  40d1f6:	sbb    ch,BYTE PTR [eax-0x63f73df]
  40d1fc:	sahf   
  40d1fd:	imul   edi,esi,0xffffffef
  40d200:	jnp    0x40d1da
  40d202:	sbb    edi,DWORD PTR [eax]
  40d204:	push   ebx
  40d205:	cmp    al,0x28
  40d207:	jecxz  0x40d271
  40d209:	shl    DWORD PTR [esi],cl
  40d20b:	cli    
  40d20c:	jle    0x40d207
  40d20e:	and    BYTE PTR [ebx-0x498a089b],ch
  40d214:	mov    DWORD PTR [eax+0x1629672d],esi
  40d21a:	lahf   
  40d21b:	fisttp QWORD PTR [esi-0xc6b6c0f]
  40d221:	mov    esi,ebx
  40d223:	into   
  40d224:	fsubrp st(7),st
  40d226:	lar    ebx,WORD PTR [eax-0x42]
  40d22a:	cmp    BYTE PTR [eax-0x31],cl
  40d22d:	enter  0xfcd7,0x98
  40d231:	cs mov cl,0x2d
  40d234:	into   
  40d235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d236:	inc    ebp
  40d237:	sub    DWORD PTR [edx],0x39
  40d23a:	and    al,0xa6
  40d23c:	xadd   BYTE PTR [esi],al
  40d23f:	(bad)  
  40d240:	pop    ss
  40d241:	mov    al,ds:0x32d9bdf1
  40d246:	pop    ebp
  40d247:	add    ebp,ebx
  40d249:	clc    
  40d24a:	mov    bh,0x61
  40d24c:	outs   dx,BYTE PTR ds:[esi]
  40d24d:	ja     0x40d262
  40d24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d250:	jp     0x40d1f1
  40d252:	retf   
  40d253:	push   ebx
  40d254:	aas    
  40d255:	dec    ebp
  40d256:	mov    bp,0xf6d1
  40d25a:	and    BYTE PTR [edx+0x2880f59d],0x51
  40d261:	fmul   QWORD PTR [edx+0x63]
  40d264:	mov    bh,0x4a
  40d266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d267:	aaa    
  40d268:	mov    bh,0xc7
  40d26a:	adc    DWORD PTR [ecx],edi
  40d26c:	or     BYTE PTR [ecx-0x7],cl
  40d26f:	push   es
  40d270:	fs add BYTE PTR es:[edi-0x2c990b60],al
  40d278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d279:	dec    ebx
  40d27a:	das    
  40d27b:	test   DWORD PTR [ebp-0x31d96c06],esi
  40d281:	(bad)  
  40d282:	cwd    
  40d284:	dec    edi
  40d285:	setp   ch
  40d288:	int    0x84
  40d28a:	test   al,0xa3
  40d28c:	xchg   ebx,eax
  40d28d:	lahf   
  40d28e:	dec    ebp
  40d28f:	lahf   
  40d290:	add    eax,DWORD PTR [esi-0x9cd36af]
  40d296:	xor    eax,0xc86bab84
  40d29b:	push   0xffffffe0
  40d29d:	and    al,0x7c
  40d29f:	mov    DWORD PTR [eax+0x55],0x8c98caf5
  40d2a6:	sti    
  40d2a7:	xchg   ecx,eax
  40d2a8:	dec    edx
  40d2a9:	les    esi,FWORD PTR [ebp+ebp*8+0x1a]
  40d2ad:	jp     0x40d28e
  40d2af:	dec    ebp
  40d2b0:	cmp    cl,0xca
  40d2b3:	daa    
  40d2b4:	xlat   BYTE PTR ds:[ebx]
  40d2b5:	daa    
  40d2b6:	popa   
  40d2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b8:	mov    fs:0xd34b04b8,al
  40d2be:	sbb    al,0x43
  40d2c0:	fucomip st,st(4)
  40d2c2:	les    esi,FWORD PTR [esi+0x13]
  40d2c5:	mov    bl,BYTE PTR [eax+0x43]
  40d2c8:	xchg   esi,eax
  40d2c9:	mov    BYTE PTR [edi-0x7d],cl
  40d2cc:	mov    ah,ah
  40d2ce:	push   cs
  40d2cf:	mov    bl,0x79
  40d2d1:	jmp    0x40d327
  40d2d3:	retf   0x7ada
  40d2d6:	add    al,0xba
  40d2d8:	retf   0x12dd
  40d2db:	add    BYTE PTR [edi-0x33],ah
  40d2de:	mov    al,ds:0x678591fa
  40d2e3:	ret    
  40d2e4:	xchg   esp,eax
  40d2e5:	jnp    0x40d2ce
  40d2e7:	cld    
  40d2e8:	in     eax,dx
  40d2e9:	pop    ss
  40d2ea:	shl    BYTE PTR [edx-0x7a],0xb0
  40d2ee:	dec    DWORD PTR [edi+0x2b]
  40d2f1:	jmp    0xc500026c
  40d2f6:	sbb    eax,0xab776d91
  40d2fb:	mov    al,0xf0
  40d2fd:	sub    DWORD PTR [ebx-0x25],0x78
  40d301:	cs call 0xcaae:0x61ca5a86
  40d309:	push   es
  40d30a:	sub    DWORD PTR [edx],ebx
  40d30c:	lods   eax,DWORD PTR ds:[esi]
  40d30d:	(bad)  
  40d30e:	repz inc eax
  40d310:	add    BYTE PTR [edi],ah
  40d312:	jb     0x40d365
  40d314:	xchg   esp,eax
  40d315:	in     al,0xe8
  40d317:	(bad)  
  40d319:	leave  
  40d31a:	out    0xa9,al
  40d31c:	push   ss
  40d31d:	ficom  WORD PTR [edx]
  40d31f:	ins    DWORD PTR es:[edi],dx
  40d320:	imul   ebx,DWORD PTR [edi+edi*1-0x1ec9e0e2],0xbea62545
  40d32b:	and    BYTE PTR [esi+0x46],0xa1
  40d32f:	jp     0x40d360
  40d331:	xchg   esp,eax
  40d332:	pusha  
  40d333:	lds    ecx,FWORD PTR [ebp-0x6aa8937c]
  40d339:	jmp    0xfec8:0x432a1706
  40d340:	es es out 0x9b,al
  40d344:	fcomp  st(2)
  40d346:	add    DWORD PTR [eax+eax*4+0x57],ebp
  40d34a:	test   DWORD PTR [ebx+0x4e],eax
  40d34d:	sbb    eax,0x2106abcf
  40d352:	pop    esp
  40d353:	lods   al,BYTE PTR ds:[esi]
  40d354:	aas    
  40d355:	cli    
  40d356:	fstp   QWORD PTR ds:0x559c1b2b
  40d35c:	mov    ds:0xc3d59d2e,al
  40d361:	ss dec edi
  40d363:	iret   
  40d364:	dec    edx
  40d365:	loope  0x40d3be
  40d367:	(bad)  
  40d369:	fwait
  40d36a:	out    0xbc,eax
  40d36c:	pop    ebp
  40d36d:	fsub   st,st(0)
  40d36f:	pop    esp
  40d370:	inc    esp
  40d371:	clc    
  40d372:	xor    esp,DWORD PTR [edx]
  40d374:	jg     0x40d389
  40d376:	stc    
  40d377:	push   edx
  40d378:	arpl   WORD PTR [edx+0x5],bp
  40d37b:	xor    al,0x55
  40d37d:	rol    DWORD PTR [ebx],1
  40d37f:	or     ebx,DWORD PTR [ebp-0x53]
  40d382:	mov    edi,0x4a579516
  40d387:	xor    bh,0xcf
  40d38a:	arpl   WORD PTR [esi+eiz*8+0x6b],di
  40d38e:	dec    esi
  40d38f:	je     0x40d408
  40d391:	xor    al,0x1
  40d393:	retf   0xe9b2
  40d396:	or     al,0x8
  40d398:	out    0x12,eax
  40d39a:	(bad)  
  40d39c:	ror    ah,cl
  40d39e:	jb     0x40d3e2
  40d3a0:	jge    0x40d3f7
  40d3a2:	xchg   ebp,eax
  40d3a3:	xor    eax,0x9c2bdb09
  40d3a8:	out    dx,eax
  40d3a9:	stos   BYTE PTR es:[edi],al
  40d3aa:	pop    ebx
  40d3ac:	pop    ebx
  40d3ad:	push   ecx
  40d3ae:	add    al,BYTE PTR ds:0x30ddf51b
  40d3b4:	adc    eax,0x16f01ec7
  40d3b9:	jecxz  0x40d3b9
  40d3bb:	adc    bh,BYTE PTR [ebx]
  40d3bd:	jb     0x40d420
  40d3bf:	mov    cl,0x6b
  40d3c1:	pop    esp
  40d3c2:	sbb    eax,ebp
  40d3c4:	sahf   
  40d3c5:	pop    eax
  40d3c6:	bnd jg 0x40d3d2
  40d3c9:	mov    edi,0x244cb8fc
  40d3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d0:	in     eax,dx
  40d3d1:	loop   0x40d3ce
  40d3d3:	sub    eax,0xcffd4a36
  40d3d8:	or     BYTE PTR gs:[ebx-0x65],dl
  40d3dc:	dec    ebp
  40d3dd:	ja     0x40d3ac
  40d3df:	push   eax
  40d3e0:	repz aam 0x30
  40d3e3:	std    
  40d3e4:	rcl    DWORD PTR [ecx-0x53f6cfe7],0x88
  40d3eb:	cmp    eax,0xcade6e41
  40d3f0:	fnstcw WORD PTR [edx]
  40d3f2:	mov    eax,0x3494929
  40d3f7:	pop    esp
  40d3f8:	sub    DWORD PTR [eax+0x58217e73],ebx
  40d3fe:	sbb    al,0x53
  40d400:	lahf   
  40d401:	(bad)  
  40d403:	repnz cmp DWORD PTR [ebx],0x4185ffa9
  40d40a:	repz jo 0x40d3cc
  40d40d:	mov    fs,WORD PTR [ecx+0x23b33d60]
  40d413:	dec    ecx
  40d414:	inc    esi
  40d415:	cmp    edx,DWORD PTR [esi+0x5e99c00]
  40d41b:	popa   
  40d41c:	data16 scas al,BYTE PTR es:[edi]
  40d41e:	mov    bh,0xaf
  40d420:	pop    ebx
  40d421:	xor    bl,BYTE PTR [edx-0x36]
  40d424:	sub    al,0x46
  40d426:	ret    
  40d427:	into   
  40d428:	fisttp DWORD PTR [esi-0xea77774]
  40d42e:	cdq    
  40d42f:	add    DWORD PTR [edi-0x17856995],ebp
  40d435:	es xchg ecx,eax
  40d437:	pop    eax
  40d438:	sub    al,BYTE PTR [edi-0x2f0b2571]
  40d43e:	dec    ecx
  40d43f:	clc    
  40d440:	aas    
  40d441:	scas   al,BYTE PTR es:[edi]
  40d442:	fcomp  DWORD PTR [esi-0x7a]
  40d445:	pop    esi
  40d446:	mov    gs,WORD PTR [ebx]
  40d448:	mov    ds:0x3ace4764,eax
  40d44d:	add    DWORD PTR [esi+0x6ce5422c],esp
  40d453:	in     al,0x50
  40d455:	cwde   
  40d456:	scas   al,BYTE PTR es:[edi]
  40d457:	iret   
  40d458:	xor    cl,BYTE PTR [eax+0x279924ed]
  40d45e:	imul   esp,DWORD PTR [esi-0x70],0x8e2e6c80
  40d465:	and    DWORD PTR [ebx+esi*1+0x17],ecx
  40d469:	inc    eax
  40d46a:	pop    ss
  40d46b:	shr    DWORD PTR [ebp-0x63],0x59
  40d46f:	jp     0x40d461
  40d471:	iret   
  40d472:	fwait
  40d473:	mov    al,0x1
  40d475:	sub    BYTE PTR [edi-0x80],bl
  40d478:	pop    ebp
  40d479:	mov    ds,WORD PTR [esi]
  40d47b:	fdiv   DWORD PTR [edx]
  40d47d:	out    0xd6,al
  40d47f:	fdivr  DWORD PTR [ebx-0x5b]
  40d482:	in     eax,dx
  40d483:	pop    eax
  40d484:	pusha  
  40d485:	loope  0x40d4de
  40d487:	in     al,0xbe
  40d489:	in     eax,dx
  40d48a:	not    ch
  40d48c:	dec    edx
  40d48d:	stos   DWORD PTR es:[edi],eax
  40d48e:	push   es
  40d48f:	mov    eax,0xc0a90ce7
  40d494:	xor    eax,0x9a4fdd6b
  40d499:	dec    esi
  40d49a:	test   eax,0x2e0a75c4
  40d49f:	lods   eax,DWORD PTR ds:[esi]
  40d4a0:	shr    DWORD PTR [ecx-0x427a7f06],cl
  40d4a6:	push   esp
  40d4a7:	add    eax,0x16e6e512
  40d4ac:	pop    ebp
  40d4ad:	mov    ch,0xf7
  40d4af:	mov    eax,0xa567fbc3
  40d4b4:	sub    bl,BYTE PTR [esi-0x5c]
  40d4b7:	jbe    0x40d447
  40d4b9:	(bad)  
  40d4bb:	mov    eax,ds:0x8635387e
  40d4c0:	jp     0x40d4ed
  40d4c2:	or     ebx,ebx
  40d4c4:	inc    ebx
  40d4c5:	mov    esi,0x2f6da538
  40d4ca:	fwait
  40d4cb:	xchg   ebp,eax
  40d4cc:	pop    eax
  40d4cd:	or     esp,DWORD PTR [ebp+0x6b]
  40d4d0:	sar    BYTE PTR [edi-0xea1a19c],cl
  40d4d6:	xlat   BYTE PTR ds:[ebx]
  40d4d7:	sub    eax,0x5c3bbd00
  40d4dc:	sbb    bh,ch
  40d4de:	repnz dec ecx
  40d4e0:	enter  0xfe0d,0x97
  40d4e4:	pop    ebp
  40d4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e6:	mov    bh,0xbd
  40d4e8:	sar    DWORD PTR fs:[ecx],0x4d
  40d4ec:	jg     0x40d4a7
  40d4ee:	xchg   dl,dh
  40d4f0:	cmp    bl,BYTE PTR [edx]
  40d4f2:	or     esi,ecx
  40d4f4:	xor    eax,0xfb34c6a6
  40d4f9:	and    cl,bh
  40d4fb:	(bad)  
  40d4fc:	(bad)  
  40d4fd:	push   esi
  40d4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ff:	pop    eax
  40d500:	fs xchg ebp,eax
  40d502:	lock pushf 
  40d504:	sti    
  40d505:	out    0xdb,eax
  40d507:	and    BYTE PTR [edi],bh
  40d509:	repz cmp BYTE PTR [ebx-0x5c],0x37
  40d50e:	loopne 0x40d4e1
  40d510:	jno    0x40d52e
  40d512:	xor    dh,BYTE PTR [ebx+0x74ea512b]
  40d518:	cdq    
  40d519:	jecxz  0x40d4ea
  40d51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51c:	mov    ebx,0xb6f356da
  40d521:	dec    ecx
  40d522:	push   cs
  40d523:	inc    edi
  40d524:	addr16 sti 
  40d526:	lea    ecx,[ebp+eiz*1-0x4e3d3a2d]
  40d52d:	pushf  
  40d52e:	int3   
  40d52f:	in     eax,dx
  40d530:	fisttp QWORD PTR [ebp+0x2cb06691]
  40d536:	clc    
  40d537:	ins    BYTE PTR es:[edi],dx
  40d538:	pop    eax
  40d539:	cmp    edi,DWORD PTR [ebx+0x29]
  40d53c:	mov    ebx,0x31b7d421
  40d541:	imul   esp,DWORD PTR [ecx-0x7b],0xffffff91
  40d545:	and    eax,0x3681d042
  40d54a:	(bad)  
  40d54b:	sbb    BYTE PTR [edi+0x21],dh
  40d54e:	fdiv   QWORD PTR [ecx+0x262cde91]
  40d554:	popf   
  40d555:	jmp    0x40d569
  40d557:	stc    
  40d558:	mov    dl,0x9b
  40d55a:	out    dx,al
  40d55b:	inc    edx
  40d55c:	sbb    BYTE PTR [edi-0x559d44e9],bh
  40d562:	stos   BYTE PTR es:[edi],al
  40d563:	(bad)  
  40d564:	fdivr  st(3),st
  40d566:	popf   
  40d567:	pop    ebp
  40d568:	dec    edi
  40d569:	mov    ecx,0x1201fd18
  40d56e:	and    BYTE PTR [ebx-0x7a3c99b0],bh
  40d574:	call   0x8011:0xf1afcb3a
  40d57b:	push   0x3a
  40d57d:	(bad)  
  40d57f:	mov    cl,0xa0
  40d581:	fwait
  40d582:	xor    al,0x2c
  40d584:	daa    
  40d585:	jne    0x40d557
  40d587:	(bad)  
  40d588:	cs jae 0x40d5b5
  40d58b:	jg     0x40d54c
  40d58d:	mov    WORD PTR [ebx-0x369228e8],cs
  40d593:	mov    ah,0x43
  40d595:	jb     0x40d55e
  40d597:	popa   
  40d598:	repnz jmp 0x6064:0xbfeccfe3
  40d5a0:	mov    ebp,cs
  40d5a2:	dec    edx
  40d5a3:	stos   DWORD PTR es:[edi],eax
  40d5a4:	pushf  
  40d5a5:	mov    bp,dx
  40d5a8:	sub    eax,0x1551dcba
  40d5ad:	out    dx,al
  40d5ae:	xor    DWORD PTR es:[ebx+eiz*1+0x6e],esp
  40d5b3:	push   ecx
  40d5b4:	sub    dl,cl
  40d5b6:	xor    DWORD PTR [eax],esi
  40d5b8:	daa    
  40d5b9:	jno    0x40d5dd
  40d5bb:	mov    esp,DWORD PTR [ebx+eiz*8-0x27b90060]
  40d5c2:	jnp    0x40d588
  40d5c4:	in     al,dx
  40d5c5:	aaa    
  40d5c6:	and    al,0x9e
  40d5c8:	cmp    dh,BYTE PTR [esi+eax*2]
  40d5cb:	xchg   esi,eax
  40d5cc:	in     al,0x14
  40d5ce:	mov    ds:0x19151bce,eax
  40d5d3:	inc    ebp
  40d5d4:	push   ebx
  40d5d5:	imul   ebx,DWORD PTR [ebx+0x36],0xd3d12c39
  40d5dc:	(bad)  
  40d5dd:	or     cl,bl
  40d5df:	add    ebx,edx
  40d5e1:	mov    ds:0x64139f09,al
  40d5e6:	leave  
  40d5e7:	xchg   DWORD PTR [ebp-0x25],eax
  40d5ea:	out    dx,al
  40d5eb:	jmp    0xe634f230
  40d5f0:	addr16 das 
  40d5f2:	fiadd  WORD PTR [edi+0x3985fbde]
  40d5f8:	pop    ecx
  40d5f9:	xchg   BYTE PTR [edi-0x32],bh
  40d5fc:	retf   0x5d80
  40d5ff:	mov    ah,0x99
  40d601:	jmp    0x1bff:0xf6c1e8ab
  40d608:	add    eax,0x844f997
  40d60d:	and    ch,BYTE PTR ds:0x50f4516
  40d613:	fs xchg ebx,eax
  40d615:	mov    ds:0xe792226b,eax
  40d61a:	daa    
  40d61b:	dec    edx
  40d61c:	outs   dx,BYTE PTR ds:[esi]
  40d61d:	dec    ecx
  40d61e:	xor    ebp,DWORD PTR [esp+ebx*4]
  40d621:	pop    ss
  40d622:	sub    ebx,edi
  40d624:	xchg   edx,eax
  40d625:	das    
  40d626:	lds    ebx,FWORD PTR ds:0x3843e954
  40d62c:	cmp    BYTE PTR [esi+0x25],0x8b
  40d630:	adc    dh,ch
  40d632:	and    al,0x1
  40d634:	into   
  40d635:	inc    esi
  40d636:	jb     0x40d642
  40d638:	into   
  40d639:	pop    edx
  40d63a:	jb     0x40d620
  40d63c:	add    bl,BYTE PTR [edi+ecx*1-0x22f4dfb9]
  40d643:	mov    ecx,0x31d4dbd0
  40d648:	push   0x80bbed02
  40d64d:	pop    ecx
  40d64e:	xchg   ebx,eax
  40d64f:	push   esi
  40d650:	daa    
  40d651:	fcom   QWORD PTR fs:[eax]
  40d654:	shl    esp,0xbc
  40d657:	arpl   bx,cx
  40d659:	pop    esi
  40d65a:	cmp    BYTE PTR [ebp+0x50],bh
  40d65d:	add    al,BYTE PTR [esp+ecx*4]
  40d660:	mov    fs,WORD PTR [edx]
  40d662:	jns    0x40d6be
  40d664:	dec    eax
  40d665:	and    DWORD PTR [ecx],edx
  40d667:	or     DWORD PTR [eax+edx*1],esi
  40d66a:	scas   eax,DWORD PTR es:[edi]
  40d66b:	popa   
  40d66c:	mov    WORD PTR [esi],es
  40d66e:	push   eax
  40d66f:	scas   al,BYTE PTR es:[edi]
  40d670:	sub    al,0xc
  40d672:	xchg   ecx,eax
  40d673:	shr    DWORD PTR [ebx],1
  40d675:	push   esi
  40d676:	xchg   edi,eax
  40d677:	aad    0x9d
  40d679:	pop    ecx
  40d67a:	jmp    0xb2da3ba
  40d67f:	mov    esi,0x9d2d5375
  40d684:	fdivr  DWORD PTR [edi+0x33e76ee7]
  40d68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68b:	inc    ebp
  40d68c:	pop    edx
  40d68d:	dec    edi
  40d68e:	loopne 0x40d708
  40d690:	jl     0x40d6de
  40d692:	fchs   
  40d694:	jb     0x384e2bf3
  40d69a:	adc    edi,DWORD PTR [eax]
  40d69c:	push   ecx
  40d69d:	mov    bh,BYTE PTR [ebx-0x3ccb703f]
  40d6a3:	call   0x9647cea2
  40d6a8:	leave  
  40d6a9:	adc    edi,DWORD PTR [ebx]
  40d6ab:	mov    esi,0xc0ae0923
  40d6b0:	popa   
  40d6b1:	dec    ebp
  40d6b2:	push   edx
  40d6b3:	fidiv  WORD PTR [ecx+0x6943d093]
  40d6b9:	scas   al,BYTE PTR es:[edi]
  40d6ba:	mov    ds:0xa019d5ca,al
  40d6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c0:	sub    al,0xab
  40d6c2:	or     eax,0xcf3cdd6d
  40d6c7:	mov    al,ds:0x4ec8ea93
  40d6cc:	retf   
  40d6cd:	or     DWORD PTR [ecx-0x281f7a85],ebp
  40d6d3:	mov    ebx,0xa814f428
  40d6d8:	mov    edx,0x9037d01c
  40d6dd:	bound  edx,QWORD PTR [ebx-0x80]
  40d6e0:	cmp    edx,DWORD PTR [ebp+0x3232ce3d]
  40d6e6:	cmp    BYTE PTR [esi+ebx*2],al
  40d6e9:	cmp    DWORD PTR [edi+ecx*8-0x44fc412b],ecx
  40d6f0:	imul   esp,eax,0xffffffb9
  40d6f3:	pop    ss
  40d6f4:	scas   eax,DWORD PTR es:[edi]
  40d6f5:	data16 jg 0x40d6c0
  40d6f8:	and    bh,BYTE PTR [edx]
  40d6fa:	test   BYTE PTR [esi],bl
  40d6fc:	cmp    ebp,ebp
  40d6fe:	sbb    ebx,DWORD PTR ds:0x16694b74
  40d704:	stos   BYTE PTR es:[edi],al
  40d705:	outs   dx,BYTE PTR ds:[esi]
  40d706:	or     edx,esp
  40d708:	cmp    dh,bl
  40d70a:	push   edx
  40d70b:	shl    DWORD PTR [ebx+ebx*8],cl
  40d70e:	and    ah,BYTE PTR [eax-0x273f5dfe]
  40d714:	mov    cl,0xf3
  40d716:	stos   DWORD PTR es:[edi],eax
  40d717:	inc    ebx
  40d718:	aaa    
  40d719:	inc    edi
  40d71a:	pushf  
  40d71b:	shl    ebp,cl
  40d71d:	adc    DWORD PTR [edi+0x7d],0xffffffd1
  40d721:	push   esp
  40d722:	std    
  40d723:	xor    ch,bh
  40d725:	(bad)  
  40d726:	pop    eax
  40d727:	sub    DWORD PTR [eax],eax
  40d729:	aam    0x2e
  40d72b:	mov    ecx,0xceecc1e2
  40d730:	add    eax,0x16d2b71e
  40d735:	jecxz  0x40d6fb
  40d737:	int    0xfc
  40d739:	or     cl,al
  40d73b:	mov    al,0x58
  40d73d:	pop    ebx
  40d73e:	scas   al,BYTE PTR es:[edi]
  40d73f:	mov    esp,0xa1c8baf1
  40d744:	or     al,0x51
  40d746:	and    esp,DWORD PTR [edi]
  40d748:	(bad)  
  40d749:	xor    DWORD PTR [ebx-0x529d1e47],esp
  40d74f:	ss mov ah,0xe2
  40d752:	repz add ebp,eax
  40d755:	inc    esp
  40d756:	xchg   BYTE PTR [esi-0x5ecdba51],bh
  40d75c:	adc    ch,bl
  40d75e:	xlat   BYTE PTR ds:[ebx]
  40d75f:	jmp    0x39699021
  40d764:	cmc    
  40d765:	mov    eax,0xfaf404b5
  40d76a:	mov    ebp,0x9274eeb5
  40d76f:	les    esi,FWORD PTR [esp+ebp*8+0x39]
  40d773:	aas    
  40d774:	call   0x24a46fd2
  40d779:	or     al,0xae
  40d77b:	nop
  40d77c:	pop    ds
  40d77d:	adc    al,0xfa
  40d77f:	test   eax,0xa49dfe74
  40d784:	cmp    DWORD PTR [ecx-0x39],eax
  40d787:	js     0x40d774
  40d789:	loop   0x40d74b
  40d78b:	cmp    bh,BYTE PTR [ecx+0x6c787eb9]
  40d791:	add    edx,DWORD PTR [edx-0x46]
  40d794:	inc    ecx
  40d795:	mov    ebx,0xd98270ad
  40d79a:	adc    esp,DWORD PTR [eax]
  40d79c:	pop    ss
  40d79d:	cmp    ecx,DWORD PTR [ebx-0x5373a42e]
  40d7a3:	pop    ecx
  40d7a4:	sbb    BYTE PTR [edi+edi*1+0x41c2ba7b],bl
  40d7ab:	stos   BYTE PTR es:[edi],al
  40d7ac:	mov    eax,?
  40d7ae:	push   edi
  40d7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b0:	stc    
  40d7b1:	cmc    
  40d7b2:	(bad)  
  40d7b3:	or     edx,DWORD PTR [edi+0x2]
  40d7b6:	iret   
  40d7b7:	sub    al,0xb0
  40d7b9:	adc    ebp,DWORD PTR [ebp-0x5]
  40d7bc:	sbb    DWORD PTR [edi+0x76],ebx
  40d7bf:	jno    0x40d79c
  40d7c1:	aam    0x3f
  40d7c3:	shr    BYTE PTR [edi],1
  40d7c5:	jmp    0x601f:0xa347521a
  40d7cc:	(bad)  
  40d7cd:	xchg   esp,eax
  40d7ce:	daa    
  40d7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d0:	adc    DWORD PTR [edi-0x52],0xffffffee
  40d7d4:	xchg   ebp,esp
  40d7d6:	jge    0x40d75b
  40d7d8:	mov    ah,0x15
  40d7da:	mov    bh,bh
  40d7dc:	mov    bl,BYTE PTR [ebp+0x7]
  40d7df:	stc    
  40d7e0:	fistp  DWORD PTR [edx+0x28]
  40d7e3:	sahf   
  40d7e4:	outs   dx,BYTE PTR ds:[esi]
  40d7e5:	xchg   ebp,eax
  40d7e6:	and    ebp,eax
  40d7e8:	ins    DWORD PTR es:[edi],dx
  40d7e9:	sub    DWORD PTR ds:0xf6660a00,esp
  40d7ef:	pop    esp
  40d7f0:	fcom   DWORD PTR [eax+0x4e]
  40d7f3:	icebp  
  40d7f4:	mov    cl,0x68
  40d7f6:	dec    ebp
  40d7f7:	arpl   WORD PTR [esi],dx
  40d7f9:	rol    BYTE PTR [edx],1
  40d7fb:	push   ebx
  40d7fc:	mov    WORD PTR [eax],?
  40d7fe:	inc    esi
  40d7ff:	repz dec ebx
  40d801:	sbb    DWORD PTR [edi],ebp
  40d803:	dec    ecx
  40d804:	icebp  
  40d805:	mov    esi,0xda2a97b8
  40d80a:	cwde   
  40d80b:	test   eax,0x39c1ad0e
  40d810:	inc    edx
  40d811:	sbb    eax,DWORD PTR [ebp+edx*4-0x15b3a97b]
  40d818:	push   eax
  40d819:	idiv   BYTE PTR [ecx]
  40d81b:	xchg   ecx,eax
  40d81c:	mov    edi,0x44cbcbc0
  40d821:	mov    al,ds:0x37e7f46a
  40d826:	mov    edi,0xcca2ac04
  40d82b:	xor    al,0xe8
  40d82d:	js     0x40d87f
  40d82f:	cs gs dec ecx
  40d832:	repnz outs dx,BYTE PTR ds:[esi]
  40d834:	push   ebx
  40d835:	sub    BYTE PTR [edi],ch
  40d837:	jns    0x40d8a0
  40d839:	(bad)  
  40d83a:	rcr    DWORD PTR [ebx+0x64],1
  40d83d:	inc    ebx
  40d83e:	mov    WORD PTR [ebp+0x3b02b9f7],fs
  40d844:	retf   
  40d845:	jne    0x40d8b7
  40d847:	bound  esi,QWORD PTR [ecx]
  40d849:	rol    cl,1
  40d84b:	mov    dh,dh
  40d84d:	pop    es
  40d84e:	or     al,0xd
  40d850:	jbe    0x40d812
  40d852:	cmp    ebp,DWORD PTR [esi+0x41161991]
  40d858:	cmp    edx,edx
  40d85a:	hlt    
  40d85b:	push   esi
  40d85c:	lods   eax,DWORD PTR ds:[esi]
  40d85d:	popf   
  40d85e:	push   eax
  40d85f:	jge    0x40d7fa
  40d861:	pop    ss
  40d862:	mov    ds:0xc5a6d46f,eax
  40d867:	sbb    esp,0xfffffff2
  40d86a:	cmp    al,BYTE PTR [edx-0x66ee5c72]
  40d870:	or     eax,0xb5acf30
  40d875:	sar    DWORD PTR es:[bx+di],0x25
  40d87a:	mov    ecx,0x3d1bfce2
  40d87f:	test   eax,0x2edbd20b
  40d884:	in     eax,dx
  40d885:	cli    
  40d886:	aam    0xda
  40d888:	push   cs
  40d889:	ds scas eax,DWORD PTR es:[edi]
  40d88b:	and    ecx,DWORD PTR [ecx]
  40d88d:	xor    ebx,eax
  40d88f:	pop    edi
  40d890:	int3   
  40d891:	add    esp,DWORD PTR [ecx+ecx*2+0x7c]
  40d895:	std    
  40d896:	ss or  bl,bl
  40d899:	mov    dl,0x74
  40d89b:	push   ss
  40d89c:	xchg   esp,eax
  40d89d:	cs xchg ecx,eax
  40d89f:	rol    edi,1
  40d8a1:	or     DWORD PTR [ebp+0x37827612],edx
  40d8a7:	ins    BYTE PTR es:[edi],dx
  40d8a8:	sbb    ch,BYTE PTR [eax+0x54]
  40d8ab:	imul   ecx,ecx,0xffffffb0
  40d8ae:	call   0x9ce4:0x35d4b257
  40d8b5:	lea    eax,[ebp-0x448ad98f]
  40d8bb:	xchg   ecx,eax
  40d8bc:	lds    esi,FWORD PTR [eax]
  40d8be:	jne    0x40d840
  40d8c0:	fwait
  40d8c1:	adc    esp,esp
  40d8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c4:	pop    es
  40d8c5:	sar    BYTE PTR [ecx],cl
  40d8c7:	push   ss
  40d8c8:	adc    al,0x9c
  40d8ca:	mov    edi,0xcf93d1b5
  40d8cf:	mov    ?,WORD PTR [eax]
  40d8d1:	fadd   QWORD PTR [edi-0x6897b4ca]
  40d8d7:	jmp    0x40d8a7
  40d8d9:	daa    
  40d8da:	data16 mov ah,0xd6
  40d8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8de:	ror    DWORD PTR [edx-0x786f6c53],cl
  40d8e4:	xlat   BYTE PTR ds:[ebx]
  40d8e5:	fidiv  WORD PTR [ecx+0x9]
  40d8e8:	addr16 dec edi
  40d8ea:	popa   
  40d8eb:	scas   eax,DWORD PTR es:[edi]
  40d8ec:	sbb    eax,0x369f3f7b
  40d8f1:	xchg   ebp,ebx
  40d8f3:	cdq    
  40d8f4:	sub    DWORD PTR [edx+ebp*1-0x60],0xffffffba
  40d8f9:	ins    BYTE PTR es:[edi],dx
  40d8fa:	and    esp,edx
  40d8fc:	pop    esp
  40d8fd:	xor    ecx,DWORD PTR [ecx+0x351fb0a1]
  40d903:	sub    eax,0xc2c482ea
  40d908:	pop    ds
  40d909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90a:	jb     0x40d93c
  40d90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d90d:	adc    al,0x90
  40d90f:	test   al,0xea
  40d911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d912:	or     BYTE PTR [eax-0x5347b35],bh
  40d918:	cli    
  40d919:	test   dl,al
  40d91b:	adc    eax,0x5498cb5
  40d920:	pop    ds
  40d921:	not    dl
  40d923:	cmp    BYTE PTR [ecx+0x1e],0xa
  40d927:	or     eax,0x5cf70c58
  40d92c:	sub    bh,BYTE PTR [edx+0x3c]
  40d92f:	xor    ebp,DWORD PTR [edi]
  40d931:	jle    0x40d96c
  40d933:	pop    ebp
  40d934:	mov    edx,0x1122c6be
  40d939:	(bad)  
  40d93a:	in     al,dx
  40d93b:	xor    bl,BYTE PTR [ebx]
  40d93d:	es pop eax
  40d93f:	jns    0x40d95e
  40d941:	push   ecx
  40d942:	mov    al,0x0
  40d944:	lods   al,BYTE PTR ds:[esi]
  40d945:	inc    edi
  40d946:	and    DWORD PTR [edx],edi
  40d948:	div    DWORD PTR [ebp-0x6b838bc1]
  40d94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94f:	loope  0x40d960
  40d951:	add    al,0x9b
  40d953:	cs out 0x4d,al
  40d956:	xor    BYTE PTR [ecx],bl
  40d958:	pop    eax
  40d959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95a:	adc    al,0xd9
  40d95c:	jo     0x40d920
  40d95e:	or     al,BYTE PTR [ecx-0x6037afa8]
  40d964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d965:	and    eax,0x2bb89e64
  40d96a:	sbb    cl,cl
  40d96c:	ss mov al,0xdb
  40d96f:	mov    ah,0x5f
  40d971:	add    al,0xd7
  40d973:	cld    
  40d974:	sbb    al,0xf8
  40d976:	add    edx,DWORD PTR [ebx]
  40d978:	out    dx,eax
  40d979:	mov    ?,WORD PTR [ebp-0x231f9d17]
  40d97f:	ret    0x263c
  40d982:	xchg   DWORD PTR [edi],ecx
  40d984:	sbb    DWORD PTR [ebx],edi
  40d986:	std    
  40d987:	pop    ss
  40d988:	repnz cdq 
  40d98a:	aad    0xbf
  40d98c:	mov    WORD PTR [edx+0x64],gs
  40d98f:	mov    eax,ds:0x804a84b8
  40d994:	stos   DWORD PTR es:[edi],eax
  40d995:	(bad)  
  40d996:	xchg   ebx,eax
  40d997:	sbb    eax,0x32e6510e
  40d99c:	mov    WORD PTR [eax],ds
  40d99e:	dec    ecx
  40d99f:	xchg   esp,eax
  40d9a0:	fwait
  40d9a1:	xchg   ebx,eax
  40d9a2:	or     BYTE PTR [edi+0x31da0cc9],0x2d
  40d9a9:	adc    eax,0x36c2b3cb
  40d9ae:	push   eax
  40d9af:	jns    0x40d9ae
  40d9b1:	bound  esp,QWORD PTR [ebp+0x41]
  40d9b4:	call   0x7305afd7
  40d9b9:	jle    0x40da1f
  40d9bb:	retf   
  40d9bc:	aad    0x7b
  40d9be:	sahf   
  40d9bf:	and    cl,BYTE PTR ds:[ecx+0x4b7f2e6e]
  40d9c6:	jmp    0x40d94a
  40d9c8:	jns    0x40da0b
  40d9ca:	call   0x8519:0x4d6871ca
  40d9d1:	aam    0x63
  40d9d3:	int3   
  40d9d4:	xchg   edx,eax
  40d9d5:	add    BYTE PTR ds:0xce79b502,ah
  40d9db:	cwde   
  40d9dc:	dec    ecx
  40d9dd:	push   es
  40d9de:	cmp    BYTE PTR [esi],0xab
  40d9e1:	shl    DWORD PTR [esp+eax*1],1
  40d9e4:	fisub  DWORD PTR [ecx+edx*2]
  40d9e7:	ins    DWORD PTR es:[edi],dx
  40d9e8:	pop    esi
  40d9e9:	jb     0x40da3f
  40d9eb:	xchg   edx,eax
  40d9ec:	xor    DWORD PTR [esi],edi
  40d9ee:	outs   dx,DWORD PTR ds:[esi]
  40d9ef:	and    BYTE PTR [esi-0x5f9320b0],dh
  40d9f5:	push   0x68
  40d9f7:	(bad)  ds:0x92eaeb8b
  40d9fd:	mov    DWORD PTR [eax],0x1ffd1b8c
  40da03:	sub    BYTE PTR [ebx],bl
  40da05:	jns    0x40da22
  40da07:	jecxz  0x40da45
  40da09:	pop    ss
  40da0a:	ds inc esi
  40da0c:	jne    0x40d9e5
  40da0e:	cmp    DWORD PTR [esp+ecx*1],eax
  40da11:	xor    bh,ah
  40da13:	sbb    al,0xd0
  40da15:	or     eax,edi
  40da17:	inc    ebx
  40da18:	inc    esi
  40da19:	ja     0x40da81
  40da1b:	in     eax,0xb1
  40da1d:	mov    ds:0x3e97d9bb,al
  40da22:	add    al,0x42
  40da24:	js     0x40d9c3
  40da26:	push   ds
  40da27:	sbb    eax,0x6e169b8a
  40da2c:	ror    BYTE PTR [edx],0xd8
  40da2f:	js     0x40da61
  40da31:	mov    ch,0xa9
  40da33:	int    0xb5
  40da35:	jns    0x40d9d1
  40da37:	mov    cl,0xab
  40da39:	inc    eax
  40da3a:	adc    eax,0x3abbaeaf
  40da3f:	dec    ebp
  40da40:	lahf   
  40da41:	mov    esi,0xd82f2ae4
  40da46:	xchg   esp,eax
  40da47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da48:	sub    BYTE PTR [ebp+ebx*8+0x4fbcf03],dh
  40da4f:	mov    ds:0xa8391885,al
  40da54:	popa   
  40da55:	add    eax,0x19e9b1e9
  40da5a:	add    eax,0xbf466db8
  40da5f:	popa   
  40da60:	inc    ecx
  40da61:	mov    dh,0xd1
  40da63:	shl    BYTE PTR [ebx-0x3896ad06],cl
  40da69:	cdq    
  40da6a:	push   esp
  40da6b:	fisubr WORD PTR [edx+0x79]
  40da6e:	daa    
  40da6f:	pop    ecx
  40da70:	xor    cl,BYTE PTR [eax+esi*4+0x28]
  40da74:	push   0x5f38a7fc
  40da79:	pushf  
  40da7a:	jo     0x40daa9
  40da7c:	(bad)  
  40da7d:	or     BYTE PTR [ecx],bh
  40da7f:	or     al,0x3d
  40da81:	pop    edx
  40da82:	lahf   
  40da83:	cmp    dh,cl
  40da85:	adc    al,0x68
  40da87:	(bad)
  40da8a:	mov    DWORD PTR [esi-0x5be3dcb2],esp
  40da90:	rcr    BYTE PTR [edx-0x40eca88e],0xc3
  40da97:	jb     0x40da3c
  40da99:	imul   DWORD PTR [esp+eax*4]
  40da9c:	hlt    
  40da9d:	hlt    
  40da9e:	dec    ebx
  40da9f:	fistp  DWORD PTR [eax+0x74]
  40daa2:	out    0x27,al
  40daa4:	xchg   edx,eax
  40daa5:	and    ecx,esp
  40daa7:	ins    DWORD PTR es:[edi],dx
  40daa8:	cmp    al,0x2e
  40daaa:	cld    
  40daab:	scas   eax,DWORD PTR es:[edi]
  40daac:	js     0x40da73
  40daae:	int    0x55
  40dab0:	inc    ecx
  40dab1:	lods   eax,DWORD PTR ds:[esi]
  40dab2:	pop    eax
  40dab3:	test   DWORD PTR [ecx],edx
  40dab5:	mov    ss,WORD PTR [ebp-0x23bfe0aa]
  40dabb:	(bad)  
  40dabc:	mov    ecx,0xc02bf679
  40dac1:	xor    al,0x68
  40dac3:	sti    
  40dac4:	or     bl,BYTE PTR [edx+0x63]
  40dac7:	pop    esi
  40dac8:	mov    bl,0xd6
  40daca:	adc    edi,DWORD PTR [ebx-0x78]
  40dacd:	adc    al,0xf0
  40dacf:	in     eax,0xf3
  40dad1:	es mov edx,0x7672dc9f
  40dad7:	xchg   ebp,eax
  40dad8:	adc    al,0x2c
  40dada:	aad    0xd2
  40dadc:	jg     0x40da8e
  40dade:	sub    al,0xdf
  40dae0:	jne    0x40dad2
  40dae2:	cmc    
  40dae3:	mov    al,0x7e
  40dae5:	and    ecx,DWORD PTR [ecx+eiz*4-0x14]
  40dae9:	data16 out 0xec,al
  40daec:	les    ecx,FWORD PTR [eax+edi*8-0x7f]
  40daf0:	jmp    0x4a82db27
  40daf5:	add    bl,BYTE PTR [edi-0x3b]
  40daf8:	popa   
  40daf9:	inc    edx
  40dafa:	test   DWORD PTR [ebx+eiz*8-0x67e527f3],ebx
  40db01:	jne    0x40db7a
  40db03:	inc    ebx
  40db04:	adc    eax,0x3432656e
  40db09:	(bad)
  40db0e:	push   0x25
  40db10:	pop    eax
  40db11:	mov    ah,0x5c
  40db13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db14:	sub    al,0xf9
  40db16:	loopne 0x40db1c
  40db18:	or     ah,BYTE PTR [eax+0x3d99c277]
  40db1e:	xor    DWORD PTR [edx],esp
  40db20:	dec    ecx
  40db21:	int    0x2d
  40db23:	scas   al,BYTE PTR es:[edi]
  40db24:	ret    0x92c0
  40db27:	inc    edx
  40db28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db29:	dec    esp
  40db2a:	cli    
  40db2b:	xor    eax,0x80501de3
  40db30:	push   edx
  40db31:	sbb    al,0x6e
  40db33:	or     BYTE PTR [esp+esi*1-0x8],dl
  40db37:	mov    al,ds:0xfc98f4f3
  40db3c:	sbb    DWORD PTR [ebp-0x34],edx
  40db3f:	fs scas eax,DWORD PTR es:[edi]
  40db41:	push   es
  40db42:	push   ds
  40db43:	fmul   QWORD PTR [esi]
  40db45:	jecxz  0x40daf2
  40db47:	es xchg esp,eax
  40db49:	pop    ebx
  40db4a:	mov    ebp,0xc3d86e10
  40db4f:	pop    ds
  40db50:	cmp    eax,0xbaac12b
  40db55:	dec    DWORD PTR [esi+0x27]
  40db58:	popa   
  40db59:	cs loop 0x40db8a
  40db5c:	add    al,0x2c
  40db5e:	jb     0x40dbbb
  40db60:	cmp    bh,cl
  40db62:	test   DWORD PTR [eax],ecx
  40db64:	xchg   ebx,eax
  40db65:	jmp    0xeec99e8a
  40db6a:	mov    esi,0xde925698
  40db6f:	lods   eax,DWORD PTR ds:[esi]
  40db71:	or     BYTE PTR [edi+ebx*2-0x57],al
  40db75:	test   BYTE PTR [edi+eax*8],dh
  40db78:	dec    esi
  40db79:	daa    
  40db7a:	and    eax,0x6413919f
  40db7f:	pop    ds
  40db80:	mov    esi,DWORD PTR [edi]
  40db82:	int    0x2e
  40db84:	icebp  
  40db85:	mov    bh,0x8b
  40db87:	repz shr BYTE PTR [esi-0x72],1
  40db8b:	dec    edi
  40db8c:	xchg   esi,eax
  40db8d:	fstp   st(3)
  40db8f:	xchg   ebx,eax
  40db90:	cmp    BYTE PTR [ecx],cl
  40db92:	push   eax
  40db93:	mov    eax,0x99f1ab3a
  40db98:	xchg   al,ah
  40db9a:	or     DWORD PTR cs:[edx],0x53
  40db9e:	ins    DWORD PTR es:[edi],dx
  40db9f:	add    DWORD PTR [edi+edx*1+0x15333e78],0x7c
  40dba7:	rol    DWORD PTR [esi+edx*8],0x2b
  40dbab:	or     DWORD PTR [ebp+0x2350a6b6],ebp
  40dbb1:	clc    
  40dbb2:	jb     0x40dbcc
  40dbb4:	test   al,0xdf
  40dbb6:	es jmpw 0x5ff2
  40dbbb:	jnp    0x40db51
  40dbbd:	add    DWORD PTR [ebx+0x52],ebx
  40dbc0:	fistp  DWORD PTR [ebp-0x48d26db6]
  40dbc6:	inc    esp
  40dbc7:	pushf  
  40dbc8:	adc    eax,0x96f53ec3
  40dbcd:	ror    DWORD PTR [eax+edx*2-0x6931e2fe],cl
  40dbd4:	and    ecx,eax
  40dbd6:	inc    ecx
  40dbd7:	cmp    al,ch
  40dbd9:	cmc    
  40dbda:	cmp    ebx,ebp
  40dbdc:	push   esi
  40dbdd:	cmp    BYTE PTR [ebx-0x2c],0x5c
  40dbe1:	pop    edx
  40dbe2:	cmc    
  40dbe3:	sub    DWORD PTR [edx+0x47],ebp
  40dbe6:	out    dx,eax
  40dbe7:	in     al,0x40
  40dbe9:	dec    ecx
  40dbea:	push   ds
  40dbeb:	cdq    
  40dbec:	push   esi
  40dbed:	in     al,dx
  40dbee:	jl     0x40dc06
  40dbf0:	mov    BYTE PTR [ecx],ch
  40dbf2:	daa    
  40dbf3:	scas   eax,DWORD PTR es:[edi]
  40dbf4:	gs pop ebp
  40dbf6:	mov    ds:0xd90d6e2b,eax
  40dbfb:	dec    edx
  40dbfc:	shl    BYTE PTR [esi-0x68a662be],0x3f
  40dc03:	mov    ecx,0x64a58ad2
  40dc08:	pusha  
  40dc09:	stos   BYTE PTR es:[edi],al
  40dc0a:	dec    eax
  40dc0b:	outs   dx,BYTE PTR ds:[esi]
  40dc0c:	cmc    
  40dc0d:	(bad)  
  40dc0e:	jne    0x40dc3e
  40dc10:	sbb    ecx,DWORD PTR [ecx]
  40dc12:	dec    edx
  40dc13:	xor    al,0x72
  40dc15:	das    
  40dc16:	clc    
  40dc17:	sbb    eax,0x331ca71a
  40dc1c:	pop    edi
  40dc1d:	xchg   edx,eax
  40dc1e:	push   edx
  40dc1f:	out    0x12,al
  40dc21:	es fwait
  40dc23:	and    DWORD PTR cs:[edx-0x50],0x10
  40dc28:	push   edi
  40dc29:	jmp    0x40dbc4
  40dc2b:	jp     0x40dc1f
  40dc2d:	adc    edx,DWORD PTR [esi]
  40dc2f:	mov    edx,0x1131b901
  40dc34:	sti    
  40dc35:	cmc    
  40dc36:	mov    dl,0x73
  40dc38:	jmp    0x40dc1b
  40dc3a:	add    al,0xd5
  40dc3c:	add    DWORD PTR [ebx-0x6f],0x6d
  40dc40:	mov    BYTE PTR [edx+eiz*1-0x13],al
  40dc44:	push   edx
  40dc45:	adc    edi,eax
  40dc47:	addr16 js 0x40dc65
  40dc4a:	sbb    eax,0x5299483e
  40dc4f:	std    
  40dc50:	pop    ds
  40dc51:	(bad)  
  40dc52:	fbstp  TBYTE PTR [esi+0xd99c798]
  40dc58:	nop
  40dc59:	div    BYTE PTR ss:[eax+0x11]
  40dc5d:	mov    esi,0x77686634
  40dc62:	push   esp
  40dc63:	push   eax
  40dc64:	inc    ebx
  40dc65:	push   0xaf6ae8c7
  40dc6a:	jp     0x40dcb9
  40dc6c:	and    DWORD PTR [ecx],esi
  40dc6e:	fidiv  WORD PTR [edi+ebx*4-0x27708ed1]
  40dc75:	cs dec esp
  40dc77:	out    dx,al
  40dc78:	(bad)  
  40dc79:	pop    ebx
  40dc7a:	aam    0xba
  40dc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc7d:	jns    0x40dc1a
  40dc7f:	xchg   ecx,eax
  40dc80:	or     dh,BYTE PTR [eax]
  40dc82:	ret    0x3483
  40dc85:	cwde   
  40dc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc87:	addr16 and al,0x72
  40dc8a:	add    eax,0x217a8f3a
  40dc8f:	xchg   BYTE PTR [ecx+eax*2+0x4d],ah
  40dc93:	mov    ebx,esi
  40dc95:	mov    WORD PTR [edx-0x57],gs
  40dc98:	adc    eax,0xd2030bb1
  40dc9d:	add    BYTE PTR [edi+0x16],dh
  40dca0:	pcmpgtw mm4,QWORD PTR [ebx+0x3b]
  40dca4:	mov    ds:0xc8afaab9,eax
  40dca9:	mov    cl,0x4f
  40dcab:	or     al,0xda
  40dcad:	xchg   edx,eax
  40dcae:	in     al,0x1
  40dcb0:	push   edi
  40dcb1:	cmc    
  40dcb2:	add    eax,0x27298b15
  40dcb7:	push   esi
  40dcb8:	mov    dh,0x9f
  40dcba:	push   ss
  40dcbb:	movq   mm1,mm2
  40dcbe:	pop    ebp
  40dcbf:	push   cs
  40dcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc1:	icebp  
  40dcc2:	push   ds
  40dcc3:	push   ebp
  40dcc4:	ret    0x6bce
  40dcc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc8:	cmp    ch,dl
  40dcca:	mov    ebx,0x46904d30
  40dccf:	add    DWORD PTR [ecx],esp
  40dcd1:	push   cs
  40dcd2:	call   0xfa56:0x3003e7ce
  40dcd9:	mov    dl,0x80
  40dcdb:	adc    eax,0x703d4282
  40dce0:	dec    edi
  40dce1:	mov    dl,0xa2
  40dce3:	and    BYTE PTR [edx-0x736dabe3],ah
  40dce9:	fwait
  40dcea:	push   cs
  40dceb:	mov    WORD PTR [esi+0x188e28c2],fs
  40dcf1:	pop    ss
  40dcf2:	and    DWORD PTR [ecx-0x75],eax
  40dcf5:	sub    DWORD PTR [ecx],esp
  40dcf7:	int    0x92
  40dcf9:	cmp    DWORD PTR [bx-0x79b2],ebx
  40dcfe:	jp     0x40dd7a
  40dd00:	cmp    esp,DWORD PTR [edi]
  40dd02:	jg     0x40dcd8
  40dd04:	loope  0x40dce6
  40dd06:	xor    BYTE PTR [ebx+0x77c1c969],bh
  40dd0c:	push   es
  40dd0d:	lods   eax,DWORD PTR ds:[esi]
  40dd0e:	pop    esi
  40dd0f:	cs in  al,dx
  40dd11:	sbb    al,0xce
  40dd13:	dec    ecx
  40dd14:	out    0x51,al
  40dd16:	arpl   di,si
  40dd18:	sbb    dl,bl
  40dd1a:	lea    esp,[ecx+edi*2+0x558af62e]
  40dd21:	jmp    0x468c:0x74286e35
  40dd28:	pop    ds
  40dd29:	icebp  
  40dd2a:	int    0x7f
  40dd2c:	loop   0x40dd0c
  40dd2e:	retf   0x5abf
  40dd31:	push   eax
  40dd32:	mov    dl,0x47
  40dd34:	ja     0x40dcee
  40dd36:	adc    al,0x89
  40dd38:	jae    0x40dd36
  40dd3a:	xor    BYTE PTR [edx+edx*8-0x71],dh
  40dd3e:	pusha  
  40dd3f:	bound  eax,QWORD PTR [edx+edx*4+0x2a]
  40dd43:	or     al,0xdb
  40dd45:	adc    al,0x47
  40dd47:	push   ds
  40dd48:	arpl   WORD PTR [eax+0x5ebd83bc],cx
  40dd4e:	dec    esp
  40dd4f:	stc    
  40dd50:	sub    ah,BYTE PTR [ecx+eiz*8-0x70]
  40dd54:	mov    al,ds:0x8ccc6586
  40dd59:	hlt    
  40dd5a:	jmp    0x40dd7f
  40dd5c:	jne    0x40ddcd
  40dd5e:	inc    esi
  40dd5f:	mov    cl,0xad
  40dd61:	sub    BYTE PTR [edi+0x72],bl
  40dd64:	or     esi,eax
  40dd66:	call   0xe8a42fb0
  40dd6b:	cmp    ebx,esi
  40dd6d:	push   0xd308b348
  40dd72:	das    
  40dd73:	and    eax,edx
  40dd75:	dec    ebx
  40dd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd77:	and    eax,0xd7eea0d8
  40dd7c:	(bad)  
  40dd7d:	adc    al,0x5c
  40dd7f:	mov    al,0x2b
  40dd81:	scas   eax,DWORD PTR es:[edi]
  40dd82:	sub    DWORD PTR [edx],ecx
  40dd84:	add    ebx,DWORD PTR [edx+esi*2-0x2a]
  40dd88:	dec    ebp
  40dd89:	retf   
  40dd8a:	push   es
  40dd8b:	jmp    0xa7b9a53
  40dd90:	mov    eax,ds:0x8eac2d3e
  40dd95:	test   DWORD PTR ds:0xadd65d2,esi
  40dd9b:	push   edx
  40dd9c:	mov    ds:0x9713904,eax
  40dda1:	sbb    cl,dh
  40dda3:	jp     0x40dd6f
  40dda5:	sub    DWORD PTR [ecx],esi
  40dda7:	test   esi,0x3efb2d1c
  40ddad:	xchg   ebx,eax
  40ddae:	push   esi
  40ddaf:	sub    eax,0x16fb9441
  40ddb4:	inc    ecx
  40ddb5:	rcr    BYTE PTR [ebp-0x6fa534f3],0x34
  40ddbc:	cmp    ah,bh
  40ddbe:	jge    0x40dd78
  40ddc0:	add    dl,BYTE PTR gs:0x42fedebc
  40ddc7:	and    al,0xf5
  40ddc9:	mov    eax,ds:0x45a2b93a
  40ddce:	into   
  40ddcf:	push   cs
  40ddd0:	fs fcmovb st,st(5)
  40ddd3:	les    edi,FWORD PTR [ecx+0x73943417]
  40ddd9:	outs   dx,DWORD PTR ds:[esi]
  40ddda:	xchg   edx,ecx
  40dddc:	out    dx,al
  40dddd:	lds    esp,FWORD PTR [esi]
  40dddf:	or     BYTE PTR [esi],ah
  40dde1:	mov    ds:0xe0332d8d,eax
  40dde6:	adc    bh,BYTE PTR [esi-0x15]
  40dde9:	mov    ebx,0x2d59c4fb
  40ddee:	out    0x53,eax
  40ddf0:	dec    esp
  40ddf1:	xor    ah,dh
  40ddf3:	or     ch,dh
  40ddf5:	pop    ebp
  40ddf6:	add    al,0x59
  40ddf8:	or     BYTE PTR [edx],bh
  40ddfa:	mov    eax,ds:0x94ea3f8e
  40ddff:	sub    eax,0x65e4c35f
  40de04:	push   ss
  40de05:	inc    ebp
  40de06:	les    esi,FWORD PTR [edi+esi*1-0x7d]
  40de0a:	inc    ecx
  40de0b:	arpl   sp,cx
  40de0d:	int    0x27
  40de0f:	or     esi,DWORD PTR [ecx]
  40de11:	adc    DWORD PTR [edx+0x361b5a96],0xffffffed
  40de18:	sub    eax,0xdf475a6
  40de1d:	xor    ch,BYTE PTR [ebp+0x3b]
  40de20:	xchg   ecx,eax
  40de21:	mov    bl,0xab
  40de23:	and    bh,BYTE PTR [ebx+0x1a5b6f0c]
  40de29:	lods   al,BYTE PTR ds:[esi]
  40de2a:	push   0xffffffff
  40de2c:	cwde   
  40de2d:	dec    DWORD PTR [edx+edi*4+0x49387157]
  40de34:	xor    esp,ebp
  40de36:	fcom   DWORD PTR [ebp-0x23]
  40de39:	pop    edx
  40de3a:	jae    0x40dddb
  40de3c:	jne    0x40de0f
  40de3e:	fst    QWORD PTR ds:0xb2818296
  40de44:	in     al,dx
  40de45:	inc    esp
  40de46:	inc    edx
  40de47:	aaa    
  40de48:	std    
  40de49:	pop    esp
  40de4a:	sahf   
  40de4b:	xor    BYTE PTR [ecx+0x62fe419],0x38
  40de52:	out    0xc,al
  40de54:	xchg   ebx,eax
  40de55:	push   esi
  40de56:	fist   DWORD PTR [eax+0x5d]
  40de59:	sti    
  40de5a:	push   ebx
  40de5b:	aaa    
  40de5c:	mov    bh,0xe5
  40de5e:	jo     0x40de4a
  40de60:	ins    DWORD PTR es:[edi],dx
  40de61:	aad    0xb0
  40de63:	aas    
  40de64:	call   0x74ad3633
  40de69:	adc    al,0x96
  40de6b:	or     dl,BYTE PTR [edx]
  40de6d:	pushf  
  40de6e:	push   0x38632ffd
  40de73:	lds    eax,FWORD PTR ds:0xaa06416d
  40de79:	push   esp
  40de7a:	cmp    BYTE PTR [ebp+edx*1+0x3],ah
  40de7e:	jg     0x40ded7
  40de80:	jbe    0x40de96
  40de82:	jne    0x40de21
  40de84:	cld    
  40de85:	push   cs
  40de86:	ret    0x434f
  40de89:	ja     0x40de56
  40de8b:	cmp    eax,DWORD PTR [eax]
  40de8d:	scas   al,BYTE PTR es:[edi]
  40de8e:	in     al,dx
  40de8f:	and    esi,DWORD PTR [ecx-0x7d]
  40de92:	addr16 nop
  40de94:	sbb    esi,DWORD PTR [ebx-0x5]
  40de97:	push   0xffffffc0
  40de99:	fst    DWORD PTR [eax+0x2d]
  40de9c:	sbb    ch,bh
  40de9e:	xchg   DWORD PTR [eax-0x2b781942],ecx
  40dea4:	mov    cl,0x27
  40dea6:	dec    edi
  40dea7:	(bad)  
  40dea8:	mov    al,0xd8
  40deaa:	scas   al,BYTE PTR es:[edi]
  40deab:	pop    es
  40deac:	cmp    bh,dl
  40deae:	dec    ebx
  40deaf:	inc    ecx
  40deb0:	pop    es
  40deb1:	test   DWORD PTR [edx-0x3e],ebx
  40deb4:	sbb    eax,0x6db1f9d5
  40deb9:	inc    eax
  40deba:	mov    ch,0x48
  40debc:	adc    al,0x28
  40debe:	loopne 0x40dee7
  40dec0:	std    
  40dec1:	shl    DWORD PTR [edi],0x10
  40dec4:	or     edi,eax
  40dec6:	dec    ebp
  40dec7:	mov    eax,ds:0x4513d008
  40decc:	push   es
  40decd:	cs ret 
  40decf:	add    ch,0x9d
  40ded2:	jl     0x40defe
  40ded4:	adc    eax,DWORD PTR ds:0x5f3d6125
  40deda:	stos   BYTE PTR es:[edi],al
  40dedb:	mov    ds:0x7ab4ba5b,eax
  40dee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee1:	xlat   BYTE PTR ds:[ebx]
  40dee2:	ret    
  40dee3:	xlat   BYTE PTR ds:[ebx]
  40dee4:	fnsave [edi+esi*2+0x5]
  40dee8:	add    eax,0x7054497a
  40deed:	xor    ah,BYTE PTR [ebx-0x64]
  40def0:	sub    edi,DWORD PTR [eax+ebp*1-0x64cf89c3]
  40def7:	pop    ds
  40def8:	pop    edx
  40def9:	outs   dx,DWORD PTR ds:[esi]
  40defa:	icebp  
  40defb:	rcl    bh,1
  40defd:	(bad)  
  40defe:	jno    0x40df64
  40df00:	dec    ebp
  40df01:	pop    eax
  40df02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df03:	fistp  QWORD PTR [eax-0x68ecf5cb]
  40df09:	mov    ebp,0x65b33c54
  40df0e:	mov    eax,ds:0xa5f22673
  40df13:	stc    
  40df14:	xchg   ebp,eax
  40df15:	cmp    ecx,eax
  40df17:	xchg   ebx,eax
  40df18:	add    al,0x35
  40df1a:	jge    0x40decb
  40df1c:	fnsave [esi+0x65]
  40df1f:	and    BYTE PTR cs:[edi+ecx*1],al
  40df23:	sbb    al,0x45
  40df25:	nop
  40df26:	test   DWORD PTR [eax+0x56],ecx
  40df29:	and    ch,cl
  40df2b:	jmp    0x40deff
  40df2d:	push   ss
  40df2e:	outs   dx,BYTE PTR ds:[esi]
  40df2f:	outs   dx,BYTE PTR ds:[esi]
  40df30:	std    
  40df31:	mov    edx,0xff5e45b8
  40df36:	push   esi
  40df37:	mov    esp,0xbb63c3e8
  40df3c:	sar    BYTE PTR [ebx+0x1685d8e2],1
  40df42:	pop    ecx
  40df43:	js     0x40dfb1
  40df45:	(bad)  
  40df46:	cmp    esi,DWORD PTR [esi-0x1b]
  40df49:	stos   DWORD PTR es:[edi],eax
  40df4a:	popa   
  40df4b:	push   eax
  40df4c:	std    
  40df4d:	rol    BYTE PTR [esi+edi*4+0x1d],cl
  40df51:	jecxz  0x40df6f
  40df53:	jmp    0x40dfa9
  40df55:	mov    eax,ds:0x3b66d162
  40df5a:	jmp    0x40df0b
  40df5c:	hlt    
  40df5d:	add    ebp,edi
  40df5f:	imul   eax,DWORD PTR [edi+eiz*4+0x0],0x9ecb75e9
  40df67:	pop    esi
  40df68:	test   BYTE PTR [ebx-0x30],0x7e
  40df6c:	fsubr  st,st(0)
  40df6e:	cwde   
  40df6f:	or     al,0xb1
  40df71:	push   eax
  40df72:	jno    0x40df9f
  40df74:	rcr    BYTE PTR ds:0xb0a10ea6,cl
  40df7a:	movhps QWORD PTR [ebp-0x432f8580],xmm3
  40df81:	dec    edi
  40df82:	arpl   WORD PTR [ecx-0x4c],ax
  40df85:	or     dl,0x8f
  40df88:	(bad)  
  40df89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8a:	xchg   esi,eax
  40df8b:	and    BYTE PTR [edi],0x4f
  40df8e:	bound  ebp,QWORD PTR [edx*2-0x611bf9bd]
  40df95:	fcmovne st,st(4)
  40df97:	and    DWORD PTR [esi+ebp*4],edi
  40df9a:	daa    
  40df9b:	fld    st(7)
  40df9d:	sub    eax,DWORD PTR [eax]
  40df9f:	fisub  DWORD PTR [eax-0x2198a308]
  40dfa5:	dec    esp
  40dfa6:	loope  0x40dfbe
  40dfa8:	dec    ebp
  40dfa9:	mov    edx,0x68dcf80f
  40dfae:	sbb    dh,ah
  40dfb0:	pushf  
  40dfb1:	inc    ebx
  40dfb2:	sar    BYTE PTR [edx],0xa8
  40dfb5:	push   ebp
  40dfb6:	add    al,0xa0
  40dfb8:	shr    BYTE PTR [edi-0x251e2dc6],cl
  40dfbe:	sar    DWORD PTR [ebx],1
  40dfc0:	(bad)  
  40dfc1:	mul    ecx
  40dfc3:	and    BYTE PTR [eax-0x15e88530],dl
  40dfc9:	add    DWORD PTR [edx],ebx
  40dfcb:	or     BYTE PTR [esp+ebx*1-0x8],al
  40dfcf:	mov    cs,WORD PTR [ebp-0x4c43767b]
  40dfd5:	jmp    0x310e5eb3
  40dfda:	cdq    
  40dfdb:	shl    DWORD PTR ss:[esi],cl
  40dfde:	xchg   edx,eax
  40dfdf:	or     DWORD PTR [ebp+eax*4+0x23],esi
  40dfe3:	bnd je 0x40df72
  40dfe6:	jnp    0x40e000
  40dfe8:	cmp    DWORD PTR [esi],ebx
  40dfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfeb:	or     bl,bl
  40dfed:	out    0xf4,eax
  40dfef:	push   esi
  40dff0:	inc    edx
  40dff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff2:	mov    dl,0x9e
  40dff4:	dec    edx
  40dff5:	mov    ebp,0xb3708171
  40dffa:	xchg   DWORD PTR [esi+eax*2-0x40],esp
  40dffe:	and    edx,DWORD PTR [edx+0x1b24780d]
  40e004:	mov    al,ds:0xbd4c3441
  40e009:	sub    eax,0xd4e90469
  40e00e:	cmp    DWORD PTR [esi+eiz*2],ebx
  40e011:	out    0xb1,al
  40e013:	pop    esi
  40e014:	mov    BYTE PTR [esi+0x3aff0241],dl
  40e01a:	gs and eax,0xb71d542e
  40e020:	sbb    eax,0x44ccae02
  40e025:	sub    al,0xff
  40e027:	dec    eax
  40e028:	add    esp,DWORD PTR [edi]
  40e02a:	mov    al,0x83
  40e02c:	les    eax,FWORD PTR [esi]
  40e02e:	mov    DWORD PTR ds:0xe25bdd13,0x1ddff54d
  40e038:	hlt    
  40e039:	pop    ebp
  40e03a:	jmp    0x1985e0f5
  40e03f:	and    BYTE PTR [ecx+0x3df157fa],bl
  40e045:	or     al,BYTE PTR [ecx]
  40e047:	adc    dl,bh
  40e049:	pop    ss
  40e04a:	(bad)  
  40e04b:	retf   0x8cf4
  40e04e:	(bad)  
  40e04f:	xor    BYTE PTR [edi-0x1ba156f6],dh
  40e055:	pop    ecx
  40e056:	dec    ecx
  40e057:	pop    edx
  40e058:	pop    esp
  40e059:	pop    eax
  40e05a:	pop    ebp
  40e05b:	fstp   TBYTE PTR [eax-0xb]
  40e05e:	leave  
  40e05f:	sub    DWORD PTR [eax],ecx
  40e061:	or     ah,BYTE PTR [ecx]
  40e063:	aam    0x7f
  40e065:	iret   
  40e066:	cli    
  40e067:	pop    ebp
  40e068:	xor    BYTE PTR [ebx],dl
  40e06a:	dec    edi
  40e06b:	mov    ah,0xf7
  40e06d:	jmp    0x7f16:0xac5f25c5
  40e074:	xor    al,0xa2
  40e076:	add    dl,cl
  40e078:	add    dh,dl
  40e07a:	jecxz  0x40e028
  40e07c:	retf   0x6421
  40e07f:	stos   DWORD PTR es:[edi],eax
  40e080:	rcl    WORD PTR [esi+0x69c40e1b],0xc2
  40e088:	clc    
  40e089:	ror    DWORD PTR [edx+0x5f],1
  40e08c:	push   edx
  40e08d:	or     DWORD PTR [eax+0x4f5e1d74],edx
  40e093:	inc    eax
  40e094:	pop    esp
  40e095:	mov    ds:0xdb721ad0,eax
  40e09a:	repz jge 0x40e0c1
  40e09d:	xchg   BYTE PTR [ebp-0x5d0c3f8e],cl
  40e0a3:	push   es
  40e0a4:	lods   eax,DWORD PTR ds:[si]
  40e0a6:	push   edx
  40e0a7:	adc    BYTE PTR [edi+0x2a84be79],dh
  40e0ad:	mov    edx,0xc2fae9f6
  40e0b2:	push   ebp
  40e0b3:	addr16 mov ch,0x1e
  40e0b6:	sbb    eax,0xee88292d
  40e0bb:	or     al,0xfa
  40e0bd:	cmp    DWORD PTR fs:[ebx+edi*8+0x4e],esi
  40e0c2:	adc    DWORD PTR [edx],esi
  40e0c4:	mov    esp,DWORD PTR ds:0xf9ef1d7a
  40e0ca:	or     DWORD PTR [ebx],0xe08025e6
  40e0d0:	or     ch,dl
  40e0d2:	mov    ch,0xbc
  40e0d4:	cld    
  40e0d5:	loopne 0x40e0d6
  40e0d7:	or     ebp,DWORD PTR [ecx]
  40e0d9:	inc    esp
  40e0da:	pop    ecx
  40e0db:	sbb    DWORD PTR [ebp+0x14a69d40],esp
  40e0e1:	lods   al,BYTE PTR ds:[esi]
  40e0e2:	or     al,0x59
  40e0e4:	idiv   DWORD PTR [edx-0x30]
  40e0e7:	into   
  40e0e8:	dec    eax
  40e0e9:	xlat   BYTE PTR ds:[ebx]
  40e0ea:	jmp    0x6a60:0xe670ed5b
  40e0f1:	jl     0x40e159
  40e0f3:	push   0x15
  40e0f5:	xor    BYTE PTR [edx*2-0x1cceb9ef],dl
  40e0fc:	loope  0x40e083
  40e0fe:	clc    
  40e0ff:	pushf  
  40e100:	in     al,0xe9
  40e102:	rcl    BYTE PTR [edi+0x1d7ba7ef],0xa5
  40e109:	adc    ebx,DWORD PTR [edx+0x713865]
  40e10f:	(bad)  
  40e110:	imul   esp,DWORD PTR [ecx],0xf46e85ec
  40e116:	cmp    DWORD PTR [edx+esi*4+0x33c3769],0x3fbbcd1f
  40e121:	popf   
  40e122:	cmp    DWORD PTR [edi-0x21f27784],ebp
  40e128:	in     al,dx
  40e129:	call   FWORD PTR [eax-0x89bcb28]
  40e12f:	in     eax,0xc3
  40e131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e132:	ins    DWORD PTR es:[edi],dx
  40e133:	jnp    0x40e18b
  40e135:	adc    ah,BYTE PTR [esi-0x23]
  40e138:	mov    ds:0xfb9faa54,eax
  40e13d:	xchg   esi,eax
  40e13e:	add    al,0x3c
  40e140:	idiv   BYTE PTR [edx-0x1e08fab7]
  40e146:	xchg   ebx,eax
  40e147:	sbb    dl,BYTE PTR [ecx+ebp*2+0x1f8643c]
  40e14e:	mov    es,WORD PTR [eax+0x9d83e82]
  40e154:	jo     0x40e1a7
  40e156:	sbb    cl,BYTE PTR [edx+0x7436ef52]
  40e15c:	cwde   
  40e15d:	sbb    al,0xfe
  40e15f:	add    ebp,DWORD PTR [edx]
  40e161:	sbb    ax,dx
  40e164:	mov    ds:0xf0325064,eax
  40e169:	dec    ecx
  40e16a:	jne    0x40e18b
  40e16c:	pop    esi
  40e16d:	(bad)  
  40e16e:	test   al,0x21
  40e170:	add    BYTE PTR [edx],al
  40e172:	cmp    BYTE PTR [ecx-0x4301d365],0x4c
  40e179:	cmp    dl,bh
  40e17b:	jecxz  0x40e174
  40e17d:	out    dx,al
  40e17e:	enter  0xfe6c,0x7f
  40e182:	or     bh,BYTE PTR ds:0xda9a2bb9
  40e188:	push   ebp
  40e189:	call   0xeab4:0xeafb04b1
  40e190:	es mov ch,0x1d
  40e193:	je     0x40e1f1
  40e195:	or     ax,0xddf0
  40e199:	inc    esi
  40e19a:	xor    BYTE PTR [ecx-0x568ed627],bl
  40e1a0:	in     al,dx
  40e1a1:	stc    
  40e1a2:	das    
  40e1a3:	popa   
  40e1a4:	cmc    
  40e1a5:	aam    0x29
  40e1a7:	xor    BYTE PTR [edi+ebp*8],ch
  40e1aa:	push   edx
  40e1ab:	retf   
  40e1ac:	in     al,0xcd
  40e1ae:	aad    0x9a
  40e1b0:	out    0x79,al
  40e1b2:	outs   dx,DWORD PTR ds:[esi]
  40e1b3:	xor    BYTE PTR [ebx-0x4564bcf2],dh
  40e1b9:	jecxz  0x40e192
  40e1bb:	dec    edx
  40e1bc:	xor    eax,0x8c2a0715
  40e1c1:	and    BYTE PTR [ecx],0x3c
  40e1c4:	mov    edi,eax
  40e1c6:	jno    0x40e195
  40e1c8:	loopne 0x40e17d
  40e1ca:	stos   DWORD PTR es:[edi],eax
  40e1cb:	dec    esi
  40e1cc:	sbb    BYTE PTR [ebx+0x70],al
  40e1cf:	sub    eax,DWORD PTR [edi+0x4c7262e3]
  40e1d5:	out    dx,al
  40e1d6:	sub    al,0xf0
  40e1d8:	and    ebx,esi
  40e1da:	mov    DWORD PTR [esp+ebx*4+0x52],ebp
  40e1de:	or     DWORD PTR [edx],ebp
  40e1e0:	fidivr DWORD PTR [ebx]
  40e1e2:	in     eax,dx
  40e1e3:	and    DWORD PTR [ecx+edi*8+0x71b0e72e],esi
  40e1ea:	or     DWORD PTR [eax-0x7a1fccbf],0xffffffe1
  40e1f1:	lods   al,BYTE PTR ds:[esi]
  40e1f2:	mov    ecx,0xd428a858
  40e1f7:	jg     0x40e23b
  40e1f9:	fdiv   DWORD PTR [ebx]
  40e1fb:	ror    al,1
  40e1fd:	inc    esi
  40e1fe:	mov    eax,0x383caea7
  40e203:	jae    0x40e227
  40e205:	fiadd  DWORD PTR [eax-0x3]
  40e208:	add    bh,BYTE PTR [ebp-0x54420251]
  40e20e:	mov    edx,ebx
  40e210:	pop    ecx
  40e211:	(bad)  
  40e212:	push   cs
  40e213:	imul   edi,DWORD PTR [ebx],0xffffffdf
  40e216:	dec    eax
  40e217:	mov    DWORD PTR [edx-0x7e360e9b],ebx
  40e21d:	inc    edx
  40e21e:	mov    ebx,0x37b60db1
  40e223:	inc    ecx
  40e224:	inc    eax
  40e225:	int    0x59
  40e227:	in     al,0x21
  40e229:	mov    al,ds:0xa2b36c85
  40e22e:	and    esi,eax
  40e230:	mov    edx,0x76257839
  40e235:	lods   eax,DWORD PTR ds:[esi]
  40e236:	pusha  
  40e237:	mov    ebx,0x5da791d4
  40e23c:	les    eax,FWORD PTR [edx+0x2c]
  40e23f:	cdq    
  40e240:	push   ecx
  40e241:	sub    esp,DWORD PTR ds:0x6d08f011
  40e247:	loope  0x40e268
  40e249:	jmp    0x99661f1f
  40e24e:	shl    BYTE PTR [ebx+0xb],cl
  40e251:	popa   
  40e252:	mov    al,0xee
  40e254:	xor    cl,ah
  40e256:	adc    eax,0xc0e3f037
  40e25b:	pop    ss
  40e25c:	out    0xf,al
  40e25e:	xor    al,0x5a
  40e260:	cdq    
  40e261:	push   esp
  40e262:	ja     0x40e26c
  40e264:	xchg   esi,eax
  40e265:	mov    eax,0xfeed4f3a
  40e26a:	cmp    esp,esp
  40e26c:	mov    DWORD PTR [ebx],edi
  40e26e:	sbb    bh,dh
  40e270:	leave  
  40e271:	jo     0x40e2cf
  40e273:	jno    0x40e241
  40e275:	lahf   
  40e276:	aad    0xd4
  40e278:	inc    ebx
  40e279:	dec    ebx
  40e27a:	out    dx,eax
  40e27b:	mov    dl,0x18
  40e27d:	fsubr  DWORD PTR [ecx-0x18]
  40e280:	js     0x40e20e
  40e282:	fld    st(1)
  40e284:	std    
  40e285:	aam    0x2a
  40e287:	push   ebx
  40e288:	mov    al,ds:0xe88843e3
  40e28d:	in     eax,0xa8
  40e28f:	xor    dl,BYTE PTR [edi]
  40e291:	inc    esp
  40e292:	fs scas al,BYTE PTR es:[edi]
  40e294:	adc    al,0x97
  40e296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e297:	or     al,0xeb
  40e299:	icebp  
  40e29a:	leave  
  40e29b:	mov    ebx,0xa11f3302
  40e2a0:	stos   BYTE PTR es:[edi],al
  40e2a1:	dec    eax
  40e2a2:	mov    DWORD PTR [edx+0x6f],eax
  40e2a5:	fwait
  40e2a6:	clc    
  40e2a7:	jns    0x40e2f0
  40e2a9:	or     ah,al
  40e2ab:	inc    ebx
  40e2ac:	pop    esi
  40e2ad:	sub    ch,bh
  40e2af:	pop    ecx
  40e2b0:	mov    ecx,0x7a649e67
  40e2b5:	nop
  40e2b6:	inc    ebp
  40e2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2b8:	out    0x2d,al
  40e2ba:	dec    ebx
  40e2bb:	pop    ebp
  40e2bc:	and    al,0x4a
  40e2be:	jg     0x40e2c8
  40e2c0:	stos   BYTE PTR es:[edi],al
  40e2c1:	pop    es
  40e2c2:	aaa    
  40e2c3:	mov    dl,0x19
  40e2c5:	cs jl  0x40e254
  40e2c8:	clc    
  40e2c9:	jnp    0x40e2a2
  40e2cb:	stos   BYTE PTR es:[edi],al
  40e2cc:	inc    ebp
  40e2cd:	mov    ebx,0x569028c9
  40e2d2:	mov    dl,0x7e
  40e2d4:	xor    BYTE PTR [esi+0x2d],cl
  40e2d7:	loop   0x40e2d4
  40e2d9:	push   ss
  40e2da:	(bad)  
  40e2db:	loopne 0x40e27b
  40e2dd:	xchg   ebp,eax
  40e2de:	popf   
  40e2df:	mov    DWORD PTR [eax+esi*8-0x56],0x352a5dcb
  40e2e7:	ins    DWORD PTR es:[edi],dx
  40e2e8:	and    al,0xa9
  40e2ea:	mov    bl,0x88
  40e2ec:	popa   
  40e2ed:	adc    dl,BYTE PTR [esi-0x73]
  40e2f0:	jle    0x40e366
  40e2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2f3:	add    ebp,DWORD PTR [ebp+esi*8+0xd]
  40e2f7:	dec    esi
  40e2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2f9:	sti    
  40e2fa:	stos   BYTE PTR es:[edi],al
  40e2fb:	cld    
  40e2fc:	jecxz  0x40e308
  40e2fe:	jmp    0x1e35:0xf5f66bf9
  40e305:	sub    esp,DWORD PTR ds:0xad73e76e
  40e30b:	setae  BYTE PTR [edx+0x6e32ddf9]
  40e312:	sbb    edi,esp
  40e314:	stc    
  40e315:	push   esp
  40e316:	mov    ah,0xda
  40e318:	mov    BYTE PTR [eax-0x4c],bl
  40e31b:	fwait
  40e31c:	mov    BYTE PTR [edi],dh
  40e31e:	xchg   ecx,eax
  40e31f:	push   0xffffff98
  40e321:	jmp    0x40e300
  40e323:	test   DWORD PTR [eax-0xa3016d1],0xf43a5b86
  40e32d:	test   al,0x6c
  40e32f:	ins    DWORD PTR es:[edi],dx
  40e330:	xchg   dx,ax
  40e332:	icebp  
  40e333:	adc    BYTE PTR [eax-0x1cec8c8a],ch
  40e339:	jmp    0x253e:0xf6de8b9c
  40e340:	retf   0x10ea
  40e343:	hlt    
  40e344:	adc    esp,DWORD PTR [edi*1-0x718c1d0a]
  40e34b:	or     edx,DWORD PTR [eax+ebx*8]
  40e34e:	mov    ah,0xd7
  40e350:	push   edx
  40e351:	inc    ecx
  40e352:	xor    DWORD PTR [eax-0x4d],ebp
  40e355:	jno    0x40e365
  40e357:	pop    eax
  40e358:	inc    edx
  40e359:	xchg   BYTE PTR [edi],al
  40e35b:	push   edx
  40e35c:	ins    DWORD PTR es:[edi],dx
  40e35d:	xor    eax,DWORD PTR [esi+0x68]
  40e360:	xchg   edi,eax
  40e361:	(bad)  
  40e362:	mov    ch,0x55
  40e364:	mov    ecx,0xefcbd475
  40e369:	mov    edx,0x50fc3feb
  40e36e:	lock inc esi
  40e370:	sbb    eax,ecx
  40e372:	jb     0x40e320
  40e374:	cld    
  40e375:	dec    ebx
  40e376:	mov    ecx,0x9305243c
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x76e5ef2
  40e671:	mov    cl,0x19
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e680
  40e67c:	jne    0x40e61c
  40e67e:	pop    ecx
  40e67f:	pop    esi
  40e680:	shl    DWORD PTR [edx-0x2],1
  40e683:	pusha  
  40e684:	scas   eax,DWORD PTR es:[edi]
  40e685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e686:	dec    esi
  40e687:	retf   0x2fb6
  40e68a:	fisttp DWORD PTR [eax+0x6141e8f2]
  40e690:	push   es
  40e691:	inc    edx
  40e692:	stc    
  40e693:	mov    bl,BYTE PTR [ecx]
  40e695:	adc    DWORD PTR [esi+ecx*8-0x28d938e7],edx
  40e69c:	cs out 0xae,al
  40e69f:	push   edi
  40e6a1:	xor    al,0x85
  40e6a3:	pushf  
  40e6a4:	ja     0x56790684
  40e6aa:	fwait
  40e6ab:	mov    eax,ds:0x7504ef29
  40e6b0:	stos   DWORD PTR es:[edi],eax
  40e6b1:	sub    esp,0xffffffae
  40e6b4:	sbb    ebx,DWORD PTR [esi+ecx*2]
  40e6b7:	xlat   BYTE PTR ds:[ebx]
  40e6b8:	retf   0xc9eb
  40e6bb:	dec    edi
  40e6bc:	push   ebx
  40e6bd:	xor    eax,0xe310ab07
  40e6c2:	xchg   edi,eax
  40e6c3:	stc    
  40e6c4:	fcmovu st,st(7)
  40e6c6:	outs   dx,BYTE PTR ds:[esi]
  40e6c7:	loopne 0x40e667
  40e6c9:	xor    ebx,DWORD PTR [edi-0x1eb6f09]
  40e6cf:	stos   DWORD PTR es:[edi],eax
  40e6d0:	or     al,0x5b
  40e6d2:	fldenv [ecx+0x24]
  40e6d5:	out    0x11,al
  40e6d7:	lods   eax,DWORD PTR ds:[esi]
  40e6d8:	idiv   ah
  40e6da:	(bad)  
  40e6db:	std    
  40e6dc:	add    DWORD PTR [eax-0x2d946a51],0x8ec8e508
  40e6e6:	lods   al,BYTE PTR ds:[esi]
  40e6e7:	jbe    0x40e6d6
  40e6e9:	xor    DWORD PTR [ecx],ebx
  40e6eb:	mov    cl,0x5f
  40e6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ee:	add    ah,bl
  40e6f0:	cmp    eax,0xc11ffa27
  40e6f5:	in     eax,dx
  40e6f6:	add    bh,ah
  40e6f8:	and    DWORD PTR [esi+0x20],esp
  40e6fb:	js     0x40e698
  40e6fd:	ss jb  0x40e6a0
  40e700:	inc    esi
  40e701:	mov    ch,0x94
  40e703:	pop    ecx
  40e704:	push   cs
  40e705:	dec    edi
  40e706:	mov    ebp,0x9a5ee547
  40e70b:	sub    eax,0x2d
  40e70e:	pop    es
  40e70f:	dec    edi
  40e710:	mov    eax,0x7e41499
  40e715:	retf   0x47f3
  40e718:	dec    eax
  40e719:	pop    esi
  40e71a:	ret    0x3307
  40e71d:	and    BYTE PTR [ebx],ah
  40e71f:	std    
  40e720:	lods   eax,DWORD PTR ds:[esi]
  40e721:	je     0x40e6b1
  40e723:	pop    ds
  40e724:	les    ecx,FWORD PTR [edi]
  40e726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e727:	test   al,0xc6
  40e729:	dec    edx
  40e72a:	sbb    BYTE PTR [eax+0x618b08d0],0x32
  40e731:	mov    ds:0x840a4e6c,eax
  40e736:	imul   ecx,DWORD PTR [edx-0x92b65d1],0x4de77425
  40e740:	iret   
  40e741:	hlt    
  40e742:	mov    dh,0xc0
  40e744:	push   ss
  40e745:	(bad)  
  40e746:	xchg   edx,eax
  40e747:	addr16 loop 0x40e700
  40e74a:	push   esi
  40e74b:	jmp    0x40e7ac
  40e74d:	dec    ebx
  40e74e:	call   0x16f9:0x9314c57b
  40e755:	ss and al,0xe5
  40e758:	and    ecx,DWORD PTR ds:0xa541de73
  40e75e:	mov    dl,0x9a
  40e760:	test   BYTE PTR [edi],0x48
  40e763:	scas   al,BYTE PTR es:[edi]
  40e764:	mov    BYTE PTR [edi+0x298d7dd9],0x22
  40e76b:	push   0xeaca5827
  40e770:	pop    esi
  40e771:	jne    0x40e78e
  40e773:	jmp    0x473d:0xda8854b9
  40e77a:	ss inc esp
  40e77c:	lods   al,BYTE PTR ds:[esi]
  40e77d:	fnstsw ax
  40e77f:	sub    BYTE PTR [ecx-0x39],dl
  40e782:	daa    
  40e783:	ds retf 0x9247
  40e787:	pop    ebp
  40e788:	repnz cmp BYTE PTR [edi],dl
  40e78b:	jl     0x40e7ac
  40e78d:	out    0x99,al
  40e78f:	cmc    
  40e790:	movq   QWORD PTR [edi-0x56],mm3
  40e794:	daa    
  40e795:	adc    DWORD PTR [eax+ecx*1-0x1],esi
  40e799:	xor    dl,bl
  40e79b:	mov    ds:0x6dfbf42f,eax
  40e7a0:	and    al,0x32
  40e7a2:	sub    BYTE PTR [ebx+eax*4+0x5c],0x8e
  40e7a7:	mov    al,BYTE PTR [edi]
  40e7a9:	stc    
  40e7aa:	call   0x8c25fd28
  40e7af:	mov    esi,0xc919e5d1
  40e7b4:	mov    DWORD PTR [ebp+0x38],ebx
  40e7b7:	outs   dx,DWORD PTR ds:[esi]
  40e7b8:	and    BYTE PTR [ebx-0x37f27f4f],bl
  40e7be:	jl     0x40e7f9
  40e7c0:	xchg   edx,esi
  40e7c2:	cdq    
  40e7c3:	jl     0x40e7bf
  40e7c5:	addr16 jno 0x40e7e4
  40e7c8:	mov    bl,0xfc
  40e7ca:	pop    ebx
  40e7cb:	push   edx
  40e7cc:	cmp    al,0x65
  40e7ce:	mov    esp,0xf27ba8f8
  40e7d3:	dec    esp
  40e7d4:	loope  0x40e77a
  40e7d6:	mov    dh,0xe4
  40e7d8:	shr    BYTE PTR [edx+0x7467cf03],0x74
  40e7df:	cmp    al,0x5e
  40e7e1:	call   0xdbc5badb
  40e7e6:	jl     0x40e7cc
  40e7e8:	push   0x439bf40d
  40e7ed:	js     0x40e7e2
  40e7ef:	les    ebp,FWORD PTR [ebx]
  40e7f1:	adc    eax,0xfda5d2c0
  40e7f6:	pop    ebx
  40e7f7:	repnz inc esp
  40e7f9:	jl     0x40e79a
  40e7fb:	ror    al,0xcd
  40e7fe:	jbe    0x40e7ad
  40e800:	pop    ecx
  40e801:	fstp   DWORD PTR [esi]
  40e803:	pop    ebx
  40e804:	(bad)  
  40e805:	add    esp,DWORD PTR [eax-0x55784442]
  40e80b:	fisttp QWORD PTR [esi]
  40e80d:	out    0x3,al
  40e80f:	shr    BYTE PTR [ebx-0x72272d1f],cl
  40e815:	and    bl,BYTE PTR [ebp-0x3c91ef53]
  40e81b:	mov    eax,ds:0xb3cab6cf
  40e820:	dec    edi
  40e821:	in     eax,dx
  40e822:	rcl    DWORD PTR [edx+0x1],cl
  40e825:	dec    edi
  40e826:	mov    ah,0x91
  40e828:	cld    
  40e829:	sub    al,0x1b
  40e82b:	pop    eax
  40e82c:	dec    ecx
  40e82d:	sub    BYTE PTR [eax],ah
  40e82f:	xchg   esi,eax
  40e830:	xchg   ecx,eax
  40e831:	and    BYTE PTR [edi-0x38],cl
  40e834:	push   ebx
  40e835:	fwait
  40e836:	aaa    
  40e837:	test   DWORD PTR [ebx-0x36c62c85],esp
  40e83d:	mov    ch,0xb5
  40e83f:	jns    0x40e834
  40e841:	mov    edx,0x324eefdb
  40e846:	or     eax,0xfeecab7b
  40e84b:	out    dx,al
  40e84c:	mov    ah,0x81
  40e84e:	xchg   edi,eax
  40e84f:	push   ss
  40e850:	sbb    al,BYTE PTR [ebx]
  40e852:	or     esi,DWORD PTR [esi-0x7d]
  40e855:	inc    ebp
  40e856:	ins    DWORD PTR es:[edi],dx
  40e857:	dec    ebp
  40e858:	out    dx,eax
  40e859:	in     eax,dx
  40e85a:	push   edi
  40e85b:	inc    esi
  40e85c:	xchg   edi,eax
  40e85d:	mov    ebx,0xf4e69ff6
  40e862:	mov    bh,0x84
  40e864:	sub    al,0x39
  40e866:	mov    ch,0x48
  40e868:	add    al,dh
  40e86a:	pop    edi
  40e86b:	fsubr  DWORD PTR [ecx-0x59c7e6cd]
  40e871:	or     DWORD PTR [esi],edi
  40e873:	mov    al,ds:0xf5a1b64
  40e878:	shl    BYTE PTR [edx+edi*2],0xd
  40e87c:	sbb    DWORD PTR [esi-0x2fcf1032],ecx
  40e882:	ret    0x6b57
  40e885:	jns    0x40e8cc
  40e887:	cli    
  40e888:	loope  0x40e81e
  40e88a:	dec    edx
  40e88b:	jp     0x40e8eb
  40e88d:	call   0xb09e4840
  40e892:	repnz cdq 
  40e894:	ja     0x40e8f8
  40e896:	sbb    al,0xfb
  40e898:	push   eax
  40e899:	leave  
  40e89a:	sub    esi,edx
  40e89c:	push   es
  40e89d:	aas    
  40e89e:	cs inc esp
  40e8a0:	xchg   edi,eax
  40e8a1:	pop    ebx
  40e8a2:	push   es
  40e8a3:	fidiv  WORD PTR [ecx+edx*1]
  40e8a6:	or     DWORD PTR [eax-0x77],ebp
  40e8a9:	stos   DWORD PTR es:[edi],eax
  40e8aa:	jge    0x40e8c5
  40e8ac:	add    cl,ch
  40e8ae:	xor    BYTE PTR [eax+ecx*1-0x40076163],0x5b
  40e8b6:	sub    ebx,edi
  40e8b8:	sub    al,0x58
  40e8ba:	dec    edi
  40e8bb:	rol    edx,1
  40e8bd:	xor    eax,0x36376302
  40e8c2:	and    DWORD PTR [ecx+esi*1],edx
  40e8c5:	mov    es,WORD PTR [eax-0x73f1bd66]
  40e8cb:	mov    edx,0x7519770b
  40e8d0:	lahf   
  40e8d1:	sbb    DWORD PTR [edi],ebp
  40e8d3:	int3   
  40e8d4:	xor    esp,edx
  40e8d6:	sub    esp,DWORD PTR [ecx]
  40e8d8:	and    DWORD PTR [ebx+0x13],0x5e9a39ff
  40e8df:	ret    
  40e8e0:	daa    
  40e8e1:	adc    esi,DWORD PTR [ecx-0x3ca48f03]
  40e8e7:	mov    ebp,0x7b4ed960
  40e8ec:	(bad)  
  40e8ed:	retf   
  40e8ee:	add    BYTE PTR [ecx-0x7103ec56],bh
  40e8f4:	dec    edi
  40e8f5:	push   es
  40e8f6:	cmp    bh,bl
  40e8f8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e8fa:	les    edi,FWORD PTR [eax]
  40e8fc:	push   esp
  40e8fd:	mov    cl,0xb0
  40e8ff:	outs   dx,BYTE PTR ds:[esi]
  40e900:	xor    al,0xc9
  40e902:	xor    DWORD PTR [edx-0x43],edx
  40e905:	ficom  DWORD PTR [esi+0x1b]
  40e908:	nop
  40e909:	mov    eax,es
  40e90b:	jle    0x40e969
  40e90d:	test   al,0xff
  40e90f:	mov    dl,0xcf
  40e911:	std    
  40e912:	lods   eax,DWORD PTR ds:[esi]
  40e913:	int3   
  40e914:	and    ch,BYTE PTR [ebp+ecx*2+0x2c89369e]
  40e91b:	ror    DWORD PTR [ebp+0x54],cl
  40e91e:	rcl    DWORD PTR [ebp-0x5d39968d],cl
  40e924:	bound  esi,QWORD PTR [edi-0xaa6e2c5]
  40e92a:	cli    
  40e92b:	fidivr WORD PTR ds:0x8e9386c
  40e931:	repnz inc BYTE PTR [eax]
  40e934:	out    dx,al
  40e935:	imul   ecx,edx,0xf7ce359b
  40e93b:	adc    DWORD PTR [edi+0x6],edi
  40e93e:	sti    
  40e93f:	mov    edx,0x56f3a7bf
  40e944:	ins    BYTE PTR es:[edi],dx
  40e945:	pop    ds
  40e946:	push   0x8e109837
  40e94b:	out    0x1f,eax
  40e94d:	mov    ch,0x63
  40e94f:	pop    ebx
  40e950:	out    0x70,al
  40e952:	jg     0x40e957
  40e954:	dec    ebp
  40e955:	mov    ch,0x3b
  40e957:	ja     0x40e9aa
  40e959:	rcr    eax,0x8b
  40e95c:	mov    ah,0x1a
  40e95e:	out    dx,eax
  40e95f:	test   eax,0x27e712cd
  40e964:	test   al,0x16
  40e966:	or     al,0x9e
  40e969:	pop    esi
  40e96a:	push   ds
  40e96b:	popa   
  40e96c:	pop    ebx
  40e96d:	pop    es
  40e96e:	sub    al,0x68
  40e970:	mov    ss,WORD PTR [edx]
  40e972:	test   eax,0x7e03c52c
  40e977:	out    0x5a,al
  40e979:	call   0xb3f:0xf56f9b7
  40e980:	fstp   QWORD PTR [ebp-0x1c]
  40e983:	retf   
  40e984:	inc    esp
  40e985:	jae    0x40e9d7
  40e987:	push   edx
  40e988:	mov    dl,ch
  40e98a:	cdq    
  40e98b:	pop    ss
  40e98c:	aad    0x9
  40e98e:	sbb    eax,0x2cef3bb5
  40e993:	mov    esp,0xbba9f25e
  40e998:	fild   QWORD PTR [eax-0x75816170]
  40e99e:	or     ecx,DWORD PTR [edi+0x109bb307]
  40e9a4:	add    BYTE PTR [ecx+0x5dfd0712],ch
  40e9aa:	xlat   BYTE PTR ds:[ebx]
  40e9ab:	jae    0x40e9ba
  40e9ad:	cwde   
  40e9ae:	(bad)  
  40e9af:	cmc    
  40e9b0:	mov    cl,0x3d
  40e9b2:	ror    BYTE PTR cs:[ebx],cl
  40e9b5:	pop    esi
  40e9b6:	xchg   ebp,eax
  40e9b7:	mov    DWORD PTR [eax-0x25],esp
  40e9ba:	jmp    0xff4c:0x59b83eed
  40e9c1:	xchg   edx,eax
  40e9c2:	sbb    al,0x6e
  40e9c4:	iret   
  40e9c5:	pop    ebp
  40e9c6:	shr    BYTE PTR [esi+ebx*2-0x423d4af6],cl
  40e9cd:	sbb    eax,0x70026f51
  40e9d2:	or     eax,0x14035a96
  40e9d7:	cmp    BYTE PTR [ebp-0x2f],cl
  40e9da:	ds shl edx,0xda
  40e9de:	shr    DWORD PTR [esi+0xb1e0b10],cl
  40e9e4:	dec    esp
  40e9e5:	out    0x92,al
  40e9e7:	jmp    0x4e07:0x99dae6e4
  40e9ee:	popa   
  40e9ef:	cmp    al,0xf7
  40e9f1:	sub    al,0xba
  40e9f3:	push   ss
  40e9f4:	xchg   esi,eax
  40e9f5:	pop    ss
  40e9f6:	sub    al,0x97
  40e9f8:	ins    DWORD PTR es:[edi],dx
  40e9f9:	ja     0x40e9e1
  40e9fb:	test   BYTE PTR [esi],ch
  40e9fd:	ds pop edi
  40e9ff:	jmp    0x40ea61
  40ea01:	jmp    0x40ea23
  40ea03:	nop
  40ea04:	aad    0x43
  40ea06:	in     eax,0xe7
  40ea08:	mov    dh,0x7a
  40ea0a:	xor    BYTE PTR [ecx-0x78],0x2b
  40ea0e:	dec    ebx
  40ea0f:	in     al,dx
  40ea10:	ret    
  40ea11:	pop    ds
  40ea12:	push   edx
  40ea13:	sub    eax,0x6c18b114
  40ea18:	test   BYTE PTR [esi],al
  40ea1a:	mov    DWORD PTR [edi-0x77fd2cb],0xd04d88ac
  40ea24:	test   al,0x7
  40ea26:	(bad)  
  40ea27:	sbb    eax,0x1d36a22f
  40ea2c:	out    dx,eax
  40ea2d:	and    al,bl
  40ea2f:	cld    
  40ea30:	dec    edi
  40ea31:	in     al,0xfb
  40ea33:	cmp    eax,0xdb640bbc
  40ea38:	jge    0xdb23
  40ea3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea3e:	lahf   
  40ea3f:	mov    ebx,0xbc3b11c6
  40ea44:	adc    DWORD PTR [ecx],ecx
  40ea46:	inc    DWORD PTR [esi]
  40ea48:	mov    edi,0xe6073eab
  40ea4d:	push   ecx
  40ea4e:	and    DWORD PTR [edx],ecx
  40ea50:	mov    esp,0x744c8bfb
  40ea55:	(bad)  
  40ea56:	mov    eax,0x8b1b33a7
  40ea5b:	or     BYTE PTR [edx-0x58],al
  40ea5e:	jno    0x40ea1b
  40ea60:	imul   ax,bx,0x61b6
  40ea65:	sub    BYTE PTR [ebx+0x69714ebb],al
  40ea6b:	cmp    ebx,DWORD PTR [eax-0x53de1097]
  40ea71:	outs   dx,DWORD PTR ds:[esi]
  40ea72:	add    bl,BYTE PTR [edi+0x7f]
  40ea75:	adc    ecx,DWORD PTR [ecx]
  40ea77:	bnd jb 0x40eaa2
  40ea7a:	add    BYTE PTR [eax-0x53],al
  40ea7d:	int    0x30
  40ea7f:	loop   0x40ea38
  40ea81:	push   esi
  40ea82:	jae    0x40ea9e
  40ea84:	lods   al,BYTE PTR ds:[esi]
  40ea85:	sub    al,0xea
  40ea87:	aas    
  40ea88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea89:	fsubr  DWORD PTR [edi]
  40ea8b:	stos   BYTE PTR es:[edi],al
  40ea8c:	cmc    
  40ea8d:	fbld   TBYTE PTR [esi-0x37fa2edd]
  40ea93:	hlt    
  40ea94:	fild   DWORD PTR [esi]
  40ea96:	lods   eax,DWORD PTR ds:[esi]
  40ea97:	push   ds
  40ea98:	dec    esp
  40ea99:	add    ebx,DWORD PTR [ebp+0x76]
  40ea9c:	rol    DWORD PTR [ebp+0x426a2a23],cl
  40eaa2:	(bad)  
  40eaa4:	ds ss rcl bl,1
  40eaa8:	rcl    BYTE PTR [esi],1
  40eaaa:	push   0xfb9999c8
  40eaaf:	or     edi,esi
  40eab1:	xchg   esi,eax
  40eab2:	loope  0x40eacd
  40eab4:	cmp    esi,esp
  40eab6:	lea    esp,[edi+eiz*8-0x287a1a32]
  40eabd:	pop    edi
  40eabe:	add    DWORD PTR [ecx+0x54],ebp
  40eac1:	mov    ch,0x44
  40eac3:	jbe    0x40eb06
  40eac5:	imul   edx,DWORD PTR [ebp+0x5],0xffffffae
  40eac9:	sar    BYTE PTR [edx],1
  40eacb:	mov    bl,0x23
  40eacd:	dec    esi
  40eace:	mov    ebp,0xb71a9147
  40ead3:	mov    eax,ds:0x6eb442f6
  40ead8:	stos   BYTE PTR es:[edi],al
  40ead9:	fdiv   st(0),st
  40eadb:	xor    BYTE PTR [ebx+eiz*4-0x69],bh
  40eadf:	out    dx,eax
  40eae0:	mov    edi,0xc7b8f64b
  40eae5:	ins    DWORD PTR es:[edi],dx
  40eae6:	test   al,0x1a
  40eae8:	es aas 
  40eaea:	repz test DWORD PTR [ebx+0x126bd96d],0x82720696
  40eaf5:	ror    cl,1
  40eaf7:	jns    0x40eb35
  40eaf9:	push   ebp
  40eafa:	clc    
  40eafb:	jl     0x40eb57
  40eafd:	scas   al,BYTE PTR es:[edi]
  40eafe:	mov    esp,ebx
  40eb00:	cmp    ebx,DWORD PTR [edx+eiz*8+0x64]
  40eb04:	es jp  0x40eb02
  40eb07:	rcl    BYTE PTR [ebp-0x68],1
  40eb0a:	shl    DWORD PTR [eax+0x43ad60c8],cl
  40eb10:	mov    al,0xdf
  40eb12:	fucom  st(3)
  40eb14:	add    al,0xeb
  40eb16:	inc    edi
  40eb17:	loop   0x40eb6d
  40eb19:	sub    ebx,DWORD PTR [eax+eiz*8]
  40eb1c:	enter  0x42a5,0x5f
  40eb20:	xlat   BYTE PTR ds:[ebx]
  40eb21:	push   esi
  40eb22:	hlt    
  40eb23:	mov    dl,0x8
  40eb25:	jns    0x40eb48
  40eb27:	(bad)  
  40eb29:	add    edx,esp
  40eb2b:	aad    0x6b
  40eb2d:	xchg   ebp,eax
  40eb2e:	sub    DWORD PTR [ecx],0x8b0af127
  40eb34:	pop    ebp
  40eb35:	push   edx
  40eb36:	cmp    eax,0x6178efa4
  40eb3b:	add    al,0x55
  40eb3d:	retf   0xcbd3
  40eb40:	nop
  40eb41:	sar    DWORD PTR [ebp+0x39],0x29
  40eb45:	adc    eax,0xddf0b41f
  40eb4a:	(bad)  
  40eb4b:	das    
  40eb4c:	inc    eax
  40eb4d:	pop    esi
  40eb4e:	add    DWORD PTR [edi],0xffffffdf
  40eb51:	sbb    ch,dh
  40eb53:	sti    
  40eb54:	adc    al,0xcd
  40eb56:	or     BYTE PTR [ecx-0x275bd7ca],dl
  40eb5c:	add    eax,0x48272906
  40eb61:	xlat   BYTE PTR ds:[ebx]
  40eb62:	push   0xffffffd4
  40eb64:	mov    edx,0x73db6feb
  40eb69:	icebp  
  40eb6a:	add    eax,0x3cd8428d
  40eb6f:	sar    BYTE PTR [ecx+ebp*4+0x29],1
  40eb73:	jecxz  0x40eb58
  40eb75:	mov    dl,0xd5
  40eb77:	adc    esp,DWORD PTR [edi+0x46b25f84]
  40eb7d:	pop    eax
  40eb7e:	lea    eax,[edi+0x1a]
  40eb81:	inc    eax
  40eb82:	pop    eax
  40eb83:	mov    edi,0x9831b47d
  40eb88:	xlat   BYTE PTR ds:[ebx]
  40eb89:	cwde   
  40eb8a:	outs   dx,BYTE PTR ds:[esi]
  40eb8b:	mov    edi,0xf09540d8
  40eb90:	jbe    0x40eb9f
  40eb92:	fwait
  40eb93:	fs pop edi
  40eb95:	inc    esi
  40eb96:	jae    0x40eb2f
  40eb98:	sahf   
  40eb99:	push   0xffffffca
  40eb9b:	sub    bh,bh
  40eb9d:	ret    
  40eb9e:	mov    eax,0xf02337b3
  40eba3:	dec    esp
  40eba4:	add    ecx,DWORD PTR [eax-0x5f]
  40eba7:	test   eax,0xa0ec6f9f
  40ebac:	xchg   ebx,eax
  40ebad:	adc    BYTE PTR [ecx-0xe],ah
  40ebb0:	inc    ebp
  40ebb1:	(bad)  
  40ebb2:	clc    
  40ebb3:	out    0xa6,al
  40ebb5:	mov    dl,0xf9
  40ebb7:	jnp    0x40ec16
  40ebb9:	or     al,0xf1
  40ebbb:	stc    
  40ebbc:	shr    DWORD PTR [ecx-0x55],1
  40ebbf:	ja     0x40eb73
  40ebc1:	lea    edi,[edx+0x10]
  40ebc4:	xbegin 0x964ba3e8
  40ebca:	ret    
  40ebcb:	in     al,0x38
  40ebcd:	push   cs
  40ebce:	push   ds
  40ebcf:	sub    al,0xe2
  40ebd1:	or     edi,DWORD PTR [ebx+eax*1-0x6c]
  40ebd5:	std    
  40ebd6:	out    0x2f,al
  40ebd8:	mov    ch,0x48
  40ebda:	xchg   ebp,edi
  40ebdc:	jmp    0xac1a8aed
  40ebe1:	out    dx,al
  40ebe2:	mov    WORD PTR [ecx],?
  40ebe4:	clc    
  40ebe5:	in     al,0x66
  40ebe7:	sub    eax,0x987a23d
  40ebec:	leave  
  40ebed:	loope  0x40ec63
  40ebef:	jne    0x40ec48
  40ebf1:	xor    BYTE PTR [eax],al
  40ebf3:	jmp    0x40ec5c
  40ebf5:	lock test al,0xa0
  40ebf8:	adc    ebp,DWORD PTR [eax-0x77f7b6e1]
  40ebfe:	call   0x9847:0x905d979b
  40ec05:	push   ds
  40ec06:	(bad)  
  40ec07:	retf   0x2378
  40ec0a:	inc    esi
  40ec0b:	stos   DWORD PTR es:[edi],eax
  40ec0c:	bound  ecx,QWORD PTR [esi]
  40ec0e:	aam    0xf6
  40ec10:	or     eax,eax
  40ec12:	test   dh,bl
  40ec14:	bound  ebp,QWORD PTR [ecx+0x37]
  40ec17:	outs   dx,BYTE PTR ds:[esi]
  40ec18:	test   DWORD PTR [edx],0xc7760d12
  40ec1e:	xchg   esp,eax
  40ec1f:	int    0x79
  40ec21:	xchg   BYTE PTR [edi+0x27],cl
  40ec24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec25:	inc    ebp
  40ec26:	cmc    
  40ec27:	arpl   WORD PTR [ebx-0x6076a95],si
  40ec2d:	cs popf 
  40ec2f:	(bad)  
  40ec30:	outs   dx,DWORD PTR ds:[esi]
  40ec31:	sub    ch,al
  40ec33:	mov    cl,0x4b
  40ec35:	aam    0xd9
  40ec37:	xchg   ebp,eax
  40ec38:	dec    eax
  40ec39:	xchg   edi,eax
  40ec3a:	jle    0x40ebd1
  40ec3c:	jle    0x40ec91
  40ec3e:	jnp    0x40ec2e
  40ec40:	shr    DWORD PTR [esi],cl
  40ec42:	enter  0x630,0x4f
  40ec46:	sbb    al,0xfc
  40ec48:	dec    ebx
  40ec49:	cwde   
  40ec4a:	ss fwait
  40ec4c:	outs   dx,BYTE PTR ds:[esi]
  40ec4d:	lods   eax,DWORD PTR ds:[esi]
  40ec4e:	mov    al,ds:0xd25e1bf0
  40ec53:	scas   al,BYTE PTR es:[edi]
  40ec54:	mov    ebx,0xa5ba0f6a
  40ec59:	repnz es mov dh,0x38
  40ec5d:	std    
  40ec5e:	mov    esi,0x67fd5c88
  40ec63:	ret    0x2840
  40ec66:	(bad)  
  40ec67:	repz aaa 
  40ec69:	add    BYTE PTR [eax+ebx*1-0x66],dh
  40ec6d:	inc    esi
  40ec6e:	or     dl,BYTE PTR [edi-0x63d0ef0]
  40ec74:	cmp    ecx,DWORD PTR [ebp-0x7c]
  40ec77:	icebp  
  40ec78:	call   0xf4bc:0x2962dee8
  40ec7f:	pusha  
  40ec80:	mov    edx,0xc6890310
  40ec85:	lods   eax,DWORD PTR ds:[esi]
  40ec86:	pop    eax
  40ec87:	mov    bl,0x9b
  40ec89:	cwde   
  40ec8a:	push   esp
  40ec8b:	daa    
  40ec8c:	les    ebx,FWORD PTR [ecx+0x4dd0f19e]
  40ec92:	sti    
  40ec93:	lahf   
  40ec94:	out    dx,al
  40ec95:	inc    ecx
  40ec96:	cmp    ecx,DWORD PTR [edx+esi*8-0x6163d252]
  40ec9d:	das    
  40ec9e:	imul   edi,DWORD PTR [esi-0x10],0x6e
  40eca2:	adc    BYTE PTR [esi-0x6c],0x93
  40eca6:	mov    bh,0xde
  40eca8:	(bad)  
  40eca9:	daa    
  40ecaa:	in     eax,0x24
  40ecac:	les    esi,FWORD PTR [eax]
  40ecae:	clc    
  40ecaf:	popf   
  40ecb0:	fsub   st,st(3)
  40ecb2:	add    ecx,0xb289123
  40ecb8:	cs sub cl,0xc0
  40ecbc:	xchg   DWORD PTR [ecx],ebp
  40ecbe:	xor    eax,0x5d11363b
  40ecc3:	xchg   edx,eax
  40ecc4:	cli    
  40ecc5:	push   ecx
  40ecc6:	mov    BYTE PTR [ebx+0x77],ah
  40ecc9:	mov    ss,WORD PTR [edx+0x44]
  40eccc:	mov    esp,0xd8624e2c
  40ecd1:	les    edi,FWORD PTR cs:[edx+0x40]
  40ecd5:	xchg   esp,eax
  40ecd6:	adc    eax,0x212926a8
  40ecdb:	shr    DWORD PTR [ebx+0x2876141e],0x78
  40ece2:	mov    dh,0x83
  40ece4:	sub    ah,BYTE PTR [esi-0x4e]
  40ece7:	test   BYTE PTR [edx+0x5a8f101f],dl
  40eced:	fucomp st(3)
  40ecef:	dec    ebx
  40ecf0:	cmp    al,0xff
  40ecf2:	inc    eax
  40ecf3:	add    cl,dh
  40ecf5:	iret   
  40ecf6:	dec    DWORD PTR [edx+0x7407b698]
  40ecfc:	lea    edi,[ecx-0x3f]
  40ecff:	aam    0x9d
  40ed01:	xchg   edi,eax
  40ed02:	dec    edx
  40ed03:	repnz out 0x46,al
  40ed06:	shl    DWORD PTR [esi+0x2],1
  40ed09:	jns    0x40ed88
  40ed0b:	outs   dx,BYTE PTR ds:[esi]
  40ed0c:	fsub   QWORD PTR [eax+0x33]
  40ed0f:	xchg   edx,ebx
  40ed11:	inc    ecx
  40ed12:	mov    ebp,0x54841703
  40ed17:	inc    esp
  40ed18:	dec    esi
  40ed19:	loop   0x40ed1d
  40ed1b:	fwait
  40ed1c:	out    dx,eax
  40ed1d:	pop    esi
  40ed1e:	pushf  
  40ed1f:	mov    ebx,0x411dad98
  40ed24:	sbb    al,0x10
  40ed26:	xchg   esp,eax
  40ed27:	mov    edi,0xca7eada0
  40ed2c:	inc    ecx
  40ed2d:	pop    ecx
  40ed2e:	inc    ecx
  40ed2f:	std    
  40ed30:	repnz xchg ebp,eax
  40ed32:	(bad)  
  40ed34:	cmp    DWORD PTR [ecx+0x7a],eax
  40ed37:	addr16 jle 0x40edb8
  40ed3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3b:	mov    eax,ds:0x4c0c824b
  40ed40:	ds sub dl,bh
  40ed43:	stos   DWORD PTR es:[edi],eax
  40ed44:	lds    eax,FWORD PTR [edx+0x64]
  40ed47:	repz sub BYTE PTR [ebx+0x10],0x97
  40ed4c:	gs out 0x6b,al
  40ed4f:	loope  0x40ece1
  40ed51:	push   ss
  40ed52:	sti    
  40ed53:	mov    ch,bh
  40ed55:	fimul  WORD PTR [edx+eiz*1]
  40ed58:	gs jecxz 0x40edc8
  40ed5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5c:	sahf   
  40ed5d:	cmp    BYTE PTR [edi-0x3e],0xe8
  40ed61:	scas   al,BYTE PTR es:[edi]
  40ed62:	adc    eax,0x2e8aa034
  40ed67:	inc    edx
  40ed68:	push   ebx
  40ed69:	sbb    dh,BYTE PTR [eax+0x343b7df]
  40ed6f:	add    DWORD PTR [ebp-0x8],edi
  40ed72:	fisttp DWORD PTR [ecx+0x7682ef50]
  40ed78:	push   edx
  40ed79:	mov    dh,0x7e
  40ed7b:	int    0xf7
  40ed7d:	lods   al,BYTE PTR ds:[esi]
  40ed7e:	dec    edi
  40ed7f:	mov    edx,0x2c1e39c3
  40ed84:	and    eax,0x1a4e8a23
  40ed89:	or     eax,0x232d5c00
  40ed8e:	rol    BYTE PTR [ecx+edx*2],0x68
  40ed92:	test   al,0xe5
  40ed94:	dec    esp
  40ed95:	ins    DWORD PTR es:[edi],dx
  40ed96:	mov    DWORD PTR [edi+ebp*4-0x6883bbb8],ebp
  40ed9d:	and    DWORD PTR [esi],ecx
  40ed9f:	ror    BYTE PTR [edi],1
  40eda1:	outs   dx,DWORD PTR ds:[esi]
  40eda2:	out    0x14,eax
  40eda4:	xchg   edx,eax
  40eda5:	push   ss
  40eda6:	add    dh,BYTE PTR [ecx-0x6944f070]
  40edac:	aaa    
  40edad:	dec    edx
  40edae:	pop    ss
  40edaf:	out    dx,eax
  40edb0:	mov    ds:0x6effd5fb,al
  40edb5:	xor    al,0x83
  40edb7:	out    dx,eax
  40edb8:	out    dx,al
  40edb9:	push   edx
  40edba:	sub    BYTE PTR [edi*2+0x2184013c],ch
  40edc1:	jae    0x40eda3
  40edc3:	sbb    edi,DWORD PTR [eax+0x8c32f20]
  40edc9:	jnp    0x40edc3
  40edcb:	fisttp DWORD PTR [ebp-0x67]
  40edce:	and    ebp,DWORD PTR [esi]
  40edd0:	jb     0x40edc2
  40edd2:	mov    ebp,0x511702b1
  40edd7:	mov    esp,DWORD PTR [edx-0x63]
  40edda:	cmp    al,0xbb
  40eddc:	daa    
  40eddd:	dec    edx
  40edde:	mov    BYTE PTR [esi+0x46],bl
  40ede1:	push   esi
  40ede2:	mov    dl,0x2b
  40ede4:	pop    ss
  40ede5:	pop    esp
  40ede6:	dec    esp
  40ede7:	xor    ecx,DWORD PTR [edx]
  40ede9:	and    DWORD PTR [edi-0x62],ebx
  40edec:	int3   
  40eded:	xor    ebx,DWORD PTR [eax-0x3a]
  40edf0:	inc    edi
  40edf1:	mov    dl,0x8b
  40edf3:	js     0x40edcb
  40edf5:	jge    0x40ee25
  40edf7:	int    0xda
  40edf9:	or     ah,BYTE PTR [ecx+0x25]
  40edfc:	arpl   WORD PTR [ecx+edi*1-0xc],ax
  40ee00:	fld    QWORD PTR [ebp+0x4b2670c9]
  40ee06:	aad    0xa7
  40ee08:	je     0x40ee1f
  40ee0a:	mov    ds:0xde5a19e3,eax
  40ee0f:	and    bl,BYTE PTR [ebp-0x6a112508]
  40ee15:	and    al,0xd1
  40ee17:	jle    0x40ee8f
  40ee19:	sbb    bh,BYTE PTR [esi]
  40ee1b:	xchg   ecx,eax
  40ee1c:	ins    DWORD PTR es:[edi],dx
  40ee1d:	mov    al,0x95
  40ee1f:	xor    DWORD PTR ds:0xfd3919cb,ebp
  40ee25:	mov    dl,0x3b
  40ee27:	sbb    edi,DWORD PTR [ebp+0x15]
  40ee2a:	clc    
  40ee2b:	adc    BYTE PTR [edi],0x5
  40ee2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee2f:	mov    cs,WORD PTR [eax+0x4e96e7dd]
  40ee35:	adc    dl,bh
  40ee37:	shr    ebx,1
  40ee39:	scas   eax,DWORD PTR es:[edi]
  40ee3a:	sbb    al,0xdc
  40ee3c:	or     al,0xe5
  40ee3e:	xchg   ecx,eax
  40ee3f:	jp     0x40ee31
  40ee41:	mov    edx,0x7483722e
  40ee46:	nop
  40ee47:	in     al,dx
  40ee48:	arpl   si,si
  40ee4a:	jns    0x40ee57
  40ee4c:	fwait
  40ee4d:	and    al,0xaf
  40ee4f:	jne    0x40ee1f
  40ee51:	xor    eax,0x4cd8e23c
  40ee56:	sub    bl,ah
  40ee58:	loop   0x40edfd
  40ee5a:	les    esi,FWORD PTR [eax]
  40ee5c:	sbb    ebp,DWORD PTR [ecx]
  40ee5e:	(bad)  
  40ee5f:	jnp    0x40ee97
  40ee61:	iret   
  40ee62:	das    
  40ee63:	das    
  40ee64:	in     eax,0x4c
  40ee66:	rol    BYTE PTR [edx],0x59
  40ee69:	or     eax,0xaac15497
  40ee6e:	(bad)  
  40ee70:	ret    
  40ee71:	adc    al,0xac
  40ee73:	sbb    eax,0x22a34f42
  40ee78:	add    DWORD PTR [eax-0x39391ec8],esi
  40ee7e:	mov    dl,0x48
  40ee80:	jae    0x40ee28
  40ee82:	outs   dx,BYTE PTR ds:[esi]
  40ee83:	lahf   
  40ee84:	cmc    
  40ee85:	fwait
  40ee86:	jmp    0x40eee1
  40ee88:	and    BYTE PTR [ecx],ah
  40ee8a:	jg     0x40eefa
  40ee8c:	enter  0x67e2,0xef
  40ee90:	adc    WORD PTR [ebx+0x16],0x60
  40ee95:	mov    edi,0x159e396b
  40ee9a:	sub    esp,edi
  40ee9c:	aam    0x1c
  40ee9e:	je     0x40ef11
  40eea0:	xchg   BYTE PTR [esi-0x4f83aee8],ch
  40eea6:	sub    esi,ebx
  40eea8:	xchg   edi,eax
  40eea9:	sub    eax,0xf4c16aa7
  40eeae:	sub    DWORD PTR [edi-0x16],ebp
  40eeb1:	loop   0x40ee5a
  40eeb3:	mov    fs,WORD PTR [eax-0x3c]
  40eeb6:	jecxz  0x40ee68
  40eeb8:	sbb    BYTE PTR [ebx],bh
  40eeba:	sbb    eax,0x77c51a77
  40eebf:	ror    BYTE PTR [eax+0x5a],0x50
  40eec3:	inc    edi
  40eec4:	or     BYTE PTR [ecx-0x140ed018],dl
  40eeca:	ret    
  40eecb:	das    
  40eecc:	neg    DWORD PTR [ecx]
  40eece:	sahf   
  40eecf:	mov    edx,0x14862a43
  40eed4:	jno    0x40ef3a
  40eed6:	lods   eax,DWORD PTR ds:[esi]
  40eed7:	into   
  40eed8:	stc    
  40eed9:	sbb    edx,DWORD PTR [esi+0x4e]
  40eedc:	rcr    DWORD PTR [eax-0x72],1
  40eedf:	inc    ebx
  40eee0:	fisubr WORD PTR [eax+eax*2-0x3c]
  40eee4:	aad    0xd
  40eee6:	lahf   
  40eee7:	xor    eax,edi
  40eee9:	pop    edx
  40eeea:	(bad)
  40eeee:	lahf   
  40eeef:	and    dl,BYTE PTR [ebp-0x4fe2b673]
  40eef5:	adc    bh,BYTE PTR [edx+0x47402bc]
  40eefb:	cli    
  40eefc:	push   ebp
  40eefd:	out    dx,al
  40eefe:	mov    edi,0x1648c575
  40ef03:	cmc    
  40ef04:	ins    DWORD PTR es:[edi],dx
  40ef05:	cmp    bh,ah
  40ef07:	ja     0x40eedf
  40ef09:	imul   esi,edi,0x30e20c35
  40ef0f:	xchg   dh,dl
  40ef11:	jo     0x40ef24
  40ef13:	das    
  40ef14:	(bad)  
  40ef16:	sub    DWORD PTR [edx+eax*8-0x293e247b],edi
  40ef1d:	adc    DWORD PTR [ebx+0x7909c95f],edi
  40ef23:	nop
  40ef24:	(bad)  
  40ef25:	adc    al,0x31
  40ef27:	mov    edi,cs
  40ef29:	fsub   QWORD PTR [ebx+0x79caa9de]
  40ef2f:	test   eax,0x25f6cc68
  40ef34:	pop    eax
  40ef35:	or     ecx,edx
  40ef37:	mov    bh,0xfa
  40ef39:	adc    DWORD PTR [edi-0x43],0xffffffe0
  40ef3d:	retf   
  40ef3e:	test   eax,0x7b840d2c
  40ef43:	push   esi
  40ef44:	xor    DWORD PTR [esp+ecx*2-0x5d],edx
  40ef48:	int3   
  40ef49:	push   0xffffffbc
  40ef4b:	or     edx,DWORD PTR [ebx+0x6ce94ca1]
  40ef51:	adc    al,BYTE PTR [esi-0x70]
  40ef54:	xchg   edi,eax
  40ef55:	nop
  40ef56:	mov    ch,0xca
  40ef58:	mov    eax,0x59ecf84f
  40ef5d:	jns    0x40eeea
  40ef5f:	jle    0x40efd1
  40ef61:	add    esp,ebx
  40ef63:	out    dx,al
  40ef64:	int    0xe8
  40ef66:	cmp    dl,cl
  40ef68:	sub    al,0x74
  40ef6a:	xlat   BYTE PTR ds:[ebx]
  40ef6b:	mov    WORD PTR [ebp+0x46],es
  40ef6e:	cmc    
  40ef6f:	out    dx,eax
  40ef70:	xchg   BYTE PTR ds:0x62404397,bl
  40ef76:	push   cs
  40ef77:	pop    ds
  40ef78:	jecxz  0x40ef15
  40ef7a:	inc    edx
  40ef7b:	js     0x40efa6
  40ef7d:	dec    esp
  40ef7e:	scas   al,BYTE PTR es:[edi]
  40ef7f:	sbb    ah,bh
  40ef81:	repnz lahf 
  40ef83:	cmp    BYTE PTR [ecx+0x27e751df],0x86
  40ef8a:	sbb    al,0xb8
  40ef8c:	ret    0x55ac
  40ef8f:	jle    0x40ef36
  40ef91:	xchg   edx,eax
  40ef92:	jg     0x40eff0
  40ef94:	sub    eax,DWORD PTR [edi-0x4e]
  40ef97:	sbb    esp,DWORD PTR [esi]
  40ef99:	mov    ebx,0x2ccbcfca
  40ef9e:	ret    0xfa7e
  40efa1:	xchg   BYTE PTR [eax+0x4],cl
  40efa4:	int    0xa6
  40efa6:	rcl    BYTE PTR [ecx],cl
  40efa8:	in     eax,dx
  40efa9:	xor    ah,ch
  40efab:	adc    edx,DWORD PTR [eax]
  40efad:	mov    esp,ss
  40efaf:	xor    bl,BYTE PTR [eax*1+0x4479ec36]
  40efb6:	sbb    DWORD PTR [esi-0x69dc63df],ecx
  40efbc:	mov    ecx,DWORD PTR [edx]
  40efbe:	jne    0x40efee
  40efc0:	push   ecx
  40efc1:	mov    eax,0xaf632070
  40efc6:	and    BYTE PTR [edi-0x49a64c23],dh
  40efcc:	mov    cs,WORD PTR [ebp-0x22cbdd0a]
  40efd2:	mov    edi,0xcd239b2a
  40efd7:	loope  0x40f025
  40efd9:	pushf  
  40efda:	repz aas 
  40efdc:	data16 arpl WORD PTR [edx+0xe9cdae8],dx
  40efe3:	dec    esp
  40efe4:	leave  
  40efe5:	in     al,0x13
  40efe7:	ins    BYTE PTR es:[edi],dx
  40efe8:	sub    eax,0x7b5520f5
  40efed:	pop    ebp
  40efee:	mov    bl,0x95
  40eff0:	adc    cl,0xb8
  40eff3:	cmp    edi,DWORD PTR ds:0x59089058
  40eff9:	add    eax,0x9798a438
  40effe:	sub    eax,0x1e95767f
  40f003:	dec    ecx
  40f004:	cmp    eax,0xb087bc14
  40f009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00a:	mov    al,0xc2
  40f00c:	mov    edx,0x47203d2d
  40f011:	retf   
  40f012:	stos   BYTE PTR es:[edi],al
  40f013:	and    ebx,0x68
  40f016:	lahf   
  40f017:	aam    0xe6
  40f019:	pop    esi
  40f01a:	sub    ebx,edx
  40f01c:	mov    cl,0xa0
  40f01e:	or     ch,BYTE PTR [eax]
  40f020:	sbb    ch,BYTE PTR [ebp+eax*4+0x48]
  40f024:	pop    edx
  40f025:	int    0xde
  40f027:	lahf   
  40f028:	or     esi,DWORD PTR ss:[esi]
  40f02b:	ss add al,0x95
  40f02e:	imul   eax,DWORD PTR [eax-0x1921d38d],0xf062fc9a
  40f038:	fidiv  DWORD PTR [esi-0x49]
  40f03b:	or     eax,0x6d08a4ad
  40f040:	push   es
  40f041:	sub    eax,0xa3b16902
  40f046:	test   al,0x3d
  40f048:	repz gs sbb eax,0xfa46211
  40f04f:	aam    0x88
  40f051:	mov    esi,0xa78a8b82
  40f056:	cld    
  40f057:	ja     0x40f06b
  40f059:	js     0x40f022
  40f05b:	and    al,0x51
  40f05d:	out    0x60,eax
  40f05f:	pop    ebp
  40f060:	repnz and BYTE PTR [esi],dl
  40f063:	icebp  
  40f064:	and    al,0xa1
  40f066:	jae    0x40f057
  40f068:	jae    0x40f0d5
  40f06a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f06c:	(bad)  
  40f06d:	push   0xffffff94
  40f06f:	sbb    bh,bl
  40f071:	nop
  40f072:	sbb    DWORD PTR [edi+ecx*8],eax
  40f075:	cmp    bh,BYTE PTR [edx-0x7c2853c7]
  40f07b:	cmp    eax,0x35aeec2b
  40f080:	mov    bh,0xea
  40f082:	add    ch,dh
  40f084:	in     al,dx
  40f085:	int    0x9a
  40f087:	jbe    0x40f088
  40f089:	and    cl,bl
  40f08b:	(bad)  
  40f08c:	shl    DWORD PTR [ecx+eax*8+0x568bb28f],1
  40f093:	mov    ?,WORD PTR [ecx]
  40f095:	xor    ecx,DWORD PTR [edi+ebp*1+0x42d897b6]
  40f09c:	pop    ss
  40f09d:	xor    eax,0x83f11a63
  40f0a2:	adc    esi,ecx
  40f0a4:	xchg   edi,eax
  40f0a5:	jecxz  0x40f0bd
  40f0a7:	adc    BYTE PTR [edi+0x176634f],al
  40f0ad:	push   es
  40f0ae:	mul    DWORD PTR [ebx+eax*8+0x20fce810]
  40f0b5:	xchg   edx,eax
  40f0b6:	fimul  WORD PTR [esi]
  40f0b8:	or     al,0x5e
  40f0ba:	retf   
  40f0bb:	mov    esi,0xf568ce30
  40f0c0:	nop
  40f0c1:	inc    ecx
  40f0c2:	mov    ecx,0x4e6936b9
  40f0c7:	sbb    eax,0xb46b56f4
  40f0cc:	and    BYTE PTR [ebx],ah
  40f0ce:	push   esp
  40f0cf:	fcom   DWORD PTR [esi]
  40f0d1:	or     edx,DWORD PTR [edx+edx*4]
  40f0d4:	add    al,0xb3
  40f0d6:	mov    edx,0x285ae50d
  40f0db:	ins    DWORD PTR es:[edi],dx
  40f0dc:	jge    0x40f0fc
  40f0de:	es push 0x24
  40f0e1:	jbe    0x40f0ee
  40f0e3:	ret    0x5490
  40f0e6:	stc    
  40f0e7:	and    eax,0x8aaeba80
  40f0ec:	mov    edi,0xf5dcf708
  40f0f1:	lods   eax,DWORD PTR ds:[esi]
  40f0f2:	inc    edx
  40f0f3:	fist   WORD PTR [ecx+0x9]
  40f0f6:	adc    BYTE PTR [esi],al
  40f0f8:	sub    al,BYTE PTR [ebp+0x19]
  40f0fb:	loope  0x40f083
  40f0fd:	sub    eax,0xc8024acf
  40f102:	iret   
  40f103:	fst    DWORD PTR [esi]
  40f105:	test   DWORD PTR [ecx],ecx
  40f107:	xchg   ecx,eax
  40f108:	lahf   
  40f109:	mov    edi,0x30304822
  40f10e:	cld    
  40f10f:	scas   al,BYTE PTR es:[edi]
  40f110:	in     eax,dx
  40f111:	call   0x83:0x474010a7
  40f118:	xor    esi,DWORD PTR [edi]
  40f11a:	in     eax,0x3d
  40f11c:	lods   eax,DWORD PTR ds:[esi]
  40f11d:	jno    0x40f15e
  40f11f:	loop   0x40f0ec
  40f121:	test   al,0x3
  40f123:	or     DWORD PTR [edi+ebp*8-0x31],edi
  40f127:	fwait
  40f128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f129:	in     eax,dx
  40f12a:	je     0x40f0f0
  40f12c:	jp     0x40f199
  40f12e:	ds mov al,0x51
  40f131:	rcl    DWORD PTR [ecx-0x75],cl
  40f134:	add    ebp,DWORD PTR [ebp-0x51e12dbe]
  40f13a:	inc    esi
  40f13b:	xchg   esp,eax
  40f13c:	push   ebx
  40f13d:	fistp  WORD PTR [edi+0x65]
  40f140:	xor    al,0xd9
  40f142:	push   ebp
  40f143:	dec    edx
  40f144:	push   ebx
  40f145:	sub    edx,edx
  40f147:	int3   
  40f148:	push   0x30a690c5
  40f14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f14e:	cld    
  40f14f:	repz (bad) 
  40f151:	jno    0x40f19e
  40f153:	outs   dx,DWORD PTR ds:[esi]
  40f154:	pop    ss
  40f155:	loope  0x40f108
  40f157:	cs test ecx,esi
  40f15a:	lahf   
  40f15b:	mov    dh,0x9c
  40f15d:	cmp    ah,BYTE PTR [eax]
  40f15f:	jg     0x40f1a0
  40f161:	mov    eax,ds:0xec22bfc2
  40f166:	jl     0x40f106
  40f168:	pop    edi
  40f169:	js     0x40f113
  40f16b:	inc    esp
  40f16c:	adc    eax,0xd628b7f0
  40f171:	mov    ds:0x38ec86c4,al
  40f176:	xchg   BYTE PTR [eax-0x73d27a7],dl
  40f17c:	mov    eax,ds:0xe846f1a6
  40f181:	sub    ebx,DWORD PTR [edx]
  40f183:	and    ebx,DWORD PTR [ebp+0x3e]
  40f186:	pop    ecx
  40f187:	jecxz  0x40f126
  40f189:	add    eax,0x79142662
  40f18e:	pop    esp
  40f18f:	jo     0x40f197
  40f191:	inc    eax
  40f192:	cmp    dl,cl
  40f194:	jg     0x40f20f
  40f196:	fdiv   st,st(3)
  40f198:	test   DWORD PTR [edx+edx*8-0x5],edx
  40f19c:	push   ss
  40f19d:	iret   
  40f19e:	xchg   BYTE PTR [esi-0x5548c40c],bh
  40f1a4:	cmp    edi,0xffffffde
  40f1a7:	mov    ds:0xc68ecdc8,al
  40f1ac:	(bad)  [eax]
  40f1ae:	cwde   
  40f1af:	adc    BYTE PTR [esi+0x3061f679],ch
  40f1b5:	inc    esi
  40f1b6:	es dec esi
  40f1b8:	enter  0x7bc7,0xfe
  40f1bc:	pop    edx
  40f1bd:	leave  
  40f1be:	adc    al,0xf9
  40f1c0:	jnp    0x40f16d
  40f1c2:	pop    eax
  40f1c3:	sub    al,0xc7
  40f1c5:	dec    ebx
  40f1c6:	or     BYTE PTR [edi-0x1aac9198],dl
  40f1cc:	add    bl,cl
  40f1ce:	mov    ch,0xe1
  40f1d0:	(bad)  
  40f1d1:	clc    
  40f1d2:	retf   0xbbad
  40f1d5:	shl    DWORD PTR [ebx],1
  40f1d7:	in     eax,0x0
  40f1d9:	pushf  
  40f1da:	out    0x4e,al
  40f1dc:	add    eax,0x52fc100c
  40f1e2:	and    esi,0xffffffbe
  40f1e5:	dec    ecx
  40f1e6:	mov    ecx,0x98c3b50e
  40f1eb:	xchg   ebp,eax
  40f1ec:	pop    ss
  40f1ed:	pop    esp
  40f1ee:	or     edi,esp
  40f1f0:	sub    edi,DWORD PTR [esi]
  40f1f2:	or     dl,cl
  40f1f4:	mov    ah,0x77
  40f1f6:	dec    eax
  40f1f7:	or     eax,0x83b318b9
  40f1fc:	shl    DWORD PTR [eax+edx*8+0x3b],0x9d
  40f201:	inc    ecx
  40f202:	shr    eax,cl
  40f204:	int3   
  40f205:	or     bh,BYTE PTR [eax+ebp*2-0x5d]
  40f209:	popf   
  40f20a:	xchg   BYTE PTR [ecx+0x1956c9c5],bh
  40f210:	sahf   
  40f211:	pop    ebx
  40f212:	jno    0x40f19f
  40f214:	xor    BYTE PTR [eax],bl
  40f216:	mov    esp,0x1637f1d9
  40f21b:	sbb    edx,edx
  40f21d:	les    esp,FWORD PTR [edx+0x34c0b1bb]
  40f223:	push   0xf118f4bb
  40f228:	js     0x40f24c
  40f22a:	add    DWORD PTR ds:0x95e182bf,edi
  40f230:	leave  
  40f231:	and    DWORD PTR [edx-0xb6b3dc6],edi
  40f237:	out    dx,eax
  40f238:	or     al,0x2f
  40f23a:	push   esi
  40f23b:	push   ss
  40f23c:	les    esp,FWORD PTR [ebx-0x78380905]
  40f242:	std    
  40f243:	test   BYTE PTR [edi+esi*8-0x3c],dl
  40f247:	adc    cl,dh
  40f249:	mov    edx,0x56c1c059
  40f24e:	out    0xe4,al
  40f250:	loope  0x40f20c
  40f252:	nop
  40f253:	outs   dx,BYTE PTR ds:[esi]
  40f254:	add    ch,BYTE PTR [esi-0x1b]
  40f257:	mov    al,0x37
  40f259:	jo     0x40f2a3
  40f25b:	cmp    edi,ecx
  40f25d:	jbe    0x40f255
  40f25f:	daa    
  40f260:	loope  0x40f26d
  40f262:	stos   BYTE PTR es:[edi],al
  40f263:	popa   
  40f264:	sbb    BYTE PTR [edi],al
  40f266:	jno    0x40f29b
  40f268:	scas   eax,DWORD PTR es:[edi]
  40f269:	cmp    DWORD PTR [edx+esi*1-0x31],ebp
  40f26d:	jle    0x40f2ba
  40f26f:	xor    DWORD PTR [ebx-0x2614cadc],esp
  40f275:	jne    0x40f2b1
  40f277:	jg     0x40f276
  40f279:	add    al,0x19
  40f27b:	retf   
  40f27c:	loopne 0x40f2c2
  40f27e:	aam    0x90
  40f280:	sar    bh,1
  40f282:	es jp  0x40f2da
  40f285:	pop    edi
  40f286:	aas    
  40f287:	fistp  QWORD PTR [edx+0x1c0e68e3]
  40f28d:	inc    esi
  40f28e:	mov    ds,WORD PTR ds:0xa352d13c
  40f294:	mov    eax,0x73e0e5ae
  40f299:	push   ebx
  40f29a:	shr    eax,1
  40f29c:	jle    0x40f23d
  40f29e:	fistp  DWORD PTR [edx]
  40f2a0:	imul   esi,ecx,0x72
  40f2a3:	jno    0x40f2a3
  40f2a5:	test   BYTE PTR [edi-0x54372e93],dh
  40f2ab:	lods   al,BYTE PTR ds:[esi]
  40f2ac:	ret    
  40f2ad:	mov    ds:0x8365ee91,al
  40f2b2:	add    DWORD PTR [edi],ebx
  40f2b4:	inc    ebx
  40f2b5:	push   ebp
  40f2b6:	add    eax,0xc8dbacff
  40f2bb:	pop    eax
  40f2bc:	xor    al,0xba
  40f2be:	mov    esi,0xcb30e8fc
  40f2c3:	loopne 0x40f2e1
  40f2c5:	scas   al,BYTE PTR es:[edi]
  40f2c6:	xchg   edi,eax
  40f2c7:	cwde   
  40f2c8:	es push ecx
  40f2ca:	cmp    BYTE PTR [ebp+0x49],dh
  40f2cd:	add    BYTE PTR [ebp+0x1d],0x25
  40f2d1:	xchg   ebx,eax
  40f2d2:	xchg   esp,eax
  40f2d3:	mov    DWORD PTR [esi],eax
  40f2d5:	mov    bl,0x4d
  40f2d7:	add    esp,DWORD PTR [edi+0x65bfcfe3]
  40f2dd:	in     eax,0xbd
  40f2df:	push   esp
  40f2e0:	sub    DWORD PTR [edi],0xffffffd6
  40f2e3:	ins    BYTE PTR es:[edi],dx
  40f2e4:	cli    
  40f2e5:	aaa    
  40f2e6:	and    al,0x89
  40f2e8:	jns    0x40f316
  40f2ea:	sub    eax,0x6d01d959
  40f2ef:	sub    ax,WORD PTR [edx+ecx*1]
  40f2f3:	push   0x7a
  40f2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f6:	ss dec esi
  40f2f8:	aas    
  40f2f9:	shl    DWORD PTR [edi+0x13],1
  40f2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2fd:	mov    ds:0xd4fdcabb,al
  40f302:	inc    edi
  40f303:	sub    DWORD PTR [ecx],0x38d5d942
  40f309:	push   ss
  40f30a:	(bad)
  40f30e:	ret    
  40f30f:	aas    
  40f310:	mov    eax,ds:0xee8dfc2
  40f315:	jecxz  0x40f2b7
  40f317:	inc    edx
  40f318:	xchg   BYTE PTR [ecx-0x5a],cl
  40f31b:	clc    
  40f31c:	psubsb mm6,QWORD PTR [edx+0x45]
  40f320:	cli    
  40f321:	cdq    
  40f322:	cmp    al,0x1b
  40f324:	jnp    0x40f34d
  40f326:	add    BYTE PTR [esi-0x312c62eb],0xca
  40f32d:	mov    esi,DWORD PTR [esi+0xefbd06d]
  40f333:	mov    ebx,0x9d7274b1
  40f338:	push   0xdc6dd07c
  40f33d:	add    ebx,0xcd13a8e6
  40f343:	sbb    cl,0xa6
  40f346:	jmp    0x40f2f8
  40f348:	pusha  
  40f349:	outs   dx,BYTE PTR ds:[esi]
  40f34a:	mov    eax,ds:0xb2df68fc
  40f34f:	psubusw mm6,QWORD PTR [ebp-0x51]
  40f353:	push   ebp
  40f354:	sbb    al,0x10
  40f356:	cmp    eax,0x4395ba6c
  40f35b:	or     esp,DWORD PTR [edi]
  40f35d:	push   0x12
  40f35f:	aas    
  40f360:	shl    ecx,0xe1
  40f363:	dec    ebx
  40f364:	adc    ebp,DWORD PTR [ebp-0x2]
  40f367:	jno    0x40f3b5
  40f369:	jmp    0x40f36d
  40f36b:	sub    eax,0x438a21fc
  40f370:	cmp    BYTE PTR [eax-0x5d],0x57
  40f374:	dec    esp
  40f375:	lock popf 
  40f377:	lds    esp,FWORD PTR [edx-0x4b]
  40f37a:	xor    BYTE PTR ds:0x688ab469,0xe1
  40f381:	push   ds
  40f382:	xchg   esp,eax
  40f383:	popa   
  40f384:	jns    0x40f3cf
  40f386:	clc    
  40f387:	pop    edi
  40f388:	push   cs
  40f389:	out    dx,eax
  40f38a:	stos   BYTE PTR es:[edi],al
  40f38b:	mov    al,ds:0xc9a4aec8
  40f390:	retf   0x44eb
  40f393:	inc    ch
  40f395:	cmp    DWORD PTR [edx-0x21022bfe],edx
  40f39b:	or     ah,bl
  40f39d:	or     al,0x29
  40f39f:	dec    eax
  40f3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3a1:	add    bh,BYTE PTR [eax+eiz*1-0x78]
  40f3a5:	loop   0x40f3c7
  40f3a7:	mov    DWORD PTR [edx+0x5],eax
  40f3aa:	cmc    
  40f3ab:	xchg   esi,eax
  40f3ac:	and    al,0xee
  40f3ae:	push   ds
  40f3af:	or     ebx,DWORD PTR [eax]
  40f3b1:	ret    
  40f3b2:	out    dx,al
  40f3b3:	mov    ss,WORD PTR [esi+edx*2+0x42b798dd]
  40f3ba:	outs   dx,BYTE PTR ds:[esi]
  40f3bb:	cmp    DWORD PTR [edi],ebp
  40f3bd:	cmp    al,cl
  40f3bf:	out    dx,eax
  40f3c0:	pop    eax
  40f3c1:	mov    eax,ds:0xdec96a90
  40f3c6:	jmp    0x28ff:0x925e9e95
  40f3cd:	leave  
  40f3ce:	mov    esp,0xa2ea3ccd
  40f3d3:	mov    ds:0xce827c72,eax
  40f3d8:	mov    al,ds:0x467a4c9f
  40f3dd:	add    al,0xb9
  40f3df:	or     eax,0x8e718e9a
  40f3e4:	or     bh,BYTE PTR [ecx+0x79]
  40f3e7:	rcr    ebx,0x5b
  40f3ea:	jae    0x40f467
  40f3ec:	call   0x61c5338d
  40f3f1:	sub    BYTE PTR [ebx+0x44fc8129],cl
  40f3f7:	aas    
  40f3f8:	idiv   BYTE PTR ds:0x6cca14ef
  40f3fe:	out    0x5c,al
  40f400:	cmp    ebx,esp
  40f402:	loope  0x40f471
  40f404:	jge    0x40f460
  40f406:	daa    
  40f407:	push   ebx
  40f408:	ja     0x40f3c2
  40f40a:	jmp    0x40f3d4
  40f40c:	xchg   esp,eax
  40f40d:	clc    
  40f40e:	sub    BYTE PTR [edi-0x27833bf8],ch
  40f414:	or     bh,bh
  40f416:	cmp    esp,DWORD PTR [ecx-0x58212394]
  40f41c:	push   esp
  40f41d:	push   ds
  40f41e:	jl     0x40f406
  40f420:	je     0x40f42b
  40f422:	or     dh,BYTE PTR [edi-0x1]
  40f425:	ins    DWORD PTR es:[edi],dx
  40f426:	les    eax,FWORD PTR [edx+0x4f]
  40f429:	cmp    BYTE PTR [edx],bh
  40f42b:	push   0xffffffae
  40f42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f42e:	in     al,0xf1
  40f430:	cmp    DWORD PTR [eax-0x12],edi
  40f433:	icebp  
  40f434:	cmp    eax,0x531bc696
  40f439:	scas   al,BYTE PTR es:[edi]
  40f43a:	adc    al,0x8a
  40f43c:	jle    0x40f3f8
  40f43e:	or     edi,DWORD PTR [esp+edx*2+0x2df02afd]
  40f445:	aam    0x9f
  40f447:	mov    eax,ds:0xc9ec2af4
  40f44c:	cmp    DWORD PTR [ecx+0x47],0x49
  40f450:	push   esi
  40f451:	popf   
  40f452:	popa   
  40f453:	jne    0x40f453
  40f455:	iret   
  40f456:	test   DWORD PTR [ecx-0x7],0xd70b9066
  40f45d:	(bad)  
  40f45e:	push   cs
  40f45f:	je     0x40f4c5
  40f461:	push   ds
  40f462:	(bad)  
  40f463:	addr16 daa 
  40f465:	pop    esi
  40f466:	or     ecx,DWORD PTR [esi]
  40f468:	cmp    DWORD PTR [edi+0x4a],edx
  40f46b:	ds adc eax,0xe2b09929
  40f471:	(bad)  
  40f472:	jo     0x40f429
  40f474:	data16 mov cl,0x40
  40f477:	(bad)  
  40f478:	adc    esi,edi
  40f47a:	(bad)  
  40f47b:	jl     0x40f48d
  40f47d:	add    al,0x2d
  40f47f:	leave  
  40f480:	rcl    BYTE PTR [ebx+0x3c],1
  40f483:	dec    esi
  40f484:	sbb    edx,DWORD PTR [eax]
  40f486:	scas   eax,DWORD PTR es:[edi]
  40f487:	add    DWORD PTR ss:[esi+0x2621c9ef],ebx
  40f48e:	jmp    0x1123:0x720a47df
  40f495:	aas    
  40f496:	lods   eax,DWORD PTR ds:[esi]
  40f497:	pop    esp
  40f498:	jmp    0x40f4ac
  40f49a:	jp     0x40f420
  40f49c:	ror    BYTE PTR [esi],1
  40f49e:	(bad)  
  40f49f:	lock xchg ebx,eax
  40f4a1:	xchg   esi,eax
  40f4a2:	imul   esp,DWORD PTR [esi],0x3d
  40f4a5:	mov    ds:0x8523fcda,eax
  40f4aa:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f4ac:	gs scas eax,DWORD PTR es:[edi]
  40f4ae:	sub    DWORD PTR [edx-0x4e],esp
  40f4b1:	mov    al,0xd8
  40f4b3:	pop    esp
  40f4b4:	das    
  40f4b5:	pop    edx
  40f4b6:	adc    dh,dl
  40f4b8:	sbb    eax,0x30c7d19b
  40f4bd:	mov    fs,WORD PTR [ebx-0x36376017]
  40f4c3:	jbe    0x40f544
  40f4c5:	pop    ebp
  40f4c6:	push   0xffffffe4
  40f4c8:	mov    ebp,0x89386a37
  40f4cd:	pop    ds
  40f4ce:	inc    edx
  40f4cf:	int    0x40
  40f4d1:	sbb    al,0x1e
  40f4d3:	cli    
  40f4d4:	call   FWORD PTR [edi+0x3f]
  40f4d7:	repnz mov esp,0x95ee7da7
  40f4dd:	cmp    al,bl
  40f4df:	and    cl,BYTE PTR [ecx]
  40f4e1:	jmp    0x2e42448c
  40f4e6:	push   edx
  40f4e7:	pop    eax
  40f4e8:	test   eax,0x543856e0
  40f4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ee:	bound  esi,QWORD PTR [esi-0x1f]
  40f4f1:	xchg   ecx,eax
  40f4f2:	cmp    esp,DWORD PTR [ebx+esi*4+0x3e3f6ffb]
  40f4f9:	push   edx
  40f4fa:	jmp    0x86fc10fb
  40f4ff:	adc    bh,al
  40f501:	in     eax,dx
  40f502:	pop    ebx
  40f503:	mov    edi,0x515f5603
  40f508:	sub    DWORD PTR [edi-0x45ccd963],esp
  40f50e:	push   ebp
  40f50f:	mov    ah,0x20
  40f511:	dec    edx
  40f512:	add    DWORD PTR [ebx-0x7a34e4de],ebx
  40f518:	addr16 jbe 0x40f593
  40f51b:	pop    ecx
  40f51c:	iret   
  40f51d:	mov    ds:0x2cf15da6,eax
  40f522:	xchg   edx,eax
  40f523:	shr    al,0x7a
  40f526:	lods   al,BYTE PTR ds:[esi]
  40f527:	pop    esi
  40f528:	or     al,BYTE PTR [bp+di]
  40f52b:	add    ah,BYTE PTR [ecx+0x63102ccd]
  40f531:	xchg   ecx,eax
  40f532:	loop   0x40f59d
  40f534:	cmp    al,0x0
  40f536:	push   esi
  40f537:	push   edx
  40f538:	mov    gs,WORD PTR [esi]
  40f53a:	mov    ah,0xad
  40f53c:	and    eax,0x137dc206
  40f541:	pusha  
  40f542:	int3   
  40f543:	push   di
  40f545:	pop    edi
  40f546:	into   
  40f547:	mov    edx,0xffdf0b4d
  40f54c:	xor    eax,0x144b163e
  40f551:	push   eax
  40f552:	stc    
  40f553:	xor    al,0xe0
  40f555:	push   0x5b07f995
  40f55a:	mov    eax,ds:0x9960855a
  40f55f:	nop
  40f560:	mov    bl,0x88
  40f562:	arpl   dx,bx
  40f564:	out    0x3c,al
  40f566:	out    0xea,eax
  40f568:	repnz ror DWORD PTR [ecx],cl
  40f56b:	pop    es
  40f56c:	inc    ebp
  40f56d:	dec    edx
  40f56e:	popa   
  40f56f:	push   ebx
  40f570:	inc    eax
  40f571:	xchg   ebx,eax
  40f572:	jb     0x40f5ab
  40f574:	sub    DWORD PTR [eax+0x19],ebp
  40f577:	cdq    
  40f578:	ja     0x40f53a
  40f57a:	nop
  40f57b:	data16 arpl bx,ax
  40f57e:	jmp    0x42aa:0x93b7a725
  40f585:	loop   0x40f5f1
  40f587:	xor    DWORD PTR [ecx-0x61],edi
  40f58a:	push   esp
  40f58b:	out    0xb3,al
  40f58d:	xchg   DWORD PTR [esi+0x39],eax
  40f590:	cdq    
  40f591:	xchg   ecx,eax
  40f592:	cmp    ebp,0xb1dc434e
  40f598:	lods   eax,DWORD PTR ds:[esi]
  40f599:	daa    
  40f59a:	and    edi,DWORD PTR [ecx-0x1b]
  40f59d:	pop    ecx
  40f59e:	aas    
  40f59f:	aas    
  40f5a0:	scas   eax,DWORD PTR es:[edi]
  40f5a1:	cld    
  40f5a2:	adc    bl,dl
  40f5a4:	nop
  40f5a5:	neg    DWORD PTR [esi]
  40f5a7:	inc    esi
  40f5a8:	mov    bh,0xd7
  40f5aa:	push   ss
  40f5ab:	dec    esi
  40f5ac:	sahf   
  40f5ad:	jp     0x40f5e0
  40f5af:	lahf   
  40f5b0:	jle    0x40f592
  40f5b2:	mov    ecx,0xa318fcef
  40f5b7:	mov    BYTE PTR [eax+ecx*2],al
  40f5ba:	fdivr  QWORD PTR [ebx+0xc]
  40f5bd:	xchg   ebx,eax
  40f5be:	mov    ebx,0x9b9f88a9
  40f5c3:	pop    ss
  40f5c4:	cli    
  40f5c5:	push   es
  40f5c6:	xor    ah,ch
  40f5c8:	enter  0x6700,0xc0
  40f5cc:	sbb    eax,0x41a98b93
  40f5d2:	and    al,0x88
  40f5d4:	or     bh,BYTE PTR [ecx-0x6609f48]
  40f5da:	rcr    DWORD PTR [eax],0x6e
  40f5dd:	cmp    ecx,DWORD PTR [esi+ecx*1-0xa36474]
  40f5e4:	mov    ds:0x656ed886,al
  40f5e9:	pop    ss
  40f5ea:	mov    ebx,0xd90ecf47
  40f5ef:	cmc    
  40f5f0:	fcmovbe st,st(1)
  40f5f2:	je     0x40f624
  40f5f4:	(bad)  
  40f5f5:	iret   
  40f5f6:	or     bl,al
  40f5f8:	cld    
  40f5f9:	gs es xchg edx,eax
  40f5fc:	into   
  40f5fd:	mov    bl,0x8
  40f5ff:	cmp    eax,0x592a47f7
  40f604:	xlat   BYTE PTR ds:[ebx]
  40f605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f606:	lock xchg ecx,eax
  40f608:	jnp    0x40f59c
  40f60a:	jbe    0x40f635
  40f60c:	sub    eax,0xf02b3ac4
  40f611:	mov    WORD PTR [ebp+0x4c],fs
  40f614:	jne    0x40f653
  40f616:	popa   
  40f617:	cmp    al,0x16
  40f619:	sahf   
  40f61a:	test   al,0xc6
  40f61c:	xchg   esi,eax
  40f61d:	xlat   BYTE PTR ds:[ebx]
  40f61e:	cdq    
  40f61f:	pop    edx
  40f620:	lods   al,BYTE PTR ds:[esi]
  40f621:	mov    esi,0x6cdcabf4
  40f626:	adc    BYTE PTR [eax+0x16f33bc6],bl
  40f62c:	jg     0x40f5fc
  40f62e:	das    
  40f62f:	mov    ebx,0xf82296c2
  40f634:	jo     0x40f629
  40f636:	lods   al,BYTE PTR ds:[esi]
  40f637:	ins    BYTE PTR es:[edi],dx
  40f638:	retf   
  40f639:	or     esi,esi
  40f63b:	jns    0x40f66b
  40f63d:	sub    dl,BYTE PTR [ecx+0x3e]
  40f640:	(bad)  
  40f641:	fadd   DWORD PTR ds:0x389df193
  40f647:	and    eax,0x416b09d5
  40f64c:	sbb    eax,0x7932a4bc
  40f651:	jg     0x40f68d
  40f653:	mov    ds:0xb983ed4b,al
  40f658:	add    al,BYTE PTR [edi+ebx*8+0x18]
  40f65c:	js     0x40f61a
  40f65e:	sub    dh,dh
  40f660:	and    ebp,DWORD PTR [esi]
  40f662:	mov    ds:0xa34df52e,eax
  40f667:	pop    edx
  40f668:	push   es
  40f669:	into   
  40f66a:	adc    al,0x65
  40f66c:	mov    edi,0x477eb64d
  40f671:	js     0x40f627
  40f673:	push   eax
  40f674:	fild   QWORD PTR [edx]
  40f676:	xchg   esp,eax
  40f677:	lea    ebp,[esi]
  40f679:	ds push esp
  40f67b:	in     al,0x54
  40f67d:	ds jmp 0x40f619
  40f680:	mov    dh,0x24
  40f682:	lods   eax,DWORD PTR ds:[esi]
  40f683:	inc    edi
  40f684:	lods   al,BYTE PTR ds:[esi]
  40f685:	call   0x509e:0x26786703
  40f68c:	sub    cl,ch
  40f68e:	jb     0x40f70f
  40f690:	push   ebp
  40f691:	fstp   DWORD PTR [eax]
  40f693:	cs nop
  40f695:	xor    eax,0x4025947f
  40f69a:	sbb    DWORD PTR [ecx+0x51],esi
  40f69d:	sbb    ebx,DWORD PTR ds:0xd3193f43
  40f6a3:	dec    ebp
  40f6a4:	sahf   
  40f6a5:	push   es
  40f6a6:	retf   0xdae1
  40f6a9:	fild   DWORD PTR [ebx+0x7]
  40f6ac:	cwde   
  40f6ad:	adc    ah,BYTE PTR [ebx-0x705386da]
  40f6b3:	sbb    bl,BYTE PTR [esi-0x40e5a5d4]
  40f6b9:	das    
  40f6ba:	adc    al,0xc6
  40f6bc:	jp     0x40f6a3
  40f6be:	cs loope 0x40f666
  40f6c1:	inc    eax
  40f6c2:	mov    DWORD PTR [ecx-0x59],ebx
  40f6c5:	leave  
  40f6c6:	xchg   DWORD PTR [esi+0xf284a4b],ebp
  40f6cc:	loop   0x40f744
  40f6ce:	in     eax,0x62
  40f6d0:	mov    ecx,0xf910b3c6
  40f6d5:	and    DWORD PTR [edi],esp
  40f6d7:	or     al,0x77
  40f6d9:	cvtps2pi mm3,QWORD PTR es:[edx+ecx*1+0x10]
  40f6df:	int    0x4
  40f6e1:	call   0x5380ccdc
  40f6e6:	repz xor eax,DWORD PTR cs:[ebx-0x1766c75e]
  40f6ee:	jb     0x40f73f
  40f6f0:	adc    esi,edx
  40f6f2:	repnz push ecx
  40f6f4:	dec    ebp
  40f6f5:	add    ebx,DWORD PTR [eax-0x23]
  40f6f8:	pop    ebx
  40f6f9:	scas   eax,DWORD PTR es:[edi]
  40f6fa:	pop    edx
  40f6fb:	or     ebp,0x48
  40f6fe:	jmp    0xfb4d:0x4f7ab77d
  40f705:	jle    0x40f6f3
  40f707:	adc    BYTE PTR [ebx-0x310a73b0],cl
  40f70d:	sub    BYTE PTR [edi-0x21a9cfd7],dh
  40f713:	inc    esp
  40f714:	sub    al,0x2f
  40f716:	push   ebx
  40f717:	jp     0x40f796
  40f719:	push   es
  40f71a:	out    0x4f,al
  40f71c:	push   edx
  40f71d:	pop    edx
  40f71e:	xor    edi,ebx
  40f720:	or     ah,cl
  40f722:	xor    ah,ch
  40f724:	push   ecx
  40f725:	mov    ebp,0xfc13ab0a
  40f72a:	sbb    ebp,edi
  40f72c:	pop    ebx
  40f72d:	mov    bh,0x19
  40f72f:	aas    
  40f730:	js     0x40f71d
  40f732:	icebp  
  40f733:	adc    BYTE PTR [edi+0x5a],ah
  40f736:	imul   esi,DWORD PTR [eax+edi*2],0xffffff8c
  40f73a:	pop    esp
  40f73b:	mov    eax,ds:0x7efa7a0a
  40f740:	test   eax,0x6cbf989a
  40f745:	push   ss
  40f746:	dec    edi
  40f747:	sbb    al,0x2e
  40f749:	enter  0x9b56,0x43
  40f74d:	imul   edi,DWORD PTR [ebx+0x1b],0x33452d35
  40f754:	mov    dl,0x71
  40f756:	mov    eax,0x5873bba6
  40f75b:	int3   
  40f75c:	push   cs
  40f75d:	nop
  40f75e:	and    ebx,DWORD PTR [ebp-0x1a761257]
  40f764:	jl     0x40f7cf
  40f766:	push   ebx
  40f767:	mov    ch,0x97
  40f769:	push   edx
  40f76a:	jp     0x40f6f6
  40f76c:	mov    BYTE PTR [ebx+ebx*4-0x7be52bd2],dl
  40f773:	loop   0x40f735
  40f775:	jmp    0x2e93:0x65439bf2
  40f77c:	jg     0x40f762
  40f77e:	stos   BYTE PTR es:[edi],al
  40f77f:	js     0x40f747
  40f781:	in     eax,dx
  40f782:	lods   al,BYTE PTR ds:[esi]
  40f783:	fst    QWORD PTR [esi+0x77]
  40f786:	xlat   BYTE PTR ds:[ebx]
  40f787:	mov    esi,0x7e71e95
  40f78c:	push   eax
  40f78d:	aad    0x8f
  40f78f:	xlat   BYTE PTR ds:[ebx]
  40f790:	sub    ecx,ebp
  40f792:	add    al,0x9f
  40f794:	dec    ecx
  40f795:	fwait
  40f796:	aam    0x3c
  40f798:	cmp    BYTE PTR [eax-0x51eea815],bh
  40f79e:	mov    ds:0x484acca2,al
  40f7a3:	adc    dl,BYTE PTR [ecx+edi*2-0x4840ab96]
  40f7aa:	mov    es,edi
  40f7ac:	or     bh,bl
  40f7ae:	aad    0x42
  40f7b0:	inc    edi
  40f7b1:	dec    esi
  40f7b2:	out    0xa6,al
  40f7b4:	mov    BYTE PTR [ecx-0x34a95d1c],bh
  40f7ba:	inc    esp
  40f7bb:	jl     0x40f80a
  40f7bd:	pop    ecx
  40f7be:	data16 or ah,dl
  40f7c1:	or     BYTE PTR [eax],dl
  40f7c3:	and    esp,0xffffffb0
  40f7c6:	and    ebp,esp
  40f7c8:	fstp   QWORD PTR ds:0xdb309c76
  40f7ce:	jge    0x40f7e0
  40f7d0:	cmp    BYTE PTR [ecx+esi*4],dl
  40f7d3:	mov    bl,0x48
  40f7d5:	lods   eax,DWORD PTR ds:[esi]
  40f7d6:	inc    esp
  40f7d7:	push   ebx
  40f7d8:	sbb    dh,BYTE PTR [ebx]
  40f7da:	stc    
  40f7db:	or     esp,DWORD PTR [eax]
  40f7dd:	popa   
  40f7de:	mov    esp,0x595a77cd
  40f7e3:	leave  
  40f7e4:	mov    edx,0xb9c1e349
  40f7e9:	sti    
  40f7ea:	cmc    
  40f7eb:	and    BYTE PTR [esp+esi*1],al
  40f7ee:	into   
  40f7ef:	pop    ss
  40f7f0:	and    ecx,DWORD PTR [esi]
  40f7f2:	outs   dx,DWORD PTR ds:[esi]
  40f7f3:	mov    al,ds:0x83fcfb92
  40f7f8:	jecxz  0x40f86a
  40f7fa:	jmp    FWORD PTR [eax-0x51]
  40f7fd:	in     al,0x40
  40f7ff:	adc    BYTE PTR [ecx],bh
  40f801:	inc    edx
  40f802:	cmp    BYTE PTR [ebx+0x54228f45],al
  40f808:	(bad)  
  40f80a:	push   ds
  40f80b:	retf   
  40f80c:	in     eax,0x4c
  40f80e:	mov    edx,0xb6e85f4f
  40f813:	push   0xf7160f28
  40f818:	push   es
  40f819:	xchg   edx,eax
  40f81a:	or     cl,BYTE PTR [esi+0x3e]
  40f81d:	xchg   esp,eax
  40f81e:	outs   dx,DWORD PTR ds:[esi]
  40f81f:	xor    DWORD PTR [edx+0x30c51f5c],esi
  40f825:	inc    ebp
  40f826:	and    DWORD PTR [eax-0x5c170dd8],ebx
  40f82c:	jl     0x40f887
  40f82e:	mov    edi,0xf031c950
  40f833:	inc    ax
  40f835:	dec    edi
  40f836:	ds sbb edx,edx
  40f839:	js     0x40f803
  40f83b:	test   eax,0xc69d461f
  40f840:	dec    ebx
  40f841:	shl    BYTE PTR [esi+edx*8],0xfd
  40f845:	pop    es
  40f846:	jg     0x40f84d
  40f848:	loopne 0x40f846
  40f84a:	inc    ebp
  40f84b:	mov    ebp,0x359df99c
  40f850:	shl    BYTE PTR [eax+eiz*8],0x42
  40f854:	sub    eax,0xffffff87
  40f857:	(bad)  
  40f858:	lea    esp,[ebp-0x71]
  40f85b:	les    ebx,FWORD PTR [ebx+edi*8]
  40f85e:	clc    
  40f85f:	test   BYTE PTR ds:0xde9838fc,cl
  40f865:	adc    ecx,edx
  40f867:	scas   al,BYTE PTR es:[edi]
  40f868:	stos   DWORD PTR es:[edi],eax
  40f869:	dec    esi
  40f86a:	bound  esi,QWORD PTR [edi+ebx*1]
  40f86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f86e:	nop
  40f86f:	sbb    edi,DWORD PTR [esi]
  40f871:	and    BYTE PTR [eax+0x72673182],0x22
  40f878:	into   
  40f879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87a:	es stos DWORD PTR es:[edi],eax
  40f87c:	push   ebp
  40f87d:	or     DWORD PTR ds:0x6a369684,0xdcfb7530
  40f887:	sub    bh,BYTE PTR ds:0xc9c444c5
  40f88d:	imul   esp,DWORD PTR [edx+0x5],0x25
  40f891:	jge    0x40f8ee
  40f893:	pop    es
  40f894:	mov    al,BYTE PTR [edi+0x1]
  40f897:	in     al,0xd3
  40f899:	push   edx
  40f89a:	inc    ebp
  40f89b:	xchg   edx,eax
  40f89c:	mov    ah,0xac
  40f89e:	jp     0x40f838
  40f8a0:	(bad)  
  40f8a1:	loop   0x40f8b8
  40f8a3:	jae    0x40f898
  40f8a5:	out    0x9,al
  40f8a7:	scas   eax,DWORD PTR es:[edi]
  40f8a8:	into   
  40f8a9:	jnp    0x40f893
  40f8ab:	scas   al,BYTE PTR es:[edi]
  40f8ac:	call   0x9e344727
  40f8b1:	push   eax
  40f8b2:	int3   
  40f8b3:	sub    eax,eax
  40f8b5:	xor    al,0x31
  40f8b7:	dec    ebp
  40f8b8:	enter  0xd9b6,0xb3
  40f8bc:	xor    bh,bh
  40f8be:	or     al,al
  40f8c0:	out    dx,eax
  40f8c1:	ret    0x45a0
  40f8c4:	daa    
  40f8c5:	retf   0xf93
  40f8c8:	and    al,0x82
  40f8ca:	ja     0x40f922
  40f8cc:	and    edi,DWORD PTR [edi]
  40f8ce:	inc    ecx
  40f8cf:	sub    BYTE PTR [esi],dl
  40f8d1:	jmp    0x7ad5:0x2dd7c1af
  40f8d8:	js     0x40f8e2
  40f8da:	es inc eax
  40f8dc:	aad    0x95
  40f8de:	adc    edi,ebx
  40f8e0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f8e2:	jae    0x40f95c
  40f8e4:	sub    DWORD PTR [edi+0x52d98b26],edi
  40f8ea:	sti    
  40f8eb:	push   ss
  40f8ec:	sub    DWORD PTR [ebp+0x3e],edi
  40f8ef:	sar    DWORD PTR [ecx],cl
  40f8f1:	jg     0x40f8fc
  40f8f3:	push   edx
  40f8f4:	mov    esi,0x2d99a2a4
  40f8f9:	test   BYTE PTR [ecx-0x7b],dh
  40f8fc:	retf   
  40f8fd:	xor    edi,DWORD PTR [edi+0x4de1383]
  40f903:	icebp  
  40f904:	test   DWORD PTR [ebp+edi*4-0x373333cf],0xec2a0bf
  40f90f:	sub    eax,DWORD PTR [ebx]
  40f911:	pop    ebp
  40f912:	mov    al,0x1
  40f914:	bts    DWORD PTR [ebp+eax*8+0x33],ebx
  40f919:	mov    ds:0x63758e,eax
  40f91e:	loopne 0x40f8a8
  40f920:	inc    esp
  40f921:	pop    eax
  40f922:	pop    esi
  40f923:	cli    
  40f924:	jb     0x40f8ae
  40f926:	jecxz  0x40f8fb
  40f928:	mov    dh,0x1b
  40f92a:	mov    ebp,0x52674b9f
  40f92f:	clc    
  40f930:	out    dx,al
  40f931:	jae    0x40f9a1
  40f933:	mov    al,ds:0xb2be9f6a
  40f938:	push   ebx
  40f939:	daa    
  40f93a:	cmp    BYTE PTR [ebp-0x4a786627],al
  40f940:	fwait
  40f941:	(bad)  
  40f942:	(bad)  
  40f943:	xor    al,0x12
  40f945:	mov    edi,DWORD PTR [esi-0x3139e9db]
  40f94b:	cmp    eax,0x7b82f79f
  40f950:	mov    edx,0xef94a7f9
  40f955:	lahf   
  40f956:	jg     0x40f957
  40f958:	push   esi
  40f959:	in     al,0x8d
  40f95b:	push   esp
  40f95c:	xchg   edx,eax
  40f95d:	jo     0x40f977
  40f95f:	in     al,dx
  40f960:	ds ins BYTE PTR es:[edi],dx
  40f962:	out    0xb0,eax
  40f964:	out    0x1,al
  40f966:	xor    ch,al
  40f968:	jne    0x40f9ce
  40f96a:	mov    dh,0x7b
  40f96c:	enter  0x8743,0x53
  40f970:	jl     0x40f91f
  40f972:	cmp    al,bl
  40f974:	test   DWORD PTR [edx],esp
  40f976:	jmp    0x40f9b9
  40f978:	loop   0x40f8fa
  40f97a:	lods   eax,DWORD PTR ds:[esi]
  40f97b:	cmp    bl,BYTE PTR [ecx+0x2e]
  40f97e:	mov    al,ds:0x5070184b
  40f983:	mov    edi,0xd89742b8
  40f988:	pushf  
  40f989:	lock in eax,dx
  40f98b:	(bad)  [eax+0x5b59efe2]
  40f991:	mov    al,ds:0xea56c019
  40f996:	xor    eax,0x4b1f9e96
  40f99b:	fsubr  DWORD PTR [edx-0x29]
  40f99e:	push   ebp
  40f99f:	sub    eax,0x6d4edbb3
  40f9a4:	dec    esp
  40f9a5:	hlt    
  40f9a6:	in     ax,dx
  40f9a8:	bound  ebp,QWORD PTR [edx]
  40f9aa:	pop    ebx
  40f9ac:	dec    DWORD PTR [esi+0x395df45]
  40f9b2:	mov    edi,0x75d42243
  40f9b7:	add    BYTE PTR [esi-0x4d],bl
  40f9ba:	mov    ebx,DWORD PTR [esi-0x52]
  40f9bd:	loopne 0x40fa31
  40f9bf:	pop    esi
  40f9c0:	mov    al,0x1
  40f9c2:	cmp    ch,BYTE PTR [ecx+ebx*2-0x34]
  40f9c6:	add    dl,BYTE PTR [ebp-0x1388e81a]
  40f9cc:	in     eax,dx
  40f9cd:	push   esi
  40f9ce:	xchg   esp,eax
  40f9cf:	dec    ebp
  40f9d0:	retf   
  40f9d1:	xor    al,0x49
  40f9d3:	jno    0x40f9d9
  40f9d5:	stc    
  40f9d6:	daa    
  40f9d7:	int    0x5e
  40f9d9:	ret    
  40f9da:	into   
  40f9db:	jnp    0x40f9ed
  40f9dd:	lahf   
  40f9de:	jns    0x40f9d8
  40f9e0:	mov    dh,0x93
  40f9e2:	cmp    BYTE PTR [eax-0x22],ah
  40f9e5:	sti    
  40f9e6:	out    dx,al
  40f9e7:	ins    BYTE PTR es:[edi],dx
  40f9e8:	push   eax
  40f9e9:	aaa    
  40f9ea:	xchg   esi,eax
  40f9eb:	xor    eax,0xf6ec87af
  40f9f0:	mov    WORD PTR [edi],gs
  40f9f2:	(bad)  
  40f9f3:	sub    esp,DWORD PTR [eax-0x1b43308e]
  40f9f9:	or     edx,DWORD PTR [edx-0x2e]
  40f9fc:	(bad)  
  40f9fd:	rcr    edi,cl
  40f9ff:	ret    
  40fa00:	adc    edx,edx
  40fa02:	es dec ecx
  40fa04:	mov    edx,0x905428fb
  40fa09:	cmp    DWORD PTR [edx-0x60059593],esp
  40fa0f:	and    eax,0x5a1d83df
  40fa14:	sub    al,0xf1
  40fa16:	pop    ds
  40fa17:	mov    edi,DWORD PTR [edi-0x49]
  40fa1a:	inc    ebp
  40fa1b:	mov    esi,DWORD PTR [eax+esi*8-0x669c3e2e]
  40fa22:	xor    BYTE PTR [ebx+esi*8+0x4c],ch
  40fa26:	adc    DWORD PTR [ecx-0x79],ecx
  40fa29:	lods   eax,DWORD PTR ds:[esi]
  40fa2a:	jmp    DWORD PTR [ebx+0x4b2d74d2]
  40fa30:	sbb    al,0xd4
  40fa32:	(bad)  
  40fa33:	aad    0xa2
  40fa35:	sbb    BYTE PTR [edx],bh
  40fa37:	in     eax,dx
  40fa38:	or     BYTE PTR [edx+0x4bfe9c45],al
  40fa3e:	jne    0x40fa3a
  40fa40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa41:	xor    BYTE PTR [ebx-0xaa7d46d],cl
  40fa47:	or     al,0x82
  40fa49:	in     eax,dx
  40fa4a:	mov    edi,0x9a212534
  40fa4f:	adc    BYTE PTR [ebx],0xa2
  40fa52:	jle    0x40fac4
  40fa54:	inc    ebp
  40fa55:	rol    BYTE PTR [esp+esi*4],0x2c
  40fa59:	in     al,dx
  40fa5a:	fdiv   st,st(6)
  40fa5c:	or     ebx,esi
  40fa5e:	cdq    
  40fa5f:	cmp    dl,BYTE PTR [esi+0x73]
  40fa62:	or     ah,dl
  40fa64:	and    ecx,ebp
  40fa66:	push   es
  40fa67:	add    al,0x9
  40fa69:	inc    esi
  40fa6a:	xchg   DWORD PTR [ebp+0x1],edi
  40fa6d:	loopne 0x40fa6e
  40fa6f:	mov    al,ds:0x4e60be90
  40fa74:	pop    ss
  40fa75:	adc    DWORD PTR [ebx],esp
  40fa77:	aas    
  40fa78:	enter  0xaed0,0xc0
  40fa7c:	mov    bl,0xb7
  40fa7e:	and    bh,bh
  40fa80:	jne    0x40fa07
  40fa82:	add    BYTE PTR [ecx-0x62],bh
  40fa85:	mov    al,ds:0xccff2aab
  40fa8a:	(bad)
  40fa8e:	sbb    eax,0xcc1cc5db
  40fa93:	add    eax,0xd62aed83
  40fa98:	mov    dh,BYTE PTR [ecx-0x51]
  40fa9b:	dec    esi
  40fa9c:	jo     0x40fa71
  40fa9e:	mov    DWORD PTR [ebp-0xdd7d1ad],0x8c39b2de
  40faa8:	fisub  WORD PTR [edx+edx*2]
  40faab:	push   edi
  40faac:	adc    DWORD PTR [ecx],ebx
  40faae:	add    ebx,DWORD PTR ds:0x930bfacf
  40fab4:	ret    
  40fab5:	mov    ch,0x52
  40fab7:	lods   al,BYTE PTR ds:[esi]
  40fab8:	inc    ebx
  40fab9:	jne    0x40faa8
  40fabb:	mov    WORD PTR [esi+0xa],?
  40fabe:	inc    eax
  40fabf:	xor    esi,edi
  40fac1:	push   es
  40fac2:	sti    
  40fac3:	pop    ecx
  40fac4:	repnz push edi
  40fac6:	pusha  
  40fac7:	push   ecx
  40fac8:	mov    ds:0xfcaffe6d,eax
  40facd:	jae    0x40faf5
  40facf:	or     al,0x9b
  40fad1:	call   0x411770ab
  40fad6:	iret   
  40fad7:	sub    DWORD PTR [edi-0x323c4bf3],0x24c5b09
  40fae1:	and    al,0x52
  40fae3:	mov    edi,0x8898f10a
  40fae8:	(bad)  
  40fae9:	(bad)  
  40faea:	(bad)  
  40faeb:	cwde   
  40faec:	push   ds
  40faed:	cs arpl cx,cx
  40faf0:	mov    WORD PTR [edx],ds
  40faf2:	stos   BYTE PTR es:[edi],al
  40faf3:	cdq    
  40faf4:	xor    BYTE PTR [eax+0x373c448f],bl
  40fafa:	inc    dl
  40fafc:	outs   dx,DWORD PTR ds:[esi]
  40fafd:	pop    ecx
  40fafe:	stc    
  40faff:	in     al,0xf5
  40fb01:	test   al,0x33
  40fb03:	xchg   ecx,eax
  40fb04:	fisubr WORD PTR [ecx]
  40fb06:	and    eax,0x8efd35b8
  40fb0b:	mov    ds:0xfd315b23,eax
  40fb10:	mov    dh,0xa2
  40fb12:	sbb    BYTE PTR [edi-0xc],cl
  40fb15:	xor    esp,esp
  40fb17:	dec    edx
  40fb18:	scas   al,BYTE PTR es:[edi]
  40fb19:	jnp    0xed88443f
  40fb1f:	out    0xc3,al
  40fb21:	jge    0x40fab5
  40fb23:	mov    ebx,0x524cc15d
  40fb28:	xor    DWORD PTR [edx-0x76],edx
  40fb2b:	push   edi
  40fb2c:	rcr    DWORD PTR [esi+ebp*2-0x5ec6569],1
  40fb33:	retf   
  40fb34:	aas    
  40fb35:	jmp    FWORD PTR [ebx+0x2d]
  40fb38:	cmp    esi,DWORD PTR [ecx]
  40fb3a:	loope  0x40fb4a
  40fb3c:	test   al,0x9c
  40fb3e:	daa    
  40fb3f:	clc    
  40fb40:	in     eax,dx
  40fb41:	outs   dx,DWORD PTR ds:[esi]
  40fb42:	xchg   ebp,eax
  40fb43:	les    esi,FWORD PTR [ecx]
  40fb45:	jle    0x40fb3d
  40fb47:	xor    eax,0x3834e38f
  40fb4c:	jl     0x40fb76
  40fb4e:	xchg   ebx,eax
  40fb4f:	xor    al,0xda
  40fb51:	push   ss
  40fb52:	sbb    BYTE PTR [esi+eiz*8],dl
  40fb55:	clc    
  40fb56:	sti    
  40fb57:	push   ss
  40fb58:	cmc    
  40fb59:	scas   eax,DWORD PTR es:[edi]
  40fb5a:	dec    edx
  40fb5b:	sub    esi,DWORD PTR [eax-0x6b]
  40fb5e:	rcr    DWORD PTR [edx+0x3a2c9d5b],1
  40fb64:	or     BYTE PTR [eax-0x47],bh
  40fb67:	(bad)  
  40fb68:	pusha  
  40fb69:	sti    
  40fb6a:	cmc    
  40fb6b:	pop    es
  40fb6c:	push   es
  40fb6d:	scas   al,BYTE PTR es:[edi]
  40fb6e:	xchg   DWORD PTR [ecx],edi
  40fb70:	sahf   
  40fb71:	mov    esi,0xf6ed2892
  40fb76:	cmp    al,0x69
  40fb78:	xadd   eax,eax
  40fb7b:	sub    al,0xcd
  40fb7d:	out    dx,al
  40fb7e:	jge    0x40fb28
  40fb80:	loop   0x40fbb9
  40fb82:	(bad)  
  40fb84:	or     BYTE PTR [ebx+edi*8],ch
  40fb87:	jge    0x40fb88
  40fb89:	jnp    0x40fb2d
  40fb8b:	adc    ebx,eax
  40fb8d:	mov    esi,0xc71cecb3
  40fb92:	jno    0x40fb6e
  40fb94:	adc    al,0x68
  40fb96:	jge    0x40fb9b
  40fb98:	retf   0x1e95
  40fb9b:	arpl   WORD PTR [ebx+0x51cf15f8],sp
  40fba1:	retf   0x3d21
  40fba4:	mov    cl,0xbb
  40fba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba7:	push   0x2e
  40fba9:	fstp   QWORD PTR [edx-0x2ed3408f]
  40fbaf:	add    BYTE PTR [edx-0x4f],bh
  40fbb2:	outs   dx,BYTE PTR ds:[esi]
  40fbb3:	jle    0x40fb86
  40fbb5:	cmp    al,0xb
  40fbb7:	inc    ecx
  40fbb8:	xchg   edi,eax
  40fbb9:	ror    BYTE PTR [edx+edx*2-0x3c3d758f],cl
  40fbc0:	aaa    
  40fbc1:	xor    eax,0x49aa4dbb
  40fbc6:	in     al,dx
  40fbc7:	mov    WORD PTR [edi],cs
  40fbc9:	add    dl,al
  40fbcb:	sahf   
  40fbcc:	and    DWORD PTR [esi],edx
  40fbce:	or     ecx,DWORD PTR [ecx-0x7611db78]
  40fbd4:	mov    bh,0x40
  40fbd6:	mov    ch,0xee
  40fbd8:	or     esp,esp
  40fbda:	arpl   WORD PTR [esi+0xf],sp
  40fbdd:	stos   DWORD PTR es:[edi],eax
  40fbde:	push   es
  40fbdf:	cmp    DWORD PTR [edx+0x16e9f983],ebx
  40fbe5:	adc    al,0xa
  40fbe7:	push   0x5
  40fbe9:	adc    bl,ch
  40fbeb:	pop    esp
  40fbec:	imul   esp,eax,0x1cb8fbe6
  40fbf2:	adc    dl,BYTE PTR [eax+0x7d]
  40fbf5:	fs loop 0x40fb7b
  40fbf8:	xchg   ebx,eax
  40fbf9:	jmp    0xb001dd0e
  40fbfe:	iretw  
  40fc00:	jge    0x40fb99
  40fc02:	(bad)  
  40fc04:	or     edx,edi
  40fc06:	xor    dl,bl
  40fc08:	or     al,0x46
  40fc0a:	mov    dl,0x3d
  40fc0c:	mov    ds:0x6175d56c,al
  40fc11:	mov    ch,0x54
  40fc13:	jae    0x40fba2
  40fc15:	mov    al,ch
  40fc17:	push   ebp
  40fc18:	int    0xed
  40fc1a:	nop
  40fc1b:	fidivr DWORD PTR [edx+0xdc95176]
  40fc21:	xchg   BYTE PTR [ecx+ebx*8-0x45],al
  40fc25:	dec    ecx
  40fc26:	and    al,BYTE PTR [edi]
  40fc28:	imul   ebp,DWORD PTR [esi],0x571aa2a5
  40fc2e:	jmp    0x9414:0x3e51326f
  40fc35:	sbb    bl,0x69
  40fc38:	icebp  
  40fc39:	aad    0x79
  40fc3b:	rcr    BYTE PTR [eax+0x21db5c6e],1
  40fc41:	fdivr  QWORD PTR [ebp+0x4e]
  40fc44:	jge    0x40fc84
  40fc46:	retf   
  40fc47:	mov    dl,0x32
  40fc49:	icebp  
  40fc4a:	loopne 0x40fc5a
  40fc4c:	xchg   DWORD PTR [edi+0x7563ec4a],esi
  40fc52:	inc    ecx
  40fc53:	inc    edi
  40fc54:	sbb    ecx,ebx
  40fc56:	(bad)  
  40fc57:	fstp   QWORD PTR ds:[edx+0x67b476d3]
  40fc5e:	fdivr  QWORD PTR [edx]
  40fc60:	push   ecx
  40fc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc62:	call   0x355740c4
  40fc67:	dec    eax
  40fc68:	das    
  40fc69:	(bad)  
  40fc6a:	(bad)  
  40fc6b:	mov    esi,0x787c17c0
  40fc70:	add    DWORD PTR [eax],eax
  40fc72:	aam    0x56
  40fc74:	mov    esi,0x1d3925eb
  40fc79:	and    BYTE PTR [ebx+eax*4+0x5d],0x4d
  40fc7e:	(bad)  
  40fc80:	push   ecx
  40fc81:	jb     0x40fcea
  40fc83:	jns    0x40fc67
  40fc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc86:	pop    es
  40fc87:	imul   eax,DWORD PTR [edx+0x53],0x84facbaa
  40fc8e:	xor    ebp,DWORD PTR [ebx+0x4b788ac0]
  40fc94:	retf   
  40fc95:	mov    DWORD PTR [esp+eiz*8+0x16],ebx
  40fc99:	ins    BYTE PTR es:[edi],dx
  40fc9a:	jne    0x40fd19
  40fc9c:	ret    
  40fc9d:	sbb    al,0xa6
  40fc9f:	inc    edi
  40fca0:	bound  edi,QWORD PTR [ebx-0x6b87ddfe]
  40fca6:	push   ecx
  40fca7:	dec    ebp
  40fca8:	out    0x1c,al
  40fcaa:	push   esp
  40fcab:	clc    
  40fcac:	mov    ?,WORD PTR [edx-0x3ac54259]
  40fcb2:	aam    0xfb
  40fcb4:	mov    al,0xa8
  40fcb6:	lahf   
  40fcb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb8:	inc    esi
  40fcb9:	nop
  40fcba:	or     al,0x5f
  40fcbc:	hlt    
  40fcbd:	cmp    DWORD PTR [esi-0x1753ca21],0x7b
  40fcc4:	mov    es:0x86098e24,al
  40fcca:	jne    0x40fc91
  40fccc:	(bad)  
  40fccd:	lock jbe 0x40fc62
  40fcd0:	inc    esp
  40fcd1:	test   BYTE PTR [eax],0x89
  40fcd4:	inc    ebp
  40fcd5:	ins    DWORD PTR es:[edi],dx
  40fcd6:	sbb    DWORD PTR [ebx],ebx
  40fcd8:	data16 adc BYTE PTR [edx],bl
  40fcdb:	ds scas eax,DWORD PTR es:[edi]
  40fcdd:	pop    esp
  40fcdf:	sbb    DWORD PTR [ebx-0x63],ebx
  40fce2:	dec    esi
  40fce3:	frstor [ebp-0x3115cee5]
  40fce9:	pop    edx
  40fcea:	pop    ds
  40fceb:	mov    BYTE PTR [esi+ebx*8+0x58],dh
  40fcef:	mov    edi,ebx
  40fcf1:	mov    ebx,edx
  40fcf3:	mov    ebx,DWORD PTR [ecx+0x2ac860ba]
  40fcf9:	and    bl,0xa6
  40fcfc:	mov    ch,0x2
  40fcfe:	fild   DWORD PTR [ebx]
  40fd00:	add    eax,0x759cc82c
  40fd05:	dec    eax
  40fd06:	inc    ebx
  40fd07:	xchg   edx,eax
  40fd08:	sbb    BYTE PTR [edi-0x5f],ch
  40fd0b:	add    BYTE PTR [edx],cl
  40fd0d:	add    al,cl
  40fd0f:	adc    DWORD PTR [ebx+0x30],edi
  40fd12:	adc    BYTE PTR [edi+0x74],ch
  40fd15:	cli    
  40fd16:	cs jmp 0x3ba7:0xd78d34eb
  40fd1e:	mov    edx,0x286fee33
  40fd23:	and    ecx,ebx
  40fd25:	test   al,cl
  40fd27:	pop    ecx
  40fd28:	jge    0x40fd9c
  40fd2a:	mov    cl,0x8f
  40fd2c:	(bad)  
  40fd2e:	int3   
  40fd2f:	sbb    eax,DWORD PTR [eax]
  40fd31:	nop
  40fd32:	push   esp
  40fd33:	cmp    al,0x6b
  40fd35:	jp     0x40fd03
  40fd37:	mov    al,ds:0x5c8a3ebf
  40fd3c:	and    BYTE PTR [edi+eiz*1+0x78],ch
  40fd40:	popa   
  40fd41:	ds fwait
  40fd43:	aas    
  40fd44:	push   edi
  40fd45:	pop    eax
  40fd46:	nop
  40fd47:	push   ss
  40fd48:	(bad)  
  40fd49:	(bad)  
  40fd4a:	mov    ch,0x9e
  40fd4c:	jnp    0x40fdb7
  40fd4e:	mov    BYTE PTR [edi+0x21],bh
  40fd51:	mov    bl,0x3c
  40fd53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd54:	retf   
  40fd55:	rcl    eax,0x57
  40fd58:	adc    eax,0x30c7aef0
  40fd5d:	jae    0x40fd8d
  40fd5f:	mov    dl,0x7f
  40fd61:	fnsave [esi+0x598ca0d5]
  40fd67:	sbb    eax,0x1e58d684
  40fd6c:	add    DWORD PTR [ecx+eiz*2+0x1772152d],edi
  40fd73:	xchg   ebx,eax
  40fd74:	nop
  40fd75:	call   0xcccdbf31
  40fd7a:	iret   
  40fd7b:	or     DWORD PTR [edi+0x348357ed],ebp
  40fd81:	or     dl,BYTE PTR [ecx+eiz*2+0x679a3e95]
  40fd88:	push   cs
  40fd89:	addr16 pusha 
  40fd8b:	xor    bl,ch
  40fd8d:	call   0x2e27:0x3a8a79a8
  40fd94:	jns    0x40fddc
  40fd96:	push   esp
  40fd97:	mov    edi,0x7cce6e6e
  40fd9c:	xchg   esp,eax
  40fd9d:	popf   
  40fd9e:	cmp    al,0xd3
  40fda0:	mov    eax,0x462949e1
  40fda5:	repz mov WORD PTR cs:[ecx+0x5f],gs
  40fdaa:	jmp    0x4147fbfc
  40fdaf:	cld    
  40fdb0:	loopne 0x40fd96
  40fdb2:	into   
  40fdb3:	mov    gs,WORD PTR [eax-0x19]
  40fdb6:	xor    ebx,0x2b
  40fdb9:	push   edi
  40fdba:	mov    dl,0xa6
  40fdbc:	mov    ch,0xd2
  40fdbe:	mov    dh,0x8f
  40fdc0:	fdivp  st(3),st
  40fdc2:	push   ebx
  40fdc3:	shl    ch,cl
  40fdc5:	dec    edx
  40fdc6:	mov    ebp,0x3d3448f4
  40fdcb:	into   
  40fdcc:	ja     0x40fdc9
  40fdce:	lods   al,BYTE PTR ds:[esi]
  40fdcf:	adc    eax,0xce112f97
  40fdd4:	loope  0x40fd9a
  40fdd6:	dec    ecx
  40fdd7:	and    ch,0xb1
  40fdda:	dec    edi
  40fddb:	pop    ebx
  40fddc:	repnz xchg ebx,eax
  40fdde:	jmp    0x659e:0xca0e529c
  40fde5:	cmp    dh,cl
  40fde7:	inc    esi
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	jb     0x40fd80
  40fdeb:	mov    al,ds:0x4cbc5dd9
  40fdf0:	push   ecx
  40fdf1:	mov    eax,0xca760606
  40fdf6:	cdq    
  40fdf7:	and    DWORD PTR [ecx],esi
  40fdf9:	shl    BYTE PTR [ecx],cl
  40fdfb:	retf   
  40fdfc:	fcomp  QWORD PTR [ebp+0x1d]
  40fdff:	jmp    0xc54e:0x10ba586d
  40fe06:	pop    edi
  40fe07:	es ss mov bh,0x53
  40fe0b:	inc    edi
  40fe0c:	out    0x2e,eax
  40fe0e:	jl     0x40fdc2
  40fe10:	test   esi,0x6148998f
  40fe16:	lahf   
  40fe17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe18:	sbb    eax,0x4033a2ca
  40fe1d:	cli    
  40fe1e:	pop    ss
  40fe1f:	xor    eax,0x1d74d5e4
  40fe24:	push   edi
  40fe25:	fcom   QWORD PTR [ecx+ecx*8]
  40fe28:	mov    ds:0x22dd691d,al
  40fe2d:	inc    ebp
  40fe2e:	lea    eax,[edx+0x31ed4339]
  40fe34:	push   ss
  40fe35:	in     eax,dx
  40fe36:	loopne 0x40fe23
  40fe38:	mov    eax,ds:0x54f93eb7
  40fe3d:	lods   eax,DWORD PTR ds:[esi]
  40fe3e:	pop    esi
  40fe3f:	cmp    DWORD PTR [edi-0x62e7647c],ebx
  40fe45:	xchg   esi,eax
  40fe46:	das    
  40fe47:	sbb    ecx,DWORD PTR [edx]
  40fe49:	sub    BYTE PTR [ecx],bl
  40fe4b:	sbb    al,BYTE PTR [ebp-0x5]
  40fe4e:	push   ss
  40fe4f:	sbb    al,0x50
  40fe51:	push   edi
  40fe52:	imul   edx,edi,0xd7eb72a6
  40fe58:	pop    esp
  40fe59:	dec    ebp
  40fe5a:	or     cl,dl
  40fe5c:	repnz xor esi,DWORD PTR [esp+ebp*1+0x27]
  40fe61:	push   0xffffffb6
  40fe63:	pop    edx
  40fe64:	pop    ecx
  40fe65:	inc    eax
  40fe66:	repnz fsubrp st(7),st
  40fe69:	jp     0x40febf
  40fe6b:	retf   
  40fe6c:	xchg   DWORD PTR [ebx-0xf228b49],edi
  40fe72:	mov    ebp,0xe4aa054c
  40fe77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe78:	add    dh,0xa7
  40fe7b:	daa    
  40fe7c:	push   eax
  40fe7d:	leave  
  40fe7e:	inc    ebp
  40fe7f:	(bad)  
  40fe80:	leave  
  40fe81:	pop    ebp
  40fe82:	int    0x64
  40fe84:	pop    ebp
  40fe85:	push   ebx
  40fe86:	out    0x92,eax
  40fe88:	loop   0x40fe3e
  40fe8a:	add    esi,ebp
  40fe8c:	imul   edx,ebx,0xffffff95
  40fe8f:	pop    ss
  40fe90:	pop    ss
  40fe91:	imul   edx,ebx,0xffffffaa
  40fe94:	pop    esp
  40fe95:	fwait
  40fe96:	sbb    al,0xd5
  40fe98:	jecxz  0x40febb
  40fe9a:	cmp    eax,0xffffffe6
  40fe9d:	call   DWORD PTR [edi]
  40fe9f:	push   ebx
  40fea0:	stos   DWORD PTR es:[edi],eax
  40fea1:	sub    ebp,DWORD PTR es:0x6199d57b
  40fea8:	inc    esp
  40fea9:	ret    
  40feaa:	loope  0x40fe49
  40feac:	cdq    
  40fead:	sub    bl,cl
  40feaf:	mov    ecx,0x145fc83a
  40feb4:	fs pusha 
  40feb6:	mov    bh,0x5a
  40feb8:	pop    ss
  40feb9:	cmc    
  40feba:	leave  
  40febb:	fisub  WORD PTR [edx-0x74]
  40febe:	adc    BYTE PTR [edi],dh
  40fec0:	jno    0x40ff27
  40fec2:	mov    ebx,0xc4843844
  40fec7:	adc    esi,DWORD PTR [edx+0x5d]
  40feca:	mov    ebx,0x97d67bb5
  40fecf:	jmp    0x1bf8:0xc310c17d
  40fed6:	inc    edx
  40fed7:	pop    ecx
  40fed8:	pop    edi
  40fed9:	xchg   esi,eax
  40feda:	jp     0x40feff
  40fedc:	sahf   
  40fedd:	mov    ebx,ebx
  40fedf:	leave  
  40fee0:	mov    al,BYTE PTR [ebp+0x139eea4c]
  40fee6:	enter  0x6b4,0xa3
  40feea:	fcom   st(1)
  40feec:	xchg   BYTE PTR [edi+0x26a21bcf],dl
  40fef2:	pusha  
  40fef3:	std    
  40fef4:	xor    eax,0x714a26c5
  40fef9:	add    DWORD PTR [ebp+0x1b],ebx
  40fefc:	stos   DWORD PTR es:[edi],eax
  40fefd:	sahf   
  40fefe:	shl    cl,cl
  40ff00:	inc    edi
  40ff01:	push   cs
  40ff02:	xchg   BYTE PTR [edi],bh
  40ff04:	enter  0x5963,0x9c
  40ff08:	in     eax,0x38
  40ff0a:	aas    
  40ff0b:	adc    ch,BYTE PTR [esi]
  40ff0d:	sahf   
  40ff0e:	daa    
  40ff0f:	call   0xaec9:0xdb137e35
  40ff16:	push   edi
  40ff17:	jno    0x40fea2
  40ff19:	and    ebp,DWORD PTR ds:[eax+0x3e7df6fe]
  40ff20:	pop    edx
  40ff21:	repnz shl DWORD PTR [ebx+0x7379cca5],0x39
  40ff29:	scas   eax,DWORD PTR es:[edi]
  40ff2a:	mov    bl,0xbb
  40ff2c:	xchg   DWORD PTR [esi+0x6],eax
  40ff2f:	add    dl,ch
  40ff31:	jecxz  0x40ff3f
  40ff33:	add    DWORD PTR [edx],0x7b
  40ff36:	and    ah,dl
  40ff38:	aaa    
  40ff39:	retf   
  40ff3a:	pop    edi
  40ff3b:	pop    ss
  40ff3c:	and    BYTE PTR [eax-0x53],0xbc
  40ff40:	or     BYTE PTR [eax-0x46],cl
  40ff43:	push   0x4
  40ff45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff46:	popf   
  40ff47:	dec    ebx
  40ff48:	icebp  
  40ff49:	mov    al,ds:0xb3c5f7b2
  40ff4e:	jle    0x40ff92
  40ff50:	cli    
  40ff51:	cmp    DWORD PTR [edi],ebp
  40ff53:	sbb    esi,esi
  40ff55:	or     dl,0x46
  40ff58:	mov    ecx,0xcf031a27
  40ff5d:	fs cli 
  40ff5f:	push   esp
  40ff60:	in     al,dx
  40ff61:	in     al,dx
  40ff62:	jae    0x40ffa1
  40ff64:	push   ecx
  40ff65:	lods   al,BYTE PTR ds:[esi]
  40ff66:	add    ebx,esp
  40ff68:	jp     0x40ff83
  40ff6a:	sar    DWORD PTR gs:[edx],cl
  40ff6d:	mov    ds:0xfcf9777d,al
  40ff72:	loopne 0x40ff62
  40ff74:	push   ss
  40ff75:	fisttp DWORD PTR [edi]
  40ff77:	adc    DWORD PTR [eax+0x2f11a687],0xffffff80
  40ff7e:	faddp  st(3),st
  40ff80:	std    
  40ff81:	jp     0x40ff2d
  40ff83:	outs   dx,BYTE PTR ds:[esi]
  40ff84:	or     eax,0x59f01fb7
  40ff89:	scas   al,BYTE PTR es:[edi]
  40ff8a:	mov    BYTE PTR [eax-0x29],bh
  40ff8d:	arpl   WORD PTR [edx],sp
  40ff8f:	and    DWORD PTR [ecx-0x51],0xffffffc9
  40ff93:	in     al,dx
  40ff94:	sub    al,BYTE PTR [ebx+0x69]
  40ff97:	push   eax
  40ff98:	dec    edx
  40ff99:	cmc    
  40ff9a:	stos   BYTE PTR es:[edi],al
  40ff9b:	popa   
  40ff9c:	aaa    
  40ff9d:	sub    edi,0xdf30400d
  40ffa3:	pop    ebp
  40ffa4:	leave  
  40ffa5:	mov    ds:0xaa949ec8,al
  40ffaa:	cdq    
  40ffab:	or     ch,BYTE PTR [esi-0x14]
  40ffae:	test   al,0x56
  40ffb0:	loopne 0x40ffc8
  40ffb2:	(bad)  
  40ffb3:	shl    BYTE PTR [ebx+ecx*8-0x49],cl
  40ffb7:	test   al,0xe2
  40ffb9:	lock out dx,eax
  40ffbb:	in     al,dx
  40ffbc:	dec    bx
  40ffbe:	clc    
  40ffbf:	cld    
  40ffc0:	mov    ds:0x1ec0f1b0,eax
  40ffc5:	pusha  
  40ffc6:	shl    BYTE PTR [edx+esi*8],cl
  40ffc9:	mov    dh,0x2f
  40ffcb:	(bad)  
  40ffcc:	jb     0x40ffd2
  40ffce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffcf:	shl    BYTE PTR [ecx],cl
  40ffd1:	shr    esp,0xcd
  40ffd4:	test   DWORD PTR [edi+0x31ff1d00],edi
  40ffda:	dec    eax
  40ffdb:	lods   al,BYTE PTR ds:[esi]
  40ffdc:	fstp   TBYTE PTR [eax]
  40ffde:	inc    ebp
  40ffdf:	sbb    DWORD PTR ds:0x400b8940,edx
  40ffe5:	call   0x42d94e8e
  40ffea:	xor    al,0xa1
  40ffec:	pop    esp
  40ffed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffee:	xor    ch,BYTE PTR [eax+0x39]
  40fff1:	cdq    
  40fff2:	mov    ebp,0x5d27199f
  40fff7:	or     eax,0x810c29ef
  40fffc:	shr    dl,cl
  40fffe:	mov    edi,0xd43d7c3a
  410003:	push   ds
  410004:	pop    eax
  410005:	xor    al,0xc1
  410007:	pop    esp
  410008:	cmp    eax,0xa7f7823a
  41000d:	mov    ds:0x589711d9,eax
  410012:	shr    BYTE PTR [ecx-0x70],0x57
  410016:	fdiv   DWORD PTR ds:0xdb61f1c1
  41001c:	fldenv [ebx-0x2]
  41001f:	mov    DWORD PTR [edi-0x6cc0f545],0x6fe052b2
  410029:	inc    ebx
  41002a:	sar    DWORD PTR [ebp+0x72a58a4d],cl
  410030:	cmp    esi,DWORD PTR [ecx-0x1f]
  410033:	adc    al,0x3d
  410035:	jnp    0x40ffc9
  410037:	loope  0x41000f
  410039:	add    al,0x5d
  41003b:	push   ebp
  41003c:	push   edx
  41003d:	mov    ecx,0x45ecbf07
  410042:	mov    BYTE PTR [eax+edi*1],al
  410045:	aas    
  410046:	mov    esi,0x96d78311
  41004b:	(bad)
  41004e:	repnz sbb dh,BYTE PTR [edx+0x202ad7c3]
  410055:	or     DWORD PTR [ecx-0x3c2a795e],esp
  41005b:	sub    BYTE PTR [edi+ebx*2-0x37726b28],dh
  410062:	pushf  
  410063:	sar    BYTE PTR [ebx-0x1582d561],0x31
  41006a:	pop    ebx
  41006b:	imul   edi,DWORD PTR [esp+ebp*4-0x5db5b25c],0xffffffa8
  410073:	dec    edi
  410074:	jg     0x410095
  410076:	dec    esp
  410077:	xor    BYTE PTR [edi-0x45],0xf5
  41007b:	fcom   DWORD PTR [esi]
  41007d:	mov    ds:0x3f4d19dc,al
  410082:	xchg   edi,eax
  410083:	mov    esi,0x4304899
  410088:	into   
  410089:	pcmpgtw mm3,QWORD PTR [eax-0x7c]
  41008d:	cld    
  41008e:	jmp    0xd790:0x11d53dd2
  410095:	mov    esp,0xe5503063
  41009a:	loop   0x41004d
  41009c:	dec    eax
  41009d:	sbb    edx,DWORD PTR [eax]
  41009f:	popf   
  4100a0:	cs inc edi
  4100a2:	push   ebp
  4100a3:	fwait
  4100a4:	xor    DWORD PTR [ebp-0x4b],esi
  4100a7:	rcl    BYTE PTR [edi],cl
  4100a9:	add    eax,esp
  4100ab:	loopne 0x410044
  4100ad:	popf   
  4100ae:	lea    ecx,ss:[ebx+0x38]
  4100b2:	xchg   DWORD PTR [edi+0x5c50da7],edx
  4100b8:	popf   
  4100b9:	mov    cl,0x4d
  4100bb:	xor    ebp,DWORD PTR [esi+0x1]
  4100be:	inc    esi
  4100bf:	dec    ecx
  4100c0:	lods   al,BYTE PTR ds:[esi]
  4100c1:	sbb    al,0x60
  4100c3:	jle    0x4100f7
  4100c5:	mov    ecx,0x710a1b0e
  4100ca:	jne    0x410143
  4100cc:	fist   DWORD PTR [ebp+0x5b]
  4100cf:	(bad)  
  4100d0:	sbb    BYTE PTR [esi-0x12],bh
  4100d3:	mov    dh,0xe5
  4100d5:	sub    BYTE PTR [ecx-0x224fb22e],0x23
  4100dc:	and    eax,0x16febbae
  4100e1:	and    DWORD PTR [esi],ebp
  4100e3:	fisttp DWORD PTR [esi+0xad8dbec]
  4100e9:	aad    0x25
  4100eb:	cs scas al,BYTE PTR es:[edi]
  4100ed:	jl     0x4100f6
  4100ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f0:	gs pop edi
  4100f2:	fstp   QWORD PTR [ecx-0x56df38e]
  4100f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f9:	or     BYTE PTR [ebx+0x3c5a81d0],bl
  4100ff:	cdq    
  410100:	fisub  WORD PTR [edi+esi*4]
  410103:	pop    ebx
  410104:	aad    0x9c
  410106:	pop    eax
  410107:	or     dl,dh
  410109:	daa    
  41010a:	pop    esp
  41010b:	ins    DWORD PTR es:[edi],dx
  41010c:	call   0xc7e9cbed
  410111:	mov    BYTE PTR [esi+0x62],dl
  410114:	push   esi
  410115:	pop    ebx
  410116:	inc    eax
  410117:	push   ebx
  410118:	nop
  410119:	test   eax,0x90c175d7
  41011e:	je     0x4100a7
  410120:	mov    ecx,0x1e291252
  410125:	xor    al,0xd4
  410127:	cmp    esp,0x8099c5d0
  41012d:	mul    bl
  41012f:	rcr    BYTE PTR [edx-0x334b3381],cl
  410135:	aam    0xd5
  410137:	add    DWORD PTR [edi],0x2785e1f9
  41013d:	adc    DWORD PTR [edx+esi*4+0x76b11843],edi
  410144:	daa    
  410145:	aas    
  410146:	mov    dl,0xd2
  410148:	shl    BYTE PTR [eax],cl
  41014a:	aad    0x46
  41014c:	mov    cs,WORD PTR [esi-0x57847de6]
  410152:	clc    
  410153:	out    dx,eax
  410154:	xchg   ebp,eax
  410155:	ss push ecx
  410157:	(bad)  [ecx+ebp*4-0xa]
  41015b:	lock es pop edx
  41015e:	jmp    0x7a7:0x340244dc
  410165:	mov    bl,0x55
  410167:	mov    WORD PTR [esi-0x9fafefc],ss
  41016d:	icebp  
  41016e:	leave  
  41016f:	and    dh,BYTE PTR [esi]
  410171:	cmp    eax,DWORD PTR [eax+edx*8]
  410174:	lea    ebx,[ebx+0x3e]
  410177:	sub    eax,0x8363ef8e
  41017c:	push   ss
  41017d:	mov    al,ds:0xc2f78035
  410182:	ds dec edi
  410184:	aaa    
  410185:	cmp    al,0x91
  410187:	jg     0x4101f3
  410189:	cmp    eax,0x908e68b6
  41018e:	daa    
  41018f:	nop
  410190:	out    0xed,eax
  410192:	pushf  
  410193:	add    al,0xf6
  410195:	fldenv [ecx+0x5fdfb3ed]
  41019b:	cwde   
  41019c:	arpl   WORD PTR ds:0xdfa56164,dx
  4101a2:	jge    0x410193
  4101a4:	sbb    eax,0x16f99907
  4101a9:	(bad)  
  4101aa:	mov    dl,0x20
  4101ac:	pop    edx
  4101ad:	les    ebx,FWORD PTR [edx-0x4d688ba0]
  4101b3:	jmp    0x41016b
  4101b5:	push   ebp
  4101b6:	lods   eax,DWORD PTR ds:[esi]
  4101b7:	sbb    bl,BYTE PTR [ebx+0x4c]
  4101ba:	fisub  WORD PTR [esi]
  4101bc:	imul   edx,DWORD PTR ds:0x1843e2ea,0x7a
  4101c3:	and    ch,BYTE PTR [ebx]
  4101c5:	or     al,0xc8
  4101c7:	gs sub al,0x72
  4101ca:	cs jl  0x4101c1
  4101cd:	bound  ebx,QWORD PTR [ebp-0x5301e04f]
  4101d3:	in     eax,0xff
  4101d5:	mov    WORD PTR [edx+eiz*1],?
  4101d8:	mov    dl,0x15
  4101da:	mov    esi,0x6a250aa
  4101df:	loopne 0x410207
  4101e1:	(bad)  
  4101e2:	push   ss
  4101e3:	mov    edi,esi
  4101e5:	sbb    al,0x67
  4101e7:	jo     0x41017c
  4101e9:	test   al,0xbd
  4101eb:	outs   dx,DWORD PTR ds:[esi]
  4101ec:	push   edi
  4101ed:	mov    edx,ds
  4101ef:	outs   dx,DWORD PTR ds:[esi]
  4101f0:	mov    ebx,0x7cce8edb
  4101f5:	push   ebp
  4101f6:	nop
  4101f7:	rcr    dl,1
  4101f9:	pop    ebp
  4101fa:	or     al,0x4f
  4101fc:	pushf  
  4101fd:	and    al,0xdf
  4101ff:	add    al,dl
  410201:	jmp    0x4101e7
  410203:	es cmp al,0x29
  410206:	xlat   BYTE PTR ds:[ebx]
  410207:	add    eax,0x387a296b
  41020c:	xor    BYTE PTR [ecx-0x60],dl
  41020f:	mov    cl,0x7a
  410211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410212:	and    ebp,DWORD PTR [eax-0x79]
  410215:	addr16 pop ebx
  410217:	push   esi
  410218:	nop
  410219:	inc    ebp
  41021a:	jne    0x41029a
  41021c:	test   esp,0x263df27
  410222:	into   
  410223:	pop    ds
  410224:	xor    ebp,ebx
  410226:	pushf  
  410227:	jnp    0x4101a9
  410229:	and    al,0x9
  41022b:	cmp    al,0x6c
  41022d:	jecxz  0x410285
  41022f:	pop    esp
  410230:	fisubr DWORD PTR [ecx-0x5a6b56ac]
  410236:	lds    edi,FWORD PTR [ecx-0xdbeb278]
  41023c:	jmp    0x41026c
  41023e:	out    0x96,al
  410240:	mov    WORD PTR [ebx+0x56c5ce23],gs
  410246:	pop    ebx
  410247:	call   0x6b58e6e1
  41024c:	jo     0x410238
  41024e:	imul   eax,edx,0x772925f0
  410254:	push   cs
  410255:	imul   esi,DWORD PTR [ecx-0x34],0x3
  410259:	add    DWORD PTR ds:0xea3f9185,eax
  41025f:	aad    0x9e
  410261:	push   ds
  410262:	jo     0x41022d
  410264:	ds retf 
  410266:	in     eax,0x5d
  410268:	xor    eax,0x86ce667c
  41026d:	loopne 0x410200
  41026f:	push   0xa97811b
  410274:	xor    DWORD PTR [esi-0x1f65fdb1],eax
  41027a:	pop    ds
  41027b:	adc    eax,0xe477bd78
  410280:	daa    
  410281:	ds push eax
  410283:	stos   DWORD PTR es:[edi],eax
  410284:	and    eax,0xe4ef4191
  410289:	push   esi
  41028a:	sub    eax,eax
  41028c:	push   esp
  41028d:	pcmpeqw mm7,mm4
  410290:	call   0x3583:0x6bf69c65
  410297:	ret    
  410298:	jne    0x410258
  41029a:	pop    es
  41029b:	jmp    0xd26c43c3
  4102a0:	lds    esp,FWORD PTR [edx+0x75]
  4102a3:	cmp    dh,BYTE PTR [edx+eax*4+0x1b]
  4102a7:	ror    DWORD PTR [esi+0x68],cl
  4102aa:	mov    DWORD PTR [ebp+0x2ce3d498],eax
  4102b0:	sub    ch,dh
  4102b2:	push   DWORD PTR [ebp-0x55f992d4]
  4102b8:	repnz sbb esp,edi
  4102bb:	scas   eax,DWORD PTR es:[edi]
  4102bc:	push   esp
  4102bd:	push   cs
  4102be:	or     BYTE PTR [eax+0x620a288d],dh
  4102c4:	pop    edx
  4102c5:	and    BYTE PTR [ebp+0x6864d2bc],0x8a
  4102cc:	pop    esp
  4102cd:	aas    
  4102ce:	and    edi,edx
  4102d0:	sub    bl,BYTE PTR [edi-0x2645ed66]
  4102d6:	push   cs
  4102d7:	jb     0x4102b5
  4102d9:	push   edx
  4102da:	ja     0x4102a0
  4102dc:	daa    
  4102dd:	cwde   
  4102de:	pop    esp
  4102df:	aaa    
  4102e0:	or     DWORD PTR [ebx],esp
  4102e2:	pop    eax
  4102e3:	xchg   ebp,eax
  4102e4:	mov    ds:0x3f1d3a6c,al
  4102e9:	inc    eax
  4102ea:	cmp    eax,0x380ac9ae
  4102ef:	mov    ah,0xf4
  4102f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f2:	retf   0x9902
  4102f5:	hlt    
  4102f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f7:	inc    edi
  4102f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f9:	shl    BYTE PTR [ebx],0x0
  4102fc:	call   DWORD PTR [ecx-0x41]
  4102ff:	and    ah,ch
  410301:	out    dx,al
  410302:	dec    edx
  410303:	push   edi
  410304:	cmp    DWORD PTR [ebx-0x78fdc2a0],esp
  41030a:	aaa    
  41030b:	cld    
  41030c:	and    eax,0x700e09e1
  410311:	push   esi
  410312:	dec    edi
  410313:	inc    ecx
  410314:	inc    eax
  410315:	sub    ebp,esp
  410317:	xchg   edi,eax
  410318:	cmp    DWORD PTR [edi+0x1a307056],eax
  41031e:	mov    edx,0x6a1c4c09
  410323:	sub    DWORD PTR [edi+0x53],ecx
  410326:	js     0x41030f
  410328:	xchg   edi,eax
  410329:	add    eax,0x9ce22681
  41032e:	sub    al,ah
  410330:	test   BYTE PTR [ecx],dl
  410332:	mov    ds:0x5441980b,al
  410337:	fs push ds
  410339:	sti    
  41033a:	mov    ebp,0xd2b7dce3
  41033f:	inc    eax
  410340:	push   0xfffffff3
  410342:	sub    BYTE PTR [ebp-0x70],bl
  410345:	sub    DWORD PTR ss:[ebp-0x6c6ade1a],ebx
  41034c:	adc    DWORD PTR [ebp-0x6d],esi
  41034f:	xor    BYTE PTR [edx],ah
  410351:	setge  BYTE PTR [ebp+0x4]
  410355:	test   BYTE PTR [eax+0x73],bh
  410358:	and    bl,BYTE PTR [eax+edi*2+0x73c5103b]
  41035f:	dec    ebp
  410360:	out    dx,eax
  410361:	sub    ch,bl
  410363:	mov    ecx,0x2eeb6826
  410368:	mov    ecx,0x38d65ca2
  41036d:	leave  
  41036e:	mov    bh,0x10
  410370:	fnsave [ecx]
  410372:	jmp    0x4103f2
  410374:	adc    ch,BYTE PTR [ebx+0x543edf7a]
  41037a:	mov    ah,0x29
  41037c:	lods   eax,DWORD PTR ds:[si]
  41037e:	xchg   esp,eax
  41037f:	mov    esi,DWORD PTR [esi+0x3eab160b]
  410385:	push   cs
  410386:	or     ch,bl
  410388:	adc    al,0xa
  41038a:	inc    edi
  41038b:	mov    WORD PTR [edx],ds
  41038d:	retf   0x8fe9
  410390:	int    0x91
  410392:	push   ss
  410393:	and    al,0x85
  410395:	mov    BYTE PTR [eax],bl
  410397:	ins    BYTE PTR es:[edi],dx
  410398:	rol    DWORD PTR [edi-0x2f7ef2cc],cl
  41039e:	stos   BYTE PTR es:[edi],al
  41039f:	xor    eax,0x795f2ac5
  4103a4:	jb     0x41039b
  4103a6:	test   al,0xeb
  4103a8:	shl    BYTE PTR [ebp+eiz*2+0x194cd7c9],1
  4103af:	pop    esp
  4103b0:	pop    ebp
  4103b1:	cmp    DWORD PTR [edx],esp
  4103b3:	xchg   esi,ebx
  4103b5:	jns    0x410434
  4103b7:	pop    ebp
  4103b8:	in     eax,0x25
  4103ba:	cs push edi
  4103bc:	add    esp,DWORD PTR [edx-0x38141427]
  4103c2:	iret   
  4103c3:	dec    esp
  4103c4:	mov    ds:0x6b44d986,eax
  4103c9:	jge    0x410419
  4103cb:	retf   0x8afb
  4103ce:	mov    ecx,0x799cb981
  4103d3:	call   0xc28288f9
  4103d8:	out    0xfb,al
  4103da:	dec    edx
  4103db:	sbb    bh,ah
  4103dd:	rcr    BYTE PTR [esi-0x5556458b],0x94
  4103e4:	icebp  
  4103e5:	mov    BYTE PTR [ebp+0x3f],0x30
  4103e9:	jmp    0xe735ae01
  4103ee:	jb     0x4103ab
  4103f0:	jmp    0x2d96:0x405f4098
  4103f7:	jl     0x41041d
  4103f9:	jno    0x4103fc
  4103fb:	nop    DWORD PTR [edx]
  4103fe:	or     BYTE PTR [edi-0x26],al
  410401:	add    ecx,DWORD PTR [esi+0x4]
  410404:	in     al,0xbe
  410406:	out    0x5b,eax
  410408:	jmp    0xdef34934
  41040d:	cwde   
  41040e:	adc    DWORD PTR [edx-0x5e],eax
  410411:	mov    ebx,0x45ba608b
  410416:	loopne 0x41047a
  410418:	imul   eax,DWORD PTR [esi],0x78a6d938
  41041e:	jne    0x410441
  410420:	mov    edx,0x23ae5604
  410425:	jb     0x410480
  410427:	jmp    0x4103bc
  410429:	dec    ebp
  41042a:	mov    eax,0x2584a9d1
  41042f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410430:	cwde   
  410431:	push   0x986fbd18
  410436:	pop    ss
  410437:	daa    
  410438:	dec    ebp
  410439:	xor    al,0x3d
  41043b:	int3   
  41043c:	pop    edx
  41043d:	outs   dx,DWORD PTR ds:[esi]
  41043e:	add    DWORD PTR ds:0xd520789,edi
  410444:	adc    BYTE PTR [edx-0x36],bl
  410447:	dec    esi
  410448:	test   eax,0x1ab6692a
  41044d:	dec    ebx
  41044e:	sub    ebp,ebp
  410450:	sub    dl,BYTE PTR [edx+0x2eae6e66]
  410456:	ins    DWORD PTR es:[edi],dx
  410457:	mov    ch,0x5
  410459:	pop    edx
  41045a:	ds ds inc edx
  41045d:	mov    ch,BYTE PTR [edi+0x6fcfffd1]
  410463:	in     eax,dx
  410464:	mov    WORD PTR [edi],?
  410466:	cmc    
  410467:	mov    dh,0xc4
  410469:	leave  
  41046a:	jmp    0x410456
  41046c:	adc    eax,0x58fe046c
  410471:	mov    al,ds:0xc91187da
  410476:	daa    
  410477:	and    BYTE PTR [eax+0x44],dh
  41047a:	gs sbb al,0xa9
  41047d:	push   esi
  41047e:	shr    ecx,0x42
  410481:	and    eax,0xffe88176
  410486:	xchg   edx,eax
  410487:	xor    DWORD PTR [edi+0x46],ecx
  41048a:	(bad)  
  41048b:	into   
  41048c:	scas   eax,DWORD PTR es:[edi]
  41048d:	into   
  41048e:	sub    bh,dh
  410490:	add    ebp,DWORD PTR [esi*1+0x4c7596dd]
  410497:	mov    ebp,0xfdac232e
  41049c:	push   ds
  41049d:	je     0x4104a3
  41049f:	pop    es
  4104a0:	in     al,0xd5
  4104a2:	mov    eax,ds:0x9778fad
  4104a7:	and    eax,0xad933bc9
  4104ac:	scas   eax,DWORD PTR es:[edi]
  4104ad:	in     al,dx
  4104ae:	out    dx,al
  4104af:	js     0x4104b3
  4104b1:	clc    
  4104b2:	fwait
  4104b3:	mov    cl,0xee
  4104b5:	or     BYTE PTR [ebx+ebx*8],ah
  4104b8:	call   0x6a67b19
  4104bd:	scas   al,BYTE PTR es:[edi]
  4104be:	dec    esp
  4104bf:	add    BYTE PTR [ecx-0x72],dh
  4104c2:	outs   dx,BYTE PTR ds:[esi]
  4104c3:	mov    ebx,0xd1264c6f
  4104c8:	inc    esi
  4104c9:	aad    0xe8
  4104cb:	add    eax,0x9961731f
  4104d0:	sbb    al,0x55
  4104d2:	sub    bh,BYTE PTR [edi+0x6f583450]
  4104d8:	inc    ebx
  4104d9:	cs mov bl,0x3d
  4104dc:	lea    eax,[edi+0x59]
  4104df:	or     DWORD PTR [edx-0x751b8940],ebp
  4104e5:	mov    bl,0x9b
  4104e7:	add    eax,0x6d687b1a
  4104ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ed:	daa    
  4104ee:	pop    ecx
  4104ef:	outs   dx,BYTE PTR ds:[esi]
  4104f0:	jbe    0x4104d3
  4104f2:	(bad)  
  4104f3:	(bad)  
  4104f4:	xor    al,0x62
  4104f6:	mov    al,ds:0xfdb5473a
  4104fb:	push   ebx
  4104fc:	into   
  4104fd:	test   eax,0x933bf4b2
  410502:	push   edx
  410503:	sub    DWORD PTR [eax],ecx
  410505:	(bad)  
  410506:	fimul  DWORD PTR [ecx-0x57b5b58b]
  41050c:	(bad)  
  41050d:	pop    edi
  41050e:	sar    BYTE PTR [eax],cl
  410510:	and    BYTE PTR [esi-0x2f],0xd1
  410514:	sub    DWORD PTR [edx+ecx*4],ebp
  410517:	(bad)  
  410518:	clc    
  410519:	div    DWORD PTR [esi]
  41051b:	mov    ds:0xf43253ca,eax
  410520:	pop    ss
  410521:	retf   0xb96a
  410524:	xchg   DWORD PTR [edx],esi
  410526:	fs enter 0x83b8,0x1c
  41052b:	or     BYTE PTR [esi+ebx*8+0x570dfd23],bh
  410532:	mov    eax,0xfd8719a6
  410537:	jnp    0x4104c9
  410539:	push   ecx
  41053a:	not    esi
  41053c:	pushf  
  41053d:	sub    ecx,0x16
  410540:	ret    
  410541:	push   esp
  410542:	(bad)  
  410544:	or     DWORD PTR [ebx-0x7269caec],0xffffffc3
  41054b:	js     0x4105a5
  41054d:	lods   al,BYTE PTR ds:[esi]
  41054e:	and    al,0x3
  410550:	cmp    BYTE PTR [edi-0xb],dh
  410553:	jge    0x41054d
  410555:	and    esi,DWORD PTR [edi-0x37]
  410558:	ins    DWORD PTR es:[edi],dx
  410559:	daa    
  41055a:	fisubr DWORD PTR [ecx+0x70]
  41055d:	bound  eax,QWORD PTR [edx-0x34da3dd5]
  410563:	test   DWORD PTR [edx],edi
  410565:	stc    
  410566:	std    
  410567:	out    dx,eax
  410568:	jp     0x410529
  41056a:	enter  0xa442,0x92
  41056e:	dec    esi
  41056f:	sbb    eax,0x20bd3a26
  410574:	rcr    ebp,0xe0
  410577:	je     0x41052c
  410579:	sahf   
  41057a:	cwde   
  41057b:	int3   
  41057c:	ret    
  41057d:	sbb    edi,ebx
  41057f:	xchg   BYTE PTR [esi-0x45],al
  410582:	ins    BYTE PTR es:[edi],dx
  410583:	imul   ebp,DWORD PTR [ebp+0x70e9e84e],0xfbbd36e3
  41058d:	(bad)  [eax-0x1f697a52]
  410593:	pop    es
  410594:	and    BYTE PTR [ecx-0x60],al
  410597:	mov    esp,0x73280a8e
  41059c:	mov    edi,0x46a8190
  4105a1:	shl    WORD PTR [ecx],1
  4105a4:	jb     0x4105ef
  4105a6:	(bad)  
  4105a7:	rol    ecx,0x7
  4105aa:	sahf   
  4105ab:	mov    ecx,0xb12fc3d6
  4105b0:	mov    eax,0xdb9dee62
  4105b5:	inc    ecx
  4105b6:	push   eax
  4105b7:	push   0xac74223c
  4105bc:	stos   BYTE PTR es:[edi],al
  4105bd:	psubusw mm2,mm6
  4105c0:	ror    BYTE PTR [eax+0x47],cl
  4105c3:	jnp    0x410579
  4105c5:	loopne 0x41056a
  4105c7:	jge    0x41060f
  4105c9:	mov    ch,0x71
  4105cb:	pop    esp
  4105cc:	mov    edi,0x98e2d096
  4105d1:	or     al,BYTE PTR [edx]
  4105d3:	ss in  eax,dx
  4105d5:	mov    ds:0x2cd3de28,eax
  4105da:	push   cs
  4105db:	cdq    
  4105dc:	dec    esi
  4105dd:	popf   
  4105de:	out    0xb5,eax
  4105e0:	push   esp
  4105e1:	call   0x98d49267
  4105e6:	xor    DWORD PTR [ebx-0x51],esp
  4105e9:	cdq    
  4105ea:	stc    
  4105eb:	lds    eax,FWORD PTR [ecx+0x1f]
  4105ee:	je     0x41060d
  4105f0:	retf   0xf55
  4105f3:	add    DWORD PTR [ebp-0x503064fd],eax
  4105f9:	adc    ecx,ebp
  4105fb:	mov    DWORD PTR ds:0x725a4e45,0x11d2dc00
  410605:	jmp    0xf0b9:0xc051364c
  41060c:	(bad)  
  41060d:	push   ds
  41060e:	jp     0x4105ae
  410610:	xchg   esp,eax
  410611:	mov    edx,0x2ca4b5e4
  410616:	jae    0x410607
  410618:	retf   0x273c
  41061b:	push   cs
  41061c:	cmp    DWORD PTR [esi+0x15],eax
  41061f:	mov    dh,0xc0
  410621:	adc    eax,0x1f34453e
  410626:	add    al,0x53
  410628:	lock jb 0x4105f8
  41062b:	enter  0xfe12,0xc4
  41062f:	rdpmc  
  410631:	ret    
  410632:	das    
  410633:	aas    
  410634:	lods   al,BYTE PTR ds:[esi]
  410635:	or     bl,BYTE PTR [edi-0x365f19b5]
  41063b:	inc    esi
  41063c:	stos   DWORD PTR es:[edi],eax
  41063d:	fld    QWORD PTR [eax]
  41063f:	adc    ah,BYTE PTR ds:0xb38931b3
  410645:	test   DWORD PTR [bp+si],esp
  410648:	sti    
  410649:	mov    dh,0x7d
  41064b:	sti    
  41064c:	nop
  41064d:	xchg   edx,eax
  41064e:	mov    edi,0xca67bc62
  410653:	out    dx,al
  410654:	and    al,0x41
  410656:	xor    al,0x90
  410658:	xchg   esp,eax
  410659:	pushf  
  41065a:	mov    eax,0x6bb1d7a6
  41065f:	add    ah,BYTE PTR [edx]
  410661:	mov    cl,0x15
  410663:	mov    eax,0xb1981f8f
  410668:	dec    ebp
  410669:	and    eax,0xb261659f
  41066e:	scas   eax,DWORD PTR es:[edi]
  41066f:	and    edi,DWORD PTR [edx-0x766cc43d]
  410675:	aas    
  410676:	pop    edx
  410677:	cwde   
  410678:	aaa    
  410679:	cmc    
  41067a:	outs   dx,BYTE PTR ds:[esi]
  41067b:	jge    0x4106b6
  41067d:	dec    esi
  41067e:	pop    edi
  41067f:	inc    eax
  410680:	mov    al,ds:0xc988add7
  410685:	mov    ebx,DWORD PTR [ecx]
  410687:	xchg   esi,eax
  410688:	mov    ds:0xb5b50c03,al
  41068d:	sbb    dh,BYTE PTR ds:0xbf3af720
  410693:	push   ss
  410694:	sbb    al,BYTE PTR [edx+0x7eee91d3]
  41069a:	mov    dl,0x14
  41069c:	xor    eax,0x96fd7cda
  4106a1:	adc    ebx,DWORD PTR [ebx]
  4106a3:	(bad)  
  4106a4:	jle    0x410695
  4106a6:	test   al,0x17
  4106a8:	pop    ds
  4106a9:	mov    BYTE PTR [ebx-0x37a188a4],cl
  4106af:	or     BYTE PTR [eax+eiz*8+0x4e],ch
  4106b3:	xchg   esp,eax
  4106b4:	and    edx,ebp
  4106b6:	mov    DWORD PTR [edx-0x4f],ebx
  4106b9:	jle    0x410734
  4106bb:	test   BYTE PTR [ebp+0x60],dh
  4106be:	add    eax,0x2930e49c
  4106c3:	ins    DWORD PTR es:[edi],dx
  4106c4:	xor    eax,0xf69ea832
  4106c9:	in     eax,dx
  4106ca:	adc    dl,BYTE PTR [esi-0x4]
  4106cd:	mov    ch,0x81
  4106cf:	and    ebp,DWORD PTR [edi+0x1ab02dbf]
  4106d5:	cld    
  4106d6:	xchg   BYTE PTR [eax+ebp*4],bh
  4106d9:	int    0xb0
  4106db:	leave  
  4106dc:	ins    BYTE PTR es:[edi],dx
  4106dd:	dec    edx
  4106de:	jbe    0x4106f4
  4106e0:	jp     0x4106d0
  4106e2:	mov    al,0xbc
  4106e4:	push   ds
  4106e5:	lods   al,BYTE PTR ds:[si]
  4106e7:	dec    ebx
  4106e8:	retf   
  4106e9:	sub    eax,0xa9b64c77
  4106ee:	sub    eax,0xb128c010
  4106f3:	fisttp WORD PTR [esi+ebx*4+0x2e]
  4106f7:	mov    bh,0x2f
  4106f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fa:	mov    al,ds:0x637bc48a
  4106ff:	sbb    BYTE PTR [eax+0x703847d1],0xf5
  410706:	pop    ecx
  410707:	sub    DWORD PTR [esi],ebx
  410709:	and    al,0x6b
  41070b:	mov    ds:0xb4856b24,al
  410710:	lock retf 
  410712:	dec    ebp
  410713:	ret    0x9a3d
  410716:	ret    0xdc36
  410719:	mov    ch,0xa0
  41071b:	mov    eax,0x572b7c5d
  410720:	add    eax,0x36e399c
  410725:	mov    WORD PTR [edx],fs
  410727:	(bad)  
  410729:	pop    es
  41072a:	ficomp WORD PTR [esi]
  41072c:	vmread DWORD PTR ss:[ecx-0x39],ebp
  410731:	neg    DWORD PTR ss:[ecx]
  410734:	or     esp,eax
  410736:	fnstsw WORD PTR ds:0xc5baaf97
  41073c:	xlat   BYTE PTR ds:[ebx]
  41073d:	stos   BYTE PTR es:[edi],al
  41073e:	test   DWORD PTR [edi+0x60],ebx
  410741:	mov    ebx,0x28333ee3
  410746:	push   0xffffff94
  410748:	inc    ecx
  410749:	out    dx,eax
  41074a:	jnp    0x41077c
  41074c:	ds pop es
  41074e:	ret    
  41074f:	cmp    BYTE PTR [esi+0x16b0d8d9],0x6e
  410756:	and    al,0xa3
  410758:	jle    0x4107be
  41075a:	enter  0xf047,0xe5
  41075e:	xor    DWORD PTR [ebp+0x4a],esp
  410761:	adc    DWORD PTR [edi-0x27549463],0x64307e9e
  41076b:	dec    ebx
  41076c:	icebp  
  41076d:	je     0x4106f0
  41076f:	push   edi
  410770:	call   0xf00b:0xc8cedb5d
  410777:	call   0xf72c:0x52151b8
  41077e:	mov    ds:0xf1353f0e,al
  410783:	xor    cl,dl
  410785:	ss call 0x7aeb:0xb516c121
  41078d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41078e:	mov    edx,0x4a533654
  410793:	rcl    DWORD PTR [edi+0x47],cl
  410796:	jmp    FWORD PTR [ebp+0x5c13f77a]
  41079c:	mov    cs,WORD PTR [eax]
  41079e:	push   ecx
  41079f:	and    al,0xce
  4107a1:	sti    
  4107a2:	out    0x29,eax
  4107a4:	scas   al,BYTE PTR es:[edi]
  4107a5:	xchg   edx,eax
  4107a6:	(bad)  
  4107a7:	in     al,0x7d
  4107a9:	add    esi,DWORD PTR [ebx+ebx*1+0xe]
  4107ad:	fnstenv [edx+0x21]
  4107b0:	rcl    BYTE PTR [eax],1
  4107b2:	lea    esi,[eax]
  4107b4:	or     eax,0xc2c65e30
  4107b9:	mov    WORD PTR [di+0x1642],?
  4107be:	adc    eax,0xe50b9a90
  4107c3:	(bad)  
  4107c4:	gs cs clc 
  4107c7:	or     al,0xd
  4107c9:	adc    DWORD PTR [eax],ebx
  4107cb:	ins    BYTE PTR es:[edi],dx
  4107cc:	push   eax
  4107cd:	repnz in al,dx
  4107cf:	imul   DWORD PTR [edx]
  4107d1:	(bad)  
  4107d2:	int3   
  4107d3:	add    al,0x7c
  4107d5:	or     dh,BYTE PTR [edi+0x3]
  4107d8:	ret    0x5b80
  4107db:	data16 (bad) 
  4107de:	in     al,0x33
  4107e0:	dec    edx
  4107e1:	jle    0x4107a6
  4107e3:	push   ebp
  4107e4:	mov    esi,DWORD PTR [ecx+0x2f7efac]
  4107ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107eb:	add    al,0xda
  4107ed:	int    0xc4
  4107ef:	mov    ebp,eax
  4107f1:	stc    
  4107f2:	mov    DWORD PTR [esi-0x7d],ebp
  4107f5:	data16 ins BYTE PTR es:[edi],dx
  4107f7:	push   edi
  4107f8:	pop    ebp
  4107f9:	cmp    BYTE PTR [edx-0x5d503e66],dl
  4107ff:	xchg   ebp,eax
  410800:	push   0xffffffae
  410802:	mov    ebx,0x7a324abf
  410807:	mov    edx,0x33a16f71
  41080c:	push   0x306075eb
  410811:	mov    ebp,0xd358b34b
  410816:	mov    eax,ds:0xe2ee0bb
  41081b:	gs xor eax,0xda01ebe7
  410821:	lods   eax,DWORD PTR ds:[esi]
  410822:	push   eax
  410823:	ja     0x4108a3
  410825:	mov    ah,0xdb
  410827:	call   0xe3ca338f
  41082c:	into   
  41082d:	mov    esi,0x40f8f658
  410832:	test   BYTE PTR [edx],ch
  410834:	xor    esp,DWORD PTR ds:0xfe0892fe
  41083a:	jne    0x410805
  41083c:	shr    DWORD PTR [ecx+edx*8-0x28ca0d11],0x4d
  410844:	scas   al,BYTE PTR es:[edi]
  410845:	mov    ebp,0xaf213c04
  41084a:	ins    DWORD PTR es:[edi],dx
  41084b:	test   al,0x8e
  41084d:	push   edx
  41084e:	aas    
  41084f:	pop    ebp
  410850:	fbstp  TBYTE PTR [edx-0xbffd489]
  410856:	dec    ebp
  410857:	sbb    al,0xe1
  410859:	mov    esp,0xc4c08b1a
  41085e:	or     al,0xb7
  410860:	fwait
  410861:	scas   eax,DWORD PTR es:[edi]
  410862:	shr    ecx,1
  410864:	popf   
  410865:	push   0x69
  410867:	jmp    0xfa759e61
  41086c:	popa   
  41086d:	out    dx,eax
  41086e:	inc    esi
  41086f:	fisubr DWORD PTR [ebx+0xe9e3886]
  410875:	imul   ebx,DWORD PTR [ebx+ebp*2-0x27387a83],0x51
  41087d:	xchg   BYTE PTR [eax-0x49ec1357],bh
  410883:	fimul  DWORD PTR [edi+0x2d]
  410886:	icebp  
  410887:	mov    ds:0x5b43483c,al
  41088c:	shl    BYTE PTR [ecx],cl
  41088e:	pop    esi
  41088f:	jb     0x4108c1
  410891:	ss ins DWORD PTR es:[edi],dx
  410893:	repz loope 0x4108f8
  410896:	jmp    0xc862:0x78c7cd4a
  41089d:	out    0xdc,eax
  41089f:	jns    0x41087a
  4108a1:	add    BYTE PTR ds:0xf22d2c02,0xbe
  4108a8:	sub    BYTE PTR [edx+0x381cbf27],al
  4108ae:	xchg   ebx,eax
  4108af:	jecxz  0x4108a8
  4108b1:	xchg   edi,eax
  4108b2:	adc    BYTE PTR [ebp+0x7a],cl
  4108b5:	push   ebp
  4108b6:	pop    edi
  4108b7:	xchg   BYTE PTR [eax+0x71e4c5b4],cl
  4108bd:	add    ch,ch
  4108bf:	in     eax,0x32
  4108c1:	sub    al,0xe3
  4108c3:	sub    eax,0xbb4953ae
  4108c8:	push   ebx
  4108c9:	sti    
  4108ca:	in     al,dx
  4108cb:	adc    eax,0x59706c08
  4108d0:	cwde   
  4108d1:	add    BYTE PTR [esi+0x21],dl
  4108d4:	push   esi
  4108d5:	cmp    eax,0x5d77421b
  4108da:	add    al,0x3f
  4108dc:	nop
  4108dd:	stos   BYTE PTR es:[edi],al
  4108de:	sub    al,0xbd
  4108e0:	mov    ds:0x466ac9b9,al
  4108e5:	dec    edx
  4108e6:	mov    DWORD PTR [esi-0x55380dd4],ebx
  4108ec:	out    dx,eax
  4108ed:	adc    BYTE PTR [ebp-0x3e],bl
  4108f0:	pop    esp
  4108f1:	jmp    0x6326:0xf3bc0ab0
  4108f8:	xchg   ecx,eax
  4108f9:	gs and cl,al
  4108fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108fd:	jp     0x41093b
  4108ff:	outs   dx,BYTE PTR ds:[esi]
  410900:	out    dx,al
  410901:	xor    bl,cl
  410903:	or     esp,DWORD PTR cs:[edi-0x4cf68a73]
  41090a:	out    dx,eax
  41090b:	sub    DWORD PTR [esi-0x2f782f1f],ecx
  410911:	mov    WORD PTR [esi+eax*2],es
  410914:	loopne 0x41090c
  410916:	dec    esi
  410917:	add    DWORD PTR [esi-0x1e9b64b],ecx
  41091d:	loope  0x4108de
  41091f:	pop    ss
  410920:	ja     0x4108d4
  410922:	popa   
  410923:	push   eax
  410924:	int    0x54
  410926:	lock mov edx,0xce1ddbb2
  41092c:	out    dx,al
  41092d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41092e:	xchg   ebp,edi
  410930:	xor    BYTE PTR [ebp-0x1],cl
  410933:	sbb    cl,ah
  410935:	ret    
  410936:	sbb    BYTE PTR [edi-0x54],ah
  410939:	(bad)  
  41093a:	std    
  41093b:	pop    ebx
  41093c:	xlat   BYTE PTR ds:[ebx]
  41093d:	cmp    edx,ecx
  41093f:	gs pushf 
  410941:	scas   eax,DWORD PTR es:[edi]
  410942:	and    ebx,edx
  410944:	mov    al,ds:0xb67f0d14
  410949:	xor    eax,0xb31b8cbe
  41094e:	jnp    0x4108e8
  410950:	xchg   esi,eax
  410951:	cmp    al,BYTE PTR [ecx+ebx*1+0x76]
  410955:	addr16 xchg ecx,eax
  410957:	pop    ss
  410958:	ror    BYTE PTR [edi],0x4a
  41095b:	outs   dx,BYTE PTR ds:[esi]
  41095c:	retf   0x1ce3
  41095f:	cmp    eax,0x86e4333d
  410964:	inc    ecx
  410965:	dec    edx
  410966:	add    eax,0xd8012b3a
  41096b:	adc    eax,0x68f0549b
  410970:	ds pop edx
  410972:	sub    BYTE PTR [ebx+0x44],al
  410975:	sub    al,0x90
  410977:	fstp   QWORD PTR [eax-0x5c]
  41097a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097b:	idiv   BYTE PTR [esi-0x1b]
  41097e:	aaa    
  41097f:	call   0x3dd5:0xc683dc89
  410986:	or     DWORD PTR [edi],0xffffffcd
  410989:	adc    ecx,DWORD PTR [eax]
  41098b:	pop    esp
  41098c:	cmp    eax,0x3e631247
  410991:	cmc    
  410992:	dec    eax
  410993:	add    DWORD PTR [eax],0x34
  410996:	jbe    0x4109ba
  410998:	idiv   bl
  41099a:	mov    cl,0xa
  41099c:	lds    edx,FWORD PTR [eax-0x7984b35]
  4109a2:	les    esp,FWORD PTR [ebx]
  4109a4:	jmp    0x60b1db02
  4109a9:	cwde   
  4109aa:	and    ecx,DWORD PTR [esi-0x1e602ab7]
  4109b0:	and    al,BYTE PTR [esi]
  4109b2:	stc    
  4109b3:	sbb    eax,0x72188861
  4109b8:	sub    dl,BYTE PTR [eax]
  4109ba:	sub    BYTE PTR [edx-0x4a2edec0],dl
  4109c0:	sbb    DWORD PTR [ebx-0xe],esi
  4109c3:	(bad)
  4109c7:	cwde   
  4109c8:	and    ah,BYTE PTR [ebx]
  4109ca:	add    eax,DWORD PTR [ecx+edi*2]
  4109cd:	jg     0x410996
  4109cf:	push   edi
  4109d0:	jns    0x410984
  4109d2:	leave  
  4109d3:	iret   
  4109d4:	lock add eax,0x3b6658c0
  4109da:	retf   0x850f
  4109dd:	dec    ebp
  4109de:	fdiv   st(7),st
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x7d389d61],0x91
  410fc4:	jmp    0x5f0a:0x7a7aae2e
  410fcb:	jp     0x411047
  410fcd:	stos   BYTE PTR es:[edi],al
  410fce:	ror    esi,0x9c
  410fd1:	mov    ds:0xb16b6367,al
  410fd6:	fisubr WORD PTR [edx]
  410fd8:	imul   eax,esp,0xd9971643
  410fde:	cmp    eax,0x3af0179b
  410fe3:	add    BYTE PTR ds:0x70dabe72,bh
  410fe9:	push   cs
  410fea:	inc    edi
  410feb:	dec    DWORD PTR [ecx*1-0x37ac1d5b]
  410ff2:	or     al,0x3a
  410ff4:	mov    gs,WORD PTR [ecx]
  410ff6:	into   
  410ff7:	mul    DWORD PTR [ebx]
  410ff9:	and    ah,dl
  410ffb:	aam    0x86
  410ffd:	stos   DWORD PTR es:[edi],eax
  410ffe:	bound  ebp,QWORD PTR [ecx+0x78]
  411001:	and    dl,BYTE PTR [esi]
  411003:	repz push eax
  411005:	clc    
  411006:	jns    0x410ff1
  411008:	add    bh,BYTE PTR [eax+0xf]
  41100b:	dec    ebx
  41100c:	xchg   edi,eax
  41100d:	push   edi
  41100e:	retf   0x7a33
  411011:	iret   
  411012:	push   edx
  411013:	jae    0x411026
  411015:	xchg   ecx,eax
  411016:	or     eax,0x750c0701
  41101b:	inc    esp
  41101c:	(bad)  
  41101d:	xchg   edi,eax
  41101e:	stos   DWORD PTR es:[edi],eax
  41101f:	jmp    0x41106b
  411021:	jmp    0x59a6c6b9
  411026:	mov    bp,0xc603
  41102a:	push   ecx
  41102b:	dec    esp
  41102c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41102d:	out    0xda,eax
  41102f:	sbb    dh,BYTE PTR [edi-0x4b]
  411032:	sub    DWORD PTR [ecx],edx
  411034:	sar    DWORD PTR [eax-0x4f],0x65
  411038:	popf   
  411039:	je     0x410fbe
  41103b:	aaa    
  41103c:	ds retf 0xf854
  411040:	and    eax,0x9e2b8135
  411045:	pop    ebp
  411046:	loopne 0x411062
  411048:	and    ebp,0x23cc3a82
  41104e:	xor    BYTE PTR [ebx],0xbc
  411051:	or     eax,0x4d362f3c
  411056:	push   esi
  411057:	dec    ebp
  411058:	test   al,0xf
  41105a:	fild   QWORD PTR [edi+0x2bfc59fb]
  411060:	sub    DWORD PTR [edi+0x41],edi
  411063:	outs   dx,DWORD PTR ds:[esi]
  411064:	sub    bh,BYTE PTR [ebx]
  411066:	push   ebp
  411067:	loopne 0x4110ae
  411069:	shr    DWORD PTR [ecx+0x6796b82a],1
  41106f:	adc    bl,BYTE PTR [esi+0x33334077]
  411075:	enter  0x392a,0xb7
  411079:	dec    esp
  41107a:	outs   dx,BYTE PTR ds:[esi]
  41107b:	jno    0x4110f0
  41107d:	pop    es
  41107e:	shl    BYTE PTR [ecx+eiz*1+0x6a235fa6],0xe1
  411086:	add    eax,0x464b48dd
  41108b:	(bad)  
  41108c:	call   0xf723cdf
  411091:	or     DWORD PTR [ebx+0x79cb8b86],ebp
  411097:	in     al,0xd7
  411099:	test   al,0xa0
  41109b:	inc    edx
  41109c:	xlat   BYTE PTR ds:[ebx]
  41109d:	push   eax
  41109e:	push   ds
  41109f:	out    dx,al
  4110a0:	fninit 
  4110a2:	cld    
  4110a3:	test   dh,cl
  4110a5:	icebp  
  4110a6:	mul    dh
  4110a8:	jae    0x4110f0
  4110aa:	mov    esp,0x96a74049
  4110af:	xor    DWORD PTR [ecx+0x5f],esi
  4110b2:	lods   eax,DWORD PTR ds:[esi]
  4110b3:	mov    ds:0xc499da3f,eax
  4110b8:	push   ss
  4110b9:	xchg   BYTE PTR [eax+0x78],bh
  4110bc:	ss jbe 0x41103f
  4110bf:	stos   DWORD PTR es:[edi],eax
  4110c0:	icebp  
  4110c1:	aad    0x6a
  4110c3:	sbb    bl,BYTE PTR [edx]
  4110c5:	dec    eax
  4110c6:	xlat   BYTE PTR ds:[ebx]
  4110c7:	mov    ?,WORD PTR [bp+di+0x3]
  4110cb:	mov    dl,0xdd
  4110cd:	push   eax
  4110ce:	pop    edx
  4110cf:	outs   dx,DWORD PTR ds:[esi]
  4110d0:	mov    ebx,0x5303b731
  4110d5:	sub    BYTE PTR [esi+0x5a],dh
  4110d8:	pop    eax
  4110d9:	fcom   DWORD PTR [edx+0x7cd4e6cf]
  4110df:	inc    edx
  4110e0:	add    al,0xb3
  4110e2:	mov    fs,WORD PTR [ebx]
  4110e4:	ror    BYTE PTR [edi],1
  4110e6:	les    ebx,FWORD PTR [ebp+eiz*1-0x6f]
  4110ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110eb:	outs   dx,BYTE PTR ds:[esi]
  4110ec:	push   edi
  4110ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ee:	push   0xffffffa4
  4110f0:	lods   eax,DWORD PTR ds:[esi]
  4110f1:	adc    eax,0x6ea3807e
  4110f6:	sbb    esi,ebx
  4110f8:	fild   DWORD PTR [ecx+0x46]
  4110fb:	(bad)  
  4110fc:	xchg   edi,eax
  4110fd:	popa   
  4110fe:	cdq    
  4110ff:	addr16 push ds
  411101:	pop    eax
  411102:	push   esp
  411103:	repz xor al,0x8a
  411106:	call   0xde324cd5
  41110b:	lods   al,BYTE PTR ds:[esi]
  41110c:	adc    BYTE PTR [ebp+0x4b],dh
  41110f:	mov    dl,BYTE PTR [ebx+0x2b]
  411112:	xor    eax,0x6775f29d
  411117:	adc    al,0x3f
  411119:	add    DWORD PTR [ecx+ecx*4],esp
  41111c:	popa   
  41111d:	pop    ebx
  41111e:	sub    ah,ch
  411120:	sbb    edi,DWORD PTR [edx]
  411122:	mov    edx,0xce57fda0
  411127:	sbb    edi,esi
  411129:	xchg   DWORD PTR [ebx-0x23a2adeb],esi
  41112f:	ins    DWORD PTR es:[edi],dx
  411130:	xor    DWORD PTR ds:0xf12c71f3,edi
  411136:	ror    bl,0xe9
  411139:	mov    al,BYTE PTR [ebp-0x1121391e]
  41113f:	outs   dx,BYTE PTR ds:[esi]
  411140:	popa   
  411141:	adc    bh,ch
  411143:	bound  edx,QWORD PTR [esi]
  411145:	test   BYTE PTR [ebx+edx*1+0x3],cl
  411149:	mov    ebp,0xc151bc1d
  41114e:	push   ss
  41114f:	add    BYTE PTR [edx-0x71d1955e],ch
  411155:	fist   WORD PTR gs:[edi+0x1c38c15c]
  41115c:	cmp    al,0x48
  41115e:	cmc    
  41115f:	mov    dl,0x29
  411161:	xor    eax,0xb5f9bc6a
  411166:	imul   edi,DWORD PTR [ecx],0xd0e085fa
  41116c:	cwde   
  41116d:	adc    eax,0x890909bc
  411172:	sub    ah,BYTE PTR [eax+eiz*8-0x41]
  411176:	cli    
  411177:	stos   BYTE PTR es:[edi],al
  411178:	ins    BYTE PTR es:[edi],dx
  411179:	into   
  41117a:	ror    DWORD PTR [ecx-0x4bd75c8a],1
  411180:	into   
  411181:	jg     0x411145
  411183:	cmp    DWORD PTR [ecx+edx*8-0x18033d83],eax
  41118a:	mov    esp,0x7b57e9f8
  41118f:	lds    ebp,FWORD PTR [esi-0x58]
  411192:	retf   
  411193:	push   edi
  411194:	pop    edi
  411195:	dec    ebx
  411196:	sub    al,BYTE PTR [esi+eiz*8-0x6c]
  41119a:	pop    ds
  41119b:	pop    ecx
  41119c:	xchg   ebp,eax
  41119d:	or     eax,0x48fd3da1
  4111a2:	mov    ecx,0xa71dc29c
  4111a7:	pusha  
  4111a8:	mov    DWORD PTR [ebp-0x6535f0bd],ecx
  4111ae:	in     eax,dx
  4111af:	sahf   
  4111b0:	ret    0xd98f
  4111b3:	pop    ss
  4111b4:	(bad)  ds:0x18f3a2ec
  4111ba:	pop    eax
  4111bb:	mov    al,ds:0xc6290e81
  4111c0:	or     eax,0xfe2a0c5e
  4111c5:	pop    es
  4111c6:	cdq    
  4111c7:	inc    ecx
  4111c8:	dec    esp
  4111c9:	xchg   esp,eax
  4111ca:	inc    edi
  4111cb:	in     al,dx
  4111cc:	xor    edi,DWORD PTR [ebx]
  4111ce:	sbb    al,0x3e
  4111d0:	xchg   ecx,eax
  4111d1:	pop    es
  4111d2:	(bad)  
  4111d3:	push   ds
  4111d4:	cdq    
  4111d5:	loop   0x411251
  4111d7:	leave  
  4111d8:	in     al,0x28
  4111da:	in     al,dx
  4111db:	sahf   
  4111dc:	cmp    BYTE PTR [edi-0x5aa48ed1],al
  4111e2:	cld    
  4111e3:	push   ebp
  4111e4:	and    DWORD PTR [esi-0x63d1da05],ebp
  4111ea:	mov    ah,0x1a
  4111ec:	ss dec ecx
  4111ee:	xchg   edi,eax
  4111ef:	popa   
  4111f0:	fdivr  st(0),st
  4111f2:	cmp    BYTE PTR [ebx-0x40],bl
  4111f5:	(bad)  
  4111f7:	in     al,dx
  4111f8:	xchg   ah,al
  4111fa:	or     BYTE PTR [ecx+0x5],al
  4111fd:	sbb    edx,edx
  4111ff:	inc    edi
  411200:	mov    edi,0x7cb90775
  411205:	lds    edx,FWORD PTR [edx+0x25]
  411208:	push   edx
  411209:	in     eax,dx
  41120a:	jne    0x411243
  41120c:	cmp    al,0x17
  41120e:	dec    edi
  41120f:	daa    
  411210:	mov    dl,0xa8
  411212:	mov    al,ds:0xdda7853c
  411217:	enter  0xaaeb,0x7f
  41121b:	mov    ds:0x56024795,al
  411220:	imul   ebx,DWORD PTR [ebx],0x13
  411223:	dec    ecx
  411224:	loopne 0x41127d
  411226:	xchg   edi,eax
  411227:	push   ds
  411228:	arpl   WORD PTR [edi+0xc158538],bp
  41122e:	xchg   edi,eax
  41122f:	jp     0x4111d5
  411231:	mov    BYTE PTR [edi],0x60
  411234:	inc    ebx
  411235:	jg     0x411269
  411237:	xor    al,BYTE PTR [edi]
  411239:	inc    edx
  41123a:	jl     0x41121f
  41123c:	mov    edi,0x425f0a35
  411241:	jae    0x411264
  411243:	cmp    ebp,DWORD PTR [ebp+0x1399ad30]
  411249:	mov    ecx,0xafafeff
  41124e:	jae    0x41129d
  411250:	out    0x41,al
  411252:	jbe    0x411209
  411254:	fnstcw WORD PTR [ecx]
  411256:	(bad)  
  411257:	jle    0x41124b
  411259:	xor    dh,BYTE PTR [eax+0x5]
  41125c:	push   es
  41125d:	mov    esp,0xb9c7d3b7
  411262:	mov    eax,0xfbdf6aeb
  411267:	jbe    0x41120f
  411269:	fldcw  WORD PTR [edx+0x165df440]
  41126f:	stos   DWORD PTR es:[edi],eax
  411270:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411272:	rol    BYTE PTR [ecx],cl
  411274:	(bad)  
  411275:	xor    dh,BYTE PTR [esi-0x11005cd2]
  41127b:	xchg   BYTE PTR [esi],cl
  41127d:	sub    dh,cl
  41127f:	ret    
  411280:	xchg   esi,eax
  411281:	push   esi
  411282:	push   eax
  411283:	fisttp DWORD PTR [edx-0x69]
  411286:	leave  
  411287:	nop
  411288:	mov    ds:0xf864b3fd,al
  41128d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128e:	loopne 0x41122f
  411290:	stc    
  411291:	xchg   ebp,eax
  411292:	adc    al,0xf1
  411294:	mov    eax,0x55ca68f2
  411299:	or     al,0x85
  41129b:	(bad)  
  41129c:	mov    ebx,0x717b0222
  4112a1:	mov    al,ds:0x8d45af18
  4112a6:	pushf  
  4112a7:	in     al,0x9a
  4112a9:	das    
  4112aa:	sbb    eax,0xd331b599
  4112af:	or     eax,0x4be46ef7
  4112b4:	xchg   esi,eax
  4112b5:	adc    ch,BYTE PTR [ecx-0x3f]
  4112b8:	popf   
  4112b9:	adc    ah,BYTE PTR [ebp+0x2e]
  4112bc:	aaa    
  4112bd:	xchg   DWORD PTR [edx+0x2589cb68],esp
  4112c3:	daa    
  4112c4:	enter  0x6688,0x3
  4112c8:	cld    
  4112c9:	punpcklwd mm3,DWORD PTR [eax+0x52ee0d53]
  4112d0:	add    BYTE PTR fs:[ebx+0x7aa8c65e],dh
  4112d7:	or     DWORD PTR [ebp-0x12],esi
  4112da:	not    ch
  4112dc:	and    eax,DWORD PTR [esi]
  4112de:	and    ah,BYTE PTR [edx*1+0x5a474eb1]
  4112e5:	mov    eax,0x28a5f000
  4112ea:	fsubr  QWORD PTR [ebp+ecx*2-0x44d2bc97]
  4112f1:	mov    al,0x62
  4112f3:	sub    al,0x5c
  4112f5:	push   ss
  4112f6:	jne    0x411377
  4112f8:	imul   esp,DWORD PTR [ecx],0x4a
  4112fb:	adc    DWORD PTR [eax+0x8],ebp
  4112fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ff:	mov    dl,0xac
  411301:	test   BYTE PTR [edi*2+0x1fa6d8d1],bl
  411308:	inc    ebp
  411309:	scas   eax,DWORD PTR es:[edi]
  41130a:	shr    cl,1
  41130c:	lods   al,BYTE PTR ds:[esi]
  41130d:	sub    ebp,edi
  41130f:	sar    edi,cl
  411311:	test   BYTE PTR [eax],0x34
  411314:	cdq    
  411315:	jne    0x411339
  411317:	sub    al,0x76
  411319:	cmp    al,dh
  41131b:	pushf  
  41131c:	in     eax,0x5c
  41131e:	adc    edx,DWORD PTR [eax]
  411320:	adc    BYTE PTR [ebx],0xf9
  411323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411324:	outs   dx,BYTE PTR ds:[esi]
  411325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411326:	stc    
  411327:	push   ss
  411328:	sahf   
  411329:	sbb    BYTE PTR [ecx-0x23],0xb9
  41132d:	mov    dh,0x2d
  41132f:	mov    BYTE PTR [ebp-0x1ae74974],al
  411335:	js     0x41135a
  411337:	mov    al,0x19
  411339:	cld    
  41133a:	fisttp QWORD PTR [eax]
  41133c:	addr16 shr bl,1
  41133f:	les    edi,FWORD PTR [edi]
  411341:	mov    edi,0x2c87182d
  411346:	bnd jge 0x411397
  411349:	pushf  
  41134a:	dec    edi
  41134b:	cmp    edi,DWORD PTR [edx-0x19cdb641]
  411351:	sahf   
  411352:	mov    al,0xfb
  411354:	aad    0x14
  411356:	and    edi,DWORD PTR [ebp*1-0x4c209aef]
  41135d:	mov    eax,0x2a2ebe53
  411362:	push   ebx
  411363:	cmp    eax,0x7df71d5c
  411368:	xchg   DWORD PTR [eax],esi
  41136a:	mov    bl,0x6f
  41136c:	adc    edi,ecx
  41136e:	aam    0x88
  411370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411371:	inc    ebp
  411372:	fadd   DWORD PTR [edx-0x76]
  411375:	stos   DWORD PTR es:[edi],eax
  411376:	cmp    DWORD PTR [eax],edx
  411378:	xor    al,0x86
  41137a:	mov    edx,0x5b303f15
  41137f:	mov    ecx,0xa3bd3441
  411384:	sbb    eax,0x527cfaf5
  411389:	xor    al,0xc1
  41138b:	and    bl,BYTE PTR [ebx+edi*8-0x1980b17b]
  411392:	mov    dl,0x4a
  411394:	adc    dl,BYTE PTR [ebx+0x39]
  411397:	enter  0x76ef,0x26
  41139b:	mov    ch,0x54
  41139d:	jecxz  0x411378
  41139f:	adc    esp,esp
  4113a1:	cli    
  4113a2:	shl    dh,cl
  4113a4:	imul   edx,DWORD PTR [eax],0x59
  4113a7:	push   esi
  4113a8:	sbb    ebp,DWORD PTR [ecx+0x50c40db3]
  4113ae:	imul   ebp,DWORD PTR [esi-0x7e7c3ec1],0x4035a928
  4113b8:	jne    0x41142d
  4113ba:	push   edx
  4113bb:	cmp    eax,0x2553a0bd
  4113c0:	push   es
  4113c1:	xchg   ecx,eax
  4113c2:	sbb    eax,0xd026ea6d
  4113c7:	mov    ah,0x88
  4113c9:	das    
  4113ca:	stc    
  4113cb:	mov    ebp,DWORD PTR [edx+0x0]
  4113ce:	sti    
  4113cf:	mov    dh,0x1c
  4113d1:	jbe    0x411418
  4113d3:	aaa    
  4113d4:	out    0xbd,eax
  4113d6:	pop    ebp
  4113d7:	(bad)  
  4113d8:	mov    WORD PTR [edx+ecx*2],ss
  4113db:	jae    0x4113a1
  4113dd:	mov    ds:0x17abb3,eax
  4113e2:	or     BYTE PTR [ecx],dh
  4113e4:	cmc    
  4113e5:	int    0xb9
  4113e7:	outs   dx,DWORD PTR ds:[esi]
  4113e8:	cmp    eax,0xbbc21e97
  4113ed:	xchg   esi,eax
  4113ee:	adc    ebp,DWORD PTR [esi-0x52]
  4113f1:	pop    ebx
  4113f2:	out    dx,al
  4113f3:	pushf  
  4113f4:	scas   al,BYTE PTR es:[edi]
  4113f5:	test   DWORD PTR [esi],edx
  4113f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f8:	xor    edx,eax
  4113fa:	xor    al,0xb8
  4113fc:	sub    eax,DWORD PTR [ecx-0x579bc2e9]
  411402:	xlat   BYTE PTR ds:[ebx]
  411403:	outs   dx,DWORD PTR ds:[esi]
  411404:	jg     0x4113e9
  411406:	xor    esp,edi
  411408:	xor    cl,dh
  41140a:	imul   edi,DWORD PTR [edx-0x6ee2d771],0x17
  411411:	adc    ebp,DWORD PTR [edi+eiz*1-0x49]
  411415:	cmp    bh,al
  411417:	mov    WORD PTR [ebp-0x5043a435],cs
  41141d:	mov    esp,0xdb035262
  411422:	into   
  411423:	dec    ebx
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    ecx,0x5c5279b2
  41142a:	mov    edi,0x26606451
  41142f:	mov    al,0xac
  411431:	push   ds
  411432:	mov    dl,0xf6
  411434:	or     dl,dl
  411436:	cli    
  411437:	pop    ss
  411438:	adc    BYTE PTR [edi-0x6b159e49],dh
  41143e:	test   eax,0x96e87305
  411443:	jb     0x4114af
  411445:	xchg   esi,eax
  411446:	repnz push esp
  411448:	std    
  411449:	push   0xffffff9c
  41144b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144c:	xchg   ebp,eax
  41144d:	loop   0x411490
  41144f:	popa   
  411450:	f2xm1  
  411452:	xchg   edi,eax
  411453:	mov    DWORD PTR [ecx-0x71223b89],edi
  411459:	xchg   BYTE PTR [edx-0x20],al
  41145c:	jge    0x411401
  41145e:	push   esp
  41145f:	adc    DWORD PTR [esi-0x737093e0],ecx
  411465:	xor    BYTE PTR [edx],dl
  411467:	pop    ss
  411468:	sahf   
  411469:	mov    BYTE PTR [edi],bh
  41146b:	(bad)  
  41146c:	shl    BYTE PTR [ebx+ecx*1],1
  41146f:	(bad)  
  411470:	cli    
  411471:	add    al,ch
  411473:	push   esp
  411474:	sbb    al,0xe3
  411476:	stc    
  411477:	mov    esp,0x87935292
  41147c:	mov    ch,0x42
  41147e:	push   ecx
  41147f:	cmp    DWORD PTR [esi],ebp
  411481:	(bad)  [edi-0x50]
  411484:	jmp    0xdd12:0x72f2c701
  41148b:	mov    al,ds:0x266e9c72
  411490:	xchg   esi,eax
  411491:	xor    al,BYTE PTR [ebp-0x5a]
  411494:	adc    DWORD PTR [ecx+0x70],ebp
  411497:	rcl    BYTE PTR [ebp-0x6a22766a],0x41
  41149e:	mov    esi,DWORD PTR [ebx-0xd88fa91]
  4114a4:	(bad)  
  4114a5:	ret    0x6964
  4114a8:	cld    
  4114a9:	sbb    ebx,DWORD PTR [esi+ecx*8+0x392bc550]
  4114b0:	cld    
  4114b1:	js     0x411441
  4114b3:	ss lock push es
  4114b6:	test   eax,0x41046985
  4114bb:	push   eax
  4114bc:	loope  0x41145b
  4114be:	rcr    DWORD PTR [esi-0xd],1
  4114c1:	neg    DWORD PTR [eax+0x4867739b]
  4114c7:	cwde   
  4114c8:	mov    BYTE PTR [ebp+0x10],dl
  4114cb:	ss cmp edi,esp
  4114ce:	fwait
  4114cf:	mov    es,ebx
  4114d1:	lods   al,BYTE PTR ds:[esi]
  4114d2:	popa   
  4114d3:	mov    cl,0x28
  4114d5:	jno    0x411531
  4114d7:	les    esp,FWORD PTR [edx-0x17]
  4114da:	ins    BYTE PTR es:[edi],dx
  4114db:	xor    cl,BYTE PTR [ebx-0x23]
  4114de:	push   ecx
  4114df:	cli    
  4114e0:	fimul  DWORD PTR [esi+ebx*8-0x7a]
  4114e4:	in     al,dx
  4114e5:	xchg   cl,bl
  4114e7:	in     al,0xdc
  4114e9:	sbb    BYTE PTR [ebx-0x5b2b3b59],ah
  4114ef:	cmp    cl,BYTE PTR [edi+0x2a]
  4114f2:	and    al,0x2e
  4114f4:	push   ds
  4114f5:	xchg   ebp,eax
  4114f7:	sysexit 
  4114f9:	xchg   ebx,eax
  4114fa:	sbb    bl,cl
  4114fc:	cmp    edi,DWORD PTR [eax]
  4114fe:	ret    
  4114ff:	push   0x3223ff25
  411504:	sahf   
  411505:	xchg   ecx,eax
  411506:	add    al,0x9e
  411508:	inc    esp
  411509:	mov    edx,ebx
  41150b:	test   ebx,ebp
  41150d:	or     ah,BYTE PTR [edi+0x7c519d36]
  411513:	loope  0x4114d8
  411515:	mov    ds:0x54e4d6d4,eax
  41151a:	ins    BYTE PTR es:[edi],dx
  41151b:	push   edi
  41151c:	or     BYTE PTR ds:0x4060cff1,dl
  411522:	fcompp 
  411524:	mov    al,ds:0xbe57eea7
  411529:	sub    esp,DWORD PTR [eax-0x2b66a4f6]
  41152f:	shr    DWORD PTR [ebx+ebx*2+0x2bb1eaf9],cl
  411536:	and    ebp,DWORD PTR [eax]
  411538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411539:	inc    esp
  41153a:	fwait
  41153b:	sub    eax,0xc52f886c
  411540:	mov    edx,DWORD PTR [esi]
  411542:	jne    0x411577
  411544:	jbe    0x411514
  411546:	out    dx,eax
  411547:	mov    ah,BYTE PTR [edi]
  411549:	mov    edx,0xecdf7d82
  41154e:	mov    ecx,0x7084d058
  411553:	mov    ecx,0x9fe10d8d
  411558:	push   ds
  411559:	mul    BYTE PTR [eax-0x6a89988]
  41155f:	dec    edx
  411560:	shr    DWORD PTR [esi+esi*4+0x36204ef],1
  411567:	mov    BYTE PTR [ecx+0x5dda27cd],0x39
  41156e:	push   esi
  41156f:	xchg   edi,eax
  411570:	pop    ebx
  411571:	cld    
  411572:	or     edi,DWORD PTR [edi-0x2ef8ddfa]
  411578:	out    0xc0,al
  41157a:	sahf   
  41157b:	cmp    BYTE PTR [ebx],ch
  41157d:	dec    ebx
  41157e:	mov    edi,0x9388232b
  411583:	arpl   si,bx
  411585:	push   0x536310f7
  41158a:	lock push edx
  41158c:	hlt    
  41158d:	ins    DWORD PTR es:[edi],dx
  41158e:	and    bh,BYTE PTR [eax-0x1cc1a1ae]
  411594:	inc    esp
  411595:	mov    edi,0xd58d00e3
  41159a:	cmc    
  41159b:	xor    esp,DWORD PTR [ebp-0x7b323e71]
  4115a1:	pusha  
  4115a2:	repnz dec ebp
  4115a4:	rcr    ecx,0x50
  4115a7:	push   ebx
  4115a8:	fiadd  WORD PTR [edx]
  4115aa:	shl    BYTE PTR es:[edx-0x41afc30],1
  4115b1:	ror    DWORD PTR [edi],0x8b
  4115b4:	jge    0x4115f7
  4115b6:	dec    ecx
  4115b7:	sbb    ah,ch
  4115b9:	push   edx
  4115ba:	sub    dh,BYTE PTR [edx+edx*4-0x25]
  4115be:	add    ebp,esp
  4115c0:	loopne 0x411608
  4115c2:	lock ja 0x4115b0
  4115c5:	fiadd  WORD PTR [ecx+0x7d653f4]
  4115cb:	jo     0x41163e
  4115cd:	out    0x15,al
  4115cf:	mov    BYTE PTR [edx+0x4e],dh
  4115d2:	mov    fs,WORD PTR [edx]
  4115d4:	xchg   edi,eax
  4115d5:	fcomp  QWORD PTR [ebp-0x22]
  4115d8:	test   eax,0xcf3e4130
  4115dd:	and    cl,ch
  4115df:	cmp    BYTE PTR [eax],dl
  4115e1:	or     dl,BYTE PTR [eax-0xf0491b4]
  4115e7:	stos   DWORD PTR es:[edi],eax
  4115e8:	test   BYTE PTR [eax-0x28a00c5d],0xc7
  4115ef:	pop    ebx
  4115f0:	cs js  0x411638
  4115f3:	sbb    DWORD PTR [ebx],esp
  4115f5:	outs   dx,DWORD PTR ds:[esi]
  4115f6:	push   0xffffffd5
  4115f8:	mov    ebp,0xb0b43efd
  4115fd:	cmp    al,0x5d
  4115ff:	imul   esp,eax,0xffffffc2
  411602:	sti    
  411603:	loop   0x41159a
  411605:	ds int 0xe8
  411608:	jmp    DWORD PTR [ecx+0x4b2f2278]
  41160e:	popf   
  41160f:	xchg   BYTE PTR ds:0x173bb786,bl
  411615:	add    BYTE PTR [ecx-0x176917ff],bl
  41161b:	rcl    BYTE PTR [ecx-0x33],1
  41161e:	add    eax,0x73f4671
  411623:	(bad)  
  411624:	lods   eax,DWORD PTR ds:[esi]
  411625:	pushf  
  411626:	cmp    ch,cl
  411628:	or     al,0x89
  41162a:	sbb    al,0x3d
  41162c:	arpl   si,di
  41162e:	mov    al,ds:0x5181da4
  411633:	jmp    0x4116b1
  411635:	test   al,0xe9
  411637:	inc    ecx
  411638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411639:	cmp    DWORD PTR [edx],edx
  41163b:	aam    0x81
  41163d:	cdq    
  41163e:	xchg   esi,eax
  41163f:	and    ecx,DWORD PTR [edx+0x60ab4988]
  411645:	fnstenv [edx]
  411647:	imul   edx,esi,0x35
  41164a:	lds    edi,FWORD PTR [ecx-0x6c4485d9]
  411650:	mov    eax,ds:0x87b6ed2f
  411655:	(bad)
  411658:	out    dx,al
  411659:	test   al,0xbf
  41165b:	inc    edx
  41165c:	xchg   esi,eax
  41165d:	adc    ecx,ecx
  41165f:	ss mov bh,0xc1
  411662:	fidiv  DWORD PTR [ebp-0x63]
  411665:	jns    0x4116bc
  411667:	cmp    ebp,esi
  411669:	mov    bh,0x2b
  41166b:	mov    esp,0xdc55f8ac
  411670:	sub    al,0x3b
  411672:	xchg   ebp,eax
  411673:	fsubr  DWORD PTR [esi-0x334d5b8f]
  411679:	das    
  41167a:	sar    esi,1
  41167c:	or     eax,0x38d7d41
  411681:	setl   bl
  411684:	mov    eax,ds:0xbbdb8708
  411689:	repz (bad) 
  41168b:	in     eax,dx
  41168c:	push   eax
  41168d:	iret   
  41168e:	mov    edi,0x6435a4ca
  411693:	fidivr DWORD PTR [ebx+0x1a]
  411696:	sub    al,0xac
  411698:	into   
  411699:	dec    eax
  41169a:	and    dh,BYTE PTR [ebp-0x4e]
  41169d:	lods   al,BYTE PTR ds:[esi]
  41169e:	xchg   DWORD PTR [ebx-0x22],ecx
  4116a1:	mov    bh,bl
  4116a3:	xchg   BYTE PTR [eax+0x21],bh
  4116a6:	ds dec ebp
  4116a8:	mov    ebx,esp
  4116aa:	pusha  
  4116ab:	dec    edx
  4116ac:	ret    0x7cfa
  4116af:	xchg   ecx,eax
  4116b0:	dec    edx
  4116b1:	mov    ds:0x211f63c3,eax
  4116b6:	out    0xb6,eax
  4116b8:	add    edi,ecx
  4116ba:	jle    0x4116d4
  4116bc:	adc    al,0x13
  4116be:	add    eax,0x5504519b
  4116c3:	or     ch,bh
  4116c5:	out    0xe8,eax
  4116c7:	div    BYTE PTR ds:[edx+0x33]
  4116cb:	add    al,0x32
  4116cd:	sbb    BYTE PTR [ecx],dh
  4116cf:	push   esi
  4116d0:	sbb    eax,0x48cbb4c2
  4116d5:	loope  0x411695
  4116d7:	xchg   ebx,eax
  4116d8:	in     al,dx
  4116d9:	sbb    ecx,DWORD PTR [edx+0x25]
  4116dc:	dec    esp
  4116dd:	mov    dh,0xf2
  4116df:	sub    al,0x86
  4116e1:	cmp    DWORD PTR [esi-0x72d86f32],0x9f5d2102
  4116eb:	je     0x411748
  4116ed:	fcom   DWORD PTR [eax+0x7e]
  4116f0:	inc    edi
  4116f1:	xor    DWORD PTR [ebx],edx
  4116f3:	mov    ds:0x41eacf24,eax
  4116f8:	aas    
  4116f9:	sub    bl,0x7d
  4116fc:	loop   0x4116cc
  4116fe:	cmp    esi,eax
  411700:	addr16 cmc 
  411702:	out    dx,al
  411703:	xchg   DWORD PTR [edx+edx*4+0x11],ecx
  411707:	mov    al,ds:0x4b339e2c
  41170c:	jnp    0x41177e
  41170e:	inc    esp
  41170f:	repnz push esp
  411711:	ret    
  411712:	outs   dx,DWORD PTR ds:[esi]
  411713:	in     al,0x23
  411715:	xor    bl,bh
  411717:	mov    DWORD PTR [edx+0x40944ade],ebx
  41171d:	sar    DWORD PTR [ecx+ebp*1+0x75],1
  411721:	push   ecx
  411722:	hlt    
  411723:	jnp    0x4116d5
  411725:	adc    ah,BYTE PTR [esi+0x2f]
  411728:	sub    dh,ah
  41172a:	fsub   QWORD PTR [eax+0x56f894d2]
  411730:	add    BYTE PTR [eax],0xbc
  411733:	mov    ah,0xd0
  411735:	aam    0x44
  411737:	sbb    edi,esi
  411739:	scas   eax,DWORD PTR es:[edi]
  41173a:	mov    edi,DWORD PTR [edx+0x64]
  41173d:	in     al,0xba
  41173f:	test   DWORD PTR [ebp+0x2b],ebx
  411742:	out    dx,al
  411743:	in     al,0xd7
  411745:	lock add ah,ch
  411748:	dec    esp
  411749:	push   ds
  41174a:	stos   DWORD PTR es:[edi],eax
  41174b:	in     eax,dx
  41174c:	and    esp,DWORD PTR [ecx+0x5f]
  41174f:	pusha  
  411750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411751:	inc    edi
  411752:	or     BYTE PTR [ebp-0x33],cl
  411755:	cli    
  411756:	jmp    0xd499:0x4bafbd6
  41175d:	arpl   WORD PTR [esp+eax*2+0x41f11cd9],ax
  411764:	aam    0x91
  411766:	inc    edx
  411767:	mov    esp,0x2bc32bf9
  41176c:	das    
  41176d:	(bad)  
  41176e:	test   eax,0x7957ed97
  411773:	push   ss
  411774:	mov    al,ds:0x4debae05
  411779:	push   esi
  41177a:	dec    ecx
  41177b:	data16 jbe 0x411734
  41177e:	or     BYTE PTR [esi+0x6e350243],0x7b
  411785:	push   eax
  411786:	add    eax,0x4e1e72f4
  41178b:	imul   ebp,DWORD PTR [eax],0x5c366934
  411791:	das    
  411792:	ins    BYTE PTR es:[edi],dx
  411793:	sub    eax,0xe0c7b33a
  411798:	repnz imul ebx,DWORD PTR [edi+0x28],0x24665b44
  4117a0:	loopne 0x411797
  4117a2:	rcr    DWORD PTR [ebx+eax*8+0x676dacaa],1
  4117a9:	push   es
  4117aa:	lods   al,BYTE PTR ds:[esi]
  4117ab:	fbld   TBYTE PTR [ebp+0x77]
  4117ae:	ror    BYTE PTR [edi],0x79
  4117b1:	pop    edi
  4117b2:	push   esp
  4117b3:	or     ch,BYTE PTR [eax]
  4117b5:	call   0x23e8fd07
  4117ba:	cs (bad) 
  4117bc:	(bad)  [ecx-0x2da8e1cd]
  4117c2:	lods   eax,DWORD PTR ds:[esi]
  4117c3:	clc    
  4117c4:	sub    ah,BYTE PTR fs:[edx+0x3d402a2d]
  4117cb:	xor    al,0x75
  4117cd:	daa    
  4117ce:	pop    ebx
  4117cf:	ds cwde 
  4117d1:	xchg   edx,eax
  4117d2:	xor    ah,BYTE PTR [ebx]
  4117d4:	push   0xf02debc3
  4117d9:	dec    esp
  4117da:	cmp    DWORD PTR [eax-0x3da527a2],edx
  4117e0:	xor    eax,ecx
  4117e2:	mov    ch,0xc5
  4117e4:	ss in  al,0xd6
  4117e7:	aaa    
  4117e8:	push   esp
  4117e9:	fwait
  4117ea:	adc    BYTE PTR [eax],al
  4117ec:	add    eax,ebx
  4117ee:	pop    ds
  4117ef:	mov    eax,ds:0x787be698
  4117f4:	loop   0x4117d0
  4117f6:	pop    ds
  4117f7:	and    ebx,DWORD PTR [edx-0x10]
  4117fa:	sub    BYTE PTR [ebx+0x15],bh
  4117fd:	mov    BYTE PTR [edx-0x33a9c3e6],dl
  411803:	arpl   WORD PTR [ebx],cx
  411805:	sub    eax,0x48c6dcb0
  41180a:	sub    BYTE PTR [esp+ebp*1+0x5e],dh
  41180e:	scas   eax,DWORD PTR es:[edi]
  41180f:	(bad)  
  411810:	rol    BYTE PTR [esi+0x3aef1f02],1
  411816:	stc    
  411817:	sbb    BYTE PTR [edi],dh
  411819:	dec    ecx
  41181a:	ret    0x9ed9
  41181d:	jno    0x4117b4
  41181f:	push   ss
  411820:	inc    eax
  411821:	int3   
  411822:	cmp    ebx,DWORD PTR [esi+0x36e2d6b8]
  411828:	mov    ebp,0xa1335194
  41182d:	out    0xe7,eax
  41182f:	push   0x83a2ceb9
  411834:	fs adc cl,al
  411837:	(bad)  
  411838:	mov    al,ds:0x3b718a9e
  41183d:	mov    ebx,0x48d8794a
  411842:	mov    cl,0x5
  411844:	mov    ch,0x9e
  411846:	test   eax,0xf1e04dc3
  41184b:	pop    ecx
  41184c:	adc    BYTE PTR [ebx+eiz*1],al
  41184f:	enter  0x3769,0x31
  411853:	mov    ch,0x36
  411855:	cwde   
  411856:	jnp    0x411890
  411858:	jb     0x411801
  41185a:	dec    ebx
  41185b:	or     eax,0x19014b71
  411860:	jp     0x4118d7
  411862:	lahf   
  411863:	xchg   ebx,eax
  411864:	add    dl,BYTE PTR [edi]
  411866:	xchg   esp,eax
  411867:	or     eax,DWORD PTR [esi-0x7b9877a1]
  41186d:	ja     0x4117fa
  41186f:	and    DWORD PTR [esi-0x2843802e],0x18
  411876:	mov    eax,ds:0x344c36b4
  41187b:	mov    ds:0xfbf0ec73,eax
  411880:	(bad)  
  411881:	cld    
  411882:	jecxz  0x411894
  411884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411885:	and    BYTE PTR [edi+ecx*1],0x2e
  411889:	mov    ds:0x18153c3,eax
  41188e:	bound  ebx,QWORD PTR [ebp+0x61]
  411891:	scas   eax,DWORD PTR es:[edi]
  411892:	test   esp,esp
  411894:	cdq    
  411895:	pop    edx
  411896:	push   edi
  411897:	pop    edi
  411898:	cs cmp eax,0x43fd0cb6
  41189e:	adc    esp,edx
  4118a0:	xor    edx,DWORD PTR [ebx-0x69f093fd]
  4118a6:	(bad)  
  4118a8:	pop    edx
  4118a9:	or     bh,BYTE PTR [edx+0xfaf6213]
  4118af:	or     DWORD PTR [ecx+esi*1-0x1f36ee97],esp
  4118b6:	adc    bl,BYTE PTR [ebp+0x608ae03b]
  4118bc:	out    0xfe,eax
  4118be:	inc    ecx
  4118bf:	aam    0x4d
  4118c1:	ficomp WORD PTR [esi+esi*8]
  4118c4:	fiadd  WORD PTR [edx-0x4]
  4118c7:	push   ebx
  4118c8:	jge    0x41191c
  4118ca:	push   ebp
  4118cb:	adc    eax,0x581fcb9c
  4118d0:	inc    edx
  4118d1:	sub    BYTE PTR [esi+ebx*1+0x6618625f],ch
  4118d8:	test   eax,0x2b4efc33
  4118dd:	mov    dl,0x7f
  4118df:	idiv   DWORD PTR [ecx-0x10ef0de7]
  4118e5:	mov    ah,0x54
  4118e7:	cmp    eax,0x49afeb02
  4118ec:	enter  0x750a,0x49
  4118f0:	mov    esp,0xf7a4f741
  4118f5:	in     al,dx
  4118f6:	and    DWORD PTR [ebp+0x24b9bf85],0x15
  4118fd:	outs   dx,BYTE PTR ds:[esi]
  4118fe:	add    edx,DWORD PTR [edi]
  411900:	stos   DWORD PTR es:[edi],eax
  411901:	shl    ah,0x9c
  411904:	pop    eax
  411905:	(bad)  [eax+ecx*2-0x56]
  411909:	maxps  xmm4,XMMWORD PTR [ecx+0x20]
  41190d:	pushf  
  41190e:	xchg   edx,eax
  41190f:	stos   BYTE PTR es:[edi],al
  411910:	xchg   ebx,eax
  411911:	mov    esp,ss
  411913:	icebp  
  411914:	pop    es
  411915:	pop    esi
  411916:	outs   dx,BYTE PTR ds:[esi]
  411917:	push   eax
  411918:	cld    
  411919:	mov    ecx,0x8612ee96
  41191e:	rol    ah,cl
  411920:	es sub esi,0xffffff88
  411924:	in     eax,dx
  411925:	pop    esp
  411926:	xchg   ebx,eax
  411927:	in     eax,dx
  411928:	es xchg ebx,eax
  41192a:	pop    edi
  41192b:	je     0x411903
  41192d:	test   DWORD PTR [ebx+edi*2-0x4e036540],ebx
  411934:	out    0x9e,eax
  411936:	or     DWORD PTR [esi-0x72],edx
  411939:	push   edi
  41193a:	mov    bl,BYTE PTR [esi-0x7a]
  41193d:	rol    edx,0x5f
  411940:	cli    
  411941:	dec    ebp
  411942:	or     al,0x45
  411944:	add    eax,0x81f8b66a
  411949:	mov    DWORD PTR [edi+0x4f],edx
  41194c:	mov    al,ds:0x5dd14438
  411951:	jl     0x4118f1
  411953:	in     al,dx
  411954:	mov    bh,0xdd
  411956:	repz pop ebx
  411958:	pop    eax
  411959:	ror    BYTE PTR [ecx+0x66],1
  41195c:	inc    edx
  41195d:	mov    dl,0xe1
  41195f:	dec    edx
  411960:	mov    al,ss:0x75058c1c
  411966:	sub    eax,0xd8dc0510
  41196b:	shr    DWORD PTR [ebx-0x3f7c1ae9],cl
  411971:	push   ds
  411972:	push   ss
  411973:	ret    0xb566
  411976:	push   eax
  411977:	push   eax
  411978:	add    BYTE PTR [ebp+0x41],ah
  41197b:	sub    BYTE PTR [edi],cl
  41197d:	jbe    0x4119dc
  41197f:	aas    
  411980:	pop    ds
  411981:	pop    edx
  411982:	(bad)  
  411983:	mov    esp,0x863f7006
  411988:	or     DWORD PTR [eax+0x48],ebx
  41198b:	adc    al,0xc2
  41198d:	sub    dh,BYTE PTR [ebx+edi*4+0x4b7246be]
  411994:	and    eax,0x53a74608
  411999:	xchg   DWORD PTR [eax-0xd5976d3],esi
  41199f:	and    al,0x45
  4119a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a2:	es aaa 
  4119a4:	dec    ebx
  4119a5:	dec    esi
  4119a6:	enter  0x8645,0xec
  4119aa:	sub    BYTE PTR [eax-0x56],bl
  4119ad:	cmp    al,0xd
  4119af:	fistp  DWORD PTR [ecx-0x171f7368]
  4119b5:	push   0x7e8acd1d
  4119ba:	jle    0x411a21
  4119bc:	dec    esp
  4119bd:	adc    edi,DWORD PTR [edx-0x2]
  4119c0:	xor    BYTE PTR [eax+0x61],dh
  4119c3:	(bad)  
  4119c4:	lock and eax,0x70eaa634
  4119ca:	sub    eax,0xef930ff9
  4119cf:	and    DWORD PTR [ebx],0x4f50ffa0
  4119d5:	popa   
  4119d6:	pop    ds
  4119d7:	ds inc eax
  4119d9:	loop   0x4119d2
  4119db:	clc    
  4119dc:	fdiv   DWORD PTR [ecx]
  4119de:	addr16 loope 0x41197d
  4119e1:	push   ebx
  4119e2:	push   edx
  4119e3:	mov    eax,0x658880bf
  4119e8:	sti    
  4119e9:	mov    ebp,0xd9f57494
  4119ee:	das    
  4119ef:	out    0x59,eax
  4119f1:	pop    ebp
  4119f2:	mov    esi,0xe338ea4d
  4119f7:	test   DWORD PTR [ecx],0x1ad56568
  4119fd:	nop
  4119fe:	sub    al,0x7c
  411a00:	bound  esp,QWORD PTR [eax-0x245430f9]
  411a06:	clc    
  411a07:	jle    0x411a35
  411a09:	out    0x9,al
  411a0b:	test   DWORD PTR [ecx],esp
  411a0d:	inc    ebx
  411a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a0f:	mov    ecx,0xd207cb09
  411a14:	popa   
  411a15:	pop    ebp
  411a16:	mov    eax,ds:0xa49f4266
  411a1b:	xchg   DWORD PTR [esi+0x6c],esp
  411a1e:	frstor [ebp-0x18]
  411a21:	sub    al,0x37
  411a23:	mov    eax,0x1c29bbd9
  411a28:	mov    ds:0xbb581230,eax
  411a2d:	sub    DWORD PTR ds:0x59635fa5,ecx
  411a33:	sbb    al,0x3a
  411a35:	adc    DWORD PTR [eax+0x73],ecx
  411a38:	mov    ebp,0x17975e6d
  411a3d:	test   DWORD PTR [edx+0x49abccd2],ebp
  411a43:	scas   eax,DWORD PTR es:[edi]
  411a44:	or     BYTE PTR [edi-0x6d],bh
  411a47:	push   eax
  411a48:	sub    BYTE PTR [edx+ebp*8],0x1c
  411a4c:	mov    ds:0x707b995,eax
  411a51:	icebp  
  411a52:	dec    edx
  411a53:	sbb    esp,edx
  411a55:	nop
  411a56:	sti    
  411a57:	push   es
  411a58:	pushf  
  411a59:	shl    BYTE PTR [edi],1
  411a5b:	lds    esi,FWORD PTR [ecx+ecx*1]
  411a5e:	push   eax
  411a5f:	cmp    eax,0x61dbb868
  411a64:	xchg   eax,esi
  411a66:	add    eax,0xa63e58f6
  411a6b:	sbb    DWORD PTR cs:[ebx],edi
  411a6e:	jecxz  0x411a0f
  411a70:	dec    edx
  411a71:	sub    bh,al
  411a73:	inc    edx
  411a74:	popf   
  411a75:	lods   eax,DWORD PTR ds:[esi]
  411a76:	hlt    
  411a77:	push   es
  411a78:	inc    esi
  411a79:	mov    bh,0x1d
  411a7b:	or     DWORD PTR [esi+ebp*1],edx
  411a7e:	cmp    ebp,DWORD PTR [ebx+0x5b]
  411a81:	dec    eax
  411a82:	jge    0x411a14
  411a84:	xchg   edx,eax
  411a85:	rcr    DWORD PTR [eax-0x24],cl
  411a88:	sbb    esp,edi
  411a8a:	dec    eax
  411a8b:	hlt    
  411a8c:	adc    esi,DWORD PTR [ebx+ebp*8]
  411a8f:	cs iret 
  411a91:	jle    0x411b09
  411a93:	jge    0x411a4c
  411a95:	lock imul esi,edi,0x50
  411a99:	in     eax,dx
  411a9a:	pop    ebx
  411a9b:	jecxz  0x411afa
  411a9d:	dec    ebx
  411a9e:	pusha  
  411a9f:	adc    eax,0xecf35ad0
  411aa4:	or     ah,BYTE PTR [ebx+0x311b450a]
  411aaa:	pop    ebx
  411aab:	pop    es
  411aac:	bound  edx,QWORD PTR [esi]
  411aae:	pop    edi
  411aaf:	push   esi
  411ab0:	(bad)  
  411ab1:	push   ebx
  411ab2:	xchg   edx,eax
  411ab3:	fbstp  TBYTE PTR [edi+0x78cd4086]
  411ab9:	pusha  
  411aba:	pop    ecx
  411abb:	call   0xff9fab13
  411ac0:	dec    esp
  411ac1:	ins    DWORD PTR es:[edi],dx
  411ac2:	inc    esp
  411ac3:	cmp    esp,ecx
  411ac5:	jl     0x411a99
  411ac7:	xor    DWORD PTR [ebx-0xa],ebp
  411aca:	push   cs
  411acb:	retf   0xeccb
  411ace:	test   eax,0x2cc3d947
  411ad3:	mov    dh,0x1b
  411ad5:	mov    edi,0x2a7e948a
  411ada:	sar    BYTE PTR [edi+0x29032bb1],1
  411ae0:	aas    
  411ae1:	lds    ebx,FWORD PTR [ebx+0x1]
  411ae4:	ins    DWORD PTR es:[edi],dx
  411ae5:	sub    ebx,DWORD PTR [edi-0x39]
  411ae8:	stos   BYTE PTR es:[edi],al
  411ae9:	sub    BYTE PTR [edx-0x5b8d1076],bh
  411aef:	jbe    0x411b05
  411af1:	ins    BYTE PTR es:[edi],dx
  411af2:	arpl   WORD PTR [edx+edi*8+0x5b],si
  411af6:	jmp    0xb96d:0x45b8fc57
  411afd:	inc    BYTE PTR [ebp+ecx*1-0x6afc909]
  411b04:	mov    ah,0x14
  411b06:	pop    eax
  411b07:	loop   0x411b13
  411b09:	xor    cl,BYTE PTR [esi-0x5205feaa]
  411b0f:	arpl   WORD PTR [esi+0x30eda93],sp
  411b15:	sub    al,0x36
  411b17:	xor    ah,BYTE PTR ss:[ecx-0x72]
  411b1b:	sar    dh,1
  411b1d:	adc    DWORD PTR [ecx-0x17],0xa410a71e
  411b24:	inc    ebx
  411b25:	lods   al,BYTE PTR ds:[esi]
  411b26:	call   0x8e89:0x97fa8ef2
  411b2d:	out    dx,eax
  411b2e:	hlt    
  411b2f:	jno    0x411ae4
  411b31:	inc    eax
  411b32:	push   cs
  411b33:	ja     0x411b4b
  411b35:	cs dec ebx
  411b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b38:	jmp    0x2069:0xa75773d
  411b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b40:	mov    ds:0x3e6fb8d9,al
  411b45:	adc    cl,BYTE PTR [edi-0xd6615b3]
  411b4b:	loop   0x411b2b
  411b4d:	mov    edi,0x65668162
  411b52:	enter  0xad6f,0x77
  411b56:	or     eax,DWORD PTR [edx]
  411b58:	int3   
  411b59:	pop    ebp
  411b5a:	mov    esi,0x6c09c25
  411b5f:	enter  0xe077,0xed
  411b63:	sbb    BYTE PTR [esi+0x12],0x4f
  411b67:	xchg   esi,eax
  411b68:	sub    DWORD PTR [edi+ebp*8-0x2c],ebp
  411b6c:	xor    al,0xed
  411b6e:	les    edx,FWORD PTR [ecx+ebp*1-0x16]
  411b72:	loope  0x411bed
  411b74:	adc    eax,0xbf683d99
  411b79:	mov    al,0x12
  411b7b:	rcr    DWORD PTR [edx+0x18],cl
  411b7e:	sbb    eax,0x813caff
  411b83:	stos   DWORD PTR es:[edi],eax
  411b84:	les    edx,FWORD PTR [edi]
  411b86:	gs or  eax,0x3c1c2195
  411b8c:	sbb    eax,DWORD PTR [ecx-0x27019df6]
  411b92:	and    ecx,edi
  411b94:	ret    0xb619
  411b97:	pusha  
  411b98:	push   edx
  411b99:	sub    BYTE PTR ds:0x368afc1,bl
  411b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba0:	xor    BYTE PTR [ecx-0x67],0xce
  411ba4:	mov    dh,0x2c
  411ba7:	mov    dl,0x22
  411ba9:	jne    0x411b92
  411bab:	xchg   ebx,eax
  411bac:	test   DWORD PTR [ecx+0xe829045],esp
  411bb2:	and    ch,BYTE PTR [ebx+0x2a0ad6d2]
  411bb8:	sbb    edi,eax
  411bba:	leave  
  411bbb:	dec    eax
  411bbc:	clc    
  411bbd:	rcl    DWORD PTR ds:0xeadecacb,0x66
  411bc4:	push   0x42e954f5
  411bc9:	mov    cl,BYTE PTR es:[ecx+edi*8-0x2b8dde6e]
  411bd1:	xchg   ebx,eax
  411bd2:	pusha  
  411bd3:	test   BYTE PTR [edx-0x57],ah
  411bd6:	fidiv  WORD PTR [ebx+0x59]
  411bd9:	mov    edi,0x11267485
  411bde:	loopne 0x411bdc
  411be0:	lods   al,BYTE PTR ds:[esi]
  411be1:	out    0xb6,al
  411be3:	ins    DWORD PTR es:[edi],dx
  411be4:	pop    ebx
  411be5:	mov    cl,0xd6
  411be7:	test   BYTE PTR [edi+0x5d],bh
  411bea:	fld    TBYTE PTR ds:0xa8cb13c5
  411bf0:	or     al,0x2
  411bf2:	xchg   ebp,eax
  411bf3:	loop   0x411c06
  411bf5:	mov    eax,ds:0x34f0f980
  411bfa:	cld    
  411bfb:	imul   edi,DWORD PTR [edi],0x12
  411bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bff:	aaa    
  411c00:	inc    ebx
  411c01:	xchg   esi,eax
  411c02:	jecxz  0x411c3a
  411c04:	je     0x411c7f
  411c06:	mov    dh,BYTE PTR [esi+0x732f9da8]
  411c0c:	ja     0x411bad
  411c0e:	outs   dx,BYTE PTR ds:[esi]
  411c0f:	stos   DWORD PTR es:[edi],eax
  411c10:	jecxz  0x411bb4
  411c12:	cmp    eax,0x27b1df84
  411c17:	repnz and BYTE PTR [eax],bh
  411c1a:	push   ecx
  411c1b:	push   cs
  411c1c:	mov    ds,WORD PTR [ebx+0x17eab5df]
  411c22:	cwde   
  411c23:	pop    edx
  411c24:	cmp    DWORD PTR [eax-0x4a],esi
  411c27:	fsubr  DWORD PTR [ebp+0x60471ec3]
  411c2d:	fcom   DWORD PTR [esi+0x77]
  411c30:	jb     0x411c63
  411c32:	mov    BYTE PTR [ebx],dl
  411c34:	lods   al,BYTE PTR ds:[esi]
  411c35:	mov    ds:0xc943c993,al
  411c3a:	ret    
  411c3b:	lock jge 0x411c55
  411c3e:	repz jb 0x411c9d
  411c41:	sbb    al,0x3a
  411c43:	or     DWORD PTR [ebp+0x40],esp
  411c46:	mov    bh,0xdc
  411c48:	data16 je 0x411cb0
  411c4b:	jecxz  0x411c51
  411c4d:	mov    esp,0x5becdbca
  411c52:	pop    ecx
  411c53:	repz xlat BYTE PTR ds:[ebx]
  411c55:	mov    ds:0xaa1a525e,eax
  411c5a:	jne    0x411c2f
  411c5c:	je     0x411cbc
  411c5e:	outs   dx,DWORD PTR ds:[esi]
  411c5f:	pop    edi
  411c60:	in     al,0xf8
  411c62:	add    eax,0x7e8aed8d
  411c67:	fst    QWORD PTR [ecx]
  411c69:	jmp    FWORD PTR [esi+eax*8]
  411c6c:	shl    BYTE PTR [edi+0x33],0x1b
  411c70:	add    eax,0x4a3895f5
  411c75:	repz sahf 
  411c77:	mov    fs,WORD PTR [edi]
  411c79:	pop    ebx
  411c7a:	popa   
  411c7b:	jae    0x411ca7
  411c7d:	inc    eax
  411c7e:	retf   
  411c7f:	out    dx,al
  411c80:	mov    ds:0x9fbfa3dc,al
  411c85:	int    0x5d
  411c87:	sbb    esi,DWORD PTR [esi]
  411c89:	cmp    dh,BYTE PTR [edi]
  411c8b:	pop    ebp
  411c8c:	sub    al,0x97
  411c8e:	add    DWORD PTR [ecx+0x20],esp
  411c91:	por    mm6,QWORD PTR [ebp+0x73]
  411c95:	or     esp,DWORD PTR [esp+ebx*2-0x18]
  411c99:	sub    al,0xf1
  411c9b:	loope  0x411ce1
  411c9d:	and    eax,0xa6377f6e
  411ca2:	xchg   ecx,eax
  411ca3:	add    cl,BYTE PTR [ecx]
  411ca5:	in     al,0x34
  411ca7:	mov    edi,0x9d24135
  411cac:	or     esp,DWORD PTR [edi]
  411cae:	cmp    DWORD PTR [edx+0x19672b88],ebp
  411cb4:	sbb    DWORD PTR [ebp+0x24be8eb3],edi
  411cba:	mov    edx,0x6b63789d
  411cbf:	push   eax
  411cc0:	mov    ch,0x8d
  411cc2:	enter  0x897f,0x84
  411cc6:	cld    
  411cc7:	loop   0x411cdf
  411cc9:	mov    eax,ds:0xb21361b9
  411cce:	xchg   BYTE PTR [ebx+eiz*2-0x666113b3],ah
  411cd5:	cmp    al,cl
  411cd7:	popa   
  411cd8:	cld    
  411cd9:	jle    0x411d40
  411cdb:	adc    BYTE PTR [esi],dl
  411cdd:	jecxz  0x411d48
  411cdf:	repz sbb dh,ah
  411ce2:	push   0xf3103001
  411ce7:	out    0xac,eax
  411ce9:	loop   0x411c84
  411ceb:	sar    BYTE PTR [ebx],cl
  411ced:	ins    DWORD PTR es:[edi],dx
  411cee:	test   eax,0xc7d450d5
  411cf3:	adc    eax,0x12328b9a
  411cf8:	lea    ebx,[esi+0xf]
  411cfb:	mov    cl,BYTE PTR [edi-0x39]
  411cfe:	xor    eax,0xcb630861
  411d03:	daa    
  411d04:	xchg   bl,dl
  411d06:	jb     0x411cdc
  411d08:	xchg   esi,eax
  411d09:	or     DWORD PTR [eax-0x65],esi
  411d0c:	xchg   esp,eax
  411d0d:	mov    dh,0xd7
  411d0f:	jae    0x411d09
  411d11:	fidivr WORD PTR [ebx-0x16]
  411d14:	inc    edi
  411d15:	or     al,0x3b
  411d17:	mov    al,0x70
  411d19:	sub    al,0x9f
  411d1b:	cmp    al,0x4c
  411d1d:	and    al,0xef
  411d1f:	cmp    al,0x95
  411d21:	or     al,0x3d
  411d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d24:	shl    DWORD PTR [esi-0xb],cl
  411d27:	inc    edx
  411d29:	shr    DWORD PTR [ebx-0x7d3d0334],1
  411d2f:	stos   BYTE PTR es:[edi],al
  411d30:	ret    
  411d31:	adc    BYTE PTR [eax],ah
  411d33:	or     edx,DWORD PTR [esi]
  411d35:	rcr    BYTE PTR ds:0x9a766a46,cl
  411d3b:	and    al,ch
  411d3d:	stos   DWORD PTR es:[edi],eax
  411d3e:	scas   eax,DWORD PTR es:[edi]
  411d3f:	jmp    0x38413666
  411d44:	es push ds
  411d46:	inc    ecx
  411d47:	scas   eax,DWORD PTR es:[edi]
  411d48:	inc    edi
  411d49:	jge    0x411d13
  411d4b:	cmp    dh,BYTE PTR ss:[ecx-0xd70e55a]
  411d52:	loopne 0x411cd9
  411d54:	pop    eax
  411d55:	cmp    eax,0x5ac8587b
  411d5a:	pop    eax
  411d5b:	bound  esp,QWORD PTR [ebx+0x2a7cb71a]
  411d61:	xchg   esi,eax
  411d62:	push   cs
  411d63:	mov    edi,0x1aed018d
  411d68:	mov    ah,0xe1
  411d6a:	(bad)  
  411d6b:	jecxz  0x411d52
  411d6d:	xchg   esp,eax
  411d6e:	xchg   ebx,edx
  411d70:	mov    eax,0x26eec688
  411d75:	mov    bh,0x75
  411d77:	jbe    0x411d02
  411d79:	shl    BYTE PTR [edi+0x70],1
  411d7c:	ret    0x438a
  411d7f:	cs cwde 
  411d81:	aaa    
  411d82:	(bad)  
  411d83:	cli    
  411d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d85:	mov    ds:0x4c19ae1d,al
  411d8a:	jmp    0x540a:0xf10175ad
  411d91:	cmp    al,0x37
  411d93:	pop    ebx
  411d94:	ja     0x411d5c
  411d96:	xchg   edx,eax
  411d97:	adc    eax,0x42cc81c7
  411d9c:	out    0xdc,eax
  411d9e:	sbb    cl,BYTE PTR [ecx-0x7048128b]
  411da4:	add    al,BYTE PTR [edx]
  411da6:	pop    ds
  411da7:	jg     0x411dfc
  411da9:	mov    eax,ds:0xe942b0d8
  411dae:	icebp  
  411daf:	inc    ebp
  411db0:	inc    edx
  411db1:	scas   al,BYTE PTR es:[edi]
  411db2:	sbb    ch,BYTE PTR [eax-0x18de2df6]
  411db8:	outs   dx,DWORD PTR ds:[esi]
  411db9:	and    ebp,DWORD PTR [edi+0x132de4a3]
  411dbf:	mov    al,BYTE PTR [ecx+0x9954925]
  411dc5:	or     al,BYTE PTR [eax-0x52cc9c31]
  411dcb:	rol    DWORD PTR [eax],0xc4
  411dce:	mov    es,WORD PTR [esi+0x76a48a84]
  411dd4:	pop    edi
  411dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd6:	adc    ch,BYTE PTR [eax-0x115faaa6]
  411ddc:	jns    0x411e47
  411dde:	dec    ecx
  411ddf:	xor    esp,DWORD PTR [ecx]
  411de1:	adc    ebp,ecx
  411de3:	lods   eax,DWORD PTR ds:[esi]
  411de4:	mov    BYTE PTR [edx+0x59c15930],al
  411dea:	dec    esp
  411deb:	dec    ecx
  411dec:	stos   DWORD PTR es:[edi],eax
  411ded:	jns    0x411e49
  411def:	out    dx,al
  411df0:	(bad)  
  411df1:	cmp    ebp,DWORD PTR [eax]
  411df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df4:	jnp    0x411e3f
  411df6:	retf   
  411df7:	out    dx,eax
  411df8:	mov    ds:0xb62af2a6,al
  411dfd:	adc    DWORD PTR [esi-0x6f4b7339],ecx
  411e03:	std    
  411e04:	push   edx
  411e05:	mov    ah,0xee
  411e07:	pop    edi
  411e08:	push   esp
  411e09:	xlat   BYTE PTR ds:[ebx]
  411e0a:	push   cs
  411e0b:	sub    cl,al
  411e0d:	leave  
  411e0e:	(bad)  
  411e0f:	shl    BYTE PTR [ecx+0x49],cl
  411e12:	push   0x7c
  411e14:	pop    esp
  411e15:	(bad)  
  411e16:	mov    ebp,0xdb322c21
  411e1b:	cmp    dl,BYTE PTR [esi]
  411e1d:	outs   dx,BYTE PTR ds:[esi]
  411e1e:	test   BYTE PTR [esi+esi*8+0x2a2f50ad],dh
  411e25:	dec    BYTE PTR [edx]
  411e27:	inc    BYTE PTR [eax]
  411e29:	ins    BYTE PTR es:[edi],dx
  411e2a:	cmp    eax,0xd39936d9
  411e2f:	mov    ch,0xad
  411e31:	xchg   ebp,eax
  411e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e33:	sub    bh,BYTE PTR [ecx+0x59e908d0]
  411e39:	and    ah,BYTE PTR [edx-0x68]
  411e3c:	pop    esp
  411e3d:	jle    0x411e46
  411e3f:	adc    DWORD PTR [ecx+0x63161700],ecx
  411e45:	ins    DWORD PTR es:[edi],dx
  411e46:	idiv   BYTE PTR ds:0x23d2560
  411e4c:	pop    esp
  411e4d:	in     al,0x13
  411e4f:	fwait
  411e50:	xadd   BYTE PTR [esp+ebx*4],ch
  411e54:	pop    es
  411e55:	test   BYTE PTR [bx+di],bl
  411e58:	sub    DWORD PTR [eax-0x7d0495ab],edx
  411e5e:	push   ss
  411e5f:	neg    DWORD PTR [ebp+0x6f]
  411e62:	pop    ecx
  411e63:	mov    esp,0x63794d75
  411e68:	je     0x411dfe
  411e6a:	lds    esi,FWORD PTR ds:0xa3c142e4
  411e70:	in     al,dx
  411e71:	inc    ebp
  411e72:	jo     0x411e7d
  411e74:	sub    DWORD PTR [esi-0x49],edx
  411e77:	mov    esi,0x76cb0b27
  411e7c:	and    eax,0x1e5ae494
  411e81:	(bad)  
  411e83:	pushf  
  411e84:	jmp    0xd666:0x61b55083
  411e8b:	pop    ebx
  411e8c:	lds    ebx,FWORD PTR [ebx+edi*2]
  411e8f:	sbb    BYTE PTR [edx-0x18236bec],cl
  411e95:	sbb    edx,DWORD PTR [ebx-0x3d]
  411e98:	loope  0x411e9e
  411e9a:	sbb    al,0x9a
  411e9c:	sub    al,0x33
  411e9e:	inc    esp
  411e9f:	push   ebx
  411ea0:	dec    ebp
  411ea1:	out    0xa1,al
  411ea3:	stos   DWORD PTR es:[edi],eax
  411ea4:	mov    dl,BYTE PTR [edx]
  411ea6:	mov    dl,BYTE PTR [esp+ebp*2+0x20]
  411eaa:	fsub   DWORD PTR [ecx-0x5fd98159]
  411eb0:	popf   
  411eb1:	stos   BYTE PTR es:[edi],al
  411eb2:	bound  ebp,QWORD PTR [ebp+edx*4+0x31]
  411eb6:	mov    ebx,0xc931b60b
  411ebb:	sub    BYTE PTR [esp+eiz*2],dh
  411ebe:	(bad)  
  411ec0:	mov    ecx,0x44773349
  411ec5:	cmp    DWORD PTR es:[ebp+eiz*2-0x1ad38481],edx
  411ecd:	mov    cl,0x76
  411ecf:	loop   0x411f15
  411ed1:	xor    eax,0xdfe2be03
  411ed6:	cmc    
  411ed7:	xchg   dh,cl
  411ed9:	push   eax
  411eda:	xlat   BYTE PTR ds:[ebx]
  411edb:	fidiv  WORD PTR [esi-0x52]
  411ede:	test   DWORD PTR [ebx],edx
  411ee0:	int3   
  411ee1:	pop    ecx
  411ee2:	adc    eax,0x71be100c
  411ee7:	cs ins BYTE PTR es:[edi],dx
  411ee9:	ja     0x411ea3
  411eeb:	mov    cl,0x9
  411eed:	test   BYTE PTR [edi],cl
  411eef:	outs   dx,BYTE PTR ds:[esi]
  411ef0:	cmp    al,0xf5
  411ef2:	dec    ebp
  411ef3:	xor    edi,DWORD PTR [ebx+0x264dc159]
  411ef9:	mov    esi,0xe2b295e7
  411efe:	or     eax,0xc6e1ac13
  411f03:	rol    al,1
  411f05:	push   eax
  411f06:	xchg   ebx,eax
  411f07:	fcmove st,st(2)
  411f09:	push   es
  411f0a:	idiv   BYTE PTR [edi+0x5a353e76]
  411f10:	std    
  411f11:	daa    
  411f12:	or     eax,0x66682cf4
  411f17:	inc    esp
  411f18:	int    0xac
  411f1a:	mov    cl,0x62
  411f1c:	and    eax,eax
  411f1e:	inc    eax
  411f1f:	loop   0x411ed4
  411f21:	jmp    0x411ed4
  411f23:	jo     0x411f80
  411f25:	dec    ebx
  411f26:	cmp    al,BYTE PTR [edx]
  411f28:	and    ecx,0x1d118052
  411f2e:	data16 addr16 gs jbe 0x411f08
  411f33:	cdq    
  411f34:	adc    dh,ch
  411f36:	sub    eax,0xd6a76f8c
  411f3b:	xor    bl,ch
  411f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3e:	gs cld 
  411f40:	ds cli 
  411f42:	push   ecx
  411f43:	push   eax
  411f44:	shr    DWORD PTR [edx-0x76bd6002],1
  411f4a:	and    ecx,edx
  411f4c:	leave  
  411f4d:	dec    ecx
  411f4e:	shl    eax,cl
  411f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f51:	and    DWORD PTR [eax],eax
  411f53:	jle    0x411f36
  411f55:	xchg   edi,eax
  411f56:	jns    0x411f0f
  411f58:	push   eax
  411f59:	pop    ss
  411f5a:	xor    eax,0xb888a731
  411f5f:	scas   eax,DWORD PTR es:[edi]
  411f60:	xor    al,0xdb
  411f62:	stc    
  411f63:	dec    edi
  411f64:	retf   
  411f65:	popf   
  411f66:	pop    ds
  411f67:	mov    ds:0x7eaed251,eax
  411f6c:	dec    eax
  411f6d:	clc    
  411f6e:	pop    ebp
  411f6f:	mov    bh,0x3
  411f71:	inc    eax
  411f72:	aad    0x2e
  411f74:	fisub  DWORD PTR [ecx]
  411f76:	sub    eax,0x3054d7a7
  411f7b:	popf   
  411f7c:	imul   esi,DWORD PTR [edx],0xffffffc8
  411f7f:	cli    
  411f80:	cmp    dl,dh
  411f82:	or     eax,0x57f974fe
  411f87:	mov    ch,0xa6
  411f89:	into   
  411f8a:	(bad)  
  411f8b:	test   BYTE PTR [ebp-0x22],0xc6
  411f8f:	lods   eax,DWORD PTR ds:[esi]
  411f90:	cmc    
  411f91:	lea    edx,[esi]
  411f93:	stos   BYTE PTR es:[edi],al
  411f94:	outs   dx,DWORD PTR ds:[esi]
  411f95:	repnz test BYTE PTR [esi],ch
  411f98:	imul   ebp,ebp,0x14fa0687
  411f9e:	jmp    FWORD PTR [edi-0x52]
  411fa1:	fmul   st(5),st
  411fa3:	mov    WORD PTR [esi+ebx*8+0x7f],ds
  411fa7:	stc    
  411fa8:	mov    edi,0x59a0485f
  411fad:	loop   0x411f8f
  411faf:	lds    ecx,FWORD PTR [esi+0x4653c98d]
  411fb5:	sahf   
  411fb6:	adc    cl,BYTE PTR [ebp-0x6f477241]
  411fbc:	mov    eax,ds:0x1b78a5a8
  411fc1:	dec    ebx
  411fc2:	push   eax
  411fc3:	scas   al,BYTE PTR es:[edi]
  411fc4:	mov    gs,ebp
  411fc6:	iret   
  411fc7:	retf   
  411fc8:	fnstsw WORD PTR fs:[esi]
  411fcb:	dec    ecx
  411fcc:	xor    BYTE PTR [ebp-0x80],ch
  411fcf:	clc    
  411fd0:	xchg   BYTE PTR [ecx-0x1c365055],ch
  411fd6:	mov    edi,0x6931805e
  411fdb:	lock push esi
  411fdd:	jecxz  0x411f7a
  411fdf:	(bad)  
  411fe0:	faddp  st(7),st
  411fe2:	xor    DWORD PTR [ebp+0x32e30622],edx
  411fe8:	add    DWORD PTR [edi-0x5e],edx
  411feb:	out    dx,eax
  411fec:	mov    eax,0xf67b74a0
  411ff1:	jno    0x412008
  411ff3:	call   0xf7482176
  411ff8:	sbb    al,0x5
  411ffa:	shr    DWORD PTR fs:[ecx],0x90
  411ffe:	cmp    al,BYTE PTR [ecx]
  412000:	ret    
  412001:	jge    0x411fb9
  412003:	mov    ds:0xbefb8930,al
  412008:	xchg   edx,eax
  412009:	sub    eax,0x1bb3fc9d
  41200e:	test   eax,0x46e71e6c
  412013:	lahf   
  412014:	(bad)  
  412016:	iret   
  412017:	adc    BYTE PTR [esi-0x2e],0xff
  41201b:	in     eax,0x75
  41201d:	add    ebp,ebp
  41201f:	mov    ebp,0x692127d1
  412024:	sub    al,0x71
  412026:	fdivr  DWORD PTR [ebx]
  412028:	outs   dx,DWORD PTR ds:[esi]
  412029:	cmc    
  41202a:	ins    BYTE PTR es:[edi],dx
  41202b:	push   DWORD PTR [eax+0xc]
  41202e:	xchg   ecx,eax
  41202f:	cld    
  412030:	sub    eax,0x7e599a74
  412035:	out    0x69,al
  412037:	daa    
  412038:	push   ss
  412039:	scas   eax,DWORD PTR es:[edi]
  41203a:	and    DWORD PTR [edx+0x7c0d3d84],0xffffff89
  412041:	jl     0x41203c
  412043:	jo     0x41206c
  412045:	inc    esp
  412046:	xor    BYTE PTR [esi],0x14
  412049:	mov    edi,0xb5ffa768
  41204e:	shl    DWORD PTR [esi+ebx*1],cl
  412051:	scas   eax,DWORD PTR es:[edi]
  412052:	xor    DWORD PTR [edi+0x6b],edi
  412055:	push   esp
  412056:	sub    ah,BYTE PTR [ebx]
  412058:	out    0x97,al
  41205a:	jle    0x4120a8
  41205c:	push   cs
  41205d:	(bad)  
  41205e:	fimul  WORD PTR [edx]
  412060:	retf   
  412061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412062:	adc    al,0x3c
  412064:	(bad)  
  412065:	or     eax,0xf8eacf1
  41206a:	cwde   
  41206b:	pop    edi
  41206c:	loope  0x41202e
  41206e:	push   ds
  41206f:	adc    BYTE PTR [edi-0x3a],dh
  412072:	cmc    
  412073:	add    eax,DWORD PTR [ebp*4-0x26363c38]
  41207a:	mov    ebx,0x21efefe9
  41207f:	fstp   QWORD PTR [ebx-0x4557b099]
  412085:	ja     0x412034
  412087:	and    edx,DWORD PTR [esi+ecx*2]
  41208a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208b:	xor    al,0xbb
  41208d:	les    ecx,FWORD PTR [edx]
  41208f:	jp     0x41207e
  412091:	jbe    0x412055
  412093:	cmp    al,0xa8
  412095:	imul   eax,ecx,0xa599a46d
  41209b:	sbb    bh,BYTE PTR [ebx]
  41209d:	lods   al,BYTE PTR ds:[esi]
  41209e:	adc    ch,ch
  4120a0:	rol    DWORD PTR [edi+0x42],1
  4120a3:	jbe    0x41209e
  4120a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a6:	(bad)  
  4120a7:	loop   0x41204e
  4120a9:	push   ecx
  4120aa:	retf   0x8b8a
  4120ad:	mov    eax,ds:0x481e7f0b
  4120b2:	pop    ecx
  4120b3:	mov    eax,ds:0x5f7837ea
  4120b8:	push   esp
  4120b9:	jnp    0x4120a6
  4120bb:	mov    al,0x36
  4120bd:	ret    0x8977
  4120c0:	test   eax,0x7763eb03
  4120c5:	ret    
  4120c6:	push   edi
  4120c7:	cwde   
  4120c8:	mov    esp,0xd2dadb06
  4120cd:	and    DWORD PTR [ebx],0x33c95478
  4120d3:	xlat   BYTE PTR ds:[ebx]
  4120d4:	adc    al,0x32
  4120d6:	mov    ds:0xb5272c26,eax
  4120db:	(bad)  
  4120dd:	push   0x19
  4120df:	pop    ecx
  4120e0:	mov    bl,0xe3
  4120e2:	xor    BYTE PTR [ebx-0x6c156d2e],bh
  4120e8:	out    dx,eax
  4120e9:	cmp    dl,cl
  4120eb:	add    BYTE PTR [esi],0x85
  4120ee:	xchg   ebx,eax
  4120ef:	ret    0x5056
  4120f2:	mov    BYTE PTR [edi-0x7c],cl
  4120f5:	add    BYTE PTR [edx+0x9],ch
  4120f8:	pop    edi
  4120f9:	mov    gs,WORD PTR [esi-0x85a8d3c]
  4120ff:	scas   al,BYTE PTR es:[edi]
  412100:	sub    esp,DWORD PTR ds:0xd951e052
  412106:	push   0x70
  412108:	xor    BYTE PTR [ebx-0x3f808884],cl
  41210e:	(bad)  
  41210f:	mov    ecx,0x6e4c6f
  412114:	loop   0x41216e
  412116:	sbb    BYTE PTR [eax],bh
  412118:	fidiv  DWORD PTR [edx-0x4f]
  41211c:	push   0xc18f3f2d
  412121:	jno    0x412159
  412123:	(bad)  
  412124:	fdiv   DWORD PTR [ecx+0x68]
  412127:	dec    esp
  412128:	lea    ebp,[ebx+0x75b800e8]
  41212e:	and    ebx,DWORD PTR [edi+0x2fa51a75]
  412134:	jge    0x412181
  412136:	jnp    0x41218f
  412138:	into   
  412139:	cmp    DWORD PTR [ebx+0x6a190d46],0x4f38ed63
  412143:	xor    DWORD PTR [ebx],0x69
  412146:	mov    eax,ds:0x4f62fec9
  41214b:	js     0x41211b
  41214d:	inc    di
  41214f:	sbb    cl,BYTE PTR [edi]
  412151:	hlt    
  412152:	jne    0x412141
  412154:	jle    0x412142
  412156:	lds    esp,FWORD PTR ss:[edx]
  412159:	or     DWORD PTR [ecx+0x24],eax
  41215c:	xchg   ecx,edi
  41215e:	sub    BYTE PTR [edx],al
  412160:	sbb    eax,0x1080e1c3
  412165:	repnz xor al,0x8
  412168:	push   0x41
  41216a:	sbb    ebp,DWORD PTR [edx]
  41216c:	scas   eax,DWORD PTR es:[edi]
  41216d:	setnp  BYTE PTR [ebp-0x347317cc]
  412174:	aas    
  412175:	pop    esi
  412176:	daa    
  412177:	mov    dh,0x51
  412179:	mov    ch,0x41
  41217b:	(bad)  
  41217c:	fld    TBYTE PTR [edi-0x49]
  41217f:	mov    dl,0xbe
  412181:	and    cl,dh
  412183:	aas    
  412184:	pop    eax
  412185:	or     bh,al
  412187:	fisubr WORD PTR [ecx-0x5bbc0d6]
  41218d:	fistp  QWORD PTR [ebx]
  41218f:	imul   ecx,DWORD PTR [ecx-0x6af563d5],0x86764238
  412199:	rcr    edi,1
  41219b:	mov    al,0xb2
  41219d:	jb     0x4121cf
  41219f:	pusha  
  4121a0:	sbb    BYTE PTR [ebx+0x112f3abd],dl
  4121a6:	and    al,0x12
  4121a8:	lods   al,BYTE PTR ds:[esi]
  4121a9:	xchg   ebx,eax
  4121aa:	mov    es,esp
  4121ac:	ja     0x4121b3
  4121ae:	ins    DWORD PTR es:[edi],dx
  4121af:	cwde   
  4121b0:	add    BYTE PTR [esi+0x60],ch
  4121b3:	outs   dx,BYTE PTR ds:[esi]
  4121b4:	xchg   esp,eax
  4121b5:	jp     0x4121f5
  4121b7:	imul   esi,DWORD PTR [edi-0x78d6cdbc],0x6b
  4121be:	call   0x1a67:0x9e3f9e82
  4121c5:	xor    ah,ah
  4121c7:	xchg   ecx,eax
  4121c8:	cmp    eax,0x3b6361ac
  4121cd:	sbb    al,0xf8
  4121cf:	test   al,0xd
  4121d1:	je     0x4121fc
  4121d3:	mov    dh,0x66
  4121d5:	call   0x1c54ab2c
  4121da:	xor    al,0x67
  4121dc:	pop    ds
  4121dd:	out    dx,al
  4121de:	xchg   ebp,eax
  4121df:	addr16 dec esp
  4121e1:	(bad)  
  4121e2:	cli    
  4121e3:	jmp    0x41219d
  4121e5:	outs   dx,DWORD PTR ds:[esi]
  4121e6:	jmp    0x6e7f:0x6b40ce
  4121ed:	retf   
  4121ee:	lods   al,BYTE PTR ds:[esi]
  4121ef:	pop    esi
  4121f0:	cmp    dh,BYTE PTR es:[edx+0x4cc7944e]
  4121f7:	and    edi,DWORD PTR [ebx+ebx*1]
  4121fa:	popa   
  4121fb:	ds sbb ch,bl
  4121fe:	xchg   edx,eax
  4121ff:	js     0x412271
  412201:	shr    BYTE PTR [ebp-0x5f],1
  412204:	les    eax,FWORD PTR [ebx+0x603d0b63]
  41220a:	nop
  41220b:	sbb    dh,BYTE PTR [edx+0x4c]
  41220e:	test   BYTE PTR [edx+eiz*2-0xb7bcb6a],ch
  412215:	xor    DWORD PTR [ecx-0x42],ebp
  412218:	push   cs
  412219:	std    
  41221a:	xor    eax,0xd40be41f
  41221f:	idiv   DWORD PTR [edi]
  412221:	aas    
  412222:	dec    esp
  412223:	ja     0x412248
  412225:	push   eax
  412226:	loop   0x412278
  412228:	sub    bl,al
  41222a:	or     al,0x4
  41222c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41222d:	test   al,0x84
  41222f:	jg     0x4121ff
  412231:	mul    BYTE PTR ds:0x63d80c53
  412237:	push   eax
  412238:	retf   
  412239:	in     eax,0x80
  41223b:	int3   
  41223c:	out    0x22,al
  41223e:	addr16 gs aad 0x39
  412242:	fadd   st,st(7)
  412244:	mov    ds:0x3a12045,eax
  412249:	mov    dl,0x9c
  41224b:	pop    ebp
  41224c:	push   0x1b3da2a1
  412251:	inc    esi
  412252:	sub    ch,BYTE PTR [ecx-0x32]
  412255:	push   esi
  412256:	fs iret 
  412258:	sub    ch,BYTE PTR [eax-0x2f90f6f5]
  41225e:	enter  0x29f8,0xb2
  412262:	mov    WORD PTR gs:[ebp-0xb],ss
  412266:	or     al,BYTE PTR ds:0x514d7118
  41226c:	addr16 dec eax
  41226e:	imul   ebp,esi,0xffffff84
  412271:	sbb    BYTE PTR [edi+0x6e],cl
  412274:	xchg   ebp,eax
  412275:	inc    esp
  412276:	push   ss
  412277:	pop    ebp
  412278:	hlt    
  412279:	ja     0x41222c
  41227b:	mov    ds:0xea3e10fb,eax
  412280:	xchg   edi,eax
  412281:	or     dh,BYTE PTR [edi]
  412283:	dec    esi
  412284:	(bad)  
  412285:	jecxz  0x4122b3
  412287:	jl     0x4122fb
  412289:	mov    al,ds:0xcf726f72
  41228e:	int    0x87
  412290:	push   eax
  412291:	mov    ds:0xa978f55e,al
  412296:	nop
  412297:	(bad)  
  412298:	fcomp  DWORD PTR [ebp+0x25]
  41229b:	adc    ah,BYTE PTR [eax-0x78]
  41229e:	in     eax,dx
  41229f:	adc    BYTE PTR ds:0x1e04d56f,ah
  4122a5:	pop    esp
  4122a6:	mov    esi,0xc9666cc2
  4122ab:	push   ss
  4122ac:	(bad)  
  4122ad:	lods   al,BYTE PTR ds:[esi]
  4122ae:	sbb    ebp,DWORD PTR [esi-0x77]
  4122b1:	enter  0x5019,0xdf
  4122b5:	or     ah,BYTE PTR [esi]
  4122b7:	inc    edx
  4122b8:	ins    DWORD PTR es:[edi],dx
  4122b9:	imul   ecx,DWORD PTR [edx-0xf268967],0x3a
  4122c0:	jle    0x41232c
  4122c2:	pop    edx
  4122c3:	adc    eax,0xac2a9f5e
  4122c8:	mov    cl,0x79
  4122ca:	lds    esp,FWORD PTR [esi+ecx*4-0x16]
  4122ce:	xchg   esi,eax
  4122cf:	xchg   ebp,eax
  4122d0:	cmp    al,0xff
  4122d2:	mov    ah,bl
  4122d4:	mov    edi,DWORD PTR [eax+0x7fd66ff1]
  4122da:	cdq    
  4122db:	dec    ebp
  4122dc:	outs   dx,BYTE PTR ds:[esi]
  4122dd:	sub    BYTE PTR [ecx+0x5d],dl
  4122e0:	jmp    0x2a07d196
  4122e5:	shr    BYTE PTR [ebp+0x23d293ae],cl
  4122eb:	xchg   edi,eax
  4122ec:	dec    edi
  4122ed:	adc    eax,0x5677d857
  4122f2:	ds mov ebp,0xcb1feade
  4122f8:	cli    
  4122f9:	push   ebx
  4122fa:	add    ah,BYTE PTR [edx+0x11]
  4122fd:	pop    es
  4122fe:	xor    esp,ecx
  412300:	ins    BYTE PTR es:[edi],dx
  412301:	mov    ds:0x56e15dc3,al
  412306:	mov    dl,0x1c
  412308:	cld    
  412309:	xchg   ecx,eax
  41230a:	call   0xcb69d81b
  41230f:	sub    BYTE PTR [edx+0x135f1210],bl
  412315:	into   
  412316:	inc    ebx
  412317:	mov    bh,BYTE PTR [eax+0x7ae33811]
  41231d:	scas   al,BYTE PTR es:[edi]
  41231e:	adc    eax,0x9be612e7
  412323:	pop    ecx
  412324:	xchg   ecx,eax
  412325:	cld    
  412326:	cmp    al,0xb5
  412328:	cmp    ebp,DWORD PTR [edi]
  41232a:	xor    eax,0x9ee8e2d0
  41232f:	arpl   WORD PTR [ecx+ecx*2+0xd239970],di
  412336:	jp     0x4123a3
  412338:	stos   BYTE PTR es:[edi],al
  412339:	cld    
  41233a:	sub    al,0x6a
  41233c:	addr16 pop ds
  41233e:	fldcw  WORD PTR [ebp+0x264b07fb]
  412344:	inc    ecx
  412345:	mov    ebx,0xd2af9803
  41234a:	dec    ebx
  41234b:	sar    DWORD PTR [esi+0x7d],cl
  41234e:	sbb    eax,0x71d22de6
  412353:	data16 outs dx,BYTE PTR ds:[esi]
  412355:	adc    al,0x72
  412357:	pop    ebp
  412358:	jae    0x4123ce
  41235a:	fst    DWORD PTR [ebp+0xb32eebf]
  412360:	xor    BYTE PTR [eax-0x1b28310],cl
  412366:	leave  
  412367:	xor    BYTE PTR [ecx+0x57e36bf1],al
  41236d:	mov    fs,WORD PTR [ebp-0x46]
  412370:	mov    BYTE PTR [eax],cl
  412372:	jmp    0xc551:0x6f87e01
  412379:	cli    
  41237a:	sbb    DWORD PTR [eax+eiz*1],0x89c6d025
  412381:	cmp    al,0x37
  412383:	and    BYTE PTR [ebx+0x3],bl
  412386:	mov    ecx,0x699e9183
  41238b:	push   0x73
  41238d:	retf   0xcda3
  412390:	xchg   edx,eax
  412391:	arpl   WORD PTR [edi+ebp*1],sp
  412394:	cld    
  412395:	inc    eax
  412396:	retf   0x87b7
  412399:	aad    0xe1
  41239b:	icebp  
  41239c:	lds    edx,FWORD PTR [eax-0x1e]
  41239f:	jo     0x412329
  4123a1:	ret    
  4123a2:	xor    DWORD PTR [edi+eax*4],edx
  4123a5:	jbe    0x412368
  4123a7:	(bad)  
  4123a8:	mov    eax,DWORD PTR [edi]
  4123aa:	inc    ecx
  4123ab:	push   eax
  4123ac:	xchg   esi,eax
  4123ad:	ror    DWORD PTR [ebp-0x11],cl
  4123b0:	imul   eax,DWORD PTR [esi],0xffffffc5
  4123b3:	test   eax,0x944c024
  4123b8:	push   cs
  4123b9:	dec    esp
  4123ba:	inc    eax
  4123bb:	push   cs
  4123bc:	fsub   QWORD PTR [ecx+0x331fc8eb]
  4123c2:	test   al,0xcf
  4123c4:	push   0x50e6b357
  4123c9:	adc    al,BYTE PTR [esi]
  4123cb:	iret   
  4123cc:	repz lea ebx,[edx-0x298a00d]
  4123d3:	addr16 repnz or eax,0x8992228e
  4123da:	mov    dl,ch
  4123dc:	jp     0x412373
  4123de:	or     DWORD PTR [ebx],esp
  4123e0:	and    eax,esp
  4123e2:	fcmovnbe st,st(4)
  4123e4:	call   0x366a:0x3a30f5d4
  4123eb:	mov    gs,WORD PTR [esi-0x64]
  4123ee:	mov    WORD PTR [edx+0x7e],gs
  4123f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f2:	jmp    0x58709d12
  4123f7:	nop
  4123f8:	cmc    
  4123f9:	cwde   
  4123fa:	test   al,0xf1
  4123fc:	pop    es
  4123fd:	or     edx,edx
  4123ff:	loope  0x4123c4
  412401:	gs xor al,0x52
  412404:	call   0xfa2b:0xe05bbe78
  41240b:	sub    dh,0x62
  41240e:	jne    0x412450
  412410:	(bad)  
  412411:	sbb    BYTE PTR [esi+ebp*1],ah
  412414:	push   esp
  412415:	scas   al,BYTE PTR es:[edi]
  412416:	adc    dl,BYTE PTR [ebp+0x26]
  412419:	mov    cl,0x22
  41241b:	(bad)  
  41241c:	test   ebp,0x662b2aa9
  412422:	mov    esi,0x5a398e37
  412427:	xchg   DWORD PTR [esi-0x32dda36d],ecx
  41242d:	(bad)  
  41242e:	sbb    al,0x9f
  412430:	aas    
  412431:	sub    DWORD PTR ds:0x2a4fde4b,ebp
  412437:	push   ss
  412438:	xchg   edx,eax
  412439:	xchg   ebp,eax
  41243a:	mov    ds:0x35fffb5b,eax
  41243f:	mov    cl,0xe2
  412441:	hlt    
  412442:	neg    BYTE PTR [ebx-0x686b5959]
  412448:	loopne 0x4123d3
  41244a:	in     eax,dx
  41244b:	in     al,dx
  41244c:	aas    
  41244d:	pop    ebx
  41244e:	clc    
  41244f:	mov    al,0x9b
  412451:	out    0x13,eax
  412453:	stos   DWORD PTR es:[edi],eax
  412454:	imul   esi,DWORD PTR [ecx+0x30],0xffffffb5
  412458:	call   0xd21538a2
  41245d:	arpl   WORD PTR [eax+0x2d],cx
  412460:	and    DWORD PTR [ebp+0x9],ecx
  412463:	inc    ebx
  412464:	lds    ebp,FWORD PTR [ecx-0x7b2a36d1]
  41246a:	in     al,0x73
  41246c:	dec    eax
  41246d:	clc    
  41246e:	lock call 0x121b2dbc
  412474:	xor    al,0xda
  412476:	out    0x83,eax
  412478:	arpl   WORD PTR [esi+0x41],dx
  41247b:	mov    eax,ds:0x20398f66
  412480:	add    DWORD PTR [ebx-0x75],eax
  412483:	xchg   BYTE PTR [edi],ch
  412485:	(bad)  
  412486:	fild   DWORD PTR [edi]
  412488:	ins    DWORD PTR es:[edi],dx
  412489:	rol    BYTE PTR [ebx],cl
  41248b:	pop    ss
  41248c:	shl    DWORD PTR [esp+eax*2],0x34
  412490:	jmp    0xeb33:0xd75f2460
  412497:	xlat   BYTE PTR ds:[ebx]
  412498:	and    ah,BYTE PTR [ebp-0x77]
  41249b:	adc    DWORD PTR [esi-0x29],ebx
  41249e:	test   al,0x45
  4124a0:	mov    ebx,0x909897b0
  4124a5:	dec    esp
  4124a6:	mov    esi,DWORD PTR [esi+0x6f]
  4124a9:	push   edi
  4124aa:	add    di,WORD PTR [ebp+edi*8+0x41]
  4124af:	popf   
  4124b0:	sub    cl,BYTE PTR [eax+0x22]
  4124b3:	les    eax,FWORD PTR [edx-0x46e5375a]
  4124b9:	sbb    DWORD PTR [ebx+edi*4],0xb
  4124bd:	les    edx,FWORD PTR [esi]
  4124bf:	pop    esi
  4124c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124c1:	je     0x412445
  4124c3:	jecxz  0x4124da
  4124c5:	cmp    BYTE PTR [edi],ch
  4124c7:	jle    0x4124b5
  4124c9:	imul   ecx,DWORD PTR [ecx+edi*4-0x72e2c539],0x19
  4124d1:	enter  0xb1d1,0x42
  4124d5:	sar    edi,cl
  4124d7:	daa    
  4124d8:	sub    dh,BYTE PTR [ebp-0xecf4fb4]
  4124de:	sbb    esi,esi
  4124e0:	pop    eax
  4124e1:	xchg   edi,eax
  4124e2:	xor    edx,eax
  4124e4:	push   0x73680194
  4124e9:	(bad)  
  4124ea:	aam    0x42
  4124ec:	fsubp  st(4),st
  4124ee:	push   cs
  4124ef:	inc    ebp
  4124f0:	ins    BYTE PTR es:[edi],dx
  4124f1:	ins    DWORD PTR es:[edi],dx
  4124f2:	inc    ebp
  4124f3:	and    esp,DWORD PTR ds:0x1aad77c2
  4124f9:	ret    0x2f6
  4124fc:	sahf   
  4124fd:	bound  ecx,QWORD PTR [ebx]
  4124ff:	fwait
  412500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412501:	push   ebp
  412502:	jns    0x412557
  412504:	dec    eax
  412505:	jae    0x41256e
  412507:	lods   eax,DWORD PTR ds:[esi]
  412508:	es lahf 
  41250a:	lds    esi,FWORD PTR [ebp+0x63694980]
  412510:	inc    ecx
  412511:	sub    DWORD PTR [esi+0x7f],esi
  412514:	outs   dx,DWORD PTR ds:[esi]
  412515:	add    ecx,ebp
  412517:	imul   ecx,edi,0xb4f2519
  41251d:	std    
  41251e:	fwait
  41251f:	inc    edx
  412520:	inc    edx
  412521:	or     ch,ah
  412523:	push   ecx
  412524:	adc    dh,BYTE PTR [edi+0x5c]
  412527:	inc    esp
  412528:	pop    ebp
  412529:	outs   dx,DWORD PTR ds:[esi]
  41252a:	shr    DWORD PTR [ebp-0x5ddacc4f],cl
  412530:	inc    ebp
  412531:	push   ss
  412532:	imul   esp,DWORD PTR [ecx+0x42],0xb7cc9ffd
  412539:	sub    eax,0x735d8120
  41253e:	daa    
  41253f:	repnz and DWORD PTR [esi+0x43],ebx
  412543:	jecxz  0x41254a
  412545:	sbb    al,BYTE PTR [edx+0x6d]
  412548:	cmp    DWORD PTR [esi+0x2a],ecx
  41254b:	dec    edx
  41254c:	aas    
  41254d:	xor    ecx,DWORD PTR [esi]
  41254f:	push   eax
  412550:	inc    edi
  412551:	lahf   
  412552:	pop    ds
  412553:	pop    ebx
  412554:	dec    esp
  412555:	out    dx,eax
  412556:	retf   0xa4f0
  412559:	jg     0x412536
  41255b:	jae    0x412582
  41255d:	inc    edi
  41255e:	inc    esi
  41255f:	xor    ebp,0x18
  412562:	fdivr  QWORD PTR ds:0x2c48fa1c
  412568:	inc    eax
  412569:	loopne 0x412583
  41256b:	fucomi st,st(4)
  41256d:	dec    ebx
  41256e:	sbb    esi,DWORD PTR [eax+edi*2-0x13df090f]
  412575:	dec    edi
  412576:	in     al,dx
  412577:	mov    ebp,0xeefa1428
  41257c:	into   
  41257d:	fcomi  st,st(4)
  41257f:	adc    eax,0xa9595c1e
  412584:	cwde   
  412585:	out    0xdb,eax
  412587:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412589:	sbb    eax,0x970210cd
  41258e:	xor    BYTE PTR [esi*2+0x5495a6f5],0xe3
  412596:	mov    BYTE PTR [edi+0x37],bh
  412599:	out    dx,al
  41259a:	cmp    BYTE PTR [esi-0x2709122c],cl
  4125a0:	adc    al,0xa5
  4125a2:	dec    ecx
  4125a3:	mov    bl,0x35
  4125a5:	adc    dh,BYTE PTR [edx]
  4125a7:	inc    ecx
  4125a8:	popf   
  4125a9:	rcl    DWORD PTR [esi+0x6f4b5b33],cl
  4125af:	xchg   edx,eax
  4125b0:	xchg   ebx,eax
  4125b1:	cmp    esi,DWORD PTR [ecx+ebp*8]
  4125b4:	adc    eax,0xf3410cc4
  4125b9:	and    eax,0x7e32ed6f
  4125be:	jno    0x41257d
  4125c0:	cmp    BYTE PTR [ecx],cl
  4125c2:	sti    
  4125c3:	or     DWORD PTR [ecx],edx
  4125c5:	inc    esi
  4125c6:	cmp    eax,0x93673b69
  4125cb:	push   esp
  4125cc:	clc    
  4125cd:	adc    eax,0xb60b1280
  4125d2:	pop    ds
  4125d3:	cmp    eax,0x29606d4b
  4125d8:	ds push edx
  4125da:	es add ecx,0x38635a6f
  4125e1:	push   es
  4125e2:	mov    al,ds:0x89fd5da1
  4125e7:	retf   
  4125e8:	adc    eax,0x78ebf135
  4125ed:	adc    BYTE PTR ds:0x58bf5a8,bl
  4125f3:	aaa    
  4125f4:	outs   dx,DWORD PTR ds:[esi]
  4125f5:	aaa    
  4125f6:	test   BYTE PTR [ecx-0x39],bh
  4125f9:	nop
  4125fa:	retf   0x9f27
  4125fd:	sub    eax,0xbb5d8eb7
  412602:	stc    
  412603:	ss addr16 mov al,0x85
  412607:	(bad)  [eax]
  412609:	bound  ecx,QWORD PTR [edi-0x12]
  41260c:	arpl   WORD PTR [edx+0x68860d92],dx
  412612:	outs   dx,BYTE PTR ds:[esi]
  412613:	(bad)  
  412614:	out    0x7c,al
  412616:	sahf   
  412617:	fst    QWORD PTR [ebp-0x5d]
  41261a:	adc    BYTE PTR [esi+edx*2+0xd],ah
  41261e:	xchg   BYTE PTR [ecx],bl
  412620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412621:	cmp    DWORD PTR [edx],esi
  412623:	outs   dx,BYTE PTR ds:[esi]
  412624:	xor    BYTE PTR [ebx+eax*1+0x71],dh
  412628:	outs   dx,DWORD PTR ds:[esi]
  412629:	inc    ebx
  41262a:	push   ds
  41262b:	adc    BYTE PTR [edi],ch
  41262d:	sbb    DWORD PTR [esi-0x194abbeb],ebp
  412633:	sbb    DWORD PTR [eax+0x11],ebp
  412636:	and    BYTE PTR [edx+0x0],bh
  412639:	adc    ebp,DWORD PTR [esi+0x1efa8ab0]
  41263f:	call   0x8926b648
  412644:	aaa    
  412645:	sbb    DWORD PTR [ebx+0x57],0x70875e5
  41264c:	push   esp
  41264d:	icebp  
  41264e:	ffree  st(0)
  412650:	adc    BYTE PTR [edx+0x29],ch
  412653:	xor    esi,DWORD PTR [edi+ebp*8]
  412656:	cdq    
  412657:	lock jmp 0x1d9d:0x93077121
  41265f:	push   cs
  412660:	not    DWORD PTR [eax]
  412662:	push   0x5e
  412664:	in     al,dx
  412665:	lds    edi,FWORD PTR [edi]
  412667:	and    al,0x2e
  412669:	cdq    
  41266a:	mov    bl,bh
  41266c:	xor    BYTE PTR [edx-0x47],dl
  41266f:	mov    ss,WORD PTR [ebp+esi*4-0x2c92605e]
  412676:	int3   
  412677:	scas   al,BYTE PTR es:[edi]
  412678:	out    0x26,eax
  41267a:	repz retf 0x2831
  41267e:	jae    0x4126bd
  412680:	push   edi
  412681:	xor    eax,0x5637215e
  412686:	xor    BYTE PTR [esi-0x67ef29c],cl
  41268c:	pop    ebx
  41268d:	bnd jns 0x41265b
  412690:	(bad)  
  412691:	retf   0xcc0e
  412694:	push   ebp
  412695:	mov    bh,0xea
  412697:	addr16 jb 0x412717
  41269a:	mov    esi,0x1b81a306
  41269f:	jae    0x412671
  4126a1:	sub    BYTE PTR [esi-0x14],0xa2
  4126a5:	inc    esi
  4126a6:	adc    eax,0xa1a012c9
  4126ab:	js     0x412705
  4126ad:	loopne 0x4126ef
  4126af:	pop    ss
  4126b0:	aad    0xc0
  4126b2:	adc    ch,bl
  4126b4:	dec    edi
  4126b5:	pop    eax
  4126b6:	sbb    dl,al
  4126b8:	shr    BYTE PTR [esi],1
  4126ba:	stos   BYTE PTR es:[edi],al
  4126bb:	mov    cl,0x7d
  4126bd:	push   ds
  4126be:	lods   eax,DWORD PTR ds:[esi]
  4126bf:	div    BYTE PTR [edi]
  4126c1:	xchg   edx,eax
  4126c2:	out    dx,eax
  4126c3:	test   DWORD PTR ds:[esi+0x3f],0x99faa471
  4126cb:	pop    esp
  4126cc:	es push edx
  4126ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126cf:	cdq    
  4126d0:	mov    ch,BYTE PTR [ecx+0x1e]
  4126d3:	adc    al,0xcd
  4126d5:	fnstenv [ebx-0x13]
  4126d8:	jle    0x412705
  4126da:	les    eax,FWORD PTR [ecx]
  4126dc:	sbb    edx,DWORD PTR [edi+0x3b6e040e]
  4126e2:	popa   
  4126e3:	int3   
  4126e4:	je     0x412713
  4126e6:	dec    ecx
  4126e7:	push   eax
  4126e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126e9:	jmp    0xc507:0x9b9f2a0a
  4126f0:	fiadd  WORD PTR [ebp-0x39767ce]
  4126f6:	dec    edi
  4126f7:	pop    ss
  4126f8:	mov    BYTE PTR [ebp-0x66028f9f],dh
  4126fe:	jecxz  0x4126bc
  412700:	pop    ss
  412701:	sbb    cl,BYTE PTR [eax]
  412703:	jmp    0x412711
  412705:	mov    cl,0xb9
  412707:	jne    0x4126ed
  412709:	mov    eax,ds:0x22e1ae60
  41270e:	sar    BYTE PTR [eax+edx*2-0x11],0x51
  412713:	inc    ebp
  412714:	sbb    esi,DWORD PTR [esi-0x2b]
  412717:	sub    cl,BYTE PTR [esi]
  412719:	js     0x412738
  41271b:	inc    ebp
  41271c:	add    al,0x51
  41271e:	aas    
  41271f:	xor    ebx,edx
  412721:	ror    bh,cl
  412723:	push   ebx
  412724:	repz fwait
  412726:	outs   dx,DWORD PTR ds:[esi]
  412727:	stos   DWORD PTR es:[edi],eax
  412728:	dec    edx
  412729:	cmp    eax,0xd8a4fa98
  41272e:	lods   al,BYTE PTR ds:[esi]
  41272f:	ss pop ebp
  412731:	pop    eax
  412732:	mov    esi,eax
  412734:	mov    ah,0x5b
  412736:	rcl    ah,cl
  412738:	popf   
  412739:	repnz adc eax,0x6a92c986
  41273f:	pop    ecx
  412740:	(bad)  
  412741:	(bad)  
  412742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412743:	mov    es,edi
  412745:	ss ss jnp 0x412720
  412749:	jb     0x4126f6
  41274b:	js     0x41279f
  41274d:	shl    BYTE PTR [ebx+0x1a917c53],cl
  412753:	push   cs
  412754:	push   0xe6470589
  412759:	add    bl,BYTE PTR [edx-0x1bf1afc2]
  41275f:	push   0x75
  412761:	daa    
  412762:	pop    esp
  412763:	xor    al,0xb5
  412765:	or     ecx,DWORD PTR [edx-0x7965251b]
  41276b:	aaa    
  41276c:	mov    ebp,0x825186d7
  412771:	jns    0x4127b6
  412773:	ret    0x99fa
  412776:	sub    bh,cl
  412778:	fwait
  412779:	retf   0x95a7
  41277c:	cmc    
  41277d:	xor    DWORD PTR [esi+0x60],eax
  412780:	cmc    
  412781:	loop   0x4127fd
  412783:	stos   DWORD PTR es:[edi],eax
  412784:	cmc    
  412785:	pusha  
  412786:	sub    DWORD PTR [eax-0x4dc3a536],esp
  41278c:	jmp    0x6114:0x14bca259
  412793:	ret    0x718b
  412796:	stos   BYTE PTR es:[edi],al
  412797:	aaa    
  412798:	pop    ds
  412799:	mov    al,ch
  41279b:	(bad)
  41279e:	dec    ebx
  41279f:	adc    eax,0xe17c7ee9
  4127a4:	xchg   ebp,eax
  4127a5:	scas   al,BYTE PTR es:[edi]
  4127a6:	daa    
  4127a7:	dec    ebp
  4127a8:	call   0xafa3141e
  4127ad:	sub    eax,0x9f7c9ae6
  4127b2:	jp     0x412739
  4127b4:	dec    edx
  4127b5:	(bad)  
  4127b6:	xlat   BYTE PTR ds:[ebx]
  4127b7:	dec    eax
  4127b8:	fs cdq 
  4127ba:	enter  0x986,0x64
  4127be:	test   DWORD PTR [esi],0x5b3c5507
  4127c4:	push   0xeb830e27
  4127c9:	imul   ecx,DWORD PTR [edi+edi*2],0xffffffcf
  4127cd:	push   ecx
  4127ce:	out    0xba,al
  4127d0:	jno    0x4127c5
  4127d2:	out    dx,al
  4127d3:	pop    ebx
  4127d4:	call   0x26f0fb57
  4127d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127da:	outs   dx,BYTE PTR ds:[esi]
  4127db:	sub    cl,bh
  4127dd:	stos   BYTE PTR es:[edi],al
  4127de:	pushf  
  4127df:	pop    esi
  4127e0:	es in  al,dx
  4127e2:	and    dl,dl
  4127e4:	ret    0xb4d3
  4127e7:	outs   dx,BYTE PTR ds:[esi]
  4127e8:	jne    0x412818
  4127ea:	dec    esi
  4127eb:	adc    ebx,DWORD PTR [ebp+edi*8+0x520bf926]
  4127f2:	retf   
  4127f3:	dec    eax
  4127f4:	stos   BYTE PTR es:[edi],al
  4127f5:	xor    BYTE PTR [eax-0x10753bb5],dh
  4127fb:	stc    
  4127fc:	shl    BYTE PTR [ebp+ebp*8+0x2baf881a],cl
  412803:	or     al,0xb4
  412805:	sub    ebx,DWORD PTR ds:0x2ae52e17
  41280b:	xor    ch,0x83
  41280e:	sub    BYTE PTR [esi],ch
  412810:	push   es
  412811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412812:	in     al,dx
  412813:	push   edx
  412814:	mov    bh,0xf0
  412816:	push   ds
  412817:	inc    ebx
  412818:	icebp  
  412819:	sub    ebx,DWORD PTR [ecx]
  41281b:	mov    bh,0xfe
  41281d:	popf   
  41281e:	addr16 mov ah,0x86
  412821:	and    dh,dl
  412823:	mov    ?,eax
  412825:	fwait
  412826:	fwait
  412827:	jle    0x412849
  412829:	dec    ebp
  41282a:	adc    al,0xb2
  41282c:	clc    
  41282d:	(bad)  
  41282e:	enter  0xc78c,0x4a
  412832:	fild   WORD PTR [ebx]
  412834:	popa   
  412835:	fnstenv [ecx-0x38b9d91d]
  41283b:	push   ds
  41283c:	ret    0x997b
  41283f:	idiv   DWORD PTR [edx]
  412841:	push   ebx
  412842:	xchg   esp,eax
  412843:	hlt    
  412844:	lods   al,BYTE PTR ds:[esi]
  412845:	inc    esp
  412846:	out    0x5c,al
  412848:	xchg   ebx,eax
  412849:	test   al,0x3a
  41284b:	pop    ecx
  41284c:	ja     0x4127dd
  41284e:	clc    
  41284f:	push   es
  412850:	nop
  412851:	sbb    dh,al
  412853:	xor    BYTE PTR [ecx-0x5327c83c],0x1c
  41285a:	pop    eax
  41285b:	loop   0x4128cd
  41285d:	adc    al,bl
  41285f:	cld    
  412860:	out    dx,al
  412861:	daa    
  412862:	mov    cl,0xa6
  412864:	leave  
  412865:	jle    0x412821
  412867:	in     al,0xac
  412869:	mov    ah,0x0
  41286b:	jge    0x41280b
  41286d:	push   esi
  41286e:	fcom   QWORD PTR [edi+0x5398208f]
  412874:	xor    bh,BYTE PTR [edx]
  412876:	pop    ebp
  412878:	push   edx
  412879:	pop    ebp
  41287a:	push   esi
  41287b:	stc    
  41287c:	xor    BYTE PTR [ebx],bl
  41287e:	pop    ecx
  41287f:	xor    al,0x82
  412881:	inc    edi
  412882:	enter  0x9bc2,0x45
  412886:	(bad)  
  412887:	(bad)  [ebx-0x2d96c1e7]
  41288d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288e:	dec    edi
  41288f:	xchg   esi,eax
  412890:	pop    ecx
  412891:	pop    ds
  412892:	pop    ebp
  412893:	inc    ecx
  412894:	and    bl,BYTE PTR [ebx+0xafeb693]
  41289a:	push   es
  41289b:	das    
  41289c:	push   0xce5bfd65
  4128a1:	in     al,0x7
  4128a3:	in     al,0xd1
  4128a5:	hlt    
  4128a6:	add    dl,BYTE PTR [ecx-0x64]
  4128a9:	(bad)  
  4128aa:	idiv   BYTE PTR [ebx+eax*2]
  4128ad:	(bad)  [edi-0x6b43d3ee]
  4128b3:	call   0xc1e8:0x3c95527e
  4128ba:	icebp  
  4128bb:	out    0xc4,al
  4128bd:	out    dx,al
  4128be:	sub    DWORD PTR ss:[edx+0x523d0777],ecx
  4128c5:	std    
  4128c6:	mov    bl,cl
  4128c8:	push   ecx
  4128ca:	or     DWORD PTR [ebx+0x6606e5dd],0xffffffe7
  4128d1:	icebp  
  4128d2:	push   ebx
  4128d3:	pusha  
  4128d4:	dec    ebp
  4128d5:	ins    DWORD PTR es:[edi],dx
  4128d6:	rol    BYTE PTR [edi-0x7b],1
  4128d9:	mov    eax,ds:0xf436c2e1
  4128de:	bound  edx,QWORD PTR [ebx]
  4128e0:	mov    esp,0xbac03a4a
  4128e5:	outs   dx,DWORD PTR ds:[esi]
  4128e6:	lods   eax,DWORD PTR ds:[esi]
  4128e7:	mov    ebx,?
  4128e9:	add    eax,0x1d3e39cc
  4128ee:	nop
  4128ef:	aad    0x73
  4128f1:	and    DWORD PTR [ebx-0x37e4d3aa],0xfffffffb
  4128f8:	jo     0x412942
  4128fa:	vunpcklps ymm4,ymm2,YMMWORD PTR [eax+0x2d]
  4128ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412900:	push   ds
  412901:	lock (bad) 
  412903:	repz xor al,0xab
  412906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412907:	dec    esp
  412908:	fistp  QWORD PTR [edx+0x7]
  41290b:	pop    esp
  41290c:	into   
  41290d:	addr16 xchg esi,eax
  41290f:	ins    DWORD PTR es:[edi],dx
  412910:	sbb    eax,0xaf77892e
  412915:	mov    bl,0xb8
  412917:	and    al,0xf8
  412919:	xchg   esp,eax
  41291a:	mov    ebx,0x1dda96a8
  41291f:	push   ds
  412920:	xchg   edi,eax
  412921:	sbb    DWORD PTR [edi-0x74],edx
  412924:	and    al,0x1c
  412926:	inc    esi
  412927:	arpl   si,dx
  412929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292a:	xor    BYTE PTR [esi+0x30],dl
  41292d:	push   esi
  41292e:	push   ss
  41292f:	sar    DWORD PTR [ecx],0xae
  412932:	and    DWORD PTR [ecx-0x2c],eax
  412935:	xlat   BYTE PTR ds:[ebx]
  412936:	js     0x4129ae
  412938:	mov    ebp,DWORD PTR [ebx-0xd3e94d7]
  41293e:	dec    ebp
  41293f:	xor    al,0x78
  412941:	mov    dl,0x21
  412943:	pop    ds
  412944:	sub    BYTE PTR [esi],0xfd
  412947:	pop    ds
  412948:	rcr    DWORD PTR [esp+ebp*4+0x34623f48],1
  41294f:	add    DWORD PTR [ebx+0x13],0x38
  412953:	rcr    cl,cl
  412955:	test   DWORD PTR [esi],edi
  412957:	loope  0x412907
  412959:	dec    ebp
  41295a:	repz mov dh,0x96
  41295d:	call   0x8a51:0x89f15e80
  412964:	xor    cl,ch
  412966:	out    0x92,al
  412968:	pop    edi
  412969:	test   al,0xed
  41296b:	(bad)  [esi+edi*2-0x2b]
  41296f:	leave  
  412970:	jle    0x41295b
  412972:	test   al,0xb8
  412974:	jg     0x412922
  412976:	push   ecx
  412977:	sub    ch,BYTE PTR [esi+0x44b851de]
  41297d:	pop    eax
  41297e:	and    eax,0x2a753a4b
  412983:	dec    edx
  412984:	or     edi,ecx
  412986:	test   BYTE PTR [edx+0x63],ch
  412989:	or     BYTE PTR [esi+0x35b497fd],bl
  41298f:	out    dx,eax
  412990:	xchg   BYTE PTR [ecx+0x5b700a99],ch
  412996:	xor    ebp,DWORD PTR ds:0x92e6ba54
  41299c:	add    al,0x5c
  41299e:	mov    ecx,0x6fe12f5d
  4129a3:	lds    esi,FWORD PTR [ebx-0x19]
  4129a6:	fstp   DWORD PTR [ecx]
  4129a8:	aad    0x75
  4129aa:	out    0xe,al
  4129ac:	jp     0x4129fa
  4129ae:	popf   
  4129af:	xchg   ebp,eax
  4129b0:	xchg   BYTE PTR [eax-0x7d163d54],ch
  4129b6:	pop    ds
  4129b7:	sub    eax,0xe3b68b41
  4129bc:	pop    es
  4129bd:	std    
  4129be:	dec    edx
  4129bf:	dec    eax
  4129c0:	or     eax,0x2df8acfa
  4129c5:	jecxz  0x4129d2
  4129c7:	jmp    0x988181cd
  4129cc:	mov    ah,0xf2
  4129ce:	add    ah,BYTE PTR [ebp+0x6e42b4d2]
  4129d4:	pop    ebx
  4129d5:	test   DWORD PTR [edi+eax*8],ebp
  4129d8:	sub    eax,0x32312543
  4129dd:	out    0xc4,al
  4129df:	mov    eax,0x4d0352ab
  4129e5:	sbb    BYTE PTR [edi],dh
  4129e7:	and    DWORD PTR [esi-0x68363d25],ebp
  4129ed:	jae    0x412978
  4129ef:	push   ebx
  4129f0:	stos   BYTE PTR es:[edi],al
  4129f1:	or     esp,ecx
  4129f3:	jl     0x4129fe
  4129f5:	adc    DWORD PTR [eax+0x24],0x98ef4459
  4129fc:	jmp    0xb27:0xf67ab7df
  412a03:	mov    ebx,0xa84fac87
  412a08:	pop    edi
  412a09:	mov    DWORD PTR [eax+edi*2],edx
  412a0c:	in     eax,dx
  412a0d:	in     eax,dx
  412a0e:	lahf   
  412a0f:	pop    esp
  412a10:	mov    edi,0xd2e6484c
  412a15:	inc    ecx
  412a16:	pop    ebp
  412a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a18:	mov    esi,0x69d81d17
  412a1d:	and    BYTE PTR [ecx+edx*2],dh
  412a20:	and    BYTE PTR [ecx+0x7ceaee18],0xa
  412a27:	aad    0x44
  412a29:	and    DWORD PTR [eax-0x73169f7a],eax
  412a2f:	dec    eax
  412a30:	(bad)  
  412a31:	(bad)  
  412a32:	in     eax,dx
  412a33:	sub    al,BYTE PTR [edx-0x49]
  412a36:	mov    al,ds:0x4d40eb90
  412a3b:	icebp  
  412a3c:	lods   al,BYTE PTR ds:[esi]
  412a3d:	push   edi
  412a3e:	push   ds
  412a3f:	sub    eax,0xd1613b33
  412a44:	shr    DWORD PTR [eax+0x3d],1
  412a47:	and    al,0x93
  412a49:	repz lea ebp,[edi-0x10b46478]
  412a50:	push   esp
  412a51:	fstp   TBYTE PTR [edi]
  412a53:	jge    0x412ac3
  412a55:	call   0x2f38:0xaf27d854
  412a5c:	test   eax,0xf1f9cae6
  412a61:	or     DWORD PTR [ebx],0xffffffbf
  412a64:	adc    al,0xee
  412a66:	ins    DWORD PTR es:[edi],dx
  412a67:	dec    ecx
  412a68:	sbb    al,0x2d
  412a6a:	(bad)  
  412a6b:	fisub  DWORD PTR [ebp+0x322d8279]
  412a71:	test   ch,0xa1
  412a74:	out    dx,eax
  412a75:	inc    edx
  412a76:	aaa    
  412a77:	and    edi,DWORD PTR [eax]
  412a79:	mov    WORD PTR ds:0xf596a273,fs
  412a7f:	adc    BYTE PTR [esi],dl
  412a81:	push   ecx
  412a82:	mov    cl,0x6f
  412a84:	xchg   BYTE PTR [edx+0x7b9e3008],ah
  412a8a:	popf   
  412a8b:	mov    bl,0xfc
  412a8d:	out    0x6,al
  412a8f:	rcr    ecx,cl
  412a91:	dec    ecx
  412a92:	mov    ch,0x31
  412a94:	retf   0xc7cf
  412a97:	retf   
  412a98:	push   ds
  412a99:	jb     0x412a43
  412a9b:	in     eax,dx
  412a9c:	mov    ds:0x53aadc91,eax
  412aa1:	mov    esi,0x247bb37f
  412aa6:	in     eax,dx
  412aa7:	fwait
  412aa8:	jno    0x412b1e
  412aaa:	mov    ds:0x64894218,eax
  412aaf:	mov    ah,0x77
  412ab1:	add    ah,BYTE PTR [edx+edx*2+0x33]
  412ab5:	pop    ebx
  412ab6:	int    0x0
  412ab8:	sbb    BYTE PTR [ebx],cl
  412aba:	sub    bl,bh
  412abc:	push   ss
  412abd:	jno    0x412a44
  412abf:	cdq    
  412ac0:	pop    eax
  412ac1:	in     eax,0xc5
  412ac3:	mov    al,0xab
  412ac5:	pop    ds
  412ac6:	(bad)  
  412ac7:	(bad)
  412acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acc:	xchg   ecx,eax
  412acd:	push   ecx
  412ace:	fwait
  412acf:	xor    al,0xe4
  412ad1:	adc    dl,dh
  412ad3:	sub    eax,0x25b80c8
  412ad8:	dec    ebp
  412ad9:	sti    
  412ada:	shl    BYTE PTR [ebp-0x3aa4c166],cl
  412ae0:	repz or dl,ch
  412ae3:	sbb    BYTE PTR [edx+ebp*2],bl
  412ae6:	ror    DWORD PTR [eax-0x4a1aae6b],0x85
  412aed:	add    al,BYTE PTR [esi+0x221d71b1]
  412af3:	adc    BYTE PTR [edi-0x4bea8016],bh
  412af9:	hlt    
  412afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412afb:	mov    ebp,0xf21d9576
  412b01:	sbb    dh,BYTE PTR [edx]
  412b03:	ret    0xb5d1
  412b06:	fcomp  QWORD PTR [edx+0x89d7e84]
  412b0c:	cld    
  412b0d:	and    bl,bl
  412b0f:	scas   al,BYTE PTR es:[edi]
  412b10:	jp     0x412b4d
  412b12:	or     esp,ecx
  412b14:	cvtdq2ps xmm5,XMMWORD PTR [ecx-0x313722d6]
  412b1b:	(bad)  
  412b1c:	stos   BYTE PTR es:[edi],al
  412b1d:	imul   ecx,DWORD PTR [ebx-0x3c],0x52
  412b21:	jle    0x412b00
  412b23:	sbb    BYTE PTR [ebx],dl
  412b25:	jp     0x412b48
  412b27:	push   es
  412b28:	out    dx,al
  412b29:	dec    esi
  412b2a:	call   0xdc7ccfd
  412b2f:	jle    0x412b27
  412b31:	adc    edx,esp
  412b33:	in     eax,0xc5
  412b35:	loopne 0x412acd
  412b37:	sbb    DWORD PTR [edx+0x20d7273b],ebp
  412b3d:	xor    eax,0x6bfb556c
  412b42:	push   ds
  412b43:	aas    
  412b44:	inc    ecx
  412b45:	and    BYTE PTR [edx+0x148f084c],ch
  412b4b:	xor    al,0x1f
  412b4d:	mov    ebx,0x4ce41d81
  412b52:	push   edi
  412b53:	xchg   esi,eax
  412b54:	jo     0x412b6e
  412b56:	scas   eax,DWORD PTR es:[edi]
  412b57:	(bad)  
  412b58:	popf   
  412b59:	jns    0x412af4
  412b5b:	lahf   
  412b5c:	rcr    BYTE PTR [ecx+0x62],cl
  412b5f:	into   
  412b60:	sar    DWORD PTR [edx-0x6a],cl
  412b63:	lods   al,BYTE PTR ds:[esi]
  412b64:	aaa    
  412b65:	imul   eax,DWORD PTR [edx],0xffffff98
  412b68:	lock xchg BYTE PTR [esi],ah
  412b6b:	xchg   DWORD PTR [ebx+edi*1],ebx
  412b6e:	push   esi
  412b6f:	xlat   BYTE PTR ds:[ebx]
  412b70:	sub    bh,bl
  412b72:	cmp    al,0x88
  412b74:	retf   
  412b75:	icebp  
  412b76:	sbb    eax,0xc659b3bb
  412b7b:	imul   ecx,edx,0x1889d846
  412b81:	test   DWORD PTR [esi-0x72],0x939d2414
  412b88:	xchg   DWORD PTR [ebp-0x7a],edx
  412b8b:	jmp    0x39f4b7b2
  412b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b91:	xchg   ebx,eax
  412b92:	or     DWORD PTR [edi+ecx*8],0x43
  412b96:	les    eax,FWORD PTR [edx]
  412b98:	cmp    DWORD PTR [ebx-0x4678c86e],edi
  412b9e:	jl     0x412bd3
  412ba0:	ret    
  412ba1:	icebp  
  412ba2:	jmp    0x2fb04078
  412ba7:	xlat   BYTE PTR ds:[ebx]
  412ba8:	xor    al,0x7a
  412baa:	inc    eax
  412bab:	adc    edx,DWORD PTR [ecx+0x5fef9175]
  412bb1:	or     DWORD PTR [ebx+0xa3dc25f],ecx
  412bb7:	jp     0x412c12
  412bb9:	xchg   DWORD PTR [ebx+0x9],edi
  412bbc:	fcmovbe st,st(0)
  412bbe:	add    BYTE PTR [esi],ah
  412bc0:	scas   eax,DWORD PTR es:[edi]
  412bc1:	sbb    esp,DWORD PTR [ebx-0x77]
  412bc4:	sbb    al,0xe8
  412bc7:	xor    al,BYTE PTR [esi-0x10]
  412bca:	sahf   
  412bcb:	push   ds
  412bcc:	shl    DWORD PTR [edx],cl
  412bce:	fpatan 
  412bd0:	jns    0x412b91
  412bd2:	cmp    esi,ecx
  412bd4:	jbe    0x412c2a
  412bd6:	xlat   BYTE PTR ds:[ebx]
  412bd7:	xchg   esp,eax
  412bd8:	mov    dl,0x71
  412bda:	stc    
  412bdb:	test   eax,0x1ce60d78
  412be0:	mov    al,bh
  412be2:	pop    ebp
  412be3:	imul   ebp,esi,0xa
  412be6:	or     bh,BYTE PTR [edi]
  412be8:	pop    ebx
  412be9:	and    eax,0x55af6a85
  412bee:	cmp    eax,DWORD PTR [esi-0x932b84f]
  412bf4:	stos   BYTE PTR es:[edi],al
  412bf5:	sub    eax,0x52b49c98
  412bfa:	jae    0x412c73
  412bfc:	sar    bl,0xba
  412bff:	inc    ecx
  412c00:	in     al,0x53
  412c02:	nop
  412c03:	call   0xed4d2ebf
  412c08:	adc    eax,0x60934ff0
  412c0d:	loopne 0x412c1e
  412c0f:	es nop
  412c11:	cwde   
  412c12:	jae    0x412bcc
  412c14:	out    0x90,eax
  412c16:	sub    dl,al
  412c18:	jo     0x412c02
  412c1a:	mov    BYTE PTR [ebp-0x4c0adef3],ch
  412c20:	add    cl,ch
  412c22:	xchg   BYTE PTR [ecx-0x181bc7],al
  412c28:	retf   
  412c29:	cmp    ebx,edi
  412c2b:	loop   0x412c9c
  412c2d:	pop    ebx
  412c2e:	inc    edi
  412c2f:	shr    cl,1
  412c31:	icebp  
  412c32:	xor    cl,bh
  412c34:	or     ebx,DWORD PTR [eax-0x2ef1f13b]
  412c3a:	(bad)  
  412c3b:	icebp  
  412c3c:	dec    edx
  412c3d:	fs popf 
  412c3f:	ds (bad) 
  412c41:	fnsave [edx-0x3b]
  412c44:	pop    ss
  412c45:	mov    dl,0x3e
  412c47:	inc    ebx
  412c48:	cli    
  412c49:	(bad)  
  412c4a:	js     0x412c73
  412c4c:	mov    ch,0xb4
  412c4e:	mov    dl,0x51
  412c50:	rcr    DWORD PTR [esi+0x4e4329f1],cl
  412c56:	xor    bl,BYTE PTR [esi+0x67]
  412c59:	mov    fs,WORD PTR [edx]
  412c5b:	repnz xchg esp,eax
  412c5d:	and    BYTE PTR [edx],ch
  412c5f:	dec    edi
  412c60:	retf   0xd1f1
  412c63:	dec    ebp
  412c64:	dec    ebx
  412c65:	lea    eax,[ebp+0x67]
  412c68:	hlt    
  412c69:	in     al,0x52
  412c6b:	pop    edx
  412c6c:	fcomi  st,st(0)
  412c6e:	ror    DWORD PTR [edx],cl
  412c70:	mov    ds,esp
  412c72:	mov    ebx,0x8f411130
  412c77:	retf   
  412c78:	inc    esi
  412c79:	jmp    0x9413e007
  412c7e:	or     eax,0x4ec05eeb
  412c83:	fsub   DWORD PTR [ebx+edi*8-0x70358afd]
  412c8a:	leave  
  412c8b:	inc    ebp
  412c8c:	inc    ebp
  412c8d:	add    bh,al
  412c8f:	stc    
  412c90:	inc    ebx
  412c91:	cmp    esi,DWORD PTR [ebx-0x6a497dc7]
  412c97:	jo     0x412ca0
  412c99:	cli    
  412c9a:	and    DWORD PTR [edx-0x28],0x1a
  412c9e:	jb     0x412c58
  412ca0:	lds    esi,FWORD PTR [esi]
  412ca2:	daa    
  412ca3:	sbb    bh,dh
  412ca5:	xor    cl,BYTE PTR [ebx-0x7d8cc46e]
  412cab:	arpl   WORD PTR [ebp+0x2e],si
  412cae:	stos   BYTE PTR es:[edi],al
  412caf:	xchg   ebp,eax
  412cb0:	jg     0x412d0d
  412cb2:	mov    ds:0x457d1c9a,al
  412cb7:	dec    esp
  412cb8:	sbb    bl,ah
  412cba:	mov    cl,0x1a
  412cbc:	or     bl,ah
  412cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbf:	mov    bh,0xe8
  412cc1:	push   eax
  412cc2:	aad    0xb4
  412cc4:	dec    edx
  412cc5:	ja     0x412c8a
  412cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc8:	imul   ebp,DWORD PTR [esi],0x2456cd58
  412cce:	in     al,dx
  412ccf:	neg    DWORD PTR [ebx+0x3a3d313a]
  412cd5:	in     eax,0xf8
  412cd7:	ret    0x403
  412cda:	push   eax
  412cdb:	aaa    
  412cdc:	or     BYTE PTR [ecx],bh
  412cde:	fmul   QWORD PTR [ecx]
  412ce0:	inc    edx
  412ce1:	aas    
  412ce2:	adc    esi,DWORD PTR [esi]
  412ce4:	mov    eax,edi
  412ce6:	or     al,BYTE PTR fs:[edi+0x24]
  412cea:	jp     0x412cf9
  412cec:	dec    ebx
  412ced:	add    eax,0x84cb58fb
  412cf2:	cmp    eax,0x81152849
  412cf7:	inc    ebp
  412cf8:	add    eax,0x490a9c01
  412cfd:	pandn  mm3,QWORD PTR [ecx+0x2477abd5]
  412d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d05:	dec    ebx
  412d06:	xlat   BYTE PTR ds:[ebx]
  412d07:	sar    BYTE PTR [esi+0x1],cl
  412d0a:	adc    DWORD PTR [esi+0x13],ebp
  412d0d:	xor    al,0x90
  412d0f:	fcomp  QWORD PTR [esi+0x5cc77792]
  412d15:	je     0x412d68
  412d17:	push   ecx
  412d18:	inc    ecx
  412d19:	push   ss
  412d1a:	retf   0xf5fc
  412d1d:	popa   
  412d1e:	mov    bl,0xff
  412d20:	add    al,0xa6
  412d22:	jle    0x412d36
  412d24:	out    dx,eax
  412d25:	(bad)  
  412d26:	xchg   esp,eax
  412d27:	imul   DWORD PTR [ebx-0x3757ed37]
  412d2d:	dec    ecx
  412d2e:	std    
  412d2f:	push   eax
  412d30:	repz (bad) 
  412d32:	retf   0xa1d0
  412d35:	jne    0x412d23
  412d37:	mov    cl,0x1d
  412d39:	popf   
  412d3a:	loopne 0x412d59
  412d3c:	or     DWORD PTR [ecx-0x50eb99e2],esi
  412d42:	jge    0x412cd8
  412d44:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412d46:	fwait
  412d47:	fwait
  412d48:	cmp    edx,DWORD PTR [ebx-0x17dddf5c]
  412d4e:	mov    ah,0xb5
  412d50:	cmp    ch,bl
  412d52:	xor    BYTE PTR [ecx-0x5c19c139],dl
  412d58:	dec    ebp
  412d59:	loopne 0x412dce
  412d5b:	je     0x412d10
  412d5d:	inc    esi
  412d5e:	push   esi
  412d5f:	popa   
  412d60:	(bad)  
  412d61:	(bad)  
  412d62:	int    0x15
  412d64:	mov    ch,dh
  412d66:	push   ss
  412d67:	jmp    0x4c02:0xece0b2f0
  412d6e:	mov    eax,ds:0x6c4dd3fd
  412d73:	xor    bh,BYTE PTR [esi+esi*2-0x1dfc362]
  412d7a:	fsubp  st(0),st
  412d7c:	jle    0x412db0
  412d7e:	dec    esp
  412d7f:	or     DWORD PTR [ecx+0x9],edi
  412d82:	aad    0x86
  412d84:	sti    
  412d85:	psubusw mm5,QWORD PTR [esi-0x64d70afa]
  412d8c:	mov    ebp,0x333e9bf0
  412d91:	retf   
  412d92:	repnz add bl,dl
  412d95:	loop   0x412d50
  412d97:	jl     0x412d67
  412d99:	pop    ecx
  412d9a:	jl     0x412e08
  412d9c:	xchg   DWORD PTR [esi],edx
  412d9e:	lahf   
  412d9f:	and    esi,DWORD PTR [esi-0x2]
  412da2:	xchg   edi,eax
  412da3:	jg     0x412dc5
  412da5:	repz out dx,eax
  412da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412da8:	sbb    esi,DWORD PTR [esi]
  412daa:	and    DWORD PTR [esi+0xd],esp
  412dad:	pop    esi
  412dae:	sbb    al,0x89
  412db0:	xor    eax,0xc027dcdf
  412db5:	inc    esi
  412db6:	xchg   esi,eax
  412db7:	clc    
  412db8:	push   ebx
  412db9:	cmp    edx,edx
  412dbb:	push   cs
  412dbc:	in     eax,0xe7
  412dbe:	test   eax,0x902aa5a1
  412dc3:	add    edi,0xfee2f0b7
  412dc9:	xchg   BYTE PTR [ebx+0x7b026bed],bl
  412dcf:	pop    ds
  412dd0:	push   edx
  412dd1:	pop    edi
  412dd2:	das    
  412dd3:	pushf  
  412dd4:	mov    bh,0x59
  412dd6:	fidivr DWORD PTR [edi-0x5445179]
  412ddc:	jle    0x412da0
  412dde:	inc    esp
  412ddf:	xor    al,0x75
  412de1:	dec    esp
  412de2:	or     dl,BYTE PTR [edi-0x517fb539]
  412de8:	and    al,0x77
  412dea:	or     BYTE PTR [ecx+0x5a203160],dl
  412df0:	and    al,0xe3
  412df2:	lds    eax,FWORD PTR [ebx+0x3f]
  412df5:	pop    edx
  412df7:	retf   0xfb2d
  412dfa:	(bad)  
  412dfb:	mov    esp,0x3391e907
  412e00:	addr16 cmp eax,0xa87782c2
  412e06:	push   ds
  412e07:	jg     0x412da4
  412e09:	outs   dx,DWORD PTR ds:[esi]
  412e0a:	and    DWORD PTR [eax+0x78df6d05],edx
  412e10:	lahf   
  412e11:	mov    al,0x55
  412e13:	adc    ecx,edx
  412e15:	jne    0x412e04
  412e17:	inc    ecx
  412e18:	sub    bh,BYTE PTR [eax]
  412e1a:	les    esp,FWORD PTR [esi-0x36]
  412e1d:	adc    eax,0x9a0ccdcd
  412e22:	xchg   ebx,eax
  412e23:	push   es
  412e24:	jo     0x412e41
  412e26:	rol    BYTE PTR [esi+0x79],0xf1
  412e2a:	mov    edx,0xcb99723b
  412e2f:	and    BYTE PTR [edi],dl
  412e31:	cmp    eax,DWORD PTR ds:0xe4286884
  412e37:	jmp    0x939235f9
  412e3c:	nop
  412e3d:	push   esp
  412e3e:	ret    0x7e7f
  412e41:	scas   eax,DWORD PTR es:[edi]
  412e42:	mov    ebp,0x224ad017
  412e47:	adc    BYTE PTR [ecx+eax*4+0x4bb93473],al
  412e4e:	jmp    0x412ebe
  412e50:	outs   dx,DWORD PTR ds:[esi]
  412e51:	jp     0x412ecf
  412e53:	outs   dx,BYTE PTR ds:[esi]
  412e54:	mov    edi,0x8ae51a1e
  412e59:	mov    edx,0xa7e13fa9
  412e5e:	xchg   ebp,eax
  412e5f:	test   eax,0x31bea8f
  412e64:	mov    ebx,0x5ebf4a4a
  412e69:	xchg   ecx,eax
  412e6a:	lods   al,BYTE PTR ds:[esi]
  412e6b:	mov    ebx,0xd93fa5bf
  412e70:	pop    edi
  412e71:	jp     0x412e66
  412e73:	add    cl,BYTE PTR [esi]
  412e75:	mov    esi,0xf2bfb352
  412e7a:	add    al,0xba
  412e7c:	pop    eax
  412e7d:	(bad)  
  412e7f:	in     al,0xc2
  412e81:	dec    ebp
  412e82:	jns    0x412e73
  412e84:	rol    DWORD PTR [eax+0x4d013ce],cl
  412e8a:	mov    ch,0x7d
  412e8c:	jecxz  0x412f09
  412e8e:	push   edx
  412e8f:	add    DWORD PTR [eax-0x2fefb6df],0x48
  412e96:	fstp   st(4)
  412e98:	data16 loope 0x412e6f
  412e9b:	addr16 (bad) 
  412e9d:	in     al,0xc4
  412e9f:	xor    dl,BYTE PTR [edi+0x2e1d192e]
  412ea5:	mov    ds:0xbda5f3f9,eax
  412eaa:	cwde   
  412eab:	push   esi
  412eac:	call   0x2e27:0x32e98cfa
  412eb3:	sub    cl,BYTE PTR [ebp+0x7a8e7923]
  412eb9:	pop    esi
  412eba:	pop    ecx
  412ebb:	call   FWORD PTR [esi+0x14]
  412ebe:	jge    0x412eca
  412ec0:	leave  
  412ec1:	xchg   DWORD PTR [bx],edx
  412ec4:	cld    
  412ec5:	dec    esp
  412ec6:	cdq    
  412ec7:	imul   DWORD PTR [ebp+eax*2-0x7e]
  412ecb:	mov    eax,0xb008ceff
  412ed0:	jecxz  0x412f12
  412ed2:	sub    bh,0x6b
  412ed5:	nop
  412ed6:	xchg   edi,eax
  412ed7:	repz pop edx
  412ed9:	xchg   DWORD PTR [edi],ebp
  412edb:	int    0x70
  412edd:	daa    
  412ede:	jmp    0xe29f:0xf8022768
  412ee5:	cmp    BYTE PTR [esi],al
  412ee7:	clc    
  412ee8:	jle    0x412efc
  412eea:	cmp    ch,BYTE PTR [ebp-0x2f0aea87]
  412ef0:	add    dl,cl
  412ef2:	pop    esi
  412ef3:	pop    edi
  412ef4:	jnp    0x412efa
  412ef6:	jp     0x412f16
  412ef8:	mov    edx,0x88811363
  412efd:	dec    esp
  412efe:	jg     0x412f1e
  412f00:	inc    ecx
  412f01:	jno    0x412e8c
  412f03:	fidiv  WORD PTR ds:0xa725aac1
  412f09:	pop    ebp
  412f0a:	add    BYTE PTR [eax-0x45],0x6a
  412f0e:	pop    ebx
  412f0f:	into   
  412f10:	sti    
  412f11:	repnz adc DWORD PTR ds:0xe0eb5450,esi
  412f18:	(bad)  
  412f19:	mov    edx,0x276a89d1
  412f1e:	xor    BYTE PTR [edx+edx*2-0x26a35a67],0xd7
  412f26:	xchg   edi,eax
  412f27:	pop    ecx
  412f28:	sub    esp,eax
  412f2a:	inc    ecx
  412f2b:	mov    ds:0xda5709a3,eax
  412f30:	rol    ecx,1
  412f32:	adc    BYTE PTR [eax+0x5c],0x85
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	dec    ebx
  412f38:	lods   eax,DWORD PTR ds:[esi]
  412f39:	ja     0x412f93
  412f3b:	xchg   ecx,eax
  412f3c:	aam    0xa1
  412f3e:	mov    dh,0xba
  412f40:	adc    edi,DWORD PTR [esi]
  412f42:	xchg   ebp,eax
  412f43:	aam    0x95
  412f45:	push   ds
  412f46:	mov    ebx,fs
  412f48:	pop    ecx
  412f49:	pop    ebp
  412f4a:	mov    cl,0x79
  412f4c:	es test eax,0x2eb60c65
  412f52:	jo     0x412f0b
  412f54:	jp     0x412fa8
  412f56:	sti    
  412f57:	xor    ch,ch
  412f59:	pop    ebx
  412f5a:	out    dx,al
  412f5b:	add    DWORD PTR ds:[edx-0x7eda8707],edi
  412f62:	fcomp  QWORD PTR [esi]
  412f64:	dec    esp
  412f65:	daa    
  412f66:	out    0x69,al
  412f68:	add    ebx,edx
  412f6a:	int3   
  412f6b:	(bad)  
  412f6d:	clc    
  412f6e:	or     eax,esi
  412f70:	push   eax
  412f71:	push   ds
  412f72:	xchg   esi,eax
  412f73:	scas   al,BYTE PTR es:[edi]
  412f74:	cmp    ah,BYTE PTR [edx-0xe]
  412f77:	pop    ss
  412f78:	rcl    DWORD PTR [esp+eax*1-0x7e],cl
  412f7c:	rcl    BYTE PTR [ecx],cl
  412f7e:	cld    
  412f7f:	jb     0x412ff8
  412f81:	inc    eax
  412f82:	cmp    ebx,DWORD PTR [esi+0x7a]
  412f85:	mov    ds:0xd0f24df5,al
  412f8a:	enter  0x5da,0xa3
  412f8e:	cwde   
  412f8f:	sub    al,0x80
  412f91:	jge    0x412fe9
  412f93:	add    DWORD PTR [edx],eax
  412f95:	stos   BYTE PTR es:[edi],al
  412f96:	sahf   
  412f97:	jns    0x412faa
  412f99:	jmp    0x9356:0xb372733f
  412fa0:	push   esi
  412fa1:	fiadd  DWORD PTR [edx+0x7150a1bd]
  412fa7:	enter  0x1b5d,0x4a
  412fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fac:	call   0x1bf4abc0
  412fb1:	fdivr  DWORD PTR [di-0x3e75]
  412fb6:	fld    TBYTE PTR [ecx+0x50]
  412fb9:	out    0x33,al
  412fbb:	stc    
  412fbc:	gs jg  0x412fde
  412fbf:	cli    
  412fc0:	je     0x41300a
  412fc2:	std    
  412fc3:	push   0xffffffe5
  412fc5:	iret   
  412fc6:	(bad)  
  412fc7:	or     edx,esi
  412fc9:	sub    al,0xa
  412fcb:	xabort 0x4d
  412fce:	dec    edi
  412fcf:	in     eax,0x67
  412fd1:	jecxz  0x413037
  412fd3:	and    al,0xe6
  412fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd6:	dec    edi
  412fd7:	call   0x84cc63b4
  412fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fdd:	(bad)  
  412fde:	ja     0x412fab
  412fe0:	rcr    ebx,1
  412fe2:	(bad)  
  412fe3:	out    0x92,al
  412fe5:	push   ebp
  412fe6:	iret   
  412fe7:	jb     0x413034
  412fe9:	or     al,BYTE PTR [edi-0x4d]
  412fec:	test   DWORD PTR [edi-0xe666b54],esi
  412ff2:	outs   dx,BYTE PTR ds:[esi]
  412ff3:	sub    BYTE PTR [ebx+0x4],bh
  412ff6:	mov    ds,WORD PTR [edi]
  412ff8:	sub    bl,BYTE PTR [ebx]
  412ffa:	pop    edx
  412ffb:	dec    ebp
  412ffc:	dec    eax
  412ffd:	jae    0x413009
  412fff:	aas    
  413000:	sar    DWORD PTR [ecx],1
  413002:	xor    eax,0x6ccf6e28
  413007:	neg    DWORD PTR [edx+0x2f]
  41300a:	mov    edx,0x3ebc4e22
  41300f:	mov    esi,0x44ec473e
  413014:	popf   
  413015:	gs clc 
  413017:	xor    esp,esp
  413019:	iret   
  41301a:	push   ebx
  41301b:	cmp    DWORD PTR [edx+0xa],edi
  41301e:	mov    edi,DWORD PTR [edx+eiz*8-0x35]
  413022:	xchg   ecx,eax
  413023:	stos   DWORD PTR es:[edi],eax
  413024:	adc    DWORD PTR [ecx],edi
  413026:	adc    DWORD PTR [ecx-0x441a88e6],eax
  41302c:	popa   
  41302d:	int    0x7d
  41302f:	add    al,0xe1
  413031:	adc    al,BYTE PTR [edx+0x60]
  413034:	(bad)  
  413035:	retf   
  413036:	jbe    0x41300e
  413038:	pop    esp
  413039:	in     al,0x3f
  41303b:	loop   0x41305a
  41303d:	jne    0x413035
  41303f:	mul    ebx
  413041:	jae    0x413029
  413043:	pop    esi
  413044:	cwde   
  413045:	mov    ebx,ebx
  413047:	call   0x35c6:0x46876d2d
  41304e:	clc    
  41304f:	(bad)
  413053:	pusha  
  413054:	ss data16 jmp 0x4130c8
  413058:	test   ch,0xe5
  41305b:	xchg   esi,eax
  41305c:	xor    edi,DWORD PTR [ebx+0x269b0cd4]
  413062:	xchg   ebx,eax
  413063:	cmp    ah,BYTE PTR [edi+0x5f]
  413066:	stos   DWORD PTR es:[edi],eax
  413067:	and    al,0xf
  413069:	test   al,0xc4
  41306b:	cmp    eax,0x8d5a4240
  413070:	out    0x97,eax
  413072:	movzx  esp,WORD PTR [edx-0x4c]
  413076:	popa   
  413077:	pop    edi
  413078:	mov    bh,0x6c
  41307a:	push   0x9615025f
  41307f:	mov    ds,edx
  413081:	in     eax,dx
  413082:	pop    esp
  413083:	dec    esp
  413084:	mov    esi,DWORD PTR [eax-0x79bce893]
  41308a:	mov    bh,0xf1
  41308c:	ds xchg dl,dl
  41308f:	in     al,dx
  413090:	push   ecx
  413091:	ja     0x4130cb
  413093:	xor    edi,DWORD PTR [edi+0x3bc88142]
  413099:	call   0x3ecc2e72
  41309e:	test   eax,edi
  4130a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a1:	mov    ch,0x1b
  4130a3:	cli    
  4130a4:	mov    ch,0x73
  4130a6:	leave  
  4130a7:	push   edx
  4130a8:	int3   
  4130a9:	mov    fs,WORD PTR [edi]
  4130ab:	pusha  
  4130ac:	push   edx
  4130ad:	add    dl,BYTE PTR [esi-0x767a79d0]
  4130b3:	xor    eax,0xcc284638
  4130b8:	dec    edi
  4130b9:	adc    eax,0x7ded954e
  4130be:	dec    esp
  4130bf:	lock pop ebx
  4130c1:	xor    BYTE PTR [eax-0x17],ah
  4130c4:	dec    ecx
  4130c5:	cwde   
  4130c6:	dec    eax
  4130c7:	pop    edx
  4130c8:	cli    
  4130c9:	sub    eax,0xd835d78b
  4130ce:	dec    edx
  4130cf:	add    eax,0xb0b32f0d
  4130d4:	js     0x4130b6
  4130d6:	out    0x50,eax
  4130d8:	dec    edx
  4130d9:	in     eax,0x12
  4130db:	xchg   edi,eax
  4130dc:	ja     0x4130c7
  4130de:	test   eax,0x449ff868
  4130e3:	pop    ebx
  4130e4:	cmp    dl,0xdf
  4130e7:	cmp    ebp,DWORD PTR [eax-0x416f7ff3]
  4130ed:	jp     0x413161
  4130ef:	sbb    dh,BYTE PTR [ecx+0x29c8643]
  4130f5:	les    edi,FWORD PTR [esi-0x56]
  4130f8:	repnz in eax,dx
  4130fa:	scas   al,BYTE PTR es:[edi]
  4130fb:	or     al,ch
  4130fd:	int3   
  4130fe:	xor    dh,al
  413100:	jno    0x4130aa
  413102:	pushf  
  413103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413104:	jb     0x4130aa
  413106:	imul   eax,DWORD PTR [ecx-0x1a40f20d],0x4b
  41310d:	pop    ds
  41310e:	ret    0x1c6b
  413111:	lds    esi,FWORD PTR [eax-0x10]
  413114:	lds    esi,FWORD PTR ds:0x7df42768
  41311a:	test   al,0xfa
  41311c:	add    eax,0xde418cd2
  413121:	mov    edx,0x76fd2854
  413126:	jo     0x41313b
  413128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413129:	lods   al,BYTE PTR ds:[esi]
  41312a:	cld    
  41312b:	jecxz  0x4131a1
  41312d:	xchg   esi,eax
  41312e:	in     eax,dx
  41312f:	test   BYTE PTR [edi],0x36
  413132:	mov    bl,0xf9
  413134:	lds    ebx,FWORD PTR [ebx]
  413136:	outs   dx,BYTE PTR ds:[esi]
  413137:	lods   al,BYTE PTR ds:[esi]
  413138:	jb     0x4130cc
  41313a:	push   ss
  41313b:	ja     0x413121
  41313d:	xchg   ecx,eax
  41313e:	jne    0x413137
  413140:	jo     0x4130d8
  413142:	imul   ebp,DWORD PTR [esp+eax*4],0x50
  413146:	or     DWORD PTR [ecx],edi
  413148:	fiadd  WORD PTR [ebx]
  41314a:	out    0x7b,al
  41314c:	ret    0xc05
  41314f:	sbb    eax,0xcdf37540
  413154:	sbb    al,0x6a
  413156:	push   0xffffffa0
  413158:	jmp    DWORD PTR [ecx]
  41315a:	xchg   esi,esi
  41315c:	fdiv   QWORD PTR [esi+0x14cb8729]
  413162:	stos   DWORD PTR es:[edi],eax
  413163:	daa    
  413164:	cli    
  413165:	inc    edi
  413166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413167:	xchg   BYTE PTR [ebx],cl
  413169:	pop    ds
  41316a:	mov    esi,0x14eaeea3
  41316f:	sar    DWORD PTR [eax-0x77],0xa4
  413173:	cdq    
  413174:	xor    eax,0x7706c50
  413179:	(bad)  
  41317a:	xlat   BYTE PTR ds:[ebx]
  41317b:	jmp    0x829d:0x6753e0de
  413182:	ja     0x413108
  413184:	adc    al,BYTE PTR [edx-0x50]
  413187:	jp     0x41310b
  413189:	pushf  
  41318a:	fcom   DWORD PTR [edi-0x50]
  41318d:	mov    ebp,0x764a8d6a
  413192:	popf   
  413193:	pop    esp
  413194:	jb     0x4131c4
  413196:	or     DWORD PTR [ebp-0x6db0b550],edx
  41319c:	loope  0x41312d
  41319e:	cdq    
  41319f:	cmp    ch,BYTE PTR [ecx]
  4131a1:	cdq    
  4131a2:	sbb    BYTE PTR [ecx+0x7ea73369],ch
  4131a8:	adc    eax,edx
  4131aa:	sbb    BYTE PTR [eax-0x29276b90],ch
  4131b0:	mov    esp,0x1ef7d40b
  4131b5:	out    dx,eax
  4131b6:	cli    
  4131b7:	pop    ds
  4131b8:	jb     0x41318a
  4131ba:	imul   eax,DWORD PTR [eax+0x782e6372],0x48221bda
  4131c4:	and    eax,0xc26085a5
  4131c9:	cdq    
  4131ca:	popa   
  4131cb:	stc    
  4131cc:	sub    eax,DWORD PTR [ebp-0x6d]
  4131cf:	in     eax,dx
  4131d0:	or     DWORD PTR [ebx],ebx
  4131d2:	aas    
  4131d3:	sahf   
  4131d4:	jg     0x413170
  4131d6:	hlt    
  4131d7:	mov    bl,0x64
  4131d9:	pop    esp
  4131da:	add    BYTE PTR [edx+eax*1],ah
  4131dd:	xchg   edi,eax
  4131de:	xor    DWORD PTR [ebx-0x66],edx
  4131e1:	(bad)  
  4131e2:	(bad)  [edx-0x39]
  4131e5:	retf   
  4131e6:	addr16 pop es
  4131e8:	daa    
  4131e9:	inc    eax
  4131ea:	in     eax,0x98
  4131ec:	inc    ebp
  4131ed:	fsubr  st(5),st
  4131ef:	inc    ebp
  4131f0:	mov    bl,0xcf
  4131f2:	out    dx,eax
  4131f3:	sbb    eax,0x897dfea2
  4131f8:	cmp    eax,0x907e8286
  4131fd:	xor    cl,0xe6
  413200:	(bad)  
  413201:	aaa    
  413202:	mov    ah,0x28
  413204:	mov    edi,0xfbb169e
  413209:	dec    edx
  41320a:	repz loop 0x4131ef
  41320d:	icebp  
  41320e:	xchg   ebp,eax
  41320f:	and    bh,BYTE PTR [eax]
  413211:	pusha  
  413212:	js     0x4131cc
  413214:	inc    edx
  413215:	or     al,BYTE PTR [esi]
  413217:	mov    bl,0xc6
  413219:	push   esi
  41321a:	mov    ah,0x5f
  41321c:	inc    edi
  41321d:	sahf   
  41321e:	inc    ebx
  41321f:	rcl    BYTE PTR [ebp+0x578f0f69],1
  413225:	push   0xffffff90
  413227:	mov    cl,0xc3
  413229:	dec    esi
  41322a:	shr    DWORD PTR [ecx-0x29b54a94],0x91
  413231:	xor    DWORD PTR [esi+0x67],ecx
  413234:	cmp    al,0x6a
  413236:	out    0xf,al
  413238:	mov    esi,0x628f887e
  41323d:	repnz das 
  41323f:	bound  esi,QWORD PTR [ecx]
  413241:	stos   DWORD PTR es:[edi],eax
  413242:	lods   al,BYTE PTR ds:[esi]
  413243:	jmp    0x413277
  413245:	adc    al,0x6a
  413247:	cli    
  413248:	cmp    al,0x68
  41324a:	cmp    DWORD PTR [ebx-0x56],edx
  41324d:	ja     0x413263
  41324f:	leave  
  413250:	mov    edx,0x1c57dd3
  413255:	sub    BYTE PTR [esi-0x55],dl
  413258:	jae    0x413214
  41325a:	ds sbb bh,dh
  41325d:	jl     0x4131e5
  41325f:	mov    bl,0x1b
  413261:	test   DWORD PTR [edi-0x1e],eax
  413264:	cld    
  413265:	bound  ebp,QWORD PTR [ebx-0xf]
  413268:	std    
  413269:	(bad)  gs:[edi]
  41326c:	pop    edi
  41326d:	mov    DWORD PTR [edi-0x32],ebx
  413270:	pop    edx
  413271:	jge    0x413230
  413273:	sbb    BYTE PTR ds:0x562aafc4,0x99
  41327a:	sub    bh,BYTE PTR [eax-0x494430de]
  413280:	sub    DWORD PTR [esi],esi
  413282:	cs cdq 
  413284:	add    ebx,DWORD PTR [eax-0x71]
  413287:	mov    bl,0x94
  413289:	pop    ebp
  41328a:	movsx  esi,WORD PTR ds:0xdaf38aa7
  413291:	out    dx,al
  413292:	mov    ch,0xf8
  413294:	sbb    ah,BYTE PTR [edi+0x66]
  413297:	scas   eax,DWORD PTR es:[edi]
  413298:	lahf   
  413299:	xlat   BYTE PTR ds:[ebx]
  41329a:	aam    0x25
  41329c:	imul   edi,DWORD PTR [edi],0x26
  41329f:	fyl2x  
  4132a1:	pop    esi
  4132a2:	cdq    
  4132a3:	mov    edx,0x5c767804
  4132a8:	cs (bad) 
  4132aa:	xor    esp,edx
  4132ac:	stos   DWORD PTR es:[edi],eax
  4132ad:	dec    ecx
  4132ae:	clc    
  4132af:	mov    ebp,0xbace72f6
  4132b4:	mov    eax,ds:0x7c89f79f
  4132ba:	cli    
  4132bb:	dec    ebp
  4132bc:	ds pop ebx
  4132be:	jo     0x413251
  4132c0:	lea    si,[ecx+ecx*4]
  4132c4:	(bad)  
  4132c5:	push   esp
  4132c6:	jle    0x4132af
  4132c8:	sbb    al,0x38
  4132ca:	pop    edi
  4132cb:	es inc edi
  4132cd:	aam    0xb8
  4132cf:	shl    ecx,0xcf
  4132d2:	adc    edi,DWORD PTR [ebp+0x6a4c222e]
  4132d8:	out    dx,al
  4132d9:	mov    eax,0x8541e50a
  4132de:	sbb    edi,ebx
  4132e0:	in     al,0x9
  4132e2:	arpl   WORD PTR [eax+0x1f5cb99b],sp
  4132e8:	mov    ebx,0x85b80ad5
  4132ed:	jo     0x4132dd
  4132ef:	aam    0x9b
  4132f1:	dec    esp
  4132f2:	sub    ch,BYTE PTR [ecx]
  4132f4:	or     edi,DWORD PTR [edi-0x6ddd8d86]
  4132fa:	js     0x413367
  4132fc:	pop    ds
  4132fd:	push   ss
  4132fe:	and    eax,0x4ea32950
  413303:	cmp    ah,bh
  413305:	push   esp
  413306:	pop    ecx
  413307:	sub    DWORD PTR [ebx-0x14],ebx
  41330a:	xor    DWORD PTR [esi+0x38ce5a85],edx
  413310:	scas   al,BYTE PTR es:[edi]
  413311:	xchg   esp,eax
  413312:	icebp  
  413313:	aad    0x15
  413315:	dec    eax
  413316:	(bad)  
  413317:	hlt    
  413318:	in     al,dx
  413319:	ja     0x41332b
  41331b:	aaa    
  41331c:	cli    
  41331d:	cmp    dl,BYTE PTR [ecx]
  41331f:	aaa    
  413320:	mov    cl,0x74
  413322:	fisubr DWORD PTR [edx-0x76]
  413325:	sbb    eax,0x19628e47
  41332a:	aas    
  41332b:	push   eax
  41332c:	icebp  
  41332d:	or     edi,ecx
  41332f:	out    0x39,al
  413331:	je     0x4132f3
  413333:	lods   eax,DWORD PTR cs:[esi]
  413335:	sub    al,0x78
  413337:	jl     0x4132e9
  413339:	imul   esi,DWORD PTR [eax+0x53],0xc70a89bc
  413340:	add    eax,0x420e8e
  413345:	push   ss
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [ebx+0x420e8e3d],al
  41334e:	add    BYTE PTR [eax],al
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	and    DWORD PTR [edx],eax
  413707:	or     DWORD PTR [eax+0x7a7a73be],esp
  41370d:	or     bl,BYTE PTR [edi+0x7a]
  413710:	jp     0x4136b7
  413712:	xor    DWORD PTR [edi],esp
  413714:	ret    0xd0a1
  413717:	jns    0x4136d8
  413719:	leave  
  41371a:	inc    esp
  41371b:	pop    ebp
  41371c:	xor    BYTE PTR [edi+0xde4cf0d],bh
  413722:	in     al,0xf6
  413724:	push   esp
  413725:	add    ecx,DWORD PTR [ebp+0x21]
  413728:	stos   DWORD PTR es:[edi],eax
  413729:	or     dl,BYTE PTR [edx]
  41372b:	sub    ebx,edx
  41372d:	ds call 0xa72fda2
  413733:	idiv   eax
  413735:	mov    ds:0xe87f346e,al
  41373a:	or     eax,0x9b7760e4
  41373f:	lea    eax,[eax]
  413741:	and    edi,DWORD PTR [edx+eax*4+0x36b3dc99]
  413748:	popf   
  413749:	gs jns 0x413725
  41374c:	neg    ecx
  41374e:	mov    dl,0x7e
  413750:	sub    eax,0x1aab4c1c
  413755:	jg     0x41378b
  413757:	adc    ebx,DWORD PTR [esi+ebx*2+0x3fc731dc]
  41375e:	mov    edx,0xda42c
  413763:	pushf  
  413764:	in     eax,0x95
  413766:	fcmovnbe st,st(5)
  413768:	iret   
  413769:	or     eax,0xba401932
  41376e:	sbb    ebp,DWORD PTR [ecx+0x5e00030]
  413774:	idiv   DWORD PTR cs:[eax]
  413777:	sbb    ebx,ebx
  413779:	pop    esi
  41377a:	cld    
  41377b:	call   0xfc43:0x9018ccf2
  413782:	out    dx,al
  413783:	sub    al,0xe5
  413785:	or     eax,0xba9ab324
  41378a:	dec    esp
  41378b:	imul   ecx,DWORD PTR [ecx],0xffffffca
  41378e:	push   0xffffffed
  413790:	popa   
  413791:	ja     0x41377a
  413793:	retf   
  413794:	loop   0x413803
  413796:	das    
  413797:	dec    eax
  413798:	sub    bh,BYTE PTR [ebp+0xcae5fe0]
  41379e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41379f:	rcr    BYTE PTR cs:[edi],1
  4137a2:	jle    0x41377e
  4137a4:	dec    DWORD PTR [edi]
  4137a6:	pop    eax
  4137a7:	add    al,0xae
  4137a9:	mov    al,ds:0x6d7dd483
  4137ae:	jl     0x4137bc
  4137b0:	push   eax
  4137b1:	outs   dx,BYTE PTR ds:[esi]
  4137b2:	pop    ebx
  4137b3:	push   esi
  4137b4:	xor    al,BYTE PTR [eax]
  4137b6:	jae    0x41381f
  4137b8:	lods   eax,DWORD PTR ds:[esi]
  4137b9:	call   0x3258:0xc1ac9d20
  4137c0:	lds    esp,FWORD PTR [esi+0x20c2e254]
  4137c6:	or     BYTE PTR [edi],0x15
  4137c9:	xor    DWORD PTR [ebp-0x3f],esi
  4137cc:	pop    eax
  4137ce:	jmp    0xe61f:0x106b9ff1
  4137d5:	cmp    dl,BYTE PTR [edi+0x6b]
  4137d8:	fbstp  TBYTE PTR [edi+0x2ff90139]
  4137de:	mov    edx,0x5a4184ca
  4137e3:	jp     0x413802
  4137e5:	das    
  4137e6:	sbb    BYTE PTR [esi-0x31d4f771],dh
  4137ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ed:	lock push edi
  4137ef:	(bad)  
  4137f0:	push   ds
  4137f1:	jne    0x4137e2
  4137f3:	lahf   
  4137f4:	pushf  
  4137f5:	dec    edx
  4137f6:	inc    esp
  4137f7:	jbe    0x4137e4
  4137f9:	sbb    edx,DWORD PTR [eax-0x3b5e3890]
  4137ff:	(bad)  
  413800:	cmp    DWORD PTR [ebp+0x1ad1ba],ebp
  413806:	dec    esi
  413807:	leave  
  413808:	and    esi,DWORD PTR [eax]
  41380a:	xlat   BYTE PTR ds:[ebx]
  41380b:	xchg   ebx,eax
  41380c:	jl     0x4137f4
  41380e:	repz imul edx,DWORD PTR [ecx-0x8],0xe4b870b7
  413816:	js     0x4137c3
  413818:	(bad)  
  413819:	jb     0x4137e5
  41381b:	fst    QWORD PTR [edi+0xb]
  41381e:	popf   
  41381f:	ins    DWORD PTR es:[edi],dx
  413820:	jae    0x413815
  413822:	jnp    0x413852
  413824:	je     0x4137e3
  413826:	push   cs
  413827:	rol    DWORD PTR [ecx+0x75],1
  41382a:	and    eax,0x3e82ce0a
  41382f:	pop    esp
  413830:	ins    DWORD PTR es:[edi],dx
  413831:	ror    DWORD PTR [ecx-0x5568c912],1
  413837:	retf   0x563
  41383a:	xchg   ebx,eax
  41383b:	mov    WORD PTR [edx-0x51],?
  41383e:	scas   al,BYTE PTR es:[edi]
  41383f:	mov    ds:0xa53677b6,eax
  413844:	push   ecx
  413845:	inc    edx
  413846:	inc    esp
  413847:	inc    ecx
  413848:	lahf   
  413849:	mov    BYTE PTR [edx],al
  41384b:	sub    esp,ebp
  41384d:	mov    esi,0x21e91dcf
  413852:	jae    0x4137fe
  413854:	lds    esi,FWORD PTR [eax]
  413856:	jae    0x413831
  413858:	pop    edx
  413859:	pop    eax
  41385a:	xor    BYTE PTR [esi+0x7f],dl
  41385d:	sbb    BYTE PTR [esi+0x1be28f30],dl
  413863:	aam    0x99
  413865:	or     edx,0xffffffd4
  413868:	in     al,0x2f
  41386a:	ffreep st(1)
  41386c:	call   0xbca7eb6a
  413871:	dec    ebp
  413872:	bnd call 0xa174013a
  413878:	push   ecx
  413879:	and    eax,edx
  41387b:	push   esp
  41387c:	pop    ebx
  41387d:	dec    ebx
  41387e:	adc    al,0x77
  413880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413881:	stc    
  413882:	push   0x71
  413884:	retf   0x8a09
  413887:	adc    BYTE PTR [ecx+0x30],al
  41388a:	xchg   ebp,eax
  41388b:	mov    esi,0x6da28909
  413890:	neg    BYTE PTR [esi-0x51747dde]
  413896:	and    bl,BYTE PTR [ecx+0x38]
  413899:	adc    DWORD PTR [eax+0x45],edx
  41389c:	fild   QWORD PTR [edi+0x12]
  41389f:	pop    ss
  4138a0:	cmc    
  4138a1:	mov    bh,0x5f
  4138a3:	enter  0xd768,0xe7
  4138a7:	int3   
  4138a8:	and    bl,ah
  4138aa:	loopne 0x4138f9
  4138ac:	out    dx,al
  4138ad:	push   edi
  4138ae:	xor    BYTE PTR [edx+0x29],dl
  4138b1:	or     ecx,esp
  4138b3:	inc    ebx
  4138b4:	aam    0x84
  4138b6:	cwde   
  4138b7:	jnp    0x413913
  4138b9:	push   ecx
  4138ba:	mov    eax,ds:0x78f1da6c
  4138bf:	out    0xea,eax
  4138c1:	enter  0xad84,0x62
  4138c5:	sbb    ch,ch
  4138c7:	cld    
  4138c8:	or     eax,DWORD PTR ss:[ecx+0x34]
  4138cc:	dec    eax
  4138cd:	dec    eax
  4138ce:	pusha  
  4138cf:	mov    edx,0xca69bd65
  4138d4:	sti    
  4138d5:	mov    esp,0x73ba0d7a
  4138da:	(bad)  [edx+0x58975062]
  4138e0:	out    0xdf,al
  4138e2:	mov    BYTE PTR ds:0xf477c12c,cl
  4138e8:	out    dx,eax
  4138e9:	aam    0xd5
  4138eb:	pop    es
  4138ec:	push   eax
  4138ed:	cmp    DWORD PTR [ebx],edi
  4138ef:	loope  0x4138b0
  4138f1:	outs   dx,DWORD PTR ds:[esi]
  4138f2:	icebp  
  4138f3:	or     eax,0x9a001df6
  4138f8:	clc    
  4138f9:	cwde   
  4138fa:	xchg   ecx,eax
  4138fb:	xchg   ebx,eax
  4138fc:	hlt    
  4138fd:	inc    esp
  4138fe:	xchg   esi,eax
  4138ff:	xchg   ebp,eax
  413900:	adc    edi,DWORD PTR [edx-0x7eec9769]
  413906:	stos   DWORD PTR es:[edi],eax
  413907:	sti    
  413908:	mov    edx,0x14a92be7
  41390d:	xchg   ebp,eax
  41390e:	test   BYTE PTR [edx-0x2f1ba989],ah
  413914:	xchg   ecx,eax
  413915:	in     eax,0x47
  413917:	lahf   
  413918:	dec    eax
  413919:	or     al,BYTE PTR [ebx]
  41391b:	js     0x4138da
  41391d:	push   eax
  41391e:	push   ecx
  41391f:	ret    
  413920:	mov    al,ds:0x629f3fd5
  413925:	dec    esi
  413926:	jbe    0x41392a
  413928:	push   DWORD PTR cs:[edx]
  41392b:	and    eax,0x88e505b8
  413930:	loop   0x4138eb
  413932:	lahf   
  413933:	push   ebx
  413934:	pop    edx
  413935:	mov    ch,0x3e
  413937:	cmp    DWORD PTR [ecx-0x5c95f07b],esi
  41393d:	sbb    al,0xa1
  413940:	retf   
  413941:	xor    BYTE PTR [esi+0x7d9b2bb1],bh
  413947:	xor    al,0x43
  413949:	push   ebp
  41394a:	cmp    dl,ah
  41394c:	gs sub al,0x5d
  41394f:	ja     0x41399b
  413951:	cmp    BYTE PTR [edx-0x26],ch
  413954:	or     cl,BYTE PTR [eax]
  413956:	inc    edi
  413957:	sbb    eax,0x261d3324
  41395c:	enter  0x3f20,0x74
  413960:	jle    0x413925
  413962:	retf   
  413963:	lods   eax,DWORD PTR ds:[esi]
  413964:	or     cl,BYTE PTR [ebp+0x43c19343]
  41396a:	inc    esp
  41396b:	pop    eax
  41396c:	mov    al,0x83
  41396e:	inc    edx
  41396f:	ficom  WORD PTR [edi-0x2f74d709]
  413975:	add    DWORD PTR [edi-0x18ed3f0f],edi
  41397b:	add    al,0x2b
  41397d:	push   ecx
  41397e:	or     BYTE PTR [esi+0x4f6e30fa],bh
  413984:	cmp    edx,esp
  413986:	sahf   
  413987:	retf   
  413988:	push   ebx
  413989:	into   
  41398a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41398b:	xor    eax,0x1dda4918
  413990:	sub    ecx,ecx
  413992:	idiv   BYTE PTR [edx+0x2]
  413995:	test   eax,0x11749afa
  41399a:	xor    BYTE PTR [ebx],0x8f
  41399d:	or     BYTE PTR [ebp-0x18],0xfa
  4139a1:	ficomp DWORD PTR [edi+0x6f63fba3]
  4139a7:	repnz sbb BYTE PTR [esp+edx*4],ah
  4139ab:	out    dx,al
  4139ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ad:	xor    esi,ebx
  4139af:	xchg   ebp,eax
  4139b0:	stos   DWORD PTR es:[edi],eax
  4139b1:	lds    esi,FWORD PTR [edx+edx*2-0xa145083]
  4139b8:	clc    
  4139b9:	or     ebx,ebp
  4139bb:	ins    BYTE PTR es:[edi],dx
  4139bc:	add    ecx,DWORD PTR [edi-0x40f5b798]
  4139c2:	add    ch,dl
  4139c4:	shl    DWORD PTR [edi+0x450f2688],cl
  4139ca:	les    edx,FWORD PTR [eax-0x71b51759]
  4139d0:	gs sti 
  4139d2:	xchg   ecx,eax
  4139d3:	fmulp  st(6),st
  4139d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d6:	clc    
  4139d7:	sbb    esp,esi
  4139d9:	cmp    eax,0xb5de0f29
  4139de:	mov    dl,0x80
  4139e0:	repz adc al,0x8a
  4139e3:	jecxz  0x4139ae
  4139e5:	test   al,0x7
  4139e7:	sbb    DWORD PTR [edi],0xba745694
  4139ed:	leave  
  4139ee:	retf   0xd62e
  4139f1:	xor    esp,eax
  4139f3:	sbb    eax,0x5a02b804
  4139f8:	mov    ah,0x61
  4139fa:	data16 mov bh,0x4a
  4139fd:	movaps xmm4,XMMWORD PTR [ebx-0x17]
  413a01:	xor    eax,0xdd68db29
  413a06:	fst    st(6)
  413a08:	out    0x95,eax
  413a0a:	inc    DWORD PTR [ebp+0x2c4fd1c1]
  413a10:	dec    edi
  413a11:	test   BYTE PTR [eax-0xbb2110c],cl
  413a17:	and    eax,0xd6c55a3f
  413a1c:	mov    eax,ebp
  413a1e:	mov    cl,0x76
  413a20:	loope  0x4139d0
  413a22:	xor    BYTE PTR [edx+0xd],ah
  413a25:	ds dec edi
  413a27:	icebp  
  413a28:	in     eax,0xf
  413a2a:	pop    ecx
  413a2b:	out    dx,al
  413a2c:	popf   
  413a2d:	mov    bh,0xae
  413a2f:	add    al,0xbd
  413a31:	pop    esp
  413a32:	push   0xffffff96
  413a34:	sbb    eax,0x27f1eace
  413a39:	jge    0x413a54
  413a3b:	mov    bh,0xf3
  413a3d:	jnp    0x413ab5
  413a3f:	int    0xbc
  413a41:	xchg   ebx,eax
  413a42:	inc    eax
  413a43:	add    DWORD PTR [ebx],esi
  413a45:	daa    
  413a46:	dec    ebp
  413a47:	xchg   ecx,eax
  413a48:	out    dx,eax
  413a49:	mov    edi,0x2c32229b
  413a4e:	push   edx
  413a4f:	stos   DWORD PTR es:[edi],eax
  413a50:	out    0x20,al
  413a52:	cmp    ebp,ebp
  413a54:	xlat   BYTE PTR ds:[ebx]
  413a55:	dec    ebx
  413a56:	loop   0x4139ee
  413a58:	pop    ss
  413a59:	pop    ecx
  413a5a:	out    dx,eax
  413a5b:	inc    ebp
  413a5c:	inc    ebx
  413a5d:	sbb    dh,al
  413a5f:	push   0xffffffeb
  413a61:	loope  0x413ab1
  413a63:	shl    DWORD PTR [eax-0x4c],1
  413a66:	call   0xeaddd535
  413a6b:	sbb    edx,edi
  413a6d:	jae    0x413a93
  413a6f:	(bad)  
  413a71:	xchg   edx,eax
  413a72:	or     ch,BYTE PTR [edi+0x75]
  413a75:	sub    eax,0xc2844dc0
  413a7a:	ds enter 0x9e7c,0xe2
  413a7f:	jl     0x413a8a
  413a81:	sbb    ah,dl
  413a83:	push   0x47
  413a85:	fwait
  413a86:	add    eax,0xefc99185
  413a8b:	mov    cl,0xe3
  413a8d:	test   BYTE PTR [ebp+0x7a],dl
  413a90:	mov    BYTE PTR [ebx-0x6a],ch
  413a93:	jo     0x413a84
  413a95:	int    0x1a
  413a97:	jnp    0x413b17
  413a99:	or     ebx,edi
  413a9b:	shl    BYTE PTR [edx+0x24],1
  413a9e:	int    0xe
  413aa0:	ins    DWORD PTR es:[edi],dx
  413aa1:	mov    ebp,0xca99ec8
  413aa6:	aam    0xca
  413aa8:	push   esi
  413aa9:	retf   
  413aaa:	jg     0x413ad2
  413aac:	into   
  413aad:	retf   0x825a
  413ab0:	sub    dl,bl
  413ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab3:	mov    ds:0xc72a4565,al
  413ab8:	jae    0x413b17
  413aba:	cmp    eax,0x91fb6785
  413abf:	pop    edi
  413ac0:	jle    0x413aec
  413ac2:	xchg   ecx,eax
  413ac3:	sbb    esi,DWORD PTR [ebx+0x3e7b618b]
  413ac9:	push   esi
  413aca:	je     0x413a64
  413acc:	mov    cl,0xac
  413ace:	cmp    BYTE PTR [edx],0x56
  413ad1:	xor    ch,dl
  413ad3:	xchg   ebp,eax
  413ad4:	mov    ah,0x5f
  413ad6:	cld    
  413ad7:	or     DWORD PTR [ecx+0x58],0x10
  413adb:	lea    esp,[ebx]
  413add:	into   
  413ade:	push   edi
  413adf:	jmp    0x4f5392df
  413ae4:	cs repnz inc ecx
  413ae7:	jns    0x413b23
  413ae9:	sti    
  413aea:	test   al,0x11
  413aec:	cmp    BYTE PTR [edi],0xf2
  413aef:	cmp    al,0x7d
  413af1:	dec    esi
  413af2:	in     eax,dx
  413af3:	ja     0x413ac5
  413af5:	in     eax,0xdf
  413af7:	push   ebp
  413af8:	xchg   ebx,eax
  413af9:	fsubr  st,st(4)
  413afb:	popf   
  413afc:	inc    edi
  413afd:	loope  0x413b51
  413aff:	test   DWORD PTR [ecx+edx*2+0x3fc2fff4],0x9e449ee6
  413b0a:	or     ebx,0x8aa650bd
  413b10:	outs   dx,DWORD PTR ds:[esi]
  413b11:	push   ds
  413b12:	or     DWORD PTR [ecx+esi*1],esi
  413b15:	mov    edx,0xbf6b879e
  413b1a:	fcomip st,st(3)
  413b1c:	mov    ecx,0x62e2c752
  413b21:	imul   esp,edx,0xc1fa1bf4
  413b27:	sbb    DWORD PTR [ebp+0x3b],eax
  413b2a:	retf   0x6fc6
  413b2d:	(bad)  
  413b2e:	lods   eax,DWORD PTR ds:[esi]
  413b2f:	(bad)  
  413b30:	in     al,0xe
  413b32:	int3   
  413b33:	int3   
  413b34:	sbb    esi,esp
  413b36:	xor    DWORD PTR [ebx],esi
  413b38:	shl    DWORD PTR [ebp+0x5d],cl
  413b3b:	add    bl,BYTE PTR [edx+ebp*1]
  413b3e:	dec    ebx
  413b3f:	icebp  
  413b40:	test   eax,0x2a541af3
  413b45:	push   ss
  413b46:	ret    0xe04f
  413b49:	out    dx,eax
  413b4a:	pop    edx
  413b4b:	sub    esp,DWORD PTR [ecx-0x19]
  413b4e:	sbb    al,0xdd
  413b50:	cmp    bl,BYTE PTR [edx]
  413b52:	lods   eax,DWORD PTR ds:[esi]
  413b53:	cwde   
  413b54:	or     ebp,DWORD PTR [eax-0x4f7eaa3c]
  413b5a:	push   eax
  413b5b:	push   eax
  413b5c:	and    DWORD PTR ds:0x4cf76aec,esi
  413b62:	mov    al,ds:0x76fdba57
  413b67:	inc    ebx
  413b68:	jmp    0xc57d2532
  413b6d:	push   edi
  413b6e:	mov    ds:0x5586835c,al
  413b73:	adc    dl,cl
  413b75:	imul   ebx,DWORD PTR [ebx+0x6da7227f],0xffffffb5
  413b7c:	fisub  DWORD PTR [edi-0x1dec9e8c]
  413b82:	das    
  413b83:	push   edx
  413b84:	mov    ah,0xad
  413b86:	sbb    DWORD PTR [esi],esi
  413b88:	adc    dl,0x5f
  413b8b:	and    DWORD PTR [esi-0xc],edi
  413b8e:	pop    ecx
  413b8f:	xchg   edi,eax
  413b90:	mov    edx,0x38023410
  413b95:	jbe    0x413b75
  413b97:	jle    0x413c13
  413b99:	pop    es
  413b9a:	fs jno 0x413b29
  413b9d:	popa   
  413b9e:	xchg   edx,eax
  413b9f:	inc    esp
  413ba0:	(bad)  
  413ba2:	call   0x8e6379a3
  413ba7:	lods   al,BYTE PTR ds:[esi]
  413ba8:	call   0x814d0216
  413bad:	xor    DWORD PTR [esi],ebx
  413baf:	lock lods eax,DWORD PTR ds:[esi]
  413bb1:	mov    DWORD PTR [eax-0x1cfcd26c],edx
  413bb7:	mov    WORD PTR [ebx+0x3e378767],?
  413bbd:	out    0x64,eax
  413bbf:	lea    ebp,[ecx+0x4e152922]
  413bc5:	std    
  413bc6:	mov    esp,0xed00bbcb
  413bcb:	scas   al,BYTE PTR es:[edi]
  413bcc:	cmp    DWORD PTR [ebp+0x58],0x2ad71d4c
  413bd3:	outs   dx,DWORD PTR ds:[esi]
  413bd4:	mov    bl,0x2c
  413bd6:	int    0xc6
  413bd8:	test   DWORD PTR [edi+0x2],ebp
  413bdb:	xchg   ebx,eax
  413bdc:	xchg   esi,eax
  413bdd:	sti    
  413bde:	jecxz  0x413bc0
  413be0:	loope  0x413c58
  413be2:	pop    ecx
  413be3:	frndint 
  413be5:	jmp    0x413b9d
  413be7:	cmp    BYTE PTR [edi+0x1a],dl
  413bea:	fwait
  413beb:	in     al,0xfd
  413bed:	mov    dl,0x52
  413bef:	xchg   edx,eax
  413bf0:	mov    ds:0x2899dc70,al
  413bf5:	cmp    eax,DWORD PTR [edx+0x3c]
  413bf8:	das    
  413bf9:	mov    al,0x9
  413bfb:	out    0x97,al
  413bfd:	cdq    
  413bfe:	or     ecx,DWORD PTR [eax+0x32e2482d]
  413c04:	neg    DWORD PTR [ebx]
  413c06:	inc    esi
  413c07:	loopne 0x413bb2
  413c09:	jmp    0xbb79a0ca
  413c0e:	push   ds
  413c0f:	mov    dh,0xe7
  413c11:	pop    ebx
  413c12:	das    
  413c13:	jb     0x413bb5
  413c15:	adc    ch,BYTE PTR ds:0xe7f9d3b3
  413c1b:	test   al,0xb9
  413c1d:	test   DWORD PTR [si],ebp
  413c20:	push   edi
  413c21:	sub    BYTE PTR [esi-0x4980801c],0xd4
  413c28:	(bad)  
  413c29:	imul   ecx,DWORD PTR [bx+si-0x3243],0xac42e9a7
  413c32:	sub    ebx,ecx
  413c34:	or     DWORD PTR [ebx-0x3e],edx
  413c37:	nop
  413c38:	daa    
  413c39:	xchg   ecx,eax
  413c3a:	icebp  
  413c3b:	mov    ebp,0xa943f58a
  413c40:	dec    DWORD PTR [edx]
  413c42:	xor    eax,ecx
  413c44:	mov    WORD PTR [ebx],cs
  413c46:	xchg   DWORD PTR [ebx-0x51caa65],edx
  413c4c:	add    DWORD PTR [edx*2-0x4581d60f],esi
  413c53:	or     BYTE PTR [ebp+0x9aab2f2],0xd2
  413c5a:	push   edx
  413c5b:	sti    
  413c5c:	push   0x56
  413c5e:	xchg   edi,esi
  413c60:	mov    ds:0x56542c49,al
  413c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c66:	loope  0x413c9d
  413c68:	into   
  413c69:	pop    ss
  413c6a:	dec    ebx
  413c6b:	jmp    0x413bee
  413c6d:	push   ss
  413c6e:	push   ds
  413c6f:	ins    BYTE PTR es:[edi],dx
  413c70:	scas   eax,DWORD PTR es:[edi]
  413c71:	ds pushf 
  413c73:	(bad)  
  413c74:	retf   0x5870
  413c77:	mov    ds:0x603b97d7,al
  413c7c:	xor    BYTE PTR [esi-0x56d22415],ch
  413c82:	out    dx,al
  413c83:	ret    
  413c84:	leave  
  413c85:	push   ecx
  413c86:	test   eax,0x35ff2541
  413c8b:	push   si
  413c8d:	ret    0x6ebd
  413c90:	cmp    BYTE PTR [edi+0x2a538862],ah
  413c96:	mov    edx,0x895ecc3
  413c9b:	sar    BYTE PTR [esi-0x2095acd5],1
  413ca1:	enter  0x1f96,0x70
  413ca5:	jge    0x413c72
  413ca7:	(bad)  
  413ca8:	loopne 0x413ce2
  413caa:	mov    ds:0x184af41f,eax
  413caf:	sub    eax,0x618c6a05
  413cb4:	sahf   
  413cb5:	mov    esi,0x7a22a160
  413cba:	push   esp
  413cbb:	(bad)  
  413cbc:	fiadd  DWORD PTR [edi-0x29d6384e]
  413cc2:	xchg   ebp,eax
  413cc3:	push   esp
  413cc4:	pop    eax
  413cc5:	xor    bh,0x5a
  413cc8:	mov    ebp,0xd8fbce93
  413ccd:	and    BYTE PTR [ebp+0x3e2a60c6],dl
  413cd3:	cld    
  413cd4:	push   esi
  413cd5:	inc    edx
  413cd6:	aad    0x3d
  413cd8:	dec    edi
  413cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cda:	rol    DWORD PTR [ecx+0x4f],1
  413cdd:	mov    ds:0xc20cdd87,al
  413ce2:	mov    al,ds:0x4097f8e9
  413ce7:	pop    ecx
  413ce8:	and    eax,0xfe89c32c
  413ced:	mov    ah,0x33
  413cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf0:	adc    al,0x3a
  413cf2:	ror    BYTE PTR [ebx-0x1b34e2b7],0x40
  413cf9:	add    dh,BYTE PTR [ecx+0x70]
  413cfc:	adc    DWORD PTR [ebp+0x6d],eax
  413cff:	jno    0x413c9d
  413d01:	in     al,dx
  413d02:	sar    DWORD PTR [ebp+0x3c74a266],cl
  413d08:	in     eax,dx
  413d09:	jnp    0x413c93
  413d0b:	cmp    BYTE PTR [ecx+0x1db071f4],bl
  413d11:	xor    edx,DWORD PTR [edx-0x3d]
  413d14:	jo     0x413cf5
  413d16:	and    al,0xfa
  413d18:	and    ah,bl
  413d1a:	pop    esi
  413d1b:	scas   eax,DWORD PTR es:[edi]
  413d1c:	stos   DWORD PTR es:[edi],eax
  413d1d:	addr16 mov dh,0x84
  413d20:	adc    eax,ebx
  413d22:	pushf  
  413d23:	xor    BYTE PTR [eax-0x49],ah
  413d26:	jns    0x413ccb
  413d28:	ror    DWORD PTR fs:[edx+eiz*8],0x60
  413d2d:	sysexit 
  413d2f:	arpl   WORD PTR [ecx],di
  413d31:	mov    esp,0xa0dc32e7
  413d36:	ins    DWORD PTR es:[edi],dx
  413d37:	pushf  
  413d38:	cs or  al,dl
  413d3b:	das    
  413d3c:	jg     0x413d2f
  413d3e:	out    dx,eax
  413d3f:	jmp    0x413d5c
  413d41:	repz and al,0xe8
  413d44:	inc    edx
  413d45:	std    
  413d46:	xor    eax,DWORD PTR [ebx+0x31]
  413d49:	push   eax
  413d4a:	sbb    BYTE PTR [esi+0x75bf7c1d],al
  413d50:	gs popa 
  413d52:	data16 mov BYTE PTR [ecx+ecx*1],bh
  413d56:	pop    esi
  413d57:	add    edx,eax
  413d59:	jmp    0xd47f:0x8b03f3ec
  413d60:	fnsave [ecx-0x615202cc]
  413d66:	xor    al,0x3c
  413d68:	pop    ss
  413d69:	mov    ds:0x58bcd18d,eax
  413d6e:	push   es
  413d6f:	add    BYTE PTR [edx+0x3bd18cda],ch
  413d75:	mov    al,ds:0x1aa669da
  413d7a:	cdq    
  413d7b:	mov    al,0x31
  413d7d:	mov    esi,0x77130c9c
  413d82:	jmp    0x413d1b
  413d84:	and    bl,bh
  413d86:	adc    bh,al
  413d88:	aaa    
  413d89:	ins    DWORD PTR es:[edi],dx
  413d8a:	xchg   edx,eax
  413d8b:	push   edi
  413d8c:	ss iret 
  413d8e:	lds    ebp,FWORD PTR [edx+0x7a]
  413d91:	ja     0x413da7
  413d93:	pop    esi
  413d94:	vpsubsb xmm3,xmm6,xmm4
  413d98:	pop    ds
  413d99:	pop    ecx
  413d9a:	loop   0x413d2e
  413d9c:	sbb    DWORD PTR [edi-0x71],ebx
  413d9f:	mov    esp,0xd6793102
  413da4:	out    dx,al
  413da5:	lds    ecx,FWORD PTR [esi]
  413da7:	pop    eax
  413da8:	out    dx,al
  413da9:	scas   eax,DWORD PTR es:[edi]
  413daa:	and    ah,bh
  413dac:	fiadd  DWORD PTR [ebx+0x14616144]
  413db2:	(bad)  
  413db4:	or     BYTE PTR [ebp+0x68],0xb8
  413db8:	cmp    eax,0x533df67d
  413dbd:	scas   eax,DWORD PTR es:[edi]
  413dbe:	(bad)  
  413dbf:	push   0x840235f7
  413dc4:	out    dx,eax
  413dc5:	cdq    
  413dc6:	mov    edx,0x7d5a44fc
  413dcb:	vminps ymm2,ymm2,YMMWORD PTR [ebx+0x58]
  413dd0:	jae    0x413e0c
  413dd2:	je     0x413d74
  413dd4:	cmovle ebp,ebp
  413dd7:	sub    esp,DWORD PTR [esi+0x12bf8b65]
  413ddd:	sbb    DWORD PTR [ebp+ecx*4-0x2a0c19de],0x7c
  413de5:	test   eax,0x467b336b
  413deb:	or     esi,DWORD PTR [esi]
  413ded:	aad    0x2d
  413def:	inc    edi
  413df0:	cwde   
  413df1:	pop    es
  413df2:	rcr    BYTE PTR [edx-0x69],1
  413df5:	pop    esi
  413df6:	jmp    0x3b4a:0xce725453
  413dfd:	cmc    
  413dfe:	adc    bx,WORD PTR [ebp+0x62]
  413e02:	mov    edx,0x922ebf66
  413e07:	pop    esi
  413e08:	or     al,0x90
  413e0a:	or     al,0xd8
  413e0c:	cs repz and eax,0xfbb8b881
  413e13:	add    al,0x5b
  413e15:	inc    eax
  413e16:	cmp    BYTE PTR [ebx+0x76],ch
  413e19:	mov    dl,0xb6
  413e1b:	fsubr  QWORD PTR [ebp+0x487672a]
  413e21:	mov    ds:0xb347a37e,al
  413e26:	(bad)  
  413e27:	mov    al,0xd4
  413e29:	sbb    BYTE PTR [eax+0xa9449e0],ch
  413e2f:	loope  0x413e19
  413e31:	and    al,0x7d
  413e33:	xor    eax,0x7666f3c9
  413e38:	lods   al,BYTE PTR ds:[esi]
  413e39:	sbb    ecx,DWORD PTR [esi-0x12161455]
  413e3f:	fucom  st(1)
  413e41:	test   al,0xc4
  413e43:	inc    ebx
  413e44:	cld    
  413e45:	push   esi
  413e46:	pop    esp
  413e47:	enter  0xb36c,0x52
  413e4b:	mov    DWORD PTR [ebp+edx*2+0x7ffebec9],ebp
  413e52:	call   0xe2d85976
  413e57:	fimul  WORD PTR [ebx]
  413e59:	cmp    BYTE PTR [eax-0x3fbf08e3],bl
  413e5f:	push   ecx
  413e60:	(bad)  
  413e61:	les    esi,FWORD PTR [esi]
  413e63:	fistp  WORD PTR [eax+eiz*1-0x7c9c9a5]
  413e6a:	mov    edx,0xd3d052d7
  413e6f:	cli    
  413e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e71:	in     eax,0x81
  413e73:	jecxz  0x413e52
  413e75:	push   0xffffffd8
  413e77:	xor    eax,0x5d87c56f
  413e7c:	das    
  413e7d:	push   ebp
  413e7e:	cmp    BYTE PTR [ecx-0x71],ah
  413e81:	and    eax,0xe0c5301e
  413e86:	nop
  413e87:	arpl   WORD PTR [ecx-0x7f0852e4],bp
  413e8d:	(bad)  
  413e8e:	in     al,0x10
  413e90:	adc    DWORD PTR [eax],0x8b9fa652
  413e96:	retf   
  413e97:	in     al,dx
  413e98:	dec    ebx
  413e99:	pop    esp
  413e9a:	cli    
  413e9b:	(bad)  
  413e9c:	mov    dh,0xde
  413e9e:	xchg   ebp,eax
  413e9f:	pop    edi
  413ea0:	ret    
  413ea1:	xor    al,0x13
  413ea3:	and    eax,ebx
  413ea5:	jcxz   0x413e2b
  413ea8:	xchg   edi,eax
  413ea9:	fimul  DWORD PTR [ecx]
  413eab:	inc    edx
  413eac:	icebp  
  413ead:	push   edx
  413eae:	test   eax,0x80d17f42
  413eb3:	or     al,0x4f
  413eb5:	repnz or ecx,DWORD PTR [esi]
  413eb8:	popa   
  413eb9:	mov    WORD PTR [edi+0x74],?
  413ebc:	repnz and al,0xe3
  413ebf:	aaa    
  413ec0:	dec    edi
  413ec1:	ss xchg edx,eax
  413ec3:	leave  
  413ec4:	daa    
  413ec5:	mov    al,ds:0xd61741c7
  413eca:	dec    edx
  413ecb:	sbb    ecx,DWORD PTR [edx-0x52]
  413ece:	add    dl,BYTE PTR [esi-0x50]
  413ed1:	sub    esi,DWORD PTR [ebx+0x755d9d92]
  413ed7:	pusha  
  413ed8:	or     BYTE PTR [eax-0x50],dh
  413edb:	inc    ebx
  413edc:	je     0x413eb0
  413ede:	setnp  ch
  413ee1:	jmp    0x639f:0x893125d9
  413ee8:	mov    BYTE PTR [ebp+0x55],0xd0
  413eec:	xchg   ebx,eax
  413eed:	retf   0x4939
  413ef0:	sbb    edx,DWORD PTR [edx+0x7a]
  413ef3:	sahf   
  413ef4:	sub    bh,BYTE PTR [edx+edi*4-0x482c889a]
  413efb:	cmp    dh,bh
  413efd:	jle    0x413ebd
  413eff:	scas   al,BYTE PTR es:[edi]
  413f00:	ja     0x413ee1
  413f02:	mov    cl,0x25
  413f04:	ret    
  413f05:	add    eax,0x48e14143
  413f0a:	dec    ecx
  413f0b:	scas   al,BYTE PTR es:[edi]
  413f0c:	cld    
  413f0d:	xchg   dh,ah
  413f0f:	inc    esp
  413f10:	leave  
  413f11:	lods   eax,DWORD PTR ds:[esi]
  413f12:	clc    
  413f13:	aad    0x1d
  413f15:	cs (bad) 
  413f17:	mov    dh,0xb7
  413f19:	int3   
  413f1a:	test   DWORD PTR [esi-0x54],esp
  413f1d:	or     al,0x88
  413f1f:	jns    0x413f5c
  413f21:	sub    ebx,eax
  413f23:	add    eax,0x394a5458
  413f28:	or     al,0x53
  413f2a:	push   es
  413f2b:	mov    dl,0xca
  413f2d:	pop    esp
  413f2e:	jne    0x413f54
  413f30:	sub    cl,BYTE PTR [edi]
  413f32:	push   edx
  413f33:	jo     0x413f58
  413f35:	shl    DWORD PTR [esi-0x22],1
  413f38:	pop    edi
  413f39:	jmp    0xdbbb456a
  413f3e:	and    ebp,eax
  413f40:	push   edx
  413f41:	nop
  413f42:	hlt    
  413f43:	pop    ss
  413f44:	xchg   ebp,eax
  413f45:	rcl    BYTE PTR [edx+0x75694a07],cl
  413f4b:	retf   
  413f4c:	ds pusha 
  413f4e:	adc    DWORD PTR [ebx-0x64132fa0],esi
  413f54:	push   esp
  413f55:	push   eax
  413f56:	jne    0x413f4d
  413f58:	mov    al,0xeb
  413f5a:	jo     0x413f5f
  413f5c:	cmc    
  413f5d:	sub    esi,ecx
  413f5f:	adc    DWORD PTR [ebx],esi
  413f61:	daa    
  413f62:	inc    ebp
  413f63:	mov    dl,0x86
  413f65:	outs   dx,BYTE PTR ds:[esi]
  413f66:	iret   
  413f67:	scas   eax,DWORD PTR es:[edi]
  413f68:	fistp  QWORD PTR [esi-0x3c]
  413f6b:	(bad)  
  413f6c:	out    0x32,eax
  413f6e:	push   esp
  413f6f:	and    eax,0x4fe59f27
  413f74:	sbb    al,0x5a
  413f76:	outs   dx,BYTE PTR ds:[esi]
  413f77:	push   0x19
  413f79:	xor    DWORD PTR [ebx+0x3f811ec3],ebx
  413f7f:	fstp   st(5)
  413f81:	push   esp
  413f82:	idiv   DWORD PTR [ecx-0x28]
  413f85:	xor    BYTE PTR [ecx+esi*1+0x3b],ah
  413f89:	imul   ebp,edi,0x33
  413f8c:	out    0x35,al
  413f8e:	lea    ebx,[ecx]
  413f90:	js     0x413ffa
  413f92:	rcl    BYTE PTR [eax-0x7fd4ebce],0xc8
  413f99:	dec    ecx
  413f9a:	cmp    DWORD PTR [edx],eax
  413f9c:	in     al,dx
  413f9d:	mov    bl,0x45
  413f9f:	cmp    al,0xf7
  413fa1:	inc    eax
  413fa2:	sahf   
  413fa3:	add    ecx,DWORD PTR ds:[ebx-0xc483e51]
  413faa:	mov    edi,0x224caa38
  413faf:	mov    ecx,0x5515bcc5
  413fb4:	pop    esp
  413fb5:	cmp    ah,al
  413fb7:	addr16 std 
  413fb9:	out    0x4,al
  413fbb:	or     cl,ah
  413fbd:	fild   WORD PTR [ebp-0x6]
  413fc0:	retf   0x22d0
  413fc3:	sub    eax,0x39df92c2
  413fc8:	ds xchg esi,eax
  413fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcb:	inc    esp
  413fcc:	mov    cl,bl
  413fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcf:	clc    
  413fd0:	dec    ecx
  413fd1:	fidiv  DWORD PTR [ebp+0x798a043d]
  413fd7:	jbe    0x413f5f
  413fd9:	clc    
  413fda:	adc    dl,BYTE PTR ds:0x3fc7b433
  413fe0:	gs aaa 
  413fe2:	cmp    al,0xc6
  413fe5:	in     al,0x66
  413fe7:	xor    dh,BYTE PTR [eax-0x3beca983]
  413fed:	stos   BYTE PTR es:[edi],al
  413fee:	pop    ebp
  413fef:	sbb    bl,bh
  413ff1:	mov    dl,0x30
  413ff3:	cmp    dl,cl
  413ff5:	lahf   
  413ff6:	cmp    dl,dl
  413ff8:	push   ebp
  413ff9:	fild   DWORD PTR [esi-0x64]
  413ffc:	push   ds
  413ffd:	mov    al,0x56
  413fff:	fwait
  414000:	xchg   ebx,eax
  414001:	test   eax,0xfe3d91af
  414006:	(bad)  
  414007:	out    dx,al
  414008:	scas   eax,DWORD PTR es:[edi]
  414009:	pop    esp
  41400a:	in     eax,dx
  41400b:	leave  
  41400c:	lea    esi,[edx-0x5b031cd4]
  414012:	add    cl,dl
  414014:	ja     0x413fea
  414016:	push   edx
  414017:	jg     0x414089
  414019:	out    dx,eax
  41401a:	ins    DWORD PTR es:[edi],dx
  41401b:	xor    ebx,edi
  41401d:	test   DWORD PTR [eax],eax
  41401f:	fwait
  414020:	pop    ebp
  414021:	dec    eax
  414022:	daa    
  414023:	bound  esi,QWORD PTR [edx-0x1c]
  414026:	loope  0x414073
  414028:	dec    ebp
  414029:	repnz idiv DWORD PTR [eax+0x4e]
  41402d:	xchg   edi,eax
  41402e:	xchg   edi,eax
  41402f:	scas   eax,DWORD PTR es:[edi]
  414030:	int    0x7c
  414032:	int3   
  414033:	cmp    edx,edi
  414035:	rcl    dl,0x1d
  414038:	inc    esp
  414039:	add    DWORD PTR [ebp+0x656d243c],ebp
  41403f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414040:	mov    ds:0xde300831,eax
  414045:	shr    DWORD PTR [ecx],cl
  414047:	jne    0x414026
  414049:	leave  
  41404a:	pcmpeqb mm1,QWORD PTR [ebx]
  41404d:	inc    eax
  41404e:	cmp    eax,0x77a9e07
  414053:	(bad)  
  414054:	repz xchg edx,eax
  414056:	mov    bl,BYTE PTR [edx+0x773f5ad2]
  41405c:	sbb    al,0xaa
  41405e:	test   ebx,edi
  414060:	xchg   DWORD PTR [esi-0x78],ecx
  414063:	mov    ebx,0x1be7ad65
  414068:	pop    edi
  414069:	rcr    BYTE PTR [edi+ecx*4+0x7080a085],1
  414070:	ror    DWORD PTR [ecx],cl
  414072:	out    0xd6,eax
  414074:	enter  0xf970,0x4f
  414078:	add    DWORD PTR [esi+0x78],ebx
  41407b:	xchg   esi,eax
  41407c:	add    al,0x9d
  41407e:	add    BYTE PTR [ecx+0x5f],al
  414081:	inc    edx
  414082:	outs   dx,DWORD PTR ds:[esi]
  414083:	pop    ss
  414084:	or     BYTE PTR ds:0xc02345c0,cl
  41408a:	xchg   ebx,eax
  41408b:	lds    esi,FWORD PTR [esp+ebx*4]
  41408e:	retf   
  41408f:	xchg   BYTE PTR [ecx],bl
  414091:	cmp    cl,BYTE PTR [ecx-0x2ca5151b]
  414097:	repz bound ecx,QWORD PTR [edi-0x4d]
  41409b:	(bad)  
  41409d:	jbe    0x4140a3
  41409f:	(bad)  
  4140a0:	bound  esi,QWORD PTR [esi+0x2481bb17]
  4140a6:	mov    cl,0x36
  4140a8:	outs   dx,BYTE PTR ds:[esi]
  4140a9:	pop    ss
  4140aa:	add    esp,esi
  4140ac:	xor    dl,ch
  4140ae:	call   0xf7efd1f3
  4140b3:	shr    dh,cl
  4140b5:	popa   
  4140b6:	cmc    
  4140b7:	pop    eax
  4140b8:	xor    edi,DWORD PTR ds:0x9c8ec9a5
  4140be:	push   esi
  4140bf:	sbb    esp,ebp
  4140c1:	popf   
  4140c2:	call   FWORD PTR [eax+eiz*2+0x7b7ffaa8]
  4140c9:	lds    ebp,FWORD PTR [edx]
  4140cb:	in     al,dx
  4140cc:	sahf   
  4140cd:	push   0xffffffd8
  4140cf:	push   ds
  4140d0:	repnz mov dh,0x30
  4140d3:	rcl    DWORD PTR [edx],cl
  4140d5:	inc    eax
  4140d6:	xchg   edx,eax
  4140d7:	fdivr  DWORD PTR [edx+0x3c05a6e7]
  4140dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140de:	and    BYTE PTR [ebx-0x24232c0a],dh
  4140e4:	dec    edx
  4140e5:	lods   al,BYTE PTR ds:[esi]
  4140e6:	xchg   esp,eax
  4140e7:	xor    DWORD PTR [edi+edi*8-0x47],ecx
  4140eb:	out    0x23,al
  4140ed:	fwait
  4140ee:	popf   
  4140ef:	xor    eax,0x6cabeae4
  4140f4:	les    esp,FWORD PTR [ebp+eax*2+0x6c]
  4140f8:	vpsllw xmm5,xmm6,XMMWORD PTR ds:0x81fb04b
  414100:	ins    DWORD PTR es:[edi],dx
  414101:	rcr    DWORD PTR [ecx+0x5d],0x65
  414105:	rol    DWORD PTR [eax-0x6f855bed],0xba
  41410c:	and    eax,0x855f45c9
  414111:	xor    BYTE PTR [edi+edi*2+0x43d5a9b5],bl
  414118:	cmp    edx,DWORD PTR [esi]
  41411a:	sbb    DWORD PTR [ebx+ebx*2],esi
  41411d:	xor    al,0xd7
  41411f:	loop   0x4140e1
  414121:	jle    0x41411b
  414123:	pop    edi
  414124:	hlt    
  414125:	push   ds
  414126:	std    
  414127:	fcomp  DWORD PTR [ebx-0x2a9ddd60]
  41412d:	ins    DWORD PTR es:[edi],dx
  41412e:	jb     0x41413a
  414130:	in     al,dx
  414131:	aas    
  414132:	xchg   edx,eax
  414133:	scas   al,BYTE PTR es:[edi]
  414134:	pop    esi
  414135:	retf   0xb54b
  414138:	jmp    0x3d6d:0x45de7392
  41413f:	adc    edi,ebp
  414141:	dec    ebx
  414142:	cmp    eax,0x6b6f704f
  414147:	mov    esi,0xf207eb66
  41414c:	les    ebp,FWORD PTR [ebx-0x2e]
  41414f:	jecxz  0x414144
  414151:	pop    eax
  414152:	xchg   BYTE PTR [edx-0x7d71523a],bl
  414158:	mov    eax,0xe93aaedf
  41415d:	sbb    DWORD PTR [eax],edi
  41415f:	test   DWORD PTR [ebp-0xe045702],0xa689a614
  414169:	sub    edi,DWORD PTR ds:0x552244af
  41416f:	push   0x5c
  414171:	sbb    edx,DWORD PTR [ebp-0x7]
  414174:	inc    ecx
  414175:	mov    DWORD PTR ds:0xf2761436,ebp
  41417b:	and    al,0x79
  41417d:	mov    edi,0xf434201b
  414182:	pop    esp
  414183:	xlat   BYTE PTR ds:[ebx]
  414184:	(bad)  
  414185:	(bad)  [ebp+0x4b]
  414188:	push   cs
  414189:	shr    BYTE PTR [edx-0x18700f9c],1
  41418f:	inc    esp
  414190:	mov    bl,0xe3
  414192:	inc    ebp
  414193:	jo     0x41420e
  414195:	or     cl,BYTE PTR [ebp-0x28]
  414198:	loope  0x4141a1
  41419a:	mov    WORD PTR [edi],ds
  41419c:	push   ebx
  41419d:	int3   
  41419e:	and    bl,al
  4141a0:	loop   0x41417e
  4141a2:	xor    eax,0x39c7c3dc
  4141a7:	sub    edx,DWORD PTR [edi]
  4141a9:	retf   
  4141aa:	test   DWORD PTR [ebx+0x3b93360d],ecx
  4141b0:	sub    DWORD PTR [ebx-0x5af5a3af],esp
  4141b6:	repnz inc ebx
  4141b8:	push   0xc76a1c6d
  4141bd:	jl     0x41423e
  4141bf:	call   0x70b2:0xaf748f90
  4141c6:	cs dec ebx
  4141c8:	dec    ecx
  4141c9:	out    0x82,al
  4141cb:	jno    0x41422e
  4141cd:	xchg   DWORD PTR [eax+0x521d8615],esi
  4141d3:	pop    ebx
  4141d4:	es xor ah,cl
  4141d7:	sub    ebx,DWORD PTR [ebx+0x14]
  4141da:	jb     0x414206
  4141dc:	sub    DWORD PTR [edi],ecx
  4141de:	icebp  
  4141df:	add    eax,0x4cf5009e
  4141e4:	ja     0x414213
  4141e6:	sub    eax,0x2586307c
  4141eb:	cli    
  4141ec:	(bad)  
  4141ed:	sti    
  4141ee:	add    BYTE PTR [ebx-0x6004083c],bl
  4141f4:	cmp    eax,0x8c506131
  4141f9:	inc    ebx
  4141fa:	pop    ds
  4141fb:	dec    eax
  4141fc:	mov    ds:0xa2d37d07,al
  414201:	xchg   esp,eax
  414202:	es push 0xffffff85
  414205:	retf   
  414206:	shr    DWORD PTR [esi+0x6042525d],1
  41420c:	mov    eax,0x135643eb
  414211:	push   esp
  414212:	or     ecx,DWORD PTR [edi+0x6b]
  414215:	push   cs
  414216:	in     eax,dx
  414217:	vpcomud xmm3,xmm2,xmm3,0x44
  41421d:	xor    ah,BYTE PTR es:[edi-0x1da50302]
  414224:	inc    edi
  414225:	xchg   BYTE PTR [edx-0x2a0369c0],dl
  41422b:	stc    
  41422c:	sub    bl,ch
  41422e:	nop
  41422f:	push   esp
  414231:	je     0x41421e
  414233:	cmp    dh,BYTE PTR [esi]
  414235:	popa   
  414236:	pop    esi
  414237:	dec    edi
  414238:	pop    esp
  414239:	mov    eax,ds:0xcf0c88f3
  41423e:	mov    esi,0x1b6ea4b3
  414243:	pop    es
  414244:	pusha  
  414245:	xchg   ebp,eax
  414246:	mov    edi,0x4708728d
  41424b:	pop    ebp
  41424c:	sbb    BYTE PTR [edx-0x665b8fcc],bh
  414252:	jl     0x414272
  414254:	ror    BYTE PTR [ebx+ebp*2+0x52],0xb3
  414259:	cmp    BYTE PTR [edx],al
  41425b:	arpl   WORD PTR [eax-0x6f0f6e2f],sp
  414261:	xchg   ecx,eax
  414262:	add    al,0x3c
  414264:	leave  
  414265:	jns    0x4142df
  414267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414268:	aas    
  414269:	mov    ds:0xca175a17,al
  41426e:	inc    ebp
  41426f:	leave  
  414270:	sub    DWORD PTR [esi-0x30d08a1e],ecx
  414276:	xchg   ebp,edi
  414278:	cs push ds
  41427a:	mov    esi,0x5f364f96
  41427f:	test   BYTE PTR [ecx-0x1d],dh
  414282:	iret   
  414283:	repz jg 0x4142bb
  414286:	push   ecx
  414287:	add    bh,BYTE PTR [ecx+0x38]
  41428a:	in     al,dx
  41428b:	sbb    al,0xaf
  41428d:	test   al,0x44
  41428f:	inc    esp
  414290:	mov    ds:0x82c93a6b,al
  414295:	call   0xdfab:0x20ea151f
  41429c:	add    bh,BYTE PTR [ebp-0x6f6f09c0]
  4142a2:	gs push es
  4142a4:	xchg   edx,eax
  4142a5:	xchg   esp,eax
  4142a6:	adc    al,0x47
  4142a8:	xlat   BYTE PTR fs:[ebx]
  4142aa:	dec    edx
  4142ab:	mov    esi,0xfcdc9fda
  4142b0:	sub    eax,0x3c81b28f
  4142b5:	cs push eax
  4142b7:	repnz es rcl ch,1
  4142bb:	mul    BYTE PTR [edx-0x48]
  4142be:	test   al,0xd8
  4142c0:	xchg   esp,eax
  4142c1:	xchg   edx,eax
  4142c2:	cmp    BYTE PTR [edi],bl
  4142c4:	adc    ebx,DWORD PTR [ebx+0x3d]
  4142c7:	mov    ch,BYTE PTR [ebx+0x31]
  4142ca:	mov    ds,esp
  4142cc:	(bad)  
  4142cd:	loopne 0x414267
  4142cf:	in     eax,dx
  4142d0:	mul    DWORD PTR [esi+0x78]
  4142d3:	push   esp
  4142d4:	xchg   DWORD PTR [ebp-0x3af79f79],ebx
  4142da:	loopne 0x414345
  4142dc:	mov    dl,0x23
  4142de:	jnp    0x41435b
  4142e0:	lods   eax,DWORD PTR ds:[esi]
  4142e1:	pop    esp
  4142e2:	or     eax,0xa27bd1bc
  4142e7:	loop   0x41426c
  4142e9:	ds ja  0x4142cf
  4142ec:	pop    ds
  4142ed:	sub    BYTE PTR [ebp*2+0x2842564f],0x2b
  4142f5:	inc    eax
  4142f6:	push   esi
  4142f7:	mov    esp,0x8c3e6c7c
  4142fc:	add    DWORD PTR [ebx],ecx
  4142fe:	cmc    
  4142ff:	sub    BYTE PTR [ebp-0x3],cl
  414302:	push   edx
  414303:	jl     0x414325
  414305:	cmp    DWORD PTR [esi+0x4c],ecx
  414308:	xor    al,0x7f
  41430a:	inc    edx
  41430b:	push   eax
  41430c:	pop    edx
  41430d:	popf   
  41430e:	out    dx,al
  41430f:	mov    esi,0xab88fe93
  414314:	adc    eax,0xb884dae2
  414319:	adc    BYTE PTR [ecx+0xe],al
  41431c:	pusha  
  41431d:	in     al,0xf8
  41431f:	xlat   BYTE PTR ds:[ebx]
  414320:	pop    ecx
  414321:	jns    0x7c56d09a
  414327:	push   ss
  414328:	pop    edx
  414329:	pop    eax
  41432a:	mov    esp,0x77eb7b7a
  41432f:	data16 sub BYTE PTR [edi+0x7f6cc154],dl
  414336:	das    
  414337:	jmp    FWORD PTR [eax]
  414339:	mov    al,ds:0xb5f57f32
  41433e:	lods   al,BYTE PTR ds:[esi]
  41433f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414340:	pushf  
  414341:	sub    edi,esi
  414343:	rcl    DWORD PTR [esi+0x57],1
  414346:	push   ebx
  414347:	pop    ds
  414348:	es inc ecx
  41434a:	sub    BYTE PTR [esi+ecx*4-0x6c27ea76],0x7d
  414352:	mov    ss,ecx
  414354:	dec    esi
  414355:	adc    eax,0x6c45e50f
  41435a:	icebp  
  41435b:	ret    
  41435c:	out    dx,al
  41435d:	mov    WORD PTR [eax],es
  41435f:	fisubr WORD PTR [ebx]
  414361:	push   ss
  414362:	dec    edx
  414363:	not    BYTE PTR [ebp+0x4f8a9191]
  414369:	sbb    cl,BYTE PTR [edx+0x6321cbe9]
  41436f:	imul   esi,DWORD PTR [esi],0xffffffd2
  414372:	cdq    
  414373:	adc    eax,0xc62d6301
  414378:	mov    bl,0x48
  41437a:	fcom   DWORD PTR [edx-0x22]
  41437d:	jmp    0xf97469b9
  414382:	lea    ebp,[esi+0x12]
  414385:	popf   
  414386:	xor    al,0xd1
  414388:	or     bh,BYTE PTR [esi+0x53ed81ff]
  41438e:	call   0x9284:0x83aefee8
  414395:	jl     0x414357
  414397:	pop    ss
  414398:	sbb    esp,DWORD PTR [ecx-0x15]
  41439b:	mov    eax,ds:0x6b4e3e91
  4143a0:	loop   0x4143d4
  4143a2:	mov    al,0xaf
  4143a4:	jae    0x4143ed
  4143a6:	daa    
  4143a7:	sbb    DWORD PTR [esi+0x27],ebx
  4143aa:	or     DWORD PTR [eax+0x7ea46a54],esp
  4143b0:	ds dec ebx
  4143b2:	fmul   DWORD PTR [ecx-0x3419fa0a]
  4143b8:	xor    DWORD PTR [edx-0x21],esp
  4143bb:	ja     0x414433
  4143bd:	retf   
  4143be:	cld    
  4143bf:	pop    edx
  4143c0:	cmp    eax,0xcc9d56e6
  4143c5:	push   eax
  4143c6:	mov    esi,0x9b735541
  4143cb:	add    esp,edx
  4143cd:	dec    esp
  4143ce:	pop    edx
  4143cf:	or     BYTE PTR [ebp+0x7b070938],0x8b
  4143d6:	mov    ebx,0x3924b43f
  4143db:	outs   dx,DWORD PTR ds:[esi]
  4143dc:	jne    0x414405
  4143de:	sbb    eax,0x5c3e35ae
  4143e3:	pop    ss
  4143e4:	ret    0x46
  4143e7:	xor    bh,BYTE PTR [ecx-0x21]
  4143ea:	mov    WORD PTR ds:0xdddfbda1,?
  4143f0:	add    cx,ax
  4143f3:	mov    al,ds:0x9041fefc
  4143f8:	cmp    ebp,DWORD PTR [edi-0x4ad50b54]
  4143fe:	fisubr WORD PTR [esi-0x422c4ba6]
  414404:	leave  
  414405:	or     ebp,DWORD PTR [ecx+0x59]
  414408:	inc    eax
  414409:	outs   dx,DWORD PTR ds:[esi]
  41440a:	mov    eax,0x6e7f2a3e
  41440f:	shl    DWORD PTR [edi-0x4f],cl
  414412:	mov    esp,0x73b39c61
  414417:	rol    DWORD PTR [ebx],1
  414419:	jge    0x41448b
  41441b:	leave  
  41441c:	stc    
  41441d:	cmp    esi,ecx
  41441f:	or     ebp,edx
  414421:	push   ebx
  414422:	test   BYTE PTR [eax-0x27],ah
  414425:	sub    al,0x8b
  414427:	mov    cs,WORD PTR [eax+0x14b7f396]
  41442d:	sub    ch,BYTE PTR [esi]
  41442f:	(bad)  
  414430:	push   ebx
  414431:	not    BYTE PTR [eax-0x5]
  414434:	aas    
  414435:	sub    al,0x96
  414437:	adc    bl,0x68
  41443a:	cld    
  41443b:	mov    ds:0x4c25d8e4,eax
  414440:	jp     0x414478
  414442:	sbb    BYTE PTR [esi+0x1f],ch
  414445:	mov    eax,?
  414447:	ss add edi,0xca6f059b
  41444e:	adc    BYTE PTR [esp+ebx*2+0x26c2dd1b],dl
  414455:	in     eax,0xe0
  414457:	pop    ds
  414458:	xor    al,0xa8
  41445a:	dec    edx
  41445b:	sub    DWORD PTR [edi-0x58ee9257],ebp
  414461:	fcomp  DWORD PTR [ebp-0x6a]
  414464:	dec    esp
  414465:	clc    
  414466:	or     BYTE PTR [ebx-0x78],cl
  414469:	dec    ebx
  41446a:	inc    edi
  41446b:	jle    0x414488
  41446d:	or     edx,edi
  41446f:	push   ecx
  414470:	dec    ebp
  414471:	aas    
  414472:	pop    ebp
  414473:	xchg   edi,eax
  414474:	xlat   BYTE PTR ds:[ebx]
  414475:	dec    ecx
  414476:	adc    eax,0x376f92c1
  41447b:	ret    
  41447c:	bound  esi,QWORD PTR [eax+edi*1-0x5b8934a2]
  414483:	jl     0x414484
  414485:	retf   
  414486:	nop
  414487:	in     al,0xf4
  414489:	sar    DWORD PTR [ecx+0x27e3cf6e],1
  41448f:	mov    bl,0xc8
  414491:	(bad)  [esi-0x1c494bee]
  414497:	out    0x73,eax
  414499:	or     al,BYTE PTR ds:0xee62b343
  41449f:	std    
  4144a0:	or     ebx,0xffffffc8
  4144a3:	loop   0x4144dc
  4144a5:	jo     0x41445f
  4144a7:	clc    
  4144a8:	imul   ecx,DWORD PTR [esi],0xffffff86
  4144ab:	popf   
  4144ac:	out    dx,eax
  4144ad:	imul   edi,eax,0x31aec391
  4144b3:	hlt    
  4144b4:	popf   
  4144b5:	rol    esp,cl
  4144b7:	mov    ebp,DWORD PTR [ecx+0x55]
  4144ba:	jmp    0xb79b:0xe38e28d8
  4144c1:	add    eax,0x85b1d8fc
  4144c6:	out    0x40,al
  4144c8:	mov    dl,0xad
  4144ca:	and    DWORD PTR [esi+0x2d9296f5],eax
  4144d0:	sub    DWORD PTR [ebp+0x1276a630],0xcfb35df9
  4144da:	mov    esp,0xd73acf33
  4144df:	sbb    bl,cl
  4144e1:	push   ss
  4144e2:	adc    BYTE PTR [ecx+0x76],dh
  4144e5:	rcr    edx,1
  4144e7:	popa   
  4144e8:	dec    edi
  4144e9:	mov    ?,WORD PTR [ebp-0x71c8c029]
  4144ef:	ror    ebx,cl
  4144f1:	cmp    esi,DWORD PTR [esi+ebx*1]
  4144f4:	inc    eax
  4144f5:	call   0xd15cf15f
  4144fa:	jno    0x41449b
  4144fc:	enter  0x349b,0x3b
  414500:	mov    ds,WORD PTR [bx]
  414503:	iret   
  414504:	dec    edx
  414505:	ss aaa 
  414507:	scas   al,BYTE PTR es:[edi]
  414508:	test   DWORD PTR [edi+0x43668b1f],esp
  41450e:	test   al,0xd1
  414510:	test   BYTE PTR [ecx-0x526ffdd6],ah
  414516:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414518:	xchg   edi,eax
  414519:	loop   0x414535
  41451b:	rcl    edx,cl
  41451d:	hlt    
  41451e:	bound  edx,QWORD PTR [ebx-0x27]
  414521:	imul   edi,DWORD PTR [edx-0x57],0x6e9c83ed
  414528:	bound  ecx,QWORD PTR [edx+esi*1-0x4d]
  41452c:	(bad)  
  41452d:	push   cs
  41452e:	and    edx,DWORD PTR [ecx-0x5b896c2b]
  414534:	(bad)  
  414535:	(bad)  
  414538:	in     eax,dx
  414539:	hlt    
  41453a:	aad    0x2d
  41453c:	out    dx,al
  41453d:	dec    esp
  41453e:	pop    eax
  41453f:	lods   eax,DWORD PTR ds:[esi]
  414540:	lods   eax,DWORD PTR ds:[esi]
  414541:	pop    edx
  414542:	jo     0x414526
  414544:	fwait
  414545:	or     al,0xb6
  414547:	xchg   esi,eax
  414548:	test   eax,0x5c932305
  41454e:	mov    WORD PTR [esi+ebx*2-0x208d8012],cs
  414555:	addr16 pop es
  414557:	pop    ss
  414558:	mov    ch,0x6a
  41455a:	jne    0x41451c
  41455c:	mov    esp,0x8330794f
  414561:	ins    DWORD PTR es:[edi],dx
  414562:	jg     0x4145c5
  414564:	or     eax,0xc7e3e69e
  414569:	sbb    DWORD PTR [edi],edx
  41456b:	mov    WORD PTR [edx+ebp*2],gs
  41456e:	push   ecx
  41456f:	les    edx,FWORD PTR [ebp+ecx*4+0x2c]
  414573:	push   esi
  414574:	adc    ch,BYTE PTR [eax]
  414576:	sbb    ch,BYTE PTR [edx]
  414578:	push   0xffffffde
  41457a:	mov    bl,0xf9
  41457c:	xor    dl,BYTE PTR [ebx+0x57]
  41457f:	lods   al,BYTE PTR ds:[esi]
  414580:	(bad)  
  414581:	mov    DWORD PTR [ecx],ebp
  414583:	inc    ebx
  414584:	leave  
  414585:	mov    eax,0xf3839619
  41458a:	imul   eax,DWORD PTR [esi],0x65
  41458d:	ret    0xa467
  414590:	cdq    
  414591:	inc    eax
  414592:	pop    ebx
  414593:	aad    0xe9
  414595:	xor    al,0xc
  414597:	dec    edi
  414598:	ds adc eax,esi
  41459b:	push   ebx
  41459c:	push   ds
  41459d:	call   0xe19d2459
  4145a2:	jno    0x41455c
  4145a4:	pop    esi
  4145a5:	and    al,0xab
  4145a7:	iret   
  4145a8:	dec    ebx
  4145a9:	inc    ebx
  4145aa:	jmp    0x7038:0x50494718
  4145b1:	in     al,dx
  4145b2:	imul   edi,edx,0xffffffac
  4145b5:	fcmove st,st(3)
  4145b7:	or     edi,eax
  4145b9:	call   0x5d8c:0x3c88c129
  4145c0:	push   es
  4145c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c2:	loopne 0x41459e
  4145c4:	into   
  4145c5:	jge    0x414640
  4145c7:	test   DWORD PTR [edi+0x39],ebx
  4145ca:	mov    bl,0xaf
  4145cc:	mov    al,0x7
  4145ce:	mov    ch,0xad
  4145d0:	stos   BYTE PTR es:[edi],al
  4145d1:	jnp    0xdeaa2893
  4145d7:	xor    BYTE PTR [eax+eiz*8+0x3532ff24],ah
  4145de:	addr16 (bad) 
  4145e0:	shl    DWORD PTR [ebp-0x4a75380b],cl
  4145e6:	or     al,BYTE PTR [ebx]
  4145e8:	xor    esp,DWORD PTR [edx+0x7d67305d]
  4145ee:	hlt    
  4145ef:	into   
  4145f0:	add    BYTE PTR [edi+0x47],cl
  4145f3:	or     esp,edx
  4145f5:	xor    eax,DWORD PTR [eax+esi*1+0x42c0df8]
  4145fc:	jg     0x41465a
  4145fe:	outs   dx,BYTE PTR ds:[esi]
  4145ff:	sti    
  414600:	shl    esp,0x2c
  414603:	dec    edx
  414604:	shl    BYTE PTR [edx],0x92
  414607:	xchg   edi,eax
  414608:	int    0x97
  41460a:	jle    0x414660
  41460c:	or     al,0xfa
  41460e:	loop   0x414606
  414610:	lahf   
  414611:	push   0x33
  414613:	or     eax,0x8b7afc70
  414618:	sbb    ebp,DWORD PTR [edx]
  41461a:	nop
  41461b:	xor    ebx,DWORD PTR [edx-0x3f]
  41461e:	mov    WORD PTR [eax+0x64],cs
  414621:	push   0xffffffe6
  414623:	jb     0x4145c2
  414625:	imul   edi,ebx,0xffffffd1
  414628:	sub    BYTE PTR [ebx],0xb5
  41462b:	adc    esi,edx
  41462d:	in     al,0x23
  41462f:	sub    eax,0x2400ed42
  414634:	(bad)  
  414635:	jge    0x4146b5
  414637:	out    dx,eax
  414638:	mov    esi,0x90af315f
  41463d:	adc    bl,dh
  41463f:	clc    
  414640:	xchg   ebx,eax
  414641:	add    DWORD PTR [edi+edi*1+0xd02d557],ebp
  414648:	jns    0x41460f
  41464a:	fcom   DWORD PTR [edi+eiz*2+0x60e95c61]
  414651:	inc    esi
  414652:	xor    al,0x58
  414654:	mov    ebx,0x51b06b78
  414659:	pop    ebx
  41465a:	fwait
  41465b:	test   eax,0x247a677e
  414660:	or     bl,0xef
  414663:	sbb    dl,dh
  414665:	cpuid  
  414667:	pushf  
  414668:	add    al,0x13
  41466a:	push   ds
  41466b:	sahf   
  41466c:	imul   edi,DWORD PTR [esi+0x5e],0x82ed0420
  414673:	outs   dx,BYTE PTR ds:[esi]
  414674:	es std 
  414676:	test   DWORD PTR [edi+0x7642dbd3],ebp
  41467c:	pop    ds
  41467d:	fsubr  DWORD PTR [ecx-0x54]
  414680:	frstor [esi]
  414682:	or     al,0xa8
  414684:	fwait
  414685:	lods   eax,DWORD PTR ds:[esi]
  414686:	push   0xfffffff0
  414688:	cmc    
  414689:	push   esp
  41468a:	jl     0x414637
  41468c:	int3   
  41468d:	scas   eax,DWORD PTR es:[edi]
  41468e:	out    0x9d,eax
  414690:	popf   
  414691:	cld    
  414692:	sbb    BYTE PTR [ecx-0x7472815f],cl
  414698:	sub    bh,BYTE PTR gs:[edx+esi*1]
  41469c:	into   
  41469d:	push   0x65
  41469f:	pop    ecx
  4146a0:	xchg   ebp,eax
  4146a1:	inc    eax
  4146a2:	sub    al,0xc0
  4146a4:	(bad)  
  4146a5:	or     DWORD PTR es:[edx-0x53],0x91645e7
  4146ad:	repz jmp 0xbe23d8dc
  4146b3:	jmp    0xbe4ccd2d
  4146b8:	iret   
  4146b9:	xchg   ebx,eax
  4146ba:	clc    
  4146bb:	add    BYTE PTR [ecx],0x67
  4146be:	lods   eax,DWORD PTR ds:[esi]
  4146bf:	and    BYTE PTR [edx],ch
  4146c1:	loop   0x41471a
  4146c3:	int3   
  4146c4:	jp     0x414695
  4146c6:	clc    
  4146c7:	inc    edx
  4146c8:	jmp    0xa3721602
  4146cd:	or     eax,0xeebc9e15
  4146d2:	cmp    esi,ebx
  4146d4:	daa    
  4146d5:	jo     0x4146b9
  4146d7:	neg    DWORD PTR [ecx]
  4146d9:	sub    BYTE PTR [eax],al
  4146db:	(bad)  
  4146dc:	adc    DWORD PTR [eax-0x7b],ebx
  4146df:	scas   al,BYTE PTR es:[edi]
  4146e0:	pusha  
  4146e1:	xor    DWORD PTR [eax-0x2e],ecx
  4146e4:	mov    ebp,0xdd67f762
  4146e9:	inc    ebx
  4146ea:	push   eax
  4146eb:	sub    eax,0x33296ac
  4146f0:	push   edx
  4146f1:	repz pop ds
  4146f3:	add    eax,0x99875e53
  4146f8:	int3   
  4146f9:	mov    ebx,esp
  4146fb:	mov    ecx,0x4922e315
  414700:	jae    0x4146b8
  414702:	fimul  WORD PTR [edi]
  414704:	ret    
  414705:	mov    edi,edi
  414707:	bnd jg 0x41468b
  41470a:	cmc    
  41470b:	fisubr WORD PTR [eax+0x4a88854f]
  414711:	sti    
  414712:	in     eax,dx
  414713:	inc    esp
  414714:	sbb    esi,ebp
  414716:	aas    
  414717:	jl     0x4146f5
  414719:	clc    
  41471a:	dec    DWORD PTR [ebx]
  41471c:	jne    0x4146c7
  41471e:	ins    DWORD PTR es:[edi],dx
  41471f:	inc    esi
  414720:	sbb    al,0xf4
  414722:	xor    DWORD PTR [ebx+0x0],ebp
  414725:	je     0x41478e
  414727:	rol    BYTE PTR [ecx+0x41],1
  41472a:	push   es
  41472b:	cmp    DWORD PTR [edx-0x4d],esp
  41472e:	mov    ds:0xa673878b,eax
  414733:	add    dh,al
  414735:	sbb    bh,cl
  414737:	xchg   esp,eax
  414738:	lock and BYTE PTR [edx+0x4c9ec8c3],al
  41473f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414740:	jnp    0x4146dd
  414742:	les    ebx,FWORD PTR [edi]
  414744:	push   esp
  414745:	jle    0x414783
  414747:	test   al,0xa5
  414749:	inc    ebx
  41474a:	mov    DWORD PTR [esi+0x20],ebp
  41474d:	xchg   esp,eax
  41474e:	mov    bl,0x7e
  414750:	out    dx,al
  414751:	sbb    eax,0x1eaa55dd
  414756:	sbb    eax,edx
  414758:	sbb    al,0x67
  41475a:	idiv   ecx
  41475c:	scas   al,BYTE PTR es:[edi]
  41475d:	stos   DWORD PTR es:[edi],eax
  41475e:	xchg   DWORD PTR es:0x300b4fd5,esp
  414765:	mov    al,ds:0xcf7563fc
  41476a:	in     al,dx
  41476b:	jae    0x414725
  41476d:	ret    0xb851
  414770:	xchg   BYTE PTR [edx-0x20],bl
  414773:	rcr    DWORD PTR [edx],1
  414775:	cmc    
  414776:	pushf  
  414777:	pop    esp
  414778:	pop    eax
  414779:	xchg   esi,eax
  41477a:	inc    eax
  41477b:	xor    DWORD PTR [edx+0x6acca3b],0x7c100fd2
  414785:	sbb    ch,cl
  414787:	inc    esi
  414788:	icebp  
  414789:	loopne 0x4147a7
  41478b:	aas    
  41478c:	and    dl,BYTE PTR [esi]
  41478e:	mov    DWORD PTR [ecx-0xb],ecx
  414791:	push   ebp
  414792:	pop    ds
  414793:	dec    esp
  414794:	jo     0x414755
  414796:	jg     0x4147e7
  414798:	xor    eax,0x518e910c
  41479d:	lea    eax,[esi+0x1f42a233]
  4147a3:	jmp    0xde273d14
  4147a8:	loop   0x414808
  4147aa:	dec    edi
  4147ab:	push   esp
  4147ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ad:	call   0x87dd4907
  4147b2:	jg     0x414774
  4147b4:	sbb    eax,0xfc88d67d
  4147b9:	fld    st(5)
  4147bb:	lods   al,BYTE PTR ds:[esi]
  4147bc:	push   0xd976065a
  4147c1:	nop
  4147c2:	jmp    0xa208:0x1cc3cef5
  4147c9:	bound  edx,QWORD PTR [esi+0x6a]
  4147cc:	test   BYTE PTR [edi+0x796783a3],0xad
  4147d3:	arpl   ax,bx
  4147d5:	sti    
  4147d6:	sbb    eax,0x87f9d7b4
  4147db:	sbb    al,dh
  4147dd:	cmp    edx,0xffffffe1
  4147e0:	loop   0x414849
  4147e2:	xchg   DWORD PTR [ecx-0x704ab497],ecx
  4147e8:	cwde   
  4147e9:	sub    BYTE PTR [ecx+0x6a],dl
  4147ec:	popf   
  4147ed:	aas    
  4147ee:	fisub  WORD PTR [edx-0x13]
  4147f1:	in     al,0x59
  4147f3:	ror    esp,0x3
  4147f6:	push   edx
  4147f7:	xlat   BYTE PTR ds:[ebx]
  4147f8:	sbb    eax,0x6d6af4d5
  4147fd:	fs pop ss
  4147ff:	sbb    eax,0xeb2d7590
  414804:	out    dx,al
  414805:	pop    ebp
  414806:	daa    
  414807:	out    0x38,al
  414809:	xchg   edx,eax
  41480a:	mov    esp,0xd07e4f4d
  41480f:	arpl   WORD PTR [edx+0x76],sp
  414812:	repz (bad) 
  414814:	scas   eax,DWORD PTR es:[edi]
  414815:	mov    ds:0xc06fcc83,eax
  41481a:	pop    edx
  41481b:	cmp    DWORD PTR [eax+0x76c47aaf],ecx
  414821:	add    al,0x44
  414823:	and    bl,cl
  414825:	pushf  
  414826:	pop    ecx
  414827:	sbb    BYTE PTR [edi],ah
  414829:	mov    cs,WORD PTR [edi-0x27b86571]
  41482f:	mov    ds:0x7a09ab18,eax
  414834:	push   edi
  414835:	fs int3 
  414837:	and    DWORD PTR [esi-0xe07d62d],edi
  41483d:	call   0x6dd47532
  414842:	add    al,BYTE PTR [eax+edx*4+0x14]
  414846:	out    dx,al
  414847:	int    0x8
  414849:	sbb    BYTE PTR [edi+0x7e95a096],dl
  41484f:	icebp  
  414850:	in     al,dx
  414851:	aas    
  414852:	mov    ch,0xee
  414854:	mov    ds:0x4c37df50,eax
  414859:	js     0x414831
  41485b:	xchg   BYTE PTR [edx],ah
  41485d:	cmc    
  41485e:	mov    cl,0xcc
  414860:	pop    ebp
  414861:	mov    bh,0x2b
  414863:	adc    edx,ebp
  414865:	jo     0x414841
  414867:	mov    esi,0x4c386202
  41486c:	jo     0x4147fb
  41486e:	sub    bh,BYTE PTR [ecx-0x36]
  414871:	jle    0x4148ac
  414873:	jne    0x41484a
  414875:	icebp  
  414876:	pop    ss
  414877:	mov    cl,0xdb
  414879:	xor    al,0x84
  41487b:	push   ebx
  41487c:	jns    0x4148df
  41487e:	lds    edi,FWORD PTR [ecx+edx*2-0x53]
  414882:	xor    BYTE PTR [edx],cl
  414884:	inc    eax
  414885:	imul   edi,DWORD PTR [ebx+ecx*4-0x529eba0a],0x192fb8ac
  414890:	retf   0x51fc
  414893:	in     al,dx
  414894:	sub    DWORD PTR [ebp+0x69],ebp
  414897:	clc    
  414898:	imul   DWORD PTR [ebx+0x7e6dab9c]
  41489e:	mov    esp,0xef7baa7a
  4148a3:	fldenv [ebp+ecx*2-0x4e]
  4148a7:	sbb    al,0xa6
  4148a9:	push   esp
  4148aa:	int    0x8c
  4148ac:	push   esi
  4148ad:	push   0x61
  4148af:	push   ecx
  4148b0:	popf   
  4148b1:	xchg   esi,eax
  4148b2:	imul   ebp,DWORD PTR [edi],0x9b6c1b94
  4148b8:	mov    DWORD PTR [ebp+eax*4-0x19df6647],esp
  4148bf:	ja     0x4148a9
  4148c1:	cmp    eax,0x676df7c8
  4148c6:	xlat   BYTE PTR ds:[ebx]
  4148c7:	jbe    0x414929
  4148c9:	inc    esp
  4148ca:	add    edx,0x57e72ce4
  4148d0:	pushf  
  4148d1:	push   ebp
  4148d2:	xor    bh,BYTE PTR [edx+0x62672f27]
  4148d8:	xchg   esp,eax
  4148d9:	sbb    esi,0x66
  4148dc:	mov    eax,0x83682718
  4148e1:	lds    edx,FWORD PTR [ebp+0xe7c10d7]
  4148e7:	fiadd  DWORD PTR [eax]
  4148e9:	loopne 0x4148d5
  4148eb:	lods   al,BYTE PTR ds:[esi]
  4148ec:	cmp    eax,0xb64cb005
  4148f1:	push   eax
  4148f2:	sbb    al,0xc8
  4148f4:	out    0xa9,eax
  4148f6:	mov    bl,0xdb
  4148f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f9:	sbb    al,0x8e
  4148fb:	inc    esp
  4148fc:	or     DWORD PTR ds:0xc5dfd136,esi
  414902:	jmp    0xbeb1:0x87714696
  414909:	or     al,0x53
  41490b:	dec    eax
  41490c:	fimul  DWORD PTR [ecx]
  41490e:	into   
  41490f:	mov    WORD PTR [esi-0x3e5fd0a3],fs
  414915:	mov    ebp,0xb6980a28
  41491a:	and    al,0xe1
  41491c:	ret    
  41491d:	dec    esi
  41491e:	mov    cl,0x38
  414920:	fs push ss
  414922:	xchg   esi,eax
  414923:	mov    edi,0xd8e096d9
  414928:	add    al,0x96
  41492a:	ins    DWORD PTR es:[edi],dx
  41492b:	int3   
  41492c:	outs   dx,BYTE PTR ds:[esi]
  41492d:	lods   al,BYTE PTR ds:[esi]
  41492e:	pop    eax
  41492f:	mov    esp,0xf37b2f55
  414934:	fcmovnb st,st(6)
  414936:	xor    dl,BYTE PTR [ebx]
  414938:	xchg   ebp,ecx
  41493a:	mov    bh,0xdf
  41493c:	(bad)  
  41493d:	aad    0xf4
  41493f:	pop    eax
  414940:	cdq    
  414941:	add    DWORD PTR [ebp-0x23],0x47
  414945:	mov    ebp,0xcb82fa0c
  41494a:	xor    ecx,ebx
  41494c:	rcl    DWORD PTR [edx],cl
  41494e:	sub    DWORD PTR [esi+0x50ec72c6],ecx
  414954:	sbb    BYTE PTR [esi],bh
  414956:	cdq    
  414957:	ror    DWORD PTR [edi],1
  414959:	les    esp,FWORD PTR [esi+0x70]
  41495c:	stc    
  41495d:	fistp  DWORD PTR [edx+0x68ad3d1f]
  414963:	enter  0xb6f4,0x1c
  414967:	imul   ebp,DWORD PTR [ebp*4-0x640510c0],0xdf9b56a6
  414972:	fmul   st(1),st
  414974:	jae    0x41493d
  414976:	inc    ebp
  414977:	pop    esp
  414978:	or     al,0xcb
  41497a:	lahf   
  41497b:	add    BYTE PTR [eax+0x6e],ah
  41497e:	fs sub eax,0x9937c214
  414984:	adc    ch,cl
  414986:	push   ebp
  414987:	clc    
  414988:	xor    DWORD PTR [ecx],esi
  41498a:	(bad)  
  41498b:	std    
  41498c:	add    dl,BYTE PTR [eax]
  41498e:	sar    BYTE PTR [edi+0x11],0xad
  414992:	retf   
  414993:	in     eax,0xdc
  414995:	test   DWORD PTR [ebx+eax*2],esi
  414998:	popa   
  414999:	xor    ebx,esi
  41499b:	and    DWORD PTR [edi+0x76ac722a],esi
  4149a1:	in     eax,dx
  4149a2:	adc    eax,0x1f960556
  4149a7:	cmp    cl,BYTE PTR es:[ebx-0x36d6dbb]
  4149ae:	dec    ecx
  4149af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b0:	pop    esp
  4149b1:	pop    DWORD PTR [ebp-0x1b]
  4149b4:	fwait
  4149b5:	sub    BYTE PTR [ecx+0x68],al
  4149b8:	push   edx
  4149b9:	stos   BYTE PTR es:[edi],al
  4149ba:	fnstenv [ecx+esi*8+0x291b5916]
  4149c1:	sbb    BYTE PTR [eax],ah
  4149c3:	fsub   st(4),st
  4149c5:	or     DWORD PTR [ecx-0x3bf4c4a8],edi
  4149cb:	pop    es
  4149cc:	sub    al,0x23
  4149ce:	jno    0x414990
  4149d0:	xchg   ah,ch
  4149d2:	or     al,0x54
  4149d4:	sahf   
  4149d5:	and    ebp,esp
  4149d7:	mov    ch,0x7e
  4149d9:	mov    ebx,0xa7c5a729
  4149de:	inc    eax
  4149df:	outs   dx,DWORD PTR ds:[esi]
  4149e0:	test   eax,0x56598517
  4149e5:	ins    BYTE PTR es:[edi],dx
  4149e6:	cld    
  4149e7:	inc    esi
  4149e8:	nop
  4149e9:	rcl    BYTE PTR [edx-0x7],cl
  4149ec:	mov    edi,0x3310349f
  4149f1:	data16 adc al,BYTE PTR [edx]
  4149f4:	in     al,dx
  4149f5:	cmp    DWORD PTR [ebx+ecx*8-0x52],esp
  4149f9:	popa   
  4149fa:	jbe    0x414998
  4149fc:	pusha  
  4149fd:	inc    esp
  4149fe:	repnz pop esi
  414a00:	xchg   DWORD PTR [edx-0x20ba6321],ebp
  414a06:	push   ebp
  414a07:	adc    DWORD PTR ds:0x590d89c4,esi
  414a0d:	push   ecx
  414a0e:	pop    ebx
  414a0f:	push   ebp
  414a10:	std    
  414a11:	arpl   WORD PTR [ebx+0x6a],dx
  414a14:	xor    cl,BYTE PTR [edx]
  414a16:	mov    bl,0x4a
  414a18:	dec    esi
  414a19:	fsubr  DWORD PTR [edx]
  414a1b:	loope  0x414a84
  414a1d:	std    
  414a1e:	sti    
  414a1f:	dec    ebx
  414a20:	jecxz  0x4149c6
  414a22:	data16 neg WORD PTR [edi]
  414a26:	sbb    ch,BYTE PTR [edi]
  414a28:	fmul   QWORD PTR [edx-0x57]
  414a2b:	jae    0x414a9d
  414a2d:	xchg   edi,eax
  414a2e:	push   ecx
  414a2f:	retf   
  414a30:	dec    edi
  414a31:	add    eax,0x23168e3b
  414a36:	les    ecx,FWORD PTR [edx]
  414a38:	push   ds
  414a39:	mov    dh,0x9e
  414a3b:	and    al,0x35
  414a3d:	jnp    0x414a9e
  414a3f:	and    ecx,esp
  414a41:	loope  0x414a49
  414a43:	inc    ebx
  414a44:	jg     0x414ab7
  414a46:	loop   0x4149cd
  414a48:	ret    
  414a49:	iret   
  414a4a:	dec    edi
  414a4b:	xor    esi,DWORD PTR [edx-0x70]
  414a4e:	fidivr DWORD PTR [eax]
  414a50:	jmp    0x7b141612
  414a55:	pop    edx
  414a56:	adc    BYTE PTR [edx],ah
  414a58:	or     edx,esp
  414a5a:	rol    DWORD PTR [ebp+edx*8+0x33b5c562],0x20
  414a62:	jp     0x414a43
  414a64:	xchg   ebx,eax
  414a65:	lods   eax,DWORD PTR ds:[esi]
  414a66:	repz (bad) 
  414a68:	mov    al,ds:0xd4791755
  414a6d:	push   edi
  414a6e:	inc    esp
  414a6f:	retf   
  414a70:	or     ebx,DWORD PTR [ecx-0x77]
  414a73:	popa   
  414a74:	mov    esp,0x6bf90f1
  414a79:	inc    ecx
  414a7a:	cld    
  414a7b:	and    ebx,DWORD PTR [edi-0x11f34c81]
  414a81:	xchg   bh,bh
  414a83:	mov    eax,0x4994d6c7
  414a88:	mov    eax,0x39e55293
  414a8d:	push   edi
  414a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a8f:	int3   
  414a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a91:	pop    esi
  414a92:	mov    eax,ds:0xd5b55637
  414a97:	adc    al,0x0
  414a99:	ror    ah,0x7f
  414a9c:	fmul   DWORD PTR ds:0xde3e932d
  414aa2:	push   ss
  414aa3:	push   esp
  414aa4:	je     0x414aac
  414aa6:	cwde   
  414aa7:	ins    DWORD PTR es:[edi],dx
  414aa8:	stc    
  414aa9:	xor    edi,DWORD PTR [ecx+0x72]
  414aac:	mov    edi,0xdbc38b08
  414ab1:	jle    0x414b18
  414ab3:	cld    
  414ab4:	dec    edi
  414ab5:	pusha  
  414ab6:	jp     0x414a48
  414ab8:	jp     0x414afd
  414aba:	sbb    ch,BYTE PTR [eax+0x6c80dd26]
  414ac0:	xchg   esp,eax
  414ac1:	or     bl,BYTE PTR [edx+0x78c59322]
  414ac7:	or     DWORD PTR [edi+0x3e],ebx
  414aca:	je     0x414afa
  414acc:	or     DWORD PTR [esi+0x24],eax
  414acf:	outs   dx,DWORD PTR ds:[esi]
  414ad0:	imul   ebx,DWORD PTR [edx+0xe67ee0a],0x3f2d0bcb
  414ada:	mov    esi,0x62fc3fb2
  414adf:	push   edi
  414ae0:	pop    edx
  414ae1:	or     al,0x34
  414ae3:	mov    edx,0xe2223c78
  414ae8:	add    al,0xe1
  414aea:	mov    edx,0x6af1dee5
  414aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af0:	imul   DWORD PTR [ecx]
  414af2:	jae    0x414ab7
  414af4:	push   0x2ee6c410
  414af9:	in     eax,dx
  414afa:	mov    dl,0xef
  414afc:	mov    edx,0x94bff963
  414b01:	inc    esp
  414b02:	pop    ecx
  414b03:	fs mov ebx,0x9d5a8b5f
  414b09:	or     eax,0x226f6fe1
  414b0e:	(bad)  
  414b0f:	ret    
  414b10:	or     ch,BYTE PTR [ebp-0x650ade]
  414b16:	push   ebp
  414b17:	sbb    bh,BYTE PTR [eax-0x62c71b5f]
  414b1d:	pop    esi
  414b1e:	dec    esp
  414b1f:	ret    0x630d
  414b22:	dec    eax
  414b23:	add    ecx,DWORD PTR ds:0x945aeee3
  414b29:	xchg   ecx,esi
  414b2b:	call   0xbd6e832
  414b30:	ins    DWORD PTR es:[edi],dx
  414b31:	jae    0x414b19
  414b33:	pusha  
  414b34:	ror    BYTE PTR [edi],1
  414b36:	push   ds
  414b37:	pop    ss
  414b38:	mov    dh,0x6d
  414b3a:	xor    cl,BYTE PTR [ecx]
  414b3c:	pop    edx
  414b3d:	sub    BYTE PTR [edx+0x56cbba9],0x40
  414b44:	or     BYTE PTR [eax],0xa1
  414b47:	mov    esi,0x6dc5f5cf
  414b4c:	test   eax,0xa6990d8f
  414b51:	push   ebx
  414b52:	jbe    0x414b1a
  414b54:	mov    al,ds:0xe4eff5c
  414b59:	push   0xe0fc5ccd
  414b5e:	int3   
  414b5f:	dec    ebx
  414b60:	jp     0x414b33
  414b62:	enter  0x199d,0x8
  414b66:	cmp    BYTE PTR [eax+ebx*1+0x7d],cl
  414b6a:	or     al,0x78
  414b6c:	(bad)  
  414b6e:	and    edx,esp
  414b70:	lock push es
  414b72:	add    al,0xd5
  414b74:	out    0xa9,eax
  414b76:	jp     0x414b9a
  414b78:	cmp    al,BYTE PTR [edx-0x19]
  414b7b:	and    DWORD PTR [ecx+esi*1+0x31],eax
  414b7f:	loop   0x414b4a
  414b81:	or     eax,edx
  414b83:	jae    0x414b79
  414b85:	retf   0x80e9
  414b88:	stc    
  414b89:	add    edi,ecx
  414b8b:	push   cs
  414b8c:	sbb    esi,DWORD PTR [ebx]
  414b8e:	push   es
  414b8f:	test   BYTE PTR ds:0xda853933,0xa1
  414b96:	sti    
  414b97:	xchg   bh,dl
  414b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b9a:	push   ebp
  414b9b:	imul   edi,DWORD PTR [esi+0x59697d49],0xc22ec5b
  414ba5:	cmp    BYTE PTR [ebx-0x189e4409],bh
  414bab:	fcomip st,st(0)
  414bad:	mov    ebp,0xc2562e3b
  414bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bb3:	adc    DWORD PTR [edx],ecx
  414bb5:	mov    bh,0x41
  414bb7:	or     al,0x52
  414bb9:	mov    ah,0x84
  414bbb:	mov    al,ds:0x6ea08e64
  414bc0:	pop    ss
  414bc1:	cmp    eax,0xf1aa6939
  414bc6:	mov    ds:0xd7a8f356,al
  414bcb:	pop    ebp
  414bcc:	test   al,0x8e
  414bce:	fistp  DWORD PTR [eax-0x35]
  414bd1:	cmp    BYTE PTR [edx],0xfc
  414bd4:	in     eax,dx
  414bd5:	push   ds
  414bd6:	(bad)  
  414bd7:	and    ah,bl
  414bd9:	fdiv   st,st(2)
  414bdb:	sbb    al,0x7a
  414bdd:	jmp    0x414bfa
  414bdf:	repnz push 0x5
  414be2:	stos   DWORD PTR es:[edi],eax
  414be3:	mov    esp,0x8f76bcc0
  414be8:	jmp    DWORD PTR [ebx-0x4b]
  414beb:	xor    DWORD PTR [edx],eax
  414bed:	push   esp
  414bee:	into   
  414bef:	sub    cl,bh
  414bf1:	mov    ah,ah
  414bf3:	out    0xa9,al
  414bf5:	pop    ds
  414bf6:	scas   al,BYTE PTR es:[edi]
  414bf7:	inc    ebx
  414bf8:	out    0xca,al
  414bfa:	adc    al,0xdc
  414bfc:	xor    DWORD PTR [eax+0x65b2c3d6],ebx
  414c02:	test   BYTE PTR [eax+0x7d],cl
  414c05:	jbe    0x414bbf
  414c07:	dec    ebp
  414c08:	jle    0x414c4c
  414c0a:	mov    gs,WORD PTR [edi+eiz*4+0x19bd51cf]
  414c11:	cmp    ecx,edi
  414c13:	hlt    
  414c14:	retf   0xc00f
  414c17:	inc    ebp
  414c18:	repz pop ax
  414c1b:	sbb    eax,0x65b4e53c
  414c20:	sub    esi,ebp
  414c22:	fnsave [edi+edi*4-0x1a]
  414c26:	sbb    ebx,DWORD PTR [eax+0xf]
  414c29:	inc    esp
  414c2a:	adc    bh,al
  414c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2d:	fisttp DWORD PTR [ebp-0x254c179e]
  414c33:	and    ebx,ecx
  414c35:	rdpmc  
  414c37:	xlat   BYTE PTR ds:[ebx]
  414c38:	mov    BYTE PTR [ecx-0x21e5f9f4],ah
  414c3e:	push   esi
  414c3f:	mov    ebx,0x5382779f
  414c44:	jnp    0x414bff
  414c46:	je     0x414cb2
  414c48:	inc    edi
  414c49:	popf   
  414c4a:	mov    gs,WORD PTR [ebx]
  414c4c:	xchg   esi,eax
  414c4d:	sbb    eax,0x5d39e29f
  414c53:	(bad)  
  414c54:	iret   
  414c55:	leave  
  414c56:	mov    ah,0x39
  414c58:	fcmovnu st,st(6)
  414c5a:	or     ah,BYTE PTR [edi+0x3bbd1dd7]
  414c60:	xchg   edi,eax
  414c61:	fcomip st,st(3)
  414c63:	dec    ebx
  414c64:	xchg   esi,eax
  414c65:	and    edi,DWORD PTR [edi-0x5e]
  414c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c69:	jl     0x414c13
  414c6b:	lea    ebp,es:[ebx]
  414c6e:	into   
  414c6f:	enter  0x663d,0x45
  414c73:	sbb    BYTE PTR [edx-0x18f26236],0xc3
  414c7a:	shl    BYTE PTR [ebx-0x73],1
  414c7d:	cld    
  414c7e:	push   ss
  414c7f:	lods   eax,DWORD PTR ds:[esi]
  414c80:	and    ah,dl
  414c82:	arpl   dx,sp
  414c84:	cs push edi
  414c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c87:	xor    al,BYTE PTR [esi]
  414c89:	(bad)  
  414c8a:	imul   eax,esi,0x52
  414c8d:	hlt    
  414c8e:	mov    al,ds:0xc8e060e6
  414c93:	adc    al,0x73
  414c95:	dec    ebp
  414c96:	xor    eax,0x7322c04d
  414c9b:	ja     0x414c9a
  414c9d:	out    0xe9,eax
  414c9f:	fst    QWORD PTR [edx-0x67]
  414ca2:	cdq    
  414ca3:	mov    edx,0x3bcdee85
  414ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca9:	jae    0x414d04
  414cab:	adc    eax,DWORD PTR [ecx+edi*1-0x43]
  414caf:	jle    0x414ce4
  414cb1:	fisttp QWORD PTR [eax+eiz*1]
  414cb4:	(bad)  
  414cb5:	mov    cl,bh
  414cb7:	xlat   BYTE PTR ds:[ebx]
  414cb8:	daa    
  414cb9:	sub    DWORD PTR [esi],ecx
  414cbb:	dec    edi
  414cbc:	sbb    DWORD PTR [eax+0x4c],ecx
  414cbf:	imul   ebx,DWORD PTR [edi],0xe34fdec1
  414cc5:	adc    DWORD PTR [ebx+ebx*4-0x62],esp
  414cc9:	pop    esp
  414cca:	out    0xf1,al
  414ccc:	inc    esp
  414ccd:	in     al,0x3b
  414ccf:	pop    ds
  414cd0:	mov    cl,0x9a
  414cd2:	repz jno 0x414ce1
  414cd5:	mov    ch,0x4f
  414cd7:	(bad)  
  414cd8:	(bad)
  414cdc:	mov    esi,0xca3d28a5
  414ce1:	adc    ch,BYTE PTR ds:0x9626db06
  414ce7:	imul   edx,DWORD PTR [edi-0x26f8111e],0x7a5ee063
  414cf1:	jg     0x414cff
  414cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf4:	lods   eax,DWORD PTR ds:[esi]
  414cf5:	pop    ds
  414cf6:	sbb    al,0xe8
  414cf8:	inc    eax
  414cf9:	pop    ss
  414cfa:	xchg   ecx,eax
  414cfb:	jne    0x414d28
  414cfd:	jmp    0xa366:0xff65284f
  414d04:	fsubr  st,st(7)
  414d06:	(bad)  
  414d07:	es (bad) 
  414d09:	push   0xffffffab
  414d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0c:	sub    DWORD PTR [edx+ebp*1+0x7613a9ab],esp
  414d13:	das    
  414d14:	ja     0x414d59
  414d16:	pushfw 
  414d18:	mov    bh,ah
  414d1a:	mov    bh,0x11
  414d1c:	pop    edx
  414d1d:	int    0xd9
  414d1f:	mov    esp,0x242bf8f
  414d24:	lahf   
  414d25:	daa    
  414d26:	cmp    al,0x96
  414d29:	pushaw 
  414d2b:	leave  
  414d2c:	call   0xd073444
  414d31:	(bad)  
  414d32:	pop    edi
  414d33:	xchg   ecx,eax
  414d34:	popa   
  414d35:	enter  0x9bdd,0x26
  414d39:	jmp    0x414d17
  414d3b:	push   ecx
  414d3c:	mov    edx,0x83bb38d1
  414d41:	push   es
  414d42:	imul   esi,DWORD PTR [ebx-0x61d3e2db],0xffffffab
  414d49:	aaa    
  414d4a:	dec    esi
  414d4b:	mov    eax,0xaaf93c02
  414d50:	out    dx,eax
  414d51:	cwde   
  414d52:	retf   0x498
  414d55:	mov    ds:0x3931256d,eax
  414d5a:	imul   ecx,DWORD PTR [ecx-0x2caa5bfd],0x98eaaffa
  414d64:	and    eax,0x3d2b00be
  414d69:	adc    DWORD PTR ds:0x4e37655e,0x5083016a
  414d73:	pop    ss
  414d74:	mov    ds:0xbf8463b1,eax
  414d79:	sub    bl,BYTE PTR [edx+0x6e4a7d1]
  414d7f:	push   ebp
  414d80:	shl    ch,cl
  414d82:	es push edi
  414d84:	push   edi
  414d85:	jle    0x414d49
  414d87:	mov    ?,WORD PTR [edx]
  414d89:	aam    0x1a
  414d8b:	mov    ebp,0xdafdad0a
  414d90:	loope  0x414d13
  414d92:	(bad)  
  414d93:	lock test DWORD PTR [ecx],ecx
  414d96:	or     DWORD PTR [eax],ecx
  414d98:	scas   eax,DWORD PTR es:[edi]
  414d99:	sub    al,0xba
  414d9b:	loopne 0x414d6f
  414d9d:	hlt    
  414d9e:	mul    DWORD PTR [ebp-0x7d]
  414da1:	mov    eax,0xb744773c
  414da6:	pop    edi
  414da7:	pop    esi
  414da8:	icebp  
  414da9:	xchg   esp,eax
  414daa:	es ins DWORD PTR es:[edi],dx
  414dac:	inc    ebx
  414dad:	ins    DWORD PTR es:[edi],dx
  414dae:	add    ebx,0xffffffbe
  414db1:	adc    eax,0x5310361f
  414db6:	or     bl,BYTE PTR [esi]
  414db8:	ss sub eax,0x463b055d
  414dbe:	scas   al,BYTE PTR es:[edi]
  414dbf:	iret   
  414dc0:	push   ds
  414dc1:	loope  0x414dbc
  414dc3:	dec    esp
  414dc4:	adc    bl,BYTE PTR ds:0x1a64e907
  414dca:	and    al,ch
  414dcc:	dec    esi
  414dcd:	movhps QWORD PTR [ecx],xmm1
  414dd0:	out    0xe6,al
  414dd2:	arpl   bx,sp
  414dd4:	into   
  414dd5:	pop    esi
  414dd6:	or     al,0x45
  414dd8:	add    eax,0xd1162244
  414ddd:	jecxz  0x414dc2
  414ddf:	setno  ah
  414de2:	mov    ebp,0x17a46781
  414de7:	cmp    eax,DWORD PTR [ecx-0x6f]
  414dea:	dec    esi
  414deb:	int    0xd6
  414ded:	inc    esi
  414dee:	mov    dl,0x47
  414df0:	xor    DWORD PTR [ebx+0x67],edi
  414df3:	mov    edi,DWORD PTR cs:[esi]
  414df6:	sbb    BYTE PTR [esi-0x17905c5c],0xba
  414dfd:	mov    dl,0x1b
  414e00:	push   ecx
  414e01:	xchg   edi,eax
  414e02:	or     ah,BYTE PTR [ecx-0x2afaf7ef]
  414e08:	sbb    BYTE PTR [eax-0x472466d5],al
  414e0e:	ss mov al,0xc1
  414e11:	popa   
  414e12:	adc    eax,0xbcd584bf
  414e17:	ja     0x414de6
  414e19:	fsubr  st(6),st
  414e1b:	push   ebp
  414e1c:	sti    
  414e1d:	push   esp
  414e1e:	rol    BYTE PTR [ebp+0x71],1
  414e21:	mov    bh,0xc5
  414e23:	fmul   QWORD PTR [esi-0x1d]
  414e26:	rcl    esi,cl
  414e28:	xchg   edi,eax
  414e29:	shl    DWORD PTR [edx],cl
  414e2b:	imul   esi,DWORD PTR [eax-0x292bf1cb],0xbd3f531f
  414e35:	mov    bh,0xcf
  414e37:	outs   dx,BYTE PTR ds:[esi]
  414e38:	or     dh,BYTE PTR [esi]
  414e3a:	fld    DWORD PTR [ebx+0x759d2fdf]
  414e40:	pop    ebp
  414e41:	jns    0x414e07
  414e43:	pop    ds
  414e44:	daa    
  414e45:	popf   
  414e46:	ret    0x46f2
  414e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e4a:	je     0x414ea8
  414e4c:	lods   eax,DWORD PTR ds:[esi]
  414e4d:	pop    edx
  414e4e:	dec    ebp
  414e4f:	repz pop es
  414e51:	and    DWORD PTR [edx+0x4798741c],esp
  414e57:	out    dx,eax
  414e58:	outs   dx,DWORD PTR ds:[esi]
  414e59:	dec    ebp
  414e5a:	out    0x4,eax
  414e5c:	aad    0xb6
  414e5e:	loopne 0x414e24
  414e60:	jmp    0x414e19
  414e62:	add    eax,0xd30f0c4b
  414e67:	mul    BYTE PTR [edx+ebx*1-0x23]
  414e6b:	pop    ds
  414e6c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414e6e:	pop    es
  414e6f:	rcl    DWORD PTR [ebx],1
  414e71:	call   0x567c926f
  414e76:	in     al,0xca
  414e78:	retf   
  414e79:	xchg   esi,eax
  414e7a:	jecxz  0x414ea0
  414e7c:	push   ecx
  414e7d:	pusha  
  414e7e:	dec    ebp
  414e7f:	dec    ecx
  414e80:	ds dec edi
  414e82:	fwait
  414e83:	mov    ebp,0x7a8b7a80
  414e88:	inc    eax
  414e89:	or     ah,BYTE PTR [ebx+0x32]
  414e8c:	cmp    eax,0xe207ad50
  414e91:	in     eax,dx
  414e92:	pop    ebx
  414e93:	jae    0x414e87
  414e95:	jl     0x414ebb
  414e97:	and    bh,BYTE PTR [eax-0x571d0e6]
  414e9d:	push   ss
  414e9e:	xchg   ebx,eax
  414e9f:	mov    bl,0x23
  414ea1:	not    dh
  414ea3:	sub    eax,0xe35b7cbe
  414ea8:	stos   DWORD PTR es:[edi],eax
  414ea9:	scas   eax,DWORD PTR es:[edi]
  414eaa:	push   ds
  414eab:	and    BYTE PTR [ebx],dh
  414ead:	pop    esp
  414eae:	inc    esi
  414eaf:	loopne 0x414f0c
  414eb1:	inc    esi
  414eb2:	loopne 0x414e69
  414eb4:	es push es
  414eb6:	jmp    0x414ece
  414eb8:	cmp    eax,0xf33f5a29
  414ebd:	add    al,0x1d
  414ebf:	inc    ebx
  414ec0:	cmp    DWORD PTR [esi+esi*1],ecx
  414ec3:	jns    0x414f28
  414ec5:	and    eax,0x806afa7e
  414eca:	sbb    eax,0xa037d0d9
  414ecf:	iret   
  414ed0:	cld    
  414ed1:	not    dh
  414ed3:	sti    
  414ed4:	pop    ecx
  414ed5:	test   DWORD PTR [esi+0x53],edx
  414ed8:	loopne 0x414f2c
  414eda:	call   0x9f1c91c8
  414edf:	xchg   edi,eax
  414ee0:	sti    
  414ee1:	or     ch,cl
  414ee3:	jnp    0x414eb8
  414ee5:	lock stos DWORD PTR es:[edi],eax
  414ee7:	bswap  eax
  414ee9:	mov    dh,0xe
  414eeb:	mov    dh,0x6
  414eed:	mov    eax,ds:0x269135ba
  414ef2:	and    DWORD PTR [ebx+ebp*4],edx
  414ef5:	mov    BYTE PTR [ebx+0x37cf81e3],cl
  414efb:	push   cs
  414efc:	(bad)  
  414efd:	jmp    0xc78b:0x2938ac6e
  414f04:	(bad)  
  414f05:	adc    esp,edi
  414f07:	mov    bh,0x24
  414f09:	pop    ebx
  414f0a:	icebp  
  414f0b:	lahf   
  414f0c:	or     al,0x63
  414f0e:	fs xchg edi,eax
  414f10:	mov    ds:0xa5b31884,al
  414f15:	repnz retf 0x87f4
  414f19:	ds (bad) 
  414f1b:	xchg   ecx,eax
  414f1c:	ja     0x414eb2
  414f1e:	cld    
  414f1f:	fnstenv ds:0xb48ed838
  414f25:	arpl   di,si
  414f27:	pop    ecx
  414f28:	and    al,0x56
  414f2a:	dec    edx
  414f2b:	xchg   esp,eax
  414f2c:	inc    eax
  414f2d:	cld    
  414f2e:	inc    edi
  414f2f:	ror    bl,0xa0
  414f32:	and    DWORD PTR [ecx+0x64f8ac],edx
  414f38:	xor    ecx,DWORD PTR [ebx]
  414f3a:	retf   
  414f3b:	test   eax,0xc01b4bc8
  414f40:	nop
  414f41:	jno    0x414f73
  414f43:	cli    
  414f44:	les    esi,FWORD PTR [ebp-0x5]
  414f47:	rcr    DWORD PTR [ebp-0x6482f449],cl
  414f4d:	out    dx,al
  414f4e:	dec    edi
  414f4f:	xor    BYTE PTR [ebp+0x6fb8d59b],0x8d
  414f56:	inc    edx
  414f57:	aaa    
  414f58:	mov    ds:0x459f3370,al
  414f5d:	mov    dh,dh
  414f5f:	and    DWORD PTR [ecx*1+0x9b22528],0xb297fa8a
  414f6a:	ficomp DWORD PTR [esi+0x2f]
  414f6d:	fsubr  QWORD PTR [edx]
  414f6f:	dec    ecx
  414f70:	in     al,0x29
  414f72:	ror    DWORD PTR [ebx+0x4718ab15],cl
  414f78:	mov    es,WORD PTR [edx]
  414f7a:	call   0x85d4f766
  414f7f:	or     DWORD PTR [ecx+0x773e299d],0xd7f8d88b
  414f89:	sub    BYTE PTR [edi+eiz*4+0x5f56d413],dh
  414f90:	adc    BYTE PTR [esi+0x1a150651],0x7e
  414f97:	add    edi,0x5a
  414f9a:	xor    BYTE PTR [ecx],0xd0
  414f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f9e:	cmp    BYTE PTR [esi-0x7d129172],0x26
  414fa5:	adc    edi,DWORD PTR [edi]
  414fa7:	div    BYTE PTR [edi-0x20]
  414faa:	sub    DWORD PTR [ecx],0x5ca5f25d
  414fb0:	fst    st(4)
  414fb2:	shr    DWORD PTR [edi],1
  414fb4:	xor    ebx,DWORD PTR [edi]
  414fb6:	pop    edx
  414fb7:	push   ebx
  414fb8:	jmp    0x414fdc
  414fba:	xchg   ebp,eax
  414fbb:	cmp    eax,0xa776cb07
  414fc0:	int3   
  414fc1:	sbb    al,0xb4
  414fc3:	mov    ch,0xdd
  414fc5:	ja     0x41500f
  414fc7:	inc    eax
  414fc8:	pushf  
  414fc9:	dec    eax
  414fca:	jb     0x414f4e
  414fcc:	push   ss
  414fcd:	and    eax,0x1b328843
  414fd2:	dec    ecx
  414fd3:	(bad)  
  414fd4:	or     eax,DWORD PTR [edx-0x5b14ee06]
  414fda:	xchg   BYTE PTR [esi+0x25],dl
  414fdd:	dec    ebp
  414fde:	add    BYTE PTR [edx-0x38],dh
  414fe1:	pusha  
  414fe2:	sbb    eax,0x985d04ef
  414fe7:	sub    BYTE PTR [ebx-0x4db17f6f],0xdb
  414fee:	xor    DWORD PTR [ebp-0x6e],0xffffffab
  414ff2:	sbb    eax,0xa0aca427
  414ff7:	or     eax,0x7f2c1bed
  414ffc:	jg     0x414ffc
  414ffe:	outs   dx,DWORD PTR ds:[esi]
  414fff:	cmp    bl,BYTE PTR [eax-0x1]
  415002:	fld    DWORD PTR [ebx+eax*8-0x52a96c44]
  415009:	dec    esp
  41500a:	mov    cl,0xa1
  41500c:	call   FWORD PTR [ebp+0x45]
  41500f:	dec    ecx
  415010:	mov    bh,0x69
  415012:	js     0x41505a
  415014:	mov    ss,esi
  415016:	add    cl,ch
  415018:	mov    esi,0x8155e468
  41501d:	add    BYTE PTR [edx],bl
  41501f:	mov    ah,0xfe
  415021:	jmp    0xf74c095c
  415026:	mov    esi,DWORD PTR [ecx+eax*4-0x73]
  41502a:	adc    al,0xc1
  41502c:	fdivr  QWORD PTR [ebx-0x5242eebd]
  415032:	dec    esp
  415033:	mov    al,0x5c
  415035:	std    
  415036:	stos   BYTE PTR es:[edi],al
  415037:	mov    ah,0xfc
  415039:	mov    cl,0xa8
  41503b:	stos   BYTE PTR es:[edi],al
  41503c:	stos   DWORD PTR es:[edi],eax
  41503d:	push   esp
  41503e:	outs   dx,DWORD PTR ds:[esi]
  41503f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415040:	ror    BYTE PTR [ebp+0x3a92dab5],cl
  415046:	mov    DWORD PTR [esi+0x73],ebx
  415049:	test   bl,0xe2
  41504c:	dec    edx
  41504d:	arpl   cx,dx
  41504f:	mov    edx,ss
  415051:	jns    0x41503a
  415053:	push   edi
  415054:	popw   ds
  415056:	push   cs
  415057:	outs   dx,BYTE PTR ds:[esi]
  415058:	pop    esi
  415059:	jmp    DWORD PTR [edx]
  41505b:	mov    BYTE PTR [edx-0x77f8568d],dh
  415061:	(bad)  
  415063:	sub    DWORD PTR [edi],ebx
  415065:	imul   DWORD PTR [ecx-0x4d]
  415068:	and    ecx,DWORD PTR [edx-0x755a414e]
  41506e:	cli    
  41506f:	inc    ebx
  415070:	inc    edi
  415071:	mov    BYTE PTR [esi-0x31],ch
  415074:	in     al,dx
  415075:	xor    DWORD PTR [ebp-0x4d],edx
  415078:	add    ch,BYTE PTR [edi]
  41507a:	sub    DWORD PTR [edi+eiz*8+0x3999cafb],edi
  415081:	jge    0x4150af
  415083:	push   ss
  415084:	xchg   ecx,eax
  415085:	in     al,dx
  415086:	jno    0x4150ee
  415088:	into   
  415089:	call   0xa598:0x8b9af199
  415090:	sahf   
  415091:	jl     0x415105
  415093:	mov    bh,cl
  415095:	or     edi,DWORD PTR [eax-0x50]
  415098:	mov    esi,0x17563411
  41509d:	loop   0x415030
  41509f:	pop    eax
  4150a0:	mov    eax,ds:0x66b8f7d5
  4150a5:	push   0xa4101d38
  4150aa:	push   es
  4150ab:	or     eax,0x7bdc4720
  4150b0:	xchg   DWORD PTR [edi],eax
  4150b2:	add    BYTE PTR [ebx],bl
  4150b4:	cld    
  4150b5:	and    eax,0x23028db9
  4150ba:	inc    esp
  4150bb:	dec    edi
  4150bc:	mov    ebx,cs
  4150be:	push   ebx
  4150bf:	stos   DWORD PTR es:[edi],eax
  4150c0:	mov    al,ds:0xd93416d3
  4150c5:	push   0x1a55583
  4150ca:	dec    edi
  4150cb:	ins    DWORD PTR es:[edi],dx
  4150cc:	fwait
  4150cd:	push   edx
  4150ce:	out    0x9a,al
  4150d0:	jge    0x41506c
  4150d2:	sbb    eax,0x8571c8a5
  4150d7:	or     esp,edx
  4150d9:	push   es
  4150da:	test   DWORD PTR [eax+esi*8+0x751a54eb],ebp
  4150e1:	inc    edx
  4150e2:	mov    edx,0xff78bf40
  4150e7:	fld    DWORD PTR [ebx-0x312e1f94]
  4150ed:	fs in  eax,0x86
  4150f0:	jl     0x41515a
  4150f2:	in     eax,0x8e
  4150f4:	jne    0x41511d
  4150f6:	jmp    0xbbfa:0x99b17172
  4150fd:	xchg   ebx,eax
  4150fe:	and    eax,0x5b15cc54
  415103:	mov    edi,0xf735c904
  415108:	push   esp
  415109:	adc    edi,ecx
  41510b:	ficomp DWORD PTR [esi+0x3e8d4161]
  415111:	mov    cl,0x5b
  415113:	shr    BYTE PTR [eax+0x4a1ca491],cl
  415119:	cmp    ebx,DWORD PTR [ecx-0x1d]
  41511c:	xchg   DWORD PTR [bx+di+0x66],edi
  415120:	int    0x73
  415122:	gs add eax,0xa391b386
  415128:	mov    ebx,0xa3b162f7
  41512d:	pop    eax
  41512e:	xor    eax,esp
  415130:	xchg   ebx,eax
  415131:	mov    WORD PTR [eax],cs
  415133:	mov    DWORD PTR [edx+0x6d],eax
  415136:	retf   
  415137:	stc    
  415138:	and    ebx,DWORD PTR [ecx-0xf440a06]
  41513e:	ins    BYTE PTR es:[edi],dx
  41513f:	es imul esi,ebp,0x74ae605e
  415146:	(bad)  
  415147:	lock mov esi,0x51bf9838
  41514d:	adc    al,0xc
  41514f:	lss    esp,FWORD PTR [esi-0x21]
  415153:	loopne 0x415141
  415155:	out    0x52,eax
  415157:	push   esi
  415158:	rcl    BYTE PTR [ebx],1
  41515a:	shl    BYTE PTR [edi+0x2c],1
  41515d:	mov    al,0x9e
  41515f:	xor    BYTE PTR [esi+0x52da4799],bl
  415165:	xchg   esp,eax
  415166:	leave  
  415167:	jb     0x415138
  415169:	mov    al,0xb4
  41516b:	mov    edx,DWORD PTR [esi-0x584e98d6]
  415171:	inc    edi
  415172:	loope  0x415149
  415174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415175:	fsub   DWORD PTR [edi]
  415177:	mov    DWORD PTR [ebp-0x17a73260],ebp
  41517d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517e:	imul   ecx,ebp,0x53
  415181:	cmp    ebx,ebp
  415183:	out    0xa2,eax
  415185:	mov    esp,0xe1f06c6a
  41518a:	(bad)  
  41518b:	into   
  41518c:	or     al,0x55
  41518e:	das    
  41518f:	xchg   esp,eax
  415190:	mov    eax,0xc200d976
  415195:	mov    al,0xc7
  415197:	dec    ebx
  415198:	in     al,dx
  415199:	cmp    al,0x87
  41519b:	pop    DWORD PTR [ecx-0x16d6b41a]
  4151a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a2:	dec    ebp
  4151a3:	psubusw mm2,QWORD PTR [edx-0x5aec2428]
  4151aa:	mov    ch,0x1
  4151ac:	fstp   QWORD PTR [esi-0x40]
  4151af:	mov    dl,0x79
  4151b1:	fcom   DWORD PTR [ebp-0x2fd62b0d]
  4151b7:	or     ebx,edx
  4151b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ba:	pop    edi
  4151bb:	in     eax,dx
  4151bc:	aaa    
  4151bd:	jle    0x415186
  4151bf:	jo     0x41516a
  4151c1:	imul   edx,eax,0x93b5347
  4151c7:	test   al,0xdc
  4151c9:	mov    esi,?
  4151cb:	mov    esp,0xa27b9625
  4151d0:	inc    edi
  4151d1:	adc    DWORD PTR [eax-0x2525049a],0xffffffd3
  4151d8:	add    ah,BYTE PTR [ebp-0x6a]
  4151db:	aam    0xf7
  4151dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151de:	fwait
  4151df:	jnp    0x4151b5
  4151e1:	push   edx
  4151e2:	imul   eax,esp,0x4f
  4151e5:	ret    0x7d4d
  4151e8:	mov    dl,0x26
  4151ea:	or     DWORD PTR ds:0x8b7934bf,eax
  4151f0:	mov    ?,WORD PTR [ebp-0x2920548f]
  4151f6:	push   cs
  4151f7:	ret    
  4151f8:	inc    ebp
  4151f9:	push   ecx
  4151fa:	sahf   
  4151fb:	and    esi,DWORD PTR [ecx-0x5b373204]
  415201:	add    dh,BYTE PTR [ebx-0x1e082149]
  415207:	jmp    0x4f12:0x6af5745f
  41520e:	ss mov esp,0x3ab66303
  415214:	xchg   ebp,eax
  415215:	sbb    esi,eax
  415217:	frstor [ecx+0x259affc8]
  41521d:	cmp    bh,BYTE PTR [eax+0x37097da8]
  415223:	adc    DWORD PTR [eax],edi
  415225:	mov    esp,0x30ed2137
  41522a:	fs mov al,0x57
  41522d:	inc    edx
  41522e:	push   0x178446bc
  415233:	xlat   BYTE PTR ds:[ebx]
  415234:	and    al,0x6b
  415236:	call   0xb5f1:0x9dad87a
  41523d:	mov    cl,0x16
  41523f:	adc    eax,0x403e7cd5
  415244:	sbb    dh,BYTE PTR [edx-0x333c5ea3]
  41524a:	in     eax,0xab
  41524c:	dec    eax
  41524d:	retf   
  41524e:	mov    al,ds:0xe2e209fc
  415253:	cld    
  415254:	and    BYTE PTR [esi+eax*2],0xd0
  415258:	xor    ebx,DWORD PTR [ecx+0x79]
  41525b:	jbe    0x4151f8
  41525d:	into   
  41525e:	mov    DWORD PTR [esi+eiz*1+0x4d065eae],eax
  415265:	mov    ecx,0x78996a3d
  41526a:	push   eax
  41526b:	icebp  
  41526c:	xchg   ebp,eax
  41526d:	xor    dl,BYTE PTR [esi-0x4]
  415270:	xor    eax,0x48ca1223
  415275:	retf   
  415276:	jnp    0x4152a4
  415278:	dec    ebp
  415279:	arpl   WORD PTR [esi-0x33068600],sp
  41527f:	cdq    
  415280:	sbb    esp,DWORD PTR [esi]
  415282:	cmp    DWORD PTR [edx],edi
  415284:	retf   0x380b
  415287:	mov    esi,0x4a3e0b1d
  41528c:	pop    ebp
  41528d:	or     DWORD PTR [edx-0x711b180e],ebx
  415293:	and    edi,DWORD PTR [edx]
  415295:	dec    DWORD PTR [ebp-0x3c847674]
  41529b:	mov    ch,0x5b
  41529d:	add    BYTE PTR [eax+0xb4c79e7],bh
  4152a3:	xchg   esi,eax
  4152a4:	out    0x1e,al
  4152a6:	jcxz   0x415298
  4152a9:	in     eax,0x17
  4152ab:	retf   0x56ff
  4152ae:	mov    bl,0x42
  4152b0:	cmc    
  4152b1:	icebp  
  4152b2:	out    0x5,al
  4152b4:	js     0x4152d8
  4152b6:	pop    ds
  4152b7:	push   edi
  4152b8:	shl    eax,cl
  4152ba:	cmp    DWORD PTR [ecx],esi
  4152bc:	xchg   ebp,eax
  4152bd:	int    0x19
  4152bf:	inc    esp
  4152c0:	mov    esi,0xc5c7d9b3
  4152c5:	icebp  
  4152c6:	push   ds
  4152c7:	pusha  
  4152c8:	jmp    0xd5afacd4
  4152cd:	mov    ebp,0xb0dd8b5a
  4152d2:	and    BYTE PTR [esi-0x216c536f],dl
  4152d8:	add    al,dl
  4152da:	hlt    
  4152db:	sub    al,bl
  4152dd:	iret   
  4152de:	mov    BYTE PTR [edi],al
  4152e0:	dec    esp
  4152e1:	or     BYTE PTR [edi-0x311c8869],bh
  4152e7:	outs   dx,BYTE PTR ds:[esi]
  4152e8:	aaa    
  4152e9:	jmp    DWORD PTR [ebx-0x3de5f381]
  4152ef:	sub    DWORD PTR [edi-0x587d532c],eax
  4152f5:	jmp    0xf60f:0xba783663
  4152fc:	mov    ds:0x25493adc,eax
  415301:	mov    bl,0x53
  415303:	aas    
  415304:	ins    BYTE PTR es:[edi],dx
  415305:	in     al,0xca
  415307:	bound  ebp,QWORD PTR [ebx+0x43]
  41530a:	iret   
  41530b:	push   eax
  41530c:	xchg   edx,eax
  41530d:	ror    DWORD PTR [edi+0x5d],1
  415310:	add    eax,0xa8b1f46a
  415315:	xor    eax,0x2130976c
  41531a:	mov    bl,0x96
  41531c:	xor    DWORD PTR [ebx+0x38b66bf6],ebx
  415322:	jmp    0x4152e5
  415324:	les    esp,FWORD PTR [eax-0x218d37ad]
  41532a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41532b:	pop    esi
  41532c:	out    0x49,al
  41532e:	arpl   WORD PTR [edx],bx
  415330:	adc    eax,0x3680d562
  415335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415336:	cmp    BYTE PTR [edx],dl
  415338:	cmp    al,0xc2
  41533a:	cdq    
  41533b:	or     ebp,DWORD PTR [edi]
  41533d:	rol    DWORD PTR [edi],cl
  41533f:	pop    ebp
  415340:	sub    eax,0xcb54498a
  415345:	xchg   DWORD PTR [eax-0x1e5e58f8],ebx
  41534b:	(bad)  
  41534c:	and    bh,bl
  41534e:	jecxz  0x415399
  415350:	in     al,dx
  415351:	test   DWORD PTR [edx+0x45e69b0c],edx
  415357:	xchg   ecx,eax
  415358:	xor    al,0x58
  41535a:	jmp    0x4153d9
  41535c:	repz fsubrp st(3),st
  41535f:	dec    esp
  415360:	imul   ecx,DWORD PTR [esi+0x29],0x148c998f
  415367:	xor    DWORD PTR [ebp+0x71],ebp
  41536a:	into   
  41536b:	pop    ecx
  41536c:	(bad)  
  41536f:	mov    ds:0xe5c84f82,al
  415374:	and    dh,ah
  415376:	nop
  415377:	sahf   
  415378:	cmp    cl,BYTE PTR ds:0x236f5c0a
  41537e:	mov    esi,0x3a8ba9d8
  415383:	pop    ds
  415384:	adc    bl,cl
  415386:	jmp    0x4153dc
  415388:	or     al,0xe4
  41538a:	lahf   
  41538b:	call   0xf74abb8e
  415390:	arpl   dx,dx
  415392:	push   edx
  415393:	or     BYTE PTR [ecx],ch
  415395:	shl    DWORD PTR [eax-0x8efa5b9],1
  41539b:	and    BYTE PTR [ebp-0x7a],0xce
  41539f:	mov    WORD PTR es:[esi+0x38350ce0],?
  4153a6:	aam    0x55
  4153a8:	data16 fistp QWORD PTR [esi+0x4ec3dae1]
  4153af:	jno    0x41542e
  4153b1:	push   0x68030130
  4153b6:	xchg   edx,eax
  4153b7:	call   0x411a1b0
  4153bc:	je     0x415366
  4153be:	push   ebx
  4153bf:	cmp    al,BYTE PTR [esi]
  4153c1:	lds    ecx,FWORD PTR [eax-0x501f4e10]
  4153c7:	mov    esp,0x30ff94bd
  4153cc:	xchg   edx,eax
  4153cd:	pop    ebp
  4153ce:	sub    BYTE PTR [ecx+ebx*8-0x75e53454],cl
  4153d5:	adc    ebp,DWORD PTR [esi+0x53f59980]
  4153db:	rcl    cl,cl
  4153dd:	test   DWORD PTR gs:[edx],ebp
  4153e0:	inc    edx
  4153e1:	sub    eax,0xbd386c5c
  4153e6:	addr16 xchg edx,eax
  4153e8:	pop    edi
  4153e9:	mov    bh,0xaa
  4153eb:	mov    eax,0xd35bc01b
  4153f0:	js     0x4153e0
  4153f2:	adc    DWORD PTR [esi],eax
  4153f4:	lea    eax,[ecx+0x7773c43b]
  4153fa:	dec    eax
  4153fb:	pop    ds
  4153fc:	inc    esp
  4153fd:	jmp    0x4153df
  4153ff:	shr    edx,1
  415401:	pop    edx
  415402:	mov    ebp,0x8c81477c
  415407:	outs   dx,BYTE PTR ds:[esi]
  415408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415409:	and    ax,WORD PTR [edi]
  41540c:	mov    dh,0x8
  41540e:	cmp    al,0x46
  415410:	js     0x41541a
  415412:	or     eax,0xff61c5f8
  415417:	or     bl,bh
  415419:	adc    DWORD PTR [edx],ecx
  41541b:	ror    esi,1
  41541d:	rol    DWORD PTR [ebp-0xb9b4a5a],0xb5
  415424:	enter  0x4e10,0xab
  415428:	addr16 push 0xc97d6300
  41542e:	pushf  
  41542f:	cmp    al,0x1a
  415431:	pop    ds
  415432:	mov    esp,0x81d95725
  415437:	stos   BYTE PTR es:[edi],al
  415438:	jne    0x4153e2
  41543a:	sbb    ecx,ebx
  41543c:	nop
  41543d:	rcl    DWORD PTR [edx],cl
  41543f:	outs   dx,BYTE PTR ds:[esi]
  415440:	push   0xffffff8a
  415442:	mov    edi,0x41fca408
  415447:	retf   0xb389
  41544a:	xchg   DWORD PTR [ebx+0x2b],ebp
  41544d:	mov    ecx,0x61bd5e1d
  415452:	jge    0x4153d8
  415454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415455:	or     BYTE PTR [edi-0x7fdbb6b0],dl
  41545b:	into   
  41545c:	pop    ss
  41545d:	out    0x3a,eax
  41545f:	test   BYTE PTR [ecx],bl
  415461:	ds sub dh,0x3b
  415465:	outs   dx,BYTE PTR ds:[esi]
  415466:	xor    eax,0x4e3c5e93
  41546b:	enter  0x9e0f,0xb0
  41546f:	lods   eax,DWORD PTR ds:[esi]
  415470:	iret   
  415471:	repnz push 0xffffff9e
  415474:	dec    edx
  415475:	cwde   
  415476:	jle    0x4154bc
  415478:	popf   
  415479:	push   0xffffffaf
  41547b:	rol    eax,0x43
  41547e:	mov    edx,0xff2c0068
  415483:	add    esp,DWORD PTR [eax+edx*4]
  415486:	inc    ebx
  415487:	(bad)  [ebp-0x44]
  41548a:	or     ebx,DWORD PTR ds:0x86cb1f
  415490:	push   ebx
  415491:	mov    al,0x75
  415493:	loop   0x415481
  415495:	fsubr  st,st(4)
  415497:	dec    esp
  415498:	push   ds
  415499:	push   0x2dd228dc
  41549e:	int    0xe1
  4154a0:	pop    esp
  4154a1:	sbb    al,0x95
  4154a3:	fcmove st,st(1)
  4154a5:	outs   dx,DWORD PTR ds:[esi]
  4154a6:	cli    
  4154a7:	daa    
  4154a8:	test   al,0x5e
  4154aa:	dec    eax
  4154ab:	repnz pop ebp
  4154ad:	cmp    esi,eax
  4154af:	hlt    
  4154b0:	mov    ah,0x7a
  4154b2:	jno    0xb1953453
  4154b8:	sahf   
  4154b9:	sbb    DWORD PTR [esi],edx
  4154bb:	mov    bh,0x8b
  4154bd:	cmp    al,0x6b
  4154bf:	fmul   DWORD PTR [eax+0x59]
  4154c2:	sub    ecx,DWORD PTR [ecx]
  4154c4:	sti    
  4154c5:	mov    al,dh
  4154c7:	jns    0x415522
  4154c9:	and    cl,BYTE PTR [esi-0x23]
  4154cc:	je     0x4154ca
  4154ce:	pop    ebp
  4154cf:	dec    esi
  4154d0:	xchg   esi,eax
  4154d1:	jl     0x4154ee
  4154d3:	into   
  4154d4:	(bad)  
  4154d5:	ins    DWORD PTR es:[edi],dx
  4154d6:	xlat   BYTE PTR ds:[ebx]
  4154d7:	cs test eax,0x51b65695
  4154dd:	cwde   
  4154de:	out    0xd1,eax
  4154e0:	adc    ebp,ebp
  4154e2:	shr    DWORD PTR [eax],cl
  4154e4:	arpl   bp,cx
  4154e6:	repnz push ds
  4154e8:	push   0x581a54b1
  4154ed:	mov    al,BYTE PTR [ebx-0x3e]
  4154f0:	dec    edi
  4154f1:	add    eax,0xdecc95eb
  4154f6:	test   al,0x25
  4154f8:	jb     0x4154a3
  4154fa:	sbb    BYTE PTR [eax+0x20],ah
  4154fd:	lods   eax,DWORD PTR ds:[esi]
  4154fe:	shl    DWORD PTR [ebx],1
  415500:	popa   
  415501:	push   cs
  415502:	mov    dl,0x2b
  415504:	mov    esp,0x4292f63d
  415509:	mov    DWORD PTR [ebx+0x79a07212],edx
  41550f:	jmp    0x4e595149
  415514:	pop    eax
  415515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415516:	and    esi,esp
  415518:	ins    DWORD PTR es:[edi],dx
  415519:	mov    eax,ds:0xb03d4040
  41551e:	sub    cl,dl
  415520:	mov    BYTE PTR [esi-0x327fa6e6],ch
  415526:	cmp    edx,DWORD PTR [edx]
  415528:	js     0x41552f
  41552a:	mov    ah,0xa5
  41552c:	js     0x415519
  41552e:	aaa    
  41552f:	rol    DWORD PTR [edi],cl
  415531:	les    esp,FWORD PTR [ebx]
  415533:	xor    ebx,DWORD PTR [ebx+0x3a88155]
  415539:	push   edi
  41553a:	push   ebp
  41553b:	enter  0xd595,0x48
  41553f:	mov    ebx,DWORD PTR [ebx-0x282f55fc]
  415545:	pop    ecx
  415546:	imul   esi,DWORD PTR [ebx+0x259d7e1c],0x3a1ff40e
  415550:	xchg   DWORD PTR [esp+edi*2-0x5],ebx
  415554:	xlat   BYTE PTR ds:[ebx]
  415555:	adc    BYTE PTR ds:0x842af0eb,0x1f
  41555c:	aas    
  41555d:	xor    dh,dl
  41555f:	cld    
  415560:	imul   eax,DWORD PTR [ecx],0x3c
  415563:	or     eax,0xe93e93d
  415568:	jp     0x415549
  41556a:	fnstsw WORD PTR [edx+0x26]
  41556d:	fadd   QWORD PTR [ebx-0x7d]
  415570:	ret    0x549e
  415573:	mov    bl,0x8f
  415575:	sub    dl,BYTE PTR [esi]
  415577:	mov    bl,0x35
  415579:	cmp    edx,DWORD PTR [esi-0x68ef178d]
  41557f:	push   ds
  415580:	cmp    BYTE PTR [ecx+0x77],ch
  415583:	push   edi
  415584:	fldenv [ebx-0x43]
  415587:	adc    eax,0x3c521409
  41558c:	jmp    0x415511
  41558e:	test   ah,cl
  415590:	test   bh,dh
  415592:	jle    0x415567
  415594:	mov    DWORD PTR [esi],esp
  415596:	mov    dh,0xf1
  415598:	neg    DWORD PTR gs:[eax-0x43]
  41559c:	mul    BYTE PTR [ecx-0x2f1640bc]
  4155a2:	pusha  
  4155a3:	daa    
  4155a4:	mov    ah,0x55
  4155a6:	sbb    ebp,DWORD PTR [eax]
  4155a8:	sbb    eax,0x2639cafc
  4155ad:	mov    al,ds:0x9ec3ce48
  4155b2:	cld    
  4155b3:	shl    BYTE PTR [ebp+0x253d0b3],1
  4155b9:	dec    edx
  4155ba:	sbb    DWORD PTR [edx+0x28],0xffffffe0
  4155be:	les    eax,FWORD PTR [edi]
  4155c0:	shl    DWORD PTR [ebx+0x15],0x58
  4155c4:	sub    dh,bl
  4155c6:	inc    esp
  4155c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c8:	dec    edx
  4155c9:	vminss xmm6,xmm6,DWORD PTR [esi+0x1f]
  4155ce:	push   ss
  4155cf:	jle    0x4155e5
  4155d1:	or     dh,bl
  4155d3:	cmp    DWORD PTR [ebp+ebx*1+0x1e7c86b0],ebx
  4155da:	adc    esi,DWORD PTR [ebx+0x117e88f9]
  4155e0:	xor    ebp,eax
  4155e2:	sub    DWORD PTR [ebx+eiz*8+0x2451447b],ebx
  4155e9:	push   es
  4155ea:	div    DWORD PTR [edx+0x15]
  4155ed:	dec    esi
  4155ee:	sti    
  4155ef:	int    0x9a
  4155f1:	call   0x597c:0x20db1c4c
  4155f8:	mov    edi,0xeef0bbd8
  4155fd:	dec    edi
  4155fe:	and    ch,BYTE PTR [eax+eiz*4+0x218a9744]
  415605:	pop    ds
  415606:	mov    BYTE PTR [ebx+0x2fa10dc5],bl
  41560c:	cld    
  41560d:	push   ss
  41560e:	call   0x2fd8:0x422bc811
  415615:	test   BYTE PTR [esi+0x36],ah
  415618:	fxch   st(0)
  41561a:	mov    dl,0x40
  41561c:	ror    DWORD PTR [ecx],cl
  41561e:	and    BYTE PTR [edx+0x30],dl
  415621:	sti    
  415622:	cld    
  415623:	test   BYTE PTR [eax-0x45359e1],cl
  415629:	or     al,0x15
  41562b:	sar    DWORD PTR [edi+edx*2-0x2fd13362],1
  415632:	or     al,0xc9
  415634:	sahf   
  415635:	xor    BYTE PTR [ebp+edx*1-0x3e],dh
  415639:	sbb    ch,dh
  41563b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563c:	popf   
  41563d:	and    edi,DWORD PTR [edi-0x3a13c64f]
  415643:	inc    BYTE PTR [esi]
  415645:	call   0xcb9c640e
  41564a:	loop   0x4155eb
  41564c:	mov    esp,0xfc860917
  415651:	xchg   esi,eax
  415652:	xchg   bp,ax
  415654:	daa    
  415655:	dec    esi
  415656:	in     al,0x7a
  415658:	jo     0x4156bf
  41565a:	inc    ecx
  41565b:	pusha  
  41565c:	pushf  
  41565d:	stc    
  41565e:	out    0xf2,al
  415660:	(bad)  
  415661:	mov    edi,0x8a53d698
  415666:	xchg   edx,eax
  415667:	adc    bl,dl
  415669:	in     eax,0xef
  41566b:	inc    esp
  41566c:	cwde   
  41566d:	leave  
  41566e:	xor    ebp,DWORD PTR cs:[ebx]
  415671:	and    al,0x60
  415673:	mov    BYTE PTR [esi],dh
  415675:	mov    ah,0x9e
  415677:	cmp    eax,0x59ccc25
  41567c:	or     BYTE PTR [esi],0xcf
  41567f:	cmc    
  415680:	push   edx
  415681:	adc    DWORD PTR [ebp-0x59],ebx
  415684:	je     0x4156da
  415686:	test   BYTE PTR [edx],ch
  415688:	icebp  
  415689:	mov    ebx,0xf2adb708
  41568e:	and    eax,DWORD PTR [ecx+0x35]
  415691:	inc    eax
  415692:	pop    ecx
  415693:	iret   
  415694:	jecxz  0x415691
  415696:	iret   
  415697:	inc    ebp
  415698:	cs pop ds
  41569a:	sti    
  41569b:	and    edx,ecx
  41569d:	mov    ch,0x69
  41569f:	sub    BYTE PTR [ebx],bh
  4156a1:	push   esp
  4156a2:	pop    es
  4156a3:	mov    fs,WORD PTR [esi+0x4cab8f89]
  4156a9:	into   
  4156aa:	out    0x89,al
  4156ac:	test   DWORD PTR [edi-0x8],edi
  4156af:	adc    DWORD PTR [ebp+0x42],ecx
  4156b2:	ss jo  0x4156d9
  4156b5:	sti    
  4156b6:	popf   
  4156b7:	xor    esi,ebp
  4156b9:	pop    es
  4156ba:	pop    ebx
  4156bb:	imul   edx,DWORD PTR ss:[ebx],0xffffffae
  4156bf:	std    
  4156c0:	mov    esp,0xf4d1d05b
  4156c5:	jecxz  0x41569f
  4156c7:	sbb    BYTE PTR [ebx+0x69],bh
  4156ca:	shl    BYTE PTR [eax+0x488e3b08],0x46
  4156d1:	xchg   ebp,eax
  4156d2:	pop    edx
  4156d3:	and    ebp,DWORD PTR [ebp-0x2e]
  4156d6:	cli    
  4156d7:	fldenv [ebx]
  4156d9:	stc    
  4156da:	scas   al,BYTE PTR es:[edi]
  4156db:	xchg   ebx,eax
  4156dc:	push   0xffffffa0
  4156de:	sbb    al,0xd9
  4156e0:	out    0xb4,eax
  4156e2:	xlat   BYTE PTR ds:[ebx]
  4156e3:	add    esi,ecx
  4156e5:	dec    esi
  4156e6:	sbb    eax,0xdecd76c
  4156eb:	xchg   esp,eax
  4156ec:	dec    esi
  4156ed:	and    BYTE PTR [ecx-0x23fee632],0xdf
  4156f4:	imul   ecx,DWORD PTR [ebx-0x69],0x85b30773
  4156fb:	mov    ecx,0x3dff2166
  415700:	fwait
  415701:	cwde   
  415702:	pop    ebp
  415703:	cmp    al,0x95
  415705:	aad    0x74
  415707:	std    
  415708:	add    al,0x4b
  41570a:	adc    al,bl
  41570c:	and    BYTE PTR [ebx-0x1b],ch
  41570f:	xor    BYTE PTR [edx+eiz*2+0x18],cl
  415713:	in     al,dx
  415714:	dec    ebx
  415715:	xchg   BYTE PTR ds:0xb9cfd08c,cl
  41571b:	push   edx
  41571c:	enter  0x23d0,0xb5
  415720:	out    0x4c,al
  415722:	push   eax
  415723:	push   ebx
  415724:	into   
  415725:	push   edi
  415726:	outs   dx,BYTE PTR ds:[esi]
  415727:	loope  0x415751
  415729:	nop
  41572a:	pop    edx
  41572b:	xchg   edi,eax
  41572c:	xchg   ecx,eax
  41572d:	out    dx,al
  41572e:	push   esp
  41572f:	cmp    cl,BYTE PTR [eax+0x6496bfe8]
  415735:	ficomp DWORD PTR [esi+esi*4+0x76fa84f3]
  41573c:	ret    0x718b
  41573f:	neg    DWORD PTR [edx]
  415741:	mov    ds:0x664417e3,al
  415746:	mov    ebp,0xa35aa43a
  41574b:	pop    esi
  41574c:	or     eax,0xaa57dfd8
  415751:	push   ecx
  415752:	xchg   edx,eax
  415753:	gs aam 0xbf
  415756:	cld    
  415757:	mov    ebp,0x62e02f37
  41575c:	sub    BYTE PTR [ebp+0x152072d0],bl
  415762:	ds das 
  415764:	imul   edi,DWORD PTR [edx],0x62
  415767:	jl     0x4157c9
  415769:	add    DWORD PTR [ebp-0x7d6842b4],ebp
  41576f:	int    0x63
  415771:	pusha  
  415772:	pop    ebx
  415773:	jg     0x415747
  415775:	fimul  WORD PTR [ebx]
  415777:	popf   
  415778:	mov    gs,WORD PTR [ebx+edi*1-0x1]
  41577c:	mov    bl,0x2f
  41577e:	mov    ch,0xe5
  415780:	mov    al,ds:0x5d0a3147
  415785:	jle    0x4157d0
  415787:	loopne 0x415796
  415789:	(bad)
  41578e:	push   es
  41578f:	dec    eax
  415790:	mov    ecx,DWORD PTR [esi+0x3fa9f701]
  415796:	fdiv   DWORD PTR [edx]
  415798:	jmp    DWORD PTR [edx-0x4e31374]
  41579e:	data16 mov dl,0xf6
  4157a1:	sub    al,0x4a
  4157a3:	cmp    DWORD PTR ds:0xbae6c553,edx
  4157a9:	fxch   st(2)
  4157ab:	cmp    eax,0x84e7271d
  4157b0:	call   0xe32d:0x9d37c60
  4157b7:	inc    esp
  4157b9:	test   eax,0x15f695c5
  4157be:	call   0xfc2d7426
  4157c3:	sbb    edx,DWORD PTR [ebx+0x66149739]
  4157c9:	sub    ecx,DWORD PTR [edi]
  4157cb:	push   0x2c178de7
  4157d0:	shr    DWORD PTR [edx],0x4c
  4157d3:	fdivr  st,st(6)
  4157d5:	mov    WORD PTR [edx-0x4b],ss
  4157d8:	pop    edx
  4157d9:	bound  esi,QWORD PTR [edx-0x67]
  4157dc:	(bad)  
  4157dd:	stos   BYTE PTR es:[edi],al
  4157de:	imul   ecx,DWORD PTR [edx],0x3659f306
  4157e4:	shl    BYTE PTR [ebx-0x69680125],cl
  4157ea:	ficomp DWORD PTR [esi-0x44f3cfcf]
  4157f0:	(bad)  
  4157f1:	jl     0x415824
  4157f3:	sub    DWORD PTR [ebp+0x466fac01],edx
  4157f9:	shl    DWORD PTR [ecx],0xe6
  4157fc:	mov    dh,0xae
  4157fe:	imul   esi,DWORD PTR [eax],0x84a152cc
  415804:	lods   al,BYTE PTR ds:[esi]
  415805:	popf   
  415806:	xor    al,0x3f
  415808:	jnp    0x415842
  41580a:	mov    ch,0x33
  41580c:	mov    ecx,0x3abf46f8
  415811:	xchg   ecx,eax
  415812:	cli    
  415813:	pop    ds
  415814:	or     DWORD PTR [esi+0x6a],0x7
  415818:	adc    BYTE PTR [ecx+ecx*4-0x71c3ea60],0x8d
  415820:	adc    eax,0xc855fae5
  415825:	xor    BYTE PTR [edi+esi*2+0x6107ef1b],al
  41582c:	daa    
  41582d:	push   ebp
  41582e:	xchg   ebx,eax
  41582f:	ins    BYTE PTR es:[edi],dx
  415830:	jl     0x4157ee
  415832:	in     eax,0xfa
  415834:	cmp    DWORD PTR [ebp-0x62],edx
  415837:	aas    
  415838:	(bad)  
  415839:	mov    cl,0xf7
  41583b:	es and eax,0xd8ce553d
  415841:	fisttp DWORD PTR [edi+ebp*8]
  415844:	pusha  
  415845:	pop    ecx
  415846:	adc    eax,0x95a912af
  41584b:	dec    ecx
  41584c:	ds mov bl,0x8f
  41584f:	dec    ebx
  415850:	push   0xfffffff3
  415852:	in     eax,0x14
  415854:	gs es dec ecx
  415857:	retf   0x2953
  41585a:	inc    ebp
  41585b:	mov    bh,0xfc
  41585d:	mov    ds:0x1affa612,al
  415862:	xor    eax,DWORD PTR [edx+0x13dbdcb8]
  415868:	push   0x13
  41586a:	adc    al,0xee
  41586c:	jmp    0x415800
  41586e:	not    BYTE PTR [eax]
  415870:	in     al,dx
  415871:	jae    0x415835
  415873:	mov    DWORD PTR [esi-0x5a3f3f3],ebx
  415879:	jno    0x4158aa
  41587b:	loopne 0x41587c
  41587d:	icebp  
  41587e:	jecxz  0x41580c
  415880:	pushf  
  415881:	mov    al,0x96
  415883:	sub    BYTE PTR [ebx],bl
  415885:	jge    0x41583b
  415887:	mov    edx,0x717c5e1e
  41588c:	sub    eax,0xc16dec58
  415891:	aad    0x86
  415893:	es ds mov ah,0xa5
  415897:	xor    edi,esi
  415899:	xchg   ebp,eax
  41589a:	fwait
  41589b:	push   edi
  41589c:	fadd   QWORD PTR [esi+ebp*4]
  41589f:	add    DWORD PTR [ebp+0x13],0xfffffffe
  4158a3:	mov    WORD PTR [di],?
  4158a6:	push   es
  4158a7:	mov    edx,0xbc06038b
  4158ac:	lods   eax,DWORD PTR ds:[esi]
  4158ad:	mov    esp,0x441008fc
  4158b2:	mov    eax,ds:0x531ee875
  4158b7:	enter  0x8bfa,0x46
  4158bb:	ds sar ch,0x27
  4158bf:	outs   dx,DWORD PTR es:[esi]
  4158c1:	aas    
  4158c2:	test   BYTE PTR [edi-0x5517aebf],bl
  4158c8:	and    esp,edi
  4158ca:	out    0x63,eax
  4158cc:	mov    ah,0x98
  4158ce:	push   es
  4158cf:	xchg   dh,dl
  4158d1:	lods   al,BYTE PTR ds:[esi]
  4158d2:	push   es
  4158d3:	inc    edx
  4158d4:	mov    ebx,0x19569a64
  4158d9:	adc    BYTE PTR [esi],al
  4158db:	jecxz  0x4158aa
  4158dd:	icebp  
  4158de:	sbb    BYTE PTR [edx+0x44],ah
  4158e1:	cld    
  4158e2:	jo     0x41592d
  4158e4:	push   edi
  4158e5:	pop    esi
  4158e6:	fisttp DWORD PTR [edi-0x6f3398ec]
  4158ec:	and    DWORD PTR [edi+0x6a6fb1d7],0x73
  4158f3:	cmp    ax,di
  4158f6:	inc    eax
  4158f7:	jmp    0x150aef7e
  4158fc:	pop    edi
  4158fd:	jecxz  0x41596c
  4158ff:	xor    eax,0xf3e5a034
  415904:	jb     0x41594e
  415906:	push   ebx
  415907:	mov    edx,0xbce847f6
  41590c:	mov    ds:0xd0fd141b,al
  415911:	jecxz  0x415956
  415913:	push   ds
  415914:	and    BYTE PTR [edi],cl
  415916:	mov    WORD PTR [edx],fs
  415918:	xor    eax,0xf33f54e6
  41591d:	fmul   DWORD PTR [ebx+esi*4+0x6f]
  415921:	cmp    cl,BYTE PTR [edi+edi*2]
  415924:	les    ecx,FWORD PTR [ebp+0x13]
  415927:	sub    ecx,eax
  415929:	into   
  41592a:	add    edx,ecx
  41592c:	scas   eax,DWORD PTR es:[edi]
  41592d:	dec    eax
  41592e:	test   DWORD PTR [edx+0x700b65ed],esp
  415934:	aad    0xac
  415936:	cs clc 
  415938:	call   0x5c0daf51
  41593d:	fist   WORD PTR [edx-0x72]
  415940:	test   BYTE PTR [ebp+0x5a],dl
  415943:	sub    ah,BYTE PTR [esi]
  415945:	aaa    
  415946:	shl    edx,0xc6
  415949:	mov    bl,dl
  41594b:	(bad)  
  41594c:	mov    ds:0xa991f6c1,al
  415951:	lahf   
  415952:	(bad)  
  415953:	int    0x7f
  415955:	call   0x2117f205
  41595a:	jb     0x41598f
  41595c:	clc    
  41595d:	repz dec ecx
  41595f:	xchg   BYTE PTR [edx],al
  415961:	inc    ebx
  415962:	jmp    0x4158f6
  415964:	nop
  415965:	lea    esi,[esi-0x63]
  415968:	mov    ebx,0xdfa3c171
  41596d:	mov    esp,0xd2738942
  415972:	xor    BYTE PTR [ebp+0x58a2b86c],cl
  415978:	mov    esi,0x215bc0f9
  41597d:	mov    DWORD PTR [esi],eax
  41597f:	and    bl,BYTE PTR ds:[esi]
  415982:	adc    DWORD PTR [eax-0x5c7bcf55],edx
  415988:	aad    0xc1
  41598a:	int    0x44
  41598c:	int3   
  41598d:	(bad)  
  41598e:	adc    al,0x66
  415990:	pushf  
  415991:	pop    edi
  415992:	mov    bl,dl
  415994:	arpl   WORD PTR [eax],bp
  415996:	xchg   edi,eax
  415997:	ins    DWORD PTR es:[edi],dx
  415998:	sbb    eax,DWORD PTR [ecx-0x201e505a]
  41599e:	jmp    0xd02fe783
  4159a3:	sub    al,0xdc
  4159a5:	or     BYTE PTR ds:0xa53e3e1f,ah
  4159ab:	or     al,0x34
  4159ad:	scas   eax,DWORD PTR es:[edi]
  4159ae:	inc    eax
  4159af:	xchg   edx,eax
  4159b0:	dec    eax
  4159b1:	clc    
  4159b2:	push   ds
  4159b3:	lods   al,BYTE PTR ds:[esi]
  4159b4:	xor    DWORD PTR [ecx-0x61510a91],ecx
  4159ba:	popf   
  4159bb:	aas    
  4159bc:	inc    ebp
  4159bd:	pop    ecx
  4159be:	jae    0x415a14
  4159c0:	inc    edi
  4159c1:	popf   
  4159c2:	mov    ebp,0x50e13616
  4159c7:	fimul  DWORD PTR [ecx+0x3f56c2b4]
  4159cd:	pop    edx
  4159ce:	loop   0x4159ae
  4159d0:	fnstcw WORD PTR [ecx+0x2a9e3130]
  4159d6:	sbb    BYTE PTR [ebp+0x57],ah
  4159d9:	test   eax,0x937d277b
  4159de:	dec    ebx
  4159df:	pushf  
  4159e0:	repnz dec ebp
  4159e2:	pop    ecx
  4159e3:	mov    cl,0x87
  4159e5:	shl    BYTE PTR [ebp-0x7abe7bf1],1
  4159eb:	xchg   ebx,eax
  4159ec:	pop    ecx
  4159ed:	inc    esp
  4159ee:	pop    edi
  4159ef:	pop    edi
  4159f0:	shr    DWORD PTR [edi],1
  4159f2:	or     BYTE PTR [ebx+0x3c497612],dh
  4159f8:	ret    0x6326
  4159fb:	mov    esp,0xb1085e2
  415a00:	lea    ebp,[eax]
  415a02:	repnz mov al,ds:0x46e45cae
  415a08:	add    DWORD PTR [edi-0x16e7d2d1],ecx
  415a0e:	xlat   BYTE PTR ds:[ebx]
  415a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a10:	fprem  
  415a12:	push   edx
  415a13:	sbb    al,0x5a
  415a15:	inc    eax
  415a16:	ret    
  415a17:	mov    ecx,0x85ef9db3
  415a1c:	xchg   DWORD PTR [eax+0x4316d4a8],edi
  415a22:	out    0x9f,eax
  415a24:	inc    edi
  415a25:	shr    DWORD PTR [edi],0xf1
  415a28:	add    DWORD PTR [edx-0x38e0f7b],eax
  415a2e:	sub    BYTE PTR [esi],cl
  415a30:	stos   DWORD PTR es:[edi],eax
  415a31:	leave  
  415a32:	hlt    
  415a33:	or     cl,bl
  415a35:	xchg   edi,eax
  415a36:	fstp   TBYTE PTR [edx-0x24]
  415a39:	push   esp
  415a3a:	cmp    edx,ecx
  415a3c:	xor    al,0x5e
  415a3e:	pop    ebx
  415a3f:	cld    
  415a40:	out    0x9,eax
  415a42:	mov    bh,0xbc
  415a44:	sbb    eax,0x8e033294
  415a49:	stc    
  415a4a:	sar    ebp,1
  415a4c:	xor    al,0x2c
  415a4e:	das    
  415a4f:	add    al,0x2d
  415a51:	dec    esi
  415a52:	push   eax
  415a53:	dec    ebp
  415a54:	inc    ebx
  415a55:	jecxz  0x415a43
  415a57:	retf   0x1648
  415a5a:	jmp    0x415a99
  415a5c:	stos   BYTE PTR es:[edi],al
  415a5d:	icebp  
  415a5e:	mov    al,ds:0xf76bcd1b
  415a63:	jmp    0x415a8c
  415a65:	inc    ebx
  415a66:	sar    bh,0x80
  415a69:	jae    0x415a57
  415a6b:	push   edx
  415a6c:	arpl   WORD PTR ds:0xad7fa6d8,cx
  415a72:	nop
  415a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a74:	nop
  415a75:	inc    ecx
  415a76:	sub    eax,0xbeaded77
  415a7b:	pop    esp
  415a7c:	int3   
  415a7d:	add    ecx,DWORD PTR [ebp+eiz*2-0x71]
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	or     cl,ch
  415ab1:	addr16 js 0x415b02
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415ad6
  415abc:	inc    ebp
  415abd:	sbb    BYTE PTR [edi],cl
  415abf:	cmp    dh,BYTE PTR [edi]
  415ac1:	lods   al,BYTE PTR ds:[esi]
  415ac2:	adc    BYTE PTR [esi],al
  415ac4:	pop    ebp
  415ac5:	mov    edx,0x2d1d34f5
  415aca:	sbb    BYTE PTR [ebp-0x25ab7cac],al
  415ad0:	ret    
  415ad1:	mov    cl,0x34
  415ad3:	pop    edx
  415ad4:	xor    edx,ecx
  415ad6:	scas   eax,DWORD PTR es:[edi]
  415ad7:	daa    
  415ad8:	outs   dx,DWORD PTR ds:[esi]
  415ad9:	in     al,0x97
  415adb:	ja     0x415b36
  415add:	lods   eax,DWORD PTR ds:[esi]
  415ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415adf:	xor    BYTE PTR [edx+edi*2],bh
  415ae2:	jno    0x415aa5
  415ae4:	imul   eax,DWORD PTR [ecx+0x59],0x4112cbc7
  415aeb:	inc    edx
  415aec:	mov    edi,0xb26e0332
  415af1:	xor    al,0x80
  415af3:	loopne 0x415b49
  415af5:	push   eax
  415af6:	cmp    al,0x38
  415af8:	in     eax,0xe
  415afa:	mov    dl,dh
  415afc:	mov    al,0x13
  415afe:	mov    al,0xd7
  415b00:	xchg   esp,eax
  415b01:	xor    BYTE PTR ds:0x544f7d9d,0xf0
  415b08:	xchg   esi,esi
  415b0a:	sub    eax,0x5bef0a89
  415b0f:	aam    0xe6
  415b11:	mov    edi,ds
  415b13:	xor    al,0xa1
  415b15:	push   cs
  415b16:	push   eax
  415b17:	xchg   esp,eax
  415b18:	lds    ebp,FWORD PTR [esi+0x6f]
  415b1b:	call   0xd264:0x44bf538a
  415b22:	leave  
  415b23:	push   ebx
  415b24:	or     BYTE PTR [ebp-0x7b],0x5e
  415b28:	lock out dx,al
  415b2a:	mov    ebx,0x8e589b28
  415b2f:	lods   eax,DWORD PTR ds:[esi]
  415b30:	loopne 0x415ac9
  415b32:	fild   DWORD PTR ss:[esi]
  415b35:	test   BYTE PTR [edx+0x35],al
  415b38:	mov    dh,0xe8
  415b3a:	aas    
  415b3b:	pop    ebx
  415b3c:	mov    esi,DWORD PTR gs:[ecx-0x7e]
  415b40:	push   eax
  415b41:	pusha  
  415b42:	scas   eax,DWORD PTR es:[edi]
  415b43:	inc    edi
  415b44:	ror    DWORD PTR [ebp+0x9c5c32f],1
  415b4a:	pop    edx
  415b4b:	sar    DWORD PTR [ebp+0x1d836964],cl
  415b51:	lock and al,0x8f
  415b54:	daa    
  415b55:	xor    bh,BYTE PTR [edi]
  415b57:	sahf   
  415b58:	mov    esp,0xc83fd3dc
  415b5d:	jae    0x415b32
  415b5f:	sbb    edi,DWORD PTR [ebp+0x50ca4e76]
  415b65:	(bad)  
  415b66:	jno    0x415b2d
  415b68:	outs   dx,BYTE PTR ds:[esi]
  415b69:	test   BYTE PTR [ebx-0x11],ah
  415b6c:	fwait
  415b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b6e:	sbb    al,0xb5
  415b70:	inc    edi
  415b71:	stos   DWORD PTR es:[edi],eax
  415b72:	jne    0x415b4d
  415b74:	mov    WORD PTR [ebx],ss
  415b76:	into   
  415b77:	in     al,dx
  415b78:	aaa    
  415b79:	rol    DWORD PTR [ebx],cl
  415b7b:	add    dl,BYTE PTR [edi]
  415b7d:	test   al,0x4f
  415b7f:	inc    esi
  415b80:	xlat   BYTE PTR ds:[ebx]
  415b81:	stos   BYTE PTR es:[edi],al
  415b82:	jl     0x415b10
  415b84:	mov    ds:0x3202b9f4,eax
  415b89:	mov    esp,0xd17afbc0
  415b8e:	rcr    DWORD PTR [ecx],1
  415b90:	sbb    ecx,ebp
  415b92:	into   
  415b93:	aaa    
  415b94:	ins    DWORD PTR es:[edi],dx
  415b95:	fisub  WORD PTR [esp+edx*4+0x67]
  415b99:	shl    edx,0xa4
  415b9c:	icebp  
  415b9d:	ret    
  415b9e:	outs   dx,BYTE PTR ds:[esi]
  415b9f:	mov    ecx,0x26937b61
  415ba4:	das    
  415ba5:	cmp    eax,esp
  415ba7:	lahf   
  415ba8:	inc    ebp
  415ba9:	mov    edi,0x11d8d7d0
  415bae:	push   ebp
  415baf:	add    ah,BYTE PTR [esi+0x5d]
  415bb2:	sub    BYTE PTR [edx],0x62
  415bb5:	dec    ebx
  415bb6:	pop    esp
  415bb7:	gs call 0xf4da9006
  415bbd:	(bad)  
  415bbe:	pop    ebp
  415bbf:	movd   DWORD PTR [edx+0x7534084b],mm7
  415bc6:	hlt    
  415bc7:	sbb    BYTE PTR [esi+0x2bf78d99],0x2b
  415bce:	xchg   ebp,eax
  415bcf:	es jo  0x415b7b
  415bd2:	lods   eax,DWORD PTR ds:[esi]
  415bd3:	out    dx,al
  415bd4:	add    cl,BYTE PTR [eax]
  415bd6:	push   ebx
  415bd7:	mov    eax,ds:0xed71e928
  415bdc:	add    eax,0x172b9c6b
  415be1:	and    al,0xe7
  415be3:	(bad)  
  415be4:	xor    al,0xaa
  415be6:	fiadd  DWORD PTR [edx+0x63f7f7de]
  415bec:	int3   
  415bed:	fnstenv ds:0x4c9c31de
  415bf3:	pop    ds
  415bf4:	mov    al,ds:0xd8d8e282
  415bf9:	xchg   DWORD PTR [ecx+0x2b35b248],ecx
  415bff:	sti    
  415c00:	shl    eax,1
  415c02:	xor    esi,ebp
  415c04:	cmp    eax,0x482e90ed
  415c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0b:	xor    edi,0xffffffee
  415c0e:	jmp    0x19a34af6
  415c13:	cmp    edx,esp
  415c15:	inc    ebp
  415c16:	pop    ebx
  415c17:	aaa    
  415c18:	push   edi
  415c19:	jg     0x415bf7
  415c1b:	push   ds
  415c1c:	mov    cl,0x4d
  415c1e:	mov    dh,0x1b
  415c20:	sub    ecx,edx
  415c22:	or     ah,dl
  415c24:	ret    0x9313
  415c27:	jo     0x415be8
  415c29:	pop    ebx
  415c2a:	dec    esi
  415c2b:	enter  0x52a4,0xdb
  415c2f:	mov    ebp,0x917d2dc2
  415c34:	mov    ds:0xfbcfcf5d,al
  415c39:	jle    0x415c3d
  415c3b:	int3   
  415c3c:	mov    ebx,0x1b8a78d7
  415c41:	aad    0x37
  415c43:	cwde   
  415c44:	lock leave 
  415c46:	mov    edx,0xf8e2b4ec
  415c4b:	sbb    eax,0xdb77f36d
  415c50:	rcr    BYTE PTR [edx-0xee81317],1
  415c56:	push   ecx
  415c57:	fneni(8087 only) 
  415c59:	mov    eax,0x89245614
  415c5e:	ins    BYTE PTR es:[di],dx
  415c60:	aam    0x82
  415c62:	dec    edi
  415c63:	mov    ds:0x93d5b797,al
  415c68:	clc    
  415c69:	shl    DWORD PTR [ebx+ebp*8+0x9],1
  415c6d:	push   eax
  415c6e:	loopne 0x415c5d
  415c70:	inc    ebx
  415c71:	jns    0x415cb8
  415c73:	mov    WORD PTR [edx+0x3d35f54e],?
  415c79:	cmp    al,0x5e
  415c7b:	xchg   edi,eax
  415c7c:	mov    ah,0x4b
  415c7e:	mov    bh,0x61
  415c81:	jecxz  0x415cfe
  415c83:	scas   al,BYTE PTR es:[edi]
  415c84:	adc    al,0x4
  415c86:	call   0x3f0f:0xf43cea07
  415c8d:	es pop es
  415c8f:	dec    esi
  415c90:	test   BYTE PTR [edx+0x32f04904],cl
  415c96:	jmp    0x269b5043
  415c9b:	jle    0x415c78
  415c9d:	fild   WORD PTR [eax+0x11cdd1eb]
  415ca3:	inc    esp
  415ca4:	call   0xe5b3:0x45213d2c
  415cab:	out    dx,al
  415cac:	mov    ecx,0x78d0ff80
  415cb1:	bound  esp,QWORD PTR [esi+0x60617b08]
  415cb7:	dec    esp
  415cb8:	mov    ecx,0xb6a46b4b
  415cbd:	push   ecx
  415cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cbf:	sbb    BYTE PTR [eax+0x26a9d331],dh
  415cc5:	call   0x1e5f:0x127cea0b
  415ccc:	pop    es
  415ccd:	fld    TBYTE PTR [ebx-0x11]
  415cd0:	and    DWORD PTR [ebp+0x61],0x2674a65a
  415cd7:	mov    ah,0xf
  415cd9:	and    BYTE PTR [ecx],dh
  415cdb:	iret   
  415cdc:	sbb    al,0x3b
  415cde:	jne    0x415d27
  415ce0:	sbb    DWORD PTR ds:0xa7fe0caf,edx
  415ce6:	test   dl,bl
  415ce8:	cmovle ebp,DWORD PTR [edi]
  415ceb:	dec    ebx
  415cec:	cmp    edi,DWORD PTR [ecx+0x5bb9b671]
  415cf2:	adc    DWORD PTR [esi-0x5f],edi
  415cf5:	or     esi,DWORD PTR [edx+0x2]
  415cf8:	jle    0x415d4e
  415cfa:	adc    al,0x10
  415cfc:	out    dx,eax
  415cfd:	pop    esi
  415cfe:	mov    ch,0xe7
  415d00:	stc    
  415d01:	or     BYTE PTR [esi+eax*8-0x2f],ch
  415d05:	mov    bl,0xaa
  415d07:	cwde   
  415d08:	cmp    ebx,DWORD PTR [edi+0x32e91da6]
  415d0e:	jp     0x415d0e
  415d10:	mov    ebx,0x78e458f5
  415d15:	dec    eax
  415d16:	(bad)  
  415d17:	fbstp  TBYTE PTR [ebp-0x3e]
  415d1a:	sbb    esi,DWORD PTR [ebx-0x3cdd16f8]
  415d20:	outs   dx,DWORD PTR ds:[esi]
  415d21:	or     cl,BYTE PTR [edx]
  415d23:	inc    ax
  415d25:	pop    eax
  415d26:	leave  
  415d27:	jecxz  0x415d34
  415d29:	and    al,0xb
  415d2b:	or     DWORD PTR [eax+0x6a],ebp
  415d2e:	jmp    0xdf2ab98
  415d33:	rol    BYTE PTR [eax],0x2f
  415d36:	imul   ebp,esp,0x6adbefec
  415d3c:	loop   0x415d69
  415d3e:	adc    bl,ch
  415d40:	push   esp
  415d41:	mov    BYTE PTR [ebp+edx*2-0x363a26fa],cl
  415d48:	sbb    eax,edi
  415d4a:	fld    st(4)
  415d4c:	fstp   TBYTE PTR [ecx+0x263cb07a]
  415d52:	dec    eax
  415d53:	mov    bl,0x5a
  415d55:	sub    al,0x4a
  415d57:	out    0x26,al
  415d59:	out    0x17,al
  415d5b:	xchg   ecx,eax
  415d5c:	xor    ah,BYTE PTR [eax+ecx*2-0x1c]
  415d60:	pop    esp
  415d61:	xchg   ebx,eax
  415d62:	cdq    
  415d63:	aad    0x61
  415d65:	mov    ch,0x6a
  415d67:	loopne 0x415db9
  415d69:	rol    BYTE PTR [si+0x3392],0x3f
  415d6f:	out    dx,al
  415d70:	ret    0x93f
  415d73:	imul   cl
  415d75:	or     dl,ch
  415d77:	sahf   
  415d78:	or     al,0x78
  415d7a:	xor    DWORD PTR [esp+ebx*4+0x7fb64e59],ecx
  415d81:	imul   eax,DWORD PTR [ecx],0xacdc42c3
  415d87:	cmc    
  415d88:	test   DWORD PTR [esi-0x5534311d],ecx
  415d8e:	cs inc edi
  415d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d91:	jecxz  0x415dfb
  415d93:	data16 in al,0x78
  415d96:	fs inc ebp
  415d98:	(bad)  [eax+esi*1+0x5a808f6]
  415d9f:	ror    al,cl
  415da1:	inc    edx
  415da2:	mov    cl,0xfb
  415da4:	or     eax,0xc631816b
  415da9:	out    0x88,eax
  415dab:	pop    esp
  415dac:	cmp    BYTE PTR [ecx-0x16],dh
  415daf:	or     BYTE PTR gs:[ecx-0x78553581],cl
  415db6:	push   ss
  415db7:	das    
  415db8:	fist   DWORD PTR [ebx+0x6f28324f]
  415dbe:	sub    DWORD PTR [esp+ecx*2-0x2],0x99f33d74
  415dc6:	ins    BYTE PTR es:[edi],dx
  415dc7:	in     eax,0x61
  415dc9:	inc    esp
  415dca:	add    dh,BYTE PTR [edx+esi*8-0x2e136e4a]
  415dd1:	stos   DWORD PTR es:[edi],eax
  415dd2:	add    DWORD PTR [edx-0x3ef4ff45],esp
  415dd8:	cmp    cl,BYTE PTR [edx-0x33]
  415ddb:	push   ss
  415ddc:	je     0x415d76
  415dde:	jno    0x415df9
  415de0:	pop    ds
  415de1:	jmp    0x415d73
  415de3:	cmp    ch,BYTE PTR [ecx-0x3d]
  415de6:	jmp    0xec579168
  415deb:	inc    eax
  415dec:	dec    ecx
  415ded:	push   ss
  415dee:	lahf   
  415def:	lods   eax,DWORD PTR ds:[esi]
  415df0:	mov    bh,0x44
  415df2:	int3   
  415df3:	xchg   ebx,eax
  415df4:	outs   dx,DWORD PTR ds:[esi]
  415df5:	cdq    
  415df6:	add    al,0xcf
  415df8:	stos   DWORD PTR es:[edi],eax
  415df9:	lea    edx,[eax+ebx*8+0x4ad5137f]
  415e00:	jp     0x694c7e51
  415e06:	push   ds
  415e07:	(bad)  
  415e08:	fnsave [edx+edx*8]
  415e0b:	out    0xba,al
  415e0d:	pop    edx
  415e0e:	mov    ebx,0xec277cc2
  415e13:	jae    0x415de6
  415e15:	test   bh,ch
  415e17:	sbb    DWORD PTR [edx],eax
  415e19:	sub    DWORD PTR [esi-0x3b0b3346],ebx
  415e1f:	push   es
  415e20:	jmp    0x8c3a:0xce8eb7ad
  415e27:	push   ecx
  415e28:	mov    ebx,0xa0bef19f
  415e2d:	pop    ebx
  415e2e:	add    eax,0x9497b58b
  415e33:	sbb    al,0xfa
  415e35:	fst    DWORD PTR [edx+edx*2+0x2d]
  415e39:	push   ds
  415e3a:	ja     0x415e79
  415e3c:	(bad)  
  415e3d:	lock push ebx
  415e3f:	sti    
  415e40:	nop
  415e41:	sbb    DWORD PTR [ebp-0x32],esp
  415e44:	push   0xffffffa2
  415e46:	inc    esi
  415e47:	in     al,dx
  415e48:	outs   dx,BYTE PTR ds:[esi]
  415e49:	outs   dx,BYTE PTR ds:[esi]
  415e4a:	jnp    0x415ddb
  415e4c:	data16 cmp al,0x15
  415e4f:	sbb    eax,0x3a9d5313
  415e54:	pop    esp
  415e55:	xchg   ebp,eax
  415e56:	or     bl,bh
  415e58:	cmp    DWORD PTR [eax-0x45937a4b],edx
  415e5e:	fld    QWORD PTR [edx]
  415e60:	or     esp,0xbdefcf45
  415e66:	cld    
  415e67:	push   cs
  415e68:	aad    0xd9
  415e6a:	into   
  415e6b:	add    esi,DWORD PTR [ecx+0x459910cc]
  415e71:	push   esp
  415e72:	imul   esp,DWORD PTR ds:0x5f3a5311,0x73a8a741
  415e7c:	sbb    eax,0x4c88ac12
  415e81:	rcr    BYTE PTR [ecx],0xba
  415e84:	repz push eax
  415e86:	cld    
  415e87:	mov    edx,ebp
  415e89:	fisub  WORD PTR [esi-0x3b579e33]
  415e8f:	in     al,dx
  415e90:	cmp    eax,0xbf1e57cc
  415e95:	fs xchg ecx,eax
  415e97:	in     eax,dx
  415e98:	adc    eax,0xf4993d78
  415e9d:	sbb    BYTE PTR [edx],ah
  415e9f:	stc    
  415ea0:	rol    DWORD PTR [ecx+0x64ad6dad],0x9f
  415ea7:	and    ebp,DWORD PTR [ecx-0x319ea024]
  415ead:	or     edi,edx
  415eaf:	loopne 0x415e60
  415eb1:	push   ebx
  415eb2:	push   ebx
  415eb3:	scas   al,BYTE PTR es:[edi]
  415eb4:	mov    ch,ah
  415eb6:	sar    DWORD PTR [edi-0x75590a2],0x8b
  415ebd:	push   0x393d5a78
  415ec2:	sbb    BYTE PTR [edx+edx*2-0x2e502a24],bl
  415ec9:	repnz mov ah,0x2d
  415ecc:	add    dh,bl
  415ece:	in     eax,0x64
  415ed0:	idiv   BYTE PTR [edx+ebx*4+0x60dbd0c0]
  415ed7:	dec    ecx
  415ed8:	imul   esp,DWORD PTR [ecx-0x42b5b8e0],0x41825c23
  415ee2:	ret    
  415ee3:	adc    BYTE PTR [ecx],bh
  415ee5:	adc    esp,ebx
  415ee7:	sbb    ah,ch
  415ee9:	xchg   ebx,ecx
  415eeb:	cmp    BYTE PTR cs:[ecx+ecx*2+0x58],dl
  415ef0:	jns    0x415f5f
  415ef2:	aaa    
  415ef3:	add    esp,DWORD PTR [ecx+ebx*2]
  415ef6:	push   ebx
  415ef7:	aas    
  415ef8:	cwde   
  415ef9:	jle    0x415f53
  415efb:	adc    ebp,ebx
  415efd:	jmp    0x415f6e
  415eff:	imul   ecx,DWORD PTR fs:[esi-0x70d1716d],0x20b01612
  415f0a:	jle    0x415f27
  415f0c:	pop    ebp
  415f0d:	lods   eax,DWORD PTR ds:[esi]
  415f0e:	cdq    
  415f0f:	push   0x85527dcd
  415f14:	sahf   
  415f15:	fbstp  TBYTE PTR [ebp+0x5c]
  415f18:	rcl    DWORD PTR [ecx+0x7],0x32
  415f1c:	dec    eax
  415f1d:	mov    gs,eax
  415f1f:	pop    edi
  415f20:	(bad)  
  415f21:	mov    ah,0x7d
  415f23:	xchg   esi,eax
  415f24:	xlat   BYTE PTR ds:[ebx]
  415f25:	push   0xe6eecc76
  415f2a:	fwait
  415f2b:	jns    0x415f82
  415f2d:	dec    esi
  415f2e:	ss clc 
  415f30:	xlat   BYTE PTR ds:[ebx]
  415f31:	add    dh,BYTE PTR [eax+0xb4e51a6]
  415f37:	cmp    BYTE PTR [ecx-0x4f],dl
  415f3a:	(bad)  
  415f3b:	xlat   BYTE PTR ds:[ebx]
  415f3c:	loope  0x415f86
  415f3e:	aad    0x94
  415f40:	and    al,0xac
  415f42:	mov    esp,0xc1e038de
  415f47:	mov    BYTE PTR [eax],dl
  415f49:	xchg   al,dl
  415f4b:	adc    ecx,DWORD PTR [edx-0x21]
  415f4e:	out    dx,al
  415f4f:	pop    edi
  415f50:	mov    ebp,0xe59bab23
  415f55:	jnp    0x415fbe
  415f57:	repnz pop ecx
  415f59:	dec    ecx
  415f5a:	jl     0x415ef1
  415f5c:	out    dx,eax
  415f5d:	repnz pop ebp
  415f5f:	es jne 0x415f0b
  415f62:	mov    ah,0x59
  415f64:	fs mov esp,0x72467ca5
  415f6a:	mov    bl,0x98
  415f6c:	sub    ah,ch
  415f6e:	push   cs
  415f6f:	ins    DWORD PTR es:[edi],dx
  415f70:	dec    esp
  415f71:	stos   DWORD PTR es:[edi],eax
  415f72:	jne    0x415efd
  415f74:	sub    ch,BYTE PTR [edx-0x50b039c6]
  415f7a:	xor    dh,BYTE PTR [edx]
  415f7c:	jb     0x415f48
  415f7e:	aaa    
  415f7f:	jno    0x415f55
  415f81:	lock push es
  415f83:	les    eax,FWORD PTR gs:[edx+0x4e]
  415f87:	leave  
  415f88:	fmul   QWORD PTR [eax]
  415f8a:	mov    al,ds:0xc526dc0d
  415f8f:	les    edx,FWORD PTR [ebp+0x3f5119be]
  415f95:	(bad)  
  415f96:	ins    DWORD PTR es:[edi],dx
  415f97:	xor    ah,BYTE PTR [ecx-0x99b409f]
  415f9d:	inc    ecx
  415f9e:	mov    al,0x51
  415fa0:	mov    DWORD PTR [ebx+0x0],eax
  415fa3:	mov    eax,0x5241ef4d
  415fa8:	shl    BYTE PTR [ebp+0x65],0xf6
  415fac:	popa   
  415fad:	adc    al,0x29
  415faf:	xor    BYTE PTR [ebx-0x2610a7a],dh
  415fb5:	aas    
  415fb6:	scas   al,BYTE PTR es:[edi]
  415fb7:	jns    0x415fc9
  415fb9:	imul   ecx,DWORD PTR [esi],0x42
  415fbc:	dec    ebx
  415fbd:	imul   esp,DWORD PTR [edx],0x5ad6b32
  415fc3:	add    bh,cl
  415fc5:	imul   DWORD PTR [edi+0xc]
  415fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc9:	inc    ecx
  415fca:	fcomip st,st(7)
  415fcc:	add    dl,BYTE PTR [ebp+ebx*4-0x13d9553c]
  415fd3:	enter  0xc60b,0x2d
  415fd7:	stc    
  415fd8:	sbb    BYTE PTR [esi-0x12],cl
  415fdb:	xor    bh,BYTE PTR [eax]
  415fdd:	mov    cl,0x34
  415fdf:	pusha  
  415fe0:	pop    ecx
  415fe1:	fldcw  WORD PTR [ebx+edx*8+0xc]
  415fe5:	rol    BYTE PTR [ecx-0x66a56f0a],0xb5
  415fec:	cmc    
  415fed:	inc    edi
  415fee:	mov    al,0x6a
  415ff0:	push   esi
  415ff1:	cmp    cl,BYTE PTR [esi+esi*8+0x40]
  415ff5:	adc    BYTE PTR [esi+esi*1-0x4ee4317e],dl
  415ffc:	xor    dh,BYTE PTR ds:0xdd91a55b
  416002:	std    
  416003:	daa    
  416004:	test   al,0x1d
  416006:	(bad)  [esi+0x5]
  416009:	jnp    0x415f92
  41600b:	or     DWORD PTR [ecx],0x72
  41600e:	mov    ds:0xee58b4b1,eax
  416013:	fadd   DWORD PTR [eax-0x4ff3659f]
  416019:	jmp    0x15dc1878
  41601e:	or     bh,BYTE PTR [eax+0x35]
  416021:	add    dl,bl
  416023:	shl    bl,cl
  416025:	adc    ebp,DWORD PTR [edx+0x63f1860d]
  41602b:	mov    edx,0x7d2f700e
  416030:	addr16 mov ebp,?
  416033:	nop
  416034:	pop    edx
  416035:	sti    
  416036:	xor    ebx,DWORD PTR fs:[eax+esi*1+0x56257916]
  41603e:	jecxz  0x41604d
  416040:	jge    0x4160a3
  416042:	push   ecx
  416043:	pusha  
  416044:	shl    DWORD PTR [esi+0x2fcc233a],1
  41604a:	xlat   BYTE PTR ds:[ebx]
  41604b:	mov    gs,WORD PTR [esi-0x5550333d]
  416051:	ret    
  416052:	dec    esp
  416053:	xchg   BYTE PTR [edx],dl
  416055:	xor    ch,BYTE PTR [ebx]
  416057:	sub    ecx,DWORD PTR [edi]
  416059:	push   ebp
  41605a:	inc    edx
  41605b:	jmp    0xdc9:0x960b942
  416062:	dec    ebx
  416063:	mov    eax,ds:0xa578aa95
  416068:	adc    BYTE PTR [eax],ah
  41606a:	pop    esp
  41606b:	jae    0x416056
  41606d:	ins    DWORD PTR es:[edi],dx
  41606e:	aaa    
  41606f:	nop
  416070:	loope  0x416050
  416072:	std    
  416073:	push   ebx
  416074:	xor    al,0xb0
  416076:	daa    
  416077:	jbe    0x416058
  416079:	add    edi,DWORD PTR [ebx-0x10]
  41607c:	cmp    eax,0xdcb56d31
  416081:	xchg   ecx,eax
  416082:	imul   eax,DWORD PTR [esi*8-0x7a4acd39],0x1
  41608a:	inc    ebx
  41608b:	push   esp
  41608c:	mov    ebx,0x48a8505a
  416091:	mov    dh,0x1b
  416093:	jbe    0x4160d5
  416095:	xor    esp,DWORD PTR [edx-0x75e69149]
  41609b:	jmp    0xa355:0x932c0197
  4160a2:	and    ecx,eax
  4160a4:	test   cl,ch
  4160a6:	mov    bh,0x9c
  4160a8:	call   0xefd5:0x7dfd3c25
  4160af:	popa   
  4160b0:	jo     0x416096
  4160b2:	mov    ah,0x28
  4160b4:	mov    eax,ds:0x8685959d
  4160b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ba:	inc    esp
  4160bb:	jle    0x4160d5
  4160bd:	stc    
  4160be:	or     BYTE PTR [edx+0x6a2e39f5],dl
  4160c4:	mov    BYTE PTR [esp+eax*2-0x4b9ae6d8],bl
  4160cb:	jge    0x4160bc
  4160cd:	inc    ebx
  4160ce:	fdivp  st(2),st
  4160d0:	mov    al,ds:0x55eff272
  4160d5:	push   ds
  4160d6:	mov    ah,0x87
  4160d8:	repnz cmp eax,0x9ddd6fd9
  4160de:	inc    edi
  4160df:	add    eax,0xf4994edf
  4160e4:	push   0x2eb182f3
  4160e9:	in     al,dx
  4160ea:	fiadd  WORD PTR [edx+0x2b]
  4160ed:	in     al,dx
  4160ee:	xchg   ecx,edx
  4160f0:	stos   DWORD PTR es:[edi],eax
  4160f1:	out    dx,al
  4160f2:	cmc    
  4160f3:	jb     0x416163
  4160f5:	fnstsw WORD PTR [ebp+0x39]
  4160f8:	push   esi
  4160f9:	cs rcl esi,0xe6
  4160fd:	inc    esp
  4160fe:	sub    DWORD PTR [ebx+0x3b],eax
  416101:	sub    al,BYTE PTR [edi]
  416103:	push   ecx
  416104:	rcr    BYTE PTR [ebp-0x18],0x42
  416108:	ins    BYTE PTR es:[edi],dx
  416109:	push   ebp
  41610a:	sbb    ebx,DWORD PTR [eax]
  41610c:	inc    edx
  41610d:	fsubr  QWORD PTR [ebp+esi*8-0x75f09375]
  416114:	ss dec esp
  416116:	(bad)  
  416117:	or     dl,bl
  416119:	hlt    
  41611a:	jno    0x416179
  41611c:	shl    DWORD PTR [ebx+0x64],0x30
  416120:	ret    
  416121:	xor    al,0x9f
  416123:	cmp    eax,0xd605ddaa
  416128:	mov    eax,ds:0x85b8f8a0
  41612d:	ins    BYTE PTR es:[edi],dx
  41612e:	add    al,0x5a
  416130:	lock push edi
  416132:	loope  0x416127
  416134:	xchg   ebp,eax
  416135:	cmp    DWORD PTR [esi+0x7d],ebp
  416138:	int3   
  416139:	push   cs
  41613a:	test   BYTE PTR [ecx+0x42],0xf7
  41613e:	dec    ebp
  41613f:	ror    BYTE PTR [esi+0x12],0xc2
  416143:	adc    al,BYTE PTR [edi]
  416145:	int3   
  416146:	inc    ebx
  416147:	test   ebx,esi
  416149:	push   0xf3645926
  41614e:	lds    ebp,FWORD PTR [ecx+0x27]
  416151:	das    
  416152:	xor    esi,DWORD PTR [eax+edi*1-0x47f0856]
  416159:	sbb    al,0x89
  41615b:	mov    ebp,DWORD PTR [ecx]
  41615d:	cmp    al,BYTE PTR [ecx-0x70]
  416160:	mov    ch,0x7
  416162:	xchg   esi,eax
  416163:	inc    ebx
  416164:	sbb    BYTE PTR [ebx+0x67],dl
  416167:	pop    ebx
  416168:	adc    BYTE PTR [esi+ecx*1-0x1c],dh
  41616c:	mov    ebx,0xc98171b5
  416171:	imul   edx,DWORD PTR [ecx],0x751bb705
  416177:	ss pop eax
  416179:	ja     0x41611c
  41617b:	jns    0x4161c3
  41617d:	(bad)  
  41617e:	dec    eax
  41617f:	pusha  
  416180:	movntps XMMWORD PTR [ebx+0x3e],xmm1
  416184:	jns    0x416177
  416186:	add    BYTE PTR [eax-0x1c],dh
  416189:	adc    ecx,ecx
  41618b:	xchg   BYTE PTR [ecx+0x1b],cl
  41618e:	outs   dx,DWORD PTR ds:[esi]
  41618f:	pop    ss
  416190:	or     eax,0x81a2bdfa
  416195:	jg     0x41614a
  416197:	pop    edi
  416198:	imul   ebp,DWORD PTR [ebp-0x13b45736],0x16df976b
  4161a2:	mov    WORD PTR [edi+0x42],fs
  4161a5:	loope  0x416208
  4161a7:	in     eax,0x14
  4161a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161aa:	retf   
  4161ab:	mov    edx,0x8e94b491
  4161b0:	xor    BYTE PTR [eax],bh
  4161b2:	adc    eax,0x414a6241
  4161b7:	rcl    bh,1
  4161b9:	fistp  DWORD PTR [ebx+0x6f8cf8b5]
  4161bf:	mov    ds:0x42b84b1,al
  4161c4:	push   cs
  4161c5:	push   cs
  4161c6:	(bad)  
  4161c7:	or     DWORD PTR [edx],ecx
  4161c9:	inc    ecx
  4161ca:	cmp    eax,0x11f2fec9
  4161cf:	fs push esp
  4161d1:	ret    0x8e6a
  4161d4:	cmc    
  4161d5:	mov    ebp,0xa6402702
  4161da:	xchg   edi,eax
  4161db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161dc:	lea    edi,[eax-0x4f]
  4161df:	mov    DWORD PTR [ecx],ecx
  4161e1:	cdq    
  4161e2:	cmp    DWORD PTR [edx],edx
  4161e4:	lfs    esp,FWORD PTR [esi-0x8]
  4161e8:	xchg   esp,eax
  4161e9:	aam    0xa0
  4161eb:	addr16 test eax,0x32049722
  4161f1:	out    0x71,al
  4161f3:	mov    esp,0xcca96070
  4161f8:	mov    ah,0xb1
  4161fa:	pop    ss
  4161fb:	addr16 ds dec ebx
  4161fe:	cmp    al,0xfd
  416200:	xchg   ebp,eax
  416201:	aaa    
  416202:	loop   0x4161c9
  416204:	mov    bh,0x48
  416206:	clts   
  416208:	xor    eax,DWORD PTR [edi]
  41620a:	ss int3 
  41620c:	leave  
  41620d:	xor    eax,0x8f7aa85e
  416212:	xrelease xchg BYTE PTR [esi],ah
  416215:	ss pop ds
  416217:	or     eax,0xfcde3158
  41621c:	into   
  41621d:	bound  bx,DWORD PTR [esi]
  416220:	xchg   edi,eax
  416221:	jle    0x4161d3
  416223:	mov    ebp,0xfac56733
  416228:	cdq    
  416229:	push   edx
  41622a:	test   BYTE PTR [edi+0x5cc30ac8],bl
  416230:	and    ebp,DWORD PTR [eax+0x71]
  416233:	mov    ebx,0x59d71897
  416238:	add    esp,ebp
  41623a:	gs inc esp
  41623c:	mov    ebx,esp
  41623e:	cs jno 0x4161ee
  416241:	cmp    DWORD PTR [ebp*2+0x42a6b607],ebp
  416248:	mov    dh,0xc1
  41624b:	popf   
  41624c:	fdiv   QWORD PTR [edx-0x3adaa026]
  416252:	inc    ebp
  416253:	push   edx
  416254:	mov    esp,0x855a0f7c
  416259:	add    bl,BYTE PTR [edx-0x46]
  41625c:	ret    0xa455
  41625f:	(bad)  
  416260:	mov    dh,0x55
  416262:	xor    BYTE PTR [ebx],cl
  416264:	adc    al,BYTE PTR [esi-0x7eb21d5]
  41626a:	int3   
  41626b:	xor    edx,DWORD PTR [edx]
  41626d:	dec    ebx
  41626e:	(bad)  
  41626f:	sbb    WORD PTR [edi-0x7745a0dd],cx
  416276:	mov    esi,0xf9fa8584
  41627b:	(bad)  
  41627c:	cmc    
  41627d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627e:	jnp    0x416234
  416280:	scas   al,BYTE PTR es:[edi]
  416281:	dec    edi
  416282:	popf   
  416283:	jmp    0x41622f
  416285:	push   esi
  416286:	or     eax,0x1b759aee
  41628b:	pop    edx
  41628c:	imul   ecx,DWORD PTR [ebp+ecx*2+0x9],0xffffffb5
  416291:	in     al,0xe0
  416293:	dec    ebp
  416294:	pusha  
  416295:	push   0x7b
  416297:	push   cs
  416298:	push   ecx
  416299:	mov    eax,ds:0xf9776ab5
  41629e:	int3   
  41629f:	xchg   esp,eax
  4162a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a1:	rcl    BYTE PTR [ebx+0x32],0x59
  4162a5:	xor    eax,0x8553ebe8
  4162aa:	push   0xfffffffa
  4162ac:	push   ecx
  4162ad:	(bad)  
  4162ae:	xor    eax,0xce5ebf94
  4162b3:	push   ebx
  4162b4:	sar    BYTE PTR [edi],cl
  4162b6:	mov    eax,ds:0x4006f3a9
  4162bb:	adc    dh,BYTE PTR [ebx+0xc]
  4162be:	mov    ebp,DWORD PTR [esp+ebp*2+0x1e]
  4162c2:	cmp    bl,BYTE PTR [edi]
  4162c4:	retf   0x1104
  4162c7:	mov    ebx,0xb858f991
  4162cc:	and    edx,esi
  4162ce:	sahf   
  4162cf:	ins    BYTE PTR es:[edi],dx
  4162d0:	lea    ebx,[ebp-0x79]
  4162d3:	stos   DWORD PTR es:[edi],eax
  4162d4:	and    al,0xc0
  4162d6:	les    esp,FWORD PTR [di]
  4162d9:	aad    0xdc
  4162db:	cmc    
  4162dc:	mov    bh,0xb9
  4162de:	shr    ah,0x63
  4162e1:	mov    cl,0xf7
  4162e3:	repnz stc 
  4162e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e7:	add    al,0x8b
  4162e9:	adc    ch,BYTE PTR ds:0x85cb0d3f
  4162ef:	adc    al,0xcf
  4162f1:	retf   
  4162f2:	sub    BYTE PTR [ecx],dh
  4162f4:	pop    ebx
  4162f5:	cwde   
  4162f6:	test   DWORD PTR [esi],ecx
  4162f8:	ficom  WORD PTR [eax-0x77]
  4162fb:	fs sbb ebx,edi
  4162fe:	icebp  
  4162ff:	jmp    0x2b053ae5
  416304:	dec    esi
  416305:	ja     0x416305
  416307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416308:	push   ebp
  416309:	cs dec ebx
  41630b:	pop    edx
  41630c:	inc    esp
  41630d:	pop    edx
  41630e:	sbb    esi,ebx
  416310:	out    dx,eax
  416311:	add    esp,DWORD PTR [eax+ebx*1+0x74264573]
  416318:	cmp    eax,DWORD PTR [ecx]
  41631a:	aaa    
  41631b:	ror    DWORD PTR [ecx+0xf],cl
  41631e:	mov    eax,DWORD PTR [eax+0x17]
  416321:	loopne 0x41639c
  416323:	ror    DWORD PTR [esi],cl
  416325:	pop    ebp
  416326:	jnp    0x41631c
  416328:	cmp    al,0x19
  41632a:	(bad)  
  41632b:	jo     0x4162ec
  41632d:	pop    ds
  41632e:	dec    ecx
  41632f:	mov    edx,0x70035b1a
  416334:	fwait
  416335:	jae    0x4162fa
  416337:	rcr    DWORD PTR [esp+esi*2],cl
  41633a:	sbb    DWORD PTR [edi-0x69bfb571],0x323b3d49
  416344:	pop    ss
  416345:	pop    ebp
  416346:	shl    dl,0x1e
  416349:	je     0x41638d
  41634b:	push   esi
  41634c:	shl    BYTE PTR [ebx],cl
  41634e:	mov    bh,0xc4
  416350:	dec    ecx
  416351:	fxch   st(6)
  416353:	inc    esp
  416354:	test   DWORD PTR [eax+0x14941c4],esi
  41635a:	jl     0x416379
  41635c:	rol    BYTE PTR [ebx+esi*4+0x4b446967],0xe6
  416364:	add    BYTE PTR [edi],cl
  416366:	jno    0x416361
  416368:	leave  
  416369:	sub    BYTE PTR [edi-0x32354385],ch
  41636f:	stos   DWORD PTR es:[edi],eax
  416370:	xor    cl,ah
  416372:	push   ds
  416373:	pusha  
  416374:	mov    edx,0x56a730b5
  416379:	mov    eax,0x81ec2ea1
  41637e:	je     0x416353
  416380:	in     eax,dx
  416381:	pop    eax
  416382:	push   ecx
  416383:	pop    edx
  416384:	imul   ebp,DWORD PTR [eax+0x5d0d080],0x4052e880
  41638e:	dec    eax
  41638f:	sti    
  416390:	inc    edx
  416391:	pop    eax
  416392:	mov    ds:0x2600db93,eax
  416397:	mov    DWORD PTR [ecx+eiz*4+0x5a],esi
  41639b:	ret    0x8cd3
  41639e:	sbb    BYTE PTR [esi+0x45977ad8],0x17
  4163a5:	nop
  4163a6:	pusha  
  4163a7:	call   0xcd4bb548
  4163ac:	push   edi
  4163ad:	cmp    BYTE PTR [edx],al
  4163af:	sbb    dl,bh
  4163b1:	add    DWORD PTR [ebx+ebp*8],ecx
  4163b4:	(bad)  
  4163b5:	add    al,0x69
  4163b7:	push   cs
  4163b8:	arpl   ax,bx
  4163ba:	test   eax,0x169f54a4
  4163bf:	arpl   WORD PTR [edi-0x167e9833],cx
  4163c5:	sub    dh,BYTE PTR [edx-0x5cc76c56]
  4163cb:	pop    esp
  4163cc:	mov    eax,0x1118341c
  4163d1:	repz add al,0x3
  4163d4:	cmp    BYTE PTR [edx+0x9777e46],cl
  4163da:	repz and esp,DWORD PTR [ebx]
  4163dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163de:	imul   eax,DWORD PTR [edi-0x50],0xa4e0928b
  4163e5:	imul   DWORD PTR [edx+0x595c520]
  4163eb:	pop    ds
  4163ec:	sub    BYTE PTR [ebp+esi*4+0x30],dl
  4163f0:	(bad)  
  4163f1:	push   ss
  4163f2:	xlat   BYTE PTR ds:[ebx]
  4163f3:	xchg   esi,eax
  4163f4:	push   ebp
  4163f5:	sbb    al,0xe9
  4163f7:	dec    ecx
  4163f8:	or     eax,0x3771aa0f
  4163fd:	call   0x0:0xa5ac4672
  416404:	(bad)  
  416405:	scas   al,BYTE PTR es:[edi]
  416406:	xchg   edx,eax
  416407:	mov    al,ds:0xc10f5c02
  41640c:	rcr    DWORD PTR [ebx],cl
  41640e:	jmp    0xb9fc4eba
  416413:	loop   0x41645e
  416415:	ss xchg ebp,eax
  416417:	and    al,0xd
  416419:	pop    ebp
  41641a:	cwde   
  41641b:	mov    ah,0x72
  41641d:	jle    0x41642c
  41641f:	pop    es
  416420:	daa    
  416421:	into   
  416422:	aad    0x81
  416424:	ret    0x6f18
  416427:	inc    edi
  416428:	je     0x416458
  41642a:	in     eax,dx
  41642b:	addr16 loope 0x416430
  41642e:	(bad)  
  41642f:	sub    esp,DWORD PTR [esi+eax*8-0x4]
  416433:	sbb    BYTE PTR [ebx-0x423c0b36],dh
  416439:	cld    
  41643a:	mov    bh,BYTE PTR [eax+0x66d16073]
  416440:	ins    DWORD PTR es:[edi],dx
  416441:	std    
  416442:	loopne 0x416495
  416444:	cmp    al,0x96
  416446:	sub    DWORD PTR [ecx],ebx
  416448:	retf   
  416449:	and    dh,ch
  41644b:	dec    edi
  41644c:	xchg   esi,eax
  41644d:	lock pop ebx
  41644f:	cmp    BYTE PTR [eax],bl
  416451:	lds    edi,FWORD PTR [ebx]
  416453:	mov    esp,0x33e8e295
  416458:	and    al,0x95
  41645a:	lock cmp al,0x77
  41645d:	pop    ss
  41645e:	aam    0x5a
  416460:	int    0xf5
  416462:	xchg   esp,eax
  416463:	sub    eax,0x95190e14
  416468:	icebp  
  416469:	(bad)  
  41646a:	ins    BYTE PTR es:[edi],dx
  41646b:	adc    eax,0x2026fa6b
  416470:	xor    esp,edx
  416472:	mov    DWORD PTR [esi+0x789f82bc],edi
  416478:	leave  
  416479:	sahf   
  41647a:	and    eax,DWORD PTR [esp+esi*2+0x5b48106c]
  416481:	(bad)  
  416482:	jae    0x4164ff
  416484:	retf   0xe32e
  416487:	xchg   edi,eax
  416488:	sub    DWORD PTR [edx-0x6a],ebp
  41648b:	dec    eax
  41648c:	mov    bh,0x13
  41648e:	mov    ebx,0x2362b7ff
  416493:	retf   0x5c65
  416496:	add    ebx,edx
  416498:	fadd   QWORD PTR [esi+0x1c406767]
  41649e:	push   ecx
  41649f:	jb     0x416481
  4164a1:	adc    eax,0xd356cd3d
  4164a6:	out    0x43,al
  4164a8:	mov    dl,0xba
  4164aa:	test   al,0x30
  4164ac:	jb     0x4164a7
  4164ae:	sbb    esp,edi
  4164b0:	fidiv  WORD PTR [ebp+0x71]
  4164b3:	cmp    eax,DWORD PTR [ecx+edx*8-0x40631e54]
  4164ba:	mov    ds:0x7c789df1,eax
  4164bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c0:	xchg   ebx,eax
  4164c1:	xchg   DWORD PTR [edx],esi
  4164c3:	sub    dl,cl
  4164c5:	loop   0x416509
  4164c7:	ins    DWORD PTR es:[edi],dx
  4164c8:	xchg   DWORD PTR [ebx-0x237bb46b],esi
  4164ce:	sbb    BYTE PTR [esi-0x58],al
  4164d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d2:	cli    
  4164d3:	std    
  4164d4:	pop    esp
  4164d5:	jmp    0x416527
  4164d7:	shl    esp,cl
  4164d9:	jle    0x4164c1
  4164db:	lods   eax,DWORD PTR ds:[esi]
  4164dc:	push   0xffffffb6
  4164de:	add    eax,ecx
  4164e0:	push   ss
  4164e1:	xor    eax,0x5c6fd980
  4164e6:	mov    ch,0x7e
  4164e8:	shl    bl,0x49
  4164eb:	mov    bh,0xf4
  4164ed:	in     eax,dx
  4164ee:	pop    ebx
  4164ef:	sub    BYTE PTR [ebx+0xea385a9],ch
  4164f5:	shl    DWORD PTR [ebx+edi*1],1
  4164f8:	(bad)  
  4164f9:	repz std 
  4164fb:	das    
  4164fc:	aam    0x8f
  4164fe:	test   eax,0xae5f4747
  416503:	adc    eax,0x754616ef
  416508:	mov    ebx,0xbab13e77
  41650d:	adc    BYTE PTR [ebp-0x36],ah
  416510:	jecxz  0x416523
  416512:	adc    ebp,DWORD PTR [ebx+0x13]
  416515:	stc    
  416516:	lahf   
  416517:	pop    es
  416518:	adc    bh,BYTE PTR [ecx-0x1a4baada]
  41651e:	adc    eax,0xfec1740
  416523:	pop    es
  416524:	dec    esi
  416525:	ret    
  416526:	repnz cdq 
  416528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416529:	xchg   cl,cl
  41652b:	leave  
  41652c:	jnp    0x416514
  41652e:	jg     0x41652e
  416530:	jmp    0x4164be
  416532:	fistp  WORD PTR [edx-0x24ebbbe3]
  416538:	push   edx
  416539:	mov    edx,ebp
  41653b:	adc    DWORD PTR [eax-0x5c],0xd
  41653f:	jg     0x41658a
  416541:	mov    ah,0xe8
  416543:	adc    edi,DWORD PTR [edx]
  416545:	pop    ss
  416546:	and    dh,dh
  416548:	into   
  416549:	mov    DWORD PTR [esi],ecx
  41654b:	stc    
  41654c:	sub    DWORD PTR [esp+ebp*4],0x93cbd3c
  416553:	inc    esi
  416554:	lahf   
  416555:	jg     0x4164e9
  416557:	std    
  416558:	(bad)  
  416559:	inc    ebp
  41655a:	jmp    0xaf76b0de
  41655f:	sbb    ebp,DWORD PTR [edx-0x76]
  416562:	leave  
  416563:	dec    esi
  416564:	dec    edi
  416565:	call   0x3e76:0xf9a2d02e
  41656c:	call   0x242d1844
  416571:	lock xor eax,0xacbfa1b7
  416577:	push   es
  416578:	sub    al,0x0
  41657a:	push   eax
  41657b:	mov    edx,0x7accedb2
  416580:	in     al,dx
  416581:	mov    ds:0x2fc10b75,eax
  416586:	les    edi,FWORD PTR [edx+0x7f]
  416589:	cmp    bl,BYTE PTR [eax-0x1b79d6b5]
  41658f:	retf   0x35a1
  416592:	mov    ds:0xeb76f233,al
  416597:	adc    BYTE PTR [ebp+0x202aa9e9],dh
  41659d:	push   es
  41659e:	mov    esp,0x2dd0a83e
  4165a3:	adc    esi,0xf2e1411d
  4165a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165aa:	pop    es
  4165ab:	(bad)  
  4165ac:	(bad)  
  4165ad:	aaa    
  4165ae:	in     eax,0x24
  4165b0:	add    al,0x2c
  4165b2:	mov    al,0xb0
  4165b4:	mov    bl,0xb0
  4165b6:	hlt    
  4165b7:	pop    ds
  4165b8:	adc    al,0x32
  4165ba:	sub    dh,BYTE PTR [eax+0x6f]
  4165bd:	clc    
  4165be:	inc    edx
  4165bf:	jl     0x416609
  4165c1:	or     eax,0x520d0627
  4165c6:	mov    ebp,0x4972fca5
  4165cb:	pop    edx
  4165cc:	mov    cl,0x2a
  4165ce:	and    esi,DWORD PTR [edi-0x49b244ef]
  4165d4:	ror    BYTE PTR [ecx],0xbb
  4165d7:	aas    
  4165d8:	inc    ecx
  4165d9:	mov    edx,0xf2cf02e7
  4165de:	mov    ds:0x6964659f,al
  4165e3:	imul   esp,DWORD PTR [esi],0x49022289
  4165e9:	mov    ah,0xb7
  4165eb:	jno    0x4165c3
  4165ed:	sub    DWORD PTR [ebp+0x59],esp
  4165f0:	push   0x13a630f4
  4165f5:	adc    BYTE PTR [ecx-0x37],bl
  4165f8:	lea    ecx,[edi+esi*8]
  4165fb:	aas    
  4165fc:	(bad)  
  4165fd:	(bad)  
  4165fe:	mov    WORD PTR [edx+0x5fde35fb],?
  416604:	push   es
  416605:	xor    DWORD PTR [edi-0x2c288415],edi
  41660b:	fild   WORD PTR [esi]
  41660d:	pop    ebp
  41660e:	mov    eax,0xfc00071e
  416613:	mov    ebx,0x6ffc51cb
  416618:	repz adc BYTE PTR [ecx-0x5c],ch
  41661c:	adc    dh,BYTE PTR [edi+0x6a]
  41661f:	mov    esp,0xe7fe78ba
  416624:	fild   DWORD PTR [ebx+0x6d]
  416627:	loop   0x4165b0
  416629:	lods   eax,DWORD PTR ds:[esi]
  41662a:	data16 lock fstp DWORD PTR [bx+di+0x5e5c]
  416631:	or     BYTE PTR [ebp+ebp*8+0x69],cl
  416635:	inc    ebp
  416636:	mov    WORD PTR [eax+0x37],gs
  416639:	sahf   
  41663a:	std    
  41663b:	xchg   ebx,eax
  41663c:	push   ecx
  41663d:	das    
  41663e:	mov    ah,0x5f
  416640:	cmp    esi,DWORD PTR [eax]
  416642:	sbb    al,0xc0
  416644:	dec    eax
  416645:	inc    ebp
  416646:	jg     0x416627
  416648:	jp     0x41667f
  41664a:	cmp    cl,BYTE PTR [eax-0x1d]
  41664d:	and    DWORD PTR [edx+0x2259341d],ebp
  416653:	jl     0x416628
  416655:	jae    0x4166a2
  416657:	add    al,BYTE PTR [eax+0x2d5aa4bd]
  41665d:	cmp    eax,0xd45e36ae
  416662:	pop    esi
  416663:	mov    dh,BYTE PTR ds:0x49ba1d32
  416669:	push   cs
  41666a:	bound  eax,QWORD PTR [ecx+0x264b5dc4]
  416670:	inc    esp
  416671:	int3   
  416672:	xchg   esi,eax
  416673:	mov    bh,0x40
  416675:	sub    al,0x32
  416677:	inc    edi
  416678:	jo     0x4166d2
  41667a:	mov    ch,0xdb
  41667c:	rol    BYTE PTR [esi+0x12],1
  41667f:	adc    DWORD PTR [edi],esp
  416681:	imul   esp,esp,0x24cd814
  416687:	jl     0x4166ad
  416689:	adc    DWORD PTR [ecx+0x232438fc],0x22
  416690:	push   0xfffffff8
  416692:	call   0xcb32ecff
  416697:	xchg   ecx,eax
  416698:	xchg   edi,eax
  416699:	jns    0x41666b
  41669b:	mov    db4,edx
  41669e:	out    dx,eax
  41669f:	jbe    0x416699
  4166a1:	jecxz  0x4166a4
  4166a3:	sbb    edx,edx
  4166a5:	out    0x5f,eax
  4166a7:	adc    al,0x2e
  4166a9:	mov    ecx,0x171377b0
  4166ae:	xor    sp,di
  4166b1:	xchg   edx,eax
  4166b2:	loop   0x41663f
  4166b4:	aam    0xd5
  4166b6:	and    bh,ah
  4166b8:	dec    ebx
  4166b9:	and    BYTE PTR [edx+0x4c],al
  4166bc:	ret    0x23ea
  4166bf:	(bad)  
  4166c0:	sbb    esi,esi
  4166c2:	in     eax,dx
  4166c3:	mov    esp,0x1d09300d
  4166c8:	jle    0x41665a
  4166ca:	stos   BYTE PTR es:[edi],al
  4166cb:	or     eax,0xd55cbc8a
  4166d0:	fsubrp st(6),st
  4166d2:	(bad)  
  4166d3:	pop    eax
  4166d4:	mov    ds:0x749175f0,eax
  4166d9:	mov    ch,0x45
  4166db:	xchg   ecx,eax
  4166dc:	pushf  
  4166dd:	dec    ebx
  4166de:	fnsave [ecx+eax*2]
  4166e1:	cmp    eax,DWORD PTR [ebp-0xd]
  4166e4:	cmc    
  4166e5:	mov    bh,0xcd
  4166e7:	aad    0x11
  4166e9:	jp     0x416708
  4166eb:	out    0x72,al
  4166ed:	xchg   BYTE PTR [edi+0x2f71f28b],dh
  4166f3:	mov    ds:0x89c376c7,al
  4166f8:	push   edi
  4166f9:	punpckhwd mm1,QWORD PTR [esi]
  4166fc:	sahf   
  4166fd:	das    
  4166fe:	in     al,0xe8
  416700:	cld    
  416701:	mov    ah,0xb0
  416703:	clc    
  416704:	imul   ecx,edx,0xc2476f33
  41670a:	jbe    0x416739
  41670c:	mov    al,0x9a
  41670e:	shr    dh,cl
  416710:	dec    edx
  416711:	jo     0x416694
  416713:	out    dx,eax
  416714:	xchg   BYTE PTR [ebp-0x35a3b6ea],dh
  41671a:	pop    esi
  41671b:	loope  0x416703
  41671d:	pusha  
  41671e:	pop    ebp
  41671f:	cmp    ebp,DWORD PTR fs:[ecx-0x2c]
  416723:	jl     0x416758
  416725:	es cmp eax,0x7faddf0f
  41672b:	and    BYTE PTR [ecx-0x3847c8bd],bh
  416731:	sti    
  416732:	nop
  416733:	fisttp DWORD PTR [ecx+ebp*2+0x39]
  416737:	xlat   BYTE PTR ds:[ebx]
  416738:	js     0x4166da
  41673a:	pop    esp
  41673b:	dec    eax
  41673c:	mov    ebp,0x3c8b09d
  416741:	xchg   cl,ah
  416743:	cmp    edi,DWORD PTR [eax+0x7b]
  416746:	mov    edi,0x99d2c8ce
  41674b:	pop    ebx
  41674c:	xor    BYTE PTR [edi-0x37e9ad2f],0x88
  416753:	jns    0x41679a
  416755:	mov    esi,0x447b5d9c
  41675a:	xchg   ebx,eax
  41675b:	pop    esp
  41675c:	aas    
  41675d:	rcl    bl,1
  41675f:	sbb    ah,BYTE PTR [edi]
  416761:	ss in  al,dx
  416763:	or     dl,dl
  416765:	dec    esp
  416766:	nop
  416767:	sbb    al,0xe1
  416769:	ror    eax,1
  41676b:	push   ds
  41676c:	adc    BYTE PTR [bp+di+0x4c],bh
  416770:	out    dx,eax
  416771:	dec    esp
  416772:	imul   edx,DWORD PTR [ebx+0x39],0xc85a1e59
  416779:	cmp    edi,DWORD PTR [eax]
  41677b:	xchg   ebx,eax
  41677c:	jecxz  0x41675a
  41677e:	xchg   edx,eax
  41677f:	ss aad 0xd1
  416782:	lods   al,BYTE PTR ds:[esi]
  416783:	add    BYTE PTR [eax+eiz*1],al
  416786:	jle    0x416737
  416788:	imul   edi,ebx,0x21
  41678b:	(bad)  
  41678c:	jae    0x4167e0
  41678e:	sar    BYTE PTR [edi+0x2d405c49],1
  416794:	adc    eax,0x376b82c8
  416799:	inc    ecx
  41679a:	sbb    bl,cl
  41679c:	push   ebp
  41679d:	imul   edi,DWORD PTR [ecx-0x2a],0x48
  4167a1:	or     BYTE PTR [edx],cl
  4167a3:	fs inc edi
  4167a5:	dec    ebx
  4167a6:	dec    esp
  4167a7:	sub    DWORD PTR [eax+ebx*4-0x35],0xffffff8d
  4167ac:	imul   edi,DWORD PTR [eax+esi*4],0x50
  4167b0:	mov    al,ds:0xfc6483b
  4167b5:	pop    edi
  4167b6:	test   DWORD PTR [edx+ecx*2-0x4527f75a],esi
  4167bd:	mov    ch,0x0
  4167bf:	dec    ebp
  4167c0:	leave  
  4167c1:	es fs test al,0xcc
  4167c5:	es lahf 
  4167c7:	mov    edi,0x9057eb5b
  4167cc:	sub    ah,bh
  4167ce:	mov    esp,?
  4167d0:	ficom  DWORD PTR [eax]
  4167d2:	cmc    
  4167d3:	ss jmp 0x6ec6fa42
  4167d9:	dec    esp
  4167da:	jno    0x41676a
  4167dc:	jmp    0x416810
  4167de:	mov    al,es:0x75fd7cb9
  4167e4:	aam    0x40
  4167e6:	adc    DWORD PTR [edi+ecx*2+0x34],ebx
  4167ea:	mov    ebx,0xdad3568a
  4167ef:	nop
  4167f0:	adc    al,0x43
  4167f2:	pop    ebx
  4167f3:	retf   0x48d2
  4167f6:	mov    dh,0x90
  4167f8:	inc    ebp
  4167f9:	sbb    al,0xca
  4167fb:	jne    0x416808
  4167fd:	push   0xafc40a15
  416802:	and    al,0x89
  416804:	pop    edx
  416805:	sub    BYTE PTR [ebp-0x1d],cl
  416808:	xlat   BYTE PTR ds:[ebx]
  416809:	cmc    
  41680a:	cwde   
  41680b:	pop    edi
  41680c:	mov    al,ds:0xfe4574c1
  416811:	cwde   
  416812:	cmp    cl,BYTE PTR [edi-0x5]
  416815:	mov    ebx,0x748462e3
  41681a:	mov    cl,0xe8
  41681c:	popa   
  41681d:	push   ecx
  41681e:	lods   al,BYTE PTR ds:[esi]
  41681f:	jns    0x416826
  416821:	mov    WORD PTR [esi+0x63],?
  416824:	or     al,0x83
  416826:	xor    ah,BYTE PTR ds:0x30f181e3
  41682c:	or     esi,DWORD PTR [ebp-0x39183477]
  416832:	inc    esp
  416833:	rcl    edi,0x7a
  416836:	repnz push ds
  416838:	data16 js 0x416809
  41683b:	(bad)  
  41683d:	mov    ds:0x41be2ea0,eax
  416842:	mov    ecx,0xb7eabec9
  416847:	xlat   BYTE PTR ds:[ebx]
  416848:	add    bl,BYTE PTR [esi-0x2e]
  41684b:	call   0x6ecbd2c9
  416850:	aas    
  416851:	pop    ebp
  416852:	or     BYTE PTR [esi+0x7ea114da],0x90
  416859:	jl     0x416858
  41685b:	clc    
  41685c:	sub    DWORD PTR [edi+ecx*2+0x28],esp
  416860:	loop   0x4168d4
  416862:	jnp    0x416808
  416864:	test   ch,cl
  416866:	jle    0x4168d3
  416868:	fs jns 0x416849
  41686b:	fcomp  QWORD PTR [ebp+0x11]
  41686e:	arpl   ax,bp
  416870:	dec    eax
  416871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416872:	sbb    BYTE PTR [ecx+0x340510dc],ch
  416878:	packssdw mm3,QWORD PTR [edx-0x66f7697d]
  41687f:	mov    DWORD PTR [ebp-0x37c0079e],esp
  416885:	shl    DWORD PTR gs:[edi+esi*8],0x3c
  41688a:	pop    ecx
  41688b:	jns    0x416846
  41688d:	stos   DWORD PTR es:[edi],eax
  41688e:	leave  
  41688f:	jmp    0x9b07:0x40d89451
  416896:	sti    
  416897:	fdiv   DWORD PTR ds:0x9e9ad3c1
  41689d:	sub    ah,ah
  41689f:	fbstp  TBYTE PTR [esi+0x29]
  4168a2:	in     al,dx
  4168a3:	rcr    BYTE PTR [edi+0xa4dd2e2],0x56
  4168aa:	dec    ecx
  4168ab:	int    0x9e
  4168ad:	push   0xfffffff8
  4168af:	(bad)  
  4168b0:	xlat   BYTE PTR ds:[ebx]
  4168b1:	in     al,0x44
  4168b3:	in     al,0xd8
  4168b5:	sbb    eax,0xa68a75d8
  4168ba:	shr    DWORD PTR [ecx+0x7332f917],cl
  4168c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c1:	mov    ebx,0xe6fa0b66
  4168c6:	pop    edi
  4168c7:	in     eax,0x55
  4168c9:	add    al,0xbc
  4168cb:	adc    edi,edx
  4168cd:	add    BYTE PTR [esi],bl
  4168cf:	mov    ebx,0x1c074bec
  4168d4:	(bad)  [esi+0x7128b68f]
  4168da:	imul   esi,DWORD PTR [edi+0x7afa64f3],0x5b
  4168e1:	jl     0x9dc17c4d
  4168e7:	pop    ss
  4168e8:	scas   eax,DWORD PTR es:[edi]
  4168e9:	push   cs
  4168ea:	ret    
  4168eb:	xchg   DWORD PTR [edx],edx
  4168ed:	mov    al,ds:0x883aff8f
  4168f2:	or     ecx,ecx
  4168f4:	(bad)  
  4168f5:	nop
  4168f6:	push   esp
  4168f7:	(bad)  
  4168f8:	fwait
  4168f9:	dec    ecx
  4168fa:	mov    ds:0xc2ef02fc,eax
  4168ff:	vxorps xmm7,xmm3,xmm0
  416903:	mov    dl,0x42
  416905:	call   0xe25b:0x6db05414
  41690c:	popf   
  41690d:	xchg   edi,eax
  41690e:	outs   dx,DWORD PTR ds:[esi]
  41690f:	sub    eax,0xd52e69d5
  416914:	or     al,0xd2
  416916:	mov    cl,0x72
  416918:	dec    ebp
  416919:	xchg   esi,eax
  41691a:	mov    ds:0x8a791b8f,al
  41691f:	mov    al,0xcc
  416921:	popa   
  416922:	and    bl,BYTE PTR [eax+0x6219dafc]
  416928:	leave  
  416929:	clc    
  41692a:	adc    ch,ch
  41692c:	push   es
  41692d:	xchg   esp,eax
  41692e:	xor    eax,0xe4382048
  416933:	sub    bl,BYTE PTR [esi-0x3b]
  416936:	jne    0x4168d5
  416938:	adc    eax,0xef45d5e6
  41693d:	adc    DWORD PTR [edx],esp
  41693f:	js     0x41692b
  416941:	fsub   st,st(3)
  416943:	cmp    DWORD PTR [eax-0x3651a49a],0x74
  41694a:	mov    bh,0x71
  41694c:	(bad)  
  41694d:	adc    BYTE PTR [esi-0x1f],dh
  416950:	(bad)  
  416951:	(bad)  
  416953:	inc    esp
  416954:	add    al,BYTE PTR [edi-0x77]
  416957:	test   DWORD PTR [edx],ecx
  416959:	nop
  41695a:	add    ah,dl
  41695c:	mov    esp,DWORD PTR [edx+0x169d14c3]
  416962:	jns    0x41698e
  416964:	sbb    BYTE PTR [edi+0x2e],dl
  416967:	imul   DWORD PTR [esp+edi*2+0x28]
  41696b:	jge    0x4169c4
  41696d:	fs push ebx
  41696f:	mov    bh,0x54
  416971:	hlt    
  416972:	add    esi,edi
  416974:	inc    ebp
  416975:	in     eax,dx
  416976:	jae    0x4169db
  416978:	add    dh,BYTE PTR [ecx]
  41697a:	fbstp  TBYTE PTR [eax+esi*4-0x69]
  41697e:	into   
  41697f:	or     DWORD PTR [esi],eax
  416981:	jnp    0x4169be
  416983:	add    ch,BYTE PTR [eax+0x55]
  416986:	adc    BYTE PTR [ebx+0x311384a0],cl
  41698c:	jno    0x4169f0
  41698e:	imul   edi,DWORD PTR [ebx],0x22
  416991:	xchg   BYTE PTR [eax-0x2f],ch
  416994:	rol    bl,0x5
  416997:	std    
  416998:	int    0x84
  41699a:	inc    esp
  41699b:	cmp    edi,edx
  41699d:	lahf   
  41699e:	aas    
  41699f:	push   0xffffff8b
  4169a1:	aad    0xa1
  4169a3:	imul   DWORD PTR [ecx-0x829e005]
  4169a9:	sub    al,0xab
  4169ab:	data16 jno 0x4169fe
  4169ae:	pop    ss
  4169af:	add    eax,0x33926e1e
  4169b4:	ds cmp al,0x80
  4169b7:	fild   DWORD PTR [ebp+0x2c]
  4169ba:	jae    0x416a14
  4169bc:	int3   
  4169bd:	les    ecx,FWORD PTR [esi+edi*4+0x74]
  4169c1:	push   edi
  4169c2:	ror    DWORD PTR [ebp-0x450c1c0f],0x52
  4169c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ca:	loop   0x4169e1
  4169cc:	mov    eax,ds:0xccf15d2b
  4169d1:	mov    dl,0xa4
  4169d3:	arpl   WORD PTR [eax-0x5f],sp
  4169d6:	jle    0x416a23
  4169d8:	shl    DWORD PTR [edx+0x62],1
  4169db:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169dd:	shl    BYTE PTR [edi-0x7e50310a],cl
  4169e3:	jo     0x41698b
  4169e5:	jecxz  0x416975
  4169e7:	and    al,0xd9
  4169e9:	cmc    
  4169ea:	addr16 mov ds:0xaaf3,eax
  4169ee:	push   es
  4169ef:	and    DWORD PTR [ecx+0x78],esp
  4169f2:	adc    al,0x98
  4169f4:	iret   
  4169f5:	xlat   BYTE PTR ds:[ebx]
  4169f6:	fdiv   DWORD PTR [esi]
  4169f8:	sub    eax,0x322a0c9d
  4169fd:	push   es
  4169fe:	cmp    al,0x26
  416a00:	mov    WORD PTR [esi-0x2ea9342d],?
  416a06:	loopne 0x41699a
  416a08:	sti    
  416a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a0a:	ret    
  416a0b:	pop    ecx
  416a0c:	mov    edi,0x7acb5f91
  416a11:	shl    DWORD PTR [ecx-0x7a9b18e7],1
  416a17:	in     al,dx
  416a18:	push   es
  416a19:	sub    al,0x11
  416a1b:	cmp    eax,0x6a972a90
  416a20:	or     bh,bl
  416a22:	cmc    
  416a23:	xchg   edi,eax
  416a24:	mov    edx,0x116061c4
  416a29:	rcl    DWORD PTR [ecx],cl
  416a2b:	jne    0x416a28
  416a2d:	and    DWORD PTR [edi-0x50],ebp
  416a30:	xor    eax,0xb595c8bc
  416a35:	mov    ?,WORD PTR [edx+0x1c]
  416a38:	pushf  
  416a39:	push   esp
  416a3a:	test   eax,0x85ea6008
  416a3f:	inc    ebx
  416a40:	int    0x45
  416a42:	dec    ebx
  416a43:	jne    0x416a83
  416a45:	pop    edx
  416a46:	jp     0x416a6a
  416a48:	adc    eax,0x687886a5
  416a4d:	or     BYTE PTR [eax+esi*8-0x44],bl
  416a51:	dec    ebp
  416a52:	pop    eax
  416a53:	clc    
  416a54:	jl     0x416a02
  416a56:	adc    edx,DWORD PTR [ecx+ebp*1+0xa79baae]
  416a5d:	in     eax,0x1e
  416a5f:	push   0xffffff8a
  416a61:	mov    eax,0xb31da85e
  416a66:	push   0x5e258fd5
  416a6b:	adc    bh,BYTE PTR [eax-0x5bfdc535]
  416a71:	icebp  
  416a72:	(bad)  
  416a73:	dec    sp
  416a75:	idiv   BYTE PTR [ecx+0x497a0d30]
  416a7b:	pop    ss
  416a7c:	out    dx,eax
  416a7d:	pop    edi
  416a7e:	scas   eax,DWORD PTR es:[edi]
  416a7f:	inc    esi
  416a80:	lock add eax,ebx
  416a83:	cmp    bh,BYTE PTR [eax+0x2f]
  416a86:	sbb    esi,edi
  416a88:	adc    bl,bh
  416a8a:	popf   
  416a8b:	push   ebx
  416a8c:	inc    esp
  416a8d:	jge    0x416af1
  416a8f:	fiadd  DWORD PTR [ecx+0x3d9a068e]
  416a95:	or     esp,DWORD PTR [ebx-0x1]
  416a98:	std    
  416a99:	pop    esi
  416a9a:	ror    DWORD PTR [esi],1
  416a9c:	sub    bh,cl
  416a9e:	dec    edx
  416a9f:	xlat   BYTE PTR ds:[ebx]
  416aa0:	popf   
  416aa1:	fnstsw WORD PTR [edi]
  416aa3:	jge    0x416a45
  416aa5:	iret   
  416aa6:	ins    BYTE PTR es:[edi],dx
  416aa7:	ret    0xc2d8
  416aaa:	js     0x416a2f
  416aac:	xor    eax,esp
  416aae:	cli    
  416aaf:	stos   DWORD PTR es:[edi],eax
  416ab0:	int    0xde
  416ab2:	xchg   esp,eax
  416ab3:	aaa    
  416ab4:	inc    esp
  416ab5:	jns    0x416ade
  416ab7:	mov    ds:0xff8fc725,eax
  416abc:	adc    BYTE PTR [ebp-0x6bce2d75],ah
  416ac2:	push   esp
  416ac3:	mov    BYTE PTR [ebx+0x4],bh
  416ac6:	add    al,bh
  416ac8:	or     BYTE PTR [edx],dh
  416aca:	xchg   esp,eax
  416acb:	pop    ecx
  416acc:	dec    edx
  416acd:	sbb    eax,0x1b75d651
  416ad2:	cmc    
  416ad3:	pusha  
  416ad4:	push   ebx
  416ad5:	rcl    DWORD PTR gs:[edx],0xae
  416ad9:	xor    esp,DWORD PTR [ebp+0x54]
  416adc:	mov    edi,DWORD PTR [ebx+0x72]
  416adf:	outs   dx,BYTE PTR ds:[esi]
  416ae0:	iret   
  416ae1:	data16 sub BYTE PTR [ebp-0x39e8225b],dl
  416ae8:	push   0xffffff83
  416aea:	mov    bl,bl
  416aec:	invd   
  416aee:	xchg   esi,eax
  416aef:	adc    dl,BYTE PTR [edx-0xc539564]
  416af5:	xlat   BYTE PTR ds:[ebx]
  416af6:	xchg   DWORD PTR [ebx-0x56be9899],edx
  416afc:	jo     0x416adc
  416afe:	loope  0x416b66
  416b00:	cs mov dh,0xe3
  416b03:	inc    esp
  416b04:	(bad)  
  416b05:	fs jae 0x416ae9
  416b08:	dec    esp
  416b09:	pop    esi
  416b0a:	bound  ebx,QWORD PTR [ecx-0x1987a28d]
  416b10:	daa    
  416b11:	mov    WORD PTR [edi+0x2e],gs
  416b14:	xor    ecx,DWORD PTR [esi-0x32601ba8]
  416b1a:	push   es
  416b1b:	outs   dx,DWORD PTR ds:[esi]
  416b1c:	ds test eax,esi
  416b1f:	stos   BYTE PTR es:[edi],al
  416b20:	cld    
  416b21:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b23:	push   ebx
  416b24:	xchg   esp,eax
  416b25:	dec    BYTE PTR [esi+0x66]
  416b28:	xchg   ebx,eax
  416b29:	mov    WORD PTR [ebp+0x15],ds
  416b2c:	push   0xffffffe2
  416b2e:	or     al,0xad
  416b30:	shl    esp,cl
  416b32:	loop   0x416b25
  416b34:	sbb    al,0x2b
  416b36:	stc    
  416b37:	adc    BYTE PTR [eax+edi*2+0x6230d4c8],cl
  416b3e:	xchg   ah,cl
  416b40:	push   edx
  416b41:	push   edx
  416b42:	xchg   BYTE PTR [ebx-0x3291e3a],bh
  416b48:	sti    
  416b49:	sti    
  416b4a:	cli    
  416b4b:	or     ecx,edx
  416b4d:	das    
  416b4e:	jmp    FWORD PTR [eax+0x2f]
  416b51:	ds push esi
  416b53:	pop    ds
  416b54:	icebp  
  416b55:	addr16 cmp al,0x26
  416b58:	jecxz  0x416b6c
  416b5a:	ret    
  416b5b:	pop    ecx
  416b5c:	dec    eax
  416b5d:	inc    eax
  416b5e:	pop    ds
  416b5f:	mov    ecx,0x27534e25
  416b64:	fsubr  QWORD PTR [edx+esi*4]
  416b67:	aam    0xae
  416b69:	ret    0x6ad8
  416b6c:	lds    edx,FWORD PTR [ebp-0x4d76ba61]
  416b72:	dec    esp
  416b73:	fcmovbe st,st(1)
  416b75:	xor    ecx,DWORD PTR [ebx+0xe5a9b8e]
  416b7b:	popa   
  416b7c:	jecxz  0x416b54
  416b7e:	fnstenv [ecx]
  416b80:	test   BYTE PTR [eax-0x2b6f3e44],bh
  416b86:	xor    al,0x81
  416b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b89:	sub    ecx,ebp
  416b8b:	mov    eax,ds:0xb37f47fc
  416b90:	ds out dx,al
  416b92:	dec    esp
  416b93:	pop    esi
  416b94:	ss ret 
  416b96:	hlt    
  416b97:	dec    esi
  416b98:	mov    edx,0x15c87e33
  416b9d:	xor    DWORD PTR [eax+eax*8+0x3a4814d5],0x86356a06
  416ba8:	cmp    BYTE PTR [ecx+0x64998f56],al
  416bae:	addr16 (bad) 
  416bb1:	ret    0xe105
  416bb4:	mov    dl,0x57
  416bb6:	sbb    al,bl
  416bb8:	mov    al,ds:0x20623651
  416bbd:	call   0xc9d2def5
  416bc2:	push   cs
  416bc3:	mov    ch,0x42
  416bc5:	pushf  
  416bc6:	mov    eax,ds:0x49965146
  416bcb:	mov    fs,WORD PTR [ebp+0xb]
  416bce:	rcr    DWORD PTR fs:[ecx+0x51c97359],0x50
  416bd6:	(bad)  
  416bd7:	test   al,0xe0
  416bd9:	pusha  
  416bda:	xor    BYTE PTR [ebp+0x4a],dl
  416bdd:	pop    esp
  416bde:	inc    ebx
  416bdf:	(bad)  
  416be0:	pushf  
  416be1:	xchg   BYTE PTR [esi],dl
  416be3:	xor    eax,0xe4beef1d
  416be8:	fldcw  WORD PTR [esi+edx*2-0x17]
  416bec:	mov    dl,0x9f
  416bee:	test   bh,dl
  416bf0:	dec    ebp
  416bf1:	mov    esp,0xe2e1cb61
  416bf6:	and    DWORD PTR [ecx-0x6f955c7],esi
  416bfc:	pop    ds
  416bfd:	mov    esp,0xfbc16ab1
  416c02:	(bad)  
  416c03:	jmp    0x416bd8
  416c05:	imul   eax,DWORD PTR [ebp+0x42623060],0x5b32eb7c
  416c0f:	daa    
  416c10:	jb     0x416bff
  416c12:	(bad)  
  416c13:	in     eax,dx
  416c14:	or     DWORD PTR [eax-0x2c],ecx
  416c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c18:	cmp    esp,DWORD PTR [ecx+edx*2-0xc8081ad]
  416c1f:	push   esp
  416c20:	or     eax,0x64256f9e
  416c25:	pop    esi
  416c26:	mov    esi,0xce4729d4
  416c2b:	fld    QWORD PTR [edx+0x51902349]
  416c31:	pop    ss
  416c32:	adc    DWORD PTR [esi+0x3],ebp
  416c35:	push   es
  416c36:	es push ss
  416c38:	ins    DWORD PTR es:[edi],dx
  416c39:	into   
  416c3a:	outs   dx,DWORD PTR ds:[esi]
  416c3b:	xor    esp,DWORD PTR [edx+0x538c889c]
  416c41:	call   0xdc08:0x11551078
  416c48:	aad    0x2d
  416c4a:	mov    bh,BYTE PTR [edi-0x3]
  416c4d:	outs   dx,BYTE PTR ds:[esi]
  416c4e:	xchg   edx,eax
  416c4f:	test   DWORD PTR [edi+0x0],ecx
  416c52:	jge    0x416c9a
  416c54:	das    
  416c55:	icebp  
  416c56:	mov    dh,0x1a
  416c58:	sub    al,BYTE PTR [edx-0xa]
  416c5b:	xchg   esi,eax
  416c5c:	sbb    al,0x59
  416c5e:	fs adc eax,0x524c2529
  416c64:	mov    ebp,0xf4a4b37a
  416c69:	sbb    al,0x86
  416c6b:	add    al,0xc9
  416c6d:	mov    dl,0x23
  416c6f:	(bad)  
  416c70:	fild   DWORD PTR [ebp+0x626fe52b]
  416c76:	pop    edx
  416c77:	(bad)  
  416c78:	sbb    al,0x56
  416c7a:	loope  0x416c3e
  416c7c:	std    
  416c7d:	add    al,0xd8
  416c7f:	jb     0x416c6a
  416c81:	iret   
  416c82:	jo     0x416cdd
  416c84:	outs   dx,DWORD PTR ds:[esi]
  416c85:	mov    ebx,0x8cc407f9
  416c8a:	sub    BYTE PTR [edx+ebx*2],bl
  416c8d:	xchg   BYTE PTR [ebx-0x131a4b1f],cl
  416c93:	popa   
  416c94:	aam    0x3d
  416c96:	mov    ds:0xea7de89,eax
  416c9b:	daa    
  416c9c:	in     eax,dx
  416c9d:	cmp    cl,ch
  416c9f:	inc    esp
  416ca0:	lock mov ebx,0xc0d4f763
  416ca6:	rcr    BYTE PTR [ebp-0x4de8589],cl
  416cac:	dec    edx
  416cad:	mov    bh,0x38
  416caf:	(bad)  
  416cb0:	popf   
  416cb1:	hlt    
  416cb2:	stos   DWORD PTR es:[edi],eax
  416cb3:	cmp    al,0xb1
  416cb5:	jo     0x416c58
  416cb7:	sub    DWORD PTR [si+0x1a],0xb53f3f88
  416cbf:	fdivr  DWORD PTR [ecx+0x1ab35915]
  416cc5:	jb     0x416cc2
  416cc7:	inc    ebp
  416cc8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416cca:	fild   QWORD PTR [edx+ecx*1+0x28ec1847]
  416cd1:	mov    ds:0xc475a41b,eax
  416cd6:	jge    0x416d3c
  416cd8:	xor    al,0xfe
  416cda:	cmp    ch,BYTE PTR [edi+0x7badf450]
  416ce0:	jae    0x416c88
  416ce2:	xor    al,0x6
  416ce4:	int3   
  416ce5:	in     al,0x49
  416ce7:	dec    esp
  416ce8:	mov    esp,0xd917aa3e
  416ced:	retf   
  416cee:	xor    al,0xf9
  416cf0:	cmp    eax,0x37847180
  416cf5:	xchg   ecx,eax
  416cf6:	inc    ecx
  416cf7:	fistp  DWORD PTR [eax]
  416cf9:	mov    dh,BYTE PTR [esp+ecx*8+0x19]
  416cfd:	scas   al,BYTE PTR es:[edi]
  416cfe:	je     0x416d79
  416d00:	adc    BYTE PTR [ebp-0x22f46230],bh
  416d06:	mov    esi,0x9c98228c
  416d0b:	sub    edi,edx
  416d0d:	pop    ebp
  416d0e:	push   ds
  416d0f:	xchg   esi,eax
  416d10:	mul    DWORD PTR [edx]
  416d12:	bound  ebp,QWORD PTR es:[ebx+0x40bfbaf9]
  416d19:	mov    bl,0x77
  416d1b:	jp     0x416d4c
  416d1d:	js     0x416ccc
  416d1f:	ss in  al,0x84
  416d22:	scas   eax,DWORD PTR es:[edi]
  416d23:	icebp  
  416d24:	icebp  
  416d25:	retf   0xa834
  416d28:	fadd   DWORD PTR [edi+0x6b]
  416d2b:	out    0xb8,eax
  416d2d:	xchg   bh,ch
  416d2f:	push   ds
  416d30:	inc    ecx
  416d31:	and    edx,esi
  416d33:	cmp    DWORD PTR [ecx],eax
  416d35:	inc    esi
  416d36:	fiadd  DWORD PTR [ecx-0xa68a01a]
  416d3c:	scas   eax,DWORD PTR es:[edi]
  416d3d:	scas   al,BYTE PTR es:[edi]
  416d3e:	xor    DWORD PTR [esi],ebp
  416d40:	lock ins DWORD PTR es:[edi],dx
  416d42:	stc    
  416d43:	and    DWORD PTR [edi-0x59],ebx
  416d46:	add    BYTE PTR [ecx+0x47],0x6d
  416d4a:	dec    ebx
  416d4b:	mov    ecx,0xb86b4733
  416d50:	add    DWORD PTR [edx+0x4f24e2bd],edi
  416d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d57:	mov    bl,0x8c
  416d59:	pushw  ds
  416d5b:	dec    edx
  416d5c:	add    DWORD PTR [esi+0x3c],0xa
  416d60:	inc    ecx
  416d61:	test   al,0x94
  416d63:	lods   al,BYTE PTR ds:[esi]
  416d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d65:	sub    DWORD PTR [edx],esi
  416d67:	and    DWORD PTR [ebx],0x598b0f86
  416d6d:	jmp    0x416dca
  416d6f:	jle    0x416db0
  416d71:	fbld   TBYTE PTR [ecx+0x30af2091]
  416d77:	retf   0xab17
  416d7a:	push   0x32102bde
  416d7f:	sub    BYTE PTR [esi-0x600d99ef],bh
  416d85:	pop    edi
  416d86:	inc    edx
  416d87:	aad    0xe9
  416d89:	ja     0x416d75
  416d8b:	in     al,dx
  416d8c:	and    eax,DWORD PTR [edx+eiz*2]
  416d8f:	dec    ecx
  416d90:	mov    edi,0xf9acb7b7
  416d95:	mov    cl,0xa6
  416d97:	inc    edx
  416d98:	cmp    eax,0x216c0f7
  416d9d:	lds    edi,FWORD PTR [eax-0x7c]
  416da0:	sbb    BYTE PTR [ebx-0x18],cl
  416da3:	lock cmp dl,bl
  416da6:	les    eax,FWORD PTR [edi-0x39a490c0]
  416dac:	or     ebp,esp
  416dae:	xlat   BYTE PTR ds:[ebx]
  416daf:	in     al,0xbb
  416db1:	xchg   BYTE PTR [ecx],bl
  416db3:	pop    ss
  416db4:	retf   0x6505
  416db7:	xor    al,0x37
  416db9:	xchg   ecx,eax
  416dba:	dec    ebx
  416dbb:	(bad)  
  416dbc:	cmp    edx,edx
  416dbe:	inc    esp
  416dbf:	xchg   ebp,eax
  416dc0:	(bad)
  416dc3:	sbb    esp,edi
  416dc5:	push   ds
  416dc6:	jmp    0x56bb3fd8
  416dcb:	(bad)  
  416dcc:	mov    dh,0xd8
  416dce:	test   eax,0xf4f3e387
  416dd3:	sub    al,0x3a
  416dd5:	aad    0xe3
  416dd7:	dec    esi
  416dd8:	adc    bl,0x9d
  416ddb:	and    BYTE PTR [edi+0x61],0xc5
  416ddf:	add    eax,0x51a6b4c8
  416de5:	pop    ecx
  416de6:	int    0xeb
  416de8:	jo     0x416e31
  416dea:	mov    ebp,0xd0a0becf
  416def:	inc    edi
  416df0:	jo     0x416e5c
  416df2:	leave  
  416df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df4:	jno    0x416e17
  416df6:	jg     0x416e4a
  416df8:	add    BYTE PTR [eax+edx*1+0x1b],0xcb
  416dfd:	nop
  416dfe:	ins    BYTE PTR es:[edi],dx
  416dff:	xor    ebx,ecx
  416e01:	dec    edi
  416e02:	pusha  
  416e03:	in     al,dx
  416e04:	mov    cl,0x21
  416e06:	fst    DWORD PTR [edi-0x1b37d2e3]
  416e0c:	ins    BYTE PTR es:[edi],dx
  416e0d:	lock or ebp,DWORD PTR [edi+0x5]
  416e11:	inc    eax
  416e12:	dec    ebp
  416e13:	ret    0xf93e
  416e16:	sbb    BYTE PTR [edx-0x42a94669],ah
  416e1c:	inc    esi
  416e1d:	adc    al,0x81
  416e1f:	mov    edx,0x4b05241d
  416e24:	xor    edx,esi
  416e26:	push   0x8
  416e28:	add    al,0xd0
  416e2a:	(bad)  
  416e2b:	ror    BYTE PTR [edi-0x2e],0x3f
  416e2f:	mov    ebp,0x477e2f1
  416e34:	sar    DWORD PTR [ebx-0x191a71b2],1
  416e3a:	cld    
  416e3b:	lea    ecx,[ebp-0xc]
  416e3e:	mov    ebp,0xbc506641
  416e43:	hlt    
  416e44:	fisubr DWORD PTR [esi]
  416e46:	xor    BYTE PTR [ebx+0x52],ah
  416e49:	pop    ss
  416e4a:	mov    ?,ebx
  416e4c:	ss and ch,ah
  416e4f:	jmp    0x5c3:0x9329e21b
  416e56:	in     al,0x44
  416e58:	xlat   BYTE PTR fs:[ebx]
  416e5a:	jg     0x416e11
  416e5c:	and    DWORD PTR [ecx+0x521014d9],0x75
  416e63:	dec    esi
  416e64:	pusha  
  416e65:	ins    DWORD PTR es:[edi],dx
  416e66:	or     eax,0x678d3357
  416e6b:	popf   
  416e6c:	xchg   esp,eax
  416e6d:	push   0x7515029b
  416e72:	fistp  QWORD PTR [esi+0x3494be4b]
  416e78:	fist   WORD PTR [eax-0x208ff472]
  416e7e:	ret    0x60ed
  416e81:	dec    ecx
  416e82:	push   ebp
  416e83:	xchg   edi,eax
  416e84:	mov    bl,0x54
  416e86:	bswap  eax
  416e88:	aaa    
  416e89:	mov    ecx,0xabdfba52
  416e8e:	mov    ds:0xfe0db1f6,eax
  416e93:	mov    ebp,0x9339ee8a
  416e98:	sbb    eax,0x7a1f4352
  416e9d:	push   ecx
  416e9e:	ds pop edi
  416ea0:	sub    esi,DWORD PTR [eax+0x19]
  416ea3:	out    0x4,al
  416ea5:	dec    eax
  416ea6:	repz test DWORD PTR [edi],esp
  416ea9:	mov    esi,0xb92957b5
  416eae:	imul   DWORD PTR [ebx+0x353d7bf7]
  416eb4:	mov    bl,0x9d
  416eb6:	dec    edx
  416eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb8:	retf   
  416eb9:	nop
  416eba:	jbe    0x416ef9
  416ebc:	mov    edi,ebp
  416ebe:	shr    DWORD PTR [ecx-0x19],0x21
  416ec2:	out    dx,al
  416ec3:	cmp    al,0x6c
  416ec5:	xchg   esi,eax
  416ec6:	lea    ecx,[ecx-0x6f9fdc3f]
  416ecc:	iret   
  416ecd:	in     al,0xd9
  416ecf:	dec    esi
  416ed0:	scas   eax,DWORD PTR es:[edi]
  416ed1:	adc    dl,BYTE PTR [eax+0x4d00445b]
  416ed7:	mov    cl,0x3b
  416ed9:	inc    ecx
  416eda:	icebp  
  416edb:	xor    al,0x82
  416edd:	fistp  DWORD PTR [edx+0x6]
  416ee0:	loope  0x416e9f
  416ee2:	fist   WORD PTR [ecx]
  416ee4:	push   eax
  416ee5:	and    BYTE PTR [ecx+0x709eb867],0x45
  416eec:	je     0x416f39
  416eee:	pop    edi
  416eef:	mov    ds:0x5931a0b6,eax
  416ef4:	loope  0x416f5c
  416ef6:	js     0x416f3f
  416ef8:	in     eax,0xc4
  416efa:	in     al,0x76
  416efc:	imul   esp,DWORD PTR [eax+0x71],0x3f
  416f00:	jbe    0x416e9a
  416f02:	inc    ebp
  416f03:	imul   DWORD PTR [esi]
  416f05:	out    0x85,eax
  416f07:	push   ecx
  416f08:	int    0x85
  416f0a:	sub    BYTE PTR [ebx+edi*4-0x2fbcce63],0xc0
  416f12:	xchg   ebx,eax
  416f13:	cmp    esp,DWORD PTR [ebp-0x660ad0cf]
  416f19:	inc    esp
  416f1a:	push   edi
  416f1b:	mov    BYTE PTR [eax+0x76a27aaa],dl
  416f21:	arpl   WORD PTR [ebx-0x399bd701],ax
  416f27:	js     0x416ee0
  416f29:	mov    DWORD PTR [eax+0x29],ecx
  416f2c:	rol    DWORD PTR [edx+0x69],cl
  416f2f:	cwde   
  416f30:	mov    bh,0x3b
  416f32:	sub    ebp,DWORD PTR [ebx+eax*1]
  416f35:	outs   dx,DWORD PTR ds:[esi]
  416f36:	push   ecx
  416f37:	retf   
  416f38:	jno    0x416f7e
  416f3a:	mov    ss,eax
  416f3c:	or     bl,al
  416f3e:	clc    
  416f3f:	mov    ebx,0xb461abb5
  416f44:	pop    ebp
  416f45:	loopne 0x416f0f
  416f47:	cmp    BYTE PTR [eax-0x2fc1a2b4],bl
  416f4d:	push   edi
  416f4e:	and    esp,DWORD PTR [ecx-0x1661e89e]
  416f54:	mov    edx,0x342f2fee
  416f59:	add    DWORD PTR [edx],eax
  416f5b:	ins    BYTE PTR es:[edi],dx
  416f5c:	stos   BYTE PTR es:[edi],al
  416f5d:	jmp    0x416f17
  416f5f:	out    dx,al
  416f60:	adc    bl,BYTE PTR [edi-0x51]
  416f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f64:	mov    cl,0x6b
  416f66:	ret    0xd7c
  416f69:	and    ah,BYTE PTR [ecx-0x3c]
  416f6c:	push   edi
  416f6d:	jne    0x416f63
  416f6f:	pop    edi
  416f70:	mov    esp,cr6
  416f73:	mov    dh,0xea
  416f75:	jns    0x416f24
  416f77:	xchg   edi,eax
  416f78:	push   ds
  416f79:	shr    DWORD PTR [ebx+0x2e],1
  416f7c:	adc    BYTE PTR [esi-0x15],cl
  416f7f:	cmp    al,0x73
  416f81:	mov    esi,0x44d2f731
  416f86:	ins    BYTE PTR es:[edi],dx
  416f87:	xchg   edx,eax
  416f88:	xchg   esp,eax
  416f89:	aad    0xe5
  416f8b:	dec    esp
  416f8c:	mov    esp,0xeeaeaf7a
  416f91:	xor    al,0xd6
  416f93:	push   eax
  416f94:	cmp    esp,DWORD PTR [edi]
  416f96:	and    ecx,esp
  416f98:	xchg   ebp,eax
  416f99:	or     al,0x11
  416f9b:	mov    eax,ds:0xb1e6099d
  416fa0:	cld    
  416fa1:	pop    esi
  416fa2:	loop   0x416fb0
  416fa4:	mov    cl,0xc8
  416fa6:	jmp    0x417017
  416fa8:	fcmovu st,st(6)
  416faa:	xchg   ebx,eax
  416fab:	repz (bad) 
  416fae:	xor    al,0x17
  416fb0:	sbb    edx,ecx
  416fb2:	in     al,dx
  416fb3:	aas    
  416fb4:	(bad)  
  416fb6:	sbb    al,0x3e
  416fb8:	dec    eax
  416fb9:	mov    WORD PTR [eax+0x6414f58],gs
  416fbf:	pop    es
  416fc0:	push   esi
  416fc1:	cmp    ebx,ebp
  416fc3:	int    0xd7
  416fc5:	jnp    0x416f7e
  416fc7:	pop    es
  416fc8:	repz out 0x1c,eax
  416fcb:	shl    esp,0x27
  416fce:	sbb    esp,ebx
  416fd0:	outs   dx,DWORD PTR ds:[esi]
  416fd1:	push   ebx
  416fd2:	push   cs
  416fd3:	push   es
  416fd4:	jmp    0x7b7cc4c5
  416fd9:	mov    al,0x86
  416fdb:	push   esp
  416fdc:	mov    cl,0x18
  416fde:	lods   al,BYTE PTR ds:[esi]
  416fdf:	outs   dx,DWORD PTR ds:[esi]
  416fe0:	inc    esp
  416fe1:	lahf   
  416fe2:	or     eax,0x25815376
  416fe7:	add    ch,BYTE PTR [edi]
  416fe9:	dec    ebp
  416fea:	dec    ebp
  416feb:	addr16 and ch,0x36
  416fef:	into   
  416ff0:	sub    BYTE PTR [ebp+0x39],0x3
  416ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff5:	ins    DWORD PTR es:[edi],dx
  416ff6:	lds    ebp,FWORD PTR [ebp+0x50]
  416ff9:	loope  0x416f8b
  416ffb:	lock adc DWORD PTR [ebx-0x12065ac5],ecx
  417002:	inc    esp
  417003:	or     ch,BYTE PTR [edx+eax*4+0x7]
  417007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417008:	pushf  
  417009:	cmp    DWORD PTR [eax],0x28
  41700c:	mov    esp,0x7848f35a
  417011:	cmp    eax,ecx
  417013:	sti    
  417014:	pop    ebx
  417015:	cs mov eax,es
  417018:	xor    DWORD PTR [ebp-0x46],edx
  41701b:	imul   esi,DWORD PTR [edi+0x2c],0x282420b9
  417022:	stos   BYTE PTR es:[edi],al
  417023:	shl    DWORD PTR [edx+0x1ac4887e],1
  417029:	add    BYTE PTR [esp+esi*4+0x52fc3e08],ah
  417030:	clc    
  417031:	xor    DWORD PTR [ecx+0x11c5c2a7],ecx
  417037:	and    eax,0xe3a6356d
  41703c:	ss stos DWORD PTR es:[edi],eax
  41703e:	popf   
  41703f:	test   BYTE PTR [ebp-0x5],ah
  417042:	or     al,0x83
  417044:	mov    ebp,0x1cb03c47
  417049:	in     eax,0x66
  41704b:	test   eax,0xd20b921d
  417050:	xchg   BYTE PTR [edx-0x47],dh
  417053:	xchg   edx,eax
  417054:	mov    cl,0x29
  417056:	fs jo  0x416fdd
  417059:	fistp  WORD PTR [eax-0xd]
  41705c:	sbb    edi,edx
  41705e:	dec    ebp
  41705f:	popa   
  417060:	cmovns ebp,DWORD PTR [ebp-0x1f]
  417064:	dec    esp
  417065:	cmp    BYTE PTR [esi+edx*1],dl
  417068:	mov    cl,0xf1
  41706a:	sub    DWORD PTR [ebx],0xa2a822de
  417070:	push   0x6c
  417072:	retf   
  417073:	adc    cl,BYTE PTR [ebp-0x6c]
  417076:	arpl   WORD PTR [ecx+0x66],si
  417079:	es sub ecx,edx
  41707c:	push   ss
  41707d:	(bad)  
  41707e:	xchg   ebx,eax
  41707f:	sbb    edi,esp
  417081:	pop    ss
  417082:	jl     0x41708e
  417084:	icebp  
  417085:	mov    al,ds:0x2bc63fe8
  41708a:	jp     0x41707d
  41708c:	mov    ecx,0xcaa3908f
  417091:	mov    edi,esi
  417093:	lahf   
  417094:	mov    ecx,0x9b76bddd
  417099:	pop    edi
  41709a:	pop    ebx
  41709b:	fbld   TBYTE PTR [edi+esi*8+0x5c]
  41709f:	jge    0x4170cc
  4170a1:	xchg   DWORD PTR [ebp-0x1b],esi
  4170a4:	lds    edi,FWORD PTR [esi-0x31]
  4170a7:	imul   BYTE PTR [esi]
  4170a9:	clc    
  4170aa:	xchg   edi,eax
  4170ab:	fs call 0x3608:0xf7560a4e
  4170b3:	mov    ecx,0xbf083ab3
  4170b8:	test   eax,0x4f0bccf7
  4170bd:	mov    ah,0x13
  4170bf:	repnz sub BYTE PTR [ecx],bh
  4170c2:	push   0xace91e93
  4170c7:	dec    edx
  4170c8:	adc    DWORD PTR [esp+ebx*8-0x55ef1188],ecx
  4170cf:	jmp    0x25274751
  4170d4:	je     0x4170c0
  4170d6:	mov    DWORD PTR [edx],edx
  4170d8:	into   
  4170d9:	cmp    eax,0x162ae79b
  4170de:	mov    al,0x30
  4170e0:	enter  0x35d4,0x1e
  4170e4:	pop    es
  4170e5:	lods   al,BYTE PTR ds:[esi]
  4170e6:	daa    
  4170e7:	test   al,0x65
  4170e9:	push   0xba2322ce
  4170ee:	arpl   bp,ax
  4170f0:	lea    ebx,[ecx+0x46d709bd]
  4170f6:	ja     0x41716e
  4170f8:	enter  0x6c7,0x1b
  4170fc:	xchg   ecx,eax
  4170fd:	inc    eax
  4170fe:	dec    edx
  4170ff:	jge    0x417120
  417101:	inc    ecx
  417102:	xor    DWORD PTR [esi],eax
  417104:	(bad)  
  417105:	loop   0x417104
  417107:	fild   WORD PTR [edi]
  417109:	loope  0x417132
  41710b:	sbb    al,0x8c
  41710d:	pop    ecx
  41710e:	repnz push eax
  417110:	jb     0x4170b9
  417112:	mov    WORD PTR [ecx-0x661616a2],?
  417118:	inc    edx
  417119:	jo     0x417198
  41711b:	xor    DWORD PTR [ecx-0x7946c0af],edx
  417121:	dec    ecx
  417122:	inc    edx
  417123:	xor    eax,0x808cc5ac
  417128:	xchg   ebp,eax
  417129:	div    BYTE PTR [edx+0x206a1574]
  41712f:	lods   al,BYTE PTR ds:[esi]
  417130:	jmp    0x4171a1
  417132:	push   eax
  417133:	and    al,0x7b
  417135:	das    
  417136:	sub    al,0x49
  417138:	enter  0xdbd8,0xb3
  41713c:	scas   al,BYTE PTR es:[edi]
  41713d:	mov    dh,0x7d
  41713f:	in     eax,0xec
  417141:	out    dx,eax
  417142:	popf   
  417143:	aad    0xdd
  417145:	mov    ds:0xf29f0516,eax
  41714a:	stos   DWORD PTR es:[edi],eax
  41714b:	clc    
  41714c:	in     eax,0x83
  41714e:	jnp    0x417155
  417150:	dec    ebp
  417151:	sub    edi,0xffffff99
  417154:	mov    eax,0xb825ac6a
  417159:	mov    esi,0xf3cf9b2a
  41715e:	(bad)
  417161:	out    dx,eax
  417162:	nop
  417163:	jl     0x4171c5
  417165:	or     DWORD PTR [edi+0xf],0xa662a466
  41716c:	retf   0xd27a
  41716f:	call   FWORD PTR [ecx-0x4e3c146a]
  417175:	addr16 add eax,0x8a412381
  41717b:	xor    bh,al
  41717d:	cmp    DWORD PTR [edx+edx*8-0xa],ebp
  417181:	sbb    BYTE PTR [eax],ah
  417183:	sbb    BYTE PTR [ecx],0x5a
  417186:	cmc    
  417187:	add    eax,0x2106f9aa
  41718c:	sub    eax,0x6ff8ed29
  417191:	out    dx,eax
  417192:	imul   esp,DWORD PTR [esi-0x4766fc7b],0xaffca0f3
  41719c:	sub    BYTE PTR [eax-0x5b66f4cf],0x5c
  4171a3:	ror    edi,1
  4171a5:	xor    eax,0x3cac33dd
  4171aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ab:	out    dx,eax
  4171ac:	pop    ecx
  4171ad:	adc    DWORD PTR [edx+0x5428ab07],ecx
  4171b3:	pcmpgtw mm1,QWORD PTR [esi+ebp*8+0x2119488f]
  4171bb:	xor    dh,BYTE PTR [esi-0xf]
  4171be:	ins    DWORD PTR es:[edi],dx
  4171bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c0:	jmp    0xa4de:0x6901332c
  4171c7:	mov    edx,0x2663abbc
  4171cc:	inc    ebx
  4171cd:	and    bh,BYTE PTR [ecx+eiz*1-0x1e5aa10f]
  4171d4:	or     eax,0x29375ee3
  4171d9:	pusha  
  4171da:	xor    edi,esp
  4171dc:	xchg   ebx,eax
  4171dd:	sbb    DWORD PTR cs:[edi+0x4793ac06],ecx
  4171e4:	mov    edx,0x5006dc6
  4171e9:	jns    0x417204
  4171eb:	leave  
  4171ec:	mov    esi,0x71fa9e47
  4171f1:	pop    ds
  4171f2:	fisubr WORD PTR [ecx+0x6b]
  4171f5:	ds pop es
  4171f7:	int3   
  4171f8:	xchg   ecx,eax
  4171f9:	and    dh,BYTE PTR [eax-0x6f]
  4171fc:	std    
  4171fd:	ss repz pop ds
  417200:	shl    BYTE PTR [ebx],1
  417202:	inc    ebp
  417203:	xchg   edi,eax
  417204:	xchg   DWORD PTR [edx+0x74],esp
  417207:	xor    bh,BYTE PTR [esi]
  417209:	test   al,0xf6
  41720b:	retf   0x8883
  41720e:	out    0xb6,eax
  417210:	shl    esi,0x45
  417213:	xor    eax,0xa96ec5c6
  417218:	popa   
  417219:	mov    edx,0x7bdc4877
  41721e:	out    0x5,eax
  417220:	ins    BYTE PTR es:[edi],dx
  417221:	xchg   esp,eax
  417222:	mov    WORD PTR [ebp+0x2c646f90],fs
  417228:	or     edx,DWORD PTR [ecx]
  41722a:	or     eax,0x280cdeb4
  41722f:	add    eax,0x8c71c935
  417234:	inc    ecx
  417235:	jmp    0x57df1136
  41723a:	push   ss
  41723b:	stc    
  41723c:	shl    esi,0x5f
  41723f:	mov    bh,0xfa
  417241:	and    eax,0xca48549a
  417246:	mov    WORD PTR [edi-0x35b2f4],fs
  41724c:	and    eax,0x30794b78
  417251:	adc    ah,dl
  417253:	addr16 out 0xae,eax
  417256:	jmp    0xb99f65ba
  41725b:	cs dec edx
  41725d:	arpl   WORD PTR [ebx+0x15],bx
  417260:	sbb    BYTE PTR [edi-0x162cb5be],ch
  417266:	dec    esi
  417267:	outs   dx,BYTE PTR ds:[esi]
  417268:	jmp    0x4172b7
  41726a:	lea    esp,[ebx+0x170af9f3]
  417270:	dec    esp
  417271:	retf   0x95b6
  417274:	cmp    BYTE PTR [eax+0xcdb681c],dh
  41727a:	add    edi,DWORD PTR [esi+0x1304c8d2]
  417280:	xor    BYTE PTR [eax-0x1f88facb],ah
  417286:	out    0x64,eax
  417288:	ja     0x4172b9
  41728a:	jbe    0x4172cb
  41728c:	jp     0x417261
  41728e:	stc    
  41728f:	mov    eax,0x27ddd8e3
  417294:	pop    edx
  417295:	ret    
  417296:	inc    esp
  417297:	push   0x77
  417299:	out    dx,eax
  41729a:	ret    0xc17d
  41729d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729e:	push   es
  41729f:	outs   dx,BYTE PTR ds:[esi]
  4172a0:	cmp    al,BYTE PTR [esi-0x791d0646]
  4172a6:	xchg   ebx,eax
  4172a7:	les    esi,FWORD PTR [eax-0x2bac791]
  4172ad:	fcomp  QWORD PTR [esi-0xb796ccb]
  4172b3:	mov    esp,DWORD PTR [ebx]
  4172b5:	mov    eax,ds:0x208eb57a
  4172ba:	fadd   st,st(5)
  4172bc:	or     BYTE PTR [edi],0x6c
  4172bf:	cmp    DWORD PTR [esi-0x44],eax
  4172c2:	xchg   ecx,eax
  4172c3:	test   al,0xa3
  4172c5:	pop    ecx
  4172c6:	mov    ecx,0x680917cd
  4172cb:	popa   
  4172cc:	(bad)  
  4172cd:	fst    QWORD PTR [edx+0x6ec481cc]
  4172d3:	sbb    al,0xda
  4172d5:	(bad)  [eax]
  4172d7:	dec    ebx
  4172d8:	jbe    0x41730b
  4172da:	outs   dx,DWORD PTR ds:[esi]
  4172db:	xor    DWORD PTR [ecx],ebx
  4172dd:	jbe    0x41735a
  4172df:	push   esi
  4172e0:	ja     0x4172ad
  4172e2:	stos   BYTE PTR es:[edi],al
  4172e3:	pop    ss
  4172e4:	dec    esi
  4172e5:	add    al,dh
  4172e7:	xchg   esp,eax
  4172e8:	ret    0xe10f
  4172eb:	mov    ds:0x8889520e,al
  4172f0:	add    al,dl
  4172f2:	sub    al,0x29
  4172f4:	call   0xb177:0xf4f000b3
  4172fb:	sub    al,0xa8
  4172fd:	cmp    DWORD PTR [ebx+0x712abfbb],ebp
  417303:	jo     0x417302
  417305:	adc    esp,DWORD PTR [edi+0x471c97ac]
  41730b:	(bad)  
  41730c:	fmul   DWORD PTR [eax+0x71d845b6]
  417312:	out    dx,al
  417313:	mov    edi,0x783ce107
  417318:	out    0x82,eax
  41731a:	les    eax,FWORD PTR [ecx]
  41731c:	test   BYTE PTR [eax+0x19],ch
  41731f:	jmp    0x8ef0:0x6e0306cd
  417326:	dec    eax
  417327:	sub    ah,BYTE PTR [edi-0x6a]
  41732a:	ret    
  41732b:	inc    edi
  41732d:	outs   dx,BYTE PTR ds:[esi]
  41732e:	cwde   
  41732f:	lahf   
  417330:	xor    bl,0x2b
  417333:	or     dh,BYTE PTR [esp+edi*2-0x26b1b489]
  41733a:	mov    ecx,0xe6fc1565
  41733f:	inc    edi
  417340:	push   ecx
  417341:	sub    eax,DWORD PTR [ecx+0x1dc06d87]
  417347:	popf   
  417348:	and    DWORD PTR [esi],esp
  41734a:	add    ah,bh
  41734c:	outs   dx,BYTE PTR ds:[esi]
  41734d:	lock cmp ecx,DWORD PTR [esi]
  417350:	sbb    ah,BYTE PTR [esi-0x1e]
  417353:	sar    BYTE PTR ds:0x1f8e801e,0xe
  41735a:	pop    esi
  41735b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735c:	dec    ecx
  41735d:	adc    DWORD PTR [ecx+0x2e0f83fc],esi
  417363:	adc    ah,ah
  417365:	mov    ebp,edx
  417367:	std    
  417368:	inc    edx
  417369:	je     0x41730d
  41736b:	ja     0x4173d9
  41736d:	popa   
  41736e:	lods   eax,DWORD PTR ds:[esi]
  41736f:	rcr    BYTE PTR [esi+0x9],0x6c
  417373:	mov    esi,0x7e51b287
  417378:	adc    al,0xcb
  41737a:	jnp    0x417309
  41737c:	add    ebp,DWORD PTR [ecx-0x4]
  41737f:	cmc    
  417380:	fild   DWORD PTR [ecx+0x5d]
  417383:	mov    ds:0xac09da42,al
  417388:	xchg   ecx,eax
  417389:	cdq    
  41738a:	xchg   esp,eax
  41738b:	cdq    
  41738c:	call   0x7a98:0x5064303b
  417393:	jp     0x4173e5
  417395:	mov    ds:0xc39bb560,al
  41739a:	out    dx,al
  41739b:	mov    eax,fs
  41739d:	fdivr  st(3),st
  41739f:	jne    0x417367
  4173a1:	shl    esp,1
  4173a3:	adc    ebx,DWORD PTR [esi-0x30]
  4173a6:	test   al,0xbf
  4173a8:	cmp    ecx,DWORD PTR [edx+eax*8]
  4173ab:	mov    esi,0x3da1a94e
  4173b0:	cmp    edi,DWORD PTR [edx-0x291095e1]
  4173b6:	fcomp  QWORD PTR [esi-0x5f]
  4173b9:	cli    
  4173ba:	pop    edi
  4173bb:	in     al,dx
  4173bc:	test   eax,0x54824b47
  4173c1:	test   al,0x57
  4173c3:	pop    edi
  4173c4:	mov    ds:0xbe4474a2,al
  4173c9:	jmp    0x5a12f1ed
  4173ce:	push   edi
  4173cf:	neg    BYTE PTR [edx+edi*4-0x55cbc3b4]
  4173d6:	add    DWORD PTR [edi+ecx*8-0x22],eax
  4173da:	dec    ebp
  4173db:	cmp    dh,BYTE PTR [edi-0x26]
  4173de:	mov    ah,0xe1
  4173e0:	imul   esi,DWORD PTR [eax+edx*1],0x9d1feae6
  4173e7:	leave  
  4173e8:	(bad)  
  4173e9:	sahf   
  4173ea:	xor    eax,0x35515012
  4173ef:	mov    esi,0x819d410a
  4173f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f5:	or     al,0xce
  4173f7:	jno    0x417447
  4173f9:	pop    ss
  4173fa:	pop    esp
  4173fb:	xchg   BYTE PTR [eax],cl
  4173fd:	mov    ecx,0x5e28efe0
  417402:	in     al,0x72
  417404:	mov    ecx,DWORD PTR [esi+0x43]
  417407:	aaa    
  417408:	out    dx,eax
  417409:	(bad)  
  41740a:	iret   
  41740b:	retf   
  41740c:	inc    ebp
  41740d:	stc    
  41740e:	xchg   DWORD PTR [edi+0x6a652de4],esp
  417414:	xor    dh,bl
  417416:	bound  eax,QWORD PTR [edi-0x6f]
  417419:	cmp    eax,0xd12f7805
  41741e:	push   ecx
  41741f:	cli    
  417420:	mul    BYTE PTR [ebx+0x3d681699]
  417426:	sar    BYTE PTR [ecx],0x13
  417429:	jb     0x417478
  41742b:	(bad)  
  41742c:	dec    edi
  41742d:	scas   eax,DWORD PTR es:[edi]
  41742e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742f:	jns    0x41742e
  417431:	mov    BYTE PTR [edx+0x1b87a15a],ah
  417437:	mov    ecx,DWORD PTR [ebx]
  417439:	jns    0x417434
  41743b:	dec    ecx
  41743c:	xor    edi,DWORD PTR [eax-0x13]
  41743f:	dec    esp
  417440:	adc    al,0x96
  417442:	xlat   BYTE PTR ds:[ebx]
  417443:	cs popf 
  417445:	push   eax
  417446:	cmp    dh,dl
  417448:	adc    ch,BYTE PTR [esi+ecx*1+0x1b]
  41744c:	cmp    bh,BYTE PTR [esi]
  41744e:	clc    
  41744f:	dec    esp
  417450:	sub    DWORD PTR [edx+edx*4+0x3e91229c],eax
  417457:	xor    al,0xf7
  417459:	push   esp
  41745a:	or     eax,0x6284b0bf
  41745f:	mov    ch,0x70
  417461:	jae    0x41747b
  417463:	xor    dl,BYTE PTR [esi]
  417465:	ins    BYTE PTR es:[edi],dx
  417466:	outs   dx,BYTE PTR ds:[esi]
  417467:	repnz mov ds:0xf5b5dac0,al
  41746d:	add    al,0xf3
  41746f:	dec    esi
  417470:	stos   DWORD PTR es:[edi],eax
  417471:	dec    edi
  417472:	jno    0x4174f1
  417474:	pop    ds
  417475:	ss je  0x417416
  417478:	pop    esp
  417479:	xchg   ebx,eax
  41747a:	mov    al,ds:0x86dcef2
  41747f:	sbb    BYTE PTR [ebx+0x50656015],dh
  417485:	and    eax,0x36704ecb
  41748a:	mov    eax,ds:0x7e90efbf
  41748f:	mov    al,0x7f
  417491:	or     ecx,esp
  417493:	mov    bl,0x15
  417495:	push   0x9687118f
  41749a:	push   0xffffffdf
  41749c:	loop   0x4174ca
  41749e:	rcl    DWORD PTR [ebx+0xe361c26],0x60
  4174a5:	stc    
  4174a6:	cdq    
  4174a7:	cmp    bh,BYTE PTR [ebp+0x179a099b]
  4174ad:	loop   0x41745d
  4174af:	pop    ds
  4174b0:	push   ebx
  4174b1:	mov    eax,0x1b3ba02e
  4174b6:	sbb    cl,BYTE PTR [esi+0x56bc0923]
  4174bc:	ret    
  4174bd:	dec    ebp
  4174be:	mov    ebx,0x815eea7
  4174c3:	std    
  4174c4:	dec    DWORD PTR [ebp+0x67]
  4174c7:	jmp    0xe6d11b79
  4174cc:	les    eax,FWORD PTR [edi-0x28fe916d]
  4174d2:	push   eax
  4174d3:	arpl   WORD PTR [edi-0x766de231],bx
  4174d9:	push   ebp
  4174da:	mov    ebx,esi
  4174dc:	ins    DWORD PTR es:[edi],dx
  4174dd:	pop    edi
  4174de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174df:	mov    ds:0xa6ea58b,al
  4174e4:	mov    bh,0x4d
  4174e6:	aaa    
  4174e7:	ins    BYTE PTR es:[edi],dx
  4174e8:	add    BYTE PTR [ebp+0xb4c94ba],bh
  4174ee:	ja     0x4174fc
  4174f0:	out    0xd4,al
  4174f2:	inc    esi
  4174f3:	adc    eax,DWORD PTR [eax]
  4174f5:	cli    
  4174f6:	pop    ebp
  4174f7:	enter  0x8a59,0x24
  4174fb:	js     0x4174ac
  4174fd:	push   0x4f
  4174ff:	jae    0x4174d2
  417501:	sbb    edx,ecx
  417503:	fsub   st,st(6)
  417505:	cs imul ebx,ebx,0xbe44c1f8
  41750c:	mov    ds,WORD PTR [edx+0x34]
  41750f:	cwde   
  417510:	push   ecx
  417511:	adc    eax,0x11a9d1b1
  417516:	inc    esi
  417517:	sbb    ah,BYTE PTR [eax-0x3f]
  41751a:	xor    DWORD PTR [edi-0x55],0xa40140ab
  417521:	sub    BYTE PTR [eax-0x69],dl
  417524:	mov    esi,ebx
  417526:	ror    DWORD PTR [ecx+0x250f7470],0x6e
  41752d:	std    
  41752e:	scas   eax,DWORD PTR es:[edi]
  41752f:	cmp    BYTE PTR [edi+0x7a],0x2b
  417533:	xchg   esp,eax
  417534:	ss in  eax,dx
  417536:	int3   
  417537:	mov    eax,ds:0x65111d7e
  41753c:	call   0x82f94a33
  417541:	fisub  WORD PTR [edx]
  417543:	icebp  
  417544:	ja     0x417535
  417546:	pushf  
  417547:	imul   eax,DWORD PTR [edx],0x5e
  41754a:	push   ecx
  41754b:	dec    esi
  41754c:	xor    eax,0xe79ba128
  417551:	xchg   esp,eax
  417552:	daa    
  417553:	pop    ebp
  417554:	jl     0x4175b0
  417556:	in     eax,dx
  417557:	mov    edx,0x7531533
  41755c:	push   0xffffffa6
  41755e:	sub    ah,BYTE PTR [esp+eiz*4]
  417561:	xor    dl,BYTE PTR [edx-0x214c6f7e]
  417567:	mov    esp,0x6b1c257c
  41756c:	and    eax,0xe375b968
  417571:	pop    es
  417572:	fbld   TBYTE PTR [esi-0x36]
  417575:	mov    ecx,0x8d7b4b4f
  41757a:	aaa    
  41757b:	sub    BYTE PTR ds:0x3cb38935,bh
  417581:	popa   
  417582:	loop   0x417593
  417584:	es sti 
  417586:	add    BYTE PTR [esi-0x297f0323],0xa7
  41758d:	sub    al,0xf1
  41758f:	xchg   BYTE PTR [ebx-0x414ed288],ch
  417595:	add    DWORD PTR [edi-0x12],eax
  417598:	pop    eax
  417599:	xlat   BYTE PTR ds:[ebx]
  41759a:	xchg   esp,eax
  41759b:	push   0xa2d82f8c
  4175a0:	xor    BYTE PTR [eax+eiz*8-0x9d6fbe6],0x0
  4175a8:	dec    ecx
  4175a9:	xchg   ecx,eax
  4175aa:	push   edi
  4175ab:	xor    dl,BYTE PTR [ebx-0x318e44ef]
  4175b1:	sti    
  4175b2:	push   es
  4175b3:	or     bh,ch
  4175b5:	and    al,0x82
  4175b7:	test   al,0x83
  4175b9:	into   
  4175ba:	mov    al,0x75
  4175bc:	xchg   esi,eax
  4175bd:	ficomp DWORD PTR ds:0xfeca3b02
  4175c3:	sub    eax,0xfe7c2616
  4175c8:	fcomp  DWORD PTR [ebp+0x69]
  4175cb:	inc    esp
  4175cc:	ret    0x3de9
  4175cf:	call   0xf057:0xe38741b0
  4175d6:	fiadd  WORD PTR [eax+eax*1+0x55]
  4175da:	arpl   WORD PTR [ecx-0x72700341],bx
  4175e0:	inc    ecx
  4175e1:	test   al,0xda
  4175e3:	fst    QWORD PTR [edi]
  4175e5:	pop    esi
  4175e6:	icebp  
  4175e7:	push   eax
  4175e8:	xor    BYTE PTR [eax-0x31],0xdf
  4175ec:	mov    dh,0x1a
  4175ee:	mov    BYTE PTR [ebx+0x6b],dl
  4175f1:	adc    DWORD PTR [ebp-0x3d],eax
  4175f4:	push   ds
  4175f5:	daa    
  4175f6:	dec    esp
  4175f7:	js     0x41764d
  4175f9:	sahf   
  4175fa:	(bad)  
  4175fb:	and    DWORD PTR ds:0x7529f3cb,ebp
  417601:	mov    dh,0x0
  417603:	shl    BYTE PTR [esi-0x31],1
  417606:	sbb    edi,ebx
  417608:	loopne 0x417634
  41760a:	addr16 out dx,eax
  41760c:	in     al,0xaf
  41760e:	sub    bl,al
  417610:	xchg   DWORD PTR [ecx-0x6],edi
  417613:	mov    eax,ds:0xaad76e16
  417618:	mov    ds:0x9a374b0f,al
  41761d:	cmp    eax,0x1d900212
  417622:	push   0x32
  417624:	inc    ecx
  417625:	add    DWORD PTR [eax+eiz*2-0x77],ecx
  417629:	and    DWORD PTR [ecx],0x40
  41762c:	stos   DWORD PTR es:[edi],eax
  41762d:	mov    esi,ecx
  41762f:	xchg   edx,eax
  417630:	and    ah,BYTE PTR [ebp+0x30]
  417633:	int    0x36
  417635:	imul   esi,esp,0x683ab06a
  41763b:	retf   
  41763c:	sub    eax,0xc114e160
  417641:	fs loop 0x41766b
  417644:	xor    eax,0x1a737fb
  417649:	les    ebx,FWORD PTR [edi]
  41764b:	call   0xb85decbf
  417650:	imul   ecx,DWORD PTR [ecx],0x2a
  417653:	mov    bh,0xbb
  417655:	lods   eax,DWORD PTR ds:[esi]
  417656:	adc    dl,ah
  417658:	xchg   ebx,eax
  417659:	test   DWORD PTR [esi-0x5f3b90f6],ebx
  41765f:	push   ebx
  417660:	rcl    DWORD PTR [ebx],1
  417662:	push   edi
  417663:	es mov ch,0xd7
  417666:	ins    BYTE PTR es:[edi],dx
  417667:	aad    0x9
  417669:	loopne 0x4175fb
  41766b:	popa   
  41766c:	retf   
  41766d:	xchg   edi,eax
  41766e:	add    BYTE PTR [edx-0x6a],dh
  417671:	jmp    0x41b4:0x497f995d
  417678:	in     eax,0xa1
  41767a:	test   BYTE PTR [ecx],ah
  41767c:	push   0xb8d7fd2a
  417681:	inc    ecx
  417682:	sar    DWORD PTR [ebx-0x3186e555],1
  417688:	repnz mov dl,0x8b
  41768b:	and    bh,BYTE PTR [edx+0x475ad79e]
  417691:	pop    ecx
  417692:	pushf  
  417693:	repnz push eax
  417695:	add    BYTE PTR ds:0xba4e920a,al
  41769b:	loopne 0x417653
  41769d:	mov    ch,0x15
  41769f:	xchg   ecx,eax
  4176a0:	mov    al,ds:0x35799f78
  4176a5:	int    0x88
  4176a7:	mov    cl,0xc9
  4176a9:	popa   
  4176aa:	xor    esp,eax
  4176ac:	icebp  
  4176ad:	into   
  4176ae:	in     al,0x6e
  4176b0:	sbb    al,0x83
  4176b2:	lods   al,BYTE PTR ds:[esi]
  4176b3:	mov    ebp,0xd0b39eed
  4176b8:	and    eax,0xc201729b
  4176bd:	xchg   DWORD PTR [ecx+ecx*2],eax
  4176c0:	out    0xb5,al
  4176c2:	cmp    eax,edi
  4176c4:	loope  0x417715
  4176c6:	xor    BYTE PTR ss:[esi+eax*8],cl
  4176ca:	add    edi,esp
  4176cc:	je     0x4176c5
  4176ce:	xchg   edx,edx
  4176d0:	call   0xfbd4:0x1a90b804
  4176d7:	dec    eax
  4176d8:	mul    BYTE PTR [esi]
  4176da:	or     bl,dl
  4176dc:	repz cdq 
  4176de:	jle    0x41772c
  4176e0:	pmulhuw mm4,QWORD PTR [ebx+ecx*2-0x7fc8e9a3]
  4176e8:	scas   al,BYTE PTR es:[edi]
  4176e9:	rol    ecx,0xdc
  4176ec:	mov    dl,BYTE PTR [edx+0x10f7800c]
  4176f2:	dec    edi
  4176f3:	(bad)  
  4176f4:	out    0x11,eax
  4176f6:	and    al,0x76
  4176f8:	pop    ebx
  4176f9:	jg     0x417758
  4176fb:	scas   al,BYTE PTR es:[edi]
  4176fc:	add    eax,0xe88b5201
  417701:	push   esp
  417702:	sti    
  417703:	cmp    eax,0xab0cd7c8
  417708:	jb     0x4176de
  41770a:	aaa    
  41770b:	cmp    edx,DWORD PTR [ecx+edx*1+0x42]
  41770f:	inc    eax
  417710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417711:	xchg   edx,eax
  417712:	shr    BYTE PTR [ecx+0x39ab2110],1
  417718:	retf   
  417719:	add    BYTE PTR [ebx+0x67195994],ah
  41771f:	or     esi,DWORD PTR [ebx+esi*4]
  417722:	xor    al,0xdc
  417724:	inc    esp
  417725:	inc    esp
  417726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417727:	cmp    eax,0xe4ca9ae4
  41772c:	jl     0x4176bb
  41772e:	mov    esi,0xb8aa7c7b
  417733:	pop    ecx
  417734:	out    0xe3,eax
  417736:	iret   
  417737:	jno    0x41772e
  417739:	push   ebx
  41773a:	adc    DWORD PTR ds:0x3e076ef2,ecx
  417740:	call   0x6ab382a8
  417745:	or     DWORD PTR [ecx],0x11
  417748:	jno    0x41777d
  41774a:	rcr    ch,cl
  41774c:	xor    DWORD PTR [ebp+0x3e66412c],edi
  417752:	mov    cl,0xce
  417754:	call   0xff74:0x7408a050
  41775b:	jbe    0x417798
  41775d:	push   ebp
  41775e:	loopne 0x417724
  417760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417761:	test   al,0xca
  417763:	pop    ss
  417764:	fistp  QWORD PTR [ecx]
  417766:	jns    0x4176fc
  417768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417769:	ins    DWORD PTR es:[edi],dx
  41776a:	stc    
  41776b:	mov    ebx,DWORD PTR [esi]
  41776d:	jmp    0xfc9f:0x151af8ba
  417774:	enter  0xc24d,0xd5
  417778:	and    eax,0x8b9a3992
  41777d:	mov    esp,0xcace0da5
  417782:	pop    ds
  417783:	cmc    
  417784:	pcmpgtb mm3,QWORD PTR [ecx-0x604ec47]
  41778b:	imul   edx,DWORD PTR [ecx+0x50],0xffffff8e
  41778f:	rcr    BYTE PTR [edx+edx*8-0x51e4494a],cl
  417796:	sbb    BYTE PTR [ebx-0x1a],cl
  417799:	push   0x34
  41779b:	loope  0x417801
  41779d:	ret    0xba1d
  4177a0:	fsub   st,st(6)
  4177a2:	fsubr  DWORD PTR [ecx]
  4177a4:	scas   al,BYTE PTR es:[edi]
  4177a5:	fcom   DWORD PTR [ecx+0x53]
  4177a8:	pop    ebx
  4177a9:	cli    
  4177aa:	pop    eax
  4177ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ac:	sbb    eax,0x6901a8f1
  4177b1:	jo     0x4177c7
  4177b3:	dec    bx
  4177b5:	xchg   DWORD PTR [edi+eiz*4],eax
  4177b8:	xchg   BYTE PTR [ecx-0x46413751],bh
  4177be:	cmp    DWORD PTR [eax+0x7b36069],ebx
  4177c4:	add    esp,DWORD PTR [edi-0x12dc1fdd]
  4177ca:	lods   al,BYTE PTR ds:[esi]
  4177cb:	xor    dh,BYTE PTR [ebp+0x5e]
  4177ce:	shl    DWORD PTR [esi-0x3cf94c0f],cl
  4177d4:	mov    ecx,0x21bcc1bf
  4177d9:	sbb    eax,0x3797d3c5
  4177de:	aad    0x85
  4177e0:	inc    edi
  4177e1:	outs   dx,BYTE PTR ds:[esi]
  4177e2:	pop    ebp
  4177e3:	ins    BYTE PTR es:[edi],dx
  4177e4:	or     BYTE PTR [ecx+0x3b],dl
  4177e7:	fsub   QWORD PTR [esi]
  4177e9:	(bad)  
  4177ea:	adc    BYTE PTR [eax+0x37],0x76
  4177ee:	push   0x9e85a85d
  4177f3:	jbe    0x41778b
  4177f5:	dec    edi
  4177f6:	fnstsw WORD PTR [esi+ebx*1-0x2e]
  4177fa:	adc    eax,0x2967252e
  4177ff:	add    BYTE PTR [ebp-0x50],0x57
  417803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417804:	xchg   ecx,eax
  417805:	das    
  417806:	add    esi,DWORD PTR [edx-0x4b]
  417809:	push   ecx
  41780a:	adc    al,0xa1
  41780c:	push   eax
  41780d:	adc    al,0x46
  41780f:	(bad)  
  417810:	cwde   
  417811:	sbb    esi,DWORD PTR [edx+0x7e3d2e04]
  417817:	sbb    DWORD PTR [edx+edi*2+0x2480a16e],edi
  41781e:	shr    bh,0xa3
  417821:	retf   0x5757
  417824:	scas   al,BYTE PTR es:[edi]
  417825:	loop   0x417803
  417827:	out    0x7f,al
  417829:	dec    esi
  41782a:	dec    ecx
  41782b:	pop    ebp
  41782c:	loopne 0x41780d
  41782e:	jb     0x4178af
  417830:	and    BYTE PTR [ecx-0x28140f64],ch
  417836:	jb     0x4177bd
  417838:	or     al,0x69
  41783a:	iret   
  41783b:	mov    dl,0x12
  41783d:	shl    DWORD PTR [edx-0x7cfe94a1],cl
  417843:	dec    esp
  417844:	xlat   BYTE PTR ds:[ebx]
  417845:	out    dx,al
  417846:	xor    DWORD PTR [edi],esi
  417848:	ins    BYTE PTR es:[edi],dx
  417849:	push   es
  41784a:	fsub   st(4),st
  41784c:	js     0x41788c
  41784e:	pop    esi
  41784f:	out    0x9e,al
  417851:	fs out dx,al
  417853:	or     bh,ch
  417855:	popf   
  417856:	or     al,0x99
  417858:	cmp    DWORD PTR [edx-0x32],edi
  41785b:	mov    BYTE PTR [edx-0x7bdd34ef],bl
  417861:	sub    dl,dh
  417863:	and    al,0x7f
  417865:	dec    edi
  417866:	xor    esi,edx
  417868:	jecxz  0x417839
  41786a:	mov    edx,0x8b7fcc1f
  41786f:	es cld 
  417871:	aas    
  417872:	jnp    0x417859
  417874:	loopne 0x41781b
  417876:	mov    edx,0xbec94085
  41787b:	les    esp,FWORD PTR [ebx+esi*8-0x17d2ca85]
  417882:	mov    edi,DWORD PTR [ecx+edi*2]
  417885:	jecxz  0x41781c
  417887:	mov    ?,WORD PTR [ecx+0x5a61f871]
  41788d:	dec    esp
  41788e:	ss push es
  417890:	dec    esi
  417891:	xchg   edi,eax
  417892:	cmp    BYTE PTR [esi],bh
  417894:	retf   0xb94f
  417897:	push   ss
  417898:	retf   0x486e
  41789b:	mov    BYTE PTR [ebp-0x11e30058],ah
  4178a1:	jp     0x4178ba
  4178a3:	pop    edi
  4178a4:	jle    0x41787a
  4178a6:	(bad)  
  4178a7:	xchg   ecx,eax
  4178a9:	addr16 mov dh,0xf8
  4178ac:	sub    al,0xd8
  4178ae:	jecxz  0x417902
  4178b0:	mov    ds:0xe42e5c68,eax
  4178b5:	push   ebp
  4178b6:	sub    edi,ebx
  4178b8:	lods   al,BYTE PTR ds:[esi]
  4178b9:	cwde   
  4178ba:	js     0x417875
  4178bc:	(bad)  
  4178bd:	sbb    BYTE PTR [ecx+0x3dc10b29],dl
  4178c3:	aad    0x3e
  4178c5:	xor    eax,0x7c653cea
  4178ca:	jecxz  0x41786d
  4178cc:	lock mov edi,0x1479fd29
  4178d2:	inc    ebx
  4178d3:	imul   edi,DWORD PTR [eax+0x5b625b18],0xe0bb40d8
  4178dd:	aam    0x51
  4178df:	pusha  
  4178e0:	fnsave [edx+eax*2]
  4178e3:	stc    
  4178e4:	dec    esi
  4178e5:	xor    ebp,0x326e10d
  4178eb:	add    BYTE PTR [ecx],bh
  4178ed:	and    eax,0x323118a5
  4178f2:	icebp  
  4178f3:	add    al,0x85
  4178f5:	mov    eax,0xb04d65ef
  4178fa:	adc    al,0x78
  4178fc:	arpl   cx,bp
  4178fe:	aad    0x4f
  417900:	add    edi,DWORD PTR [eax]
  417902:	repz jne 0x417908
  417905:	les    esi,FWORD PTR [eax]
  417907:	cmp    DWORD PTR [ebp-0x54],eax
  41790a:	repz sbb eax,0x5ecb1a90
  417910:	pushf  
  417911:	outs   dx,BYTE PTR ds:[esi]
  417912:	adc    eax,0xa7ef9eb3
  417917:	test   BYTE PTR [ecx],bl
  417919:	xor    al,ah
  41791b:	inc    esp
  41791c:	int3   
  41791d:	test   eax,0x205279ac
  417922:	mov    DWORD PTR [edi+0x76e3907b],eax
  417928:	lock inc edx
  41792a:	mov    esi,0xeae54e7f
  41792f:	cdq    
  417930:	retf   
  417931:	pop    es
  417932:	pop    edx
  417933:	(bad)  
  417934:	cmp    BYTE PTR [ebx],ch
  417936:	lea    esi,[ebp-0x3c2a626b]
  41793c:	out    dx,al
  41793d:	pusha  
  41793e:	jmp    0x8e9de5b7
  417943:	dec    edx
  417944:	xchg   DWORD PTR [ecx],esp
  417946:	push   cs
  417947:	push   ds
  417948:	mov    ebp,esp
  41794a:	adc    DWORD PTR [edi-0x2b],ebp
  41794d:	and    BYTE PTR es:[esi-0x474084cb],0x3d
  417955:	inc    ecx
  417956:	push   ss
  417957:	sahf   
  417958:	ret    0xed6f
  41795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41795c:	sbb    esi,DWORD PTR [edx+0xd]
  41795f:	dec    ebp
  417960:	pop    edi
  417961:	mov    ch,0x32
  417963:	fwait
  417964:	ja     0x4179dc
  417966:	ds jo  0x417966
  417969:	test   DWORD PTR [ebx+0x31251712],esp
  41796f:	out    0x3b,al
  417971:	pop    eax
  417972:	test   al,0xc
  417974:	fidiv  DWORD PTR [eax]
  417976:	retf   
  417977:	(bad)  
  417978:	and    DWORD PTR [edi+esi*8-0x535ffb7e],ecx
  41797f:	cmp    eax,0xd4c4c1dd
  417984:	or     eax,esi
  417986:	sub    eax,0x43499fa4
  41798b:	rcl    BYTE PTR [ecx+0x7f37aec4],cl
  417991:	mov    ch,0x1
  417993:	mov    dl,bh
  417995:	stc    
  417996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417997:	popa   
  417998:	clc    
  417999:	test   DWORD PTR [ecx],ecx
  41799b:	mov    al,ds:0x3b7b5fe6
  4179a0:	push   cs
  4179a1:	fimul  WORD PTR fs:[edi]
  4179a4:	xor    eax,0x4ada6586
  4179a9:	dec    edi
  4179aa:	(bad)  
  4179ab:	stos   BYTE PTR es:[edi],al
  4179ac:	jmp    0x4179c1
  4179ae:	mov    esp,eax
  4179b0:	mov    edx,0x40409f74
  4179b5:	shl    BYTE PTR [edx],1
  4179b7:	jbe    0x417969
  4179b9:	cmovle ebp,DWORD PTR [ecx-0x711cfb93]
  4179c0:	sub    bl,BYTE PTR [ebx]
  4179c2:	pop    ds
  4179c3:	xchg   ebp,eax
  4179c4:	sbb    al,0x64
  4179c6:	pslld  mm3,QWORD PTR [eax+0x2e]
  4179ca:	push   edx
  4179cb:	sub    ebp,DWORD PTR [edi+edx*8-0x29a69267]
  4179d2:	lds    edi,FWORD PTR [edx+0x1f536248]
  4179d8:	add    dl,BYTE PTR [edx+0x1c]
  4179db:	or     bh,BYTE PTR [edi+0x3d749a7c]
  4179e1:	xlat   BYTE PTR ds:[ebx]
  4179e2:	xor    BYTE PTR [esi+0x77ad520d],al
  4179e8:	adc    eax,0xa56c8ae8
  4179ed:	popa   
  4179ee:	adc    BYTE PTR [esi+0x4ff208d7],bl
  4179f4:	pop    esp
  4179f5:	jg     0x417a19
  4179f7:	int    0x5b
  4179f9:	jo     0x4179fa
  4179fb:	pop    ecx
  4179fc:	fldenv [eax]
  4179fe:	loopne 0x4179d2
  417a00:	jl     0x4179dd
  417a02:	pop    ss
  417a03:	scas   eax,DWORD PTR es:[edi]
  417a04:	fild   DWORD PTR [ecx-0x39475214]
  417a0a:	pop    ds
  417a0b:	mov    dl,0x55
  417a0d:	data16 cs stc 
  417a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a11:	jo     0x417a09
  417a13:	add    ah,dl
  417a15:	adc    al,0x7d
  417a17:	pop    ds
  417a18:	mov    ah,0xc4
  417a1a:	fwait
  417a1b:	(bad)  
  417a1c:	in     eax,dx
  417a1d:	test   DWORD PTR [ebx-0x4333492d],eax
  417a23:	mov    dh,0xda
  417a25:	dec    ebx
  417a26:	lea    edi,[eax+0x14]
  417a29:	xor    DWORD PTR [ecx],0x4c06954
  417a2f:	popa   
  417a30:	mov    bh,0xe6
  417a32:	pop    ebx
  417a33:	fucom  st(2)
  417a35:	push   eax
  417a36:	(bad)  
  417a37:	sub    al,0xb8
  417a39:	push   edi
  417a3a:	push   edx
  417a3b:	cs push ds
  417a3d:	lds    edi,FWORD PTR [eax-0x523340b7]
  417a43:	cmp    DWORD PTR [esi+eiz*4],esp
  417a46:	shr    DWORD PTR [ecx-0x316707ed],1
  417a4c:	clc    
  417a4d:	push   ebx
  417a4e:	mov    dl,0xb3
  417a50:	pusha  
  417a51:	cmp    al,0x9
  417a53:	clc    
  417a54:	mov    bl,0x3b
  417a56:	(bad)  
  417a57:	cs push 0x9d24a7be
  417a5d:	shl    cl,cl
  417a5f:	pop    es
  417a60:	jp     0x417a8e
  417a62:	adc    cl,BYTE PTR [edx-0x66]
  417a65:	or     dh,cl
  417a67:	mov    bh,bh
  417a69:	(bad)  
  417a6b:	cmp    eax,0xa128ff4f
  417a70:	pop    edi
  417a71:	ror    DWORD PTR [eax+0x43ce7509],0xf8
  417a78:	les    ecx,FWORD PTR [ecx+0x23621891]
  417a7e:	and    eax,0x2023574
  417a83:	js     0x417a51
  417a85:	stos   BYTE PTR es:[edi],al
  417a86:	jle    0x417a8c
  417a88:	pop    esp
  417a89:	sbb    ecx,eax
  417a8b:	adc    eax,0x99060ad7
  417a90:	adc    eax,0xd6742e8d
  417a95:	nop
  417a96:	jg     0x417b17
  417a98:	ret    0xa044
  417a9b:	lds    ecx,FWORD PTR [ebp-0x705e90e7]
  417aa1:	inc    sp
  417aa3:	or     al,0xf0
  417aa5:	(bad)  [edx+0x33]
  417aa8:	cmp    DWORD PTR [esi+ebp*4],eax
  417aab:	setno  BYTE PTR [bx+si-0x48a9]
  417ab1:	pop    eax
  417ab2:	cld    
  417ab3:	fld    DWORD PTR ds:0xfe891435
  417ab9:	scas   eax,DWORD PTR es:[edi]
  417aba:	mov    ebx,0x71dcc281
  417abf:	fistp  DWORD PTR [edx]
  417ac1:	cmp    al,BYTE PTR [eax]
  417ac3:	mov    al,0xf3
  417ac5:	or     BYTE PTR [edx+0x30],al
  417ac8:	js     0x417b13
  417aca:	mov    bl,0x67
  417acc:	mov    al,ds:0xebe18f50
  417ad1:	and    al,0xe2
  417ad3:	sub    BYTE PTR [edx],dh
  417ad5:	jns    0x417aea
  417ad7:	xlat   BYTE PTR ds:[ebx]
  417ad8:	xor    eax,0x35a3da47
  417add:	adc    dh,BYTE PTR [edx+eiz*8-0x48]
  417ae1:	and    al,0x64
  417ae3:	cld    
  417ae4:	ds cmp cl,bl
  417ae7:	cmp    eax,0x7655e120
  417aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aed:	unpcklps xmm7,XMMWORD PTR [ebp-0x80]
  417af1:	ret    
  417af2:	outs   dx,BYTE PTR ds:[esi]
  417af3:	mov    eax,0xff3b02e8
  417af8:	in     al,0x6c
  417afa:	into   
  417afb:	cmovbe ebx,DWORD PTR [ecx]
  417afe:	or     eax,0x3bdedf9d
  417b03:	fld    QWORD PTR [ebx+0x1b]
  417b06:	mov    ds:0x742ed785,eax
  417b0b:	dec    esi
  417b0c:	lea    eax,[ecx+edi*4]
  417b0f:	(bad)  
  417b10:	jmp    0x417b90
  417b12:	jg     0x417ac6
  417b14:	push   eax
  417b15:	cmovb  esp,DWORD PTR [edx+ecx*4]
  417b19:	test   edx,0x31313552
  417b1f:	andnpd xmm6,XMMWORD PTR cs:[ebx+0x2bb2397c]
  417b28:	mov    al,ds:0xecdd5656
  417b2d:	cwde   
  417b2e:	scas   eax,DWORD PTR es:[edi]
  417b2f:	inc    ebp
  417b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b31:	and    BYTE PTR [ecx+0x14],ch
  417b34:	fucomip st,st(6)
  417b36:	jmp    0x417ac5
  417b38:	mov    bh,BYTE PTR [ebp+0x10b96634]
  417b3e:	out    dx,al
  417b3f:	(bad)  
  417b40:	popf   
  417b41:	mov    dl,0x95
  417b43:	and    cl,BYTE PTR [edi+0x1890a2c8]
  417b49:	inc    eax
  417b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4b:	mov    bh,0xa2
  417b4d:	jmp    0x417ad2
  417b4f:	shr    BYTE PTR [edi+0x1a],0x7f
  417b53:	aaa    
  417b54:	or     esi,DWORD PTR [edx]
  417b56:	pop    ecx
  417b57:	push   ebp
  417b58:	or     edx,0x361df643
  417b5e:	lods   al,BYTE PTR ds:[si]
  417b60:	pop    eax
  417b61:	sub    DWORD PTR [ecx-0x3f],ecx
  417b64:	push   0xffffffeb
  417b66:	out    0xa5,al
  417b68:	push   ebx
  417b69:	dec    esi
  417b6a:	fmul   st(2),st
  417b6d:	push   ebp
  417b6e:	or     esi,DWORD PTR [eax-0x720e4848]
  417b74:	js     0x417bbe
  417b76:	jno    0x417b8a
  417b78:	and    BYTE PTR [ecx+0x49439e6],dl
  417b7e:	jne    0x417b3f
  417b80:	pop    edi
  417b81:	jno    0x417bc7
  417b83:	mov    esi,0x5b4e89d2
  417b88:	mov    ds:0x244974aa,eax
  417b8d:	cwde   
  417b8e:	lock mov bl,0x17
  417b91:	shl    BYTE PTR [ebp-0x76],1
  417b94:	outs   dx,BYTE PTR ds:[esi]
  417b95:	and    al,0xd
  417b97:	mov    dh,0x2f
  417b99:	in     al,dx
  417b9a:	stc    
  417b9b:	dec    esp
  417b9c:	mov    ds:0xd9d8a6ed,al
  417ba1:	lds    edi,FWORD PTR ss:[eax+0x6a]
  417ba5:	int    0x7a
  417ba7:	or     al,0x73
  417ba9:	add    BYTE PTR [ecx-0x8dff5a2],ah
  417baf:	adc    esi,DWORD PTR [ebx+0x7d]
  417bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb3:	mov    eax,0xea4d51cc
  417bb8:	mov    ebp,0x3eeab67d
  417bbd:	imul   esi,DWORD PTR [esi-0x566ec360],0xfffffffa
  417bc4:	mov    cl,0x9e
  417bc6:	and    BYTE PTR [esp+esi*1+0x72],cl
  417bca:	scas   eax,DWORD PTR es:[edi]
  417bcb:	out    dx,eax
  417bcc:	pop    ds
  417bcd:	stc    
  417bce:	je     0x417b9f
  417bd0:	cmp    bh,bh
  417bd2:	lea    ebx,[ecx+ebx*1-0x7f]
  417bd6:	ficomp DWORD PTR [ebp+0x18]
  417bd9:	fmulp  st(5),st
  417bdb:	sar    BYTE PTR [ebx],1
  417bdd:	out    dx,eax
  417bde:	adc    al,0x6e
  417be0:	jmp    0x882b48ea
  417be5:	add    edx,DWORD PTR [esp+eax*1-0x3b70ad1d]
  417bec:	call   0x56fe:0xb6781c8e
  417bf3:	les    eax,FWORD PTR [esi-0x5b]
  417bf6:	scas   eax,DWORD PTR es:[edi]
  417bf7:	pop    esi
  417bf8:	mov    al,ds:0xdaf40582
  417bfd:	bound  eax,QWORD PTR [esi]
  417bff:	mov    ebx,0xac76064f
  417c04:	cwde   
  417c05:	cmp    eax,edx
  417c07:	lds    eax,FWORD PTR ds:0xf5ce4a82
  417c0d:	fsubr  st,st(5)
  417c0f:	test   eax,0x2a843a9c
  417c14:	lods   eax,DWORD PTR ds:[esi]
  417c15:	icebp  
  417c16:	pusha  
  417c17:	xor    BYTE PTR [edi-0x73318f5a],ch
  417c1d:	ja     0x417c56
  417c1f:	(bad)  
  417c20:	cwde   
  417c21:	inc    eax
  417c22:	je     0x417c39
  417c24:	(bad)  
  417c25:	jmp    0x80bd9d7b
  417c2a:	push   ss
  417c2b:	push   cs
  417c2c:	sbb    edx,esp
  417c2e:	or     al,0xa4
  417c30:	leave  
  417c31:	retf   0xa96
  417c34:	int    0x73
  417c36:	inc    edi
  417c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c38:	push   ecx
  417c39:	sub    esi,edx
  417c3b:	add    BYTE PTR [ebx+edx*4],ah
  417c3e:	test   al,0x48
  417c40:	loop   0x417c69
  417c42:	sub    al,0xe3
  417c44:	mov    esi,0x12340615
  417c49:	in     eax,0xfd
  417c4b:	outs   dx,BYTE PTR ds:[esi]
  417c4c:	xor    cl,bh
  417c4e:	xchg   ebx,eax
  417c4f:	mov    esp,DWORD PTR [edx-0x1cde46e1]
  417c55:	int3   
  417c56:	cmp    al,0xbe
  417c59:	mov    bh,BYTE PTR [edx-0x1a]
  417c5c:	bound  ebp,QWORD PTR [edi-0x61]
  417c5f:	inc    ebp
  417c60:	aam    0x8f
  417c62:	jl     0x417cc8
  417c64:	pop    ebx
  417c65:	mov    dh,0x91
  417c67:	mov    dh,0xb
  417c69:	lahf   
  417c6a:	jmp    0x745f48ec
  417c6f:	cmp    eax,0x64f26a07
  417c74:	pop    es
  417c75:	(bad)  
  417c76:	jmp    0x8fc5:0x713658c6
  417c7d:	shr    BYTE PTR [edx],cl
  417c7f:	xchg   ecx,eax
  417c80:	xchg   ecx,eax
  417c81:	aaa    
  417c82:	and    dh,BYTE PTR [edx]
  417c84:	pushf  
  417c85:	aas    
  417c86:	imul   edi,DWORD PTR [eax],0x21c99b18
  417c8c:	jnp    0x417c94
  417c8e:	push   esp
  417c8f:	push   ecx
  417c90:	in     al,0xdf
  417c92:	fs push cs
  417c94:	mov    eax,0xb4f31a9b
  417c99:	adc    eax,0xe4790eac
  417c9e:	add    ebx,DWORD PTR [esi+0x2f]
  417ca1:	push   esi
  417ca2:	xor    ecx,DWORD PTR [ebx-0x75]
  417ca5:	aaa    
  417ca6:	xchg   DWORD PTR [edi],ecx
  417ca8:	mov    BYTE PTR [ebp+0x75a9e30e],bh
  417cae:	push   cs
  417caf:	jno    0x417cca
  417cb1:	jg     0x417c58
  417cb3:	out    dx,al
  417cb4:	leave  
  417cb5:	pop    edx
  417cb6:	mov    WORD PTR [esi+0x5bae1780],gs
  417cbc:	stos   DWORD PTR es:[edi],eax
  417cbd:	test   DWORD PTR [edx+0x4a],0x3c6864ee
  417cc4:	call   0xd3d1:0xa38c1060
  417ccb:	sbb    BYTE PTR [esi],dl
  417ccd:	sub    al,0xfd
  417ccf:	xchg   ecx,eax
  417cd0:	push   es
  417cd1:	xchg   edx,eax
  417cd2:	sub    esi,DWORD PTR [ebx-0x3c]
  417cd5:	in     eax,0xe2
  417cd7:	fiadd  WORD PTR [esi-0x16]
  417cda:	pop    esi
  417cdb:	sahf   
  417cdc:	(bad)  
  417cdd:	out    dx,eax
  417cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdf:	ds std 
  417ce1:	stc    
  417ce2:	emms   
  417ce4:	rcl    bh,1
  417ce6:	mov    DWORD PTR ds:0xbd54187e,0xfbd89e14
  417cf0:	xchg   esi,eax
  417cf1:	mov    bh,0x7f
  417cf3:	arpl   WORD PTR gs:[esp+edi*2],cx
  417cf7:	inc    ecx
  417cf8:	fwait
  417cf9:	push   ds
  417cfa:	mov    bl,0x8c
  417cfc:	push   ecx
  417cfd:	icebp  
  417cfe:	sbb    cl,BYTE PTR [ecx+0x69]
  417d01:	mov    esp,0x33aa66c0
  417d06:	dec    ebp
  417d07:	shl    DWORD PTR [esi+esi*1],0x64
  417d0b:	inc    edi
  417d0c:	jb     0x417d1d
  417d0e:	(bad)  
  417d0f:	jns    0x417d41
  417d11:	mov    edi,0xcff9b1b0
  417d16:	or     DWORD PTR [esi],esp
  417d18:	mov    ah,0xc5
  417d1a:	test   al,0x52
  417d1c:	loopne 0x417cb1
  417d1e:	xchg   edx,eax
  417d1f:	ins    BYTE PTR es:[edi],dx
  417d20:	sbb    DWORD PTR [edi+0x4da70f0c],0xffffffa7
  417d27:	scas   eax,DWORD PTR es:[edi]
  417d28:	fisttp WORD PTR [ebx]
  417d2a:	shl    BYTE PTR [ecx],0xca
  417d2d:	mov    ch,0xd5
  417d2f:	mov    ch,0xc0
  417d31:	in     eax,dx
  417d32:	push   esi
  417d33:	or     edi,DWORD PTR [eax]
  417d35:	inc    ebp
  417d36:	push   ecx
  417d37:	mov    bh,0x57
  417d39:	adc    bh,ah
  417d3b:	test   bl,0xb
  417d3e:	or     eax,0x66493187
  417d43:	pop    edx
  417d44:	sub    ebx,DWORD PTR [eax]
  417d46:	pmullw mm6,QWORD PTR [ecx]
  417d49:	push   0xf9efa6b2
  417d4e:	push   0x24
  417d50:	inc    esp
  417d51:	mov    bl,0xa
  417d53:	inc    ebx
  417d54:	xchg   BYTE PTR [ebp+0x16aec280],al
  417d5a:	jg     0x417da0
  417d5c:	and    bl,0x72
  417d5f:	xchg   ecx,eax
  417d60:	pusha  
  417d61:	out    0x70,eax
  417d63:	dec    edi
  417d64:	xlat   BYTE PTR ds:[ebx]
  417d65:	imul   edx,DWORD PTR [ebx],0xffffffb8
  417d68:	out    dx,eax
  417d69:	shl    BYTE PTR [eax-0x35ef999e],0xc2
  417d70:	dec    ecx
  417d71:	outs   dx,BYTE PTR ds:[esi]
  417d72:	adc    ebx,ecx
  417d74:	ret    
  417d75:	jb     0x417d27
  417d77:	ja     0x417d02
  417d79:	sbb    eax,0x275a0abf
  417d7e:	mov    bl,0x6d
  417d80:	imul   eax,ebp,0x5ad135af
  417d86:	cmc    
  417d87:	test   BYTE PTR [eax+0x16],dl
  417d8a:	outs   dx,BYTE PTR ds:[esi]
  417d8b:	in     al,dx
  417d8c:	(bad)  
  417d8d:	aaa    
  417d8e:	inc    ecx
  417d8f:	pop    ds
  417d90:	mov    edx,0xc7aa2a61
  417d95:	mov    BYTE PTR [ecx+0x3],bl
  417d98:	ds sub eax,0x918ad178
  417d9e:	xchg   ebx,eax
  417d9f:	jno    0x417d92
  417da1:	call   0x4875d78
  417da6:	stc    
  417da7:	jmp    0xdda3633f
  417dac:	or     DWORD PTR [ebp*4-0x3dca6471],edi
  417db3:	dec    ebx
  417db4:	out    0xb1,eax
  417db6:	push   es
  417db7:	rcl    BYTE PTR [edx-0x3af8f02f],cl
  417dbd:	sub    al,BYTE PTR [ebx]
  417dbf:	lea    edi,[esi-0x7b]
  417dc2:	int3   
  417dc3:	(bad)  
  417dc5:	mov    al,0x78
  417dc7:	loopne 0x417db9
  417dc9:	xor    DWORD PTR [edx+0x3b70f252],esi
  417dcf:	and    DWORD PTR [ebx+0x4a],edx
  417dd2:	sbb    BYTE PTR [edi],ah
  417dd4:	and    dh,dl
  417dd6:	and    bh,bl
  417dd8:	fs fwait
  417dda:	rcr    DWORD PTR [eax-0x4d],0x64
  417dde:	mov    ch,BYTE PTR [eax]
  417de0:	dec    ebx
  417de1:	rol    DWORD PTR [edi],cl
  417de3:	adc    DWORD PTR [ebx-0x2b0b0fb1],ebx
  417de9:	sbb    edi,DWORD PTR [ebx+0x1131af4e]
  417def:	sar    edx,0xf3
  417df2:	out    dx,al
  417df3:	mov    ds:0xecbcaf7,eax
  417df8:	aas    
  417df9:	jnp    0x417e6a
  417dfb:	add    ch,BYTE PTR [eax+0x41b9a6f2]
  417e01:	aam    0xb5
  417e03:	loope  0x417e54
  417e05:	sub    dl,BYTE PTR [edi-0x252bd110]
  417e0b:	dec    edx
  417e0c:	mov    ds:0x134181fb,eax
  417e11:	aaa    
  417e12:	jle    0x417e05
  417e14:	jbe    0x417e73
  417e16:	lahf   
  417e17:	mov    eax,0xa7900078
  417e1c:	into   
  417e1d:	dec    esp
  417e1e:	mov    ebp,0x4ff7291b
  417e23:	jmp    0xb82b:0x3e628e15
  417e2a:	push   esp
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fstp   DWORD PTR [ebx-0x21ef2ff6]
  417e63:	cmp    BYTE PTR [ebp+0x7a],bh
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e55
  417e6b:	adc    esi,DWORD PTR [esi-0x7c]
  417e6e:	mov    edx,ecx
  417e70:	lods   al,BYTE PTR ds:[esi]
  417e71:	xchg   edi,eax
  417e72:	fcom   DWORD PTR [ecx+0x26]
  417e75:	popa   
  417e76:	add    edx,DWORD PTR [ebx+0x2657e2d5]
  417e7c:	jb     0x417eb3
  417e7e:	cmp    DWORD PTR [edx+eiz*8],ebx
  417e81:	xchg   ebp,eax
  417e82:	or     ah,dl
  417e84:	rol    DWORD PTR [esi+0x68dd3774],0x7d
  417e8b:	out    0x0,eax
  417e8d:	pop    eax
  417e8e:	test   al,0x14
  417e90:	arpl   ax,bp
  417e92:	mov    WORD PTR [edi+0x1673b31a],es
  417e98:	(bad)  [ebx-0x6bef64aa]
  417e9e:	out    0xbf,eax
  417ea0:	cmc    
  417ea1:	lea    esp,[esi-0x6c]
  417ea4:	outs   dx,BYTE PTR ds:[esi]
  417ea5:	pop    edi
  417ea6:	jb     0x417ef2
  417ea8:	retf   0xc08b
  417eab:	daa    
  417eac:	ins    DWORD PTR es:[edi],dx
  417ead:	ins    DWORD PTR es:[edi],dx
  417eae:	or     bh,BYTE PTR [ebx-0x825aabe]
  417eb4:	jno    0x417e49
  417eb6:	out    0xe9,al
  417eb8:	aam    0x63
  417eba:	(bad)  
  417ebb:	out    0x2e,al
  417ebd:	xor    eax,DWORD PTR [ebx+0x50]
  417ec0:	inc    ebp
  417ec1:	xchg   ebx,eax
  417ec2:	dec    eax
  417ec3:	mov    BYTE PTR [edi],dl
  417ec5:	mov    ds:0xf2ffa1f2,eax
  417eca:	mov    al,0xf7
  417ecc:	fst    DWORD PTR [ebx]
  417ece:	stc    
  417ecf:	cs or  al,0x14
  417ed2:	mov    ch,0xcb
  417ed4:	xor    eax,0xb4c73cb8
  417ed9:	(bad)  
  417eda:	in     al,dx
  417edb:	ds inc esp
  417edd:	add    DWORD PTR [ebp-0x683d0fd9],ebx
  417ee3:	test   DWORD PTR [esi],edx
  417ee5:	xor    bh,BYTE PTR ds:0x13048e69
  417eeb:	mov    ds,ebx
  417eed:	cmp    BYTE PTR es:[ebx+ebx*8],cl
  417ef1:	xlat   BYTE PTR ds:[ebx]
  417ef2:	fist   DWORD PTR [eax+0x31]
  417ef5:	sbb    eax,0x6d8cd555
  417efa:	cli    
  417efb:	pop    es
  417efc:	mov    ebx,0xddc6de71
  417f01:	scas   eax,DWORD PTR es:[edi]
  417f02:	ds inc ebp
  417f04:	sub    ah,dh
  417f06:	ins    DWORD PTR es:[edi],dx
  417f07:	and    al,0xf9
  417f09:	mov    cl,0x0
  417f0b:	daa    
  417f0c:	add    bh,bh
  417f0e:	jge    0x417f2b
  417f10:	and    esi,DWORD PTR [eax-0x29231e22]
  417f16:	sub    cl,0x9
  417f19:	cdq    
  417f1a:	cmp    al,0xa6
  417f1c:	adc    esi,DWORD PTR [esi+0x640e8ac2]
  417f22:	ss (bad) 
  417f24:	jbe    0x417ec5
  417f26:	cs in  eax,dx
  417f28:	outs   dx,DWORD PTR ds:[esi]
  417f29:	sbb    eax,0xff4a44bd
  417f2e:	mov    al,ds:0xa01e6da3
  417f33:	scas   eax,DWORD PTR es:[edi]
  417f34:	ins    DWORD PTR es:[edi],dx
  417f35:	push   ebp
  417f36:	or     dh,BYTE PTR [edi+eiz*1+0x1f4f71d5]
  417f3d:	add    esi,DWORD PTR [ecx-0x2b]
  417f40:	cmp    al,0x2f
  417f42:	stc    
  417f43:	push   ecx
  417f44:	add    esi,esi
  417f46:	sbb    al,0xc3
  417f48:	push   0xda494563
  417f4d:	in     eax,0x62
  417f4f:	in     eax,0x67
  417f51:	leave  
  417f52:	cmp    edi,DWORD PTR [eax-0x3e4099d6]
  417f58:	xchg   DWORD PTR [esi-0x5612499e],esp
  417f5e:	lahf   
  417f5f:	out    dx,eax
  417f60:	mov    ebx,0x5a4186f5
  417f65:	mov    bh,0x81
  417f67:	mov    edx,0x6b9c232f
  417f6c:	lods   eax,DWORD PTR fs:[esi]
  417f6e:	mov    dl,0xc9
  417f70:	mov    WORD PTR [edi-0x7576cb00],gs
  417f76:	cmp    BYTE PTR [esi+0x61808137],bl
  417f7c:	test   eax,0x94b54d4d
  417f81:	icebp  
  417f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f83:	sti    
  417f84:	jg     0x417f09
  417f86:	inc    ebx
  417f87:	cmp    dl,BYTE PTR ds:0xc172c3a2
  417f8d:	cmc    
  417f8e:	xchg   ebx,eax
  417f8f:	les    esi,FWORD PTR [eax-0x5c600998]
  417f95:	or     ah,BYTE PTR [ebx]
  417f97:	mov    edi,0x16ec0b50
  417f9c:	out    dx,eax
  417f9d:	test   al,0x18
  417f9f:	xchg   esp,eax
  417fa0:	xlat   BYTE PTR ds:[ebx]
  417fa1:	and    al,0x25
  417fa3:	push   es
  417fa4:	aas    
  417fa5:	mov    esi,0xe8e9f400
  417faa:	(bad)
  417fad:	pop    esi
  417fae:	cwde   
  417faf:	mov    esi,0x28730338
  417fb4:	stc    
  417fb5:	xor    ah,BYTE PTR [eax]
  417fb7:	test   BYTE PTR [edi+esi*8+0x2cec856a],0x21
  417fbf:	dec    ecx
  417fc0:	xchg   BYTE PTR [esi],bh
  417fc2:	add    eax,0x3b7882df
  417fc7:	pop    eax
  417fc8:	xchg   ebx,eax
  417fc9:	sti    
  417fca:	or     al,0xe4
  417fcc:	or     esp,DWORD PTR [ebp+0x19]
  417fcf:	out    dx,eax
  417fd0:	jmp    0xdc1115d7
  417fd5:	inc    ecx
  417fd6:	nop
  417fd7:	xor    eax,0x22eb07a0
  417fdc:	mov    eax,0x12eb92d3
  417fe1:	mov    bh,0x5f
  417fe3:	cmp    bl,bl
  417fe5:	lea    esp,[eax-0x27]
  417fe8:	jmp    0x7908:0x9add8cee
  417fef:	sbb    al,0xb1
  417ff1:	sbb    BYTE PTR [edi-0x1acbdcf0],dh
  417ff7:	mov    eax,0x567b0fd0
  417ffc:	inc    edi
  417ffd:	popf   
  417ffe:	push   0xfffffff3
  418000:	(bad)  
  418001:	popf   
  418002:	mov    bh,0xc2
  418004:	outs   dx,DWORD PTR ds:[esi]
  418005:	pop    ds
  418006:	cmp    ebx,DWORD PTR [eax]
  418008:	retf   
  418009:	dec    esp
  41800a:	sar    BYTE PTR [ebx+0x29],0x8a
  41800e:	xchg   ecx,eax
  41800f:	inc    ebx
  418010:	cwde   
  418011:	and    al,0x5c
  418013:	push   0x92c9e917
  418018:	mov    ebx,0x46426e2a
  41801d:	sub    ah,BYTE PTR ds:0x24d11bf
  418023:	jp     0x418083
  418025:	mov    dh,0x5c
  418027:	xor    ch,al
  418029:	mov    DWORD PTR [edx-0x8],edx
  41802c:	pusha  
  41802d:	outs   dx,DWORD PTR ds:[esi]
  41802e:	sbb    eax,ecx
  418030:	sbb    BYTE PTR [edi-0x2339f0f7],0x75
  418037:	test   dl,ah
  418039:	mov    dh,0xb2
  41803b:	adc    BYTE PTR [edi-0x2a],bl
  41803e:	mov    eax,DWORD PTR ds:0x7c925a94
  418044:	test   edi,esp
  418046:	inc    esp
  418047:	(bad)  
  418048:	or     eax,0x963168b0
  41804d:	test   BYTE PTR ds:0xb4e1c090,al
  418053:	sbb    esi,DWORD PTR [esp+edx*1-0xa]
  418057:	dec    ebx
  418058:	enter  0xcadd,0x7d
  41805c:	(bad)  
  41805d:	cli    
  41805e:	cmp    DWORD PTR [edi+ecx*1-0x65a815d4],0x6e03bb53
  418069:	dec    edx
  41806a:	fwait
  41806b:	les    eax,FWORD PTR [eax]
  41806d:	rcr    DWORD PTR [ebx+0x7c],cl
  418070:	adc    eax,DWORD PTR [ecx+0x5992886]
  418076:	mov    ebx,0xdc7e8da3
  41807b:	ret    0xba9c
  41807e:	loope  0x41801a
  418080:	mov    BYTE PTR [ebx-0x7bf255cd],cl
  418086:	popa   
  418087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418088:	out    dx,al
  418089:	jl     0x4180b2
  41808b:	call   0x857b1e58
  418090:	adc    DWORD PTR [ebx*4+0x491768bc],0xc882a10b
  41809b:	test   cl,0x67
  41809e:	xchg   esp,eax
  41809f:	add    al,0x13
  4180a1:	ds jo  0x4180ee
  4180a4:	mov    DWORD PTR [eax-0x45e2104f],esi
  4180aa:	sbb    BYTE PTR [edi],dl
  4180ac:	cmp    ecx,DWORD PTR [edx+0x56df66b3]
  4180b2:	and    bh,bl
  4180b4:	in     eax,dx
  4180b5:	rcl    DWORD PTR [eax],0x19
  4180b8:	sbb    edi,DWORD PTR [ebp+0x48]
  4180bb:	jl     0x418123
  4180bd:	call   0xe787:0x224d0802
  4180c4:	dec    ebp
  4180c5:	xchg   esi,eax
  4180c6:	inc    ecx
  4180c7:	jp     0x4180b7
  4180c9:	not    DWORD PTR [edi]
  4180cb:	sub    WORD PTR [esi],sp
  4180ce:	lea    esi,[esi*8-0x16ae5f54]
  4180d5:	jb     0x4180fd
  4180d7:	xor    DWORD PTR [edx+eax*8+0x73],edx
  4180db:	outs   dx,DWORD PTR ds:[esi]
  4180dc:	mov    ebx,0x40a35615
  4180e1:	fisttp WORD PTR [ebx-0x1c0469db]
  4180e7:	adc    al,0x5d
  4180e9:	adc    ebp,0xffffffc3
  4180ec:	push   cs
  4180ed:	arpl   WORD PTR [edx+0x7f8efc70],bp
  4180f3:	sub    ebp,eax
  4180f5:	cld    
  4180f6:	js     0x4180e8
  4180f8:	adc    BYTE PTR [ecx+0x29483450],cl
  4180fe:	add    esi,0xffffff93
  418101:	pop    ebp
  418102:	xchg   esi,ebp
  418104:	rol    bh,cl
  418106:	ret    
  418107:	and    al,0x36
  418109:	inc    esp
  41810a:	pushf  
  41810b:	dec    esi
  41810c:	outs   dx,BYTE PTR ds:[esi]
  41810d:	rcr    DWORD PTR [ecx],0x50
  418110:	jp     0x4180b3
  418112:	dec    ecx
  418113:	mov    BYTE PTR [eax-0x2b2cb6b0],bl
  418119:	pop    bx
  41811b:	pop    ebp
  41811c:	mov    dh,BYTE PTR ds:0x17344f83
  418122:	sbb    ah,dh
  418124:	rcr    DWORD PTR [esp+eax*1-0x77],1
  418128:	fidivr DWORD PTR [eax+0x4901b42c]
  41812e:	dec    ebp
  41812f:	outs   dx,BYTE PTR ds:[esi]
  418130:	stos   BYTE PTR es:[edi],al
  418131:	(bad)  
  418132:	jae    0x4181b1
  418134:	cmp    esi,DWORD PTR [ebp-0x45]
  418137:	aad    0x51
  418139:	mov    esp,0xa06da605
  41813e:	loope  0x41816a
  418140:	sbb    al,0xb3
  418142:	jbe    0x418153
  418144:	in     al,0xcc
  418146:	in     al,dx
  418147:	xchg   DWORD PTR [eax+0x2b],edx
  41814a:	sbb    al,0xf9
  41814c:	int3   
  41814d:	sar    BYTE PTR [edx+eax*2+0x1903bbbd],cl
  418154:	nop
  418155:	pop    ecx
  418156:	inc    eax
  418157:	and    al,0x16
  418159:	xor    ecx,DWORD PTR [edi]
  41815b:	mov    eax,esi
  41815d:	adc    al,0x21
  41815f:	or     DWORD PTR [ecx+0xdd24327],ebp
  418165:	adc    al,0xc6
  418167:	loop   0x4181c4
  418169:	ja     0x418185
  41816b:	mov    DWORD PTR [edi+edi*1-0x48],eax
  41816f:	mov    ebp,0x566df59d
  418174:	xor    BYTE PTR [edx+0x49],dh
  418177:	fidiv  WORD PTR [eax-0x4a]
  41817a:	sahf   
  41817b:	pop    ss
  41817c:	in     eax,0x4b
  41817e:	das    
  41817f:	pop    ebp
  418180:	ffreep st(0)
  418182:	push   ebp
  418183:	pop    eax
  418184:	cdq    
  418185:	adc    BYTE PTR [esi+edi*1+0x32],ch
  418189:	not    BYTE PTR [edi]
  41818b:	adc    BYTE PTR [edi-0xb90aa78],dl
  418191:	cmp    BYTE PTR ds:0x8a851fbe,cl
  418197:	pop    ebx
  418198:	xor    BYTE PTR [eax],bh
  41819a:	mov    BYTE PTR [edx+0x6ca0a549],ah
  4181a0:	lds    ecx,FWORD PTR [ecx-0x766c717b]
  4181a6:	inc    ebp
  4181a7:	out    0xd2,al
  4181a9:	mov    ebp,0x40852507
  4181ae:	(bad)  
  4181b0:	ja     0x4181da
  4181b2:	out    dx,eax
  4181b3:	and    DWORD PTR ds:0xf0121330,0x65
  4181ba:	xchg   DWORD PTR [ecx-0x55e937a],edi
  4181c0:	and    DWORD PTR [ecx-0x1b2579a2],edx
  4181c6:	add    edi,ecx
  4181c8:	ret    
  4181c9:	dec    ecx
  4181ca:	mov    ds,WORD PTR [ebx+0x68]
  4181cd:	shl    DWORD PTR [edx],cl
  4181cf:	mov    ds:0x644ea49e,eax
  4181d4:	out    0x27,al
  4181d6:	icebp  
  4181d7:	fcom   DWORD PTR [esi+0x30bfe029]
  4181dd:	sub    DWORD PTR [esi+0x37e99c0b],eax
  4181e3:	push   ds
  4181e4:	outs   dx,DWORD PTR ds:[esi]
  4181e5:	repz sub bh,bh
  4181e8:	fild   QWORD PTR [esi+0x3ae80a66]
  4181ee:	and    ecx,DWORD PTR [edx]
  4181f0:	fdivrp st(2),st
  4181f2:	idiv   ch
  4181f4:	(bad)  
  4181f5:	jle    0x41817e
  4181f7:	sub    ah,BYTE PTR [edx+0x73]
  4181fa:	xchg   ch,dh
  4181fc:	push   ebx
  4181fd:	mov    eax,0x965264f1
  418202:	adc    dl,ch
  418204:	inc    ebx
  418205:	dec    edx
  418206:	add    edi,DWORD PTR [ecx+0x4c1aad2d]
  41820c:	dec    eax
  41820d:	(bad)  
  41820e:	mov    cl,0x8e
  418210:	xchg   edx,eax
  418211:	pop    edi
  418212:	test   DWORD PTR [ecx+eiz*1-0x55],ebx
  418216:	fidivr DWORD PTR [ebp+0x1625d123]
  41821c:	sbb    BYTE PTR [ebx],dl
  41821e:	xchg   ebx,eax
  41821f:	retf   0x1c87
  418222:	in     eax,dx
  418223:	push   ds
  418224:	fiadd  DWORD PTR [ecx+ebx*2+0x3a]
  418228:	jmp    0x4181b8
  41822a:	js     0x418275
  41822c:	lods   eax,DWORD PTR ds:[esi]
  41822d:	fisttp WORD PTR [ecx+0x446778d1]
  418233:	and    al,0xae
  418235:	idiv   BYTE PTR [esi+0x71]
  418238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418239:	fsubr  st(7),st
  41823b:	int    0x1f
  41823d:	inc    esi
  41823e:	fldenv [edi+0x57183c2c]
  418244:	dec    edi
  418245:	scas   al,BYTE PTR es:[edi]
  418246:	data16 idiv BYTE PTR [edi+eax*8]
  41824a:	jecxz  0x418221
  41824c:	lods   al,BYTE PTR ds:[esi]
  41824d:	sbb    cl,0x44
  418250:	das    
  418251:	lahf   
  418252:	jo     0x4182ab
  418254:	das    
  418255:	mov    al,0xac
  418257:	dec    esp
  418258:	pop    eax
  418259:	push   edi
  41825a:	add    eax,0x1d3ae03b
  41825f:	ins    BYTE PTR es:[edi],dx
  418260:	xor    al,BYTE PTR ds:0xa07cbb4a
  418266:	and    bh,ch
  418268:	sub    BYTE PTR [ebp+ebp*4+0xc6189f3],0x16
  418270:	dec    edx
  418271:	sub    ah,cl
  418273:	jp     0x4182c1
  418275:	mov    eax,0x888d3ea5
  41827a:	and    eax,0x4fa02cbb
  41827f:	(bad)  
  418280:	and    DWORD PTR [ecx],esi
  418282:	and    al,0x51
  418284:	loope  0x4182e4
  418286:	and    al,0xd1
  418288:	push   es
  418289:	out    0x9e,eax
  41828b:	retf   0x913c
  41828e:	xchg   esi,eax
  41828f:	(bad)  
  418290:	mov    al,ds:0xc2a9f6b5
  418295:	and    BYTE PTR [ecx+eiz*2],al
  418298:	mov    bh,0x51
  41829a:	push   es
  41829b:	pop    edi
  41829c:	push   esi
  41829d:	push   eax
  41829e:	adc    eax,0x1c930b35
  4182a3:	js     0x41827e
  4182a5:	mov    al,ds:0x4149fa90
  4182aa:	popa   
  4182ab:	xlat   BYTE PTR ds:[ebx]
  4182ac:	js     0x418309
  4182ae:	cld    
  4182af:	dec    ebx
  4182b0:	add    al,0xb9
  4182b2:	or     ebp,0x6d
  4182b5:	jbe    0x418322
  4182b7:	out    0x9d,eax
  4182b9:	outs   dx,BYTE PTR ds:[esi]
  4182ba:	mov    ss,WORD PTR [ecx-0xb]
  4182bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182be:	sbb    eax,0x6304ebff
  4182c3:	int3   
  4182c4:	cld    
  4182c5:	jnp    0x418258
  4182c7:	inc    edx
  4182c8:	in     eax,dx
  4182c9:	hlt    
  4182ca:	sti    
  4182cb:	pushf  
  4182cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182cd:	cli    
  4182ce:	lods   eax,DWORD PTR ds:[esi]
  4182cf:	ret    
  4182d0:	add    dl,bh
  4182d2:	stc    
  4182d3:	xor    al,0x3a
  4182d5:	push   esp
  4182d6:	mov    esp,gs
  4182d8:	int    0x19
  4182da:	cli    
  4182db:	inc    esp
  4182dc:	xchg   edi,eax
  4182dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182de:	cdq    
  4182df:	inc    edx
  4182e0:	sub    dl,BYTE PTR [edi-0x42e85b4d]
  4182e6:	cmc    
  4182e7:	and    BYTE PTR [edx],dh
  4182e9:	xor    ebp,esp
  4182eb:	gs ins BYTE PTR es:[edi],dx
  4182ed:	ret    
  4182ee:	test   DWORD PTR [ebx+0x372c74b8],ecx
  4182f4:	adc    dh,dl
  4182f6:	mov    ebx,0xdb8324c4
  4182fb:	repnz mov dh,0x8a
  4182fe:	inc    ebx
  4182ff:	add    ebp,DWORD PTR [ebx-0x35]
  418302:	mov    bh,0xec
  418304:	push   edi
  418305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418306:	mov    DWORD PTR [ebx+eax*1],eax
  418309:	lods   eax,DWORD PTR ds:[esi]
  41830a:	mov    esi,0x7b9eedfd
  41830f:	ins    DWORD PTR es:[edi],dx
  418310:	jb     0x41830f
  418312:	pop    edi
  418313:	push   edx
  418314:	push   ecx
  418315:	jns    0x418346
  418317:	or     DWORD PTR [ebp+0x18fe3c6c],edi
  41831d:	push   0xbfb13533
  418322:	pop    cx
  418324:	shr    DWORD PTR [edi-0x66e170a5],0xff
  41832b:	push   ebp
  41832c:	push   0x832595ad
  418331:	gs inc esi
  418333:	adc    DWORD PTR [ecx-0x7],eax
  418336:	jge    0x41838e
  418338:	xchg   BYTE PTR [edi+0x607337e0],dh
  41833e:	or     dh,BYTE PTR [ebx-0x2e]
  418341:	sbb    ebp,DWORD PTR [ebx]
  418343:	cmp    BYTE PTR [esp+ebp*8],ch
  418346:	xchg   BYTE PTR [bx+0x3d76],al
  41834b:	and    BYTE PTR [ebx-0x5d],dl
  41834e:	jns    0x418394
  418350:	push   0x6b2ff50e
  418355:	mov    dh,0x50
  418357:	fistp  DWORD PTR [edi+edi*2-0x5cb3b276]
  41835e:	jno    0x4182f9
  418360:	or     al,0xbb
  418362:	mov    ecx,DWORD PTR [edi-0xb6e8ad0]
  418368:	dec    ecx
  418369:	aaa    
  41836a:	int3   
  41836b:	mov    cl,0x98
  41836d:	cmp    DWORD PTR [edx+0x49194a6b],esp
  418373:	ja     0x418313
  418375:	inc    esi
  418376:	pop    edx
  418377:	xchg   esp,eax
  418378:	pop    es
  418379:	push   ecx
  41837a:	icebp  
  41837b:	and    cl,BYTE PTR [ebp-0x775d53ab]
  418381:	imul   ecx,DWORD PTR [edx+ecx*4],0x22
  418385:	test   DWORD PTR [ebx],eax
  418387:	jg     0x418344
  418389:	hlt    
  41838a:	jle    0x41836a
  41838c:	ins    DWORD PTR es:[edi],dx
  41838d:	(bad)  
  41838e:	xor    al,0x4a
  418390:	mov    edi,0xfd983df0
  418395:	cdq    
  418396:	push   edi
  418397:	test   DWORD PTR [ecx-0x29],eax
  41839a:	mov    al,0xe8
  41839c:	sbb    eax,0x818c2727
  4183a1:	imul   esp,DWORD PTR [edx-0x441a98a5],0x3b3d6f9d
  4183ab:	int3   
  4183ac:	jae    0x418380
  4183ae:	sub    eax,0x99a35f4f
  4183b3:	push   es
  4183b4:	push   0xffffffdb
  4183b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183b7:	neg    DWORD PTR [esi]
  4183b9:	pop    ds
  4183ba:	jne    0x418342
  4183bc:	(bad)  
  4183bd:	repnz stc 
  4183bf:	call   0x1bb:0xc8fabea1
  4183c6:	add    DWORD PTR [edx],edx
  4183c8:	sbb    eax,0x2b3e9690
  4183cd:	sbb    ecx,DWORD PTR ds:0x21ea86c6
  4183d3:	in     eax,dx
  4183d4:	js     0x41837f
  4183d6:	outs   dx,BYTE PTR ds:[esi]
  4183d7:	ja     0x41839e
  4183d9:	jecxz  0x41838d
  4183db:	lahf   
  4183dc:	and    ch,BYTE PTR [ebp-0x1d]
  4183df:	jmp    0x967f:0x266bd5c7
  4183e6:	popf   
  4183e7:	ins    DWORD PTR es:[edi],dx
  4183e8:	inc    esi
  4183e9:	or     al,BYTE PTR [ebx]
  4183eb:	and    BYTE PTR ds:0x1b1037f3,ch
  4183f1:	div    cl
  4183f3:	in     eax,dx
  4183f4:	and    ebp,esi
  4183f6:	adc    BYTE PTR [ecx-0x33],ch
  4183f9:	sub    cl,BYTE PTR ds:0x12d29007
  4183ff:	jmp    0x4183c8
  418401:	(bad)  
  418403:	iret   
  418404:	jp     0x418440
  418406:	loope  0x41844c
  418408:	loope  0x4183b7
  41840a:	inc    edi
  41840b:	jb     0x41846b
  41840d:	xchg   edi,esi
  41840f:	ficom  DWORD PTR [eax+0x3]
  418412:	pushf  
  418413:	repz jg 0x4183a4
  418416:	xchg   DWORD PTR [ecx],esi
  418418:	cmc    
  418419:	adc    al,0x5e
  41841b:	push   edx
  41841c:	and    DWORD PTR [edx],ebp
  41841e:	shl    DWORD PTR [esi-0x2606f430],1
  418424:	cmp    DWORD PTR [edi],edi
  418426:	(bad)  
  418427:	mov    cr3,ebp
  41842a:	mov    edx,0xb2b5d25b
  41842f:	inc    esi
  418430:	adc    al,0x4a
  418432:	pop    edi
  418433:	out    dx,al
  418434:	ss aam 0x7b
  418437:	and    DWORD PTR [esi-0x6f],ebx
  41843a:	add    edi,ebp
  41843c:	jg     0x418483
  41843e:	mov    DWORD PTR [edx],0x51763d21
  418444:	arpl   WORD PTR [edx+0x45],sp
  418447:	xlat   BYTE PTR ds:[ebx]
  418448:	jmp    0x418494
  41844a:	js     0x418476
  41844c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844d:	je     0x418446
  41844f:	mov    ebx,0x365a52dd
  418454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418455:	in     al,dx
  418456:	in     eax,dx
  418457:	sbb    eax,edi
  418459:	xchg   esp,eax
  41845a:	pop    esi
  41845b:	adc    al,BYTE PTR [eax]
  41845d:	cmp    BYTE PTR [ebp-0x17],cl
  418460:	mov    edx,0x40aaaf36
  418465:	jmp    0xbefb773a
  41846a:	xchg   ecx,eax
  41846b:	inc    edi
  41846c:	xor    bl,al
  41846e:	and    edx,DWORD PTR [edi-0x7b61eb2a]
  418474:	popa   
  418475:	push   es
  418476:	(bad)  
  418477:	loop   0x4184aa
  418479:	test   BYTE PTR [esi+0x48a376db],al
  41847f:	add    al,BYTE PTR [ecx+0x3a9726b7]
  418485:	xor    ah,BYTE PTR [esi]
  418487:	cli    
  418488:	clc    
  418489:	xchg   ebp,eax
  41848a:	sub    BYTE PTR [eax-0x16e4bd25],0xf6
  418491:	push   edi
  418492:	cmc    
  418493:	mov    ah,0xa3
  418495:	test   al,0x59
  418497:	pop    ebp
  418498:	ret    
  418499:	cmp    BYTE PTR [edi],bh
  41849b:	xchg   esi,eax
  41849c:	(bad)  
  41849d:	in     eax,dx
  41849e:	and    BYTE PTR [ecx+0x526fe790],ch
  4184a4:	add    ebx,DWORD PTR [ebp+0x69]
  4184a7:	(bad)  
  4184a8:	fadd   DWORD PTR [edx+0x7c]
  4184ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ac:	cmp    al,0xf4
  4184ae:	mov    ebx,0xb6781602
  4184b3:	(bad)  
  4184b4:	sbb    al,0xb5
  4184b6:	icebp  
  4184b7:	push   ebx
  4184b8:	cmp    eax,0x10af2452
  4184bd:	scas   al,BYTE PTR es:[edi]
  4184be:	sbb    BYTE PTR [eax-0x41],0x52
  4184c2:	lock or eax,0xf420b9b0
  4184c8:	call   0x1a35:0x2a81b456
  4184cf:	mov    dh,0x93
  4184d1:	pop    ecx
  4184d2:	das    
  4184d3:	les    ecx,FWORD PTR [esp+edi*2-0x7f]
  4184d7:	outs   dx,DWORD PTR ds:[esi]
  4184d8:	(bad)  
  4184da:	(bad)  
  4184db:	pop    ebp
  4184dc:	test   DWORD PTR [ebx],eax
  4184de:	popa   
  4184df:	xchg   edx,eax
  4184e0:	stos   DWORD PTR es:[edi],eax
  4184e1:	outs   dx,BYTE PTR ds:[esi]
  4184e2:	push   ss
  4184e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e4:	mov    eax,ds:0xf7a47885
  4184e9:	add    BYTE PTR fs:[esi-0x133cbb59],bh
  4184f0:	dec    ebp
  4184f1:	sbb    DWORD PTR [esi+0x553db3a1],edx
  4184f7:	xor    cl,ah
  4184f9:	jmp    0x418540
  4184fb:	xor    eax,0x5a3a25a3
  418500:	xchg   esp,eax
  418501:	pop    ds
  418502:	push   edi
  418503:	hlt    
  418504:	xor    al,0x63
  418506:	push   ds
  418507:	pop    ebp
  418508:	not    BYTE PTR [eax+0x65]
  41850b:	pop    ebx
  41850c:	cmp    ecx,DWORD PTR [ebx+0x4e0820da]
  418512:	lds    edi,FWORD PTR [edx]
  418514:	xor    al,0x2b
  418516:	mov    ch,0x1b
  418518:	cs inc esp
  41851a:	dec    ecx
  41851b:	aam    0xe0
  41851d:	test   al,0x4a
  41851f:	fcomp  st(1)
  418521:	cmp    eax,0x73b58248
  418526:	xor    BYTE PTR [edx],dl
  418528:	sbb    BYTE PTR [ecx],0x85
  41852b:	loope  0x418582
  41852d:	mov    ebx,0x8f6d9b49
  418532:	pop    edi
  418533:	sbb    ebx,edx
  418535:	lods   al,BYTE PTR es:[esi]
  418537:	loop   0x41857a
  418539:	jl     0x41854c
  41853b:	int3   
  41853c:	sbb    dh,BYTE PTR [ebx+esi*2+0x37f3a9f7]
  418543:	(bad)
  418546:	out    dx,al
  418547:	rcl    BYTE PTR [ecx],1
  418549:	and    cl,cl
  41854b:	sbb    esi,DWORD PTR [ebx+0x42]
  41854e:	and    ah,ch
  418550:	test   DWORD PTR [eax+ebp*4-0x29520996],ebp
  418557:	sbb    eax,0xea40db07
  41855c:	adc    al,0xc8
  41855e:	bts    esp,ebx
  418561:	jg     0x4185ab
  418563:	adc    bh,BYTE PTR [eax]
  418565:	adc    al,0x1
  418567:	adc    DWORD PTR [eax],0xe3a6eaea
  41856d:	repz int3 
  41856f:	std    
  418570:	(bad)  
  418571:	fcmovnbe st,st(1)
  418573:	hlt    
  418574:	into   
  418575:	js     0x418519
  418577:	rcr    DWORD PTR [edi-0x20],cl
  41857a:	fild   WORD PTR [ebx+eiz*4+0x7d7dc1be]
  418581:	ficomp WORD PTR [edx+edx*4+0x27]
  418585:	push   esp
  418586:	test   BYTE PTR [ebx+0xb],dl
  418589:	dec    esi
  41858a:	and    al,0xa0
  41858c:	cmc    
  41858d:	inc    esi
  41858e:	leave  
  41858f:	into   
  418590:	ret    0xbfc
  418593:	mov    esi,0x7b2ed717
  418598:	fmul   QWORD PTR [ecx-0x5e]
  41859b:	mov    esp,0x265f2cc7
  4185a0:	popa   
  4185a1:	push   edi
  4185a2:	push   ss
  4185a3:	sahf   
  4185a4:	daa    
  4185a5:	shl    DWORD PTR [esi-0x7a90b66a],cl
  4185ab:	retf   
  4185ac:	leave  
  4185ad:	cmp    BYTE PTR [esi],dh
  4185af:	and    DWORD PTR [ecx+0x46],ebx
  4185b2:	mov    eax,ds:0x901d4373
  4185b7:	imul   ecx,DWORD PTR [edi],0xe553ede8
  4185bd:	cmp    cl,BYTE PTR [ecx+0x1a66d36b]
  4185c3:	repnz xor DWORD PTR [ecx-0x4f],eax
  4185c7:	mov    DWORD PTR [edx+0x31],esp
  4185ca:	inc    eax
  4185cb:	retf   
  4185cc:	mov    eax,ds:0x5cf05b49
  4185d1:	mov    bl,0x20
  4185d3:	dec    edx
  4185d4:	xor    al,0x11
  4185d6:	add    DWORD PTR [edi+0x2bde633f],edi
  4185dc:	jo     0x4185a6
  4185de:	popf   
  4185df:	sahf   
  4185e0:	push   esp
  4185e1:	xor    esp,ebp
  4185e3:	dec    ebp
  4185e4:	mov    BYTE PTR [ebx+0x6c],bh
  4185e7:	addr16 or al,0xdb
  4185ea:	and    eax,0x12fc7ad4
  4185ef:	fcmove st,st(2)
  4185f1:	call   0x5f3b:0x6d92ac7b
  4185f8:	inc    eax
  4185f9:	mov    dh,0x7c
  4185fb:	jnp    0x4185c0
  4185fd:	add    esi,DWORD PTR [edi-0x522d8012]
  418603:	jo     0x41861e
  418605:	pop    ecx
  418606:	rcr    BYTE PTR [edx-0x70cbbc3e],0xfa
  41860d:	mov    ecx,0x49005820
  418612:	inc    ebx
  418613:	ret    0x7433
  418616:	inc    ebx
  418617:	adc    al,0x9
  418619:	scas   eax,DWORD PTR es:[edi]
  41861a:	mov    dl,0x1e
  41861c:	push   esp
  41861d:	sub    ebp,DWORD PTR [di-0x2532]
  418622:	mov    esp,0xafcaf2a9
  418627:	xchg   edx,eax
  418628:	pop    ds
  418629:	inc    ecx
  41862a:	cmp    BYTE PTR [esi-0x1b],ch
  41862d:	das    
  41862e:	ud1    edi,DWORD PTR [eax-0x80]
  418632:	jmp    0x4a29:0x866347fc
  418639:	inc    ecx
  41863a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863b:	jmp    0xf75c:0x149b7c31
  418642:	dec    ecx
  418643:	(bad)  
  418645:	jle    0x41863d
  418647:	or     esp,ebx
  418649:	cli    
  41864a:	lods   al,BYTE PTR ds:[esi]
  41864b:	ins    BYTE PTR es:[edi],dx
  41864c:	fld    DWORD PTR [edi-0x3a]
  41864f:	aam    0xd9
  418651:	data16 ja 0x4185ef
  418654:	dec    ecx
  418655:	adc    BYTE PTR [ecx+0x2f],ch
  418658:	stos   DWORD PTR es:[edi],eax
  418659:	pushf  
  41865a:	and    eax,0x131bcdfc
  41865f:	mov    al,ds:0x625f35e1
  418664:	shr    DWORD PTR [esi],cl
  418666:	ins    DWORD PTR es:[edi],dx
  418667:	test   al,0xf8
  418669:	movhps QWORD PTR [ecx],xmm5
  41866c:	mov    al,0x65
  41866e:	pop    es
  41866f:	sar    BYTE PTR [ebx-0x501b35b2],0x16
  418676:	mov    ds:0xac4cf8be,al
  41867b:	repnz nop
  41867d:	pushf  
  41867e:	push   0xb4430f3d
  418683:	ins    BYTE PTR es:[edi],dx
  418684:	xchg   ebx,eax
  418685:	fwait
  418686:	in     al,dx
  418687:	xchg   edi,eax
  418688:	pusha  
  418689:	out    0xae,al
  41868b:	sahf   
  41868c:	jmp    0x41870a
  41868e:	(bad)  
  41868f:	sub    DWORD PTR cs:[ebp-0x2c64b396],esi
  418696:	lds    ecx,FWORD PTR [eax-0x68]
  418699:	push   cs
  41869a:	push   esp
  41869b:	push   es
  41869c:	cmc    
  41869d:	clc    
  41869e:	jg     0x4186dd
  4186a0:	sar    BYTE PTR [eax],0x15
  4186a3:	push   0x0
  4186a5:	(bad)  
  4186a6:	xchg   edx,eax
  4186a7:	mov    eax,ds:0x6354c3ef
  4186ac:	adc    al,BYTE PTR [ebp-0x41260b45]
  4186b2:	mov    dl,0x99
  4186b4:	jmp    0x4059d74b
  4186b9:	xor    eax,ecx
  4186bb:	dec    edi
  4186bc:	popf   
  4186bd:	out    0xe0,al
  4186bf:	jmp    0x1a9:0xb4bee332
  4186c6:	and    BYTE PTR [edx-0x5c1f2c9d],ah
  4186cc:	les    esi,FWORD PTR [edi]
  4186ce:	es cmc 
  4186d0:	adc    BYTE PTR [eax-0x4babbc5e],0x32
  4186d7:	daa    
  4186d8:	push   ecx
  4186d9:	sbb    eax,0x3feee8a0
  4186de:	test   al,0xeb
  4186e0:	adc    bh,BYTE PTR [eax]
  4186e2:	sub    BYTE PTR [esi+0x48a5294],al
  4186e8:	pop    ss
  4186e9:	fmul   DWORD PTR [ecx-0x228dd1ea]
  4186ef:	jge    0x418734
  4186f1:	xchg   edi,eax
  4186f2:	mov    ecx,cs
  4186f4:	shl    DWORD PTR fs:[edi+0x34c7f160],0xf6
  4186fc:	mov    ecx,esi
  4186fe:	ret    
  4186ff:	push   edx
  418700:	cwde   
  418701:	lods   al,BYTE PTR ds:[esi]
  418702:	xchg   edx,eax
  418703:	jl     0x41869c
  418705:	data16 mov dh,0x6b
  418708:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41870a:	pop    ecx
  41870b:	inc    ebx
  41870c:	xchg   esi,eax
  41870d:	and    BYTE PTR [edi+0x0],ch
  418710:	cmp    BYTE PTR [edi+0x3e3b4cf1],ch
  418716:	aas    
  418717:	ret    
  418718:	jmp    0x6c02:0xe9f4ea31
  41871f:	jnp    0x4186ba
  418721:	mov    ebp,?
  418723:	mov    al,0x1a
  418725:	mov    WORD PTR fs:[edx],?
  418728:	inc    ebp
  418729:	jl     0x4186ec
  41872b:	nop
  41872c:	xor    dl,BYTE PTR [ecx-0x6c117dcd]
  418732:	in     al,0x87
  418734:	xchg   edx,eax
  418735:	outs   dx,DWORD PTR ds:[esi]
  418736:	in     al,dx
  418737:	in     al,0x4d
  418739:	and    esi,DWORD PTR [ebp+0x25]
  41873c:	or     DWORD PTR [esi],ebp
  41873e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41873f:	outs   dx,BYTE PTR ds:[esi]
  418740:	fsubr  st,st(5)
  418742:	ins    DWORD PTR es:[edi],dx
  418743:	(bad)
  418747:	jae    0x418728
  418749:	out    dx,eax
  41874a:	popa   
  41874b:	mov    bl,0x42
  41874d:	stos   DWORD PTR es:[edi],eax
  41874e:	mov    eax,ds:0x52837e79
  418753:	xor    BYTE PTR [eax],dh
  418755:	call   0x8eb7733d
  41875a:	jp     0x41872e
  41875c:	jp     0x4186f7
  41875e:	jns    0x418761
  418760:	aas    
  418761:	jp     0x4187ba
  418763:	dec    esi
  418764:	xor    DWORD PTR [edx+edi*8-0x683ee870],edx
  41876b:	adc    ecx,ebx
  41876d:	inc    esi
  41876e:	and    BYTE PTR [ebx+0x19af762f],ah
  418774:	out    dx,al
  418775:	hlt    
  418776:	ins    DWORD PTR es:[edi],dx
  418777:	cmp    DWORD PTR [edi-0x702364a9],0xbf5eff92
  418781:	xchg   ecx,eax
  418782:	retf   
  418783:	in     al,0x96
  418785:	jp     0x41874f
  418787:	mov    ecx,0xa2d37999
  41878c:	dec    ebx
  41878d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41878e:	and    esi,DWORD PTR [esi+0x15]
  418791:	sbb    DWORD PTR [edi-0x3b],esp
  418794:	inc    edi
  418795:	into   
  418796:	fdivr  QWORD PTR ds:0x1896b98c
  41879c:	sbb    eax,0x54e3929d
  4187a1:	aas    
  4187a2:	inc    eax
  4187a3:	xchg   edi,eax
  4187a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a5:	hlt    
  4187a6:	push   esi
  4187a7:	pop    ebp
  4187a8:	hlt    
  4187a9:	fwait
  4187aa:	retf   0xfb02
  4187ad:	dec    esi
  4187ae:	ja     0x41878b
  4187b0:	hlt    
  4187b1:	add    esp,DWORD PTR [ebx+0x2e]
  4187b4:	scas   al,BYTE PTR es:[edi]
  4187b5:	aad    0x48
  4187b7:	mov    cl,0x2a
  4187b9:	into   
  4187ba:	mov    bl,BYTE PTR [edx]
  4187bc:	cmc    
  4187bd:	fcomp  st(3)
  4187bf:	(bad)  
  4187c1:	fidiv  DWORD PTR [edx]
  4187c3:	cmc    
  4187c4:	(bad)  
  4187c6:	push   es
  4187c7:	xchg   DWORD PTR [ebp+0x838963e],eax
  4187cd:	inc    edi
  4187ce:	xor    al,BYTE PTR [eax]
  4187d0:	arpl   WORD PTR [edi+edi*8],bx
  4187d3:	or     DWORD PTR [esi+0x5f9056cc],esp
  4187d9:	cmp    edx,DWORD PTR [eax]
  4187db:	sub    BYTE PTR [eax],ah
  4187dd:	stos   BYTE PTR es:[edi],al
  4187de:	pop    eax
  4187df:	out    0x9a,al
  4187e1:	test   al,0x2f
  4187e3:	aas    
  4187e4:	pop    eax
  4187e5:	jno    0x418842
  4187e7:	cmp    BYTE PTR [ecx-0x304f0b92],bl
  4187ed:	adc    cl,al
  4187ef:	icebp  
  4187f0:	fist   DWORD PTR [esi-0x74b7a44e]
  4187f6:	pop    ebp
  4187f7:	popf   
  4187f8:	jb     0x418790
  4187fa:	addr16 xchg ecx,eax
  4187fc:	cs ss mov ecx,0x1b0417ea
  418803:	test   DWORD PTR [edi-0x71d44286],edi
  418809:	sub    al,0x78
  41880b:	je     0x41884d
  41880d:	sbb    BYTE PTR [esi+0x59b3e63f],cl
  418813:	into   
  418814:	jmp    0x1419cbd
  418819:	sbb    BYTE PTR ds:0x171238ad,dl
  41881f:	enter  0x2625,0xb3
  418823:	fdivr  QWORD PTR [eax+0x44effdf4]
  418829:	das    
  41882a:	scas   al,BYTE PTR es:[edi]
  41882b:	xor    dl,0xa4
  41882e:	jmp    0x1958:0x5d448b6a
  418835:	xchg   ecx,eax
  418836:	bound  eax,QWORD PTR ss:0x276b2f2f
  41883d:	or     eax,0xe6922d9c
  418842:	in     eax,dx
  418843:	fchs   
  418845:	(bad)  
  418846:	loop   0x41884f
  418848:	dec    ebx
  418849:	xor    edx,DWORD PTR [eax+eax*1]
  41884c:	mov    DWORD PTR [edi-0x64],esp
  41884f:	mov    ds:0x97d9e12a,al
  418854:	(bad)  
  418856:	nop
  418857:	rcl    edi,cl
  418859:	test   DWORD PTR [ebx-0x9],ebp
  41885c:	mov    ebx,ecx
  41885e:	pop    edi
  41885f:	cmp    bl,BYTE PTR [eax*2+0x2806cde2]
  418866:	xchg   edx,eax
  418867:	sub    BYTE PTR [ebx-0x63],al
  41886a:	retf   0x80ed
  41886d:	adc    ecx,eax
  41886f:	jg     0x418899
  418871:	mov    edi,0xe0abd434
  418876:	mov    ebx,0x532e9168
  41887b:	add    eax,DWORD PTR [edi]
  41887d:	jmp    0x4188ba
  41887f:	ja     0x4188fc
  418881:	jbe    0x418818
  418883:	adc    al,0xcb
  418885:	les    esi,FWORD PTR [ebp+0x4f]
  418888:	inc    edx
  418889:	xchg   edx,eax
  41888a:	lods   al,BYTE PTR ds:[esi]
  41888b:	add    eax,0xa7b7087
  418890:	and    eax,ebx
  418892:	push   es
  418893:	fwait
  418894:	stos   BYTE PTR es:[edi],al
  418895:	cs test eax,0x58812ef4
  41889b:	hlt    
  41889c:	ins    BYTE PTR es:[edi],dx
  41889d:	popa   
  41889e:	sub    eax,0xd75f8c69
  4188a3:	pop    edi
  4188a4:	mov    ebx,0x39c10c58
  4188a9:	adc    eax,0xb70a742d
  4188ae:	iret   
  4188af:	out    dx,eax
  4188b0:	xor    eax,0xae66d426
  4188b5:	shl    DWORD PTR es:[eax+eiz*2+0x46],1
  4188ba:	dec    ebx
  4188bb:	mov    ds:0x470308ed,eax
  4188c0:	cs pop ecx
  4188c2:	(bad)  
  4188c3:	mov    edi,0xd8290768
  4188c8:	xor    al,0x22
  4188ca:	xor    DWORD PTR [eax],0xffffffc5
  4188cd:	fidiv  DWORD PTR [ebp+0x14f9e556]
  4188d3:	into   
  4188d4:	outs   dx,BYTE PTR ds:[esi]
  4188d5:	pop    eax
  4188d6:	mov    ds,edi
  4188d8:	jmp    0x9a90:0xae90b92c
  4188df:	lods   al,BYTE PTR ds:[esi]
  4188e0:	and    al,0xe
  4188e2:	cs mov bl,0x1b
  4188e5:	shl    al,0x91
  4188e8:	aad    0x19
  4188ea:	inc    esi
  4188eb:	pop    ecx
  4188ec:	pusha  
  4188ed:	sbb    eax,0x6417e281
  4188f2:	jb     0x41889a
  4188f4:	xchg   esi,esp
  4188f6:	inc    edi
  4188f7:	ins    DWORD PTR es:[edi],dx
  4188f8:	mov    edi,0xd700f3c4
  4188fd:	or     BYTE PTR [ebx],0x91
  418900:	push   es
  418901:	stos   DWORD PTR es:[edi],eax
  418902:	je     0x418928
  418904:	xchg   ebx,eax
  418905:	cmp    dh,bh
  418907:	pop    esi
  418908:	es xchg esi,eax
  41890a:	inc    ecx
  41890b:	mov    ?,WORD PTR [edx+0x5a542b01]
  418911:	rol    esp,0xbd
  418914:	xchg   ebx,eax
  418915:	out    dx,eax
  418916:	repnz push 0x8
  418919:	mov    cl,0x9d
  41891b:	fcmove st,st(5)
  41891d:	mov    ebx,DWORD PTR [edx-0x1cdb75fe]
  418923:	int3   
  418924:	fbld   TBYTE PTR [ebp-0x63]
  418927:	sbb    dl,0x97
  41892a:	xchg   ebp,eax
  41892b:	push   ebp
  41892c:	xchg   BYTE PTR [ebx],al
  41892e:	mov    ch,0x6c
  418930:	and    al,0x11
  418932:	sahf   
  418933:	imul   edi,DWORD PTR [ecx-0x6a],0xa8d2114
  41893a:	popf   
  41893b:	mov    al,ds:0x8b1e723d
  418940:	ins    BYTE PTR es:[di],dx
  418942:	cmova  eax,DWORD PTR [edi]
  418945:	(bad)  
  418946:	and    eax,ebx
  418948:	(bad)
  41894b:	test   eax,ebp
  41894d:	xchg   BYTE PTR [edi-0x5b800b25],ch
  418953:	jne    0x418939
  418955:	cmp    eax,0xa31bf742
  41895a:	push   eax
  41895b:	in     eax,dx
  41895c:	xchg   esi,eax
  41895d:	in     eax,0x3e
  41895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418960:	mov    ?,WORD PTR [ebx-0x211277c]
  418966:	retf   0xc0c3
  418969:	aas    
  41896a:	pop    eax
  41896b:	sahf   
  41896c:	lock dec DWORD PTR [edx-0x10]
  418970:	das    
  418971:	mov    ebp,0xc399c975
  418976:	adc    ebp,DWORD PTR [edi-0x10]
  418979:	jno    0x41892b
  41897b:	std    
  41897c:	sbb    al,0x43
  41897e:	addr16 jmp 0x6cc3983e
  418984:	xchg   ebp,eax
  418985:	mov    ebp,0x5bbd33b1
  41898a:	add    eax,0x8f37d6f3
  41898f:	lods   eax,DWORD PTR es:[esi]
  418991:	jmp    0xafc39776
  418996:	ret    
  418997:	jge    0x418932
  418999:	inc    ecx
  41899a:	add    al,0xd3
  41899c:	add    al,0x94
  41899e:	out    0x12,eax
  4189a0:	pop    edx
  4189a1:	jae    0x4189a6
  4189a3:	pop    esi
  4189a4:	xor    ebp,DWORD PTR [esi+ecx*1]
  4189a7:	xchg   edx,eax
  4189a8:	cmp    cl,BYTE PTR [eax]
  4189aa:	xchg   BYTE PTR ds:0x70da3769,ah
  4189b0:	out    0x4e,al
  4189b2:	mov    WORD PTR [ebx],?
  4189b4:	mov    ds:0xba19f26c,al
  4189b9:	inc    ecx
  4189ba:	mov    ebx,0x94d0f4fa
  4189bf:	in     eax,0x76
  4189c1:	or     ch,BYTE PTR [edx-0x29]
  4189c4:	cmp    al,0x22
  4189c6:	mov    BYTE PTR [ebx+0x76],ch
  4189c9:	int    0xba
  4189cb:	mov    edx,0x7bdaca1b
  4189d0:	mov    bh,al
  4189d2:	dec    esi
  4189d3:	outs   dx,BYTE PTR ds:[esi]
  4189d4:	hlt    
  4189d5:	mov    eax,0xccf02c41
  4189da:	sbb    DWORD PTR [eax-0x293b366b],0x24e99ff
  4189e4:	retf   0x2ad1
  4189e7:	inc    eax
  4189e8:	and    eax,0xa99d232f
  4189ed:	dec    eax
  4189ee:	xor    al,0x98
  4189f0:	rcr    BYTE PTR [esp+eax*1],0x71
  4189f4:	mov    ds:0x6bba2916,eax
  4189f9:	jbe    0x418a3d
  4189fb:	pop    ss
  4189fc:	cmp    dh,BYTE PTR [esi+0x6cf3885]
  418a02:	mov    edi,0xe11280e8
  418a07:	mov    eax,0x7f4ba96d
  418a0c:	div    bh
  418a0e:	lock pop esi
  418a10:	cmp    al,0x11
  418a12:	xor    ah,BYTE PTR [edi]
  418a14:	aad    0xde
  418a16:	lahf   
  418a17:	mov    fs,eax
  418a19:	call   DWORD PTR [ebx+0x6]
  418a1c:	mov    dl,0xc4
  418a1e:	lods   al,BYTE PTR ds:[esi]
  418a1f:	pop    ecx
  418a20:	xor    al,0x83
  418a22:	idiv   ebx
  418a24:	push   0x6661da4a
  418a29:	bound  ebx,QWORD PTR [eax-0x43d5ddad]
  418a2f:	mov    edi,edx
  418a31:	sti    
  418a32:	dec    esi
  418a33:	push   esp
  418a34:	lock fdivp st(2),st
  418a37:	jl     0x4189c1
  418a39:	mul    BYTE PTR [ebx]
  418a3b:	pusha  
  418a3c:	cmp    eax,0x67a1075a
  418a41:	jle    0x418a41
  418a43:	nop
  418a44:	jmp    0x418a40
  418a46:	add    eax,DWORD PTR [ecx+0x14eff4e]
  418a4c:	push   ebp
  418a4d:	bound  edi,QWORD PTR [ebp+eax*8-0x6]
  418a51:	adc    ch,dl
  418a53:	stc    
  418a54:	adc    DWORD PTR [ecx],0xffffff90
  418a57:	mov    edi,0x7303dbc6
  418a5c:	mov    al,0x12
  418a5e:	out    dx,al
  418a5f:	lea    eax,[edx]
  418a61:	adc    cl,dh
  418a63:	ins    DWORD PTR es:[edi],dx
  418a64:	jne    0x418a69
  418a66:	xchg   ebp,eax
  418a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a68:	push   ebp
  418a69:	jl     0x418abb
  418a6b:	(bad)  
  418a6d:	sti    
  418a6e:	pop    esi
  418a6f:	add    al,0x30
  418a71:	mov    dl,dh
  418a73:	jne    0x418a70
  418a75:	and    DWORD PTR [edi-0x2e86619b],eax
  418a7b:	stos   DWORD PTR es:[edi],eax
  418a7c:	sub    ch,BYTE PTR [eax]
  418a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a7f:	pusha  
  418a80:	pop    edi
  418a81:	das    
  418a82:	adc    dl,BYTE PTR [ecx-0x3f]
  418a85:	dec    esi
  418a86:	std    
  418a87:	and    bl,bl
  418a89:	(bad)  
  418a8a:	(bad)  
  418a8b:	jnp    0x418adf
  418a8d:	mov    esi,0x5609be33
  418a93:	test   eax,0xcc417876
  418a98:	mov    ?,ecx
  418a9a:	sub    eax,0x315fe7c4
  418a9f:	gs cdq 
  418aa1:	je     0x418a4a
  418aa3:	and    al,0xab
  418aa5:	xchg   ecx,eax
  418aa6:	lea    edi,[ebp+0x2ade33e4]
  418aac:	lea    esp,[ecx-0x57ce8048]
  418ab2:	adc    eax,0xa6b0a27e
  418ab7:	lds    esi,FWORD PTR [edx-0x1f9b1bdb]
  418abd:	xchg   esp,eax
  418abe:	(bad)  
  418abf:	hlt    
  418ac0:	cmc    
  418ac1:	push   ecx
  418ac2:	push   esp
  418ac3:	sbb    bh,al
  418ac5:	jne    0x418a66
  418ac7:	mov    dl,0x53
  418ac9:	lods   eax,DWORD PTR ds:[esi]
  418aca:	aam    0x84
  418acc:	mov    ah,BYTE PTR [eax-0x3b]
  418acf:	push   cs
  418ad0:	int3   
  418ad1:	retf   
  418ad2:	mov    ebp,0x111134a9
  418ad7:	mov    BYTE PTR [eax-0x3],bh
  418ada:	stos   BYTE PTR es:[edi],al
  418adb:	call   0xae3b:0x11aa1b05
  418ae2:	or     esp,ebp
  418ae4:	dec    ecx
  418ae5:	and    DWORD PTR [ebx-0x4b],ebx
  418ae8:	jle    0x418b1b
  418aea:	(bad)  
  418aeb:	or     edx,DWORD PTR ds:0x53cbf28f
  418af1:	xor    DWORD PTR [eax-0x730e69df],ebx
  418af7:	stos   BYTE PTR es:[edi],al
  418af8:	mov    dl,0xba
  418afa:	add    eax,0xc443648e
  418aff:	hlt    
  418b00:	mov    edi,0xf125ae04
  418b05:	or     esp,DWORD PTR [eax-0x15]
  418b08:	jl     0x418af4
  418b0a:	scas   eax,DWORD PTR es:[edi]
  418b0b:	mov    edx,gs
  418b0d:	(bad)  
  418b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0f:	lods   eax,DWORD PTR ds:[esi]
  418b10:	cs mov ah,0x7
  418b13:	lods   eax,DWORD PTR ds:[esi]
  418b14:	mov    ebp,0x3989913b
  418b19:	fs cdq 
  418b1b:	push   edx
  418b1c:	jae    0x418b68
  418b1e:	or     DWORD PTR [ebx],0xffffffa2
  418b21:	add    DWORD PTR [ecx-0x75a3a5ba],esp
  418b27:	mov    ebp,0x2ce71266
  418b2c:	fnsave [ebp+eax*8+0x30]
  418b30:	(bad)  
  418b31:	retf   0x9f86
  418b34:	cmc    
  418b35:	outs   dx,BYTE PTR ds:[esi]
  418b36:	push   esi
  418b37:	inc    ebp
  418b38:	(bad)  
  418b3a:	inc    edx
  418b3b:	push   eax
  418b3c:	out    0x8a,eax
  418b3e:	pop    esi
  418b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b40:	and    al,0xb0
  418b42:	dec    ebx
  418b43:	aaa    
  418b44:	(bad)  
  418b45:	jecxz  0x418b7a
  418b47:	lahf   
  418b48:	pop    edi
  418b49:	mov    ebp,0x26760a09
  418b4e:	mov    al,ds:0x79bf237d
  418b53:	out    dx,eax
  418b54:	aam    0xb9
  418b56:	dec    edx
  418b57:	inc    ebp
  418b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b59:	xchg   ecx,eax
  418b5a:	jg     0x418b09
  418b5c:	rol    DWORD PTR ds:0xfa71f044,cl
  418b62:	in     al,dx
  418b63:	addr16 ret 0xd5c5
  418b67:	popa   
  418b68:	or     eax,0x128ab16
  418b6d:	push   ebx
  418b6e:	push   cs
  418b6f:	sbb    eax,0xf54ab706
  418b74:	in     eax,0x12
  418b76:	dec    ebx
  418b77:	call   0xfc38:0xb7065f64
  418b7e:	jmp    0xe6fd:0x351d3317
  418b85:	adc    edi,ebx
  418b87:	inc    ecx
  418b88:	push   ebx
  418b89:	iret   
  418b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8b:	push   edi
  418b8c:	adc    eax,0x82e6d6de
  418b91:	stos   DWORD PTR es:[edi],eax
  418b92:	xor    al,0x59
  418b94:	pop    eax
  418b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b96:	pop    ebp
  418b97:	icebp  
  418b98:	xchg   ebx,eax
  418b99:	xor    bl,BYTE PTR [edx+0x5a5e41b6]
  418b9f:	outs   dx,BYTE PTR ds:[esi]
  418ba0:	push   esp
  418ba1:	cmp    BYTE PTR [ebx],0x81
  418ba4:	fwait
  418ba5:	jmp    0x70df:0x27503b69
  418bac:	int3   
  418bad:	or     eax,0xa0730890
  418bb2:	fs sub bl,al
  418bb5:	push   ecx
  418bb6:	adc    ch,BYTE PTR [edi]
  418bb8:	mov    bl,0xd7
  418bba:	push   0x67
  418bbc:	bound  ebp,QWORD PTR [esi+0x932550d]
  418bc2:	shl    esi,0xe1
  418bc5:	adc    esp,ebp
  418bc7:	jae    0x418c13
  418bc9:	fbstp  TBYTE PTR [ebx+ebx*4-0x6]
  418bcd:	mov    esp,DWORD PTR [edx]
  418bcf:	and    BYTE PTR [ebx-0x7f],ah
  418bd2:	sbb    DWORD PTR [ebp+0x604f0c50],edx
  418bd8:	cmp    BYTE PTR [ecx-0x247798d3],cl
  418bde:	fmul   DWORD PTR [edi+0x1122a0ba]
  418be4:	xchg   ecx,eax
  418be5:	imul   edi,edi,0x33
  418be8:	mov    bh,0xee
  418bea:	aaa    
  418beb:	push   edi
  418bec:	inc    esp
  418bed:	push   ebx
  418bee:	in     al,dx
  418bef:	mov    ebx,0xa6da6ac2
  418bf4:	pop    edi
  418bf5:	adc    esi,esi
  418bf7:	ss in  al,dx
  418bf9:	and    esp,esi
  418bfb:	pop    esp
  418bfc:	fisubr WORD PTR [ecx+0xae0c022]
  418c02:	jno    0x418bbb
  418c04:	in     al,dx
  418c05:	xor    al,BYTE PTR [ecx]
  418c07:	inc    esi
  418c08:	or     dh,BYTE PTR ds:0x545c7612
  418c0e:	bsr    edx,DWORD PTR [esi+0x3fc64a51]
  418c15:	inc    edi
  418c16:	dec    ebx
  418c17:	jo     0x418bf2
  418c19:	push   esp
  418c1a:	les    esi,FWORD PTR [esi-0x3f82aa4a]
  418c20:	mov    ch,0x54
  418c22:	xchg   edx,eax
  418c23:	mov    ah,BYTE PTR [ecx+0x15]
  418c26:	js     0x418bf1
  418c28:	xchg   esp,eax
  418c29:	jns    0x418ca3
  418c2b:	inc    esi
  418c2c:	neg    BYTE PTR [eax-0x6a126e71]
  418c32:	scas   eax,DWORD PTR es:[edi]
  418c33:	jnp    0x418bfc
  418c35:	xor    BYTE PTR [eax],dl
  418c37:	xchg   ecx,eax
  418c38:	xor    BYTE PTR [esi-0x8],bl
  418c3b:	dec    eax
  418c3c:	stc    
  418c3d:	out    dx,eax
  418c3e:	pushf  
  418c3f:	aas    
  418c40:	push   es
  418c41:	adc    dl,BYTE PTR [ebx+eiz*1-0x61]
  418c45:	aas    
  418c46:	lods   al,BYTE PTR ds:[esi]
  418c47:	pop    ecx
  418c48:	(bad)  
  418c4a:	jl     0x418c2a
  418c4c:	push   esi
  418c4d:	sbb    BYTE PTR [eax-0x37],dl
  418c50:	ds test eax,0x343ed3aa
  418c56:	iret   
  418c57:	clc    
  418c58:	test   DWORD PTR [ebx],ebp
  418c5a:	and    BYTE PTR [esi],bl
  418c5c:	lahf   
  418c5d:	lods   al,BYTE PTR ds:[esi]
  418c5e:	xchg   edx,eax
  418c5f:	mov    eax,ds:0x7331146
  418c64:	sbb    esi,DWORD PTR [eax-0x35ed4482]
  418c6a:	or     BYTE PTR [edx-0x2d],al
  418c6d:	(bad)  
  418c6e:	pushf  
  418c6f:	mov    edx,0x641cc97e
  418c74:	xchg   ebp,eax
  418c75:	lahf   
  418c76:	(bad)  [ebp+0x350d9398]
  418c7c:	(bad)  
  418c7d:	xlat   BYTE PTR ds:[ebx]
  418c7e:	mov    bh,0x81
  418c80:	es mov cl,0x1a
  418c83:	mov    cs,WORD PTR [ecx-0x6d]
  418c86:	cmp    DWORD PTR [edi+0x4974f05a],esi
  418c8c:	int    0x80
  418c8e:	mov    al,0x9f
  418c90:	pushf  
  418c91:	call   0x6d40f3f5
  418c96:	sbb    BYTE PTR [ecx-0x77943506],0x84
  418c9d:	fistp  QWORD PTR [esi+0xc]
  418ca0:	outs   dx,DWORD PTR ds:[esi]
  418ca1:	ret    0x8806
  418ca4:	les    esp,FWORD PTR [ebp+0x33]
  418ca7:	test   al,0x2f
  418ca9:	adc    al,0x24
  418cab:	mov    ds:0x76f4ea44,al
  418cb0:	cmp    DWORD PTR [edx-0x5b],edi
  418cb3:	dec    edi
  418cb4:	fidivr DWORD PTR [ebp-0x2f]
  418cb7:	cmp    eax,0x2daac8f1
  418cbc:	push   edi
  418cbd:	data16 cmp cl,ah
  418cc0:	aas    
  418cc1:	stos   BYTE PTR es:[edi],al
  418cc2:	adc    esp,DWORD PTR [eax-0x62e6af32]
  418cc8:	jl     0x418d33
  418cca:	retf   0x6418
  418ccd:	add    eax,0x8f7d750e
  418cd2:	test   BYTE PTR [ebx],ch
  418cd4:	lahf   
  418cd5:	xchg   ebx,eax
  418cd6:	cdq    
  418cd7:	push   eax
  418cd8:	in     al,0x98
  418cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cdb:	jne    0x418cbd
  418cdd:	mov    cl,0xa2
  418cdf:	ficom  WORD PTR [esp+esi*4-0xa]
  418ce3:	jae    0x418c94
  418ce5:	add    al,0x57
  418ce7:	neg    DWORD PTR [ebp+0x6f95aad]
  418ced:	push   ebx
  418cee:	xor    BYTE PTR [ecx+0x44],bl
  418cf1:	push   cs
  418cf2:	and    DWORD PTR [eax-0x26510ecb],ebp
  418cf8:	rol    DWORD PTR [ecx-0x79c4a1eb],0x72
  418cff:	and    DWORD PTR [edx+eiz*8],ebp
  418d02:	jns    0x418d1b
  418d04:	lods   eax,DWORD PTR ds:[esi]
  418d05:	outs   dx,DWORD PTR ds:[esi]
  418d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d07:	shl    DWORD PTR [ecx],1
  418d09:	inc    ecx
  418d0a:	mov    al,0x12
  418d0c:	xchg   edx,eax
  418d0d:	push   edi
  418d0e:	or     eax,0xb508bd33
  418d13:	mov    edi,DWORD PTR [ebx+0x29844ae2]
  418d19:	and    eax,0x3757f044
  418d1e:	cmc    
  418d1f:	sbb    DWORD PTR [ecx+0x50],esi
  418d22:	pop    gs
  418d24:	jb     0x418ce8
  418d26:	int    0x52
  418d28:	mov    bl,0xb6
  418d2a:	loop   0x418cbc
  418d2c:	adc    cl,BYTE PTR [ecx-0x4b]
  418d2f:	or     BYTE PTR ds:0x292297bf,bh
  418d35:	and    dl,BYTE PTR [esi+ebp*8+0x1056e76b]
  418d3c:	scas   eax,DWORD PTR es:[edi]
  418d3d:	inc    esi
  418d3e:	mov    al,ds:0xa3d8f2b7
  418d43:	shr    bh,cl
  418d45:	dec    eax
  418d46:	mov    DWORD PTR [ebx],ebp
  418d48:	adc    eax,0xd3a59bc6
  418d4d:	xchg   ecx,eax
  418d4e:	mov    al,ds:0x6f33b1e3
  418d53:	stos   DWORD PTR es:[edi],eax
  418d54:	fist   DWORD PTR [esi-0x25746a4b]
  418d5a:	lock xchg edx,eax
  418d5c:	xchg   BYTE PTR [ebp-0x42],ch
  418d5f:	or     ch,BYTE PTR [edx-0x60]
  418d62:	push   esp
  418d63:	xchg   BYTE PTR [ecx+0x5f64dbcf],ch
  418d69:	dec    eax
  418d6a:	pop    es
  418d6b:	xchg   ebp,eax
  418d6c:	popf   
  418d6d:	les    ecx,FWORD PTR [eax]
  418d6f:	sbb    edi,esp
  418d71:	loopne 0x418d3e
  418d73:	add    dl,BYTE PTR cs:[edi+0x17d88411]
  418d7a:	xor    dh,BYTE PTR [ebx-0x1f]
  418d7d:	fbstp  TBYTE PTR [esi]
  418d7f:	cmp    al,0x9c
  418d81:	fld    DWORD PTR [edi]
  418d83:	cmp    BYTE PTR [ebp+0x23f28b1b],dh
  418d89:	mov    esp,DWORD PTR [edi-0x73a14ec4]
  418d8f:	xchg   BYTE PTR [edx+ebx*4+0x7b],bl
  418d93:	mov    dh,0x95
  418d95:	out    dx,eax
  418d96:	add    esi,0xffffff8a
  418d99:	mov    ah,0x2
  418d9b:	repz xor DWORD PTR [di+0x59],edi
  418da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da1:	or     BYTE PTR [edi+0xf],cl
  418da4:	pushf  
  418da5:	or     eax,0xed9e1701
  418daa:	push   0x83aa9dcf
  418daf:	pop    DWORD PTR [ebp-0x1f4b2fd4]
  418db5:	es inc eax
  418db7:	xchg   ecx,eax
  418db8:	push   esi
  418db9:	cmp    cl,BYTE PTR [edi]
  418dbb:	test   eax,0x7f6e5078
  418dc0:	jge    0x418d6b
  418dc2:	pop    ds
  418dc3:	inc    ebx
  418dc4:	arpl   WORD PTR [edi-0x190f2b68],dx
  418dca:	leave  
  418dcb:	sbb    DWORD PTR [ecx-0x43],edi
  418dce:	sbb    BYTE PTR [ecx-0x50e10b5],dh
  418dd4:	and    BYTE PTR [esi+0xb],ch
  418dd7:	jmp    0x418db8
  418dd9:	or     dh,dl
  418ddb:	xor    DWORD PTR [edx],edx
  418ddd:	int    0x2f
  418ddf:	jne    0x418e0f
  418de1:	lea    eax,[edx]
  418de3:	xlat   BYTE PTR ds:[ebx]
  418de4:	dec    ebp
  418de5:	ficomp WORD PTR [ebx-0x6008ae38]
  418deb:	push   edi
  418dec:	inc    edx
  418ded:	mov    DWORD PTR [eax+0x12],edx
  418df0:	or     DWORD PTR [ebp+0x3dfc6ea],0x1e
  418df7:	(bad)  
  418df8:	cmp    DWORD PTR ds:[ecx-0x1a],eax
  418dfc:	sbb    al,bh
  418dfe:	les    ebp,FWORD PTR [ebx+edi*1]
  418e01:	add    BYTE PTR [ebp-0x5e],ah
  418e04:	clc    
  418e05:	iret   
  418e06:	pop    ecx
  418e07:	leave  
  418e08:	fwait
  418e09:	out    dx,al
  418e0a:	dec    ecx
  418e0b:	inc    ebx
  418e0c:	cs jnp 0x418e52
  418e0f:	out    0xff,al
  418e11:	jge    0x418e90
  418e13:	outs   dx,DWORD PTR ds:[esi]
  418e14:	lods   al,BYTE PTR ds:[esi]
  418e15:	(bad)  
  418e16:	fadd   DWORD PTR [ecx+0x5e]
  418e19:	es xchg esp,eax
  418e1b:	pop    ebp
  418e1c:	push   ecx
  418e1d:	scas   eax,DWORD PTR es:[edi]
  418e1e:	cwde   
  418e1f:	ss push edi
  418e21:	aaa    
  418e22:	sub    cl,BYTE PTR [ecx]
  418e24:	daa    
  418e25:	add    al,0xd1
  418e27:	lahf   
  418e28:	jp     0x418e3d
  418e2a:	repz sub BYTE PTR [eax-0x49],bl
  418e2e:	push   edx
  418e2f:	(bad)  
  418e30:	(bad)  [ecx+ebp*8+0x2b]
  418e34:	ins    BYTE PTR es:[edi],dx
  418e35:	das    
  418e36:	cwde   
  418e37:	sub    bl,BYTE PTR [esi+0x57]
  418e3a:	daa    
  418e3b:	cmp    ah,BYTE PTR [ebx-0x1040f976]
  418e41:	dec    ebp
  418e42:	test   al,0xa2
  418e44:	dec    esi
  418e45:	aaa    
  418e46:	adc    eax,0x82bd20b
  418e4b:	jle    0x418e35
  418e4d:	dec    eax
  418e4e:	nop
  418e4f:	inc    ecx
  418e50:	jg     0x418e59
  418e52:	xor    al,BYTE PTR [edx+0x215b801d]
  418e58:	cdq    
  418e59:	stos   DWORD PTR es:[edi],eax
  418e5a:	lahf   
  418e5b:	loop   0x418ed1
  418e5d:	mov    BYTE PTR [ecx],dh
  418e5f:	std    
  418e60:	xor    eax,0xbedadc66
  418e65:	sti    
  418e66:	cmp    ebx,DWORD PTR [edi]
  418e68:	sar    DWORD PTR [eax-0x20],0xde
  418e6c:	pop    es
  418e6d:	mov    ah,0x2c
  418e6f:	sub    eax,0x34b61bc9
  418e74:	adc    BYTE PTR [esp+edx*1-0x2e],0x2d
  418e79:	call   0x8c8c:0x79275473
  418e80:	mov    edi,0x375c4a7c
  418e85:	cmp    al,0xa8
  418e87:	xor    dl,BYTE PTR [eax]
  418e89:	(bad)  
  418e8a:	and    DWORD PTR [ebx],esp
  418e8c:	pop    esp
  418e8d:	pop    esi
  418e8e:	retf   
  418e8f:	pusha  
  418e90:	(bad)  
  418e91:	retf   0x4bc6
  418e94:	inc    edi
  418e95:	mov    edi,DWORD PTR [ecx+0xa047a1a]
  418e9b:	pop    ebp
  418e9c:	inc    edx
  418e9d:	sub    ebx,DWORD PTR [esi-0x17]
  418ea0:	mov    al,0xd9
  418ea2:	lds    esi,FWORD PTR [edi-0x2d245962]
  418ea8:	sub    cl,BYTE PTR [ebx+0x6e48b2e7]
  418eae:	adc    BYTE PTR [ebx+0x2a],dl
  418eb1:	xor    eax,0xfb420669
  418eb6:	in     al,dx
  418eb7:	jmp    0xae42e0c
  418ebc:	push   ebp
  418ebd:	pop    ebx
  418ebe:	aam    0x91
  418ec0:	ror    cl,1
  418ec2:	jnp    0x418ea8
  418ec4:	fadd   st,st(4)
  418ec6:	inc    ebx
  418ec7:	or     al,0x82
  418ec9:	push   0x2b25282a
  418ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ecf:	fcmovu st,st(1)
  418ed1:	sbb    eax,0xbe3dac1f
  418ed6:	mov    cl,0x58
  418ed8:	outs   dx,DWORD PTR ds:[esi]
  418ed9:	pop    ebx
  418eda:	mov    esp,0x3edad8fd
  418edf:	inc    edi
  418ee0:	adc    al,0x78
  418ee2:	mov    esp,0xd051f44d
  418ee7:	inc    edx
  418ee8:	or     al,0x4d
  418eea:	mov    esp,0x853457d3
  418eef:	lea    edi,[ecx+0x48f18e7d]
  418ef5:	lea    ebp,[ebx+0x5e04e8d6]
  418efb:	jae    0x418f66
  418efd:	add    BYTE PTR [edi],ah
  418eff:	and    eax,0x9064034a
  418f04:	jo     0x418f40
  418f06:	cmp    al,0xb0
  418f08:	gs xor edx,esp
  418f0b:	jmp    0x418f27
  418f0d:	adc    DWORD PTR [ecx+0x32],0x7bb176d7
  418f14:	xchg   DWORD PTR [eax+0x12],ebx
  418f17:	dec    edi
  418f18:	add    DWORD PTR [edx-0x7f5f5651],0x7bb7300d
  418f22:	mov    dh,0x55
  418f24:	ror    DWORD PTR [ebx-0xc],0x6
  418f28:	sti    
  418f29:	inc    eax
  418f2a:	lock pusha 
  418f2c:	add    dh,BYTE PTR [ebx+0x1]
  418f2f:	loopne 0x418ec2
  418f31:	lods   eax,DWORD PTR ds:[esi]
  418f32:	mov    DWORD PTR [ebp-0x70],ebx
  418f35:	mov    ds:0xc4ab99d9,al
  418f3a:	sbb    DWORD PTR [ecx-0x68290c89],ebp
  418f40:	shl    ebx,1
  418f42:	jecxz  0x418f93
  418f44:	adc    edx,DWORD PTR ds:0x282eecec
  418f4a:	test   al,0xa6
  418f4c:	xlat   BYTE PTR ds:[ebx]
  418f4d:	mov    dl,0xc8
  418f4f:	outs   dx,BYTE PTR ds:[esi]
  418f50:	jne    0x418f6a
  418f52:	adc    dl,BYTE PTR [esi]
  418f54:	mov    ds:0xc1d81ebf,eax
  418f59:	mov    edi,0xd48b7093
  418f5e:	int3   
  418f5f:	xchg   ebx,eax
  418f60:	jmp    0x41c6:0xd902a79e
  418f67:	imul   esp,DWORD PTR [eax-0x71],0xfd0c4560
  418f6e:	lea    edi,[edx-0x515b2a41]
  418f74:	push   cs
  418f75:	fisubr DWORD PTR [edx-0x32720de4]
  418f7b:	jle    0x418f60
  418f7d:	or     DWORD PTR ds:0x1710ac2a,edi
  418f83:	inc    esp
  418f84:	rep outs dx,BYTE PTR ds:[esi]
  418f86:	jo     0x418fb9
  418f88:	int    0x18
  418f8a:	rcr    BYTE PTR [eax+0x3aad9725],0x34
  418f91:	push   ss
  418f92:	inc    ebx
  418f93:	add    al,0x44
  418f95:	retf   0x72a5
  418f98:	cmp    al,0x46
  418f9a:	div    BYTE PTR [ebp+ebx*2+0x5764dd6d]
  418fa1:	add    edi,DWORD PTR [edi+0x105729c8]
  418fa7:	pop    edx
  418fa8:	test   BYTE PTR [edx-0x4],ah
  418fab:	repz sub BYTE PTR [ecx+0x5e55552d],dl
  418fb2:	cdq    
  418fb3:	sbb    ah,cl
  418fb5:	dec    edi
  418fb6:	mov    cl,0x4e
  418fb8:	add    al,0xd8
  418fba:	add    al,BYTE PTR [edx+0x37]
  418fbd:	push   ecx
  418fbe:	inc    esi
  418fbf:	aam    0x1c
  418fc1:	lahf   
  418fc2:	xor    ebp,ecx
  418fc4:	stos   BYTE PTR es:[edi],al
  418fc5:	adc    eax,0x72dc2d24
  418fca:	mov    al,0x6d
  418fcc:	cwde   
  418fcd:	jmp    0x418f52
  418fcf:	jmp    DWORD PTR [ebp+0x6c]
  418fd2:	pop    ss
  418fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd4:	repz pop ds
  418fd6:	(bad)  
  418fd7:	stc    
  418fd8:	out    0x8b,al
  418fda:	push   eax
  418fdb:	jno    0x418fbc
  418fdd:	fld    st(7)
  418fdf:	add    edi,DWORD PTR [esi+0x5d7b10ba]
  418fe5:	test   eax,0x2b3caa86
  418fea:	mov    ds:0x9441002b,al
  418fef:	cmp    dh,BYTE PTR [edx+0x55]
  418ff2:	and    eax,0x54ae4fd
  418ff7:	mov    cl,0x2e
  418ff9:	aam    0xfd
  418ffb:	pop    ebx
  418ffc:	fbstp  TBYTE PTR [edi+edx*4]
  418fff:	sub    ebx,ecx
  419001:	hlt    
  419002:	jl     0x419049
  419004:	xchg   edi,eax
  419005:	inc    ebp
  419006:	cmp    al,0x13
  419008:	pop    ss
  419009:	or     edx,esp
  41900b:	adc    dh,0x8a
  41900e:	lahf   
  41900f:	pop    ebp
  419010:	leave  
  419011:	mov    al,0x19
  419013:	dec    edi
  419014:	jecxz  0x419072
  419016:	(bad)  
  419017:	int3   
  419018:	or     bl,bh
  41901a:	loopne 0x419063
  41901c:	lea    edx,[ebx]
  41901e:	call   0xe442:0xc8535c74
  419025:	add    eax,0x57a1c189
  41902a:	mov    WORD PTR [ecx],gs
  41902c:	outs   dx,DWORD PTR ds:[esi]
  41902d:	aam    0x63
  41902f:	push   ecx
  419030:	je     0x419096
  419032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419033:	fstp   TBYTE PTR [edi]
  419035:	and    DWORD PTR [ecx],esp
  419037:	ret    0xbb3c
  41903a:	sub    edx,DWORD PTR [ebx]
  41903c:	sub    ch,0x64
  41903f:	mov    ecx,0x65ce2cf7
  419044:	lods   eax,DWORD PTR ds:[esi]
  419045:	mov    bl,0xee
  419047:	add    eax,0x7f1ed4a
  41904c:	or     ch,BYTE PTR [ebx-0x57]
  41904f:	(bad)  
  419050:	in     al,dx
  419051:	(bad)  
  419053:	(bad)  
  419054:	sbb    al,0x36
  419056:	into   
  419057:	aaa    
  419058:	lea    edx,[esi+0x53]
  41905b:	push   ebx
  41905c:	daa    
  41905d:	push   eax
  41905e:	dec    edx
  41905f:	jecxz  0x41904f
  419061:	ss sbb eax,0x439ed0a2
  419067:	mov    eax,DWORD PTR [ebp+0x168bc4e]
  41906d:	cld    
  41906e:	mov    ecx,0xa8ebc23a
  419073:	or     DWORD PTR [eax+ebx*1],ebp
  419076:	xchg   ebp,eax
  419077:	inc    edi
  419078:	js     0x419035
  41907a:	retf   
  41907b:	and    ebp,edi
  41907d:	pop    esi
  41907e:	jmp    0x419037
  419080:	jnp    0x41903f
  419082:	dec    ebx
  419083:	xor    ecx,ecx
  419085:	dec    eax
  419086:	test   DWORD PTR [esi],edi
  419088:	pop    ss
  419089:	dec    esi
  41908a:	xchg   DWORD PTR [esi],esp
  41908c:	(bad)  
  41908d:	dec    dl
  41908f:	adc    eax,0xadcdb26
  419094:	xlat   BYTE PTR ds:[ebx]
  419095:	sub    eax,0x90e5fd87
  41909a:	int    0x49
  41909c:	rcl    dl,1
  41909e:	jmp    0x41905f
  4190a0:	test   DWORD PTR [ebp+0x31c71615],esi
  4190a6:	in     eax,0x23
  4190a8:	or     eax,0xf97ffbe9
  4190ad:	rcr    BYTE PTR [esi+0x5ac6e80f],cl
  4190b3:	inc    esi
  4190b4:	cmp    esi,DWORD PTR [eax+0x10f76698]
  4190ba:	pop    ebp
  4190bb:	(bad)  
  4190bd:	popf   
  4190be:	lods   al,BYTE PTR ds:[esi]
  4190bf:	jne    0x4190f7
  4190c1:	mov    dh,0x72
  4190c3:	or     al,0x7b
  4190c5:	jmp    0x514ac25b
  4190ca:	mov    bl,0x7e
  4190cc:	test   DWORD PTR [edi+0x57032602],edi
  4190d2:	push   es
  4190d3:	int3   
  4190d4:	sbb    eax,DWORD PTR [esi+esi*1-0x4390f3d8]
  4190db:	jecxz  0x419122
  4190dd:	aaa    
  4190de:	push   0x2c31fdd
  4190e3:	jbe    0x419078
  4190e5:	adc    eax,0x65f24c11
  4190ea:	rcr    DWORD PTR [esi],1
  4190ec:	xor    eax,esp
  4190ee:	and    DWORD PTR [ebx+0x25595bb9],ecx
  4190f4:	loopne 0x4190b1
  4190f6:	push   0xffffffa3
  4190f8:	lods   eax,DWORD PTR ds:[esi]
  4190f9:	lock dec edi
  4190fb:	jecxz  0x4190b8
  4190fd:	(bad)  
  4190fe:	sbb    bl,BYTE PTR [ebp-0x7c]
  419101:	pop    eax
  419102:	mov    ebx,0xbd375126
  419107:	sbb    DWORD PTR [ebx+0x7d9b0930],ecx
  41910d:	and    al,0xf0
  41910f:	fiadd  WORD PTR [esi+0x48]
  419112:	mov    edx,0x812c565d
  419117:	std    
  419118:	dec    ebx
  419119:	sbb    dh,BYTE PTR [ecx]
  41911b:	and    cl,dh
  41911d:	hlt    
  41911e:	adc    dh,BYTE PTR [eax-0x20c070e4]
  419124:	pop    esi
  419125:	je     0x41911b
  419127:	cwde   
  419128:	aaa    
  419129:	or     ecx,edx
  41912b:	test   al,0x63
  41912d:	or     dh,0x7a
  419130:	fld    QWORD PTR [ebx+ebp*8-0x3f8d9f9f]
  419137:	ds jge 0x4191a0
  41913a:	cli    
  41913b:	or     BYTE PTR [ebp+0x3b],ch
  41913e:	inc    esp
  41913f:	cmp    al,0x26
  419141:	cmp    BYTE PTR [ebp+eax*8-0x3a],dl
  419145:	push   edx
  419146:	mov    ebp,0x586e3550
  41914b:	scas   eax,DWORD PTR es:[edi]
  41914c:	adc    al,0x61
  41914e:	lods   eax,DWORD PTR ds:[esi]
  41914f:	je     0x4191a4
  419151:	push   esp
  419152:	into   
  419153:	sbb    DWORD PTR [edx],0xfffffff5
  419156:	imul   ecx,DWORD PTR [edx],0x0
  419159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41915a:	inc    edi
  41915b:	and    eax,0xe0dc3960
  419160:	scas   al,BYTE PTR es:[edi]
  419161:	ret    
  419162:	jno    0x4191d1
  419164:	rcl    BYTE PTR [edi],cl
  419166:	sbb    ebx,ebp
  419168:	loope  0x4191e6
  41916a:	pop    esp
  41916b:	sar    DWORD PTR [esi],1
  41916d:	mov    dl,0xb1
  41916f:	pop    eax
  419170:	xlat   BYTE PTR ds:[ebx]
  419171:	push   esp
  419172:	pop    edi
  419173:	call   ecx
  419175:	cld    
  419176:	icebp  
  419177:	sbb    BYTE PTR [edx],al
  419179:	aad    0x96
  41917b:	push   esi
  41917c:	xchg   edx,eax
  41917d:	ins    DWORD PTR es:[edi],dx
  41917e:	repz pop edi
  419180:	adc    BYTE PTR [edx],bh
  419182:	popf   
  419183:	mov    eax,es:0x7700ba02
  419189:	test   bh,0xca
  41918c:	add    BYTE PTR [ebx+0x12975751],0x26
  419193:	jne    0x4191e7
  419195:	xor    eax,0x12578832
  41919a:	clc    
  41919b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41919c:	cdq    
  41919d:	imul   esp,DWORD PTR [esi+0x79],0x33
  4191a1:	cli    
  4191a2:	imul   edi,DWORD PTR [ebp-0x4e69c5fb],0x42143652
  4191ac:	ror    BYTE PTR [edi+ebp*2-0x4e],cl
  4191b0:	cld    
  4191b1:	xor    ebp,edx
  4191b3:	sub    al,0x82
  4191b5:	adc    ebx,DWORD PTR [eax-0x34]
  4191b8:	mov    WORD PTR [ecx],ds
  4191ba:	fdivr  DWORD PTR [edx]
  4191bc:	adc    BYTE PTR [edx-0x28],cl
  4191bf:	sti    
  4191c0:	outs   dx,DWORD PTR ds:[esi]
  4191c1:	mov    ecx,0xf8a23e0a
  4191c6:	imul   edx,DWORD PTR [esi],0xffffffc2
  4191c9:	push   ebx
  4191ca:	jae    0x419186
  4191cc:	push   es
  4191cd:	pop    ecx
  4191ce:	loopne 0x4191b6
  4191d0:	mov    eax,0xb600ca
  4191d5:	pop    ecx
  4191d6:	sbb    eax,0xae1cf1d9
  4191db:	mov    al,ds:0xe0636d12
  4191e0:	bound  ebp,QWORD PTR [ecx-0x71]
  4191e3:	dec    eax
  4191e4:	outs   dx,BYTE PTR ds:[esi]
  4191e5:	sub    al,0x80
  4191e7:	retf   0xed31
  4191ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191eb:	daa    
  4191ec:	fcmovne st,st(4)
  4191ee:	bound  esi,QWORD PTR [ebp-0x7a]
  4191f1:	fdiv   QWORD PTR [edi]
  4191f3:	adc    bh,BYTE PTR [esi]
  4191f5:	outs   dx,BYTE PTR ds:[esi]
  4191f6:	pop    ebx
  4191f7:	add    esi,edi
  4191f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191fa:	stc    
  4191fb:	(bad)  
  4191fc:	jo     0x419197
  4191fe:	add    ebp,DWORD PTR [edx+0x35f1567e]
  419204:	sti    
  419205:	xchg   ecx,eax
  419206:	idiv   esp
  419208:	and    edi,edx
  41920a:	in     eax,0xe2
  41920c:	sub    al,0xb
  41920e:	cmp    ecx,edx
  419210:	in     eax,0xc3
  419212:	cmp    ebx,DWORD PTR [edx-0x7cc339a8]
  419218:	mov    ebp,ebx
  41921a:	fdivr  st(7),st
  41921c:	shl    BYTE PTR [eax],0xb5
  41921f:	jne    0x419238
  419221:	dec    edx
  419222:	outs   dx,BYTE PTR ds:[esi]
  419223:	je     0x4191df
  419225:	jp     0x4191f2
  419227:	sub    DWORD PTR [ecx+ebx*8],0xffffffbf
  41922b:	and    dl,bl
  41922d:	adc    al,0x2a
  41922f:	dec    ecx
  419230:	mov    edi,0x21ed7308
  419235:	data16 add BYTE PTR [eax-0x50ff8733],dh
  41923c:	mov    bh,0x5
  41923e:	or     eax,0x8c682fd9
  419243:	mov    eax,0xf97e9b0e
  419248:	ror    DWORD PTR [ebp+0x78f310f9],cl
  41924e:	lea    edi,[ebx+0x28]
  419251:	sub    eax,0x52e5c40e
  419256:	std    
  419257:	(bad)  
  419258:	lock fistp QWORD PTR [edi+0x1bd8e24f]
  41925f:	in     al,dx
  419260:	dec    ebx
  419261:	push   es
  419262:	imul   eax,DWORD PTR [esi+0x2b3a9870],0x3a28606f
  41926c:	mov    cl,0xa5
  41926e:	add    DWORD PTR [esi+0x26e96ee1],edx
  419274:	sahf   
  419275:	scas   eax,DWORD PTR es:[edi]
  419276:	outs   dx,BYTE PTR ds:[esi]
  419277:	fdivrp st(2),st
  419279:	xchg   ebx,eax
  41927a:	or     cl,BYTE PTR es:[eax]
  41927d:	pushf  
  41927e:	ror    DWORD PTR [eax-0x7c9e8295],cl
  419284:	adc    eax,0x5faf9a57
  419289:	xchg   BYTE PTR [eax-0x5f],ah
  41928c:	lods   al,BYTE PTR ds:[esi]
  41928d:	pop    ecx
  41928e:	outs   dx,BYTE PTR ds:[esi]
  41928f:	push   ss
  419290:	jmp    0x419296
  419292:	bound  ebx,QWORD PTR [esi]
  419294:	shr    BYTE PTR [esi-0x52],1
  419297:	cmp    cl,BYTE PTR ds:0x9d724423
  41929d:	pop    ebp
  41929e:	push   0x54
  4192a0:	shl    BYTE PTR [esi],0x85
  4192a3:	and    DWORD PTR [edi],eax
  4192a5:	mov    eax,0x21dfb889
  4192aa:	mov    BYTE PTR [esi-0x52acded6],dh
  4192b0:	inc    ebp
  4192b1:	outs   dx,BYTE PTR ds:[esi]
  4192b2:	push   0x1a2984e5
  4192b7:	adc    ebp,0xaeacea6a
  4192bd:	ret    
  4192be:	sbb    bh,0x4a
  4192c1:	jnp    0x419337
  4192c3:	scas   al,BYTE PTR es:[edi]
  4192c4:	mov    ah,0x14
  4192c6:	dec    ebx
  4192c7:	add    edi,DWORD PTR ds:0xed5c0dc7
  4192cd:	jne    0x4192fd
  4192cf:	mov    ebp,0xc9b8f366
  4192d4:	jp     0x4192cf
  4192d6:	out    0x2a,eax
  4192d8:	and    eax,0x7546ebbc
  4192dd:	xchg   cl,dl
  4192df:	mov    bh,0xd0
  4192e1:	inc    eax
  4192e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192e3:	pop    esp
  4192e4:	jb     0x419322
  4192e6:	test   eax,0x37cff155
  4192eb:	push   0x4c
  4192ed:	cmp    eax,ebx
  4192ef:	xchg   DWORD PTR [ebx-0x3],edx
  4192f2:	lods   al,BYTE PTR ds:[esi]
  4192f3:	mov    ebp,0xa16ed003
  4192f8:	xor    edx,eax
  4192fa:	lods   al,BYTE PTR ds:[esi]
  4192fb:	inc    eax
  4192fc:	mov    ah,0xd3
  4192fe:	mov    es,WORD PTR [edx]
  419300:	jmp    0x5bae:0xfc471d68
  419307:	or     DWORD PTR [ebx],ecx
  419309:	addr16 pop ss
  41930b:	sbb    eax,0x7ad44b87
  419310:	idiv   DWORD PTR [edx+0x7b]
  419313:	lock aam 0x4e
  419316:	ret    0xacc9
  419319:	jmp    0x17884668
  41931e:	shl    ebp,cl
  419320:	ret    
  419321:	pop    ebx
  419322:	push   eax
  419323:	mov    esp,0x82ab7978
  419328:	sub    eax,0x4bf33e53
  41932d:	xor    al,0xee
  41932f:	mov    eax,0xc71edee5
  419334:	sar    BYTE PTR [ebx-0x22],cl
  419337:	into   
  419338:	cmp    BYTE PTR [ebp-0x36719140],ah
  41933e:	and    DWORD PTR [ecx+eax*4],ebp
  419341:	xor    eax,0x901ff362
  419346:	sbb    BYTE PTR [esi],al
  419348:	inc    eax
  419349:	cmp    ecx,edx
  41934b:	mov    dl,BYTE PTR [eax+0x2]
  41934e:	hlt    
  41934f:	lods   al,BYTE PTR ds:[esi]
  419350:	addr16 sub al,0x79
  419353:	out    0xf1,eax
  419355:	dec    ebx
  419356:	in     eax,0xef
  419358:	rcl    BYTE PTR [eax+0x4f],1
  41935b:	loopne 0x419300
  41935d:	dec    ecx
  41935e:	mov    ds:0x75538dc9,al
  419363:	pop    edx
  419364:	imul   ebp,edi,0x8bb90725
  41936a:	test   cl,al
  41936c:	or     bh,BYTE PTR [esi]
  41936e:	jno    0x419396
  419370:	dec    ebp
  419371:	mov    eax,0xdc846cfc
  419376:	outs   dx,BYTE PTR ds:[esi]
  419377:	mov    ah,0x6c
  419379:	push   es
  41937a:	int    0xf2
  41937c:	cli    
  41937d:	je     0x419310
  41937f:	mov    bl,0x9d
  419381:	leave  
  419382:	ds cli 
  419384:	shr    ah,0x80
  419387:	pusha  
  419388:	sub    al,0x9
  41938a:	jmp    0x419343
  41938c:	mov    al,0xe1
  41938e:	add    ah,BYTE PTR [edx-0x3310e5a5]
  419394:	mov    edi,DWORD PTR [esi]
  419396:	rcr    BYTE PTR [eax-0x5e85cdd0],cl
  41939c:	sub    BYTE PTR [esi+0x3b55297f],bl
  4193a2:	jae    0x419422
  4193a4:	sbb    edx,edx
  4193a6:	int3   
  4193a7:	fwait
  4193a8:	scas   al,BYTE PTR es:[edi]
  4193a9:	sbb    esp,DWORD PTR [si]
  4193ac:	mov    edx,0xc8d1da88
  4193b1:	push   edi
  4193b2:	pop    ebp
  4193b3:	cwde   
  4193b4:	mov    ecx,0x1e355f10
  4193b9:	inc    eax
  4193ba:	enter  0x439f,0x12
  4193be:	pop    ds
  4193bf:	push   ds
  4193c0:	daa    
  4193c1:	push   ecx
  4193c2:	int    0x34
  4193c4:	shl    BYTE PTR [esi],cl
  4193c6:	mov    ch,0xe3
  4193c8:	in     al,0x95
  4193ca:	sub    dh,BYTE PTR [eax]
  4193cc:	scas   al,BYTE PTR es:[edi]
  4193cd:	pop    esi
  4193ce:	popf   
  4193cf:	bound  edi,QWORD PTR [edi]
  4193d1:	cmp    cl,al
  4193d3:	setno  BYTE PTR [ebx]
  4193d6:	and    DWORD PTR [edi],edx
  4193d8:	dec    ecx
  4193d9:	sub    DWORD PTR [eax*4+0x100f18dd],0x714dcdb8
  4193e4:	mov    BYTE PTR [edi+ecx*4],bl
  4193e7:	mov    dh,BYTE PTR [esi-0x249f5724]
  4193ed:	inc    edx
  4193ee:	lods   eax,DWORD PTR ds:[esi]
  4193ef:	jecxz  0x4193f4
  4193f1:	or     al,0xb6
  4193f3:	mov    BYTE PTR [edi-0x53],0x2e
  4193f7:	pop    ebp
  4193f8:	loop   0x41940a
  4193fa:	push   0xefaac1d9
  4193ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419400:	push   cs
  419401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419402:	adc    al,0x81
  419404:	(bad)  
  419405:	push   eax
  419406:	cmp    DWORD PTR [edi-0x3396906],0x4325f985
  419410:	mov    ds:0x614bfd9d,al
  419415:	jno    0x419424
  419417:	neg    ch
  419419:	scas   al,BYTE PTR es:[edi]
  41941a:	or     DWORD PTR [edi+esi*2],0xe7f5ab15
  419421:	int    0x61
  419423:	mov    cl,0x10
  419425:	mov    dl,0xf5
  419427:	call   0x3faf:0xdb387c77
  41942e:	jno    0x4193b1
  419430:	and    al,0x1
  419432:	push   eax
  419433:	out    0x4b,eax
  419435:	add    BYTE PTR [edx-0x2d2ebefa],dl
  41943b:	sahf   
  41943c:	jmp    0x3148:0x763776cf
  419443:	sub    DWORD PTR [ebx],edx
  419445:	or     BYTE PTR [ebx-0x43],ch
  419448:	sub    DWORD PTR [edi],esp
  41944a:	pop    esi
  41944b:	ins    DWORD PTR es:[edi],dx
  41944c:	into   
  41944d:	leave  
  41944e:	sbb    al,0x41
  419450:	stos   DWORD PTR es:[edi],eax
  419451:	dec    esp
  419452:	imul   edi,DWORD PTR [esi-0x3d02059c],0xe8fb822
  41945c:	xor    al,0x30
  41945e:	xor    BYTE PTR [edx+esi*1],cl
  419461:	dec    ebx
  419462:	sub    DWORD PTR [eax+edi*4],edi
  419465:	ins    DWORD PTR es:[edi],dx
  419466:	es inc edx
  419468:	sahf   
  419469:	jl     0x4194d5
  41946b:	sti    
  41946c:	inc    esp
  41946d:	add    eax,0x78cfe9d
  419472:	loop   0x4194e2
  419474:	push   eax
  419475:	or     DWORD PTR [edi-0x7a49ed1c],eax
  41947b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947c:	sti    
  41947d:	fst    QWORD PTR [esi+0x1489944b]
  419483:	enter  0x965a,0xc5
  419487:	push   es
  419488:	cmp    dl,bl
  41948a:	shr    BYTE PTR [esi+0x55],1
  41948d:	stos   BYTE PTR es:[edi],al
  41948e:	imul   ebx,DWORD PTR [edx],0x67
  419491:	push   es
  419492:	jmp    0x419471
  419494:	xchg   edx,eax
  419495:	pop    eax
  419496:	test   ecx,ecx
  419498:	minps  xmm0,XMMWORD PTR [ebx+0x12]
  41949c:	retf   0xe5a0
  41949f:	(bad)  [ebx+edx*2]
  4194a2:	cdq    
  4194a3:	adc    eax,0x2f6d3a75
  4194a8:	fsubrp st(1),st
  4194aa:	sbb    al,0xbd
  4194ac:	and    DWORD PTR [ecx+edx*8+0xb],ecx
  4194b0:	ss add eax,ebp
  4194b3:	test   eax,0x43125ce0
  4194b8:	fwait
  4194b9:	cmp    al,0x88
  4194bb:	jns    0x419514
  4194bd:	sbb    DWORD PTR [ebx-0x3],eax
  4194c0:	in     al,dx
  4194c1:	jb     0x419498
  4194c3:	xor    BYTE PTR [ebp+0x7f],dh
  4194c6:	and    BYTE PTR [esi+ebx*1+0x19],bh
  4194ca:	lahf   
  4194cb:	fdivr  QWORD PTR [eax+0x3c]
  4194ce:	add    eax,0x1edc83a7
  4194d3:	test   BYTE PTR [edx-0x569ab649],cl
  4194d9:	ficomp WORD PTR [esp+0x136a2dc5]
  4194e0:	adc    ecx,esi
  4194e2:	jle    0x419547
  4194e4:	and    eax,0xf1af7414
  4194e9:	into   
  4194ea:	scas   eax,DWORD PTR es:[edi]
  4194eb:	fcomp  QWORD PTR [ebx]
  4194ed:	pop    es
  4194ee:	ror    dl,1
  4194f0:	leave  
  4194f1:	jecxz  0x41954c
  4194f3:	xchg   al,bl
  4194f5:	adc    DWORD PTR [ecx+ebp*4-0x43],esi
  4194f9:	ins    BYTE PTR es:[edi],dx
  4194fa:	retf   0xef38
  4194fd:	inc    eax
  4194fe:	sahf   
  4194ff:	adc    DWORD PTR [edx-0x16a29ee3],0xffffffaf
  419506:	data16 aas 
  419508:	(bad)  
  419509:	lea    edx,es:[eax+0x76]
  41950d:	push   0x14
  41950f:	jecxz  0x41952d
  419511:	stos   DWORD PTR es:[edi],eax
  419512:	test   eax,0x223f3d1f
  419517:	push   0xffffffe9
  419519:	sbb    dl,BYTE PTR [ecx+edi*4-0x76]
  41951d:	stos   DWORD PTR es:[edi],eax
  41951e:	test   DWORD PTR [esi-0x42],ebx
  419521:	xchg   DWORD PTR [ebp+edi*4+0x18f6ab2],ebx
  419528:	inc    edi
  419529:	ds (bad) 
  41952b:	jle    0x419511
  41952d:	push   ebp
  41952e:	jns    0x41950e
  419530:	stos   DWORD PTR es:[edi],eax
  419531:	stos   DWORD PTR es:[edi],eax
  419532:	ret    
  419533:	outs   dx,DWORD PTR ds:[esi]
  419534:	test   al,0x5e
  419536:	fistp  QWORD PTR [ebx]
  419538:	lds    ebp,FWORD PTR [ebx+eiz*2+0x57]
  41953c:	jge    0x419562
  41953e:	scas   eax,DWORD PTR es:[edi]
  41953f:	xchg   esi,eax
  419540:	mov    ds:0xbf4e36d8,al
  419545:	(bad)  
  419546:	xchg   esp,eax
  419547:	xchg   BYTE PTR ds:0x83f63529,ch
  41954d:	jp     0x419533
  41954f:	add    DWORD PTR es:[ebx],esp
  419552:	push   0xfffffff3
  419554:	adc    esi,ebx
  419556:	xlat   BYTE PTR ds:[ebx]
  419557:	(bad)  
  419558:	cmp    al,0xa1
  41955a:	pop    esi
  41955b:	sub    eax,0xa8df3a9f
  419560:	(bad)  
  419563:	fstp   DWORD PTR [edx+eax*2]
  419566:	jnp    0x41954b
  419568:	sar    BYTE PTR [eax+ebp*4+0x34e662ab],1
  41956f:	jo     0x4195d7
  419571:	xor    bh,BYTE PTR [edi+0x65c79a95]
  419577:	jmp    0x41957d
  419579:	add    ecx,ebp
  41957b:	mov    ebx,0xa3a9be13
  419580:	mov    eax,ds:0x240e204f
  419585:	push   eax
  419586:	jb     0x4195f2
  419588:	pop    eax
  419589:	pop    esp
  41958a:	nop
  41958b:	fst    DWORD PTR [ecx-0x46f1cab3]
  419591:	test   DWORD PTR [eax],ebp
  419593:	sar    DWORD PTR [ecx-0x25cb5efd],cl
  419599:	fmulp  st(5),st
  41959b:	mov    edx,0x1b1203ee
  4195a0:	pop    ss
  4195a1:	adc    eax,0x69f39ea6
  4195a6:	shr    ecx,cl
  4195a8:	pop    eax
  4195a9:	and    DWORD PTR [esi],ebp
  4195ab:	mov    ebx,0xc65028d4
  4195b0:	rol    BYTE PTR [eax-0x8],0x2b
  4195b4:	jle    0x4195b4
  4195b6:	mov    bl,0x4d
  4195b8:	and    ch,bh
  4195ba:	or     al,0x8f
  4195bc:	sahf   
  4195bd:	jmp    0x9268519f
  4195c2:	pop    edx
  4195c3:	push   ebx
  4195c4:	xchg   dl,ah
  4195c6:	add    al,0xd1
  4195c8:	lods   eax,DWORD PTR ds:[esi]
  4195c9:	stos   DWORD PTR es:[edi],eax
  4195ca:	aam    0xa7
  4195cc:	jno    0x419589
  4195ce:	stos   DWORD PTR es:[edi],eax
  4195cf:	jl     0x419640
  4195d1:	adc    eax,0xd92d4fbd
  4195d6:	add    DWORD PTR es:[esi+0x69],eax
  4195da:	inc    ebp
  4195db:	popf   
  4195dc:	mov    ah,0xcb
  4195de:	(bad)  
  4195df:	xor    al,0x5e
  4195e1:	add    DWORD PTR [edi],ebp
  4195e3:	inc    esp
  4195e4:	dec    ebx
  4195e5:	mov    cl,BYTE PTR [eax+0x3f12d9a1]
  4195eb:	fisubr WORD PTR [esi]
  4195ed:	out    0xab,eax
  4195ef:	inc    eax
  4195f0:	jo     0x419597
  4195f2:	mov    ebx,0x4c54541
  4195f7:	leave  
  4195f8:	jo     0x41963c
  4195fa:	and    DWORD PTR [ebx],ecx
  4195fc:	loope  0x419592
  4195fe:	dec    ebp
  4195ff:	mov    WORD PTR [ecx-0x23],?
  419602:	jbe    0x4195db
  419604:	ins    BYTE PTR es:[edi],dx
  419605:	aad    0xb5
  419607:	xchg   esi,eax
  419608:	ins    BYTE PTR es:[edi],dx
  419609:	xor    al,0xc7
  41960b:	mov    DWORD PTR ss:[ecx+0x5ae4a7c5],0xbeed5eba
  419616:	xlat   BYTE PTR ds:[ebx]
  419617:	lods   al,BYTE PTR ds:[esi]
  419618:	ja     0x419682
  41961a:	sbb    ah,al
  41961c:	push   cs
  41961d:	(bad)  
  41961e:	mov    bh,0x7c
  419620:	mov    ebx,0x14ca24e3
  419625:	xchg   edx,eax
  419626:	adc    al,BYTE PTR [esi+ecx*2+0x122ee04e]
  41962d:	mov    dh,0xc6
  41962f:	ss dec eax
  419631:	jge    0x419625
  419633:	sub    cl,BYTE PTR [ecx]
  419635:	(bad)  
  419636:	sbb    dl,BYTE PTR gs:[esi]
  419639:	adc    DWORD PTR [ebx],ebp
  41963b:	enter  0x6307,0x90
  41963f:	inc    esp
  419640:	ror    edi,1
  419642:	xlat   BYTE PTR ds:[ebx]
  419643:	lahf   
  419644:	pop    ebx
  419645:	mov    bl,0x70
  419647:	frstor [esi+0xedd0a89]
  41964d:	sar    DWORD PTR [esp+ebx*1],0x4a
  419651:	or     ecx,eax
  419653:	push   ebx
  419654:	xchg   ebp,esp
  419656:	sbb    eax,0x80c61e0
  41965b:	inc    esi
  41965c:	and    esp,DWORD PTR [ecx-0x63]
  41965f:	mov    ecx,DWORD PTR [ebx-0x4c]
  419662:	jmp    0x85ae:0x8693df5d
  419669:	or     ch,BYTE PTR [edi-0x6eba5e2b]
  41966f:	sahf   
  419670:	jne    0x419667
  419672:	jne    0x4196d5
  419674:	inc    ebx
  419675:	ret    0xfc77
  419678:	adc    eax,edx
  41967a:	inc    eax
  41967b:	push   edx
  41967c:	jg     0x419650
  41967e:	repnz outs dx,DWORD PTR ds:[esi]
  419680:	test   al,0xee
  419682:	out    dx,eax
  419683:	push   ss
  419684:	sbb    eax,0xa7acdc9
  419689:	mov    edx,0x49ea0e14
  41968e:	push   ebx
  41968f:	cmp    DWORD PTR [ecx],ecx
  419691:	mov    ebp,0xfca5fabc
  419696:	dec    edi
  419697:	cmp    BYTE PTR [ecx],ah
  419699:	mov    esp,DWORD PTR [esi+0x67]
  41969c:	cwde   
  41969d:	push   esi
  41969e:	scas   al,BYTE PTR es:[edi]
  41969f:	or     al,bl
  4196a1:	in     al,dx
  4196a2:	lahf   
  4196a3:	iret   
  4196a4:	sbb    ah,ah
  4196a6:	mov    bl,0x2c
  4196a8:	ror    BYTE PTR [eax-0x3d],0x85
  4196ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ad:	sbb    esp,DWORD PTR [ecx-0x6a]
  4196b0:	adc    DWORD PTR [esi],esi
  4196b2:	daa    
  4196b3:	ja     0x4196da
  4196b5:	les    esi,FWORD PTR [ecx]
  4196b7:	pop    ss
  4196b8:	fs mov esp,0x1c14a27b
  4196be:	jmp    0x6e49:0xce008fb2
  4196c5:	ret    
  4196c6:	jo     0xcc3e700
  4196cc:	rcl    DWORD PTR [esi+0x6f8b29df],0x14
  4196d3:	dec    ecx
  4196d4:	lea    esp,[bx+si+0x17]
  4196d8:	inc    bx
  4196da:	(bad)  
  4196db:	adc    DWORD PTR [edx],0x6c
  4196de:	pop    ss
  4196df:	fs js  0x4196de
  4196e2:	mov    esp,0x3f39452e
  4196e7:	mov    dh,0x9c
  4196e9:	inc    esi
  4196ea:	or     al,0x47
  4196ec:	adc    eax,0x565fd7f1
  4196f1:	mov    eax,esi
  4196f3:	jmp    0x495c:0xf5ce3111
  4196fa:	ins    DWORD PTR es:[edi],dx
  4196fb:	xchg   ecx,eax
  4196fc:	jae    0x4196c0
  4196fe:	mov    ch,0xd1
  419700:	jae    0x4196b5
  419702:	scas   al,BYTE PTR es:[edi]
  419703:	dec    esi
  419704:	not    esp
  419706:	sub    cl,BYTE PTR [edx+0x61f67d0c]
  41970c:	sub    DWORD PTR [edi+edi*2-0x231f3a33],edi
  419713:	cli    
  419714:	mov    DWORD PTR [edi+0x14137dca],ebx
  41971a:	pop    edi
  41971b:	push   0xffffff80
  41971d:	add    DWORD PTR [ecx],edi
  41971f:	inc    ecx
  419720:	(bad)  
  419721:	retf   
  419722:	and    eax,0xdfb5355f
  419727:	mov    eax,0xf3ed4107
  41972c:	inc    edx
  41972d:	xchg   dh,ch
  41972f:	in     eax,0xa0
  419731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419732:	(bad)  
  419734:	aam    0xcb
  419736:	push   es
  419737:	push   ds
  419738:	in     al,0x38
  41973a:	xor    dl,dl
  41973c:	hlt    
  41973d:	fs mov eax,fs
  419740:	xor    ecx,DWORD PTR [edx+0xa]
  419743:	lahf   
  419744:	add    BYTE PTR [ecx-0x51a119f5],0xca
  41974b:	ja     0x4196f6
  41974d:	or     eax,0x3b40f33c
  419752:	or     eax,0x755d1a72
  419757:	fisub  DWORD PTR [edx-0x8]
  41975a:	push   es
  41975b:	xchg   ecx,eax
  41975c:	fcom   QWORD PTR [esi+0x74ad2e5c]
  419762:	or     DWORD PTR [ecx],eax
  419764:	add    DWORD PTR [esi+ebx*2],ecx
  419767:	inc    edi
  419768:	int3   
  419769:	xchg   ebp,eax
  41976a:	popf   
  41976b:	inc    edi
  41976c:	stos   DWORD PTR es:[edi],eax
  41976d:	jnp    0x4196f6
  41976f:	push   ds
  419770:	pop    es
  419771:	mov    ebp,0x7cf787e2
  419776:	add    DWORD PTR [esi+0x721c20e6],0xfac8e982
  419780:	(bad)  
  419781:	cdq    
  419782:	dec    ebx
  419783:	int    0x1f
  419785:	dec    eax
  419786:	stos   DWORD PTR es:[edi],eax
  419787:	pop    ss
  419788:	inc    esi
  419789:	(bad)  
  41978a:	jnp    0x4197b8
  41978c:	out    0xda,eax
  41978e:	xchg   DWORD PTR [edx-0xb],esi
  419791:	aam    0x9d
  419793:	cdq    
  419794:	inc    esi
  419795:	loop   0x41978f
  419797:	add    ebx,DWORD PTR [edx]
  419799:	push   edx
  41979a:	outs   dx,DWORD PTR ds:[esi]
  41979b:	les    ebx,FWORD PTR [ebx+0x27]
  41979e:	lahf   
  41979f:	clc    
  4197a0:	stos   BYTE PTR es:[edi],al
  4197a1:	push   edx
  4197a2:	test   eax,0x26c4abe0
  4197a7:	mov    ebx,0x9b737c7d
  4197ac:	add    eax,0x848ac62e
  4197b1:	fs enter 0x8423,0x94
  4197b6:	retf   0x91e3
  4197b9:	aam    0x2c
  4197bb:	frstor [esp+eiz*2+0xd25f74b]
  4197c2:	xor    BYTE PTR [ecx-0x60],dh
  4197c5:	add    ch,bh
  4197c7:	jae    0x419789
  4197c9:	mov    al,0x51
  4197cb:	mov    edi,DWORD PTR [esi-0x5a41ea91]
  4197d1:	dec    ebx
  4197d2:	cmp    bl,BYTE PTR [ecx+0x53]
  4197d5:	xchg   edi,eax
  4197d6:	push   cs
  4197d7:	dec    BYTE PTR [edx+0x47aee384]
  4197dd:	mov    bh,0x4f
  4197df:	jg     0x41983c
  4197e1:	or     esp,edi
  4197e3:	dec    ebp
  4197e5:	push   dx
  4197e7:	lods   al,BYTE PTR ds:[esi]
  4197e8:	iret   
  4197e9:	xor    al,BYTE PTR [esi-0x5bb546c1]
  4197ef:	sub    cl,ah
  4197f1:	sub    eax,0xa8087a8a
  4197f6:	mov    bh,BYTE PTR [eax-0x20b670c8]
  4197fc:	cmp    esp,DWORD PTR [edx-0x46]
  4197ff:	mov    esp,ecx
  419801:	adc    ebp,edi
  419803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419804:	sub    ecx,DWORD PTR [esi]
  419806:	and    WORD PTR [ebx],ax
  419809:	inc    ebx
  41980a:	push   0x6b
  41980c:	sbb    edx,DWORD PTR [edi+0x1df5d1bc]
  419812:	out    dx,eax
  419813:	ins    BYTE PTR es:[edi],dx
  419814:	jp     0x419872
  419816:	mov    ds:0x5e11d3e5,eax
  41981b:	mov    al,ds:0xd9e1abe9
  419820:	in     al,dx
  419821:	jnp    0x41985c
  419823:	xchg   BYTE PTR [edx],dh
  419825:	neg    BYTE PTR [ecx-0x617d1409]
  41982b:	into   
  41982c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982e:	jns    0x4198a6
  419830:	push   edx
  419831:	daa    
  419832:	sbb    BYTE PTR [eax-0x59],bl
  419835:	inc    esi
  419836:	scas   al,BYTE PTR es:[edi]
  419837:	loop   0x4197d7
  419839:	xchg   ebx,eax
  41983a:	sbb    al,0x9f
  41983c:	and    al,0xfb
  41983e:	stos   BYTE PTR es:[edi],al
  41983f:	idiv   edi
  419841:	mov    edi,ss
  419843:	and    DWORD PTR [edx+0x15],0x6b340161
  41984a:	cmp    ecx,DWORD PTR [ebx]
  41984c:	add    esp,ebx
  41984e:	and    al,0xa
  419850:	(bad)  
  419852:	clc    
  419853:	dec    ebx
  419854:	add    eax,0xd3f236de
  419859:	in     eax,0xd0
  41985b:	mov    ah,0xbd
  41985d:	jno    0x419814
  41985f:	sbb    esi,DWORD PTR [edx+0x75074b9c]
  419865:	or     ch,BYTE PTR [edi+0x515c9a31]
  41986b:	jp     0x4198a2
  41986d:	lahf   
  41986e:	lods   eax,DWORD PTR ds:[esi]
  41986f:	mov    ds:0x1c0cc7fb,al
  419874:	aas    
  419875:	xchg   esi,eax
  419876:	test   eax,0x4e76fef1
  41987b:	loope  0x419821
  41987d:	fidivr DWORD PTR ds:0x1b1fafd7
  419883:	mov    dl,0xcd
  419885:	mov    bl,0x36
  419887:	mov    ds:0x5ee2eef,al
  41988c:	and    BYTE PTR [ebx-0x2300cb30],bl
  419892:	fxam   
  419895:	mov    ebp,0x8ea6b91f
  41989a:	into   
  41989b:	pop    esi
  41989c:	in     eax,dx
  41989d:	cmp    BYTE PTR [edi-0x3d16017c],dl
  4198a3:	repnz arpl WORD PTR [eax+ecx*4-0xfdf3e45],bx
  4198ab:	jp     0x419864
  4198ad:	dec    ebx
  4198ae:	inc    ebx
  4198af:	adc    eax,0x70589196
  4198b4:	lods   al,BYTE PTR ds:[esi]
  4198b5:	mov    ?,WORD PTR [eax+0x44]
  4198b8:	xor    eax,0x43760a1a
  4198bd:	rcr    BYTE PTR [ebx+0x6],cl
  4198c0:	jp     0x419904
  4198c2:	or     eax,0x4248254
  4198c7:	in     al,0xc9
  4198c9:	and    BYTE PTR [esi+eax*2-0x26f722a1],dh
  4198d0:	cmp    DWORD PTR [ebx],edi
  4198d2:	dec    edi
  4198d3:	xor    BYTE PTR [eax-0x6400e355],bh
  4198d9:	pop    esp
  4198da:	cmp    BYTE PTR [ecx],0xaf
  4198dd:	xchg   BYTE PTR [edi],dl
  4198df:	out    0x3f,al
  4198e1:	sahf   
  4198e2:	pop    ds
  4198e3:	xchg   DWORD PTR [edx+0x62721b4],ebx
  4198e9:	add    eax,0x78195752
  4198ee:	out    dx,eax
  4198ef:	xor    al,0x9b
  4198f1:	mov    eax,0x59f0c644
  4198f6:	dec    ebp
  4198f7:	or     eax,0xc687baf6
  4198fc:	nop
  4198fd:	add    BYTE PTR fs:[edi-0x1a],0xf4
  419902:	add    DWORD PTR [edi+0xf],0x52
  419906:	cs mov al,0x7d
  419909:	xchg   edx,eax
  41990a:	imul   ebp,ebx,0xffffffee
  41990d:	retf   0xe2c5
  419910:	cmp    esi,DWORD PTR [eax-0x1ee428fb]
  419916:	lea    edi,[esi]
  419918:	sbb    ebx,DWORD PTR [ebx+eax*2-0x522ae188]
  41991f:	test   al,0xb9
  419921:	and    al,0xe4
  419923:	xor    dl,BYTE PTR [ebx-0x55]
  419926:	js     0x419976
  419928:	js     0x4198d3
  41992a:	stc    
  41992b:	dec    esi
  41992c:	lock push esi
  41992e:	scas   al,BYTE PTR es:[edi]
  41992f:	push   cs
  419930:	adc    dl,0xac
  419933:	add    al,0x9a
  419935:	(bad)  
  419936:	cmp    ah,BYTE PTR [eax+0x72]
  419939:	cmc    
  41993a:	sbb    eax,0x4a8765da
  41993f:	mov    bh,0x80
  419941:	sbb    ah,BYTE PTR ds:0x46c15f20
  419947:	fisttp QWORD PTR [eax]
  419949:	fistp  WORD PTR [ebx+0x73fad342]
  41994f:	sbb    ebp,DWORD PTR [ecx+0x5240f5a6]
  419955:	mov    cl,0x3a
  419957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419958:	js     0x41993e
  41995a:	xor    BYTE PTR [edx],0x57
  41995d:	sub    al,0xb3
  41995f:	sub    ebp,DWORD PTR [edx]
  419961:	pop    esp
  419962:	jbe    0x419940
  419964:	popa   
  419965:	(bad)  
  419966:	mov    esp,0x799139a1
  41996b:	mov    ebp,0x90aa0d6
  419970:	imul   edx,DWORD PTR [ebx+0x4e6301bd],0x66
  419977:	push   ecx
  419978:	ret    0x2158
  41997b:	xor    eax,0xd8567eb3
  419980:	or     ebp,ecx
  419982:	ins    BYTE PTR es:[edi],dx
  419983:	pop    es
  419984:	fstp   TBYTE PTR [ecx]
  419986:	pusha  
  419987:	aam    0x33
  419989:	push   esi
  41998a:	jmp    0x4199a9
  41998c:	sub    BYTE PTR [edx-0x5b],cl
  41998f:	dec    ecx
  419990:	pusha  
  419991:	mov    esi,0x5ea439a6
  419996:	push   edx
  419997:	das    
  419998:	push   es
  419999:	popa   
  41999a:	imul   ecx,DWORD PTR [eax+0x3ca38f37],0xffffff86
  4199a1:	push   esp
  4199a2:	pop    ebx
  4199a3:	jg     0x419a21
  4199a5:	call   0x8eda960a
  4199aa:	loope  0x4199e5
  4199ac:	inc    esi
  4199ad:	inc    ebx
  4199ae:	lods   eax,DWORD PTR ds:[esi]
  4199af:	ins    BYTE PTR es:[edi],dx
  4199b0:	pop    edx
  4199b1:	aas    
  4199b2:	xchg   esp,eax
  4199b3:	dec    esi
  4199b4:	cmp    ch,bl
  4199b6:	lea    ebx,[edx]
  4199b8:	jne    0x419978
  4199ba:	dec    esp
  4199bb:	lock pop ebx
  4199bd:	(bad)  
  4199be:	xor    ebx,esi
  4199c0:	push   ds
  4199c1:	in     eax,dx
  4199c2:	test   DWORD PTR [ebx-0x78],esp
  4199c5:	mov    ah,BYTE PTR [ebx-0x7ff4c740]
  4199cb:	ror    esp,1
  4199cd:	sub    al,0x98
  4199cf:	jmp    0x735f1186
  4199d4:	jmp    0x41997a
  4199d6:	jp     0x41995b
  4199d8:	xchg   ecx,eax
  4199d9:	das    
  4199da:	xchg   BYTE PTR [edi+0x4787b6d5],cl
  4199e0:	adc    eax,0x4142d514
  4199e5:	into   
  4199e6:	jecxz  0x4199c0
  4199e8:	test   eax,0x985cf2c6
  4199ed:	xchg   esi,eax
  4199ee:	daa    
  4199ef:	mov    cl,BYTE PTR [eax-0x4416d7dc]
  4199f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f6:	mov    WORD PTR ds:0xfb6ffa1b,ax
  4199fd:	jne    0x41998d
  4199ff:	mov    ch,0xc
  419a01:	repnz gs inc edi
  419a04:	push   esp
  419a05:	out    0xb,al
  419a07:	mov    esi,?
  419a09:	(bad)  
  419a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0b:	xchg   ebp,eax
  419a0c:	gs retf 
  419a0e:	ret    0x508c
  419a11:	adc    al,0x76
  419a13:	ins    DWORD PTR es:[edi],dx
  419a14:	enter  0x3d2,0xe6
  419a18:	clc    
  419a19:	enter  0x18a8,0x36
  419a1d:	sub    eax,DWORD PTR [edx+0x49fb4808]
  419a23:	mov    ds:0xca096a1f,al
  419a28:	test   DWORD PTR [edi],ecx
  419a2a:	arpl   WORD PTR ds:0x233176f5,sp
  419a30:	mov    dl,0x9
  419a32:	sub    cl,BYTE PTR [edx]
  419a34:	sub    eax,0x3601e8b1
  419a39:	jecxz  0x4199c6
  419a3b:	mov    al,ds:0xefb4c5df
  419a40:	or     al,0x57
  419a42:	sti    
  419a43:	pop    eax
  419a44:	imul   ebp,edx,0xaba1c3ce
  419a4a:	jmp    0x8b3fc5af
  419a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a50:	mov    BYTE PTR [esi+esi*8+0x4d],bh
  419a54:	adc    BYTE PTR [ecx+esi*2+0x18],ah
  419a58:	rcl    esp,cl
  419a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a5b:	push   0x35d09ce4
  419a60:	jmp    0x419a58
  419a62:	or     DWORD PTR [eax],ebp
  419a64:	shl    BYTE PTR [edi],0x50
  419a67:	mov    ds:0xd1aead2a,eax
  419a6c:	pop    ebp
  419a6d:	inc    esp
  419a6e:	or     eax,0xc36108c4
  419a73:	and    ah,0xc3
  419a76:	adc    al,0x66
  419a78:	xlat   BYTE PTR ds:[ebx]
  419a79:	pop    edx
  419a7a:	retf   0x7fac
  419a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a7e:	leave  
  419a7f:	rcl    DWORD PTR [ecx-0x3d],cl
  419a82:	jecxz  0x419a17
  419a84:	mov    dh,0xf3
  419a86:	outs   dx,DWORD PTR ds:[esi]
  419a87:	jp     0x419a8c
  419a89:	sub    eax,0x81c56200
  419a8e:	and    al,al
  419a90:	mov    ch,BYTE PTR [ebx+0x8]
  419a93:	dec    eax
  419a94:	push   0xffffff89
  419a96:	inc    esp
  419a97:	xchg   esi,eax
  419a98:	mov    WORD PTR [ecx+0x67],ds
  419a9b:	inc    ecx
  419a9c:	and    eax,0x3bd85cdd
  419aa1:	pop    edi
  419aa2:	inc    ebx
  419aa3:	rcr    BYTE PTR [edx],cl
  419aa5:	sbb    al,0xc9
  419aa7:	or     dl,BYTE PTR [ebx-0x39]
  419aaa:	gs mov esp,0xa769ed41
  419ab0:	scas   al,BYTE PTR es:[edi]
  419ab1:	pop    DWORD PTR [esi-0x56]
  419ab4:	loop   0x419b04
  419ab6:	inc    edi
  419ab7:	test   DWORD PTR [esi+ebp*2+0x4040b937],ebp
  419abe:	fabs   
  419ac0:	retf   
  419ac1:	and    al,0xee
  419ac3:	out    dx,eax
  419ac4:	mov    dh,0x12
  419ac6:	and    ch,al
  419ac8:	adc    al,0xfa
  419aca:	popw   es
  419acc:	fs jb  0x419a92
  419acf:	js     0x419aca
  419ad1:	mov    eax,0xebf2ec8b
  419ad6:	adc    al,BYTE PTR [ebp+0x49]
  419ad9:	adc    cl,bh
  419adb:	cmp    al,0x6e
  419add:	rcr    DWORD PTR [eax+0x65b9d4fa],1
  419ae3:	fwait
  419ae4:	dec    ebp
  419ae5:	mov    eax,esi
  419ae7:	push   edx
  419ae8:	adc    BYTE PTR [ecx],cl
  419aea:	ss xchg edx,eax
  419aec:	dec    esi
  419aed:	lock (bad) 
  419aef:	ds pop ebp
  419af1:	(bad)
  419af4:	ret    0x60aa
  419af7:	sub    BYTE PTR [ecx-0xeb056cb],ch
  419afd:	inc    ebp
  419afe:	mov    ds:0x1d5d616f,al
  419b03:	push   eax
  419b04:	not    eax
  419b06:	fwait
  419b07:	popf   
  419b08:	inc    eax
  419b09:	mov    ecx,0x3e9d797
  419b0e:	ret    0x1b3a
  419b11:	fld    st(5)
  419b13:	dec    esp
  419b14:	rcr    edx,cl
  419b16:	xor    ch,BYTE PTR [ebp+0x7557432f]
  419b1c:	mov    bh,0x61
  419b1e:	mov    al,0xd3
  419b20:	or     BYTE PTR [ebx],cl
  419b22:	and    eax,0xca283f83
  419b27:	test   al,0xa1
  419b29:	aaa    
  419b2a:	or     bh,dh
  419b2c:	sbb    bl,BYTE PTR [ebp-0x2f]
  419b2f:	ds mov eax,0x9d135c9f
  419b35:	and    eax,0x644eef4e
  419b3a:	test   al,0xb1
  419b3c:	xchg   BYTE PTR [ecx+ebp*2],dh
  419b3f:	stc    
  419b40:	gs sahf 
  419b42:	popa   
  419b43:	push   ebp
  419b44:	repz xor dh,dh
  419b47:	xchg   ecx,eax
  419b48:	pushf  
  419b49:	imul   esi,DWORD PTR [ebx],0x791a4c11
  419b4f:	mov    ecx,0x339d8a3a
  419b54:	retf   0x1984
  419b57:	into   
  419b58:	jb     0x419b3f
  419b5a:	inc    esi
  419b5b:	lds    eax,FWORD PTR [edi]
  419b5d:	gs into 
  419b5f:	mov    bl,0x6e
  419b61:	out    0x3f,al
  419b63:	ja     0x419bd6
  419b65:	imul   esp,DWORD PTR [esi],0x20611717
  419b6b:	add    bh,BYTE PTR ds:0x5525bd11
  419b71:	(bad)  
  419b72:	dec    edx
  419b73:	loop   0x419bbb
  419b75:	push   es
  419b76:	(bad)  
  419b77:	sbb    al,0x4a
  419b79:	popa   
  419b7a:	sub    eax,0x1fc0ab0
  419b7f:	repz and eax,0x7a8e3250
  419b85:	aad    0x36
  419b87:	out    0xbc,eax
  419b89:	mov    bl,0x7f
  419b8b:	ja     0x419b5c
  419b8d:	(bad)  
  419b8e:	arpl   ax,bx
  419b90:	pop    esi
  419b91:	inc    eax
  419b92:	or     BYTE PTR [edx+0x4adb11cc],ch
  419b98:	push   edx
  419b99:	iret   
  419b9a:	out    dx,eax
  419b9b:	jmp    0x2b4b56a
  419ba0:	fs mov ecx,0x84056a04
  419ba6:	stc    
  419ba7:	add    BYTE PTR [ecx+0x16],al
  419baa:	test   eax,0x593482e0
  419baf:	jge    0x419c17
  419bb1:	enter  0x4eff,0xde
  419bb5:	hlt    
  419bb6:	imul   ecx,eax,0x2c
  419bb9:	dec    ecx
  419bba:	xchg   BYTE PTR [eax+0x21],bh
  419bbd:	int    0x11
  419bbf:	xchg   dl,ah
  419bc1:	push   cs
  419bc2:	dec    esi
  419bc3:	test   al,0x8f
  419bc5:	loope  0x419b87
  419bc7:	push   cs
  419bc8:	in     al,0x69
  419bca:	add    cl,BYTE PTR [ebp-0x47d145b6]
  419bd0:	cmp    DWORD PTR [esp+edi*1],esi
  419bd3:	pop    es
  419bd4:	sbb    edi,DWORD PTR [eax+ecx*2]
  419bd7:	cdq    
  419bd8:	mov    edx,0xb96591b3
  419bdd:	mov    bl,0xca
  419bdf:	into   
  419be0:	(bad)  
  419be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be3:	adc    eax,0x936af0e3
  419be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be9:	dec    ebp
  419bea:	pop    edi
  419beb:	sub    al,0x2c
  419bed:	pusha  
  419bee:	les    esp,FWORD PTR [ebx+0x56]
  419bf1:	jmp    0x5378325b
  419bf6:	imul   edx,DWORD PTR [eax+ebx*4],0xffffffc9
  419bfa:	hlt    
  419bfb:	stos   DWORD PTR es:[edi],eax
  419bfc:	push   esp
  419bfd:	clts   
  419bff:	ds iret 
  419c01:	lock out 0xa1,eax
  419c04:	and    BYTE PTR ds:0xc9f93bb3,al
  419c0a:	jnp    0x419c16
  419c0c:	test   BYTE PTR ds:0x1198ce9e,0x99
  419c13:	test   al,0xa6
  419c15:	outs   dx,BYTE PTR ds:[esi]
  419c16:	xchg   edi,eax
  419c17:	retf   
  419c18:	dec    esp
  419c19:	inc    ecx
  419c1a:	and    DWORD PTR [edi+0x66],0x38
  419c1e:	aaa    
  419c1f:	add    edi,DWORD PTR [eax]
  419c21:	sbb    BYTE PTR [edi],dh
  419c23:	push   ds
  419c24:	ja     0x419c1a
  419c26:	das    
  419c27:	adc    ebx,DWORD PTR [ebp+0x79929ddd]
  419c2d:	push   es
  419c2e:	pusha  
  419c2f:	mov    cl,0x92
  419c31:	call   DWORD PTR [edi]
  419c33:	xlat   BYTE PTR ds:[ebx]
  419c34:	jmp    0xf95a:0x1e64e4c2
  419c3b:	test   eax,0xac1c5623
  419c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c41:	imul   edx,DWORD PTR [eax+0x56961782],0x33315547
  419c4b:	jnp    0x419be3
  419c4d:	mov    edx,0xb55944da
  419c52:	ror    DWORD PTR [esp+ecx*2+0x356e066c],1
  419c59:	scas   eax,DWORD PTR es:[edi]
  419c5a:	and    ebx,esi
  419c5c:	mov    ds,WORD PTR [esi+0x8]
  419c5f:	sbb    edi,DWORD PTR [edx+0x1e]
  419c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c63:	stos   BYTE PTR es:[edi],al
  419c64:	mov    esp,0x836ea990
  419c69:	arpl   WORD PTR [edi+0x1e696d7c],si
  419c6f:	pop    edx
  419c70:	add    DWORD PTR [edi+esi*2],0x7ff42c02
  419c77:	push   edi
  419c78:	adc    eax,0x8d0e0c8
  419c7d:	add    bl,BYTE PTR [esi-0x70]
  419c80:	out    0x95,al
  419c82:	cmc    
  419c83:	sbb    al,0x17
  419c85:	mov    al,ds:0x4401367c
  419c8a:	mov    ds:0xee847ab0,eax
  419c8f:	dec    ebp
  419c90:	sub    esi,DWORD PTR [esi-0x70]
  419c93:	ficomp WORD PTR [eax-0x2a]
  419c96:	xor    edx,DWORD PTR [ebp+0x3e2ab32a]
  419c9c:	sbb    al,0xd0
  419c9e:	iret   
  419c9f:	mov    eax,0x189f8b7d
  419ca4:	mov    ebp,0xb26630f0
  419ca9:	pop    edx
  419caa:	call   0xa102:0xbd4124d6
  419cb1:	pop    edi
  419cb2:	enter  0xc216,0xdc
  419cb6:	iret   
  419cb7:	and    dl,BYTE PTR [ebx]
  419cb9:	push   eax
  419cba:	or     bl,dh
  419cbc:	mov    edx,0x7315040
  419cc1:	fucomip st,st(4)
  419cc3:	adc    DWORD PTR [edi+0x2a104b85],esi
  419cc9:	sub    cl,BYTE PTR [esi-0x2270ed11]
  419ccf:	xchg   esp,eax
  419cd0:	mov    dh,0x51
  419cd2:	out    0x96,eax
  419cd4:	lock out dx,eax
  419cd6:	sbb    bh,BYTE PTR [esi]
  419cd8:	fst    QWORD PTR [ecx+0x10]
  419cdb:	ret    
  419cdc:	lahf   
  419cdd:	xchg   ebp,eax
  419cde:	mov    ebp,0xb1b40247
  419ce3:	inc    ebp
  419ce4:	out    0xaf,al
  419ce6:	in     eax,dx
  419ce7:	shr    DWORD PTR [edx],0x7a
  419cea:	xor    ebp,edx
  419cec:	fst    QWORD PTR [esi+0x22]
  419cef:	adc    edx,ebp
  419cf1:	pushf  
  419cf2:	cli    
  419cf3:	push   esp
  419cf4:	stc    
  419cf5:	sbb    eax,0x25f7e775
  419cfa:	pushf  
  419cfb:	adc    ebp,eax
  419cfd:	js     0x419d10
  419cff:	or     eax,0xa5cd9859
  419d04:	jmp    0x419cd8
  419d06:	jge    0x419d45
  419d08:	xchg   DWORD PTR [esi],edi
  419d0a:	pop    es
  419d0b:	repnz aam 0xc4
  419d0e:	mov    ds:0x1edca6ba,al
  419d13:	test   BYTE PTR [esi+0x7458a3da],bh
  419d19:	call   0xff50a604
  419d1e:	lds    esi,FWORD PTR [esi+0x35]
  419d21:	cmc    
  419d22:	out    0xcd,eax
  419d24:	add    al,0x7f
  419d26:	inc    esp
  419d27:	adc    BYTE PTR [edi],ah
  419d29:	das    
  419d2a:	adc    al,0x27
  419d2c:	push   ecx
  419d2d:	cmp    esp,DWORD PTR [esi]
  419d2f:	out    0xc2,eax
  419d31:	repnz icebp 
  419d33:	pop    es
  419d34:	jg     0x419d2c
  419d36:	pop    es
  419d37:	cmp    eax,0xf9302b5d
  419d3c:	inc    edx
  419d3d:	or     ebx,DWORD PTR [ebx]
  419d3f:	push   esi
  419d40:	adc    eax,0xe05e91c4
  419d45:	mov    eax,0x32024f23
  419d4a:	mov    esp,0x8743de39
  419d4f:	or     BYTE PTR [ebx],dl
  419d51:	dec    ebp
  419d52:	mov    dh,0xf7
  419d54:	xchg   ebx,eax
  419d55:	test   BYTE PTR [ecx+eiz*8-0xa],al
  419d59:	je     0x419d3d
  419d5b:	js     0x419d87
  419d5d:	loop   0x419d45
  419d5f:	rol    DWORD PTR [esi-0x66fa52d2],cl
  419d65:	mov    ah,0x3
  419d67:	push   esi
  419d68:	pop    esp
  419d69:	cdq    
  419d6a:	and    eax,0xb1741506
  419d6f:	arpl   WORD PTR fs:[eax],sp
  419d72:	rcl    DWORD PTR [ebp-0x54857e14],cl
  419d78:	sbb    edi,DWORD PTR [esi]
  419d7a:	push   ds
  419d7b:	rol    BYTE PTR [esi+edx*8-0x63],0x79
  419d80:	fidiv  DWORD PTR [ecx+0x73]
  419d83:	inc    eax
  419d84:	push   ds
  419d85:	dec    eax
  419d86:	or     ebp,DWORD PTR [ebp+ecx*4+0x2db75cd0]
  419d8d:	jmp    0xb4bb:0xc4e4ab63
  419d94:	shl    BYTE PTR [ebp-0x36],0x76
  419d98:	inc    esi
  419d9a:	test   BYTE PTR [edx],bh
  419d9c:	cmp    BYTE PTR [eax+0x149f6750],dl
  419da2:	call   0x9bc14821
  419da7:	push   edx
  419da8:	hlt    
  419da9:	and    esi,DWORD PTR ds:0x5dd29910
  419daf:	fdivr  QWORD PTR [edi+0xb]
  419db2:	test   al,0xda
  419db4:	inc    ebx
  419db5:	mov    eax,ds:0xbb029338
  419dba:	(bad)  
  419dbb:	sti    
  419dbc:	rol    al,cl
  419dbe:	sbb    bh,bh
  419dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc1:	fstp   QWORD PTR [edx]
  419dc3:	dec    edx
  419dc4:	push   esi
  419dc5:	jge    0x419d52
  419dc7:	repnz call 0xcefb:0x5d8b167
  419dcf:	or     esi,0xffffffd0
  419dd2:	mov    ds:0x86f05920,al
  419dd7:	stos   DWORD PTR es:[edi],eax
  419dd8:	jl     0x419e32
  419dda:	pop    esi
  419ddb:	pop    esp
  419ddc:	stc    
  419ddd:	mov    eax,ds:0xbe5a75c5
  419de2:	dec    esp
  419de3:	fadd   DWORD PTR [edi]
  419de5:	outs   dx,DWORD PTR ds:[esi]
  419de6:	ins    DWORD PTR es:[edi],dx
  419de7:	shl    BYTE PTR [ecx],0xc0
  419dea:	push   0xffffffe1
  419dec:	mov    dh,cl
  419dee:	pop    ebp
  419def:	adc    bl,cl
  419df1:	mov    edx,0x451b43b7
  419df6:	cmp    al,0x26
  419df8:	sbb    cl,BYTE PTR [edi]
  419dfa:	retf   0xf09
  419dfd:	fnstenv [ebx+0x5ba88f16]
  419e03:	fdivrp st(4),st
  419e05:	jl     0x419df8
  419e07:	sub    eax,0x31bb3b0a
  419e0c:	inc    edx
  419e0d:	dec    esi
  419e0e:	mov    ch,BYTE PTR [ebx]
  419e10:	inc    edi
  419e11:	jecxz  0x419e5c
  419e13:	xchg   edx,eax
  419e14:	loop   0x419e41
  419e16:	add    DWORD PTR [eax-0x6f319bce],esi
  419e1c:	js     0x419de5
  419e1e:	jle    0x419dc2
  419e20:	xlat   BYTE PTR ds:[ebx]
  419e21:	mov    ecx,0xd164e9c6
  419e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e27:	inc    edx
  419e28:	push   ss
  419e29:	lock dec edi
  419e2b:	out    dx,eax
  419e2c:	xchg   esi,eax
  419e2d:	mov    edx,eax
  419e2f:	dec    BYTE PTR [esi+esi*2-0xc]
  419e33:	lods   eax,DWORD PTR ds:[esi]
  419e34:	mov    dl,0x72
  419e36:	lods   al,BYTE PTR ds:[esi]
  419e37:	xchg   esp,eax
  419e38:	jge    0x419e0f
  419e3a:	cs sbb eax,0x9e5b8871
  419e40:	cld    
  419e41:	(bad)  
  419e43:	jg     0x419de8
  419e45:	in     al,0xea
  419e47:	ja     0x419e8b
  419e49:	rol    BYTE PTR [ebx+ecx*4-0x76],1
  419e4d:	aaa    
  419e4e:	sub    eax,DWORD PTR [esi]
  419e50:	cmp    al,0xce
  419e52:	and    eax,0x27aab86b
  419e57:	and    al,0x33
  419e59:	mov    esp,0x193b9f
  419e5e:	jp     0x419ed6
  419e60:	mov    gs,WORD PTR [ecx+0x38]
  419e63:	cmc    
  419e64:	dec    eax
  419e65:	(bad)  
  419e66:	sbb    BYTE PTR [edx-0x16],bh
  419e69:	stos   DWORD PTR es:[edi],eax
  419e6a:	push   ebx
  419e6b:	outs   dx,BYTE PTR ds:[esi]
  419e6c:	sbb    bl,ch
  419e6e:	das    
  419e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e70:	(bad)  
  419e71:	sahf   
  419e72:	mov    ecx,0x3abf3a13
  419e77:	xor    ch,0x90
  419e7a:	jns    0x419e38
  419e7c:	inc    edx
  419e7d:	in     eax,dx
  419e7e:	push   edx
  419e7f:	fwait
  419e80:	mov    al,0x27
  419e82:	mov    ds:0x670cef5a,al
  419e87:	fmul   DWORD PTR [edx+0x7b]
  419e8a:	pop    eax
  419e8b:	inc    edx
  419e8c:	(bad)  
  419e8d:	in     eax,dx
  419e8e:	adc    ch,cl
  419e90:	adc    cl,BYTE PTR [esi+0x782c9522]
  419e96:	xor    eax,0xef72aa60
  419e9b:	dec    ebx
  419e9c:	mov    eax,ds:0x16695626
  419ea1:	int3   
  419ea2:	add    edx,DWORD PTR [esp+edx*2]
  419ea5:	les    edi,FWORD PTR [ebx-0x2f]
  419ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea9:	or     DWORD PTR [esi+0x4d],ecx
  419eac:	push   eax
  419ead:	dec    eax
  419eae:	hlt    
  419eaf:	jge    0x419e82
  419eb1:	xor    DWORD PTR [ecx+0x2f],edx
  419eb4:	jb     0x419e8f
  419eb6:	arpl   WORD PTR [ecx+0x397a6e2b],sp
  419ebc:	push   0x4a
  419ebe:	pop    esp
  419ebf:	adc    cl,BYTE PTR [esi-0x109950b]
  419ec5:	sbb    al,0xcd
  419ec7:	adc    al,0xb4
  419ec9:	add    eax,0xd6ee3c93
  419ece:	ror    BYTE PTR [esi-0x21],1
  419ed1:	mov    cl,0x42
  419ed3:	jle    0x419eb7
  419ed5:	ret    
  419ed6:	popa   
  419ed7:	ss add edx,ebx
  419eda:	pop    eax
  419edb:	mov    ah,0x85
  419edd:	mov    edx,0x6af3adac
  419ee2:	fmul   QWORD PTR [ecx]
  419ee4:	(bad)  [edi-0x63952501]
  419eea:	aas    
  419eeb:	or     eax,DWORD PTR [eax-0x4902390b]
  419ef1:	lods   eax,DWORD PTR ds:[esi]
  419ef2:	scas   eax,DWORD PTR es:[edi]
  419ef3:	jb     0x419ef2
  419ef5:	popa   
  419ef6:	cmp    BYTE PTR [ecx+eiz*2+0x36],dh
  419efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419efb:	sub    al,0x65
  419efd:	inc    edi
  419efe:	ja     0x419eae
  419f00:	ret    
  419f01:	or     BYTE PTR [ecx+0x445b2491],dl
  419f07:	test   DWORD PTR [ecx],ebp
  419f09:	pusha  
  419f0a:	call   0xfe53:0x72d8efb1
  419f11:	shl    DWORD PTR [edi-0x62],1
  419f14:	cld    
  419f15:	les    ebp,FWORD PTR [ebp-0x79930dc1]
  419f1b:	iret   
  419f1c:	rcl    BYTE PTR [ebx+0x1a83ce20],cl
  419f22:	jae    0x419ec8
  419f24:	shr    DWORD PTR [ebx+0xa],cl
  419f27:	pop    ss
  419f28:	push   es
  419f29:	sub    BYTE PTR [di],dl
  419f2c:	pop    ss
  419f2d:	bound  esp,QWORD PTR [eax-0x684aff1c]
  419f33:	fsub   DWORD PTR [ebx]
  419f35:	mov    esi,0x23ea5f0e
  419f3a:	dec    edx
  419f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f3c:	ret    
  419f3d:	call   0xc173:0x22de34ea
  419f44:	push   ebp
  419f45:	jne    0x419f5b
  419f47:	cmp    BYTE PTR [edx],dh
  419f49:	rcl    DWORD PTR [esi],0x16
  419f4c:	cmp    bl,ch
  419f4e:	mov    eax,0x4e89d17a
  419f53:	das    
  419f54:	dec    ebp
  419f55:	sub    cl,0x56
  419f58:	hlt    
  419f59:	(bad)  
  419f5a:	sub    ah,0x76
  419f5d:	dec    esp
  419f5e:	inc    ebp
  419f5f:	stc    
  419f60:	ins    DWORD PTR es:[edi],dx
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	and    al,0x79
  419f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f65:	pop    es
  419f66:	inc    edi
  419f67:	cli    
  419f68:	add    ecx,DWORD PTR [ebp-0x48]
  419f6b:	inc    eax
  419f6c:	ret    0xe4ad
  419f6f:	gs fwait
  419f71:	mov    eax,ds:0xd1aaec7b
  419f76:	pop    eax
  419f77:	mov    ah,0xf6
  419f79:	adc    BYTE PTR [eax],ch
  419f7b:	fld    QWORD PTR [esi]
  419f7d:	pushf  
  419f7e:	mov    esp,0x1907f1ee
  419f83:	xor    BYTE PTR [edi],bl
  419f85:	adc    esi,DWORD PTR [ebx-0x55]
  419f88:	add    al,0xc6
  419f8a:	cdq    
  419f8b:	leave  
  419f8c:	dec    esi
  419f8d:	cld    
  419f8e:	ja     0x419f2f
  419f90:	int    0xd5
  419f92:	or     bl,al
  419f94:	dec    esp
  419f95:	imul   esi,DWORD PTR [edx],0x4
  419f98:	pop    eax
  419f99:	ud1    esi,ebp
  419f9c:	mov    ebp,0x7f087afd
  419fa1:	mov    dh,0x6a
  419fa3:	iret   
  419fa4:	xor    al,0x69
  419fa6:	jmp    0x886bc8d6
  419fab:	mov    ecx,0x352c2e1c
  419fb0:	mov    bl,0xbd
  419fb2:	retf   0xa91a
  419fb5:	ror    DWORD PTR [ebx],cl
  419fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb8:	or     esi,esi
  419fba:	inc    esi
  419fbb:	cld    
  419fbc:	clc    
  419fbd:	and    DWORD PTR [edx+0x35],ebp
  419fc0:	cwde   
  419fc1:	outs   dx,BYTE PTR ds:[esi]
  419fc2:	and    al,ch
  419fc4:	jae    0x41a02b
  419fc6:	pop    edi
  419fc7:	adc    eax,0xc13229c1
  419fcc:	bound  ebx,QWORD PTR [esi*1-0x20af5e4a]
  419fd3:	clc    
  419fd4:	pop    ds
  419fd5:	mov    al,ds:0x557a3918
  419fda:	test   ch,0xfb
  419fdd:	sbb    al,0xac
  419fdf:	clc    
  419fe0:	pop    ecx
  419fe1:	mov    edx,0xea16ab4e
  419fe6:	stc    
  419fe7:	jno    0x419fe0
  419fe9:	jns    0x41a023
  419feb:	pushf  
  419fec:	cmc    
  419fed:	mov    ecx,0xb55fffce
  419ff2:	push   0x4f49c1db
  419ff7:	or     eax,0xc67ad5a2
  419ffc:	fcom   DWORD PTR [edi-0x64]
  419fff:	push   ds
  41a000:	jno    0x41a06e
  41a002:	sub    BYTE PTR ds:[edi],al
  41a005:	inc    ebp
  41a006:	xlat   BYTE PTR ds:[ebx]
  41a007:	pop    edx
  41a008:	adc    al,0xe5
  41a00a:	loopne 0x41a009
  41a00c:	or     al,0x28
  41a00e:	aas    
  41a00f:	fcmovnbe st,st(6)
  41a011:	dec    edi
  41a012:	push   ds
  41a013:	or     BYTE PTR [eax+0x74],ch
  41a016:	mov    al,ds:0x8702d9d2
  41a01b:	and    eax,0x21c9cac1
  41a020:	stc    
  41a021:	lea    ebx,[ebx+0x16]
  41a024:	popf   
  41a025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a026:	std    
  41a027:	or     ebx,DWORD PTR [ecx]
  41a029:	cmovne ebp,DWORD PTR [edi+0x3a0851e3]
  41a030:	call   0x68cd:0x799323bf
  41a037:	pushf  
  41a038:	sbb    bh,ah
  41a03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a03b:	pushf  
  41a03c:	adc    eax,edi
  41a03e:	cmp    ebx,DWORD PTR [eax]
  41a040:	adc    esp,DWORD PTR ds:0x5c581ddc
  41a046:	cmp    BYTE PTR [ebp+edx*1-0x3d],al
  41a04a:	rcr    DWORD PTR [ebp-0x31b025d5],cl
  41a050:	push   esp
  41a051:	cld    
  41a052:	cld    
  41a053:	cmp    eax,0xc659c53c
  41a058:	mov    ebx,0xaed3177b
  41a05d:	push   eax
  41a05e:	js     0x41a0ac
  41a060:	dec    ebp
  41a061:	add    eax,DWORD PTR [ecx-0x31]
  41a064:	sub    BYTE PTR [ecx],ah
  41a066:	aad    0x20
  41a068:	mov    bh,0x17
  41a06a:	mov    bl,0x9c
  41a06c:	in     al,dx
  41a06d:	inc    ebp
  41a06e:	dec    ebp
  41a06f:	idiv   edi
  41a071:	mov    dh,0x8c
  41a073:	pop    ss
  41a074:	inc    ebp
  41a075:	push   ebx
  41a076:	push   esi
  41a077:	adc    esp,0x7b72cc9a
  41a07d:	arpl   sp,si
  41a07f:	xor    al,0xd4
  41a081:	std    
  41a082:	arpl   WORD PTR [esi+esi*1+0x5d],sp
  41a086:	cmp    BYTE PTR [edx],bh
  41a088:	call   0xd93a:0x5e961cf1
  41a08f:	mov    ah,0xa
  41a091:	jno    0x41a06c
  41a093:	imul   ebx,edi,0x57
  41a096:	add    BYTE PTR [edx],0x8e
  41a099:	xchg   esp,eax
  41a09a:	xor    BYTE PTR [eax-0x4e],0xe2
  41a09e:	mov    bl,BYTE PTR [ecx-0x1900cb52]
  41a0a4:	pop    eax
  41a0a5:	push   ss
  41a0a6:	outs   dx,DWORD PTR ds:[esi]
  41a0a7:	sbb    al,0xf9
  41a0a9:	and    al,0x7
  41a0ab:	ret    
  41a0ac:	bound  eax,QWORD PTR [esi+0x1d8ffa8b]
  41a0b2:	jnp    0x41a0f3
  41a0b4:	or     bl,ch
  41a0b6:	adc    DWORD PTR [esi],eax
  41a0b8:	push   esi
  41a0b9:	stos   BYTE PTR es:[edi],al
  41a0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0bb:	int    0x7a
  41a0bd:	cs das 
  41a0bf:	mov    edx,0xc1be5133
  41a0c4:	pushf  
  41a0c5:	ins    BYTE PTR es:[edi],dx
  41a0c6:	and    bl,BYTE PTR [ebx-0x21]
  41a0c9:	cmp    BYTE PTR [ebp+0x75],bh
  41a0cc:	xor    esi,0xa0de86de
  41a0d2:	add    DWORD PTR [ebp+0x14],0xffffff90
  41a0d6:	inc    ecx
  41a0d7:	out    0x1f,eax
  41a0d9:	into   
  41a0da:	add    eax,0x4c4822aa
  41a0df:	imul   esi,esp,0x37
  41a0e2:	sub    edi,edx
  41a0e4:	in     eax,0x91
  41a0e6:	mov    edi,0x6f029edc
  41a0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ec:	das    
  41a0ed:	push   es
  41a0ee:	dec    esi
  41a0ef:	icebp  
  41a0f0:	dec    ebp
  41a0f1:	mov    ebx,0x7102c296
  41a0f6:	or     BYTE PTR [ebp-0xe55b9e0],ch
  41a0fc:	fmul   DWORD PTR [ebp-0x10]
  41a0ff:	inc    esp
  41a100:	adc    DWORD PTR [esi+0x456b0b2f],esp
  41a106:	cmp    edx,esi
  41a108:	jo     0x41a0a1
  41a10a:	neg    DWORD PTR [ebp-0x37]
  41a10d:	add    BYTE PTR [ebx],0x9
  41a110:	dec    eax
  41a111:	push   esp
  41a112:	mov    eax,ds:0x45c4d9ef
  41a117:	out    0x4a,eax
  41a119:	cmc    
  41a11a:	dec    esp
  41a11b:	push   0x6e
  41a11d:	lock pop ss
  41a11f:	pop    DWORD PTR ss:[esi+0x11b2efb5]
  41a126:	inc    esi
  41a127:	pop    ss
  41a128:	push   edx
  41a129:	push   0xd7526e4
  41a12e:	sbb    ecx,0x3e
  41a131:	fnstcw WORD PTR [edi+ebx*1+0x2d9d95b3]
  41a138:	daa    
  41a139:	mov    eax,ds:0x678216ed
  41a13e:	xchg   BYTE PTR [eax-0x76610522],ah
  41a144:	mov    esp,0x11f6e651
  41a149:	mov    eax,ds:0x184da568
  41a14e:	imul   edi
  41a150:	cli    
  41a151:	shl    BYTE PTR [ebp+0x23],0xa7
  41a155:	fisubr WORD PTR [eax+0x6f]
  41a158:	cs fst st(0)
  41a15b:	outs   dx,DWORD PTR ds:[esi]
  41a15c:	in     eax,dx
  41a15d:	cmp    esp,DWORD PTR [edi+ebx*1-0xbec2f49]
  41a164:	fsubr  QWORD PTR ds:0x564f6deb
  41a16a:	add    eax,DWORD PTR ds:0xe93abddd
  41a170:	add    ch,BYTE PTR [edi]
  41a172:	jl     0x41a143
  41a174:	cmp    DWORD PTR [esp+eax*8-0x1afcd481],eax
  41a17b:	dec    esp
  41a17c:	xchg   ecx,eax
  41a17d:	std    
  41a17e:	mov    eax,0xe9a001f9
  41a183:	rol    edx,cl
  41a185:	call   0x7a4f9b6e
  41a18a:	xchg   ecx,eax
  41a18b:	test   eax,0x208db773
  41a190:	add    edx,esp
  41a192:	pop    ds
  41a193:	sbb    al,0xa8
  41a195:	adc    eax,0x67ff58dd
  41a19a:	cmc    
  41a19b:	dec    esi
  41a19c:	fs pusha 
  41a19e:	fwait
  41a19f:	jge    0x41a213
  41a1a1:	mov    ds:0xf9025e4,eax
  41a1a6:	fnsave [ecx]
  41a1a8:	adc    al,0xaa
  41a1aa:	and    eax,0x81084215
  41a1af:	iret   
  41a1b0:	(bad)  
  41a1b1:	adc    al,0xa9
  41a1b3:	mov    esi,0x72eca0a1
  41a1b8:	retf   
  41a1b9:	imul   ebp,DWORD PTR [esi+0x7854b58f],0xffffffc9
  41a1c0:	dec    edx
  41a1c1:	fisttp WORD PTR [eax]
  41a1c3:	or     al,0x76
  41a1c5:	pop    eax
  41a1c6:	out    dx,eax
  41a1c7:	mov    DWORD PTR [ecx],edi
  41a1c9:	push   edi
  41a1ca:	xchg   esp,eax
  41a1cb:	push   0x73
  41a1cd:	mov    dh,0x45
  41a1cf:	ins    DWORD PTR es:[edi],dx
  41a1d0:	ins    BYTE PTR es:[edi],dx
  41a1d1:	fistp  QWORD PTR [esi+0x36]
  41a1d4:	xchg   ebp,eax
  41a1d5:	call   0xd13b:0xa6aad171
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	or     ch,BYTE PTR [esp+eax*8-0xa]
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	mov    ds,WORD PTR [ebx-0x3a362f8d]
  41a219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21a:	retf   
  41a21b:	nop
  41a21c:	mov    cl,0x34
  41a21e:	mov    al,0x31
  41a220:	mov    ebp,0x4b2b5286
  41a225:	push   ss
  41a226:	arpl   WORD PTR [ebx],cx
  41a228:	(bad)  
  41a229:	aas    
  41a22a:	xor    al,BYTE PTR [ebx]
  41a22c:	repnz sub ebx,DWORD PTR [edx]
  41a22f:	stos   BYTE PTR es:[edi],al
  41a230:	push   0x4559fcaa
  41a235:	mov    ebp,0x694d3411
  41a23a:	xchg   eax,ecx
  41a23c:	(bad)  
  41a23d:	or     ebx,DWORD PTR [edi]
  41a23f:	sar    bh,0xde
  41a242:	or     BYTE PTR [ecx+0x76ed5196],al
  41a248:	ins    DWORD PTR es:[edi],dx
  41a249:	ss mov cl,0xce
  41a24c:	sub    al,0x4a
  41a24e:	into   
  41a24f:	fcom   DWORD PTR [edi+0x53]
  41a252:	cld    
  41a253:	lahf   
  41a254:	arpl   WORD PTR ds:0xf598b07b,dx
  41a25a:	gs dec esp
  41a25c:	jbe    0x41a29a
  41a25e:	outs   dx,BYTE PTR ds:[esi]
  41a25f:	sti    
  41a260:	adc    eax,0x98afb43f
  41a265:	inc    ebx
  41a266:	lds    esi,FWORD PTR [ecx-0x65]
  41a269:	fisttp WORD PTR [edi-0x7f]
  41a26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26d:	cmp    esi,DWORD PTR [ecx]
  41a26f:	scas   eax,DWORD PTR es:[edi]
  41a270:	outs   dx,DWORD PTR ds:[esi]
  41a271:	or     eax,0x8924e23f
  41a276:	mov    ah,0x34
  41a278:	fsubr  DWORD PTR [edx+0x49]
  41a27b:	xchg   edx,eax
  41a27c:	adc    esi,DWORD PTR [ebx+ecx*2-0x12a24e5f]
  41a283:	mov    bl,0x15
  41a285:	inc    ecx
  41a286:	in     eax,dx
  41a287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a288:	add    BYTE PTR [ebx],ah
  41a28a:	retf   
  41a28b:	mov    al,0xab
  41a28d:	sti    
  41a28e:	sub    eax,0xef7e6943
  41a293:	push   es
  41a294:	mov    bh,0x55
  41a296:	test   DWORD PTR [ebx+0x769d146b],ebp
  41a29c:	clc    
  41a29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a29e:	aaa    
  41a29f:	imul   eax,DWORD PTR [eax-0x60],0x126f800a
  41a2a6:	cmp    ebx,edi
  41a2a8:	into   
  41a2a9:	add    edi,edx
  41a2ab:	lods   eax,DWORD PTR ds:[esi]
  41a2ac:	pop    ecx
  41a2ad:	ror    BYTE PTR [eax+0x13533d1f],0xae
  41a2b4:	test   eax,0x2d79155f
  41a2b9:	pop    ecx
  41a2ba:	inc    ebx
  41a2bb:	call   0xd96c:0x28592bcc
  41a2c2:	mov    ds:0x74edac8d,eax
  41a2c7:	loope  0x41a301
  41a2c9:	push   0xffffff82
  41a2cb:	in     eax,dx
  41a2cc:	inc    ecx
  41a2cd:	sub    DWORD PTR [eax+0x10443f83],esi
  41a2d3:	pop    ss
  41a2d4:	xchg   ecx,eax
  41a2d5:	shr    BYTE PTR [ebp+0x39],cl
  41a2d8:	neg    BYTE PTR [ebx+edx*8-0x3d]
  41a2dc:	dec    eax
  41a2dd:	sar    ebp,0x67
  41a2e0:	lods   eax,DWORD PTR ds:[esi]
  41a2e1:	xlat   BYTE PTR ds:[ebx]
  41a2e2:	mov    eax,0xc43e8347
  41a2e7:	jbe    0x41a316
  41a2e9:	adc    al,dl
  41a2eb:	fsubrp st(0),st
  41a2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ee:	icebp  
  41a2ef:	and    BYTE PTR [eax],0x44
  41a2f2:	inc    ebp
  41a2f3:	push   edi
  41a2f4:	xchg   esi,eax
  41a2f5:	mov    BYTE PTR [ecx],dh
  41a2f7:	and    BYTE PTR [edi+0x4e681d21],dl
  41a2fd:	xchg   ebp,eax
  41a2fe:	xchg   BYTE PTR [ebx],ah
  41a300:	mov    al,ds:0x1df0bf62
  41a305:	sbb    BYTE PTR [edi-0x21],0x28
  41a309:	mov    ds:0x5feba91e,al
  41a30e:	sub    cl,dl
  41a310:	mov    bh,0x27
  41a312:	loope  0x41a339
  41a314:	mov    al,0xa7
  41a316:	popa   
  41a317:	xchg   ebx,eax
  41a318:	and    eax,0x58238a11
  41a31d:	lds    bx,DWORD PTR [esi-0x62606e0e]
  41a324:	add    al,0xac
  41a326:	(bad)  
  41a327:	mov    cl,0x13
  41a329:	xchg   esi,eax
  41a32a:	out    dx,al
  41a32b:	xchg   edi,eax
  41a32c:	lahf   
  41a32d:	xor    BYTE PTR [edx-0x51959691],bh
  41a333:	sbb    eax,0xd9c99005
  41a338:	out    dx,eax
  41a339:	loope  0x41a2f3
  41a33b:	cwde   
  41a33c:	dec    bh
  41a33e:	jecxz  0x41a340
  41a340:	pop    esp
  41a341:	scas   al,BYTE PTR es:[edi]
  41a342:	clc    
  41a343:	jb     0x41a337
  41a345:	call   0xe281:0x7cc71a53
  41a34c:	mov    cl,0x26
  41a34e:	xchg   ebp,eax
  41a34f:	mul    BYTE PTR [esi+0x47]
  41a352:	mov    esi,0x6134cebb
  41a357:	or     DWORD PTR [ecx+eiz*4-0x2d],ecx
  41a35b:	mov    bh,0x57
  41a35d:	xchg   esi,eax
  41a35e:	bound  edi,QWORD PTR [esi+0x62db4ba9]
  41a364:	pop    ss
  41a365:	(bad)  
  41a366:	mov    ebp,DWORD PTR [ebp+0x47]
  41a369:	jb     0x41a369
  41a36b:	add    BYTE PTR [eax-0x1a4e380f],0xae
  41a372:	mov    dl,0x83
  41a374:	inc    edi
  41a375:	inc    edi
  41a376:	div    ecx
  41a378:	fwait
  41a379:	pushf  
  41a37a:	loopne 0x41a3b6
  41a37c:	stc    
  41a37d:	shr    BYTE PTR [edi-0x4f6589a3],1
  41a383:	sub    al,0x15
  41a385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a386:	imul   eax,DWORD PTR [edx-0x4a],0xacd82c16
  41a38d:	xor    dh,0x23
  41a390:	mov    al,0x2e
  41a392:	sbb    al,0x13
  41a394:	inc    edx
  41a395:	mov    BYTE PTR [ecx],bl
  41a397:	jge    0x41a3ef
  41a399:	adc    al,0xa6
  41a39b:	cwde   
  41a39c:	mov    esi,0x650f8e08
  41a3a1:	add    DWORD PTR [ecx+0x76bfddf7],edi
  41a3a7:	nop
  41a3a8:	mov    dh,0x65
  41a3aa:	push   esp
  41a3ab:	add    eax,0x1a397edf
  41a3b0:	(bad)  
  41a3b2:	outs   dx,BYTE PTR ds:[esi]
  41a3b3:	xchg   ecx,eax
  41a3b4:	out    0x1,eax
  41a3b6:	push   cs
  41a3b7:	fidivr DWORD PTR ds:[edx+ebx*2+0x7f6d894f]
  41a3bf:	cs call 0x6174:0x6ca4f602
  41a3c7:	mov    ch,0x85
  41a3c9:	jle    0x41a3ce
  41a3cb:	pop    ss
  41a3cc:	jg     0x41a355
  41a3ce:	(bad)  
  41a3cf:	imul   esi,edx,0x14
  41a3d2:	rol    DWORD PTR [edx],1
  41a3d4:	xchg   ecx,eax
  41a3d5:	add    ch,BYTE PTR ds:0x695e396f
  41a3db:	std    
  41a3dc:	or     ah,BYTE PTR [esi]
  41a3de:	outs   dx,BYTE PTR ds:[esi]
  41a3df:	mov    esp,0xe4d734c2
  41a3e4:	test   BYTE PTR [ecx+0x75],al
  41a3e7:	mov    ch,0xa3
  41a3e9:	push   eax
  41a3ea:	scas   eax,DWORD PTR es:[edi]
  41a3eb:	sahf   
  41a3ec:	mov    edx,0x30d0b16f
  41a3f1:	test   BYTE PTR [eax-0xb982a41],al
  41a3f7:	mov    cl,0x5c
  41a3f9:	adc    al,0xe0
  41a3fb:	cdq    
  41a3fc:	mov    dl,0xbc
  41a3fe:	stos   BYTE PTR es:[edi],al
  41a3ff:	sti    
  41a400:	and    ah,al
  41a402:	adc    bl,bh
  41a404:	add    eax,0x54f279f7
  41a409:	into   
  41a40a:	pop    ds
  41a40b:	push   0xffffffdf
  41a40d:	cmp    al,0x5a
  41a40f:	inc    eax
  41a410:	mov    bh,0x4d
  41a412:	stos   BYTE PTR es:[edi],al
  41a413:	ror    DWORD PTR [edx-0x60f9e092],0x5f
  41a41a:	xlat   BYTE PTR ds:[ebx]
  41a41b:	pop    ds
  41a41c:	std    
  41a41d:	xchg   DWORD PTR [eax+0x398b6491],eax
  41a423:	xor    al,0x78
  41a425:	std    
  41a426:	xor    BYTE PTR [edx+0x2973e7aa],dl
  41a42c:	shr    BYTE PTR [eax+0x1452c652],1
  41a432:	xchg   esi,eax
  41a433:	es enter 0xae87,0xdf
  41a438:	out    0xa,al
  41a43a:	jnp    0x41a468
  41a43c:	or     eax,0x6591f3c6
  41a441:	fild   WORD PTR [ebx+0x1a60dc1c]
  41a447:	in     al,0x21
  41a449:	adc    BYTE PTR [ebp-0x21ea9350],dh
  41a44f:	add    al,BYTE PTR [ecx+0x41]
  41a452:	adc    BYTE PTR [eax+0x48f90830],ch
  41a458:	rcl    BYTE PTR [esi-0x4e8338f4],cl
  41a45e:	rep ins BYTE PTR es:[edi],dx
  41a460:	or     dl,BYTE PTR [edx+0xf]
  41a463:	adc    eax,DWORD PTR [ebp-0x54]
  41a466:	push   cs
  41a467:	xchg   ebx,eax
  41a468:	xchg   ecx,eax
  41a469:	(bad)  [eax-0x51a722b8]
  41a46f:	push   ebp
  41a470:	xlat   BYTE PTR ds:[ebx]
  41a471:	cmp    esi,DWORD PTR [edx+eiz*2+0x7e]
  41a475:	(bad)  
  41a476:	xor    dh,BYTE PTR [esp-0x19e75a5e]
  41a47d:	xor    al,0x40
  41a47f:	sub    BYTE PTR [esi+0xcdac9a8],bl
  41a485:	into   
  41a486:	cdq    
  41a487:	mov    dh,0x80
  41a489:	fwait
  41a48a:	inc    esi
  41a48b:	std    
  41a48c:	and    BYTE PTR [ecx-0x3341ffc0],0x3f
  41a493:	cmc    
  41a494:	mov    ebx,0xa789c818
  41a499:	jecxz  0x41a4bb
  41a49b:	or     edx,DWORD PTR [ebx-0x5e4aedc1]
  41a4a1:	cmp    BYTE PTR ds:0x37621603,bh
  41a4a7:	clc    
  41a4a8:	sbb    dl,BYTE PTR [esp+edx*8+0x3e]
  41a4ac:	mov    bh,0xde
  41a4ae:	mov    edi,DWORD PTR [edi+ebp*2]
  41a4b1:	repnz push ds
  41a4b3:	pop    es
  41a4b4:	imul   esp,DWORD PTR [eax],0x46
  41a4b7:	and    DWORD PTR [ecx+ebx*4],edx
  41a4ba:	mov    bl,0x9b
  41a4bc:	cmovl  eax,DWORD PTR [ebx]
  41a4bf:	scas   al,BYTE PTR es:[edi]
  41a4c0:	outs   dx,BYTE PTR ds:[esi]
  41a4c1:	sahf   
  41a4c2:	or     al,0xf1
  41a4c4:	mov    DWORD PTR [ebx],esp
  41a4c6:	icebp  
  41a4c7:	imul   esp,DWORD PTR [edx*8+0x41911e06],0x12
  41a4cf:	jmp    0x8cd8:0xb5ba76b2
  41a4d6:	pop    ss
  41a4d7:	in     eax,0x4a
  41a4d9:	jmp    0xf627f7b0
  41a4de:	jl     0x41a4a1
  41a4e0:	sti    
  41a4e1:	cmp    BYTE PTR [ebx],cl
  41a4e3:	jmp    FWORD PTR [edi+ebx*8+0x7a9f2bb9]
  41a4ea:	adc    BYTE PTR [edx-0x5b],dh
  41a4ed:	ror    DWORD PTR [edi-0x7b],1
  41a4f0:	mov    al,ds:0x72f550db
  41a4f5:	imul   edx,DWORD PTR [ecx+0xce36365],0xd478f8f5
  41a4ff:	das    
  41a500:	inc    ebp
  41a501:	jo     0x41a4b4
  41a503:	(bad)  
  41a504:	xchg   edx,eax
  41a505:	mov    ch,0x91
  41a507:	addr16 in eax,0xb4
  41a50a:	mov    eax,ds:0xc4165c53
  41a50f:	mov    ch,0x59
  41a511:	int    0x2f
  41a513:	sub    al,0xe8
  41a515:	retf   0x27b5
  41a518:	xor    eax,0x685351e8
  41a51d:	aam    0x52
  41a51f:	jmp    0x41a4ed
  41a521:	das    
  41a522:	das    
  41a523:	dec    eax
  41a524:	push   ecx
  41a525:	ja     0x41a575
  41a527:	push   esp
  41a528:	je     0x41a4ea
  41a52a:	je     0x41a4ac
  41a52c:	jbe    0x41a540
  41a52e:	xchg   edi,eax
  41a52f:	mov    edi,DWORD PTR [ecx*2-0x46d6cfe]
  41a536:	mov    dl,0x6
  41a538:	lods   eax,DWORD PTR ds:[esi]
  41a539:	mov    eax,ds:0xa68df4c4
  41a53e:	fsubr  st(6),st
  41a540:	add    ch,BYTE PTR [ecx+0x7cf85c91]
  41a546:	mov    eax,0x14b0c50c
  41a54b:	call   0x6cc3:0x79346226
  41a552:	dec    eax
  41a553:	pop    esi
  41a554:	retf   
  41a555:	ins    DWORD PTR es:[edi],dx
  41a556:	stc    
  41a557:	jnp    0x41a4ed
  41a559:	aaa    
  41a55a:	pushf  
  41a55b:	ss nop
  41a55d:	xlat   BYTE PTR ds:[ebx]
  41a55e:	ficom  WORD PTR [ebx]
  41a560:	ins    DWORD PTR es:[edi],dx
  41a561:	jbe    0x41a5b4
  41a563:	outs   dx,DWORD PTR ds:[esi]
  41a564:	cwde   
  41a565:	xchg   edi,eax
  41a566:	scas   al,BYTE PTR es:[edi]
  41a567:	js     0x41a588
  41a569:	or     bl,BYTE PTR [ebx-0x68]
  41a56c:	dec    ecx
  41a56d:	rcl    BYTE PTR [edx-0x2bddc413],1
  41a573:	rol    DWORD PTR [ebx],1
  41a575:	xor    eax,0xf2a0b555
  41a57a:	inc    ebx
  41a57b:	xor    BYTE PTR [esi+0x6fc6304],bh
  41a581:	push   ss
  41a582:	jecxz  0x41a5d3
  41a584:	je     0x41a561
  41a586:	xchg   ah,cl
  41a588:	(bad)  
  41a589:	fisub  DWORD PTR [eax-0x5155db5d]
  41a58f:	adc    eax,0xbf20ff4
  41a594:	pop    edi
  41a595:	fcmovnu st,st(2)
  41a597:	stc    
  41a598:	or     DWORD PTR [ebx-0x45],0x1a
  41a59c:	in     eax,dx
  41a59d:	loope  0x41a5fd
  41a59f:	je     0x41a5fd
  41a5a1:	into   
  41a5a2:	std    
  41a5a3:	mov    dh,0x71
  41a5a5:	test   BYTE PTR [eax+0xd],0x7b
  41a5a9:	push   ss
  41a5aa:	into   
  41a5ab:	(bad)
  41a5af:	fistp  QWORD PTR [ebx]
  41a5b1:	(bad)  
  41a5b2:	ds pop esi
  41a5b4:	inc    esp
  41a5b5:	fcomp  QWORD PTR [ebx-0x52]
  41a5b8:	add    eax,DWORD PTR [eax+edi*1]
  41a5bb:	pusha  
  41a5bc:	jns    0x41a5fc
  41a5be:	loopne 0x41a56a
  41a5c0:	pop    es
  41a5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5c2:	and    eax,0x2b33fa21
  41a5c7:	mov    ch,0x7
  41a5c9:	inc    ecx
  41a5ca:	dec    esi
  41a5cb:	jp     0x41a61b
  41a5cd:	sbb    dl,BYTE PTR [esi-0x5a]
  41a5d0:	retf   0x3bfc
  41a5d3:	test   eax,0xe6a9093a
  41a5d8:	push   0x59057d27
  41a5dd:	push   ebp
  41a5de:	dec    esp
  41a5df:	sahf   
  41a5e0:	mov    bl,0x37
  41a5e2:	add    eax,0xc5efec0e
  41a5e7:	mov    BYTE PTR [ecx-0x6a],ch
  41a5ea:	xor    eax,0xa55ebde9
  41a5ef:	xchg   edx,eax
  41a5f0:	arpl   WORD PTR [esi-0x7],bp
  41a5f3:	pop    eax
  41a5f4:	xchg   edx,eax
  41a5f5:	or     DWORD PTR cs:[esi+edx*2],0x66227860
  41a5fd:	sahf   
  41a5fe:	rcl    BYTE PTR [edx+0x47],1
  41a601:	bound  esp,QWORD PTR [eax+ecx*2]
  41a604:	int3   
  41a605:	xor    BYTE PTR cs:[edx],bh
  41a608:	(bad)  
  41a609:	mov    ebx,0x2b8694f8
  41a60e:	add    DWORD PTR [eax],ebp
  41a610:	xchg   edi,eax
  41a611:	fwait
  41a612:	or     eax,0xacbc2331
  41a617:	sti    
  41a618:	xor    ebx,DWORD PTR [ecx*1+0x40e4f334]
  41a61f:	sti    
  41a620:	sub    ch,BYTE PTR [ecx+eax*4+0x12]
  41a624:	add    dl,BYTE PTR ds:0x78ef0e03
  41a62a:	xchg   edx,eax
  41a62b:	push   ebp
  41a62c:	xor    BYTE PTR [eax-0x45],cl
  41a62f:	sbb    al,0x20
  41a631:	or     eax,0x72ffd02d
  41a636:	gs or  al,0x8d
  41a639:	mov    ds:0x27b02ca5,al
  41a63e:	push   edi
  41a63f:	xlat   BYTE PTR ds:[ebx]
  41a640:	fwait
  41a641:	cmp    ecx,0xa3c37159
  41a647:	or     DWORD PTR [ebp+0x7a],esi
  41a64a:	cld    
  41a64b:	ss mov bh,0x39
  41a64e:	pop    ebx
  41a64f:	inc    ebx
  41a650:	xor    eax,0xe3e37b06
  41a655:	bound  eax,QWORD PTR [ebp+0x75]
  41a658:	jmp    0xc2e2:0xb659d681
  41a65f:	fistp  QWORD PTR [ecx+0x2389b282]
  41a665:	pop    ebp
  41a666:	out    dx,al
  41a667:	adc    al,0xcd
  41a669:	fwait
  41a66a:	jecxz  0x41a6e4
  41a66c:	out    dx,eax
  41a66d:	adc    eax,0x2d7b84ff
  41a672:	sub    al,BYTE PTR [ecx]
  41a674:	pop    edx
  41a675:	fs push edx
  41a677:	dec    ebp
  41a678:	cmp    DWORD PTR [eax-0x6f],0xcfafa1e4
  41a67f:	jno    0x41a6e9
  41a681:	sahf   
  41a682:	push   ebp
  41a683:	inc    esp
  41a684:	adc    DWORD PTR [edx],ecx
  41a686:	jns    0x41a624
  41a688:	mov    esi,0xb3f8a6ae
  41a68d:	retf   
  41a68e:	(bad)  
  41a68f:	fwait
  41a690:	mov    al,ds:0x7c5d9301
  41a695:	loope  0x41a67a
  41a697:	fdivr  DWORD PTR [ebp-0x4964a77b]
  41a69d:	xor    eax,0x4a117c8f
  41a6a2:	scas   eax,DWORD PTR es:[edi]
  41a6a3:	jmp    DWORD PTR [edx]
  41a6a5:	push   esi
  41a6a6:	mov    ah,0x73
  41a6a8:	imul   eax,DWORD PTR [ebx-0x13a13cda],0xbd3de2ca
  41a6b2:	mov    DWORD PTR [edi-0x2e0a1f56],esp
  41a6b8:	or     eax,DWORD PTR [ecx+0x76]
  41a6bb:	inc    ecx
  41a6bc:	call   DWORD PTR [esi+0x29]
  41a6bf:	mov    esi,0xe4b2142f
  41a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c5:	call   0x7d2:0x60e4cc15
  41a6cc:	int3   
  41a6cd:	or     dl,BYTE PTR [esi-0x75]
  41a6d0:	push   edx
  41a6d1:	inc    esi
  41a6d2:	lahf   
  41a6d3:	pop    es
  41a6d4:	scas   eax,DWORD PTR es:[edi]
  41a6d5:	push   ecx
  41a6d6:	into   
  41a6d7:	fucomp st(7)
  41a6d9:	das    
  41a6da:	in     eax,dx
  41a6db:	jne    0x41a665
  41a6dd:	js     0x41a72d
  41a6df:	ins    WORD PTR es:[edi],dx
  41a6e1:	mov    bh,0xd
  41a6e3:	mov    DWORD PTR [eax+0x25],ecx
  41a6e6:	xchg   edi,eax
  41a6e7:	retf   
  41a6e8:	(bad)  
  41a6e9:	pop    ebp
  41a6ea:	mov    edx,DWORD PTR [ebx-0x35]
  41a6ed:	jb     0x41a6c2
  41a6ef:	or     DWORD PTR [edx+0x37af8fed],edi
  41a6f5:	mov    eax,ds:0xb5a0ec3d
  41a6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6fb:	hlt    
  41a6fc:	into   
  41a6fd:	or     BYTE PTR [ecx+0x6b],dh
  41a700:	test   DWORD PTR [edi+0x135af8dd],esp
  41a706:	jb     0x41a770
  41a708:	pop    edx
  41a709:	clc    
  41a70a:	push   eax
  41a70b:	pop    esi
  41a70c:	mov    al,ds:0xe26ab215
  41a711:	push   0xffffffee
  41a713:	pop    ebp
  41a714:	xchg   ebp,eax
  41a715:	inc    ecx
  41a716:	call   0xeb2772cd
  41a71b:	push   ebx
  41a71c:	test   al,0xb6
  41a71e:	fidiv  WORD PTR [ebx+0x76]
  41a721:	adc    esi,DWORD PTR [eax-0x26]
  41a724:	repz mov ecx,DWORD PTR [esi+0x250ce43f]
  41a72b:	sub    dl,BYTE PTR [ecx-0x32]
  41a72e:	or     ecx,DWORD PTR [edx+0x65516cc6]
  41a734:	aad    0x7c
  41a736:	je     0x41a79b
  41a738:	xlat   BYTE PTR ds:[ebx]
  41a739:	xor    al,0x20
  41a73b:	push   ecx
  41a73c:	bound  esi,QWORD PTR [ecx+esi*1-0xa976859]
  41a743:	xor    DWORD PTR [edi-0x12],esp
  41a746:	(bad)  
  41a747:	fbld   TBYTE PTR [ebp-0x7b82dcbe]
  41a74d:	test   eax,0xd8a12f17
  41a752:	push   ebx
  41a753:	test   al,0x48
  41a755:	jl     0x41a736
  41a757:	inc    edx
  41a758:	xchg   DWORD PTR [ecx-0xab7b9a3],ebp
  41a75e:	es mov esp,0x51d34388
  41a764:	mov    ss,WORD PTR [edi-0x61]
  41a767:	jg     0x41a7c3
  41a769:	mov    bh,0x23
  41a76b:	lock xor eax,0xa2e35274
  41a771:	sbb    al,0x1d
  41a773:	js     0x41a70f
  41a775:	jmp    0xf3787807
  41a77a:	sub    esp,esi
  41a77c:	push   ecx
  41a77d:	mov    ds:0x56cbd2e5,al
  41a782:	ds sti 
  41a784:	or     al,0x8f
  41a786:	pop    ss
  41a787:	mov    bl,BYTE PTR [ebx-0x45e9fa2b]
  41a78d:	mov    edi,0x7d47ca63
  41a792:	lock ds push 0x60d13332
  41a799:	je     0x41a76f
  41a79b:	dec    esi
  41a79c:	jne    0x41a739
  41a79e:	or     eax,0x13e531c4
  41a7a3:	call   0x720f:0xddfd60b9
  41a7aa:	ss (bad) 
  41a7ac:	hlt    
  41a7ad:	ins    DWORD PTR es:[edi],dx
  41a7ae:	mov    ds:0x11c112f4,eax
  41a7b3:	dec    ebp
  41a7b4:	hlt    
  41a7b5:	xchg   DWORD PTR [ebx-0x42],eax
  41a7b8:	adc    edx,esi
  41a7ba:	test   al,0x49
  41a7bc:	fs xor bl,ch
  41a7bf:	out    dx,al
  41a7c0:	jmp    0x6cf4:0x7087ad70
  41a7c7:	jecxz  0x41a81c
  41a7c9:	test   DWORD PTR [eax+0x3f],edx
  41a7cc:	or     al,0x6a
  41a7ce:	out    0xa7,al
  41a7d0:	mov    edx,0xa3cdf1cf
  41a7d5:	pop    DWORD PTR [edi+eiz*2]
  41a7d8:	in     al,0xc
  41a7da:	jns    0x41a811
  41a7dc:	xor    BYTE PTR [ebx-0xb],al
  41a7df:	fadd   st(4),st
  41a7e1:	inc    edi
  41a7e2:	mul    BYTE PTR [edx+0x40]
  41a7e5:	mov    esi,0xe687ec65
  41a7ea:	dec    esi
  41a7eb:	add    esi,esp
  41a7ed:	ins    DWORD PTR es:[edi],dx
  41a7ee:	sub    DWORD PTR [ebx-0x6716ea6a],eax
  41a7f4:	and    al,0xb3
  41a7f6:	sbb    BYTE PTR ds:0xf8e46dd4,0x7c
  41a7fd:	pop    ebx
  41a7fe:	xchg   edi,eax
  41a7ff:	sbb    dl,ah
  41a801:	iret   
  41a802:	aaa    
  41a803:	xchg   esi,eax
  41a804:	xor    eax,0xd4d6c71e
  41a809:	xchg   esi,eax
  41a80a:	cmc    
  41a80b:	mov    bh,0xd3
  41a80d:	dec    eax
  41a80e:	test   eax,0xf3a55453
  41a813:	pop    edx
  41a814:	pop    eax
  41a815:	daa    
  41a816:	sbb    cl,BYTE PTR [esi-0x7a]
  41a819:	aad    0xa6
  41a81b:	mov    edi,0x1665cbab
  41a820:	mov    edx,0xf62cc069
  41a825:	or     DWORD PTR [ebx-0x40],eax
  41a828:	mov    cl,dh
  41a82a:	imul   esp,DWORD PTR [ebp-0x1f],0xfc995b59
  41a831:	add    DWORD PTR [edx-0x5d353d8c],edi
  41a837:	ret    0x7eb6
  41a83a:	repnz adc DWORD PTR [ebx+0x521c3a5c],ecx
  41a841:	pusha  
  41a842:	jno    0x41a7c7
  41a844:	xor    al,0x6a
  41a846:	mov    esi,0x1e79b325
  41a84b:	out    dx,al
  41a84c:	cmp    dl,BYTE PTR [esp+edx*4]
  41a84f:	pop    ebx
  41a850:	sbb    al,0x9c
  41a852:	dec    esp
  41a853:	mov    edi,0xd747ccc3
  41a858:	stc    
  41a859:	out    0x52,eax
  41a85b:	je     0x41a81f
  41a85d:	test   ebp,edx
  41a85f:	lahf   
  41a860:	push   es
  41a861:	push   ecx
  41a862:	adc    edi,DWORD PTR [eax-0x8]
  41a865:	push   ds
  41a866:	mov    dl,0x52
  41a868:	add    DWORD PTR [ebx+0x4d],ecx
  41a86b:	cdq    
  41a86c:	xchg   ecx,esi
  41a86e:	mov    edx,0xfbfb86f8
  41a873:	jo     0x41a8be
  41a875:	add    eax,0x50c54ceb
  41a87a:	outs   dx,BYTE PTR ds:[esi]
  41a87b:	sub    al,0x8b
  41a87d:	jge    0x41a842
  41a87f:	or     BYTE PTR [edi+0x6fac13a5],ah
  41a885:	sub    eax,0x6a7ce615
  41a88a:	mov    bh,0x77
  41a88c:	cli    
  41a88d:	xor    al,0xa9
  41a88f:	cs cmp al,0xfb
  41a892:	add    cl,BYTE PTR ds:0xa6193260
  41a898:	outs   dx,DWORD PTR ds:[esi]
  41a899:	out    dx,eax
  41a89a:	add    dl,BYTE PTR [ecx-0x62]
  41a89d:	jae    0x41a8f9
  41a89f:	and    esi,DWORD PTR [ebx]
  41a8a1:	cmp    DWORD PTR [ebx-0x57],ecx
  41a8a4:	adc    cl,BYTE PTR [edi-0x68]
  41a8a7:	mov    esi,0x849be4b7
  41a8ac:	stc    
  41a8ad:	jecxz  0x41a8e7
  41a8af:	sbb    bh,BYTE PTR [ebx-0x1e]
  41a8b2:	lahf   
  41a8b3:	mov    bl,0xe1
  41a8b5:	mov    ebp,0x7ae186fd
  41a8ba:	cmp    bl,bl
  41a8bc:	fisub  DWORD PTR [esi]
  41a8be:	mov    DWORD PTR [eax-0x57],0xd142c2b8
  41a8c5:	jmp    0x90d3:0xac92401e
  41a8cc:	jae    0x41a8da
  41a8ce:	jle    0x41a89e
  41a8d0:	popf   
  41a8d1:	push   es
  41a8d2:	mov    ebp,0xd32daa09
  41a8d7:	xchg   DWORD PTR [ebx+0x13],esp
  41a8da:	ss or  eax,0xc9ea0b4
  41a8e0:	push   esi
  41a8e1:	lods   al,BYTE PTR ds:[esi]
  41a8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e3:	sbb    dh,ch
  41a8e5:	out    dx,eax
  41a8e6:	jmp    0x7b4b395
  41a8eb:	sub    BYTE PTR [edi],bh
  41a8ed:	push   ecx
  41a8ee:	mov    ?,WORD PTR [eax+ecx*8+0x69]
  41a8f2:	shl    DWORD PTR [edx],0xc1
  41a8f5:	xlat   BYTE PTR ds:[ebx]
  41a8f6:	inc    eax
  41a8f7:	popf   
  41a8f8:	imul   ebp,DWORD PTR [edi-0x4c],0xffffffe4
  41a8fc:	pop    ebx
  41a8fd:	cmp    al,BYTE PTR ds:0xef72432e
  41a903:	mov    BYTE PTR [esi-0x4a],bl
  41a906:	sub    eax,0xd54583a5
  41a90b:	ficom  WORD PTR [ebx-0x1d9c0a84]
  41a911:	pop    es
  41a912:	enter  0xd28f,0xe4
  41a916:	push   es
  41a917:	mov    bh,al
  41a919:	sbb    dl,ah
  41a91b:	nop
  41a91c:	inc    edi
  41a91d:	cwde   
  41a91e:	inc    esi
  41a91f:	ins    BYTE PTR es:[edi],dx
  41a920:	mov    ?,WORD PTR [ebx+edi*4+0x27b65fb1]
  41a927:	leave  
  41a928:	div    DWORD PTR [edi-0x68485ff9]
  41a92e:	cli    
  41a92f:	sbb    al,0x94
  41a931:	jnp    0x41a91a
  41a933:	or     BYTE PTR [edi],ah
  41a935:	jbe    0x41a939
  41a937:	adc    ecx,DWORD PTR ds:0x71c32139
  41a93d:	sbb    eax,DWORD PTR [ebx-0x23]
  41a940:	jae    0x41a972
  41a942:	mov    eax,0x6d5a787
  41a947:	xchg   ebp,eax
  41a948:	test   eax,0x360ac180
  41a94d:	mov    ds:0x2ae36160,al
  41a952:	stc    
  41a953:	xchg   edx,eax
  41a954:	sti    
  41a955:	jb     0x41a9bc
  41a957:	js     0x41a973
  41a959:	mov    edx,0x68a804cf
  41a95e:	pushf  
  41a95f:	mov    ds:0xe0e81dc8,al
  41a964:	pop    edi
  41a965:	mov    cl,0xf9
  41a967:	lods   eax,DWORD PTR ds:[esi]
  41a968:	fs es leave 
  41a96b:	(bad)  
  41a96c:	cmc    
  41a96d:	xor    eax,0xa973a8a8
  41a972:	mov    DWORD PTR [ebp+0x15],0x88a65157
  41a979:	xor    esi,DWORD PTR [esi]
  41a97b:	xor    al,0x87
  41a97d:	repz pop es
  41a97f:	lahf   
  41a980:	sbb    eax,0xc88eb2fb
  41a985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a986:	dec    DWORD PTR [eax-0x48]
  41a989:	outs   dx,DWORD PTR ds:[esi]
  41a98a:	mov    bx,0x2f1
  41a98e:	xchg   DWORD PTR [edx-0x1f],esi
  41a991:	mov    dl,0xe2
  41a993:	push   0x1708d969
  41a998:	mov    al,BYTE PTR [ebp+0x10]
  41a99b:	int    0xb
  41a99d:	mov    ah,BYTE PTR [edx+ecx*4+0x38]
  41a9a1:	inc    esi
  41a9a2:	in     eax,0x64
  41a9a4:	push   edi
  41a9a5:	loope  0x41a9a9
  41a9a7:	inc    ebp
  41a9a8:	xor    al,0xcb
  41a9aa:	dec    eax
  41a9ab:	pop    ebx
  41a9ac:	cmp    eax,0x8eec0bc4
  41a9b1:	xchg   esp,eax
  41a9b2:	imul   esp,DWORD PTR [edx],0x1d
  41a9b5:	push   esp
  41a9b6:	leave  
  41a9b7:	xlat   BYTE PTR ds:[ebx]
  41a9b8:	push   ds
  41a9b9:	rcl    BYTE PTR [ebx],1
  41a9bb:	les    esi,FWORD PTR [eax-0x7]
  41a9be:	iret   
  41a9bf:	lds    ecx,FWORD PTR [eax+0x78]
  41a9c2:	cmp    ebx,DWORD PTR [ebx-0x365e75dd]
  41a9c8:	adc    ecx,DWORD PTR [edx]
  41a9ca:	jb     0x41a971
  41a9cc:	inc    esp
  41a9cd:	in     al,0xb3
  41a9cf:	pop    ebx
  41a9d0:	inc    edx
  41a9d1:	cwde   
  41a9d2:	and    ch,BYTE PTR [edx-0x6c]
  41a9d5:	push   ds
  41a9d6:	arpl   bp,ax
  41a9d8:	inc    ecx
  41a9d9:	fnstsw WORD PTR [eax]
  41a9db:	outs   dx,BYTE PTR ds:[esi]
  41a9dc:	bound  ecx,QWORD PTR [ecx-0x11]
  41a9df:	test   al,0x57
  41a9e1:	retf   0xce4f
  41a9e4:	inc    esp
  41a9e5:	or     dl,bh
  41a9e7:	add    BYTE PTR [ebx+0x5a],ah
  41a9ea:	imul   ebx,esp,0x3fe6b61
  41a9f0:	sbb    bh,BYTE PTR [edi+eax*2+0x305657b1]
  41a9f7:	aaa    
  41a9f8:	scas   al,BYTE PTR es:[edi]
  41a9f9:	jbe    0x41a9de
  41a9fb:	enter  0x108b,0xfd
  41a9ff:	mul    esp
  41aa01:	sub    eax,0x7a5b1954
  41aa06:	inc    edx
  41aa07:	inc    ecx
  41aa08:	outs   dx,DWORD PTR ds:[esi]
  41aa09:	mov    ch,0xa9
  41aa0b:	je     0x41aa47
  41aa0d:	out    dx,eax
  41aa0e:	mov    bh,BYTE PTR [ebx+0x44]
  41aa11:	mov    BYTE PTR [ebp+0x20e0129],dh
  41aa17:	(bad)  
  41aa18:	xor    dh,BYTE PTR [edx]
  41aa1a:	shl    DWORD PTR [eax-0x13],0x7
  41aa1e:	stos   DWORD PTR es:[edi],eax
  41aa1f:	mov    ds:0x552c42cd,al
  41aa24:	or     eax,0x73e5e60a
  41aa29:	(bad)  
  41aa2a:	daa    
  41aa2b:	adc    al,0x5c
  41aa2d:	cmp    al,0x2a
  41aa2f:	pushf  
  41aa30:	retf   
  41aa31:	call   0x4552101
  41aa36:	out    dx,eax
  41aa37:	outs   dx,BYTE PTR ds:[esi]
  41aa38:	and    dl,BYTE PTR [esi]
  41aa3a:	aam    0xf7
  41aa3c:	jo     0x41a9f7
  41aa3e:	out    dx,al
  41aa3f:	sbb    ebx,DWORD PTR [ecx]
  41aa41:	inc    edi
  41aa42:	or     al,0x20
  41aa44:	mov    eax,ds:0xf4f60251
  41aa49:	fdivrp st(0),st
  41aa4b:	or     eax,edi
  41aa4d:	push   ss
  41aa4e:	mov    bh,0x1d
  41aa50:	jmp    0x8087:0xf0b507fe
  41aa57:	fsubrp st(3),st
  41aa59:	shl    DWORD PTR [eax-0x42],cl
  41aa5c:	push   esi
  41aa5d:	xor    al,0x6e
  41aa5f:	inc    edi
  41aa60:	and    BYTE PTR [ebp+0x391538a9],cl
  41aa66:	dec    ebx
  41aa67:	(bad)  
  41aa68:	dec    edi
  41aa69:	xor    dh,al
  41aa6b:	daa    
  41aa6c:	pop    ebp
  41aa6d:	sbb    al,0xcb
  41aa6f:	inc    ecx
  41aa70:	loope  0x41aae0
  41aa72:	pop    ebx
  41aa73:	out    dx,eax
  41aa74:	(bad)  
  41aa75:	pop    edi
  41aa76:	in     eax,dx
  41aa77:	and    eax,0xc6fe077
  41aa7c:	dec    ecx
  41aa7d:	jg     0x41aae3
  41aa7f:	loopne 0x41aa2a
  41aa81:	cmp    al,0xa5
  41aa83:	inc    ecx
  41aa84:	in     al,dx
  41aa85:	pop    ss
  41aa86:	paddb  mm5,QWORD PTR [ebx-0x7d]
  41aa8a:	cmp    eax,0x975adb25
  41aa8f:	push   ecx
  41aa90:	xor    al,0xd6
  41aa92:	mov    edi,0x5a1128dd
  41aa97:	hlt    
  41aa98:	pop    ebx
  41aa99:	pop    ds
  41aa9a:	stos   BYTE PTR es:[edi],al
  41aa9b:	int3   
  41aa9c:	dec    esp
  41aa9d:	int    0x8
  41aa9f:	push   edx
  41aaa0:	(bad)  fs:[ebp+0x48]
  41aaa4:	in     eax,dx
  41aaa5:	aaa    
  41aaa6:	jl     0x41aa2d
  41aaa8:	adc    ebx,DWORD PTR [ecx]
  41aaaa:	cmp    BYTE PTR [ebp+0x240cb85a],ah
  41aab0:	test   al,0xaf
  41aab2:	sub    ecx,DWORD PTR [edi+0x56]
  41aab5:	cmc    
  41aab6:	dec    ecx
  41aab7:	jmp    0xf2ac8938
  41aabc:	sti    
  41aabd:	cmp    bh,bl
  41aabf:	shr    ebx,1
  41aac1:	cmp    ah,BYTE PTR [ebp+eiz*1+0x1b]
  41aac5:	mov    esp,0xc1706599
  41aaca:	aas    
  41aacb:	jb     0x41aa56
  41aacd:	lahf   
  41aace:	fisttp DWORD PTR [esi+0xb]
  41aad1:	mov    dl,0x88
  41aad3:	cmp    BYTE PTR [eax],dl
  41aad5:	cmove  esi,DWORD PTR [esi+ebp*1]
  41aad9:	clc    
  41aada:	or     DWORD PTR [ecx],0x7972a86f
  41aae0:	push   0x66
  41aae2:	cwde   
  41aae3:	lock (bad) 
  41aae5:	xor    DWORD PTR [ecx-0x76],edx
  41aae8:	fisttp DWORD PTR [esi-0x3d]
  41aaeb:	push   cs
  41aaec:	dec    BYTE PTR [ecx-0x834898c]
  41aaf2:	and    eax,0x2ae8af6a
  41aaf7:	xor    al,BYTE PTR [ecx-0x74]
  41aafa:	dec    ebx
  41aafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aafc:	xchg   esi,eax
  41aafd:	retf   0xbc91
  41ab00:	or     eax,0x73455116
  41ab05:	stc    
  41ab06:	icebp  
  41ab07:	test   eax,ebx
  41ab09:	pop    edi
  41ab0a:	jge    0x41ab3b
  41ab0c:	aaa    
  41ab0d:	lods   al,BYTE PTR ds:[esi]
  41ab0e:	js     0x41ab22
  41ab10:	adc    DWORD PTR [eax-0x508fb988],edx
  41ab16:	or     eax,0x6af17156
  41ab1b:	or     esp,edx
  41ab1d:	jns    0x41aabe
  41ab1f:	jb     0x41aabd
  41ab21:	dec    eax
  41ab22:	into   
  41ab23:	(bad)  
  41ab25:	aas    
  41ab26:	into   
  41ab27:	pop    eax
  41ab28:	fild   WORD PTR [ecx-0x1edc05aa]
  41ab2e:	sub    DWORD PTR [edx+0x2745acc3],ebx
  41ab34:	or     eax,0x6fa6d89
  41ab39:	xchg   BYTE PTR [edx+0x2f],dh
  41ab3c:	test   BYTE PTR [edi],cl
  41ab3e:	jl     0x41aba3
  41ab40:	sbb    al,0x86
  41ab42:	fldenv [ebx]
  41ab44:	int    0x7a
  41ab46:	and    cl,bh
  41ab48:	jo     0x41ab5a
  41ab4a:	adc    esi,DWORD PTR [eax-0xbc1710b]
  41ab50:	mov    WORD PTR [edx+0x25],?
  41ab53:	and    esi,ebx
  41ab55:	sub    BYTE PTR [esi],bh
  41ab57:	enter  0xf0ff,0x58
  41ab5b:	iret   
  41ab5c:	cmp    DWORD PTR [eax],esi
  41ab5e:	xchg   esi,eax
  41ab5f:	xor    eax,0xd7b4df25
  41ab64:	or     edx,DWORD PTR [eax+0x50]
  41ab67:	neg    ecx
  41ab69:	in     eax,dx
  41ab6a:	in     al,0x82
  41ab6c:	xchg   ecx,eax
  41ab6d:	mov    ds:0xfd4c5c81,al
  41ab72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab74:	and    eax,0x71159f07
  41ab7a:	fwait
  41ab7b:	inc    esi
  41ab7c:	test   al,0x79
  41ab7e:	sahf   
  41ab7f:	dec    esi
  41ab80:	or     BYTE PTR [ecx-0x27],dl
  41ab83:	dec    dx
  41ab85:	es aaa 
  41ab87:	jb     0x41ab1b
  41ab89:	ss icebp 
  41ab8b:	xor    BYTE PTR [ecx+edx*4],dh
  41ab8e:	mov    ch,0x9e
  41ab90:	add    bh,BYTE PTR [ecx-0x45]
  41ab93:	in     al,dx
  41ab94:	(bad)  
  41ab95:	jmp    0x2b16ded3
  41ab9a:	nop
  41ab9b:	lods   eax,DWORD PTR cs:[esi]
  41ab9d:	sub    BYTE PTR [eax+eiz*8],dl
  41aba0:	push   ds
  41aba1:	cmp    edx,edx
  41aba3:	sbb    edi,DWORD PTR [eax]
  41aba5:	xlat   BYTE PTR ds:[ebx]
  41aba6:	leave  
  41aba7:	mov    bl,0xd
  41aba9:	in     eax,0x6e
  41abab:	dec    eax
  41abac:	adc    ebx,edi
  41abae:	lds    esi,FWORD PTR fs:[eax+0x5ae40e77]
  41abb5:	mov    BYTE PTR ds:0xdd53e84f,al
  41abbb:	lods   al,BYTE PTR ds:[esi]
  41abbc:	enter  0x3b4a,0x43
  41abc0:	scas   al,BYTE PTR es:[edi]
  41abc1:	daa    
  41abc2:	retf   0xa6d7
  41abc5:	in     eax,0x8b
  41abc7:	int3   
  41abc8:	mov    ebp,0xc43ce5ef
  41abcd:	mov    ah,0x42
  41abcf:	imul   edx,esi,0x58
  41abd2:	popf   
  41abd3:	retf   
  41abd4:	xchg   esi,eax
  41abd5:	mov    BYTE PTR [ecx+0x1e],ch
  41abd8:	add    ebp,DWORD PTR [ecx-0x6f]
  41abdb:	inc    esp
  41abdc:	mov    ds:0xdb82deca,al
  41abe1:	or     al,bh
  41abe3:	mov    dl,BYTE PTR [esp+esi*2]
  41abe6:	xchg   esp,eax
  41abe7:	add    BYTE PTR [eax+0x8],ch
  41abea:	ss cmp al,0xc3
  41abed:	fidiv  DWORD PTR [ebx]
  41abef:	les    ecx,FWORD PTR [ebp-0x5b71f495]
  41abf5:	mov    ebx,DWORD PTR [eax+0x7ccc7783]
  41abfb:	or     cl,BYTE PTR [ebp+0x1c]
  41abfe:	lods   al,BYTE PTR ds:[esi]
  41abff:	sar    BYTE PTR ds:0x1471950b,1
  41ac05:	ror    DWORD PTR [edi],cl
  41ac07:	xchg   BYTE PTR [esi+0x4b],ch
  41ac0a:	add    BYTE PTR [eax-0x56],al
  41ac0d:	add    eax,0x3a9e76e3
  41ac12:	push   esi
  41ac13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac14:	aam    0x99
  41ac16:	out    dx,eax
  41ac17:	jecxz  0x41abd4
  41ac19:	std    
  41ac1a:	lods   eax,DWORD PTR ds:[esi]
  41ac1b:	or     esi,esi
  41ac1d:	daa    
  41ac1e:	pop    esp
  41ac1f:	aad    0x71
  41ac21:	(bad)  
  41ac23:	out    dx,al
  41ac24:	not    ah
  41ac26:	sahf   
  41ac27:	xchg   edi,eax
  41ac28:	xor    ebx,DWORD PTR [ecx+0x6]
  41ac2b:	shr    eax,0xe9
  41ac2e:	dec    edi
  41ac2f:	push   ds
  41ac30:	xchg   eax,edi
  41ac32:	jnp    0x41ac61
  41ac34:	cdq    
  41ac35:	xor    ch,BYTE PTR [esi+edx*1+0x1fe4f323]
  41ac3c:	and    eax,0x8fc33fca
  41ac41:	ins    DWORD PTR es:[edi],dx
  41ac42:	push   ds
  41ac43:	sar    BYTE PTR [eax],cl
  41ac45:	mov    cl,bl
  41ac47:	jb     0x41acb1
  41ac49:	out    dx,eax
  41ac4a:	sahf   
  41ac4b:	or     esp,0x8fd45c5e
  41ac51:	cld    
  41ac52:	mov    ds:0xeb5171d8,al
  41ac57:	shr    ebx,0x37
  41ac5a:	popf   
  41ac5b:	int    0x44
  41ac5d:	dec    ebx
  41ac5e:	not    BYTE PTR [edi+0x6f]
  41ac61:	mov    ch,0xd2
  41ac63:	rcl    DWORD PTR [edx-0x7],cl
  41ac66:	test   eax,0x4e065410
  41ac6b:	js     0x41ac19
  41ac6d:	xor    DWORD PTR [eax-0x68e3f74a],ebp
  41ac73:	push   esp
  41ac74:	mov    bh,0xb4
  41ac76:	int3   
  41ac77:	push   0x17
  41ac79:	adc    eax,DWORD PTR [esi-0x68]
  41ac7c:	add    BYTE PTR [edx],al
  41ac7e:	jae    0x41ac3f
  41ac80:	jne    0x41acd7
  41ac82:	jns    0x41ac28
  41ac84:	cli    
  41ac85:	(bad)  
  41ac86:	int    0x8c
  41ac88:	mov    esp,0x3436d375
  41ac8d:	add    BYTE PTR [ecx+eax*1+0x12],bh
  41ac91:	sub    ah,dh
  41ac93:	mov    ds:0x22b73fef,eax
  41ac98:	scas   eax,DWORD PTR es:[edi]
  41ac99:	inc    ebx
  41ac9a:	fsub   st,st(6)
  41ac9c:	dec    edx
  41ac9d:	and    BYTE PTR [esp+eax*8],cl
  41aca0:	das    
  41aca1:	mov    ch,0xf0
  41aca3:	jg     0x41ac72
  41aca5:	mov    ah,0x7d
  41aca7:	add    DWORD PTR [esi+0x1ab4bdb9],0x23
  41acae:	test   DWORD PTR [eax],ebx
  41acb0:	ret    0xae67
  41acb3:	es pop ss
  41acb5:	bsf    eax,DWORD PTR [eax]
  41acb8:	scas   al,BYTE PTR es:[edi]
  41acb9:	mul    BYTE PTR [esi+ebp*1]
  41acbc:	call   0xe8d500a
  41acc1:	ret    
  41acc2:	push   esp
  41acc3:	push   esp
  41acc4:	xor    al,0xd2
  41acc6:	jmp    0x43a9:0xcbdfc72a
  41accd:	mov    bh,0xfe
  41accf:	and    BYTE PTR [eax+0x58b57bbc],0x65
  41acd6:	and    edi,DWORD PTR [ecx-0x10937b38]
  41acdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acdd:	lea    esp,[ecx+0x434c2962]
  41ace3:	push   edx
  41ace4:	ret    
  41ace5:	cmp    esp,ebp
  41ace7:	call   0x9b29c0fd
  41acec:	out    0x9d,eax
  41acee:	jl     0x41acf4
  41acf0:	jae    0x41acd4
  41acf2:	sbb    bl,BYTE PTR [eax+esi*1-0x6e576b17]
  41acf9:	and    edx,eax
  41acfb:	xor    eax,0xdf3325e9
  41ad00:	cmp    ch,BYTE PTR [esi+0x57]
  41ad03:	cmp    edx,DWORD PTR [esi-0x25]
  41ad06:	fidiv  WORD PTR [esi]
  41ad08:	loopne 0x41acb6
  41ad0a:	sub    bh,0xbf
  41ad0d:	retf   0xd9d5
  41ad10:	xchg   esp,eax
  41ad11:	mov    cl,0x6c
  41ad13:	xor    DWORD PTR [ebp+0x5dcd79e3],esi
  41ad19:	mov    ebp,0x93aa72e5
  41ad1e:	or     al,0x2a
  41ad20:	jecxz  0x41ad7e
  41ad22:	les    edx,FWORD PTR [edx+0x2ca86230]
  41ad28:	(bad)  [ebx]
  41ad2a:	dec    ebx
  41ad2b:	addr16 in eax,0x1e
  41ad2e:	push   eax
  41ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad30:	stos   BYTE PTR es:[edi],al
  41ad31:	loopne 0x41ad76
  41ad33:	pop    esi
  41ad34:	call   0x9227:0x6fcd0e21
  41ad3b:	lods   eax,DWORD PTR ds:[esi]
  41ad3c:	pusha  
  41ad3d:	out    dx,al
  41ad3e:	inc    ecx
  41ad3f:	add    BYTE PTR [edi-0x500dcea7],cl
  41ad45:	shrd   DWORD PTR [edx+eax*2],ebx,cl
  41ad49:	imul   BYTE PTR [edi]
  41ad4b:	and    esp,ecx
  41ad4d:	test   al,0x3b
  41ad4f:	inc    ebp
  41ad50:	out    0x5b,al
  41ad52:	idiv   BYTE PTR [eax-0x1f1b7dbb]
  41ad58:	mov    ds:0x1e6826c2,al
  41ad5d:	cwde   
  41ad5e:	cmp    eax,0xd6557196
  41ad63:	test   al,0xe2
  41ad65:	push   edi
  41ad66:	sbb    al,0x4
  41ad68:	add    bh,BYTE PTR [esi]
  41ad6a:	add    cl,BYTE PTR [ecx]
  41ad6c:	push   ebx
  41ad6d:	std    
  41ad6e:	adc    DWORD PTR [eax+0x3164cbe8],esp
  41ad74:	push   0xffffff8b
  41ad76:	mov    ecx,0x9c7e339d
  41ad7b:	nop
  41ad7c:	sbb    eax,0xc41b73de
  41ad81:	adc    eax,0x6a14927b
  41ad86:	fcomi  st,st(2)
  41ad88:	ror    BYTE PTR [edi],0x6d
  41ad8b:	sub    ah,BYTE PTR [ecx+0x6b59f7c4]
  41ad91:	jns    0x41adc9
  41ad93:	ss or  esi,0xdf0afe46
  41ad9a:	adc    al,0xa9
  41ad9c:	in     eax,dx
  41ad9d:	sbb    eax,0x4aa8aa16
  41ada2:	add    esi,DWORD PTR [eax-0x56f32989]
  41ada8:	out    dx,al
  41ada9:	xor    dh,0x92
  41adac:	pop    esi
  41adad:	xchg   edi,eax
  41adae:	mov    BYTE PTR [esi-0x53],cl
  41adb1:	call   0xa4f6:0x30c6aee6
  41adb8:	out    dx,eax
  41adb9:	in     eax,dx
  41adba:	into   
  41adbb:	sahf   
  41adbc:	pusha  
  41adbd:	in     al,0x3a
  41adbf:	pop    esi
  41adc0:	lahf   
  41adc1:	or     cl,BYTE PTR [edx-0x5548afc4]
  41adc7:	in     eax,dx
  41adc8:	xor    al,BYTE PTR [edi]
  41adca:	loop   0x41adad
  41adcc:	push   ecx
  41adcd:	outs   dx,BYTE PTR ds:[esi]
  41adce:	push   ebp
  41adcf:	test   BYTE PTR [esi+0x52],bh
  41add2:	mov    ds:0x3feb5f8b,eax
  41add7:	daa    
  41add8:	xor    esp,edx
  41adda:	loopne 0x41ae1b
  41addc:	fidivr WORD PTR [ecx]
  41adde:	dec    edi
  41addf:	xchg   edx,eax
  41ade0:	dec    edx
  41ade1:	call   0xa44d:0x3c7df523
  41ade8:	add    dl,dl
  41adea:	and    DWORD PTR [ebp-0x10],ebp
  41aded:	xchg   ebp,eax
  41adee:	jns    0x41ae27
  41adf0:	jmp    0xde4f8d33
  41adf5:	adc    dh,BYTE PTR [eax+0x4748c862]
  41adfb:	test   eax,0xe802b45b
  41ae00:	push   esp
  41ae01:	int    0xfc
  41ae03:	push   eax
  41ae04:	xchg   DWORD PTR [ebx],eax
  41ae06:	xor    BYTE PTR [edi-0x49b8e4ff],ah
  41ae0c:	in     eax,dx
  41ae0d:	mov    bl,0x1b
  41ae0f:	aaa    
  41ae10:	bound  edi,QWORD PTR [ebp-0x46]
  41ae13:	sub    DWORD PTR [ebx],ecx
  41ae15:	ficom  DWORD PTR ds:0x9768872e
  41ae1b:	ins    DWORD PTR es:[edi],dx
  41ae1c:	xchg   edi,eax
  41ae1d:	xor    al,0x28
  41ae1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae20:	push   edi
  41ae21:	pop    ebp
  41ae22:	mov    esi,0xc6b07f18
  41ae27:	lahf   
  41ae28:	test   ebx,0x8fee6090
  41ae2e:	pop    esi
  41ae2f:	sbb    BYTE PTR [ebx],bl
  41ae31:	div    edi
  41ae33:	lea    eax,[esi+0x143a1056]
  41ae39:	xlat   BYTE PTR ds:[ebx]
  41ae3a:	popa   
  41ae3b:	push   esi
  41ae3c:	(bad)  
  41ae3d:	sub    BYTE PTR [esi-0x75b1317b],dh
  41ae43:	loop   0x41aebd
  41ae45:	test   BYTE PTR [eax],bl
  41ae47:	cdq    
  41ae48:	scas   eax,DWORD PTR es:[edi]
  41ae49:	mov    ah,BYTE PTR ds:0x7ff3120a
  41ae4f:	or     ecx,DWORD PTR [edi-0x295690e3]
  41ae55:	mov    DWORD PTR [ebx+ebp*8-0x2c],0x9efb58e5
  41ae5d:	or     DWORD PTR [ebx+eax*8+0x68],edx
  41ae61:	adc    BYTE PTR [edi+esi*2+0x55],dh
  41ae65:	int    0x94
  41ae67:	gs add eax,0xf0c88b29
  41ae6d:	inc    ecx
  41ae6e:	jo     0x41adf3
  41ae70:	and    al,0x6a
  41ae72:	std    
  41ae73:	pushf  
  41ae74:	sbb    bh,0x2e
  41ae77:	cmp    al,0x52
  41ae79:	pminsw mm1,QWORD PTR [eax+0x5c6a89dc]
  41ae80:	lods   eax,DWORD PTR ds:[esi]
  41ae81:	cmp    esp,DWORD PTR [ecx]
  41ae83:	pop    edx
  41ae84:	sub    al,0x10
  41ae86:	jg     0x41ae5d
  41ae88:	xchg   esp,eax
  41ae89:	cmc    
  41ae8a:	dec    esp
  41ae8b:	in     eax,0xf8
  41ae8d:	mov    ah,0xd3
  41ae8f:	test   DWORD PTR [edx-0x7ecb2e8f],ebx
  41ae95:	dec    ecx
  41ae96:	fnstenv [edx+0x26]
  41ae99:	sbb    ah,cl
  41ae9b:	mov    cl,0x3d
  41ae9d:	and    esi,0xffffffda
  41aea0:	scas   al,BYTE PTR es:[edi]
  41aea1:	sbb    DWORD PTR [edx-0x22],0xffffffc7
  41aea5:	push   ebx
  41aea6:	les    ebp,FWORD PTR [eax+0x3f93f0db]
  41aeac:	inc    ebp
  41aead:	pop    ecx
  41aeae:	xchg   BYTE PTR [esp+edi*1+0x59],ch
  41aeb2:	dec    eax
  41aeb3:	sbb    eax,0x9bd15cdd
  41aeb8:	sub    DWORD PTR [ecx+0x3e8d530e],ecx
  41aebe:	xchg   DWORD PTR ds:0x59aa7b82,ebp
  41aec4:	ret    0xb649
  41aec7:	daa    
  41aec8:	mov    esp,DWORD PTR [ebp+edx*4-0x2d]
  41aecc:	adc    al,0x9d
  41aece:	mov    edi,0x66129d3e
  41aed3:	mov    ecx,DWORD PTR [edx-0x3c1c3cd7]
  41aed9:	mov    dh,0xae
  41aedb:	push   ss
  41aedc:	cwde   
  41aedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aede:	jl     0x41ae73
  41aee0:	je     0x41af34
  41aee2:	test   al,0xc3
  41aee4:	xor    ch,BYTE PTR [ebp+edi*1-0x70a22e5]
  41aeeb:	out    dx,eax
  41aeec:	sub    esp,DWORD PTR [edx+0x75]
  41aeef:	mov    ecx,esi
  41aef1:	sub    BYTE PTR [ebx-0x58534eda],ah
  41aef7:	cmp    DWORD PTR [eax+0x25686bdd],edx
  41aefd:	push   edi
  41aefe:	ds mov edx,0xecd72d2d
  41af04:	(bad)  
  41af05:	xor    bl,BYTE PTR [ebx-0x3fe15a40]
  41af0b:	in     al,dx
  41af0c:	icebp  
  41af0d:	sbb    ebp,eax
  41af0f:	xchg   ecx,eax
  41af10:	test   DWORD PTR [edi+eiz*4+0x25],edx
  41af14:	dec    esp
  41af15:	mov    ecx,DWORD PTR [eax+eiz*2+0x72]
  41af19:	lea    edi,[ecx-0x25]
  41af1c:	xchg   edi,eax
  41af1d:	sbb    DWORD PTR [ebp+eax*8-0x2d88bce7],esi
  41af24:	jb     0x41af44
  41af26:	loopne 0x41af70
  41af28:	xchg   ebp,eax
  41af29:	pop    ds
  41af2a:	sbb    al,0x9f
  41af2c:	fidiv  DWORD PTR [ebx-0x6a895299]
  41af32:	sub    edi,DWORD PTR [ebx-0x307a46fb]
  41af38:	in     eax,dx
  41af39:	fstp   DWORD PTR [eax+0x66]
  41af3c:	les    ecx,FWORD PTR [ecx]
  41af3e:	nop
  41af3f:	or     BYTE PTR [eax+0x40],cl
  41af42:	mov    esi,0xb089acbd
  41af47:	adc    ecx,esp
  41af49:	push   esi
  41af4a:	sbb    ecx,DWORD PTR [edx+0x75c0ef4a]
  41af50:	mov    ebp,0xa28da7e3
  41af55:	sbb    DWORD PTR [edi+0x79],edi
  41af58:	jecxz  0x41af29
  41af5a:	call   0x3a1e:0x624cfb55
  41af61:	stos   DWORD PTR es:[edi],eax
  41af62:	lock clc 
  41af64:	and    ebp,edx
  41af66:	stc    
  41af67:	mov    ss,WORD PTR [ebx-0x894ad3f]
  41af6d:	int    0x32
  41af6f:	sbb    DWORD PTR [ebx+0x2c],eax
  41af72:	push   es
  41af73:	cs stos DWORD PTR es:[edi],eax
  41af75:	jecxz  0x41aef7
  41af77:	lea    esi,[edx]
  41af79:	push   esi
  41af7a:	adc    eax,0x87b84aaf
  41af7f:	inc    esp
  41af80:	or     DWORD PTR [esi],edx
  41af82:	sub    DWORD PTR [edx-0x58a6ed68],ecx
  41af88:	mov    ebx,0xfdfbc5b5
  41af8d:	cld    
  41af8e:	mov    ebp,0xfe2e88c6
  41af93:	push   cx
  41af95:	jno    0x41b00f
  41af97:	jge    0x41af4b
  41af99:	cmp    edx,edi
  41af9b:	call   0xfb4c:0xd591a485
  41afa2:	mov    esi,es
  41afa4:	jne    0x41af5a
  41afa6:	adc    ebp,DWORD PTR [esi+0x1b]
  41afa9:	jae    0x41afe9
  41afab:	rcr    DWORD PTR [eax+0x4e],1
  41afae:	cmp    ebp,esi
  41afb0:	xchg   ebx,eax
  41afb1:	cli    
  41afb2:	out    dx,eax
  41afb3:	shl    ebp,1
  41afb5:	push   esp
  41afb6:	xchg   edi,eax
  41afb7:	lds    edx,FWORD PTR [ecx+0x3debb421]
  41afbd:	xor    BYTE PTR [ebx],0x68
  41afc0:	ja     0x41af69
  41afc2:	ins    BYTE PTR es:[edi],dx
  41afc3:	mov    ecx,0xfcd9fc44
  41afc8:	out    0x7d,al
  41afca:	mov    BYTE PTR [eax+0x17],0x97
  41afce:	mov    ds:0x8cf28dfc,eax
  41afd3:	push   ss
  41afd4:	leave  
  41afd5:	mov    WORD PTR [ecx-0x587cff21],ds
  41afdb:	in     al,dx
  41afdc:	call   0x67559cf9
  41afe1:	nop
  41afe2:	push   edx
  41afe3:	test   DWORD PTR [edi+ebp*1+0x66362c32],ebp
  41afea:	stos   DWORD PTR es:[edi],eax
  41afeb:	mov    esi,0x473a0466
  41aff0:	(bad)  
  41aff2:	cmp    esp,ebx
  41aff4:	dec    esp
  41aff5:	mov    edi,0xae31e4
  41affa:	add    bl,BYTE PTR [esi-0x4087ffdb]
  41b000:	ret    
  41b001:	xor    eax,0xc4302b7a
  41b006:	das    
  41b007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b008:	mov    eax,ds:0xca23b019
  41b00d:	arpl   WORD PTR [ebp+0x6aa3d046],sp
  41b013:	(bad)  
  41b014:	bound  ecx,QWORD PTR [esi+0xd]
  41b017:	rcr    BYTE PTR [edi+0x60adc846],1
  41b01d:	inc    ebp
  41b01e:	mov    al,0xd6
  41b020:	push   ebx
  41b021:	(bad)  [esi-0x755956d7]
  41b027:	not    BYTE PTR [ebx-0x2830c513]
  41b02d:	repz push esi
  41b02f:	push   eax
  41b030:	fs cdq 
  41b032:	add    DWORD PTR [eax],0x3b
  41b035:	dec    ebp
  41b036:	inc    esp
  41b037:	fmul   st,st(0)
  41b039:	mov    edi,0xc36cc207
  41b03e:	mov    ecx,0xc6bc7ae7
  41b043:	inc    ebp
  41b044:	sub    al,0x77
  41b046:	scas   eax,DWORD PTR es:[edi]
  41b047:	xchg   DWORD PTR [ecx],ebp
  41b049:	in     eax,dx
  41b04a:	in     eax,dx
  41b04b:	mov    bl,0x41
  41b04d:	inc    eax
  41b04e:	fwait
  41b04f:	inc    edi
  41b050:	lods   eax,DWORD PTR ds:[esi]
  41b051:	aas    
  41b052:	jns    0x41b09e
  41b054:	ja     0x41b0ca
  41b056:	rcr    BYTE PTR [edi-0xb],1
  41b059:	ret    0x6c81
  41b05c:	xor    DWORD PTR [eax-0x19a73ec7],ebx
  41b062:	mov    bl,0x5c
  41b064:	and    dl,bh
  41b066:	or     esi,0xbfb533ce
  41b06c:	ret    
  41b06d:	push   ecx
  41b06e:	scas   eax,DWORD PTR es:[edi]
  41b06f:	lds    edi,FWORD PTR [eax]
  41b071:	mov    DWORD PTR [ecx+edx*4-0x53],eax
  41b075:	adc    dh,BYTE PTR [ebx]
  41b077:	das    
  41b078:	inc    esi
  41b079:	jnp    0x41b0c0
  41b07b:	pop    ds
  41b07c:	mov    ebp,0xfe799396
  41b081:	and    DWORD PTR [ecx+0x4d],ebp
  41b084:	xor    al,0xbb
  41b086:	idiv   BYTE PTR [eax+0x4cd9e17a]
  41b08c:	int    0x68
  41b08e:	fs pop ss
  41b090:	add    ch,BYTE PTR [eax-0x2c26b11b]
  41b096:	adc    eax,0xba970c3c
  41b09b:	fcomp  QWORD PTR [edi]
  41b09d:	jg     0x41b101
  41b09f:	mov    ?,WORD PTR [ecx+0x6b]
  41b0a2:	inc    ebx
  41b0a3:	clc    
  41b0a4:	dec    edx
  41b0a5:	stos   DWORD PTR es:[edi],eax
  41b0a6:	repnz push eax
  41b0a8:	ret    0x3ff6
  41b0ab:	mov    ebp,0x91f74bcb
  41b0b0:	and    al,0x51
  41b0b2:	xchg   esp,eax
  41b0b3:	mov    esp,0xdf24727c
  41b0b8:	push   esi
  41b0b9:	into   
  41b0ba:	push   0xd16c0563
  41b0bf:	ins    BYTE PTR es:[edi],dx
  41b0c0:	and    BYTE PTR [ecx],al
  41b0c2:	nop
  41b0c3:	repnz fcomp DWORD PTR [esi]
  41b0c6:	or     DWORD PTR [eax-0x66],edi
  41b0c9:	rcl    DWORD PTR [esi],cl
  41b0cb:	leave  
  41b0cc:	popf   
  41b0cd:	mov    al,ds:0x9e9d1f8b
  41b0d2:	test   ch,dh
  41b0d4:	add    DWORD PTR [edi-0x5c],0x6f8aa4cc
  41b0db:	or     edx,DWORD PTR [edi-0x7d]
  41b0de:	pop    eax
  41b0df:	and    eax,0x43fa5298
  41b0e4:	mov    eax,ds:0xbbebd35
  41b0e9:	dec    eax
  41b0ea:	cmp    edi,DWORD PTR [eax-0x57]
  41b0ed:	add    BYTE PTR [ecx-0x45],bl
  41b0f0:	rcl    BYTE PTR [edi],cl
  41b0f2:	bound  eax,QWORD PTR ds:0x598aec39
  41b0f8:	(bad)  
  41b0f9:	jb     0x41b152
  41b0fb:	dec    esp
  41b0fc:	idiv   DWORD PTR [ebx]
  41b0fe:	pop    ds
  41b0ff:	arpl   WORD PTR [ecx+ebx*2],di
  41b102:	or     BYTE PTR [ebx-0x7a47c1f0],dl
  41b108:	test   eax,0x31e08c24
  41b10d:	mov    ah,cl
  41b10f:	inc    eax
  41b110:	out    0x83,al
  41b112:	int    0x59
  41b114:	push   ebx
  41b115:	ds (bad) 
  41b117:	jp     0x41b144
  41b119:	ins    DWORD PTR es:[edi],dx
  41b11a:	imul   edi,DWORD PTR [edi-0x7a],0xb398b1f2
  41b121:	(bad)  
  41b123:	je     0x41b0af
  41b125:	bound  eax,QWORD PTR [edi+0x10c47aec]
  41b12b:	adc    edi,esp
  41b12d:	je     0x41b16a
  41b12f:	call   0xf1fe4a06
  41b134:	sbb    BYTE PTR [edi-0xde0f490],dl
  41b13a:	mov    esp,ebp
  41b13c:	es jecxz 0x41b1b2
  41b13f:	dec    esp
  41b140:	mov    cl,0x48
  41b142:	lds    esp,FWORD PTR [edi+ecx*2+0xeaaf715]
  41b149:	pop    ecx
  41b14a:	xchg   edx,eax
  41b14b:	sub    dl,BYTE PTR [edx]
  41b14d:	pop    ebx
  41b14e:	or     DWORD PTR [esi-0x43f60603],edi
  41b154:	adc    cl,BYTE PTR [esp+ebp*1-0x3c5f56dc]
  41b15b:	push   0x667e1624
  41b160:	mov    al,ds:0x63a2fd93
  41b165:	lahf   
  41b166:	inc    esi
  41b167:	sub    al,0xf2
  41b169:	jle    0x41b197
  41b16b:	les    ebp,FWORD PTR [ebp-0x4d]
  41b16e:	(bad)  
  41b16f:	loopne 0x41b187
  41b171:	aad    0x4b
  41b173:	(bad)  
  41b174:	cmp    DWORD PTR [edi],edx
  41b176:	fs (bad) 
  41b178:	out    0x14,eax
  41b17a:	sub    BYTE PTR [edi+0x33],dh
  41b17d:	dec    esi
  41b17e:	or     esp,DWORD PTR [esi]
  41b180:	(bad)  
  41b181:	adc    dh,BYTE PTR [edx-0x3d]
  41b184:	push   es
  41b185:	push   esp
  41b186:	fiadd  WORD PTR [ebx+0x326bd359]
  41b18c:	mov    esi,0xadcdf2a
  41b191:	mov    ch,BYTE PTR [eax-0x2b]
  41b194:	ja     0x41b20b
  41b196:	dec    eax
  41b197:	ja     0x41b17c
  41b199:	xor    eax,0xf7588bb7
  41b19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19f:	sub    al,0x1e
  41b1a1:	jge    0x41b167
  41b1a3:	jno    0x41b1e9
  41b1a5:	jle    0x41b1b9
  41b1a7:	mov    eax,DWORD PTR [eax+0x0]
  41b1aa:	mov    esi,0x7984a9c8
  41b1af:	or     dl,ch
  41b1b1:	adc    dl,0x94
  41b1b4:	(bad)  
  41b1b5:	(bad)  
  41b1b7:	inc    esp
  41b1b8:	jp     0x41b146
  41b1ba:	and    eax,0xd3756bd7
  41b1bf:	pop    ebx
  41b1c0:	xchg   ebx,eax
  41b1c1:	je     0x41b188
  41b1c3:	mov    eax,0x4caf0737
  41b1c8:	dec    ecx
  41b1c9:	fcomp  QWORD PTR [ebx-0x34]
  41b1cc:	mov    WORD PTR [ecx+0x47],?
  41b1cf:	inc    eax
  41b1d0:	sbb    BYTE PTR [edi+eiz*8-0x2],0x6
  41b1d5:	push   es
  41b1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d7:	adc    cl,BYTE PTR [esi+ebx*4-0x32f606dc]
  41b1de:	retf   0x6d7a
  41b1e1:	mov    ds:0xb7f107cc,al
  41b1e6:	sbb    BYTE PTR [esi+0x344ed74c],cl
  41b1ec:	outs   dx,BYTE PTR ds:[esi]
  41b1ed:	dec    esp
  41b1ee:	and    BYTE PTR [edx+0x728f0e74],ch
  41b1f4:	push   esp
  41b1f5:	hlt    
  41b1f6:	mov    DWORD PTR es:[eax],0xa01a7a68
  41b1fd:	stos   DWORD PTR es:[edi],eax
  41b1fe:	call   0x9ec9752a
  41b203:	sbb    BYTE PTR [esi+0x6f],bh
  41b206:	adc    eax,0x81ad1999
  41b20b:	ficomp WORD PTR [ebp+0x78]
  41b20e:	sbb    eax,0x3ae6f671
  41b213:	loopne 0x41b278
  41b215:	cmp    esi,DWORD PTR [edx]
  41b217:	scas   al,BYTE PTR es:[edi]
  41b218:	adc    BYTE PTR [edi-0x73943829],dh
  41b21e:	cmp    ebx,edx
  41b220:	loop   0x41b1ca
  41b222:	push   ss
  41b223:	and    DWORD PTR [edx+0x4936e175],edi
  41b229:	ret    0x1fd0
  41b22c:	int    0x1e
  41b22e:	les    esi,FWORD PTR [ebx+0x67]
  41b231:	inc    eax
  41b232:	pusha  
  41b233:	dec    ebx
  41b234:	jecxz  0x41b299
  41b236:	ins    BYTE PTR es:[edi],dx
  41b237:	push   ds
  41b238:	shr    BYTE PTR [ebp-0x4c],0x13
  41b23c:	xor    esp,esi
  41b23e:	popf   
  41b23f:	fdivr  DWORD PTR [edi+0x54]
  41b242:	(bad)  
  41b243:	test   BYTE PTR [edi],0x7e
  41b246:	fst    QWORD PTR [ebp+0x34d26bcb]
  41b24c:	shr    bl,0x78
  41b24f:	sub    esi,DWORD PTR [ebx+0x7c]
  41b252:	jbe    0x41b21d
  41b254:	push   ecx
  41b255:	loopne 0x41b20c
  41b257:	sub    edx,0x3fd3ab03
  41b25d:	jbe    0x41b212
  41b25f:	stc    
  41b260:	ss push eax
  41b262:	les    esi,FWORD PTR [esi]
  41b264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b265:	cmp    BYTE PTR [edi],0xbd
  41b268:	and    esp,DWORD PTR [ebp-0x2de0a8ab]
  41b26e:	cmp    eax,0xefc41771
  41b273:	jae    0x41b1ff
  41b275:	mov    bh,0xa9
  41b277:	push   edx
  41b278:	jno    0x41b2a6
  41b27a:	jns    0x41b237
  41b27c:	adc    eax,DWORD PTR [esp+esi*4+0x4b]
  41b280:	imul   ebx,edi,0xffffffc7
  41b283:	repz sub al,0xe
  41b286:	loop   0x41b240
  41b288:	mov    WORD PTR [ebx],?
  41b28a:	dec    edi
  41b28b:	inc    ebx
  41b28c:	jmp    0x41b257
  41b28e:	sti    
  41b28f:	dec    ebp
  41b290:	cld    
  41b291:	push   esp
  41b292:	sub    eax,0x89400655
  41b297:	les    edx,FWORD PTR [ecx-0x1c]
  41b29a:	dec    esp
  41b29b:	xlat   BYTE PTR ds:[ebx]
  41b29c:	inc    ebp
  41b29d:	adc    bh,bh
  41b29f:	daa    
  41b2a0:	pmaxub mm5,mm4
  41b2a3:	adc    dl,BYTE PTR [edx]
  41b2a5:	sbb    eax,0xb78ccaf0
  41b2aa:	sahf   
  41b2ab:	arpl   WORD PTR [ecx-0x5470380],bp
  41b2b1:	cmp    al,0xb8
  41b2b3:	mov    edx,DWORD PTR [ebp-0x31]
  41b2b6:	je     0x41b24b
  41b2b8:	(bad)  
  41b2b9:	pmuludq mm0,mm6
  41b2bc:	fs ret 0x66df
  41b2c0:	std    
  41b2c1:	cmp    al,0xd0
  41b2c3:	fsub   QWORD PTR [eax]
  41b2c5:	in     al,dx
  41b2c6:	retf   
  41b2c7:	mov    DWORD PTR [ebx],edi
  41b2c9:	jg     0x41b2b9
  41b2cb:	jb     0x41b262
  41b2cd:	retf   
  41b2ce:	fcmovb st,st(5)
  41b2d0:	pop    ecx
  41b2d1:	cld    
  41b2d2:	stos   BYTE PTR es:[edi],al
  41b2d3:	stc    
  41b2d4:	push   esp
  41b2d5:	fild   QWORD PTR [edi+ebx*1]
  41b2d8:	inc    esi
  41b2d9:	(bad)  
  41b2da:	pop    esi
  41b2db:	mov    ds:0xbc27f11d,eax
  41b2e0:	ror    BYTE PTR [edx+0x222453bf],1
  41b2e6:	pop    ecx
  41b2e7:	adc    ch,BYTE PTR [edx]
  41b2e9:	lahf   
  41b2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2eb:	xor    dl,ah
  41b2ed:	cs jle 0x41b363
  41b2f0:	fistp  DWORD PTR ds:0x966c73f1
  41b2f6:	and    al,0xc7
  41b2f8:	xchg   ebp,eax
  41b2f9:	(bad)  
  41b2fa:	call   0x6661c270
  41b2ff:	or     eax,0x52887032
  41b304:	fisubr DWORD PTR [esi+0x61415a49]
  41b30a:	xor    al,0x33
  41b30c:	push   cs
  41b30d:	test   cl,ah
  41b30f:	push   ss
  41b310:	add    DWORD PTR [ecx-0x6e],ecx
  41b313:	test   DWORD PTR [eax+0x3b6fa7e7],ebp
  41b319:	add    BYTE PTR [ebp+0x3e],dl
  41b31c:	bound  ebp,QWORD PTR [ebx+ecx*1]
  41b31f:	std    
  41b320:	(bad)  
  41b321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b322:	sub    eax,DWORD PTR [edx+esi*1+0x26]
  41b326:	popf   
  41b327:	stos   DWORD PTR es:[edi],eax
  41b328:	mov    eax,0xa98f15b4
  41b32d:	or     edx,DWORD PTR [ebx+0x26]
  41b330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b331:	mov    eax,ds:0xdb6dc7b7
  41b336:	sub    al,0x1a
  41b338:	dec    ebx
  41b339:	jg     0x41b2de
  41b33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b33c:	xchg   edi,eax
  41b33d:	lahf   
  41b33e:	jecxz  0x41b39e
  41b340:	pop    ecx
  41b341:	repnz mov edi,0x99d45a5
  41b347:	mov    ebp,0xe56c51ce
  41b34c:	jbe    0x41b3ae
  41b34e:	pop    ebp
  41b34f:	push   ebp
  41b350:	ror    DWORD PTR [edi+0x3b],cl
  41b353:	dec    eax
  41b354:	call   0x6969fdff
  41b359:	inc    edi
  41b35a:	ror    BYTE PTR [esp+esi*8],1
  41b35d:	dec    edx
  41b35e:	pushf  
  41b35f:	mov    esi,0x79efe49
  41b364:	ffree  st(1)
  41b366:	mov    esp,0x686398ba
  41b36b:	push   edx
  41b36c:	dec    eax
  41b36d:	enter  0xb04,0x58
  41b371:	jmp    0x44e79709
  41b376:	psadbw mm7,mm5
  41b379:	jno    0x41b300
  41b37b:	jmp    0x41b33d
  41b37d:	js     0x41b39d
  41b37f:	jb     0x41b371
  41b381:	inc    esp
  41b382:	addr16 ret 
  41b384:	sbb    DWORD PTR [ecx],esp
  41b386:	or     BYTE PTR [eax],ah
  41b388:	mov    cl,0xb0
  41b38a:	xchg   ebp,eax
  41b38b:	dec    ecx
  41b38c:	call   0xc598e4ea
  41b391:	iret   
  41b392:	aas    
  41b393:	popf   
  41b394:	sar    BYTE PTR [ebp-0x2],0xce
  41b398:	unpckhps xmm7,XMMWORD PTR [ebp-0x79]
  41b39c:	js     0x41b3e6
  41b39e:	imul   edx,DWORD PTR [eax-0x73],0xa7c2675b
  41b3a5:	cmp    eax,0x8033a41a
  41b3aa:	xchg   edx,eax
  41b3ab:	clc    
  41b3ac:	jp     0x41b408
  41b3ae:	sub    esi,ecx
  41b3b0:	aad    0xc2
  41b3b2:	fsubr  QWORD PTR [ebp+esi*4-0x10d69097]
  41b3b9:	sub    eax,DWORD PTR ds:0x38c13883
  41b3bf:	sbb    ecx,esi
  41b3c1:	ja     0x41b3d8
  41b3c3:	call   FWORD PTR [ebx-0x6f]
  41b3c6:	dec    esp
  41b3c7:	inc    esi
  41b3c8:	fisubr DWORD PTR [eax]
  41b3ca:	mov    ah,0x7
  41b3cc:	adc    ah,BYTE PTR [ecx-0x60df523b]
  41b3d2:	or     eax,0x3dcc8f87
  41b3d7:	and    esp,DWORD PTR [ecx-0x6030c0fa]
  41b3dd:	jmp    0x41b40c
  41b3df:	ffree  st(6)
  41b3e1:	call   DWORD PTR [ecx+0x2a]
  41b3e4:	popf   
  41b3e5:	push   esi
  41b3e6:	loopne 0x41b450
  41b3e8:	(bad)  
  41b3e9:	mov    ch,0xc0
  41b3eb:	adc    BYTE PTR [ebx+0x6a1bed9c],bl
  41b3f1:	call   0xc15afc9a
  41b3f6:	jo     0x41b407
  41b3f8:	jmp    0x7adc:0xcdd9114b
  41b3ff:	rol    DWORD PTR [bp+0x6dcb],1
  41b404:	inc    ebx
  41b405:	scas   al,BYTE PTR es:[edi]
  41b406:	leave  
  41b407:	jo     0x41b399
  41b409:	retf   0x92f3
  41b40c:	adc    al,0x6e
  41b40e:	mov    ch,0xa9
  41b410:	mov    BYTE PTR [edi+0x4c034b81],al
  41b416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b417:	fisttp QWORD PTR ds:0x7ae6de18
  41b41d:	dec    esp
  41b41e:	pop    esp
  41b41f:	aas    
  41b420:	fimul  WORD PTR [ecx-0x70]
  41b423:	pop    ebp
  41b424:	into   
  41b425:	sahf   
  41b426:	in     eax,0xc7
  41b428:	pop    DWORD PTR [ebx-0x3fd63f7a]
  41b42e:	and    al,0x39
  41b430:	dec    esp
  41b431:	popf   
  41b432:	jb     0x41b475
  41b434:	dec    edx
  41b435:	xchg   DWORD PTR [edi],ecx
  41b437:	in     eax,0x1d
  41b439:	push   esi
  41b43a:	(bad)  
  41b43b:	fsub   QWORD PTR [edx+0x3a]
  41b43e:	es inc esi
  41b440:	inc    ebp
  41b441:	cmp    dh,BYTE PTR [edx]
  41b443:	cmc    
  41b444:	push   eax
  41b445:	xchg   esp,eax
  41b446:	push   ebp
  41b447:	shl    DWORD PTR [ecx-0x20211929],0xf7
  41b44e:	fcomp  st(0)
  41b450:	cmp    al,0x9d
  41b452:	data16 fsubrp st(0),st
  41b455:	out    0xf1,eax
  41b457:	shr    esp,cl
  41b459:	nop
  41b45a:	xor    al,0x72
  41b45c:	dec    esp
  41b45d:	xchg   ebp,eax
  41b45e:	bound  eax,QWORD PTR fs:[ecx+0x6d]
  41b462:	into   
  41b463:	test   al,0xc4
  41b465:	cmp    eax,edi
  41b467:	call   0x71dc:0xe80e506a
  41b46e:	mov    DWORD PTR [ecx-0x21c8725a],ebp
  41b474:	sub    al,0x59
  41b476:	dec    eax
  41b477:	mov    ebx,0xd3af09d2
  41b47c:	iret   
  41b47d:	pop    es
  41b47e:	fsubr  DWORD PTR [ebp-0x61]
  41b481:	inc    ebp
  41b482:	out    0x3c,eax
  41b484:	jmp    0xe645422d
  41b489:	jmp    0x320bf615
  41b48e:	cmp    DWORD PTR [ecx+0x7c],0x38eca120
  41b495:	ficom  WORD PTR [esp+ebx*1+0x46]
  41b499:	dec    ecx
  41b49a:	test   eax,0xfdb4a9b6
  41b4a0:	rcl    DWORD PTR [ebp+0x698db6de],0x76
  41b4a7:	mov    al,0xf7
  41b4a9:	jmp    0xc1be06f7
  41b4ae:	rcr    DWORD PTR [eax-0x15],cl
  41b4b1:	jbe    0x41b4c1
  41b4b3:	pop    ebx
  41b4b4:	nop
  41b4b5:	dec    esi
  41b4b6:	xor    ebp,esi
  41b4b8:	outs   dx,BYTE PTR ds:[esi]
  41b4b9:	retf   0xc610
  41b4bc:	and    BYTE PTR [esi*2+0x5fb3c638],dh
  41b4c3:	mov    DWORD PTR [edi-0x6711debd],esi
  41b4c9:	sbb    dh,bl
  41b4cb:	jge    0x41b49f
  41b4cd:	dec    esi
  41b4ce:	sbb    ch,BYTE PTR [edi-0x68]
  41b4d1:	adc    eax,DWORD PTR [edi-0x52]
  41b4d4:	push   esi
  41b4d5:	out    0xbb,eax
  41b4d7:	sti    
  41b4d8:	test   al,0x30
  41b4da:	ss addr16 jne 0x41b46a
  41b4de:	mov    esi,0x93a9c242
  41b4e3:	clc    
  41b4e4:	pop    esp
  41b4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e6:	pop    es
  41b4e7:	xchg   ecx,eax
  41b4e8:	(bad)
  41b4eb:	dec    ebp
  41b4ec:	sub    BYTE PTR [eax+0x73be6b31],ch
  41b4f2:	sbb    eax,0xa92a4d47
  41b4f7:	sub    al,0x38
  41b4f9:	inc    ecx
  41b4fa:	(bad)  
  41b4fb:	int3   
  41b4fc:	mov    ch,0xeb
  41b4fe:	rcl    BYTE PTR [ebp+eiz*4+0x25f1d1eb],cl
  41b505:	mov    ds:0x4e33a723,al
  41b50a:	jmp    0x87594569
  41b50f:	daa    
  41b510:	test   eax,0xe656761
  41b515:	cmp    ebp,DWORD PTR [ebx]
  41b517:	cmp    eax,0x3d8593ba
  41b51c:	popf   
  41b51d:	push   0xffffffc4
  41b51f:	or     al,0x9a
  41b521:	scas   eax,DWORD PTR es:[edi]
  41b522:	arpl   cx,sp
  41b524:	push   eax
  41b525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b526:	jb     0x41b546
  41b528:	mov    ss,WORD PTR [edi+ebx*8]
  41b52b:	adc    ebp,DWORD PTR [eax-0x11]
  41b52e:	aam    0x50
  41b530:	fbld   TBYTE PTR [ebx+0x5]
  41b533:	pop    esi
  41b534:	shr    esp,cl
  41b536:	cwde   
  41b537:	(bad)  
  41b538:	add    BYTE PTR [esi+0xd],cl
  41b53b:	imul   esi,DWORD PTR [ecx+0x36],0x86c2a815
  41b542:	out    0xbb,al
  41b544:	xlat   BYTE PTR ds:[ebx]
  41b545:	sbb    DWORD PTR [esi+0x74],ebp
  41b548:	push   ds
  41b549:	jbe    0x41b5bf
  41b54b:	pop    edx
  41b54c:	add    DWORD PTR [edx-0x5969737a],esp
  41b552:	and    ecx,0x23f44bf0
  41b558:	out    0xf2,al
  41b55a:	jae    0x41b4fd
  41b55c:	pop    eax
  41b55d:	mov    bh,0x6f
  41b55f:	pusha  
  41b560:	sub    edi,DWORD PTR [ebx-0x72]
  41b563:	rol    BYTE PTR [edi-0x1c],0xce
  41b567:	fmul   DWORD PTR [eax]
  41b569:	xchg   ebx,eax
  41b56a:	ja     0x41b529
  41b56c:	test   DWORD PTR [ebx-0x67],edi
  41b56f:	sub    al,0x41
  41b571:	es in  al,dx
  41b573:	leave  
  41b574:	pop    eax
  41b575:	or     BYTE PTR [ebp-0x10073e3a],ch
  41b57b:	(bad)  
  41b57c:	inc    ecx
  41b57d:	xchg   bl,dh
  41b57f:	or     dl,BYTE PTR [esi+0x2e]
  41b582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b583:	cmp    ecx,DWORD PTR [ebx+0x7f2ef27]
  41b589:	xlat   BYTE PTR ds:[ebx]
  41b58a:	ins    BYTE PTR es:[di],dx
  41b58c:	sub    eax,0xaa208d50
  41b591:	or     BYTE PTR [edx+eiz*2+0x1],0x67
  41b596:	int3   
  41b597:	adc    esi,DWORD PTR [eax+0x407d6452]
  41b59d:	and    cl,dh
  41b59f:	inc    esp
  41b5a0:	jno    0x41b60d
  41b5a2:	xor    al,0x8
  41b5a4:	mov    edx,0x144aaa30
  41b5a9:	mov    cl,BYTE PTR ds:0xfcfc8c1f
  41b5af:	add    al,0x21
  41b5b1:	idiv   BYTE PTR [ebx-0x3d]
  41b5b4:	mov    eax,0x7dbfc60b
  41b5b9:	push   ds
  41b5ba:	sub    al,0x79
  41b5bc:	and    DWORD PTR [ebx+0x3159da79],0xffffff97
  41b5c3:	mov    bh,0x1c
  41b5c5:	mov    ch,dh
  41b5c7:	jmp    0x41b637
  41b5c9:	mov    esp,0x62e5980f
  41b5ce:	add    al,0x1
  41b5d0:	mov    ss,WORD PTR [ebx]
  41b5d2:	push   edi
  41b5d3:	inc    ecx
  41b5d4:	fucom  st(4)
  41b5d6:	das    
  41b5d7:	pop    esi
  41b5d8:	rcl    BYTE PTR [edx],1
  41b5da:	dec    esi
  41b5db:	pop    ebx
  41b5dc:	shl    DWORD PTR [ecx+edi*4],cl
  41b5df:	pop    ds
  41b5e0:	lds    esp,FWORD PTR [ebp+0x231e61fa]
  41b5e6:	adc    BYTE PTR ds:0x9c865fe9,bl
  41b5ec:	stos   BYTE PTR es:[edi],al
  41b5ed:	push   eax
  41b5ee:	mov    cl,0x9b
  41b5f0:	or     DWORD PTR [ebp+0x4ae727c8],ebp
  41b5f6:	js     0x41b59e
  41b5f8:	popf   
  41b5f9:	inc    ebx
  41b5fa:	mov    ecx,0xada02283
  41b5ff:	nop
  41b600:	ins    DWORD PTR es:[edi],dx
  41b601:	arpl   WORD PTR [edx-0x5945e040],di
  41b607:	fneni(8087 only) 
  41b609:	sub    al,0x6
  41b60b:	inc    edx
  41b60c:	cmp    al,0x25
  41b60e:	fcom   DWORD PTR [edi]
  41b610:	jmp    0x18f59f22
  41b615:	jl     0x41b61b
  41b617:	stc    
  41b618:	fldenv [edx+0x7c34a32a]
  41b61e:	add    edx,esp
  41b620:	leave  
  41b621:	ins    DWORD PTR es:[edi],dx
  41b622:	xor    BYTE PTR [edx+0x2cabc97b],bl
  41b628:	in     eax,dx
  41b629:	lea    ecx,[ebx+0x5f]
  41b62c:	mov    ebp,DWORD PTR [ecx+0x1b]
  41b62f:	lds    ebx,FWORD PTR ds:0x4140d392
  41b635:	adc    eax,0xa7f210ab
  41b63a:	jb     0x41b664
  41b63c:	aam    0xc3
  41b63e:	outs   dx,DWORD PTR ds:[esi]
  41b63f:	inc    ebp
  41b640:	dec    ebp
  41b641:	ss jns 0x41b5e3
  41b644:	aam    0x7c
  41b646:	in     eax,0xf3
  41b648:	loopne 0x41b5e9
  41b64a:	mov    ebp,0x43fe9093
  41b64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b650:	out    0xfd,eax
  41b652:	add    dh,dl
  41b654:	adc    bl,BYTE PTR [eax+0x32]
  41b657:	pop    ebx
  41b658:	lods   eax,DWORD PTR ds:[esi]
  41b659:	push   ds
  41b65a:	adc    edi,DWORD PTR [edi+0x2beb9a8]
  41b660:	clc    
  41b661:	lods   eax,DWORD PTR ds:[esi]
  41b662:	stos   DWORD PTR es:[edi],eax
  41b663:	cmp    eax,0x57a0cf6
  41b668:	gs mov dl,0xec
  41b66b:	mov    bl,0x1b
  41b66d:	push   edi
  41b66e:	xor    DWORD PTR [ebx+0x3f7c09d3],0x63
  41b675:	scas   eax,DWORD PTR es:[edi]
  41b676:	fsubr  DWORD PTR [eax]
  41b678:	test   al,0x68
  41b67a:	mov    esi,0x30b24116
  41b67f:	mov    ebp,0x8d44dc8e
  41b684:	dec    edi
  41b685:	daa    
  41b686:	out    dx,eax
  41b687:	xchg   edi,eax
  41b688:	test   eax,0x66b2b23e
  41b68d:	cmp    DWORD PTR [ebx+0x115a6a65],ebp
  41b693:	sbb    ah,bl
  41b695:	xor    DWORD PTR [ecx],ebx
  41b697:	or     dh,BYTE PTR [ebp+0x11]
  41b69a:	or     BYTE PTR [ebp+0x27de8eb7],dh
  41b6a0:	cwde   
  41b6a1:	push   esp
  41b6a2:	dec    eax
  41b6a3:	and    edi,DWORD PTR [eax+eiz*2]
  41b6a6:	cdq    
  41b6a7:	test   al,0xd7
  41b6a9:	push   ecx
  41b6aa:	dec    edi
  41b6ab:	pop    ebx
  41b6ac:	push   cs
  41b6ad:	push   ss
  41b6ae:	fiadd  WORD PTR ds:0x64bcb433
  41b6b4:	inc    esi
  41b6b5:	dec    ebp
  41b6b6:	xchg   edi,eax
  41b6b7:	gs lahf 
  41b6b9:	add    al,BYTE PTR [ecx-0xe]
  41b6bc:	dec    edx
  41b6bd:	lods   al,BYTE PTR ds:[esi]
  41b6be:	inc    edx
  41b6bf:	in     al,dx
  41b6c0:	aas    
  41b6c1:	rol    BYTE PTR [ebp-0x6bc33678],1
  41b6c7:	add    bl,BYTE PTR ds:0x6d9a482c
  41b6cd:	out    dx,eax
  41b6ce:	mov    edi,ebx
  41b6d0:	cwde   
  41b6d1:	sub    al,0xde
  41b6d3:	xchg   esp,eax
  41b6d4:	ja     0x41b6ca
  41b6d6:	jle    0x41b66b
  41b6d8:	adc    al,0x24
  41b6da:	fidiv  WORD PTR [esp+ecx*4]
  41b6dd:	fdivr  DWORD PTR [ecx]
  41b6df:	aaa    
  41b6e0:	jbe    0x41b75f
  41b6e2:	inc    ebx
  41b6e3:	in     eax,0x4a
  41b6e5:	mov    cl,0xad
  41b6e7:	arpl   WORD PTR [edi],bx
  41b6e9:	mov    ah,0x64
  41b6eb:	(bad)  
  41b6ec:	ins    BYTE PTR es:[edi],dx
  41b6ed:	inc    eax
  41b6ee:	mov    ebp,ecx
  41b6f0:	cmp    al,BYTE PTR [esi]
  41b6f2:	inc    esp
  41b6f3:	add    cl,BYTE PTR [edx]
  41b6f5:	fidivr WORD PTR [ebp+0x67]
  41b6f8:	jb     0x41b6a3
  41b6fa:	dec    ebp
  41b6fb:	int3   
  41b6fc:	loop   0x41b720
  41b6fe:	call   0xec11a3cb
  41b703:	xchg   ebx,eax
  41b704:	call   0x342c8d4
  41b709:	outs   dx,DWORD PTR ds:[esi]
  41b70a:	push   cs
  41b70b:	cmp    al,BYTE PTR [edx]
  41b70d:	add    esp,0x71e3aac0
  41b713:	cli    
  41b714:	mov    cl,0x62
  41b716:	pop    ss
  41b717:	cli    
  41b718:	jmp    0x41b6bc
  41b71a:	daa    
  41b71b:	test   BYTE PTR [eax-0x30f7fd9],bh
  41b721:	scas   eax,DWORD PTR es:[edi]
  41b722:	or     eax,0xc14fd8d8
  41b727:	fs repz pop es
  41b72a:	sub    edx,DWORD PTR [ebx+0x5af3e66]
  41b730:	enter  0xa610,0xa7
  41b734:	test   BYTE PTR [ebx+0x67b4141d],0xb4
  41b73b:	and    ebx,esi
  41b73d:	leave  
  41b73e:	cmp    al,0xd2
  41b740:	cwde   
  41b741:	clc    
  41b742:	cmc    
  41b743:	mov    al,ds:0x4a537387
  41b748:	add    DWORD PTR [esi+0xd],edi
  41b74b:	mov    al,ds:0x49bcec5b
  41b750:	fiadd  DWORD PTR [ecx]
  41b752:	xchg   ecx,eax
  41b753:	pop    edx
  41b754:	xor    ebx,DWORD PTR [ebp+0x1e6c1ae3]
  41b75a:	jnp    0x41b79c
  41b75c:	repz scas al,BYTE PTR es:[edi]
  41b75e:	dec    edi
  41b75f:	adc    BYTE PTR [ecx+0x29e6e0dc],ah
  41b765:	dec    eax
  41b766:	pop    ebp
  41b767:	cmp    eax,0x78fda58
  41b76c:	mov    ch,0x57
  41b76e:	xlat   BYTE PTR ds:[ebx]
  41b76f:	xchg   edx,eax
  41b770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b771:	rcl    DWORD PTR [edi-0x5d],cl
  41b774:	in     al,dx
  41b775:	lock cwde 
  41b777:	cmc    
  41b778:	mov    esp,0x337a6cb3
  41b77d:	jmp    0x5e2a:0x392126e9
  41b784:	dec    edi
  41b785:	mov    ch,0x2e
  41b787:	adc    al,0x16
  41b789:	sub    eax,0x717de682
  41b78e:	mov    edi,0xbcc50bff
  41b793:	in     eax,dx
  41b794:	xchg   edx,eax
  41b795:	ja     0x41b774
  41b797:	push   cs
  41b798:	div    BYTE PTR [ecx+ebx*2-0x2]
  41b79c:	out    dx,eax
  41b79d:	pop    esi
  41b79e:	push   0xffffff82
  41b7a0:	sbb    edi,eax
  41b7a2:	pop    ebp
  41b7a3:	(bad)  
  41b7a4:	jmp    0x41b73a
  41b7a6:	gs push edx
  41b7a8:	mov    DWORD PTR [ebx],0xa059e689
  41b7ae:	and    BYTE PTR [edx],ch
  41b7b0:	lahf   
  41b7b1:	stos   BYTE PTR es:[edi],al
  41b7b2:	fld    st(7)
  41b7b4:	and    ch,ch
  41b7b6:	outs   dx,DWORD PTR ds:[esi]
  41b7b7:	(bad)  
  41b7b8:	addr16 mov eax,ds:0xe287
  41b7bc:	mov    ecx,0xc3e5244e
  41b7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c2:	jnp    0x41b78a
  41b7c4:	leave  
  41b7c5:	inc    ebp
  41b7c6:	mov    ds:0xbe072c18,al
  41b7cb:	ror    DWORD PTR [edi-0x6c6215a5],1
  41b7d1:	in     eax,0xa0
  41b7d3:	adc    DWORD PTR [ebp+0x65ea3185],ebx
  41b7d9:	sbb    eax,0x3f4435ff
  41b7de:	sbb    bh,BYTE PTR [ecx+0x68]
  41b7e1:	mov    ebx,0x846e8a26
  41b7e6:	dec    esi
  41b7e7:	xor    BYTE PTR [ebp+0x4a771607],al
  41b7ed:	fwait
  41b7ee:	ins    DWORD PTR es:[edi],dx
  41b7ef:	sbb    al,0x87
  41b7f1:	(bad)  
  41b7f2:	std    
  41b7f3:	mov    ?,WORD PTR [eax+0x7375aa61]
  41b7f9:	xchg   ebx,eax
  41b7fa:	jge    0x41b80e
  41b7fc:	sbb    eax,0x34ca632b
  41b801:	loop   0x41b7a6
  41b803:	ss pop edx
  41b805:	in     al,0x52
  41b807:	mov    al,0xd3
  41b809:	cmc    
  41b80a:	sbb    BYTE PTR [ecx],bl
  41b80c:	adc    eax,0x9d6436db
  41b811:	xchg   ebp,eax
  41b812:	fwait
  41b813:	scas   al,BYTE PTR es:[edi]
  41b814:	inc    eax
  41b815:	data16 or BYTE PTR ds:0x58a1bccf,ch
  41b81c:	sbb    ebp,edi
  41b81e:	xor    ch,bl
  41b820:	jo     0x41b86e
  41b822:	or     bh,0xf7
  41b825:	xor    BYTE PTR [ebx+ebp*4],dh
  41b828:	add    al,0x62
  41b82b:	loopne 0x41b7eb
  41b82d:	(bad)  
  41b82e:	jp     0x41b80b
  41b830:	xor    esi,DWORD PTR cs:[edx]
  41b833:	cli    
  41b834:	test   al,0xb8
  41b836:	cdq    
  41b837:	push   ds
  41b838:	retf   
  41b839:	hlt    
  41b83a:	loop   0x41b881
  41b83c:	shr    BYTE PTR [edx+ebp*2],cl
  41b83f:	rcr    dl,cl
  41b841:	imul   DWORD PTR [ebx+edx*8]
  41b844:	mov    bh,0xe1
  41b846:	fdiv   DWORD PTR [eax]
  41b848:	stc    
  41b849:	(bad)  
  41b84a:	jo     0x41b87e
  41b84c:	stos   BYTE PTR es:[edi],al
  41b84d:	jmp    0xc994e53c
  41b852:	sbb    bl,BYTE PTR [ebx+0x4a12e84f]
  41b858:	xor    edi,esp
  41b85a:	fdivr  st,st(2)
  41b85c:	sbb    eax,0x74a3a9e8
  41b861:	push   0xfffffff4
  41b863:	inc    ebp
  41b864:	sbb    eax,DWORD PTR [ebx+0x2d56352]
  41b86a:	push   es
  41b86b:	int    0xfd
  41b86d:	adc    ebx,DWORD PTR [eax-0xd]
  41b870:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b872:	jns    0x41b8d2
  41b874:	leave  
  41b875:	js     0x41b8eb
  41b877:	je     0x41b87f
  41b879:	jp     0x41b88b
  41b87b:	call   0xd48880b
  41b880:	arpl   WORD PTR [ebx-0x77],bx
  41b883:	mov    DWORD PTR [ebx],edi
  41b885:	and    eax,DWORD PTR [ecx+0x1b]
  41b888:	mov    ds:0xc53c6c68,al
  41b88d:	out    0xdf,al
  41b88f:	add    bh,BYTE PTR [esi-0x7fe5dbe7]
  41b895:	and    ah,BYTE PTR [edx-0x63]
  41b898:	adc    esi,esp
  41b89a:	clc    
  41b89b:	(bad)  
  41b89c:	les    ebx,FWORD PTR [ebx+0x3659d20c]
  41b8a2:	mul    DWORD PTR [edi-0x634bf4f7]
  41b8a8:	test   eax,0x6f9aa5bd
  41b8ad:	cmp    eax,edx
  41b8af:	(bad)  
  41b8b0:	(bad)  
  41b8b1:	(bad)  
  41b8b2:	adc    al,0x17
  41b8b4:	push   cs
  41b8b5:	xlat   BYTE PTR ds:[ebx]
  41b8b6:	adc    BYTE PTR [ecx],bh
  41b8b8:	cmc    
  41b8b9:	das    
  41b8ba:	pop    esp
  41b8bb:	sub    al,0x4e
  41b8bd:	push   ebx
  41b8be:	sbb    al,0x29
  41b8c0:	jmp    0x6406:0x945a
  41b8c6:	sbb    al,0xe5
  41b8c8:	pop    ds
  41b8c9:	shr    esp,cl
  41b8cb:	or     ebp,DWORD PTR [eax-0x38]
  41b8ce:	js     0x41b855
  41b8d0:	fild   DWORD PTR [ebx+ebp*8-0x5b]
  41b8d4:	mov    esi,0xc253092c
  41b8d9:	mov    eax,0x36d1f9e3
  41b8de:	pop    sp
  41b8e0:	dec    edi
  41b8e1:	(bad)  
  41b8e2:	(bad)  
  41b8e3:	push   ebp
  41b8e4:	xchg   esp,eax
  41b8e5:	mov    DWORD PTR [ebx+eiz*4+0x625f677e],ebx
  41b8ec:	jge    0x41b8c2
  41b8ee:	test   al,0x10
  41b8f0:	add    al,0x4f
  41b8f2:	test   eax,0x447072ab
  41b8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f8:	xchg   DWORD PTR [eax],edx
  41b8fa:	push   ss
  41b8fb:	add    al,0x2e
  41b8fd:	push   ss
  41b8fe:	ss or  al,0x98
  41b901:	dec    esi
  41b902:	std    
  41b903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b904:	push   esi
  41b905:	stc    
  41b906:	ret    
  41b907:	adc    edi,DWORD PTR [esi+0x6fe27a1c]
  41b90d:	fild   DWORD PTR [edi+0x56]
  41b910:	push   ebp
  41b911:	and    DWORD PTR [edi-0x6c],eax
  41b914:	shl    DWORD PTR [ebx],1
  41b916:	dec    ecx
  41b917:	mov    esp,0x7e667fd4
  41b91c:	cmp    BYTE PTR [edx+0x5b],0x6a
  41b920:	pop    ecx
  41b921:	xchg   BYTE PTR [esi+0x4f5a3de4],ch
  41b927:	push   0xac89eb1c
  41b92c:	inc    ecx
  41b92d:	inc    ebx
  41b92e:	mov    DWORD PTR [ebx-0x5e65ce30],ebx
  41b934:	loope  0x41b989
  41b936:	xor    eax,0x3b0c4e86
  41b93b:	std    
  41b93c:	aam    0x55
  41b93e:	xchg   ebp,eax
  41b93f:	adc    al,0xc0
  41b941:	xor    al,0x4a
  41b943:	pop    ecx
  41b944:	xchg   BYTE PTR [ebx+0x2b],bh
  41b947:	add    BYTE PTR [edi+0x21a8b420],bh
  41b94d:	aaa    
  41b94e:	add    al,0x2e
  41b950:	or     al,0x47
  41b952:	into   
  41b953:	sahf   
  41b954:	mov    BYTE PTR cs:[edi+ecx*1+0xf63d98c],bl
  41b95c:	mov    dh,BYTE PTR [edx-0x61]
  41b95f:	test   eax,0x435bf8ac
  41b964:	dec    eax
  41b965:	mov    ah,0x4a
  41b967:	(bad)  
  41b968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b969:	inc    esi
  41b96a:	adc    eax,0x31b70f2c
  41b96f:	pusha  
  41b970:	leave  
  41b971:	sub    al,0xf5
  41b973:	clc    
  41b974:	shr    DWORD PTR [ecx+eax*4],1
  41b977:	test   al,0x4a
  41b979:	ds push 0xffffffcb
  41b97c:	or     al,BYTE PTR ds:0x5ad6a49c
  41b982:	loope  0x41b958
  41b984:	out    0x21,al
  41b986:	cwde   
  41b987:	(bad)  [ecx]
  41b989:	and    eax,DWORD PTR [eax+0x44566600]
  41b98f:	mov    al,ds:0x742ecbb7
  41b994:	jo     0x41b933
  41b996:	mov    edx,0x8af6cbe5
  41b99b:	push   eax
  41b99c:	inc    edx
  41b99d:	adc    eax,DWORD PTR [esi-0x4d]
  41b9a0:	xchg   esi,eax
  41b9a1:	test   BYTE PTR [eax-0x56],cl
  41b9a4:	lods   al,BYTE PTR ds:[esi]
  41b9a5:	fild   QWORD PTR [ebx-0x280d6a37]
  41b9ab:	jl     0x41b92e
  41b9ad:	or     dl,0x51
  41b9b0:	mov    dl,0x73
  41b9b2:	imul   edi,DWORD PTR [eax],0xffffffe8
  41b9b5:	xchg   edi,eax
  41b9b6:	pushf  
  41b9b7:	inc    ebx
  41b9b8:	mov    cl,0xbb
  41b9ba:	rcl    BYTE PTR [esi+0x7e],0xde
  41b9be:	and    BYTE PTR [edx],bh
  41b9c0:	cdq    
  41b9c1:	pop    ss
  41b9c2:	aaa    
  41b9c3:	jno    0x41b9d5
  41b9c5:	aad    0x42
  41b9c7:	inc    edi
  41b9c8:	test   BYTE PTR [ecx-0x5f19d809],ch
  41b9ce:	jo     0x34c2805
  41b9d4:	ja     0x41ba16
  41b9d6:	int3   
  41b9d7:	iret   
  41b9d8:	inc    ebx
  41b9d9:	rcl    BYTE PTR [esi-0x77d07908],cl
  41b9df:	mov    ecx,0xdf2c5769
  41b9e4:	loop   0x41ba22
  41b9e6:	inc    ebx
  41b9e7:	pop    DWORD PTR [ebx-0x6559574f]
  41b9ed:	stc    
  41b9ee:	fnstcw WORD PTR [ebx+0x3e152455]
  41b9f4:	das    
  41b9f5:	dec    esp
  41b9f6:	mov    edi,0x9b08fd11
  41b9fb:	jnp    0x41ba08
  41b9fd:	aaa    
  41b9fe:	inc    esp
  41b9ff:	inc    esi
  41ba00:	xor    al,BYTE PTR [ebx]
  41ba02:	xchg   BYTE PTR [ecx+0x2f],dh
  41ba05:	or     dh,bl
  41ba07:	or     BYTE PTR [edi-0x2e2cd0b0],al
  41ba0d:	pop    ss
  41ba0e:	and    ebx,edx
  41ba10:	enter  0x2a05,0xcd
  41ba14:	adc    bh,cl
  41ba16:	(bad)  
  41ba17:	sti    
  41ba18:	sbb    bh,0x42
  41ba1b:	jmp    0xc860ecd9
  41ba20:	mov    dl,0x45
  41ba22:	jnp    0x41ba4b
  41ba24:	or     DWORD PTR [esi+eax*4+0x4f],ebp
  41ba28:	and    edx,DWORD PTR [esi+0x2c]
  41ba2b:	cmp    ah,BYTE PTR [edi-0x3613b944]
  41ba31:	and    ah,BYTE PTR [edi]
  41ba33:	inc    eax
  41ba34:	jnp    0x41ba66
  41ba36:	repz retf 
  41ba38:	into   
  41ba39:	(bad)  
  41ba3a:	jbe    0x41ba24
  41ba3c:	push   ds
  41ba3d:	cmp    eax,esp
  41ba3f:	inc    edi
  41ba40:	mov    esp,0xa1b56ddb
  41ba45:	loop   0x41ba9b
  41ba47:	inc    eax
  41ba48:	xchg   ebx,eax
  41ba49:	loope  0x41ba31
  41ba4b:	jp     0x41ba44
  41ba4d:	mov    dl,0x20
  41ba4f:	jae    0x41b9e4
  41ba51:	scas   eax,DWORD PTR es:[edi]
  41ba52:	push   esi
  41ba53:	or     BYTE PTR [ecx-0x7de79fcd],ch
  41ba59:	sbb    ah,BYTE PTR [ebx+0x15]
  41ba5c:	push   cs
  41ba5d:	sub    esp,DWORD PTR [esi-0x19]
  41ba60:	xchg   esp,eax
  41ba61:	cld    
  41ba62:	sub    bh,ah
  41ba64:	mov    esi,0xc73085fb
  41ba69:	pop    eax
  41ba6a:	xor    DWORD PTR [edi-0x25df1123],0xee334440
  41ba74:	bswap  ecx
  41ba76:	outs   dx,BYTE PTR ds:[esi]
  41ba77:	pushf  
  41ba78:	adc    ebx,ebp
  41ba7a:	popf   
  41ba7b:	mov    ah,0xc4
  41ba7d:	(bad)  
  41ba7e:	push   es
  41ba7f:	mov    ds:0x5f09fc8a,al
  41ba84:	cmp    DWORD PTR [ebp+0x7904c6d1],eax
  41ba8a:	sbb    dl,BYTE PTR [edx-0x46ef9d46]
  41ba90:	mov    esi,0x31d7e40e
  41ba95:	jmp    ecx
  41ba97:	sub    ebp,esi
  41ba99:	xchg   ebx,eax
  41ba9a:	push   ebp
  41ba9b:	mov    eax,?
  41ba9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba9e:	jp     0x41ba68
  41baa0:	test   eax,0x8136e7bd
  41baa5:	int    0xd0
  41baa7:	pop    ecx
  41baa8:	inc    edi
  41baa9:	add    ecx,DWORD PTR [edi+0x3ea6a6b9]
  41baaf:	jl     0x41baf3
  41bab1:	int3   
  41bab2:	dec    esp
  41bab3:	fs pop ecx
  41bab5:	push   esi
  41bab6:	cdq    
  41bab7:	or     dl,bh
  41bab9:	idiv   DWORD PTR [ebp+0xe3af853]
  41babf:	je     0x41bb01
  41bac1:	dec    ebp
  41bac2:	xchg   edi,eax
  41bac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac4:	jecxz  0x41bb42
  41bac6:	leave  
  41bac7:	lea    esp,[edx-0x15]
  41baca:	(bad)  
  41bacb:	in     eax,0xca
  41bacd:	dec    eax
  41bace:	iret   
  41bacf:	ss push esp
  41bad1:	stc    
  41bad2:	or     eax,0x8b5cc727
  41bad7:	push   ecx
  41bad8:	xchg   ecx,edx
  41bada:	repnz xchg esp,eax
  41badc:	call   0xef18:0x28ba50c7
  41bae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae4:	cmp    ebp,edx
  41bae6:	mov    WORD PTR [edx],fs
  41bae8:	not    ecx
  41baea:	or     dl,BYTE PTR [edi]
  41baec:	int    0xd9
  41baee:	inc    edx
  41baef:	dec    ah
  41baf1:	call   0x3c354c08
  41baf6:	inc    eax
  41baf7:	sbb    eax,0xed7a2c90
  41bafc:	les    esp,FWORD PTR [edi]
  41bafe:	retf   
  41baff:	jle    0x41ba9e
  41bb01:	dec    edi
  41bb02:	push   ecx
  41bb03:	push   eax
  41bb04:	ret    
  41bb05:	fimul  WORD PTR [esi+0x3d]
  41bb08:	scas   al,BYTE PTR es:[edi]
  41bb09:	outs   dx,BYTE PTR ds:[esi]
  41bb0a:	push   esp
  41bb0b:	xor    eax,edx
  41bb0d:	xchg   ebp,eax
  41bb0e:	ins    DWORD PTR es:[edi],dx
  41bb0f:	cmc    
  41bb10:	xor    DWORD PTR [esi+0x1e],esi
  41bb13:	xor    eax,0x65d00af1
  41bb18:	mov    ah,0xe1
  41bb1a:	sbb    ebp,DWORD PTR [eax+0x19239d52]
  41bb20:	mov    edx,0x68ec3b8d
  41bb25:	pop    DWORD PTR [edx]
  41bb27:	mov    cl,0x6d
  41bb29:	mov    ah,0xec
  41bb2b:	cmp    ah,BYTE PTR [eax-0x3d86de0e]
  41bb31:	xchg   DWORD PTR [ebp-0x16],ebp
  41bb34:	shr    BYTE PTR [edi+0x4759085c],0x9
  41bb3b:	pop    edi
  41bb3c:	shl    BYTE PTR [eax],cl
  41bb3e:	inc    ebp
  41bb3f:	or     DWORD PTR [edx+0x61],ebp
  41bb42:	cmp    al,0x9
  41bb44:	scas   eax,DWORD PTR es:[edi]
  41bb45:	jp     0x41baf0
  41bb47:	stos   DWORD PTR es:[edi],eax
  41bb48:	dec    ebx
  41bb49:	repnz retf 0xbcbf
  41bb4d:	push   ecx
  41bb4e:	aaa    
  41bb4f:	fcmovnb st,st(2)
  41bb51:	daa    
  41bb52:	cmp    DWORD PTR [ecx-0x2877cdc1],0x82ee5459
  41bb5c:	mov    eax,DWORD PTR [esi]
  41bb5e:	lea    esp,[ecx]
  41bb60:	xor    eax,0x4e9361ad
  41bb65:	mov    DWORD PTR gs:[edx+0x53d62306],ebx
  41bb6c:	and    eax,0x8256fe24
  41bb71:	je     0x41bb33
  41bb73:	mov    eax,0x1694263
  41bb78:	pop    edx
  41bb79:	sahf   
  41bb7a:	lods   eax,DWORD PTR ds:[esi]
  41bb7b:	into   
  41bb7c:	xor    BYTE PTR [edi+0x31151a82],0x34
  41bb83:	dec    esp
  41bb84:	cmp    cl,BYTE PTR [edx-0x480edfbc]
  41bb8a:	out    0xa6,al
  41bb8c:	call   FWORD PTR cs:[edx]
  41bb8f:	sbb    DWORD PTR [esp+ebp*1+0x29497688],ebp
  41bb96:	mov    eax,ds:0xe37317ca
  41bb9b:	(bad)  
  41bb9c:	jns    0x41bbe2
  41bb9e:	xor    BYTE PTR [eax],dh
  41bba0:	fdivr  QWORD PTR [edx]
  41bba2:	mov    eax,ds:0x9dc8e3be
  41bba7:	loope  0x41bb97
  41bba9:	div    al
  41bbab:	mov    fs,WORD PTR [ecx]
  41bbad:	inc    ebx
  41bbae:	add    ebx,DWORD PTR [ecx+0x68]
  41bbb1:	je     0x41bb3b
  41bbb3:	add    dh,BYTE PTR [esi]
  41bbb5:	adc    dh,BYTE PTR [edx]
  41bbb7:	cmp    BYTE PTR [edx],al
  41bbb9:	mov    esi,0x7dc7ec8a
  41bbbe:	fld    DWORD PTR [ecx+esi*1-0x21ec4a9d]
  41bbc5:	or     ah,BYTE PTR fs:[ebp+0x23]
  41bbc9:	fst    DWORD PTR cs:[esi+0xc201388]
  41bbd0:	and    BYTE PTR [eax],cl
  41bbd2:	or     ch,BYTE PTR [esi+ebp*8-0x17]
  41bbd6:	retf   
  41bbd7:	sub    edx,DWORD PTR [ecx+edi*4]
  41bbda:	sahf   
  41bbdb:	mov    ecx,0x935c237
  41bbe0:	cmc    
  41bbe1:	out    dx,al
  41bbe2:	pop    es
  41bbe3:	shr    DWORD PTR [eax],0xb8
  41bbe6:	cmp    eax,0x616ecca0
  41bbeb:	sub    al,0x25
  41bbed:	inc    eax
  41bbee:	fs dec ebx
  41bbf0:	or     eax,0x12bfe9d0
  41bbf5:	cmp    DWORD PTR [eax+0x53],edi
  41bbf8:	mov    DWORD PTR [edx+0x6b],ebx
  41bbfb:	and    esp,esp
  41bbfd:	ds pop edx
  41bbff:	cdq    
  41bc00:	mov    al,0x12
  41bc02:	(bad)  
  41bc03:	cmp    DWORD PTR [edi],edi
  41bc05:	(bad)  
  41bc06:	sub    esi,DWORD PTR [edx+0x1cedf6c5]
  41bc0c:	bound  ecx,QWORD PTR [edx-0x3e]
  41bc0f:	cmp    eax,0x6a1bef91
  41bc14:	mul    BYTE PTR [ebp-0x23]
  41bc17:	jno    0x41bc81
  41bc19:	dec    esi
  41bc1a:	cld    
  41bc1b:	sbb    eax,0x6e9b96fa
  41bc20:	imul   bl
  41bc22:	fdivr  st,st(0)
  41bc24:	mov    dl,0x85
  41bc26:	cmp    BYTE PTR [ebx+0xf],0x14
  41bc2a:	gs loopne 0x41bbe3
  41bc2d:	cmp    BYTE PTR [esi],dl
  41bc2f:	push   edi
  41bc30:	add    ah,BYTE PTR [ebp+0x29e491af]
  41bc36:	mov    al,ds:0x37da1448
  41bc3b:	push   es
  41bc3c:	stos   BYTE PTR es:[edi],al
  41bc3d:	shr    ebp,0xbc
  41bc40:	dec    ecx
  41bc41:	(bad)  
  41bc42:	(bad)  
  41bc43:	aam    0xc2
  41bc45:	xchg   ebp,eax
  41bc46:	jne    0x41bc88
  41bc48:	and    dl,BYTE PTR cs:[edi]
  41bc4b:	outs   dx,DWORD PTR ds:[esi]
  41bc4c:	jnp    0x41bc6e
  41bc4e:	js     0x41bc96
  41bc50:	sbb    ch,BYTE PTR ds:0xe8a5f1e2
  41bc56:	loope  0x41bbdf
  41bc58:	mov    esi,0x1cb08ebb
  41bc5d:	(bad)  [ecx]
  41bc5f:	dec    esi
  41bc60:	sub    dl,BYTE PTR [ecx+0x7c0d96d1]
  41bc66:	fmul   QWORD PTR [esi-0x2d7db1b7]
  41bc6c:	(bad)  
  41bc6d:	pusha  
  41bc6e:	cmp    eax,0xa9829d1b
  41bc73:	test   esp,edi
  41bc75:	cwde   
  41bc76:	sub    ebp,DWORD PTR [eax-0x18f50648]
  41bc7c:	out    dx,eax
  41bc7d:	and    esi,DWORD PTR [ebx+0x6f]
  41bc80:	mov    bl,0x95
  41bc82:	mov    ebx,0x46fb0012
  41bc87:	push   cs
  41bc88:	xor    al,0x36
  41bc8a:	(bad)  
  41bc8b:	pop    edi
  41bc8c:	call   DWORD PTR [edi+0x11]
  41bc8f:	es dec ebp
  41bc91:	(bad)  
  41bc92:	sub    edx,DWORD PTR [esp+edi*2]
  41bc95:	inc    edx
  41bc96:	(bad)  
  41bc97:	addr16 jnp 0x41bc27
  41bc9a:	ss retf 
  41bc9c:	fs scas eax,DWORD PTR es:[edi]
  41bc9e:	jle    0x41bcd5
  41bca0:	inc    eax
  41bca1:	jnp    0x41bd20
  41bca3:	sbb    DWORD PTR [ebp-0x7535c39],ebp
  41bca9:	mov    ebp,0xc983e8be
  41bcae:	adc    edi,DWORD PTR [eax+ecx*8+0x43328bf0]
  41bcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb6:	(bad)  
  41bcb7:	(bad)  
  41bcb8:	adc    al,BYTE PTR [ebx]
  41bcba:	jbe    0x41bcf3
  41bcbc:	fdiv   st(3),st
  41bcbe:	test   BYTE PTR [edx+0x52e4a22c],dh
  41bcc4:	mov    ah,0x2
  41bcc6:	push   ebp
  41bcc7:	call   0xf0db:0x57dbffc0
  41bcce:	xchg   ebx,eax
  41bccf:	jne    0x41bc68
  41bcd1:	cpuid  
  41bcd3:	mov    esi,0x7b2de291
  41bcd8:	sar    ch,1
  41bcda:	daa    
  41bcdb:	sti    
  41bcdc:	adc    ecx,DWORD PTR [ebp-0x38235b69]
  41bce2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41bce4:	ret    0x4843
  41bce7:	test   al,0x49
  41bce9:	loopne 0x41bd25
  41bceb:	mov    edi,0xe8478338
  41bcf0:	call   0xa7c:0x21db1af2
  41bcf7:	das    
  41bcf8:	cdq    
  41bcf9:	pop    eax
  41bcfa:	fadd   QWORD PTR [ebp-0x6a]
  41bcfd:	popa   
  41bcfe:	jl     0x41bc9e
  41bd00:	jne    0x41bcfd
  41bd02:	dec    edx
  41bd03:	xchg   edi,eax
  41bd04:	daa    
  41bd05:	xchg   bl,ah
  41bd07:	bound  ecx,QWORD PTR [esi+esi*8-0x582d8faa]
  41bd0e:	leave  
  41bd0f:	and    eax,0xbae3e6a5
  41bd14:	add    BYTE PTR [ecx],ch
  41bd16:	jp     0x41bd7f
  41bd18:	loop   0x41bd09
  41bd1a:	xchg   edx,eax
  41bd1b:	in     eax,0xc1
  41bd1d:	sub    edx,edi
  41bd1f:	cmp    edi,DWORD PTR [ebx-0x3043b6c6]
  41bd25:	repz fcompp 
  41bd28:	inc    ebx
  41bd29:	sbb    BYTE PTR [ecx-0x20abaf81],bh
  41bd2f:	push   ds
  41bd30:	imul   eax,edi,0x4c
  41bd33:	dec    ebp
  41bd34:	rol    DWORD PTR [edi+0x588f6b64],cl
  41bd3a:	cmp    ebx,DWORD PTR [ecx]
  41bd3c:	xor    dh,cl
  41bd3e:	dec    ecx
  41bd3f:	cli    
  41bd40:	sbb    eax,0x7c8e65de
  41bd45:	in     eax,dx
  41bd46:	cmp    dh,BYTE PTR [ecx+esi*4]
  41bd49:	fsubr  DWORD PTR ds:0x7fb16dde
  41bd4f:	adc    esp,DWORD PTR [ebx]
  41bd51:	sbb    DWORD PTR ds:0xea9a1e13,esp
  41bd57:	inc    edi
  41bd58:	mov    esi,ecx
  41bd5a:	sbb    BYTE PTR [eax+0x4d],al
  41bd5d:	and    bh,BYTE PTR [esi-0x23]
  41bd60:	icebp  
  41bd61:	adc    eax,0xdf52b9cc
  41bd66:	aas    
  41bd67:	cmp    edi,DWORD PTR [ebp+0x5f]
  41bd6a:	jo     0x41bd5b
  41bd6c:	les    ebp,FWORD PTR [ebx]
  41bd6e:	sub    ebp,DWORD PTR [ebp+esi*8-0x59]
  41bd72:	sbb    BYTE PTR [ebp+0x6d42ed97],ah
  41bd78:	mov    al,ds:0xdad93f52
  41bd7d:	dec    edx
  41bd7e:	cmp    DWORD PTR [edi-0x356f632a],ecx
  41bd84:	adc    dl,BYTE PTR [edx]
  41bd86:	je     0x41bdf5
  41bd88:	push   ecx
  41bd89:	sbb    ch,BYTE PTR [esi+0xe]
  41bd8c:	mov    esi,DWORD PTR [edx-0x9083969]
  41bd92:	push   edx
  41bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd94:	clc    
  41bd95:	repz sti 
  41bd97:	leave  
  41bd98:	jo     0x41bdeb
  41bd9a:	cmp    ah,BYTE PTR [ecx+0x40]
  41bd9d:	pop    ds
  41bd9e:	outs   dx,DWORD PTR ds:[esi]
  41bd9f:	adc    DWORD PTR [ecx],edi
  41bda1:	mov    al,ss:0xaeddf93d
  41bda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda8:	fcmovb st,st(0)
  41bdaa:	test   al,0xfd
  41bdac:	retf   0xab02
  41bdaf:	jo     0x41bdf5
  41bdb1:	dec    ebx
  41bdb2:	ins    DWORD PTR es:[edi],dx
  41bdb3:	mov    bl,0xbc
  41bdb5:	inc    eax
  41bdb6:	ins    DWORD PTR es:[edi],dx
  41bdb7:	mul    BYTE PTR [eax-0xefa579e]
  41bdbd:	call   0xb143fb79
  41bdc2:	cmp    DWORD PTR [esi],edi
  41bdc4:	inc    edi
  41bdc5:	push   ebx
  41bdc6:	mov    dl,0xca
  41bdc8:	xchg   edx,eax
  41bdc9:	mov    BYTE PTR [ecx+eiz*4+0x167a611],dh
  41bdd0:	adc    DWORD PTR [ebp+0x44c31a97],ebp
  41bdd6:	sbb    eax,0xd3121bd3
  41bddb:	mov    bl,0x35
  41bddd:	mov    ds:0x65a87452,al
  41bde2:	std    
  41bde3:	mov    DWORD PTR [edi-0x18],ecx
  41bde6:	in     al,dx
  41bde7:	enter  0x6730,0x98
  41bdeb:	cli    
  41bdec:	icebp  
  41bded:	dec    eax
  41bdee:	adc    al,ch
  41bdf0:	shr    BYTE PTR [edi+0x262c5799],0x87
  41bdf7:	jle    0x41bd8e
  41bdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfa:	dec    edi
  41bdfb:	ret    0x226
  41bdfe:	xchg   edx,eax
  41bdff:	fcmovbe st,st(5)
  41be01:	scas   eax,DWORD PTR es:[edi]
  41be02:	out    0x87,al
  41be04:	and    DWORD PTR [edi+0x3ee4d88b],ebp
  41be0a:	or     dl,bl
  41be0c:	ret    0x93e2
  41be0f:	cdq    
  41be10:	and    esi,0x6d8d1ca0
  41be16:	adc    esi,0x28e24cfd
  41be1c:	sahf   
  41be1d:	push   0xd30051ae
  41be22:	nop
  41be23:	aas    
  41be24:	int3   
  41be25:	xchg   ebx,eax
  41be26:	scas   al,BYTE PTR es:[edi]
  41be27:	jno    0x41be11
  41be29:	in     al,dx
  41be2a:	xchg   BYTE PTR [eax],dh
  41be2c:	rol    DWORD PTR [ebx+ebp*8],0x4a
  41be30:	inc    ebp
  41be31:	rol    DWORD PTR [ebx],cl
  41be33:	ins    BYTE PTR es:[edi],dx
  41be34:	stos   DWORD PTR es:[edi],eax
  41be35:	je     0x41be6d
  41be37:	jne    0x41be9a
  41be39:	jecxz  0x41be75
  41be3b:	enter  0x982f,0x57
  41be3f:	adc    esp,DWORD PTR [eax]
  41be41:	push   0xffffffb7
  41be43:	fdivr  QWORD PTR [edx]
  41be45:	mov    DWORD PTR [esi-0x6fc4cdc5],ebp
  41be4b:	retf   
  41be4c:	in     eax,0xb2
  41be4e:	call   0xacd74bcc
  41be53:	and    eax,0x262dac98
  41be58:	ds jl  0x41be30
  41be5b:	enter  0xb810,0x63
  41be5f:	mov    esi,0xb86303c6
  41be64:	fsubr  QWORD PTR [edi+0x17]
  41be67:	jo     0x41beac
  41be69:	adc    DWORD PTR [eax],ebx
  41be6b:	pop    esi
  41be6c:	push   esp
  41be6d:	jo     0x41bed8
  41be6f:	rcr    BYTE PTR [edi-0x5a],1
  41be72:	je     0x41be71
  41be74:	xor    ebp,DWORD PTR [ecx-0x744bcc2e]
  41be7a:	lods   al,BYTE PTR ds:[esi]
  41be7b:	cmp    BYTE PTR [eax+ebp*1],al
  41be7e:	mov    ds:0xefe76e87,eax
  41be83:	jbe    0x41be62
  41be85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be86:	sti    
  41be87:	pop    ebp
  41be88:	mov    edx,0xc9db763b
  41be8d:	cmp    esp,edx
  41be8f:	test   bh,dl
  41be91:	(bad)  
  41be92:	imul   BYTE PTR [edx]
  41be94:	scas   eax,DWORD PTR es:[edi]
  41be95:	mov    esi,0xfcf5cebf
  41be9a:	retf   0xc30f
  41be9d:	xor    DWORD PTR [eax-0x57],esi
  41bea0:	loopne 0x41be41
  41bea2:	jge    0x41be76
  41bea4:	scas   al,BYTE PTR es:[edi]
  41bea5:	scas   al,BYTE PTR es:[edi]
  41bea6:	aaa    
  41bea7:	add    al,BYTE PTR [edx-0xd]
  41beaa:	mov    DWORD PTR [edx-0x1ef71d47],0xc828174c
  41beb4:	mov    dl,ch
  41beb6:	and    BYTE PTR [eax-0x6f2cd353],al
  41bebc:	enter  0x568,0xa7
  41bec0:	pop    ss
  41bec1:	add    BYTE PTR [ebp+0x12538ca1],ch
  41bec7:	mov    ah,0x24
  41bec9:	jo     0x41beb7
  41becb:	xchg   ecx,eax
  41becc:	popa   
  41becd:	mov    eax,0x4883fa7a
  41bed2:	fnstenv [edi-0x1c]
  41bed5:	das    
  41bed6:	push   ds
  41bed7:	fidivr WORD PTR [edx-0x35]
  41beda:	or     dl,ah
  41bedc:	cmp    ecx,DWORD PTR [ecx-0x6e]
  41bedf:	and    esi,0xa4f4c7dc
  41bee5:	add    ch,bl
  41bee7:	or     eax,0xd26afa2d
  41beec:	(bad)  
  41beed:	retf   0x3075
  41bef0:	aas    
  41bef1:	pop    ecx
  41bef2:	scas   al,BYTE PTR es:[edi]
  41bef3:	add    dh,dh
  41bef5:	mov    ebx,eax
  41bef7:	loop   0x41beb4
  41bef9:	jae    0x41bf12
  41befb:	xchg   ebp,eax
  41befc:	jbe    0x41bf69
  41befe:	aas    
  41beff:	retf   
  41bf00:	sub    eax,0x71194ded
  41bf05:	das    
  41bf06:	inc    esi
  41bf07:	int    0xc0
  41bf09:	rep ins DWORD PTR es:[edi],dx
  41bf0b:	or     eax,0x1091b6c2
  41bf10:	adc    dh,BYTE PTR [ecx-0x1155b936]
  41bf16:	adc    dh,dl
  41bf18:	push   ds
  41bf19:	jne    0x41bf5a
  41bf1b:	inc    esi
  41bf1c:	cmp    cl,BYTE PTR [esi]
  41bf1e:	push   ds
  41bf1f:	out    0x33,al
  41bf21:	in     eax,0x61
  41bf23:	pop    ebx
  41bf24:	or     ebp,DWORD PTR [edx+0x12eb7af1]
  41bf2a:	cmp    eax,0x422bf7a9
  41bf2f:	dec    esi
  41bf30:	es inc edx
  41bf32:	jnp    0x41bf7d
  41bf34:	xchg   esp,eax
  41bf35:	test   BYTE PTR [eax+0x42d9ab18],dh
  41bf3b:	pop    es
  41bf3c:	jecxz  0x41bf43
  41bf3e:	ins    BYTE PTR es:[edi],dx
  41bf3f:	into   
  41bf40:	lds    edx,FWORD PTR [ebp-0x4c]
  41bf43:	ror    DWORD PTR [esi-0x3425e4c3],cl
  41bf49:	imul   ecx,DWORD PTR [ebx-0x11],0x5797ce3a
  41bf50:	dec    edi
  41bf51:	cld    
  41bf52:	(bad)  
  41bf53:	mov    ds:0xfbc06501,eax
  41bf58:	add    al,BYTE PTR [eax]
  41bf5a:	stos   DWORD PTR es:[edi],eax
  41bf5b:	or     DWORD PTR [edi-0x57],edx
  41bf5e:	pop    ds
  41bf5f:	xor    ch,BYTE PTR [edi*4-0x717f5cf]
  41bf66:	add    eax,0x60affb35
  41bf6b:	xchg   esi,eax
  41bf6c:	sub    eax,0x229d538
  41bf71:	push   eax
  41bf72:	shr    DWORD PTR [edi+0x40e3e942],1
  41bf78:	fyl2x  
  41bf7a:	(bad)  
  41bf7c:	add    al,0xf8
  41bf7e:	pop    ss
  41bf7f:	jmp    0x41bf5a
  41bf81:	adc    al,0xd1
  41bf83:	dec    esp
  41bf84:	ja     0x41bfab
  41bf86:	mov    ah,0x2c
  41bf88:	xchg   ebx,eax
  41bf89:	loope  0x41c003
  41bf8b:	aas    
  41bf8c:	psllw  mm5,QWORD PTR ds:0x4022d5fd
  41bf93:	fisttp DWORD PTR [ebp+0x18ec8535]
  41bf99:	(bad)  
  41bf9a:	rcl    DWORD PTR es:[ebx+0x4c61aa27],0xc1
  41bfa2:	cwde   
  41bfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa4:	test   edi,0x15702f37
  41bfaa:	test   DWORD PTR [ebp-0x66],esi
  41bfad:	sti    
  41bfae:	push   ds
  41bfaf:	push   esp
  41bfb0:	and    eax,DWORD PTR [edx-0x4f73f83f]
  41bfb6:	sub    DWORD PTR [ebp+ecx*4-0x72],ecx
  41bfba:	nop
  41bfbb:	push   0x54
  41bfbd:	ss ror ah,cl
  41bfc0:	and    al,0x8e
  41bfc2:	clc    
  41bfc3:	pop    es
  41bfc4:	pop    eax
  41bfc5:	pushf  
  41bfc6:	xor    eax,0xbbae25b7
  41bfcb:	ins    DWORD PTR es:[edi],dx
  41bfcc:	adc    al,0x35
  41bfce:	xor    cl,al
  41bfd0:	jle    0x41c016
  41bfd2:	in     al,dx
  41bfd3:	sub    DWORD PTR ss:[esi+0x38],0x4
  41bfd8:	jno    0x41bf99
  41bfda:	or     ebx,DWORD PTR [ebx]
  41bfdc:	push   DWORD PTR [eax-0x37f9dccb]
  41bfe2:	das    
  41bfe3:	inc    edx
  41bfe4:	lahf   
  41bfe5:	adc    al,0x62
  41bfe7:	jg     0x41bf9e
  41bfe9:	mov    ah,0x30
  41bfeb:	stos   DWORD PTR es:[edi],eax
  41bfec:	test   dl,ch
  41bfee:	aas    
  41bfef:	or     ah,dh
  41bff1:	imul   esp,DWORD PTR [ebx],0x101726f6
  41bff7:	mov    ebp,0xe25fd10c
  41bffc:	or     edx,DWORD PTR [eax-0x78336e95]
  41c002:	mov    es,ebx
  41c004:	pushf  
  41c005:	pop    eax
  41c006:	adc    BYTE PTR [ecx-0x25],dl
  41c009:	jnp    0x41c010
  41c00b:	bound  eax,QWORD PTR [esi-0x32]
  41c00e:	fwait
  41c00f:	xor    BYTE PTR [edi],bl
  41c011:	repnz test cl,dl
  41c014:	lea    ebx,[edx+edi*8]
  41c017:	lods   al,BYTE PTR ds:[esi]
  41c018:	sar    BYTE PTR [ecx],cl
  41c01a:	add    cl,BYTE PTR [esi+0x50]
  41c01d:	sub    BYTE PTR ds:0x7642f50e,bl
  41c023:	pop    ebp
  41c024:	dec    ecx
  41c025:	iret   
  41c026:	iret   
  41c027:	in     eax,0xa0
  41c029:	nop
  41c02a:	push   ebp
  41c02b:	es and eax,0x83d30261
  41c031:	pop    edi
  41c032:	fst    st(3)
  41c034:	icebp  
  41c035:	fninit 
  41c037:	sbb    dl,BYTE PTR [ebp+esi*8+0x1afe6b8c]
  41c03e:	adc    eax,0x81906069
  41c043:	mov    eax,0xbb83a773
  41c048:	xchg   bh,dl
  41c04a:	fisubr WORD PTR [ebx]
  41c04c:	test   al,0x50
  41c04e:	outs   dx,DWORD PTR ds:[esi]
  41c04f:	push   ecx
  41c050:	in     al,0x82
  41c052:	inc    ebp
  41c053:	ss push esi
  41c055:	hlt    
  41c056:	dec    edi
  41c057:	push   ecx
  41c058:	(bad)  
  41c059:	out    dx,al
  41c05a:	sbb    al,0x8c
  41c05c:	fst    st(6)
  41c05e:	push   ecx
  41c05f:	mov    edi,0x66ffee47
  41c064:	inc    edi
  41c065:	add    bl,BYTE PTR [eax+0x41b4616d]
  41c06b:	(bad)  
  41c06c:	les    esi,FWORD PTR [ebx]
  41c06e:	out    0x9e,al
  41c070:	inc    esi
  41c071:	cmp    al,BYTE PTR ds:0x4c7bd287
  41c077:	in     al,dx
  41c078:	jmp    0xa1ac:0x76137a09
  41c07f:	ror    BYTE PTR [esi-0x713c92e3],1
  41c085:	jbe    0x41c091
  41c087:	pop    ebp
  41c088:	push   esp
  41c089:	mov    WORD PTR [ecx+esi*4-0x55bae482],ds
  41c090:	dec    esp
  41c091:	nop
  41c092:	pop    ss
  41c093:	mov    ch,0xd0
  41c095:	mov    ebp,DWORD PTR [esi]
  41c097:	add    DWORD PTR [ebp+esi*8+0x31e80d75],0x6d
  41c09f:	enter  0xf120,0xad
  41c0a3:	sbb    dl,BYTE PTR [ecx]
  41c0a5:	and    eax,0xdac1a525
  41c0aa:	pop    edx
  41c0ab:	out    0x7c,eax
  41c0ad:	std    
  41c0ae:	lods   al,BYTE PTR ds:[esi]
  41c0af:	(bad)  
  41c0b0:	es mov edi,0xdf3eb703
  41c0b6:	enter  0x61ce,0x6a
  41c0ba:	pop    ecx
  41c0bb:	rcr    BYTE PTR [eax+0x24],0x59
  41c0bf:	fstp   TBYTE PTR [edx+0x15dfa235]
  41c0c5:	lods   eax,DWORD PTR ds:[esi]
  41c0c6:	sbb    al,0xe3
  41c0c8:	lods   eax,DWORD PTR ds:[esi]
  41c0c9:	or     eax,0x8de0b1c8
  41c0ce:	mov    esp,DWORD PTR [edi-0x37]
  41c0d1:	clc    
  41c0d2:	das    
  41c0d3:	lods   al,BYTE PTR ds:[esi]
  41c0d4:	call   0xb96:0x2152f6fe
  41c0db:	jl     0x41c083
  41c0dd:	jecxz  0x41c132
  41c0df:	add    al,0x4c
  41c0e1:	popa   
  41c0e2:	ucomiss xmm5,DWORD PTR [ebx+0x4f]
  41c0e6:	and    BYTE PTR [esp+ebp*4+0x54],cl
  41c0ea:	mov    al,ds:0x2270a914
  41c0ef:	aam    0x43
  41c0f1:	sub    esp,edi
  41c0f3:	aas    
  41c0f4:	sahf   
  41c0f5:	xor    BYTE PTR [eax+esi*2-0x54],bl
  41c0f9:	mov    bl,0x1a
  41c0fb:	shl    DWORD PTR [edi-0x471df4fb],1
  41c101:	ds sbb eax,0x41e42ac3
  41c107:	in     eax,dx
  41c108:	or     BYTE PTR [ebx-0x992ab58],cl
  41c10e:	inc    esp
  41c10f:	aam    0x18
  41c111:	sti    
  41c112:	(bad)  
  41c113:	mov    ds:0x171cc39d,eax
  41c118:	sub    dh,bh
  41c11a:	jle    0x41c0ed
  41c11c:	jns    0x41c0ec
  41c11e:	inc    eax
  41c11f:	xchg   DWORD PTR [ebp*8-0x5eb5cf76],eax
  41c126:	pop    es
  41c127:	pop    ecx
  41c128:	mov    di,0xadda
  41c12c:	inc    esp
  41c12d:	int3   
  41c12e:	dec    ebp
  41c12f:	enter  0xeb50,0xd9
  41c133:	and    bl,BYTE PTR [esp+edx*8]
  41c136:	into   
  41c137:	fstp   QWORD PTR [ebp-0x6d]
  41c13a:	add    DWORD PTR [ecx+ebp*8+0x1c],esi
  41c13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13f:	inc    edx
  41c140:	(bad)  
  41c141:	dec    eax
  41c142:	inc    ebp
  41c143:	or     al,BYTE PTR [edi]
  41c145:	lea    ecx,[esi]
  41c147:	sti    
  41c148:	adc    eax,0x45a3686a
  41c14d:	add    DWORD PTR [ecx+eax*2-0x5756650a],edi
  41c154:	sbb    eax,0x1597207b
  41c159:	adc    edx,eax
  41c15b:	dec    esp
  41c15c:	dec    edx
  41c15d:	lds    esp,FWORD PTR [edi-0x4]
  41c160:	ins    DWORD PTR es:[edi],dx
  41c161:	inc    esi
  41c162:	pop    ecx
  41c163:	inc    edx
  41c164:	push   cs
  41c165:	lds    edx,FWORD PTR [edx+0x4b]
  41c168:	xchg   ebx,eax
  41c169:	rcl    DWORD PTR [edx+edx*8-0x2ba99ade],cl
  41c170:	data16 ror BYTE PTR [eax+0x3ffd42e1],cl
  41c177:	pop    ss
  41c178:	inc    esi
  41c179:	jp     0x41c14a
  41c17b:	push   ebp
  41c17c:	xor    al,0x7c
  41c17e:	inc    ebx
  41c17f:	not    DWORD PTR [esi]
  41c181:	push   0xffffff80
  41c183:	loope  0x41c14e
  41c185:	ret    0xadb7
  41c188:	div    ebx
  41c18a:	sbb    eax,0x626619fb
  41c18f:	xlat   BYTE PTR ds:[ebx]
  41c190:	in     al,0xb5
  41c192:	mov    ds:0xaf54778b,eax
  41c197:	add    ebp,eax
  41c199:	lock dec ebx
  41c19b:	ja     0x41c120
  41c19d:	loop   0x41c177
  41c19f:	into   
  41c1a0:	(bad)  
  41c1a2:	fistp  QWORD PTR [edi+edx*8-0x20578feb]
  41c1a9:	mov    ch,0x35
  41c1ab:	sub    BYTE PTR [edi],0x2e
  41c1ae:	imul   edi,DWORD PTR [eax],0x6c0c0f5a
  41c1b4:	fimul  DWORD PTR [eax+edi*1-0x76]
  41c1b8:	push   es
  41c1b9:	pop    ebp
  41c1ba:	pop    ebx
  41c1bb:	loopne 0x41c17a
  41c1bd:	jae    0x41c1ba
  41c1bf:	add    eax,0xe5de57a7
  41c1c4:	xchg   esp,eax
  41c1c5:	(bad)  
  41c1c6:	jle    0x41c1e4
  41c1c8:	sub    BYTE PTR [esi+0x3f],al
  41c1cb:	retf   
  41c1cc:	out    0xa9,eax
  41c1ce:	mov    ecx,0xb2ed0e3c
  41c1d3:	lods   al,BYTE PTR ds:[esi]
  41c1d4:	xchg   ebp,eax
  41c1d5:	pop    ecx
  41c1d6:	xor    BYTE PTR [esi],al
  41c1d8:	mov    eax,ds:0x3664a0c7
  41c1dd:	xchg   DWORD PTR [eax-0x32],eax
  41c1e0:	add    ebx,esi
  41c1e2:	int3   
  41c1e3:	in     al,dx
  41c1e4:	mov    bh,0xda
  41c1e6:	jecxz  0x41c25e
  41c1e8:	shl    BYTE PTR [esi],cl
  41c1ea:	mov    al,ds:0xfdf997ef
  41c1ef:	pop    eax
  41c1f0:	ds nop
  41c1f2:	jp     0x41c1d5
  41c1f4:	push   cs
  41c1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f6:	(bad)  
  41c1f7:	loop   0x41c241
  41c1f9:	into   
  41c1fa:	push   esi
  41c1fb:	jg     0x41c268
  41c1fd:	(bad)  
  41c1fe:	ror    DWORD PTR [edx],1
  41c200:	loopne 0x41c26e
  41c202:	mov    BYTE PTR [ebx],ah
  41c204:	cli    
  41c205:	fidivr DWORD PTR [edx+ebp*2+0x179368d1]
  41c20c:	cmp    al,0x9c
  41c20e:	int    0xe9
  41c210:	jne    0x41c22c
  41c212:	stc    
  41c213:	test   BYTE PTR [esi+0x9c4ddba],dl
  41c219:	mov    ch,0x86
  41c21b:	aad    0x0
  41c21d:	pop    es
  41c21e:	mov    ebp,0xffe9dc3a
  41c223:	xlat   BYTE PTR ds:[ebx]
  41c224:	mov    ds:0x9aac6420,eax
  41c229:	mov    ah,0xd9
  41c22b:	es xor al,0x70
  41c22e:	in     al,0xa4
  41c230:	fmul   DWORD PTR [esp+ebp*2]
  41c233:	outs   dx,DWORD PTR ds:[esi]
  41c234:	jl     0x41c287
  41c236:	add    bh,BYTE PTR [esi-0x2f]
  41c239:	out    0xaf,al
  41c23b:	fadd   QWORD PTR [edx-0x9]
  41c23e:	sahf   
  41c23f:	or     DWORD PTR [ecx-0x68],esi
  41c242:	pop    eax
  41c243:	arpl   WORD PTR [esi],sp
  41c245:	pushf  
  41c246:	ins    BYTE PTR es:[edi],dx
  41c247:	rcr    BYTE PTR [ecx-0x30],0x9b
  41c24b:	inc    DWORD PTR [edx-0x2e90da6d]
  41c251:	rcl    DWORD PTR [esp+eiz*2+0x5d275c2c],0xfe
  41c259:	sbb    al,0xa9
  41c25b:	dec    ecx
  41c25c:	mov    ah,0xa1
  41c25e:	hlt    
  41c25f:	sbb    esi,DWORD PTR fs:[ecx+eiz*8]
  41c263:	pop    ecx
  41c264:	inc    ecx
  41c265:	or     DWORD PTR [ebp-0x1e0f2b04],ecx
  41c26b:	retf   
  41c26c:	test   DWORD PTR [edx-0x8],ebx
  41c26f:	dec    edx
  41c270:	lds    eax,FWORD PTR [ebp-0x18]
  41c273:	imul   ecx,eax,0xdfdf532a
  41c279:	std    
  41c27a:	rcl    BYTE PTR [ecx],cl
  41c27c:	mov    DWORD PTR [ecx],esi
  41c27e:	mov    al,0x2b
  41c280:	jle    0x41c266
  41c282:	dec    eax
  41c283:	pop    edx
  41c284:	xor    ebp,DWORD PTR [ebx-0x4d]
  41c287:	push   esi
  41c288:	mov    ebx,0x120d60ef
  41c28d:	mov    cl,BYTE PTR [edi+0x34]
  41c290:	mul    DWORD PTR [edi-0x79f5ab60]
  41c296:	lock inc ebp
  41c298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c299:	sbb    eax,0xe039218a
  41c29e:	push   edx
  41c29f:	sti    
  41c2a0:	int    0xc5
  41c2a2:	rcr    DWORD PTR [edx],cl
  41c2a4:	cmp    eax,0xe99a1e88
  41c2a9:	push   edi
  41c2aa:	aaa    
  41c2ab:	out    dx,eax
  41c2ac:	cmp    DWORD PTR [ebp+ebp*8-0x5d],eax
  41c2b0:	in     eax,0x89
  41c2b2:	push   ss
  41c2b3:	mov    ah,0xd5
  41c2b5:	(bad)  
  41c2b7:	xor    al,0x46
  41c2b9:	rcr    DWORD PTR [edx-0x36],cl
  41c2bc:	mov    dh,0xbd
  41c2be:	ja     0x41c30d
  41c2c0:	xchg   esi,eax
  41c2c1:	mov    eax,ds:0x1dbf730a
  41c2c6:	aas    
  41c2c7:	arpl   WORD PTR [ebx],di
  41c2c9:	out    0x34,eax
  41c2cb:	jle    0x41c2f6
  41c2cd:	and    DWORD PTR [edi+0x2323a7ea],ebp
  41c2d3:	das    
  41c2d4:	scas   eax,DWORD PTR es:[edi]
  41c2d5:	int3   
  41c2d6:	scas   al,BYTE PTR es:[edi]
  41c2d7:	loopne 0x41c301
  41c2d9:	pushf  
  41c2da:	adc    esp,DWORD PTR [ecx+0x4c]
  41c2dd:	fs ja  0x41c2de
  41c2e0:	in     al,0xbf
  41c2e2:	sbb    BYTE PTR [ebx],bl
  41c2e4:	adc    BYTE PTR [ecx+edx*8+0x7831263e],ah
  41c2eb:	jg     0x41c2d8
  41c2ed:	rcr    ebp,1
  41c2ef:	pop    ds
  41c2f0:	pop    es
  41c2f1:	mov    ebp,0xa2e19fa1
  41c2f6:	out    dx,eax
  41c2f7:	cmp    BYTE PTR [ebp-0x6b],dl
  41c2fa:	fnstenv [ecx+0x6575b518]
  41c300:	pusha  
  41c301:	fidivr WORD PTR [edi]
  41c303:	sub    esi,edi
  41c305:	inc    eax
  41c306:	sbb    al,0x52
  41c308:	push   ds
  41c309:	in     eax,0x77
  41c30b:	push   edi
  41c30c:	push   0xffffffe3
  41c30e:	mov    ebp,0xcd1a0f95
  41c313:	jecxz  0x41c323
  41c315:	lahf   
  41c316:	gs int3 
  41c318:	pop    esi
  41c319:	sub    al,0xfd
  41c31b:	popf   
  41c31c:	pop    ebx
  41c31d:	shl    BYTE PTR [ebx-0x25a8d2d],cl
  41c323:	dec    ecx
  41c324:	(bad)  
  41c326:	in     eax,dx
  41c327:	inc    esp
  41c328:	retf   
  41c329:	lock and DWORD PTR [ecx+0x28],eax
  41c32d:	pushf  
  41c32e:	aas    
  41c32f:	ret    0xe631
  41c332:	inc    ecx
  41c333:	sub    DWORD PTR [esi+0x59],esp
  41c336:	mov    edx,0x80d23e7b
  41c33b:	pop    ebx
  41c33c:	sbb    BYTE PTR [esi],0x4c
  41c33f:	je     0x41c379
  41c341:	mov    cl,0x75
  41c343:	pop    eax
  41c344:	inc    esi
  41c345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c346:	xor    esi,esi
  41c348:	mov    edi,0x9a7b313e
  41c34d:	jno    0x41c318
  41c34f:	xor    eax,DWORD PTR [edi]
  41c351:	fbld   TBYTE PTR ds:0xe76d836d
  41c357:	mov    ah,0xb4
  41c359:	out    dx,eax
  41c35a:	pop    ds
  41c35b:	daa    
  41c35c:	push   0xcc5eb84f
  41c361:	mov    al,ds:0x428ea039
  41c366:	adc    ah,ch
  41c368:	jle    0x41c3b2
  41c36a:	or     BYTE PTR [edx+0x4e27afbe],dl
  41c370:	xchg   ecx,eax
  41c371:	pop    es
  41c372:	cmp    DWORD PTR [ebx-0x3cc3b23f],esp
  41c378:	mov    ebx,0x5fdad49b
  41c37d:	inc    esp
  41c37e:	loopne 0x41c3f8
  41c380:	call   0x6076:0x36d15de
  41c387:	lahf   
  41c388:	pop    es
  41c389:	push   edi
  41c38a:	arpl   WORD PTR [esi+0x3139aa05],cx
  41c390:	stos   BYTE PTR es:[edi],al
  41c391:	dec    ecx
  41c392:	ja     0x41c413
  41c394:	xchg   ebp,eax
  41c395:	push   esi
  41c396:	inc    ebx
  41c397:	jmp    0x41c350
  41c399:	or     al,0x49
  41c39b:	call   0xf3fc07b5
  41c3a0:	lahf   
  41c3a1:	sbb    eax,0x86496af1
  41c3a6:	cwde   
  41c3a7:	add    eax,0xdad81316
  41c3ac:	ds stos DWORD PTR es:[edi],eax
  41c3ae:	mov    cl,0xa9
  41c3b0:	push   ds
  41c3b1:	mov    BYTE PTR [esi],bl
  41c3b3:	mov    ds:0x840eeb37,al
  41c3b8:	in     eax,0x20
  41c3ba:	imul   ebx,DWORD PTR [eax+0xb],0xffffffe3
  41c3be:	adc    DWORD PTR [esi-0x14],eax
  41c3c1:	xchg   bl,cl
  41c3c3:	loop   0x41c3d4
  41c3c5:	int    0x99
  41c3c7:	xchg   ebp,eax
  41c3c8:	and    DWORD PTR [ecx+eiz*1],0x991168f2
  41c3cf:	lods   eax,DWORD PTR ds:[esi]
  41c3d0:	loope  0x41c3f8
  41c3d2:	call   DWORD PTR [ecx+eax*8+0x50]
  41c3d6:	add    al,0x35
  41c3d8:	dec    eax
  41c3d9:	xor    BYTE PTR [ebx-0x18],bl
  41c3dc:	leave  
  41c3dd:	stc    
  41c3de:	sbb    al,0xcf
  41c3e0:	inc    esp
  41c3e1:	inc    esp
  41c3e2:	mov    edx,0x2383530f
  41c3e7:	int3   
  41c3e8:	outs   dx,BYTE PTR ds:[esi]
  41c3e9:	jg     0x41c3f4
  41c3eb:	in     eax,0xdb
  41c3ed:	sahf   
  41c3ee:	mov    edx,0xcd7b6550
  41c3f3:	aad    0xbd
  41c3f5:	sbb    eax,0xc1e029e5
  41c3fa:	in     eax,0xbd
  41c3fc:	daa    
  41c3fd:	sbb    bl,BYTE PTR [ecx-0x12f1105a]
  41c403:	aas    
  41c404:	inc    esp
  41c405:	fwait
  41c406:	xchg   ebp,eax
  41c407:	xor    al,0xb9
  41c409:	jnp    0x41c3bc
  41c40b:	imul   esi,ebx,0xbbdf995e
  41c411:	and    DWORD PTR [ebp+edx*8+0x2347a23],edi
  41c418:	stos   DWORD PTR es:[edi],eax
  41c419:	sub    dh,BYTE PTR [ebx]
  41c41b:	mov    dh,0xab
  41c41d:	adc    BYTE PTR [edx],dh
  41c41f:	lods   al,BYTE PTR ds:[esi]
  41c420:	loop   0x41c435
  41c422:	daa    
  41c423:	sub    al,0xc7
  41c425:	daa    
  41c426:	sbb    edi,DWORD PTR [ebx-0x3f]
  41c429:	in     eax,dx
  41c42a:	sub    DWORD PTR [eax+0x86c6e8a],edi
  41c430:	into   
  41c431:	in     eax,dx
  41c432:	and    eax,0x7024fcc9
  41c437:	mov    dl,0x77
  41c439:	inc    ecx
  41c43a:	lods   eax,DWORD PTR ds:[esi]
  41c43b:	retf   
  41c43c:	mov    al,ds:0xb628409c
  41c441:	sub    eax,0x7ad10d03
  41c446:	or     esp,DWORD PTR [esi-0x20]
  41c449:	test   eax,0x1ea2ae4e
  41c44e:	ds xor al,0x51
  41c451:	adc    dh,ch
  41c453:	(bad)  
  41c454:	xchg   edx,eax
  41c455:	sub    cl,al
  41c457:	mov    DWORD PTR [ebx],ebx
  41c459:	adc    dl,dl
  41c45b:	sbb    dh,bh
  41c45d:	jb     0x41c472
  41c45f:	jmp    0x41c479
  41c461:	mov    dh,0x60
  41c463:	sahf   
  41c464:	or     eax,0x21b13293
  41c469:	xor    eax,0x7e9b454f
  41c46e:	ret    0xf499
  41c471:	xchg   edx,eax
  41c472:	sti    
  41c473:	popf   
  41c474:	and    cl,BYTE PTR [ebx]
  41c476:	aas    
  41c477:	mov    ah,0x2
  41c479:	add    al,0xdf
  41c47b:	mov    dl,0x20
  41c47d:	in     eax,dx
  41c47e:	adc    al,0xa3
  41c480:	cmp    eax,0x6395be05
  41c485:	push   0x81ef93fc
  41c48a:	out    0xf5,al
  41c48c:	sbb    DWORD PTR [edx+0x12816494],edx
  41c492:	rcr    BYTE PTR [ebx-0xd],1
  41c495:	out    dx,al
  41c496:	push   0x7b
  41c498:	mov    ebp,0x64c015c3
  41c49d:	mov    esi,0x428184ea
  41c4a2:	outs   dx,DWORD PTR ds:[esi]
  41c4a3:	and    eax,0xbfaf4d4c
  41c4a8:	ja     0x41c509
  41c4aa:	jg     0x41c450
  41c4ac:	push   0x7d
  41c4ae:	das    
  41c4af:	mov    ebp,0x86afe497
  41c4b4:	dec    edx
  41c4b5:	mov    eax,ds:0x67d383c5
  41c4ba:	mov    al,0xf1
  41c4bc:	(bad)  
  41c4bd:	retf   0x8644
  41c4c0:	dec    esp
  41c4c1:	and    DWORD PTR [esi+0x5eae4650],ebp
  41c4c7:	ins    BYTE PTR es:[edi],dx
  41c4c8:	dec    esp
  41c4c9:	push   eax
  41c4ca:	cmp    esi,DWORD PTR [ebx-0x7f]
  41c4cd:	fnstenv [ebx+edx*1-0x14cd31c4]
  41c4d4:	call   DWORD PTR [eax-0x348ee23]
  41c4da:	dec    ebx
  41c4db:	inc    ecx
  41c4dc:	xchg   esi,eax
  41c4dd:	cmp    eax,0x52e3178
  41c4e2:	gs das 
  41c4e4:	and    eax,0xc1c1f8a1
  41c4e9:	cdq    
  41c4ea:	and    BYTE PTR [esi],ah
  41c4ec:	enter  0xfeb7,0x5d
  41c4f0:	or     ch,BYTE PTR [ebx+0x40ddf7df]
  41c4f6:	pop    eax
  41c4f7:	or     al,0xc0
  41c4f9:	imul   esi,DWORD PTR [esi+ebx*4+0x6],0x7a8c6b56
  41c501:	xor    al,0x0
  41c503:	push   ds
  41c504:	das    
  41c505:	cmp    al,0x5b
  41c507:	mov    ebx,0x9a465cd9
  41c50c:	cmp    cl,dh
  41c50e:	and    al,0xec
  41c510:	dec    eax
  41c511:	xchg   esi,eax
  41c512:	adc    al,0xa9
  41c514:	push   ebp
  41c515:	sti    
  41c516:	jecxz  0x41c597
  41c518:	xor    DWORD PTR [edi+0x75eb1171],esp
  41c51e:	addr16 ror dl,0x18
  41c522:	dec    ecx
  41c523:	mov    ch,0x3c
  41c526:	and    ah,BYTE PTR [edx+0x65e3f0d0]
  41c52c:	loop   0x41c585
  41c52e:	push   ds
  41c52f:	sub    al,0x47
  41c531:	pop    esp
  41c532:	scas   eax,DWORD PTR es:[edi]
  41c533:	or     cl,0xf3
  41c536:	fidivr DWORD PTR [esi]
  41c538:	and    DWORD PTR [edi],0x4aa128de
  41c53e:	test   cl,cl
  41c540:	bound  esi,QWORD PTR [edx-0x1f]
  41c543:	mov    WORD PTR [ecx-0x10],cs
  41c546:	xchg   ebp,eax
  41c547:	adc    ebp,DWORD PTR [ecx+edx*1-0x6d]
  41c54b:	push   esp
  41c54c:	sub    edi,DWORD PTR [esi+0x20c3050d]
  41c552:	(bad)  
  41c553:	cwde   
  41c554:	pop    ds
  41c555:	xchg   ebx,eax
  41c556:	jo     0x41c506
  41c558:	xchg   esp,eax
  41c559:	fist   DWORD PTR [edi-0x108e44b3]
  41c55f:	jno    0x41c5b0
  41c561:	xchg   esp,eax
  41c562:	and    eax,DWORD PTR fs:[edi+0x636ffc82]
  41c569:	enter  0x5118,0x34
  41c56d:	dec    ecx
  41c56e:	pop    esi
  41c56f:	sbb    esp,DWORD PTR [ecx+0x3e8c536]
  41c575:	pop    ss
  41c576:	mov    ds:0x764f49aa,al
  41c57b:	clc    
  41c57c:	add    ah,BYTE PTR [ebx+0x4a287357]
  41c582:	clc    
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	add    al,cl
  41c5d2:	sub    al,0xc
  41c5d4:	(bad)  
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	in     al,dx
  41c5dd:	dec    esi
  41c5de:	pop    es
  41c5df:	(bad)  
  41c5e0:	mov    cs,WORD PTR [edi-0x54]
  41c5e3:	pop    esi
  41c5e4:	and    eax,0xb989e5c5
  41c5e9:	mov    al,0x7f
  41c5eb:	inc    esp
  41c5ec:	mov    dl,0xc5
  41c5ee:	test   eax,0x6856a3e4
  41c5f3:	ret    
  41c5f4:	daa    
  41c5f5:	sub    bl,BYTE PTR [esi-0x140a5446]
  41c5fb:	sub    BYTE PTR [ebx+ebp*1-0x3a0af2fa],ch
  41c602:	mov    ebx,0x8cc378a1
  41c607:	arpl   si,ax
  41c609:	leave  
  41c60a:	loope  0x41c5ac
  41c60c:	inc    ebp
  41c60d:	inc    esi
  41c60e:	mov    edi,0x5a5622f1
  41c613:	in     eax,0x76
  41c615:	dec    esi
  41c616:	clc    
  41c617:	cmp    BYTE PTR [ebx+0x5f],0xf5
  41c61b:	xchg   edi,eax
  41c61c:	adc    esp,DWORD PTR [eax+0x1d958e44]
  41c622:	lahf   
  41c623:	les    edi,FWORD PTR [esi-0x764b0bbd]
  41c629:	and    eax,DWORD PTR [ecx-0x46aafd68]
  41c62f:	shl    BYTE PTR [ecx-0x64],1
  41c632:	dec    ebx
  41c633:	test   al,0xc9
  41c635:	dec    ecx
  41c636:	xchg   edx,eax
  41c637:	jne    0x41c627
  41c639:	in     eax,0xba
  41c63b:	neg    DWORD PTR [ebx-0x3d96d01a]
  41c641:	push   esi
  41c642:	jne    0x41c69c
  41c644:	xlat   BYTE PTR ds:[ebx]
  41c645:	dec    ecx
  41c646:	int    0x7f
  41c648:	push   edx
  41c649:	jg     0x41c680
  41c64b:	cmp    edx,ebp
  41c64d:	cmp    bl,BYTE PTR [ebx+eax*8-0x35]
  41c651:	push   ebp
  41c652:	stos   BYTE PTR es:[edi],al
  41c653:	repz pop esp
  41c655:	mov    edx,0xd1dc21f4
  41c65a:	pushf  
  41c65b:	pop    ebp
  41c65c:	pop    ds
  41c65d:	sar    DWORD PTR [esi+esi*8],cl
  41c660:	loop   0x41c6be
  41c662:	mov    bh,0xe5
  41c664:	dec    esi
  41c665:	pop    esp
  41c666:	push   ds
  41c667:	xchg   esi,eax
  41c668:	repz push 0xffffffec
  41c66b:	and    eax,DWORD PTR [ebp-0x4f1a27e2]
  41c671:	lods   al,BYTE PTR ds:[esi]
  41c672:	in     al,dx
  41c673:	in     eax,dx
  41c674:	or     BYTE PTR [edi-0x8be1396],0xb6
  41c67b:	and    al,0x66
  41c67d:	mov    eax,ds:0x5add812
  41c682:	sub    edi,DWORD PTR [ebx+0x49]
  41c685:	and    ebx,0x85888994
  41c68b:	addr16 popa 
  41c68d:	push   esp
  41c68e:	push   edx
  41c68f:	push   esi
  41c690:	inc    esi
  41c691:	scas   eax,DWORD PTR es:[edi]
  41c692:	mov    edx,0xb1d24c70
  41c697:	test   DWORD PTR [ecx],0xf1f78f10
  41c69d:	mov    esi,0x501d5958
  41c6a2:	fmul   QWORD PTR [edi+0xa]
  41c6a5:	jg     0x41c67f
  41c6a7:	inc    ebx
  41c6a8:	pusha  
  41c6a9:	enter  0xe4be,0xcc
  41c6ad:	outs   dx,BYTE PTR ds:[esi]
  41c6ae:	data16 aas 
  41c6b0:	and    eax,0xe7fb5826
  41c6b5:	test   ebp,0xcb6a5eac
  41c6bb:	dec    edi
  41c6bc:	xor    DWORD PTR [esi],ecx
  41c6be:	adc    eax,0x6d0f21f0
  41c6c3:	mov    edi,0xf78c6884
  41c6c8:	lods   eax,DWORD PTR ds:[esi]
  41c6c9:	pop    ebp
  41c6ca:	pop    eax
  41c6cb:	inc    esi
  41c6cc:	fwait
  41c6cd:	xor    BYTE PTR [edi-0x10a20ec],bl
  41c6d3:	inc    ah
  41c6d5:	mov    al,0xe1
  41c6d7:	sub    eax,DWORD PTR [eax+0x4b]
  41c6da:	retf   
  41c6db:	xor    al,BYTE PTR [ebx]
  41c6dd:	mov    dh,0x57
  41c6df:	scas   eax,DWORD PTR es:[edi]
  41c6e0:	and    ch,bl
  41c6e2:	(bad)  
  41c6e3:	ficomp DWORD PTR [eax-0x564b310a]
  41c6e9:	mov    ah,0x34
  41c6eb:	mov    ah,0x7d
  41c6ed:	mov    ds:0x6b602399,eax
  41c6f2:	shl    WORD PTR [ebp+0x3d0d2d11],1
  41c6f9:	mov    dh,0x8c
  41c6fb:	in     eax,0xa2
  41c6fd:	ret    
  41c6fe:	or     eax,DWORD PTR [esi]
  41c700:	out    0xe9,eax
  41c702:	or     esp,ebx
  41c704:	and    eax,0xb97c4916
  41c709:	push   esp
  41c70a:	xor    al,0xe7
  41c70c:	sub    DWORD PTR [edx+0x14],0x55c8c347
  41c713:	inc    ebp
  41c714:	rcr    al,1
  41c716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c717:	or     edi,ecx
  41c719:	push   ds
  41c71a:	xchg   edi,eax
  41c71b:	leave  
  41c71c:	push   es
  41c71d:	xchg   edi,eax
  41c71e:	ins    DWORD PTR es:[edi],dx
  41c71f:	xor    DWORD PTR [edi+edi*2],edi
  41c722:	xchg   ebx,eax
  41c723:	jo     0x41c785
  41c725:	enter  0x47c7,0xc
  41c729:	mov    cl,0x62
  41c72b:	mov    ebp,0xa3442d4f
  41c730:	shl    DWORD PTR [ecx+0x1b99318f],cl
  41c736:	push   ecx
  41c737:	lea    ebx,[ebx+0x2ea6da31]
  41c73d:	mov    gs,WORD PTR [ecx]
  41c73f:	xlat   BYTE PTR ds:[ebx]
  41c740:	mov    bl,0x4e
  41c742:	loopne 0x41c6cc
  41c744:	stc    
  41c745:	test   DWORD PTR [ebx+edi*4],edi
  41c748:	push   ebx
  41c749:	inc    edi
  41c74a:	mov    BYTE PTR [edi+0x60ca5fe7],bh
  41c750:	out    dx,eax
  41c751:	and    DWORD PTR [edx+0x33],ebx
  41c754:	mov    esi,0xf7fd97c0
  41c759:	mov    WORD PTR [edi+0x72],ds
  41c75c:	mov    ch,0x32
  41c75e:	mov    ah,0x34
  41c760:	xor    al,0xc1
  41c762:	pop    esp
  41c763:	(bad)  
  41c764:	pushf  
  41c765:	sbb    edi,ecx
  41c767:	lea    esp,[ecx]
  41c769:	push   edx
  41c76a:	push   cs
  41c76b:	pop    eax
  41c76c:	outs   dx,BYTE PTR ds:[esi]
  41c76d:	out    dx,eax
  41c76e:	loope  0x41c73e
  41c770:	xlat   BYTE PTR ds:[ebx]
  41c771:	push   edx
  41c772:	dec    ebx
  41c773:	push   esi
  41c774:	cli    
  41c775:	adc    al,0xeb
  41c777:	jbe    0x41c731
  41c779:	lock cwde 
  41c77b:	xor    DWORD PTR [eax-0x66fe116a],edi
  41c781:	and    DWORD PTR [eax],ebp
  41c783:	adc    BYTE PTR [esp+ebp*2],bh
  41c786:	xchg   BYTE PTR [esi-0x2f7ec715],al
  41c78c:	into   
  41c78d:	push   esi
  41c78e:	popa   
  41c78f:	bound  ebp,QWORD PTR [ebx]
  41c791:	pop    ebp
  41c792:	sub    al,0x37
  41c794:	add    dl,BYTE PTR [esi+0x5d]
  41c797:	ror    ebp,1
  41c799:	call   0xe924:0xe19bf87b
  41c7a0:	outs   dx,BYTE PTR ds:[esi]
  41c7a1:	pop    esp
  41c7a2:	mov    esi,0xd26d6863
  41c7a7:	adc    bh,BYTE PTR [edi]
  41c7a9:	fwait
  41c7aa:	and    edx,DWORD PTR [ebx]
  41c7ac:	cmp    ch,BYTE PTR [ebx]
  41c7ae:	push   ds
  41c7af:	adc    BYTE PTR [ebx+0x3730bb21],bh
  41c7b5:	out    0xfe,al
  41c7b7:	inc    esi
  41c7b8:	les    edx,FWORD PTR [ecx]
  41c7ba:	(bad)  
  41c7bc:	test   DWORD PTR [esp+ecx*2],ebp
  41c7bf:	inc    esp
  41c7c0:	push   ss
  41c7c1:	sbb    DWORD PTR [edx+0x3c],esi
  41c7c4:	cli    
  41c7c5:	adc    eax,0x566c8008
  41c7ca:	mov    edi,0x1e1b8be3
  41c7cf:	xchg   ebx,eax
  41c7d0:	sbb    ebx,ecx
  41c7d2:	add    eax,DWORD PTR [ebx-0x4a]
  41c7d5:	cmc    
  41c7d6:	sbb    bh,BYTE PTR [edx+ebp*4-0x2bd335b1]
  41c7dd:	mov    ch,0xf2
  41c7df:	bound  esi,QWORD PTR [esi]
  41c7e1:	or     BYTE PTR ds:0x9d4ea225,bh
  41c7e7:	loopne 0x41c7b3
  41c7e9:	sbb    al,0xc4
  41c7eb:	mov    ah,0x77
  41c7ed:	ins    BYTE PTR es:[edi],dx
  41c7ee:	jmp    0x41c7c2
  41c7f0:	pusha  
  41c7f1:	stc    
  41c7f2:	push   ebp
  41c7f3:	push   esp
  41c7f4:	cmp    BYTE PTR [edx+esi*4],bl
  41c7f7:	leave  
  41c7f8:	dec    esp
  41c7f9:	inc    edi
  41c7fa:	je     0x41c804
  41c7fc:	or     esp,DWORD PTR [ecx]
  41c7fe:	mov    ds:0x320afaae,eax
  41c803:	in     al,0x2b
  41c805:	in     al,dx
  41c806:	ret    0x5df1
  41c809:	xchg   ebp,ecx
  41c80b:	bound  ebp,QWORD PTR [edx+0x37]
  41c80e:	push   es
  41c80f:	and    eax,0xeb4d325d
  41c814:	dec    edi
  41c815:	mov    esi,ecx
  41c817:	fist   WORD PTR [esi-0x12]
  41c81a:	add    DWORD PTR [ebp-0x7c],edx
  41c81d:	xor    eax,0x149463ce
  41c823:	ret    0xa8d4
  41c826:	mov    eax,0xa16340e
  41c82b:	(bad)  
  41c82c:	jp     0x41c7e2
  41c82e:	xchg   edx,eax
  41c82f:	scas   eax,DWORD PTR es:[edi]
  41c830:	fs sbb ecx,edi
  41c833:	cdq    
  41c834:	mov    fs,esp
  41c836:	idiv   BYTE PTR [edx+ebp*2-0x6c]
  41c83a:	pop    esi
  41c83b:	xor    ecx,DWORD PTR [esi-0x8]
  41c83e:	jns    0x41c7ec
  41c840:	mov    eax,ds:0x7bbb8f7b
  41c845:	out    0xbc,eax
  41c847:	or     eax,edx
  41c849:	lods   al,BYTE PTR ds:[esi]
  41c84a:	mov    al,ds:0x237d975
  41c84f:	xor    edi,edx
  41c851:	mov    al,0xfc
  41c853:	cmp    DWORD PTR [esi],ebp
  41c855:	and    al,0x89
  41c857:	sub    eax,0x880bf702
  41c85c:	call   0x559d:0x12d296ad
  41c863:	loopne 0x41c7e8
  41c865:	jecxz  0x41c89b
  41c867:	pmulhuw mm7,QWORD PTR [ebp+0x35]
  41c86b:	jb     0x41c860
  41c86d:	loopne 0x41c8d0
  41c86f:	jmp    0xb989:0xe0f5e980
  41c876:	adc    BYTE PTR [esi-0x2],dh
  41c879:	add    eax,0xd6cc2e90
  41c87e:	mov    WORD PTR [esi],?
  41c880:	in     eax,0x6f
  41c882:	dec    eax
  41c883:	mov    esi,0xcd458c05
  41c888:	sub    esp,DWORD PTR [edi]
  41c88a:	push   ebp
  41c88b:	clc    
  41c88c:	xor    eax,0x5a4b21ad
  41c891:	sbb    ebp,DWORD PTR [ebp-0x77]
  41c894:	cli    
  41c895:	adc    DWORD PTR [bp+di-0x73],ebx
  41c899:	sub    DWORD PTR [ebx+0x559a46b9],eax
  41c89f:	pop    esi
  41c8a0:	stos   BYTE PTR es:[edi],al
  41c8a1:	cdq    
  41c8a2:	or     bh,ah
  41c8a4:	fisubr DWORD PTR [eax+0x76]
  41c8a7:	retf   0x5991
  41c8aa:	sbb    eax,0x8bb5cba4
  41c8af:	xchg   ecx,eax
  41c8b1:	push   0x3b87b163
  41c8b6:	adc    ch,BYTE PTR [esi-0x48]
  41c8b9:	sbb    edi,eax
  41c8bb:	(bad)  
  41c8bc:	mov    ebx,0x50b401d4
  41c8c1:	dec    ebx
  41c8c2:	mov    eax,0x845c25f
  41c8c7:	xchg   esi,eax
  41c8c8:	and    DWORD PTR [ecx],edi
  41c8ca:	mov    bh,0x64
  41c8cc:	(bad)  
  41c8cd:	and    cl,BYTE PTR [ecx+0x74a78309]
  41c8d3:	sub    BYTE PTR [esi+0x73460d24],0xf6
  41c8da:	mov    dh,0x9a
  41c8dc:	aad    0xad
  41c8de:	cmp    eax,0x3af20c80
  41c8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e4:	hlt    
  41c8e5:	cli    
  41c8e6:	fst    QWORD PTR [eax-0x4165678e]
  41c8ec:	push   ebx
  41c8ed:	mov    ds,WORD PTR [ebx+0x401f9547]
  41c8f3:	jmp    0xd25d:0xc356b99d
  41c8fa:	imul   ebp,edx,0x204cbfc
  41c900:	jge    0x41c96d
  41c902:	lahf   
  41c903:	mov    edx,0x45562dfb
  41c908:	fisttp DWORD PTR [ebx]
  41c90a:	loope  0x41c93e
  41c90c:	and    BYTE PTR [ebp+esi*1+0x5a],0x3a
  41c911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c912:	mov    cl,0xca
  41c914:	cmp    dh,ah
  41c916:	imul   ebx,DWORD PTR [edx],0xffffffbe
  41c919:	mov    ch,ah
  41c91b:	fst    QWORD PTR [ebx-0x69]
  41c91e:	pushf  
  41c91f:	stos   BYTE PTR es:[edi],al
  41c920:	int    0xa6
  41c922:	cs jmp 0x34bb2e09
  41c928:	mov    ds:0x40217726,al
  41c92d:	outs   dx,DWORD PTR ds:[esi]
  41c92e:	stos   BYTE PTR es:[edi],al
  41c92f:	dec    esi
  41c930:	dec    edx
  41c931:	mov    bl,BYTE PTR [ebp-0x4195eb95]
  41c937:	pop    eax
  41c938:	outs   dx,DWORD PTR ds:[esi]
  41c939:	stos   DWORD PTR es:[edi],eax
  41c93a:	mov    ebx,0x63ae8a1b
  41c93f:	mov    dh,BYTE PTR [ebp+0x34dcec2e]
  41c945:	jg     0x41c9c1
  41c947:	repz std 
  41c949:	jmp    0xee77:0xe0be6b3d
  41c950:	lahf   
  41c951:	lods   al,BYTE PTR ds:[esi]
  41c952:	and    DWORD PTR [ebx-0x7bbc0fd0],edx
  41c958:	retf   
  41c959:	in     al,0x6e
  41c95b:	adc    DWORD PTR [ebp-0x6cb2295c],ecx
  41c961:	jne    0x41c8f4
  41c963:	pop    esp
  41c964:	mov    ebx,0x18314052
  41c969:	cli    
  41c96a:	or     DWORD PTR [ecx],edx
  41c96c:	jnp    0x41c9d1
  41c96e:	leave  
  41c96f:	sti    
  41c970:	adc    al,0x30
  41c972:	jae    0x41c994
  41c974:	sbb    eax,0x45d8b013
  41c979:	scas   eax,DWORD PTR es:[edi]
  41c97a:	stos   BYTE PTR es:[edi],al
  41c97b:	cwde   
  41c97c:	aaa    
  41c97d:	cmp    BYTE PTR [edi],ah
  41c97f:	stc    
  41c980:	nop
  41c981:	adc    ecx,esi
  41c983:	lods   al,BYTE PTR ds:[esi]
  41c984:	icebp  
  41c985:	fst    DWORD PTR [edx-0xb8b0203]
  41c98b:	xor    BYTE PTR [ebp+ebx*2-0x4a],bl
  41c98f:	loope  0x41c9d7
  41c991:	fidiv  DWORD PTR [edi+0x21]
  41c994:	pushf  
  41c995:	imul   ecx,DWORD PTR [esp+ecx*2],0x25
  41c999:	ror    BYTE PTR [esi+0x52],0x5e
  41c99d:	push   edi
  41c99e:	xor    eax,DWORD PTR ds:0x3c9943b6
  41c9a4:	xor    eax,DWORD PTR [eax]
  41c9a6:	pop    es
  41c9a7:	adc    dh,BYTE PTR [edx-0x4a]
  41c9aa:	xchg   ecx,eax
  41c9ab:	jg     0x41ca0e
  41c9ad:	pop    eax
  41c9ae:	popa   
  41c9af:	push   edx
  41c9b0:	out    0xd,eax
  41c9b2:	cdq    
  41c9b3:	xchg   BYTE PTR [edx+0x1bad5f4e],cl
  41c9b9:	pusha  
  41c9ba:	pop    esi
  41c9bb:	test   dh,bh
  41c9bd:	sbb    DWORD PTR [ebp-0x48],ebp
  41c9c0:	bound  ebx,QWORD PTR [edx]
  41c9c2:	sbb    BYTE PTR ds:0x96608267,ah
  41c9c8:	and    al,0xa3
  41c9ca:	cdq    
  41c9cb:	jecxz  0x41c97e
  41c9cd:	mov    edi,0xb7ab4d15
  41c9d2:	fdiv   QWORD PTR [edi]
  41c9d4:	or     edi,ebx
  41c9d6:	mov    ah,0x3c
  41c9d8:	nop
  41c9d9:	xchg   ebp,eax
  41c9da:	int    0xd8
  41c9dc:	jecxz  0x41c9df
  41c9de:	in     eax,0xdc
  41c9e0:	xchg   esi,eax
  41c9e1:	test   al,0xdd
  41c9e3:	(bad)  
  41c9e4:	mov    cl,0xed
  41c9e6:	stc    
  41c9e7:	xor    ah,BYTE PTR [ecx-0x62a7718d]
  41c9ed:	push   edx
  41c9ee:	or     al,0xfe
  41c9f0:	(bad)  
  41c9f1:	fstp   QWORD PTR [ebx+0x6f]
  41c9f4:	jo     0x41ca0d
  41c9f6:	fadd   st,st(6)
  41c9f8:	or     BYTE PTR [edx],ch
  41c9fa:	pop    eax
  41c9fb:	and    DWORD PTR [edi-0x6e],ebx
  41c9fe:	jecxz  0x41c9f0
  41ca00:	test   BYTE PTR [edi+0x22087bca],al
  41ca06:	pop    esi
  41ca07:	outs   dx,DWORD PTR ds:[esi]
  41ca08:	mov    cl,0x88
  41ca0a:	mov    ds:0xc6963e0a,eax
  41ca0f:	repnz pushf 
  41ca11:	mov    al,0x1d
  41ca13:	adc    eax,0x95e75c3f
  41ca18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca19:	aad    0xd3
  41ca1b:	mov    al,0xef
  41ca1d:	sbb    edi,DWORD PTR [ebp-0x60]
  41ca20:	cmp    BYTE PTR [ebp+0x9],ch
  41ca23:	xor    esp,DWORD PTR [ebx]
  41ca25:	add    al,0x21
  41ca27:	sbb    DWORD PTR [esi+0x13f71c24],ecx
  41ca2d:	xor    ch,BYTE PTR [eax+0x3107831]
  41ca33:	in     eax,0x24
  41ca35:	sbb    ecx,DWORD PTR [ebx]
  41ca37:	popa   
  41ca38:	xchg   BYTE PTR [eax+ebx*8-0x71],dh
  41ca3c:	jg     0x41ca16
  41ca3e:	sbb    esi,DWORD PTR [edx-0x15]
  41ca41:	sub    al,0x2
  41ca43:	test   eax,0x1a8a8e2f
  41ca48:	mov    bl,0x19
  41ca4a:	xor    BYTE PTR [edx-0x7a],dl
  41ca4d:	in     eax,dx
  41ca4e:	and    esi,DWORD PTR [ecx]
  41ca50:	outs   dx,DWORD PTR ds:[esi]
  41ca51:	mov    bl,0xfb
  41ca53:	ins    DWORD PTR es:[edi],dx
  41ca54:	cmc    
  41ca55:	pop    ds
  41ca56:	mov    ds:0x5100b2fc,al
  41ca5b:	mov    eax,0x7758cf12
  41ca60:	sub    edi,ecx
  41ca62:	fmul   st,st(7)
  41ca64:	outs   dx,DWORD PTR ds:[esi]
  41ca65:	js     0x41cac7
  41ca67:	ror    BYTE PTR [ecx-0x35ba7032],1
  41ca6d:	mov    eax,ds:0x4341715c
  41ca72:	inc    ebp
  41ca73:	pop    edi
  41ca74:	retf   
  41ca75:	ret    
  41ca76:	add    al,0xcf
  41ca78:	dec    ebp
  41ca79:	push   esp
  41ca7a:	lock lods eax,DWORD PTR ds:[esi]
  41ca7c:	mov    ecx,DWORD PTR [ebp+0x7f]
  41ca7f:	and    bh,al
  41ca81:	stos   BYTE PTR es:[edi],al
  41ca82:	hlt    
  41ca83:	shl    BYTE PTR [edi-0x16b4fe42],cl
  41ca89:	and    esi,DWORD PTR [edi]
  41ca8b:	add    cl,bh
  41ca8d:	adc    esi,DWORD PTR [ecx]
  41ca8f:	scas   eax,DWORD PTR es:[edi]
  41ca90:	ret    0xab6d
  41ca93:	or     DWORD PTR [esi+0x27],edi
  41ca96:	aas    
  41ca97:	pop    ecx
  41ca98:	jno    0x41cacb
  41ca9a:	cli    
  41ca9b:	inc    eax
  41ca9c:	sbb    dl,BYTE PTR [ebx+eiz*2]
  41ca9f:	cmp    edx,DWORD PTR [esp+edx*4-0x55]
  41caa3:	pop    esp
  41caa4:	mov    ds:0xe49ecbeb,al
  41caa9:	mov    edi,0xe11648e9
  41caae:	cs in  eax,0x7a
  41cab1:	popa   
  41cab2:	cmp    eax,0x6af67f6f
  41cab7:	aam    0xcc
  41cab9:	cwde   
  41caba:	cli    
  41cabb:	test   BYTE PTR [ebx+0x2e],dl
  41cabe:	and    esi,DWORD PTR [edi]
  41cac0:	scas   eax,DWORD PTR es:[edi]
  41cac1:	adc    edi,edi
  41cac3:	sbb    ebp,DWORD PTR [edx]
  41cac5:	or     ecx,DWORD PTR [esi]
  41cac7:	push   ss
  41cac8:	xchg   esp,eax
  41cac9:	inc    esi
  41caca:	inc    BYTE PTR ds:0xfeb6282d
  41cad0:	call   0x8982:0x3f8daa62
  41cad7:	cs jge 0x41cb05
  41cada:	mov    al,ds:0x6cdba298
  41cadf:	icebp  
  41cae0:	mov    eax,ds:0x1e1ddd2d
  41cae5:	push   esi
  41cae6:	mov    eax,0x1a13a809
  41caeb:	test   ebx,esp
  41caed:	enter  0xd479,0x1d
  41caf1:	xor    eax,0xda15b3a4
  41caf6:	rcr    DWORD PTR [di],cl
  41caf9:	xchg   DWORD PTR [edx],ebp
  41cafb:	bound  edx,QWORD PTR [ecx]
  41cafd:	or     edx,DWORD PTR [esi+edi*1]
  41cb00:	xchg   edi,eax
  41cb01:	fsub   DWORD PTR [edi-0x21]
  41cb04:	out    0x23,eax
  41cb06:	add    al,ah
  41cb08:	add    bl,BYTE PTR [ebx]
  41cb0a:	cmp    bl,dl
  41cb0c:	sti    
  41cb0d:	hlt    
  41cb0e:	push   edx
  41cb0f:	push   ecx
  41cb10:	dec    esi
  41cb11:	in     al,dx
  41cb12:	push   ecx
  41cb13:	xchg   ecx,eax
  41cb14:	(bad)  
  41cb15:	loope  0x41caec
  41cb17:	dec    esi
  41cb18:	pop    ss
  41cb19:	inc    esp
  41cb1a:	sbb    ecx,esp
  41cb1c:	(bad)  
  41cb1d:	gs fs sub al,0x6c
  41cb21:	jmp    0x1dcce537
  41cb26:	ss and eax,0x3e5e6367
  41cb2c:	and    DWORD PTR [ebx],0x6c
  41cb2f:	pop    edx
  41cb30:	popf   
  41cb31:	loopne 0x41cb7a
  41cb33:	jmp    0x6f21:0x6dfd8b6e
  41cb3a:	in     al,dx
  41cb3b:	test   BYTE PTR [edx-0x7e],bh
  41cb3e:	test   BYTE PTR [edi-0x5195c23b],0xa1
  41cb45:	outs   dx,DWORD PTR ds:[esi]
  41cb46:	in     eax,dx
  41cb47:	(bad)  
  41cb48:	mov    edx,0x995b7799
  41cb4d:	dec    BYTE PTR [edx+0x19f92875]
  41cb53:	aaa    
  41cb54:	dec    edx
  41cb55:	es inc eax
  41cb57:	jne    0x41cb37
  41cb59:	fwait
  41cb5a:	dec    ebp
  41cb5b:	xor    bh,BYTE PTR ds:0x56ae2dcf
  41cb61:	push   edi
  41cb62:	push   esi
  41cb63:	add    BYTE PTR [ebx+0x72],ah
  41cb66:	fwait
  41cb67:	xor    eax,0x6a67b2c0
  41cb6c:	scas   eax,DWORD PTR es:[edi]
  41cb6d:	push   ebp
  41cb6e:	cmp    bl,BYTE PTR [ebx+0x6b8c83de]
  41cb74:	call   0xded7:0xfc3f4225
  41cb7b:	in     al,0xa
  41cb7d:	repnz enter 0xd67a,0x42
  41cb82:	xor    DWORD PTR [eax],0x84d7a518
  41cb88:	xor    al,0xff
  41cb8a:	shr    BYTE PTR [edi-0x4d6cc0f4],cl
  41cb90:	mov    ds:0xe301e078,al
  41cb95:	xchg   al,ah
  41cb97:	dec    edi
  41cb98:	mov    esp,edx
  41cb9a:	rcl    DWORD PTR [edx],0x75
  41cb9d:	test   al,0xa1
  41cb9f:	addr16 dec ebp
  41cba1:	arpl   WORD PTR [edx+0x58],ax
  41cba4:	dec    ebx
  41cba5:	dec    edx
  41cba6:	(bad)  
  41cba7:	sub    BYTE PTR [edx-0x28],bl
  41cbaa:	jp     0x41cbdb
  41cbac:	push   eax
  41cbad:	lods   al,BYTE PTR ds:[esi]
  41cbae:	sahf   
  41cbaf:	aaa    
  41cbb0:	adc    DWORD PTR [ebx-0x6e],edx
  41cbb3:	mov    al,ds:0x9375efbb
  41cbb8:	mov    ds:0x9d4558c2,al
  41cbbd:	cld    
  41cbbe:	adc    eax,0xd1762a13
  41cbc3:	xchg   edx,esp
  41cbc5:	push   sp
  41cbc7:	int    0x7a
  41cbc9:	add    BYTE PTR [ebx+0x54],ah
  41cbcc:	arpl   WORD PTR [esp+0x74],cx
  41cbd0:	jae    0x41cbb8
  41cbd2:	enter  0xad2a,0x97
  41cbd6:	clc    
  41cbd7:	sar    DWORD PTR gs:[ecx-0x3f],cl
  41cbdb:	in     al,0x58
  41cbdd:	xchg   ebp,eax
  41cbde:	mov    fs,WORD PTR [esi-0x45]
  41cbe1:	(bad)
  41cbe5:	cmp    al,BYTE PTR [esi+0x58]
  41cbe8:	out    dx,al
  41cbe9:	ja     0x41cb72
  41cbeb:	adc    BYTE PTR [edi+ebp*1-0x4f6747bf],bh
  41cbf2:	imul   esp,DWORD PTR [eax],0xffffffcb
  41cbf5:	ficomp DWORD PTR [ebp-0x14]
  41cbf8:	retf   0xb1fb
  41cbfb:	pop    ds
  41cbfc:	adc    ch,dl
  41cbfe:	jp     0x41cc7c
  41cc00:	mov    ds:0xc110917,eax
  41cc05:	or     edx,DWORD PTR [esi+0x41]
  41cc08:	je     0x41cbe3
  41cc0a:	aas    
  41cc0b:	pop    es
  41cc0c:	add    ebp,DWORD PTR [ecx+eiz*2+0x1d]
  41cc10:	sub    al,0x47
  41cc12:	dec    ebp
  41cc13:	inc    ebx
  41cc14:	idiv   DWORD PTR [ebp+0x29]
  41cc17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc18:	cmovnp esp,DWORD PTR [ebp+0xf]
  41cc1c:	and    eax,DWORD PTR ds:0xcba3310f
  41cc22:	and    eax,DWORD PTR [ecx+0x46]
  41cc25:	out    0x78,al
  41cc27:	test   BYTE PTR [ecx],0x72
  41cc2a:	mov    WORD PTR [ebx-0x6e],ds
  41cc2d:	mov    edx,DWORD PTR [edi]
  41cc2f:	into   
  41cc30:	call   0xd7ee:0xccf8afcf
  41cc37:	cmp    eax,DWORD PTR [ecx-0x57]
  41cc3a:	jae    0x41cc43
  41cc3c:	mov    DWORD PTR [esp+edi*2+0x3995e80f],esp
  41cc43:	(bad)  [eax]
  41cc45:	pop    esp
  41cc46:	pop    esi
  41cc47:	inc    esp
  41cc48:	sbb    dh,BYTE PTR [ebp+0xe041ed7]
  41cc4e:	leave  
  41cc4f:	inc    edx
  41cc50:	(bad)  
  41cc51:	jmp    0xc452d82e
  41cc56:	push   edx
  41cc57:	inc    esp
  41cc58:	pop    ebp
  41cc59:	das    
  41cc5a:	ss ja  0x41cc41
  41cc5d:	add    DWORD PTR [esi+0x7a],ebp
  41cc60:	push   ss
  41cc61:	mov    eax,ds:0x86272265
  41cc66:	cmp    BYTE PTR [eax],al
  41cc68:	adc    al,0xc2
  41cc6a:	fstp   QWORD PTR [edi+0x35a819f7]
  41cc70:	mov    dl,0xf3
  41cc72:	xchg   al,al
  41cc74:	repnz add BYTE PTR ds:0x64956e61,dh
  41cc7b:	fist   DWORD PTR [ebp+eiz*8-0x67]
  41cc7f:	mov    esp,0x39f04d9
  41cc84:	inc    ecx
  41cc85:	adc    al,0x3a
  41cc87:	push   es
  41cc88:	outs   dx,DWORD PTR ds:[esi]
  41cc89:	sub    al,0xde
  41cc8b:	pop    es
  41cc8c:	test   al,0xb7
  41cc8e:	call   0xb2cd3601
  41cc93:	mov    ds:0xe7581090,eax
  41cc98:	push   ecx
  41cc99:	popf   
  41cc9a:	jnp    0x41cc65
  41cc9c:	xor    edx,ecx
  41cc9e:	push   esi
  41cc9f:	stc    
  41cca0:	ret    
  41cca1:	sub    BYTE PTR [edx+0x61],bl
  41cca4:	push   cs
  41cca5:	mov    dh,0x26
  41cca7:	mov    ds:0xdd5ad837,eax
  41ccac:	leave  
  41ccad:	lods   eax,DWORD PTR ds:[esi]
  41ccae:	push   ecx
  41ccaf:	add    ah,bh
  41ccb1:	cmp    eax,DWORD PTR [edx-0x35c94a87]
  41ccb7:	out    0x6f,al
  41ccb9:	jp     0x41ccd4
  41ccbb:	fs push es
  41ccbd:	mov    al,0xf3
  41ccbf:	push   ds
  41ccc0:	gs cld 
  41ccc2:	inc    eax
  41ccc3:	outs   dx,BYTE PTR ds:[esi]
  41ccc4:	adc    al,cl
  41ccc6:	jbe    0x41ccc4
  41ccc8:	mov    edx,0xd21580f2
  41cccd:	call   0x2503:0x25abbd06
  41ccd4:	inc    esi
  41ccd5:	mov    eax,0x937d5b09
  41ccda:	pop    esp
  41ccdb:	sub    DWORD PTR [eax],edi
  41ccdd:	pop    edi
  41ccde:	fcomip st,st(5)
  41cce0:	add    eax,0xe8b1684d
  41cce5:	sti    
  41cce6:	lods   al,BYTE PTR ds:[esi]
  41cce7:	les    esp,FWORD PTR [ebp+0x1d]
  41ccea:	push   eax
  41cceb:	inc    edx
  41ccec:	sub    al,0xbc
  41ccee:	out    dx,al
  41ccef:	jbe    0x41cd47
  41ccf1:	push   ds
  41ccf2:	pop    ebp
  41ccf3:	add    BYTE PTR [esi+0x66250597],0x9b
  41ccfa:	mov    BYTE PTR ds:0x1f456f32,bh
  41cd00:	jge    0x41cd1d
  41cd02:	test   DWORD PTR [ebx+0x1b],esi
  41cd05:	xchg   BYTE PTR [esi+0x1c],bl
  41cd08:	scas   al,BYTE PTR es:[edi]
  41cd09:	mov    bl,0xca
  41cd0b:	(bad)  
  41cd0c:	cmp    al,dl
  41cd0e:	xchg   esp,eax
  41cd0f:	das    
  41cd10:	xor    BYTE PTR [eax+0x41],bl
  41cd13:	or     eax,0xe3925f4
  41cd18:	or     ah,cl
  41cd1a:	mov    BYTE PTR [edi-0x73],dl
  41cd1d:	out    0x5b,al
  41cd1f:	fwait
  41cd20:	test   eax,0xb94669a4
  41cd25:	or     eax,0x30e4d254
  41cd2a:	jl     0x41cd3b
  41cd2c:	push   eax
  41cd2d:	pushf  
  41cd2e:	mov    ds:0xd6a81e8f,al
  41cd33:	sbb    eax,0x70302125
  41cd38:	pop    ebp
  41cd39:	pop    esi
  41cd3a:	into   
  41cd3b:	push   0x729c91cf
  41cd40:	imul   ecx,DWORD PTR [esi-0x6cd95581],0x38736e5e
  41cd4a:	jbe    0x41cdc5
  41cd4c:	popa   
  41cd4d:	leave  
  41cd4e:	dec    edi
  41cd4f:	dec    ebp
  41cd50:	fisttp QWORD PTR [ebx]
  41cd52:	div    DWORD PTR [ebx+0x5c8be1f3]
  41cd58:	repnz test BYTE PTR [eax-0xf8194f2],bh
  41cd5f:	jge    0x41cdc1
  41cd61:	mov    WORD PTR [edx],sp
  41cd64:	mov    WORD PTR [ebx],gs
  41cd66:	jnp    0x41cdbb
  41cd68:	iret   
  41cd69:	xor    DWORD PTR [eax],esi
  41cd6b:	mov    dl,0x2
  41cd6d:	mov    al,0xe0
  41cd6f:	bound  edi,QWORD PTR [edx-0x3f]
  41cd72:	mov    ebp,0xc30566ef
  41cd77:	jmp    0xd176:0xdb036648
  41cd7e:	mov    ds:0x337d7977,al
  41cd83:	rol    DWORD PTR [edi+0x39dc09f2],0x2d
  41cd8a:	fsubrp st(2),st
  41cd8c:	(bad)  
  41cd8d:	out    0x6d,eax
  41cd8f:	sub    dh,BYTE PTR [eax-0x89940a6]
  41cd95:	sbb    al,BYTE PTR [edi+0x3e]
  41cd98:	call   DWORD PTR [ebp-0x40]
  41cd9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd9c:	dec    ebx
  41cd9d:	fild   DWORD PTR [ebp+0x2b478e0c]
  41cda3:	add    DWORD PTR [ecx-0x6e8503c7],edi
  41cda9:	ja     0x41ce26
  41cdab:	mov    eax,ds:0xcdae499b
  41cdb0:	dec    ebp
  41cdb1:	adc    edi,ebx
  41cdb3:	sub    DWORD PTR [ebp-0x3d],ebp
  41cdb6:	in     al,0x1a
  41cdb8:	fnstenv [edx-0x7f]
  41cdbb:	push   edx
  41cdbc:	xlat   BYTE PTR ds:[ebx]
  41cdbd:	imul   ebx,ecx,0x7dd1f412
  41cdc3:	jbe    0x41cd92
  41cdc5:	jo     0x41cdb4
  41cdc7:	xchg   edx,eax
  41cdc8:	mov    esp,0xd182cae6
  41cdcd:	dec    esp
  41cdce:	sub    edx,0xb83bfeaa
  41cdd4:	add    edx,DWORD PTR [edx]
  41cdd6:	and    al,0x36
  41cdd8:	dec    esp
  41cdd9:	pop    ebx
  41cdda:	sbb    DWORD PTR [ebx+0x30],esi
  41cddd:	adc    eax,0xfc650686
  41cde2:	int    0xe6
  41cde4:	outs   dx,DWORD PTR ds:[esi]
  41cde5:	mov    DWORD PTR [edx+0x69],esp
  41cde8:	or     eax,0x59a277ef
  41cded:	jle    0x41ce07
  41cdef:	cli    
  41cdf0:	or     BYTE PTR [edi-0x7c],ah
  41cdf3:	jmp    0x41ce16
  41cdf5:	jl     0x41cde4
  41cdf7:	or     cl,BYTE PTR [edx-0x33fbd966]
  41cdfd:	enter  0x1dda,0xfe
  41ce01:	pushf  
  41ce02:	xchg   esp,eax
  41ce03:	cld    
  41ce04:	inc    edi
  41ce05:	xor    bl,BYTE PTR [ebp+0x7a]
  41ce08:	add    BYTE PTR ds:0x5a16e165,0x20
  41ce0f:	jns    0x6a9530b9
  41ce15:	int    0x24
  41ce17:	pop    edi
  41ce18:	imul   esp,ebx,0xaa5da6ee
  41ce1e:	cli    
  41ce1f:	mov    BYTE PTR [ebx],ch
  41ce21:	dec    ebp
  41ce22:	xchg   BYTE PTR ds:0x44e52ad1,dh
  41ce28:	xchg   ecx,eax
  41ce29:	mov    ebp,0xff1111f6
  41ce2e:	mov    eax,0x2c6099e8
  41ce33:	adc    al,0x37
  41ce35:	sub    eax,0x91eaa90f
  41ce3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3c:	(bad)  
  41ce3d:	je     0x41ce6d
  41ce3f:	sbb    ebx,DWORD PTR [ebx]
  41ce41:	shl    dh,0x7a
  41ce44:	imul   ebx,edi,0x7e9855c8
  41ce4a:	or     eax,0xf73c6bd0
  41ce4f:	xor    eax,0x451ee814
  41ce54:	pop    edi
  41ce55:	push   ebx
  41ce56:	popa   
  41ce57:	iret   
  41ce58:	inc    ebp
  41ce59:	out    0xb0,eax
  41ce5b:	and    al,0x9e
  41ce5d:	cmp    al,0x37
  41ce5f:	mov    ecx,ebp
  41ce61:	add    eax,0x958e2639
  41ce66:	pop    es
  41ce67:	aam    0xb8
  41ce69:	jge    0x41ce69
  41ce6b:	push   edi
  41ce6c:	mov    bh,0xf0
  41ce6e:	sbb    eax,0xbb9ed45f
  41ce73:	ja     0x41cea0
  41ce75:	xor    al,0xd9
  41ce77:	or     BYTE PTR [edi+0x6a90110e],dl
  41ce7d:	cmp    ecx,esp
  41ce7f:	mov    dl,0xd
  41ce81:	mov    gs,WORD PTR [edx-0x4066562b]
  41ce87:	fadd   DWORD PTR [ebx]
  41ce89:	call   0xe1e:0xd0b28bd
  41ce90:	rol    BYTE PTR [edi+eax*8+0x51],1
  41ce94:	mov    eax,0x8c992c24
  41ce99:	dec    ebx
  41ce9a:	cld    
  41ce9b:	mov    esi,0x8732503b
  41cea0:	push   ebp
  41cea1:	push   0xfffffffe
  41cea3:	jl     0x41cea0
  41cea5:	neg    BYTE PTR [ecx-0x14]
  41cea8:	sahf   
  41cea9:	enter  0x3d5e,0x8d
  41cead:	pop    ss
  41ceae:	es sahf 
  41ceb0:	add    BYTE PTR [ebx-0x20c21993],0x74
  41ceb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb8:	jmp    0x9a07:0x21c6c78a
  41cebf:	xor    dl,BYTE PTR [esi+edx*1+0x5e]
  41cec3:	loop   0x41cf0e
  41cec5:	adc    eax,0x6beef1cb
  41ceca:	adc    dl,BYTE PTR [esi+0x67]
  41cecd:	mov    dh,ah
  41cecf:	pushf  
  41ced0:	push   edi
  41ced1:	jb     0x41ced2
  41ced3:	mov    DWORD PTR [ecx+edi*2+0x59],esp
  41ced7:	and    BYTE PTR [edx],bl
  41ced9:	pop    esp
  41ceda:	fstp   QWORD PTR [edi+ecx*2+0x14]
  41cede:	push   edx
  41cedf:	push   0xffffff9c
  41cee1:	cmova  esp,DWORD PTR [edx]
  41cee4:	je     0x41ce74
  41cee6:	xchg   esp,eax
  41cee7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41cee9:	mov    edi,0x53b1303
  41ceee:	cli    
  41ceef:	and    dl,dl
  41cef1:	(bad)  [esi+0x5de50627]
  41cef7:	jae    0x41ceb1
  41cef9:	cmp    DWORD PTR [ebp-0x5b],esi
  41cefc:	and    dh,0x84
  41ceff:	xchg   esp,eax
  41cf00:	add    ch,bh
  41cf02:	mov    eax,ds:0x6f43e87e
  41cf07:	inc    DWORD PTR ss:[eax+0x4d]
  41cf0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf0c:	mov    ds:0xa3a2806a,al
  41cf11:	gs adc al,0xd3
  41cf14:	fsub   QWORD PTR [ecx+0x15433bab]
  41cf1a:	je     0x41cf43
  41cf1c:	or     eax,0x80c7a34
  41cf21:	pusha  
  41cf22:	sbb    BYTE PTR [edx-0x55d0c5fe],cl
  41cf28:	cs stos DWORD PTR es:[edi],eax
  41cf2a:	nop
  41cf2b:	mov    al,0xdc
  41cf2d:	loope  0x41cf98
  41cf2f:	sar    BYTE PTR [edi+0x7a],1
  41cf32:	xor    DWORD PTR [eax+0x2f],edx
  41cf35:	scas   al,BYTE PTR es:[edi]
  41cf36:	mov    bl,0x21
  41cf38:	xor    ebx,edi
  41cf3a:	jns    0x41cecd
  41cf3c:	(bad)  
  41cf3d:	cs mov cl,0x2
  41cf40:	mov    bh,0x3a
  41cf42:	test   al,0x4e
  41cf44:	push   0xe7a732e9
  41cf49:	xchg   esp,eax
  41cf4a:	call   0x6f2f:0x50530053
  41cf51:	mov    dh,0x9d
  41cf53:	enter  0x30f8,0x27
  41cf57:	hlt    
  41cf58:	xor    esp,DWORD PTR [eax-0x77]
  41cf5b:	hlt    
  41cf5c:	adc    eax,DWORD PTR [ebx+0x28b9f4fe]
  41cf62:	je     0x41cf79
  41cf64:	push   0x37879263
  41cf69:	pop    ebp
  41cf6a:	cmp    eax,0xcf1abec3
  41cf6f:	inc    eax
  41cf70:	rcl    ecx,cl
  41cf72:	push   esp
  41cf73:	arpl   WORD PTR [ecx],di
  41cf75:	jo     0x41cfb6
  41cf77:	imul   esp,DWORD PTR [esi],0x20
  41cf7a:	pushaw 
  41cf7c:	adc    al,0x78
  41cf7e:	sub    ebp,0xf
  41cf81:	and    dl,BYTE PTR [ebp+edi*8+0x39]
  41cf85:	xor    BYTE PTR [esi-0x7f44bd00],bh
  41cf8b:	adc    eax,0x17b7cd60
  41cf90:	sub    BYTE PTR [edx+0x5b],0x70
  41cf94:	js     0x41cfcd
  41cf96:	jmp    0x41cf44
  41cf98:	cs data16 mov al,0x36
  41cf9c:	out    0xa2,eax
  41cf9e:	cmp    eax,0x92177f82
  41cfa3:	shl    DWORD PTR [edi-0x524801f9],0xeb
  41cfaa:	inc    ebx
  41cfab:	add    ecx,edx
  41cfad:	jmp    0x41cf60
  41cfaf:	ret    
  41cfb0:	jno    0x41cf6b
  41cfb2:	scas   al,BYTE PTR es:[edi]
  41cfb3:	cmp    DWORD PTR [ecx+ebp*8-0x662a9a85],ebx
  41cfba:	in     al,dx
  41cfbb:	inc    ebp
  41cfbc:	dec    ebx
  41cfbd:	push   ebp
  41cfbe:	and    DWORD PTR [esi+0x7c],esi
  41cfc1:	mov    edi,0x3f048af4
  41cfc6:	mov    ch,0xd4
  41cfc8:	xchg   ebx,eax
  41cfc9:	dec    edx
  41cfca:	inc    ecx
  41cfcb:	dec    edx
  41cfcc:	jne    0x41cf60
  41cfce:	aas    
  41cfcf:	pop    ebp
  41cfd0:	test   eax,0x51845c00
  41cfd5:	push   cs
  41cfd6:	push   edi
  41cfd7:	(bad)  
  41cfd8:	mov    edi,0x2397b51a
  41cfdd:	push   edx
  41cfde:	adc    edi,DWORD PTR [esi+0x47]
  41cfe1:	jp     0x41cfe1
  41cfe3:	enter  0x766e,0xba
  41cfe7:	daa    
  41cfe8:	xchg   ecx,eax
  41cfe9:	push   esi
  41cfea:	mov    ebp,0x1f3beafb
  41cfef:	cmp    bh,BYTE PTR [ebp-0x410a3c2e]
  41cff5:	pop    edx
  41cff6:	inc    esp
  41cff7:	add    ebx,edi
  41cff9:	jo     0x41d05f
  41cffb:	aad    0x9d
  41cffd:	xor    ah,BYTE PTR [ebp+0x2c]
  41d000:	out    dx,al
  41d001:	mov    ch,BYTE PTR [ecx-0x71]
  41d004:	cdq    
  41d005:	outs   dx,DWORD PTR ds:[esi]
  41d006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d007:	jbe    0x41d05b
  41d009:	addr16 ret 
  41d00b:	push   ecx
  41d00c:	dec    ecx
  41d00d:	push   ecx
  41d00e:	pop    ebx
  41d00f:	(bad)  [ebx+0x54]
  41d012:	push   0xffffffbe
  41d014:	stc    
  41d015:	push   edi
  41d016:	mov    bl,0x5b
  41d018:	or     ebp,edi
  41d01a:	sub    DWORD PTR [esi],ecx
  41d01c:	pop    es
  41d01d:	xchg   esi,eax
  41d01e:	or     DWORD PTR [edi],0x640187ec
  41d024:	(bad)  
  41d025:	fnstcw WORD PTR [ecx]
  41d027:	inc    ebp
  41d028:	adc    DWORD PTR [ebx+edx*4],0x571eb557
  41d02f:	inc    esp
  41d030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d031:	aaa    
  41d032:	mov    bh,0xb0
  41d034:	popa   
  41d035:	push   cs
  41d036:	je     0x41d00e
  41d038:	ins    DWORD PTR es:[edi],dx
  41d039:	push   ds
  41d03a:	jmp    0xd8a3984f
  41d03f:	stc    
  41d040:	pop    edi
  41d041:	xchg   bl,bh
  41d043:	and    dh,BYTE PTR [edx]
  41d045:	mov    bl,0x96
  41d047:	(bad)  
  41d048:	push   edi
  41d049:	xor    DWORD PTR [esp+eiz*2],0x6b10595b
  41d050:	or     DWORD PTR [ebp-0xf790a2b],ebx
  41d056:	outs   dx,DWORD PTR ds:[esi]
  41d057:	mov    esp,0x20bd8592
  41d05c:	pusha  
  41d05d:	(bad)  
  41d05e:	outs   dx,BYTE PTR ds:[esi]
  41d05f:	outs   dx,DWORD PTR ds:[esi]
  41d060:	xchg   BYTE PTR [ebx+0x20],bl
  41d063:	dec    esp
  41d064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d065:	jmp    0x77509079
  41d06a:	cli    
  41d06b:	xchg   edi,eax
  41d06c:	jg     0x41d059
  41d06e:	cdq    
  41d06f:	repz imul edi,esp,0x4d1f387b
  41d076:	sbb    ebx,DWORD PTR [ebx+0x1e186d5c]
  41d07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d07d:	xor    al,0x8a
  41d07f:	jnp    0x41d0c8
  41d081:	fldcw  WORD PTR [esi+0x1eca8fc7]
  41d087:	out    0x56,al
  41d089:	jecxz  0x41d08a
  41d08b:	xchg   esi,eax
  41d08c:	out    0x99,eax
  41d08e:	popa   
  41d08f:	aad    0x2f
  41d091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d092:	pop    edx
  41d093:	mov    gs:0x3745e662,al
  41d099:	iret   
  41d09a:	fs push eax
  41d09c:	ret    
  41d09d:	pushf  
  41d09e:	call   0x3686:0x9ead297d
  41d0a5:	sbb    eax,0xb988f568
  41d0aa:	(bad)  
  41d0ab:	mov    edi,0xe8ef8799
  41d0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0b1:	mov    ah,BYTE PTR [ebx+eax*8]
  41d0b4:	dec    ebx
  41d0b5:	movzx  ebx,BYTE PTR [eax+0x50ff7c22]
  41d0bc:	(bad)  
  41d0bd:	iret   
  41d0be:	mov    bl,0x10
  41d0c0:	jl     0x41d0c0
  41d0c2:	leave  
  41d0c3:	fisttp WORD PTR [ebx+0x690c3167]
  41d0c9:	test   ax,0x1854
  41d0cd:	xor    DWORD PTR [ebp-0x3c],ebx
  41d0d0:	sahf   
  41d0d1:	lds    esp,FWORD PTR [esi+eax*2+0x43]
  41d0d5:	dec    ebx
  41d0d6:	and    cl,dl
  41d0d8:	outs   dx,DWORD PTR ds:[esi]
  41d0d9:	test   eax,0xc26bc872
  41d0de:	cmp    eax,ebp
  41d0e0:	(bad)  
  41d0e1:	fimul  WORD PTR [esi-0x3216602c]
  41d0e7:	adc    ah,BYTE PTR [edi+0x21d4c121]
  41d0ed:	outs   dx,BYTE PTR ds:[esi]
  41d0ee:	push   ecx
  41d0ef:	(bad)  [esi]
  41d0f1:	dec    ebp
  41d0f2:	(bad)  
  41d0f3:	pop    ecx
  41d0f4:	and    esp,DWORD PTR [ebx+eiz*4]
  41d0f7:	or     BYTE PTR [ebp-0x53],al
  41d0fa:	mov    DWORD PTR [eax+0x3d],ebx
  41d0fd:	push   ecx
  41d0fe:	push   eax
  41d0ff:	loope  0x41d154
  41d101:	repz push cs
  41d103:	and    edx,DWORD PTR [ebx-0x33a24f4b]
  41d109:	sub    DWORD PTR [eax+0x63],eax
  41d10c:	mov    eax,0x1ea63191
  41d111:	loope  0x41d0b3
  41d113:	iret   
  41d114:	adc    DWORD PTR [ecx+0x253b4a4],esp
  41d11a:	rol    DWORD PTR [ecx-0x4b],0xbb
  41d11e:	jbe    0x41d0f6
  41d120:	sbb    BYTE PTR [edi],dl
  41d122:	mov    ?,WORD PTR [edx-0x1cb3e702]
  41d128:	cld    
  41d129:	sub    ah,BYTE PTR [edx-0x691f2d7a]
  41d12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d130:	sub    eax,0xf302e7f
  41d135:	mov    ah,0xc7
  41d137:	jp     0x41d17a
  41d139:	sbb    al,0x7c
  41d13b:	and    BYTE PTR [ecx],0xbe
  41d13e:	inc    esi
  41d13f:	ins    DWORD PTR es:[edi],dx
  41d140:	fdivr  DWORD PTR [edi+ebx*2-0x45]
  41d144:	adc    BYTE PTR [eax+0x59],cl
  41d147:	xor    BYTE PTR [ebp+0x4b],cl
  41d14a:	rol    BYTE PTR [eax+edx*2-0x73],0xe0
  41d14f:	mov    al,0x5
  41d151:	loopne 0x41d101
  41d153:	mov    al,ds:0x3705ef97
  41d158:	cmp    bl,BYTE PTR [ebx+0xa697394]
  41d15e:	push   ebx
  41d15f:	and    DWORD PTR [esi],esi
  41d161:	shr    BYTE PTR [esi-0x58],cl
  41d164:	shl    BYTE PTR [ebx-0x714ab76a],cl
  41d16a:	retf   
  41d16b:	add    ebp,ebx
  41d16d:	inc    ebx
  41d16e:	dec    ecx
  41d16f:	in     eax,0xdb
  41d171:	jmp    0x22cc:0x3f8da61c
  41d178:	mov    eax,0xcc8b47a7
  41d17d:	mov    WORD PTR [eax],?
  41d17f:	and    eax,DWORD PTR [ecx-0x4c]
  41d182:	pop    es
  41d183:	jne    0x41d1b0
  41d185:	retf   0x142f
  41d188:	sub    DWORD PTR [edi+ebp*8],eax
  41d18b:	out    0xe,al
  41d18d:	cmp    BYTE PTR [ecx-0xf32b3e4],ch
  41d193:	jmp    0x7c03859e
  41d198:	(bad)  
  41d199:	loope  0x41d203
  41d19b:	sbb    cl,BYTE PTR [ecx]
  41d19d:	push   ss
  41d19e:	cmp    ch,ch
  41d1a0:	xor    eax,0xf3f2fb42
  41d1a5:	jmp    0x41d152
  41d1a7:	in     eax,0xe0
  41d1a9:	sbb    ecx,DWORD PTR [ecx+0x57]
  41d1ac:	xchg   DWORD PTR [esi-0x6d],eax
  41d1af:	mov    ds:0x6ddef1ed,al
  41d1b4:	hlt    
  41d1b5:	imul   ebx,DWORD PTR [edx+0x273fcd0a],0xbeab980c
  41d1bf:	cmp    al,0xc1
  41d1c1:	sahf   
  41d1c2:	inc    esi
  41d1c3:	fucompp 
  41d1c5:	repz mov ecx,0x6f68a288
  41d1cb:	inc    edx
  41d1cc:	inc    ebp
  41d1cd:	fsub   st(5),st
  41d1cf:	neg    BYTE PTR [eax-0x51]
  41d1d2:	sbb    dl,BYTE PTR [edx+ebx*2]
  41d1d5:	les    esi,FWORD PTR [ecx-0x45621a19]
  41d1db:	push   ebp
  41d1dc:	data16 mov ch,0x26
  41d1df:	jb     0x41d1cd
  41d1e1:	lea    edi,[esi+0x448cb0f6]
  41d1e7:	jnp    0x41d235
  41d1e9:	xor    eax,0x92e55735
  41d1ee:	das    
  41d1ef:	shr    BYTE PTR [edx],0x64
  41d1f2:	bound  esp,QWORD PTR [edi+0xa]
  41d1f5:	xor    al,0x49
  41d1f7:	cmp    al,0xb7
  41d1f9:	shl    BYTE PTR [edx],1
  41d1fb:	not    DWORD PTR [eax]
  41d1fd:	pushf  
  41d1fe:	or     eax,0x3fec2d54
  41d203:	shr    BYTE PTR [esi+0x57],cl
  41d206:	loope  0x41d252
  41d208:	jmp    0x518:0xe469af59
  41d20f:	addr16 jp 0x41d253
  41d212:	mov    cl,0xf4
  41d214:	mov    gs,WORD PTR [ebx+0x503ac7af]
  41d21a:	pop    es
  41d21b:	jmp    0xdf26:0xdd11db8c
  41d222:	ins    DWORD PTR es:[edi],dx
  41d223:	inc    esi
  41d224:	out    dx,eax
  41d225:	adc    eax,0xc6a254b7
  41d22a:	jae    0x41d1b1
  41d22c:	addr16 dec esp
  41d22e:	cdq    
  41d22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d230:	cmp    cl,BYTE PTR [esi-0x3e]
  41d233:	je     0x41d29e
  41d235:	pop    edi
  41d236:	mov    esi,0x46fff0c8
  41d23b:	test   BYTE PTR [edi+0x75],0xe1
  41d23f:	clc    
  41d240:	inc    ebp
  41d241:	push   eax
  41d242:	inc    eax
  41d243:	ins    BYTE PTR es:[edi],dx
  41d244:	sub    esp,DWORD PTR ss:[edi+0x10]
  41d248:	jbe    0x41d1f0
  41d24a:	movaps XMMWORD PTR [edi+ecx*8+0x77],xmm6
  41d24f:	ds jmp 0xbf25:0x993cf390
  41d257:	xor    al,0x7c
  41d259:	sbb    al,0x82
  41d25b:	adc    eax,0xf91493a7
  41d260:	dec    edi
  41d261:	dec    ebp
  41d262:	cmp    BYTE PTR [eax-0x4a56cdbf],0x2c
  41d269:	xchg   ebp,eax
  41d26a:	mov    edx,0x791d325a
  41d26f:	pop    ecx
  41d270:	mov    esp,0x44ce03ac
  41d275:	xchg   edx,eax
  41d276:	jb     0x41d201
  41d278:	std    
  41d279:	add    eax,0x763386b1
  41d27e:	push   edx
  41d27f:	inc    edx
  41d280:	(bad)  
  41d281:	mov    edi,0x7d50c456
  41d286:	jmp    0x41d22d
  41d288:	fidiv  DWORD PTR [edx+0x6663a790]
  41d28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28f:	mov    bh,0xb4
  41d291:	lods   eax,DWORD PTR ds:[esi]
  41d292:	mov    DWORD PTR [eax],ecx
  41d294:	test   BYTE PTR [eax+ebx*1-0x117c86c7],0x6
  41d29c:	sub    al,0xb7
  41d29f:	repz add dh,BYTE PTR [edx]
  41d2a2:	cmp    esi,DWORD PTR [edx+0x5]
  41d2a5:	nop
  41d2a6:	push   eax
  41d2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a8:	je     0x41d277
  41d2aa:	ins    DWORD PTR es:[edi],dx
  41d2ab:	mov    al,ds:0xc041cfda
  41d2b0:	(bad)  
  41d2b2:	jno    0x41d2f2
  41d2b4:	mov    edx,DWORD PTR [ebp+0x456fc222]
  41d2ba:	in     eax,0xe2
  41d2bc:	add    DWORD PTR [edi+0x7dabbe37],esi
  41d2c2:	pusha  
  41d2c3:	cmc    
  41d2c4:	je     0x41d340
  41d2c6:	cmp    eax,0x49f22684
  41d2cb:	xchg   DWORD PTR [edi+0x29c8c68c],esi
  41d2d1:	pop    ds
  41d2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2d3:	test   ch,0x29
  41d2d6:	les    ecx,FWORD PTR [edi]
  41d2d8:	cmp    BYTE PTR [edx+esi*8+0xd],bl
  41d2dc:	jl     0x41d2be
  41d2de:	scas   al,BYTE PTR es:[edi]
  41d2df:	shr    DWORD PTR [edi+edi*4-0x24],0xdf
  41d2e4:	jmp    0x41d359
  41d2e6:	add    al,0x3e
  41d2e8:	sbb    eax,0x1955abc5
  41d2ed:	scas   eax,DWORD PTR es:[edi]
  41d2ee:	cwde   
  41d2ef:	inc    eax
  41d2f0:	xchg   esp,eax
  41d2f1:	mov    ebx,edx
  41d2f3:	xchg   ebx,eax
  41d2f4:	addr16 xchg ebx,eax
  41d2f6:	pop    ebx
  41d2f7:	inc    ebp
  41d2f8:	cmp    DWORD PTR [edx-0x35],0x2
  41d2fc:	stc    
  41d2fd:	in     al,dx
  41d2fe:	sub    al,0xcd
  41d300:	fcom   DWORD PTR [edx]
  41d302:	xchg   esi,eax
  41d303:	add    al,0xdd
  41d305:	ja     0x41d2ff
  41d307:	es stc 
  41d309:	xlat   BYTE PTR ds:[ebx]
  41d30a:	inc    ebx
  41d30b:	mov    esp,0xb02f61e6
  41d310:	push   ds
  41d311:	dec    ebx
  41d312:	push   esi
  41d313:	mov    al,al
  41d315:	adc    al,0x37
  41d317:	sar    bl,cl
  41d319:	pop    ebp
  41d31a:	xor    eax,0x59bd43da
  41d31f:	int    0xba
  41d321:	push   ds
  41d322:	sub    dh,ch
  41d324:	pop    ss
  41d325:	fcom   DWORD PTR [ebp+0x62f52329]
  41d32b:	sbb    BYTE PTR [esi-0x18d3ba2a],0xae
  41d332:	jb     0x41d2f9
  41d334:	call   0xde625cb5
  41d339:	or     eax,0xbd768d6a
  41d33e:	lahf   
  41d33f:	mov    DWORD PTR [ebx],edx
  41d341:	imul   esi,esp,0xe52ae5bf
  41d347:	push   esp
  41d348:	pop    eax
  41d349:	cmc    
  41d34a:	and    BYTE PTR [edx+0x18],ch
  41d34d:	(bad)  
  41d34e:	hlt    
  41d34f:	addr16 fdivr st,st(1)
  41d352:	add    BYTE PTR [edi+0x57],cl
  41d355:	push   ebx
  41d356:	rol    BYTE PTR [edx+0x6e],cl
  41d359:	inc    ebx
  41d35a:	or     eax,0xec994b60
  41d35f:	ins    DWORD PTR es:[edi],dx
  41d360:	nop
  41d361:	fistp  WORD PTR [edi]
  41d363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d364:	jns    0x41d3bc
  41d366:	hlt    
  41d367:	pop    ss
  41d368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d369:	das    
  41d36a:	xor    edx,esi
  41d36c:	sub    DWORD PTR [ecx+0x4e],ecx
  41d36f:	rcl    BYTE PTR [esi-0x30],0x1d
  41d373:	in     eax,0x88
  41d375:	(bad)  
  41d376:	loope  0x41d331
  41d378:	mov    bh,0x64
  41d37a:	and    ah,BYTE PTR [eax+0x420ecbb1]
  41d380:	adc    ecx,DWORD PTR [edi+0x4a2811c8]
  41d386:	dec    esp
  41d387:	aad    0x32
  41d389:	and    BYTE PTR [edi],0x45
  41d38c:	mov    ds:0xb1a96b56,eax
  41d391:	and    ecx,DWORD PTR [ebx-0x43b7f8ae]
  41d397:	fisub  WORD PTR [ebx-0x5e]
  41d39a:	les    edi,FWORD PTR ds:0xd5123cee
  41d3a0:	popa   
  41d3a1:	pop    eax
  41d3a2:	or     eax,0xf8004232
  41d3a8:	(bad)  
  41d3a9:	hlt    
  41d3aa:	inc    edi
  41d3ab:	call   0x707b:0x9cc184d9
  41d3b2:	push   ds
  41d3b3:	and    BYTE PTR [edx-0x163835fe],al
  41d3b9:	push   edi
  41d3ba:	fisubr WORD PTR [eax]
  41d3bc:	or     al,0x4e
  41d3be:	inc    esp
  41d3bf:	mov    dh,0x1d
  41d3c1:	add    eax,0xea5b5d28
  41d3c6:	push   edi
  41d3c7:	xchg   ebx,eax
  41d3c8:	mov    edx,0x1ae34fa6
  41d3cd:	mov    cl,0xd4
  41d3cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d0:	lahf   
  41d3d1:	add    al,0x5c
  41d3d3:	xchg   edx,eax
  41d3d4:	mov    ecx,edx
  41d3d6:	in     al,dx
  41d3d7:	add    DWORD PTR [ebx],0xc128f6ef
  41d3dd:	mov    bh,0xb4
  41d3df:	lock xchg ecx,eax
  41d3e1:	sbb    ch,al
  41d3e3:	popa   
  41d3e4:	or     dl,BYTE PTR [esi-0x5c8626ed]
  41d3ea:	leave  
  41d3eb:	pop    ss
  41d3ec:	mov    DWORD PTR [esi+0x36],ecx
  41d3ef:	shr    BYTE PTR [eax+edx*2],cl
  41d3f2:	fnsave [eax]
  41d3f4:	xchg   ebx,eax
  41d3f5:	push   ebx
  41d3f6:	push   cs
  41d3f7:	call   0xf2688eb4
  41d3fc:	push   cs
  41d3fd:	xchg   ecx,eax
  41d3fe:	add    al,0xc4
  41d400:	(bad)  
  41d402:	xor    dh,BYTE PTR [ebx]
  41d404:	ficomp WORD PTR [edi+0x7f]
  41d407:	and    eax,0x1a
  41d40a:	(bad)  
  41d40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d40c:	push   ss
  41d40d:	ror    cl,1
  41d40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d410:	popf   
  41d411:	mov    DWORD PTR [edi],esp
  41d413:	inc    ecx
  41d414:	mov    al,0x3e
  41d416:	xchg   edx,eax
  41d417:	jmp    0x41d3d3
  41d419:	jne    0x41d3fa
  41d41b:	in     eax,dx
  41d41c:	jp     0x41d44a
  41d41e:	add    DWORD PTR [ebx+0x4c],esp
  41d421:	inc    edx
  41d422:	test   BYTE PTR [edi+0x23],bh
  41d425:	jae    0x41d3d2
  41d427:	jne    0x41d42c
  41d429:	add    edx,edi
  41d42b:	pop    ss
  41d42c:	or     ebp,DWORD PTR [edi]
  41d42e:	sbb    esp,DWORD PTR [edi+0x1f]
  41d431:	out    dx,al
  41d432:	jne    0x41d419
  41d434:	(bad)  
  41d435:	in     al,0x8f
  41d437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d438:	sbb    BYTE PTR [edx],dl
  41d43a:	mov    cl,0xe4
  41d43c:	adc    DWORD PTR [ebp+ecx*8-0x72859edb],esi
  41d443:	outs   dx,DWORD PTR ds:[esi]
  41d444:	fs ja  0x41d492
  41d447:	add    dh,BYTE PTR [eax]
  41d449:	lods   al,BYTE PTR ds:[esi]
  41d44a:	(bad)  
  41d44b:	cli    
  41d44c:	add    eax,esp
  41d44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d44f:	stos   DWORD PTR es:[edi],eax
  41d450:	adc    ecx,edx
  41d452:	dec    esp
  41d453:	xchg   edi,eax
  41d454:	push   esi
  41d455:	cwde   
  41d456:	push   es
  41d457:	jmp    0x41d461
  41d459:	cmp    ebx,ebp
  41d45b:	sbb    dl,cl
  41d45d:	xchg   BYTE PTR [esi+0x60],ah
  41d460:	add    eax,0xb4a9aead
  41d465:	stos   BYTE PTR es:[edi],al
  41d466:	out    0xfa,eax
  41d468:	rcl    BYTE PTR [eax+0x33],1
  41d46b:	test   eax,0xc7281966
  41d470:	sub    al,0x63
  41d472:	mov    edi,eax
  41d474:	pusha  
  41d475:	call   0x73b3:0x38c7930d
  41d47c:	xchg   edi,eax
  41d47d:	sbb    bh,al
  41d47f:	das    
  41d480:	inc    ebp
  41d481:	mov    al,ds:0x605d79fb
  41d486:	clc    
  41d487:	mov    WORD PTR [ebp+eax*4-0x75],?
  41d48b:	lods   eax,DWORD PTR ds:[esi]
  41d48c:	mov    esi,0xce393a06
  41d491:	sbb    bh,dh
  41d493:	adc    BYTE PTR [eax],cl
  41d495:	mov    bl,0x52
  41d497:	jg     0x41d473
  41d499:	cmp    ebp,ebx
  41d49b:	aas    
  41d49c:	ins    BYTE PTR es:[edi],dx
  41d49d:	addr16 push ecx
  41d49f:	mov    ah,0x79
  41d4a1:	test   al,0x55
  41d4a3:	es pusha 
  41d4a5:	popa   
  41d4a6:	(bad)  
  41d4a7:	jo     0x41d4eb
  41d4a9:	(bad)  
  41d4aa:	pop    ebx
  41d4ab:	sbb    ah,BYTE PTR ds:[edx]
  41d4ae:	(bad)  
  41d4b0:	(bad)  
  41d4b1:	mov    ch,0x83
  41d4b3:	push   ss
  41d4b4:	cmc    
  41d4b5:	daa    
  41d4b6:	pop    esp
  41d4b7:	scas   eax,DWORD PTR es:[edi]
  41d4b8:	clc    
  41d4b9:	jg     0x41d4ca
  41d4bb:	sbb    DWORD PTR [edx-0x42d166c1],0x38
  41d4c2:	(bad)  
  41d4c3:	sahf   
  41d4c4:	mov    dl,0x25
  41d4c6:	push   ecx
  41d4c7:	mov    esp,0xbdeb05e4
  41d4cc:	mov    dh,0x88
  41d4ce:	cwde   
  41d4cf:	ret    0xebd9
  41d4d2:	jno    0x41d527
  41d4d4:	sbb    dl,bh
  41d4d6:	dec    DWORD PTR [ecx]
  41d4d8:	mov    dl,0xf3
  41d4da:	lods   al,BYTE PTR ds:[esi]
  41d4db:	or     al,0xde
  41d4dd:	sbb    ecx,ebp
  41d4df:	leave  
  41d4e0:	inc    DWORD PTR [ecx]
  41d4e2:	popf   
  41d4e3:	mov    esi,esp
  41d4e5:	pop    ds
  41d4e6:	push   ebp
  41d4e7:	scas   eax,DWORD PTR es:[edi]
  41d4e8:	add    DWORD PTR [ebp-0x80],ebp
  41d4eb:	sub    dl,BYTE PTR [ebx-0x2b]
  41d4ee:	rcr    DWORD PTR [ebp-0x547bbc11],1
  41d4f4:	je     0x41d490
  41d4f6:	cmp    al,0xa5
  41d4f8:	out    0x45,eax
  41d4fa:	xchg   ebp,eax
  41d4fb:	pop    ebx
  41d4fc:	hlt    
  41d4fd:	cmc    
  41d4fe:	cwde   
  41d4ff:	jnp    0x41d515
  41d501:	xchg   edx,eax
  41d502:	mov    ds:0x5a645118,eax
  41d507:	adc    esi,DWORD PTR [edx-0x7ec8a355]
  41d50d:	stc    
  41d50e:	pop    ss
  41d50f:	cmovle edi,DWORD PTR [ecx-0x27]
  41d513:	xor    eax,DWORD PTR [eax*1-0x6e03d6bc]
  41d51a:	enter  0xb5e1,0xc5
  41d51e:	xchg   esp,eax
  41d51f:	sti    
  41d520:	pushf  
  41d521:	mov    ds:0x9676e134,al
  41d526:	pop    ebx
  41d527:	rol    BYTE PTR [ebp-0x1b9d5110],0xa4
  41d52e:	dec    ecx
  41d52f:	xchg   DWORD PTR [ecx],edi
  41d531:	aam    0x53
  41d533:	repnz xor DWORD PTR [ecx],edx
  41d536:	or     al,0xf2
  41d538:	pop    edx
  41d539:	pushf  
  41d53a:	pop    edi
  41d53b:	dec    edx
  41d53c:	jne    0x41d4f5
  41d53e:	scas   eax,DWORD PTR es:[edi]
  41d53f:	mov    ah,0xb7
  41d541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d542:	dec    eax
  41d543:	inc    ebp
  41d544:	pusha  
  41d545:	shl    BYTE PTR [esi],cl
  41d547:	inc    esi
  41d548:	sub    DWORD PTR [eax+0x1fa7427c],0x2cb16bcf
  41d552:	in     eax,dx
  41d553:	lock sbb ebp,eax
  41d556:	rol    DWORD PTR [edi+0x3d],0x13
  41d55a:	gs in  eax,dx
  41d55c:	or     edi,DWORD PTR [esi-0x14193c27]
  41d562:	sbb    dl,BYTE PTR ds:0x168ea97a
  41d568:	adc    eax,0x32532cc8
  41d56d:	mov    ds:0x7538eb33,al
  41d572:	scas   al,BYTE PTR es:[edi]
  41d573:	push   eax
  41d574:	loop   0x41d542
  41d576:	fisub  DWORD PTR [ebp-0x5ab07d39]
  41d57c:	adc    bl,BYTE PTR ds:0xe0314d0d
  41d582:	jmp    0x7614:0x9419c739
  41d589:	bound  ecx,QWORD PTR [ebx-0x2ce12a73]
  41d58f:	pop    eax
  41d590:	stos   DWORD PTR es:[edi],eax
  41d591:	shr    DWORD PTR [esi+0x4576ba46],1
  41d597:	xchg   esp,eax
  41d598:	sub    DWORD PTR [ebx],ebx
  41d59a:	loope  0x41d548
  41d59c:	daa    
  41d59d:	mov    bl,BYTE PTR ds:0x2fb3fbf0
  41d5a3:	and    ebx,ebp
  41d5a5:	retf   
  41d5a6:	lds    ebp,FWORD PTR [ecx+0x3af0f29d]
  41d5ac:	sub    al,0x81
  41d5ae:	jecxz  0x41d627
  41d5b0:	daa    
  41d5b1:	jle    0x41d542
  41d5b3:	push   ds
  41d5b4:	or     bl,BYTE PTR [esi+0x15]
  41d5b7:	mov    ch,0x37
  41d5b9:	xlat   BYTE PTR ds:[ebx]
  41d5ba:	mov    ebp,0xf36e3507
  41d5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c0:	in     eax,0xde
  41d5c2:	ret    
  41d5c3:	aaa    
  41d5c4:	loop   0x41d63c
  41d5c6:	and    DWORD PTR [edx],edx
  41d5c8:	stos   BYTE PTR es:[edi],al
  41d5c9:	aaa    
  41d5ca:	xor    DWORD PTR [ecx+0x56],0x46d6a44e
  41d5d1:	and    eax,ebx
  41d5d3:	and    dl,BYTE PTR [esi+0x18]
  41d5d6:	(bad)  [ebx]
  41d5d8:	js     0x41d5f2
  41d5da:	inc    eax
  41d5db:	xlat   BYTE PTR ds:[ebx]
  41d5dc:	mov    ebx,0x1427ad71
  41d5e1:	push   eax
  41d5e2:	xchg   esi,eax
  41d5e3:	jmp    0xda7d2f3a
  41d5e8:	add    DWORD PTR ds:0x764c1f67,ecx
  41d5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5ef:	sbb    eax,0x9799326d
  41d5f4:	sar    esp,1
  41d5f6:	aad    0x24
  41d5f8:	out    dx,eax
  41d5f9:	pusha  
  41d5fa:	push   esp
  41d5fb:	mov    bh,0xb2
  41d5fd:	add    BYTE PTR [esi],dh
  41d5ff:	ins    BYTE PTR es:[edi],dx
  41d600:	jmp    0x3c83e166
  41d605:	xchg   ecx,eax
  41d606:	ins    BYTE PTR es:[edi],dx
  41d607:	sbb    BYTE PTR ds:0x4ebbd7e3,bl
  41d60d:	mov    ebp,0x3748931b
  41d612:	add    eax,0xf5d85956
  41d617:	jo     0x41d5a6
  41d619:	fdivr  st,st(1)
  41d61b:	adc    BYTE PTR ds:0x27cd1e35,bh
  41d621:	jbe    0x41d60e
  41d623:	mov    ecx,DWORD PTR [ecx-0x661a8807]
  41d629:	jmp    0x9e14:0x812c4d3f
  41d630:	inc    ebx
  41d631:	add    BYTE PTR [ebp-0x42],bh
  41d634:	mov    al,0x5d
  41d636:	or     bl,ah
  41d638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d639:	mov    ch,0xb7
  41d63b:	xor    bl,bl
  41d63d:	inc    esi
  41d63e:	adc    ch,BYTE PTR es:[eax+0x40]
  41d642:	cwde   
  41d643:	mov    edx,ebp
  41d645:	push   ecx
  41d646:	mov    esp,0x67303fc0
  41d64b:	call   0x5b30:0x863de248
  41d652:	loopne 0x41d67f
  41d654:	pop    esp
  41d655:	and    DWORD PTR [ebx+0x71961168],0xffffffda
  41d65c:	ret    
  41d65d:	mov    ds:0xff1272f,eax
  41d662:	pushf  
  41d663:	das    
  41d664:	mov    dl,0x78
  41d666:	sbb    al,0x7f
  41d668:	test   DWORD PTR [esi+0x76],0x53a8982a
  41d66f:	test   BYTE PTR [ebx],dl
  41d671:	test   al,0xad
  41d673:	dec    ebx
  41d674:	sbb    eax,0x87113f2c
  41d679:	fadd   QWORD PTR [edx+0xe52e3e5]
  41d67f:	frstor [ecx+0x75]
  41d682:	das    
  41d683:	outs   dx,BYTE PTR ds:[esi]
  41d684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d685:	cmp    al,0x18
  41d687:	(bad)  
  41d688:	push   0xfffffff6
  41d68a:	int3   
  41d68b:	mov    edx,DWORD PTR ss:[ebx+0x44df833e]
  41d692:	inc    esp
  41d693:	stos   BYTE PTR es:[edi],al
  41d694:	push   edx
  41d695:	xor    eax,0x77e79abe
  41d69a:	xor    edi,edi
  41d69c:	jmp    0x41d696
  41d69e:	push   esp
  41d69f:	mov    WORD PTR [esi],ss
  41d6a1:	lock in al,0x82
  41d6a4:	xlat   BYTE PTR ds:[ebx]
  41d6a5:	dec    esp
  41d6a6:	int3   
  41d6a7:	and    dl,bh
  41d6a9:	pop    edi
  41d6aa:	add    DWORD PTR [ecx],esp
  41d6ac:	mov    ch,BYTE PTR [edx+edx*4-0x352c1598]
  41d6b3:	jae    0x41d6d7
  41d6b5:	fdiv   st(4),st
  41d6b7:	fisub  DWORD PTR [ebp-0x1ab3599d]
  41d6bd:	loop   0x41d6bc
  41d6bf:	mov    bh,0xd2
  41d6c1:	xchg   edx,eax
  41d6c2:	xlat   BYTE PTR ds:[ebx]
  41d6c3:	sahf   
  41d6c4:	inc    esi
  41d6c5:	and    ebx,DWORD PTR [esi]
  41d6c7:	retf   0xf3e9
  41d6ca:	and    eax,0x6102192d
  41d6cf:	and    eax,0x443087d
  41d6d4:	(bad)
  41d6d7:	gs adc eax,0xe77e09fd
  41d6dd:	mov    ds:0x29f31936,al
  41d6e2:	ffree  st(1)
  41d6e4:	ds std 
  41d6e6:	jns    0x41d701
  41d6e8:	inc    esp
  41d6e9:	pushf  
  41d6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6eb:	sub    esi,DWORD PTR [ebx]
  41d6ed:	jb     0x41d693
  41d6ef:	sub    esp,DWORD PTR [ebx-0x52fcc8bc]
  41d6f5:	adc    BYTE PTR ds:0xe5bf23ef,0xf
  41d6fc:	pusha  
  41d6fd:	inc    esp
  41d6fe:	xor    DWORD PTR [esi-0xb],esi
  41d701:	fld    QWORD PTR [edi]
  41d703:	outs   dx,DWORD PTR ds:[esi]
  41d704:	mov    ebp,0xc904fbf7
  41d709:	push   esp
  41d70a:	add    cl,al
  41d70c:	cmp    DWORD PTR [ebx+0x11],ecx
  41d70f:	mov    ch,0xcf
  41d711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d712:	push   0xdbe2e048
  41d717:	aas    
  41d718:	icebp  
  41d719:	aad    0x3a
  41d71b:	pop    ebx
  41d71c:	and    dl,BYTE PTR [ebx-0xe]
  41d71f:	or     edx,ecx
  41d721:	lods   eax,DWORD PTR ds:[esi]
  41d722:	jae    0x41d799
  41d724:	push   cs
  41d725:	pop    ebp
  41d726:	mov    ds:0xfdfee2eb,eax
  41d72b:	mov    ds:0x53fc884f,al
  41d730:	cld    
  41d731:	aas    
  41d732:	enter  0x8a22,0xc3
  41d736:	sbb    DWORD PTR [ebx],esp
  41d738:	xchg   edi,edi
  41d73a:	lods   al,BYTE PTR ds:[esi]
  41d73b:	dec    eax
  41d73c:	adc    ch,BYTE PTR [esi+0x1fc005ee]
  41d742:	dec    esi
  41d743:	stos   DWORD PTR es:[edi],eax
  41d744:	push   ebp
  41d745:	add    BYTE PTR [eax+edi*1+0x37a447dc],ch
  41d74c:	in     eax,0x6c
  41d74e:	jle    0x41d6fb
  41d750:	inc    ecx
  41d751:	xor    cl,BYTE PTR [ecx+0x6b]
  41d754:	js     0x41d751
  41d756:	inc    esi
  41d757:	and    dh,dh
  41d759:	(bad)  
  41d75a:	cmp    eax,0x6dc8e2bc
  41d75f:	je     0x41d745
  41d761:	xor    eax,0x221feb26
  41d766:	sbb    DWORD PTR [esi],edi
  41d768:	mov    edi,0xbcea26cf
  41d76d:	pop    ebp
  41d76e:	sbb    edi,DWORD PTR [esp+ebx*1-0x46]
  41d772:	call   esp
  41d774:	test   DWORD PTR [ebx-0xc],ecx
  41d777:	fimul  DWORD PTR [ebx]
  41d779:	cs aaa 
  41d77b:	test   DWORD PTR [eax+0x7111c788],edi
  41d781:	hlt    
  41d782:	out    dx,al
  41d783:	(bad)  
  41d784:	int3   
  41d785:	inc    ebx
  41d786:	shr    dl,1
  41d788:	ins    DWORD PTR es:[edi],dx
  41d789:	inc    esp
  41d78a:	lahf   
  41d78b:	test   DWORD PTR [edx+0x10ca6504],0xd592980d
  41d795:	mov    bh,0x91
  41d797:	push   esp
  41d798:	lahf   
  41d799:	leave  
  41d79a:	push   esi
  41d79b:	xchg   esi,eax
  41d79c:	mov    ds:0x52d6a1a5,al
  41d7a1:	adc    al,BYTE PTR [esi-0x65a2c1cc]
  41d7a7:	out    dx,al
  41d7a8:	hlt    
  41d7a9:	dec    edx
  41d7aa:	push   0x3299c2fa
  41d7af:	xchg   ecx,eax
  41d7b0:	jns    0x41d7e7
  41d7b2:	arpl   WORD PTR [edx],cx
  41d7b4:	test   DWORD PTR [ecx+0x51],0x6d5c195
  41d7bb:	jle    0x41d761
  41d7bd:	push   ebx
  41d7be:	popa   
  41d7bf:	cmp    ecx,DWORD PTR [ecx-0x1dec8f84]
  41d7c5:	and    ebx,DWORD PTR [ebp-0x74]
  41d7c8:	out    0xb5,eax
  41d7ca:	int3   
  41d7cb:	cdq    
  41d7cc:	fistp  DWORD PTR [edx-0x7d]
  41d7cf:	adc    eax,0xc6e13cbd
  41d7d4:	enter  0x71d1,0xf8
  41d7d8:	jl     0x41d78d
  41d7da:	loopne 0x41d7b3
  41d7dc:	and    eax,DWORD PTR [edi+0x6251d4b5]
  41d7e2:	mov    edi,0xc9c59bbc
  41d7e7:	jns    0x41d81d
  41d7e9:	sbb    cl,bl
  41d7eb:	leave  
  41d7ec:	addr16 idiv bl
  41d7ef:	repz xchg edi,eax
  41d7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f2:	ret    0x9d1d
  41d7f5:	aas    
  41d7f6:	jbe    0x41d865
  41d7f8:	ja     0xc310e9d6
  41d7fe:	mov    ch,0xcd
  41d800:	pop    edi
  41d801:	sar    BYTE PTR [edi],cl
  41d803:	inc    ecx
  41d804:	pop    ss
  41d805:	ds inc ebx
  41d807:	es pop ebp
  41d809:	mov    edx,0x3395a11f
  41d80e:	mov    edx,0x259d7ab
  41d813:	pushf  
  41d814:	aas    
  41d815:	jo     0x41d7b6
  41d817:	xchg   ebp,eax
  41d818:	pusha  
  41d819:	xchg   ebx,eax
  41d81a:	mov    bh,0xb3
  41d81c:	mov    ebx,0x24109775
  41d821:	outs   dx,BYTE PTR ds:[esi]
  41d822:	jo     0x41d876
  41d824:	sub    BYTE PTR [ebx+edi*8-0x43],ah
  41d828:	inc    edx
  41d829:	sbb    al,0x82
  41d82b:	sbb    ebp,esp
  41d82d:	fldlg2 
  41d82f:	mov    esi,0x8c299ebc
  41d834:	test   DWORD PTR [ecx+edi*4-0x3c],esp
  41d838:	inc    ebp
  41d839:	push   ecx
  41d83a:	push   esi
  41d83b:	fnstenv [esp+edi*1-0x1c4ec7c8]
  41d842:	push   esi
  41d843:	add    al,0x3
  41d845:	sbb    al,0xab
  41d847:	int    0x44
  41d849:	add    DWORD PTR [eax],eax
  41d84b:	ja     0x41d7f5
  41d84d:	ret    
  41d84e:	mov    edx,0x7f37f550
  41d853:	out    dx,eax
  41d854:	and    al,0x47
  41d856:	rcr    BYTE PTR [ecx-0x40],cl
  41d859:	pop    esi
  41d85a:	xor    eax,0x3486ccec
  41d85f:	ins    DWORD PTR es:[edi],dx
  41d860:	dec    esi
  41d861:	xor    eax,DWORD PTR [ecx-0x17d76e7]
  41d867:	jg     0x41d7eb
  41d869:	pop    ebp
  41d86a:	nop
  41d86b:	xchg   esp,eax
  41d86c:	stos   DWORD PTR es:[edi],eax
  41d86d:	pop    ds
  41d86e:	cmc    
  41d86f:	popf   
  41d870:	inc    edi
  41d871:	xchg   ecx,eax
  41d872:	adc    DWORD PTR [esi+0x75d7345b],ebx
  41d878:	jno    0x41d891
  41d87a:	int3   
  41d87b:	enter  0xe07a,0xc7
  41d87f:	mov    al,ds:0xf0daef19
  41d884:	fldenv [edi+eiz*2+0x5638ba63]
  41d88b:	(bad)  
  41d88c:	fldcw  WORD PTR [edx+0x40]
  41d88f:	mov    WORD PTR [ebp+0x60],gs
  41d892:	dec    ebx
  41d893:	push   esi
  41d894:	pop    ss
  41d895:	outs   dx,BYTE PTR ds:[esi]
  41d896:	shl    DWORD PTR [eax+0x5d],1
  41d899:	retf   0xa907
  41d89c:	add    BYTE PTR es:[ebp+eax*4-0x5220280f],bl
  41d8a4:	pop    ecx
  41d8a5:	in     eax,dx
  41d8a6:	add    eax,0x498f6358
  41d8ab:	xor    BYTE PTR [edi+0x5a89834c],cl
  41d8b1:	sar    DWORD PTR [eax-0x6c7d584b],1
  41d8b7:	or     DWORD PTR [edx],edi
  41d8b9:	or     al,0x31
  41d8bb:	(bad)  
  41d8bc:	xchg   ebx,eax
  41d8bd:	test   DWORD PTR [esi+0x76],ecx
  41d8c0:	xchg   edi,eax
  41d8c1:	rcr    BYTE PTR [eax],0x4e
  41d8c4:	scas   al,BYTE PTR es:[edi]
  41d8c5:	imul   esi,DWORD PTR [edx],0x414811a1
  41d8cb:	lock adc dl,ch
  41d8ce:	mov    eax,0xb316cfcf
  41d8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d4:	xchg   esi,eax
  41d8d5:	es not ebp
  41d8d8:	(bad)  
  41d8d9:	fbstp  TBYTE PTR [ecx]
  41d8db:	push   0xffffffb1
  41d8dd:	mov    ecx,0x5af4505d
  41d8e2:	push   ds
  41d8e3:	pop    ebx
  41d8e4:	dec    edi
  41d8e5:	mov    dh,0xd5
  41d8e7:	jno    0x41d8f1
  41d8e9:	jecxz  0x41d8e4
  41d8eb:	sub    edx,DWORD PTR [ebp-0xf]
  41d8ee:	sbb    BYTE PTR [eax-0x5c103186],dh
  41d8f4:	sar    BYTE PTR cs:[ecx+0x67],0xb4
  41d8f9:	ret    
  41d8fa:	inc    esp
  41d8fb:	push   edx
  41d8fc:	adc    ah,BYTE PTR [eax]
  41d8fe:	mov    DWORD PTR [ecx+0x39fd0b1d],ecx
  41d904:	fxch   st(0)
  41d906:	inc    ebp
  41d907:	jne    0x41d959
  41d909:	jmp    0x41d8fb
  41d90b:	cmp    eax,0xf323080
  41d910:	test   al,0x1e
  41d912:	je     0x41d921
  41d914:	out    0x6b,eax
  41d916:	push   ecx
  41d917:	push   ebx
  41d918:	xor    eax,0x6a0762e5
  41d91d:	cmp    DWORD PTR [ecx+0x657f3a77],0x82e7a6e5
  41d927:	cwde   
  41d928:	sbb    al,0x14
  41d92a:	sbb    al,0x7b
  41d92c:	mov    DWORD PTR ds:0x2cb25182,edi
  41d932:	xchg   esi,eax
  41d933:	iret   
  41d934:	(bad)  
  41d935:	data16 jle 0x41d906
  41d938:	add    ebp,DWORD PTR [edx]
  41d93a:	pushf  
  41d93b:	dec    ecx
  41d93c:	and    al,0xab
  41d93e:	stos   BYTE PTR es:[edi],al
  41d93f:	cld    
  41d940:	shr    DWORD PTR [edx-0x5c],0x48
  41d944:	inc    ebp
  41d945:	ds ins BYTE PTR es:[edi],dx
  41d947:	xchg   cl,cl
  41d949:	inc    DWORD PTR [ecx+0xcd2f31e]
  41d94f:	lods   eax,DWORD PTR ds:[esi]
  41d950:	aad    0x3b
  41d952:	lods   eax,DWORD PTR ds:[esi]
  41d953:	mov    bl,0x5f
  41d955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d956:	xchg   cx,ax
  41d958:	mov    eax,ds:0x17c13044
  41d95d:	lods   eax,DWORD PTR ds:[esi]
  41d95e:	push   esp
  41d95f:	sbb    dh,BYTE PTR [edi+0x5340f261]
  41d965:	popa   
  41d966:	inc    edi
  41d967:	ret    0x574a
  41d96a:	xor    al,BYTE PTR [ecx]
  41d96c:	jmp    0x130b:0xf2e7da5f
  41d973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d974:	aas    
  41d975:	scas   al,BYTE PTR es:[edi]
  41d976:	neg    DWORD PTR [ebx-0x63eb617d]
  41d97c:	in     eax,dx
  41d97d:	jne    0x41d911
  41d97f:	sti    
  41d980:	and    BYTE PTR [esp+ebp*1-0x4e320e7],0x64
  41d988:	mov    ebx,DWORD PTR [ebx]
  41d98a:	xchg   edi,eax
  41d98b:	ins    DWORD PTR es:[edi],dx
  41d98c:	ret    0xe6d5
  41d98f:	pop    ebx
  41d990:	out    0xd0,eax
  41d992:	dec    edi
  41d993:	pop    ebx
  41d994:	add    al,0xf8
  41d996:	call   0x114918a0
  41d99b:	leave  
  41d99c:	mov    ch,BYTE PTR [esi+esi*8]
  41d99f:	arpl   WORD PTR [eax+0x1f],bp
  41d9a2:	neg    DWORD PTR [ecx]
  41d9a4:	xchg   edx,eax
  41d9a5:	in     eax,0x87
  41d9a7:	lds    edx,FWORD PTR ds:0x732ca498
  41d9ad:	pushf  
  41d9ae:	dec    ebp
  41d9af:	(bad)  
  41d9b0:	mov    bh,0xe3
  41d9b2:	addr16 repz in al,0xe
  41d9b6:	rcl    edx,0xe1
  41d9b9:	(bad)  
  41d9ba:	sub    al,0x52
  41d9bc:	out    dx,al
  41d9bd:	rcl    DWORD PTR [ecx],cl
  41d9bf:	out    0x99,al
  41d9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c2:	lods   al,BYTE PTR cs:[esi]
  41d9c4:	iret   
  41d9c5:	jl     0x41d9d0
  41d9c7:	(bad)  
  41d9c8:	mov    dl,BYTE PTR [ecx]
  41d9ca:	mov    edi,DWORD PTR [eax]
  41d9cc:	std    
  41d9cd:	fmul   QWORD PTR [ecx+0x75432122]
  41d9d3:	iret   
  41d9d4:	mov    al,0x98
  41d9d6:	jnp    0x41da1b
  41d9d8:	lahf   
  41d9d9:	fsub   QWORD PTR [edi-0x3d8388b8]
  41d9df:	imul   esi,ecx,0xffffffc0
  41d9e2:	dec    edi
  41d9e3:	xchg   esp,eax
  41d9e4:	loopne 0x41d9c2
  41d9e6:	(bad)  
  41d9e7:	and    edx,DWORD PTR [esi+eax*2+0x3b4585ef]
  41d9ee:	and    DWORD PTR [ecx-0x68],ebp
  41d9f1:	and    eax,0x6b4cf0cb
  41d9f6:	mov    al,0x84
  41d9f8:	leave  
  41d9f9:	xlat   BYTE PTR ss:[ebx]
  41d9fb:	add    al,0x36
  41d9fd:	push   esi
  41d9fe:	push   0xffffff95
  41da00:	(bad)  
  41da02:	outs   dx,BYTE PTR ds:[esi]
  41da03:	xchg   DWORD PTR [ecx-0x43d7e632],ebx
  41da09:	cmp    DWORD PTR [ecx-0x2b],ecx
  41da0c:	push   ss
  41da0d:	mov    dl,0x68
  41da0f:	in     eax,dx
  41da10:	pusha  
  41da11:	das    
  41da12:	dec    ecx
  41da13:	or     ebp,DWORD PTR [eax]
  41da15:	push   edi
  41da16:	in     al,0x8e
  41da18:	loop   0x41d9ae
  41da1a:	dec    edx
  41da1b:	mov    edi,0x68487151
  41da20:	sti    
  41da21:	or     ch,BYTE PTR [eax+0x591985d5]
  41da27:	xor    DWORD PTR [esi+0x335a598b],esp
  41da2d:	call   FWORD PTR [esi+0x24]
  41da30:	jmp    0xe18a:0x7d463776
  41da37:	icebp  
  41da38:	aas    
  41da39:	dec    ebp
  41da3a:	mov    ah,0xbc
  41da3c:	jno    0x41da2c
  41da3e:	inc    eax
  41da3f:	inc    eax
  41da40:	cmp    ebx,ecx
  41da42:	fwait
  41da43:	cld    
  41da44:	pop    edi
  41da45:	mov    cl,0x9c
  41da47:	and    edx,esp
  41da49:	cmp    DWORD PTR [edx],esi
  41da4b:	add    al,0x7e
  41da4d:	fbld   TBYTE PTR [esi+0x1f0e285c]
  41da53:	repnz int 0x54
  41da56:	dec    ebx
  41da57:	and    eax,ebp
  41da59:	cdq    
  41da5a:	sahf   
  41da5b:	mov    eax,0xa4461731
  41da60:	adc    BYTE PTR [edi+eiz*4],bl
  41da63:	jo     0x41da05
  41da65:	pop    es
  41da66:	jmp    0x2db5:0xb4329869
  41da6d:	jmp    0x3902:0xad6c2e67
  41da74:	mov    ebx,0x1d517495
  41da79:	cli    
  41da7a:	lods   eax,DWORD PTR ds:[esi]
  41da7b:	dec    edi
  41da7c:	sub    esi,DWORD PTR [ecx-0x44ec18fc]
  41da82:	inc    esi
  41da83:	or     eax,0x2aa3be05
  41da88:	mov    DWORD PTR [esi],edx
  41da8a:	add    al,0xb9
  41da8c:	hlt    
  41da8d:	mov    ch,0x5d
  41da8f:	jae    0x41da71
  41da91:	rol    DWORD PTR ds:0x2d7e3f4c,1
  41da97:	mov    esi,0xb5539b55
  41da9c:	and    BYTE PTR [ebp-0x3b],ah
  41da9f:	push   es
  41daa0:	or     al,0xe0
  41daa2:	(bad)  
  41daa4:	sub    al,0x16
  41daa6:	ret    0x719d
  41daa9:	add    ebx,DWORD PTR [ebp-0x29d8ed85]
  41daaf:	cmp    esp,DWORD PTR ds:0x51f043f7
  41dab5:	iret   
  41dab6:	cdq    
  41dab7:	xchg   DWORD PTR [eax+0xb],esp
  41daba:	retf   
  41dabb:	mov    al,0x6e
  41dabd:	sahf   
  41dabe:	inc    eax
  41dabf:	cmp    DWORD PTR [esi+0x7f6ac5a0],esi
  41dac5:	stc    
  41dac6:	out    0xe1,eax
  41dac8:	jl     0x41db49
  41daca:	sub    edi,DWORD PTR [eax]
  41dacc:	aas    
  41dacd:	xor    ecx,DWORD PTR [edi]
  41dacf:	adc    eax,0x50e6ab8c
  41dad4:	int3   
  41dad5:	das    
  41dad6:	mov    ebx,DWORD PTR [esi+esi*1]
  41dad9:	dec    ebx
  41dada:	add    ch,BYTE PTR [edx]
  41dadc:	imul   edx,DWORD PTR [ecx],0x999dd1c
  41dae2:	mov    ecx,0xc0b1192c
  41dae7:	pop    ebx
  41dae8:	xor    BYTE PTR [ebp+0x582df23d],bl
  41daee:	in     eax,dx
  41daef:	pop    esp
  41daf0:	xor    bh,BYTE PTR [ebx+0x78]
  41daf3:	ss jecxz 0x41db0b
  41daf6:	jb     0x41db2b
  41daf8:	iret   
  41daf9:	shl    BYTE PTR [esi],cl
  41dafb:	mov    ch,0x44
  41dafd:	push   0x25
  41daff:	dec    edx
  41db00:	inc    esi
  41db01:	imul   esp,DWORD PTR [ecx+0x68],0xffffffa8
  41db05:	inc    ebx
  41db06:	mov    WORD PTR [edx-0x3b1c4f0e],?
  41db0c:	add    eax,0x1d4222cd
  41db11:	mov    ds:0x9030cc43,al
  41db16:	jb     0x41db41
  41db18:	ins    DWORD PTR es:[edi],dx
  41db19:	ja     0x41db32
  41db1b:	pop    edx
  41db1c:	jecxz  0x41dacc
  41db1e:	cmp    eax,DWORD PTR [edi]
  41db20:	xor    eax,0x6e3f6aa
  41db25:	ja     0x41db2b
  41db27:	sub    eax,0x5789f8f1
  41db2c:	les    edi,FWORD PTR ds:0x7f97dbb7
  41db32:	in     eax,dx
  41db33:	sub    ebx,ebx
  41db35:	(bad)  
  41db36:	gs mov ?,esp
  41db39:	das    
  41db3a:	in     eax,dx
  41db3b:	std    
  41db3c:	add    esi,esi
  41db3e:	leave  
  41db3f:	add    eax,0x9338dd8a
  41db44:	sbb    ebx,DWORD PTR [edi]
  41db46:	lds    ebp,FWORD PTR [esi-0x1a]
  41db49:	in     eax,0xcc
  41db4b:	add    al,0xb7
  41db4d:	push   0xc71c20f3
  41db52:	in     eax,0xd1
  41db54:	push   ecx
  41db55:	jle    0x41db09
  41db57:	rcr    ecx,1
  41db59:	popa   
  41db5a:	mov    al,ds:0xf32480cc
  41db5f:	jmp    0x41daf4
  41db61:	scas   eax,DWORD PTR es:[edi]
  41db62:	daa    
  41db63:	mov    ebp,0x5d5260fc
  41db68:	mul    DWORD PTR [ecx+edx*8+0x4f]
  41db6c:	dec    esi
  41db6d:	jns    0x41db26
  41db6f:	xor    DWORD PTR [esi-0x37688a96],esi
  41db75:	jmp    0x41db92
  41db77:	mov    ds:0x3bbe9bc3,al
  41db7c:	xchg   edx,eax
  41db7d:	and    al,BYTE PTR [eax]
  41db7f:	lock push ebx
  41db81:	mov    dl,0x9d
  41db83:	jecxz  0x41db9e
  41db85:	push   ebx
  41db86:	mov    dl,BYTE PTR [esi-0x45]
  41db89:	pop    ebp
  41db8a:	ret    0xd4b
  41db8d:	cmp    DWORD PTR [eax+eiz*8-0x12],edx
  41db91:	pop    esp
  41db92:	loope  0x41dbc1
  41db94:	sub    DWORD PTR [ecx-0x18],0xa706f120
  41db9b:	mov    bl,0xbe
  41db9d:	inc    ebx
  41db9e:	fstp   QWORD PTR [edx+ebp*8+0x74fdb99f]
  41dba5:	cli    
  41dba6:	pop    esi
  41dba7:	sar    DWORD PTR [ebp+0x63],0x1c
  41dbab:	rol    BYTE PTR [eax],1
  41dbad:	outs   dx,DWORD PTR ds:[esi]
  41dbae:	stc    
  41dbaf:	jmp    0x41db5c
  41dbb1:	dec    eax
  41dbb2:	ror    DWORD PTR [esi-0x24],cl
  41dbb5:	mov    ds:0xc4f5e428,al
  41dbba:	push   ecx
  41dbbb:	je     0x41dbe3
  41dbbd:	out    0xde,eax
  41dbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc0:	dec    ecx
  41dbc1:	mov    ecx,0x58f079f4
  41dbc6:	outs   dx,BYTE PTR ds:[esi]
  41dbc7:	arpl   WORD PTR [edx],bx
  41dbc9:	sub    ch,BYTE PTR [esi]
  41dbcb:	sbb    al,al
  41dbcd:	rol    BYTE PTR [eax],0x4b
  41dbd0:	pusha  
  41dbd1:	mov    dl,0x27
  41dbd3:	mov    ecx,0xe1b7ea5d
  41dbd8:	retf   0x7cad
  41dbdb:	icebp  
  41dbdc:	push   edi
  41dbdd:	mov    esi,DWORD PTR [edi]
  41dbdf:	sub    BYTE PTR [ebp+0x7f],bl
  41dbe2:	retf   
  41dbe3:	sahf   
  41dbe4:	mov    bh,0x43
  41dbe6:	cmp    BYTE PTR [edi],bh
  41dbe8:	mov    DWORD PTR ds:0x1d431010,ecx
  41dbee:	add    cl,BYTE PTR [ebp+0x3e]
  41dbf1:	clc    
  41dbf2:	retf   0x7046
  41dbf5:	idiv   DWORD PTR [eax]
  41dbf7:	icebp  
  41dbf8:	sbb    bl,BYTE PTR es:[ebp-0x15259c8]
  41dbff:	es inc ebx
  41dc01:	dec    ebx
  41dc02:	out    dx,al
  41dc03:	inc    esp
  41dc04:	inc    edi
  41dc05:	shl    DWORD PTR [ebx-0x7e4d5aef],cl
  41dc0b:	ss inc ebp
  41dc0d:	jno    0x41dc25
  41dc0f:	ret    0x149
  41dc12:	clc    
  41dc13:	rcr    edi,0xce
  41dc16:	sar    BYTE PTR [ecx+0x16],cl
  41dc19:	fimul  WORD PTR [ebp+ecx*2+0x654180e2]
  41dc20:	cmc    
  41dc21:	mov    esp,eax
  41dc23:	cmp    DWORD PTR [eax],esp
  41dc25:	xor    BYTE PTR [edx],0xb3
  41dc28:	daa    
  41dc29:	fmulp  st(1),st
  41dc2b:	in     al,0xd3
  41dc2d:	add    esp,edx
  41dc2f:	sub    al,0xdc
  41dc31:	pop    edi
  41dc32:	jl     0x41dbbf
  41dc34:	xchg   ebx,eax
  41dc35:	mov    esp,0x15f9a656
  41dc3a:	mov    esp,0xf33dbeac
  41dc3f:	lods   al,BYTE PTR ds:[esi]
  41dc40:	cld    
  41dc41:	je     0x41dcb8
  41dc43:	ret    0x1a77
  41dc46:	sub    eax,0x91be1334
  41dc4b:	rcl    bl,0xb4
  41dc4e:	(bad)  [edi]
  41dc50:	fucomp st(1)
  41dc52:	js     0x41dc13
  41dc54:	jns    0x41dcc4
  41dc56:	mov    WORD PTR [esp+ecx*1-0x5e7b38c2],?
  41dc5d:	gs xor al,0x35
  41dc60:	add    BYTE PTR [eax],bl
  41dc62:	lea    ecx,[esi-0x700b3b5a]
  41dc68:	aam    0x58
  41dc6a:	outs   dx,BYTE PTR ds:[esi]
  41dc6b:	and    BYTE PTR [di-0x4f],0x31
  41dc70:	and    bl,bl
  41dc72:	pop    eax
  41dc73:	pop    ss
  41dc74:	ss call 0xbf45:0xe080ad03
  41dc7c:	adc    BYTE PTR [edi-0x5d7b7e70],0x75
  41dc83:	jae    0x41dcea
  41dc85:	add    al,BYTE PTR [edx+edi*8+0x7a]
  41dc89:	jo     0x41dc7f
  41dc8b:	mov    WORD PTR [edi+0x7c5f4bf0],?
  41dc91:	dec    edx
  41dc92:	fcom   DWORD PTR [ebx]
  41dc94:	xchg   edi,eax
  41dc95:	adc    al,0x50
  41dc97:	cmp    esp,edx
  41dc99:	out    0x99,eax
  41dc9b:	arpl   WORD PTR [edi],sp
  41dc9d:	sub    ebx,DWORD PTR [esi-0x3ca7734f]
  41dca3:	pop    esi
  41dca4:	clc    
  41dca5:	adc    DWORD PTR [ecx-0x19],esp
  41dca8:	out    0x24,eax
  41dcaa:	out    0xf8,al
  41dcac:	test   al,0x48
  41dcae:	xchg   esp,eax
  41dcaf:	push   ecx
  41dcb0:	ins    DWORD PTR es:[edi],dx
  41dcb1:	or     esp,DWORD PTR [ecx+0x1d5b6b1c]
  41dcb7:	cld    
  41dcb8:	jge    0x41dc6f
  41dcba:	pusha  
  41dcbb:	test   al,0xc8
  41dcbd:	rcr    BYTE PTR [esp+ebp*2],0x8
  41dcc1:	xchg   esp,eax
  41dcc2:	int3   
  41dcc3:	xchg   BYTE PTR [eax-0x76c10f7a],cl
  41dcc9:	push   ds
  41dcca:	pusha  
  41dccb:	test   al,0xc2
  41dccd:	adc    dh,BYTE PTR [edi]
  41dccf:	adc    ebp,esp
  41dcd1:	or     ebp,eax
  41dcd3:	mov    eax,ds:0x540fcc84
  41dcd8:	shl    DWORD PTR [esi+0x7ec7f827],0xbb
  41dcdf:	push   esi
  41dce0:	push   es
  41dce1:	mov    bh,0xf7
  41dce3:	pop    edi
  41dce4:	sub    dl,bl
  41dce6:	clc    
  41dce7:	sub    al,0xd
  41dce9:	mov    al,BYTE PTR [ebp+0x3770a1df]
  41dcef:	mov    bl,0x8
  41dcf1:	aas    
  41dcf2:	cdq    
  41dcf3:	sbb    esi,DWORD PTR [esi-0x11]
  41dcf6:	pop    ebp
  41dcf7:	leave  
  41dcf8:	es out 0x8d,eax
  41dcfb:	fisub  DWORD PTR [eax+esi*4]
  41dcfe:	aad    0x8c
  41dd00:	xor    ch,BYTE PTR [edx+ecx*8]
  41dd03:	fcmovnu st,st(1)
  41dd05:	adc    eax,0x773254a5
  41dd0a:	out    0xd6,al
  41dd0c:	retf   0xc70c
  41dd0f:	enter  0xa3bb,0xb9
  41dd13:	stos   BYTE PTR es:[edi],al
  41dd14:	iret   
  41dd15:	xor    edi,DWORD PTR [edi]
  41dd17:	cdq    
  41dd18:	xchg   BYTE PTR [ebx+0x15e9748a],dl
  41dd1e:	push   ebp
  41dd1f:	add    al,0x6f
  41dd21:	int    0x19
  41dd23:	xor    DWORD PTR [ecx-0x7b],esp
  41dd26:	mov    edx,0xdd18bb4a
  41dd2b:	test   BYTE PTR es:[eax-0x77],cl
  41dd2f:	adc    ch,BYTE PTR [eax+0x44a1416c]
  41dd35:	addr16 sub eax,0x9469c1aa
  41dd3b:	call   0x84ae3aed
  41dd40:	sub    eax,0x93c90f52
  41dd45:	add    cl,BYTE PTR [eax-0x59]
  41dd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd49:	mov    ebp,0x54f17322
  41dd4e:	or     al,0xe
  41dd50:	(bad)  
  41dd51:	vpacksswb xmm1,xmm3,XMMWORD PTR [ecx-0x68ced379]
  41dd59:	sti    
  41dd5a:	mov    DWORD PTR [eax-0x80],ecx
  41dd5d:	add    DWORD PTR ds:0x963444e2,ebx
  41dd63:	pushf  
  41dd64:	mov    DWORD PTR [ebx+0x66],esi
  41dd67:	cmp    al,0x99
  41dd69:	outs   dx,BYTE PTR ds:[esi]
  41dd6a:	mov    bh,0x37
  41dd6c:	or     eax,0x4c9e38cd
  41dd71:	ds or  al,0x56
  41dd74:	jns    0x41dd42
  41dd76:	lea    eax,[ebx]
  41dd78:	push   ecx
  41dd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd7a:	mov    al,ds:0xaec5adf5
  41dd7f:	shl    dl,1
  41dd81:	int    0x75
  41dd83:	inc    eax
  41dd84:	or     esi,ecx
  41dd86:	sub    DWORD PTR [eax+0x31bba85e],edi
  41dd8c:	mov    ecx,0xc2bc9b4b
  41dd91:	inc    ebp
  41dd92:	call   0xd335:0x6fce096d
  41dd99:	jl     0x41dd68
  41dd9b:	and    al,0xb
  41dd9d:	bound  edi,QWORD PTR [edx-0x3b30049a]
  41dda3:	repnz ins BYTE PTR es:[edi],dx
  41dda5:	ss (bad) 
  41dda7:	xchg   ebx,eax
  41dda8:	pop    esi
  41dda9:	cmp    eax,0x6b85ec5d
  41ddae:	sar    ah,cl
  41ddb0:	adc    ah,BYTE PTR fs:[eax+0x6e]
  41ddb4:	aas    
  41ddb5:	mov    dl,0x63
  41ddb7:	push   es
  41ddb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb9:	icebp  
  41ddba:	(bad)  fs:[ecx+0x780987ae]
  41ddc1:	dec    eax
  41ddc2:	cs std 
  41ddc4:	adc    edx,ecx
  41ddc6:	(bad)  
  41ddc7:	ins    BYTE PTR es:[edi],dx
  41ddc8:	pop    ebp
  41ddc9:	add    DWORD PTR ds:0x300210b4,esp
  41ddcf:	cli    
  41ddd0:	scas   eax,DWORD PTR es:[edi]
  41ddd1:	mov    al,0x8d
  41ddd3:	loope  0x41ddf9
  41ddd5:	nop
  41ddd6:	push   eax
  41ddd7:	mov    fs,WORD PTR ds:0x9cb47857
  41dddd:	push   ebx
  41ddde:	xchg   esi,eax
  41dddf:	data16 (bad) 
  41dde1:	enter  0xc13e,0x3c
  41dde5:	xchg   ebp,eax
  41dde6:	loope  0x41ddc0
  41dde8:	xor    eax,DWORD PTR [eax-0x20]
  41ddeb:	pop    esi
  41ddec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dded:	cld    
  41ddee:	mov    ds:0x65b218a,eax
  41ddf3:	sub    dh,cl
  41ddf5:	mov    edi,0x80a6d0e0
  41ddfa:	pop    ss
  41ddfb:	mov    bh,0x86
  41ddfd:	mov    al,ds:0xb298365c
  41de02:	test   eax,0x839dac1b
  41de07:	pop    ds
  41de08:	inc    eax
  41de09:	cmp    DWORD PTR [edi+0x603624ce],0xacbf8205
  41de13:	inc    ecx
  41de14:	or     ebx,edx
  41de16:	test   eax,0xc1ad62e2
  41de1b:	push   esi
  41de1c:	jb     0x41de5b
  41de1e:	fdivr  DWORD PTR [edx+0x0]
  41de21:	inc    edi
  41de22:	into   
  41de23:	dec    ebx
  41de24:	lods   al,BYTE PTR ds:[esi]
  41de25:	push   0xffffffcf
  41de27:	cmp    eax,0x92314219
  41de2c:	push   ebx
  41de2d:	dec    esi
  41de2e:	dec    esi
  41de2f:	call   0xe80f:0x6170211
  41de36:	das    
  41de37:	test   BYTE PTR ds:0x1da0bb,cl
  41de3d:	cdq    
  41de3e:	xchg   eax,ecx
  41de40:	adc    dl,BYTE PTR [edx]
  41de42:	mov    ecx,0x1bc033ad
  41de47:	gs xor eax,0x84d64aa3
  41de4d:	inc    ecx
  41de4e:	xchg   esp,eax
  41de4f:	sub    BYTE PTR [edi],bl
  41de51:	sbb    DWORD PTR ds:0x54a2071,ecx
  41de57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de58:	xlat   BYTE PTR ds:[ebx]
  41de59:	inc    esp
  41de5a:	lea    ecx,[edi+0x16]
  41de5d:	mov    al,BYTE PTR [eax]
  41de5f:	push   ebx
  41de60:	mov    esp,0xbd4c7dfd
  41de65:	jecxz  0x41de15
  41de67:	fwait
  41de68:	sub    BYTE PTR [esi-0xc],dh
  41de6b:	jns    0x41dec8
  41de6d:	mov    ecx,0xd0e7f3db
  41de72:	xor    BYTE PTR [ecx+0x5afee5d],0x1f
  41de79:	or     eax,0xf3f5dff8
  41de7e:	daa    
  41de7f:	jle    0x41de0f
  41de81:	iret   
  41de82:	mov    ebp,DWORD PTR [esi]
  41de84:	jg     0x41dec1
  41de86:	or     al,0xa3
  41de88:	rcl    DWORD PTR [eax],cl
  41de8a:	adc    ebx,eax
  41de8c:	xchg   edx,eax
  41de8d:	pop    esp
  41de8e:	sbb    DWORD PTR [ebp+0x57],esi
  41de91:	stc    
  41de92:	sub    eax,DWORD PTR ds:0xac1eb94f
  41de98:	ret    0x8d12
  41de9b:	(bad)  
  41de9c:	xchg   ebp,eax
  41de9d:	lds    edi,FWORD PTR [ebx+0xf7254ce]
  41dea3:	stos   DWORD PTR es:[edi],eax
  41dea4:	fimul  WORD PTR [esi+0x3174d99f]
  41deaa:	sbb    eax,DWORD PTR [edi+0x70ffbf7d]
  41deb0:	xor    eax,0x2f2c21cf
  41deb5:	jecxz  0x41dec5
  41deb7:	repnz rcl DWORD PTR [esi+esi*4-0x6efcf859],cl
  41debf:	inc    ebp
  41dec0:	(bad)  
  41dec1:	push   esi
  41dec2:	sbb    edx,DWORD PTR [esp+ecx*1+0x627fe3f2]
  41dec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deca:	mov    ds:0xc1239f8b,eax
  41decf:	adc    eax,0x9a7e208a
  41ded4:	jg     0x41de6d
  41ded6:	loop   0x41ded6
  41ded8:	ins    BYTE PTR es:[edi],dx
  41ded9:	mov    ah,0x8e
  41dedb:	push   cs
  41dedc:	imul   esi,eax,0x55073ec1
  41dee2:	call   0x6939932e
  41dee7:	popf   
  41dee8:	in     al,0x2b
  41deea:	adc    al,0x8
  41deec:	add    bh,BYTE PTR [edx-0x66]
  41deef:	out    0x58,al
  41def1:	sahf   
  41def2:	add    DWORD PTR ds:[ecx-0x3a9ce6bb],edx
  41def9:	jns    0x41df6b
  41defb:	(bad)  
  41defc:	dec    esi
  41defd:	pop    esp
  41defe:	pop    eax
  41deff:	mov    al,BYTE PTR [ebp+0x3308b7b]
  41df05:	xor    al,0xa7
  41df07:	mov    ch,0x20
  41df09:	push   ecx
  41df0a:	push   0xe571e83f
  41df0f:	pushf  
  41df10:	ins    DWORD PTR es:[edi],dx
  41df11:	push   esp
  41df12:	adc    BYTE PTR [ebp+0x70],bh
  41df15:	dec    ebx
  41df16:	adc    edx,DWORD PTR [ecx]
  41df18:	sahf   
  41df19:	and    eax,0xa098f4a9
  41df1e:	add    al,0x8c
  41df20:	aaa    
  41df21:	aam    0xab
  41df23:	ret    0x7b30
  41df26:	xor    esp,ecx
  41df28:	xchg   ecx,eax
  41df29:	add    BYTE PTR [edi-0x63d94211],ch
  41df2f:	shl    DWORD PTR [eax-0x317b2584],1
  41df35:	add    ecx,esp
  41df37:	add    ebp,DWORD PTR [edi-0x182b931a]
  41df3d:	sbb    dl,BYTE PTR [ebp-0x8f94cb7]
  41df43:	sahf   
  41df44:	jns    0x41df6c
  41df46:	pop    ebx
  41df47:	std    
  41df48:	lds    ebp,FWORD PTR [edx+0x35]
  41df4b:	mov    BYTE PTR [esi+edi*4],dh
  41df4e:	inc    edi
  41df4f:	pushf  
  41df50:	retf   0xc04d
  41df53:	cdq    
  41df54:	stos   BYTE PTR es:[edi],al
  41df55:	add    DWORD PTR [ebx-0x73],esp
  41df58:	cwde   
  41df59:	adc    DWORD PTR [edi-0x7c3367bd],ebp
  41df5f:	mov    bl,0xba
  41df61:	xchg   ebp,eax
  41df62:	or     BYTE PTR [eax+0x12],cl
  41df65:	lock loopne 0x41df68
  41df68:	sub    dh,cl
  41df6a:	out    0x3,eax
  41df6c:	mov    bl,0xbe
  41df6e:	sbb    BYTE PTR ds:0xfb7f33cd,ch
  41df74:	cmp    DWORD PTR [edi-0x3c],esp
  41df77:	clc    
  41df78:	lahf   
  41df79:	sbb    DWORD PTR [edi],eax
  41df7b:	add    BYTE PTR [edx+0x7c3f86f5],bl
  41df81:	and    al,BYTE PTR [ebx-0x5af91061]
  41df87:	addr16 xchg esp,eax
  41df89:	inc    esp
  41df8a:	lds    ebp,FWORD PTR [edi]
  41df8c:	jmp    0x3f649fc9
  41df91:	mov    dl,BYTE PTR [esi+0x26090f91]
  41df97:	xor    BYTE PTR [ecx+0x25a083a2],ch
  41df9d:	rol    DWORD PTR [esi-0x79],cl
  41dfa0:	add    dh,ah
  41dfa2:	cld    
  41dfa3:	push   edx
  41dfa4:	mov    ecx,0x399bd6b7
  41dfa9:	cdq    
  41dfaa:	sbb    ebp,DWORD PTR [edx]
  41dfac:	sar    DWORD PTR [edi],1
  41dfae:	imul   ebx,DWORD PTR [edx+0x65],0xffffffb0
  41dfb2:	pop    ds
  41dfb3:	and    ebx,DWORD PTR [ecx-0x3e]
  41dfb6:	mov    al,BYTE PTR [ecx]
  41dfb8:	(bad)  
  41dfb9:	gs push ebx
  41dfbb:	sbb    ecx,DWORD PTR [ebx+ebx*4-0x553e8a08]
  41dfc2:	(bad)  
  41dfc4:	scas   al,BYTE PTR es:[edi]
  41dfc5:	inc    esi
  41dfc6:	fs xchg esi,eax
  41dfc8:	mov    ah,0x19
  41dfca:	jge    0x41df84
  41dfcc:	nop
  41dfcd:	jmp    0x727d:0x78f5c591
  41dfd4:	add    BYTE PTR [ebx-0x31279b53],ah
  41dfda:	std    
  41dfdb:	int    0x4d
  41dfdd:	gs cwde 
  41dfdf:	dec    ebx
  41dfe0:	pop    ebp
  41dfe1:	(bad)  
  41dfe2:	in     al,dx
  41dfe3:	inc    eax
  41dfe4:	dec    edi
  41dfe5:	sbb    eax,0x61178043
  41dfea:	sbb    DWORD PTR [ecx],ecx
  41dfec:	mov    ds:0x9d5f6d26,al
  41dff1:	das    
  41dff2:	push   ebx
  41dff3:	ror    cl,cl
  41dff5:	in     eax,0x4d
  41dff7:	sbb    eax,0xe3b0c2f2
  41dffc:	inc    esp
  41dffd:	jge    0x41df7f
  41dfff:	adc    al,0xe0
  41e001:	xor    eax,esi
  41e003:	neg    DWORD PTR [ebx-0x35b7e680]
  41e009:	push   ebx
  41e00a:	or     ah,BYTE PTR [ecx]
  41e00c:	loop   0x41e087
  41e00e:	mov    WORD PTR ds:0x1b573ef2,?
  41e014:	lea    eax,[ecx+esi*1]
  41e017:	mov    dh,0xbc
  41e019:	mov    esp,gs
  41e01b:	pushf  
  41e01c:	jnp    0x41dfab
  41e01e:	xor    BYTE PTR [edi],dl
  41e020:	push   es
  41e021:	push   edi
  41e023:	(bad)  
  41e024:	nop
  41e025:	and    dl,BYTE PTR [edx]
  41e027:	popf   
  41e028:	xor    esp,DWORD PTR [ebx]
  41e02a:	rcl    ebx,0xb9
  41e02d:	xchg   ebp,eax
  41e02e:	jmp    0x7c62:0x96192b37
  41e035:	cdq    
  41e036:	mov    eax,0xe99f5a26
  41e03b:	and    BYTE PTR [ebp+0x2f3c1606],ch
  41e041:	xor    dh,BYTE PTR [edi+ebp*8-0xe11d8dd]
  41e048:	add    DWORD PTR [ebp-0x2c8af4b0],edx
  41e04e:	mov    ecx,0x25226f17
  41e053:	inc    esp
  41e054:	ret    0x1f0f
  41e057:	iret   
  41e058:	mov    al,0xd7
  41e05a:	jnp    0x41e0a3
  41e05c:	push   0x79
  41e05e:	shr    DWORD PTR [edi+ebx*8-0x29],1
  41e062:	fstp   QWORD PTR [eax-0x5f]
  41e065:	mov    ecx,0x96b9a526
  41e06a:	fs jnp 0x41e0ec
  41e06d:	scas   eax,DWORD PTR es:[edi]
  41e06e:	stos   DWORD PTR es:[edi],eax
  41e06f:	icebp  
  41e070:	cmp    al,0x52
  41e072:	outs   dx,DWORD PTR ds:[esi]
  41e073:	add    bh,BYTE PTR [ecx*4+0xb33deee]
  41e07a:	pop    ss
  41e07b:	cmp    BYTE PTR [ebp+0x22],dh
  41e07e:	cmc    
  41e07f:	xor    DWORD PTR [edx+0x1971bb2b],0xb04f16f5
  41e089:	rcr    DWORD PTR [edi+esi*2+0x70812b56],0x59
  41e091:	sar    DWORD PTR [esi-0x54],1
  41e094:	std    
  41e095:	ss xchg edi,eax
  41e097:	jge    0x41e096
  41e099:	xchg   ebp,eax
  41e09a:	adc    DWORD PTR ds:0x7ea7e0df,esp
  41e0a0:	dec    edx
  41e0a1:	inc    edx
  41e0a2:	push   ebp
  41e0a3:	add    BYTE PTR [ebx+0x1b0e7ed5],dh
  41e0a9:	push   es
  41e0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ab:	sbb    edx,DWORD PTR [ebx-0x5860c0d1]
  41e0b1:	or     al,0x6
  41e0b3:	scas   al,BYTE PTR es:[edi]
  41e0b4:	retf   0x279e
  41e0b7:	jl     0x41e120
  41e0b9:	add    BYTE PTR [edx+0x1e94a2e3],al
  41e0bf:	push   DWORD PTR [ecx]
  41e0c1:	mov    esi,DWORD PTR [edi+0x10]
  41e0c4:	cmp    DWORD PTR [edx],0x59
  41e0c7:	ret    0x8d16
  41e0ca:	xchg   DWORD PTR [ebx+0x678bfa61],ecx
  41e0d0:	push   0x49
  41e0d2:	mov    bl,0x52
  41e0d4:	xchg   BYTE PTR [ebp+0x390be5d4],bh
  41e0da:	shr    BYTE PTR [edx+0x54],cl
  41e0dd:	xchg   edi,eax
  41e0de:	dec    esi
  41e0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e0:	in     al,0x48
  41e0e2:	ret    0x5b71
  41e0e5:	dec    esp
  41e0e6:	ins    BYTE PTR es:[edi],dx
  41e0e7:	and    ebx,DWORD PTR [ebp-0x5e]
  41e0ea:	ficom  WORD PTR [eax]
  41e0ec:	loop   0x41e113
  41e0ee:	jge    0x41e0e0
  41e0f0:	and    DWORD PTR [edi],esp
  41e0f2:	and    al,0x35
  41e0f4:	mov    fs,ebp
  41e0f6:	pushf  
  41e0f7:	mov    ds:0x8d41185e,al
  41e0fc:	gs mov dl,0x71
  41e0ff:	js     0x41e14c
  41e101:	mov    es,WORD PTR [ebp-0x2a]
  41e104:	jmp    0x9438eced
  41e109:	cli    
  41e10a:	adc    DWORD PTR [eax-0x57283329],0x50d4852c
  41e114:	fwait
  41e115:	xor    al,bh
  41e117:	jbe    0x41e12e
  41e119:	bound  ebx,QWORD PTR [edx-0x27]
  41e11c:	and    al,0xb0
  41e11e:	icebp  
  41e11f:	xchg   edi,eax
  41e120:	sub    BYTE PTR [esp+ebp*1],ah
  41e123:	jmp    FWORD PTR ds:0x60
  41e128:	pop    ecx
  41e129:	push   0x426c5c90
  41e12e:	test   DWORD PTR [eax+0x192cd64c],0x90210bbc
  41e138:	popf   
  41e139:	xchg   ebp,esi
  41e13b:	xchg   BYTE PTR [ecx+0x46d97045],dl
  41e141:	add    DWORD PTR [eax],0x268de16f
  41e147:	addr16 dec eax
  41e149:	adc    BYTE PTR [eax],al
  41e14b:	xor    BYTE PTR [ebp-0x9],bh
  41e14e:	adc    edi,DWORD PTR [ebx-0x73170eae]
  41e154:	mov    DWORD PTR [ecx-0x6c],ebx
  41e157:	sbb    eax,0xf131e046
  41e15c:	xor    ah,dh
  41e15e:	neg    DWORD PTR [eax]
  41e160:	in     eax,dx
  41e161:	neg    BYTE PTR [edx+esi*8+0x34628029]
  41e168:	xchg   esp,eax
  41e169:	xor    eax,0xc42e8dcd
  41e16e:	dec    ecx
  41e16f:	cli    
  41e170:	pop    ebp
  41e171:	movaps xmm6,XMMWORD PTR [edx]
  41e174:	inc    esi
  41e175:	mov    al,ds:0x204a2620
  41e17a:	test   BYTE PTR [esi+0x2d],ch
  41e17d:	and    edx,DWORD PTR [esi+0x46]
  41e180:	jle    0x41e152
  41e182:	ja     0x41e130
  41e184:	(bad)  
  41e185:	or     al,0xe4
  41e187:	mov    ds:0x139b9716,eax
  41e18c:	fistp  DWORD PTR [edi]
  41e18e:	sbb    BYTE PTR [edx],ah
  41e190:	fwait
  41e191:	and    dh,dl
  41e193:	or     ch,dh
  41e195:	mov    dh,0x28
  41e197:	cmp    bl,BYTE PTR [edi-0x7b]
  41e19a:	xor    eax,DWORD PTR [eax+0x12]
  41e19d:	jge    0x41e141
  41e19f:	mov    al,0xe5
  41e1a1:	ins    DWORD PTR es:[edi],dx
  41e1a2:	out    0x5e,al
  41e1a4:	cmp    esi,DWORD PTR [esi+ebp*8]
  41e1a7:	pusha  
  41e1a8:	jmp    0x7e1487d5
  41e1ad:	out    0x9e,eax
  41e1af:	push   ss
  41e1b0:	push   es
  41e1b1:	inc    eax
  41e1b2:	in     al,0x19
  41e1b4:	fsincos 
  41e1b6:	in     eax,dx
  41e1b7:	xor    BYTE PTR [edx-0x2c],ch
  41e1ba:	push   es
  41e1bb:	cmp    edx,DWORD PTR [ebx+eiz*1-0x3bdfd77f]
  41e1c2:	cs inc edx
  41e1c4:	hlt    
  41e1c5:	push   es
  41e1c6:	ret    0xeca8
  41e1c9:	or     al,0xb6
  41e1cb:	retf   0xfa55
  41e1ce:	xor    DWORD PTR [eax+0x2928349e],ebp
  41e1d4:	sbb    DWORD PTR [edi],edx
  41e1d6:	jge    0x41e1c0
  41e1d8:	dec    eax
  41e1d9:	data16 (bad) 
  41e1db:	jns    0x41e231
  41e1dd:	or     ch,BYTE PTR [eax+eiz*4-0x27]
  41e1e1:	xor    ecx,DWORD PTR [ebx+0x64440099]
  41e1e7:	cmp    dl,BYTE PTR [edi]
  41e1e9:	aad    0xb0
  41e1eb:	jmp    0x15966db7
  41e1f0:	imul   edi,DWORD PTR [edi],0x7038fc11
  41e1f6:	inc    edi
  41e1f7:	adc    DWORD PTR [edi+eax*8+0x78],ecx
  41e1fb:	adc    al,0xaa
  41e1fd:	out    dx,eax
  41e1fe:	mov    dh,BYTE PTR ds:0x7ee4e2b6
  41e204:	sub    BYTE PTR fs:[esi+0x52],bh
  41e208:	inc    eax
  41e20a:	xor    dh,BYTE PTR [ebx-0x17]
  41e20d:	test   eax,0xb3b83da8
  41e212:	push   ecx
  41e213:	outs   dx,BYTE PTR ds:[esi]
  41e214:	jmp    0xde4c3deb
  41e219:	jmp    0x41e22e
  41e21b:	dec    edx
  41e21c:	fs popa 
  41e21e:	push   ebp
  41e21f:	mov    al,ds:0x1a34d2ee
  41e224:	inc    edi
  41e225:	arpl   bp,cx
  41e227:	sbb    BYTE PTR [edi],dl
  41e229:	das    
  41e22a:	popa   
  41e22b:	push   esp
  41e22c:	(bad)  
  41e22d:	adc    bl,bl
  41e22f:	xor    eax,0x11c50a47
  41e234:	mov    al,0x18
  41e236:	and    ecx,DWORD PTR [edi]
  41e238:	xor    al,0x2a
  41e23a:	push   es
  41e23b:	jmp    0x41e23b
  41e23d:	inc    edi
  41e23e:	jecxz  0x41e1cd
  41e240:	mov    dh,0xf6
  41e242:	add    ebx,DWORD PTR [ebp+0x1330f64a]
  41e248:	scas   eax,DWORD PTR es:[edi]
  41e249:	stos   DWORD PTR es:[edi],eax
  41e24a:	popa   
  41e24b:	sub    dh,BYTE PTR [eax+0xb73dd2b]
  41e251:	mov    eax,ds:0x2d971d87
  41e256:	rcl    BYTE PTR fs:[edi+0x74],1
  41e25a:	in     al,dx
  41e25b:	pop    esp
  41e25c:	setne  BYTE PTR [edi+0x4c]
  41e260:	or     dl,BYTE PTR [ebx+0x73]
  41e263:	cdq    
  41e264:	sbb    ebx,edi
  41e266:	adc    edi,edx
  41e268:	xor    cl,BYTE PTR [edi]
  41e26a:	icebp  
  41e26b:	je     0x41e266
  41e26d:	and    ebp,DWORD PTR [eax-0x715d9aac]
  41e273:	sahf   
  41e274:	sar    edi,cl
  41e276:	mov    esi,0xc60c9774
  41e27b:	clc    
  41e27c:	into   
  41e27d:	jnp    0x41e2b3
  41e27f:	cmc    
  41e280:	(bad)  
  41e281:	mov    dh,0x8c
  41e283:	shl    BYTE PTR ds:0x70a93e99,1
  41e289:	pop    esp
  41e28a:	adc    eax,0x9d8b58
  41e28f:	sbb    DWORD PTR [eax],0x36
  41e292:	push   0xffffffc1
  41e294:	stos   BYTE PTR es:[edi],al
  41e295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e296:	adc    DWORD PTR [ecx+0x7],edx
  41e299:	loope  0x41e246
  41e29b:	and    dh,ch
  41e29d:	xchg   ebx,eax
  41e29e:	cmp    al,0x53
  41e2a0:	adc    bl,BYTE PTR [edi+0x18]
  41e2a3:	xor    eax,0x1faabf7f
  41e2a8:	es jbe 0x41e241
  41e2ab:	out    dx,al
  41e2ac:	mov    BYTE PTR [edx+0x2a02c632],dl
  41e2b2:	les    ebp,FWORD PTR [edi]
  41e2b4:	rcr    DWORD PTR [edx+0x3d52bb3a],cl
  41e2ba:	sub    BYTE PTR [esi],ah
  41e2bc:	mov    ecx,0xc9d45164
  41e2c1:	fnstsw WORD PTR [edi-0x24]
  41e2c4:	sub    eax,0xf58155b4
  41e2c9:	jnp    0x41e2a8
  41e2cb:	mov    ah,0xb3
  41e2cd:	hlt    
  41e2ce:	es jo  0x41e2c6
  41e2d1:	push   esi
  41e2d2:	lds    ebp,FWORD PTR [eax]
  41e2d4:	push   edx
  41e2d5:	mov    ?,WORD PTR [eax]
  41e2d7:	cmp    al,0x9f
  41e2d9:	sub    DWORD PTR [ebx-0x6882183],esi
  41e2df:	add    eax,0x121b19eb
  41e2e4:	jns    0x41e313
  41e2e6:	adc    ch,BYTE PTR [ebx-0x57]
  41e2e9:	cs jmp 0x41e318
  41e2ec:	ss jg  0x41e33c
  41e2ef:	cmc    
  41e2f0:	in     eax,dx
  41e2f1:	jno    0x41e2e0
  41e2f3:	je     0x41e28d
  41e2f5:	(bad)  
  41e2f6:	mov    bh,0xbf
  41e2f8:	adc    eax,DWORD PTR [edi]
  41e2fa:	mov    esp,ebp
  41e2fc:	xchg   esi,eax
  41e2fd:	cmp    al,0xb9
  41e2ff:	loopne 0x41e346
  41e301:	mov    dl,0xff
  41e303:	test   bl,0xb7
  41e306:	icebp  
  41e307:	stos   DWORD PTR es:[edi],eax
  41e308:	mov    esi,0x1035813a
  41e30d:	cld    
  41e30e:	mov    dh,0xa3
  41e310:	scas   al,BYTE PTR es:[edi]
  41e311:	push   0xa671bf8c
  41e316:	sti    
  41e317:	(bad)  
  41e318:	sbb    DWORD PTR [esi],esi
  41e31a:	sub    al,0xee
  41e31c:	fwait
  41e31d:	inc    ecx
  41e31e:	dec    esp
  41e31f:	mov    ah,BYTE PTR [edi-0x351ef12]
  41e325:	bound  esp,QWORD PTR [ecx+0x1f]
  41e328:	cmp    eax,0xb9a04d33
  41e32d:	add    eax,0xd02688d2
  41e332:	mov    bh,0xe2
  41e334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e335:	mov    ds:0xb56edd4f,al
  41e33a:	outs   dx,BYTE PTR ds:[esi]
  41e33b:	fsubr  DWORD PTR [ebp-0x672317dc]
  41e341:	ds push ebp
  41e343:	clc    
  41e344:	push   ebp
  41e345:	jmp    0x2d20:0x47c55559
  41e34c:	(bad)  [esi+0x190779b1]
  41e352:	(bad)  
  41e353:	jecxz  0x41e301
  41e355:	mov    edx,0x90f4368f
  41e35a:	iret   
  41e35b:	mov    al,BYTE PTR [ebx+eiz*8+0x4d]
  41e35f:	and    BYTE PTR [edi+eax*2-0x67],bl
  41e363:	pop    es
  41e364:	mov    ah,0xed
  41e366:	dec    ebx
  41e367:	sub    eax,0x51cac709
  41e36c:	cld    
  41e36d:	mov    dl,0xa0
  41e36f:	outs   dx,BYTE PTR ds:[esi]
  41e370:	add    eax,0x2e50d74d
  41e375:	push   ss
  41e376:	retf   
  41e377:	mov    bh,0xd9
  41e379:	xchg   ebx,eax
  41e37a:	ret    0xaa97
  41e37d:	xor    al,al
  41e37f:	xor    cl,BYTE PTR [eax-0x502f567c]
  41e385:	and    bh,BYTE PTR [ecx+0x3e79c302]
  41e38b:	or     edi,DWORD PTR [eax-0x79]
  41e38e:	es pop edx
  41e390:	mov    esp,0xa7c34662
  41e395:	in     eax,dx
  41e396:	das    
  41e397:	push   ebp
  41e398:	scas   al,BYTE PTR es:[edi]
  41e399:	or     ch,BYTE PTR [edi+0x2]
  41e39c:	lea    eax,[edi-0xc]
  41e39f:	mov    ah,0xa6
  41e3a1:	push   0x16e9e26e
  41e3a6:	lea    esp,[edx+0xd027377]
  41e3ac:	arpl   cx,ax
  41e3ae:	and    DWORD PTR [ebx],ecx
  41e3b0:	jno    0x41e41d
  41e3b2:	push   edx
  41e3b3:	iret   
  41e3b4:	rcl    BYTE PTR [esi-0x1c],1
  41e3b7:	je     0x41e376
  41e3b9:	cwde   
  41e3ba:	lahf   
  41e3bb:	dec    edx
  41e3bc:	fstp   TBYTE PTR [eax+0x26aba4b7]
  41e3c2:	out    dx,eax
  41e3c3:	out    dx,eax
  41e3c4:	jmp    0x1d95:0x42b52ce2
  41e3cb:	add    BYTE PTR [ecx+0xdfe3e20],al
  41e3d1:	hlt    
  41e3d2:	ror    BYTE PTR [eax-0x1d],1
  41e3d5:	aas    
  41e3d6:	mov    WORD PTR [eax],ss
  41e3d8:	addr16 push ss
  41e3da:	(bad)  
  41e3db:	adc    BYTE PTR [eax],dh
  41e3dd:	dec    eax
  41e3de:	or     BYTE PTR [esi+esi*2-0x8],al
  41e3e2:	xchg   ecx,eax
  41e3e3:	mov    eax,ds:0x1571e168
  41e3e8:	and    al,0xd
  41e3ea:	ins    DWORD PTR es:[edi],dx
  41e3eb:	in     eax,dx
  41e3ec:	test   al,0x13
  41e3ee:	sbb    dl,dh
  41e3f0:	jle    0x41e3aa
  41e3f2:	xchg   ebp,esi
  41e3f4:	jbe    0x41e3c9
  41e3f6:	data16 jns 0x41e396
  41e3f9:	mov    ch,0xdc
  41e3fb:	orps   xmm2,XMMWORD PTR [ecx+0x36]
  41e3ff:	lods   eax,DWORD PTR ds:[esi]
  41e400:	(bad)  
  41e401:	jl     0x41e3f1
  41e403:	into   
  41e404:	add    esi,edx
  41e406:	pop    ss
  41e407:	mov    al,0xe7
  41e409:	xchg   ecx,eax
  41e40a:	push   eax
  41e40b:	scas   al,BYTE PTR es:[edi]
  41e40c:	pop    es
  41e40d:	fsub   DWORD PTR [esi-0x3fe32b0]
  41e413:	mov    ah,0x1c
  41e415:	xchg   ecx,eax
  41e416:	fwait
  41e417:	xchg   edi,eax
  41e418:	mov    bl,bl
  41e41a:	inc    ecx
  41e41b:	inc    esi
  41e41c:	call   0x575d:0xe180b40a
  41e423:	mov    edx,DWORD PTR [eax-0x15d6540e]
  41e429:	mov    edx,0xf90ce30a
  41e42e:	std    
  41e42f:	lds    ebp,FWORD PTR [ecx+0x4a926519]
  41e435:	xor    esi,edi
  41e437:	push   ebx
  41e438:	or     eax,0xa00dbebf
  41e43d:	mov    cl,0x43
  41e43f:	sbb    al,0x70
  41e441:	sub    ah,dl
  41e443:	ficomp WORD PTR [edx-0xc]
  41e446:	push   ds
  41e447:	cld    
  41e448:	mov    al,ds:0x58d294b8
  41e44d:	or     al,0xae
  41e44f:	adc    al,0xf8
  41e451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e452:	retf   
  41e453:	scas   eax,DWORD PTR es:[edi]
  41e454:	inc    ecx
  41e455:	popa   
  41e456:	add    DWORD PTR [ebp-0x3b8d469],edi
  41e45c:	mov    cl,0x5
  41e45e:	enter  0xe4df,0x44
  41e462:	jae    0x41e41d
  41e464:	out    dx,eax
  41e465:	dec    eax
  41e466:	pop    es
  41e467:	(bad)  
  41e468:	shl    dh,0xda
  41e46b:	sub    al,0x1e
  41e46d:	mov    al,ds:0x57db1f48
  41e472:	shufps xmm4,XMMWORD PTR [edx-0x41],0x81
  41e477:	ins    DWORD PTR es:[edi],dx
  41e478:	retf   0xd196
  41e47b:	clc    
  41e47c:	iret   
  41e47d:	push   cs
  41e47e:	or     DWORD PTR [ecx+0x1b],ebp
  41e481:	shr    DWORD PTR [eax+esi*8-0x75],cl
  41e485:	mov    edx,ds
  41e487:	repz jle 0x41e4da
  41e48a:	fldenv [ebp+edx*2+0x35]
  41e48e:	std    
  41e48f:	lahf   
  41e490:	imul   ecx,DWORD PTR [ebx],0x1f
  41e493:	rcl    BYTE PTR [ebp+0x11848020],1
  41e499:	mov    ch,0x42
  41e49b:	jmp    0xc855:0x37d06186
  41e4a2:	mov    al,0x2
  41e4a4:	rcr    DWORD PTR [eax+0x21],1
  41e4a7:	ds jge 0x41e50a
  41e4aa:	inc    ecx
  41e4ab:	and    dh,cl
  41e4ad:	mov    bl,0x96
  41e4af:	add    al,0x84
  41e4b1:	out    0x2b,al
  41e4b3:	mov    ds:0x7fcc871a,al
  41e4b8:	inc    edx
  41e4b9:	stos   BYTE PTR es:[edi],al
  41e4ba:	rcr    DWORD PTR [edi],0x91
  41e4bd:	ds dec edi
  41e4bf:	test   al,0xb7
  41e4c1:	sbb    eax,0xb120d22c
  41e4c6:	adc    esp,DWORD PTR [edx+0x1ee4d05f]
  41e4cc:	out    dx,al
  41e4cd:	shl    BYTE PTR [esi+0xf70813f],cl
  41e4d3:	nop
  41e4d4:	jecxz  0x41e531
  41e4d6:	push   ss
  41e4d7:	pop    esi
  41e4d8:	retf   0xe609
  41e4db:	mov    cl,0xb6
  41e4dd:	lea    ebx,[ecx-0x328b6725]
  41e4e3:	inc    esp
  41e4e4:	shr    ch,cl
  41e4e6:	popf   
  41e4e7:	push   ss
  41e4e8:	inc    edx
  41e4e9:	lock push ss
  41e4eb:	nop
  41e4ec:	iret   
  41e4ed:	mov    ds:0xab53e93c,al
  41e4f2:	lods   al,BYTE PTR ds:[esi]
  41e4f3:	add    ch,BYTE PTR [edx]
  41e4f5:	mov    ebp,0x884dc850
  41e4fa:	mov    cl,0xb3
  41e4fc:	aaa    
  41e4fd:	and    al,0x9a
  41e4ff:	jb     0x41e4da
  41e501:	sbb    eax,0x7c85f2fc
  41e506:	fild   QWORD PTR [ebx+ebp*2]
  41e509:	iret   
  41e50a:	xchg   BYTE PTR [ecx+0x6a500c2f],al
  41e510:	aaa    
  41e511:	sub    BYTE PTR [edx-0x1f7f896a],dh
  41e517:	ds out 0xee,eax
  41e51a:	dec    esi
  41e51b:	mov    eax,ds:0x1e40fff8
  41e520:	push   0x6d9c3d90
  41e525:	(bad)  
  41e527:	or     esp,0x82c6d351
  41e52d:	fsub   QWORD PTR [esi-0x4c]
  41e530:	les    edx,FWORD PTR [ebx-0x67]
  41e533:	lock test eax,0x47f5f537
  41e539:	and    al,0x4e
  41e53b:	and    al,0xe8
  41e53d:	call   0x981:0x1be83223
  41e544:	adc    BYTE PTR [eax+0x5b3f6635],0xeb
  41e54b:	adc    dl,dl
  41e54d:	xor    edx,DWORD PTR [edx]
  41e54f:	ja     0x41e573
  41e551:	dec    ebx
  41e552:	das    
  41e553:	push   DWORD PTR [eax+ebx*4-0x3c347e4b]
  41e55a:	adc    esp,ebp
  41e55c:	push   eax
  41e55d:	dec    ecx
  41e55e:	jg     0x41e58b
  41e560:	out    0x67,eax
  41e562:	sbb    DWORD PTR [edi],edx
  41e564:	dec    edx
  41e565:	add    esp,DWORD PTR [edi-0x68]
  41e568:	adc    DWORD PTR [esi-0x308daa46],ebp
  41e56e:	inc    ebx
  41e56f:	pop    ecx
  41e570:	mov    BYTE PTR [esp+eax*8+0x9994a3f],ah
  41e577:	mov    ebx,0x353d527d
  41e57c:	stos   DWORD PTR es:[edi],eax
  41e57d:	daa    
  41e57e:	imul   edi,DWORD PTR [eax],0xe851f737
  41e584:	inc    esp
  41e585:	xchg   ebp,eax
  41e586:	sahf   
  41e587:	mov    ds:0xa222ae9,al
  41e58c:	mov    bh,0x80
  41e58e:	jns    0x41e5e6
  41e590:	and    al,0x40
  41e592:	pop    ebx
  41e593:	popa   
  41e594:	lods   eax,DWORD PTR ds:[esi]
  41e595:	(bad)  
  41e596:	xor    eax,0x33296f77
  41e59b:	aam    0x61
  41e59d:	adc    esp,DWORD PTR ds:0x1bc0a083
  41e5a3:	ja     0x41e615
  41e5a5:	mov    esi,0xfbecd8da
  41e5aa:	sub    BYTE PTR [ebx],dl
  41e5ac:	mov    eax,ds:0xd5b82d5
  41e5b1:	fst    st(7)
  41e5b3:	jg     0x41e544
  41e5b5:	mov    ch,0xb3
  41e5b7:	call   0xa27bff4f
  41e5bc:	push   ecx
  41e5bd:	or     ebp,DWORD PTR [ebx-0x4a694fda]
  41e5c3:	leave  
  41e5c4:	loope  0x41e569
  41e5c6:	ss inc esp
  41e5c8:	jmp    0xe322a648
  41e5cd:	icebp  
  41e5ce:	dec    ebx
  41e5cf:	jo     0x41e5d5
  41e5d1:	prefetch (bad)
  41e5d2:	or     eax,0x365358de
  41e5d7:	shr    BYTE PTR [edi],0xad
  41e5da:	adc    al,0xb3
  41e5dc:	retf   
  41e5dd:	and    eax,esi
  41e5df:	mov    esp,0xff78067c
  41e5e4:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e5e6:	dec    esi
  41e5e7:	dec    esi
  41e5e8:	jmp    0x3bd4:0xbf1d852d
  41e5ef:	dec    edi
  41e5f0:	into   
  41e5f1:	adc    DWORD PTR [ebx-0x33],ebp
  41e5f4:	adc    ebx,DWORD PTR [ebx]
  41e5f6:	dec    esi
  41e5f7:	push   esi
  41e5f8:	xchg   ebp,eax
  41e5f9:	xchg   ebp,eax
  41e5fa:	loopne 0x41e616
  41e5fc:	(bad)  
  41e5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5fe:	rol    DWORD PTR [eax-0x62f98ee1],0x42
  41e605:	pop    eax
  41e606:	in     al,dx
  41e607:	xchg   ebp,eax
  41e608:	adc    ah,bl
  41e60a:	fucomp st(6)
  41e60c:	xchg   esi,eax
  41e60d:	mov    bl,0x6e
  41e60f:	mov    ds:0xfe9be5a3,eax
  41e614:	inc    esp
  41e615:	sub    BYTE PTR [esi+0x59],dh
  41e618:	imul   ebp,ebx,0xfae60fe9
  41e61e:	inc    eax
  41e61f:	jp     0x41e647
  41e621:	pop    eax
  41e622:	int3   
  41e623:	sub    DWORD PTR ss:[ebx+0x2c],ecx
  41e627:	mov    BYTE PTR [eax],dl
  41e629:	pushf  
  41e62a:	inc    edx
  41e62b:	test   BYTE PTR [ebx+edx*4-0x4c],cl
  41e62f:	sahf   
  41e630:	sub    eax,0xa4e095d6
  41e635:	dec    ebx
  41e636:	mov    bh,BYTE PTR [ebx-0x6fe55258]
  41e63c:	ret    0xf7aa
  41e63f:	mov    ecx,0x62d16a9d
  41e644:	mov    eax,0xe03e9964
  41e649:	into   
  41e64a:	and    eax,0x2643d894
  41e650:	(bad)  [esi-0x47]
  41e653:	xor    dh,BYTE PTR [ebp+0x48d79461]
  41e659:	cmc    
  41e65a:	pop    ds
  41e65b:	fimul  WORD PTR [ecx+0xeb95369]
  41e661:	arpl   WORD PTR [esp+ebp*1+0x4],di
  41e665:	jmp    FWORD PTR [ebp+0x39fc1a0f]
  41e66b:	ja     0x41e60b
  41e66d:	pop    ss
  41e66e:	ja     0x41e6b0
  41e670:	ds jno 0x41e6e6
  41e673:	pop    eax
  41e674:	cmp    al,0x5a
  41e676:	adc    DWORD PTR [edi-0x615859ed],0xf0ff19d9
  41e680:	mov    BYTE PTR [esi],0x5c
  41e683:	shl    ecx,1
  41e685:	xor    esi,DWORD PTR [ecx+edx*2+0x3e]
  41e689:	push   edi
  41e68a:	push   ebx
  41e68b:	mov    eax,0x4bb49a05
  41e690:	and    BYTE PTR fs:[ebx-0x3f07fe99],al
  41e697:	push   cs
  41e698:	xchg   BYTE PTR [edi],bh
  41e69a:	inc    esp
  41e69b:	or     DWORD PTR [edi-0x13],0x5934e6ac
  41e6a2:	push   esi
  41e6a3:	inc    eax
  41e6a4:	jecxz  0x41e67b
  41e6a6:	mov    edi,0x7113d14b
  41e6ab:	add    ecx,edx
  41e6ad:	stos   BYTE PTR es:[edi],al
  41e6ae:	fcomp  QWORD PTR [edi-0x38]
  41e6b1:	(bad)  
  41e6b2:	and    BYTE PTR [esi+ecx*2-0x54],ch
  41e6b6:	repz scas eax,DWORD PTR es:[edi]
  41e6b8:	mov    ebx,0x7e5faec2
  41e6bd:	pop    edi
  41e6be:	fisub  DWORD PTR [ebx-0x4aba836b]
  41e6c4:	sbb    eax,DWORD PTR [ecx+0x6d]
  41e6c7:	add    eax,DWORD PTR [esi-0x65]
  41e6ca:	mov    esi,0x977d37e8
  41e6cf:	adc    esi,0xb7c80cc7
  41e6d5:	fcom   QWORD PTR [ebx]
  41e6d7:	or     ah,BYTE PTR [eax-0x6e]
  41e6da:	adc    DWORD PTR [ebx-0x12],ebx
  41e6dd:	(bad)  
  41e6df:	imul   esp,DWORD PTR [eax-0x31],0xcf0879ca
  41e6e6:	sub    bh,0x4
  41e6e9:	fscale 
  41e6eb:	mov    ecx,DWORD PTR [edx+0x78]
  41e6ee:	mov    bl,0x7
  41e6f0:	outs   dx,BYTE PTR ds:[esi]
  41e6f1:	adc    eax,0xb23c3708
  41e6f6:	into   
  41e6f7:	xchg   esi,eax
  41e6f8:	in     eax,dx
  41e6f9:	xor    al,0x9e
  41e6fb:	push   0x4a2b7372
  41e700:	jmp    0x4740d4c8
  41e705:	cmp    eax,0xa887bfa7
  41e70a:	fidivr DWORD PTR [ebp-0x1b]
  41e70d:	push   ebx
  41e70e:	pop    edi
  41e70f:	(bad)  
  41e710:	sbb    al,0x8a
  41e712:	inc    eax
  41e713:	mov    ecx,0x5c47089d
  41e718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e719:	fs mov ebx,0x2897887d
  41e71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e721:	not    BYTE PTR [ebx]
  41e723:	and    DWORD PTR [ebx],ebp
  41e725:	or     al,0x74
  41e727:	sub    eax,0xb680deb2
  41e72c:	mov    al,0x5b
  41e72e:	inc    ebx
  41e72f:	mov    ds:0x3537c316,eax
  41e734:	xchg   DWORD PTR [ebx+0x58],ebx
  41e737:	int    0xfc
  41e739:	mov    ebp,0xca8e9101
  41e73e:	mov    cl,0x29
  41e740:	sub    bl,BYTE PTR [ebp+0x4]
  41e743:	(bad)  
  41e744:	fadd   st,st(2)
  41e746:	retf   0xa95a
  41e749:	or     al,0x36
  41e74b:	les    edx,FWORD PTR [ebx]
  41e74d:	mov    ch,0x90
  41e74f:	stos   DWORD PTR es:[edi],eax
  41e750:	sbb    al,0x38
  41e752:	push   ds
  41e753:	mov    ecx,0xd97aa93d
  41e758:	in     eax,0x2b
  41e75a:	stos   DWORD PTR es:[edi],eax
  41e75b:	jecxz  0x41e7d2
  41e75d:	gs fs mov cl,0xe
  41e761:	shr    BYTE PTR [ebx],0x0
  41e764:	xchg   esp,eax
  41e765:	adc    al,0x48
  41e767:	inc    edi
  41e768:	xchg   ebp,eax
  41e769:	ror    BYTE PTR [ebp-0x60eff5a7],1
  41e76f:	mov    ebx,edi
  41e771:	test   eax,0x6ad25c9a
  41e776:	pop    ss
  41e777:	inc    esp
  41e778:	xchg   ebx,eax
  41e779:	xchg   esi,eax
  41e77a:	pop    ebx
  41e77b:	jmp    0x41e750
  41e77d:	push   ss
  41e77e:	gs inc ebx
  41e780:	int3   
  41e781:	stc    
  41e782:	or     ebx,DWORD PTR [edx-0x5a]
  41e785:	test   al,0x3f
  41e787:	jo     0x41e762
  41e789:	lods   al,BYTE PTR ds:[esi]
  41e78a:	fcomp  DWORD PTR [edx+0x48]
  41e78d:	(bad)  
  41e78e:	in     eax,dx
  41e78f:	mov    ebx,0xae36f807
  41e794:	fs mov bl,0xa3
  41e797:	shl    BYTE PTR ds:0x31af3815,cl
  41e79d:	shl    DWORD PTR [ebp+0x545f8a7b],cl
  41e7a3:	inc    esi
  41e7a4:	jmp    FWORD PTR [ebp-0x56]
  41e7a7:	cld    
  41e7a8:	adc    al,0x15
  41e7aa:	nop
  41e7ab:	lahf   
  41e7ac:	jl     0x41e771
  41e7ae:	jmp    0xf424:0xb823a10a
  41e7b5:	jno    0x41e77f
  41e7b7:	adc    DWORD PTR [ebx],edx
  41e7b9:	ficomp WORD PTR [ecx+0x2aa1bb3c]
  41e7bf:	pop    ss
  41e7c0:	aaa    
  41e7c1:	ja     0x41e832
  41e7c3:	dec    eax
  41e7c4:	push   esi
  41e7c5:	fdivr  QWORD PTR [esi+0x16fb8997]
  41e7cb:	(bad)  
  41e7cc:	sbb    dl,BYTE PTR [edx+ebp*8+0x7555dd46]
  41e7d3:	lods   eax,DWORD PTR ds:[esi]
  41e7d4:	hlt    
  41e7d5:	add    bl,BYTE PTR [esi-0x65ce2664]
  41e7db:	imul   DWORD PTR [eax-0x1]
  41e7de:	xor    edx,DWORD PTR [edx]
  41e7e0:	lahf   
  41e7e1:	sbb    ebp,ecx
  41e7e3:	jnp    0x41e785
  41e7e5:	mov    edi,0xf76e5cdb
  41e7ea:	lea    esp,[esi]
  41e7ec:	mov    ebx,0x3c8c73aa
  41e7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f2:	jno    0x41e840
  41e7f4:	jo     0x41e81c
  41e7f6:	fisttp DWORD PTR [ecx]
  41e7f8:	fsub   st,st(7)
  41e7fa:	das    
  41e7fb:	inc    ecx
  41e7fc:	push   edi
  41e7fd:	and    dh,BYTE PTR [edx+0x6d]
  41e800:	cmp    cl,BYTE PTR [eax+0x50751367]
  41e806:	sbb    eax,0xfa445b47
  41e80b:	scas   al,BYTE PTR es:[edi]
  41e80c:	jns    0x41e829
  41e80e:	test   al,0x63
  41e810:	(bad)  
  41e813:	dec    esp
  41e814:	out    0xb8,eax
  41e816:	fimul  DWORD PTR [esi-0x1a]
  41e819:	(bad)  
  41e81b:	(bad)  
  41e81c:	sar    DWORD PTR [esp+edx*4-0x25],cl
  41e820:	sbb    dl,BYTE PTR [esi+0x13]
  41e823:	inc    edx
  41e824:	and    BYTE PTR [eax-0x72],ch
  41e827:	mov    edx,0xaedb1dfe
  41e82c:	mov    esi,0x1fccda69
  41e831:	out    0xa8,al
  41e833:	pusha  
  41e834:	xchg   esp,eax
  41e835:	add    DWORD PTR [esi-0x41],0x74
  41e839:	push   esp
  41e83a:	icebp  
  41e83b:	rol    edx,cl
  41e83d:	aad    0x5c
  41e83f:	inc    edi
  41e840:	push   edi
  41e841:	sti    
  41e842:	fnstenv [eax]
  41e844:	ja     0x41e7e3
  41e846:	dec    ecx
  41e847:	xor    cl,BYTE PTR [edx+ebp*4]
  41e84a:	push   ds
  41e84b:	jge    0x41e86e
  41e84d:	push   ebp
  41e84e:	cmp    eax,0xf5047783
  41e853:	retf   0x69c5
  41e856:	mov    BYTE PTR [edi+0x507a114a],0x5f
  41e85d:	xlat   BYTE PTR ds:[ebx]
  41e85e:	addr16 pop ebp
  41e860:	ret    
  41e861:	jle    0x41e893
  41e863:	dec    ebp
  41e864:	mov    edi,0x581f619d
  41e869:	(bad)  
  41e86a:	(bad)  [esi-0xa]
  41e86d:	in     al,0xca
  41e86f:	and    DWORD PTR [eax+esi*2+0x6136892a],esp
  41e876:	lea    esi,[eax]
  41e878:	(bad)  
  41e879:	shl    BYTE PTR [ecx+0x5],cl
  41e87c:	retf   0x8291
  41e87f:	cld    
  41e880:	inc    eax
  41e881:	xchg   ecx,eax
  41e882:	jae    0x41e81a
  41e884:	pop    edi
  41e885:	outs   dx,BYTE PTR ds:[esi]
  41e886:	or     dh,BYTE PTR ds:[edi+ecx*8-0x4b]
  41e88b:	dec    ebp
  41e88c:	imul   esi,DWORD PTR [eax-0x7],0xffffffcf
  41e890:	inc    eax
  41e891:	fcomp  QWORD PTR [ecx+ebx*4-0x6b]
  41e895:	lds    ebx,FWORD PTR [ecx+0x2e8645de]
  41e89b:	das    
  41e89c:	lods   eax,DWORD PTR ds:[esi]
  41e89d:	xchg   edi,eax
  41e89e:	and    ecx,ecx
  41e8a0:	push   ebp
  41e8a1:	sbb    DWORD PTR [edx+0x7c],edi
  41e8a4:	mov    WORD PTR [ecx+0x550d0c50],cs
  41e8aa:	jecxz  0x41e85c
  41e8ac:	and    ecx,ecx
  41e8ae:	shl    BYTE PTR [esi+eax*2-0x26267967],0x90
  41e8b6:	stos   BYTE PTR es:[edi],al
  41e8b7:	inc    edi
  41e8b8:	sub    bh,dl
  41e8ba:	pop    ds
  41e8bb:	xchg   DWORD PTR [ecx],ebp
  41e8bd:	push   ebp
  41e8be:	pop    edi
  41e8bf:	imul   ecx,DWORD PTR [eax+0x25a6c2bc],0x44
  41e8c6:	xchg   BYTE PTR [esi+0x41],bh
  41e8c9:	fnsave [ecx+edi*4+0x53]
  41e8cd:	je     0x41e887
  41e8cf:	mov    esp,0x9b2af646
  41e8d4:	adc    ebx,DWORD PTR [edx+0x61d9f5f0]
  41e8da:	fist   DWORD PTR [ebx+0x45]
  41e8dd:	jne    0x41e95b
  41e8df:	not    eax
  41e8e1:	cwde   
  41e8e2:	jp     0x41e88c
  41e8e4:	lods   al,BYTE PTR ds:[esi]
  41e8e5:	pop    ebp
  41e8e6:	loop   0x41e966
  41e8e8:	push   eax
  41e8e9:	sbb    eax,0xd2c2a020
  41e8ee:	jnp    0x41e948
  41e8f0:	das    
  41e8f1:	fdivr  QWORD PTR [eax+0x45b89c95]
  41e8f7:	dec    DWORD PTR [ecx+eiz*4-0x6dcc8e04]
  41e8fe:	add    eax,0x60a9d1fe
  41e903:	jb     0x41e8ae
  41e905:	adc    ecx,DWORD PTR ds:0x74294477
  41e90b:	pop    edx
  41e90c:	jge    0x41e960
  41e90e:	sbb    edi,DWORD PTR [edi+0x15197a8e]
  41e914:	fs sbb eax,0x1cff85c1
  41e91a:	(bad)  
  41e91b:	jle    0x41e948
  41e91d:	xchg   BYTE PTR [eax+0x130989bc],ch
  41e923:	mov    bh,0x64
  41e925:	mov    bh,bl
  41e927:	inc    esi
  41e928:	dec    eax
  41e929:	and    esi,DWORD PTR [ecx-0x78]
  41e92c:	mov    BYTE PTR [esp+esi*8],ah
  41e92f:	mov    ch,0xbe
  41e931:	stc    
  41e932:	xor    al,0x65
  41e934:	xor    esp,esi
  41e936:	enter  0x589b,0x41
  41e93a:	push   ds
  41e93b:	pop    ecx
  41e93c:	jmp    0xb88a:0x8b9ef510
  41e943:	lock add al,0xc7
  41e946:	cmp    BYTE PTR [ecx-0x25620812],dl
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fldcw WORD PTR es:[edi]
  41e99b:	call   0xc2d0db7e
  41e9a0:	jge    0x41ea1c
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e958
  41e9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a8:	xchg   ecx,eax
  41e9a9:	sub    eax,0xb650d9b9
  41e9ae:	popa   
  41e9af:	xchg   edx,eax
  41e9b0:	gs das 
  41e9b2:	jmp    0xde4a18b8
  41e9b7:	xchg   BYTE PTR [edx],ch
  41e9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ba:	push   esi
  41e9bb:	cmp    edi,DWORD PTR [edx+0x7c5e1835]
  41e9c1:	or     BYTE PTR [ebx-0x2c],cl
  41e9c4:	shl    BYTE PTR [edx+eax*1],0x4f
  41e9c8:	and    eax,0x5d3f3968
  41e9cd:	ss jb  0x41ea49
  41e9d0:	and    ebx,DWORD PTR [ebx]
  41e9d2:	sbb    al,0x56
  41e9d4:	xor    eax,0x575418e2
  41e9d9:	pop    edi
  41e9da:	add    edx,edi
  41e9dc:	xor    eax,0xf20361fd
  41e9e2:	inc    ebx
  41e9e3:	fs push cs
  41e9e5:	stc    
  41e9e6:	daa    
  41e9e7:	jmp    0xeca5:0xeb0b6a3b
  41e9ee:	mov    edx,0x3893f9a4
  41e9f3:	mov    WORD PTR [edi],ss
  41e9f5:	(bad)  
  41e9f6:	shl    DWORD PTR [edi],1
  41e9f8:	mov    ebp,0xa5ffd27b
  41e9fd:	inc    edx
  41e9fe:	js     0x41e990
  41ea00:	mov    ah,0xbb
  41ea02:	mov    ecx,0x9a62a235
  41ea07:	not    eax
  41ea09:	pavgb  mm7,QWORD PTR [ebp-0x3c]
  41ea0d:	jne    0x41e9c4
  41ea0f:	inc    ecx
  41ea10:	mov    bl,0xb5
  41ea12:	pop    edi
  41ea13:	dec    edx
  41ea14:	sbb    ch,BYTE PTR [ebp+0x23aa8f95]
  41ea1a:	lods   eax,DWORD PTR ds:[esi]
  41ea1b:	stc    
  41ea1c:	mov    dl,0xba
  41ea1e:	jg     0x41ea62
  41ea20:	loope  0x41e9d5
  41ea22:	bound  ebp,QWORD PTR [esi]
  41ea24:	xchg   edi,eax
  41ea25:	sub    ah,BYTE PTR [esi+0x78]
  41ea28:	scas   al,BYTE PTR es:[edi]
  41ea29:	pop    edi
  41ea2a:	or     ch,al
  41ea2c:	aas    
  41ea2d:	jbe    0x41ea70
  41ea2f:	mov    esi,0xb1fc7090
  41ea34:	daa    
  41ea35:	mov    ebx,0x39a5ba38
  41ea3a:	fs cmp esp,edx
  41ea3d:	stos   DWORD PTR es:[edi],eax
  41ea3e:	add    ch,0x2f
  41ea41:	pop    ebx
  41ea42:	xchg   ecx,eax
  41ea43:	mov    al,0x91
  41ea45:	cmp    al,0xc5
  41ea47:	push   ebp
  41ea48:	sbb    ecx,0x45
  41ea4b:	idiv   BYTE PTR [edi+eiz*1]
  41ea4e:	or     DWORD PTR [ecx+0x3c],eax
  41ea51:	test   al,0x9a
  41ea53:	pop    ecx
  41ea54:	adc    al,0xc8
  41ea56:	sub    cl,bl
  41ea58:	pop    esi
  41ea59:	push   0x65
  41ea5b:	mov    dh,0x96
  41ea5d:	pop    esp
  41ea5e:	add    eax,0xdd833098
  41ea63:	dec    ebx
  41ea64:	lock inc eax
  41ea66:	cdq    
  41ea67:	mov    ch,bh
  41ea69:	in     al,0x9b
  41ea6b:	arpl   WORD PTR [ecx+0x69854a5e],cx
  41ea71:	addr16 jle 0x41ead9
  41ea74:	mov    edi,DWORD PTR [ebp-0x60]
  41ea77:	sbb    DWORD PTR [esi-0x2],edx
  41ea7a:	jno    0x41eaec
  41ea7c:	cli    
  41ea7d:	loop   0x41ea07
  41ea7f:	xor    BYTE PTR [ecx+0x689902c2],bl
  41ea85:	adc    eax,0x5ed116bb
  41ea8a:	dec    edi
  41ea8b:	sbb    esp,DWORD PTR [eax-0x7f3c2c7b]
  41ea91:	adc    eax,0x7254fcb9
  41ea96:	out    dx,al
  41ea97:	xor    BYTE PTR ds:0x982f10b4,dl
  41ea9d:	mov    esp,DWORD PTR [ebp-0x38]
  41eaa0:	stc    
  41eaa1:	push   ss
  41eaa2:	jnp    0x41ea91
  41eaa4:	sbb    BYTE PTR [esi],bl
  41eaa6:	cmp    BYTE PTR [edi+0x27],dl
  41eaa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaaa:	iret   
  41eaab:	cli    
  41eaac:	arpl   WORD PTR [ebx+0x3c],bx
  41eaaf:	ss and ebx,ebp
  41eab2:	pop    esp
  41eab3:	(bad)
  41eab6:	ins    BYTE PTR es:[edi],dx
  41eab7:	ret    0x8c52
  41eaba:	call   0xb96dd0d6
  41eabf:	dec    edx
  41eac0:	das    
  41eac1:	out    0x6a,al
  41eac3:	aaa    
  41eac4:	mov    bl,0x11
  41eac6:	xchg   ebx,eax
  41eac7:	call   0x23f0:0x80ba1d69
  41eace:	addr16 mov bl,0x4d
  41ead1:	mov    esi,0xd92c8b2c
  41ead6:	iret   
  41ead7:	fwait
  41ead8:	out    dx,al
  41ead9:	ficomp WORD PTR [ecx]
  41eadb:	add    eax,0x8fc9677e
  41eae0:	aam    0x1
  41eae2:	cld    
  41eae3:	mov    dl,0xdd
  41eae5:	pop    ecx
  41eae6:	jge    0x41eac8
  41eae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae9:	inc    esi
  41eaea:	jb     0x41eb05
  41eaec:	jecxz  0x41eb49
  41eaee:	cmp    al,ch
  41eaf0:	sbb    DWORD PTR [eax-0x19ccfc74],ecx
  41eaf6:	jbe    0x41eb28
  41eaf8:	push   eax
  41eaf9:	(bad)  
  41eafa:	stc    
  41eafb:	lea    edi,[esi-0x40]
  41eafe:	and    eax,0xab42e62b
  41eb03:	push   0x58
  41eb05:	fs pop es
  41eb07:	or     DWORD PTR [edx+0x6c6221a],ebp
  41eb0d:	ja     0x41eaef
  41eb0f:	add    DWORD PTR [ecx],ebp
  41eb11:	sbb    eax,0x787aa08c
  41eb16:	sub    dh,0x21
  41eb19:	icebp  
  41eb1a:	mov    ebp,0x16dec7e1
  41eb1f:	out    0x23,eax
  41eb21:	add    al,0x69
  41eb23:	pop    eax
  41eb24:	push   ds
  41eb25:	stos   DWORD PTR es:[edi],eax
  41eb26:	arpl   WORD PTR [edi-0x31],si
  41eb29:	pop    ebx
  41eb2a:	in     eax,0xae
  41eb2c:	fcomi  st,st(3)
  41eb2e:	sbb    DWORD PTR [edi-0x4ba48d0e],eax
  41eb34:	sub    bl,al
  41eb36:	xchg   ebx,eax
  41eb37:	pusha  
  41eb38:	and    edx,DWORD PTR [eax-0x2171671e]
  41eb3e:	outs   dx,BYTE PTR ds:[esi]
  41eb3f:	sbb    ch,BYTE PTR [edi+0x294a400d]
  41eb45:	hlt    
  41eb46:	mov    ?,WORD PTR [edi+0x68ddae38]
  41eb4c:	sub    al,0xed
  41eb4e:	mov    ah,bh
  41eb50:	ret    
  41eb51:	and    edi,esp
  41eb53:	pop    edi
  41eb54:	dec    esi
  41eb55:	mov    ah,0x28
  41eb57:	dec    eax
  41eb58:	(bad)  
  41eb59:	sub    al,0xea
  41eb5b:	sahf   
  41eb5c:	dec    ebp
  41eb5d:	adc    bh,BYTE PTR [eax]
  41eb5f:	adc    al,0x79
  41eb61:	repz cmp DWORD PTR [edi+ebp*8],0xffffffb7
  41eb66:	mov    ebp,es
  41eb68:	ret    
  41eb69:	xchg   DWORD PTR [ecx],esi
  41eb6b:	and    ebp,DWORD PTR [esi-0x59c445e3]
  41eb71:	cwde   
  41eb72:	jae    0x41ebec
  41eb74:	aam    0xf8
  41eb76:	jge    0x41eb52
  41eb78:	cmc    
  41eb79:	xor    ch,bl
  41eb7b:	inc    ebp
  41eb7c:	icebp  
  41eb7d:	push   ss
  41eb7e:	sar    BYTE PTR [ebp+0x7589a6f4],0x97
  41eb85:	inc    ebx
  41eb86:	(bad)  
  41eb87:	jg     0x41eb5c
  41eb89:	fdiv   st,st(3)
  41eb8b:	popa   
  41eb8c:	cld    
  41eb8d:	icebp  
  41eb8e:	fist   DWORD PTR [ecx]
  41eb90:	inc    ecx
  41eb91:	or     eax,0x721f0095
  41eb96:	mov    edx,0x2b9cedec
  41eb9b:	dec    eax
  41eb9c:	mov    ch,0x5d
  41eb9e:	mov    ds:0x40e3aee4,al
  41eba3:	cmp    cl,BYTE PTR [eax+0x54]
  41eba6:	cs aas 
  41eba8:	sbb    dl,BYTE PTR [esi]
  41ebaa:	mov    al,ds:0xab973e0b
  41ebaf:	mov    eax,0x86a84e7a
  41ebb4:	jge    0x41ec14
  41ebb6:	xor    DWORD PTR [ecx],ecx
  41ebb8:	xchg   ebx,eax
  41ebb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebba:	mov    ds,WORD PTR [ecx+0x3e5cafed]
  41ebc0:	jge    0x41eb5a
  41ebc2:	sub    DWORD PTR [ebx],edx
  41ebc4:	mov    esi,0xe73965c6
  41ebc9:	cdq    
  41ebca:	push   ss
  41ebcb:	fwait
  41ebcc:	shl    edi,cl
  41ebce:	test   eax,0x78bf69ae
  41ebd3:	(bad)  
  41ebd5:	adc    eax,0xced2be7e
  41ebda:	pop    ss
  41ebdb:	mov    ss,WORD PTR [ecx]
  41ebdd:	xor    ecx,DWORD PTR [ebx+0x4c]
  41ebe0:	adc    al,0x1b
  41ebe2:	push   ss
  41ebe3:	or     eax,0x21696f2b
  41ebe8:	xor    BYTE PTR ds:0x26d7af32,dh
  41ebee:	push   ebp
  41ebef:	stos   BYTE PTR es:[edi],al
  41ebf0:	int    0xd1
  41ebf2:	or     al,0xc1
  41ebf4:	mov    ebp,0xfa26bee9
  41ebf9:	mul    BYTE PTR ds:0x83cc5e1a
  41ebff:	jecxz  0x41ebff
  41ec01:	pop    ss
  41ec02:	add    ebx,DWORD PTR [edx-0x20]
  41ec05:	lods   al,BYTE PTR ds:[esi]
  41ec06:	into   
  41ec07:	lahf   
  41ec08:	or     bl,BYTE PTR [eax-0x3c]
  41ec0b:	add    BYTE PTR [esi],al
  41ec0d:	aas    
  41ec0e:	xchg   esi,eax
  41ec0f:	pop    ebp
  41ec10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec11:	add    cl,BYTE PTR [ebx]
  41ec13:	pop    ecx
  41ec14:	add    DWORD PTR [edx],ebp
  41ec16:	loopne 0x41eb9c
  41ec18:	cmc    
  41ec19:	jb     0x41ec1a
  41ec1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec1c:	jbe    0x41ebe2
  41ec1e:	xor    DWORD PTR [ecx],edx
  41ec20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec22:	dec    ecx
  41ec23:	ins    DWORD PTR es:[edi],dx
  41ec24:	repz (bad) 
  41ec26:	mov    ebx,0x620a93da
  41ec2b:	int    0x20
  41ec2d:	sbb    eax,0xb3129a56
  41ec32:	scas   eax,DWORD PTR es:[edi]
  41ec33:	stos   BYTE PTR es:[edi],al
  41ec34:	xor    DWORD PTR [edi],edx
  41ec36:	push   ecx
  41ec37:	adc    edi,ebp
  41ec39:	mov    gs,ecx
  41ec3b:	dec    ebx
  41ec3c:	xchg   esp,eax
  41ec3d:	sub    ebx,DWORD PTR [esp+ecx*1]
  41ec40:	enter  0xf015,0xf2
  41ec44:	or     cl,BYTE PTR [esi]
  41ec46:	mov    edx,0xfbee5b0e
  41ec4b:	inc    esp
  41ec4c:	out    0xae,eax
  41ec4e:	sbb    al,0xb9
  41ec50:	add    eax,0x3f375884
  41ec55:	mov    dl,0xe2
  41ec57:	add    eax,0xe0251efb
  41ec5c:	int3   
  41ec5d:	fimul  WORD PTR [ebp-0x7f7d3b00]
  41ec63:	les    ebp,FWORD PTR [edx+edi*8]
  41ec66:	xlat   BYTE PTR ds:[ebx]
  41ec67:	xor    al,0x70
  41ec69:	jmp    0xabdd:0x3d6b3ed3
  41ec70:	inc    ebp
  41ec71:	jb     0x41ec19
  41ec73:	adc    BYTE PTR [ebp+0x6b],dh
  41ec76:	jge    0x41ec31
  41ec78:	repz clc 
  41ec7a:	mov    esp,0xb934e5f2
  41ec7f:	push   ss
  41ec80:	mov    edx,0xf09d4c38
  41ec85:	shld   DWORD PTR [edx+0x29f2206],ebx,0x8f
  41ec8d:	js     0x41ec6a
  41ec8f:	sub    esp,edi
  41ec91:	push   esi
  41ec92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec93:	retf   
  41ec94:	in     eax,0xe4
  41ec96:	cmp    al,0xb2
  41ec98:	loop   0x41ecaf
  41ec9a:	inc    esp
  41ec9b:	sub    dl,dh
  41ec9d:	push   ss
  41ec9e:	cmc    
  41ec9f:	mov    al,ds:0x9e1f2c1e
  41eca4:	mov    ds:0xb7391440,al
  41eca9:	pop    edx
  41ecaa:	outs   dx,BYTE PTR ds:[esi]
  41ecab:	cmp    dl,BYTE PTR [eax]
  41ecad:	das    
  41ecae:	test   ecx,ebx
  41ecb0:	icebp  
  41ecb1:	cs sti 
  41ecb3:	dec    edi
  41ecb4:	les    edx,FWORD PTR [eax-0x1b33d17d]
  41ecba:	sar    BYTE PTR [edi+0x28a9ff85],1
  41ecc0:	sbb    eax,0xa28fe7db
  41ecc5:	clc    
  41ecc6:	mov    bl,0x60
  41ecc8:	or     al,0x6a
  41ecca:	pop    ebp
  41eccb:	inc    ebx
  41eccc:	clc    
  41eccd:	and    bl,ch
  41eccf:	retf   0x137a
  41ecd2:	iret   
  41ecd3:	jnp    0x41ed29
  41ecd5:	sub    al,0x42
  41ecd7:	push   esp
  41ecd8:	fst    DWORD PTR [edi+0x3d]
  41ecdb:	push   eax
  41ecdc:	icebp  
  41ecdd:	xor    cl,BYTE PTR [ebx-0x62]
  41ece0:	fild   WORD PTR [edx-0x3add35f6]
  41ece6:	dec    edi
  41ece7:	fnstcw WORD PTR [edx+0x434ad228]
  41eced:	wbinvd 
  41ecef:	lahf   
  41ecf0:	cdq    
  41ecf1:	scas   eax,DWORD PTR es:[edi]
  41ecf2:	sub    DWORD PTR [edx+0x2820c5dd],ebp
  41ecf8:	jecxz  0x41eca2
  41ecfa:	mov    bh,0x5d
  41ecfc:	push   es
  41ecfd:	enter  0x7f23,0x3a
  41ed01:	cmp    BYTE PTR fs:[ecx+0x7b],dh
  41ed05:	jl     0x41ec8f
  41ed07:	fnstsw WORD PTR [edi]
  41ed09:	mov    BYTE PTR [ebx-0x27],dl
  41ed0c:	adc    al,0xdd
  41ed0e:	adc    al,0x91
  41ed10:	into   
  41ed11:	mov    al,bh
  41ed13:	add    DWORD PTR [edx],ecx
  41ed15:	lock gs je 0x41ecae
  41ed19:	ins    BYTE PTR es:[edi],dx
  41ed1a:	sub    BYTE PTR [ecx+0x198538f2],bh
  41ed20:	or     ch,BYTE PTR [ebp-0x60]
  41ed23:	jl     0x41ecbb
  41ed25:	xchg   edx,eax
  41ed26:	loope  0x41ed1d
  41ed28:	mov    bl,0x16
  41ed2a:	loope  0x41ed4e
  41ed2c:	pop    esi
  41ed2d:	add    eax,0xe441163
  41ed32:	push   0x913127d6
  41ed37:	out    dx,eax
  41ed38:	push   eax
  41ed39:	fisub  DWORD PTR [edx]
  41ed3b:	imul   ebp,DWORD PTR [esi-0x7eb57e5a],0xf498ef2
  41ed45:	scas   al,BYTE PTR es:[di]
  41ed47:	repnz int3 
  41ed49:	lods   al,BYTE PTR ds:[esi]
  41ed4a:	jbe    0x41edb5
  41ed4c:	pop    esp
  41ed4d:	lods   al,BYTE PTR ds:[esi]
  41ed4e:	adc    al,0xf1
  41ed50:	xchg   edx,eax
  41ed51:	(bad)  
  41ed52:	pop    ebx
  41ed53:	imul   ecx,DWORD PTR ds:0x16ee2120,0x14
  41ed5a:	ins    DWORD PTR es:[edi],dx
  41ed5b:	push   ecx
  41ed5c:	push   0x5d
  41ed5e:	es dec edi
  41ed60:	add    eax,0x3cf8bbda
  41ed65:	inc    eax
  41ed66:	jl     0x41ece9
  41ed68:	push   eax
  41ed69:	mov    ebp,0x9a858494
  41ed6e:	(bad)  
  41ed6f:	and    eax,0xc17aaa32
  41ed74:	call   ecx
  41ed76:	js     0x41edf6
  41ed78:	mov    dh,0x6a
  41ed7a:	imul   esi,DWORD PTR [ebp-0x9],0x4f
  41ed7e:	and    eax,0x817037ff
  41ed83:	fbstp  TBYTE PTR [edi-0x665766bf]
  41ed89:	mov    ch,0x65
  41ed8b:	jb     0x41ed18
  41ed8d:	mov    BYTE PTR [ebp-0xcaeed10],ah
  41ed93:	sbb    al,0x55
  41ed95:	gs xchg esp,eax
  41ed97:	arpl   bp,dx
  41ed99:	and    DWORD PTR [eax+0x66ca215b],0xfffffff7
  41eda0:	or     esp,DWORD PTR [edx]
  41eda2:	push   esp
  41eda3:	aad    0xc
  41eda5:	ja     0x41ed34
  41eda7:	or     edi,edx
  41eda9:	push   esp
  41edaa:	mov    al,ch
  41edac:	add    cl,BYTE PTR [ecx]
  41edae:	shr    BYTE PTR [ecx],1
  41edb0:	pushf  
  41edb1:	stos   DWORD PTR es:[edi],eax
  41edb2:	lods   al,BYTE PTR ds:[esi]
  41edb3:	sub    eax,0xb5d455a5
  41edb8:	xchg   DWORD PTR [esi],eax
  41edba:	push   edi
  41edbb:	movaps XMMWORD PTR [edx],xmm4
  41edbe:	add    al,0x91
  41edc0:	aad    0x5c
  41edc2:	icebp  
  41edc3:	and    esi,esi
  41edc5:	push   ds
  41edc6:	(bad)  
  41edc8:	adc    al,0xa0
  41edca:	mov    fs,WORD PTR ds:0xecf3fa04
  41edd0:	push   0xfffffff3
  41edd2:	xchg   BYTE PTR [edi-0x17],al
  41edd5:	pusha  
  41edd6:	push   ebp
  41edd7:	mov    ds:0xbc8f4ccf,al
  41eddc:	dec    esp
  41eddd:	jnp    0x41ee34
  41eddf:	int    0xa9
  41ede1:	test   DWORD PTR [edi-0x66],esi
  41ede4:	mov    ah,0xe1
  41ede6:	sti    
  41ede7:	sar    BYTE PTR [ebp+0x7d7fde07],cl
  41eded:	lock jnp 0x41ee3c
  41edf0:	aad    0xe5
  41edf2:	push   ebx
  41edf3:	dec    edx
  41edf4:	jg     0x41edda
  41edf6:	or     eax,DWORD PTR [eax]
  41edf8:	sbb    DWORD PTR [esi+0x5],esi
  41edfb:	in     eax,0x10
  41edfd:	add    eax,0x21d0b47f
  41ee02:	(bad)
  41ee05:	mov    ah,0x38
  41ee07:	sti    
  41ee08:	pop    ds
  41ee09:	sub    eax,0x54640fdd
  41ee0e:	mov    edx,0x26a0a25c
  41ee13:	mov    ds:0x49857a1c,al
  41ee18:	repz inc ecx
  41ee1a:	sub    eax,0xdcbb23cd
  41ee1f:	ds jb  0x41ee57
  41ee22:	ds dec esp
  41ee24:	das    
  41ee25:	mov    cl,0x5
  41ee27:	or     esp,ebx
  41ee29:	ja     0x41ee19
  41ee2b:	mov    WORD PTR [edi+0x153382bc],?
  41ee31:	test   eax,0x13086f44
  41ee36:	pop    es
  41ee37:	stc    
  41ee38:	aad    0x66
  41ee3a:	inc    ebx
  41ee3b:	les    edi,FWORD PTR [ecx+0x5a828b]
  41ee41:	stos   DWORD PTR es:[edi],eax
  41ee42:	lea    ebx,[eax-0x91ebeed]
  41ee48:	jg     0x41ee39
  41ee4a:	and    bh,BYTE PTR [edi-0x2a]
  41ee4d:	sbb    eax,0xbc31505
  41ee52:	es iret 
  41ee54:	rol    BYTE PTR [edx],cl
  41ee56:	loop   0x41ee9f
  41ee58:	outs   dx,BYTE PTR ds:[esi]
  41ee59:	retf   
  41ee5a:	cld    
  41ee5b:	pop    esi
  41ee5c:	into   
  41ee5d:	xor    eax,0x10a752af
  41ee62:	pop    ebp
  41ee63:	mov    al,ds:0x81b626aa
  41ee68:	int3   
  41ee69:	scas   eax,DWORD PTR es:[edi]
  41ee6a:	jmp    0x44e44b4d
  41ee6f:	in     eax,0x19
  41ee71:	hlt    
  41ee72:	(bad)  
  41ee73:	mov    ss,eax
  41ee75:	fidivr DWORD PTR [edi+0x115eb99e]
  41ee7b:	jmp    0x680e:0x294008f7
  41ee82:	mov    edx,0x6b3b98db
  41ee87:	lods   al,BYTE PTR ds:[esi]
  41ee88:	sub    DWORD PTR [eax],0x8f4213a
  41ee8e:	dec    eax
  41ee8f:	pop    ebp
  41ee90:	sub    ecx,DWORD PTR [ecx]
  41ee92:	gs int 0x2d
  41ee95:	sub    edx,DWORD PTR [ecx+0x25]
  41ee98:	scas   al,BYTE PTR es:[edi]
  41ee99:	jnp    0x41eeb1
  41ee9b:	nop
  41ee9c:	mov    ds:0x874b20fe,eax
  41eea1:	pop    ds
  41eea2:	jg     0x41eeab
  41eea4:	and    BYTE PTR [edi-0x2b],dh
  41eea7:	adc    DWORD PTR [ebp+0x0],esi
  41eeaa:	cld    
  41eeab:	xchg   esi,edi
  41eead:	push   ecx
  41eeae:	push   ebp
  41eeaf:	shr    DWORD PTR [eax-0xff96249],cl
  41eeb5:	inc    edi
  41eeb6:	pop    es
  41eeb7:	cwde   
  41eeb8:	sbb    al,0xb5
  41eeba:	push   ebp
  41eebb:	sbb    esi,DWORD PTR [ecx-0x45b8b8e4]
  41eec1:	mov    ds:0x9953b2ed,al
  41eec6:	fisubr WORD PTR [edx+edi*2]
  41eec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeca:	je     0x41ee4c
  41eecc:	iret   
  41eecd:	and    DWORD PTR [ecx+0x51616262],esi
  41eed3:	shr    BYTE PTR [edi+edx*1],0xee
  41eed7:	push   ebx
  41eed8:	fst    QWORD PTR [edx]
  41eeda:	xchg   ecx,eax
  41eedb:	in     eax,dx
  41eedc:	dec    esi
  41eedd:	sbb    ebx,DWORD PTR [esi-0x7655debe]
  41eee3:	imul   ebx,DWORD PTR [ecx+0x50d6b8c0],0xffffffcc
  41eeea:	sbb    BYTE PTR [edi],0xb6
  41eeed:	icebp  
  41eeee:	sbb    eax,0x1f7fbe59
  41eef3:	leave  
  41eef4:	lea    esi,[edx+esi*1]
  41eef7:	or     BYTE PTR [edi],0xb9
  41eefa:	scas   al,BYTE PTR es:[edi]
  41eefb:	jg     0x41eeb4
  41eefd:	leave  
  41eefe:	(bad)  
  41eeff:	inc    BYTE PTR [ebx]
  41ef01:	shl    bl,1
  41ef03:	push   ebp
  41ef04:	ins    BYTE PTR es:[edi],dx
  41ef05:	add    BYTE PTR [ebx],al
  41ef07:	rol    ch,1
  41ef09:	push   edi
  41ef0a:	xchg   esi,eax
  41ef0b:	jle    0x41ee93
  41ef0d:	repz imul ebx,DWORD PTR [ebp+0x358c8e58],0x8436c70c
  41ef18:	xchg   ecx,eax
  41ef19:	repz xor eax,0xa4af87b2
  41ef1f:	push   ebp
  41ef20:	inc    esi
  41ef21:	xchg   ecx,eax
  41ef22:	adc    BYTE PTR [eax-0x539b8828],al
  41ef28:	jmp    0x41ef37
  41ef2a:	daa    
  41ef2b:	add    edi,DWORD PTR [edi]
  41ef2d:	rep outs dx,DWORD PTR ds:[esi]
  41ef2f:	lock and BYTE PTR [esi],ah
  41ef32:	xor    BYTE PTR ds:0x9d87134e,0x40
  41ef39:	xor    eax,0x74f6eddd
  41ef3e:	jb     0x41ef5d
  41ef40:	sub    DWORD PTR [edi-0x67],esp
  41ef43:	xchg   ebp,eax
  41ef44:	cmp    esp,DWORD PTR [eax-0x5d]
  41ef47:	enter  0x53a4,0xc1
  41ef4b:	imul   DWORD PTR [esi-0x6a5ebf41]
  41ef51:	jb     0x41ef27
  41ef53:	(bad)
  41ef56:	push   0xffffffda
  41ef58:	(bad)  
  41ef59:	les    ebx,FWORD PTR [edx-0x5ce83eb0]
  41ef5f:	lea    edi,[edx]
  41ef61:	jns    0x41efaa
  41ef63:	rcl    DWORD PTR [edx+0x53028fe3],1
  41ef69:	push   ss
  41ef6a:	mov    ch,0x5d
  41ef6c:	dec    ebx
  41ef6d:	retf   0x6054
  41ef70:	sahf   
  41ef71:	in     eax,0xb5
  41ef73:	adc    edi,DWORD PTR [ecx]
  41ef75:	idiv   BYTE PTR ds:0xe965d81c
  41ef7b:	push   edx
  41ef7c:	mov    al,ss:0xc6296913
  41ef82:	sub    al,0x6a
  41ef84:	mov    al,ds:0x89a1b70
  41ef89:	add    al,0xbb
  41ef8b:	hlt    
  41ef8c:	sar    BYTE PTR [esi+0x213c2aae],cl
  41ef92:	loopne 0x41eff2
  41ef94:	(bad)  
  41ef95:	push   0x22
  41ef97:	or     al,0xf9
  41ef99:	mov    al,0xf1
  41ef9b:	jmp    0x41ef64
  41ef9d:	leave  
  41ef9e:	mov    WORD PTR [edx-0x80],?
  41efa1:	push   cs
  41efa2:	or     al,0x8e
  41efa4:	lods   al,BYTE PTR ss:[esi]
  41efa6:	adc    cl,dl
  41efa8:	std    
  41efa9:	mov    DWORD PTR [eax-0x42e6c9ed],esi
  41efaf:	adc    DWORD PTR [ebp+0x16],ecx
  41efb2:	fild   QWORD PTR [ecx-0x6e00de3f]
  41efb8:	sbb    dl,BYTE PTR ds:0x755d5541
  41efbe:	sar    BYTE PTR [eax],cl
  41efc0:	jne    0x41efd9
  41efc2:	mov    BYTE PTR [esi+ebx*1],bh
  41efc5:	outs   dx,DWORD PTR ds:[esi]
  41efc6:	and    bl,cl
  41efc8:	jbe    0x41efcc
  41efca:	out    0xbf,eax
  41efcc:	jo     0x41ef8c
  41efce:	fs mov ah,0x42
  41efd1:	loop   0x41efca
  41efd3:	cdq    
  41efd4:	cmp    eax,0xba511f0c
  41efd9:	pushf  
  41efda:	xchg   edi,eax
  41efdb:	jmp    0x2a53:0x79d90fe2
  41efe2:	popf   
  41efe3:	nop
  41efe4:	ret    
  41efe5:	out    0x31,eax
  41efe7:	sbb    cl,BYTE PTR [ebx+esi*8+0x630937de]
  41efee:	aam    0xa1
  41eff0:	loope  0x41efde
  41eff2:	test   eax,0xf7ba9410
  41eff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eff8:	push   es
  41eff9:	or     DWORD PTR [esi-0x22d13588],edi
  41efff:	ror    BYTE PTR [esi-0x34713bc9],cl
  41f005:	mov    DWORD PTR [ebp-0x2541a667],esi
  41f00b:	mov    dl,0x83
  41f00d:	push   edi
  41f00e:	and    bh,bl
  41f010:	popf   
  41f011:	or     DWORD PTR [ebx-0x57ca959a],ebx
  41f017:	xor    al,0xc8
  41f019:	fidivr WORD PTR [edx]
  41f01b:	jno    0x41f097
  41f01d:	mov    DWORD PTR [esi-0x31],edx
  41f020:	test   BYTE PTR [esi+0x39],ah
  41f023:	ret    0xd0f7
  41f026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f027:	pop    ebp
  41f028:	cmp    ecx,DWORD PTR [edi-0x78693d4d]
  41f02e:	idiv   DWORD PTR [edi]
  41f030:	out    0x7c,al
  41f032:	fistp  QWORD PTR [edx]
  41f034:	jg     0x41efc3
  41f036:	scas   eax,DWORD PTR es:[edi]
  41f037:	popf   
  41f038:	lods   eax,DWORD PTR ds:[esi]
  41f039:	mov    ebx,0x4356785d
  41f03e:	pop    esi
  41f03f:	inc    esp
  41f040:	dec    edx
  41f041:	cdq    
  41f042:	test   eax,0x61894c1c
  41f047:	or     DWORD PTR [eax+0x4683c744],esp
  41f04d:	sbb    DWORD PTR [esi+ecx*1-0x5921ac7d],ebp
  41f054:	dec    esp
  41f055:	push   cs
  41f056:	cmp    ah,0x50
  41f059:	pop    ss
  41f05a:	(bad)  
  41f05c:	in     al,dx
  41f05d:	cmp    eax,0x6221cba9
  41f062:	bound  ebp,QWORD PTR [esi]
  41f064:	rcl    DWORD PTR [ebx],0xc
  41f067:	pop    edi
  41f068:	jae    0x41f018
  41f06a:	fidivr WORD PTR [edi]
  41f06c:	mov    esi,0x2b1d563e
  41f071:	pushf  
  41f072:	dec    esp
  41f073:	and    al,0x79
  41f075:	lock add eax,0xc7642066
  41f07b:	aaa    
  41f07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f07d:	push   ecx
  41f07e:	ss pop es
  41f080:	les    eax,FWORD PTR [ebp+edx*1-0x7b137068]
  41f087:	nop
  41f088:	rol    DWORD PTR [ebp+0x4],0x9c
  41f08c:	and    BYTE PTR [ecx+0xb751d07],bh
  41f092:	jbe    0x41f0b4
  41f094:	mov    esp,0xf60bbcbc
  41f099:	(bad)  
  41f09a:	bound  edx,QWORD PTR [esi-0x3]
  41f09d:	loope  0x41f0c9
  41f09f:	or     ebp,DWORD PTR [ebp-0x484395d7]
  41f0a5:	and    ch,BYTE PTR [ebx+0x65]
  41f0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a9:	call   0x46aa:0xcf0ed6f
  41f0b0:	dec    ecx
  41f0b1:	clc    
  41f0b2:	mov    ah,0x6f
  41f0b4:	push   ecx
  41f0b5:	sti    
  41f0b6:	pop    ebx
  41f0b7:	pop    ebx
  41f0b8:	in     eax,0xcc
  41f0ba:	stos   BYTE PTR es:[edi],al
  41f0bb:	dec    ecx
  41f0bc:	pusha  
  41f0bd:	or     al,0xdc
  41f0bf:	ret    
  41f0c0:	mov    ds:0xfa5e6bd9,eax
  41f0c5:	ins    BYTE PTR es:[edi],dx
  41f0c6:	iret   
  41f0c7:	pop    es
  41f0c8:	jns    0x41f088
  41f0ca:	push   0x13
  41f0cc:	ret    0x9a86
  41f0cf:	imul   DWORD PTR [edx+0x2d]
  41f0d2:	cmc    
  41f0d3:	sub    DWORD PTR [eax-0x3d29257],0xffffff84
  41f0da:	adc    eax,0x910b8085
  41f0df:	enter  0x3385,0x51
  41f0e3:	jecxz  0x41f0cb
  41f0e5:	scas   eax,DWORD PTR es:[edi]
  41f0e6:	or     BYTE PTR [ebp+0x3c],al
  41f0e9:	jno    0x41f161
  41f0eb:	into   
  41f0ec:	add    eax,0xff75736a
  41f0f1:	add    eax,0xfe8e8340
  41f0f6:	inc    eax
  41f0f7:	dec    edx
  41f0f8:	push   0xab1fc953
  41f0fd:	lods   eax,DWORD PTR ds:[esi]
  41f0fe:	jno    0x41f162
  41f100:	or     dl,bh
  41f102:	jne    0x41f130
  41f104:	mov    dl,0xe6
  41f106:	mov    ecx,0x4170a864
  41f10b:	adc    eax,0x32f7450d
  41f110:	jne    0x41f12f
  41f112:	cs daa 
  41f114:	dec    ecx
  41f115:	or     BYTE PTR ds:[eax],bl
  41f118:	gs jae 0x41f125
  41f11b:	sub    DWORD PTR [esi+0x75],edx
  41f11e:	pop    ecx
  41f11f:	pop    eax
  41f120:	or     BYTE PTR [eax+edi*2+0x6ab59e7b],0x7f
  41f128:	jl     0x41f1a5
  41f12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f12b:	popf   
  41f12c:	jnp    0x41f0bc
  41f12e:	xchg   esp,eax
  41f12f:	stc    
  41f130:	xlat   BYTE PTR ds:[ebx]
  41f131:	jecxz  0x41f140
  41f133:	jmp    FWORD PTR [ecx]
  41f135:	lods   al,BYTE PTR ds:[esi]
  41f136:	arpl   bx,bx
  41f138:	fcmovbe st,st(6)
  41f13a:	in     eax,0x81
  41f13c:	sbb    DWORD PTR [eax+eiz*4+0xf],0xffffffb9
  41f141:	test   BYTE PTR [edi],dh
  41f143:	sar    ah,1
  41f145:	lock or DWORD PTR [ecx],ebp
  41f148:	mov    edi,0xb14ee76c
  41f14d:	rol    DWORD PTR [edi+eax*1-0x25e8e9db],1
  41f154:	xor    al,0x47
  41f156:	ss jl  0x41f18a
  41f159:	stos   BYTE PTR es:[edi],al
  41f15a:	mov    ch,0x9
  41f15c:	dec    ecx
  41f15d:	in     al,0x0
  41f15f:	enter  0xac53,0x2d
  41f163:	int    0x35
  41f165:	fst    QWORD PTR [ecx+0x14]
  41f168:	xor    DWORD PTR ds:0x51c251f5,eax
  41f16e:	adc    eax,0x52e52def
  41f173:	fwait
  41f174:	mov    ebx,0xba535ac6
  41f179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f17a:	int3   
  41f17b:	fwait
  41f17c:	iret   
  41f17d:	scas   eax,DWORD PTR es:[edi]
  41f17e:	std    
  41f17f:	mov    BYTE PTR [esi-0x56609610],ch
  41f185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f186:	test   edi,esi
  41f188:	jmp    0x41f133
  41f18a:	leave  
  41f18b:	ficom  WORD PTR [ecx+0x79]
  41f18e:	stc    
  41f18f:	popf   
  41f190:	dec    ebx
  41f191:	out    dx,al
  41f192:	lods   al,BYTE PTR ds:[esi]
  41f193:	inc    ecx
  41f194:	lea    ebx,[edx]
  41f196:	push   ds
  41f197:	dec    edx
  41f198:	scas   eax,DWORD PTR es:[edi]
  41f199:	mov    ds:0x9987af53,eax
  41f19e:	out    dx,eax
  41f19f:	mov    eax,0xdf094f8f
  41f1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a5:	jmp    0xcb5115d2
  41f1aa:	loope  0x41f1e6
  41f1ac:	test   al,0xcd
  41f1ae:	call   0x3d76:0x4e6878e1
  41f1b5:	out    dx,eax
  41f1b6:	popf   
  41f1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b8:	xor    bl,BYTE PTR [ecx]
  41f1ba:	sub    BYTE PTR [esp+ebx*2-0x47ed206b],0x3b
  41f1c2:	call   0x7c54b1ab
  41f1c7:	shl    BYTE PTR [ebx-0x21],cl
  41f1ca:	add    DWORD PTR [edx-0x6d525a6f],ecx
  41f1d0:	xor    DWORD PTR [edx+edi*2-0x4c9527e2],esi
  41f1d7:	dec    ebx
  41f1d8:	aad    0x9a
  41f1da:	jecxz  0x41f22a
  41f1dc:	pop    ebp
  41f1dd:	leave  
  41f1de:	lds    esi,FWORD PTR [ebx+ebx*4]
  41f1e1:	loopne 0x41f1b9
  41f1e3:	xor    ebx,esi
  41f1e5:	int    0x7c
  41f1e7:	(bad)  
  41f1e8:	aad    0xc5
  41f1ea:	and    dl,BYTE PTR [edi+0x10]
  41f1ed:	call   0xd6f:0x1fb0004c
  41f1f4:	cdq    
  41f1f5:	pusha  
  41f1f6:	std    
  41f1f7:	lds    esi,FWORD PTR [ebx+0x18]
  41f1fa:	mov    edx,0xe47c8a9d
  41f1ff:	jbe    0x41f1c8
  41f201:	fsubr  QWORD PTR gs:[esi]
  41f204:	into   
  41f205:	pop    es
  41f206:	(bad)  
  41f207:	push   ss
  41f208:	push   0xb8c3992f
  41f20d:	in     eax,0x38
  41f20f:	pop    ds
  41f210:	mov    ecx,0x1c6a99d7
  41f215:	mov    cl,0x96
  41f217:	lods   al,BYTE PTR ds:[esi]
  41f218:	adc    dl,al
  41f21a:	inc    esi
  41f21b:	dec    esi
  41f21c:	mov    di,0xc40
  41f220:	jp     0x41f29a
  41f222:	adc    DWORD PTR [eax+0x5e],edi
  41f225:	aaa    
  41f226:	call   DWORD PTR [ebx]
  41f228:	mov    ecx,0xd3ba87b5
  41f22d:	push   eax
  41f22e:	lahf   
  41f22f:	fistp  DWORD PTR [ebp-0x2f3fbcd1]
  41f235:	clc    
  41f236:	inc    esp
  41f237:	add    BYTE PTR [ecx+0x74304c42],0x7f
  41f23e:	dec    ebp
  41f23f:	mov    edi,0xc887328
  41f244:	push   ss
  41f245:	out    dx,al
  41f246:	inc    edi
  41f247:	scas   eax,DWORD PTR es:[edi]
  41f248:	nop
  41f249:	push   eax
  41f24a:	and    al,0xf4
  41f24c:	mov    esp,0x6e437e18
  41f251:	inc    edx
  41f252:	sub    eax,0x46720004
  41f257:	out    dx,eax
  41f258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f259:	add    DWORD PTR [edi+0x6fc0bc75],0x1b47c1e7
  41f263:	or     ch,0x7d
  41f266:	arpl   WORD PTR [edx+ebx*8+0x20],cx
  41f26a:	or     DWORD PTR [esi],ebp
  41f26c:	test   eax,0x2f34bfd7
  41f271:	jp     0x41f279
  41f273:	xchg   edx,eax
  41f274:	imul   eax,edi,0xab73521e
  41f27a:	scas   eax,DWORD PTR es:[edi]
  41f27b:	xor    eax,0xf97682da
  41f280:	mov    esp,ebx
  41f282:	pop    ss
  41f283:	jne    0x41f295
  41f285:	and    cl,al
  41f287:	cs lahf 
  41f289:	inc    edi
  41f28a:	or     al,al
  41f28c:	xchg   BYTE PTR [ecx-0x154454d0],dh
  41f292:	add    DWORD PTR [ebx+0x12],edi
  41f295:	jmp    0x41f2bb
  41f297:	cmp    DWORD PTR [ebp-0x3e67ab45],edx
  41f29d:	mov    ebp,0x82c7cc1f
  41f2a2:	fisub  DWORD PTR [ebx+0x26e576a8]
  41f2a8:	pushf  
  41f2a9:	addr16 xor eax,0x3bf58a89
  41f2af:	or     al,0xb6
  41f2b1:	inc    ecx
  41f2b2:	nop
  41f2b3:	mov    ebx,0xe68a256c
  41f2b8:	lock imul edi,DWORD PTR [esi-0x6e6f951a],0xffffffff
  41f2c0:	cmp    bh,BYTE PTR [esi]
  41f2c2:	dec    eax
  41f2c3:	xor    eax,0x5a8514c7
  41f2c8:	jnp    0x41f2bc
  41f2ca:	xor    eax,0x4d0623ed
  41f2cf:	idiv   ch
  41f2d1:	in     al,0x2e
  41f2d3:	in     eax,dx
  41f2d4:	jge    0x41f26e
  41f2d6:	(bad)  
  41f2d7:	icebp  
  41f2d8:	adc    BYTE PTR [ecx+edx*2-0x5b],bl
  41f2dc:	dec    eax
  41f2dd:	ins    DWORD PTR es:[edi],dx
  41f2de:	or     eax,0x434cfddb
  41f2e3:	mov    ebp,0xf1a69940
  41f2e8:	pusha  
  41f2e9:	mov    ds:0xed6639c6,al
  41f2ee:	jnp    0x41f358
  41f2f0:	adc    DWORD PTR [eax-0x40],ecx
  41f2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f4:	aaa    
  41f2f5:	(bad)  
  41f2f6:	pop    ebp
  41f2f7:	dec    esp
  41f2f8:	scas   al,BYTE PTR es:[edi]
  41f2f9:	lahf   
  41f2fa:	xor    BYTE PTR [eax-0x22],dl
  41f2fd:	rcr    BYTE PTR [edx+ebx*4+0x4da92d79],cl
  41f304:	jb     0x41f2e8
  41f306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f307:	mov    cl,0xe6
  41f309:	dec    esi
  41f30a:	xor    dh,BYTE PTR [ebx]
  41f30c:	fstp   st(4)
  41f30e:	cwde   
  41f30f:	dec    ebp
  41f310:	lds    edx,FWORD PTR [esi+0xe]
  41f313:	fist   DWORD PTR [ebx+0x71]
  41f316:	out    dx,eax
  41f317:	push   esi
  41f318:	sub    bh,BYTE PTR [ecx+0x44930a4f]
  41f31e:	hlt    
  41f31f:	mov    ch,0xed
  41f321:	cmp    ch,BYTE PTR [eax+0x12bc2595]
  41f327:	pop    edx
  41f328:	hlt    
  41f329:	js     0x41f396
  41f32b:	repnz std 
  41f32d:	xor    DWORD PTR [edx],esi
  41f32f:	imul   ecx,DWORD PTR [eax+eiz*1-0x6b],0xffffffcd
  41f334:	xchg   edx,eax
  41f335:	pop    ds
  41f336:	pop    edx
  41f337:	cmp    BYTE PTR ds:0x70ac9f47,cl
  41f33d:	push   esi
  41f33e:	adc    BYTE PTR [eax],dh
  41f340:	mov    ds:0xc4fa64c7,eax
  41f345:	pop    es
  41f346:	in     al,0x49
  41f348:	mov    ch,0xef
  41f34a:	adc    BYTE PTR [ecx],dl
  41f34c:	lahf   
  41f34d:	and    bl,BYTE PTR [esi]
  41f34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f350:	dec    ecx
  41f351:	lods   eax,DWORD PTR ds:[esi]
  41f352:	pop    eax
  41f353:	enter  0x94f9,0xe0
  41f357:	fisubr DWORD PTR [edi-0x1b]
  41f35a:	sbb    al,0x24
  41f35c:	adc    al,0x74
  41f35e:	into   
  41f35f:	push   0xffffff87
  41f361:	(bad)  
  41f362:	cs xchg edi,eax
  41f364:	pop    edx
  41f365:	xchg   esi,eax
  41f366:	inc    ebx
  41f367:	loope  0x41f39b
  41f369:	or     al,0x82
  41f36b:	and    ebp,ebx
  41f36d:	pop    esi
  41f36e:	clc    
  41f36f:	xchg   esi,eax
  41f370:	adc    cl,BYTE PTR [ebx]
  41f372:	dec    esi
  41f373:	add    eax,0x7b75536b
  41f378:	sub    cl,0x44
  41f37b:	inc    edi
  41f37c:	mov    ebp,0xe0caeb4c
  41f381:	or     al,0xae
  41f383:	into   
  41f384:	popa   
  41f385:	mov    ch,0x16
  41f387:	xchg   esp,eax
  41f388:	adc    al,0x60
  41f38a:	retf   
  41f38b:	imul   ecx,esi,0xcdd1f1bd
  41f391:	mov    cl,0xe9
  41f393:	ror    BYTE PTR [ecx],1
  41f395:	loope  0x41f31e
  41f397:	pop    ebp
  41f398:	pop    ss
  41f399:	lods   eax,DWORD PTR ds:[esi]
  41f39a:	ins    BYTE PTR es:[edi],dx
  41f39b:	leave  
  41f39c:	repnz pop ds
  41f39e:	dec    bp
  41f3a0:	(bad)  
  41f3a1:	push   edx
  41f3a2:	dec    edx
  41f3a3:	shl    DWORD PTR ds:[esi],cl
  41f3a6:	fwait
  41f3a7:	mov    es,WORD PTR [edi]
  41f3a9:	add    eax,0xd2995fc5
  41f3ae:	mov    bh,0x3a
  41f3b0:	int    0x3d
  41f3b2:	call   0x5071d8d0
  41f3b7:	sti    
  41f3b8:	stos   DWORD PTR es:[edi],eax
  41f3b9:	xlat   BYTE PTR ds:[ebx]
  41f3ba:	jo     0x41f435
  41f3bc:	(bad)  
  41f3bd:	out    dx,al
  41f3be:	xchg   BYTE PTR ds:[ecx-0x334a0fc5],ch
  41f3c5:	or     DWORD PTR [ebx],ebx
  41f3c7:	or     DWORD PTR [edx-0x64c5200],edx
  41f3cd:	and    al,0x8c
  41f3cf:	mov    WORD PTR [esi+0xf28946d],sp
  41f3d6:	ins    BYTE PTR es:[edi],dx
  41f3d7:	sahf   
  41f3d8:	jp     0x41f36a
  41f3da:	ins    DWORD PTR es:[edi],dx
  41f3db:	cmp    ah,BYTE PTR [esi+ebx*4-0x14]
  41f3df:	xchg   ecx,eax
  41f3e0:	fist   WORD PTR [eax+eax*2-0x1802888f]
  41f3e7:	fcmovnbe st,st(3)
  41f3e9:	fnstsw WORD PTR [edx+0x22]
  41f3ec:	rol    BYTE PTR [ebp+edi*1-0x25],0x23
  41f3f1:	or     eax,0xf9486c4
  41f3f6:	out    dx,al
  41f3f7:	jmp    0x29b:0xc9490a3f
  41f3fe:	retf   
  41f3ff:	scas   al,BYTE PTR es:[edi]
  41f400:	jb     0x41f3a8
  41f402:	push   eax
  41f403:	dec    ebx
  41f404:	int    0x85
  41f406:	sti    
  41f407:	cli    
  41f408:	mov    ecx,cs
  41f40a:	cmc    
  41f40b:	mov    ebx,0x7c492298
  41f410:	inc    ebx
  41f411:	je     0x41f450
  41f413:	mov    esi,0x32c31ea4
  41f418:	inc    ebx
  41f419:	popa   
  41f41a:	sar    DWORD PTR [ebp+0x3],1
  41f41d:	call   0xf706:0xb21feb5d
  41f424:	aas    
  41f425:	inc    esp
  41f426:	mov    ebx,0x97d39bc1
  41f42b:	pop    esp
  41f42c:	xor    BYTE PTR [ebp+eax*1-0x41a004e7],ah
  41f433:	in     al,0xc2
  41f435:	push   edx
  41f436:	mov    eax,ds:0x31a1606
  41f43b:	int    0x26
  41f43d:	jge    0x41f42b
  41f43f:	cmp    esi,DWORD PTR [eax+ecx*4]
  41f442:	xchg   ecx,eax
  41f443:	das    
  41f444:	mov    ebx,DWORD PTR [edi]
  41f446:	xor    al,0xed
  41f448:	sub    DWORD PTR [ecx+0x2b],ecx
  41f44b:	jnp    0x41f41e
  41f44d:	fistp  QWORD PTR [edi-0x343f1ae3]
  41f453:	lahf   
  41f454:	add    eax,0x2a21522
  41f459:	or     edi,eax
  41f45b:	popf   
  41f45c:	xor    edx,ebp
  41f45e:	hlt    
  41f45f:	out    0xf8,al
  41f461:	sbb    eax,0x1cae902a
  41f466:	dec    ebx
  41f467:	call   0x62a063e1
  41f46c:	fcmovnb st,st(1)
  41f46e:	mov    dl,0x2a
  41f470:	xchg   ebp,eax
  41f471:	fild   DWORD PTR [edi-0x6626bdd8]
  41f477:	push   0x8
  41f479:	aas    
  41f47a:	and    bl,BYTE PTR [edx]
  41f47c:	sub    DWORD PTR [ecx],ebx
  41f47e:	dec    ebp
  41f47f:	xor    ch,bl
  41f481:	loopne 0x41f436
  41f483:	mov    ds:0xf76d4fc9,eax
  41f488:	jecxz  0x41f4eb
  41f48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48b:	mov    esp,0xb0ee4d07
  41f490:	call   0x7f4c:0xa202afaa
  41f497:	xchg   esp,eax
  41f498:	xchg   esp,eax
  41f499:	xor    ch,BYTE PTR [esp+ebx*2+0x71f53490]
  41f4a0:	pop    esi
  41f4a1:	dec    eax
  41f4a2:	mov    DWORD PTR [edi+0x6],esi
  41f4a5:	pop    ss
  41f4a6:	stos   BYTE PTR es:[edi],al
  41f4a7:	push   edx
  41f4a8:	stc    
  41f4a9:	leave  
  41f4aa:	mov    WORD PTR [ebp+0x43],gs
  41f4ad:	and    BYTE PTR [ebp+0x5a302951],al
  41f4b3:	pushf  
  41f4b4:	mov    bl,0x5d
  41f4b6:	sub    eax,ebp
  41f4b8:	pop    edi
  41f4b9:	sbb    al,0x62
  41f4bb:	jge    0x41f494
  41f4bd:	sti    
  41f4be:	iret   
  41f4bf:	adc    dl,BYTE PTR [ebp+0x47fb7303]
  41f4c5:	mov    ebx,0x2fe2655a
  41f4ca:	and    DWORD PTR [esi+0x475165a3],esi
  41f4d0:	aad    0xbf
  41f4d2:	ret    0x9a82
  41f4d5:	lds    ecx,FWORD PTR [ebx+0x53]
  41f4d8:	js     0x41f49e
  41f4da:	sbb    DWORD PTR [edx],esp
  41f4dc:	dec    edx
  41f4dd:	add    al,0x98
  41f4df:	mov    eax,0x4d6ab888
  41f4e4:	push   ebx
  41f4e5:	inc    ecx
  41f4e6:	fnsave [esi+esi*8+0x2e]
  41f4ea:	inc    esi
  41f4eb:	mov    al,0x22
  41f4ed:	mov    cl,0x52
  41f4ef:	adc    eax,0xd660fdb1
  41f4f4:	push   eax
  41f4f5:	aad    0x55
  41f4f7:	mov    edx,0xc2646a61
  41f4fc:	lock outs dx,DWORD PTR ds:[esi]
  41f4fe:	leave  
  41f4ff:	xchg   DWORD PTR [edx-0x3480817e],eax
  41f505:	loopne 0x41f544
  41f507:	dec    edx
  41f508:	push   ebx
  41f509:	daa    
  41f50a:	loop   0x41f50a
  41f50c:	add    al,0x53
  41f50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50f:	mov    ds,eax
  41f511:	js     0x41f54f
  41f513:	and    BYTE PTR [ecx+edi*1],ch
  41f516:	popa   
  41f517:	cs inc ebx
  41f519:	ret    0x49b7
  41f51c:	pop    ebx
  41f51d:	mov    esp,0xb296f75a
  41f522:	mov    dh,0x25
  41f524:	pop    edx
  41f525:	fs jb  0x41f4e0
  41f528:	sub    eax,0xa886967c
  41f52d:	and    eax,DWORD PTR [edx+eax*8+0xa]
  41f531:	sbb    edx,esp
  41f533:	in     eax,dx
  41f534:	jle    0x41f4df
  41f536:	add    al,0xdb
  41f538:	pop    ds
  41f539:	sbb    DWORD PTR [esi+eiz*8],ebx
  41f53c:	jns    0x41f4eb
  41f53e:	sub    eax,DWORD PTR [ebx]
  41f540:	ret    0x7a40
  41f543:	pusha  
  41f544:	out    0x6a,al
  41f546:	test   BYTE PTR [edi],cl
  41f548:	push   es
  41f549:	mov    esp,0xe06ed64e
  41f54e:	call   0xb171329f
  41f553:	push   ebx
  41f554:	jmp    0x5316:0xe82cf41
  41f55b:	and    BYTE PTR [ecx-0xfdbad56],bh
  41f561:	mov    al,ds:0x6a60cf1f
  41f566:	push   esp
  41f567:	cli    
  41f568:	sub    al,0x51
  41f56a:	jmp    FWORD PTR [edi-0x77c745bd]
  41f570:	in     al,0x20
  41f572:	pop    esp
  41f573:	sti    
  41f574:	jbe    0x41f537
  41f576:	mov    esi,DWORD PTR [eax]
  41f578:	inc    esp
  41f579:	cwde   
  41f57a:	jno    0x41f5cf
  41f57c:	push   es
  41f57d:	xlat   BYTE PTR ds:[ebx]
  41f57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f57f:	xor    ebp,ebp
  41f581:	outs   dx,BYTE PTR ds:[esi]
  41f582:	adc    al,BYTE PTR [ebp-0x51]
  41f585:	stos   DWORD PTR es:[edi],eax
  41f586:	sub    ch,0xdd
  41f589:	repnz cmp ch,cl
  41f58c:	call   0x14672fa8
  41f591:	bound  edi,QWORD PTR [esi+0x7f]
  41f594:	pop    ds
  41f595:	and    al,0x51
  41f597:	fisttp QWORD PTR [eax-0x49b78ee7]
  41f59d:	jge    0x41f55a
  41f59f:	pop    eax
  41f5a0:	addr16 jl 0x41f555
  41f5a3:	push   eax
  41f5a4:	mov    DWORD PTR [ebp+0x38],edi
  41f5a7:	shr    DWORD PTR [edx],cl
  41f5a9:	sub    al,0x1c
  41f5ab:	and    bl,BYTE PTR [edx]
  41f5ad:	repz mov ebp,0x6d186b10
  41f5b3:	ja     0x41f5cd
  41f5b5:	push   es
  41f5b6:	jp     0x41f5f8
  41f5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b9:	and    edi,DWORD PTR [edx-0x57]
  41f5bc:	mov    esi,0xa656e72e
  41f5c1:	lds    ebp,FWORD PTR [ebp+0x14f6acf5]
  41f5c7:	pushf  
  41f5c8:	out    dx,eax
  41f5c9:	sbb    al,0x2b
  41f5cb:	mov    ecx,0xc3abd03b
  41f5d0:	mov    DWORD PTR [ebp-0x69ce20a],ecx
  41f5d6:	(bad)  
  41f5d7:	out    dx,eax
  41f5d8:	popa   
  41f5d9:	dec    esi
  41f5da:	sbb    BYTE PTR [eax],0x93
  41f5dd:	daa    
  41f5de:	clc    
  41f5df:	jb     0x41f612
  41f5e1:	imul   ecx,DWORD PTR fs:[ebp+0x1b],0x6e47bf04
  41f5e9:	inc    ebx
  41f5ea:	popa   
  41f5eb:	push   eax
  41f5ec:	or     ah,dl
  41f5ee:	cli    
  41f5ef:	and    BYTE PTR [ecx-0x338a4a07],bl
  41f5f5:	cli    
  41f5f6:	mov    eax,ds:0x6b17fadc
  41f5fb:	xchg   ebp,eax
  41f5fc:	add    al,0x15
  41f5fe:	shl    BYTE PTR ds:[ecx],cl
  41f601:	add    dl,BYTE PTR [edi]
  41f603:	mov    bl,0xaf
  41f605:	adc    al,ch
  41f607:	cdq    
  41f608:	adc    DWORD PTR ds:0xd26897f9,esp
  41f60e:	lock rcl ecx,0xd
  41f612:	xor    ecx,DWORD PTR [ebx]
  41f614:	aas    
  41f615:	pop    edi
  41f616:	fsubr  QWORD PTR [eax+ebx*1-0x2f]
  41f61a:	gs repnz dec edx
  41f61d:	retf   0x76f1
  41f620:	and    ecx,DWORD PTR [edx-0x7494747]
  41f626:	push   0x53
  41f628:	inc    esp
  41f629:	stos   BYTE PTR es:[edi],al
  41f62a:	cmp    DWORD PTR [ebp+edi*4+0x43],0xffffffc7
  41f62f:	jp     0x41f609
  41f631:	cdq    
  41f632:	xor    DWORD PTR [esi+0x30],0x588b3058
  41f639:	cdq    
  41f63a:	into   
  41f63b:	int    0x33
  41f63d:	and    DWORD PTR [edx],edx
  41f63f:	lock aas 
  41f641:	jmp    0x6704:0x6f5e7f0d
  41f648:	mov    ds:0x61e199dc,eax
  41f64d:	out    0xcb,eax
  41f64f:	mov    dh,0x8c
  41f651:	es mov dh,bh
  41f654:	inc    esi
  41f655:	dec    DWORD PTR [ecx]
  41f657:	loopne 0x41f667
  41f659:	in     al,0xaf
  41f65b:	jne    0x41f686
  41f65d:	mov    ebp,0xc93fda4
  41f662:	xlat   BYTE PTR ds:[ebx]
  41f663:	daa    
  41f664:	test   al,0x10
  41f666:	nop
  41f667:	sub    BYTE PTR [edi-0x63],ah
  41f66a:	fstp   DWORD PTR [esi+0x3f]
  41f66d:	mov    esi,0x807e095c
  41f672:	ins    DWORD PTR es:[edi],dx
  41f673:	loop   0x41f643
  41f675:	and    al,0x96
  41f677:	lods   al,BYTE PTR ds:[esi]
  41f678:	jl     0x41f630
  41f67a:	xchg   ebp,eax
  41f67b:	and    dh,BYTE PTR [esi]
  41f67d:	imul   esp,DWORD PTR [edx+0x79],0x81affe2e
  41f684:	push   esi
  41f685:	(bad)  [ecx-0x8]
  41f688:	xchg   ebx,eax
  41f689:	jmp    0xa092:0x5091b5fa
  41f690:	retf   0x59cf
  41f693:	mov    fs,WORD PTR [eax]
  41f695:	popf   
  41f696:	pop    ebp
  41f697:	jb     0x41f675
  41f699:	das    
  41f69a:	aas    
  41f69b:	jmp    0xd0d2:0xc5423235
  41f6a2:	dec    ebx
  41f6a3:	or     al,0x52
  41f6a5:	icebp  
  41f6a6:	or     DWORD PTR [ebx],esi
  41f6a8:	xor    DWORD PTR [ebp+0x54fb8848],eax
  41f6ae:	(bad)  
  41f6af:	jbe    0x41f6f9
  41f6b1:	enter  0xa86,0xa6
  41f6b5:	shl    BYTE PTR [eax+eiz*1],1
  41f6b8:	repnz pop edx
  41f6ba:	mov    ebx,0x2d6aa6de
  41f6bf:	jno    0x41f6fc
  41f6c1:	bound  ecx,QWORD PTR [edx+ebp*4+0x56]
  41f6c5:	pop    esp
  41f6c6:	push   ebx
  41f6c7:	(bad)  
  41f6c8:	xchg   esp,eax
  41f6c9:	cmp    edi,esp
  41f6cb:	hlt    
  41f6cc:	leave  
  41f6cd:	dec    ebx
  41f6ce:	jmp    0xee437a4a
  41f6d3:	and    edx,DWORD PTR [edi+0x6e]
  41f6d6:	adc    bl,ch
  41f6d8:	mov    ah,0x25
  41f6da:	add    BYTE PTR [esi-0x99198cd],0x43
  41f6e1:	dec    edi
  41f6e2:	sub    BYTE PTR [ecx+0x67],ch
  41f6e5:	push   esp
  41f6e6:	out    0xb2,eax
  41f6e8:	rcr    DWORD PTR [edx+0x3839de4],1
  41f6ee:	inc    edi
  41f6ef:	xchg   esi,eax
  41f6f0:	add    DWORD PTR [eax],esi
  41f6f2:	ins    BYTE PTR es:[edi],dx
  41f6f3:	inc    esi
  41f6f4:	sub    esp,DWORD PTR [edi]
  41f6f6:	add    BYTE PTR gs:[esi],ch
  41f6f9:	cmc    
  41f6fa:	pop    ss
  41f6fb:	sub    esi,DWORD PTR [edx]
  41f6fd:	and    DWORD PTR [edx-0xf60f304],edx
  41f703:	inc    ebp
  41f704:	mov    ch,0x4a
  41f706:	out    0xee,eax
  41f708:	sbb    eax,0xb8ddde73
  41f70d:	inc    esi
  41f70e:	clc    
  41f70f:	idiv   bl
  41f711:	(bad)  
  41f712:	push   eax
  41f713:	out    dx,eax
  41f714:	mov    bh,0xcc
  41f716:	call   0x472e:0x3bfb7a7e
  41f71d:	ret    0x722d
  41f720:	stos   DWORD PTR es:[edi],eax
  41f721:	fnstcw WORD PTR [eax-0x51]
  41f724:	adc    al,0x14
  41f726:	mov    eax,ds:0x69737152
  41f72b:	mov    edi,0x8c91dad6
  41f730:	xor    BYTE PTR [ebx],cl
  41f732:	scas   eax,DWORD PTR es:[edi]
  41f733:	mov    bl,0x95
  41f735:	mov    ecx,0x25e33d37
  41f73a:	icebp  
  41f73b:	(bad)  
  41f73c:	jmp    0x9224:0xbe63ae1a
  41f743:	pop    ecx
  41f744:	jnp    0x41f755
  41f746:	jle    0x41f740
  41f748:	jecxz  0x41f760
  41f74a:	bound  ebx,QWORD PTR [edx+0x13ac312]
  41f750:	adc    al,0x0
  41f752:	cmovl  edx,esi
  41f755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f756:	ret    0xe0b5
  41f759:	lods   eax,DWORD PTR ds:[esi]
  41f75a:	rol    DWORD PTR [ecx+0x56],cl
  41f75d:	aas    
  41f75e:	add    ch,BYTE PTR [edx+0x6e]
  41f761:	and    esp,DWORD PTR ds:0x76f9b9df
  41f767:	sahf   
  41f768:	rcl    BYTE PTR [esi+0x1d],1
  41f76b:	push   esi
  41f76c:	lahf   
  41f76d:	shl    bh,0x85
  41f770:	adc    DWORD PTR [ebx+0x1b],ebx
  41f773:	jmp    0xec73:0x794fdfe1
  41f77a:	imul   edx,edi,0x7e1a65f8
  41f780:	out    dx,al
  41f781:	shl    BYTE PTR [edx-0x2927540f],cl
  41f787:	mov    edi,0x147e9843
  41f78c:	pop    ds
  41f78d:	cmp    bl,ch
  41f78f:	cmp    eax,0x92b74088
  41f794:	cwde   
  41f795:	or     al,0x2b
  41f797:	xlat   BYTE PTR ds:[ebx]
  41f798:	mul    DWORD PTR [edx+eax*2-0x7d0dc456]
  41f79f:	push   eax
  41f7a0:	aas    
  41f7a1:	sahf   
  41f7a2:	cmp    BYTE PTR [ebp+0x54384932],bh
  41f7a8:	lahf   
  41f7a9:	int3   
  41f7aa:	cmp    BYTE PTR [edx],0xe1
  41f7ad:	or     dh,BYTE PTR [ebp-0x6f]
  41f7b0:	jno    0x41f7e6
  41f7b2:	add    eax,ecx
  41f7b4:	jo     0x41f7b6
  41f7b6:	jecxz  0x41f74f
  41f7b8:	jno    0x41f7d6
  41f7ba:	sti    
  41f7bb:	rol    esp,0x84
  41f7be:	sub    ebp,eax
  41f7c0:	mov    ah,0x5e
  41f7c2:	mov    gs,WORD PTR [edx]
  41f7c4:	lods   eax,DWORD PTR ds:[esi]
  41f7c5:	dec    eax
  41f7c6:	fst    DWORD PTR [edi+0xe3b3161]
  41f7cc:	fdiv   st(5),st
  41f7ce:	or     al,0x4
  41f7d0:	xlat   BYTE PTR ds:[ebx]
  41f7d1:	mov    al,0xf9
  41f7d3:	int    0xe4
  41f7d5:	rcl    DWORD PTR [ebx+0x63],1
  41f7d8:	(bad)  
  41f7d9:	mov    eax,0x12330364
  41f7de:	jno    0x41f7cd
  41f7e0:	push   es
  41f7e1:	ds iret 
  41f7e3:	outs   dx,DWORD PTR ds:[esi]
  41f7e4:	ins    DWORD PTR es:[edi],dx
  41f7e5:	retf   0x596b
  41f7e8:	jle    0x41f7a9
  41f7ea:	imul   esi,DWORD PTR [ebp-0x65],0x42ad8bc4
  41f7f1:	enter  0xf75a,0x4a
  41f7f5:	sbb    eax,0xf46fd970
  41f7fa:	pop    ebx
  41f7fb:	fsubr  QWORD PTR [esi+esi*2]
  41f7fe:	stos   DWORD PTR es:[edi],eax
  41f7ff:	and    dl,cl
  41f801:	pop    es
  41f802:	jbe    0x41f853
  41f804:	pop    ds
  41f805:	push   esp
  41f806:	enter  0x8633,0x3b
  41f80a:	(bad)  
  41f80b:	mov    cl,0x92
  41f80d:	jg     0x41f7ab
  41f80f:	aam    0x44
  41f811:	(bad)  
  41f812:	push   edx
  41f813:	sti    
  41f814:	aam    0x18
  41f816:	out    0xc0,eax
  41f818:	xchg   al,ah
  41f81a:	fcomp  QWORD PTR [esi+0x12ea02bf]
  41f820:	mov    eax,ds:0x51135649
  41f825:	mov    esp,0x3c294deb
  41f82a:	mov    edx,0xe78c4751
  41f82f:	jb     0x41f86a
  41f831:	adc    DWORD PTR [edi],esp
  41f833:	jle    0x41f86b
  41f835:	xchg   esp,eax
  41f836:	jns    0x41f7eb
  41f838:	cmp    eax,0xed40c498
  41f83d:	(bad)  
  41f83e:	pcmpeqd mm6,QWORD PTR [ebx-0x6b011aec]
  41f845:	pop    ds
  41f846:	mov    al,ds:0x83ca9c46
  41f84b:	or     eax,0xb65eb277
  41f850:	in     eax,dx
  41f851:	sahf   
  41f852:	pop    esp
  41f853:	hlt    
  41f854:	pop    ebx
  41f855:	clc    
  41f856:	add    eax,0x10c69774
  41f85b:	sbb    al,ah
  41f85d:	mov    al,ds:0xf2e68326
  41f862:	cli    
  41f863:	cwde   
  41f864:	cmp    esi,ebx
  41f866:	outs   dx,BYTE PTR ds:[esi]
  41f867:	lahf   
  41f868:	in     eax,dx
  41f869:	mov    BYTE PTR [esi-0x1ef9c2a],dh
  41f86f:	adc    eax,0x17624ca0
  41f874:	int    0xa3
  41f876:	pop    edx
  41f877:	out    0x98,al
  41f879:	pop    es
  41f87a:	lods   eax,DWORD PTR ds:[esi]
  41f87b:	push   ecx
  41f87c:	ds add al,0x25
  41f87f:	mov    dl,0x5
  41f881:	lods   eax,DWORD PTR ds:[esi]
  41f882:	mov    esp,DWORD PTR [ebp+0x54]
  41f885:	ins    BYTE PTR es:[edi],dx
  41f886:	xor    eax,0x88d8885c
  41f88b:	lds    edx,FWORD PTR [esi]
  41f88d:	(bad)  
  41f88e:	cld    
  41f88f:	into   
  41f890:	pop    edi
  41f891:	add    esp,DWORD PTR ds:[ecx]
  41f894:	push   esi
  41f895:	pop    esp
  41f896:	xchg   DWORD PTR [ebx],edx
  41f898:	or     cl,ah
  41f89a:	and    eax,edi
  41f89c:	lods   eax,DWORD PTR ds:[esi]
  41f89d:	sub    al,0x45
  41f89f:	cwde   
  41f8a0:	mov    cs,WORD PTR [eax]
  41f8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a3:	pop    esi
  41f8a4:	addr16 mov edi,0x9ef25786
  41f8aa:	dec    edi
  41f8ab:	add    ebx,DWORD PTR [esi-0x4e]
  41f8ae:	(bad)
  41f8b2:	dec    edi
  41f8b3:	shr    bl,cl
  41f8b5:	outs   dx,BYTE PTR ds:[esi]
  41f8b6:	neg    DWORD PTR [ebx]
  41f8b8:	inc    ecx
  41f8b9:	lds    ebx,FWORD PTR [ecx+esi*8+0x200bcf6]
  41f8c0:	mov    al,0x86
  41f8c2:	scas   al,BYTE PTR es:[edi]
  41f8c3:	push   0x21
  41f8c5:	inc    ebx
  41f8c6:	xor    eax,DWORD PTR ds:0x7e63fa43
  41f8cc:	daa    
  41f8cd:	neg    BYTE PTR [edi+0x7746d38d]
  41f8d3:	dec    eax
  41f8d4:	sub    BYTE PTR [edi],0xe5
  41f8d7:	sets   BYTE PTR [ebp-0x1998d9a2]
  41f8de:	pop    ebx
  41f8df:	pop    ebp
  41f8e0:	add    al,0x5a
  41f8e2:	push   ecx
  41f8e3:	test   eax,0xdf9d4f5c
  41f8e8:	pushf  
  41f8e9:	mov    ebx,DWORD PTR [edi-0x529a136a]
  41f8ef:	lea    edi,[ebx-0x77f55b77]
  41f8f5:	rcl    DWORD PTR [eax],1
  41f8f7:	inc    ecx
  41f8f9:	ds mov dh,0xaf
  41f8fc:	(bad)  
  41f8fd:	xchg   edi,eax
  41f8fe:	mov    ebp,0xf941ef7d
  41f903:	js     0x41f946
  41f905:	push   ebx
  41f906:	jmp    0xbfd2574b
  41f90b:	xor    BYTE PTR [esi],dh
  41f90d:	(bad)  
  41f90e:	fcmovnb st,st(1)
  41f910:	sub    DWORD PTR [edx],esi
  41f912:	push   ebp
  41f913:	jmp    0x41f90d
  41f915:	push   ecx
  41f916:	sub    BYTE PTR [ebp-0x5f],dl
  41f919:	stos   BYTE PTR es:[edi],al
  41f91a:	fcomip st,st(1)
  41f91c:	mov    bh,BYTE PTR [ebp+0x6b34eb92]
  41f922:	jmp    DWORD PTR [eax+0xc]
  41f925:	mov    cl,0x58
  41f927:	jnp    0x41f8ea
  41f929:	repnz adc eax,0x7d042518
  41f92f:	cmp    eax,DWORD PTR [ebx+0x3e]
  41f932:	js     0x41f8d9
  41f934:	mov    ds:0x5bc8e6a3,eax
  41f939:	xor    al,0x77
  41f93b:	cmp    edi,DWORD PTR [eax-0x5f]
  41f93e:	call   0x480d8b91
  41f943:	mov    ds:0x89e97327,eax
  41f948:	outs   dx,BYTE PTR ds:[esi]
  41f949:	daa    
  41f94a:	rcr    DWORD PTR [edx-0x4c],1
  41f94d:	inc    esi
  41f94e:	jo     0x41f98c
  41f950:	add    eax,DWORD PTR [edx]
  41f952:	fisubr WORD PTR [edi-0x917d119]
  41f958:	mov    ecx,DWORD PTR [edi]
  41f95a:	xchg   ebp,eax
  41f95b:	lods   al,BYTE PTR ds:[esi]
  41f95c:	idiv   DWORD PTR [eax+ecx*4]
  41f95f:	nop
  41f960:	xchg   esi,eax
  41f961:	sbb    BYTE PTR [edi+0x2f],dl
  41f964:	aas    
  41f965:	mov    WORD PTR [edx+0xfc29ca5],ds
  41f96b:	(bad)  
  41f96c:	jo     0x41f98a
  41f96e:	cld    
  41f96f:	(bad)  
  41f970:	aad    0xaf
  41f972:	xchg   esi,eax
  41f973:	popf   
  41f974:	add    cl,dl
  41f976:	push   esi
  41f977:	pop    ds
  41f978:	pop    ebx
  41f979:	add    DWORD PTR [edx+0x31],0xe6d63a30
  41f980:	push   ebp
  41f981:	or     eax,0x99a4d4a1
  41f986:	sub    edi,DWORD PTR [ebx-0x41e902ca]
  41f98c:	jmp    0x41f9eb
  41f98e:	mov    ebp,edx
  41f990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f991:	iret   
  41f992:	xchg   esp,eax
  41f993:	psrlq  mm5,mm2
  41f996:	or     DWORD PTR [eax-0x427f9e87],edi
  41f99c:	push   ds
  41f99d:	int    0x28
  41f99f:	inc    esp
  41f9a0:	cli    
  41f9a1:	mov    esp,0xfa85fdb9
  41f9a6:	dec    edi
  41f9a7:	xchg   ebx,eax
  41f9a8:	or     ebx,esi
  41f9aa:	mov    edx,0x4435bcc1
  41f9af:	jmp    0x41f9ec
  41f9b1:	repnz push esi
  41f9b3:	scas   eax,DWORD PTR es:[di]
  41f9b5:	into   
  41f9b6:	mov    edi,0x8b5e5eac
  41f9bb:	mov    ebx,0x56635514
  41f9c0:	cmp    eax,0xefe0a8ef
  41f9c5:	int3   
  41f9c6:	jae    0x41f958
  41f9c8:	mov    ch,0x12
  41f9ca:	inc    ebx
  41f9cb:	je     0x41f9bf
  41f9cd:	daa    
  41f9ce:	adc    al,0xdb
  41f9d0:	ss inc ecx
  41f9d2:	ins    DWORD PTR es:[edi],dx
  41f9d3:	jnp    0x41f9c7
  41f9d5:	mov    edx,0xa68ec77d
  41f9da:	push   ss
  41f9db:	xchg   edx,eax
  41f9dc:	and    BYTE PTR [edi+edx*1-0x4a],al
  41f9e0:	add    dl,BYTE PTR [ecx+edx*2+0x1045cfe8]
  41f9e7:	xchg   esi,eax
  41f9e8:	sub    eax,0xa307777e
  41f9ed:	bound  esp,QWORD PTR ds:0x61a3b109
  41f9f3:	push   ebp
  41f9f4:	adc    eax,0x393f8ec6
  41f9f9:	sub    dl,BYTE PTR [edi-0x3c43ccce]
  41f9ff:	stos   BYTE PTR es:[edi],al
  41fa00:	outs   dx,DWORD PTR ds:[esi]
  41fa01:	aam    0x9e
  41fa03:	cmp    ah,al
  41fa05:	ss jb  0x41f9cf
  41fa08:	vpsubw xmm0,xmm5,XMMWORD PTR [ecx+0x4e6e417f]
  41fa10:	stos   BYTE PTR es:[edi],al
  41fa11:	mov    ds:0x674f9438,al
  41fa16:	or     ax,0x2e2e
  41fa1a:	dec    eax
  41fa1b:	mov    esi,0x848cc9f1
  41fa20:	ret    0xac96
  41fa23:	arpl   sp,di
  41fa25:	or     BYTE PTR [edx+ecx*4],al
  41fa28:	lods   eax,DWORD PTR gs:[esi]
  41fa2a:	scas   eax,DWORD PTR es:[edi]
  41fa2b:	sar    BYTE PTR [ecx],cl
  41fa2d:	ins    DWORD PTR es:[edi],dx
  41fa2e:	leave  
  41fa2f:	mov    eax,ds:0x7b682b21
  41fa34:	dec    esp
  41fa35:	pop    ebp
  41fa36:	aam    0xd8
  41fa38:	outs   dx,BYTE PTR ds:[esi]
  41fa39:	inc    edi
  41fa3a:	cmp    ah,BYTE PTR [ecx-0x6b]
  41fa3d:	push   es
  41fa3e:	inc    esp
  41fa3f:	xchg   BYTE PTR [edi+edi*1+0xc2269d6],cl
  41fa46:	push   ss
  41fa47:	pop    ds
  41fa48:	sub    eax,0xe8787355
  41fa4d:	pop    ss
  41fa4e:	push   ebx
  41fa4f:	outs   dx,DWORD PTR ds:[esi]
  41fa50:	mov    al,0x69
  41fa52:	fadd   QWORD PTR [edi+edi*1-0x4cec94aa]
  41fa59:	pop    ebx
  41fa5a:	clc    
  41fa5b:	(bad)  
  41fa5c:	pop    esp
  41fa5d:	xchg   ecx,eax
  41fa5e:	inc    esi
  41fa5f:	aas    
  41fa60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa61:	cli    
  41fa62:	mov    bl,0x37
  41fa64:	mov    ebx,0x3f744999
  41fa69:	adc    dl,BYTE PTR [ebp+0x415e1a9b]
  41fa6f:	jns    0x41fa0b
  41fa71:	inc    edx
  41fa72:	clc    
  41fa73:	call   0xec04:0xa02705ef
  41fa7a:	setg   BYTE PTR [edx+edi*2]
  41fa7e:	cwde   
  41fa7f:	scas   al,BYTE PTR es:[edi]
  41fa80:	movlps xmm6,QWORD PTR [ebx+eiz*4-0x27]
  41fa85:	outs   dx,BYTE PTR ds:[esi]
  41fa86:	push   DWORD PTR [edx]
  41fa88:	inc    edx
  41fa89:	daa    
  41fa8a:	in     eax,dx
  41fa8b:	test   DWORD PTR [eax-0x44169fba],0x1056bee3
  41fa95:	mov    esi,0xec167d65
  41fa9a:	xor    edx,edi
  41fa9c:	ja     0x41fafe
  41fa9e:	stos   DWORD PTR es:[edi],eax
  41fa9f:	jle    0x41fae9
  41faa1:	out    0x5c,al
  41faa3:	fcomp  DWORD PTR [eax+0x24071d78]
  41faa9:	fmul   DWORD PTR [ebx-0x49]
  41faac:	jb     0x41fa8d
  41faae:	arpl   WORD PTR [ecx+ebp*2-0x36dd4e31],ax
  41fab5:	ss xor al,0xab
  41fab8:	sub    DWORD PTR [ebx],0x52
  41fabb:	sbb    BYTE PTR [ebp+ebx*2+0xa91083c],ch
  41fac2:	add    al,0x71
  41fac4:	pop    ss
  41fac5:	(bad)  
  41fac6:	and    al,0x73
  41fac8:	test   DWORD PTR [ecx-0x63],eax
  41facb:	aad    0xa4
  41facd:	xor    al,0x80
  41facf:	or     ebx,ebp
  41fad1:	cmp    cl,BYTE PTR [ecx+0x32]
  41fad4:	pop    edi
  41fad5:	pop    edx
  41fad6:	pop    ecx
  41fad7:	xor    eax,0xc3752e77
  41fadc:	sti    
  41fadd:	and    BYTE PTR [eax],bh
  41fadf:	test   DWORD PTR [ebp-0x6daf50c9],ebx
  41fae5:	xchg   edx,eax
  41fae6:	and    BYTE PTR [eax],ah
  41fae8:	scas   al,BYTE PTR es:[edi]
  41fae9:	mov    DWORD PTR [esi],eax
  41faeb:	test   al,0x8c
  41faed:	add    al,0x65
  41faef:	loopne 0x41fb3a
  41faf1:	inc    edi
  41faf2:	mov    dl,0x6b
  41faf4:	cmp    bh,cl
  41faf6:	push   ss
  41faf7:	loop   0x41fae2
  41faf9:	scas   al,BYTE PTR es:[edi]
  41fafa:	cmp    esi,0xd278deaa
  41fb00:	mov    dl,BYTE PTR [esi-0x1c]
  41fb03:	sub    DWORD PTR [edx+0x59],edi
  41fb06:	jne    0x41fad9
  41fb08:	push   ss
  41fb09:	ss in  al,0x2a
  41fb0c:	pop    edx
  41fb0d:	sbb    eax,0x14ae5887
  41fb12:	mov    edx,0x78509a9
  41fb17:	or     DWORD PTR [edx],esp
  41fb19:	(bad)  
  41fb1a:	jmp    0x41fb13
  41fb1c:	in     al,0x61
  41fb1e:	fbstp  TBYTE PTR [ecx+0x5e]
  41fb21:	std    
  41fb22:	cmp    eax,0xd49d8dc1
  41fb27:	not    DWORD PTR [ebp+0x7dfca9cf]
  41fb2d:	inc    edx
  41fb2e:	and    BYTE PTR [esi+0x75],bh
  41fb31:	or     DWORD PTR [esi-0x3d],ebp
  41fb34:	cmp    al,0x47
  41fb36:	adc    al,0xc2
  41fb38:	icebp  
  41fb39:	das    
  41fb3a:	sub    al,0xdc
  41fb3c:	leave  
  41fb3d:	sub    al,0xef
  41fb3f:	push   0x2c1205fa
  41fb44:	mov    al,ds:0x20fcfd61
  41fb49:	dec    eax
  41fb4a:	inc    esi
  41fb4b:	jmp    0x41fb5e
  41fb4d:	popa   
  41fb4e:	mov    DWORD PTR [eax-0x4bb5d649],ecx
  41fb54:	clc    
  41fb55:	test   eax,0x84f8735b
  41fb5a:	cmp    DWORD PTR [ebx+0x33],esi
  41fb5d:	shl    DWORD PTR [ebx+0x48a0f483],1
  41fb63:	mov    bl,0x21
  41fb65:	dec    ecx
  41fb66:	jb     0x41fbaa
  41fb68:	stos   DWORD PTR es:[edi],eax
  41fb69:	xchg   DWORD PTR ds:[edx+ebx*2],ecx
  41fb6d:	pop    ecx
  41fb6e:	mov    al,ds:0x9c1b3c18
  41fb73:	lahf   
  41fb74:	pop    edi
  41fb75:	dec    esi
  41fb76:	in     eax,dx
  41fb77:	adc    al,0xf6
  41fb79:	push   0xffffffe6
  41fb7b:	div    DWORD PTR [ebx-0x707eba74]
  41fb81:	or     BYTE PTR [esi-0x3d],ah
  41fb84:	sbb    BYTE PTR [ebp-0x5b89820b],ah
  41fb8a:	cld    
  41fb8b:	ror    BYTE PTR [edi+0x3a7e8e31],1
  41fb91:	cld    
  41fb92:	out    dx,eax
  41fb93:	jmp    0x123c:0x78b14be4
  41fb9a:	scas   al,BYTE PTR es:[edi]
  41fb9b:	push   edi
  41fb9c:	sub    ebx,DWORD PTR [edi+ebx*4+0x11bb6270]
  41fba3:	cmp    DWORD PTR gs:[edi],ebx
  41fba6:	(bad)  
  41fba7:	cmp    BYTE PTR [ebx-0x768d56e4],ch
  41fbad:	mov    eax,ds:0xa72c7f33
  41fbb2:	jno    0x41fbbe
  41fbb4:	cmp    dh,cl
  41fbb6:	xor    BYTE PTR [ebp+0x4bbfcb0c],dl
  41fbbc:	pop    esi
  41fbbd:	in     eax,0xa2
  41fbbf:	mov    al,ds:0x19ece5ea
  41fbc4:	ins    BYTE PTR es:[edi],dx
  41fbc5:	sbb    BYTE PTR ds:0x9ba3a304,ah
  41fbcb:	loopne 0x41fbaa
  41fbcd:	add    cl,BYTE PTR [edx+ebp*8-0x63]
  41fbd1:	sub    dl,al
  41fbd3:	leave  
  41fbd4:	psubb  mm0,QWORD PTR [edx]
  41fbd7:	pop    esi
  41fbd8:	xor    BYTE PTR ds:0x4b06a47,ah
  41fbde:	arpl   WORD PTR [ecx-0x24290623],di
  41fbe4:	sbb    al,0x20
  41fbe6:	es push es
  41fbe8:	pusha  
  41fbe9:	jle    0x41fc37
  41fbeb:	inc    ecx
  41fbec:	mov    WORD PTR ds:0x7a4d581a,gs
  41fbf2:	push   eax
  41fbf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf4:	ficomp WORD PTR [esi+0x6117dba1]
  41fbfa:	inc    esi
  41fbfb:	addr16 xchg edx,eax
  41fbfd:	inc    esp
  41fbfe:	jge    0x41fc42
  41fc00:	mov    edi,0x5a9a8520
  41fc05:	and    ecx,DWORD PTR [edx]
  41fc07:	xchg   ebp,eax
  41fc08:	retf   
  41fc09:	iret   
  41fc0a:	sub    esp,ebx
  41fc0c:	cli    
  41fc0d:	test   BYTE PTR [esi-0x144b3d9c],bl
  41fc13:	icebp  
  41fc14:	inc    eax
  41fc15:	es xchg ebp,eax
  41fc17:	sti    
  41fc18:	lds    edi,FWORD PTR [esi+0x70]
  41fc1b:	xor    ecx,DWORD PTR [esi+0x50e062d2]
  41fc21:	jmp    0x2669:0x1dfd980a
  41fc28:	lods   al,BYTE PTR ds:[esi]
  41fc29:	popa   
  41fc2a:	(bad)  
  41fc2d:	jnp    0x41fc14
  41fc2f:	adc    ah,BYTE PTR [esi]
  41fc31:	xor    al,0xea
  41fc33:	stos   DWORD PTR es:[edi],eax
  41fc34:	xor    DWORD PTR fs:0x782a66db,0x9d6e8af2
  41fc3f:	retf   
  41fc40:	js     0x41fc92
  41fc42:	mov    eax,ds:0xb374fddb
  41fc47:	retf   0x706
  41fc4a:	repnz cmc 
  41fc4c:	cli    
  41fc4d:	ror    DWORD PTR [edi+0x2e],cl
  41fc50:	jb     0x41fc78
  41fc52:	stos   BYTE PTR es:[edi],al
  41fc53:	cdq    
  41fc54:	push   0xffffffe1
  41fc56:	mov    BYTE PTR [eax-0x54e97b8c],dh
  41fc5c:	sbb    dl,BYTE PTR [ebx-0x359f8c62]
  41fc62:	pop    esi
  41fc63:	mov    eax,0xb0809d0b
  41fc68:	sbb    al,0x5f
  41fc6a:	jae    0x41fc7a
  41fc6c:	mov    ebx,0x44823d99
  41fc71:	and    DWORD PTR ds:0xb73c66d9,esi
  41fc77:	jb     0x41fc23
  41fc79:	(bad)  [ecx]
  41fc7b:	pop    ss
  41fc7c:	in     al,dx
  41fc7d:	pop    ecx
  41fc7e:	xor    eax,DWORD PTR [edx-0x21b12be8]
  41fc84:	rol    BYTE PTR [ebx-0x17c8a085],0xaa
  41fc8b:	nop
  41fc8c:	ds out 0x40,eax
  41fc8f:	jg     0x41fd0a
  41fc91:	cmc    
  41fc92:	jmp    0xc345:0x7023bb82
  41fc99:	xchg   esp,eax
  41fc9a:	jmp    0x3647:0x1d060029
  41fca1:	mov    DWORD PTR [ebp-0x39cf3152],edx
  41fca7:	fs mov ebp,0xcba38db
  41fcad:	cmp    BYTE PTR [eax-0x78],dh
  41fcb0:	out    dx,eax
  41fcb1:	cmova  eax,DWORD PTR [edi+0x22]
  41fcb5:	mov    dh,0xc8
  41fcb7:	xchg   ebp,eax
  41fcb8:	(bad)  
  41fcb9:	mov    ah,0x7a
  41fcbb:	mov    BYTE PTR [edi+0x5db5440],dl
  41fcc1:	fstp   QWORD PTR [edx+ebx*8+0xac0fae3]
  41fcc8:	sub    BYTE PTR [edi+0x59a81a2b],dl
  41fcce:	and    DWORD PTR [ebx-0x38],ebp
  41fcd1:	sahf   
  41fcd2:	jo     0x41fce7
  41fcd4:	xchg   esp,eax
  41fcd5:	jg     0x41fd4a
  41fcd7:	mov    ah,0xba
  41fcd9:	dec    esp
  41fcda:	ds push esp
  41fcdc:	jge    0x41fd20
  41fcde:	inc    edi
  41fcdf:	(bad)  
  41fce0:	xor    esp,DWORD PTR [edx-0x62]
  41fce3:	rcr    BYTE PTR [edx+ecx*4+0x6b],0x94
  41fce8:	sbb    al,0x64
  41fcea:	jle    0x41fd2b
  41fcec:	shl    BYTE PTR [ebx-0x4ecfc814],0xf2
  41fcf3:	les    edi,FWORD PTR [edx]
  41fcf5:	js     0x41fca6
  41fcf7:	inc    esi
  41fcf8:	stc    
  41fcf9:	add    al,0x74
  41fcfb:	or     edi,edx
  41fcfd:	dec    esi
  41fcfe:	lds    edi,FWORD PTR [eax+edi*1]
  41fd01:	dec    esi
  41fd02:	fadd   QWORD PTR [edi-0x2d792098]
  41fd08:	push   ds
  41fd09:	nop
  41fd0a:	cmp    BYTE PTR [esi],bh
  41fd0c:	les    ebp,FWORD PTR [eax+0x55383d4e]
  41fd12:	jmp    0xda6a:0xdb20719e
  41fd19:	or     ax,0xab71
  41fd1d:	pop    edx
  41fd1e:	popa   
  41fd1f:	sub    bl,BYTE PTR [ecx-0x1e1ea10]
  41fd25:	inc    ebx
  41fd26:	mov    bl,0xed
  41fd28:	mov    al,0x6a
  41fd2a:	push   es
  41fd2b:	das    
  41fd2c:	jg     0x41fceb
  41fd2e:	inc    edi
  41fd2f:	outs   dx,DWORD PTR ds:[esi]
  41fd30:	add    al,0x4f
  41fd32:	shr    BYTE PTR [ebx],cl
  41fd34:	outs   dx,DWORD PTR ds:[esi]
  41fd35:	sti    
  41fd36:	mov    ecx,0x4c487143
  41fd3b:	and    eax,0x943b159a
  41fd40:	in     al,0xd4
  41fd42:	out    dx,eax
  41fd43:	fistp  DWORD PTR [ebp-0x7b]
  41fd46:	fldenv [eax+0x62]
  41fd49:	scas   al,BYTE PTR es:[edi]
  41fd4a:	jmp    0xcba3fe81
  41fd4f:	stos   DWORD PTR es:[edi],eax
  41fd50:	sbb    cl,BYTE PTR [ebx-0x28ca69ce]
  41fd56:	xchg   esp,eax
  41fd57:	and    dl,ch
  41fd59:	data16 (bad) 
  41fd5b:	pop    edi
  41fd5c:	rcr    BYTE PTR [edx+0x4],cl
  41fd5f:	cmc    
  41fd60:	aaa    
  41fd61:	mov    WORD PTR [edx+0x438f0ea],ss
  41fd67:	sbb    bh,BYTE PTR [edi-0x4a]
  41fd6a:	adc    dl,BYTE PTR [esi-0x588a661b]
  41fd70:	sbb    BYTE PTR [esi],ch
  41fd72:	cmp    BYTE PTR [ecx],ah
  41fd74:	lahf   
  41fd75:	rcr    DWORD PTR [ebx],1
  41fd77:	xchg   BYTE PTR [edx-0x55a96a34],dl
  41fd7d:	xor    bh,al
  41fd7f:	leave  
  41fd80:	ja     0x41fd22
  41fd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd83:	in     al,dx
  41fd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd85:	inc    ecx
  41fd86:	stos   BYTE PTR es:[edi],al
  41fd87:	mul    ch
  41fd89:	repnz sub ecx,ebp
  41fd8c:	xlat   BYTE PTR cs:[ebx]
  41fd8e:	push   ss
  41fd8f:	mov    ds:0xc71b9ce8,eax
  41fd94:	push   0x42
  41fd96:	or     eax,0x36564465
  41fd9b:	xchg   ecx,eax
  41fd9c:	jnp    0x41fd8c
  41fd9e:	mov    fs,esi
  41fda0:	movlps xmm0,QWORD PTR [esi+0x268d944d]
  41fda7:	sbb    al,0x2b
  41fda9:	in     eax,dx
  41fdaa:	pop    ss
  41fdab:	and    DWORD PTR [esi+0xf],eax
  41fdae:	hlt    
  41fdaf:	into   
  41fdb0:	sahf   
  41fdb1:	(bad)  
  41fdb2:	ss sti 
  41fdb4:	cld    
  41fdb5:	push   0xffffffca
  41fdb7:	xor    dl,BYTE PTR [ecx]
  41fdb9:	mov    bh,0x3a
  41fdbb:	xchg   esi,eax
  41fdbc:	add    BYTE PTR [edi],bh
  41fdbe:	xchg   edi,ebp
  41fdc0:	xchg   ebp,eax
  41fdc1:	shl    DWORD PTR [eax+0x10],1
  41fdc4:	xchg   ebx,eax
  41fdc5:	add    esi,DWORD PTR [edx+0x564f4f4b]
  41fdcb:	inc    eax
  41fdcc:	pop    es
  41fdcd:	stos   BYTE PTR es:[edi],al
  41fdce:	adc    cl,al
  41fdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd1:	imul   esi,DWORD PTR [ecx+0x62ab8c43],0xf0dbc794
  41fddb:	push   edi
  41fddc:	jns    0x41fe00
  41fdde:	mov    esp,0x7d1b7288
  41fde3:	add    DWORD PTR [ecx+ebx*8+0x210cf580],0xb750815f
  41fdee:	mov    esp,0x37a5875
  41fdf3:	pop    es
  41fdf4:	push   esi
  41fdf5:	sti    
  41fdf6:	imul   ecx,DWORD PTR [eax*8+0x3da4cafe],0x277abbac
  41fe01:	or     dh,BYTE PTR [esi+0x7182671f]
  41fe07:	out    0xd6,eax
  41fe09:	in     al,dx
  41fe0a:	(bad)  
  41fe0b:	sbb    ah,cl
  41fe0d:	xor    al,0x8a
  41fe0f:	add    edi,DWORD PTR [ebx]
  41fe11:	imul   esi,DWORD PTR [ecx],0x6b46635d
  41fe17:	mov    ds:0xbe6a9812,al
  41fe1c:	adc    bl,bh
  41fe1e:	push   ss
  41fe1f:	int    0x27
  41fe21:	out    dx,eax
  41fe22:	xchg   ebp,eax
  41fe23:	in     al,0xe0
  41fe25:	adc    DWORD PTR [esi-0x724a793a],0xebebc9d9
  41fe2f:	fbstp  TBYTE PTR [ebx]
  41fe31:	mov    ebx,0xe49d2c69
  41fe36:	(bad)  
  41fe37:	jg     0x41fe6a
  41fe39:	mov    BYTE PTR [ebx],bl
  41fe3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3c:	cmp    bh,dl
  41fe3e:	unpcklps xmm4,XMMWORD PTR [ebx+0xc]
  41fe42:	inc    eax
  41fe43:	fwait
  41fe44:	(bad)  
  41fe45:	aam    0x6a
  41fe47:	dec    ebx
  41fe48:	in     eax,dx
  41fe49:	mov    ch,0x1
  41fe4b:	add    eax,0x2fecd3d0
  41fe50:	xchg   edx,eax
  41fe51:	inc    ebp
  41fe52:	ins    DWORD PTR es:[edi],dx
  41fe53:	jl     0x41feae
  41fe55:	jle    0x41fe98
  41fe57:	jmp    0x41fece
  41fe59:	mov    gs,WORD PTR [ebx]
  41fe5b:	mov    al,ds:0xaa009a3d
  41fe60:	push   ds
  41fe61:	sar    BYTE PTR [ebp-0x56],cl
  41fe64:	jno    0x41fdec
  41fe66:	aaa    
  41fe67:	cmp    eax,0x927b0d9e
  41fe6c:	and    ecx,DWORD PTR [ecx-0x51]
  41fe6f:	push   edx
  41fe70:	xor    bl,bl
  41fe72:	call   0xd375fecb
  41fe77:	sti    
  41fe78:	daa    
  41fe79:	pop    es
  41fe7a:	lock fisttp DWORD PTR [ecx+0x0]
  41fe7e:	jmp    0x41fe78
  41fe80:	mov    al,0x4d
  41fe82:	ror    DWORD PTR [ebx+0x73ea2902],cl
  41fe88:	dec    ebx
  41fe89:	and    esi,DWORD PTR ds:0x100096dd
  41fe8f:	rcl    BYTE PTR [esi+0x78],1
  41fe92:	gs out 0x9,eax
  41fe95:	out    0x49,al
  41fe97:	or     al,0xda
  41fe99:	cmc    
  41fe9a:	push   ebx
  41fe9b:	and    eax,0xa6cfcde5
  41fea0:	inc    edx
  41fea1:	jne    0x41fed2
  41fea3:	add    cl,bl
  41fea5:	mov    al,ds:0xd1dab5fb
  41feaa:	sahf   
  41feab:	xlat   BYTE PTR ds:[ebx]
  41feac:	int    0xf7
  41feae:	or     BYTE PTR ds:0xae2ac80,dh
  41feb4:	dec    esi
  41feb5:	or     ebp,DWORD PTR [esi]
  41feb7:	ffree  st(6)
  41feb9:	sub    ebp,ebp
  41febb:	sub    ebp,DWORD PTR [ebx+0x4b]
  41febe:	js     0x41fef1
  41fec0:	popf   
  41fec1:	fsubr  DWORD PTR [ebp-0x63db52c2]
  41fec7:	cli    
  41fec8:	test   al,0x76
  41feca:	cmp    eax,0xc364cc49
  41fecf:	adc    BYTE PTR [edx+0x21],0xa1
  41fed3:	cmp    BYTE PTR [bp+0x3b75],bl
  41fed8:	in     eax,0xde
  41feda:	fcom   QWORD PTR [ecx-0x4603c954]
  41fee0:	or     dh,BYTE PTR [edx]
  41fee2:	pop    ss
  41fee3:	pop    edx
  41fee4:	cld    
  41fee5:	dec    edi
  41fee6:	outs   dx,DWORD PTR ds:[esi]
  41fee7:	mov    ebx,DWORD PTR [eax+0x2686f702]
  41feed:	cs ja  0x41fee7
  41fef0:	xor    eax,0x23482ffc
  41fef5:	push   ss
  41fef6:	int    0x1f
  41fef8:	mov    eax,0xd39e6eb8
  41fefd:	push   esp
  41fefe:	out    dx,eax
  41feff:	pop    ebp
  41ff00:	imul   edi,DWORD PTR [edi],0x1e127fe2
  41ff06:	xor    eax,0x91c80375
  41ff0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff0c:	dec    ebx
  41ff0d:	xor    ecx,DWORD PTR gs:0x4a38cca4
  41ff14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff15:	loopne 0x41ff1b
  41ff17:	push   ds
  41ff18:	scas   eax,DWORD PTR es:[edi]
  41ff19:	adc    DWORD PTR ds:0xbafa39dc,eax
  41ff1f:	mov    ebx,ebp
  41ff21:	scas   al,BYTE PTR es:[edi]
  41ff22:	jb     0x41ff9f
  41ff24:	lods   eax,DWORD PTR ds:[esi]
  41ff25:	nop
  41ff26:	sbb    ch,BYTE PTR [eax-0x4596b316]
  41ff2c:	mov    bh,0x74
  41ff2e:	lea    ecx,[edx-0x364cde26]
  41ff34:	pop    ds
  41ff35:	add    eax,0xd2f15ea6
  41ff3a:	retf   
  41ff3b:	xchg   ebx,eax
  41ff3c:	adc    ch,cl
  41ff3e:	fcom   st(5)
  41ff40:	or     eax,0xb37d655f
  41ff45:	into   
  41ff46:	inc    esi
  41ff47:	out    0xf9,eax
  41ff49:	mov    ds:0xbfeeab32,al
  41ff4e:	in     al,dx
  41ff4f:	retf   
  41ff50:	js     0x41fee9
  41ff52:	call   0x4c187045
  41ff57:	stos   DWORD PTR es:[edi],eax
  41ff58:	sbb    eax,0xb73f7d9
  41ff5d:	xor    DWORD PTR [ebx-0x62],ebx
  41ff60:	push   0x3d
  41ff62:	icebp  
  41ff63:	cmp    BYTE PTR [ebp-0xa6b4296],ch
  41ff69:	cmc    
  41ff6a:	jo     0x41ff1d
  41ff6c:	mov    edx,0xd52eb3a4
  41ff71:	push   edi
  41ff72:	or     bl,BYTE PTR [edi]
  41ff74:	sub    esi,DWORD PTR [edi+0x39]
  41ff77:	out    dx,al
  41ff78:	fnstcw WORD PTR [ebx+0x7d]
  41ff7b:	mov    cl,0x7d
  41ff7d:	push   es
  41ff7e:	dec    esi
  41ff7f:	xor    eax,DWORD PTR [edi-0x2]
  41ff82:	xlat   BYTE PTR ds:[ebx]
  41ff83:	and    al,0x9e
  41ff85:	xchg   esp,eax
  41ff86:	push   eax
  41ff87:	mov    eax,0xe22ed9b8
  41ff8c:	push   esi
  41ff8d:	cdq    
  41ff8e:	bound  esp,QWORD PTR [esi-0x3f]
  41ff91:	add    DWORD PTR [eax-0x6094422b],edi
  41ff97:	jns    0x41ff25
  41ff99:	xor    esp,0x5d
  41ff9c:	jo     0x41ffc3
  41ff9e:	jp     0x41ff65
  41ffa0:	adc    DWORD PTR [esi-0x2a],esi
  41ffa3:	and    dh,bl
  41ffa5:	xchg   ebp,eax
  41ffa6:	jl     0x41ff28
  41ffa8:	xor    dh,BYTE PTR [ecx]
  41ffaa:	mov    esp,0x964c536d
  41ffaf:	mov    bh,0x4e
  41ffb1:	mov    eax,0x83474f08
  41ffb6:	fmul   DWORD PTR [ecx-0x3a]
  41ffb9:	in     al,0x8e
  41ffbb:	jg     0x41fffe
  41ffbd:	jne    0x420010
  41ffbf:	les    edx,FWORD PTR [esi-0x2d6ec78]
  41ffc5:	(bad)  
  41ffc6:	loop   0x41ffcb
  41ffc8:	rcpps  xmm3,xmm6
  41ffcb:	cwde   
  41ffcc:	int    0xb9
  41ffce:	sbb    al,0x76
  41ffd0:	jmp    FWORD PTR [ecx]
  41ffd2:	fst    st(1)
  41ffd4:	mov    al,ds:0x5c0faacc
  41ffd9:	jmp    0xe7f1007a
  41ffde:	fcom   QWORD PTR [edx-0x71a0cd0e]
  41ffe4:	mov    bh,0x9b
  41ffe6:	aam    0xac
  41ffe8:	jo     0x41fffb
  41ffea:	lea    edx,[edx]
  41ffec:	mov    ch,0xec
  41ffee:	mov    cl,0x74
  41fff0:	pop    esi
  41fff1:	outs   dx,BYTE PTR ds:[esi]
  41fff2:	mov    esp,0x140cd54a
  41fff7:	lea    eax,[esi+0x137b5c16]
  41fffd:	test   al,0x6d
  41ffff:	jb     0x420077
  420001:	and    BYTE PTR [edx+0x2a],cl
  420004:	push   esp
  420005:	shl    DWORD PTR [ecx-0x73],cl
  420008:	inc    esp
  420009:	jae    0x420067
  42000b:	xchg   ebp,eax
  42000c:	icebp  
  42000d:	xor    al,0x27
  42000f:	call   0x7fd6:0xe31cb311
  420016:	into   
  420017:	xlat   BYTE PTR ds:[ebx]
  420018:	test   BYTE PTR [esi-0x66144b5c],bl
  42001e:	xor    al,0xa4
  420020:	jecxz  0x41ffdd
  420022:	mov    bh,0x0
  420024:	addr16 (bad) 
  420026:	mov    ds:0xb1d5d6e4,al
  42002b:	cld    
  42002c:	xchg   edi,eax
  42002d:	sbb    DWORD PTR [edx],0x3ed70965
  420033:	or     eax,0x40311c55
  420038:	cs or  ecx,edx
  42003b:	adc    al,0x3
  42003d:	sub    ah,bh
  42003f:	adc    eax,0x60e3b645
  420044:	jp     0x420071
  420046:	pop    es
  420047:	push   edx
  420048:	je     0x41ffde
  42004a:	pop    esp
  42004b:	mov    esp,0xa7381d65
  420050:	fs push ebx
  420052:	mov    al,ds:0x5e0508dd
  420057:	sub    al,0x6a
  420059:	imul   eax,DWORD PTR [eax-0x1c],0xb19455c7
  420060:	add    bl,BYTE PTR [eax+ebp*2-0x27dafb2d]
  420067:	xor    ah,dl
  420069:	mov    ecx,0xfca074e7
  42006e:	adc    cl,bl
  420070:	or     ebp,DWORD PTR [edi-0x53473d25]
  420076:	js     0x4200a2
  420078:	js     0x420031
  42007a:	call   0x85f1:0x5fb1bbf5
  420081:	xchg   edx,eax
  420082:	cmp    cl,al
  420084:	iret   
  420085:	and    DWORD PTR [eax+ebp*2+0x9fcb021],ecx
  42008c:	out    0x80,eax
  42008e:	pop    edi
  42008f:	js     0x4200a7
  420091:	ret    0x84af
  420094:	adc    al,0x57
  420096:	stc    
  420097:	or     al,0x8c
  420099:	call   0x2600:0x64eaea3
  4200a0:	in     eax,dx
  4200a1:	emms   
  4200a3:	hlt    
  4200a4:	outs   dx,BYTE PTR ds:[esi]
  4200a5:	ss int 0x61
  4200a8:	int    0x3b
  4200aa:	in     eax,0x0
  4200ac:	rol    DWORD PTR [ebx+0x7fefc054],1
  4200b2:	repnz sub al,0x9
  4200b5:	clc    
  4200b6:	popa   
  4200b7:	push   eax
  4200b8:	in     eax,dx
  4200b9:	iret   
  4200ba:	lods   al,BYTE PTR ds:[esi]
  4200bb:	push   edx
  4200bc:	shl    DWORD PTR [eax],1
  4200be:	imul   edx,ecx,0xffffff95
  4200c1:	mov    cl,ah
  4200c3:	neg    DWORD PTR [edx+eiz*1]
  4200c6:	pushf  
  4200c7:	add    al,0xf1
  4200c9:	stos   BYTE PTR es:[edi],al
  4200ca:	cmp    al,0x24
  4200cc:	xchg   ecx,eax
  4200cd:	fld    DWORD PTR [ebp+0x68863f1]
  4200d3:	pusha  
  4200d4:	and    bh,dh
  4200d6:	mov    dl,0xef
  4200d8:	ins    DWORD PTR es:[edi],dx
  4200d9:	ja     0x420088
  4200db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200dc:	push   edx
  4200dd:	pop    es
  4200de:	hlt    
  4200df:	adc    BYTE PTR [edx-0x65],dl
  4200e2:	scas   eax,DWORD PTR es:[edi]
  4200e3:	adc    DWORD PTR [ebp-0x6db576a9],ebp
  4200e9:	out    0x75,al
  4200eb:	push   cs
  4200ec:	arpl   sp,cx
  4200ee:	xchg   ebp,eax
  4200ef:	inc    edi
  4200f0:	and    DWORD PTR [edx],edi
  4200f2:	(bad)  
  4200f3:	cld    
  4200f4:	xchg   esi,eax
  4200f5:	jle    0x4200ba
  4200f7:	retf   0xaaa5
  4200fa:	int3   
  4200fb:	arpl   WORD PTR [ecx],di
  4200fd:	js     0x420172
  4200ff:	push   edi
  420100:	inc    esp
  420101:	(bad)  
  420103:	dec    eax
  420104:	jmp    0x1d4841ef
  420109:	fs xchg esp,eax
  42010b:	dec    esp
  42010c:	out    dx,eax
  42010d:	sbb    esp,DWORD PTR [edi+0x4c]
  420110:	ja     0x4200af
  420112:	lds    esi,FWORD PTR [ecx+0x1be72d3b]
  420118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420119:	jmp    0x299b84b7
  42011e:	ins    BYTE PTR es:[edi],dx
  42011f:	sbb    bh,BYTE PTR [eax-0x26]
  420122:	sar    ebp,0x2e
  420125:	sar    DWORD PTR [eax],cl
  420127:	imul   ecx,DWORD PTR [eax-0x4f],0x6f4f87f0
  42012e:	daa    
  42012f:	sub    BYTE PTR [esi],bh
  420131:	call   0x2de803b6
  420136:	push   esp
  420137:	aam    0x5b
  420139:	loop   0x420151
  42013b:	aas    
  42013c:	scas   eax,DWORD PTR es:[edi]
  42013d:	xor    al,dl
  42013f:	not    DWORD PTR [eax-0x311f68b9]
  420145:	jae    0x420126
  420147:	add    eax,0xcfff244d
  42014c:	and    BYTE PTR [ebx],cl
  42014e:	mov    ?,WORD PTR [esi-0x50]
  420151:	sub    ch,BYTE PTR ds:0xcf971a76
  420157:	aaa    
  420158:	nop
  420159:	sti    
  42015a:	or     edx,ecx
  42015c:	in     al,dx
  42015d:	mov    ecx,0x337edfe8
  420162:	mov    WORD PTR [ebp+0x7ffb4ae3],?
  420168:	xor    al,0xe3
  42016a:	xor    DWORD PTR [edx+0x8df853f],0xcf1ed8a
  420174:	sub    esp,ebx
  420176:	mov    ebp,0x16997cf4
  42017b:	leave  
  42017c:	pop    ebp
  42017d:	jbe    0x420133
  42017f:	das    
  420180:	out    dx,eax
  420181:	or     al,0x8f
  420183:	mov    ebp,0x5580e010
  420188:	sbb    bl,dh
  42018a:	std    
  42018b:	stos   DWORD PTR es:[edi],eax
  42018c:	(bad)  
  42018d:	push   cs
  42018e:	ins    BYTE PTR es:[edi],dx
  42018f:	lahf   
  420190:	mul    DWORD PTR [edi+ebx*4-0xebcb183]
  420197:	push   es
  420198:	cmp    esi,ebp
  42019a:	xor    DWORD PTR [edx+0x3456321f],0x33ae476e
  4201a4:	inc    esi
  4201a5:	mov    cl,0x12
  4201a7:	mov    dh,al
  4201a9:	push   esi
  4201aa:	jmp    0xc455:0xfd94ca12
  4201b1:	loop   0x42022c
  4201b3:	mov    ecx,DWORD PTR [edi]
  4201b5:	add    esi,DWORD PTR cs:[eax+0x469d5d9a]
  4201bc:	mov    ebx,edi
  4201be:	jmp    0x420185
  4201c0:	jp     0x4201b7
  4201c2:	xchg   ecx,eax
  4201c3:	mov    ds:0xccfd6d36,eax
  4201c8:	mov    WORD PTR [edi+0x7a],ds
  4201cb:	mov    dh,0x50
  4201cd:	xchg   DWORD PTR [edi-0x699fb20f],ecx
  4201d3:	push   eax
  4201d4:	mov    edx,0x856cd1e7
  4201d9:	imul   ecx,DWORD PTR [edx-0x6a],0x7e
  4201dd:	clc    
  4201de:	or     BYTE PTR [ebx-0xf],0xcf
  4201e2:	ret    0xcb08
  4201e5:	(bad)  [eax]
  4201e7:	mov    eax,0x35660f04
  4201ec:	fwait
  4201ed:	dec    ebp
  4201ee:	jo     0x4201d0
  4201f0:	mov    eax,ds:0xad48679a
  4201f5:	ret    0xf18
  4201f8:	mov    esi,0x17f6d0f5
  4201fd:	cwde   
  4201fe:	sbb    DWORD PTR [ecx-0x35255707],0xffffffdd
  420205:	dec    edi
  420206:	ret    0xb723
  420209:	loopne 0x42022e
  42020b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42020c:	and    DWORD PTR [esi-0x76],eax
  42020f:	ins    BYTE PTR es:[edi],dx
  420210:	sahf   
  420211:	es push ebx
  420213:	sub    BYTE PTR [edi],0x22
  420216:	js     0x42024f
  420218:	(bad)
  42021b:	call   0x4c0c:0xff6fe48
  420222:	nop
  420223:	or     al,0x7e
  420225:	shr    al,1
  420227:	mov    ch,0x37
  420229:	mov    eax,ds:0xd46be233
  42022e:	adc    ebp,edi
  420230:	std    
  420231:	push   ds
  420232:	cmp    al,BYTE PTR [ebx-0x39]
  420235:	call   0x57104996
  42023a:	mul    BYTE PTR [esi]
  42023c:	mov    ds:0x4340ced1,eax
  420241:	mov    ebp,0x6985a639
  420246:	daa    
  420247:	clc    
  420248:	les    edx,FWORD PTR [ecx]
  42024a:	jno    0x4201d3
  42024c:	into   
  42024d:	lock cmp esp,DWORD PTR ds:0xa8f762
  420254:	jne    0x42027d
  420256:	cmp    ah,BYTE PTR [ecx-0x8]
  420259:	ret    0x6911
  42025c:	cmp    BYTE PTR ds:0x19c10720,0xa7
  420263:	sub    DWORD PTR [edx-0x55b80cc6],0xc7e8e5c7
  42026d:	mov    BYTE PTR [edx+0x4e],al
  420270:	adc    BYTE PTR [eax+0x25],bl
  420273:	popa   
  420274:	sub    BYTE PTR [esi-0x35],al
  420277:	sub    bh,BYTE PTR [bp+di]
  42027a:	add    eax,0x97959f84
  42027f:	rcl    dh,0x81
  420282:	mov    ebp,0x6e404d24
  420287:	mov    eax,0xc85b20d4
  42028c:	(bad)  
  42028d:	and    cl,BYTE PTR [esp+edi*2+0x44]
  420291:	aaa    
  420292:	hlt    
  420293:	(bad)  
  420294:	cmp    DWORD PTR [ebx+0x35],esi
  420297:	inc    BYTE PTR [ebx]
  420299:	ins    DWORD PTR es:[edi],dx
  42029a:	ins    BYTE PTR es:[edi],dx
  42029b:	jbe    0x4202e2
  42029d:	cmp    BYTE PTR [edi+edx*2-0x3e700516],dl
  4202a4:	sub    al,0x65
  4202a6:	pop    ds
  4202a7:	loope  0x42026d
  4202a9:	push   ebx
  4202aa:	jno    0x420266
  4202ac:	in     eax,dx
  4202ad:	mov    al,ds:0x5e15ccb1
  4202b2:	stos   BYTE PTR es:[edi],al
  4202b3:	iret   
  4202b4:	std    
  4202b5:	(bad)  
  4202b6:	jmp    0x2c834f90
  4202bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202bc:	pusha  
  4202bd:	adc    eax,0xfb7846f2
  4202c2:	dec    edx
  4202c3:	sub    al,0x6d
  4202c5:	jo     0x420277
  4202c7:	das    
  4202c8:	(bad)  
  4202c9:	xlat   BYTE PTR ds:[ebx]
  4202ca:	jle    0x420270
  4202cc:	pop    eax
  4202cd:	xchg   ecx,eax
  4202ce:	aad    0x4b
  4202d0:	fs sub al,0x12
  4202d3:	inc    edx
  4202d4:	jno    0x420317
  4202d6:	scas   eax,DWORD PTR es:[edi]
  4202d7:	lods   al,BYTE PTR ds:[esi]
  4202d8:	xor    DWORD PTR [ebp+0x3a],edx
  4202db:	(bad)  
  4202dc:	into   
  4202dd:	or     ch,BYTE PTR [esi+edi*8-0x2e]
  4202e1:	xchg   edi,eax
  4202e2:	fwait
  4202e3:	into   
  4202e4:	dec    ecx
  4202e5:	push   ebx
  4202e6:	add    BYTE PTR [esi+0x3c41ed32],ch
  4202ec:	sahf   
  4202ed:	shl    DWORD PTR gs:[ebx],0x34
  4202f1:	sbb    edx,edx
  4202f3:	xchg   esp,eax
  4202f4:	pop    ebx
  4202f5:	cs jbe 0x420361
  4202f8:	movntq QWORD PTR [eax-0x1f],mm4
  4202fc:	jecxz  0x4202f3
  4202fe:	mov    ch,0x28
  420300:	int3   
  420301:	cmp    BYTE PTR [edx-0x3b],0xd1
  420305:	xchg   ecx,eax
  420306:	adc    eax,0xe4c0dd9b
  42030b:	in     al,dx
  42030c:	cmp    DWORD PTR [ebx-0x68641026],esi
  420312:	push   0x46e29e52
  420317:	or     DWORD PTR [eax-0x28720ae9],ebx
  42031d:	pusha  
  42031e:	cmp    DWORD PTR [edi+eax*2],0x2
  420322:	jmp    0x420320
  420324:	pop    esi
  420325:	bound  edx,QWORD PTR [ebp-0x1e]
  420328:	hlt    
  420329:	dec    ebx
  42032a:	and    BYTE PTR [edi+0x5f98cc7e],dh
  420330:	ins    DWORD PTR es:[edi],dx
  420331:	jge    0x420348
  420333:	inc    ebp
  420334:	ret    0xf29b
  420337:	jb     0x42036b
  420339:	aam    0x51
  42033b:	cmp    ah,BYTE PTR [esp+edi*4-0x35a054cf]
  420342:	mov    bl,0xcc
  420344:	lds    eax,FWORD PTR [edi]
  420346:	dec    ebx
  420347:	enter  0x3c06,0x9
  42034b:	sub    ebx,esi
  42034d:	imul   esp,DWORD PTR [edi-0x490e6a03],0x30e20165
  420357:	xor    eax,DWORD PTR [ebx-0x2b]
  42035a:	mov    edx,0x7758a39e
  42035f:	ret    
  420360:	and    DWORD PTR [edx+0x2412e5c5],ecx
  420366:	xor    al,0x9c
  420368:	call   0xeb0d73e7
  42036d:	xchg   esi,eax
  42036e:	pop    ss
  42036f:	pop    ecx
  420370:	mov    cl,0x75
  420372:	mov    ch,0x31
  420374:	rcl    BYTE PTR [edi-0x7f],1
  420377:	gs dec ebx
  420379:	push   ss
  42037a:	data16 fbld TBYTE PTR [ebx+0xc49d0c9]
  420381:	out    dx,eax
  420382:	in     al,dx
  420383:	pop    ebx
  420384:	test   DWORD PTR [edx+0x3b],edx
  420387:	inc    ebp
  420388:	and    al,0x42
  42038a:	or     al,0xfd
  42038c:	sti    
  42038d:	cmp    eax,0x51089386
  420392:	cs xchg ecx,eax
  420394:	mov    eax,0xdd042658
  420399:	jmp    0x420333
  42039b:	mov    edi,0xff35df6a
  4203a0:	out    dx,eax
  4203a1:	jnp    0x42040c
  4203a3:	mov    dh,0x6b
  4203a5:	call   0xc1dc:0xeeff4f01
  4203ac:	dec    DWORD PTR [edx+0x7d7a77fa]
  4203b2:	add    DWORD PTR [edx],0xffffffc2
  4203b5:	iret   
  4203b6:	mov    esi,0x4a6e71a5
  4203bb:	arpl   WORD PTR [ebx+esi*1-0x52],dx
  4203bf:	xlat   BYTE PTR ds:[ebx]
  4203c0:	repnz shl BYTE PTR [ecx+0x58],1
  4203c4:	mov    eax,0xd76018f8
  4203c9:	iret   
  4203ca:	std    
  4203cb:	shr    BYTE PTR [edi],1
  4203cd:	xor    ebp,DWORD PTR [esi+esi*8-0x449fad8e]
  4203d4:	lahf   
  4203d5:	dec    ecx
  4203d6:	and    DWORD PTR [edx+edi*4],ebp
  4203d9:	repz in al,0x13
  4203dc:	or     ah,BYTE PTR [ebx]
  4203de:	scas   eax,DWORD PTR es:[edi]
  4203df:	sti    
  4203e0:	jns    0x420401
  4203e2:	retf   0x56aa
  4203e5:	push   cs
  4203e6:	dec    ecx
  4203e7:	(bad)  
  4203e8:	and    al,0xbf
  4203ea:	add    edi,edx
  4203ec:	cwde   
  4203ed:	fs jne 0x87bcf7d8
  4203f4:	pop    ecx
  4203f5:	and    eax,DWORD PTR ds:0x37c6472
  4203fc:	sar    DWORD PTR ds:0xfdb0934e,0x50
  420403:	mov    dl,0xc1
  420405:	rcr    ebp,0x17
  420408:	stos   BYTE PTR es:[edi],al
  420409:	lods   al,BYTE PTR ds:[esi]
  42040a:	stos   DWORD PTR es:[edi],eax
  42040b:	les    esp,FWORD PTR [edi+0x2fcfa1bc]
  420411:	xor    DWORD PTR [edx+0x2f7827a8],ebp
  420417:	les    ecx,FWORD PTR [eax+0xa]
  42041a:	mov    ah,0x28
  42041c:	adc    cl,ah
  42041e:	leave  
  42041f:	or     DWORD PTR [ebx],eax
  420421:	stc    
  420422:	and    BYTE PTR [edi+0x1ea56857],dl
  420428:	xor    ebp,0x353c6b79
  42042e:	or     eax,0xad3d95f1
  420433:	ss (bad) 
  420435:	fsub   QWORD PTR [edx-0x13]
  420438:	pop    esi
  420439:	cdq    
  42043a:	jns    0x4203e2
  42043c:	inc    edi
  42043d:	push   ebp
  42043e:	xchg   ecx,eax
  42043f:	mov    es,WORD PTR [edi+eiz*8+0x33]
  420443:	push   edx
  420444:	inc    ebx
  420445:	sub    BYTE PTR [esi],al
  420447:	xor    DWORD PTR [edx+0x3437cd62],edi
  42044d:	xlat   BYTE PTR ds:[ebx]
  42044e:	into   
  42044f:	in     eax,0x45
  420451:	lock mov esi,0x64e2da64
  420457:	or     DWORD PTR [eax-0x62],esi
  42045a:	and    bh,bh
  42045c:	add    eax,0xd7fdfdd6
  420461:	mov    ebx,0x3692b230
  420466:	push   ecx
  420467:	xchg   edx,eax
  420468:	mov    dh,0x95
  42046a:	scas   al,BYTE PTR es:[edi]
  42046b:	stos   BYTE PTR es:[edi],al
  42046c:	xor    esp,DWORD PTR [edi-0x25]
  42046f:	adc    bh,BYTE PTR [ecx-0x27]
  420472:	pop    ss
  420473:	sbb    edx,esp
  420475:	mov    ecx,0xcf299d74
  42047a:	cdq    
  42047b:	add    bh,BYTE PTR [ebp-0x3b7598b5]
  420481:	fbstp  TBYTE PTR [edi+esi*4-0x6617efac]
  420488:	push   cs
  420489:	jecxz  0x420480
  42048b:	mov    dl,BYTE PTR [ecx-0xe]
  42048e:	fidivr DWORD PTR [ecx-0x64909ba8]
  420494:	inc    eax
  420495:	push   esp
  420496:	rcr    BYTE PTR [eax],1
  420498:	jnp    0x420507
  42049a:	and    eax,0xee4e13fd
  42049f:	div    al
  4204a1:	pop    eax
  4204a2:	cwde   
  4204a3:	sbb    cl,BYTE PTR gs:[edi+ecx*4+0x70340825]
  4204ab:	pop    esi
  4204ac:	jecxz  0x420448
  4204ae:	stos   BYTE PTR es:[edi],al
  4204af:	add    DWORD PTR [esi-0x7c],esp
  4204b2:	in     al,0x5a
  4204b4:	xor    al,0x12
  4204b6:	xchg   ebx,eax
  4204b7:	inc    eax
  4204b8:	add    al,0xb4
  4204ba:	jle    0x420461
  4204bc:	xchg   esp,eax
  4204bd:	jb     0x42047d
  4204bf:	and    ebp,DWORD PTR [eax]
  4204c1:	std    
  4204c2:	and    edx,eax
  4204c4:	fldenv [ecx+0xeae0214]
  4204ca:	popa   
  4204cb:	jge    0x42048c
  4204cd:	das    
  4204ce:	cmp    ebx,DWORD PTR [ecx+ebx*2+0x6b40fc]
  4204d5:	pop    esp
  4204d6:	sub    al,0x5e
  4204d8:	out    dx,al
  4204d9:	or     dl,ch
  4204db:	fwait
  4204dc:	and    ebx,DWORD PTR [ebp+0x72282b77]
  4204e2:	rcr    DWORD PTR [ebx-0x33],cl
  4204e5:	push   ecx
  4204e6:	xlat   BYTE PTR ds:[ebx]
  4204e7:	mov    edx,DWORD PTR [ebp-0x56]
  4204ea:	sbb    edi,DWORD PTR [esi]
  4204ec:	and    eax,esi
  4204ee:	sbb    BYTE PTR [edi+0x7fc47081],dl
  4204f4:	and    eax,0x9cf038ed
  4204f9:	xchg   edi,eax
  4204fa:	xor    al,0xe
  4204fc:	mov    dl,0x9c
  4204fe:	xor    bh,BYTE PTR [eax+0x42]
  420501:	outs   dx,DWORD PTR ds:[esi]
  420502:	dec    ecx
  420503:	ss jb  0x420506
  420506:	mov    bl,0xa3
  420508:	cdq    
  420509:	test   DWORD PTR [edi+0x6e],esp
  42050c:	inc    esi
  42050d:	pop    eax
  42050e:	mov    esp,0xc3893a55
  420513:	adc    al,0xc0
  420515:	jnp    0x420551
  420517:	nop
  420518:	dec    esi
  420519:	mov    edx,0xa70f0473
  42051e:	add    ecx,DWORD PTR [ebx+0x17]
  420521:	xor    BYTE PTR [eax],bl
  420523:	inc    ebx
  420524:	xchg   ebp,eax
  420525:	add    DWORD PTR [eax],0xffffffdb
  420528:	sbb    bh,dl
  42052a:	daa    
  42052b:	jnp    0x420589
  42052d:	das    
  42052e:	mov    WORD PTR [ebx+0x523df2c],fs
  420534:	hlt    
  420535:	push   0xcdc15f75
  42053a:	loopne 0x420537
  42053c:	add    BYTE PTR [esi-0x78],al
  42053f:	jmp    0x4205bf
  420541:	xchg   ebx,esp
  420543:	mov    edx,0x278d1fcb
  420548:	clc    
  420549:	in     al,0x8d
  42054b:	xchg   ebx,eax
  42054c:	pop    ecx
  42054d:	cdq    
  42054e:	inc    ebx
  42054f:	dec    DWORD PTR ds:0xed25abc1
  420555:	mov    esi,0xf0600252
  42055a:	int3   
  42055b:	xor    al,0x9d
  42055d:	mov    BYTE PTR [ebp+0x1f],bl
  420560:	repz or bh,BYTE PTR [eax+0x3d]
  420564:	dec    eax
  420565:	and    eax,0x1aa7558d
  42056a:	shl    DWORD PTR [edi+0x2],1
  42056d:	lods   eax,DWORD PTR ds:[esi]
  42056e:	stos   BYTE PTR es:[edi],al
  42056f:	cwde   
  420570:	inc    edi
  420571:	pop    ebp
  420572:	fadd   st(3),st
  420574:	add    cl,BYTE PTR [esi]
  420576:	mov    bh,dl
  420578:	mov    BYTE PTR [ecx+0x368608a4],ch
  42057e:	loop   0x420507
  420580:	pop    es
  420581:	xor    bl,ah
  420583:	push   ds
  420584:	inc    ebp
  420585:	cmp    cl,BYTE PTR [esi-0x2a]
  420588:	out    dx,eax
  420589:	or     al,BYTE PTR [ecx+0x64]
  42058c:	es je  0x4205dc
  42058f:	pop    ebx
  420590:	pusha  
  420591:	popf   
  420592:	dec    ebp
  420593:	push   ss
  420594:	add    eax,0x8d4756bd
  420599:	popf   
  42059a:	sar    BYTE PTR [ebp-0x44f7fce0],0x3d
  4205a1:	xor    ch,BYTE PTR [ecx+0x57fe930]
  4205a7:	jnp    0x420578
  4205a9:	and    dl,BYTE PTR gs:[ebx+0x1c83d52c]
  4205b0:	inc    ecx
  4205b1:	dec    edi
  4205b2:	mov    edi,0xb41cc660
  4205b7:	enter  0x2c45,0x73
  4205bb:	fbstp  TBYTE PTR [edi+0x36]
  4205be:	cmp    al,0x28
  4205c0:	xchg   esi,eax
  4205c1:	cdq    
  4205c2:	int    0x7e
  4205c4:	cmc    
  4205c5:	jne    0x420643
  4205c7:	jmp    0x4205fe
  4205c9:	mov    WORD PTR ds:0x96de997,?
  4205cf:	imul   BYTE PTR [eax-0x33]
  4205d2:	int    0xe9
  4205d4:	das    
  4205d5:	mov    gs,WORD PTR [edx+0x4a]
  4205d8:	ins    DWORD PTR es:[edi],dx
  4205d9:	dec    edx
  4205da:	and    edx,DWORD PTR [ebp+0x16e93045]
  4205e0:	xchg   edi,eax
  4205e1:	xor    eax,0x1a38d061
  4205e6:	mov    esp,0x572fefaa
  4205eb:	fwait
  4205ec:	(bad)  
  4205ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ee:	push   0xffffff9a
  4205f0:	add    DWORD PTR [eax+ecx*8-0x7eb40deb],0x28
  4205f8:	sub    BYTE PTR [edi-0x76a7f79f],0x9b
  4205ff:	pop    esi
  420600:	jns    0x420646
  420602:	pop    ds
  420603:	pop    eax
  420604:	ja     0x420659
  420606:	jge    0x420687
  420608:	out    0x1b,eax
  42060a:	sbb    ah,BYTE PTR [edi+ebx*2]
  42060d:	mov    bl,0xfa
  42060f:	mov    DWORD PTR [esi+edi*4],ecx
  420612:	fs cmp al,0xde
  420615:	dec    esp
  420616:	cmp    DWORD PTR [ecx+0x35],esp
  420619:	mov    edi,ecx
  42061b:	jmp    0x4e8f:0xd365422b
  420622:	rcr    BYTE PTR [eax],0x8e
  420625:	mov    esp,0xc9d9e7c0
  42062a:	ret    
  42062b:	daa    
  42062c:	in     al,dx
  42062d:	cld    
  42062e:	push   0x2bb40aac
  420633:	pop    edi
  420634:	xchg   ebx,eax
  420635:	outs   dx,BYTE PTR ds:[esi]
  420636:	aas    
  420637:	jne    0x4205de
  420639:	mov    al,0xbb
  42063b:	push   ds
  42063c:	or     esp,DWORD PTR [ebx-0x129f674c]
  420642:	leave  
  420643:	xor    dl,cl
  420645:	imul   ebx,DWORD PTR [ebp-0x50],0xffffffb3
  420649:	repnz fnsave [ecx-0x53]
  42064d:	fstp   TBYTE PTR [esi]
  42064f:	mov    eax,ds:0xdf1a0ff7
  420654:	mov    esi,0x2a1a52e8
  420659:	add    eax,0xa66a20fe
  42065e:	in     al,0x4a
  420660:	(bad)  
  420661:	fidivr WORD PTR [ecx]
  420663:	pop    es
  420664:	jbe    0x420699
  420666:	loop   0x4206d1
  420668:	ret    
  420669:	(bad)  
  42066a:	in     al,dx
  42066b:	mov    edx,0xf3f59b9f
  420670:	cmp    DWORD PTR [eax+0x1d],esi
  420673:	lea    ebx,[ebx-0x355c61d9]
  420679:	jg     0x4206ed
  42067b:	outs   dx,BYTE PTR ds:[esi]
  42067c:	mov    ebp,0x51c1aadb
  420681:	or     ah,0x8e
  420684:	ret    0x68fc
  420687:	ins    BYTE PTR es:[edi],dx
  420688:	int    0x3b
  42068a:	xchg   edi,eax
  42068b:	mov    ebp,0xb48c0b7d
  420690:	(bad)  
  420691:	mov    ds:0xf9130b1b,al
  420696:	jmp    0xee1c9336
  42069b:	and    dl,ch
  42069d:	cmp    ebx,edx
  42069f:	js     0x42069d
  4206a1:	sbb    DWORD PTR [ebp+0x1b8c5028],0x540a86cb
  4206ab:	jg     0x420695
  4206ad:	ins    DWORD PTR es:[edi],dx
  4206ae:	call   0xc1fd77bc
  4206b3:	sub    BYTE PTR [esi+0x40b031d0],bh
  4206b9:	push   ecx
  4206ba:	jbe    0x420728
  4206bc:	(bad)  
  4206bd:	fisub  WORD PTR [eax+edi*1+0x2127ccd6]
  4206c4:	and    al,0xc
  4206c6:	and    al,ah
  4206c8:	push   edi
  4206c9:	loopne 0x42066b
  4206cb:	out    dx,al
  4206cc:	cmc    
  4206cd:	cwde   
  4206ce:	xchg   ecx,eax
  4206cf:	xchg   ecx,eax
  4206d0:	xlat   BYTE PTR cs:[ebx]
  4206d2:	cs call 0x520dccb2
  4206d8:	pushf  
  4206d9:	pop    edx
  4206da:	sub    BYTE PTR [esp+edi*1],al
  4206dd:	mov    DWORD PTR [edx+0x26],eax
  4206e0:	jbe    0x420665
  4206e2:	xor    edi,DWORD PTR [esi+0x7d9a7ce5]
  4206e8:	push   ebx
  4206e9:	cmc    
  4206ea:	outs   dx,DWORD PTR ds:[esi]
  4206eb:	fs push es
  4206ed:	add    DWORD PTR [eax-0x3b],esp
  4206f0:	jbe    0x420692
  4206f2:	(bad)  
  4206f3:	cmc    
  4206f4:	pop    es
  4206f5:	or     DWORD PTR [edi-0x7b],eax
  4206f8:	cmp    DWORD PTR [edx+0x38],ebp
  4206fb:	mov    ecx,0xdeb98255
  420700:	jno    0x420768
  420702:	push   edx
  420703:	lods   eax,DWORD PTR ds:[esi]
  420704:	loop   0x420755
  420706:	imul   ebx,edi,0x17
  420709:	pushf  
  42070a:	push   ebx
  42070b:	pop    edx
  42070c:	jecxz  0x42075c
  42070e:	xlat   BYTE PTR ds:[ebx]
  42070f:	rcr    ebx,0x78
  420712:	outs   dx,BYTE PTR ds:[esi]
  420713:	add    DWORD PTR [ecx],ecx
  420715:	pop    eax
  420716:	dec    esi
  420717:	sbb    eax,0x9a47350b
  42071c:	or     eax,0xca86469a
  420721:	aas    
  420722:	xchg   ebx,esi
  420724:	mov    ecx,0x25ebdb57
  420729:	inc    esi
  42072a:	sub    BYTE PTR [ebx-0x2666b176],ch
  420730:	cmc    
  420731:	mov    DWORD PTR [edi],edi
  420733:	pop    ecx
  420734:	rcr    dh,0x3c
  420737:	call   0xd9e0:0x894e5fff
  42073e:	pop    edx
  42073f:	xor    eax,0x353e0f0b
  420744:	mov    ebp,0x4c9206e7
  420749:	lds    ebp,FWORD PTR [ebp+eiz*1+0x6082495d]
  420750:	xor    BYTE PTR [edx-0x15],bl
  420753:	repnz daa 
  420755:	sub    al,0x20
  420757:	pop    edx
  420758:	std    
  420759:	mov    edx,0x790bcdd1
  42075e:	cld    
  42075f:	(bad)  
  420760:	mov    al,0x7
  420762:	outs   dx,BYTE PTR ds:[esi]
  420763:	push   0xffffffb0
  420765:	adc    eax,0x5d25092
  42076a:	xlat   BYTE PTR ds:[ebx]
  42076b:	(bad)  
  42076c:	addr16 cmc 
  42076e:	sar    DWORD PTR [ebx],1
  420770:	leave  
  420771:	sub    eax,0xc4e4e399
  420776:	adc    eax,0xc935a8b4
  42077b:	ds pushf 
  42077d:	je     0x420791
  42077f:	mov    cl,0x8d
  420781:	jno    0x420791
  420783:	xchg   ebp,eax
  420784:	outs   dx,DWORD PTR ds:[esi]
  420785:	loop   0x420717
  420787:	rcr    BYTE PTR es:[eax*4+0x25eeb858],cl
  42078f:	push   es
  420790:	cmovo  esi,DWORD PTR [ebp+0x63966eb7]
  420797:	pop    ebx
  420798:	mov    dl,0x43
  42079a:	dec    eax
  42079b:	ins    DWORD PTR es:[edi],dx
  42079c:	shr    DWORD PTR [eax+0x60e59b1a],1
  4207a2:	lods   al,BYTE PTR ds:[esi]
  4207a3:	nop
  4207a4:	mov    ebx,0x1947ff7f
  4207a9:	daa    
  4207aa:	shl    ch,1
  4207ac:	pop    ss
  4207ad:	aaa    
  4207ae:	ret    
  4207af:	jno    0x4207a1
  4207b1:	jne    0x42080f
  4207b3:	or     bl,BYTE PTR [edx]
  4207b5:	mov    esp,ebp
  4207b7:	mov    DWORD PTR [ebx],ebp
  4207b9:	mov    al,0x21
  4207bb:	cmp    al,0x88
  4207bd:	sbb    DWORD PTR [ebx+ecx*8+0x719bf5c4],ecx
  4207c4:	int    0xc1
  4207c6:	test   al,0x31
  4207c8:	into   
  4207c9:	(bad)  
  4207ca:	or     al,0xa3
  4207cc:	add    BYTE PTR [ebx+0x5d],al
  4207cf:	call   0xe78b:0xa6687bac
  4207d6:	mov    ecx,0xb581d349
  4207db:	dec    esp
  4207dc:	fsub   st,st(5)
  4207de:	fwait
  4207df:	iret   
  4207e0:	jno    0x420794
  4207e2:	sbb    ecx,DWORD PTR [edi-0x4a]
  4207e5:	lods   eax,DWORD PTR ds:[esi]
  4207e6:	jmp    0x2469:0x934ce248
  4207ed:	outs   dx,BYTE PTR ds:[esi]
  4207ee:	pop    eax
  4207ef:	inc    eax
  4207f0:	inc    eax
  4207f1:	adc    BYTE PTR [esi],cl
  4207f3:	stos   DWORD PTR es:[edi],eax
  4207f4:	and    ch,al
  4207f6:	pushf  
  4207f7:	in     eax,dx
  4207f8:	sub    BYTE PTR [edx],bh
  4207fa:	(bad)  
  4207fc:	fsubr  st(6),st
  4207fe:	mov    ah,0x33
  420800:	(bad)  
  420801:	mov    WORD PTR [ecx],?
  420803:	xor    edi,DWORD PTR [edx]
  420805:	mov    esp,DWORD PTR [ebx]
  420807:	pop    edx
  420808:	stos   DWORD PTR es:[edi],eax
  420809:	xchg   esi,eax
  42080a:	scas   eax,DWORD PTR es:[edi]
  42080b:	cmp    ebx,DWORD PTR [ebp+0x3708eb0c]
  420811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420812:	xchg   ebx,eax
  420813:	lds    ebp,FWORD PTR [edi-0x5f]
  420816:	inc    eax
  420817:	adc    ecx,DWORD PTR [edi-0x4b]
  42081a:	mov    cl,0x54
  42081c:	div    BYTE PTR [ecx+0x2cbb0d96]
  420822:	add    BYTE PTR [edx+0x1edf8845],cl
  420828:	iret   
  420829:	test   BYTE PTR [edi-0x78],ch
  42082c:	jmp    0x7494a0bd
  420831:	test   BYTE PTR [edx-0x215c6d54],bl
  420837:	daa    
  420838:	mov    ah,BYTE PTR [ebp+eiz*1-0x2a]
  42083c:	cmp    edi,edi
  42083e:	into   
  42083f:	sub    BYTE PTR [ebx-0x7f],0xa5
  420843:	repz mov ebp,0x4401d37f
  420849:	sub    BYTE PTR [ebx-0x17],cl
  42084c:	push   ecx
  42084d:	pop    edx
  42084e:	vpacksswb ymm1,ymm7,YMMWORD PTR [esi-0x9]
  420853:	add    DWORD PTR [ecx],edx
  420855:	push   ecx
  420856:	inc    eax
  420857:	jne    0x4207dc
  420859:	xor    DWORD PTR [eax+0x768faffa],ecx
  42085f:	push   0x3e1227ee
  420864:	std    
  420865:	push   ecx
  420866:	adc    al,0x11
  420868:	inc    si
  42086a:	jbe    0x420846
  42086c:	mov    eax,ds:0x5698d01d
  420871:	sbb    DWORD PTR [eax+0x2c9fa627],ecx
  420877:	sub    eax,DWORD PTR [ecx+0x4a96bc2]
  42087d:	jnp    0x42088d
  42087f:	dec    esp
  420880:	xor    ah,cl
  420882:	or     al,0x9b
  420884:	out    0x1b,al
  420886:	in     eax,0x9b
  420888:	test   DWORD PTR [esi+0x24],ecx
  42088b:	ret    
  42088c:	loopne 0x4208c5
  42088e:	jmp    0xb9cb934f
  420893:	fdiv   QWORD PTR [ecx+0x75192b03]
  420899:	out    dx,al
  42089a:	pop    edi
  42089b:	ins    BYTE PTR es:[edi],dx
  42089c:	push   esi
  42089d:	aad    0xb5
  42089f:	enter  0xa45d,0xe9
  4208a3:	sub    bh,BYTE PTR [ecx]
  4208a5:	jo     0x4208aa
  4208a7:	fsubr  st,st(1)
  4208a9:	xchg   edx,eax
  4208aa:	and    dh,BYTE PTR ds:[ecx+0xf4f48d5]
  4208b1:	and    dl,ch
  4208b3:	into   
  4208b4:	or     eax,0xba7083be
  4208b9:	loop   0x4208e1
  4208bb:	mov    ecx,0xd54d630d
  4208c0:	aaa    
  4208c1:	cmp    DWORD PTR ds:[ecx],eax
  4208c4:	mov    ecx,0xedea5f1b
  4208c9:	outs   dx,DWORD PTR ds:[esi]
  4208ca:	sub    edi,edi
  4208cc:	xchg   ecx,eax
  4208cd:	dec    edx
  4208ce:	pop    ebp
  4208cf:	mov    ebp,DWORD PTR ss:[esi+eiz*4+0x20]
  4208d4:	sbb    ecx,DWORD PTR [ecx-0x7d8422cf]
  4208da:	sub    cl,dh
  4208dc:	xchg   esp,eax
  4208dd:	ret    
  4208de:	xor    edi,DWORD PTR [si-0x27]
  4208e2:	mov    edx,0x79300291
  4208e7:	sti    
  4208e8:	jle    0x4208f2
  4208ea:	cmp    esi,DWORD PTR [ecx+0x669d2329]
  4208f0:	test   DWORD PTR [esi-0x27],ebp
  4208f3:	cmp    eax,DWORD PTR [eax+eax*4+0x57]
  4208f7:	fdiv   st,st(5)
  4208f9:	inc    eax
  4208fa:	dec    edx
  4208fb:	fcmovnbe st,st(4)
  4208fd:	xor    edx,DWORD PTR [ebx-0x12]
  420900:	fld    DWORD PTR [ecx]
  420902:	shl    BYTE PTR [ebp-0x10],0xb9
  420906:	push   ds
  420907:	pop    edx
  420908:	push   ds
  420909:	ja     0x4208e0
  42090b:	fwait
  42090c:	cmp    BYTE PTR [edi+0x66388fd9],ah
  420912:	rcl    BYTE PTR [ecx],1
  420914:	inc    edx
  420915:	dec    edx
  420916:	and    bl,BYTE PTR ds:0x9e418c3a
  42091c:	pop    ss
  42091d:	jmp    0x420968
  42091f:	push   edx
  420920:	retf   
  420921:	sub    bl,dl
  420923:	mov    dh,0xa
  420925:	push   eax
  420926:	jmp    FWORD PTR [edx-0x17]
  420929:	loopne 0x420961
  42092b:	(bad)  
  42092c:	cli    
  42092d:	dec    eax
  42092e:	or     al,bh
  420930:	je     0x4208f1
  420932:	imul   edi,DWORD PTR [edx],0xeb4a57c5
  420938:	ss (bad) 
  42093a:	sbb    DWORD PTR [eax-0x7aaeeccb],ebp
  420940:	pop    ebp
  420941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420942:	ins    DWORD PTR es:[edi],dx
  420943:	pusha  
  420944:	mov    DWORD PTR [ebp+ecx*4-0x16b681f6],esi
  42094b:	gs push edi
  42094d:	call   DWORD PTR cs:[ecx]
  420950:	pop    ecx
  420951:	out    0x56,eax
  420953:	in     al,dx
  420954:	out    dx,eax
  420955:	punpckhdq mm3,QWORD PTR [ebx]
  420958:	cmp    DWORD PTR [esi],0xffffff99
  42095b:	add    BYTE PTR [esi],ch
  42095d:	mov    al,ds:0x6a8e7223
  420962:	mov    esi,0xeabafdc4
  420967:	xchg   edi,eax
  420968:	loope  0x420965
  42096a:	cmp    ah,BYTE PTR [edx+0x61]
  42096d:	in     eax,0x3a
  42096f:	out    0xa9,eax
  420971:	cmp    DWORD PTR [eax-0x19990878],eax
  420977:	adc    ah,BYTE PTR [ebp-0x336a8ed0]
  42097d:	jo     0x420918
  42097f:	in     eax,0x66
  420981:	add    BYTE PTR [edi+0x33d8f43],dh
  420987:	js     0x420991
  420989:	jne    0x420999
  42098b:	jno    0x4209de
  42098d:	and    edx,ebp
  42098f:	jge    0x420a0b
  420991:	sahf   
  420992:	mov    eax,ds:0x6634ba62
  420997:	jge    0x420a11
  420999:	jns    0x4209a7
  42099b:	adc    BYTE PTR es:[eax],bh
  42099e:	sub    al,0xe
  4209a0:	push   edi
  4209a1:	mov    edi,0x9f5554e0
  4209a6:	and    ecx,0x49
  4209a9:	mov    esp,0xdc45a544
  4209ae:	mov    dh,0x1b
  4209b0:	mov    dl,0x40
  4209b2:	adc    esi,DWORD PTR [ebx-0x6c]
  4209b5:	pop    es
  4209b6:	inc    eax
  4209b7:	je     0x4209ab
  4209b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ba:	inc    esp
  4209bb:	pop    eax
  4209bc:	dec    ecx
  4209bd:	loop   0x420988
  4209bf:	pop    eax
  4209c0:	push   esi
  4209c1:	outs   dx,BYTE PTR ds:[esi]
  4209c2:	ds and edx,ebx
  4209c5:	push   esp
  4209c6:	push   edi
  4209c7:	push   ds
  4209c8:	or     bh,BYTE PTR [edi]
  4209ca:	mov    DWORD PTR [edi],esi
  4209cc:	int    0x23
  4209ce:	les    ebp,FWORD PTR [ebp+0x78]
  4209d1:	sbb    bh,BYTE PTR [ebx-0x93c5846]
  4209d7:	retf   
  4209d8:	mov    esp,0x688ecda7
  4209dd:	jne    0x420982
  4209df:	lock mov edi,0x51e988e7
  4209e5:	outs   dx,BYTE PTR ds:[esi]
  4209e6:	inc    ebp
  4209e7:	add    eax,0x30b7f345
  4209ec:	loopne 0x4209a3
  4209ee:	mov    edx,0x8021a584
  4209f3:	and    esi,DWORD PTR [edi-0xd9ad0]
  4209f9:	hlt    
  4209fa:	mov    ds:0xb9706696,al
  4209ff:	jmp    0x420a6e
  420a01:	cmp    ebx,DWORD PTR [edi]
  420a03:	fsubr  st(3),st
  420a05:	aam    0xc5
  420a07:	stos   DWORD PTR es:[edi],eax
  420a08:	sti    
  420a09:	jp     0x4209c9
  420a0b:	hlt    
  420a0c:	ja     0x4209c6
  420a0e:	fidiv  DWORD PTR [ecx-0x419a57c0]
  420a14:	movq   mm1,mm2
  420a17:	dec    edi
  420a18:	mov    bh,0x31
  420a1a:	jl     0x420a20
  420a1c:	daa    
  420a1d:	clc    
  420a1e:	imul   esi,DWORD PTR [edi+ebp*2+0xf],0xb600c206
  420a26:	shr    dh,1
  420a28:	call   0xbee27c74
  420a2d:	or     eax,0x96cd3622
  420a32:	pop    eax
  420a33:	add    DWORD PTR [edx+0x6209e219],ebp
  420a39:	pop    eax
  420a3a:	stos   DWORD PTR es:[edi],eax
  420a3b:	gs mov cl,0xd6
  420a3e:	popa   
  420a3f:	sar    DWORD PTR [ecx-0x7],1
  420a42:	push   edi
  420a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a44:	inc    ecx
  420a45:	repnz mov ds:0x11d00219,eax
  420a4b:	cld    
  420a4c:	leave  
  420a4d:	jo     0x420aca
  420a4f:	cmp    edi,DWORD PTR [esi]
  420a51:	icebp  
  420a52:	xlat   BYTE PTR ds:[ebx]
  420a53:	push   0xec447a8b
  420a58:	hlt    
  420a59:	cwde   
  420a5a:	pop    eax
  420a5b:	arpl   WORD PTR [edx-0x28],sp
  420a5e:	inc    DWORD PTR [ebx+0x45f366]
  420a64:	add    esp,DWORD PTR [ebp-0x4b]
  420a67:	mov    esi,0x1a3eeb61
  420a6c:	leave  
  420a6d:	out    dx,al
  420a6e:	pop    es
  420a6f:	jo     0x420a59
  420a71:	ret    0x32f0
  420a74:	and    BYTE PTR [ebp-0x2f],bl
  420a77:	dec    edi
  420a78:	xchg   edi,eax
  420a79:	mov    DWORD PTR ds:0xfbc38f9f,edx
  420a7f:	aad    0xfc
  420a81:	adc    ebp,DWORD PTR [esi-0x79]
  420a84:	mov    ch,0x27
  420a86:	repz int3 
  420a88:	jecxz  0x420a43
  420a8a:	push   ebp
  420a8b:	sub    BYTE PTR [esi+0x2f845731],al
  420a91:	pushf  
  420a92:	jge    0x420a29
  420a94:	mov    al,0x7c
  420a96:	aas    
  420a97:	fdiv   DWORD PTR [ebp+0x147cea2a]
  420a9d:	imul   edi,DWORD PTR [eax+0x2d448358],0x75
  420aa4:	or     DWORD PTR [esi-0x3e8ea989],esp
  420aaa:	cmp    DWORD PTR [edi-0x234adb32],eax
  420ab0:	mov    ds:0x4e37ed02,eax
  420ab5:	sbb    BYTE PTR [ecx-0x79b6800],0x60
  420abc:	mov    ah,0xc
  420abe:	pop    edx
  420abf:	sbb    esp,DWORD PTR [edi+eax*8]
  420ac2:	xchg   esi,eax
  420ac3:	cmp    al,0x98
  420ac5:	adc    DWORD PTR [ebx+0x51],esp
  420ac8:	jnp    0x420ada
  420aca:	push   eax
  420acb:	sar    DWORD PTR [ecx],0x8d
  420ace:	fild   WORD PTR [edi-0x1a87e3a5]
  420ad4:	das    
  420ad5:	out    dx,al
  420ad6:	rcl    DWORD PTR [ebx+0x779688b3],0x22
  420add:	fwait
  420ade:	out    0xf8,eax
  420ae0:	lock shl eax,cl
  420ae3:	mov    esi,0x30db1ee
  420ae8:	adc    DWORD PTR [ecx+0x1518dae0],esi
  420aee:	inc    ecx
  420aef:	xor    DWORD PTR [ebp-0x1edc8f62],esi
  420af5:	sbb    DWORD PTR [ecx-0x5f32baf9],esp
  420afb:	ficomp DWORD PTR [edx-0x39a30605]
  420b01:	mov    bh,0xb5
  420b03:	dec    esp
  420b04:	pop    ds
  420b05:	out    0x1d,al
  420b07:	push   ds
  420b08:	sbb    eax,0x6cc4d0da
  420b0d:	adc    dl,BYTE PTR [esi]
  420b0f:	(bad)  
  420b10:	xor    al,0xf5
  420b12:	push   0x4c153781
  420b17:	mov    al,es:0xf9181c6
  420b1d:	inc    eax
  420b1e:	xchg   esi,eax
  420b1f:	xor    ebx,eax
  420b21:	mov    al,ds:0xe4d48bf
  420b26:	xchg   BYTE PTR [esi-0x6f846bc9],dl
  420b2c:	test   DWORD PTR [edi+0x7e],eax
  420b2f:	xor    dh,BYTE PTR [ebx]
  420b31:	pop    ecx
  420b32:	das    
  420b33:	or     dl,BYTE PTR [edx-0x16ef2f67]
  420b39:	mov    eax,0xde533ef9
  420b3e:	in     eax,dx
  420b3f:	and    BYTE PTR ds:0xa49e7f72,bh
  420b45:	xchg   edx,eax
  420b47:	jae    0x420b84
  420b49:	mov    cl,0x72
  420b4b:	sub    edx,DWORD PTR [ebp+esi*8+0x61]
  420b4f:	push   ebx
  420b50:	mov    ds:0x49ed62c9,eax
  420b55:	stos   BYTE PTR es:[edi],al
  420b56:	(bad)  
  420b57:	or     eax,0x3b83ef4b
  420b5c:	pop    DWORD PTR [esi-0x4615a7ee]
  420b62:	add    al,0x98
  420b64:	xchg   esp,eax
  420b65:	dec    ecx
  420b66:	sbb    dh,al
  420b68:	adc    eax,0x259a565c
  420b6d:	sub    ebp,ebx
  420b6f:	push   cs
  420b70:	pop    ecx
  420b71:	xor    esi,DWORD PTR [eax]
  420b73:	mov    ah,0x7a
  420b75:	bound  esi,QWORD PTR [esi+edi*8-0x3634d7fe]
  420b7c:	jle    0x420b77
  420b7e:	ror    DWORD PTR [esi-0x57],cl
  420b81:	add    al,0x4c
  420b83:	fisub  DWORD PTR [esi]
  420b85:	in     al,0x88
  420b87:	and    edx,DWORD PTR [eax-0x53]
  420b8a:	nop
  420b8b:	cld    
  420b8c:	int3   
  420b8d:	and    esi,DWORD PTR [edx]
  420b8f:	pop    ss
  420b90:	mov    bl,0xb3
  420b92:	add    eax,0x88b8acb5
  420b97:	mov    dh,0x15
  420b99:	inc    esp
  420b9a:	punpckhwd mm2,QWORD PTR [esp+esi*8-0xb00ecf2]
  420ba2:	arpl   WORD PTR [ebp+0x4a],ax
  420ba5:	sbb    DWORD PTR [ebx+eax*4-0x335792de],ecx
  420bac:	add    eax,ebx
  420bae:	push   ecx
  420baf:	out    0x65,al
  420bb1:	into   
  420bb2:	into   
  420bb3:	test   DWORD PTR ss:[ecx+0x55],edx
  420bb7:	adc    al,0xa4
  420bb9:	int    0xc8
  420bbb:	or     eax,0x60d729fd
  420bc0:	xchg   esi,eax
  420bc1:	ret    0x42ef
  420bc4:	xor    dl,0x42
  420bc7:	cmc    
  420bc8:	jbe    0x420bbe
  420bca:	aas    
  420bcb:	clc    
  420bcc:	retf   
  420bcd:	sbb    DWORD PTR [ebp-0x49377804],esi
  420bd3:	mov    dh,0xba
  420bd5:	in     al,0xaa
  420bd7:	jecxz  0x420bfe
  420bd9:	sub    bh,BYTE PTR [edx+eax*4-0x3514138a]
  420be0:	xor    eax,0xb44c034
  420be5:	leave  
  420be6:	jb     0x420c17
  420be8:	lea    esp,[ebx]
  420bea:	mov    edi,ebx
  420bec:	lods   al,BYTE PTR ds:[esi]
  420bed:	pusha  
  420bee:	in     al,dx
  420bef:	test   BYTE PTR [ebx+0x1d],dl
  420bf2:	push   esp
  420bf3:	(bad)  [edi-0x5fe25198]
  420bf9:	dec    ebp
  420bfa:	sbb    edx,esp
  420bfc:	add    ah,bh
  420bfe:	mov    bh,0xdb
  420c00:	test   BYTE PTR [ebp+0x7],ch
  420c03:	int3   
  420c04:	xchg   dl,bh
  420c06:	or     eax,0x54cd5d3d
  420c0b:	adc    al,0x3e
  420c0d:	mov    al,0x30
  420c0f:	je     0x420c62
  420c11:	mov    ebp,0xac69e6b3
  420c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c17:	sti    
  420c18:	inc    ecx
  420c19:	xor    DWORD PTR [edi+0x2e],ebp
  420c1c:	imul   ecx,DWORD PTR [ebp+esi*4+0x1e4feec7],0x75595f99
  420c27:	into   
  420c28:	add    BYTE PTR [edx-0x2e],al
  420c2b:	push   ecx
  420c2c:	push   ebp
  420c2d:	xchg   esp,eax
  420c2e:	test   BYTE PTR [esi],dh
  420c30:	sbb    DWORD PTR [ecx-0x39],0xd0951565
  420c37:	mov    al,0x3b
  420c39:	iret   
  420c3a:	push   ecx
  420c3b:	add    BYTE PTR [esi],ch
  420c3d:	inc    esp
  420c3e:	mov    bl,0x84
  420c40:	shl    edi,1
  420c42:	in     eax,0x8
  420c44:	push   ebx
  420c45:	xchg   edx,eax
  420c47:	test   bl,cl
  420c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c4a:	inc    edi
  420c4b:	jmp    DWORD PTR [edx+esi*1-0x43842afb]
  420c52:	jbe    0x420cd1
  420c54:	add    DWORD PTR [edi],0xffffffcd
  420c57:	loop   0x420c6c
  420c59:	mov    al,0xbc
  420c5b:	jne    0x420cba
  420c5d:	jg     0x420c5a
  420c5f:	loop   0x420c3d
  420c61:	fidiv  WORD PTR [eax-0x68]
  420c64:	pusha  
  420c65:	mov    ah,0x2d
  420c67:	cmp    eax,0xbc1bb6ce
  420c6c:	xchg   ebp,eax
  420c6d:	lds    ebp,FWORD PTR [eax]
  420c6f:	clc    
  420c70:	lock mov cl,0xf1
  420c73:	cmp    edx,DWORD PTR [edx+0x285ff32f]
  420c79:	(bad)  
  420c7a:	sbb    WORD PTR [edx-0x6872e6c2],bp
  420c81:	out    dx,eax
  420c82:	jecxz  0x420cce
  420c84:	ret    
  420c85:	cdq    
  420c86:	sbb    eax,0x5f97dd2
  420c8b:	cmp    BYTE PTR [eax+eax*1-0x4a3eb150],bl
  420c92:	push   eax
  420c93:	push   ecx
  420c94:	jle    0x420c9d
  420c96:	cmp    al,0xa4
  420c98:	adc    al,0x33
  420c9a:	iret   
  420c9b:	inc    eax
  420c9c:	out    0x4c,al
  420c9e:	push   ds
  420c9f:	imul   bx,WORD PTR [eax-0x79],0x2ff8
  420ca5:	cdq    
  420ca6:	cmp    al,0x89
  420ca8:	test   DWORD PTR ds:0xe6e2a7c6,edi
  420cae:	inc    edi
  420caf:	inc    edx
  420cb0:	pop    ebp
  420cb1:	mov    ebp,0x32d27784
  420cb6:	fs add al,0x94
  420cb9:	push   esp
  420cba:	rcl    BYTE PTR ds:0xbd83ef72,1
  420cc0:	pop    eax
  420cc1:	call   0x49032c95
  420cc6:	sti    
  420cc7:	cmp    eax,0x62ae661f
  420ccc:	add    eax,DWORD PTR [edi-0x4]
  420ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd0:	push   es
  420cd1:	mov    eax,ds:0x78919e7d
  420cd6:	cmc    
  420cd7:	fidivr WORD PTR [ebx]
  420cd9:	add    al,0xef
  420cdb:	outs   dx,BYTE PTR gs:[esi]
  420cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cde:	ret    0xe6ec
  420ce1:	fidiv  DWORD PTR [ecx-0x76]
  420ce4:	push   0x9dd0dd7d
  420ce9:	ret    0x16ae
  420cec:	daa    
  420ced:	adc    al,cl
  420cef:	test   BYTE PTR [ebp-0x363e01fc],bl
  420cf5:	cmp    BYTE PTR [ebx+ebx*1+0x37],bl
  420cf9:	lods   al,BYTE PTR ds:[esi]
  420cfa:	bswap  ebp
  420cfc:	and    DWORD PTR fs:[edi+ecx*4-0x62],ebp
  420d01:	or     dl,BYTE PTR [ecx+0x7f]
  420d04:	mov    ds:0x4b5cf0c5,al
  420d09:	enter  0xcbad,0xc5
  420d0d:	jecxz  0x420d10
  420d0f:	test   ebp,esi
  420d11:	adc    ah,BYTE PTR [ecx]
  420d13:	push   0xfb33e857
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	jae    0x420fe0
  420fc6:	cdq    
  420fc7:	adc    al,0xf8
  420fc9:	and    edx,DWORD PTR [edx+0x44]
  420fcc:	mov    al,0x68
  420fce:	and    BYTE PTR [edi+0x5e],cl
  420fd1:	inc    edi
  420fd2:	inc    edx
  420fd3:	or     al,0x1
  420fd5:	add    BYTE PTR [eax],al
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
