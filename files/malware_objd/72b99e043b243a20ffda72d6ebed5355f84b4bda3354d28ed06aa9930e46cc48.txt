
72b99e043b243a20ffda72d6ebed5355f84b4bda3354d28ed06aa9930e46cc48.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	xor    al,0x41
  411002:	and    al,0x23
  411004:	add    DWORD PTR [eax],ecx
  411006:	add    DWORD PTR [esp+edi*4+0xc800431],edx
  41100d:	adc    BYTE PTR [eax+ecx*4+0x1d],0x0
  411012:	xor    ebx,DWORD PTR [eax+0x16]
  411015:	add    DWORD PTR [ecx+0x2218c38b],0x0
  41101c:	add    al,0x22
  41101e:	mov    cs,WORD PTR [ebx]
  411020:	push   es
  411021:	adc    BYTE PTR [ebx],al
  411023:	add    al,0x0
  411025:	push   esp
  411026:	or     BYTE PTR [edx],al
  411028:	add    al,0x51
  41102a:	push   esp
  41102b:	inc    eax
  41102c:	add    DWORD PTR [eax],eax
  41102e:	xchg   edx,eax
  41102f:	add    DWORD PTR [ecx+0x10],esp
  411032:	cmp    BYTE PTR [eax],cl
  411034:	adc    esi,DWORD PTR [eax]
  411036:	mov    ds:0x1f00c042,al
  41103b:	add    BYTE PTR [eax],0x65
  41103e:	les    ebp,FWORD PTR [eax+edx*4-0x2f]
  411042:	or     cl,BYTE PTR [ecx]
  411044:	add    eax,esp
  411046:	xor    BYTE PTR [eax],al
  411048:	rcl    BYTE PTR [eax],1
  41104a:	pusha  
  41104b:	add    BYTE PTR [eax],0x0
  41104e:	and    esp,DWORD PTR [ebx]
  411050:	and    DWORD PTR [ecx+0xd420011],esi
  411056:	and    DWORD PTR [ebx-0x5d],esi
  411059:	inc    edi
  41105a:	lods   al,BYTE PTR ds:[esi]
  41105b:	add    BYTE PTR [eax],al
  41105d:	inc    esi
  41105e:	and    al,BYTE PTR [edx+eax*1]
  411061:	adc    BYTE PTR [ecx-0x20],cl
  411064:	test   BYTE PTR [edx+0xc4408],al
  41106a:	pusha  
  41106b:	add    BYTE PTR [edx+0xc22104],0x1
  411072:	pop    eax
  411073:	pusha  
  411074:	add    DWORD PTR [eax-0x57f7dffe],eax
  41107a:	add    al,al
  41107c:	sbb    eax,ecx
  41107e:	inc    eax
  41107f:	xchg   DWORD PTR [eax],ecx
  411081:	or     BYTE PTR [eax],ch
  411083:	adc    DWORD PTR [edx],eax
  411085:	add    dh,BYTE PTR [ecx+edx*1+0x41460290]
  41108c:	test   BYTE PTR [esi],al
  41108e:	add    DWORD PTR [eax-0x7fffbffe],ecx
  411094:	jno    0x4110da
  411096:	pusha  
  411097:	fs loop 0x4110d6
  41109a:	add    BYTE PTR [ecx],dl
  41109c:	xor    BYTE PTR [eax],ah
  41109e:	add    eax,0x8004102
  4110a4:	add    BYTE PTR [esp+ebx*2-0x80],dh
  4110a8:	add    BYTE PTR [eax+0x68250184],al
  4110ae:	add    BYTE PTR [eax+eax*1],ah
  4110b1:	aaa    
  4110b2:	or     BYTE PTR [edx+0x2280d0c4],al
  4110b8:	inc    eax
  4110b9:	add    BYTE PTR [eax],al
  4110bb:	adc    eax,eax
  4110bd:	push   eax
  4110be:	inc    eax
  4110bf:	and    BYTE PTR [ecx],ah
  4110c1:	adc    eax,0x19045400
  4110c6:	xor    cl,BYTE PTR [ecx+ecx*1]
  4110c9:	add    ah,BYTE PTR [esp+edx*2]
  4110cc:	pop    es
  4110cd:	add    edx,DWORD PTR [ecx+edx*4]
  4110d0:	add    DWORD PTR [edx],ebp
  4110d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d3:	add    eax,0x5550c0a8
  4110d8:	add    al,0x11
  4110da:	inc    eax
  4110db:	mov    eax,ds:0x9014580
  4110e0:	and    al,0xb9
  4110e2:	add    BYTE PTR ds:0x81010123,0x38
  4110e9:	dec    eax
  4110ea:	dec    eax
  4110eb:	or     al,0x3
  4110ed:	add    al,BYTE PTR [eax+0x10020050]
  4110f3:	inc    esp
  4110f4:	sbb    DWORD PTR [eax],ecx
  4110f6:	jo     0x411120
  4110f8:	and    BYTE PTR [edx+0x30820661],dl
  4110fe:	fdiv   DWORD PTR [ecx]
  411100:	pushf  
  411101:	adc    al,0x8
  411103:	shl    BYTE PTR [eax],0x23
  411106:	sub    al,0x8c
  411108:	push   es
  411109:	nop
  41110a:	add    DWORD PTR [ecx],esi
  41110c:	add    BYTE PTR fs:[eax+eax*1+0x50480148],dh
  411114:	lds    edx,FWORD PTR [edx-0x6dfdff7e]
  41111a:	inc    eax
  41111b:	add    BYTE PTR [eax+0x45838903],ch
  411121:	bound  eax,QWORD PTR [edx]
  411123:	mov    al,ds:0x806208
  411128:	sub    al,0xf2
  41112a:	add    eax,0xc1200421
  41112f:	or     al,ah
  411131:	add    BYTE PTR [eax],0x82
  411134:	add    BYTE PTR [eax],al
  411136:	cmp    BYTE PTR [eax],al
  411138:	inc    esp
  411139:	add    BYTE PTR [eax-0x7f7aa9fe],al
  41113f:	adc    BYTE PTR [edx],al
  411141:	pop    eax
  411142:	and    DWORD PTR ds:0x82242530,eax
  411148:	cwde   
  411149:	inc    ecx
  41114a:	xor    BYTE PTR ds:0x2600020,al
  411150:	push   edx
  411151:	in     al,0xa4
  411153:	or     BYTE PTR [eax+esi*1+0x8a86042],ah
  41115a:	cmp    BYTE PTR [eax],al
  41115c:	adc    DWORD PTR [esi],esi
  41115e:	sbb    al,cl
  411160:	add    BYTE PTR [ecx+0x42],al
  411163:	add    BYTE PTR [eax-0x40],al
  411166:	sub    BYTE PTR [ecx],ah
  411168:	add    BYTE PTR [edx],al
  41116a:	add    dl,al
  41116c:	adc    BYTE PTR [eax],ch
  41116e:	inc    ebx
  41116f:	adc    BYTE PTR [eax],dl
  411171:	sbb    edx,DWORD PTR [ecx]
  411173:	add    BYTE PTR [eax],cl
  411175:	mov    al,al
  411177:	push   ecx
  411178:	adc    BYTE PTR [eax],0x12
  41117b:	xor    DWORD PTR [eax+ecx*1],esp
  41117e:	sbb    BYTE PTR [eax],cl
  411180:	and    BYTE PTR [ebp+0x11],ch
  411183:	and    BYTE PTR [edx],bl
  411185:	and    ah,BYTE PTR [eax]
  411187:	xor    BYTE PTR [eax],cl
  411189:	add    BYTE PTR [eax],0x4
  41118c:	or     BYTE PTR [eax],dl
  41118e:	test   BYTE PTR [edx],al
  411190:	add    BYTE PTR [ecx],al
  411192:	jl     0x411194
  411194:	add    BYTE PTR [edx],ah
  411196:	add    BYTE PTR [ebx+eax*1+0x47],dl
  41119a:	mov    BYTE PTR [ebx+0x41],dl
  41119d:	rol    BYTE PTR [eax],0x18
  4111a0:	adc    BYTE PTR [esi+0x21],dl
  4111a3:	add    BYTE PTR [eax-0x38],ch
  4111a6:	adc    al,0x91
  4111a8:	mov    ah,0x90
  4111aa:	pusha  
  4111ab:	adc    al,0x4
  4111ad:	dec    eax
  4111ae:	add    BYTE PTR [ecx-0x6f],ah
  4111b1:	add    BYTE PTR [ecx],ah
  4111b3:	add    BYTE PTR [eax],bl
  4111b5:	enter  0x8158,0x51
  4111b9:	add    BYTE PTR [ecx-0x80],cl
  4111bc:	push   es
  4111bd:	pop    es
  4111be:	popa   
  4111bf:	sub    al,0x1c
  4111c1:	adc    BYTE PTR [ecx],dh
  4111c3:	inc    eax
  4111c4:	inc    eax
  4111c5:	sbb    DWORD PTR [edx],esp
  4111c7:	lock inc esp
  4111c9:	add    al,0xdc
  4111cb:	add    al,BYTE PTR [ebx]
  4111cd:	add    al,0x7d
  4111cf:	push   esi
  4111d0:	enter  0xb0b3,0x10
  4111d4:	adc    BYTE PTR [eax+edx*1],al
  4111d7:	jb     0x411169
  4111d9:	inc    esp
  4111da:	add    DWORD PTR [edx+0x11062000],edi
  4111e0:	rol    BYTE PTR [eax],0x30
  4111e3:	add    BYTE PTR [eax+0x2],ah
  4111e6:	rol    DWORD PTR [eax],0xa5
  4111e9:	jo     0x41116d
  4111eb:	add    BYTE PTR [eax+0x42],al
  4111ee:	push   es
  4111ef:	adc    BYTE PTR [edi],dl
  4111f1:	add    dl,al
  4111f3:	popa   
  4111f4:	rcl    BYTE PTR ds:0x60001710,0x10
  4111fb:	inc    eax
  4111fc:	dec    eax
  4111fd:	jne    0x411201
  4111ff:	test   BYTE PTR ds:0xc84d4,dl
  411205:	adc    BYTE PTR [eax-0x7f76d6e0],al
  41120b:	and    eax,0x24801000
  411210:	imul   eax,DWORD PTR [ebp+0x40140944],0x4104801
  41121a:	js     0x411220
  41121c:	and    DWORD PTR [ecx+0x48],eax
  41121f:	push   es
  411220:	adc    BYTE PTR [eax],al
  411222:	cmp    BYTE PTR [eax],al
  411224:	rcr    BYTE PTR [ecx-0x7ff4c93f],0x8
  41122b:	or     eax,0x833a400
  411230:	add    al,0x52
  411232:	test   al,0x10
  411234:	add    al,0xd1
  411236:	nop
  411237:	push   es
  411238:	mov    eax,ds:0x98e09245
  41123d:	add    BYTE PTR [eax],ah
  41123f:	xchg   ebp,eax
  411240:	pusha  
  411241:	test   BYTE PTR [edx+0x20b45435],al
  411247:	or     al,0x0
  411249:	adc    BYTE PTR [eax+0x441015a2],al
  41124f:	test   BYTE PTR [eax],ch
  411251:	adc    dl,BYTE PTR [edx-0x7f63ebe0]
  411257:	adc    BYTE PTR [edx+eax*2-0x3f],al
  41125b:	add    BYTE PTR [eax],0x88
  41125e:	and    edx,DWORD PTR [eax-0x80]
  411261:	add    BYTE PTR [edx+0x40],dl
  411264:	push   eax
  411265:	bound  esp,QWORD PTR [eax]
  411267:	inc    ecx
  411268:	sub    BYTE PTR [edx+0x2802100a],al
  41126e:	add    al,0x9f
  411270:	add    DWORD PTR [ebx],edx
  411272:	es cwde 
  411274:	inc    eax
  411275:	add    al,0x48
  411277:	add    al,0x31
  411279:	add    BYTE PTR [eax],dh
  41127b:	and    BYTE PTR [ebx+ecx*2],0x12
  41127f:	add    ah,al
  411281:	add    DWORD PTR [edx+0x1],ecx
  411284:	inc    eax
  411285:	add    eax,0x20048040
  41128a:	add    cl,BYTE PTR [edx]
  41128c:	and    BYTE PTR [eax+eax*8],0x2
  411290:	adc    BYTE PTR [ebx],0x5a
  411293:	xchg   edx,eax
  411294:	adc    eax,0xa148810
  411299:	retf   0x1805
  41129c:	sub    DWORD PTR [edx],eax
  41129e:	or     al,0xc0
  4112a0:	add    BYTE PTR [eax],0x1a
  4112a3:	test   BYTE PTR [ecx],ch
  4112a5:	add    BYTE PTR [eax],bl
  4112a7:	jmp    0x448f93bd
  4112ac:	leave  
  4112ad:	xor    DWORD PTR [edx+0x110dd042],edx
  4112b3:	dec    ecx
  4112b4:	add    DWORD PTR [eax-0x78],0x3008290
  4112bb:	sub    DWORD PTR [eax],ebx
  4112bd:	add    BYTE PTR [ecx],0x82
  4112c0:	add    BYTE PTR [eax],ah
  4112c2:	call   0x1b641428
  4112c7:	pusha  
  4112c8:	js     0x411256
  4112ca:	add    eax,0x882686c
  4112cf:	add    BYTE PTR [eax+0x1909642],ah
  4112d5:	sub    BYTE PTR [edx],cl
  4112d7:	add    BYTE PTR [ecx],dl
  4112d9:	adc    DWORD PTR [ebx+0x35],ecx
  4112dc:	test   al,0x90
  4112de:	inc    esp
  4112df:	popa   
  4112e0:	push   esp
  4112e1:	adc    DWORD PTR [eax+0x22],ebp
  4112e4:	or     DWORD PTR [edx],0x3095794
  4112ea:	push   0x0
  4112ec:	mov    dl,0x4
  4112ee:	and    al,BYTE PTR [eax+0x14c024d6]
  4112f4:	adc    DWORD PTR [eax],esp
  4112f6:	mov    dl,0xc0
  4112f8:	adc    BYTE PTR [eax],al
  4112fa:	add    DWORD PTR [ecx],esp
  4112fc:	ret    
  4112fd:	adc    eax,0x841e10
  411302:	mov    BYTE PTR [eax],dh
  411304:	add    BYTE PTR [eax+0xc],cl
  411307:	sub    eax,DWORD PTR [ebp+0x60212890]
  41130d:	xor    BYTE PTR [eax],al
  41130f:	and    DWORD PTR [ebx+0x22],eax
  411312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411313:	or     BYTE PTR [esp+ebp*1],al
  411316:	and    dl,BYTE PTR [ebx+0x20]
  411319:	and    BYTE PTR [ecx+0x40230002],dh
  41131f:	and    DWORD PTR [edx+0x50],eax
  411322:	and    BYTE PTR [eax+eiz*1+0x50],ah
  411326:	add    BYTE PTR es:[eax],0xc2
  41132a:	add    al,BYTE PTR [eax]
  41132c:	add    edx,eax
  41132e:	xor    DWORD PTR [edx],0x5
  411331:	push   eax
  411332:	add    BYTE PTR [eax+0x9],0x80
  411336:	xor    BYTE PTR [ecx],cl
  411338:	add    BYTE PTR [edx-0x70],al
  41133b:	adc    BYTE PTR [eax],al
  41133d:	and    BYTE PTR [esi+eax*8-0x70],al
  411341:	add    DWORD PTR [edx],eax
  411343:	nop
  411344:	inc    eax
  411345:	and    ah,BYTE PTR [ebx]
  411347:	add    al,cl
  411349:	and    BYTE PTR [eax+0xcc36c5],0x83
  411350:	inc    edx
  411351:	test   DWORD PTR [eax],esp
  411353:	add    DWORD PTR [eax+0x30084251],eax
  411359:	adc    DWORD PTR [eax],ecx
  41135b:	add    al,0xe4
  41135d:	sub    al,dl
  41135f:	rol    BYTE PTR [eax],1
  411361:	push   cs
  411362:	add    BYTE PTR [ebx+0x42032002],al
  411368:	add    al,0x0
  41136a:	add    DWORD PTR [eax+0x4020008],ecx
  411370:	add    DWORD PTR [ebp-0x73afff2f],esp
  411376:	adc    BYTE PTR [edx],dh
  411378:	lds    eax,FWORD PTR [ebx+0x20]
  41137b:	add    al,0x48
  41137d:	and    al,BYTE PTR [edi]
  41137f:	or     BYTE PTR [esi],al
  411381:	or     BYTE PTR [eax-0x3c],dl
  411384:	add    BYTE PTR ds:0x2633000e,0xa6
  41138b:	nop
  41138c:	enter  0x8442,0xd
  411390:	add    BYTE PTR [eax],al
  411392:	and    al,0xfa
  411394:	push   ebx
  411395:	add    BYTE PTR [eax],ah
  411397:	inc    eax
  411398:	add    DWORD PTR [eax+0x0],0xffffffc0
  41139c:	sub    al,BYTE PTR [edx+ecx*1+0x51300803]
  4113a3:	leave  
  4113a4:	mov    al,0xa0
  4113a6:	add    BYTE PTR [esp+ebx*1],al
  4113a9:	add    BYTE PTR [ecx+0x4c4495b],al
  4113af:	adc    eax,0x88010a41
  4113b4:	add    edx,DWORD PTR [eax]
  4113b6:	sbb    eax,DWORD PTR [edx]
  4113b8:	mov    al,ds:0x42305801
  4113bd:	test   eax,0xe8040395
  4113c2:	and    BYTE PTR [eax],dl
  4113c4:	mov    al,0x0
  4113c6:	shl    BYTE PTR [eax],0x40
  4113c9:	add    eax,0x2205042
  4113ce:	adc    BYTE PTR es:[eax-0x78],al
  4113d2:	or     BYTE PTR [esi],ah
  4113d4:	add    DWORD PTR [ecx],esp
  4113d6:	mov    ds:0x18ea2810,al
  4113db:	push   edx
  4113dc:	and    BYTE PTR [edx],dl
  4113de:	sbb    BYTE PTR [eax],cl
  4113e0:	and    BYTE PTR [eax],al
  4113e2:	add    BYTE PTR [esi+eax*1],dl
  4113e5:	xor    BYTE PTR [eax+0x8],al
  4113e8:	or     BYTE PTR [eax],al
  4113ea:	add    DWORD PTR [eax-0x6b],ebp
  4113ed:	or     DWORD PTR ds:0xc2280020,eax
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	mov    al,ds:0xd0259561
  4113fa:	add    BYTE PTR [eax+0x34e04010],al
  411400:	or     al,0x3
  411402:	sbb    bl,BYTE PTR [esi]
  411404:	add    eax,0x2122c244
  411409:	inc    eax
  41140a:	dec    eax
  41140b:	dec    edx
  41140c:	add    BYTE PTR [eax+0x24],al
  41140f:	adc    BYTE PTR [eax+0xa008859],dh
  411415:	ret    0x219a
  411418:	xor    al,BYTE PTR [eax]
  41141a:	inc    eax
  41141b:	add    al,0x14
  41141d:	push   cs
  41141e:	daa    
  41141f:	add    BYTE PTR [eax],ah
  411421:	inc    eax
  411422:	push   cs
  411423:	or     DWORD PTR [ecx],eax
  411425:	inc    ebp
  411426:	mov    BYTE PTR [eax+0x40c25c00],al
  41142c:	popa   
  41142d:	add    esp,eax
  41142f:	inc    eax
  411430:	inc    eax
  411431:	test   BYTE PTR [eax+eax*1+0x208800],ah
  411438:	and    BYTE PTR [eax],0x80
  41143b:	add    eax,DWORD PTR [ecx+0x12]
  41143e:	push   es
  41143f:	mov    BYTE PTR [eax],0x26
  411442:	or     BYTE PTR [esi+0x42854228],ah
  411448:	test   BYTE PTR [edx-0x7e8af3a0],al
  41144e:	adc    DWORD PTR [eax],eax
  411450:	nop
  411451:	sbb    esp,DWORD PTR [eax]
  411453:	(bad)  
  411454:	or     eax,DWORD PTR [edx+0x3f388184]
  41145a:	xor    dl,al
  41145c:	add    al,0x20
  41145e:	or     BYTE PTR [ecx-0x7affec72],al
  411464:	add    BYTE PTR [eax],cl
  411466:	or     BYTE PTR [eax],dl
  411468:	and    BYTE PTR [ecx],al
  41146a:	cwde   
  41146b:	nop
  41146c:	add    BYTE PTR [eax],ah
  41146e:	or     BYTE PTR [ecx-0x7e3ebfbc],dl
  411474:	xor    eax,DWORD PTR [eax]
  411476:	and    BYTE PTR [eax+ecx*1],0x11
  41147a:	sbb    BYTE PTR [edx+0x16],al
  41147d:	inc    edx
  41147e:	and    BYTE PTR [eax+0x21],cl
  411481:	add    bl,BYTE PTR [eax]
  411483:	and    al,0x1
  411485:	adc    BYTE PTR [ecx],cl
  411487:	or     DWORD PTR [eax],esp
  411489:	sub    DWORD PTR [eax+0x300c020],eax
  41148f:	test   DWORD PTR [eax],edx
  411491:	adc    BYTE PTR [ebp+0x41],bl
  411494:	adc    ah,cl
  411496:	jo     0x411499
  411498:	adc    eax,DWORD PTR [ebx+0x0]
  41149b:	or     BYTE PTR [esi+ecx*1],dl
  41149e:	add    BYTE PTR ds:0x83190640,al
  4114a4:	or     BYTE PTR [eax+0x0],al
  4114a7:	or     DWORD PTR [eax],0xffffff86
  4114aa:	add    al,0x2a
  4114ac:	or     ah,cl
  4114ae:	mov    dl,0x0
  4114b0:	and    al,BYTE PTR [eax]
  4114b2:	nop
  4114b3:	adc    BYTE PTR [edx],ch
  4114b5:	sub    BYTE PTR [edx],dh
  4114b7:	adc    al,BYTE PTR [eax-0x78]
  4114ba:	add    DWORD PTR [eax+ebp*4],edx
  4114bd:	xor    DWORD PTR [eax],ebp
  4114bf:	pop    eax
  4114c0:	add    dl,BYTE PTR [eax]
  4114c2:	add    BYTE PTR [edx+eax*4-0x54],bl
  4114c6:	inc    eax
  4114c7:	mov    ah,0xc0
  4114c9:	adc    al,0x40
  4114cb:	inc    eax
  4114cc:	add    DWORD PTR [eax+0x0],ecx
  4114cf:	xchg   ebp,eax
  4114d0:	or     eax,0x14043420
  4114d5:	enter  0x300,0x20
  4114d9:	add    BYTE PTR gs:[eax],0x0
  4114dd:	xchg   esp,eax
  4114de:	adc    BYTE PTR [eax-0x7bbafff8],al
  4114e4:	add    BYTE PTR [eax],al
  4114e6:	push   ebp
  4114e7:	add    dh,BYTE PTR [ebx+eiz*2]
  4114ea:	add    eax,0x153010e4
  4114ef:	lock sbb DWORD PTR ds:0x702c038d,edx
  4114f6:	rol    BYTE PTR [eax+0x22080a4],cl
  4114fc:	add    BYTE PTR [ecx],al
  4114fe:	inc    ebx
  4114ff:	and    ah,BYTE PTR [eax+0x300d2880]
  411505:	(bad)  
  411506:	push   0x29
  411508:	add    BYTE PTR [edx+eax*2],al
  41150b:	inc    eax
  41150c:	or     ecx,edx
  41150e:	and    BYTE PTR [edx+0x348820a3],dl
  411514:	add    BYTE PTR [eax],dl
  411516:	add    ebp,ebx
  411518:	add    BYTE PTR [eax],0x6
  41151b:	adc    DWORD PTR ds:0x34b21409,0x2401a459
  411525:	push   ecx
  411526:	xor    BYTE PTR [eax],al
  411528:	add    eax,0x60888005
  41152d:	inc    eax
  41152e:	sub    eax,0x88048c00
  411533:	ret    0xc8
  411536:	adc    BYTE PTR [edx+0xd928603],al
  41153c:	or     BYTE PTR [edx],dl
  41153e:	xor    BYTE PTR [eax+0x45240002],0xc2
  411545:	dec    eax
  411546:	mov    al,ds:0xea44010
  41154b:	add    cl,BYTE PTR [eax]
  41154d:	add    BYTE PTR [eax+edx*1+0x40],0x5a
  411552:	and    eax,DWORD PTR [ecx+eax*1-0x7beeed80]
  411559:	adc    al,BYTE PTR [eax]
  41155b:	sbb    dl,BYTE PTR [eax+0x204611a2]
  411561:	rol    BYTE PTR [esi],cl
  411563:	inc    ecx
  411564:	inc    edx
  411565:	adc    al,0x4e
  411567:	sub    ah,BYTE PTR [esi]
  411569:	add    al,dh
  41156b:	or     BYTE PTR [eax],dl
  41156d:	add    eax,eax
  41156f:	adc    al,0xe0
  411571:	or     BYTE PTR [eax+0x0],ah
  411574:	sub    eax,0x13103e0
  411579:	inc    eax
  41157a:	push   es
  41157b:	and    al,0x32
  41157d:	xor    cl,BYTE PTR [esi]
  41157f:	adc    cl,al
  411581:	or     al,0x98
  411583:	jns    0x411506
  411585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411586:	xchg   esp,eax
  411587:	sbb    cl,al
  411589:	push   cs
  41158a:	sub    BYTE PTR [ecx],al
  41158c:	in     eax,0xe9
  41158e:	dec    ecx
  41158f:	adc    BYTE PTR [eax+0x10190408],0x0
  411596:	adc    ah,BYTE PTR [eax+0x2404a302]
  41159c:	jo     0x41159e
  41159e:	inc    eax
  41159f:	pop    edx
  4115a0:	add    al,BYTE PTR [ecx]
  4115a2:	push   ss
  4115a3:	or     BYTE PTR [edx],al
  4115a5:	rol    DWORD PTR [edx],1
  4115a7:	sbb    eax,0x5d90a214
  4115ac:	add    al,0x10
  4115ae:	adc    DWORD PTR [edx+ecx*1],ecx
  4115b1:	xor    al,BYTE PTR ds:0x144cc1
  4115b7:	xchg   ecx,eax
  4115b8:	adc    ah,dl
  4115ba:	or     al,0x82
  4115bc:	add    BYTE PTR [eax],al
  4115be:	add    eax,0x5009520
  4115c3:	aam    0x39
  4115c5:	add    ah,al
  4115c7:	push   eax
  4115c8:	add    bh,BYTE PTR [eax+0x0]
  4115cb:	adc    dl,BYTE PTR [eax]
  4115cd:	push   eax
  4115ce:	add    BYTE PTR [edx],ah
  4115d0:	add    al,0x43
  4115d2:	inc    eax
  4115d3:	push   ax
  4115d5:	inc    eax
  4115d6:	xor    BYTE PTR [eax+edi*2],dl
  4115d9:	or     BYTE PTR [ecx],dl
  4115db:	add    eax,0x50211631
  4115e0:	dec    esp
  4115e1:	add    BYTE PTR [ecx+ecx*4],0x20
  4115e5:	or     BYTE PTR [esi],al
  4115e7:	adc    BYTE PTR [eax+0x501],cl
  4115ed:	add    BYTE PTR [edx+0x2514008d],ah
  4115f3:	add    BYTE PTR [ebx],0x0
  4115f6:	adc    BYTE PTR [ebp+0xa0250de],al
  4115fc:	and    BYTE PTR [edx],bh
  4115fe:	add    BYTE PTR [edx+0x60001244],0x2
  411605:	add    BYTE PTR [eax+eiz*1],dl
  411608:	ins    BYTE PTR es:[edi],dx
  411609:	add    al,0x12
  41160b:	add    al,al
  41160d:	add    ah,BYTE PTR [eax]
  41160f:	xor    BYTE PTR [eax],dl
  411611:	mov    ah,0x64
  411613:	inc    eax
  411614:	or     BYTE PTR [ebp+0x34926160],bl
  41161a:	and    DWORD PTR [edx],esp
  41161c:	xchg   edx,eax
  41161d:	add    DWORD PTR [esp+esi*1],edx
  411620:	and    DWORD PTR [eax],eax
  411622:	or     al,BYTE PTR [esp+eax*8]
  411625:	ret    0x800f
  411628:	data16 and al,0xa
  41162b:	or     al,0x6
  41162d:	add    BYTE PTR [eax+0x254b0c0],ah
  411633:	add    ah,BYTE PTR [eax]
  411635:	pusha  
  411636:	or     BYTE PTR [ecx],cl
  411638:	xor    dl,BYTE PTR [ecx]
  41163a:	jecxz  0x41167c
  41163c:	nop
  41163d:	or     ebp,DWORD PTR [edx+0x2]
  411640:	js     0x411642
  411642:	add    DWORD PTR [eax],eax
  411644:	add    dl,al
  411646:	nop
  411647:	pusha  
  411648:	sbb    al,0x0
  41164a:	pop    es
  41164b:	or     BYTE PTR [edx+ebp*1-0x5bfb8fac],cl
  411652:	adc    DWORD PTR ds:0x3e8ac012,eax
  411658:	mov    eax,0x45000064
  41165d:	and    eax,0x404c008b
  411662:	rol    DWORD PTR [esp+edx*1],1
  411665:	mov    ah,BYTE PTR [eax]
  411667:	inc    esp
  411668:	add    ecx,DWORD PTR [eax]
  41166a:	add    BYTE PTR [eax+0x5112208],cl
  411670:	sub    BYTE PTR [eax],al
  411672:	or     eax,DWORD PTR [eax]
  411674:	xor    DWORD PTR [eax-0x5dfb9fbe],eax
  41167a:	inc    esp
  41167b:	inc    eax
  41167c:	add    eax,DWORD PTR [eax]
  41167e:	inc    edx
  41167f:	mov    BYTE PTR [ebx+edi*1-0x5ffff400],ah
  411686:	add    BYTE PTR [eax],dh
  411688:	add    BYTE PTR [ecx-0x7b4fdf76],al
  41168e:	and    al,0x5f
  411690:	rol    BYTE PTR [eax+0x41],0x1
  411694:	and    BYTE PTR [esi],al
  411696:	xor    BYTE PTR [ecx+0x12040526],dh
  41169c:	inc    eax
  41169d:	sbb    DWORD PTR [eax+0x44],eax
  4116a0:	and    BYTE PTR [eax+eax*1+0x1],al
  4116a4:	dec    ecx
  4116a5:	add    BYTE PTR [eax],cl
  4116a7:	adc    ebp,DWORD PTR [edx]
  4116a9:	shl    BYTE PTR [edx+0xcfe103c],1
  4116af:	adc    BYTE PTR [esi],cl
  4116b1:	or     DWORD PTR [ecx+ecx*1],edx
  4116b4:	addr16 popa 
  4116b6:	rol    BYTE PTR [eax+0x1],0x20
  4116ba:	or     esp,DWORD PTR [edx+0x38]
  4116bd:	add    al,BYTE PTR [eax+eax*1-0x78]
  4116c1:	popa   
  4116c2:	test   BYTE PTR [eax+ecx*2],al
  4116c5:	push   ss
  4116c6:	loop   0x411670
  4116c8:	fsub   QWORD PTR [eax+ecx*1]
  4116cb:	add    BYTE PTR [ebp+0x12240084],al
  4116d1:	sahf   
  4116d2:	or     DWORD PTR [eax+0x7a22084],ebp
  4116d8:	ret    
  4116d9:	xor    BYTE PTR [ecx],al
  4116db:	shl    BYTE PTR [edx],0x1c
  4116de:	and    DWORD PTR [eax],esi
  4116e0:	add    BYTE PTR [eax+0x20703042],ah
  4116e6:	xchg   BYTE PTR [eax],al
  4116e8:	sbb    al,BYTE PTR [eax]
  4116ea:	inc    eax
  4116eb:	or     dl,BYTE PTR [ebx+eax*2-0x5fa6a8ab]
  4116f2:	inc    eax
  4116f3:	add    dl,BYTE PTR [ebx+eax*2+0x2c]
  4116f7:	retf   0x261
  4116fa:	ret    
  4116fb:	jb     0x41168d
  4116fd:	add    al,0x61
  4116ff:	or     al,0x11
  411701:	add    BYTE PTR [ecx],al
  411703:	pop    ds
  411704:	inc    ebp
  411705:	inc    esp
  411706:	and    eax,0x800804
  41170b:	xor    DWORD PTR [eax+eiz*4],eax
  41170e:	add    dh,al
  411710:	test   BYTE PTR [eax],al
  411712:	add    eax,DWORD PTR [eax]
  411714:	adc    BYTE PTR [ebp+0x60],0x32
  411718:	inc    eax
  411719:	and    al,0x18
  41171b:	or     DWORD PTR [ecx+0x106d8350],eax
  411721:	inc    eax
  411722:	add    BYTE PTR [eax-0x7c],al
  411725:	or     BYTE PTR [eax],cl
  411727:	adc    BYTE PTR [eax+eax*1],0xb4
  41172b:	adc    DWORD PTR [eax],eax
  41172d:	add    BYTE PTR [ecx],dh
  41172f:	add    BYTE PTR [eax+0x1ea09808],0x10
  411736:	push   cs
  411737:	test   BYTE PTR [eax+0x0],ah
  41173a:	jns    0x41173c
  41173c:	and    DWORD PTR [esp+ecx*2-0x2ddfebb0],0x62021850
  411747:	stos   BYTE PTR es:[edi],al
  411748:	ficom  DWORD PTR [edx]
  41174a:	nop
  41174b:	add    DWORD PTR [ecx+0x1],eax
  41174e:	mov    ds:0x204a49a2,eax
  411753:	add    BYTE PTR [edx],dl
  411755:	or     BYTE PTR [eax],ch
  411757:	loope  0x4116db
  411759:	push   es
  41175a:	add    BYTE PTR [eax+0x18108949],ah
  411760:	or     BYTE PTR [esi],cl
  411762:	or     BYTE PTR ds:0x5889bc04,bh
  411768:	add    BYTE PTR [eax+0x2],dl
  41176b:	pop    esi
  41176c:	or     al,0x8
  41176e:	mov    al,ds:0x414c129
  411773:	push   es
  411774:	sbb    BYTE PTR [ecx+eax*4+0x20],ah
  411778:	push   cs
  411779:	aam    0x24
  41177b:	jns    0x4117b1
  41177d:	adc    BYTE PTR [edx],cl
  41177f:	adc    cl,BYTE PTR [edx+0x51284a4]
  411785:	xor    ebx,DWORD PTR [eax+eax*1]
  411788:	sbb    BYTE PTR [ebp+eax*2-0x6e],0x62
  41178d:	sbb    al,al
  41178f:	or     BYTE PTR [ecx-0x57ffeffe],dh
  411795:	add    BYTE PTR [eax+0x12],ah
  411798:	adc    DWORD PTR ds:0x50880005,eax
  41179e:	add    al,0x0
  4117a0:	adc    BYTE PTR [ebp+0x4a8c0284],al
  4117a6:	add    BYTE PTR [edx],cl
  4117a8:	or     ah,BYTE PTR [eax+0x84407]
  4117ae:	adc    ch,BYTE PTR [eax-0x5e]
  4117b1:	adc    BYTE PTR [ecx],al
  4117b3:	add    cl,al
  4117b5:	adc    BYTE PTR [eax+0x20421041],dl
  4117bb:	cmp    DWORD PTR [edx+0x2],eax
  4117be:	inc    eax
  4117bf:	add    DWORD PTR [esp+eiz*2],edi
  4117c2:	or     ah,BYTE PTR [eax]
  4117c4:	sbb    ah,BYTE PTR [eax]
  4117c6:	(bad)  
  4117c8:	sbb    BYTE PTR [eax+ebp*1+0x1],dl
  4117cc:	add    al,0x80
  4117ce:	and    BYTE PTR [ecx],ah
  4117d0:	call   DWORD PTR ds:0x436cc0
  4117d6:	add    al,BYTE PTR [eax-0x7b4f9fdf]
  4117dc:	test   al,0xa
  4117de:	mov    al,ds:0x42000480
  4117e3:	pusha  
  4117e4:	push   0x7004013b
  4117e9:	add    BYTE PTR [eax+0x4],cl
  4117ec:	pop    edx
  4117ed:	and    BYTE PTR [eax+eax*2],0x8a
  4117f1:	or     DWORD PTR [eax],eax
  4117f3:	and    BYTE PTR [eax-0x54],dl
  4117f6:	add    BYTE PTR [eax],al
  4117f8:	inc    eax
  4117f9:	inc    eax
  4117fa:	and    BYTE PTR [eax],ah
  4117fc:	add    DWORD PTR ds:0x3210c10,eax
  411802:	add    BYTE PTR [edi],cl
  411804:	xor    BYTE PTR [eax+0x5],ah
  411807:	add    al,0x80
  411809:	data16 or BYTE PTR [ebx+eax*2],dh
  41180d:	xchg   edi,eax
  41180e:	add    BYTE PTR [ebp+0x22120e00],al
  411814:	or     al,BYTE PTR [ebx]
  411816:	sub    al,BYTE PTR [eax-0x2f]
  411819:	lds    esp,FWORD PTR [esi]
  41181b:	jo     0x411865
  41181d:	xchg   ecx,eax
  41181e:	xor    BYTE PTR [edx-0x80],ah
  411821:	dec    eax
  411822:	add    BYTE PTR [eax+0x5],al
  411825:	adc    dl,al
  411827:	and    BYTE PTR [ebx-0x2efe67c7],al
  41182d:	test   DWORD PTR [eax+0x11114001],ebp
  411833:	or     dl,0x8
  411836:	add    BYTE PTR [eax],al
  411838:	inc    ecx
  411839:	add    ch,BYTE PTR [eax+edi*8]
  41183c:	add    BYTE PTR [eax],al
  41183e:	add    al,0x4b
  411840:	add    eax,0x8d222155
  411845:	adc    BYTE PTR [eax],0x40
  411848:	and    BYTE PTR [ecx+eax*1],0x49
  41184c:	inc    eax
  41184d:	sbb    BYTE PTR [eax-0x78],0x27
  411851:	add    eax,DWORD PTR [eax]
  411853:	inc    esp
  411854:	inc    eax
  411855:	inc    eax
  411856:	add    dl,BYTE PTR [ebx]
  411858:	inc    eax
  411859:	test   BYTE PTR [ecx+eiz*1+0x21281080],al
  411860:	inc    ebx
  411861:	or     BYTE PTR [ecx+0x24],dh
  411864:	and    BYTE PTR [ecx],ah
  411866:	sbb    BYTE PTR [edi+0x6009],al
  41186c:	loopne 0x411802
  41186e:	dec    edx
  41186f:	or     BYTE PTR [eax],al
  411871:	and    BYTE PTR [eax+0x29438100],cl
  411877:	xchg   ecx,eax
  411878:	inc    ebx
  411879:	pusha  
  41187a:	add    BYTE PTR [edx],dl
  41187c:	sub    BYTE PTR [eax],0x10
  41187f:	and    DWORD PTR [eax-0x78],esi
  411882:	inc    ecx
  411883:	and    DWORD PTR [eax],edx
  411885:	inc    eax
  411886:	xchg   BYTE PTR [edx],al
  411888:	pop    eax
  411889:	inc    esp
  41188a:	add    al,BYTE PTR [edi]
  41188c:	dec    eax
  41188d:	pusha  
  41188e:	inc    edi
  41188f:	lock adc dl,al
  411892:	add    al,0x8
  411894:	or     DWORD PTR [ecx],0x8501051
  41189a:	scas   al,BYTE PTR es:[edi]
  41189b:	ss add al,0xc0
  41189e:	add    eax,DWORD PTR [eax+0x1a3004c1]
  4118a4:	aad    0x48
  4118a6:	rol    DWORD PTR [ebx],cl
  4118a8:	mov    al,0x7
  4118aa:	add    DWORD PTR [eax],eax
  4118ac:	loope  0x4118f2
  4118ae:	rol    DWORD PTR [eax+ecx*1+0xc088489],1
  4118b5:	sub    BYTE PTR [eax],cl
  4118b7:	mov    DWORD PTR [ecx],eax
  4118b9:	or     al,0x23
  4118bb:	add    DWORD PTR [eax],esi
  4118bd:	add    BYTE PTR [ebx],al
  4118bf:	add    BYTE PTR [eax+eax*8+0x49],al
  4118c3:	add    BYTE PTR [eax],ch
  4118c5:	loope  0x411855
  4118c7:	add    DWORD PTR [eax+eax*1-0x78],esi
  4118cb:	or     DWORD PTR [eax],eax
  4118cd:	or     BYTE PTR [ebx],al
  4118cf:	dec    ebp
  4118d0:	sbb    al,0x40
  4118d2:	mov    ds:0xc500022c,eax
  4118d7:	inc    eax
  4118d8:	(bad)  
  4118d9:	jne    0x41189b
  4118db:	inc    ecx
  4118dc:	shl    BYTE PTR [eax+0x0],0x0
  4118e0:	pop    ss
  4118e1:	xor    ah,BYTE PTR [edx-0x6df7afdc]
  4118e7:	or     BYTE PTR [eax+0x2],al
  4118ea:	inc    edi
  4118eb:	nop
  4118ec:	add    al,0x10
  4118ee:	adc    BYTE PTR [eax-0x7c],cl
  4118f1:	and    BYTE PTR [eax+0x0],cl
  4118f4:	or     al,0x63
  4118f6:	inc    ebx
  4118f7:	push   es
  4118f8:	pop    edx
  4118f9:	cmp    al,0xd
  4118fb:	inc    eax
  4118fc:	and    BYTE PTR ds:0x40301890,al
  411902:	and    BYTE PTR [eax+eax*8],ah
  411905:	add    ah,BYTE PTR [esi]
  411907:	pop    eax
  411908:	adc    dh,BYTE PTR [eax]
  41190a:	pop    ecx
  41190b:	add    BYTE PTR [eax+eax*8],dl
  41190e:	sub    BYTE PTR [ebx],dl
  411910:	push   es
  411911:	pusha  
  411912:	or     BYTE PTR [ebp*2+0x111a6000],dl
  411919:	inc    ebx
  41191a:	add    dl,BYTE PTR [ecx]
  41191c:	les    eax,FWORD PTR [eax+0x40]
  41191f:	pop    es
  411920:	call   0x106d9d2a
  411925:	or     al,0x40
  411927:	add    DWORD PTR [edx],eax
  411929:	and    al,0x18
  41192b:	sysret 
  41192d:	add    eax,DWORD PTR [ebp-0x5fbfb7c0]
  411933:	add    DWORD PTR [edx+0x69e00214],eax
  411939:	add    DWORD PTR ds:0x4120826,0x34610993
  411943:	xchg   esi,eax
  411944:	jo     0x41194c
  411946:	add    BYTE PTR [eax],ah
  411948:	sbb    eax,DWORD PTR [eax+0x11acae81]
  41194e:	add    bh,BYTE PTR [ebx]
  411950:	add    al,0x81
  411952:	or     eax,0x800083
  411957:	add    al,0x0
  411959:	dec    esp
  41195a:	inc    esi
  41195b:	adc    BYTE PTR [esi],cl
  41195d:	adc    dl,BYTE PTR [edx]
  41195f:	add    DWORD PTR [eax+0x1204024],ecx
  411965:	add    al,0x4
  411967:	add    al,0xa0
  411969:	bound  ecx,QWORD PTR ds:0x61481480
  41196f:	or     al,0x80
  411971:	or     BYTE PTR [eax],al
  411973:	and    al,0x20
  411975:	adc    BYTE PTR [ebx],bh
  411977:	push   es
  411978:	add    BYTE PTR [ecx+0x104a0160],al
  41197e:	jo     0x411981
  411980:	push   esi
  411981:	add    al,0x99
  411983:	add    ah,BYTE PTR [edx-0x20]
  411986:	add    BYTE PTR [edx],al
  411988:	or     DWORD PTR [eax],edx
  41198a:	aam    0x12
  41198c:	mov    al,0x14
  41198e:	and    BYTE PTR [eax],al
  411990:	or     BYTE PTR [eax+0xc],ah
  411993:	add    BYTE PTR [eax+ebp*1],al
  411996:	popa   
  411997:	add    al,0xa5
  411999:	test   BYTE PTR [eax+0x8],ah
  41199c:	add    al,0x4c
  41199e:	data16 or BYTE PTR [edx+0x193c8040],al
  4119a5:	mov    eax,ds:0x8280
  4119aa:	test   BYTE PTR [ecx],cl
  4119ac:	add    al,0x78
  4119ae:	or     BYTE PTR [eax],al
  4119b0:	mov    al,ds:0x48882500
  4119b5:	add    BYTE PTR ds:0xa18100,al
  4119bb:	pusha  
  4119bc:	add    BYTE PTR [edx],0x10
  4119bf:	and    cl,dh
  4119c1:	and    al,BYTE PTR ds:0x2a774026
  4119c7:	push   eax
  4119c8:	inc    edx
  4119c9:	adc    DWORD PTR [edx+0x2e],ebx
  4119cc:	les    eax,FWORD PTR [eax+0xc]
  4119cf:	add    BYTE PTR [ebp+0x4858807e],al
  4119d5:	or     eax,0x40e0521d
  4119da:	add    BYTE PTR [ebp+0x15c41256],al
  4119e0:	xchg   edx,eax
  4119e1:	enter  0x1500,0x88
  4119e5:	sub    DWORD PTR [eax],eax
  4119e7:	inc    ebp
  4119e8:	pop    ss
  4119e9:	add    BYTE PTR [edx+0x8],al
  4119ec:	inc    eax
  4119ed:	push   cs
  4119ee:	inc    ecx
  4119ef:	adc    al,dh
  4119f1:	and    al,0x2
  4119f3:	and    BYTE PTR [ecx],bl
  4119f5:	loopne 0x411997
  4119f7:	add    BYTE PTR [eax],al
  4119f9:	add    ecx,DWORD PTR [edx]
  4119fb:	icebp  
  4119fc:	ret    0x2c02
  4119ff:	adc    BYTE PTR [eax+esi*1],cl
  411a02:	add    DWORD PTR ds:0x4149a040,ecx
  411a08:	pop    es
  411a09:	inc    ecx
  411a0a:	pusha  
  411a0b:	and    al,0x28
  411a0d:	inc    eax
  411a0e:	add    DWORD PTR [eax],esi
  411a10:	jmp    0x46819b3d
  411a15:	or     al,0x1
  411a17:	sub    DWORD PTR [eax],ecx
  411a19:	repnz or eax,0xc94c2128
  411a1f:	adc    BYTE PTR [edx],al
  411a21:	sub    al,0x2c
  411a23:	and    BYTE PTR [ebp+0x1cc00023],bl
  411a29:	mov    al,0x45
  411a2b:	mov    al,ds:0x30001840
  411a30:	adc    BYTE PTR ds:0x40413615,ah
  411a36:	add    BYTE PTR [ecx],al
  411a38:	sbb    eax,0x4d90600d
  411a3d:	push   ss
  411a3e:	ror    BYTE PTR [eax],0xe
  411a41:	fs add eax,0x49057890
  411a47:	add    ecx,DWORD PTR [eax]
  411a49:	inc    edx
  411a4a:	dec    eax
  411a4b:	xchg   esp,eax
  411a4c:	and    eax,DWORD PTR [eax+0x200001]
  411a52:	rol    DWORD PTR [eax+0x42],0x48
  411a56:	add    BYTE PTR [eax-0x5dbffdf8],bh
  411a5c:	nop
  411a5d:	xor    BYTE PTR [eax],al
  411a5f:	or     BYTE PTR [eax+0x49],bl
  411a62:	add    DWORD PTR [eax],0xc
  411a65:	sub    dl,BYTE PTR [ecx+0x411c2000]
  411a6b:	add    al,0x2
  411a6d:	jo     0x411a6f
  411a6f:	mov    BYTE PTR [edx-0x54],al
  411a72:	or     DWORD PTR [eax],edx
  411a74:	pusha  
  411a75:	and    ch,cl
  411a77:	and    BYTE PTR [eax+ecx*1+0x22400350],ch
  411a7e:	inc    edx
  411a7f:	sub    DWORD PTR [edx],eax
  411a81:	add    DWORD PTR [eax],0x0
  411a84:	ds inc ebp
  411a86:	or     BYTE PTR [eax],al
  411a88:	jo     0x411ad2
  411a8a:	add    dl,cl
  411a8c:	das    
  411a8d:	sbb    BYTE PTR [eax+eax*4-0x6f375dc7],cl
  411a94:	enter  0x6004,0x84
  411a98:	cwde   
  411a99:	inc    eax
  411a9a:	push   ss
  411a9b:	push   es
  411a9c:	js     0x411a4f
  411a9e:	pop    esp
  411a9f:	or     BYTE PTR [ecx],ah
  411aa1:	lods   eax,DWORD PTR ds:[esi]
  411aa2:	or     al,0x86
  411aa4:	dec    eax
  411aa5:	pop    es
  411aa6:	adc    al,BYTE PTR ds:0x48487020
  411aac:	add    eax,0x2c408200
  411ab1:	cwde   
  411ab2:	cmp    BYTE PTR [eax],al
  411ab4:	add    BYTE PTR [ecx-0x7bffef00],dl
  411aba:	pusha  
  411abb:	mov    ds:0x80970005,eax
  411ac0:	sbb    al,0x20
  411ac2:	les    edx,FWORD PTR [esi]
  411ac4:	or     BYTE PTR [edx+0x1880062],dl
  411aca:	push   eax
  411acb:	test   BYTE PTR [eax+ecx*2+0x10004800],al
  411ad2:	and    al,0x21
  411ad4:	dec    eax
  411ad5:	mov    eax,ds:0x28091285
  411ada:	test   BYTE PTR [edx+0x8a40500],al
  411ae0:	adc    al,cl
  411ae2:	rol    BYTE PTR [eax],0x20
  411ae5:	jo     0x411b2d
  411ae7:	and    al,0x8c
  411ae9:	push   ss
  411aea:	pop    es
  411aeb:	sub    al,al
  411aed:	and    BYTE PTR [ecx-0x79],al
  411af0:	add    BYTE PTR [eax],0x10
  411af3:	add    DWORD PTR [edx+esi*1],eax
  411af6:	ins    BYTE PTR es:[edi],dx
  411af7:	nop
  411af8:	test   BYTE PTR [eax+ecx*4+0x2a],ah
  411afc:	inc    edx
  411afd:	and    BYTE PTR [eax],al
  411aff:	dec    eax
  411b00:	add    DWORD PTR [edx],esp
  411b02:	inc    eax
  411b03:	inc    eax
  411b04:	pop    eax
  411b05:	leave  
  411b06:	adc    al,0x82
  411b08:	sub    BYTE PTR [ecx],ah
  411b0a:	or     BYTE PTR [edx+0x14828132],dl
  411b10:	add    BYTE PTR [eax],0x8
  411b13:	add    cl,BYTE PTR [edx+0x20]
  411b16:	js     0x411af8
  411b18:	test   al,0x9
  411b1a:	add    edx,DWORD PTR [eax]
  411b1c:	shl    BYTE PTR [ecx],0x0
  411b1f:	add    DWORD PTR [ebx],ebp
  411b21:	or     al,0x31
  411b23:	cmp    DWORD PTR [eax],eax
  411b25:	jo     0x411b28
  411b27:	add    al,0x20
  411b29:	push   es
  411b2a:	test   BYTE PTR [eax+0x8822b8],al
  411b30:	add    DWORD PTR [esi-0x71d3f772],esp
  411b36:	xor    BYTE PTR [ecx+0x23244ba6],0x18
  411b3d:	mov    BYTE PTR cs:[edx],al
  411b40:	add    eax,0x21ce8a50
  411b45:	mov    al,ds:0x802259
  411b4a:	adc    BYTE PTR [eax],cl
  411b4c:	or     ah,ah
  411b4e:	add    BYTE PTR [eax],ch
  411b50:	adc    DWORD PTR [ebx],edx
  411b52:	add    al,0x1
  411b54:	mov    BYTE PTR [eax],cl
  411b56:	mov    dl,0x8
  411b58:	pop    es
  411b59:	or     ecx,esp
  411b5b:	add    BYTE PTR [edx+0x9520040],al
  411b61:	adc    dl,BYTE PTR [eax]
  411b63:	and    DWORD PTR [ecx+0x11a1610],esp
  411b69:	popa   
  411b6a:	push   eax
  411b6b:	add    eax,0x410a5bc
  411b70:	es or  ah,0x11
  411b74:	sbb    BYTE PTR [eax],0x87
  411b77:	add    ch,BYTE PTR [eax]
  411b79:	cmp    eax,0x58000000
  411b7e:	jo     0x411bc4
  411b80:	and    al,0x2
  411b82:	popa   
  411b83:	rol    BYTE PTR [eax],cl
  411b85:	add    al,0x6c
  411b87:	push   esp
  411b88:	sbb    al,0x0
  411b8a:	lods   al,BYTE PTR ds:[esi]
  411b8b:	adc    al,0x4
  411b8d:	inc    eax
  411b8e:	add    BYTE PTR [eax+eax*1],al
  411b91:	add    al,0x21
  411b93:	push   edx
  411b94:	nop
  411b95:	inc    eax
  411b96:	add    edx,DWORD PTR [eax]
  411b98:	adc    al,0x38
  411b9a:	add    DWORD PTR [edx],esp
  411b9c:	or     eax,DWORD PTR [ecx]
  411b9e:	mov    ebp,0xce440a90
  411ba3:	or     BYTE PTR es:[eax],0x1
  411ba7:	push   cs
  411ba8:	add    eax,0x43271c00
  411bad:	add    dl,BYTE PTR [ebx+0x2]
  411bb0:	adc    ah,BYTE PTR [eax-0x79fdef80]
  411bb6:	test   al,0x60
  411bb8:	ret    0x3f05
  411bbb:	jo     0x411bbd
  411bbd:	add    DWORD PTR [ebx],eax
  411bbf:	js     0x411be1
  411bc1:	and    DWORD PTR [eax+0x20],0x44900048
  411bc8:	mov    DWORD PTR [eax],ecx
  411bca:	add    al,BYTE PTR [eax]
  411bcc:	dec    eax
  411bcd:	mov    ah,0x20
  411bcf:	inc    eax
  411bd0:	and    al,BYTE PTR ds:0x70440384
  411bd6:	das    
  411bd7:	cs pop esp
  411bd9:	add    BYTE PTR [eax+0x10],dl
  411bdc:	adc    BYTE PTR [eax],0x4
  411bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be0:	xchg   BYTE PTR [eax],al
  411be2:	nop
  411be3:	inc    ebp
  411be4:	adc    al,BYTE PTR ds:0x6410504a
  411bea:	mov    ds:0x8062e44,al
  411bef:	or     al,BYTE PTR ds:0x1409431c
  411bf5:	mov    BYTE PTR [edx],dl
  411bf7:	adc    dl,BYTE PTR [eax+eax*1+0x305c0a20]
  411bfe:	and    cl,BYTE PTR ds:0x9224c53
  411c04:	add    DWORD PTR [eax+eax*8],edx
  411c07:	push   es
  411c08:	add    ecx,DWORD PTR [eax]
  411c0a:	xchg   ebx,eax
  411c0b:	xchg   BYTE PTR [eax],bl
  411c0d:	sbb    DWORD PTR [eax+0x48],eax
  411c10:	mov    al,ds:0x19c8824
  411c15:	add    BYTE PTR [esi+0x4],dh
  411c18:	cmp    BYTE PTR [esp+ecx*2],dl
  411c1b:	push   ecx
  411c1c:	sbb    BYTE PTR [eax],cl
  411c1e:	adc    eax,0x40608802
  411c23:	les    eax,FWORD PTR [edx]
  411c25:	inc    eax
  411c26:	inc    eax
  411c27:	inc    esp
  411c28:	add    ah,BYTE PTR [esp+ecx*1]
  411c2b:	test   DWORD PTR ds:0x3014e10,ebp
  411c31:	add    BYTE PTR [ebx+0xc],al
  411c34:	add    DWORD PTR [eax],esi
  411c36:	adc    al,0x91
  411c38:	add    al,0x0
  411c3a:	(bad)  
  411c3b:	mov    DWORD PTR [edx],0x20284028
  411c41:	add    eax,0x4414008
  411c46:	inc    esp
  411c47:	inc    eax
  411c48:	dec    eax
  411c49:	inc    ecx
  411c4a:	mov    al,ds:0xa0820067
  411c4f:	inc    edi
  411c50:	mov    al,0x80
  411c52:	or     DWORD PTR [eax+0x0],esi
  411c55:	add    BYTE PTR [edx+0x0],al
  411c58:	test   DWORD PTR [ecx],ecx
  411c5a:	adc    BYTE PTR [ebp+0x0],al
  411c5d:	mov    BYTE PTR [ecx+0x0],ch
  411c60:	add    BYTE PTR [ecx],al
  411c62:	add    BYTE PTR [bx+di-0x7c],al
  411c66:	or     BYTE PTR [ecx],al
  411c68:	xor    DWORD PTR [eax+eax*1],eax
  411c6b:	test   DWORD PTR [eax],eax
  411c6d:	add    al,0x12
  411c6f:	add    BYTE PTR [ebx],al
  411c71:	adc    BYTE PTR [edx+0x66168d00],dh
  411c77:	xor    BYTE PTR [eax+0x1509598],al
  411c7d:	add    al,BYTE PTR ds:0x8006b702
  411c83:	push   ss
  411c84:	inc    edx
  411c85:	rcl    BYTE PTR [eax],1
  411c87:	add    cl,BYTE PTR [eax+eax*1]
  411c8a:	adc    eax,0x3040003
  411c8f:	pusha  
  411c90:	or     ah,ch
  411c92:	sub    al,0x3
  411c94:	xor    BYTE PTR [ebp+eax*1+0x10],al
  411c98:	xor    eax,DWORD PTR [eax]
  411c9a:	pop    esp
  411c9b:	add    BYTE PTR [eax],bh
  411c9d:	aam    0x0
  411c9f:	mov    ebp,DWORD PTR [ecx+0x1c]
  411ca2:	add    al,0x24
  411ca4:	xchg   edx,eax
  411ca5:	add    DWORD PTR [eax],eax
  411ca7:	add    BYTE PTR [edi+eax*1],ah
  411caa:	inc    ebp
  411cab:	test   BYTE PTR [ebx+eax*1],dl
  411cae:	mov    cl,0x52
  411cb0:	(bad)  
  411cb1:	fist   DWORD PTR [edx]
  411cb3:	and    ecx,DWORD PTR ds:0x4104
  411cb9:	inc    eax
  411cba:	dec    eax
  411cbb:	inc    eax
  411cbc:	adc    eax,DWORD PTR [eax]
  411cbe:	add    BYTE PTR [eax],0x20
  411cc1:	sbb    DWORD PTR [esi+0x8043105],0xffffffd9
  411cc8:	test   DWORD PTR [eax],eax
  411cca:	add    BYTE PTR [eax],al
  411ccc:	sub    eax,DWORD PTR [esi]
  411cce:	push   edi
  411ccf:	aas    
  411cd0:	sbb    BYTE PTR [edx+0x138c2443],dh
  411cd6:	adc    DWORD PTR [ecx+eiz*1+0x45],eax
  411cda:	adc    DWORD PTR [edx+0x9],0x8004805
  411ce1:	xchg   BYTE PTR [edx],al
  411ce3:	rcl    DWORD PTR [eax],0x14
  411ce6:	add    BYTE PTR [eax+ebp*2+0x20192100],al
  411ced:	mov    ds:0x80c90922,al
  411cf2:	dec    edx
  411cf3:	and    BYTE PTR [eax+eax*1],al
  411cf6:	add    BYTE PTR [eax+0x1b0041a2],al
  411cfc:	and    DWORD PTR [eax-0x6fffbf17],edx
  411d02:	mov    cl,0x15
  411d04:	or     al,al
  411d06:	inc    eax
  411d07:	clc    
  411d08:	push   ebp
  411d09:	or     BYTE PTR [eax+ecx*2-0x6e],cl
  411d0d:	add    BYTE PTR [ecx],cl
  411d0f:	adc    al,BYTE PTR [eax+eax*4]
  411d12:	or     BYTE PTR [eax+eiz*1-0x7c],al
  411d16:	dec    ebp
  411d17:	add    ah,al
  411d19:	and    BYTE PTR [eax],0x4b
  411d1c:	adc    edx,DWORD PTR [esi+eax*1-0x55d2bfd9]
  411d23:	or     al,0xc8
  411d25:	sub    BYTE PTR [eax],al
  411d27:	add    ah,al
  411d29:	enter  0x454a,0x24
  411d2d:	sahf   
  411d2e:	or     eax,DWORD PTR [esi]
  411d30:	push   cs
  411d31:	push   es
  411d32:	add    al,0x22
  411d34:	or     al,0x8
  411d36:	dec    ecx
  411d37:	add    BYTE PTR [ecx],al
  411d39:	xor    BYTE PTR [eax],al
  411d3b:	add    BYTE PTR [eax],0x29
  411d3e:	sub    DWORD PTR [eax],ecx
  411d40:	sub    BYTE PTR [eax-0x79fd57f0],al
  411d46:	adc    eax,ecx
  411d48:	push   cs
  411d49:	and    DWORD PTR [eax],esp
  411d4b:	test   BYTE PTR [edx+0x0],cl
  411d4e:	add    eax,0x40203898
  411d53:	adc    DWORD PTR [ebx],ebx
  411d55:	and    al,0x82
  411d57:	add    al,0x30
  411d59:	adc    BYTE PTR [edx],al
  411d5b:	add    al,0x0
  411d5d:	test   BYTE PTR [eax+0x880100],al
  411d63:	add    al,0x20
  411d65:	add    BYTE PTR [edx+0x20a04040],0x24
  411d6c:	ror    BYTE PTR [ebp+0x5],0x8a
  411d70:	adc    BYTE PTR [eax-0x7bf3b5e0],al
  411d76:	inc    eax
  411d77:	and    al,0xa
  411d79:	add    BYTE PTR ds:0x80400090,dl
  411d7f:	adc    BYTE PTR [edx],cl
  411d81:	pop    ecx
  411d82:	sbb    al,0x18
  411d84:	add    DWORD PTR [eax+0x4200102],eax
  411d8a:	cwde   
  411d8b:	add    al,0x2
  411d8d:	add    BYTE PTR [esi],al
  411d8f:	lar    eax,WORD PTR [edx]
  411d92:	and    BYTE PTR [edx],al
  411d94:	add    bl,BYTE PTR [eax]
  411d96:	test   BYTE PTR [eax+eax*1+0xa],ah
  411d9a:	or     DWORD PTR [eax],esi
  411d9c:	add    BYTE PTR [eax+eax*1+0x150c3003],al
  411da3:	add    edi,DWORD PTR ds:0x2808ea0
  411da9:	add    BYTE PTR [eax],al
  411dab:	and    BYTE PTR [eax],al
  411dad:	inc    eax
  411dae:	in     al,dx
  411daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db0:	mov    BYTE PTR [ebx+0x264440d0],dl
  411db6:	add    DWORD PTR [eax],0x248c9501
  411dbc:	adc    bl,BYTE PTR fs:[edx+0x14]
  411dc0:	and    DWORD PTR [eax],ecx
  411dc2:	and    DWORD PTR [edx+0x21],esi
  411dc5:	test   DWORD PTR [ecx],eax
  411dc7:	cwde   
  411dc8:	adc    BYTE PTR [eax-0x80],bl
  411dcb:	cwde   
  411dcc:	mov    al,ds:0x50dea00
  411dd1:	adc    BYTE PTR [ecx+eax*4],ah
  411dd4:	push   esp
  411dd5:	(bad)  
  411dd7:	sub    BYTE PTR [eax],al
  411dd9:	enter  0x7094,0x38
  411ddd:	test   DWORD PTR ds:0x800268,ecx
  411de3:	xor    al,0x41
  411de5:	sbb    BYTE PTR [eax],ch
  411de7:	dec    ecx
  411de8:	add    BYTE PTR [eax],0x20
  411deb:	cmp    BYTE PTR [eax+eiz*4],al
  411dee:	add    DWORD PTR [ebp+0x40],esp
  411df1:	test   DWORD PTR [ebx],eax
  411df3:	add    al,0xc4
  411df5:	dec    eax
  411df6:	pop    es
  411df7:	push   es
  411df8:	adc    BYTE PTR [esi+0x3038f19],al
  411dfe:	adc    BYTE PTR [ecx],al
  411e00:	popa   
  411e01:	mov    al,0x70
  411e03:	or     BYTE PTR [ecx],al
  411e05:	nop
  411e06:	add    al,0xb0
  411e08:	sub    BYTE PTR ds:0x89202030,al
  411e0e:	push   ecx
  411e0f:	aad    0x12
  411e11:	add    BYTE PTR [esi],ch
  411e13:	adc    BYTE PTR [eax],al
  411e15:	add    al,0x0
  411e17:	test   al,0x8
  411e19:	and    al,0x71
  411e1b:	sbb    BYTE PTR [edx],dl
  411e1d:	inc    eax
  411e1e:	add    BYTE PTR [eax],dl
  411e20:	add    al,0x1
  411e22:	dec    eax
  411e23:	or     cl,al
  411e25:	pop    edx
  411e26:	push   esp
  411e27:	add    bh,BYTE PTR [eax]
  411e29:	push   esp
  411e2a:	cmp    al,0x8d
  411e2c:	inc    esp
  411e2d:	add    al,0x20
  411e2f:	sbb    BYTE PTR [eax],0x8
  411e32:	test   DWORD PTR [ebx+0xc],esp
  411e35:	test   DWORD PTR [eax],eax
  411e37:	inc    esi
  411e38:	add    DWORD PTR [ecx],esp
  411e3a:	inc    eax
  411e3b:	mov    al,ds:0x6c03040
  411e40:	push   eax
  411e41:	or     dl,BYTE PTR [eax]
  411e43:	test   al,0x34
  411e45:	push   eax
  411e46:	add    eax,0x42339090
  411e4b:	popa   
  411e4c:	adc    ch,BYTE PTR [eax]
  411e4e:	add    ch,BYTE PTR [ebx]
  411e50:	and    BYTE PTR [eax+edx*1],al
  411e53:	add    BYTE PTR [edx+0x4400444b],ch
  411e59:	and    al,0x1
  411e5b:	and    BYTE PTR [eax],al
  411e5d:	sbb    eax,0x1199120
  411e62:	add    al,0x55
  411e64:	add    BYTE PTR [edi+0x34222d21],cl
  411e6a:	inc    ebp
  411e6b:	add    al,BYTE PTR [eax]
  411e6d:	add    BYTE PTR [eax+0x0],dh
  411e70:	xor    BYTE PTR [ebx+eax*4],cl
  411e73:	xor    al,BYTE PTR [eax+0x27083192]
  411e79:	adc    eax,0x8a284840
  411e7e:	sar    BYTE PTR [eax],cl
  411e80:	add    al,0x44
  411e82:	nop
  411e83:	pop    es
  411e84:	add    DWORD PTR [edx],eax
  411e86:	cdq    
  411e87:	add    al,0x4
  411e89:	loope  0x411ecc
  411e8b:	inc    edx
  411e8c:	add    al,BYTE PTR [eax]
  411e8e:	add    BYTE PTR [eax+0x4],al
  411e91:	xchg   edx,eax
  411e92:	inc    eax
  411e93:	mov    ah,0x9
  411e95:	and    BYTE PTR [ecx],al
  411e97:	test   BYTE PTR [eax],bl
  411e99:	pop    esp
  411e9a:	xchg   BYTE PTR [eax],dl
  411e9c:	rol    BYTE PTR [edx+0x0],0x0
  411ea0:	sbb    al,dl
  411ea2:	add    DWORD PTR [edx+0x0],esp
  411ea5:	nop
  411ea6:	add    cl,BYTE PTR [esi+ebp*1]
  411ea9:	push   0x29434caa
  411eae:	or     BYTE PTR [eax],dl
  411eb0:	add    BYTE PTR [edx+0x2],0x83
  411eb4:	push   cs
  411eb5:	add    al,0x20
  411eb7:	inc    eax
  411eb8:	and    al,0x40
  411eba:	or     eax,eax
  411ebc:	pop    ss
  411ebd:	add    al,BYTE PTR [ecx-0x7fb4fba9]
  411ec3:	or     BYTE PTR [ebx-0x66bb2fe0],cl
  411ec9:	mov    dl,0x0
  411ecb:	sbb    BYTE PTR [eax-0x70],ah
  411ece:	and    BYTE PTR es:[ebx+0x0],dh
  411ed2:	mov    BYTE PTR [eax+0x1],al
  411ed5:	add    BYTE PTR [eax+0x28010],ch
  411edb:	pusha  
  411edc:	jl     0x411ee4
  411ede:	inc    eax
  411edf:	xchg   BYTE PTR [eax+eiz*4+0x60],al
  411ee3:	add    DWORD PTR [ecx],0x400ec000
  411ee9:	add    BYTE PTR [eax],al
  411eeb:	mov    cl,0x8
  411eed:	nop
  411eee:	add    al,0x16
  411ef0:	adc    BYTE PTR [eax],al
  411ef2:	nop
  411ef3:	add    al,0x46
  411ef5:	es push 0x34050260
  411efb:	add    BYTE PTR [ecx+edx*4],ah
  411efe:	and    al,0x30
  411f00:	sbb    DWORD PTR [edx+ebp*4],edx
  411f03:	and    BYTE PTR [edx],0x3
  411f06:	rcl    BYTE PTR [ecx+0x20],0x10
  411f0a:	adc    ch,BYTE PTR [ecx+0x20]
  411f0d:	and    al,BYTE PTR [eax]
  411f0f:	push   eax
  411f10:	add    al,0x10
  411f12:	dec    ebp
  411f13:	push   0x42834c2
  411f18:	sub    BYTE PTR [eax+0x20c2004],cl
  411f1e:	xchg   ecx,eax
  411f1f:	sbb    ah,BYTE PTR [eax]
  411f21:	inc    ecx
  411f22:	sbb    al,BYTE PTR [eax+0x40]
  411f25:	mov    DWORD PTR [ecx],edx
  411f27:	adc    BYTE PTR [eax+edx*4],al
  411f2a:	das    
  411f2b:	adc    eax,0x40098188
  411f30:	or     al,0x0
  411f32:	or     ebx,DWORD PTR [eax]
  411f34:	dec    ecx
  411f35:	loopne 0x411f67
  411f37:	push   ds
  411f38:	inc    esp
  411f39:	inc    ebp
  411f3a:	and    BYTE PTR [eax],ah
  411f3c:	bound  eax,QWORD PTR [eax-0x7b3ffdba]
  411f42:	inc    esp
  411f43:	or     DWORD PTR [eax+0x30],esi
  411f46:	add    BYTE PTR [eax],ch
  411f48:	xchg   ebp,eax
  411f49:	or     BYTE PTR [edx],dl
  411f4b:	(bad)  
  411f4c:	sub    BYTE PTR [ecx+eax*1],dl
  411f4f:	pop    es
  411f50:	pop    ss
  411f51:	dec    ebx
  411f52:	inc    eax
  411f53:	inc    esp
  411f54:	lods   al,BYTE PTR ds:[esi]
  411f55:	sbb    DWORD PTR [eax],ebp
  411f57:	inc    eax
  411f58:	sbb    al,0x16
  411f5a:	push   eax
  411f5b:	sbb    BYTE PTR ds:0x10e01120,cl
  411f61:	or     al,0x60
  411f63:	add    DWORD PTR [edx+0x0],edx
  411f66:	push   es
  411f67:	add    BYTE PTR [ebx+0x100080],cl
  411f6d:	dec    edx
  411f6e:	add    BYTE PTR [eax],al
  411f70:	xchg   esi,eax
  411f71:	sbb    DWORD PTR [edx+eax*1],ebx
  411f74:	dec    esi
  411f75:	and    BYTE PTR [eax],al
  411f77:	push   esp
  411f78:	sub    al,0x7d
  411f7a:	pusha  
  411f7b:	cmp    ch,BYTE PTR [edx]
  411f7d:	add    al,0x70
  411f7f:	add    BYTE PTR [eax+0x1000c44c],al
  411f85:	push   0xffffffa2
  411f87:	sar    ah,cl
  411f89:	aad    0x40
  411f8b:	nop
  411f8c:	adc    ah,BYTE PTR [eax-0x6d]
  411f8f:	or     BYTE PTR [esi+0xa],al
  411f92:	and    BYTE PTR [eax+0x8],al
  411f95:	add    al,0x2
  411f97:	inc    eax
  411f98:	inc    eax
  411f99:	add    DWORD PTR [eax],eax
  411f9b:	and    BYTE PTR [ebx+ecx*1],al
  411f9e:	mov    dl,0x8
  411fa0:	add    BYTE PTR ds:0x8150000a,ch
  411fa6:	call   DWORD PTR ds:0x436a40
  411fac:	das    
  411fad:	and    dl,dl
  411faf:	add    DWORD PTR [ecx],eax
  411fb1:	add    BYTE PTR [esi-0x2a],0x0
  411fb5:	sbb    BYTE PTR [eax+eax*1],dl
  411fb8:	add    dl,al
  411fba:	adc    DWORD PTR [edx+eax*1],esp
  411fbd:	push   ebp
  411fbe:	add    BYTE PTR [edx],dl
  411fc0:	add    DWORD PTR [esi],0x21e06100
  411fc6:	add    DWORD PTR [esp+eax*2],edx
  411fc9:	add    BYTE PTR [ebx+eiz*1],0x94
  411fcd:	mov    ds:0x2000414b,al
  411fd2:	inc    ebx
  411fd3:	inc    ebp
  411fd4:	and    al,0x40
  411fd6:	add    BYTE PTR [edi-0x379f85f6],ah
  411fdc:	dec    edi
  411fdd:	push   ebp
  411fde:	mov    al,ds:0x181c0c0
  411fe3:	add    BYTE PTR [ecx],al
  411fe5:	or     eax,0x651c0198
  411fea:	push   es
  411feb:	inc    ebx
  411fec:	add    BYTE PTR [eax],al
  411fee:	push   es
  411fef:	test   BYTE PTR [ebx],dh
  411ff1:	add    al,BYTE PTR [eax]
  411ff3:	adc    BYTE PTR [eax+0x1428145],al
  411ff9:	add    BYTE PTR [ecx],bl
  411ffb:	or     al,0x2d
  411ffd:	adc    DWORD PTR [edx],ecx
  411fff:	or     cl,BYTE PTR [eax]
  412001:	add    cl,bl
  412003:	or     BYTE PTR [ecx],al
  412005:	sub    DWORD PTR [eax+eax*1],ebx
  412008:	pusha  
  412009:	xor    esp,0x23017000
  41200f:	add    BYTE PTR [eax+esi*2],dl
  412012:	and    dh,BYTE PTR [eax]
  412014:	in     al,0x0
  412016:	add    eax,DWORD PTR [eax+0x30810804]
  41201c:	or     BYTE PTR [eax+0x48],bl
  41201f:	and    DWORD PTR [ecx],eax
  412021:	jo     0x41204b
  412023:	mov    BYTE PTR [eax],ch
  412025:	add    BYTE PTR [ecx],al
  412027:	add    al,0x74
  412029:	and    al,0x4
  41202b:	adc    bh,BYTE PTR [ecx]
  41202d:	xor    DWORD PTR [ecx],eax
  41202f:	and    BYTE PTR [eax+0x1500e0b8],al
  412035:	adc    BYTE PTR [ebx+0x2],cl
  412038:	sbb    al,0x11
  41203a:	js     0x41203e
  41203c:	or     DWORD PTR [ecx],eax
  41203e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203f:	bound  edx,QWORD PTR [edx-0x7d47f7e0]
  412045:	inc    eax
  412046:	inc    eax
  412047:	nop
  412048:	adc    eax,DWORD PTR [eax]
  41204a:	leave  
  41204b:	adc    BYTE PTR [eax],dh
  41204d:	xor    BYTE PTR [edx],al
  41204f:	xor    DWORD PTR [eax-0x77],edx
  412052:	bound  eax,QWORD PTR [eax]
  412054:	xor    BYTE PTR [ecx],al
  412056:	add    BYTE PTR [edx+0xc040800],al
  41205c:	les    eax,FWORD PTR [eax+0x8200041]
  412062:	add    DWORD PTR [eax],esp
  412064:	inc    eax
  412065:	adc    DWORD PTR [eax+0x11088800],edx
  41206b:	add    esp,esp
  41206d:	xor    eax,0x6000880
  412072:	adc    BYTE PTR [eax+ecx*1],0x0
  412076:	inc    ebp
  412077:	add    BYTE PTR [edx-0x70],cl
  41207a:	add    eax,DWORD PTR [ecx+ecx*1]
  41207d:	and    eax,DWORD PTR [eax+0x23]
  412080:	and    eax,0x1245491
  412085:	push   es
  412086:	gs dec edx
  412088:	je     0x41208a
  41208a:	or     eax,edi
  41208c:	rcl    BYTE PTR [esi+0x0],0x53
  412090:	add    BYTE PTR [eax+ecx*4],ah
  412093:	adc    al,0x84
  412095:	and    BYTE PTR [ebx],ah
  412097:	add    BYTE PTR [eax+eax*4],cl
  41209a:	and    BYTE PTR [ecx+0x3a104800],al
  4120a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a1:	add    BYTE PTR ds:0xc044d512,cl
  4120a7:	add    BYTE PTR [ecx],al
  4120a9:	inc    edx
  4120aa:	mov    BYTE PTR [ecx+eax*2],al
  4120ad:	or     BYTE PTR [ebp-0x7d],0x16
  4120b1:	pop    es
  4120b2:	clc    
  4120b3:	add    al,0x8
  4120b5:	inc    esp
  4120b6:	push   esi
  4120b7:	xchg   BYTE PTR [ebp+eax*1+0x66],cl
  4120bb:	enter  0xf40,0x0
  4120bf:	ja     0x4120f2
  4120c1:	and    BYTE PTR [esi],al
  4120c3:	or     al,0x1c
  4120c5:	inc    ecx
  4120c6:	add    eax,0x8100109
  4120cb:	or     ah,BYTE PTR [edx+ecx*1]
  4120ce:	or     eax,DWORD PTR [eax+0x2030810]
  4120d4:	adc    BYTE PTR [esi],al
  4120d6:	and    BYTE PTR [eax],al
  4120d8:	adc    ah,BYTE PTR [eax+0x54b088be]
  4120de:	nop
  4120df:	and    BYTE PTR [esi+0x1c],0x11
  4120e3:	xchg   esp,eax
  4120e4:	xchg   edi,eax
  4120e5:	add    eax,0xc0c00815
  4120ea:	adc    al,0xa2
  4120ec:	push   ds
  4120ed:	add    DWORD PTR fs:[eax+0x4c201700],ebp
  4120f4:	add    DWORD PTR [edi],esp
  4120f6:	sbb    al,0x42
  4120f8:	add    BYTE PTR [eax+0x40],bl
  4120fb:	add    al,BYTE PTR [eax+0x68102744]
  412101:	and    eax,0x82235c9
  412106:	add    DWORD PTR [edx+0x2],eax
  412109:	adc    eax,DWORD PTR [ebx]
  41210b:	mov    eax,ds:0x5080c4
  412110:	or     BYTE PTR [eax+ebp*1+0x1],al
  412114:	add    al,0x42
  412116:	enter  0x9474,0x48
  41211a:	jo     0x41213c
  41211c:	cmp    DWORD PTR [eax+0x30],0x40
  412120:	daa    
  412121:	or     BYTE PTR [edx+0x0],al
  412124:	mov    al,ds:0x8c208084
  412129:	inc    ecx
  41212a:	xchg   ecx,eax
  41212b:	mov    dl,0x1c
  41212d:	and    ecx,edi
  41212f:	xor    BYTE PTR [eax],cl
  412131:	or     edx,DWORD PTR [ecx]
  412133:	push   es
  412134:	inc    esp
  412135:	adc    eax,0x2051550
  41213a:	adc    BYTE PTR [eax+0x9],al
  41213d:	loopne 0x412181
  41213f:	add    cl,al
  412141:	add    ah,dl
  412143:	add    al,0x50
  412145:	pop    es
  412146:	inc    eax
  412147:	add    BYTE PTR ds:0x380214,cl
  41214d:	pop    esp
  41214e:	add    dl,al
  412150:	add    al,0x0
  412152:	add    BYTE PTR [ebx+0x2029b108],cl
  412158:	push   ebx
  412159:	adc    al,0x4
  41215b:	inc    ebx
  41215c:	add    BYTE PTR [eax+eax*1],al
  41215f:	mov    al,ds:0x20c10084
  412164:	adc    esp,esi
  412166:	lods   al,BYTE PTR ds:[esi]
  412167:	mov    al,BYTE PTR [eax+0xda300]
  41216d:	ins    BYTE PTR es:[edi],dx
  41216e:	sbb    esp,DWORD PTR [ecx]
  412170:	popa   
  412171:	sub    al,0x22
  412173:	push   ecx
  412174:	adc    BYTE PTR [ebx+0x35],dl
  412177:	mov    BYTE PTR [eax],cl
  412179:	add    BYTE PTR [eax],al
  41217b:	mov    cl,ah
  41217d:	cmp    BYTE PTR [esi+eax*4],al
  412180:	add    eax,DWORD PTR [eax]
  412182:	and    al,0x1d
  412184:	nop
  412185:	ror    BYTE PTR [edx+edx*2+0x2b851000],0xa
  41218d:	add    BYTE PTR [eax+0x5802009],al
  412193:	dec    edx
  412194:	and    BYTE PTR [eax+esi*4],ch
  412197:	and    BYTE PTR [eax-0x7edf43f8],0x7f
  41219e:	mov    ah,0x22
  4121a0:	or     al,0x45
  4121a2:	pop    esp
  4121a3:	xor    ah,BYTE PTR [edx]
  4121a5:	adc    al,BYTE PTR [eax+0x94209f8]
  4121ab:	and    DWORD PTR [ecx],eax
  4121ad:	inc    ebp
  4121ae:	add    al,BYTE PTR [esi+0xa]
  4121b1:	add    DWORD PTR [edx+esi*2-0x7d],esp
  4121b5:	and    al,0x28
  4121b7:	add    BYTE PTR [eax],al
  4121b9:	adc    DWORD PTR [eax],ebx
  4121bb:	adc    BYTE PTR [edx+0x6],al
  4121be:	sbb    BYTE PTR ds:0x8044688,ah
  4121c4:	add    al,0x12
  4121c6:	add    BYTE PTR [eax],al
  4121c8:	add    BYTE PTR [eax],0x8
  4121cb:	inc    esi
  4121cc:	add    esi,DWORD PTR [ecx+0x40081582]
  4121d2:	lods   al,BYTE PTR ds:[esi]
  4121d3:	ret    0x3920
  4121d6:	add    BYTE PTR [eax],bl
  4121d8:	inc    ecx
  4121d9:	sbb    DWORD PTR [eax-0x6c],esi
  4121dc:	ror    BYTE PTR [eax+0x1],1
  4121df:	mov    WORD PTR [eax],fs
  4121e1:	inc    eax
  4121e2:	add    cl,BYTE PTR [edx]
  4121e4:	dec    esp
  4121e5:	and    BYTE PTR [edi],al
  4121e7:	add    al,0x0
  4121e9:	add    BYTE PTR [eax],0x94
  4121ec:	add    eax,0x320611
  4121f1:	pop    edx
  4121f2:	test   DWORD PTR [esp+eax*2],ecx
  4121f5:	jp     0x4121f7
  4121f7:	popa   
  4121f8:	add    BYTE PTR [eax-0x7f5fbe3b],cl
  4121fe:	xor    al,0xc
  412200:	mov    al,ds:0x22846101
  412205:	(bad)  
  412206:	enter  0x27,0x4
  41220a:	add    cl,dl
  41220c:	add    BYTE PTR [eax-0x64],ah
  41220f:	add    BYTE PTR [eax+0x2c700003],bl
  412215:	bound  eax,QWORD PTR [eax]
  412217:	and    BYTE PTR [ecx+0x21],al
  41221a:	add    esp,DWORD PTR [eax+0x42000a10]
  412220:	inc    ebp
  412221:	add    BYTE PTR [edx],0x0
  412224:	pop    ss
  412225:	mov    eax,0x1b0489c4
  41222a:	adc    BYTE PTR [eax-0x6b7bf9e0],ah
  412230:	add    DWORD PTR [esp+eax*1+0x50],ebx
  412234:	inc    eax
  412235:	les    eax,FWORD PTR [eax]
  412237:	xor    BYTE PTR ds:0x42ccca3,dh
  41223d:	add    BYTE PTR [edx],al
  41223f:	and    eax,0x1ac05003
  412244:	or     BYTE PTR [eax],0x0
  412247:	and    DWORD PTR [eax-0x7bede9bf],0x12
  41224e:	adc    BYTE PTR [edx-0x73fbbd6f],al
  412254:	fwait
  412255:	adc    DWORD PTR [eax],eax
  412257:	push   cs
  412258:	xor    BYTE PTR [eax+0x23],al
  41225b:	je     0x412261
  41225d:	or     DWORD PTR [ecx+eiz*2+0x20],esi
  412261:	or     al,BYTE PTR [ecx+0x0]
  412264:	or     bl,BYTE PTR [ecx]
  412266:	or     DWORD PTR [eax-0x6b],eax
  412269:	add    ah,BYTE PTR [esi+edx*2+0x12]
  41226d:	in     al,dx
  41226e:	add    DWORD PTR [ecx-0x77987fbf],ecx
  412274:	and    al,0x3
  412276:	add    BYTE PTR [eax+0x21a0184c],0x10
  41227d:	xor    cl,BYTE PTR [ebp+0x411901c4]
  412283:	or     BYTE PTR [ecx+ecx*1],al
  412286:	adc    eax,0xd80100
  41228b:	mov    BYTE PTR [esp+ecx*4],0x4
  41228f:	add    BYTE PTR [eax],ah
  412291:	sbb    DWORD PTR [eax+0x20],edx
  412294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412295:	inc    eax
  412296:	inc    edx
  412297:	test   al,0x5
  412299:	or     al,0x13
  41229b:	mov    al,ds:0x50a86490
  4122a0:	push   es
  4122a1:	rol    BYTE PTR [ecx],0x2
  4122a4:	xchg   ecx,eax
  4122a5:	and    al,0x4c
  4122a7:	add    DWORD PTR [eax],eax
  4122a9:	inc    eax
  4122aa:	add    al,0x20
  4122ac:	dec    ecx
  4122ad:	nop
  4122ae:	inc    eax
  4122af:	add    al,0x0
  4122b1:	add    ecx,eax
  4122b3:	add    DWORD PTR [ebx+0x24],eax
  4122b6:	xor    DWORD PTR [eax+0x1c],eax
  4122b9:	or     edx,DWORD PTR [edx]
  4122bb:	adc    al,0x44
  4122bd:	sub    ah,BYTE PTR [eax]
  4122bf:	loope  0x4122d7
  4122c1:	ror    BYTE PTR [eax],0x5e
  4122c4:	xchg   BYTE PTR [esp+edx*1+0x181e00bc],al
  4122cb:	add    BYTE PTR [eax+0x1004412],dl
  4122d1:	add    DWORD PTR [eax+ebp*4+0x1d],eax
  4122d5:	adc    al,BYTE PTR [eax]
  4122d7:	adc    eax,eax
  4122d9:	adc    BYTE PTR [eax+ebx*1],dl
  4122dc:	and    DWORD PTR [eax+eax*4],ecx
  4122df:	mov    eax,ds:0x6140c10
  4122e4:	adc    BYTE PTR [eax],al
  4122e6:	and    al,BYTE PTR [edx+0x0]
  4122e9:	nop
  4122ea:	add    al,BYTE PTR [edx+0x9]
  4122ed:	adc    dl,BYTE PTR [ecx]
  4122ef:	inc    eax
  4122f0:	or     eax,0x500c098
  4122f5:	or     BYTE PTR [ecx+eax*1],dh
  4122f8:	or     ebp,0x40e08088
  4122fe:	popa   
  4122ff:	add    eax,0x80a6c00c
  412304:	mov    ds:0x1948c241,al
  412309:	sub    BYTE PTR [eax],cl
  41230b:	add    BYTE PTR [ecx],al
  41230d:	push   cs
  41230e:	(bad)  
  41230f:	or     BYTE PTR [edx],al
  412311:	test   BYTE PTR [eax+0x7a],dl
  412314:	cli    
  412315:	and    eax,DWORD PTR [ecx+0x50084a89]
  41231b:	and    DWORD PTR [ecx-0x7f],ecx
  41231e:	push   es
  41231f:	push   esp
  412320:	jo     0x412328
  412322:	and    al,BYTE PTR [ecx+0x40b0315]
  412328:	xchg   edx,eax
  412329:	test   BYTE PTR [eax],al
  41232b:	add    BYTE PTR [eax],ah
  41232d:	in     al,0x50
  41232f:	or     BYTE PTR [edi-0x696efdd0],al
  412335:	inc    esp
  412336:	adc    al,0x1
  412338:	mov    WORD PTR [eax+0x1],fs
  41233b:	sub    DWORD PTR [eax],eax
  41233d:	add    esp,DWORD PTR [eax]
  41233f:	push   esi
  412340:	and    al,0x10
  412342:	push   0x84602290
  412347:	adc    al,0x10
  412349:	and    DWORD PTR [edx+eax*1+0x1b],eax
  41234d:	rol    BYTE PTR [ebx],0x8
  412350:	add    al,BYTE PTR [eax]
  412352:	xchg   ebp,eax
  412353:	cmp    cl,BYTE PTR [eax+0x3d45200]
  412359:	add    dl,BYTE PTR [ecx]
  41235b:	xchg   edi,eax
  41235c:	and    BYTE PTR ds:0x1400a005,al
  412362:	adc    DWORD PTR [ecx+edx*2+0x2002],ebp
  412369:	push   eax
  41236a:	test   DWORD PTR [edx],eax
  41236c:	mov    ds:0x4d05483,al
  412371:	add    al,0x24
  412373:	dec    eax
  412374:	or     BYTE PTR [eax+0x2],al
  412377:	add    BYTE PTR [eax+0x1],al
  41237a:	add    BYTE PTR ds:0x40269897,dl
  412380:	inc    eax
  412381:	xor    edx,DWORD PTR [eax]
  412383:	mov    al,ds:0x2c411c31
  412388:	add    BYTE PTR [eax],al
  41238a:	or     BYTE PTR [eax+0x8],0x4
  41238e:	xchg   BYTE PTR [eax],ah
  412390:	and    BYTE PTR [ecx+0x0],bl
  412393:	add    eax,DWORD PTR [eax]
  412395:	sar    DWORD PTR [edx],0xc
  412398:	adc    BYTE PTR [eax+0x4162100],dl
  41239e:	mov    al,ds:0x18a1b015
  4123a3:	mov    DWORD PTR [edx],eax
  4123a5:	sub    BYTE PTR [ebx],dh
  4123a7:	inc    eax
  4123a8:	mov    al,ds:0x102a03
  4123ad:	pop    eax
  4123ae:	pop    esi
  4123af:	add    BYTE PTR [eax],al
  4123b1:	and    DWORD PTR [eax],ecx
  4123b3:	adc    eax,0xc000047d
  4123b8:	add    eax,0x500c0200
  4123bd:	add    esp,DWORD PTR [eax]
  4123bf:	inc    edx
  4123c0:	rol    BYTE PTR [eax],1
  4123c2:	inc    esi
  4123c3:	add    BYTE PTR [eax],0x89
  4123c6:	sub    BYTE PTR [ebx+0x4],ch
  4123c9:	adc    al,BYTE PTR [ebx-0x4fcf9bf8]
  4123cf:	sbb    BYTE PTR [eax],cl
  4123d1:	dec    esp
  4123d2:	add    BYTE PTR [ecx-0x60],0xa3
  4123d6:	adc    al,0x0
  4123d8:	and    eax,DWORD PTR [edx]
  4123da:	adc    BYTE PTR [ebp+0x0],al
  4123dd:	inc    eax
  4123de:	leave  
  4123df:	add    BYTE PTR [edx+0x1074c442],cl
  4123e5:	adc    BYTE PTR [eax+eax*1],al
  4123e8:	xor    DWORD PTR [eax-0x6c],ecx
  4123eb:	add    DWORD PTR [ecx],eax
  4123ed:	les    eax,FWORD PTR [eax-0x7af7b7c0]
  4123f3:	or     BYTE PTR [eax],al
  4123f5:	adc    eax,0x48621410
  4123fa:	or     BYTE PTR [eax],al
  4123fc:	add    eax,0x8a02808a
  412401:	push   esp
  412402:	and    al,0x60
  412404:	inc    esp
  412405:	xchg   DWORD PTR [ebx],esp
  412407:	add    cl,ah
  412409:	sub    BYTE PTR [ecx],dl
  41240b:	test   BYTE PTR [ecx],ah
  41240d:	xchg   esi,eax
  41240e:	add    BYTE PTR ds:0x24800250,al
  412414:	test   al,0x58
  412416:	nop
  412417:	adc    BYTE PTR [esi+edx*1],ah
  41241a:	xor    ah,BYTE PTR [eax-0x72fdfbd8]
  412420:	add    al,0x5
  412422:	(bad)  
  412423:	and    DWORD PTR [ebx+0x6380062],edx
  412429:	add    eax,0x6804c14b
  41242e:	or     al,0xa4
  412430:	adc    al,0xc4
  412432:	mov    al,ds:0x69480580
  412437:	shl    BYTE PTR [eax+ecx*2],0x20
  41243b:	les    ebx,FWORD PTR [eax]
  41243d:	add    eax,ecx
  41243f:	xor    BYTE PTR [edx+0x48],al
  412442:	xor    BYTE PTR [eax],dl
  412444:	adc    BYTE PTR [eax+eax*1+0x50],al
  412448:	dec    ebx
  412449:	inc    eax
  41244a:	push   esp
  41244b:	adc    eax,DWORD PTR [edx]
  41244d:	sbb    BYTE PTR [ecx],al
  41244f:	add    BYTE PTR [eax],al
  412451:	adc    BYTE PTR [ecx-0x7f779f5f],al
  412457:	adc    BYTE PTR [eax],cl
  412459:	and    BYTE PTR [eax],al
  41245b:	or     DWORD PTR [eax+0x0],eax
  41245e:	or     al,0x46
  412460:	push   es
  412461:	adc    DWORD PTR [ecx-0x7f],ecx
  412464:	pop    es
  412465:	and    eax,0x4892004
  41246a:	inc    eax
  41246b:	adc    eax,0x8d02044
  412470:	popa   
  412471:	adc    BYTE PTR [ebx+ecx*1+0x4b80104],ah
  412478:	push   esp
  412479:	adc    al,0x14
  41247b:	or     DWORD PTR [eax],ecx
  41247d:	sbb    al,BYTE PTR [eax-0x6bbfffd0]
  412483:	pop    esp
  412484:	push   eax
  412485:	and    eax,DWORD PTR [eax]
  412487:	add    BYTE PTR [esi-0x36677e00],al
  41248d:	xchg   esp,eax
  41248e:	xor    BYTE PTR [eax+0x32089],ah
  412494:	add    BYTE PTR [eax-0x5ed5fed5],ah
  41249a:	add    BYTE PTR [edx],al
  41249c:	pop    esi
  41249d:	add    BYTE PTR [edx],bh
  41249f:	cdq    
  4124a0:	ret    0x812
  4124a3:	add    eax,0xc070000
  4124a8:	pop    es
  4124a9:	sbb    al,BYTE PTR [ebx]
  4124ab:	jno    0x4124c6
  4124ad:	add    eax,0x94c03880
  4124b2:	add    bh,al
  4124b4:	xchg   edx,eax
  4124b5:	xor    al,0x2
  4124b7:	bound  ebp,QWORD PTR ds:0x61c15080
  4124bd:	call   0x18dd:0x38140180
  4124c4:	ret    
  4124c5:	add    al,BYTE PTR [eax-0x4ff67b7d]
  4124cb:	add    al,0x33
  4124cd:	adc    BYTE PTR [edx],0x60
  4124d0:	push   es
  4124d1:	mov    fs:0x49282cb8,eax
  4124d7:	inc    eax
  4124d8:	or     al,BYTE PTR [eax]
  4124da:	and    cl,BYTE PTR [eax]
  4124dc:	push   0x442696e0
  4124e1:	and    al,0xc2
  4124e3:	push   es
  4124e4:	cwde   
  4124e5:	add    al,BYTE PTR [esi]
  4124e7:	or     eax,0x4880e609
  4124ec:	add    BYTE PTR [ebx+0x7004630],al
  4124f2:	push   es
  4124f3:	xchg   edi,eax
  4124f4:	and    BYTE PTR [edx],al
  4124f6:	add    ah,BYTE PTR [eax+0x24]
  4124f9:	and    DWORD PTR [eax],eax
  4124fb:	mov    ebp,0x19020d4
  412500:	adc    BYTE PTR [eax+eiz*2+0x30098139],dl
  412507:	adc    al,0xc3
  412509:	add    BYTE PTR [ecx],al
  41250b:	or     BYTE PTR [eax+0xc],al
  41250e:	and    BYTE PTR ds:0x22401051,al
  412514:	and    eax,DWORD PTR [eax]
  412516:	sub    DWORD PTR [ecx],0x2b
  412519:	inc    eax
  41251a:	dec    esi
  41251b:	add    DWORD PTR [esp+eax*8],edx
  41251e:	or     BYTE PTR [edx],cl
  412520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412521:	add    eax,0x24026c0c
  412526:	add    al,0x12
  412528:	or     al,BYTE PTR [ecx]
  41252a:	add    al,0xd4
  41252c:	inc    eax
  41252d:	dec    edx
  41252e:	mov    ds,esi
  412530:	les    esp,FWORD PTR fs:[eax+eax*2]
  412534:	mov    al,0x9
  412536:	add    dl,BYTE PTR [edx+0x58]
  412539:	add    BYTE PTR [ecx],bl
  41253b:	inc    esp
  41253c:	nop
  41253d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253e:	adc    al,0x23
  412540:	or     BYTE PTR [edx],bh
  412542:	add    al,0x10
  412544:	sub    bl,BYTE PTR [ecx]
  412546:	ret    0x20
  412549:	mov    BYTE PTR [esi],al
  41254b:	adc    DWORD PTR [eax],0x3598a9a2
  412551:	sbb    eax,DWORD PTR [ecx-0x7ffefd00]
  412557:	add    al,0x0
  412559:	xchg   DWORD PTR [eax],eax
  41255b:	test   BYTE PTR [eax+0x40809010],al
  412561:	or     BYTE PTR [eax+0x12],cl
  412564:	add    cl,0x4c
  412567:	mov    WORD PTR [ecx],fs
  412569:	add    ah,BYTE PTR [edx]
  41256b:	sbb    BYTE PTR [ebp+0x40],dl
  41256e:	sub    BYTE PTR [eax],dl
  412570:	add    al,0x84
  412572:	(bad)  
  412574:	add    eax,ebp
  412576:	inc    eax
  412577:	lea    edx,ds:0x8051a007
  41257d:	jae    0x4125ae
  41257f:	and    BYTE PTR [ecx],0x4
  412582:	mov    al,ds:0x8b51c102
  412587:	cwde   
  412588:	add    BYTE PTR [eax-0x7f],al
  41258b:	add    eax,0x81020560
  412590:	or     al,BYTE PTR [esp+ebp*4]
  412593:	add    DWORD PTR [eax],esi
  412595:	xor    BYTE PTR [ecx],al
  412597:	adc    DWORD PTR ds:0x84410060,0x0
  41259e:	add    DWORD PTR [edx+0x8cac881],ebx
  4125a4:	and    al,0x10
  4125a6:	enter  0x804,0x82
  4125aa:	adc    BYTE PTR [eax],ah
  4125ac:	or     al,0x92
  4125ae:	mov    ds:0x51440082,al
  4125b3:	add    al,BYTE PTR [esi]
  4125b5:	push   ecx
  4125b6:	add    al,0x22
  4125b8:	or     al,0x84
  4125ba:	or     BYTE PTR [esp+eax*1-0x2d],cl
  4125be:	loopne 0x4125c0
  4125c0:	or     eax,0xc0084303
  4125c5:	xchg   esp,eax
  4125c6:	dec    edi
  4125c7:	mov    BYTE PTR [ecx+eax*1+0x0],al
  4125cb:	add    BYTE PTR [ecx],bh
  4125cd:	dec    eax
  4125ce:	mov    al,ds:0x15040446
  4125d3:	sbb    BYTE PTR [edx],al
  4125d5:	add    BYTE PTR [eax],al
  4125d7:	add    DWORD PTR [ebp-0x6ec7df7f],esp
  4125dd:	mov    eax,DWORD PTR ds:0x45088
  4125e3:	push   es
  4125e4:	adc    BYTE PTR [edx+0x5],al
  4125e7:	or     DWORD PTR [eax-0x7b8ee777],ecx
  4125ed:	xchg   esi,eax
  4125ee:	add    DWORD PTR [eax+0x1aa2058c],edx
  4125f4:	inc    ecx
  4125f5:	add    BYTE PTR [eax+eax*1],al
  4125f8:	xor    BYTE PTR [edx],bh
  4125fa:	add    DWORD PTR [ebx+eiz*4+0x6408804],eax
  412601:	nop
  412602:	aam    0x8
  412604:	add    DWORD PTR [eax+0x26808b09],0x9
  41260b:	cwde   
  41260c:	and    eax,0x5201c40a
  412611:	dec    esp
  412612:	add    ecx,DWORD PTR [edx+eax*1]
  412615:	xor    BYTE PTR [edx+eax*2+0x82032c8],bl
  41261c:	adc    al,ah
  41261e:	add    al,0x18
  412621:	or     BYTE PTR [ecx],al
  412623:	or     BYTE PTR [eax-0x10],al
  412626:	adc    BYTE PTR [eax],cl
  412628:	or     DWORD PTR [ebp+0x8884d10],edi
  41262e:	add    BYTE PTR [ecx+0x8],al
  412631:	add    BYTE PTR [edx],0x44
  412634:	or     BYTE PTR [edx],0x78
  412637:	or     BYTE PTR [ecx+0x2040622e],dl
  41263d:	mov    al,0x3e
  41263f:	add    eax,0x10020b8
  412644:	push   ss
  412645:	adc    BYTE PTR [eax+0x5286011c],0x1a
  41264c:	add    al,0x0
  41264e:	adc    BYTE PTR [eax-0x3b],al
  412651:	and    BYTE PTR [ebp+0x0],cl
  412654:	sub    al,0xc0
  412657:	sbb    BYTE PTR [edx-0x1b],dl
  41265a:	and    BYTE PTR [edx],al
  41265c:	nop
  41265d:	cmp    al,0x20
  41265f:	xor    BYTE PTR [eax],cl
  412661:	mov    al,ds:0x4140900
  412666:	pop    ebp
  412667:	add    BYTE PTR [ebp+0x60860410],al
  41266d:	and    BYTE PTR [eax+0x14420201],al
  412673:	pusha  
  412674:	mov    cl,BYTE PTR [edx]
  412676:	xor    BYTE PTR [ecx+0x50a8a18],dl
  41267c:	and    BYTE PTR [esi+0x1],ah
  41267f:	add    BYTE PTR [ecx],al
  412681:	add    ch,BYTE PTR [ebx]
  412683:	and    BYTE PTR [eax+0x47423008],bh
  412689:	add    DWORD PTR [esi+eax*1+0x1c084118],eax
  412690:	sbb    BYTE PTR [eax],al
  412692:	add    DWORD PTR [ecx],ecx
  412694:	add    dh,BYTE PTR [eax-0x4f9ebb7f]
  41269a:	or     dl,BYTE PTR [eax]
  41269c:	test   al,al
  41269e:	mov    al,0x8c
  4126a0:	and    al,0x0
  4126a2:	add    al,0x0
  4126a4:	add    DWORD PTR [eax],esp
  4126a6:	adc    DWORD PTR [ebx],0x164d120d
  4126ac:	add    al,0x1
  4126ae:	and    BYTE PTR [eax*1+0x26019000],ch
  4126b5:	and    bl,al
  4126b7:	or     BYTE PTR [edi+eax*8],0x0
  4126bb:	inc    esp
  4126bc:	or     DWORD PTR [eax],ecx
  4126be:	imul   eax,DWORD PTR [eax+ecx*1],0x685a021
  4126c5:	test   BYTE PTR [ecx+0x10],al
  4126c8:	add    BYTE PTR [eax+0x420936b0],dl
  4126ce:	inc    eax
  4126cf:	test   al,0x50
  4126d1:	push   ebx
  4126d2:	inc    eax
  4126d3:	adc    al,0x80
  4126d5:	loopne 0x4126e2
  4126d7:	add    DWORD PTR [esp+eax*1+0x0],ebx
  4126db:	and    BYTE PTR [edx+eax*2],dh
  4126de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126df:	mov    BYTE PTR [eax+edx*2+0x3822800],al
  4126e6:	adc    BYTE PTR [esi+0x890004b],al
  4126ec:	or     BYTE PTR [edx],al
  4126ee:	nop
  4126ef:	inc    eax
  4126f0:	mov    ah,BYTE PTR [eax+eax*1]
  4126f3:	daa    
  4126f4:	xchg   BYTE PTR [eax],cl
  4126f6:	or     DWORD PTR [edx],ecx
  4126f8:	nop
  4126f9:	add    BYTE PTR [ebx+0x64],al
  4126fc:	add    BYTE PTR [ecx+0xb206017],dl
  412702:	xor    al,0x18
  412704:	adc    DWORD PTR [eax],0x1240e02
  41270a:	xchg   BYTE PTR [ecx],dl
  41270c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41270d:	inc    esp
  41270e:	dec    esp
  41270f:	and    ah,BYTE PTR [eax]
  412711:	and    eax,0x88600818
  412716:	inc    eax
  412717:	add    ah,BYTE PTR [esi]
  412719:	imul   eax,DWORD PTR [eax],0x22
  41271c:	add    ah,BYTE PTR [eax]
  41271e:	push   eax
  41271f:	add    al,0x0
  412721:	nop
  412722:	inc    esi
  412723:	js     0x412729
  412725:	add    DWORD PTR [esp+eax*4-0x5f6df500],eax
  41272c:	cmp    BYTE PTR [eax],cl
  41272e:	adc    BYTE PTR [ebx+0x11],cl
  412731:	les    ebp,FWORD PTR [eax*1+0x1001860]
  412738:	xchg   BYTE PTR [ebx],ah
  41273a:	push   0x4
  41273c:	add    esp,DWORD PTR [edi]
  41273e:	add    BYTE PTR [eax],al
  412740:	add    DWORD PTR [eax],eax
  412742:	pop    eax
  412743:	adc    BYTE PTR [edx],ah
  412745:	inc    edx
  412746:	inc    eax
  412747:	add    cl,BYTE PTR [ecx]
  412749:	sub    dl,BYTE PTR [edx+esi*1+0x3]
  41274d:	add    BYTE PTR [edx+0x60],ah
  412750:	add    al,0x81
  412752:	dec    esi
  412753:	add    BYTE PTR [ecx],al
  412755:	inc    eax
  412756:	adc    BYTE PTR [eax+0x48],ah
  412759:	mov    al,ds:0x89810ce0
  41275e:	or     BYTE PTR [eax-0x7e],0x8
  412762:	test   DWORD PTR [eax],edx
  412764:	add    DWORD PTR [eax+0x100804c9],eax
  41276a:	inc    ecx
  41276b:	sub    al,0x58
  41276d:	or     BYTE PTR [eax],cl
  41276f:	add    BYTE PTR [eax+eax*1+0x2],al
  412773:	shr    BYTE PTR [eax],1
  412775:	adc    BYTE PTR [ecx+esi*2],al
  412778:	add    DWORD PTR [eax],eax
  41277a:	add    BYTE PTR [edx],dl
  41277c:	call   DWORD PTR ds:0x436a18
  412782:	add    BYTE PTR [ecx],al
  412784:	add    al,0xf8
  412787:	adc    BYTE PTR [ecx+0x28],al
  41278a:	and    al,0x24
  41278c:	push   es
  41278d:	sub    al,0x14
  41278f:	add    al,0x0
  412791:	lods   al,BYTE PTR ds:[esi]
  412792:	xchg   DWORD PTR [eax-0x7e3fe960],eax
  412798:	add    BYTE PTR [ecx],ah
  41279a:	push   ss
  41279b:	add    al,0x4
  41279d:	xor    eax,0x1803800b
  4127a2:	sbb    BYTE PTR [eax],al
  4127a4:	and    BYTE PTR [eax],0x6
  4127a7:	add    BYTE PTR [ecx+0x448100d2],bl
  4127ad:	jo     0x412744
  4127af:	adc    al,0x3c
  4127b1:	add    al,BYTE PTR [ecx-0x5a]
  4127b4:	and    al,0x42
  4127b6:	sub    BYTE PTR [eax],al
  4127b8:	retf   0x2900
  4127bb:	xor    al,0x49
  4127bd:	add    BYTE PTR [eax],cl
  4127bf:	or     BYTE PTR [esi+0x40230da0],dh
  4127c5:	push   edx
  4127c6:	add    BYTE PTR [eax],ah
  4127c8:	xor    BYTE PTR [ebx+eax*1],0x40
  4127cc:	or     al,0x0
  4127ce:	sar    BYTE PTR [edi+0x731131],0x84
  4127d5:	push   0xffffffa0
  4127d7:	add    BYTE PTR [eax-0x40],al
  4127da:	add    BYTE PTR [eax],dh
  4127dc:	popa   
  4127dd:	add    BYTE PTR [eax],0x8
  4127e0:	add    BYTE PTR ds:0x16805408,al
  4127e6:	shr    BYTE PTR [ecx],0x1
  4127e9:	adc    BYTE PTR [edx],0xb4
  4127ec:	inc    eax
  4127ed:	and    al,0x20
  4127ef:	inc    ecx
  4127f0:	nop
  4127f1:	adc    BYTE PTR es:[eax],al
  4127f4:	add    BYTE PTR [ecx+0x8020340],cl
  4127fa:	inc    esp
  4127fb:	inc    edx
  4127fc:	adc    DWORD PTR [eax+0x50843],ecx
  412802:	and    bh,BYTE PTR [eax]
  412804:	add    BYTE PTR [ecx],ah
  412806:	xor    al,BYTE PTR [eax]
  412808:	pop    ecx
  412809:	inc    eax
  41280a:	add    BYTE PTR [ebx+ecx*1],dl
  41280d:	add    BYTE PTR [eax+0x58a003],al
  412813:	add    edx,DWORD PTR [eax]
  412815:	inc    ecx
  412816:	adc    DWORD PTR [eax],edx
  412818:	add    DWORD PTR [edx],eax
  41281a:	stos   BYTE PTR es:[edi],al
  41281b:	xchg   ecx,eax
  41281c:	xchg   esp,eax
  41281d:	fwait
  41281e:	sub    dl,BYTE PTR [eax+0x20500505]
  412824:	add    ecx,DWORD PTR [esp+eax*1]
  412827:	mov    ds:0x1110031,al
  41282c:	test   eax,0x800007f8
  412831:	add    al,0x14
  412833:	add    BYTE PTR [eax],0x10
  412836:	mov    ch,0x72
  412838:	and    al,0x60
  41283a:	add    BYTE PTR [edx],al
  41283c:	js     0x412847
  41283e:	inc    esp
  41283f:	add    BYTE PTR [eax+0x44],cl
  412842:	or     BYTE PTR [ebp-0x755bff78],al
  412848:	add    BYTE PTR [esp+ebp*4],al
  41284b:	nop
  41284c:	add    ecx,eax
  41284e:	add    BYTE PTR [eax],al
  412850:	inc    ecx
  412851:	test   BYTE PTR [esp+ecx*1],al
  412854:	popf   
  412855:	or     dl,BYTE PTR ds:0x10809020
  41285b:	dec    ecx
  41285c:	or     al,0x46
  41285e:	or     DWORD PTR [edx],eax
  412860:	or     BYTE PTR [edx],al
  412862:	add    DWORD PTR [esp+edx*1],edx
  412865:	push   ecx
  412866:	xor    DWORD PTR [ecx+ecx*1-0x3d],0xffffffb0
  41286b:	add    ebp,0x822218b
  412871:	add    cl,BYTE PTR [esp+eax*1]
  412874:	add    eax,0x10b01801
  412879:	add    al,0x48
  41287b:	adc    BYTE PTR [ecx],al
  41287d:	pusha  
  41287e:	adc    eax,0x1b800809
  412883:	push   ebx
  412884:	push   ebx
  412885:	sub    BYTE PTR [eax],ah
  412887:	and    BYTE PTR [edx+0x1],ah
  41288a:	inc    edx
  41288b:	and    al,0x18
  41288d:	dec    eax
  41288e:	add    BYTE PTR [eax],al
  412890:	add    al,0x0
  412892:	adc    BYTE PTR [eax+ecx*2],ah
  412895:	and    BYTE PTR [edx+eiz*8],cl
  412898:	xor    DWORD PTR [eax],edx
  41289a:	push   edx
  41289b:	mov    al,0x60
  41289d:	inc    eax
  41289e:	inc    eax
  41289f:	adc    DWORD PTR [ebx],0x104444a0
  4128a5:	xor    DWORD PTR [eax+ecx*4+0xa],eax
  4128a9:	or     BYTE PTR [eax+ebp*2],al
  4128ac:	add    al,dl
  4128ae:	add    BYTE PTR [eax+eax*2],al
  4128b1:	or     eax,DWORD PTR [eax+0x4162490]
  4128b7:	add    DWORD PTR [eax+0x4c200082],eax
  4128bd:	and    DWORD PTR ds:0x511f10a9,eax
  4128c3:	and    ch,bh
  4128c5:	add    al,BYTE PTR [eax]
  4128c7:	xor    BYTE PTR [eax+0x1],cl
  4128ca:	inc    ecx
  4128cb:	popa   
  4128cc:	jo     0x412856
  4128ce:	dec    ecx
  4128cf:	add    DWORD PTR [eax],eax
  4128d1:	add    BYTE PTR [eax],0x43
  4128d4:	mov    ds:0x1001e841,eax
  4128d9:	test   DWORD PTR [edx],eax
  4128db:	adc    BYTE PTR [eax+0x4610418a],al
  4128e1:	add    BYTE PTR [eax],dl
  4128e3:	sub    BYTE PTR [eax],ah
  4128e5:	add    BYTE PTR [edx+0x29c204b4],dl
  4128eb:	mov    BYTE PTR [edx+0x14211003],dl
  4128f1:	loope  0x412883
  4128f3:	sub    ah,0x81
  4128f6:	add    BYTE PTR [esi+0x0],al
  4128f9:	rcl    DWORD PTR [edi],0x0
  4128fc:	pushf  
  4128fd:	mov    cl,BYTE PTR [ecx]
  4128ff:	adc    al,0x83
  412901:	sub    al,BYTE PTR [edx+0x9]
  412904:	or     BYTE PTR [edx],dl
  412906:	dec    edx
  412907:	xchg   ebp,eax
  412908:	leave  
  412909:	add    BYTE PTR [edx],cl
  41290b:	and    BYTE PTR [eax],dl
  41290d:	inc    eax
  41290e:	mov    WORD PTR [eax+0x0],?
  412911:	or     BYTE PTR [ebx],dl
  412913:	add    WORD PTR [esi+0x0],ax
  412917:	add    BYTE PTR [ebp+0x44869043],al
  41291d:	add    BYTE PTR [esi],al
  41291f:	mov    dl,0x2
  412921:	or     BYTE PTR ds:0x902c16,dl
  412927:	add    al,0x1a
  412929:	add    BYTE PTR [ecx],ah
  41292b:	dec    eax
  41292c:	add    BYTE PTR [esi+0x2],al
  41292f:	mov    BYTE PTR [ecx],al
  412931:	add    al,0x42
  412933:	add    BYTE PTR [eax+0x60],0x41
  412937:	adc    al,BYTE PTR [eax]
  412939:	(bad)  
  41293a:	pusha  
  41293b:	adc    esp,DWORD PTR [eax]
  41293d:	inc    ecx
  41293e:	adc    al,0x4e
  412940:	(bad)  
  412941:	rol    BYTE PTR [eax+0x4c100094],1
  412947:	sbb    BYTE PTR [eax],dh
  412949:	mov    WORD PTR [eax+0x58],es
  41294c:	add    al,0x8e
  41294e:	bound  esp,QWORD PTR [esi+0x9]
  412951:	add    al,BYTE PTR [ecx]
  412953:	add    al,0x2
  412955:	mov    dh,0x44
  412957:	add    DWORD PTR [ecx+ecx*1],eax
  41295a:	or     BYTE PTR [eax-0x7fcffffd],ah
  412960:	test   BYTE PTR [eax],dl
  412962:	add    DWORD PTR [edx-0x5f],0x9310c560
  412969:	jbe    0x4128ed
  41296b:	add    BYTE PTR [ebx],al
  41296d:	nop
  41296e:	and    al,0xa0
  412970:	or     BYTE PTR [ebp+0x1],al
  412973:	sub    al,0x82
  412975:	or     BYTE PTR [eax-0x80],0x5
  412979:	dec    eax
  41297a:	es pop ds
  41297c:	add    DWORD PTR [edx],eax
  41297e:	test   BYTE PTR [eax+0x42008a00],al
  412984:	test   BYTE PTR [ecx+0x0],dl
  412987:	mov    WORD PTR [esi],es
  412989:	add    al,BYTE PTR ss:[esp+eax*1]
  41298d:	mov    WORD PTR [eax],es
  41298f:	add    BYTE PTR [edx],0x68
  412992:	retf   0xe202
  412995:	in     al,0x94
  412997:	add    BYTE PTR [ecx+0xd],dl
  41299a:	inc    eax
  41299b:	add    BYTE PTR [eax],ah
  41299d:	inc    esp
  41299e:	add    BYTE PTR [eax-0x77],0x82
  4129a2:	adc    al,0x28
  4129a4:	xchg   esp,eax
  4129a5:	adc    al,0x4
  4129a7:	inc    eax
  4129a8:	inc    edx
  4129a9:	add    DWORD PTR [eax+0x42],edx
  4129ac:	popa   
  4129ad:	pusha  
  4129ae:	ror    BYTE PTR [ebx],0x4
  4129b1:	adc    al,0x30
  4129b3:	add    dl,BYTE PTR [edx+0x0]
  4129b6:	mov    ds:0x880310,eax
  4129bb:	test   eax,0x75110028
  4129c0:	or     ch,BYTE PTR [eax]
  4129c2:	add    BYTE PTR [ecx],al
  4129c4:	mov    al,ah
  4129c6:	and    ch,BYTE PTR [edx]
  4129c8:	add    BYTE PTR [ecx+eax*1-0x44],al
  4129cc:	add    al,0x80
  4129ce:	or     BYTE PTR [eax-0x7df9f7b9],cl
  4129d4:	or     BYTE PTR [eax],0x20
  4129d7:	and    ah,BYTE PTR [ecx+0x13501911]
  4129dd:	adc    eax,DWORD PTR [ebx+0x10]
  4129e0:	mov    BYTE PTR [eax],dh
  4129e2:	add    DWORD PTR [ebx],0x30
  4129e5:	mov    WORD PTR [ecx+0x22a00019],es
  4129eb:	sub    BYTE PTR ds:0x21012848,al
  4129f1:	nop
  4129f2:	add    BYTE PTR [eax],al
  4129f4:	add    esi,DWORD PTR [edx+eiz*1+0x6026880]
  4129fb:	sbb    BYTE PTR [eax+ebx*1+0x41d0888],al
  412a02:	xchg   ecx,eax
  412a03:	sbb    DWORD PTR [eax+0x42860817],ecx
  412a09:	inc    eax
  412a0a:	or     DWORD PTR [eax],ecx
  412a0c:	push   eax
  412a0d:	mov    al,ds:0x20800911
  412a12:	add    BYTE PTR [eax+0x51],al
  412a15:	shl    BYTE PTR [eax+ebx*1+0x30030002],0x4
  412a1d:	and    al,0x19
  412a1f:	xor    BYTE PTR [edx-0x76fdff70],0xc4
  412a26:	add    cl,BYTE PTR [eax]
  412a28:	and    eax,DWORD PTR [eax+0x27]
  412a2b:	nop
  412a2c:	and    BYTE PTR [esi+esi*8],al
  412a2f:	and    al,BYTE PTR [eax]
  412a31:	push   ds
  412a32:	pop    esp
  412a33:	rol    BYTE PTR [eax],0xa0
  412a36:	xor    DWORD PTR [edi],0x2810c048
  412a3c:	rcl    BYTE PTR [eax-0x6fa7f180],0x4
  412a43:	sbb    ah,BYTE PTR [ecx+0x0]
  412a46:	loopne 0x4129d8
  412a48:	inc    ecx
  412a49:	or     BYTE PTR [esi],al
  412a4b:	or     BYTE PTR [ebp+0x21],al
  412a4e:	and    BYTE PTR [eax-0x7c],al
  412a51:	push   ss
  412a52:	pusha  
  412a53:	mov    BYTE PTR [eax+0x8],ch
  412a56:	xor    BYTE PTR [eax-0x3a],al
  412a59:	add    BYTE PTR [eax+0x2],al
  412a5c:	jl     0x412a86
  412a5e:	xor    eax,0x80003800
  412a64:	loopne 0x412a72
  412a66:	inc    eax
  412a67:	mov    al,0x20
  412a69:	sbb    BYTE PTR [eax+esi*1],dh
  412a6c:	sbb    eax,0x7a420906
  412a71:	inc    esp
  412a72:	add    al,0xb2
  412a74:	or     DWORD PTR [ecx-0x3ffea7f4],edi
  412a7a:	dec    esp
  412a7b:	add    BYTE PTR [eax+0x70],cl
  412a7e:	int3   
  412a7f:	sbb    DWORD PTR [edx],esp
  412a81:	adc    al,0x28
  412a83:	cmp    bl,BYTE PTR [edx]
  412a85:	mov    ss,WORD PTR [eax]
  412a87:	add    al,0x1
  412a89:	add    BYTE PTR [eax-0x7fabf5be],al
  412a8f:	mov    eax,ds:0xd8c81005
  412a94:	add    BYTE PTR [ecx],0xa
  412a97:	add    eax,0x48060241
  412a9c:	add    BYTE PTR [eax],0xc1
  412a9f:	or     BYTE PTR [eax+esi*1+0xc512801],cl
  412aa6:	test   BYTE PTR [edx],al
  412aa8:	add    al,BYTE PTR [edx]
  412aaa:	rcl    BYTE PTR [eax+0x188040d2],1
  412ab0:	shl    BYTE PTR [ecx+eax*4],1
  412ab3:	or     esi,DWORD PTR [edx+0x12]
  412ab6:	dec    ebx
  412ab7:	daa    
  412ab8:	cwde   
  412ab9:	inc    edx
  412aba:	loopne 0x412afc
  412abc:	and    al,0x26
  412abe:	add    dl,BYTE PTR [eax]
  412ac0:	rol    DWORD PTR [ecx-0x2c],1
  412ac3:	inc    esi
  412ac4:	inc    eax
  412ac5:	adc    BYTE PTR [eax-0x3e],0x4
  412ac9:	pusha  
  412aca:	adc    BYTE PTR [esi+0x2c],al
  412acd:	mov    al,ds:0x9402060
  412ad2:	dec    edx
  412ad3:	add    DWORD PTR [ecx],ecx
  412ad5:	add    al,BYTE PTR [eax]
  412ad7:	add    BYTE PTR [ebx],al
  412ad9:	add    al,BYTE PTR [eax]
  412adb:	shl    BYTE PTR [ecx],0x14
  412ade:	dec    esp
  412adf:	or     DWORD PTR [edx],edx
  412ae1:	or     eax,0x59509895
  412ae6:	inc    edx
  412ae7:	pop    ebp
  412ae8:	add    DWORD PTR [ecx],edx
  412aea:	inc    eax
  412aeb:	nop
  412aec:	mov    al,ds:0xc222060
  412af1:	sub    BYTE PTR [eax+0x40026484],al
  412af7:	nop
  412af8:	add    BYTE PTR [edi],dh
  412afa:	and    ah,dl
  412afc:	add    DWORD PTR [ecx+0x31465800],0x1c020151
  412b06:	add    cl,BYTE PTR [ebx]
  412b08:	inc    eax
  412b09:	push   eax
  412b0a:	add    al,0x0
  412b0c:	add    BYTE PTR [eax+0x24],al
  412b0f:	adc    dl,BYTE PTR [eax]
  412b11:	test   DWORD PTR [ecx],eax
  412b13:	push   eax
  412b14:	and    BYTE PTR [ecx+0x2ba51864],al
  412b1a:	je     0x412b21
  412b1c:	ret    0x30
  412b1f:	xor    DWORD PTR [edx],eax
  412b21:	or     BYTE PTR [edx+0x0],ah
  412b24:	and    ch,BYTE PTR [eax]
  412b26:	and    BYTE PTR [eax-0x7fef6500],dl
  412b2c:	outs   dx,BYTE PTR ds:[esi]
  412b2d:	push   ebp
  412b2e:	or     al,0xc2
  412b30:	add    cl,BYTE PTR [eax]
  412b32:	sub    BYTE PTR [eax],0x1
  412b35:	add    al,0x3
  412b37:	add    DWORD PTR [edx],0x80110b04
  412b3d:	popa   
  412b3e:	inc    esp
  412b3f:	rcr    BYTE PTR [ecx],0x84
  412b42:	sub    al,0xb0
  412b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b45:	or     BYTE PTR [eax+0x0],al
  412b48:	adc    cl,dl
  412b4a:	and    dh,BYTE PTR [eax]
  412b4c:	add    BYTE PTR [edx],cl
  412b4e:	inc    esp
  412b4f:	add    al,0xb0
  412b51:	pop    es
  412b52:	push   edx
  412b53:	and    DWORD PTR [esp+edx*2+0x10cd318b],edx
  412b5a:	enter  0x8451,0x30
  412b5e:	es add al,al
  412b61:	sbb    DWORD PTR [eax-0x52],ecx
  412b64:	and    BYTE PTR [edx],ah
  412b66:	add    eax,0x21c01ee0
  412b6b:	add    al,0x4d
  412b6d:	and    al,0x40
  412b6f:	add    BYTE PTR [eax+0x60],0x20
  412b73:	lods   eax,DWORD PTR ds:[esi]
  412b74:	cdq    
  412b75:	adc    eax,eax
  412b77:	adc    BYTE PTR [eax-0x2c],ah
  412b7a:	add    al,BYTE PTR [ebx]
  412b7c:	add    al,0x10
  412b7e:	push   es
  412b7f:	mov    bh,0x74
  412b81:	sub    eax,0x4008044
  412b86:	ins    BYTE PTR es:[edi],dx
  412b87:	adc    DWORD PTR [eax],eax
  412b89:	and    eax,DWORD PTR [eax+0x21]
  412b8c:	lods   al,BYTE PTR ds:[esi]
  412b8d:	aam    0x1
  412b8f:	enter  0x427a,0x42
  412b93:	adc    BYTE PTR [ebp-0x5aca7f0e],dl
  412b99:	xchg   BYTE PTR [edx],dl
  412b9b:	mov    al,ds:0xc8008004
  412ba0:	add    BYTE PTR [ecx],ah
  412ba2:	and    eax,0x4e546440
  412ba7:	adc    BYTE PTR [esp+eax*2+0x830102],al
  412bae:	or     DWORD PTR [eax],eax
  412bb0:	add    BYTE PTR [edx+ebx*1],dl
  412bb3:	aaa    
  412bb4:	test   eax,0xac802402
  412bb9:	push   ebp
  412bba:	and    BYTE PTR [esi],bh
  412bbc:	loopne 0x412c01
  412bbe:	cmp    DWORD PTR [eax],eax
  412bc0:	pop    eax
  412bc1:	or     al,0x0
  412bc3:	add    BYTE PTR [eax],al
  412bc5:	js     0x412bd8
  412bc7:	push   0x80048424
  412bcc:	adc    DWORD PTR [eax-0x7e],ecx
  412bcf:	add    BYTE PTR [eax+0x72150400],ch
  412bd5:	sbb    DWORD PTR [edx+eiz*1],eax
  412bd8:	les    ebx,FWORD PTR gs:[edx-0x7edfd958]
  412bdf:	adc    eax,DWORD PTR [eax]
  412be1:	adc    DWORD PTR [eax],esp
  412be3:	adc    DWORD PTR [ebp+ebx*1+0x24],0x1921002d
  412beb:	mov    WORD PTR [eax-0x78],?
  412bee:	adc    BYTE PTR [esi],al
  412bf0:	adc    BYTE PTR [eax],dl
  412bf2:	adc    BYTE PTR [ebp+0x4],ah
  412bf5:	inc    eax
  412bf6:	adc    al,BYTE PTR [edi]
  412bf8:	rol    BYTE PTR [eax],0x14
  412bfb:	gs mov eax,0x50022419
  412c01:	mov    al,ds:0xc0010020
  412c06:	add    bl,BYTE PTR [eax-0x73bfdf78]
  412c0c:	or     DWORD PTR [edx],eax
  412c0e:	add    BYTE PTR [ecx+0x0],0x90
  412c12:	lods   al,BYTE PTR ds:[esi]
  412c13:	and    esp,DWORD PTR [eax]
  412c15:	add    BYTE PTR [eax-0x7c],dl
  412c18:	add    edx,DWORD PTR [eax]
  412c1a:	and    cl,BYTE PTR [edx+0x8ec3]
  412c20:	adc    BYTE PTR [eax+eiz*1],cl
  412c23:	adc    al,0x8
  412c25:	add    al,BYTE PTR [esp+edx*4+0x60c20202]
  412c2c:	dec    eax
  412c2d:	sbb    BYTE PTR [eax],al
  412c2f:	push   eax
  412c30:	mov    BYTE PTR [eax],al
  412c32:	cmp    eax,0xc012808
  412c37:	mov    al,ds:0x3300d588
  412c3c:	or     al,BYTE PTR [eax+0x45]
  412c3f:	and    BYTE PTR [eax+eiz*1],dh
  412c42:	add    esp,DWORD PTR [ecx+0x4]
  412c45:	add    al,0x35
  412c47:	and    BYTE PTR [ecx],al
  412c49:	test   DWORD PTR [eax],esp
  412c4b:	jns    0x412c5a
  412c4d:	nop
  412c4e:	adc    eax,0x60200d00
  412c53:	add    BYTE PTR [eax+eax*2+0x5d50226],ah
  412c5a:	gs add al,0xe3
  412c5d:	adc    BYTE PTR [eax],dl
  412c5f:	inc    edx
  412c60:	add    BYTE PTR [eax+eax*1],al
  412c63:	add    eax,0x4a04040
  412c68:	inc    edx
  412c69:	mov    WORD PTR [eax-0x35dfd5b5],es
  412c6f:	inc    ecx
  412c70:	adc    BYTE PTR [edx],cl
  412c72:	add    dl,ah
  412c74:	add    al,BYTE PTR [ebp+ecx*1+0x49080815]
  412c7b:	push   eax
  412c7c:	xchg   ebp,eax
  412c7d:	es adc ah,al
  412c80:	push   0x0
  412c82:	inc    ecx
  412c83:	add    dh,ah
  412c85:	add    BYTE PTR [ebp+0x42044148],al
  412c8b:	push   es
  412c8c:	and    BYTE PTR [eax],bl
  412c8e:	mov    BYTE PTR [eax],dl
  412c90:	push   eax
  412c91:	add    eax,0xe032a900
  412c96:	jno    0x412cb9
  412c98:	adc    BYTE PTR [eax+0x118b340],cl
  412c9e:	add    cl,BYTE PTR [ecx]
  412ca0:	inc    eax
  412ca1:	and    BYTE PTR [eax-0x7d6edf44],al
  412ca7:	and    DWORD PTR [ebp+0x8],esp
  412caa:	lds    esp,FWORD PTR [edx+0x304034d0]
  412cb0:	and    BYTE PTR [eax-0x7c],ah
  412cb3:	and    eax,0x2c530019
  412cb8:	or     BYTE PTR ds:0x8f138124,al
  412cbe:	and    BYTE PTR [ecx],ch
  412cc0:	sar    BYTE PTR [eax+0x4400442],0x0
  412cc7:	or     DWORD PTR [edi],ebp
  412cc9:	add    al,0x0
  412ccb:	and    DWORD PTR [edi+ecx*2+0x9868d50],eax
  412cd2:	adc    BYTE PTR [eax+0x4],al
  412cd5:	rol    DWORD PTR [eax],1
  412cd7:	arpl   WORD PTR [edx+0x840a010],sp
  412cdd:	add    DWORD PTR [eax+0x10],0x368c4c10
  412ce4:	add    DWORD PTR [eax-0x359beec8],ebp
  412cea:	add    BYTE PTR ds:0x10220010,al
  412cf0:	push   cs
  412cf1:	cmp    eax,0xc250c83
  412cf6:	add    BYTE PTR [edx],al
  412cf8:	push   ds
  412cf9:	or     BYTE PTR [ecx+eax*2+0x22],al
  412cfd:	or     DWORD PTR [eax-0x7f],ecx
  412d00:	nop
  412d01:	xor    BYTE PTR [eax],ch
  412d03:	dec    eax
  412d04:	push   es
  412d05:	inc    edx
  412d06:	xor    al,0x0
  412d08:	mov    BYTE PTR [eax],dl
  412d0a:	mov    ds:0x48421f0a,al
  412d0f:	add    BYTE PTR [eax+0x10028260],dl
  412d15:	add    BYTE PTR [ebx+eax*1+0x10],al
  412d19:	inc    ecx
  412d1a:	test   DWORD PTR [eax+eiz*1],ecx
  412d1d:	mov    al,al
  412d1f:	add    cl,BYTE PTR [eax]
  412d21:	mov    al,ds:0x22d308
  412d26:	nop
  412d27:	inc    esp
  412d28:	and    BYTE PTR [ecx+0x21],cl
  412d2b:	mov    bl,BYTE PTR [eax+ecx*1]
  412d2e:	or     BYTE PTR [ecx-0x5f],al
  412d31:	adc    edx,eax
  412d33:	or     BYTE PTR [edx],dl
  412d35:	add    BYTE PTR [ecx],ah
  412d37:	add    DWORD PTR [esi],0x58a9a051
  412d3d:	mov    es,WORD PTR [eax-0x5bf6bfd7]
  412d43:	or     BYTE PTR [edx+0x300a448],al
  412d49:	add    BYTE PTR [edx+eax*1-0x69feef3c],cl
  412d50:	test   al,0x5
  412d52:	add    al,0x12
  412d54:	mov    BYTE PTR [ebx],bh
  412d56:	and    BYTE PTR [eax],dl
  412d58:	adc    BYTE PTR [ecx+0x2],ah
  412d5b:	dec    ebp
  412d5c:	push   eax
  412d5d:	dec    eax
  412d5e:	add    BYTE PTR [eax],ah
  412d60:	pop    es
  412d61:	add    BYTE PTR [eax+0x44],cl
  412d64:	pop    es
  412d65:	or     al,0x11
  412d67:	add    eax,0x53440090
  412d6c:	sbb    BYTE PTR [eax],0xe4
  412d6f:	add    BYTE PTR [eax+edx*4],0x25
  412d73:	add    DWORD PTR [edx],eax
  412d75:	add    BYTE PTR gs:[eax],ah
  412d78:	and    eax,DWORD PTR [edi+0x40]
  412d7b:	xchg   esp,eax
  412d7c:	adc    BYTE PTR [edx+0x101e07],al
  412d82:	xor    BYTE PTR [ecx+0x0],al
  412d85:	out    0x12,al
  412d87:	add    BYTE PTR [ebp+0x20],al
  412d8a:	add    BYTE PTR [esp+eiz*2+0x18],al
  412d8e:	adc    BYTE PTR [eax+0x4158204],ah
  412d94:	inc    ecx
  412d95:	adc    DWORD PTR [eax],eax
  412d97:	mov    WORD PTR [ecx-0x6c],fs
  412d9a:	jecxz  0x412dde
  412d9c:	leave  
  412d9d:	add    BYTE PTR [eax],al
  412d9f:	inc    esp
  412da0:	sbb    al,0x4b
  412da2:	push   0xe041688
  412da7:	or     al,BYTE PTR [eax+0x40]
  412daa:	sub    BYTE PTR [edx*1+0x2903f240],bh
  412db1:	add    al,0x39
  412db3:	xor    BYTE PTR [edx],cl
  412db5:	loope  0x412e19
  412db7:	xor    al,0x44
  412db9:	add    al,0x7
  412dbb:	sbb    al,0x4
  412dbd:	inc    eax
  412dbe:	push   es
  412dbf:	lds    edx,FWORD PTR [ecx]
  412dc1:	or     ah,al
  412dc3:	les    esp,FWORD PTR [eax]
  412dc5:	inc    eax
  412dc6:	test   BYTE PTR ds:0x11f00001,bl
  412dcc:	pusha  
  412dcd:	adc    BYTE PTR [eax],cl
  412dcf:	add    DWORD PTR [esi],0x0
  412dd2:	les    edx,FWORD PTR [eax+0x400a2840]
  412dd8:	xor    BYTE PTR [eax],al
  412dda:	(bad)  
  412ddb:	add    DWORD PTR [eax+eiz*1],ecx
  412dde:	leave  
  412ddf:	mov    eax,ds:0x4d013223
  412de4:	add    BYTE PTR [ecx+0x60],ah
  412de7:	mov    DWORD PTR [eax],esp
  412de9:	adc    BYTE PTR [ecx],ah
  412deb:	cmp    al,0x2
  412ded:	add    al,BYTE PTR [eax]
  412def:	add    al,0x64
  412df1:	nop
  412df2:	ret    0x506
  412df5:	xor    BYTE PTR [edx],ah
  412df7:	adc    eax,0x3230888
  412dfc:	add    BYTE PTR fs:[edx],dh
  412dff:	add    BYTE PTR [eax+0x46006011],cl
  412e05:	push   es
  412e06:	xchg   BYTE PTR [ecx],al
  412e08:	add    al,0x0
  412e0a:	push   es
  412e0b:	inc    ecx
  412e0c:	inc    edx
  412e0d:	and    al,0x60
  412e0f:	and    BYTE PTR [eax],bh
  412e11:	adc    BYTE PTR [ecx+0x10843602],dl
  412e17:	or     BYTE PTR [edx],0x80
  412e1a:	add    BYTE PTR [eax+0xa082480],dl
  412e20:	add    cl,BYTE PTR [eax]
  412e22:	dec    esi
  412e23:	and    BYTE PTR ds:0x3073c94,al
  412e29:	mov    BYTE PTR [edx+0x2],bl
  412e2c:	test   BYTE PTR [eax],ah
  412e2e:	or     DWORD PTR [edx],0x13021808
  412e34:	inc    esp
  412e35:	add    eax,0x42428007
  412e3a:	push   esi
  412e3b:	sbb    al,BYTE PTR [eax]
  412e3d:	or     BYTE PTR [eax],al
  412e3f:	add    al,al
  412e41:	adc    DWORD PTR ds:0x28ac00,eax
  412e47:	add    BYTE PTR [ecx+0x8],al
  412e4a:	call   0xb10a:0xa100082
  412e51:	add    DWORD PTR [edx+0x300811d0],edx
  412e57:	add    dl,BYTE PTR [edx]
  412e59:	adc    DWORD PTR [ecx+eax*1+0x45],eax
  412e5d:	sub    BYTE PTR [edx],0x48
  412e60:	add    BYTE PTR [eax+0x10],al
  412e63:	add    al,BYTE PTR [eax+0x45]
  412e66:	fsubr  DWORD PTR [edx]
  412e68:	test   BYTE PTR [esi],bl
  412e6a:	fs inc eax
  412e6c:	add    BYTE PTR [eax+0x0],al
  412e6f:	test   DWORD PTR [eax-0x7f1fefe7],ecx
  412e75:	add    al,0x3
  412e77:	aad    0x4e
  412e79:	shl    BYTE PTR [eax+0x11],1
  412e7c:	add    al,0xd4
  412e7e:	add    BYTE PTR [eax-0x7eeefbf0],0x86
  412e85:	add    dl,ch
  412e87:	add    BYTE PTR [ebx],0x9
  412e8a:	test   BYTE PTR [eax+ecx*8],al
  412e8d:	mov    eax,0x1009000
  412e92:	add    BYTE PTR [ecx],ah
  412e94:	sbb    al,0xc2
  412e96:	add    BYTE PTR [ecx],al
  412e98:	push   edi
  412e99:	and    BYTE PTR [ebx+esi*4+0x14],al
  412e9d:	sub    BYTE PTR [eax+ecx*2],bl
  412ea0:	xchg   ecx,eax
  412ea1:	xor    BYTE PTR [eax],al
  412ea3:	add    DWORD PTR [edi],eax
  412ea5:	and    DWORD PTR [eax],eax
  412ea7:	xor    dl,BYTE PTR [eax+0x21]
  412eaa:	add    BYTE PTR [ebx+ecx*1],cl
  412ead:	add    dl,al
  412eaf:	cwde   
  412eb0:	and    al,BYTE PTR [eax]
  412eb2:	add    BYTE PTR [ecx-0x78],al
  412eb5:	test   DWORD PTR [esp+eax*1],esp
  412eb8:	push   cs
  412eb9:	add    al,ah
  412ebb:	jo     0x412ec9
  412ebd:	inc    ecx
  412ebe:	or     al,0x70
  412ec0:	push   ss
  412ec1:	and    al,0x48
  412ec3:	sbb    BYTE PTR [ecx+0x8000401],dl
  412ec9:	add    BYTE PTR es:[eax+eax*1+0x965a2c],ah
  412ed1:	add    eax,0xc002200a
  412ed6:	push   eax
  412ed7:	and    ebp,DWORD PTR [edx+ebx*1+0x4e80bb0]
  412ede:	and    ch,BYTE PTR [edx]
  412ee0:	add    BYTE PTR [eax+0x8],al
  412ee3:	add    al,BYTE PTR [esi-0x6f7ff780]
  412ee9:	push   es
  412eea:	add    BYTE PTR [eax+0x40d668c8],dl
  412ef0:	add    al,0x13
  412ef2:	or     al,0x74
  412ef4:	mov    esi,0x8000018
  412ef9:	xchg   BYTE PTR [edx+0x8041005],cl
  412eff:	add    eax,DWORD PTR [eax+0x2044080]
  412f05:	add    DWORD PTR [eax],eax
  412f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f08:	and    BYTE PTR [eax],al
  412f0a:	inc    eax
  412f0b:	or     al,cl
  412f0d:	or     BYTE PTR [eax+ecx*1],al
  412f10:	and    BYTE PTR [eax],0x3
  412f13:	mov    eax,0x4b893b04
  412f18:	push   eax
  412f19:	add    BYTE PTR [eax+0x209859],cl
  412f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f20:	add    al,BYTE PTR [eax]
  412f22:	and    DWORD PTR [eax],0x64cd1004
  412f28:	add    DWORD PTR [eax+esi*2],esi
  412f2b:	add    al,0x40
  412f2d:	mov    BYTE PTR [ecx],ah
  412f2f:	pop    ss
  412f30:	sub    DWORD PTR [eax+edx*1],ebx
  412f33:	and    BYTE PTR [edx+eax*1+0x8],0x0
  412f38:	push   eax
  412f39:	mov    DWORD PTR [edx],ebp
  412f3b:	rcl    BYTE PTR [eiz*1-0x27f7ffc0],0x0
  412f43:	mov    al,ds:0xe84820f
  412f48:	mov    dh,BYTE PTR [ebx+0x41]
  412f4b:	mov    WORD PTR [ebx+0x3],fs
  412f4e:	add    BYTE PTR [edx],0x10
  412f51:	add    bh,bh
  412f53:	adc    eax,0x436b10
  412f58:	add    al,0x0
  412f5a:	mov    WORD PTR [edx+0x4],cs
  412f5d:	and    BYTE PTR [edx+eax*1],cl
  412f60:	mov    al,ds:0xe480c0
  412f65:	jo     0x412f07
  412f67:	ror    BYTE PTR [ecx+0x40],0xc2
  412f6b:	add    al,BYTE PTR [esi]
  412f6d:	sub    BYTE PTR [eax],al
  412f6f:	add    BYTE PTR [ecx],0x26
  412f72:	and    cl,BYTE PTR [esi+0x279a01]
  412f78:	nop
  412f79:	add    BYTE PTR [eax-0x7dff77cc],al
  412f7f:	adc    al,0x40
  412f81:	sbb    BYTE PTR [eax+0x10],cl
  412f84:	test   eax,0x2c0122c0
  412f89:	inc    ecx
  412f8a:	or     al,0x42
  412f8c:	dec    ebx
  412f8d:	inc    esp
  412f8e:	adc    BYTE PTR [ebx],al
  412f90:	sbb    al,0x0
  412f92:	adc    eax,0x3c0241a1
  412f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f98:	sub    BYTE PTR [eax-0x7ffe8000],bl
  412f9e:	push   0x21c222c9
  412fa3:	pop    eax
  412fa4:	add    BYTE PTR [ecx],al
  412fa6:	and    al,0x0
  412fa8:	push   ecx
  412fa9:	or     DWORD PTR [esp+eax*4-0x5d],eax
  412fad:	push   ss
  412fae:	add    BYTE PTR [esi],dl
  412fb0:	inc    eax
  412fb1:	push   esp
  412fb2:	or     DWORD PTR [eax],eax
  412fb4:	or     BYTE PTR [edi],dh
  412fb6:	add    BYTE PTR [eax],ch
  412fb8:	add    ah,BYTE PTR ds:0x60b11023
  412fbe:	mov    ah,0x1
  412fc0:	or     BYTE PTR [ecx+0x912132],0x0
  412fc7:	dec    ebp
  412fc8:	inc    eax
  412fc9:	inc    eax
  412fca:	pusha  
  412fcb:	add    BYTE PTR [edx],0x20
  412fce:	sub    BYTE PTR [eax-0x3decfff0],ah
  412fd4:	add    al,0x8a
  412fd6:	inc    ecx
  412fd7:	add    BYTE PTR [ecx+0x24096411],cl
  412fdd:	add    BYTE PTR [eax+ebx*4],bl
  412fe0:	add    BYTE PTR [eax],0x44
  412fe3:	adc    BYTE PTR [eax+eax*1+0x41],0x18
  412fe8:	sub    eax,0x26284089
  412fed:	adc    BYTE PTR [eax+0x21],cl
  412ff0:	rol    BYTE PTR [eax-0x10],cl
  412ff3:	add    BYTE PTR ds:0x9002868,0x4
  412ffa:	mov    ch,bl
  412ffc:	dec    eax
  412ffd:	and    DWORD PTR ss:[eax],eax
  413000:	add    BYTE PTR [eax+0x21022020],al
  413006:	les    eax,FWORD PTR [ebx]
  413008:	test   al,bl
  41300a:	push   eax
  41300b:	mov    ah,ch
  41300d:	push   eax
  41300e:	mov    BYTE PTR [ecx+0x60],bl
  413011:	sbb    BYTE PTR [eax-0x20],al
  413014:	or     cl,BYTE PTR [eax+ebp*2]
  413017:	jecxz  0x412fa2
  413019:	jo     0x17930e3
  41301f:	adc    BYTE PTR [edx],dl
  413021:	inc    edx
  413022:	rcr    BYTE PTR [eax+0x62],0x51
  413026:	inc    edx
  413027:	mov    al,ds:0xa4050408
  41302c:	sub    al,BYTE PTR [eax+0x5]
  41302f:	dec    esp
  413030:	and    BYTE PTR [ecx+ecx*1+0x20],dh
  413034:	mov    al,ds:0x51282834
  413039:	inc    eax
  41303a:	enter  0x5456,0x46
  41303e:	mov    es,WORD PTR [edx+0x4085610]
  413044:	add    BYTE PTR [eax],0x1
  413047:	xor    al,BYTE PTR [edx+eiz*1]
  41304a:	push   es
  41304b:	add    al,0x80
  41304d:	xor    DWORD PTR [eax],eax
  41304f:	sbb    BYTE PTR [edx],al
  413051:	adc    BYTE PTR [esi+0x1c26fc00],ah
  413057:	mov    eax,0x88600145
  41305c:	inc    edx
  41305d:	pop    esp
  41305e:	add    BYTE PTR [edx],dl
  413060:	add    BYTE PTR [eax],cl
  413062:	pusha  
  413063:	inc    ebx
  413064:	and    dh,BYTE PTR [eax]
  413066:	pusha  
  413067:	or     BYTE PTR [ecx+0x10022221],bl
  41306d:	test   DWORD PTR [eax],ecx
  41306f:	add    BYTE PTR [eax],al
  413071:	dec    eax
  413072:	or     al,al
  413074:	pusha  
  413075:	push   ds
  413076:	inc    eax
  413077:	add    BYTE PTR [eax],ch
  413079:	aaa    
  41307a:	sub    eax,0x11801051
  41307f:	or     dl,BYTE PTR [eax]
  413081:	and    DWORD PTR [eax],0x42760100
  413087:	inc    ebp
  413088:	cmp    DWORD PTR [edx+0x10004a0],edx
  41308e:	test   BYTE PTR [ecx],ch
  413090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413091:	xor    BYTE PTR [edx-0x7ffdffe6],ah
  413097:	add    BYTE PTR [ecx+0x100d484],cl
  41309d:	loopne 0x4130af
  41309f:	and    BYTE PTR [eax-0x7fd3ff5a],dl
  4130a5:	adc    BYTE PTR [eax+0x11101048],cl
  4130ab:	push   cs
  4130ac:	sub    DWORD PTR [edx],esp
  4130ae:	add    al,BYTE PTR [eax]
  4130b0:	or     BYTE PTR [ecx],al
  4130b2:	rol    DWORD PTR [ecx],0x1
  4130b5:	add    eax,0x440406a1
  4130ba:	and    BYTE PTR [ebx],dh
  4130bc:	and    al,0x41
  4130be:	adc    BYTE PTR [eax+0x88],dh
  4130c4:	add    eax,0x4020880
  4130c9:	test   al,0x95
  4130cb:	shl    al,0x6
  4130ce:	inc    eax
  4130cf:	xor    eax,DWORD PTR [eax+0x10822054]
  4130d5:	push   es
  4130d6:	and    DWORD PTR [edx],esi
  4130d8:	add    eax,0x135c0201
  4130dd:	add    BYTE PTR [ecx+0x4],ch
  4130e0:	or     BYTE PTR [eax],dl
  4130e2:	add    eax,DWORD PTR [eax]
  4130e4:	add    BYTE PTR [ecx],dh
  4130e6:	cmp    al,BYTE PTR [eax+eax*1+0x60]
  4130ea:	push   es
  4130eb:	and    BYTE PTR [eax+0x28],dl
  4130ee:	add    al,BYTE PTR [eax]
  4130f0:	inc    ebx
  4130f1:	add    al,0x2
  4130f3:	dec    ecx
  4130f4:	or     BYTE PTR [eax],0x38
  4130f7:	and    al,BYTE PTR [eax]
  4130f9:	add    BYTE PTR ds:0x400092f8,dl
  4130ff:	add    BYTE PTR [ebp-0x3e],dl
  413102:	or     BYTE PTR [edi],al
  413104:	and    BYTE PTR [eax+0x4d200120],dl
  41310a:	push   ecx
  41310b:	inc    edi
  41310c:	mov    eax,0x1b51410
  413111:	adc    BYTE PTR [ecx-0x2dbf6f80],ah
  413117:	adc    BYTE PTR [eax],al
  413119:	sbb    BYTE PTR [edx],al
  41311b:	adc    BYTE PTR ss:[ecx+0x40404428],ah
  413122:	add    BYTE PTR [eax],al
  413124:	add    BYTE PTR [eax],dl
  413126:	xor    BYTE PTR [edi+eax*1],0x41
  41312a:	or     cl,al
  41312c:	xor    BYTE PTR [eax-0x77b80000],bh
  413132:	and    BYTE PTR [edx+0x18a49210],bl
  413138:	dec    ebp
  413139:	nop
  41313a:	sub    BYTE PTR [ecx],al
  41313c:	add    al,0x9a
  41313e:	add    BYTE PTR [eax],al
  413140:	sub    BYTE PTR [eax],al
  413142:	xor    BYTE PTR [ecx],cl
  413144:	or     al,0x40
  413146:	inc    eax
  413147:	jo     0x41315a
  413149:	test   BYTE PTR [eax],al
  41314b:	mov    ds:0x4141046,eax
  413150:	push   0xcc82035
  413155:	xchg   esp,eax
  413156:	adc    BYTE PTR [edx+0x24],ch
  413159:	dec    ebx
  41315a:	dec    eax
  41315b:	add    BYTE PTR [ecx+eax*1+0x26430641],al
  413162:	push   ss
  413163:	inc    eax
  413164:	mov    dl,0x2
  413166:	push   ecx
  413167:	nop
  413168:	sbb    al,0x14
  41316a:	add    BYTE PTR [edx],bh
  41316c:	inc    esp
  41316d:	add    eax,0x1028108
  413172:	or     cl,BYTE PTR [eax]
  413174:	sbb    al,0x40
  413176:	je     0x413120
  413178:	add    dl,BYTE PTR [eax]
  41317a:	push   es
  41317b:	test   BYTE PTR [ecx],bl
  41317d:	cmp    edx,DWORD PTR [eax+0x407108e1]
  413183:	pop    esp
  413184:	and    dl,al
  413186:	add    al,BYTE PTR [eax-0x67fefbbc]
  41318c:	mov    dl,BYTE PTR [eax-0x77]
  41318f:	adc    BYTE PTR [ebx],dh
  413191:	icebp  
  413192:	adc    BYTE PTR [eax],0x59
  413195:	add    BYTE PTR [ecx+0x40412200],dh
  41319b:	or     DWORD PTR [eax-0x5b],eax
  41319e:	add    esp,DWORD PTR [eax]
  4131a0:	test   eax,0x29202098
  4131a5:	sub    BYTE PTR [eax+0x44],al
  4131a8:	inc    eax
  4131a9:	add    BYTE PTR [eax+ecx*1],al
  4131ac:	or     eax,DWORD PTR [eax+0x7]
  4131af:	or     BYTE PTR [esp+ecx*4],ah
  4131b2:	adc    al,0x2
  4131b4:	nop
  4131b5:	add    al,BYTE PTR [ecx]
  4131b7:	mov    DWORD PTR [eax],eax
  4131b9:	adc    BYTE PTR [eax],dl
  4131bb:	lds    ecx,FWORD PTR [eax]
  4131bd:	mov    al,ds:0x5c44080a
  4131c2:	adc    BYTE PTR [eax+0x350c9920],al
  4131c8:	cmp    DWORD PTR [edx],0x2439
  4131ce:	ret    0x120
  4131d1:	xchg   esi,eax
  4131d2:	aam    0x28
  4131d4:	add    al,al
  4131d6:	pusha  
  4131d7:	inc    ecx
  4131d8:	lock push eax
  4131da:	enter  0x4,0xd6
  4131de:	adc    BYTE PTR [edx-0x40],0x52
  4131e2:	add    BYTE PTR [ebx+0x200008ca],0x24
  4131e9:	add    cl,BYTE PTR [edx-0x48]
  4131ec:	add    dh,BYTE PTR [eax]
  4131ee:	and    eax,0x10002019
  4131f3:	nop
  4131f4:	rcl    DWORD PTR [ebx],0xa3
  4131f7:	add    DWORD PTR [ebp-0x5ddeff4d],esp
  4131fd:	adc    BYTE PTR [esi],al
  4131ff:	push   es
  413200:	pusha  
  413201:	or     al,0x0
  413203:	or     al,al
  413205:	add    BYTE PTR [ecx+0x2000490],cl
  41320b:	mov    al,ds:0x21a80041
  413210:	dec    eax
  413211:	sbb    al,0x10
  413213:	or     DWORD PTR [eax+0x24704182],eax
  413219:	push   esp
  41321a:	jno    0x41321d
  41321c:	add    BYTE PTR [ecx],0x24
  41321f:	mov    al,ds:0xa60040dd
  413224:	adc    al,BYTE PTR [eax-0x7fffdfec]
  41322a:	and    eax,DWORD PTR [eax+eax*1+0x4]
  41322e:	and    dl,BYTE PTR [eax]
  413230:	add    al,BYTE PTR [edx]
  413232:	call   0x2407:0x9013840
  413239:	lods   al,BYTE PTR ds:[esi]
  41323a:	popa   
  41323b:	add    DWORD PTR [ebp+0x0],eax
  41323e:	xor    cl,BYTE PTR [edx-0x72cdbfef]
  413244:	and    BYTE PTR [eax+0x1c0004],dh
  41324a:	or     BYTE PTR [eax-0x7fffd7d7],al
  413250:	inc    ecx
  413251:	push   0x11040c8a
  413256:	aad    0x8
  413258:	mov    WORD PTR [ecx+eax*8],es
  41325b:	inc    esp
  41325c:	mov    al,ds:0x59504600
  413261:	nop
  413262:	and    BYTE PTR [eax-0x7f],ah
  413265:	adc    al,0x44
  413267:	sbb    BYTE PTR [eax],0x3
  41326a:	add    BYTE PTR [ebx],0xac
  41326d:	add    BYTE PTR [eax+0x17],ah
  413270:	sbb    DWORD PTR [eax],0x40000c98
  413276:	adc    ch,al
  413278:	mov    BYTE PTR [eax],dl
  41327a:	test   DWORD PTR [esi+eax*1],ebp
  41327d:	or     BYTE PTR [eax],al
  41327f:	add    DWORD PTR [eax],ecx
  413281:	push   eax
  413282:	and    al,0x80
  413284:	inc    edx
  413285:	inc    eax
  413286:	sub    BYTE PTR [ecx-0x80],ch
  413289:	add    eax,0x83014924
  41328e:	inc    ebx
  41328f:	add    DWORD PTR [eax],edx
  413291:	add    BYTE PTR [eax],bl
  413293:	add    BYTE PTR [ebx],0x8
  413296:	add    BYTE PTR [ecx+eax*1+0x0],al
  41329a:	xchg   esp,eax
  41329b:	enter  0x8841,0x90
  41329f:	dec    eax
  4132a0:	inc    eax
  4132a1:	or     eax,0x7400000
  4132a6:	add    al,0x27
  4132a8:	inc    ecx
  4132a9:	add    al,BYTE PTR [eax+0x3]
  4132ac:	test   BYTE PTR [ebx],al
  4132ae:	add    ch,0x88
  4132b1:	js     0x413293
  4132b3:	adc    al,0x0
  4132b5:	add    DWORD PTR [ebx],eax
  4132b7:	mov    BYTE PTR [edx],al
  4132b9:	and    eax,0x21284469
  4132be:	adc    DWORD PTR [eax],eax
  4132c0:	add    cl,BYTE PTR [eax]
  4132c2:	add    al,0x8a
  4132c4:	loop   0x4132d7
  4132c6:	mov    DWORD PTR [eax-0x7d],eax
  4132c9:	adc    DWORD PTR [esp+ebx*1],ecx
  4132cc:	jne    0x413280
  4132ce:	push   eax
  4132cf:	push   es
  4132d0:	inc    eax
  4132d1:	adc    DWORD PTR [eax],esp
  4132d3:	add    DWORD PTR [edx-0x5ff9ffd8],edx
  4132d9:	and    eax,DWORD PTR [ebx+eax*1]
  4132dc:	add    BYTE PTR [ebx],ch
  4132de:	add    al,0x80
  4132e0:	pop    edx
  4132e1:	add    eax,DWORD PTR [eax+0x10801022]
  4132e7:	dec    eax
  4132e8:	or     BYTE PTR [eax],al
  4132ea:	adc    cl,dl
  4132ec:	adc    eax,DWORD PTR [ebx+0x64000041]
  4132f2:	test   cl,cl
  4132f4:	xor    al,0x8
  4132f6:	adc    BYTE PTR [eax+0x1a],al
  4132f9:	add    edx,DWORD PTR [eax]
  4132fb:	add    DWORD PTR [eax+eax*1],eax
  4132fe:	and    BYTE PTR [esp+eax*2],0x31
  413302:	mov    al,BYTE PTR [edi]
  413304:	xor    al,0x35
  413306:	rol    BYTE PTR [edi],0x8
  413309:	add    cl,BYTE PTR [ecx+0x20]
  41330c:	add    BYTE PTR ds:0xb0a64029,ch
  413312:	add    BYTE PTR [edx],dl
  413314:	and    al,0x1a
  413316:	add    DWORD PTR [eax+0x4],esp
  413319:	and    BYTE PTR [eax],0x51
  41331c:	add    BYTE PTR fs:[eax-0x3e],al
  413320:	pop    esp
  413321:	dec    ecx
  413322:	adc    eax,0x22900a1
  413327:	xor    al,0x80
  413329:	ret    0x8440
  41332c:	add    eax,0x63c8002
  413331:	mov    DWORD PTR [eax+0x8],eax
  413334:	mov    ch,BYTE PTR [esp+eax*1]
  413337:	or     BYTE PTR [eax],al
  413339:	rcl    BYTE PTR [ecx+0x44201442],0x4
  413340:	adc    al,0x21
  413342:	inc    eax
  413343:	push   ds
  413344:	in     al,0x66
  413346:	inc    ecx
  413347:	nop
  413348:	add    DWORD PTR [ecx],0x88d00808
  41334e:	adc    BYTE PTR [ecx],0x0
  413351:	add    BYTE PTR [ebx],ah
  413353:	sub    BYTE PTR [ebp+0x40],ah
  413356:	bound  esp,QWORD PTR [edx+0x23]
  413359:	sub    dh,BYTE PTR [eax-0x5def0e78]
  41335f:	add    BYTE PTR [eax],bh
  413361:	nop
  413362:	add    BYTE PTR [edx-0x7c57edeb],al
  413368:	add    BYTE PTR [eax],al
  41336a:	and    BYTE PTR [eax],al
  41336c:	add    BYTE PTR [ecx],al
  41336e:	les    eax,FWORD PTR [edx+0x10003110]
  413374:	adc    al,0x80
  413376:	add    al,0x80
  413378:	mov    al,BYTE PTR [eax]
  41337a:	adc    DWORD PTR [edi],edx
  41337c:	pop    ss
  41337d:	inc    eax
  41337e:	in     al,dx
  41337f:	inc    esp
  413380:	adc    eax,0x20240d11
  413385:	add    dl,BYTE PTR [esp+ecx*1]
  413388:	push   0x60a8c4
  41338d:	mov    ds:0x51205100,al
  413392:	stos   BYTE PTR es:[edi],al
  413393:	fsub   DWORD PTR [ebx]
  413395:	or     BYTE PTR [eax+eiz*8],0x12
  413399:	adc    eax,0x15005284
  41339e:	inc    eax
  41339f:	inc    eax
  4133a0:	enter  0x841,0x4
  4133a4:	and    BYTE PTR [eax+0x3302c40d],dl
  4133aa:	add    BYTE PTR [esp+eax*4+0x920a209],dh
  4133b1:	xchg   edx,eax
  4133b2:	mov    ds:0xe010b9a2,al
  4133b7:	sbb    DWORD PTR [eax],eax
  4133b9:	sub    esp,DWORD PTR [eax+ecx*1]
  4133bc:	and    eax,0x10e498a9
  4133c1:	dec    ebx
  4133c2:	mov    eax,eax
  4133c4:	xor    al,0x40
  4133c6:	or     al,0x42
  4133c8:	add    BYTE PTR [eax],0x10
  4133cb:	push   0x16a8c100
  4133d0:	add    BYTE PTR [ecx],al
  4133d2:	add    ecx,DWORD PTR [ecx+0x18]
  4133d5:	add    BYTE PTR [edi+0x455080d4],dh
  4133db:	add    bl,0x31
  4133de:	jo     0x4133e4
  4133e0:	add    al,BYTE PTR [edx+ecx*1+0x9593041]
  4133e7:	sbb    BYTE PTR [ecx],al
  4133e9:	jmp    0xb045340e
  4133ee:	or     BYTE PTR [edx],al
  4133f0:	add    DWORD PTR [eax-0x6e],eax
  4133f3:	xchg   edx,eax
  4133f4:	aad    0x81
  4133f6:	add    BYTE PTR [eax],cl
  4133f8:	add    edx,DWORD PTR [esi]
  4133fa:	pusha  
  4133fb:	add    BYTE PTR [eax],cl
  4133fd:	or     BYTE PTR [edx+0x4],ah
  413400:	inc    esp
  413401:	inc    eax
  413402:	and    eax,eax
  413404:	add    dl,dl
  413406:	test   esp,eax
  413408:	or     eax,eax
  41340a:	sub    DWORD PTR [eax],0x101a0010
  413410:	xchg   esp,eax
  413411:	and    BYTE PTR [eax-0x74],al
  413414:	xor    BYTE PTR [eax],dh
  413416:	adc    DWORD PTR [eax],0x74802015
  41341c:	add    BYTE PTR [edx],al
  41341e:	inc    eax
  41341f:	and    ch,dl
  413421:	dec    eax
  413422:	add    al,0x70
  413424:	dec    ecx
  413425:	adc    al,ah
  413427:	daa    
  413428:	xor    eax,0x48a4001
  41342d:	or     ah,BYTE PTR [eax+ebp*2+0x1b3cd7]
  413434:	add    BYTE PTR [ecx],0x8
  413437:	adc    BYTE PTR [edx],0x8
  41343a:	and    ah,BYTE PTR [eax]
  41343c:	or     al,al
  41343e:	sbb    BYTE PTR [eax],0x1
  413441:	add    BYTE PTR [ecx+0x10280014],dl
  413447:	or     BYTE PTR [ecx],0x91
  41344a:	and    BYTE PTR [ebp+eax*4+0x24],ah
  41344e:	add    BYTE PTR [edi+0x12064f2],ah
  413454:	clc    
  413455:	sbb    BYTE PTR [edx+0x40062220],0x0
  41345c:	or     dl,BYTE PTR [eax+0x7900116]
  413462:	add    DWORD PTR [edx+eiz*1+0x5a],eax
  413466:	dec    esi
  413467:	mov    ds:0x80172100,al
  41346c:	push   ss
  41346d:	inc    eax
  41346e:	adc    BYTE PTR [ebx],al
  413470:	inc    esi
  413471:	pusha  
  413472:	add    BYTE PTR [eax+0x46],0xba
  413476:	adc    al,0x20
  413478:	les    eax,FWORD PTR [edx+0xc420160]
  41347e:	rol    BYTE PTR [eax-0x7b],0xf2
  413482:	xchg   ecx,eax
  413483:	mov    al,0x1f
  413485:	adc    BYTE PTR [ecx+eax*1+0xd140008],al
  41348c:	add    DWORD PTR [eax-0x78],ebx
  41348f:	add    eax,0x48114c2
  413494:	xor    al,0x0
  413496:	inc    ebx
  413497:	pop    ss
  413498:	cdq    
  413499:	adc    BYTE PTR [ebx],al
  41349b:	or     BYTE PTR [eax+0x2],al
  41349e:	adc    BYTE PTR [eax],cl
  4134a0:	daa    
  4134a1:	adc    BYTE PTR [eax+0x5b],al
  4134a4:	mov    al,ds:0x1000c007
  4134a9:	add    edx,DWORD PTR [edx+ecx*1-0x6ffdfffa]
  4134b0:	xor    al,BYTE PTR [eax+0x2a492460]
  4134b6:	adc    DWORD PTR ds:0x400a9228,eax
  4134bc:	ins    BYTE PTR es:[edi],dx
  4134bd:	and    BYTE PTR [eax+0x3],cl
  4134c0:	add    DWORD PTR [eax+0x10c1016],edx
  4134c6:	or     BYTE PTR [esi],ch
  4134c8:	and    BYTE PTR [eax+ecx*1],ah
  4134cb:	jno    0x4134cd
  4134cd:	add    DWORD PTR [esp+esi*1+0x2290080],esi
  4134d4:	stos   BYTE PTR es:[edi],al
  4134d5:	sub    BYTE PTR [eax+ecx*1],al
  4134d8:	test   BYTE PTR [ecx],ch
  4134da:	add    BYTE PTR [ecx+eax*1-0x3e],bl
  4134de:	adc    DWORD PTR [eax],edx
  4134e0:	arpl   WORD PTR [ebp-0x65affbf7],dx
  4134e6:	sub    BYTE PTR [edx],al
  4134e8:	adc    ah,BYTE PTR [eax]
  4134ea:	or     BYTE PTR [ecx],ah
  4134ec:	inc    edx
  4134ed:	sub    cl,dl
  4134ef:	and    cl,ch
  4134f1:	and    BYTE PTR [eax+0x5842c82],al
  4134f7:	and    al,BYTE PTR [edx]
  4134f9:	sub    eax,DWORD PTR [eax]
  4134fb:	inc    eax
  4134fc:	push   es
  4134fd:	adc    eax,esi
  4134ff:	and    BYTE PTR [eax-0x27e613b0],al
  413505:	test   BYTE PTR [ecx],cl
  413507:	add    BYTE PTR [eax+edx*1+0x1288705],al
  41350e:	sbb    BYTE PTR [ebp+0x1],0x63
  413512:	or     BYTE PTR [edx-0x6cfebe26],dh
  413518:	or     BYTE PTR ds:0x120d3818,dl
  41351e:	adc    BYTE PTR [edx],0x5
  413521:	add    BYTE PTR [eax+0x40644],bl
  413527:	add    al,0x44
  413529:	sbb    al,BYTE PTR [eax+eiz*4]
  41352c:	and    al,al
  41352e:	adc    BYTE PTR [edi+0x20],0x21
  413532:	adc    BYTE PTR [ebp+0xc],0x10
  413536:	add    cl,BYTE PTR [eax+0x0]
  413539:	pusha  
  41353a:	push   ss
  41353b:	sbb    DWORD PTR [eax],0xc6900009
  413541:	add    al,BYTE PTR [eax]
  413543:	add    al,BYTE PTR [edx]
  413545:	inc    esp
  413546:	add    BYTE PTR [ebp+edi*1+0x1],cl
  41354a:	xor    BYTE PTR [edx],al
  41354c:	and    al,BYTE PTR [edi]
  41354e:	add    eax,0x48d0c601
  413553:	shr    BYTE PTR [esp+edx*1],0x10
  413557:	mov    BYTE PTR [edi],al
  413559:	popa   
  41355a:	punpckhbw mm5,QWORD PTR [ebp+ecx*1-0x7a]
  41355f:	loop   0x4135b1
  413561:	nop
  413562:	add    al,0x85
  413564:	adc    BYTE PTR ds:0xd4602c81,ah
  41356a:	sub    BYTE PTR [ecx+ecx*2],al
  41356d:	or     DWORD PTR [eax+0x10],eax
  413570:	add    al,0x62
  413572:	add    al,0xa0
  413574:	adc    BYTE PTR [eax],al
  413576:	add    al,0x80
  413578:	and    eax,0xc02200
  41357d:	jo     0x41350f
  41357f:	or     al,0x4
  413581:	lds    esp,FWORD PTR [ecx+0xc491820]
  413587:	add    al,0x0
  413589:	or     DWORD PTR [eax],esp
  41358b:	and    DWORD PTR [ecx+eiz*1],edx
  41358e:	add    eax,DWORD PTR [eax+0x40]
  413591:	add    DWORD PTR [esi+0x4],0xffffff92
  413595:	add    DWORD PTR [eax],0x2408019
  41359b:	push   ebp
  41359c:	sbb    ecx,DWORD PTR [ebx]
  41359e:	mov    cl,0x20
  4135a0:	jle    0x4135f6
  4135a2:	add    BYTE PTR [esi+0x600a023],al
  4135a8:	and    al,BYTE PTR [eax+0x3]
  4135ab:	and    BYTE PTR [edx+0x40005084],ah
  4135b1:	daa    
  4135b2:	dec    esp
  4135b3:	shr    BYTE PTR [edx+0x4],0x8a
  4135b7:	jo     0x4135be
  4135b9:	add    BYTE PTR ds:0x6422066,cl
  4135bf:	push   es
  4135c0:	ror    BYTE PTR [eax],1
  4135c2:	test   BYTE PTR [esp+edx*4],bl
  4135c5:	les    ebx,FWORD PTR [eax]
  4135c7:	add    al,BYTE PTR [edx]
  4135c9:	xchg   DWORD PTR [ecx],edx
  4135cb:	add    al,0x18
  4135cd:	inc    edi
  4135ce:	adc    BYTE PTR [eax-0x80],dl
  4135d1:	mov    al,ds:0x41840c22
  4135d6:	add    DWORD PTR [eax+eax*2+0x8],esi
  4135da:	or     BYTE PTR [edx],cl
  4135dc:	adc    ch,BYTE PTR [ebp+0x2]
  4135df:	mov    BYTE PTR [eax],al
  4135e1:	and    BYTE PTR [eax],dh
  4135e3:	popa   
  4135e4:	pusha  
  4135e5:	adc    al,BYTE PTR [eax]
  4135e7:	push   ecx
  4135e8:	add    DWORD PTR [ecx+eax*1],esp
  4135eb:	add    DWORD PTR [edx],0x46062504
  4135f1:	adc    BYTE PTR [eax],bl
  4135f3:	or     al,ah
  4135f5:	adc    BYTE PTR [eax+0x8061292],ah
  4135fb:	and    eax,0x464b1009
  413600:	add    eax,DWORD PTR [eax+eax*1]
  413603:	add    BYTE PTR [ebx],al
  413605:	cmp    al,0x80
  413607:	sbb    ecx,DWORD PTR [ecx+0x260004]
  41360d:	add    BYTE PTR [eax],al
  41360f:	cwde   
  413610:	xchg   ecx,eax
  413611:	add    BYTE PTR [eax-0x75efcdcc],al
  413617:	inc    eax
  413618:	sub    BYTE PTR [edx],cl
  41361a:	adc    eax,0x39088193
  41361f:	add    BYTE PTR [eax],cl
  413621:	and    BYTE PTR [ecx],0x33
  413624:	add    BYTE PTR [ebp+0x40],0xe4
  413628:	adc    al,BYTE PTR [edx+0x40]
  41362b:	add    al,0x40
  41362d:	xor    al,0x54
  41362f:	adc    BYTE PTR [eax],al
  413631:	push   es
  413632:	and    BYTE PTR [ebx],ah
  413634:	add    DWORD PTR [eax+0x41a10a02],eax
  41363a:	and    al,0x8
  41363c:	sbb    dl,BYTE PTR [eax+0x0]
  41363f:	shl    BYTE PTR [eax],0x4
  413642:	adc    DWORD PTR [eax],ecx
  413644:	add    DWORD PTR [ecx+0xc],eax
  413647:	rcl    BYTE PTR ds:0x1196a35,0x0
  41364e:	cwde   
  41364f:	test   BYTE PTR [ebx],cl
  413651:	add    BYTE PTR [eax],al
  413653:	inc    eax
  413654:	js     0x413659
  413656:	nop
  413657:	push   eax
  413658:	aad    0x4
  41365a:	adc    BYTE PTR [esi+0x18810b0],cl
  413660:	daa    
  413661:	inc    eax
  413662:	pushf  
  413663:	add    BYTE PTR [edx-0x7ff21fe0],bl
  413669:	add    cl,BYTE PTR [ecx]
  41366b:	ror    BYTE PTR [eax+esi*1+0x60400000],0x80
  413673:	inc    eax
  413674:	adc    dl,al
  413676:	test   al,0x42
  413678:	ror    BYTE PTR [eax],0x10
  41367b:	push   es
  41367c:	or     BYTE PTR [eax],dh
  41367e:	add    DWORD PTR [eax+eax*8+0xd01804],eax
  413685:	add    BYTE PTR [eax],al
  413687:	sysret 
  413689:	or     al,BYTE PTR [eax]
  41368b:	rdtsc  
  41368d:	inc    eax
  41368e:	add    al,0x8
  413690:	add    BYTE PTR [edx+ebp*1],cl
  413693:	add    BYTE PTR [eax+0x10],al
  413696:	add    BYTE PTR [eax],al
  413698:	mov    WORD PTR [ecx+0x25240420],cs
  41369e:	add    DWORD PTR [eax],0x14cf4030
  4136a4:	cwde   
  4136a5:	add    ax,0x18ae
  4136a9:	sub    BYTE PTR [esi-0x7efdfe80],al
  4136af:	frstor [edx-0x7c]
  4136b2:	dec    ecx
  4136b3:	xchg   DWORD PTR [eax],eax
  4136b5:	add    BYTE PTR [eax],al
  4136b7:	mov    dl,0x88
  4136b9:	add    eax,0x92a07208
  4136be:	test   eax,0x1028108
  4136c3:	rcl    BYTE PTR [ebx],1
  4136c5:	adc    BYTE PTR [eax],al
  4136c7:	test   cl,ah
  4136c9:	and    dl,BYTE PTR [ebx+0x8891045]
  4136cf:	or     al,0x45
  4136d1:	add    al,0x59
  4136d3:	or     DWORD PTR [eax+ecx*2],ecx
  4136d6:	and    DWORD PTR [edx],esi
  4136d8:	lea    edi,[esi]
  4136da:	add    BYTE PTR [edx],ah
  4136dc:	ret    0x810c
  4136df:	add    al,0x10
  4136e1:	add    BYTE PTR [eax],ah
  4136e3:	inc    eax
  4136e4:	add    cl,BYTE PTR [eax]
  4136e6:	lea    edx,[ecx]
  4136e8:	mov    al,BYTE PTR [eax-0x80]
  4136eb:	test   BYTE PTR [esi+0x11],al
  4136ee:	pusha  
  4136ef:	pop    esi
  4136f0:	adc    BYTE PTR [eax],al
  4136f2:	or     DWORD PTR [ecx],eax
  4136f4:	out    0xc,al
  4136f6:	inc    eax
  4136f7:	mov    BYTE PTR [ecx-0x5ff18d00],cl
  4136fd:	push   esp
  4136fe:	and    ah,ch
  413700:	and    BYTE PTR [edx+0x14],cl
  413703:	nop
  413704:	mov    WORD PTR [eax],?
  413706:	or     BYTE PTR [eax+0x0],0x82
  41370a:	add    BYTE PTR [eax],cl
  41370c:	dec    eax
  41370d:	add    eax,DWORD PTR [eax-0x6c]
  413710:	and    eax,0x800004
  413715:	pop    es
  413716:	mov    al,ds:0xc4588008
  41371b:	add    al,0xa6
  41371d:	add    BYTE PTR [eax],cl
  41371f:	add    al,0x6b
  413721:	add    eax,0x80b3fc14
  413726:	or     al,BYTE PTR [ecx]
  413728:	call   DWORD PTR ds:0x436b30
  41372e:	or     ebx,DWORD PTR [eax]
  413730:	adc    BYTE PTR [eax+0x20],al
  413733:	mov    eax,ds:0x49080350
  413738:	adc    ah,BYTE PTR [esp+eax*4]
  41373b:	add    eax,DWORD PTR [ecx]
  41373d:	add    BYTE PTR [edx+0x5018451f],dl
  413743:	and    al,0x24
  413745:	and    al,0x0
  413747:	adc    dl,al
  413749:	push   ebx
  41374a:	dec    eax
  41374b:	je     0x41375d
  41374d:	popa   
  41374e:	adc    al,BYTE PTR [ebx]
  413750:	ret    0x8030
  413753:	shr    DWORD PTR [edx+0x41019282],0xe1
  41375a:	add    al,0x4
  41375c:	xchg   ebp,eax
  41375d:	push   ebx
  41375e:	sub    al,0x2e
  413760:	cwde   
  413761:	adc    BYTE PTR [ecx],al
  413763:	or     al,BYTE PTR ds:0x10222848
  413769:	adc    eax,DWORD PTR [eax-0x5dfbb792]
  41376f:	or     DWORD PTR [eax],eax
  413771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413772:	or     BYTE PTR [eax+edx*1-0x40],ah
  413776:	push   es
  413777:	cmp    eax,0x80001c
  41377c:	dec    edx
  41377d:	or     BYTE PTR [edx+eax*1-0x3fdfbdfe],al
  413784:	pop    ss
  413785:	dec    ecx
  413786:	and    DWORD PTR [eax],ecx
  413788:	or     BYTE PTR [eax],al
  41378a:	inc    esp
  41378b:	adc    ah,BYTE PTR [eax+eax*1+0x72]
  41378f:	mov    eax,ds:0x11028a24
  413794:	xor    DWORD PTR [edi],eax
  413796:	mov    ds:0xab2cc07,al
  41379b:	mov    esp,0x808308
  4137a0:	and    BYTE PTR [eax+0x880307],al
  4137a6:	add    al,0x10
  4137a8:	adc    BYTE PTR [eax],0x9e
  4137ab:	or     cl,BYTE PTR [eax+0x20]
  4137ae:	inc    eax
  4137af:	xor    BYTE PTR [eax],dh
  4137b1:	pusha  
  4137b2:	add    BYTE PTR [ebx],0xa1
  4137b5:	or     al,0x44
  4137b7:	and    BYTE PTR [eax],ah
  4137b9:	dec    ecx
  4137ba:	inc    edx
  4137bb:	inc    eax
  4137bc:	add    al,0x10
  4137be:	or     al,0x0
  4137c0:	test   BYTE PTR [ecx+eiz*4],ah
  4137c3:	enter  0x38c0,0x0
  4137c7:	shl    BYTE PTR [eax+0x40],cl
  4137ca:	push   ss
  4137cb:	inc    esp
  4137cc:	add    DWORD PTR [eax+0x29],eax
  4137cf:	inc    esp
  4137d0:	adc    al,0x20
  4137d2:	inc    eax
  4137d3:	and    BYTE PTR [edx+eax*2],cl
  4137d6:	and    BYTE PTR [ecx+0x48540828],al
  4137dc:	inc    edx
  4137dd:	rol    BYTE PTR [ecx],0x10
  4137e0:	add    BYTE PTR [eax],ah
  4137e2:	add    esp,DWORD PTR [eax+eax*1]
  4137e5:	inc    esp
  4137e6:	and    eax,DWORD PTR [eax+0xa0001d0]
  4137ec:	push   es
  4137ed:	add    cl,dl
  4137ef:	and    al,0x4
  4137f1:	or     BYTE PTR [eax],al
  4137f3:	xchg   DWORD PTR ds:0x240080,edx
  4137f9:	test   DWORD PTR [eax],eax
  4137fb:	or     BYTE PTR [eax],ch
  4137fd:	pushf  
  4137fe:	add    al,0x10
  413800:	inc    eax
  413801:	inc    eax
  413802:	or     BYTE PTR [eax+0x3522064],ah
  413808:	adc    al,0x33
  41380a:	adc    al,0x0
  41380c:	add    cl,BYTE PTR [edx+eax*1-0x5fffdfc0]
  413813:	mov    eax,ds:0x59724045
  413818:	push   eax
  413819:	push   ebp
  41381a:	and    BYTE PTR ds:0x90241a28,al
  413820:	test   BYTE PTR [ecx],al
  413822:	add    BYTE PTR [esi+0x2242840],bl
  413828:	mov    al,0x40
  41382b:	xor    DWORD PTR [eax],eax
  41382d:	push   es
  41382e:	mov    cl,0x1
  413830:	and    BYTE PTR [eax+0x200702c8],cl
  413836:	or     al,BYTE PTR [eax-0x5c5fab90]
  41383c:	add    BYTE PTR [edi],0x84
  41383f:	push   edx
  413840:	and    DWORD PTR [eax-0x27bfbf7c],eax
  413846:	and    BYTE PTR [eax-0x5ebdafff],al
  41384c:	push   esp
  41384d:	sub    DWORD PTR [ebx+0x9408118],ecx
  413853:	adc    BYTE PTR [eax],ah
  413855:	and    BYTE PTR [eax+0xc],dh
  413858:	or     eax,0x48000fc
  41385d:	inc    esp
  41385e:	add    BYTE PTR [ebx],al
  413860:	nop
  413861:	jo     0x413863
  413863:	push   edi
  413864:	xor    eax,ebp
  413866:	inc    esp
  413867:	add    BYTE PTR [eax],al
  413869:	add    BYTE PTR [esp+0x52004650],dl
  413870:	add    DWORD PTR [ebp+0x96d1884],eax
  413876:	or     BYTE PTR [ecx],0x1
  413879:	les    eax,FWORD PTR [ebp+0x20]
  41387c:	or     BYTE PTR [ecx],0x0
  41387f:	xchg   BYTE PTR [ecx+0x1042711],al
  413885:	mov    BYTE PTR [ebx],cl
  413887:	pusha  
  413888:	dec    edx
  413889:	popf   
  41388a:	adc    BYTE PTR [eax],al
  41388c:	or     BYTE PTR [eax],al
  41388e:	xchg   edx,eax
  41388f:	xor    dh,0x24
  413892:	mov    DWORD PTR [edi+0x5000009f],esp
  413898:	and    BYTE PTR [edx+0x144c8c90],al
  41389e:	and    eax,DWORD PTR [eax]
  4138a0:	push   0xa4050291
  4138a5:	dec    eax
  4138a6:	add    ah,BYTE PTR [eax]
  4138a8:	adc    DWORD PTR [eax],eax
  4138aa:	or     BYTE PTR [edx+0x63408c4],al
  4138b0:	inc    esp
  4138b1:	mov    BYTE PTR [edx*4+0x60434250],al
  4138b8:	add    al,0x21
  4138ba:	or     DWORD PTR [edx],ebp
  4138bc:	add    al,0x0
  4138be:	pop    es
  4138bf:	rcl    BYTE PTR [eax-0x7bdece00],1
  4138c5:	adc    DWORD PTR [eax+0x6910ca52],eax
  4138cb:	push   es
  4138cc:	dec    ecx
  4138cd:	mov    al,ds:0x3880c042
  4138d2:	and    al,BYTE PTR [ebx]
  4138d4:	int3   
  4138d5:	mov    dl,0x2
  4138d7:	push   es
  4138d8:	or     DWORD PTR [eax+0x22],esp
  4138db:	add    BYTE PTR [edx],al
  4138dd:	pop    eax
  4138de:	and    BYTE PTR [esp+ecx*2],al
  4138e1:	nop
  4138e2:	inc    eax
  4138e3:	or     BYTE PTR [edx],bl
  4138e5:	mov    eax,ds:0x21085e64
  4138ea:	test   DWORD PTR [esi],eax
  4138ec:	and    dl,BYTE PTR [ecx+0x481471aa]
  4138f2:	add    BYTE PTR [ebx],bl
  4138f4:	push   esi
  4138f5:	ss push eax
  4138f7:	bound  ebp,QWORD PTR [eax-0x55ff1d1f]
  4138fd:	and    BYTE PTR ds:0xc7044031,ch
  413903:	and    DWORD PTR [edx+eiz*1-0x7e],0x41
  413908:	or     BYTE PTR [edx+0x0],dl
  41390b:	add    BYTE PTR [ecx+0x14608083],al
  413911:	xchg   esp,eax
  413912:	or     dl,BYTE PTR [ecx]
  413914:	loopne 0x41389a
  413916:	adc    BYTE PTR [eax],cl
  413918:	adc    BYTE PTR [eax+0x30348123],dh
  41391e:	inc    eax
  41391f:	xor    DWORD PTR [ecx],eax
  413921:	and    BYTE PTR [ecx+0x41],al
  413924:	ins    BYTE PTR es:[edi],dx
  413925:	and    BYTE PTR [edx],ch
  413927:	add    BYTE PTR [eax+eiz*1],ah
  41392a:	test   BYTE PTR [eax+0x0],dl
  41392d:	push   edi
  41392e:	add    BYTE PTR [eax],cl
  413930:	enter  0x42a0,0x31
  413934:	nop
  413935:	add    al,al
  413937:	pop    es
  413938:	inc    eax
  413939:	sbb    BYTE PTR [eax-0x7bf7d9f0],bh
  41393f:	test   BYTE PTR [eax+eax*2+0x0],al
  413943:	push   edx
  413944:	add    BYTE PTR [eax+0x1007e581],al
  41394a:	add    BYTE PTR [eax+eiz*1],0x0
  41394e:	add    BYTE PTR ds:0x94248081,dl
  413954:	adc    BYTE PTR [ebx],ah
  413956:	add    dl,BYTE PTR [eax]
  413958:	sub    BYTE PTR [eax],ah
  41395a:	loopne 0x41395c
  41395c:	test   BYTE PTR [eax],al
  41395e:	add    al,0xb
  413960:	xchg   esp,eax
  413961:	cwde   
  413962:	and    BYTE PTR [ecx-0x7bbffefc],0x3d
  413969:	sub    al,0x0
  41396b:	inc    ecx
  41396c:	add    al,al
  41396e:	adc    al,al
  413970:	xor    al,0x0
  413972:	(bad)  
  413974:	adc    cl,BYTE PTR [eax-0x4e]
  413977:	add    BYTE PTR [eax],al
  413979:	add    bh,BYTE PTR [eax]
  41397b:	or     BYTE PTR [eax+0xa0a201b],al
  413981:	add    BYTE PTR [eax],bl
  413983:	adc    BYTE PTR [edx],al
  413985:	mov    dl,0x62
  413987:	add    BYTE PTR [eax],cl
  413989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41398a:	add    eax,0xc8013542
  41398f:	and    BYTE PTR [eax],cl
  413991:	adc    DWORD PTR [edx],0x80520142
  413997:	and    al,0x0
  413999:	or     BYTE PTR [edx+eax*1],dh
  41399c:	or     DWORD PTR [eax],eax
  41399e:	mov    dh,0x42
  4139a0:	clc    
  4139a1:	adc    BYTE PTR [ebx],al
  4139a3:	xor    BYTE PTR [ecx],ah
  4139a5:	push   es
  4139a6:	add    BYTE PTR [eax+0x61],dl
  4139a9:	int3   
  4139aa:	mov    DWORD PTR [eax],edi
  4139ac:	push   edx
  4139ad:	inc    eax
  4139ae:	add    BYTE PTR [esi],cl
  4139b0:	and    DWORD PTR [eax+0x52],esi
  4139b3:	or     BYTE PTR [eax+ebp*1],dh
  4139b6:	adc    BYTE PTR [edx],cl
  4139b8:	adc    BYTE PTR [eax-0x80],al
  4139bb:	outs   dx,DWORD PTR ds:[esi]
  4139bc:	add    ah,BYTE PTR [eax]
  4139be:	xchg   ebx,eax
  4139bf:	xor    eax,0x0
  4139c4:	xchg   ebx,eax
  4139c5:	or     al,0x0
  4139c7:	push   cs
  4139c8:	add    BYTE PTR [edx],0x24
  4139cb:	add    BYTE PTR [eax],cl
  4139cd:	adc    DWORD PTR [edx-0x80],ecx
  4139d0:	mov    al,ds:0x80e04010
  4139d5:	inc    eax
  4139d6:	add    BYTE PTR [ecx],dl
  4139d8:	jb     0x4139da
  4139da:	and    BYTE PTR [eax+0x8],al
  4139dd:	or     ch,BYTE PTR [eax-0x40]
  4139e0:	add    al,BYTE PTR [edi+0xc148809]
  4139e6:	adc    DWORD PTR [eax],esi
  4139e8:	add    DWORD PTR [eax],0x1048321
  4139ee:	pop    esp
  4139ef:	xchg   ebx,eax
  4139f0:	add    DWORD PTR ds:0x1151ad4,esp
  4139f6:	add    BYTE PTR [ebx],dl
  4139f8:	or     BYTE PTR [eax],dl
  4139fa:	xor    bl,al
  4139fc:	and    al,0x10
  4139fe:	add    BYTE PTR [ecx],ah
  413a00:	push   ecx
  413a01:	pusha  
  413a02:	pop    esi
  413a03:	add    BYTE PTR [eax+ecx*8+0x2404],0x86
  413a0b:	add    al,0x0
  413a0d:	push   es
  413a0e:	test   al,0x12
  413a10:	add    BYTE PTR [eax+0x25],dl
  413a13:	adc    BYTE PTR [edi],0x1
  413a16:	add    BYTE PTR [eax+0x8],al
  413a19:	or     BYTE PTR [eax],al
  413a1b:	out    0x97,al
  413a1d:	mov    WORD PTR ds:[edx],ss
  413a20:	xor    BYTE PTR [eax+ebx*1],al
  413a23:	test   al,0xd8
  413a25:	mov    al,ds:0x44000ce4
  413a2a:	add    BYTE PTR [ecx],ah
  413a2c:	cmp    cl,BYTE PTR [eax]
  413a2e:	inc    edx
  413a2f:	and    BYTE PTR [edx-0x7d],0x8a
  413a33:	ret    0x8c08
  413a36:	xchg   BYTE PTR [edx+edx*8],al
  413a39:	add    al,0x50
  413a3b:	adc    al,al
  413a3d:	add    ah,BYTE PTR [eax+0x71]
  413a40:	pop    es
  413a41:	push   0x14108188
  413a46:	add    DWORD PTR [ebx],edx
  413a48:	add    BYTE PTR [eax],ch
  413a4a:	adc    BYTE PTR [eax+0x40240400],0x0
  413a51:	sub    al,0x41
  413a53:	add    BYTE PTR [eax],0x8
  413a56:	add    BYTE PTR [eax],al
  413a58:	add    al,0x2
  413a5a:	dec    eax
  413a5b:	or     BYTE PTR [eax+eiz*1],al
  413a5e:	push   0x30038080
  413a63:	adc    al,0x41
  413a65:	adc    DWORD PTR [eax],ecx
  413a67:	and    BYTE PTR [ecx],dh
  413a69:	call   0x6041:0x904884
  413a70:	sub    al,BYTE PTR [eax]
  413a72:	bound  edx,QWORD PTR [ecx+eax*1]
  413a75:	pop    edx
  413a76:	and    esp,esp
  413a78:	adc    BYTE PTR [edx],al
  413a7a:	imul   edx,DWORD PTR [eax],0x60
  413a7d:	inc    edx
  413a7e:	inc    eax
  413a7f:	adc    cl,BYTE PTR [edx-0x40]
  413a82:	add    BYTE PTR [eax],al
  413a84:	adc    BYTE PTR [edx+eax*1+0x27],ah
  413a88:	add    BYTE PTR [edx+edx*2+0x8],dl
  413a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a8d:	lea    eax,[esi]
  413a8f:	push   esp
  413a90:	pop    eax
  413a91:	and    BYTE PTR [ebx],0xd6
  413a94:	and    BYTE PTR [eax+eax*2],ah
  413a97:	inc    edx
  413a98:	jno    0x413afa
  413a9a:	dec    ebx
  413a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a9c:	and    al,BYTE PTR [eax-0x75bff751]
  413aa2:	pusha  
  413aa3:	inc    eax
  413aa4:	xor    DWORD PTR [esi],eax
  413aa6:	add    cl,BYTE PTR [eax+0x762404]
  413aac:	add    ah,al
  413aae:	ret    
  413aaf:	and    eax,DWORD PTR [eax]
  413ab1:	add    al,0x10
  413ab3:	dec    eax
  413ab4:	sbb    BYTE PTR [eax],0x4
  413ab7:	add    BYTE PTR [eax],al
  413ab9:	adc    BYTE PTR [eax+0x36],0x81
  413abd:	or     eax,0x80001420
  413ac2:	inc    eax
  413ac3:	stos   BYTE PTR es:[edi],al
  413ac4:	add    BYTE PTR [eax],ah
  413ac6:	add    BYTE PTR [ebp+edx*1+0x66],ah
  413aca:	xchg   esi,eax
  413acb:	or     BYTE PTR [eax],ch
  413acd:	mov    eax,ds:0x1c419001
  413ad2:	rol    BYTE PTR [ebx],0xb8
  413ad5:	add    BYTE PTR [eax+eiz*1],cl
  413ad8:	or     BYTE PTR [ecx],0x0
  413adb:	xchg   ebp,eax
  413adc:	rol    BYTE PTR [eax+0x4472025],0x7
  413ae3:	add    BYTE PTR [eax+0x226040b4],al
  413ae9:	test   BYTE PTR [eax],0x68
  413aec:	xor    al,BYTE PTR [edx]
  413aee:	sbb    BYTE PTR [edx+edx*1],al
  413af1:	or     dl,BYTE PTR [eax]
  413af3:	jno    0x413a7a
  413af5:	add    DWORD PTR [eax+0x48],esp
  413af8:	add    BYTE PTR [eax],dl
  413afa:	and    DWORD PTR [eax],eax
  413afc:	add    DWORD PTR [edx],eax
  413afe:	adc    eax,0x1c48e600
  413b03:	add    al,0x2
  413b05:	or     al,0x5
  413b07:	add    BYTE PTR [eax],al
  413b09:	or     bl,BYTE PTR [ebx+0x0]
  413b0c:	add    dl,BYTE PTR fs:[eax+0x10]
  413b10:	add    DWORD PTR [ebp+0x60],0x15190cc1
  413b17:	and    cl,ch
  413b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1a:	test   DWORD PTR [eax],esp
  413b1c:	mov    al,ds:0x5820c04e
  413b21:	and    al,0x20
  413b24:	adc    BYTE PTR [ecx],dl
  413b26:	pop    es
  413b27:	xor    BYTE PTR [eax],al
  413b29:	and    al,0x92
  413b2b:	cmp    BYTE PTR [eax+eax*4],0x94
  413b2f:	add    DWORD PTR [eax+0xe],0x10990003
  413b36:	and    DWORD PTR [eax+0x2],ebx
  413b39:	add    DWORD PTR [eax],eax
  413b3b:	sbb    BYTE PTR [edi],dl
  413b3d:	cmp    DWORD PTR [eax-0x80],eax
  413b40:	or     BYTE PTR [eax+eax*1-0x57fff2e0],dh
  413b47:	pusha  
  413b48:	loopne 0x413b52
  413b4a:	test   BYTE PTR [esi-0x68],al
  413b4d:	adc    ecx,DWORD PTR [eax]
  413b4f:	sub    BYTE PTR [esp+eax*1],al
  413b52:	push   edx
  413b53:	add    BYTE PTR [ecx],ah
  413b55:	inc    eax
  413b56:	adc    BYTE PTR [eax+edx*2],cl
  413b59:	rol    DWORD PTR [esp+eiz*2],1
  413b5c:	add    DWORD PTR [ecx],esp
  413b5e:	and    eax,0x78404ae3
  413b63:	lods   al,BYTE PTR ds:[esi]
  413b64:	rol    BYTE PTR [ecx],1
  413b66:	cld    
  413b67:	push   es
  413b68:	bound  ebx,QWORD PTR [ebx]
  413b6a:	and    BYTE PTR [esi],al
  413b6c:	inc    eax
  413b6d:	add    dl,BYTE PTR [ecx]
  413b6f:	add    al,BYTE PTR [edx]
  413b71:	adc    al,0x20
  413b73:	or     dh,BYTE PTR [eax+eax*1]
  413b76:	inc    eax
  413b77:	push   eax
  413b78:	add    eax,DWORD PTR [edx-0x5fde959e]
  413b7e:	inc    ebx
  413b7f:	or     eax,0x19246000
  413b84:	and    BYTE PTR [eax],0x8c
  413b87:	inc    esp
  413b88:	add    BYTE PTR [eax],ah
  413b8a:	sbb    al,BYTE PTR [eax]
  413b8c:	test   al,dl
  413b8e:	add    esp,DWORD PTR [ecx]
  413b90:	add    al,0x0
  413b92:	dec    esp
  413b93:	lods   eax,DWORD PTR ds:[esi]
  413b94:	sub    BYTE PTR [eax-0x5bbff2ef],ah
  413b9a:	adc    BYTE PTR [ecx],al
  413b9c:	add    BYTE PTR [ecx],al
  413b9e:	adc    ah,BYTE PTR [ecx+0x22040009]
  413ba4:	adc    BYTE PTR [edi],ah
  413ba6:	bound  esi,QWORD PTR [ecx+eax*1+0x20]
  413baa:	or     al,0xc1
  413bac:	add    al,0x85
  413bae:	rol    BYTE PTR [edx],0x24
  413bb1:	or     DWORD PTR [eax],eax
  413bb3:	jb     0x413bc5
  413bb5:	int3   
  413bb6:	test   BYTE PTR [edx+edx*4+0x5],al
  413bba:	inc    esi
  413bbb:	inc    eax
  413bbc:	cmp    BYTE PTR [ecx+0x70],al
  413bbf:	sbb    BYTE PTR [esi],cl
  413bc1:	test   al,0x42
  413bc3:	adc    DWORD PTR [ecx+ebp*4],ecx
  413bc6:	inc    esp
  413bc7:	jo     0x413c11
  413bc9:	adc    BYTE PTR [eax+eax*1],0xc6
  413bcd:	mov    DWORD PTR [ecx],ebp
  413bcf:	scas   al,BYTE PTR es:[edi]
  413bd0:	inc    ebx
  413bd1:	add    BYTE PTR [ebp+0x13],al
  413bd4:	and    BYTE PTR [eax],al
  413bd6:	xchg   ecx,eax
  413bd7:	add    DWORD PTR [ecx],edx
  413bd9:	rol    BYTE PTR [edx+0x101d1180],0x28
  413be0:	adc    al,0xb
  413be2:	test   DWORD PTR [eax-0x74],eax
  413be5:	loopne 0x413be9
  413be7:	xor    BYTE PTR [eax+0x22028823],bl
  413bed:	adc    DWORD PTR [eax+0x502510],0xffffff80
  413bf4:	mov    eax,ds:0x20880003
  413bf9:	pop    ds
  413bfa:	adc    BYTE PTR [eax+0x30],al
  413bfd:	push   ecx
  413bfe:	push   eax
  413bff:	add    al,0x0
  413c01:	add    BYTE PTR [eax],dh
  413c03:	ret    0x40e0
  413c06:	add    DWORD PTR [eax+0x2a],0xd010d083
  413c0d:	add    eax,DWORD PTR [eax+0x0]
  413c10:	add    BYTE PTR [eax],al
  413c12:	add    eax,DWORD PTR [eax]
  413c14:	ins    DWORD PTR es:[edi],dx
  413c15:	and    BYTE PTR [eax+0x22],dl
  413c18:	dec    eax
  413c19:	add    dl,BYTE PTR [ecx-0x7e5f5dae]
  413c1f:	sbb    DWORD PTR [edx-0x40],eax
  413c22:	add    al,0x92
  413c24:	mov    WORD PTR [esi],es
  413c26:	add    cl,dl
  413c28:	xor    BYTE PTR [eax],ah
  413c2a:	adc    BYTE PTR [eax+eax*1],al
  413c2d:	mov    DWORD PTR [ecx],eax
  413c2f:	inc    ecx
  413c30:	and    DWORD PTR [edi],eax
  413c32:	xor    eax,0xc17428a9
  413c37:	adc    dl,BYTE PTR [ecx+0x524a4305]
  413c3d:	adc    BYTE PTR [edx+0x31130],0x89
  413c44:	sbb    ch,al
  413c46:	xchg   edx,eax
  413c47:	xor    al,0x0
  413c49:	adc    dh,BYTE PTR [ecx]
  413c4b:	or     BYTE PTR [eax],cl
  413c4d:	or     DWORD PTR ds:0x29a90002,ecx
  413c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c54:	or     DWORD PTR [ecx+eax*4],0x444c0048
  413c5b:	add    al,BYTE PTR [eax-0x4e]
  413c5e:	adc    BYTE PTR [eax+0x870e91a],dl
  413c64:	dec    eax
  413c65:	add    al,BYTE PTR [edx]
  413c67:	sub    DWORD PTR [ecx],ebx
  413c69:	add    BYTE PTR [edi+0x25],al
  413c6c:	xor    al,0x8a
  413c6e:	push   edx
  413c6f:	add    BYTE PTR [ecx+0x0],0x6
  413c73:	popa   
  413c74:	loopne 0x413c81
  413c76:	inc    eax
  413c77:	add    cl,BYTE PTR [eax]
  413c79:	and    al,BYTE PTR [eax]
  413c7b:	push   edx
  413c7c:	adc    BYTE PTR [edi],al
  413c7e:	sbb    al,0x70
  413c80:	adc    BYTE PTR [ecx],0xd0
  413c83:	dec    ecx
  413c84:	and    BYTE PTR [edx*2-0x787479f7],al
  413c8b:	sub    al,BYTE PTR [eax]
  413c8d:	push   esp
  413c8e:	sub    eax,0x4546018c
  413c93:	add    BYTE PTR [eax-0x6ef1dbfc],ah
  413c99:	add    al,0x22
  413c9b:	add    DWORD PTR [eax],esp
  413c9d:	adc    BYTE PTR [eax+eax*1],cl
  413ca0:	add    BYTE PTR [eax],al
  413ca2:	or     BYTE PTR [ecx],al
  413ca4:	add    BYTE PTR [edx],ah
  413ca6:	adc    DWORD PTR [eax],esp
  413ca8:	sbb    BYTE PTR [eax-0x59538000],dl
  413cae:	mov    eax,ds:0x42091200
  413cb3:	or     BYTE PTR [eax],ch
  413cb5:	add    BYTE PTR [eax],al
  413cb7:	add    DWORD PTR [edx],ecx
  413cb9:	add    dl,BYTE PTR [eax]
  413cbb:	push   es
  413cbc:	adc    BYTE PTR [eax],dl
  413cbe:	or     BYTE PTR [eax],al
  413cc0:	inc    esp
  413cc1:	add    cl,BYTE PTR [eax]
  413cc3:	nop
  413cc4:	js     0x413ce9
  413cc6:	and    bh,BYTE PTR [esp+edx*1]
  413cc9:	sub    al,0x80
  413ccb:	cdq    
  413ccc:	inc    eax
  413ccd:	adc    ch,ah
  413ccf:	add    BYTE PTR [eax],ah
  413cd1:	add    BYTE PTR [eax],al
  413cd3:	mov    al,0xa0
  413cd5:	and    BYTE PTR [ecx],0x33
  413cd8:	add    al,0x1b
  413cda:	adc    DWORD PTR [eax],edx
  413cdc:	add    BYTE PTR [ecx-0x7f],al
  413cdf:	mov    eax,eax
  413ce1:	and    BYTE PTR [ecx+eiz*2+0x2302c0c],al
  413ce8:	adc    al,0xc0
  413cea:	loop   0x413cfe
  413cec:	and    al,BYTE PTR [ecx+esi*2]
  413cef:	inc    eax
  413cf0:	mov    BYTE PTR [eax+eiz*1],bl
  413cf3:	inc    eax
  413cf4:	adc    BYTE PTR [edx],al
  413cf6:	add    BYTE PTR [eax],0x38
  413cf9:	mov    BYTE PTR [edx],cl
  413cfb:	inc    esp
  413cfc:	mov    al,ds:0x14160
  413d01:	inc    edx
  413d02:	add    al,bl
  413d04:	sub    BYTE PTR [eax+0x1130d060],0xa0
  413d0b:	sub    BYTE PTR [eax+0x30042a24],al
  413d11:	add    dh,BYTE PTR [esp+eax*1+0xa0c4c0]
  413d18:	add    al,0xe6
  413d1a:	push   edx
  413d1b:	nop
  413d1c:	and    ecx,DWORD PTR gs:[edx*1+0x15004446]
  413d24:	jo     0x413d2c
  413d26:	dec    eax
  413d27:	add    BYTE PTR [edx+0x3844008],dl
  413d2d:	or     BYTE PTR [edx+eax*4+0x40],al
  413d31:	add    BYTE PTR [ecx],ah
  413d33:	dec    edx
  413d34:	add    al,BYTE PTR [esi]
  413d36:	add    DWORD PTR [ecx+0x23],esp
  413d39:	dec    ecx
  413d3a:	imul   edx,DWORD PTR [eax+0x41],0xffffffc3
  413d3e:	mov    al,ds:0x103f1cec
  413d43:	lock or ebx,DWORD PTR [ecx+0x18]
  413d47:	add    BYTE PTR [ecx],dl
  413d49:	or     eax,0x65010284
  413d4e:	inc    esp
  413d4f:	cs nop
  413d51:	add    DWORD PTR ds:0x20150041,esp
  413d57:	add    BYTE PTR [ecx],dh
  413d59:	sub    BYTE PTR [eax-0x3c],al
  413d5c:	or     BYTE PTR [edi+0x352020c0],al
  413d62:	add    BYTE PTR [eax],ah
  413d64:	inc    ebx
  413d65:	inc    ecx
  413d66:	or     al,0xc0
  413d68:	add    al,0x10
  413d6a:	add    BYTE PTR ds:0x95000100,ah
  413d70:	nop
  413d71:	dec    ecx
  413d72:	sbb    eax,DWORD PTR [eax+0x2064000]
  413d78:	add    BYTE PTR [eax+eax*4+0x957c030],ch
  413d7f:	xor    al,0xe1
  413d81:	inc    eax
  413d82:	add    DWORD PTR [eax],eax
  413d84:	add    eax,0xf08a820
  413d89:	push   0x0
  413d8b:	test   BYTE PTR [eax],dl
  413d8d:	add    BYTE PTR [esi],ah
  413d8f:	and    al,BYTE PTR [eax]
  413d91:	xchg   ebp,eax
  413d92:	adc    cl,cl
  413d94:	add    eax,0x4c204860
  413d99:	adc    al,al
  413d9b:	adc    al,BYTE PTR [ebp-0x5ffedff0]
  413da1:	rcl    BYTE PTR [ebp+ecx*1-0x6f],0x8
  413da6:	add    bh,ah
  413da8:	add    BYTE PTR [eax-0x27dbd800],0xb
  413daf:	mov    ds:0x80448193,al
  413db4:	xor    al,al
  413db6:	daa    
  413db7:	mov    dl,BYTE PTR [edx]
  413db9:	push   es
  413dba:	add    BYTE PTR [esi+0xf448602],al
  413dc0:	mov    al,ds:0x69800811
  413dc5:	cwde   
  413dc6:	mov    cl,0x82
  413dc8:	and    al,0xa8
  413dca:	test   al,al
  413dcc:	pop    eax
  413dcd:	xchg   esp,eax
  413dce:	add    DWORD PTR [eax],eax
  413dd0:	add    al,0xc9
  413dd2:	or     eax,0x2921228c
  413dd7:	xchg   edx,eax
  413dd8:	xor    BYTE PTR [eax],al
  413dda:	add    al,0xf0
  413ddc:	add    BYTE PTR [eax+0x64],al
  413ddf:	adc    BYTE PTR [edx+0x150dd006],dl
  413de5:	test   al,0x8
  413de7:	add    DWORD PTR [edi],eax
  413de9:	and    ecx,DWORD PTR [eax+0x8111109]
  413def:	loope  0x413df2
  413df1:	popa   
  413df2:	adc    cl,BYTE PTR [eax+0x5]
  413df5:	adc    al,BYTE PTR [edx]
  413df7:	lea    eax,[edx]
  413df9:	mov    WORD PTR [eax+eiz*1],cs
  413dfc:	adc    BYTE PTR [edx+eax*1+0x24000110],al
  413e03:	inc    eax
  413e04:	mov    BYTE PTR [eax],dl
  413e06:	add    BYTE PTR [eax],dl
  413e08:	pop    ss
  413e09:	add    esi,ebp
  413e0b:	mov    BYTE PTR [eax+ecx*1],al
  413e0e:	es aam 0xc0
  413e11:	add    eax,DWORD PTR [edx]
  413e13:	add    DWORD PTR ds:0xc0956232,esp
  413e19:	pop    ecx
  413e1a:	jns    0x413da0
  413e1c:	adc    DWORD PTR [eax],0xa804886
  413e22:	jl     0x413da6
  413e24:	or     al,0x4
  413e26:	sbb    ah,dl
  413e28:	add    al,0x84
  413e2a:	adc    ah,BYTE PTR [eax]
  413e2c:	adc    BYTE PTR [edi+ebp*4+0x9],ah
  413e30:	inc    eax
  413e31:	add    BYTE PTR [edx+ebx*1],ah
  413e34:	inc    eax
  413e35:	add    al,BYTE PTR [eax]
  413e37:	add    BYTE PTR [eax],ah
  413e39:	add    al,0x32
  413e3b:	adc    BYTE PTR [eax],ah
  413e3d:	or     BYTE PTR [eax+eax*1],0xd4
  413e41:	add    BYTE PTR [edx],bh
  413e43:	pusha  
  413e44:	add    DWORD PTR [ecx],esp
  413e46:	inc    ecx
  413e47:	add    BYTE PTR [eax-0x6b4cbf7c],dl
  413e4d:	jb     0x413e47
  413e4f:	and    BYTE PTR [eax],dl
  413e51:	add    al,al
  413e53:	mov    eax,ds:0x2fa060
  413e58:	pusha  
  413e59:	(bad)  
  413e5a:	sbb    BYTE PTR [eax],bl
  413e5c:	add    eax,0x20b00501
  413e61:	adc    BYTE PTR [eax+eiz*4+0x4],dl
  413e65:	lea    ebx,[eax+0x6001c400]
  413e6b:	add    BYTE PTR [eax-0x80],ah
  413e6e:	and    BYTE PTR [eax],bh
  413e70:	enter  0x46a,0x40
  413e74:	or     al,0x20
  413e76:	pusha  
  413e77:	and    DWORD PTR [eax+0x22100411],edx
  413e7d:	and    eax,0x320a22b
  413e82:	adc    BYTE PTR [edx+0x110a0008],0x12
  413e89:	or     BYTE PTR [esi],al
  413e8b:	and    BYTE PTR [edx-0x40],ah
  413e8e:	mov    WORD PTR [ebx+0x8],cs
  413e91:	xor    eax,0x2900124
  413e96:	add    BYTE PTR [ecx],al
  413e98:	test   BYTE PTR [eax],dh
  413e9a:	or     eax,0x8005082
  413e9f:	add    DWORD PTR [ecx+0x10],eax
  413ea2:	add    BYTE PTR [edx],0x80
  413ea5:	add    BYTE PTR [eax-0x2aefbf30],al
  413eab:	cwde   
  413eac:	xchg   edx,eax
  413ead:	push   es
  413eae:	pop    esp
  413eaf:	mov    al,ds:0x4401861b
  413eb4:	mov    eax,ds:0x56200826
  413eb9:	inc    ebp
  413eba:	and    eax,0x200001
  413ebf:	and    BYTE PTR [ecx+edx*4+0x11c2802],ch
  413ec6:	sahf   
  413ec7:	mov    DWORD PTR [eax],eax
  413ec9:	and    DWORD PTR [esp+esi*2],0x81104
  413ed0:	adc    BYTE PTR [edx+0x0],dl
  413ed3:	add    BYTE PTR [edx+0x25],bl
  413ed6:	add    al,0x2
  413ed8:	mov    DWORD PTR [eax],eax
  413eda:	mov    al,0x7
  413edc:	add    edx,DWORD PTR [eax-0x3ffff3fa]
  413ee2:	mov    al,ds:0x4128090
  413ee7:	pop    es
  413ee8:	push   eax
  413ee9:	mov    cs,WORD PTR [ebx]
  413eeb:	and    BYTE PTR [eax+eax*1],ch
  413eee:	add    DWORD PTR [ecx],eax
  413ef0:	add    al,BYTE PTR [eax]
  413ef2:	sbb    DWORD PTR [eax],esp
  413ef4:	add    dl,BYTE PTR [edx]
  413ef6:	and    BYTE PTR [ecx+0x1],ah
  413ef9:	pusha  
  413efa:	push   eax
  413efb:	and    al,BYTE PTR [eax+0x22]
  413efe:	call   DWORD PTR ds:0x436c68
  413f04:	adc    BYTE PTR [esi],ah
  413f06:	xor    BYTE PTR [ecx+0x2422b01e],bl
  413f0c:	add    DWORD PTR [ecx+0x9],esp
  413f0f:	add    eax,0x4
  413f12:	inc    esp
  413f13:	add    BYTE PTR [ecx],dh
  413f15:	rol    BYTE PTR [eax-0x4bffffe0],1
  413f1b:	or     ebp,DWORD PTR [ecx]
  413f1d:	add    al,0xe0
  413f1f:	adc    ecx,DWORD PTR [ecx+eax*2]
  413f22:	enter  0x9800,0x4
  413f26:	add    BYTE PTR [eax+0x10],0x11
  413f2a:	adc    ah,dl
  413f2c:	add    DWORD PTR [edx-0x57fb0000],ecx
  413f32:	xor    BYTE PTR [edx],al
  413f34:	and    al,0x0
  413f36:	mov    al,0x14
  413f38:	or     eax,0xca83872
  413f3d:	dec    edx
  413f3e:	add    eax,DWORD PTR [esi]
  413f40:	and    dl,BYTE PTR [edi]
  413f42:	and    BYTE PTR [edi],ah
  413f44:	add    DWORD PTR [eax+0x225c1222],esp
  413f4a:	add    BYTE PTR [esi+0x31950],cl
  413f50:	add    BYTE PTR [eax+0x20],ah
  413f53:	xchg   edx,eax
  413f54:	and    eax,0x80b82608
  413f59:	adc    BYTE PTR [ebp+0x44],al
  413f5c:	xor    DWORD PTR [eax],eax
  413f5e:	or     BYTE PTR [eax+0x8],0x60
  413f62:	dec    eax
  413f63:	add    BYTE PTR [ebx+edi*2+0x44],bl
  413f67:	add    BYTE PTR [eax],al
  413f69:	adc    BYTE PTR [eax+0x2],al
  413f6c:	les    ecx,FWORD PTR [ecx]
  413f6e:	add    DWORD PTR [esp+eax*4],esp
  413f71:	inc    ebp
  413f72:	sub    DWORD PTR [ecx+0x0],ecx
  413f75:	cs push es
  413f77:	add    al,0xc8
  413f79:	sub    BYTE PTR [ebp+eax*8-0x1facbdfe],dl
  413f80:	enter  0x19d0,0x1c
  413f84:	add    BYTE PTR [edx+edx*4],ah
  413f87:	adc    eax,0x5700408
  413f8c:	mov    al,ds:0x82053725
  413f91:	add    esp,DWORD PTR [edx+0xf]
  413f94:	fisttp QWORD PTR [eax]
  413f96:	test   al,0x5
  413f98:	add    DWORD PTR [ebp+0x60093713],edx
  413f9e:	add    eax,DWORD PTR [eax]
  413fa0:	add    BYTE PTR [edx+0x18],dl
  413fa3:	rol    BYTE PTR [eax-0x27],1
  413fa6:	and    DWORD PTR [eax],ecx
  413fa8:	inc    edx
  413fa9:	xchg   ecx,eax
  413faa:	pusha  
  413fab:	test   BYTE PTR [edx-0x57dffefc],al
  413fb1:	or     al,0x22
  413fb3:	or     BYTE PTR [eax],al
  413fb5:	add    BYTE PTR [eax],dl
  413fb7:	adc    BYTE PTR [ecx+0x60],cl
  413fba:	add    BYTE PTR [eax+0x2230665],bh
  413fc0:	dec    eax
  413fc1:	inc    esp
  413fc2:	add    eax,0x100b1806
  413fc7:	inc    eax
  413fc8:	xchg   ecx,eax
  413fc9:	sbb    eax,0xc0240000
  413fce:	sbb    al,0x40
  413fd0:	inc    ecx
  413fd1:	popa   
  413fd2:	adc    BYTE PTR [ecx],bh
  413fd4:	ror    BYTE PTR [ebx],0x99
  413fd7:	or     al,0x2
  413fd9:	inc    esp
  413fda:	add    BYTE PTR [eax-0x73],dl
  413fdd:	add    eax,DWORD PTR [eax-0x7759f77f]
  413fe3:	sbb    ebx,DWORD PTR [eax]
  413fe5:	xor    DWORD PTR [ebx],0x4081082a
  413feb:	sbb    al,0xc6
  413fed:	test   DWORD PTR [ebp+0x40100965],edx
  413ff3:	add    BYTE PTR [eax+0x18],dh
  413ff6:	add    DWORD PTR [ecx],ecx
  413ff8:	push   es
  413ff9:	ret    0x4624
  413ffc:	push   eax
  413ffd:	add    BYTE PTR [eax+eax*1+0x3210088],al
  414004:	and    DWORD PTR [eax],eax
  414006:	adc    BYTE PTR [eax],dl
  414008:	add    BYTE PTR [eax],al
  41400a:	add    eax,0x5a0c10a
  41400f:	or     BYTE PTR [edi+0x8],cl
  414012:	or     BYTE PTR [ecx],0x12
  414015:	xor    BYTE PTR [eax+0x180a80],al
  41401b:	or     al,0x46
  41401d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401e:	adc    BYTE PTR [ecx],ah
  414020:	add    al,0x20
  414022:	add    BYTE PTR [eax],ch
  414024:	or     BYTE PTR [eax],0x84
  414027:	add    BYTE PTR [ecx+eiz*2+0x3336a00],al
  41402e:	inc    ecx
  41402f:	add    al,0x0
  414031:	enter  0x5200,0x10
  414035:	add    BYTE PTR [ecx],0x20
  414038:	adc    BYTE PTR [eax+0x800204c],ch
  41403e:	add    al,0x26
  414041:	loope  0x414085
  414043:	mov    WORD PTR [edx],ds
  414045:	or     eax,0xa8005191
  41404a:	popa   
  41404b:	ror    DWORD PTR [ebp+0x524b8020],0x8d
  414052:	or     BYTE PTR [ecx+0x40],al
  414055:	push   es
  414056:	dec    eax
  414057:	add    ah,BYTE PTR [esi]
  414059:	or     BYTE PTR [ecx+0x41007094],dl
  41405f:	mov    ds:0x9004054,eax
  414064:	imul   eax,DWORD PTR [ecx],0x40060
  41406a:	add    cl,al
  41406c:	inc    eax
  41406d:	push   ss
  41406e:	adc    ebx,DWORD PTR [ebx]
  414070:	xor    al,BYTE PTR [eax+0x2a330d1]
  414076:	inc    esp
  414077:	and    cl,BYTE PTR [eax]
  414079:	enter  0x415,0x1
  41407d:	add    BYTE PTR [eax-0x3d07f77d],al
  414083:	test   BYTE PTR [ecx],al
  414085:	add    DWORD PTR [edx],eax
  414087:	or     dl,BYTE PTR [eax]
  414089:	push   edx
  41408a:	add    BYTE PTR [eax+edx*1+0x64c704c0],0x28
  414092:	and    DWORD PTR [edx+0x74291213],esp
  414098:	nop
  414099:	inc    esi
  41409a:	inc    edx
  41409b:	inc    esp
  41409c:	add    ah,BYTE PTR [eax+0x4c84e01]
  4140a2:	inc    edx
  4140a3:	add    al,0x41
  4140a5:	xor    BYTE PTR [eax],ah
  4140a7:	add    al,BYTE PTR [edx+edx*2]
  4140aa:	pop    DWORD PTR [eax]
  4140ac:	xchg   ecx,eax
  4140ad:	adc    DWORD PTR [ebx+0x1],edx
  4140b0:	push   es
  4140b1:	add    BYTE PTR [ecx+eax*4],0x4
  4140b5:	xor    DWORD PTR [eax+0x1],edx
  4140b8:	xchg   DWORD PTR [eax],eax
  4140ba:	or     eax,0x8a148420
  4140bf:	ins    DWORD PTR es:[edi],dx
  4140c0:	add    al,0x0
  4140c2:	add    BYTE PTR [edx+ecx*1],0x8
  4140c6:	mov    BYTE PTR [eax],al
  4140c8:	test   BYTE PTR [eax],al
  4140ca:	add    BYTE PTR [eax],al
  4140cc:	cwde   
  4140cd:	shl    DWORD PTR [eax],0x5
  4140d0:	or     BYTE PTR [ecx],al
  4140d2:	fiadd  DWORD PTR [esi]
  4140d4:	adc    BYTE PTR [ecx],al
  4140d6:	add    al,BYTE PTR [eax-0x3f]
  4140d9:	add    al,0x20
  4140db:	retf   
  4140dc:	add    al,BYTE PTR [eax]
  4140de:	cwde   
  4140df:	add    eax,0x3104f52
  4140e4:	add    BYTE PTR [eax+ebx*8+0x40128810],cl
  4140eb:	dec    edx
  4140ec:	xor    BYTE PTR [ecx],ah
  4140ee:	and    BYTE PTR [eax],al
  4140f0:	push   eax
  4140f1:	test   BYTE PTR [ecx],al
  4140f3:	mov    al,ds:0xb0aa6a02
  4140f8:	add    al,0x14
  4140fa:	add    al,0x19
  4140fc:	mov    al,ds:0x8082b082
  414101:	adc    BYTE PTR [ecx],0xe1
  414104:	mov    ah,0x38
  414106:	and    al,0x6
  414108:	sub    BYTE PTR [eax],0x0
  41410b:	dec    esp
  41410c:	adc    al,BYTE PTR [edx+eax*4+0x52]
  414110:	sub    al,0x4c
  414112:	or     cl,BYTE PTR [edx]
  414114:	add    al,0x44
  414116:	nop
  414117:	and    eax,0x64100200
  41411c:	or     dh,0xc
  41411f:	or     al,0x0
  414121:	or     al,0xb0
  414123:	add    BYTE PTR [eax],al
  414125:	data16 sbb al,0x17
  414128:	sbb    al,0x58
  41412a:	add    BYTE PTR [eax],ah
  41412c:	inc    eax
  41412d:	push   0x402a4400
  414132:	and    BYTE PTR [edx],dl
  414134:	add    ah,ah
  414136:	jno    0x4140bb
  414138:	adc    BYTE PTR [edx+0x0],cl
  41413b:	les    esp,FWORD PTR [ecx+0x44035711]
  414141:	inc    eax
  414142:	inc    edx
  414143:	and    BYTE PTR [edx],0x7
  414146:	adc    BYTE PTR [ecx],dl
  414148:	add    DWORD PTR [eax+0x3d],eax
  41414b:	enter  0x2250,0x46
  41414f:	inc    eax
  414150:	adc    dl,BYTE PTR [edx]
  414152:	sub    cl,cl
  414154:	sbb    BYTE PTR [ebx],al
  414156:	in     eax,dx
  414157:	iret   
  414158:	push   esi
  414159:	xor    BYTE PTR [edx+esi*1],al
  41415c:	or     DWORD PTR [eax+eiz*1],eax
  41415f:	add    al,0x46
  414161:	inc    eax
  414162:	jo     0x414187
  414164:	mov    BYTE PTR [ecx+eiz*4-0x80],dh
  414168:	add    al,0x0
  41416a:	inc    esi
  41416b:	sbb    DWORD PTR [eax+0x1cca0081],edx
  414171:	add    BYTE PTR [eax],al
  414173:	ss inc esp
  414175:	add    BYTE PTR [eax+0x4102008a],cl
  41417b:	call   0x8230:0x21005802
  414182:	add    BYTE PTR [eax],ah
  414184:	add    esi,DWORD PTR [eax+eax*8]
  414187:	or     al,0x17
  414189:	out    0x90,eax
  41418b:	xchg   edx,eax
  41418c:	inc    eax
  41418d:	or     BYTE PTR [edx],cl
  41418f:	add    BYTE PTR [edx],al
  414191:	inc    eax
  414192:	add    al,0xe
  414194:	add    DWORD PTR [edx],eax
  414196:	or     BYTE PTR [ecx+0x590a412],al
  41419c:	inc    ecx
  41419d:	xor    ah,BYTE PTR [ecx]
  41419f:	push   eax
  4141a0:	add    DWORD PTR [eax+0x24],eax
  4141a3:	nop
  4141a4:	sub    ah,BYTE PTR [ebp+0x4011a0]
  4141aa:	adc    al,0xb
  4141ac:	and    DWORD PTR [edx],ecx
  4141ae:	sbb    cl,BYTE PTR [eax]
  4141b0:	add    DWORD PTR [ecx],eax
  4141b2:	sub    BYTE PTR [edi],0xae
  4141b5:	js     0x4141cb
  4141b7:	bound  esp,QWORD PTR [eax+eax*4+0x8]
  4141bb:	add    BYTE PTR [edx+0x20],al
  4141be:	loopne 0x4141d2
  4141c0:	pushf  
  4141c1:	or     dl,BYTE PTR [eax-0x7edb55b8]
  4141c7:	add    al,0x43
  4141c9:	and    al,0x21
  4141cb:	add    BYTE PTR [eax],al
  4141cd:	lds    esp,FWORD PTR [ebx]
  4141cf:	or     al,BYTE PTR [ebx+0xd154305]
  4141d5:	adc    BYTE PTR [esp+esi*4-0x70],dh
  4141d9:	xchg   ebp,eax
  4141da:	or     DWORD PTR [eax],eax
  4141dc:	add    al,0x91
  4141de:	and    eax,0x90810105
  4141e3:	inc    edi
  4141e4:	inc    eax
  4141e5:	adc    DWORD PTR [ebp+0x4042100],eax
  4141eb:	and    BYTE PTR [eax],al
  4141ed:	adc    ch,BYTE PTR [eax+eax*1-0x6fefde80]
  4141f4:	add    BYTE PTR [ecx],al
  4141f6:	cmp    cl,BYTE PTR [esi]
  4141f8:	es and eax,0xb58f01c3
  4141fe:	and    edx,DWORD PTR [edx+eiz*1+0x40]
  414202:	push   ss
  414203:	adc    al,BYTE PTR [eax+0x2]
  414206:	push   eax
  414207:	and    dl,BYTE PTR [eax+0x8050c3]
  41420d:	add    al,0xec
  41420f:	or     al,0x20
  414211:	add    DWORD PTR [eax],ebx
  414213:	inc    esp
  414214:	mov    eax,0x40a8a209
  414219:	add    al,al
  41421b:	adc    al,0xc4
  41421d:	and    dh,ah
  41421f:	nop
  414220:	xchg   ecx,eax
  414221:	add    BYTE PTR [edx],al
  414223:	add    BYTE PTR [edx+ecx*2],ah
  414226:	fwait
  414227:	add    eax,0xbbd00020
  41422c:	or     BYTE PTR [eax],0x50
  41422f:	sbb    al,0x0
  414231:	and    BYTE PTR [eax],cl
  414233:	and    al,0x6
  414235:	les    esp,FWORD PTR [ecx-0x5f8fbfbc]
  41423b:	add    BYTE PTR [eax],cl
  41423d:	push   es
  41423e:	inc    edx
  41423f:	adc    DWORD PTR [eax+0x6200010],eax
  414245:	add    al,0x3
  414247:	pusha  
  414248:	adc    cl,al
  41424a:	sbb    BYTE PTR [eax+0x20],ah
  41424d:	and    BYTE PTR [eax],al
  41424f:	call   0x796274
  414254:	or     eax,DWORD PTR [ebx]
  414256:	add    BYTE PTR [edx],al
  414258:	or     BYTE PTR [eax+ecx*1],ah
  41425b:	dec    edx
  41425c:	add    BYTE PTR [eax],al
  41425e:	and    al,BYTE PTR [eax+0x240604]
  414264:	inc    edx
  414265:	add    BYTE PTR [eax],0x90
  414268:	add    al,BYTE PTR [edx+esi*1+0x7d400048]
  41426f:	add    BYTE PTR [edx+0x0],ah
  414272:	popa   
  414273:	call   0x50e8:0x4154d044
  41427a:	inc    eax
  41427b:	dec    eax
  41427c:	add    eax,0x80ad0698
  414281:	add    BYTE PTR [eax+0x10e7a008],0x4
  414288:	inc    eax
  414289:	add    al,0x81
  41428b:	adc    BYTE PTR [edx+ebx*4+0x3a52c42],0x3b
  414293:	add    BYTE PTR [eax+eax*1],al
  414296:	lods   al,BYTE PTR ds:[esi]
  414297:	push   eax
  414298:	pop    ss
  414299:	push   edx
  41429a:	adc    BYTE PTR [edx+0x0],al
  41429d:	or     BYTE PTR [eax],ah
  41429f:	and    BYTE PTR [esi],cl
  4142a1:	xor    DWORD PTR [esi],eax
  4142a3:	sahf   
  4142a4:	nop
  4142a5:	shr    DWORD PTR [eax],1
  4142a7:	push   ecx
  4142a8:	sub    al,0x13
  4142aa:	xchg   esi,eax
  4142ab:	add    al,0x0
  4142ad:	sub    BYTE PTR [eax],cl
  4142af:	push   edx
  4142b0:	add    eax,0x1042016a
  4142b5:	sub    BYTE PTR [eax+0x18125010],dl
  4142bb:	add    edx,DWORD PTR [eax+0x11]
  4142be:	or     al,0x82
  4142c0:	or     BYTE PTR [eax+0x23080015],dh
  4142c6:	pusha  
  4142c7:	add    BYTE PTR [eax+0x20206a09],al
  4142cd:	rol    BYTE PTR [eax+ecx*1],0x22
  4142d1:	add    dl,al
  4142d3:	add    BYTE PTR [eax+0x6088200],al
  4142d9:	and    BYTE PTR [esi],al
  4142db:	ret    0x0
  4142de:	and    BYTE PTR [edx],al
  4142e0:	ret    0xd608
  4142e3:	xor    BYTE PTR [eax],0x10
  4142e6:	bound  esp,QWORD PTR [eax]
  4142e8:	adc    BYTE PTR [eax+eax*1-0x70],dl
  4142ec:	add    al,0x10
  4142ee:	adc    al,0x2d
  4142f0:	add    edx,DWORD PTR [eax-0x753c0000]
  4142f6:	and    eax,eax
  4142f8:	add    al,0x1d
  4142fa:	dec    eax
  4142fb:	add    DWORD PTR [eax-0x7f3cb1ab],edx
  414301:	inc    ebp
  414302:	adc    esp,DWORD PTR [eax+0x0]
  414305:	and    BYTE PTR [eax],al
  414307:	inc    ebp
  414308:	dec    eax
  414309:	push   edx
  41430a:	add    DWORD PTR [eax-0x3bf5ab80],edx
  414310:	pop    ss
  414311:	call   0x44a8316
  414316:	inc    eax
  414317:	add    BYTE PTR [eax+0x400019],dl
  41431d:	int    0x80
  41431f:	adc    BYTE PTR [edx],al
  414321:	ret    
  414322:	jne    0x4142e6
  414324:	xor    al,0x71
  414326:	cmp    BYTE PTR gs:[eax],ah
  414329:	add    BYTE PTR [esi],al
  41432b:	xchg   ecx,eax
  41432c:	jno    0x41433e
  41432e:	mov    BYTE PTR [edi+0x42800a40],al
  414334:	and    al,0x95
  414336:	adc    DWORD PTR [edx-0x1934559c],eax
  41433c:	add    al,0x40
  41433e:	and    BYTE PTR [eax+edx*4],ah
  414341:	or     al,0x0
  414343:	add    al,0x20
  414346:	and    BYTE PTR [ebx+0x10120200],dh
  41434c:	nop
  41434d:	add    BYTE PTR [edx-0x27f47bcf],al
  414353:	add    BYTE PTR [edx],dl
  414355:	mov    ds:0x20802907,al
  41435a:	add    ah,BYTE PTR [ecx+eax*8+0x2810050]
  414361:	adc    BYTE PTR [edi],al
  414363:	inc    eax
  414364:	sbb    BYTE PTR [edx+0x38],al
  414367:	cwde   
  414368:	adc    BYTE PTR [edx],cl
  41436a:	adc    BYTE PTR ds:0x90240428,al
  414370:	add    al,BYTE PTR [edx]
  414372:	cmp    DWORD PTR [ecx],edx
  414374:	or     al,0x1d
  414376:	pop    esp
  414377:	mov    eax,0x26180804
  41437c:	ret    0x118c
  41437f:	add    BYTE PTR [eax],dl
  414381:	adc    BYTE PTR [eax+0x62],al
  414384:	adc    BYTE PTR [ecx-0x5c],al
  414387:	add    BYTE PTR [eax],cl
  414389:	pop    ss
  41438a:	dec    edx
  41438b:	inc    eax
  41438c:	and    BYTE PTR [ebx],ah
  41438e:	add    BYTE PTR [eax+0x240a8],al
  414394:	and    DWORD PTR [ecx],eax
  414396:	shl    BYTE PTR [ecx+0x43],0x3
  41439a:	test   al,0x0
  41439c:	add    BYTE PTR [eax],al
  41439e:	mov    WORD PTR [eax-0x7f],es
  4143a1:	and    al,0x20
  4143a3:	xor    DWORD PTR [ebx],0x0
  4143a6:	add    BYTE PTR [edx],dh
  4143a8:	push   esp
  4143a9:	add    BYTE PTR [eax],bl
  4143ab:	add    al,0x10
  4143ad:	xor    BYTE PTR [eax],ah
  4143af:	and    al,al
  4143b1:	inc    eax
  4143b2:	push   0x41004454
  4143b7:	popa   
  4143b8:	add    al,cl
  4143ba:	adc    BYTE PTR [eax],0x40
  4143bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143be:	nop
  4143bf:	or     al,0x82
  4143c1:	or     al,0xd1
  4143c3:	add    al,BYTE PTR [eax]
  4143c5:	add    BYTE PTR [eax+0x1],dl
  4143c8:	inc    eax
  4143c9:	add    BYTE PTR [eax+0xc04838],al
  4143cf:	push   esp
  4143d0:	mov    al,ds:0x9000000
  4143d5:	adc    eax,0x209a0142
  4143da:	xchg   esp,eax
  4143db:	ror    BYTE PTR [edx],cl
  4143dd:	add    al,0x8c
  4143df:	mov    es:0x8068890,eax
  4143e5:	or     eax,edx
  4143e7:	inc    eax
  4143e8:	and    eax,0x8810419c
  4143ed:	push   ebp
  4143ee:	adc    DWORD PTR [edx+0xa54e5a1],ebx
  4143f4:	add    eax,0xd1830002
  4143f9:	adc    al,0x8
  4143fb:	add    DWORD PTR [ecx+eax*4],eax
  4143fe:	dec    eax
  4143ff:	xor    al,ch
  414401:	pusha  
  414402:	sbb    BYTE PTR [eax],bh
  414404:	int3   
  414405:	test   al,0x42
  414407:	and    BYTE PTR [ecx+0xc],cl
  41440a:	adc    eax,0xcc480c0
  41440f:	mov    eax,ds:0x8200005
  414414:	and    BYTE PTR [ebp+0x40430c10],cl
  41441a:	adc    al,BYTE PTR [eax]
  41441c:	test   BYTE PTR cs:[esi],cl
  41441f:	sbb    BYTE PTR [eax],dh
  414421:	cmp    ecx,DWORD PTR [esi+0x3010200]
  414427:	test   BYTE PTR cs:[eax],dh
  41442a:	add    BYTE PTR [edx],ah
  41442c:	add    al,0x0
  41442e:	add    DWORD PTR [eax],esi
  414430:	and    esp,DWORD PTR [eax+0x740010]
  414436:	aam    0x0
  414438:	xor    BYTE PTR [esi+eax*4+0x0],0x11
  41443d:	sub    BYTE PTR [ebx],bl
  41443f:	popa   
  414440:	add    BYTE PTR [esp+eax*1+0x2],dh
  414444:	add    al,BYTE PTR [ecx]
  414446:	add    al,BYTE PTR [eax+eax*4]
  414449:	rol    DWORD PTR [eax],0x6
  41444c:	push   eax
  41444d:	sbb    al,BYTE PTR [eax+eax*1]
  414450:	add    dl,BYTE PTR [esi+0x1]
  414453:	mov    dh,0x59
  414455:	add    dl,BYTE PTR [ecx+eiz*1]
  414458:	push   eax
  414459:	add    BYTE PTR [eax+0x19],al
  41445c:	cmp    BYTE PTR [edx],dl
  41445e:	mov    al,ds:0x282280ba
  414463:	sub    BYTE PTR [eax],cl
  414465:	dec    eax
  414466:	xchg   BYTE PTR [eax],ah
  414468:	dec    esp
  414469:	and    BYTE PTR [eax],dl
  41446b:	sub    eax,DWORD PTR [ecx]
  41446d:	add    dl,BYTE PTR [ecx+0x4819e8a0]
  414473:	dec    ebp
  414474:	sbb    BYTE PTR [eax+eax*8],al
  414477:	sbb    BYTE PTR [eax+esi*2+0x34],ah
  41447b:	sbb    DWORD PTR [eax-0x7a],ecx
  41447e:	adc    eax,0xc0014c2d
  414483:	daa    
  414484:	mov    WORD PTR [eax+0x5],es
  414487:	add    al,0x82
  414489:	add    DWORD PTR [eax+eax*1],eax
  41448c:	push   0xa020060e
  414491:	sub    ah,bl
  414493:	bound  eax,QWORD PTR [ecx+0xcd8008]
  414499:	int3   
  41449a:	mov    al,ds:0x32855212
  41449f:	pop    esp
  4144a0:	add    cl,BYTE PTR [ecx]
  4144a2:	rcr    DWORD PTR [eax],1
  4144a4:	add    al,0x0
  4144a6:	enter  0x1068,0xe5
  4144aa:	nop
  4144ab:	add    BYTE PTR [eax+0x2c82537c],ch
  4144b1:	xor    eax,0x30310091
  4144b6:	or     al,0xe
  4144b8:	mov    DWORD PTR ds:0x130001c,eax
  4144be:	push   cs
  4144bf:	add    BYTE PTR [ebx+0xb],0x0
  4144c3:	push   edx
  4144c4:	sub    DWORD PTR [eax],edx
  4144c6:	sbb    BYTE PTR ss:[edx],al
  4144c9:	add    eax,eax
  4144cb:	rol    BYTE PTR [ecx+0x24],0xe3
  4144cf:	out    dx,al
  4144d0:	or     BYTE PTR [edx+0x4604290],cl
  4144d6:	and    al,0x44
  4144d8:	adc    BYTE PTR [eax],0x4
  4144db:	mov    DWORD PTR [ebx],eax
  4144dd:	add    al,0xc4
  4144df:	and    BYTE PTR [ebx],cl
  4144e1:	rol    BYTE PTR [esp+edx*1],0xd0
  4144e5:	inc    eax
  4144e6:	add    dl,BYTE PTR [eax]
  4144e8:	add    BYTE PTR [eax],dl
  4144ea:	xchg   edi,eax
  4144eb:	adc    eax,DWORD PTR [edx]
  4144ed:	add    BYTE PTR [eax+0x21],al
  4144f0:	add    BYTE PTR [ebp+0x59],0x0
  4144f4:	inc    eax
  4144f5:	inc    eax
  4144f6:	xchg   DWORD PTR [edx],esp
  4144f8:	adc    BYTE PTR [eax-0x37ffaf65],al
  4144fe:	add    BYTE PTR [eax-0x59fef758],ah
  414504:	add    ah,bh
  414506:	sub    BYTE PTR es:[edx],0x80
  41450a:	jo     0x414525
  41450c:	adc    al,0x10
  41450e:	jns    0x414530
  414510:	adc    dl,al
  414512:	int    0x0
  414514:	adc    al,0x3
  414516:	and    BYTE PTR ds:0x618188f0,ah
  41451c:	add    dl,BYTE PTR [eax]
  41451e:	sbb    BYTE PTR [eax-0x3bb7fff0],al
  414524:	test   al,0x2
  414526:	sbb    eax,0x12f1044
  41452b:	or     BYTE PTR ds:0x104b0bc0,dl
  414531:	add    BYTE PTR [ebx],cl
  414533:	adc    al,BYTE PTR [eax+0x23]
  414536:	shr    BYTE PTR [ebx+0x21204200],0x50
  41453d:	sbb    bl,BYTE PTR [ecx]
  41453f:	add    al,0x20
  414541:	add    BYTE PTR [eax+ebx*1+0x302048a4],dl
  414548:	add    al,0x20
  41454a:	or     DWORD PTR [eax+0x800b100],esp
  414550:	add    BYTE PTR [edx],ah
  414552:	and    BYTE PTR [ecx],al
  414554:	add    DWORD PTR [ebp+0x109085a0],ebp
  41455a:	push   eax
  41455b:	add    al,0xc6
  41455d:	add    al,BYTE PTR [eax+0x84110]
  414563:	push   esp
  414564:	or     BYTE PTR [eax+eax*4-0x7d],0xf
  414569:	test   BYTE PTR [esi],al
  41456b:	jl     0x4144ed
  41456d:	xor    BYTE PTR [ecx+0x2930c],al
  414573:	add    al,0xac
  414575:	adc    DWORD PTR [eax+0x49911000],0x1808b0a8
  41457f:	inc    eax
  414580:	add    BYTE PTR [edx],dl
  414582:	test   BYTE PTR [ebp+0x46100120],al
  414588:	or     BYTE PTR [ecx],cl
  41458a:	adc    cl,BYTE PTR [ebx+0x28538895]
  414590:	xor    BYTE PTR [edx],al
  414592:	mov    bl,0x2
  414594:	enter  0x4004,0x5c
  414598:	sub    DWORD PTR [eax+0x26844738],ecx
  41459e:	add    BYTE PTR ds:0x32008000,al
  4145a4:	add    BYTE PTR [eax],0x0
  4145a7:	adc    BYTE PTR [ecx],dh
  4145a9:	nop
  4145aa:	xor    DWORD PTR [eax+ecx*1+0x1],ebp
  4145ae:	loopne 0x41459c
  4145b0:	sub    al,0x4
  4145b2:	add    BYTE PTR [eax-0x70],dl
  4145b5:	adc    BYTE PTR [ecx],dl
  4145b7:	add    BYTE PTR [ecx],al
  4145b9:	or     BYTE PTR [eax+eax*2],al
  4145bc:	add    BYTE PTR [eax+eax*4+0x8210491],bl
  4145c3:	rol    BYTE PTR [eax],1
  4145c5:	and    eax,edx
  4145c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c8:	test   BYTE PTR [eax+0x0],al
  4145cb:	mov    BYTE PTR [eax-0x70],al
  4145ce:	add    BYTE PTR [eax+0x0],al
  4145d1:	and    cl,BYTE PTR [eax-0x3d]
  4145d4:	inc    eax
  4145d5:	add    al,0xc
  4145d7:	add    DWORD PTR [eax],0x40
  4145da:	inc    eax
  4145db:	sub    al,ah
  4145dd:	rol    BYTE PTR [ecx],0x50
  4145e0:	es dec esp
  4145e2:	enter  0xd88c,0x6
  4145e6:	or     BYTE PTR [eax+0x0],dh
  4145e9:	add    BYTE PTR [eax],al
  4145eb:	or     DWORD PTR [eax],eax
  4145ed:	adc    al,0xc4
  4145ef:	(bad)  
  4145f0:	and    ah,BYTE PTR [edx+0x10]
  4145f3:	cwde   
  4145f4:	sbb    BYTE PTR [esi],al
  4145f6:	xor    BYTE PTR [eax-0x7996bf1e],ah
  4145fc:	test   DWORD PTR [eax+0x60],eax
  4145ff:	add    al,cl
  414601:	lock inc ecx
  414603:	add    al,BYTE PTR [edx+0x20]
  414606:	and    al,BYTE PTR [eax+0x20410002]
  41460c:	xor    al,BYTE PTR [edx+0x78502243]
  414612:	inc    ecx
  414613:	add    BYTE PTR [eax],al
  414615:	adc    al,0x80
  414617:	adc    BYTE PTR [edx],ah
  414619:	add    BYTE PTR [ecx-0x65],al
  41461c:	sbb    BYTE PTR [edx+0x9],ch
  41461f:	xchg   BYTE PTR [ebp+0x5828101],ah
  414625:	test   BYTE PTR [eax-0x7e],dl
  414628:	mov    ds:0x48000131,al
  41462d:	add    DWORD PTR [eax],0x20
  414630:	dec    esp
  414631:	pusha  
  414632:	mov    ds:0x1831210a,eax
  414637:	sub    al,0x2
  414639:	add    BYTE PTR [eax],al
  41463b:	sub    DWORD PTR [ecx],eax
  41463d:	cmp    DWORD PTR [eax+esi*1],ebx
  414640:	inc    ebp
  414641:	inc    ecx
  414642:	jae    0x4146b9
  414644:	xchg   ecx,eax
  414645:	sbb    al,0x2
  414647:	nop
  414648:	push   eax
  414649:	and    BYTE PTR [ecx+0x28],al
  41464c:	or     eax,0x84881260
  414651:	or     al,BYTE PTR [eax+0x58203000]
  414657:	push   es
  414658:	xor    BYTE PTR [ebp+0x40],ch
  41465b:	add    BYTE PTR [eax+0x66],al
  41465e:	and    dl,cl
  414660:	and    al,0x40
  414662:	add    BYTE PTR [ebx],ah
  414664:	add    BYTE PTR [eax-0x77e36760],al
  41466a:	cwde   
  41466b:	test   al,0x10
  41466d:	inc    esp
  41466e:	add    al,BYTE PTR [ecx+0x28]
  414671:	mov    ah,0x14
  414673:	xor    cl,BYTE PTR [esi]
  414675:	aad    0xe4
  414677:	add    al,0xf0
  414679:	push   0x2
  41467b:	inc    ecx
  41467c:	push   eax
  41467d:	mov    ds:0x928203d,al
  414682:	or     BYTE PTR [esp+ebp*1+0x11],al
  414686:	inc    edx
  414687:	or     al,0x5
  414689:	add    DWORD PTR [eax],esi
  41468b:	add    DWORD PTR [esi-0x2f],0x3315d90
  414692:	xchg   edx,eax
  414693:	test   BYTE PTR ds:0x95e2091,dl
  414699:	mov    DWORD PTR [edx],0xb580440
  41469f:	or     BYTE PTR [ecx],ah
  4146a1:	lea    ecx,[eax]
  4146a3:	add    al,al
  4146a5:	and    BYTE PTR [edi],al
  4146a7:	or     ebp,eax
  4146a9:	add    DWORD PTR [ecx],0x1245847
  4146af:	adc    al,0x90
  4146b1:	add    eax,0xb02082
  4146b6:	and    BYTE PTR [ecx+0x41],al
  4146b9:	inc    esi
  4146ba:	and    BYTE PTR [eax],al
  4146bc:	xchg   esi,eax
  4146bd:	and    al,0x15
  4146bf:	and    ah,BYTE PTR [edx+0x1]
  4146c2:	adc    eax,DWORD PTR [eax+0x1]
  4146c5:	and    BYTE PTR [eax+0x4c018280],ah
  4146cb:	pusha  
  4146cc:	mov    ds:0x25040a01,al
  4146d1:	pusha  
  4146d2:	adc    BYTE PTR [edx],al
  4146d4:	add    BYTE PTR [edi+0x414c0054],al
  4146da:	jno    0x4146a1
  4146dc:	add    BYTE PTR [eax],al
  4146de:	inc    edx
  4146df:	add    BYTE PTR [ecx+0x141082],0x5
  4146e6:	add    BYTE PTR [ecx],al
  4146e8:	add    BYTE PTR [edx+eax*4],cl
  4146eb:	xchg   ebx,eax
  4146ec:	push   cs
  4146ed:	adc    DWORD PTR [eax],0x65042c48
  4146f3:	adc    BYTE PTR [eax],al
  4146f5:	adc    BYTE PTR [eax],al
  4146f7:	pusha  
  4146f8:	add    BYTE PTR [eax+eax*8],al
  4146fb:	add    BYTE PTR [ecx-0x30],al
  4146fe:	inc    eax
  4146ff:	add    BYTE PTR [eax],al
  414701:	adc    DWORD PTR [eax+eiz*4],eax
  414704:	arpl   WORD PTR [eax+0x5],sp
  414707:	and    BYTE PTR [eax],cl
  414709:	xor    BYTE PTR [edx],ah
  41470b:	je     0x4146dd
  41470d:	test   BYTE PTR [edx],dl
  41470f:	loopne 0x4146d7
  414711:	dec    eax
  414712:	push   ecx
  414713:	inc    edx
  414714:	rcl    DWORD PTR [eax-0x73ffd2f8],0x2
  41471b:	daa    
  41471c:	add    eax,0x71080084
  414721:	adc    BYTE PTR [ecx+0x58],cl
  414724:	add    DWORD PTR [eax],0x28c72521
  41472a:	sbb    dh,BYTE PTR [esp+eax*1]
  41472d:	add    BYTE PTR [ecx+0x50],al
  414730:	add    BYTE PTR [eax],cl
  414732:	or     BYTE PTR [ecx+eax*2],0x61
  414736:	add    BYTE PTR [ecx],al
  414738:	adc    BYTE PTR [eax],dl
  41473a:	mov    BYTE PTR [ecx+edx*2],al
  41473d:	les    esp,FWORD PTR [eax+eax*1]
  414740:	mov    al,ds:0x1302d8
  414745:	sbb    BYTE PTR [ebp+0xc],0x0
  414749:	adc    BYTE PTR [eax],al
  41474b:	add    BYTE PTR [eax],ah
  41474d:	inc    esp
  41474e:	adc    BYTE PTR [eax],al
  414750:	add    al,0x80
  414752:	pusha  
  414753:	add    BYTE PTR [ecx-0x7e],cl
  414756:	add    BYTE PTR [eax],al
  414758:	add    BYTE PTR [ebx+eax*2],al
  41475b:	dec    esp
  41475c:	add    BYTE PTR [esi+0x0],al
  41475f:	add    BYTE PTR [eax],dl
  414761:	and    BYTE PTR [eax],al
  414763:	add    BYTE PTR [ebp+0x40b2],dh
  414769:	add    DWORD PTR [edx],ebp
  41476b:	add    BYTE PTR [eax],cl
  41476d:	dec    esp
  41476e:	add    BYTE PTR [ecx+eiz*4],al
  414771:	inc    eax
  414772:	inc    eax
  414773:	add    BYTE PTR [eax],al
  414775:	add    DWORD PTR [eax+eax*1],esp
  414778:	add    al,0x83
  41477a:	push   esi
  41477b:	inc    ecx
  41477c:	add    al,BYTE PTR [eax]
  41477e:	les    edx,FWORD PTR [eax]
  414780:	inc    ecx
  414781:	or     dh,BYTE PTR [eax+0x4ae40000]
  414787:	add    al,0x2
  414789:	add    DWORD PTR [edx],esp
  41478b:	add    BYTE PTR [eax],al
  41478d:	and    BYTE PTR [ecx],0x84
  414790:	and    DWORD PTR [eax+eax*1],0x202
  414797:	or     BYTE PTR [eax+0x70],al
  41479a:	adc    BYTE PTR [eax],cl
  41479c:	rol    BYTE PTR [ecx-0x7e],0xc0
  4147a0:	cmp    esp,DWORD PTR [ecx]
  4147a2:	inc    esi
  4147a3:	pop    es
  4147a4:	add    DWORD PTR [edx],edx
  4147a6:	add    DWORD PTR [ebp+0x1],ecx
  4147a9:	add    BYTE PTR [eax+0xa00e320],al
  4147af:	add    BYTE PTR [eax],al
  4147b1:	inc    edx
  4147b2:	test   al,0x15
  4147b4:	add    al,0x9
  4147b6:	add    BYTE PTR [eax+0x10],dh
  4147b9:	add    BYTE PTR [esi+0x6f],ah
  4147bc:	stos   DWORD PTR es:[edi],eax
  4147bd:	add    DWORD PTR [eax],eax
  4147bf:	and    DWORD PTR [ecx],edx
  4147c1:	or     eax,0x80404508
  4147c6:	add    BYTE PTR [eax],ah
  4147c8:	add    al,0x0
  4147ca:	mov    eax,ds:0x238002
  4147cf:	add    BYTE PTR [ecx+esi*2+0x0],al
  4147d3:	outs   dx,BYTE PTR ds:[esi]
  4147d4:	sbb    BYTE PTR [eax],al
  4147d6:	add    al,0x80
  4147d8:	dec    eax
  4147d9:	add    BYTE PTR [eax],al
  4147db:	add    dh,BYTE PTR [eax]
  4147dd:	add    BYTE PTR [edx],al
  4147df:	inc    edx
  4147e0:	inc    esp
  4147e1:	adc    BYTE PTR [edx+0x50],al
  4147e4:	loopne 0x4147e6
  4147e6:	push   ecx
  4147e7:	xchg   esp,eax
  4147e8:	add    DWORD PTR [eax+0x100c4019],ecx
  4147ee:	or     DWORD PTR [eax],0x80604
  4147f4:	dec    eax
  4147f5:	sbb    BYTE PTR [ecx],al
  4147f7:	dec    eax
  4147f8:	add    BYTE PTR [eax],al
  4147fa:	push   eax
  4147fb:	push   es
  4147fc:	sub    al,0x3
  4147fe:	add    DWORD PTR ds:0x8028c0,ecx
  414804:	je     0x41480e
  414806:	add    BYTE PTR [eax+0x0],al
  414809:	rol    BYTE PTR [eax],0x40
  41480c:	adc    BYTE PTR [ecx+0x0],al
  41480f:	lea    eax,[eax]
  414811:	add    DWORD PTR [eax+0xa],eax
  414814:	and    BYTE PTR [eax],al
  414816:	add    BYTE PTR [eax],al
  414818:	or     BYTE PTR [esi],0x20
  41481b:	inc    eax
  41481c:	add    al,0x2
  41481e:	mov    al,BYTE PTR [eax]
  414820:	add    al,0x55
  414822:	and    BYTE PTR [ecx],0x0
  414825:	mov    dl,0x0
  414827:	or     dl,al
  414829:	mov    BYTE PTR [ecx],al
  41482b:	xchg   edx,eax
  41482c:	adc    al,BYTE PTR [eax-0x2e]
  41482f:	nop
  414830:	add    al,0xd
  414832:	add    DWORD PTR [eax+0x400041a],0x20a0e099
  41483c:	add    BYTE PTR [eax],cl
  41483e:	add    BYTE PTR [eax+0x110086a4],al
  414844:	and    cl,0x5
  414847:	add    BYTE PTR [edx+0x38904202],al
  41484d:	add    BYTE PTR [eax],al
  41484f:	push   ebp
  414850:	add    BYTE PTR [eax],cl
  414852:	dec    ecx
  414853:	add    bh,al
  414855:	add    BYTE PTR [eax+eax*1],al
  414858:	mov    al,BYTE PTR [edx]
  41485a:	add    BYTE PTR [eax+eax*2],al
  41485d:	inc    ebp
  41485e:	mov    al,0x14
  414860:	inc    eax
  414861:	dec    edx
  414862:	or     al,0x4
  414864:	adc    al,0x16
  414866:	adc    eax,0xa030100
  41486b:	add    BYTE PTR [ecx],ah
  41486d:	or     BYTE PTR [eax+0x20],cl
  414870:	add    DWORD PTR [eax+0x48],eax
  414873:	and    al,0x1
  414875:	adc    cl,BYTE PTR [eax+0x402a32]
  41487b:	add    DWORD PTR [eax],eax
  41487d:	or     al,dl
  41487f:	add    BYTE PTR [eax+0x1],al
  414882:	add    BYTE PTR [eax],ah
  414884:	fild   WORD PTR [edx]
  414886:	add    ebp,DWORD PTR [eax+0x49]
  414889:	adc    BYTE PTR [ebx+0x24001000],al
  41488f:	add    BYTE PTR [eax],0x8
  414892:	add    eax,0x1a305d4c
  414897:	and    al,ah
  414899:	and    eax,0x41226000
  41489e:	sub    BYTE PTR [eax+eiz*1],al
  4148a1:	add    al,0x20
  4148a3:	add    BYTE PTR [ecx-0x7cffea42],cl
  4148a9:	add    BYTE PTR [eax+0x8054065],al
  4148af:	add    al,BYTE PTR [eax]
  4148b1:	or     al,0x0
  4148b3:	adc    BYTE PTR ds:0x8561a56a,dh
  4148b9:	rol    BYTE PTR [eax],0x80
  4148bc:	hlt    
  4148bd:	and    DWORD PTR [eax],ecx
  4148bf:	sbb    al,BYTE PTR [edx+eax*1]
  4148c2:	add    ah,al
  4148c4:	add    BYTE PTR [ebx],al
  4148c6:	add    BYTE PTR [eax],al
  4148c8:	dec    ebp
  4148c9:	mov    al,0x89
  4148cb:	in     eax,0x8
  4148cd:	bound  eax,QWORD PTR [esp+eiz*4+0x2d80041]
  4148d4:	xor    BYTE PTR [edx],bl
  4148d6:	and    DWORD PTR [esp+eax*1],edx
  4148d9:	add    DWORD PTR [eax],0x30106
  4148df:	pop    eax
  4148e0:	or     BYTE PTR [edx+0x48],0x94
  4148e7:	add    ah,BYTE PTR [esp+eax*1+0x30]
  4148eb:	add    BYTE PTR [eax+0x0],al
  4148ee:	sbb    BYTE PTR [eax-0x20],al
  4148f1:	adc    BYTE PTR [eax],al
  4148f3:	add    BYTE PTR [eax+ebx*1+0x613],dl
  4148fa:	add    BYTE PTR [eax+0x12000a09],dl
  414900:	add    al,0x2
  414902:	add    BYTE PTR [edx],al
  414904:	or     BYTE PTR [eax+0x27486b00],al
  41490a:	push   0x409b02
  41490f:	adc    al,BYTE PTR [eax]
  414911:	add    BYTE PTR [eax],0x6
  414914:	add    DWORD PTR [eax],eax
  414916:	inc    eax
  414917:	in     al,0x0
  414919:	add    BYTE PTR [esi+ebp*1],cl
  41491c:	add    BYTE PTR [edx+eax*4+0x10],0x1a
  414921:	add    BYTE PTR [ecx+0x38],0xa
  414925:	add    DWORD PTR [edi+ecx*2-0x7e],eax
  414929:	inc    eax
  41492a:	add    BYTE PTR [edx+eiz*1+0x2000009],al
  414931:	add    al,0x51
  414933:	mov    DWORD PTR [eax+0x8],esp
  414936:	add    al,0x2
  414939:	add    al,0x5
  41493b:	add    BYTE PTR [edx],ah
  41493d:	adc    BYTE PTR [eax],cl
  41493f:	inc    edx
  414940:	inc    eax
  414941:	add    BYTE PTR [ecx+0x50],al
  414944:	add    DWORD PTR [ebx+0x508d4020],esp
  41494a:	adc    BYTE PTR [eax],al
  41494c:	add    BYTE PTR [eax],dh
  41494e:	and    BYTE PTR [eax],al
  414950:	add    BYTE PTR [eax],al
  414952:	add    DWORD PTR [bx+si],eax
  414955:	inc    esp
  414956:	and    BYTE PTR [eax],cl
  414958:	add    BYTE PTR [eax+0x1410428],al
  41495e:	add    eax,0xb1a000
  414963:	inc    ecx
  414964:	pop    ss
  414965:	and    BYTE PTR [eax+eiz*1],bl
  414968:	or     BYTE PTR [edx],cl
  41496a:	add    DWORD PTR [edx],eax
  41496c:	stos   DWORD PTR es:[edi],eax
  41496d:	lds    eax,FWORD PTR [eax]
  41496f:	add    al,0x14
  414971:	or     al,0x20
  414973:	add    BYTE PTR [ecx],ah
  414975:	add    cl,BYTE PTR [ecx]
  414977:	mov    al,ds:0x4030030
  41497c:	je     0x414982
  41497e:	popa   
  41497f:	or     DWORD PTR [eax],eax
  414981:	xor    BYTE PTR [eax],bl
  414983:	or     BYTE PTR [ecx],cl
  414985:	mov    ds:0xd380800c,al
  41498a:	or     BYTE PTR [eax],ah
  41498c:	add    BYTE PTR [eax],dl
  41498e:	inc    ecx
  41498f:	push   es
  414990:	inc    ecx
  414991:	add    DWORD PTR [eax],eax
  414993:	and    BYTE PTR [eax],bl
  414995:	adc    al,BYTE PTR [eax+eax*1+0x778504]
  41499c:	shl    DWORD PTR [eax+0x10810080],0x0
  4149a3:	add    BYTE PTR [eax],al
  4149a5:	add    al,0x37
  4149a7:	pop    eax
  4149a8:	adc    BYTE PTR [eax],al
  4149aa:	push   ecx
  4149ab:	add    eax,0x30022008
  4149b0:	add    BYTE PTR [esi],cl
  4149b2:	add    BYTE PTR [ecx],al
  4149b4:	enter  0x241,0x28
  4149b8:	add    eax,0x65822e
  4149bd:	add    BYTE PTR [eax],al
  4149bf:	rol    DWORD PTR [eax],0x0
  4149c2:	add    BYTE PTR [ecx],al
  4149c4:	add    BYTE PTR [ebp+0x0],dl
  4149c7:	adc    al,al
  4149c9:	add    DWORD PTR [ecx+0x1],ebp
  4149cc:	mov    al,ds:0xa8052000
  4149d1:	add    BYTE PTR [eax+0x7601040c],al
  4149d7:	inc    eax
  4149d8:	or     BYTE PTR [eax],al
  4149da:	inc    ecx
  4149db:	xor    BYTE PTR [eax+ebp*1],al
  4149de:	and    BYTE PTR [ecx],0x0
  4149e1:	adc    al,0x0
  4149e3:	add    BYTE PTR [eax+0x0],bh
  4149e6:	add    BYTE PTR [ebp+0xc2204],al
  4149ec:	or     eax,0x4244001
  4149f1:	inc    eax
  4149f2:	inc    esp
  4149f3:	mov    BYTE PTR [ebx],ah
  4149f5:	and    BYTE PTR [eax],dl
  4149f7:	add    BYTE PTR [eax+0x4],ch
  4149fa:	cmp    BYTE PTR [eax],ah
  4149fc:	nop
  4149fd:	inc    eax
  4149fe:	sbb    BYTE PTR [eax],bl
  414a00:	add    BYTE PTR [eax],al
  414a02:	xor    BYTE PTR [edx+0x10c00010],al
  414a08:	or     al,al
  414a0a:	add    eax,0xd0002244
  414a0f:	push   es
  414a10:	add    al,BYTE PTR [ecx]
  414a12:	mov    ds:0x20410108,al
  414a17:	xor    eax,DWORD PTR [eax]
  414a19:	xor    BYTE PTR [eax],al
  414a1b:	add    BYTE PTR [edx],cl
  414a1d:	add    BYTE PTR [ecx],al
  414a1f:	add    BYTE PTR [eax],bh
  414a21:	cmp    BYTE PTR [edx-0x76],al
  414a24:	cmp    eax,0x10c000
  414a29:	cwde   
  414a2a:	add    BYTE PTR [ebx-0x50],ah
  414a2d:	add    BYTE PTR [eax],al
  414a2f:	leave  
  414a30:	add    BYTE PTR [edx+0x400f457],bh
  414a36:	rol    BYTE PTR [eax],0x4c
  414a39:	or     BYTE PTR [eax],al
  414a3b:	or     DWORD PTR [edx-0x7f],ebx
  414a3e:	inc    ecx
  414a3f:	add    BYTE PTR [eax],al
  414a41:	add    BYTE PTR [ecx],al
  414a43:	adc    al,0x28
  414a45:	cmp    DWORD PTR [edx+0x20009],ebx
  414a4b:	add    BYTE PTR [eax+eax*2],dl
  414a4e:	add    BYTE PTR [eax],al
  414a50:	xor    BYTE PTR [eax],0x84
  414a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a54:	jns    0x4149fb
  414a56:	inc    ecx
  414a57:	mov    DWORD PTR [ecx],edx
  414a59:	pop    ecx
  414a5a:	adc    BYTE PTR [eax],cl
  414a5c:	add    BYTE PTR ds:0x40000,dl
  414a62:	rcl    DWORD PTR [eax],0x22
  414a65:	test   al,0x11
  414a67:	lods   al,BYTE PTR ds:[esi]
  414a68:	add    DWORD PTR [eax],eax
  414a6a:	inc    eax
  414a6b:	dec    ecx
  414a6c:	add    esp,eax
  414a6e:	and    al,0x10
  414a70:	dec    eax
  414a71:	cmp    BYTE PTR [edx+edx*1+0x49000104],ch
  414a78:	add    al,0x12
  414a7a:	add    BYTE PTR [eax],ah
  414a7c:	data16 add cl,BYTE PTR [ebp+0x4a0401]
  414a83:	or     BYTE PTR [eax],cl
  414a85:	sub    BYTE PTR [eax],cl
  414a87:	or     DWORD PTR ds:0x11000414,eax
  414a8d:	pop    es
  414a8e:	inc    edx
  414a8f:	add    BYTE PTR [edx],ch
  414a91:	dec    esp
  414a92:	inc    ebp
  414a93:	add    BYTE PTR [eax],al
  414a95:	and    al,BYTE PTR [edx+0x51204100]
  414a9b:	add    BYTE PTR [ecx+0x0],cl
  414a9e:	add    DWORD PTR [edx+0x21],eax
  414aa1:	adc    cl,bl
  414aa3:	and    BYTE PTR [eax],al
  414aa5:	adc    BYTE PTR [eax],al
  414aa7:	popf   
  414aa8:	add    BYTE PTR [eax+0x50],al
  414aab:	xor    BYTE PTR [eax],ah
  414aad:	add    DWORD PTR [eax],eax
  414aaf:	add    BYTE PTR [eax],al
  414ab1:	add    BYTE PTR [eax+0x22c0a292],cl
  414ab7:	inc    ecx
  414ab8:	inc    eax
  414ab9:	or     al,0x90
  414abb:	inc    eax
  414abc:	add    cl,0x34
  414abf:	inc    ecx
  414ac0:	adc    BYTE PTR [eax],0xc0
  414ac3:	add    DWORD PTR [eax+0x4821c46],eax
  414ac9:	inc    esp
  414aca:	add    BYTE PTR [eax],0x0
  414acd:	sbb    DWORD PTR [eax+eax*1],eax
  414ad0:	inc    eax
  414ad1:	add    BYTE PTR [ecx],al
  414ad3:	add    BYTE PTR [eax],ah
  414ad5:	or     al,0x14
  414ad7:	jecxz  0x414b3c
  414ad9:	or     BYTE PTR [edx],cl
  414adb:	and    BYTE PTR fs:[eax+eax*4],dh
  414adf:	inc    ecx
  414ae0:	or     BYTE PTR [ecx-0x75],cl
  414ae3:	or     BYTE PTR [eax+eax*1],dh
  414ae6:	and    BYTE PTR [eax],al
  414ae8:	add    DWORD PTR [ecx+0x41],ecx
  414aeb:	lods   al,BYTE PTR ds:[esi]
  414aec:	push   ecx
  414aed:	push   ebp
  414aee:	and    BYTE PTR [ebx],dh
  414af0:	nop
  414af1:	and    al,0x10
  414af3:	add    cl,0xea
  414af6:	add    BYTE PTR [eax],dh
  414af8:	sub    eax,0x94022
  414afd:	add    BYTE PTR [ecx+edx*2],0x90
  414b01:	add    BYTE PTR [eax],dl
  414b03:	add    eax,DWORD PTR [ecx-0x7f]
  414b06:	add    al,0x30
  414b08:	add    BYTE PTR ds:0xca1810,al
  414b0e:	or     cl,BYTE PTR [esi]
  414b10:	add    eax,DWORD PTR cs:[eax]
  414b13:	push   esp
  414b14:	add    BYTE PTR [eax],al
  414b16:	push   ss
  414b17:	push   esp
  414b18:	out    0x88,eax
  414b1a:	cdq    
  414b1b:	test   al,0x4
  414b1d:	add    BYTE PTR [ecx+0x14cc0080],al
  414b23:	add    BYTE PTR [eax],al
  414b25:	add    BYTE PTR [eax-0x7fbff7a0],al
  414b2b:	mov    DWORD PTR [ecx+0x10],eax
  414b2e:	dec    eax
  414b2f:	adc    al,BYTE PTR [edx+0x0]
  414b32:	or     DWORD PTR [edx],eax
  414b34:	or     BYTE PTR [ecx-0x7f],0x0
  414b38:	adc    DWORD PTR gs:[eax],eax
  414b3b:	add    al,BYTE PTR [edx+0x0]
  414b3e:	add    BYTE PTR [eax+esi*2+0x4],al
  414b42:	mov    BYTE PTR [eax+0x609de001],0x30
  414b49:	sbb    BYTE PTR [eax+0x21],ch
  414b4c:	or     ecx,eax
  414b4e:	add    BYTE PTR [eax-0x6ef7ffb8],0x41
  414b55:	pop    eax
  414b56:	and    BYTE PTR [eax],al
  414b58:	or     BYTE PTR [eax],cl
  414b5a:	add    DWORD PTR [eax+0x44],eax
  414b5d:	inc    ecx
  414b5e:	add    al,0xe8
  414b60:	add    BYTE PTR [edx+0x4380a2],al
  414b66:	add    al,0x40
  414b68:	inc    esp
  414b69:	lea    edx,[ecx+edx*4]
  414b6c:	ret    
  414b6d:	push   eax
  414b6e:	repnz inc ecx
  414b70:	add    BYTE PTR [eax],dl
  414b72:	add    BYTE PTR [eax],al
  414b74:	and    al,BYTE PTR [eax]
  414b76:	push   eax
  414b77:	adc    BYTE PTR [ecx+eax*1+0x51],cl
  414b7b:	jl     0x414bdd
  414b7d:	or     al,BYTE PTR [ebp+0x11006]
  414b83:	mov    eax,ds:0x25f20000
  414b88:	add    BYTE PTR [eax],bl
  414b8a:	or     BYTE PTR [esp+edx*1],cl
  414b8d:	add    BYTE PTR [eax],al
  414b8f:	xor    BYTE PTR [ebx],ah
  414b91:	or     cl,BYTE PTR [ecx]
  414b93:	lds    eax,FWORD PTR [eax]
  414b95:	add    BYTE PTR [edx],al
  414b97:	add    al,0x48
  414b99:	push   ecx
  414b9a:	sub    BYTE PTR [eax],al
  414b9c:	and    al,0xb1
  414b9e:	test   al,0x42
  414ba0:	adc    cl,al
  414ba2:	push   ebx
  414ba3:	rol    DWORD PTR [eax],1
  414ba5:	add    DWORD PTR [eax-0x2ff3ef7c],edx
  414bab:	add    al,0x82
  414bad:	add    eax,0x3022041
  414bb2:	add    BYTE PTR [eax],0x80
  414bb5:	add    BYTE PTR [eax],al
  414bb7:	add    BYTE PTR [ecx+0x410888],al
  414bbd:	push   eax
  414bbe:	mov    al,ds:0x4094e49
  414bc3:	dec    eax
  414bc4:	inc    eax
  414bc5:	and    BYTE PTR [esi+0x11086702],cl
  414bcb:	push   esp
  414bcc:	mov    ds:0x100001,eax
  414bd1:	add    cl,BYTE PTR [eax+0x488830]
  414bd7:	add    BYTE PTR [eax+0x4202c304],cl
  414bdd:	mov    BYTE PTR [esp+ebx*1+0xd000412],al
  414be4:	test   DWORD PTR [eax],ebx
  414be6:	mov    al,ds:0x502800a0
  414beb:	inc    eax
  414bec:	add    BYTE PTR [ecx+0x42],al
  414bef:	add    BYTE PTR [edx],cl
  414bf1:	add    BYTE PTR [ebx],al
  414bf3:	push   0x5012
  414bf8:	add    BYTE PTR [eax],al
  414bfa:	pusha  
  414bfb:	inc    edx
  414bfc:	test   DWORD PTR [eax+ecx*8],eax
  414bff:	mov    es,WORD PTR [eax-0xf]
  414c02:	add    BYTE PTR [eax+0x51064800],ah
  414c08:	les    edi,FWORD PTR [eax+0x1400086]
  414c0e:	sbb    BYTE PTR [eax],al
  414c10:	adc    al,BYTE PTR [eax+0x62]
  414c13:	sbb    al,BYTE PTR [eax]
  414c15:	inc    ebx
  414c16:	add    BYTE PTR [eax],cl
  414c18:	adc    eax,0x481080
  414c1d:	add    BYTE PTR [eax+0x5882040e],cl
  414c23:	adc    BYTE PTR [eax+0x11490],al
  414c29:	add    BYTE PTR [eax],0x81
  414c2c:	inc    ecx
  414c2d:	add    BYTE PTR [eax],al
  414c2f:	add    DWORD PTR [eax+eax*1+0x382a2081],eax
  414c36:	and    BYTE PTR [eax],bl
  414c38:	or     BYTE PTR [eax-0x4eef1de0],al
  414c3e:	or     BYTE PTR [edx+0x40],al
  414c41:	pusha  
  414c42:	rcl    BYTE PTR [eax+eax*1],0x0
  414c46:	add    BYTE PTR [eax],dl
  414c48:	mov    ds:0x2402066,eax
  414c4d:	add    BYTE PTR [eax+eiz*1],al
  414c50:	add    al,0x4
  414c52:	add    DWORD PTR [eax+0x15011000],ebx
  414c58:	adc    dl,cl
  414c5a:	and    BYTE PTR [eax],ah
  414c5c:	sub    BYTE PTR [eax],al
  414c5e:	fs or  al,0xc
  414c61:	add    BYTE PTR [eax],al
  414c63:	adc    ebx,DWORD PTR [edx+edx*2]
  414c66:	add    DWORD PTR [eax],edx
  414c68:	add    al,ah
  414c6a:	inc    ebx
  414c6b:	add    cl,BYTE PTR [eax]
  414c6d:	add    BYTE PTR [esi],ah
  414c6f:	jb     0x414c71
  414c71:	inc    edx
  414c72:	add    BYTE PTR [eax-0x7cbfdffa],dl
  414c78:	add    al,0x94
  414c7a:	sbb    BYTE PTR [eax],al
  414c7c:	add    DWORD PTR [eax+0x41128a02],eax
  414c82:	add    BYTE PTR [ecx],al
  414c84:	or     DWORD PTR [ebx],edx
  414c86:	or     al,BYTE PTR [eax-0x56]
  414c89:	or     BYTE PTR [eax],cl
  414c8b:	xor    cl,BYTE PTR [edx]
  414c8d:	add    BYTE PTR [ecx-0x40],al
  414c90:	nop
  414c91:	cwde   
  414c92:	and    DWORD PTR [ecx+0x6],ecx
  414c95:	push   ecx
  414c96:	add    dh,ch
  414c98:	add    al,0x1
  414c9a:	lods   al,BYTE PTR ds:[esi]
  414c9b:	or     al,BYTE PTR [eax]
  414c9d:	or     BYTE PTR [ebx+eax*1+0x38],dl
  414ca1:	mov    eax,ds:0x10131043
  414ca6:	adc    al,BYTE PTR [eax-0x77b1ec00]
  414cac:	call   0xf514cba
  414cb1:	mov    BYTE PTR [ebx],al
  414cb3:	inc    ecx
  414cb4:	add    BYTE PTR [eax-0x3f],al
  414cb7:	push   es
  414cb8:	add    al,BYTE PTR [eax+edx*1+0x20410019]
  414cbf:	push   es
  414cc0:	out    0x4,al
  414cc2:	add    BYTE PTR [eax-0x7d],al
  414cc5:	and    eax,0x28002020
  414cca:	or     dl,BYTE PTR ss:[eax]
  414ccd:	sbb    BYTE PTR [edx],0x20
  414cd0:	nop
  414cd1:	add    BYTE PTR [edi+0x44580002],al
  414cd7:	add    BYTE PTR [ecx+eax*1],0x2a
  414cdb:	adc    BYTE PTR [edi],ah
  414cdd:	pusha  
  414cde:	sbb    BYTE PTR [eax+0x32088185],cl
  414ce4:	add    al,0x0
  414ce6:	xchg   edx,eax
  414ce7:	pop    eax
  414ce8:	test   BYTE PTR [eax+0xa84040],al
  414cee:	sbb    BYTE PTR [eax],al
  414cf0:	add    BYTE PTR [eax+0x48],al
  414cf3:	cmp    BYTE PTR [eax],al
  414cf5:	and    al,0x1
  414cf7:	add    BYTE PTR [eax],al
  414cf9:	dec    eax
  414cfa:	xor    BYTE PTR [eax],al
  414cfc:	adc    BYTE PTR [eax],0x4
  414cff:	or     DWORD PTR [eax],eax
  414d01:	shl    DWORD PTR [edx+0x1248961],0x0
  414d08:	les    edx,FWORD PTR [eax+0x300548]
  414d0e:	add    al,0x0
  414d10:	dec    eax
  414d11:	and    esp,DWORD PTR [eax]
  414d13:	lock inc eax
  414d15:	add    al,0xa8
  414d17:	add    BYTE PTR [ebp+0x971986],al
  414d1d:	add    BYTE PTR [eax+0xc0002],dl
  414d23:	add    DWORD PTR [edx],eax
  414d25:	add    DWORD PTR [edx],0x3412038
  414d2b:	add    DWORD PTR [eax],ebx
  414d2d:	add    BYTE PTR [eax],dl
  414d2f:	rol    DWORD PTR [eax],1
  414d31:	mov    WORD PTR [ecx+0x0],fs
  414d34:	add    BYTE PTR [eax],al
  414d36:	popa   
  414d37:	sub    DWORD PTR [edx],edx
  414d39:	add    BYTE PTR [ecx],al
  414d3b:	push   edi
  414d3c:	push   esp
  414d3d:	xor    BYTE PTR [eax+0x24],0xc2
  414d41:	pusha  
  414d42:	add    BYTE PTR [eax+0x2],ah
  414d45:	adc    ah,BYTE PTR [eax]
  414d47:	pushf  
  414d48:	add    al,0x1
  414d4a:	xchg   edx,eax
  414d4b:	or     BYTE PTR [ecx+0x3],al
  414d4e:	and    DWORD PTR [edx],esi
  414d50:	add    DWORD PTR [eax],ecx
  414d52:	add    BYTE PTR [eax+0x0],dh
  414d55:	cwde   
  414d56:	lds    eax,FWORD PTR [eax]
  414d58:	add    cl,BYTE PTR [eax+0x2002c461]
  414d5e:	and    BYTE PTR [edx+0x0],al
  414d61:	inc    ecx
  414d62:	jb     0x414d65
  414d64:	add    esp,DWORD PTR [ecx-0x6d000000]
  414d6a:	add    BYTE PTR [eax],al
  414d6c:	push   eax
  414d6d:	sub    BYTE PTR [ecx+eiz*1],al
  414d70:	pop    ecx
  414d71:	adc    BYTE PTR [esi],al
  414d73:	mov    WORD PTR [eax+0x60],es
  414d76:	mov    cl,BYTE PTR [edx]
  414d78:	and    BYTE PTR [eax+0x1c204520],al
  414d7e:	int    0x80
  414d80:	add    BYTE PTR [eax+0x705640],dl
  414d86:	add    BYTE PTR [eax-0x5f],dl
  414d89:	aaa    
  414d8a:	add    BYTE PTR [eax],al
  414d8c:	inc    esp
  414d8d:	add    BYTE PTR [eax],0x64
  414d90:	inc    eax
  414d91:	mov    BYTE PTR [ebp+0x882304],ah
  414d97:	rol    DWORD PTR [eax],0x41
  414d9a:	inc    eax
  414d9b:	test   BYTE PTR [eax],al
  414d9d:	inc    eax
  414d9e:	add    dl,BYTE PTR [ecx-0x6f]
  414da1:	pusha  
  414da2:	mov    eax,0xc22003a
  414da7:	add    BYTE PTR [eax],al
  414da9:	push   eax
  414daa:	add    cl,BYTE PTR [ecx+0x29]
  414dad:	add    BYTE PTR [ecx+0x1680a10],al
  414db3:	add    BYTE PTR [eax],al
  414db5:	adc    BYTE PTR [eax],cl
  414db7:	adc    BYTE PTR [ebx],al
  414db9:	loopne 0x414dbb
  414dbb:	add    al,0x20
  414dbd:	loopne 0x414e00
  414dbf:	cdq    
  414dc0:	dec    eax
  414dc1:	rol    BYTE PTR [eax+0x1020e20],1
  414dc7:	adc    al,0x0
  414dc9:	add    ecx,DWORD PTR [eax]
  414dcb:	gs inc edx
  414dcd:	add    BYTE PTR [eax+eax*1],0x2
  414dd1:	adc    BYTE PTR [edx+0x66],al
  414dd4:	ror    DWORD PTR [eax+eax*4+0x0],1
  414dd8:	and    BYTE PTR [esp+eax*1-0x30],al
  414ddc:	inc    eax
  414ddd:	add    DWORD PTR [eax],eax
  414ddf:	sub    BYTE PTR [eax-0x3b3fbb80],al
  414de5:	add    BYTE PTR [eax-0x7a477635],bl
  414deb:	add    BYTE PTR [edx],al
  414ded:	mov    WORD PTR [edx+0x0],fs
  414df0:	or     BYTE PTR [eax+eax*1],ah
  414df3:	inc    eax
  414df4:	inc    esp
  414df5:	inc    edx
  414df6:	sub    al,BYTE PTR [esp+eax*1]
  414df9:	inc    ecx
  414dfa:	add    BYTE PTR [ecx],al
  414dfc:	inc    edi
  414dfd:	or     al,BYTE PTR [eiz*4+0x8a88123]
  414e04:	sbb    BYTE PTR [eax],al
  414e06:	adc    BYTE PTR [edx],0x10
  414e09:	add    DWORD PTR [eax],eax
  414e0b:	add    BYTE PTR [edx+ecx*2+0x40],al
  414e0f:	pusha  
  414e10:	rcl    DWORD PTR [eax-0x5a],0xf
  414e14:	add    al,0x20
  414e16:	xor    eax,0x3540915
  414e1b:	add    BYTE PTR [ecx+0x0],cl
  414e1e:	adc    eax,0x208485
  414e23:	add    al,0xa
  414e25:	add    BYTE PTR [esi+0x2],0xcc
  414e29:	inc    eax
  414e2a:	add    BYTE PTR [eax],ah
  414e2c:	add    BYTE PTR [eax],ch
  414e2e:	add    BYTE PTR [eax],al
  414e30:	mov    ch,0x82
  414e32:	popa   
  414e33:	add    al,0x0
  414e35:	and    BYTE PTR [ecx+ecx*4],al
  414e38:	xor    BYTE PTR [ecx],dl
  414e3a:	fcom   QWORD PTR [ebx-0x7c]
  414e3d:	add    BYTE PTR [eax],0x81
  414e40:	add    DWORD PTR [eax],eax
  414e42:	add    BYTE PTR [eax-0x7bfffc00],al
  414e48:	pop    es
  414e49:	jno    0x414e4b
  414e4b:	test   BYTE PTR [ebx+edx*2],al
  414e4e:	or     BYTE PTR [ecx],cl
  414e50:	and    BYTE PTR [edx+0x1],al
  414e53:	add    DWORD PTR [eax],eax
  414e55:	jmp    0x45735e9a
  414e5a:	add    BYTE PTR ds:0x80123140,ah
  414e60:	ss adc al,cl
  414e63:	or     BYTE PTR [eax],al
  414e65:	push   edi
  414e66:	push   eax
  414e67:	or     BYTE PTR [edx],cl
  414e69:	sbb    DWORD PTR [eax+eax*1],esp
  414e6c:	push   esi
  414e6d:	add    BYTE PTR [edx+0x20263088],cl
  414e73:	add    al,0x94
  414e75:	inc    esp
  414e76:	add    BYTE PTR [eax],al
  414e78:	or     BYTE PTR [eax],al
  414e7a:	cmp    BYTE PTR [eax],al
  414e7c:	push   esp
  414e7d:	add    BYTE PTR [eax],al
  414e7f:	dec    edx
  414e80:	shl    DWORD PTR [eax],0x1
  414e83:	and    BYTE PTR [ecx],al
  414e85:	or     BYTE PTR [eax],al
  414e87:	add    BYTE PTR [eax],al
  414e89:	push   ebp
  414e8a:	add    BYTE PTR [eax],al
  414e8c:	add    DWORD PTR [edx-0x4dffcfb2],esp
  414e92:	add    ebx,eax
  414e94:	add    cl,BYTE PTR [eax]
  414e96:	add    BYTE PTR [eax],al
  414e98:	inc    edx
  414e99:	dec    eax
  414e9a:	add    BYTE PTR [eax],cl
  414e9c:	ins    DWORD PTR es:[edi],dx
  414e9d:	cmp    al,al
  414e9f:	xor    BYTE PTR [eax],al
  414ea1:	add    BYTE PTR [ecx+0x0],al
  414ea4:	add    BYTE PTR [edx+0x562404],dl
  414eaa:	inc    esi
  414eab:	and    al,0x2
  414ead:	add    BYTE PTR [ecx+0x21],al
  414eb0:	add    BYTE PTR [eax],al
  414eb2:	add    BYTE PTR [ecx+eax*1],al
  414eb5:	push   cs
  414eb6:	add    al,0x48
  414eb8:	inc    ebx
  414eb9:	mov    eax,0x8c261050
  414ebe:	lds    ebp,FWORD PTR [eax+0x4ed08]
  414ec4:	mov    eax,DWORD PTR [eax]
  414ec6:	les    eax,FWORD PTR [eax]
  414ec8:	lock add BYTE PTR [eax+0x40140a0],al
  414ecf:	add    BYTE PTR [eax],al
  414ed1:	add    BYTE PTR [eax],0x49
  414ed4:	aad    0x44
  414ed6:	push   esp
  414ed7:	xchg   esp,eax
  414ed8:	add    DWORD PTR [eax],eax
  414eda:	add    BYTE PTR [edx],0x41
  414edd:	add    BYTE PTR [esi+0x1800040],al
  414ee3:	dec    esp
  414ee4:	dec    eax
  414ee5:	and    BYTE PTR [eax-0x5cca6f7e],cl
  414eeb:	add    BYTE PTR ds:0x11004010,0xac
  414ef2:	inc    esp
  414ef3:	adc    BYTE PTR [ecx],al
  414ef5:	add    al,0x20
  414ef7:	add    BYTE PTR [edx+edx*1],al
  414efa:	add    BYTE PTR [eax+0x48050401],al
  414f00:	add    eax,DWORD PTR [eax]
  414f02:	lds    esp,FWORD PTR [eax]
  414f04:	inc    eax
  414f05:	and    BYTE PTR [eax],bl
  414f07:	or     DWORD PTR [eax],eax
  414f09:	inc    eax
  414f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0b:	loopne 0x414f41
  414f0d:	pop    eax
  414f0e:	or     BYTE PTR [eax],al
  414f10:	and    BYTE PTR [eax+0x4142201a],al
  414f16:	rol    DWORD PTR [eax],0x8
  414f19:	mov    BYTE PTR [eax],al
  414f1b:	adc    al,ah
  414f1d:	and    BYTE PTR [eax+0x40000286],al
  414f23:	add    BYTE PTR [edx+ebx*1],al
  414f26:	and    eax,DWORD PTR [eax]
  414f28:	add    BYTE PTR [edx+0x0],0x12
  414f2c:	and    al,0x80
  414f2e:	dec    ebp
  414f2f:	add    BYTE PTR [ebx],cl
  414f31:	add    dl,al
  414f33:	add    BYTE PTR [eax],ah
  414f35:	add    DWORD PTR [eax+0x26],esp
  414f38:	adc    al,0x0
  414f3a:	inc    esi
  414f3b:	add    BYTE PTR ds:0x80c2050,dh
  414f41:	add    BYTE PTR [eax],ah
  414f43:	inc    eax
  414f44:	and    BYTE PTR [eax],al
  414f46:	or     ah,BYTE PTR [eax+eax*1]
  414f49:	add    eax,DWORD PTR [eax]
  414f4b:	push   0x3
  414f4d:	add    DWORD PTR [eax],eax
  414f4f:	add    al,BYTE PTR [eax+0x20]
  414f52:	add    BYTE PTR [ecx+eax*4-0x80],dl
  414f56:	add    BYTE PTR [ecx+eiz*1],bl
  414f59:	js     0x414f9b
  414f5b:	or     BYTE PTR [eax+ebx*1],cl
  414f5e:	add    BYTE PTR [eax*1+0x4800258],ah
  414f65:	adc    BYTE PTR [eax],al
  414f67:	inc    eax
  414f68:	clc    
  414f69:	inc    eax
  414f6a:	mov    BYTE PTR [eax+0x30],al
  414f6d:	inc    edx
  414f6e:	arpl   WORD PTR [edx],ax
  414f70:	add    DWORD PTR [eax+0x25044001],edx
  414f76:	add    BYTE PTR [edx+0x4],al
  414f79:	inc    eax
  414f7a:	ss add al,0x80
  414f7d:	add    BYTE PTR [ebp+0x40],al
  414f80:	and    ah,BYTE PTR [ebx]
  414f82:	add    BYTE PTR [bx+si],dl
  414f85:	xor    BYTE PTR [eax-0x7e],dl
  414f88:	add    BYTE PTR [eax],al
  414f8a:	inc    eax
  414f8b:	mov    eax,0x44300080
  414f90:	and    BYTE PTR [eax],al
  414f92:	add    BYTE PTR [eax],0x40
  414f95:	add    BYTE PTR [eax],al
  414f97:	xor    BYTE PTR [eax],al
  414f99:	add    BYTE PTR [eax+0x42],dl
  414f9c:	add    BYTE PTR [ecx+0xf],cl
  414f9f:	and    al,0x80
  414fa1:	add    ah,BYTE PTR [eax-0x7f75fe5f]
  414fa7:	add    eax,0x65870063
  414fac:	jmp    0x306dd132
  414fb1:	dec    eax
  414fb2:	add    BYTE PTR [eax],al
  414fb4:	and    DWORD PTR [eax+0x0],eax
  414fb7:	mov    ch,0x5c
  414fb9:	or     eax,DWORD PTR [ecx+eax*1]
  414fbc:	jo     0x414f3e
  414fbe:	add    BYTE PTR [eax],ah
  414fc0:	add    BYTE PTR [eax],al
  414fc2:	inc    ecx
  414fc3:	mov    BYTE PTR [eax],ah
  414fc5:	add    BYTE PTR [eax+0x8910500],cl
  414fcb:	adc    al,BYTE PTR [eax]
  414fcd:	aam    0x41
  414fcf:	inc    ecx
  414fd0:	or     BYTE PTR [edx+0x62f70980],dh
  414fd6:	add    BYTE PTR [eax+0x40822428],ah
  414fdc:	xor    BYTE PTR [ecx-0x33],cl
  414fdf:	pop    esp
  414fe0:	popa   
  414fe1:	mov    cl,0x0
  414fe3:	add    BYTE PTR [eax],al
  414fe5:	add    DWORD PTR [eax+0x1880b208],edx
  414feb:	or     BYTE PTR [eax],al
  414fed:	add    BYTE PTR [eax],al
  414fef:	sub    dl,BYTE PTR [ebx-0x68]
  414ff2:	inc    esp
  414ff3:	add    cl,al
  414ff5:	or     DWORD PTR [ecx+0x4],eax
  414ff8:	add    DWORD PTR [eax],esp
  414ffa:	popa   
  414ffb:	inc    ecx
  414ffc:	add    cl,BYTE PTR [eax+0x0]
  414fff:	and    al,BYTE PTR [edx]
  415001:	or     al,0x80
  415003:	and    BYTE PTR [ecx+0x5],al
  415006:	cmp    DWORD PTR [eax+0x24005100],eax
  41500c:	add    BYTE PTR [eax],al
  41500e:	add    BYTE PTR [edx],bh
  415010:	add    BYTE PTR [edx],al
  415012:	sub    al,BYTE PTR [eax]
  415014:	add    BYTE PTR [eax+0x1c00804],al
  41501a:	push   es
  41501b:	adc    BYTE PTR [eax+0x38],0xc1
  41501f:	add    al,0x1
  415021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415022:	adc    eax,DWORD PTR [eax]
  415024:	add    BYTE PTR [eax],dl
  415026:	mov    eax,ds:0xd8400404
  41502b:	or     DWORD PTR [eax],0x8d11a05
  415031:	rol    DWORD PTR [eax],1
  415033:	add    BYTE PTR [edx+0x60],al
  415036:	add    BYTE PTR [edx],0x42
  415039:	repnz add BYTE PTR [ebx+0x34],dh
  41503d:	pusha  
  41503e:	inc    edx
  41503f:	inc    eax
  415040:	mov    es,WORD PTR [ecx]
  415042:	add    BYTE PTR [edx+eax*2-0x3fa9fb3f],al
  415049:	and    DWORD PTR [eax+eax*1],0x1c000013
  415050:	and    al,0x40
  415052:	or     BYTE PTR [eax+0x190000],al
  415058:	and    al,BYTE PTR [eax]
  41505a:	add    BYTE PTR [ecx],dh
  41505c:	or     BYTE PTR [eax],ah
  41505e:	add    ecx,0xca088820
  415064:	and    BYTE PTR [eax+0xc],dh
  415067:	mov    BYTE PTR [eax],al
  415069:	inc    eax
  41506a:	and    BYTE PTR [ecx],ah
  41506c:	or     BYTE PTR [ecx+0x0],al
  41506f:	add    BYTE PTR [esi+0x50402000],dh
  415075:	and    DWORD PTR [ecx+0x10a00100],ecx
  41507b:	add    al,0x20
  41507d:	jo     0x41509f
  41507f:	add    BYTE PTR [eax+0x0],dl
  415082:	or     BYTE PTR [eax],bh
  415084:	add    BYTE PTR [eax],dl
  415086:	add    al,0x12
  415088:	add    BYTE PTR [eax],bl
  41508a:	sbb    BYTE PTR [eax+0x8],cl
  41508d:	add    al,0x81
  41508f:	adc    BYTE PTR [ebx+0x2],ah
  415092:	add    BYTE PTR [eax*1-0x3cfff10c],al
  415099:	add    DWORD PTR [edx],edx
  41509b:	add    BYTE PTR [ecx],ah
  41509d:	add    BYTE PTR [ecx],al
  41509f:	adc    al,BYTE PTR [eax+0x2c0004]
  4150a5:	sub    BYTE PTR [eax],al
  4150a7:	add    BYTE PTR [eax],dl
  4150a9:	test   eax,0x3412200a
  4150ae:	add    DWORD PTR [eax],eax
  4150b0:	add    eax,0xe1512258
  4150b5:	mov    al,ds:0xa0400041
  4150ba:	add    BYTE PTR [esi-0x1f0fbd2e],al
  4150c0:	push   eax
  4150c1:	and    BYTE PTR [ecx+0x0],al
  4150c4:	push   eax
  4150c5:	xchg   ebp,eax
  4150c6:	xchg   ebp,eax
  4150c7:	sbb    DWORD PTR [eax],eax
  4150c9:	inc    edx
  4150ca:	int3   
  4150cb:	add    DWORD PTR [eax+0x51],eax
  4150ce:	add    al,BYTE PTR [ecx+eiz*2-0x7e6f9ec0]
  4150d5:	test   BYTE PTR [eax],al
  4150d7:	add    BYTE PTR [eax],ah
  4150d9:	pusha  
  4150da:	add    BYTE PTR [eax+eax*4+0x20],cl
  4150de:	adc    dl,al
  4150e0:	add    DWORD PTR [eax],esp
  4150e2:	push   esi
  4150e3:	add    al,0x88
  4150e5:	ror    DWORD PTR [eax+0x41],0xa
  4150e9:	dec    eax
  4150ea:	rol    BYTE PTR [ebp+0x0],0x13
  4150ee:	and    BYTE PTR [eax],0x20
  4150f1:	add    al,0x1
  4150f3:	add    BYTE PTR [eax],al
  4150f5:	add    BYTE PTR [eax],0x42
  4150f8:	push   ebp
  4150f9:	mov    ds:0x1004100,al
  4150fe:	add    DWORD PTR [eax],eax
  415100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415101:	add    al,0x0
  415103:	add    BYTE PTR [ebx],dh
  415105:	add    al,0x8
  415107:	add    al,0x30
  415109:	add    BYTE PTR [eax],al
  41510b:	nop
  41510c:	add    BYTE PTR [eax+0x4],0x61
  415110:	add    BYTE PTR ss:[eax-0x78],ah
  415114:	dec    edx
  415115:	retf   0x200
  415118:	pusha  
  415119:	push   eax
  41511a:	inc    ecx
  41511b:	inc    edx
  41511c:	sub    al,0x0
  41511e:	add    al,BYTE PTR [eax]
  415120:	test   BYTE PTR [esi+0x52f31041],al
  415126:	add    BYTE PTR [eax+eax*8+0x0],al
  41512a:	add    DWORD PTR [eax+0x28],0x0
  41512e:	add    DWORD PTR [eax+0x209240],eax
  415134:	add    BYTE PTR [eax],al
  415136:	add    DWORD PTR [eax],eax
  415138:	lds    eax,FWORD PTR [eax]
  41513a:	and    BYTE PTR [eax+eiz*1+0x41],0x8
  41513f:	add    BYTE PTR [edx],al
  415141:	add    cl,BYTE PTR [eax]
  415143:	add    BYTE PTR [esi],dl
  415145:	push   es
  415146:	inc    ecx
  415147:	add    BYTE PTR [eax+0x29048410],al
  41514d:	add    DWORD PTR [eax-0x7f7beebf],eax
  415153:	cwde   
  415154:	or     DWORD PTR [esi-0x40],ecx
  415157:	adc    BYTE PTR [eax],ah
  415159:	inc    eax
  41515a:	push   es
  41515b:	or     eax,0x20014210
  415160:	and    BYTE PTR [ebx+0x4],al
  415163:	stos   BYTE PTR es:[edi],al
  415164:	or     al,0x61
  415166:	add    BYTE PTR [eax+0x49],cl
  415169:	inc    edx
  41516a:	add    BYTE PTR [ecx+0x40804021],al
  415170:	inc    eax
  415171:	inc    ecx
  415172:	and    BYTE PTR [ecx+eiz*1],al
  415175:	add    eax,DWORD PTR [eax+edx*1]
  415178:	add    DWORD PTR [eax-0x7f27cddf],edx
  41517e:	add    DWORD PTR [esi-0x70],eax
  415181:	add    al,0x40
  415183:	mov    ebp,0x300a022
  415188:	add    DWORD PTR [ecx],eax
  41518a:	add    al,0xb1
  41518c:	cmc    
  41518d:	or     DWORD PTR [ebx],eax
  41518f:	sub    BYTE PTR [ecx+0x45218214],al
  415195:	add    BYTE PTR [eax],ch
  415197:	add    al,0x8
  415199:	inc    eax
  41519a:	and    al,BYTE PTR [edi]
  41519c:	inc    ecx
  41519d:	or     al,BYTE PTR [eax+0x6c3c080]
  4151a3:	mov    BYTE PTR [eax+0x30],cl
  4151a6:	and    al,0x14
  4151a8:	nop
  4151a9:	and    BYTE PTR [edx],al
  4151ab:	add    BYTE PTR [edx+0x24],ah
  4151ae:	inc    ecx
  4151af:	nop
  4151b0:	inc    edx
  4151b1:	xchg   edx,eax
  4151b2:	inc    eax
  4151b3:	add    BYTE PTR [ecx],al
  4151b5:	and    BYTE PTR [eax],al
  4151b7:	inc    eax
  4151b8:	int3   
  4151b9:	dec    esp
  4151ba:	add    BYTE PTR ds:0x53048340,dl
  4151c0:	push   eax
  4151c1:	add    BYTE PTR [eax],cl
  4151c3:	inc    esp
  4151c4:	or     BYTE PTR [eax+eiz*1],cl
  4151c7:	add    BYTE PTR [edx+0x3],al
  4151ca:	add    eax,0xb0080800
  4151cf:	add    BYTE PTR [eax],0x33
  4151d2:	add    BYTE PTR [ecx],0x30
  4151d5:	add    BYTE PTR [eax],cl
  4151d7:	and    eax,DWORD PTR [eax]
  4151d9:	or     al,0x0
  4151db:	add    al,0x2c
  4151dd:	rol    BYTE PTR [eax],0x0
  4151e0:	add    BYTE PTR [eax],ch
  4151e2:	rcl    DWORD PTR [eax],0xf0
  4151e5:	sbb    al,0x31
  4151e7:	and    BYTE PTR [eax],al
  4151e9:	inc    eax
  4151ea:	add    BYTE PTR [eax+eax*1+0x209600a2],0x11
  4151f2:	popa   
  4151f3:	adc    BYTE PTR [ebp+0x4],al
  4151f6:	add    BYTE PTR [ecx],ah
  4151f8:	mov    cl,BYTE PTR [ecx+0x20]
  4151fb:	add    al,BYTE PTR [esp+eax*1]
  4151fe:	cwde   
  4151ff:	add    BYTE PTR [ebx+0x20000],al
  415205:	add    BYTE PTR [edx+0x2],cl
  415208:	adc    BYTE PTR [eax-0x7effcc00],cl
  41520e:	inc    eax
  41520f:	adc    BYTE PTR [eax+0xa0],al
  415215:	ret    
  415216:	add    al,0x0
  415218:	cmp    eax,0xc2324000
  41521d:	in     al,dx
  41521e:	add    DWORD PTR [eax],eax
  415220:	and    DWORD PTR [edx+0x10],ecx
  415223:	add    BYTE PTR [eax],al
  415225:	pusha  
  415226:	xor    BYTE PTR [eax],al
  415228:	add    BYTE PTR [eax],ch
  41522a:	add    BYTE PTR [eax+0x41520041],al
  415230:	add    DWORD PTR [eax+0x2a42400e],esp
  415236:	and    al,0x0
  415238:	data16 add BYTE PTR [eax],al
  41523b:	les    eax,FWORD PTR [eax]
  41523d:	add    DWORD PTR [ecx+0x20425440],0x17084
  415247:	shl    DWORD PTR [eax],0x1
  41524a:	add    DWORD PTR [eax+eiz*1],0x13901000
  415251:	xchg   ecx,eax
  415252:	adc    BYTE PTR [ecx+0x8],cl
  415255:	adc    BYTE PTR [eax],al
  415257:	add    BYTE PTR [ebp+0x0],dh
  41525d:	add    BYTE PTR [eax],0xcc
  415260:	add    BYTE PTR [eax+0x8012d0],dl
  415266:	sbb    BYTE PTR [esi],0x20
  415269:	cmp    BYTE PTR [eax],dl
  41526b:	rcl    DWORD PTR [eax+eax*1+0x65004904],0x61
  415273:	add    DWORD PTR [eax+eax*1],edx
  415276:	and    BYTE PTR [eax],al
  415278:	adc    BYTE PTR [eax],ah
  41527a:	add    BYTE PTR [eax],al
  41527c:	add    BYTE PTR [eax],ah
  41527e:	adc    BYTE PTR [edx+0x42248469],cl
  415284:	and    BYTE PTR [edx+0x45],0x4
  415288:	mov    DWORD PTR [esi+0x0],eax
  41528b:	and    BYTE PTR [eax+0x40],al
  41528e:	cdq    
  41528f:	jae    0x415291
  415291:	adc    al,BYTE PTR [edx]
  415293:	mov    BYTE PTR [ecx],ah
  415295:	add    BYTE PTR [ecx+0x10000888],ah
  41529b:	add    BYTE PTR [eax],ch
  41529d:	mov    ah,BYTE PTR [eax]
  41529f:	and    al,BYTE PTR [edx-0x40]
  4152a2:	inc    ebp
  4152a3:	inc    eax
  4152a4:	add    BYTE PTR [eax+0x640c008b],dl
  4152aa:	add    BYTE PTR [ecx],al
  4152ac:	inc    ebp
  4152ad:	add    BYTE PTR [eax],cl
  4152af:	adc    eax,0x540400
  4152b4:	sub    BYTE PTR [edx+0xd150],ah
  4152ba:	add    BYTE PTR [eax],al
  4152bc:	and    BYTE PTR [eax],cl
  4152be:	add    al,0x0
  4152c0:	call   0xc3b31c
  4152c5:	add    BYTE PTR [ecx+0x20],dh
  4152c8:	mov    ch,0x20
  4152ca:	nop
  4152cb:	inc    eax
  4152cc:	adc    BYTE PTR [eax],al
  4152ce:	mov    eax,ds:0x2920408
  4152d3:	add    BYTE PTR [edx],0x20
  4152d6:	add    BYTE PTR [eax+0x19],al
  4152d9:	and    BYTE PTR [edx],al
  4152db:	add    BYTE PTR [eax+eax*1],dl
  4152de:	lds    eax,FWORD PTR [ecx]
  4152e0:	dec    eax
  4152e1:	popa   
  4152e2:	add    ebp,0x6040040
  4152e8:	popa   
  4152e9:	inc    ecx
  4152ea:	ds add al,0x0
  4152ed:	add    BYTE PTR [ecx],al
  4152ef:	add    BYTE PTR [eax],al
  4152f1:	add    BYTE PTR [eax],0x60
  4152f4:	sbb    BYTE PTR [edx],al
  4152f6:	add    BYTE PTR [ecx-0x59ffb391],al
  4152fc:	adc    BYTE PTR [eax],al
  4152fe:	add    BYTE PTR [eax+0x98400a0],cl
  415304:	out    0x0,eax
  415306:	adc    BYTE PTR ds:0x80634302,0x80
  41530d:	sbb    al,BYTE PTR [esp+eax*1+0x0]
  415311:	xchg   ebp,eax
  415312:	add    BYTE PTR [eax],0x8
  415315:	or     BYTE PTR [esi],bl
  415317:	les    esp,FWORD PTR [eax]
  415319:	or     BYTE PTR [eax],bl
  41531b:	cmp    BYTE PTR [eax],dl
  41531d:	add    DWORD PTR [eax],edx
  41531f:	add    BYTE PTR ds:0x40084041,al
  415325:	add    BYTE PTR [eax],cl
  415327:	add    al,0x0
  415329:	add    BYTE PTR [ebx],al
  41532b:	add    BYTE PTR [eax+eax*1],cl
  41532e:	or     BYTE PTR [eax+0x400a520],al
  415334:	loope  0x4152c6
  415336:	and    al,0xe
  415338:	add    DWORD PTR [eax],eax
  41533a:	add    DWORD PTR [eax-0x7ffffede],0xc404604
  415344:	inc    ebp
  415345:	inc    eax
  415346:	ret    
  415347:	adc    eax,0x40010020
  41534c:	add    BYTE PTR [eax],al
  41534e:	add    BYTE PTR [eax],ah
  415350:	and    BYTE PTR [eax],0x30
  415353:	add    BYTE PTR [eax+0x1248400],al
  415359:	dec    eax
  41535a:	adc    BYTE PTR [eax+0x5],dl
  41535d:	add    BYTE PTR [eax+0x3202100],ah
  415363:	add    BYTE PTR [eax],al
  415365:	and    BYTE PTR [ebx],bh
  415367:	add    DWORD PTR [eax],ebx
  415369:	sub    BYTE PTR [eax],dl
  41536b:	add    BYTE PTR [ebp+0x50],cl
  41536e:	push   eax
  41536f:	adc    BYTE PTR [eax],ah
  415371:	add    BYTE PTR [eax],al
  415373:	or     al,dl
  415375:	xchg   edx,eax
  415376:	add    al,0x40
  415378:	add    BYTE PTR [ecx],al
  41537a:	inc    esp
  41537b:	or     DWORD PTR [eax],eax
  41537d:	add    BYTE PTR [eax],al
  41537f:	inc    esp
  415380:	inc    ebp
  415381:	dec    eax
  415382:	inc    ecx
  415383:	inc    eax
  415384:	inc    eax
  415385:	add    BYTE PTR [edx+0x0],al
  415388:	adc    BYTE PTR [ebx],al
  41538a:	adc    BYTE PTR [ecx+eax*1],al
  41538d:	add    BYTE PTR [ebx+0x2],ah
  415390:	add    BYTE PTR [eax-0x33fbef00],ah
  415396:	add    al,al
  415398:	test   BYTE PTR [eax+0x7910004],al
  41539e:	inc    eax
  41539f:	mov    BYTE PTR [ebx],0xc2
  4153a2:	adc    BYTE PTR [eax],dl
  4153a4:	add    DWORD PTR [eax],eax
  4153a6:	add    al,0x11
  4153a8:	add    edx,DWORD PTR [eax+0x10500041]
  4153ae:	add    ecx,ecx
  4153b0:	xchg   ecx,eax
  4153b1:	add    ah,BYTE PTR [eax]
  4153b3:	add    BYTE PTR [eax],bl
  4153b5:	add    BYTE PTR [eax],al
  4153b7:	or     BYTE PTR [eax+eax*1],0x40
  4153bb:	add    BYTE PTR [eax+0x17],al
  4153be:	and    DWORD PTR [eax],eax
  4153c0:	add    BYTE PTR [eax+0x10],al
  4153c3:	or     ah,BYTE PTR [eax]
  4153c5:	push   ds
  4153c6:	adc    al,0x28
  4153c8:	mov    al,ds:0x220188
  4153cd:	add    BYTE PTR [esi+0x2006a],ah
  4153d3:	retf   
  4153d4:	dec    eax
  4153d5:	add    al,0x80
  4153d7:	mov    BYTE PTR [eax],al
  4153d9:	in     al,0x4
  4153db:	sub    BYTE PTR [eax],al
  4153dd:	add    edx,DWORD PTR [eax]
  4153df:	sbb    DWORD PTR [eax+0x20202800],eax
  4153e5:	adc    esp,DWORD PTR [eax]
  4153e7:	add    BYTE PTR [eax],ah
  4153e9:	rol    DWORD PTR [eax+edx*4],0x20
  4153ed:	or     BYTE PTR [eax+0x2000500],al
  4153f3:	adc    BYTE PTR [eax],al
  4153f5:	and    eax,DWORD PTR [eax]
  4153f7:	inc    ecx
  4153f8:	sub    dl,BYTE PTR [eax+0x0]
  4153fb:	adc    DWORD PTR [edx],eax
  4153fd:	xchg   edx,eax
  4153fe:	or     al,BYTE PTR [eax]
  415400:	add    BYTE PTR [ecx],al
  415402:	and    al,0x10
  415404:	add    BYTE PTR [eax],ah
  415406:	adc    BYTE PTR [eax+0x244005c0],ah
  41540c:	and    BYTE PTR [ebx],al
  41540e:	mov    BYTE PTR [eax],al
  415410:	add    al,0x80
  415412:	test   BYTE PTR [edi+0x103002],al
  415418:	xchg   ebp,eax
  415419:	mov    DWORD PTR [ebp+0x10022411],eax
  41541f:	inc    eax
  415420:	push   es
  415421:	adc    BYTE PTR [ecx],0xaa
  415424:	inc    esp
  415425:	adc    BYTE PTR [edi+0x8],cl
  415428:	add    al,0x0
  41542a:	add    BYTE PTR [eax],al
  41542c:	add    BYTE PTR [ecx],0x10
  41542f:	and    BYTE PTR [eax+ecx*2-0x50],dh
  415433:	adc    BYTE PTR [eax],cl
  415435:	add    BYTE PTR [eax+0x5],ah
  415438:	add    BYTE PTR [ecx+ecx*1],0x86
  41543c:	outs   dx,BYTE PTR ds:[esi]
  41543d:	inc    eax
  41543e:	adc    BYTE PTR [ecx],ch
  415440:	inc    edx
  415441:	adc    al,0x83
  415443:	add    al,0x2
  415445:	and    DWORD PTR [ecx-0x40],ecx
  415448:	add    dl,al
  41544a:	popa   
  41544b:	and    al,0xa0
  41544d:	and    al,BYTE PTR [eax]
  41544f:	and    DWORD PTR [eax-0x7affffe0],ecx
  415455:	inc    eax
  415456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415457:	mov    DWORD PTR [ecx],edx
  415459:	add    BYTE PTR [ebx],ah
  41545b:	inc    edx
  41545c:	add    al,0x80
  41545e:	add    BYTE PTR [eax],al
  415460:	pop    eax
  415461:	add    BYTE PTR [ecx],dl
  415463:	mov    DWORD PTR [eax],eax
  415465:	add    BYTE PTR [eax],dl
  415467:	scas   eax,DWORD PTR es:[edi]
  415468:	add    BYTE PTR [eax],ch
  41546a:	adc    BYTE PTR [eax],bl
  41546c:	and    al,0xc0
  41546e:	(bad)  
  415470:	stos   BYTE PTR es:[edi],al
  415471:	adc    BYTE PTR [edx+0x41a20002],al
  415477:	add    BYTE PTR [eax],ah
  415479:	and    dl,BYTE PTR [ecx-0x28]
  41547c:	add    BYTE PTR [eax+0x2a08a88],al
  415482:	add    al,0x2
  415484:	and    DWORD PTR [eax],eax
  415486:	and    BYTE PTR [ecx],ah
  415488:	inc    ecx
  415489:	dec    esp
  41548a:	mov    ch,BYTE PTR [eax+ecx*1]
  41548d:	nop
  41548e:	call   0xa101:0x714424
  415495:	adc    BYTE PTR [eax-0x3f],ah
  415498:	sbb    BYTE PTR [eax],cl
  41549a:	inc    edx
  41549b:	pop    es
  41549c:	and    DWORD PTR [eax+0x54820100],eax
  4154a2:	add    BYTE PTR [eax],dl
  4154a4:	add    DWORD PTR [esi+0x60211500],eax
  4154aa:	pop    eax
  4154ab:	add    bl,BYTE PTR [ecx-0x7e]
  4154ae:	jmp    0xa05594b8
  4154b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b4:	add    BYTE PTR [ecx],al
  4154b6:	ins    BYTE PTR es:[edi],dx
  4154b7:	adc    al,BYTE PTR [ecx]
  4154b9:	inc    eax
  4154ba:	and    dl,0x81
  4154bd:	add    DWORD PTR [ecx+0x30080b2],esp
  4154c3:	(bad)  
  4154c4:	add    BYTE PTR [ecx],ah
  4154c6:	add    BYTE PTR [edx+0x6528],0x20
  4154cd:	adc    BYTE PTR [ecx+eax*2+0x1],cl
  4154d1:	or     BYTE PTR [eax],al
  4154d3:	add    BYTE PTR [eax],0x3
  4154d6:	inc    edx
  4154d7:	add    BYTE PTR [eax],cl
  4154d9:	add    BYTE PTR [eax],al
  4154db:	add    al,BYTE PTR [eax]
  4154dd:	xchg   edx,eax
  4154de:	add    al,BYTE PTR [eax]
  4154e0:	add    DWORD PTR [ecx+0x40],eax
  4154e3:	ret    0x41
  4154e6:	add    BYTE PTR [eax+esi*4+0x4],al
  4154ea:	push   es
  4154eb:	add    al,BYTE PTR [edx+0x42a09484]
  4154f1:	pop    eax
  4154f2:	add    BYTE PTR [eax],0x0
  4154f5:	sbb    BYTE PTR [edx+0xc],0x0
  4154f9:	cmp    BYTE PTR [eax],cl
  4154fb:	mov    al,ds:0x8c804
  415500:	add    al,0x0
  415502:	aaa    
  415503:	dec    ecx
  415504:	dec    esp
  415505:	add    DWORD PTR [edx],eax
  415507:	gs inc eax
  415509:	sbb    al,0x10
  41550b:	add    BYTE PTR [edx],al
  41550d:	dec    esi
  41550e:	mov    cl,0xa0
  415510:	or     BYTE PTR [ecx],ch
  415512:	add    BYTE PTR [edx],0x0
  415515:	mov    ah,0x0
  415517:	or     BYTE PTR [ecx+ecx*1],al
  41551a:	add    BYTE PTR [ecx+0x0],al
  41551d:	or     BYTE PTR [eax+0x71],al
  415520:	inc    eax
  415521:	nop
  415522:	inc    eax
  415523:	adc    al,0x1
  415525:	inc    esi
  415526:	add    BYTE PTR [eax],al
  415528:	test   BYTE PTR [eax],al
  41552a:	or     BYTE PTR [eax],cl
  41552c:	add    BYTE PTR [eax],0x20
  41552f:	test   eax,0x623880
  415534:	and    BYTE PTR [edx],al
  415536:	add    BYTE PTR [eax+0xc],ah
  415539:	push   ecx
  41553a:	adc    al,0x18
  41553c:	adc    BYTE PTR [ebx],al
  41553e:	push   cs
  41553f:	add    BYTE PTR [edx],cl
  415541:	jo     0x41556c
  415543:	add    BYTE PTR [esi+0x30],ch
  415546:	inc    eax
  415547:	add    BYTE PTR [ecx+eiz*4+0x430b0041],al
  41554e:	add    al,0x0
  415550:	add    DWORD PTR [eax],eax
  415552:	add    BYTE PTR [eax-0x70],al
  415555:	out    0x84,eax
  415557:	add    BYTE PTR [edx+0x8400404],al
  41555d:	sbb    DWORD PTR [ebx+ecx*2],ecx
  415560:	inc    eax
  415561:	inc    eax
  415562:	add    BYTE PTR [eax+0x8],dl
  415565:	and    BYTE PTR [eax+eax*4],0x42
  415569:	add    DWORD PTR [ecx+0x1010000],eax
  41556f:	pop    ss
  415570:	or     BYTE PTR [eax],al
  415572:	daa    
  415573:	add    cl,BYTE PTR [eax+0x50400004]
  415579:	daa    
  41557a:	add    BYTE PTR [edx],dl
  41557c:	adc    BYTE PTR [ecx+0x61808540],al
  415582:	add    DWORD PTR [ebx],0x11000600
  415588:	add    BYTE PTR [ebp+edx*1+0x20],al
  41558c:	add    BYTE PTR [eax+0x4],0x84
  415590:	inc    ebp
  415591:	add    al,BYTE PTR [eax]
  415593:	cmp    DWORD PTR [ecx],eax
  415595:	test   BYTE PTR [eax],al
  415597:	add    BYTE PTR [eax],al
  415599:	and    BYTE PTR [eax+0x2],al
  41559c:	and    dl,BYTE PTR [eax+0x20]
  41559f:	or     BYTE PTR [eax],al
  4155a1:	and    BYTE PTR [eax-0x68],cl
  4155a4:	and    dl,BYTE PTR [eax+edx*1]
  4155a7:	mov    ds:0x8110866a,eax
  4155ac:	and    BYTE PTR [ecx],bl
  4155ae:	add    esp,DWORD PTR [ecx-0x1c]
  4155b1:	and    BYTE PTR [eax-0x7bab1e00],al
  4155b7:	add    BYTE PTR [eax+eiz*4],al
  4155ba:	test   DWORD PTR [eax],ebp
  4155bc:	add    DWORD PTR [eax-0x80],esp
  4155bf:	add    BYTE PTR [eax+ecx*2],al
  4155c2:	pusha  
  4155c3:	pusha  
  4155c4:	add    BYTE PTR [ecx+0xa0d561],0x7
  4155cb:	and    BYTE PTR [ebx+0x4205007],dl
  4155d1:	adc    ah,BYTE PTR [edx]
  4155d3:	inc    esp
  4155d4:	and    BYTE PTR [eax+0x20],al
  4155d7:	add    DWORD PTR [ebx+0x60400004],edx
  4155dd:	les    eax,FWORD PTR [eax]
  4155df:	or     BYTE PTR [eax],al
  4155e1:	add    BYTE PTR [eax+edx*1],al
  4155e4:	rol    BYTE PTR [ecx],1
  4155e6:	nop
  4155e7:	add    BYTE PTR [edx],ah
  4155e9:	or     BYTE PTR [eax],ah
  4155eb:	or     cl,BYTE PTR [eax]
  4155ed:	rcl    al,0x2
  4155f0:	add    BYTE PTR [eax],al
  4155f2:	pusha  
  4155f3:	xor    al,BYTE PTR [eax]
  4155f5:	or     DWORD PTR [edx],esp
  4155f7:	and    BYTE PTR [eax+0x0],al
  4155fa:	add    BYTE PTR [eax+0x4003020],al
  415600:	inc    eax
  415601:	adc    BYTE PTR [eax],al
  415603:	inc    edx
  415604:	add    BYTE PTR [eax],al
  415606:	xor    BYTE PTR [eax],0x4
  415609:	push   eax
  41560a:	or     BYTE PTR [esi],al
  41560c:	mov    al,fs:0x48844506
  415612:	add    BYTE PTR [eax-0x6c],al
  415615:	add    BYTE PTR [edx],al
  415617:	add    BYTE PTR [eax],0x46
  41561a:	inc    ecx
  41561b:	in     eax,0x20
  41561d:	jb     0x41566f
  41561f:	inc    ecx
  415620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415621:	inc    esi
  415622:	add    dl,BYTE PTR [eax]
  415624:	inc    eax
  415625:	adc    al,0x10
  415627:	adc    BYTE PTR [edx-0x577fffc0],dl
  41562d:	push   eax
  41562e:	add    BYTE PTR [eax],0x50
  415631:	test   cl,al
  415633:	add    DWORD PTR [eax+edx*1],eax
  415636:	inc    ebp
  415637:	mov    cl,0x20
  415639:	inc    edx
  41563a:	adc    BYTE PTR [edx],al
  41563c:	add    BYTE PTR [eax],al
  41563e:	add    BYTE PTR [ecx+0x8],al
  415641:	or     BYTE PTR [eax-0x7ff7f3ad],dl
  415647:	and    al,0x46
  415649:	add    BYTE PTR [eax],0x88
  41564c:	add    DWORD PTR [ecx+0x9],eax
  41564f:	add    al,0x0
  415651:	inc    eax
  415652:	add    BYTE PTR [eax],0x9
  415655:	xor    eax,0x8092241
  41565a:	push   es
  41565b:	or     BYTE PTR [eax],dh
  41565d:	mov    ah,BYTE PTR [ebx]
  41565f:	add    BYTE PTR [ecx+eax*2+0x35],dl
  415663:	add    cl,BYTE PTR [eax]
  415665:	add    al,0x50
  415667:	add    BYTE PTR [eax],0x8
  41566a:	add    BYTE PTR [eax+eax*1],cl
  41566d:	add    BYTE PTR [ebx],dl
  41566f:	add    eax,0x80211110
  415674:	push   eax
  415675:	add    BYTE PTR [eax],cl
  415677:	adc    DWORD PTR [eax],eax
  415679:	inc    ecx
  41567a:	adc    BYTE PTR [edx+0xc],0x10
  41567e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567f:	cmp    DWORD PTR [eax-0x5c7f8000],eax
  415685:	add    BYTE PTR [eax],al
  415687:	add    BYTE PTR [edx],0x0
  41568a:	or     BYTE PTR [edx],dl
  41568c:	add    al,0x0
  41568e:	add    BYTE PTR [eax],al
  415690:	add    BYTE PTR [eax],al
  415692:	mov    BYTE PTR fs:[edx+0x1],al
  415696:	and    DWORD PTR [eax],eax
  415698:	adc    BYTE PTR [eax],al
  41569a:	add    BYTE PTR [esi+0x4],ch
  41569d:	push   cs
  41569e:	add    al,0x0
  4156a0:	cmp    BYTE PTR ds:0x24cf80c,0x20
  4156a7:	add    BYTE PTR [eax],al
  4156a9:	add    al,0x0
  4156ab:	sub    BYTE PTR [eax+edx*1+0x8],al
  4156af:	add    al,0x0
  4156b1:	adc    DWORD PTR [eax],eax
  4156b3:	add    DWORD PTR [ecx+0x8],edx
  4156b6:	pop    ecx
  4156b7:	les    ecx,FWORD PTR [ecx+edx*4]
  4156ba:	and    DWORD PTR [eax],0xffffffa0
  4156bd:	or     BYTE PTR [ecx+0x41],al
  4156c0:	dec    eax
  4156c1:	bound  esp,QWORD PTR [eax]
  4156c3:	xor    BYTE PTR [ebx-0x80],cl
  4156c6:	sub    DWORD PTR [ebp+0x33a48a01],eax
  4156cc:	mov    al,ds:0x2800740
  4156d1:	push   es
  4156d2:	mov    al,ds:0x482049
  4156d7:	adc    DWORD PTR [edx+0x23],esp
  4156da:	rol    BYTE PTR [ecx+eax*1],0x42
  4156de:	pop    es
  4156df:	add    DWORD PTR [eax+0x0],0x158000c4
  4156e6:	adc    al,BYTE PTR [eax]
  4156e8:	jo     0x41566b
  4156ea:	inc    esi
  4156eb:	add    BYTE PTR [eax+0x802000],0x84
  4156f2:	add    cl,cl
  4156f4:	add    BYTE PTR [ebp-0x1fbf7d30],ah
  4156fa:	add    al,0x62
  4156fc:	adc    BYTE PTR [eax],cl
  4156fe:	xor    esi,esp
  415700:	mov    al,0x44
  415702:	add    BYTE PTR [ebx],cl
  415704:	add    BYTE PTR [eax-0x4ef7bed6],ah
  41570a:	add    BYTE PTR [eax+0x410520],cl
  415710:	add    DWORD PTR ds:0x48812000,edi
  415716:	or     BYTE PTR [eax],al
  415718:	adc    BYTE PTR [ebx-0x5f],al
  41571b:	add    dl,bl
  41571d:	call   0xc0c1:0x6191
  415723:	add    eax,DWORD PTR [edx+0x2]
  415726:	add    BYTE PTR [ecx+0x4],dh
  415729:	and    BYTE PTR ds:0x19083948,0xa0
  415730:	inc    eax
  415731:	inc    esi
  415732:	add    BYTE PTR [eax],dl
  415734:	nop
  415735:	adc    al,0x45
  415737:	add    BYTE PTR [esi],al
  415739:	inc    eax
  41573a:	or     al,BYTE PTR [edx]
  41573c:	sbb    al,0x3c
  41573e:	add    al,0x0
  415740:	add    BYTE PTR [eax],al
  415742:	inc    ebx
  415743:	adc    DWORD PTR [eax+eax*1-0x30df0000],0x1b327197
  41574e:	std    
  41574f:	fisub  WORD PTR [ebx]
  415751:	(bad)  
  415752:	fisubr WORD PTR [edi]
  415754:	shl    BYTE PTR [ebp-0x47],cl
  415757:	gs pop esi
  415759:	icebp  
  41575a:	test   al,0xff
  41575c:	repz and ah,cl
  41575f:	lds    eax,FWORD PTR [ebx-0x9]
  415762:	retf   0x5ef3
  415765:	hlt    
  415766:	shl    ch,1
  415768:	mov    al,0xb5
  41576a:	(bad)  
  41576b:	push   cx
  41576d:	mov    al,0x70
  41576f:	popa   
  415770:	rcr    DWORD PTR ds:0x45332f36,cl
  415776:	jo     0x4157d9
  415778:	shl    BYTE PTR [ebp-0x3a],cl
  41577b:	ins    BYTE PTR es:[edi],dx
  41577c:	dec    ecx
  41577d:	add    dh,BYTE PTR [ebp+0x61]
  415780:	dec    esp
  415781:	or     edi,eax
  415783:	lock add eax,0xd3b48601
  415789:	or     ecx,ecx
  41578b:	repnz inc edi
  41578d:	or     ecx,eax
  41578f:	retf   0x947
  415792:	mov    ecx,edx
  415794:	mov    WORD PTR [ebp-0x26],si
  415798:	xchg   ebx,eax
  415799:	jmp    0x2aab0d73
  41579e:	mov    al,ds:0x69f3ab6e
  4157a3:	mov    esp,0xec6fb4d9
  4157a8:	and    ch,al
  4157aa:	shl    BYTE PTR [ebx-0x57],0x7d
  4157ae:	sub    cl,BYTE PTR [ebp-0x4bdad82f]
  4157b4:	mov    ds:0x1f6e068e,eax
  4157b9:	inc    ebp
  4157ba:	(bad)  
  4157bb:	imul   eax,esp,0x64
  4157be:	idiv   BYTE PTR [esi]
  4157c0:	fiadd  WORD PTR [eax-0x105c04d2]
  4157c6:	dec    ecx
  4157c7:	jns    0x4157c0
  4157c9:	push   es
  4157ca:	mov    cl,0x8a
  4157cc:	jmp    0x415833
  4157ce:	sub    al,0x24
  4157d0:	(bad)  
  4157d1:	out    0xa0,eax
  4157d3:	in     eax,dx
  4157d4:	aad    0x65
  4157d6:	xor    DWORD PTR [esi-0x56],edi
  4157d9:	jecxz  0x415855
  4157db:	(bad)  
  4157dc:	shl    BYTE PTR [ebp+0x7d],cl
  4157df:	pusha  
  4157e0:	shl    BYTE PTR [ebp+0x75],cl
  4157e3:	popa   
  4157e4:	jmp    0x41584b
  4157e6:	mul    bl
  4157e8:	mov    ah,BYTE PTR [esi+0x6a]
  4157eb:	in     eax,0x69
  4157ed:	bnd jne 0x415851
  4157f0:	xchg   esp,eax
  4157f1:	ins    WORD PTR es:[edi],dx
  4157f3:	adc    dl,dl
  4157f5:	mov    edi,0x65d2617a
  4157fa:	jne    0x415862
  4157fc:	adc    bh,dh
  4157fe:	or     DWORD PTR [edx-0x428c03c7],esp
  415804:	mov    bl,0xc8
  415806:	ja     0x415795
  415808:	pop    edi
  415809:	outs   dx,BYTE PTR ds:[esi]
  41580a:	outs   dx,DWORD PTR ds:[esi]
  41580b:	and    DWORD PTR [edi-0x19],ebp
  41580e:	lods   al,BYTE PTR ds:[esi]
  41580f:	xchg   ecx,eax
  415810:	ror    BYTE PTR [eax+0x669c6175],cl
  415816:	push   edx
  415817:	adc    edx,edx
  415819:	dec    ecx
  41581a:	jp     0x41587d
  41581c:	shl    BYTE PTR [edi+0x7b],cl
  41581f:	in     eax,0x49
  415821:	gs ret 
  415823:	cmc    
  415824:	inc    esi
  415825:	mov    fs:0x7ae2684e,eax
  41582b:	popa   
  41582c:	shl    BYTE PTR [ebp+0x79],cl
  41582f:	pusha  
  415830:	cld    
  415831:	xor    eax,0xe8d2edd1
  415836:	jne    0x415899
  415838:	popw   ss
  41583a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41583b:	xchg   edx,eax
  41583c:	mov    ecx,0xe1ec6989
  415841:	cmp    BYTE PTR [ebx-0x14],dh
  415844:	and    eax,0x64fa26e8
  415849:	mov    edx,0x65d2b6c7
  41584e:	jne    0x4158b0
  415850:	shl    DWORD PTR [ebp+0x3c],cl
  415853:	data16 fdivr st(2),st
  415856:	jne    0x4158c4
  415858:	test   BYTE PTR [edx],bh
  41585a:	dec    ebp
  41585b:	enter  0x39ed,0xb4
  41585f:	hlt    
  415860:	ror    DWORD PTR [ecx-0x21],1
  415863:	stc    
  415864:	jmp    0x2b4dae0e
  415869:	icebp  
  41586a:	shr    DWORD PTR [ebx-0x37],0xeb
  41586e:	and    DWORD PTR [ebp-0x2b],ecx
  415871:	add    BYTE PTR gs:[esi-0x2b],ah
  415875:	loope  0x4158f1
  415877:	lea    ebx,[edx+eiz*4+0x7a]
  41587b:	addr16 cmp al,0x8d
  41587e:	iret   
  41587f:	data16 shl BYTE PTR [ebp+0x64],cl
  415883:	pusha  
  415884:	xlat   BYTE PTR ds:[ebx]
  415885:	fs mov esi,0x7ab25ceb
  41588b:	popa   
  41588c:	sti    
  41588d:	out    dx,al
  41588e:	out    dx,al
  41588f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415890:	aad    0x65
  415892:	lock jle 0x4158fb
  415895:	loop   0x415911
  415897:	(bad)  
  415898:	shl    BYTE PTR [ebp+0x7d],cl
  41589b:	pusha  
  41589c:	out    dx,eax
  41589d:	gs sub al,0x24
  4158a0:	(bad)  
  4158a1:	xor    DWORD PTR [eax+0x352218ed],esp
  4158a7:	(bad)  
  4158a8:	sub    eax,ebp
  4158aa:	ins    DWORD PTR es:[edi],dx
  4158ab:	cmc    
  4158ac:	rcr    DWORD PTR [eax],1
  4158ae:	fsubr  DWORD PTR [esi+0x36]
  4158b1:	std    
  4158b2:	mov    ecx,0x76e8ebed
  4158b7:	ret    0xf2ee
  4158ba:	mov    BYTE PTR [esi-0x4b92c65f],0x5e
  4158c1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4158c3:	sahf   
  4158c4:	das    
  4158c5:	ins    DWORD PTR es:[edi],dx
  4158c6:	or     BYTE PTR [ebp+0x22],ah
  4158c9:	(bad)  
  4158ca:	iret   
  4158cb:	data16 shl BYTE PTR [ebp+0x30],cl
  4158cf:	pusha  
  4158d0:	out    0xf1,eax
  4158d2:	mov    esp,0x768dc6ab
  4158d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d8:	out    dx,al
  4158d9:	adc    BYTE PTR [esp+eax*2],ah
  4158dc:	aas    
  4158dd:	ins    DWORD PTR es:[edi],dx
  4158de:	xchg   ecx,eax
  4158df:	shl    DWORD PTR gs:[esi+0x20d1386a],1
  4158e6:	push   ebp
  4158e7:	fs das 
  4158e9:	ins    DWORD PTR es:[edi],dx
  4158ea:	cdq    
  4158eb:	shl    DWORD PTR gs:[edx],1
  4158ee:	out    dx,al
  4158ef:	data16 das 
  4158f1:	inc    ecx
  4158f2:	ins    DWORD PTR es:[edi],dx
  4158f3:	out    dx,al
  4158f4:	test   al,0xa0
  4158f6:	cdq    
  4158f7:	(bad)  
  4158f8:	aas    
  4158f9:	call   0x699dba6b
  4158fe:	dec    ecx
  4158ff:	popa   
  415900:	jmp    0x41588f
  415902:	jp     0x4158ff
  415904:	shl    BYTE PTR [ebp+0x1d],cl
  415907:	popa   
  415908:	out    dx,eax
  415909:	inc    ecx
  41590a:	sub    al,0xe9
  41590c:	(bad)  
  41590e:	repnz stos BYTE PTR es:[edi],al
  415910:	rcl    BYTE PTR [edx],cl
  415912:	aaa    
  415913:	push   0x6e
  415915:	mov    eax,ds:0x66cb72ee
  41591a:	dec    ecx
  41591b:	(bad)  
  41591c:	shl    dh,cl
  41591e:	jne    0x415981
  415920:	popa   
  415921:	push   eax
  415922:	mov    DWORD PTR [edx+0x66b5ea39],ecx
  415928:	loopne 0x41594f
  41592a:	mul    BYTE PTR [eax-0x35]
  41592d:	(bad)  [ebp-0x2f]
  415930:	shr    bh,cl
  415932:	jnp    0x415995
  415934:	dec    ebx
  415935:	pushf  
  415936:	mov    al,0x62
  415938:	sbb    ah,BYTE PTR [ebp+eax*8+0xa]
  41593c:	retf   
  41593d:	sbb    eax,eax
  41593f:	(bad)
  415944:	dec    ebx
  415945:	das    
  415946:	mov    al,0x7e
  415948:	fisub  DWORD PTR [ebp-0x1c]
  41594b:	sbb    ebx,ecx
  41594d:	sub    eax,eax
  41594f:	(bad)
  415954:	data16 and dh,BYTE PTR [eax+0x7939127a]
  41595b:	and    edx,DWORD PTR gs:[ecx+0x6a]
  41595f:	cmp    cl,dl
  415961:	pop    ebp
  415962:	call   0xeea24111
  415967:	(bad)  
  415968:	push   0x2262a012
  41596d:	push   ebp
  41596e:	inc    ebp
  41596f:	gs (bad) 
  415971:	jmp    0xf2a83562
  415976:	clc    
  415977:	jb     0x415953
  415979:	repnz inc ebp
  41597b:	mov    ebp,0x32d08d17
  415980:	data16 arpl ax,ax
  415983:	jns    0x415988
  415985:	popa   
  415986:	call   0xbf353535
  41598b:	stos   DWORD PTR es:[edi],eax
  41598c:	repz gs dec ecx
  41598f:	aas    
  415990:	adc    esi,DWORD PTR [di+0x61]
  415994:	dec    ebp
  415995:	out    0x78,al
  415997:	lods   al,BYTE PTR ds:[esi]
  415998:	call   0xde0e198e
  41599d:	mov    DWORD PTR [ecx+0x47],esi
  4159a0:	push   ebx
  4159a1:	aas    
  4159a2:	pop    ebp
  4159a3:	lods   al,BYTE PTR ds:[esi]
  4159a4:	sti    
  4159a5:	call   0x29a954f7
  4159aa:	scas   eax,DWORD PTR es:[edi]
  4159ab:	sbb    DWORD PTR [bp+si],ebp
  4159ae:	fs push 0xffffffe7
  4159b1:	cmp    BYTE PTR [ebp-0xc],al
  4159b4:	pop    esi
  4159b5:	ins    BYTE PTR es:[edi],dx
  4159b6:	test   al,0x72
  4159b8:	fcomip st,st(2)
  4159ba:	mov    esi,0x77e799d3
  4159bf:	dec    esp
  4159c0:	arpl   bp,dx
  4159c2:	mov    edi,0xe5e8fd16
  4159c7:	cli    
  4159c8:	ret    
  4159c9:	jbe    0x415a42
  4159cb:	mov    dl,BYTE PTR [edx*1-0xddc89bb]
  4159d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d3:	(bad)  
  4159d4:	pop    ecx
  4159d5:	jnp    0x415a4a
  4159d7:	loope  0x4159c5
  4159d9:	mov    BYTE PTR [esi-0x6],cl
  4159dc:	xchg   ecx,eax
  4159dd:	bound  esi,QWORD PTR [ecx]
  4159df:	in     eax,0x30
  4159e1:	scas   al,BYTE PTR es:[edi]
  4159e2:	jp     0x415a38
  4159e4:	rcl    BYTE PTR [edx],cl
  4159e6:	aaa    
  4159e7:	push   0x33
  4159e9:	call   0xfaa7ccdc
  4159ee:	rcl    BYTE PTR [edx+0x7d6de681],0x8f
  4159f5:	mov    cl,0x86
  4159f7:	pop    ebp
  4159f8:	inc    esp
  4159f9:	gs ja  0x415a45
  4159fc:	inc    ecx
  4159fd:	jae    0x415a74
  4159ff:	popa   
  415a00:	retf   
  415a01:	add    al,BYTE PTR [esi+0x75f0d22f]
  415a07:	popa   
  415a08:	xchg   ebx,eax
  415a09:	mov    ds,WORD PTR [ecx-0x219a2d4b]
  415a0f:	data16 sahf 
  415a11:	pusha  
  415a12:	mov    BYTE PTR [ebp+0x36b48de3],0xd2
  415a19:	gs stos BYTE PTR es:[edi],al
  415a1b:	pop    si
  415a1d:	jl     0x415a86
  415a1f:	and    DWORD PTR [ecx+0x24a1c089],ecx
  415a25:	and    DWORD PTR gs:[esi+0x9],ecx
  415a29:	test   al,0x75
  415a2b:	popa   
  415a2c:	retf   
  415a2d:	and    al,al
  415a2f:	xchg   esi,eax
  415a30:	ror    BYTE PTR [eax-0x715f9e8b],cl
  415a36:	lea    esi,[edx]
  415a38:	(bad)  
  415a39:	scas   al,BYTE PTR es:[edi]
  415a3a:	rcl    ebx,0x60
  415a3d:	sub    eax,0xc9eb824e
  415a42:	xor    al,0x46
  415a44:	shl    DWORD PTR [ebp+0x4d],cl
  415a47:	mov    dl,0xd3
  415a49:	cli    
  415a4a:	jne    0x4159ee
  415a4c:	inc    ecx
  415a4d:	outs   dx,DWORD PTR ds:[esi]
  415a4e:	jne    0x415ab1
  415a50:	in     al,dx
  415a51:	lock cmc 
  415a53:	(bad)  
  415a54:	frstpm(287 only) 
  415a56:	jae    0x415a3c
  415a58:	adc    esp,DWORD PTR [esi]
  415a5a:	ret    0xac64
  415a5d:	mov    cl,0xe0
  415a5f:	in     eax,dx
  415a60:	data16 jl 0x415ad7
  415a63:	fcmovnu st,st(6)
  415a65:	ret    0x768e
  415a68:	fisttp DWORD PTR gs:[di-0x14]
  415a6d:	out    dx,eax
  415a6e:	daa    
  415a6f:	sti    
  415a70:	loope  0x415a09
  415a72:	arpl   WORD PTR [ebx-0x4ac9d858],bp
  415a78:	shl    BYTE PTR [ebp+0x4d],cl
  415a7b:	jo     0x415a25
  415a7d:	mov    ?,WORD PTR [edx-0x6b]
  415a80:	shl    BYTE PTR [ebp+0x52],cl
  415a83:	popa   
  415a84:	scas   al,BYTE PTR es:[edi]
  415a85:	dec    ecx
  415a86:	(bad)  
  415a87:	je     0x415a94
  415a89:	out    dx,al
  415a8a:	stc    
  415a8b:	mov    dh,bh
  415a8d:	push   es
  415a8e:	stc    
  415a8f:	mov    ch,bl
  415a91:	gs sub al,0x24
  415a94:	(bad)  
  415a95:	loope  0x415a37
  415a97:	in     eax,dx
  415a98:	xor    ebp,eax
  415a9a:	xor    DWORD PTR [esi+0xf],esi
  415a9d:	gs mov al,0x6e
  415aa0:	ror    BYTE PTR [eax*2-0xbe0db9f],cl
  415aa7:	mov    esi,0x95c01566
  415aac:	fldenv [esi-0x47]
  415aaf:	out    0xd2,eax
  415ab1:	lock gs popa 
  415ab4:	push   eax
  415ab5:	cmp    DWORD PTR [ebp-0x35],ebp
  415ab8:	sub    al,0xf1
  415aba:	ja     0x415a8d
  415abc:	rcl    DWORD PTR [ebp+0x72],cl
  415abf:	mov    dl,0xc9
  415ac1:	test   DWORD PTR [ebp+0x61],esi
  415ac4:	jmp    0x415a53
  415ac6:	in     al,dx
  415ac7:	stos   DWORD PTR es:[edi],eax
  415ac8:	shl    BYTE PTR [ebp+0x75],cl
  415acb:	popa   
  415acc:	mov    esp,tr6
  415acf:	mov    dl,0xd3
  415ad1:	sbb    BYTE PTR [eax-0x5f],ah
  415ad4:	rcl    BYTE PTR [edi-0x18],0xe5
  415ad8:	and    cl,BYTE PTR [ebp+0x65d266b5]
  415ade:	inc    ebp
  415adf:	(bad)
  415ae4:	shl    BYTE PTR [ebp-0x73],cl
  415ae7:	push   0xec7657b4
  415aec:	imul   ebp,DWORD PTR [edx],0xffffffb5
  415aef:	adc    cx,WORD PTR ds:0x65d3cc7d
  415af6:	jne    0x415aa9
  415af8:	ror    DWORD PTR ds:0x6fa5cca4,cl
  415afe:	scas   eax,DWORD PTR es:[edi]
  415aff:	xchg   ebx,eax
  415b00:	ret    
  415b01:	mov    ?,WORD PTR [edx-0x5]
  415b04:	shl    BYTE PTR [ebp+0x47],cl
  415b07:	arpl   di,dx
  415b09:	jmp    0x415af7
  415b0b:	stos   DWORD PTR es:[edi],eax
  415b0c:	loopne 0x415b33
  415b0e:	push   es
  415b0f:	es push esp
  415b11:	jns    0x415b88
  415b13:	in     al,dx
  415b14:	(bad)  [ecx-0x12]
  415b17:	shl    DWORD PTR [ebp+0x6e8d5a71],cl
  415b1d:	fst    QWORD PTR [ecx]
  415b1f:	adc    edx,ebx
  415b21:	fs pusha 
  415b23:	mov    eax,ds:0x13558e9e
  415b28:	shl    DWORD PTR [edx+eiz*2-0x5f],cl
  415b2c:	loopne 0x415b53
  415b2e:	push   es
  415b2f:	inc    ebx
  415b30:	retf   
  415b31:	add    al,0x75
  415b33:	fcmovnbe st,st(2)
  415b35:	cmp    DWORD PTR [ecx+0x61],edi
  415b38:	loopne 0x415b5f
  415b3a:	test   BYTE PTR [edi+0x6c],0x40
  415b3e:	jne    0x415ad0
  415b40:	shl    BYTE PTR [edi+esi*2+0x61],cl
  415b44:	loopne 0x415b6b
  415b46:	push   es
  415b47:	dec    ebx
  415b48:	adc    ecx,DWORD PTR ds:0xe597cf75
  415b4e:	test   dl,bh
  415b50:	ret    
  415b51:	mov    ?,WORD PTR [edx-0x5]
  415b54:	shl    BYTE PTR [ebp+0x17],cl
  415b57:	arpl   di,bx
  415b59:	imul   ebp,esp,0x35606fab
  415b5f:	xchg   ecx,eax
  415b60:	shr    al,cl
  415b62:	ja     0x415bc5
  415b64:	cmp    cl,BYTE PTR [ebp+0x65d2d87d]
  415b6a:	(bad)  
  415b6b:	pusha  
  415b6c:	int3   
  415b6d:	push   edi
  415b6e:	mov    esi,0xb5e2e5e5
  415b73:	data16 shl BYTE PTR [ebp+0x4b],cl
  415b77:	addr16 retf 
  415b79:	pop    esp
  415b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7b:	(bad)  
  415b7d:	cmp    DWORD PTR [ecx+0x61],edi
  415b80:	loopne 0x415ba7
  415b82:	test   BYTE PTR [edi+0x6c],0x98
  415b86:	jne    0x415b18
  415b88:	shr    al,cl
  415b8a:	je     0x415bed
  415b8c:	imul   edi,edx,0x65176ec0
  415b92:	inc    ecx
  415b93:	aas    
  415b94:	sbb    ebp,DWORD PTR [ecx+0x75]
  415b97:	popa   
  415b98:	shl    DWORD PTR [eax-0x44],1
  415b9b:	hlt    
  415b9c:	pop    esp
  415b9d:	ins    DWORD PTR es:[edi],dx
  415b9e:	adc    ebp,ebp
  415ba0:	fbld   TBYTE PTR [ecx-0x12]
  415ba3:	jecxz  0x415b93
  415ba5:	repz cli 
  415ba7:	mov    ds:0xc8b92366,al
  415bac:	push   0x24cb632c
  415bb1:	jno    0x415c16
  415bb3:	in     al,dx
  415bb4:	pop    ss
  415bb5:	pcmpeqd mm5,QWORD PTR [esi-0x2a8adab7]
  415bbc:	and    esp,DWORD PTR [edx+edi*2-0x9]
  415bc0:	dec    edx
  415bc1:	xor    al,0xc0
  415bc3:	outs   dx,BYTE PTR ds:[esi]
  415bc4:	loop   0x415c2a
  415bc6:	retf   0xcb68
  415bc9:	dec    ecx
  415bca:	shl    BYTE PTR [esi-0x2e],0x1e
  415bce:	js     0x415c31
  415bd0:	jmp    0x415bba
  415bd2:	out    dx,al
  415bd3:	jecxz  0x415c3b
  415bd5:	stos   DWORD PTR es:[edi],eax
  415bd6:	sar    BYTE PTR [edx+0x17],0xe8
  415bda:	jbe    0x415baf
  415bdc:	faddp  st(2),st
  415bde:	lods   al,BYTE PTR ds:[esi]
  415bdf:	(bad)  
  415be1:	pusha  
  415be2:	out    dx,al
  415be3:	ret    
  415be4:	loop   0x415ba2
  415be6:	fisub  WORD PTR [edx+0x68aebce5]
  415bec:	fs icebp 
  415bee:	(bad)  
  415bef:	call   0x60eb:0x9e9b163d
  415bf6:	out    dx,al
  415bf7:	jecxz  0x415c5f
  415bf9:	sub    edi,ebx
  415bfb:	xchg   edx,eax
  415bfc:	cs cmp eax,0x7daaec6d
  415c02:	lods   eax,DWORD PTR ds:[esi]
  415c03:	gs stos DWORD PTR es:[edi],eax
  415c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c06:	and    eax,0x4ca50185
  415c0b:	sub    ax,WORD PTR fs:[esi+0xd]
  415c10:	push   ebp
  415c11:	imul   esp,DWORD PTR [ebp-0x14],0xf8ee60ff
  415c18:	out    dx,al
  415c19:	cli    
  415c1a:	sar    BYTE PTR [edx-0x71],0x1f
  415c1e:	ins    DWORD PTR es:[edi],dx
  415c1f:	je     0x415bce
  415c21:	dec    esi
  415c22:	frstpm(287 only) 
  415c24:	shl    bl,cl
  415c26:	push   edi
  415c27:	push   edx
  415c28:	je     0x415c85
  415c2a:	inc    ecx
  415c2b:	into   
  415c2c:	shl    bl,cl
  415c2e:	into   
  415c2f:	lds    ebp,FWORD PTR [edi+0x664e457a]
  415c35:	call   0x6613bdb4
  415c3a:	icebp  
  415c3b:	data16 data16 fcom DWORD PTR [esi-0x33]
  415c40:	shl    BYTE PTR [ebp-0xb],cl
  415c43:	data16 jmp 0x415c2e
  415c46:	jbe    0x415c0a
  415c48:	out    0x73,al
  415c4a:	(bad)  
  415c4b:	xchg   edx,eax
  415c4c:	out    dx,al
  415c4d:	repnz rcr ebp,0xcb
  415c51:	jmp    FWORD PTR [ebp-0x25]
  415c54:	shr    BYTE PTR [ecx+0x7e],cl
  415c57:	popa   
  415c58:	loope  0x415c6d
  415c5a:	xor    eax,0xcda794fb
  415c5f:	adc    ebx,DWORD PTR [ebp+esi*2-0x46]
  415c63:	popa   
  415c64:	xlat   BYTE PTR ds:[ebx]
  415c65:	gs dec ebp
  415c67:	pop    ss
  415c68:	xchg   edx,eax
  415c69:	bnd jp 0x415cd9
  415c6c:	mov    ds:0x66ed82e9,eax
  415c71:	xor    dh,bh
  415c73:	xchg   esi,eax
  415c74:	pop    esp
  415c75:	outs   dx,BYTE PTR ds:[si]
  415c77:	jnp    0x415c67
  415c79:	repnz out dx,al
  415c7b:	jns    0x415cd4
  415c7d:	ins    DWORD PTR es:[edi],dx
  415c7e:	ins    DWORD PTR es:[edi],dx
  415c7f:	fs xchg edx,eax
  415c81:	repnz or BYTE PTR [ebp-0x67],ch
  415c85:	jbe    0x415c21
  415c87:	xchg   ecx,eax
  415c88:	in     al,dx
  415c89:	pusha  
  415c8a:	call   0x216e:0xb02512f4
  415c91:	or     eax,0xae57d6a7
  415c96:	jp     0x415c19
  415c98:	ret    
  415c99:	mov    ?,WORD PTR [edx-0x5]
  415c9c:	shl    BYTE PTR [ebp-0x21],cl
  415c9f:	(bad)  
  415ca0:	(bad)  
  415ca1:	call   0x25f6:0x88ff0ddf
  415ca8:	cmp    al,0x6d
  415caa:	sbb    ebp,ebp
  415cac:	jmp    0x415d0e
  415cae:	out    dx,al
  415caf:	ret    
  415cb0:	push   es
  415cb1:	adc    dh,bl
  415cb3:	mov    ds:0xfa810323,al
  415cb8:	dec    esi
  415cb9:	push   ebx
  415cba:	push   0x3f
  415cbc:	sub    esp,eax
  415cbe:	jne    0x415cb7
  415cc0:	shl    DWORD PTR [ebp+0x3e],cl
  415cc3:	or     bl,BYTE PTR [esi+0x24]
  415cc6:	jne    0x415d29
  415cc8:	jmp    0x415d2a
  415cca:	out    dx,al
  415ccb:	sti    
  415ccc:	shl    DWORD PTR [ebp+0x6],cl
  415ccf:	push   es
  415cd0:	adc    eax,0x69ec7560
  415cd5:	sub    edi,eax
  415cd7:	outs   dx,BYTE PTR ds:[esi]
  415cd8:	enter  0x716e,0xe4
  415cdc:	into   
  415cdd:	dec    ebp
  415cde:	and    al,0x4f
  415ce0:	dec    ebp
  415ce1:	retf   0x3308
  415ce4:	shl    DWORD PTR ds:0x640f0fd3,cl
  415cea:	shr    DWORD PTR [esi-0x2e],0x66
  415cee:	push   0x61
  415cf0:	mov    cl,0x74
  415cf2:	popa   
  415cf3:	mov    ecx,0xabee60eb
  415cf8:	shl    DWORD PTR [ebp-0xa],cl
  415cfb:	push   es
  415cfc:	push   ecx
  415cfd:	shl    DWORD PTR [ebp+0x64],0xd2
  415d01:	cmp    BYTE PTR [ebp+0x61],dh
  415d04:	test   eax,0xd3f445e9
  415d09:	gs out dx,al
  415d0b:	sub    ch,bl
  415d0d:	fs jne 0x415d54
  415d10:	retf   0xc07a
  415d13:	outs   dx,BYTE PTR ds:[esi]
  415d14:	rol    BYTE PTR [edx],cl
  415d16:	jle    0x415d79
  415d18:	shl    DWORD PTR [ebp+0x14],cl
  415d1b:	mov    dh,0x13
  415d1d:	imul   esi,DWORD PTR [ebp-0x14],0xa6eee8e7
  415d24:	data16 adc ch,BYTE PTR [ebp+0x6d5d239e]
  415d2b:	mov    esi,0x6fc16569
  415d30:	sti    
  415d31:	repnz mov esp,0x41e802ae
  415d37:	dec    ebp
  415d38:	out    dx,al
  415d39:	sub    ch,BYTE PTR [esi+0x6d592b8e]
  415d3f:	out    dx,al
  415d40:	out    dx,eax
  415d41:	lods   al,BYTE PTR ds:[esi]
  415d42:	in     al,dx
  415d43:	rcl    eax,cl
  415d45:	gs mov ch,0x86
  415d48:	dec    esp
  415d49:	jl     0x415dc0
  415d4b:	popa   
  415d4c:	rol    DWORD PTR [ebp-0x4a],cl
  415d4f:	cwde   
  415d50:	lods   eax,DWORD PTR ds:[esi]
  415d51:	and    eax,eax
  415d53:	imul   edx,edx,0x2f616565
  415d59:	inc    ecx
  415d5a:	jne    0x415d84
  415d5c:	shl    BYTE PTR [ebp-0x67],cl
  415d5f:	data16 test al,0xa0
  415d62:	jne    0x415d2a
  415d64:	dec    eax
  415d65:	gs jno 0x415dc9
  415d68:	jp     0x415dbf
  415d6a:	int    0x52
  415d6c:	pop    esp
  415d6d:	jne    0x415cff
  415d6f:	popa   
  415d70:	(bad)  
  415d71:	gs dec ebp
  415d73:	jmp    0x415d90
  415d75:	pop    ds
  415d76:	jp     0x415d4b
  415d78:	out    dx,al
  415d79:	add    esp,ebp
  415d7b:	mov    esi,0x6577f6eb
  415d80:	fwait
  415d81:	mov    al,ds:0xa712e77a
  415d86:	in     al,0x67
  415d88:	fld    TBYTE PTR [edi+0x60]
  415d8b:	sub    esi,edx
  415d8d:	mov    edi,0x6f9e9099
  415d92:	jge    0x415dfa
  415d94:	fwait
  415d95:	sub    BYTE PTR [bx+0x11e9],al
  415d9a:	test   eax,0xcd455e26
  415d9f:	iret   
  415da0:	inc    ecx
  415da1:	hlt    
  415da2:	imul   esi,ecx,0x30
  415da5:	or     dl,dl
  415da7:	leave  
  415da8:	sub    cl,BYTE PTR [ebx]
  415daa:	repnz lds ebx,FWORD PTR [edi-0x74]
  415dae:	call   0x7bcb:0xd79582d1
  415db5:	push   cs
  415db6:	rol    cl,0x22
  415db9:	sti    
  415dba:	jae    0x415d61
  415dbc:	inc    edi
  415dbd:	hlt    
  415dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbf:	gs add eax,0xecbd16a
  415dc5:	sub    esp,ebp
  415dc7:	ins    BYTE PTR es:[edi],dx
  415dc8:	rcr    esi,cl
  415dca:	mov    cl,0x69
  415dcc:	cs jge 0x415e48
  415dcf:	fistp  QWORD PTR [edx]
  415dd1:	popa   
  415dd2:	out    0x6c,eax
  415dd4:	dec    esp
  415dd5:	imul   ebx,ebp,0x8ff9eba0
  415ddb:	rcl    DWORD PTR [ecx+0x4ba5bd24],0x45
  415de2:	mov    esp,0x89232f84
  415de7:	adc    BYTE PTR [ebx+0x56],dl
  415dea:	scas   eax,DWORD PTR es:[edi]
  415deb:	mov    edx,0xd26d66eb
  415df0:	pop    ds
  415df1:	sar    BYTE PTR [ebp+0x54edd895],1
  415df7:	mov    ?,WORD PTR [ebx+0x222065e6]
  415dfd:	xor    eax,0x6debd330
  415e02:	mov    eax,0x3e272eec
  415e07:	loop   0x415e5a
  415e09:	pop    ss
  415e0a:	xchg   esp,eax
  415e0b:	xchg   ecx,eax
  415e0c:	dec    ebx
  415e0d:	in     eax,dx
  415e0e:	int3   
  415e0f:	lds    esp,FWORD PTR [ebx]
  415e11:	adc    eax,0x662722d5
  415e16:	mov    al,0xe6
  415e18:	call   0x22a62399
  415e1d:	push   ecx
  415e1e:	inc    ecx
  415e1f:	not    BYTE PTR [eax+0x6f]
  415e22:	xor    DWORD PTR [esi-0x57],eax
  415e25:	push   esi
  415e26:	je     0x415e94
  415e28:	out    dx,eax
  415e29:	push   edx
  415e2a:	mov    dl,0x76
  415e2c:	(bad)  
  415e2d:	pop    esi
  415e2e:	push   ebx
  415e2f:	push   0x226455e6
  415e34:	in     al,dx
  415e35:	das    
  415e36:	aaa    
  415e37:	mov    ch,BYTE PTR [edi+eiz*2]
  415e3a:	mov    ah,0x92
  415e3c:	shl    BYTE PTR [esi],1
  415e3e:	push   0x6f414293
  415e43:	imul   ebp,DWORD PTR [esi+eax*1],0x2cec92f5
  415e4a:	call   0x9aab9d4e
  415e4f:	jae    0x415e3c
  415e51:	into   
  415e52:	mov    ebp,0x6a72ce9f
  415e57:	mov    ebp,0xf5ccd633
  415e5c:	repz push ebp
  415e5e:	cld    
  415e5f:	sahf   
  415e60:	mov    al,0x18
  415e62:	stos   BYTE PTR es:[edi],al
  415e63:	scas   eax,DWORD PTR es:[edi]
  415e64:	add    eax,0x5b7d7459
  415e69:	mov    es,ecx
  415e6b:	retf   
  415e6c:	out    0xd6,eax
  415e6e:	call   0xf0744d8e
  415e73:	jl     0x415e57
  415e75:	and    BYTE PTR ds:0x876f2564,bh
  415e7b:	(bad)  
  415e7d:	imul   ebp,DWORD PTR [esi+eax*4-0xb74d0a2],0xfffffffc
  415e85:	add    eax,0x1fe093d6
  415e8a:	adc    DWORD PTR [edx],eax
  415e8c:	out    dx,eax
  415e8d:	mov    cl,0x64
  415e8f:	arpl   WORD PTR [esi],ax
  415e91:	cwd    
  415e93:	mov    fs,WORD PTR [esi+0x265efa91]
  415e99:	xor    al,0xc5
  415e9b:	ins    DWORD PTR es:[edi],dx
  415e9c:	or     edi,eax
  415e9e:	outs   dx,DWORD PTR ds:[esi]
  415e9f:	and    DWORD PTR [ebp+0x65],ecx
  415ea2:	pop    edi
  415ea3:	div    DWORD PTR [ebp-0x14]
  415ea6:	jp     0x415e5b
  415ea8:	sbb    eax,0x9f73a58d
  415ead:	rcr    DWORD PTR [edx-0x45e0906b],cl
  415eb3:	sbb    DWORD PTR [edx+0x6937355c],0x65
  415eba:	enter  0x54a,0x7
  415ebe:	hlt    
  415ebf:	sub    BYTE PTR [eax],bl
  415ec1:	xor    ch,ah
  415ec3:	mov    eax,ds:0xd1fa5c1b
  415ec8:	or     eax,0x206697cc
  415ecd:	or     ch,ch
  415ecf:	fild   DWORD PTR [ecx]
  415ed1:	cmp    cl,BYTE PTR [ecx+edx*4]
  415ed4:	mov    bl,0x6
  415ed6:	pop    eax
  415ed7:	call   0xeb0a:0x89656731
  415ede:	jne    0x415f5c
  415ee0:	cmp    ecx,DWORD PTR ds:0x4b9f222e
  415ee6:	outs   dx,BYTE PTR ds:[esi]
  415ee7:	fs xchg edi,eax
  415eea:	sbb    BYTE PTR [edi-0x6f11675d],ch
  415ef0:	out    dx,al
  415ef1:	test   BYTE PTR [eax-0x3f],dh
  415ef4:	xchg   esi,eax
  415ef5:	jmp    0x1e2b:0xaff8c561
  415efc:	aad    0xf
  415efe:	in     al,dx
  415eff:	data16 test dh,ch
  415f02:	loop   0x415f2c
  415f04:	shl    DWORD PTR [eax+0x73],cl
  415f07:	lahf   
  415f08:	and    edx,DWORD PTR [edx+0x5f830e7]
  415f0e:	int    0xe0
  415f10:	pop    es
  415f11:	jnp    0x415ed5
  415f13:	rcl    DWORD PTR ds:[edi],cl
  415f16:	mov    dl,0xe4
  415f18:	pop    esp
  415f19:	out    dx,al
  415f1a:	mov    esi,0x4ef876f0
  415f1f:	inc    edi
  415f20:	sbb    BYTE PTR [ebx+edx*4-0x43d8699a],ah
  415f27:	(bad)  
  415f28:	pop    eax
  415f29:	push   es
  415f2a:	(bad)  
  415f2b:	loop   0x415efc
  415f2d:	call   0x2175:0x7c4db57b
  415f34:	sbb    BYTE PTR [esi],dl
  415f36:	nop
  415f37:	mov    al,0x76
  415f39:	icebp  
  415f3a:	cdq    
  415f3b:	dec    eax
  415f3c:	inc    esi
  415f3d:	add    bh,ah
  415f3f:	or     bl,0xbd
  415f42:	xor    al,0xe6
  415f44:	pop    ecx
  415f45:	into   
  415f46:	pushf  
  415f47:	xor    al,0x55
  415f49:	jb     0x415fc0
  415f4b:	pop    ecx
  415f4c:	inc    ah
  415f4e:	add    ah,ah
  415f50:	mov    ds:0xc4a8f6d,al
  415f55:	jp     0x415fcd
  415f57:	inc    edx
  415f58:	(bad)  
  415f59:	push   ebx
  415f5a:	push   0xffffffa6
  415f5c:	jp     0x415f6c
  415f5e:	dec    ebp
  415f5f:	jp     0x415fd9
  415f61:	xor    al,0x9b
  415f63:	test   esi,edi
  415f65:	pop    esp
  415f66:	jne    0x415f70
  415f68:	push   es
  415f69:	gs aam 0xb7
  415f6c:	or     ebx,DWORD PTR [esi]
  415f6e:	cmc    
  415f6f:	pop    ecx
  415f70:	inc    esp
  415f71:	jno    0x415fa9
  415f73:	jecxz  0x415efb
  415f75:	add    al,0x75
  415f77:	xor    DWORD PTR [edi],ebp
  415f79:	push   es
  415f7a:	jmp    0x8a422e7f
  415f7f:	data16 js 0x415f84
  415f82:	sub    eax,0x5597d322
  415f87:	add    ch,BYTE PTR [ebx-0x2]
  415f8a:	rcl    bh,0xa3
  415f8d:	data16 aad 0x10
  415f90:	fldcw  WORD PTR [ebp-0x40d34e41]
  415f96:	cmp    edx,ebp
  415f98:	adc    ecx,DWORD PTR [edx-0x65]
  415f9b:	test   al,0xde
  415f9d:	(bad)  
  415f9e:	ss mov ecx,0x2e991307
  415fa4:	add    DWORD PTR [edx+0x10],edx
  415fa7:	adc    WORD PTR [ebx+0x2bd3dbb8],cx
  415fae:	xchg   esi,eax
  415faf:	in     al,dx
  415fb0:	dec    esp
  415fb1:	pop    edi
  415fb2:	mov    ecx,0x5e66a421
  415fb7:	fstp   QWORD PTR [ebx+ebx*1]
  415fba:	aas    
  415fbb:	leave  
  415fbc:	mov    ds:0xd35081aa,al
  415fc1:	ds stc 
  415fc3:	push   ds
  415fc4:	ror    ah,cl
  415fc6:	push   0x10
  415fc8:	and    al,0x65
  415fca:	test   eax,0x888340e6
  415fcf:	push   ebp
  415fd0:	ret    
  415fd1:	or     esp,DWORD PTR [eax-0x26]
  415fd4:	inc    ebx
  415fd5:	and    eax,0xac3f4d75
  415fda:	test   DWORD PTR ds:0x66f82b14,edi
  415fe0:	ja     0x415fc1
  415fe2:	mov    al,0xe5
  415fe4:	ror    DWORD PTR [eax-0x13],cl
  415fe7:	xchg   esi,eax
  415fe8:	sub    ecx,DWORD PTR [esi+0x65ef1720]
  415fee:	adc    al,0x28
  415ff0:	sub    al,0xa9
  415ff2:	xchg   BYTE PTR [edi-0x49],dh
  415ff5:	in     al,0x9d
  415ff7:	arpl   bx,dx
  415ff9:	fwait
  415ffa:	(bad)  
  415ffb:	dec    ecx
  415ffc:	mov    bl,0xa5
  415ffe:	mov    eax,ds:0xd165fa62
  416003:	dec    edx
  416004:	lea    edi,[ecx]
  416006:	hlt    
  416007:	imul   ecx,DWORD PTR [esi+ecx*1],0xa8df010
  41600e:	jne    0x415fa6
  416010:	test   eax,edi
  416012:	xor    bh,BYTE PTR [ebx]
  416014:	pop    eax
  416015:	mov    DWORD PTR [edx-0x666dea03],eax
  41601b:	mov    ds:0xe6f56043,al
  416020:	imul   ecx,edx,0x8bc6aa1e
  416026:	jne    0x41600c
  416028:	sbb    BYTE PTR [eax+0x7],0x8f
  41602c:	adc    eax,0xb082cb34
  416031:	jae    0x416032
  416033:	pushw  es
  416035:	fwait
  416036:	xlat   BYTE PTR ds:[ebx]
  416037:	out    dx,eax
  416038:	mov    ah,0x34
  41603a:	jne    0x415ffe
  41603c:	and    edx,ebx
  41603e:	and    dh,bh
  416040:	ins    BYTE PTR es:[edi],dx
  416041:	retf   0xa2c9
  416044:	addr16 iret 
  416046:	repnz sbb dl,BYTE PTR [ecx-0x2d39c2f1]
  41604d:	out    dx,eax
  41604e:	and    esp,DWORD PTR [ebp-0x44]
  416051:	into   
  416052:	xchg   esi,eax
  416053:	loopne 0x41600d
  416055:	inc    esp
  416056:	ret    0x449
  416059:	in     eax,0xd1
  41605b:	sbb    ah,BYTE PTR [ebx-0x1577c5b6]
  416061:	sbb    al,0x8d
  416063:	mov    WORD PTR ds:0x4724cc38,?
  416069:	or     esp,ebp
  41606b:	jnp    0x4160d5
  41606d:	jnp    0x4160ca
  41606f:	data16 daa 
  416071:	ja     0x41608f
  416073:	or     eax,0x5e23a3d3
  416078:	ja     0x4160e6
  41607a:	add    dh,BYTE PTR [edi]
  41607c:	dec    eax
  41607d:	or     dx,WORD PTR [ecx]
  416080:	push   0x17846c9c
  416085:	sbb    DWORD PTR [edx+0x25f0d307],0x30badfe9
  41608f:	mov    cs,WORD PTR [edi]
  416091:	aad    0xa1
  416093:	fldcw  WORD PTR [ecx+0x2b]
  416096:	cmp    DWORD PTR [esi-0xc],esp
  416099:	sbb    eax,0xc4d31c46
  41609e:	cmp    BYTE PTR [esi],dl
  4160a0:	imul   edi,DWORD PTR [ebp+ecx*8+0x3473f0a0],0x46
  4160a8:	fwait
  4160a9:	adc    al,0xb8
  4160ab:	pop    cx
  4160ad:	xor    dh,BYTE PTR [ebx+ecx*2+0x4b6deed3]
  4160b4:	pop    esp
  4160b5:	adc    cl,BYTE PTR ds:0x1d653b5e
  4160bb:	arpl   WORD PTR [esi+0x381da6d6],si
  4160c1:	inc    eax
  4160c2:	pop    ebx
  4160c3:	mov    bh,0x93
  4160c5:	bound  esi,QWORD PTR [ebp-0x54]
  4160c8:	stos   BYTE PTR es:[edi],al
  4160c9:	test   al,0x99
  4160cb:	cmp    dl,ah
  4160cd:	push   esp
  4160ce:	mov    ecx,0x364ac166
  4160d3:	or     eax,0x69238117
  4160d8:	daa    
  4160d9:	shl    BYTE PTR [eax],1
  4160db:	out    0x7,al
  4160dd:	lss    ebp,FWORD PTR [edx-0x56]
  4160e1:	dec    ebp
  4160e2:	inc    esi
  4160e3:	add    DWORD PTR gs:[eax+0x73329400],edx
  4160ea:	xor    eax,0x746baa14
  4160ef:	(bad)  
  4160f0:	adc    BYTE PTR [esi+ebx*4-0x3a9a9dcd],0xbe
  4160f8:	cmp    BYTE PTR [esi+0x1c],ah
  4160fb:	xchg   BYTE PTR [edx-0x15f2a4c1],bh
  416101:	daa    
  416102:	dec    ebp
  416103:	mov    dh,0x1c
  416105:	call   0xf77b8f9d
  41610a:	xor    eax,0x8774cdbd
  41610f:	sahf   
  416110:	test   DWORD PTR [ebx],ebx
  416112:	or     dh,BYTE PTR [esi-0x3c8a6744]
  416118:	jne    0x416131
  41611a:	inc    esp
  41611b:	xchg   DWORD PTR [esi+0x0],edx
  41611e:	lock mov ax,ds:0xd36ea959
  416125:	(bad)  
  416127:	fwait
  416128:	sbb    cl,BYTE PTR [ebp+0x7f22a6a0]
  41612e:	inc    esi
  41612f:	cwde   
  416130:	xor    eax,0x7e6173c9
  416135:	cmp    BYTE PTR [edx+0x605fd3ff],dl
  41613b:	push   ds
  41613c:	imul   DWORD PTR [edi]
  41613e:	mov    ds:0x1e66c830,al
  416143:	push   eax
  416144:	mov    ah,0x76
  416146:	jg     0x416118
  416148:	fwait
  416149:	add    dl,BYTE PTR [edi]
  41614b:	imul   eax,esi,0xffffffc7
  41614e:	jb     0x4161c3
  416150:	and    BYTE PTR [eax],cl
  416152:	pop    ecx
  416153:	inc    ebp
  416154:	scas   eax,DWORD PTR es:[edi]
  416155:	xchg   ebx,eax
  416156:	or     BYTE PTR [edi],dl
  416158:	ja     0x41618c
  41615a:	sbb    eax,0x450fa366
  41615f:	ins    DWORD PTR es:[edi],dx
  416160:	rcr    DWORD PTR [ecx+eiz*1-0x64c7c105],cl
  416167:	mov    bh,0xc9
  416169:	ins    DWORD PTR es:[edi],dx
  41616a:	lea    eax,[edi-0x54]
  41616d:	sti    
  41616e:	dec    ebx
  41616f:	mov    esp,0x55262b3
  416174:	cmc    
  416175:	and    eax,0x702b55d
  41617a:	jne    0x416126
  41617c:	test   al,0xfc
  41617e:	fadd   QWORD PTR [esi]
  416180:	jle    0x41619a
  416182:	pusha  
  416183:	mov    ebp,0x6943f6e6
  416188:	in     eax,0x44
  41618a:	jno    0x4161b0
  41618c:	mov    esi,0xd3e61512
  416191:	push   ecx
  416192:	gs dec eax
  416194:	xor    BYTE PTR [esp+ebp*2],0x8
  416198:	loopne 0x416206
  41619a:	je     0x41614c
  41619c:	(bad)  
  41619d:	(bad)  
  41619e:	(bad)  
  41619f:	pusha  
  4161a0:	and    al,0x75
  4161a2:	xchg   ecx,eax
  4161a3:	inc    esi
  4161a4:	rol    esi,cl
  4161a6:	push   es
  4161a7:	lds    esi,FWORD PTR [edi+0x5b214637]
  4161ad:	sub    DWORD PTR [edi],0xc3ba856d
  4161b3:	mov    edi,0xec753dc6
  4161b8:	mov    eax,ds:0x3c5abb46
  4161bd:	dec    ebx
  4161be:	jne    0x41621a
  4161c0:	cmp    eax,0xd6ffb171
  4161c5:	neg    BYTE PTR [edi+0x65]
  4161c8:	ins    DWORD PTR es:[edi],dx
  4161c9:	lods   eax,DWORD PTR ds:[esi]
  4161ca:	or     edi,DWORD PTR [esi-0x27]
  4161cd:	ret    
  4161ce:	pop    ebp
  4161cf:	retf   0xa2cc
  4161d2:	jne    0x4161b6
  4161d4:	jge    0x4161a0
  4161d6:	add    bh,ah
  4161d8:	cld    
  4161d9:	in     eax,dx
  4161da:	mov    dl,0x66
  4161dc:	cmp    DWORD PTR [esp+esi*4+0xfb3d08b],eax
  4161e3:	inc    ebx
  4161e4:	lock fldcw WORD PTR [edi-0x27]
  4161e8:	xchg   ebx,eax
  4161e9:	mov    DWORD PTR ds:0x289625a8,ebp
  4161ef:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4161f1:	xor    BYTE PTR [ebp+0x30],cl
  4161f4:	shl    DWORD PTR [esp+edx*2-0x74f78a64],cl
  4161fb:	je     0x41624f
  4161fd:	gs and eax,0x7007e9af
  416203:	test   eax,0x28fdf410
  416208:	aaa    
  416209:	pop    edx
  41620a:	jne    0x416268
  41620c:	dec    esi
  41620d:	adc    eax,0x66b1ec63
  416212:	jle    0x41628a
  416214:	pop    edi
  416215:	out    0x94,al
  416217:	dec    edi
  416218:	jmp    0x4161a6
  41621a:	pop    esp
  41621b:	xor    DWORD PTR [eax+0x6c],edi
  41621e:	cwde   
  41621f:	xchg   edi,eax
  416220:	je     0x41627f
  416222:	jne    0x4161cb
  416224:	test   DWORD PTR [esi-0x38],esp
  416227:	scas   al,BYTE PTR es:[edi]
  416228:	cmp    ch,dl
  41622a:	mov    dh,0xd1
  41622c:	nop
  41622d:	sub    ah,BYTE PTR [ecx+0x57]
  416230:	push   esi
  416231:	bound  esi,QWORD PTR [ebp-0x7a]
  416234:	sub    BYTE PTR [ebx],bl
  416236:	and    ebx,ecx
  416238:	mov    edi,0xb8661935
  41623d:	fcmovne st,st(4)
  41623f:	retf   0xa8f2
  416242:	out    0xb0,al
  416244:	xchg   ebx,eax
  416245:	jno    0x4161d3
  416247:	adc    ebp,DWORD PTR [eax+0x7510927]
  41624d:	gs pop edi
  41624f:	idiv   DWORD PTR [ecx]
  416251:	cmp    eax,DWORD PTR [ebx]
  416253:	ficomp WORD PTR ds:0x6f85f80e
  416259:	jae    0x4161f4
  41625b:	and    DWORD PTR [eax+0x7c],esp
  41625e:	hlt    
  41625f:	popf   
  416260:	stos   DWORD PTR es:[edi],eax
  416261:	mov    ecx,0x39821fb3
  416266:	pop    ebx
  416267:	mov    dx,0x9c6
  41626b:	in     eax,0xe2
  41626d:	in     al,0x62
  41626f:	es or  cl,ch
  416272:	icebp  
  416273:	sbb    al,0xb8
  416275:	ins    DWORD PTR es:[edi],dx
  416276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416277:	(bad)  
  416278:	pushf  
  416279:	pop    ebx
  41627a:	stos   DWORD PTR es:[edi],eax
  41627b:	int3   
  41627c:	cmp    edx,ebx
  41627e:	fiadd  WORD PTR [esi+0x326c1454]
  416284:	cmp    BYTE PTR [esi-0x6fe4c08c],cl
  41628a:	push   ss
  41628b:	test   al,0x67
  41628d:	fwait
  41628e:	aaa    
  41628f:	(bad)  
  416290:	hlt    
  416291:	lods   al,BYTE PTR ds:[esi]
  416292:	cmp    BYTE PTR [esi+0x65],ah
  416295:	sub    eax,0x47d3763e
  41629a:	loop   0x416247
  41629c:	mov    ah,0x53
  41629e:	xchg   esi,eax
  41629f:	js     0x41628d
  4162a1:	jno    0x416271
  4162a3:	adc    edx,DWORD PTR [ebx]
  4162a5:	dec    esp
  4162a6:	and    BYTE PTR [eax+0x5ea53f74],0x6a
  4162ad:	nop
  4162ae:	and    DWORD PTR [ebp-0x1e139934],ecx
  4162b4:	mov    ah,0xe0
  4162b6:	adc    eax,0x75780c02
  4162bb:	test   BYTE PTR [eax],cl
  4162bd:	add    BYTE PTR [ecx+0x299aab6c],ah
  4162c3:	xchg   ecx,eax
  4162c4:	push   ebx
  4162c5:	sub    al,0x4e
  4162c7:	xor    edi,ebp
  4162c9:	xor    al,0xa
  4162cb:	lock mov edi,0xb9ab766a
  4162d1:	mov    eax,ds:0xfd43b93d
  4162d6:	jl     0x41634e
  4162d8:	sbb    edi,DWORD PTR [edi-0x43b19ada]
  4162de:	dec    cx
  4162e0:	fdivr  QWORD PTR [ebx+0x25]
  4162e3:	fwait
  4162e4:	sub    dl,BYTE PTR [ecx+0x25f23a72]
  4162ea:	add    DWORD PTR [eax+0x1c8bc618],edi
  4162f0:	mov    dh,0x16
  4162f2:	and    al,0x81
  4162f4:	jno    0x41630e
  4162f6:	scas   al,BYTE PTR es:[edi]
  4162f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f8:	clc    
  4162f9:	pop    ebp
  4162fa:	(bad)  [edx]
  4162fc:	fidivr DWORD PTR [eax-0x77807b8b]
  416302:	inc    esp
  416303:	xchg   ebx,eax
  416304:	ds (bad) 
  416306:	out    dx,al
  416307:	addr16 lahf 
  416309:	sbb    DWORD PTR [esi-0x37],edx
  41630c:	loop   0x41629e
  41630e:	sbb    al,0x5e
  416310:	sub    DWORD PTR [edi+0x75],edi
  416313:	lds    ebp,FWORD PTR [edi]
  416315:	call   0xd5e5fc7c
  41631a:	lea    esp,[esi+0x15]
  41631d:	and    eax,0x20ee4776
  416322:	(bad)  
  416323:	aas    
  416324:	jg     0x416304
  416326:	sbb    eax,0x50f30188
  41632b:	ss inc esp
  41632d:	or     eax,0xc8cb672a
  416332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416333:	mov    al,es:0x9c70d26
  416339:	push   es
  41633a:	add    ch,BYTE PTR [ebp-0x1e]
  41633d:	jg     0x4162ff
  41633f:	mov    ch,al
  416341:	test   DWORD PTR [ebx],ebp
  416343:	mov    al,ds:0x6512e9cb
  416348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416349:	mov    bl,BYTE PTR [eax+0x24577666]
  41634f:	int    0x18
  416351:	(bad)  
  416352:	(bad)  
  416353:	adc    edx,ebx
  416355:	int    0x81
  416357:	out    0x53,al
  416359:	sub    esp,esi
  41635b:	shl    BYTE PTR [edx],0xfb
  41635e:	mov    ebx,0x99a52e65
  416363:	jp     0x4163d8
  416365:	(bad)  
  416366:	push   cs
  416367:	pop    eax
  416368:	adc    al,0xe4
  41636a:	adc    DWORD PTR [ebx+0x66a085e6],eax
  416370:	in     eax,dx
  416371:	je     0x4162fe
  416373:	adc    al,0x8f
  416375:	lds    ebp,FWORD PTR [eax-0x474ad39a]
  41637b:	clc    
  41637c:	rcl    BYTE PTR [eax+0xca39e2e],1
  416382:	fs hlt 
  416384:	fistp  QWORD PTR [ebp+0x7db52caa]
  41638a:	mov    ds:0x4a8c9391,eax
  41638f:	test   eax,0xb03da75e
  416394:	jecxz  0x416364
  416396:	jne    0x416351
  416398:	(bad)  
  416399:	and    ah,BYTE PTR [eax-0x2344e9]
  41639f:	jns    0x4163c7
  4163a1:	imul   DWORD PTR [ecx]
  4163a3:	inc    si
  4163a5:	pushf  
  4163a6:	ret    0xd3e8
  4163a9:	data16 jge 0x41636d
  4163ac:	addr16 test al,dh
  4163af:	gs pop edi
  4163b1:	pusha  
  4163b2:	in     al,dx
  4163b3:	sbb    edx,DWORD PTR [eax+0x70f1d19a]
  4163b9:	pop    ss
  4163ba:	push   ebx
  4163bb:	mov    dl,0x64
  4163bd:	add    al,0xd6
  4163bf:	not    bl
  4163c1:	cmp    BYTE PTR ds:0x4a8f1f5c,al
  4163c7:	hlt    
  4163c8:	scas   eax,DWORD PTR es:[edi]
  4163c9:	inc    ebp
  4163ca:	inc    esi
  4163cb:	mov    eax,0x9335a517
  4163d0:	pop    esi
  4163d1:	sbb    BYTE PTR [esp+ebp*8],0xd3
  4163d5:	mov    ebp,0x70b7b106
  4163da:	test   eax,0xe36b3681
  4163df:	mov    dh,0xf1
  4163e1:	inc    edx
  4163e2:	adc    dh,BYTE PTR [ebp-0x622f19f6]
  4163e8:	add    al,0x7d
  4163ea:	data16 mov dh,0xd3
  4163ed:	hlt    
  4163ee:	in     al,dx
  4163ef:	repnz pop ds
  4163f1:	arpl   WORD PTR ds:0x2c6526c5,ax
  4163f7:	cli    
  4163f8:	ret    
  4163f9:	aaa    
  4163fa:	jnp    0x41643b
  4163fc:	repz test al,0x9c
  4163ff:	stos   BYTE PTR es:[edi],al
  416400:	xor    eax,0x10cb7540
  416405:	inc    ebx
  416406:	push   ss
  416407:	pop    ds
  416408:	mov    ds:0xa966ae07,al
  41640d:	lea    ebp,[edx]
  41640f:	fcmovnbe st,st(3)
  416411:	add    eax,0x24779671
  416416:	or     ebp,DWORD PTR [eax+0x5]
  416419:	lods   al,BYTE PTR gs:[esi]
  41641b:	repnz and DWORD PTR [esi],0x38
  41641f:	or     dh,ah
  416421:	mov    esi,0x668a0b5e
  416426:	frstor [esi]
  416428:	add    dh,BYTE PTR [ebx]
  41642a:	pop    ss
  41642b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642c:	jne    0x41648f
  41642e:	sahf   
  41642f:	adc    al,0xe6
  416431:	xor    BYTE PTR [eax],bl
  416433:	inc    ebx
  416434:	(bad)  
  416435:	sbb    DWORD PTR [eax-0x1f],ebp
  416438:	ror    DWORD PTR [edi-0x1b],cl
  41643b:	inc    esp
  41643c:	cmp    al,0xfe
  41643e:	and    esp,0x71b7545b
  416444:	iret   
  416445:	xchg   esi,eax
  416446:	cdq    
  416447:	jo     0x4163dd
  416449:	jno    0x4164bd
  41644b:	and    DWORD PTR [ebx+0x37fb3bb0],ebp
  416451:	push   eax
  416452:	dec    ecx
  416453:	cmp    BYTE PTR [ebx+0x7a],cl
  416456:	cld    
  416457:	cmp    bh,0x8
  41645a:	cmc    
  41645b:	pop    ebx
  41645c:	add    esp,DWORD PTR [ebp-0x4f]
  41645f:	imul   BYTE PTR [ebx]
  416461:	pop    eax
  416463:	dec    edx
  416464:	retf   0xe84e
  416467:	pusha  
  416468:	and    al,0xae
  41646a:	jne    0x416484
  41646c:	js     0x416423
  41646e:	mov    edx,0x1e54c3fe
  416473:	gs ret 
  416475:	daa    
  416476:	inc    esi
  416477:	pop    esi
  416478:	mov    cl,0x32
  41647a:	pop    ebp
  41647b:	and    al,0x66
  41647d:	sub    al,0x76
  41647f:	dec    eax
  416480:	aam    0xc6
  416482:	mov    dh,0x2a
  416484:	ror    BYTE PTR [esi+eax*1+0x23],cl
  416488:	sub    edx,DWORD PTR [ebx+ecx*2+0x55]
  41648c:	repz cld 
  41648e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648f:	pop    esp
  416490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416491:	(bad)  
  416492:	clc    
  416493:	mov    eax,ds:0xde75561a
  416498:	and    al,0xfb
  41649a:	fisttp QWORD PTR [ebx]
  41649c:	mov    eax,ss
  41649e:	mov    ds:0x624a0966,eax
  4164a3:	not    bl
  4164a5:	loopne 0x416440
  4164a7:	test   DWORD PTR [edx],ecx
  4164a9:	push   eax
  4164aa:	popa   
  4164ab:	inc    ebx
  4164ac:	jnp    0x416513
  4164ae:	dec    ebx
  4164af:	pushf  
  4164b0:	fcom   QWORD PTR [ebp+0x72]
  4164b3:	lods   eax,DWORD PTR ds:[esi]
  4164b4:	stos   BYTE PTR es:[edi],al
  4164b5:	adc    esi,eax
  4164b7:	mov    bl,0x13
  4164b9:	(bad)  
  4164bb:	outs   dx,DWORD PTR ds:[esi]
  4164bc:	shr    DWORD PTR [eax+0x65f101fe],cl
  4164c2:	fmul   DWORD PTR [ebx]
  4164c4:	das    
  4164c5:	mov    fs,WORD PTR [esi+0x1ebbf57]
  4164cb:	cmp    dh,cl
  4164cd:	and    BYTE PTR [ebp+0x4f],dh
  4164d0:	mov    edx,0xe6a71fbd
  4164d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d6:	push   edx
  4164d7:	imul   esi,DWORD PTR ds:0x4c557995,0x5727370c
  4164e1:	outs   dx,DWORD PTR ds:[esi]
  4164e2:	jne    0x4164b6
  4164e4:	ror    DWORD PTR [edx],1
  4164e6:	adc    esi,DWORD PTR [edi-0x6b]
  4164e9:	xchg   BYTE PTR [ecx],bh
  4164eb:	pushaw 
  4164ed:	fcom   DWORD PTR ds:0x9ad2d38f
  4164f3:	lods   al,BYTE PTR ds:[esi]
  4164f4:	mov    ebp,0xae1488ea
  4164f9:	outs   dx,WORD PTR ds:[esi]
  4164fb:	mov    al,ds:0xee2e129f
  416500:	sub    eax,0x783715d8
  416505:	xor    esi,DWORD PTR [ebp-0x3b]
  416508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416509:	cli    
  41650a:	idiv   DWORD PTR [ecx+0x66ffb6bb]
  416510:	xor    BYTE PTR [edi],0xa6
  416513:	aam    0xd2
  416515:	outs   dx,DWORD PTR ds:[esi]
  416516:	pop    esi
  416517:	push   0x6b
  416519:	dec    edx
  41651a:	jle    0x4164bd
  41651c:	xor    DWORD PTR [ebp-0x5b],esp
  41651f:	jg     0x416585
  416521:	fwait
  416522:	call   0x6f06:0xd534cbfc
  416529:	mov    bh,0x75
  41652b:	add    al,0x1d
  41652d:	jp     0x4164de
  41652f:	mov    fs,WORD PTR [eax]
  416531:	lock outs dx,BYTE PTR ds:[esi]
  416533:	popa   
  416534:	cmp    BYTE PTR [ecx],al
  416536:	add    al,0x4f
  416538:	rol    DWORD PTR [edx-0x10],cl
  41653b:	and    ecx,DWORD PTR [esi+0x50fffd16]
  416541:	cmp    DWORD PTR [ebp*8-0x63040aad],esp
  416548:	inc    ebp
  416549:	ss mov dl,0x21
  41654c:	cli    
  41654d:	test   eax,0xa7e139b0
  416552:	sbb    ebp,ebx
  416554:	mov    al,ds:0xe4447563
  416559:	gs xchg esp,eax
  41655b:	fsub   DWORD PTR [ebx+0x49]
  41655e:	inc    ecx
  41655f:	jb     0x4165a1
  416561:	(bad)  
  416562:	mov    ecx,0x6ca0ee9b
  416567:	push   ss
  416568:	(bad)
  41656c:	gs cmp ax,sp
  416570:	mov    eax,0xa9e16f6
  416575:	sbb    eax,0x33b7b08c
  41657a:	je     0x4165b8
  41657c:	outs   dx,DWORD PTR fs:[esi]
  41657e:	lods   al,BYTE PTR ds:[esi]
  41657f:	fldenv [ebp+0x54]
  416582:	test   DWORD PTR [eax+0x149188db],ebp
  416588:	cli    
  416589:	mov    ecx,0x30ea1915
  41658e:	rcr    BYTE PTR ds:0xed7891dc,cl
  416594:	mov    ecx,0xf8483505
  416599:	loop   0x41654c
  41659b:	pushfw 
  41659d:	ret    
  41659e:	jle    0x416526
  4165a0:	loop   0x4165f6
  4165a2:	shr    DWORD PTR [edx],cl
  4165a4:	shl    BYTE PTR [edi+ebp*8],cl
  4165a7:	adc    DWORD PTR [edi],esp
  4165a9:	in     eax,0x81
  4165ab:	xchg   ecx,eax
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	rcr    DWORD PTR [esi],cl
  4165af:	stos   DWORD PTR es:[edi],eax
  4165b0:	xor    BYTE PTR [ecx],dl
  4165b2:	enter  0x8866,0xab
  4165b6:	cmp    ecx,DWORD PTR [ebx-0x13]
  4165b9:	jecxz  0x416608
  4165bb:	push   0xfffffff2
  4165bd:	pop    edx
  4165be:	pop    ebx
  4165bf:	push   ss
  4165c0:	mov    bh,0xb
  4165c2:	xchg   ebp,eax
  4165c3:	mov    dl,0xb8
  4165c5:	jo     0x4165e4
  4165c7:	add    dh,0xee
  4165ca:	sub    DWORD PTR [esi-0x299c21d9],esp
  4165d0:	adc    BYTE PTR [ebp-0x43],ah
  4165d3:	sti    
  4165d4:	push   es
  4165d5:	outs   dx,DWORD PTR ds:[esi]
  4165d6:	adc    al,0x70
  4165d8:	test   DWORD PTR [edi-0x26],esp
  4165db:	repz aaa 
  4165dd:	(bad)  
  4165df:	mov    ch,0xe1
  4165e1:	test   eax,0x16d34cb1
  4165e6:	in     al,dx
  4165e7:	pop    es
  4165e8:	jae    0x4165b7
  4165ea:	sub    ch,al
  4165ec:	pop    ss
  4165ed:	xlat   BYTE PTR gs:[ebx]
  4165ef:	mov    eax,0x48f1ee90
  4165f4:	call   0x75ea:0x484da27f
  4165fb:	xchg   ebp,eax
  4165fc:	inc    eax
  4165fd:	sbb    esp,esp
  4165ff:	ins    BYTE PTR es:[edi],dx
  416600:	sbb    WORD PTR [edx-0x439f429a],dx
  416607:	int3   
  416608:	or     eax,0xe2ebcb04
  41660d:	jmp    0x41662d
  41660f:	cmp    DWORD PTR [ebx+edi*8-0x7c],edx
  416613:	es std 
  416615:	gs ret 0x5268
  416619:	xchg   ebx,eax
  41661a:	xchg   ebp,eax
  41661b:	xor    dl,BYTE PTR [edx+0x12e23640]
  416621:	inc    ecx
  416622:	std    
  416623:	add    cl,ch
  416625:	mov    esi,0x425de6a3
  41662a:	pop    ss
  41662b:	sbb    al,0x43
  41662d:	scas   eax,DWORD PTR es:[edi]
  41662e:	inc    eax
  41662f:	xor    ax,0x2d50
  416633:	aad    0xd3
  416635:	sbb    al,0x15
  416637:	arpl   WORD PTR [eax-0x16df9a7b],bx
  41663d:	push   esp
  41663e:	dec    edi
  41663f:	cmp    DWORD PTR [edi-0x77e44d2],eax
  416645:	(bad)  
  416646:	xchg   ebp,eax
  416647:	sahf   
  416648:	shl    DWORD PTR [esi+0x2978eef2],cl
  41664e:	mov    al,0xa6
  416650:	scas   al,BYTE PTR es:[edi]
  416651:	data16 jl 0x4166a2
  416654:	inc    edi
  416655:	stc    
  416656:	pop    ecx
  416657:	sar    BYTE PTR [ebx],0xfd
  41665a:	push   esi
  41665b:	and    al,0x22
  41665d:	es cdq 
  41665f:	mov    WORD PTR [eax+0x276a357d],?
  416665:	jge    0x4166d9
  416667:	rol    dl,0xd2
  41666a:	dec    ebp
  41666b:	addr16 iret 
  41666d:	adc    al,0x95
  41666f:	sub    eax,DWORD PTR [ebx-0x12]
  416672:	push   es
  416673:	push   esi
  416674:	or     DWORD PTR [edi],edx
  416676:	jne    0x416679
  416678:	lds    ebp,FWORD PTR [esi-0x80]
  41667b:	loopne 0x4166c5
  41667d:	repnz push ss
  41667f:	add    WORD PTR [ebx+0x35d2fa3a],bp
  416686:	imul   ecx,DWORD PTR cs:0xc27e8444,0x8f1e4f66
  416691:	(bad)  
  416692:	mov    ecx,0xea64d0df
  416697:	jne    0x4166e7
  416699:	add    al,0x66
  41669b:	iret   
  41669c:	scas   eax,DWORD PTR es:[edi]
  41669d:	cli    
  41669e:	jne    0x416701
  4166a0:	mov    DWORD PTR [ebp+0x6d],edx
  4166a3:	nop
  4166a4:	ds mov dh,0xe4
  4166a7:	shl    BYTE PTR [edi-0x60],1
  4166aa:	icebp  
  4166ab:	mov    esi,0xa73b59ab
  4166b0:	cmp    ebp,0xe
  4166b3:	dec    ecx
  4166b4:	in     al,0xe9
  4166b6:	jne    0x41667d
  4166b8:	jge    0x416683
  4166ba:	mov    ebx,0x73736813
  4166bf:	nop
  4166c0:	mov    bl,0xd4
  4166c2:	xchg   DWORD PTR [ebp-0x52],edi
  4166c5:	jp     0x416688
  4166c7:	inc    edx
  4166c8:	repnz inc ecx
  4166ca:	ins    BYTE PTR es:[edi],dx
  4166cb:	xchg   edi,eax
  4166cc:	jo     0x4166d7
  4166ce:	mov    fs,WORD PTR [esi-0x1]
  4166d1:	pop    edx
  4166d2:	jmp    0xc8d58ac8
  4166d7:	inc    ebp
  4166d8:	ror    ebx,cl
  4166da:	sbb    DWORD PTR [ecx],esp
  4166dc:	cmc    
  4166dd:	mov    ch,0xbd
  4166df:	fucom  st(1)
  4166e1:	cmp    dh,BYTE PTR [edx-0x7b]
  4166e4:	push   cs
  4166e5:	pop    esi
  4166e6:	xchg   ebx,eax
  4166e7:	test   BYTE PTR [ebp-0x33],bh
  4166ea:	cli    
  4166eb:	es sbb eax,0xbf661fd2
  4166f1:	lea    edx,[edx]
  4166f3:	xor    al,0xd3
  4166f5:	jp     0x4166b4
  4166f7:	call   0x7ccf7ecd
  4166fc:	daa    
  4166fd:	push   esp
  4166fe:	imul   edx,DWORD PTR [ecx+0x76992c1f],0xce35acec
  416708:	pop    ecx
  416709:	mov    bh,0x87
  41670b:	inc    edx
  41670c:	fiadd  WORD PTR [edi]
  41670e:	jne    0x41670f
  416710:	bound  ebx,QWORD PTR [ebp+edx*1+0x14]
  416714:	jp     0x41675e
  416716:	fisub  DWORD PTR [esi-0x1a]
  416719:	arpl   WORD PTR [esi],di
  41671b:	mov    bl,dl
  41671d:	icebp  
  41671e:	cmp    al,0xec
  416720:	xlat   BYTE PTR ds:[ebx]
  416721:	std    
  416722:	dec    ecx
  416723:	std    
  416724:	xor    BYTE PTR [ebp+0x22],ah
  416727:	test   eax,0x53d7dc9b
  41672c:	scas   eax,DWORD PTR es:[edi]
  41672d:	adc    eax,0x388bba4d
  416732:	jne    0x41672b
  416734:	icebp  
  416735:	popa   
  416736:	mov    esi,0x1e20f7d4
  41673b:	adc    BYTE PTR [edi+esi*2-0x4413190c],0x19
  416743:	out    dx,al
  416744:	or     dh,bh
  416746:	addr16 xor al,0x84
  416749:	into   
  41674a:	jne    0x41674b
  41674c:	bound  esp,QWORD PTR [ebp+0x6e]
  41674f:	inc    ebp
  416750:	std    
  416751:	mov    dh,0xb9
  416753:	push   ecx
  416754:	cs jp  0x4167cb
  416757:	dec    eax
  416758:	jl     0x416764
  41675a:	jne    0x41675e
  41675c:	mov    ds:0xad028d04,eax
  416761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416762:	jle    0x672374a4
  416768:	data16 mov dl,0xeb
  41676b:	dec    edx
  41676c:	out    0x70,al
  41676e:	jbe    0x416760
  416770:	sbb    ch,ah
  416772:	imul   edx,ebx,0x2f80b28e
  416778:	in     eax,dx
  416779:	frstor ds:0x6635e282
  41677f:	popa   
  416780:	into   
  416781:	pop    esi
  416782:	clc    
  416783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416784:	xchg   ebp,eax
  416785:	loopne 0x4167fc
  416787:	ror    BYTE PTR [edx],cl
  416789:	mov    ds:0x8c956dd5,eax
  41678e:	mov    ecx,0x827b4766
  416793:	sbb    BYTE PTR [eax],0x8e
  416796:	xor    ch,bh
  416798:	inc    esp
  416799:	and    BYTE PTR ds:0x9a68d166,0x86
  4167a0:	or     ecx,DWORD PTR [edx]
  4167a2:	pop    edx
  4167a3:	data16 cli 
  4167a5:	retf   0x8d5b
  4167a8:	rcr    DWORD PTR [esi+0x5525231c],cl
  4167ae:	mov    eax,0x163e8863
  4167b3:	and    eax,0xd4ba84d3
  4167b8:	pop    eax
  4167b9:	mov    ebx,0xbdd3cb48
  4167be:	(bad)  
  4167bf:	loope  0x416771
  4167c1:	jo     0x4167bc
  4167c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c4:	test   DWORD PTR [esi+0x4f],esp
  4167c7:	push   edi
  4167c8:	push   ebx
  4167c9:	int    0x7c
  4167cb:	mov    ch,0xa8
  4167cd:	mov    edi,0x35d30f84
  4167d2:	jnp    0x4167b4
  4167d4:	ret    
  4167d5:	cmp    al,0x32
  4167d7:	cmp    DWORD PTR [esi],0x65
  4167da:	ja     0x8f5c7b96
  4167e0:	xor    edx,DWORD PTR ds:0x1e5fc8fd
  4167e6:	jne    0x416796
  4167e8:	call   0x97315263
  4167ed:	sub    BYTE PTR [esi+eiz*2-0x265b48d0],dl
  4167f4:	shl    DWORD PTR [ecx-0x15],cl
  4167f7:	jb     0x41684e
  4167f9:	dec    ebx
  4167fa:	hlt    
  4167fb:	(bad)  
  4167fc:	mov    bh,0x66
  4167fe:	popa   
  4167ff:	dec    esi
  416800:	cdq    
  416801:	stos   DWORD PTR es:[edi],eax
  416802:	adc    eax,0x182241f8
  416807:	or     DWORD PTR [ecx-0x4a578a82],esp
  41680d:	mov    gs,WORD PTR [esi+0x84af20d]
  416813:	mov    dl,0x15
  416815:	pop    es
  416816:	or     BYTE PTR [esi-0x1a],ah
  416819:	fcomp  QWORD PTR [bx+si-0x70]
  41681d:	nop
  41681e:	jne    0x4167b7
  416820:	in     eax,dx
  416821:	push   esp
  416822:	cmc    
  416823:	arpl   WORD PTR [ebp-0x41997b78],bp
  416829:	fiadd  DWORD PTR [edx+0x31cad3a4]
  41682f:	jmp    0xd24b807d
  416834:	mov    al,ds:0xda27df66
  416839:	sub    ebx,ebp
  41683b:	fcmovbe st,st(4)
  41683d:	adc    BYTE PTR [ebx+0x0],0xbe
  416841:	sub    eax,0xe572d075
  416846:	gs pop ecx
  416848:	into   
  416849:	mov    cl,BYTE PTR [ecx-0x29f08f9a]
  41684f:	mov    eax,0xa8bb1bd3
  416854:	sub    ch,BYTE PTR ds:[ebp+0x1f5b3f34]
  41685b:	sub    bh,BYTE PTR [ebp-0x2a0c69a]
  416861:	shl    BYTE PTR [eax],1
  416863:	cmp    al,0xd3
  416865:	xor    eax,0x648a0bb4
  41686a:	add    al,0x96
  41686c:	sub    al,0x65
  41686e:	scas   al,BYTE PTR es:[edi]
  41686f:	out    0xf1,al
  416871:	xchg   ebp,eax
  416872:	or     edx,DWORD PTR [eax]
  416874:	(bad)  
  416875:	push   ecx
  416876:	fstp   DWORD PTR [ecx+0x7b70666d]
  41687c:	push   ebx
  41687d:	cs fdivr st(3),st
  416880:	mov    bl,0x6d
  416882:	xchg   DWORD PTR [ebp-0x19661ea2],ebp
  416888:	arpl   di,di
  41688a:	jge    0x4168d2
  41688c:	in     eax,0xe4
  41688e:	xor    al,0x5c
  416890:	fiadd  WORD PTR [ebx]
  416892:	fcom   DWORD PTR [edx+0x53]
  416895:	fwait
  416896:	js     0x416872
  416898:	push   cs
  416899:	pop    ebx
  41689a:	xchg   edx,eax
  41689b:	test   eax,0x4cd366a3
  4168a0:	inc    ecx
  4168a1:	inc    esi
  4168a2:	and    esi,DWORD PTR [edx]
  4168a4:	rcr    DWORD PTR [ebx+0x28],cl
  4168a7:	pop    ebx
  4168a8:	ja     0x4168db
  4168aa:	lahf   
  4168ab:	cmp    al,0x89
  4168ad:	addr16 leave 
  4168af:	(bad)  
  4168b1:	ret    
  4168b2:	mov    ah,0xcd
  4168b4:	outs   dx,DWORD PTR ds:[esi]
  4168b5:	(bad)  
  4168b6:	call   0x3f3be3c1
  4168bb:	ds rol eax,cl
  4168be:	push   edi
  4168bf:	lahf   
  4168c0:	push   esp
  4168c1:	out    dx,eax
  4168c2:	mov    dx,0x61c7
  4168c6:	sub    edx,DWORD PTR [eax+0x2fb00bb8]
  4168cc:	fwait
  4168cd:	cmp    BYTE PTR [eax-0x48],al
  4168d0:	out    dx,eax
  4168d1:	xor    bl,BYTE PTR [eax+0x841f8c6]
  4168d7:	add    al,0xda
  4168d9:	mov    ebp,0x4951836
  4168de:	mov    ch,0xf
  4168e0:	aad    0x94
  4168e2:	sbb    al,0x90
  4168e4:	into   
  4168e5:	xchg   ebp,eax
  4168e6:	xchg   esi,eax
  4168e7:	mov    ebp,0x4ee2d5db
  4168ec:	sbb    BYTE PTR [eax],dh
  4168ee:	push   ecx
  4168ef:	xor    bh,dh
  4168f1:	fmul   DWORD PTR [ebp+eiz*8-0x21]
  4168f5:	jge    0x416884
  4168f7:	push   eax
  4168f8:	mov    eax,0xf00586ce
  4168fd:	data16 stc 
  4168ff:	clc    
  416900:	leave  
  416901:	sbb    dh,dl
  416903:	(bad)  
  416904:	popf   
  416905:	jle    0x416951
  416907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416908:	shl    DWORD PTR [ecx+0x720ed282],cl
  41690e:	in     eax,dx
  41690f:	xor    eax,DWORD PTR [ebp+0x58016f66]
  416915:	mov    al,ds:0xf813699d
  41691a:	add    BYTE PTR ds:0xd87539d9,bh
  416920:	adc    DWORD PTR [edi+eax*2],0xb
  416924:	mov    DWORD PTR [eax+0x26],0x385c766
  41692b:	push   edi
  41692c:	rol    esp,cl
  41692e:	push   esi
  41692f:	js     0x416977
  416931:	out    0xe8,al
  416933:	test   al,0xbf
  416935:	data16 cs (bad) 
  416938:	ins    DWORD PTR es:[edi],dx
  416939:	push   cs
  41693a:	push   esp
  41693b:	jge    0x4168ed
  41693d:	lahf   
  41693e:	jecxz  0x4169a8
  416940:	push   es
  416941:	xor    eax,0xd8546e9b
  416946:	jne    0x41699b
  416948:	inc    eax
  416949:	gs in  eax,dx
  41694b:	scas   eax,DWORD PTR es:[edi]
  41694c:	cwde   
  41694d:	aas    
  41694e:	pusha  
  41694f:	stos   BYTE PTR es:[edi],al
  416950:	arpl   sp,bp
  416952:	lds    esp,FWORD PTR [ecx]
  416954:	ss adc al,0x75
  416957:	cli    
  416958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416959:	test   al,0xb7
  41695b:	add    ecx,ecx
  41695d:	sti    
  41695e:	adc    BYTE PTR [esi-0x79],ah
  416961:	mov    al,ds:0xcd33457
  416966:	ja     0x4169e4
  416968:	jp     0x41691a
  41696a:	cmp    eax,0x8c6ddd58
  41696f:	or     al,0x9
  416971:	mov    WORD PTR [eax-0x63be4cb3],es
  416977:	push   ss
  416978:	int3   
  416979:	jb     0x416998
  41697b:	jae    0x416950
  41697d:	jno    0x4169d7
  41697f:	mov    ds:0xdef712f2,eax
  416984:	sbb    esp,DWORD PTR [ebp+0x7c]
  416987:	jecxz  0x41695a
  416989:	(bad)  
  41698a:	loope  0x4169b8
  41698c:	add    BYTE PTR [ebp+ecx*2+0x7525f712],bl
  416993:	sbb    DWORD PTR [edi],ecx
  416995:	dec    ecx
  416996:	xor    cl,BYTE PTR [edx+esi*8]
  416999:	mov    ds:0x109a66a9,eax
  41699e:	ins    DWORD PTR es:[edi],dx
  41699f:	mov    al,0xf5
  4169a1:	fisubr DWORD PTR [esi-0x72681a97]
  4169a7:	pop    edi
  4169a8:	inc    esi
  4169a9:	and    eax,0x65e3e6eb
  4169ae:	jae    0x416a26
  4169b0:	shl    ebp,1
  4169b2:	sub    eax,0x4c2e1dd6
  4169b7:	mov    al,ds:0x6bbae7c9
  4169bc:	pop    edx
  4169bd:	(bad)  
  4169be:	jg     0x4169f2
  4169c0:	xchg   ebx,eax
  4169c1:	jbe    0x4169a5
  4169c3:	repnz fisttp QWORD PTR [esi-0x34]
  4169c7:	gs mov cl,0x13
  4169ca:	sub    edi,ebp
  4169cc:	xchg   edx,eax
  4169cd:	mov    bl,0xf5
  4169cf:	mov    ah,BYTE PTR [edi+0x74]
  4169d2:	jne    0x4169a8
  4169d4:	adc    BYTE PTR ds:0xee29f86,dh
  4169da:	xor    eax,0x94388166
  4169df:	pop    es
  4169e0:	shl    DWORD PTR [ebx-0x6cbcdac0],cl
  4169e6:	sbb    DWORD PTR ds:0xd4006559,ecx
  4169ec:	lahf   
  4169ed:	setnp  bl
  4169f0:	sub    ah,0x83
  4169f3:	mov    bh,0x49
  4169f5:	out    0x75,eax
  4169f7:	mov    bl,0xa
  4169f9:	cmp    eax,0xbe7aa8e7
  4169fe:	pushf  
  4169ff:	addr16 jge 0x4169c3
  416a02:	xor    BYTE PTR [edx+0x2efd43c3],bl
  416a08:	cmp    eax,0xb5875c9
  416a0d:	push   edx
  416a0e:	es clc 
  416a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a11:	sub    bh,BYTE PTR [ebp+0x66]
  416a14:	xchg   ebp,eax
  416a15:	fld    QWORD PTR [edi+0x5f4fd3b3]
  416a1b:	or     eax,0xc97cdd5
  416a20:	sahf   
  416a21:	push   cx
  416a23:	dec    eax
  416a24:	jmp    0x416a92
  416a26:	and    BYTE PTR [ebx-0x49],dh
  416a29:	test   BYTE PTR [ecx],0x6a
  416a2c:	sbb    al,0x7e
  416a2e:	jne    0x4169e5
  416a30:	jno    0x416a2c
  416a32:	aam    0xbd
  416a34:	xchg   esi,eax
  416a35:	dec    ebp
  416a36:	lods   al,BYTE PTR ds:[esi]
  416a37:	data16 jecxz 0x416aa9
  416a3a:	enter  0xd9a3,0x44
  416a3e:	xor    bh,cl
  416a40:	ret    
  416a41:	xchg   edi,eax
  416a42:	jne    0x416ab6
  416a44:	enter  0x9cf3,0xa2
  416a48:	add    bl,cl
  416a4a:	fxsave [edx-0x6e3e8a1b]
  416a51:	stos   BYTE PTR es:[edi],al
  416a52:	add    ebp,DWORD PTR [eax]
  416a54:	xor    eax,0xd15fb9e5
  416a59:	xor    BYTE PTR [edi-0x7],bh
  416a5c:	iret   
  416a5d:	data16 aas 
  416a5f:	jne    0x416ac6
  416a61:	enter  0x8680,0x3
  416a65:	cmc    
  416a66:	cmp    ebp,edi
  416a68:	mov    DWORD PTR [ebx+0x75],eax
  416a6b:	mov    esi,0x78d7d500
  416a70:	dec    edi
  416a71:	repnz mov ds:0x2fedb866,eax
  416a77:	mov    al,ds:0x36ca15d3
  416a7c:	les    ebx,FWORD PTR [edx+0x3c]
  416a7f:	lahf   
  416a80:	fist   DWORD PTR [ebp+0x0]
  416a83:	cmp    esi,ebp
  416a85:	(bad)  
  416a86:	ss imul ebp,ebx,0x39
  416a8a:	xchg   esp,eax
  416a8b:	shr    BYTE PTR [esi],cl
  416a8d:	jns    0x416aa6
  416a8f:	push   eax
  416a90:	add    al,0x5e
  416a92:	jne    0x416a31
  416a94:	sar    DWORD PTR [ebx+0x2e],0xe6
  416a98:	or     al,0x36
  416a9a:	xor    BYTE PTR [edx+0xf54509],ah
  416aa0:	out    dx,eax
  416aa1:	hlt    
  416aa2:	ins    DWORD PTR es:[edi],dx
  416aa3:	rcl    BYTE PTR [esi],cl
  416aa5:	in     al,dx
  416aa6:	cmp    eax,0x624c6b93
  416aab:	fs (bad) 
  416aae:	sub    DWORD PTR [edx],ecx
  416ab0:	pop    edx
  416ab1:	imul   ebp,DWORD PTR [esi-0x3bf468e7],0xffffff9e
  416ab8:	push   ebx
  416ab9:	and    al,0x15
  416abb:	pop    edx
  416abc:	pop    esp
  416abd:	sar    BYTE PTR [esi+0x5e],0x8a
  416ac1:	in     al,0x70
  416ac3:	mov    dl,0xd3
  416ac5:	mov    ds:0x12fffa2b,al
  416aca:	movhps xmm4,QWORD PTR [edx+0x6d]
  416ace:	dec    ebx
  416acf:	mov    ebp,0xa7774871
  416ad4:	nop
  416ad5:	mov    ebx,cr6
  416ad8:	jecxz  0x416ae1
  416ada:	mov    eax,0xb3216fe6
  416adf:	pop    ds
  416ae0:	mul    esp
  416ae2:	ds and cl,0x22
  416ae6:	std    
  416ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae8:	test   eax,0xd34684ae
  416aed:	xchg   esp,eax
  416aee:	test   al,0xd1
  416af0:	xor    bl,cl
  416af2:	dec    edx
  416af3:	fnsave [edi]
  416af5:	pop    ecx
  416af6:	repz dec esi
  416af8:	icebp  
  416af9:	es inc ebx
  416afb:	adc    ch,bh
  416afd:	mov    eax,ds:0xc3c79838
  416b02:	addr16 icebp 
  416b04:	jns    0x416b5c
  416b06:	jne    0x416a8e
  416b08:	clc    
  416b09:	vpsllw xmm7,xmm1,XMMWORD PTR [ebp+0x65]
  416b0e:	int    0x7c
  416b10:	and    DWORD PTR [ebx+0x7],ecx
  416b13:	iret   
  416b14:	and    BYTE PTR [edi+0x1d],ah
  416b17:	lods   eax,DWORD PTR ds:[esi]
  416b18:	pop    edi
  416b19:	jno    0x416adf
  416b1b:	adc    bl,ah
  416b1d:	popf   
  416b1e:	(bad)  
  416b1f:	les    eax,FWORD PTR [esi+0x48]
  416b22:	je     0x416b65
  416b24:	jno    0x416b06
  416b26:	outs   dx,BYTE PTR ds:[esi]
  416b27:	pop    ss
  416b28:	test   BYTE PTR [esi+0x29],ah
  416b2b:	add    eax,0x2d4e5032
  416b30:	adc    BYTE PTR [edx+edi*4+0xe],bh
  416b34:	push   ebx
  416b35:	jae    0x416bac
  416b37:	sub    DWORD PTR [edx],ecx
  416b39:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416b3b:	mov    dl,0x8f
  416b3d:	data16 addr16 jns 0x416bbf
  416b41:	in     eax,dx
  416b42:	cmp    eax,0x8be956ec
  416b48:	mov    bh,BYTE PTR [esi*2+0x367f75d2]
  416b4f:	loopne 0x416b9b
  416b51:	cs jae 0x416bb5
  416b54:	sbb    edi,DWORD PTR [ebx]
  416b56:	lods   eax,DWORD PTR ds:[si]
  416b58:	shr    DWORD PTR [ebx],cl
  416b5a:	pop    es
  416b5b:	cmp    dl,BYTE PTR [edx+0x1c49e427]
  416b61:	pop    edx
  416b62:	inc    esp
  416b63:	ret    0xe5f9
  416b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b67:	jp     0x416b3e
  416b69:	das    
  416b6a:	add    DWORD PTR fs:[ebx+0x29487d26],edx
  416b71:	out    dx,al
  416b72:	fbstp  TBYTE PTR [ecx]
  416b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b76:	and    DWORD PTR [esi-0x7a],esp
  416b79:	nop
  416b7a:	cli    
  416b7b:	loopne 0x416b50
  416b7d:	or     BYTE PTR [eax+0x1f],0xbb
  416b81:	add    bh,cl
  416b83:	pushf  
  416b84:	or     dh,bh
  416b86:	sbb    edx,ebp
  416b88:	icebp  
  416b89:	nop
  416b8a:	sbb    DWORD PTR [ecx+0x41a7c5f3],edx
  416b90:	dec    ebx
  416b91:	stc    
  416b92:	fs stos BYTE PTR es:[edi],al
  416b94:	sub    ecx,esi
  416b96:	mov    eax,0x76161e85
  416b9b:	aam    0xb5
  416b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b9e:	fsub   QWORD PTR [ebp-0x55]
  416ba1:	das    
  416ba2:	pop    eax
  416ba3:	(bad)  
  416ba5:	call   0x6623d5a5
  416baa:	ficom  WORD PTR [ebp+0x77]
  416bad:	xchg   esi,eax
  416bae:	xor    eax,0x753bf406
  416bb3:	cmp    edi,esp
  416bb5:	lea    ecx,[ecx]
  416bb7:	ds aam 0xd3
  416bba:	jae    0x416b4c
  416bbc:	xor    eax,edi
  416bbe:	or     eax,0x8f96e608
  416bc3:	or     BYTE PTR ds:0x6023753e,0x42
  416bca:	test   DWORD PTR [edi+0x6f3a7446],eax
  416bd0:	rcl    DWORD PTR [ebp+edx*1+0x4c],cl
  416bd4:	mov    edi,0x955cf534
  416bd9:	mov    dh,BYTE PTR [ebp-0x70]
  416bdc:	mov    ebp,0xedaa16d4
  416be1:	add    bh,BYTE PTR [esi-0x7e]
  416be4:	jnp    0x416bf9
  416be6:	clc    
  416be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be8:	lods   eax,DWORD PTR ds:[esi]
  416be9:	jno    0x416bfb
  416beb:	mov    ah,0x6a
  416bed:	pop    edx
  416bee:	jb     0x416b9c
  416bf0:	inc    ebx
  416bf1:	rol    bh,cl
  416bf3:	cwde   
  416bf4:	outs   dx,BYTE PTR ds:[esi]
  416bf5:	sub    al,BYTE PTR gs:[eax]
  416bf8:	cli    
  416bf9:	mov    bh,0x18
  416bfb:	mov    edx,0xea48fe3a
  416c00:	fsubp  st(7),st
  416c02:	ja     0x416bc2
  416c04:	xchg   edi,eax
  416c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c06:	(bad)  
  416c07:	loop   0x416bc4
  416c09:	popa   
  416c0a:	dec    ebx
  416c0b:	clc    
  416c0c:	mov    bl,0x61
  416c0e:	lahf   
  416c0f:	sbb    esi,DWORD PTR [ebx-0x71]
  416c12:	int    0x7f
  416c14:	shl    DWORD PTR [ebx-0x3a],cl
  416c17:	std    
  416c18:	push   ds
  416c19:	cmp    eax,0x650aa81a
  416c1e:	and    bh,bl
  416c20:	sar    DWORD PTR [eax+0x5a],0x72
  416c24:	loope  0x416c62
  416c26:	push   edx
  416c27:	dec    edi
  416c28:	mov    al,ds:0xfc77564
  416c2d:	and    DWORD PTR [esi+0x8],edi
  416c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c31:	out    0xae,eax
  416c33:	mov    dx,0xc93c
  416c37:	lahf   
  416c38:	shl    al,cl
  416c3a:	dec    ebx
  416c3b:	imul   esp,DWORD PTR [ebx],0x2a
  416c3e:	lds    esp,FWORD PTR [ecx+0x16]
  416c41:	pusha  
  416c42:	inc    esp
  416c43:	bswap  esp
  416c45:	jbe    0x416c1c
  416c47:	or     al,0xae
  416c49:	cmp    al,BYTE PTR [ecx]
  416c4b:	lock pop esi
  416c4d:	jns    0x416ca3
  416c4f:	dec    edi
  416c50:	shl    ebx,cl
  416c52:	(bad)  
  416c53:	ret    
  416c54:	leave  
  416c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c56:	ret    
  416c57:	gs es gs xchg esi,eax
  416c5b:	sbb    al,BYTE PTR ds:0x5157cf87
  416c61:	mov    al,ds:0x10dcc03f
  416c66:	jne    0x416c75
  416c68:	push   es
  416c69:	test   eax,0x73ddeeb7
  416c6e:	ret    0x1ffa
  416c71:	jge    0x416cec
  416c73:	adc    al,BYTE PTR [edi+0x4466a49d]
  416c79:	popa   
  416c7a:	adc    eax,0xa3c0d30e
  416c7f:	les    eax,FWORD PTR [ecx-0x139155ec]
  416c85:	gs pop ss
  416c87:	mov    dl,0x84
  416c89:	sahf   
  416c8a:	(bad)  
  416c8b:	leave  
  416c8c:	(bad)  
  416c8d:	sti    
  416c8e:	cmp    eax,0x7530bc80
  416c93:	stos   BYTE PTR es:[edi],al
  416c94:	inc    edx
  416c95:	aas    
  416c96:	push   ebp
  416c97:	inc    edi
  416c98:	(bad)  
  416c99:	sbb    bl,BYTE PTR [edx]
  416c9b:	imul   esp,DWORD PTR [ecx],0xffffffa5
  416c9e:	(bad)  
  416c9f:	sbb    BYTE PTR [esi],ah
  416ca1:	and    dl,0x95
  416ca4:	sbb    bl,BYTE PTR [esp+esi*2]
  416ca7:	stc    
  416ca8:	cdq    
  416ca9:	dec    esp
  416caa:	push   ebx
  416cab:	fs xchg ecx,eax
  416cad:	lds    edx,FWORD PTR [di+0x20]
  416cb1:	push   edi
  416cb2:	in     eax,dx
  416cb3:	jno    0x416cd0
  416cb5:	mov    eax,ds:0x5bd3bcf1
  416cba:	mov    es,WORD PTR [ecx-0x76e1f456]
  416cc0:	shl    BYTE PTR [esi+0x18],cl
  416cc3:	clc    
  416cc4:	and    edx,DWORD PTR [edx-0x45]
  416cc7:	adc    al,0x51
  416cc9:	dec    ebp
  416cca:	xchg   ebp,eax
  416ccb:	mov    WORD PTR [esi+0x4a],?
  416cce:	jne    0x416c98
  416cd0:	add    ah,BYTE PTR [esi-0x77ea1495]
  416cd6:	mov    ds:0x31e86a66,eax
  416cdb:	cmp    eax,0x41f077b
  416ce0:	sbb    edx,DWORD PTR [ebp+edx*1-0x768e9419]
  416ce7:	mov    edx,ebx
  416ce9:	aam    0x75
  416ceb:	fnstcw WORD PTR [ebx+0x65]
  416cee:	mov    al,0x7f
  416cf0:	xor    DWORD PTR [ebx+eax*4-0x3a],0xffffff9f
  416cf5:	xchg   DWORD PTR [eax+0x75572572],ebp
  416cfb:	dec    esi
  416cfc:	pop    esi
  416cfd:	xor    eax,0x67cd30cf
  416d02:	or     edi,esi
  416d04:	test   BYTE PTR [ebp-0x6b],dh
  416d07:	mov    ds:0x2e6a89f8,eax
  416d0c:	ror    BYTE PTR [ecx+edi*2-0x1a],1
  416d10:	leave  
  416d11:	mov    esp,0x66da7342
  416d16:	cmp    ah,dl
  416d18:	jmp    0xceacca9f
  416d1d:	jb     0x416d92
  416d1f:	sub    ah,ch
  416d21:	call   0xff1d:0x653f8743
  416d28:	(bad)  
  416d29:	mov    ds:0xcbe5e09d,al
  416d2e:	mov    ch,0x69
  416d30:	push   ebx
  416d31:	xchg   ebp,eax
  416d32:	mov    edi,0xa46a1bf2
  416d37:	in     al,dx
  416d38:	inc    eax
  416d39:	arpl   sp,di
  416d3b:	cmc    
  416d3c:	clc    
  416d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d3e:	jb     0x416d54
  416d40:	and    eax,ebx
  416d42:	iret   
  416d43:	ss ss imul ebp,DWORD PTR gs:[ebp-0x23],0xffffff87
  416d4a:	dec    edi
  416d4b:	pop    edx
  416d4c:	xor    eax,0x22de5149
  416d51:	std    
  416d52:	jne    0x416dc7
  416d54:	or     al,BYTE PTR [ebx-0x52]
  416d57:	jge    0x416dd8
  416d59:	push   0xa3e866ee
  416d5e:	adc    DWORD PTR [ebx+edx*8],eax
  416d61:	daa    
  416d62:	fist   DWORD PTR [ebx]
  416d64:	push   0x909641bc
  416d69:	ins    DWORD PTR es:[edi],dx
  416d6a:	ficom  WORD PTR [esi+0x5d]
  416d6d:	call   0x367b:0x6b93cc98
  416d74:	cmp    ebx,DWORD PTR [edx+edx*4-0x1d]
  416d78:	adc    cl,cl
  416d7a:	cmc    
  416d7b:	data16 adc BYTE PTR [ebx+0x61],bl
  416d7f:	jp     0x416d58
  416d81:	pop    ecx
  416d82:	and    BYTE PTR [esi-0x7],0x97
  416d86:	inc    ebp
  416d87:	mov    ch,0xd1
  416d89:	test   al,0x7
  416d8b:	pop    ebx
  416d8c:	syscall 
  416d8e:	cmp    DWORD PTR [ecx-0x59b937ad],eax
  416d94:	pop    eax
  416d95:	loopne 0x416dc7
  416d97:	data16 sar dh,0x1e
  416d9b:	pop    edx
  416d9c:	sar    esi,cl
  416d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d9f:	pop    ebx
  416da0:	inc    edx
  416da1:	icebp  
  416da2:	jl     0x416dd5
  416da4:	adc    edx,DWORD PTR [ebx+ebp*4-0x71]
  416da8:	cmp    edi,DWORD PTR ds:0xbb395095
  416dae:	xchg   ebp,eax
  416daf:	dec    edx
  416db0:	shl    DWORD PTR [ebx],cl
  416db2:	cmp    eax,0xfd538f1c
  416db7:	(bad)  
  416db8:	pushf  
  416db9:	push   ebp
  416dba:	inc    edx
  416dbb:	sar    BYTE PTR [eax+edx*1-0x3c],0x4b
  416dc0:	inc    edx
  416dc1:	add    eax,0xcdb17ef5
  416dc6:	dec    esp
  416dc7:	retf   0xb5e0
  416dca:	jbe    0x416d4c
  416dcc:	jno    0x416d93
  416dce:	adc    ebp,DWORD PTR [ecx]
  416dd0:	(bad)  
  416dd1:	(bad)  
  416dd2:	sbb    al,0xd8
  416dd4:	rcl    DWORD PTR [esi+0x6d],0x61
  416dd8:	fsub   QWORD PTR [ebp-0x7520ceb0]
  416dde:	out    0x2a,eax
  416de0:	fcmovnu st,st(7)
  416de2:	jb     0x416e30
  416de4:	add    esp,DWORD PTR [edi]
  416de6:	mov    esp,eax
  416de8:	mov    al,ds:0x15d92e66
  416ded:	out    0xb8,eax
  416def:	ins    BYTE PTR es:[edi],dx
  416df0:	in     al,0xc0
  416df2:	and    eax,DWORD PTR [ebp+0x1475f3b3]
  416df8:	xchg   ecx,eax
  416df9:	and    BYTE PTR [esi+0x475b3dd1],al
  416dff:	xor    ax,0xc503
  416e03:	dec    ebx
  416e04:	rcl    DWORD PTR [eax-0x7f],0x19
  416e08:	lahf   
  416e09:	mov    WORD PTR [edi-0x42],?
  416e0c:	or     al,0x25
  416e0e:	test   DWORD PTR [ebx],0xecb045b2
  416e14:	pop    ebp
  416e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e16:	cwde   
  416e17:	frstor [edx-0x2c9639a3]
  416e1d:	lahf   
  416e1e:	mov    ch,0xd6
  416e20:	call   0xcd66:0x2c22beae
  416e27:	dec    edx
  416e28:	sub    DWORD PTR [edx-0x49],ebx
  416e2b:	stos   BYTE PTR es:[edi],al
  416e2c:	pop    ss
  416e2d:	xor    BYTE PTR [ecx],0xb5
  416e30:	jbe    0x416e3c
  416e32:	mov    ds:0x75479bc6,eax
  416e37:	sub    bh,dl
  416e39:	out    0x59,al
  416e3b:	add    ah,ah
  416e3d:	maxps  xmm5,XMMWORD PTR [edi-0x2d]
  416e41:	les    ecx,FWORD PTR [edi-0x6b]
  416e44:	stc    
  416e45:	fiadd  WORD PTR [edi-0x42992915]
  416e4b:	jp     0x416e7a
  416e4d:	mov    ebp,0x652aa6b1
  416e52:	xor    dh,al
  416e54:	pop    ebp
  416e55:	inc    BYTE PTR [ebx+0x77]
  416e58:	mov    esi,0xdb5c1f2f
  416e5d:	retf   0x3662
  416e60:	hlt    
  416e61:	add    esi,DWORD PTR [ebp+0x18]
  416e64:	cmp    esi,ebp
  416e66:	icebp  
  416e67:	scas   al,BYTE PTR es:[edi]
  416e68:	out    dx,eax
  416e69:	mul    BYTE PTR [edx]
  416e6b:	sbb    BYTE PTR [esi],0x4c
  416e6e:	xor    ah,BYTE PTR [esi-0x23]
  416e71:	cmp    eax,0x2233ac09
  416e76:	jne    0x416e3c
  416e78:	jecxz  0x416e6d
  416e7a:	rcl    BYTE PTR [edi+edi*4+0x66],1
  416e7e:	or     BYTE PTR [edx+ecx*4-0x46],0xa1
  416e83:	jge    0x416e92
  416e85:	adc    ah,dh
  416e87:	popf   
  416e88:	retf   0xd966
  416e8b:	adc    DWORD PTR [edx],edi
  416e8d:	loope  0x416e20
  416e8f:	add    al,0x66
  416e92:	bound  edx,QWORD PTR [ebx+ebp*8-0x69b2e214]
  416e99:	test   eax,edx
  416e9b:	xor    al,0x4b
  416e9d:	data16 fwait
  416e9f:	xor    BYTE PTR [edx+0x33],al
  416ea2:	jne    0x416ec9
  416ea4:	fcmovnu st,st(6)
  416ea6:	test   DWORD PTR [esi+eax*1+0x70],0xc6876934
  416eae:	test   BYTE PTR [eax+0x7a],dl
  416eb1:	pop    esp
  416eb2:	push   esi
  416eb3:	add    edx,DWORD PTR [ecx]
  416eb5:	(bad)  
  416eb6:	jne    0x416f01
  416eb8:	inc    edi
  416eb9:	pop    es
  416eba:	psllq  mm0,QWORD PTR [ecx-0x48]
  416ebe:	shl    DWORD PTR [esi-0xa],1
  416ec1:	push   0x73e22c32
  416ec6:	retf   
  416ec7:	xchg   DWORD PTR [esi],ebp
  416ec9:	and    eax,0x32dcdfa6
  416ece:	icebp  
  416ecf:	mov    bl,0x19
  416ed1:	gs xchg edi,eax
  416ed3:	push   ds
  416ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ed5:	push   ebp
  416ed6:	aas    
  416ed7:	jg     0x416f30
  416ed9:	cmp    edi,edi
  416edb:	jno    0x416efd
  416edd:	add    al,0x75
  416edf:	or     esi,edi
  416ee1:	cmp    eax,0x152d1987
  416ee6:	ds addr16 (bad) 
  416ee9:	(bad)
  416eed:	add    al,0xa8
  416eef:	pop    edx
  416ef0:	in     al,0xa8
  416ef2:	jne    0x416ee1
  416ef4:	push   ebx
  416ef5:	sbb    BYTE PTR [esi],dl
  416ef7:	mov    esi,0x616449ff
  416efc:	pop    eax
  416efd:	sub    al,ah
  416eff:	es call 0xbb9a0d86
  416f05:	out    0x7c,al
  416f07:	or     al,0x34
  416f09:	inc    esp
  416f0a:	jmp    0x8779df2c
  416f0f:	data16 loopne 0x416f0c
  416f12:	ins    DWORD PTR es:[edi],dx
  416f13:	lods   eax,DWORD PTR ds:[esi]
  416f14:	shr    ebp,cl
  416f16:	dec    eax
  416f17:	mov    ecx,0x683f18c2
  416f1c:	fldenv [esi-0x39]
  416f1f:	xchg   edx,eax
  416f20:	xchg   BYTE PTR [edi-0x6ace61a0],dl
  416f26:	retf   
  416f27:	dec    esi
  416f28:	xchg   esi,eax
  416f29:	add    esi,DWORD PTR [ebp-0x80]
  416f2c:	out    dx,al
  416f2d:	jno    0x416f6f
  416f2f:	je     0x416f04
  416f31:	mov    WORD PTR [ebx],es
  416f33:	lea    bx,[esi]
  416f36:	dec    edi
  416f37:	mov    dh,0x17
  416f39:	mov    ds:0x2c53823a,eax
  416f3e:	xchg   dh,ah
  416f40:	jg     0x416fbb
  416f42:	add    ch,BYTE PTR [edx-0x39]
  416f45:	or     bh,bl
  416f47:	data16 jb 0x416f59
  416f4a:	jmp    0xe9c4289
  416f4f:	dec    esp
  416f50:	push   0xa791e589
  416f55:	push   bp
  416f57:	call   0xf751:0xb8ee9f4b
  416f5e:	cmp    DWORD PTR [ebx],ecx
  416f60:	cmp    BYTE PTR [ecx+0x6b],cl
  416f63:	and    BYTE PTR [edx],ah
  416f65:	ficom  WORD PTR [ecx]
  416f67:	xchg   ch,cl
  416f69:	data16 daa 
  416f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6c:	pop    esi
  416f6d:	cmp    ebx,DWORD PTR [edi]
  416f6f:	add    eax,0x25c59a72
  416f74:	jno    0x416fdd
  416f76:	jne    0x416fbb
  416f78:	aaa    
  416f79:	adc    BYTE PTR [ecx],0xbc
  416f7c:	in     al,dx
  416f7d:	push   esp
  416f7e:	idiv   DWORD PTR [ecx+ebp*2-0x26]
  416f82:	sub    BYTE PTR [esi-0x78ca8583],bh
  416f88:	std    
  416f89:	sahf   
  416f8a:	cmp    BYTE PTR [ecx],0xd0
  416f8d:	aas    
  416f8e:	cmp    bl,BYTE PTR [ecx]
  416f90:	lss    ecx,FWORD PTR [ebp+0x48ba1fbd]
  416f97:	cmp    BYTE PTR [edi-0x1b9906a7],ch
  416f9d:	jno    0x416fd6
  416f9f:	xchg   ebp,eax
  416fa0:	rcl    BYTE PTR [edx],1
  416fa2:	xor    bh,BYTE PTR [ecx]
  416fa4:	out    0x41,eax
  416fa6:	(bad)  
  416fa7:	fwait
  416fa8:	repz sub edi,DWORD PTR [ebp-0xb]
  416fac:	push   eax
  416fad:	jbe    0x416f7e
  416faf:	mov    si,0x676b
  416fb3:	retf   0x4dd3
  416fb6:	dec    esi
  416fb7:	(bad)  
  416fb8:	les    edx,FWORD PTR [edi]
  416fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fbb:	jmp    0x506fd699
  416fc0:	repz daa 
  416fc2:	sbb    bh,BYTE PTR [eax-0x3e2b3b9]
  416fc8:	push   ebp
  416fc9:	push   ecx
  416fca:	push   0xfffffffe
  416fcc:	(bad)  
  416fcd:	loope  0x41701b
  416fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd0:	sub    ah,BYTE PTR [eax+0x5d]
  416fd3:	fld    TBYTE PTR [ecx]
  416fd5:	xchg   edi,eax
  416fd6:	push   0x40
  416fd8:	mov    ds:0xeafb53dd,eax
  416fdd:	push   ss
  416fde:	jecxz  0x416f62
  416fe0:	lods   eax,DWORD PTR ds:[esi]
  416fe1:	cdq    
  416fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe3:	pop    edx
  416fe4:	jg     0x416f8d
  416fe6:	test   DWORD PTR [edi+0x4e26654a],edx
  416fec:	jecxz  0x417042
  416fee:	push   esp
  416fef:	shr    BYTE PTR [ebx-0x7e],1
  416ff2:	or     eax,0x758f5c3e
  416ff7:	mov    ch,0x38
  416ff9:	cmc    
  416ffa:	in     al,0x44
  416ffc:	sbb    eax,0x15668b3e
  417001:	mov    ah,0xa7
  417003:	pop    ds
  417004:	shr    edi,cl
  417006:	aas    
  417007:	js     0x417044
  417009:	(bad)  
  41700a:	jo     0x416ff0
  41700c:	ss gs or eax,0x11fadb38
  417013:	fiadd  DWORD PTR [ebx]
  417015:	jle    0x417005
  417017:	pop    esp
  417018:	push   edx
  417019:	lock jne 0x416f9c
  41701c:	aam    0xdd
  41701e:	or     esp,DWORD PTR [eax+0x50]
  417021:	cmp    al,0x28
  417023:	xor    dh,0x79
  417026:	rol    DWORD PTR [ebx],0x41
  417029:	aas    
  41702a:	cmc    
  41702b:	and    DWORD PTR [esi+eiz*1-0x2d],ebx
  41702f:	adc    al,0x14
  417031:	je     0x416fce
  417033:	std    
  417034:	das    
  417035:	or     eax,0x66f3b1b5
  41703a:	test   eax,0x8d6335c1
  41703f:	mov    ch,0xa8
  417041:	jbe    0x41705a
  417043:	push   esp
  417044:	jmp    0x6f18:0xb51534a3
  41704b:	ins    DWORD PTR es:[edi],dx
  41704c:	inc    ebx
  41704d:	fadd   st,st(5)
  41704f:	add    al,BYTE PTR [esi-0x2f92b503]
  417055:	adc    BYTE PTR es:[ecx+esi*4-0x5a],0x71
  41705b:	add    ebx,edx
  41705d:	mov    al,ds:0x1e1b8a11
  417062:	(bad)  
  417063:	fiadd  DWORD PTR [edx]
  417065:	gs (bad) 
  417067:	rol    DWORD PTR [edx+eiz*4],cl
  41706a:	(bad)  
  41706b:	imul   edi,DWORD PTR [ebx+ecx*2+0x497e85d8],0x3e28cf80
  417076:	je     0x4170e2
  417078:	push   eax
  417079:	iret   
  41707a:	mov    DWORD PTR [edi-0x3b],eax
  41707d:	fmul   st(0),st
  41707f:	mov    cl,0x76
  417081:	jo     0x417027
  417083:	mov    dh,0xd7
  417085:	les    eax,FWORD PTR ds:0x75c0c975
  41708b:	push   0xffffffbf
  41708d:	mov    WORD PTR [ecx],ss
  41708f:	int3   
  417090:	lds    esi,FWORD PTR fs:[esi+0x64]
  417094:	es jp  0x417044
  417097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417098:	ret    
  417099:	sub    DWORD PTR ds:0x99d58522,0xf5a25e1d
  4170a3:	out    0x70,eax
  4170a5:	gs sbb al,0xe0
  4170a8:	iret   
  4170a9:	inc    edi
  4170aa:	add    al,0x9d
  4170ac:	out    0x6c,eax
  4170ae:	cmc    
  4170af:	pusha  
  4170b0:	out    0x73,al
  4170b2:	jne    0x41706e
  4170b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b5:	aas    
  4170b6:	imul   ebp,DWORD PTR [ecx-0x3c],0x55
  4170ba:	shl    BYTE PTR [edi+0x5e],1
  4170bd:	mov    ah,BYTE PTR [ebx]
  4170bf:	xor    DWORD PTR [esi+0x31],ecx
  4170c2:	fs inc ecx
  4170c4:	xor    DWORD PTR [eax],esp
  4170c6:	jne    0x41713e
  4170c8:	fiadd  WORD PTR [ebp-0x3bc6320d]
  4170ce:	mov    ds:0x68bb4682,eax
  4170d3:	popa   
  4170d4:	daa    
  4170d5:	adc    BYTE PTR [esi],bh
  4170d7:	outs   dx,BYTE PTR ds:[esi]
  4170d8:	sbb    eax,0x26297414
  4170dd:	dec    ecx
  4170de:	rcl    DWORD PTR [edx+0x6c],0x65
  4170e2:	and    eax,0x86160947
  4170e7:	(bad)  [ecx-0x2060ce]
  4170ed:	sbb    eax,0x2528c36c
  4170f2:	es out 0x40,al
  4170f5:	gs mov cl,0x68
  4170f8:	lock imul edi,DWORD PTR [ecx+ebp*8],0x8b665abd
  417100:	(bad)  
  417101:	sbb    eax,0xa130b875
  417106:	je     0x41713e
  417108:	call   0x8bc3619c
  41710d:	ins    BYTE PTR es:[edi],dx
  41710e:	mov    cl,0xe6
  417110:	or     BYTE PTR [ecx-0x80],ch
  417113:	ins    BYTE PTR es:[edi],dx
  417114:	rol    DWORD PTR [eax+0xf077c7b],cl
  41711a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711b:	inc    eax
  41711c:	mul    DWORD PTR [ebp+0x1e]
  41711f:	repz mov dl,0x88
  417122:	stc    
  417123:	pop    es
  417124:	mov    ds:0xecfe1c8d,eax
  417129:	hlt    
  41712a:	jne    0x41719d
  41712c:	shr    ah,0x62
  41712f:	inc    ecx
  417130:	inc    esi
  417131:	cmp    BYTE PTR [esi+0x75e01da0],0x5
  417138:	mov    dh,0xce
  41713a:	mov    ds:0x7581f531,al
  41713f:	outs   dx,DWORD PTR ds:[esi]
  417140:	aaa    
  417141:	sub    ebx,DWORD PTR [ebx-0x66]
  417144:	sti    
  417145:	ss in  eax,dx
  417147:	pushw  cs
  417149:	sahf   
  41714a:	jo     0x4170fa
  41714c:	shr    ebx,cl
  41714e:	das    
  41714f:	dec    ebp
  417150:	mov    al,0x7
  417152:	(bad)  
  417154:	push   esi
  417155:	gs aaa 
  417157:	mov    bh,BYTE PTR [edi-0x1f]
  41715a:	mov    edi,0x36888bcf
  41715f:	fld    TBYTE PTR [ebp+0x18e17546]
  417165:	addr16 loop 0x41713f
  417168:	and    edx,DWORD PTR [eax+ebp*2-0x5d]
  41716c:	cmp    ebp,edi
  41716e:	cmc    
  41716f:	mov    ch,0x4f
  417171:	pop    eax
  417172:	rol    esi,cl
  417174:	add    BYTE PTR [esi],al
  417176:	jne    0x4171e6
  417178:	sbb    BYTE PTR [eax+0x7cf1c4],cl
  41717e:	lods   al,BYTE PTR ds:[esi]
  41717f:	sar    BYTE PTR [eax+0x44],cl
  417182:	jo     0x41715c
  417184:	sub    ecx,0xfffffff2
  417187:	out    0xd0,al
  417189:	dec    ecx
  41718a:	sbb    DWORD PTR [ebp-0x197d1cba],edi
  417190:	adc    al,ch
  417192:	and    BYTE PTR [ebp+ebx*2+0x6b],0xb2
  417197:	inc    ecx
  417198:	or     BYTE PTR [ebp-0x5f],cl
  41719b:	dec    esi
  41719c:	pop    edx
  41719d:	js     0x4171d4
  41719f:	iret   
  4171a0:	rcr    DWORD PTR [ebx],cl
  4171a2:	jb     0x41718f
  4171a4:	in     eax,0x56
  4171a6:	sub    dh,BYTE PTR [esi+0x1cf054a3]
  4171ac:	sbb    ebx,DWORD PTR [esi-0x2b]
  4171af:	call   0xf1d0:0x95953606
  4171b6:	add    al,0xc2
  4171b8:	stos   DWORD PTR es:[edi],eax
  4171b9:	jge    0x41715c
  4171bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bc:	retf   
  4171bd:	cmp    edi,DWORD PTR [edi-0x5e]
  4171c0:	pop    ebx
  4171c1:	dec    esi
  4171c2:	adc    esp,DWORD PTR [esi+0x2b]
  4171c5:	pop    edx
  4171c6:	rcr    DWORD PTR ds:0x985240d3,cl
  4171cc:	mov    edx,0x20b9d112
  4171d1:	fistp  WORD PTR gs:[ebp+0x2f]
  4171d5:	aaa    
  4171d6:	cmp    al,0x9e
  4171d8:	dec    esp
  4171d9:	call   0x8984ee4f
  4171de:	jbe    0x41721c
  4171e0:	addr16 popf 
  4171e2:	and    DWORD PTR [edx+eax*8],0x66
  4171e6:	or     edx,DWORD PTR [ebx]
  4171e8:	mov    bl,0x7c
  4171ea:	outs   dx,DWORD PTR ds:[esi]
  4171eb:	das    
  4171ec:	xor    ecx,DWORD PTR [edi-0x54]
  4171ef:	sbb    eax,0xc0891357
  4171f4:	add    edi,0x75
  4171f7:	sub    al,0x32
  4171f9:	gs inc edi
  4171fb:	sbb    BYTE PTR [ecx-0x38bee011],cl
  417201:	idiv   esi
  417203:	popf   
  417204:	cmp    eax,0xb6b47536
  417209:	xchg   esi,eax
  41720a:	sub    DWORD PTR [esi-0x2e],ebp
  41720d:	xchg   ebp,eax
  41720e:	mov    DWORD PTR [edi-0x54fa57f5],edi
  417214:	in     eax,0xda
  417216:	cmp    ah,bl
  417218:	push   edi
  417219:	add    eax,0x78523d2b
  41721e:	bound  edx,QWORD PTR [edi-0xb]
  417221:	cmp    al,0x9
  417223:	data16 jnp 0x4171cc
  417226:	inc    ecx
  417227:	adc    al,0xea
  417229:	call   0x7c54:0x421ee7c5
  417230:	xor    al,0xe3
  417232:	jne    0x417286
  417234:	(bad)  
  417235:	and    al,0x1c
  417237:	inc    esi
  417238:	rcl    edx,1
  41723a:	jecxz  0x4171d2
  41723c:	push   ebp
  41723d:	inc    eax
  41723e:	inc    ebp
  41723f:	pushf  
  417240:	cmp    DWORD PTR ds:0x604d2035,edi
  417246:	jne    0x41722d
  417248:	arpl   ax,bp
  41724a:	inc    ebx
  41724b:	and    dh,0x65
  41724e:	push   ebp
  41724f:	jp     0x4171fd
  417251:	pop    eax
  417252:	push   cs
  417253:	cmp    ebp,DWORD PTR [ebp-0x24584c15]
  417259:	sti    
  41725a:	jne    0x4171f3
  41725c:	repz add dh,ch
  41725f:	ins    BYTE PTR es:[edi],dx
  417260:	out    0x56,al
  417262:	push   0x452b5561
  417267:	pusha  
  417268:	jmp    0x4427:0x40aa5ff7
  41726f:	fld    TBYTE PTR [ebp+edx*4+0x15]
  417273:	sub    esp,DWORD PTR [edi]
  417275:	arpl   si,di
  417277:	data16 mov al,0x4d
  41727a:	adc    al,0xfc
  41727c:	shl    DWORD PTR [esi-0x4dab25eb],cl
  417282:	fwait
  417283:	xlat   BYTE PTR ds:[ebx]
  417284:	mov    bl,0x66
  417286:	(bad)  
  417287:	call   0xc859a31b
  41728c:	add    DWORD PTR es:[ebp-0x1ab91ab3],ebx
  417293:	add    eax,DWORD PTR es:0x70007044
  41729a:	loop   0x4172a9
  41729c:	xor    eax,0x4666044f
  4172a1:	in     al,0x53
  4172a3:	push   esp
  4172a4:	ret    
  4172a5:	add    BYTE PTR [esi+0x23],dl
  4172a8:	dec    ebp
  4172a9:	repz jne 0x41732b
  4172ac:	adc    ecx,ecx
  4172ae:	enter  0x7aae,0xef
  4172b2:	pop    eax
  4172b3:	addr16 ins BYTE PTR es:[di],dx
  4172b6:	inc    ecx
  4172b7:	cmp    esp,0x727fa892
  4172bd:	mov    WORD PTR ds:0x75752372,gs
  4172c3:	pop    ecx
  4172c4:	sub    ecx,DWORD PTR [esi+0x54e9bff5]
  4172ca:	pushf  
  4172cb:	jmpw   0xb547
  4172cf:	sti    
  4172d0:	fnstenv [eax]
  4172d2:	mov    ch,0xa1
  4172d4:	out    dx,al
  4172d5:	lods   al,BYTE PTR ds:[esi]
  4172d6:	inc    edi
  4172d7:	cmp    al,BYTE PTR [esi-0x32]
  4172da:	push   edx
  4172db:	adc    BYTE PTR [ebx-0x70f4550a],dl
  4172e1:	enterw 0x5ffc,0x32
  4172e6:	or     eax,DWORD PTR [edx+0x1d2ee53]
  4172ec:	rcr    DWORD PTR [ebx+edi*2+0x43],cl
  4172f0:	addr16 inc ebp
  4172f2:	nop
  4172f3:	jns    0x4172b6
  4172f5:	arpl   WORD PTR [esp+ecx*2-0x185c5f],dx
  4172fc:	sub    ebx,eax
  4172fe:	jo     0x4172e1
  417300:	rol    DWORD PTR [esi-0x2e561868],cl
  417306:	sbb    al,BYTE PTR [ebp+ecx*8+0x66]
  41730a:	adc    edx,eax
  41730c:	pop    ss
  41730d:	xlat   BYTE PTR ds:[bx]
  41730f:	jecxz  0x417344
  417311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417312:	enter  0x4a5f,0xbc
  417316:	call   0xda5a:0xf2d900c1
  41731d:	lock xor eax,0x39b6f29
  417323:	data16 shl BYTE PTR [ebx+0x53],cl
  417327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417328:	jnp    0x4172f6
  41732a:	sbb    esi,DWORD PTR [esi+0x36]
  41732d:	mov    dl,0x75
  41732f:	mov    dh,0xc0
  417331:	push   edx
  417332:	add    eax,0xf17e7b7a
  417337:	data16 or al,0xfe
  41733a:	div    DWORD PTR [edi]
  41733c:	rcl    ebx,0xa6
  41733f:	push   edx
  417340:	loop   0x417397
  417342:	jne    0x41737f
  417344:	rol    BYTE PTR [ebx+0x7347d169],1
  41734a:	xchg   BYTE PTR [edx-0x5922efe9],al
  417350:	and    eax,0x7aa4f371
  417355:	in     eax,0xba
  417357:	test   eax,0x80da0fa5
  41735c:	xor    eax,0xd5364d65
  417361:	(bad)
  417364:	pop    ebx
  417365:	outs   dx,DWORD PTR ds:[esi]
  417366:	jecxz  0x41739d
  417368:	nop
  417369:	mov    di,0x3e45
  41736d:	xchg   esp,eax
  41736e:	(bad)  [eax]
  417370:	inc    esp
  417371:	imul   DWORD PTR gs:[eax-0x53]
  417375:	mov    dl,0xaa
  417377:	test   al,0x92
  417379:	pop    esi
  41737a:	retf   0xf61c
  41737d:	shl    DWORD PTR [ebp-0x74],0x18
  417381:	pop    edx
  417382:	mov    eax,0x28695936
  417387:	addr16 es iret 
  41738a:	fcmovb st,st(5)
  41738c:	loopne 0x41731b
  41738e:	out    dx,al
  41738f:	(bad)  
  417390:	lods   al,BYTE PTR ds:[esi]
  417391:	sahf   
  417392:	jne    0x417369
  417394:	outs   dx,BYTE PTR ds:[esi]
  417395:	bound  esi,QWORD PTR [ebp+0x17ccfd5]
  41739b:	inc    edi
  41739c:	mov    esi,0x7866fcd9
  4173a1:	in     al,0x2a
  4173a3:	xchg   edx,eax
  4173a4:	rol    DWORD PTR [ecx-0x52],cl
  4173a7:	push   edi
  4173a8:	arpl   WORD PTR [ebp+0x534dd96c],sp
  4173ae:	popa   
  4173af:	inc    ecx
  4173b0:	inc    eax
  4173b1:	gs push 0x79841dea
  4173b7:	sub    al,0xd3
  4173b9:	and    ah,dh
  4173bb:	out    dx,al
  4173bc:	jb     0x41735f
  4173be:	lea    ecx,ds:0x18106519
  4173c4:	mov    ds:0x5efc3ddb,al
  4173c9:	cmc    
  4173ca:	enter  0x7bdf,0x86
  4173ce:	jne    0x4173b2
  4173d0:	call   0xc12d:0xb8c7bcdf
  4173d7:	mov    eax,ds:0xb0986525
  4173dc:	ja     0x4173ca
  4173de:	fsubr  DWORD PTR [edx-0x584532a4]
  4173e4:	inc    ecx
  4173e5:	mov    dl,0x91
  4173e7:	mov    dl,ch
  4173e9:	mov    dh,0x74
  4173eb:	fs mov edi,0xd700e89
  4173f1:	lar    esp,WORD PTR [esi+0x5]
  4173f5:	push   es
  4173f6:	adc    bx,0xe471
  4173fb:	adc    ebx,DWORD PTR [esi+0x65aa55e]
  417401:	gs loopne 0x4173fe
  417404:	ret    
  417405:	xchg   edi,eax
  417406:	out    0xc5,al
  417408:	je     0x4173f5
  41740a:	and    BYTE PTR [edi+edi*8+0x6c6f763b],dl
  417411:	in     eax,0x44
  417413:	dec    edi
  417414:	push   edx
  417415:	push   esp
  417416:	test   esi,eax
  417418:	repnz pop ebx
  41741a:	jae    0x417449
  41741c:	daa    
  41741d:	or     ch,dl
  41741f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417420:	pop    esi
  417421:	mov    ecx,0xcfbf5d8e
  417426:	jne    0x41747b
  417428:	inc    edi
  417429:	add    al,0xf8
  41742b:	cli    
  41742c:	(bad)  
  41742d:	outs   dx,DWORD PTR ds:[esi]
  41742e:	xor    BYTE PTR [esi+0x79],ah
  417431:	inc    ecx
  417432:	mov    al,ds:0xc50fe69f
  417437:	ret    
  417438:	inc    esp
  417439:	in     eax,0x73
  41743b:	mov    ss:0x8f91ce4f,al
  417441:	mov    es,WORD PTR [esi+0x69]
  417444:	jge    0x41741b
  417446:	mov    ebx,0xaa08379e
  41744b:	sub    DWORD PTR [esi-0x456e8a82],esi
  417451:	cli    
  417452:	and    DWORD PTR ds:0x66927052,0x10
  417459:	jp     0x4173fa
  41745b:	dec    ebx
  41745c:	xlat   BYTE PTR ds:[ebx]
  41745d:	repnz and DWORD PTR [edx+0x3e],0x7339755b
  417465:	(bad)  
  417467:	pop    ss
  417468:	stos   BYTE PTR es:[edi],al
  417469:	and    BYTE PTR [ebp+0x61],0xc
  41746d:	fs dec edx
  41746f:	fwait
  417470:	ror    DWORD PTR [esi-0x72],cl
  417473:	add    al,0x85
  417475:	and    ecx,edi
  417477:	and    BYTE PTR [edi+0x65],dh
  41747a:	push   esi
  41747b:	xor    al,0x65
  41747d:	test   BYTE PTR [ebp-0x2d],ch
  417480:	push   esi
  417481:	pop    edx
  417482:	jg     0x417425
  417484:	iret   
  417485:	jae    0x4174fc
  417487:	retf   
  417488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417489:	push   0xc2e1c067
  41748e:	test   BYTE PTR [esi+0x55],ah
  417491:	dec    esp
  417492:	aaa    
  417493:	cmp    dl,bl
  417495:	mov    ebx,0x6d4176d7
  41749b:	lahf   
  41749c:	mov    ebp,esp
  41749e:	inc    edx
  41749f:	arpl   WORD PTR [eax+ecx*1-0x17],bx
  4174a3:	nop
  4174a4:	repz mov ecx,0x2bfd385c
  4174aa:	pop    eax
  4174ab:	enter  0xe6d7,0xb9
  4174af:	jmp    0x53e39a8e
  4174b4:	push   edi
  4174b5:	cmp    DWORD PTR [edx+0x4aabf229],eax
  4174bb:	rcl    BYTE PTR [esi+0x4b],0x3b
  4174bf:	es int3 
  4174c1:	mov    esi,0x6581035a
  4174c6:	jne    0x4174be
  4174c8:	popa   
  4174c9:	sub    BYTE PTR ds:0x1a399e17,bl
  4174cf:	mov    ds:0x3638b453,al
  4174d4:	and    eax,0xdb1e6ca2
  4174d9:	jp     0x41745e
  4174db:	mov    ch,0x5d
  4174dd:	in     eax,0xb8
  4174df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e0:	add    BYTE PTR [edx*8+0x3465fe08],bl
  4174e7:	jb     0x417494
  4174e9:	and    edi,DWORD PTR [edi-0x46bfbae5]
  4174ef:	xchg   DWORD PTR [ecx+0x78a8755f],ebx
  4174f5:	push   ebx
  4174f6:	scas   al,BYTE PTR es:[edi]
  4174f7:	scas   eax,DWORD PTR es:[edi]
  4174f8:	inc    ecx
  4174f9:	fld    st(0)
  4174fb:	sub    ax,0x1db5
  4174ff:	mov    ah,0xea
  417501:	call   0xd2646daf
  417506:	mov    dh,0x20
  417508:	jmp    0x4174cc
  41750a:	test   DWORD PTR [ecx+0x2b],ecx
  41750d:	mov    bh,0x21
  41750f:	data16 cmp ah,dl
  417512:	ret    0xc98f
  417515:	mov    edi,0xe6dc7e38
  41751a:	mov    eax,0x64005f3c
  41751f:	fistp  WORD PTR [edx+0x6f088b67]
  417525:	and    eax,0xe692932c
  41752a:	mov    ah,0xa5
  41752c:	mov    WORD PTR [eax],?
  41752e:	ja     0x41757e
  417530:	sub    BYTE PTR [ebp-0x1b],ah
  417533:	adc    DWORD PTR [eax],eax
  417535:	cmp    DWORD PTR [edx-0x4444a348],0xffffffe8
  41753c:	inc    ecx
  41753d:	ins    BYTE PTR es:[edi],dx
  41753e:	dec    ebp
  41753f:	cmp    BYTE PTR [esi-0x49168ac6],cl
  417545:	ss dec ebx
  417547:	aad    0x6b
  417549:	mov    edx,0x7e9366ef
  41754e:	and    ecx,DWORD PTR [ebp+0x3ed2e99b]
  417554:	or     bl,BYTE PTR [edi]
  417556:	cdq    
  417557:	adc    DWORD PTR [ebx-0xe],0x70
  41755b:	sub    eax,0xbdf5164d
  417560:	and    BYTE PTR [ebx+ebx*1],al
  417563:	data16 sbb cl,BYTE PTR [ebp-0x25]
  417567:	call   0x542ef5e
  41756c:	out    dx,al
  41756d:	sahf   
  41756e:	mov    edx,0x6e68974
  417573:	mov    dh,0x8b
  417575:	addr16 aas 
  417577:	pusha  
  417578:	ss cmc 
  41757a:	jno    0x417583
  41757c:	add    DWORD PTR [esi],0xffffff92
  41757f:	aad    0xd3
  417581:	add    edi,DWORD PTR [ecx+0x29]
  417584:	out    0x1c,eax
  417586:	mov    dl,0x2d
  417588:	fsub   DWORD PTR [esi-0x4c]
  41758b:	mov    ecx,0xafa7dee1
  417590:	jge    0x417537
  417592:	call   DWORD PTR [eax-0x7367f044]
  417598:	push   ebx
  417599:	mov    edx,0x49a4e4b6
  41759e:	pop    es
  41759f:	es lahf 
  4175a1:	imul   ebp,DWORD PTR [edx],0x3722c866
  4175a7:	jge    0x41759d
  4175a9:	mov    cl,0xc5
  4175ab:	cmc    
  4175ac:	push   ecx
  4175ad:	enter  0xd394,0x15
  4175b1:	in     eax,0x5f
  4175b3:	cld    
  4175b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b5:	push   ecx
  4175b6:	not    BYTE PTR [ebx+0x54]
  4175b9:	cmp    DWORD PTR [ecx+0x61],esi
  4175bc:	stos   DWORD PTR es:[edi],eax
  4175bd:	sub    DWORD PTR ds:0x1b385616,esp
  4175c3:	retf   0xe054
  4175c6:	jne    0x417602
  4175c8:	xor    eax,0xc66110b3
  4175cd:	and    cl,bh
  4175cf:	data16 cld 
  4175d1:	call   0x77156f82
  4175d6:	sbb    BYTE PTR [ebx+0x3d],al
  4175d9:	jae    0x417564
  4175db:	out    dx,eax
  4175dc:	mov    esp,DWORD PTR [esi+0xb]
  4175df:	imul   BYTE PTR [ebx+0x7d0db8a2]
  4175e5:	loopne 0x4175cc
  4175e7:	jl     0x4175f0
  4175e9:	div    DWORD PTR [ebp-0x31]
  4175ec:	inc    edi
  4175ed:	aaa    
  4175ee:	mov    esp,DWORD PTR ss:[ebx-0x4d997b85]
  4175f5:	mov    ecx,0xcd06494
  4175fa:	popa   
  4175fb:	shr    BYTE PTR [edi+0x52cfecea],1
  417601:	xor    edx,esp
  417603:	outs   dx,DWORD PTR ds:[esi]
  417604:	dec    ecx
  417605:	sbb    DWORD PTR [ecx],0x29
  417608:	jmp    0xe052:0x79180257
  41760f:	ror    BYTE PTR [esi],0x7d
  417612:	gs pushf 
  417614:	push   ebp
  417615:	sub    ch,BYTE PTR [ecx]
  417617:	inc    ax
  417619:	aaa    
  41761a:	push   esi
  41761b:	lods   al,BYTE PTR ds:[esi]
  41761c:	ror    DWORD PTR [edi+0x3861cd7c],cl
  417622:	pop    ebx
  417623:	jge    0x41764f
  417625:	pusha  
  417626:	popa   
  417627:	aad    0x62
  417629:	test   DWORD PTR [eax-0x49067c94],esp
  41762f:	test   ebx,edx
  417631:	xchg   ecx,eax
  417632:	loope  0x417636
  417634:	(bad)  
  417635:	daa    
  417636:	xor    ebp,DWORD PTR [eax+esi*8]
  417639:	gs xchg esp,eax
  41763b:	push   0x491bfc5d
  417640:	cmp    al,0x15
  417642:	loop   0x417642
  417644:	mov    cl,0x99
  417646:	jne    0x417678
  417648:	or     DWORD PTR [ecx+esi*2],ebp
  41764b:	cmp    bh,ah
  41764d:	and    eax,0xfbcc667d
  417652:	jl     0x41765e
  417654:	rcl    esp,cl
  417656:	pop    ds
  417657:	ss jmp 0x2ee8b694
  41765d:	pop    edx
  41765e:	cmp    BYTE PTR ds:0xb083a6d6,cl
  417664:	xor    BYTE PTR [esi+0x3cd379f5],0x46
  41766b:	pop    esi
  41766c:	loop   0x41760d
  41766e:	push   ebp
  41766f:	mov    ?,WORD PTR ds:0xfecd860
  417675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417676:	adc    bh,BYTE PTR ds:0x558521b3
  41767c:	vpsubd ymm6,ymm2,YMMWORD PTR [ebp+ebp*4-0x2f788a3f]
  417685:	add    BYTE PTR [edi-0x57143580],bl
  41768b:	pop    dx
  41768d:	mov    esp,0x6d3e53f
  417692:	popf   
  417693:	ficom  DWORD PTR [edi-0x4f476c88]
  417699:	popa   
  41769a:	outs   dx,DWORD PTR ds:[esi]
  41769b:	and    al,0xf4
  41769d:	jle    0x4176ab
  41769f:	imul   esp,DWORD PTR [ebx-0x4f],0xd379b03
  4176a6:	sbb    ch,ah
  4176a8:	out    0x3c,al
  4176aa:	cmp    ch,BYTE PTR [ebx+0x6e]
  4176ad:	lea    esp,[eax]
  4176af:	ds ret 0xc46d
  4176b3:	push   ss
  4176b4:	mov    BYTE PTR [edi+edx*8+0x66],al
  4176b8:	jns    0x4176fa
  4176ba:	loop   0x417696
  4176bc:	shl    DWORD PTR [ebp-0x20],cl
  4176bf:	inc    edi
  4176c0:	cmp    eax,0xeae8bd2c
  4176c5:	add    edi,DWORD PTR gs:[ebx]
  4176c8:	imul   edi,edi,0x71481134
  4176ce:	aaa    
  4176cf:	or     ebp,ebx
  4176d1:	lods   al,BYTE PTR ds:[esi]
  4176d2:	push   0x4a
  4176d4:	mov    ch,0x1c
  4176d6:	xchg   edi,eax
  4176d7:	rcr    dl,0xff
  4176da:	mov    ah,0x3d
  4176dc:	mov    bh,0xc1
  4176de:	ja     0x417723
  4176e0:	aad    0x1a
  4176e2:	retf   0xcf69
  4176e5:	push   ebp
  4176e6:	jnp    0x4176cb
  4176e8:	pop    ss
  4176e9:	add    eax,0x6976fe12
  4176ee:	push   0x6c
  4176f0:	push   cs
  4176f1:	push   edx
  4176f2:	jne    0x417766
  4176f4:	and    BYTE PTR ds:[esi-0x14],bl
  4176f8:	rcr    DWORD PTR [ecx+0x9],1
  4176fb:	inc    dh
  4176fd:	mov    cx,dx
  417700:	bswap  edi
  417702:	das    
  417703:	and    eax,0xfe7427d3
  417708:	out    dx,al
  417709:	(bad)
  41770c:	shl    BYTE PTR [edi+0x71],0xb0
  417710:	mov    dh,0xf2
  417712:	mov    cl,0x19
  417714:	outs   dx,BYTE PTR ds:[esi]
  417715:	popf   
  417716:	pushf  
  417717:	push   edi
  417718:	rcl    edi,cl
  41771a:	and    esi,ebx
  41771c:	aaa    
  41771d:	inc    ecx
  41771e:	ins    BYTE PTR es:[edi],dx
  41771f:	jb     0x417714
  417721:	gs jmp 0x4176ba
  417724:	stos   DWORD PTR es:[edi],eax
  417725:	gs mov edx,0xb951a062
  41772b:	pop    eax
  41772c:	pop    ebx
  41772d:	cmp    esi,DWORD PTR [ebp-0x65]
  417730:	dec    edi
  417731:	scas   al,BYTE PTR es:[edi]
  417732:	xchg   esp,eax
  417733:	add    al,bl
  417735:	push   ss
  417736:	xchg   ebp,eax
  417737:	gs dec esi
  417739:	add    bl,bl
  41773b:	dec    ebx
  41773c:	jmp    0x4176c7
  41773e:	inc    ebp
  41773f:	fs add al,dh
  417742:	jne    0x4177a6
  417744:	stos   DWORD PTR es:[edi],eax
  417745:	sbb    al,ah
  417747:	dec    ecx
  417748:	repnz pusha 
  41774a:	addr16 stc 
  41774c:	pushf  
  41774d:	sub    BYTE PTR [ebp+0x5e],0xdb
  417751:	(bad)  
  417752:	aam    0xa0
  417754:	shl    DWORD PTR [edi-0x61],cl
  417757:	push   esi
  417758:	add    ebp,DWORD PTR [eax]
  41775a:	mov    al,0xca
  41775c:	popa   
  41775d:	gs scas eax,DWORD PTR es:[edi]
  41775f:	mov    dl,0xbc
  417761:	fwait
  417762:	int    0xbf
  417764:	icebp  
  417765:	retf   
  417766:	jbe    0x41775e
  417768:	mov    ds:0x4e09a966,al
  41776d:	add    DWORD PTR [eax-0x16],esp
  417770:	stos   BYTE PTR es:[edi],al
  417771:	data16 arpl WORD PTR [edi+esi*1+0xb],di
  417776:	fisub  WORD PTR [esi-0x13d017b0]
  41777c:	ret    0x7552
  41777f:	cmp    ecx,0x14
  417782:	sub    bh,ch
  417784:	jbe    0x4177cd
  417786:	cmp    al,0x66
  417788:	in     al,0x3b
  41778a:	bound  ecx,QWORD PTR [ecx]
  41778c:	rol    edx,cl
  41778e:	mov    al,0x5b
  417790:	fwait
  417791:	or     al,0x3b
  417793:	call   0x8c85da39
  417798:	cs shr ah,cl
  41779b:	pop    es
  41779c:	retf   0xcd2
  41779f:	out    0xd3,al
  4177a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a2:	pusha  
  4177a3:	out    0x3c,al
  4177a5:	call   0x66e2913c
  4177aa:	pop    ebp
  4177ab:	sub    al,0x0
  4177ad:	dec    ecx
  4177ae:	mov    bl,0xc0
  4177b0:	jb     0x417796
  4177b2:	sahf   
  4177b3:	sbb    ebx,DWORD PTR [eax-0x4394699]
  4177b9:	sub    BYTE PTR [eax+ebx*8],0xcb
  4177bd:	bound  edx,QWORD PTR [ecx+0x666c0df9]
  4177c3:	dec    edi
  4177c4:	pop    eax
  4177c5:	arpl   di,dx
  4177c7:	push   esp
  4177c8:	jp     0x41776a
  4177ca:	xchg   esp,eax
  4177cb:	(bad)  
  4177cc:	in     eax,0x89
  4177ce:	(bad)  
  4177cf:	jne    0x417841
  4177d1:	data16 arpl WORD PTR [edi+eiz*4-0x5b5dbc0a],di
  4177d9:	addr16 pop ecx
  4177db:	jbe    0x4177d5
  4177dd:	das    
  4177de:	imul   eax
  4177e0:	iret   
  4177e1:	push   es
  4177e2:	and    al,0xd2
  4177e4:	push   esp
  4177e5:	scas   eax,DWORD PTR es:[edi]
  4177e6:	cmp    DWORD PTR [edi],ebp
  4177e8:	xor    eax,0x52fd75c9
  4177ed:	and    edi,DWORD PTR [eax-0x5723fae3]
  4177f3:	cbw    
  4177f5:	cmp    DWORD PTR [esi],esp
  4177f7:	sti    
  4177f8:	shr    DWORD PTR [ecx],cl
  4177fa:	pop    esp
  4177fb:	adc    dl,BYTE PTR [ecx]
  4177fd:	push   0x6558e7e4
  417802:	retf   0x3931
  417805:	mov    eax,0xc17fa82c
  41780a:	dec    esi
  41780b:	xchg   esp,eax
  41780c:	dec    esi
  41780d:	shl    DWORD PTR [ebp-0x3a],cl
  417810:	cmc    
  417811:	pop    ss
  417812:	stos   DWORD PTR es:[edi],eax
  417813:	stos   DWORD PTR es:[edi],eax
  417814:	pop    edx
  417815:	push   ds
  417816:	mov    fs,WORD PTR [esi+0x6e]
  417819:	jnp    0x41784a
  41781b:	imul   edx,ebx,0x87d1b352
  417821:	mov    ch,0x96
  417823:	jns    0x4177cf
  417825:	popa   
  417826:	mov    dh,0x64
  417828:	aaa    
  417829:	push   ss
  41782a:	and    BYTE PTR ds:0xde18117b,bl
  417830:	ror    BYTE PTR [ebx],1
  417832:	popa   
  417833:	mov    bl,0xf2
  417835:	js     0x41789b
  417837:	mov    edx,0xcbf51cb7
  41783c:	icebp  
  41783d:	jle    0x4178bc
  41783f:	data16 lods al,BYTE PTR ds:[esi]
  417841:	xlat   BYTE PTR ds:[ebx]
  417842:	mov    bl,0x6b
  417844:	in     eax,0x43
  417846:	iret   
  417847:	das    
  417848:	stos   BYTE PTR es:[edi],al
  417849:	out    0x9c,al
  41784b:	dec    ebp
  41784c:	push   ebp
  41784d:	cmp    ah,BYTE PTR [esi]
  41784f:	test   cl,ch
  417851:	pusha  
  417852:	or     BYTE PTR [esi-0x49],cl
  417855:	aad    0xcb
  417857:	shl    DWORD PTR [ebx-0x6],0x2
  41785b:	mov    al,ds:0xb976e3cf
  417860:	mov    ah,0xff
  417862:	jne    0x417806
  417864:	retf   0x807f
  417867:	outs   dx,DWORD PTR ds:[esi]
  417868:	nop
  417869:	push   edx
  41786a:	xchg   esi,eax
  41786b:	sub    bp,bp
  41786e:	psrlq  mm4,QWORD PTR [bx+si+0x4e]
  417873:	fwait
  417874:	inc    ebp
  417875:	cmp    eax,0x66ca379a
  41787a:	or     al,al
  41787c:	mov    ch,ch
  41787e:	cdq    
  41787f:	ins    DWORD PTR es:[edi],dx
  417880:	push   edi
  417881:	cmp    DWORD PTR [ecx-0x6752f916],0x34007a6a
  41788b:	fidiv  DWORD PTR [ebx-0x1acf20ec]
  417891:	mov    eax,ds:0x7e6b66c3
  417896:	cwde   
  417897:	push   ebp
  417898:	rcr    DWORD PTR [eax+edx*1+0x77ad94e8],cl
  41789f:	bound  ebx,QWORD PTR [eax]
  4178a1:	push   0x275bc41d
  4178a6:	out    0x34,eax
  4178a8:	and    eax,DWORD PTR [ecx+0x75]
  4178ab:	dec    eax
  4178ac:	xlat   BYTE PTR ds:[ebx]
  4178ad:	jg     0x4178f2
  4178af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b0:	jl     0x417899
  4178b2:	imul   ecx,eax,0x62
  4178b5:	scas   al,BYTE PTR es:[edi]
  4178b6:	inc    ecx
  4178b7:	xchg   BYTE PTR [ebp+0x65],cl
  4178ba:	fmul   DWORD PTR [esi+0x7d]
  4178bd:	inc    ecx
  4178be:	jp     0x41790c
  4178c0:	rcl    BYTE PTR ds:0x993a08af,0x75
  4178c7:	in     al,0x34
  4178c9:	push   0x3cbfcb3e
  4178ce:	mov    edi,0x92834865
  4178d3:	shl    ch,cl
  4178d5:	xchg   ebp,eax
  4178d6:	cmp    eax,0x751c4b20
  4178db:	pushf  
  4178dc:	inc    edi
  4178dd:	mov    dl,0x74
  4178df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e0:	inc    ebp
  4178e1:	dec    edx
  4178e2:	dec    eax
  4178e3:	gs jno 0x417963
  4178e6:	jp     0x417925
  4178e8:	out    0x11,eax
  4178ea:	jne    0x417921
  4178ec:	pusha  
  4178ed:	jbe    0x417874
  4178ef:	ret    
  4178f0:	stc    
  4178f1:	sahf   
  4178f2:	or     al,0x66
  4178f4:	mov    ?,WORD PTR [ebx-0x6b15a861]
  4178fa:	mov    dl,0xe
  4178fc:	stos   DWORD PTR es:[edi],eax
  4178fd:	mov    ecx,0xbad6da2
  417902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417903:	pop    esp
  417904:	ficom  DWORD PTR [esi]
  417906:	out    dx,al
  417907:	data16 lods al,BYTE PTR ds:[esi]
  417909:	add    esp,eax
  41790b:	sahf   
  41790c:	jmp    0x66bc:0xe7fdabe7
  417913:	cmp    al,0x83
  417915:	(bad)
  417918:	push   edi
  417919:	ja     0x417931
  41791b:	or     al,0xd6
  41791d:	adc    eax,0x29086628
  417922:	es lock jmp 0x81df:0x308c57db
  41792b:	ins    BYTE PTR es:[edi],dx
  41792c:	add    BYTE PTR [ebx-0x4d83078b],ch
  417932:	sub    DWORD PTR [esi-0x19],esp
  417935:	xchg   ebp,eax
  417936:	jmp    0x734e5eb5
  41793b:	jb     0x417908
  41793d:	out    0xd8,al
  41793f:	cmc    
  417940:	adc    ebp,DWORD PTR [ebx-0x51]
  417943:	mov    DWORD PTR [edi-0x5f],esi
  417946:	loop   0x41794e
  417948:	arpl   WORD PTR [edx+0x3ea66167],sp
  41794e:	outs   dx,BYTE PTR ds:[esi]
  41794f:	mov    eax,0xe04b5e15
  417954:	xor    BYTE PTR [ebp-0x435299c4],ch
  41795a:	inc    ebx
  41795b:	enter  0x9e21,0xf5
  41795f:	mov    BYTE PTR [esi],bh
  417961:	aad    0x30
  417963:	data16 scas al,BYTE PTR es:[edi]
  417965:	enter  0x35cc,0x61
  417969:	ins    DWORD PTR es:[edi],dx
  41796a:	jne    0x41796c
  41796c:	or     ecx,esp
  41796e:	cmp    eax,0xd277ec2
  417973:	mov    dx,0x1181
  417977:	int3   
  417978:	shr    DWORD PTR [ebx+0x36],cl
  41797b:	hlt    
  41797c:	ja     0x417968
  41797e:	dec    esi
  41797f:	add    al,0x82
  417981:	inc    esp
  417982:	xchg   esp,eax
  417983:	adc    cl,BYTE PTR [edx]
  417985:	and    eax,0x446cf546
  41798a:	jnp    0x417a09
  41798c:	rol    edx,cl
  41798e:	mov    al,0x17
  417990:	call   0x3a89d07
  417995:	add    edx,DWORD PTR gs:[eax-0x37]
  417999:	xor    BYTE PTR [eax+0x58],ah
  41799c:	mov    dh,0x69
  41799e:	pop    eax
  41799f:	loop   0x417974
  4179a1:	add    eax,0x2f87ed7b
  4179a6:	test   BYTE PTR [ebx],al
  4179a8:	xchg   ebp,eax
  4179a9:	pop    ebx
  4179aa:	int    0x1
  4179ac:	mov    edx,0x7fd1021a
  4179b1:	mov    edi,0xf85f66f9
  4179b6:	jl     0x41796a
  4179b8:	ror    DWORD PTR [edx-0x34d92781],cl
  4179be:	das    
  4179bf:	shl    dl,cl
  4179c1:	jge    0x4179bf
  4179c3:	push   ss
  4179c4:	stos   BYTE PTR es:[edi],al
  4179c5:	out    0xa4,eax
  4179c7:	add    bp,di
  4179ca:	stos   DWORD PTR es:[edi],eax
  4179cb:	pop    ecx
  4179cc:	out    0x6c,al
  4179ce:	cmp    eax,DWORD PTR [edi-0x36]
  4179d1:	data16 out 0x46,al
  4179d4:	outs   dx,DWORD PTR ds:[esi]
  4179d5:	push   es
  4179d6:	fidivr DWORD PTR [edx+edi*1-0xe]
  4179da:	jmp    0x766:0x9a6b2
  4179e1:	mov    bh,0x1a
  4179e3:	or     esp,DWORD PTR [ebp-0x2d]
  4179e6:	jne    0x417999
  4179e8:	cld    
  4179e9:	add    al,0x5d
  4179eb:	push   ds
  4179ec:	repnz xchg esi,eax
  4179ee:	inc    ecx
  4179ef:	data16 aaa 
  4179f1:	xor    DWORD PTR [edi+0x25],esi
  4179f4:	shl    BYTE PTR [esi-0x3a],cl
  4179f7:	outs   dx,BYTE PTR ds:[esi]
  4179f8:	rol    BYTE PTR [ebx+0x1f],cl
  4179fb:	cmp    al,0xae
  4179fd:	addr16 xchg esp,eax
  4179ff:	pop    ss
  417a00:	mov    ch,0x64
  417a02:	arpl   WORD PTR [ebx],bp
  417a04:	dec    edx
  417a05:	in     eax,0xaf
  417a07:	push   0x471df5d6
  417a0c:	cli    
  417a0d:	gs xchg ebp,eax
  417a0f:	xchg   DWORD PTR [ebx-0x2a13c8d4],ebp
  417a15:	ret    
  417a16:	xor    eax,0xbfe6ce02
  417a1b:	xor    dl,BYTE PTR [ebx]
  417a1d:	aam    0x55
  417a1f:	imul   DWORD PTR [ecx+0x6207766]
  417a25:	jns    0x417a85
  417a27:	stc    
  417a28:	sbb    ecx,DWORD PTR [ecx-0x36]
  417a2b:	jo     0x4179ee
  417a2d:	inc    ebp
  417a2e:	jne    0x4179cd
  417a30:	cmc    
  417a31:	inc    edx
  417a32:	pop    es
  417a33:	lahf   
  417a34:	aas    
  417a35:	pop    edx
  417a36:	xchg   DWORD PTR [esi+0x2e],esp
  417a39:	les    eax,FWORD PTR [esi+0x6c]
  417a3c:	sbb    ah,BYTE PTR [esi]
  417a3e:	jno    0x417aa8
  417a40:	pushf  
  417a41:	lods   al,BYTE PTR ds:[esi]
  417a42:	mov    eax,0x3845d369
  417a47:	mov    eax,0x449d6685
  417a4c:	pop    esi
  417a4d:	fadd   DWORD PTR ds:0xbca20ac2
  417a53:	inc    edx
  417a54:	pop    edx
  417a55:	push   ds
  417a56:	jne    0x417a97
  417a58:	mov    ah,0xd4
  417a5a:	sbb    eax,0xf835b71
  417a5f:	data16 sub BYTE PTR [ebp+0x6dd32fc9],dl
  417a66:	jns    0x417aaa
  417a68:	mov    bl,BYTE PTR [eax+0x606e1af8]
  417a6e:	fistp  WORD PTR ss:0xabab99f3
  417a75:	add    DWORD PTR [edi],eax
  417a77:	sbb    bl,dl
  417a79:	rol    DWORD PTR [esi-0x23],1
  417a7c:	jmp    0x78c3e940
  417a81:	gs hlt 
  417a83:	sbb    DWORD PTR [edx+ebx*1-0x651bb034],edx
  417a8a:	dec    esi
  417a8b:	lds    ebp,FWORD PTR [ebx-0x8]
  417a8e:	jne    0x417a1e
  417a90:	sub    edx,DWORD PTR [ecx]
  417a92:	in     al,0xac
  417a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a95:	pop    esp
  417a96:	pop    edi
  417a97:	or     di,WORD PTR [edi+eax*1+0x38]
  417a9c:	rcl    DWORD PTR [ebp-0x46],cl
  417a9f:	or     eax,edi
  417aa1:	xchg   DWORD PTR [ebp+0x73],edx
  417aa4:	repnz pop edx
  417aa6:	inc    esp
  417aa7:	ds gs gs in eax,0x86
  417aac:	je     0x417a5e
  417aae:	(bad)  ds:0x8ee042c7
  417ab4:	mov    al,ds:0x53b1718f
  417ab9:	int3   
  417aba:	cmp    edx,DWORD PTR [eax-0x3c]
  417abd:	addr16 aaa 
  417abf:	push   0x1521550c
  417ac4:	retf   0x7476
  417ac7:	cli    
  417ac8:	shr    ebx,cl
  417aca:	add    eax,0xfa5c1145
  417acf:	jbe    0x417b34
  417ad1:	lods   al,BYTE PTR gs:[esi]
  417ad3:	pop    DWORD PTR [ebp-0xe29e200]
  417ad9:	cvtps2pd xmm7,QWORD PTR [ebx+0x19]
  417add:	jmp    0xadb00a2
  417ae2:	jg     0x417aca
  417ae4:	stos   DWORD PTR es:[edi],eax
  417ae5:	mov    bh,0x4f
  417ae7:	sar    BYTE PTR [edx+eiz*8+0x67],1
  417aeb:	push   0xedcce50b
  417af0:	sub    BYTE PTR [ebp+0x13df652f],bh
  417af6:	jne    0x417aa2
  417af8:	push   0x5f
  417afa:	jnp    0x417ac7
  417afc:	push   ecx
  417afd:	sub    al,0x49
  417aff:	dec    bp
  417b01:	pop    ss
  417b02:	inc    ebx
  417b03:	out    dx,eax
  417b04:	sar    DWORD PTR [edi+0x40],cl
  417b07:	jbe    0x417b26
  417b09:	xchg   BYTE PTR ds:0xc6fa7c10,dl
  417b0f:	ins    BYTE PTR es:[edi],dx
  417b10:	or     BYTE PTR [eax],dh
  417b12:	mov    ch,0xa3
  417b14:	push   edi
  417b15:	adc    WORD PTR [eax+esi*1-0x250f255e],bp
  417b1d:	pop    ebx
  417b1e:	mov    bh,0x62
  417b20:	xor    al,0x77
  417b22:	jne    0x417ac8
  417b24:	(bad)  
  417b25:	xchg   esp,eax
  417b26:	rcr    DWORD PTR [ecx],1
  417b28:	jno    0x417aca
  417b2a:	sbb    BYTE PTR [esi-0x14],ah
  417b2d:	fadd   DWORD PTR [edi+0x3282e536]
  417b33:	sbb    BYTE PTR [eax],cl
  417b35:	and    eax,0x90898386
  417b3a:	in     eax,0x20
  417b3c:	fnstsw WORD PTR [eax+ecx*1+0x66]
  417b40:	pop    es
  417b41:	mov    bl,0x8f
  417b43:	mov    edi,0x8db1b7d3
  417b48:	mov    bh,0x56
  417b4a:	jge    0x417af7
  417b4c:	and    DWORD PTR [ebp-0x47],esp
  417b4f:	adc    eax,0x204aea31
  417b54:	dec    ecx
  417b55:	jg     0x417b35
  417b57:	xor    eax,0xbde60f
  417b5c:	xchg   edx,eax
  417b5d:	sar    cl,cl
  417b5f:	stos   BYTE PTR es:[edi],al
  417b60:	fistp  WORD PTR [ebp-0x67]
  417b63:	fnstenv [ebp+0x50]
  417b66:	pop    ebp
  417b67:	data16 mov BYTE PTR [edx-0x78],dh
  417b6b:	and    eax,0xed4b8efe
  417b70:	shl    esi,cl
  417b72:	pop    esp
  417b73:	jbe    0x417b88
  417b75:	or     esp,DWORD PTR [ebx]
  417b77:	cmp    ebx,DWORD PTR ds:0x53c31d8c
  417b7d:	imul   esi,DWORD PTR [ebp+0x3c],0xffffff80
  417b81:	icebp  
  417b82:	test   esi,ebp
  417b84:	ror    DWORD PTR ds:0x4b9452c0,cl
  417b8a:	xchg   ebp,eax
  417b8b:	lods   eax,DWORD PTR ds:[esi]
  417b8c:	aad    0xfc
  417b8e:	je     0x417b2f
  417b90:	cmp    edi,ebx
  417b92:	call   0xd35c:0x6934a166
  417b99:	(bad)  [edx-0x6]
  417b9c:	sbb    DWORD PTR [ebx-0x35],eax
  417b9f:	nop
  417ba0:	xchg   edi,eax
  417ba1:	data16 jge 0x417c1a
  417ba4:	sbb    al,0xf1
  417ba6:	xor    DWORD PTR [eax-0x33b3fec],ebp
  417bac:	push   edi
  417bad:	sub    eax,0x1d09075
  417bb2:	test   eax,0xa219051d
  417bb7:	imul   ebp,DWORD PTR [ecx],0x95327f5
  417bbd:	cmp    al,0x3d
  417bbf:	and    al,0x84
  417bc1:	sbb    DWORD PTR [ebp+0x29],esi
  417bc4:	cmp    eax,ecx
  417bc6:	cs mov bl,0xe3
  417bc9:	jecxz  0x417bc4
  417bcb:	data16 xor bh,cl
  417bce:	push   ebx
  417bcf:	jle    0x417ba4
  417bd1:	push   0x34eb606b
  417bd6:	call   0x60700195
  417bdb:	adc    al,0xd3
  417bdd:	push   ds
  417bde:	arpl   cx,sp
  417be0:	inc    ebx
  417be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be2:	or     dl,0xd3
  417be5:	mov    eax,ds:0xf80ef23
  417bea:	xchg   esp,eax
  417beb:	jl     0x417c4c
  417bed:	gs jbe 0x417bd3
  417bf0:	call   0x91b27f5c
  417bf5:	dec    edx
  417bf6:	jae    0x417b8c
  417bf8:	pop    ds
  417bf9:	imul   esi,DWORD PTR [ebp+0x69],0xffffff8a
  417bfd:	jl     0x417c06
  417bff:	shl    BYTE PTR [eax],cl
  417c01:	sub    al,0x68
  417c03:	sbb    BYTE PTR [ecx+0x4d],0x93
  417c07:	es xchg ebp,eax
  417c09:	add    esp,0x2
  417c0c:	sahf   
  417c0d:	mov    bl,0x75
  417c0f:	sub    esi,DWORD PTR [eax+eax*1+0x1b7591f5]
  417c16:	and    esp,DWORD PTR [esi+0x4a]
  417c19:	out    dx,eax
  417c1a:	pop    es
  417c1b:	xchg   ebp,eax
  417c1c:	rcl    DWORD PTR [esi],cl
  417c1e:	lods   eax,DWORD PTR ds:[esi]
  417c1f:	mov    al,ds:0x3d9ee657
  417c24:	push   esi
  417c25:	dec    sp
  417c27:	or     ebx,esp
  417c29:	dec    esp
  417c2a:	fwait
  417c2b:	xor    DWORD PTR [ecx-0x2c93acca],eax
  417c31:	sub    eax,0x9f42851d
  417c36:	mov    ecx,DWORD PTR [ebx-0x16c19960]
  417c3c:	xchg   esp,eax
  417c3d:	or     al,bl
  417c3f:	popf   
  417c40:	jl     0x417cab
  417c42:	js     0x417bc6
  417c44:	rcr    DWORD PTR [esi+0x79],cl
  417c47:	push   eax
  417c48:	retf   
  417c49:	shr    BYTE PTR [ecx+esi*4-0x12],cl
  417c4d:	gs loop 0x417c27
  417c50:	and    cl,BYTE PTR [ecx+edx*1]
  417c53:	mov    ebx,0x99b074cd
  417c58:	cmp    BYTE PTR [eax+0x75],bh
  417c5b:	pushf  
  417c5c:	icebp  
  417c5d:	aaa    
  417c5e:	je     0x417c26
  417c60:	popa   
  417c61:	mov    bl,0x0
  417c63:	data16 sahf 
  417c65:	dec    esp
  417c66:	jo     0x417c65
  417c68:	rol    edx,cl
  417c6a:	dec    ecx
  417c6b:	xor    esp,esi
  417c6d:	lahf   
  417c6e:	jmp    FWORD PTR [ebx]
  417c70:	lods   eax,DWORD PTR ds:[esi]
  417c71:	in     ax,0xa1
  417c74:	fistp  DWORD PTR [ebx]
  417c76:	jl     0x417c6f
  417c78:	nop
  417c79:	inc    edi
  417c7a:	retf   0x10e9
  417c7d:	shl    BYTE PTR [ebp+0x43],1
  417c80:	mov    cl,0xfb
  417c82:	or     dh,dl
  417c84:	dec    edi
  417c85:	rcl    DWORD PTR [eax+0x66],1
  417c88:	fld    DWORD PTR [edi]
  417c8a:	jmp    0x37204f92
  417c8f:	shl    DWORD PTR [esi-0x40d98236],0x66
  417c96:	jb     0x417cb2
  417c98:	dec    BYTE PTR [ebp+0x0]
  417c9b:	icebp  
  417c9c:	call   0x7530:0xa5315af4
  417ca3:	es xor ebx,esp
  417ca6:	test   ebp,0x6160d030
  417cac:	test   al,0x6b
  417cae:	fdiv   QWORD PTR [edx-0x89e22d]
  417cb4:	das    
  417cb5:	mov    ch,0x7b
  417cb7:	aam    0x58
  417cb9:	clc    
  417cba:	xchg   ecx,eax
  417cbb:	push   ds
  417cbc:	ds in  eax,0x44
  417cbf:	addr16 dec ebp
  417cc1:	adc    edi,DWORD PTR [edx+0x1c]
  417cc4:	test   BYTE PTR [ecx+eax*8+0x2a],al
  417cc8:	retf   0x769e
  417ccb:	cmp    BYTE PTR [ebx-0x4a982a43],al
  417cd1:	xor    BYTE PTR [ebp-0x2b],dh
  417cd4:	or     BYTE PTR [edi-0x5c279877],dh
  417cda:	push   ebx
  417cdb:	rcr    BYTE PTR [eax],cl
  417cdd:	(bad)  
  417cde:	xor    DWORD PTR [esi+0x73],edx
  417ce1:	call   0x45316f80
  417ce6:	pop    edx
  417ce7:	not    BYTE PTR [eax-0x34bae0e3]
  417ced:	in     al,0x52
  417cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf0:	jbe    0x417c82
  417cf2:	enter  0x19de,0xce
  417cf6:	outs   dx,BYTE PTR ds:[esi]
  417cf7:	loope  0x417d2c
  417cf9:	fisubr DWORD PTR [ebx+0x12]
  417cfc:	jb     0x417ceb
  417cfe:	pop    esi
  417cff:	inc    edx
  417d00:	in     al,dx
  417d01:	or     ebp,esp
  417d03:	jnp    0x417d39
  417d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d06:	jle    0x417d21
  417d08:	cmp    al,0xe2
  417d0a:	xor    eax,0xae54ae3e
  417d0f:	cli    
  417d10:	cmp    eax,0x61675c05
  417d15:	push   esi
  417d16:	push   ebp
  417d17:	popf   
  417d18:	sub    ebx,esi
  417d1a:	mov    bh,0x48
  417d1c:	loope  0x417ced
  417d1e:	xchg   esp,eax
  417d1f:	inc    di
  417d21:	ds ins BYTE PTR es:[edi],dx
  417d23:	ss mov ch,0x8
  417d26:	mov    ebp,0xff36bb66
  417d2b:	sahf   
  417d2c:	shl    edx,cl
  417d2e:	ss push edi
  417d30:	sub    edx,esi
  417d32:	ret    0xe46e
  417d35:	inc    ecx
  417d36:	fnsave [eax+eiz*1-0x652a3894]
  417d3d:	xchg   esi,eax
  417d3e:	sub    al,0xc2
  417d40:	mov    BYTE PTR [eax],bl
  417d42:	xchg   esi,eax
  417d43:	(bad)  
  417d44:	push   cs
  417d45:	pusha  
  417d46:	fldenv [esi+edx*1]
  417d49:	xchg   ecx,eax
  417d4a:	aad    0xcc
  417d4c:	pusha  
  417d4d:	pop    es
  417d4e:	cmp    BYTE PTR [edi],dh
  417d50:	jne    0x417dbd
  417d52:	test   eax,ecx
  417d54:	push   ebp
  417d55:	push   0x27
  417d57:	shr    BYTE PTR [eax-0x11d2ca0a],cl
  417d5d:	or     bh,cl
  417d5f:	inc    edx
  417d60:	dec    eax
  417d61:	cld    
  417d62:	mov    esp,0xb841179c
  417d67:	dec    esi
  417d68:	hlt    
  417d69:	pusha  
  417d6a:	mov    ch,0x78
  417d6c:	mov    ds:0x7727a09e,eax
  417d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d72:	and    al,0x79
  417d74:	pusha  
  417d75:	jne    0x417d54
  417d77:	inc    edi
  417d78:	aad    0x1d
  417d7a:	popf   
  417d7b:	jle    0x417d3d
  417d7d:	inc    ebx
  417d7e:	jne    0x417da0
  417d80:	call   0xf9127c71
  417d85:	xor    eax,0x9c19be62
  417d8a:	jne    0x417de3
  417d8c:	test   al,0x97
  417d8e:	std    
  417d8f:	jns    0x417d2f
  417d91:	lods   eax,DWORD PTR ds:[esi]
  417d92:	jne    0x417dd9
  417d94:	mov    bl,0x35
  417d96:	leave  
  417d97:	pop    edx
  417d98:	outs   dx,DWORD PTR ds:[esi]
  417d99:	cmc    
  417d9a:	ret    0xb981
  417d9d:	jl     0x417d6b
  417d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da0:	dec    ebx
  417da1:	xchg   ebp,eax
  417da2:	retf   
  417da3:	push   ebp
  417da4:	sbb    eax,0x449175d0
  417da9:	sub    eax,0xa25ac093
  417dae:	test   al,0x65
  417db0:	cli    
  417db1:	sub    DWORD PTR [eax+0x3c],0xfc34355f
  417db8:	pop    eax
  417db9:	ja     0x417e21
  417dbb:	mov    eax,ds:0xc2a51b7d
  417dc0:	adc    ebx,DWORD PTR [eax+0x75fbfbd5]
  417dc6:	outs   dx,DWORD PTR ds:[esi]
  417dc7:	fsub   QWORD PTR [ebx+eax*4]
  417dca:	pop    eax
  417dcb:	jb     0x417dd9
  417dcd:	gs aaa 
  417dcf:	loopne 0x417dd1
  417dd1:	sub    edi,DWORD PTR [edi]
  417dd3:	and    eax,DWORD PTR [eax+0x2a87dcc7]
  417dd9:	es jne 0x417d70
  417ddc:	jnp    0x417e25
  417dde:	inc    edx
  417ddf:	xchg   esp,eax
  417de0:	adc    dh,bl
  417de2:	nop
  417de3:	jl     0x417dcb
  417de5:	cli    
  417de6:	add    DWORD PTR [esi-0x47],esp
  417de9:	push   ds
  417dea:	pop    ebx
  417deb:	add    eax,0xccaf57d3
  417df0:	push   ss
  417df1:	jecxz  0x417d93
  417df3:	xlat   BYTE PTR ds:[ebx]
  417df4:	test   eax,0x6152d60
  417df9:	into   
  417dfa:	mov    ch,0x8f
  417dfc:	mov    bl,0x55
  417dfe:	and    edx,DWORD PTR [eax-0x39058816]
  417e04:	pop    ebp
  417e05:	pop    ss
  417e06:	stc    
  417e07:	mov    BYTE PTR [edi-0x522e5a9e],dl
  417e0d:	jae    0x417e0a
  417e0f:	gs jmp 0x417e7b
  417e12:	mov    al,0x65
  417e14:	mov    ds:0xd5403ee7,eax
  417e19:	mov    dl,0xf5
  417e1b:	dec    ebx
  417e1c:	std    
  417e1d:	and    eax,0xd2bfc75
  417e22:	mov    bl,0xc9
  417e24:	jecxz  0x417e91
  417e26:	popaw  
  417e28:	xor    al,0x61
  417e2a:	add    ch,dl
  417e2c:	rol    DWORD PTR [eax+0x4c37af9b],cl
  417e32:	mov    eax,ds:0x82654994
  417e37:	cmp    al,0x89
  417e39:	inc    eax
  417e3a:	test   esp,ebp
  417e3c:	retf   
  417e3d:	in     al,0x74
  417e3f:	push   ss
  417e40:	repz lahf 
  417e42:	jne    0x417e47
  417e44:	dec    ebx
  417e45:	imul   eax,DWORD PTR [eax+0x42b3993a],0x66
  417e4c:	pop    es
  417e4d:	daa    
  417e4e:	dec    dl
  417e50:	out    dx,al
  417e51:	xchg   ebx,eax
  417e52:	fimul  DWORD PTR [eax+0x75]
  417e55:	ror    DWORD PTR [eax+0x60],1
  417e58:	into   
  417e59:	cs or  al,0x61
  417e5c:	retf   0x9fca
  417e5f:	adc    edi,ecx
  417e61:	jecxz  0x417ea8
  417e63:	ret    0xfe56
  417e66:	pop    esi
  417e67:	mov    ax,ds:0xe65101ea
  417e6d:	mov    eax,ds:0x6190f1fe
  417e72:	inc    edx
  417e73:	pusha  
  417e74:	jo     0x417dfb
  417e76:	stc    
  417e77:	cmp    DWORD PTR [edx],ebx
  417e79:	gs aam 0x36
  417e7c:	shl    BYTE PTR [edx-0x2ff3688e],1
  417e82:	sbb    al,0x35
  417e84:	cwde   
  417e85:	leave  
  417e86:	jbe    0x417ee0
  417e88:	mov    edi,0xc7ce03e7
  417e8d:	cdq    
  417e8e:	pop    edi
  417e8f:	inc    ecx
  417e90:	shl    DWORD PTR [ecx*2-0x419b69a],0xa3
  417e98:	cli    
  417e99:	aaa    
  417e9a:	and    dl,0xd3
  417e9d:	jl     0x417ee0
  417e9f:	iret   
  417ea0:	mov    al,ds:0x25e8de0c
  417ea5:	jmp    0xb759e51e
  417eaa:	in     eax,dx
  417eab:	push   ss
  417eac:	das    
  417ead:	inc    esi
  417eae:	mov    al,ds:0x419c07f6
  417eb3:	mov    eax,ds:0x5238b3d3
  417eb8:	in     al,dx
  417eb9:	jl     0x417e87
  417ebb:	scas   eax,DWORD PTR es:[edi]
  417ebc:	or     al,0x32
  417ebe:	mov    esi,0xf2f133bc
  417ec3:	leave  
  417ec4:	jo     0x417f06
  417ec6:	inc    esi
  417ec7:	xchg   ah,dh
  417ec9:	je     0x417ea9
  417ecb:	nop
  417ecc:	push   0x7c
  417ece:	pop    ebx
  417ecf:	rol    ebx,0xb3
  417ed2:	mov    WORD PTR [ecx],ss
  417ed4:	call   0xca57204e
  417ed9:	out    dx,eax
  417eda:	shl    DWORD PTR [esi+0x35],1
  417edd:	nop
  417ede:	ss js  0x417eb4
  417ee1:	aaa    
  417ee2:	xchg   esp,eax
  417ee3:	add    DWORD PTR [ecx+0x79],eax
  417ee6:	test   BYTE PTR [esi+0x7f],dh
  417ee9:	jae    0x417e81
  417eeb:	cld    
  417eec:	sbb    DWORD PTR [esi+edx*8+0x3f40d36f],eax
  417ef3:	loope  0x417f56
  417ef5:	jbe    0x417e85
  417ef7:	jl     0x417ec1
  417ef9:	out    0x74,eax
  417efb:	and    dl,bh
  417efd:	push   edx
  417efe:	jmp    0x259c2633
  417f03:	pop    eax
  417f04:	push   ebx
  417f05:	and    eax,0x8c985d64
  417f0a:	sub    dh,BYTE PTR ds:0xb8be81d3
  417f10:	jnp    0x417ee2
  417f12:	mov    al,0xa
  417f14:	or     DWORD PTR [ecx-0x6c],ebx
  417f17:	sbb    DWORD PTR [edi-0x1610a15a],edi
  417f1d:	cmp    eax,0x73e53aa2
  417f22:	push   es
  417f23:	pusha  
  417f24:	in     eax,0x65
  417f26:	es xchg ebp,eax
  417f28:	fmul   st(3),st
  417f2a:	pushf  
  417f2b:	adc    edx,DWORD PTR [esi]
  417f2d:	cmp    bh,BYTE PTR [edi]
  417f2f:	data16 and al,0xdd
  417f32:	push   cs
  417f33:	jp     0x417f2c
  417f35:	jae    0x417f65
  417f37:	jg     0x417f4c
  417f39:	and    al,0x7d
  417f3b:	jne    0x417ebf
  417f3d:	mov    edi,0xcdaf859e
  417f42:	push   esi
  417f43:	data16 hlt 
  417f45:	loope  0x417f3e
  417f47:	call   0x7142ba36
  417f4c:	aaa    
  417f4d:	sub    edx,DWORD PTR [esi+edi*8-0x6dca4f42]
  417f54:	cmp    al,0x2a
  417f56:	shl    BYTE PTR [esi+0x3c],cl
  417f59:	push   edi
  417f5a:	(bad)  
  417f5b:	int    0x7b
  417f5d:	outs   dx,DWORD PTR ds:[esi]
  417f5e:	popa   
  417f5f:	mov    al,ds:0xb7993998
  417f64:	adc    ebp,DWORD PTR [esi]
  417f66:	sbb    eax,esp
  417f68:	mov    BYTE PTR ss:[ecx],bl
  417f6b:	inc    ecx
  417f6c:	stos   BYTE PTR es:[edi],al
  417f6d:	add    al,0xa1
  417f6f:	nop
  417f70:	mov    bl,0x40
  417f72:	sbb    dh,BYTE PTR [ebx+0x41]
  417f75:	mov    WORD PTR ds:[eax-0x75],ds
  417f79:	adc    esi,DWORD PTR [edx-0x21]
  417f7c:	ret    
  417f7d:	mov    edx,0x657a2fd4
  417f82:	jnp    0x417fde
  417f84:	xor    BYTE PTR [bx+si],0x89
  417f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f89:	ffreep st(3)
  417f8b:	imul   edi,DWORD PTR [ebx],0xa99f6edd
  417f91:	and    al,0x80
  417f93:	out    0xb8,al
  417f95:	(bad)  
  417f96:	ficom  DWORD PTR [edi]
  417f98:	(bad)  
  417f99:	popa   
  417f9a:	lock std 
  417f9c:	mov    ch,0x92
  417f9e:	xor    BYTE PTR ds:0x2c8e696b,al
  417fa4:	hlt    
  417fa5:	mov    dh,0xb0
  417fa7:	adc    ebx,0xfffffff2
  417faa:	lock jo 0x417fb1
  417fad:	pusha  
  417fae:	dec    esi
  417faf:	(bad)  
  417fb0:	hlt    
  417fb1:	sbb    DWORD PTR [ebx+0x66],0xe67c3b7b
  417fb8:	shl    DWORD PTR [ebx],cl
  417fba:	daa    
  417fbb:	rcl    DWORD PTR [ebp+0x603f47e4],0x65
  417fc2:	push   ebx
  417fc3:	aam    0x8
  417fc5:	inc    esi
  417fc6:	pop    edx
  417fc7:	fwait
  417fc8:	push   ebx
  417fc9:	and    BYTE PTR [esi],dh
  417fcb:	mov    edx,0x11755b5c
  417fd0:	inc    eax
  417fd1:	loopne 0x418044
  417fd3:	fdiv   QWORD PTR [ebx]
  417fd5:	data16 mov ah,0xfc
  417fd8:	pusha  
  417fd9:	imul   ebx,DWORD PTR [ebx],0x918525b0
  417fdf:	mov    eax,ds:0x55fb95b0
  417fe4:	adc    eax,0x28933dd3
  417fe9:	mov    WORD PTR [ebp+0x39],?
  417fec:	jb     0x41806d
  417fee:	gs je  0x418050
  417ff1:	cmp    DWORD PTR [edi+0x66],ebx
  417ff4:	or     edi,DWORD PTR [edx-0xbbf2e91]
  417ffa:	pop    ds
  417ffb:	rcr    ah,0x31
  417ffe:	jne    0x418079
  418000:	(bad)  
  418001:	ror    ch,cl
  418003:	adc    al,0x81
  418005:	in     al,0xc0
  418007:	imul   ebp,DWORD PTR [ebx],0xffffffa5
  41800a:	cld    
  41800b:	sbb    edx,esp
  41800d:	lock push edx
  41800f:	gs jg  0x417f92
  418012:	jne    0x418051
  418014:	inc    edx
  418015:	sbb    al,0x5b
  418017:	xchg   edi,eax
  418018:	mov    bx,0x66d4
  41801c:	ins    DWORD PTR es:[edi],dx
  41801d:	fst    QWORD PTR [ebx*4-0x1b588d2d]
  418024:	xchg   DWORD PTR [ecx+0x6699c047],edx
  41802a:	xchg   ebx,eax
  41802b:	add    eax,0xc99a288c
  418030:	jge    0x4180a5
  418032:	pop    edx
  418033:	dec    ebp
  418034:	in     eax,0xd8
  418036:	dec    ebp
  418037:	in     al,0xce
  418039:	out    0xc5,al
  41803b:	xor    cl,BYTE PTR [esi+ebx*4+0x5f]
  41803f:	pop    es
  418040:	pusha  
  418041:	test   eax,0xe869673e
  418046:	ins    DWORD PTR es:[edi],dx
  418047:	jo     0x418000
  418049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41804a:	push   0x992a8261
  41804f:	imul   ebx,DWORD PTR [ebx-0x5b],0xffffff94
  418053:	sub    eax,0x11314118
  418058:	jo     0x41800f
  41805a:	sbb    eax,0x42ee740f
  41805f:	test   ch,0x64
  418062:	jne    0x4180c3
  418064:	jmp    0x2cda731f
  418069:	xor    DWORD PTR [ebx],0x66
  41806c:	(bad)  
  41806d:	jmp    0x53155098
  418072:	jg     0x4180a8
  418074:	pop    ebx
  418075:	cmc    
  418076:	cdq    
  418077:	mov    ch,0x95
  418079:	inc    bp
  41807b:	je     0x418028
  41807d:	xor    al,BYTE PTR [eax+0x17]
  418080:	pop    es
  418081:	popf   
  418082:	sbb    eax,DWORD PTR [esi]
  418084:	or     eax,0x88cc75d3
  418089:	mov    dh,0x84
  41808b:	in     eax,0x61
  41808d:	leave  
  41808e:	frstor [esi-0x74]
  418091:	pop    ecx
  418092:	xchg   edi,eax
  418093:	push   ecx
  418094:	jmp    0x55f5:0x91de7461
  41809b:	push   ebp
  41809c:	and    eax,ecx
  41809e:	ret    0xe79e
  4180a1:	outs   dx,DWORD PTR gs:[esi]
  4180a3:	jecxz  0x418041
  4180a5:	or     al,0x8
  4180a7:	dec    edx
  4180a8:	stos   DWORD PTR es:[edi],eax
  4180a9:	push   eax
  4180aa:	(bad)  
  4180ab:	cmc    
  4180ac:	xor    al,0xe0
  4180ae:	jbe    0x4180d5
  4180b0:	pusha  
  4180b1:	mov    ebp,0x69cae56a
  4180b6:	or     ebx,0xffffffa0
  4180b9:	mov    ebp,DWORD PTR [esi+esi*2-0x2b0d2962]
  4180c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c1:	and    al,0x34
  4180c3:	sbb    BYTE PTR [ecx-0x2d8a8a29],ah
  4180c9:	out    dx,eax
  4180ca:	push   ebx
  4180cb:	mov    esp,0x66f2098f
  4180d0:	mov    DWORD PTR [edx+ebx*8-0x7],ecx
  4180d4:	out    dx,al
  4180d5:	pop    es
  4180d6:	inc    eax
  4180d7:	call   0xe47637d9
  4180dc:	bound  edi,QWORD PTR [ecx+0x5eca7ee9]
  4180e2:	sbb    esp,DWORD PTR [esi+0x15]
  4180e5:	in     eax,0xa5
  4180e7:	loopne 0x418120
  4180e9:	mov    edx,0x275b798a
  4180ee:	xchg   ebx,eax
  4180ef:	data16 fiadd WORD PTR [ecx+0x5f]
  4180f3:	pop    ds
  4180f4:	sub    BYTE PTR [edi+0x3df86165],dl
  4180fa:	xor    eax,0x1d2aee16
  4180ff:	cld    
  418100:	jl     0x418085
  418102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418104:	test   DWORD PTR [eax],edi
  418106:	mov    ?,WORD PTR [esi]
  418108:	dec    edx
  418109:	pshufw mm5,QWORD PTR [edx-0x56],0xa6
  41810e:	add    eax,0x1e5ec09a
  418113:	jno    0x418106
  418115:	mov    esi,0x2614b475
  41811a:	xor    esp,DWORD PTR [esp+ebp*8+0x166164fc]
  418121:	xchg   ebx,eax
  418122:	pop    ecx
  418123:	add    BYTE PTR [ecx+0x11],bl
  418126:	fdivr  QWORD PTR [ebx+edx*1]
  418129:	test   BYTE PTR [edx-0x4a20586a],bl
  41812f:	add    eax,0xba996663
  418134:	jo     0x5709bec
  41813a:	mov    ecx,0x3544ec79
  41813f:	push   edi
  418140:	mov    ah,0x67
  418142:	adc    al,0x5
  418144:	(bad)  
  418145:	adc    DWORD PTR [ebp-0x1f],esi
  418148:	out    0x65,al
  41814a:	jae    0x418128
  41814c:	jl     0x41816b
  41814e:	(bad)  
  418150:	xor    al,0x51
  418152:	pop    ebx
  418153:	mov    ecx,0xbf75b0e7
  418158:	cmc    
  418159:	es and al,0xa9
  41815c:	in     al,0xe3
  41815e:	in     eax,0x66
  418160:	jnp    0x418156
  418162:	shl    DWORD PTR [ecx-0x2d],cl
  418165:	or     BYTE PTR [esi+0x43dd80d0],ch
  41816b:	mov    ds:0x7e1e657c,al
  418170:	dec    esi
  418171:	loope  0x4181bf
  418173:	rcl    DWORD PTR [ebx+ebx*4+0x4bee4666],cl
  41817a:	jne    0x4181cb
  41817c:	jmp    0xcd26b43d
  418181:	inc    ebx
  418182:	out    dx,eax
  418183:	mov    bx,0x198d
  418187:	mov    edx,0x68b1a2d2
  41818c:	je     0x41818f
  41818e:	inc    ebx
  41818f:	cmc    
  418190:	ret    
  418191:	popa   
  418192:	jp     0x418184
  418194:	push   esp
  418195:	aad    0x27
  418197:	sub    al,BYTE PTR [ebx-0x2c65dc43]
  41819d:	sub    esi,ebx
  41819f:	nop
  4181a0:	jl     0x4181ab
  4181a2:	push   esp
  4181a3:	xchg   edx,eax
  4181a4:	test   al,0x66
  4181a6:	das    
  4181a7:	scas   eax,DWORD PTR es:[edi]
  4181a8:	mov    dl,0x6f
  4181aa:	cmp    DWORD PTR [edx-0x48],esp
  4181ad:	mov    esi,0x61105164
  4181b2:	jne    0x4181be
  4181b4:	shl    BYTE PTR [esi-0x3e2138da],0x6a
  4181bb:	popa   
  4181bc:	(bad)  
  4181bd:	not    DWORD PTR [ebp+0x3723d35e]
  4181c3:	lock (bad) 
  4181c5:	out    0x8b,al
  4181c7:	ins    BYTE PTR es:[edi],dx
  4181c8:	ficomp DWORD PTR [edx+0x5a]
  4181cb:	pop    ds
  4181cc:	and    DWORD PTR [esi],0x452b1ab
  4181d2:	dec    ebx
  4181d3:	stos   BYTE PTR es:[edi],al
  4181d4:	add    eax,0x1650b800
  4181d9:	gs pop esp
  4181db:	mov    eax,DWORD PTR [esp+esi*4]
  4181de:	hlt    
  4181df:	call   0x270de6f9
  4181e4:	jmp    0xfe4fb355
  4181e9:	in     al,0xfd
  4181eb:	leave  
  4181ec:	fcmovbe st,st(1)
  4181ee:	jne    0x418241
  4181f0:	shr    esi,0x2c
  4181f3:	push   ss
  4181f4:	sub    eax,0xe766d5b6
  4181f9:	mov    bl,0x9b
  4181fb:	sahf   
  4181fc:	push   ss
  4181fd:	xchg   edi,eax
  4181fe:	ss pushf 
  418200:	int    0x95
  418202:	mov    bl,0xe9
  418204:	mov    ds:0xb8dbdd5a,eax
  418209:	data16 sbb ch,BYTE PTR [ebx+0x1941b9e7]
  418210:	gs mov edi,0xfccb11f3
  418216:	imul   esi,DWORD PTR [ebp+0x2635f3c5],0x21
  41821d:	gs retf 
  41821f:	hlt    
  418220:	push   ebp
  418221:	mov    eax,ds:0xefc257dc
  418226:	adc    ah,BYTE PTR [ecx]
  418228:	dec    esp
  418229:	push   ebp
  41822a:	jne    0x418290
  41822c:	jno    0x4181eb
  41822e:	popf   
  41822f:	pop    edx
  418230:	xchg   edx,eax
  418231:	jae    0x418236
  418233:	imul   eax,DWORD PTR [eax],0xffffffa5
  418236:	fs out 0x34,al
  418239:	aaa    
  41823a:	cwde   
  41823b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823c:	sub    ebp,DWORD PTR [ebx+0x76]
  41823f:	jg     0x4181d0
  418241:	fidivr WORD PTR [ecx]
  418243:	leave  
  418244:	or     esp,DWORD PTR [ebp-0x29]
  418247:	enter  0xc51a,0x1a
  41824b:	out    0xc,al
  41824d:	mov    DWORD PTR [edx+eax*2+0x4275210d],ebp
  418254:	int3   
  418255:	pop    ss
  418256:	xor    ebx,DWORD PTR ds:0x66359349
  41825c:	popa   
  41825d:	xchg   ecx,eax
  41825e:	pop    ebp
  41825f:	jbe    0x4182bf
  418261:	scas   al,BYTE PTR es:[edi]
  418262:	or     eax,0x752021c8
  418267:	push   ecx
  418268:	fld    TBYTE PTR [ebx+0x76]
  41826b:	test   eax,0x66d85ef4
  418270:	pop    esp
  418271:	inc    edx
  418272:	xor    al,0xf8
  418274:	loope  0x418219
  418276:	jmp    0x418252
  418278:	shl    DWORD PTR [eax-0x1e495ac8],cl
  41827e:	and    DWORD PTR [ebx-0x44],ebp
  418281:	mov    dh,0x16
  418283:	data16 jns 0x418286
  418286:	ror    DWORD PTR [esi+ebp*8-0x168cbede],cl
  41828d:	dec    ecx
  41828e:	cmp    ebx,esp
  418290:	pusha  
  418291:	or     eax,0x3f6476ca
  418296:	mov    bl,0xfd
  418298:	push   ebx
  418299:	fidiv  DWORD PTR [eax]
  41829b:	cmp    eax,0xbe5c09f1
  4182a0:	shr    DWORD PTR [eax+0x3471d47c],cl
  4182a6:	mov    cl,0x65
  4182a8:	cdq    
  4182a9:	neg    bl
  4182ab:	stos   DWORD PTR es:[edi],eax
  4182ac:	jbe    0x4182db
  4182ae:	mov    eax,0x1968166
  4182b3:	xchg   ebp,eax
  4182b4:	shl    DWORD PTR [eax-0x5d],cl
  4182b7:	fist   DWORD PTR [edi-0x6f]
  4182ba:	push   esp
  4182bb:	inc    esp
  4182bc:	arpl   WORD PTR [eax-0x56],sp
  4182bf:	hlt    
  4182c0:	dec    esp
  4182c1:	dec    edi
  4182c2:	jo     0x418259
  4182c4:	rcr    DWORD PTR [ebx+0xa],cl
  4182c7:	(bad)  
  4182c8:	sbb    bl,dl
  4182ca:	xchg   esp,eax
  4182cb:	adc    al,0xa6
  4182cd:	push   ebp
  4182ce:	bound  ecx,QWORD PTR [esi-0x3b8ede12]
  4182d4:	jmp    0xe103bb3e
  4182d9:	add    al,0x15
  4182dc:	shl    BYTE PTR [ebx],1
  4182de:	mov    ebp,0xc32b85af
  4182e3:	pop    esi
  4182e4:	fist   WORD PTR [ebp-0x41ba75b2]
  4182ea:	inc    edx
  4182eb:	xchg   ebp,eax
  4182ec:	or     eax,0x19616d6f
  4182f1:	fwait
  4182f2:	push   edi
  4182f3:	and    al,ch
  4182f5:	inc    esi
  4182f6:	inc    esp
  4182f7:	push   ebx
  4182f8:	rol    DWORD PTR [edi],cl
  4182fa:	fsubr  QWORD PTR [esp+esi*8]
  4182fd:	inc    eax
  4182fe:	sahf   
  4182ff:	adc    eax,0xe08f6680
  418304:	mov    edx,DWORD PTR [edx]
  418306:	ror    DWORD PTR [edi-0x37],1
  418309:	pop    ebp
  41830a:	lods   eax,DWORD PTR ds:[esi]
  41830b:	pop    ecx
  41830c:	ds pop esi
  41830e:	arpl   di,bx
  418310:	je     0x4182d7
  418312:	push   0x19
  418314:	sbb    DWORD PTR [edi+eax*1+0xab53a8a],edi
  41831b:	imul   ebx,DWORD PTR [edx-0x4b],0xa26b295f
  418322:	pop    edx
  418323:	push   ebp
  418324:	in     eax,dx
  418325:	mov    esi,0x238cda72
  41832a:	mov    cs,WORD PTR [esi+eiz*1]
  41832d:	dec    ecx
  41832e:	xor    eax,0x281d3ef7
  418333:	data16 mov dh,0x5f
  418336:	cmp    DWORD PTR [edx-0x9],esi
  418339:	pmulhw mm4,QWORD PTR [ebp-0x14]
  41833d:	test   eax,0x5693bd8d
  418342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418343:	sub    BYTE PTR [ebx+0x60],al
  418346:	adc    BYTE PTR ds:0x4b951f5,dh
  41834c:	sar    ch,1
  41834e:	repz push ebp
  418350:	bound  ebp,QWORD PTR [ebx]
  418352:	cmp    eax,0x9ad1ab53
  418357:	mov    ebp,DWORD PTR [edi]
  418359:	inc    ecx
  41835a:	test   eax,0x58b44b66
  41835f:	pop    edx
  418360:	arpl   WORD PTR [eax],si
  418362:	xchg   edx,eax
  418363:	mov    ebp,0x175ab89
  418368:	adc    eax,DWORD PTR [esi-0x14]
  41836b:	mov    eax,0xa1da3d05
  418370:	retf   
  418371:	sub    dh,BYTE PTR [edx-0x22]
  418374:	adc    eax,0xd30160be
  418379:	cli    
  41837a:	dec    esi
  41837b:	(bad)  
  41837c:	retf   0xfcd9
  41837f:	push   esp
  418380:	ret    
  418381:	inc    WORD PTR [edi]
  418384:	pop    ss
  418385:	fwait
  418386:	mov    edi,0x4465c9fd
  41838b:	jmp    0x4183b3
  41838d:	cld    
  41838e:	jne    0x4183f7
  418390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418391:	mov    edx,0xa9f644f5
  418396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418397:	mov    ebp,0x83755ce4
  41839c:	cmp    dl,BYTE PTR ds:0xb3a1cd55
  4183a2:	jne    0x418345
  4183a4:	cs neg edi
  4183a7:	ret    0x8daa
  4183aa:	mov    eax,ds:0x45ab3666
  4183af:	pop    eax
  4183b0:	shl    DWORD PTR [ebx+0x6a85a4],cl
  4183b6:	xchg   edi,eax
  4183b7:	add    DWORD PTR [ebx],edx
  4183b9:	sbb    BYTE PTR gs:[edx-0x10],ah
  4183bd:	push   edx
  4183be:	or     ebp,DWORD PTR [edx-0x29633b1]
  4183c4:	fadd   st(0),st
  4183c6:	jb     0x418406
  4183c8:	jae    0x418425
  4183ca:	add    ch,BYTE PTR ds:0x506566d8
  4183d0:	add    ah,BYTE PTR [ebp+ebp*4-0x3b462563]
  4183d7:	dec    esi
  4183d8:	cmc    
  4183d9:	or     bh,BYTE PTR [edi+0x76]
  4183dc:	adc    edx,eax
  4183de:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4183e0:	xchg   ebp,eax
  4183e1:	push   0x183d54fe
  4183e6:	and    BYTE PTR [esi-0x1],0x41
  4183ea:	jbe    0x41837b
  4183ec:	push   edx
  4183ed:	lods   eax,DWORD PTR ds:[esi]
  4183ee:	out    dx,eax
  4183ef:	mov    ebx,edx
  4183f1:	stos   BYTE PTR es:[edi],al
  4183f2:	cmp    eax,0x7cfda729
  4183f7:	(bad)  
  4183f8:	pop    esp
  4183f9:	gs add eax,0xe94c8c07
  4183ff:	push   edi
  418400:	inc    edx
  418401:	add    ebx,DWORD PTR [edi]
  418403:	retf   0x98ea
  418406:	add    eax,0xd9ced162
  41840b:	inc    ebp
  41840c:	xchg   BYTE PTR [edi+0x428d815],bl
  418412:	jmp    0x41847a
  418414:	mov    eax,ds:0xd3867cfc
  418419:	or     edi,eax
  41841b:	push   edx
  41841c:	cld    
  41841d:	jg     0x4183ca
  41841f:	popf   
  418420:	push   ebx
  418421:	gs aaa 
  418423:	pslld  mm5,mm5
  418426:	cld    
  418427:	or     al,0x8c
  418429:	pop    ss
  41842a:	test   BYTE PTR [esp+edx*1+0x8],ah
  41842e:	jne    0x4183d1
  418430:	mov    al,BYTE PTR [ecx+0x2d]
  418433:	xchg   esi,eax
  418434:	or     ah,BYTE PTR [esi+0x455c66b1]
  41843a:	fcos   
  41843c:	rcl    DWORD PTR [ebp+0x70663538],cl
  418442:	call   0x1dad9553
  418447:	lods   al,BYTE PTR ds:[esi]
  418448:	lods   eax,DWORD PTR ds:[esi]
  418449:	and    DWORD PTR [esi+0x2dfd25b2],ecx
  41844f:	inc    esi
  418450:	pop    esi
  418451:	inc    edx
  418452:	mov    WORD PTR [ebx+0x4669b2f6],?
  418458:	stos   BYTE PTR es:[edi],al
  418459:	push   edx
  41845a:	adc    DWORD PTR [edx+0x1b03c092],edx
  418460:	enter  0x753d,0xac
  418464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418465:	ss or  al,0x7b
  418468:	iret   
  418469:	mov    al,0x75
  41846b:	call   0xe493:0xf29e7bb5
  418472:	pop    edx
  418473:	and    DWORD PTR [ebp-0x3],0xffffffc8
  418477:	out    0x53,eax
  418479:	push   es
  41847a:	sbb    ebp,DWORD PTR [ecx+0x69]
  41847d:	stc    
  41847e:	fsubr  st(6),st
  418480:	js     0x4184e6
  418482:	scas   eax,DWORD PTR es:[edi]
  418483:	je     0x4184bc
  418485:	mov    WORD PTR [ebp-0x638fcb9a],?
  41848b:	imul   edx,ebx,0xffffffae
  41848e:	sub    DWORD PTR [esi-0x3a6b2b11],ebx
  418494:	loope  0x4184fb
  418496:	fnstsw ax
  418498:	jmp    0x41848d
  41849a:	enter  0x5ebd,0x25
  41849e:	xor    edi,DWORD PTR [eax]
  4184a0:	rcr    edx,cl
  4184a2:	dec    ebp
  4184a3:	fwait
  4184a4:	adc    ah,BYTE PTR [edi+0x65ec782e]
  4184aa:	dec    edx
  4184ab:	and    BYTE PTR [edx+ecx*4],ah
  4184ae:	aas    
  4184af:	mov    ebp,0x22af0901
  4184b4:	push   esi
  4184b5:	in     eax,0xbe
  4184b7:	pusha  
  4184b8:	or     BYTE PTR [edi-0x8],dh
  4184bb:	cs ja  0x418524
  4184be:	js     0x4184f4
  4184c0:	jns    0x418458
  4184c2:	in     al,dx
  4184c3:	xchg   cl,dh
  4184c5:	add    eax,0x9fd0c50e
  4184ca:	cdq    
  4184cb:	aam    0x5c
  4184cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ce:	imul   edi,DWORD PTR [esi-0x45],0xf12bccd7
  4184d5:	adc    edi,0xe39e9866
  4184db:	sub    al,0xd3
  4184dd:	aam    0x2
  4184df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e0:	adc    esp,DWORD PTR [ecx+0x45]
  4184e3:	fistp  WORD PTR [ebx]
  4184e5:	data16 out dx,al
  4184e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e8:	cld    
  4184e9:	mov    ah,0xda
  4184eb:	cmc    
  4184ec:	lods   eax,DWORD PTR ds:[esi]
  4184ed:	stos   BYTE PTR es:[edi],al
  4184ee:	ds in  al,dx
  4184f0:	rol    BYTE PTR [ecx-0x7],cl
  4184f3:	ins    DWORD PTR es:[edi],dx
  4184f4:	inc    DWORD PTR [ebp-0x5a]
  4184f7:	sub    bl,dh
  4184f9:	push   si
  4184fb:	mov    eax,0xfb9997ed
  418500:	ss xchg ebx,eax
  418502:	jb     0x418512
  418504:	jl     0x41849a
  418506:	jne    0x41853d
  418508:	jae    0x418575
  41850a:	lahf   
  41850b:	sub    eax,0x66ad709b
  418510:	dec    al
  418512:	gs das 
  418514:	rcr    eax,cl
  418516:	in     eax,0x22
  418518:	bound  esi,QWORD PTR [esi-0x2e]
  41851b:	stos   BYTE PTR es:[edi],al
  41851c:	dec    esi
  41851d:	pusha  
  41851e:	pop    es
  41851f:	out    0x92,eax
  418521:	or     BYTE PTR [ecx+0xe],ch
  418524:	mov    ebp,ecx
  418526:	(bad)
  418529:	std    
  41852a:	pop    esp
  41852b:	jnp    0x418542
  41852d:	imul   esp,eax,0xffffffe9
  418530:	fs addr16 cmp ax,0xe91d
  418536:	xor    esi,DWORD PTR [edx+edi*2-0x2c72565b]
  41853d:	out    0x42,al
  41853f:	jle    0x4184d9
  418541:	add    BYTE PTR [edi+ecx*4],dh
  418544:	outs   dx,BYTE PTR ds:[esi]
  418545:	sub    DWORD PTR gs:0x5c893a28,eax
  41854c:	mov    eax,0xba27635d
  418551:	(bad)  
  418552:	je     0x4184ee
  418554:	loopne 0x418538
  418556:	lahf   
  418557:	pop    ebp
  418558:	add    esp,DWORD PTR [ebp-0x6b]
  41855b:	mov    bl,0xa6
  41855d:	out    dx,al
  41855e:	push   0x6e
  418560:	popf   
  418561:	loop   0x4185c2
  418563:	aas    
  418564:	sbb    cl,BYTE PTR [edi+0x6a]
  418567:	push   0x77
  418569:	mov    al,ds:0x7eb126c6
  41856e:	jns    0x418568
  418570:	push   esp
  418571:	and    DWORD PTR [ebx-0x1c42de9a],edx
  418577:	mov    edi,0xf726f5d3
  41857c:	in     al,dx
  41857d:	adc    ebp,ebp
  41857f:	or     DWORD PTR [eax],ebp
  418581:	mov    BYTE PTR gs:[ebx+0xa03d730],ch
  418588:	into   
  418589:	add    bl,BYTE PTR [ebx]
  41858b:	ins    DWORD PTR es:[edi],dx
  41858c:	pop    es
  41858d:	scas   al,BYTE PTR es:[edi]
  41858e:	inc    ebp
  41858f:	sub    esp,ebp
  418591:	sbb    al,0x99
  418593:	int3   
  418594:	adc    al,0xe5
  418596:	jb     0x4185da
  418598:	ins    DWORD PTR es:[edi],dx
  418599:	xor    eax,0x6683620d
  41859e:	adc    DWORD PTR [esi+0x2e4ffa7b],eax
  4185a4:	and    al,0xe
  4185a6:	enter  0xd3d2,0xde
  4185aa:	(bad)  
  4185ab:	jns    0x418618
  4185ad:	xchg   esi,eax
  4185ae:	jo     0x41857d
  4185b0:	mov    eax,0x7a4f12fc
  4185b5:	test   BYTE PTR [esi],dh
  4185b7:	addr16 mov esi,0xe022cf31
  4185bd:	dec    ebp
  4185be:	outs   dx,DWORD PTR ds:[esi]
  4185bf:	inc    ebp
  4185c0:	mov    edx,0xfee26e72
  4185c5:	int    0x45
  4185c7:	out    0x3,eax
  4185c9:	bound  ebx,QWORD PTR [edi]
  4185cb:	call   0x78dada34
  4185d0:	mov    esp,0x9070eff6
  4185d5:	enter  0xb775,0x5
  4185d9:	add    bh,BYTE PTR [ebp-0x80]
  4185dc:	jmp    0xd3fea11d
  4185e1:	or     al,0x7b
  4185e3:	sub    DWORD PTR [ebx+ecx*8-0x53bd4aba],esp
  4185ea:	mov    ebx,0x5d352466
  4185ef:	xor    DWORD PTR [edi],esp
  4185f1:	sahf   
  4185f2:	cmp    BYTE PTR [edi],0xe3
  4185f5:	dec    edi
  4185f6:	call   0x871c0e61
  4185fb:	ret    0x669f
  4185fe:	idiv   DWORD PTR [edx-0x60]
  418601:	cmp    DWORD PTR [eax-0x27],ecx
  418604:	sub    al,bh
  418606:	or     esp,DWORD PTR [edi]
  418608:	ss aam 0x75
  41860b:	retf   
  41860c:	inc    BYTE PTR [ecx]
  41860e:	or     al,0x47
  418610:	jge    0x418633
  418612:	and    esp,DWORD PTR [esi+0x5]
  418615:	pop    ds
  418616:	pop    ss
  418617:	lods   eax,DWORD PTR ds:[esi]
  418618:	std    
  418619:	leave  
  41861a:	add    BYTE PTR [edi+0x75445d13],ah
  418620:	and    al,0xe6
  418622:	mov    ch,0xa
  418624:	pop    ss
  418625:	out    0xe1,eax
  418627:	or     BYTE PTR [ebx+0x65],0x49
  41862b:	cdq    
  41862c:	xchg   ecx,eax
  41862d:	imul   eax,DWORD PTR [eax-0x6b45344b],0x29
  418634:	ror    DWORD PTR [eax-0x717bb73d],cl
  41863a:	sub    BYTE PTR [edx-0xda0e17b],cl
  418640:	rol    DWORD PTR ds:0xa9db7fb6,cl
  418646:	and    DWORD PTR [eax],0x1662b15b
  41864c:	or     ah,BYTE PTR [ebx-0x37fec895]
  418652:	or     eax,0x85444c6
  418657:	pop    edi
  418658:	enter  0xc15c,0x62
  41865c:	loopne 0x418622
  41865e:	push   ebp
  41865f:	pusha  
  418660:	sub    DWORD PTR [esi+0x41381866],0x75
  418667:	scas   al,BYTE PTR es:[edi]
  418668:	sub    eax,0x968855c6
  41866d:	mov    edi,0xe7096654
  418672:	rol    BYTE PTR [ebp-0x2d],cl
  418675:	push   esp
  418676:	retf   0x4c82
  418679:	nop
  41867a:	iret   
  41867b:	mov    bl,0x59
  41867d:	imul   eax,DWORD PTR [edi],0x59
  418680:	xchg   ebp,eax
  418681:	outs   dx,BYTE PTR ds:[esi]
  418682:	push   0xf521ede2
  418687:	sbb    BYTE PTR [di],cl
  41868a:	ja     0x4186f1
  41868c:	imul   eax,DWORD PTR [ecx+0xdd5662c],0xfffffffb
  418693:	call   0x305b:0x677f7e40
  41869a:	dec    ecx
  41869b:	xchg   esi,eax
  41869c:	dec    ecx
  41869d:	stos   BYTE PTR es:[edi],al
  41869e:	push   eax
  41869f:	xchg   bl,cl
  4186a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a2:	jne    0x41864b
  4186a4:	sbb    ah,BYTE PTR [ecx]
  4186a6:	pop    ds
  4186a7:	push   es
  4186a8:	xchg   edi,eax
  4186a9:	repz call 0xd64e1815
  4186af:	dec    ecx
  4186b0:	shl    DWORD PTR [eax-0x215ae590],cl
  4186b6:	rcr    DWORD PTR [edx+0x392266d4],0x1d
  4186bd:	add    al,0x4f
  4186bf:	sub    al,0xed
  4186c1:	fscale 
  4186c3:	push   0xffffffa3
  4186c5:	push   ss
  4186c6:	(bad)  
  4186c8:	shl    esi,cl
  4186ca:	push   0x3b5263ac
  4186cf:	popf   
  4186d0:	icebp  
  4186d1:	gs ds jge 0x418733
  4186d5:	imul   eax,eax,0xfffffffd
  4186d8:	call   0x4ad2f719
  4186dd:	out    dx,al
  4186de:	jne    0x4186f7
  4186e0:	xor    BYTE PTR [ebp+0x42478963],bh
  4186e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186e7:	xchg   ax,ax
  4186e9:	je     0x4186b6
  4186eb:	(bad)  
  4186ec:	in     eax,0x9a
  4186ee:	add    eax,0xca51ea5
  4186f3:	xor    cl,BYTE PTR ds:0xfb5c8edd
  4186f9:	jns    0x4186f1
  4186fb:	mov    ax,0xb1d0
  4186ff:	sub    eax,ebx
  418701:	add    al,0xb8
  418703:	push   ss
  418704:	fist   DWORD PTR [ebp-0x4835e08b]
  41870a:	adc    ah,0x56
  41870d:	cld    
  41870e:	cmp    esp,DWORD PTR [ebp-0xc]
  418711:	jno    0x4186b8
  418713:	jmp    0x7890:0x6b7d57ac
  41871a:	push   0x3
  41871c:	and    BYTE PTR ss:[esi],dh
  41871f:	inc    ebp
  418720:	mov    ch,0xb6
  418722:	pop    edi
  418723:	sub    eax,0xa4e324d8
  418728:	shl    ebp,cl
  41872a:	adc    ch,BYTE PTR [edx]
  41872c:	ret    0x8a10
  41872f:	xlat   BYTE PTR ds:[ebx]
  418730:	shl    DWORD PTR [eax+0x399cb21f],1
  418736:	adc    BYTE PTR [ecx+0x26de12d3],bh
  41873c:	pop    ss
  41873d:	lods   al,BYTE PTR ds:[esi]
  41873e:	mov    ds:0xa3790666,al
  418743:	hlt    
  418744:	shl    edx,cl
  418746:	xor    DWORD PTR [ecx],esi
  418748:	aaa    
  418749:	(bad)  
  41874a:	cli    
  41874b:	fisubr DWORD PTR [ebx+0x65]
  41874e:	aaa    
  41874f:	mov    bh,0xc3
  418751:	jmp    0xa719:0x8ba2e3e1
  418758:	rol    DWORD PTR [edx],1
  41875a:	je     0x418703
  41875c:	int    0xca
  41875e:	jae    0x41877c
  418760:	push   edi
  418761:	test   DWORD PTR gs:[ebx-0x77a4dc5f],esp
  418768:	fdecstp 
  41876a:	call   0x7fc65940
  41876f:	cmp    ecx,DWORD PTR [esi]
  418771:	adc    eax,0x927cd452
  418776:	nop
  418777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418778:	sbb    bh,al
  41877a:	inc    ebx
  41877b:	and    BYTE PTR [esi-0x12],0x35
  41877f:	mov    al,es:0x6a9e819a
  418785:	in     eax,dx
  418786:	jne    0x4187e4
  418788:	sub    cl,BYTE PTR [ecx+0x28]
  41878b:	mov    al,ds:0x8251c0f1
  418790:	mov    ah,0xb4
  418792:	xchg   ebp,eax
  418793:	add    esp,DWORD PTR es:[ecx+0x3f21b677]
  41879a:	jbe    0x4187f4
  41879c:	and    ebp,esp
  41879e:	cmp    al,0x96
  4187a0:	xor    al,0x32
  4187a2:	cmc    
  4187a3:	xlat   BYTE PTR ds:[ebx]
  4187a4:	call   0xfea89f78
  4187a9:	mov    al,0xd4
  4187ab:	xchg   BYTE PTR [ecx*2-0x562cb9d1],ch
  4187b2:	(bad)  
  4187b3:	jb     0x4187d8
  4187b5:	lods   al,BYTE PTR ds:[esi]
  4187b6:	inc    ebp
  4187b7:	call   0x6519:0xc2ba86f6
  4187be:	dec    ecx
  4187bf:	arpl   WORD PTR [bp+si-0xf],di
  4187c3:	pop    edx
  4187c4:	std    
  4187c5:	adc    al,0xad
  4187c7:	or     al,0x51
  4187c9:	adc    BYTE PTR [ebx-0x8707106],dl
  4187cf:	in     al,dx
  4187d0:	int    0xd7
  4187d2:	pusha  
  4187d3:	(bad)  
  4187d4:	arpl   WORD PTR [ebp+eax*2-0x51],dx
  4187d8:	jnp    0x4187a7
  4187da:	push   ds
  4187db:	sbb    al,0xd7
  4187dd:	or     eax,0x71d35c15
  4187e2:	and    cl,ch
  4187e4:	retf   0x6205
  4187e7:	mov    al,ds:0x3d0c669a
  4187ec:	mov    esp,0x262bb5ae
  4187f1:	outs   dx,DWORD PTR ds:[esi]
  4187f2:	jp     0x41884a
  4187f4:	stos   BYTE PTR es:[edi],al
  4187f5:	dec    ebx
  4187f6:	je     0x4187ec
  4187f8:	sub    BYTE PTR [edi+0x65557ef1],cl
  4187fe:	xor    DWORD PTR [ebp+0x3008eb8a],ebx
  418804:	pushf  
  418805:	cmp    ah,BYTE PTR [ebx+0x6e2b36ee]
  41880b:	add    dl,BYTE PTR [esi]
  41880d:	adc    BYTE PTR [ebx+0x68],ah
  418810:	retf   
  418811:	(bad)  
  418812:	push   ss
  418813:	mov    esp,0x9f7d5b40
  418818:	adc    ah,BYTE PTR [ebp+0x5c]
  41881b:	or     eax,0xe43ee931
  418820:	shl    ebp,cl
  418822:	mov    bl,0x29
  418824:	jg     0x4187dd
  418826:	and    dh,BYTE PTR [ecx+0x16]
  418829:	icebp  
  41882a:	ret    
  41882b:	and    edx,DWORD PTR fs:[ebx]
  41882e:	addr16 popa 
  418830:	(bad)  
  418831:	into   
  418832:	dec    ecx
  418833:	call   0xe5b0:0xcb2fa0d3
  41883a:	mov    esi,0x687173a5
  41883f:	sbb    DWORD PTR [ebx-0x77],esi
  418842:	les    esp,FWORD PTR [esi-0x55]
  418845:	pop    edx
  418846:	in     al,dx
  418847:	in     al,dx
  418848:	sar    DWORD PTR [ecx-0x54],cl
  41884b:	fdivr  QWORD PTR [eax+0x3509c7fe]
  418851:	gs ret 0xeb55
  418855:	iret   
  418856:	push   esi
  418857:	adc    al,BYTE PTR ds:0xf1a05862
  41885d:	popa   
  41885e:	jb     0x418879
  418860:	adc    ebx,eax
  418862:	imul   ebx,ecx,0xac0d655f
  418868:	push   ss
  418869:	pushf  
  41886a:	push   es
  41886b:	inc    edx
  41886c:	outs   dx,DWORD PTR ds:[esi]
  41886d:	or     DWORD PTR [ecx+0x75242b6f],0xffffffb4
  418874:	arpl   dx,si
  418876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418877:	push   eax
  418878:	stc    
  418879:	ja     0x418890
  41887b:	loop   0x4188d7
  41887d:	add    al,0x69
  41887f:	outs   dx,DWORD PTR ds:[esi]
  418880:	jbe    0x4188e7
  418882:	sub    bh,BYTE PTR [eax+eiz*8]
  418885:	mov    edx,0x89d0e755
  41888a:	push   eax
  41888b:	jno    0x41886e
  41888d:	jno    0x418884
  41888f:	(bad)  
  418890:	iret   
  418891:	xchg   ecx,eax
  418892:	out    dx,eax
  418893:	sub    edi,DWORD PTR [ecx]
  418895:	aad    0xc6
  418897:	imul   ecx,DWORD PTR [ebx-0x4b],0xb68458e
  41889e:	leave  
  41889f:	shr    DWORD PTR [esi+0x2c3f76f0],1
  4188a5:	mov    ch,0x92
  4188a7:	pop    edi
  4188a8:	cmp    ch,bl
  4188aa:	test   al,0xda
  4188ac:	imul   BYTE PTR [edx-0x9]
  4188af:	data16 mov al,BYTE PTR [ebp+0x11]
  4188b3:	pop    eax
  4188b4:	shl    DWORD PTR [ebx+edi*8+0x550c0705],cl
  4188bb:	and    BYTE PTR [eax+eiz*2],bh
  4188be:	scas   al,BYTE PTR es:[edi]
  4188bf:	mov    ch,BYTE PTR [ebp-0x7f40b5af]
  4188c5:	mov    dh,0x4
  4188c7:	jmp    0x42ba7d02
  4188cc:	mov    eax,ds:0x4a5a7505
  4188d1:	adc    DWORD PTR [ebx-0x4b],edi
  4188d4:	and    al,0x5c
  4188d6:	sbb    esp,DWORD PTR [esi-0x36]
  4188d9:	imul   eax,DWORD PTR [eax],0xfffffff5
  4188dc:	shl    DWORD PTR [edi],cl
  4188de:	mov    cl,0x75
  4188e0:	test   DWORD PTR [ebx],esp
  4188e2:	cmc    
  4188e3:	aaa    
  4188e4:	rcl    DWORD PTR [ebx+0x6d],0x9b
  4188e8:	push   0xa939a7b9
  4188ed:	push   esp
  4188ee:	cdq    
  4188ef:	nop
  4188f0:	rep stos DWORD PTR es:[edi],eax
  4188f2:	and    eax,0xa60a86d9
  4188f7:	hlt    
  4188f8:	xchg   BYTE PTR [esi-0x53],ah
  4188fb:	test   eax,0x6993da7c
  418900:	add    edi,DWORD PTR [eax]
  418902:	xor    esp,ebp
  418904:	or     esp,DWORD PTR [eax+0x1e]
  418907:	or     DWORD PTR [ebx+0x65],0xffffffe4
  41890b:	inc    esi
  41890c:	es jne 0x418988
  41890f:	frstor [eax+0x323bf8bd]
  418915:	xor    al,0x74
  418917:	mov    ch,0x38
  418919:	or     dh,BYTE PTR [ebx+0x53]
  41891c:	iret   
  41891d:	sub    DWORD PTR [bx+di+0x5156],ebx
  418922:	popf   
  418923:	pop    ebx
  418924:	jae    0x41892b
  418926:	push   esp
  418927:	add    BYTE PTR [edx-0x2a],bl
  41892a:	jl     0x4188c4
  41892c:	jb     0x4188d6
  41892e:	jne    0x418986
  418930:	loope  0x4188ee
  418932:	pop    ebx
  418933:	fisttp DWORD PTR [esi+0x1b66081a]
  418939:	mov    dl,0xeb
  41893b:	(bad)  
  41893c:	rol    DWORD PTR [eax-0x342e545a],cl
  418942:	push   0xffffffac
  418944:	inc    esi
  418945:	gs mov ecx,0xa9a7382e
  41894b:	sbb    esp,DWORD PTR [eax+ebx*8-0x699158c6]
  418952:	jne    0x418926
  418954:	push   eax
  418955:	push   edx
  418956:	lods   eax,DWORD PTR ds:[esi]
  418957:	in     al,0x4f
  418959:	adc    DWORD PTR [esi],0xe31d82
  41895f:	push   0xffffffd8
  418961:	mov    ch,0x5b
  418963:	out    0xea,al
  418965:	jg     0x4188e8
  418967:	lock and ebp,DWORD PTR [eax+0x7e1edcab]
  41896e:	(bad)  
  41896f:	xor    bl,cl
  418971:	pop    esi
  418972:	clc    
  418973:	mov    eax,ds:0x83f7d1b2
  418978:	sahf   
  418979:	out    dx,al
  41897a:	mov    ch,0xd1
  41897c:	popa   
  41897d:	pop    edi
  41897e:	adc    eax,0xad901593
  418983:	sub    ebp,ebp
  418985:	sbb    ebx,edi
  418987:	data16 cmc 
  418989:	stos   DWORD PTR es:[edi],eax
  41898a:	mov    edx,0x55c78110
  41898f:	adc    ebx,0x23c99b1
  418995:	aas    
  418996:	or     al,0x40
  418998:	ror    DWORD PTR [edx+0x30b8b8ea],cl
  41899e:	inc    ebp
  41899f:	or     eax,DWORD PTR [esi+0x65]
  4189a2:	call   0xeefd895c
  4189a7:	stos   DWORD PTR es:[edi],eax
  4189a8:	push   ebx
  4189a9:	aam    0xef
  4189ab:	sahf   
  4189ac:	pushf  
  4189ad:	add    al,0x75
  4189af:	jo     0x418968
  4189b1:	(bad)  
  4189b2:	ins    DWORD PTR es:[edi],dx
  4189b3:	fisubr DWORD PTR [edi-0x7e]
  4189b6:	fst    QWORD PTR [eax-0x248cb76d]
  4189bc:	adc    al,0x19
  4189be:	cdq    
  4189bf:	ret    
  4189c0:	call   0xa215ff0b
  4189c5:	imul   eax,DWORD PTR [ebx+0x5efe78c6],0x95286b66
  4189cf:	or     al,0xd3
  4189d1:	cli    
  4189d2:	xchg   edx,eax
  4189d3:	xchg   ecx,eax
  4189d4:	loopne 0x4189dd
  4189d6:	arpl   WORD PTR [esi-0x543a994c],bp
  4189dc:	and    DWORD PTR [ebp+0x7a798fc2],0xffffffc9
  4189e3:	adc    dl,dl
  4189e5:	ret    
  4189e6:	push   ecx
  4189e7:	ins    DWORD PTR es:[edi],dx
  4189e8:	ret    0x5afb
  4189eb:	sub    bh,0x65
  4189ee:	pop    ebx
  4189ef:	jns    0x418a60
  4189f1:	jbe    0x4189d1
  4189f3:	out    dx,eax
  4189f4:	sbb    DWORD PTR [edi+0x41],esi
  4189f7:	sbb    BYTE PTR [ecx-0xc],bl
  4189fa:	xchg   ebx,eax
  4189fb:	xchg   ebx,eax
  4189fc:	fadd   DWORD PTR [eax+0x75]
  4189ff:	dec    ebp
  418a00:	stos   DWORD PTR es:[edi],eax
  418a01:	and    bp,WORD PTR [ebx+0x12]
  418a05:	arpl   WORD PTR [ecx],bp
  418a07:	push   ecx
  418a08:	or     al,0x59
  418a0a:	icebp  
  418a0b:	or     ah,BYTE PTR [eax]
  418a0d:	cld    
  418a0e:	jne    0x4189b7
  418a10:	sub    eax,0x1701f245
  418a15:	cdq    
  418a16:	mov    BYTE PTR [esi-0x4e],ah
  418a19:	xchg   ebp,eax
  418a1a:	sub    BYTE PTR [esi-0x30],0x11
  418a1e:	jns    0x418a48
  418a20:	scas   eax,DWORD PTR es:[edi]
  418a21:	or     edx,esp
  418a23:	cmp    DWORD PTR [edi-0x76cb9dd2],esi
  418a29:	jl     0x418a89
  418a2b:	cbw    
  418a2d:	dec    edi
  418a2e:	out    0xa0,al
  418a30:	rcr    edi,cl
  418a32:	fst    DWORD PTR [eax-0x1ea9b94e]
  418a38:	jmp    0xf8ab71a9
  418a3d:	jnp    0x418a1b
  418a3f:	cdq    
  418a40:	loopne 0x418a7d
  418a42:	sub    DWORD PTR [esi-0x2d],eax
  418a45:	cmp    eax,0x876f8e47
  418a4a:	push   edx
  418a4b:	icebp  
  418a4c:	cmc    
  418a4d:	outs   dx,BYTE PTR ds:[esi]
  418a4e:	test   DWORD PTR [ebx+0x28],0x6bf2f0b2
  418a55:	xchg   ebp,eax
  418a56:	cmc    
  418a57:	mov    ebx,0x2e223ed3
  418a5c:	xchg   DWORD PTR ds:0x518b97f8,ecx
  418a62:	call   0xfecb:0xf76658bb
  418a69:	pop    ecx
  418a6a:	add    eax,0xccf2b4f8
  418a6f:	jp     0x418a36
  418a71:	(bad)  
  418a72:	jbe    0x418aaa
  418a74:	add    eax,0x3b7be271
  418a79:	and    eax,0xf285d5f7
  418a7e:	or     al,0x14
  418a80:	adc    DWORD PTR [edi],0x46866ee
  418a86:	pop    ds
  418a87:	fwait
  418a88:	shr    BYTE PTR [ecx+ebx*8-0x15044f9c],cl
  418a8f:	test   al,0x42
  418a91:	or     al,BYTE PTR gs:[ebp+0x47]
  418a95:	out    0x13,eax
  418a97:	leave  
  418a98:	cld    
  418a99:	mov    dl,0xad
  418a9b:	or     esp,DWORD PTR [eax]
  418a9d:	dec    ebp
  418a9e:	ja     0x418a64
  418aa0:	sbb    eax,0xf7c14105
  418aa5:	jge    0x418a88
  418aa7:	out    dx,al
  418aa8:	ins    BYTE PTR es:[edi],dx
  418aa9:	mov    ebx,0x53f166b8
  418aae:	test   al,0xeb
  418ab0:	jmp    0xb1e4:0x472f1fb0
  418ab7:	xchg   dh,dh
  418ab9:	daa    
  418aba:	cmc    
  418abb:	cld    
  418abc:	hlt    
  418abd:	fwait
  418abe:	shl    DWORD PTR [esi-0x7],1
  418ac1:	shr    BYTE PTR [edx-0x25],cl
  418ac4:	rcl    DWORD PTR [ecx+0x3966f7a4],cl
  418aca:	add    DWORD PTR [eax+ebp*2+0x6e23c265],eax
  418ad1:	es adc al,0x18
  418ad4:	mov    dh,0x64
  418ad6:	sub    esp,DWORD PTR [ecx]
  418ad8:	shl    DWORD PTR [ebx-0x8],cl
  418adb:	fsubr  DWORD PTR [ebx]
  418add:	cmp    cl,BYTE PTR [eax]
  418adf:	gs iret 
  418ae1:	repnz scas al,BYTE PTR es:[edi]
  418ae3:	adc    ebp,ebx
  418ae5:	mov    bh,0xa1
  418ae7:	pop    cx
  418ae9:	ret    0x88d3
  418aec:	rcl    DWORD PTR ds:0xb9a080a,cl
  418af2:	inc    ebx
  418af3:	cmp    al,0x5e
  418af5:	push   eax
  418af6:	(bad)  
  418af7:	mov    esp,DWORD PTR [eax+0x7f279266]
  418afd:	xchg   ebp,eax
  418afe:	ja     0x418b19
  418b00:	ror    DWORD PTR [edi-0x28340ebb],cl
  418b06:	test   al,0xa0
  418b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b09:	pop    ebx
  418b0a:	ror    bl,cl
  418b0c:	call   0x6f23b976
  418b11:	jmp    DWORD PTR [edx+ebx*8-0x982052d]
  418b18:	dec    edx
  418b19:	cld    
  418b1a:	aam    0xca
  418b1c:	cmp    eax,0x7277fe65
  418b21:	pop    ebp
  418b22:	enter  0x27b2,0x28
  418b26:	mov    ch,al
  418b28:	repnz lods al,BYTE PTR ds:[esi]
  418b2a:	jne    0x418ace
  418b2c:	stc    
  418b2d:	add    BYTE PTR [ebx-0x1ce38fd],0xbd
  418b34:	xlat   BYTE PTR ds:[ebx]
  418b35:	and    dh,dh
  418b37:	lds    edi,FWORD PTR [ebx-0x152fb53f]
  418b3d:	dec    edi
  418b3e:	mov    ah,0x34
  418b40:	lahf   
  418b41:	out    dx,eax
  418b42:	xchg   edi,eax
  418b43:	push   edx
  418b44:	int3   
  418b45:	into   
  418b46:	(bad)  
  418b47:	inc    esi
  418b48:	hlt    
  418b49:	sub    eax,0x3df4db86
  418b4e:	push   0xbc179a01
  418b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b54:	jae    0x418b30
  418b56:	leave  
  418b57:	rcr    ebp,cl
  418b59:	push   ecx
  418b5a:	jecxz  0x418bd1
  418b5c:	stc    
  418b5d:	gs mov ebx,0x5e58c48
  418b63:	into   
  418b64:	popa   
  418b65:	gs xchg ebp,eax
  418b67:	test   al,0x45
  418b69:	cmp    ah,BYTE PTR [eax-0x5c]
  418b6c:	and    al,0x15
  418b6e:	adc    al,0x13
  418b70:	je     0x418b85
  418b72:	jne    0x418af9
  418b74:	inc    eax
  418b75:	(bad)
  418b78:	call   DWORD PTR [esi-0x26]
  418b7b:	data16 add bh,BYTE PTR [eax-0x60]
  418b7f:	cmp    eax,DWORD PTR [edi]
  418b81:	or     DWORD PTR [edx+ebp*1-0x12],0xffffff9e
  418b86:	and    al,0xb9
  418b88:	lahf   
  418b89:	iret   
  418b8a:	xchg   ecx,eax
  418b8b:	enter  0x7c32,0xaf
  418b8f:	outs   dx,DWORD PTR ds:[esi]
  418b90:	lea    esp,[eax-0x5952961b]
  418b96:	retf   
  418b97:	repz fs xchg esp,eax
  418b9a:	xor    eax,0x67181e6e
  418b9f:	dec    edi
  418ba0:	or     DWORD PTR [ebp+0xb43616b],eax
  418ba6:	jle    0x418b5a
  418ba8:	retf   
  418ba9:	popa   
  418baa:	jl     0x418b41
  418bac:	aaa    
  418bad:	and    DWORD PTR [eax-0x3e62749a],0xffffffdc
  418bb4:	dec    edi
  418bb5:	push   ebp
  418bb6:	jne    0x418b3d
  418bb8:	sti    
  418bb9:	xchg   ebx,eax
  418bba:	sti    
  418bbb:	add    ah,BYTE PTR [ecx+ebp*4]
  418bbe:	sub    ah,BYTE PTR [esi+0x42]
  418bc1:	dec    eax
  418bc2:	out    0x86,eax
  418bc4:	shl    DWORD PTR [ecx+0x306faa46],cl
  418bca:	lds    ebp,FWORD PTR [ebx-0x11]
  418bcd:	gs xchg edx,eax
  418bcf:	mov    cl,0xc0
  418bd1:	jp     0x418b86
  418bd3:	ds push edx
  418bd5:	sub    bl,ah
  418bd7:	rol    DWORD PTR [ebp-0x12a58aec],cl
  418bdd:	test   BYTE PTR [eax-0x1a818cfc],cl
  418be3:	and    dh,0x69
  418be6:	fscale 
  418be8:	push   ebx
  418be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bea:	pop    es
  418beb:	aam    0x53
  418bed:	ret    0x3064
  418bf0:	retf   0x75cd
  418bf3:	xchg   esp,eax
  418bf4:	mov    ds:0x35ecba9b,al
  418bf9:	nop
  418bfa:	or     BYTE PTR [edx+0x286d49e7],al
  418c00:	jno    0x418c50
  418c02:	sahf   
  418c03:	mov    bh,0x9e
  418c05:	push   eax
  418c06:	or     edx,DWORD PTR [edx-0x3b]
  418c09:	pop    edi
  418c0a:	call   0xbfbb:0x35637269
  418c11:	in     al,0x3f
  418c13:	retf   
  418c14:	sbb    DWORD PTR [ebp+0x63],esp
  418c17:	loopne 0x418c94
  418c19:	jmp    0x9cea0163
  418c1e:	out    dx,al
  418c1f:	fcmovnbe st,st(0)
  418c21:	ficomp DWORD PTR [ecx+0x76170794]
  418c27:	imul   ebp,DWORD PTR [ebp+0x6],0xffffff83
  418c2b:	jle    0x418c2a
  418c2d:	xchg   ecx,eax
  418c2e:	jle    0x418c96
  418c30:	add    dl,ah
  418c32:	ficomp WORD PTR [ecx]
  418c34:	rcl    DWORD PTR [ecx-0x28],cl
  418c37:	adc    al,0x53
  418c39:	mov    al,ds:0x62d7b6b8
  418c3e:	dec    esi
  418c3f:	dec    esi
  418c40:	or     eax,0x608ae52d
  418c45:	fisttp DWORD PTR [esi]
  418c47:	rcl    DWORD PTR es:[ebx],cl
  418c4a:	jle    0x418bd5
  418c4c:	popf   
  418c4d:	inc    edi
  418c4e:	test   BYTE PTR [ebx+0x7],ch
  418c51:	gs neg edi
  418c54:	nop
  418c55:	aam    0xfd
  418c57:	ja     0x418c25
  418c59:	dec    edi
  418c5a:	in     al,0xbe
  418c5c:	push   esi
  418c5d:	dec    ebx
  418c5e:	imul   edx,ecx,0xffffffb7
  418c61:	out    dx,eax
  418c62:	mov    bh,0x86
  418c64:	retf   
  418c65:	inc    ebp
  418c66:	leave  
  418c67:	imul   edi,esp,0x399320e5
  418c6d:	rcr    BYTE PTR [ebp-0x3b],0xe5
  418c71:	jmp    ecx
  418c73:	aam    0x23
  418c75:	test   DWORD PTR [edx+0x71],edi
  418c78:	fwait
  418c79:	jnp    0x418c6d
  418c7b:	xor    DWORD PTR [ebx],esi
  418c7d:	or     DWORD PTR [edx-0x39d1109a],esp
  418c83:	leave  
  418c84:	shr    DWORD PTR [ebx+esi*2-0x8e7a70a],cl
  418c8b:	xchg   esi,eax
  418c8c:	push   cs
  418c8d:	gs push ss
  418c8f:	addr16 cmc 
  418c91:	rcl    esp,cl
  418c93:	pop    edx
  418c94:	mov    eax,ds:0x41c4d026
  418c99:	fs jne 0x418cff
  418c9c:	popa   
  418c9d:	sbb    BYTE PTR [edi],al
  418c9f:	dec    esi
  418ca0:	inc    esi
  418ca1:	bound  esp,QWORD PTR [ecx-0x64e0699a]
  418ca7:	inc    ebx
  418ca8:	pop    edx
  418ca9:	inc    ecx
  418caa:	xor    dh,BYTE PTR [edx-0x3a8af96f]
  418cb0:	call   DWORD PTR [ebx+0x2d]
  418cb3:	in     al,0x45
  418cb5:	add    DWORD PTR ss:[esi+0x79],esp
  418cb9:	jecxz  0x418c86
  418cbb:	dec    ebp
  418cbc:	sar    DWORD PTR [esi+0x1d60b67e],cl
  418cc2:	inc    edx
  418cc3:	nop
  418cc4:	and    ah,BYTE PTR [ebp-0x1b]
  418cc7:	(bad)  [eax]
  418cc9:	sub    al,0x5a
  418ccb:	cmp    BYTE PTR [edi],ah
  418ccd:	loop   0x418cc0
  418ccf:	jg     0x418d4c
  418cd1:	cmp    esi,DWORD PTR [ebp-0x3]
  418cd4:	adc    ch,BYTE PTR [edx]
  418cd6:	xchg   DWORD PTR [edi+0x6605a51f],esp
  418cdc:	ss stos DWORD PTR es:[edi],eax
  418cde:	mov    eax,ds:0xe4cbd199
  418ce3:	out    0xda,eax
  418ce5:	sbb    dl,dl
  418ce7:	(bad)  
  418ce8:	fnstsw WORD PTR [esi]
  418cea:	aam    0x46
  418cec:	jmp    0xcaca:0x16669df6
  418cf3:	push   esi
  418cf4:	push   ebp
  418cf5:	stos   DWORD PTR es:[edi],eax
  418cf6:	xor    DWORD PTR [ebx-0x12],ecx
  418cf9:	repnz (bad) 
  418cfb:	and    dl,BYTE PTR [ebp-0x10]
  418cfe:	push   ebp
  418cff:	fimul  DWORD PTR [ecx-0x6ca9e137]
  418d05:	sti    
  418d06:	mov    al,ds:0xf55bc5a3
  418d0b:	mov    dl,0x25
  418d0d:	imul   eax,DWORD PTR [ecx+0x27],0xffffffc2
  418d11:	sbb    DWORD PTR [ebp-0x53],esi
  418d14:	ja     0x418d4e
  418d16:	loope  0x418d04
  418d18:	xchg   esp,eax
  418d19:	outs   dx,DWORD PTR ds:[esi]
  418d1a:	retf   0x1166
  418d1d:	pop    ebp
  418d1e:	xor    ch,BYTE PTR [esi]
  418d20:	(bad)  [ebx]
  418d22:	sbb    al,0xcc
  418d24:	shr    BYTE PTR [ebx+0x76bfc64b],1
  418d2a:	jno    0x418d6c
  418d2c:	xor    esi,DWORD PTR [edi-0x3e0d133b]
  418d32:	or     al,0x66
  418d34:	jno    0x418da9
  418d36:	repnz and dl,bl
  418d39:	mov    WORD PTR [ebp-0x7e5e488d],es
  418d3f:	and    al,0xf2
  418d41:	gs js  0x418cdf
  418d44:	fbld   TBYTE PTR [ecx+0x7c]
  418d47:	sbb    eax,0xe2429d26
  418d4c:	xor    al,0xfa
  418d4e:	jne    0x418d5a
  418d50:	loop   0x418cd8
  418d52:	xchg   ebx,eax
  418d53:	(bad)  
  418d54:	mov    ebp,0xa6169066
  418d59:	xor    BYTE PTR [ebx],dh
  418d5b:	icebp  
  418d5c:	cmp    edi,esp
  418d5e:	scas   eax,DWORD PTR es:[edi]
  418d5f:	sub    esp,DWORD PTR [ecx]
  418d61:	jp     0x418dd8
  418d63:	int    0x96
  418d65:	mov    bh,0xcf
  418d67:	dec    ebp
  418d68:	mov    al,ds:0xe6617b5
  418d6d:	push   edx
  418d6e:	mov    dl,0xe
  418d70:	rol    edx,cl
  418d72:	jmp    0x418dbf
  418d74:	add    al,0x62
  418d76:	hlt    
  418d77:	mov    bh,0x45
  418d79:	outs   dx,DWORD PTR gs:[esi]
  418d7b:	rcr    BYTE PTR [edx+0x5eb0b6ae],0xcc
  418d82:	jp     0x418d5f
  418d84:	ror    DWORD PTR [ebp+0xae794f9],cl
  418d8a:	(bad)  fs:[ebx]
  418d8d:	gs scas eax,DWORD PTR es:[edi]
  418d8f:	imul   ebp,DWORD PTR [ebx-0x330d6e36],0xcf29bd46
  418d99:	or     BYTE PTR [ebp-0x52],dh
  418d9c:	lods   eax,DWORD PTR ds:[esi]
  418d9d:	test   BYTE PTR [eax+edi*2],ch
  418da0:	aaa    
  418da1:	dec    ebx
  418da2:	cs gs mov ebp,0x378ff7c3
  418da9:	aas    
  418daa:	inc    ebp
  418dab:	push   es
  418dac:	mov    ds:0xe3569d09,al
  418db1:	pop    ebx
  418db2:	or     eax,0x71257b23
  418db7:	lea    esi,[esi]
  418db9:	xchg   ecx,eax
  418dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dbb:	ror    edi,cl
  418dbd:	out    dx,eax
  418dbe:	mov    ebp,0x75d3774c
  418dc3:	je     0x418da8
  418dc5:	icebp  
  418dc6:	and    eax,0x45279ea9
  418dcb:	xchg   esp,eax
  418dcc:	out    dx,eax
  418dcd:	xlat   BYTE PTR ds:[ebx]
  418dce:	adc    al,0x67
  418dd0:	jge    0xf623c257
  418dd6:	add    DWORD PTR [ebp-0x14f5daf4],ebp
  418ddc:	and    ebp,DWORD PTR [ebx-0x5792adf8]
  418de2:	jp     0x418d66
  418de4:	mov    WORD PTR [edx-0x2a],ss
  418de7:	inc    ebx
  418de8:	rol    edi,cl
  418dea:	dec    esi
  418deb:	ja     0x418d8b
  418ded:	sbb    eax,0xbad36aab
  418df2:	rcl    esp,0x72
  418df5:	test   BYTE PTR [ebx+0x74531224],ah
  418dfb:	sbb    BYTE PTR ss:[ebp-0x78],ah
  418dff:	inc    edx
  418e00:	cmc    
  418e01:	outs   dx,DWORD PTR ds:[esi]
  418e02:	cwde   
  418e03:	sub    eax,0x3f2fcbd3
  418e08:	sar    BYTE PTR [edx-0x42aebe63],cl
  418e0e:	idiv   BYTE PTR [edx+0x6dbf9d95]
  418e14:	mov    bl,0xbe
  418e16:	pusha  
  418e17:	xor    ebx,edx
  418e19:	cwde   
  418e1a:	jge    0x418da3
  418e1c:	add    dl,ah
  418e1e:	popa   
  418e1f:	inc    ebp
  418e20:	loope  0x418da3
  418e22:	jns    0x418ea1
  418e24:	in     al,0x71
  418e26:	sub    eax,0x92840769
  418e2b:	aam    0xee
  418e2d:	mov    ah,dl
  418e2f:	rcl    DWORD PTR [eax-0x55],cl
  418e32:	pop    edx
  418e33:	jbe    0x418de6
  418e35:	cmp    eax,0x5b955275
  418e3a:	push   ss
  418e3b:	stos   BYTE PTR es:[edi],al
  418e3c:	cmc    
  418e3d:	dec    edx
  418e3e:	std    
  418e3f:	imul   esp,DWORD PTR [ebx],0x4b741a35
  418e45:	push   0xffffff89
  418e47:	ins    BYTE PTR es:[edi],dx
  418e48:	jmp    FWORD PTR [ebx+0x70]
  418e4b:	mov    eax,0x3dbce9d3
  418e50:	cmc    
  418e51:	sub    DWORD PTR ds:0xd08fd752,esi
  418e57:	data16 mov ah,0x9e
  418e5a:	xchg   esi,eax
  418e5b:	mov    bl,0xd3
  418e5d:	sub    esp,DWORD PTR [ebx+0x47]
  418e60:	call   0x997a2eac
  418e65:	mov    dh,0x81
  418e67:	adc    eax,0x66c385ab
  418e6c:	pop    esp
  418e6d:	mov    ds:0x1ef2cbb1,al
  418e72:	xor    DWORD PTR [edx],eax
  418e74:	rcr    DWORD PTR [esi+edi*2+0x54],cl
  418e78:	int3   
  418e79:	push   ss
  418e7a:	mov    ecx,0x418544d8
  418e7f:	data16 test BYTE PTR [ebp-0x4b2c92c2],al
  418e86:	call   FWORD PTR [edx-0x1bf62795]
  418e8c:	adc    al,0x65
  418e8e:	jl     0x418f06
  418e90:	test   al,0xf4
  418e92:	pop    ebx
  418e93:	fsub   QWORD PTR ds:[edi]
  418e96:	mov    ebx,0x663d031a
  418e9b:	cmp    esp,DWORD PTR [eax+0x127a7550]
  418ea1:	add    BYTE PTR gs:[ebx+eiz*8+0x30],dh
  418ea6:	in     al,0xe9
  418ea8:	mov    esp,0xe04776fe
  418ead:	adc    DWORD PTR [esi-0x6e],esi
  418eb0:	push   0xca0e81c5
  418eb5:	push   ebp
  418eb6:	inc    ecx
  418eb7:	fld    TBYTE PTR [eax]
  418eb9:	mov    edx,0xa661be8a
  418ebe:	xor    eax,0xaf29d389
  418ec3:	jns    0x418f37
  418ec5:	loop   0x418eb6
  418ec7:	xor    dh,bh
  418ec9:	pop    ebp
  418eca:	into   
  418ecb:	fist   WORD PTR [ecx-0xf]
  418ece:	aam    0xd5
  418ed0:	cmc    
  418ed1:	popf   
  418ed2:	int    0x72
  418ed4:	adc    ebx,DWORD PTR [edi+0x3cb692ac]
  418eda:	mov    ebx,0xdabe198a
  418edf:	gs jg  0x418ee8
  418ee2:	and    eax,0x7547f967
  418ee7:	lds    esi,FWORD PTR [ecx+edx*4]
  418eea:	aad    0xa
  418eec:	sbb    eax,0x3266f4cf
  418ef1:	xchg   ebx,eax
  418ef2:	pop    edx
  418ef3:	test   al,0xd3
  418ef5:	jno    0x418e7e
  418ef7:	jnp    0x418ee2
  418ef9:	aas    
  418efa:	cwde   
  418efb:	xchg   edi,eax
  418efc:	mov    eax,0x22764c66
  418f01:	in     eax,0x6b
  418f03:	leave  
  418f04:	mov    es:0xd3c2f99d,al
  418f0a:	je     0x418ea7
  418f0c:	and    BYTE PTR [edi],bh
  418f0e:	ficom  DWORD PTR [edx]
  418f10:	cdq    
  418f11:	ins    DWORD PTR es:[edi],dx
  418f12:	dec    ebp
  418f13:	mov    DWORD PTR [esp+eax*1-0x4ae7da10],esi
  418f1a:	mov    bl,0x16
  418f1c:	ret    
  418f1d:	mov    esp,0x445ec8ca
  418f22:	jne    0x418ef2
  418f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f25:	sub    DWORD PTR [esi-0x5de886b6],0x66
  418f2c:	data16 int3 
  418f2e:	into   
  418f2f:	jo     0x418f4a
  418f31:	sti    
  418f32:	(bad)  
  418f34:	and    bh,BYTE PTR [esp+ebp*1]
  418f37:	imul   eax,ebx,0x5ac30238
  418f3d:	gs (bad) 
  418f3f:	adc    DWORD PTR [edx],edi
  418f41:	add    BYTE PTR [eax+0x29a3636d],0x5e
  418f48:	jae    0x418f4f
  418f4a:	jne    0x418f9e
  418f4c:	push   0x292b86bf
  418f51:	cmp    al,0x60
  418f53:	push   0x44
  418f55:	in     eax,0x98
  418f57:	xchg   ecx,eax
  418f58:	fisubr WORD PTR [ecx+0x63]
  418f5b:	add    ah,BYTE PTR [ecx-0x7f]
  418f5e:	jne    0x418f70
  418f60:	js     0x418f9a
  418f62:	(bad)  
  418f64:	jmp    0xd2d2be95
  418f69:	inc    ebx
  418f6a:	inc    ebp
  418f6b:	outs   dx,DWORD PTR ds:[esi]
  418f6c:	push   edi
  418f6d:	rcl    DWORD PTR [ecx+eiz*4+0x4f],1
  418f71:	popf   
  418f72:	jne    0x418fa1
  418f74:	mov    esi,0x8690c958
  418f79:	mov    ds:0x13ff66d8,eax
  418f7e:	jl     0x418f90
  418f80:	mov    bh,0xb6
  418f82:	fnstsw WORD PTR [ecx+0xb7543dd]
  418f88:	cmp    al,0x3b
  418f8a:	in     al,dx
  418f8b:	cmp    DWORD PTR [eax],ebx
  418f8d:	xor    al,bl
  418f8f:	add    edi,DWORD PTR [esi-0x68090a15]
  418f95:	jmp    0x40239255
  418f9a:	jne    0x418f6b
  418f9c:	shr    BYTE PTR [ebx-0x3],0x82
  418fa0:	stos   BYTE PTR es:[edi],al
  418fa1:	mov    al,BYTE PTR [edi+0x66]
  418fa4:	jmp    0xd3536d2f
  418fa9:	jge    0x418fb9
  418fab:	jmp    0x418f94
  418fad:	repz mov cl,0x18
  418fb0:	mov    edx,0xe171c466
  418fb5:	pop    ebp
  418fb6:	cmp    BYTE PTR [ebx-0xd],dh
  418fb9:	dec    ebp
  418fba:	dec    edi
  418fbb:	sub    esp,DWORD PTR ds:0xc5a275e8
  418fc1:	int3   
  418fc2:	pushf  
  418fc3:	cdq    
  418fc4:	dec    ebx
  418fc5:	jmp    0xe68a429a
  418fca:	leave  
  418fcb:	imul   edi,DWORD PTR [edx-0x7cd91479],0xa2752629
  418fd5:	int    0x75
  418fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd8:	shl    bl,0xef
  418fdb:	push   cs
  418fdc:	pop    esp
  418fdd:	pop    edi
  418fde:	dec    eax
  418fdf:	data16 aam 0x1c
  418fe2:	sbb    esp,DWORD PTR [edx+eiz*8]
  418fe5:	jmp    0x744b3e61
  418fea:	xchg   esi,eax
  418feb:	ins    DWORD PTR es:[edi],dx
  418fec:	add    DWORD PTR [ebx-0x63],edx
  418fef:	out    0x57,al
  418ff1:	push   esp
  418ff2:	in     al,dx
  418ff3:	adc    ch,0xce
  418ff6:	stos   DWORD PTR es:[edi],eax
  418ff7:	push   edi
  418ff8:	lods   eax,DWORD PTR ds:[esi]
  418ff9:	stc    
  418ffa:	aad    0x39
  418ffc:	rol    esp,cl
  418ffe:	fist   DWORD PTR [edi+ebx*8]
  419001:	inc    ebx
  419002:	jbe    0x41907f
  419004:	cli    
  419005:	cmp    DWORD PTR [esi+0x370c7804],0x53e25466
  41900f:	ins    DWORD PTR es:[edi],dx
  419010:	sbb    cl,cl
  419012:	or     al,0x41
  419014:	jl     0x41908e
  419016:	push   eax
  419017:	out    0xa0,eax
  419019:	adc    eax,0x548c9e6b
  41901e:	jns    0x419029
  419020:	mov    ds:0x6ad0b6fe,eax
  419025:	cld    
  419026:	xchg   ebp,eax
  419027:	jb     0x419040
  419029:	xchg   BYTE PTR [eax],ch
  41902b:	mov    eax,ds:0xe61b6595
  419030:	popa   
  419031:	push   0x8dc34b5f
  419036:	sbb    al,0x69
  419038:	and    BYTE PTR [esi-0x473c7f3],0x59
  41903f:	jne    0x41902b
  419041:	mov    bh,0x9b
  419043:	xor    eax,0x16b5b880
  419048:	sbb    esp,DWORD PTR [ebp-0x6e]
  41904b:	popf   
  41904c:	pop    ebx
  41904d:	imul   esp,DWORD PTR [edx+0x4a62a751],0x7539cf36
  419057:	fstp   QWORD PTR [edi+0x52b2ce83]
  41905d:	xchg   ebx,eax
  41905e:	xor    ah,BYTE PTR [eax-0x769414da]
  419064:	and    DWORD PTR [edx*2-0x1f2c2c70],ebx
  41906b:	push   cs
  41906c:	mov    al,0xa6
  41906e:	rcl    BYTE PTR [edx+0x429a668e],cl
  419074:	mov    ds:0xca16d6d9,al
  419079:	sbb    ecx,DWORD PTR [ecx+0x10]
  41907c:	fadd   QWORD PTR [edi-0x66]
  41907f:	add    BYTE PTR [edx-0x4f],ch
  419082:	jle    0x4190e9
  419084:	add    dh,0xa6
  419087:	push   cs
  419088:	or     ah,BYTE PTR [ebp+0xf]
  41908b:	adc    al,0x51
  41908d:	jl     0x41905a
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	pop    edx
  419091:	les    edi,FWORD PTR [esi]
  419093:	or     ebx,DWORD PTR [ecx-0x47]
  419096:	je     0x41902d
  419098:	sar    DWORD PTR [eax+ebp*2],0x7
  41909c:	repz xor al,0xf5
  41909f:	push   esp
  4190a0:	aaa    
  4190a1:	xor    cl,BYTE PTR [edx-0x14]
  4190a4:	rol    esp,cl
  4190a6:	inc    BYTE PTR [ebp-0x43]
  4190a9:	dec    ebx
  4190aa:	scas   eax,DWORD PTR es:[edi]
  4190ab:	int    0xda
  4190ad:	repz sbb edx,DWORD PTR [edi]
  4190b0:	adc    DWORD PTR ds:0x598c6606,ebp
  4190b6:	jmp    0x5849:0xf64614d1
  4190bd:	fs xchg ebx,eax
  4190bf:	out    0x50,al
  4190c1:	jne    0x4190c4
  4190c3:	(bad)  
  4190c4:	out    dx,al
  4190c5:	ja     0x41905d
  4190c7:	data16 mov cl,0xfd
  4190ca:	mov    cl,0x1b
  4190cc:	out    dx,al
  4190cd:	mov    edx,0x291af2d8
  4190d2:	mov    eax,0x9156256
  4190d7:	test   DWORD PTR cs:[ecx+ebx*4+0x66],edx
  4190dc:	pushf  
  4190dd:	imul   esi,DWORD PTR [edi-0x5f],0xffffffe5
  4190e1:	int    0xd5
  4190e3:	jecxz  0x419164
  4190e5:	gs xchg ecx,eax
  4190e7:	sub    eax,0x29979d41
  4190ec:	das    
  4190ed:	jg     0x4190dd
  4190ef:	add    BYTE PTR [edx],0xdb
  4190f2:	je     0x419115
  4190f4:	pop    ebx
  4190f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f6:	test   al,0x4d
  4190f8:	fs in  al,dx
  4190fa:	mov    edx,0x2d60b333
  4190ff:	lea    esp,[ebx]
  419101:	in     al,0x45
  419103:	pop    es
  419104:	and    BYTE PTR [ebp+edx*1+0x69],bh
  419108:	sub    dh,BYTE PTR ds:0xd976477f
  41910e:	retf   
  41910f:	in     al,dx
  419110:	lea    edx,[eax+0x75]
  419113:	fbstp  TBYTE PTR [ebp-0xb105452]
  419119:	inc    edx
  41911a:	sub    esp,DWORD PTR [esi+0x7f]
  41911d:	cmp    cl,BYTE PTR [ebx-0x25]
  419120:	rol    DWORD PTR [eax],cl
  419122:	or     DWORD PTR [esp+ebp*4],0x9
  419126:	gs ret 0x66c2
  41912a:	fnstenv [edx-0x404525bd]
  419130:	mov    ah,0x92
  419132:	fisttp WORD PTR [edx]
  419134:	xchg   edi,eax
  419135:	push   es
  419136:	ja     0x4190f4
  419138:	xchg   BYTE PTR [esi+0x678c8fb6],ah
  41913e:	je     0x4190f1
  419140:	jns    0x419142
  419142:	xlat   BYTE PTR ds:[ebx]
  419143:	aam    0x17
  419145:	popf   
  419146:	mov    BYTE PTR [ebx+edx*8+0x70],dl
  41914a:	cli    
  41914b:	jp     0x41913f
  41914d:	mov    edx,0x5aebf011
  419152:	jl     0x419165
  419154:	and    esp,ebp
  419156:	sub    esi,esi
  419158:	cmp    esi,DWORD PTR [ebx]
  41915a:	xor    ebx,edx
  41915c:	sar    DWORD PTR [ebp-0x47],cl
  41915f:	or     al,0x59
  419161:	pop    ds
  419162:	arpl   WORD PTR [edx-0x11],si
  419165:	bound  eax,QWORD PTR [esi-0x4f]
  419168:	dec    edi
  419169:	cmp    BYTE PTR [ebx],dh
  41916b:	psllq  mm6,QWORD PTR [edi+0x39d32695]
  419172:	and    DWORD PTR [eax],ebx
  419174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419175:	mov    bl,0xe9
  419177:	lock loope 0x4191df
  41917a:	aam    0xec
  41917c:	xchg   edx,eax
  41917d:	leave  
  41917e:	in     al,dx
  41917f:	xchg   ecx,eax
  419180:	dec    eax
  419181:	(bad)  
  419183:	ds leave 
  419185:	dec    ecx
  419186:	jne    0x419143
  419188:	das    
  419189:	addr16 (bad) 
  41918b:	cmp    eax,0x6605918f
  419190:	inc    eax
  419191:	xchg   ebp,eax
  419192:	cmc    
  419193:	jmp    0x419168
  419195:	pushf  
  419196:	adc    al,0x72
  419198:	push   ebp
  419199:	dec    ecx
  41919a:	push   0x8d6530ad
  41919f:	popf   
  4191a0:	sub    eax,0xb5b05044
  4191a5:	stc    
  4191a6:	js     0x419137
  4191a8:	xor    esi,DWORD PTR [eax+0x75]
  4191ab:	shr    DWORD PTR [esi],1
  4191ad:	sbb    cl,dh
  4191af:	pop    esi
  4191b0:	push   edx
  4191b1:	push   ds
  4191b2:	mov    ebx,0x757a29d2
  4191b7:	sbb    al,0xdc
  4191b9:	add    dl,al
  4191bb:	mov    bh,0x62
  4191bd:	or     bl,BYTE PTR [ebx+0x358d2b82]
  4191c3:	cwde   
  4191c4:	ds cmp edi,DWORD PTR gs:[edi-0x7]
  4191c9:	or     al,0x1a
  4191cb:	int3   
  4191cc:	(bad)  
  4191cd:	bnd jmp 0xbaa6f674
  4191d3:	in     eax,0x1b
  4191d5:	retf   0x4016
  4191d8:	shl    DWORD PTR [esi-0x58],0x8
  4191dc:	xor    eax,edx
  4191de:	mov    ecx,0xe179e978
  4191e3:	add    ebp,DWORD PTR [edx-0x1b]
  4191e6:	mov    esi,0x34fa8f28
  4191eb:	es jecxz 0x419253
  4191ee:	dec    edx
  4191ef:	call   0xeada0a78
  4191f4:	add    DWORD PTR ds:0xc8a8f8e8,0xbeaf9375
  4191fe:	int3   
  4191ff:	pushf  
  419200:	retf   0x5fe6
  419203:	push   ax
  419205:	xchg   ecx,eax
  419206:	sti    
  419207:	mul    dl
  419209:	cmp    ah,BYTE PTR [eax]
  41920b:	shl    BYTE PTR [eax+0x5],1
  41920e:	stc    
  41920f:	mov    esp,0xeb1ede04
  419214:	and    bl,BYTE PTR [edi+0xf]
  419217:	data16 aam 0x4a
  41921a:	xor    cl,BYTE PTR [edi-0x2d]
  41921d:	pop    eax
  41921e:	fld    DWORD PTR [esi-0x38322a36]
  419224:	fadd   QWORD PTR [edx+0x59]
  419227:	inc    esi
  419228:	mov    eax,ds:0x9bf18566
  41922d:	add    al,0x9c
  41922f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419230:	shr    DWORD PTR [eax],cl
  419232:	cmp    eax,DWORD PTR [edx]
  419234:	imul   edx,edx,0x5c
  419237:	xor    DWORD PTR [eax+0xc8aa66],edx
  41923d:	es hlt 
  41923f:	vunpcklpd ymm3,ymm4,YMMWORD PTR [ebx]
  419243:	push   0xffffffdf
  419245:	lahf   
  419246:	jne    0x419212
  419248:	cmc    
  419249:	loope  0x41921f
  41924b:	pushf  
  41924c:	dec    esi
  41924d:	mov    es,edx
  41924f:	test   WORD PTR [ecx],ax
  419252:	jns    0x4191f7
  419254:	jmp    0x1445:0xd2391e25
  41925b:	jge    0x4192a8
  41925d:	scas   eax,DWORD PTR es:[edi]
  41925e:	mov    ch,0x8b
  419260:	push   cs
  419261:	cmc    
  419262:	fimul  WORD PTR [edx-0x35]
  419265:	data16 jge 0x4192e0
  419268:	test   bh,dl
  41926a:	hlt    
  41926b:	sbb    ebx,ecx
  41926d:	call   0x4475:0xdbe45331
  419274:	arpl   WORD PTR [edx],ax
  419276:	mov    dh,0x46
  419278:	xchg   ecx,eax
  419279:	xchg   esp,eax
  41927a:	out    0x66,al
  41927c:	jns    0x41923a
  41927e:	mov    cl,0xfb
  419280:	out    dx,al
  419281:	ja     0x41921f
  419283:	in     al,0x83
  419285:	in     al,0xd2
  419287:	out    dx,eax
  419288:	test   BYTE PTR [edi],ah
  41928a:	jnp    0x419273
  41928c:	mov    esi,0xa3c64358
  419291:	fisub  WORD PTR [esi]
  419293:	out    0xc6,ax
  419296:	mov    ebx,0xdcbbe887
  41929b:	xchg   esp,eax
  41929c:	mov    dh,0x61
  41929e:	jge    0x4192e1
  4192a0:	pop    esi
  4192a1:	jge    0x419260
  4192a3:	jecxz  0x419292
  4192a5:	mul    DWORD PTR gs:[edx+0x5d]
  4192a9:	push   edx
  4192aa:	mov    eax,ds:0xddaa5aad
  4192af:	gs repz gs mov esi,0xac1bf5d5
  4192b7:	(bad)  
  4192b8:	adc    al,0x65
  4192ba:	inc    esp
  4192bb:	retf   0x417a
  4192be:	mov    edi,0x835b7d2
  4192c3:	sbb    eax,0xdd75055c
  4192c8:	fild   WORD PTR [eax]
  4192ca:	scas   eax,DWORD PTR es:[edi]
  4192cb:	push   cs
  4192cc:	inc    ecx
  4192cd:	gs fdiv st(3),st
  4192d0:	mov    al,BYTE PTR [ebp+0x9]
  4192d3:	shl    ecx,cl
  4192d5:	pop    ss
  4192d6:	cs cmp edx,ebx
  4192d9:	pop    ecx
  4192da:	cli    
  4192db:	jae    0x419330
  4192dd:	inc    edx
  4192de:	fiadd  WORD PTR [ecx+0x39]
  4192e1:	gs add al,0xcc
  4192e4:	cld    
  4192e5:	add    al,0x1d
  4192e7:	sbb    bh,BYTE PTR [ebx-0x63df1f33]
  4192ed:	pusha  
  4192ee:	jne    0x419332
  4192f0:	ret    0x22e9
  4192f3:	push   edx
  4192f4:	jmp    0xdbb3:0x136504ba
  4192fb:	cwde   
  4192fc:	nop
  4192fd:	hlt    
  4192fe:	dec    ebp
  4192ff:	pop    esi
  419300:	mul    BYTE PTR [eax-0x69d7178b]
  419306:	jb     0x41933c
  419308:	add    bh,al
  41930a:	jmp    0xea2c:0xae843f66
  419311:	test   al,0x49
  419313:	fwait
  419314:	mov    ds:0x6fc5796b,eax
  419319:	xor    al,0xf5
  41931b:	mov    al,0x49
  41931d:	xchg   edx,esp
  41931f:	outs   dx,DWORD PTR ds:[esi]
  419320:	push   ebx
  419321:	repz add BYTE PTR [eax],0x34
  419325:	cmc    
  419326:	add    al,0xad
  419328:	lahf   
  419329:	retf   0xd974
  41932c:	in     eax,0x59
  41932e:	sub    ecx,ecx
  419330:	jecxz  0x419392
  419332:	pop    ebp
  419333:	xor    edx,DWORD PTR [edx-0x3c55ebb7]
  419339:	test   eax,0x524083b5
  41933e:	mov    ecx,0x6a5e7bc4
  419343:	add    edx,eax
  419345:	(bad)  
  419346:	stc    
  419347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419348:	not    DWORD PTR [esi+esi*1-0x3a]
  41934c:	and    dl,dl
  41934e:	int    0xa7
  419350:	ins    BYTE PTR es:[edi],dx
  419351:	mov    ebx,0xdad33fd5
  419356:	(bad)  
  419357:	mov    esp,0xc736b2c
  41935c:	lahf   
  41935d:	jmpw   0x6c8
  419361:	shl    DWORD PTR [ebx],1
  419363:	add    BYTE PTR [eax+0x6326457c],bh
  419369:	mov    edi,0x938b4f74
  41936e:	add    bl,BYTE PTR [esi]
  419370:	pop    edx
  419371:	pop    edx
  419372:	test   DWORD PTR [edx+0x34],ecx
  419375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419376:	dec    ecx
  419377:	xor    DWORD PTR [ebx],ebp
  419379:	leave  
  41937a:	jecxz  0x419336
  41937c:	shl    DWORD PTR [esi],cl
  41937e:	mov    ecx,gs
  419380:	inc    esp
  419381:	(bad)  
  419383:	sbb    eax,0x8d926fa9
  419388:	sub    eax,0xa8fa6e70
  41938d:	jle    0x419404
  41938f:	ficomp DWORD PTR [esi+0x38]
  419392:	xchg   edi,eax
  419393:	daa    
  419394:	xlat   BYTE PTR ds:[ebx]
  419395:	ss jne 0x4193e2
  419398:	(bad)  
  419399:	xor    al,0x76
  41939b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41939c:	out    0x3e,eax
  41939e:	nop
  41939f:	callw  0x49c6
  4193a3:	imul   edx,eax,0xe7fe93ae
  4193a9:	sbb    esi,DWORD PTR ds:0x2ac4af89
  4193af:	les    ebx,FWORD PTR [esi-0x54]
  4193b2:	test   BYTE PTR [ebx+0x36bb2953],ah
  4193b8:	jne    0x419414
  4193ba:	int    0x67
  4193bc:	sar    ebx,cl
  4193be:	ja     0x4193bf
  4193c0:	pop    DWORD PTR [ecx+0x3f030521]
  4193c6:	das    
  4193c7:	cmp    eax,0x6ded3dfd
  4193cc:	neg    BYTE PTR [ebx]
  4193ce:	and    eax,0x874b2466
  4193d3:	pop    eax
  4193d4:	in     al,dx
  4193d5:	mov    al,ds:0xa4529975
  4193da:	xor    DWORD PTR [esi-0x7f],ebp
  4193dd:	sahf   
  4193de:	or     DWORD PTR [esi+0x2b],esp
  4193e1:	cdq    
  4193e2:	pop    edi
  4193e3:	daa    
  4193e4:	sar    esi,cl
  4193e6:	mov    DWORD PTR [ebx],esi
  4193e8:	cld    
  4193e9:	and    ah,BYTE PTR [esi+eiz*4-0x6fd9926]
  4193f0:	aad    0xda
  4193f2:	ins    DWORD PTR es:[edi],dx
  4193f3:	stc    
  4193f4:	inc    ecx
  4193f5:	(bad)  
  4193f6:	vpcmpeqw k7{k6},zmm4,zmm2
  4193fc:	jle    0x4193c9
  4193fe:	cld    
  4193ff:	stos   BYTE PTR es:[edi],al
  419400:	lods   eax,DWORD PTR ds:[esi]
  419401:	outs   dx,BYTE PTR ds:[esi]
  419402:	xchg   esp,eax
  419403:	data16 repz aad 0x4
  419407:	xchg   ebx,eax
  419408:	jp     0x419407
  41940a:	std    
  41940b:	xchg   BYTE PTR gs:[ebx],cl
  41940e:	je     0x41948f
  419410:	sahf   
  419411:	inc    edi
  419412:	repz mov ebx,DWORD PTR [eax+esi*8]
  419416:	(bad)
  419419:	dec    ebx
  41941a:	bound  esp,QWORD PTR [ecx+0x39]
  41941d:	fisubr WORD PTR [edx-0x2a]
  419420:	rcr    DWORD PTR [esi],cl
  419422:	scas   al,BYTE PTR es:[edi]
  419423:	fnstenv [ecx-0x747bd0a9]
  419429:	and    eax,0x86506efd
  41942e:	pusha  
  41942f:	test   BYTE PTR [ebp+0x2291431b],bh
  419435:	aam    0x35
  419437:	jbe    0x41949d
  419439:	lds    esi,FWORD PTR [ebp+0x4e]
  41943c:	sbb    DWORD PTR [ecx+0x1e],edi
  41943f:	mov    ch,0xe2
  419441:	ins    BYTE PTR es:[edi],dx
  419442:	(bad)  
  419443:	sub    ax,0xf795
  419447:	pop    esi
  419448:	shr    BYTE PTR [edx-0x5e975267],1
  41944e:	std    
  41944f:	jmp    0x7df9:0xa91bd1af
  419456:	push   ebx
  419457:	mov    BYTE PTR [ebx],ah
  419459:	cld    
  41945a:	push   es
  41945b:	(bad)
  41945f:	jns    0x419434
  419461:	mov    esi,0x557df74d
  419466:	xor    eax,0x4365063e
  41946b:	sbb    al,0x62
  41946d:	mov    dl,0xdc
  41946f:	or     DWORD PTR [esi+0x1a256046],eax
  419475:	sti    
  419476:	cdq    
  419477:	bound  esp,QWORD PTR [ebp-0x16]
  41947a:	cmc    
  41947b:	jecxz  0x419425
  41947d:	ins    WORD PTR es:[edi],dx
  41947f:	gs pop es
  419481:	fidiv  WORD PTR [edi]
  419483:	inc    esp
  419484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419485:	and    al,dh
  419487:	lods   al,BYTE PTR ds:[esi]
  419488:	dec    ecx
  419489:	xlat   BYTE PTR ds:[ebx]
  41948a:	jb     0x419475
  41948c:	inc    ebx
  41948d:	sub    DWORD PTR [eax],eax
  41948f:	mov    bh,0x83
  419491:	sbb    BYTE PTR [ebp+0x250ee51c],0x66
  419498:	fsubr  st,st(0)
  41949a:	push   ax
  41949c:	pop    ebx
  41949d:	es cli 
  41949f:	add    edx,DWORD PTR [ecx]
  4194a1:	inc    ecx
  4194a2:	jne    0x4194af
  4194a4:	fidivr DWORD PTR [edi]
  4194a6:	repz mov al,0xb0
  4194a9:	inc    edi
  4194aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194ab:	data16 sti 
  4194ad:	loopne 0x419430
  4194af:	cmp    BYTE PTR [edi],dl
  4194b1:	in     al,dx
  4194b2:	jbe    0x4194dc
  4194b4:	cmp    ah,cl
  4194b6:	dec    ebx
  4194b7:	out    0xfe,al
  4194b9:	cmp    ah,dh
  4194bb:	mov    DWORD PTR [edx+0x53],eax
  4194be:	fidiv  WORD PTR [esi+ecx*8-0x46]
  4194c2:	mov    DWORD PTR [edx],ebx
  4194c4:	int    0xf6
  4194c6:	scas   al,BYTE PTR es:[edi]
  4194c7:	addr16 mov ax,ds:0x212d
  4194cc:	pop    ebx
  4194cd:	(bad)  
  4194ce:	pusha  
  4194cf:	popa   
  4194d0:	(bad)  
  4194d1:	inc    eax
  4194d2:	out    0xcf,eax
  4194d4:	shl    DWORD PTR [edi-0x33],cl
  4194d7:	mov    cl,0xa4
  4194d9:	addr16 dec edx
  4194db:	jnp    0x4194bd
  4194dd:	push   0x48b6e962
  4194e2:	xchg   esp,eax
  4194e3:	mov    edi,0x6cf555e8
  4194e8:	shr    DWORD PTR [edi+0x2de443f9],cl
  4194ee:	popa   
  4194ef:	xor    al,0x35
  4194f1:	outs   dx,BYTE PTR ds:[esi]
  4194f2:	dec    esp
  4194f3:	jmp    0x404c84cd
  4194f8:	adc    esi,DWORD PTR [ebp-0xb]
  4194fb:	fcomip st,st(2)
  4194fd:	out    0x15,al
  4194ff:	adc    eax,DWORD PTR cs:[edi]
  419502:	xchg   ecx,eax
  419503:	dec    eax
  419504:	cli    
  419505:	push   ss
  419506:	mov    ds:0x21dde02d,eax
  41950b:	in     ax,dx
  41950d:	mov    ?,ecx
  41950f:	call   ebx
  419511:	bound  eax,QWORD PTR [ebx+0x77]
  419514:	mov    DWORD PTR [esi+0x66b8c923],eax
  41951a:	fimul  WORD PTR [esi+0x13]
  41951d:	push   ds
  41951e:	mov    BYTE PTR [esi-0xdf24859],dl
  419524:	xchg   esp,eax
  419525:	mov    DWORD PTR [ebp-0x4],esi
  419528:	jle    0x4195a1
  41952a:	ins    DWORD PTR es:[edi],dx
  41952b:	and    BYTE PTR [ebp+esi*1+0x7],bh
  41952f:	data16 stos BYTE PTR es:[edi],al
  419531:	mov    ecx,DWORD PTR [ecx+eax*1+0x199cf1d3]
  419538:	ficomp WORD PTR [edx+edx*2]
  41953b:	mov    ch,0xd5
  41953d:	pusha  
  41953e:	and    eax,0x29a89606
  419543:	pop    ebp
  419544:	xor    ebx,esi
  419546:	mov    ?,WORD PTR [esi+ebp*8-0x41c69b62]
  41954d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954e:	cwde   
  41954f:	xor    ecx,DWORD PTR [esi]
  419551:	xchg   BYTE PTR [ecx],dh
  419553:	xor    DWORD PTR [eax],ecx
  419555:	and    DWORD PTR [edx+0x56],ecx
  419558:	lahf   
  419559:	jae    0x419518
  41955b:	xchg   ecx,eax
  41955c:	lock fs aaa 
  41955f:	push   ss
  419560:	test   DWORD PTR es:[edx+0x3a48197c],edi
  419567:	jge    0x4195e4
  419569:	out    0x9c,al
  41956b:	in     ax,dx
  41956d:	mov    bh,0x60
  41956f:	pop    ss
  419570:	jne    0x419591
  419572:	shl    BYTE PTR [esi+0x63],cl
  419575:	xchg   edi,eax
  419576:	scas   eax,DWORD PTR es:[edi]
  419577:	xchg   edi,eax
  419578:	ror    DWORD PTR [eax+0x14],cl
  41957b:	loop   0x4194fd
  41957d:	adc    DWORD PTR [edi+0x28],edi
  419580:	(bad)  
  419581:	repz out dx,eax
  419583:	adc    al,0x6c
  419585:	fadd   st,st(0)
  419587:	push   es
  419588:	(bad)  
  419589:	iret   
  41958a:	cmp    eax,0xf263de66
  41958f:	push   ds
  419590:	rcr    esi,cl
  419592:	sub    eax,0x94c50a3c
  419597:	ins    BYTE PTR es:[edi],dx
  419598:	ins    BYTE PTR es:[edi],dx
  419599:	pop    ecx
  41959a:	jle    0x41953e
  41959c:	xchg   ebp,eax
  41959d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41959e:	push   cs
  41959f:	dec    eax
  4195a0:	push   es
  4195a1:	ds pop edi
  4195a3:	sub    ebx,edx
  4195a5:	push   cs
  4195a6:	and    al,0xcd
  4195a8:	jns    0x4195a0
  4195aa:	jae    0x4195d6
  4195ac:	call   0x15d2:0x6e76fb66
  4195b3:	jns    0x419619
  4195b5:	pop    ds
  4195b6:	mov    bl,cl
  4195b8:	repnz sub ebp,DWORD PTR [esi-0x4e]
  4195bc:	jbe    0x41958e
  4195be:	mov    edx,0xe38fb665
  4195c3:	push   ds
  4195c4:	ret    
  4195c5:	cmp    cx,0x5de3
  4195ca:	repnz mov ch,0x3e
  4195cd:	in     eax,0x4a
  4195cf:	mov    bl,0x20
  4195d1:	imul   esi,DWORD PTR [ebp+0x73],0x3c
  4195d5:	inc    ebx
  4195d6:	inc    ebx
  4195d7:	test   cl,0x8b
  4195da:	push   ds
  4195db:	data16 loope 0x4195ea
  4195de:	xor    al,0xbb
  4195e0:	push   esp
  4195e1:	int3   
  4195e2:	(bad)  
  4195e3:	mov    edi,0xc76e86c
  4195e8:	push   cs
  4195e9:	test   esi,ebx
  4195eb:	adc    DWORD PTR [edi+eiz*2+0x51bb398c],edi
  4195f2:	int    0x6
  4195f4:	sbb    BYTE PTR ds:0xfef87d7b,ah
  4195fa:	sub    DWORD PTR [ebx+0x4a],edi
  4195fd:	loop   0x419674
  4195ff:	sti    
  419600:	jecxz  0x419622
  419602:	lahf   
  419603:	int3   
  419604:	mov    eax,0x3b66c596
  419609:	daa    
  41960a:	or     DWORD PTR [ebx],0xddcae1ea
  419610:	gs xchg ebx,eax
  419612:	rol    edi,0x8d
  419615:	cmp    DWORD PTR [ebp+0x53],eax
  419618:	jo     0x4195a3
  41961a:	cwde   
  41961b:	data16 out 0xb3,al
  41961e:	xchg   ecx,eax
  41961f:	dec    esp
  419620:	rcr    BYTE PTR [edi+ecx*4+0x1b],1
  419624:	gs jo  0x419611
  419627:	add    al,bl
  419629:	cli    
  41962a:	clc    
  41962b:	xor    al,0xb4
  41962d:	aaa    
  41962e:	jle    0x419696
  419630:	mov    ds:0xd01ecb72,al
  419635:	imul   ecx,DWORD PTR [edx+0x53e24205],0x2237035a
  41963f:	leave  
  419640:	xor    DWORD PTR [edi],ecx
  419642:	stos   BYTE PTR es:[edi],al
  419643:	data16 cmp BYTE PTR [ebx],dh
  419646:	cli    
  419647:	mov    ch,0xd1
  419649:	push   0xbd6b15e4
  41964e:	jo     0x419624
  419650:	sbb    DWORD PTR [ebp-0x28],esi
  419653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419654:	outs   dx,DWORD PTR ds:[esi]
  419655:	gs mov esi,0x625f6272
  41965b:	push   ecx
  41965c:	aas    
  41965d:	mov    bh,0xce
  41965f:	mov    esp,0x2ef8ffd3
  419664:	test   BYTE PTR [ebp+0x66b35f13],al
  41966a:	xor    bp,bx
  41966d:	jbe    0x4196a2
  41966f:	mov    ss,WORD PTR [ebp-0x2c4994e4]
  419675:	sar    BYTE PTR [edi-0x47],cl
  419678:	dec    edx
  419679:	xchg   ebx,eax
  41967a:	pop    edi
  41967b:	std    
  41967c:	adc    ah,BYTE PTR [ebp-0x77]
  41967f:	or     eax,0xa64d553
  419684:	adc    ecx,DWORD PTR [eax+0x1a]
  419687:	jo     0x419645
  419689:	mov    edx,0xe035926a
  41968e:	(bad)  
  41968f:	test   eax,0xd0750d43
  419694:	sbb    edi,ecx
  419696:	aaa    
  419697:	data16 xor BYTE PTR [ecx-0x4a],dl
  41969b:	add    dl,al
  41969d:	push   edx
  41969e:	loope  0x41964d
  4196a0:	fsub   DWORD PTR [ebx+0x7cab0c63]
  4196a6:	cmp    edx,esi
  4196a8:	clc    
  4196a9:	mov    ecx,0x906866f5
  4196ae:	xchg   ebp,eax
  4196af:	mov    al,0x1b
  4196b1:	and    BYTE PTR [ecx+ecx*4-0x7d9945d6],dh
  4196b8:	popa   
  4196b9:	jbe    0x419670
  4196bb:	xchg   ecx,eax
  4196bc:	mov    al,ds:0x5d425a66
  4196c1:	jp     0x4196f9
  4196c3:	das    
  4196c4:	lods   eax,DWORD PTR ds:[esi]
  4196c5:	imul   ebx,DWORD PTR [edx],0x7529ad5c
  4196cb:	outs   dx,DWORD PTR ds:[esi]
  4196cc:	mov    ds:0x5d13b496,al
  4196d1:	mov    eax,ds:0x85d566b1
  4196d6:	mov    ebx,0xeabeff54
  4196db:	or     ecx,ecx
  4196dd:	sti    
  4196de:	seto   BYTE PTR [ebx-0x67]
  4196e2:	jne    0x4196e7
  4196e4:	pop    esi
  4196e5:	idiv   BYTE PTR [ebx+esi*8+0x65021927]
  4196ec:	jb     0x4196e2
  4196ee:	inc    edi
  4196ef:	(bad)  
  4196f0:	shl    BYTE PTR [edi+0x44d385ed],cl
  4196f6:	push   ecx
  4196f7:	sbb    ah,BYTE PTR [edx]
  4196f9:	stos   DWORD PTR es:[edi],eax
  4196fa:	jge    0x4196a0
  4196fc:	lahf   
  4196fd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ff:	cdq    
  419700:	inc    eax
  419701:	das    
  419702:	or     al,0xb6
  419704:	call   0xc9da5573
  419709:	popa   
  41970a:	jns    0x4196d1
  41970c:	mov    ds:0xdafc750b,al
  419711:	aam    0x39
  419713:	dec    ebp
  419714:	jbe    0x419744
  419716:	push   ds
  419717:	popw   ss
  419719:	adc    eax,0x61d3eb69
  41971e:	test   DWORD PTR [esi],esp
  419720:	loope  0x4196c5
  419722:	push   esi
  419723:	aaa    
  419724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419725:	data16 in al,dx
  419727:	mov    edi,0xc123ae99
  41972c:	add    eax,0xb20d1c92
  419731:	mov    ah,0x75
  419733:	loopne 0x4196dc
  419735:	xor    al,BYTE PTR [edi+0x18]
  419738:	push   edx
  419739:	push   ebp
  41973a:	iret   
  41973b:	data16 aam 0xb0
  41973e:	inc    esp
  41973f:	adc    edx,ebx
  419741:	scas   al,BYTE PTR es:[edi]
  419742:	ret    0x59cf
  419745:	(bad)  
  419746:	scas   eax,DWORD PTR es:[edi]
  419747:	sbb    DWORD PTR [edi+0x73],eax
  41974a:	in     eax,dx
  41974b:	ins    BYTE PTR es:[edi],dx
  41974c:	adc    BYTE PTR [ebp+0x33],ah
  41974f:	sti    
  419750:	lea    edx,[edx+0x54]
  419753:	loope  0x419798
  419755:	sar    DWORD PTR [ecx+eiz*4+0x2e9aee73],cl
  41975c:	mov    eax,0x678f4bb5
  419762:	add    DWORD PTR [ecx],ebx
  419764:	jl     0x4196ee
  419766:	add    eax,0xa5aaae32
  41976b:	push   ss
  41976c:	rcr    DWORD PTR [eax-0x5819a4e2],cl
  419772:	loope  0x4197d6
  419774:	dec    ecx
  419775:	gs mov dl,0x7a
  419778:	mov    BYTE PTR [edi],bh
  41977a:	rol    BYTE PTR [ebx+0x323f2ae7],0x4c
  419781:	fdiv   QWORD PTR [ebp-0x6a]
  419784:	cld    
  419785:	mov    bl,0x77
  419787:	ja     0x41970d
  419789:	aad    0x4f
  41978b:	scas   ax,WORD PTR es:[edi]
  41978d:	xchg   ecx,eax
  41978e:	aaa    
  41978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419790:	rol    BYTE PTR [esi-0x78],1
  419793:	inc    ecx
  419794:	or     ch,ah
  419796:	dec    ebp
  419797:	clc    
  419798:	scas   eax,DWORD PTR es:[edi]
  419799:	fldcw  WORD PTR [esi+0x6cd41ab2]
  41979f:	nop
  4197a0:	jae    0x419780
  4197a2:	cmp    DWORD PTR [ecx+edi*4+0x7a],ebp
  4197a6:	cmp    esp,DWORD PTR [ebp-0x2f]
  4197a9:	call   0x8030d010
  4197ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197af:	mov    WORD PTR [eax],ss
  4197b1:	js     0x4197b0
  4197b3:	inc    esi
  4197b4:	in     eax,0x40
  4197b6:	inc    ebp
  4197b7:	nop
  4197b8:	mov    bl,0xf3
  4197ba:	xor    DWORD PTR [edx],ecx
  4197bc:	stos   BYTE PTR es:[edi],al
  4197bd:	add    DWORD PTR [esi+0x5d],ebp
  4197c0:	push   ebp
  4197c1:	push   esi
  4197c2:	jne    0x41975e
  4197c4:	gs mov al,0x78
  4197c7:	into   
  4197c8:	push   esi
  4197c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ca:	jmp    DWORD PTR [esi-0x2a]
  4197cd:	pop    ecx
  4197ce:	xchg   bl,ah
  4197d0:	shl    DWORD PTR [eax-0x79],cl
  4197d3:	push   cs
  4197d4:	in     al,dx
  4197d5:	xor    al,0xa6
  4197d7:	push   ds
  4197d8:	pop    edi
  4197d9:	ins    BYTE PTR es:[edi],dx
  4197da:	mov    dl,0xa9
  4197dd:	add    ecx,esp
  4197df:	sub    eax,0xb653671c
  4197e4:	fstp   QWORD PTR [ecx]
  4197e6:	push   ecx
  4197e7:	push   ebp
  4197e8:	xchg   al,al
  4197ea:	ins    BYTE PTR es:[edi],dx
  4197eb:	dec    edx
  4197ec:	stc    
  4197ed:	xor    ah,BYTE PTR fs:[esi-0x75]
  4197f1:	bound  esp,QWORD PTR [eax-0x3bdfd744]
  4197f7:	jle    0x4197bc
  4197f9:	aam    0x1
  4197fb:	out    0xd3,al
  4197fd:	dec    esp
  4197fe:	cli    
  4197ff:	pop    edx
  419800:	pop    ebp
  419801:	in     al,dx
  419802:	rol    BYTE PTR [esi-0x6f],cl
  419805:	call   0x1c48:0xe44a
  41980b:	mov    ebx,0x5656faef
  419810:	mov    edx,0x279c6bb4
  419815:	shl    DWORD PTR ss:[esi],cl
  419818:	jmp    0x419885
  41981a:	jge    0x4197c6
  41981c:	adc    BYTE PTR [ecx],cl
  41981e:	fstp   st(2)
  419820:	outs   dx,BYTE PTR ds:[esi]
  419821:	int3   
  419822:	adc    eax,0xacb6f403
  419827:	int    0xd3
  419829:	outs   dx,BYTE PTR ds:[esi]
  41982a:	push   cs
  41982b:	mov    ebp,0xc2b6f6f0
  419830:	pop    ebp
  419831:	jbe    0x419850
  419833:	data16 mov bl,0xa0
  419836:	call   0x6131:0x8793d355
  41983d:	js     0x4197e2
  41983f:	add    al,0x1e
  419841:	gs mov ebx,ebx
  419844:	cld    
  419845:	aam    0x40
  419847:	cli    
  419848:	iret   
  419849:	lahf   
  41984a:	sbb    bh,dl
  41984c:	ss retf 0x619b
  419850:	mov    esi,0x8019f554
  419855:	data16 and BYTE PTR [ebp-0x2c63ee63],bh
  41985c:	adc    BYTE PTR [eax+0x7fb472bd],dh
  419862:	outs   dx,BYTE PTR ds:[esi]
  419863:	push   ecx
  419864:	xchg   ebx,eax
  419865:	ror    edi,1
  419867:	out    0xd9,al
  419869:	push   eax
  41986a:	xchg   edx,eax
  41986b:	push   edx
  41986c:	lea    esp,[esi+0x5b]
  41986f:	pop    esp
  419870:	jecxz  0x419802
  419872:	in     al,0xa9
  419874:	shl    DWORD PTR [eax+0x2774a386],cl
  41987a:	sub    dl,cl
  41987c:	out    dx,al
  41987d:	gs jg  0x4198cb
  419880:	enter  0x16f6,0x9d
  419884:	or     eax,0x77dddbad
  419889:	jb     0x4198fd
  41988b:	adc    al,0x53
  41988d:	outs   dx,BYTE PTR ds:[esi]
  41988e:	mov    ecx,0x5065f8ba
  419893:	pcmpgtd mm3,QWORD PTR [esi]
  419896:	or     ebx,DWORD PTR fs:[edi-0x2cad56fb]
  41989d:	push   ecx
  41989e:	inc    ebp
  41989f:	scas   al,BYTE PTR es:[edi]
  4198a0:	in     al,dx
  4198a1:	or     eax,0x652fa315
  4198a6:	sbb    dh,BYTE PTR [ebx-0x48]
  4198a9:	sub    DWORD PTR [eax],ebx
  4198ab:	sbb    al,0x2a
  4198ad:	jge    0x419921
  4198af:	mov    dl,0x11
  4198b1:	in     eax,0xbf
  4198b3:	mov    gs,WORD PTR [eax+0x30]
  4198b6:	mov    al,0x2a
  4198b8:	shl    DWORD PTR [esi+0x2a],1
  4198bb:	mul    BYTE PTR [ebx]
  4198bd:	jmp    0x419856
  4198bf:	cmp    eax,0xecfb72ed
  4198c4:	mov    esp,DWORD PTR [edi+0x39]
  4198c7:	pop    ebp
  4198c8:	out    0xa,al
  4198ca:	xchg   ebx,eax
  4198cb:	aad    0x61
  4198cd:	gs popa 
  4198cf:	retf   
  4198d0:	and    DWORD PTR [eax],esi
  4198d2:	int3   
  4198d3:	adc    BYTE PTR [ebx+edx*2],0xbd
  4198d7:	data16 jp 0x41993e
  4198da:	cmc    
  4198db:	pop    esp
  4198dc:	out    dx,al
  4198dd:	xchg   ebp,eax
  4198de:	sbb    DWORD PTR [ecx+0xcaedd1],eax
  4198e4:	add    eax,ebx
  4198e6:	out    0x29,eax
  4198e8:	into   
  4198e9:	pop    ebp
  4198ea:	fisub  DWORD PTR [ecx-0x2c079946]
  4198f0:	jo     0x419959
  4198f2:	int    0x5e
  4198f4:	shr    bh,1
  4198f6:	xchg   edx,eax
  4198f7:	inc    edi
  4198f8:	pop    ebp
  4198f9:	test   cl,ah
  4198fb:	ret    0xf9f3
  4198fe:	stos   BYTE PTR es:[edi],al
  4198ff:	fldln2 
  419901:	(bad)  
  419902:	jge    0x41996a
  419904:	jp     0x419889
  419906:	std    
  419907:	and    ebx,ebp
  419909:	mov    cl,0x92
  41990b:	ins    BYTE PTR es:[edi],dx
  41990c:	ret    0x1f66
  41990f:	lods   al,BYTE PTR ds:[esi]
  419910:	test   eax,0x4fcce604
  419915:	or     DWORD PTR [eax-0x7d],edi
  419918:	pop    ss
  419919:	sub    BYTE PTR [eax],ch
  41991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991c:	lahf   
  41991d:	pop    ecx
  41991e:	sbb    DWORD PTR [ebx-0x2e8d7fe6],esi
  419924:	mov    bl,0x5e
  419926:	pop    ss
  419927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419928:	sub    esp,DWORD PTR [ebp-0x6a]
  41992b:	arpl   cx,di
  41992d:	dec    edx
  41992e:	ja     0x419976
  419930:	or     ah,BYTE PTR [esi]
  419932:	call   0x754f81d2
  419937:	aam    0x45
  419939:	pop    ecx
  41993a:	mov    ecx,0x58c958e9
  41993f:	data16 mov cl,BYTE PTR [eax]
  419942:	jno    0x4198d5
  419944:	sar    DWORD PTR [esi+0x4],cl
  419947:	in     eax,0xc2
  419949:	lds    ecx,FWORD PTR [esi-0x22]
  41994c:	popf   
  41994d:	data16 icebp 
  41994f:	in     eax,dx
  419950:	push   edi
  419951:	in     al,0xa9
  419953:	inc    ecx
  419954:	jne    0x41993d
  419956:	mov    al,ds:0x7705c3d5
  41995b:	dec    eax
  41995c:	jne    0x65ad138b
  419962:	cmp    DWORD PTR [ebp+0x7ee94c16],ebx
  419968:	mov    esp,0x455157ca
  41996d:	xor    DWORD PTR [ebp-0x6b],esi
  419970:	and    bh,BYTE PTR [ecx+0x1b]
  419973:	sub    DWORD PTR [ebx+0x53],edx
  419976:	jmp    0x4199de
  419978:	pop    ecx
  419979:	xor    DWORD PTR [eax],0xffffffed
  41997c:	(bad)  [ecx]
  41997e:	lock hlt 
  419980:	or     eax,0xf1de75c5
  419985:	enter  0xf7a1,0xbb
  419989:	or     di,WORD PTR [eax+0x0]
  41998d:	mov    ds:0x8bc7f472,al
  419992:	inc    edx
  419993:	stc    
  419994:	cwde   
  419995:	pop    edx
  419996:	jne    0x419960
  419998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419999:	mov    edx,0xfd2a9a0d
  41999e:	ss hlt 
  4199a0:	add    bh,BYTE PTR [edi]
  4199a2:	sub    eax,DWORD PTR [eax+0x665d8263]
  4199a8:	lea    edx,[ebx-0x56]
  4199ab:	shr    BYTE PTR [edx+0x378c751d],1
  4199b1:	mov    edi,?
  4199b3:	adc    BYTE PTR [edx-0x19],bh
  4199b6:	pop    ss
  4199b7:	mov    al,ds:0x16753099
  4199bc:	mov    ds:0xd02d7d0d,al
  4199c1:	xchg   esi,eax
  4199c2:	push   ecx
  4199c3:	mov    eax,0xde79a5e2
  4199c8:	repz inc esp
  4199ca:	and    ch,0xd5
  4199cd:	pusha  
  4199ce:	and    eax,0x13ea9166
  4199d3:	push   ebp
  4199d4:	fstp   DWORD PTR [eax-0x27]
  4199d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d8:	xchg   ebp,eax
  4199d9:	cwde   
  4199da:	jne    0x419a2e
  4199dc:	xlat   BYTE PTR ds:[ebx]
  4199dd:	sub    edx,DWORD PTR [edi+0x36c55190]
  4199e3:	xchg   sp,ax
  4199e5:	(bad)  
  4199e6:	cld    
  4199e7:	aam    0xee
  4199e9:	icebp  
  4199ea:	sbb    DWORD PTR [edi],ebp
  4199ec:	xchg   edi,eax
  4199ed:	popf   
  4199ee:	mov    BYTE PTR [ecx],ah
  4199f0:	(bad)  
  4199f1:	sbb    DWORD PTR [edi-0x1a],ebx
  4199f4:	fistp  QWORD PTR [edx+0x2]
  4199f7:	nop
  4199f8:	xor    edx,DWORD PTR [ebx-0x303c3381]
  4199fe:	mov    ebp,0x75ad3016
  419a03:	xchg   edx,eax
  419a04:	rcr    DWORD PTR [edi],1
  419a06:	pop    ss
  419a07:	sar    eax,0x2f
  419a0a:	(bad)  
  419a0b:	imul   edi,DWORD PTR [ebx-0xb],0x4a04d00a
  419a12:	lods   eax,DWORD PTR ds:[esi]
  419a13:	ficom  WORD PTR [si+0x76]
  419a17:	jp     0x4199a6
  419a19:	jbe    0x4199ac
  419a1b:	xchg   edx,eax
  419a1c:	mov    ecx,0x84af036d
  419a21:	lods   eax,DWORD PTR ds:[esi]
  419a22:	ins    DWORD PTR es:[edi],dx
  419a23:	rcr    eax,cl
  419a25:	cmp    BYTE PTR [ecx],0xe6
  419a28:	ror    DWORD PTR [edx-0x4e],cl
  419a2b:	mov    cl,0xf
  419a2d:	stos   DWORD PTR es:[edi],eax
  419a2e:	(bad)  
  419a30:	test   DWORD PTR [esi+0x5f],esp
  419a33:	gs in  al,dx
  419a35:	adc    dh,BYTE PTR ds:0xf08d579b
  419a3b:	dec    edx
  419a3c:	jecxz  0x4199d2
  419a3e:	imul   eax,DWORD PTR [eax],0x63
  419a41:	popa   
  419a42:	ins    BYTE PTR es:[edi],dx
  419a43:	mov    eax,ds:0xb20470d7
  419a48:	pop    edx
  419a49:	(bad)
  419a4c:	xor    ecx,DWORD PTR [ebx+0xe6ebfca]
  419a52:	(bad)  
  419a53:	sbb    bl,BYTE PTR [ebx+esi*1]
  419a56:	jb     0x419a2a
  419a58:	jb     0x419a55
  419a5a:	shl    DWORD PTR [ebp-0x7a],cl
  419a5d:	data16 mov BYTE PTR [edi+0x1ac30ff],ah
  419a64:	mov    ebp,0x940cde8a
  419a69:	lahf   
  419a6a:	push   0xffffffeb
  419a6c:	les    ebx,FWORD PTR [ebp+0x66dd6685]
  419a72:	mov    ebx,0x37637219
  419a77:	aad    0x31
  419a79:	add    BYTE PTR ds:0xe50fd330,ah
  419a7f:	mov    eax,ds:0xa4e3a525
  419a84:	adc    eax,0xfcb44265
  419a89:	popf   
  419a8a:	call   0x7ad25240
  419a8f:	out    0x99,al
  419a91:	in     al,0x75
  419a93:	push   cs
  419a94:	jp     0x419a60
  419a96:	or     eax,0xbf6cca8
  419a9b:	sbb    DWORD PTR [esi],0xffffffcf
  419a9e:	(bad)  
  419a9f:	and    eax,0x71d6896b
  419aa4:	shl    edx,cl
  419aa6:	push   ebp
  419aa7:	fiadd  DWORD PTR [esi-0x7049ed66]
  419aad:	xor    bh,0x1
  419ab0:	test   BYTE PTR [esi-0x60cc6f59],dh
  419ab6:	and    ecx,ebp
  419ab8:	bound  ecx,QWORD PTR [edi-0xf877d13]
  419abe:	je     0x419a94
  419ac0:	test   al,0xf9
  419ac2:	clc    
  419ac3:	repnz xchg ebx,eax
  419ac5:	xlat   BYTE PTR ds:[ebx]
  419ac6:	aam    0x48
  419ac8:	sti    
  419ac9:	jle    0x419b33
  419acb:	popa   
  419acc:	jb     0x419b45
  419ace:	pop    ecx
  419acf:	test   ebx,edx
  419ad1:	sbb    bl,cl
  419ad3:	retf   
  419ad4:	inc    ecx
  419ad5:	mov    ecx,DWORD PTR [edi-0x31]
  419ad8:	out    0x8b,eax
  419ada:	call   0x5d66:0x93e2be78
  419ae1:	push   0x9dd3a019
  419ae6:	cmp    al,0x45
  419ae8:	inc    ebx
  419ae9:	lock fild QWORD PTR [edi]
  419aec:	nop
  419aed:	inc    esp
  419aee:	ficomp DWORD PTR [bp+si-0x1b]
  419af2:	es je  0x419ad7
  419af5:	ret    
  419af6:	cdq    
  419af7:	mov    edx,0x62e85dd7
  419afc:	cmp    esp,DWORD PTR [esi+0x4377c193]
  419b02:	jne    0x419b04
  419b04:	call   0x775f:0xee353666
  419b0b:	out    0x19,al
  419b0d:	dec    BYTE PTR [ebx+0x61]
  419b10:	xchg   ebx,eax
  419b11:	mov    ds:0xc1df0975,eax
  419b16:	dec    edx
  419b17:	js     0x419b36
  419b19:	ins    DWORD PTR es:[edi],dx
  419b1a:	enter  0x1769,0xe6
  419b1e:	xchg   esp,eax
  419b1f:	fisttp DWORD PTR [ebx-0x57]
  419b22:	lahf   
  419b23:	push   esp
  419b24:	mul    DWORD PTR [esi]
  419b26:	ficomp WORD PTR [ebx+0x77]
  419b29:	and    eax,0xbeda1bf
  419b2e:	jne    0x419b06
  419b30:	outs   dx,BYTE PTR ds:[esi]
  419b31:	gs cs inc esp
  419b34:	enter  0xc9f0,0x97
  419b38:	sbb    BYTE PTR [esi],0xf8
  419b3b:	fld    QWORD PTR [esi]
  419b3d:	jmp    0xe54e1b7
  419b42:	inc    ebp
  419b43:	loope  0x419ad9
  419b45:	pop    ebx
  419b46:	mov    esi,0xaf8b8c66
  419b4b:	pop    edx
  419b4c:	ror    DWORD PTR [edx+ebp*8],cl
  419b4f:	inc    edx
  419b50:	arpl   WORD PTR [esi],bx
  419b52:	(bad)  
  419b53:	cs inc esi
  419b55:	ins    BYTE PTR es:[edi],dx
  419b56:	js     0x419b67
  419b58:	retf   
  419b59:	cmp    esp,ecx
  419b5b:	mov    ebx,0x86385b31
  419b60:	shl    DWORD PTR [ecx],cl
  419b62:	mov    ch,0xaf
  419b64:	pop    eax
  419b65:	or     DWORD PTR [eax+eax*1+0x67],edi
  419b69:	cmp    eax,0x890d7ca8
  419b6e:	and    eax,0xa0ee4f21
  419b73:	mov    ah,BYTE PTR gs:[esi-0x50dfad12]
  419b7a:	retf   0x9122
  419b7d:	inc    ecx
  419b7e:	jb     0x419b00
  419b80:	jae    0x419bbb
  419b82:	inc    edi
  419b83:	(bad)  
  419b84:	loopne 0x419be0
  419b86:	jb     0x419beb
  419b88:	test   dh,ah
  419b8a:	xor    eax,0x69d82551
  419b8f:	jmp    0x7768e95b
  419b94:	xchg   BYTE PTR [edi-0x6d9eec67],bh
  419b9a:	aas    
  419b9b:	nop
  419b9c:	lahf   
  419b9d:	pop    esp
  419b9e:	sbb    BYTE PTR [esi+0x3d245b2d],al
  419ba4:	push   0x9240149b
  419ba9:	xor    al,0x3
  419bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bac:	aas    
  419bad:	int    0x68
  419baf:	test   BYTE PTR [ebp-0x65c0459a],cl
  419bb5:	adc    eax,0x657b280f
  419bba:	mov    bl,al
  419bbc:	jmp    0xa68b:0xfd919e4c
  419bc3:	mov    ch,BYTE PTR [ebx]
  419bc5:	cmp    eax,0x75187076
  419bca:	jecxz  0x419b4f
  419bcc:	jl     0x419b93
  419bce:	xor    dh,BYTE PTR [ebp+ecx*8+0x16]
  419bd2:	cs dec edx
  419bd4:	push   esi
  419bd5:	outs   dx,BYTE PTR ds:[esi]
  419bd6:	aaa    
  419bd7:	cs ss (bad) 
  419bda:	dec    ebp
  419bdb:	xchg   BYTE PTR [edi],bh
  419bdd:	enter  0x4f75,0x58
  419be1:	push   ebp
  419be2:	pop    eax
  419be3:	pop    ebx
  419be4:	outs   dx,BYTE PTR ds:[esi]
  419be5:	add    al,0x62
  419be7:	fwait
  419be8:	scas   eax,DWORD PTR es:[edi]
  419be9:	sbb    esi,DWORD PTR [ebp+0x12]
  419bec:	add    al,0xf0
  419bee:	rcl    BYTE PTR [edi-0x19],cl
  419bf1:	mov    ebp,0xcc536d4d
  419bf6:	pushf  
  419bf7:	popa   
  419bf8:	fisub  WORD PTR [edi-0x60]
  419bfb:	adc    eax,0x33750292
  419c00:	fsub   QWORD PTR [edx+edi*4-0x61a2ae74]
  419c07:	data16 mov es,WORD PTR ds:0xe51788ae
  419c0e:	adc    eax,0xe7e57e07
  419c13:	and    esp,DWORD PTR [esp+edx*2-0x31]
  419c17:	fdiv   QWORD PTR [ecx+0x65]
  419c1a:	(bad)  
  419c1b:	hlt    
  419c1c:	mov    edi,0xc387efac
  419c21:	cmp    BYTE PTR [edi+0x33],bl
  419c24:	adc    eax,0xdefa6aab
  419c29:	jmp    0xeaf:0x90306503
  419c30:	sbb    esp,DWORD PTR [ebp+0x52]
  419c33:	jb     0x419c5f
  419c35:	rol    DWORD PTR [eax],1
  419c37:	loope  0x419cb7
  419c39:	mov    ebp,0x52d3d84c
  419c3e:	rcr    BYTE PTR [ebx+esi*4],0x71
  419c42:	mov    eax,ds:0x236542c4
  419c47:	xchg   ebp,eax
  419c48:	dec    ebx
  419c49:	(bad)  [ebx-0x43ba2503]
  419c4f:	scas   al,BYTE PTR es:[edi]
  419c50:	into   
  419c51:	ret    0xd474
  419c54:	jmp    0x9e285d
  419c59:	push   es
  419c5a:	mov    esp,DWORD PTR [esi-0x22]
  419c5d:	jg     0x419c72
  419c5f:	cmc    
  419c60:	rcr    DWORD PTR [ebx-0x1b],cl
  419c63:	push   ebx
  419c64:	fidiv  DWORD PTR [esi+edx*4]
  419c67:	sqrtps xmm4,XMMWORD PTR [ebp-0x46]
  419c6b:	pop    edi
  419c6c:	sbb    BYTE PTR [ebx+0x1f826ebe],ah
  419c72:	push   edx
  419c73:	pop    esp
  419c74:	shr    ebp,cl
  419c76:	dec    ecx
  419c77:	xor    ecx,eax
  419c79:	mov    edi,0x5a60a8ec
  419c7e:	push   0xffffff97
  419c80:	sbb    al,0x65
  419c82:	repnz adc al,0xf3
  419c85:	xchg   ebp,eax
  419c86:	sbb    esi,DWORD PTR [esi-0x6f1c3405]
  419c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c8d:	xchg   esp,eax
  419c8e:	mov    ds:0x768d3743,al
  419c93:	cmp    cl,0x66
  419c96:	jno    0x419c40
  419c98:	push   ebx
  419c99:	in     eax,dx
  419c9a:	sub    BYTE PTR [edi+0x5d],bl
  419c9d:	push   es
  419c9e:	(bad)
  419ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca4:	scas   eax,DWORD PTR es:[edi]
  419ca5:	lds    edx,FWORD PTR [esi-0xb6caa15]
  419cab:	pushw  ds
  419cad:	or     BYTE PTR [ebx+0x772dd3f3],0x8c
  419cb4:	sti    
  419cb5:	push   edx
  419cb6:	cmp    eax,0x1966a047
  419cbb:	imul   bl
  419cbd:	mov    al,BYTE PTR [esi]
  419cbf:	push   0xd9710c76
  419cc4:	pop    edx
  419cc5:	cs push ebp
  419cc7:	in     eax,0x3c
  419cc9:	out    0xbe,al
  419ccb:	enter  0xf3de,0x9c
  419ccf:	or     al,0xdb
  419cd1:	xor    eax,0xe98b996d
  419cd6:	stc    
  419cd7:	data16 ins BYTE PTR es:[edi],dx
  419cd9:	sbb    al,0x5e
  419cdb:	or     DWORD PTR [ecx-0x72],eax
  419cde:	call   0x760d327b
  419ce3:	xchg   esi,eax
  419ce4:	stos   DWORD PTR es:[edi],eax
  419ce5:	bound  esi,QWORD PTR [ecx]
  419ce7:	pop    eax
  419ce8:	iret   
  419ce9:	and    DWORD PTR [edx-0x44],ebp
  419cec:	cli    
  419ced:	xchg   edx,eax
  419cee:	mov    ecx,0xeb03aa2f
  419cf3:	push   dx
  419cf5:	ins    DWORD PTR es:[edi],dx
  419cf6:	add    ah,bl
  419cf8:	mov    dl,BYTE PTR ds:0x44d8bb74
  419cfe:	dec    ebx
  419cff:	push   ecx
  419d00:	fsub   QWORD PTR [esi+0x5d]
  419d03:	dec    ebp
  419d04:	or     edx,DWORD PTR [ebx+0x1fb6d599]
  419d0a:	js     0x419d49
  419d0c:	push   0x4b1c75e1
  419d11:	popf   
  419d12:	stos   DWORD PTR es:[edi],eax
  419d13:	shl    DWORD PTR [ebp+0x41],cl
  419d16:	mov    eax,0xfb627566
  419d1b:	not    eax
  419d1d:	jns    0x419d8d
  419d1f:	xor    cl,BYTE PTR [ebx]
  419d21:	mov    dh,BYTE PTR [esi-0x658ba9c]
  419d27:	int3   
  419d28:	dec    esi
  419d29:	add    ebp,edx
  419d2b:	mov    dh,0x29
  419d2d:	adc    esp,ebp
  419d2f:	mov    esi,esp
  419d31:	and    BYTE PTR [edx+0x64],dh
  419d34:	add    DWORD PTR [ebp-0x6dfbb480],ecx
  419d3a:	pop    ds
  419d3b:	inc    esi
  419d3c:	es loope 0x419d9d
  419d3f:	data16 clc 
  419d41:	loopne 0x419d00
  419d43:	loope  0x419d27
  419d45:	and    eax,0x6246132f
  419d4a:	dec    eax
  419d4b:	inc    esp
  419d4c:	xchg   ebx,eax
  419d4d:	cmp    eax,0x6b312303
  419d52:	ss jns 0x419d98
  419d55:	dec    eax
  419d56:	cmp    DWORD PTR [ecx],ebp
  419d58:	mov    DWORD PTR [ebp-0x52c716b],eax
  419d5e:	or     al,BYTE PTR [esi+0x46b289e6]
  419d64:	test   DWORD PTR ds:0xcc439f1a,esi
  419d6a:	sbb    esi,DWORD PTR [esi+0x6]
  419d6d:	xchg   DWORD PTR [ebp-0x56],esi
  419d70:	adc    ebx,DWORD PTR [ebp+0x42]
  419d73:	jmp    0x66786507
  419d78:	cmp    al,BYTE PTR fs:[edi+0x41]
  419d7c:	rcl    DWORD PTR [ecx],cl
  419d7e:	das    
  419d7f:	(bad)  
  419d80:	pop    esi
  419d81:	xchg   ebx,eax
  419d82:	out    0x85,eax
  419d84:	pop    ecx
  419d85:	popa   
  419d86:	ins    DWORD PTR es:[edi],dx
  419d87:	jp     0x419d7f
  419d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8a:	cmp    ebp,DWORD PTR [esi-0x19e2d7d2]
  419d90:	ror    DWORD PTR [eax-0x28e863fc],cl
  419d96:	ficomp DWORD PTR [edx]
  419d98:	push   ss
  419d99:	cmp    BYTE PTR [edi+0x45],al
  419d9c:	push   ebx
  419d9d:	sti    
  419d9e:	or     ch,ch
  419da0:	or     eax,0x19d48f9d
  419da5:	ins    BYTE PTR es:[edi],dx
  419da6:	and    eax,0xde37a642
  419dab:	out    0x65,al
  419dad:	imul   esi,DWORD PTR [esi],0xffffffa0
  419db0:	fist   DWORD PTR [edx-0x5e0a9933]
  419db6:	mov    ebp,0x9156278f
  419dbb:	xor    eax,0x66aab6ca
  419dc0:	adc    ebp,DWORD PTR [ebx+edi*2+0x3d6d9939]
  419dc7:	clc    
  419dc8:	dec    esp
  419dc9:	ds jle 0x419e2b
  419dcc:	dec    esi
  419dcd:	popa   
  419dce:	adc    DWORD PTR [esi+0x19e02dd3],edx
  419dd4:	or     esi,esi
  419dd6:	repnz int3 
  419dd8:	jmp    0xc6bde348
  419ddd:	es mov edi,0x527dcfad
  419de3:	mov    dh,0xa8
  419de5:	xor    ch,BYTE PTR [edx+0x5908d306]
  419deb:	sti    
  419dec:	dec    edi
  419ded:	ja     0x419daa
  419def:	lds    edx,FWORD PTR [esi+eiz*2+0x4dc908e8]
  419df6:	and    ebp,DWORD PTR [ebx+0x2a]
  419df9:	into   
  419dfa:	jl     0x419de8
  419dfc:	sbb    ebp,DWORD PTR [ebp+0x75]
  419dff:	add    edi,ebx
  419e01:	fmul   QWORD PTR ds:0xa8f41c6
  419e07:	push   sp
  419e09:	in     al,0xcd
  419e0b:	mov    bh,bl
  419e0d:	test   eax,0x66adcfe3
  419e12:	mov    esp,0x984d2e62
  419e17:	sub    al,0x50
  419e19:	gs retf 0xe6c7
  419e1d:	mov    ebx,0xe520b153
  419e22:	adc    al,0x7a
  419e24:	xor    eax,0x4e7e62d4
  419e29:	pop    edx
  419e2a:	jne    0x419dc4
  419e2c:	cmp    eax,0xadb3365
  419e31:	and    bl,bh
  419e33:	inc    ebp
  419e34:	(bad)  
  419e35:	or     eax,0x9ed394b8
  419e3a:	stc    
  419e3b:	push   es
  419e3c:	xlat   BYTE PTR ds:[ebx]
  419e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e3e:	pop    ebx
  419e3f:	clc    
  419e40:	gs gs push ebp
  419e43:	dec    ebx
  419e44:	std    
  419e45:	cld    
  419e46:	loope  0x419e53
  419e48:	ja     0x419de2
  419e4a:	cmp    al,0x54
  419e4c:	mov    ebx,0xde1c75a8
  419e51:	inc    edi
  419e52:	sti    
  419e53:	push   ebx
  419e54:	add    dl,BYTE PTR [edx]
  419e56:	push   ebx
  419e57:	gs sahf 
  419e59:	test   eax,0x129a6a47
  419e5e:	push   ebp
  419e5f:	(bad)  
  419e60:	jp     0x419df4
  419e62:	jne    0x419ed3
  419e64:	pop    es
  419e65:	xlat   BYTE PTR ds:[ebx]
  419e66:	test   al,0xfc
  419e68:	imul   ebx,DWORD PTR [ebp-0x5c],0x66
  419e6c:	xor    eax,0xd31d573f
  419e71:	(bad)  
  419e72:	lods   eax,DWORD PTR ds:[esi]
  419e73:	mov    dh,0x33
  419e75:	idiv   DWORD PTR [edi-0x77]
  419e78:	mov    al,0x66
  419e7a:	les    ecx,FWORD PTR [edi]
  419e7c:	sub    eax,0xfb828fa8
  419e82:	jb     0x419ecb
  419e84:	(bad)  
  419e86:	(bad)  
  419e87:	jp     0x419e5b
  419e89:	ret    
  419e8a:	jne    0x419ec7
  419e8c:	mov    esp,0xe1fef7af
  419e91:	(bad)  
  419e92:	(bad)  
  419e93:	data16 aam 0x77
  419e96:	dec    ecx
  419e97:	and    al,0x9b
  419e99:	loopne 0x419eef
  419e9b:	mov    ch,0xbd
  419e9d:	or     esi,DWORD PTR [ebp-0x31]
  419ea0:	cli    
  419ea1:	sbb    eax,0x9a5a5681
  419ea6:	fldenv [ebp+eax*8+0x78]
  419eaa:	add    eax,0x55ddd348
  419eaf:	gs push ebp
  419eb1:	jecxz  0x419f23
  419eb3:	xor    bh,bh
  419eb5:	leave  
  419eb6:	or     DWORD PTR [eax+0x1e],edx
  419eb9:	jmp    0xacb9051d
  419ebe:	xchg   ecx,eax
  419ebf:	in     al,dx
  419ec0:	jle    0x419ee6
  419ec2:	sahf   
  419ec3:	call   0xced4:0x154f09f2
  419eca:	jo     0x419eed
  419ecc:	cmp    eax,eax
  419ece:	xchg   ebx,eax
  419ecf:	inc    ebx
  419ed0:	jb     0x419ee1
  419ed2:	jne    0x419e63
  419ed4:	jbe    0x419f11
  419ed6:	xchg   DWORD PTR [edi+0x662d2192],ebx
  419edc:	pop    edi
  419edd:	push   esi
  419ede:	mov    ebp,0xf7474065
  419ee3:	arpl   WORD PTR [esi+0x5603a56c],dx
  419ee9:	(bad)  
  419eea:	cdq    
  419eeb:	mov    ecx,0x426e655b
  419ef0:	arpl   WORD PTR [edx],di
  419ef2:	mov    bh,0x77
  419ef4:	nop
  419ef5:	jo     0x419ec8
  419ef7:	cmp    cx,WORD PTR [ebp-0x52]
  419efb:	aad    0xd3
  419efd:	dec    esi
  419efe:	nop
  419eff:	mov    al,0x95
  419f01:	in     al,0x98
  419f03:	cdq    
  419f04:	outs   dx,BYTE PTR ds:[esi]
  419f05:	mov    gs:0x51a29a72,al
  419f0b:	mov    esp,0xdbe718c0
  419f10:	out    0x20,al
  419f12:	jne    0x419f01
  419f14:	inc    ecx
  419f15:	sub    ch,BYTE PTR [edx+0x38e13a61]
  419f1b:	fs adc cl,bl
  419f1e:	add    dh,0x45
  419f21:	sbb    ecx,ebp
  419f23:	jbe    0x419ed9
  419f25:	fdiv   QWORD PTR [ebp+0x77]
  419f28:	xchg   esi,eax
  419f29:	sbb    ebp,DWORD PTR [edx-0x25]
  419f2c:	pop    edx
  419f2d:	popa   
  419f2e:	popa   
  419f2f:	sub    BYTE PTR [esi-0x65],0x85
  419f33:	jmp    0x6821e78
  419f38:	in     eax,0x42
  419f3a:	cmp    eax,0x914e4698
  419f3f:	dec    esi
  419f40:	outs   dx,BYTE PTR ds:[esi]
  419f41:	scas   al,BYTE PTR es:[edi]
  419f42:	pop    edi
  419f43:	out    0xb2,al
  419f45:	cmp    BYTE PTR [eax+0x1692eec5],ah
  419f4b:	or     BYTE PTR [edx],al
  419f4d:	lods   al,BYTE PTR ds:[esi]
  419f4e:	mov    ch,dh
  419f50:	push   edx
  419f51:	mov    dl,0x4d
  419f53:	mov    ds:0xbf75b490,al
  419f58:	mov    al,0x29
  419f5a:	xor    al,bl
  419f5c:	jge    0x419f6d
  419f5e:	and    BYTE PTR [esp+ecx*2-0x206c95d3],dl
  419f65:	test   eax,0x496b8914
  419f6a:	and    al,0x26
  419f6c:	xor    DWORD PTR [ebx],ebx
  419f6e:	jne    0x419fec
  419f70:	sbb    al,0x7e
  419f72:	out    0x78,eax
  419f74:	lds    esi,FWORD PTR [ecx-0x1e]
  419f77:	mov    edi,DWORD PTR gs:[ecx]
  419f7a:	jbe    0x419f30
  419f7c:	test   DWORD PTR [ebx],eax
  419f7e:	push   ebp
  419f7f:	add    dl,BYTE PTR [ebx-0x57]
  419f82:	jne    0x419f23
  419f84:	add    BYTE PTR [ecx-0x2c],dl
  419f87:	mov    edx,0xfac76dc2
  419f8c:	push   esp
  419f8d:	adc    DWORD PTR [esi+0x499d75b9],0x2426c756
  419f97:	sub    edi,edi
  419f99:	jle    0x41a010
  419f9b:	or     edx,DWORD PTR [edi]
  419f9d:	dec    ecx
  419f9f:	inc    ecx
  419fa0:	dec    ebp
  419fa1:	sbb    al,0xfa
  419fa3:	pushw  es
  419fa5:	and    DWORD PTR [esi-0x53dc115d],esp
  419fab:	push   ds
  419fac:	jle    0x41a00a
  419fae:	popa   
  419faf:	push   0x2693b1ad
  419fb4:	ret    
  419fb5:	mov    ch,0x40
  419fb7:	imul   esi,DWORD PTR [ebp-0x6b],0x6111a79b
  419fbe:	inc    ecx
  419fbf:	outs   dx,DWORD PTR ds:[esi]
  419fc0:	and    ah,BYTE PTR [edx+0x2f414175]
  419fc6:	xor    al,0xb4
  419fc8:	dec    edx
  419fc9:	pusha  
  419fca:	mov    WORD PTR [edx+0x69],cs
  419fcd:	jle    0x41a03f
  419fcf:	sub    ecx,ebx
  419fd1:	enter  0xb5d9,0xd3
  419fd5:	sbb    bl,BYTE PTR [ebx+esi*1-0x5dfa4fa8]
  419fdc:	push   es
  419fdd:	div    BYTE PTR gs:[edi+0x3151c197]
  419fe4:	aas    
  419fe5:	and    al,0x82
  419fe7:	repz mov ecx,0x8d577550
  419fed:	cli    
  419fee:	cmp    eax,0x527992f7
  419ff3:	gs jmp 0x1ae6:0x9ef5573d
  419ffb:	pop    edx
  419ffc:	js     0x41a067
  419ffe:	(bad)  
  419fff:	retf   
  41a000:	enter  0x75e7,0x8e
  41a004:	std    
  41a005:	adc    BYTE PTR [eax],bh
  41a007:	jecxz  0x41a04f
  41a009:	sar    esi,0x66
  41a00c:	lods   al,BYTE PTR ds:[esi]
  41a00d:	inc    ebp
  41a00e:	fiadd  DWORD PTR [edx+0x17]
  41a011:	addr16 loop 0x419ff3
  41a014:	jg     0x419fd0
  41a016:	jbe    0x41a080
  41a018:	mov    ch,0xe6
  41a01a:	stos   DWORD PTR es:[edi],eax
  41a01b:	add    bh,BYTE PTR [edi+0x1bd21479]
  41a021:	icebp  
  41a022:	inc    eax
  41a023:	push   cx
  41a025:	cmp    esp,DWORD PTR [edx-0x16]
  41a028:	ror    DWORD PTR [eax],cl
  41a02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a02b:	arpl   dx,sp
  41a02d:	and    DWORD PTR [edi-0x299ac337],eax
  41a033:	imul   BYTE PTR [esi+0x7840454f]
  41a039:	adc    ebp,DWORD PTR [ebp-0x63]
  41a03c:	adc    DWORD PTR [ebx],esi
  41a03e:	jne    0x41a03e
  41a040:	lods   eax,DWORD PTR ds:[esi]
  41a041:	push   0xd23b0292
  41a046:	test   BYTE PTR [esi+0x6d],ah
  41a049:	jmp    0x41a009
  41a04b:	ins    DWORD PTR es:[edi],dx
  41a04c:	shr    DWORD PTR [edi-0x2771078c],cl
  41a052:	sub    BYTE PTR [eax+0x2b4ade96],bh
  41a058:	xor    DWORD PTR [edi+ebx*2],ebx
  41a05b:	retw   0x649e
  41a05f:	outs   dx,DWORD PTR ds:[esi]
  41a060:	sar    DWORD PTR [esi],cl
  41a062:	call   0xdf01:0x2387574e
  41a069:	xor    al,0xd9
  41a06b:	aaa    
  41a06c:	pop    edx
  41a06d:	popa   
  41a06e:	call   0x46c8728f
  41a073:	shl    ebp,0xe4
  41a076:	aas    
  41a077:	cmp    ah,ch
  41a079:	add    eax,0x5e9596f4
  41a07e:	das    
  41a07f:	jmp    0x41a073
  41a081:	gs adc al,0xe1
  41a084:	xchg   edx,eax
  41a085:	(bad)  
  41a086:	arpl   WORD PTR [eax+edi*4+0x2f],cx
  41a08a:	retf   
  41a08b:	jae    0x41a0b9
  41a08d:	lods   eax,DWORD PTR ds:[esi]
  41a08e:	jne    0x41a084
  41a090:	jbe    0x41a098
  41a092:	mov    eax,ds:0xa6ffd96a
  41a097:	data16 in al,0x67
  41a09a:	out    0x1b,eax
  41a09c:	rcl    DWORD PTR [esi-0x64],cl
  41a09f:	repz cmp ebp,DWORD PTR [ecx-0x2a]
  41a0a3:	jmp    0x2881:0x27136668
  41a0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ab:	int3   
  41a0ac:	or     BYTE PTR [ecx+0x36d34290],bl
  41a0b2:	out    dx,eax
  41a0b3:	cld    
  41a0b4:	cmp    DWORD PTR [edx],edx
  41a0b6:	cli    
  41a0b7:	(bad)  
  41a0b8:	sub    bl,BYTE PTR [esi+eax*4-0x39]
  41a0bc:	push   es
  41a0bd:	addr16 aad 0xd4
  41a0c0:	scas   eax,DWORD PTR es:[edi]
  41a0c1:	push   ebp
  41a0c2:	fidivr WORD PTR [edi+0xe]
  41a0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c6:	aam    0x63
  41a0c8:	pop    ebp
  41a0c9:	pop    edx
  41a0ca:	repz mov bh,0x61
  41a0cd:	imul   esi,DWORD PTR [ebp-0x72],0xfffffff5
  41a0d1:	push   esi
  41a0d2:	gs sub eax,0x66db6eae
  41a0d8:	jmp    edx
  41a0da:	pushf  
  41a0db:	stos   DWORD PTR es:[edi],eax
  41a0dc:	sbb    BYTE PTR [edi-0x3c],dh
  41a0df:	cmp    DWORD PTR [esi-0x1c],esi
  41a0e2:	mov    BYTE PTR [esi-0x47],ah
  41a0e5:	push   cs
  41a0e6:	push   es
  41a0e7:	in     eax,dx
  41a0e8:	call   0xaba7ab45
  41a0ed:	es retf 0xd3c3
  41a0f1:	add    al,0x4c
  41a0f3:	cmp    eax,0xd2c86ca9
  41a0f8:	pop    eax
  41a0f9:	data16 sbb al,0x14
  41a0fc:	dec    eax
  41a0fd:	into   
  41a0fe:	inc    esp
  41a0ff:	fidivr DWORD PTR [edx]
  41a101:	add    eax,0x4bd35c90
  41a106:	mov    edx,eax
  41a108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a109:	cmc    
  41a10a:	mov    al,BYTE PTR [esi-0x1403c1c4]
  41a110:	push   eax
  41a111:	aam    0x36
  41a113:	jb     0x41a0bb
  41a115:	and    BYTE PTR [esi-0x77baccf8],0x47
  41a11c:	sar    DWORD PTR [eax-0x50],1
  41a11f:	dec    edi
  41a120:	ficomp WORD PTR [edi]
  41a122:	jmp    0x80c1688b
  41a127:	in     al,0xb9
  41a129:	data16 ds jbe 0x41a167
  41a12d:	push   eax
  41a12e:	xor    eax,0x2f6bd134
  41a133:	adc    DWORD PTR ds:0x47007543,eax
  41a139:	mov    edx,0x45e36230
  41a13e:	cwde   
  41a13f:	data16 sbb al,0xc3
  41a142:	out    0xeb,eax
  41a144:	rcl    ebp,cl
  41a146:	in     al,dx
  41a147:	call   0x2e8baf02
  41a14c:	push   eax
  41a14d:	cld    
  41a14e:	iret   
  41a14f:	mov    bh,0xfb
  41a151:	cld    
  41a152:	fwait
  41a153:	xor    WORD PTR [ecx],si
  41a156:	mov    eax,0xca97e584
  41a15b:	jb     0x41a1d7
  41a15d:	add    eax,0xaeb1e9be
  41a162:	sbb    DWORD PTR [eax],edi
  41a164:	out    0xb2,eax
  41a166:	jo     0x41a10b
  41a168:	fiadd  DWORD PTR [edx]
  41a16a:	icebp  
  41a16b:	je     0x41a1b7
  41a16d:	or     DWORD PTR [esi+eiz*8],esp
  41a170:	shr    ebx,cl
  41a172:	aas    
  41a173:	xor    eax,0x124fca6b
  41a178:	xor    BYTE PTR [esi+0x1a],ah
  41a17b:	pushf  
  41a17c:	test   al,0xa2
  41a17e:	gs (bad) 
  41a180:	and    DWORD PTR [ebp+0x73],esi
  41a183:	mov    bl,0xdd
  41a185:	sti    
  41a186:	mov    al,0xc9
  41a188:	xchg   esi,eax
  41a189:	test   BYTE PTR [ecx+ecx*2-0x79],dh
  41a18d:	or     al,0x3b
  41a18f:	dec    edi
  41a190:	push   0x65
  41a192:	aad    0x42
  41a194:	and    BYTE PTR [ebx],ah
  41a196:	and    al,0x73
  41a198:	inc    esi
  41a199:	mov    ah,0x7c
  41a19b:	push   0x8c76948b
  41a1a0:	jmp    0x6465:0xe21fe885
  41a1a7:	pop    esp
  41a1a8:	nop
  41a1a9:	mov    cl,0xfc
  41a1ab:	mov    ebp,?
  41a1ad:	dec    ecx
  41a1ae:	inc    BYTE PTR [edi+ebx*2-0x2c410228]
  41a1b5:	push   ebp
  41a1b6:	sbb    eax,0x4de0ecb9
  41a1bb:	fstp   QWORD PTR [esi]
  41a1bd:	gs sub ebp,0xffffffeb
  41a1c1:	arpl   WORD PTR [ebx+eiz*8],di
  41a1c4:	leave  
  41a1c5:	sbb    al,0xe
  41a1c7:	mov    edi,0xfb75c5bb
  41a1cc:	aas    
  41a1cd:	outs   dx,BYTE PTR ds:[esi]
  41a1ce:	ss lock aaa 
  41a1d1:	in     al,dx
  41a1d2:	(bad)  
  41a1d3:	data16 imul BYTE PTR [ebx]
  41a1d6:	paddd  mm2,QWORD PTR [edi+0x56]
  41a1da:	cdq    
  41a1db:	or     eax,0x10759175
  41a1e0:	push   eax
  41a1e1:	push   ss
  41a1e2:	shr    DWORD PTR [ecx+ecx*8],cl
  41a1e5:	(bad)  
  41a1e6:	lea    esi,[esi-0x3d944946]
  41a1ec:	adc    al,0x72
  41a1ee:	jne    0x41a1c8
  41a1f0:	mov    ds:0x9223f127,eax
  41a1f5:	int    0xe7
  41a1f7:	data16 test BYTE PTR [edx+0x54],ch
  41a1fb:	xor    BYTE PTR [edi],ah
  41a1fd:	repz push edx
  41a1ff:	ja     0x41a1d4
  41a201:	inc    eax
  41a202:	test   eax,0x41bfd5fc
  41a207:	nop
  41a208:	int3   
  41a209:	inc    di
  41a20b:	jnp    0x41a1b5
  41a20d:	mov    esp,0x63eee4a5
  41a212:	and    eax,0x7427f7f5
  41a217:	fisttp DWORD PTR [esi]
  41a219:	mov    ecx,DWORD PTR [eax+0x55656e07]
  41a21f:	dec    ecx
  41a220:	rcr    DWORD PTR [eax+ebx*2-0x586cd666],1
  41a227:	mov    cl,0x96
  41a229:	mov    si,0x91c5
  41a22d:	std    
  41a22e:	adc    ebp,DWORD PTR [ebp-0x77]
  41a231:	data16 fstp TBYTE PTR [ebx+0x6089a0d7]
  41a238:	mov    ds:0x7d5cbf7e,al
  41a23d:	mov    ?,WORD PTR [ebp+0x21]
  41a240:	scas   al,BYTE PTR es:[edi]
  41a241:	repnz or BYTE PTR [edi-0x3a],dh
  41a245:	inc    ecx
  41a246:	pop    ebx
  41a247:	mov    ds:0xf2f4d75e,eax
  41a24c:	or     ecx,DWORD PTR [ecx-0x602c9df7]
  41a252:	cmp    eax,0xffbc54d8
  41a257:	or     esi,0x93602161
  41a25d:	adc    dl,BYTE PTR [edx+eiz*4+0x6b]
  41a261:	sub    al,BYTE PTR [edx+0x3f]
  41a264:	rcr    DWORD PTR [edx+0x79],cl
  41a267:	sub    eax,ecx
  41a269:	jmp    0x41a220
  41a26b:	std    
  41a26c:	test   BYTE PTR [edx-0x71],bl
  41a26f:	out    dx,eax
  41a270:	in     al,dx
  41a271:	sub    edx,DWORD PTR ds:0x43d9b327
  41a277:	push   esi
  41a278:	into   
  41a279:	loop   0x41a26d
  41a27b:	cli    
  41a27c:	std    
  41a27d:	imul   ebp,DWORD PTR [ebx+0x24],0xc6bfa322
  41a284:	imul   esp,DWORD PTR [ebp+0x49],0xd
  41a288:	test   DWORD PTR [esi+0x6e47a1c4],edx
  41a28e:	mov    ch,BYTE PTR ds:0x8e5773d0
  41a294:	push   esp
  41a295:	dec    ebp
  41a297:	pop    ds
  41a298:	add    ebp,ebx
  41a29a:	loopne 0x41a294
  41a29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a29d:	and    di,dx
  41a2a0:	or     eax,0x5f9b19df
  41a2a5:	lea    esp,[edi]
  41a2a7:	sti    
  41a2a8:	inc    edx
  41a2a9:	popf   
  41a2aa:	jb     0x41a2a4
  41a2ac:	mov    ds:0xd5561081,eax
  41a2b1:	inc    esp
  41a2b2:	add    dh,al
  41a2b4:	mov    cl,ah
  41a2b6:	scas   al,BYTE PTR es:[edi]
  41a2b7:	mov    al,ds:0x1403dbf5
  41a2bc:	push   eax
  41a2bd:	push   ebx
  41a2be:	outs   dx,DWORD PTR ds:[esi]
  41a2bf:	std    
  41a2c0:	ror    DWORD PTR [edx],cl
  41a2c2:	pop    ss
  41a2c3:	xor    DWORD PTR [ebp+0x0],eax
  41a2c6:	mov    ecx,0x7659db85
  41a2cb:	popa   
  41a2cc:	shl    dh,1
  41a2ce:	aad    0x8e
  41a2d0:	sar    DWORD PTR [ebp-0x74],cl
  41a2d3:	sbb    ecx,DWORD PTR [edx+esi*8+0x66a15fef]
  41a2da:	xor    al,BYTE PTR [ecx-0x1c]
  41a2dd:	in     al,dx
  41a2de:	retf   0x7a8a
  41a2e1:	fst    DWORD PTR [ecx+0x17]
  41a2e4:	das    
  41a2e5:	call   0x1376:0x588bca63
  41a2ec:	rep lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ef:	push   cs
  41a2f0:	sub    DWORD PTR [ebp+0x56b3697e],edx
  41a2f6:	enter  0xf2f9,0x8a
  41a2fa:	fild   DWORD PTR [eax-0x4]
  41a2fd:	add    dh,BYTE PTR [ebp+0x1]
  41a300:	call   DWORD PTR [ebx+eiz*4+0x28]
  41a304:	sub    ecx,DWORD PTR [ecx-0x65]
  41a307:	pop    dx
  41a309:	mov    eax,0x47d3ea4d
  41a30e:	and    DWORD PTR [ecx+0x39419849],ebp
  41a314:	sbb    esp,DWORD PTR [ebp+0x71]
  41a317:	stc    
  41a318:	mov    DWORD PTR [eax],ebx
  41a31a:	out    0x9f,al
  41a31c:	mov    ds:0xf6a59f54,al
  41a321:	inc    ebx
  41a322:	je     0x41a31b
  41a324:	ja     0x41a32f
  41a326:	jmp    0x8b3d:0x2d65f733
  41a32d:	xchg   DWORD PTR [ebx+0x7d],esi
  41a330:	or     bl,BYTE PTR [edx-0x1f1918bd]
  41a336:	call   0xb9c2:0x75066613
  41a33d:	std    
  41a33e:	sub    dh,BYTE PTR [edx+eax*8+0x79bdbcdf]
  41a345:	cmp    BYTE PTR [ebp+0x65],dh
  41a348:	add    dl,BYTE PTR [edi]
  41a34a:	dec    edi
  41a34b:	xor    eax,0x7f99d0cd
  41a350:	cmc    
  41a351:	retf   0x9bf5
  41a354:	in     al,dx
  41a355:	gs pop ebx
  41a357:	(bad)  
  41a358:	fidiv  WORD PTR [ebx-0x2d]
  41a35b:	cld    
  41a35c:	es jle 0x41a30a
  41a35f:	push   edi
  41a360:	xchg   ecx,eax
  41a361:	sub    esi,DWORD PTR [edx+esi*4+0x74]
  41a365:	fisttp DWORD PTR [edi+0x1]
  41a368:	pushf  
  41a369:	addr16 pop ebp
  41a36b:	sbb    BYTE PTR [eax],dh
  41a36d:	(bad)  [ebx+eiz*1+0x73d58168]
  41a374:	sar    DWORD PTR [ebp+eiz*1+0x4f],cl
  41a378:	pusha  
  41a379:	xor    al,0x29
  41a37b:	mov    eax,ds:0xc992f650
  41a380:	jns    0x41a306
  41a382:	mov    BYTE PTR [esi-0x64],ah
  41a385:	scas   al,BYTE PTR es:[edi]
  41a386:	inc    edi
  41a387:	mov    ds:0xb27910d0,al
  41a38c:	mov    ch,0x8
  41a38e:	lods   al,BYTE PTR ds:[esi]
  41a38f:	clc    
  41a390:	adc    edx,DWORD PTR [eax+0x447c2812]
  41a396:	ficomp WORD PTR [esi]
  41a398:	cdq    
  41a399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39a:	addr16 aad 0x41
  41a39d:	jo     0x41a386
  41a39f:	push   0x57
  41a3a1:	dec    ebp
  41a3a2:	das    
  41a3a3:	in     al,dx
  41a3a4:	push   ecx
  41a3a5:	retf   0x7a75
  41a3a8:	repnz les esp,FWORD PTR [esi]
  41a3ab:	je     0x41a401
  41a3ad:	(bad)  
  41a3ae:	call   0x4b128f19
  41a3b3:	rcl    bl,1
  41a3b5:	xor    eax,0xb68a7d33
  41a3ba:	mov    eax,0x78444ccd
  41a3bf:	pop    ecx
  41a3c0:	leave  
  41a3c1:	mov    sp,0x99b4
  41a3c5:	push   edi
  41a3c6:	add    edx,DWORD PTR [edi]
  41a3c8:	shr    BYTE PTR [edx],1
  41a3ca:	(bad)  
  41a3cb:	mov    eax,ds:0x55b3aa58
  41a3d0:	xlat   BYTE PTR ds:[ebx]
  41a3d1:	out    dx,eax
  41a3d2:	fist   WORD PTR [edi+0x1b]
  41a3d5:	mov    DWORD PTR [ebx+0x6f],esi
  41a3d8:	fisub  DWORD PTR [esi-0x7]
  41a3db:	in     eax,dx
  41a3dc:	or     cl,BYTE PTR [ecx]
  41a3de:	pop    eax
  41a3df:	push   esp
  41a3e0:	ror    DWORD PTR [eax+0x173ee99d],cl
  41a3e6:	fild   WORD PTR [eax-0x4ac0993d]
  41a3ec:	out    0xe2,eax
  41a3ee:	xor    dl,BYTE PTR [esi+0x40]
  41a3f1:	dec    ebp
  41a3f2:	ins    DWORD PTR es:[edi],dx
  41a3f3:	jmp    0x41a411
  41a3f5:	sbb    al,0x75
  41a3f7:	xchg   ebx,eax
  41a3f8:	sbb    al,bh
  41a3fa:	jb     0x41a404
  41a3fc:	imul   ebp,DWORD PTR [eax+0x36],0xa9779a66
  41a403:	dec    ebp
  41a404:	push   ss
  41a405:	mov    esi,0x5b43e17d
  41a40a:	out    0x66,al
  41a40c:	ss (bad) 
  41a40e:	pop    edx
  41a40f:	bnd jo 0x41a434
  41a412:	cs mov bh,dh
  41a415:	shr    DWORD PTR [edi+0x61],cl
  41a418:	mov    dh,0x6e
  41a41a:	xchg   edi,eax
  41a41b:	mov    eax,ds:0xb07567a8
  41a420:	sbb    ecx,DWORD PTR [eax+0x47850627]
  41a426:	add    DWORD PTR [eax+0x2657ff30],eax
  41a42c:	gs aad 0x73
  41a42f:	or     DWORD PTR [ebp-0xc],edi
  41a432:	jne    0x41a49d
  41a434:	mov    edi,0xb3bdc365
  41a439:	ss inc edx
  41a43b:	dec    esp
  41a43c:	aas    
  41a43d:	js     0x41a431
  41a43f:	or     bl,dl
  41a441:	xchg   esp,eax
  41a442:	aad    0xe1
  41a444:	rcl    BYTE PTR [esi+edx*4-0x349ab573],0x23
  41a44c:	add    eax,0x3ccc1d36
  41a451:	icebp  
  41a452:	mov    DWORD PTR [ebp+0x12c690d3],ebp
  41a458:	lea    ebp,[edi+0x65e980f5]
  41a45e:	and    edi,DWORD PTR [ecx+0x31]
  41a461:	cmp    BYTE PTR [ebx+0x3b],0x86
  41a465:	out    0x9d,eax
  41a467:	cs cs addr16 jb 0x41a411
  41a46c:	jae    0x41a49f
  41a46e:	or     BYTE PTR [esi+0x6f456c59],dh
  41a474:	pop    eax
  41a475:	leave  
  41a476:	sar    DWORD PTR ss:[ecx-0x1ab96524],cl
  41a47d:	or     eax,0x2540c672
  41a482:	daa    
  41a483:	pushf  
  41a484:	mov    ebx,0xae8ce133
  41a489:	data16 mov cl,0xf7
  41a48c:	cdq    
  41a48d:	lock mov bl,0xc
  41a490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a491:	je     0x41a455
  41a493:	xor    DWORD PTR [esi+0x35427578],0xf2e7aa72
  41a49d:	jbe    0x41a49c
  41a49f:	sbb    WORD PTR [edx+0x6040f71c],0x15
  41a4a7:	test   eax,0xff750ef1
  41a4ac:	call   0xf75ff085
  41a4b1:	or     eax,0xcbb766bb
  41a4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b7:	pop    edi
  41a4b8:	xor    ecx,edi
  41a4ba:	neg    BYTE PTR ds:[ebx+0x74]
  41a4be:	dec    ebp
  41a4bf:	pop    esp
  41a4c0:	data16 shl BYTE PTR [bp+0x1a],0x7a
  41a4c6:	pop    edx
  41a4c7:	mov    cs,WORD PTR [ecx-0x57]
  41a4ca:	xchg   ebx,eax
  41a4cb:	push   0x1b
  41a4cd:	adc    al,0xe0
  41a4cf:	addr16 cmp ah,bh
  41a4d2:	inc    esp
  41a4d3:	pop    cx
  41a4d5:	in     eax,0x59
  41a4d7:	cwde   
  41a4d8:	jge    0x41a475
  41a4da:	mov    WORD PTR [esi-0x18],fs
  41a4dd:	or     eax,0xd8d07b78
  41a4e2:	je     0x41a4b0
  41a4e4:	das    
  41a4e5:	daa    
  41a4e6:	out    dx,al
  41a4e7:	fidiv  DWORD PTR [eax+0x51916717]
  41a4ed:	inc    bp
  41a4ef:	or     dl,BYTE PTR [edx-0x1358f5fe]
  41a4f5:	cdq    
  41a4f6:	jnp    0x41a577
  41a4f8:	shl    DWORD PTR [eax-0x44022b0b],cl
  41a4fe:	test   BYTE PTR [ebp-0x1d],0x8d
  41a502:	add    DWORD PTR [edi+0x61616975],0x6315c154
  41a50c:	shr    DWORD PTR [eax],cl
  41a50e:	repz (bad) 
  41a510:	xchg   esi,eax
  41a511:	sub    al,0x8d
  41a513:	ret    0x66c2
  41a516:	mov    ah,al
  41a518:	mov    ds:0x19f39722,al
  41a51d:	ins    BYTE PTR es:[edi],dx
  41a51e:	mov    esi,0x51cd313
  41a523:	mov    edi,0xa31a8f48
  41a528:	ficom  DWORD PTR [ebp+0x12]
  41a52b:	xchg   DWORD PTR [edi+0x22],edi
  41a52e:	xor    ecx,DWORD PTR [ecx+0x30b50cfd]
  41a534:	ret    
  41a535:	shr    DWORD PTR [edx],0xe6
  41a538:	(bad)  
  41a539:	push   ebx
  41a53a:	jne    0x41a575
  41a53c:	jmp    0xfa03:0x19d6836b
  41a543:	outs   dx,DWORD PTR ds:[esi]
  41a544:	shr    esi,cl
  41a546:	out    0xaf,eax
  41a548:	push   edi
  41a549:	and    al,0xcc
  41a54b:	das    
  41a54c:	pshufw mm6,QWORD PTR [esi-0x4],0x5f
  41a551:	gs loopne 0x41a5a6
  41a554:	mov    ch,0x44
  41a556:	jmp    0x5dae75cb
  41a55b:	in     al,dx
  41a55c:	rcr    DWORD PTR [ebx],cl
  41a55e:	jns    0x41a5a8
  41a560:	push   esp
  41a561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a562:	pop    esp
  41a563:	xor    ebp,DWORD PTR ds:0x36594065
  41a569:	sub    dh,BYTE PTR [ecx]
  41a56b:	outs   dx,DWORD PTR ds:[esi]
  41a56c:	jo     0x41a532
  41a56e:	adc    ebp,eax
  41a570:	mov    ch,BYTE PTR [ecx-0x276ebc8b]
  41a576:	push   cs
  41a577:	mov    ds:0x82cc1577,al
  41a57c:	dec    esp
  41a57d:	xchg   esi,eax
  41a57e:	jnp    0x41a5e6
  41a580:	idiv   BYTE PTR [eax+0x38]
  41a583:	outs   dx,DWORD PTR ds:[esi]
  41a584:	pop    ecx
  41a585:	inc    ecx
  41a586:	jne    0x41a5c0
  41a588:	jo     0x41a529
  41a58a:	daa    
  41a58b:	mov    ds:0x6632ffc9,eax
  41a590:	es fst st(5)
  41a593:	popa   
  41a594:	rcr    BYTE PTR [ebx+esi*2+0x4c2072ec],1
  41a59b:	in     eax,0x93
  41a59d:	pushf  
  41a59e:	mov    BYTE PTR [ebx+0x53],0xb0
  41a5a2:	inc    edi
  41a5a3:	data16 in al,dx
  41a5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a6:	into   
  41a5a7:	sub    al,BYTE PTR [ebx]
  41a5a9:	mov    bh,0xfd
  41a5ab:	and    ch,BYTE PTR [ebx+0x1cb8933e]
  41a5b1:	jmp    0x1ec8:0xbb5e663f
  41a5b8:	idiv   edi
  41a5ba:	push   ebp
  41a5bb:	mov    ah,0x4f
  41a5bd:	pusha  
  41a5be:	and    al,0x24
  41a5c0:	or     eax,0x4d43759c
  41a5c5:	icebp  
  41a5c6:	mov    ?,edx
  41a5c8:	(bad)  
  41a5c9:	sbb    DWORD PTR [esi+eiz*2+0x10b7300f],edx
  41a5d0:	ror    DWORD PTR [edi+edi*1],cl
  41a5d3:	retf   0x58e6
  41a5d6:	pop    ebx
  41a5d7:	sbb    ecx,ebx
  41a5d9:	data16 ss mov cl,0x41
  41a5dd:	(bad)  
  41a5de:	int    0xf9
  41a5e0:	shl    BYTE PTR [esi-0x6cb6f4d],0x75
  41a5e7:	mov    BYTE PTR [esi],ah
  41a5e9:	in     eax,dx
  41a5ea:	pusha  
  41a5eb:	adc    bl,cl
  41a5ed:	pop    ebx
  41a5ee:	push   edi
  41a5ef:	data16 cli 
  41a5f1:	aas    
  41a5f2:	sbb    edi,DWORD PTR [esi-0x5995da2d]
  41a5f8:	and    eax,0x937f1666
  41a5fd:	repnz xchg esp,eax
  41a5ff:	ins    DWORD PTR es:[edi],dx
  41a600:	mov    eax,0xaa66c758
  41a605:	daa    
  41a606:	rol    BYTE PTR [edi-0x1b],0x29
  41a60a:	cmp    esi,DWORD PTR [esi+0x35]
  41a60d:	add    eax,0x68eb55df
  41a612:	adc    al,0xf3
  41a614:	sub    al,0x65
  41a616:	mov    bl,0x4e
  41a618:	mov    ch,0xfd
  41a61a:	adc    BYTE PTR [eax+ebp*2-0x1b2eba30],dh
  41a621:	lods   eax,DWORD PTR ds:[esi]
  41a622:	fwait
  41a623:	jmp    0x6741633f
  41a628:	inc    esi
  41a629:	jl     0x41a60d
  41a62b:	mov    cl,BYTE PTR [eax+0x68]
  41a62e:	pcmpgtd mm1,QWORD PTR [ebx-0x2cb34a21]
  41a635:	add    DWORD PTR [edi],esi
  41a637:	mov    esp,cs
  41a639:	mov    ecx,0x39f7a87a
  41a63e:	xchg   ebp,eax
  41a63f:	xor    bl,dl
  41a641:	pop    ss
  41a642:	adc    eax,DWORD PTR [eax+0x1ebadb52]
  41a648:	shl    DWORD PTR [edi+0x2c35a2a1],cl
  41a64e:	div    DWORD PTR [edx+0x398666bc]
  41a654:	loope  0x41a5fa
  41a656:	or     ebp,DWORD PTR [ecx+edi*4+0x2def84a0]
  41a65d:	jno    0x41a6d4
  41a65f:	je     0x41a629
  41a661:	pop    ebx
  41a662:	int3   
  41a663:	mov    ds,edi
  41a665:	mov    eax,0xfd806619
  41a66a:	scas   eax,DWORD PTR es:[edi]
  41a66b:	inc    edi
  41a66c:	rol    DWORD PTR [esi+0x50],cl
  41a66f:	push   ecx
  41a670:	mov    bl,0x97
  41a672:	and    eax,0xe266bed0
  41a677:	(bad)  
  41a678:	xlat   BYTE PTR ds:[ebx]
  41a679:	xor    BYTE PTR [esi+0x7f],0xe9
  41a67d:	jge    0x41a67f
  41a67f:	pusha  
  41a680:	shr    DWORD PTR [edx+0x552e3353],cl
  41a686:	pop    esp
  41a687:	push   edx
  41a688:	sub    al,0x77
  41a68a:	frstor [esi]
  41a68c:	sub    bl,0x1f
  41a68f:	xchg   ecx,eax
  41a690:	jmp    0x4db8:0x9cf0705e
  41a697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a698:	loop   0x41a61d
  41a69a:	call   0x86d1:0xdfe6d2fa
  41a6a1:	clc    
  41a6a2:	dec    edx
  41a6a3:	sbb    dl,BYTE PTR [edi+0x1566a76a]
  41a6a9:	mov    ?,WORD PTR [ebx]
  41a6ab:	(bad)  
  41a6ac:	jnp    0x41a70f
  41a6ae:	push   eax
  41a6af:	repnz scas eax,DWORD PTR es:[edi]
  41a6b1:	xchg   ecx,eax
  41a6b2:	jne    0x41a688
  41a6b4:	pop    esi
  41a6b5:	clc    
  41a6b6:	pop    DWORD PTR [edx-0x2c]
  41a6b9:	jmp    0xca49:0x655977b3
  41a6c0:	imul   ebx,DWORD PTR [edx+0x12d1e44a],0xffffffde
  41a6c7:	arpl   WORD PTR [edi],di
  41a6c9:	xor    DWORD PTR [eax-0x73],0xffffffae
  41a6cd:	xchg   edx,eax
  41a6ce:	dec    eax
  41a6cf:	dec    edx
  41a6d0:	arpl   bx,sp
  41a6d2:	pop    ss
  41a6d3:	inc    esi
  41a6d4:	daa    
  41a6d5:	jge    0x41a6c8
  41a6d7:	add    sp,si
  41a6da:	rol    DWORD PTR [eax],cl
  41a6dc:	std    
  41a6dd:	sub    ebx,DWORD PTR [eax]
  41a6df:	xor    eax,0x3ee8389b
  41a6e4:	(bad)  
  41a6e5:	mov    al,ds:0x5d6f5575
  41a6ea:	(bad)  
  41a6eb:	int3   
  41a6ec:	jp     0x41a746
  41a6ee:	jne    0x41a736
  41a6f0:	jb     0x41a724
  41a6f2:	fidiv  DWORD PTR [esi+0x66c905e0]
  41a6f8:	mov    WORD PTR [ebp+ebx*2+0x15b1d320],?
  41a6ff:	out    dx,eax
  41a700:	int3   
  41a701:	xor    dl,dh
  41a703:	inc    DWORD PTR [eiz*2+0x64f4bbd6]
  41a70a:	jmp    DWORD PTR [ebx]
  41a70c:	arpl   WORD PTR [ecx-0x290ac9b1],bp
  41a712:	jne    0x41a782
  41a714:	fld    QWORD PTR [esi]
  41a716:	mov    ah,0xf0
  41a718:	or     dh,bl
  41a71a:	lods   eax,DWORD PTR ds:[esi]
  41a71b:	mov    cx,0x4c86
  41a71f:	jg     0x41a6f4
  41a721:	std    
  41a722:	in     eax,0x21
  41a724:	inc    esp
  41a725:	mov    ebp,?
  41a727:	cmp    al,BYTE PTR [eax-0x7f]
  41a72a:	retf   
  41a72b:	test   DWORD PTR [edx+0x4966ef8a],edi
  41a731:	mov    al,ds:0xf9d3c658
  41a736:	mov    BYTE PTR [edi],cl
  41a738:	shl    ch,0xaf
  41a73b:	shr    DWORD PTR [ebp+0x704a0666],0xeb
  41a742:	cmp    al,0xfd
  41a744:	add    ecx,edx
  41a746:	lods   eax,DWORD PTR ds:[esi]
  41a747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a748:	inc    ebp
  41a749:	fs jne 0x41a753
  41a74c:	jmp    0xb465:0x509cf90c
  41a753:	loope  0x41a74c
  41a755:	jnp    0x41a7a4
  41a757:	(bad)  
  41a758:	push   esp
  41a759:	call   0xb975:0xf4e2f5d0
  41a760:	inc    eax
  41a761:	push   cs
  41a762:	es (bad) 
  41a765:	jno    0x41a7de
  41a767:	outs   dx,DWORD PTR ds:[esi]
  41a768:	into   
  41a769:	data16 cmp al,0xff
  41a76c:	push   esp
  41a76d:	inc    eax
  41a76e:	sbb    bl,BYTE PTR [edi-0x47915b2d]
  41a774:	sahf   
  41a775:	dec    esi
  41a776:	out    dx,al
  41a777:	sahf   
  41a778:	std    
  41a779:	jno    0x41a6fc
  41a77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a77c:	and    dh,BYTE PTR [ebx-0x4c]
  41a77f:	loopne 0x41a7cc
  41a781:	mov    dh,0xff
  41a783:	sbb    ax,WORD PTR [edi-0x3f2cb1a7]
  41a78a:	push   ebp
  41a78b:	loopne 0x41a79c
  41a78d:	test   al,0x5f
  41a78f:	or     ebx,DWORD PTR [ebp+edi*4+0x3c]
  41a793:	jmp    0x41a7ae
  41a795:	xchg   edi,eax
  41a796:	mov    esi,0xd4a70266
  41a79b:	sar    DWORD PTR ds:[edi-0x19e3eee2],cl
  41a7a2:	and    BYTE PTR [eax+0x46],bh
  41a7a5:	gs in  al,0x45
  41a7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7a9:	mov    ebp,DWORD PTR [ebx+0x30]
  41a7ac:	ins    BYTE PTR es:[edi],dx
  41a7ad:	or     ah,BYTE PTR [ebp+0x751eedf7]
  41a7b3:	into   
  41a7b4:	xor    edi,eax
  41a7b6:	fild   WORD PTR [esi-0x216054de]
  41a7bc:	loop   0x41a822
  41a7be:	jne    0x41a831
  41a7c0:	xchg   edx,eax
  41a7c1:	lea    esi,[edi+0x6]
  41a7c4:	arpl   WORD PTR [ebx+0x2d835f74],bp
  41a7ca:	xchg   ebp,eax
  41a7cb:	cmp    al,0x8f
  41a7cd:	push   bp
  41a7cf:	cmova  edi,DWORD PTR [ecx-0x56885c8e]
  41a7d6:	mov    ecx,DWORD PTR [esi-0x16]
  41a7d9:	push   ebp
  41a7da:	inc    ebp
  41a7db:	retf   
  41a7dc:	scas   al,BYTE PTR es:[edi]
  41a7dd:	mov    ah,0x2d
  41a7df:	cmp    al,0x76
  41a7e1:	hlt    
  41a7e2:	mov    ch,0xe9
  41a7e4:	out    0x98,al
  41a7e6:	lea    esp,[esi+0xe]
  41a7e9:	push   edi
  41a7ea:	push   eax
  41a7eb:	inc    ebp
  41a7ec:	rcr    DWORD PTR [ebx],cl
  41a7ee:	(bad)  
  41a7ef:	fst    QWORD PTR [edx]
  41a7f1:	xchg   ecx,eax
  41a7f2:	ins    BYTE PTR es:[edi],dx
  41a7f3:	mov    bh,dl
  41a7f5:	sub    eax,0x95d3da70
  41a7fa:	loop   0x41a874
  41a7fc:	inc    esi
  41a7fd:	test   BYTE PTR [esi],bl
  41a7ff:	mov    ch,0xea
  41a801:	pop    ebx
  41a802:	or     al,0x9e
  41a804:	xor    eax,DWORD PTR [eax]
  41a806:	mov    BYTE PTR [eax+esi*2+0x7955259b],bl
  41a80d:	inc    ebx
  41a80e:	lock push bx
  41a811:	(bad)  
  41a812:	mov    dh,0x27
  41a814:	rcl    ebx,cl
  41a816:	xor    edx,esi
  41a818:	and    DWORD PTR [esp+eax*2-0x411b0579],ebx
  41a81f:	inc    esi
  41a820:	pop    ds
  41a821:	call   esi
  41a823:	or     edi,0x52
  41a826:	(bad)  
  41a827:	out    0x5a,al
  41a829:	(bad)  
  41a82a:	ins    DWORD PTR es:[edi],dx
  41a82b:	mov    dl,BYTE PTR [esi]
  41a82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82e:	rcr    DWORD PTR [ebx-0x5eddc22f],0x64
  41a835:	iret   
  41a836:	xchg   ecx,eax
  41a837:	out    0x5d,al
  41a839:	mov    edi,0x896cd20d
  41a83e:	lods   al,BYTE PTR ds:[esi]
  41a83f:	sahf   
  41a840:	push   ebx
  41a841:	fwait
  41a842:	pop    esp
  41a843:	shl    DWORD PTR ss:[esi+0x2df0ec49],cl
  41a84a:	sub    BYTE PTR [edx-0xd],0x61
  41a84e:	(bad)  
  41a84f:	or     eax,0xede5d9d5
  41a854:	sub    ecx,ecx
  41a856:	mov    fs,esi
  41a858:	rcl    DWORD PTR ds:0xb30eafb8,cl
  41a85e:	std    
  41a85f:	sbb    BYTE PTR [eax],0x67
  41a862:	jp     0x41a822
  41a864:	fistp  DWORD PTR [edx+0x6b]
  41a867:	xchg   ecx,eax
  41a868:	xor    edx,ebp
  41a86a:	int3   
  41a86b:	mov    dl,0xd3
  41a86d:	cs sti 
  41a86f:	xchg   BYTE PTR [ecx-0x4bfee07b],dl
  41a875:	js     0x41a82a
  41a877:	mov    eax,ds:0x661b62e4
  41a87c:	mov    ds:0xd3f3a1fb,eax
  41a881:	pop    edx
  41a882:	jle    0x41a8ca
  41a884:	mov    ?,WORD PTR [ebx+0x7b]
  41a887:	sub    bl,BYTE PTR [ecx+0x44]
  41a88a:	pusha  
  41a88b:	add    DWORD PTR [ebx],ebx
  41a88d:	sbb    esi,esi
  41a88f:	sub    BYTE PTR [edi+eax*1-0x3a],0xa6
  41a894:	shl    DWORD PTR [edx+0x3f85da43],0x75
  41a89b:	push   ds
  41a89c:	mov    eax,0x1927ecd6
  41a8a1:	clc    
  41a8a2:	std    
  41a8a3:	data16 adc BYTE PTR [esi+edx*2-0x70dd2d00],cl
  41a8ab:	pushf  
  41a8ac:	xchg   DWORD PTR [esi+0x65295b1d],ebp
  41a8b2:	fdivr  DWORD PTR [ebx+0x7f]
  41a8b5:	jge    0x41a913
  41a8b7:	cmp    al,0x2e
  41a8b9:	fstp   DWORD PTR [ebp-0x6c]
  41a8bc:	in     al,dx
  41a8bd:	mov    bl,0x75
  41a8bf:	adc    DWORD PTR [ecx+0x7a],edx
  41a8c2:	xchg   esi,eax
  41a8c3:	adc    eax,0x66b78856
  41a8c8:	mov    eax,DWORD PTR ds:0x54d32169
  41a8ce:	mov    edi,0x569aa49
  41a8d3:	mov    ah,0x7a
  41a8d5:	push   esp
  41a8d6:	sbb    eax,0x63c1eecd
  41a8db:	mov    ah,0x7e
  41a8dd:	dec    edx
  41a8de:	push   ebp
  41a8df:	das    
  41a8e0:	rcr    DWORD PTR [ecx],cl
  41a8e2:	jp     0x10110d13
  41a8e8:	ja     0x41a92e
  41a8ea:	add    BYTE PTR [ecx+0x3bce35e9],0x62
  41a8f1:	dec    ebp
  41a8f2:	aad    0x9c
  41a8f4:	lods   al,BYTE PTR ds:[esi]
  41a8f5:	xor    BYTE PTR [ebp+0x43],0x82
  41a8f9:	dec    ebx
  41a8fa:	js     0x41a8c1
  41a8fc:	cld    
  41a8fd:	adc    BYTE PTR [edx+0x61],ch
  41a900:	in     al,0xa7
  41a902:	mov    eax,0x291ef456
  41a907:	mov    bl,BYTE PTR [ebx]
  41a909:	gs dec ecx
  41a90b:	(bad)  [ebx+0xf]
  41a90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a90f:	rol    BYTE PTR [edx],cl
  41a911:	in     al,0x5d
  41a913:	cmp    bh,ch
  41a915:	sub    esi,DWORD PTR [ecx-0x43]
  41a918:	shl    ecx,cl
  41a91a:	lods   eax,DWORD PTR ds:[esi]
  41a91b:	mov    ecx,0xec34364c
  41a920:	in     eax,0xd3
  41a922:	dec    esp
  41a923:	xor    BYTE PTR [esi+0x6326a9c6],ah
  41a929:	xchg   esi,eax
  41a92a:	sbb    eax,0xfb3f6daa
  41a930:	or     eax,0xfee5c8e9
  41a935:	icebp  
  41a936:	out    dx,eax
  41a937:	test   BYTE PTR [eax+0x20],0x54
  41a93b:	cmp    eax,0x1a6c8981
  41a940:	stc    
  41a941:	in     eax,dx
  41a942:	ret    
  41a943:	out    0xed,al
  41a945:	gs xchg ebp,eax
  41a947:	jae    0x41a92e
  41a949:	lds    ecx,FWORD PTR [ebx]
  41a94b:	or     al,0xde
  41a94d:	mov    ds:0xdb39ddba,eax
  41a952:	jne    0x41a992
  41a954:	(bad)  
  41a955:	jge    0x41a988
  41a957:	sub    al,0xf1
  41a959:	aam    0x96
  41a95b:	mov    edi,0x4d3fe097
  41a960:	jecxz  0x41a9d9
  41a962:	cmc    
  41a963:	pusha  
  41a964:	and    ah,BYTE PTR [edi]
  41a966:	xor    edi,DWORD PTR [edi+0x14757f47]
  41a96c:	jmp    0x41a9d1
  41a96e:	das    
  41a96f:	arpl   WORD PTR [edx],ax
  41a971:	fucomip st,st(5)
  41a973:	imul   edx,DWORD PTR [eax-0x715a2c3],0xe13622be
  41a97d:	lahf   
  41a97e:	mov    dh,0x8b
  41a980:	rcl    DWORD PTR [edi+0x6f],cl
  41a983:	nop
  41a984:	push   edx
  41a985:	icebp  
  41a986:	jns    0x41a968
  41a988:	adc    ah,BYTE PTR [ecx+eax*4]
  41a98b:	addr16 (bad) 
  41a98d:	jno    0x41a9ba
  41a98f:	int3   
  41a990:	push   ebx
  41a991:	mov    ebp,0x5ad34efe
  41a996:	inc    ebp
  41a997:	repnz in al,0x9c
  41a99a:	and    BYTE PTR [edi+0x35],bh
  41a99d:	lea    esp,gs:[ecx]
  41a9a0:	mov    DWORD PTR [ecx+0x2a255d15],eax
  41a9a6:	retf   0xa509
  41a9a9:	fldcw  WORD PTR ds:[edi+0x38]
  41a9ad:	or     edi,ebp
  41a9af:	test   ax,0x3d67
  41a9b3:	xlat   BYTE PTR ds:[ebx]
  41a9b4:	call   0x6fdf:0x139133f2
  41a9bb:	icebp  
  41a9bc:	mov    esi,es
  41a9be:	or     eax,esi
  41a9c0:	ret    0x75d0
  41a9c3:	std    
  41a9c4:	jnp    0x41a96d
  41a9c6:	call   0xa67:0xf0bf522b
  41a9cd:	mov    bl,0x9b
  41a9cf:	popf   
  41a9d0:	cmp    bl,BYTE PTR [ecx-0x6c]
  41a9d3:	jle    0x41a9a9
  41a9d5:	jmp    0xc0e4b24c
  41a9da:	push   ds
  41a9db:	(bad)  
  41a9dc:	dec    ebx
  41a9dd:	lea    edx,[ecx]
  41a9df:	mov    bh,0x17
  41a9e1:	adc    dh,BYTE PTR [ebx]
  41a9e3:	mov    esi,0x65755572
  41a9e8:	sar    BYTE PTR [eax+eax*4+0x53bdd35e],1
  41a9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f0:	mov    eax,0xb057c2ad
  41a9f5:	popa   
  41a9f6:	mov    edi,0x9387481b
  41a9fb:	push   ss
  41a9fc:	mov    ah,0xa6
  41a9fe:	icebp  
  41a9ff:	mov    ecx,0x21a04ba0
  41aa04:	in     al,0xf7
  41aa06:	jne    0x41aa0a
  41aa08:	jnp    0x41a9c8
  41aa0a:	inc    ebx
  41aa0b:	lds    esi,FWORD PTR [ecx-0x726637ae]
  41aa11:	addr16 test al,0x66
  41aa14:	or     al,0xb0
  41aa16:	adc    edi,ebx
  41aa18:	mov    bl,0xef
  41aa1a:	jne    0x41a9c6
  41aa1c:	pop    ds
  41aa1d:	xchg   edi,eax
  41aa1e:	or     ebp,DWORD PTR [edi]
  41aa20:	pusha  
  41aa21:	inc    ebx
  41aa22:	mul    BYTE PTR [edi-0x65]
  41aa25:	fistp  WORD PTR [eax]
  41aa27:	fsub   DWORD PTR [eax+esi*2+0x63]
  41aa2b:	sub    eax,0x2874a239
  41aa30:	data16 xor bh,bl
  41aa33:	jns    0x41aa31
  41aa35:	adc    ebp,0x93caeada
  41aa3b:	pop    sp
  41aa3d:	mov    WORD PTR [esi-0x5d],ss
  41aa40:	jmp    0x9ff9:0x105a83ed
  41aa47:	push   ebp
  41aa48:	(bad)  
  41aa49:	sar    dl,1
  41aa4b:	push   es
  41aa4c:	push   ss
  41aa4d:	gs sub al,bh
  41aa50:	push   es
  41aa51:	into   
  41aa52:	and    eax,0x60e76f8a
  41aa57:	mov    al,0x6e
  41aa59:	aaa    
  41aa5a:	jne    0x41a9fd
  41aa5c:	fidiv  DWORD PTR [ebp+0x277bb0cd]
  41aa62:	mov    edi,0x3c18b766
  41aa67:	cmp    ebx,edx
  41aa69:	dec    edi
  41aa6a:	inc    ebp
  41aa6b:	(bad)  
  41aa6c:	lods   eax,DWORD PTR ds:[esi]
  41aa6d:	mov    BYTE PTR [edi+0x70],bh
  41aa70:	mov    BYTE PTR [edi],bh
  41aa72:	in     al,dx
  41aa73:	xchg   ebx,eax
  41aa74:	push   edi
  41aa75:	dec    ebp
  41aa76:	mov    al,0x14
  41aa78:	mov    DWORD PTR [esi+esi*4-0x69],edi
  41aa7c:	and    al,0x16
  41aa7e:	fsub   DWORD PTR [esi+0x36]
  41aa81:	sbb    BYTE PTR [eax-0x44dc1342],0x49
  41aa88:	mov    ecx,0x1a3b74b0
  41aa8d:	lods   eax,DWORD PTR ds:[esi]
  41aa8e:	ss icebp 
  41aa90:	test   eax,0x58acfe5
  41aa95:	pop    DWORD PTR [ecx+0x4db53f66]
  41aa9b:	inc    ecx
  41aa9c:	rcl    DWORD PTR [ebx-0x5d984cfc],cl
  41aaa2:	add    bh,al
  41aaa4:	lds    esp,FWORD PTR [esi-0x1e]
  41aaa7:	clc    
  41aaa8:	cmp    BYTE PTR [ecx-0x66],dl
  41aaab:	xchg   esi,eax
  41aaac:	popf   
  41aaad:	sti    
  41aaae:	pusha  
  41aaaf:	xchg   edx,eax
  41aab0:	test   eax,0xa4e175f9
  41aab5:	push   eax
  41aab6:	aas    
  41aab7:	leave  
  41aab8:	mov    ah,BYTE PTR [eax-0x5b]
  41aabb:	jb     0x41aad6
  41aabd:	mov    DWORD PTR [ebp+0x18],ebp
  41aac0:	mov    bl,0xb3
  41aac2:	cmp    al,dl
  41aac4:	rcr    esi,cl
  41aac6:	pusha  
  41aac7:	fld    QWORD PTR [esi]
  41aac9:	sbb    eax,0x4408a2dc
  41aace:	es jne 0x41aaa9
  41aad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad2:	jae    0x41ab0f
  41aad4:	inc    edx
  41aad5:	lea    esi,[ebx+ebp*2+0xe2836d3]
  41aadc:	cmp    eax,0xf59a08c4
  41aae1:	aad    0x29
  41aae3:	sbb    ebx,DWORD PTR [eax+0x51f6fd67]
  41aae9:	repz pop esp
  41aaeb:	test   al,0x2e
  41aaed:	jns    0x41aaaa
  41aaef:	dec    ebp
  41aaf0:	sar    DWORD PTR [ecx],cl
  41aaf2:	stos   BYTE PTR es:[edi],al
  41aaf3:	push   ebp
  41aaf4:	stos   BYTE PTR es:[edi],al
  41aaf5:	icebp  
  41aaf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf7:	shr    BYTE PTR [edi+0x6c],cl
  41aafa:	sub    BYTE PTR [ecx],dl
  41aafc:	pop    edi
  41aafd:	out    0x53,eax
  41aaff:	call   0xd64d7ead
  41ab04:	jmp    0x979a:0xb3571766
  41ab0b:	std    
  41ab0c:	call   0x5349b0fd
  41ab11:	int3   
  41ab12:	and    DWORD PTR [ebx],0xea319d04
  41ab18:	mov    ?,ebp
  41ab1a:	jne    0x41aaad
  41ab1c:	push   ebx
  41ab1d:	into   
  41ab1e:	xor    edi,DWORD PTR [edx-0x41]
  41ab21:	stos   DWORD PTR es:[edi],eax
  41ab22:	test   eax,0x75a4967
  41ab27:	pop    ecx
  41ab28:	or     DWORD PTR [ebx-0x41afad54],eax
  41ab2e:	jne    0x41aad8
  41ab30:	inc    ebx
  41ab31:	sbb    BYTE PTR [edx+0x6f],al
  41ab34:	pop    ebx
  41ab35:	add    edx,DWORD PTR [esi+eiz*2-0x5e]
  41ab39:	or     edx,0xffffffab
  41ab3c:	shl    DWORD PTR [ecx+eax*2+0x33],cl
  41ab40:	xchg   BYTE PTR [edi+0x65f85f2d],dh
  41ab46:	mov    dh,0xf4
  41ab48:	rcr    DWORD PTR [ebx-0x30ac9700],1
  41ab4e:	mov    bh,0x7
  41ab50:	repz ret 
  41ab52:	jne    0x41aba0
  41ab54:	sbb    DWORD PTR [ebx-0x7bbbc333],edx
  41ab5a:	pop    esp
  41ab5b:	mov    esp,0x175c142
  41ab60:	mov    esi,0xabca0aef
  41ab65:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab67:	push   esi
  41ab68:	fdiv   st(0),st
  41ab6a:	jne    0x41ab43
  41ab6c:	imul   edi,ecx,0xc
  41ab6f:	adc    DWORD PTR [ebx-0x53],edx
  41ab72:	sbb    DWORD PTR [esi-0x39],esp
  41ab75:	daa    
  41ab76:	ficom  WORD PTR [eax+0x29457eee]
  41ab7c:	fisubr WORD PTR ds:0x6c219274
  41ab82:	jmp    0x871447cd
  41ab87:	iretw  
  41ab89:	arpl   di,dx
  41ab8b:	adc    ebx,0xffffffed
  41ab8e:	call   0xc8c6c5c7
  41ab93:	jmp    0x41ab6a
  41ab95:	in     eax,0x5c
  41ab97:	call   0x66ca4ec9
  41ab9c:	dec    ebp
  41ab9d:	retf   
  41ab9e:	fist   WORD PTR [esi]
  41aba0:	ror    BYTE PTR [edi-0xc49013a],1
  41aba6:	lahf   
  41aba7:	rcl    DWORD PTR [ebx],0xc4
  41abaa:	sar    DWORD PTR [ebx+0x38],1
  41abad:	adc    DWORD PTR gs:[edx],esi
  41abb0:	shl    BYTE PTR [ecx+0x3de45962],cl
  41abb6:	lods   eax,DWORD PTR ds:[esi]
  41abb7:	jp     0x41ab47
  41abb9:	jmp    0x54443233
  41abbe:	dec    eax
  41abbf:	dec    ebp
  41abc0:	add    DWORD PTR [esi],esp
  41abc2:	mov    eax,0x11380667
  41abc7:	fisttp DWORD PTR [esi-0x4d]
  41abca:	adc    al,0xc6
  41abcc:	sbb    eax,DWORD PTR [edi+0x76]
  41abcf:	cs jmp 0x41abb7
  41abd2:	mov    ds:0x33657fb3,al
  41abd7:	inc    ebx
  41abd8:	cbw    
  41abda:	jmp    0x41ac44
  41abdc:	mov    edx,0xcbc193c9
  41abe1:	xchg   DWORD PTR [ebp-0x6f],esi
  41abe4:	xor    eax,0xd7a850f1
  41abe9:	popa   
  41abea:	push   ss
  41abeb:	hlt    
  41abec:	xor    al,0x67
  41abee:	dec    esp
  41abef:	clc    
  41abf0:	stos   DWORD PTR es:[edi],eax
  41abf1:	xchg   edx,eax
  41abf2:	xchg   esi,eax
  41abf3:	or     bl,dl
  41abf5:	and    ebx,ebp
  41abf7:	mov    esi,esi
  41abf9:	jo     0x41abcc
  41abfb:	mov    eax,0x35435932
  41ac00:	es gs xor BYTE PTR cs:[edi],0xf8
  41ac06:	outs   dx,DWORD PTR ds:[esi]
  41ac07:	not    bl
  41ac09:	xor    esi,ebp
  41ac0b:	jmp    0x41abbd
  41ac0d:	les    ebx,FWORD PTR [edx-0xb]
  41ac10:	or     DWORD PTR [ebp-0x76],esp
  41ac13:	ins    DWORD PTR es:[edi],dx
  41ac14:	iret   
  41ac15:	pop    esp
  41ac16:	stos   BYTE PTR es:[edi],al
  41ac17:	jns    0x41ac2e
  41ac19:	jg     0x41ac35
  41ac1b:	push   ecx
  41ac1c:	push   esp
  41ac1d:	mov    DWORD PTR [ebp-0x2c],esi
  41ac20:	test   eax,0x640e5d7
  41ac25:	jge    0x41abd3
  41ac27:	imul   ebx,DWORD PTR [ebx],0xadfb03d5
  41ac2d:	pop    edx
  41ac2e:	in     eax,dx
  41ac2f:	js     0x41ac50
  41ac31:	xchg   ebx,eax
  41ac32:	jne    0x41ac2b
  41ac34:	enter  0x7f01,0xe9
  41ac38:	loop   0x41aca2
  41ac3a:	mov    esp,0x838cdb66
  41ac3f:	mov    eax,ds:0x126ac6d3
  41ac44:	lea    esi,[edx]
  41ac46:	push   edi
  41ac47:	add    DWORD PTR ds:0x830d6c65,eax
  41ac4d:	cmp    dl,BYTE PTR [ebx-0x42afe505]
  41ac53:	mov    ah,0x95
  41ac55:	adc    al,0x75
  41ac57:	mov    ah,BYTE PTR [ecx-0x2ff8cffb]
  41ac5d:	sbb    al,0xb0
  41ac5f:	data16 fdivr DWORD PTR [eax]
  41ac62:	mov    eax,ds:0x1dc4d314
  41ac67:	fcom   QWORD PTR [edi-0x46]
  41ac6a:	(bad)  
  41ac6b:	mul    ebx
  41ac6d:	pusha  
  41ac6e:	mov    es,WORD PTR [ecx-0x58]
  41ac71:	xor    edx,DWORD PTR [esi+0x59]
  41ac74:	retf   
  41ac75:	mov    edi,ebp
  41ac77:	sub    eax,0xab111fd
  41ac7c:	sar    DWORD PTR [ebx-0x5dfe6478],cl
  41ac82:	je     0x41ace6
  41ac84:	fwait
  41ac85:	lea    edi,[ebp-0x5f]
  41ac88:	in     eax,0x5f
  41ac8a:	(bad)  [esi-0x2cd5124d]
  41ac90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac92:	neg    ecx
  41ac94:	call   0x84ce:0xebda7545
  41ac9b:	xchg   edi,eax
  41ac9c:	push   ecx
  41ac9d:	or     al,0x88
  41ac9f:	imul   ebp,DWORD PTR [esi],0x63ea7cf5
  41aca5:	cwde   
  41aca6:	je     0x41ac6a
  41aca8:	fcom   QWORD PTR [edi-0xd33ae8b]
  41acae:	nop
  41acaf:	xchg   esi,eax
  41acb0:	sbb    BYTE PTR [eax],bl
  41acb2:	mov    ds:0x75c138a2,eax
  41acb7:	fidivr DWORD PTR [ebx-0x2c6ca71f]
  41acbd:	xchg   edi,eax
  41acbe:	inc    ebx
  41acbf:	popa   
  41acc0:	mov    cl,0xa4
  41acc2:	cli    
  41acc3:	and    ebx,DWORD PTR [esi+edi*2+0x652dc808]
  41acca:	enter  0x3376,0x9b
  41acce:	sti    
  41accf:	mov    BYTE PTR [edx-0x12688d41],cl
  41acd5:	ja     0x41ad4c
  41acd7:	pop    edi
  41acd8:	sbb    BYTE PTR [eax],ch
  41acda:	fdivr  st,st(4)
  41acdc:	nop
  41acdd:	daa    
  41acde:	stc    
  41acdf:	data16 xlat BYTE PTR ds:[ebx]
  41ace1:	fldln2 
  41ace3:	rol    BYTE PTR [ebx-0x2e3be84f],0xc
  41acea:	je     0x41ad34
  41acec:	and    esp,DWORD PTR [esi+0x5dc79efe]
  41acf2:	test   dl,ah
  41acf4:	push   0x1b6686b5
  41acf9:	sub    ebx,ebx
  41acfb:	clc    
  41acfc:	pop    ebx
  41acfd:	sub    eax,0xc9006c77
  41ad02:	jne    0x41ac9d
  41ad04:	cmp    eax,0x7ad49647
  41ad09:	mov    bl,ch
  41ad0b:	out    0x6f,ax
  41ad0e:	cli    
  41ad0f:	enter  0xd7d3,0xca
  41ad13:	push   0xf5f3a3a9
  41ad18:	mov    ebx,0xc8ef5a0
  41ad1d:	xor    al,0x98
  41ad1f:	test   BYTE PTR gs:[ecx-0x29],0x72
  41ad24:	cld    
  41ad25:	out    dx,al
  41ad26:	pop    ebp
  41ad27:	mov    edx,0x3a6bdb89
  41ad2c:	icebp  
  41ad2d:	mov    edi,0x2acce6f6
  41ad32:	jae    0x41ad61
  41ad34:	sar    ebx,cl
  41ad36:	fidivr DWORD PTR [edi+0x7158531a]
  41ad3c:	add    ebx,DWORD PTR [eax-0x6f84b1d1]
  41ad42:	xor    edi,DWORD PTR [eax+0xa]
  41ad45:	xchg   ebx,eax
  41ad46:	xchg   edi,eax
  41ad47:	mov    di,0x1382
  41ad4b:	cmp    eax,0x693c1cd2
  41ad50:	pushf  
  41ad51:	jnp    0x41aced
  41ad53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad54:	or     DWORD PTR [ebp+0x33],esp
  41ad57:	ins    BYTE PTR es:[edi],dx
  41ad58:	adc    eax,0x9f6df49c
  41ad5d:	sbb    ecx,DWORD PTR [ecx-0x2f]
  41ad60:	popa   
  41ad61:	xchg   DWORD PTR [ebp-0x7b],esi
  41ad64:	mov    ds:0xc7a20d28,eax
  41ad69:	or     cl,BYTE PTR [eax+0x3acfb566]
  41ad6f:	dec    esp
  41ad70:	in     eax,0xa8
  41ad72:	jbe    0x41add6
  41ad74:	pusha  
  41ad75:	add    eax,0x3461a15
  41ad7a:	cwde   
  41ad7b:	or     eax,0x66aeedd9
  41ad80:	xor    edi,DWORD PTR [ebx-0x683dc2d4]
  41ad86:	jl     0x41adf7
  41ad88:	or     BYTE PTR [edi+0x75],dh
  41ad8b:	loop   0x41add8
  41ad8d:	adc    al,0x9d
  41ad8f:	fisttp WORD PTR [eax-0x17]
  41ad92:	ins    DWORD PTR es:[edi],dx
  41ad93:	mov    eax,esp
  41ad95:	pop    ecx
  41ad96:	ud0    ebx,DWORD PTR ds:0xa33dd6e5
  41ad9d:	dec    edi
  41ad9e:	push   cs
  41ad9f:	aam    0xee
  41ada1:	jg     0x41ad3c
  41ada3:	loop   0x41ad7f
  41ada5:	mov    DWORD PTR [edx-0x610899b2],esp
  41adab:	es mov eax,?
  41adae:	out    dx,eax
  41adaf:	fidiv  WORD PTR [ebx]
  41adb1:	inc    ebp
  41adb2:	push   0xffffffd5
  41adb4:	jo     0x41ad65
  41adb6:	push   esi
  41adb7:	add    DWORD PTR [edi+0x4d],ecx
  41adba:	and    eax,0xfad9144a
  41adbf:	cmp    ebx,DWORD PTR [ecx+0x6f]
  41adc2:	aas    
  41adc3:	rcl    DWORD PTR [di-0x57d],1
  41adc8:	aad    0x66
  41adca:	dec    ecx
  41adcb:	jmp    0x8cb:0x40030e97
  41add2:	sahf   
  41add3:	pushf  
  41add4:	sahf   
  41add5:	mov    ebx,0xe017975
  41adda:	xchg   esp,eax
  41addb:	mov    eax,0x66d266e8
  41ade0:	aam    0x78
  41ade2:	retf   0xc712
  41ade5:	pop    esi
  41ade6:	and    BYTE PTR [edx-0x258aeb5c],0x9
  41aded:	push   ds
  41adee:	out    dx,eax
  41adef:	add    dl,BYTE PTR [edx+0x54a35336]
  41adf5:	push   ebx
  41adf6:	jne    0x41ae50
  41adf8:	hlt    
  41adf9:	lahf   
  41adfa:	nop
  41adfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adfc:	popa   
  41adfd:	jns    0x41ae73
  41adff:	sbb    al,0x5c
  41ae01:	out    0x19,al
  41ae03:	ret    0xff0f
  41ae06:	jge    0x41ae0b
  41ae08:	xchg   esi,eax
  41ae09:	add    BYTE PTR [esi+0x61],dh
  41ae0c:	sub    DWORD PTR [eax+eiz*4],eax
  41ae0f:	pushf  
  41ae10:	ror    DWORD PTR [edi+0x70568fbb],cl
  41ae16:	in     eax,dx
  41ae17:	pop    ebp
  41ae18:	test   BYTE PTR [ecx-0x53],ah
  41ae1b:	adc    ch,BYTE PTR [edx-0x74f468c2]
  41ae21:	jge    0x41ae79
  41ae23:	pusha  
  41ae24:	shl    DWORD PTR [edi],cl
  41ae26:	push   ds
  41ae27:	in     eax,dx
  41ae28:	in     eax,dx
  41ae29:	jae    0x41ade1
  41ae2b:	mov    ebp,0xe8c06537
  41ae30:	xchg   edi,edx
  41ae32:	pop    ds
  41ae33:	cmp    edx,ebp
  41ae35:	cmc    
  41ae36:	push   ebx
  41ae37:	hlt    
  41ae38:	shr    BYTE PTR [ecx-0x12c2c88b],1
  41ae3e:	call   0x9d1e:0xf66a4d9
  41ae45:	pop    ss
  41ae46:	sub    ecx,DWORD PTR [edi+0x237bf0ff]
  41ae4c:	jmp    0xb5b1:0xd3417296
  41ae53:	punpcklwd mm4,DWORD PTR [ebp+0x66]
  41ae57:	and    al,0xb9
  41ae59:	in     eax,0x49
  41ae5b:	adc    BYTE PTR [ecx],ah
  41ae5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5e:	leave  
  41ae5f:	adc    esp,edi
  41ae61:	fidiv  WORD PTR [esi+0x52]
  41ae64:	cmc    
  41ae65:	mov    dh,0xfb
  41ae67:	je     0x41ae34
  41ae69:	and    BYTE PTR ds:0xa8c41dad,0x82
  41ae70:	jmp    0x41ae05
  41ae72:	mov    al,0xa6
  41ae74:	lock out dx,al
  41ae76:	daa    
  41ae77:	dec    DWORD PTR [ebx-0x26]
  41ae7a:	jb     0x41ae1e
  41ae7c:	inc    ebx
  41ae7d:	fdiv   QWORD PTR [edx+eax*2]
  41ae80:	retf   
  41ae81:	inc    esp
  41ae83:	inc    esp
  41ae84:	aad    0x5d
  41ae86:	rcl    DWORD PTR [ecx-0xdbeaf4d],0xf9
  41ae8d:	cwde   
  41ae8e:	push   esi
  41ae8f:	push   eax
  41ae90:	mov    DWORD PTR [ebx+0x63c97675],edx
  41ae96:	mov    edi,0x9dd5315c
  41ae9b:	inc    sp
  41ae9d:	mov    eax,0xc7ee4b79
  41aea2:	imul   edx,ecx,0x12bc6ba1
  41aea8:	scas   al,BYTE PTR es:[edi]
  41aea9:	mov    dh,0x96
  41aeab:	out    dx,al
  41aeac:	pusha  
  41aead:	push   ds
  41aeae:	mov    ch,0x66
  41aeb0:	push   ecx
  41aeb1:	xchg   esp,eax
  41aeb2:	mov    ds:0x4d8ed3dc,al
  41aeb7:	sbb    cl,BYTE PTR [edx-0x24]
  41aeba:	add    cl,BYTE PTR [edx-0x337c9ab8]
  41aec0:	sbb    al,0xd
  41aec2:	(bad)  
  41aec3:	jno    0x41af38
  41aec5:	jle    0x41ae73
  41aec7:	push   esi
  41aec8:	pop    ss
  41aec9:	(bad)  
  41aeca:	jne    0x41af1e
  41aecc:	mov    edi,0x1d4fc98c
  41aed1:	or     BYTE PTR ds:0x7763d066,bl
  41aed7:	adc    bl,0xd3
  41aeda:	adc    DWORD PTR [esi],0xf8939b00
  41aee0:	mov    fs,WORD PTR [esi-0x23]
  41aee3:	lods   eax,DWORD PTR ds:[esi]
  41aee4:	push   edx
  41aee5:	(bad)  
  41aee6:	test   eax,0xab57dc6d
  41aeeb:	(bad)  
  41aeec:	jle    0x41aed5
  41aeee:	jne    0x41aef7
  41aef0:	addr16 pop eax
  41aef2:	mov    al,ds:0xed0e5a32
  41aef7:	nop
  41aef8:	jmp    0xc79f:0xa11efe15
  41aeff:	inc    esi
  41af00:	shl    edi,cl
  41af02:	dec    ebp
  41af03:	scas   al,BYTE PTR es:[edi]
  41af04:	sub    eax,0x97f182ae
  41af09:	popaw  
  41af0b:	cmp    BYTE PTR [ecx-0x177af4c6],al
  41af11:	push   0xffffff94
  41af13:	pop    ebx
  41af14:	ror    BYTE PTR [ecx+edi*2],1
  41af17:	in     eax,dx
  41af18:	or     eax,0xabda9599
  41af1d:	mov    ah,ch
  41af1f:	sbb    DWORD PTR [ebp-0x2b],0xffffffa0
  41af23:	std    
  41af24:	test   al,0x22
  41af26:	and    DWORD PTR [edi-0x25],0xb4f9eadc
  41af2d:	je     0x41af2c
  41af2f:	pop    edx
  41af30:	sahf   
  41af31:	xor    BYTE PTR [ebp-0x42],0xe
  41af35:	cmp    BYTE PTR [edx],dl
  41af37:	mov    bh,0xde
  41af39:	pusha  
  41af3a:	arpl   WORD PTR [ecx+0x66173eb5],cx
  41af40:	sub    al,0xf
  41af42:	jb     0x41af06
  41af44:	rol    DWORD PTR [esi],cl
  41af46:	(bad)  ds:0xa6e8dd31
  41af4c:	lea    ecx,[edx+0x3]
  41af4f:	mov    ds:0xb9eb6690,eax
  41af54:	pop    esi
  41af55:	mov    al,0x7c
  41af57:	add    edx,ebx
  41af59:	out    0xad,eax
  41af5b:	pop    ebp
  41af5c:	test   al,0x42
  41af5e:	idiv   dh
  41af60:	stc    
  41af61:	(bad)
  41af64:	inc    esi
  41af65:	or     ch,BYTE PTR gs:[ebp-0x7a]
  41af69:	inc    ebp
  41af6a:	mov    ax,0x61fa
  41af6e:	fs enter 0x625b,0xfa
  41af73:	mov    dl,0x4f
  41af75:	and    eax,0xb9afd88b
  41af7a:	jne    0x41af3c
  41af7c:	and    al,0x65
  41af7e:	loopne 0x41af83
  41af80:	js     0x41af18
  41af82:	and    dh,BYTE PTR [ecx+0xa]
  41af85:	xor    esp,esi
  41af87:	push   ds
  41af88:	fs in  eax,0xb9
  41af8b:	jl     0x41af38
  41af8d:	adc    al,0x35
  41af8f:	sahf   
  41af90:	push   esp
  41af91:	sbb    DWORD PTR [edi+0x5c321412],esp
  41af97:	bound  edx,QWORD PTR [edi-0x61]
  41af9a:	jne    0x41af68
  41af9c:	shr    BYTE PTR [edi-0x2eaa845a],cl
  41afa2:	jne    0x41af38
  41afa4:	push   ebp
  41afa5:	jns    0x41af79
  41afa7:	push   0x70126522
  41afac:	mov    dh,0xf7
  41afae:	sbb    eax,DWORD PTR [edx+0xfcf539b]
  41afb4:	stos   DWORD PTR es:[edi],eax
  41afb5:	jb     0x41b02c
  41afb7:	fs cli 
  41afb9:	les    edi,FWORD PTR [esi+0x55]
  41afbc:	test   DWORD PTR [ecx],edx
  41afbe:	inc    ebx
  41afbf:	xchg   si,di
  41afc2:	and    ch,BYTE PTR [ebx+edx*8-0x28]
  41afc6:	inc    esi
  41afc7:	mov    ebx,ecx
  41afc9:	clc    
  41afca:	jae    0x41af54
  41afcc:	inc    esp
  41afcd:	gs into 
  41afcf:	push   ebx
  41afd0:	sti    
  41afd1:	addr16 cld 
  41afd3:	mov    ah,0xbd
  41afd5:	mov    cl,BYTE PTR [ecx]
  41afd7:	aas    
  41afd8:	shr    edx,cl
  41afda:	cmp    eax,0xc7d0fda0
  41afdf:	add    DWORD PTR [esi],edx
  41afe1:	and    DWORD PTR gs:[ebx+0x61],eax
  41afe5:	inc    esi
  41afe6:	fisttp QWORD PTR [esi+0x4d]
  41afe9:	stos   BYTE PTR es:[edi],al
  41afea:	jg     0x41af9f
  41afec:	fimul  WORD PTR [esi]
  41afee:	jb     0x41b01d
  41aff0:	jecxz  0x41affb
  41aff2:	fcmove st,st(5)
  41aff4:	jbe    0x41aff5
  41aff6:	lods   eax,DWORD PTR ds:[esi]
  41aff7:	shl    bh,1
  41aff9:	retf   
  41affa:	dec    ebx
  41affb:	xor    WORD PTR [edx],0x20
  41afff:	mov    edi,0x345448d1
  41b004:	and    BYTE PTR [eax-0x5c],0x8
  41b008:	mov    ds:0x75c6ce29,al
  41b00d:	sbb    eax,0xc3be66f8
  41b012:	add    eax,0x6fd3ac
  41b017:	push   edi
  41b018:	shl    DWORD PTR [edx+ebp*8-0x389955c0],0xb3
  41b020:	jg     0x41b046
  41b022:	mov    eax,0xb451c42e
  41b027:	xchg   esp,eax
  41b028:	aam    0x10
  41b02a:	arpl   WORD PTR [ebx],si
  41b02c:	fst    QWORD PTR [ebp+esi*2+0x30]
  41b030:	cmp    al,0xfc
  41b032:	mov    cl,0x3c
  41b034:	mov    edi,0xb9663ac8
  41b039:	push   esi
  41b03a:	jge    0x41aff1
  41b03c:	pop    ebp
  41b03d:	fmul   DWORD PTR [edx]
  41b03f:	jo     0x41b05c
  41b041:	in     al,0x75
  41b043:	call   0x3f283237
  41b048:	jns    0x41b0b0
  41b04a:	mov    ah,0x44
  41b04c:	inc    esp
  41b04d:	inc    DWORD PTR [eax+0x62]
  41b050:	lods   al,BYTE PTR ds:[esi]
  41b051:	jp     0x41b067
  41b053:	aaa    
  41b054:	ror    ah,1
  41b056:	xchg   ebx,eax
  41b057:	dec    ebp
  41b058:	mov    cl,0x1d
  41b05a:	jnp    0x41b08d
  41b05c:	lods   al,BYTE PTR ds:[esi]
  41b05d:	leave  
  41b05e:	(bad)  
  41b05f:	fldenv [ecx-0x29736a06]
  41b065:	imul   edx,DWORD PTR [edx+0x3c434866],0xffffffd0
  41b06c:	jmp    0xc1b0:0xf05d8056
  41b073:	shl    DWORD PTR [eax-0x347dcb1f],0x66
  41b07a:	xchg   ecx,eax
  41b07b:	cdq    
  41b07c:	inc    ecx
  41b07d:	(bad)  
  41b07e:	call   0x8993d5a1
  41b083:	das    
  41b084:	mov    ch,0x32
  41b086:	dec    eax
  41b087:	xchg   BYTE PTR [ecx],dl
  41b089:	call   0xa563:0x4d93ed72
  41b090:	enter  0x5566,0x78
  41b094:	push   ebp
  41b095:	fcmovbe st,st(3)
  41b097:	std    
  41b098:	out    dx,al
  41b099:	push   DWORD PTR [edi]
  41b09b:	mov    ah,0xe6
  41b09d:	dec    ebp
  41b09e:	jne    0x41b0e6
  41b0a0:	mov    bh,0x1b
  41b0a2:	and    al,0x25
  41b0a4:	pop    ebp
  41b0a5:	jp     0x41b098
  41b0a7:	xor    BYTE PTR [ecx-0x3599af76],0x54
  41b0ae:	inc    edx
  41b0af:	mov    esp,0xfa72674b
  41b0b4:	push   ebx
  41b0b5:	outs   dx,BYTE PTR ds:[esi]
  41b0b6:	loopne 0x41b10e
  41b0b8:	out    dx,eax
  41b0b9:	gs sbb al,ch
  41b0bc:	pop    ebp
  41b0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0be:	imul   esi,edx,0x477de01f
  41b0c4:	idiv   BYTE PTR [edi+0x75]
  41b0c7:	push   0x36212657
  41b0cc:	stos   BYTE PTR es:[edi],al
  41b0cd:	pushf  
  41b0ce:	in     al,0x91
  41b0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d1:	shr    BYTE PTR [ecx],1
  41b0d3:	sub    dh,ch
  41b0d5:	xchg   BYTE PTR [ebp+0x66d0d3b1],dl
  41b0db:	pop    esi
  41b0dc:	int    0xc9
  41b0de:	fs arpl dx,bx
  41b0e1:	dec    DWORD PTR [ebp-0x342f3607]
  41b0e7:	data16 mov al,BYTE PTR [edx-0x6515db9d]
  41b0ee:	inc    ebx
  41b0ef:	scas   eax,DWORD PTR es:[edi]
  41b0f0:	mov    eax,0x93b4a1b5
  41b0f5:	jecxz  0x41b169
  41b0f7:	or     eax,0xe3c16d97
  41b0fc:	lods   eax,DWORD PTR ds:[esi]
  41b0fd:	mov    esp,?
  41b0ff:	add    ecx,DWORD PTR [ebx+0x0]
  41b102:	repz (bad) 
  41b104:	shl    DWORD PTR [edx+ebp*1],cl
  41b107:	xor    esp,edi
  41b109:	dec    esi
  41b10a:	popa   
  41b10b:	sbb    eax,0x17c56669
  41b110:	mul    BYTE PTR [ecx]
  41b112:	loope  0x41b0af
  41b114:	sbb    BYTE PTR [ebp+ebx*4+0x68],bh
  41b118:	sbb    eax,0x50f025a1
  41b11d:	inc    eax
  41b11e:	je     0x41b0fa
  41b120:	jmp    DWORD PTR [ecx+edx*8]
  41b123:	mov    dh,bl
  41b125:	or     al,BYTE PTR [eax+0x2f]
  41b128:	clc    
  41b129:	pusha  
  41b12a:	lods   eax,DWORD PTR ds:[esi]
  41b12b:	std    
  41b12c:	mov    al,ds:0xa3cb263f
  41b131:	sbb    ecx,DWORD PTR [ebx+0x13]
  41b134:	(bad)  
  41b135:	mov    esi,0x98ecb732
  41b13a:	dec    edi
  41b13b:	and    dl,bh
  41b13d:	es mov ch,0x4f
  41b140:	pop    eax
  41b141:	jno    0x41b138
  41b143:	mov    bh,0x6a
  41b145:	popf   
  41b146:	push   0xaf45ba61
  41b14b:	pop    esp
  41b14c:	rcr    DWORD PTR [esi+0x61],cl
  41b14f:	scas   al,BYTE PTR es:[edi]
  41b150:	imul   ebp,DWORD PTR [ebx-0x38],0xe0504c82
  41b157:	aam    0x93
  41b159:	data16 jnp 0x41b180
  41b15c:	jge    0x41b117
  41b15e:	in     al,0x78
  41b160:	rcr    DWORD PTR [ebx+ebx*1-0x6a6ab3e],cl
  41b167:	adc    eax,0xfa797eca
  41b16c:	arpl   WORD PTR [esi-0x1e],dx
  41b16f:	inc    dx
  41b171:	dec    eax
  41b172:	dec    esp
  41b173:	cld    
  41b174:	fwait
  41b175:	cmp    al,0x20
  41b177:	fdivr  DWORD PTR [ebx+edx*2]
  41b17a:	jbe    0x41b1b3
  41b17c:	push   edi
  41b17d:	xchg   ecx,eax
  41b17e:	sub    BYTE PTR [ecx+ecx*2-0x757a0ad4],al
  41b185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b186:	mov    ds:0x824c3466,al
  41b18b:	push   esp
  41b18c:	shr    ch,1
  41b18e:	sub    eax,0x540a2f01
  41b193:	mov    esp,0x371f143
  41b198:	nop
  41b199:	sbb    al,0x2b
  41b19b:	outs   dx,DWORD PTR gs:[esi]
  41b19d:	test   DWORD PTR [ebx-0x54],esi
  41b1a0:	pop    ds
  41b1a1:	push   esi
  41b1a2:	push   ebp
  41b1a3:	(bad)  
  41b1a5:	cmp    DWORD PTR [eax+0x322ab101],ebx
  41b1ab:	js     0x41b18c
  41b1ad:	inc    esp
  41b1ae:	aad    0xc9
  41b1b0:	mov    dh,0xd2
  41b1b2:	inc    esi
  41b1b3:	data16 mov WORD PTR [ebx+ebx*8+0x11],ds
  41b1b8:	in     al,dx
  41b1b9:	int3   
  41b1ba:	dec    edx
  41b1bb:	fwait
  41b1bc:	aam    0xa6
  41b1be:	test   al,0xa1
  41b1c0:	pop    esp
  41b1c1:	add    esi,DWORD PTR ds:0xb7b6bf63
  41b1c7:	push   bp
  41b1c9:	mov    edi,0xf8d39785
  41b1ce:	pop    esp
  41b1cf:	mov    BYTE PTR [edi],0x1b
  41b1d2:	add    BYTE PTR [esi-0x3180229e],al
  41b1d8:	loope  0x41b1e6
  41b1da:	sub    al,0x67
  41b1dc:	pusha  
  41b1dd:	pop    ds
  41b1de:	es cmp eax,0xc61e6293
  41b1e4:	jmp    0xd505:0x413677cb
  41b1eb:	adc    esi,ebx
  41b1ed:	push   ebp
  41b1ee:	pop    esp
  41b1ef:	and    al,0x6c
  41b1f1:	ret    0xb68b
  41b1f4:	pop    ebx
  41b1f5:	push   ebp
  41b1f6:	adc    eax,0x24ad31d
  41b1fb:	dec    edi
  41b1fc:	ins    BYTE PTR es:[edi],dx
  41b1fd:	push   ds
  41b1fe:	add    al,0x6f
  41b200:	jno    0x41b1f5
  41b202:	jae    0x41b26e
  41b204:	xor    DWORD PTR [eax-0x1ad8958f],ebx
  41b20a:	sub    DWORD PTR [eax-0x47],ebx
  41b20d:	aas    
  41b20e:	fimul  DWORD PTR [edx]
  41b210:	sub    DWORD PTR [ecx],esp
  41b212:	jb     0x41b1b6
  41b214:	push   ss
  41b215:	in     eax,0x55
  41b217:	mov    ebx,0x5b4dcbb6
  41b21c:	inc    ebp
  41b21d:	ins    BYTE PTR es:[edi],dx
  41b21e:	scas   al,BYTE PTR es:[edi]
  41b21f:	xchg   edx,eax
  41b220:	stos   DWORD PTR es:[edi],eax
  41b221:	sbb    BYTE PTR [ebp+0x753cc541],ch
  41b227:	dec    esi
  41b228:	scas   eax,DWORD PTR es:[edi]
  41b229:	aaa    
  41b22a:	clc    
  41b22b:	ret    0x80c3
  41b22e:	sub    esp,DWORD PTR [ebp+0x3a]
  41b231:	out    0xaf,eax
  41b233:	int3   
  41b234:	fwait
  41b235:	int    0xed
  41b237:	and    eax,0xa3bbe6aa
  41b23c:	mov    edi,0x97a97019
  41b241:	callw  0x8460
  41b245:	add    BYTE PTR [ebp-0x6ef6aa7b],cl
  41b24b:	mov    ds:0xebb8e6d5,al
  41b250:	push   0x716eea8f
  41b255:	gs mov ah,0x90
  41b258:	sbb    BYTE PTR [ecx+0x9],cl
  41b25b:	sub    BYTE PTR [edi+ecx*2],0x44
  41b25f:	sub    BYTE PTR [edx-0x5e7494e2],dh
  41b265:	mov    WORD PTR [ebp-0x2d51818],ss
  41b26b:	data16 jb 0x41b210
  41b26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b26f:	pop    edi
  41b270:	shr    DWORD PTR [ecx+0x42fc8ceb],cl
  41b276:	icebp  
  41b277:	adc    eax,0x9fb2650b
  41b27c:	fld    TBYTE PTR [ebx+0x7bd90ee1]
  41b282:	lock mov ecx,0x6575e1a6
  41b288:	and    al,0xd2
  41b28a:	ret    
  41b28b:	test   DWORD PTR [ecx-0x4399a9c7],edi
  41b291:	sbb    edx,edi
  41b293:	ret    0xe1d3
  41b296:	int    0xe2
  41b298:	les    ebp,FWORD PTR [edx]
  41b29a:	xchg   BYTE PTR [ebx+0x5b],al
  41b29d:	gs push ebx
  41b29f:	adc    eax,0x9237b29c
  41b2a4:	add    esp,DWORD PTR [edx+0x5e]
  41b2a7:	popa   
  41b2a8:	inc    eax
  41b2a9:	mov    ah,0x75
  41b2ab:	fdivr  DWORD PTR [ebx+esi*2-0x7d8e87ae]
  41b2b2:	sbb    BYTE PTR [esi-0x1389edeb],bh
  41b2b8:	arpl   WORD PTR [edx],bp
  41b2ba:	cli    
  41b2bb:	dec    ebp
  41b2bc:	shl    DWORD PTR [ebp+0x6d],cl
  41b2bf:	and    al,0x89
  41b2c1:	cmp    BYTE PTR [ebp+0x50],cl
  41b2c4:	ins    BYTE PTR es:[edi],dx
  41b2c5:	pusha  
  41b2c6:	lea    ebp,[ecx-0x26770205]
  41b2cc:	jae    0x41b2a1
  41b2ce:	mov    ebp,0x41d116ca
  41b2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d4:	sar    ecx,1
  41b2d6:	xor    eax,0x98e96e5
  41b2db:	jmp    0x41b2e3
  41b2dd:	popa   
  41b2de:	jmp    0x5d08a748
  41b2e3:	cld    
  41b2e4:	sar    ecx,cl
  41b2e6:	mov    bl,0x20
  41b2e8:	inc    edx
  41b2e9:	sub    eax,0x6680fe64
  41b2ee:	xchg   ebp,eax
  41b2ef:	jecxz  0x41b34e
  41b2f1:	sbb    DWORD PTR ds:0x7b78c2fe,0xffffffcf
  41b2f8:	mov    bl,BYTE PTR [edi]
  41b2fa:	jne    0x41b31c
  41b2fc:	test   DWORD PTR [ebx],esi
  41b2fe:	inc    edx
  41b2ff:	jmp    0x41b374
  41b301:	gs aas 
  41b303:	loop   0x41b2af
  41b305:	stc    
  41b306:	outs   dx,DWORD PTR fs:[esi]
  41b308:	or     al,0x90
  41b30a:	mov    ebx,0x8b073f0c
  41b30f:	push   edi
  41b310:	es aam 0x6b
  41b313:	pop    ecx
  41b314:	jno    0x41b30c
  41b316:	mov    ds:0x6e65ef26,al
  41b31b:	in     al,dx
  41b31c:	sar    DWORD PTR [edi],0x2c
  41b31f:	outs   dx,DWORD PTR ds:[esi]
  41b320:	or     eax,0x9c8fbd79
  41b325:	push   esp
  41b326:	cdq    
  41b327:	popa   
  41b328:	xor    ah,BYTE PTR [edi]
  41b32a:	jne    0x41b304
  41b32c:	jge    0x41b393
  41b32e:	daa    
  41b32f:	xchg   esp,eax
  41b330:	sub    al,0x2c
  41b332:	loopne 0x41b3a6
  41b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b335:	call   0x887a1570
  41b33a:	jne    0x41b379
  41b33c:	dec    ecx
  41b33d:	leave  
  41b33e:	cdq    
  41b33f:	sub    ah,0x58
  41b342:	sub    al,0x83
  41b344:	aam    0xe4
  41b346:	sbb    BYTE PTR [esi-0x13],ah
  41b349:	pushf  
  41b34a:	pushf  
  41b34b:	xchg   DWORD PTR [edx+0x3d4b9ad0],edx
  41b351:	inc    ecx
  41b352:	jne    0x41b2fc
  41b354:	das    
  41b355:	cmp    BYTE PTR [edi-0x770e2c66],ah
  41b35b:	mov    bh,0x3f
  41b35d:	rcr    ch,1
  41b35f:	xor    BYTE PTR ds:0x250ee827,dl
  41b365:	mov    fs,edx
  41b367:	out    0xad,al
  41b369:	test   DWORD PTR [ebx+0x56bad1d8],eax
  41b36f:	gs push ebp
  41b371:	xchg   esp,eax
  41b372:	std    
  41b373:	lahf   
  41b374:	(bad)  
  41b375:	jp     0x41b38c
  41b377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b378:	sar    edx,cl
  41b37a:	cli    
  41b37b:	xor    eax,0xc99d23b7
  41b380:	push   edi
  41b381:	ins    BYTE PTR es:[edi],dx
  41b382:	test   DWORD PTR [edx],edi
  41b384:	lods   eax,DWORD PTR ds:[esi]
  41b385:	adc    bl,BYTE PTR [esi]
  41b387:	add    eax,0xe50f6d6a
  41b38c:	push   esp
  41b38d:	add    BYTE PTR ds:0x5363d377,ah
  41b393:	mov    eax,ds:0xb45985d9
  41b398:	xchg   esi,eax
  41b399:	div    DWORD PTR [eax+0x22]
  41b39c:	sbb    BYTE PTR [ebp+ebp*8+0x754577ae],cl
  41b3a3:	sub    eax,0xdbd1ce78
  41b3a8:	jg     0x41b3a0
  41b3aa:	jne    0x41b381
  41b3ac:	out    dx,eax
  41b3ad:	fwait
  41b3ae:	jmp    0x41b38f
  41b3b0:	(bad)  
  41b3b2:	pop    esp
  41b3b3:	mov    eax,ds:0x4429d916
  41b3b8:	mov    ds:0x33cb77eb,eax
  41b3bd:	and    BYTE PTR [edx],ch
  41b3bf:	jae    0x41b394
  41b3c1:	outs   dx,BYTE PTR ds:[esi]
  41b3c2:	sbb    BYTE PTR [eax-0x3a9158b0],0x4d
  41b3c9:	gs or  al,0x58
  41b3cc:	int3   
  41b3cd:	xor    BYTE PTR [ecx+0x7f],dh
  41b3d0:	and    esi,ebx
  41b3d2:	jns    0x41b3c9
  41b3d4:	cmp    eax,0xd73b965
  41b3d9:	xor    BYTE PTR [edx+0xd],bl
  41b3dc:	cmp    BYTE PTR [ebp-0x1d],ah
  41b3df:	mov    dh,0xf6
  41b3e1:	pop    edx
  41b3e2:	repnz cld 
  41b3e4:	aas    
  41b3e5:	ja     0x41b421
  41b3e7:	shl    DWORD PTR [ebx+edi*1],1
  41b3ea:	jbe    0x41b402
  41b3ec:	inc    esi
  41b3ed:	lds    edi,FWORD PTR [ecx-0x4d]
  41b3f0:	lahf   
  41b3f1:	xchg   ax,ax
  41b3f3:	lahf   
  41b3f4:	pop    eax
  41b3f5:	cmp    eax,0xee4ae933
  41b3fa:	cmp    dl,bh
  41b3fc:	test   DWORD PTR [ebp+esi*2+0x71e153b8],ebx
  41b403:	clc    
  41b404:	inc    esp
  41b405:	and    eax,0x107390a9
  41b40a:	es popa 
  41b40c:	in     al,dx
  41b40d:	int3   
  41b40e:	lods   eax,DWORD PTR ds:[esi]
  41b40f:	in     eax,dx
  41b410:	test   cl,bh
  41b412:	call   0x8bd3:0x757dc9b9
  41b419:	stc    
  41b41a:	fs xchg edi,eax
  41b41c:	xor    al,0x65
  41b41e:	mov    bl,0xe3
  41b420:	ins    BYTE PTR es:[edi],dx
  41b421:	arpl   WORD PTR [esi+ecx*4-0x4b],bx
  41b425:	xchg   edi,eax
  41b426:	cs add dl,bl
  41b429:	inc    edx
  41b42a:	in     eax,0x95
  41b42c:	xchg   ecx,eax
  41b42d:	(bad)  
  41b42e:	xor    ebp,DWORD PTR [ebx]
  41b430:	xchg   DWORD PTR [esi+0x69],esp
  41b433:	cmp    BYTE PTR [esp+esi*2+0x12c2e944],0xc9
  41b43b:	dec    eax
  41b43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b43d:	xor    DWORD PTR [ebp-0x37],0x9f58b806
  41b444:	sbb    al,bl
  41b446:	imul   eax,DWORD PTR [edx+0x2589fd91],0x53
  41b44d:	adc    edi,esp
  41b44f:	xchg   bl,dl
  41b451:	ins    DWORD PTR es:[edi],dx
  41b452:	mov    esp,0x84a3b1a2
  41b457:	xor    ch,BYTE PTR [edx]
  41b459:	gs dec ebp
  41b45b:	xor    al,0x9a
  41b45d:	scas   al,BYTE PTR es:[edi]
  41b45e:	retf   0x2056
  41b461:	and    DWORD PTR [ebx+eiz*4],ebx
  41b464:	mov    esp,0xc24f9b8a
  41b469:	xor    al,0x75
  41b46b:	ret    
  41b46c:	mov    ds:0xd4388466,al
  41b471:	pop    ebx
  41b472:	test   eax,0x99482b07
  41b477:	stc    
  41b478:	xor    al,0xc9
  41b47a:	ja     0x41b455
  41b47c:	jb     0x41b4a3
  41b47e:	out    0x9b,eax
  41b480:	xor    DWORD PTR [esi+0x15],ebp
  41b483:	aaa    
  41b484:	je     0x41b435
  41b486:	xchg   esp,eax
  41b487:	mov    eax,ds:0xf575253b
  41b48c:	out    dx,al
  41b48d:	outs   dx,DWORD PTR ds:[esi]
  41b48e:	jae    0x41b4be
  41b490:	fwait
  41b491:	mov    al,BYTE PTR [edx+0x72b87649]
  41b497:	push   ecx
  41b498:	sbb    BYTE PTR [edi+0x3241785b],al
  41b49e:	stos   BYTE PTR es:[edi],al
  41b49f:	mov    cx,0x1814
  41b4a3:	shl    DWORD PTR cs:[esi-0x5c],cl
  41b4a7:	(bad)  
  41b4a9:	and    eax,0x66040e5a
  41b4ae:	lods   al,BYTE PTR ds:[esi]
  41b4af:	leave  
  41b4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b1:	loopne 0x41b47c
  41b4b3:	ret    
  41b4b4:	out    dx,al
  41b4b5:	jne    0x41b48d
  41b4b7:	std    
  41b4b8:	rol    DWORD PTR [ebx+0x7e],cl
  41b4bb:	daa    
  41b4bc:	cmp    BYTE PTR [edi+edi*4-0x52],ch
  41b4c0:	enter  0xae66,0xa1
  41b4c4:	mov    eax,ds:0x72c1e5e2
  41b4c9:	mov    edx,0x9fbab633
  41b4ce:	jne    0x41b520
  41b4d0:	repz out dx,eax
  41b4d2:	loope  0x41b53f
  41b4d4:	jb     0x41b498
  41b4d6:	mov    eax,ds:0x6abc2966
  41b4db:	push   edi
  41b4dc:	adc    cl,BYTE PTR [esi-0x30]
  41b4df:	es jp  0x41b551
  41b4e2:	sbb    BYTE PTR [esi-0x15],ah
  41b4e5:	dec    eax
  41b4e6:	retfw  
  41b4e8:	jecxz  0x41b471
  41b4ea:	inc    ebp
  41b4eb:	data16 jg 0x41b4da
  41b4ee:	mov    esi,0xa91d357
  41b4f3:	push   esi
  41b4f4:	inc    BYTE PTR [ecx]
  41b4f6:	sub    BYTE PTR ds:0x39e56564,ah
  41b4fc:	xor    DWORD PTR [esi+0x6439c684],ecx
  41b502:	adc    DWORD PTR [ebx+0x757cef],0x7f2e1168
  41b50c:	mov    edx,0x467f6f66
  41b511:	push   ds
  41b512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b513:	mov    esp,0xabed9b80
  41b518:	pop    ebx
  41b519:	nop
  41b51a:	jne    0x41b510
  41b51c:	xchg   ecx,eax
  41b51d:	mov    bh,BYTE PTR [ecx+0x73]
  41b520:	xchg   ecx,ebx
  41b522:	frstor [esi+0x1c]
  41b525:	pop    eax
  41b526:	les    esp,FWORD PTR [ebx+edx*8+0x39]
  41b52a:	xchg   BYTE PTR [ebx+0x24],bl
  41b52d:	xor    dl,BYTE PTR [ebp+0x2a]
  41b530:	sti    
  41b531:	fsubr  DWORD PTR gs:[ecx-0xe670723]
  41b538:	add    al,0xa3
  41b53a:	dec    ebp
  41b53b:	sbb    BYTE PTR [edx+0x33397294],0x2a
  41b542:	retf   
  41b543:	sub    al,0xe3
  41b545:	imul   edx,DWORD PTR [esi-0x436719e7],0x5e
  41b54c:	mov    esp,0x58c9f576
  41b551:	dec    edi
  41b552:	pop    edx
  41b553:	dec    ebx
  41b554:	pop    ss
  41b555:	sbb    DWORD PTR [ebp-0x32],esi
  41b558:	mov    ecx,0x56dac049
  41b55d:	in     eax,dx
  41b55e:	inc    eax
  41b55f:	xor    ax,0xd338
  41b563:	jno    0x41b538
  41b565:	out    dx,al
  41b566:	ins    DWORD PTR es:[edi],dx
  41b567:	es or  bh,0x7b
  41b56b:	cld    
  41b56c:	xor    ah,BYTE PTR [ebp+0x62]
  41b56f:	dec    esi
  41b570:	push   esi
  41b571:	inc    ebx
  41b572:	loop   0x41b5e8
  41b574:	cdq    
  41b575:	test   bl,bl
  41b577:	arpl   WORD PTR [ecx+0x50],dx
  41b57a:	jb     0x41b5d6
  41b57c:	inc    ebx
  41b57d:	sti    
  41b57e:	mov    ecx,0x8265d0da
  41b583:	pop    esi
  41b584:	fdiv   st(7),st
  41b586:	add    DWORD PTR [ebx-0x321b8e5c],edi
  41b58c:	cmc    
  41b58d:	jmp    0x41b604
  41b58f:	push   0xfffffff3
  41b591:	jle    0x41b56e
  41b593:	cmc    
  41b594:	(bad)  
  41b595:	jo     0x41b5f9
  41b597:	popa   
  41b598:	jle    0x41b602
  41b59a:	and    al,0x90
  41b59c:	adc    bl,BYTE PTR [esi+0x45]
  41b59f:	sub    al,0x80
  41b5a1:	mov    dh,0xcb
  41b5a3:	pushw  0xe484
  41b5a7:	mov    bl,0x52
  41b5a9:	inc    esp
  41b5aa:	jp     0x41b615
  41b5ac:	jmp    ebp
  41b5ae:	jge    0x41b588
  41b5b0:	test   eax,0xeb333d4c
  41b5b5:	outs   dx,DWORD PTR ds:[esi]
  41b5b6:	jne    0x41b636
  41b5b8:	adc    ch,dl
  41b5ba:	int3   
  41b5bb:	xlat   BYTE PTR ds:[ebx]
  41b5bc:	pop    edx
  41b5bd:	gs dec ecx
  41b5bf:	jecxz  0x41b603
  41b5c1:	xchg   esi,eax
  41b5c2:	les    esi,FWORD PTR [edx]
  41b5c4:	cmp    DWORD PTR [ebx],0x16d7cb70
  41b5ca:	jne    0x41b568
  41b5cc:	dec    esp
  41b5cd:	mov    esp,0x1ccafb5f
  41b5d2:	lods   al,BYTE PTR ds:[esi]
  41b5d3:	addr16 pop edx
  41b5d5:	int3   
  41b5d6:	adc    esp,ecx
  41b5d8:	(bad)  
  41b5d9:	es push ebx
  41b5db:	imul   DWORD PTR [eax+0x3005f70f]
  41b5e1:	jns    0x41b574
  41b5e3:	or     eax,0x4c7530a2
  41b5e8:	lds    esp,FWORD PTR [ecx-0x1]
  41b5eb:	xchg   ebx,eax
  41b5ec:	push   eax
  41b5ed:	or     al,BYTE PTR [eax+esi*4]
  41b5f0:	imul   edx,DWORD PTR [eax+0x59d3a0c2],0x53
  41b5f7:	mov    esp,0x10ed2517
  41b5fc:	xor    BYTE PTR [ebp+0x12],ah
  41b5ff:	jno    0x41b592
  41b601:	(bad)  
  41b602:	nop
  41b603:	xchg   ebx,eax
  41b604:	(bad)
  41b607:	cmp    bh,ch
  41b609:	xchg   ecx,eax
  41b60a:	clc    
  41b60b:	ss (bad) 
  41b60d:	int3   
  41b60e:	jnp    0x41b68e
  41b610:	mov    esi,0xb321f5c0
  41b615:	xlat   BYTE PTR ds:[ebx]
  41b616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b617:	dec    si
  41b619:	jae    0x41b5ab
  41b61b:	push   edx
  41b61c:	rcr    DWORD PTR [ebx+esi*2-0xba4ab46],cl
  41b623:	call   0x6ed3:0xafc73adb
  41b62a:	mov    bh,0xbe
  41b62c:	std    
  41b62d:	inc    cx
  41b62f:	sub    al,0xd3
  41b631:	(bad)  
  41b632:	jmp    0x41b636
  41b634:	lods   al,BYTE PTR ds:[esi]
  41b635:	adc    ebp,ebp
  41b637:	sti    
  41b638:	jle    0x41b69f
  41b63a:	push   cs
  41b63b:	fdiv   st,st(7)
  41b63d:	push   ss
  41b63e:	inc    ebx
  41b63f:	fadd   QWORD PTR [esp+edx*8+0x5]
  41b643:	inc    edx
  41b644:	hlt    
  41b645:	mov    ebp,0x4193fd45
  41b64a:	(bad)  
  41b64b:	in     al,0x95
  41b64d:	mov    edi,ebx
  41b64f:	jmp    0x41b5f0
  41b651:	add    al,0x97
  41b653:	data16 loop 0x41b5fe
  41b656:	jns    0x41b5f6
  41b658:	sub    DWORD PTR [ecx+0x2c367ce7],0x72
  41b65f:	ret    0x98f3
  41b662:	int    0x44
  41b664:	cld    
  41b665:	or     DWORD PTR gs:[ebx+eiz*1-0x73],ecx
  41b66a:	jae    0x41b68f
  41b66c:	push   eax
  41b66d:	loope  0x41b666
  41b66f:	or     bh,al
  41b671:	xchg   ebp,eax
  41b672:	xchg   ebx,eax
  41b673:	and    eax,0xef6e669e
  41b678:	pop    ss
  41b679:	call   0x26cc6bbc
  41b67e:	inc    edi
  41b67f:	callw  0x1568
  41b683:	fwait
  41b684:	cmc    
  41b685:	add    esi,eax
  41b687:	xlat   BYTE PTR ds:[ebx]
  41b688:	ret    
  41b689:	test   ah,bl
  41b68b:	pop    edx
  41b68c:	pusha  
  41b68d:	gs adc esp,ebx
  41b690:	mov    ah,0x89
  41b692:	je     0x41b644
  41b694:	in     al,0xbe
  41b696:	pop    esi
  41b697:	psubusb mm7,QWORD PTR [edi]
  41b69a:	jne    0x41b71b
  41b69c:	xchg   edi,eax
  41b69d:	pop    ebx
  41b69e:	(bad)  
  41b6a0:	adc    dl,bh
  41b6a2:	(bad)  
  41b6a3:	and    edx,DWORD PTR [bp+si+0x29]
  41b6a7:	aaa    
  41b6a8:	adc    dh,BYTE PTR [ecx-0x23]
  41b6ab:	push   esi
  41b6ac:	out    dx,al
  41b6ad:	or     eax,ebx
  41b6af:	and    DWORD PTR [esi-0x97db083],eax
  41b6b5:	inc    eax
  41b6b6:	xor    al,0xe6
  41b6b8:	jmp    0x13d2b77e
  41b6bd:	test   eax,0xb704bfa0
  41b6c2:	push   0xfffffffe
  41b6c4:	mov    cl,0x16
  41b6c6:	jne    0x41b689
  41b6c8:	push   esp
  41b6c9:	and    BYTE PTR [esi+edx*1+0x66e301c3],bl
  41b6d0:	adc    eax,0xd31f749c
  41b6d5:	jg     0x41b678
  41b6d7:	mov    ds:0xeba0d80b,eax
  41b6dc:	mov    edi,0xa1cf6a8a
  41b6e1:	aas    
  41b6e2:	mul    DWORD PTR [edi+0x34]
  41b6e5:	cdq    
  41b6e6:	push   0x5ed3e924
  41b6eb:	dec    esi
  41b6ec:	leave  
  41b6ed:	xor    esi,DWORD PTR [ebp+0x25]
  41b6f0:	sub    eax,0xeb968520
  41b6f5:	jmp    DWORD PTR [edi]
  41b6f7:	xchg   ecx,eax
  41b6f8:	stos   BYTE PTR es:[edi],al
  41b6f9:	in     eax,0xfd
  41b6fb:	loopne 0x41b6cf
  41b6fd:	mov    ds:0xe8d356ba,eax
  41b702:	in     eax,0x8b
  41b704:	mov    ss,WORD PTR [ecx+0x6530d1e4]
  41b70a:	push   ecx
  41b70b:	and    al,0x62
  41b70d:	dec    ebx
  41b70e:	push   0xffffffe0
  41b710:	mov    BYTE PTR [eax],bl
  41b712:	mov    ah,0x5e
  41b714:	push   es
  41b715:	mov    BYTE PTR [ebp-0xf],dh
  41b718:	xchg   edi,eax
  41b719:	pop    edi
  41b71a:	xchg   ebp,eax
  41b71b:	mov    DWORD PTR [edi-0x3398cbc1],esi
  41b721:	lock add BYTE PTR [eax-0x7d],0xe0
  41b726:	hlt    
  41b727:	jno    0x41b70b
  41b729:	int3   
  41b72a:	call   0xa3b1:0x1f4dc286
  41b731:	not    BYTE PTR [ecx-0x65]
  41b734:	aad    0x66
  41b736:	rol    ebx,0x70
  41b739:	call   0x4f49fb7c
  41b73e:	cli    
  41b73f:	jl     0x41b7b4
  41b741:	mov    edi,0x2b7a3e75
  41b746:	in     eax,0x18
  41b748:	mov    ch,0xe4
  41b74a:	adc    ah,BYTE PTR [esi-0x1a]
  41b74d:	imul   edx,ebp,0x40afd349
  41b753:	adc    BYTE PTR [ecx-0x17],cl
  41b756:	into   
  41b757:	lahf   
  41b758:	aad    0x66
  41b75a:	ss sbb al,0x8d
  41b75d:	ins    BYTE PTR es:[edi],dx
  41b75e:	sbb    DWORD PTR ds:0x57dea24d,ebx
  41b764:	dec    esi
  41b765:	pusha  
  41b766:	jne    0x41b751
  41b768:	jp     0x41b766
  41b76a:	inc    ebp
  41b76b:	idiv   DWORD PTR [edx-0x6e99dc1f]
  41b771:	je     0x41b6f7
  41b773:	pushf  
  41b774:	cmc    
  41b775:	adc    bh,BYTE PTR [ecx-0x5b13556d]
  41b77b:	les    edx,FWORD PTR [ebp+0x6e35b186]
  41b781:	xchg   esp,eax
  41b782:	push   edi
  41b783:	pop    esp
  41b784:	xchg   ebx,eax
  41b785:	lods   al,BYTE PTR ds:[esi]
  41b786:	cmp    DWORD PTR [esi+esi*2-0x21],esp
  41b78a:	rol    cl,cl
  41b78c:	rcr    dl,1
  41b78e:	xor    eax,0x75829b2c
  41b793:	mov    esi,0x9ee452d2
  41b798:	(bad)  
  41b79a:	fldenv [esi+0x1c]
  41b79d:	xchg   edx,eax
  41b79e:	imul   edi,DWORD PTR [ecx-0x2d],0xfffffff9
  41b7a2:	fadd   st,st(4)
  41b7a4:	xlat   BYTE PTR ds:[ebx]
  41b7a5:	les    esp,FWORD PTR [ebp-0x229ed0d8]
  41b7ab:	and    ebp,ecx
  41b7ad:	imul   edx,DWORD PTR [ebp-0x60],0xe163cb4d
  41b7b4:	rcl    BYTE PTR [eax+0x60],1
  41b7b7:	in     al,0xb0
  41b7b9:	call   0x87193b78
  41b7be:	fdiv   st,st(1)
  41b7c0:	xchg   ebx,eax
  41b7c1:	jl     0x41b7d6
  41b7c3:	nop
  41b7c4:	xchg   ebx,eax
  41b7c5:	sub    al,0x9c
  41b7c7:	dec    ebp
  41b7c8:	pop    ds
  41b7c9:	mov    al,0xc7
  41b7cb:	clc    
  41b7cc:	(bad)  [ecx-0x67]
  41b7cf:	das    
  41b7d0:	cmc    
  41b7d1:	and    ebp,esi
  41b7d3:	(bad)  
  41b7d5:	ins    BYTE PTR es:[edi],dx
  41b7d6:	popf   
  41b7d7:	int    0x4b
  41b7d9:	jg     0x41b763
  41b7db:	lea    esi,[eax]
  41b7dd:	xlat   BYTE PTR ds:[ebx]
  41b7de:	dec    ebx
  41b7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e0:	rol    ecx,cl
  41b7e2:	dec    ecx
  41b7e3:	and    esp,DWORD PTR [ebp-0x175e4cf]
  41b7e9:	push   esp
  41b7ea:	jge    0x41b7b1
  41b7ec:	sbb    dh,bh
  41b7ee:	push   esp
  41b7ef:	rcl    DWORD PTR [edx],1
  41b7f1:	dec    esi
  41b7f2:	adc    eax,0xb612d33c
  41b7f7:	fidiv  DWORD PTR [edx]
  41b7f9:	stos   BYTE PTR es:[edi],al
  41b7fa:	ss dec esp
  41b7fc:	mov    WORD PTR [edx+0x1c],gs
  41b7ff:	fcomp  QWORD PTR [edx-0x2b]
  41b802:	xchg   ebx,eax
  41b803:	xchg   edx,eax
  41b804:	out    dx,al
  41b805:	test   eax,0x48b9f85
  41b80a:	push   ebp
  41b80b:	pop    eax
  41b80c:	sahf   
  41b80d:	int    0x54
  41b80f:	imul   edx,DWORD PTR [ebp-0x6b]
  41b813:	sub    eax,0xf5260c31
  41b818:	xchg   edi,eax
  41b819:	cld    
  41b81a:	adc    eax,0xf4ea43d5
  41b81f:	test   edi,0x659575ee
  41b825:	in     eax,0x87
  41b827:	fstp   QWORD PTR [ebp+0x19]
  41b82a:	mov    ebx,0x50c94366
  41b82f:	cmp    eax,0x22b40ed3
  41b834:	hlt    
  41b835:	sub    dl,ah
  41b837:	rol    BYTE PTR [esi],1
  41b839:	push   esp
  41b83a:	sbb    eax,0xe1f9dcbd
  41b83f:	pop    ebx
  41b840:	repz sub al,0xb
  41b843:	jbe    0x41b7d9
  41b845:	outs   dx,BYTE PTR ds:[esi]
  41b846:	cmp    al,0xc
  41b848:	shl    ah,1
  41b84a:	ja     0x41b821
  41b84c:	fld    DWORD PTR [esi+0x66b2d3fd]
  41b852:	js     0x41b86c
  41b854:	lods   eax,DWORD PTR ds:[esi]
  41b855:	(bad)  
  41b856:	ret    
  41b857:	push   esi
  41b858:	clc    
  41b859:	cmp    BYTE PTR [esi],cl
  41b85b:	into   
  41b85c:	cwde   
  41b85d:	and    esi,DWORD PTR [ebp+0x2c]
  41b860:	mov    edx,0x8baec6a5
  41b865:	xor    DWORD PTR [ecx],ecx
  41b867:	mov    eax,ds:0x1d77f7d5
  41b86c:	adc    ebx,esp
  41b86e:	lds    ebx,FWORD PTR [eax]
  41b870:	shl    DWORD PTR [edx],1
  41b872:	fld    QWORD PTR [edx+eiz*1+0x5269a009]
  41b879:	mov    al,ds:0xc5b745f8
  41b87e:	push   eax
  41b87f:	out    0xa,al
  41b881:	test   DWORD PTR [eax+0x7c06e366],ebp
  41b887:	dec    edx
  41b888:	sar    DWORD PTR [edx+ebx*4],cl
  41b88b:	xchg   edi,eax
  41b88c:	cmp    eax,0xe97ab45f
  41b891:	gs stc 
  41b893:	and    DWORD PTR [eax-0x70554025],esp
  41b899:	dec    edx
  41b89a:	div    esi
  41b89c:	stos   DWORD PTR es:[edi],eax
  41b89d:	js     0x41b913
  41b89f:	pop    ds
  41b8a0:	xchg   ebx,eax
  41b8a1:	call   0x3631:0x66900431
  41b8a8:	mov    dl,0x2f
  41b8aa:	or     ecx,DWORD PTR [ebx]
  41b8ac:	xchg   ebp,eax
  41b8ad:	lahf   
  41b8ae:	jecxz  0x41b913
  41b8b0:	add    al,0xd
  41b8b2:	jne    0x41b8fa
  41b8b4:	adc    ch,BYTE PTR [esi+0xc]
  41b8b7:	out    0xd,eax
  41b8b9:	mov    dl,0x51
  41b8bb:	data16 jl 0x41b87f
  41b8be:	daa    
  41b8bf:	int    0xd3
  41b8c1:	jo     0x41b87b
  41b8c3:	adc    eax,DWORD PTR [ebx]
  41b8c5:	mov    ah,0x77
  41b8c7:	inc    ecx
  41b8c8:	sbb    ah,BYTE PTR [esi+0x7a]
  41b8cb:	mov    bl,0x8a
  41b8cd:	imul   esp,DWORD PTR [ebp-0x18],0xffffffca
  41b8d1:	mov    es,edi
  41b8d3:	mov    edx,0xe1f7d8d3
  41b8d8:	lock (bad) 
  41b8da:	jecxz  0x41b94a
  41b8dc:	test   al,0x61
  41b8de:	sbb    DWORD PTR [ebp+esi*1-0x44c7531d],ecx
  41b8e5:	loope  0x41b8e4
  41b8e7:	into   
  41b8e8:	rcr    esp,cl
  41b8ea:	repnz popf 
  41b8ec:	mov    eax,0xa8c89933
  41b8f1:	(bad)  
  41b8f2:	ss pop ebp
  41b8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f5:	data16 mov ds:0xb593a648,al
  41b8fb:	dec    edx
  41b8fc:	push   ds
  41b8fd:	dec    edx
  41b8fe:	loope  0x41b908
  41b900:	repnz inc ebx
  41b902:	jne    0x41b954
  41b904:	stos   DWORD PTR es:[edi],eax
  41b905:	xchg   DWORD PTR [ebx],eax
  41b907:	(bad)  
  41b908:	repnz xor dl,BYTE PTR [esi+0x67]
  41b90c:	xchg   edx,eax
  41b90d:	jecxz  0x41b89c
  41b90f:	aaa    
  41b910:	push   eax
  41b911:	mov    WORD PTR [ecx-0x56927a82],fs
  41b917:	stc    
  41b918:	push   ebx
  41b919:	js     0x41b935
  41b91b:	jmp    0x2aec:0xca85881e
  41b922:	(bad)  
  41b923:	xchg   ecx,eax
  41b924:	nop
  41b925:	ins    DWORD PTR es:[edi],dx
  41b926:	into   
  41b927:	xchg   ebx,eax
  41b928:	xor    eax,0xd36ac605
  41b92d:	mov    cl,0xcc
  41b92f:	xchg   DWORD PTR [eax-0x34],edi
  41b932:	mov    al,dh
  41b934:	mov    ebx,0x978a061
  41b939:	or     DWORD PTR [edx+edi*8-0x48fd9c25],edi
  41b940:	lds    edi,FWORD PTR [ebx]
  41b942:	jmp    0x41b8c7
  41b944:	xor    eax,0x565d7610
  41b949:	jge    0x41b93d
  41b94b:	enter  0x652e,0x5f
  41b94f:	xchg   dl,ch
  41b951:	int    0x94
  41b953:	add    eax,0xfa562eeb
  41b958:	inc    esp
  41b959:	test   DWORD PTR [ebp+0x77],esi
  41b95c:	adc    al,0xd2
  41b95e:	add    eax,0x991b312b
  41b963:	data16 fisub WORD PTR [edx+0x72]
  41b967:	int    0xd3
  41b969:	push   ebx
  41b96a:	ficom  WORD PTR [edi]
  41b96c:	rcr    BYTE PTR [edi+ecx*1],0xaf
  41b970:	out    0x65,al
  41b972:	imul   edx,DWORD PTR [edi-0x5600fdcf],0xffffffa2
  41b979:	cs pusha 
  41b97b:	pop    esp
  41b97c:	pop    esp
  41b97d:	dec    edx
  41b97e:	jne    0x41b933
  41b980:	jnp    0x41b9f9
  41b982:	fldcw  WORD PTR [esi]
  41b984:	and    esp,DWORD PTR [ebp+0x32]
  41b987:	je     0x41b914
  41b989:	mov    edx,0x4c5f53a9
  41b98e:	add    BYTE PTR [ecx+0x4975d1b5],al
  41b994:	dec    eax
  41b995:	mov    dh,0xf7
  41b997:	and    DWORD PTR [ecx-0x7a],ecx
  41b99a:	std    
  41b99b:	data16 stc 
  41b99d:	mov    ah,BYTE PTR [esi+0x36821520]
  41b9a3:	shl    BYTE PTR [edx+0x3a],0x5f
  41b9a7:	out    0x18,al
  41b9a9:	lods   al,BYTE PTR ds:[esi]
  41b9aa:	out    0x8a,al
  41b9ac:	jmp    FWORD PTR [ebp-0x1]
  41b9af:	data16 std 
  41b9b1:	push   es
  41b9b2:	lahf   
  41b9b3:	nop
  41b9b4:	in     eax,0x8d
  41b9b6:	adc    edi,esi
  41b9b8:	mov    WORD PTR [edx+0x38],ds
  41b9bb:	pop    edx
  41b9bc:	retf   0x35c8
  41b9bf:	fstp   QWORD PTR [edi]
  41b9c1:	gs pop ecx
  41b9c3:	lds    ebx,FWORD PTR [ebp+0x42fa070b]
  41b9c9:	xchg   BYTE PTR ds:0x4314d3c8,ah
  41b9cf:	test   BYTE PTR [eax-0x5f],al
  41b9d2:	push   eax
  41b9d3:	jo     0x41b95d
  41b9d5:	push   cx
  41b9d7:	test   al,0xd0
  41b9d9:	(bad)  
  41b9da:	cld    
  41b9db:	mov    BYTE PTR [edx],bh
  41b9dd:	enter  0x7f58,0x66
  41b9e1:	mov    al,ds:0xc464d75
  41b9e6:	adc    al,0x47
  41b9e8:	pop    ds
  41b9e9:	div    BYTE PTR [eax-0x54422c93]
  41b9ef:	arpl   WORD PTR [ebp-0x7cb39a25],bp
  41b9f5:	pop    ebx
  41b9f6:	jne    0x41ba16
  41b9f8:	shr    BYTE PTR [ecx+0x4cbf2477],0x7d
  41b9ff:	mov    si,0x1c1
  41ba03:	or     DWORD PTR [edi+esi*2],edx
  41ba06:	fst    DWORD PTR [edi+0x49]
  41ba09:	out    dx,eax
  41ba0a:	dec    esi
  41ba0b:	data16 (bad) 
  41ba0d:	in     eax,dx
  41ba0e:	retf   
  41ba0f:	loop   0x41ba8f
  41ba11:	jmp    0x619b5b45
  41ba16:	push   0x60
  41ba18:	push   ds
  41ba19:	inc    esp
  41ba1a:	jo     0x41ba06
  41ba1c:	cmp    edi,DWORD PTR [eax+0x244e66ec]
  41ba22:	mov    WORD PTR [eax-0x358a2952],?
  41ba28:	sub    cl,BYTE PTR [ebp+ecx*4+0x24bd959e]
  41ba2f:	pushw  0x57
  41ba32:	pop    edx
  41ba33:	ror    BYTE PTR [bp+di+0x79],cl
  41ba37:	outs   dx,BYTE PTR ds:[esi]
  41ba38:	jecxz  0x41b9df
  41ba3a:	pushf  
  41ba3b:	nop
  41ba3c:	dec    edx
  41ba3d:	cmp    dh,ah
  41ba3f:	rcr    BYTE PTR [ecx-0x7b625169],1
  41ba45:	mov    ecx,0xbdf3fdf5
  41ba4a:	fist   DWORD PTR [eax]
  41ba4c:	inc    eax
  41ba4d:	fist   WORD PTR [edi+0x74]
  41ba50:	jmp    0xcb28:0x13375355
  41ba57:	mov    cl,0x7b
  41ba59:	sbb    al,0x55
  41ba5b:	mov    dl,0xcb
  41ba5d:	xor    dh,BYTE PTR [eax-0x6b]
  41ba60:	shl    ecx,cl
  41ba62:	mov    dh,0x7a
  41ba64:	mov    bh,0x8
  41ba66:	mov    edi,0xf47adeed
  41ba6b:	and    edx,ebx
  41ba6d:	mov    esi,0xea7f1132
  41ba72:	ins    BYTE PTR es:[edi],dx
  41ba73:	hlt    
  41ba74:	push   0x3f
  41ba76:	jno    0x41ba8c
  41ba78:	push   ebx
  41ba79:	sub    bh,BYTE PTR [edi+0x3e]
  41ba7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba7d:	cld    
  41ba7e:	(bad)  
  41ba7f:	ss loop 0x41ba51
  41ba82:	les    esp,FWORD PTR [ebp-0x1b7f592b]
  41ba88:	cmp    BYTE PTR ss:[ebx+0x29ec71d5],ch
  41ba8f:	adc    esi,0x63a63302
  41ba95:	fld    TBYTE PTR [esi+edi*1+0x2c]
  41ba99:	xchg   DWORD PTR [ebx+0x760f2be4],ebx
  41ba9f:	out    dx,eax
  41baa0:	jp     0x41bb03
  41baa2:	cwde   
  41baa3:	jle    0x41ba9b
  41baa5:	sub    BYTE PTR ds:0x3f546166,bh
  41baab:	adc    edx,edx
  41baad:	mov    esi,0x52516b97
  41bab2:	pop    eax
  41bab3:	and    eax,0xe195653c
  41bab8:	dec    ebp
  41bab9:	mov    cl,BYTE PTR [edx+0x74]
  41babc:	xchg   ebx,eax
  41babd:	sbb    DWORD PTR [eax+edi*8],eax
  41bac0:	js     0x41ba81
  41bac2:	jne    0x41bb3c
  41bac4:	xor    cl,BYTE PTR [edx+ebx*1]
  41bac7:	push   es
  41bac8:	fiadd  WORD PTR [ecx+0x10216607]
  41bace:	int    0xb
  41bad0:	enter  0xaced,0x65
  41bad4:	sub    DWORD PTR [esi+0x75],0xffffffde
  41bad8:	lea    edx,[ebp+0x65]
  41badb:	inc    ebx
  41badc:	ins    BYTE PTR es:[edi],dx
  41badd:	pop    edx
  41bade:	xor    al,0x66
  41bae0:	inc    esi
  41bae1:	and    eax,DWORD PTR [esi]
  41bae3:	sar    DWORD PTR [bx-0x5963],cl
  41bae8:	clc    
  41bae9:	dec    ebp
  41baea:	push   ss
  41baeb:	hlt    
  41baec:	int3   
  41baed:	push   esp
  41baee:	repnz mov ebp,0x2bec83f6
  41baf4:	shl    BYTE PTR [edi],cl
  41baf6:	push   cs
  41baf7:	fs sbb bl,ah
  41bafa:	pop    ecx
  41bafb:	outs   dx,DWORD PTR ds:[esi]
  41bafc:	shl    DWORD PTR [eax-0xdc21db7],cl
  41bb02:	jae    0x41bae1
  41bb04:	lods   al,BYTE PTR ds:[esi]
  41bb05:	data16 add dl,ch
  41bb08:	jmp    0x41bb54
  41bb0a:	shl    BYTE PTR [ebx+0x52a87561],1
  41bb10:	loopne 0x41baf7
  41bb12:	jne    0x41bb42
  41bb14:	mov    edx,0x5a75bd91
  41bb19:	push   ebx
  41bb1a:	out    0x44,al
  41bb1c:	push   es
  41bb1d:	pusha  
  41bb1e:	gs cdq 
  41bb20:	popa   
  41bb21:	or     ebp,DWORD PTR [eax+0x3da6f7fd]
  41bb27:	call   FWORD PTR [ebp+0x4b]
  41bb2a:	jne    0x41bad3
  41bb2c:	arpl   WORD PTR [eax+0x1b],ax
  41bb2f:	add    DWORD PTR [ebp+0xa],0x64
  41bb33:	popa   
  41bb34:	jge    0x41bab7
  41bb36:	cmp    eax,0xf44e5a02
  41bb3b:	js     0x41bb4f
  41bb3d:	dec    edi
  41bb3e:	jne    0x41bb61
  41bb40:	xor    edx,DWORD PTR [edi-0x1a724f00]
  41bb46:	ja     0x41bba9
  41bb48:	jb     0x41bbb9
  41bb4a:	imul   esp,DWORD PTR [ebx],0xfffffff5
  41bb4d:	ins    BYTE PTR es:[edi],dx
  41bb4e:	and    BYTE PTR [ebp-0x772ef6d],dl
  41bb54:	dec    ebp
  41bb55:	test   DWORD PTR [edx+0x14],ecx
  41bb58:	loop   0x41bb5a
  41bb5a:	dec    ecx
  41bb5b:	dec    ax
  41bb5d:	or     edx,DWORD PTR [ebx+0x25d9d389]
  41bb63:	cmp    DWORD PTR [edx],esi
  41bb65:	push   DWORD PTR [ebp+0x3665743f]
  41bb6b:	push   ebx
  41bb6c:	les    edi,FWORD PTR ss:[edi+0x1f]
  41bb70:	jp     0x41bbaf
  41bb72:	xor    al,0xf0
  41bb74:	lahf   
  41bb75:	jns    0x41bbe9
  41bb77:	imul   ebx,DWORD PTR [ecx],0x70
  41bb7a:	mov    ds:0x7531770f,eax
  41bb7f:	xor    DWORD PTR [ebp-0x1e68389a],0xc59fccac
  41bb89:	gs mov edx,0xa93aa83a
  41bb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb90:	sub    ecx,esi
  41bb92:	gs cwd 
  41bb95:	into   
  41bb96:	mov    ebp,0x85603487
  41bb9b:	lods   eax,DWORD PTR ds:[esi]
  41bb9c:	bound  ebx,QWORD PTR [ecx]
  41bb9e:	std    
  41bb9f:	add    bl,dl
  41bba1:	add    BYTE PTR [ecx+0x68],cl
  41bba4:	ror    ebx,cl
  41bba6:	xchg   ecx,eax
  41bba7:	xor    eax,0x5a78d7e0
  41bbac:	sub    eax,0x3fa1c65
  41bbb1:	dec    ebp
  41bbb2:	cmp    DWORD PTR [eax+0x5],0x38
  41bbb6:	sbb    dh,BYTE PTR [ebp+0x73720d35]
  41bbbc:	mov    bl,0xbe
  41bbbe:	(bad)  
  41bbbf:	loope  0x41bb4f
  41bbc1:	inc    ebx
  41bbc2:	pop    esi
  41bbc3:	or     eax,0xd204c913
  41bbc8:	shl    DWORD PTR [eax],cl
  41bbca:	rcl    BYTE PTR ds:0x8d335574,cl
  41bbd0:	fisub  DWORD PTR [esi-0x78]
  41bbd3:	cmc    
  41bbd4:	test   BYTE PTR [esi],0x4c
  41bbd7:	or     BYTE PTR [edx],al
  41bbd9:	pushf  
  41bbda:	mov    dh,0xdc
  41bbdc:	mov    WORD PTR [edx+0x75],?
  41bbdf:	ret    
  41bbe0:	gs cmp al,0x92
  41bbe3:	push   ebx
  41bbe4:	ret    0x68cb
  41bbe7:	popa   
  41bbe8:	rcr    BYTE PTR [ebx],0x25
  41bbeb:	test   DWORD PTR [edx+eiz*4+0x31],ebx
  41bbef:	test   al,0x7e
  41bbf1:	add    eax,0x642f6775
  41bbf6:	mov    dl,0x89
  41bbf8:	xchg   esi,eax
  41bbf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbfa:	stos   DWORD PTR es:[edi],eax
  41bbfb:	data16 sbb BYTE PTR [ebx],bl
  41bbfe:	cmp    al,0x62
  41bc00:	shr    DWORD PTR [ebp+0x90847ad],cl
  41bc06:	add    eax,0x246504a5
  41bc0b:	dec    ecx
  41bc0c:	inc    esi
  41bc0d:	add    al,0x74
  41bc0f:	cwde   
  41bc10:	push   ds
  41bc11:	push   edx
  41bc12:	jo     0x41bc69
  41bc14:	fbstp  TBYTE PTR ds:[ebp+0x33]
  41bc18:	sti    
  41bc19:	call   0x6b1f0e07
  41bc1e:	and    BYTE PTR [esi+0x4],0xd4
  41bc22:	stos   BYTE PTR es:[edi],al
  41bc23:	jbe    0x41bbf8
  41bc25:	push   ds
  41bc26:	(bad)  
  41bc27:	xor    al,0xf0
  41bc29:	popa   
  41bc2a:	xchg   ebp,eax
  41bc2b:	repnz test eax,0xe42af466
  41bc31:	loop   0x41bbb4
  41bc33:	xchg   esp,eax
  41bc34:	inc    esp
  41bc35:	push   ss
  41bc36:	cli    
  41bc37:	ror    BYTE PTR [edi-0x9168a25],0xc2
  41bc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3f:	add    DWORD PTR [eax-0x5e],0x7f
  41bc43:	ror    BYTE PTR [bp+di+0x3f09],0xd3
  41bc49:	xor    dh,cl
  41bc4b:	int    0x2d
  41bc4d:	sub    eax,0xa5b3161a
  41bc52:	pcmpgtd mm7,mm0
  41bc55:	sar    DWORD PTR [eax-0x531a2c8a],cl
  41bc5b:	xchg   esp,eax
  41bc5c:	dec    ah
  41bc5e:	or     eax,esi
  41bc60:	loopne 0x41bcc7
  41bc62:	repz sub al,0x65
  41bc65:	in     al,dx
  41bc66:	pop    esi
  41bc67:	and    DWORD PTR [ebx+0x47829179],ebp
  41bc6d:	mov    dh,BYTE PTR [ebp-0x1c]
  41bc70:	adc    BYTE PTR [edi-0x42],bl
  41bc73:	jnp    0x41bcc3
  41bc75:	in     eax,0x2c
  41bc77:	gs lahf 
  41bc79:	gs das 
  41bc7b:	and    esi,DWORD PTR [edx+0x5ba5766]
  41bc81:	arpl   WORD PTR [eax-0x78994e65],ax
  41bc87:	push   ss
  41bc88:	(bad)  
  41bc89:	out    dx,eax
  41bc8a:	and    BYTE PTR [ebp+0x75],0x57
  41bc8e:	sbb    BYTE PTR [edi+0x76751d3f],dh
  41bc94:	and    al,0xba
  41bc96:	add    eax,0x8e87c16d
  41bc9b:	cmp    cl,0xc0
  41bc9e:	ss in  eax,0xab
  41bca1:	xor    cl,BYTE PTR [edi+0x1ba2d381]
  41bca7:	mov    ebx,0x104d6ed5
  41bcac:	clc    
  41bcad:	ins    BYTE PTR es:[edi],dx
  41bcae:	cwde   
  41bcaf:	mov    BYTE PTR [ebp*4-0x1aad59f0],0x8e
  41bcb7:	xor    ebx,esp
  41bcb9:	push   ss
  41bcba:	or     DWORD PTR [edx],0xffffffd3
  41bcbd:	sub    edi,DWORD PTR [edi-0x36f769e0]
  41bcc3:	xchg   edx,eax
  41bcc4:	sbb    dh,BYTE PTR [ebp-0x6f]
  41bcc7:	in     al,0xe1
  41bcc9:	jo     0x41bc8c
  41bccb:	test   DWORD PTR [di],edx
  41bcce:	bswap  ecx
  41bcd0:	in     al,dx
  41bcd1:	lea    esi,[eax]
  41bcd3:	not    ebx
  41bcd5:	pop    ebp
  41bcd6:	ins    BYTE PTR es:[edi],dx
  41bcd7:	sub    dl,dh
  41bcd9:	scas   eax,DWORD PTR es:[edi]
  41bcda:	repz adc DWORD PTR [edx-0x3e92b49a],ebp
  41bce1:	sub    DWORD PTR [ecx],0x9
  41bce4:	sbb    ebx,eax
  41bce6:	or     ebp,esp
  41bce8:	inc    ebp
  41bce9:	gs mov esp,0xfdc77c60
  41bcef:	sbb    cl,dh
  41bcf1:	mov    ss,WORD PTR [esi+0x2b054fcd]
  41bcf7:	les    di,DWORD PTR [eax+0x32]
  41bcfb:	clc    
  41bcfc:	rcl    DWORD PTR ds:0x9e278628,cl
  41bd02:	mov    ds:0x386c1fe5,al
  41bd07:	or     eax,0xb0917190
  41bd0c:	and    BYTE PTR [ecx-0x182c7976],0xae
  41bd13:	scas   eax,DWORD PTR es:[edi]
  41bd14:	enter  0x6236,0xf7
  41bd18:	fbld   TBYTE PTR [esi+0x4a]
  41bd1b:	mov    ds:0x1402aaaa,al
  41bd20:	ins    DWORD PTR es:[edi],dx
  41bd21:	pop    ebp
  41bd22:	outs   dx,DWORD PTR ds:[esi]
  41bd23:	sbb    ah,ah
  41bd25:	mov    ecx,0xfcb8e975
  41bd2a:	enter  0xef59,0x97
  41bd2e:	xchg   DWORD PTR [esi+0x7d],esp
  41bd31:	xor    bh,ch
  41bd33:	call   0x1506:0x67cc577a
  41bd3a:	outs   dx,BYTE PTR ds:[esi]
  41bd3b:	dec    ebp
  41bd3c:	and    al,0x63
  41bd3e:	sub    al,0x66
  41bd40:	xchg   edi,eax
  41bd41:	popa   
  41bd42:	and    eax,DWORD PTR [ecx]
  41bd44:	and    BYTE PTR [ecx+ebp*2],bl
  41bd47:	ficom  WORD PTR [ebx-0x77]
  41bd4a:	xor    BYTE PTR [esi],cl
  41bd4c:	shl    BYTE PTR [esi-0x4b],1
  41bd4f:	mov    eax,ds:0x417d4f94
  41bd54:	push   ebx
  41bd55:	mov    ebp,0x17cfb534
  41bd5a:	mov    DWORD PTR [ecx-0x2d],edi
  41bd5d:	(bad)  
  41bd5e:	gs sar esi,cl
  41bd61:	test   esp,ebp
  41bd63:	rcr    ebx,cl
  41bd65:	(bad)  
  41bd66:	stos   BYTE PTR es:[edi],al
  41bd67:	leave  
  41bd68:	sbb    al,0xfb
  41bd6a:	(bad)  [esi+0x37]
  41bd6d:	jns    0x41bd3c
  41bd6f:	pop    ebx
  41bd70:	jmp    0x11f9:0x5cc330fe
  41bd77:	fcom   QWORD PTR [eax-0x38ff0a3f]
  41bd7d:	mov    ch,0x6a
  41bd7f:	mov    esi,0x7377a743
  41bd84:	mov    bl,0xad
  41bd86:	call   0x9f7ca362
  41bd8b:	sub    al,0xff
  41bd8d:	inc    ebp
  41bd8e:	mov    ah,0x3c
  41bd90:	div    BYTE PTR [ebx]
  41bd92:	push   edi
  41bd93:	(bad)  
  41bd94:	aam    0x10
  41bd96:	pop    ebx
  41bd97:	adc    ax,sp
  41bd9a:	loopne 0x41bdf9
  41bd9c:	rcr    DWORD PTR [edi+0x205f20d3],cl
  41bda2:	mov    ss,WORD PTR [eax+0x4f1cfa8e]
  41bda8:	sbb    DWORD PTR [eax+eax*1],esp
  41bdab:	inc    dx
  41bdad:	daa    
  41bdae:	mov    bl,0x41
  41bdb0:	shl    DWORD PTR [ecx+0x56],cl
  41bdb3:	loop   0x41bd6a
  41bdb5:	(bad)  
  41bdb6:	push   cs
  41bdb7:	aam    0x48
  41bdb9:	icebp  
  41bdba:	mov    dl,0x63
  41bdbc:	stos   DWORD PTR es:[edi],eax
  41bdbd:	shr    DWORD PTR [esi],1
  41bdbf:	imul   edi,DWORD PTR [ebp-0x72c37f59],0xffffff87
  41bdc6:	inc    ecx
  41bdc7:	repz inc eax
  41bdc9:	mov    DWORD PTR [esi+0x75ab0c86],edi
  41bdcf:	aam    0xba
  41bdd1:	xchg   DWORD PTR [ebp-0x5f2f4417],esp
  41bdd7:	data16 aam 0xa6
  41bdda:	and    bh,0xc9
  41bddd:	mov    dl,bl
  41bddf:	xchg   ebp,eax
  41bde0:	inc    edx
  41bde1:	xchg   ecx,eax
  41bde2:	aam    0x6e
  41bde4:	repz scas al,BYTE PTR es:[edi]
  41bde6:	cmp    al,ah
  41bde8:	dec    edi
  41bde9:	gs jle 0x41be3a
  41bdec:	ins    BYTE PTR es:[edi],dx
  41bded:	leave  
  41bdee:	cmp    eax,0xc6a40f59
  41bdf3:	and    esi,DWORD PTR es:[ebp+esi*2-0x41]
  41bdf8:	repnz mov dl,ch
  41bdfb:	pushf  
  41bdfc:	and    ebx,DWORD PTR ds:0x542b667b
  41be02:	sbb    DWORD PTR [ebx+edx*8],eax
  41be05:	sbb    al,0x1d
  41be07:	and    ah,ch
  41be09:	shr    edx,1
  41be0b:	push   ebx
  41be0c:	mov    al,ds:0x14b3e466
  41be11:	in     eax,0xee
  41be13:	iret   
  41be14:	ss pop eax
  41be16:	add    bh,al
  41be18:	lea    esi,[ecx+0x75]
  41be1b:	int    0x3
  41be1d:	dec    ecx
  41be1e:	fadd   QWORD PTR [ebx+0x5d]
  41be21:	cmp    BYTE PTR [edi+0x65],dl
  41be24:	lods   eax,DWORD PTR ds:[esi]
  41be25:	out    dx,eax
  41be26:	xchg   ebp,esp
  41be28:	sbb    eax,DWORD PTR [edx]
  41be2a:	add    eax,0x7963d3e0
  41be2f:	and    DWORD PTR [edx-0x7194a449],edi
  41be35:	data16 fist DWORD PTR [edx+0x7ec4f3d2]
  41be3c:	loopne 0x41be40
  41be3e:	scas   al,BYTE PTR es:[di]
  41be40:	jmp    0x25b7:0x631f75ce
  41be47:	cmp    BYTE PTR [ebx-0x1499bb3b],bh
  41be4d:	xor    DWORD PTR [eax-0x78],edx
  41be50:	rol    DWORD PTR [edi-0x37fafb9f],cl
  41be56:	das    
  41be57:	add    al,0xa5
  41be59:	data16 and al,0xbe
  41be5c:	xchg   esp,ecx
  41be5e:	inc    esi
  41be5f:	test   ecx,0x269badda
  41be65:	sahf   
  41be66:	jne    0x41be4c
  41be68:	jne    0x41be28
  41be6a:	jnp    0x41be83
  41be6c:	fiadd  DWORD PTR [esi+0x6e]
  41be6f:	popa   
  41be70:	push   ds
  41be71:	outs   dx,DWORD PTR ds:[esi]
  41be72:	and    BYTE PTR [eax],0xd
  41be75:	in     al,dx
  41be76:	cmp    DWORD PTR [esi-0xb],eax
  41be79:	mov    WORD PTR [ecx+ebx*4-0x418a33f5],?
  41be80:	(bad)  
  41be81:	data16 mov dh,0xbb
  41be84:	nop
  41be85:	and    esp,0xfefde7c7
  41be8b:	sbb    al,0x1e
  41be8d:	lods   eax,DWORD PTR ds:[esi]
  41be8e:	jne    0x41becd
  41be90:	xchg   ebx,eax
  41be91:	rcl    esi,0xb0
  41be94:	sahf   
  41be95:	popa   
  41be96:	mov    bh,0xb0
  41be98:	mov    dl,0xe3
  41be9a:	push   edx
  41be9b:	data16 sub WORD PTR [eax-0x1d],ax
  41bea0:	sub    bl,bl
  41bea2:	jne    0x41beea
  41bea4:	or     eax,0x6785afe1
  41bea9:	leave  
  41beaa:	mov    WORD PTR [esi+0x68],fs
  41bead:	ret    0xd428
  41beb0:	rcr    DWORD PTR [ebp+0x62],cl
  41beb3:	xchg   esi,ebx
  41beb5:	jmp    0x9153:0x657f02c0
  41bebc:	arpl   WORD PTR [eax],di
  41bebe:	fiadd  DWORD PTR [ebp-0x42]
  41bec1:	dec    esp
  41bec2:	mov    ds,WORD PTR [ebx-0x59]
  41bec5:	xlat   BYTE PTR ds:[ebx]
  41bec6:	jne    0x41bec8
  41bec8:	int    0xfa
  41beca:	cmp    BYTE PTR [ecx],ch
  41becc:	pop    edi
  41becd:	pop    edx
  41bece:	ins    DWORD PTR es:[edi],dx
  41becf:	xor    eax,eax
  41bed1:	data16 std 
  41bed3:	aam    0x44
  41bed5:	mov    ds:0x45d34fa2,al
  41beda:	xchg   BYTE PTR [ebp+0x23],bl
  41bedd:	sbb    DWORD PTR [eax-0x32],edx
  41bee0:	scas   al,BYTE PTR es:[edi]
  41bee1:	sub    WORD PTR [edi+0x72840b26],0x17d9
  41beea:	mov    BYTE PTR [esi+0x3876b033],bl
  41bef0:	ret    
  41bef1:	(bad)  
  41bef2:	cld    
  41bef3:	daa    
  41bef4:	cs pop esp
  41bef6:	mov    ds:0xf96525d6,al
  41befb:	xchg   edi,eax
  41befc:	(bad)  
  41befd:	test   BYTE PTR [esi*2+0x5b1dd3d3],bh
  41bf04:	imul   esi,DWORD PTR [edx+0x55bd307a],0x92ddf39e
  41bf0e:	in     eax,dx
  41bf0f:	(bad)  
  41bf10:	leave  
  41bf11:	jbe    0x41bf85
  41bf13:	ret    0x317
  41bf16:	pop    esp
  41bf17:	pop    esi
  41bf18:	arpl   WORD PTR [edi+0x73],ax
  41bf1b:	xchg   ebx,eax
  41bf1c:	stos   DWORD PTR es:[edi],eax
  41bf1d:	push   ds
  41bf1e:	dec    eax
  41bf1f:	mov    ebp,esi
  41bf21:	or     DWORD PTR [eax+0xf9bf787],ebx
  41bf27:	bswap  esp
  41bf29:	push   eax
  41bf2a:	cmp    eax,0x75f0d56d
  41bf2f:	in     eax,dx
  41bf30:	dec    ebx
  41bf31:	pop    esi
  41bf32:	and    eax,0x18b51aa9
  41bf37:	mul    DWORD PTR [edi+0x166a58a]
  41bf3d:	imul   ebx,ecx,0x51
  41bf40:	shl    esi,cl
  41bf42:	push   edi
  41bf43:	xor    eax,0x83d53de2
  41bf48:	cmp    esp,DWORD PTR [ebp+0x59]
  41bf4b:	jno    0x41bfab
  41bf4d:	and    al,0x9a
  41bf4f:	and    eax,0x65a0889c
  41bf54:	and    al,0x98
  41bf56:	jne    0x41bf78
  41bf58:	test   eax,0x594392d
  41bf5d:	pop    ebp
  41bf5e:	sbb    eax,0x3fcba066
  41bf63:	jbe    0x41bf47
  41bf65:	mov    eax,ds:0xa51ad6e4
  41bf6a:	imul   edi,DWORD PTR [ebp+eax*2-0x7d5e6010],0xad66fb44
  41bf75:	cld    
  41bf76:	inc    eax
  41bf77:	add    al,0xd3
  41bf79:	sub    ebx,DWORD PTR [ebx]
  41bf7b:	jecxz  0x41bf88
  41bf7d:	lods   al,BYTE PTR ds:[esi]
  41bf7e:	daa    
  41bf7f:	test   eax,0x48786540
  41bf84:	or     BYTE PTR [edx-0xa],ah
  41bf87:	outs   dx,BYTE PTR ds:[esi]
  41bf88:	int3   
  41bf89:	xor    ebx,edx
  41bf8b:	adc    DWORD PTR [ecx-0x5f],esi
  41bf8e:	jne    0x41bfc7
  41bf90:	cmp    BYTE PTR [eax],0x85
  41bf93:	cmp    eax,0x624144dc
  41bf98:	lods   eax,DWORD PTR ds:[esi]
  41bf99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf9a:	or     al,0xe2
  41bf9c:	push   0xea3ea397
  41bfa1:	lods   al,BYTE PTR ds:[esi]
  41bfa2:	cdq    
  41bfa3:	jae    0x41bf8f
  41bfa5:	fwait
  41bfa6:	or     DWORD PTR [ecx+0xcd2e233],ebx
  41bfac:	add    eax,0x7ac7cf65
  41bfb1:	out    dx,al
  41bfb2:	in     al,0xbd
  41bfb4:	(bad)  
  41bfb5:	push   DWORD PTR [edi+0x6b]
  41bfb8:	scas   al,BYTE PTR es:[edi]
  41bfb9:	add    DWORD PTR [edx+ebp*1-0xf],esi
  41bfbd:	rol    BYTE PTR [edi-0x5c],cl
  41bfc0:	and    ah,BYTE PTR [ebp+0x41]
  41bfc3:	jae    0x41c035
  41bfc5:	test   al,0x46
  41bfc7:	dec    esi
  41bfc8:	pusha  
  41bfc9:	stc    
  41bfca:	cmp    al,0x7e
  41bfcc:	rol    DWORD PTR [edx+0x53],cl
  41bfcf:	jbe    0x41bf71
  41bfd1:	ffreep st(1)
  41bfd3:	sub    DWORD PTR [esi+0x60],ebp
  41bfd6:	ss sub ebp,edi
  41bfd9:	pushf  
  41bfda:	iret   
  41bfdb:	mov    bh,0xab
  41bfdd:	fstp   QWORD PTR [ecx-0x36]
  41bfe0:	in     eax,0xfb
  41bfe2:	dec    ecx
  41bfe3:	mov    ch,0xa1
  41bfe5:	inc    ebp
  41bfe6:	jb     0x41bff2
  41bfe8:	push   edi
  41bfe9:	mov    ?,WORD PTR ds:0x8655d64
  41bfef:	jl     0x41bf84
  41bff1:	je     0x41bf83
  41bff3:	xchg   esi,eax
  41bff4:	ins    BYTE PTR es:[edi],dx
  41bff5:	rcr    DWORD PTR [esi-0x4d],1
  41bff8:	cmc    
  41bff9:	dec    ecx
  41bffa:	inc    ebp
  41bffb:	mul    BYTE PTR [edx]
  41bffd:	icebp  
  41bffe:	and    ebp,ebp
  41c000:	int3   
  41c001:	lock xchg esp,eax
  41c003:	xchg   BYTE PTR [ecx+0x60],dh
  41c006:	jnp    0x41c069
  41c008:	sbb    DWORD PTR [si],ebp
  41c00b:	mov    cl,0x83
  41c00d:	pop    ebp
  41c00e:	sub    eax,0x2170d3e3
  41c013:	inc    ebx
  41c014:	sub    DWORD PTR [eax-0x5c],ebx
  41c017:	sub    DWORD PTR [esi-0x70029509],0xce66326a
  41c021:	adc    eax,0x44d36440
  41c026:	popa   
  41c027:	int3   
  41c028:	cmp    eax,0x79d439bc
  41c02d:	gs xor DWORD PTR es:[esi-0x38642dd7],edx
  41c035:	mov    eax,ds:0x6520eddd
  41c03a:	test   eax,0x1c8a0596
  41c03f:	mov    edx,0xe6781d79
  41c044:	cmc    
  41c045:	icebp  
  41c046:	loop   0x41c059
  41c048:	mov    eax,ds:0x81e6a69c
  41c04d:	jo     0x41c0b9
  41c04f:	pushf  
  41c050:	sti    
  41c051:	jp     0x41c04d
  41c053:	imul   ebx,DWORD PTR [ebx-0x1d],0xffffffbe
  41c057:	inc    edx
  41c058:	sub    eax,0xb23c3565
  41c05d:	and    BYTE PTR [ebx],dh
  41c05f:	xchg   edi,eax
  41c060:	or     al,0x22
  41c062:	outs   dx,BYTE PTR ds:[esi]
  41c063:	(bad)  
  41c064:	cmp    ah,BYTE PTR [ebp-0x43]
  41c067:	mov    cl,0xcb
  41c069:	push   ss
  41c06a:	jmp    0x95a6c521
  41c06f:	and    eax,0x6345ea68
  41c074:	lods   al,BYTE PTR ds:[esi]
  41c075:	popf   
  41c076:	inc    eax
  41c077:	mov    eax,ds:0xd7550aa
  41c07c:	cmc    
  41c07d:	retf   0x390
  41c080:	jae    0x41c0ba
  41c082:	mov    ah,0x67
  41c084:	sbb    BYTE PTR [edi-0x34],bh
  41c087:	mov    ds:0x5224fd58,al
  41c08c:	xchg   DWORD PTR gs:[ecx+0xa],esi
  41c090:	xchg   ebx,eax
  41c091:	fsubr  DWORD PTR [esi-0x8]
  41c094:	add    al,0x65
  41c096:	adc    ebp,ecx
  41c098:	fwait
  41c099:	xlat   BYTE PTR ds:[ebx]
  41c09a:	retf   0x6d03
  41c09d:	jmp    0x7554f2fa
  41c0a2:	jne    0x41c07d
  41c0a4:	push   es
  41c0a5:	clc    
  41c0a6:	jbe    0x41c070
  41c0a8:	dec    BYTE PTR [ebx+0x1a4f9186]
  41c0ae:	fldenv [edx+0x2599bdbb]
  41c0b4:	xor    bh,BYTE PTR gs:0x75e142a8
  41c0bb:	clc    
  41c0bc:	pusha  
  41c0bd:	inc    edx
  41c0be:	into   
  41c0bf:	jae    0x41c139
  41c0c1:	jbe    0x41c0ef
  41c0c3:	iretw  
  41c0c5:	test   BYTE PTR ds:0xa7bd3eb,dh
  41c0cb:	jl     0x41c0dc
  41c0cd:	and    eax,0x654fcfe6
  41c0d2:	and    eax,0x23c42d51
  41c0d7:	adc    edx,DWORD PTR [esi]
  41c0d9:	dec    esp
  41c0da:	sub    al,0xd1
  41c0dc:	jno    0x41c0b0
  41c0de:	je     0x41c0a9
  41c0e0:	fdivr  st,st(7)
  41c0e2:	mov    al,0xc7
  41c0e4:	xchg   ebp,eax
  41c0e5:	sub    ax,0xe76f
  41c0e9:	ret    0x3998
  41c0ec:	pop    ss
  41c0ed:	jmp    0x41c097
  41c0ef:	sub    dl,BYTE PTR [ebx]
  41c0f1:	sub    ebx,DWORD PTR [eax-0x4a925a95]
  41c0f7:	gs fwait
  41c0f9:	bound  ebp,QWORD PTR [eax]
  41c0fb:	div    eax
  41c0fd:	jne    0x41c13a
  41c0ff:	stc    
  41c100:	aas    
  41c101:	push   es
  41c102:	mov    DWORD PTR [esi],esp
  41c104:	cmp    ebp,DWORD PTR [ecx-0x3b]
  41c107:	dec    ebp
  41c108:	and    esi,0x7c
  41c10b:	addr16 int 0x95
  41c10e:	outs   dx,BYTE PTR ds:[esi]
  41c110:	loop   0x41c191
  41c112:	pop    ecx
  41c113:	jecxz  0x41c103
  41c115:	jg     0x41c17e
  41c117:	popa   
  41c118:	into   
  41c119:	loop   0x41c0b0
  41c11b:	mov    ds:0x18dddd5b,eax
  41c120:	icebp  
  41c121:	mov    WORD PTR [ebp-0x3],?
  41c124:	pop    ecx
  41c125:	adc    ecx,esp
  41c127:	xchg   edx,eax
  41c128:	jo     0x41c177
  41c12a:	out    0xbe,eax
  41c12c:	xlat   BYTE PTR ds:[ebx]
  41c12d:	adc    ch,dh
  41c12f:	shl    ecx,0x3d
  41c132:	add    DWORD PTR [ebp-0x49],esp
  41c135:	mov    sp,0x65d5
  41c139:	jmp    0x66cf6d22
  41c13e:	sub    DWORD PTR [ebx+0x33],ebp
  41c141:	call   0x7c948308
  41c146:	lds    ebx,FWORD PTR [ecx]
  41c148:	xor    eax,0x4440bb65
  41c14d:	out    dx,eax
  41c14e:	in     al,0x5f
  41c150:	xchg   ebp,eax
  41c151:	data16 mov bl,0x83
  41c154:	fisttp DWORD PTR [eax]
  41c156:	aad    0xd0
  41c158:	rcr    BYTE PTR [ebx+0x5c80a9b7],0x7a
  41c15f:	jbe    0x41c178
  41c161:	mov    di,0x9a45
  41c165:	sahf   
  41c166:	out    dx,eax
  41c167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c168:	retf   
  41c169:	ret    0xd191
  41c16c:	inc    eax
  41c16d:	pop    edx
  41c16e:	dec    edi
  41c16f:	data16 mov ?,WORD PTR [esi]
  41c172:	pop    edx
  41c173:	xor    ebx,edx
  41c175:	dec    ebx
  41c176:	mov    gs,WORD PTR [eax-0x32b18f74]
  41c17c:	sub    ebp,DWORD PTR [ebx-0x52]
  41c17f:	inc    esi
  41c180:	and    dh,BYTE PTR [ebx+0x7ec35d80]
  41c186:	xor    eax,0x4abed084
  41c18b:	cmp    al,0x4e
  41c18d:	ins    BYTE PTR es:[edi],dx
  41c18e:	ror    BYTE PTR [edi+eiz*4],0xaf
  41c192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c193:	and    ah,BYTE PTR [esi-0x997d70]
  41c199:	hlt    
  41c19a:	scas   al,BYTE PTR es:[edi]
  41c19b:	out    dx,al
  41c19c:	shr    ecx,cl
  41c19e:	lock lock scas al,BYTE PTR es:[edi]
  41c1a1:	vandnps ymm1,ymm3,YMMWORD PTR [ebp-0x1732bbc7]
  41c1a9:	xchg   ecx,eax
  41c1aa:	sub    eax,0x2c3bd3e1
  41c1af:	mov    ebp,ebp
  41c1b1:	pop    ecx
  41c1b2:	inc    ecx
  41c1b3:	jecxz  0x41c167
  41c1b5:	int    0x75
  41c1b7:	in     eax,0x49
  41c1b9:	push   0x5794578d
  41c1be:	call   0x20c4e29
  41c1c3:	outs   dx,DWORD PTR ds:[esi]
  41c1c4:	adc    eax,0x599bd51c
  41c1c9:	ds mov eax,0x59aa43e6
  41c1cf:	jb     0x41c1da
  41c1d1:	std    
  41c1d2:	dec    ebp
  41c1d3:	xchg   edx,eax
  41c1d4:	pop    ds
  41c1d5:	out    0xc8,al
  41c1d7:	pop    esi
  41c1d8:	dec    esp
  41c1d9:	or     al,0x75
  41c1db:	inc    edx
  41c1dc:	or     dl,0xed
  41c1df:	aam    0xff
  41c1e1:	fldcw  WORD PTR [ebp+0x61]
  41c1e4:	lods   eax,DWORD PTR ds:[esi]
  41c1e5:	xor    dh,ch
  41c1e7:	jbe    0x41c1cb
  41c1e9:	ficom  WORD PTR [edx+0x61c13e]
  41c1ef:	clc    
  41c1f0:	add    BYTE PTR [edi+0x63a47e4f],ah
  41c1f6:	push   0xffffffc7
  41c1f8:	push   ebx
  41c1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1fa:	sbb    al,0x2a
  41c1fc:	bound  esp,QWORD PTR [ebp+0x1b]
  41c1ff:	mov    bh,dh
  41c201:	push   esi
  41c202:	ins    BYTE PTR es:[edi],dx
  41c203:	xor    DWORD PTR [ebx-0xd],0x786088bc
  41c20a:	je     0x41c1f5
  41c20c:	push   ss
  41c20d:	xor    cl,0x78
  41c210:	fiadd  DWORD PTR [esi+0x54ad3d22]
  41c216:	(bad)  
  41c217:	push   edi
  41c218:	std    
  41c219:	inc    ecx
  41c21a:	jg     0x41c1fc
  41c21c:	pop    edx
  41c21d:	inc    ebp
  41c21e:	adc    eax,0xb0b6d3d2
  41c223:	and    al,0x7d
  41c225:	cmp    BYTE PTR [edi],dl
  41c227:	in     eax,dx
  41c228:	mov    eax,ds:0xb7a97b62
  41c22d:	xchg   edx,eax
  41c22e:	fcomp  st(7)
  41c230:	cmp    BYTE PTR [ebx-0xd2cd9c7],0x2c
  41c237:	sub    BYTE PTR [ecx+0x0],bl
  41c23a:	mov    ds:0x1e652324,al
  41c23f:	iret   
  41c240:	jle    0x41c264
  41c242:	fidiv  WORD PTR [eax+0x64]
  41c245:	sub    eax,0x71887c18
  41c24a:	jne    0x41c1d0
  41c24c:	scas   al,BYTE PTR es:[edi]
  41c24d:	dec    edx
  41c24e:	mov    bl,0x6c
  41c250:	push   esp
  41c251:	sbb    DWORD PTR [edx],ebx
  41c253:	dec    bx
  41c255:	cdq    
  41c256:	mov    ds:0x4177d3a6,eax
  41c25b:	push   edx
  41c25c:	test   BYTE PTR [ebp-0x3],0x7d
  41c260:	mov    ecx,0x81297d66
  41c265:	adc    al,0xf2
  41c267:	sbb    BYTE PTR [edi+ecx*4],0x44
  41c26b:	out    dx,eax
  41c26c:	sti    
  41c26d:	and    al,0x75
  41c26f:	jo     0x41c235
  41c271:	je     0x41c266
  41c273:	mov    bh,0xd5
  41c275:	pop    esp
  41c276:	jmp    0xacde:0xe3a2d36d
  41c27d:	dec    eax
  41c27e:	in     al,0xbe
  41c280:	rol    ebx,1
  41c282:	dec    edi
  41c283:	push   0xffffff9f
  41c285:	xchg   edx,eax
  41c286:	loopne 0x41c285
  41c288:	jp     0x41c288
  41c28a:	xor    al,0x5e
  41c28c:	fwait
  41c28d:	call   0xf13f:0x8a6e66a6
  41c294:	shr    DWORD PTR [ecx-0x725b334],cl
  41c29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c29b:	pop    ebp
  41c29c:	inc    ecx
  41c29d:	cmp    DWORD PTR [edx+0x50],ecx
  41c2a0:	shl    DWORD PTR [ebx],cl
  41c2a2:	mov    edx,0xf4ccf33d
  41c2a7:	ds sar ebp,cl
  41c2aa:	or     BYTE PTR es:[esi],0x87
  41c2ae:	fbstp  TBYTE PTR [esi-0x1d]
  41c2b1:	jne    0x41c2be
  41c2b3:	pop    edi
  41c2b4:	pop    ecx
  41c2b5:	pop    ebx
  41c2b6:	setno  BYTE PTR [ebx+0x3a]
  41c2ba:	lods   al,BYTE PTR ds:[esi]
  41c2bb:	mov    dh,0x74
  41c2bd:	push   ebx
  41c2be:	mov    al,0xe6
  41c2c0:	dec    eax
  41c2c1:	shl    DWORD PTR [ebp-0x3f],1
  41c2c4:	(bad)  
  41c2c6:	out    0x4e,eax
  41c2c8:	cmp    bh,BYTE PTR [edx-0x70619e95]
  41c2ce:	pushf  
  41c2cf:	mov    ah,0xd3
  41c2d1:	addr16 in al,0xe4
  41c2d4:	ins    BYTE PTR es:[edi],dx
  41c2d5:	dec    ecx
  41c2d6:	dec    eax
  41c2d7:	add    dh,bh
  41c2d9:	pusha  
  41c2da:	mov    esp,0xa95bd41d
  41c2df:	jne    0x41c334
  41c2e1:	sub    BYTE PTR [edi+0x31db1b97],dh
  41c2e7:	jno    0x41c2f8
  41c2e9:	or     esp,DWORD PTR [edx]
  41c2eb:	and    WORD PTR [edx-0xd],cx
  41c2ef:	dec    ebp
  41c2f0:	icebp  
  41c2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f2:	gs popa 
  41c2f4:	adc    ecx,DWORD PTR [ebx-0x652c9246]
  41c2fa:	adc    ah,ah
  41c2fc:	mov    ebx,0xd4253d50
  41c301:	mov    si,es
  41c304:	sbb    cl,BYTE PTR [edi]
  41c306:	call   0xab6c:0x3e89fe2b
  41c30d:	add    ebx,DWORD PTR [edx-0xa343aec]
  41c313:	or     al,0xb9
  41c315:	data16 cld 
  41c317:	mov    esi,0x7be5c7ec
  41c31c:	add    dl,bl
  41c31e:	inc    edx
  41c31f:	sub    bh,dh
  41c321:	mov    WORD PTR [ebp-0x4d],?
  41c324:	rcr    BYTE PTR [ecx-0x3e8c37fb],0x35
  41c32b:	adc    dx,sp
  41c32e:	push   ebx
  41c32f:	sbb    ebp,esi
  41c331:	outs   dx,DWORD PTR ds:[esi]
  41c332:	adc    dh,BYTE PTR [edx]
  41c334:	shl    DWORD PTR [edx-0x28],1
  41c337:	adc    dl,BYTE PTR [ebp-0x4b]
  41c33a:	add    eax,0x2662644d
  41c33f:	adc    al,0x20
  41c341:	inc    ebp
  41c342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c343:	push   0xe615f785
  41c348:	rol    ecx,cl
  41c34a:	mov    esp,0xb8ddecc0
  41c34f:	mov    DWORD PTR [edi+ecx*4+0x660f7b63],0x4ddfc6c5
  41c35a:	add    dl,bl
  41c35c:	lods   al,BYTE PTR ds:[esi]
  41c35d:	inc    esi
  41c35e:	xchg   DWORD PTR [ebp-0x12],edx
  41c361:	inc    edi
  41c362:	popa   
  41c363:	and    esp,DWORD PTR [eax+0x6b]
  41c366:	popa   
  41c367:	fimul  DWORD PTR [esi-0x6b]
  41c36a:	add    BYTE PTR [esi],al
  41c36c:	jp     0x41c30c
  41c36e:	jno    0x41c3d1
  41c370:	and    DWORD PTR [ebx-0x60122d23],0xdf516847
  41c37a:	lahf   
  41c37b:	scas   al,BYTE PTR es:[edi]
  41c37c:	pop    ebp
  41c37d:	popf   
  41c37e:	es ret 
  41c380:	push   cs
  41c381:	(bad)  
  41c382:	push   0xb6921aca
  41c387:	data16 jb 0x41c3e1
  41c38a:	lods   al,BYTE PTR ds:[esi]
  41c38b:	cmp    edx,ebx
  41c38d:	push   edx
  41c38e:	mov    DWORD PTR [edi],ebp
  41c390:	mov    cl,0x7a
  41c392:	aaa    
  41c393:	push   edi
  41c394:	int3   
  41c395:	cmp    dh,ah
  41c397:	in     eax,dx
  41c398:	push   ebx
  41c399:	mov    es,WORD PTR [edx+0x72]
  41c39c:	sti    
  41c39d:	jp     0x41c33f
  41c39f:	imul   edx,ebx,0x1d
  41c3a2:	dec    ebp
  41c3a3:	pushf  
  41c3a4:	out    0xc3,al
  41c3a6:	imul   esp,DWORD PTR [esi-0x39],0x61
  41c3aa:	in     al,0xd9
  41c3ac:	and    eax,DWORD PTR [esp+edi*4+0x39]
  41c3b0:	retf   0xb6b6
  41c3b3:	mov    ecx,0xca857d13
  41c3b8:	and    BYTE PTR [esi+0x2b240398],ch
  41c3be:	ss lahf 
  41c3c0:	dec    ecx
  41c3c1:	pusha  
  41c3c2:	xor    DWORD PTR [esi-0x2b],esi
  41c3c5:	data16 sbb dh,BYTE PTR [esi+0x3b]
  41c3c9:	popa   
  41c3ca:	add    DWORD PTR [ecx-0x56978e70],esi
  41c3d0:	mov    esi,0x19da75ad
  41c3d5:	mov    DWORD PTR [edi+edi*8-0x1d969f12],eax
  41c3dc:	pop    edi
  41c3dd:	jl     0x41c389
  41c3df:	cld    
  41c3e0:	mov    edi,DWORD PTR [eax-0x4e2c55ef]
  41c3e6:	sub    ch,dh
  41c3e8:	ret    0xa8b6
  41c3eb:	(bad)  
  41c3ec:	sub    eax,0x7bd68a65
  41c3f1:	leave  
  41c3f2:	sub    al,0xe1
  41c3f4:	xchg   edx,eax
  41c3f5:	popa   
  41c3f6:	xlat   BYTE PTR ds:[ebx]
  41c3f7:	addr16 inc ebx
  41c3f9:	gs mov ecx,0xb1484e1c
  41c3ff:	adc    bl,dh
  41c401:	imul   dx,WORD PTR [edi+edx*2+0x471dd881],0xddcb
  41c40b:	jge    0x41c3b6
  41c40d:	ss jne 0x41c47f
  41c410:	mov    ah,0x6
  41c412:	mov    al,ds:0x3c3c0c3b
  41c417:	addr16 cli 
  41c419:	jge    0x41c49a
  41c41b:	ret    
  41c41c:	mov    ?,eax
  41c41e:	and    dh,dh
  41c420:	fdivr  st,st(3)
  41c422:	jne    0x41c3d0
  41c424:	ret    
  41c425:	(bad)  
  41c426:	mov    esp,0x9715aa5f
  41c42b:	retfw  
  41c42d:	dec    ecx
  41c42e:	cmp    eax,ebp
  41c430:	pop    ebx
  41c431:	and    edx,DWORD PTR [esp+edi*2+0xa75ebde]
  41c438:	adc    eax,0x452bbe5a
  41c43d:	out    dx,eax
  41c43e:	pop    esi
  41c43f:	and    ah,0xa5
  41c442:	xchg   esi,eax
  41c443:	add    BYTE PTR [edi],bl
  41c445:	lods   eax,DWORD PTR ds:[esi]
  41c446:	loope  0x41c3e3
  41c448:	sbb    BYTE PTR [ecx-0x7e24bc39],al
  41c44e:	or     ah,BYTE PTR [esi+0x7]
  41c451:	retf   
  41c452:	(bad)  
  41c453:	jmp    DWORD PTR [edi+0x5d663eb1]
  41c459:	pop    esi
  41c45a:	adc    edx,ebp
  41c45c:	(bad)  
  41c45d:	pushf  
  41c45e:	pop    esp
  41c45f:	add    dl,bh
  41c461:	cdq    
  41c462:	je     0x41c478
  41c464:	test   BYTE PTR [ebx+0x77],bl
  41c467:	mov    bl,0xa3
  41c469:	call   0x29644592
  41c46e:	cmp    eax,0xadc7e466
  41c473:	pop    ebp
  41c474:	rcr    esi,cl
  41c476:	das    
  41c477:	push   ebx
  41c478:	mov    esi,0xe0b1624f
  41c47d:	pop    ecx
  41c47e:	(bad)  
  41c47f:	arpl   WORD PTR [ebx-0x1b],di
  41c482:	xchg   edx,eax
  41c483:	sbb    eax,DWORD PTR [eax]
  41c485:	cdq    
  41c486:	or     edx,DWORD PTR [ebx+edx*8+0x290bacb2]
  41c48d:	jge    0x41c4b8
  41c48f:	test   eax,0x31d266a8
  41c494:	popf   
  41c495:	pop    edx
  41c496:	add    eax,0x85de11f
  41c49b:	mov    cl,0xfa
  41c49d:	xchg   ebp,eax
  41c49e:	jne    0x41c490
  41c4a0:	leave  
  41c4a1:	nop
  41c4a2:	adc    esi,edx
  41c4a4:	sub    eax,0x1ed244a9
  41c4a9:	pop    ds
  41c4aa:	imul   ecx,DWORD PTR [ecx+0x3],0x0
  41c4ae:	mov    edx,0x4e295d66
  41c4b3:	sbb    ch,dh
  41c4b5:	aam    0x3d
  41c4b7:	rcr    BYTE PTR [edx-0x65],0x95
  41c4bb:	scas   al,BYTE PTR es:[edi]
  41c4bc:	hlt    
  41c4bd:	and    eax,0x65e044ed
  41c4c2:	jo     0x41c533
  41c4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c5:	into   
  41c4c6:	(bad)  
  41c4c7:	jae    0x41c4b5
  41c4c9:	in     al,dx
  41c4ca:	and    edx,DWORD PTR [edi+0x19]
  41c4cd:	mov    ah,0x75
  41c4cf:	jae    0x41c492
  41c4d1:	xchg   ebx,eax
  41c4d2:	sub    cl,al
  41c4d4:	inc    esp
  41c4d5:	fild   QWORD PTR [edx+0x6c]
  41c4d8:	push   ebx
  41c4d9:	sbb    bl,BYTE PTR [ebp+0x3c]
  41c4dc:	xchg   BYTE PTR [eax-0x3b],dl
  41c4df:	push   es
  41c4e0:	mov    ecx,0x466b75dd
  41c4e5:	dec    eax
  41c4e6:	repnz adc ebx,0xf668337
  41c4ed:	mov    esi,0xecc333ca
  41c4f2:	jecxz  0x41c47f
  41c4f4:	lods   al,BYTE PTR ds:[esi]
  41c4f5:	data16 fisttp QWORD PTR [eax-0x7dc5d21a]
  41c4fc:	or     BYTE PTR [ebp-0x1e],ah
  41c4ff:	fcomp  DWORD PTR [edi-0x10656b39]
  41c505:	push   esi
  41c506:	or     bh,BYTE PTR [edi-0x60]
  41c509:	push   esi
  41c50a:	jne    0x41c4a0
  41c50c:	test   BYTE PTR [ecx+0x27cb74ce],ah
  41c512:	nop
  41c513:	pop    bp
  41c515:	and    DWORD PTR ds:0x2b4cd369,0xffffffb1
  41c51c:	idiv   DWORD PTR [ecx+0x657f135e]
  41c522:	xlat   BYTE PTR ds:[ebx]
  41c523:	mov    esi,0xe67d3386
  41c528:	icebp  
  41c529:	push   esp
  41c52a:	inc    ebx
  41c52b:	cs mov ch,0xc4
  41c52e:	bound  edi,QWORD PTR [ebx]
  41c530:	out    0xf6,eax
  41c532:	jne    0x41c4ec
  41c534:	push   edx
  41c535:	gs pop esp
  41c537:	mov    esi,0x5e79f25a
  41c53c:	ins    BYTE PTR es:[edi],dx
  41c53d:	mov    WORD PTR [edi-0x65],es
  41c540:	xchg   edx,eax
  41c541:	aad    0x98
  41c543:	jae    0x41c4c8
  41c545:	stos   DWORD PTR es:[edi],eax
  41c546:	mov    ch,0x9
  41c548:	or     DWORD PTR [ebp-0x42],esp
  41c54b:	add    al,0x4a
  41c54d:	mov    cl,0xd7
  41c54f:	mov    dh,0x1a
  41c551:	inc    ebx
  41c552:	pop    esi
  41c553:	jmp    0x6fb6e224
  41c558:	inc    edx
  41c559:	inc    ebp
  41c55a:	fmul   DWORD PTR ds:0x66177e8d
  41c560:	sbb    al,0x71
  41c562:	mov    ds:0xdfd3eaaf,al
  41c567:	test   BYTE PTR [ebx+eiz*4-0x66c3224c],0x5
  41c56f:	xchg   BYTE PTR [edi-0x2d417b23],ah
  41c575:	push   edx
  41c576:	jne    0x41c55a
  41c578:	xchg   BYTE PTR [edi+eax*2-0x22a2fb4],dh
  41c57f:	pop    ds
  41c580:	dec    edx
  41c581:	imul   ebx,DWORD PTR [edi],0xffffff8c
  41c584:	inc    ebx
  41c585:	mov    al,0x91
  41c587:	test   eax,0xbfb059ee
  41c58c:	inc    esi
  41c58d:	jp     0x41c604
  41c58f:	jmp    0x8ab1:0x5d03db09
  41c596:	jne    0x41c519
  41c598:	mov    eax,gs:0x9e85fda0
  41c59e:	fs popa 
  41c5a0:	cdq    
  41c5a1:	cdq    
  41c5a2:	loopne 0x41c571
  41c5a4:	shl    BYTE PTR [eax-0x7e],1
  41c5a7:	dec    edi
  41c5a8:	jae    0x41c5c8
  41c5aa:	jno    0x41c5db
  41c5ac:	mov    edi,0xa62e32b1
  41c5b1:	ins    DWORD PTR es:[edi],dx
  41c5b2:	adc    dh,BYTE PTR [edx+0xd]
  41c5b5:	cmp    ebx,DWORD PTR [eax+0x1]
  41c5b8:	je     0x41c5fe
  41c5ba:	(bad)  
  41c5bb:	es int 0x4
  41c5be:	dec    ebx
  41c5bf:	adc    eax,esi
  41c5c1:	pushf  
  41c5c2:	jne    0x41c63b
  41c5c4:	clc    
  41c5c5:	xor    al,0xc5
  41c5c7:	add    al,BYTE PTR [edi]
  41c5c9:	and    cl,0x66
  41c5cc:	stos   DWORD PTR es:[edi],eax
  41c5cd:	int    0x1d
  41c5cf:	ins    BYTE PTR es:[edi],dx
  41c5d0:	rcl    DWORD PTR [eax+0x74b63d97],cl
  41c5d6:	fistp  DWORD PTR [ecx+0x7a8266dc]
  41c5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5dd:	imul   eax,DWORD PTR [ebx+0x44],0x34
  41c5e1:	shl    DWORD PTR [eax],1
  41c5e3:	int    0x98
  41c5e5:	add    BYTE PTR [ebp+0x74],dh
  41c5e8:	mov    DWORD PTR [ebx+0x756cef90],0x4744c208
  41c5f2:	jno    0x41c605
  41c5f4:	arpl   WORD PTR [ebp+0x39],cx
  41c5f7:	rcl    DWORD PTR es:[ebx],cl
  41c5fa:	inc    edi
  41c5fb:	or     DWORD PTR [esi-0x40],ebp
  41c5fe:	inc    esp
  41c5ff:	mov    edx,0x3f3066c9
  41c604:	enter  0x1f4f,0x5c
  41c608:	mov    dh,0x81
  41c60a:	mov    bl,0xd0
  41c60c:	fs out dx,al
  41c60e:	jne    0x41c5ec
  41c610:	cli    
  41c611:	inc    ebp
  41c612:	push   0xffffffe8
  41c614:	imul   ecx,esp,0x19
  41c617:	sub    BYTE PTR [esi-0x41],0x1e
  41c61b:	fistp  DWORD PTR gs:[ecx-0x2f]
  41c61f:	(bad)  
  41c620:	jmp    0xe227:0xf12169e
  41c627:	out    dx,eax
  41c628:	stos   DWORD PTR es:[edi],eax
  41c629:	jo     0x41c5c0
  41c62b:	stc    
  41c62c:	pop    ds
  41c62d:	(bad)  
  41c62e:	lds    ecx,FWORD PTR [esi+0x6613bbfa]
  41c634:	stos   BYTE PTR es:[edi],al
  41c635:	test   al,0x90
  41c637:	mov    dh,0xd3
  41c639:	outs   dx,BYTE PTR ds:[esi]
  41c63a:	shl    BYTE PTR [esi+0x56b13d05],cl
  41c640:	pop    ebx
  41c641:	pusha  
  41c642:	repnz das 
  41c644:	add    ah,BYTE PTR [eax-0x189c0523]
  41c64a:	mov    eax,ds:0x8e1fd3f5
  41c64f:	mov    al,ds:0x74d0eadd
  41c654:	and    DWORD PTR [esi-0x1e],0x3a6f99b6
  41c65b:	arpl   bx,si
  41c65d:	repnz ror DWORD PTR [ecx],0x1b
  41c661:	mov    esi,0x8da18a75
  41c666:	jno    0x41c633
  41c668:	push   esi
  41c669:	sub    BYTE PTR ds:[ecx+0x1f],0xa6
  41c66e:	add    DWORD PTR [eax],ecx
  41c670:	das    
  41c671:	sub    ebp,0x6cb5d3c5
  41c677:	fwait
  41c678:	rcl    DWORD PTR [edi+0x6539e986],0x34
  41c67f:	dec    esi
  41c680:	mov    ecx,0xe92cf3a3
  41c685:	mov    cx,0x7dfc
  41c689:	sbb    DWORD PTR [eax+edi*1-0x3e],esi
  41c68d:	pusha  
  41c68e:	xor    al,BYTE PTR [ecx]
  41c690:	repnz gs push ebp
  41c693:	xchg   esi,eax
  41c694:	ins    DWORD PTR es:[edi],dx
  41c695:	ins    BYTE PTR es:[edi],dx
  41c696:	and    bh,bh
  41c698:	mov    edx,esi
  41c69a:	mov    ebx,0x76f07797
  41c69f:	mov    edx,0x534e754a
  41c6a4:	jle    0x41c711
  41c6a6:	test   al,0x11
  41c6a8:	fcomip st,st(3)
  41c6aa:	clc    
  41c6ab:	aas    
  41c6ac:	inc    ecx
  41c6ad:	hlt    
  41c6ae:	cmc    
  41c6af:	lds    esp,FWORD PTR [ebx]
  41c6b1:	and    eax,0xafd3b9cd
  41c6b6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c6b8:	icebp  
  41c6b9:	jmp    0x41c716
  41c6bb:	dec    eax
  41c6bc:	loope  0x41c6f8
  41c6be:	dec    ebx
  41c6bf:	mov    ds:0x775cc7d3,al
  41c6c4:	jge    0x41c744
  41c6c6:	push   es
  41c6c7:	sub    dl,ch
  41c6c9:	inc    esp
  41c6ca:	(bad)  
  41c6cb:	sub    eax,0x2b296185
  41c6d0:	adc    ecx,edi
  41c6d2:	and    eax,0x621605cb
  41c6d7:	push   0x1721378f
  41c6dc:	in     al,dx
  41c6dd:	lods   eax,DWORD PTR ds:[esi]
  41c6de:	adc    eax,0xa00fd300
  41c6e3:	dec    ebp
  41c6e4:	loopne 0x41c728
  41c6e6:	int3   
  41c6e7:	sub    edi,ebx
  41c6e9:	imul   ecx,DWORD PTR [edi-0x18],0x72
  41c6ed:	(bad)  [ebx+0x21]
  41c6f0:	pop    edi
  41c6f1:	sub    eax,0x7123a435
  41c6f6:	repnz dec ebx
  41c6f8:	shr    DWORD PTR [ebx+0x3c],cl
  41c6fb:	aad    0x9a
  41c6fd:	pop    ebp
  41c6fe:	or     eax,0x8b663b48
  41c703:	mov    ch,0x46
  41c705:	js     0x41c756
  41c707:	in     al,dx
  41c708:	jns    0x41c77b
  41c70a:	cmp    DWORD PTR [edi-0x3],0xffffffe0
  41c70e:	push   esp
  41c70f:	cmp    eax,0x18748ee
  41c714:	sub    ecx,DWORD PTR [ebp+0x3eaf32de]
  41c71a:	dec    edx
  41c71b:	mov    edx,DWORD PTR [ebx+0x2e]
  41c71e:	cdq    
  41c71f:	dec    edi
  41c720:	sbb    ah,BYTE PTR [eax]
  41c722:	lea    eax,[ecx-0x24503c2f]
  41c728:	in     al,0xbb
  41c72a:	lock lock call 0x6267:0x7ce609cb
  41c733:	in     al,0xf
  41c735:	xchg   edi,eax
  41c736:	retf   0x334b
  41c739:	dec    ebx
  41c73a:	dec    esi
  41c73b:	pop    edi
  41c73c:	shl    edi,cl
  41c73e:	pop    ss
  41c73f:	push   DWORD PTR [edx]
  41c741:	adc    dl,BYTE PTR [esi]
  41c743:	mov    ds,WORD PTR [ebp-0x5f030d9a]
  41c749:	rcr    BYTE PTR [esi],cl
  41c74b:	and    DWORD PTR [ebp-0x7cb579c9],ecx
  41c751:	pusha  
  41c752:	jne    0x41c7be
  41c754:	ret    
  41c755:	int    0xd1
  41c757:	test   BYTE PTR [edx],ah
  41c759:	push   esp
  41c75a:	pop    esi
  41c75b:	data16 jg 0x41c7a1
  41c75e:	ret    0xd3c6
  41c761:	sub    ch,0xdf
  41c764:	inc    edi
  41c765:	leave  
  41c766:	ss pop ss
  41c768:	sub    BYTE PTR [ebp-0x68],ah
  41c76b:	pop    es
  41c76c:	neg    bl
  41c76e:	imul   ecx,DWORD PTR [edx],0xffffffa5
  41c771:	xchg   ebx,eax
  41c772:	cdq    
  41c773:	jb     0x41c700
  41c775:	mov    ch,0x72
  41c777:	sahf   
  41c778:	stos   BYTE PTR es:[edi],al
  41c779:	test   DWORD PTR [eax],ecx
  41c77b:	(bad)  
  41c77c:	xlat   BYTE PTR ds:[ebx]
  41c77d:	mov    ebx,0x654949e5
  41c782:	cwde   
  41c783:	jbe    0x41c7d8
  41c785:	xlat   BYTE PTR ds:[ebx]
  41c786:	jp     0x41c7aa
  41c788:	jmp    0x41c7c0
  41c78a:	sbb    al,bl
  41c78c:	rol    ebx,cl
  41c78e:	ret    0x1039
  41c791:	xchg   dl,bh
  41c793:	push   cs
  41c794:	enter  0x1166,0xc4
  41c798:	or     BYTE PTR ds:0x10dcea12,ch
  41c79e:	fsubr  st,st(6)
  41c7a0:	lds    esp,FWORD PTR [esi-0x53]
  41c7a3:	into   
  41c7a4:	adc    BYTE PTR [esi+ecx*8],dh
  41c7a7:	xchg   DWORD PTR [ebx-0xf],esp
  41c7aa:	jns    0x41c7e3
  41c7ac:	pop    esp
  41c7ad:	ficomp WORD PTR [edi+eiz*2-0x7b54b073]
  41c7b4:	jmp    0x41c767
  41c7b6:	sub    al,0x52
  41c7b8:	cdq    
  41c7b9:	and    al,0xbb
  41c7bb:	outs   dx,DWORD PTR ds:[esi]
  41c7bc:	inc    ecx
  41c7bd:	sub    DWORD PTR [esp+eiz*2-0x17a9d93e],ebp
  41c7c4:	sub    edi,ebp
  41c7c6:	cs and bh,bl
  41c7c9:	push   es
  41c7ca:	lea    esp,[esi+0x3d]
  41c7cd:	scas   eax,DWORD PTR es:[edi]
  41c7ce:	cmc    
  41c7cf:	cdq    
  41c7d0:	rol    edx,cl
  41c7d2:	sbb    eax,0x4e4a693b
  41c7d7:	and    al,0xd8
  41c7d9:	data16 sub BYTE PTR [esi+eax*4+0x3a2245c],al
  41c7e1:	icebp  
  41c7e2:	or     bh,BYTE PTR [ebx+edx*8+0x399b47b2]
  41c7e9:	int    0xd2
  41c7eb:	jae    0x41c7a2
  41c7ed:	inc    si
  41c7ef:	dec    esi
  41c7f0:	pop    esi
  41c7f1:	rol    BYTE PTR [ecx-0x1e31a0d3],0x1f
  41c7f8:	ror    DWORD PTR [ecx],cl
  41c7fa:	clc    
  41c7fb:	inc    esi
  41c7fc:	mov    bh,0x67
  41c7fe:	ins    BYTE PTR es:[edi],dx
  41c7ff:	push   ss
  41c800:	sahf   
  41c801:	mov    sp,WORD PTR [ebp+0x32]
  41c805:	mov    ch,0x1e
  41c807:	push   0x204d0df4
  41c80c:	mov    cl,0x90
  41c80e:	test   DWORD PTR [eax+0x67],esi
  41c811:	pusha  
  41c812:	hlt    
  41c813:	dec    ebx
  41c814:	jp     0x41c831
  41c816:	push   esp
  41c817:	push   cs
  41c818:	mov    ebx,0xd37aef58
  41c81d:	mov    eax,0x8b7c55ba
  41c822:	jo     0x41c839
  41c824:	pop    esp
  41c825:	fsub   DWORD PTR gs:0xcd146d5b
  41c82c:	mov    bh,0x2b
  41c82e:	inc    eax
  41c82f:	stc    
  41c830:	daa    
  41c831:	jl     0x41c8a5
  41c833:	sbb    ebx,edx
  41c835:	aas    
  41c836:	sti    
  41c837:	mov    bh,BYTE PTR [ebp+0x57]
  41c83a:	push   eax
  41c83b:	stos   DWORD PTR es:[edi],eax
  41c83c:	mov    esp,DWORD PTR [esi+0x78]
  41c83f:	mov    al,ds:0x8b0fd5c5
  41c844:	rol    DWORD PTR [eax+0x481608e4],cl
  41c84a:	and    BYTE PTR [ecx+0x32],dl
  41c84d:	gs daa 
  41c84f:	pop    edx
  41c850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c851:	stos   BYTE PTR es:[edi],al
  41c852:	test   BYTE PTR [ebx-0x3c],cl
  41c855:	mov    bh,0xdd
  41c857:	adc    bl,BYTE PTR [edi+edi*8]
  41c85a:	jne    0x41c865
  41c85c:	xor    al,0x0
  41c85e:	dec    esi
  41c85f:	es xchg esi,eax
  41c861:	call   0x401:0x964d6649
  41c868:	ficom  WORD PTR [esi+0x4af27a9c]
  41c86e:	mov    ah,BYTE PTR [ebx]
  41c870:	xchg   ebx,eax
  41c871:	push   ecx
  41c872:	leave  
  41c873:	daa    
  41c874:	push   edi
  41c875:	mov    esp,0xf31fd50d
  41c87a:	jo     0x41c8dd
  41c87c:	adc    BYTE PTR [eax],ch
  41c87e:	das    
  41c87f:	xchg   esp,eax
  41c880:	rcr    DWORD PTR [ebx-0x4dc953bc],cl
  41c886:	out    0x9e,eax
  41c888:	mov    cl,0x61
  41c88a:	into   
  41c88b:	addr16 cdq 
  41c88d:	imul   edx,DWORD PTR [eax-0x2a],0x6e776182
  41c894:	in     al,dx
  41c895:	repnz mov eax,DWORD PTR [edx]
  41c898:	hlt    
  41c899:	imul   ecx,DWORD PTR [esi+0x30],0x75f5d789
  41c8a0:	xor    al,0x7a
  41c8a2:	retf   
  41c8a3:	data16 cmc 
  41c8a5:	xor    esi,DWORD PTR [eax-0x63bd2c25]
  41c8ab:	mov    bh,0x85
  41c8ad:	sar    ebp,0x3f
  41c8b0:	popf   
  41c8b1:	ss push si
  41c8b4:	arpl   ax,bp
  41c8b6:	arpl   WORD PTR [edx],di
  41c8b8:	loopne 0x41c871
  41c8ba:	ja     0x41c8b4
  41c8bc:	ret    
  41c8bd:	dec    eax
  41c8be:	jne    0x41c851
  41c8c0:	call   0x9244:0x6c5b5e39
  41c8c7:	data16 mov ch,0xfd
  41c8ca:	or     DWORD PTR [ebp+0x42ef90d3],0x1e6a1b4e
  41c8d4:	stc    
  41c8d5:	imul   esp,ebp,0x51e9d451
  41c8db:	cmp    dl,bl
  41c8dd:	in     al,dx
  41c8de:	inc    edi
  41c8df:	or     DWORD PTR [ebp+0x3a],eax
  41c8e2:	cwde   
  41c8e3:	push   0xffffffc6
  41c8e5:	data16 mov ch,0xb6
  41c8e8:	loope  0x41c92a
  41c8ea:	add    eax,DWORD PTR [esi]
  41c8ec:	std    
  41c8ed:	pusha  
  41c8ee:	xor    BYTE PTR [edx+0xf76aac3],0x31
  41c8f5:	xchg   BYTE PTR [esi],bh
  41c8f7:	xor    DWORD PTR [edi+0x581c95a7],esi
  41c8fd:	cmp    eax,ecx
  41c8ff:	data16 jge 0x41c893
  41c902:	std    
  41c903:	jge    0x41c8d8
  41c905:	aas    
  41c906:	jbe    0x41c900
  41c908:	(bad)  
  41c909:	in     eax,0xa1
  41c90b:	push   0xffffffb9
  41c90d:	data16 fist DWORD PTR ds:0x2fed266d
  41c914:	sbb    eax,0xd3ecf173
  41c919:	and    al,BYTE PTR [ecx-0x7e]
  41c91c:	or     al,0xd8
  41c91e:	push   es
  41c91f:	popa   
  41c920:	aas    
  41c921:	gs push ebx
  41c923:	inc    ebp
  41c924:	add    esi,DWORD PTR [edi+0x5f]
  41c927:	or     al,0xd6
  41c929:	xchg   edi,eax
  41c92a:	ja     0x41c8c7
  41c92c:	xor    DWORD PTR [edx],esp
  41c92e:	jne    0x41c982
  41c930:	mov    ebx,0x904b58ec
  41c935:	fs popa 
  41c937:	addr16 inc esp
  41c939:	mov    ebp,0xc7361339
  41c93e:	push   ebp
  41c93f:	dec    ebx
  41c940:	(bad)  
  41c941:	stc    
  41c942:	push   0x78
  41c944:	icebp  
  41c945:	mov    ah,0x21
  41c947:	xchg   dh,ah
  41c949:	pop    edx
  41c94a:	adc    eax,0x12ec41c2
  41c94f:	ret    
  41c950:	retf   
  41c951:	mov    dh,0xc8
  41c953:	push   ebx
  41c954:	xchg   esi,eax
  41c955:	cmc    
  41c956:	add    ebp,DWORD PTR [ebx+edx*8]
  41c959:	push   edx
  41c95a:	inc    ebx
  41c95b:	add    DWORD PTR [esi],edi
  41c95d:	pop    ds
  41c95e:	mov    BYTE PTR [ecx],cl
  41c960:	in     eax,0x65
  41c962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c963:	mov    ds:0x655ec84d,eax
  41c968:	mov    ch,0xe
  41c96a:	inc    ebx
  41c96b:	mov    ebx,0x975f8d5
  41c970:	inc    ebp
  41c971:	scas   al,BYTE PTR es:[edi]
  41c972:	push   es
  41c973:	out    dx,eax
  41c974:	or     eax,0xa0667eda
  41c979:	pop    ebp
  41c97a:	add    DWORD PTR [esi],esp
  41c97c:	ror    DWORD PTR [ecx+ebp*4],cl
  41c97f:	mov    ds:0xd36e8e76,eax
  41c984:	mov    bl,0x66
  41c986:	pop    ds
  41c987:	xchg   edx,ecx
  41c989:	in     eax,0xbd
  41c98b:	and    ebp,DWORD PTR [ecx]
  41c98d:	aaa    
  41c98e:	sbb    BYTE PTR [ebx-0x1b],ch
  41c991:	shl    BYTE PTR [ebp+0x7],0x40
  41c995:	push   esi
  41c996:	jnp    0x41c957
  41c998:	cmp    al,0x33
  41c99a:	cmp    al,0xa2
  41c99c:	cli    
  41c99d:	pmaddwd mm5,QWORD PTR [eax+ecx*1+0x2670e1ef]
  41c9a5:	pop    ebp
  41c9a6:	jne    0x41c962
  41c9a8:	clc    
  41c9a9:	inc    esp
  41c9aa:	fnsave [edi+edx*8+0x3d]
  41c9ae:	ret    
  41c9af:	inc    BYTE PTR [bx+di-0x5d]
  41c9b3:	push   es
  41c9b4:	test   BYTE PTR [esi+0xf],al
  41c9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b8:	shl    DWORD PTR [ebx+eiz*1],cl
  41c9bb:	pop    ebp
  41c9bc:	cmp    BYTE PTR [ebx+esi*1],cl
  41c9bf:	rcl    DWORD PTR [esi+eiz*2-0x2d5a2a68],0x89
  41c9c7:	loopne 0x41ca0e
  41c9c9:	pop    eax
  41c9ca:	xor    DWORD PTR ds:0x575e837,edi
  41c9d0:	pop    ebx
  41c9d1:	push   cs
  41c9d2:	lock retf 
  41c9d4:	fisub  DWORD PTR [esi+0x55]
  41c9d7:	imul   DWORD PTR [ebp-0x7e]
  41c9da:	pop    ebp
  41c9db:	cdq    
  41c9dc:	sub    BYTE PTR cs:0x7599427f,cl
  41c9e3:	add    eax,0xc70b06a2
  41c9e8:	(bad)  
  41c9e9:	xor    al,0x20
  41c9eb:	push   sp
  41c9ed:	lock fidivr WORD PTR [ebx+edx*8]
  41c9f1:	rcr    DWORD PTR [edi-0x3edad287],1
  41c9f7:	dec    esi
  41c9f8:	mov    esp,0xa83b9755
  41c9fd:	xor    al,dl
  41c9ff:	js     0x41ca03
  41ca01:	lahf   
  41ca02:	mov    ch,0xbf
  41ca04:	ror    DWORD PTR [ebp-0x65],cl
  41ca07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca08:	pop    esi
  41ca09:	and    al,0xe6
  41ca0b:	mov    WORD PTR [esi],ss
  41ca0d:	pusha  
  41ca0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0f:	adc    bl,dl
  41ca11:	ins    DWORD PTR es:[edi],dx
  41ca12:	out    dx,eax
  41ca13:	repz push ebx
  41ca15:	repz xchg ecx,eax
  41ca17:	jo     0x41c9ea
  41ca19:	and    eax,0x99ca2f30
  41ca1e:	mov    edi,DWORD PTR fs:[ebp+0x3e60ab3]
  41ca25:	lea    esp,[ebx]
  41ca27:	sub    dh,BYTE PTR [ecx+0x6d]
  41ca2a:	pop    ds
  41ca2b:	sbb    ax,0x70a
  41ca2f:	xchg   ebx,edx
  41ca31:	and    edx,DWORD PTR ds:0x36c82186
  41ca37:	arpl   WORD PTR ss:[ebp-0x4a],sp
  41ca3b:	xchg   esp,eax
  41ca3c:	in     eax,0x6a
  41ca3e:	nop
  41ca3f:	pusha  
  41ca40:	imul   ebp,DWORD PTR [eax+0x84029bd],0x66
  41ca47:	loope  0x41ca4b
  41ca49:	xchg   esi,eax
  41ca4a:	jbe    0x41cac9
  41ca4c:	pop    eax
  41ca4d:	and    DWORD PTR [edx+0x18d8d736],0xfb6519c2
  41ca57:	hlt    
  41ca58:	jb     0x41ca5f
  41ca5a:	lea    ebp,[eax-0x5a]
  41ca5d:	adc    ebp,DWORD PTR [ecx+0x701df5b7]
  41ca63:	mov    ecx,0x5ec6d253
  41ca68:	mov    ch,0x66
  41ca6a:	stc    
  41ca6b:	add    eax,0x9a961706
  41ca70:	out    dx,al
  41ca71:	push   ebp
  41ca72:	sbb    cl,0xdb
  41ca75:	push   0x75
  41ca77:	imul   esp,DWORD PTR [eax],0x29
  41ca7a:	adc    BYTE PTR [edi+0x697fe8fd],dl
  41ca80:	jno    0x41cae7
  41ca82:	fwait
  41ca83:	sub    BYTE PTR [eax-0x5e],dl
  41ca86:	inc    eax
  41ca87:	inc    esp
  41ca88:	enter  0x75a5,0xa7
  41ca8c:	jg     0x41ca41
  41ca8e:	pop    ebp
  41ca8f:	inc    edx
  41ca90:	pop    esp
  41ca91:	fst    DWORD PTR [ebx-0x37d7cd9a]
  41ca97:	xor    eax,0x8e2b16d3
  41ca9c:	ror    edi,0xb6
  41ca9f:	xchg   esi,eax
  41caa0:	clc    
  41caa1:	pop    edx
  41caa2:	repz xor ah,BYTE PTR [edi]
  41caa5:	mov    al,ds:0xbcceb930
  41caaa:	fadd   st(5),st
  41caac:	vpmacssww ymm5,ymm3,ymm3,YMMWORD PTR [esi-0x2b878acd]
  41cab6:	mov    edi,0x92703ee1
  41cabb:	mov    ds:0x42f53cb2,al
  41cac0:	rcl    DWORD PTR [esi+0x7bd12f02],0xe5
  41cac7:	mov    dh,0x79
  41cac9:	mov    ecx,0x6e75457a
  41cace:	cmp    ah,BYTE PTR [esi]
  41cad0:	mov    edi,0xdc679e41
  41cad5:	or     bl,BYTE PTR [ebx+0x10]
  41cad8:	or     esi,esp
  41cada:	fadd   st(6),st
  41cadc:	mov    DWORD PTR cs:[ebp+0x18],esi
  41cae0:	xor    eax,0x30d668de
  41cae5:	div    DWORD PTR ds:0x20e18d6a
  41caeb:	rcpps  xmm2,XMMWORD PTR [esi-0x792cb5d9]
  41caf2:	ins    DWORD PTR es:[edi],dx
  41caf3:	mov    esi,0xde5b067a
  41caf8:	ds jnp 0x41cb1c
  41cafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafc:	fbld   TBYTE PTR [ebx+0x17]
  41caff:	and    BYTE PTR [eax-0x7f99d034],0x7b
  41cb06:	jmp    0x75a8ff94
  41cb0b:	mov    al,ds:0xb82b487b
  41cb10:	pop    esi
  41cb11:	mov    ebp,0xcb366653
  41cb16:	mov    ch,0xe2
  41cb18:	shl    ebp,cl
  41cb1a:	dec    esp
  41cb1b:	leave  
  41cb1c:	sub    eax,0x8684eb70
  41cb21:	cmp    DWORD PTR [ecx+eax*1-0x6bad6f1a],edi
  41cb28:	rol    DWORD PTR [esi+0x43],cl
  41cb2b:	inc    ebx
  41cb2c:	jmp    0x75f8:0x3a91d47
  41cb33:	mov    bh,0x6a
  41cb35:	xor    al,0xd9
  41cb37:	pop    eax
  41cb38:	or     al,bl
  41cb3a:	pop    ebp
  41cb3b:	imul   ebx,DWORD PTR [edi],0x3fd9bf65
  41cb41:	push   ebp
  41cb42:	cli    
  41cb43:	(bad)  
  41cb44:	repnz push eax
  41cb46:	jne    0x41caf1
  41cb48:	out    0xde,al
  41cb4a:	jbe    0x41cb19
  41cb4c:	not    BYTE PTR [edx+edx*2]
  41cb4f:	data16 ss movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb53:	add    bl,BYTE PTR [ebx]
  41cb55:	cmp    bh,al
  41cb57:	mov    ds:0x1d2dca1,al
  41cb5c:	jnp    0x41cb63
  41cb5e:	push   0x59
  41cb60:	add    DWORD PTR [ecx],esp
  41cb62:	hlt    
  41cb63:	int3   
  41cb64:	out    dx,eax
  41cb65:	(bad)  [esi-0x25]
  41cb69:	adc    ch,BYTE PTR [esi+0x1f]
  41cb6c:	rol    BYTE PTR [ecx],cl
  41cb6e:	clc    
  41cb6f:	gs inc esp
  41cb71:	xor    dl,0xa9
  41cb74:	inc    edi
  41cb75:	gs mov ecx,0xecb32227
  41cb7b:	scas   eax,DWORD PTR es:[edi]
  41cb7c:	mov    DWORD PTR [esi],esp
  41cb7e:	out    0xde,al
  41cb80:	jns    0x41cbc0
  41cb82:	jb     0x41cbcd
  41cb84:	sbb    cl,al
  41cb86:	ror    BYTE PTR [edx-0x329a896b],0x74
  41cb8d:	sub    ch,BYTE PTR [edx-0x41]
  41cb90:	xor    BYTE PTR [ecx-0x11],dl
  41cb93:	mov    BYTE PTR [ebx+0x42],ah
  41cb96:	jmp    0x93a5601
  41cb9b:	enter  0xbad3,0xff
  41cb9f:	(bad)  
  41cba1:	dec    ecx
  41cba2:	call   0xe0a85b36
  41cba7:	jb     0x41cb7a
  41cba9:	add    eax,0xbedd55a1
  41cbae:	out    dx,al
  41cbaf:	push   esp
  41cbb0:	mov    esp,0x7b5e7458
  41cbb5:	jmp    0x57c5:0x65f8bb0e
  41cbbc:	je     0x41cbb5
  41cbbe:	or     ah,BYTE PTR [edi+0x565033d0]
  41cbc4:	mov    dl,0x7e
  41cbc6:	jne    0x41cbc1
  41cbc8:	push   ebp
  41cbc9:	imul   edx,eax,0xffffffcf
  41cbcc:	cmp    bh,BYTE PTR [esi+0x54]
  41cbcf:	addr16 clc 
  41cbd1:	mov    ebx,DWORD PTR ds:0x4d839273
  41cbd7:	xchg   BYTE PTR [ecx+0x44],bl
  41cbda:	jne    0x41cbb9
  41cbdc:	data16 loopne 0x41cc20
  41cbdf:	popa   
  41cbe0:	and    eax,DWORD PTR ds:0x618603d7
  41cbe6:	jbe    0x41cbe1
  41cbe8:	mov    edi,0x12ce7edd
  41cbed:	popa   
  41cbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbef:	xchg   ebx,eax
  41cbf0:	lods   eax,DWORD PTR ds:[esi]
  41cbf1:	shr    BYTE PTR [ecx-0x3e8a019a],0xe4
  41cbf8:	leave  
  41cbf9:	pop    eax
  41cbfa:	add    BYTE PTR [edx],ch
  41cbfc:	(bad)  
  41cbfd:	xchg   ebp,eax
  41cbfe:	je     0x41cc76
  41cc00:	sub    esi,edx
  41cc02:	add    al,0x9d
  41cc04:	repnz test DWORD PTR gs:[esi+0x26],edi
  41cc09:	data16 loopne 0x41cbc1
  41cc0c:	cli    
  41cc0d:	(bad)  
  41cc0f:	in     al,0x0
  41cc11:	popf   
  41cc12:	jne    0x41cc6a
  41cc14:	and    DWORD PTR [ebx+0x6b],esp
  41cc17:	jmp    0xa9a542ed
  41cc1c:	pop    esp
  41cc1d:	bound  ebp,QWORD PTR [edx+0x45]
  41cc20:	mov    esp,0xb3d91514
  41cc25:	and    eax,0xa4510af1
  41cc2a:	jne    0x41cc25
  41cc2c:	adc    bl,ah
  41cc2e:	hlt    
  41cc2f:	into   
  41cc30:	adc    DWORD PTR [ecx],0xa3f766ca
  41cc36:	and    eax,0x4d31b
  41cc3b:	dec    ecx
  41cc3c:	pop    esp
  41cc3d:	loop   0x41cc39
  41cc3f:	xchg   ebx,eax
  41cc40:	pop    ebx
  41cc41:	adc    esi,DWORD PTR gs:[ebx+0x500f7b09]
  41cc48:	add    esi,DWORD PTR [eax-0x49c5924f]
  41cc4e:	je     0x41cc99
  41cc50:	fisub  WORD PTR [ebp+0x14]
  41cc53:	(bad)
  41cc56:	les    esi,FWORD PTR [edi+0x2d]
  41cc59:	test   BYTE PTR [ebp+0x6365e6ed],0xfb
  41cc60:	cli    
  41cc61:	popa   
  41cc62:	mov    ds:0x5cf46713,al
  41cc67:	pop    ebp
  41cc68:	push   ebx
  41cc69:	out    dx,eax
  41cc6a:	fwait
  41cc6b:	sub    ebp,ebx
  41cc6d:	xchg   DWORD PTR [ebp-0x67],esi
  41cc70:	sub    eax,0xc1371688
  41cc75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc76:	pop    eax
  41cc77:	stos   BYTE PTR es:[edi],al
  41cc78:	sub    edx,DWORD PTR [esi+ecx*4-0x3d]
  41cc7c:	sbb    bh,BYTE PTR [eax+edi*1-0xa37d501]
  41cc83:	sbb    ebx,edx
  41cc85:	or     eax,0x7dbcd8a0
  41cc8a:	xchg   edi,eax
  41cc8b:	jmp    0x12d23350
  41cc90:	xlat   BYTE PTR ds:[ebx]
  41cc91:	pushf  
  41cc92:	shl    BYTE PTR ds:0xbef8b5ec,1
  41cc98:	mov    edx,0xd0fc75cf
  41cc9d:	mov    WORD PTR ss:[edx+0x65de2e02],?
  41cca4:	js     0x41ccfd
  41cca6:	adc    DWORD PTR ds:0x69753b53,eax
  41ccac:	sub    DWORD PTR [edx],ecx
  41ccae:	inc    ebx
  41ccaf:	push   edi
  41ccb0:	mov    bl,0x4c
  41ccb2:	scas   al,BYTE PTR es:[edi]
  41ccb3:	addr16 xor eax,0x95d9c20b
  41ccb9:	pusha  
  41ccba:	adc    BYTE PTR [esi+0x6e],dl
  41ccbd:	mov    esp,0x85391675
  41ccc2:	(bad)  
  41ccc3:	lea    edi,[edi+0x50]
  41ccc6:	push   eax
  41ccc7:	scas   ax,WORD PTR es:[edi]
  41ccc9:	sar    DWORD PTR [edx-0x2c],1
  41cccc:	shl    DWORD PTR [ecx],cl
  41ccce:	icebp  
  41cccf:	xor    ah,bh
  41ccd1:	pushf  
  41ccd2:	push   DWORD PTR [ecx]
  41ccd4:	inc    ecx
  41ccd5:	gs jo  0x41cc91
  41ccd8:	(bad)  
  41ccd9:	jle    0x41cd34
  41ccdb:	iret   
  41ccdc:	sbb    bl,BYTE PTR ds:0xcbe50854
  41cce2:	jne    0x41cc75
  41cce4:	jmp    0xe0bf:0x22a7afbe
  41cceb:	xchg   ecx,eax
  41ccec:	mov    BYTE PTR [esi+0x551e9849],bl
  41ccf2:	repnz icebp 
  41ccf4:	push   cs
  41ccf5:	js     0x41cca3
  41ccf7:	inc    edi
  41ccf8:	ss (bad) 
  41ccfa:	call   0x4f63:0x75bfed62
  41cd01:	gs int3 
  41cd03:	mov    bh,0x6c
  41cd05:	xchg   esp,eax
  41cd06:	test   BYTE PTR [ebx],0x41
  41cd09:	xor    esi,DWORD PTR [ecx]
  41cd0b:	in     eax,dx
  41cd0c:	adc    al,0x9b
  41cd0e:	jno    0x41cd06
  41cd10:	xchg   ecx,eax
  41cd11:	dec    edx
  41cd12:	adc    dh,BYTE PTR [ebx+esi*4-0x2c06bc45]
  41cd19:	adc    BYTE PTR [eax+0x18],dl
  41cd1c:	in     eax,0x32
  41cd1e:	pop    ss
  41cd1f:	sub    ecx,ebx
  41cd21:	cmp    ah,BYTE PTR [ecx+0x6e]
  41cd24:	lea    ecx,[ebx+0xc]
  41cd27:	shl    BYTE PTR [esi+0x2866d8e2],1
  41cd2d:	lods   eax,DWORD PTR ds:[esi]
  41cd2e:	int    0xeb
  41cd30:	sar    BYTE PTR [eax+0x34f01e75],cl
  41cd36:	jmp    0x5d66:0x34edf165
  41cd3d:	(bad)  
  41cd3e:	out    0x8d,eax
  41cd40:	rcl    DWORD PTR [edx],cl
  41cd42:	test   DWORD PTR [edx],edi
  41cd44:	jns    0x41cd0c
  41cd46:	out    0xd,al
  41cd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd49:	fsubr  DWORD PTR [bx+si+0x5e]
  41cd4d:	rcpps  xmm5,XMMWORD PTR [esi+esi*1-0x1532580b]
  41cd55:	pusha  
  41cd56:	fwait
  41cd57:	mov    ch,0x6d
  41cd59:	int    0x28
  41cd5b:	adc    edx,edi
  41cd5d:	pop    ss
  41cd5e:	aad    0xde
  41cd60:	adc    esp,DWORD PTR [edi]
  41cd62:	add    ah,BYTE PTR [esi+0x2f]
  41cd65:	inc    edi
  41cd66:	cwde   
  41cd67:	call   0x3731:0x454954d3
  41cd6e:	push   esp
  41cd6f:	mov    bl,0xfd
  41cd71:	gs push cs
  41cd73:	add    dl,al
  41cd75:	out    dx,eax
  41cd76:	das    
  41cd77:	inc    ebx
  41cd78:	mov    ebx,0xb46881f2
  41cd7e:	jne    0x41cdcc
  41cd80:	push   eax
  41cd81:	jp     0x41cdb9
  41cd83:	cmp    al,0x5e
  41cd85:	mov    ss,WORD PTR [ecx+0x509f6966]
  41cd8b:	sub    dl,bl
  41cd8d:	test   eax,0x335c86e1
  41cd92:	pop    edx
  41cd93:	popf   
  41cd94:	sti    
  41cd95:	imul   edi,DWORD PTR gs:[edx+0x76],0x80322398
  41cd9d:	xchg   esp,eax
  41cd9e:	std    
  41cd9f:	jns    0x41cda5
  41cda1:	and    BYTE PTR [ebx-0x2d],ch
  41cda4:	mov    WORD PTR [edx+0x668ae6cc],es
  41cdaa:	push   edi
  41cdab:	popa   
  41cdac:	pop    eax
  41cdae:	cwde   
  41cdaf:	lds    eax,FWORD PTR [edx-0x37114cf9]
  41cdb5:	inc    ebp
  41cdb6:	lods   eax,DWORD PTR ds:[esi]
  41cdb7:	dec    esp
  41cdb8:	jge    0x41ce07
  41cdba:	sub    dl,ch
  41cdbc:	popf   
  41cdbd:	jmp    0x6550e537
  41cdc2:	mov    edx,DWORD PTR [eax-0x3a]
  41cdc5:	mov    dl,BYTE PTR [edx-0x18]
  41cdc8:	jnp    0x41ce03
  41cdca:	(bad)  
  41cdcb:	int3   
  41cdcc:	or     edi,DWORD PTR [ecx+0x72]
  41cdcf:	adc    ebx,esp
  41cdd1:	or     edx,esi
  41cdd3:	stc    
  41cdd4:	ins    BYTE PTR es:[edi],dx
  41cdd5:	push   esp
  41cdd6:	adc    dl,dl
  41cdd8:	inc    esi
  41cdd9:	lods   eax,DWORD PTR ds:[esi]
  41cdda:	aad    0x8b
  41cddc:	add    al,0xb7
  41cdde:	cmc    
  41cddf:	adc    bl,0x82
  41cde2:	mov    WORD PTR [edx+0x4b],cs
  41cde5:	push   0x29
  41cde7:	sub    al,0x98
  41cde9:	push   eax
  41cdea:	pushf  
  41cdeb:	fwait
  41cdec:	mov    WORD PTR [edi-0x42],fs
  41cdef:	or     al,0x6a
  41cdf1:	fdiv   st,st(2)
  41cdf3:	sbb    al,0xd9
  41cdf5:	(bad)  
  41cdf6:	in     eax,0x2a
  41cdf8:	mov    al,ah
  41cdfa:	je     0x41cd82
  41cdfc:	call   FWORD PTR [eax-0x46]
  41cdff:	xor    ecx,DWORD PTR [edx-0x19e4b60d]
  41ce05:	arpl   WORD PTR [eax],sp
  41ce07:	add    DWORD PTR gs:[edi-0x2e1d6f7e],ebx
  41ce0e:	rol    DWORD PTR [edx+ecx*8+0x41],0x7b
  41ce13:	mov    ds,WORD PTR [eax]
  41ce15:	push   esp
  41ce16:	repz ss jmp 0x9b80e3ba
  41ce1d:	sub    ch,dl
  41ce1f:	push   ebp
  41ce20:	shl    DWORD PTR [edi-0x1a],cl
  41ce23:	out    0x7,al
  41ce25:	or     BYTE PTR [esi],bl
  41ce27:	xor    eax,0xb88f3a6b
  41ce2c:	xlat   BYTE PTR ds:[ebx]
  41ce2d:	data16 mov cl,0x65
  41ce30:	dec    ebp
  41ce31:	add    BYTE PTR [esi+0x5d],al
  41ce34:	(bad)  
  41ce35:	aam    0xdc
  41ce37:	jmp    FWORD PTR [edx+0x1]
  41ce3a:	jne    0x41ce85
  41ce3c:	add    BYTE PTR [esi-0x39affcd5],bl
  41ce42:	mov    al,0x66
  41ce44:	ja     0x41ce4a
  41ce46:	popw   ss
  41ce48:	shl    DWORD PTR [edi],cl
  41ce4a:	test   al,0x30
  41ce4c:	test   eax,0x8cd751af
  41ce51:	pusha  
  41ce52:	call   0x7a7573bb
  41ce57:	push   edi
  41ce58:	mov    bl,0x53
  41ce5a:	mov    bh,0x7c
  41ce5c:	shl    DWORD PTR [ecx-0x2a42fa63],cl
  41ce62:	pop    edi
  41ce63:	push   es
  41ce64:	sbb    BYTE PTR [edi+ebx*8-0x3e],ch
  41ce68:	xchg   esp,eax
  41ce69:	and    eax,0xa0b32e71
  41ce6e:	scas   al,BYTE PTR es:[edi]
  41ce6f:	stos   DWORD PTR es:[edi],eax
  41ce70:	xchg   ebx,eax
  41ce71:	push   es
  41ce72:	sub    dh,ch
  41ce74:	rcr    esp,cl
  41ce76:	and    al,0x4b
  41ce78:	stos   DWORD PTR es:[edi],eax
  41ce79:	jmp    0x41cee2
  41ce7b:	push   ds
  41ce7c:	mov    ds:0x22efe154,al
  41ce81:	jns    0x41ceaa
  41ce83:	fidiv  WORD PTR [ecx-0x1e]
  41ce86:	jne    0x41ce44
  41ce88:	ror    DWORD PTR [ebx+0x7],cl
  41ce8b:	xchg   ebp,eax
  41ce8c:	jp     0x41cea5
  41ce8e:	push   edi
  41ce8f:	adc    BYTE PTR [esi],bh
  41ce91:	sub    DWORD PTR [eax+0x26],eax
  41ce94:	adc    eax,ebx
  41ce96:	rcr    esi,1
  41ce98:	sub    DWORD PTR [eax],ebx
  41ce9a:	or     bh,BYTE PTR [eax+eax*2-0x213b6505]
  41cea1:	popa   
  41cea2:	jne    0x41ceb4
  41cea4:	stc    
  41cea5:	xchg   ebp,eax
  41cea6:	adc    eax,0xbc66c671
  41ceab:	add    esi,esi
  41cead:	push   esi
  41ceae:	xchg   ebp,eax
  41ceaf:	pop    esi
  41ceb0:	addr16 gs pop esi
  41ceb3:	sub    dh,bh
  41ceb5:	aad    0x90
  41ceb7:	stc    
  41ceb8:	ret    
  41ceb9:	adc    DWORD PTR [eax],esp
  41cebb:	int3   
  41cebc:	sahf   
  41cebd:	xchg   esi,eax
  41cebe:	jne    0x41cf07
  41cec0:	test   BYTE PTR [esi],dl
  41cec2:	aam    0x1
  41cec4:	push   esi
  41cec5:	aaa    
  41cec6:	lods   eax,DWORD PTR ds:[esi]
  41cec7:	data16 stc 
  41cec9:	in     al,0xbe
  41cecb:	jl     0x41cf21
  41cecd:	cmp    ecx,DWORD PTR [eax+0x29]
  41ced0:	jae    0x41ce69
  41ced2:	jne    0x41cecf
  41ced4:	fs and esi,DWORD PTR es:[eax+0x66221786]
  41cedc:	pop    edi
  41cedd:	inc    esp
  41cede:	dec    BYTE PTR [ebx]
  41cee0:	hlt    
  41cee1:	adc    bh,BYTE PTR [esi-0x1eb0ef3f]
  41cee7:	dec    edx
  41cee8:	(bad)  
  41cee9:	addr16 push es
  41ceeb:	lods   al,BYTE PTR ds:[esi]
  41ceec:	inc    esp
  41ceed:	gs and eax,0xd7e32f4d
  41cef3:	(bad)  
  41cef4:	aad    0x58
  41cef6:	cmp    edx,DWORD PTR [esi]
  41cef8:	jo     0x41cf13
  41cefa:	je     0x41cf07
  41cefc:	jnp    0x41cf36
  41cefe:	hlt    
  41ceff:	pop    ss
  41cf00:	mov    BYTE PTR [esi+0x7d],ah
  41cf03:	fbld   TBYTE PTR [edx-0x1ac56137]
  41cf09:	fs add al,0x6a
  41cf0c:	pushf  
  41cf0d:	add    eax,0x6cf4f77
  41cf12:	sub    eax,0x92540c25
  41cf17:	fs fwait
  41cf19:	xchg   esi,eax
  41cf1a:	adc    eax,0xb40f0f5e
  41cf1f:	jge    0x41cf75
  41cf21:	jns    0x41cf0b
  41cf23:	push   esi
  41cf24:	aas    
  41cf25:	dec    ebx
  41cf26:	jne    0x41cf2b
  41cf28:	faddp  st(2),st
  41cf2a:	mov    cl,0x41
  41cf2c:	retf   0x74ea
  41cf2f:	popa   
  41cf30:	fdiv   QWORD PTR [edi]
  41cf32:	sbb    BYTE PTR [esi],ch
  41cf34:	shl    DWORD PTR [ebp-0x41241fbb],cl
  41cf3a:	pop    ebp
  41cf3b:	popa   
  41cf3c:	xor    esp,DWORD PTR [ebp-0x23]
  41cf3f:	adc    DWORD PTR [ebx],ecx
  41cf41:	jno    0x41cf56
  41cf43:	in     al,0xbe
  41cf45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf46:	mov    ss,WORD PTR [ebx]
  41cf48:	mov    eax,0x99bc7598
  41cf4d:	pop    ebx
  41cf4e:	icebp  
  41cf4f:	lods   al,BYTE PTR ds:[esi]
  41cf50:	test   BYTE PTR [esi+0x54],ah
  41cf53:	(bad)  
  41cf54:	mov    edi,0xbe9acc26
  41cf59:	fst    QWORD PTR ds:0x6a79acdb
  41cf5f:	out    0x7c,eax
  41cf61:	enter  0x6638,0xe5
  41cf65:	gs jno 0x41cf22
  41cf68:	je     0x41cfb8
  41cf6a:	(bad)  
  41cf6b:	sti    
  41cf6c:	dec    ebx
  41cf6d:	cmc    
  41cf6e:	jo     0x41cfbf
  41cf70:	rcl    esp,cl
  41cf72:	clc    
  41cf73:	std    
  41cf74:	(bad)  [ecx]
  41cf76:	pop    edi
  41cf77:	jecxz  0x41cfd9
  41cf79:	gs xchg edi,eax
  41cf7b:	mov    eax,0x6e7fa49e
  41cf80:	sar    BYTE PTR [edi],0xb3
  41cf83:	stos   DWORD PTR es:[edi],eax
  41cf84:	repz xor dh,BYTE PTR [ebp+0x3e]
  41cf88:	out    dx,eax
  41cf89:	add    ebx,ebp
  41cf8b:	mov    cl,0xd4
  41cf8d:	addr16 xchg esp,eax
  41cf8f:	clc    
  41cf90:	cli    
  41cf91:	aam    0x66
  41cf93:	xor    DWORD PTR [edi],esp
  41cf95:	jl     0x41cfef
  41cf97:	push   0xd20ddc2f
  41cf9c:	(bad)  
  41cf9e:	jne    0x41d014
  41cfa0:	inc    edi
  41cfa1:	mov    WORD PTR [ebx],fs
  41cfa3:	mov    ch,0x96
  41cfa5:	push   esp
  41cfa6:	add    eax,DWORD PTR [ebx-0x59a4c48c]
  41cfac:	adc    cl,bl
  41cfae:	pop    esi
  41cfaf:	sub    al,BYTE PTR [esi+0x75]
  41cfb2:	jno    0x41cf6f
  41cfb4:	push   ebx
  41cfb5:	jae    0x41d027
  41cfb7:	mov    eax,ds:0x29b26533
  41cfbc:	mov    WORD PTR [esi],gs
  41cfbe:	aas    
  41cfbf:	push   0x76
  41cfc1:	inc    ecx
  41cfc2:	ret    0xd324
  41cfc5:	in     al,dx
  41cfc6:	inc    edi
  41cfc7:	mov    eax,ds:0x976b3e3e
  41cfcc:	xchg   ebx,eax
  41cfcd:	data16 or ch,bh
  41cfd0:	jns    0x41cf56
  41cfd2:	xchg   edx,eax
  41cfd3:	jo     0x41cfab
  41cfd5:	sub    eax,0xf2d3b19a
  41cfda:	push   ecx
  41cfdb:	push   eax
  41cfdc:	xor    dh,BYTE PTR [eax+0x3bd5e924]
  41cfe2:	retf   
  41cfe3:	std    
  41cfe4:	ror    DWORD PTR [edx+0x10],cl
  41cfe7:	mov    esi,0xde6fdd76
  41cfec:	sar    ch,1
  41cfee:	add    ch,0xa8
  41cff1:	jle    0x41cfc4
  41cff3:	fdiv   DWORD PTR [edi+0xd76065a]
  41cff9:	push   ds
  41cffa:	inc    DWORD PTR [ebx-0x59e9cccb]
  41d000:	sbb    edi,eax
  41d002:	out    dx,eax
  41d003:	mov    eax,ds:0x737560f1
  41d008:	call   0xf6a0:0x30019871
  41d00f:	xchg   ecx,eax
  41d010:	lock xor edx,DWORD PTR [ebp+ebx*8+0x2a8195ea]
  41d018:	ror    edi,cl
  41d01a:	fcom   DWORD PTR [esi]
  41d01c:	mov    al,0x77
  41d01e:	cli    
  41d01f:	sub    DWORD PTR [eiz*2-0x18ca596],0x1db9bec4
  41d02a:	out    0xed,al
  41d02c:	jno    0x41d007
  41d02e:	jbe    0x41d0ab
  41d030:	adc    edi,DWORD PTR [ebp+0x65eb3ded]
  41d036:	stc    
  41d037:	not    DWORD PTR [ecx+0xae9dc21]
  41d03d:	lods   al,BYTE PTR ds:[esi]
  41d03e:	xlat   BYTE PTR ds:[ebx]
  41d03f:	inc    edx
  41d040:	xchg   ebx,eax
  41d041:	pushf  
  41d042:	imul   ebp,ebp,0x24
  41d045:	sub    BYTE PTR [edi+0x5],dh
  41d048:	retf   0xf53b
  41d04b:	sbb    dl,BYTE PTR [eax]
  41d04d:	popf   
  41d04e:	leave  
  41d04f:	data16 jno 0x41d093
  41d052:	inc    edx
  41d053:	dec    esi
  41d054:	sar    esi,cl
  41d056:	imul   ecx,DWORD PTR [esi],0xffffffd4
  41d059:	cmp    bl,0x72
  41d05c:	sub    al,0x35
  41d05e:	jb     0x41d004
  41d060:	(bad)  
  41d061:	(bad)  
  41d062:	daa    
  41d063:	cld    
  41d064:	rcr    DWORD PTR [edi+0x3c4b171a],cl
  41d06a:	mov    esi,0x297abfda
  41d06f:	sbb    BYTE PTR [eax-0x12987805],dh
  41d075:	mov    ch,0xfe
  41d077:	sub    ebx,DWORD PTR [esi+0x612172de]
  41d07d:	jnp    0x41d01a
  41d07f:	leave  
  41d080:	adc    DWORD PTR ds:0xfda08635,edi
  41d086:	xchg   edx,eax
  41d087:	enter  0xbb9f,0x8b
  41d08b:	mov    esp,0x5975ab82
  41d090:	jp     0x41d04a
  41d092:	arpl   WORD PTR [ecx+ecx*2],si
  41d095:	mov    DWORD PTR [edx-0x2f],ebp
  41d098:	nop
  41d099:	scas   eax,DWORD PTR es:[edi]
  41d09a:	sub    esp,DWORD PTR [edx]
  41d09c:	cmp    eax,0x31578fbf
  41d0a1:	push   0x74b54141
  41d0a6:	push   ecx
  41d0a7:	ss and al,0x74
  41d0aa:	jne    0x41d098
  41d0ac:	loop   0x41d035
  41d0ae:	out    dx,eax
  41d0af:	repnz arpl WORD PTR [edx],bx
  41d0b2:	lods   eax,DWORD PTR ds:[esi]
  41d0b3:	add    eax,0xf64b24d3
  41d0b8:	xchg   BYTE PTR [ebp+0x1a],ah
  41d0bb:	xchg   edi,eax
  41d0bc:	iret   
  41d0bd:	mov    edx,0xa45669b
  41d0c2:	pop    esp
  41d0c3:	arpl   bx,dx
  41d0c5:	xor    eax,0xf3b0c79a
  41d0ca:	mov    al,ds:0xb1faa523
  41d0cf:	jns    0x41d0cb
  41d0d1:	(bad)  
  41d0d2:	push   ecx
  41d0d3:	sub    WORD PTR [ebx-0x32],sp
  41d0d7:	fsub   st(2),st
  41d0d9:	mov    edx,0x4eec634
  41d0de:	lock ret 0x9514
  41d0e2:	inc    ebp
  41d0e3:	xor    DWORD PTR [ebx],ebx
  41d0e5:	sub    eax,0xe8c5811e
  41d0ea:	(bad)  
  41d0eb:	push   eax
  41d0ec:	jecxz  0x41d077
  41d0ee:	jne    0x41d101
  41d0f0:	ror    BYTE PTR [ebp-0x5645cd59],1
  41d0f6:	xchg   ebx,edi
  41d0f8:	fisttp DWORD PTR [esp+eiz*2+0x60]
  41d0fc:	in     eax,dx
  41d0fd:	and    bl,BYTE PTR [esi]
  41d0ff:	data16 mov ah,0xed
  41d102:	test   BYTE PTR [edx],dl
  41d104:	sar    BYTE PTR [ecx+0x26b87bf8],1
  41d10a:	les    eax,FWORD PTR [ebx-0x3987ff58]
  41d110:	outs   dx,DWORD PTR ds:[esi]
  41d111:	sub    DWORD PTR gs:[edx],esi
  41d114:	addr16 cwde 
  41d116:	int3   
  41d117:	sbb    eax,0xe03bc4fc
  41d11c:	xor    al,0x17
  41d11e:	fwait
  41d11f:	push   ss
  41d120:	mov    eax,0xb8663f01
  41d125:	sbb    DWORD PTR [eax+0x24],0x66d1755b
  41d12c:	sar    DWORD PTR [ecx+0x5fd0e32e],1
  41d132:	fldenv [ebp-0x68025e03]
  41d138:	iret   
  41d139:	ds hlt 
  41d13b:	(bad)  
  41d13c:	out    0x4f,al
  41d13e:	dec    eax
  41d13f:	dec    dx
  41d141:	scas   eax,DWORD PTR es:[edi]
  41d142:	dec    esp
  41d143:	ret    
  41d144:	jmp    0x9faa:0x2789f62c
  41d14b:	sti    
  41d14c:	aaa    
  41d14d:	adc    eax,0x813de3c5
  41d152:	and    eax,0xe0e0206a
  41d157:	push   0xffffffc3
  41d159:	retf   
  41d15a:	jbe    0x41d113
  41d15c:	pop    esi
  41d15d:	xlat   BYTE PTR ds:[ebx]
  41d15e:	retf   0x6e3e
  41d161:	cld    
  41d162:	jne    0x41d15f
  41d164:	add    esp,DWORD PTR [esi]
  41d166:	cdq    
  41d167:	fild   DWORD PTR ds:0xb9a0828e
  41d16d:	fwait
  41d16e:	jne    0x41d0fd
  41d170:	dec    edi
  41d171:	sub    al,0x65
  41d173:	add    esi,ebx
  41d175:	dec    edx
  41d176:	je     0x41d1e1
  41d178:	jmp    0x8565:0x12b8599
  41d17f:	mov    ebx,fs
  41d181:	mov    esp,0x1621c464
  41d186:	bound  ebx,QWORD PTR [ebx]
  41d188:	push   esp
  41d189:	setnp  dh
  41d18c:	sbb    DWORD PTR [ebx+0x725d667e],esp
  41d192:	lock lahf 
  41d194:	js     0x41d1d3
  41d196:	mov    ah,0x91
  41d198:	jae    0x41d13e
  41d19a:	cmp    BYTE PTR [edx+0x5cd9b5d2],ch
  41d1a0:	out    0xe4,eax
  41d1a2:	imul   ecx,ecx,0x21
  41d1a5:	mov    fs,WORD PTR [esi+0x3bd5d1e6]
  41d1ab:	lds    edx,FWORD PTR [esi+eiz*2-0x341dc93f]
  41d1b2:	popf   
  41d1b3:	shl    DWORD PTR [edx-0x74a78362],cl
  41d1b9:	stc    
  41d1ba:	jne    0x41d1ee
  41d1bc:	nop
  41d1bd:	scas   al,BYTE PTR es:[edi]
  41d1be:	shl    DWORD PTR [esi],1
  41d1c0:	mov    esi,0xa866b15c
  41d1c5:	jge    0x41d1c1
  41d1c7:	out    0xd3,eax
  41d1c9:	inc    edx
  41d1ca:	inc    eax
  41d1cb:	adc    dh,0x20
  41d1ce:	sub    ebx,edx
  41d1d0:	sub    DWORD PTR [edi+0x33],0x1d
  41d1d4:	data16 icebp 
  41d1d6:	sbb    eax,DWORD PTR [esi]
  41d1d8:	sar    DWORD PTR [eax],cl
  41d1da:	(bad)  [edi+0x433640de]
  41d1e0:	jp     0x41d1a0
  41d1e2:	not    DWORD PTR [eax+0x68f24a05]
  41d1e8:	test   DWORD PTR [esi+0x15],ebp
  41d1eb:	xchg   esp,eax
  41d1ec:	rol    DWORD PTR [edi],cl
  41d1ee:	sub    bl,bh
  41d1f0:	xor    BYTE PTR [edx+0x6d9d3d46],0x9e
  41d1f7:	and    BYTE PTR [edx],cl
  41d1f9:	add    eax,0x244d121
  41d1fe:	rol    BYTE PTR [edi],0xcd
  41d201:	dec    edx
  41d202:	push   bp
  41d204:	adc    edx,edi
  41d206:	ins    BYTE PTR es:[edi],dx
  41d207:	imul   ebp,DWORD PTR [esi+0x5c],0xfd3ae619
  41d20e:	sbb    al,0x58
  41d210:	jbe    0x41d228
  41d212:	adc    DWORD PTR [eax-0x5ee4434d],0xd0b7bd4f
  41d21c:	cmc    
  41d21d:	addr16 stc 
  41d21f:	inc    esi
  41d220:	push   ebx
  41d221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d222:	hlt    
  41d223:	enter  0xa36,0xd4
  41d227:	rol    BYTE PTR [edi+0x65],cl
  41d22a:	push   ecx
  41d22b:	loop   0x41d1cd
  41d22d:	aad    0x2b
  41d22f:	lock push 0xffffffd5
  41d232:	push   eax
  41d233:	mov    cl,0x2b
  41d235:	bound  esi,QWORD PTR [ebp-0x34]
  41d238:	call   0xe4cc:0x9a1eb887
  41d23f:	mov    WORD PTR [esi-0x4f],si
  41d243:	push   esp
  41d244:	shl    DWORD PTR [esi-0x6a],cl
  41d247:	mov    ds:0x44f1374f,al
  41d24c:	nop
  41d24d:	ficomp WORD PTR [ebp-0xee77f63]
  41d253:	mov    cx,0x860f
  41d257:	repz pop ebx
  41d259:	imul   eax,DWORD PTR ds:0x75993efb,0xffffffda
  41d260:	scas   al,BYTE PTR es:[edi]
  41d261:	xchg   ebx,eax
  41d262:	ins    BYTE PTR es:[edi],dx
  41d263:	jbe    0x41d262
  41d265:	js     0x41d231
  41d267:	mov    al,ds:0xa6f5e6f1
  41d26c:	push   0x2
  41d26e:	or     bh,BYTE PTR [edx-0x7d]
  41d271:	xor    bl,BYTE PTR [edx-0x4f48849d]
  41d277:	jne    0x41d259
  41d279:	addr16 cmc 
  41d27b:	xor    eax,0x71664374
  41d281:	sar    DWORD PTR [esi+0x45],1
  41d284:	out    0x63,eax
  41d286:	or     DWORD PTR ds:0x79ba6cca,0x66fc1fef
  41d290:	mov    dh,0xb3
  41d292:	jg     0x41d25e
  41d294:	ror    eax,cl
  41d296:	popf   
  41d297:	mov    al,0x56
  41d299:	not    ch
  41d29b:	inc    ebx
  41d29c:	sub    al,0x65
  41d29e:	jl     0x41d270
  41d2a0:	loope  0x41d2a9
  41d2a2:	sbb    BYTE PTR [edx+0x5e1a1063],bh
  41d2a8:	in     eax,0x26
  41d2aa:	jg     0x41d24d
  41d2ac:	stc    
  41d2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ae:	push   ebx
  41d2af:	sub    BYTE PTR fs:[esi],al
  41d2b2:	cmp    eax,0xb61c99ae
  41d2b7:	callw  0xbe6d
  41d2bb:	clc    
  41d2bc:	repnz stc 
  41d2be:	mul    DWORD PTR [edx-0x3db97aad]
  41d2c4:	cwde   
  41d2c5:	push   edi
  41d2c6:	lods   eax,DWORD PTR ds:[esi]
  41d2c7:	test   al,0xb
  41d2c9:	mov    ds:0xfe6c6617,eax
  41d2ce:	xchg   esp,eax
  41d2cf:	sub    ebx,edx
  41d2d1:	out    dx,eax
  41d2d2:	push   edx
  41d2d3:	adc    edi,ebp
  41d2d5:	adc    eax,0x65f2096e
  41d2da:	push   edi
  41d2db:	(bad)  
  41d2dc:	xlat   BYTE PTR ds:[ebx]
  41d2dd:	dec    edx
  41d2de:	(bad)  
  41d2e0:	(bad)  
  41d2e1:	dec    esp
  41d2e2:	cmp    BYTE PTR [ebx-0x48a8f1f],0xc9
  41d2e9:	adc    eax,0x195fc17e
  41d2ee:	cmp    DWORD PTR [edi-0x8],esp
  41d2f1:	mov    ch,0xc1
  41d2f3:	and    DWORD PTR [ebx+0x60],ebp
  41d2f6:	sbb    BYTE PTR [edx+0x48],cl
  41d2f9:	mov    eax,0x8d026e6b
  41d2fe:	cmp    al,0xcb
  41d300:	in     al,0xef
  41d302:	xor    eax,0xe664952e
  41d307:	jb     0x41d2dc
  41d309:	cld    
  41d30a:	xchg   edx,eax
  41d30b:	addr16 and esp,ecx
  41d30e:	fs retf 0x9891
  41d312:	jecxz  0x41d2ba
  41d314:	sar    DWORD PTR [esi-0x58],cl
  41d317:	xor    DWORD PTR [ebx-0x54],esp
  41d31a:	fstp   DWORD PTR [ebx-0x2d46c4ad]
  41d320:	push   ebx
  41d321:	je     0x41d310
  41d323:	xor    BYTE PTR [edx-0x29f6ff27],0x36
  41d32a:	ss push ebx
  41d32c:	hlt    
  41d32d:	jb     0x41d359
  41d32f:	jge    0x41d2c4
  41d331:	add    al,0xb5
  41d333:	and    edx,DWORD PTR [eax]
  41d335:	sub    eax,0x863b1215
  41d33a:	ret    
  41d33b:	lods   eax,DWORD PTR ds:[esi]
  41d33c:	inc    ebp
  41d33d:	call   0x2de115c8
  41d342:	jne    0x41d32b
  41d344:	icebp  
  41d345:	mov    ebx,esi
  41d347:	fbld   TBYTE PTR [esi-0x54993770]
  41d34d:	pop    eax
  41d34e:	out    0x29,al
  41d350:	loop   0x41d2ec
  41d352:	iret   
  41d353:	inc    edi
  41d354:	imul   esp,ebp,0xffffffe1
  41d357:	call   0xb3978542
  41d35c:	push   ds
  41d35d:	inc    ebx
  41d35e:	imul   DWORD PTR [ebp-0x30]
  41d361:	mov    eax,eax
  41d363:	add    dl,BYTE PTR [ebx]
  41d365:	popf   
  41d366:	sahf   
  41d367:	xor    al,0xf2
  41d369:	lock and al,0xb
  41d36c:	xor    eax,0xeb8a0804
  41d371:	ja     0x41d3a8
  41d373:	jo     0x41d3ed
  41d375:	gs in  eax,0x7
  41d378:	pop    ss
  41d379:	call   0x7596:0x1b418830
  41d380:	repnz mov edi,DWORD PTR ds:0x8fdb9205
  41d387:	rcl    DWORD PTR [ebx-0x4c],0x9
  41d38b:	mov    ch,0x86
  41d38d:	mov    edx,DWORD PTR [eax]
  41d38f:	xchg   esi,eax
  41d390:	and    al,0xd1
  41d392:	in     eax,0x69
  41d394:	sbb    eax,DWORD PTR ds:0x278dca01
  41d39a:	es inc ebx
  41d39c:	nop
  41d39d:	in     eax,dx
  41d39e:	jne    0x41d37f
  41d3a0:	push   ebx
  41d3a1:	das    
  41d3a2:	outs   dx,BYTE PTR ds:[esi]
  41d3a3:	xchg   BYTE PTR [edx],dl
  41d3a5:	(bad)  
  41d3a6:	pop    esi
  41d3a7:	dec    si
  41d3a9:	cmp    BYTE PTR [edx+0x1],ah
  41d3ac:	shl    DWORD PTR [ecx],cl
  41d3ae:	mov    dh,0x48
  41d3b0:	mov    ds:0x2c7817a4,al
  41d3b5:	xchg   DWORD PTR [eax-0x6a4ffdab],edi
  41d3bb:	mov    eax,ds:0x5f6a24e
  41d3c0:	push   ebx
  41d3c1:	pushf  
  41d3c2:	inc    eax
  41d3c3:	inc    ebp
  41d3c4:	pop    ebp
  41d3c5:	add    DWORD PTR [esi],ebx
  41d3c7:	sub    ah,BYTE PTR [esp+eax*1-0x131a518b]
  41d3ce:	inc    esp
  41d3cf:	je     0x41d38c
  41d3d1:	repnz mov BYTE PTR [edi+esi*4+0x20],bh
  41d3d6:	inc    ebp
  41d3d7:	data16 fisubr DWORD PTR ds:[eax+0xd4b6329]
  41d3df:	sar    DWORD PTR [ebx+0x2b],1
  41d3e2:	cdq    
  41d3e3:	push   ebx
  41d3e4:	mov    eax,ds:0xd96335ae
  41d3e9:	push   cx
  41d3eb:	or     cl,al
  41d3ed:	or     eax,0x91a0cdac
  41d3f2:	jns    0x41d3fb
  41d3f4:	test   DWORD PTR [eax-0x50c8268c],ebx
  41d3fa:	mov    ds,WORD PTR ss:[ebp+0x5a5e4d66]
  41d401:	pop    ebx
  41d402:	jbe    0x41d444
  41d404:	ret    
  41d405:	cmp    ebp,DWORD PTR [bx]
  41d408:	shl    DWORD PTR [edx-0xa072fb5],cl
  41d40e:	and    al,0x54
  41d410:	mov    bh,0x66
  41d412:	mov    edx,0x34ba51e3
  41d417:	loop   0x41d3e1
  41d419:	jno    0x41d41b
  41d41b:	pop    ecx
  41d41c:	pop    esp
  41d41d:	jne    0x41d494
  41d41f:	mov    ebx,0x84f470a1
  41d424:	xchg   edx,eax
  41d425:	or     al,0x48
  41d427:	data16 in al,0x66
  41d42a:	jo     0x41d40c
  41d42c:	shr    DWORD PTR [ebp+eax*8+0x71],cl
  41d430:	jns    0x41d44b
  41d432:	loop   0x41d430
  41d434:	clc    
  41d435:	gs scas al,BYTE PTR es:[edi]
  41d437:	sahf   
  41d438:	pop    edx
  41d439:	daa    
  41d43a:	aas    
  41d43b:	xor    al,0x60
  41d43d:	or     BYTE PTR [eax-0x74],0xdd
  41d441:	inc    esi
  41d442:	jne    0x41d441
  41d444:	out    dx,al
  41d445:	scas   al,BYTE PTR es:[edi]
  41d446:	jnp    0x41d47b
  41d448:	cld    
  41d449:	icebp  
  41d44a:	xchg   ebx,eax
  41d44b:	bound  esi,QWORD PTR [eax]
  41d44d:	mov    ds:0xf30a6780,eax
  41d452:	mov    ch,0x9
  41d454:	add    eax,0x407a8766
  41d459:	jo     0x41d4d0
  41d45b:	sbb    dl,BYTE PTR [ebp+0x5c]
  41d45e:	shl    BYTE PTR [edi*2+0x6e6d0d09],1
  41d465:	(bad)  [ebp+0x213593ad]
  41d46b:	cmp    dl,bl
  41d46d:	stos   BYTE PTR es:[edi],al
  41d46e:	cmp    eax,0x9b19e8cb
  41d473:	or     ebx,DWORD PTR [ebp+esi*4+0x66]
  41d477:	pop    ss
  41d478:	inc    edx
  41d479:	jns    0x41d4bb
  41d47b:	data16 lahf 
  41d47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47e:	mov    bh,0x90
  41d480:	ror    DWORD PTR [ecx+0x5423bf7c],cl
  41d486:	mov    al,0x63
  41d488:	push   ss
  41d489:	sbb    DWORD PTR gs:[edi-0x23],ebp
  41d48d:	jmp    0x9351:0x8406d7d2
  41d494:	jle    0x41d46e
  41d496:	jbe    0x41d498
  41d498:	mov    ds:0x84622c6,al
  41d49d:	ins    BYTE PTR es:[edi],dx
  41d49e:	mov    cl,0x5
  41d4a0:	adc    edi,0xffffffc5
  41d4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a4:	xchg   edx,eax
  41d4a5:	mov    bh,0xfa
  41d4a7:	push   edi
  41d4a8:	imul   ecx,DWORD PTR [eax],0x23
  41d4ab:	mov    dh,0x7d
  41d4ad:	nop
  41d4ae:	jne    0x41d4ab
  41d4b0:	jecxz  0x41d4ed
  41d4b2:	rcr    BYTE PTR [eax+0x61720f4e],1
  41d4b8:	out    0xb4,eax
  41d4ba:	aaa    
  41d4bb:	xor    BYTE PTR [eax],bl
  41d4bd:	inc    esi
  41d4be:	lahf   
  41d4bf:	sbb    al,0x8a
  41d4c1:	fist   DWORD PTR [edi+0x507506e5]
  41d4c7:	arpl   cx,bp
  41d4c9:	gs retf 0xa68c
  41d4cd:	and    cl,dh
  41d4cf:	mov    ah,0x9c
  41d4d1:	mov    ds:0x963599af,eax
  41d4d6:	popf   
  41d4d7:	mov    ds:0xad365f3,eax
  41d4dc:	call   0xceff1b7c
  41d4e1:	inc    ebx
  41d4e2:	and    eax,0x75148e5d
  41d4e7:	mov    ds:0xe176712c,eax
  41d4ec:	out    dx,eax
  41d4ed:	jne    0x41d4bc
  41d4ef:	out    dx,ax
  41d4f1:	fucomip st,st(1)
  41d4f3:	xchg   ebx,eax
  41d4f4:	pop    ecx
  41d4f5:	dec    edi
  41d4f6:	dec    ecx
  41d4f7:	xchg   esi,eax
  41d4f8:	adc    bl,BYTE PTR [edi+0x76]
  41d4fb:	enter  0xa514,0x99
  41d4ff:	lahf   
  41d500:	retf   
  41d501:	data16 mov gs,WORD PTR [eax+0xc]
  41d505:	rcr    ch,1
  41d507:	or     eax,0x86f00857
  41d50c:	sub    al,0xa0
  41d50e:	jne    0x41d557
  41d510:	mul    eax
  41d512:	rol    ch,0x70
  41d515:	outs   dx,BYTE PTR gs:[esi]
  41d517:	jecxz  0x41d58d
  41d519:	(bad)  
  41d51a:	jmp    0x92e0b23d
  41d51f:	add    eax,0x12747140
  41d524:	sahf   
  41d525:	fcom   DWORD PTR [eax+0x18]
  41d528:	mov    ecx,0x1e672176
  41d52d:	and    edx,DWORD PTR [esi+eiz*2+0x63]
  41d531:	jbe    0x41d544
  41d533:	in     eax,dx
  41d534:	shr    DWORD PTR [eax+esi*1-0x66],cl
  41d538:	ret    
  41d539:	leave  
  41d53a:	int    0x1d
  41d53c:	push   es
  41d53d:	gs call 0x8180:0x88d955f7
  41d545:	or     dl,0x5d
  41d548:	ficomp WORD PTR [edi+0x75]
  41d54b:	push   esi
  41d54c:	ficom  DWORD PTR [esi+eax*8]
  41d54f:	pop    eax
  41d550:	sub    esp,DWORD PTR [ebx]
  41d552:	pop    esp
  41d553:	data16 adc cl,BYTE PTR [esi+ebx*8]
  41d557:	in     eax,dx
  41d558:	shr    DWORD PTR [ebx+0x55],cl
  41d55b:	xchg   edx,eax
  41d55c:	pop    eax
  41d55d:	shl    BYTE PTR [ebp+esi*2-0x8d99a8d],cl
  41d564:	loope  0x41d5e4
  41d566:	adc    edi,DWORD PTR [ebx]
  41d568:	add    edi,ebx
  41d56a:	nop
  41d56b:	aad    0xf
  41d56d:	mov    BYTE PTR [ebp+0x43],dh
  41d570:	arpl   WORD PTR [esi+ebx*4],cx
  41d573:	sub    BYTE PTR [eax+0xd66eaa6],bl
  41d579:	dec    eax
  41d57a:	js     0x41d5a6
  41d57c:	shl    DWORD PTR [esi-0x76001d69],1
  41d582:	xor    bl,BYTE PTR ds:0x26abf68f
  41d588:	dec    ebx
  41d589:	psubw  mm0,QWORD PTR gs:[ecx+0x20]
  41d58e:	mov    bl,0xe4
  41d590:	jle    0x41d5d6
  41d592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d593:	pop    ss
  41d594:	jmp    0x41d54b
  41d596:	jne    0x41d5e6
  41d598:	lea    esi,[edi]
  41d59a:	push   ecx
  41d59b:	sub    ah,BYTE PTR [esi+0x6e643f1f]
  41d5a1:	pop    ss
  41d5a2:	arpl   WORD PTR [ecx],bx
  41d5a4:	xchg   ebx,eax
  41d5a5:	jl     0x41d59c
  41d5a7:	or     edx,ebx
  41d5a9:	sbb    al,0x3e
  41d5ab:	xchg   BYTE PTR [edi+esi*2+0x601b46c0],bl
  41d5b2:	xchg   ecx,eax
  41d5b3:	jns    0x41d536
  41d5b5:	mov    esp,0x13bb1359
  41d5ba:	sbb    edi,DWORD PTR [edx-0x39]
  41d5bd:	enter  0x61b7,0x1d
  41d5c1:	push   edi
  41d5c2:	jne    0x41d5d8
  41d5c4:	icebp  
  41d5c5:	repnz ins DWORD PTR es:[edi],dx
  41d5c7:	cdq    
  41d5c8:	js     0x41d5b1
  41d5ca:	dec    esi
  41d5cb:	nop
  41d5cc:	repz mov ds:0x1390b42f,eax
  41d5d2:	aaa    
  41d5d3:	push   esp
  41d5d4:	pop    es
  41d5d5:	inc    ebp
  41d5d6:	sbb    eax,0x7329d0ab
  41d5db:	out    dx,eax
  41d5dc:	xor    BYTE PTR [bx+di-0x412a],ah
  41d5e1:	popa   
  41d5e2:	and    eax,0xd8dfbff0
  41d5e7:	inc    ecx
  41d5e8:	imul   eax,DWORD PTR [ebp+0x17],0xffffffdb
  41d5ec:	pop    eax
  41d5ed:	dec    DWORD PTR [ebp+0x75aa4020]
  41d5f3:	not    DWORD PTR [eax]
  41d5f5:	add    DWORD PTR [eax+0x1c61a3f5],ebx
  41d5fb:	push   ds
  41d5fc:	pop    ebx
  41d5fd:	stos   DWORD PTR es:[edi],eax
  41d5fe:	jnp    0x41d608
  41d600:	mov    ds:0xd3d5b1ec,eax
  41d605:	mov    ebx,0xdcc74f9
  41d60a:	imul   eax,DWORD PTR [esi+0x5bb85972],0x53f4e575
  41d614:	inc    ecx
  41d615:	std    
  41d616:	add    al,0x13
  41d618:	rol    DWORD PTR [ebp-0x71],cl
  41d61b:	loop   0x41d5d8
  41d61d:	xchg   esi,ecx
  41d61f:	xor    ecx,DWORD PTR [ebx-0x7]
  41d622:	enter  0x55f,0x75
  41d626:	cmp    eax,0x8059cc66
  41d62b:	jmp    0x41d600
  41d62d:	dec    edi
  41d62e:	repnz pushf 
  41d630:	add    eax,0x49bae9e8
  41d635:	(bad)  
  41d636:	cmp    DWORD PTR [esp+edi*8+0x70],ebx
  41d63a:	cwde   
  41d63b:	xor    al,0x14
  41d63e:	fs loope 0x41d64d
  41d641:	xchg   edx,eax
  41d642:	dec    esi
  41d643:	(bad)  
  41d644:	fsub   DWORD PTR [edi+0x75]
  41d647:	or     al,0xb6
  41d649:	sbb    eax,0xd93127ed
  41d64e:	fldenv [ecx+0x457570a7]
  41d654:	jmp    0xfefa29af
  41d659:	add    DWORD PTR [ebp-0x53],esi
  41d65c:	popf   
  41d65d:	jb     0x41d6a4
  41d65f:	adc    DWORD PTR [eax+0x65],ebp
  41d662:	pop    esp
  41d663:	(bad)  
  41d664:	es mov eax,0x204c4ced
  41d66a:	sub    al,0x23
  41d66c:	div    BYTE PTR [ebx]
  41d66e:	jne    0x41d66b
  41d670:	push   ecx
  41d671:	pushf  
  41d672:	xchg   edi,eax
  41d673:	xchg   ebx,eax
  41d674:	fwait
  41d675:	and    al,bl
  41d677:	data16 outs dx,BYTE PTR ds:[esi]
  41d679:	mov    al,0x45
  41d67b:	dec    ebp
  41d67c:	shl    DWORD PTR [eax-0x33206801],cl
  41d682:	inc    ebx
  41d683:	lods   al,BYTE PTR ds:[esi]
  41d684:	inc    eax
  41d685:	sub    ecx,DWORD PTR gs:[ebx]
  41d688:	xor    DWORD PTR [eax+0x2a4529b6],0xfffffffa
  41d68f:	scas   al,BYTE PTR es:[edi]
  41d690:	loopne 0x41d68a
  41d692:	push   0x55
  41d694:	cld    
  41d695:	imul   esi,DWORD PTR [ecx],0xffffffc6
  41d698:	and    eax,0x4afe9e71
  41d69d:	add    BYTE PTR [ecx+0x6a],ch
  41d6a0:	iret   
  41d6a1:	out    0xc8,al
  41d6a3:	add    al,BYTE PTR [esi+0x2c8e291d]
  41d6a9:	imul   edi,DWORD PTR [edx-0x3d7af8ef],0x12
  41d6b0:	mov    ah,BYTE PTR [eax+ebx*8-0x44c1a98a]
  41d6b7:	data16 into 
  41d6b9:	adc    BYTE PTR [eax-0x5d62ca8],ah
  41d6bf:	add    eax,0xdaf8da03
  41d6c4:	imul   esp,DWORD PTR [ebp+0x2c],0x9d3f4641
  41d6cb:	cmp    eax,0xf2f77cf6
  41d6d0:	mov    al,0x95
  41d6d2:	jne    0x41d6f4
  41d6d4:	mov    ecx,0xdb1324d7
  41d6d9:	xor    BYTE PTR [edi],0xa0
  41d6dc:	xor    eax,DWORD PTR [esi*8-0xabbd75d]
  41d6e3:	pop    es
  41d6e4:	sub    al,0x7b
  41d6e6:	jne    0x41d69b
  41d6e8:	adc    eax,DWORD PTR [edi+esi*8+0x12f118df]
  41d6ef:	fs xchg esp,eax
  41d6f1:	adc    dh,dl
  41d6f3:	test   al,0x7c
  41d6f5:	hlt    
  41d6f6:	xor    eax,0x3dbdd34a
  41d6fb:	pop    ebx
  41d6fc:	add    al,0x73
  41d6fe:	bound  edx,QWORD PTR [edi]
  41d700:	jo     0x41d767
  41d702:	loop   0x41d723
  41d704:	sub    DWORD PTR [edi+0x33],eax
  41d707:	cs arpl bx,bp
  41d70a:	js     0x41d6f3
  41d70c:	fisttp WORD PTR [esp+esi*2+0x34]
  41d710:	sub    DWORD PTR [edx+0x34bc67d6],0x59
  41d717:	sbb    eax,0xc49c653f
  41d71c:	or     al,0x72
  41d71e:	ret    
  41d71f:	dec    edx
  41d720:	rol    DWORD PTR [esi-0x12f85e10],cl
  41d726:	mov    eax,ds:0x81669592
  41d72b:	xor    ah,BYTE PTR [esi+0x1c]
  41d72e:	addr16 imul edx,ecx,0x7
  41d732:	int3   
  41d733:	(bad)  
  41d734:	out    dx,eax
  41d735:	cdq    
  41d736:	jne    0x41d75a
  41d738:	cmp    eax,0xfcf553b6
  41d73d:	xchg   esi,eax
  41d73e:	aam    0x66
  41d740:	les    edx,FWORD PTR [eax+0x2e05c141]
  41d746:	pusha  
  41d747:	dec    edi
  41d748:	shr    DWORD PTR [edx-0x5b],cl
  41d74b:	js     0x41d70b
  41d74d:	push   esi
  41d74e:	lea    eax,[edx+0x6653783f]
  41d754:	aam    0x36
  41d756:	cmp    al,0xc2
  41d758:	sar    ebp,cl
  41d75a:	dec    edx
  41d75b:	mov    esp,0xf574945c
  41d760:	xor    esp,DWORD PTR [ebp+0x73]
  41d763:	adc    al,0x18
  41d765:	ret    
  41d766:	jp     0x41d740
  41d768:	(bad)  
  41d769:	xchg   edx,eax
  41d76a:	mov    dh,0xa4
  41d76c:	jb     0x41d792
  41d76e:	mov    edx,0x25879716
  41d773:	out    0xde,eax
  41d775:	sbb    al,0xa7
  41d777:	popa   
  41d778:	addr16 imul eax,ebp,0x1b
  41d77c:	ret    
  41d77d:	outs   dx,BYTE PTR ds:[esi]
  41d77e:	jecxz  0x41d70e
  41d780:	lds    esi,FWORD PTR fs:0x9ec7f7ab
  41d787:	pop    ebp
  41d788:	stos   BYTE PTR es:[edi],al
  41d789:	jg     0x41d7db
  41d78b:	lahf   
  41d78c:	xchg   ebx,eax
  41d78d:	xchg   ebp,esi
  41d78f:	pop    edi
  41d790:	cs add BYTE PTR gs:[ebx+0x29],0xcc
  41d796:	mov    cl,0x18
  41d798:	es adc eax,0x375424d4
  41d79e:	je     0x41d7bd
  41d7a0:	test   eax,0x3ac9bf12
  41d7a5:	gs dec ebp
  41d7a7:	fmul   st(6),st
  41d7a9:	lods   al,BYTE PTR ds:[esi]
  41d7aa:	rol    DWORD PTR [esi-0xb4b352b],cl
  41d7b0:	inc    ebx
  41d7b1:	outs   dx,DWORD PTR ds:[esi]
  41d7b2:	jne    0x41d79a
  41d7b4:	int3   
  41d7b5:	sub    ebx,ebp
  41d7b7:	dec    esp
  41d7b8:	xchg   esp,eax
  41d7b9:	jp     0x41d784
  41d7bb:	data16 mov WORD PTR [ebp-0x4d],?
  41d7bf:	inc    edi
  41d7c0:	add    eax,0xd395d7cd
  41d7c5:	lahf   
  41d7c6:	xchg   ebp,eax
  41d7c7:	fwait
  41d7c8:	mov    edi,0xb1fdd0ea
  41d7cd:	idiv   BYTE PTR [ebx]
  41d7cf:	gs pop ss
  41d7d1:	ror    BYTE PTR [edi+esi*8-0x71a7d29],cl
  41d7d8:	xor    eax,0x4d3fb867
  41d7dd:	daa    
  41d7de:	hlt    
  41d7df:	inc    edx
  41d7e0:	pop    ecx
  41d7e1:	push   esi
  41d7e2:	sahf   
  41d7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e4:	pop    ecx
  41d7e5:	mov    gs:0x17d8a24c,al
  41d7eb:	fnstsw WORD PTR [edx*4+0x40995f2f]
  41d7f2:	jne    0x41d7fd
  41d7f4:	imul   ebp,DWORD PTR [edi+0x77],0x31
  41d7f8:	jmp    0x4a8c621
  41d7fd:	xor    DWORD PTR [ebx-0x57e11556],0x37149a56
  41d807:	sub    DWORD PTR [edi+0x69fcd510],ebx
  41d80d:	popa   
  41d80e:	hlt    
  41d80f:	imul   ecx,edi,0xf7cb8568
  41d815:	adc    DWORD PTR [eax],edi
  41d817:	data16 cmp BYTE PTR [bp+di+0x5393],al
  41d81d:	gs test eax,0xa05908d6
  41d823:	push   ebx
  41d824:	inc    sp
  41d826:	mov    ss,WORD PTR [edx-0x16]
  41d829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d82a:	adc    al,cl
  41d82c:	sub    dl,BYTE PTR [edx+0x10d30791]
  41d832:	mov    eax,0xba487554
  41d837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d838:	out    0x65,al
  41d83a:	jmp    0x41d7f3
  41d83c:	and    eax,0x17de0088
  41d841:	mov    al,0x79
  41d843:	mov    ebp,0x8d753c12
  41d848:	inc    edi
  41d849:	test   eax,0x8ecafc03
  41d84e:	xchg   ebp,eax
  41d84f:	xchg   ebp,eax
  41d850:	adc    al,0x94
  41d852:	cmp    DWORD PTR [esi-0x47],esp
  41d855:	sbb    eax,0x99145909
  41d85a:	jne    0x41d877
  41d85c:	push   ebp
  41d85d:	pusha  
  41d85e:	cmp    ah,dh
  41d860:	pushf  
  41d861:	dec    ebp
  41d862:	loopne 0x41d7f4
  41d864:	mov    bl,0x5f
  41d866:	int3   
  41d867:	add    al,0xb6
  41d869:	add    ecx,DWORD PTR [edi-0x7a]
  41d86c:	sub    DWORD PTR [ecx-0x48fa888b],edi
  41d872:	fdivr  DWORD PTR [ecx+0x6633c6fd]
  41d878:	push   DWORD PTR [eax+0x59]
  41d87b:	jbe    0x41d846
  41d87d:	mov    ?,WORD PTR [esi+0x75730fc5]
  41d883:	(bad)  
  41d884:	and    al,0xd6
  41d886:	retf   0x5100
  41d889:	scas   al,BYTE PTR es:[edi]
  41d88a:	(bad)  
  41d88b:	shr    dl,cl
  41d88d:	xor    al,0xbb
  41d88f:	mov    al,ds:0x8e9b668b
  41d894:	jbe    0x41d84b
  41d896:	dec    eax
  41d897:	lods   al,BYTE PTR ds:[esi]
  41d898:	pop    edx
  41d899:	pop    ebp
  41d89a:	je     0x41d820
  41d89c:	cmp    BYTE PTR [ecx+eiz*2+0x36],0xd1
  41d8a1:	imul   esp,DWORD PTR ds:0x6aa33686,0x3
  41d8a8:	sub    eax,0xd31315df
  41d8ad:	and    BYTE PTR [ebx-0x3bac3fdc],0xad
  41d8b4:	lock pusha 
  41d8b6:	cs aam 0x5a
  41d8b9:	into   
  41d8ba:	cld    
  41d8bb:	sahf   
  41d8bc:	retf   
  41d8bd:	sub    eax,0xfbd3b15e
  41d8c2:	scas   eax,DWORD PTR es:[edi]
  41d8c3:	cmp    eax,0xd580cf30
  41d8c8:	repnz data16 xor dh,ah
  41d8cc:	test   BYTE PTR [edx+0x23],0x23
  41d8d0:	pop    ebx
  41d8d1:	test   DWORD PTR [ebx-0x16],ebx
  41d8d4:	shl    edi,cl
  41d8d6:	popa   
  41d8d7:	adc    eax,DWORD PTR [edx+0x3890c6dd]
  41d8dd:	pop    esp
  41d8de:	sbb    bl,0xcb
  41d8e1:	stos   WORD PTR es:[edi],ax
  41d8e3:	lods   eax,DWORD PTR ds:[esi]
  41d8e4:	pop    esp
  41d8e5:	pop    ss
  41d8e6:	fbstp  TBYTE PTR [edx]
  41d8e8:	repnz push 0x3493ba78
  41d8ee:	and    dh,BYTE PTR [edi-0x66bfecc0]
  41d8f4:	fnsave [esi+0x624c825e]
  41d8fa:	sahf   
  41d8fb:	es xchg dl,dh
  41d8fe:	lahf   
  41d8ff:	jno    0x41d8e2
  41d901:	inc    ebx
  41d902:	je     0x41d8be
  41d904:	xchg   ebx,eax
  41d905:	mov    ebx,0x9dc0d0b2
  41d90a:	and    bh,BYTE PTR [esi]
  41d90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d90d:	mov    eax,DWORD PTR [eax-0x70]
  41d910:	inc    edi
  41d911:	shl    BYTE PTR [ebx+0x78],0xe2
  41d915:	icebp  
  41d916:	inc    ebp
  41d917:	scas   eax,DWORD PTR es:[edi]
  41d918:	ins    DWORD PTR es:[edi],dx
  41d919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91a:	cwde   
  41d91b:	adc    ah,BYTE PTR [ebp-0x6f96af06]
  41d921:	outs   dx,DWORD PTR ds:[esi]
  41d922:	pop    edi
  41d923:	xchg   cx,si
  41d926:	outs   dx,DWORD PTR ds:[esi]
  41d927:	stos   DWORD PTR es:[edi],eax
  41d928:	rol    DWORD PTR [esi],cl
  41d92a:	mov    esp,0x524939ca
  41d92f:	in     al,0xa1
  41d931:	xchg   si,ax
  41d933:	inc    edx
  41d934:	fisub  DWORD PTR [ecx-0x20050772]
  41d93a:	fisubr DWORD PTR [ecx+0x1b767062]
  41d940:	lock jne 0x41d8cf
  41d943:	int3   
  41d944:	les    eax,FWORD PTR [eax+0x4ca58a9f]
  41d94a:	and    BYTE PTR [esi-0x4c],ah
  41d94d:	pop    ecx
  41d94e:	sub    ah,bl
  41d950:	sar    BYTE PTR [edx],cl
  41d952:	mov    ds:0xcb4b0a65,eax
  41d957:	ins    DWORD PTR es:[edi],dx
  41d958:	ds pop ecx
  41d95a:	ficom  DWORD PTR [esi]
  41d95c:	xchg   edx,eax
  41d95d:	es sub ch,ah
  41d960:	lods   al,BYTE PTR ds:[esi]
  41d961:	push   esi
  41d962:	push   ecx
  41d963:	(bad)  
  41d965:	adc    eax,0x7e072cac
  41d96a:	sub    BYTE PTR [edx+0x63e13b52],al
  41d970:	push   ebx
  41d971:	push   0x5aed275d
  41d976:	xlat   BYTE PTR ds:[ebx]
  41d977:	xor    ecx,DWORD PTR cs:[eax+0x56]
  41d97b:	and    edi,esi
  41d97d:	mov    esi,0xf8a59d9f
  41d982:	(bad)  
  41d983:	pushw  cs
  41d985:	mov    ecx,0xf2d38bea
  41d98a:	into   
  41d98b:	xchg   esp,eax
  41d98c:	push   esi
  41d98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98e:	jmp    0x41d9b1
  41d990:	mov    edi,0xd1a84266
  41d995:	pop    ebx
  41d996:	pop    esi
  41d997:	out    0x47,eax
  41d999:	mov    ah,0x93
  41d99b:	lods   eax,DWORD PTR ds:[esi]
  41d99c:	gs mov edi,0x24253b75
  41d9a2:	inc    ecx
  41d9a3:	adc    BYTE PTR [eax-0xe],0x6a
  41d9a7:	adc    WORD PTR [eax+0x1b387bb0],0xffd2
  41d9af:	mov    dh,0xc2
  41d9b1:	sub    BYTE PTR [edx+0x2a],dh
  41d9b4:	ror    BYTE PTR [ebx+ecx*8+0x14],1
  41d9b8:	mov    dl,0xe6
  41d9ba:	mov    al,ds:0x8e827afe
  41d9bf:	cmp    BYTE PTR [eax],ah
  41d9c1:	popa   
  41d9c2:	jns    0x41d9e2
  41d9c4:	jns    0x41d95f
  41d9c6:	bnd jae 0x41d94a
  41d9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ca:	ins    BYTE PTR es:[edi],dx
  41d9cb:	and    ebx,edx
  41d9cd:	mov    eax,0xa9519f81
  41d9d2:	push   esp
  41d9d3:	in     eax,0x7f
  41d9d5:	gs js  0x41d9fb
  41d9d8:	and    eax,0xfeb24041
  41d9dd:	sbb    bh,ah
  41d9df:	sbb    al,0xec
  41d9e1:	stc    
  41d9e2:	jne    0x41d986
  41d9e4:	xor    dh,BYTE PTR [edi+ecx*2+0x5c1d86cc]
  41d9eb:	inc    si
  41d9ed:	mov    bl,0x88
  41d9ef:	(bad)  
  41d9f1:	and    esi,DWORD PTR [ecx+0x25]
  41d9f4:	addr16 in al,0xb9
  41d9f7:	xor    eax,DWORD PTR [eax-0x357ebfab]
  41d9fd:	pusha  
  41d9fe:	push   ebx
  41d9ff:	mov    ebp,DWORD PTR [edx+0x25a5436]
  41da05:	cdq    
  41da06:	stos   DWORD PTR es:[edi],eax
  41da07:	arpl   bx,dx
  41da09:	or     DWORD PTR [edi+edi*8-0x50],0x9f4d637
  41da11:	gs push cx
  41da14:	lods   al,BYTE PTR ds:[esi]
  41da15:	pop    ecx
  41da16:	rol    DWORD PTR gs:[ebx-0x4e],1
  41da1a:	je     0x41d9e8
  41da1c:	mov    ecx,0xfd1a757e
  41da21:	cmp    al,0xa0
  41da23:	outs   dx,BYTE PTR ds:[esi]
  41da24:	(bad)  
  41da25:	sahf   
  41da26:	sub    ch,BYTE PTR [edi+0x53]
  41da29:	push   edx
  41da2a:	pop    ebx
  41da2b:	mov    edi,0xe338b56f
  41da30:	jecxz  0x41d9b6
  41da32:	jne    0x41da83
  41da34:	loope  0x41d9b7
  41da36:	lods   eax,DWORD PTR ds:[esi]
  41da37:	push   0xffffffdb
  41da39:	push   cs
  41da3a:	mov    esi,0x5605f566
  41da3f:	cs in  eax,0xf1
  41da42:	push   0x1ca5fc42
  41da47:	mov    bh,0xc3
  41da49:	cmc    
  41da4a:	and    cl,ah
  41da4c:	call   0xef18:0x2366c4a5
  41da53:	sbb    bh,al
  41da55:	es sbb dh,ah
  41da58:	xchg   BYTE PTR [ebx],bh
  41da5a:	jne    0x41da60
  41da5c:	or     dh,BYTE PTR [edi-0x20]
  41da5f:	xchg   esi,eax
  41da60:	and    ah,BYTE PTR [ebx-0x392c6f41]
  41da66:	lock mov ch,0xe4
  41da69:	leave  
  41da6a:	mov    ecx,0x75a63917
  41da6f:	test   DWORD PTR [edi-0x10a6133d],esp
  41da75:	psadbw mm4,QWORD PTR [esi-0x5d]
  41da79:	add    DWORD PTR [ecx-0x6ae40170],0x5c
  41da80:	mov    bl,0xa3
  41da82:	stos   DWORD PTR es:[edi],eax
  41da83:	inc    esp
  41da84:	dec    esp
  41da85:	out    dx,eax
  41da86:	mov    esi,0x18a47390
  41da8b:	push   edi
  41da8c:	rcl    ah,1
  41da8e:	xor    ebp,edi
  41da90:	jae    0x41da77
  41da92:	mov    BYTE PTR [edi-0x4d],bh
  41da95:	push   esp
  41da96:	ret    0xc840
  41da99:	push   edi
  41da9a:	mov    edi,0xe1e7c99e
  41da9f:	pop    eax
  41daa0:	into   
  41daa1:	push   DWORD PTR [ebp+0x40]
  41daa4:	push   0xb2b7197c
  41daa9:	leave  
  41daaa:	and    BYTE PTR [esi-0x45],ah
  41daad:	mov    esi,DWORD PTR [edi+0x2b10f565]
  41dab3:	(bad)
  41dab6:	dec    esi
  41dab7:	push   esp
  41dab8:	push   0x3a
  41daba:	jb     0x41db00
  41dabc:	lock ja 0x41da6b
  41dabf:	mov    ds:0xd19a7d94,ax
  41dac5:	sub    bh,BYTE PTR [eax]
  41dac7:	enter  0x596c,0x6c
  41dacb:	pop    ss
  41dacc:	add    ebp,esi
  41dace:	mov    ah,0xc6
  41dad0:	inc    eax
  41dad1:	jae    0x41da7e
  41dad3:	data16 sub al,bh
  41dad6:	int    0xb9
  41dad8:	push   edi
  41dad9:	out    0x14,eax
  41dadb:	call   0x73b689d0
  41dae0:	mov    ebp,DWORD PTR [esi-0x45]
  41dae3:	outs   dx,DWORD PTR ds:[esi]
  41dae4:	mov    cl,0xf9
  41dae6:	pop    ebp
  41dae7:	mov    DWORD PTR [eax],esi
  41dae9:	mov    BYTE PTR [edi],0x65
  41daec:	ret    
  41daed:	stc    
  41daee:	cmp    al,0x83
  41daf0:	xor    ecx,DWORD PTR [esi+0x2d]
  41daf3:	push   ebx
  41daf4:	mov    edx,0xb3a8721f
  41daf9:	add    eax,0x15c8d9bc
  41dafe:	xor    edi,esp
  41db00:	mov    BYTE PTR [ecx-0x16],ah
  41db03:	bound  edx,QWORD PTR [ecx]
  41db05:	retf   0x601c
  41db08:	mov    WORD PTR ds:0x66c456d3,?
  41db0e:	mov    ebp,0xc7aa7676
  41db13:	stos   DWORD PTR es:[edi],eax
  41db14:	inc    esi
  41db15:	mov    ds:0x79fc5cdb,eax
  41db1a:	jne    0x41daa1
  41db1c:	pop    edi
  41db1d:	mov    dl,0x20
  41db1f:	jno    0x41dac4
  41db21:	jbe    0x41db8f
  41db23:	mov    esi,0x63f561f8
  41db28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db29:	and    DWORD PTR [edx],esi
  41db2b:	fnsave [ebp-0x12b966ed]
  41db31:	cmp    dh,ch
  41db33:	lock (bad) 
  41db35:	lock mov esi,0x27cb8ad3
  41db3b:	data16 fwait
  41db3d:	sub    eax,0x6bd0ecde
  41db42:	or     DWORD PTR [edi+0x2c],esi
  41db45:	test   al,0x8c
  41db47:	in     al,0xdf
  41db49:	mov    edx,gs
  41db4b:	inc    edx
  41db4c:	nop
  41db4d:	stos   BYTE PTR es:[edi],al
  41db4e:	mov    ds:0xf5d82abe,eax
  41db53:	xchg   ebp,eax
  41db54:	(bad)  
  41db55:	adc    al,cl
  41db57:	xor    ebx,edx
  41db59:	adc    al,BYTE PTR [ebx-0x64]
  41db5c:	repnz lea esi,[ecx]
  41db5f:	add    BYTE PTR gs:[ebp+0xd],ah
  41db63:	loop   0x41db55
  41db65:	cmp    ebx,DWORD PTR ds:0x34b98891
  41db6b:	imul   eax,ebp,0x20a5b866
  41db71:	int    0x8e
  41db73:	sub    al,0x97
  41db75:	data16 repnz (bad) 
  41db78:	in     al,dx
  41db79:	clc    
  41db7a:	mov    eax,0xbb83a834
  41db7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db80:	mov    bl,BYTE PTR [ecx-0x3d769d99]
  41db86:	jne    0x41db3d
  41db88:	lahf   
  41db89:	pop    ebx
  41db8a:	mov    al,ds:0xe5a685e2
  41db8f:	xchg   edx,eax
  41db90:	test   al,0x27
  41db92:	jo     0x41dbf9
  41db94:	jmp    0xeb07:0x3c33066b
  41db9b:	mov    eax,0x13a55013
  41dba0:	push   edi
  41dba1:	gs adc edi,esp
  41dba4:	and    eax,0xa72e4511
  41dba9:	and    eax,0xb4f41d7f
  41dbae:	cdq    
  41dbaf:	test   BYTE PTR [edx+0x23039b39],ch
  41dbb5:	popa   
  41dbb6:	dec    esi
  41dbb7:	sub    BYTE PTR [ebp-0x4406a391],0xa8
  41dbbe:	add    DWORD PTR [eax+0x12790fd3],0x7ae52f26
  41dbc8:	push   ebp
  41dbc9:	xchg   DWORD PTR [edi+0x47],esp
  41dbcc:	or     edi,DWORD PTR [edx]
  41dbce:	inc    edi
  41dbcf:	inc    sp
  41dbd1:	fsub   st(1),st
  41dbd3:	mov    ch,0xd0
  41dbd5:	pop    eax
  41dbd6:	or     esi,DWORD PTR [edi]
  41dbd8:	sub    dl,dl
  41dbda:	sub    DWORD PTR [edx],eax
  41dbdc:	mov    al,ds:0xddb3db2f
  41dbe1:	in     al,0x21
  41dbe3:	jle    0x41dc50
  41dbe5:	test   DWORD PTR [eax-0x3286949a],ebp
  41dbeb:	pop    ebx
  41dbec:	ror    DWORD PTR [eax],cl
  41dbee:	xchg   DWORD PTR [edx+eiz*4],esi
  41dbf1:	jmp    0x41dc5e
  41dbf3:	cmp    eax,0x9acb6da1
  41dbf8:	jl     0x41dc2f
  41dbfa:	cli    
  41dbfb:	cmp    ah,BYTE PTR [ebx-0x19]
  41dbfe:	push   edi
  41dbff:	(bad)  
  41dc00:	rcr    BYTE PTR [eax],1
  41dc02:	mov    cl,0x2e
  41dc04:	jecxz  0x41dc6c
  41dc06:	mov    ecx,0x1697bcf7
  41dc0b:	(bad)  
  41dc0d:	fsub   QWORD PTR [eax]
  41dc0f:	cmp    al,0xd0
  41dc11:	mov    esp,0x8aea66f9
  41dc16:	lahf   
  41dc17:	inc    ebx
  41dc18:	sar    DWORD PTR [ebx],cl
  41dc1a:	fimul  DWORD PTR [edi+eiz*8-0x43]
  41dc1e:	or     bh,BYTE PTR [esp+ebx*4+0x2d336866]
  41dc25:	xor    al,0x6e
  41dc27:	mov    dh,0x45
  41dc29:	adc    al,0x4d
  41dc2b:	jle    0x41dc81
  41dc2d:	dec    edx
  41dc2e:	jne    0x41dc14
  41dc30:	leave  
  41dc31:	cdq    
  41dc32:	push   edx
  41dc33:	inc    ebp
  41dc34:	pop    ecx
  41dc35:	aad    0x2e
  41dc37:	enterw 0x774a,0xcf
  41dc3c:	shl    DWORD PTR [ecx-0x2e2f73b8],cl
  41dc42:	and    eax,0x1d607181
  41dc47:	xchg   esi,eax
  41dc48:	ins    BYTE PTR es:[edi],dx
  41dc49:	ret    0xa752
  41dc4c:	mov    ds:0xd2eaaf26,eax
  41dc51:	fmul   DWORD PTR [esi+0x68]
  41dc54:	stos   BYTE PTR es:[edi],al
  41dc55:	dec    ebx
  41dc56:	jnp    0x41dc45
  41dc58:	inc    esp
  41dc59:	data16 sbb al,0xf7
  41dc5c:	push   0x7c
  41dc5e:	jge    0x41dc61
  41dc60:	mov    dl,0xae
  41dc62:	adc    al,0xc7
  41dc64:	hlt    
  41dc65:	dec    esi
  41dc66:	outs   dx,DWORD PTR ds:[esi]
  41dc67:	jb     0x41dc3c
  41dc69:	mov    cl,0x97
  41dc6b:	add    al,0x1d
  41dc6d:	les    ebp,FWORD PTR [ebx-0x3ac02da1]
  41dc73:	sbb    eax,0xffffff9a
  41dc76:	jg     0x41dc1e
  41dc78:	dec    esp
  41dc79:	stc    
  41dc7a:	mov    ch,0x86
  41dc7c:	push   cs
  41dc7d:	dec    ebp
  41dc7e:	jne    0x41dc06
  41dc80:	mov    esp,0x6df05e0a
  41dc85:	inc    edi
  41dc86:	xor    BYTE PTR [ebp-0x2c],ah
  41dc89:	stos   DWORD PTR es:[edi],eax
  41dc8a:	and    eax,0xd69afef
  41dc8f:	shl    DWORD PTR [edi-0x5f048dad],cl
  41dc95:	jmp    0x38753928
  41dc9a:	cmp    esi,DWORD PTR [ecx+0x669b1401]
  41dca0:	sub    al,0xfa
  41dca2:	jnp    0x41dcd0
  41dca4:	jmp    0xfb77:0x6478fd47
  41dcab:	pop    edx
  41dcac:	or     DWORD PTR [edi+0x3a507115],0xd0ca660f
  41dcb6:	push   esp
  41dcb7:	add    edx,esi
  41dcb9:	and    edx,DWORD PTR [eax-0x76c82c38]
  41dcbf:	xchg   ebp,eax
  41dcc0:	call   0x7cb2:0xee85740b
  41dcc7:	in     ax,dx
  41dcc9:	int3   
  41dcca:	test   dh,0x41
  41dccd:	sub    eax,0x45129ce1
  41dcd2:	jne    0x41dcba
  41dcd4:	jmp    0xa479:0xaf7e98e1
  41dcdb:	xchg   ecx,eax
  41dcdc:	xor    ebp,esi
  41dcde:	mov    DWORD PTR [ecx+0x6fc4a57c],ecx
  41dce4:	sar    BYTE PTR [edi],0x75
  41dce7:	inc    ebx
  41dce8:	sub    eax,0xd3425609
  41dced:	out    dx,eax
  41dcee:	mov    eax,ds:0xb204066
  41dcf3:	dec    edi
  41dcf4:	jnp    0x41dc7e
  41dcf6:	imul   eax,esp,0x36
  41dcf9:	sahf   
  41dcfa:	je     0x41dd52
  41dcfc:	jo     0x41dd6e
  41dcfe:	test   DWORD PTR [edi-0x67da9abf],eax
  41dd04:	clc    
  41dd05:	or     eax,0xc9fa6df4
  41dd0a:	je     0x41dd43
  41dd0c:	sub    eax,0x55207594
  41dd11:	jns    0x41dce9
  41dd13:	(bad)  
  41dd14:	inc    esi
  41dd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd16:	in     al,0x66
  41dd18:	mov    esp,0xd32d47db
  41dd1d:	out    dx,eax
  41dd1e:	pop    ecx
  41dd1f:	push   eax
  41dd20:	mov    ecx,DWORD PTR [esi-0x66]
  41dd23:	inc    esi
  41dd24:	xchg   BYTE PTR [esi-0x7f6a28ad],al
  41dd2a:	repnz dec si
  41dd2d:	aaa    
  41dd2e:	xchg   ebp,eax
  41dd2f:	and    eax,0x999f3ec3
  41dd34:	mov    ?,WORD PTR [ebp+esi*2+0x72180e60]
  41dd3b:	test   al,0xc7
  41dd3d:	fimul  WORD PTR [esi+0x66]
  41dd40:	jle    0x41dd74
  41dd42:	dec    ecx
  41dd43:	cmc    
  41dd44:	sar    DWORD PTR [ebx+0x7399c1b9],cl
  41dd4a:	push   ebx
  41dd4b:	add    esi,edi
  41dd4d:	inc    esp
  41dd4e:	addr16 mov al,0x6f
  41dd51:	in     eax,0xc0
  41dd53:	add    DWORD PTR [esi+ebx*1],eax
  41dd56:	sub    DWORD PTR [edx-0x12],ebp
  41dd59:	in     eax,dx
  41dd5a:	mov    ?,edx
  41dd5c:	and    ebx,ecx
  41dd5e:	adc    eax,0x788b274f
  41dd63:	push   esi
  41dd64:	mov    dh,0x4e
  41dd66:	sub    eax,0x85d3c666
  41dd6b:	jbe    0x41ddc1
  41dd6d:	jo     0x41dd63
  41dd6f:	out    dx,al
  41dd70:	sub    ch,BYTE PTR fs:[edx-0x3c]
  41dd74:	dec    ebp
  41dd75:	jae    0x41dcfb
  41dd77:	es push ds
  41dd79:	bound  ebp,QWORD PTR [ebp+ebx*8-0x1415f3ff]
  41dd80:	neg    DWORD PTR [esi]
  41dd82:	sub    al,0x26
  41dd84:	adc    al,0xa0
  41dd86:	sub    BYTE PTR [edx+0x29],cl
  41dd89:	outs   dx,DWORD PTR ds:[esi]
  41dd8a:	jae    0x41dded
  41dd8c:	xor    al,0x99
  41dd8e:	popa   
  41dd8f:	sub    DWORD PTR [esi+0x416608a0],ecx
  41dd95:	and    BYTE PTR [edi-0x35ab2fe7],dl
  41dd9b:	xchg   bl,ch
  41dd9d:	out    dx,eax
  41dd9e:	mov    cl,0xaf
  41dda0:	mov    edi,0x887dd02b
  41dda5:	mov    ah,0xa4
  41dda7:	imul   ebp,edi,0x295b5555
  41ddad:	push   ecx
  41ddae:	dec    ebx
  41ddaf:	fcomp  st(6)
  41ddb1:	aaa    
  41ddb2:	ins    BYTE PTR es:[edi],dx
  41ddb3:	repnz icebp 
  41ddb5:	or     BYTE PTR ds:0xcaa2b767,0xaa
  41ddbc:	pop    ecx
  41ddbd:	and    eax,0x446d663d
  41ddc2:	jo     0x41dd7f
  41ddc4:	pop    es
  41ddc5:	lods   al,BYTE PTR ds:[esi]
  41ddc6:	and    BYTE PTR [ebx-0xb],dl
  41ddc9:	add    ebp,DWORD PTR [edx+0x1f]
  41ddcc:	mov    ebx,esi
  41ddce:	mov    ebp,0x9577369
  41ddd3:	cmp    ebp,edi
  41ddd5:	cmp    al,0x15
  41ddd7:	mov    WORD PTR [ebp-0x2b],fs
  41ddda:	test   eax,0x172280ee
  41dddf:	and    bh,BYTE PTR [esi]
  41dde1:	sub    BYTE PTR [ebp+0x33],dh
  41dde4:	pop    edi
  41dde5:	dec    esi
  41dde6:	fs aad 0x3f
  41dde9:	(bad)  
  41ddea:	(bad)  
  41ddeb:	imul   edi,eax,0xda71e225
  41ddf1:	sbb    al,0x5b
  41ddf3:	div    BYTE PTR ds:0x99e57558
  41ddf9:	sub    esi,DWORD PTR [ebx]
  41ddfb:	(bad)  
  41ddfc:	pop    ss
  41ddfd:	fdiv   DWORD PTR gs:[esi+0x3f]
  41de01:	cli    
  41de02:	push   ebx
  41de03:	mov    bh,BYTE PTR [ebx]
  41de05:	push   edi
  41de06:	pop    ebx
  41de07:	sahf   
  41de08:	adc    ebp,DWORD PTR [edi]
  41de0a:	jne    0x41dde9
  41de0c:	sbb    ecx,esi
  41de0e:	or     ecx,DWORD PTR [eax+0x62eff3e2]
  41de14:	dec    esi
  41de15:	call   0x48da44e6
  41de1a:	cld    
  41de1b:	fst    st(3)
  41de1d:	sbb    eax,0xa34347aa
  41de22:	push   ebp
  41de23:	addr16 mov eax,0x390ef961
  41de29:	push   0xa58b409d
  41de2e:	pop    edi
  41de2f:	ret    0x98d3
  41de32:	cli    
  41de33:	ror    BYTE PTR [ebp+ecx*8-0x16],1
  41de37:	lds    ecx,FWORD PTR [ecx-0x28ec5c9a]
  41de3d:	int    0x66
  41de3f:	jns    0x41ddeb
  41de41:	push   edx
  41de42:	inc    BYTE PTR [ebp-0x2d]
  41de45:	fld    DWORD PTR [ebp+0x1c]
  41de48:	cmp    eax,0x7cf27ef1
  41de4d:	imul   ebx,DWORD PTR [edx-0x7b],0x4f
  41de51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de52:	call   0x55ffb94c
  41de57:	call   DWORD PTR [edi]
  41de59:	cwde   
  41de5a:	daa    
  41de5b:	fild   QWORD PTR [ebp-0x38ff7266]
  41de61:	sub    eax,0xf9c9b8b5
  41de66:	and    al,dh
  41de68:	aam    0xd7
  41de6a:	xchg   BYTE PTR [edx-0x50],ch
  41de6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de6e:	outs   dx,BYTE PTR ds:[esi]
  41de6f:	add    cl,dh
  41de71:	add    ecx,DWORD PTR [esp+eax*8-0x5165d029]
  41de78:	js     0x41de96
  41de7a:	xor    eax,0xa56684da
  41de7f:	mov    bl,0x17
  41de81:	mov    dl,0xf6
  41de83:	adc    eax,0x18f5ee2
  41de88:	or     al,0xd7
  41de8a:	jne    0x41de82
  41de8c:	aaa    
  41de8d:	jge    0x41de23
  41de8f:	mov    eax,ds:0x6bc90ee3
  41de94:	sub    al,0x5b
  41de96:	xor    BYTE PTR [edi],dh
  41de98:	inc    esi
  41de99:	ss out 0x27,al
  41de9c:	fwait
  41de9d:	and    DWORD PTR [esp+ecx*1],0x3
  41dea1:	mov    ecx,0x81bf4e05
  41dea6:	mov    ebp,eax
  41dea8:	fldenv [edx+0x75]
  41deab:	dec    eax
  41deac:	push   ecx
  41dead:	gs pop edx
  41deaf:	mov    ch,0x11
  41deb1:	and    DWORD PTR [eax-0x12],ebx
  41deb4:	push   edx
  41deb5:	outs   dx,DWORD PTR ds:[esi]
  41deb6:	(bad)  
  41deb7:	jb     0x41deee
  41deb9:	or     DWORD PTR [edx-0xa268465],ebx
  41debf:	int    0x44
  41dec1:	ja     0x41de56
  41dec3:	sub    BYTE PTR [ebx-0x40b3e7a0],cl
  41dec9:	pop    eax
  41deca:	pop    ds
  41decb:	mov    esp,0xf848064e
  41ded0:	xchg   esp,eax
  41ded1:	cmp    ah,ch
  41ded3:	inc    edx
  41ded4:	dec    edx
  41ded5:	les    esi,FWORD PTR [ebp-0x13]
  41ded8:	fwait
  41ded9:	cmp    eax,0xcaedcaa3
  41dede:	or     eax,0x1472f798
  41dee3:	jge    0x41dee8
  41dee5:	sub    BYTE PTR [ebp-0x2],dh
  41dee8:	mov    cl,0x66
  41deea:	aas    
  41deeb:	jge    0x41def6
  41deed:	xor    dh,al
  41deef:	test   al,0x7a
  41def1:	nop
  41def2:	in     al,dx
  41def3:	call   0xd3e5:0x5c6172c1
  41defa:	jl     0x41de7d
  41defc:	adc    BYTE PTR [di],dh
  41deff:	bound  esp,QWORD PTR ds:0x9092c965
  41df05:	inc    eax
  41df06:	adc    al,0xe4
  41df08:	pcmpgtb mm6,QWORD PTR [eax+0x57]
  41df0c:	xor    edi,DWORD PTR [edx]
  41df0e:	jne    0x41df19
  41df10:	xchg   eax,ecx
  41df12:	mov    dl,al
  41df14:	fiadd  DWORD PTR [eax+edi*8]
  41df17:	les    si,DWORD PTR [eax+0x35d3b198]
  41df1e:	push   cs
  41df1f:	test   eax,0x7f9e3f23
  41df24:	add    al,0x44
  41df26:	adc    DWORD PTR [ebx],0xe60a65ff
  41df2c:	out    0xde,eax
  41df2e:	add    DWORD PTR [esi+0x68d3ed3],eax
  41df34:	nop
  41df35:	mov    al,ds:0x66a2b96c
  41df3a:	xor    al,BYTE PTR [esi+0x28]
  41df3d:	adc    al,0xf3
  41df3f:	fild   QWORD PTR [esi+0x4]
  41df42:	mov    dl,0xf1
  41df44:	std    
  41df45:	(bad)  [ebp+0x5b]
  41df48:	pop    ebp
  41df49:	stc    
  41df4a:	push   cs
  41df4b:	lahf   
  41df4c:	and    esp,DWORD PTR [ecx]
  41df4e:	pop    es
  41df4f:	sub    BYTE PTR [ecx-0x65],0x5c
  41df53:	es leave 
  41df55:	imul   esp,DWORD PTR [edi],0x754e4346
  41df5b:	aas    
  41df5c:	xor    BYTE PTR ds:0x2dd0ea6,bh
  41df62:	mov    edx,0x4c6ffb66
  41df67:	mov    edx,0x4ea9fad3
  41df6c:	outs   dx,BYTE PTR ds:[esi]
  41df6d:	adc    al,0xec
  41df6f:	std    
  41df70:	ret    0xf66
  41df73:	push   eax
  41df74:	sub    eax,0x209d0126
  41df79:	out    dx,eax
  41df7a:	push   0x756e7536
  41df7f:	shl    DWORD PTR [ecx-0x596708b5],cl
  41df85:	inc    esp
  41df86:	sub    ecx,DWORD PTR [esi-0x69]
  41df89:	jecxz  0x41dff2
  41df8b:	aas    
  41df8c:	ror    cl,0x71
  41df8f:	fst    st(4)
  41df91:	shl    BYTE PTR ds:0xbbaf75bf,0x67
  41df98:	cld    
  41df99:	pop    edx
  41df9a:	and    esi,ecx
  41df9c:	mov    ds:0x5279edf6,eax
  41dfa1:	adc    bl,BYTE PTR [eax+0x13]
  41dfa4:	(bad)  
  41dfa5:	clc    
  41dfa6:	mov    esp,DWORD PTR ds:0xf075698c
  41dfac:	mul    BYTE PTR [esi+0x39]
  41dfaf:	std    
  41dfb0:	mov    BYTE PTR [esi+eax*8-0x4f],bl
  41dfb4:	mov    bl,0x46
  41dfb6:	ds dec ebp
  41dfb8:	rcr    DWORD PTR [esi-0x182eb463],cl
  41dfbe:	in     al,dx
  41dfbf:	xchg   edx,eax
  41dfc0:	mov    dh,0x66
  41dfc2:	pop    ebx
  41dfc3:	jnp    0x41dfa2
  41dfc5:	sbb    ebp,ebp
  41dfc7:	mov    cl,0x21
  41dfc9:	in     al,0xf4
  41dfcb:	retf   
  41dfcc:	xchg   bh,ah
  41dfce:	mov    edi,0x1eab2cb0
  41dfd3:	jl     0x41df94
  41dfd5:	xlat   BYTE PTR es:[ebx]
  41dfd7:	test   DWORD PTR [edi+0x18662d1f],esp
  41dfdd:	sbb    dh,BYTE PTR [edi]
  41dfdf:	jae    0x41dfb4
  41dfe1:	rcr    DWORD PTR [ecx-0x1d741cd8],cl
  41dfe7:	nop
  41dfe8:	push   ebx
  41dfe9:	add    WORD PTR gs:[edi+0x19],dx
  41dfee:	adc    DWORD PTR [ebx],ebx
  41dff0:	(bad)  
  41dff1:	jg     0x41e04a
  41dff3:	dec    ebp
  41dff4:	mov    ah,0x24
  41dff6:	jne    0x41df9c
  41dff8:	inc    esi
  41dff9:	shl    BYTE PTR [eax-0x7f],1
  41dffc:	and    al,0x16
  41dffe:	mov    edi,0xc9be7766
  41e003:	lahf   
  41e004:	(bad)  
  41e005:	in     al,dx
  41e006:	sub    bh,ch
  41e008:	repnz push ecx
  41e00a:	cs pop eax
  41e00c:	ret    0x3505
  41e00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e010:	nop
  41e011:	std    
  41e012:	cmp    dh,bh
  41e014:	ficomp WORD PTR [ecx-0x18]
  41e017:	sbb    DWORD PTR [edx-0x17192c92],0xffffffc8
  41e01e:	and    ebx,DWORD PTR [ebx-0x648aa96f]
  41e024:	inc    edi
  41e025:	sub    al,0x48
  41e027:	and    BYTE PTR ds:0xca768e65,bh
  41e02d:	neg    DWORD PTR [ebx-0x1697fc63]
  41e033:	shr    BYTE PTR [edx-0xd8e8ada],cl
  41e039:	mov    eax,ds:0xdaa97d62
  41e03e:	popf   
  41e03f:	gs call 0x93418aab
  41e045:	retf   0x5535
  41e048:	imul   ebx,esp,0x75
  41e04b:	loop   0x41e08c
  41e04d:	mov    eax,0x22d201a5
  41e052:	dec    ebp
  41e053:	(bad)  
  41e054:	mov    eax,ds:0x439ff7b7
  41e059:	addr16 imul ebx,esp,0xffffffe9
  41e05d:	add    dl,dh
  41e05f:	data16 ror BYTE PTR [edx+ebx*2+0x23],0x95
  41e065:	push   esp
  41e066:	sbb    al,0x68
  41e068:	push   ebx
  41e069:	cmp    cl,BYTE PTR [edx+0xc]
  41e06c:	xor    ax,0x65c1
  41e070:	sbb    DWORD PTR [edx+0x52],esp
  41e073:	rol    DWORD PTR cs:0x8093aa71,0x53
  41e07b:	pop    es
  41e07c:	pop    ecx
  41e07d:	gs pushf 
  41e07f:	mov    ds:0xe1d90d9b,eax
  41e084:	hlt    
  41e085:	pusha  
  41e086:	mov    bl,0xd9
  41e088:	ror    BYTE PTR [eax],cl
  41e08a:	(bad)  
  41e08b:	ins    BYTE PTR es:[edi],dx
  41e08c:	out    0x27,al
  41e08e:	les    ebx,FWORD PTR [edi+0x7f]
  41e091:	gs mov cs:0x5698944,al
  41e098:	lea    esi,[edx+0x21e4195e]
  41e09e:	jbe    0x41e0b6
  41e0a0:	sub    BYTE PTR [esi+0x61b4ff27],0x67
  41e0a7:	mov    esp,0x33fd7aff
  41e0ac:	retf   0x5466
  41e0af:	or     BYTE PTR [edi-0x17838117],ah
  41e0b5:	mov    bh,0x75
  41e0b7:	inc    ecx
  41e0b8:	add    eax,0x7dcec0e3
  41e0bd:	mov    ch,0x89
  41e0bf:	popfw  
  41e0c1:	out    0xbe,al
  41e0c3:	imul   edi,DWORD PTR [ebx+0xc],0xffffff9e
  41e0c7:	and    eax,esp
  41e0c9:	push   edi
  41e0ca:	je     0x41e123
  41e0cc:	ins    BYTE PTR es:[edi],dx
  41e0cd:	adc    eax,0x66b51047
  41e0d2:	dec    ecx
  41e0d3:	ins    BYTE PTR es:[edi],dx
  41e0d4:	or     dh,ch
  41e0d6:	shr    ebp,cl
  41e0d8:	xor    al,0x14
  41e0da:	cmp    eax,0x752e839e
  41e0df:	or     eax,0x6327f1
  41e0e4:	xchg   edi,eax
  41e0e5:	sub    eax,DWORD PTR [eax+0x66]
  41e0e8:	mov    ecx,DWORD PTR [esi+0x70d3358d]
  41e0ee:	popf   
  41e0ef:	adc    dl,cl
  41e0f1:	xchg   esi,eax
  41e0f2:	sar    BYTE PTR [esi+0x371281f3],cl
  41e0f8:	repz in eax,dx
  41e0fa:	sbb    BYTE PTR [ebp-0x2e],al
  41e0fd:	push   esp
  41e0fe:	in     al,dx
  41e0ff:	dec    edx
  41e100:	pop    eax
  41e101:	sub    al,bl
  41e103:	pop    ebx
  41e104:	dec    esi
  41e105:	mov    ch,0x52
  41e107:	push   ebp
  41e108:	sub    ebp,eax
  41e10a:	sti    
  41e10b:	sbb    ebp,DWORD PTR [edx+esi*2+0x75]
  41e10f:	lods   eax,DWORD PTR ds:[esi]
  41e110:	xor    eax,0x132770aa
  41e115:	jno    0x41e0eb
  41e117:	data16 loope 0x41e136
  41e11a:	inc    edx
  41e11b:	les    esp,FWORD PTR [ebx]
  41e11d:	mov    BYTE PTR [ecx+esi*1+0x5b],bl
  41e121:	lock pop esp
  41e123:	sub    DWORD PTR [edi-0x3d],esi
  41e126:	jbe    0x41e0b3
  41e128:	out    0x85,eax
  41e12a:	xchg   esi,eax
  41e12b:	(bad)  
  41e12c:	lods   al,BYTE PTR ds:[esi]
  41e12d:	clc    
  41e12e:	mov    esp,0x59ca730e
  41e133:	call   FWORD PTR [bp-0xa75]
  41e138:	xchg   ebp,eax
  41e139:	cmp    esp,ebp
  41e13b:	(bad)  
  41e13c:	pop    ebp
  41e13d:	inc    esp
  41e13e:	imul   ebx,DWORD PTR [edi-0x1b],0x56
  41e142:	mov    ecx,0x10431626
  41e147:	push   edx
  41e148:	test   BYTE PTR [esi-0x30],ah
  41e14b:	sub    ebx,ebx
  41e14d:	xchg   BYTE PTR [edi-0x25],ah
  41e150:	rcl    DWORD PTR [ebx+esi*2+0x66],cl
  41e154:	sub    BYTE PTR [ecx-0x19],cl
  41e157:	shl    BYTE PTR [ebx+0x1bbddde2],0x82
  41e15e:	fsub   DWORD PTR [esi-0x3b]
  41e161:	ds xchg di,ax
  41e164:	not    DWORD PTR [ecx+0x1c]
  41e167:	push   eax
  41e168:	mov    edx,0xb40b39e1
  41e16d:	hlt    
  41e16e:	jo     0x41e179
  41e170:	frstor [ecx-0xb]
  41e173:	push   esp
  41e174:	sar    BYTE PTR [edi],1
  41e176:	daa    
  41e177:	push   bp
  41e179:	mov    ds:0x6bd3791f,al
  41e17e:	adc    al,0x60
  41e180:	je     0x41e17f
  41e182:	pop    es
  41e183:	jmp    0x8482:0x23ca6551
  41e18a:	jg     0x41e1c2
  41e18c:	hlt    
  41e18d:	cs mov cl,0x2c
  41e190:	dec    edi
  41e191:	dec    ecx
  41e192:	jne    0x41e16e
  41e194:	jmp    0x1973:0x94f5818e
  41e19b:	imul   edx,DWORD PTR [edx+eiz*8+0x51],0x4d
  41e1a0:	fst    QWORD PTR [ebx+0x38]
  41e1a3:	out    0xd3,al
  41e1a5:	inc    esp
  41e1a6:	pop    edx
  41e1a7:	(bad)  [esi+0xcf7ffe3]
  41e1ad:	push   esp
  41e1ae:	jnp    0x41e1fe
  41e1b0:	inc    edx
  41e1b1:	ret    
  41e1b2:	sub    bh,ah
  41e1b4:	xchg   edx,eax
  41e1b5:	mov    esp,0x5f59295
  41e1ba:	rcr    DWORD PTR [ebx+0x53],cl
  41e1bd:	ret    0x386d
  41e1c0:	call   0x1e452f1b
  41e1c5:	mov    ebp,0x2d39d19d
  41e1ca:	nop
  41e1cb:	addr16 sahf 
  41e1cd:	jo     0x41e197
  41e1cf:	std    
  41e1d0:	ja     0x41e237
  41e1d2:	pop    ecx
  41e1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d4:	or     edi,edi
  41e1d6:	sbb    al,0x76
  41e1d8:	into   
  41e1d9:	and    cl,BYTE PTR [ecx]
  41e1db:	sahf   
  41e1dc:	loop   0x41e1e6
  41e1de:	inc    edi
  41e1df:	lahf   
  41e1e0:	jb     0x41e167
  41e1e2:	sti    
  41e1e3:	push   0x7581b438
  41e1e8:	fstp   TBYTE PTR [eax-0x6aa599cc]
  41e1ee:	xchg   esi,eax
  41e1ef:	arpl   bx,dx
  41e1f1:	shl    DWORD PTR [edi],0x7a
  41e1f4:	jle    0x41e220
  41e1f6:	fbstp  TBYTE PTR [ecx-0x4d349ed2]
  41e1fc:	aad    0x8
  41e1fe:	jl     0x41e199
  41e200:	or     eax,0x59e5eae3
  41e205:	es pop ebp
  41e207:	or     al,0xa
  41e209:	xchg   edi,eax
  41e20a:	call   0xbf92:0xb4a24729
  41e211:	popf   
  41e212:	sub    al,0xe1
  41e214:	jmp    0x41e20c
  41e216:	and    al,0x66
  41e218:	fnstcw WORD PTR [esi+0x6d]
  41e21b:	pop    ecx
  41e21c:	rol    BYTE PTR [ecx],cl
  41e21e:	pop    es
  41e21f:	push   0x6f
  41e221:	cmovo  ebx,DWORD PTR [edi-0x14]
  41e225:	outs   dx,BYTE PTR ds:[esi]
  41e226:	rcr    DWORD PTR [edx],0xbf
  41e229:	lods   al,BYTE PTR ds:[esi]
  41e22a:	sub    esi,edx
  41e22c:	out    0x19,eax
  41e22e:	jne    0x41e284
  41e230:	shl    DWORD PTR [eax+eiz*2-0x56],cl
  41e234:	cwde   
  41e235:	push   esp
  41e236:	sub    ch,cl
  41e238:	jae    0x41e27e
  41e23a:	int    0x98
  41e23c:	jmp    0x41e27b
  41e23e:	mov    bl,bl
  41e240:	imul   ebx,DWORD PTR [esi-0x1ee7038b],0x69
  41e247:	xchg   BYTE PTR [ecx],al
  41e249:	mov    al,0x75
  41e24b:	sbb    BYTE PTR [ecx],bh
  41e24d:	ss repnz push 0xfffffffe
  41e251:	xchg   esp,eax
  41e252:	inc    ebp
  41e253:	data16 jle 0x41e230
  41e256:	test   DWORD PTR [edi],0x51697be2
  41e25c:	les    esp,FWORD PTR [esi]
  41e25e:	shr    BYTE PTR [edi-0xf],cl
  41e261:	mov    gs,WORD PTR [ebp-0x7de68a96]
  41e267:	cmp    bp,WORD PTR [ebx-0x79]
  41e26b:	clc    
  41e26c:	iret   
  41e26d:	test   eax,0x7a40a545
  41e272:	jne    0x41e2db
  41e274:	adc    al,BYTE PTR [esi+0x1d]
  41e277:	mov    ebp,0x16a816dd
  41e27c:	xor    dl,BYTE PTR [esi+eax*4+0x35]
  41e280:	xchg   esi,eax
  41e281:	pop    esi
  41e282:	mov    edi,0xa9493f3
  41e287:	lahf   
  41e288:	push   ecx
  41e289:	or     al,0xb0
  41e28b:	cdq    
  41e28c:	jo     0x41e284
  41e28e:	jb     0x41e2a9
  41e290:	add    eax,0x38b88da5
  41e295:	and    al,0xeb
  41e297:	pop    eax
  41e298:	out    dx,eax
  41e299:	aas    
  41e29a:	mov    BYTE PTR [esi+0x34],ah
  41e29d:	dec    ebx
  41e29e:	pop    ebx
  41e29f:	mov    ebp,0xe36a03ec
  41e2a4:	shl    BYTE PTR [esi-0x7c],1
  41e2a7:	pop    edi
  41e2a8:	mov    edi,DWORD PTR [ebx+0x3f]
  41e2ab:	out    0xe8,al
  41e2ad:	mov    bh,0x94
  41e2af:	mov    dh,0xc6
  41e2b1:	addr16 pushw cs
  41e2b4:	cld    
  41e2b5:	jnp    0x41e255
  41e2b7:	outs   dx,DWORD PTR ds:[esi]
  41e2b9:	sub    DWORD PTR gs:[edx+0x4fc804f9],esp
  41e2c0:	add    BYTE PTR [edx],al
  41e2c2:	test   eax,0x7570d7a8
  41e2c7:	sub    eax,0x38b738b
  41e2cc:	adc    al,0x4b
  41e2ce:	int3   
  41e2cf:	inc    esp
  41e2d0:	jns    0x41e337
  41e2d2:	aad    0x11
  41e2d4:	xchg   edi,eax
  41e2d5:	cmp    eax,0xa4e2277e
  41e2da:	js     0x41e318
  41e2dc:	aad    0x46
  41e2de:	jbe    0x41e276
  41e2e0:	xchg   DWORD PTR [eax],ebx
  41e2e2:	dec    ebp
  41e2e3:	sar    BYTE PTR ds:0x53fb2638,1
  41e2e9:	retf   
  41e2ea:	sbb    BYTE PTR [ebx+0x21],al
  41e2ed:	fld    TBYTE PTR [eax-0x65b24e5b]
  41e2f3:	dec    ecx
  41e2f4:	test   BYTE PTR [edx+0x75],0x4
  41e2f8:	push   ecx
  41e2f9:	and    al,0xe9
  41e2fb:	(bad)  
  41e2fc:	cmp    esp,DWORD PTR [esi+0x1c]
  41e2ff:	ficom  WORD PTR [esi-0x420b8a37]
  41e305:	and    ebx,edx
  41e307:	pop    ss
  41e308:	jge    0x41e2e3
  41e30a:	je     0x41e2e1
  41e30c:	xchg   edx,eax
  41e30d:	enter  0x611f,0xcf
  41e311:	jnp    0x41e38f
  41e313:	or     DWORD PTR [eax],edi
  41e315:	fisub  DWORD PTR [eax-0x2f]
  41e318:	and    cl,BYTE PTR [esi]
  41e31a:	mov    DWORD PTR [edi+0x4d],esp
  41e31d:	mov    eax,0x69f64d03
  41e322:	lock pop edx
  41e324:	outs   dx,BYTE PTR ds:[esi]
  41e325:	jl     0x41e39c
  41e327:	mov    al,ch
  41e329:	retf   0x982e
  41e32c:	cwde   
  41e32d:	mov    DWORD PTR [edi+0x66],0x31b2deef
  41e334:	jmp    0xfd8e:0x8ed6a99c
  41e33b:	pop    ebx
  41e33c:	jmp    0x28f:0x5a23c5a9
  41e343:	nop
  41e344:	rcr    esp,cl
  41e346:	xchg   edx,eax
  41e347:	jge    0x41e2f1
  41e349:	cwde   
  41e34a:	dec    ecx
  41e34b:	int3   
  41e34c:	push   esp
  41e34d:	jbe    0x41e3a6
  41e34f:	arpl   sp,cx
  41e351:	in     eax,0x8b
  41e353:	stos   DWORD PTR es:[edi],eax
  41e354:	mov    dl,0xe7
  41e356:	push   0x4f
  41e358:	xlat   BYTE PTR ds:[ebx]
  41e359:	out    dx,al
  41e35a:	mov    esi,0x4166ce01
  41e35f:	sbb    bh,BYTE PTR [edi-0x5f74d287]
  41e365:	push   esp
  41e366:	sahf   
  41e367:	dec    edx
  41e368:	push   ss
  41e369:	outs   dx,DWORD PTR ds:[esi]
  41e36a:	dec    ebp
  41e36b:	clc    
  41e36c:	std    
  41e36d:	aad    0xa0
  41e36f:	in     eax,0xb9
  41e371:	xchg   BYTE PTR ds:0x436c2bbb,bh
  41e377:	test   DWORD PTR [ebx],ebx
  41e379:	bound  edi,QWORD PTR [eax]
  41e37b:	out    dx,al
  41e37c:	jl     0x41e302
  41e37e:	mov    eax,ds:0x17097ba7
  41e383:	jle    0x41e350
  41e385:	hlt    
  41e386:	jne    0x41e402
  41e388:	xchg   edi,eax
  41e389:	mov    dl,0x6a
  41e38b:	mov    edx,eax
  41e38d:	sbb    BYTE PTR [ecx],cl
  41e38f:	call   0xd3a4:0xd1d5
  41e395:	cmp    ch,BYTE PTR [edx+0x473caec0]
  41e39b:	mov    bh,0x9c
  41e39d:	data16 outs dx,BYTE PTR cs:[esi]
  41e3a0:	sub    bh,dh
  41e3a2:	imul   edx,DWORD PTR [edx+edi*4],0xbf9fc71a
  41e3a9:	test   BYTE PTR [ebp+0x44],dh
  41e3ac:	ror    BYTE PTR [ecx-0xe],0x43
  41e3b0:	add    edi,ebx
  41e3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3b3:	data16 jns 0x41e387
  41e3b6:	push   edi
  41e3b7:	shl    ebp,0xe9
  41e3ba:	inc    edi
  41e3bb:	or     DWORD PTR ds:0x560ab865,0x5e
  41e3c2:	inc    edx
  41e3c3:	call   esp
  41e3c5:	outs   dx,DWORD PTR ds:[esi]
  41e3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3c7:	xchg   ebp,eax
  41e3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3c9:	mov    edx,0x87a766ce
  41e3ce:	int3   
  41e3cf:	xor    BYTE PTR [ebx-0x1b428a31],bh
  41e3d5:	out    0x9b,eax
  41e3d7:	imul   edi,DWORD PTR [esi+0x69],0x1b
  41e3db:	mov    dl,0xa0
  41e3dd:	add    DWORD PTR [edi],ebx
  41e3df:	imul   eax,eax,0xffffffa9
  41e3e2:	sbb    eax,0xb1ab8365
  41e3e7:	pop    ecx
  41e3e8:	ror    DWORD PTR [esi-0x31],cl
  41e3eb:	cdq    
  41e3ec:	scas   al,BYTE PTR es:[edi]
  41e3ed:	adc    eax,ebx
  41e3ef:	mov    cl,0x1d
  41e3f1:	gs add eax,0x9cd612a4
  41e3f7:	call   0xe0e8:0xfe5e1dc6
  41e3fe:	mov    edx,0x8ea8a507
  41e403:	(bad)  
  41e405:	cmp    BYTE PTR [edi],bl
  41e407:	dec    esi
  41e408:	add    esp,DWORD PTR [esi+0x66deb2db]
  41e40e:	lds    ecx,FWORD PTR [edx-0x5ebd1e37]
  41e414:	hlt    
  41e415:	in     eax,0x24
  41e417:	int    0x13
  41e419:	popf   
  41e41a:	ins    DWORD PTR es:[edi],dx
  41e41b:	pop    ss
  41e41c:	rol    al,0xde
  41e41f:	cmp    BYTE PTR [eax+0x3b6629a2],0x56
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	(bad)  
  41e428:	cmc    
  41e429:	inc    ecx
  41e42a:	sbb    eax,0xc024aee2
  41e42f:	or     al,0xe6
  41e431:	jne    0x41e499
  41e433:	outs   dx,DWORD PTR gs:[esi]
  41e435:	jg     0x41e3bb
  41e437:	dec    eax
  41e438:	mov    al,0x52
  41e43a:	out    0x66,eax
  41e43c:	pop    esi
  41e43d:	and    BYTE PTR [ecx-0x7ee62c03],dh
  41e443:	fwait
  41e444:	sub    ah,dh
  41e446:	jb     0x41e479
  41e448:	(bad)  [esi+0x7e]
  41e44b:	(bad)
  41e44f:	outs   dx,DWORD PTR ds:[esi]
  41e450:	jp     0x41e42c
  41e452:	hlt    
  41e453:	or     DWORD PTR [esi+0x31],0x75
  41e457:	rol    BYTE PTR ds:0x1c869c22,cl
  41e45d:	inc    ecx
  41e45e:	push   esi
  41e45f:	push   di
  41e461:	scas   al,BYTE PTR es:[edi]
  41e462:	pop    edi
  41e463:	cmp    al,dl
  41e465:	in     al,dx
  41e466:	arpl   WORD PTR [ecx+ebx*8-0x2a],di
  41e46a:	sub    ebx,DWORD PTR [ebx+ebx*8]
  41e46d:	arpl   si,cx
  41e46f:	sar    DWORD PTR [eax],1
  41e471:	imul   edx
  41e473:	dec    esp
  41e474:	sbb    ebp,ebx
  41e476:	sahf   
  41e477:	callw  0x8693
  41e47b:	outs   dx,BYTE PTR ds:[esi]
  41e47c:	rcr    esp,cl
  41e47e:	xchg   edi,eax
  41e47f:	jb     0x41e449
  41e481:	sbb    BYTE PTR [ebx],al
  41e483:	xor    DWORD PTR [edx+0x182cf966],0x98fc6c59
  41e48d:	in     al,dx
  41e48e:	out    dx,eax
  41e48f:	loope  0x41e505
  41e491:	mov    al,ds:0x2b00ee75
  41e496:	sbb    edi,esi
  41e498:	or     DWORD PTR [ebp-0x49],esp
  41e49b:	pusha  
  41e49c:	test   esi,ebp
  41e49e:	pop    edx
  41e49f:	fmul   DWORD PTR [ebx+0x63f750e8]
  41e4a5:	adc    al,BYTE PTR ds:0x7570842d
  41e4ab:	add    dl,BYTE PTR [ebp-0x3d416281]
  41e4b1:	pusha  
  41e4b2:	pusha  
  41e4b3:	popa   
  41e4b4:	adc    BYTE PTR [eax-0x2f],bh
  41e4b7:	loop   0x41e48c
  41e4b9:	push   ebp
  41e4ba:	dec    eax
  41e4bb:	mov    cl,0x3f
  41e4bd:	out    dx,al
  41e4be:	psubb  mm4,QWORD PTR [ebx]
  41e4c1:	data16 fist DWORD PTR [eax]
  41e4c4:	push   0xffffffb0
  41e4c6:	push   ebx
  41e4c7:	sbb    DWORD PTR [edx+ecx*4-0x582ca79f],ecx
  41e4ce:	lods   ax,WORD PTR ds:[esi]
  41e4d0:	mov    eax,ds:0x9626834a
  41e4d5:	data16 jns 0x41e556
  41e4d8:	or     BYTE PTR [edx-0x44],dh
  41e4db:	adc    ah,BYTE PTR [esi]
  41e4dd:	cli    
  41e4de:	test   al,0x3a
  41e4e0:	fldcw  WORD PTR [eax+0x440da275]
  41e4e6:	sbb    edi,DWORD PTR [ecx+0x29]
  41e4e9:	xor    BYTE PTR [edi],0x99
  41e4ec:	addr16 jb 0x41e4cd
  41e4ef:	arpl   WORD PTR gs:[ecx-0x52eac8f5],ax
  41e4f6:	fst    DWORD PTR [edi-0x2f]
  41e4f9:	rcl    DWORD PTR [ebx],cl
  41e4fb:	xor    ch,BYTE PTR [ebp-0x28]
  41e4fe:	jne    0x41e4e5
  41e500:	stos   BYTE PTR es:[edi],al
  41e501:	mov    di,0xc6fc
  41e505:	and    BYTE PTR [esi-0x2ee1b6c0],al
  41e50b:	push   edx
  41e50c:	push   edx
  41e50d:	mov    dh,0x75
  41e50f:	dec    esi
  41e510:	call   0x1d65:0x10e87d0c
  41e517:	jecxz  0x41e4db
  41e519:	fs cwde 
  41e51b:	sub    esp,edx
  41e51d:	mov    cl,ah
  41e51f:	pop    es
  41e520:	addr16 adc eax,0x13882c75
  41e526:	bound  ebx,QWORD PTR [ecx-0x6f8ee7ed]
  41e52c:	shr    DWORD PTR [ecx-0x7a],cl
  41e52f:	es inc ebp
  41e531:	mov    WORD PTR [ebx-0x73],fs
  41e534:	das    
  41e535:	jp     0x41e5ac
  41e537:	mov    edx,0x7d01cd69
  41e53c:	ret    
  41e53d:	add    edx,DWORD PTR [ebx+0x4cfe3166]
  41e543:	jecxz  0x41e518
  41e545:	bound  ebp,QWORD PTR [ebx+0x4d]
  41e548:	fmul   st,st(1)
  41e54a:	(bad)  
  41e54b:	fadd   DWORD PTR [ebx+0x66]
  41e54e:	scas   al,BYTE PTR es:[edi]
  41e54f:	or     eax,DWORD PTR [eax-0x4a6561ce]
  41e555:	jb     0x41e583
  41e557:	xchg   edx,eax
  41e558:	rcr    DWORD PTR [ebp-0x19],cl
  41e55b:	mov    ds:0xbd2779a5,al
  41e560:	test   DWORD PTR [ecx+0x66afd5db],0x81e4e195
  41e56a:	lahf   
  41e56b:	daa    
  41e56c:	dec    esp
  41e56d:	nop
  41e56e:	add    DWORD PTR [ebx-0x7f],0xeebc75a9
  41e575:	or     DWORD PTR [ebx],edi
  41e577:	int3   
  41e578:	data16 out 0xdb,al
  41e57b:	mov    ds:0xbc792690,eax
  41e580:	ret    
  41e581:	hlt    
  41e582:	cmc    
  41e583:	jecxz  0x41e56f
  41e585:	pop    ds
  41e586:	pop    ds
  41e587:	mov    BYTE PTR [eax-0x30],al
  41e58a:	jne    0x41e5b8
  41e58c:	sahf   
  41e58d:	je     0x41e571
  41e58f:	pop    esp
  41e590:	rcl    DWORD PTR [ebx+edi*4],cl
  41e593:	data16 add ch,BYTE PTR [edi+eiz*4+0x3becf745]
  41e59b:	xor    ah,BYTE PTR [ebp-0x4f]
  41e59e:	xchg   ecx,eax
  41e59f:	push   es
  41e5a0:	out    0x3b,eax
  41e5a2:	dec    eax
  41e5a3:	add    al,0x8a
  41e5a5:	mov    bh,0xc7
  41e5a7:	out    0xe4,al
  41e5a9:	gs pop esi
  41e5ab:	addr16 aam 0x73
  41e5ae:	or     al,0xe0
  41e5b0:	sti    
  41e5b1:	mov    ds:0xf600d56f,eax
  41e5b6:	jb     0x41e5b4
  41e5b8:	adc    ecx,DWORD PTR [eax+0x1e]
  41e5bb:	pop    ecx
  41e5bc:	inc    ebp
  41e5bd:	pop    edx
  41e5be:	pop    esp
  41e5bf:	cli    
  41e5c0:	aad    0xe2
  41e5c2:	push   esp
  41e5c3:	jmp    0x6e198c68
  41e5c8:	in     al,0xae
  41e5ca:	cld    
  41e5cb:	leave  
  41e5cc:	jmp    0x2a605bcf
  41e5d1:	xchg   esp,eax
  41e5d2:	(bad)
  41e5d5:	gs dec edi
  41e5d7:	dec    eax
  41e5d8:	sub    ebp,DWORD PTR [esi]
  41e5da:	rcr    DWORD PTR [ebx],0x3a
  41e5dd:	nop
  41e5de:	and    dh,ah
  41e5e0:	sbb    BYTE PTR [eax],ch
  41e5e2:	jne    0x41e566
  41e5e4:	jmp    FWORD PTR [ecx-0x5f2202a8]
  41e5ea:	push   0x61
  41e5ec:	mov    ch,0xcb
  41e5ee:	mov    esi,0x852a375e
  41e5f3:	ds jle 0x41e65e
  41e5f6:	mov    ah,BYTE PTR [esi-0x17]
  41e5f9:	add    al,0xeb
  41e5fb:	mul    BYTE PTR [edx-0x1c992674]
  41e601:	cmp    BYTE PTR [edx],ah
  41e603:	jg     0x41e5d8
  41e605:	pop    ebx
  41e606:	push   0xaa61338a
  41e60b:	outs   dx,DWORD PTR ds:[esi]
  41e60c:	fs gs mov cl,0x61
  41e610:	xchg   esi,eax
  41e611:	mov    ah,0x3d
  41e613:	lahf   
  41e614:	ds cmp esi,ecx
  41e617:	cs adc edx,edx
  41e61a:	imul   ebp,DWORD PTR [esi],0xffffffbc
  41e61d:	outs   dx,DWORD PTR ds:[esi]
  41e61e:	(bad)  
  41e61f:	out    0xa0,al
  41e621:	ins    DWORD PTR es:[edi],dx
  41e622:	jmp    0xc9dd32e6
  41e627:	add    ebp,DWORD PTR [ebp+esi*8+0x13]
  41e62b:	inc    esi
  41e62c:	sar    eax,cl
  41e62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62f:	and    ch,BYTE PTR [esi-0x79]
  41e632:	push   ss
  41e633:	push   esp
  41e634:	pop    es
  41e635:	cmp    ch,BYTE PTR [edi]
  41e637:	(bad)  
  41e638:	out    dx,al
  41e639:	jecxz  0x41e654
  41e63b:	aas    
  41e63c:	mov    esi,0xe71af167
  41e641:	add    BYTE PTR [ebp-0x30],dl
  41e644:	xor    esi,DWORD PTR [edx-0x76340b8b]
  41e64a:	sahf   
  41e64b:	pop    edi
  41e64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e64d:	and    BYTE PTR [ecx-0x4bb9d4a],ah
  41e653:	icebp  
  41e654:	inc    ebx
  41e655:	mov    ecx,0xc9299b75
  41e65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65b:	lds    edi,FWORD PTR [ecx+0x60]
  41e65e:	fld    DWORD PTR [esi-0x71]
  41e661:	sub    al,BYTE PTR [edi-0x6c]
  41e664:	mov    ecx,DWORD PTR [ebp+0x3d]
  41e667:	test   al,0xd2
  41e669:	mov    ds:0xf3426b5a,eax
  41e66e:	xlat   BYTE PTR ds:[ebx]
  41e66f:	xor    eax,0xe8986564
  41e674:	jno    0x41e635
  41e676:	push   0xaed7cc2
  41e67b:	mov    ds:0x66759b2d,eax
  41e680:	test   DWORD PTR [edx],ebx
  41e682:	lods   eax,DWORD PTR ds:[esi]
  41e683:	push   ss
  41e684:	cwde   
  41e685:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e687:	inc    DWORD PTR ds:0x5148a7e5
  41e68d:	jbe    0x41e670
  41e68f:	stos   BYTE PTR es:[edi],al
  41e690:	(bad)  
  41e692:	cdq    
  41e693:	mov    ds:0x2075fb73,al
  41e698:	sbb    edi,ecx
  41e69a:	shl    DWORD PTR [esi+0x6d],1
  41e69d:	aas    
  41e69e:	addr16 mov eax,esp
  41e6a1:	dec    edx
  41e6a2:	cmp    eax,0x5fc0d966
  41e6a7:	mov    eax,0x9175aefc
  41e6ac:	call   0x8b1904a
  41e6b1:	gs loopne 0x41e728
  41e6b4:	xor    esi,eax
  41e6b6:	mov    bh,0x8e
  41e6b8:	sti    
  41e6b9:	mov    dl,0x78
  41e6bb:	dec    edi
  41e6bc:	mov    ecx,DWORD PTR [edx]
  41e6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6bf:	pop    eax
  41e6c0:	outs   dx,BYTE PTR ds:[esi]
  41e6c1:	push   DWORD PTR [ebp-0x4]
  41e6c4:	inc    esp
  41e6c5:	call   0x66f5:0xf5c8d856
  41e6cc:	(bad)  
  41e6cd:	shl    DWORD PTR [esi],cl
  41e6cf:	or     ebx,edx
  41e6d1:	mov    al,ds:0x525d2995
  41e6d6:	out    0xc5,eax
  41e6d8:	inc    ebp
  41e6d9:	gs test al,0x80
  41e6dc:	xor    DWORD PTR [edi],0xffffff86
  41e6df:	fcomp  DWORD PTR [eax-0x7a]
  41e6e2:	sahf   
  41e6e3:	push   ecx
  41e6e4:	adc    eax,0x12f9c1cb
  41e6e9:	pop    edx
  41e6ea:	aad    0xbe
  41e6ec:	ja     0x41e67e
  41e6ee:	and    eax,edx
  41e6f0:	scas   al,BYTE PTR es:[edi]
  41e6f1:	push   0x6e
  41e6f3:	pop    esi
  41e6f4:	test   eax,0xb65ab961
  41e6f9:	ds jbe 0x41e75f
  41e6fc:	jae    0x41e6f8
  41e6fe:	xor    bh,dh
  41e700:	adc    al,0x7c
  41e702:	sbb    DWORD PTR [ebx-0x1e],ebx
  41e705:	add    DWORD PTR [edi-0x4aaf6c7e],ebp
  41e70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e70c:	xor    eax,0x10ce4965
  41e711:	lahf   
  41e712:	je     0x41e73d
  41e714:	(bad)  
  41e715:	jp     0x41e6a9
  41e717:	push   ss
  41e718:	adc    dh,BYTE PTR [ebp+esi*2-0x17]
  41e71c:	and    DWORD PTR [ebx],ebp
  41e71e:	push   ss
  41e71f:	cwde   
  41e720:	jg     0x41e6bf
  41e722:	data16 gs in al,0xe5
  41e726:	mov    eax,ds:0x4354beeb
  41e72b:	inc    edx
  41e72c:	(bad)  
  41e72d:	repz bound edx,QWORD PTR [edi]
  41e730:	retf   
  41e731:	test   al,0x4
  41e733:	sub    al,BYTE PTR [eax+0x4e69ffcf]
  41e739:	(bad)
  41e73c:	sar    BYTE PTR [eax],1
  41e73e:	sbb    ch,BYTE PTR [ebx-0x658adeba]
  41e744:	outs   dx,BYTE PTR ds:[esi]
  41e745:	shl    DWORD PTR [esp+ebx*2+0x390aeb3b],cl
  41e74c:	push   eax
  41e74d:	scas   eax,DWORD PTR es:[edi]
  41e74e:	pop    bp
  41e750:	mov    cl,0xd1
  41e752:	jne    0x41e771
  41e754:	push   edx
  41e755:	gs jg  0x41e7c7
  41e758:	sub    al,0x36
  41e75a:	mov    edx,0x13c41a
  41e75f:	retf   0x4e7b
  41e762:	jne    0x41e73b
  41e764:	js     0x41e736
  41e766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e767:	stos   BYTE PTR es:[edi],al
  41e768:	and    eax,0x2ebf70f6
  41e76d:	ja     0x41e764
  41e76f:	(bad)  
  41e770:	pop    edi
  41e771:	call   0x6c75:0xed1ac6ff
  41e778:	rcr    BYTE PTR [esi-0x16],0x8
  41e77c:	mov    esi,0x196643bb
  41e781:	inc    ebx
  41e782:	pop    edx
  41e783:	jnp    0x41e76f
  41e785:	sbb    DWORD PTR [ecx-0x3f],0xffffffff
  41e789:	or     ebp,DWORD PTR [ecx]
  41e78b:	add    edx,0xf0f54542
  41e791:	and    eax,0xa45a6612
  41e796:	shl    dh,0x43
  41e799:	cwde   
  41e79a:	pop    ebx
  41e79b:	cmp    dl,BYTE PTR [edi]
  41e79d:	xchg   edi,eax
  41e79e:	ja     0x41e72d
  41e7a0:	sahf   
  41e7a1:	xchg   al,dl
  41e7a3:	sub    edx,DWORD PTR [eax-0x3b8c8e99]
  41e7a9:	xor    ch,BYTE PTR [eax-0x22895c38]
  41e7af:	mov    ch,0xd3
  41e7b1:	pop    esp
  41e7b2:	inc    edi
  41e7b3:	sbb    esi,edi
  41e7b5:	mov    gs,edx
  41e7b7:	inc    ecx
  41e7b8:	push   ebp
  41e7b9:	gs cmp al,0x60
  41e7bc:	dec    ebp
  41e7bd:	pop    ebp
  41e7be:	test   DWORD PTR [ebp-0x5b],ebx
  41e7c1:	dec    edx
  41e7c2:	or     esi,DWORD PTR [esi+0x59]
  41e7c5:	mov    dh,0x75
  41e7c7:	push   ebp
  41e7c8:	lods   al,BYTE PTR ds:[esi]
  41e7c9:	shr    BYTE PTR [ecx-0x59],0x4e
  41e7cd:	xor    ah,BYTE PTR [edi+0x4fc3d366]
  41e7d3:	rol    BYTE PTR fs:[esp+edi*2+0x4e],1
  41e7d8:	pushf  
  41e7d9:	cmp    DWORD PTR [ecx+0x71],0x6b352cbb
  41e7e0:	jb     0x41e847
  41e7e2:	dec    ecx
  41e7e3:	scas   eax,DWORD PTR es:[edi]
  41e7e4:	out    0x5a,eax
  41e7e6:	add    DWORD PTR [edx+0x3c],ecx
  41e7e9:	xor    edx,DWORD PTR [edx+0x75902731]
  41e7ef:	sub    DWORD PTR [esi-0xf],edx
  41e7f2:	dec    DWORD PTR [eax]
  41e7f4:	leave  
  41e7f5:	dec    esi
  41e7f6:	in     eax,0x66
  41e7f8:	ja     0x41e7e9
  41e7fa:	pop    edx
  41e7fb:	pop    ebx
  41e7fc:	iret   
  41e7fd:	mov    ebx,0x24793ed
  41e802:	jne    0x41e7f7
  41e804:	cmp    al,BYTE PTR [edx-0x33]
  41e807:	retf   0x5771
  41e80a:	sbb    al,0x66
  41e80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80d:	jae    0x41e7ae
  41e80f:	cmc    
  41e810:	rcr    DWORD PTR [ebx],cl
  41e812:	sub    cl,BYTE PTR [ecx]
  41e814:	inc    ecx
  41e815:	ja     0x41e7da
  41e817:	cdq    
  41e818:	xchg   esp,eax
  41e819:	xchg   cx,ax
  41e81b:	sbb    DWORD PTR [edi+0x1b1fa36f],eax
  41e821:	mov    al,ds:0xa15f341b
  41e826:	jne    0x41e7e5
  41e828:	jmp    0x41e896
  41e82a:	icebp  
  41e82b:	aas    
  41e82c:	loope  0x41e7e0
  41e82e:	shl    DWORD PTR [edi+0x29],1
  41e831:	dec    ebx
  41e832:	and    bl,BYTE PTR [ebx+edi*4+0x57]
  41e836:	call   0x38fdbb88
  41e83b:	xor    esi,DWORD PTR [edx+0x28cbea25]
  41e841:	mov    BYTE PTR gs:[eax+ebx*1+0x62],dh
  41e846:	pop    edi
  41e847:	jecxz  0x41e7d5
  41e849:	shl    BYTE PTR [ecx+0x59],1
  41e84c:	aas    
  41e84d:	mul    BYTE PTR [edi-0x3b]
  41e850:	aam    0x7e
  41e852:	jne    0x41e8a0
  41e854:	ja     0x41e8bb
  41e856:	and    cl,BYTE PTR [esi+0x26145b71]
  41e85c:	xor    edi,edi
  41e85e:	(bad)  
  41e85f:	push   ds
  41e860:	rol    BYTE PTR [eax+0x75],1
  41e863:	mov    bl,0xdf
  41e865:	xchg   esi,eax
  41e866:	dec    esi
  41e867:	inc    edi
  41e868:	mov    esp,0xa066b61b
  41e86d:	xor    eax,0xf3f4658e
  41e872:	retf   
  41e873:	sbb    eax,0x16ba03e5
  41e878:	xchg   BYTE PTR [eax],dh
  41e87a:	(bad)  
  41e87c:	push   esp
  41e87d:	add    DWORD PTR [edx-0x1a],0x66ae6438
  41e884:	xor    DWORD PTR [ebp+0x1ad321bf],eax
  41e88a:	xchg   ecx,eax
  41e88b:	call   0xb35b8bfc
  41e890:	inc    ecx
  41e891:	sbb    DWORD PTR [eax],eax
  41e893:	sub    eax,0xd85e62d3
  41e898:	and    DWORD PTR [edi+esi*1+0x3a7cd3f9],edx
  41e89f:	dec    eax
  41e8a0:	rol    DWORD PTR fs:[edi-0xa9945fa],1
  41e8a7:	add    eax,0x6867a550
  41e8ac:	and    DWORD PTR [ebx],edx
  41e8ae:	je     0x41e890
  41e8b0:	lods   eax,DWORD PTR ds:[esi]
  41e8b1:	xor    BYTE PTR [ebp+0x52],0x5d
  41e8b5:	fstp   QWORD PTR fs:[esi]
  41e8b8:	(bad)  gs:[edx]
  41e8bb:	imul   ecx,edi,0xdddfa426
  41e8c1:	mov    esp,0x24d3175d
  41e8c6:	inc    ebp
  41e8c7:	push   ecx
  41e8c8:	push   esi
  41e8c9:	jnp    0x41e8a2
  41e8cb:	jo     0x41e870
  41e8cd:	data16 (bad) 
  41e8cf:	mov    ebp,0x6a42220e
  41e8d4:	fprem  
  41e8d6:	cmp    eax,0x752ed8d4
  41e8db:	fwait
  41e8dc:	(bad)  
  41e8dd:	shl    BYTE PTR [ebx-0xd],cl
  41e8e0:	mov    ecx,0x8a668686
  41e8e5:	mov    edi,ebp
  41e8e7:	mov    ds:0x1e996cee,al
  41e8ec:	mov    ss,WORD PTR [edx+ebp*8]
  41e8ef:	push   eax
  41e8f0:	ror    DWORD PTR [ecx-0x5e3711c4],0x66
  41e8f7:	fsubr  QWORD PTR fs:[edx-0x3f6ffcdc]
  41e8fe:	sub    eax,0x67927b15
  41e903:	or     al,0x21
  41e905:	out    0x71,eax
  41e907:	outs   dx,DWORD PTR ds:[esi]
  41e908:	push   ebx
  41e909:	scas   al,BYTE PTR es:[edi]
  41e90a:	or     ah,BYTE PTR [esi]
  41e90c:	inc    ecx
  41e90d:	dec    eax
  41e90e:	mov    bl,0x85
  41e910:	cmp    BYTE PTR [ecx],bh
  41e912:	fnstsw WORD PTR [edx]
  41e914:	inc    ebp
  41e915:	sub    ch,dl
  41e917:	sbb    al,BYTE PTR [ebx+0x2c]
  41e91a:	inc    edx
  41e91b:	iretw  
  41e91d:	psubd  mm3,QWORD PTR ds:0x66d13264
  41e924:	int3   
  41e925:	jne    0x41e928
  41e927:	dec    edi
  41e928:	rol    DWORD PTR [esi+esi*2+0x3e53978d],cl
  41e92f:	xor    esp,esp
  41e931:	gs or  al,0x83
  41e934:	pop    esi
  41e935:	mov    bh,0xeb
  41e937:	pusha  
  41e938:	pop    eax
  41e939:	rcr    BYTE PTR [edi-0x6351963d],0xb1
  41e940:	add    esp,eax
  41e942:	and    DWORD PTR [ecx],ebp
  41e944:	retf   0xec2c
  41e947:	data16 test BYTE PTR [ecx+0xb],cl
  41e94b:	clc    
  41e94c:	repnz mov ch,0x56
  41e94f:	jge    0x41e924
  41e951:	push   edx
  41e952:	neg    DWORD PTR [esi+0xfa678f]
  41e958:	out    dx,al
  41e959:	sbb    eax,0x695e6604
  41e95e:	cmp    al,0xdc
  41e960:	pop    ss
  41e961:	jae    0x41e992
  41e963:	xlat   BYTE PTR ds:[ebx]
  41e964:	jno    0x41e92a
  41e966:	add    dh,ah
  41e968:	mov    al,ds:0xa68b8bab
  41e96d:	push   ebx
  41e96e:	fsub   DWORD PTR [esi-0x3]
  41e971:	in     al,dx
  41e972:	jp     0x41e9e9
  41e974:	or     esi,DWORD PTR [ecx+0x5b]
  41e977:	mov    ebx,ss
  41e979:	das    
  41e97a:	adc    al,0x34
  41e97c:	dec    ecx
  41e97d:	icebp  
  41e97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e97f:	call   0x4deb5018
  41e984:	cwde   
  41e985:	je     0x41e90c
  41e987:	jnp    0x41e9d0
  41e989:	inc    ebx
  41e98a:	adc    dl,BYTE PTR [ebx+esi*8+0x1e5c756e]
  41e991:	sbb    DWORD PTR [edx+ecx*8-0x6e],esp
  41e995:	cld    
  41e996:	(bad)  
  41e997:	inc    si
  41e999:	adc    DWORD PTR [ebx+ebp*1],edx
  41e99c:	shl    DWORD PTR [ebp+esi*8-0x7f],cl
  41e9a0:	outs   dx,DWORD PTR ds:[esi]
  41e9a1:	test   al,0x39
  41e9a3:	xchg   esi,eax
  41e9a4:	es mov esi,DWORD PTR gs:[eax+0x2]
  41e9a9:	(bad)  
  41e9aa:	enter  0xa369,0x3a
  41e9ae:	cld    
  41e9af:	cmp    BYTE PTR [esi-0x7d448a26],bh
  41e9b5:	hlt    
  41e9b6:	xchg   esp,eax
  41e9b7:	sbb    ah,BYTE PTR es:[esi+0x34]
  41e9bb:	pop    sp
  41e9bd:	sub    cl,0xe3
  41e9c0:	push   esi
  41e9c1:	push   edx
  41e9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9c3:	shl    DWORD PTR [ebx+0x6d],cl
  41e9c6:	jne    0x41e9eb
  41e9c8:	add    BYTE PTR [ebp+0x19],bl
  41e9cb:	sub    DWORD PTR [esi+edi*2-0x59],esi
  41e9cf:	data16 (bad) 
  41e9d2:	adc    edx,eax
  41e9d4:	rol    BYTE PTR [eax-0x77],cl
  41e9d7:	push   0x56
  41e9d9:	or     dl,bh
  41e9db:	mov    ch,0x6c
  41e9dd:	gs adc eax,0xd0d66fb
  41e9e3:	or     BYTE PTR [ebx-0x628e035f],bh
  41e9e9:	mov    DWORD PTR [ebp+0x4],esi
  41e9ec:	das    
  41e9ed:	mov    DWORD PTR [esi-0x2f9956cb],edx
  41e9f3:	dec    eax
  41e9f4:	and    bh,BYTE PTR [ecx]
  41e9f6:	lds    edi,FWORD PTR [ecx-0x4e5be4f9]
  41e9fc:	shl    ebp,1
  41e9fe:	mov    edx,0xcfaa2498
  41ea03:	shr    DWORD PTR [ebp-0x1c398c9a],0x8c
  41ea0a:	xor    eax,0xb0be41f7
  41ea0f:	pop    edx
  41ea10:	in     al,0xdb
  41ea12:	mov    ecx,0xc227135c
  41ea17:	inc    eax
  41ea18:	call   0xceb8:0xc3a510b1
  41ea1f:	and    WORD PTR [ebp+0x70d33faf],ax
  41ea26:	in     eax,dx
  41ea27:	inc    ebp
  41ea28:	add    BYTE PTR [esi+0x652cfa2e],al
  41ea2e:	call   0x2502:0xe3604e38
  41ea35:	xor    al,0x8a
  41ea38:	aaa    
  41ea39:	shl    BYTE PTR [ebp-0x8],0x59
  41ea3d:	mov    eax,ds:0x4c383037
  41ea42:	lea    esp,[ebp+0x54]
  41ea45:	pop    ebp
  41ea46:	fimul  DWORD PTR [edx-0x10]
  41ea49:	inc    edi
  41ea4a:	cdq    
  41ea4b:	add    al,0x98
  41ea4d:	cdq    
  41ea4e:	xor    eax,0xb260a186
  41ea53:	fdiv   st,st(7)
  41ea55:	lock inc ebx
  41ea57:	xor    eax,0x2a94690
  41ea5c:	mov    dl,BYTE PTR gs:[eax+0x7540d62a]
  41ea63:	cmp    DWORD PTR [ecx+edx*2],edi
  41ea66:	in     al,dx
  41ea67:	jecxz  0x41eae6
  41ea69:	not    DWORD PTR [eax]
  41ea6b:	sahf   
  41ea6c:	inc    esi
  41ea6d:	pop    eax
  41ea6e:	xchg   DWORD PTR [eax-0x7e8adbf5],ebp
  41ea74:	cmovs  eax,DWORD PTR [edi-0x3f]
  41ea78:	pop    esi
  41ea79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7a:	pop    edi
  41ea7b:	add    dl,BYTE PTR gs:[esi]
  41ea7e:	dec    edx
  41ea7f:	pop    ss
  41ea80:	and    cl,BYTE PTR [esi]
  41ea82:	sbb    eax,0x75aebc0b
  41ea87:	mov    cl,0xb9
  41ea89:	out    dx,al
  41ea8a:	add    al,0xdb
  41ea8c:	push   esp
  41ea8d:	push   ebx
  41ea8e:	mov    ds:0x72aa6380,eax
  41ea93:	fs jp  0x41ea4b
  41ea96:	dec    ebx
  41ea97:	xchg   ebp,eax
  41ea98:	mov    esp,0x4ca85950
  41ea9d:	arpl   WORD PTR [ebp-0x66],si
  41eaa0:	lea    edi,[esi-0x9625a7a]
  41eaa6:	bound  esp,QWORD PTR [ecx+0x57]
  41eaa9:	mov    bl,0x3f
  41eaab:	call   0xf28a:0x58c211d3
  41eab2:	dec    ebp
  41eab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab4:	test   eax,0xb7d9096c
  41eab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabb:	adc    bl,0xa7
  41eabe:	fidivr DWORD PTR [edx+ebp*2-0x4d880191]
  41eac5:	data16 or BYTE PTR [edi+0x25],bh
  41eac9:	repnz cwde 
  41eacb:	into   
  41eacc:	fdivr  QWORD PTR [ecx+0x17]
  41eacf:	gs pop ebp
  41ead1:	adc    esi,DWORD PTR [esi-0x72]
  41ead4:	sbb    al,0xd5
  41ead6:	mov    BYTE PTR [ecx-0x71],cl
  41ead9:	data16 mov dl,0xf7
  41eadc:	adc    al,0xa4
  41eade:	inc    esp
  41eadf:	push   esp
  41eae0:	test   al,0x63
  41eae2:	and    eax,esi
  41eae4:	cmp    ebx,esp
  41eae6:	jne    0x41eac4
  41eae8:	push   0xbe4564f
  41eaed:	xchg   edx,eax
  41eaee:	pop    ebx
  41eaef:	sbb    ax,0x86f
  41eaf3:	add    al,dl
  41eaf5:	stos   BYTE PTR es:[edi],al
  41eaf6:	add    eax,0xb7e45d93
  41eafb:	push   0x511d11b3
  41eb00:	inc    esp
  41eb01:	add    BYTE PTR [ecx-0xc1fa79a],dh
  41eb07:	js     0x41ead8
  41eb09:	ror    ah,1
  41eb0b:	std    
  41eb0c:	push   ebx
  41eb0d:	add    DWORD PTR [ebp-0x6b],esi
  41eb10:	cli    
  41eb11:	test   al,0x71
  41eb13:	jmp    0xd578:0x663a56f6
  41eb1a:	notrack call ebx
  41eb1d:	jg     0x41eb01
  41eb1f:	lds    edx,FWORD PTR [ecx+0x4b]
  41eb22:	or     eax,0x8f66dce9
  41eb27:	lock fsub st,st(3)
  41eb2a:	mov    ds:0x9edb99e0,al
  41eb2f:	and    dh,BYTE PTR [edx+0x61037524]
  41eb35:	jnp    0x41eaea
  41eb37:	mov    ebx,0x6679bc7f
  41eb3c:	sbb    BYTE PTR [eax],bh
  41eb3e:	add    eax,DWORD PTR [eax-0x2d]
  41eb41:	shl    BYTE PTR [ebx],1
  41eb43:	std    
  41eb44:	xchg   edx,eax
  41eb45:	xchg   ecx,eax
  41eb46:	lock jp 0x41eaf8
  41eb49:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41eb4b:	or     ah,BYTE PTR [eax]
  41eb4d:	int    0xae
  41eb4f:	cli    
  41eb50:	pop    edx
  41eb51:	cdq    
  41eb52:	push   ss
  41eb53:	mov    dl,0xd3
  41eb55:	mov    edx,eax
  41eb57:	push   es
  41eb58:	daa    
  41eb59:	sbb    dl,BYTE PTR [eax+0x71657944]
  41eb5f:	fadd   QWORD PTR [edi-0x19]
  41eb62:	iret   
  41eb63:	sbb    DWORD PTR [esi-0x17],edi
  41eb66:	data16 mov BYTE PTR [esi+ebx*1],al
  41eb6a:	jne    0x41eaec
  41eb6c:	in     al,0xb7
  41eb6e:	and    al,0x1f
  41eb70:	mov    DWORD PTR [ebx+esi*1],ebp
  41eb73:	and    DWORD PTR [eax-0x1c99c0fa],0xffffffc9
  41eb7a:	rcr    BYTE PTR ds:0xeb7451b7,0xc8
  41eb81:	retf   
  41eb82:	adc    al,0x7e
  41eb84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb85:	pusha  
  41eb86:	mov    ch,0x54
  41eb88:	stc    
  41eb89:	mov    ebp,0x74cc661d
  41eb8e:	int    0x4d
  41eb90:	pop    ss
  41eb91:	jp     0x41ec02
  41eb93:	or     al,0x90
  41eb95:	xchg   ebp,eax
  41eb96:	shl    dh,1
  41eb98:	imul   esi,DWORD PTR [ebp+eiz*1+0x794eb9fa],0x9f6689f9
  41eba3:	sbb    DWORD PTR [ecx+0x70e8ce05],esp
  41eba9:	inc    ecx
  41ebaa:	xchg   BYTE PTR [edi],bh
  41ebac:	out    dx,al
  41ebad:	fwait
  41ebae:	dec    dh
  41ebb0:	mov    esi,0x4f49b97a
  41ebb5:	lods   eax,DWORD PTR ds:[esi]
  41ebb6:	mov    eax,0x46d8455
  41ebbb:	pop    edi
  41ebbc:	pop    ds
  41ebbd:	adc    edi,ecx
  41ebbf:	jne    0x41ebc9
  41ebc1:	jae    0x41ec25
  41ebc3:	popa   
  41ebc4:	out    dx,al
  41ebc5:	dec    ebp
  41ebc6:	arpl   sp,cx
  41ebc8:	adc    BYTE PTR [edi-0x62],0x87
  41ebcc:	into   
  41ebcd:	mov    ebx,0x1c7e46ff
  41ebd2:	xchg   ebp,eax
  41ebd3:	xor    ax,0x1650
  41ebd7:	rcl    bl,cl
  41ebd9:	mov    dh,0xa6
  41ebdb:	mov    eax,0x6f14ca02
  41ebe0:	(bad)  [esi-0x2a]
  41ebe3:	xchg   ebx,eax
  41ebe4:	xchg   ebp,eax
  41ebe5:	lods   eax,DWORD PTR ds:[esi]
  41ebe6:	in     al,0x2f
  41ebe8:	and    BYTE PTR ds:0x8be1f6ee,ch
  41ebee:	je     0x41eb73
  41ebf0:	mov    ah,0xdd
  41ebf2:	adc    edi,DWORD PTR [ecx+0x52]
  41ebf5:	gs xchg ebp,eax
  41ebf7:	clc    
  41ebf8:	lahf   
  41ebf9:	fs cmc 
  41ebfb:	les    edx,FWORD PTR [ecx]
  41ebfd:	xchg   edx,eax
  41ebfe:	dec    BYTE PTR [edi]
  41ec00:	sub    dh,BYTE PTR [edx-0x2e784a8b]
  41ec06:	fdiv   st(6),st
  41ec08:	add    esi,DWORD PTR [ebp-0x73019982]
  41ec0e:	mov    bl,0xf2
  41ec10:	rcr    DWORD PTR ds:0x3ea518a3,cl
  41ec16:	icebp  
  41ec17:	jp     0x41ec3b
  41ec19:	gs dec esp
  41ec1b:	jns    0x41ec3a
  41ec1d:	adc    bh,BYTE PTR [eax+0x38]
  41ec20:	jecxz  0x41ec72
  41ec22:	rcr    DWORD PTR [edx],cl
  41ec24:	mov    eax,0x46247547
  41ec29:	and    al,0xde
  41ec2b:	imul   esi,DWORD PTR [edi],0x6a
  41ec2e:	inc    esi
  41ec2f:	imul   ebp,DWORD PTR [edx+0x317bff16],0xcd9ac0bd
  41ec39:	pop    eax
  41ec3a:	jne    0x41ebd2
  41ec3c:	adc    al,0x54
  41ec3e:	mov    edi,0x5d6978fa
  41ec43:	gs call esi
  41ec46:	and    al,0x6d
  41ec48:	sub    BYTE PTR [edx+0x11c00d05],al
  41ec4e:	jne    0x41ecce
  41ec50:	mov    al,0x2c
  41ec52:	nop
  41ec53:	fdiv   QWORD PTR [ebx+0x3c]
  41ec56:	jmp    DWORD PTR [edi+0x2a]
  41ec59:	call   0xa01f:0xf5b305dc
  41ec60:	not    DWORD PTR [ecx+0x3b12aeb8]
  41ec66:	jne    0x41ecc4
  41ec68:	and    BYTE PTR [eax],dl
  41ec6a:	jp     0x41ec27
  41ec6c:	iret   
  41ec6d:	nop
  41ec6e:	jne    0x41ecd6
  41ec70:	fcmovbe st,st(1)
  41ec72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec73:	xchg   esp,eax
  41ec74:	adc    DWORD PTR [ebp-0x16],esp
  41ec77:	ss mov ebx,0x3ef26b9
  41ec7d:	mov    ch,0xb0
  41ec7f:	dec    esp
  41ec80:	pop    ebx
  41ec81:	dec    ecx
  41ec82:	jne    0x41ecff
  41ec84:	push   ds
  41ec85:	dec    eax
  41ec86:	xor    ch,ah
  41ec88:	pop    edi
  41ec89:	(bad)  
  41ec8a:	jle    0x41ecf2
  41ec8c:	mov    edx,0xd30c1154
  41ec91:	sbb    ebx,DWORD PTR [ebx-0x4]
  41ec94:	jae    0x41ed00
  41ec96:	retf   0x5ed3
  41ec99:	gs push ebp
  41ec9b:	bound  edx,QWORD PTR [eax+0x6d]
  41ec9e:	mov    bh,0xd6
  41eca0:	cmp    BYTE PTR [eax-0x382c5172],al
  41eca6:	push   ebp
  41eca7:	std    
  41eca8:	jb     0x41ed15
  41ecaa:	ds inc ebx
  41ecac:	and    eax,0xcf40105a
  41ecb1:	call   0xdd71:0x417b2726
  41ecb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb9:	push   ds
  41ecba:	or     BYTE PTR [esi-0x24],ah
  41ecbd:	retf   
  41ecbe:	test   eax,0x757964f5
  41ecc3:	dec    edi
  41ecc4:	lahf   
  41ecc5:	dec    eax
  41ecc6:	and    eax,0xd1a73d08
  41eccb:	mov    esi,0x3375a638
  41ecd0:	jns    0x41ec53
  41ecd2:	and    cl,dh
  41ecd4:	pop    edx
  41ecd5:	mov    ch,0x75
  41ecd7:	dec    ecx
  41ecd8:	in     eax,dx
  41ecd9:	loop   0x41ec89
  41ecdb:	and    eax,0xfc9757e2
  41ece0:	js     0x41ed4d
  41ece2:	or     BYTE PTR [eax],ch
  41ece4:	rol    DWORD PTR [eax-0x58],cl
  41ece7:	dec    ebp
  41ece8:	out    0x66,al
  41ecea:	xchg   ebx,eax
  41eceb:	cwde   
  41ecec:	add    al,0x15
  41ecee:	jne    0x41ecd8
  41ecf0:	fisub  DWORD PTR [edi]
  41ecf2:	ficomp DWORD PTR [eax]
  41ecf4:	jp     0x41ed0e
  41ecf6:	lods   eax,DWORD PTR ds:[esi]
  41ecf7:	addr16 sar ecx,1
  41ecfa:	jg     0x41ec7c
  41ecfc:	ins    DWORD PTR es:[edi],dx
  41ecfd:	xor    BYTE PTR [ecx+0x75536b5a],dh
  41ed03:	push   ebp
  41ed04:	jns    0x41ed3c
  41ed06:	loop   0x41ed86
  41ed08:	scas   al,BYTE PTR es:[edi]
  41ed09:	ret    
  41ed0a:	retf   
  41ed0b:	push   ax
  41ed0d:	nop
  41ed0e:	pushf  
  41ed0f:	and    edx,ebx
  41ed11:	call   0x44ae:0x3313c31e
  41ed18:	inc    ebp
  41ed19:	gs aaa 
  41ed1b:	inc    esi
  41ed1c:	fs popf 
  41ed1e:	not    BYTE PTR [ebx+0xc]
  41ed21:	adc    BYTE PTR [edi-0x9],ch
  41ed24:	pop    edx
  41ed25:	in     al,0xad
  41ed27:	sbb    DWORD PTR ds:0xe26375b5,ebp
  41ed2d:	scas   al,BYTE PTR es:[edi]
  41ed2e:	stos   BYTE PTR es:[edi],al
  41ed2f:	or     BYTE PTR [eax+0x27],bh
  41ed32:	outs   dx,BYTE PTR ds:[esi]
  41ed33:	popa   
  41ed34:	mov    ecx,0xd0e73933
  41ed39:	add    al,0xf
  41ed3b:	dec    esi
  41ed3c:	add    eax,0xdbb968d5
  41ed41:	cmp    al,0x8a
  41ed43:	es cld 
  41ed45:	mov    esp,0x320766d9
  41ed4a:	xor    al,0x7e
  41ed4c:	sbb    bl,al
  41ed4e:	mov    al,0x20
  41ed50:	mov    dl,0xf
  41ed52:	mov    WORD PTR [esi-0x5a],fs
  41ed55:	mov    edx,0x5ee3ca44
  41ed5a:	sti    
  41ed5b:	data16 js 0x41ed11
  41ed5e:	push   edx
  41ed5f:	mov    edx,fs
  41ed61:	sub    DWORD PTR [edi+0x2],ecx
  41ed64:	stc    
  41ed65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed66:	jmp    0x101a:0x98d334e8
  41ed6d:	xor    al,0x76
  41ed6f:	loopne 0x41ed08
  41ed71:	outs   dx,DWORD PTR ds:[esi]
  41ed72:	bound  edi,QWORD PTR [ecx+0x50]
  41ed75:	mov    bh,ah
  41ed77:	imul   ecx,edx,0x1cf54167
  41ed7d:	mov    eax,ds:0xded3dda5
  41ed82:	test   DWORD PTR gs:[ecx+edi*8],eax
  41ed86:	retf   0xb790
  41ed89:	data16 or al,0x0
  41ed8c:	rol    dl,0x8b
  41ed8f:	aad    0x4b
  41ed91:	cmc    
  41ed92:	jo     0x41ed57
  41ed94:	mov    dl,0x5e
  41ed96:	push   0xd
  41ed98:	test   BYTE PTR [ebx+0x67b96172],bl
  41ed9e:	pushf  
  41ed9f:	jmp    0xaecc:0xd3cc51f0
  41eda6:	push   DWORD PTR [ebp-0x2d]
  41eda9:	pop    eax
  41edaa:	pop    esp
  41edab:	ds cli 
  41edad:	push   esi
  41edae:	mov    esi,0x39536e94
  41edb3:	dec    ebp
  41edb4:	mov    eax,ds:0x45e28451
  41edb9:	dec    edx
  41edba:	sub    BYTE PTR [esi-0x2a],ah
  41edbd:	jle    0x41edf6
  41edbf:	and    DWORD PTR [eax-0x30988930],eax
  41edc5:	xchg   dl,bh
  41edc7:	push   ss
  41edc8:	scas   al,BYTE PTR es:[edi]
  41edc9:	in     ax,dx
  41edcb:	jmp    0xce47:0xf54aa868
  41edd2:	xchg   esp,eax
  41edd3:	ret    0x5ed2
  41edd6:	(bad)  
  41edd7:	push   0x5f
  41edd9:	jmp    0x6637e19b
  41edde:	sub    eax,DWORD PTR [eax-0x6d]
  41ede1:	mov    DWORD PTR [ebx+0x1e],edi
  41ede4:	inc    esp
  41ede5:	mov    esi,0x21866f90
  41edea:	jne    0x41ed8b
  41edec:	mov    bl,0xec
  41edee:	pusha  
  41edef:	sub    bl,cl
  41edf1:	jp     0x41ed7a
  41edf3:	sub    ax,0xffa
  41edf7:	adc    bl,0x99
  41edfa:	ins    BYTE PTR es:[edi],dx
  41edfb:	test   eax,0xce7aa86a
  41ee00:	cli    
  41ee01:	cmp    bh,BYTE PTR ds:0xae3ed3ac
  41ee07:	inc    ecx
  41ee08:	lds    edi,FWORD PTR [edi-0x50]
  41ee0b:	test   al,0xd3
  41ee0d:	loope  0x41ee09
  41ee0f:	pushf  
  41ee10:	xor    cl,BYTE PTR [esi+0x23]
  41ee13:	outs   dx,BYTE PTR ds:[esi]
  41ee14:	mov    ah,0x6d
  41ee16:	cmp    eax,0x31808d7c
  41ee1b:	push   esp
  41ee1c:	js     0x41ee2f
  41ee1e:	mov    al,0x55
  41ee20:	addr16 pop ebx
  41ee22:	jne    0x41edc9
  41ee24:	popf   
  41ee25:	sbb    al,0x4d
  41ee27:	mov    ah,0x93
  41ee29:	shl    DWORD PTR ds:0x8a34d666,cl
  41ee2f:	fisttp DWORD PTR ss:[ebx+eax*4-0x17]
  41ee34:	aas    
  41ee35:	adc    DWORD PTR [ebx+0x72b94763],0xffffff87
  41ee3c:	stos   DWORD PTR es:[edi],eax
  41ee3d:	pop    esi
  41ee3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3f:	sub    DWORD PTR [esi+eax*1+0x4],0x66
  41ee44:	sahf   
  41ee45:	inc    ebp
  41ee46:	and    eax,0xe77df262
  41ee4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4c:	push   eax
  41ee4d:	push   ebp
  41ee4e:	je     0x41ee25
  41ee50:	jne    0x41ee18
  41ee52:	outs   dx,BYTE PTR ds:[esi]
  41ee53:	and    eax,0xc627b699
  41ee58:	jmp    FWORD PTR [ecx+ebx*1]
  41ee5b:	dec    bx
  41ee5d:	lds    ecx,FWORD PTR [ecx-0x6d]
  41ee60:	inc    eax
  41ee61:	fadd   QWORD PTR [ebx+0x51]
  41ee64:	ds jl  0x41eedc
  41ee67:	and    eax,0x2595f94c
  41ee6c:	push   ss
  41ee6d:	pop    esp
  41ee6e:	out    dx,eax
  41ee6f:	mov    dl,0xba
  41ee71:	xor    al,BYTE PTR [ebx+0x23e3ca66]
  41ee77:	pop    ecx
  41ee78:	jecxz  0x41ee4c
  41ee7a:	lea    ebp,[ebx]
  41ee7c:	jb     0x41ee64
  41ee7e:	mov    ecx,0xcf1be64b
  41ee83:	xor    ecx,ebx
  41ee85:	fwait
  41ee86:	cmp    eax,0xf14bffd4
  41ee8b:	leavew 
  41ee8d:	idiv   BYTE PTR [edx]
  41ee8f:	push   0xdcc1e8d3
  41ee94:	lods   eax,DWORD PTR ds:[esi]
  41ee95:	xchg   edx,eax
  41ee96:	jle    0x41eef5
  41ee98:	fild   QWORD PTR [esi]
  41ee9a:	inc    ebp
  41ee9b:	and    eax,0x7f0ae6d3
  41eea0:	cwde   
  41eea1:	imul   ebp,edx,0xffffffb2
  41eea4:	rol    DWORD PTR [eax],cl
  41eea6:	repnz fistp DWORD PTR [ebx]
  41eea9:	or     ebp,ebx
  41eeab:	les    edx,FWORD PTR [edi]
  41eead:	ins    BYTE PTR es:[edi],dx
  41eeae:	xchg   edx,eax
  41eeaf:	push   ebp
  41eeb0:	pop    eax
  41eeb1:	sub    dh,BYTE PTR [eax-0x23a28882]
  41eeb7:	push   es
  41eeb8:	jmp    0x1b67:0x942487b4
  41eebf:	loopne 0x41ef1a
  41eec1:	(bad)  
  41eec2:	xchg   ebp,eax
  41eec3:	cmp    eax,0x6600a033
  41eec8:	ins    BYTE PTR es:[edi],dx
  41eec9:	push   ds
  41eeca:	sar    BYTE PTR [ebx-0x7173b314],0x39
  41eed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eed2:	or     bh,dl
  41eed4:	jo     0x41ee7a
  41eed6:	cmc    
  41eed7:	out    dx,al
  41eed8:	out    0x33,eax
  41eeda:	aas    
  41eedb:	retw   
  41eedd:	inc    esp
  41eede:	call   0x9a2fc23c
  41eee3:	adc    dh,bl
  41eee5:	inc    esi
  41eee6:	outs   dx,BYTE PTR ss:[esi]
  41eee8:	retf   
  41eee9:	data16 cmp dl,BYTE PTR es:[edi+ecx*1-0x2a]
  41eeef:	enter  0x229b,0x73
  41eef3:	xchg   esp,eax
  41eef4:	cmp    DWORD PTR [ebp+0x75],edi
  41eef7:	mov    ds:0xcd07e528,al
  41eefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eefd:	not    BYTE PTR [ebx+0x18da8e66]
  41ef03:	loopne 0x41ef5b
  41ef05:	loop   0x41ef08
  41ef07:	repnz lds esp,FWORD PTR [ebp+esi*2+0x20]
  41ef0c:	mov    al,0x5d
  41ef0e:	outs   dx,DWORD PTR ds:[esi]
  41ef0f:	leave  
  41ef10:	aaa    
  41ef11:	and    eax,0xf5f46680
  41ef16:	arpl   WORD PTR [ecx+eiz*8],di
  41ef19:	pop    edi
  41ef1a:	ins    DWORD PTR es:[edi],dx
  41ef1b:	xchg   edi,eax
  41ef1c:	in     al,0x6b
  41ef1e:	cmp    eax,0x7ea0a76f
  41ef23:	xchg   DWORD PTR [eax+0x327c5ffc],ebp
  41ef29:	sub    DWORD PTR gs:[edx+0x27548545],ecx
  41ef30:	jne    0x41ef79
  41ef32:	sub    esp,eax
  41ef34:	mov    ebx,0x53e8702b
  41ef39:	inc    ecx
  41ef3a:	imul   edx,DWORD PTR [eax+0x16eb6525],0xffffff89
  41ef41:	xor    al,0xd7
  41ef43:	add    ecx,DWORD PTR [ebp+edx*4+0x7]
  41ef47:	into   
  41ef48:	pop    esp
  41ef49:	cmp    esi,DWORD PTR [ebp-0x21]
  41ef4c:	lods   eax,DWORD PTR ds:[esi]
  41ef4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4e:	cmp    BYTE PTR ds:0x6176ce06,ch
  41ef54:	call   0xd42b21e4
  41ef59:	xchg   ebp,eax
  41ef5a:	inc    ebx
  41ef5b:	xchg   esp,eax
  41ef5c:	mov    WORD PTR ds:0x65fc31b3,ds
  41ef62:	retf   
  41ef63:	jp     0x41ef3f
  41ef65:	or     BYTE PTR [eax+0x61],bh
  41ef68:	add    eax,0x1047feb3
  41ef6d:	push   ecx
  41ef6e:	jne    0x41ef31
  41ef70:	push   eax
  41ef71:	out    dx,eax
  41ef72:	pop    edx
  41ef73:	stos   BYTE PTR es:[edi],al
  41ef74:	out    0x42,eax
  41ef76:	lock data16 xchg BYTE PTR [ecx],cl
  41ef7a:	outs   dx,BYTE PTR ds:[esi]
  41ef7b:	nop
  41ef7c:	shr    DWORD PTR [ebx-0x1a81fef9],cl
  41ef82:	add    al,BYTE PTR [edi-0x72c29950]
  41ef88:	mov    ecx,0x1bfacd5f
  41ef8d:	in     eax,dx
  41ef8e:	mov    dh,BYTE PTR [ecx-0x44]
  41ef91:	lods   ax,WORD PTR ds:[esi]
  41ef93:	sar    DWORD PTR [ebp-0x49],cl
  41ef96:	(bad)  
  41ef97:	pusha  
  41ef98:	dec    edx
  41ef99:	lock xlat BYTE PTR ds:[ebx]
  41ef9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9c:	data16 add BYTE PTR [ebx],bl
  41ef9f:	data16 fwait
  41efa1:	repz jl 0x41f014
  41efa4:	inc    ecx
  41efa5:	rcl    BYTE PTR [ebx+eiz*4-0x71],1
  41efa9:	outs   dx,BYTE PTR ds:[esi]
  41efab:	or     DWORD PTR [eax+0x52665532],0x1971416b
  41efb5:	inc    edx
  41efb6:	shr    DWORD PTR [ebx+ebx*4+0x4f],0xf5
  41efbb:	rcl    BYTE PTR es:[edi+0x72],1
  41efbf:	out    0x34,al
  41efc1:	xchg   DWORD PTR [eax+0x73],ebx
  41efc4:	(bad)  
  41efc5:	out    dx,eax
  41efc6:	(bad)  
  41efc8:	loop   0x41efc0
  41efca:	lahf   
  41efcb:	je     0x41f02e
  41efcd:	jl     0x41f01b
  41efcf:	nop
  41efd0:	seto   ch
  41efd3:	cmp    BYTE PTR [ecx+ebx*2+0x22],dh
  41efd7:	out    0xd3,al
  41efd9:	popf   
  41efda:	push   edx
  41efdb:	add    ah,bl
  41efdd:	and    al,BYTE PTR [eax+edi*8-0x2ea89956]
  41efe4:	pushf  
  41efe5:	or     edi,DWORD PTR [edi+0x23]
  41efe8:	inc    ebp
  41efe9:	mov    ah,0x58
  41efeb:	(bad)  
  41efec:	shl    DWORD PTR [ebp+0x561330fc],cl
  41eff2:	jnp    0x41f050
  41eff4:	xchg   BYTE PTR [esi-0x21],ah
  41eff7:	push   ds
  41eff8:	ins    DWORD PTR es:[edi],dx
  41eff9:	jl     0x41ef81
  41effb:	mov    ds,WORD PTR [ebp-0x3]
  41effe:	and    bl,dl
  41f000:	retf   
  41f001:	dec    edi
  41f002:	jo     0x41efdf
  41f004:	push   edx
  41f005:	je     0x41f055
  41f007:	ins    DWORD PTR es:[edi],dx
  41f008:	xor    edi,DWORD PTR [eax]
  41f00a:	sub    esp,esp
  41f00c:	rcr    DWORD PTR [ecx+0x999a2c9],cl
  41f012:	sub    al,0x43
  41f014:	shl    esp,cl
  41f016:	dec    ebp
  41f017:	dec    edx
  41f018:	test   BYTE PTR [esi+0x6f],0xa
  41f01c:	pusha  
  41f01d:	gs inc eax
  41f01f:	packuswb mm1,QWORD PTR [edx]
  41f022:	mov    ecx,0xf614a583
  41f027:	loopne 0x41f08c
  41f029:	xchg   ebp,eax
  41f02a:	test   DWORD PTR [ebx+esi*2+0x6c],eax
  41f02e:	ins    BYTE PTR es:[edi],dx
  41f02f:	xor    BYTE PTR [esp+ebp*8+0x56baebed],ah
  41f036:	fnstenv [esi]
  41f038:	sar    DWORD PTR [ecx],cl
  41f03a:	call   0xb1c9e3f5
  41f03f:	lea    eax,[edx]
  41f041:	jno    0x41f06d
  41f043:	clc    
  41f044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f045:	dec    DWORD PTR [ecx+0x66]
  41f048:	lds    esi,FWORD PTR [edx+0x60f259a6]
  41f04e:	push   esp
  41f04f:	shr    DWORD PTR [esi+0xf835f71],1
  41f055:	in     eax,0xb
  41f057:	xor    ch,BYTE PTR [edx]
  41f059:	pop    edx
  41f05a:	fst    DWORD PTR [ebx+0x2d]
  41f05d:	in     eax,0x62
  41f05f:	fisubr DWORD PTR [eax-0x2c6d2c2c]
  41f065:	jl     0x41f0d9
  41f067:	mov    esi,ecx
  41f069:	in     eax,0xbb
  41f06b:	xor    al,0xdd
  41f06d:	iretw  
  41f06f:	push   ebp
  41f070:	sti    
  41f071:	loopne 0x41f03f
  41f073:	ds jmp 0x5cc04c6f
  41f079:	mov    al,0x76
  41f07b:	lds    ecx,FWORD PTR [edx]
  41f07d:	xchg   ebp,eax
  41f07e:	fidiv  DWORD PTR [edx]
  41f080:	fs pusha 
  41f082:	sbb    dl,0xcc
  41f085:	dec    edx
  41f086:	fdivr  st,st(4)
  41f088:	shl    BYTE PTR [esi+0x4a],cl
  41f08b:	loop   0x41f0b8
  41f08d:	(bad)  
  41f08e:	daa    
  41f08f:	in     al,0x85
  41f091:	or     dh,BYTE PTR [ebp+0x36]
  41f094:	repz imul esi,DWORD PTR [ebp-0x65d72165],0x69
  41f09c:	retf   
  41f09d:	(bad)  
  41f09e:	ss push eax
  41f0a0:	mov    ecx,0x7fc1d79e
  41f0a5:	push   ds
  41f0a6:	push   0x40
  41f0a8:	dec    esp
  41f0a9:	sub    DWORD PTR gs:[edi+0x58e0b68e],0xffffffb4
  41f0b1:	cli    
  41f0b2:	in     al,dx
  41f0b3:	pushw  ss
  41f0b5:	adc    edx,ebp
  41f0b7:	mov    ecx,0xa0f367d3
  41f0bc:	ficom  WORD PTR [eax]
  41f0be:	ror    dl,1
  41f0c0:	and    BYTE PTR [ecx-0xa],0xe6
  41f0c4:	test   eax,0xcb8a9fce
  41f0c9:	push   0x51
  41f0cb:	xchg   esi,eax
  41f0cc:	rol    DWORD PTR [eax+0x52],cl
  41f0cf:	jmp    0x6689:0xdb842b35
  41f0d6:	pushf  
  41f0d7:	xchg   esi,edx
  41f0d9:	jae    0x41f07e
  41f0db:	push   edx
  41f0dc:	repz pop edi
  41f0de:	xor    BYTE PTR [ebx+0x1f61243a],0x6c
  41f0e5:	imul   edi,DWORD PTR ds:0xd4ae9d66,0xe1794a74
  41f0ef:	mov    al,BYTE PTR [esi-0x24997162]
  41f0f5:	cmc    
  41f0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f7:	(bad)  
  41f0f8:	xchg   di,ax
  41f0fa:	je     0x41f0a1
  41f0fc:	shl    DWORD PTR [ebx+0x66b2e98c],0xd5
  41f103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f104:	loop   0x41f178
  41f106:	lds    ebp,FWORD PTR [ecx-0xe]
  41f109:	inc    ebp
  41f10a:	test   al,0x0
  41f10c:	add    bl,BYTE PTR [ebp+0x2b412675]
  41f112:	sub    DWORD PTR [ecx],ecx
  41f114:	cmp    BYTE PTR [edx],bl
  41f116:	mul    BYTE PTR [edi+0x9]
  41f119:	cmp    dl,BYTE PTR [ecx-0x22]
  41f11c:	fnstsw WORD PTR [esi]
  41f11e:	and    ebx,DWORD PTR [esi-0x12]
  41f121:	add    esi,DWORD PTR [ebp+0x5e]
  41f124:	adc    eax,0x11f44733
  41f129:	xor    DWORD PTR [eax],0x13f9566
  41f12f:	in     al,0xd3
  41f131:	adc    eax,0xc3949c03
  41f136:	enter  0x36bb,0x6b
  41f13a:	stos   DWORD PTR es:[edi],eax
  41f13b:	loopne 0x41f180
  41f13d:	bound  edx,QWORD PTR [esi+edi*8]
  41f140:	xor    al,0x39
  41f142:	xor    eax,0x7232d3ce
  41f147:	add    BYTE PTR [ecx-0x7eceb2bd],dh
  41f14d:	imul   sp,WORD PTR [edi+0x7e],0x635e
  41f153:	in     eax,dx
  41f154:	(bad)  
  41f155:	add    BYTE PTR [eax-0x25],dh
  41f158:	in     eax,dx
  41f159:	xor    DWORD PTR [ebp+0x16],0x55
  41f15d:	jg     0x41f170
  41f15f:	fst    DWORD PTR [ebp+ecx*8+0xa416160]
  41f166:	gs sub dl,0x7b
  41f16a:	or     BYTE PTR ds:0x8e5d1482,cl
  41f170:	in     al,dx
  41f171:	pop    ebp
  41f172:	inc    ebp
  41f173:	xchg   esp,eax
  41f174:	xor    DWORD PTR [edx+0x415266b1],0x4e
  41f17b:	fcom   st(3)
  41f17d:	clc    
  41f17e:	mov    ch,0x6a
  41f180:	jnp    0x41f1dd
  41f182:	jecxz  0x41f197
  41f184:	ret    
  41f185:	or     DWORD PTR [esi],esp
  41f187:	mov    eax,ds:0x677ac8c6
  41f18c:	shl    DWORD PTR [eax-0x568944fa],0x2a
  41f193:	(bad)  
  41f194:	rcr    ebp,cl
  41f196:	not    DWORD PTR [eax-0x24]
  41f199:	mov    ecx,0x65eb5791
  41f19e:	mov    bh,0xa5
  41f1a0:	call   0x6661:0x9b70d80c
  41f1a7:	mov    dl,0x55
  41f1a9:	xorps  xmm7,XMMWORD PTR [eax+edx*1+0x41]
  41f1ae:	fwait
  41f1af:	sub    esi,edi
  41f1b1:	and    eax,0xc02e92b
  41f1b6:	inc    edx
  41f1b7:	dec    esp
  41f1b8:	mov    dh,0xe4
  41f1ba:	sub    BYTE PTR [esi-0x15],ah
  41f1bd:	xchg   ebp,eax
  41f1be:	in     al,0xca
  41f1c0:	pop    ss
  41f1c1:	and    al,0x22
  41f1c3:	(bad)  
  41f1c4:	imul   edx,DWORD PTR ss:[edi+0x66],0x33711191
  41f1cc:	sbb    DWORD PTR [esi],esp
  41f1ce:	mov    ecx,0x74f55466
  41f1d3:	push   edx
  41f1d4:	rcl    BYTE PTR [edi+0x4ccda089],1
  41f1da:	cwde   
  41f1db:	jp     0x41f19d
  41f1dd:	push   ss
  41f1de:	add    dl,BYTE PTR [edi-0x26]
  41f1e1:	ins    DWORD PTR es:[edi],dx
  41f1e2:	inc    ebp
  41f1e3:	mov    esi,0xdf0df919
  41f1e8:	mov    cl,0x27
  41f1ea:	les    ecx,FWORD PTR [ecx-0xfa0ad9]
  41f1f0:	cmc    
  41f1f1:	mov    bh,dl
  41f1f3:	or     al,0x13
  41f1f5:	arpl   WORD PTR [eax],ax
  41f1f7:	cs mov ebp,0xd0768d10
  41f1fd:	out    0x1c,eax
  41f1ff:	imul   edx,DWORD PTR [ebp+eiz*2+0x16],0xdeb60bd
  41f207:	jns    0x41f208
  41f209:	bnd jne 0x41f237
  41f20c:	mov    ebx,0x33e0d5ed
  41f211:	xor    BYTE PTR [esi+eiz*2],al
  41f214:	out    0xf,eax
  41f216:	xchg   esp,eax
  41f217:	or     esi,ebp
  41f219:	mov    edx,0x277adaa4
  41f21e:	mov    ecx,0xb08c90a8
  41f223:	jbe    0x41f1f4
  41f225:	or     dl,BYTE PTR cs:[ecx+0x6da55192]
  41f22c:	cld    
  41f22d:	inc    ebx
  41f22e:	retf   
  41f22f:	xchg   DWORD PTR [esi-0x119c8972],edx
  41f235:	iret   
  41f236:	cwde   
  41f237:	dec    esp
  41f238:	sub    bl,ch
  41f23a:	cdq    
  41f23b:	(bad)  
  41f23c:	loope  0x41f1d5
  41f23e:	arpl   WORD PTR [ecx-0xf],sp
  41f241:	cwde   
  41f242:	xor    eax,0x71a2d37e
  41f247:	push   ebp
  41f248:	mov    WORD PTR ds:0x349c78cd,cs
  41f24e:	pop    ds
  41f24f:	ret    
  41f250:	add    BYTE PTR [ebp+0x79],ah
  41f253:	sbb    BYTE PTR [edi-0x18],al
  41f256:	cmp    ebx,esi
  41f258:	rcl    DWORD PTR [esi],cl
  41f25a:	(bad)  
  41f25b:	jo     0x41f272
  41f25d:	inc    eax
  41f25e:	lods   eax,DWORD PTR ds:[esi]
  41f25f:	outs   dx,DWORD PTR ds:[esi]
  41f260:	out    dx,al
  41f261:	ins    BYTE PTR es:[edi],dx
  41f262:	shl    dh,cl
  41f264:	mov    edi,0x84d6795
  41f269:	mov    dh,0x6
  41f26b:	(bad)  
  41f26c:	or     esp,DWORD PTR [ebx+0x7dd339a7]
  41f272:	jns    0x41f2c1
  41f274:	adc    DWORD PTR ds:0x651461a5,ebp
  41f27a:	cmc    
  41f27b:	mov    eax,0x1d16e084
  41f280:	jecxz  0x41f22f
  41f282:	push   ebx
  41f283:	sub    al,0xb6
  41f285:	push   ecx
  41f286:	jne    0x41f236
  41f288:	es loop 0x41f231
  41f28b:	ins    DWORD PTR es:[edi],dx
  41f28c:	or     bh,bl
  41f28e:	pop    ebx
  41f28f:	jbe    0x41f229
  41f291:	ret    0x662b
  41f294:	jp     0x41f27b
  41f296:	jp     0x41f2e2
  41f298:	rol    DWORD PTR [ecx],0xc6
  41f29b:	xchg   ebp,eax
  41f29c:	jae    0x41f2f1
  41f29e:	fidiv  WORD PTR [ebx+0x4e]
  41f2a1:	or     DWORD PTR [edi],edx
  41f2a3:	inc    bp
  41f2a5:	adc    DWORD PTR [ecx],ecx
  41f2a7:	(bad)  
  41f2a8:	in     eax,0xdb
  41f2aa:	jbe    0x41f2c9
  41f2ac:	push   ds
  41f2ad:	test   DWORD PTR [edx+0x70bba143],edi
  41f2b3:	loopne 0x41f28c
  41f2b5:	pop    edx
  41f2b6:	jns    0x41f31f
  41f2b8:	dec    ecx
  41f2b9:	test   al,0x5
  41f2bb:	pop    edx
  41f2bc:	arpl   WORD PTR [ecx+0x5a],si
  41f2bf:	inc    ecx
  41f2c0:	loop   0x41f2ea
  41f2c2:	add    dl,dl
  41f2c4:	jmp    0x41f2cb
  41f2c6:	jg     0x41f2e3
  41f2c8:	addr16 call 0x6165:0xf933c4df
  41f2d0:	das    
  41f2d1:	mov    dl,0x38
  41f2d3:	imul   esp,ebp,0x612f248c
  41f2d9:	(bad)
  41f2dc:	add    ebp,0x3d
  41f2df:	cmp    al,0x55
  41f2e1:	inc    eax
  41f2e2:	lods   al,BYTE PTR ds:[esi]
  41f2e3:	xchg   ecx,eax
  41f2e4:	cmc    
  41f2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2e6:	xchg   ecx,eax
  41f2e7:	adc    DWORD PTR [ecx+0x59072639],esi
  41f2ed:	aas    
  41f2ee:	leave  
  41f2ef:	pop    ecx
  41f2f0:	xchg   ebp,eax
  41f2f1:	and    DWORD PTR [ebp+0x5d],esi
  41f2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f5:	test   eax,0xcee46538
  41f2fa:	cwde   
  41f2fb:	data16 data16 rcl BYTE PTR [eax],0x4f
  41f300:	shl    DWORD PTR [eax+0x14],cl
  41f303:	pop    edi
  41f304:	iret   
  41f305:	aas    
  41f306:	fs retf 0x67c6
  41f30a:	mov    ecx,DWORD PTR [edx-0x1856e295]
  41f310:	push   0xd37b9f45
  41f315:	into   
  41f316:	push   esp
  41f317:	out    0xef,al
  41f319:	idiv   DWORD PTR [ebx+0x71]
  41f31c:	xor    eax,0x126c2d6c
  41f321:	nop
  41f322:	stos   BYTE PTR es:[edi],al
  41f323:	dec    ebp
  41f324:	sbb    eax,0xe5e17237
  41f329:	bound  esp,QWORD PTR [ebx-0x37]
  41f32c:	out    0x45,eax
  41f32e:	sahf   
  41f32f:	std    
  41f330:	in     eax,0xf9
  41f332:	out    dx,al
  41f333:	adc    eax,esp
  41f335:	mov    WORD PTR [edx-0x5851e299],ss
  41f33b:	out    dx,al
  41f33c:	inc    ebp
  41f33d:	mov    eax,ds:0x72d32bce
  41f342:	adc    DWORD PTR [edx-0x5be2e22f],ebx
  41f348:	mov    BYTE PTR [ebx+0x13],bl
  41f34b:	mov    ecx,0x3b5f668b
  41f350:	inc    esp
  41f351:	push   edx
  41f352:	aad    0xd8
  41f354:	rcl    ebx,cl
  41f356:	bound  ebp,QWORD PTR [ecx]
  41f358:	sbb    ebp,DWORD PTR [esi+edx*4+0x61]
  41f35c:	pop    edx
  41f35d:	pusha  
  41f35e:	pop    ebp
  41f35f:	in     eax,dx
  41f360:	sub    dl,dl
  41f362:	or     ebx,DWORD PTR [edi-0x75]
  41f365:	inc    edx
  41f366:	pop    esi
  41f367:	mov    ecx,0xc1b46fe5
  41f36c:	leave  
  41f36d:	xchg   ebp,eax
  41f36e:	push   es
  41f36f:	sub    edi,DWORD PTR [ebx-0x25af6c9a]
  41f375:	call   0x661a:0x5d67a431
  41f37c:	loop   0x41f37f
  41f37e:	adc    ch,ch
  41f380:	sar    BYTE PTR [esi],1
  41f382:	call   DWORD PTR [ebp-0x1880adbe]
  41f388:	(bad)  
  41f389:	pushw  cs
  41f38b:	mov    ebp,0x85e5fb47
  41f390:	jno    0x41f3d0
  41f392:	test   BYTE PTR [esi],0xc6
  41f395:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f397:	and    BYTE PTR ss:[eax+0x256aa275],ah
  41f39e:	pop    edi
  41f39f:	xchg   al,dh
  41f3a1:	or     dl,dl
  41f3a3:	in     ax,0xcd
  41f3a6:	lock adc dl,bl
  41f3a9:	scas   eax,DWORD PTR es:[edi]
  41f3aa:	test   eax,0xe4cb39d4
  41f3af:	(bad)  
  41f3b0:	fcomp  DWORD PTR [ebx-0x6]
  41f3b3:	dec    ebp
  41f3b4:	out    0xe5,eax
  41f3b6:	or     DWORD PTR [esi-0x58],edi
  41f3b9:	mov    cl,0xdb
  41f3bb:	jbe    0x41f390
  41f3bd:	and    DWORD PTR [esi-0x295d6a4e],ebp
  41f3c3:	sub    eax,0x83a26516
  41f3c8:	jo     0x41f37d
  41f3ca:	icebp  
  41f3cb:	ret    
  41f3cc:	mov    ds:0xa919bd17,eax
  41f3d1:	cmp    eax,0x65bd1775
  41f3d6:	sbb    bl,ah
  41f3d8:	bound  ebx,QWORD PTR [edi-0x74089a4d]
  41f3de:	cmp    eax,0x3573ce81
  41f3e3:	mov    DWORD PTR [ebp+0x39],ecx
  41f3e6:	jne    0x41f3bf
  41f3e8:	test   al,0x8a
  41f3ea:	mov    eax,0xc55e342b
  41f3ef:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f1:	mov    eax,ds:0x4d3d052
  41f3f6:	mov    esi,0xafce0821
  41f3fb:	loop   0x41f3aa
  41f3fd:	popa   
  41f3fe:	or     eax,edi
  41f400:	mov    ebp,0x63ed3050
  41f405:	outs   dx,BYTE PTR ds:[esi]
  41f406:	adc    bh,BYTE PTR [edx+0x848f6d3]
  41f40c:	frstor [eax-0x22]
  41f40f:	loop   0x41f45e
  41f411:	gs jmp 0x41f44f
  41f414:	sbb    dl,bh
  41f416:	jl     0x41f3f8
  41f418:	jne    0x41f493
  41f41a:	ds out dx,eax
  41f41c:	sbb    eax,0x12487586
  41f421:	xor    al,0x6e
  41f423:	inc    ebx
  41f424:	int3   
  41f425:	sbb    eax,0xe0cf66ac
  41f42a:	cmp    DWORD PTR [ebp-0x2d],esi
  41f42d:	add    ch,BYTE PTR [ebx-0x4f]
  41f430:	ds inc esi
  41f432:	ss or  al,0xe8
  41f435:	gs pop esp
  41f437:	jecxz  0x41f3cb
  41f439:	xchg   ebx,eax
  41f43a:	in     eax,dx
  41f43b:	(bad)  [edx+0x6c]
  41f43e:	push   edx
  41f43f:	cmp    eax,0xcbb9eb5a
  41f444:	popf   
  41f445:	push   es
  41f446:	je     0x41f4be
  41f448:	out    0xb1,eax
  41f44a:	mov    eax,ds:0xb0c598cf
  41f44f:	imul   eax,DWORD PTR [ebx-0x1b],0x4b4c65f3
  41f456:	ins    BYTE PTR es:[edi],dx
  41f457:	push   ecx
  41f458:	add    BYTE PTR [ebp+esi*2+0x5f],ah
  41f45c:	test   eax,0xe0a7a595
  41f461:	add    DWORD PTR [eax],ebx
  41f463:	data16 jle 0x41f489
  41f466:	sbb    bh,BYTE PTR [esi+0x5b]
  41f469:	out    dx,eax
  41f46a:	sbb    al,0xaa
  41f46c:	rcr    DWORD PTR [ebx],cl
  41f46e:	jge    0x41f424
  41f470:	xor    edi,ecx
  41f472:	mov    eax,DWORD PTR ds:0x69da6618
  41f478:	push   edx
  41f479:	int    0x42
  41f47b:	les    eax,FWORD PTR [ebx]
  41f47d:	test   DWORD PTR [edx-0x25],ecx
  41f480:	out    dx,al
  41f481:	call   FWORD PTR [edi+0xb2dfb82]
  41f487:	sub    eax,0x26ed3143
  41f48c:	mov    dh,0x66
  41f48e:	xor    al,0x74
  41f490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f491:	adc    cl,BYTE PTR [edx]
  41f493:	mov    ebp,0xab3dff5b
  41f498:	mov    cl,0xbb
  41f49a:	jne    0x41f473
  41f49c:	jge    0x41f44a
  41f49e:	cmc    
  41f49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a0:	and    eax,DWORD PTR [ebx-0x4a]
  41f4a3:	data16 aad 0xe3
  41f4a6:	int3   
  41f4a7:	inc    edi
  41f4a8:	shl    DWORD PTR [ebx],cl
  41f4aa:	adc    eax,0x9b4b43d8
  41f4af:	and    eax,0x7cc16683
  41f4b4:	mov    bh,0x45
  41f4b6:	inc    ebp
  41f4b7:	push   edi
  41f4b8:	xchg   BYTE PTR [ebp-0x6f20d8f8],dh
  41f4be:	sbb    eax,0x779cdd28
  41f4c3:	rcl    esp,cl
  41f4c5:	mov    eax,ds:0xc8635b02
  41f4ca:	fwait
  41f4cb:	sbb    DWORD PTR [edi+0x65],esi
  41f4ce:	sbb    dl,dl
  41f4d0:	mov    esi,0x5adc33cd
  41f4d5:	mov    dh,0x6a
  41f4d7:	dec    eax
  41f4d8:	test   BYTE PTR [ebp-0x8b8ba9a],0x75
  41f4df:	push   0x37a6579
  41f4e4:	ins    DWORD PTR es:[edi],dx
  41f4e5:	lea    esi,[edi-0x3f]
  41f4e8:	adc    dl,BYTE PTR ds:0x89309784
  41f4ee:	jne    0x41f4f6
  41f4f0:	shl    BYTE PTR [edx],0x56
  41f4f3:	das    
  41f4f4:	sbb    al,0x74
  41f4f6:	jge    0x41f55e
  41f4f8:	mov    cl,0xc9
  41f4fa:	out    dx,eax
  41f4fb:	call   0x2aef:0xf3536d3
  41f502:	int    0xf5
  41f504:	sub    BYTE PTR [ecx+eiz*8+0x0],dl
  41f508:	cmp    BYTE PTR [ebp-0x59],al
  41f50b:	ret    
  41f50c:	dec    DWORD PTR [ebp+edx*4-0x75722c26]
  41f513:	jecxz  0x41f4d1
  41f515:	jb     0x41f56d
  41f517:	adc    al,0x78
  41f519:	gs call 0x4d47:0x4a9cacc9
  41f521:	jnp    0x41f4ce
  41f523:	sar    DWORD PTR [ebx+0x4ba1754d],cl
  41f529:	retf   0xdec2
  41f52c:	sbb    edx,DWORD PTR [ebp+eax*4+0x3e]
  41f530:	les    eax,FWORD PTR [esi+0x2f778422]
  41f536:	aad    0xc4
  41f538:	out    dx,al
  41f539:	sub    DWORD PTR [esi+ecx*2-0x5cede52f],edi
  41f540:	ror    BYTE PTR [eax+esi*2],1
  41f543:	sbb    ebp,ecx
  41f545:	sbb    DWORD PTR [ecx],edx
  41f547:	mov    edi,0xfc936547
  41f54c:	je     0x41f5a9
  41f54e:	imul   edx,DWORD PTR [ebp-0x2d],0xffffff94
  41f552:	dec    edi
  41f553:	mov    bh,BYTE PTR [edx]
  41f555:	xlat   BYTE PTR ds:[ebx]
  41f556:	pop    edx
  41f557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f558:	push   esp
  41f559:	lods   al,BYTE PTR gs:[esi]
  41f55b:	xlat   BYTE PTR ds:[ebx]
  41f55c:	ins    DWORD PTR es:[edi],dx
  41f55d:	or     al,0x98
  41f55f:	iret   
  41f560:	sub    al,0x9c
  41f562:	dec    ebx
  41f563:	out    dx,al
  41f564:	inc    esi
  41f565:	fnsave gs:[edi]
  41f568:	dec    ecx
  41f569:	stos   BYTE PTR es:[edi],al
  41f56a:	stc    
  41f56b:	pushf  
  41f56c:	ret    0xf266
  41f56f:	dec    ebp
  41f570:	sub    ebx,esi
  41f572:	ins    BYTE PTR es:[edi],dx
  41f573:	int3   
  41f574:	mov    ebx,0x7cc0bfcc
  41f579:	dec    ebp
  41f57a:	jne    0x41f5b1
  41f57c:	inc    ebp
  41f57d:	add    bh,al
  41f57f:	out    0x84,eax
  41f581:	add    eax,0x3640692c
  41f586:	mov    ecx,0xf57523e9
  41f58b:	push   edx
  41f58c:	shr    DWORD PTR [edx],cl
  41f58e:	das    
  41f58f:	jbe    0x41f534
  41f591:	sti    
  41f592:	jge    0x41f563
  41f594:	dec    edi
  41f595:	gs pop edi
  41f597:	je     0x41f5c3
  41f599:	lea    ebx,[edi]
  41f59b:	aad    0x2
  41f59d:	adc    al,0xeb
  41f59f:	idiv   BYTE PTR [eax-0x63]
  41f5a2:	jne    0x41f566
  41f5a4:	dec    edx
  41f5a5:	sbb    ebp,DWORD PTR [ebx]
  41f5a7:	xor    eax,0x81d6c6d7
  41f5ac:	scas   eax,DWORD PTR es:[edi]
  41f5ad:	fs inc eax
  41f5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b0:	xor    ch,BYTE PTR [ecx-0x43eb4373]
  41f5b6:	jne    0x41f5cb
  41f5b8:	xchg   BYTE PTR [esi+0x2a696d47],ch
  41f5be:	bound  esp,QWORD PTR [esi-0x36]
  41f5c1:	sbb    al,0xf
  41f5c3:	and    al,0x69
  41f5c5:	pushf  
  41f5c6:	ds jb  0x41f5e7
  41f5c9:	fsubr  QWORD PTR [edx-0x47]
  41f5cc:	clc    
  41f5cd:	and    edx,esp
  41f5cf:	data16 sahf 
  41f5d1:	push   WORD PTR [ecx]
  41f5d4:	dec    edx
  41f5d5:	int    0x1e
  41f5d7:	mov    ds:0xf044fd8d,eax
  41f5dc:	rcl    BYTE PTR [eax+esi*2+0x1050aa64],0x54
  41f5e4:	inc    edi
  41f5e5:	mov    bh,0x35
  41f5e7:	rcr    ebx,1
  41f5e9:	mov    eax,ds:0xbe5668a
  41f5ee:	pop    esp
  41f5ef:	add    al,0xee
  41f5f1:	adc    eax,0x7dffb49c
  41f5f6:	(bad)  
  41f5f7:	dec    ebp
  41f5f8:	or     al,0xb4
  41f5fa:	es out 0x75,eax
  41f5fd:	gs pop ebp
  41f5ff:	arpl   WORD PTR [edi+0x77],si
  41f602:	adc    eax,0xdfa4cf9d
  41f607:	mov    edx,0xfa8d7756
  41f60c:	add    al,0xe8
  41f60e:	jne    0x41f5e4
  41f610:	(bad)  
  41f611:	in     al,0xff
  41f613:	mov    al,ds:0x66fc59bc
  41f618:	xchg   edx,eax
  41f619:	std    
  41f61a:	pop    ss
  41f61b:	pop    ebx
  41f61c:	aad    0xac
  41f61e:	(bad)  
  41f61f:	xor    DWORD PTR [edi+0x4a7174cd],edi
  41f625:	fs pop edx
  41f627:	fldln2 
  41f629:	dec    eax
  41f62a:	cmc    
  41f62b:	hlt    
  41f62c:	enter  0x9328,0x70
  41f630:	add    eax,0xd3273d87
  41f635:	mov    bl,0x1
  41f637:	call   0x351e:0x8bd141fe
  41f63e:	hlt    
  41f63f:	data16 mov dl,0x5f
  41f642:	imul   esp,DWORD PTR [edi],0xffffffd3
  41f645:	in     al,0x29
  41f647:	lods   eax,DWORD PTR ds:[esi]
  41f648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f649:	std    
  41f64a:	dec    ecx
  41f64b:	repz in al,dx
  41f64d:	cmp    DWORD PTR [ebx],esi
  41f64f:	inc    eax
  41f650:	sar    DWORD PTR [esi-0x109dd26a],cl
  41f656:	pop    edi
  41f657:	xchg   edx,eax
  41f658:	shr    edx,cl
  41f65a:	adc    BYTE PTR [ebp-0x27c96c89],0x32
  41f661:	mov    DWORD PTR [edi+0x36],esi
  41f664:	adc    bl,BYTE PTR [edi]
  41f666:	add    ah,BYTE PTR [esi-0x7a]
  41f669:	mov    esi,DWORD PTR [edi]
  41f66b:	jp     0x41f640
  41f66d:	sub    cl,cl
  41f66f:	jne    0x41f66b
  41f671:	jb     0x41f6ef
  41f673:	xor    DWORD PTR [edi],eax
  41f675:	jno    0x41f66a
  41f677:	ds aam 0xa6
  41f67a:	sub    esp,DWORD PTR [ebp+0x68]
  41f67d:	repnz sub eax,0x3d0c864f
  41f683:	add    ebx,edx
  41f685:	div    BYTE PTR [ebp+0x69]
  41f688:	(bad)  
  41f689:	pop    ds
  41f68a:	cs ret 0xca15
  41f68e:	cmp    al,0x66
  41f690:	mov    dh,0xc8
  41f692:	adc    cl,BYTE PTR [edi-0x2d]
  41f695:	mov    ebx,0x1cb48bec
  41f69a:	gs hlt 
  41f69c:	jge    0x41f703
  41f69e:	js     0x41f62c
  41f6a0:	dec    ebp
  41f6a1:	repnz loopne 0x41f717
  41f6a4:	adc    al,0x46
  41f6a6:	add    DWORD PTR [edx+0x52755513],eax
  41f6ac:	mov    al,ds:0x31af2751
  41f6b1:	ds push eax
  41f6b3:	mov    ds:0xfcf5338d,eax
  41f6b8:	mov    dh,0x2b
  41f6ba:	mov    ch,ch
  41f6bc:	jl     0x41f676
  41f6be:	jne    0x41f659
  41f6c0:	cmp    ebp,ebx
  41f6c2:	fcmovne st,st(1)
  41f6c4:	push   0x866a567
  41f6c9:	fsub   DWORD PTR [edi]
  41f6cb:	outs   dx,BYTE PTR ds:[esi]
  41f6cc:	rol    DWORD PTR ds:0xc1d075aa,cl
  41f6d2:	sbb    DWORD PTR ds:0xc30b66e8,esi
  41f6d8:	mov    ds:0x70b3cbeb,eax
  41f6dd:	mov    esi,esi
  41f6df:	jbe    0x41f6b4
  41f6e1:	(bad)  
  41f6e2:	xor    eax,0x5b316f20
  41f6e7:	xchg   ebp,eax
  41f6e8:	out    0x65,eax
  41f6ea:	iret   
  41f6eb:	dec    BYTE PTR [edx]
  41f6ed:	out    dx,al
  41f6ee:	aaa    
  41f6ef:	std    
  41f6f0:	aaa    
  41f6f1:	fdivr  QWORD PTR [eax+0x7562f18d]
  41f6f7:	retf   
  41f6f8:	cmp    BYTE PTR [ecx-0x7b],bh
  41f6fb:	jmp    0xcf1d:0x36e0656b
  41f702:	add    al,0xc5
  41f704:	dec    ecx
  41f705:	shl    BYTE PTR [ecx+eax*4-0x35],1
  41f709:	dec    ecx
  41f70a:	jne    0x41f6d7
  41f70c:	mov    dh,0x61
  41f70e:	pop    ds
  41f70f:	cmp    ebx,DWORD PTR [esp+eax*1+0x5e39669b]
  41f716:	les    edi,FWORD PTR [eax+0x26dd16f5]
  41f71c:	push   ebx
  41f71d:	fisttp QWORD PTR [ebx+0x4b]
  41f720:	pop    es
  41f721:	push   ecx
  41f722:	outs   dx,DWORD PTR ds:[esi]
  41f723:	jns    0x41f7a2
  41f725:	inc    ebx
  41f726:	pop    es
  41f727:	dec    sp
  41f729:	xchg   ebp,eax
  41f72a:	arpl   WORD PTR [edx],di
  41f72c:	in     eax,dx
  41f72d:	sbb    al,BYTE PTR [edi+eiz*1]
  41f730:	ffreep st(2)
  41f732:	push   ecx
  41f733:	stos   BYTE PTR es:[edi],al
  41f734:	sub    DWORD PTR [edi+0x44b8381],eax
  41f73a:	cmp    DWORD PTR [esi],esp
  41f73c:	inc    ebp
  41f73d:	sbb    DWORD PTR [eax+0x75141524],ecx
  41f743:	or     al,0xcf
  41f745:	mov    eax,ds:0xe69af2f9
  41f74a:	xchg   esp,eax
  41f74b:	data16 sub al,0xaf
  41f74e:	rcr    BYTE PTR [esi],cl
  41f750:	out    dx,eax
  41f751:	fdivp  st(5),st
  41f753:	fwait
  41f754:	and    eax,0xee61fe71
  41f759:	out    0xf5,al
  41f75b:	sub    BYTE PTR [ebx+0x58],ch
  41f75e:	mov    ebp,0x99ff0466
  41f763:	mov    dl,0xd3
  41f765:	sbb    al,0x8d
  41f767:	xor    DWORD PTR [ebx+0x57c5b9f0],ecx
  41f76d:	gs inc ebp
  41f76f:	push   ebp
  41f770:	mov    eax,0xd69f1d21
  41f775:	aad    0x8e
  41f777:	add    cl,BYTE PTR [edi-0x3e]
  41f77a:	jne    0x41f77c
  41f77c:	mov    bl,BYTE PTR [edx+0x400631de]
  41f782:	mov    BYTE PTR [ebx-0x7d],ch
  41f785:	out    0xb4,al
  41f787:	in     eax,dx
  41f788:	(bad)  
  41f78a:	stos   BYTE PTR es:[edi],al
  41f78b:	and    eax,ebx
  41f78d:	out    dx,al
  41f78e:	jne    0x41f723
  41f790:	and    DWORD PTR [edi],eax
  41f792:	cmp    al,0x4c
  41f794:	push   ss
  41f795:	mov    ah,0x44
  41f797:	shl    BYTE PTR [edx+0xf],cl
  41f79a:	mov    esp,0x22ea735f
  41f79f:	fisubr DWORD PTR ds:0xe27d8cfa
  41f7a5:	mov    esi,DWORD PTR [edx-0x2e]
  41f7a8:	out    dx,al
  41f7a9:	iret   
  41f7aa:	xor    al,0x62
  41f7ac:	ss mov esi,0x47eeee5d
  41f7b2:	loope  0x41f81a
  41f7b4:	cmp    edi,DWORD PTR [ebp-0x682c752c]
  41f7ba:	sbb    al,0xe4
  41f7bc:	aam    0xbc
  41f7be:	pop    edx
  41f7bf:	imul   edi,DWORD PTR [ecx],0x3df6b466
  41f7c5:	mov    ecx,DWORD PTR [ebp-0x17ba09b1]
  41f7cb:	loopne 0x41f7a0
  41f7cd:	mov    cl,0x55
  41f7cf:	mov    bh,0x58
  41f7d1:	pop    esi
  41f7d2:	(bad)  
  41f7d4:	inc    esp
  41f7d5:	gs mov edx,0xb5e51f19
  41f7db:	ja     0x41f75f
  41f7dd:	pop    esp
  41f7de:	xchg   bl,bh
  41f7e0:	xor    DWORD PTR [edx+0x6b],0xffffff89
  41f7e4:	retf   
  41f7e5:	jge    0x41f7e3
  41f7e7:	gs mov bl,0x89
  41f7ea:	sbb    edx,DWORD PTR [esi+0x55]
  41f7ed:	xchg   ebx,eax
  41f7ee:	popf   
  41f7ef:	data16 sub al,0x76
  41f7f2:	push   cs
  41f7f3:	and    esi,edi
  41f7f5:	popf   
  41f7f6:	add    ah,ah
  41f7f8:	xchg   ebx,eax
  41f7f9:	sbb    al,0x89
  41f7fb:	cmp    ch,dh
  41f7fd:	mov    cs,ebx
  41f7ff:	inc    esp
  41f800:	lods   eax,DWORD PTR ds:[esi]
  41f801:	xor    ebp,DWORD PTR [eax+0x64]
  41f804:	leave  
  41f805:	xor    al,0xbb
  41f807:	shl    BYTE PTR [edi+0x67],1
  41f80a:	jge    0x41f79b
  41f80c:	sar    edi,cl
  41f80e:	std    
  41f80f:	jb     0x41f835
  41f811:	mov    al,0x96
  41f813:	sbb    ebx,DWORD PTR [esi]
  41f815:	gs and al,0xae
  41f818:	sbb    ebx,ebp
  41f81a:	xor    BYTE PTR [ecx+0x43],cl
  41f81d:	sub    BYTE PTR [ebx],cl
  41f81f:	and    dl,BYTE PTR [ecx-0x1a556ca2]
  41f825:	enter  0x9175,0x74
  41f829:	gs jns 0x41f828
  41f82c:	test   BYTE PTR [ecx+ebp*1+0x11ab05d4],cl
  41f833:	ins    BYTE PTR es:[edi],dx
  41f834:	out    dx,al
  41f835:	(bad)  
  41f836:	jge    0x41f7db
  41f838:	aaa    
  41f839:	xchg   edx,eax
  41f83a:	test   al,0x47
  41f83c:	xchg   ebx,eax
  41f83d:	fdivr  st,st(0)
  41f83f:	or     cl,BYTE PTR [ecx+0x65]
  41f842:	jecxz  0x41f8ae
  41f844:	lds    esi,FWORD PTR [ecx-0x2b]
  41f847:	dec    BYTE PTR [esi-0x7c0475d3]
  41f84d:	sbb    dh,BYTE PTR [ebp+0x23]
  41f850:	gs or  eax,0x44925eda
  41f856:	xchg   edi,eax
  41f857:	push   DWORD PTR [edx-0x5b]
  41f85a:	jle    0x41f853
  41f85c:	mov    ch,0xfb
  41f85e:	cmc    
  41f85f:	xchg   ecx,eax
  41f860:	shr    DWORD PTR [ebx],cl
  41f862:	sub    eax,DWORD PTR [edx+0x66]
  41f865:	sub    al,0x83
  41f867:	bound  esp,QWORD PTR [ebx+0x478e6866]
  41f86d:	mov    ds:0x89532612,eax
  41f872:	mov    dh,0x94
  41f874:	loop   0x41f8d1
  41f876:	popa   
  41f877:	ja     0x41f83b
  41f879:	fstp   TBYTE PTR [ecx]
  41f87b:	data16 mov bh,0x69
  41f87e:	xchg   esi,eax
  41f87f:	lahf   
  41f880:	and    ch,BYTE PTR [eax]
  41f882:	daa    
  41f883:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41f885:	or     DWORD PTR [ebp-0x2c],ebx
  41f888:	jmp    0x74a5:0x9905081c
  41f88f:	(bad)  
  41f890:	(bad)  
  41f891:	pop    edi
  41f892:	test   DWORD PTR [edx-0x6f83e421],eax
  41f898:	nop
  41f899:	fadd   QWORD PTR ds:0xa68911aa
  41f89f:	mov    eax,0x1ff325d3
  41f8a4:	in     al,0x9f
  41f8a6:	mov    DWORD PTR [eax],ebp
  41f8a8:	or     DWORD PTR [edi+eiz*8+0x24],ebp
  41f8ac:	icebp  
  41f8ad:	mov    bl,0xc
  41f8af:	lahf   
  41f8b0:	mov    dl,0xa1
  41f8b2:	and    edx,DWORD PTR [esi]
  41f8b4:	out    dx,al
  41f8b5:	push   es
  41f8b6:	std    
  41f8b7:	jae    0x41f905
  41f8b9:	loop   0x41f908
  41f8bb:	(bad)  
  41f8bd:	or     eax,0xe59726b2
  41f8c2:	sub    al,0x8e
  41f8c4:	cmc    
  41f8c5:	adc    BYTE PTR [esi],dh
  41f8c7:	dec    di
  41f8c9:	rol    BYTE PTR [ebx+ebp*4],0xd3
  41f8cd:	nop
  41f8ce:	push   edi
  41f8cf:	jmp    0x6517:0xaf86c42e
  41f8d6:	jl     0x41f86c
  41f8d8:	jno    0x41f8d8
  41f8da:	bound  ebx,QWORD PTR fs:[eax-0x137f6149]
  41f8e1:	cmp    dh,BYTE PTR [ebp+0x56]
  41f8e4:	aas    
  41f8e5:	js     0x41f868
  41f8e7:	nop
  41f8e8:	or     esp,edi
  41f8ea:	push   0x68
  41f8ec:	sahf   
  41f8ed:	fs push cs
  41f8ef:	loop   0x41f940
  41f8f1:	out    dx,eax
  41f8f2:	xor    eax,0x7a12fce8
  41f8f7:	push   0xffffffd3
  41f8f9:	adc    DWORD PTR [ecx+ebp*4-0x3ad1590c],esp
  41f900:	or     dh,dl
  41f902:	push   esi
  41f903:	ins    DWORD PTR es:[edi],dx
  41f904:	push   ebx
  41f905:	mov    ds:0xb129375c,eax
  41f90a:	mov    al,0x9f
  41f90c:	jl     0x41f917
  41f90e:	cdq    
  41f90f:	add    BYTE PTR [ecx-0xc],al
  41f912:	jne    0x41f8f0
  41f914:	add    al,0x8f
  41f916:	(bad)  
  41f917:	add    ah,BYTE PTR [eax]
  41f919:	mov    al,0xe4
  41f91b:	mov    esp,0xa91aabff
  41f920:	xchg   BYTE PTR [edi+0x4a],ah
  41f923:	les    ebp,FWORD PTR [ebp-0x2cf58a3c]
  41f929:	and    edx,ebx
  41f92b:	xor    edx,DWORD PTR [edi+0x62976414]
  41f931:	outs   dx,BYTE PTR ds:[esi]
  41f932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f933:	ret    0xf1f2
  41f936:	mov    al,ds:0xf56f743a
  41f93b:	pop    ds
  41f93c:	rol    DWORD PTR ds:0xfd424c84,cl
  41f942:	jp     0x41f8e8
  41f944:	scas   eax,DWORD PTR es:[edi]
  41f945:	cmp    ax,WORD PTR [ecx]
  41f948:	test   eax,0x9bacd2ae
  41f94d:	push   0xffffffa3
  41f94f:	adc    BYTE PTR [esi],bh
  41f951:	shl    DWORD PTR [ebp+0xb],1
  41f954:	into   
  41f955:	mov    ebp,0xe7bc69f3
  41f95a:	into   
  41f95b:	pop    dx
  41f95d:	mov    ?,WORD PTR es:[ebp-0x26c2722d]
  41f964:	cmp    edx,DWORD PTR [eax+eiz*8-0x569a0198]
  41f96b:	pop    esp
  41f96c:	sahf   
  41f96d:	je     0x41f909
  41f96f:	or     DWORD PTR [edx-0x64],0x33
  41f973:	cwde   
  41f974:	test   eax,0x56c275ef
  41f979:	iret   
  41f97a:	jnp    0x41f98a
  41f97c:	add    al,0xd9
  41f97e:	hlt    
  41f97f:	addr16 inc esp
  41f981:	xor    eax,0x56ffeee5
  41f986:	cs pop esi
  41f988:	jae    0x41f9f9
  41f98a:	jne    0x41f95d
  41f98c:	mov    esi,0x2abb9a9c
  41f991:	test   DWORD PTR [esi+eiz*2+0x9],eax
  41f995:	aas    
  41f996:	dec    edx
  41f997:	test   dh,dh
  41f999:	cmp    eax,0xe1ee6fb3
  41f99e:	lahf   
  41f99f:	xor    DWORD PTR [eax],0xffffffc5
  41f9a2:	and    DWORD PTR [ecx],ebp
  41f9a4:	shl    BYTE PTR [ebp+0x28],1
  41f9a7:	xor    dh,BYTE PTR [esi+0x1ae96a50]
  41f9ad:	fidiv  DWORD PTR [ecx]
  41f9af:	xor    ecx,edi
  41f9b1:	jo     0x41fa1e
  41f9b3:	add    BYTE PTR [ecx-0x24],ah
  41f9b6:	retf   0x8ee6
  41f9b9:	popaw  
  41f9bb:	inc    ebx
  41f9bc:	dec    esi
  41f9bd:	lds    esp,FWORD PTR [edx-0x50]
  41f9c0:	and    eax,DWORD PTR ss:[edi+0x5393d3de]
  41f9c7:	sbb    al,0xc9
  41f9c9:	sub    ebp,DWORD PTR [ecx]
  41f9cb:	adc    esi,ecx
  41f9cd:	gs iret 
  41f9cf:	xor    BYTE PTR [edx+0x40ff5893],bh
  41f9d5:	push   0xa
  41f9d7:	daa    
  41f9d8:	or     esi,esp
  41f9da:	jne    0x41f9fb
  41f9dc:	call   0x32b0:0x9d7adff9
  41f9e3:	mov    ebp,0x7d754ede
  41f9e8:	pop    ss
  41f9e9:	and    BYTE PTR [esi+0x57],bh
  41f9ec:	nop
  41f9ed:	jae    0x41fa64
  41f9ef:	jecxz  0x41fa38
  41f9f1:	out    0xa9,eax
  41f9f3:	(bad)  
  41f9f4:	mov    ds:0x7591bd0b,eax
  41f9f9:	in     eax,0x79
  41f9fb:	lods   al,BYTE PTR ds:[esi]
  41f9fc:	sbb    BYTE PTR [eax-0x64],al
  41f9ff:	scas   al,BYTE PTR es:[edi]
  41fa00:	div    DWORD PTR [esi+edi*2+0x36]
  41fa04:	adc    eax,DWORD PTR [esi]
  41fa06:	js     0x41f9ef
  41fa08:	inc    ebx
  41fa09:	xchg   DWORD PTR [edx-0x30d34ba6],esi
  41fa0f:	xchg   ecx,eax
  41fa10:	jo     0x41fa66
  41fa12:	sub    ebp,edi
  41fa14:	outs   dx,BYTE PTR ds:[esi]
  41fa15:	jne    0x41f9a2
  41fa17:	push   cs
  41fa18:	sar    DWORD PTR [ebx+eax*1+0x1914ba2c],cl
  41fa1f:	mov    dh,0x92
  41fa21:	ins    DWORD PTR es:[edi],dx
  41fa22:	push   esi
  41fa23:	pop    esi
  41fa24:	imul   eax,DWORD PTR [eax+eax*8-0x3d29fe77],0xffffffc7
  41fa2c:	daa    
  41fa2d:	out    dx,al
  41fa2e:	push   0x75264849
  41fa33:	dec    esi
  41fa34:	mov    ah,0x19
  41fa36:	mov    bh,0xbd
  41fa38:	enter  0x3faf,0x66
  41fa3c:	xlat   BYTE PTR ds:[ebx]
  41fa3d:	inc    ebp
  41fa3e:	xchg   ebx,eax
  41fa3f:	pop    ecx
  41fa40:	jmp    0x1f7f:0x7a5bd0a3
  41fa47:	and    al,0xdf
  41fa49:	shl    DWORD PTR [esi],0xae
  41fa4c:	cwde   
  41fa4d:	in     al,dx
  41fa4e:	jae    0x41fac1
  41fa50:	push   ebp
  41fa51:	call   0x332:0x7f8b6726
  41fa58:	pop    esi
  41fa59:	mov    bh,0xd5
  41fa5b:	es pop eax
  41fa5d:	popf   
  41fa5e:	jne    0x41f9e3
  41fa60:	enter  0x6433,0xb7
  41fa64:	ins    DWORD PTR es:[edi],dx
  41fa65:	rcl    BYTE PTR [ebx+0x66],1
  41fa68:	sub    eax,DWORD PTR [ebp+0x7a]
  41fa6b:	not    ebx
  41fa6d:	jo     0x41fa31
  41fa6f:	mov    bh,0x52
  41fa71:	xchg   esi,eax
  41fa72:	mov    ?,WORD PTR [esi-0x731c9a07]
  41fa78:	add    DWORD PTR [ebp+0x297537f8],esp
  41fa7e:	xor    BYTE PTR [eax+0x6d751504],dl
  41fa84:	ja     0x41fac4
  41fa86:	das    
  41fa87:	and    eax,0x66e1a48a
  41fa8c:	fldenv [edi-0x1c]
  41fa8f:	outs   dx,DWORD PTR ds:[esi]
  41fa90:	adc    dl,BYTE PTR [edx-0x2e271503]
  41fa96:	add    dh,ah
  41fa98:	ficom  DWORD PTR [edi-0x63]
  41fa9b:	xor    DWORD PTR [eax+ebp*2],eax
  41fa9e:	push   ebp
  41fa9f:	push   0x1e
  41faa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa2:	int3   
  41faa3:	aam    0xa
  41faa5:	push   ds
  41faa6:	sub    al,BYTE PTR ds:0xf3748739
  41faac:	jo     0x41fab6
  41faae:	mov    ah,0x6b
  41fab0:	mov    dh,0x60
  41fab2:	(bad)
  41fab5:	and    edi,DWORD PTR [ecx+edi*8+0x33]
  41fab9:	pushf  
  41faba:	pop    edx
  41fabb:	and    DWORD PTR [ebx],esp
  41fabd:	sbb    eax,DWORD PTR [esp+eax*8+0x3c536ad3]
  41fac4:	(bad)  
  41fac6:	stc    
  41fac7:	out    0xcf,eax
  41fac9:	cwd    
  41facb:	dec    ebx
  41facc:	(bad)  
  41facd:	mov    edx,0x18cb4762
  41fad2:	fidivr DWORD PTR [ebp+0x5d75694a]
  41fad8:	mov    eax,ds:0xad4c343f
  41fadd:	js     0x41fa92
  41fadf:	add    ax,0x558e
  41fae3:	(bad)  
  41fae4:	rcl    DWORD PTR [esi-0x61],cl
  41fae7:	ds jae 0x41fb17
  41faea:	xchg   edx,eax
  41faeb:	in     eax,0x41
  41faed:	gs dec eax
  41faef:	into   
  41faf0:	or     eax,DWORD PTR [esi-0x2e]
  41faf3:	pop    ss
  41faf4:	int    0x58
  41faf6:	dec    ebx
  41faf7:	mov    esp,0x5c756daf
  41fafc:	sub    dh,dh
  41fafe:	stos   BYTE PTR es:[edi],al
  41faff:	daa    
  41fb00:	push   cs
  41fb01:	aad    0x22
  41fb03:	data16 loope 0x41fb4f
  41fb06:	sbb    ah,BYTE PTR [edx-0x16]
  41fb09:	cmp    ebp,DWORD PTR [eax+0x6d815c8f]
  41fb0f:	inc    ebx
  41fb10:	cmp    al,0x91
  41fb12:	inc    ebp
  41fb13:	lock jmp 0x41fac7
  41fb16:	test   eax,0x24f86767
  41fb1b:	aad    0xcf
  41fb1d:	cmp    dh,BYTE PTR [esi-0x5f]
  41fb20:	out    dx,al
  41fb21:	add    al,0x68
  41fb23:	xchg   ebx,eax
  41fb24:	fs iret 
  41fb26:	cli    
  41fb27:	and    DWORD PTR ds:0xfc196568,ebx
  41fb2d:	ins    DWORD PTR es:[edi],dx
  41fb2e:	clc    
  41fb2f:	adc    ebp,0x4c51cce0
  41fb35:	(bad)  
  41fb36:	test   BYTE PTR [esp+esi*8+0x59],0x5d
  41fb3b:	loop   0x41fb8c
  41fb3d:	es jne 0x41fb34
  41fb40:	icebp  
  41fb41:	int    0x5a
  41fb43:	(bad)  
  41fb44:	retf   0xa854
  41fb47:	std    
  41fb48:	push   eax
  41fb49:	ret    0x9a68
  41fb4c:	and    ecx,DWORD PTR [esi-0x4608b7cb]
  41fb52:	sbb    eax,0x2329d2ba
  41fb57:	imul   ebp,esi,0x23cbf2cc
  41fb5d:	lds    eax,FWORD PTR [esi+eiz*2]
  41fb60:	test   al,0x3d
  41fb62:	es test al,0xd3
  41fb65:	retf   0xbc01
  41fb68:	mov    ah,0x43
  41fb6a:	xchg   BYTE PTR [ecx+0x67db559d],bl
  41fb70:	mov    ds:0x63420678,al
  41fb75:	push   ecx
  41fb76:	cmc    
  41fb77:	(bad)  
  41fb79:	xchg   DWORD PTR [ecx+edi*8],edx
  41fb7c:	scas   eax,DWORD PTR es:[edi]
  41fb7d:	xchg   BYTE PTR [edx-0x74],ch
  41fb80:	das    
  41fb81:	add    al,0xb9
  41fb83:	test   eax,0x698ad6f0
  41fb88:	jne    0x41fb8f
  41fb8a:	test   eax,0x92279552
  41fb90:	sbb    edi,ebp
  41fb92:	dec    ecx
  41fb93:	adc    BYTE PTR [edx+edi*2],cl
  41fb96:	add    BYTE PTR [eax],dl
  41fb98:	sbb    BYTE PTR [eax+0x6fa26601],dh
  41fb9e:	bound  eax,QWORD PTR [ecx-0x70c2e12]
  41fba4:	(bad)  
  41fba6:	jbe    0x41fb56
  41fba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba9:	aad    0x4d
  41fbab:	mov    eax,ds:0xff557bd3
  41fbb0:	mov    bl,0x7
  41fbb2:	jb     0x41fc1b
  41fbb4:	mov    eax,0x99fa9f66
  41fbb9:	sbb    bl,BYTE PTR [ebp+0x5c]
  41fbbc:	(bad)  
  41fbbd:	xlat   BYTE PTR ds:[ebx]
  41fbbe:	sub    BYTE PTR [ebx+0x3375d30f],0xf1
  41fbc5:	sbb    edi,esi
  41fbc7:	pop    ecx
  41fbc8:	add    eax,0x2964042a
  41fbcd:	xor    DWORD PTR [ecx],ebx
  41fbcf:	xchg   ecx,eax
  41fbd0:	mov    ah,0xaa
  41fbd2:	mov    ds:0xbe486326,al
  41fbd7:	enterw 0xfabd,0xcf
  41fbdc:	pop    ebp
  41fbdd:	(bad)  
  41fbde:	pop    esp
  41fbdf:	push   0x1098c5e3
  41fbe4:	sub    eax,DWORD PTR [ebp+esi*1-0x609afe27]
  41fbeb:	jae    0x41fbe0
  41fbed:	out    dx,al
  41fbee:	je     0x41fb78
  41fbf0:	xchg   ebp,eax
  41fbf1:	lea    esi,[ecx+0x3b]
  41fbf4:	cmc    
  41fbf5:	or     eax,0x24cf9d75
  41fbfa:	push   esp
  41fbfb:	add    al,0xcc
  41fbfd:	sub    cl,ah
  41fbff:	mov    dx,0x4c16
  41fc03:	mov    edx,0x2e433cf2
  41fc08:	push   edx
  41fc09:	pop    edi
  41fc0a:	(bad)  
  41fc0b:	imul   ebp,DWORD PTR [ebp+0x55],0xffffffbf
  41fc0f:	or     ch,ch
  41fc11:	pop    ds
  41fc12:	data16 test BYTE PTR ds:[ecx+0x30d3345f],dl
  41fc1a:	fdiv   DWORD PTR [ebx+0x13b4df33]
  41fc20:	fcom   DWORD PTR [edx-0xe]
  41fc23:	shl    BYTE PTR [edx-0x45a4ae32],1
  41fc29:	shl    BYTE PTR [esi+0x6],0x83
  41fc2d:	and    eax,ebx
  41fc2f:	mov    dh,0xd3
  41fc31:	loop   0x41fca0
  41fc33:	pop    ds
  41fc34:	dec    ebp
  41fc35:	push   ss
  41fc36:	int3   
  41fc37:	xor    DWORD PTR [esi+0x4c93ed66],eax
  41fc3d:	xor    ebx,DWORD PTR [edi-0x2464c5ef]
  41fc43:	fsub   QWORD PTR [ecx-0xc]
  41fc46:	jne    0x41fcad
  41fc48:	fwait
  41fc49:	jl     0x41fc8c
  41fc4b:	mov    eax,ds:0x66250902
  41fc50:	mov    DWORD PTR [esi+0x8],ebx
  41fc53:	and    eax,0x58b7e9d3
  41fc58:	jge    0x41fc1e
  41fc5a:	(bad)  
  41fc5b:	cmc    
  41fc5c:	ret    0x4462
  41fc5f:	xchg   esp,eax
  41fc60:	sub    al,0xc7
  41fc62:	test   al,0x4f
  41fc64:	into   
  41fc65:	adc    cl,al
  41fc67:	out    0xea,al
  41fc69:	xchg   ecx,eax
  41fc6a:	aas    
  41fc6b:	inc    ecx
  41fc6c:	add    esi,DWORD PTR [eax+0xf]
  41fc6f:	jmp    0x41fc7e
  41fc71:	and    eax,0x65054d57
  41fc76:	call   0xd129:0x47caa628
  41fc7d:	mov    ch,0xeb
  41fc7f:	pop    es
  41fc80:	in     eax,0x8e
  41fc82:	inc    ecx
  41fc83:	mov    esi,0xaa160575
  41fc88:	xor    bh,BYTE PTR [eax+0x44]
  41fc8b:	arpl   WORD PTR [edx-0x6e],sp
  41fc8e:	hlt    
  41fc8f:	addr16 cdq 
  41fc91:	iret   
  41fc92:	mov    bh,0x94
  41fc94:	rcr    ah,cl
  41fc96:	push   ebp
  41fc97:	bound  edx,QWORD PTR [edi+0x484675d2]
  41fc9d:	xchg   DWORD PTR [ebx-0x1a996959],ebx
  41fca3:	jp     0x41fd0b
  41fca5:	mov    edi,0x199fc5ea
  41fcaa:	or     eax,0x72bdea64
  41fcaf:	xchg   esi,eax
  41fcb0:	push   0x78
  41fcb2:	je     0x41fcda
  41fcb4:	addr16 cmp edx,ebp
  41fcb7:	sahf   
  41fcb8:	je     0x41fc45
  41fcba:	jmp    DWORD PTR [esi+0x19]
  41fcbd:	inc    esp
  41fcbe:	dec    ebp
  41fcbf:	sub    al,0xea
  41fcc1:	and    cl,cl
  41fcc3:	iret   
  41fcc4:	jns    0x41fc9c
  41fcc6:	pop    es
  41fcc7:	les    esp,FWORD PTR [esp+eax*1+0x65e39ff5]
  41fcce:	and    DWORD PTR [esi],edi
  41fcd0:	cld    
  41fcd1:	jnp    0x41fc60
  41fcd3:	test   BYTE PTR [eax+0x39],0xfd
  41fcd7:	sbb    DWORD PTR [esp+eax*8+0x62],ecx
  41fcdb:	ins    BYTE PTR es:[edi],dx
  41fcdc:	xchg   ebx,eax
  41fcdd:	pusha  
  41fcde:	jne    0x41fcd4
  41fce0:	stc    
  41fce1:	gs mov ebp,0xae73cb85
  41fce7:	aas    
  41fce8:	sub    bl,BYTE PTR [esi]
  41fcea:	xchg   ebx,eax
  41fceb:	int3   
  41fcec:	inc    ebp
  41fced:	std    
  41fcee:	jne    0x41fcdc
  41fcf0:	and    eax,0x7334658c
  41fcf5:	test   edx,eax
  41fcf7:	jle    0x41fd78
  41fcf9:	add    edx,DWORD PTR [ecx+ebx*4+0x6516e750]
  41fd00:	arpl   WORD PTR [ecx+0x4f],si
  41fd03:	out    dx,eax
  41fd04:	sar    esi,cl
  41fd06:	dec    esi
  41fd07:	fistp  QWORD PTR [eax+edx*2]
  41fd0a:	mov    bh,0x2d
  41fd0c:	mov    eax,0xd30e3339
  41fd11:	push   0x1
  41fd13:	es jge 0x41fd1b
  41fd16:	mov    ebp,0xadd7d352
  41fd1b:	nop
  41fd1c:	and    ebx,DWORD PTR [ecx+0x6c]
  41fd1f:	js     0x41fd0c
  41fd21:	pop    edx
  41fd22:	pop    esp
  41fd23:	mov    ah,0xf3
  41fd25:	and    BYTE PTR [eax+ecx*8],cl
  41fd28:	jnp    0x41fcad
  41fd2a:	sti    
  41fd2b:	mov    fs,WORD PTR [edi-0xe521a52]
  41fd31:	imul   esp,DWORD PTR [edx+0x3c],0x55765554
  41fd38:	mov    esi,0x4f269c45
  41fd3d:	push   0x4b5482e8
  41fd42:	xchg   DWORD PTR [ebx+edx*4-0x1b],esp
  41fd46:	xchg   dl,al
  41fd48:	aaa    
  41fd49:	push   0xfffffffc
  41fd4b:	clc    
  41fd4c:	nop
  41fd4d:	xchg   BYTE PTR [edi+0x61],ah
  41fd50:	fbstp  TBYTE PTR [esi]
  41fd52:	outs   dx,DWORD PTR ds:[esi]
  41fd53:	aas    
  41fd54:	ret    
  41fd55:	in     al,0xf4
  41fd57:	data16 lock (bad) 
  41fd5a:	fcomi  st,st(6)
  41fd5c:	rol    DWORD PTR [edi],cl
  41fd5e:	mov    al,ds:0x2f4e79c8
  41fd63:	inc    esi
  41fd64:	cmp    BYTE PTR [ebp+0x5e],ah
  41fd67:	push   esi
  41fd68:	or     ecx,ecx
  41fd6a:	sub    DWORD PTR [eax+0xf],eax
  41fd6d:	lods   al,BYTE PTR ds:[esi]
  41fd6e:	idiv   cl
  41fd70:	inc    eax
  41fd71:	and    dh,BYTE PTR [ebp+0x12]
  41fd74:	mov    eax,0x60379e17
  41fd79:	jge    0x41fd5c
  41fd7b:	pushw  ss
  41fd7d:	arpl   cx,cx
  41fd7f:	xor    ebx,edx
  41fd81:	pop    edx
  41fd82:	ds (bad) 
  41fd84:	(bad)  
  41fd86:	cmp    DWORD PTR ds:0xd506531,ebp
  41fd8c:	ror    DWORD PTR [ebx],0xc7
  41fd8f:	cmp    BYTE PTR [esi-0xe],dh
  41fd92:	jp     0x41fd95
  41fd94:	adc    eax,0xadf07561
  41fd99:	sahf   
  41fd9a:	pop    ecx
  41fd9b:	clc    
  41fd9c:	mov    ebp,0x508028b2
  41fda1:	xlat   BYTE PTR ds:[ebx]
  41fda2:	sbb    DWORD PTR [esi],esp
  41fda4:	int3   
  41fda5:	and    bl,bh
  41fda7:	fcom   DWORD PTR [edx]
  41fda9:	div    BYTE PTR [esi+0x6d]
  41fdac:	add    ebx,DWORD PTR [ebp+0x655c8677]
  41fdb2:	mov    BYTE PTR [ebx+0x62],0xeb
  41fdb6:	icebp  
  41fdb7:	imul   ebx,eax,0x1
  41fdba:	and    DWORD PTR [eax-0x1b8a2126],edx
  41fdc0:	std    
  41fdc1:	push   edi
  41fdc2:	mov    ah,0xb3
  41fdc4:	push   0xfffffff8
  41fdc6:	jmp    DWORD PTR [esi+0x1c]
  41fdc9:	stos   DWORD PTR es:[edi],eax
  41fdca:	and    edx,edi
  41fdcc:	shl    ah,1
  41fdce:	add    esp,eax
  41fdd0:	inc    esi
  41fdd1:	xchg   edi,eax
  41fdd2:	mov    ds:0x6b4a404c,eax
  41fdd7:	jge    0x41fe1c
  41fdd9:	popa   
  41fdda:	jns    0x41fdeb
  41fddc:	out    dx,eax
  41fddd:	pop    ss
  41fdde:	jle    0x41fe2e
  41fde0:	call   0xeedc:0xd3216f44
  41fde7:	cmp    eax,0x442e22a4
  41fdec:	int    0x44
  41fdee:	mov    ds:0x6aa7b961,al
  41fdf3:	adc    eax,esp
  41fdf5:	xchg   esp,eax
  41fdf6:	jbe    0x41fd8e
  41fdf8:	stos   BYTE PTR es:[edi],al
  41fdf9:	lock mov ebx,0x8559fb7e
  41fdff:	inc    eax
  41fe00:	iret   
  41fe01:	iretw  
  41fe03:	popa   
  41fe04:	js     0x41fe29
  41fe06:	clc    
  41fe07:	lea    ecx,[ecx]
  41fe09:	mov    al,ds:0x84d3abac
  41fe0e:	dec    ebx
  41fe0f:	push   esi
  41fe10:	(bad)  
  41fe12:	je     0x41fdcf
  41fe14:	popa   
  41fe15:	gs xor al,0x35
  41fe18:	xor    al,0xfd
  41fe1a:	aad    0xdb
  41fe1c:	inc    ecx
  41fe1d:	icebp  
  41fe1e:	outs   dx,DWORD PTR ds:[esi]
  41fe1f:	sti    
  41fe20:	jmp    0xaa89:0xe72ac5e0
  41fe27:	std    
  41fe28:	lods   al,BYTE PTR ds:[esi]
  41fe29:	xchg   ecx,eax
  41fe2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2b:	or     ecx,DWORD PTR [eax-0x18]
  41fe2e:	mov    al,0x66
  41fe30:	mov    cl,0x69
  41fe32:	call   FWORD PTR [edi-0x2d]
  41fe35:	xchg   ecx,eax
  41fe36:	fwait
  41fe37:	mov    bh,0x44
  41fe39:	cld    
  41fe3a:	xchg   edi,eax
  41fe3b:	stos   BYTE PTR es:[edi],al
  41fe3c:	bnd gs call 0xfeb461cf
  41fe43:	dec    esp
  41fe44:	daa    
  41fe45:	scas   eax,DWORD PTR es:[edi]
  41fe46:	in     al,0x95
  41fe48:	dec    ebx
  41fe49:	sbb    BYTE PTR [ecx-0x42],dh
  41fe4c:	push   ebx
  41fe4d:	jp     0x41fe5d
  41fe4f:	jmp    0xca776381
  41fe54:	pop    ss
  41fe55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe56:	out    dx,al
  41fe57:	loop   0x41fe32
  41fe59:	sub    esp,DWORD PTR [ebp+edx*4-0x4a8a3f7c]
  41fe60:	jne    0x41feac
  41fe62:	(bad)  [ecx+0x693525c1]
  41fe68:	or     ebp,edx
  41fe6a:	ret    0x603c
  41fe6d:	pop    es
  41fe6e:	jo     0x41fe49
  41fe70:	cmp    BYTE PTR [eax+0x75],dl
  41fe73:	adc    BYTE PTR [esi+0x75b36559],ch
  41fe79:	pop    edx
  41fe7a:	pushf  
  41fe7b:	callw  0x3c0a
  41fe7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe80:	adc    eax,0xb01ce723
  41fe85:	mov    esi,0x788da011
  41fe8a:	cmp    esi,esp
  41fe8c:	mov    esp,DWORD PTR [ebx+ebx*1+0x4c]
  41fe90:	sbb    eax,0xbe66a8e6
  41fe95:	or     dl,BYTE PTR cs:[esi-0x2d]
  41fe99:	test   dh,cl
  41fe9b:	iret   
  41fe9c:	jmp    0xcecb4276
  41fea1:	data16 adc BYTE PTR [ecx],bh
  41fea4:	push   ecx
  41fea5:	fsubr  DWORD PTR [ebp-0x3a]
  41fea8:	mov    ebx,0x87b3e730
  41fead:	mov    al,ds:0xf6c53575
  41feb2:	sbb    bl,BYTE PTR [ebx-0x6fae34e6]
  41feb8:	xchg   ebx,eax
  41feb9:	mov    dl,BYTE PTR [ebx-0x49a7ec02]
  41febf:	aaa    
  41fec0:	shl    DWORD PTR [edx*2+0x72f20b2a],0xc5
  41fec8:	scas   al,BYTE PTR es:[edi]
  41fec9:	clc    
  41feca:	pop    edx
  41fecb:	mov    eax,0x7e58c626
  41fed0:	xor    ecx,DWORD PTR [ecx]
  41fed2:	pushf  
  41fed3:	test   WORD PTR [edx-0x2019a19b],sp
  41feda:	imul   BYTE PTR [edx-0x38]
  41fedd:	mov    al,ds:0x8820d881
  41fee2:	adc    DWORD PTR [esi-0x6c],esp
  41fee5:	ins    BYTE PTR es:[edi],dx
  41fee6:	mov    esp,0x5f0ed208
  41feeb:	imul   ebx,DWORD PTR [ebx+0x5ebc213a],0x5a
  41fef2:	sbb    DWORD PTR [ebp+0x67],esp
  41fef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fef6:	addr16 mov dl,0xf6
  41fef9:	outs   dx,DWORD PTR ds:[esi]
  41fefa:	pop    edx
  41fefb:	ja     0x41fed0
  41fefd:	imul   edi,edi,0xffffffaf
  41ff00:	jl     0x41ff04
  41ff02:	xchg   esp,eax
  41ff03:	fcom   st(6)
  41ff05:	push   ebp
  41ff06:	and    DWORD PTR [edi],edx
  41ff08:	fimul  DWORD PTR [ecx-0xff2144d]
  41ff0e:	xchg   ebp,eax
  41ff0f:	sbb    al,0x40
  41ff11:	push   eax
  41ff12:	mov    WORD PTR [edi],gs
  41ff14:	add    ch,dl
  41ff16:	jne    0x41ff4f
  41ff18:	out    dx,eax
  41ff19:	dec    eax
  41ff1a:	jl     0x41ff49
  41ff1c:	das    
  41ff1d:	inc    edi
  41ff1e:	shl    DWORD PTR [esi+0xc],0x96
  41ff22:	(bad)  
  41ff24:	rcr    DWORD PTR [esi+0x6feebcc9],cl
  41ff2a:	fwait
  41ff2b:	icebp  
  41ff2c:	sub    BYTE PTR ds:0x6570ea11,dl
  41ff32:	and    esp,edi
  41ff34:	pop    ecx
  41ff35:	lea    ebx,[ebp-0x1]
  41ff38:	sbb    eax,DWORD PTR [esi+edi*4+0x5c]
  41ff3c:	shl    DWORD PTR [esi-0x8],cl
  41ff3f:	push   ecx
  41ff40:	dec    ebp
  41ff41:	ins    BYTE PTR es:[edi],dx
  41ff42:	pop    ss
  41ff43:	cdq    
  41ff44:	das    
  41ff45:	cmp    ebx,ebp
  41ff47:	cs shl ebx,cl
  41ff4a:	pop    ds
  41ff4b:	mov    ebx,0x109ba8d
  41ff50:	rol    BYTE PTR [ecx+ebx*4+0x6d],cl
  41ff54:	adc    eax,0x54bc50a4
  41ff59:	pop    di
  41ff5b:	iret   
  41ff5c:	jp     0x41ffd7
  41ff5e:	cmc    
  41ff5f:	xchg   edx,eax
  41ff60:	jmp    0x41ffdb
  41ff62:	dec    ebp
  41ff63:	scas   eax,DWORD PTR es:[edi]
  41ff64:	hlt    
  41ff65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff66:	int    0x1d
  41ff68:	ror    DWORD PTR [ecx],cl
  41ff6a:	inc    BYTE PTR [eax+0x53]
  41ff6d:	ret    
  41ff6e:	push   cx
  41ff70:	(bad)  
  41ff71:	mov    edx,0x373390e7
  41ff76:	pop    esp
  41ff77:	sub    DWORD PTR [edx+0xe],0x9a71cb52
  41ff7e:	je     0x41ff17
  41ff80:	push   cs
  41ff81:	imul   ebx,DWORD PTR [esi],0x8555d799
  41ff87:	push   ds
  41ff88:	cmp    ebx,DWORD PTR [ecx+0x4800ffeb]
  41ff8e:	cmp    DWORD PTR [esi],esp
  41ff90:	and    bl,BYTE PTR [ecx-0x69]
  41ff93:	xchg   ecx,eax
  41ff94:	push   ebx
  41ff95:	mov    ch,0x6a
  41ff97:	ret    
  41ff98:	inc    ebx
  41ff99:	in     eax,0x10
  41ff9b:	xchg   ecx,eax
  41ff9c:	out    0xd9,eax
  41ff9e:	push   0xf8548ce7
  41ffa3:	gs push ebp
  41ffa5:	sub    eax,0x7b0e26b9
  41ffaa:	inc    ebp
  41ffab:	repnz out dx,al
  41ffad:	mov    ds:0x2306c57b,al
  41ffb2:	jg     0x420008
  41ffb4:	xchg   edi,eax
  41ffb5:	jns    0x41ff48
  41ffb7:	dec    esi
  41ffb8:	mov    esi,DWORD PTR [ebx+ecx*4+0x66]
  41ffbc:	les    ebx,FWORD PTR [edi+edx*2]
  41ffbf:	dec    ebx
  41ffc0:	jmp    0x1669:0x951a7b4d
  41ffc7:	cs leave 
  41ffc9:	dec    ecx
  41ffca:	adc    eax,0xb1191913
  41ffcf:	mov    ebp,0x28f523df
  41ffd4:	inc    BYTE PTR [eax+0x64f1b000]
  41ffda:	jne    0x41ffd7
  41ffdc:	mov    edx,0x9169a794
  41ffe1:	rcr    DWORD PTR [eax],0x88
  41ffe4:	and    eax,0x4767b62d
  41ffe9:	inc    esi
  41ffea:	add    al,0xf5
  41ffec:	out    dx,eax
  41ffed:	outs   dx,BYTE PTR ds:[esi]
  41ffee:	jl     0x42004e
  41fff0:	mov    eax,edx
  41fff2:	ins    BYTE PTR es:[edi],dx
  41fff3:	mov    eax,ds:0xe6f27783
  41fff8:	sub    DWORD PTR [ebx+0x52],ebp
  41fffb:	(bad)  
  41fffc:	lea    edi,[edx+ecx*8]
  41ffff:	cld    
  420000:	sbb    DWORD PTR [edx+ebx*8+0x3e6cf8e6],eax
  420007:	sbb    al,0xe2
  420009:	push   esi
  42000a:	jne    0x41ffad
  42000c:	mov    ch,0x54
  42000e:	jnp    0x42000f
  420010:	jle    0x41ffb3
  420012:	loop   0x42007a
  420014:	push   0xe2803952
  420019:	adc    esp,ecx
  42001b:	aaa    
  42001c:	es add eax,0x92b48f5a
  420022:	push   ecx
  420023:	ja     0x42004a
  420025:	mov    eax,0x39c866ce
  42002a:	imul   esi,DWORD PTR [eax-0x6156252d],0xfffffffc
  420031:	rcr    ecx,cl
  420033:	push   ebx
  420034:	push   esp
  420035:	gs test al,0x5d
  420038:	ins    DWORD PTR es:[edi],dx
  420039:	dec    edi
  42003a:	aaa    
  42003b:	or     eax,0xea6ccc14
  420040:	sub    al,BYTE PTR [edi+esi*2-0x3a594b37]
  420047:	mov    esp,0x966566cd
  42004c:	mov    edi,0xe3b9a263
  420051:	add    DWORD PTR [ebx-0x2372c3b],edx
  420057:	loope  0x420078
  420059:	cwde   
  42005a:	(bad)  
  42005b:	sti    
  42005c:	mov    BYTE PTR [ecx+0x60],ah
  42005f:	not    dl
  420061:	les    ebx,FWORD PTR [ecx]
  420063:	dec    esp
  420064:	mov    edi,0x8bd468ed
  420069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42006a:	dec    eax
  42006b:	add    eax,0xac34ae71
  420070:	pop    es
  420071:	sub    BYTE PTR [ebx-0x3a],dl
  420074:	lods   al,BYTE PTR ds:[esi]
  420075:	test   DWORD PTR [ebp-0x16],esi
  420078:	jecxz  0x42008d
  42007a:	fwait
  42007b:	and    DWORD PTR [ebx-0x58],0x7f96622
  420082:	call   0xde38d459
  420087:	int    0x13
  420089:	mov    esp,0x69db1047
  42008e:	(bad)  
  42008f:	mov    esp,fs
  420091:	add    DWORD PTR [esi-0x3ef22c45],edx
  420097:	add    eax,0x9cfbbe4c
  42009c:	arpl   sp,ax
  42009e:	arpl   WORD PTR [esi+0x3c],sp
  4200a1:	int    0xaa
  4200a3:	pop    esi
  4200a4:	scas   al,BYTE PTR es:[edi]
  4200a5:	jle    0x420029
  4200a7:	bound  esi,QWORD PTR [eax]
  4200a9:	mov    edx,0xbcce2a15
  4200ae:	imul   esp,DWORD PTR [eax+0x4664fdf9],0x0
  4200b5:	and    DWORD PTR [esi+0x4965609a],esi
  4200bb:	xchg   ebx,eax
  4200bc:	xor    cl,ah
  4200be:	popf   
  4200bf:	sub    DWORD PTR [edx+0x10],edx
  4200c2:	jns    0x420108
  4200c4:	retf   
  4200c5:	xchg   esi,eax
  4200c6:	jne    0x420093
  4200c8:	xor    DWORD PTR [edx+0x58351f04],ebp
  4200ce:	outs   dx,BYTE PTR ds:[esi]
  4200cf:	add    edi,0xfffffffa
  4200d2:	pop    eax
  4200d3:	test   eax,0x26deeead
  4200d8:	adc    al,0x8a
  4200da:	ret    0x3ff0
  4200dd:	cmp    al,0x47
  4200df:	gs fcmovb st,st(6)
  4200e2:	and    ebp,DWORD PTR [edx-0x6]
  4200e5:	gs sahf 
  4200e7:	aas    
  4200e8:	imul   esi,ebx,0x42
  4200eb:	hlt    
  4200ec:	lods   al,BYTE PTR ds:[esi]
  4200ed:	mov    cl,0x7
  4200ef:	xor    edx,esi
  4200f1:	lds    esi,FWORD PTR [ebp-0x52]
  4200f4:	mov    dh,BYTE PTR [edi+edi*2-0x1d27714b]
  4200fb:	retw   0x851e
  4200ff:	mov    al,ds:0x9d4f8cd3
  420104:	add    al,cl
  420106:	inc    edx
  420107:	ret    0x65fd
  42010a:	adc    cl,bl
  42010c:	(bad)  
  42010d:	dec    ebp
  42010e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420110:	xchg   ebx,eax
  420112:	xor    edi,eax
  420114:	mov    ds:0xa6c89bbf,al
  420119:	inc    eax
  42011a:	xor    eax,0xb2f3d179
  42011f:	ror    edi,1
  420121:	add    BYTE PTR [ebx-0x31ae949a],ch
  420127:	stos   DWORD PTR es:[edi],eax
  420128:	ror    DWORD PTR [edi-0xcbfca67],cl
  42012e:	pop    edx
  42012f:	mov    esp,0x2bbe6553
  420134:	ins    BYTE PTR es:[edi],dx
  420135:	retf   
  420136:	inc    esi
  420137:	or     BYTE PTR [esi],cl
  420139:	add    eax,0x78e7096e
  42013e:	jne    0x4200f3
  420140:	ffree  st(4)
  420142:	fiadd  DWORD PTR [ebx+eax*8]
  420145:	push   ds
  420146:	and    ah,BYTE PTR [ecx-0x44ec9a12]
  42014c:	push   esp
  42014d:	aas    
  42014e:	pusha  
  42014f:	cmovo  esi,DWORD PTR [eax+0x26e7032f]
  420156:	jne    0x420109
  420158:	cwde   
  420159:	mul    DWORD PTR [ebx]
  42015b:	pushf  
  42015c:	(bad)  
  42015d:	cli    
  42015e:	inc    ecx
  42015f:	nop
  420160:	adc    ecx,DWORD PTR [ecx+0x4d]
  420163:	inc    edi
  420164:	xor    al,0x2d
  420166:	mov    ds:0x8b8d4d2f,eax
  42016b:	(bad)  
  42016c:	or     ebp,ecx
  42016e:	cwde   
  42016f:	dec    edi
  420170:	sar    DWORD PTR [edi-0x6cf47cb9],cl
  420176:	and    BYTE PTR [ebp+0x40d06833],0xdf
  42017d:	aad    0x92
  42017f:	mov    ds:0x8df59879,eax
  420184:	shl    esi,cl
  420186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420187:	pop    edi
  420188:	out    dx,eax
  420189:	pop    edi
  42018a:	adc    BYTE PTR [esi+0x20cb6b08],dl
  420190:	cmp    dh,al
  420192:	ins    BYTE PTR es:[edi],dx
  420193:	mov    dh,0xbb
  420195:	aad    0x55
  420197:	loop   0x4201ae
  420199:	cmc    
  42019a:	jae    0x420181
  42019c:	std    
  42019d:	rcr    ah,0xe6
  4201a0:	mov    BYTE PTR [esi+0x55],al
  4201a3:	push   0x5f
  4201a5:	mov    bl,0x27
  4201a7:	pushw  0x24
  4201aa:	out    0x9a,eax
  4201ac:	shl    ebp,cl
  4201ae:	loopne 0x420224
  4201b0:	mov    WORD PTR ds:[edi],?
  4201b3:	jb     0x4201fb
  4201b5:	sub    DWORD PTR [esi+0x69],esp
  4201b8:	shr    BYTE PTR [ebx+0x61dee062],1
  4201be:	and    al,dh
  4201c0:	repz inc DWORD PTR [eax+0x5a]
  4201c4:	bound  edi,QWORD PTR [edi-0x1b1cde8b]
  4201ca:	imul   esi,DWORD PTR [eax-0x7e6d643a],0x26ca2cd8
  4201d4:	xchg   ecx,eax
  4201d5:	retf   0xf7b4
  4201d8:	ror    BYTE PTR [ebp+0x75],1
  4201db:	jmp    0x3fa4a61f
  4201e0:	jnp    0x4201b3
  4201e2:	scas   eax,DWORD PTR es:[edi]
  4201e3:	mov    ebp,0xef75ff35
  4201e8:	cmp    al,0x39
  4201ea:	or     BYTE PTR [ecx+0x5f],bl
  4201ed:	fdiv   DWORD PTR [ebp+0x71]
  4201f0:	shr    bh,0x9
  4201f3:	or     cl,ch
  4201f5:	lock dec edx
  4201f7:	and    si,WORD PTR [esi]
  4201fa:	addr16 sbb bl,ch
  4201fd:	sbb    dl,BYTE PTR [ebp+0x76ef1d06]
  420203:	jg     0x4201b7
  420205:	scas   al,BYTE PTR es:[edi]
  420206:	mov    cl,0x8e
  420208:	add    DWORD PTR [esi-0x6a],esp
  42020b:	cmp    BYTE PTR [ebx+0x1bd159e5],ah
  420211:	cmc    
  420212:	lods   al,BYTE PTR ds:[esi]
  420213:	add    dl,bl
  420215:	jge    0x4201de
  420217:	mov    ebx,0x365fa00
  42021c:	cmp    bl,BYTE PTR [ebx+0x49]
  42021f:	sub    DWORD PTR [esi-0x5cb2b09d],esi
  420225:	leave  
  420226:	sub    edi,DWORD PTR [esi+0x8354067]
  42022c:	loopne 0x420272
  42022e:	mov    dl,0xa3
  420230:	mov    cs,esp
  420232:	je     0x420270
  420234:	test   eax,0xa8719226
  420239:	lods   al,BYTE PTR ds:[esi]
  42023a:	dec    ebp
  42023b:	loope  0x4201f1
  42023d:	jp     0x4202b3
  42023f:	shr    BYTE PTR ds:0xccd5305d,0x66
  420246:	dec    ecx
  420247:	adc    al,0x5f
  420249:	pushf  
  42024a:	(bad)  
  42024b:	sub    DWORD PTR [edi+0x1b42420f],esp
  420251:	das    
  420252:	ins    BYTE PTR es:[edi],dx
  420253:	mov    edx,es
  420255:	push   cs
  420256:	or     esi,esp
  420258:	cmp    eax,0xcabb9965
  42025d:	mov    ?,WORD PTR [esi-0x1ead75fb]
  420263:	push   cs
  420264:	push   ebx
  420265:	fild   QWORD PTR [edx+esi*8-0x29]
  420269:	int3   
  42026a:	fs loope 0x42025f
  42026d:	aas    
  42026e:	mov    cl,0xbd
  420270:	shr    DWORD PTR [edx+ebx*2],cl
  420273:	pop    edi
  420274:	loope  0x4201fd
  420276:	mov    bl,0x40
  420278:	sar    DWORD PTR [ecx-0x2de49ebd],cl
  42027e:	jmp    DWORD PTR [esi+0x6b5e4dd6]
  420284:	xchg   ebx,eax
  420285:	aad    0x74
  420287:	pop    ds
  420288:	sub    DWORD PTR [ecx],0xffffffdd
  42028b:	aam    0x3d
  42028d:	inc    ecx
  42028e:	inc    eax
  42028f:	jle    0x420230
  420291:	jecxz  0x420308
  420293:	movhps xmm1,QWORD PTR [ebx+0x15a76f60]
  42029a:	inc    eax
  42029b:	inc    si
  42029d:	(bad)  
  42029e:	jp     0x420303
  4202a0:	ror    edi,cl
  4202a2:	sub    al,BYTE PTR [ecx-0x28]
  4202a5:	sub    DWORD PTR ds:0xb06510af,esp
  4202ab:	pop    esi
  4202ac:	sub    eax,0x50990796
  4202b1:	test   eax,0x894477ad
  4202b6:	cdq    
  4202b7:	jge    0x420250
  4202b9:	jb     0x420276
  4202bb:	out    0x4c,al
  4202bd:	push   ds
  4202be:	and    ebx,DWORD PTR [esi]
  4202c0:	and    BYTE PTR [esi-0x73],0xf4
  4202c4:	sbb    DWORD PTR [ebp+0x66],edx
  4202c7:	dec    eax
  4202c8:	xor    DWORD PTR [ebp-0x19684652],ebp
  4202ce:	mov    esi,0x8f24ef0c
  4202d3:	leave  
  4202d4:	addr16 sbb eax,0xacd10123
  4202da:	outs   dx,DWORD PTR ds:[esi]
  4202db:	sub    ax,WORD PTR [ecx+0x6dece77]
  4202e2:	push   ebp
  4202e3:	push   0xd736d2c
  4202e8:	sbb    DWORD PTR [ebp+0x76],esp
  4202eb:	mov    eax,ds:0x4e5780f
  4202f0:	and    eax,DWORD PTR [edx]
  4202f2:	push   cs
  4202f3:	sub    esi,edx
  4202f5:	mov    eax,ds:0x43f8d675
  4202fa:	lahf   
  4202fb:	fdivr  st(3),st
  4202fd:	lods   al,BYTE PTR ds:[esi]
  4202fe:	push   ebx
  4202ff:	jno    0x4202dc
  420301:	xchg   bl,dh
  420303:	addr16 mov esp,0xd4b28a1b
  420309:	lea    esp,[ecx+0x42]
  42030c:	sbb    eax,0xd3060524
  420311:	rol    DWORD PTR ds:0xc4e6114a,0x48
  420318:	hlt    
  420319:	gs popf 
  42031b:	dec    edx
  42031c:	lock adc eax,0x26c66afc
  420322:	and    edi,DWORD PTR [ebx-0x1290aff1]
  420328:	shl    DWORD PTR [edi+eiz*1],cl
  42032b:	dec    ebp
  42032c:	repz push esp
  42032e:	je     0x4202f6
  420330:	test   eax,0xad67acd7
  420335:	and    esi,DWORD PTR [ecx+0x28e9097c]
  42033b:	pop    esi
  42033c:	adc    al,0x75
  42033e:	jne    0x4202e6
  420340:	call   0x460a:0x99fd7ad9
  420347:	mov    ds:0x4518e6b2,al
  42034c:	loopne 0x4202fe
  42034e:	imul   BYTE PTR [edx+0x312bafd3]
  420354:	jb     0x420382
  420356:	xor    al,BYTE PTR [ecx+0x243b65e6]
  42035c:	dec    ebp
  42035d:	pusha  
  42035e:	rcr    dh,1
  420360:	inc    eax
  420361:	cwde   
  420362:	jmp    0x763a5201
  420367:	into   
  420368:	retf   
  420369:	and    al,0x87
  42036b:	aad    0x37
  42036d:	jne    0x4203bb
  42036f:	mov    ds:0xff50a46,eax
  420374:	mov    ds:0x809c6818,eax
  420379:	ds addr16 mov eax,0x6375e9b9
  420380:	test   eax,0xbcf80a5d
  420385:	push   dx
  420387:	sti    
  420388:	and    dl,BYTE PTR [ecx+ebx*8-0x4c922c3a]
  42038f:	cs mov dl,0x2e
  420392:	jge    0x4203ca
  420394:	mov    fs,WORD PTR [esi+0x17]
  420397:	add    DWORD PTR ds:0x786bedba,esi
  42039d:	loopne 0x420356
  42039f:	test   cl,ch
  4203a1:	shl    DWORD PTR [ebp+0x1b],1
  4203a4:	lods   eax,DWORD PTR ds:[esi]
  4203a5:	in     eax,0xe8
  4203a7:	mov    esp,0xfece6515
  4203ac:	ret    
  4203ad:	mov    esi,eax
  4203af:	xor    DWORD PTR [edx+ebp*1-0x6f],eax
  4203b3:	mov    dh,0xd3
  4203b5:	cdq    
  4203b6:	add    eax,0xc611ebd2
  4203bb:	arpl   bp,sp
  4203bd:	mov    dh,BYTE PTR gs:[esi]
  4203c0:	jecxz  0x420432
  4203c2:	dec    ecx
  4203c3:	pop    esi
  4203c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c5:	mov    eax,ds:0x8a05779e
  4203ca:	jb     0x42039f
  4203cc:	and    esp,DWORD PTR [esi+0x65f883bd]
  4203d2:	scas   al,BYTE PTR es:[edi]
  4203d3:	ror    BYTE PTR [ecx+edi*4-0x3291482e],0x61
  4203db:	add    bl,bh
  4203dd:	cld    
  4203de:	jne    0x4203f1
  4203e0:	jge    0x4203cd
  4203e2:	int    0x17
  4203e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e5:	jno    0x42039b
  4203e7:	imul   ecx,DWORD PTR [edx+0x53a9c986],0xe3ef221b
  4203f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203f2:	jne    0x420456
  4203f4:	dec    ebp
  4203f5:	mov    eax,0xdca8c206
  4203fa:	loop   0x420462
  4203fc:	and    al,0x5f
  4203fe:	sbb    BYTE PTR [ecx],bh
  420400:	out    dx,eax
  420401:	sub    DWORD PTR [ebp+0x23924f87],eax
  420407:	int3   
  420408:	in     al,dx
  420409:	pop    ebx
  42040a:	cmc    
  42040b:	push   ebp
  42040c:	lahf   
  42040d:	rcr    BYTE PTR [ebx+0x66],cl
  420410:	aad    0x6e
  420412:	add    esi,DWORD PTR [ebp-0x2d]
  420415:	mov    eax,ds:0xc1498302
  42041a:	fcom   DWORD PTR [ebp+eiz*8+0x65]
  42041e:	clc    
  42041f:	(bad)  
  420420:	mov    dl,0xe0
  420422:	push   es
  420423:	mov    dl,0xba
  420425:	scas   al,BYTE PTR es:[edi]
  420426:	and    DWORD PTR [edi-0x16],eax
  420429:	jge    0x4203b4
  42042b:	out    0x92,al
  42042d:	es push 0xffffffb3
  420430:	xor    eax,0xdbb56946
  420435:	cwd    
  420437:	cli    
  420438:	sub    DWORD PTR [edi-0x11110f03],0x3c
  42043f:	retf   
  420440:	sbb    eax,0x7fdf98bb
  420445:	jbe    0x42043c
  420447:	jge    0x420475
  420449:	and    BYTE PTR gs:[eax+0x19],bh
  42044d:	fmul   DWORD PTR [edi-0x14ebbecf]
  420453:	mov    ebp,0x8b75fe6d
  420458:	ror    BYTE PTR [ecx-0x6750105],0xb0
  42045f:	adc    BYTE PTR [ebx-0x2b],0x14
  420463:	push   ebx
  420465:	push   ebp
  420466:	call   0x55535a34
  42046b:	lods   eax,DWORD PTR ds:[esi]
  42046c:	pop    ebp
  42046d:	cmc    
  42046e:	jne    0x420442
  420470:	push   edi
  420471:	dec    eax
  420472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420473:	push   esi
  420474:	xlat   BYTE PTR ds:[ebx]
  420475:	outs   dx,DWORD PTR ds:[esi]
  420476:	xor    esp,DWORD PTR [esi+0x69]
  420479:	fcmovu st,st(2)
  42047b:	jae    0x420450
  42047d:	(bad)  
  42047e:	push   ebx
  42047f:	push   ebp
  420480:	mov    al,ds:0x6b68d4ae
  420485:	outs   dx,BYTE PTR ds:[esi]
  420486:	xor    al,0x97
  420488:	mov    ecx,0x8e05f0eb
  42048d:	adc    al,0xf5
  42048f:	push   sp
  420491:	xchg   ah,al
  420493:	mov    eax,ds:0x7275956d
  420498:	in     eax,0x9
  42049a:	inc    esp
  42049b:	mov    esi,0x669ed4a8
  4204a0:	mov    eax,ds:0xd36877d6
  4204a5:	and    WORD PTR [ebp-0x3089c984],ax
  4204ac:	mov    esp,DWORD PTR [esi+0x5d]
  4204af:	inc    ebx
  4204b0:	cmc    
  4204b1:	and    al,0x67
  4204b3:	stos   DWORD PTR es:[edi],eax
  4204b4:	add    ecx,edx
  4204b6:	xchg   esp,eax
  4204b7:	adc    dh,BYTE PTR [edi*2-0x77b9448b]
  4204be:	sar    BYTE PTR [edi+0x669141a1],cl
  4204c4:	push   eax
  4204c5:	sysret 
  4204c7:	add    eax,0xb3ed1ed3
  4204cc:	xchg   ecx,eax
  4204cd:	inc    ebp
  4204ce:	adc    al,BYTE PTR [ecx]
  4204d0:	inc    ebp
  4204d1:	pushw  ds
  4204d3:	mov    ss,WORD PTR [ebx]
  4204d5:	dec    eax
  4204d6:	cmp    DWORD PTR [eax-0x6fa3715e],ecx
  4204dc:	rcl    DWORD PTR ds:0xc9d11014,cl
  4204e2:	or     al,0x95
  4204e4:	std    
  4204e5:	gs ins BYTE PTR es:[edi],dx
  4204e7:	jmp    FWORD PTR ds:0x1384d7a1
  4204ed:	pop    ebp
  4204ee:	mov    edx,0x9881343b
  4204f3:	cmp    BYTE PTR [edi+0xe0aeb1a],0x4e
  4204fa:	xor    eax,0x7f665cff
  4204ff:	sbb    ebp,DWORD PTR gs:[eax]
  420502:	ins    DWORD PTR es:[edi],dx
  420503:	mov    cl,BYTE PTR [esi-0x57]
  420506:	jnp    0x42055f
  420508:	shr    eax,cl
  42050a:	inc    ebx
  42050b:	ds addr16 out dx,al
  42050e:	stc    
  42050f:	and    BYTE PTR [ecx+0x2f653166],0x6e
  420516:	sub    bl,ch
  420518:	lock dec esi
  42051a:	inc    edi
  42051b:	rcl    esi,1
  42051d:	xlat   BYTE PTR ds:[ebx]
  42051e:	jne    0x42051c
  420520:	xor    bl,BYTE PTR ds:0xe6e4360d
  420526:	dec    ecx
  420527:	addr16 in al,0xc
  42052a:	stc    
  42052b:	stos   BYTE PTR es:[edi],al
  42052c:	dec    ebx
  42052d:	pusha  
  42052e:	cwde   
  42052f:	bound  esp,QWORD PTR [edx]
  420531:	data16 jne 0x4204cd
  420534:	jmp    0xf726:0xb13bca7b
  42053b:	xchg   ecx,eax
  42053c:	xor    esi,DWORD PTR [ebp-0x51]
  42053f:	aad    0x41
  420541:	int3   
  420542:	cmp    eax,0x6a211d0c
  420547:	rol    BYTE PTR [eax+0x4b],0x65
  42054b:	rcl    DWORD PTR [ecx],0x8f
  42054e:	cld    
  42054f:	(bad)  
  420550:	out    0xea,eax
  420552:	std    
  420553:	data16 xor al,BYTE PTR [ebp+0x5cd3880c]
  42055a:	fsub   QWORD PTR [edi+0x5291d6aa]
  420560:	sbb    al,0x63
  420562:	xlat   BYTE PTR ds:[ebx]
  420563:	repnz sub edx,DWORD PTR [eax]
  420566:	call   0x8462:0x11a2d38b
  42056d:	test   DWORD PTR [esi+esi*8+0x78],edi
  420571:	popa   
  420572:	out    dx,al
  420573:	pop    ebp
  420574:	dec    ecx
  420575:	adc    ebx,ebx
  420577:	push   es
  420578:	jp     0x420591
  42057a:	es rol DWORD PTR es:[ebp-0x5c],cl
  42057f:	xchg   DWORD PTR [ebx-0x766d3d88],eax
  420585:	inc    si
  420587:	push   ds
  420588:	xor    dh,BYTE PTR [ebx+0x396b0a47]
  42058e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420590:	rol    BYTE PTR [eax],1
  420592:	dec    ebp
  420593:	or     DWORD PTR [eax],ecx
  420595:	(bad)  
  420596:	mov    eax,ds:0x990003e7
  42059b:	fadd   DWORD PTR [ebp+0x6e]
  42059e:	mov    bh,0x72
  4205a0:	mov    ah,0xd6
  4205a2:	mov    esp,0x77c79739
  4205a7:	bound  ebp,QWORD PTR [eax+esi*8]
  4205aa:	push   ebp
  4205ab:	mov    eax,0x3e759e2d
  4205b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b1:	sub    BYTE PTR [edx+edi*8-0x30],ch
  4205b5:	in     al,dx
  4205b6:	mov    ebx,0xca1f4066
  4205bb:	dec    esi
  4205bc:	sar    edi,cl
  4205be:	inc    ebp
  4205bf:	dec    ebp
  4205c0:	pop    edi
  4205c1:	push   ecx
  4205c2:	in     al,0x74
  4205c4:	push   ebx
  4205c5:	gs pop es
  4205c7:	xchg   ebp,eax
  4205c8:	xchg   esi,eax
  4205c9:	or     dl,BYTE PTR [edi-0x12b5e36a]
  4205cf:	into   
  4205d0:	adc    al,0x7a
  4205d2:	push   edi
  4205d3:	icebp  
  4205d4:	sub    BYTE PTR [ebp+0x62fde6df],0x42
  4205db:	popa   
  4205dc:	aas    
  4205dd:	push   eax
  4205de:	mov    bh,0x69
  4205e0:	xchg   esp,eax
  4205e1:	ror    DWORD PTR [esp+eax*1+0x47fc92b0],0x2d
  4205e9:	pop    esp
  4205ea:	pop    es
  4205eb:	mov    dh,0x97
  4205ed:	out    0xbe,al
  4205ef:	out    dx,al
  4205f0:	aas    
  4205f1:	leave  
  4205f2:	add    al,0x7f
  4205f4:	out    0x65,al
  4205f6:	fsubr  DWORD PTR [edx+0x7e]
  4205f9:	ret    
  4205fa:	dec    eax
  4205fb:	shl    BYTE PTR [esi],1
  4205fd:	fwait
  4205fe:	push   es
  4205ff:	add    al,0x10
  420601:	cwde   
  420602:	imul   ecx,ebx,0x5e
  420605:	popa   
  420606:	xrelease xchg BYTE PTR [edx+0x6e],al
  42060a:	jb     0x42061c
  42060c:	push   ebx
  42060d:	xor    BYTE PTR ds:0xf582b0d2,bl
  420613:	dec    edi
  420614:	add    eax,0xe557951e
  420619:	dec    ebx
  42061a:	xchg   edx,eax
  42061b:	adc    dl,BYTE PTR [ecx-0x535a2f23]
  420621:	enter  0x568e,0xb7
  420625:	dec    eax
  420626:	hlt    
  420627:	data16 aad 0xc0
  42062a:	pop    ebp
  42062b:	es hlt 
  42062d:	push   0x3
  42062f:	div    edx
  420631:	lods   al,BYTE PTR ds:[esi]
  420632:	ret    0x511
  420635:	retf   0x5b5
  420638:	call   0xc319:0x1bc59d39
  42063f:	shl    esp,cl
  420641:	cld    
  420642:	cmc    
  420643:	pop    ebx
  420644:	fistp  WORD PTR [ecx+0x6295d85b]
  42064a:	jb     0x420619
  42064c:	lods   al,BYTE PTR ds:[esi]
  42064d:	lahf   
  42064e:	fs dec ecx
  420650:	sahf   
  420651:	sbb    BYTE PTR ds:0x66656efb,dh
  420657:	dec    ebp
  420658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420659:	cmp    BYTE PTR [ebx+eiz*2],0x51
  42065d:	pop    ss
  42065e:	test   eax,0x754cddf5
  420663:	loope  0x420657
  420665:	cli    
  420666:	pop    eax
  420667:	repz pop edi
  420669:	pop    ecx
  42066a:	les    ebp,FWORD PTR [ecx-0x1c]
  42066d:	rol    BYTE PTR [ebp-0x9a2f3b6],1
  420673:	push   ebp
  420674:	aas    
  420675:	outs   dx,BYTE PTR ds:[esi]
  420676:	push   ss
  420677:	loopne 0x4206de
  420679:	loope  0x420660
  42067b:	pushf  
  42067c:	sbb    ch,cl
  42067e:	sti    
  42067f:	xchg   ecx,eax
  420680:	add    ebx,edi
  420682:	aad    0xb
  420684:	rcl    ecx,cl
  420686:	jp     0x4206b0
  420688:	push   ds
  420689:	dec    esp
  42068a:	popf   
  42068b:	or     bh,bh
  42068d:	jge    0x420623
  42068f:	imul   esi,DWORD PTR ds:0xd3609a29,0x28
  420696:	jle    0x420672
  420698:	mov    edi,0xd39ca78c
  42069d:	retf   0xee17
  4206a0:	dec    ebx
  4206a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a2:	xchg   edx,eax
  4206a3:	(bad)  
  4206a4:	jmp    DWORD PTR [ebp+0x36]
  4206a7:	adc    edi,esi
  4206a9:	add    DWORD PTR [ebp+0x39],edx
  4206ac:	dec    edx
  4206ad:	cmc    
  4206ae:	adc    bl,0xb4
  4206b1:	add    DWORD PTR [ebp+0x22],esi
  4206b4:	or     DWORD PTR [ebx*2+0x254178d2],esp
  4206bb:	addr16 dec edi
  4206bd:	test   al,0xfc
  4206bf:	push   edi
  4206c0:	and    BYTE PTR [ecx-0x3621d972],dl
  4206c6:	jne    0x4206f9
  4206c8:	outs   dx,BYTE PTR ds:[esi]
  4206c9:	cmp    eax,DWORD PTR [ebp+0x7c607b40]
  4206cf:	cld    
  4206d0:	out    0xf3,al
  4206d2:	sub    BYTE PTR [ebx+eax*8-0x2c7f5f49],0xab
  4206da:	cmp    al,0xfd
  4206dc:	ret    
  4206dd:	sar    BYTE PTR [esi+0x1e66b487],1
  4206e3:	imul   ebx,DWORD PTR [ebx+0x3e94073a],0x6
  4206ea:	lock (bad) 
  4206ed:	les    edi,FWORD PTR [edi-0x58]
  4206f0:	in     eax,dx
  4206f1:	xchg   esp,eax
  4206f2:	outs   dx,BYTE PTR ds:[esi]
  4206f3:	mov    bl,0x46
  4206f5:	das    
  4206f6:	mov    DWORD PTR [esi-0x70],eax
  4206f9:	xchg   ch,bh
  4206fb:	mov    ebp,0xcfbd6c17
  420700:	or     al,0x44
  420702:	cmc    
  420703:	jmp    0x8bad568a
  420708:	pop    eax
  420709:	scas   eax,DWORD PTR es:[edi]
  42070a:	jne    0x420695
  42070c:	popa   
  42070d:	pop    ecx
  42070e:	(bad)  
  42070f:	fsub   DWORD PTR [eax-0x12]
  420712:	ret    0x80de
  420715:	call   0xd3de7e8f
  42071a:	jae    0x420775
  42071c:	sbb    edi,edi
  42071e:	inc    edi
  42071f:	cmp    BYTE PTR [edx+0x74],cl
  420722:	stos   BYTE PTR es:[edi],al
  420723:	out    0xcc,al
  420725:	or     bl,BYTE PTR [edx]
  420727:	add    al,0xbd
  420729:	xchg   esi,eax
  42072a:	mov    ds:0x1d5ce266,al
  42072f:	add    edx,ebx
  420731:	mov    WORD PTR [esi+ecx*2],cs
  420734:	mov    ch,0x24
  420736:	jo     0x4206f4
  420738:	mul    DWORD PTR [ebp+0x65]
  42073b:	push   edi
  42073c:	push   edi
  42073d:	or     ebx,esi
  42073f:	fdiv   DWORD PTR [edi]
  420741:	or     BYTE PTR [edi+0x7244691e],dl
  420747:	pusha  
  420748:	repz fwait
  42074a:	or     BYTE PTR [edi-0x10],dh
  42074d:	gs repnz cwde 
  420750:	ds cmp al,0x9e
  420753:	sbb    BYTE PTR [ecx],ah
  420755:	xor    eax,0x648384c
  42075a:	jbe    0x420707
  42075c:	adc    ebp,ecx
  42075e:	or     al,0xf5
  420760:	test   eax,0xef43f866
  420765:	xor    cl,BYTE PTR [eax+0x64fc8e7f]
  42076b:	lahf   
  42076c:	adc    DWORD PTR ds:0x146279d9,ebx
  420772:	pop    ds
  420773:	data16 jecxz 0x42073a
  420776:	xchg   DWORD PTR [edi+0x66d34377],esp
  42077c:	push   edi
  42077d:	ins    DWORD PTR es:[edi],dx
  42077e:	jns    0x420711
  420780:	shr    edi,cl
  420782:	enter  0x220b,0x9f
  420786:	xchg   ecx,eax
  420787:	sub    bh,BYTE PTR [ecx+eiz*2-0x6f44e1b3]
  42078e:	pop    eax
  42078f:	push   ebp
  420790:	mov    eax,DWORD PTR [esi]
  420792:	adc    eax,0x2a67f4bf
  420797:	lods   eax,DWORD PTR ds:[esi]
  420798:	push   ebx
  420799:	stos   BYTE PTR es:[edi],al
  42079a:	sub    eax,0x9fe7f5e2
  42079f:	xchg   esp,eax
  4207a0:	test   BYTE PTR [esi-0x6a],ah
  4207a3:	clc    
  4207a4:	inc    BYTE PTR [ebx]
  4207a6:	push   ebp
  4207a7:	sti    
  4207a8:	cmp    al,0x2a
  4207aa:	cld    
  4207ab:	add    al,0xbd
  4207ad:	and    ch,BYTE PTR [ebx-0x6e]
  4207b0:	dec    ebx
  4207b1:	stc    
  4207b2:	mov    ebp,0xf4669ba6
  4207b7:	in     eax,dx
  4207b8:	cmp    bl,BYTE PTR [edx]
  4207ba:	jb     0x42077d
  4207bc:	add    bl,ah
  4207be:	into   
  4207bf:	(bad)  
  4207c0:	sbb    BYTE PTR ds:0xf747b375,bh
  4207c6:	popa   
  4207c7:	xchg   edi,eax
  4207c8:	neg    BYTE PTR [esi+0x63eb6168]
  4207ce:	and    BYTE PTR [ebx+edx*8+0x6d],ch
  4207d2:	sbb    eax,esp
  4207d4:	(bad)  
  4207d5:	mov    al,ds:0xf5d0293a
  4207da:	mov    dh,0x11
  4207dc:	js     0x420801
  4207de:	xchg   ebp,eax
  4207df:	mov    ebp,0x25f5a687
  4207e4:	lea    esi,[edi-0x12]
  4207e7:	add    al,0x1d
  4207e9:	adc    al,0x75
  4207eb:	(bad)  
  4207ec:	or     eax,0x964ee8cf
  4207f1:	sub    ax,0xadf9
  4207f5:	into   
  4207f6:	out    0x41,eax
  4207f8:	lods   al,BYTE PTR ds:[esi]
  4207f9:	add    bl,BYTE PTR [ebp-0x49]
  4207fc:	shr    BYTE PTR [esi+0x76],1
  4207ff:	int3   
  420800:	in     al,0x8d
  420802:	xor    al,0x1d
  420804:	cmp    DWORD PTR [esi-0x13],esp
  420807:	xchg   edx,eax
  420808:	xchg   edi,eax
  420809:	pop    ecx
  42080a:	cs aad 0xf0
  42080d:	inc    ebp
  42080e:	sbb    bl,0xd3
  420811:	pusha  
  420812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420813:	jg     0x4207bf
  420815:	mov    ch,0x93
  420817:	ins    BYTE PTR es:[edi],dx
  420818:	push   ss
  420819:	push   esp
  42081a:	pop    ebp
  42081b:	dec    edx
  42081c:	fnstenv [edi]
  42081e:	xor    edx,DWORD PTR [edx+0x2a95c445]
  420824:	rcl    DWORD PTR [ebx-0xc781e2a],cl
  42082a:	jle    0x4207ad
  42082c:	fdivr  DWORD PTR [esi]
  42082e:	stc    
  42082f:	pop    es
  420830:	push   edx
  420831:	gs pop ebp
  420833:	rcr    BYTE PTR [esi],0x60
  420836:	push   ecx
  420837:	push   0xfa7bb5a7
  42083c:	inc    ecx
  42083d:	retf   0xfc71
  420840:	nop
  420841:	scas   al,BYTE PTR es:[edi]
  420842:	aaa    
  420843:	aaa    
  420844:	fbld   TBYTE PTR [eax]
  420846:	pop    esi
  420847:	xor    eax,0x741b66af
  42084c:	lods   eax,DWORD PTR ds:[esi]
  42084d:	inc    ebp
  42084e:	sbb    ch,bh
  420850:	aas    
  420851:	(bad)  
  420852:	jge    0x4208a9
  420854:	pop    ss
  420855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420856:	call   0x8cce:0x75608db1
  42085d:	mov    ax,WORD PTR [ecx]
  420860:	dec    edi
  420861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420862:	out    dx,al
  420863:	mov    eax,ds:0x4864baf1
  420868:	dec    esi
  420869:	lods   eax,DWORD PTR ds:[esi]
  42086a:	jne    0x4208ce
  42086c:	xor    eax,0xd581ff92
  420871:	push   cs
  420872:	retf   0xb4c2
  420875:	mov    ?,WORD PTR [ebp+0x7e]
  420878:	xor    ah,BYTE PTR [esi]
  42087a:	adc    eax,0x75776ca2
  42087f:	test   ah,bl
  420881:	mov    dl,0x3
  420883:	pop    ds
  420884:	sbb    bl,BYTE PTR [edx+edi*2]
  420887:	data16 mov ds:0xd3c750f0,al
  42088d:	and    ah,BYTE PTR [esi]
  42088f:	ds push ds
  420891:	jle    0x420836
  420893:	ins    DWORD PTR es:[edi],dx
  420894:	imul   DWORD PTR [ebx+0x2d]
  420897:	xor    BYTE PTR [ebp+0x5f],0xf5
  42089b:	sbb    al,0xdf
  42089d:	loop   0x420882
  42089f:	data16 jnp 0x42088a
  4208a2:	out    dx,eax
  4208a3:	ja     0x42091d
  4208a5:	mov    eax,0x13e3ed75
  4208aa:	outs   dx,DWORD PTR ds:[esi]
  4208ab:	xchg   BYTE PTR [edx-0x2c6e1277],al
  4208b1:	retf   0x238f
  4208b4:	sub    dl,BYTE PTR fs:[ecx+0x75e50253]
  4208bb:	stos   DWORD PTR es:[edi],eax
  4208bc:	lods   al,BYTE PTR gs:[esi]
  4208be:	xchg   esi,eax
  4208bf:	icebp  
  4208c0:	adc    eax,0xbe2cb0
  4208c5:	fs cmc 
  4208c7:	mov    eax,0xfb30d898
  4208cc:	sbb    bh,BYTE PTR [ebp-0x5cf1cd8b]
  4208d2:	and    DWORD PTR [edx+ecx*4],edi
  4208d5:	mov    al,ds:0xd4026524
  4208da:	inc    edx
  4208db:	sub    DWORD PTR [ebx-0x77],0xe2d39446
  4208e2:	pop    esp
  4208e3:	sub    DWORD PTR ds:0x8854651a,esp
  4208e9:	inc    ebp
  4208ea:	nop
  4208eb:	sub    al,0x65
  4208ed:	mov    al,ds:0xcd099cf
  4208f2:	inc    edx
  4208f3:	xor    BYTE PTR [eax+0x3a],cl
  4208f6:	and    eax,0x75eac078
  4208fb:	(bad)  
  4208fc:	pop    ds
  4208fd:	lods   eax,DWORD PTR ds:[esi]
  4208fe:	mov    dl,0x36
  420900:	push   edi
  420901:	shr    ebp,1
  420903:	data16 int 0x16
  420906:	fst    DWORD PTR [ecx]
  420908:	rol    DWORD PTR [edx+eiz*8],cl
  42090b:	sub    BYTE PTR ds:[eax+edi*2],ah
  42090f:	out    dx,eax
  420910:	sbb    BYTE PTR [ebp-0x70],ah
  420913:	(bad)  
  420914:	out    dx,eax
  420915:	enter  0x793a,0x54
  420919:	xchg   esi,eax
  42091a:	inc    ebx
  42091b:	mov    cs,edi
  42091d:	in     al,0x99
  42091f:	xchg   al,ch
  420921:	dec    esi
  420922:	jne    0x420925
  420924:	nop
  420925:	sub    BYTE PTR ds:0x132e3900,0x66
  42092c:	inc    eax
  42092d:	inc    edi
  42092e:	aam    0x9f
  420930:	hlt    
  420931:	nop
  420932:	sbb    eax,eax
  420934:	xchg   ebx,eax
  420935:	test   BYTE PTR [ecx+0x5884d1e5],dl
  42093b:	xchg   ebx,eax
  42093c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42093d:	data16 cmp ah,bh
  420940:	(bad)  
  420942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420943:	xlat   BYTE PTR ds:[ebx]
  420944:	outs   dx,BYTE PTR ds:[esi]
  420945:	sub    DWORD PTR [ecx-0x73],0xffffffa1
  420949:	adc    al,0x9b
  42094b:	push   edi
  42094c:	ins    BYTE PTR es:[edi],dx
  42094d:	dec    ebx
  42094e:	and    DWORD PTR [ebx-0x2d],edx
  420951:	dec    esi
  420952:	stc    
  420953:	sub    BYTE PTR [eax-0x55b010c8],bl
  420959:	ret    
  42095a:	jo     0x4209bd
  42095c:	inc    eax
  42095d:	ror    BYTE PTR [edi-0x4be12ceb],cl
  420963:	icebp  
  420964:	xlat   BYTE PTR ds:[ebx]
  420965:	mov    ch,0x28
  420967:	xchg   edi,eax
  420968:	sahf   
  420969:	data16 rcl BYTE PTR [ebp+0x35],cl
  42096d:	pop    eax
  42096e:	dec    esp
  42096f:	pop    edi
  420970:	dec    ebx
  420971:	rol    DWORD PTR [edi+0x47],1
  420974:	jmp    0x798d7f3f
  420979:	dec    ebp
  42097a:	into   
  42097b:	jae    0x42097f
  42097d:	xor    BYTE PTR [ebx-0x379e039a],cl
  420983:	shl    DWORD PTR ds:[eax+0xd],cl
  420987:	inc    ebp
  420988:	neg    DWORD PTR [ebx]
  42098a:	sbb    al,0xb8
  42098c:	inc    eax
  42098d:	sbb    BYTE PTR gs:[bx-0x11b3],0xbd
  420994:	int3   
  420995:	call   0x1475:0x523b9204
  42099c:	in     al,dx
  42099d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099e:	pop    es
  42099f:	into   
  4209a0:	cmp    eax,0x4e664316
  4209a5:	xchg   edx,eax
  4209a6:	ins    DWORD PTR es:[edi],dx
  4209a7:	xor    ecx,eax
  4209a9:	sub    BYTE PTR [ebx+0x723f184e],dl
  4209af:	push   ebp
  4209b0:	aas    
  4209b1:	in     al,0xa3
  4209b3:	mov    al,0xec
  4209b5:	dec    ebp
  4209b6:	cmc    
  4209b7:	test   BYTE PTR [eax+edi*4],cl
  4209ba:	xchg   esi,eax
  4209bb:	data16 test al,0xb7
  4209be:	rcr    DWORD PTR [ebx+0x41],0xfc
  4209c2:	adc    edi,0x8075ab5d
  4209c8:	idiv   BYTE PTR [edi-0x6523ceee]
  4209ce:	pop    ds
  4209cf:	imul   edi,ecx,0xc11e8f25
  4209d5:	mov    dl,0x23
  4209d7:	mov    esi,0x686b1bef
  4209dc:	xor    al,0x37
  4209de:	sbb    eax,DWORD PTR [esi]
  4209e0:	bound  esp,QWORD PTR [esi-0x76]
  4209e3:	inc    esi
  4209e4:	aaa    
  4209e5:	cmp    edi,DWORD PTR [ebx+0x47]
  4209e8:	out    0x75,eax
  4209ea:	icebp  
  4209eb:	cmp    al,0x9b
  4209ed:	test   al,0x1f
  4209ef:	das    
  4209f0:	clc    
  4209f1:	mov    bl,BYTE PTR [edx-0xa60a69f]
  4209f7:	loope  0x420a20
  4209f9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4209fb:	push   DWORD PTR [esi+0x29fa1ba3]
  420a01:	stc    
  420a02:	mov    cl,0xbd
  420a04:	cwde   
  420a05:	shl    BYTE PTR [ebp+0x44],1
  420a08:	inc    ebx
  420a09:	push   cs
  420a0a:	mov    bh,0x50
  420a0c:	xchg   dh,dl
  420a0e:	xchg   ebp,eax
  420a0f:	data16 jl 0x4209f0
  420a12:	ret    0xf21e
  420a15:	ror    DWORD PTR [ebp+0x54a4930d],cl
  420a1b:	js     0x4209c4
  420a1d:	or     DWORD PTR [edx+0x62fb2],esi
  420a23:	cdq    
  420a24:	ret    0x347e
  420a27:	data16 stos BYTE PTR es:[edi],al
  420a29:	mov    ebx,0x82ece4f3
  420a2e:	cmp    eax,0xfaa6b671
  420a33:	cmp    dh,BYTE PTR [ebp-0x1d6e0a2f]
  420a39:	scas   eax,DWORD PTR es:[edi]
  420a3a:	jecxz  0x420aa2
  420a3c:	cmp    al,0x60
  420a3e:	adc    edx,DWORD PTR [ecx+0x4b637ad3]
  420a44:	or     edx,DWORD PTR [esi]
  420a46:	fild   DWORD PTR [ebx+0x5c]
  420a49:	test   ecx,ebx
  420a4b:	sub    BYTE PTR [edi+0x18668000],bh
  420a51:	push   eax
  420a52:	nop
  420a53:	jne    0x420a28
  420a55:	pushf  
  420a56:	inc    ebx
  420a57:	and    al,0xa4
  420a59:	(bad)  
  420a5a:	arpl   bp,bp
  420a5c:	xchg   BYTE PTR [ebp-0x53],dl
  420a5f:	out    0xac,eax
  420a61:	adc    eax,0x3a052fef
  420a66:	xchg   ebp,eax
  420a67:	jb     0x420a3c
  420a69:	and    dh,BYTE PTR [esi+0x31513f54]
  420a6f:	es in  eax,dx
  420a71:	gs gs stos DWORD PTR es:[edi],eax
  420a74:	iret   
  420a75:	inc    edi
  420a76:	jl     0x420a00
  420a78:	dec    ebx
  420a79:	sub    BYTE PTR [eax],0xd
  420a7c:	push   esi
  420a7d:	dec    edi
  420a7e:	jne    0x420a97
  420a80:	xchg   esp,eax
  420a81:	and    cl,BYTE PTR [ebp-0x7a]
  420a84:	pop    esi
  420a85:	cmp    dl,BYTE PTR [edx+0xbd21b82]
  420a8b:	or     dx,sp
  420a8e:	and    DWORD PTR [ebx+0x24],0x2d086383
  420a95:	in     eax,0x6c
  420a97:	push   edi
  420a98:	sub    esp,DWORD PTR [ecx]
  420a9a:	jnp    0x420a3b
  420a9c:	push   ebx
  420a9d:	rol    BYTE PTR [eax-0x4c6ff9a],cl
  420aa3:	stc    
  420aa4:	shr    DWORD PTR [edi+ebp*2-0x2cc52f4d],cl
  420aab:	sbb    DWORD PTR [esi],ecx
  420aad:	inc    ebx
  420aae:	lods   al,BYTE PTR ds:[esi]
  420aaf:	xchg   edi,eax
  420ab0:	xor    eax,0x5f881f41
  420ab5:	mov    ch,0xa
  420ab7:	xchg   bp,ax
  420ab9:	ja     0x420ad2
  420abb:	dec    ebp
  420abc:	mov    al,0x91
  420abe:	jne    0x420a7f
  420ac0:	aaa    
  420ac1:	sti    
  420ac2:	mov    WORD PTR ds:0x66790c9b,fs
  420ac8:	and    edx,eax
  420aca:	fsub   QWORD PTR [edi-0x2d]
  420acd:	push   edx
  420ace:	cmp    ah,BYTE PTR [edi-0x6e1b5156]
  420ad4:	xchg   DWORD PTR [esi-0x7a],esp
  420ad7:	or     DWORD PTR [eax-0x5beb4334],edi
  420add:	shl    bh,0x61
  420ae0:	pop    es
  420ae1:	daa    
  420ae2:	jbe    0x420aa8
  420ae4:	clc    
  420ae5:	lds    ebx,FWORD PTR [edi]
  420ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae9:	data16 lahf 
  420aeb:	push   ds
  420aec:	inc    ecx
  420aed:	inc    ecx
  420aee:	ins    DWORD PTR es:[edi],dx
  420aef:	or     esp,DWORD PTR [ebx-0x3b]
  420af2:	aad    0x72
  420af4:	push   ebp
  420af5:	in     eax,dx
  420af6:	ja     0x420ab4
  420af8:	push   cs
  420af9:	jp     0x420b55
  420afb:	jo     0x420b36
  420afd:	mov    edi,0xd1076635
  420b02:	imul   ecx,ebx,0xfffffff1
  420b05:	pusha  
  420b06:	call   0x2b49:0x71661986
  420b0d:	jmp    0x420b8a
  420b0f:	mov    eax,ds:0x2e51a6ce
  420b14:	ror    DWORD PTR [ebx-0x6a],cl
  420b17:	dec    edi
  420b18:	mov    ch,0xf
  420b1a:	cli    
  420b1b:	ror    dl,cl
  420b1d:	cs adc ax,0x7b32
  420b22:	ja     0x420b07
  420b24:	and    ebx,esi
  420b26:	xchg   esp,eax
  420b27:	imul   edx,ebx,0x3bf5c61b
  420b2d:	loope  0x420b99
  420b2f:	xchg   esp,eax
  420b30:	sbb    BYTE PTR [ebp+0x16],ah
  420b33:	call   0x5ee5d84f
  420b38:	or     eax,esp
  420b3a:	jnp    0x420b87
  420b3c:	xor    eax,0x5f62b93a
  420b41:	jmp    0x9e0bf22b
  420b46:	mov    edi,0x99304e72
  420b4b:	(bad)
  420b4f:	mov    bl,0x8b
  420b51:	inc    edx
  420b52:	hlt    
  420b53:	jne    0x420b1a
  420b55:	aaa    
  420b56:	mov    ds:0xb8657f87,al
  420b5b:	sahf   
  420b5c:	xor    edx,edx
  420b5e:	sbb    DWORD PTR [ecx+0xe2a6d81],esi
  420b64:	frstor [ecx+esi*8+0x26a86500]
  420b6b:	daa    
  420b6c:	out    0x2c,eax
  420b6e:	loope  0x420bc6
  420b70:	cmp    BYTE PTR [ecx],0x75
  420b73:	out    0x2d,al
  420b75:	jmp    0x660c:0xc3721df7
  420b7c:	xchg   edi,eax
  420b7d:	xchg   edi,eax
  420b7e:	loop   0x420bac
  420b80:	pop    ebp
  420b81:	push   esi
  420b82:	or     BYTE PTR [edi-0x2a89cdf8],al
  420b88:	arpl   bp,bp
  420b8a:	(bad)  
  420b8b:	stos   DWORD PTR es:[edi],eax
  420b8c:	mov    dl,0x66
  420b8e:	xchg   bh,bh
  420b90:	outs   dx,BYTE PTR ds:[esi]
  420b91:	leave  
  420b92:	jbe    0x420b7d
  420b94:	jmp    0x8c5627ba
  420b99:	bnd jne 0x420b79
  420b9c:	or     al,0x64
  420b9e:	push   edi
  420b9f:	inc    esi
  420ba0:	idiv   BYTE PTR [edi+0x6c]
  420ba3:	popa   
  420ba4:	in     eax,0x57
  420ba6:	sbb    eax,0xc683d337
  420bab:	mov    edi,0xee82f7c2
  420bb0:	sbb    DWORD PTR [esp+ebp*4-0x22],edx
  420bb4:	mov    bl,0xc4
  420bb6:	call   0xd313:0xd5243e2a
  420bbd:	push   ds
  420bbe:	loopne 0x420b54
  420bc0:	(bad)  
  420bc1:	mov    ch,0x1
  420bc3:	shr    DWORD PTR [ebp+0x6999ea34],0x65
  420bca:	pop    ebp
  420bcb:	imul   eax,ebx,0x5a
  420bce:	das    
  420bcf:	sbb    eax,0x1e3ba373
  420bd4:	rcl    ebx,cl
  420bd6:	dec    eax
  420bd7:	test   DWORD PTR [edx-0x583e55cc],edx
  420bdd:	mov    dh,0xcf
  420bdf:	ret    0x7eea
  420be2:	sbb    BYTE PTR [edx+ecx*2-0x23c8a3e],bh
  420be9:	daa    
  420bea:	ja     0x420c65
  420bec:	and    bl,bl
  420bee:	jne    0x420bf8
  420bf0:	iret   
  420bf1:	inc    esi
  420bf2:	sub    ebx,DWORD PTR [ecx-0x30]
  420bf5:	lds    esi,FWORD PTR ds:[esi+0x53]
  420bf9:	mov    eax,0x93f673fe
  420bfe:	jge    0x420ba3
  420c00:	ror    eax,cl
  420c02:	jno    0x420bb0
  420c04:	and    BYTE PTR [edi+0xb],al
  420c07:	jnp    0x420c50
  420c09:	gs push edx
  420c0b:	jns    0x420bad
  420c0d:	retf   0x3ecd
  420c10:	in     al,dx
  420c11:	jno    0x420c3b
  420c13:	rcl    ebx,cl
  420c15:	mov    eax,0xbb7ff6fc
  420c1a:	xchg   edx,ebx
  420c1c:	inc    ecx
  420c1d:	gs sti 
  420c1f:	(bad)  
  420c20:	imul   edx,DWORD PTR [edx+0x69],0x7c
  420c24:	out    0x1c,al
  420c26:	push   ebp
  420c27:	cmp    al,0xf1
  420c29:	pop    edx
  420c2a:	cwde   
  420c2b:	add    ebx,edx
  420c2d:	fwait
  420c2e:	and    dl,BYTE PTR [edi-0x5a]
  420c31:	ja     0x420c03
  420c33:	pop    es
  420c34:	mov    bh,0x13
  420c36:	add    BYTE PTR [ecx+0x1f58c9f3],dl
  420c3c:	out    dx,eax
  420c3d:	push   ss
  420c3e:	sub    bh,BYTE PTR [eax-0x21]
  420c41:	je     0x420cb9
  420c43:	inc    edi
  420c44:	jbe    0x420c03
  420c46:	in     eax,dx
  420c47:	(bad)  
  420c49:	les    edx,FWORD PTR cs:[ebx+edx*8+0x67]
  420c4e:	in     al,0xea
  420c50:	call   0x3e75:0xd3979ba3
  420c57:	cmc    
  420c58:	pop    eax
  420c59:	mov    eax,ds:0x654b7209
  420c5e:	pop    eax
  420c5f:	dec    ecx
  420c60:	pminsw mm4,mm2
  420c63:	aam    0xda
  420c65:	pop    eax
  420c66:	adc    DWORD PTR [esi],edi
  420c68:	jecxz  0x420c0f
  420c6a:	arpl   WORD PTR [ecx+0x2b],bp
  420c6d:	sahf   
  420c6e:	jne    0x420c0d
  420c70:	mov    ebx,0x36b47e78
  420c75:	sbb    eax,0x546634
  420c7a:	pop    ebx
  420c7b:	fst    QWORD PTR [edx+0x17]
  420c7e:	dec    esi
  420c7f:	stos   BYTE PTR es:[edi],al
  420c80:	cmp    eax,0xa7ab750f
  420c85:	iret   
  420c86:	inc    edx
  420c87:	pop    ds
  420c88:	jbe    0x420d01
  420c8a:	inc    ebp
  420c8b:	pop    sp
  420c8d:	inc    ebx
  420c8e:	int    0x18
  420c90:	shr    DWORD PTR [edx-0x14],cl
  420c93:	(bad)  
  420c94:	or     BYTE PTR [edi-0x1e],al
  420c97:	dec    eax
  420c98:	outs   dx,DWORD PTR ds:[esi]
  420c99:	fiadd  DWORD PTR [ecx-0x76]
  420c9c:	retf   
  420c9d:	xor    BYTE PTR [esi+0x1b],dl
  420ca0:	shl    DWORD PTR [eax+0x21f2f412],cl
  420ca6:	inc    eax
  420ca7:	retf   0x61b4
  420caa:	ror    edi,0x9d
  420cad:	push   eax
  420cae:	pop    ds
  420caf:	cmp    al,0xa0
  420cb1:	rol    DWORD PTR [eax+0x74520e20],cl
  420cb7:	jge    0x420ccb
  420cb9:	mov    esp,0x2bb748c2
  420cbe:	and    al,0xe6
  420cc0:	sti    
  420cc1:	out    dx,al
  420cc2:	pop    es
  420cc3:	fcomp  QWORD PTR [ecx-0x7699e903]
  420cc9:	hlt    
  420cca:	adc    ebp,0x8b906c0
  420cd0:	rcr    DWORD PTR [ebx+ecx*4-0x275b466e],cl
  420cd7:	cdq    
  420cd8:	mov    bl,0x8c
  420cda:	xchg   edi,eax
  420cdb:	fs jo  0x420cca
  420cde:	push   ebp
  420cdf:	data16 aad 0x12
  420ce2:	or     DWORD PTR [ecx+edx*8+0xb],0xffffffe6
  420ce7:	imul   edx,esp,0x4a
  420cea:	jb     0x420cf2
  420cec:	xlat   BYTE PTR ds:[ebx]
  420ced:	and    DWORD PTR [ecx+0x9],esi
  420cf0:	inc    eax
  420cf1:	mov    bh,0x5a
  420cf3:	imul   edx,DWORD PTR [edi+0x15],0x4d8a0d4c
  420cfa:	fs loope 0x420d5f
  420cfd:	lock jb 0x420cdb
  420d00:	or     DWORD PTR [esi+edx*1+0x24],0xffffffed
  420d05:	mov    ebx,DWORD PTR [edi+eiz*4]
  420d08:	xor    eax,0x1e669de6
  420d0d:	and    DWORD PTR [eax-0x54],esi
  420d10:	rcr    ebx,cl
  420d12:	inc    edx
  420d13:	adc    bh,BYTE PTR [ebx+0x7a]
  420d16:	mov    ds:0xe22447ec,eax
  420d1b:	pop    ecx
  420d1c:	rcr    DWORD PTR [edx],cl
  420d1e:	outs   dx,BYTE PTR ds:[esi]
  420d1f:	ficomp WORD PTR [ecx+ebx*2-0x74]
  420d23:	fcmovnbe st,st(3)
  420d25:	or     esp,DWORD PTR [edx-0x2b7c5ecf]
  420d2b:	out    dx,eax
  420d2c:	add    DWORD PTR [ebp+0xe2acb1b],esp
  420d32:	das    
  420d33:	ret    0xb45d
  420d36:	and    eax,DWORD PTR [esi+0x76]
  420d39:	test   BYTE PTR [ebp-0x74],dh
  420d3c:	and    esp,0xffffffe4
  420d3f:	or     dh,bl
  420d41:	iret   
  420d42:	cmp    ah,BYTE PTR [esi+0x26]
  420d45:	cs nop
  420d47:	push   ecx
  420d48:	shl    DWORD PTR [ebx],cl
  420d4a:	lods   eax,DWORD PTR ds:[esi]
  420d4b:	inc    edi
  420d4c:	inc    esi
  420d4d:	icebp  
  420d4e:	inc    ecx
  420d4f:	fnsave [esp+eiz*2+0x65394dc6]
  420d56:	push   ss
  420d57:	loop   0x420dba
  420d59:	or     edi,DWORD PTR [esi-0x49b14065]
  420d5f:	repz ror DWORD PTR [edi+0x7d],cl
  420d63:	pushf  
  420d64:	jge    0x420d98
  420d66:	les    edi,FWORD PTR [ebx+ebx*2-0x481f4d97]
  420d6d:	cld    
  420d6e:	inc    ebp
  420d6f:	nop
  420d70:	rol    DWORD PTR [edi],cl
  420d72:	in     eax,0x33
  420d74:	sub    eax,0x1304fe7c
  420d79:	les    esi,FWORD PTR gs:[esi+0x28700137]
  420d80:	int    0xec
  420d82:	test   al,0x8b
  420d85:	ins    DWORD PTR es:[edi],dx
  420d86:	jne    0x420e03
  420d88:	sbb    eax,DWORD PTR [esi+0x54]
  420d8b:	das    
  420d8c:	dec    ebx
  420d8d:	pop    ebp
  420d8e:	sub    DWORD PTR [ecx+0x56],ebp
  420d91:	cmp    esi,DWORD PTR gs:[ebx]
  420d94:	dec    ebp
  420d95:	lahf   
  420d96:	scas   eax,DWORD PTR es:[edi]
  420d97:	mov    al,ds:0xef7538c7
  420d9c:	in     al,dx
  420d9d:	mov    ebp,0x5f0c83f6
  420da2:	(bad)
  420da6:	iret   
  420da7:	and    DWORD PTR [edx-0x7b7dda0a],esp
  420dad:	or     dh,BYTE PTR [ebp-0x3]
  420db0:	int3   
  420db1:	iret   
  420db2:	addr16 push es
  420db4:	mov    eax,ds:0xb06637ee
  420db9:	dec    ebx
  420dba:	xchg   ebp,eax
  420dbb:	mov    ds:0x9acf9952,eax
  420dc0:	mov    eax,0x3839758f
  420dc5:	sub    BYTE PTR [ebx],dh
  420dc7:	or     eax,0x66d889e1
  420dcc:	test   ebx,eax
  420dce:	sbb    al,0xd3
  420dd1:	sbb    BYTE PTR [ebx],al
  420dd3:	mov    edi,0x42b873e
  420dd8:	mov    dh,0x66
  420dda:	xchg   ecx,eax
  420ddb:	scas   al,BYTE PTR es:[edi]
  420ddc:	xchg   ebp,eax
  420ddd:	stos   BYTE PTR es:[edi],al
  420dde:	test   eax,0xc979381b
  420de3:	push   ebx
  420de4:	cli    
  420de5:	(bad)  [edx-0x79]
  420de8:	mov    bl,0x6f
  420dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420deb:	ret    
  420dec:	jno    0x420e53
  420dee:	sahf   
  420def:	popa   
  420df0:	jae    0x420d78
  420df2:	stc    
  420df3:	ds in  al,0x63
  420df6:	ja     0x420d7c
  420df8:	nop
  420df9:	xchg   edx,eax
  420dfa:	jb     0x420d93
  420dfc:	sbb    DWORD PTR [ebx],0xfffffff1
  420dff:	fsubr  QWORD PTR [eax+0x65]
  420e02:	cmp    ebx,DWORD PTR [ecx-0x2ee5d769]
  420e08:	sti    
  420e09:	jecxz  0x420e73
  420e0b:	xor    BYTE PTR [eax],cl
  420e0d:	add    BYTE PTR [ebp-0x74],dh
  420e10:	leave  
  420e11:	xadd   BYTE PTR [eax-0x4b],bl
  420e15:	sti    
  420e16:	call   0xae580784
  420e1b:	push   esp
  420e1c:	ins    DWORD PTR es:[edi],dx
  420e1d:	add    dh,BYTE PTR [eax+esi*4+0x24]
  420e21:	outs   dx,BYTE PTR ds:[esi]
  420e22:	outs   dx,DWORD PTR ds:[esi]
  420e23:	ja     0x420df8
  420e25:	jl     0x420dce
  420e27:	push   cs
  420e28:	push   ebx
  420e29:	mov    ah,0x7f
  420e2b:	sub    eax,DWORD PTR [esi+ebp*1+0x8ff66ec]
  420e32:	xchg   edx,eax
  420e33:	adc    edx,ebx
  420e35:	stc    
  420e36:	adc    al,0xf3
  420e38:	std    
  420e39:	outs   dx,DWORD PTR ds:[esi]
  420e3a:	jno    0x420ddf
  420e3c:	or     eax,0x51c57e5b
  420e41:	and    cl,bh
  420e43:	push   ebp
  420e44:	push   esp
  420e45:	in     eax,0xe5
  420e47:	lahf   
  420e48:	dec    edx
  420e49:	xor    ah,dl
  420e4b:	inc    esi
  420e4c:	rcr    DWORD PTR [eax+0x3d],cl
  420e4f:	loop   0x420e98
  420e51:	loop   0x420e81
  420e53:	sub    al,0x97
  420e55:	pushw  0x4b
  420e58:	sub    dh,BYTE PTR [ebx-0x4f611ee3]
  420e5e:	test   esp,ecx
  420e60:	lds    esi,FWORD PTR [esp+esi*2]
  420e63:	push   ss
  420e64:	bound  ebp,QWORD PTR [ebx+eiz*1+0x42]
  420e68:	fsub   DWORD PTR [esi+0x7d]
  420e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e6c:	ja     0x420e04
  420e6e:	jo     0x420e5b
  420e70:	fwait
  420e71:	jecxz  0x420e37
  420e73:	cmp    ebp,esp
  420e75:	dec    edi
  420e76:	dec    edi
  420e77:	ret    0x6c8
  420e7a:	ficomp WORD PTR [ebx-0x34f78cc1]
  420e80:	and    al,0xb8
  420e82:	imul   ebp,DWORD PTR [edx-0x31],0x813b34a6
  420e89:	cmp    eax,0xe3573785
  420e8e:	jb     0x420ee9
  420e90:	arpl   WORD PTR [ebx-0x3a0679aa],cx
  420e96:	cli    
  420e97:	xchg   edx,eax
  420e98:	cwde   
  420e99:	data16 neg BYTE PTR [esi-0x778f274b]
  420ea0:	jle    0x420ec2
  420ea2:	call   0xc5cae252
  420ea7:	add    bh,dl
  420ea9:	push   eax
  420eaa:	sub    eax,0x8e146927
  420eaf:	xor    DWORD PTR [ebx],edi
  420eb1:	fild   QWORD PTR [ecx+0x41]
  420eb4:	jbe    0x420f00
  420eb6:	jne    0x420f03
  420eb8:	mov    esi,0x645d9cac
  420ebd:	lahf   
  420ebe:	dec    ebp
  420ebf:	push   ax
  420ec1:	and    cl,dl
  420ec3:	stos   BYTE PTR es:[edi],al
  420ec4:	pop    es
  420ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec6:	ret    
  420ec7:	retf   
  420ec8:	shr    edi,cl
  420eca:	adc    bh,0x79
  420ecd:	mov    edx,0xb4c8a33
  420ed3:	data16 je 0x420ef4
  420ed6:	dec    eax
  420ed7:	add    eax,0x233c425f
  420edc:	jne    0x420f3a
  420ede:	mov    ecx,0x86e9e59b
  420ee3:	addr16 daa 
  420ee5:	pop    ebx
  420ee6:	mov    WORD PTR [esi-0xca97900],fs
  420eec:	(bad)  
  420eee:	shl    DWORD PTR [esi-0x20],1
  420ef1:	mov    al,0x48
  420ef3:	jo     0x420ed6
  420ef5:	dec    ecx
  420ef6:	(bad)  [edi-0x36d50e2d]
  420efc:	enter  0x85cd,0x25
  420f00:	pop    eax
  420f01:	js     0x420ecb
  420f03:	data16 lods al,BYTE PTR ds:[esi]
  420f05:	jmp    0xbc87:0x7eee1df0
  420f0c:	mov    esi,0x216f29fa
  420f11:	xor    BYTE PTR [ebp-0x369afb1a],dh
  420f17:	jecxz  0x420ef6
  420f19:	or     al,0x27
  420f1b:	adc    BYTE PTR [esi],0x69
  420f1e:	add    DWORD PTR cs:[ecx+edi*1+0x75],esi
  420f23:	xor    edx,DWORD PTR [edx-0x5865dd1]
  420f29:	push   eax
  420f2a:	xor    esp,DWORD PTR [esi-0x75]
  420f2d:	(bad)  
  420f2e:	and    DWORD PTR [edx],ebx
  420f30:	sar    DWORD PTR [edx],cl
  420f32:	or     BYTE PTR [ebp+0x18968e],0x93
  420f39:	xor    BYTE PTR [eax],0x8
  420f3c:	jl     0x420ecb
  420f3e:	sub    edx,eax
  420f40:	retf   
  420f41:	mov    ds:0xf92590b5,al
  420f46:	or     DWORD PTR [edi-0x2e73c45],eax
  420f4c:	pop    esp
  420f4d:	retf   0x66fd
  420f50:	icebp  
  420f51:	neg    BYTE PTR [ebx+0x3e]
  420f54:	out    dx,al
  420f55:	int    0x73
  420f57:	xor    DWORD PTR [edi+eax*8-0x4ceb1af2],esp
  420f5e:	rol    DWORD PTR [esi],0x1f
  420f61:	adc    bl,bl
  420f63:	data16 into 
  420f65:	inc    edx
  420f66:	std    
  420f67:	jmp    0xa37e:0xcadee6d3
  420f6e:	sbb    dh,BYTE PTR [ebx+0x52]
  420f71:	gs pop ds
  420f73:	jno    0x420f1c
  420f75:	(bad)  
  420f76:	call   0xf9003234
  420f7b:	jp     0x420faa
  420f7d:	add    al,0x75
  420f7f:	sub    cl,cl
  420f81:	rep outs dx,DWORD PTR ds:[esi]
  420f83:	lock jmp 0x27a81a91
  420f89:	or     ecx,ebp
  420f8b:	mov    ah,0xd3
  420f8d:	sub    al,BYTE PTR [edi+0xf]
  420f90:	fwait
  420f91:	mov    cl,al
  420f93:	aam    0xfe
  420f95:	shl    BYTE PTR gs:[ecx+0x4cfe2fcc],1
  420f9c:	(bad)  
  420f9d:	jg     0x420f81
  420f9f:	out    dx,eax
  420fa0:	push   eax
  420fa1:	jmp    0x659f8a1c
  420fa6:	pop    ebx
  420fa7:	mov    BYTE PTR [esi+0x1c],cl
  420faa:	adc    DWORD PTR [edx],ebp
  420fac:	inc    esi
  420fad:	rol    BYTE PTR [ebp+0x7490e514],cl
  420fb3:	gs push ecx
  420fb5:	test   eax,0x6b12b92b
  420fba:	aad    0xe5
  420fbc:	push   ebp
  420fbd:	lods   al,BYTE PTR ds:[esi]
  420fbe:	sbb    al,0xd7
  420fc0:	pop    esi
  420fc1:	mov    al,ds:0x8c3b7395
  420fc6:	out    dx,al
  420fc7:	sbb    al,0xd0
  420fc9:	xchg   DWORD PTR [ebx+0x61],ebp
  420fcc:	cmp    al,BYTE PTR [ecx+eax*1-0x7c7ae434]
  420fd3:	pushw  0x5e
  420fd6:	adc    ecx,ecx
  420fd8:	out    dx,al
  420fd9:	mov    ebp,0x2ff09750
  420fde:	jae    0x420ff3
  420fe0:	call   0x73688cba
  420fe5:	inc    ebx
  420fe6:	mov    WORD PTR [ecx-0x1b],gs
  420fe9:	or     BYTE PTR [ecx],cl
  420feb:	and    al,0x7f
  420fed:	adc    ebp,esi
  420fef:	mov    dh,0x7b
  420ff1:	xor    ebx,DWORD PTR [edx-0x4b]
  420ff4:	adc    bh,ch
  420ff6:	jb     0x421024
  420ff8:	ret    
  420ff9:	(bad)  
  420ffa:	rcl    edi,1
  420ffc:	lea    esp,[esi-0x4]
  420fff:	pushf  
  421000:	xor    DWORD PTR [ecx],esi
  421002:	rcr    al,0x41
  421005:	call   0x4b44479a
  42100a:	jne    0x420fe4
  42100c:	xchg   DWORD PTR [edi+0x23bbf521],ebp
  421012:	add    DWORD PTR [edi+0x75],0xffffffd9
  421016:	int    0xa1
  421018:	inc    edi
  421019:	cwde   
  42101a:	aad    0x3e
  42101c:	arpl   WORD PTR [edx-0x5d],bp
  42101f:	jecxz  0x42106d
  421021:	lock jb 0x42101b
  421024:	repz sbb esi,ecx
  421027:	test   DWORD PTR [ebp+0x4dc5f266],esi
  42102d:	and    eax,0x9b81d5e1
  421032:	lods   eax,DWORD PTR ds:[esi]
  421033:	loope  0x420ff6
  421035:	cmp    eax,0x78767799
  42103a:	xor    eax,0xc65e96a
  42103f:	fisub  DWORD PTR [edx+0x38]
  421042:	push   cs
  421043:	cmc    
  421044:	push   eax
  421045:	adc    bh,0x3a
  421048:	retf   
  421049:	div    DWORD PTR [ebp+0x62]
  42104c:	test   al,0x42
  42104e:	sti    
  42104f:	(bad)
  421052:	in     al,0xc2
  421054:	outs   dx,DWORD PTR ds:[esi]
  421055:	stos   BYTE PTR es:[edi],al
  421056:	imul   ecx,DWORD PTR ds:0x9575d274,0xfffffffe
  42105d:	adc    dh,BYTE PTR [ebx]
  42105f:	in     eax,dx
  421060:	rol    BYTE PTR [edx-0x5598d4a],1
  421066:	in     al,dx
  421067:	lods   al,BYTE PTR ds:[esi]
  421068:	and    DWORD PTR [edx+0x29],esp
  42106b:	jns    0x42109e
  42106d:	pushf  
  42106e:	data16 ins BYTE PTR es:[edi],dx
  421070:	es dec ebp
  421072:	pop    esi
  421073:	out    0xdf,al
  421075:	(bad)
  421078:	fst    DWORD PTR [esi]
  42107a:	push   0x15
  42107c:	jnp    0x4210b0
  42107e:	(bad)  
  42107f:	xchg   WORD PTR [edx+0x40],bx
  421083:	jp     0x4210e3
  421085:	clc    
  421086:	repnz adc BYTE PTR [ebx+0x1be9756f],bh
  42108d:	cmp    al,0x7b
  42108f:	loop   0x421064
  421091:	push   ds
  421092:	ret    
  421093:	popf   
  421094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421095:	mov    ebx,0x653e30b9
  42109a:	push   edi
  42109b:	add    eax,0x14c033d9
  4210a0:	jae    0x42105b
  4210a2:	(bad)  
  4210a3:	rcr    DWORD PTR [eax],0x15
  4210a6:	jne    0x421125
  4210a8:	xor    ebx,DWORD PTR ds:0x653085c2
  4210ae:	ins    BYTE PTR es:[edi],dx
  4210af:	dec    DWORD PTR [eax-0x67]
  4210b2:	or     al,BYTE PTR [esi-0x77]
  4210b5:	stos   DWORD PTR es:[edi],eax
  4210b6:	xchg   BYTE PTR [edx],dh
  4210b8:	push   esp
  4210b9:	xchg   ebp,eax
  4210ba:	jne    0x421090
  4210bc:	sti    
  4210bd:	js     0x4210b1
  4210bf:	xchg   edx,eax
  4210c0:	sub    BYTE PTR [ebx-0x75],0x66
  4210c4:	xchg   esp,eax
  4210c5:	repnz and al,0xd3
  4210c8:	sar    DWORD PTR [eax],cl
  4210ca:	xchg   edx,eax
  4210cb:	and    DWORD PTR ds:0x126d8b6,edx
  4210d1:	gs aad 0x94
  4210d4:	idiv   ecx
  4210d6:	unpcklps xmm1,xmm6
  4210d9:	fidivr WORD PTR [ecx]
  4210db:	jb     0x421065
  4210dd:	retf   0xaf62
  4210e0:	pop    ds
  4210e1:	inc    edi
  4210e2:	jne    0x4210d0
  4210e4:	or     eax,0x51b63df5
  4210e9:	rol    BYTE PTR [edx],0x94
  4210ec:	mov    ecx,0x7966a2d3
  4210f1:	ss cwde 
  4210f3:	shr    edx,cl
  4210f5:	push   eax
  4210f6:	(bad)  
  4210f7:	xchg   edi,eax
  4210f8:	jecxz  0x4210ae
  4210fa:	push   ds
  4210fb:	adc    ebx,esp
  4210fd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ff:	scas   al,BYTE PTR es:[edi]
  421100:	fsub   DWORD PTR [ecx+eax*8+0x66]
  421104:	loope  0x42115e
  421106:	dec    edi
  421107:	lods   al,BYTE PTR ds:[esi]
  421108:	cmc    
  421109:	out    dx,al
  42110a:	push   esi
  42110b:	dec    edi
  42110c:	adc    eax,edx
  42110e:	mov    eax,ds:0xb9be8142
  421113:	pop    esi
  421114:	dec    ebx
  421115:	mov    edx,0x810291bf
  42111a:	por    mm0,QWORD PTR [ebx-0xab8ac00]
  421121:	lea    ecx,[edi+0x75]
  421124:	sub    al,0xaa
  421126:	sbb    eax,0xd30e933b
  42112b:	cwde   
  42112c:	and    ch,BYTE PTR [ecx+ebp*1-0x46]
  421130:	pusha  
  421131:	add    BYTE PTR [ecx-0x3d],dl
  421134:	bound  edx,QWORD PTR [ecx+0x55]
  421137:	sbb    ah,0xec
  42113a:	aad    0xdd
  42113c:	push   ss
  42113d:	stc    
  42113e:	pop    edi
  42113f:	fcomp  DWORD PTR [edi-0x6e993171]
  421145:	ret    0x7087
  421148:	les    edx,FWORD PTR [eax]
  42114a:	mov    eax,ds:0x1ba17199
  42114f:	xchg   ecx,eax
  421150:	leave  
  421151:	scas   eax,DWORD PTR es:[edi]
  421152:	jne    0x42117e
  421154:	shl    DWORD PTR [edi],cl
  421156:	outs   dx,BYTE PTR ds:[esi]
  421157:	js     0x4211bf
  421159:	mov    ebp,0x558254f1
  42115e:	scas   eax,DWORD PTR es:[edi]
  42115f:	xlat   BYTE PTR ds:[ebx]
  421160:	rol    esp,0x7b
  421163:	mov    ah,BYTE PTR [esi]
  421165:	icebp  
  421166:	push   ebp
  421167:	dec    ebx
  421168:	shr    DWORD PTR [edx+0x14],cl
  42116b:	sub    DWORD PTR [eax],eax
  42116d:	es sub ebx,ebx
  421170:	fwait
  421171:	push   esp
  421172:	gs test al,0xc
  421175:	mov    esi,0x4f9171c6
  42117a:	cmp    BYTE PTR [esi],ah
  42117c:	not    DWORD PTR [ecx]
  42117e:	cmp    dh,BYTE PTR [esi]
  421180:	dec    ebp
  421181:	iret   
  421182:	(bad)  
  421183:	loopne 0x4211eb
  421185:	and    dh,BYTE PTR [edx-0x1e]
  421188:	std    
  421189:	dec    ebx
  42118a:	in     eax,0x7f
  42118c:	(bad)  
  42118d:	scas   al,BYTE PTR es:[edi]
  42118e:	dec    ecx
  42118f:	imul   esi,DWORD PTR [esi],0xffffffa5
  421192:	inc    edi
  421193:	pop    esp
  421194:	js     0x4211a2
  421196:	imul   ebx,eax,0xffffffee
  421199:	rol    DWORD PTR [ebp+0x25],0x38
  42119d:	pop    ss
  42119e:	add    cl,BYTE PTR [edi+esi*2]
  4211a1:	cmp    bl,0x6
  4211a4:	(bad)  
  4211a6:	push   edx
  4211a7:	dec    edx
  4211a9:	rol    BYTE PTR [eax],0x66
  4211ac:	sub    DWORD PTR [eax-0x511570f0],edi
  4211b2:	cmp    BYTE PTR [edi+0x3a307487],bl
  4211b8:	stos   BYTE PTR es:[edi],al
  4211b9:	frstor [edi+ecx*8]
  4211bc:	in     eax,dx
  4211bd:	gs jge 0x42123e
  4211c0:	pop    edx
  4211c1:	(bad)  
  4211c2:	mov    BYTE PTR [ecx+0x75],ah
  4211c5:	push   edx
  4211c6:	ins    DWORD PTR es:[edi],dx
  4211c7:	and    eax,0x94742910
  4211cc:	xchg   esp,eax
  4211cd:	setle  BYTE PTR [edx]
  4211d0:	mov    bl,0x11
  4211d2:	push   eax
  4211d3:	ret    0x28e8
  4211d6:	scas   eax,DWORD PTR es:[edi]
  4211d7:	xor    al,0x17
  4211da:	cwde   
  4211db:	jmp    0x18048f3
  4211e0:	mov    edx,0x5c403f4f
  4211e5:	enter  0x9b75,0x69
  4211e9:	int3   
  4211ea:	mov    ah,0x1d
  4211ec:	pop    ebx
  4211ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ee:	mov    fs,WORD PTR [esi+0x40]
  4211f1:	dec    edi
  4211f2:	jnp    0x4211d8
  4211f4:	rol    eax,cl
  4211f6:	stc    
  4211f7:	mov    eax,ds:0x1849365b
  4211fc:	mov    eax,0x5c5a2966
  421201:	mov    edi,0xc72a9a4e
  421206:	push   eax
  421207:	inc    ecx
  421208:	mov    WORD PTR [ecx+0x75],fs
  42120b:	dec    esi
  42120c:	lock push esp
  42120e:	or     BYTE PTR [edx+0x10],0xf0
  421212:	cld    
  421213:	nop
  421214:	xor    ecx,DWORD PTR [ecx-0x5b]
  421217:	repnz leave 
  421219:	xchg   BYTE PTR [eax+ecx*2],bh
  42121c:	cmp    eax,0x253775e1
  421221:	clc    
  421222:	js     0x421294
  421224:	or     al,0xbd
  421226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421227:	mov    BYTE PTR [ebp-0x74f0ce0e],0x90
  42122e:	jne    0x421254
  421230:	adc    ch,BYTE PTR [eax]
  421232:	add    esp,DWORD PTR [esi+0x488b594a]
  421238:	xlat   BYTE PTR ds:[ebx]
  421239:	fcmovnbe st,st(1)
  42123b:	rcr    BYTE PTR [ebx+0x43a932fb],0x66
  421242:	jo     0x42128b
  421244:	pop    edx
  421245:	xor    al,0x55
  421247:	cs clc 
  421249:	shl    BYTE PTR [ebp+0x16],cl
  42124c:	push   ebx
  42124d:	imul   BYTE PTR [edx]
  42124f:	sbb    al,0x35
  421251:	gs adc al,0xfc
  421254:	dec    ecx
  421255:	mov    edi,0x71b5fad6
  42125a:	ds xchg ecx,eax
  42125c:	ror    BYTE PTR [edi+0x75],1
  42125f:	imul   esi,esp,0x16
  421262:	xor    al,0xed
  421264:	mov    bl,0x24
  421266:	pushf  
  421267:	ss push sp
  42126a:	xor    ecx,edx
  42126c:	pop    ss
  42126d:	add    bh,BYTE PTR [esi]
  42126f:	mov    esp,0x822e44b3
  421274:	jl     0x4212ef
  421276:	cmc    
  421277:	pop    ebx
  421278:	outs   dx,BYTE PTR ds:[esi]
  421279:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42127b:	scas   eax,DWORD PTR es:[edi]
  42127c:	add    DWORD PTR [ebx-0x71],edi
  42127f:	test   ebp,ebp
  421281:	sub    ah,BYTE PTR [ebx+0x4355d3f0]
  421287:	or     eax,0xf6743ada
  42128c:	xchg   ebp,eax
  42128d:	ins    DWORD PTR es:[edi],dx
  42128e:	cdq    
  42128f:	sbb    eax,0x77d53c47
  421294:	imul   esp,DWORD PTR [esi+0x4f660717],0x741142c3
  42129e:	les    dx,DWORD PTR [edx+0x5f]
  4212a2:	fwait
  4212a3:	fs pop esi
  4212a5:	jnp    0x421303
  4212a7:	ror    bl,1
  4212a9:	int3   
  4212aa:	loop   0x421269
  4212ac:	dec    eax
  4212ad:	aaa    
  4212ae:	jne    0x421233
  4212b0:	jl     0x4212bd
  4212b2:	repnz int3 
  4212b4:	add    dl,BYTE PTR [ebp-0x4bf8518b]
  4212ba:	sub    BYTE PTR [edi],0xf4
  4212bd:	std    
  4212be:	pushf  
  4212bf:	hlt    
  4212c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212c1:	shl    BYTE PTR ds:[esi+0x38],0x75
  4212c6:	sub    BYTE PTR [ebx],cl
  4212c8:	rcl    esi,cl
  4212ca:	mov    dl,0xc1
  4212cc:	xchg   ebx,eax
  4212cd:	push   edi
  4212ce:	cmp    DWORD PTR [esi+eax*4+0x6d938766],ecx
  4212d5:	pop    es
  4212d6:	retf   0xf0b2
  4212d9:	sub    dh,BYTE PTR [esi-0x67e702bf]
  4212df:	sub    ecx,esi
  4212e1:	mov    ecx,0xfb068af5
  4212e6:	ret    0x5bcc
  4212e9:	frstor [ecx-0x75]
  4212ec:	mov    ebp,0x71661dda
  4212f1:	jne    0x4212c4
  4212f3:	or     esi,edx
  4212f5:	mov    bh,0x99
  4212f7:	mov    dh,0xf8
  4212f9:	push   DWORD PTR [ebp-0x6c9a8144]
  4212ff:	ret    0xe110
  421302:	ja     0x4212a9
  421304:	fsub   DWORD PTR ds:0x5dc30ca3
  42130a:	fwait
  42130b:	xor    BYTE PTR [ecx],dh
  42130d:	out    dx,eax
  42130e:	xor    eax,0x706576fb
  421313:	and    al,0x4c
  421315:	xor    DWORD PTR [eax+0x43e4605a],0xffffffce
  42131c:	xor    ebx,0xffffff98
  42131f:	xchg   ebx,eax
  421320:	aaa    
  421321:	fidiv  DWORD PTR [ebp-0x49]
  421324:	in     eax,0x65
  421326:	arpl   WORD PTR [edx+0x6b],si
  421329:	repz push edx
  42132b:	inc    edi
  42132c:	jle    0x4212d5
  42132e:	mov    DWORD PTR [eax+0x19758734],0x9d3ddf54
  421338:	ins    DWORD PTR es:[edi],dx
  421339:	xor    DWORD PTR [esi+0x1b31a066],ebp
  42133f:	sahf   
  421340:	rol    bl,cl
  421342:	sub    BYTE PTR [ebp-0x79],ah
  421345:	mov    ?,WORD PTR [ebp+ebp*8+0x7f061c7]
  42134c:	and    al,BYTE PTR [edi-0x162c10c2]
  421352:	mov    edx,0xfb5672a4
  421357:	and    eax,0x5a6f6570
  42135c:	out    dx,eax
  42135d:	test   al,0xce
  42135f:	cmp    DWORD PTR [ebp+0x2b],0xd0355742
  421366:	jne    0x421367
  421368:	rcr    ch,1
  42136a:	jo     0x42133d
  42136c:	mov    ebx,0xa86864fa
  421371:	out    0x13,al
  421373:	cmp    eax,0x20d57fa6
  421378:	sub    al,0x4a
  42137a:	imul   ebx,DWORD PTR ds:0x66e5455b,0x0
  421381:	gs fwait
  421383:	adc    ah,bh
  421385:	xor    eax,0x994d9a5f
  42138a:	dec    esp
  42138b:	mov    edi,0x444783d3
  421390:	cmp    bh,BYTE PTR ds:0x6687b801
  421396:	lods   eax,DWORD PTR ds:[esi]
  421397:	mov    bl,0x89
  421399:	mov    edi,DWORD PTR [esi]
  42139b:	lea    ecx,[esi]
  42139d:	pop    edx
  42139e:	sub    al,0x15
  4213a0:	cli    
  4213a1:	lds    esi,FWORD PTR [ebp-0x25]
  4213a4:	xchg   ecx,eax
  4213a5:	test   al,0xc2
  4213a7:	pop    ecx
  4213a8:	in     al,dx
  4213a9:	es int 0x66
  4213ac:	or     eax,0xd25a8249
  4213b1:	jecxz  0x421421
  4213b3:	addr16 push ecx
  4213b5:	shl    DWORD PTR [ecx+0x48],cl
  4213b8:	inc    eax
  4213b9:	cmp    edi,DWORD PTR gs:[esp+edx*8-0x47]
  4213be:	(bad)  
  4213bf:	rcl    DWORD PTR [ebp-0x18],cl
  4213c2:	in     eax,0xa5
  4213c4:	ret    0x7509
  4213c7:	pop    ss
  4213c8:	adc    BYTE PTR [edx-0x43717f47],0x7f
  4213cf:	cmp    bp,WORD PTR [ecx]
  4213d2:	jno    0x4213c4
  4213d4:	rcl    DWORD PTR [esi-0x179c9c99],cl
  4213da:	call   0x5497c27d
  4213df:	sbb    ebp,ecx
  4213e1:	leave  
  4213e2:	push   0x6e
  4213e4:	and    eax,0xd3f1d5b4
  4213e9:	das    
  4213ea:	in     al,dx
  4213eb:	ss inc ebp
  4213ed:	scas   eax,DWORD PTR es:[edi]
  4213ee:	(bad)  
  4213ef:	out    0x7a,al
  4213f1:	outs   dx,BYTE PTR gs:[esi]
  4213f3:	call   0xb459:0x4a6b2c9a
  4213fa:	or     dl,bl
  4213fc:	push   edi
  4213fd:	mov    ecx,0x8fd35793
  421402:	xor    DWORD PTR [di-0x30],ebx
  421406:	mov    ecx,0x3b9ef659
  42140b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42140d:	jo     0x421393
  42140f:	sub    edx,ebx
  421411:	fisub  DWORD PTR [edi-0x5a1a8739]
  421417:	xor    al,0x67
  421419:	cmp    ah,bh
  42141b:	popf   
  42141c:	sar    DWORD PTR [esi-0x10],cl
  42141f:	retf   0x6137
  421422:	xchg   DWORD PTR [esi],esp
  421424:	shl    DWORD PTR [esp+ecx*8+0x70737bbe],cl
  42142b:	cdq    
  42142c:	scas   al,BYTE PTR es:[edi]
  42142d:	pop    edx
  42142e:	mov    bh,BYTE PTR [ebx+0x24]
  421431:	gs add al,0xb7
  421434:	jae    0x4213dd
  421436:	push   edi
  421437:	pop    ecx
  421438:	call   0x54d3029
  42143d:	mov    WORD PTR [ecx],di
  421440:	mov    esi,0xd4f4c852
  421445:	dec    edx
  421446:	xchg   ebp,eax
  421447:	xchg   ecx,eax
  421448:	push   0xde88a665
  42144d:	stos   DWORD PTR es:[edi],eax
  42144e:	int3   
  42144f:	jl     0x421424
  421451:	xchg   bl,bh
  421453:	jmp    0x7116dbf5
  421458:	cmp    BYTE PTR [ebp+0x41],ah
  42145b:	call   DWORD PTR [ecx]
  42145d:	sub    DWORD PTR [ebp+0x5c8bcb91],ebx
  421463:	sub    DWORD PTR ds:0x7c5075bd,ebx
  421469:	inc    ebx
  42146a:	stos   DWORD PTR es:[edi],eax
  42146b:	cli    
  42146c:	loop   0x4214ac
  42146e:	pop    esi
  42146f:	sub    WORD PTR [edx-0x442c0c60],si
  421476:	fisub  DWORD PTR ds:0x55c35253
  42147c:	ficom  DWORD PTR [edx+edi*2-0x2]
  421480:	fwait
  421481:	leave  
  421482:	frstor [ebp+0x64941b20]
  421488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42148a:	scas   al,BYTE PTR es:[edi]
  42148b:	pop    esi
  42148c:	push   ebx
  42148d:	inc    ebx
  42148e:	jne    0x421444
  421490:	ret    
  421491:	jne    0x4214e1
  421493:	mov    bl,0x2
  421495:	gs test eax,0x68353960
  42149b:	xchg   ebx,eax
  42149c:	outs   dx,BYTE PTR ds:[esi]
  42149d:	mov    ss,WORD PTR es:[ebp-0x27]
  4214a1:	dec    ebx
  4214a2:	jne    0x421425
  4214a4:	jb     0x421432
  4214a6:	(bad)  
  4214a7:	or     dh,BYTE PTR [esi-0x2b]
  4214aa:	in     eax,dx
  4214ab:	push   cx
  4214ad:	xor    BYTE PTR [ebx-0x14d62c81],ah
  4214b3:	or     BYTE PTR [edi-0xb],dl
  4214b6:	or     esi,0xc7db6292
  4214bc:	ins    BYTE PTR es:[edi],dx
  4214bd:	or     cl,BYTE PTR [ebx]
  4214bf:	imul   esi,DWORD PTR [edi+ebx*1+0x29],0xffffffe6
  4214c4:	retf   
  4214c5:	lock fst QWORD PTR [eax+0x197588d0]
  4214cc:	add    eax,0x7816c9a8
  4214d1:	dec    ecx
  4214d2:	xchg   ecx,eax
  4214d3:	sbb    ax,0x9db2
  4214d7:	dec    esi
  4214d8:	aad    0x44
  4214da:	test   BYTE PTR [ebx-0x4418c28],bh
  4214e0:	add    eax,0x54fd750e
  4214e5:	mov    edx,DWORD PTR [edi]
  4214e7:	ins    DWORD PTR es:[edi],dx
  4214e8:	stos   BYTE PTR es:[edi],al
  4214e9:	xchg   ebx,eax
  4214ea:	push   ds
  4214eb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4214ed:	and    eax,0xf84102e9
  4214f2:	shl    DWORD PTR [edi+0x48],1
  4214f5:	xchg   ecx,eax
  4214f6:	jne    0x421484
  4214f8:	les    edi,FWORD PTR [eax+0x76]
  4214fb:	sbb    al,BYTE PTR [ecx]
  4214fd:	mov    cl,0x34
  4214ff:	push   0xfffffff0
  421501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421502:	leave  
  421503:	xor    al,0x7b
  421505:	mov    ch,0xfc
  421507:	fiadd  DWORD PTR [esi+0x37]
  42150a:	jne    0x421511
  42150c:	pop    ebx
  42150d:	xchg   ebp,eax
  42150e:	push   es
  42150f:	ret    
  421510:	loope  0x421580
  421512:	mov    eax,cs:0x767547ec
  421518:	fiadd  WORD PTR [ebx+0xa]
  42151b:	mov    bh,dl
  42151d:	xchg   edi,eax
  42151e:	jne    0x42154f
  421520:	fist   DWORD PTR [edx+edi*8]
  421523:	loop   0x421595
  421525:	mov    edi,0xd74b6174
  42152a:	loope  0x4214ba
  42152c:	rol    DWORD PTR [esi+0x3e46bddf],cl
  421532:	mov    ecx,DWORD PTR [edi-0x33]
  421535:	scas   ax,WORD PTR es:[edi]
  421537:	adc    BYTE PTR [edi],dh
  421539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42153a:	mov    al,ds:0x78fa8e83
  42153f:	push   ss
  421540:	and    eax,0x1e9e75ee
  421545:	or     al,0x9b
  421547:	pop    eax
  421548:	sub    ebx,ebp
  42154a:	dec    ebx
  42154b:	leavew 
  42154d:	fiadd  DWORD PTR [ebx-0x6d]
  421550:	rcl    eax,cl
  421552:	mov    BYTE PTR [edi-0x7c4304c1],dh
  421558:	xchg   ebp,eax
  421559:	pusha  
  42155a:	pop    edx
  42155b:	push   ss
  42155c:	jmp    0x5dc:0xb3ecdad1
  421563:	mov    dh,ah
  421565:	pop    ds
  421566:	outs   dx,BYTE PTR ds:[esi]
  421567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421568:	xor    ch,ah
  42156a:	test   al,0x7e
  42156c:	mov    ecx,0x2fe375f4
  421571:	xchg   BYTE PTR [edx],ah
  421573:	pop    dx
  421575:	push   edi
  421576:	xchg   edx,eax
  421577:	mov    edx,ebx
  421579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42157a:	test   eax,0xc38af4b3
  42157f:	pushf  
  421580:	inc    eax
  421581:	sbb    BYTE PTR gs:[eax+0x25ce43a2],ch
  421588:	and    al,0xcd
  42158a:	cmc    
  42158b:	push   ebx
  42158c:	add    dl,BYTE PTR [edi+0x536f7975]
  421592:	dec    ebx
  421593:	pop    esi
  421594:	out    dx,eax
  421595:	jnp    0x42154a
  421597:	enterw 0xbc8,0x17
  42159c:	rcr    DWORD PTR [edi-0x4e],cl
  42159f:	xor    DWORD PTR [ecx+edi*2+0x65e39261],0xffffffdd
  4215a7:	bound  eax,QWORD PTR [ebp+0x5ada53b2]
  4215ad:	inc    edx
  4215ae:	and    dl,BYTE PTR [ebx]
  4215b0:	rol    edx,cl
  4215b2:	jge    0x421619
  4215b4:	je     0x421599
  4215b6:	shl    bh,1
  4215b8:	iret   
  4215b9:	or     eax,0xc9300d32
  4215be:	jecxz  0x421627
  4215c0:	rep outs dx,DWORD PTR ds:[esi]
  4215c2:	mov    esp,0xea94afc0
  4215c7:	es aaa 
  4215c9:	mov    WORD PTR [ebx+0x3e],gs
  4215cc:	xor    edi,esi
  4215ce:	(bad)
  4215d1:	pusha  
  4215d2:	div    BYTE PTR [edi+0x48]
  4215d5:	lea    edi,[ebx+0x5d]
  4215d8:	push   ebx
  4215d9:	or     al,0x47
  4215db:	inc    ebp
  4215dc:	rcr    DWORD PTR [esi+0x6221f271],cl
  4215e2:	ins    DWORD PTR es:[edi],dx
  4215e3:	sub    cl,dl
  4215e5:	ffree  st(0)
  4215e7:	xlat   BYTE PTR ds:[ebx]
  4215e8:	in     eax,0xf1
  4215ea:	push   edx
  4215eb:	pushw  ds
  4215ed:	(bad)  
  4215ee:	pusha  
  4215ef:	xchg   edx,eax
  4215f0:	rol    DWORD PTR [eax*1-0x38da7bb3],cl
  4215f7:	and    esp,DWORD PTR [ecx+0x65]
  4215fa:	js     0x42165c
  4215fc:	cmp    al,0xc4
  4215fe:	xchg   esi,eax
  4215ff:	stc    
  421600:	loop   0x4215aa
  421602:	or     al,0x21
  421604:	loope  0x42159a
  421606:	jbe    0x4215a5
  421608:	or     eax,0xb87e89ad
  42160d:	popa   
  42160e:	sub    eax,0x6ba706ef
  421613:	fld    DWORD PTR [eax-0x141c6f3f]
  421619:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42161b:	sub    ch,BYTE PTR [ebx-0x5f]
  42161e:	cdq    
  42161f:	adc    al,0x7
  421621:	int3   
  421622:	mov    bh,0x7f
  421624:	pop    edx
  421625:	dec    ebp
  421626:	jle    0x4215ce
  421628:	pop    ebx
  421629:	pushf  
  42162a:	add    ah,BYTE PTR [esi-0x2b]
  42162d:	into   
  42162e:	arpl   di,sp
  421630:	jmp    0x7103:0xad412027
  421637:	cli    
  421638:	sub    eax,0x7f44957f
  42163d:	lea    ebp,[eax+0x73c4ecd1]
  421643:	popa   
  421644:	retf   
  421645:	(bad)  
  421646:	loop   0x4215db
  421648:	ror    DWORD PTR [esi+0x6f],1
  42164b:	lea    ecx,ds:0x5361695e
  421651:	xchg   edx,eax
  421652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421653:	popf   
  421654:	rcr    DWORD PTR [ebx+0x4b],cl
  421657:	push   esp
  421658:	add    esp,DWORD PTR [edx]
  42165a:	in     al,0x12
  42165c:	ds gs cmp ch,ch
  421660:	ja     0x421661
  421662:	ins    BYTE PTR es:[edi],dx
  421663:	add    eax,0xf5800171
  421668:	add    dh,BYTE PTR [ebp+0x35f0dc75]
  42166e:	mov    ds:0xd9b60905,al
  421673:	inc    cx
  421675:	mov    BYTE PTR ds:0xee2dd0b3,bh
  42167b:	jae    0x4216b3
  42167d:	cmp    eax,0x67331bb7
  421682:	or     edx,ebp
  421684:	push   0xffffffd0
  421686:	(bad)  
  421687:	data16 sub BYTE PTR [eax],cl
  42168a:	xchg   esp,eax
  42168b:	js     0x421660
  42168d:	pop    edx
  42168e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42168f:	jae    0x421617
  421691:	retf   
  421692:	xchg   ebp,eax
  421693:	out    0xad,al
  421695:	add    cx,WORD PTR [edx]
  421698:	aas    
  421699:	sar    BYTE PTR [edx-0x577f8f6c],cl
  42169f:	mov    ch,0xd2
  4216a1:	in     al,dx
  4216a2:	jne    0x421654
  4216a4:	stc    
  4216a5:	stc    
  4216a6:	push   ds
  4216a7:	ja     0x421673
  4216a9:	inc    edi
  4216aa:	es mov esi,0x95eba53c
  4216b0:	sbb    DWORD PTR ds:0xb1238cb5,0x17124d53
  4216ba:	pop    es
  4216bb:	xchg   edi,eax
  4216bc:	es pop es
  4216be:	and    DWORD PTR [esi-0x47],0xffffff96
  4216c2:	push   ebp
  4216c3:	int    0xff
  4216c5:	push   esp
  4216c6:	fwait
  4216c7:	or     BYTE PTR [edx+0x1b],0x68
  4216cb:	mov    eax,ds:0x800ed6d
  4216d0:	out    0xbc,al
  4216d2:	jb     0x42165d
  4216d4:	jae    0x4216d7
  4216d6:	hlt    
  4216d7:	scas   al,BYTE PTR es:[edi]
  4216d8:	in     eax,dx
  4216d9:	imul   ecx,DWORD PTR ds:0xfbef5f5f,0x79
  4216e0:	pop    esi
  4216e1:	inc    eax
  4216e2:	mov    ch,0xfe
  4216e4:	jmp    0x2e81:0xe53f5304
  4216eb:	mov    dh,0x2f
  4216ed:	jg     0x4216b4
  4216ef:	aad    0x72
  4216f1:	mov    ah,0x3b
  4216f3:	xchg   ecx,eax
  4216f4:	jae    0x4216af
  4216f6:	mov    esp,0xd20b07a1
  4216fb:	sbb    dh,BYTE PTR [edi+ebp*1]
  4216fe:	jbe    0x42169f
  421700:	xchg   ecx,eax
  421701:	mov    dh,0x65
  421703:	inc    ebp
  421704:	adc    BYTE PTR [ecx+0x24],bl
  421707:	mov    BYTE PTR [ebp+eiz*1-0x20],bl
  42170b:	in     eax,dx
  42170c:	sbb    ecx,DWORD PTR [ecx]
  42170e:	xor    ch,ah
  421710:	rcr    DWORD PTR [edx+0x13],cl
  421713:	inc    esi
  421714:	rcl    BYTE PTR [ebp+0x10],0x9
  421718:	sbb    DWORD PTR [ebp+0x48],esp
  42171b:	push   ss
  42171c:	mov    eax,ds:0xbc021bf1
  421721:	lds    eax,FWORD PTR [edx+0x6a]
  421724:	stos   BYTE PTR es:[edi],al
  421725:	aaa    
  421726:	jne    0x4216c1
  421728:	pop    es
  421729:	cmp    esp,DWORD PTR [edx]
  42172b:	mov    DWORD PTR [edi+0x65],eax
  42172e:	idiv   ebp
  421730:	xchg   edx,eax
  421731:	shl    cl,0x4b
  421734:	sub    al,0xd8
  421736:	mov    ah,0xf1
  421738:	or     ebx,DWORD PTR [edx+0x71]
  42173b:	leave  
  42173c:	xchg   ebx,eax
  42173d:	inc    edi
  42173e:	clc    
  42173f:	and    DWORD PTR cs:[ebp+0x33],esp
  421743:	sbb    edx,esp
  421745:	repnz (bad) 
  421747:	out    0xeb,eax
  421749:	push   ecx
  42174a:	lods   eax,DWORD PTR ds:[esi]
  42174b:	je     0x421739
  42174d:	mov    eax,ds:0x25f27d72
  421752:	xor    bl,ah
  421754:	(bad)  
  421755:	out    0x35,eax
  421757:	or     BYTE PTR [edi-0x7499f908],bl
  42175d:	adc    DWORD PTR [eax+0x3c],0x12a8d0c7
  421764:	popf   
  421765:	add    DWORD PTR [ebp-0x1d],esi
  421768:	jnp    0x4216ed
  42176a:	idiv   DWORD PTR [edi+0x24]
  42176d:	fidiv  WORD PTR [edi+0x61]
  421770:	mov    eax,0xd362da2d
  421775:	daa    
  421776:	adc    ebp,DWORD PTR [ebp-0x1450c638]
  42177c:	out    0x65,eax
  42177e:	xchg   edi,eax
  42177f:	push   ecx
  421780:	lahf   
  421781:	mov    al,0xe9
  421783:	scas   eax,DWORD PTR es:[edi]
  421784:	sub    eax,0x6811b4a6
  421789:	xor    DWORD PTR [ebp+0x38],0x4cc4fa27
  421790:	pop    es
  421791:	sar    DWORD PTR [eax],cl
  421793:	addr16 int3 
  421795:	vpminsw xmm5,xmm5,XMMWORD PTR [esi+eiz*8+0x65]
  42179b:	pop    ecx
  42179c:	or     bl,BYTE PTR [eax+0x75]
  42179f:	xchg   edx,eax
  4217a0:	jmp    0x234c4bfe
  4217a5:	mov    al,ds:0xa4096630
  4217aa:	add    eax,ebx
  4217ac:	shl    DWORD PTR [eax],cl
  4217ae:	arpl   bp,ax
  4217b0:	ror    ah,0x40
  4217b3:	pop    eax
  4217b4:	sub    al,0x65
  4217b6:	loopne 0x421808
  4217b8:	in     al,0x40
  4217ba:	gs or  dh,0xee
  4217be:	inc    ebx
  4217bf:	and    bl,dl
  4217c1:	jns    0x42178a
  4217c3:	call   FWORD PTR [eax+0x44ccbf90]
  4217c9:	shl    BYTE PTR gs:[ecx],0x6e
  4217cd:	jmp    0x85abdfd0
  4217d2:	cmc    
  4217d3:	dec    eax
  4217d4:	sar    esp,cl
  4217d6:	cmp    eax,0xe3b5570f
  4217db:	aas    
  4217dc:	sub    eax,0xb5cae06c
  4217e1:	mov    cl,0x67
  4217e3:	cmp    edx,esi
  4217e5:	push   cs
  4217e6:	mov    dh,0xd6
  4217e8:	rcl    DWORD PTR [eax+0x2b],cl
  4217eb:	xor    DWORD PTR [ebx-0x4354fcda],esi
  4217f1:	cbw    
  4217f3:	push   ecx
  4217f4:	in     al,dx
  4217f5:	push   ecx
  4217f6:	stc    
  4217f7:	(bad)  
  4217f8:	fld    DWORD PTR [ebx]
  4217fa:	lods   al,BYTE PTR ds:[esi]
  4217fb:	pop    ss
  4217fc:	ror    eax,cl
  4217fe:	mov    esi,0x2c187b54
  421804:	iret   
  421805:	arpl   WORD PTR [esi-0x25],dx
  421808:	rol    BYTE PTR [ebx],1
  42180a:	fsubp  st(2),st
  42180c:	xchg   edx,eax
  42180d:	out    0x83,al
  42180f:	out    0xd3,al
  421811:	(bad)  
  421812:	lods   eax,DWORD PTR ds:[esi]
  421813:	push   eax
  421814:	xchg   ebx,eax
  421815:	ficomp DWORD PTR [ebp-0x2]
  421818:	lods   eax,DWORD PTR ds:[esi]
  421819:	iretw  
  42181b:	fisttp DWORD PTR [ebp-0x43e331fb]
  421821:	jb     0x421804
  421823:	cmp    DWORD PTR [edi+0x33],eax
  421826:	outs   dx,BYTE PTR ds:[esi]
  421827:	imul   esi,DWORD PTR [ebx+0x30],0xffffffd8
  42182b:	data16 gs out 0x78,ax
  421830:	xchg   edi,eax
  421831:	adc    DWORD PTR [ecx-0x5fc5e6b6],esp
  421837:	push   cs
  421838:	imul   ebp,DWORD PTR [ebx],0xd5079375
  42183e:	add    al,0x45
  421840:	dec    edi
  421841:	std    
  421842:	jle    0x4217d5
  421844:	dec    edx
  421845:	cmc    
  421846:	push   ss
  421847:	int    0x28
  421849:	fs leave 
  42184b:	inc    esi
  42184c:	pop    edi
  42184d:	jmp    0x9d74:0xeb1c1cee
  421854:	jmp    0x2876:0xc27f44bb
  42185b:	xor    BYTE PTR [eax+0x65],dl
  42185e:	sbb    ebx,DWORD PTR ds:0xc466aa74
  421864:	sti    
  421865:	outs   dx,BYTE PTR ds:[esi]
  421866:	mov    ecx,DWORD PTR [edi]
  421868:	sub    al,0xb9
  42186a:	jne    0x421806
  42186c:	sahf   
  42186d:	inc    ecx
  42186e:	daa    
  42186f:	mov    ebp,DWORD PTR [esi+0x1e4ed46d]
  421875:	add    edx,DWORD PTR [eax-0x4]
  421878:	mov    ah,0x24
  42187a:	and    BYTE PTR [ecx-0x14],bl
  42187d:	into   
  42187e:	hlt    
  42187f:	mov    edx,0xe6e329d5
  421884:	pop    edx
  421885:	push   ss
  421886:	xor    al,dh
  421888:	sub    eax,0xe466f343
  42188d:	sbb    dh,BYTE PTR [eax-0x72a52c4e]
  421893:	out    0xb4,eax
  421895:	sbb    eax,0x87f2a10a
  42189a:	jle    0x421856
  42189c:	mov    ah,BYTE PTR [edi+0x7f]
  42189f:	stc    
  4218a0:	rol    bh,cl
  4218a2:	pop    es
  4218a3:	out    0xd,al
  4218a5:	xor    DWORD PTR [esi+eiz*1-0x1e],0x71c23946
  4218ad:	in     eax,0xfc
  4218af:	dec    esi
  4218b0:	test   al,0xe2
  4218b2:	xchg   al,bl
  4218b4:	iret   
  4218b5:	dec    edx
  4218b6:	inc    ebx
  4218b7:	data16 cs js 0x42185a
  4218bb:	push   esp
  4218bc:	ror    DWORD PTR [ecx],cl
  4218be:	or     eax,0x6ec02db4
  4218c3:	xchg   ecx,eax
  4218c4:	pusha  
  4218c5:	gs pushf 
  4218c7:	xchg   edx,eax
  4218c8:	mov    dx,0x6b0c
  4218cc:	int    0xc8
  4218ce:	and    DWORD PTR [esi+0x9],ebx
  4218d1:	inc    eax
  4218d2:	addr16 dec ecx
  4218d4:	pop    eax
  4218d5:	cdq    
  4218d6:	jne    0x421939
  4218d8:	inc    eax
  4218d9:	gs inc edi
  4218db:	sub    DWORD PTR [ebx],esp
  4218dd:	dec    ebx
  4218de:	pushf  
  4218df:	leave  
  4218e0:	cmp    edx,DWORD PTR [esi]
  4218e2:	js     0x421893
  4218e4:	out    dx,eax
  4218e5:	(bad)  
  4218e6:	jne    0x42193a
  4218e8:	push   esp
  4218e9:	mov    dl,0x6
  4218eb:	ret    0xffd6
  4218ee:	les    esp,FWORD PTR [esi+0x4f]
  4218f1:	adc    ebx,0x17
  4218f4:	hlt    
  4218f5:	inc    ebx
  4218f6:	mov    eax,0x11f3ae9f
  4218fb:	xor    ecx,DWORD PTR [eax-0x13]
  4218fe:	jae    0x4218f3
  421900:	mov    fs,WORD PTR [esi+0x4f]
  421903:	or     al,0xdb
  421905:	ss push eax
  421907:	gs in  eax,0x97
  42190a:	xor    BYTE PTR [esi-0x24],cl
  42190d:	aas    
  42190e:	jne    0x42197c
  421910:	(bad)  [edi]
  421912:	mov    ebp,0x8844f3ac
  421917:	cld    
  421918:	jl     0x421998
  42191a:	repz pushf 
  42191c:	int    0x77
  42191e:	push   0xffffff89
  421920:	jmp    0x421984
  421922:	xchg   ebp,eax
  421923:	inc    esi
  421924:	rol    DWORD PTR [ecx],cl
  421926:	add    DWORD PTR [edi],0xbd1a4317
  42192c:	lahf   
  42192d:	data16 xlat BYTE PTR ds:[ebx]
  42192f:	call   0x9741:0x42b788a
  421936:	mov    dh,0x26
  421938:	stc    
  421939:	enter  0x4975,0x1e
  42193d:	test   DWORD PTR es:[edi],ecx
  421940:	cmp    BYTE PTR [eax+eax*1-0x377c559b],ch
  421947:	ins    BYTE PTR es:[edi],dx
  421948:	xlat   BYTE PTR ds:[ebx]
  421949:	adc    al,BYTE PTR ds:0x75e158e2
  42194f:	scas   eax,DWORD PTR es:[edi]
  421950:	(bad)  
  421951:	aam    0x78
  421953:	test   al,0x3c
  421955:	in     al,0x91
  421957:	data16 lods al,BYTE PTR ds:[esi]
  421959:	neg    ah
  42195b:	xchg   ecx,eax
  42195c:	out    0x83,al
  42195e:	pop    ds
  42195f:	push   ebp
  421960:	xlat   BYTE PTR ds:[ebx]
  421961:	out    0xb5,al
  421963:	sti    
  421964:	or     al,0xa
  421966:	js     0x421989
  421968:	pop    eax
  421969:	sbb    ebx,esi
  42196b:	imul   esi,DWORD PTR [edx],0xa56396d5
  421971:	lods   eax,DWORD PTR ds:[esi]
  421972:	jbe    0x421904
  421974:	jmp    0x3f0d:0x96cafbfb
  42197b:	fcmovbe st,st(5)
  42197d:	mov    cl,0xa5
  42197f:	or     cl,bh
  421981:	dec    esi
  421982:	std    
  421983:	fist   WORD PTR gs:[ebx]
  421986:	cmp    DWORD PTR [edx],ebx
  421988:	xchg   esp,eax
  421989:	les    ebx,FWORD PTR ds:0x7599f814
  42198f:	mov    esi,0x262b030e
  421994:	adc    eax,0x5966c7c9
  421999:	jmp    0x65a1:0x96d27bd5
  4219a0:	adc    edi,DWORD PTR [edx-0x61]
  4219a3:	repnz pop es
  4219a5:	gs and edx,esi
  4219a8:	mov    ecx,0xc383dbe8
  4219ad:	dec    dl
  4219af:	hlt    
  4219b0:	inc    esp
  4219b1:	dec    eax
  4219b2:	jne    0x4219d2
  4219b4:	add    ebp,DWORD PTR [eax]
  4219b6:	dec    ebx
  4219b7:	rcr    BYTE PTR [ebx+0x7f],1
  4219ba:	push   esi
  4219bb:	data16 fcom DWORD PTR [ebx]
  4219be:	xor    BYTE PTR [esi-0x2d],bh
  4219c1:	enter  0xc007,0x1d
  4219c5:	out    dx,al
  4219c6:	cmp    al,0xbc
  4219c8:	add    al,0x79
  4219ca:	outs   dx,DWORD PTR ds:[esi]
  4219cb:	iret   
  4219cc:	sub    BYTE PTR [ebx],ah
  4219ce:	cmp    eax,0xdee74267
  4219d3:	mov    bl,bh
  4219d5:	mov    ah,0x94
  4219d7:	jbe    0x421a52
  4219d9:	and    DWORD PTR [ebp+0x53],esi
  4219dc:	(bad)  
  4219dd:	stc    
  4219de:	aam    0x55
  4219e0:	or     ecx,ecx
  4219e2:	push   edi
  4219e3:	data16 aad 0x0
  4219e6:	jmp    0x9241:0x73feea04
  4219ed:	mul    BYTE PTR [eax]
  4219ef:	mov    al,ds:0xfbe57d5a
  4219f4:	fsub   QWORD PTR [ebp+0x6c]
  4219f7:	imul   bx
  4219fa:	sbb    BYTE PTR [edi-0x49aad80a],dl
  421a00:	add    BYTE PTR [eax+0x7b52f274],0xa7
  421a07:	pop    ss
  421a08:	int3   
  421a09:	popa   
  421a0a:	aad    0x9
  421a0c:	jmp    0x421a6b
  421a0e:	bound  esp,QWORD PTR [esi]
  421a10:	arpl   dx,bx
  421a12:	les    ecx,FWORD PTR [esi]
  421a14:	fnstenv [edx]
  421a16:	push   ds
  421a17:	xor    edi,DWORD PTR [eax]
  421a19:	push   eax
  421a1a:	jne    0x421a19
  421a1c:	cs sti 
  421a1e:	sahf   
  421a1f:	es in  eax,dx
  421a21:	pop    ebx
  421a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a23:	js     0x421a60
  421a25:	xor    cl,BYTE PTR gs:[eax+0x2c]
  421a29:	fimul  WORD PTR [ebx]
  421a2b:	outs   dx,DWORD PTR ds:[esi]
  421a2c:	rol    DWORD PTR [eax+ebp*1],cl
  421a2f:	in     eax,0xe1
  421a31:	sbb    edi,DWORD PTR [edx+0x2c]
  421a34:	pop    edx
  421a35:	push   esp
  421a36:	adc    ch,BYTE PTR [ebp-0x1c]
  421a39:	ja     0x421a59
  421a3b:	adc    al,0xa2
  421a3d:	out    dx,al
  421a3e:	push   ebp
  421a3f:	xor    dh,ah
  421a41:	mul    BYTE PTR [esi]
  421a43:	mov    cl,0x13
  421a45:	int    0x88
  421a47:	pop    ebx
  421a48:	pushf  
  421a49:	iret   
  421a4a:	pop    esi
  421a4b:	cmp    BYTE PTR [eax],0xc8
  421a4e:	aas    
  421a4f:	xor    di,WORD PTR ds:0x8f27ca6
  421a56:	jnp    0x4219ef
  421a58:	mov    dl,0x30
  421a5a:	sub    edx,DWORD PTR [ecx]
  421a5c:	push   edi
  421a5d:	das    
  421a5e:	cmc    
  421a5f:	push   0xffffffc2
  421a61:	data16 std 
  421a63:	stc    
  421a64:	mov    ah,0xe7
  421a66:	jp     0x421a9f
  421a68:	jo     0x4219ef
  421a6a:	imul   ebx,DWORD PTR [esi+0x5d],0x5b577561
  421a71:	rcl    BYTE PTR [edi+0x4ed7f291],1
  421a77:	addr16 mov cs,WORD PTR [bp+si]
  421a7b:	std    
  421a7c:	dec    esp
  421a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a7e:	jp     0x421ad2
  421a80:	mov    DWORD PTR [edi-0x6f],edx
  421a83:	dec    edx
  421a84:	fistp  DWORD PTR [edx]
  421a86:	jne    0x421a4b
  421a88:	in     al,0x66
  421a8a:	int3   
  421a8b:	ror    DWORD PTR [edx-0x26],1
  421a8e:	push   eax
  421a8f:	xor    BYTE PTR [eax+0x5354b9a3],dl
  421a95:	int3   
  421a96:	dec    esi
  421a97:	jne    0x421a6c
  421a99:	neg    BYTE PTR [eax-0x25]
  421a9c:	data16 mov bl,0xca
  421a9f:	inc    eax
  421aa0:	inc    BYTE PTR [ecx+0x61efb5e7]
  421aa6:	fdivr  DWORD PTR [ebx+ebp*4+0x4b]
  421aaa:	mov    bl,0xf4
  421aac:	fmul   DWORD PTR [ecx-0x26]
  421aaf:	es out dx,al
  421ab1:	leave  
  421ab2:	mov    al,0x4d
  421ab4:	sub    bh,BYTE PTR [esi-0x311063ef]
  421aba:	out    dx,al
  421abb:	out    dx,al
  421abc:	add    ecx,DWORD PTR [esi]
  421abe:	mov    ds:0x532b5a94,al
  421ac3:	gs stos DWORD PTR es:[edi],eax
  421ac5:	cs push 0x499f5e9c
  421acb:	mov    dl,0x22
  421acd:	jle    0x421b35
  421acf:	int3   
  421ad0:	fcmovnbe st,st(0)
  421ad2:	jne    0x421ac3
  421ad4:	cli    
  421ad5:	push   ebx
  421ad6:	test   eax,0x3a655fdd
  421adb:	rcr    DWORD PTR [ecx-0xd],0x7b
  421adf:	fistp  DWORD PTR [esi+0x32]
  421ae2:	cmp    BYTE PTR [edx+0x78],bh
  421ae5:	adc    esi,DWORD PTR [ebp+0x2c]
  421ae8:	cmp    BYTE PTR [ecx],0xb8
  421aeb:	stos   BYTE PTR es:[edi],al
  421aec:	pop    ecx
  421aed:	bound  esi,QWORD PTR [edi+0x61]
  421af0:	clc    
  421af1:	pop    ebx
  421af2:	sub    edx,DWORD PTR [ebx-0x37afe42d]
  421af8:	jl     0x421b3d
  421afa:	jnp    0x421b66
  421afc:	inc    edx
  421afd:	gs adc eax,0x8412be15
  421b03:	pop    es
  421b04:	(bad)  
  421b05:	into   
  421b06:	mov    ecx,0x9ad91537
  421b0b:	push   ss
  421b0c:	mov    dl,0x5c
  421b0e:	aas    
  421b0f:	addr16 (bad) 
  421b11:	jmp    0x656cc411
  421b16:	jge    0x421a98
  421b18:	push   cs
  421b19:	mov    edi,0x1c37bc0b
  421b1e:	cdq    
  421b1f:	xchg   dl,ch
  421b21:	sub    ch,BYTE PTR [ebx-0xe]
  421b24:	iret   
  421b25:	mov    cl,0x5a
  421b27:	or     DWORD PTR [eax-0x431a3d1b],edx
  421b2d:	clc    
  421b2e:	mov    ebp,0x955ba7db
  421b33:	mov    al,ds:0xa4a41eb7
  421b38:	sub    eax,0x60b68da7
  421b3d:	iret   
  421b3e:	jbe    0x421b78
  421b40:	jmp    0xa763:0x955b24ad
  421b47:	outs   dx,DWORD PTR cs:[esi]
  421b49:	jno    0x421b0d
  421b4b:	pop    ds
  421b4c:	ror    ch,cl
  421b4e:	sub    al,0xe5
  421b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b51:	popf   
  421b52:	sub    eax,0x753cef44
  421b57:	sbb    BYTE PTR [ecx],ah
  421b59:	xor    dh,BYTE PTR [eax-0x52]
  421b5c:	xor    eax,DWORD PTR [edi-0x47]
  421b5f:	gs cli 
  421b61:	jno    0x421b74
  421b63:	(bad)  
  421b64:	stc    
  421b65:	pop    ebp
  421b66:	pop    ebp
  421b67:	dec    eax
  421b68:	lahf   
  421b69:	je     0x421be0
  421b6b:	das    
  421b6c:	call   0x924a46fb
  421b71:	jo     0x421b00
  421b73:	ss pop eax
  421b75:	stc    
  421b76:	inc    esi
  421b77:	dec    si
  421b79:	inc    edx
  421b7a:	bound  edx,QWORD PTR [eax+0x17b7fed3]
  421b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b81:	jnp    0x421b72
  421b83:	dec    ecx
  421b84:	cmp    al,0x65
  421b86:	loopne 0x421b4e
  421b88:	dec    edx
  421b89:	dec    ecx
  421b8a:	scas   al,BYTE PTR es:[edi]
  421b8b:	idiv   edi
  421b8d:	test   eax,0xb5b05958
  421b92:	jne    0x421bef
  421b94:	and    al,0x88
  421b96:	push   ecx
  421b97:	enter  0xbc9b,0x24
  421b9b:	shr    BYTE PTR [edi],cl
  421b9d:	gs call 0x17ca:0x71e8b7c0
  421ba5:	icebp  
  421ba6:	popa   
  421ba7:	add    al,0x13
  421ba9:	xchg   ebp,eax
  421baa:	sub    dh,ah
  421bac:	enter  0xdd89,0x83
  421bb0:	call   0x61d7984d
  421bb5:	ss loopne 0x421c1e
  421bb8:	addr16 push esp
  421bba:	test   al,0xe7
  421bbc:	adc    BYTE PTR [ebx],al
  421bbe:	jbe    0x421bb1
  421bc0:	popf   
  421bc1:	mov    ecx,0xf3ce53cc
  421bc6:	pop    ecx
  421bc7:	out    0x9a,al
  421bc9:	data16 scas al,BYTE PTR es:[edi]
  421bcb:	jle    0x421c2b
  421bcd:	add    DWORD PTR [eax+ecx*2-0x4d],ebp
  421bd1:	jmp    0x421b6b
  421bd3:	daa    
  421bd4:	in     al,dx
  421bd5:	test   eax,0xcdbbc375
  421bda:	mov    ch,0x4f
  421bdc:	mov    DWORD PTR [ebx-0x10],esi
  421bdf:	call   0xf230:0x44d4
  421be5:	js     0x421ba2
  421be7:	jp     0x421bbc
  421be9:	jecxz  0x421be7
  421beb:	jae    0x421c4d
  421bed:	fadd   DWORD PTR [edi]
  421bef:	sub    eax,0xbc8180c3
  421bf4:	iret   
  421bf5:	(bad)  
  421bf6:	cmc    
  421bf7:	dec    ebp
  421bf8:	jmp    0x421bce
  421bfa:	mov    ds:0x74379de7,eax
  421bff:	mov    BYTE PTR [ebx],dh
  421c01:	in     eax,dx
  421c02:	fbld   TBYTE PTR [ecx+0x37]
  421c05:	lds    edi,FWORD PTR gs:[ebx+0x3ac7e9a4]
  421c0c:	ins    DWORD PTR es:[edi],dx
  421c0d:	sub    DWORD PTR [ebx],0xffffffb4
  421c10:	pop    esi
  421c11:	jno    0x421c83
  421c13:	mov    ds:0xd70abfea,eax
  421c18:	xor    eax,eax
  421c1a:	or     BYTE PTR [eax],al
  421c1c:	xlat   BYTE PTR ds:[ebx]
  421c1d:	mov    esi,0x312c2394
  421c22:	enter  0x6966,0xf8
  421c26:	mov    ebp,0xc1385865
  421c2b:	clc    
  421c2c:	mov    bh,0x10
  421c2e:	ja     0x421c43
  421c30:	xor    BYTE PTR ds:0x2d7a0afa,al
  421c36:	icebp  
  421c37:	add    ebx,edx
  421c39:	mov    dl,BYTE PTR [eax]
  421c3b:	xchg   BYTE PTR [eax-0x46],ch
  421c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c3f:	dec    eax
  421c40:	shl    DWORD PTR [ebx-0x6c],cl
  421c43:	test   al,0x24
  421c45:	and    BYTE PTR [edi-0x38],0x79
  421c49:	ins    BYTE PTR es:[edi],dx
  421c4a:	mov    ecx,0xcea075ba
  421c4f:	jmp    0xbd56:0xf6f52532
  421c56:	pusha  
  421c57:	pop    ebx
  421c58:	imul   esi,DWORD PTR [esi],0x3f3e376b
  421c5e:	or     eax,0x75dd9149
  421c63:	test   eax,0x672a35b6
  421c68:	jo     0x421c52
  421c6a:	icebp  
  421c6b:	outs   dx,DWORD PTR ds:[esi]
  421c6c:	pop    ds
  421c6d:	adc    DWORD PTR ds:0x7ca883e6,edi
  421c73:	js     0x421ce2
  421c75:	cmc    
  421c76:	loope  0x421cdf
  421c78:	out    dx,eax
  421c79:	(bad)  
  421c7a:	xor    ecx,DWORD PTR [ebp-0x9ddcc28]
  421c80:	or     DWORD PTR [edx+0x72],ecx
  421c83:	cli    
  421c84:	xchg   ebx,eax
  421c85:	rcl    DWORD PTR [edx],1
  421c87:	les    ecx,FWORD PTR [esi-0x4be9bf9a]
  421c8d:	mov    ecx,0x9ed2cc90
  421c92:	push   0x750547ab
  421c97:	push   esp
  421c98:	mov    eax,ds:0x5149cc2a
  421c9d:	mov    bh,0x3f
  421c9f:	data16 jno 0x421cfe
  421ca2:	cmp    BYTE PTR [edi-0x1cd7f2d],bh
  421ca8:	fs movntq (bad),mm0
  421caa:	out    0xc1,eax
  421cac:	xlat   BYTE PTR ds:[ebx]
  421cad:	push   esp
  421cae:	adc    edx,ebp
  421cb0:	mov    ecx,0x731d5e55
  421cb5:	in     al,0x15
  421cb7:	scas   eax,DWORD PTR es:[edi]
  421cb8:	jmp    0x19ba:0x2bc9b9d2
  421cbf:	jae    0x421d02
  421cc1:	stos   BYTE PTR es:[edi],al
  421cc2:	jne    0x421d0f
  421cc4:	xor    ah,BYTE PTR [ebp-0x3b]
  421cc7:	jp     0x421cb7
  421cc9:	mov    eax,0xf122b363
  421cce:	in     al,dx
  421ccf:	jle    0x421d17
  421cd1:	out    0x6a,al
  421cd3:	ds and al,0xf4
  421cd6:	lods   eax,DWORD PTR ds:[esi]
  421cd7:	scas   ax,WORD PTR es:[edi]
  421cd9:	data16 cli 
  421cdb:	outs   dx,BYTE PTR ds:[esi]
  421cdc:	pop    edx
  421cdd:	(bad)  
  421cde:	xchg   ecx,eax
  421cdf:	pop    ecx
  421ce0:	enter  0x3ebe,0x17
  421ce4:	dec    edi
  421ce5:	cdq    
  421ce6:	data16 cli 
  421ce8:	shr    DWORD PTR [ecx+0x4ddfa479],cl
  421cee:	mov    eax,0xcfbad3e1
  421cf3:	add    al,0x26
  421cf5:	rcr    esp,1
  421cf7:	inc    esp
  421cf8:	fldenv [edi-0x60]
  421cfb:	mov    bh,0x7d
  421cfd:	fild   DWORD PTR [ebp+eax*1+0x2a]
  421d01:	add    eax,0xb11bfdc1
  421d06:	pusha  
  421d07:	mov    ds:0x811f793c,eax
  421d0c:	sub    eax,0xb24c35d4
  421d11:	clc    
  421d12:	sbb    esp,DWORD PTR [eax]
  421d14:	and    eax,0x5567e307
  421d19:	pop    ebx
  421d1a:	cmp    DWORD PTR [ecx+0x2a7c8cd2],ecx
  421d20:	sub    cl,BYTE PTR [ecx]
  421d22:	jne    0x421d08
  421d24:	pop    es
  421d25:	xchg   esp,eax
  421d26:	add    BYTE PTR ss:[ebp-0x36],bh
  421d2a:	cmp    al,0x26
  421d2c:	jmp    0x54c2abc3
  421d31:	popa   
  421d32:	jo     0x421d94
  421d34:	push   ebx
  421d35:	fnstcw WORD PTR [esi+0x23]
  421d38:	adc    dh,BYTE PTR [ecx-0x1b]
  421d3b:	test   esi,eax
  421d3d:	xchg   edi,eax
  421d3e:	sbb    al,0x66
  421d40:	mov    bh,0xde
  421d42:	mov    ds:0xf437d3ef,al
  421d47:	inc    ebx
  421d48:	in     al,dx
  421d49:	popf   
  421d4a:	sub    DWORD PTR [ebp+0x51516558],esi
  421d50:	inc    esi
  421d51:	sbb    eax,0xe6e6a02d
  421d56:	xchg   esi,eax
  421d57:	fadd   st,st(4)
  421d59:	xor    bl,BYTE PTR [edx+0x75fc1d8d]
  421d5f:	cmp    al,0x51
  421d61:	gs stos BYTE PTR es:[edi],al
  421d63:	cmc    
  421d64:	(bad)  
  421d65:	inc    ecx
  421d66:	fwait
  421d67:	inc    edx
  421d68:	sbb    edi,DWORD PTR [ecx-0x38]
  421d6b:	jmp    0xc7fc:0x65757dac
  421d72:	mov    esi,0xccd61e49
  421d77:	xor    DWORD PTR [ebx+0x6d],0x6b49e6a2
  421d7e:	ror    BYTE PTR fs:[ecx+0x10fb728a],1
  421d85:	shl    DWORD PTR [edx],1
  421d87:	mov    ?,WORD PTR [ebx]
  421d89:	call   0x5ac3921a
  421d8e:	das    
  421d8f:	dec    eax
  421d90:	sbb    DWORD PTR ds:0x81cd9899,esp
  421d96:	ins    BYTE PTR es:[edi],dx
  421d97:	lock rol BYTE PTR [eax+0x3],1
  421d9b:	lock fwait
  421d9d:	cmp    ch,BYTE PTR [esi-0x3e96c19]
  421da3:	rcl    edx,cl
  421da5:	xor    edx,ecx
  421da7:	mov    esi,0x65cbefcd
  421dac:	xor    BYTE PTR gs:[eax+0x3515ea6e],dl
  421db3:	inc    dx
  421db5:	pusha  
  421db6:	mov    al,0xa5
  421db8:	xor    BYTE PTR [eax],al
  421dba:	enter  0x53f6,0xf8
  421dbe:	shl    DWORD PTR [ebx+edx*8-0x5387a0c1],0x68
  421dc6:	jns    0x421d96
  421dc8:	mov    ds:0xc023d166,al
  421dcd:	(bad)  
  421dcf:	push   0xf01795e0
  421dd4:	sub    eax,0x61d275f3
  421dd9:	dec    esi
  421dda:	or     BYTE PTR [eax],ah
  421ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ddd:	data16 ja 0x421dd4
  421de0:	leave  
  421de1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421de3:	jne    0x421d78
  421de5:	mov    ah,0xef
  421de7:	jge    0x421d75
  421de9:	add    esi,DWORD PTR [ebp+0x68]
  421dec:	repz test BYTE PTR [ebp+0x2c],al
  421df0:	or     ch,cl
  421df2:	or     DWORD PTR [edx+ebp*4-0x80],esp
  421df6:	lds    esi,FWORD PTR [esi]
  421df8:	pop    ebp
  421df9:	add    BYTE PTR [ebp+0x75bd46dc],dh
  421dff:	mov    dl,0x12
  421e01:	test   BYTE PTR [ecx],ah
  421e03:	sahf   
  421e04:	sub    ecx,DWORD PTR [edi-0x10]
  421e07:	data16 xor ch,bh
  421e0a:	add    esi,DWORD PTR [esi]
  421e0c:	cmp    ebp,ecx
  421e0e:	dec    edi
  421e0f:	jl     0x421e0a
  421e11:	stos   DWORD PTR es:[edi],eax
  421e12:	xor    al,0x66
  421e14:	fcomp  QWORD PTR [eax]
  421e16:	stc    
  421e17:	and    al,0x8a
  421e19:	(bad)  
  421e1a:	sbb    cl,BYTE PTR [esi+0x363b541c]
  421e20:	or     DWORD PTR [esi-0x65],0xffffff81
  421e24:	lods   eax,DWORD PTR ds:[esi]
  421e25:	mov    ebp,0xf6d32f95
  421e2a:	fst    DWORD PTR [ebx+ebp*8-0x58e32f94]
  421e31:	push   ds
  421e32:	push   cs
  421e33:	sahf   
  421e34:	cmc    
  421e35:	je     0x421dd0
  421e37:	push   ecx
  421e38:	jo     0x421e83
  421e3a:	cmp    ah,BYTE PTR [esi+0x1c]
  421e3d:	add    DWORD PTR [edx+edx*1-0x618a9631],esp
  421e44:	(bad)  
  421e46:	and    al,0x2f
  421e48:	xchg   edi,eax
  421e49:	cmp    DWORD PTR [edi+0x484f53fe],ebx
  421e4f:	sub    BYTE PTR [ebx-0x2c075467],dl
  421e55:	mov    bl,0x4a
  421e57:	cmp    DWORD PTR [ebx+0x76],esi
  421e5a:	adc    esi,ebp
  421e5c:	daa    
  421e5d:	gs jbe 0x421ea8
  421e60:	(bad)  
  421e61:	inc    DWORD PTR [esi]
  421e63:	(bad)  
  421e64:	aam    0xc7
  421e66:	(bad)  
  421e67:	loope  0x421e64
  421e69:	jmp    0xe044ede3
  421e6e:	clc    
  421e6f:	(bad)  
  421e70:	mov    bl,0xa5
  421e72:	xchg   ecx,eax
  421e73:	inc    dx
  421e75:	dec    edx
  421e76:	in     al,dx
  421e77:	jp     0x421e51
  421e79:	sahf   
  421e7a:	mov    al,ds:0x2388d3d7
  421e7f:	test   DWORD PTR [ebx-0x24],ebp
  421e82:	test   ah,ah
  421e84:	(bad)  
  421e85:	cmp    BYTE PTR [ecx+0x79e5de99],ah
  421e8b:	ins    BYTE PTR es:[edi],dx
  421e8c:	cmp    edx,DWORD PTR [edx-0x645f9964]
  421e92:	cmp    al,0x3a
  421e94:	shl    DWORD PTR [ebp+0x46],cl
  421e97:	je     0x421e4a
  421e99:	lods   eax,DWORD PTR ds:[esi]
  421e9a:	mov    ah,0x70
  421e9c:	push   ds
  421e9d:	add    ah,BYTE PTR gs:[bp+di-0x7add]
  421ea3:	jns    0x421f14
  421ea5:	daa    
  421ea6:	add    dl,al
  421ea8:	call   0xbff5:0xb1eb7524
  421eaf:	loopne 0x421ea5
  421eb1:	adc    eax,DWORD PTR [edx+0x7ce5246a]
  421eb7:	push   0x3be212ce
  421ebc:	gs ins BYTE PTR es:[edi],dx
  421ebe:	jne    0x421e91
  421ec0:	imul   eax,DWORD PTR [ecx+0x25],0xffffffb3
  421ec4:	ins    BYTE PTR es:[edi],dx
  421ec5:	xor    ecx,DWORD PTR [ecx]
  421ec7:	mov    di,0xb8a
  421ecb:	inc    edi
  421ecc:	int    0x18
  421ece:	dec    esp
  421ecf:	inc    esp
  421ed0:	or     bl,BYTE PTR [eax]
  421ed2:	popf   
  421ed3:	fbld   TBYTE PTR [ebx]
  421ed5:	fidiv  DWORD PTR [ebp+0x57e953be]
  421edb:	out    0xe8,eax
  421edd:	push   ss
  421ede:	mov    ds:0x6c2c7d4c,eax
  421ee3:	(bad)  
  421ee4:	cli    
  421ee5:	imul   ebx,DWORD PTR [edi+eiz*2],0xffffffbb
  421ee9:	scas   al,BYTE PTR es:[edi]
  421eea:	enter  0x927b,0xa8
  421eee:	push   edx
  421eef:	push   es
  421ef0:	lock popf 
  421ef2:	data16 mov al,ds:0x38f50f55
  421ef8:	dec    eax
  421ef9:	into   
  421efa:	cdq    
  421efb:	dec    edx
  421efc:	aaa    
  421efd:	sub    DWORD PTR [edx+0x18],esi
  421f00:	mov    ds:0xc934ebbf,eax
  421f05:	mov    si,0x8936
  421f09:	dec    edx
  421f0a:	call   0xaec3429f
  421f0f:	sub    ah,bl
  421f11:	call   0x8d17688b
  421f16:	sbb    edx,ebx
  421f18:	scas   al,BYTE PTR es:[edi]
  421f19:	das    
  421f1a:	sub    DWORD PTR [edx-0x7b],ebp
  421f1d:	out    0xb2,al
  421f1f:	shl    BYTE PTR [ebp-0x59e39ee1],1
  421f25:	lahf   
  421f26:	jne    0x421f4f
  421f28:	lods   eax,DWORD PTR ds:[esi]
  421f29:	add    eax,0xf86bf22a
  421f2e:	mov    al,0x67
  421f30:	into   
  421f31:	sti    
  421f32:	jbe    0x421f23
  421f34:	arpl   WORD PTR gs:[esi-0x5031781a],sp
  421f3b:	dec    ecx
  421f3c:	retf   
  421f3d:	loopne 0x421f44
  421f3f:	xchg   ecx,eax
  421f40:	cs and dl,ah
  421f43:	mov    cl,0xab
  421f45:	xchg   edx,eax
  421f46:	call   0xb520:0xcd70d3ff
  421f4d:	popf   
  421f4e:	in     eax,dx
  421f4f:	pop    ds
  421f50:	fsubr  DWORD PTR [ebp-0x2b]
  421f53:	ds cdq 
  421f55:	cmp    eax,0x985ec9fd
  421f5a:	stos   BYTE PTR es:[edi],al
  421f5b:	mov    dh,0x57
  421f5d:	rcl    BYTE PTR [edx+0x75e64eac],0xf5
  421f64:	call   0x658a:0xe58ceaf
  421f6b:	popa   
  421f6c:	sub    ch,ch
  421f6e:	and    eax,0xef54eac4
  421f73:	(bad)  [ecx+0x7a]
  421f76:	data16 (bad) 
  421f78:	fidiv  DWORD PTR [eax]
  421f7a:	aad    0xe0
  421f7c:	jbe    0x421f0b
  421f7e:	add    esp,DWORD PTR [esi-0x5f]
  421f81:	cs inc ebp
  421f83:	dec    ebx
  421f84:	ror    DWORD PTR [ebx-0x44],cl
  421f87:	repz adc BYTE PTR [ebx+ebp*8-0x419adcd2],0x59
  421f90:	push   0x771140f6
  421f95:	mov    esi,DWORD PTR [edx+0x757b3a0d]
  421f9b:	data16 je 0x421f6b
  421f9e:	push   edi
  421f9f:	sbb    DWORD PTR [ecx],0x2d
  421fa2:	and    cl,BYTE PTR [esi-0x12]
  421fa5:	xchg   ecx,eax
  421fa6:	sahf   
  421fa7:	or     edi,DWORD PTR [ecx]
  421fa9:	lock cli 
  421fab:	call   0xa5bf7135
  421fb0:	inc    esp
  421fb1:	or     al,0x6e
  421fb3:	mov    WORD PTR [esi+0x3],ds
  421fb6:	jmp    esi
  421fb8:	xchg   edi,eax
  421fb9:	jmpw   0xb8be
  421fbd:	arpl   bp,ax
  421fbf:	push   eax
  421fc0:	mov    ch,0x19
  421fc2:	and    esp,DWORD PTR [edx+0x2e75c731]
  421fc8:	and    al,0x3e
  421fca:	cmp    ch,dl
  421fcc:	xchg   ecx,eax
  421fcd:	sbb    al,bh
  421fcf:	data16 aad 0x96
  421fd2:	cmc    
  421fd3:	and    cl,al
  421fd5:	jp     0x421fa9
  421fd7:	cdq    
  421fd8:	jl     0x421fc7
  421fda:	fwait
  421fdb:	pop    eax
  421fdc:	ror    BYTE PTR [edi-0xa],cl
  421fdf:	xchg   ecx,eax
  421fe0:	mov    ecx,0xeb7ebb73
  421fe5:	enter  0x66a5,0xb4
  421fe9:	mov    bl,0x25
  421feb:	out    dx,eax
  421fec:	shr    DWORD PTR [edi],cl
  421fee:	outs   dx,BYTE PTR ds:[esi]
  421fef:	mov    eax,0x305b18c6
  421ff4:	mov    WORD PTR [ecx+ebx*4+0x25],gs
  421ff8:	nop
  421ff9:	inc    esp
  421ffa:	xor    esi,DWORD PTR [ecx+0x1c304eea]
  422000:	add    al,0x1a
  422002:	inc    bx
  422004:	mov    eax,0xbc1fa5a2
  422009:	or     dh,dl
  42200b:	inc    ax
  42200d:	je     0x42207c
  42200f:	retf   
  422010:	rcr    DWORD PTR [esi+eiz*8-0x1bdffe31],cl
  422017:	lods   al,BYTE PTR ds:[esi]
  422018:	jns    0x42207f
  42201a:	push   ss
  42201b:	mov    eax,fs
  42201d:	mov    gs,WORD PTR [esi-0x22]
  422020:	dec    ecx
  422021:	mov    dh,0x99
  422023:	sbb    eax,DWORD PTR [ebx+eax*8]
  422026:	jne    0x421fb1
  422028:	pop    esp
  422029:	jnp    0x421fe9
  42202b:	les    esp,FWORD PTR [ebx+0x5c]
  42202e:	xor    al,0x66
  422030:	in     al,dx
  422031:	inc    edx
  422032:	fistp  QWORD PTR [esi+0x35f4e0d3]
  422038:	cmp    al,0x10
  42203a:	push   esp
  42203b:	add    esp,DWORD PTR [eax-0x7a297d9a]
  422041:	add    bh,BYTE PTR [ecx-0xeec8e52]
  422047:	mov    dh,0xff
  422049:	xor    DWORD PTR [ebp-0x32],0x52
  42204d:	test   DWORD PTR [edi+0x10f9b68b],esp
  422053:	data16 sbb al,BYTE PTR [di]
  422057:	(bad)  
  422059:	cmp    eax,edi
  42205b:	test   BYTE PTR [edx-0x6030644d],ah
  422061:	ins    DWORD PTR es:[edi],dx
  422062:	push   0x2f856ab7
  422067:	xor    eax,0x16fd8dc9
  42206c:	ror    ebp,cl
  42206e:	cld    
  42206f:	loope  0x422085
  422071:	js     0x42205a
  422073:	and    DWORD PTR [ecx-0x4ce16a02],esi
  422079:	cmp    DWORD PTR [eax+0x61],ebp
  42207c:	sahf   
  42207d:	push   esp
  42207e:	add    cl,bl
  422080:	ror    edi,cl
  422082:	dec    ah
  422084:	sti    
  422085:	leave  
  422086:	stc    
  422087:	jbe    0x42207b
  422089:	pop    ebx
  42208a:	sub    DWORD PTR [ecx+0x7a],ebx
  42208d:	push   edi
  42208e:	jmp    0x6aa77019
  422093:	fwait
  422094:	lea    ecx,[edi]
  422096:	push   eax
  422097:	push   ds
  422098:	shl    DWORD PTR [ecx-0xdf831f8],cl
  42209e:	fcmovnb st,st(1)
  4220a0:	je     0x422107
  4220a2:	cmp    DWORD PTR [ecx+esi*2-0x4a],ebp
  4220a6:	mov    eax,0x9d2376b
  4220ab:	sub    ah,ch
  4220ad:	xor    BYTE PTR [ebp+0x44],dh
  4220b0:	sar    BYTE PTR [edx+0x5a],0xaf
  4220b4:	mov    al,0x66
  4220b6:	adc    eax,0x259f84f7
  4220bb:	or     eax,0xc23b71f2
  4220c0:	es aas 
  4220c2:	imul   edi,DWORD PTR ds:0x669485c8,0x16
  4220c9:	data16 mov cl,0xb5
  4220cc:	(bad)  
  4220cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ce:	in     al,dx
  4220cf:	mov    ah,0x85
  4220d1:	div    BYTE PTR [edx]
  4220d3:	sbb    ebx,edx
  4220d5:	bnd jo 0x42209a
  4220d8:	into   
  4220d9:	add    eax,0x76a2d7ab
  4220de:	dec    edx
  4220df:	cs lahf 
  4220e1:	adc    BYTE PTR ds:0x8d816965,ah
  4220e7:	test   al,0x78
  4220e9:	ss jge 0x4220fe
  4220ec:	shl    esp,cl
  4220ee:	inc    edi
  4220ef:	sub    ch,BYTE PTR [edx+0x2e4395e6]
  4220f5:	ds scas eax,DWORD PTR es:[edi]
  4220f7:	nop
  4220f8:	out    0xaf,al
  4220fa:	push   0x6f715335
  4220ff:	hlt    
  422100:	add    al,0xd7
  422102:	pop    ecx
  422103:	jl     0x422164
  422105:	test   BYTE PTR [ebp-0x76],dh
  422108:	push   ds
  422109:	mov    al,BYTE PTR [ebx]
  42210b:	sub    edx,DWORD PTR [ebx]
  42210d:	fild   QWORD PTR [edx-0x5face39a]
  422113:	out    dx,eax
  422114:	daa    
  422115:	shl    DWORD PTR [edx+0x22],cl
  422118:	(bad)  
  42211a:	inc    ebx
  42211b:	imul   esi,DWORD PTR [eax+0x33dc7358],0xf7c3abb0
  422125:	xor    eax,0xb4a466df
  42212a:	dec    BYTE PTR [edi-0x65ebba2d]
  422130:	mov    ds:0xb0f2a555,al
  422135:	data16 adc BYTE PTR [ebx-0x15],ah
  422139:	mov    dl,0xe5
  42213b:	mov    ss,WORD PTR [eax]
  42213d:	pushf  
  42213e:	xchg   eax,esi
  422140:	push   0x79f756f
  422145:	ret    
  422146:	lods   al,BYTE PTR ds:[esi]
  422147:	call   0xb61b9107
  42214c:	mov    ebx,0xd3e71133
  422151:	add    eax,0xd4000bbd
  422156:	ins    DWORD PTR es:[edi],dx
  422157:	nop
  422158:	aam    0x66
  42215a:	addr16 mov cl,0xec
  42215d:	mov    al,ds:0x5375089e
  422162:	retf   0x45d8
  422165:	mov    ebx,0x7785e75
  42216a:	les    ebx,FWORD PTR [edx-0x21d3845d]
  422170:	sub    ah,BYTE PTR [ecx]
  422172:	jne    0x4221e0
  422174:	arpl   WORD PTR [edx-0x23],sp
  422177:	xor    eax,0xdc75f817
  42217c:	out    0x6b,eax
  42217e:	add    DWORD PTR [edi+0x6724d96f],esi
  422184:	mov    esi,0x8de5cf9d
  422189:	pusha  
  42218a:	or     al,0x52
  42218c:	mov    ds:0x9d69be8,al
  422191:	mov    bh,0xb5
  422193:	jg     0x422180
  422195:	xor    ecx,0xa452cc4e
  42219b:	data16 gs ja 0x422167
  42219f:	ret    
  4221a0:	push   esp
  4221a1:	mov    eax,ds:0x65fd03bf
  4221a6:	mov    eax,0x3d076686
  4221ab:	inc    edx
  4221ac:	and    al,0x6c
  4221ae:	cmp    al,0xc8
  4221b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b1:	mul    DWORD PTR [esi-0x13]
  4221b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b5:	dec    eax
  4221b6:	loope  0x4221be
  4221b8:	rol    DWORD PTR ds:0x27e2408d,cl
  4221be:	arpl   WORD PTR [edx+0x4c8265e1],di
  4221c4:	mov    esp,0x88241cc7
  4221c9:	adc    DWORD PTR [ebp-0x40e2cef],ebx
  4221cf:	into   
  4221d0:	sbb    al,0xfd
  4221d3:	not    BYTE PTR [eax+0x51003c66]
  4221d9:	or     al,0x51
  4221db:	mov    bl,0x85
  4221dd:	jbe    0x422178
  4221df:	(bad)  
  4221e0:	adc    cl,BYTE PTR [edi+0x75]
  4221e3:	xor    bh,BYTE PTR [edi]
  4221e5:	dec    BYTE PTR [ebx-0x29]
  4221e8:	daa    
  4221e9:	or     eax,0xf48660e
  4221ee:	lods   eax,DWORD PTR ds:[esi]
  4221ef:	mov    ebx,0x2ed79656
  4221f4:	mov    esp,0x34b727a
  4221f9:	fstp   TBYTE PTR [ebx]
  4221fb:	jnp    0x4221e9
  4221fd:	test   DWORD PTR gs:[ebx+0x50],esi
  422201:	(bad)  
  422202:	clc    
  422203:	aaa    
  422204:	daa    
  422205:	mov    eax,ds:0x34d383ce
  42220a:	jge    0x422201
  42220c:	int3   
  42220d:	xor    DWORD PTR [eax-0x2e],ebp
  422210:	mul    BYTE PTR [eax-0x21]
  422213:	nop
  422214:	jecxz  0x42219f
  422216:	xlat   BYTE PTR ds:[ebx]
  422217:	sub    eax,0x3b3bfa53
  42221c:	shl    DWORD PTR [esp+ebx*2],cl
  42221f:	loopne 0x42223a
  422221:	jbe    0x422203
  422223:	aam    0xf8
  422225:	and    al,BYTE PTR gs:[ecx]
  422228:	cdq    
  422229:	in     eax,dx
  42222a:	and    BYTE PTR [esi-0x68d32073],dl
  422230:	sar    DWORD PTR [ebp+0x5e9eb2fc],cl
  422236:	push   cs
  422237:	fmul   DWORD PTR [ebp+0x65]
  42223a:	into   
  42223b:	mov    ecx,0x6d9a065
  422240:	mov    ds:0x1e39d23b,eax
  422245:	sub    dh,BYTE PTR [ebp-0x24]
  422248:	push   cs
  422249:	fwait
  42224a:	xchg   ebp,eax
  42224b:	vcmpsd xmm3,xmm7,QWORD PTR [eax+0x66],0xc5
  422251:	pop    esp
  422252:	sub    DWORD PTR [ecx-0x2d],0xffffff92
  422256:	inc    ebx
  422257:	mov    dh,BYTE PTR [ebp+0x6d]
  42225a:	lods   eax,DWORD PTR ds:[esi]
  42225b:	daa    
  42225c:	popf   
  42225d:	xor    bx,ax
  422260:	mov    ch,BYTE PTR [ebx+ecx*4-0xd]
  422264:	add    sp,WORD PTR ds:0x63d283e5
  42226b:	aam    0xb4
  42226d:	lahf   
  42226e:	cdq    
  42226f:	pop    es
  422270:	shr    BYTE PTR [edx-0xb],1
  422273:	xchg   bh,bh
  422275:	lock out 0x88,al
  422278:	sbb    DWORD PTR [edi-0x2],esi
  42227b:	loopne 0x42229b
  42227d:	fstp   TBYTE PTR [edi]
  42227f:	div    si
  422282:	pop    eax
  422283:	xor    bl,dl
  422285:	stc    
  422286:	jno    0x4222a1
  422288:	cmp    esp,DWORD PTR [edx+0x549e9a26]
  42228e:	jge    0x42224c
  422290:	retf   
  422291:	mov    eax,0x394e4936
  422296:	retf   
  422297:	pusha  
  422298:	arpl   WORD PTR ds:0x72d38a6f,bx
  42229e:	aam    0x3e
  4222a0:	and    al,0x81
  4222a2:	jge    0x422250
  4222a4:	into   
  4222a5:	add    WORD PTR ds:0xc64b861a,dx
  4222ac:	sbb    al,0x7a
  4222ae:	push   edx
  4222af:	add    al,0x2b
  4222b1:	lea    esi,[eax+ebx*4-0x52]
  4222b5:	jle    0x4222e2
  4222b7:	shl    DWORD PTR gs:[ecx+eiz*1],1
  4222bb:	popa   
  4222bc:	push   0xfffffff2
  4222be:	(bad)  
  4222bf:	fadd   st,st(0)
  4222c1:	xchg   dl,ch
  4222c3:	pop    ds
  4222c4:	stc    
  4222c5:	add    edx,edi
  4222c7:	ss hlt 
  4222c9:	push   0x9693e849
  4222ce:	add    BYTE PTR [eax+0x13],bl
  4222d1:	hlt    
  4222d2:	or     DWORD PTR [esi],0x66e823e6
  4222d8:	ja     0x4222b8
  4222da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222db:	dec    ebp
  4222dc:	sar    DWORD PTR [edi+0x53],0x72
  4222e0:	shl    DWORD PTR [ebx+edi*8+0x21],cl
  4222e4:	push   esi
  4222e5:	in     al,0x6f
  4222e7:	in     al,0x10
  4222e9:	and    esp,0xffffffbf
  4222ec:	enter  0xb61c,0x66
  4222f0:	and    DWORD PTR [ebx],esp
  4222f2:	jmp    DWORD PTR [edx-0x7feb441e]
  4222f8:	and    BYTE PTR [esi+0x3a],0x9
  4222fc:	daa    
  4222fd:	fldenv [edx+0x2b]
  422300:	inc    eax
  422301:	push   eax
  422302:	sbb    dl,BYTE PTR [edx+0x317c4cff]
  422308:	mov    bl,0x8c
  42230a:	jbe    0x42232c
  42230c:	adc    BYTE PTR [ebp-0x41],dh
  42230f:	(bad)  
  422310:	pop    ds
  422311:	gs stos DWORD PTR es:[edi],eax
  422313:	push   ds
  422314:	jle    0x4222cc
  422316:	in     eax,dx
  422317:	push   ss
  422318:	and    dl,bl
  42231a:	repnz jmp 0xc9fa:0x2dc6ffd3
  422322:	pop    esp
  422323:	test   BYTE PTR [esi],0x61
  422326:	sbb    eax,0x57ee2b3
  42232b:	bound  edi,QWORD PTR [ebx]
  42232d:	ret    0xe64c
  422330:	rcr    DWORD PTR ds:0x7672ac70,cl
  422336:	shl    DWORD PTR [edi],cl
  422338:	mov    ecx,0x5b1f7266
  42233d:	sbb    DWORD PTR ds:0xa06a7c82,edi
  422343:	ror    ecx,cl
  422345:	xor    BYTE PTR [ebp-0x7f],0x94
  422349:	dec    esp
  42234a:	sbb    BYTE PTR [esi-0x5117e7ff],bh
  422350:	mov    ebp,0xce107523
  422355:	(bad)  
  422356:	sbb    eax,esp
  422358:	dec    ecx
  422359:	xchg   edi,eax
  42235a:	jne    0x4223d2
  42235c:	jp     0x4223d6
  42235e:	mov    DWORD PTR [ecx-0xf],0xf669a1ba
  422365:	xchg   ebp,eax
  422366:	sbb    al,0xce
  422369:	dec    edi
  42236a:	inc    eax
  42236b:	es sub eax,0x7ad0bc63
  422371:	daa    
  422372:	mov    ebp,DWORD PTR ds:[esi]
  422375:	bound  ebx,QWORD PTR [ebx]
  422377:	xchg   ebp,eax
  422378:	ds loop 0x42234a
  42237b:	mov    bx,0x4534
  42237f:	mov    DWORD PTR [ebx],ecx
  422381:	pop    ecx
  422382:	jne    0x42235c
  422384:	aad    0x71
  422386:	inc    edx
  422387:	jb     0x422325
  422389:	push   eax
  42238a:	mov    cl,0x6a
  42238c:	mov    ch,0xe6
  42238e:	dec    edx
  42238f:	jge    0x42232d
  422391:	enter  0x59e4,0x42
  422395:	shl    DWORD PTR [ebp-0x55],0x5
  422399:	mov    edi,0x60ae8772
  42239e:	lea    esp,[edi+0x3c]
  4223a1:	aad    0xd
  4223a3:	rcr    DWORD PTR [ecx+0x2b],1
  4223a6:	push   cs
  4223a7:	jle    0x422348
  4223a9:	mov    BYTE PTR [ebp-0x3],dh
  4223ac:	or     DWORD PTR [ecx+0x7029b9e1],esp
  4223b2:	pop    ebp
  4223b3:	gs mov dl,0x8f
  4223b6:	push   edx
  4223b7:	mov    BYTE PTR [esi+0x7],bh
  4223ba:	or     eax,0x7b2fd38a
  4223bf:	mov    ds:0xc377743c,al
  4223c4:	xor    bl,BYTE PTR [ebx-0x52]
  4223c7:	test   ecx,eax
  4223c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ca:	retf   
  4223cb:	into   
  4223cc:	pushf  
  4223cd:	xlat   BYTE PTR ds:[ebx]
  4223ce:	cdq    
  4223cf:	cdq    
  4223d0:	rol    DWORD PTR [edi-0x2b2a865b],cl
  4223d6:	and    al,0x75
  4223d8:	xor    ah,BYTE PTR [ebp+0x5c]
  4223db:	int3   
  4223dc:	fld    DWORD PTR [edi+ecx*2]
  4223df:	mov    ds:0xfd2b2541,al
  4223e4:	push   ecx
  4223e5:	out    dx,al
  4223e6:	jne    0x42237e
  4223e8:	dec    ebx
  4223e9:	sub    al,0xf
  4223eb:	add    BYTE PTR [ebp+0x4a67e45c],bh
  4223f1:	jp     0x422378
  4223f3:	pop    eax
  4223f4:	cld    
  4223f5:	cmp    DWORD PTR [edi],esi
  4223f7:	push   edx
  4223f8:	dec    edi
  4223f9:	cmp    dh,BYTE PTR [ebp-0x3e]
  4223fc:	shl    dl,cl
  4223fe:	xchg   edi,eax
  4223ff:	jmp    0xb76:0xbdea345d
  422406:	cmc    
  422407:	dec    edi
  422408:	loopne 0x422447
  42240a:	arpl   WORD PTR [ecx+0x18b8dae7],ax
  422410:	xchg   ebx,eax
  422411:	cmp    eax,0x9eb0cc99
  422416:	mov    edi,0xad9dd516
  42241b:	mov    ebp,0x4f7530f5
  422420:	in     eax,dx
  422421:	cmp    ch,dh
  422423:	mov    dl,0x37
  422425:	push   cs
  422426:	jne    0x4223fc
  422428:	cwde   
  422429:	adc    bl,al
  42242b:	cmp    esp,esp
  42242d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42242e:	cdq    
  42242f:	gs jg  0x4223ca
  422432:	ins    DWORD PTR es:[edi],dx
  422433:	(bad)  
  422434:	push   cs
  422435:	leave  
  422436:	jne    0x422475
  422438:	repnz adc ch,ah
  42243b:	mov    al,0x81
  42243d:	(bad)  
  42243e:	icebp  
  42243f:	xchg   ecx,eax
  422440:	adc    eax,edi
  422442:	lods   al,BYTE PTR ds:[esi]
  422443:	(bad)  
  422444:	jge    0x42244e
  422446:	and    eax,0x7236d71d
  42244b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42244c:	jo     0x42248f
  42244e:	jnp    0x4223ee
  422450:	scas   eax,DWORD PTR es:[edi]
  422451:	cwde   
  422452:	mov    bl,0xa9
  422454:	mov    edx,0xa2669596
  422459:	loop   0x422421
  42245b:	push   ds
  42245c:	shl    DWORD PTR [ebx],cl
  42245e:	mov    eax,0xc24cb0c0
  422463:	ss cs gs inc eax
  422467:	xchg   edx,eax
  422468:	mov    cl,0xe8
  42246a:	jmp    0xfdfa:0x7feb2a97
  422471:	cmp    ah,0x9c
  422474:	shr    DWORD PTR [esi],cl
  422476:	inc    ecx
  422477:	or     al,0x84
  422479:	xchg   esp,eax
  42247a:	adc    edx,DWORD PTR [edx]
  42247c:	pop    es
  42247d:	ret    0x6d1e
  422480:	push   ebx
  422481:	dec    eax
  422482:	ss mov cl,0x1
  422485:	lods   eax,DWORD PTR ds:[esi]
  422486:	and    DWORD PTR [ecx],ecx
  422488:	repnz mov ch,0x72
  42248b:	sar    BYTE PTR [ebx+eax*8],0x86
  42248f:	jge    0x42242d
  422491:	es jne 0x4224a2
  422494:	inc    ebx
  422495:	push   esp
  422496:	les    ebp,FWORD PTR [ebp+0x5fa328]
  42249c:	and    BYTE PTR [ebp+esi*2-0x1b],dh
  4224a0:	rol    DWORD PTR [ebp+0x2056bf1d],cl
  4224a6:	out    0xfe,al
  4224a8:	pop    edx
  4224a9:	sbb    DWORD PTR [edx-0x1],0x62a56692
  4224b0:	xchg   esp,eax
  4224b1:	sub    BYTE PTR [esp+ecx*8-0x73d8e365],al
  4224b8:	fs jne 0x422532
  4224bb:	call   0x5ac24b73
  4224c0:	iret   
  4224c1:	imul   edx,esi,0x6fbe096
  4224c7:	add    DWORD PTR [esi],ebx
  4224c9:	add    BYTE PTR [ebp+0x55],bl
  4224cc:	and    DWORD PTR [esi+0x54327a34],0x49f33cf3
  4224d6:	test   al,0xf9
  4224d8:	xchg   ecx,eax
  4224d9:	outs   dx,BYTE PTR ds:[esi]
  4224da:	cmc    
  4224db:	mov    al,ds:0x1e7da3ea
  4224e0:	push   eax
  4224e1:	push   ebp
  4224e2:	push   DWORD PTR [ebp-0x3a]
  4224e5:	std    
  4224e6:	inc    ebp
  4224e7:	mov    ds:0x660a5a80,eax
  4224ec:	fnstenv [edi]
  4224ee:	js     0x42250d
  4224f0:	rcr    ecx,cl
  4224f2:	sub    al,0x10
  4224f4:	inc    esi
  4224f5:	stos   DWORD PTR es:[di],eax
  4224f7:	leave  
  4224f8:	mov    ds:0x13bf2466,eax
  4224fd:	call   eax
  4224ff:	xchg   ecx,eax
  422500:	push   edi
  422501:	loope  0x422577
  422503:	inc    ebx
  422504:	lea    edi,[ebx+0x6acc4d75]
  42250a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42250b:	jecxz  0x422579
  42250d:	outs   dx,BYTE PTR ds:[esi]
  42250e:	mov    eax,ds:0x944c4d95
  422513:	data16 mov dh,0x96
  422516:	sub    bl,BYTE PTR [ebp+0x5975ca3e]
  42251c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42251d:	mov    DWORD PTR [edi-0x5d],edx
  422520:	pusha  
  422521:	out    0xea,al
  422523:	inc    di
  422525:	mov    eax,0x1dd3e462
  42252a:	pop    es
  42252b:	xchg   dh,ch
  42252d:	in     al,dx
  42252e:	shr    bl,1
  422530:	xchg   ecx,eax
  422531:	push   cx
  422533:	out    0xec,al
  422535:	in     eax,dx
  422536:	push   cs
  422537:	shl    BYTE PTR [edi-0x2d547fe4],1
  42253d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42253e:	jne    0x4224ed
  422540:	fiadd  DWORD PTR [ecx+0x61]
  422543:	adc    al,0x44
  422545:	gs adc al,0xfb
  422548:	in     eax,0x12
  42254a:	pusha  
  42254b:	pop    esp
  42254c:	and    al,BYTE PTR [ebp+0x20489c1a]
  422552:	jne    0x422556
  422554:	fnstcw WORD PTR [esi-0x12faba10]
  42255a:	mov    ch,0x66
  42255c:	retf   
  42255d:	pushf  
  42255e:	mov    al,0x7a
  422560:	leave  
  422561:	jle    0x4224e5
  422563:	out    0xb2,eax
  422565:	dec    ebx
  422566:	je     0x422544
  422568:	pop    eax
  422569:	and    DWORD PTR [edx+0x5d5944d6],esi
  42256f:	mov    eax,DWORD PTR [edi-0x1b]
  422572:	outs   dx,BYTE PTR ds:[esi]
  422573:	pop    ebx
  422574:	fist   DWORD PTR [edi+0x62]
  422577:	push   ecx
  422578:	daa    
  422579:	xor    BYTE PTR [edi],al
  42257b:	mov    edi,0x66ef04f0
  422580:	out    0xbe,al
  422582:	stos   BYTE PTR es:[edi],al
  422583:	mov    ebx,0x6639bdcd
  422588:	or     DWORD PTR [ebp-0x4],ebx
  42258b:	jnp    0x422560
  42258d:	jbe    0x42255a
  42258f:	icebp  
  422590:	les    ebp,FWORD PTR ds:0x66d9e48d
  422596:	cmp    eax,0xac93db35
  42259b:	imul   eax,DWORD PTR [edi],0xffffff82
  42259e:	or     ah,dl
  4225a0:	aad    0x50
  4225a2:	std    
  4225a3:	cmp    al,dh
  4225a5:	mov    DWORD PTR [ebp+0x68],esi
  4225a8:	xchg   ecx,eax
  4225a9:	sar    bh,cl
  4225ab:	in     eax,dx
  4225ac:	and    eax,DWORD PTR [esi-0x66ce5ed8]
  4225b2:	jne    0x4225a7
  4225b4:	out    0x3f,eax
  4225b6:	ficomp WORD PTR ds:0xaf752c75
  4225bc:	cmp    BYTE PTR [eax+eax*2+0x3],al
  4225c0:	mul    DWORD PTR [ebp-0x61]
  4225c3:	cmc    
  4225c4:	push   edx
  4225c5:	cmp    bl,al
  4225c7:	push   ebp
  4225c8:	lahf   
  4225c9:	scas   al,BYTE PTR es:[edi]
  4225ca:	hlt    
  4225cb:	stos   BYTE PTR es:[edi],al
  4225cc:	sbb    DWORD PTR [ebx+0x6b],esp
  4225cf:	push   ss
  4225d0:	push   ebx
  4225d1:	iret   
  4225d2:	fcmovb st,st(0)
  4225d4:	mov    ch,0x44
  4225d6:	mov    ebx,0x3dd5a498
  4225db:	imul   eax,eax,0x71f48677
  4225e1:	mov    eax,ds:0x55d09083
  4225e6:	sub    al,0x7
  4225e8:	xchg   edi,eax
  4225e9:	xchg   esp,eax
  4225ea:	cli    
  4225eb:	xor    DWORD PTR [edi-0x7656d587],0xda665697
  4225f5:	icebp  
  4225f6:	xor    al,BYTE PTR [eax-0x16]
  4225f9:	fucom  st(0)
  4225fb:	xor    eax,0x6bfe5ecb
  422600:	shl    BYTE PTR [esi],1
  422602:	and    bl,BYTE PTR [edi+eax*8]
  422605:	jp     0x422628
  422607:	and    DWORD PTR [edx+ebx*2+0x15a81c7],ebx
  42260e:	xchg   ebp,eax
  42260f:	out    0x58,al
  422611:	mov    esi,0x50371c
  422616:	jne    0x4225c6
  422618:	mov    al,ds:0x75ded20
  42261d:	mov    ds:0x8de2673a,al
  422622:	mov    ebx,DWORD PTR [ebx-0x39d1f34c]
  422628:	pusha  
  422629:	gs mov ebx,0x8623a4de
  42262f:	push   0x52
  422631:	gs dec edx
  422633:	mov    WORD PTR [ecx-0x4e16e354],fs
  422639:	out    0x62,eax
  42263b:	ret    0x575e
  42263e:	jne    0x422682
  422640:	fwait
  422641:	cmp    DWORD PTR [edx],ebx
  422643:	sub    eax,0xa00affbc
  422648:	leave  
  422649:	stc    
  42264a:	ret    
  42264b:	jecxz  0x4225fa
  42264d:	jo     0x42260a
  42264f:	gs jmpw 0x4b94
  422654:	pop    eax
  422655:	std    
  422656:	repz xchg edx,eax
  422658:	fldenv [edx+0x7808bf75]
  42265e:	and    eax,0xfe8d800e
  422663:	addr16 xchg esi,eax
  422665:	jmp    FWORD PTR [edx]
  422667:	out    dx,al
  422668:	dec    ebx
  422669:	nop
  42266a:	sbb    DWORD PTR [edx+0xb],esi
  42266d:	push   ecx
  42266e:	fwait
  42266f:	jmp    0x626e082a
  422674:	pop    ebp
  422675:	cwde   
  422676:	xor    bl,ch
  422678:	ins    BYTE PTR es:[edi],dx
  422679:	shl    cl,1
  42267b:	inc    esi
  42267c:	loop   0x4226b4
  42267e:	inc    eax
  42267f:	ret    0x554d
  422682:	jne    0x4226b7
  422684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422685:	pop    ebx
  422686:	sbb    eax,0x6b4c9da8
  42268b:	inc    esp
  42268c:	sbb    eax,0x8e64e31
  422691:	pusha  
  422692:	pop    ds
  422693:	jge    0x422686
  422695:	int3   
  422696:	loope  0x422705
  422698:	mov    ds:0xd3d2948e,eax
  42269d:	dec    edi
  42269e:	mov    bl,0x4b
  4226a0:	je     0x422661
  4226a2:	in     eax,dx
  4226a3:	push   ecx
  4226a4:	sub    ecx,DWORD PTR [edi+0x3baa136a]
  4226aa:	add    BYTE PTR [ecx+0x60],ch
  4226ad:	adc    eax,0x6555d5c
  4226b2:	inc    edx
  4226b3:	fdivr  DWORD PTR [edx-0x16db8a26]
  4226b9:	cld    
  4226ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226bb:	dec    edx
  4226bc:	mov    ds:0x7a6685b3,al
  4226c1:	fs mov dl,0x7a
  4226c4:	shl    DWORD PTR [ebp-0x362f57e9],cl
  4226ca:	and    cl,cl
  4226cc:	inc    eax
  4226cd:	ins    BYTE PTR es:[edi],dx
  4226ce:	mov    eax,DWORD PTR [eax+0x43659184]
  4226d4:	cld    
  4226d5:	add    DWORD PTR [edi+0xdfbb0a5],ebp
  4226db:	popa   
  4226dc:	mov    bh,ah
  4226de:	jne    0x42274a
  4226e0:	ss pushf 
  4226e2:	pop    ecx
  4226e3:	(bad)  
  4226e4:	repz pop esp
  4226e6:	pop    eax
  4226e7:	data16 or bh,BYTE PTR [ebx+0x7e]
  4226eb:	sbb    bl,dl
  4226ed:	es in  al,dx
  4226ef:	mov    esi,0xd3d5e6d7
  4226f4:	push   0x43
  4226f6:	enter  0xf524,0x65
  4226fa:	loopne 0x4226de
  4226fc:	mov    dl,0x92
  4226fe:	sub    edi,DWORD PTR [edx]
  422700:	jmp    0x5f2a:0x342cf16b
  422707:	or     DWORD PTR [edx+0x1c6cc56c],edx
  42270d:	cmp    eax,0x4e606744
  422712:	inc    ecx
  422713:	leave  
  422714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422716:	jo     0x4226d9
  422718:	adc    al,0x8f
  42271a:	jne    0x422744
  42271c:	dec    esp
  42271d:	or     DWORD PTR [ecx-0x4c],ebx
  422720:	dec    esi
  422721:	xor    ebp,DWORD PTR [ecx]
  422723:	xchg   ecx,eax
  422724:	adc    esi,edx
  422726:	clc    
  422727:	sub    dl,bh
  422729:	mov    ds:0x7d06dd05,eax
  42272e:	je     0x42270d
  422730:	ret    0x48bc
  422733:	in     al,0x2d
  422735:	pop    esp
  422736:	push   edx
  422737:	es addr16 gs mov ebp,0x76209946
  42273f:	dec    esi
  422740:	js     0x422759
  422742:	or     al,0x51
  422744:	add    ebp,ebx
  422746:	jne    0x4227a5
  422748:	test   DWORD PTR [esi],0x1ad4c1bc
  42274e:	adc    BYTE PTR [esp+ebx*2-0x12],ah
  422752:	xor    bl,BYTE PTR [eax-0x4bcae634]
  422758:	daa    
  422759:	adc    bh,dl
  42275b:	ficom  DWORD PTR [eax+0x7ca135e6]
  422761:	sbb    ah,BYTE PTR [edx-0x5c9ae361]
  422767:	cmp    eax,0x97e545a6
  42276c:	mov    al,ds:0x9757619b
  422771:	cli    
  422772:	jne    0x42274b
  422774:	(bad)  
  422775:	sar    BYTE PTR [edi+ebx*2+0x61],1
  422779:	pop    esp
  42277a:	fldenv [esi+0x69]
  42277d:	outs   dx,BYTE PTR ds:[esi]
  42277e:	jns    0x4227ae
  422780:	rcr    edi,cl
  422782:	jb     0x4227df
  422784:	mov    dh,0x8f
  422786:	rol    DWORD PTR [edx],0xa3
  422789:	data16 aaa 
  42278b:	icebp  
  42278c:	mov    bl,0x78
  42278e:	jno    0x422801
  422790:	add    al,0x5f
  422792:	out    dx,al
  422793:	dec    eax
  422794:	sub    al,BYTE PTR [ecx-0x2302108b]
  42279a:	xchg   edx,eax
  42279b:	mov    DWORD PTR [ecx+0x6366fd5f],0xd38ab014
  4227a5:	clc    
  4227a6:	retf   0x6f85
  4227a9:	loopne 0x422800
  4227ab:	sub    BYTE PTR [eax+0x65],bl
  4227ae:	mov    ch,0x59
  4227b0:	ja     0x422807
  4227b2:	shl    edx,1
  4227b4:	sub    DWORD PTR [ebp+0x39],ecx
  4227b7:	xchg   BYTE PTR [esi],cl
  4227b9:	div    DWORD PTR [ebp+0x1c]
  4227bc:	push   ss
  4227bd:	pop    ebx
  4227be:	push   edx
  4227bf:	xchg   esp,eax
  4227c0:	mov    esp,0x966d58b
  4227c5:	fs aas 
  4227c7:	mov    esi,0xcfa58df5
  4227cc:	rcl    DWORD PTR [ecx-0x6c],cl
  4227cf:	jno    0x42282a
  4227d1:	outs   dx,DWORD PTR ds:[esi]
  4227d2:	not    DWORD PTR [ebx+eiz*8]
  4227d5:	jge    0x422781
  4227d7:	hlt    
  4227d8:	fist   WORD PTR [edi]
  4227da:	clc    
  4227db:	data16 stc 
  4227dd:	loop   0x42280e
  4227df:	push   eax
  4227e0:	loop   0x42285b
  4227e2:	jno    0x422825
  4227e4:	add    ah,ch
  4227e6:	ss cmp eax,0x856b6cfc
  4227ec:	pop    ebx
  4227ed:	mov    bh,0xf7
  4227ef:	addr16 pop ebx
  4227f1:	dec    esp
  4227f2:	leave  
  4227f3:	mov    al,0x9c
  4227f5:	jp     0x42282a
  4227f7:	push   edi
  4227f8:	shl    DWORD PTR [ebp+0x42],cl
  4227fb:	or     ah,bh
  4227fd:	in     al,dx
  4227fe:	pop    esi
  4227ff:	cmp    DWORD PTR [edx-0xd],ebx
  422802:	or     bl,BYTE PTR [edi+0x663dc58d]
  422808:	mov    bh,0xb4
  42280a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280b:	not    ebx
  42280d:	hlt    
  42280e:	fcomp  st(3)
  422810:	les    ecx,FWORD PTR [ebp+0x5ae0d320]
  422816:	mov    dh,0xe5
  422818:	or     BYTE PTR ds:0x3ed26896,ah
  42281e:	jno    0x42280e
  422820:	sar    BYTE PTR [ecx+0x10],cl
  422823:	outs   dx,BYTE PTR ds:[esi]
  422824:	leave  
  422825:	out    dx,al
  422826:	adc    al,0xfd
  422828:	call   0x93f6:0x76cbcfe
  42282f:	test   ax,0xd50c
  422833:	in     al,0xd3
  422835:	shl    BYTE PTR [eax+0x7c],1
  422838:	xchg   esi,eax
  422839:	xchg   ebx,eax
  42283a:	nop
  42283b:	cli    
  42283c:	push   edx
  42283d:	cmp    ecx,DWORD PTR [edx-0x59ebacc1]
  422843:	xchg   cl,al
  422845:	jne    0x422803
  422847:	and    eax,0x4a4da6e8
  42284c:	add    eax,0x691e3d4
  422851:	fcmove st,st(1)
  422853:	daa    
  422854:	(bad)  
  422855:	cwde   
  422856:	dec    ebx
  422857:	loop   0x4228c6
  422859:	retf   0x6689
  42285c:	stos   BYTE PTR es:[edi],al
  42285d:	cld    
  42285e:	add    bl,0xd3
  422861:	imul   esp,DWORD PTR [esp],0x56fbeb3e
  422868:	out    dx,eax
  422869:	gs clc 
  42286b:	mov    dh,0x7d
  42286d:	arpl   WORD PTR [esi],si
  42286f:	push   eax
  422870:	or     dh,al
  422872:	ret    0x7741
  422875:	and    eax,0x392b9675
  42287a:	xchg   ebx,eax
  42287b:	test   DWORD PTR [ecx-0x32],edx
  42287e:	stos   BYTE PTR es:[edi],al
  42287f:	iretw  
  422881:	in     eax,dx
  422882:	push   edi
  422883:	mov    ah,0xee
  422885:	dec    esp
  422886:	inc    esp
  422887:	dec    ecx
  422888:	xor    ah,BYTE PTR [edx-0x15ab89b3]
  42288e:	pop    ss
  42288f:	push   es
  422890:	lock aad 0x16
  422893:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  422895:	fidivr DWORD PTR [esi]
  422897:	xlat   BYTE PTR ds:[ebx]
  422898:	ret    
  422899:	(bad)  
  42289a:	div    eax
  42289c:	stos   DWORD PTR es:[edi],eax
  42289d:	sbb    dh,BYTE PTR [ebp+0x5e]
  4228a0:	aam    0x8a
  4228a2:	xchg   ecx,eax
  4228a3:	inc    ebx
  4228a4:	pop    ebx
  4228a5:	outs   dx,DWORD PTR ds:[esi]
  4228a6:	jo     0x422909
  4228a8:	(bad)  
  4228a9:	xchg   ebp,eax
  4228aa:	icebp  
  4228ab:	ror    ch,cl
  4228ad:	(bad)  
  4228ae:	cs in  eax,dx
  4228b0:	das    
  4228b1:	inc    edx
  4228b2:	imul   edi,DWORD PTR [eax-0x9],0xbeed665
  4228b9:	add    eax,eax
  4228bb:	call   0x1526831d
  4228c0:	jmp    0x25d1:0xde80bae5
  4228c7:	jns    0x42289e
  4228c9:	xchg   dx,ax
  4228cb:	jle    0x422882
  4228cd:	pop    ds
  4228ce:	outs   dx,BYTE PTR ds:[esi]
  4228cf:	mul    DWORD PTR [ebx]
  4228d1:	sbb    DWORD PTR [edi],0x7501e372
  4228d7:	jno    0x422912
  4228d9:	push   esi
  4228da:	jmp    0xc436:0x7f651479
  4228e1:	xor    eax,0x394cb5aa
  4228e6:	jmp    0x757b1980
  4228eb:	out    0x13,eax
  4228ed:	sub    ah,ch
  4228ef:	ins    BYTE PTR es:[edi],dx
  4228f0:	cdq    
  4228f1:	aad    0xa4
  4228f3:	ins    DWORD PTR es:[edi],dx
  4228f4:	out    dx,al
  4228f5:	dec    edx
  4228f6:	fdivp  st(2),st
  4228f8:	jnp    0x422923
  4228fa:	push   0xa
  4228fc:	rcr    DWORD PTR [edx],1
  4228fe:	xor    dh,ah
  422900:	inc    ecx
  422901:	xchg   BYTE PTR ds:[edi-0x1e680b6d],dl
  422908:	shl    DWORD PTR [eax-0x47],cl
  42290b:	popa   
  42290c:	ror    BYTE PTR [edi],1
  42290e:	imul   BYTE PTR [ecx-0x491b9adc]
  422914:	(bad)  
  422915:	rol    DWORD PTR [esi+ecx*8+0x3dceea77],1
  42291c:	enter  0x75f6,0x13
  422920:	ins    BYTE PTR es:[edi],dx
  422921:	dec    esi
  422922:	mov    esp,0xc96a5748
  422927:	mov    ?,WORD PTR [edi+0x1b]
  42292a:	sbb    DWORD PTR [esi+0x15],esp
  42292d:	mov    ds:0xe1f7805f,al
  422932:	mov    ds,edi
  422934:	stos   BYTE PTR es:[edi],al
  422935:	inc    ebp
  422936:	xlat   BYTE PTR ds:[ebx]
  422937:	xor    DWORD PTR [ebx+0x30],esi
  42293a:	(bad)  
  42293b:	and    BYTE PTR [edx+0x20ae5566],dl
  422941:	inc    ebx
  422942:	(bad)  
  422943:	dec    edx
  422944:	(bad)  
  422945:	push   cs
  422946:	rcr    BYTE PTR [edx],1
  422948:	pop    es
  422949:	cmp    al,0xf8
  42294b:	sbb    ebx,edx
  42294d:	daa    
  42294e:	repz and BYTE PTR [eax+0x7f],dh
  422952:	cld    
  422953:	rol    DWORD PTR [ecx+0x7fbf3619],1
  422959:	gs and eax,0x63e4dee5
  42295f:	pusha  
  422960:	fwait
  422961:	sub    BYTE PTR [ebx+0x7fc0d373],dh
  422967:	xor    BYTE PTR [ebp+0x25],cl
  42296a:	les    ecx,FWORD PTR ds:0xf177fa63
  422970:	fisubr WORD PTR [esi]
  422972:	mov    edi,DWORD PTR [edx-0x1f]
  422975:	sub    eax,0xab0bc343
  42297a:	and    BYTE PTR [esi-0x4c],0x5
  42297e:	and    al,0x9
  422980:	shr    DWORD PTR [edi],0x75
  422983:	leave  
  422984:	adc    ecx,ecx
  422986:	inc    edx
  422987:	xchg   ebx,eax
  422988:	pop    eax
  422989:	gs xchg ecx,eax
  42298b:	test   DWORD PTR [edi+esi*4],0xda40a0f
  422992:	outs   dx,BYTE PTR ds:[esi]
  422993:	in     al,dx
  422994:	shl    esp,1
  422996:	ror    DWORD PTR [esi-0x38],0x7b
  42299a:	mov    esi,0x6fdf9e78
  42299f:	shr    edx,0x64
  4229a2:	or     DWORD PTR [ebp+0x7c],esp
  4229a5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x60],0xd3545575
  4229ad:	mov    cl,al
  4229af:	pushf  
  4229b0:	mov    ebx,0xe45b99b5
  4229b5:	pop    ecx
  4229b6:	sub    al,0x26
  4229b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229b9:	and    cl,cl
  4229bb:	adc    ebp,DWORD PTR [edi]
  4229bd:	lea    ecx,[ecx]
  4229bf:	and    BYTE PTR [edx-0x25d985a4],ch
  4229c5:	sub    DWORD PTR [edi],ebp
  4229c7:	popw   es
  4229c9:	test   eax,0x81d3cf15
  4229ce:	stc    
  4229cf:	dec    esp
  4229d0:	jge    0x4229f3
  4229d2:	dec    esi
  4229d3:	adc    ebx,DWORD PTR [ebp+0x65]
  4229d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d8:	cmc    
  4229d9:	ror    ebx,0x6d
  4229dc:	xor    edx,DWORD PTR [edx]
  4229de:	lea    edx,[ebp+0x3b72e0c8]
  4229e4:	mov    bl,0xe9
  4229e6:	dec    ebx
  4229e7:	pushf  
  4229e8:	dec    ebp
  4229e9:	gs mov al,0xd8
  4229ec:	(bad)  
  4229ed:	out    dx,al
  4229ee:	(bad)  
  4229ef:	das    
  4229f0:	sbb    dl,bh
  4229f2:	popa   
  4229f3:	shl    DWORD PTR ss:[ebx-0x458904c3],cl
  4229fa:	sbb    eax,0x16b578f7
  4229ff:	int3   
  422a00:	(bad)  
  422a02:	out    dx,al
  422a03:	imul   esi,DWORD PTR [ecx-0xc3586e3],0x3cd1d367
  422a0d:	and    BYTE PTR [esi+edx*4-0xe],dh
  422a11:	enter  0xf798,0x5
  422a15:	dec    ebp
  422a16:	xor    eax,0x10651b73
  422a1b:	test   BYTE PTR [ebp-0x29],dh
  422a1e:	nop
  422a1f:	js     0x422a2e
  422a21:	addr16 push edx
  422a23:	inc    edx
  422a24:	call   0x351b:0xe57d7526
  422a2b:	inc    esi
  422a2c:	cli    
  422a2d:	or     al,ah
  422a2f:	imul   edx,DWORD PTR [edi-0x2cde687c],0x49ed0cbc
  422a39:	stos   DWORD PTR es:[edi],eax
  422a3a:	mov    al,ds:0x75d22144
  422a3f:	xor    eax,eax
  422a41:	cmp    ch,BYTE PTR [esi]
  422a43:	inc    ebp
  422a44:	cmp    DWORD PTR ds:0x2578663a,ebx
  422a4a:	mov    al,0x73
  422a4c:	pop    ebp
  422a4d:	loope  0x422a61
  422a4f:	dec    edi
  422a50:	fwait
  422a51:	lahf   
  422a52:	jne    0x422a87
  422a54:	loopne 0x422a48
  422a56:	push   ss
  422a57:	jl     0x422a6c
  422a59:	or     al,0x2b
  422a5b:	addr16 lahf 
  422a5d:	jo     0x422a80
  422a5f:	mov    ch,0x15
  422a61:	push   cs
  422a62:	jle    0x422a5a
  422a64:	jns    0x4229ff
  422a66:	jne    0x422ac2
  422a68:	push   0xf4bfe2fe
  422a6d:	ret    0x66db
  422a70:	dec    ebp
  422a71:	fstp   QWORD PTR [ecx-0x56422cc3]
  422a77:	add    al,0x95
  422a79:	leave  
  422a7a:	arpl   si,sp
  422a7c:	rcl    BYTE PTR [eax+ebp*4-0x47],0xf3
  422a81:	add    dh,ah
  422a83:	loopne 0x422aa5
  422a85:	(bad)  
  422a86:	jne    0x422a4d
  422a88:	pop    esi
  422a89:	and    eax,0x25b91286
  422a8e:	jne    0x422a12
  422a90:	sub    al,BYTE PTR [ebp-0x345cd569]
  422a96:	call   0xbe02:0xe3b55367
  422a9d:	mul    BYTE PTR [ebx-0x67804bae]
  422aa3:	imul   eax,DWORD PTR [esi-0x2f],0x35
  422aa7:	inc    edx
  422aa8:	xchg   BYTE PTR [esi-0x7a68d3dd],dh
  422aae:	call   0x98808219
  422ab3:	in     al,0x43
  422ab5:	mov    ebp,0xaed43aa
  422aba:	mov    edi,esi
  422abc:	ret    0x75ff
  422abf:	cwde   
  422ac0:	adc    esp,DWORD PTR [ebp-0x33]
  422ac3:	inc    ebp
  422ac4:	icebp  
  422ac5:	loopne 0x422a90
  422ac7:	pop    edx
  422ac8:	arpl   WORD PTR [edi],bx
  422aca:	push   cs
  422acb:	(bad)  
  422acc:	out    dx,al
  422acd:	sub    al,0x75
  422acf:	and    ebx,esi
  422ad1:	push   ebp
  422ad2:	test   DWORD PTR [edx],edi
  422ad4:	mov    esi,0xef44f466
  422ad9:	mov    edx,0xf14bff2e
  422ade:	or     DWORD PTR [esp+eax*1+0x63af723f],esp
  422ae5:	scas   eax,DWORD PTR es:[edi]
  422ae6:	(bad)  
  422ae8:	mov    ebp,0x8a9ac655
  422aed:	pusha  
  422aee:	jp     0x422aed
  422af0:	xchg   ebx,eax
  422af1:	mov    esi,0x4d37fd5
  422af6:	sahf   
  422af7:	fisub  WORD PTR [ebx+ebp*2]
  422afa:	(bad)  
  422afc:	mov    fs,WORD PTR [ecx+0x30]
  422aff:	js     0x422af1
  422b01:	fist   WORD PTR [ecx-0x26]
  422b04:	push   ebx
  422b05:	dec    edi
  422b06:	push   ebx
  422b07:	es sar esp,cl
  422b0a:	sti    
  422b0b:	push   ebx
  422b0c:	cmp    esi,DWORD PTR [eax]
  422b0e:	sbb    eax,0xd45d7cc
  422b13:	mov    dh,0x0
  422b15:	in     eax,0x76
  422b17:	inc    edi
  422b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b19:	push   edx
  422b1a:	cmp    ecx,ebp
  422b1c:	ror    DWORD PTR [edi-0x705f3ba6],cl
  422b22:	push   0x505b881e
  422b27:	cmp    ah,BYTE PTR cs:[ebp-0x75]
  422b2b:	imul   ecx,DWORD PTR [esi],0xe58f1107
  422b31:	add    eax,0x3b349faa
  422b36:	push   ecx
  422b37:	retf   0x853e
  422b3a:	mov    ch,0xcd
  422b3c:	xchg   esi,eax
  422b3d:	push   ebp
  422b3e:	xor    dh,BYTE PTR [edi-0x37]
  422b41:	jmp    0xb895:0xaf24f10a
  422b48:	rcr    DWORD PTR [esi],cl
  422b4a:	bnd jnp 0x422b70
  422b4d:	dec    ebp
  422b4e:	rol    BYTE PTR [edx+edx*8+0x62342d66],cl
  422b55:	outs   dx,BYTE PTR ds:[esi]
  422b56:	cmp    eax,0xb13354f9
  422b5b:	or     eax,0x257561f6
  422b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b61:	dec    esp
  422b62:	xor    bh,BYTE PTR [edi+0x695c51da]
  422b68:	imul   edi,DWORD PTR [ebx-0x2194e369],0x68545db5
  422b72:	inc    edx
  422b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b74:	pushf  
  422b75:	pop    ecx
  422b76:	cwde   
  422b77:	shr    BYTE PTR [edi+0x233df5b4],0x66
  422b7e:	enter  0xf5b0,0xb
  422b82:	mov    dl,0x44
  422b84:	scas   al,BYTE PTR es:[edi]
  422b85:	xchg   edx,eax
  422b86:	sar    BYTE PTR [eax-0x13e7062d],1
  422b8c:	imul   esp,DWORD PTR [edx],0xffffffdd
  422b8f:	pop    ecx
  422b90:	inc    ecx
  422b91:	gs mov ebx,ecx
  422b94:	lods   al,BYTE PTR ds:[esi]
  422b95:	mov    ch,0x7b
  422b97:	mov    dl,0x28
  422b99:	mov    edx,0xef52d4cb
  422b9e:	in     eax,0xb5
  422ba0:	shl    esi,cl
  422ba2:	cld    
  422ba3:	push   eax
  422ba4:	cwde   
  422ba5:	stos   DWORD PTR es:[edi],eax
  422ba6:	jb     0x422b90
  422ba8:	(bad)  
  422ba9:	data16 jno 0x422b9d
  422bac:	xlat   BYTE PTR ds:[ebx]
  422bad:	mov    al,0xe3
  422baf:	pop    ss
  422bb0:	addr16 mov ecx,0x9afb5785
  422bb6:	jne    0x422c1c
  422bb8:	mov    cl,0x99
  422bba:	iret   
  422bbb:	push   ds
  422bbc:	and    esp,DWORD PTR [edi]
  422bbe:	pop    ss
  422bbf:	add    di,cx
  422bc2:	(bad)  
  422bc3:	cs out dx,al
  422bc5:	mov    ecx,0xfd7ed5b1
  422bca:	mov    ah,0x50
  422bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bcd:	cmp    BYTE PTR [bp-0x43],al
  422bd1:	pop    ds
  422bd2:	pop    edi
  422bd3:	gs and eax,0xe7e8da87
  422bd9:	lods   eax,DWORD PTR ds:[esi]
  422bda:	in     al,0xc8
  422bdc:	sar    DWORD PTR [ebx+eiz*2],cl
  422bdf:	bound  ebp,QWORD PTR [ecx+0x3224b331]
  422be5:	inc    esp
  422be6:	pop    esp
  422be7:	mov    eax,0xd381e549
  422bec:	in     al,dx
  422bed:	or     eax,0x3ad39ba4
  422bf2:	inc    edx
  422bf3:	dec    edx
  422bf4:	and    eax,0x178a7401
  422bf9:	ins    BYTE PTR es:[edi],dx
  422bfa:	jb     0x422c53
  422bfc:	xor    dl,BYTE PTR [edx-0x54]
  422bff:	xor    ecx,DWORD PTR cs:[edx-0x67]
  422c03:	inc    eax
  422c04:	push   edi
  422c05:	dec    esi
  422c06:	test   DWORD PTR [edi+edi*2-0x62a18a6f],edx
  422c0d:	fsub   DWORD PTR [ebx+0x5d4150d3]
  422c13:	data16 mov cl,0x93
  422c16:	cmp    eax,0x68aed3aa
  422c1b:	es (bad) 
  422c1d:	cmc    
  422c1e:	test   BYTE PTR [edi],dl
  422c20:	stc    
  422c21:	xchg   BYTE PTR gs:[ebp-0x2f],ah
  422c25:	sahf   
  422c26:	stos   DWORD PTR es:[edi],eax
  422c27:	aas    
  422c28:	inc    ebx
  422c29:	loop   0x422c0d
  422c2b:	ins    BYTE PTR es:[edi],dx
  422c2c:	mov    ds:0x112275d2,al
  422c31:	jmp    0xfc747bd2
  422c36:	push   0xf8df0e39
  422c3b:	xchg   ecx,eax
  422c3c:	repz xlat BYTE PTR ds:[ebx]
  422c3e:	mov    ds:0x2db44102,al
  422c43:	outs   dx,DWORD PTR ds:[esi]
  422c44:	icebp  
  422c45:	cmc    
  422c46:	jne    0x422c07
  422c48:	or     al,0x3b
  422c4a:	fs jl  0x422c41
  422c4d:	fist   DWORD PTR ds:0x5e0b8a66
  422c53:	rol    DWORD PTR ss:[ebx+0xf3aa387],cl
  422c5a:	sbb    dh,BYTE PTR [ecx-0x3adc994b]
  422c60:	mov    edx,0x68a9cd85
  422c65:	xchg   DWORD PTR [ebx+eax*8],ebp
  422c68:	lss    esi,FWORD PTR [ebp-0x4]
  422c6c:	sub    ebp,DWORD PTR [edx+0x1d]
  422c6f:	dec    ecx
  422c70:	sub    ah,ch
  422c72:	lahf   
  422c73:	nop
  422c74:	xor    BYTE PTR [ecx-0x797aca7d],al
  422c7a:	pop    ds
  422c7b:	xor    DWORD PTR [esi],edx
  422c7d:	(bad)  
  422c7e:	jmp    0x422cde
  422c80:	cmc    
  422c81:	sub    eax,ecx
  422c83:	pop    esi
  422c84:	leave  
  422c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c86:	fs popa 
  422c88:	sub    BYTE PTR [edx-0x5a],bl
  422c8b:	push   esi
  422c8c:	push   eax
  422c8d:	hlt    
  422c8e:	int    0x66
  422c90:	mov    ebx,0xe7e583e4
  422c95:	sbb    bl,dh
  422c97:	repnz cmp al,BYTE PTR [ebp-0x5b48863c]
  422c9e:	repz mov eax,ds:0x667ffcfa
  422ca4:	out    0xc0,eax
  422ca6:	push   0x80b7d3f4
  422cab:	fstp   TBYTE PTR [ecx-0x29]
  422cae:	mov    ds:0xf966ccef,eax
  422cb3:	retf   0xb817
  422cb6:	scas   eax,DWORD PTR es:[edi]
  422cb7:	or     eax,0x88c7e108
  422cbc:	aas    
  422cbd:	or     al,0x75
  422cbf:	repz mov esi,0x4e19d64e
  422cc5:	stos   BYTE PTR es:[edi],al
  422cc6:	cmp    BYTE PTR [esi-0x36],ah
  422cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cca:	lahf   
  422ccb:	adc    dl,bl
  422ccd:	call   0xb845:0xacb8613d
  422cd4:	sub    BYTE PTR [edi+edi*1-0x58],dl
  422cd8:	jl     0x422c9e
  422cda:	jl     0x422d34
  422cdc:	in     al,dx
  422cdd:	push   eax
  422cde:	jne    0x422ca8
  422ce0:	shl    bl,cl
  422ce2:	stos   BYTE PTR es:[edi],al
  422ce3:	and    edi,DWORD PTR [bp+di+0x71ed]
  422ce8:	fcom   DWORD PTR [ebp+ebx*8+0x0]
  422cec:	das    
  422ced:	test   eax,0x6eb1a8be
  422cf2:	aad    0xd2
  422cf4:	adc    al,0xe8
  422cf6:	js     0x422cea
  422cf8:	mov    edi,0xef66a375
  422cfd:	inc    esi
  422cfe:	retf   
  422cff:	lahf   
  422d00:	fisttp DWORD PTR [ecx]
  422d02:	jl     0x422d3d
  422d04:	ror    DWORD PTR [esi],cl
  422d06:	std    
  422d07:	pop    ds
  422d08:	int    0xe8
  422d0a:	int    0x42
  422d0c:	sbb    DWORD PTR [ebp+0x35],esp
  422d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d10:	mov    esi,0xf0fcfc6b
  422d15:	dec    ecx
  422d16:	push   0x4e
  422d18:	loopne 0x422d66
  422d1a:	imul   esp,DWORD PTR ds:0xe7f171c7,0xffffffb2
  422d21:	pop    edx
  422d22:	enter  0x456a,0x65
  422d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d27:	jle    0x422ce1
  422d29:	push   edx
  422d2a:	push   ebp
  422d2b:	push   ss
  422d2c:	outs   dx,DWORD PTR ds:[esi]
  422d2d:	jle    0x422d24
  422d2f:	loop   0x422d16
  422d31:	lock jne 0x422da4
  422d34:	repnz mov eax,ds:0x216c4a4b
  422d3a:	pop    edi
  422d3b:	cwde   
  422d3c:	inc    ebp
  422d3d:	aad    0xa2
  422d3f:	data16 (bad) 
  422d41:	aas    
  422d42:	add    esp,DWORD PTR [eax-0x68]
  422d45:	cmp    al,0x98
  422d47:	test   eax,0xe3754a03
  422d4c:	bound  esp,QWORD PTR [ebp+0x7e]
  422d4f:	sub    BYTE PTR [ebx],0x97
  422d52:	mov    ds:0x43f0a283,al
  422d57:	xchg   edi,eax
  422d58:	mov    edi,0x8f22752c
  422d5d:	mov    al,ds:0xf46747ba
  422d62:	pop    eax
  422d63:	adc    bh,0x20
  422d66:	out    0xe6,al
  422d68:	cmp    ah,bh
  422d6a:	mov    dl,0x20
  422d6c:	pop    ds
  422d6d:	stos   BYTE PTR es:[edi],al
  422d6e:	jne    0x422deb
  422d70:	cmc    
  422d71:	mov    ecx,0x43137ada
  422d76:	pop    edx
  422d77:	jo     0x422d1b
  422d79:	ins    DWORD PTR es:[edi],dx
  422d7a:	out    dx,al
  422d7b:	mov    ds:0xa86ba507,eax
  422d80:	ins    DWORD PTR es:[edi],dx
  422d81:	nop
  422d82:	push   esi
  422d83:	in     al,dx
  422d84:	mov    ch,0x5a
  422d86:	jne    0x422db0
  422d88:	or     ecx,DWORD PTR ds:0x8e856fd2
  422d8e:	push   es
  422d8f:	data16 das 
  422d91:	jg     0x422d6a
  422d93:	or     dl,dl
  422d95:	imul   ebx,DWORD PTR [edx],0x68
  422d98:	ret    0xbffd
  422d9b:	cmc    
  422d9c:	test   DWORD PTR [esi-0x77],ecx
  422d9f:	iret   
  422da0:	mov    ebx,0x91fe4766
  422da5:	and    ebp,ebx
  422da7:	lea    esp,[esi]
  422da9:	add    esp,0x758c3ee6
  422daf:	xor    al,bl
  422db1:	mov    ecx,eax
  422db3:	dec    eax
  422db4:	adc    ebp,DWORD PTR [ebx+0x23]
  422db7:	dec    esi
  422db8:	sub    al,0x9c
  422dba:	and    al,0x2
  422dbc:	ret    0x1535
  422dbf:	rcl    DWORD PTR [edi+esi*2],1
  422dc2:	xchg   ecx,eax
  422dc3:	dec    esi
  422dc4:	mov    ?,esi
  422dc6:	fwait
  422dc7:	out    0x19,al
  422dc9:	mov    cl,0x71
  422dcb:	and    eax,DWORD PTR [edi+0xe]
  422dce:	push   edi
  422dcf:	imul   edx,DWORD PTR [esi-0x2b],0x978f431b
  422dd6:	repz les esi,FWORD PTR [esi-0x3b]
  422dda:	jne    0x422dba
  422ddc:	lea    edx,[edi]
  422dde:	sub    BYTE PTR [edi],0x78
  422de1:	mov    ch,bh
  422de3:	data16 fnstsw WORD PTR [esi+0x3bd3bf51]
  422dea:	add    ebx,DWORD PTR [edi-0x68]
  422ded:	stos   BYTE PTR es:[edi],al
  422dee:	fisttp WORD PTR [esi-0x39259abd]
  422df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df5:	in     eax,dx
  422df6:	push   esi
  422df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df8:	in     eax,dx
  422df9:	stc    
  422dfa:	hlt    
  422dfb:	adc    DWORD PTR [edx+0x77],ecx
  422dfe:	jne    0x422e03
  422e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e01:	jne    0x422e74
  422e03:	adc    al,0xd8
  422e05:	jl     0x422db9
  422e07:	mov    di,0xb7c9
  422e0b:	pushf  
  422e0c:	inc    ecx
  422e0d:	cmp    dh,BYTE PTR [ebp-0x6ed0a848]
  422e13:	push   esp
  422e14:	not    DWORD PTR [esi*2-0x379e3110]
  422e1b:	adc    DWORD PTR [ebx+0x6d],ebp
  422e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e1f:	xor    DWORD PTR [ebx-0x5f],0x2a
  422e23:	xor    dh,bh
  422e25:	pop    ds
  422e26:	pop    es
  422e27:	dec    ecx
  422e28:	rol    DWORD PTR [eax+0x46dc5f43],cl
  422e2e:	sbb    al,0xeb
  422e30:	data16 add BYTE PTR [eax],0x66
  422e34:	daa    
  422e35:	push   0xfed306db
  422e3a:	xchg   BYTE PTR [ebx+edi*8],ch
  422e3d:	and    dh,ah
  422e3f:	aas    
  422e40:	xchg   edx,eax
  422e41:	mov    dx,0x5c62
  422e45:	pop    edx
  422e46:	repz adc eax,0x183db651
  422e4c:	jg     0x422e9f
  422e4e:	jne    0x422deb
  422e50:	mov    cl,0x20
  422e52:	call   0xe6bd:0x9dcba4f0
  422e59:	mov    ?,WORD PTR [edi+ecx*1-0x4c]
  422e5d:	mov    ds:0x55d3a285,al
  422e62:	test   eax,0xcd4a3afb
  422e67:	cmc    
  422e68:	jle    0x422ecf
  422e6a:	in     eax,dx
  422e6b:	loope  0x422e4c
  422e6d:	stos   BYTE PTR es:[edi],al
  422e6e:	and    eax,0xad85f7a5
  422e73:	enter  0xf519,0x71
  422e77:	mov    dl,BYTE PTR [eax+0x12]
  422e7a:	sbb    ah,bh
  422e7c:	stos   DWORD PTR es:[edi],eax
  422e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7e:	scas   al,BYTE PTR es:[edi]
  422e7f:	xchg   edi,eax
  422e80:	xchg   esp,eax
  422e81:	mov    bl,0x9a
  422e83:	data16 je 0x422ec7
  422e86:	xlat   BYTE PTR ds:[ebx]
  422e87:	xchg   dl,ah
  422e89:	mov    ebp,0x657f1b24
  422e8e:	mov    ah,0xe4
  422e90:	sahf   
  422e91:	rcl    DWORD PTR [eax],1
  422e93:	imul   ebp,DWORD PTR [esi+0x6c],0xffffffba
  422e97:	mov    esi,0x59747a42
  422e9c:	xchg   ecx,eax
  422e9d:	scas   al,BYTE PTR es:[edi]
  422e9e:	stos   DWORD PTR es:[edi],eax
  422e9f:	jecxz  0x422ea4
  422ea1:	mov    eax,ds:0x8eda7258
  422ea6:	xor    eax,0x520f7092
  422eab:	add    WORD PTR [ecx-0x3],0xb
  422eb0:	shl    bl,1
  422eb2:	fisttp DWORD PTR [edx+0x787c3185]
  422eb8:	ret    
  422eb9:	cmp    DWORD PTR [edx+0x5f],0x6af92372
  422ec0:	outs   dx,DWORD PTR ds:[esi]
  422ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec2:	mov    ds:0xe34bc123,eax
  422ec7:	xor    al,BYTE PTR [ebx+0x70ac6c22]
  422ecd:	jecxz  0x422e8f
  422ecf:	retw   0x8f66
  422ed3:	stos   DWORD PTR es:[edi],eax
  422ed4:	aam    0x49
  422ed6:	pop    edi
  422ed7:	(bad)  
  422ed9:	jno    0x422e96
  422edb:	outs   dx,DWORD PTR ds:[esi]
  422edc:	aaa    
  422edd:	repz add eax,0xbefef884
  422ee3:	repz iretw 
  422ee6:	repnz push esp
  422ee8:	cs push edx
  422eea:	mov    al,ds:0xf9c9cc67
  422eef:	cmp    cl,BYTE PTR [esi+0x27]
  422ef2:	les    edi,FWORD PTR [esi-0x6]
  422ef5:	std    
  422ef6:	jne    0x422e9c
  422ef8:	jnp    0x422efb
  422efa:	cmp    DWORD PTR [edx+eiz*2-0x7b9e917f],edi
  422f01:	jbe    0x422e8a
  422f03:	addr16 shl eax,cl
  422f06:	lods   eax,DWORD PTR ds:[esi]
  422f07:	repnz mov ds:0x65eef5a7,eax
  422f0d:	gs push ds
  422f0f:	(bad)  
  422f10:	jb     0x422f49
  422f12:	dec    eax
  422f13:	xlat   BYTE PTR ds:[ebx]
  422f14:	mov    ebx,0x44ca90f2
  422f19:	imul   esi,DWORD PTR [ebp-0x7e],0x864b5138
  422f20:	and    DWORD PTR [edi+0x30],ebp
  422f23:	addr16 push esp
  422f25:	mov    bl,0xea
  422f27:	stos   DWORD PTR es:[edi],eax
  422f28:	jns    0x422f85
  422f2a:	push   esp
  422f2b:	not    bl
  422f2d:	in     eax,0x45
  422f2f:	lods   al,BYTE PTR ds:[esi]
  422f30:	push   0xffffffb2
  422f32:	aad    0x62
  422f34:	out    dx,eax
  422f35:	mov    ch,0x8e
  422f37:	iret   
  422f38:	or     edi,DWORD PTR [eax-0x7b8d9946]
  422f3e:	dec    ebx
  422f3f:	or     eax,edx
  422f41:	icebp  
  422f42:	pop    esi
  422f43:	(bad)  
  422f44:	imul   BYTE PTR [esi+0x21]
  422f47:	dec    ecx
  422f48:	mov    bl,0x56
  422f4a:	jp     0x422f58
  422f4c:	xchg   esi,eax
  422f4d:	data16 int3 
  422f4f:	jo     0x422f5a
  422f51:	push   edi
  422f52:	std    
  422f53:	shr    DWORD PTR [edi+ebp*4],0xac
  422f57:	adc    al,0x13
  422f59:	ja     0x422fd0
  422f5b:	lods   al,BYTE PTR ds:[esi]
  422f5c:	mov    esp,0xea009618
  422f61:	enter  0x66a2,0xe0
  422f65:	fs push ecx
  422f67:	pop    ds
  422f68:	sar    DWORD PTR [edi+0x1508db89],cl
  422f6e:	inc    ecx
  422f6f:	je     0x422f19
  422f71:	dec    edx
  422f72:	jo     0x422fbe
  422f74:	sub    BYTE PTR [ebp+0x1a],ah
  422f77:	mov    ds:0x5fd1f471,al
  422f7c:	shl    ebp,cl
  422f7e:	add    al,0xb1
  422f80:	add    al,0x53
  422f82:	mov    ds:0x1d66d5c9,al
  422f87:	or     bh,BYTE PTR [esi]
  422f89:	cmove  ebp,DWORD PTR [eax+0x7f]
  422f8d:	inc    edx
  422f8e:	mov    WORD PTR [ecx-0x7f419ac0],cs
  422f94:	daa    
  422f95:	(bad)  
  422f96:	mov    edi,DWORD PTR [eax+0x1d]
  422f99:	bound  edx,QWORD PTR gs:[eax+0x71d16288]
  422fa0:	out    0xf4,al
  422fa2:	(bad)
  422fa6:	jne    0x42300c
  422fa8:	xor    ecx,DWORD PTR [ebx-0x69bceafa]
  422fae:	mov    dh,0x61
  422fb0:	rcr    BYTE PTR [ecx],1
  422fb2:	inc    ecx
  422fb3:	gs cmp al,0xb4
  422fb6:	mov    bh,0xd2
  422fb8:	data16 cli 
  422fba:	cmc    
  422fbb:	push   ebp
  422fbc:	shr    DWORD PTR [ecx-0x4],cl
  422fbf:	aaa    
  422fc0:	push   cs
  422fc1:	xor    DWORD PTR [eax-0x159fd8d2],edx
  422fc7:	dec    esi
  422fc8:	fist   DWORD PTR [edx+0xe7345f2]
  422fce:	xchg   ebx,eax
  422fcf:	lea    esi,[ecx+0x5c14f42b]
  422fd5:	es jne 0x42304f
  422fd8:	mov    ?,WORD PTR [ecx-0x65]
  422fdb:	(bad)  
  422fdc:	out    0x1a,al
  422fde:	adc    BYTE PTR [esi+0x5],ah
  422fe1:	lods   al,BYTE PTR ds:[esi]
  422fe2:	jae    0x423014
  422fe4:	shr    BYTE PTR [ecx],cl
  422fe6:	fild   QWORD PTR [ecx+0x0]
  422fe9:	adc    DWORD PTR [edi+0x2],ebx
  422fec:	int    0x66
  422fee:	mov    DWORD PTR [ebp+0x198c1c9],esp
  422ff4:	(bad)  
  422ff5:	fbld   TBYTE PTR [esi+0x753309a9]
  422ffb:	stc    
  422ffc:	push   0xf
  422ffe:	push   esi
  422fff:	push   ebp
  423000:	sub    eax,ebp
  423002:	pop    ebp
  423003:	data16 je 0x423059
  423006:	push   ecx
  423007:	mov    al,ds:0x7aa00dea
  42300c:	ins    BYTE PTR es:[edi],dx
  42300d:	lahf   
  42300e:	cmp    cl,BYTE PTR [edi-0x1b4a82a6]
  423014:	or     eax,0x4f664418
  423019:	push   esp
  42301a:	cmp    al,0x15
  42301c:	rcr    DWORD PTR [ebx+0x2cf0d7b0],cl
  423022:	fcom   QWORD PTR [edx]
  423024:	jo     0x422fb5
  423026:	mov    bh,0xb5
  423028:	sub    BYTE PTR [ecx-0x4a],bh
  42302b:	data16 sti 
  42302d:	pusha  
  42302e:	lock repz sbb ebp,ebp
  423032:	and    cl,BYTE PTR [edi+0x668a3ce0]
  423038:	jl     0x422fc4
  42303a:	jp     0x422feb
  42303c:	cmp    dl,bh
  42303e:	sti    
  42303f:	imul   ax,WORD PTR [ecx+0xcd372c9],0x4b53
  423048:	mov    dl,0x1f
  42304a:	mov    edi,0xba54ff21
  42304f:	test   DWORD PTR [eax-0x2ecb2441],ecx
  423055:	test   eax,0x509329f5
  42305a:	pop    eax
  42305b:	mov    cl,0x12
  42305d:	loope  0x4230b3
  42305f:	inc    esp
  423060:	cmp    eax,0xc96169a8
  423065:	popa   
  423066:	xor    al,0xdd
  423068:	shl    DWORD PTR [ebp+0x4dab5dd1],cl
  42306e:	push   ds
  42306f:	push   esi
  423070:	popa   
  423071:	gs sbb eax,0x1a757f6d
  423077:	xchg   esp,eax
  423078:	or     al,0x31
  42307a:	js     0x423054
  42307c:	mov    edi,0x93f9ba5b
  423081:	outs   dx,DWORD PTR ds:[esi]
  423082:	sbb    esp,DWORD PTR [ebx]
  423084:	sub    bh,BYTE PTR [edi+esi*1-0x16]
  423088:	mov    cl,0x1d
  42308a:	pop    ss
  42308b:	data16 std 
  42308d:	inc    esp
  42308e:	xchg   edi,eax
  42308f:	pushf  
  423090:	ror    edx,cl
  423092:	xchg   esp,eax
  423093:	sbb    BYTE PTR [ebp+0x654969d2],ah
  423099:	test   esp,edi
  42309b:	loopne 0x42301e
  42309d:	add    BYTE PTR [eax],bl
  42309f:	data16 or al,0xa6
  4230a2:	in     eax,0xb1
  4230a4:	shl    DWORD PTR [esi-0x25],cl
  4230a7:	in     eax,0xe5
  4230a9:	add    BYTE PTR [edi],0xd6
  4230ac:	loope  0x42312d
  4230ae:	data16 das 
  4230b0:	fdivr  QWORD PTR [ecx-0x12]
  4230b3:	pop    ax
  4230b5:	adc    cl,BYTE PTR [edx+edi*8]
  4230b8:	shl    eax,cl
  4230ba:	(bad)
  4230bd:	inc    DWORD PTR [esp+ebp*4-0x62a10e57]
  4230c4:	sti    
  4230c5:	pop    edx
  4230c6:	inc    eax
  4230c7:	imul   ebp,DWORD PTR [ebx],0x5f8e27b2
  4230cd:	es dec esp
  4230cf:	out    0x5a,al
  4230d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230d2:	and    eax,0x75e298db
  4230d7:	xchg   esp,eax
  4230d8:	sbb    eax,0x7fa0e7ba
  4230dd:	push   es
  4230de:	loop   0x423060
  4230e0:	jge    0x423087
  4230e2:	mov    bh,0xa7
  4230e4:	out    dx,eax
  4230e5:	push   es
  4230e6:	sar    BYTE PTR [eax],0x7b
  4230e9:	mov    ebp,0x10864a37
  4230ee:	ja     0x423135
  4230f0:	cs loopne 0x42308a
  4230f3:	sub    DWORD PTR [ebx],esi
  4230f5:	test   DWORD PTR [edx],edi
  4230f7:	in     al,0x36
  4230f9:	gs add eax,0xc039e4ed
  4230ff:	pop    es
  423100:	dec    ecx
  423101:	icebp  
  423102:	call   0x7f6a:0x6b9adbc1
  423109:	fbstp  TBYTE PTR [ecx-0x429a9f5a]
  42310f:	inc    edi
  423110:	mov    esi,0xce7a22dc
  423115:	adc    eax,0x9d265d81
  42311a:	jne    0x42319b
  42311c:	out    0x62,eax
  42311e:	pop    esp
  42311f:	es ja  0x4231a0
  423122:	cwde   
  423123:	data16 test al,0xf7
  423126:	jbe    0x4230df
  423128:	shl    ecx,cl
  42312a:	jmp    0x423135
  42312c:	ror    BYTE PTR [esi+ebp*2-0xc],0x5d
  423131:	cmp    eax,0xbad3df09
  423136:	pop    ebx
  423137:	repnz bound edi,QWORD PTR [esi-0x6919709f]
  42313e:	sar    esi,cl
  423140:	xor    ah,BYTE PTR [eax+0x32]
  423143:	outs   dx,BYTE PTR ds:[esi]
  423144:	aas    
  423145:	jne    0x4230f8
  423147:	out    0x41,eax
  423149:	gs cmp ch,dh
  42314c:	mov    al,0x9d
  42314e:	adc    ebp,esp
  423150:	pop    ds
  423151:	jae    0x4230f8
  423153:	ins    DWORD PTR es:[edi],dx
  423154:	std    
  423155:	imul   edi,DWORD PTR [eax+0x857cc1],0xffffffa3
  42315c:	call   0x87b6fd7
  423161:	in     al,0xea
  423163:	imul   BYTE PTR ds:0x2566cc14
  423169:	neg    BYTE PTR [ecx]
  42316b:	adc    eax,0x7b85e883
  423170:	ror    BYTE PTR [ebx-0x7e79498b],0xad
  423177:	cwde   
  423178:	jbe    0x423164
  42317a:	shl    BYTE PTR [esi+0x2c],0xf3
  42317e:	bound  ecx,QWORD PTR [esi-0x27]
  423181:	dec    eax
  423182:	dec    edx
  423183:	bound  esp,QWORD PTR [edi+0x72]
  423186:	jne    0x423176
  423188:	push   edi
  423189:	pop    edi
  42318a:	cmp    DWORD PTR [edx+0x40],ebp
  42318d:	inc    esi
  42318e:	scas   al,BYTE PTR es:[edi]
  42318f:	xchg   dx,ax
  423191:	lahf   
  423192:	mov    ds:0xe4bd0cb,eax
  423197:	push   ecx
  423198:	mov    edx,0xdb42510d
  42319d:	add    eax,esi
  42319f:	std    
  4231a0:	xchg   edx,eax
  4231a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a2:	dec    edi
  4231a3:	gs in  al,dx
  4231a5:	jg     0x4231a1
  4231a7:	cmp    edx,DWORD PTR [ecx-0x63]
  4231aa:	cmp    eax,0x75a5db9e
  4231af:	and    bl,BYTE PTR [ebx]
  4231b1:	and    eax,DWORD PTR [eax-0x3]
  4231b4:	jle    0x42319c
  4231b6:	call   0xf9c4e221
  4231bb:	(bad)  
  4231bc:	rol    DWORD PTR [eax],cl
  4231be:	dec    ebx
  4231bf:	loope  0x42317d
  4231c1:	adc    ah,BYTE PTR [edx-0x51a2b4da]
  4231c7:	mov    edx,0x30d4fff
  4231cc:	fcmovnbe st,st(0)
  4231ce:	push   esp
  4231cf:	aaa    
  4231d0:	shufps xmm6,XMMWORD PTR [ebp+0x3d],0xc0
  4231d5:	sahf   
  4231d6:	test   dl,0x0
  4231d9:	push   esp
  4231da:	sub    esp,DWORD PTR [esi+0x9]
  4231dd:	push   ecx
  4231de:	mov    eax,ds:0x2aa2e23e
  4231e3:	xchg   BYTE PTR [esi-0x7b],bh
  4231e6:	or     eax,0xde832c95
  4231eb:	pop    esi
  4231ec:	into   
  4231ed:	ret    
  4231ee:	mov    fs,WORD PTR [esi-0x65]
  4231f1:	test   eax,0xdee9763
  4231f6:	scas   al,BYTE PTR es:[edi]
  4231f7:	loopne 0x42325c
  4231f9:	sub    ebp,edi
  4231fb:	idiv   BYTE PTR [esi]
  4231fd:	xchg   BYTE PTR [edx],dl
  4231ff:	jbe    0x4231b5
  423201:	jne    0x4231b0
  423203:	data16 aam 0xcb
  423206:	push   eax
  423207:	mov    eax,0xf30ff8d3
  42320c:	dec    edi
  42320d:	(bad)  
  42320e:	or     eax,0x68831b11
  423213:	in     eax,dx
  423214:	dec    ecx
  423215:	gs idiv ebp
  423218:	pop    ebx
  423219:	loope  0x423217
  42321b:	and    ah,BYTE PTR [eax+eax*2]
  42321e:	out    dx,eax
  42321f:	popf   
  423220:	pushf  
  423221:	aaa    
  423222:	jbe    0x4231b1
  423224:	adc    ebp,ecx
  423226:	and    al,BYTE PTR [ecx]
  423228:	mov    cl,0xf6
  42322a:	xor    esi,DWORD PTR [esi+0x48cc6625]
  423230:	sub    eax,0x470824a6
  423235:	jns    0x423238
  423237:	mov    esp,0x8e0b90d3
  42323c:	out    dx,eax
  42323d:	into   
  42323e:	sbb    al,0xe5
  423240:	mov    ebx,0x29eb6866
  423245:	or     DWORD PTR es:[edx],ebp
  423248:	jl     0x423272
  42324a:	cs pop ebx
  42324c:	stos   DWORD PTR es:[edi],eax
  42324d:	mov    si,0x7d9a
  423251:	jmp    0x94a4:0x686cc8d9
  423258:	frstor [ebx-0xa]
  42325b:	jae    0x423268
  42325d:	jbe    0x4232a1
  42325f:	out    0xa9,al
  423261:	(bad)  
  423262:	sub    cl,BYTE PTR [ebp-0x29]
  423265:	mov    ds,WORD PTR [ecx+0x6d]
  423268:	sar    DWORD PTR [edi],cl
  42326a:	or     BYTE PTR [ebx],0x9a
  42326d:	les    esp,FWORD PTR [edi]
  42326f:	stos   BYTE PTR es:[edi],al
  423270:	inc    esp
  423271:	addr16 jne 0x4232c9
  423274:	mov    ecx,0xc0ff84f7
  423279:	cld    
  42327a:	add    eax,0x6e514583
  42327f:	and    DWORD PTR [ebx+0x5d],esi
  423282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423283:	in     al,0x3c
  423285:	mov    ds:0xc31b3867,al
  42328a:	jb     0x4232d4
  42328c:	add    al,0xa
  42328e:	push   ebp
  42328f:	(bad)  
  423290:	adc    eax,DWORD PTR [edx+edi*8+0x71361390]
  423297:	pop    esp
  423298:	popf   
  423299:	jl     0x4232a2
  42329b:	pop    esp
  42329c:	shr    DWORD PTR [ecx-0x1b],cl
  42329f:	sbb    BYTE PTR [ecx-0x2522e399],bl
  4232a5:	pop    cx
  4232a7:	push   edx
  4232a8:	cmc    
  4232a9:	add    BYTE PTR [ebp-0x4ed094f7],0x56
  4232b0:	add    dh,BYTE PTR [esi-0x54886f8b]
  4232b6:	inc    esp
  4232b7:	dec    ecx
  4232b8:	dec    esp
  4232b9:	adc    ah,dl
  4232bb:	imul   esi,DWORD PTR [ecx-0x1b],0x7b1b0cef
  4232c2:	adc    DWORD PTR [ecx],0x7c
  4232c5:	(bad)  
  4232c7:	mov    ah,0xb6
  4232c9:	push   esp
  4232ca:	(bad)  
  4232cb:	jbe    0x42331f
  4232cd:	jo     0x423306
  4232cf:	mov    ebx,0x9c553a5b
  4232d4:	rol    ebp,cl
  4232d6:	sub    BYTE PTR [esi+0xaae6010],al
  4232dc:	sbb    esp,DWORD PTR [ebp-0x10]
  4232df:	fwait
  4232e0:	jno    0x42332a
  4232e2:	add    al,0x8f
  4232e4:	push   esp
  4232e5:	mov    ebp,0xdc5c82c1
  4232ea:	jne    0x4232ba
  4232ec:	data16 loopne 0x4232d9
  4232ef:	pushf  
  4232f0:	imul   ebp,ebx,0xffffff9c
  4232f3:	data16 mov ds,WORD PTR [edx-0x3b]
  4232f7:	shl    ch,cl
  4232f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232fa:	dec    esi
  4232fb:	jno    0x423290
  4232fd:	or     al,0xaf
  4232ff:	xchg   esi,eax
  423300:	aad    0xcb
  423302:	divps  xmm7,XMMWORD PTR [ebx+edx*2]
  423306:	mov    ds:0xc329fb66,al
  42330b:	cli    
  42330c:	call   0x11de0a29
  423311:	in     eax,0x36
  423313:	xchg   ecx,eax
  423314:	sub    eax,0xd846f9b8
  423319:	cmp    ah,BYTE PTR [eax]
  42331b:	mov    edx,ebx
  42331d:	das    
  42331e:	(bad)  
  423320:	shr    BYTE PTR [ebx],0x97
  423323:	(bad)  
  423324:	push   ebx
  423325:	mov    edx,0x57496652
  42332a:	sbb    eax,0x8712d37b
  42332f:	hlt    
  423330:	pop    ss
  423331:	or     eax,0x654776f6
  423336:	in     eax,0x43
  423338:	xor    eax,0x14608485
  42333d:	arpl   WORD PTR [ebp+0x3c],bp
  423340:	clc    
  423341:	test   eax,0x7fa1b575
  423346:	xchg   ebx,eax
  423347:	icebp  
  423348:	add    ch,BYTE PTR [ecx]
  42334a:	xchg   BYTE PTR [eax+0x3545fc93],dl
  423350:	cwde   
  423351:	sbb    DWORD PTR [edx+0x51],esi
  423354:	mov    esp,0xb5057528
  423359:	imul   eax,DWORD PTR [edx+0x7bb08c43],0xe24dd866
  423363:	lahf   
  423364:	shl    DWORD PTR [eax-0x49a2311c],cl
  42336a:	jge    0x4233d8
  42336c:	imul   esp,DWORD PTR [esi-0x7b],0xff81ebc0
  423373:	test   DWORD PTR [ebp+esi*1-0x47],edx
  423377:	mul    DWORD PTR [ebx-0x28]
  42337a:	xor    al,0xea
  42337c:	ds xchg edx,eax
  42337e:	jne    0x4233e7
  423380:	cmc    
  423381:	add    bh,BYTE PTR [edi]
  423383:	jmp    0x4233eb
  423385:	loopne 0x423392
  423387:	data16 aam 0x3f
  42338a:	pop    edi
  42338b:	push   cs
  42338c:	rol    esp,cl
  42338e:	leave  
  42338f:	repz fmul st,st(3)
  423392:	jp     0x42339c
  423394:	dec    esi
  423395:	xchg   DWORD PTR [ecx-0x26],ebx
  423398:	fbstp  TBYTE PTR [esi]
  42339a:	mov    ecx,0x80944766
  42339f:	iret   
  4233a0:	cmp    esi,eax
  4233a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a3:	call   0x6739c583
  4233a8:	pop    edi
  4233a9:	sbb    al,0x7f
  4233ab:	sbb    al,0xb0
  4233ad:	sub    ch,BYTE PTR [ecx]
  4233af:	jmp    0xd392:0x4eed
  4233b5:	in     eax,0x3e
  4233b7:	pop    es
  4233b8:	in     al,dx
  4233b9:	stc    
  4233ba:	fmul   QWORD PTR [eax-0x6a428ec3]
  4233c0:	call   0x4b05:0xa9669656
  4233c7:	dec    edx
  4233c8:	pop    ss
  4233c9:	pop    ebp
  4233ca:	sub    ebp,0xeb1adb5d
  4233d0:	nop
  4233d1:	int3   
  4233d2:	or     bl,BYTE PTR [eax-0x515d2b59]
  4233d8:	and    eax,0x584c7965
  4233dd:	aaa    
  4233de:	es sub esp,0x34215a17
  4233e5:	pop    esi
  4233e6:	jne    0x423379
  4233e8:	lods   eax,DWORD PTR ds:[esi]
  4233e9:	dec    ecx
  4233ea:	stos   BYTE PTR es:[edi],al
  4233eb:	mov    ebx,0x908d9e9a
  4233f0:	outs   dx,BYTE PTR ds:[esi]
  4233f1:	push   ecx
  4233f2:	out    dx,al
  4233f3:	neg    BYTE PTR [esi+0x6bf721ef]
  4233f9:	aaa    
  4233fa:	adc    eax,0x7772e563
  4233ff:	dec    eax
  423401:	xchg   dl,dh
  423403:	mov    ds:0x509c653e,al
  423408:	adc    edx,ecx
  42340a:	or     DWORD PTR [ecx+eax*2-0x4ee28525],0x70
  423412:	jne    0x423491
  423414:	sti    
  423415:	ret    
  423416:	out    0xbb,eax
  423418:	and    DWORD PTR [ecx-0x469c7fc9],ebx
  42341e:	xor    al,0xe6
  423420:	push   0xfffffff5
  423422:	out    0x76,al
  423424:	pop    ecx
  423425:	test   DWORD PTR [ebx+0x4e],esi
  423428:	gs aas 
  42342a:	sbb    al,dl
  42342c:	push   ebx
  42342d:	jl     0x423425
  42342f:	mov    ds:0x8623f27d,al
  423434:	shr    DWORD PTR [edx+0x10],cl
  423437:	sbb    al,BYTE PTR [ebx+0x523d133e]
  42343d:	or     BYTE PTR gs:[esi+ebp*1+0x6d],0xe8
  423443:	or     dh,BYTE PTR [ecx-0x50]
  423446:	mov    esi,0x7510d5a0
  42344b:	sub    al,0xa5
  42344d:	fisub  DWORD PTR [ecx+ebx*4+0x54]
  423451:	xor    BYTE PTR [edi+0x61],dh
  423454:	pop    ebp
  423455:	adc    ebp,eax
  423457:	mov    esi,gs
  423459:	mov    bh,0xc9
  42345b:	add    esp,esi
  42345d:	jbe    0x423476
  42345f:	jne    0x423496
  423461:	shl    DWORD PTR [esi+eax*1+0x67b0c1d8],1
  423468:	repz hlt 
  42346a:	add    cl,BYTE PTR [edi]
  42346c:	jno    0x4233ef
  42346e:	ror    BYTE PTR [esi-0x53],1
  423471:	icebp  
  423472:	test   eax,0x75f8cedb
  423477:	inc    edx
  423478:	adc    ebp,DWORD PTR [esi+edx*8]
  42347b:	shr    DWORD PTR [esi+0x6d],cl
  42347e:	xchg   esi,eax
  42347f:	data16 xor al,BYTE PTR [edx]
  423482:	into   
  423483:	mov    esp,0x302699d3
  423488:	or     ebp,DWORD PTR [esi]
  42348a:	pop    ds
  42348b:	mov    ah,0xf0
  42348d:	pop    ecx
  42348e:	pop    es
  42348f:	or     dh,cl
  423491:	es cld 
  423493:	popf   
  423494:	ins    DWORD PTR es:[edi],dx
  423495:	xchg   edx,eax
  423496:	cdq    
  423497:	outs   dx,DWORD PTR ds:[esi]
  423498:	adc    eax,0x7b96da31
  42349d:	sub    BYTE PTR [esi-0x365f9c9a],ah
  4234a3:	push   cs
  4234a4:	xchg   DWORD PTR [edx+eiz*8+0x66],ecx
  4234a8:	sub    BYTE PTR [ebx-0x602cbfed],dh
  4234ae:	mul    BYTE PTR [edi-0x4d7072a9]
  4234b4:	aaa    
  4234b5:	ins    BYTE PTR es:[edi],dx
  4234b6:	scas   al,BYTE PTR es:[edi]
  4234b7:	cs pop esi
  4234b9:	rol    BYTE PTR [ebp+0x5d46e4cc],1
  4234bf:	push   es
  4234c0:	rcr    DWORD PTR [ebx],cl
  4234c2:	cmp    ah,BYTE PTR [esi]
  4234c4:	xor    BYTE PTR [eax],0x37
  4234c7:	jae    0x423526
  4234c9:	gs jb  0x4234fe
  4234cc:	cmp    DWORD PTR [esi-0x7bd35144],0xdafb0b7c
  4234d6:	ins    BYTE PTR es:[edi],dx
  4234d7:	mov    ah,0x5a
  4234d9:	cmp    BYTE PTR [ebx-0xaca2097],bh
  4234df:	or     ah,dl
  4234e1:	lock and DWORD PTR [eax-0x7b],0x726698cf
  4234e9:	adc    edi,ebp
  4234eb:	pop    edx
  4234ec:	shl    DWORD PTR [ebx-0x55ef9f07],cl
  4234f2:	mov    al,ds:0xf66531af
  4234f7:	xchg   BYTE PTR [esi-0xb355a66],dl
  4234fd:	push   edi
  4234fe:	les    esp,FWORD PTR [esi-0xe3b582d]
  423504:	cmp    al,0x97
  423506:	fidiv  WORD PTR [ebp-0x6]
  423509:	fsubr  QWORD PTR gs:[esi+ebp*4]
  42350d:	ja     0x4234ae
  42350f:	jno    0x4234f3
  423511:	hlt    
  423512:	shl    esi,1
  423514:	pop    ebp
  423515:	out    dx,al
  423516:	jne    0x4234a0
  423518:	rcl    DWORD PTR [eax+0x5298a281],0x8b
  42351f:	fs xchg edx,eax
  423521:	aam    0x9d
  423523:	daa    
  423524:	icebp  
  423525:	cmp    BYTE PTR ds:0x75d2ede0,dh
  42352b:	pop    edx
  42352c:	and    ebx,DWORD PTR es:[esp+ebp*2-0x1f]
  423531:	pop    ss
  423532:	push   0x4e79190
  423537:	ins    DWORD PTR es:[edi],dx
  423538:	mov    bl,0xf6
  42353a:	ss pusha 
  42353c:	push   ebp
  42353d:	jb     0x42356b
  42353f:	daa    
  423540:	mov    es:0x694bf775,eax
  423546:	dec    ecx
  423547:	ss jle 0x4234fd
  42354a:	pcmpgtd mm5,QWORD PTR [ebp-0x67]
  42354e:	ds stos BYTE PTR es:[edi],al
  423550:	hlt    
  423551:	stos   BYTE PTR es:[edi],al
  423552:	addr16 xchg ecx,eax
  423554:	ror    DWORD PTR [esi+0x21b28158],cl
  42355a:	(bad)  
  42355b:	pop    esp
  42355c:	call   0x5fa912a4
  423561:	sub    esi,DWORD PTR [esi+edx*1+0x360636d3]
  423568:	ins    BYTE PTR es:[edi],dx
  423569:	test   al,0x63
  42356b:	xor    BYTE PTR [ecx+0x3b],0x18
  42356f:	inc    edx
  423570:	rcl    edx,cl
  423572:	xlat   BYTE PTR ds:[ebx]
  423573:	bound  edx,QWORD PTR [ecx+0x5439ffd2]
  423579:	rol    esp,cl
  42357b:	rcl    DWORD PTR [ebx+0x44602a8],1
  423581:	xor    DWORD PTR [ecx+0x61],esi
  423584:	(bad)  
  423586:	retf   0xd3b1
  423589:	push   ds
  42358a:	test   eax,0xe8983ac3
  42358f:	retf   0x66a5
  423592:	push   0xfe8aa681
  423597:	es out dx,al
  423599:	lahf   
  42359a:	xchg   ebx,eax
  42359b:	lock test DWORD PTR [ecx],esi
  42359e:	cdq    
  42359f:	je     0x4235e9
  4235a1:	xlat   BYTE PTR ds:[ebx]
  4235a2:	xor    eax,0x286560ab
  4235a7:	dec    edi
  4235a8:	jns    0x423542
  4235aa:	push   ebx
  4235ab:	jp     0x42359e
  4235ad:	pushf  
  4235ae:	and    edx,0xbe74f98c
  4235b4:	pop    edx
  4235b5:	ins    DWORD PTR es:[edi],dx
  4235b6:	scas   eax,DWORD PTR es:[edi]
  4235b7:	push   esi
  4235b8:	mov    esp,0x3aa1856f
  4235bd:	test   BYTE PTR [edx-0x47],dl
  4235c0:	scas   eax,DWORD PTR es:[edi]
  4235c1:	mov    al,ds:0x14ea43f5
  4235c6:	push   ss
  4235c7:	mov    bh,0xa4
  4235c9:	adc    eax,ecx
  4235cb:	sub    edx,0xa867457a
  4235d1:	sbb    al,0xf2
  4235d3:	data16 jne 0x4235a4
  4235d6:	mul    BYTE PTR [ebp-0x2e]
  4235d9:	das    
  4235da:	sub    al,0x68
  4235dc:	mov    WORD PTR ds:0x662eeea2,?
  4235e2:	(bad)  
  4235e3:	cmc    
  4235e4:	mov    eax,0x176babbd
  4235e9:	jne    0x423607
  4235eb:	jmp    0xa773:0x8d738cc0
  4235f2:	cmc    
  4235f3:	push   edi
  4235f4:	or     edx,DWORD PTR ds:0xeed31576
  4235fa:	std    
  4235fb:	add    al,0xcc
  4235fd:	push   edi
  4235fe:	mov    edi,0x7955aa7d
  423603:	in     eax,dx
  423604:	mov    edx,0x4c185fd
  423609:	xchg   ebx,eax
  42360a:	push   ebp
  42360b:	or     al,0xf2
  42360d:	jnp    0x423613
  42360f:	and    DWORD PTR [ebx-0x275d375e],edx
  423615:	push   ecx
  423616:	sbb    ecx,DWORD PTR [edi+0x38]
  423619:	gs xchg edx,eax
  42361b:	je     0x4235ab
  42361d:	pop    edi
  42361e:	adc    al,0x4
  423620:	(bad)
  423624:	xchg   ebx,eax
  423625:	std    
  423626:	jne    0x4235f1
  423628:	jl     0x423699
  42362a:	and    DWORD PTR [ebx+0x60],esi
  42362d:	lods   al,BYTE PTR ds:[esi]
  42362e:	lahf   
  42362f:	or     ax,0xbd4d
  423633:	add    dl,dh
  423635:	loope  0x423697
  423637:	add    ebx,edx
  423639:	xchg   edi,eax
  42363a:	std    
  42363b:	or     DWORD PTR [ebx-0x6a],ecx
  42363e:	sbb    ah,0xf7
  423641:	and    DWORD PTR [eax+0x66],edi
  423644:	mov    ds:0xee282b78,al
  423649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42364a:	pop    ebx
  42364b:	mov    edx,0xc89573b2
  423650:	sbb    cl,al
  423652:	mov    dh,0xee
  423654:	call   0x6466:0x9e6c1e72
  42365b:	mov    ecx,0xdccb12a3
  423660:	sar    DWORD PTR [ebx+0x507abc58],cl
  423666:	adc    eax,0x725be3ef
  42366b:	or     esp,DWORD PTR [ecx+0x40d7eb67]
  423671:	push   ds
  423672:	add    al,0x15
  423674:	push   0xffffff91
  423676:	xchg   edi,eax
  423677:	daa    
  423678:	pop    gs
  42367a:	or     eax,DWORD PTR [edi]
  42367c:	rol    esp,1
  42367e:	add    eax,0xeea6dae3
  423683:	sub    eax,0xa2d96558
  423688:	scas   al,BYTE PTR es:[edi]
  423689:	add    eax,0x20183797
  42368e:	jmp    0xfb09:0x632e2bc6
  423695:	lods   al,BYTE PTR ds:[esi]
  423696:	jne    0x4236ae
  423698:	sbb    esp,DWORD PTR [ebp-0x46]
  42369b:	xchg   BYTE PTR [esi-0x5d1df727],ah
  4236a1:	or     DWORD PTR [esi+0x75a13b87],0xc34be131
  4236ab:	popf   
  4236ac:	cmp    eax,0x66647b0
  4236b1:	enter  0xf240,0xd3
  4236b5:	outs   dx,BYTE PTR ds:[esi]
  4236b6:	sbb    edi,DWORD PTR [edx]
  4236b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b9:	xlat   BYTE PTR ds:[ebx]
  4236ba:	mov    bh,0xb5
  4236bc:	popa   
  4236bd:	dec    ecx
  4236be:	sbb    al,0x4a
  4236c0:	shl    DWORD PTR [ebp+0x33],cl
  4236c3:	xor    eax,0x7777d1cd
  4236c8:	loop   0x4236c0
  4236ca:	mov    dl,0xdc
  4236cc:	sub    al,0x4c
  4236ce:	lock xor ebx,eax
  4236d1:	xchg   ecx,eax
  4236d2:	fwait
  4236d3:	inc    esp
  4236d4:	mov    ds:0xa03fef66,al
  4236d9:	mov    ebp,0x37d6e21f
  4236de:	cld    
  4236df:	adc    BYTE PTR [edx+0x59],cl
  4236e2:	mov    esi,0x18485313
  4236e7:	sub    esi,eax
  4236e9:	dec    ecx
  4236ea:	mov    cs:0xf79976ae,eax
  4236f0:	aad    0x8
  4236f2:	cmp    DWORD PTR [edi+0x27],esp
  4236f5:	rcl    esi,1
  4236f7:	push   edx
  4236f8:	shl    DWORD PTR [eax-0x2908b28c],0x75
  4236ff:	cwde   
  423700:	(bad)  
  423702:	nop
  423703:	pop    es
  423704:	xor    eax,DWORD PTR [ecx-0x35]
  423707:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  423709:	or     eax,0xfdd32857
  42370e:	fucom  st(7)
  423710:	retf   
  423711:	arpl   ax,si
  423713:	add    al,0x73
  423715:	gs mov eax,0x61ad24b8
  42371b:	lods   eax,DWORD PTR ds:[esi]
  42371c:	adc    DWORD PTR [ebx-0x40],0xffffffe3
  423720:	fdiv   QWORD PTR gs:[ebp+0xf]
  423724:	adc    ah,cl
  423726:	sub    BYTE PTR [ebx+0x67a65685],dh
  42372c:	sbb    dh,BYTE PTR [ebx]
  42372e:	and    al,0x12
  423730:	inc    esi
  423731:	inc    ebp
  423732:	aam    0x7f
  423734:	adc    cl,BYTE PTR [esi]
  423736:	dec    ebp
  423737:	and    bl,BYTE PTR [edx]
  423739:	sar    cl,1
  42373b:	imul   sp,WORD PTR [ebp+0x652b6ab3],0xffe3
  423743:	sub    DWORD PTR ss:[ebp+0x18947d1c],eax
  42374a:	pusha  
  42374b:	(bad)  
  42374d:	(bad)  
  42374e:	jbe    0x423715
  423750:	cli    
  423751:	int    0xf3
  423753:	jmp    0xb1dca9ee
  423758:	les    ebp,FWORD PTR [esp+eax*1+0x66]
  42375c:	xor    dl,dh
  42375e:	xchg   ebx,eax
  42375f:	dec    ebp
  423760:	shl    edi,cl
  423762:	pop    esp
  423763:	or     eax,0x9e2ce2ce
  423768:	fisub  WORD PTR [esi+0x20]
  42376b:	mov    ah,0xb5
  42376d:	mov    esi,0x7311bf37
  423772:	or     BYTE PTR [edx-0x45],0xee
  423776:	push   0xffffffd9
  423778:	scas   eax,DWORD PTR es:[edi]
  423779:	sbb    BYTE PTR [edi+0x66],al
  42377c:	add    eax,0x4223a765
  423781:	push   esp
  423782:	jmp    0x5b5c:0x6e9a742c
  423789:	xchg   ecx,eax
  42378a:	jne    0x42377f
  42378c:	mov    ds:0x218309c6,eax
  423791:	push   esp
  423792:	iret   
  423793:	stc    
  423794:	mov    ebx,DWORD PTR [edx-0x70e6688d]
  42379a:	nop
  42379b:	shl    BYTE PTR [edx+ebp*4+0x75],cl
  42379f:	and    al,ah
  4237a1:	data16 jp 0x4237f9
  4237a4:	mov    ds:0xc819638d,al
  4237a9:	cld    
  4237aa:	call   0x75946e87
  4237af:	mov    al,0x55
  4237b1:	jl     0x423762
  4237b3:	cdq    
  4237b4:	test   al,0x3f
  4237b6:	icebp  
  4237b7:	cmp    WORD PTR [edi-0x3c],si
  4237bb:	xchg   esp,eax
  4237bc:	loope  0x423801
  4237be:	js     0x423767
  4237c0:	shl    DWORD PTR [edx],cl
  4237c2:	mov    esi,0x2d6b9a72
  4237c7:	cmc    
  4237c8:	rol    ah,1
  4237ca:	ret    
  4237cb:	data16 sbb al,0x6e
  4237ce:	enter  0x9b46,0xaf
  4237d2:	int3   
  4237d3:	inc    ebx
  4237d4:	push   ecx
  4237d5:	mov    dh,BYTE PTR [ebp+0x31]
  4237d8:	in     eax,0x63
  4237da:	dec    esi
  4237db:	mov    esp,0x60ba66b2
  4237e0:	call   DWORD PTR [ebx-0x5ad14440]
  4237e6:	sub    eax,ecx
  4237e8:	ret    0x758a
  4237eb:	mov    esi,0x8920f0f1
  4237f0:	adc    edi,DWORD PTR [ebp+0xe]
  4237f3:	adc    ax,0x2ba2
  4237f7:	pusha  
  4237f8:	rol    BYTE PTR [edx-0x7a],1
  4237fb:	add    ebx,edx
  4237fd:	or     DWORD PTR [esi],edi
  4237ff:	cwde   
  423800:	stos   DWORD PTR es:[edi],eax
  423801:	and    al,0x2
  423804:	out    0xea,eax
  423806:	mov    dl,0x66
  423808:	not    al
  42380a:	push   edx
  42380b:	mov    ebx,0xfcd2fde6
  423810:	adc    al,0xe6
  423812:	js     0x423808
  423814:	inc    esp
  423815:	and    al,0x1d
  423817:	cmp    DWORD PTR [ebx],ecx
  423819:	gs jge 0x42382c
  42381c:	call   0x51f548ae
  423821:	(bad)  
  423822:	cs aam 0x80
  423825:	pop    esi
  423826:	jne    0x423874
  423828:	or     al,0x6
  42382a:	cmc    
  42382b:	and    ebp,DWORD PTR [ecx-0x4c6fbaae]
  423831:	dec    ebp
  423832:	and    cl,bh
  423834:	and    eax,0xb7fb4bbf
  423839:	jl     0x4238a5
  42383b:	fadd   st(2),st
  42383d:	add    esp,DWORD PTR ds:[esi-0x12]
  423841:	pop    esp
  423842:	or     al,dh
  423844:	jp     0x4238ab
  423846:	xchg   ecx,esi
  423848:	loopne 0x423872
  42384a:	loopne 0x423835
  42384c:	ror    DWORD PTR [ecx+ebx*4+0x28c7d283],cl
  423853:	mov    eax,ds:0xb45a82a8
  423858:	out    0xc1,al
  42385a:	push   ss
  42385b:	outs   dx,DWORD PTR ds:[esi]
  42385c:	in     eax,0x1e
  42385e:	sub    ebp,DWORD PTR ds:0xf4f5c4ad
  423864:	ror    DWORD PTR [ecx],cl
  423866:	push   ebx
  423867:	in     eax,0xd
  423869:	adc    eax,DWORD PTR [eax*4+0x1ae6bed]
  423870:	mov    edi,0x8d731479
  423875:	sub    BYTE PTR ds:0x50b639b,dl
  42387b:	push   ebp
  42387c:	mov    ds:0x129e74ae,al
  423881:	sahf   
  423882:	push   0x1a
  423884:	jne    0x4238f7
  423886:	jge    0x42380b
  423888:	enter  0x7315,0x61
  42388c:	test   al,0x57
  42388e:	int3   
  42388f:	es in  eax,0xd7
  423892:	pop    es
  423893:	mov    esp,0x1ebc0036
  423898:	icebp  
  423899:	test   DWORD PTR [edx],edi
  42389b:	inc    edi
  42389c:	jmp    0x423903
  42389e:	xor    edx,edi
  4238a0:	stos   DWORD PTR es:[edi],eax
  4238a1:	mov    dl,0x9e
  4238a3:	jb     0x4238ce
  4238a5:	xchg   edi,eax
  4238a6:	jo     0x4238bf
  4238a8:	sti    
  4238a9:	push   0x75
  4238ab:	xlat   BYTE PTR ds:[ebx]
  4238ac:	xor    DWORD PTR [ebp+0x5bde5278],ebx
  4238b2:	fwait
  4238b3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4238b5:	out    dx,eax
  4238b6:	add    di,WORD PTR [edx+0x12]
  4238ba:	pop    esi
  4238bb:	ins    BYTE PTR es:[edi],dx
  4238bc:	push   esi
  4238bd:	push   esi
  4238be:	into   
  4238bf:	cmc    
  4238c0:	and    BYTE PTR [ebp-0x41],ah
  4238c3:	sbb    eax,0x2f998008
  4238c8:	cmp    DWORD PTR [ebp+0xa],esp
  4238cb:	dec    ecx
  4238cc:	dec    esp
  4238cd:	xchg   ecx,eax
  4238ce:	inc    ebp
  4238cf:	addr16 mov al,0x83
  4238d2:	pop    ds
  4238d3:	jns    0x42391f
  4238d5:	cld    
  4238d6:	jne    0x423942
  4238d8:	sbb    eax,DWORD PTR [edx+0x51]
  4238db:	push   0x4e
  4238dd:	push   ebp
  4238de:	sub    al,0x90
  4238e0:	mov    bl,0x79
  4238e2:	cmp    DWORD PTR [esi-0x38],ebx
  4238e5:	in     al,0xbb
  4238e7:	sbb    eax,0x24756c04
  4238ec:	xlat   BYTE PTR ds:[ebx]
  4238ed:	out    dx,eax
  4238ee:	or     dh,BYTE PTR [ebx+ecx*4-0x76]
  4238f2:	mov    bh,0x6b
  4238f4:	mov    ds:0xce6cb0a6,eax
  4238f9:	pop    esi
  4238fa:	icebp  
  4238fb:	pop    esp
  4238fc:	ja     0x423954
  4238fe:	jne    0x423923
  423900:	inc    eax
  423901:	loope  0x423908
  423903:	xchg   cl,bl
  423905:	rol    BYTE PTR [ecx+0x66],1
  423908:	cmc    
  423909:	test   BYTE PTR [edx+0x3d5dd35f],cl
  42390f:	in     al,dx
  423910:	and    BYTE PTR [ebx+0x657a0369],al
  423916:	add    ah,ch
  423918:	rcr    BYTE PTR [ecx],0x16
  42391b:	jb     0x423978
  42391d:	loope  0x42395e
  42391f:	cmp    eax,0x6c752234
  423924:	call   0x3ffcdb5d
  423929:	gs jg  0x423922
  42392c:	loope  0x42395e
  42392e:	cmp    DWORD PTR [ecx+ecx*4],ebp
  423931:	aaa    
  423932:	xor    BYTE PTR [ecx],0xd3
  423935:	cmp    bh,dl
  423937:	ja     0x423969
  423939:	sar    BYTE PTR [edi-0xd9a150d],0x2d
  423940:	mov    ebp,fs
  423942:	xchg   DWORD PTR [eax+0x18],edx
  423945:	les    eax,FWORD PTR [ebx+0x54]
  423948:	rcr    DWORD PTR [ebp-0xcf2c11b],cl
  42394e:	push   eax
  42394f:	arpl   WORD PTR [ebp+eiz*2+0x49],bx
  423953:	mov    esi,0xddc79066
  423958:	sbb    al,BYTE PTR ds:0xd2ac257e
  42395e:	jne    0x4239d4
  423960:	dec    esp
  423961:	lods   al,BYTE PTR ds:[esi]
  423962:	jo     0x4238e7
  423964:	outs   dx,DWORD PTR ds:[esi]
  423965:	push   ebx
  423966:	ins    DWORD PTR es:[edi],dx
  423967:	popa   
  423968:	xchg   ebp,eax
  423969:	push   edi
  42396a:	pop    ds
  42396b:	popf   
  42396c:	push   edi
  42396d:	mov    bh,0x9
  42396f:	push   edx
  423970:	outs   dx,BYTE PTR ds:[esi]
  423971:	inc    edx
  423972:	jbe    0x423971
  423974:	pop    ecx
  423975:	int    0x19
  423977:	fdivr  st,st(1)
  423979:	gs (bad) 
  42397b:	div    DWORD PTR [esi+0x24]
  42397e:	adc    bh,BYTE PTR [eax+0x3bb6f220]
  423984:	pop    ebx
  423985:	fnsave [ebp-0xe]
  423988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423989:	adc    eax,0xec179f7
  42398e:	lock lds bp,DWORD PTR ds:0x96594c4e
  423996:	push   esi
  423997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423998:	sti    
  423999:	in     eax,0xb9
  42399b:	(bad)  
  42399c:	out    dx,eax
  42399d:	ret    0xd5ca
  4239a0:	enter  0x4a66,0xa6
  4239a4:	dec    esp
  4239a5:	mov    ebx,0xb94525f7
  4239aa:	fbld   TBYTE PTR [ebx+0x60]
  4239ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239ae:	jne    0x423957
  4239b0:	jp     0x423976
  4239b2:	dec    edi
  4239b3:	push   es
  4239b4:	inc    DWORD PTR [ebp-0xf]
  4239b7:	xchg   ecx,eax
  4239b8:	xchg   ebx,eax
  4239b9:	jns    0x4239df
  4239bb:	jecxz  0x42397c
  4239bd:	xchg   DWORD PTR [esi],eax
  4239bf:	rol    BYTE PTR [esi+0x6],cl
  4239c2:	jne    0x4239ac
  4239c4:	xchg   edi,eax
  4239c5:	aam    0x82
  4239c7:	fs jle 0x4239e6
  4239ca:	mov    eax,0x76944880
  4239cf:	mov    eax,ds:0x17914617
  4239d4:	inc    esi
  4239d5:	jae    0x423a4c
  4239d7:	mov    edi,edi
  4239d9:	mov    esp,0x8af97ac0
  4239de:	mov    eax,0x1ad8a866
  4239e3:	mov    eax,ds:0x141cfbd3
  4239e8:	daa    
  4239e9:	test   BYTE PTR [ecx],bl
  4239eb:	push   ebp
  4239ec:	sar    DWORD PTR ds:0x3bd30534,1
  4239f2:	dec    edi
  4239f3:	leave  
  4239f4:	xchg   esp,eax
  4239f5:	adc    esi,ebp
  4239f7:	pushf  
  4239f8:	shr    DWORD PTR [ebx-0x154c20fd],cl
  4239fe:	sbb    eax,0xe626532
  423a04:	pushf  
  423a05:	mov    WORD PTR [ecx],fs
  423a07:	popa   
  423a08:	sbb    DWORD PTR [edi+0x7e],ebp
  423a0b:	je     0x423a0b
  423a0d:	mov    ds:0x856fce75,al
  423a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a13:	std    
  423a14:	retf   
  423a15:	rol    BYTE PTR [eax+0x66],0xbf
  423a19:	cmp    BYTE PTR ds:0x3cdbd0dd,0x37
  423a20:	shr    BYTE PTR [eax-0x260fd900],0x2e
  423a27:	mov    ds:0xd45d38db,al
  423a2c:	shl    edx,cl
  423a2e:	lahf   
  423a2f:	ss mov al,0x2f
  423a32:	dec    ebp
  423a33:	je     0x423a5a
  423a35:	out    dx,al
  423a36:	ins    DWORD PTR es:[edi],dx
  423a37:	ds in  eax,dx
  423a39:	(bad)  
  423a3a:	cmc    
  423a3b:	push   0xffffff85
  423a3d:	sbb    eax,0xbcc266cf
  423a42:	adc    eax,0xc6de5411
  423a47:	jb     0x4239eb
  423a49:	sti    
  423a4a:	jne    0x423a96
  423a4c:	or     al,ah
  423a4e:	scas   eax,DWORD PTR es:[edi]
  423a4f:	(bad)  
  423a51:	iret   
  423a52:	imul   esp,DWORD PTR [ecx+0x48],0xffffffbd
  423a56:	add    al,0x4a
  423a58:	rcl    DWORD PTR [eax-0x2d],cl
  423a5b:	mov    ch,0xa9
  423a5d:	sar    edi,cl
  423a5f:	lods   eax,DWORD PTR ds:[esi]
  423a60:	mov    WORD PTR [ebx],es
  423a62:	call   0x1a275d81
  423a67:	les    ebx,FWORD PTR [edx+0x315e95dc]
  423a6d:	and    dh,BYTE PTR [ebp+0x11]
  423a70:	add    BYTE PTR [ebx+ebx*1],0xcf
  423a74:	and    DWORD PTR [esi],edi
  423a76:	jo     0x423adf
  423a78:	xor    dh,dl
  423a7a:	push   ss
  423a7b:	into   
  423a7c:	pop    ds
  423a7d:	mov    cl,0x55
  423a7f:	repnz arpl WORD PTR [esi*2+0x49de7aaf],si
  423a87:	inc    ebx
  423a88:	ins    BYTE PTR es:[edi],dx
  423a89:	cmc    
  423a8a:	sti    
  423a8b:	mov    bx,0x2d94
  423a8f:	mov    ebp,0x9e9b87d0
  423a94:	or     al,0x82
  423a96:	jo     0x423ad4
  423a98:	fisttp WORD PTR [ecx+0x32f92c72]
  423a9e:	lea    edx,[eax-0x2d3e99c2]
  423aa4:	std    
  423aa5:	in     al,0x2
  423aa7:	sub    eax,DWORD PTR [esi-0x44]
  423aaa:	jge    0x423b2a
  423aac:	push   ecx
  423aad:	out    dx,al
  423aae:	jne    0x423a7f
  423ab0:	jmp    0x4812f1
  423ab5:	mov    ah,0x66
  423ab8:	xchg   BYTE PTR ds:0x6ddd88b3,ah
  423abe:	mov    eax,0x750405b6
  423ac3:	mov    esp,0x873730b7
  423ac8:	stc    
  423ac9:	jns    0x423afb
  423acb:	xchg   ecx,eax
  423acc:	adc    edx,DWORD PTR ds:0xba84f0a2
  423ad2:	and    DWORD PTR [esi],ecx
  423ad4:	sahf   
  423ad5:	fidiv  DWORD PTR [ebp+0x7e]
  423ad8:	cs cmc 
  423ada:	mov    eax,0x2a7ec53f
  423adf:	xor    ch,BYTE PTR [si]
  423ae2:	or     bh,BYTE PTR [esi]
  423ae4:	ss ret 
  423ae6:	cli    
  423ae7:	xchg   BYTE PTR [ebx+0x463375ab],dl
  423aed:	and    al,0xa6
  423aef:	inc    ebp
  423af0:	das    
  423af1:	adc    esp,0x66
  423af4:	nop
  423af5:	adc    BYTE PTR [ebx+0x6e],dh
  423af8:	push   esp
  423af9:	(bad)  
  423afa:	out    0xde,eax
  423afc:	cmp    BYTE PTR [edx],ch
  423afe:	jne    0x423a87
  423b00:	dec    DWORD PTR [ebx-0x45cd8935]
  423b06:	mov    WORD PTR [eax-0x2f8aaf4a],fs
  423b0c:	inc    edx
  423b0d:	test   al,0xb6
  423b0f:	mov    bl,0x1
  423b11:	icebp  
  423b12:	cwde   
  423b13:	add    al,0xd0
  423b15:	js     0x423acc
  423b17:	or     ebx,edx
  423b19:	mov    ax,0x2fb9
  423b1d:	pop    es
  423b1e:	mov    edi,ebp
  423b20:	adc    bl,BYTE PTR [edx+0x1fc639bd]
  423b26:	jne    0x423b5e
  423b28:	inc    ecx
  423b29:	push   ss
  423b2a:	push   esp
  423b2b:	or     bh,BYTE PTR [edi+0x7f]
  423b2e:	mul    DWORD PTR [edx+esi*1-0x2]
  423b32:	mov    cl,0x86
  423b34:	and    ebp,esp
  423b36:	hlt    
  423b37:	xor    ebx,eax
  423b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b3a:	mov    ebx,0x573a5a5d
  423b3f:	push   ecx
  423b40:	stos   BYTE PTR es:[edi],al
  423b41:	mov    bh,0x75
  423b43:	add    BYTE PTR [esi],0xd5
  423b46:	lahf   
  423b47:	push   eax
  423b48:	stos   DWORD PTR es:[edi],eax
  423b49:	lds    edx,FWORD PTR [edx]
  423b4b:	mov    esp,0x2c756b75
  423b50:	(bad)  
  423b51:	in     eax,0xe
  423b53:	pop    es
  423b54:	je     0x423b3e
  423b56:	jne    0x423bcf
  423b58:	ss push ebp
  423b5a:	test   DWORD PTR [esi-0x12],ebx
  423b5d:	adc    edi,esi
  423b5f:	xchg   ebp,eax
  423b60:	cmp    ebp,DWORD PTR [esi-0x6216999d]
  423b66:	(bad)  
  423b67:	mov    al,0xee
  423b69:	hlt    
  423b6a:	pop    esp
  423b6b:	dec    esi
  423b6c:	inc    DWORD PTR [ebx]
  423b6e:	sub    BYTE PTR [ebp+0x56999237],cl
  423b74:	and    al,0xde
  423b76:	and    ah,BYTE PTR [esi-0x1c]
  423b79:	and    ah,BYTE PTR [ecx]
  423b7b:	jmp    0x4ad80267
  423b80:	pop    ebp
  423b81:	pop    ss
  423b82:	or     ah,ah
  423b84:	xchg   BYTE PTR [esi-0x6a],ah
  423b87:	cli    
  423b88:	pop    esp
  423b89:	push   edx
  423b8a:	loop   0x423b5d
  423b8c:	xor    DWORD PTR cs:[edi+0x754deea9],edx
  423b93:	mov    esi,0xaf3ef532
  423b98:	push   cs
  423b99:	gs mov ebp,0x62145f4
  423b9f:	icebp  
  423ba0:	ficomp DWORD PTR [ecx-0x2a657c1b]
  423ba6:	mov    ebx,0xc1653030
  423bab:	add    BYTE PTR [edi+0x4a],cl
  423bae:	add    BYTE PTR [ecx-0x6c8eaa1e],0xce
  423bb5:	sbb    eax,0xf7835fbb
  423bba:	es jno 0x423bab
  423bbd:	mov    esp,0x5a289370
  423bc2:	out    dx,eax
  423bc3:	mov    ch,0xa4
  423bc5:	xchg   esi,eax
  423bc6:	push   edi
  423bc7:	ss push 0x5b
  423bca:	and    DWORD PTR [esi-0x27],0xfffffffd
  423bce:	clc    
  423bcf:	sub    edx,0xbdeb3bf
  423bd5:	sub    bl,BYTE PTR [ebx-0x45]
  423bd8:	pop    ebx
  423bd9:	sbb    dl,0x26
  423bdc:	fbld   TBYTE PTR [ecx-0x34]
  423bdf:	push   edi
  423be0:	push   es
  423be1:	xchg   ah,al
  423be3:	call   0x73ca4096
  423be8:	lods   al,BYTE PTR ds:[esi]
  423be9:	cld    
  423bea:	push   ebp
  423beb:	adc    edx,edx
  423bed:	fwait
  423bee:	jne    0x423bd4
  423bf0:	cmp    al,0x67
  423bf2:	mov    bh,0x95
  423bf4:	adc    eax,0x6a66d218
  423bf9:	sbb    eax,ebx
  423bfb:	(bad)  
  423bfd:	and    DWORD PTR [ebx-0x15],ecx
  423c00:	sub    DWORD PTR [eax],ecx
  423c02:	ret    0x762d
  423c05:	std    
  423c06:	and    eax,DWORD PTR [edi+0x34]
  423c09:	pop    ecx
  423c0a:	sti    
  423c0b:	sahf   
  423c0c:	out    0x2c,eax
  423c0e:	inc    ebp
  423c0f:	call   0x47ab:0x987463ca
  423c16:	fcomp  QWORD PTR [eax+0x754566cc]
  423c1c:	test   al,0xf0
  423c1e:	hlt    
  423c1f:	dec    eax
  423c20:	xchg   edi,eax
  423c21:	cdq    
  423c22:	retf   0x12a7
  423c25:	dec    ecx
  423c26:	xchg   ecx,eax
  423c27:	not    DWORD PTR [ebx-0x71016712]
  423c2d:	mov    dl,0xc9
  423c2f:	sbb    al,0xcd
  423c31:	lods   eax,DWORD PTR ds:[esi]
  423c32:	sub    eax,0xa3b5d391
  423c37:	mov    bh,0xb5
  423c39:	pushf  
  423c3a:	sub    cl,0x8c
  423c3d:	mov    ds:0x35ef7375,al
  423c42:	jnp    0x423c0a
  423c44:	jge    0x423c3b
  423c46:	cs repnz dec cx
  423c4a:	ret    0xeaec
  423c4d:	ins    BYTE PTR es:[edi],dx
  423c4e:	pushf  
  423c4f:	dec    ecx
  423c50:	fwait
  423c51:	(bad)  
  423c52:	dec    eax
  423c53:	popf   
  423c54:	fsub   DWORD PTR [eax]
  423c56:	adc    eax,0xe95a7ba6
  423c5b:	mov    bp,0xedfe
  423c5f:	jmp    0x21a:0xd3bb4cd3
  423c66:	add    al,0xd2
  423c68:	dec    ecx
  423c69:	gs push esp
  423c6b:	stos   BYTE PTR es:[edi],al
  423c6c:	jmp    0xf4f8:0xee279ecd
  423c73:	push   ds
  423c74:	xor    BYTE PTR [edx-0x3bda8b8b],bl
  423c7a:	das    
  423c7b:	fs icebp 
  423c7d:	in     al,dx
  423c7e:	aaa    
  423c7f:	data16 adc bh,BYTE PTR [ebp-0x3c]
  423c83:	sub    dl,bl
  423c85:	jle    0x423c16
  423c87:	out    0x1b,eax
  423c89:	cmp    al,0x99
  423c8b:	pop    edi
  423c8c:	xor    bl,BYTE PTR [edx-0x1c]
  423c8f:	xor    esi,DWORD PTR [ecx]
  423c91:	and    eax,0xcf2e1a9f
  423c96:	xor    dl,bh
  423c98:	rcr    ebx,cl
  423c9a:	dec    edx
  423c9b:	xor    BYTE PTR [ecx],cl
  423c9d:	pop    esp
  423c9e:	pop    ebp
  423c9f:	push   ebx
  423ca0:	or     eax,0x66f3403f
  423ca5:	test   eax,0x6ae5a577
  423caa:	mov    edi,0xd51ca95c
  423caf:	add    edx,ebx
  423cb1:	cmp    al,0x27
  423cb4:	push   ecx
  423cb5:	(bad)  
  423cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cb7:	inc    ecx
  423cb8:	stos   DWORD PTR es:[edi],eax
  423cb9:	data16 xchg BYTE PTR [ebx],bh
  423cbc:	jno    0x423c82
  423cbe:	mov    bl,BYTE PTR [ebp+ebp*4-0x650c395b]
  423cc5:	cld    
  423cc6:	mov    edx,0x51a8b115
  423ccb:	jle    0x423c8c
  423ccd:	jae    0x423d44
  423ccf:	and    eax,ebx
  423cd1:	cmp    ch,dl
  423cd3:	push   ecx
  423cd4:	or     eax,0xe465b661
  423cd9:	mov    ebp,0xa403b3de
  423cde:	or     eax,0x75c9949c
  423ce3:	(bad)  
  423ce4:	mov    al,ds:0xa352a61a
  423ce9:	mov    dx,0x9f1e
  423ced:	mov    bl,0xe9
  423cef:	dec    esi
  423cf0:	inc    ebp
  423cf1:	jge    0x423cee
  423cf3:	les    edx,FWORD PTR [esi+0x14]
  423cf6:	jne    0x423cd4
  423cf8:	in     al,0xe3
  423cfa:	mov    ecx,0x9f9ee503
  423cff:	fs out 0x75,eax
  423d02:	rol    DWORD PTR [ebp+0x45],0xb1
  423d06:	mov    ch,0xc9
  423d08:	jge    0x423cb1
  423d0a:	call   0x87bc:0xf5704faf
  423d11:	popa   
  423d12:	call   0xfb930e94
  423d17:	sub    DWORD PTR [ebx-0x2cc31019],0x1c48e3cc
  423d21:	out    dx,al
  423d22:	jl     0x423cba
  423d24:	shl    BYTE PTR [esi+0x2d],cl
  423d27:	out    dx,al
  423d28:	mov    bl,0xd8
  423d2a:	lods   eax,DWORD PTR ds:[esi]
  423d2b:	cmp    al,dh
  423d2d:	out    dx,eax
  423d2e:	and    cl,dh
  423d30:	jmp    0x423d55
  423d32:	je     0x423cc2
  423d34:	xor    eax,0x549bb85b
  423d39:	ins    BYTE PTR es:[edi],dx
  423d3a:	jge    0x423cc4
  423d3c:	jno    0x423d88
  423d3e:	inc    edx
  423d3f:	fcomp  DWORD PTR [ecx-0x7198fbde]
  423d45:	adc    bh,dl
  423d47:	(bad)  
  423d48:	push   ebp
  423d49:	aas    
  423d4a:	jne    0x423d25
  423d4c:	jge    0x423ced
  423d4e:	mov    BYTE PTR [edx+0x664eb71a],0xa7
  423d55:	mov    ah,0x69
  423d57:	cmp    eax,0xf86f7ddf
  423d5c:	mov    BYTE PTR [edx+0x72],cl
  423d5f:	xor    bl,0x32
  423d62:	add    bl,BYTE PTR [ecx-0x72d59a94]
  423d68:	jp     0x423d33
  423d6a:	shr    BYTE PTR [ecx+0x3d],cl
  423d6d:	add    DWORD PTR [edx+0x7562b7ac],esp
  423d73:	mov    cl,0x1c
  423d75:	ds popa 
  423d77:	(bad)  
  423d79:	cmp    BYTE PTR [edi+0x39b30582],0xa6
  423d80:	out    0xdf,al
  423d82:	xchg   edi,eax
  423d83:	pop    ebx
  423d84:	pusha  
  423d85:	mov    cl,0x76
  423d87:	outs   dx,BYTE PTR ds:[esi]
  423d88:	or     bl,ch
  423d8a:	pop    ebx
  423d8b:	inc    esp
  423d8c:	jbe    0x423dee
  423d8e:	or     eax,ecx
  423d90:	mov    ebx,0x8b7e861a
  423d95:	mov    ds:0x5c30b41,al
  423d9a:	shl    WORD PTR [edi],0x9c
  423d9e:	mov    DWORD PTR [ecx-0xb8a7661],ecx
  423da4:	in     eax,dx
  423da5:	data16 jl 0x423d71
  423da8:	mov    esp,0xcd6b7b21
  423dad:	jb     0x423d5a
  423daf:	or     bl,dl
  423db1:	xor    esi,edi
  423db3:	pop    esi
  423db4:	mov    edx,0xfcebccfb
  423db9:	gs js  0x423e24
  423dbc:	loop   0x423d97
  423dbe:	add    eax,0x1218ff69
  423dc3:	cmc    
  423dc4:	enter  0x6171,0x6f
  423dc8:	leave  
  423dc9:	stc    
  423dca:	jge    0x423e31
  423dcc:	js     0x423d9c
  423dce:	push   esp
  423dcf:	retf   
  423dd0:	ret    
  423dd1:	xchg   edx,eax
  423dd2:	(bad)  
  423dd3:	xchg   ecx,eax
  423dd4:	jns    0x423d86
  423dd6:	jmp    FWORD PTR [ecx-0x64]
  423dd9:	xchg   esi,eax
  423dda:	rol    BYTE PTR [ecx+eiz*4],0xdc
  423dde:	ins    DWORD PTR es:[edi],dx
  423ddf:	xchg   ecx,eax
  423de0:	cmc    
  423de1:	cld    
  423de2:	jne    0x423e4a
  423de4:	mov    ch,0x1a
  423de6:	cmc    
  423de7:	push   0xffffff9a
  423de9:	xor    ch,bl
  423deb:	data16 and BYTE PTR [edi+ecx*2],al
  423def:	dec    eax
  423df0:	sar    BYTE PTR [ecx+eiz*8],cl
  423df3:	ins    DWORD PTR es:[edi],dx
  423df4:	retf   
  423df5:	mov    ebx,0x66d5d6e7
  423dfa:	lahf   
  423dfb:	pop    edi
  423dfc:	jp     0x423d87
  423dfe:	fadd   DWORD PTR es:[ebp+0x5792e0c8]
  423e05:	ja     0x423e7c
  423e07:	in     al,0xe0
  423e09:	xor    DWORD PTR [ebp-0x75],ecx
  423e0c:	bound  ecx,QWORD PTR [eax-0x6]
  423e0f:	data16 into 
  423e11:	pop    esi
  423e12:	xchg   DWORD PTR [edi+ebx*8+0x12],ebp
  423e16:	pop    edi
  423e17:	aam    0x79
  423e19:	dec    esi
  423e1a:	jb     0x423e10
  423e1c:	jecxz  0x423e62
  423e1e:	(bad)  
  423e1f:	sbb    eax,0xc4ab8b3b
  423e24:	test   DWORD PTR [ebp+0xb],0x2e6ad066
  423e2b:	push   eax
  423e2c:	add    eax,0xd3d3c991
  423e31:	ss jns 0x423e56
  423e34:	div    BYTE PTR [edx+0xc]
  423e37:	dec    ebp
  423e38:	fs push esp
  423e3a:	mov    esi,edi
  423e3c:	fst    DWORD PTR [ebp-0x70]
  423e3f:	aad    0x1c
  423e41:	cmp    ch,dh
  423e43:	std    
  423e44:	shl    DWORD PTR [ebx],cl
  423e46:	sti    
  423e47:	je     0x423dcb
  423e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e4a:	hlt    
  423e4b:	fimul  WORD PTR [edi+0x65]
  423e4e:	jbe    0x423e2a
  423e50:	pushf  
  423e51:	ins    BYTE PTR es:[edi],dx
  423e52:	das    
  423e53:	das    
  423e54:	inc    ebx
  423e55:	xchg   ebp,eax
  423e56:	or     al,0xf2
  423e58:	into   
  423e59:	mov    ah,0x74
  423e5b:	and    eax,0x1ddc25d9
  423e60:	out    dx,eax
  423e61:	addr16 sub eax,0x39ba0cef
  423e67:	int3   
  423e68:	xor    edi,DWORD PTR [edx-0x53]
  423e6b:	(bad)  
  423e6c:	pop    ecx
  423e6d:	add    DWORD PTR [ebx],0x752430c3
  423e73:	mov    WORD PTR [ebp+0x69db0f68],?
  423e79:	lea    ebx,[edx]
  423e7b:	jl     0x423ea7
  423e7d:	mov    WORD PTR [esi+eiz*2-0x179dca7f],ds
  423e84:	push   edi
  423e85:	in     al,0xbb
  423e87:	pop    ebx
  423e88:	lods   eax,DWORD PTR ds:[esi]
  423e89:	mov    di,0xaa4b
  423e8d:	jne    0x423ead
  423e8f:	xlat   BYTE PTR ds:[ebx]
  423e90:	mov    ah,BYTE PTR [esi+0x55]
  423e93:	out    dx,eax
  423e94:	mov    bh,0x2d
  423e96:	fldcw  WORD PTR cs:[ecx-0x7a]
  423e9a:	test   eax,0x75bc6b37
  423e9f:	out    0x9d,al
  423ea1:	popf   
  423ea2:	mov    cs,WORD PTR [ebx]
  423ea4:	adc    ch,0x27
  423ea7:	dec    si
  423ea9:	mov    eax,0xfde5b52d
  423eae:	jns    0x423f05
  423eb0:	adc    BYTE PTR [esi+0x13970ab0],cl
  423eb6:	push   es
  423eb7:	out    0x7,al
  423eb9:	gs push ebp
  423ebb:	mov    ah,0xd2
  423ebd:	rcl    BYTE PTR [edi-0x291cce10],0xbf
  423ec4:	cld    
  423ec5:	mov    WORD PTR [esi+0x42],?
  423ec8:	fisub  WORD PTR [esi+0x6554d0e7]
  423ece:	lods   eax,DWORD PTR ds:[esi]
  423ecf:	out    0x7c,al
  423ed1:	inc    eax
  423ed2:	push   edi
  423ed3:	cmc    
  423ed4:	jmp    FWORD PTR [edi]
  423ed6:	arpl   WORD PTR [ebx-0x36],si
  423ed9:	mov    DWORD PTR [ebp+0x7b],esi
  423edc:	adc    al,0x1c
  423ede:	pusha  
  423edf:	lahf   
  423ee0:	jg     0x423f47
  423ee2:	dec    edx
  423ee3:	cli    
  423ee4:	pop    esp
  423ee5:	jecxz  0x423ece
  423ee7:	dec    esi
  423ee8:	hlt    
  423ee9:	(bad)  
  423eea:	retf   0x8cf2
  423eed:	rcl    DWORD PTR [ebx+0x7512be2a],cl
  423ef3:	jne    0x423f2c
  423ef5:	gs jno 0x423f1f
  423ef8:	and    al,0xd1
  423efa:	cmp    edx,DWORD PTR [ebx+0x5ef63d27]
  423f00:	jge    0x423f00
  423f02:	fwait
  423f03:	out    dx,al
  423f04:	pop    ss
  423f05:	xchg   esp,eax
  423f06:	jne    0x423ed5
  423f08:	dec    ecx
  423f09:	cmp    DWORD PTR [ebx+0x63225374],esp
  423f0f:	mov    dh,0xfc
  423f11:	pop    ds
  423f12:	push   es
  423f13:	mov    dh,0xd3
  423f15:	int3   
  423f16:	xchg   edx,eax
  423f17:	daa    
  423f18:	add    al,0xe7
  423f1b:	push   ss
  423f1c:	pop    ebp
  423f1d:	gs dec edx
  423f1f:	pop    ss
  423f20:	mov    WORD PTR [ebp+0x7e],ds
  423f23:	add    DWORD PTR [eax],ebp
  423f25:	inc    ecx
  423f26:	cmp    bl,0x44
  423f29:	jno    0x423fa0
  423f2b:	popf   
  423f2c:	cmp    eax,0x9fca0962
  423f31:	mov    dh,0x25
  423f33:	iretw  
  423f35:	test   BYTE PTR [esi+0x4e4ed3d6],0xde
  423f3c:	and    eax,DWORD PTR gs:[edi+esi*4]
  423f40:	arpl   WORD PTR [ebp-0x37],sp
  423f43:	mov    eax,0xf59abba2
  423f48:	jmp    0x6a14:0x8ff9dfe7
  423f4f:	sar    cl,0x43
  423f52:	stos   BYTE PTR es:[edi],al
  423f53:	es out dx,eax
  423f55:	adc    eax,0x61abddf3
  423f5a:	mov    ds:0x84b75f03,al
  423f5f:	push   0x25d1a889
  423f64:	mov    ah,0xe
  423f66:	mul    BYTE PTR ds:0x2f55e034
  423f6c:	inc    ebp
  423f6d:	adc    eax,0xc82d4a75
  423f72:	ins    BYTE PTR es:[edi],dx
  423f73:	iret   
  423f74:	mov    al,ds:0xb83f9eb
  423f79:	mov    ds:0xcbc4e600,eax
  423f7e:	mov    ?,WORD PTR [edx+0x69]
  423f81:	mov    ecx,0xac528d75
  423f86:	adc    al,0x62
  423f88:	inc    esp
  423f89:	xchg   ebx,eax
  423f8a:	dec    edi
  423f8b:	fs in  ax,0x3
  423f8f:	adc    bl,0x1c
  423f92:	push   ebx
  423f93:	mov    ebp,0x66bf1232
  423f99:	gs test edi,edi
  423f9c:	ror    bl,0x28
  423f9f:	jns    0x423f77
  423fa1:	inc    ebp
  423fa2:	mov    edi,0x75495e63
  423fa7:	and    esi,ebx
  423fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423faa:	jmp    0x1f01ffe8
  423faf:	lea    ax,[ecx]
  423fb2:	cmp    al,BYTE PTR [ebp+0x7b]
  423fb5:	in     eax,0xb4
  423fb7:	mov    ah,0x1f
  423fb9:	dec    ecx
  423fba:	jne    0x423fc4
  423fbc:	or     dh,BYTE PTR [edi+0x16]
  423fbf:	fwait
  423fc0:	sub    BYTE PTR [ecx-0xfa99e89],0x79
  423fc7:	add    dl,bl
  423fc9:	push   ebx
  423fca:	pop    ebx
  423fcb:	xor    BYTE PTR [esi+ebp*2+0x6c3bb7f0],bl
  423fd2:	stos   BYTE PTR es:[edi],al
  423fd3:	clc    
  423fd4:	div    DWORD PTR [eax-0x27]
  423fd7:	mov    dl,0xf6
  423fd9:	push   ebp
  423fda:	or     al,0xd9
  423fdc:	pop    ecx
  423fdd:	adc    DWORD PTR [ecx-0x17],edi
  423fe0:	ret    
  423fe1:	fnstenv [ebp+0x5b]
  423fe4:	scas   al,BYTE PTR es:[edi]
  423fe5:	pop    esi
  423fe6:	into   
  423fe7:	retf   
  423fe8:	lfs    eax,FWORD PTR [edi]
  423feb:	data16 icebp 
  423fed:	cs mov cl,0x73
  423ff0:	rol    ecx,cl
  423ff2:	mov    BYTE PTR [edi+0x70],cl
  423ff5:	test   BYTE PTR [edx+0x1062eca5],0xd1
  423ffc:	mov    eax,0xd811f230
  424001:	out    0xa4,al
  424003:	sub    ecx,DWORD PTR [ebx+ebx*2]
  424006:	(bad)  
  424007:	dec    edx
  424008:	popf   
  424009:	aas    
  42400a:	jne    0x423fc9
  42400c:	mov    esi,0x20b5cf10
  424011:	ins    DWORD PTR es:[edi],dx
  424012:	or     esi,DWORD PTR [edx+0x663175e4]
  424018:	cwde   
  424019:	dec    esi
  42401a:	and    DWORD PTR [edx],edi
  42401c:	hlt    
  42401d:	adc    esi,DWORD PTR [ebp-0x45]
  424020:	mov    ds:0x9d921cc5,eax
  424025:	pxor   mm4,QWORD PTR [esi-0x33]
  424029:	retf   0x5d80
  42402c:	rol    DWORD PTR [edx+0x693da972],cl
  424032:	adc    eax,0xe26b4197
  424037:	fimul  WORD PTR [esi-0x6ab02306]
  42403d:	(bad)  
  42403f:	in     eax,0x63
  424041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424043:	lods   eax,DWORD PTR ds:[esi]
  424044:	shl    DWORD PTR [edx+ebp*4-0x4b],0xb1
  424049:	push   es
  42404a:	jne    0x42405c
  42404c:	push   ss
  42404d:	neg    DWORD PTR [ebx]
  42404f:	push   esp
  424050:	arpl   WORD PTR ds:0xcd349d6b,bx
  424056:	call   0xe99a:0xa447be26
  42405d:	sub    DWORD PTR [ebp+0x7c],esi
  424060:	jae    0x4240b2
  424062:	push   ds
  424063:	or     BYTE PTR [eax+0xb6b47c2],ah
  424069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42406a:	fsubrp st(3),st
  42406c:	push   esi
  42406d:	fidivr WORD PTR [eax+0x757a1f86]
  424073:	xor    DWORD PTR [edx],edi
  424075:	inc    esi
  424076:	inc    esp
  424077:	retf   
  424078:	fld    TBYTE PTR [ecx]
  42407a:	outs   dx,BYTE PTR ds:[esi]
  42407b:	ins    DWORD PTR es:[edi],dx
  42407c:	stc    
  42407d:	in     al,0x76
  42407f:	add    BYTE PTR [eax+0x354d75c4],0x4d
  424086:	in     al,dx
  424087:	sahf   
  424088:	push   ds
  424089:	lods   eax,DWORD PTR ds:[esi]
  42408a:	mov    al,ds:0xd719df66
  42408f:	or     eax,0xea74570d
  424094:	rcr    DWORD PTR [edx-0x5b30e78a],cl
  42409a:	mov    esi,DWORD PTR [edx-0x3d46979a]
  4240a0:	cmp    BYTE PTR [edi],dh
  4240a2:	jne    0x424067
  4240a4:	imul   ebx,DWORD PTR [edx],0xffffffdd
  4240a7:	xchg   ebp,eax
  4240a8:	mov    bh,0xf8
  4240aa:	ja     0x4240d8
  4240ac:	daa    
  4240ad:	push   es
  4240ae:	or     al,0x29
  4240b0:	iret   
  4240b1:	rcr    BYTE PTR [edx-0x3c],0x46
  4240b5:	and    cl,BYTE PTR [esi-0x264e1d9a]
  4240bb:	mov    ebx,0x19b4b8d3
  4240c0:	cmp    bh,BYTE PTR [esi]
  4240c2:	fdiv   st,st(6)
  4240c4:	add    al,0x65
  4240c6:	test   DWORD PTR [eax],ecx
  4240c8:	shl    BYTE PTR [eax-0x2ae08d1],0xdc
  4240cf:	push   0x6c
  4240d1:	xchg   esp,eax
  4240d2:	jb     0x4240a8
  4240d4:	inc    edx
  4240d5:	push   ebp
  4240d6:	pusha  
  4240d7:	shl    WORD PTR [esi+0x4e],0x11
  4240dc:	addr16 mov bl,0xe2
  4240df:	and    al,0x80
  4240e1:	imul   ecx,DWORD PTR [esi],0x50
  4240e4:	xchg   edx,eax
  4240e5:	mov    ?,WORD PTR [ebp-0x80]
  4240e8:	gs aaa 
  4240ea:	test   eax,0x1d289a06
  4240ef:	cli    
  4240f0:	sbb    DWORD PTR [edx],ebx
  4240f2:	mov    edi,0x75878836
  4240f7:	sub    DWORD PTR [ecx+0x20],edx
  4240fa:	(bad)  
  4240fb:	pop    ebp
  4240fc:	(bad)  
  4240fd:	rcr    DWORD PTR [edi+eiz*2-0xb6dd156],cl
  424104:	fisub  WORD PTR [edx-0x36cbbd29]
  42410a:	jne    0x424132
  42410c:	add    eax,0x211dccfa
  424111:	gs aam 0x4c
  424114:	push   0xea2330b0
  424119:	xchg   edi,eax
  42411a:	cmp    DWORD PTR [edx+0x70759d5c],esp
  424120:	aam    0x2e
  424122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424123:	mov    BYTE PTR [ecx],ch
  424125:	dec    ebp
  424126:	xchg   edx,eax
  424127:	push   si
  424129:	cld    
  42412a:	lock mov ds:0x197085d3,eax
  424130:	loop   0x424103
  424132:	inc    ebx
  424133:	add    BYTE PTR [ebp-0x75],dl
  424136:	in     al,dx
  424137:	sub    esp,0x40
  42413a:	call   0x4269f3
  42413f:	push   ebx
  424140:	cmp    eax,0xffffff93
  424143:	jne    0x424152
  424145:	push   0x5c8e7100
  42414a:	call   0x4269f3
  42414f:	add    esp,0x4
  424152:	push   0x4b
  424154:	push   0xffffffcd
  424156:	push   0xffffffc5
  424158:	push   0x60
  42415a:	call   0x426e8d
  42415f:	add    esp,0x10
  424162:	push   esi
  424163:	test   eax,0xd929
  424168:	je     0x424177
  42416a:	push   0x44b07600
  42416f:	call   0x426b7c
  424174:	add    esp,0x4
  424177:	push   0x21
  424179:	push   0xffffff9f
  42417b:	call   0x426e8d
  424180:	add    esp,0x8
  424183:	push   edi
  424184:	mov    ecx,0x51
  424189:	add    ecx,ecx
  42418b:	push   0x5cfb9900
  424190:	call   0x426cf9
  424195:	add    esp,0x4
  424198:	push   0x9cfae900
  42419d:	call   0x426cf9
  4241a2:	add    esp,0x4
  4241a5:	push   0xffffffaa
  4241a7:	push   0xb0a22700
  4241ac:	push   0xffffff97
  4241ae:	push   0xc4ab6200
  4241b3:	call   0x426e8d
  4241b8:	add    esp,0x10
  4241bb:	mov    DWORD PTR [ebp-0x2c],eax
  4241be:	push   0x90d9c400
  4241c3:	push   0xffffffe4
  4241c5:	push   0xbca65a00
  4241ca:	call   0x426cf9
  4241cf:	add    esp,0xc
  4241d2:	push   0xffffff90
  4241d4:	push   0xffffff88
  4241d6:	push   0x8b0f500
  4241db:	push   0xffffff81
  4241dd:	call   0x426cf9
  4241e2:	add    esp,0x10
  4241e5:	push   0x58521300
  4241ea:	push   0x2f
  4241ec:	push   0x58421300
  4241f1:	call   0x427088
  4241f6:	add    esp,0xc
  4241f9:	mov    edi,0xd2
  4241fe:	mov    ecx,0xc
  424203:	call   0x426cf9
  424208:	push   0x78140d00
  42420d:	push   0x1e
  42420f:	push   0x8a2c2300
  424214:	push   0xffffffbd
  424216:	push   0x64
  424218:	call   0x426cf9
  42421d:	add    esp,0x14
  424220:	push   0x2a
  424222:	push   0x14bee600
  424227:	push   0x2a37de00
  42422c:	push   0xf0fc5600
  424231:	call   0x426b7c
  424236:	add    esp,0x10
  424239:	push   0xffffff88
  42423b:	push   0xffffffb8
  42423d:	push   0xb8ea0500
  424242:	call   0x426cf9
  424247:	add    esp,0xc
  42424a:	call   0x427088
  42424f:	push   0xffffffe7
  424251:	push   0xc005a300
  424256:	push   0x48f75100
  42425b:	call   0x426cf9
  424260:	add    esp,0xc
  424263:	push   0xffffff88
  424265:	push   0x74f85900
  42426a:	push   0xffffffc1
  42426c:	call   0x427088
  424271:	add    esp,0xc
  424274:	push   0xffffffb2
  424276:	call   0x426b7c
  42427b:	add    esp,0x4
  42427e:	push   0x580de500
  424283:	push   0xfa7ca000
  424288:	push   0x2cdc4800
  42428d:	push   0x585e9100
  424292:	call   0x426e8d
  424297:	add    esp,0x10
  42429a:	push   0xffffffac
  42429c:	call   0x4269f3
  4242a1:	add    esp,0x4
  4242a4:	push   0xffffffa2
  4242a6:	push   0xffffffca
  4242a8:	push   0xaa50d100
  4242ad:	call   0x426e8d
  4242b2:	add    esp,0xc
  4242b5:	push   0x58cc5300
  4242ba:	push   0x14e7ae00
  4242bf:	push   0xc0668f00
  4242c4:	push   0xb49f2c00
  4242c9:	call   0x426e8d
  4242ce:	add    esp,0x10
  4242d1:	add    DWORD PTR [ebp-0x2c],edi
  4242d4:	push   0xe0bdff00
  4242d9:	push   0xaa5de400
  4242de:	call   0x426cf9
  4242e3:	add    esp,0x8
  4242e6:	or     DWORD PTR [ebp-0x2c],eax
  4242e9:	call   0x4269f3
  4242ee:	sub    DWORD PTR [ebp-0x2c],edi
  4242f1:	push   0x84e04c00
  4242f6:	push   0x76
  4242f8:	push   0xffffffd2
  4242fa:	push   0x66
  4242fc:	call   0x4269f3
  424301:	add    esp,0x10
  424304:	mov    esi,0x9f
  424309:	xor    DWORD PTR [ebp-0x2c],esi
  42430c:	push   0x8a31f300
  424311:	push   0x53
  424313:	call   0x426e8d
  424318:	add    esp,0x8
  42431b:	or     DWORD PTR [ebp-0x2c],esi
  42431e:	push   0xda0f6900
  424323:	push   0x14d67f00
  424328:	call   0x426b7c
  42432d:	add    esp,0x8
  424330:	or     eax,edi
  424332:	push   0xffffffe4
  424334:	push   0xb8995000
  424339:	push   0x74
  42433b:	call   0x426cf9
  424340:	add    esp,0xc
  424343:	push   0x8052d700
  424348:	call   0x4269f3
  42434d:	add    esp,0x4
  424350:	call   0x426e8d
  424355:	sub    edi,eax
  424357:	push   0x76
  424359:	call   0x426b7c
  42435e:	add    esp,0x4
  424361:	mov    edx,DWORD PTR [ebp-0x2c]
  424364:	push   0x38fc7000
  424369:	push   0xc0216e00
  42436e:	push   0x7c94bf00
  424373:	push   0x1b
  424375:	push   0x785e8000
  42437a:	call   0x427088
  42437f:	add    esp,0x14
  424382:	push   0xa285900
  424387:	push   0x7821cb00
  42438c:	call   0x4269f3
  424391:	add    esp,0x8
  424394:	mov    esi,DWORD PTR ds:0x439074
  42439a:	push   0x78
  42439c:	push   0x22
  42439e:	push   0xb4bbca00
  4243a3:	call   0x426b7c
  4243a8:	add    esp,0xc
  4243ab:	push   0x4
  4243ad:	push   0xffffffa6
  4243af:	push   0x3cb48d00
  4243b4:	call   0x426b7c
  4243b9:	add    esp,0xc
  4243bc:	push   0xf868fa00
  4243c1:	push   0x58114900
  4243c6:	push   0x54f35c00
  4243cb:	call   0x426b7c
  4243d0:	add    esp,0xc
  4243d3:	push   0x4a070900
  4243d8:	push   0x7e
  4243da:	push   0x5c
  4243dc:	call   0x426cf9
  4243e1:	add    esp,0xc
  4243e4:	push   0x787c0700
  4243e9:	push   0x25
  4243eb:	call   0x426e8d
  4243f0:	add    esp,0x8
  4243f3:	push   0x60a8b400
  4243f8:	push   0xffffffe1
  4243fa:	push   0xfceee400
  4243ff:	push   0xfffffff9
  424401:	push   0xffffffbb
  424403:	call   0x426e8d
  424408:	add    esp,0x14
  42440b:	push   0xffffffa2
  42440d:	push   0x7e
  42440f:	call   0x426e8d
  424414:	add    esp,0x8
  424417:	push   0x7b
  424419:	push   0x8ca5c800
  42441e:	push   0xfffffff4
  424420:	push   0xffffffe1
  424422:	call   0x426b7c
  424427:	add    esp,0x10
  42442a:	call   0x426cf9
  42442f:	push   0x4a5c8d00
  424434:	push   0x808ea800
  424439:	push   0x40b9ec00
  42443e:	call   0x4269f3
  424443:	add    esp,0xc
  424446:	push   0xffffffc1
  424448:	call   0x427088
  42444d:	add    esp,0x4
  424450:	cmp    edi,DWORD PTR [ebp-0x28]
  424453:	jne    0x4244de
  424459:	push   0x6a3c2d00
  42445e:	push   0x74f61400
  424463:	push   0xfffffff0
  424465:	push   0xb4ee2600
  42446a:	push   0x7a
  42446c:	call   0x427088
  424471:	add    esp,0x14
  424474:	push   0x44a0d900
  424479:	push   0xffffffed
  42447b:	push   0x3a1bb000
  424480:	call   0x427088
  424485:	add    esp,0xc
  424488:	add    edi,esi
  42448a:	push   0xd4ac9900
  42448f:	call   0x4269f3
  424494:	add    esp,0x4
  424497:	push   0x3b
  424499:	push   0x9a716300
  42449e:	push   0x5a129400
  4244a3:	push   0xffffff83
  4244a5:	push   0x64b0cf00
  4244aa:	call   0x426b7c
  4244af:	add    esp,0x14
  4244b2:	cmp    edi,DWORD PTR ds:0x439074
  4244b8:	je     0x4244de
  4244ba:	push   0xffffffe9
  4244bc:	push   0x16
  4244be:	push   0xffffffda
  4244c0:	call   0x426cf9
  4244c5:	add    esp,0xc
  4244c8:	xor    edx,edx
  4244ca:	push   0xffffffc4
  4244cc:	push   0x9cd88600
  4244d1:	push   0xffffffc5
  4244d3:	call   0x427088
  4244d8:	add    esp,0xc
  4244db:	sub    DWORD PTR [ebp-0x2c],edi
  4244de:	push   0xc0177400
  4244e3:	push   0x54d05f00
  4244e8:	call   0x426e8d
  4244ed:	add    esp,0x8
  4244f0:	test   eax,0xc6
  4244f5:	je     0x424515
  4244f7:	push   0xba392600
  4244fc:	push   0xda022400
  424501:	push   0x84cc3300
  424506:	push   0x5a0ba000
  42450b:	push   0xffffff96
  42450d:	call   0x426e8d
  424512:	add    esp,0x14
  424515:	mov    eax,DWORD PTR [ebp-0x2c]
  424518:	push   0x4c
  42451a:	call   0x426b7c
  42451f:	add    esp,0x4
  424522:	push   0x28
  424524:	push   0x80668d00
  424529:	call   0x426cf9
  42452e:	add    esp,0x8
  424531:	test   edi,0x12
  424537:	je     0x42454a
  424539:	push   0xffffffe6
  42453b:	push   0x848cd600
  424540:	push   0xfffffffc
  424542:	call   0x427088
  424547:	add    esp,0xc
  42454a:	call   0x426b7c
  42454f:	push   0x1a6aeb00
  424554:	push   0xfcfaef00
  424559:	call   0x426e8d
  42455e:	add    esp,0x8
  424561:	push   0x30
  424563:	push   0x3092c000
  424568:	push   0xffffffb1
  42456a:	call   0x4269f3
  42456f:	add    esp,0xc
  424572:	add    edi,esi
  424574:	mov    ecx,edi
  424576:	push   0xffffffbe
  424578:	push   0x9a36ff00
  42457d:	call   0x426b7c
  424582:	add    esp,0x8
  424585:	sub    edi,esi
  424587:	sub    edi,eax
  424589:	mov    eax,esi
  42458b:	mov    edx,0x88
  424590:	push   0x5
  424592:	push   0x72
  424594:	push   0xf4ecde00
  424599:	push   0xa08e7c00
  42459e:	call   0x426b7c
  4245a3:	add    esp,0x10
  4245a6:	call   0x427088
  4245ab:	push   0x9ce6cb00
  4245b0:	push   0x8064d000
  4245b5:	push   0x42
  4245b7:	push   0x5a05c100
  4245bc:	call   0x426b7c
  4245c1:	add    esp,0x10
  4245c4:	push   0x20e38400
  4245c9:	push   0x29
  4245cb:	push   0x4a
  4245cd:	push   0x60
  4245cf:	call   0x426cf9
  4245d4:	add    esp,0x10
  4245d7:	cmp    edi,0x76
  4245da:	jne    0x424720
  4245e0:	push   0xffffff89
  4245e2:	push   0xc8896c00
  4245e7:	push   0x65
  4245e9:	call   0x426b7c
  4245ee:	add    esp,0xc
  4245f1:	push   0xb8e87000
  4245f6:	push   0x802eeb00
  4245fb:	call   0x426b7c
  424600:	add    esp,0x8
  424603:	push   0x6b
  424605:	push   0xd0b6d800
  42460a:	push   0x586dc900
  42460f:	push   0xcdeaa00
  424614:	call   0x4269f3
  424619:	add    esp,0x10
  42461c:	push   0xc486b600
  424621:	push   0x7a7e6600
  424626:	push   0x3d
  424628:	call   0x4269f3
  42462d:	add    esp,0xc
  424630:	add    edi,esi
  424632:	mov    ecx,DWORD PTR [ebp-0x2c]
  424635:	push   0x49
  424637:	push   0x787ec300
  42463c:	push   0xffffff88
  42463e:	push   0xc0e25e00
  424643:	call   0x427088
  424648:	add    esp,0x10
  42464b:	push   0x58
  42464d:	push   0xce01000
  424652:	push   0xaa3f4600
  424657:	push   0x6b4300
  42465c:	push   0xffffffb7
  42465e:	call   0x426cf9
  424663:	add    esp,0x14
  424666:	mov    ecx,DWORD PTR [ebp-0x2c]
  424669:	push   0xfa725600
  42466e:	push   0xffffffa2
  424670:	push   0x2e
  424672:	push   0xffffffc8
  424674:	call   0x426e8d
  424679:	add    esp,0x10
  42467c:	push   0x5a318300
  424681:	push   0xffffffe5
  424683:	call   0x427088
  424688:	add    esp,0x8
  42468b:	cmp    edi,0xffffffc8
  42468e:	jne    0x424720
  424694:	push   0x14937600
  424699:	push   0xffffffb2
  42469b:	push   0xffffffb1
  42469d:	push   0x5a001400
  4246a2:	push   0x57
  4246a4:	call   0x4269f3
  4246a9:	add    esp,0x14
  4246ac:	add    edi,eax
  4246ae:	mov    eax,DWORD PTR [ebp-0x2c]
  4246b1:	push   0xffffffa0
  4246b3:	push   0x6f8c00
  4246b8:	call   0x4269f3
  4246bd:	add    esp,0x8
  4246c0:	xor    esi,esi
  4246c2:	sub    edi,eax
  4246c4:	push   0xffffffc8
  4246c6:	push   0x80491800
  4246cb:	push   0x58304b00
  4246d0:	push   0xb0811200
  4246d5:	push   0xba6eaa00
  4246da:	call   0x426e8d
  4246df:	add    esp,0x14
  4246e2:	call   0x426e8d
  4246e7:	call   0x426b7c
  4246ec:	cmp    edi,0xc2ed
  4246f2:	jne    0x424720
  4246f4:	sub    esi,eax
  4246f6:	add    DWORD PTR [ebp-0x2c],esi
  4246f9:	cmp    edi,eax
  4246fb:	jne    0x424720
  4246fd:	sub    edi,eax
  4246ff:	push   0xd4f0d300
  424704:	push   0xea655e00
  424709:	push   0xac884500
  42470e:	push   0x6a
  424710:	push   0x3ca43100
  424715:	call   0x427088
  42471a:	add    esp,0x14
  42471d:	add    DWORD PTR [ebp-0x2c],edi
  424720:	sub    esi,eax
  424722:	mov    eax,DWORD PTR [ebp-0x2c]
  424725:	sub    eax,edi
  424727:	mov    ebx,DWORD PTR [ebp-0x2c]
  42472a:	push   0xfffffff8
  42472c:	push   0x88882a00
  424731:	push   0xaa54f500
  424736:	push   0x3d
  424738:	call   0x4269f3
  42473d:	add    esp,0x10
  424740:	push   0x702400
  424745:	push   0x54e37e00
  42474a:	push   0x74bf6f00
  42474f:	call   0x427088
  424754:	add    esp,0xc
  424757:	push   0x5
  424759:	push   0xc0494300
  42475e:	push   0x48b7e200
  424763:	push   0xa672700
  424768:	push   0xf8dc0b00
  42476d:	call   0x426b7c
  424772:	add    esp,0x14
  424775:	push   0x583cd800
  42477a:	push   0xfffffffe
  42477c:	push   0x801b0800
  424781:	push   0xa
  424783:	call   0x426b7c
  424788:	add    esp,0x10
  42478b:	sub    DWORD PTR [ebp-0x2c],esi
  42478e:	sub    ebx,esi
  424790:	push   0xa48c900
  424795:	push   0xea6c7c00
  42479a:	push   0xffffffed
  42479c:	push   0xb4b74a00
  4247a1:	push   0xffffff89
  4247a3:	call   0x426e8d
  4247a8:	add    esp,0x14
  4247ab:	push   0xffffff84
  4247ad:	push   0xfffffff4
  4247af:	push   0xea509a00
  4247b4:	call   0x426e8d
  4247b9:	add    esp,0xc
  4247bc:	push   0x54c96900
  4247c1:	call   0x427088
  4247c6:	add    esp,0x4
  4247c9:	call   0x426e8d
  4247ce:	add    ebx,edi
  4247d0:	xor    DWORD PTR [ebp-0x2c],ebx
  4247d3:	push   0x3b
  4247d5:	push   0x7a4d1400
  4247da:	call   0x426b7c
  4247df:	add    esp,0x8
  4247e2:	mov    eax,DWORD PTR [ebp-0x2c]
  4247e5:	sub    eax,ebx
  4247e7:	push   0x47fd00
  4247ec:	push   0x14
  4247ee:	call   0x4269f3
  4247f3:	add    esp,0x8
  4247f6:	push   0x439074
  4247fb:	call   DWORD PTR ds:0x436c88
  424801:	cmp    eax,0xffffffb3
  424804:	jne    0x424809
  424806:	add    DWORD PTR [ebp-0x2c],ebx
  424809:	mov    DWORD PTR [ebp-0x10],eax
  42480c:	push   0xa527a00
  424811:	push   0x4025f900
  424816:	push   0xffffffba
  424818:	call   0x426e8d
  42481d:	add    esp,0xc
  424820:	push   0xffffffea
  424822:	push   0xaee00
  424827:	push   0xffffffbc
  424829:	call   0x426e8d
  42482e:	add    esp,0xc
  424831:	call   DWORD PTR ds:0x436c90
  424837:	test   edi,0x5e69
  42483d:	jne    0x42487d
  42483f:	cmp    ebx,0x32d0
  424845:	je     0x42487d
  424847:	mov    ebx,eax
  424849:	mov    esi,DWORD PTR [ebp-0x2c]
  42484c:	cmp    ebx,esi
  42484e:	je     0x42487d
  424850:	cmp    esi,eax
  424852:	je     0x42487d
  424854:	mov    edx,DWORD PTR [ebp-0x2c]
  424857:	mov    edi,DWORD PTR [ebp-0x2c]
  42485a:	and    edx,ebx
  42485c:	sub    DWORD PTR [ebp-0x2c],edx
  42485f:	mov    DWORD PTR [ebp-0x2c],edx
  424862:	test   edx,0x4e
  424868:	je     0x42487d
  42486a:	add    DWORD PTR [ebp-0x2c],esi
  42486d:	cmp    edi,DWORD PTR ds:0x439074
  424873:	je     0x42487d
  424875:	cmp    edi,0x2b
  424878:	jne    0x42487d
  42487a:	add    DWORD PTR [ebp-0x2c],edi
  42487d:	mov    DWORD PTR [ebp-0x4],eax
  424880:	mov    edx,DWORD PTR ds:0x439074
  424886:	push   0x9a5b5b00
  42488b:	push   0x7b
  42488d:	call   0x426e8d
  424892:	add    esp,0x8
  424895:	push   0x7e
  424897:	push   0xffffffb7
  424899:	call   0x427088
  42489e:	add    esp,0x8
  4248a1:	push   0x29
  4248a3:	push   0x0
  4248a5:	call   DWORD PTR ds:0x436c78
  4248ab:	xor    edx,edx
  4248ad:	sub    DWORD PTR [ebp-0x2c],esi
  4248b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4248b3:	sub    edx,edi
  4248b5:	cmp    ebx,DWORD PTR ds:0x439074
  4248bb:	je     0x424921
  4248bd:	sub    DWORD PTR [ebp-0x2c],edx
  4248c0:	mov    esi,DWORD PTR [ebp-0x2c]
  4248c3:	mov    ebx,DWORD PTR [ebp-0x2c]
  4248c6:	test   esi,0xeb
  4248cc:	jne    0x424921
  4248ce:	mov    edi,0x9b
  4248d3:	mov    edx,DWORD PTR ds:0x439074
  4248d9:	test   esi,0x7191
  4248df:	jne    0x424921
  4248e1:	mov    edi,DWORD PTR ds:0x439074
  4248e7:	mov    edx,0xbf
  4248ec:	add    ebx,ecx
  4248ee:	and    DWORD PTR [ebp-0x2c],esi
  4248f1:	cmp    ebx,edi
  4248f3:	je     0x424921
  4248f5:	sub    DWORD PTR [ebp-0x2c],ecx
  4248f8:	add    edx,eax
  4248fa:	mov    edi,DWORD PTR [ebp-0x2c]
  4248fd:	mov    ecx,DWORD PTR [ebp-0x2c]
  424900:	cmp    edi,0xffffffef
  424903:	jne    0x424921
  424905:	xor    DWORD PTR [ebp-0x2c],ecx
  424908:	mov    esi,0xce54
  42490d:	sub    edx,edi
  42490f:	sub    DWORD PTR [ebp-0x2c],edx
  424912:	mov    edi,esi
  424914:	and    ebx,edi
  424916:	test   ebx,0x2c
  42491c:	je     0x424921
  42491e:	and    DWORD PTR [ebp-0x2c],ebx
  424921:	cmp    eax,DWORD PTR ds:0x439074
  424927:	jne    0x424c12
  42492d:	mov    esi,DWORD PTR [ebp-0x2c]
  424930:	push   0x801ebe00
  424935:	push   0xfffffff6
  424937:	push   0x90bbac00
  42493c:	push   0x3a
  42493e:	push   0x1a169800
  424943:	call   0x427088
  424948:	add    esp,0x14
  42494b:	push   0x72
  42494d:	push   0x70
  42494f:	push   0xf0c9d300
  424954:	push   0xffffff8a
  424956:	push   0xc089ac00
  42495b:	call   0x426b7c
  424960:	add    esp,0x14
  424963:	push   0x249e4800
  424968:	push   0x6c9e8000
  42496d:	call   0x4269f3
  424972:	add    esp,0x8
  424975:	cmp    esi,ebx
  424977:	jne    0x42499a
  424979:	push   0xc4a95900
  42497e:	call   0x427088
  424983:	add    esp,0x4
  424986:	push   0xffffffe6
  424988:	push   0xffffffe2
  42498a:	push   0x80256600
  42498f:	call   0x4269f3
  424994:	add    esp,0xc
  424997:	sub    DWORD PTR [ebp-0x2c],esi
  42499a:	call   0x427088
  42499f:	mov    eax,0x8e
  4249a4:	sub    esi,ebx
  4249a6:	mov    edi,DWORD PTR [ebp-0x2c]
  4249a9:	xor    DWORD PTR [ebp-0x2c],eax
  4249ac:	cmp    edi,0xfffffff2
  4249af:	je     0x424ab2
  4249b5:	mov    ecx,0x9e
  4249ba:	mov    ebx,DWORD PTR ds:0x439074
  4249c0:	sub    DWORD PTR [ebp-0x2c],edi
  4249c3:	cmp    esi,0xab1d
  4249c9:	jne    0x424ab2
  4249cf:	sub    ecx,esi
  4249d1:	or     ecx,eax
  4249d3:	add    DWORD PTR [ebp-0x2c],ecx
  4249d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4249d9:	add    DWORD PTR [ebp-0x2c],ebx
  4249dc:	mov    esi,DWORD PTR [ebp-0x2c]
  4249df:	cmp    esi,0xd143
  4249e5:	je     0x424ab2
  4249eb:	mov    edx,DWORD PTR ds:0x439074
  4249f1:	mov    ebx,DWORD PTR [ebp-0x2c]
  4249f4:	or     edx,edi
  4249f6:	sub    ebx,eax
  4249f8:	cmp    ebx,0x61
  4249fb:	jne    0x424ab2
  424a01:	mov    edi,DWORD PTR [ebp-0x2c]
  424a04:	cmp    ecx,DWORD PTR [ebp-0x28]
  424a07:	jne    0x424ab2
  424a0d:	cmp    ebx,DWORD PTR [ebp-0x18]
  424a10:	je     0x424ab2
  424a16:	sub    ebx,edi
  424a18:	cmp    ebx,edi
  424a1a:	jne    0x424ab2
  424a20:	mov    edi,0xd9
  424a25:	or     DWORD PTR [ebp-0x2c],esi
  424a28:	mov    esi,DWORD PTR [ebp-0x2c]
  424a2b:	and    ecx,eax
  424a2d:	sub    DWORD PTR [ebp-0x2c],ecx
  424a30:	sub    DWORD PTR [ebp-0x2c],edi
  424a33:	test   edx,0x7c
  424a39:	jne    0x424ab2
  424a3b:	and    DWORD PTR [ebp-0x2c],edx
  424a3e:	cmp    ecx,ebx
  424a40:	jne    0x424ab2
  424a42:	sub    ebx,ecx
  424a44:	xor    edi,edi
  424a46:	add    edi,edi
  424a48:	mov    edx,DWORD PTR [ebp-0x2c]
  424a4b:	test   esi,0x5d
  424a51:	jne    0x424ab2
  424a53:	sub    DWORD PTR [ebp-0x2c],esi
  424a56:	mov    esi,DWORD PTR [ebp-0x2c]
  424a59:	sub    DWORD PTR [ebp-0x2c],edi
  424a5c:	mov    edi,0xb
  424a61:	add    edi,esi
  424a63:	sub    DWORD PTR [ebp-0x2c],edi
  424a66:	or     ebx,edi
  424a68:	add    DWORD PTR [ebp-0x2c],edx
  424a6b:	test   esi,0x1e61
  424a71:	jne    0x424ab2
  424a73:	mov    ecx,esi
  424a75:	mov    esi,0x4f6c
  424a7a:	or     DWORD PTR [ebp-0x2c],ebx
  424a7d:	cmp    ecx,edi
  424a7f:	je     0x424ab2
  424a81:	sub    ecx,eax
  424a83:	sub    ecx,edi
  424a85:	add    DWORD PTR [ebp-0x2c],esi
  424a88:	mov    edx,DWORD PTR ds:0x439074
  424a8e:	mov    edi,edx
  424a90:	and    DWORD PTR [ebp-0x2c],ecx
  424a93:	add    DWORD PTR [ebp-0x2c],ebx
  424a96:	and    edi,ecx
  424a98:	sub    DWORD PTR [ebp-0x2c],edx
  424a9b:	test   edi,0x29
  424aa1:	je     0x424ab2
  424aa3:	test   edi,0xe4
  424aa9:	jne    0x424ab2
  424aab:	cmp    edi,edx
  424aad:	jne    0x424ab2
  424aaf:	add    DWORD PTR [ebp-0x2c],edi
  424ab2:	sub    edx,eax
  424ab4:	mov    edi,DWORD PTR [ebp-0x2c]
  424ab7:	or     edi,esi
  424ab9:	mov    ecx,0x3dc5
  424abe:	sub    edi,eax
  424ac0:	sub    DWORD PTR [ebp-0x2c],edi
  424ac3:	add    DWORD PTR [ebp-0x2c],edx
  424ac6:	sub    DWORD PTR [ebp-0x2c],ecx
  424ac9:	mov    edi,eax
  424acb:	xor    ebx,ebx
  424acd:	sub    DWORD PTR [ebp-0x2c],edi
  424ad0:	mov    edx,DWORD PTR [ebp-0x2c]
  424ad3:	or     DWORD PTR [ebp-0x2c],edx
  424ad6:	sub    DWORD PTR [ebp-0x2c],eax
  424ad9:	add    DWORD PTR [ebp-0x2c],ebx
  424adc:	sub    edx,esi
  424ade:	add    DWORD PTR [ebp-0x2c],ecx
  424ae1:	mov    esi,0x3e
  424ae6:	add    esi,edi
  424ae8:	mov    ecx,DWORD PTR [ebp-0x2c]
  424aeb:	sub    esi,ecx
  424aed:	cmp    edx,DWORD PTR ds:0x439074
  424af3:	je     0x424b5c
  424af5:	mov    DWORD PTR [ebp-0x2c],esi
  424af8:	cmp    edx,DWORD PTR [ebp-0x8]
  424afb:	je     0x424b5c
  424afd:	mov    ecx,DWORD PTR ds:0x439088
  424b03:	sub    DWORD PTR [ebp-0x2c],ecx
  424b06:	add    DWORD PTR [ebp-0x2c],eax
  424b09:	xor    ebx,ebx
  424b0b:	add    ebx,ecx
  424b0d:	test   edx,0xab
  424b13:	jne    0x424b5c
  424b15:	sub    edx,eax
  424b17:	mov    ecx,0x43
  424b1c:	mov    esi,DWORD PTR [ebp-0x2c]
  424b1f:	add    edx,edx
  424b21:	sub    ecx,eax
  424b23:	xor    DWORD PTR [ebp-0x2c],edx
  424b26:	sub    ebx,eax
  424b28:	add    DWORD PTR [ebp-0x2c],ecx
  424b2b:	add    ebx,eax
  424b2d:	add    esi,edx
  424b2f:	and    ebx,edi
  424b31:	and    DWORD PTR [ebp-0x2c],ecx
  424b34:	add    esi,edi
  424b36:	add    esi,edx
  424b38:	cmp    esi,DWORD PTR [ebp-0x38]
  424b3b:	je     0x424b5c
  424b3d:	mov    edx,0x590
  424b42:	cmp    esi,DWORD PTR [ebp-0x38]
  424b45:	je     0x424b5c
  424b47:	mov    ecx,DWORD PTR [ebp-0x2c]
  424b4a:	cmp    ecx,0xffffffe1
  424b4d:	je     0x424b5c
  424b4f:	mov    edx,DWORD PTR [ebp-0x2c]
  424b52:	and    esi,ecx
  424b54:	xor    DWORD PTR [ebp-0x2c],ebx
  424b57:	add    esi,edx
  424b59:	xor    DWORD PTR [ebp-0x2c],esi
  424b5c:	or     edi,eax
  424b5e:	cmp    ecx,0x53
  424b61:	je     0x424b66
  424b63:	add    DWORD PTR [ebp-0x2c],ecx
  424b66:	mov    edx,DWORD PTR [ebp-0x2c]
  424b69:	sub    edx,ecx
  424b6b:	xor    esi,esi
  424b6d:	add    esi,ecx
  424b6f:	cmp    esi,DWORD PTR ds:0x439074
  424b75:	jne    0x424bba
  424b77:	mov    ecx,DWORD PTR ds:0x439088
  424b7d:	mov    ebx,0x64
  424b82:	test   edx,0xeb
  424b88:	je     0x424bba
  424b8a:	mov    ebx,DWORD PTR [ebp-0x2c]
  424b8d:	sub    DWORD PTR [ebp-0x2c],esi
  424b90:	add    DWORD PTR [ebp-0x2c],edi
  424b93:	mov    esi,DWORD PTR ds:0x439060
  424b99:	or     DWORD PTR [ebp-0x2c],ebx
  424b9c:	and    DWORD PTR [ebp-0x2c],ecx
  424b9f:	add    edx,esi
  424ba1:	sub    edx,ebx
  424ba3:	add    edx,eax
  424ba5:	add    DWORD PTR [ebp-0x2c],edi
  424ba8:	and    edx,eax
  424baa:	sub    edx,edi
  424bac:	add    DWORD PTR [ebp-0x2c],edi
  424baf:	cmp    edx,DWORD PTR [ebp-0x4]
  424bb2:	jne    0x424bba
  424bb4:	add    DWORD PTR [ebp-0x2c],esi
  424bb7:	sub    DWORD PTR [ebp-0x2c],edx
  424bba:	sub    edi,eax
  424bbc:	push   0x60f54800
  424bc1:	push   0xfffffff0
  424bc3:	push   0xfffffff8
  424bc5:	push   0x3b
  424bc7:	push   0x71
  424bc9:	call   0x426b7c
  424bce:	add    esp,0x14
  424bd1:	push   0xba768400
  424bd6:	push   0x1a332400
  424bdb:	push   0x8
  424bdd:	push   0xffffffce
  424bdf:	call   0x426b7c
  424be4:	add    esp,0x10
  424be7:	push   0xba2f8200
  424bec:	push   0xfffffffd
  424bee:	push   0x74
  424bf0:	push   0x38
  424bf2:	push   0x24e0cf00
  424bf7:	call   0x427088
  424bfc:	add    esp,0x14
  424bff:	push   0xf80eaf00
  424c04:	call   0x426cf9
  424c09:	add    esp,0x4
  424c0c:	mov    DWORD PTR [ebp-0x8],edi
  424c0f:	or     DWORD PTR [ebp-0x2c],eax
  424c12:	push   0x72
  424c14:	call   0x426b7c
  424c19:	add    esp,0x4
  424c1c:	push   0xc071bf00
  424c21:	push   0xe8a100
  424c26:	push   0x5a
  424c28:	push   0xffffffee
  424c2a:	call   0x427088
  424c2f:	add    esp,0x10
  424c32:	push   0x6a4dc100
  424c37:	push   0xea1fca00
  424c3c:	push   0x5e
  424c3e:	push   0x1a6d5b00
  424c43:	push   0xe
  424c45:	call   0x427088
  424c4a:	add    esp,0x14
  424c4d:	call   DWORD PTR ds:0x436ca4
  424c53:	and    esi,edi
  424c55:	mov    ecx,DWORD PTR [ebp-0x2c]
  424c58:	mov    edi,0xee
  424c5d:	or     DWORD PTR [ebp-0x2c],edi
  424c60:	sub    DWORD PTR [ebp-0x2c],esi
  424c63:	add    DWORD PTR [ebp-0x2c],ecx
  424c66:	test   eax,0x68
  424c6b:	je     0x424e19
  424c71:	mov    esi,ecx
  424c73:	cmp    esi,0x598
  424c79:	jne    0x424cac
  424c7b:	test   esi,0xea
  424c81:	je     0x424cac
  424c83:	push   0x58ec5f00
  424c88:	push   0x4cf58300
  424c8d:	push   0xd0e34c00
  424c92:	call   0x4269f3
  424c97:	add    esp,0xc
  424c9a:	add    esi,eax
  424c9c:	mov    edx,DWORD PTR [ebp-0x2c]
  424c9f:	mov    ecx,0x18101140
  424ca4:	call   0x426e8d
  424ca9:	or     DWORD PTR [ebp-0x2c],esi
  424cac:	mov    esi,DWORD PTR ds:0x439074
  424cb2:	push   0xfffffffc
  424cb4:	push   0xffffff9a
  424cb6:	push   0xfa1be400
  424cbb:	call   0x426cf9
  424cc0:	add    esp,0xc
  424cc3:	mov    ecx,DWORD PTR ds:0x439064
  424cc9:	test   eax,0x2c
  424cce:	jne    0x424daf
  424cd4:	mov    edi,0x0
  424cd9:	add    edi,edi
  424cdb:	add    edi,eax
  424cdd:	cmp    edi,ecx
  424cdf:	je     0x424daf
  424ce5:	or     DWORD PTR [ebp-0x2c],esi
  424ce8:	push   0xba3d4800
  424ced:	push   0x3cab8100
  424cf2:	call   0x426cf9
  424cf7:	add    esp,0x8
  424cfa:	sub    edi,eax
  424cfc:	cmp    edi,DWORD PTR ds:0x439074
  424d02:	jne    0x424daf
  424d08:	push   0x3a
  424d0a:	push   0x88f32000
  424d0f:	call   0x4269f3
  424d14:	add    esp,0x8
  424d17:	push   0xe8ebe400
  424d1c:	push   0xf4d09100
  424d21:	call   0x426e8d
  424d26:	add    esp,0x8
  424d29:	push   0xffffffe8
  424d2b:	call   0x4269f3
  424d30:	add    esp,0x4
  424d33:	mov    ecx,0xe6
  424d38:	add    DWORD PTR [ebp-0x2c],ecx
  424d3b:	push   0x582f3600
  424d40:	push   0x10e400
  424d45:	push   0xffffffff
  424d47:	call   0x426e8d
  424d4c:	add    esp,0xc
  424d4f:	push   0xffffffd7
  424d51:	push   0x4e
  424d53:	push   0xa8d64100
  424d58:	push   0xd0f62700
  424d5d:	call   0x426cf9
  424d62:	add    esp,0x10
  424d65:	cmp    edi,DWORD PTR [ebp-0x40]
  424d68:	jne    0x424daf
  424d6a:	push   0xffffff8d
  424d6c:	push   0xffffffe6
  424d6e:	push   0x51
  424d70:	push   0xc005fd00
  424d75:	push   0x16
  424d77:	call   0x4269f3
  424d7c:	add    esp,0x14
  424d7f:	mov    ecx,DWORD PTR ds:0x439064
  424d85:	push   0x8
  424d87:	push   0xfffffff2
  424d89:	call   0x4269f3
  424d8e:	add    esp,0x8
  424d91:	mov    edx,DWORD PTR [ebp-0x2c]
  424d94:	sub    edx,edi
  424d96:	push   0x34edf800
  424d9b:	push   0xe0a47900
  424da0:	push   0xffffffd1
  424da2:	push   0xf4bf9900
  424da7:	call   0x4269f3
  424dac:	add    esp,0x10
  424daf:	push   0xffffffbc
  424db1:	push   0xaa72cb00
  424db6:	push   0x2d
  424db8:	call   0x4269f3
  424dbd:	add    esp,0xc
  424dc0:	mov    DWORD PTR [ebp-0x18],esi
  424dc3:	add    esi,edi
  424dc5:	push   0xbca7f600
  424dca:	push   0x3b
  424dcc:	push   0x36
  424dce:	call   0x427088
  424dd3:	add    esp,0xc
  424dd6:	cmp    esi,0xffffff8a
  424dd9:	je     0x424e00
  424ddb:	call   0x426cf9
  424de0:	push   0x34
  424de2:	push   0xffffffb1
  424de4:	push   0xffffffa3
  424de6:	push   0xffffffd0
  424de8:	push   0xa1ea400
  424ded:	call   0x426cf9
  424df2:	add    esp,0x14
  424df5:	sub    DWORD PTR [ebp-0x2c],edi
  424df8:	call   0x426cf9
  424dfd:	sub    DWORD PTR [ebp-0x2c],esi
  424e00:	push   0x8a73d500
  424e05:	push   0x488a5900
  424e0a:	push   0x2a026800
  424e0f:	push   0xffffff9f
  424e11:	call   0x426e8d
  424e16:	add    esp,0x10
  424e19:	or     DWORD PTR [ebp-0x2c],ebx
  424e1c:	push   0xffffffc4
  424e1e:	push   0x5d
  424e20:	push   0x98879500
  424e25:	push   0x7a5ad800
  424e2a:	push   0xffffffc2
  424e2c:	call   0x426e8d
  424e31:	add    esp,0x14
  424e34:	add    DWORD PTR [ebp-0x2c],ebx
  424e37:	push   0x38b61e00
  424e3c:	push   0x9a0c3200
  424e41:	push   0x35
  424e43:	push   0x69
  424e45:	call   0x4269f3
  424e4a:	add    esp,0x10
  424e4d:	push   0x21
  424e4f:	push   0xffffffd0
  424e51:	push   0x2e
  424e53:	push   0x8a42fc00
  424e58:	call   0x4269f3
  424e5d:	add    esp,0x10
  424e60:	push   0x18
  424e62:	push   0x84dd00
  424e67:	push   0x3f
  424e69:	push   0xffffffa3
  424e6b:	call   0x426e8d
  424e70:	add    esp,0x10
  424e73:	call   0x426b7c
  424e78:	push   0xffffff82
  424e7a:	call   0x4269f3
  424e7f:	add    esp,0x4
  424e82:	push   0xffffffd4
  424e84:	push   0x3a
  424e86:	push   0x70
  424e88:	push   0x94ccd100
  424e8d:	call   0x427088
  424e92:	add    esp,0x10
  424e95:	push   0xf4a34600
  424e9a:	push   0x587d4a00
  424e9f:	push   0xd8d50400
  424ea4:	call   0x426cf9
  424ea9:	add    esp,0xc
  424eac:	push   0x80797400
  424eb1:	push   0x5a735800
  424eb6:	push   0x6a21fb00
  424ebb:	push   0x23
  424ebd:	call   0x426e8d
  424ec2:	add    esp,0x10
  424ec5:	call   0x426e8d
  424eca:	push   0x8a240100
  424ecf:	push   0x57
  424ed1:	push   0xfccae300
  424ed6:	push   0xa665300
  424edb:	push   0xffffffc5
  424edd:	call   0x4269f3
  424ee2:	add    esp,0x14
  424ee5:	call   0x426cf9
  424eea:	cmp    eax,0xd
  424eed:	jne    0x424f04
  424eef:	cmp    esi,edi
  424ef1:	jne    0x424f04
  424ef3:	push   0xffffffde
  424ef5:	push   0x47
  424ef7:	push   0x40770300
  424efc:	call   0x4269f3
  424f01:	add    esp,0xc
  424f04:	mov    ecx,DWORD PTR [ebp-0x2c]
  424f07:	mov    edi,DWORD PTR [ebp-0x2c]
  424f0a:	push   0x4f26300
  424f0f:	push   0x64c30300
  424f14:	push   0x7a24f400
  424f19:	push   0x67
  424f1b:	push   0x2e
  424f1d:	call   0x427088
  424f22:	add    esp,0x14
  424f25:	push   0xffffffeb
  424f27:	push   0x76
  424f29:	push   0x7a
  424f2b:	call   0x426b7c
  424f30:	add    esp,0xc
  424f33:	push   0x5
  424f35:	push   0xffffffe6
  424f37:	push   0x308ecd00
  424f3c:	call   0x426e8d
  424f41:	add    esp,0xc
  424f44:	test   edi,0x78
  424f4a:	je     0x424f77
  424f4c:	push   0x69
  424f4e:	call   0x426b7c
  424f53:	add    esp,0x4
  424f56:	mov    edx,DWORD PTR [ebp-0x2c]
  424f59:	cmp    esi,0xffffffa3
  424f5c:	jne    0x424f77
  424f5e:	mov    eax,DWORD PTR [ebp-0x2c]
  424f61:	sub    edx,edi
  424f63:	push   0x46
  424f65:	push   0x7c8ccf00
  424f6a:	push   0x88820d00
  424f6f:	call   0x426cf9
  424f74:	add    esp,0xc
  424f77:	push   0xffffffac
  424f79:	push   0x7cc28100
  424f7e:	push   0xa630b00
  424f83:	call   0x427088
  424f88:	add    esp,0xc
  424f8b:	push   0xffffff8c
  424f8d:	call   0x427088
  424f92:	add    esp,0x4
  424f95:	push   0xffffff83
  424f97:	push   0x73
  424f99:	push   0x57
  424f9b:	push   0xca061400
  424fa0:	push   0x2a2cbc00
  424fa5:	call   0x427088
  424faa:	add    esp,0x14
  424fad:	push   0xa0eb3d00
  424fb2:	push   0x52
  424fb4:	push   0x548a6300
  424fb9:	push   0xa0f3e600
  424fbe:	push   0x8ce18000
  424fc3:	call   0x426cf9
  424fc8:	add    esp,0x14
  424fcb:	mov    ebx,edi
  424fcd:	push   0x6f
  424fcf:	call   0x4269f3
  424fd4:	add    esp,0x4
  424fd7:	push   0xffffffea
  424fd9:	push   0x2cc98600
  424fde:	push   0xffffffaf
  424fe0:	push   0xffffffaf
  424fe2:	call   0x426cf9
  424fe7:	add    esp,0x10
  424fea:	push   0x1a
  424fec:	push   0x94bbab00
  424ff1:	call   0x426e8d
  424ff6:	add    esp,0x8
  424ff9:	push   0x6e
  424ffb:	push   0xffffff85
  424ffd:	push   0xc0665000
  425002:	push   0x10fe5f00
  425007:	call   0x426e8d
  42500c:	add    esp,0x10
  42500f:	mov    edi,0x6e
  425014:	add    edi,esi
  425016:	call   0x426cf9
  42501b:	push   0xda529000
  425020:	push   0x29
  425022:	call   0x426e8d
  425027:	add    esp,0x8
  42502a:	cmp    edi,0x58
  42502d:	jne    0x425131
  425033:	push   0xfffffffa
  425035:	push   0xca135200
  42503a:	push   0x77
  42503c:	push   0xffffffc3
  42503e:	push   0xffffffa8
  425040:	call   0x427088
  425045:	add    esp,0x14
  425048:	mov    eax,DWORD PTR ds:0x439060
  42504e:	push   0xcebfb00
  425053:	push   0x34
  425055:	push   0x74ee0b00
  42505a:	push   0xa
  42505c:	call   0x426e8d
  425061:	add    esp,0x10
  425064:	cmp    edi,DWORD PTR [ebp-0x4]
  425067:	je     0x425131
  42506d:	add    edi,eax
  42506f:	call   0x427088
  425074:	push   0x55
  425076:	call   0x426e8d
  42507b:	add    esp,0x4
  42507e:	push   0x39
  425080:	push   0x58029600
  425085:	call   0x426cf9
  42508a:	add    esp,0x8
  42508d:	mov    eax,0x99
  425092:	sub    eax,esi
  425094:	push   0x75
  425096:	push   0x2a
  425098:	push   0xffffff8c
  42509a:	push   0xffffff99
  42509c:	push   0x35
  42509e:	call   0x427088
  4250a3:	add    esp,0x14
  4250a6:	push   0x7f
  4250a8:	push   0x5f
  4250aa:	push   0xffffffe7
  4250ac:	push   0xe4b7b600
  4250b1:	push   0xaced4400
  4250b6:	call   0x426cf9
  4250bb:	add    esp,0x14
  4250be:	call   0x427088
  4250c3:	push   0x33
  4250c5:	push   0x37
  4250c7:	push   0xffffffe7
  4250c9:	push   0x78
  4250cb:	push   0x5
  4250cd:	call   0x427088
  4250d2:	add    esp,0x14
  4250d5:	add    DWORD PTR [ebp-0x2c],ebx
  4250d8:	cmp    edi,esi
  4250da:	jne    0x425131
  4250dc:	push   0x36
  4250de:	push   0x585c5700
  4250e3:	call   0x427088
  4250e8:	add    esp,0x8
  4250eb:	test   edi,0x75
  4250f1:	jne    0x425131
  4250f3:	cmp    esi,eax
  4250f5:	je     0x425131
  4250f7:	cmp    edi,ebx
  4250f9:	je     0x425131
  4250fb:	push   0xfffffffc
  4250fd:	call   0x426b7c
  425102:	add    esp,0x4
  425105:	mov    esi,DWORD PTR [ebp-0x2c]
  425108:	call   0x426e8d
  42510d:	push   0xffffff86
  42510f:	call   0x427088
  425114:	add    esp,0x4
  425117:	mov    ecx,DWORD PTR [ebp-0x2c]
  42511a:	and    ecx,esi
  42511c:	or     ecx,edi
  42511e:	push   0x7caaf900
  425123:	push   0x74
  425125:	push   0xffffffc4
  425127:	push   0xffffffc9
  425129:	call   0x4269f3
  42512e:	add    esp,0x10
  425131:	push   0xffffffc9
  425133:	push   0x805d6100
  425138:	push   0xf8044600
  42513d:	push   0x24e8f800
  425142:	push   0x21
  425144:	call   0x4269f3
  425149:	add    esp,0x14
  42514c:	mov    eax,esi
  42514e:	add    DWORD PTR [ebp-0x2c],eax
  425151:	push   0xffffffb0
  425153:	push   0x786c5100
  425158:	push   0xffffffa8
  42515a:	push   0xffffffa6
  42515c:	call   0x426e8d
  425161:	add    esp,0x10
  425164:	push   0x17
  425166:	push   0x10
  425168:	push   0x78258c00
  42516d:	call   0x426b7c
  425172:	add    esp,0xc
  425175:	call   0x426e8d
  42517a:	call   0x427088
  42517f:	mov    edi,DWORD PTR ds:0x439064
  425185:	push   0x28aa6400
  42518a:	push   0xffffff98
  42518c:	push   0x78d97c00
  425191:	push   0x8
  425193:	push   0x7a2cf100
  425198:	call   0x426b7c
  42519d:	add    esp,0x14
  4251a0:	push   0xffffffce
  4251a2:	push   0x40
  4251a4:	push   0xffffffcd
  4251a6:	push   0xc0a8a000
  4251ab:	call   0x4269f3
  4251b0:	add    esp,0x10
  4251b3:	mov    eax,DWORD PTR [ebp-0x2c]
  4251b6:	push   0xd8969900
  4251bb:	push   0x3e
  4251bd:	push   0xffffff99
  4251bf:	call   0x426cf9
  4251c4:	add    esp,0xc
  4251c7:	push   0xd8f64900
  4251cc:	push   0xffffffad
  4251ce:	call   0x427088
  4251d3:	add    esp,0x8
  4251d6:	push   0xfffffff4
  4251d8:	push   0x5cec1f00
  4251dd:	push   0xf86ec600
  4251e2:	call   0x426e8d
  4251e7:	add    esp,0xc
  4251ea:	push   0xffffff96
  4251ec:	push   0x28f80200
  4251f1:	push   0xffffffcd
  4251f3:	call   0x427088
  4251f8:	add    esp,0xc
  4251fb:	push   0x2a4df700
  425200:	push   0xffffffc1
  425202:	call   0x427088
  425207:	add    esp,0x8
  42520a:	add    edi,eax
  42520c:	push   0xdc96ec00
  425211:	push   0x36
  425213:	call   0x426cf9
  425218:	add    esp,0x8
  42521b:	cmp    esi,0x63
  42521e:	je     0x425371
  425224:	cmp    edi,0x1b
  425227:	jne    0x425371
  42522d:	push   0xe88a9700
  425232:	push   0xda06fd00
  425237:	push   0x64e17a00
  42523c:	call   0x426e8d
  425241:	add    esp,0xc
  425244:	push   0xb0e73600
  425249:	push   0x20e20100
  42524e:	push   0xc8c32000
  425253:	push   0x9a09c200
  425258:	push   0xffffffe4
  42525a:	call   0x426e8d
  42525f:	add    esp,0x14
  425262:	mov    ebx,DWORD PTR [ebp-0x2c]
  425265:	push   0xfffffff1
  425267:	push   0x4cf97000
  42526c:	push   0xc8df1c00
  425271:	push   0xe4db4c00
  425276:	push   0x44
  425278:	call   0x426cf9
  42527d:	add    esp,0x14
  425280:	mov    edx,DWORD PTR [ebp-0x2c]
  425283:	test   ebx,0xc9
  425289:	jne    0x425371
  42528f:	push   0xc9a100
  425294:	push   0x3c97a800
  425299:	call   0x4269f3
  42529e:	add    esp,0x8
  4252a1:	push   0x2
  4252a3:	push   0x88e9ec00
  4252a8:	call   0x427088
  4252ad:	add    esp,0x8
  4252b0:	call   0x426cf9
  4252b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4252b8:	sub    DWORD PTR [ebp-0x2c],esi
  4252bb:	push   0x7fd400
  4252c0:	call   0x4269f3
  4252c5:	add    esp,0x4
  4252c8:	mov    eax,0x4327
  4252cd:	push   0x259e00
  4252d2:	push   0x12
  4252d4:	push   0xffffffcd
  4252d6:	push   0xffffffa0
  4252d8:	push   0xffffffe4
  4252da:	call   0x426b7c
  4252df:	add    esp,0x14
  4252e2:	cmp    edi,0xffffffda
  4252e5:	jne    0x425371
  4252eb:	push   0xe09fbf00
  4252f0:	call   0x426e8d
  4252f5:	add    esp,0x4
  4252f8:	push   0xd8a99f00
  4252fd:	push   0x3a
  4252ff:	call   0x427088
  425304:	add    esp,0x8
  425307:	push   0x4c
  425309:	call   0x4269f3
  42530e:	add    esp,0x4
  425311:	cmp    edi,DWORD PTR ds:0x439088
  425317:	je     0x425371
  425319:	sub    DWORD PTR [ebp-0x2c],ebx
  42531c:	mov    eax,DWORD PTR [ebp-0x2c]
  42531f:	mov    edx,DWORD PTR [ebp-0x2c]
  425322:	push   0x58549000
  425327:	push   0x69f100
  42532c:	push   0xa4d60c00
  425331:	push   0xffffffa4
  425333:	push   0xffffff9d
  425335:	call   0x4269f3
  42533a:	add    esp,0x14
  42533d:	push   0xfffffffa
  42533f:	push   0xdcac4a00
  425344:	push   0xa4a54900
  425349:	call   0x426cf9
  42534e:	add    esp,0xc
  425351:	or     edi,ebx
  425353:	push   0x587e4e00
  425358:	push   0xffffffba
  42535a:	push   0x6a005100
  42535f:	push   0xc0528300
  425364:	push   0xf
  425366:	call   0x426e8d
  42536b:	add    esp,0x14
  42536e:	sub    DWORD PTR [ebp-0x2c],edi
  425371:	mov    edi,DWORD PTR [ebp-0x2c]
  425374:	push   0x11
  425376:	push   0xf0858200
  42537b:	push   0xc062d800
  425380:	call   0x426cf9
  425385:	add    esp,0xc
  425388:	mov    ebx,DWORD PTR [ebp-0x2c]
  42538b:	sub    DWORD PTR [ebp-0x2c],edi
  42538e:	push   0xffffff87
  425390:	push   0x78524900
  425395:	call   0x4269f3
  42539a:	add    esp,0x8
  42539d:	push   0x70
  42539f:	push   0x78be7b00
  4253a4:	push   0x60e39d00
  4253a9:	call   0x4269f3
  4253ae:	add    esp,0xc
  4253b1:	call   0x427088
  4253b6:	push   0x37
  4253b8:	push   0x77
  4253ba:	push   0x2d
  4253bc:	call   0x426cf9
  4253c1:	add    esp,0xc
  4253c4:	sub    ebx,eax
  4253c6:	push   0xffffff90
  4253c8:	push   0xffffff8e
  4253ca:	push   0xffffff96
  4253cc:	push   0x2a
  4253ce:	push   0xffffffe9
  4253d0:	call   0x426e8d
  4253d5:	add    esp,0x14
  4253d8:	push   0x1f
  4253da:	call   0x426cf9
  4253df:	add    esp,0x4
  4253e2:	and    ebx,esi
  4253e4:	add    DWORD PTR [ebp-0x2c],ebx
  4253e7:	push   0x688fa400
  4253ec:	push   0xffffff9c
  4253ee:	call   0x426b7c
  4253f3:	add    esp,0x8
  4253f6:	mov    ebx,DWORD PTR [ebp-0x2c]
  4253f9:	push   0xf
  4253fb:	call   0x4269f3
  425400:	add    esp,0x4
  425403:	cmp    ebx,0x76
  425406:	jne    0x42545b
  425408:	push   0xffffffb7
  42540a:	push   0xf85f9d00
  42540f:	push   0x29
  425411:	call   0x426b7c
  425416:	add    esp,0xc
  425419:	mov    edx,DWORD PTR [ebp-0x2c]
  42541c:	push   0xf48ebb00
  425421:	push   0x78ad6c00
  425426:	call   0x4269f3
  42542b:	add    esp,0x8
  42542e:	push   0xc0475300
  425433:	call   0x4269f3
  425438:	add    esp,0x4
  42543b:	push   0xffffffd0
  42543d:	push   0x58294500
  425442:	push   0x4c
  425444:	push   0xffffff96
  425446:	push   0xba785100
  42544b:	call   0x426e8d
  425450:	add    esp,0x14
  425453:	call   0x426cf9
  425458:	mov    DWORD PTR [ebp-0x3c],ebx
  42545b:	mov    edx,DWORD PTR [ebp-0x2c]
  42545e:	and    edx,eax
  425460:	mov    edi,DWORD PTR [ebp-0x2c]
  425463:	push   0xe
  425465:	call   0x426e8d
  42546a:	add    esp,0x4
  42546d:	push   0x68d4c300
  425472:	push   0xfcf51b00
  425477:	push   0xffffff9a
  425479:	push   0x35
  42547b:	push   0x80340300
  425480:	call   0x426e8d
  425485:	add    esp,0x14
  425488:	push   0xffffffa9
  42548a:	push   0x38b19400
  42548f:	call   0x427088
  425494:	add    esp,0x8
  425497:	push   0x451300
  42549c:	push   0xf8692200
  4254a1:	call   0x426e8d
  4254a6:	add    esp,0x8
  4254a9:	call   0x4269f3
  4254ae:	push   0x28d33d00
  4254b3:	push   0x14921a00
  4254b8:	call   0x4269f3
  4254bd:	add    esp,0x8
  4254c0:	sub    DWORD PTR [ebp-0x2c],edi
  4254c3:	call   0x426e8d
  4254c8:	push   0xa780d00
  4254cd:	push   0xffffffdb
  4254cf:	push   0x80173200
  4254d4:	push   0x7d
  4254d6:	call   0x4269f3
  4254db:	add    esp,0x10
  4254de:	push   0x62
  4254e0:	push   0xffffffec
  4254e2:	push   0x1a57c200
  4254e7:	push   0xf84a0700
  4254ec:	push   0xffffffce
  4254ee:	call   0x426b7c
  4254f3:	add    esp,0x14
  4254f6:	push   0x58f6ed00
  4254fb:	push   0xffffffab
  4254fd:	push   0x5830ee00
  425502:	call   0x426e8d
  425507:	add    esp,0xc
  42550a:	or     DWORD PTR [ebp-0x2c],eax
  42550d:	push   0xffffffc9
  42550f:	call   0x427088
  425514:	add    esp,0x4
  425517:	lea    edx,[ebp-0xc]
  42551a:	test   edx,0x8b
  425520:	jne    0x42552e
  425522:	xor    ecx,ecx
  425524:	mov    eax,ecx
  425526:	or     DWORD PTR [ebp-0x2c],edx
  425529:	add    eax,edi
  42552b:	sub    DWORD PTR [ebp-0x2c],eax
  42552e:	xor    ebx,ebx
  425530:	mov    edi,DWORD PTR [ebp-0x2c]
  425533:	cmp    eax,DWORD PTR ds:0x439060
  425539:	jne    0x425593
  42553b:	sub    DWORD PTR [ebp-0x2c],ecx
  42553e:	mov    eax,DWORD PTR ds:0x439074
  425544:	add    DWORD PTR [ebp-0x2c],esi
  425547:	mov    ecx,DWORD PTR [ebp-0x2c]
  42554a:	add    eax,edi
  42554c:	add    DWORD PTR [ebp-0x2c],eax
  42554f:	cmp    edi,0xdcaa
  425555:	je     0x425593
  425557:	mov    esi,DWORD PTR [ebp-0x2c]
  42555a:	add    ecx,eax
  42555c:	test   edi,0x37
  425562:	je     0x425593
  425564:	mov    edi,ecx
  425566:	and    DWORD PTR [ebp-0x2c],esi
  425569:	mov    esi,0x17
  42556e:	and    DWORD PTR [ebp-0x2c],ebx
  425571:	cmp    edx,0x76
  425574:	je     0x425593
  425576:	sub    DWORD PTR [ebp-0x2c],esi
  425579:	mov    eax,DWORD PTR ds:0x439064
  42557f:	mov    DWORD PTR [ebp-0x1c],eax
  425582:	mov    ebx,0x94
  425587:	and    edi,ecx
  425589:	or     DWORD PTR [ebp-0x2c],ebx
  42558c:	sub    edi,ebx
  42558e:	and    edi,ebx
  425590:	add    DWORD PTR [ebp-0x1c],edi
  425593:	push   edx
  425594:	xor    edx,edx
  425596:	push   0x3a4c5300
  42559b:	push   0xffffff87
  42559d:	call   0x427088
  4255a2:	add    esp,0x8
  4255a5:	push   0x50a6774c
  4255aa:	push   0xfcc85c00
  4255af:	push   0x79
  4255b1:	push   0xffffffc5
  4255b3:	push   0xffffff81
  4255b5:	push   0x98c19d00
  4255ba:	call   0x427088
  4255bf:	add    esp,0x14
  4255c2:	push   0x3a124300
  4255c7:	push   0x2cac7300
  4255cc:	push   0x76
  4255ce:	push   0x45
  4255d0:	push   0x2cca3d00
  4255d5:	call   0x427088
  4255da:	add    esp,0x14
  4255dd:	call   0x4257e8
  4255e2:	push   0x787b2d00
  4255e7:	push   0x4031f000
  4255ec:	push   0x5836f700
  4255f1:	call   0x426e8d
  4255f6:	add    esp,0xc
  4255f9:	mov    esi,DWORD PTR [ebp-0xc]
  4255fc:	cmp    esi,DWORD PTR ds:0x439074
  425602:	jne    0x425607
  425604:	sub    DWORD PTR [ebp-0x2c],esi
  425607:	shr    esi,0x10
  42560a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42560d:	push   0xffffffa2
  42560f:	push   0x4f
  425611:	push   0x783c9300
  425616:	call   0x427088
  42561b:	add    esp,0xc
  42561e:	cmp    esi,0x915c
  425624:	jne    0x42574f
  42562a:	push   0x4a1c1e00
  42562f:	push   0xb4ccdb00
  425634:	call   0x427088
  425639:	add    esp,0x8
  42563c:	mov    ecx,0x919f5820
  425641:	add    edi,esi
  425643:	sub    DWORD PTR [ebp-0x2c],ecx
  425646:	mov    ebx,esi
  425648:	mov    esi,DWORD PTR [ebp-0x2c]
  42564b:	cmp    edi,eax
  42564d:	jne    0x42568b
  42564f:	mov    edx,ecx
  425651:	mov    eax,0xb7
  425656:	sub    esi,edi
  425658:	and    eax,esi
  42565a:	add    DWORD PTR [ebp-0x2c],ebx
  42565d:	add    DWORD PTR [ebp-0x2c],edx
  425660:	and    eax,edi
  425662:	sub    eax,esi
  425664:	test   eax,0xa3
  425669:	jne    0x42568b
  42566b:	cmp    eax,0xffffffc7
  42566e:	jne    0x42568b
  425670:	or     eax,ecx
  425672:	mov    ebx,DWORD PTR ds:0x439064
  425678:	mov    esi,ecx
  42567a:	add    ebx,edi
  42567c:	or     DWORD PTR [ebp-0x2c],edi
  42567f:	add    ebx,edx
  425681:	and    esi,eax
  425683:	sub    esi,ecx
  425685:	add    DWORD PTR [ebp-0x2c],ebx
  425688:	add    DWORD PTR [ebp-0x2c],esi
  42568b:	sub    ecx,DWORD PTR [ebp-0xc]
  42568e:	xor    edx,edx
  425690:	mov    ebx,DWORD PTR [ebp-0x2c]
  425693:	sub    DWORD PTR [ebp-0x2c],ebx
  425696:	sub    edx,ecx
  425698:	add    DWORD PTR [ebp-0x2c],edx
  42569b:	call   ecx
  42569d:	and    ebx,esi
  42569f:	sub    DWORD PTR [ebp-0x2c],ebx
  4256a2:	mov    DWORD PTR [ebp-0x20],eax
  4256a5:	call   0x4269f3
  4256aa:	push   0xffffffc5
  4256ac:	push   0x72
  4256ae:	push   0x8a60d00
  4256b3:	push   0xe
  4256b5:	push   0x583f2c00
  4256ba:	call   0x4269f3
  4256bf:	add    esp,0x14
  4256c2:	mov    edx,0x426178
  4256c7:	sub    DWORD PTR [ebp-0x2c],edx
  4256ca:	push   DWORD PTR [ebp-0xc]
  4256cd:	push   0x915e616b
  4256d2:	push   DWORD PTR [ebp-0x20]
  4256d5:	call   edx
  4256d7:	push   0x6f
  4256d9:	call   0x427088
  4256de:	add    esp,0x4
  4256e1:	push   0xf84c4400
  4256e6:	push   0x7
  4256e8:	push   0x407f4100
  4256ed:	call   0x4269f3
  4256f2:	add    esp,0xc
  4256f5:	add    DWORD PTR [ebp-0x20],0x5
  4256fc:	push   0x40c3ad00
  425701:	push   0x2b
  425703:	call   0x426b7c
  425708:	add    esp,0x8
  42570b:	call   0x426e8d
  425710:	mov    esi,DWORD PTR [ebp-0x20]
  425713:	push   0xffffffe8
  425715:	push   0x3b
  425717:	call   0x426b7c
  42571c:	add    esp,0x8
  42571f:	push   0x80b7c800
  425724:	push   0x5864d200
  425729:	push   0x8a491600
  42572e:	call   0x426b7c
  425733:	add    esp,0xc
  425736:	call   esi
  425738:	add    DWORD PTR [ebp-0x2c],esi
  42573b:	xor    eax,eax
  42573d:	push   0x55
  42573f:	call   0x426cf9
  425744:	add    esp,0x4
  425747:	and    DWORD PTR [ebp-0x2c],ebx
  42574a:	call   0x426e8d
  42574f:	push   0xb8ce6f00
  425754:	push   0x14f3d900
  425759:	push   0xfffffff2
  42575b:	push   0x67
  42575d:	push   0xffffffc5
  42575f:	call   0x426cf9
  425764:	add    esp,0x14
  425767:	mov    eax,ebx
  425769:	mov    ecx,DWORD PTR [ebp-0x2c]
  42576c:	and    DWORD PTR [ebp-0x2c],ecx
  42576f:	add    eax,ebx
  425771:	push   0x4b87d00
  425776:	push   0x5835b100
  42577b:	push   0xffffffd4
  42577d:	push   0x4c9c8200
  425782:	push   0x45
  425784:	call   0x4269f3
  425789:	add    esp,0x14
  42578c:	sub    eax,edi
  42578e:	mov    DWORD PTR [ebp-0x2c],eax
  425791:	push   0xffffffbb
  425793:	call   0x426cf9
  425798:	add    esp,0x4
  42579b:	pop    edi
  42579c:	cmp    edi,DWORD PTR [ebp-0x3c]
  42579f:	je     0x4257ba
  4257a1:	push   0xc0374200
  4257a6:	push   0x466800
  4257ab:	push   0x90897a00
  4257b0:	push   0xffffff93
  4257b2:	call   0x4269f3
  4257b7:	add    esp,0x10
  4257ba:	pop    esi
  4257bb:	push   0x30f89400
  4257c0:	call   0x427088
  4257c5:	add    esp,0x4
  4257c8:	pop    ebx
  4257c9:	push   0x8031f600
  4257ce:	push   0xffffffc1
  4257d0:	push   0x24fbb400
  4257d5:	push   0x1e
  4257d7:	push   0x1b
  4257d9:	call   0x426e8d
  4257de:	add    esp,0x14
  4257e1:	leave  
  4257e2:	ret    
  4257e3:	int3   
  4257e4:	int3   
  4257e5:	int3   
  4257e6:	int3   
  4257e7:	int3   
  4257e8:	push   ebp
  4257e9:	mov    ebp,esp
  4257eb:	sub    esp,0x54
  4257ee:	call   0x427088
  4257f3:	push   0x1a
  4257f5:	push   0xffffffdf
  4257f7:	push   0xc0a5cc00
  4257fc:	push   0xfffffff7
  4257fe:	push   0x383c2200
  425803:	call   0x426b7c
  425808:	add    esp,0x14
  42580b:	push   ebx
  42580c:	push   0xffffffa2
  42580e:	push   0x2ae9d400
  425813:	call   0x4269f3
  425818:	add    esp,0x8
  42581b:	push   esi
  42581c:	xor    ecx,ecx
  42581e:	mov    DWORD PTR [ebp-0x34],ecx
  425821:	push   edi
  425822:	push   0x1aa1fc00
  425827:	push   0x3c170000
  42582c:	call   0x426b7c
  425831:	add    esp,0x8
  425834:	call   0x427088
  425839:	push   0xcaf0dc00
  42583e:	push   0x80a5f300
  425843:	call   0x426cf9
  425848:	add    esp,0x8
  42584b:	mov    DWORD PTR [ebp-0x3c],0x402e0bd9
  425852:	push   0xc80b2600
  425857:	push   0xfffffff3
  425859:	call   0x427088
  42585e:	add    esp,0x8
  425861:	push   0x501f6600
  425866:	push   0x602b9a00
  42586b:	push   0xffffffaf
  42586d:	push   0xffffffad
  42586f:	call   0x426e8d
  425874:	add    esp,0x10
  425877:	call   0x425c79
  42587c:	cmp    eax,0x51
  42587f:	jne    0x4258b6
  425881:	mov    esi,DWORD PTR [ebp-0x34]
  425884:	add    esi,eax
  425886:	xor    ebx,ebx
  425888:	cmp    esi,DWORD PTR ds:0x439050
  42588e:	je     0x4258b6
  425890:	mov    DWORD PTR [ebp-0x34],esi
  425893:	mov    esi,ebx
  425895:	mov    edi,DWORD PTR [ebp-0x34]
  425898:	cmp    edi,ebx
  42589a:	jne    0x4258b6
  42589c:	mov    ecx,DWORD PTR [ebp-0x34]
  42589f:	or     ecx,esi
  4258a1:	cmp    edi,0xbec4
  4258a7:	jne    0x4258b6
  4258a9:	add    DWORD PTR [ebp-0x34],edi
  4258ac:	mov    ebx,ecx
  4258ae:	cmp    eax,DWORD PTR [ebp-0x24]
  4258b1:	je     0x4258b6
  4258b3:	sub    DWORD PTR [ebp-0x34],ebx
  4258b6:	mov    DWORD PTR [ebp-0x10],eax
  4258b9:	sub    eax,ebx
  4258bb:	xor    edi,edi
  4258bd:	mov    esi,DWORD PTR [ebp-0x34]
  4258c0:	sub    edi,ebx
  4258c2:	cmp    edi,DWORD PTR ds:0x439050
  4258c8:	jne    0x4259ce
  4258ce:	xor    edx,edx
  4258d0:	push   0x43
  4258d2:	push   0x78b8a500
  4258d7:	push   0xdc4d5a00
  4258dc:	push   0x58a35600
  4258e1:	push   0xffffffed
  4258e3:	call   0x426e8d
  4258e8:	add    esp,0x14
  4258eb:	push   0x7849a400
  4258f0:	push   0xf8e52400
  4258f5:	call   0x426cf9
  4258fa:	add    esp,0x8
  4258fd:	add    edi,ebx
  4258ff:	push   0x40f62000
  425904:	push   0xffffffe0
  425906:	push   0x52
  425908:	push   0x29
  42590a:	call   0x426e8d
  42590f:	add    esp,0x10
  425912:	sub    edi,ebx
  425914:	mov    DWORD PTR [ebp-0x34],edi
  425917:	mov    ecx,DWORD PTR ds:0x439050
  42591d:	add    ecx,edi
  42591f:	sub    esi,ecx
  425921:	push   0xffffffae
  425923:	push   0xfc54ef00
  425928:	push   0x58c82a00
  42592d:	push   0xffffffe4
  42592f:	push   0x57
  425931:	call   0x427088
  425936:	add    esp,0x14
  425939:	push   0xb876bf00
  42593e:	call   0x426b7c
  425943:	add    esp,0x4
  425946:	sub    DWORD PTR [ebp-0x34],eax
  425949:	call   0x426b7c
  42594e:	cmp    esi,0x24
  425951:	jne    0x4259ce
  425953:	call   0x427088
  425958:	mov    edi,0x7d
  42595d:	push   0xb47da200
  425962:	push   0x78bd1900
  425967:	push   0xc18e00
  42596c:	push   0x9c312400
  425971:	call   0x426b7c
  425976:	add    esp,0x10
  425979:	mov    edi,0x4b
  42597e:	call   0x426cf9
  425983:	cmp    esi,0x7c
  425986:	jne    0x4259ce
  425988:	sub    DWORD PTR [ebp-0x34],esi
  42598b:	push   0xcadc5500
  425990:	call   0x4269f3
  425995:	add    esp,0x4
  425998:	mov    ecx,0x66d
  42599d:	push   0xffffffa3
  42599f:	push   0x45
  4259a1:	push   0xffffffd7
  4259a3:	push   0x27
  4259a5:	call   0x427088
  4259aa:	add    esp,0x10
  4259ad:	push   0x3ab41700
  4259b2:	push   0x9076c100
  4259b7:	push   0x4d
  4259b9:	push   0xc0988900
  4259be:	push   0x5c5f4000
  4259c3:	call   0x426e8d
  4259c8:	add    esp,0x14
  4259cb:	add    DWORD PTR [ebp-0x34],edi
  4259ce:	call   0x425c79
  4259d3:	xor    edi,edi
  4259d5:	mov    esi,DWORD PTR [ebp-0x34]
  4259d8:	and    esi,ebx
  4259da:	add    esi,ebx
  4259dc:	cmp    esi,0x4e9f
  4259e2:	je     0x4259e7
  4259e4:	mov    DWORD PTR [ebp-0x34],esi
  4259e7:	or     DWORD PTR [ebp-0x34],edi
  4259ea:	mov    DWORD PTR [ebp-0x50],eax
  4259ed:	sub    DWORD PTR [ebp-0x34],eax
  4259f0:	call   0x425c79
  4259f5:	sub    DWORD PTR [ebp-0x34],eax
  4259f8:	mov    DWORD PTR [ebp-0x28],eax
  4259fb:	push   0x7a
  4259fd:	push   0xffffffa0
  4259ff:	push   0x4
  425a01:	call   0x427088
  425a06:	add    esp,0xc
  425a09:	push   0xbc148300
  425a0e:	push   0xf8cf8000
  425a13:	call   0x426cf9
  425a18:	add    esp,0x8
  425a1b:	mov    esi,DWORD PTR [ebp-0x50]
  425a1e:	add    DWORD PTR [ebp-0x34],esi
  425a21:	push   0xffffffe3
  425a23:	push   0x58e8bf00
  425a28:	push   0x44
  425a2a:	push   0x58f18900
  425a2f:	push   0xdc0c9600
  425a34:	call   0x426e8d
  425a39:	add    esp,0x14
  425a3c:	sub    esi,DWORD PTR [ebp-0x10]
  425a3f:	sub    edi,ebx
  425a41:	sub    edi,eax
  425a43:	push   0x80657400
  425a48:	push   0x34500900
  425a4d:	call   0x427088
  425a52:	add    esp,0x8
  425a55:	add    DWORD PTR [ebp-0x34],edi
  425a58:	push   0x44
  425a5a:	push   0xb019a500
  425a5f:	push   0x9c12f700
  425a64:	push   0x3c64c300
  425a69:	call   0x4269f3
  425a6e:	add    esp,0x10
  425a71:	xor    esi,0xbcdfdbee
  425a77:	call   0x4269f3
  425a7c:	mov    eax,DWORD PTR [ebp-0x28]
  425a7f:	mov    DWORD PTR [ebp-0x54],eax
  425a82:	sub    eax,DWORD PTR [ebp-0x50]
  425a85:	add    DWORD PTR [ebp-0x54],eax
  425a88:	xor    eax,0xbcdfdbeb
  425a8d:	cmp    eax,DWORD PTR [ebp-0x8]
  425a90:	jne    0x425ab0
  425a92:	cmp    esi,DWORD PTR ds:0x439050
  425a98:	je     0x425ab0
  425a9a:	xor    edx,edx
  425a9c:	mov    ebx,DWORD PTR [ebp-0x54]
  425a9f:	and    DWORD PTR [ebp-0x54],ebx
  425aa2:	sub    DWORD PTR [ebp-0x34],edi
  425aa5:	add    DWORD PTR [ebp-0x34],eax
  425aa8:	cmp    esi,DWORD PTR [ebp-0x4]
  425aab:	je     0x425ab0
  425aad:	add    DWORD PTR [ebp-0x54],edx
  425ab0:	cmp    esi,eax
  425ab2:	je     0x425bc7
  425ab8:	push   0x73
  425aba:	push   0x3f
  425abc:	push   0x4c7af600
  425ac1:	call   0x427088
  425ac6:	add    esp,0xc
  425ac9:	push   0xffffff86
  425acb:	push   0xffffffaf
  425acd:	push   0x58b64800
  425ad2:	call   0x4269f3
  425ad7:	add    esp,0xc
  425ada:	push   0x439050
  425adf:	call   DWORD PTR ds:0x436c68
  425ae5:	mov    edi,0xb343
  425aea:	add    edi,eax
  425aec:	cmp    edi,DWORD PTR ds:0x439050
  425af2:	jne    0x425afc
  425af4:	cmp    edi,DWORD PTR [ebp-0x1c]
  425af7:	jne    0x425afc
  425af9:	add    DWORD PTR [ebp-0x34],edi
  425afc:	or     eax,eax
  425afe:	je     0x425bc7
  425b04:	xor    ebx,ebx
  425b06:	and    ebx,edi
  425b08:	sub    ebx,esi
  425b0a:	add    DWORD PTR [ebp-0x54],ebx
  425b0d:	add    DWORD PTR [ebp-0x3c],0xa897669c
  425b14:	add    DWORD PTR [ebp-0x54],eax
  425b17:	lea    esi,[eax+0x613]
  425b1d:	or     DWORD PTR [ebp-0x34],edi
  425b20:	inc    esi
  425b21:	mov    ecx,ebx
  425b23:	add    DWORD PTR [ebp-0x34],esi
  425b26:	sub    ecx,ebx
  425b28:	cmp    ecx,DWORD PTR ds:0x439050
  425b2e:	je     0x425b4e
  425b30:	mov    edx,DWORD PTR [ebp-0x54]
  425b33:	push   0x4786600
  425b38:	push   0x2f
  425b3a:	push   0x30167700
  425b3f:	push   0xbc634700
  425b44:	push   0x11
  425b46:	call   0x426cf9
  425b4b:	add    esp,0x14
  425b4e:	mov    eax,DWORD PTR [esi]
  425b50:	cmp    eax,0xffffffbc
  425b53:	je     0x425b79
  425b55:	cmp    eax,DWORD PTR [ebp-0x2c]
  425b58:	je     0x425b79
  425b5a:	mov    ecx,DWORD PTR [ebp-0x34]
  425b5d:	sub    DWORD PTR [ebp-0x34],eax
  425b60:	mov    edx,edi
  425b62:	add    ecx,esi
  425b64:	sub    ecx,edi
  425b66:	cmp    edi,esi
  425b68:	jne    0x425b79
  425b6a:	add    DWORD PTR [ebp-0x34],ecx
  425b6d:	mov    ecx,esi
  425b6f:	and    edx,ecx
  425b71:	add    DWORD PTR [ebp-0x54],ebx
  425b74:	add    edx,ecx
  425b76:	and    DWORD PTR [ebp-0x54],edx
  425b79:	sub    eax,0x8a1b83f7
  425b7e:	add    DWORD PTR [ebp-0x34],eax
  425b81:	cmp    eax,0xccfb6764
  425b86:	jne    0x425b1d
  425b88:	mov    ecx,DWORD PTR [ebp-0x34]
  425b8b:	and    DWORD PTR [ebp-0x54],ecx
  425b8e:	mov    eax,DWORD PTR [esi+0x4]
  425b91:	mov    ebx,DWORD PTR [ebp-0x54]
  425b94:	mov    esi,0x7c
  425b99:	or     DWORD PTR [ebp-0x54],eax
  425b9c:	add    DWORD PTR [ebp-0x34],ebx
  425b9f:	and    ecx,ebx
  425ba1:	sub    DWORD PTR [ebp-0x34],ecx
  425ba4:	sub    DWORD PTR [ebp-0x34],edx
  425ba7:	cmp    edx,0x84a0064
  425bad:	jne    0x425bc4
  425baf:	mov    ebx,esi
  425bb1:	mov    edi,0x3e
  425bb6:	or     DWORD PTR [ebp-0x54],esi
  425bb9:	add    ebx,edx
  425bbb:	add    ebx,edi
  425bbd:	sub    ebx,esi
  425bbf:	and    ebx,edx
  425bc1:	sub    DWORD PTR [ebp-0x54],ebx
  425bc4:	sub    DWORD PTR [ebp-0x3c],eax
  425bc7:	call   0x426e8d
  425bcc:	push   0x40
  425bce:	call   0x4269f3
  425bd3:	add    esp,0x4
  425bd6:	push   0x6c
  425bd8:	push   0xab3f700
  425bdd:	call   0x427088
  425be2:	add    esp,0x8
  425be5:	mov    esi,DWORD PTR [ebp+0xc]
  425be8:	and    DWORD PTR [ebp-0x54],esi
  425beb:	mov    eax,DWORD PTR [ebp-0x3c]
  425bee:	sub    ebx,edi
  425bf0:	mov    edi,DWORD PTR [ebp-0x34]
  425bf3:	cmp    edi,DWORD PTR ds:0x439050
  425bf9:	jne    0x425c0e
  425bfb:	or     DWORD PTR [ebp-0x34],edi
  425bfe:	mov    ecx,0x15
  425c03:	mov    ecx,DWORD PTR [ebp-0x34]
  425c06:	add    ecx,eax
  425c08:	add    DWORD PTR [ebp-0x54],ecx
  425c0b:	sub    DWORD PTR [ebp-0x54],ebx
  425c0e:	mov    DWORD PTR [esi+0x0],eax
  425c11:	or     DWORD PTR [ebp-0x34],esi
  425c14:	push   0xf83e2200
  425c19:	push   0x80ad4100
  425c1e:	push   0x6e
  425c20:	push   0x42
  425c22:	push   0x80808e00
  425c27:	call   0x4269f3
  425c2c:	add    esp,0x14
  425c2f:	call   0x426b7c
  425c34:	pop    edi
  425c35:	cmp    eax,ebx
  425c37:	je     0x425c46
  425c39:	push   0x7c3e7200
  425c3e:	call   0x427088
  425c43:	add    esp,0x4
  425c46:	pop    esi
  425c47:	sub    DWORD PTR [ebp-0x54],edi
  425c4a:	pop    ebx
  425c4b:	push   0xc
  425c4d:	push   0x75
  425c4f:	call   0x427088
  425c54:	add    esp,0x8
  425c57:	push   0xaa21400
  425c5c:	push   0x58333300
  425c61:	push   0x187d0100
  425c66:	push   0x19
  425c68:	call   0x4269f3
  425c6d:	add    esp,0x10
  425c70:	leave  
  425c71:	ret    0x8
  425c74:	int3   
  425c75:	int3   
  425c76:	int3   
  425c77:	int3   
  425c78:	int3   
  425c79:	push   ebp
  425c7a:	mov    ebp,esp
  425c7c:	sub    esp,0x24
  425c7f:	push   0x4077d700
  425c84:	push   0xbac08e00
  425c89:	call   0x426b7c
  425c8e:	add    esp,0x8
  425c91:	push   ebx
  425c92:	push   0x77
  425c94:	call   0x426b7c
  425c99:	add    esp,0x4
  425c9c:	call   0x427088
  425ca1:	push   esi
  425ca2:	mov    eax,0xe7
  425ca7:	mov    esi,0x9d
  425cac:	push   0xffffff97
  425cae:	push   0x7c2cae00
  425cb3:	push   0xffffffb6
  425cb5:	push   0xb851dd00
  425cba:	call   0x426e8d
  425cbf:	add    esp,0x10
  425cc2:	push   0x8aaa3f00
  425cc7:	push   0xd8177300
  425ccc:	push   0xffffffee
  425cce:	push   0xb45ed800
  425cd3:	push   0x32
  425cd5:	call   0x427088
  425cda:	add    esp,0x14
  425cdd:	mov    DWORD PTR [ebp-0x20],esi
  425ce0:	push   edi
  425ce1:	add    DWORD PTR [ebp-0x20],eax
  425ce4:	push   0x403a6d00
  425ce9:	push   0x4836f200
  425cee:	push   0x11
  425cf0:	push   0x58912100
  425cf5:	push   0xf1c300
  425cfa:	call   0x427088
  425cff:	add    esp,0x14
  425d02:	sub    esi,eax
  425d04:	and    esi,eax
  425d06:	push   0x2a908800
  425d0b:	push   0x30
  425d0d:	push   0xd8636a00
  425d12:	push   0xd41aba00
  425d17:	call   0x426cf9
  425d1c:	add    esp,0x10
  425d1f:	call   0x427088
  425d24:	mov    eax,0x51b8
  425d29:	mov    ecx,DWORD PTR ds:0x439068
  425d2f:	sub    DWORD PTR [ebp-0x20],eax
  425d32:	push   0x40fb8600
  425d37:	push   0xffffff86
  425d39:	push   0xffffffc5
  425d3b:	push   0x70
  425d3d:	call   0x427088
  425d42:	add    esp,0x10
  425d45:	push   0xaa3aa00
  425d4a:	push   0x40d3be00
  425d4f:	call   0x4269f3
  425d54:	add    esp,0x8
  425d57:	push   0x2c0e4d00
  425d5c:	push   0xf884b000
  425d61:	push   0x1d
  425d63:	call   0x426b7c
  425d68:	add    esp,0xc
  425d6b:	push   0xffffffac
  425d6d:	push   0xac617f00
  425d72:	push   0x785bb100
  425d77:	push   0x5ae86200
  425d7c:	push   0x22
  425d7e:	call   0x426cf9
  425d83:	add    esp,0x14
  425d86:	push   0xa31400
  425d8b:	push   0xc
  425d8d:	push   0x5003e300
  425d92:	call   0x426cf9
  425d97:	add    esp,0xc
  425d9a:	push   0x71
  425d9c:	push   0xeaebc100
  425da1:	push   0xb44b1700
  425da6:	call   0x4269f3
  425dab:	add    esp,0xc
  425dae:	cmp    esi,eax
  425db0:	je     0x426099
  425db6:	cmp    esi,DWORD PTR [ebp-0x18]
  425db9:	je     0x426099
  425dbf:	mov    edi,DWORD PTR [ebp-0x20]
  425dc2:	push   0x43
  425dc4:	call   0x426b7c
  425dc9:	add    esp,0x4
  425dcc:	mov    ecx,DWORD PTR [ebp-0x20]
  425dcf:	push   0xcc453800
  425dd4:	push   0xfffffff4
  425dd6:	push   0x55
  425dd8:	push   0xfffffffe
  425dda:	call   0x426e8d
  425ddf:	add    esp,0x10
  425de2:	push   0x4c001500
  425de7:	push   0x72
  425de9:	push   0x3f
  425deb:	push   0xf06ed900
  425df0:	push   0xffffffe2
  425df2:	call   0x426e8d
  425df7:	add    esp,0x14
  425dfa:	push   0xe07faf00
  425dff:	call   0x426e8d
  425e04:	add    esp,0x4
  425e07:	call   0x426e8d
  425e0c:	push   0x68
  425e0e:	push   0x3e
  425e10:	push   0xffffff84
  425e12:	push   0x58bf5d00
  425e17:	push   0x94117000
  425e1c:	call   0x427088
  425e21:	add    esp,0x14
  425e24:	push   0xe8143300
  425e29:	push   0x1a89d600
  425e2e:	push   0xffffffa7
  425e30:	push   0xffffffc6
  425e32:	push   0xa02cfc00
  425e37:	call   0x427088
  425e3c:	add    esp,0x14
  425e3f:	cmp    esi,0xffffffef
  425e42:	jne    0x426099
  425e48:	push   0xd
  425e4a:	push   0xffffffdc
  425e4c:	push   0x6418c500
  425e51:	push   0x69
  425e53:	call   0x426cf9
  425e58:	add    esp,0x10
  425e5b:	mov    edx,DWORD PTR ds:0x439068
  425e61:	push   0xcac1cb00
  425e66:	push   0x589cf300
  425e6b:	push   0xffffffaa
  425e6d:	push   0x22
  425e6f:	call   0x427088
  425e74:	add    esp,0x10
  425e77:	and    esi,eax
  425e79:	sub    esi,eax
  425e7b:	push   0x503c5f00
  425e80:	push   0x4541d00
  425e85:	push   0xc0dd0300
  425e8a:	call   0x4269f3
  425e8f:	add    esp,0xc
  425e92:	push   0x21
  425e94:	push   0x6adb8800
  425e99:	call   0x426cf9
  425e9e:	add    esp,0x8
  425ea1:	push   0xb30b00
  425ea6:	push   0x80879000
  425eab:	push   0xffffffab
  425ead:	call   0x427088
  425eb2:	add    esp,0xc
  425eb5:	push   0x2
  425eb7:	push   0x51
  425eb9:	push   0xffffff99
  425ebb:	push   0x7a83b000
  425ec0:	push   0x58f1f000
  425ec5:	call   0x426e8d
  425eca:	add    esp,0x14
  425ecd:	push   0x4aec1f00
  425ed2:	call   0x426b7c
  425ed7:	add    esp,0x4
  425eda:	call   0x426b7c
  425edf:	push   0xfffffff5
  425ee1:	push   0xfffffff1
  425ee3:	call   0x426cf9
  425ee8:	add    esp,0x8
  425eeb:	call   0x426e8d
  425ef0:	push   0x80c0ff00
  425ef5:	call   0x426cf9
  425efa:	add    esp,0x4
  425efd:	add    DWORD PTR [ebp-0x20],edi
  425f00:	push   0x40
  425f02:	push   0x7c1e2100
  425f07:	push   0xffffff96
  425f09:	push   0x20589b00
  425f0e:	call   0x426b7c
  425f13:	add    esp,0x10
  425f16:	push   0x50
  425f18:	push   0x58bcba00
  425f1d:	call   0x427088
  425f22:	add    esp,0x8
  425f25:	call   0x4269f3
  425f2a:	cmp    edi,0xbb74
  425f30:	je     0x426099
  425f36:	push   0x9a87de00
  425f3b:	push   0x4ac81900
  425f40:	push   0xae0800
  425f45:	call   0x426cf9
  425f4a:	add    esp,0xc
  425f4d:	cmp    edi,eax
  425f4f:	jne    0x426099
  425f55:	mov    ebx,DWORD PTR ds:0x439068
  425f5b:	push   0xffffffd0
  425f5d:	call   0x426b7c
  425f62:	add    esp,0x4
  425f65:	sub    esi,eax
  425f67:	push   0xf8e11600
  425f6c:	push   0x481a7000
  425f71:	push   0xe1f200
  425f76:	call   0x426cf9
  425f7b:	add    esp,0xc
  425f7e:	push   0x58d1f500
  425f83:	push   0xa9e2a00
  425f88:	push   0x7a911900
  425f8d:	call   0x426cf9
  425f92:	add    esp,0xc
  425f95:	call   0x426cf9
  425f9a:	call   0x427088
  425f9f:	push   0x2f
  425fa1:	push   0xffffffa9
  425fa3:	push   0xea9fca00
  425fa8:	call   0x426e8d
  425fad:	add    esp,0xc
  425fb0:	test   esi,0x7216
  425fb6:	je     0x426099
  425fbc:	cmp    esi,0x46d8
  425fc2:	je     0x426099
  425fc8:	mov    eax,DWORD PTR [ebp-0x20]
  425fcb:	add    eax,eax
  425fcd:	xor    edi,edi
  425fcf:	push   0xffffffc7
  425fd1:	call   0x426b7c
  425fd6:	add    esp,0x4
  425fd9:	add    edi,eax
  425fdb:	sub    esi,eax
  425fdd:	push   0x3adf1c00
  425fe2:	push   0x4c
  425fe4:	push   0x5b
  425fe6:	call   0x427088
  425feb:	add    esp,0xc
  425fee:	cmp    edi,DWORD PTR ds:0x439068
  425ff4:	jne    0x426099
  425ffa:	push   0xf
  425ffc:	call   0x426b7c
  426001:	add    esp,0x4
  426004:	cmp    esi,eax
  426006:	jne    0x426099
  42600c:	and    DWORD PTR [ebp-0x20],ebx
  42600f:	xor    ebx,ebx
  426011:	push   0xfffffffc
  426013:	push   0x24762a00
  426018:	push   0x3afe7000
  42601d:	push   0xffffffca
  42601f:	push   0xfffffff6
  426021:	call   0x426cf9
  426026:	add    esp,0x14
  426029:	and    ebx,esi
  42602b:	mov    eax,DWORD PTR [ebp-0x20]
  42602e:	push   0x4b
  426030:	call   0x4269f3
  426035:	add    esp,0x4
  426038:	push   0x34608e00
  42603d:	push   0xb801ab00
  426042:	push   0xdac04400
  426047:	push   0xffffff8f
  426049:	push   0xffffffa4
  42604b:	call   0x426cf9
  426050:	add    esp,0x14
  426053:	push   0x5c
  426055:	push   0x78fdd700
  42605a:	push   0xffffff93
  42605c:	push   0xc0981500
  426061:	call   0x4269f3
  426066:	add    esp,0x10
  426069:	push   0xfc618200
  42606e:	push   0x3046d600
  426073:	push   0xe4658900
  426078:	push   0xbc03eb00
  42607d:	push   0xffffff9b
  42607f:	call   0x426b7c
  426084:	add    esp,0x14
  426087:	push   0x80b80d00
  42608c:	call   0x4269f3
  426091:	add    esp,0x4
  426094:	or     edi,ebx
  426096:	mov    DWORD PTR [ebp-0x20],edi
  426099:	push   0x8
  42609b:	push   0x58b2a400
  4260a0:	call   0x426e8d
  4260a5:	add    esp,0x8
  4260a8:	mov    eax,DWORD PTR [ebp-0x20]
  4260ab:	push   0xffffff91
  4260ad:	call   0x4269f3
  4260b2:	add    esp,0x4
  4260b5:	call   0x427088
  4260ba:	rdtsc  
  4260bc:	mov    ecx,DWORD PTR ds:0x439084
  4260c2:	sub    DWORD PTR [ebp-0x20],eax
  4260c5:	sub    DWORD PTR [ebp-0x20],edx
  4260c8:	sub    DWORD PTR [ebp-0x20],ecx
  4260cb:	mov    esi,DWORD PTR [ebp-0x20]
  4260ce:	mov    ecx,DWORD PTR [ebp-0x20]
  4260d1:	sub    esi,ecx
  4260d3:	cmp    esi,eax
  4260d5:	je     0x4260ee
  4260d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4260da:	mov    edx,DWORD PTR [ebp-0x20]
  4260dd:	cmp    ecx,0x52
  4260e0:	jne    0x4260ee
  4260e2:	or     DWORD PTR [ebp-0x20],ecx
  4260e5:	xor    DWORD PTR [ebp-0x20],ebx
  4260e8:	add    DWORD PTR [ebp-0x20],edx
  4260eb:	sub    DWORD PTR [ebp-0x20],esi
  4260ee:	mov    edx,DWORD PTR [ebp-0x20]
  4260f1:	and    edx,edi
  4260f3:	xor    DWORD PTR [ebp-0x20],edx
  4260f6:	pop    edi
  4260f7:	add    DWORD PTR [ebp-0x20],eax
  4260fa:	pop    esi
  4260fb:	mov    edx,0x98
  426100:	mov    ecx,DWORD PTR [ebp-0x20]
  426103:	cmp    edi,0xffffffb1
  426106:	je     0x426135
  426108:	cmp    edi,DWORD PTR ds:0x439084
  42610e:	je     0x426135
  426110:	sub    edx,esi
  426112:	mov    ebx,ecx
  426114:	mov    ecx,DWORD PTR [ebp-0x20]
  426117:	add    DWORD PTR [ebp-0x20],ecx
  42611a:	or     ebx,edi
  42611c:	add    DWORD PTR [ebp-0x20],ebx
  42611f:	add    edx,ecx
  426121:	test   edx,0x3a
  426127:	jne    0x426135
  426129:	mov    ecx,DWORD PTR [ebp-0x20]
  42612c:	mov    ebx,edx
  42612e:	sub    ebx,ecx
  426130:	and    ebx,eax
  426132:	and    DWORD PTR [ebp-0x20],ebx
  426135:	pop    ebx
  426136:	mov    ecx,edi
  426138:	cmp    ecx,0x10
  42613b:	je     0x426171
  42613d:	cmp    ebx,eax
  42613f:	jne    0x426171
  426141:	and    ecx,edi
  426143:	cmp    ebx,0x66
  426146:	jne    0x426171
  426148:	xor    edx,edx
  42614a:	cmp    ecx,0x24
  42614d:	je     0x426171
  42614f:	cmp    esi,DWORD PTR ds:0x439068
  426155:	je     0x426171
  426157:	add    edx,ecx
  426159:	cmp    edx,0xffffffb8
  42615c:	je     0x426171
  42615e:	add    edx,edi
  426160:	sub    DWORD PTR [ebp-0x20],ecx
  426163:	cmp    edx,DWORD PTR ds:0x439068
  426169:	jne    0x426171
  42616b:	and    DWORD PTR [ebp-0x20],ebx
  42616e:	add    DWORD PTR [ebp-0x20],edx
  426171:	leave  
  426172:	ret    
  426173:	int3   
  426174:	int3   
  426175:	int3   
  426176:	int3   
  426177:	int3   
  426178:	push   ebp
  426179:	mov    ebp,esp
  42617b:	sub    esp,0x1c
  42617e:	push   0x5434bb00
  426183:	call   0x427088
  426188:	add    esp,0x4
  42618b:	push   0xffffffec
  42618d:	call   0x426cf9
  426192:	add    esp,0x4
  426195:	push   ebx
  426196:	push   0xffffffca
  426198:	push   0xa01e2d00
  42619d:	push   0x5a
  42619f:	push   0x905b6c00
  4261a4:	call   0x426e8d
  4261a9:	add    esp,0x10
  4261ac:	push   esi
  4261ad:	push   0xf44fd500
  4261b2:	call   0x426b7c
  4261b7:	add    esp,0x4
  4261ba:	push   edi
  4261bb:	push   0x5
  4261bd:	push   0xf860da00
  4261c2:	push   0x4c
  4261c4:	call   0x427088
  4261c9:	add    esp,0xc
  4261cc:	push   0x4b
  4261ce:	push   0xfffffff4
  4261d0:	push   0x5846d100
  4261d5:	push   0xe0640c00
  4261da:	push   0xffffffe7
  4261dc:	call   0x426b7c
  4261e1:	add    esp,0x14
  4261e4:	cmp    eax,0xffffff98
  4261e7:	jne    0x426207
  4261e9:	push   0xbc130d00
  4261ee:	push   0x60
  4261f0:	push   0x3ac7a600
  4261f5:	push   0xb442b700
  4261fa:	push   0xc413b300
  4261ff:	call   0x427088
  426204:	add    esp,0x14
  426207:	mov    eax,DWORD PTR [ebp+0x10]
  42620a:	mov    edx,0x3df2
  42620f:	mov    ecx,0x7927
  426214:	mov    DWORD PTR [ebp-0x4],ecx
  426217:	sub    DWORD PTR [ebp-0x4],edx
  42621a:	mov    edx,DWORD PTR [ebp+0x8]
  42621d:	mov    ecx,DWORD PTR [ebp-0x4]
  426220:	mov    edi,DWORD PTR [ebp-0x4]
  426223:	and    DWORD PTR [ebp-0x4],ecx
  426226:	sub    DWORD PTR [ebp-0x4],edx
  426229:	cmp    eax,0xffffff96
  42622c:	je     0x42628b
  42622e:	cmp    edi,DWORD PTR [ebp-0x10]
  426231:	je     0x42628b
  426233:	mov    ebx,DWORD PTR [ebp-0x4]
  426236:	add    ebx,eax
  426238:	mov    esi,0xe7
  42623d:	sub    esi,edx
  42623f:	test   edi,0x87
  426245:	jne    0x42628b
  426247:	mov    ecx,DWORD PTR [ebp-0x4]
  42624a:	add    DWORD PTR [ebp-0x4],esi
  42624d:	cmp    esi,edi
  42624f:	jne    0x42628b
  426251:	add    DWORD PTR [ebp-0x4],ebx
  426254:	and    ecx,ebx
  426256:	mov    esi,DWORD PTR ds:0x439048
  42625c:	and    DWORD PTR [ebp-0x4],edi
  42625f:	xor    ebx,ebx
  426261:	sub    ebx,eax
  426263:	add    ecx,ecx
  426265:	cmp    ebx,esi
  426267:	jne    0x42628b
  426269:	sub    DWORD PTR [ebp-0x4],ebx
  42626c:	mov    ebx,DWORD PTR ds:0x439048
  426272:	sub    ecx,edx
  426274:	test   ecx,0xc3
  42627a:	je     0x42628b
  42627c:	mov    edi,DWORD PTR [ebp-0x4]
  42627f:	add    DWORD PTR [ebp-0x4],edi
  426282:	sub    DWORD PTR [ebp-0x4],ebx
  426285:	and    DWORD PTR [ebp-0x4],esi
  426288:	or     DWORD PTR [ebp-0x4],ecx
  42628b:	cmp    DWORD PTR [ebp+0xc],eax
  42628e:	je     0x42639e
  426294:	add    DWORD PTR [ebp-0x4],esi
  426297:	dec    DWORD PTR [ebp+0xc]
  42629a:	add    DWORD PTR [ebp-0x4],esi
  42629d:	rol    DWORD PTR [edx],0x10
  4262a0:	sub    DWORD PTR [ebp-0x4],eax
  4262a3:	xor    DWORD PTR [edx],0xf48e929d
  4262a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4262ac:	cmp    ecx,DWORD PTR ds:0x439048
  4262b2:	je     0x4262f4
  4262b4:	mov    ebx,DWORD PTR ds:0x439098
  4262ba:	add    ebx,edi
  4262bc:	xor    edi,edi
  4262be:	add    ecx,esi
  4262c0:	test   ebx,0x62
  4262c6:	jne    0x4262f4
  4262c8:	and    ebx,ecx
  4262ca:	add    DWORD PTR [ebp-0x4],esi
  4262cd:	cmp    ebx,DWORD PTR [ebp-0x14]
  4262d0:	je     0x4262f4
  4262d2:	mov    edi,0x7c93
  4262d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4262da:	test   ecx,0xbc
  4262e0:	je     0x4262f4
  4262e2:	mov    DWORD PTR [ebp-0x4],ecx
  4262e5:	mov    ecx,eax
  4262e7:	add    DWORD PTR [ebp-0x4],ecx
  4262ea:	sub    ebx,ecx
  4262ec:	sub    ebx,edx
  4262ee:	add    DWORD PTR [ebp-0x4],ebx
  4262f1:	add    DWORD PTR [ebp-0x4],edi
  4262f4:	sub    DWORD PTR [edx],eax
  4262f6:	mov    edi,ebx
  4262f8:	mov    ebx,0xaa818080
  4262fd:	sub    DWORD PTR [ebp-0x4],edx
  426300:	cmp    edi,DWORD PTR ds:0x439048
  426306:	jne    0x42630b
  426308:	add    DWORD PTR [ebp-0x4],edi
  42630b:	sub    DWORD PTR [ebp-0x4],edx
  42630e:	add    DWORD PTR [ebp-0x4],ebx
  426311:	add    edx,0x4
  426314:	mov    edi,DWORD PTR [ebp-0x4]
  426317:	mov    ecx,0x15e3
  42631c:	and    edi,eax
  42631e:	add    edi,edi
  426320:	sub    edi,esi
  426322:	sub    edi,ebx
  426324:	test   eax,0xee
  426329:	je     0x426399
  42632b:	test   edx,0x57
  426331:	jne    0x426399
  426333:	cmp    edi,0xffffffc7
  426336:	jne    0x426399
  426338:	sub    DWORD PTR [ebp-0x4],edi
  42633b:	cmp    edx,0x58
  42633e:	je     0x426399
  426340:	mov    edi,DWORD PTR [ebp-0x4]
  426343:	or     DWORD PTR [ebp-0x4],ecx
  426346:	mov    ecx,0xf7
  42634b:	add    ecx,ecx
  42634d:	cmp    edi,edx
  42634f:	je     0x426399
  426351:	add    DWORD PTR [ebp-0x4],edi
  426354:	sub    ecx,edi
  426356:	sub    ecx,esi
  426358:	add    DWORD PTR [ebp-0x4],ebx
  42635b:	cmp    edx,0x11
  42635e:	jne    0x426399
  426360:	mov    edi,esi
  426362:	add    DWORD PTR [ebp-0x4],edi
  426365:	mov    edi,DWORD PTR [ebp-0x4]
  426368:	add    ecx,edi
  42636a:	cmp    ecx,DWORD PTR ds:0x439048
  426370:	je     0x426399
  426372:	xor    edi,edi
  426374:	sub    DWORD PTR [ebp-0x4],edi
  426377:	mov    edi,0x73
  42637c:	add    ecx,ecx
  42637e:	cmp    edx,eax
  426380:	jne    0x426399
  426382:	xor    DWORD PTR [ebp-0x4],ecx
  426385:	cmp    edx,eax
  426387:	jne    0x426399
  426389:	or     DWORD PTR [ebp-0x4],edx
  42638c:	add    DWORD PTR [ebp-0x4],edx
  42638f:	mov    ecx,0x5433
  426394:	sub    edi,ecx
  426396:	add    DWORD PTR [ebp-0x4],edi
  426399:	jmp    0x42621d
  42639e:	call   0x426e8d
  4263a3:	push   0xffffffe6
  4263a5:	call   0x426cf9
  4263aa:	add    esp,0x4
  4263ad:	mov    edx,DWORD PTR ds:0x439098
  4263b3:	mov    eax,DWORD PTR ds:0x439040
  4263b9:	push   0xd0445200
  4263be:	push   0x2d
  4263c0:	call   0x426e8d
  4263c5:	add    esp,0x8
  4263c8:	push   0xffffffb8
  4263ca:	push   0xaf6ac00
  4263cf:	push   0x58bbc100
  4263d4:	call   0x426cf9
  4263d9:	add    esp,0xc
  4263dc:	pop    edi
  4263dd:	push   0xa43cde00
  4263e2:	push   0x2e
  4263e4:	push   0xffffff8e
  4263e6:	push   0xc7ba900
  4263eb:	push   0xffffffbc
  4263ed:	call   0x427088
  4263f2:	add    esp,0x14
  4263f5:	pop    esi
  4263f6:	cmp    esi,0xffffffd5
  4263f9:	je     0x426429
  4263fb:	mov    ecx,DWORD PTR [ebp-0x4]
  4263fe:	cmp    edi,DWORD PTR ds:0x439040
  426404:	jne    0x426429
  426406:	mov    edx,DWORD PTR [ebp-0x4]
  426409:	sub    DWORD PTR [ebp-0x4],ecx
  42640c:	mov    ebx,0x7cb
  426411:	cmp    ecx,DWORD PTR ds:0x439098
  426417:	je     0x426429
  426419:	mov    DWORD PTR [ebp-0x4],ebx
  42641c:	push   0x586b5b00
  426421:	call   0x426b7c
  426426:	add    esp,0x4
  426429:	pop    ebx
  42642a:	call   0x426cf9
  42642f:	leave  
  426430:	ret    0xc
  426433:	int3   
  426434:	int3   
  426435:	int3   
  426436:	int3   
  426437:	int3   
  426438:	push   ebp
  426439:	mov    ebp,esp
  42643b:	sub    esp,0x30
  42643e:	push   0xfffffff3
  426440:	push   0xeaa01500
  426445:	push   0x8800db00
  42644a:	call   0x427088
  42644f:	add    esp,0xc
  426452:	push   0xffffffa5
  426454:	push   0x14600b00
  426459:	push   0x443a1500
  42645e:	push   0x10792c00
  426463:	push   0x7a81c900
  426468:	call   0x426cf9
  42646d:	add    esp,0x14
  426470:	push   ebx
  426471:	mov    DWORD PTR [ebp-0x20],eax
  426474:	push   0x26
  426476:	push   0x35
  426478:	push   0xfffffff0
  42647a:	push   0xa870f600
  42647f:	call   0x426e8d
  426484:	add    esp,0x10
  426487:	push   esi
  426488:	push   0xb34100
  42648d:	push   0x2a
  42648f:	push   0x34253900
  426494:	call   0x426b7c
  426499:	add    esp,0xc
  42649c:	push   edi
  42649d:	test   eax,0x96c1
  4264a2:	je     0x426511
  4264a4:	mov    esi,0x6048
  4264a9:	push   0xffffffc1
  4264ab:	push   0xffffffd6
  4264ad:	call   0x426b7c
  4264b2:	add    esp,0x8
  4264b5:	push   0xffffff89
  4264b7:	push   0x46
  4264b9:	push   0x58cac000
  4264be:	call   0x426e8d
  4264c3:	add    esp,0xc
  4264c6:	push   0xffffffc8
  4264c8:	push   0x8a957900
  4264cd:	call   0x4269f3
  4264d2:	add    esp,0x8
  4264d5:	call   0x427088
  4264da:	push   0x2e
  4264dc:	push   0x78
  4264de:	push   0x7ae94900
  4264e3:	push   0x76
  4264e5:	push   0xffffffc1
  4264e7:	call   0x4269f3
  4264ec:	add    esp,0x14
  4264ef:	sub    esi,eax
  4264f1:	mov    eax,esi
  4264f3:	push   0x43e0200
  4264f8:	push   0x58907e00
  4264fd:	push   0xf8cad200
  426502:	push   0x5e
  426504:	push   0x9ae8ab00
  426509:	call   0x426b7c
  42650e:	add    esp,0x14
  426511:	push   0x452da00
  426516:	call   0x4269f3
  42651b:	add    esp,0x4
  42651e:	mov    edi,0x4a58e630
  426523:	mov    DWORD PTR [ebp-0x20],edi
  426526:	sub    edi,0x4a58e5f0
  42652c:	mov    eax,DWORD PTR ds:0x43906c
  426532:	xor    esi,esi
  426534:	add    esi,eax
  426536:	sub    DWORD PTR [ebp-0x20],esi
  426539:	push   edi
  42653a:	push   0x63
  42653c:	push   0x9aaf4700
  426541:	push   0x2
  426543:	push   0xffffffff
  426545:	call   0x426b7c
  42654a:	add    esp,0x10
  42654d:	mov    ecx,0x1a16f20b
  426552:	mov    edx,DWORD PTR [ebp-0x20]
  426555:	mov    ebx,edx
  426557:	add    DWORD PTR [ebp-0x20],ebx
  42655a:	add    ecx,0xe5e93df5
  426560:	mov    edx,DWORD PTR [ebp-0x20]
  426563:	mov    ebx,ecx
  426565:	and    ebx,edx
  426567:	add    ebx,eax
  426569:	cmp    ebx,0xffffffbd
  42656c:	je     0x426576
  42656e:	sub    ebx,eax
  426570:	sub    DWORD PTR [ebp-0x20],ecx
  426573:	and    DWORD PTR [ebp-0x20],ebx
  426576:	push   ecx
  426577:	push   0x80fd3100
  42657c:	push   0x8a8dbf00
  426581:	push   0xf86dc300
  426586:	push   0x51
  426588:	push   0x905c4800
  42658d:	call   0x426e8d
  426592:	add    esp,0x14
  426595:	push   0x1ea500
  42659a:	push   0xc04caa00
  42659f:	call   0x426e8d
  4265a4:	add    esp,0x8
  4265a7:	push   0x6b1c2
  4265ac:	push   0xffffffc5
  4265ae:	call   0x426b7c
  4265b3:	add    esp,0x4
  4265b6:	push   0x0
  4265b8:	mov    eax,DWORD PTR [ebp-0x20]
  4265bb:	mov    esi,DWORD PTR [ebp-0x20]
  4265be:	and    eax,esi
  4265c0:	cmp    eax,esi
  4265c2:	je     0x426604
  4265c4:	mov    esi,DWORD PTR [ebp-0x20]
  4265c7:	sub    eax,edi
  4265c9:	mov    ebx,0x10
  4265ce:	push   0x67
  4265d0:	push   0x907aea00
  4265d5:	push   0xffffff90
  4265d7:	push   0xaadb7900
  4265dc:	call   0x4269f3
  4265e1:	add    esp,0x10
  4265e4:	call   0x426b7c
  4265e9:	push   0xfffffff1
  4265eb:	call   0x4269f3
  4265f0:	add    esp,0x4
  4265f3:	and    esi,ebx
  4265f5:	cmp    esi,0xe6000a
  4265fb:	jne    0x426604
  4265fd:	cmp    esi,ebx
  4265ff:	jne    0x426604
  426601:	add    DWORD PTR [ebp-0x20],esi
  426604:	push   0x402b5100
  426609:	push   0x74
  42660b:	push   0x851000
  426610:	push   0xfa8b9d00
  426615:	call   0x4269f3
  42661a:	add    esp,0x10
  42661d:	mov    esi,0xf51dde22
  426622:	mov    eax,DWORD PTR [ebp-0x20]
  426625:	mov    edi,0xf3
  42662a:	sub    DWORD PTR [ebp-0x20],edi
  42662d:	call   0x426e8d
  426632:	push   0x4c428900
  426637:	push   0xffffffeb
  426639:	call   0x427088
  42663e:	add    esp,0x8
  426641:	sub    esi,0xf4da717a
  426647:	call   0x4269f3
  42664c:	push   0x6a9d0e00
  426651:	push   0xffffffa9
  426653:	push   0xffffff9a
  426655:	push   0x46
  426657:	push   0xaa0ec00
  42665c:	call   0x426e8d
  426661:	add    esp,0x14
  426664:	call   DWORD PTR [esi]
  426666:	mov    ebx,DWORD PTR ds:0x43906c
  42666c:	mov    edi,eax
  42666e:	sub    DWORD PTR [ebp-0x20],esi
  426671:	cmp    edi,DWORD PTR [ebp-0x28]
  426674:	je     0x4266fa
  42667a:	cmp    edi,0x43
  42667d:	je     0x4266fa
  42667f:	mov    esi,DWORD PTR [ebp-0x20]
  426682:	mov    ecx,DWORD PTR [ebp-0x20]
  426685:	add    ecx,ecx
  426687:	mov    DWORD PTR [ebp-0x20],edi
  42668a:	or     DWORD PTR [ebp-0x20],ebx
  42668d:	or     ecx,ebx
  42668f:	and    ecx,ebx
  426691:	cmp    esi,0x8e77
  426697:	je     0x4266fa
  426699:	xor    edx,edx
  42669b:	cmp    esi,ecx
  42669d:	je     0x4266fa
  42669f:	and    edx,eax
  4266a1:	add    DWORD PTR [ebp-0x20],ebx
  4266a4:	cmp    edx,0xffffffc5
  4266a7:	je     0x4266fa
  4266a9:	sub    edx,ebx
  4266ab:	mov    edi,eax
  4266ad:	mov    ebx,DWORD PTR [ebp-0x20]
  4266b0:	cmp    esi,0xffffffc8
  4266b3:	je     0x4266fa
  4266b5:	test   ebx,0x37
  4266bb:	je     0x4266fa
  4266bd:	test   ebx,0xf6a3
  4266c3:	jne    0x4266fa
  4266c5:	sub    edx,ecx
  4266c7:	mov    ecx,0x98
  4266cc:	add    ebx,esi
  4266ce:	or     edx,ecx
  4266d0:	and    ebx,edi
  4266d2:	cmp    ebx,DWORD PTR [ebp-0x1c]
  4266d5:	je     0x4266fa
  4266d7:	cmp    edx,0xfffffff4
  4266da:	je     0x4266fa
  4266dc:	sub    edx,esi
  4266de:	cmp    edx,0xffffff9a
  4266e1:	je     0x4266fa
  4266e3:	mov    ecx,edx
  4266e5:	mov    edi,DWORD PTR ds:0x439044
  4266eb:	xor    DWORD PTR [ebp-0x20],ebx
  4266ee:	sub    DWORD PTR [ebp-0x20],ecx
  4266f1:	and    edi,edx
  4266f3:	cmp    edx,ecx
  4266f5:	jne    0x4266fa
  4266f7:	add    DWORD PTR [ebp-0x20],edi
  4266fa:	mov    DWORD PTR [ebp-0x2c],eax
  4266fd:	push   0xffffffe5
  4266ff:	call   0x426e8d
  426704:	add    esp,0x4
  426707:	push   0x69
  426709:	push   0xffffffd1
  42670b:	push   0x80894200
  426710:	call   0x426cf9
  426715:	add    esp,0xc
  426718:	mov    esi,0x1a736db9
  42671d:	xor    DWORD PTR [ebp-0x20],esi
  426720:	add    esi,0xe5d02247
  426726:	call   0x4269f3
  42672b:	mov    DWORD PTR [ebp-0x10],esi
  42672e:	push   0xffffffb5
  426730:	push   0xfffffff5
  426732:	push   0x78c4cd00
  426737:	push   0x47
  426739:	push   0xffffffa7
  42673b:	call   0x426b7c
  426740:	add    esp,0x14
  426743:	push   0xf8a19600
  426748:	push   0x54
  42674a:	push   0xffffff91
  42674c:	push   0xd40a3100
  426751:	call   0x426b7c
  426756:	add    esp,0x10
  426759:	mov    edi,DWORD PTR [ebp-0x2c]
  42675c:	push   0xf4620d00
  426761:	push   0xffffffdc
  426763:	push   0xffffffcf
  426765:	push   0x1d
  426767:	push   0xffffffff
  426769:	call   0x4269f3
  42676e:	add    esp,0x14
  426771:	mov    ebx,DWORD PTR [ebp-0x20]
  426774:	mov    esi,DWORD PTR ds:0x439044
  42677a:	push   0x72
  42677c:	push   0xffffffdd
  42677e:	push   0x547ac000
  426783:	push   0x40dd0f00
  426788:	push   0xf442fb00
  42678d:	call   0x427088
  426792:	add    esp,0x14
  426795:	cmp    edi,0xb00254
  42679b:	je     0x4267d2
  42679d:	sub    DWORD PTR [ebp-0x20],esi
  4267a0:	test   ebx,0x5493
  4267a6:	je     0x4267d2
  4267a8:	push   0x32
  4267aa:	push   0x78
  4267ac:	push   0x7aac9400
  4267b1:	call   0x426e8d
  4267b6:	add    esp,0xc
  4267b9:	push   0x80e6f800
  4267be:	push   0xffffffdc
  4267c0:	push   0xf4335900
  4267c5:	push   0xffffff81
  4267c7:	call   0x426b7c
  4267cc:	add    esp,0x10
  4267cf:	mov    DWORD PTR [ebp-0x30],ebx
  4267d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4267d5:	push   0x4016fc00
  4267da:	call   0x426e8d
  4267df:	add    esp,0x4
  4267e2:	push   0xffffffbc
  4267e4:	push   0x4b
  4267e6:	push   0x6ae23a00
  4267eb:	push   0xd01a9500
  4267f0:	push   0xffffff9c
  4267f2:	call   0x426cf9
  4267f7:	add    esp,0x14
  4267fa:	mov    esi,DWORD PTR [ebx]
  4267fc:	sub    eax,esi
  4267fe:	sub    DWORD PTR [ebp-0x20],esi
  426801:	cmp    eax,0xffffffed
  426804:	jne    0x426809
  426806:	add    DWORD PTR [ebp-0x20],eax
  426809:	push   0x2f
  42680b:	push   0xffffffd1
  42680d:	push   0x18
  42680f:	push   0x50053100
  426814:	call   0x427088
  426819:	add    esp,0x10
  42681c:	mov    ecx,DWORD PTR [ebx+0x4]
  42681f:	sub    eax,edi
  426821:	mov    edx,0x5d
  426826:	mov    ebx,edx
  426828:	add    DWORD PTR [ebp-0x20],ebx
  42682b:	test   edi,0x50
  426831:	jne    0x426836
  426833:	sub    DWORD PTR [ebp-0x20],eax
  426836:	or     esi,esi
  426838:	je     0x4268b6
  42683a:	test   ecx,0xdaf
  426840:	jne    0x42684e
  426842:	sub    edx,eax
  426844:	cmp    edi,DWORD PTR [ebp-0x14]
  426847:	je     0x42684e
  426849:	sub    edx,eax
  42684b:	add    DWORD PTR [ebp-0x20],edx
  42684e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426850:	call   0x427088
  426855:	mov    eax,DWORD PTR ds:0x439044
  42685b:	mov    DWORD PTR [ebp-0x20],eax
  42685e:	mov    eax,DWORD PTR [ebp-0x20]
  426861:	push   0xffffffca
  426863:	push   0x35
  426865:	push   0xcc04f700
  42686a:	call   0x4269f3
  42686f:	add    esp,0xc
  426872:	add    esi,esi
  426874:	and    DWORD PTR [ebp-0x20],esi
  426877:	push   0x2e
  426879:	push   0xc0ec00
  42687e:	call   0x427088
  426883:	add    esp,0x8
  426886:	add    DWORD PTR [ebp-0x10],0x8
  42688a:	cmp    edi,0x19
  42688d:	jne    0x42689d
  42688f:	push   0x63
  426891:	push   0x45
  426893:	push   0xffffff80
  426895:	call   0x426b7c
  42689a:	add    esp,0xc
  42689d:	push   0x3c3fb000
  4268a2:	push   0x35
  4268a4:	push   0xc0c53d00
  4268a9:	call   0x4269f3
  4268ae:	add    esp,0xc
  4268b1:	jmp    0x42675c
  4268b6:	mov    ebx,DWORD PTR ds:0x439044
  4268bc:	add    DWORD PTR [ebp-0x20],ebx
  4268bf:	push   0x24019100
  4268c4:	push   0x38204a00
  4268c9:	push   0xda944000
  4268ce:	push   0xa93300
  4268d3:	call   0x426b7c
  4268d8:	add    esp,0x10
  4268db:	push   0xffffffb4
  4268dd:	push   0xffffffa8
  4268df:	push   0xf8f99e00
  4268e4:	push   0x7051ed00
  4268e9:	push   0x6075dc00
  4268ee:	call   0x4269f3
  4268f3:	add    esp,0x14
  4268f6:	mov    eax,DWORD PTR [ebp-0x2c]
  4268f9:	cmp    eax,DWORD PTR [ebp-0x1c]
  4268fc:	jne    0x426944
  4268fe:	xor    esi,esi
  426900:	mov    edi,0xb1
  426905:	and    esi,eax
  426907:	and    esi,ebx
  426909:	sub    DWORD PTR [ebp-0x20],esi
  42690c:	cmp    esi,0xa737
  426912:	jne    0x426944
  426914:	sub    edi,ebx
  426916:	mov    ecx,0x44
  42691b:	mov    DWORD PTR [ebp-0x18],edi
  42691e:	add    ecx,eax
  426920:	cmp    ecx,DWORD PTR ds:0x43906c
  426926:	je     0x426944
  426928:	add    ecx,esi
  42692a:	or     ecx,esi
  42692c:	cmp    ecx,0x280e
  426932:	jne    0x426944
  426934:	cmp    ecx,0x59
  426937:	jne    0x426944
  426939:	cmp    ecx,0x865a
  42693f:	je     0x426944
  426941:	add    DWORD PTR [ebp-0x20],ecx
  426944:	mov    edx,DWORD PTR [ebp-0x20]
  426947:	sub    edx,ebx
  426949:	mov    DWORD PTR [ebp-0x20],edx
  42694c:	pop    edi
  42694d:	mov    esi,DWORD PTR ds:0x439044
  426953:	mov    ecx,DWORD PTR [ebp-0x20]
  426956:	sub    esi,eax
  426958:	cmp    esi,0xffffffd2
  42695b:	je     0x4269bd
  42695d:	mov    ebx,0xb5
  426962:	mov    edx,0xe1
  426967:	mov    DWORD PTR [ebp-0x20],esi
  42696a:	add    edx,eax
  42696c:	cmp    ecx,DWORD PTR [ebp-0x4]
  42696f:	je     0x4269bd
  426971:	and    DWORD PTR [ebp-0x20],ecx
  426974:	sub    ebx,esi
  426976:	and    ebx,ecx
  426978:	and    ebx,edx
  42697a:	mov    edx,DWORD PTR [ebp-0x20]
  42697d:	or     edx,esi
  42697f:	and    DWORD PTR [ebp-0x20],edi
  426982:	cmp    edx,0xfc35
  426988:	jne    0x4269bd
  42698a:	mov    esi,DWORD PTR [ebp-0x20]
  42698d:	xor    ecx,ecx
  42698f:	and    DWORD PTR [ebp-0x20],ebx
  426992:	add    ecx,eax
  426994:	add    DWORD PTR [ebp-0x20],ecx
  426997:	sub    esi,ecx
  426999:	cmp    esi,0x39
  42699c:	je     0x4269bd
  42699e:	cmp    esi,0xffffffb5
  4269a1:	je     0x4269bd
  4269a3:	xor    ecx,ecx
  4269a5:	mov    ebx,0x3d
  4269aa:	sub    DWORD PTR [ebp-0x20],edx
  4269ad:	or     ecx,edi
  4269af:	xor    DWORD PTR [ebp-0x20],esi
  4269b2:	sub    DWORD PTR [ebp-0x20],ebx
  4269b5:	cmp    ecx,0x1d
  4269b8:	je     0x4269bd
  4269ba:	add    DWORD PTR [ebp-0x20],ecx
  4269bd:	pop    esi
  4269be:	sub    DWORD PTR [ebp-0x20],esi
  4269c1:	pop    ebx
  4269c2:	sub    edx,edi
  4269c4:	and    edx,edi
  4269c6:	and    edx,ecx
  4269c8:	cmp    esi,DWORD PTR ds:0x439044
  4269ce:	je     0x4269ec
  4269d0:	add    edx,eax
  4269d2:	mov    ecx,DWORD PTR [ebp-0x20]
  4269d5:	cmp    edx,0x9b6b
  4269db:	je     0x4269ec
  4269dd:	add    edx,eax
  4269df:	test   edx,0xb0b4
  4269e5:	jne    0x4269ec
  4269e7:	sub    ecx,edx
  4269e9:	add    DWORD PTR [ebp-0x20],ecx
  4269ec:	leave  
  4269ed:	ret    
  4269ee:	int3   
  4269ef:	int3   
  4269f0:	int3   
  4269f1:	int3   
  4269f2:	int3   
  4269f3:	push   ebp
  4269f4:	mov    ebp,esp
  4269f6:	sub    esp,0x20
  4269f9:	call   0x426b7c
  4269fe:	push   ebx
  4269ff:	push   0xf42c8f00
  426a04:	push   0x286bbd00
  426a09:	push   0xb82c6600
  426a0e:	call   0x426b7c
  426a13:	add    esp,0xc
  426a16:	push   0xffffff81
  426a18:	push   0x33
  426a1a:	call   0x427088
  426a1f:	add    esp,0x8
  426a22:	push   esi
  426a23:	mov    ebx,0xab
  426a28:	push   0xd8519d00
  426a2d:	push   0x4e
  426a2f:	push   0xb
  426a31:	push   0x17
  426a33:	call   0x426cf9
  426a38:	add    esp,0x10
  426a3b:	mov    DWORD PTR [ebp-0x4],eax
  426a3e:	mov    esi,DWORD PTR [ebp-0x4]
  426a41:	push   0x7d
  426a43:	push   0x7825c300
  426a48:	push   0x58896e00
  426a4d:	push   0xffffffb2
  426a4f:	call   0x426b7c
  426a54:	add    esp,0x10
  426a57:	push   0xdc19e100
  426a5c:	call   0x426cf9
  426a61:	add    esp,0x4
  426a64:	add    DWORD PTR [ebp-0x4],ebx
  426a67:	push   0xffffffe8
  426a69:	push   0x5ae42500
  426a6e:	push   0x2b
  426a70:	push   0xffffffa6
  426a72:	call   0x426cf9
  426a77:	add    esp,0x10
  426a7a:	push   0xfffffff5
  426a7c:	push   0x8c723300
  426a81:	call   0x426cf9
  426a86:	add    esp,0x8
  426a89:	add    DWORD PTR [ebp-0x4],esi
  426a8c:	push   edi
  426a8d:	push   0x5c
  426a8f:	push   0x44637500
  426a94:	push   0x12
  426a96:	push   0x38434400
  426a9b:	call   0x426b7c
  426aa0:	add    esp,0x10
  426aa3:	push   0xffffffb3
  426aa5:	push   0xffffff8f
  426aa7:	push   0xffffffa4
  426aa9:	push   0x28591a00
  426aae:	push   0x7429be00
  426ab3:	call   0x426e8d
  426ab8:	add    esp,0x14
  426abb:	cmp    eax,0x44
  426abe:	je     0x426ad7
  426ac0:	mov    edx,ebx
  426ac2:	push   0xffffffce
  426ac4:	push   0x21
  426ac6:	push   0x1
  426ac8:	push   0x27
  426aca:	push   0xf8ec1200
  426acf:	call   0x426cf9
  426ad4:	add    esp,0x14
  426ad7:	push   0xffffff81
  426ad9:	call   0x426b7c
  426ade:	add    esp,0x4
  426ae1:	push   0xffffffde
  426ae3:	push   0x80b9b600
  426ae8:	push   0x7c498500
  426aed:	call   0x426cf9
  426af2:	add    esp,0xc
  426af5:	mov    eax,0x96
  426afa:	push   0x25
  426afc:	push   0x24440300
  426b01:	call   0x426b7c
  426b06:	add    esp,0x8
  426b09:	push   0x301b0500
  426b0e:	push   0xb878c600
  426b13:	push   0x7c726000
  426b18:	push   0xae3bc00
  426b1d:	call   0x426e8d
  426b22:	add    esp,0x10
  426b25:	pop    edi
  426b26:	push   0x30172c00
  426b2b:	push   0xd41bcd00
  426b30:	call   0x426b7c
  426b35:	add    esp,0x8
  426b38:	pop    esi
  426b39:	mov    ecx,edi
  426b3b:	mov    edx,DWORD PTR [ebp-0x4]
  426b3e:	call   0x426cf9
  426b43:	call   0x426e8d
  426b48:	pop    ebx
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	add    eax,eax
  426b4e:	mov    ecx,0x8b
  426b53:	push   0x36
  426b55:	push   0xec6fad00
  426b5a:	call   0x427088
  426b5f:	add    esp,0x8
  426b62:	push   0x78e41e00
  426b67:	push   0x7
  426b69:	push   0xffffffd5
  426b6b:	push   0x2c
  426b6d:	call   0x426b7c
  426b72:	add    esp,0x10
  426b75:	leave  
  426b76:	ret    
  426b77:	int3   
  426b78:	int3   
  426b79:	int3   
  426b7a:	int3   
  426b7b:	int3   
  426b7c:	push   ebp
  426b7d:	mov    ebp,esp
  426b7f:	sub    esp,0x20
  426b82:	xor    edx,edx
  426b84:	mov    DWORD PTR [ebp-0x1c],edx
  426b87:	push   ebx
  426b88:	add    DWORD PTR [ebp-0x1c],edx
  426b8b:	push   esi
  426b8c:	xor    edx,edx
  426b8e:	mov    esi,edx
  426b90:	sub    DWORD PTR [ebp-0x1c],edx
  426b93:	or     DWORD PTR [ebp-0x1c],esi
  426b96:	push   edi
  426b97:	add    DWORD PTR [ebp-0x1c],edx
  426b9a:	and    edx,esi
  426b9c:	sub    edx,esi
  426b9e:	sub    DWORD PTR [ebp-0x1c],edx
  426ba1:	mov    edx,0x1f
  426ba6:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba9:	sub    esi,edx
  426bab:	cmp    esi,DWORD PTR [ebp-0x8]
  426bae:	je     0x426bb5
  426bb0:	sub    esi,edx
  426bb2:	or     DWORD PTR [ebp-0x1c],esi
  426bb5:	add    DWORD PTR [ebp-0x1c],esi
  426bb8:	pop    edi
  426bb9:	xor    edx,edx
  426bbb:	add    edx,edx
  426bbd:	cmp    edi,DWORD PTR [ebp-0x4]
  426bc0:	je     0x426cd0
  426bc6:	mov    eax,0x5fb6
  426bcb:	sub    edx,eax
  426bcd:	mov    ecx,DWORD PTR [ebp-0x1c]
  426bd0:	cmp    edi,edx
  426bd2:	je     0x426cd0
  426bd8:	mov    esi,DWORD PTR [ebp-0x1c]
  426bdb:	mov    DWORD PTR [ebp-0x1c],edi
  426bde:	add    ecx,eax
  426be0:	mov    eax,0x2f
  426be5:	add    DWORD PTR [ebp-0x1c],edx
  426be8:	cmp    esi,0x5d07
  426bee:	je     0x426cd0
  426bf4:	or     esi,edi
  426bf6:	mov    ebx,DWORD PTR ds:0x43908c
  426bfc:	mov    eax,0xba
  426c01:	sub    ebx,edx
  426c03:	and    ecx,edx
  426c05:	sub    eax,ebx
  426c07:	test   ecx,0xa2
  426c0d:	je     0x426cd0
  426c13:	mov    edx,DWORD PTR ds:0x43908c
  426c19:	mov    ebx,DWORD PTR [ebp-0x1c]
  426c1c:	sub    DWORD PTR [ebp-0x1c],ebx
  426c1f:	and    esi,eax
  426c21:	cmp    esi,DWORD PTR [ebp-0x18]
  426c24:	jne    0x426cd0
  426c2a:	xor    ebx,ebx
  426c2c:	mov    eax,DWORD PTR [ebp-0x1c]
  426c2f:	cmp    eax,DWORD PTR ds:0x43908c
  426c35:	jne    0x426cd0
  426c3b:	or     ecx,edx
  426c3d:	mov    edx,DWORD PTR [ebp-0x1c]
  426c40:	add    ebx,edi
  426c42:	add    ecx,esi
  426c44:	add    edx,edx
  426c46:	cmp    eax,DWORD PTR [ebp-0x4]
  426c49:	jne    0x426cd0
  426c4f:	cmp    eax,DWORD PTR [ebp-0x8]
  426c52:	je     0x426cd0
  426c54:	cmp    ecx,0xffffff9d
  426c57:	je     0x426cd0
  426c59:	or     ebx,ecx
  426c5b:	add    ebx,ecx
  426c5d:	sub    eax,edi
  426c5f:	or     edx,ecx
  426c61:	mov    esi,DWORD PTR [ebp-0x1c]
  426c64:	mov    ecx,0x305c
  426c69:	sub    esi,edx
  426c6b:	add    eax,edx
  426c6d:	add    DWORD PTR [ebp-0x1c],ecx
  426c70:	add    DWORD PTR [ebp-0x1c],esi
  426c73:	cmp    ebx,0x2eca
  426c79:	je     0x426cd0
  426c7b:	sub    ebx,edx
  426c7d:	test   eax,0x65
  426c82:	jne    0x426cd0
  426c84:	mov    edx,0x15
  426c89:	sub    DWORD PTR [ebp-0x1c],eax
  426c8c:	mov    ecx,0x9c
  426c91:	cmp    ebx,DWORD PTR [ebp-0x14]
  426c94:	jne    0x426cd0
  426c96:	add    ecx,edi
  426c98:	and    ecx,ebx
  426c9a:	add    edx,edi
  426c9c:	cmp    edx,0xf
  426c9f:	je     0x426cd0
  426ca1:	mov    ebx,DWORD PTR [ebp-0x1c]
  426ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  426ca7:	add    edx,eax
  426ca9:	mov    DWORD PTR [ebp-0x10],edx
  426cac:	xor    DWORD PTR [ebp-0x1c],ebx
  426caf:	test   edi,0x4f
  426cb5:	jne    0x426cd0
  426cb7:	mov    ebx,DWORD PTR [ebp-0x1c]
  426cba:	mov    esi,0xbe
  426cbf:	mov    DWORD PTR [ebp-0x10],ebx
  426cc2:	test   ecx,0xca
  426cc8:	jne    0x426ccd
  426cca:	add    DWORD PTR [ebp-0x10],ecx
  426ccd:	sub    DWORD PTR [ebp-0x10],esi
  426cd0:	pop    esi
  426cd1:	cmp    esi,0x52
  426cd4:	jne    0x426cd9
  426cd6:	xor    DWORD PTR [ebp-0x1c],esi
  426cd9:	pop    ebx
  426cda:	cmp    ebx,edx
  426cdc:	je     0x426cf2
  426cde:	cmp    ebx,DWORD PTR [ebp-0x1c]
  426ce1:	jne    0x426cf2
  426ce3:	mov    eax,DWORD PTR [ebp-0x1c]
  426ce6:	cmp    ebx,eax
  426ce8:	je     0x426cf2
  426cea:	add    DWORD PTR [ebp-0x1c],ebx
  426ced:	add    eax,edi
  426cef:	add    DWORD PTR [ebp-0x1c],eax
  426cf2:	leave  
  426cf3:	ret    
  426cf4:	int3   
  426cf5:	int3   
  426cf6:	int3   
  426cf7:	int3   
  426cf8:	int3   
  426cf9:	push   ebp
  426cfa:	mov    ebp,esp
  426cfc:	sub    esp,0x24
  426cff:	mov    eax,0xf9
  426d04:	mov    edx,eax
  426d06:	mov    DWORD PTR [ebp-0x14],edx
  426d09:	push   ebx
  426d0a:	sub    eax,edx
  426d0c:	mov    ecx,DWORD PTR [ebp-0x14]
  426d0f:	mov    edx,DWORD PTR [ebp-0x14]
  426d12:	cmp    ecx,DWORD PTR [ebp-0x10]
  426d15:	jne    0x426d53
  426d17:	add    edx,ecx
  426d19:	mov    ecx,DWORD PTR [ebp-0x14]
  426d1c:	mov    ebx,DWORD PTR [ebp-0x14]
  426d1f:	cmp    ecx,DWORD PTR [ebp-0x10]
  426d22:	je     0x426d53
  426d24:	mov    eax,DWORD PTR ds:0x439090
  426d2a:	or     DWORD PTR [ebp-0x14],edx
  426d2d:	mov    edx,DWORD PTR [ebp-0x14]
  426d30:	and    DWORD PTR [ebp-0x14],eax
  426d33:	and    ecx,ebx
  426d35:	cmp    edx,DWORD PTR ds:0x439090
  426d3b:	je     0x426d53
  426d3d:	cmp    ecx,0xc7cc
  426d43:	jne    0x426d53
  426d45:	add    DWORD PTR [ebp-0x14],ecx
  426d48:	cmp    ecx,DWORD PTR ds:0x439090
  426d4e:	jne    0x426d53
  426d50:	add    DWORD PTR [ebp-0x14],edx
  426d53:	push   esi
  426d54:	or     DWORD PTR [ebp-0x14],ecx
  426d57:	push   edi
  426d58:	mov    edx,0x26
  426d5d:	sub    DWORD PTR [ebp-0x14],edx
  426d60:	mov    edx,DWORD PTR [ebp-0x14]
  426d63:	mov    ecx,0xf4
  426d68:	sub    edx,eax
  426d6a:	cmp    edx,0x246c
  426d70:	jne    0x426e02
  426d76:	mov    ebx,DWORD PTR [ebp-0x14]
  426d79:	mov    esi,0x94
  426d7e:	test   edx,0x6d
  426d84:	jne    0x426e02
  426d86:	xor    eax,eax
  426d88:	xor    DWORD PTR [ebp-0x14],ecx
  426d8b:	and    eax,ebx
  426d8d:	mov    edi,DWORD PTR [ebp-0x14]
  426d90:	add    DWORD PTR [ebp-0x14],eax
  426d93:	add    DWORD PTR [ebp-0x14],ebx
  426d96:	cmp    edi,DWORD PTR ds:0x439090
  426d9c:	jne    0x426e02
  426d9e:	cmp    edi,0x35
  426da1:	je     0x426e02
  426da3:	sub    DWORD PTR [ebp-0x14],ebx
  426da6:	cmp    edi,0x6305
  426dac:	jne    0x426e02
  426dae:	sub    DWORD PTR [ebp-0x14],esi
  426db1:	cmp    edi,DWORD PTR [ebp-0x14]
  426db4:	jne    0x426e02
  426db6:	add    edx,edx
  426db8:	and    edx,ebx
  426dba:	cmp    edx,0xffffffee
  426dbd:	jne    0x426e02
  426dbf:	mov    ecx,DWORD PTR [ebp-0x14]
  426dc2:	mov    esi,0xee01
  426dc7:	cmp    edi,DWORD PTR ds:0x439090
  426dcd:	jne    0x426e02
  426dcf:	cmp    edx,DWORD PTR ds:0x439090
  426dd5:	je     0x426e02
  426dd7:	xor    DWORD PTR [ebp-0x14],edi
  426dda:	sub    DWORD PTR [ebp-0x14],edx
  426ddd:	sub    DWORD PTR [ebp-0x14],edx
  426de0:	mov    eax,DWORD PTR ds:0x43905c
  426de6:	mov    ebx,DWORD PTR [ebp-0x14]
  426de9:	add    DWORD PTR [ebp-0x14],ecx
  426dec:	or     eax,edi
  426dee:	add    eax,ecx
  426df0:	or     eax,edx
  426df2:	add    DWORD PTR [ebp-0x14],eax
  426df5:	add    esi,eax
  426df7:	mov    DWORD PTR [ebp-0x8],esi
  426dfa:	cmp    ebx,DWORD PTR [ebp-0x4]
  426dfd:	je     0x426e02
  426dff:	sub    DWORD PTR [ebp-0x14],ebx
  426e02:	xor    DWORD PTR [ebp-0x14],edi
  426e05:	sub    DWORD PTR [ebp-0x14],eax
  426e08:	pop    edi
  426e09:	and    ecx,edi
  426e0b:	mov    eax,0xff
  426e10:	mov    esi,DWORD PTR [ebp-0x14]
  426e13:	sub    eax,edx
  426e15:	sub    eax,edi
  426e17:	add    ecx,ebx
  426e19:	sub    DWORD PTR [ebp-0x14],eax
  426e1c:	cmp    esi,0x41
  426e1f:	je     0x426e52
  426e21:	xor    eax,eax
  426e23:	add    DWORD PTR [ebp-0x14],eax
  426e26:	mov    eax,0xe
  426e2b:	and    eax,ecx
  426e2d:	test   eax,0x6c
  426e32:	jne    0x426e52
  426e34:	add    eax,edi
  426e36:	mov    DWORD PTR [ebp-0x14],esi
  426e39:	mov    esi,DWORD PTR ds:0x439090
  426e3f:	mov    DWORD PTR [ebp-0x14],esi
  426e42:	or     eax,edi
  426e44:	and    eax,edx
  426e46:	mov    ecx,DWORD PTR ds:0x439090
  426e4c:	mov    DWORD PTR [ebp-0x14],eax
  426e4f:	sub    DWORD PTR [ebp-0x14],ecx
  426e52:	pop    esi
  426e53:	add    DWORD PTR [ebp-0x14],esi
  426e56:	pop    ebx
  426e57:	mov    eax,0xa6de
  426e5c:	add    DWORD PTR [ebp-0x14],ebx
  426e5f:	add    eax,ebx
  426e61:	mov    ecx,ebx
  426e63:	cmp    eax,ebx
  426e65:	jne    0x426e86
  426e67:	add    eax,edi
  426e69:	mov    edx,DWORD PTR ds:0x43905c
  426e6f:	add    ecx,eax
  426e71:	cmp    ecx,DWORD PTR [ebp-0x8]
  426e74:	jne    0x426e86
  426e76:	mov    eax,0xbf
  426e7b:	xor    DWORD PTR [ebp-0x14],edx
  426e7e:	add    DWORD PTR [ebp-0x14],eax
  426e81:	sub    ecx,edx
  426e83:	add    DWORD PTR [ebp-0x14],ecx
  426e86:	leave  
  426e87:	ret    
  426e88:	int3   
  426e89:	int3   
  426e8a:	int3   
  426e8b:	int3   
  426e8c:	int3   
  426e8d:	push   ebp
  426e8e:	mov    ebp,esp
  426e90:	sub    esp,0x24
  426e93:	xor    ecx,ecx
  426e95:	mov    DWORD PTR [ebp-0x8],ecx
  426e98:	push   ebx
  426e99:	mov    ecx,0x8c
  426e9e:	mov    ebx,DWORD PTR ds:0x43904c
  426ea4:	add    DWORD PTR [ebp-0x8],ebx
  426ea7:	add    ecx,ecx
  426ea9:	sub    ecx,ebx
  426eab:	add    DWORD PTR [ebp-0x8],ecx
  426eae:	push   esi
  426eaf:	mov    eax,DWORD PTR [ebp-0x8]
  426eb2:	xor    esi,esi
  426eb4:	add    esi,esi
  426eb6:	add    DWORD PTR [ebp-0x8],eax
  426eb9:	sub    DWORD PTR [ebp-0x8],esi
  426ebc:	push   edi
  426ebd:	mov    edi,DWORD PTR [ebp-0x8]
  426ec0:	mov    edx,DWORD PTR [ebp-0x8]
  426ec3:	add    DWORD PTR [ebp-0x8],edi
  426ec6:	add    DWORD PTR [ebp-0x8],edx
  426ec9:	mov    ecx,0xfeaa
  426ece:	and    DWORD PTR [ebp-0x8],ecx
  426ed1:	add    ecx,eax
  426ed3:	add    DWORD PTR [ebp-0x8],ecx
  426ed6:	mov    edx,DWORD PTR [ebp-0x8]
  426ed9:	mov    esi,DWORD PTR [ebp-0x8]
  426edc:	and    esi,ebx
  426ede:	sub    edx,eax
  426ee0:	or     DWORD PTR [ebp-0x8],ecx
  426ee3:	cmp    edx,esi
  426ee5:	jne    0x426f32
  426ee7:	cmp    edx,DWORD PTR [ebp-0x20]
  426eea:	jne    0x426f32
  426eec:	or     edx,ecx
  426eee:	xor    ebx,ebx
  426ef0:	cmp    esi,0x415e
  426ef6:	jne    0x426f32
  426ef8:	mov    ecx,DWORD PTR [ebp-0x8]
  426efb:	mov    edi,0x4175
  426f00:	sub    DWORD PTR [ebp-0x8],edi
  426f03:	add    DWORD PTR [ebp-0x8],esi
  426f06:	add    edx,edi
  426f08:	add    ecx,ebx
  426f0a:	add    DWORD PTR [ebp-0x8],ecx
  426f0d:	cmp    edx,DWORD PTR ds:0x43904c
  426f13:	jne    0x426f32
  426f15:	cmp    edx,eax
  426f17:	jne    0x426f32
  426f19:	sub    edx,edi
  426f1b:	xor    eax,eax
  426f1d:	xor    edi,edi
  426f1f:	or     edx,ecx
  426f21:	test   edx,0xa8
  426f27:	je     0x426f32
  426f29:	add    DWORD PTR [ebp-0x8],edi
  426f2c:	or     DWORD PTR [ebp-0x8],eax
  426f2f:	sub    DWORD PTR [ebp-0x8],edx
  426f32:	pop    edi
  426f33:	mov    edx,0xbb
  426f38:	mov    ecx,ebx
  426f3a:	sub    ecx,edx
  426f3c:	sub    DWORD PTR [ebp-0x8],ecx
  426f3f:	pop    esi
  426f40:	cmp    edi,DWORD PTR ds:0x43904c
  426f46:	jne    0x426f4b
  426f48:	sub    DWORD PTR [ebp-0x8],edi
  426f4b:	pop    ebx
  426f4c:	mov    edx,0x4
  426f51:	mov    edx,DWORD PTR [ebp-0x8]
  426f54:	cmp    edx,0xa850
  426f5a:	jne    0x427081
  426f60:	sub    DWORD PTR [ebp-0x8],ecx
  426f63:	add    DWORD PTR [ebp-0x8],edi
  426f66:	cmp    esi,0xfffffff8
  426f69:	jne    0x427081
  426f6f:	mov    ecx,ebx
  426f71:	sub    DWORD PTR [ebp-0x8],ecx
  426f74:	xor    eax,eax
  426f76:	sub    DWORD PTR [ebp-0x8],edi
  426f79:	test   esi,0x3e
  426f7f:	jne    0x427081
  426f85:	xor    ecx,ecx
  426f87:	add    ecx,edi
  426f89:	cmp    ecx,DWORD PTR ds:0x43904c
  426f8f:	je     0x427081
  426f95:	test   edi,0x55
  426f9b:	jne    0x427081
  426fa1:	or     edx,eax
  426fa3:	cmp    edx,DWORD PTR ds:0x43904c
  426fa9:	jne    0x427081
  426faf:	sub    ecx,edx
  426fb1:	cmp    ecx,esi
  426fb3:	je     0x427081
  426fb9:	or     ecx,edx
  426fbb:	add    ecx,ecx
  426fbd:	mov    edx,DWORD PTR ds:0x43904c
  426fc3:	add    DWORD PTR [ebp-0x8],edx
  426fc6:	cmp    edi,0xffffffa9
  426fc9:	jne    0x427081
  426fcf:	mov    edx,0x7a3e
  426fd4:	mov    eax,esi
  426fd6:	cmp    esi,0xc96
  426fdc:	je     0x427081
  426fe2:	test   eax,0x45
  426fe7:	je     0x427081
  426fed:	sub    ecx,eax
  426fef:	test   esi,0x54
  426ff5:	jne    0x427081
  426ffb:	add    ecx,eax
  426ffd:	cmp    ecx,0xfffffffb
  427000:	jne    0x427081
  427002:	mov    edx,DWORD PTR [ebp-0x8]
  427005:	sub    ecx,edi
  427007:	mov    eax,DWORD PTR [ebp-0x8]
  42700a:	mov    DWORD PTR [ebp-0x8],eax
  42700d:	sub    DWORD PTR [ebp-0x8],edi
  427010:	cmp    ecx,0x53
  427013:	je     0x427081
  427015:	cmp    edx,DWORD PTR ds:0x43904c
  42701b:	je     0x427081
  42701d:	mov    eax,DWORD PTR [ebp-0x8]
  427020:	sub    edx,esi
  427022:	and    edx,edi
  427024:	sub    ecx,edx
  427026:	test   ecx,0x65
  42702c:	jne    0x427081
  42702e:	mov    edx,DWORD PTR [ebp-0x8]
  427031:	sub    eax,ecx
  427033:	or     DWORD PTR [ebp-0x8],eax
  427036:	mov    ecx,DWORD PTR [ebp-0x8]
  427039:	sub    ecx,edx
  42703b:	add    ecx,ebx
  42703d:	cmp    ecx,0x68d40002
  427043:	je     0x427081
  427045:	cmp    ecx,DWORD PTR [ebp-0x24]
  427048:	jne    0x427081
  42704a:	sub    ecx,eax
  42704c:	cmp    ecx,0xffffffc1
  42704f:	jne    0x427081
  427051:	and    ecx,ebx
  427053:	cmp    ecx,edx
  427055:	je     0x427081
  427057:	add    ecx,edx
  427059:	sub    DWORD PTR [ebp-0x8],edi
  42705c:	xor    edx,edx
  42705e:	mov    eax,0x37
  427063:	cmp    edi,0xfffffff0
  427066:	je     0x427081
  427068:	and    eax,ecx
  42706a:	mov    ecx,DWORD PTR ds:0x43904c
  427070:	sub    ecx,esi
  427072:	sub    DWORD PTR [ebp-0x8],eax
  427075:	add    DWORD PTR [ebp-0x8],esi
  427078:	add    DWORD PTR [ebp-0x8],edx
  42707b:	or     DWORD PTR [ebp-0x8],esi
  42707e:	sub    DWORD PTR [ebp-0x8],ecx
  427081:	leave  
  427082:	ret    
  427083:	int3   
  427084:	int3   
  427085:	int3   
  427086:	int3   
  427087:	int3   
  427088:	push   ebp
  427089:	mov    ebp,esp
  42708b:	sub    esp,0x20
  42708e:	xor    ecx,ecx
  427090:	mov    eax,0x7950
  427095:	sub    ecx,eax
  427097:	and    ecx,eax
  427099:	mov    DWORD PTR [ebp-0x10],ecx
  42709c:	push   ebx
  42709d:	and    DWORD PTR [ebp-0x10],eax
  4270a0:	push   esi
  4270a1:	mov    eax,DWORD PTR [ebp-0x10]
  4270a4:	mov    ebx,0xd1
  4270a9:	cmp    eax,ebx
  4270ab:	je     0x4270bd
  4270ad:	sub    DWORD PTR [ebp-0x10],ecx
  4270b0:	sub    DWORD PTR [ebp-0x10],ebx
  4270b3:	cmp    eax,0xafc8
  4270b8:	jne    0x4270bd
  4270ba:	sub    DWORD PTR [ebp-0x10],eax
  4270bd:	push   edi
  4270be:	mov    edi,DWORD PTR [ebp-0x10]
  4270c1:	mov    ebx,0x67
  4270c6:	sub    ebx,eax
  4270c8:	cmp    ebx,ecx
  4270ca:	jne    0x4270ec
  4270cc:	mov    edx,DWORD PTR [ebp-0x10]
  4270cf:	cmp    eax,0xffffffb8
  4270d2:	je     0x4270ec
  4270d4:	mov    eax,0xc1
  4270d9:	mov    esi,DWORD PTR [ebp-0x10]
  4270dc:	mov    DWORD PTR [ebp-0x10],esi
  4270df:	and    edx,edi
  4270e1:	add    DWORD PTR [ebp-0x10],edx
  4270e4:	and    ebx,ecx
  4270e6:	sub    DWORD PTR [ebp-0x10],ebx
  4270e9:	or     DWORD PTR [ebp-0x10],eax
  4270ec:	mov    ebx,eax
  4270ee:	sub    ebx,ecx
  4270f0:	add    ebx,eax
  4270f2:	xor    DWORD PTR [ebp-0x10],ebx
  4270f5:	add    ebx,eax
  4270f7:	add    ebx,eax
  4270f9:	mov    esi,DWORD PTR [ebp-0x10]
  4270fc:	add    ebx,edi
  4270fe:	add    DWORD PTR [ebp-0x10],ebx
  427101:	sub    DWORD PTR [ebp-0x10],ebx
  427104:	sub    DWORD PTR [ebp-0x10],edi
  427107:	cmp    esi,0x7b
  42710a:	jne    0x427270
  427110:	mov    edx,DWORD PTR [ebp-0x10]
  427113:	sub    esi,eax
  427115:	xor    edi,edi
  427117:	add    DWORD PTR [ebp-0x10],esi
  42711a:	test   edx,0xd3
  427120:	jne    0x427270
  427126:	sub    DWORD PTR [ebp-0x10],edi
  427129:	mov    ecx,DWORD PTR [ebp-0x10]
  42712c:	sub    DWORD PTR [ebp-0x10],edx
  42712f:	or     ecx,eax
  427131:	mov    edx,0x101f
  427136:	cmp    ecx,DWORD PTR [ebp-0x8]
  427139:	je     0x427270
  42713f:	add    DWORD PTR [ebp-0x10],eax
  427142:	mov    edi,DWORD PTR [ebp-0x10]
  427145:	add    DWORD PTR [ebp-0x10],ecx
  427148:	add    edi,esi
  42714a:	mov    ecx,0x11
  42714f:	add    ecx,eax
  427151:	cmp    esi,DWORD PTR [ebp-0x14]
  427154:	jne    0x427270
  42715a:	xor    ebx,ebx
  42715c:	and    ebx,esi
  42715e:	cmp    edi,ebx
  427160:	jne    0x427270
  427166:	mov    edx,0xf2
  42716b:	mov    eax,DWORD PTR [ebp-0x10]
  42716e:	cmp    edi,ebx
  427170:	jne    0x427270
  427176:	mov    DWORD PTR [ebp-0x10],ecx
  427179:	test   edi,0x5e93
  42717f:	jne    0x427270
  427185:	and    edi,esi
  427187:	mov    ecx,DWORD PTR [ebp-0x10]
  42718a:	cmp    eax,0x35
  42718d:	je     0x427270
  427193:	cmp    eax,DWORD PTR [ebp-0xc]
  427196:	je     0x427270
  42719c:	add    DWORD PTR [ebp-0x10],ebx
  42719f:	and    edx,ecx
  4271a1:	mov    esi,DWORD PTR [ebp-0x10]
  4271a4:	xor    ebx,ebx
  4271a6:	cmp    edi,ebx
  4271a8:	je     0x427270
  4271ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4271b1:	add    DWORD PTR [ebp-0x10],edi
  4271b4:	add    DWORD PTR [ebp-0x10],eax
  4271b7:	sub    DWORD PTR [ebp-0x10],esi
  4271ba:	add    DWORD PTR [ebp-0x10],ebx
  4271bd:	sub    edx,ecx
  4271bf:	add    edx,eax
  4271c1:	cmp    edx,0xffffffa5
  4271c4:	je     0x427270
  4271ca:	sub    DWORD PTR [ebp-0x10],ebx
  4271cd:	mov    eax,esi
  4271cf:	cmp    edx,DWORD PTR [ebp-0xc]
  4271d2:	jne    0x427270
  4271d8:	xor    ebx,ebx
  4271da:	sub    DWORD PTR [ebp-0x10],ebx
  4271dd:	mov    edi,DWORD PTR [ebp-0x10]
  4271e0:	and    DWORD PTR [ebp-0x10],eax
  4271e3:	cmp    edx,DWORD PTR [ebp-0xc]
  4271e6:	jne    0x427270
  4271ec:	add    edx,edi
  4271ee:	cmp    eax,DWORD PTR [ebp-0x10]
  4271f1:	je     0x427270
  4271f3:	add    DWORD PTR [ebp-0x10],esi
  4271f6:	sub    edx,eax
  4271f8:	sub    edx,ebx
  4271fa:	mov    eax,DWORD PTR [ebp-0x10]
  4271fd:	sub    DWORD PTR [ebp-0x10],eax
  427200:	sub    edx,edi
  427202:	mov    eax,DWORD PTR [ebp-0x10]
  427205:	and    eax,ebx
  427207:	test   eax,0x4c0
  42720c:	je     0x427270
  42720e:	cmp    eax,DWORD PTR [ebp-0x14]
  427211:	jne    0x427270
  427213:	add    eax,ebx
  427215:	add    DWORD PTR [ebp-0x10],edx
  427218:	mov    ecx,DWORD PTR ds:0x439094
  42721e:	sub    ecx,edx
  427220:	cmp    eax,0x3f4c
  427225:	je     0x427270
  427227:	mov    ebx,DWORD PTR [ebp-0x10]
  42722a:	sub    DWORD PTR [ebp-0x10],ecx
  42722d:	mov    edx,0xfeb4
  427232:	cmp    eax,0xfbbb
  427237:	je     0x427270
  427239:	mov    edi,esi
  42723b:	mov    esi,0x65
  427240:	add    edx,ebx
  427242:	sub    DWORD PTR [ebp-0x10],esi
  427245:	add    edi,ecx
  427247:	cmp    edx,ecx
  427249:	je     0x427270
  42724b:	mov    ecx,DWORD PTR [ebp-0x10]
  42724e:	sub    DWORD PTR [ebp-0x10],edi
  427251:	mov    ebx,DWORD PTR ds:0x439094
  427257:	or     DWORD PTR [ebp-0x10],eax
  42725a:	or     DWORD PTR [ebp-0x10],edx
  42725d:	and    ecx,edi
  42725f:	add    DWORD PTR [ebp-0x10],ecx
  427262:	add    ebx,edx
  427264:	sub    DWORD PTR [ebp-0x10],edi
  427267:	sub    ebx,ecx
  427269:	sub    ebx,eax
  42726b:	and    ebx,esi
  42726d:	add    DWORD PTR [ebp-0x10],ebx
  427270:	cmp    eax,0x1338
  427275:	je     0x42729b
  427277:	and    eax,edx
  427279:	mov    edx,edi
  42727b:	cmp    edx,DWORD PTR [ebp-0x10]
  42727e:	jne    0x42729b
  427280:	mov    DWORD PTR [ebp-0x10],edx
  427283:	and    eax,esi
  427285:	xor    esi,esi
  427287:	mov    DWORD PTR [ebp-0x10],esi
  42728a:	cmp    eax,esi
  42728c:	jne    0x42729b
  42728e:	mov    esi,edx
  427290:	sub    eax,ebx
  427292:	sub    DWORD PTR [ebp-0x10],eax
  427295:	sub    DWORD PTR [ebp-0x10],eax
  427298:	and    DWORD PTR [ebp-0x10],esi
  42729b:	and    DWORD PTR [ebp-0x10],edx
  42729e:	pop    edi
  42729f:	mov    esi,edx
  4272a1:	xor    eax,eax
  4272a3:	add    esi,edx
  4272a5:	sub    DWORD PTR [ebp-0x10],eax
  4272a8:	cmp    esi,0x7a
  4272ab:	je     0x4272dd
  4272ad:	cmp    edi,0xa329
  4272b3:	jne    0x4272dd
  4272b5:	add    DWORD PTR [ebp-0x10],edi
  4272b8:	and    esi,edi
  4272ba:	mov    ebx,0x50
  4272bf:	mov    edx,0x4b
  4272c4:	cmp    esi,0x32
  4272c7:	je     0x4272dd
  4272c9:	mov    eax,0xad
  4272ce:	sub    DWORD PTR [ebp-0x10],eax
  4272d1:	add    edx,edx
  4272d3:	and    edx,esi
  4272d5:	add    DWORD PTR [ebp-0x10],edx
  4272d8:	sub    ebx,eax
  4272da:	add    DWORD PTR [ebp-0x10],ebx
  4272dd:	pop    esi
  4272de:	mov    ecx,DWORD PTR [ebp-0x10]
  4272e1:	or     DWORD PTR [ebp-0x10],ecx
  4272e4:	pop    ebx
  4272e5:	cmp    ebx,edx
  4272e7:	je     0x427303
  4272e9:	add    edx,esi
  4272eb:	mov    eax,0x5a
  4272f0:	mov    ecx,DWORD PTR ds:0x439070
  4272f6:	cmp    edx,DWORD PTR [ebp-0x18]
  4272f9:	je     0x427303
  4272fb:	add    ecx,eax
  4272fd:	sub    DWORD PTR [ebp-0x10],edx
  427300:	add    DWORD PTR [ebp-0x10],ecx
  427303:	leave  
  427304:	ret    
