
ec7167294c8a5f1cad597c35cf61f6d8b076b3f9a865771e4224965865fa5953.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x4182e4
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x4182e8,0x4017d4
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x4182e8,0x4173a8
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x1431
  4011d2:	mov    DWORD PTR ds:0x4182ec,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x4182ec
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x4182f0
  401227:	call   DWORD PTR ds:0x4181f8
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x2b8
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x4183f4,ebp
  401280:	mov    DWORD PTR [ebp-0x294],0x0
  40128a:	push   0x418074
  40128f:	push   0x418084
  401294:	call   DWORD PTR ds:0x4181fc
  40129a:	push   eax
  40129b:	call   DWORD PTR ds:0x418200
  4012a1:	mov    DWORD PTR [ebp-0x27c],eax
  4012a7:	lea    eax,[ebp-0x258]
  4012ad:	push   eax
  4012ae:	push   0x20019
  4012b3:	push   0x0
  4012b5:	push   0x4182d0
  4012ba:	push   0x80000002
  4012bf:	call   DWORD PTR [ebp-0x27c]
  4012c5:	test   eax,eax
  4012c7:	je     0x4012d0
  4012c9:	xor    eax,eax
  4012cb:	jmp    0x4017cb
  4012d0:	lea    ecx,[ebp-0x258]
  4012d6:	push   ecx
  4012d7:	push   0x20019
  4012dc:	push   0x0
  4012de:	push   0x418090
  4012e3:	mov    edx,DWORD PTR [ebp-0x258]
  4012e9:	push   edx
  4012ea:	call   DWORD PTR [ebp-0x27c]
  4012f0:	test   eax,eax
  4012f2:	je     0x4012fb
  4012f4:	xor    eax,eax
  4012f6:	jmp    0x4017cb
  4012fb:	lea    eax,[ebp-0x258]
  401301:	push   eax
  401302:	push   0x20019
  401307:	push   0x0
  401309:	push   0x4180a4
  40130e:	mov    ecx,DWORD PTR [ebp-0x258]
  401314:	push   ecx
  401315:	call   DWORD PTR [ebp-0x27c]
  40131b:	test   eax,eax
  40131d:	je     0x401326
  40131f:	xor    eax,eax
  401321:	jmp    0x4017cb
  401326:	lea    edx,[ebp-0x258]
  40132c:	push   edx
  40132d:	push   0x20019
  401332:	push   0x0
  401334:	push   0x4180b4
  401339:	mov    eax,DWORD PTR [ebp-0x258]
  40133f:	push   eax
  401340:	call   DWORD PTR [ebp-0x27c]
  401346:	test   eax,eax
  401348:	je     0x401351
  40134a:	xor    eax,eax
  40134c:	jmp    0x4017cb
  401351:	lea    ecx,[ebp-0x258]
  401357:	push   ecx
  401358:	push   0x20019
  40135d:	push   0x0
  40135f:	push   0x4182d4
  401364:	mov    edx,DWORD PTR [ebp-0x258]
  40136a:	push   edx
  40136b:	call   DWORD PTR [ebp-0x27c]
  401371:	test   eax,eax
  401373:	je     0x40137c
  401375:	xor    eax,eax
  401377:	jmp    0x4017cb
  40137c:	lea    eax,[ebp-0x258]
  401382:	push   eax
  401383:	push   0x20019
  401388:	push   0x0
  40138a:	push   0x4182d8
  40138f:	mov    ecx,DWORD PTR [ebp-0x258]
  401395:	push   ecx
  401396:	call   DWORD PTR [ebp-0x27c]
  40139c:	test   eax,eax
  40139e:	je     0x4013a7
  4013a0:	xor    eax,eax
  4013a2:	jmp    0x4017cb
  4013a7:	lea    edx,[ebp-0x258]
  4013ad:	push   edx
  4013ae:	push   0x20019
  4013b3:	push   0x0
  4013b5:	push   0x4182dc
  4013ba:	mov    eax,DWORD PTR [ebp-0x258]
  4013c0:	push   eax
  4013c1:	call   DWORD PTR [ebp-0x27c]
  4013c7:	test   eax,eax
  4013c9:	je     0x4013d2
  4013cb:	xor    eax,eax
  4013cd:	jmp    0x4017cb
  4013d2:	lea    ecx,[ebp-0x258]
  4013d8:	push   ecx
  4013d9:	push   0x20019
  4013de:	push   0x0
  4013e0:	push   0x4180c0
  4013e5:	mov    edx,DWORD PTR [ebp-0x258]
  4013eb:	push   edx
  4013ec:	call   DWORD PTR [ebp-0x27c]
  4013f2:	test   eax,eax
  4013f4:	je     0x40140a
  4013f6:	push   0x104
  4013fb:	push   0x5
  4013fd:	call   DWORD PTR ds:0x418204
  401403:	xor    eax,eax
  401405:	jmp    0x4017cb
  40140a:	lea    eax,[ebp-0x258]
  401410:	push   eax
  401411:	push   0x20019
  401416:	push   0x0
  401418:	push   0x4182e0
  40141d:	mov    ecx,DWORD PTR [ebp-0x258]
  401423:	push   ecx
  401424:	call   DWORD PTR [ebp-0x27c]
  40142a:	test   eax,eax
  40142c:	je     0x401435
  40142e:	xor    eax,eax
  401430:	jmp    0x4017cb
  401435:	lea    edx,[ebp-0x258]
  40143b:	push   edx
  40143c:	push   0x20019
  401441:	push   0x0
  401443:	push   0x418110
  401448:	mov    eax,DWORD PTR [ebp-0x258]
  40144e:	push   eax
  40144f:	call   DWORD PTR [ebp-0x27c]
  401455:	test   eax,eax
  401457:	je     0x401460
  401459:	xor    eax,eax
  40145b:	jmp    0x4017cb
  401460:	lea    ecx,[ebp-0x258]
  401466:	push   ecx
  401467:	push   0x20019
  40146c:	push   0x0
  40146e:	push   0x418120
  401473:	mov    edx,DWORD PTR [ebp-0x258]
  401479:	push   edx
  40147a:	call   DWORD PTR [ebp-0x27c]
  401480:	test   eax,eax
  401482:	jne    0x40148b
  401484:	xor    eax,eax
  401486:	jmp    0x4017cb
  40148b:	mov    DWORD PTR [ebp-0x214],0x0
  401495:	mov    DWORD PTR [ebp-0x288],0x64
  40149f:	mov    DWORD PTR [ebp-0x21c],0x2
  4014a9:	mov    DWORD PTR [ebp-0x294],0x0
  4014b3:	mov    DWORD PTR [ebp-0x254],0x0
  4014bd:	mov    DWORD PTR [ebp-0x284],0x1
  4014c7:	mov    DWORD PTR [ebp-0x218],0x3
  4014d1:	push   0x104
  4014d6:	push   0x4182f0
  4014db:	call   DWORD PTR ds:0x418204
  4014e1:	push   0x418134
  4014e6:	push   0x4182f0
  4014eb:	call   DWORD PTR ds:0x418208
  4014f1:	push   0x41814c
  4014f6:	push   0x41815c
  4014fb:	call   DWORD PTR ds:0x41820c
  401501:	push   eax
  401502:	call   DWORD PTR ds:0x418200
  401508:	mov    ds:0x4182e4,eax
  40150d:	call   0x401080
  401512:	mov    eax,ds:0x4182e8
  401517:	push   eax
  401518:	call   0x4010a0
  40151d:	add    esp,0x4
  401520:	mov    DWORD PTR [ebp-0x298],eax
  401526:	mov    ecx,DWORD PTR [ebp-0x298]
  40152c:	push   ecx
  40152d:	call   0x401010
  401532:	add    esp,0x4
  401535:	mov    DWORD PTR [ebp-0x290],eax
  40153b:	mov    edx,DWORD PTR [ebp-0x298]
  401541:	push   edx
  401542:	push   0x0
  401544:	mov    eax,DWORD PTR [ebp-0x290]
  40154a:	push   eax
  40154b:	call   0x401040
  401550:	add    esp,0xc
  401553:	mov    ecx,DWORD PTR [ebp-0x298]
  401559:	mov    DWORD PTR [ebp-0x2a0],ecx
  40155f:	mov    edx,DWORD PTR [ebp-0x294]
  401565:	cmp    edx,DWORD PTR [ebp-0x298]
  40156b:	jae    0x4015f6
  401571:	mov    eax,DWORD PTR [ebp-0x2a0]
  401577:	push   eax
  401578:	mov    ecx,DWORD PTR [ebp-0x288]
  40157e:	push   ecx
  40157f:	call   0x401050
  401584:	add    esp,0x8
  401587:	mov    DWORD PTR [ebp-0x2a4],eax
  40158d:	mov    edx,DWORD PTR [ebp-0x2a4]
  401593:	push   edx
  401594:	mov    eax,ds:0x4182e8
  401599:	add    eax,DWORD PTR [ebp-0x254]
  40159f:	push   eax
  4015a0:	mov    ecx,DWORD PTR [ebp-0x290]
  4015a6:	add    ecx,DWORD PTR [ebp-0x294]
  4015ac:	push   ecx
  4015ad:	call   0x4175d6
  4015b2:	add    esp,0xc
  4015b5:	mov    edx,DWORD PTR [ebp-0x21c]
  4015bb:	add    edx,DWORD PTR [ebp-0x288]
  4015c1:	add    edx,DWORD PTR [ebp-0x254]
  4015c7:	mov    DWORD PTR [ebp-0x254],edx
  4015cd:	mov    eax,DWORD PTR [ebp-0x294]
  4015d3:	add    eax,DWORD PTR [ebp-0x288]
  4015d9:	mov    DWORD PTR [ebp-0x294],eax
  4015df:	mov    ecx,DWORD PTR [ebp-0x2a0]
  4015e5:	sub    ecx,DWORD PTR [ebp-0x2a4]
  4015eb:	mov    DWORD PTR [ebp-0x2a0],ecx
  4015f1:	jmp    0x40155f
  4015f6:	mov    edx,DWORD PTR [ebp-0x298]
  4015fc:	push   edx
  4015fd:	mov    eax,DWORD PTR [ebp-0x290]
  401603:	push   eax
  401604:	call   0x401190
  401609:	add    esp,0x8
  40160c:	mov    DWORD PTR [ebp-0x254],0x0
  401616:	mov    DWORD PTR [ebp-0x2a8],0x0
  401620:	call   0x401090
  401625:	mov    ecx,DWORD PTR ds:0x4182e8
  40162b:	push   ecx
  40162c:	call   0x4010a0
  401631:	add    esp,0x4
  401634:	mov    DWORD PTR [ebp-0x2ac],eax
  40163a:	mov    edx,DWORD PTR [ebp-0x2ac]
  401640:	push   edx
  401641:	call   0x401010
  401646:	add    esp,0x4
  401649:	mov    DWORD PTR [ebp-0x250],eax
  40164f:	mov    eax,DWORD PTR [ebp-0x2ac]
  401655:	push   eax
  401656:	push   0x0
  401658:	mov    ecx,DWORD PTR [ebp-0x250]
  40165e:	push   ecx
  40165f:	call   0x401040
  401664:	add    esp,0xc
  401667:	mov    edx,DWORD PTR [ebp-0x2ac]
  40166d:	mov    DWORD PTR [ebp-0x2b4],edx
  401673:	mov    eax,DWORD PTR [ebp-0x2a8]
  401679:	cmp    eax,DWORD PTR [ebp-0x2ac]
  40167f:	jae    0x40170b
  401685:	mov    ecx,DWORD PTR [ebp-0x2b4]
  40168b:	push   ecx
  40168c:	mov    edx,DWORD PTR [ebp-0x288]
  401692:	push   edx
  401693:	call   0x401050
  401698:	add    esp,0x8
  40169b:	mov    DWORD PTR [ebp-0x2b8],eax
  4016a1:	mov    eax,DWORD PTR [ebp-0x2b8]
  4016a7:	push   eax
  4016a8:	mov    ecx,DWORD PTR ds:0x4182e8
  4016ae:	add    ecx,DWORD PTR [ebp-0x254]
  4016b4:	push   ecx
  4016b5:	mov    edx,DWORD PTR [ebp-0x250]
  4016bb:	add    edx,DWORD PTR [ebp-0x2a8]
  4016c1:	push   edx
  4016c2:	call   0x4175d6
  4016c7:	add    esp,0xc
  4016ca:	mov    eax,DWORD PTR [ebp-0x21c]
  4016d0:	add    eax,DWORD PTR [ebp-0x288]
  4016d6:	add    eax,DWORD PTR [ebp-0x254]
  4016dc:	mov    DWORD PTR [ebp-0x254],eax
  4016e2:	mov    ecx,DWORD PTR [ebp-0x2a8]
  4016e8:	add    ecx,DWORD PTR [ebp-0x288]
  4016ee:	mov    DWORD PTR [ebp-0x2a8],ecx
  4016f4:	mov    edx,DWORD PTR [ebp-0x2b4]
  4016fa:	sub    edx,DWORD PTR [ebp-0x2b8]
  401700:	mov    DWORD PTR [ebp-0x2b4],edx
  401706:	jmp    0x401673
  40170b:	mov    eax,DWORD PTR [ebp-0x2ac]
  401711:	push   eax
  401712:	mov    ecx,DWORD PTR [ebp-0x250]
  401718:	push   ecx
  401719:	call   0x401190
  40171e:	add    esp,0x8
  401721:	mov    edx,DWORD PTR [ebp-0x290]
  401727:	mov    eax,DWORD PTR [ebp-0x250]
  40172d:	mov    DWORD PTR [edx],eax
  40172f:	push   0x17000
  401734:	call   0x401010
  401739:	add    esp,0x4
  40173c:	mov    DWORD PTR [ebp-0x4],eax
  40173f:	lea    ecx,[ebp-0x258]
  401745:	push   ecx
  401746:	push   0x20019
  40174b:	push   0x0
  40174d:	push   0x418168
  401752:	push   0x80000002
  401757:	call   DWORD PTR ds:0x41821c
  40175d:	test   eax,eax
  40175f:	je     0x401765
  401761:	xor    eax,eax
  401763:	jmp    0x4017cb
  401765:	push   0x15500
  40176a:	mov    edx,DWORD PTR [ebp-0x290]
  401770:	push   edx
  401771:	mov    eax,DWORD PTR [ebp-0x4]
  401774:	add    eax,0x200
  401779:	push   eax
  40177a:	call   0x4175d6
  40177f:	add    esp,0xc
  401782:	mov    ecx,DWORD PTR [ebp-0x4]
  401785:	sub    ecx,0x400000
  40178b:	push   ecx
  40178c:	mov    edx,DWORD PTR [ebp-0x4]
  40178f:	push   edx
  401790:	mov    eax,DWORD PTR [ebp-0x250]
  401796:	push   eax
  401797:	call   0x401130
  40179c:	add    esp,0xc
  40179f:	mov    esp,DWORD PTR ds:0x4183f4
  4017a5:	pop    ecx
  4017a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4017a9:	add    ecx,0x15350
  4017af:	mov    edx,ecx
  4017b1:	call   0x4017b6
  4017b6:	pop    eax
  4017b7:	call   0x4017bc
  4017bc:	pop    eax
  4017bd:	call   0x4017c2
  4017c2:	pop    eax
  4017c3:	call   0x4017c8
  4017c8:	pop    eax
  4017c9:	jmp    edx
  4017cb:	mov    esp,ebp
  4017cd:	pop    ebp
  4017ce:	ret    
  4017cf:	int3   
  4017d0:	add    BYTE PTR [ebp+0x1],dl
  4017d3:	add    BYTE PTR [ecx],dh
  4017d5:	inc    ebx
  4017d6:	inc    ecx
  4017d7:	add    BYTE PTR [esi+0x71],ch
  4017da:	je     0x40182c
  4017dc:	inc    ebx
  4017dd:	jnp    0x401842
  4017df:	inc    ecx
  4017e0:	dec    ebp
  4017e1:	jo     0x401855
  4017e3:	and    ah,BYTE PTR gs:[edi+0x0]
  4017e7:	add    ch,dh
  4017e9:	jp     0x40184c
  4017eb:	fs in  eax,dx
  4017ed:	jl     0x401851
  4017ef:	jb     0x401801
  4017f1:	data16 jns 0x401839
  4017f4:	or     DWORD PTR [ebp+0x0],edx
  4017f7:	add    ch,dh
  4017f9:	jp     0x40185c
  4017fb:	fs in  eax,dx
  4017fd:	jl     0x401861
  4017ff:	jb     0x401811
  401801:	data16 jns 0x401849
  401804:	jmp    0xee40184b
  401809:	jo     0x40187f
  40180b:	dec    ebp
  40180c:	into   
  40180d:	outs   dx,DWORD PTR ds:[esi]
  40180e:	jne    0x40187c
  401810:	int3   
  401811:	pop    ebx
  401812:	popa   
  401813:	outs   dx,BYTE PTR ds:[esi]
  401814:	aad    0x77
  401816:	gs inc ecx
  401818:	xor    DWORD PTR [eax+eax*1],edx
  40181b:	add    dl,dh
  40181d:	gs gs popa 
  401820:	mov    ebp,0x9d694670
  401825:	jno    0x401868
  401827:	add    BYTE PTR [ebp-0x6d8d8b99],dl
  40182d:	jne    0x4018a3
  40182f:	inc    ecx
  401830:	xor    DWORD PTR [eax+eax*1],edx
  401833:	add    BYTE PTR [esi+0x71],dh
  401836:	je     0x40188f
  401838:	add    BYTE PTR [eax],al
  40183a:	cwde   
  40183b:	jp     0x4018a1
  40183d:	outs   dx,DWORD PTR ds:[esi]
  40183e:	xchg   BYTE PTR [edi+0x44],ah
  401841:	imul   eax,DWORD PTR [ebx+0x5e746371],0x31417966
  40184b:	adc    al,0x0
  40184d:	add    BYTE PTR [esi+0x71],dh
  401850:	je     0x40189f
  401852:	inc    esi
  401853:	jo     0x4018ca
  401855:	ins    BYTE PTR es:[edi],dx
  401856:	push   esp
  401857:	pop    esp
  401858:	popa   
  401859:	outs   dx,BYTE PTR ds:[esi]
  40185a:	dec    ebp
  40185b:	js     0x4018c2
  40185d:	push   edi
  40185e:	xor    DWORD PTR [eax+eax*1],edx
  401861:	add    BYTE PTR ds:0x45004016,ch
  401867:	push   ss
  401868:	inc    eax
  401869:	add    BYTE PTR [ebp+0x16],cl
  40186c:	inc    eax
  40186d:	add    BYTE PTR [ebp+0x16],ah
  401870:	inc    eax
  401871:	add    cl,ch
  401873:	adc    eax,0x15e50040
  401878:	inc    eax
  401879:	add    BYTE PTR [ecx],dl
  40187b:	push   ss
  40187c:	inc    eax
  40187d:	add    cl,bh
  40187f:	adc    eax,0x70ee0040
  401884:	je     0x4018d6
  401886:	jecxz  0x401902
  401888:	arpl   WORD PTR [ecx-0x33],ax
  40188b:	outs   dx,DWORD PTR ds:[esi]
  40188c:	jb     0x4018f3
  40188e:	loop   0x4018f6
  401890:	add    BYTE PTR [eax],al
  401892:	in     eax,0x7a
  401894:	popa   
  401895:	fs std 
  401897:	jl     0x4018fb
  401899:	jb     0x40186b
  40189b:	gs jns 0x4018e3
  40189e:	add    BYTE PTR [eax],al
  4018a0:	mov    ecx,0xca000054
  4018a5:	jo     0x401919
  4018a7:	outs   dx,BYTE PTR ds:[esi]
  4018a8:	xchg   esp,eax
  4018a9:	js     0x4018de
  4018ab:	xor    dl,BYTE PTR [edi+0x70]
  4018ae:	ins    BYTE PTR es:[edi],dx
  4018af:	ins    BYTE PTR es:[edi],dx
  4018b0:	xor    DWORD PTR [eax+eax*1],edx
  4018b3:	add    BYTE PTR [ebp+eiz*2+0x60836376],al
  4018ba:	cs fs xchg ebp,eax
  4018bd:	js     0x4018bf
  4018bf:	add    BYTE PTR [edi+ebp*2+0x608c736d],cl
  4018c6:	add    BYTE PTR [eax],al
  4018c8:	pop    esp
  4018c9:	gs jbe 0x40192f
  4018cc:	arpl   WORD PTR [eax+0x2e],sp
  4018cf:	fs dec ebp
  4018d1:	js     0x4018d3
  4018d3:	add    BYTE PTR [edi+ebp*2+0x6d],al
  4018d7:	arpl   WORD PTR [ecx+0x6b],ax
  4018da:	add    BYTE PTR [eax],al
  4018dc:	pop    edi
  4018dd:	jnp    0x401951
  4018df:	je     0x401925
  4018e1:	jae    0x40194f
  4018e3:	inc    ecx
  4018e4:	inc    ebp
  4018e5:	js     0x401956
  4018e7:	arpl   WORD PTR [ecx],si
  4018e9:	adc    al,0x0
  4018eb:	add    bh,bh
  4018ed:	jp     0x401961
  4018ef:	je     0x401915
  4018f1:	jae    0x40195f
  4018f3:	inc    ecx
  4018f4:	add    eax,0x31636f78
  4018f9:	adc    al,0x0
  4018fb:	add    ah,bl
  4018fd:	jns    0x40196c
  4018ff:	popa   
  401900:	add    DWORD PTR [edx+0x69],eax
  401903:	add    BYTE PTR gs:[eax],al
  401906:	(bad)  
  401907:	pop    eax
  401908:	inc    si
  40190a:	fdiv   DWORD PTR [edi+0x65]
  40190d:	add    bh,bh
  40190f:	jp     0x401983
  401911:	je     0x4018f7
  401913:	jb     0x401981
  401915:	push   eax
  401916:	jecxz  0x401990
  401918:	je     0x40197f
  40191a:	rcr    BYTE PTR [edi+0x0],cl
  40191d:	add    cl,bh
  40191f:	outs   dx,BYTE PTR ds:[esi]
  401920:	popa   
  401921:	jo     0x401913
  401923:	ja     0x401991
  401925:	outs   dx,DWORD PTR ds:[esi]
  401926:	rcl    BYTE PTR [ebx],cl
  401928:	add    BYTE PTR [eax],al
  40192a:	call   0x3378:0x8c6e726f
  401931:	xor    cl,BYTE PTR [edi+0x70]
  401934:	ins    BYTE PTR es:[edi],dx
  401935:	ins    BYTE PTR es:[edi],dx
  401936:	xor    DWORD PTR [eax+eax*1],edx
  401939:	add    BYTE PTR [esi+0x6f],dh
  40193c:	je     0x40198e
  40193e:	cmp    DWORD PTR [ecx+0x63],0x65
  401942:	and    BYTE PTR [ebp+0x48],0x65
  401946:	nop
  401947:	add    BYTE PTR fs:[eax],al
  40194a:	xor    DWORD PTR [esp+eax*2],edx
  40194d:	add    DWORD PTR [ecx],esi
  40194f:	mov    al,0x59
  401951:	nop
  401952:	xor    esi,edi
  401954:	add    eax,DWORD PTR [eax]
  401956:	xor    edi,esi
  401958:	add    eax,DWORD PTR [eax]
  40195a:	xor    edx,ebp
  40195c:	sti    
  40195d:	add    BYTE PTR [ecx],dh
  40195f:	and    eax,DWORD PTR [ebx]
  401961:	add    BYTE PTR [ecx],dh
  401963:	sti    
  401964:	add    eax,DWORD PTR [eax]
  401966:	xor    DWORD PTR [ebx],edi
  401968:	add    al,0x0
  40196a:	add    BYTE PTR [eax],al
  40196c:	xor    ebx,edi
  40196e:	add    eax,DWORD PTR [eax]
  401970:	xor    ebx,edi
  401972:	add    eax,DWORD PTR [eax]
  401974:	xor    ebx,edi
  401976:	add    eax,DWORD PTR [eax]
  401978:	xor    ebx,edi
  40197a:	add    eax,DWORD PTR [eax]
  40197c:	xor    ebx,edi
  40197e:	add    eax,DWORD PTR [eax]
  401980:	xor    ebx,edi
  401982:	add    eax,DWORD PTR [eax]
  401984:	xor    ebx,edi
  401986:	add    eax,DWORD PTR [eax]
  401988:	xor    ebx,edi
  40198a:	add    eax,DWORD PTR [eax]
  40198c:	xor    DWORD PTR [ebx+0x4],edi
  40198f:	add    BYTE PTR [ecx],dh
  401991:	icebp  
  401992:	sbb    bh,BYTE PTR [edx+0x9affb2f]
  401998:	fstp   TBYTE PTR fs:[ebx+0x25b7fd01]
  40199f:	push   esp
  4019a0:	fst    DWORD PTR [ebx]
  4019a2:	ja     0x4019c4
  4019a4:	shr    esp,0x6a
  4019a7:	addr16 ret 
  4019a9:	fld    TBYTE PTR [eax+0x20]
  4019ac:	xchg   edx,eax
  4019ad:	fsubr  QWORD PTR [ecx+0x6e]
  4019b0:	xchg   esi,eax
  4019b1:	leave  
  4019b2:	and    esp,DWORD PTR [edx-0x6c]
  4019b5:	sbb    eax,0x1d877576
  4019ba:	ins    DWORD PTR es:[edi],dx
  4019bb:	outs   dx,BYTE PTR ds:[esi]
  4019bc:	push   ecx
  4019bd:	mov    cl,0x4a
  4019bf:	push   ebx
  4019c0:	push   ecx
  4019c1:	shr    BYTE PTR [edx+0x64],1
  4019c4:	xchg   esp,eax
  4019c5:	out    0x8,eax
  4019c7:	or     eax,0x3cd142b
  4019cc:	xor    DWORD PTR [ecx+ebp*8],edx
  4019cf:	add    eax,DWORD PTR [eax]
  4019d1:	add    BYTE PTR [ecx],dh
  4019d3:	adc    al,0xb9
  4019d5:	inc    eax
  4019d6:	xor    DWORD PTR [ebx*4-0x6febcdfc],edx
  4019dd:	and    ecx,DWORD PTR [ebp+0x57]
  4019e0:	jmp    0xe9544ae8
  4019e5:	add    esi,DWORD PTR [ecx]
  4019e7:	adc    al,0x9
  4019e9:	add    al,0x26
  4019eb:	adc    eax,0x223304f2
  4019f0:	jmp    0xe9544bee
  4019f5:	dec    ebp
  4019f6:	xor    DWORD PTR [ecx+ebp*8],edx
  4019f9:	add    esi,DWORD PTR [ecx]
  4019fb:	adc    al,0x55
  4019fd:	in     eax,dx
  4019fe:	xor    DWORD PTR [ecx+ebp*8],edx
  401a01:	adc    esi,DWORD PTR [ecx]
  401a03:	adc    al,0xe9
  401a05:	adc    esi,DWORD PTR [eax]
  401a07:	adc    al,0xe9
  401a09:	add    esi,ecx
  401a0b:	adc    ebp,ecx
  401a0d:	adc    esi,DWORD PTR [ecx]
  401a0f:	adc    al,0xe9
  401a11:	add    eax,0x3ed1431
  401a16:	xor    DWORD PTR [ecx+ebp*8],edx
  401a19:	add    esi,DWORD PTR [ecx]
  401a1b:	adc    al,0xed
  401a1d:	add    esi,DWORD PTR [ecx]
  401a1f:	adc    al,0xe9
  401a21:	add    esi,DWORD PTR [ecx]
  401a23:	adc    al,0xe9
  401a25:	jae    0x401a57
  401a27:	adc    al,0xe9
  401a29:	add    eax,0x5d581431
  401a2e:	xor    BYTE PTR [ebx+ebp*8],dl
  401a31:	add    esi,DWORD PTR [ecx]
  401a33:	adc    al,0xe9
  401a35:	add    eax,DWORD PTR [eax]
  401a37:	add    BYTE PTR [ecx+0x14],al
  401a3a:	jmp    0xe9544b52
  401a3f:	add    esp,DWORD PTR [ecx]
  401a41:	adc    al,0xe9
  401a43:	adc    esi,DWORD PTR [ecx]
  401a45:	adc    al,0x0
  401a47:	jmp    0xd9402e7e
  401a4c:	xor    dl,BYTE PTR [eax+eax*1]
  401a4f:	jmp    0xe9402e86
  401a54:	xor    dl,BYTE PTR [eax+eax*1]
  401a57:	rol    DWORD PTR [ebx+0x32210015],0x14
  401a5e:	add    cl,ch
  401a60:	xor    dl,BYTE PTR [eax+eax*1]
  401a63:	jmp    0xe9402e9a
  401a68:	xor    dl,BYTE PTR [eax+eax*1]
  401a6b:	jmp    0xe9402ea2
  401a70:	xor    dl,BYTE PTR [eax+eax*1]
  401a73:	jmp    0xe9402eaa
  401a78:	xor    dl,BYTE PTR [eax+eax*1]
  401a7b:	jmp    0xe9402eb2
  401a80:	xor    dl,BYTE PTR [eax+eax*1]
  401a83:	jmp    0xe9402eba
  401a88:	xor    dl,BYTE PTR [eax+eax*1]
  401a8b:	jmp    0xe9402ec2
  401a90:	xor    dl,BYTE PTR [eax+eax*1]
  401a93:	jmp    0xe9402eca
  401a98:	xor    dl,BYTE PTR [eax+eax*1]
  401a9b:	jmp    0x14721aa0
  401aa0:	add    cl,ch
  401aa2:	xor    dl,BYTE PTR [eax+eax*1]
  401aa5:	jmp    0xe9402edc
  401aaa:	xor    dl,BYTE PTR [eax+eax*1]
  401aad:	jmp    0xe5402ee4
  401ab2:	mov    edx,DWORD PTR [ebx]
  401ab4:	add    BYTE PTR [ebp+0x32],ch
  401ab7:	adc    al,0x0
  401ab9:	jmp    0xe9402ef0
  401abe:	xor    dl,BYTE PTR [eax+eax*1]
  401ac1:	add    BYTE PTR [eax],bl
  401ac3:	adc    al,BYTE PTR [eax]
  401ac5:	add    BYTE PTR [eax],bl
  401ac7:	adc    al,BYTE PTR [eax]
  401ac9:	add    BYTE PTR [eax],cl
  401acb:	adc    al,BYTE PTR [eax]
  401acd:	add    BYTE PTR [eax],cl
  401acf:	adc    al,BYTE PTR [eax]
  401ad1:	add    BYTE PTR [esi],al
  401ad3:	jbe    0x401b3a
  401ad5:	js     0x401a93
  401ad7:	adc    DWORD PTR [eax],eax
  401ad9:	add    BYTE PTR [ebx-0x23],dl
  401adc:	add    BYTE PTR [eax],al
  401ade:	enter  0x1,0x0
  401ae2:	fsubr  st,st(3)
  401ae4:	add    BYTE PTR [eax],al
  401ae6:	fmul   DWORD PTR [edi]
  401ae8:	add    BYTE PTR [eax],al
  401aea:	enter  0x11,0x0
  401aee:	enter  0x11,0x0
  401af2:	cwde   
  401af3:	adc    DWORD PTR [eax],eax
  401af5:	add    BYTE PTR [eax],bh
  401af7:	adc    BYTE PTR [eax],al
  401af9:	pusha  
  401afa:	ss pop esi
  401afc:	fs popa 
  401afe:	cld    
  401aff:	jo     0x401b01
  401b01:	add    BYTE PTR [eax],al
  401b03:	add    BYTE PTR [eax-0x67ffffee],bl
  401b09:	add    DWORD PTR [ecx],eax
  401b0b:	add    BYTE PTR [eax-0x77fffff1],cl
  401b11:	adc    DWORD PTR [ecx],eax
  401b13:	add    BYTE PTR [eax+0x11],bl
  401b16:	add    BYTE PTR [eax],al
  401b18:	pop    eax
  401b19:	adc    DWORD PTR [eax],eax
  401b1b:	add    BYTE PTR [eax+0x11],cl
  401b1e:	add    BYTE PTR [eax],al
  401b20:	or     BYTE PTR [eax],dl
  401b22:	add    BYTE PTR [eax+0x66],al
  401b25:	inc    ebp
  401b26:	popa   
  401b27:	je     0x401b62
  401b29:	adc    BYTE PTR [eax],al
  401b2b:	add    BYTE PTR [eax+0x48000053],dl
  401b31:	xor    DWORD PTR [ecx],eax
  401b33:	add    BYTE PTR [eax],bl
  401b35:	dec    edi
  401b36:	add    BYTE PTR [eax],al
  401b38:	sbb    BYTE PTR [edi],cl
  401b3a:	add    DWORD PTR [eax],eax
  401b3c:	xor    ebx,edi
  401b3e:	add    eax,DWORD PTR [eax]
  401b40:	xor    ebx,edi
  401b42:	add    eax,DWORD PTR [eax]
  401b44:	xor    ebx,edi
  401b46:	add    eax,DWORD PTR [eax]
  401b48:	xor    DWORD PTR [ebx-0x50efffd],edi
  401b4e:	add    eax,DWORD PTR [eax]
  401b50:	xor    ebx,edi
  401b52:	add    eax,DWORD PTR [eax]
  401b54:	xor    ebx,edi
  401b56:	add    eax,DWORD PTR [eax]
  401b58:	xor    ebx,edi
  401b5a:	add    eax,DWORD PTR [eax]
  401b5c:	xor    DWORD PTR [eax-0x37b61374],ebp
  401b62:	adc    eax,DWORD PTR [eax+0x31]
  401b65:	adc    esi,DWORD PTR [ebp+0x1]
  401b68:	add    BYTE PTR [eax],al
  401b6a:	repnz in eax,0xf7
  401b6d:	jne    0x401b98
  401b6f:	xchg   ecx,eax
  401b70:	add    ch,BYTE PTR [edx+0x31]
  401b73:	adc    edi,DWORD PTR [edx+ebx*8-0x3d3304cf]
  401b7a:	sub    eax,0x8d8b50fb
  401b7f:	push   edx
  401b80:	sub    dl,BYTE PTR [eax]
  401b82:	icebp  
  401b83:	cli    
  401b84:	sti    
  401b85:	jb     0x401bb7
  401b87:	mov    edx,0xe30483f7
  401b8c:	add    esi,DWORD PTR [edx+ebp*1+0x72]
  401b90:	push   ecx
  401b91:	or     BYTE PTR [edx+0x3975f6c8],ch
  401b97:	scas   al,BYTE PTR es:[edi]
  401b98:	push   edx
  401b99:	or     BYTE PTR [eax-0x48],bh
  401b9c:	add    BYTE PTR [eax],al
  401b9e:	add    al,0x72
  401ba0:	call   0x6cc28928
  401ba5:	dec    edi
  401ba6:	and    DWORD PTR [ebx],edi
  401ba8:	add    al,0xf8
  401baa:	ret    
  401bab:	sti    
  401bac:	ret    0x3eff
  401baf:	out    0x7,eax
  401bb1:	(bad)  
  401bb2:	in     al,dx
  401bb3:	bound  edi,QWORD PTR [edi-0x16ead2bb]
  401bb9:	add    esi,DWORD PTR [ecx]
  401bbb:	adc    al,0x72
  401bbd:	push   ecx
  401bbe:	sub    DWORD PTR [edi-0x1cce9605],ecx
  401bc4:	aam    0x13
  401bc6:	push   cs
  401bc7:	push   0x45
  401bc9:	idiv   DWORD PTR [esp+ebx*8+0x3e]
  401bcd:	jno    0x401bcf
  401bcf:	add    BYTE PTR [ecx],ch
  401bd1:	jecxz  0x401b6e
  401bd3:	psubsb mm2,mm6
  401bd6:	fld    QWORD PTR [ebx]
  401bd8:	test   BYTE PTR [edi-0x23127ceb],cl
  401bde:	xchg   ecx,eax
  401bdf:	jge    0x401c22
  401be1:	push   esp
  401be2:	jmp    0x2a557fe2
  401be7:	div    esi
  401be9:	pop    ecx
  401bea:	add    DWORD PTR [ecx+esi*1],eax
  401bed:	adc    al,0xe9
  401bef:	mov    esi,0x3e9e074
  401bf4:	xor    DWORD PTR [edx+eiz*2],edx
  401bf7:	push   ecx
  401bf8:	cmp    DWORD PTR [edi-0x24137705],ecx
  401bfe:	cmp    DWORD PTR [edx+0x33],ebp
  401c01:	jecxz  0x401c5f
  401c03:	clc    
  401c04:	xchg   esi,eax
  401c05:	imul   edx,ecx,0xc60c04f6
  401c0b:	push   ecx
  401c0c:	sbb    eax,0x68fc248f
  401c11:	(bad)  
  401c12:	in     eax,dx
  401c13:	add    ebx,esp
  401c15:	mov    ?,WORD PTR [ebp+0x11dc7582]
  401c1b:	ret    0x5441
  401c1e:	jmp    0xaa55001e
  401c23:	imul   BYTE PTR [esi+0x59]
  401c26:	xchg   ecx,eax
  401c27:	add    esi,DWORD PTR [ecx]
  401c29:	adc    al,0xe9
  401c2b:	mov    esi,0x3e9dfec
  401c30:	xor    DWORD PTR [eax+eax*1],edx
  401c33:	bound  eax,QWORD PTR [eax]
  401c35:	add    cl,ah
  401c37:	or     ecx,DWORD PTR [ebx-0x7a74625]
  401c3d:	mov    ecx,0xd4ff1598
  401c42:	es jecxz 0x401cba
  401c45:	push   ecx
  401c46:	pop    ds
  401c47:	imul   ecx,DWORD PTR [eax],0xff08604e
  401c4d:	mov    esp,0x3e87ec3a
  401c52:	pop    es
  401c53:	jecxz  0x401ca5
  401c55:	bound  esp,QWORD PTR [ecx+0xc]
  401c58:	mov    ebx,ebx
  401c5a:	pop    eax
  401c5b:	adc    al,0x6a
  401c5d:	jmp    0x1f3c8541
  401c62:	popa   
  401c63:	fdiv   st(7),st
  401c65:	pushf  
  401c66:	sub    ah,bl
  401c68:	push   edx
  401c69:	cmc    
  401c6a:	push   0xffffff8f
  401c6c:	push   ebp
  401c6d:	add    DWORD PTR [ebx],esi
  401c6f:	dec    ecx
  401c70:	or     al,0xc2
  401c72:	loop   0x401cdd
  401c74:	push   es
  401c75:	ret    0xccf2
  401c78:	ret    0x32e1
  401c7b:	pushf  
  401c7c:	add    ecx,ebp
  401c7e:	xor    dl,BYTE PTR [ecx+ecx*8]
  401c81:	stos   DWORD PTR es:[edi],eax
  401c82:	sub    eax,0x89625514
  401c87:	xchg   esi,eax
  401c88:	(bad)  
  401c89:	int    0x1d
  401c8b:	xor    edx,DWORD PTR [ecx]
  401c8d:	sub    DWORD PTR ds:0x71e872dc,ebp
  401c93:	loop   0x401c94
  401c95:	cmp    al,0x1d
  401c97:	jecxz  0x401d0e
  401c99:	loope  0x401c9b
  401c9b:	add    BYTE PTR [edx+0x5b],bl
  401c9e:	jmp    DWORD PTR [esi+0x14c00e5c]
  401ca4:	xor    ebp,ecx
  401ca6:	ret    0x32e5
  401ca9:	(bad)  
  401caa:	push   ebp
  401cab:	loope  0x401c66
  401cad:	add    eax,0xdc15008d
  401cb2:	push   eax
  401cb3:	inc    DWORD PTR [ebp+0x6]
  401cb6:	push   DWORD PTR [ebp+0x4c]
  401cb9:	out    0x75,eax
  401cbb:	or     BYTE PTR [edi+0x58850c46],bl
  401cc1:	pusha  
  401cc2:	adc    ecx,DWORD PTR [ebx+0x453be9d5]
  401cc8:	sbb    BYTE PTR [ebx+0x7],dh
  401ccb:	mov    eax,0x1619
  401cd0:	arpl   dx,sp
  401cd2:	sub    al,al
  401cd4:	arpl   WORD PTR [esi],dx
  401cd6:	sub    eax,eax
  401cd8:	push   ecx
  401cd9:	(bad)  
  401cda:	or     al,0x0
  401cdc:	lds    ecx,FWORD PTR [esp+ebp*8+0x56dc1483]
  401ce3:	push   0x400555
  401ce8:	inc    eax
  401ce9:	add    bx,ax
  401cec:	aas    
  401ced:	xchg   ebx,eax
  401cee:	jge    0x401cfc
  401cf0:	fdiv   DWORD PTR [ecx+0x6]
  401cf3:	cmp    DWORD PTR ds:0xc775000d,0x2c
  401cfa:	rcr    BYTE PTR [esi+0x51],0xd6
  401cfe:	or     al,0x0
  401d00:	add    BYTE PTR [eax],al
  401d02:	sbb    ebp,DWORD PTR [edx+0x10]
  401d05:	add    BYTE PTR ds:0x8801b80e,al
  401d0b:	adc    eax,0xd3d15e00
  401d10:	or     al,0x0
  401d12:	add    esi,DWORD PTR [edx+0xc]
  401d15:	(bad)  
  401d16:	push   ebp
  401d17:	fadd   QWORD PTR [eax]
  401d19:	add    BYTE PTR [eax+0x50558b15],cl
  401d1f:	mov    WORD PTR [edx],ss
  401d21:	lea    edx,ds:0x45ff50dc
  401d27:	or     BYTE PTR [esi-0x1],dl
  401d2a:	xor    DWORD PTR [eax],eax
  401d2c:	or     al,0xff
  401d2e:	jecxz  0x401d0a
  401d30:	jle    0x401cf2
  401d32:	enter  0x28f1,0xc0
  401d36:	fbld   TBYTE PTR [ebx+0x6e310cc1]
  401d3c:	jbe    0x401d3a
  401d3e:	xor    eax,ebp
  401d40:	cld    
  401d41:	sub    dh,cl
  401d43:	fmul   st,st(2)
  401d45:	ret    0xeb2d
  401d48:	mov    BYTE PTR [ebp+0x15],al
  401d4b:	out    dx,al
  401d4c:	repz sub DWORD PTR [ebx+ebx*8+0x6e],esi
  401d51:	(bad)  
  401d52:	leave  
  401d53:	jmp    0x401d58
  401d55:	add    BYTE PTR [ecx],dh
  401d57:	or     edx,0x4eeb25c2
  401d5d:	mov    ebx,ebp
  401d5f:	imul   edi,DWORD PTR [edi-0xbc62908],0x68
  401d66:	add    BYTE PTR [eax],al
  401d68:	xor    eax,0xd90043dd
  401d6d:	jl     0x401d71
  401d6f:	ret    
  401d70:	into   
  401d71:	xchg   esp,eax
  401d72:	add    ebp,DWORD PTR [edx+0x31]
  401d75:	test   DWORD PTR [eax],eax
  401d77:	push   0x31
  401d79:	test   DWORD PTR [eax],eax
  401d7b:	push   0x8003eb31
  401d80:	scas   al,BYTE PTR es:[edi]
  401d81:	addr16 or ebp,eax
  401d84:	mov    al,0xa1
  401d86:	add    al,0x0
  401d88:	test   al,0x37
  401d8a:	lock inc eax
  401d8c:	sbb    al,0xef
  401d8e:	mov    esp,0x5deb39c2
  401d93:	add    BYTE PTR [edi+ebp*1-0x14f6af14],dh
  401d9a:	adc    eax,DWORD PTR [eax]
  401d9c:	xor    DWORD PTR [eax-0x77],edi
  401d9f:	clc    
  401da0:	pop    esi
  401da1:	mov    cl,0xf3
  401da3:	push   eax
  401da4:	adc    bx,WORD PTR [eax+esi*8]
  401da8:	dec    ecx
  401da9:	je     0x401d61
  401dab:	add    al,0x31
  401dad:	or     eax,0xe13f79a9
  401db2:	adc    al,0xf0
  401db4:	pop    ecx
  401db5:	ds sahf 
  401db7:	add    al,0x31
  401db9:	sub    eax,0xb73bda9
  401dbe:	jmp    0x5d1cc2b5
  401dc3:	mov    DWORD PTR [ecx],ebp
  401dc5:	lock repz sbb di,0xffd4
  401dcc:	add    BYTE PTR [eax],al
  401dce:	push   cs
  401dcf:	push   es
  401dd0:	push   esi
  401dd1:	repz push cs
  401dd3:	xchg   esp,eax
  401dd4:	int3   
  401dd5:	jmp    0x401e08
  401dd7:	imul   eax,DWORD PTR [ebp+0x51e084f3],0xe914de3b
  401de1:	stos   DWORD PTR es:[edi],eax
  401de2:	xor    BYTE PTR [ecx+ebp*8],dl
  401de5:	add    edi,eax
  401de7:	shl    cl,cl
  401de9:	add    eax,DWORD PTR [ebx+ecx*4+0x2ae5c0d]
  401df0:	test   eax,0xe862c903
  401df5:	mov    dh,0x6a
  401df8:	jmp    0x401e57
  401dfa:	xor    edi,ebx
  401dfc:	je     0x401df9
  401dfe:	into   
  401dff:	mov    al,0xf4
  401e01:	repnz scas al,BYTE PTR es:[edi]
  401e03:	int    0x2b
  401e05:	or     BYTE PTR [ecx],dh
  401e07:	dec    ecx
  401e08:	jb     0x401de9
  401e0a:	or     DWORD PTR [eax-0x23cebc05],edi
  401e10:	pop    ebx
  401e11:	add    eax,0x443df72
  401e16:	sbb    edx,DWORD PTR [esi+eax*8]
  401e19:	js     0x401e44
  401e1b:	in     al,dx
  401e1c:	outs   dx,BYTE PTR ds:[esi]
  401e1d:	lock jbe 0x401dff
  401e20:	add    BYTE PTR [eax+0x14001874],ah
  401e26:	out    0xef,al
  401e28:	sub    DWORD PTR [ebp-0x43b93b6],0xfffffff2
  401e2f:	adc    edi,eax
  401e31:	sbb    eax,DWORD PTR [eax]
  401e33:	add    BYTE PTR [ebx+edx*8],dh
  401e36:	dec    DWORD PTR [esi+0x2c8f0fc9]
  401e3c:	dec    ebp
  401e3d:	xlat   BYTE PTR ds:[ebx]
  401e3e:	inc    ebp
  401e3f:	jge    0x401e73
  401e41:	adc    al,0x0
  401e43:	jmp    0xf53f32d4
  401e48:	fidiv  WORD PTR es:[ebp-0xf]
  401e4c:	cli    
  401e4d:	je     0x401e4c
  401e4f:	pop    esi
  401e50:	and    ecx,DWORD PTR [ebx+0x28fe155]
  401e56:	call   esp
  401e58:	push   ss
  401e59:	fbstp  TBYTE PTR [ebp+0x41]
  401e5c:	add    ebp,DWORD PTR [ecx+0x8]
  401e5f:	ds pop esp
  401e61:	cld    
  401e62:	enter  0xea2b,0xde
  401e66:	push   esp
  401e67:	bound  eax,QWORD PTR [esi]
  401e69:	ins    BYTE PTR es:[edi],dx
  401e6a:	add    dl,bh
  401e6c:	jb     0x401e82
  401e6e:	clc    
  401e6f:	fwait
  401e70:	sub    eax,0x3283ffd3
  401e75:	fbstp  TBYTE PTR [ebp-0x1f]
  401e78:	jmp    0xc2cc:0xc306ffa9
  401e7f:	in     eax,0x32
  401e81:	dec    ecx
  401e82:	mov    eax,DWORD PTR ds:0x6a14492f
  401e88:	push   esp
  401e89:	adc    al,0x75
  401e8b:	in     eax,dx
  401e8c:	fcmovnbe st,st(1)
  401e8e:	adc    cl,ch
  401e90:	mov    eax,ds:0x6d61068
  401e95:	adc    bh,bh
  401e97:	push   esp
  401e98:	add    BYTE PTR [eax],al
  401e9a:	test   esi,esi
  401e9c:	hlt    
  401e9d:	add    BYTE PTR [ebp-0x1c],dh
  401ea0:	dec    DWORD PTR [ebx+0x220fc1d]
  401ea6:	xchg   ecx,eax
  401ea7:	aad    0x10
  401ea9:	add    BYTE PTR ds:0x8c83ec61,bh
  401eaf:	jecxz  0x401eb0
  401eb1:	jne    0x401ef7
  401eb3:	inc    eax
  401eb4:	add    al,0x8d
  401eb6:	sbb    eax,0x1dff50e4
  401ebb:	loopne 0x401ea4
  401ebd:	ret    
  401ebe:	mov    bh,0xe4
  401ec0:	dec    DWORD PTR [ebx+0x3883140d]
  401ec6:	sbb    BYTE PTR [esi+0x7],ah
  401ec9:	mov    ecx,DWORD PTR [ebp-0x1c]
  401ecc:	bswap  eax
  401ece:	adc    DWORD PTR [esi],0x2b
  401ed1:	shl    BYTE PTR [ecx-0x2a],0x8
  401ed5:	add    ch,cl
  401ed7:	pusha  
  401ed8:	in     al,dx
  401ed9:	or     DWORD PTR [esp+eiz*8-0x1],0x75
  401ede:	add    al,0x40
  401ee0:	add    cl,BYTE PTR [ebp-0xaf1c33]
  401ee6:	lods   eax,DWORD PTR ds:[esi]
  401ee7:	(bad)  
  401ee9:	xchg   edi,eax
  401eea:	pop    ss
  401eeb:	jecxz  0x401eec
  401eed:	mov    ecx,DWORD PTR [ebp-0x37c77d23]
  401ef3:	or     BYTE PTR gs:[edi],cl
  401ef6:	outs   dx,DWORD PTR ds:[esi]
  401ef7:	push   ebp
  401ef8:	inc    BYTE PTR [esi+0x2b02bf0c]
  401efe:	add    BYTE PTR [eax],al
  401f00:	or     BYTE PTR [ecx+0x46c808c2],bl
  401f06:	mov    ebp,esp
  401f08:	sbb    ecx,esp
  401f0a:	cld    
  401f0b:	call   FWORD PTR ds:0x250169dd
  401f11:	push   esi
  401f12:	call   DWORD PTR [eax+0x77]
  401f15:	data16 or al,ch
  401f18:	xor    DWORD PTR [ecx-0xf],edx
  401f1b:	inc    DWORD PTR [esi-0x4df3b98e]
  401f21:	adc    eax,DWORD PTR [esp+esi*2]
  401f24:	das    
  401f25:	out    dx,al
  401f26:	mov    ecx,0x5d26e45
  401f2b:	sub    esi,DWORD PTR [ecx-0x4c]
  401f2e:	lds    ecx,FWORD PTR [eax]
  401f30:	xor    DWORD PTR [eax],esp
  401f32:	jge    0x401f20
  401f34:	stos   BYTE PTR es:[edi],al
  401f35:	sub    BYTE PTR [ebx+eax*4],dl
  401f38:	or     ebp,ebx
  401f3a:	jbe    0x401f40
  401f3c:	js     0x401ee7
  401f3e:	(bad)  
  401f3f:	(bad)  
  401f40:	aas    
  401f41:	loopne 0x401f42
  401f43:	(bad)  
  401f44:	mov    esp,0x2de0dbe2
  401f49:	lock or si,cx
  401f4d:	out    0xfc,eax
  401f4f:	mov    al,BYTE PTR [ebx+ebx*8-0x14cefd38]
  401f56:	add    eax,DWORD PTR [eax]
  401f58:	sbb    bh,al
  401f5a:	pop    ebp
  401f5b:	add    DWORD PTR [esi],eax
  401f5d:	enter  0xfeff,0x84
  401f61:	jecxz  0x401f3e
  401f63:	push   ecx
  401f64:	add    BYTE PTR [eax],al
  401f66:	cmc    
  401f67:	sbb    eax,0xf6f3c9f0
  401f6c:	add    edx,DWORD PTR [ebp-0x46]
  401f6f:	push   ds
  401f70:	test   ah,al
  401f72:	fstp   QWORD PTR [esp+edi*2+0x3812575]
  401f79:	lea    esi,[edi+eax*1+0x53]
  401f7d:	(bad)  
  401f7e:	cmp    al,0xdb
  401f80:	pop    ecx
  401f81:	inc    DWORD PTR [ebx+eiz*8-0x25]
  401f85:	mov    al,ds:0xb03eadc
  401f8a:	jno    0x401fea
  401f8c:	or     DWORD PTR [ebx+0x7502ef24],eax
  401f92:	ss adc al,0x12
  401f95:	(bad)  
  401f96:	test   edx,0x893100ab
  401f9c:	sub    al,0xf0
  401f9e:	xor    ah,ah
  401fa0:	add    BYTE PTR [ecx+0x21],cl
  401fa3:	addr16 call 0xf03:0xe91430ac
  401fab:	retf   
  401fac:	stos   DWORD PTR es:[edi],eax
  401fad:	add    BYTE PTR [ecx],dh
  401faf:	inc    edi
  401fb0:	(bad)  
  401fb1:	loopne 0x401f63
  401fb3:	xlat   BYTE PTR ds:[ebx]
  401fb4:	and    edi,ebp
  401fb6:	push   esi
  401fb7:	fdivr  QWORD PTR [edx]
  401fb9:	sbb    ebp,DWORD PTR [edx+0x69]
  401fbc:	jmp    0xebaa511a
  401fc1:	pop    ecx
  401fc2:	xor    DWORD PTR [edx-0x16],ebp
  401fc5:	pop    ebx
  401fc6:	xor    DWORD PTR [ecx+ebp*8],edx
  401fc9:	ret    
  401fca:	add    BYTE PTR [eax],al
  401fcc:	cs (bad) 
  401fce:	in     eax,0xdb
  401fd0:	outs   dx,DWORD PTR ds:[esi]
  401fd1:	shr    ecx,0x3
  401fd4:	test   al,0x51
  401fd6:	gs inc esp
  401fd8:	popf   
  401fd9:	inc    edi
  401fda:	pop    esi
  401fdb:	jns    0x402016
  401fdd:	in     al,dx
  401fde:	sbb    ch,dh
  401fe0:	push   es
  401fe1:	fsub   QWORD PTR [esi]
  401fe3:	dec    ecx
  401fe4:	stc    
  401fe5:	adc    al,0xe9
  401fe7:	add    esi,DWORD PTR [ecx]
  401fe9:	(bad)  
  401fea:	xchg   esp,eax
  401feb:	sti    
  401fec:	mov    ebx,0xe9496406
  401ff1:	inc    esp
  401ff2:	rol    DWORD PTR [ebx-0x7f16ebcf],0xac
  401ff9:	pop    esp
  401ffa:	push   ds
  401ffb:	out    dx,eax
  401ffc:	into   
  401ffd:	inc    esp
  401ffe:	push   ss
  401fff:	jns    0x40203a
  402001:	fstp   TBYTE PTR [ebx+0x159b3ff]
  402007:	add    al,0x3c
  402009:	pop    ss
  40200a:	stos   BYTE PTR es:[edi],al
  40200b:	fimul  DWORD PTR [ecx-0x25]
  40200e:	add    BYTE PTR [edx+ebx*4-0x77],bh
  402012:	test   DWORD PTR [ecx-0x71],esi
  402015:	(bad)  
  402017:	cmp    DWORD PTR [esi-0x1a2e039f],eax
  40201d:	(bad)  
  40201f:	(bad)  
  402020:	mov    ebx,DWORD PTR [ebx-0x66a4148c]
  402026:	(bad)  
  402027:	cmp    al,0x81
  402029:	in     al,dx
  40202a:	stc    
  40202b:	xchg   ebp,eax
  40202c:	xor    dl,BYTE PTR [ebx+ecx*4]
  40202f:	stos   BYTE PTR es:[edi],al
  402030:	add    BYTE PTR [eax],al
  402032:	sti    
  402033:	int3   
  402034:	ret    0x32e1
  402037:	inc    ecx
  402038:	mov    edx,DWORD PTR [ebp-0x61072f4d]
  40203e:	leave  
  40203f:	pop    es
  402040:	call   0x1b7ba0
  402045:	pusha  
  402046:	jmp    0x416ce826
  40204b:	adc    al,0x0
  40204d:	jmp    0xe5b5fb84
  402052:	or     dl,ch
  402054:	std    
  402055:	outs   dx,BYTE PTR ds:[esi]
  402056:	jg     0x6dc15b1
  40205c:	push   0xffffffe9
  40205e:	push   0x16dcff14
  402063:	(bad)  [ebp+0x51]
  402066:	punpcklwd mm1,DWORD PTR [eax]
  402069:	inc    esi
  40206a:	jns    0x402074
  40206c:	call   FWORD PTR [ebx-0x1e3d32c2]
  402072:	xor    al,BYTE PTR [ecx-0x75]
  402075:	cmp    eax,0x2ef8cfb3
  40207a:	imul   ebx,esp,0x1432e900
  402080:	(bad)  
  402081:	lods   al,BYTE PTR ds:[esi]
  402082:	(bad)  
  402083:	adc    eax,DWORD PTR [eax]
  402085:	jmp    0x95afbc
  40208a:	rcr    BYTE PTR [ebp+0x12],0x8d
  40208e:	aad    0xee
  402090:	push   eax
  402091:	push   0xffffff99
  402093:	jmp    0x411d0d
  402098:	(bad)  
  402099:	(bad)  
  40209a:	clc    
  40209b:	push   ebp
  40209d:	xlat   BYTE PTR ds:[ebx]
  40209e:	(bad)  
  40209f:	push   edx
  4020a0:	test   BYTE PTR [ebx+0x45],bl
  4020a3:	clc    
  4020a4:	rcl    ebp,1
  4020a6:	add    al,0x0
  4020a8:	inc    ebp
  4020a9:	pop    ebp
  4020aa:	in     al,dx
  4020ab:	push   0xffffff89
  4020ad:	pop    ecx
  4020ae:	inc    ebp
  4020af:	or     al,0x48
  4020b1:	jmp    0x28b0292b
  4020b6:	cld    
  4020b7:	dec    DWORD PTR [edi+0x4808c29e]
  4020bd:	inc    ecx
  4020be:	mov    ebp,esp
  4020c0:	and    cl,BYTE PTR [ecx*4-0xb9b3bb]
  4020c7:	jne    0x402119
  4020c9:	mov    esi,0xe8affc2a
  4020ce:	leave  
  4020cf:	ret    0x1620
  4020d2:	push   ebp
  4020d3:	mov    ebp,DWORD PTR [ebx+edx*4+0x62080c7d]
  4020da:	adc    al,0x83
  4020dc:	or     eax,0x1e740006
  4020e1:	jmp    0x619f315b
  4020e6:	or     al,0xff
  4020e8:	in     eax,0xdd
  4020ea:	out    0x9,eax
  4020ec:	ins    BYTE PTR es:[edi],dx
  4020ed:	out    0xff,eax
  4020ef:	leave  
  4020f0:	sbb    dl,BYTE PTR [eax+eax*1]
  4020f3:	push   ebp
  4020f4:	push   ebx
  4020f5:	hlt    
  4020f6:	push   DWORD PTR [ebp-0x8]
  4020f9:	call   0x402973
  4020fe:	inc    eax
  4020ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402100:	(bad)  
  402101:	jmp    FWORD PTR [edi]
  402103:	xchg   ebx,eax
  402104:	jge    0x402116
  402106:	xor    ebx,ebp
  402108:	ja     0x40211e
  40210a:	mov    dl,0x88
  40210c:	(bad)  
  40210d:	inc    DWORD PTR [edx-0x1f]
  402110:	in     al,dx
  402111:	jne    0x402154
  402113:	fidiv  DWORD PTR [esi+0xc]
  402116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402117:	pop    eax
  402118:	sti    
  402119:	out    0xe6,eax
  40211b:	jmp    0xffff:0xad68ffec
  402122:	in     eax,0x65
  402124:	fild   WORD PTR [ebx+0x7403ef04]
  40212a:	sub    ecx,edx
  40212c:	jbe    0x40213a
  40212e:	mov    ebx,esp
  402130:	xlat   BYTE PTR ds:[ebx]
  402131:	add    BYTE PTR [ecx],dh
  402133:	mov    BYTE PTR [ecx],0x2b
  402136:	jno    0x402133
  402138:	in     al,dx
  402139:	jne    0x402168
  40213b:	stos   BYTE PTR es:[edi],al
  40213c:	jbe    0x402146
  40213e:	dec    ecx
  40213f:	ds in  al,dx
  402141:	dec    DWORD PTR [esi-0x5c]
  402144:	ror    DWORD PTR [eax],0x31
  402147:	sbb    BYTE PTR [ecx-0x14],bh
  40214a:	mov    dl,0x8
  40214c:	adc    al,0xff
  40214e:	mov    esp,0x3d75ecdf
  402153:	pop    edx
  402154:	jbe    0x40215e
  402156:	sbb    DWORD PTR [edx-0x69e10014],ebp
  40215c:	std    
  40215d:	(bad)  
  40215e:	pushf  
  40215f:	fucomi st,st(4)
  402161:	jne    0x402163
  402163:	add    BYTE PTR ds:0x1908763a,bh
  402169:	jbe    0x402157
  40216b:	(bad)  
  40216c:	(bad)  
  40216d:	xor    eax,ecx
  40216f:	or     al,0x31
  402171:	js     0x4021eb
  402173:	in     al,dx
  402174:	out    dx,al
  402175:	lahf   
  402176:	sti    
  402177:	out    0xe6,eax
  402179:	and    ah,ch
  40217b:	inc    DWORD PTR [ecx+0x4467fbd5]
  402181:	adc    al,0xd1
  402183:	inc    edx
  402184:	xor    ecx,ebx
  402186:	xchg   esp,eax
  402187:	sti    
  402188:	into   
  402189:	dec    esp
  40218a:	push   ss
  40218b:	in     al,dx
  40218c:	mov    esi,0x3cece96d
  402191:	or     al,0x11
  402193:	pop    ds
  402194:	scas   al,BYTE PTR es:[edi]
  402195:	fdivr  st,st(6)
  402197:	pop    eax
  402198:	xor    eax,DWORD PTR [edi-0x27110054]
  40219e:	je     0x40219b
  4021a0:	mov    fs,WORD PTR [esi+eiz*8]
  4021a3:	jmp    0x402133
  4021a5:	ins    DWORD PTR es:[edi],dx
  4021a6:	jmp    0x402220
  4021a8:	in     al,dx
  4021a9:	add    edi,DWORD PTR [ecx]
  4021ab:	jmp    0x4021b1
  4021ad:	or     al,0xc1
  4021af:	and    DWORD PTR [esi-0x28],esi
  4021b2:	(bad)  
  4021b3:	dec    esp
  4021b4:	js     0x40218b
  4021b6:	in     eax,dx
  4021b7:	add    edi,esp
  4021b9:	mov    ebp,es
  4021bb:	xchg   DWORD PTR [ebp-0x29],esi
  4021be:	scas   al,BYTE PTR es:[edi]
  4021bf:	jno    0x4021ea
  4021c1:	in     al,dx
  4021c2:	jecxz  0x4021b1
  4021c4:	dec    esi
  4021c5:	fcom   st(2)
  4021c7:	inc    eax
  4021c8:	add    BYTE PTR [eax],al
  4021ca:	xor    eax,0xb2e82c8b
  4021cf:	dec    esi
  4021d0:	(bad)  
  4021d2:	enter  0x8613,0x71
  4021d6:	cmp    eax,0xefbf4d7
  4021db:	jmp    0xd85f0d50
  4021e0:	hlt    
  4021e1:	out    0x16,eax
  4021e3:	(bad)  
  4021e5:	fucomi st,st(2)
  4021e7:	(bad)  
  4021e8:	pop    esi
  4021e9:	jmp    0x4021f1
  4021eb:	(bad)  
  4021ed:	(bad)  ds:0xaaeb4ed8
  4021f3:	push   ecx
  4021f4:	inc    ebp
  4021f5:	mov    ebp,0x50e90cf3
  4021fa:	mov    edx,0xf16a00e8
  4021ff:	loopne 0x4021c8
  402201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402202:	(bad)  
  402203:	adc    al,0x0
  402205:	jmp    0x1d85ab3c
  40220a:	pop    ebp
  40220b:	xlat   BYTE PTR ds:[ebx]
  40220c:	jne    0x4021ef
  40220e:	fiadd  DWORD PTR [eax-0x2c]
  402211:	jmp    0x8200b348
  402216:	dec    ecx
  402217:	xlat   BYTE PTR ds:[ebx]
  402218:	jne    0x40220b
  40221a:	mov    dh,al
  40221c:	stc    
  40221d:	test   BYTE PTR [ebx-0x740eba73],0x61
  402224:	cld    
  402225:	sar    DWORD PTR [ecx],1
  402227:	ret    
  402228:	add    cl,ch
  40222a:	xchg   DWORD PTR [edi+0xff74],edx
  402230:	mov    esp,DWORD PTR [ecx-0x8]
  402233:	cmp    edi,edx
  402235:	adc    ebp,eax
  402237:	cmp    BYTE PTR [eax],dh
  402239:	adc    al,0x0
  40223b:	jo     0x40222e
  40223d:	(bad)  
  40223f:	cmp    al,0x49
  402241:	in     al,dx
  402242:	or     DWORD PTR [edx+0x1cff1432],ebx
  402248:	dec    ebp
  402249:	out    dx,eax
  40224a:	mov    ebx,0x8bd75ba2
  40224f:	sub    al,0x41
  402251:	pop    es
  402252:	enter  0x6296,0x44
  402256:	(bad)  
  402257:	cld    
  402258:	sub    ch,bh
  40225a:	push   0x7f
  40225c:	sbb    edx,edi
  40225e:	leave  
  40225f:	stos   DWORD PTR es:[edi],eax
  402260:	push   ds
  402261:	xlat   BYTE PTR ds:[ebx]
  402262:	push   esp
  402263:	(bad)  
  402264:	(bad)  
  402265:	xchg   edx,eax
  402266:	les    ebx,FWORD PTR [ecx-0xd]
  402269:	push   eax
  40226a:	hlt    
  40226b:	jmp    0x644036a2
  402270:	jno    0x40224a
  402272:	push   eax
  402273:	dec    esi
  402274:	or     DWORD PTR [eax+ebp*8],0xbe8600
  40227b:	add    BYTE PTR [ebp-0x2d],cl
  40227e:	js     0x4022cd
  402280:	daa    
  402281:	fs or  al,ch
  402284:	xchg   bh,ah
  402286:	(bad)  
  402287:	inc    DWORD PTR [ecx+0x54]
  40228a:	clc    
  40228b:	and    DWORD PTR [ebp-0xb8dfb16],0xffffff8d
  402292:	ins    DWORD PTR es:[edi],dx
  402293:	clc    
  402294:	add    BYTE PTR [eax],al
  402296:	int3   
  402297:	jmp    0x7c811f11
  40229c:	rol    BYTE PTR [eax],cl
  40229e:	cwde   
  40229f:	aad    0xbf
  4022a1:	je     0x40227d
  4022a3:	jmp    0x38f91b1d
  4022a8:	add    al,ch
  4022aa:	cdq    
  4022ab:	aad    0xff
  4022ad:	call   DWORD PTR [edi+0x11d0f79a]
  4022b3:	pop    ss
  4022b4:	hlt    
  4022b5:	(bad)  
  4022b6:	fucomp st(3)
  4022b8:	call   0x4fed52
  4022bd:	jmp    0x40233d
  4022bf:	jmp    0x402336
  4022c1:	or     BYTE PTR [eax+0x16],dh
  4022c4:	sti    
  4022c5:	inc    DWORD PTR [edi-0x65364008]
  4022cb:	adc    eax,DWORD PTR [eax]
  4022cd:	jmp    0x40231d
  4022cf:	idiv   DWORD PTR [edi+0x138ac9]
  4022d5:	push   0x4a
  4022d7:	cmp    ah,bh
  4022d9:	jmp    FWORD PTR ds:0xb0f0e7da
  4022df:	jmp    0x4022e0
  4022e1:	(bad)  
  4022e2:	dec    ebp
  4022e3:	loopne 0x4022e6
  4022e5:	add    BYTE PTR [eax],cl
  4022e7:	adc    cl,BYTE PTR [ebp-0xbf97bb]
  4022ed:	jne    0x4022ef
  4022ef:	mov    edx,0x3e31fbd2
  4022f4:	jmp    0x47b977c
  4022f9:	je     0x4022fb
  4022fb:	add    BYTE PTR [ebx-0x22],al
  4022fe:	mov    ebx,0x6f1f6c3b
  402303:	pop    es
  402304:	cdq    
  402305:	in     al,dx
  402306:	add    eax,DWORD PTR [eax]
  402308:	xor    DWORD PTR [edx+0x2],edx
  40230b:	sub    esi,ecx
  40230d:	add    al,BYTE PTR [esi]
  40230f:	sub    esi,ecx
  402311:	and    al,0xc6
  402313:	add    al,0x31
  402315:	cwde   
  402316:	jl     0x402304
  402318:	mov    dl,0x2f
  40231a:	in     al,dx
  40231b:	(bad)  
  40231c:	hlt    
  40231d:	push   cs
  40231e:	push   esp
  40231f:	call   FWORD PTR [ebx+eiz*8]
  402322:	fisttp DWORD PTR [eax-0x7e]
  402325:	jmp    0x40232a
  402327:	test   DWORD PTR [ecx+0x63],esi
  40232a:	sbb    al,0xff
  40232c:	add    al,0xe3
  40232e:	fcmovnu st,st(0)
  402330:	mov    DWORD PTR [esi-0x3d0b7618],esi
  402336:	call   0x131398b0
  40233b:	shl    BYTE PTR [ecx],cl
  40233d:	jmp    0x40233b
  40233f:	mov    edi,0x75e8bedd
  402344:	sub    eax,0x1f86e9e
  402349:	rcl    DWORD PTR [edi],cl
  40234b:	or     esi,DWORD PTR [ecx]
  40234d:	jmp    0x402337
  40234f:	jne    0x402396
  402351:	sub    eax,0xffffffd1
  402354:	xor    ebx,ebp
  402356:	call   0xb2d34cd0
  40235b:	cli    
  40235c:	mov    ?,WORD PTR cs:[edx+0x390000c2]
  402363:	jmp    0x4023b3
  402365:	mov    ecx,DWORD PTR ds:0x82e8bf6a
  40236b:	ror    ah,cl
  40236d:	lea    esi,[esp+edx*1+0x65]
  402371:	push   ebx
  402372:	push   es
  402373:	pop    edi
  402374:	icebp  
  402375:	(bad)  
  402377:	shr    ecx,0x3
  40237a:	lods   al,BYTE PTR ds:[esi]
  40237b:	rcr    esi,cl
  40237d:	jnp    0x402325
  40237f:	adc    ebp,ecx
  402381:	add    esp,esi
  402383:	pop    esi
  402384:	icebp  
  402385:	(bad)  [ebp-0x5717c925]
  40238b:	dec    esi
  40238c:	xor    eax,0x11d844e8
  402391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402392:	loopne 0x4023a7
  402394:	jmp    0x6d44a295
  402399:	xchg   DWORD PTR [ecx],esi
  40239b:	adc    al,0xe9
  40239d:	jp     0x402393
  40239f:	jecxz  0x4023a7
  4023a1:	outs   dx,BYTE PTR ds:[esi]
  4023a2:	popf   
  4023a3:	jmp    0x4023d0
  4023a5:	fidiv  DWORD PTR [ecx]
  4023a7:	adc    al,0x6a
  4023a9:	mov    edi,0x3e90f2d
  4023ae:	loope  0x4023c3
  4023b0:	cmp    esp,ebx
  4023b2:	fcom   DWORD PTR [ebx]
  4023b4:	jmp    0xc58ecbbc
  4023b9:	out    0xfc,eax
  4023bb:	ffreep st(1)
  4023bd:	xchg   edi,eax
  4023be:	pop    eax
  4023bf:	adc    ebp,ecx
  4023c1:	sub    BYTE PTR [ebp+0xf],0xe4
  4023c5:	add    eax,DWORD PTR [eax]
  4023c7:	add    BYTE PTR [ecx],dh
  4023c9:	add    al,0xe9
  4023cb:	push   ebx
  4023cc:	dec    ecx
  4023cd:	sub    ecx,0x3
  4023d0:	xor    DWORD PTR [ebx+0x13dbdc2c],ecx
  4023d6:	sahf   
  4023d7:	jno    0x402426
  4023d9:	aam    0x1c
  4023db:	lock ss pop esi
  4023de:	and    edi,0x8d91c4a4
  4023e4:	sbb    BYTE PTR ds:0x28f582e9,dl
  4023ea:	add    BYTE PTR [eax+0x70],ah
  4023ed:	int3   
  4023ee:	push   esp
  4023f0:	push   ss
  4023f1:	mov    ebp,0x142d3865
  4023f6:	call   esp
  4023f8:	cli    
  4023f9:	mov    ebx,0xd40e5390
  4023fe:	push   0xffffffe1
  402400:	mov    ah,BYTE PTR [ebx+0x28]
  402403:	test   al,0x32
  402405:	shl    DWORD PTR [ebp-0xf],cl
  402408:	cli    
  402409:	lock cld 
  40240b:	ss into 
  40240d:	pop    ds
  40240e:	fsubr  DWORD PTR [esi]
  402410:	inc    eax
  402411:	enter  0x9cff,0xca
  402415:	mov    ebx,0xd3d61dba
  40241a:	and    esi,DWORD PTR [ecx]
  40241c:	into   
  40241d:	dec    ecx
  40241e:	clc    
  40241f:	push   cs
  402420:	and    BYTE PTR [edi+edi*8-0x1f445584],bh
  402427:	std    
  402428:	xchg   edi,eax
  402429:	shl    DWORD PTR [ebx],cl
  40242b:	adc    DWORD PTR [eax],eax
  40242d:	add    BYTE PTR [esi+0x3e01ec49],cl
  402433:	adc    al,0x0
  402435:	jmp    0xd2286dc9
  40243a:	xchg   ebx,edx
  40243c:	(bad)  
  40243d:	jmp    0xc1486dd1
  402442:	test   ebp,ecx
  402444:	inc    esi
  402446:	jmp    0x40241e
  402448:	pop    ebx
  402449:	mov    al,0x70
  40244b:	sbb    BYTE PTR [eax],al
  40244d:	sbb    al,0xda
  40244f:	mov    edi,0xd34d2c83
  402454:	jae    0x402447
  402456:	dec    edi
  402457:	dec    ecx
  402458:	or     BYTE PTR [ecx-0x16ff1acf],dl
  40245e:	sbb    edx,esp
  402460:	leave  
  402461:	stos   DWORD PTR es:[edi],eax
  402462:	rcl    DWORD PTR cs:[eax+eax*1-0x5d],cl
  402467:	jmp    0x4023f4
  402469:	inc    ebp
  40246a:	and    BYTE PTR [eax+eax*4],dl
  40246d:	add    BYTE PTR [eax],cl
  40246f:	pop    ss
  402470:	push   eax
  402471:	push   0x58
  402473:	lock repnz rcr BYTE PTR [eax],1
  402477:	pop    ss
  402478:	leave  
  402479:	ret    0x1714
  40247c:	push   ebp
  40247d:	mov    ebp,DWORD PTR [edx+eiz*2-0x4]
  402481:	mov    edi,ebp
  402483:	into   
  402484:	mov    cl,BYTE PTR [ebp-0x24]
  402487:	mov    ch,0xe
  402489:	push   ecx
  40248a:	or     eax,esi
  40248c:	add    ch,BYTE PTR [ebx]
  40248e:	or     dh,al
  402490:	stos   DWORD PTR es:[edi],eax
  402491:	pop    ecx
  402492:	add    BYTE PTR [eax],al
  402494:	pop    ebx
  402495:	mov    eax,0x5a62f303
  40249a:	leave  
  40249b:	ret    0x16c0
  40249e:	push   ebp
  40249f:	mov    ebp,DWORD PTR [ecx+eiz*2]
  4024a2:	push   edi
  4024a3:	mov    edi,DWORD PTR [ebp+0x258bfbca]
  4024a9:	iret   
  4024aa:	mov    cl,BYTE PTR [ebp+0x78]
  4024ad:	mov    ch,0x2
  4024af:	repz in al,0x59
  4024b2:	pop    esi
  4024b3:	leave  
  4024b4:	pop    edx
  4024b5:	retf   
  4024b6:	call   DWORD PTR [ebx+eax*1-0x14]
  4024ba:	push   esi
  4024bb:	push   edi
  4024bc:	add    eax,DWORD PTR [ebx+0x8]
  4024bf:	cld    
  4024c0:	adc    ecx,DWORD PTR [ebx]
  4024c2:	adc    BYTE PTR [ebx],ch
  4024c4:	cwde   
  4024c5:	dec    esp
  4024c6:	jge    0x4024d4
  4024c8:	jnp    0x4024df
  4024ca:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024cc:	arpl   WORD PTR [ebp+0x59080175],cx
  4024d2:	pop    esi
  4024d3:	leave  
  4024d4:	call   0x83eb:0xc354ffcb
  4024db:	les    ebx,FWORD PTR [ecx+eiz*2+0x15315357]
  4024e2:	add    al,BYTE PTR [ecx]
  4024e4:	xor    DWORD PTR [ebx-0x5cc68a1c],edi
  4024ea:	xchg   ebx,eax
  4024eb:	call   FWORD PTR [esi]
  4024ed:	push   ebx
  4024ee:	jns    0x40256d
  4024f0:	sub    DWORD PTR [edx],eax
  4024f2:	cmp    eax,0x404e32b
  4024f7:	add    DWORD PTR [eax],eax
  4024f9:	add    BYTE PTR [ecx],dh
  4024fb:	mov    ebx,0x713b147b
  402500:	ret    0xf8e2
  402503:	or     BYTE PTR ss:[bp+0x7a],dh
  402508:	js     0x40257f
  40250a:	xor    eax,0x31fe3f01
  40250f:	es mov ebx,0x35fa2b
  402515:	cmp    edi,DWORD PTR [ecx+0x6c00e478]
  40251b:	stc    
  40251c:	jns    0x402522
  40251e:	add    BYTE PTR [ebx+0x7126fe3e],bh
  402524:	dec    edi
  402525:	(bad)  
  402526:	mov    ebx,0x2d8829b7
  40252b:	(bad)  
  40252c:	jns    0x402573
  40252e:	sahf   
  40252f:	inc    ebx
  402530:	add    BYTE PTR [edx],bh
  402532:	lock test DWORD PTR [esi],esi
  402535:	adc    BYTE PTR [ebx],al
  402537:	mov    ebp,0x7e87c918
  40253c:	outs   dx,BYTE PTR ds:[esi]
  40253d:	aad    0xda
  40253f:	adc    DWORD PTR [esi-0x37],eax
  402542:	jae    0x4024fb
  402544:	add    edx,DWORD PTR [ebp-0x46]
  402547:	pop    DWORD PTR [eax+0x4e2e69c4]
  40254d:	push   edi
  40254e:	pop    esi
  40254f:	or     ah,bh
  402551:	pop    edx
  402552:	stos   DWORD PTR es:[edi],eax
  402553:	mov    esi,0x354c457b
  402558:	inc    eax
  402559:	add    DWORD PTR [ecx+0xe82c14],edi
  40255f:	add    BYTE PTR [edx-0x55c2d933],ch
  402565:	inc    edi
  402566:	in     eax,0xbc
  402568:	je     0x402536
  40256a:	jmp    0x72545672
  40256f:	ss inc ecx
  402571:	mov    ch,0x29
  402573:	out    0x6c,al
  402575:	iret   
  402576:	out    0xad,al
  402578:	je     0x402549
  40257a:	fisubr WORD PTR [ebp+0x4e710c1d]
  402580:	(bad)  
  402581:	adc    esi,DWORD PTR [edi+eiz*8-0x185375da]
  402588:	mov    ebx,0x7c7c1127
  40258d:	shl    dh,cl
  40258f:	lods   eax,DWORD PTR ds:[esi]
  402590:	je     0x402561
  402592:	jno    0x4025a3
  402594:	sbb    DWORD PTR [ecx],esp
  402596:	jg     0x4025d6
  402598:	int    0x9d
  40259a:	xchg   esp,eax
  40259b:	in     al,0xb9
  40259d:	daa    
  40259e:	loope  0x402619
  4025a0:	fs shr ebx,1
  4025a3:	dec    esi
  4025a4:	mov    bh,0x9d
  4025a6:	std    
  4025a7:	sub    DWORD PTR [edx+0x3d331156],edi
  4025ad:	add    al,0x6
  4025af:	ds cdq 
  4025b1:	mov    ch,0x29
  4025b3:	jns    0x4025a1
  4025b5:	into   
  4025b6:	popa   
  4025b7:	add    BYTE PTR [ebx-0xd8512aa],bh
  4025bd:	adc    al,BYTE PTR [esi+0x42]
  4025c0:	fcmovu st,st(2)
  4025c2:	stos   DWORD PTR es:[edi],eax
  4025c3:	adc    BYTE PTR [eax],al
  4025c5:	add    BYTE PTR [ecx],dh
  4025c7:	addr16 (bad) 
  4025c9:	lock mov al,0xd7
  4025cc:	mov    ebp,0x1ad066e2
  4025d1:	das    
  4025d2:	jp     0x402572
  4025d4:	and    al,0xe0
  4025d6:	add    ecx,edx
  4025d8:	add    BYTE PTR [edi*1+0x2d99a3bc],bh
  4025df:	adc    al,0x85
  4025e1:	test   eax,0xe9969c22
  4025e6:	xor    dl,BYTE PTR [edi+edi*8]
  4025e9:	sbb    al,0x3d
  4025eb:	mov    esp,0xd012972f
  4025f0:	mov    DWORD PTR [ecx+edi*8],ebp
  4025f3:	iret   
  4025f4:	jne    0x402673
  4025f6:	add    eax,0x32e9cf3d
  4025fb:	sbb    eax,eax
  4025fd:	cmc    
  4025fe:	xchg   ebx,eax
  4025ff:	popf   
  402600:	inc    ebp
  402601:	pop    ecx
  402602:	adc    cl,BYTE PTR [edx-0xc]
  402605:	push   ecx
  402606:	mov    ecx,esi
  402608:	call   DWORD PTR [esi-0x44]
  40260b:	pop    ecx
  40260c:	clc    
  40260d:	dec    esi
  40260e:	mov    al,cl
  402610:	(bad)  
  402611:	mov    esp,0x3975cffa
  402616:	lds    esp,FWORD PTR [eax-0x302dc902]
  40261c:	jne    0x40264b
  40261e:	aad    0x56
  402620:	iret   
  402621:	jmp    0xedb5f558
  402626:	retf   0xcf02
  402629:	jmp    0x6472262e
  40262e:	call   DWORD PTR [esi+esi*1-0x6ce87a5f]
  402635:	iret   
  402636:	call   FWORD PTR [ecx-0x9018676]
  40263c:	xchg   ebx,eax
  40263d:	iret   
  40263e:	jne    0x402635
  402640:	xchg   ebx,eax
  402641:	dec    ecx
  402642:	clc    
  402643:	je     0x4025ee
  402645:	mov    esi,0x6493defe
  40264a:	call   0xf7726
  40264f:	into   
  402650:	or     DWORD PTR [eax+ebp*8],ebx
  402653:	add    BYTE PTR [edi],cl
  402655:	lock (bad) 
  402657:	inc    DWORD PTR [edx]
  402659:	and    BYTE PTR [eax+0x5a],ch
  40265c:	xor    BYTE PTR [ecx+0x0],bl
  40265f:	(bad)  
  402660:	std    
  402661:	pop    ds
  402662:	call   0xfff2b8fa
  402667:	or     esi,DWORD PTR [eax-0x4e]
  40266a:	jne    0x402660
  40266c:	(bad)  
  40266d:	imul   edi,eax,0xffffffff
  402670:	cmp    eax,0xb283e820
  402675:	mov    cl,0xff
  402677:	and    edx,eax
  402679:	mov    cl,0x75
  40267b:	clc    
  40267c:	mov    al,0x8d
  40267e:	std    
  40267f:	call   DWORD PTR [edi+0x600875b2]
  402685:	xchg   esp,eax
  402686:	idiv   edi
  402688:	push   edi
  402689:	sahf   
  40268a:	ret    
  40268b:	pop    ebx
  40268c:	adc    ecx,ebx
  40268e:	or     BYTE PTR [eax],al
  402690:	add    BYTE PTR [eax],al
  402692:	popf   
  402693:	popf   
  402694:	in     al,dx
  402695:	or     DWORD PTR [edi+eiz*8],0x57
  402699:	mov    ecx,DWORD PTR [ebp-0x733ff53a]
  40269f:	sbb    al,0xc7
  4026a1:	add    al,bl
  4026a3:	adc    al,BYTE PTR [eax]
  4026a5:	add    bl,ah
  4026a7:	mov    cl,0x83
  4026a9:	jge    0x4026db
  4026ab:	sbb    DWORD PTR [ebp+0x7],esi
  4026ae:	add    dl,BYTE PTR [ebx]
  4026b0:	add    al,BYTE PTR [eax]
  4026b2:	cwde   
  4026b3:	mov    ebp,0xcab5830f
  4026b8:	add    DWORD PTR [ebp-0x71],esi
  4026bb:	mov    al,0x0
  4026bd:	add    DWORD PTR [eax+0x7302eb12],ebx
  4026c3:	mov    BYTE PTR [ecx+0x21831ca],al
  4026c9:	add    BYTE PTR ds:0x3150fc57,al
  4026cf:	or     ebp,DWORD PTR [esi+0x0]
  4026d2:	data16 addr16 adc bh,bh
  4026d6:	in     al,0xc4
  4026d8:	jmp    0x4026aa
  4026da:	mov    sp,0xb03
  4026de:	jno    0x4026ef
  4026e0:	jno    0x40266f
  4026e2:	in     al,dx
  4026e3:	test   BYTE PTR [edx+ebp*2],dh
  4026e6:	xor    DWORD PTR [eax+0x47],ecx
  4026e9:	hlt    
  4026ea:	loope  0x40270e
  4026ec:	add    al,0xff
  4026ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ef:	retf   
  4026f0:	loopne 0x402767
  4026f2:	and    eax,0xcf9d94
  4026f7:	add    BYTE PTR [ecx],dh
  4026f9:	mov    ebx,0xff9cc00c
  4026fe:	test   BYTE PTR [ebp+0x9],bh
  402701:	mov    esp,0xc0b24657
  402706:	xlat   BYTE PTR ds:[ebx]
  402707:	add    DWORD PTR [ebp+edi*4-0x4306827c],eax
  40270e:	push   edi
  40270f:	cmp    bh,BYTE PTR [edx-0x7ebf2480]
  402715:	push   ebx
  402716:	inc    edx
  402717:	std    
  402718:	ficom  WORD PTR [esi-0x73]
  40271b:	clc    
  40271c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40271d:	js     0x4026fa
  40271f:	push   eax
  402720:	rol    WORD PTR [ebx],1
  402723:	push   0x31
  402725:	(bad)  
  402726:	push   esi
  402727:	adc    BYTE PTR [esi-0x53172050],bh
  40272d:	inc    BYTE PTR [ebx]
  40272f:	add    BYTE PTR [edx],bh
  402731:	sti    
  402732:	push   edi
  402733:	or     bh,dh
  402735:	adc    ch,BYTE PTR [ecx]
  402737:	std    
  402738:	sahf   
  402739:	push   ss
  40273a:	sub    eax,0x8cbf8aff
  40273f:	inc    ebp
  402740:	and    eax,0x2c74c3b2
  402745:	mov    esi,0x14aef856
  40274a:	jmp    0xd210242f
  40274f:	push   0x7e
  402751:	adc    al,0xe9
  402753:	mov    WORD PTR [esi+0x19],gs
  402756:	test   eax,0x44913d56
  40275b:	cld    
  40275c:	add    BYTE PTR [eax],al
  40275e:	xor    BYTE PTR [ecx-0x29],al
  402761:	mov    esp,?
  402763:	sub    ebp,DWORD PTR [ecx]
  402765:	xor    al,0x46
  402767:	inc    edi
  402768:	aad    0xe0
  40276a:	les    esp,FWORD PTR [ebx]
  40276c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40276d:	push   esi
  40276e:	and    eax,0x190c14cd
  402773:	repz xchg ebp,eax
  402775:	loopne 0x40279d
  402777:	ins    DWORD PTR es:[edi],dx
  402778:	mov    al,ds:0x1c1445c5
  40277d:	lea    eax,ds:0x300bfc93
  402783:	adc    al,0xe9
  402785:	cmp    DWORD PTR [ebx+ebx*1+0x6e],0x16
  40278a:	pop    ebp
  40278b:	sti    
  40278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40278d:	add    esp,DWORD PTR [esi+0x316df156]
  402793:	int    0xdc
  402795:	mul    edi
  402797:	inc    esi
  402798:	stc    
  402799:	loopne 0x4027ff
  40279b:	and    BYTE PTR [esi+0x56],al
  40279e:	sub    DWORD PTR [ebp+esi*1+0x20cccee1],edi
  4027a5:	lds    esp,FWORD PTR [ecx]
  4027a7:	adc    al,0x2
  4027a9:	les    ebp,FWORD PTR [edx+0x78e538e3]
  4027af:	sbb    ch,cl
  4027b1:	add    esi,DWORD PTR [ecx]
  4027b3:	jecxz  0x4027b8
  4027b5:	push   esp
  4027b6:	xor    eax,0xc3121b93
  4027bb:	jp     0x4027c2
  4027bd:	and    BYTE PTR [ebx+0xf2d822],0x0
  4027c4:	and    DWORD PTR [edx+0x27bb0700],esi
  4027ca:	test   DWORD PTR [ecx-0x18ffaced],ecx
  4027d0:	ins    DWORD PTR es:[edi],dx
  4027d1:	inc    esi
  4027d2:	fisubr DWORD PTR [edx+0x3eec9928]
  4027d8:	mov    edx,0xa5d60856
  4027dd:	cwde   
  4027de:	jge    0x4027d5
  4027e0:	stos   DWORD PTR es:[edi],eax
  4027e1:	pop    esi
  4027e2:	adc    dl,dh
  4027e4:	jge    0x40282d
  4027e6:	sbb    BYTE PTR [edx+0x7d],ah
  4027e9:	shr    dl,cl
  4027eb:	loope  0x40280d
  4027ed:	adc    eax,0x142da625
  4027f2:	add    BYTE PTR [edx+0x39],dh
  4027f5:	xchg   ecx,eax
  4027f6:	pusha  
  4027f7:	or     BYTE PTR [esp+edx*1+0x33],ch
  4027fb:	stos   DWORD PTR es:[edi],eax
  4027fc:	jbe    0x4027b4
  4027fe:	call   0xc9ac0581
  402803:	stos   DWORD PTR es:[edi],eax
  402804:	and    DWORD PTR [edx*2-0x7c97fe9e],edx
  40280b:	in     al,dx
  40280c:	sub    dl,BYTE PTR [esi*2+0x851efee]
  402813:	cs sbb eax,0x506a0055
  402819:	sbb    BYTE PTR [eax],al
  40281b:	aam    0x37
  40281d:	rol    DWORD PTR [ebp-0xb],cl
  402820:	out    0xfc,eax
  402822:	inc    eax
  402823:	jmp    0x41486a17
  402828:	add    BYTE PTR [eax],al
  40282a:	fld    DWORD PTR es:[eax]
  40282d:	jmp    0x9d4014dd
  402832:	es mov esp,0x14352c35
  402838:	add    esi,DWORD PTR [ecx]
  40283a:	bnd callw 0xa70d
  40283f:	retf   
  402840:	inc    DWORD PTR [eax]
  402842:	and    ecx,DWORD PTR [eax+0x68075ff]
  402848:	call   0x50758c
  40284d:	inc    DWORD PTR ds:0x4ce8531b
  402853:	in     eax,0x0
  402855:	add    bl,ah
  402857:	aad    0x5b
  402859:	leave  
  40285a:	call   0x53ba:0xd355001f
  402861:	sub    ebp,0x17
  402864:	add    BYTE PTR [ebp+0x57],dh
  402867:	rol    BYTE PTR [ebp+0x8],cl
  40286a:	(bad)  
  40286b:	inc    DWORD PTR [eax+0x0]
  40286e:	retf   
  40286f:	xor    ecx,DWORD PTR [eax+eax*1]
  402872:	adc    eax,0x1c45c713
  402877:	fisubr DWORD PTR [eax]
  402879:	inc    ecx
  40287a:	sbb    dl,ch
  40287c:	jne    0x402886
  40287e:	mov    al,0xbd
  402880:	int3   
  402881:	add    BYTE PTR [eax],cl
  402883:	sahf   
  402884:	fdivr  st,st(7)
  402886:	add    eax,0xcce1e81b
  40288b:	push   ss
  40288c:	add    BYTE PTR [ebx],al
  40288e:	add    BYTE PTR [eax],al
  402890:	mov    al,ds:0x63e85355
  402895:	out    dx,al
  402896:	(bad)  
  402897:	jmp    DWORD PTR [ebx-0x71]
  40289a:	push   DWORD PTR [ebp-0x30]
  40289d:	add    eax,0x173cebe8
  4028a2:	add    bh,bh
  4028a4:	xchg   ebp,eax
  4028a5:	sbb    dl,BYTE PTR [ebx-0x18]
  4028a8:	pusha  
  4028a9:	fild   DWORD PTR [eax]
  4028ab:	add    bh,bh
  4028ad:	imul   ecx,DWORD PTR [eax],0xffffffe8
  4028b0:	inc    eax
  4028b1:	out    dx,al
  4028b2:	(bad)  
  4028b3:	inc    DWORD PTR [ebx-0x2a]
  4028b6:	pop    ebx
  4028b7:	leave  
  4028b8:	pop    edx
  4028b9:	pop    ds
  4028ba:	add    BYTE PTR [ebp+0x31],dl
  4028bd:	ss out dx,eax
  4028bf:	xor    DWORD PTR [ebp+0x18],0x36
  4028c3:	push   0x3bc2c
  4028c8:	cdq    
  4028c9:	add    edx,ebx
  4028cb:	inc    DWORD PTR [esi-0x4d03b7cd]
  4028d1:	ja     0x402930
  4028d3:	sub    eax,esi
  4028d5:	mov    esp,0xe6337503
  4028da:	idiv   dh
  4028dc:	fsubr  st(0),st
  4028de:	push   0x0
  4028e0:	retf   
  4028e1:	mov    esp,0x672975dc
  4028e6:	add    al,0xff
  4028e8:	and    al,0xb
  4028ea:	sub    eax,DWORD PTR [ecx+0x31]
  4028ed:	cmp    ah,al
  4028ef:	jns    0x4028da
  4028f1:	jns    0x40294a
  4028f3:	cld    
  4028f4:	add    BYTE PTR [eax],al
  4028f6:	dec    ecx
  4028f7:	sub    cl,bl
  4028f9:	jmp    FWORD PTR [esi]
  4028fb:	jae    0x402944
  4028fd:	cld    
  4028fe:	xor    DWORD PTR [ebx+0x3dde0003],edi
  402904:	sub    eax,DWORD PTR [ecx+0x31]
  402907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402908:	das    
  402909:	mov    esp,DWORD PTR [esi]
  40290b:	inc    esi
  40290c:	inc    edi
  40290d:	or     BYTE PTR [edx+eax*2+0x5d],cl
  402911:	(bad)  
  402912:	inc    BYTE PTR [ecx+eax*2+0x6a167c04]
  402919:	add    BYTE PTR [ebp+edi*2-0xea6aff5],bh
  402920:	sub    DWORD PTR [ecx+0x31],eax
  402923:	pop    edx
  402924:	adc    ch,al
  402926:	je     0x402979
  402928:	(bad)  
  40292a:	cmp    bh,bl
  40292c:	push   edi
  40292d:	add    eax,0xebdf78b8
  402932:	sub    DWORD PTR [esi],edi
  402934:	lds    eax,FWORD PTR [edx+esi*4]
  402937:	adc    al,0xe6
  402939:	add    esp,DWORD PTR [edx+ebx*8]
  40293c:	jb     0x402985
  40293e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40293f:	imul   esp,DWORD PTR [eax],0xb41435c2
  402945:	mov    BYTE PTR [ebp+0x39477265],al
  40294b:	sbb    eax,0x942c5829
  402950:	mov    cl,0x3
  402952:	add    al,0x1e
  402954:	xor    DWORD PTR [ecx+esi*1],eax
  402957:	adc    al,0xe9
  402959:	cmp    BYTE PTR [eax],al
  40295b:	add    BYTE PTR [eax-0x2a],bh
  40295e:	in     eax,0x3
  402960:	fist   DWORD PTR [ebx]
  402962:	inc    ebx
  402963:	add    al,0xcb
  402965:	adc    al,0x43
  402967:	add    al,0xcb
  402969:	adc    edx,DWORD PTR [ecx-0x7c]
  40296c:	xor    DWORD PTR [ecx+ebp*8],edx
  40296f:	fdivr  QWORD PTR [ebx+ebx*1+0x146ae4c1]
  402976:	jmp    0xa93d8303
  40297b:	inc    eax
  40297c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40297d:	sbb    eax,0xdd0fec3a
  402982:	jmp    0xe953028a
  402987:	add    esi,DWORD PTR [ecx]
  402989:	ins    DWORD PTR es:[edi],dx
  40298a:	mov    al,0xc1
  40298c:	xor    eax,0x15891414
  402991:	popf   
  402992:	sub    al,0xc
  402994:	sub    dl,ah
  402996:	cmc    
  402997:	push   es
  402998:	mov    cl,0xb
  40299a:	jmp    0xe9cc61f5
  40299f:	add    esi,DWORD PTR [ecx]
  4029a1:	adc    al,0x20
  4029a3:	shl    DWORD PTR ds:0x29564e14,0xbc
  4029aa:	cmp    ecx,eax
  4029ac:	xor    DWORD PTR [edx+ebp*2],edx
  4029af:	fcmovnb st,st(6)
  4029b1:	aas    
  4029b2:	add    ah,ah
  4029b4:	mov    esp,DWORD PTR [ebx]
  4029b6:	add    cl,ch
  4029b8:	xor    bl,BYTE PTR [ecx]
  4029ba:	xchg   ebp,eax
  4029bb:	sub    DWORD PTR ds:0x12c082,edi
  4029c1:	add    BYTE PTR [edi],ch
  4029c3:	mov    WORD PTR [eax],es
  4029c5:	jmp    0x2c093dfc
  4029ca:	cs adc al,0x55
  4029cd:	jb     0x40296d
  4029cf:	xchg   esp,eax
  4029d0:	(bad)  
  4029d1:	std    
  4029d2:	sbb    DWORD PTR [edx+ebp*2],edx
  4029d5:	jmp    0x1486837
  4029da:	imul   ebx,esp,0xd43fe900
  4029e0:	je     0x4029f5
  4029e2:	sbb    eax,0x7f8ae864
  4029e7:	enter  0x60ff,0xf0
  4029eb:	(bad)  
  4029ec:	pop    eax
  4029ed:	sbb    DWORD PTR [edx+0x3e],ebp
  4029f0:	cld    
  4029f1:	mov    esi,0x79e81be0
  4029f6:	outs   dx,BYTE PTR ds:[esi]
  4029f7:	adc    eax,DWORD PTR [eax]
  4029f9:	loop   0x402a6d
  4029fb:	ds or  al,0xa6
  4029fe:	or     al,0xe8
  402a01:	sbb    DWORD PTR [edi],eax
  402a03:	enter  0xc2ff,0xf2
  402a07:	mov    ebx,0xc8706203
  402a0c:	leave  
  402a0d:	stos   DWORD PTR es:[edi],eax
  402a0e:	xor    DWORD PTR [edx*2-0x749be68e],edx
  402a15:	adc    al,0x29
  402a17:	cmp    dl,BYTE PTR [eax]
  402a19:	sbb    al,BYTE PTR ds:0xa66fa91
  402a1f:	cmp    eax,DWORD PTR [eax]
  402a21:	shl    DWORD PTR [edx],cl
  402a23:	cmp    al,BYTE PTR [ebx]
  402a25:	ret    
  402a26:	add    BYTE PTR [eax],al
  402a28:	xor    bh,BYTE PTR [edx]
  402a2a:	add    eax,ecx
  402a2c:	xor    dl,BYTE PTR [eax+eax*1]
  402a2f:	add    BYTE PTR [eax-0x15],bl
  402a32:	jne    0x402a3c
  402a34:	pusha  
  402a35:	test   edx,0x398c800
  402a3b:	inc    eax
  402a3c:	jl     0x402a3d
  402a3e:	imul   eax,DWORD PTR [eax],0xcb6cbbe8
  402a44:	cwde   
  402a45:	adc    ecx,DWORD PTR [ecx+0x399443]
  402a4b:	push   0xffffff88
  402a4d:	cmp    DWORD PTR [eax],eax
  402a4f:	push   0xffffff9a
  402a51:	cmp    DWORD PTR [eax],eax
  402a53:	dec    ebx
  402a55:	mov    ebx,0x1388cb5e
  402a5a:	or     eax,eax
  402a5c:	cld    
  402a5d:	stc    
  402a5e:	mov    BYTE PTR [ebx+0x5c],al
  402a61:	cmp    DWORD PTR [eax],eax
  402a63:	push   0x58
  402a65:	cmp    DWORD PTR [eax],eax
  402a67:	push   0x4c
  402a69:	add    ebp,eax
  402a6b:	dec    edi
  402a6c:	xchg   ebx,eax
  402a6d:	adc    eax,DWORD PTR [eax]
  402a6f:	mov    DWORD PTR [ebx],ebx
  402a71:	sbb    BYTE PTR [ebx],cl
  402a73:	sar    ch,0xf3
  402a76:	(bad)  
  402a77:	jae    0x402ac5
  402a79:	mov    ebx,0x1348caf2
  402a7e:	push   DWORD PTR [ebx]
  402a80:	shl    BYTE PTR [ebp-0x2de7ff36],0x3
  402a87:	inc    edi
  402a89:	jmp    0x41168d
  402a8e:	cmc    
  402a8f:	jmp    0xd91512c7
  402a94:	add    BYTE PTR [eax],al
  402a96:	iret   
  402a97:	or     eax,0xea87ffff
  402a9c:	sub    eax,eax
  402a9e:	ror    DWORD PTR [ebp+0x8],0xf
  402aa2:	ins    DWORD PTR es:[edi],dx
  402aa3:	rcr    DWORD PTR [ebx-0x37],cl
  402aa6:	sbb    bl,BYTE PTR [ebx]
  402aa8:	add    BYTE PTR [ebp+0x31],dl
  402aab:	xor    ah,bh
  402aad:	push   ebx
  402aae:	stos   BYTE PTR es:[edi],al
  402aaf:	ja     0x402abc
  402ab1:	or     DWORD PTR [edx],0x4e
  402ab4:	dec    edi
  402ab5:	pop    ss
  402ab6:	(bad)  
  402ab7:	mov    DWORD PTR [ebx],ecx
  402ab9:	call   0x431ce6
  402abe:	mov    dh,0x89
  402ac0:	jmp    edi
  402ac2:	fadd   QWORD PTR [edx]
  402ac4:	add    eax,DWORD PTR [eax]
  402ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac7:	jmp    0xbcabd1b7
  402acc:	add    ebx,DWORD PTR [ebx+0x68]
  402acf:	cli    
  402ad0:	(bad)  
  402ad1:	jmp    ebp
  402ad3:	inc    ecx
  402ad4:	out    0x81,eax
  402ad6:	ins    DWORD PTR es:[edi],dx
  402ad7:	sbb    al,0xea
  402ad9:	(bad)  
  402ada:	jle    0x402a82
  402adc:	xor    al,BYTE PTR [ebx+0x412b4034]
  402ae2:	xor    DWORD PTR [ebp+0x1f66154f],edi
  402ae8:	dec    edi
  402ae9:	sub    al,dh
  402aeb:	mov    esp,0xd5588aeb
  402af0:	fld    st(7)
  402af2:	add    BYTE PTR [eax],al
  402af4:	xor    al,0x8
  402af6:	sub    al,0x41
  402af8:	xor    DWORD PTR [ebp+0x3a310003],edi
  402afe:	pop    ss
  402aff:	jns    0x402b0a
  402b01:	cld    
  402b02:	add    eax,DWORD PTR [eax]
  402b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b05:	enter  0x35d8,0xa8
  402b09:	jecxz  0x402b4d
  402b0b:	add    BYTE PTR [ecx],cl
  402b0d:	adc    bl,bl
  402b0f:	call   DWORD PTR [esi]
  402b11:	outs   dx,DWORD PTR ds:[esi]
  402b12:	(bad)  
  402b13:	js     0x402b6e
  402b15:	cld    
  402b16:	add    eax,DWORD PTR [eax]
  402b18:	xor    DWORD PTR [ebx+0x4bb48d03],edi
  402b1e:	jmp    0xec6c2222
  402b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b24:	loope  0x402b3a
  402b26:	fnstenvw [edi+ecx*4-0x3a2116b3]
  402b2e:	mov    ecx,0x4ec4bbeb
  402b33:	fnstcw WORD PTR [edi+ecx*2+0x47593445]
  402b3a:	adc    DWORD PTR [ebx+0x31],eax
  402b3d:	cmp    al,0xeb
  402b3f:	add    esi,DWORD PTR [ecx]
  402b41:	xchg   esp,eax
  402b42:	inc    ecx
  402b43:	jno    0x402bbf
  402b45:	adc    al,0xe9
  402b47:	or     al,0x71
  402b49:	adc    eax,0x14303d64
  402b4e:	jmp    0xff00d813
  402b53:	fmul   DWORD PTR [esi+0x3e914]
  402b59:	add    BYTE PTR [ecx],dh
  402b5b:	int    0x64
  402b5d:	fmul   QWORD PTR [esi+0x26d8f6c5]
  402b63:	adc    al,0xe9
  402b65:	ins    DWORD PTR es:[edi],dx
  402b66:	xor    DWORD PTR [edx],edi
  402b68:	jmp    0xe97a5cda
  402b6d:	xchg   BYTE PTR [esp+ecx*8+0x6456d8c6],dh
  402b74:	pop    esp
  402b75:	jle    0x402bc4
  402b77:	mov    ch,0xc6
  402b79:	fsub   st,st(1)
  402b7b:	les    esi,FWORD PTR [edi+ecx*8+0x4e]
  402b7f:	lds    esi,FWORD PTR [esi-0x3e384328]
  402b85:	ss cli 
  402b87:	adc    ebp,ecx
  402b89:	or     al,0xf1
  402b8b:	adc    al,0x64
  402b8d:	hlt    
  402b8e:	xor    DWORD PTR [ecx+ebp*8],edx
  402b91:	imul   esp,esp,0xfffffffb
  402b94:	daa    
  402b95:	add    al,0x99
  402b97:	inc    edi
  402b98:	rol    DWORD PTR [edx+0x31],1
  402b9b:	mov    esp,0xc4fed7fe
  402ba0:	add    dl,ah
  402ba2:	repnz adc al,0x84
  402ba5:	js     0x402bd9
  402ba7:	adc    al,0x0
  402ba9:	jb     0x402b4d
  402bab:	xchg   esi,eax
  402bac:	test   DWORD PTR [ebp-0x37],ebx
  402baf:	(bad)  
  402bb0:	(bad)  
  402bb1:	mov    ecx,0x4dbcbc1c
  402bb6:	jmp    0x3969377f
  402bbb:	nop
  402bbc:	fucompp 
  402bbe:	add    BYTE PTR [eax],al
  402bc0:	xor    dl,BYTE PTR [ecx+ecx*4]
  402bc3:	ins    BYTE PTR es:[edi],dx
  402bc4:	shl    BYTE PTR [edi+edi*8-0x177148d2],cl
  402bcb:	push   ss
  402bcc:	mov    esp,eax
  402bce:	push   eax
  402bcf:	xchg   ecx,eax
  402bd0:	ret    
  402bd1:	sti    
  402bd2:	inc    eax
  402bd3:	jmp    0xff20aa51
  402bd8:	les    bp,DWORD PTR [eax-0x15]
  402bdc:	xor    dl,BYTE PTR [eax+eax*4]
  402bdf:	adc    DWORD PTR [ecx+0x2af6ffc8],esp
  402be5:	aam    0xf
  402be7:	gs iret 
  402be9:	adc    eax,DWORD PTR [eax]
  402beb:	jmp    0xee41f7a3
  402bf0:	fsub   QWORD PTR [edi+0x6432e900]
  402bf6:	call   DWORD PTR [ebp+ebx*2-0x239004c]
  402bfd:	les    esi,FWORD PTR [ebp-0x3ba947]
  402c03:	shl    DWORD PTR [edi+edi*4],0xff
  402c07:	scas   al,BYTE PTR es:[edi]
  402c08:	mov    eax,0xfe96e899
  402c0d:	ret    
  402c0e:	push   eax
  402c0f:	adc    esp,esi
  402c11:	in     al,dx
  402c12:	inc    eax
  402c13:	jmp    0x7f20b617
  402c18:	out    0xc3,al
  402c1a:	push   0x181a00
  402c1f:	and    BYTE PTR [eax+0xfffb53],0x0
  402c26:	jg     0x402c37
  402c28:	shl    BYTE PTR [esp+edx*1-0x69],0xbd
  402c2d:	call   0x24017b1
  402c32:	push   es
  402c33:	pop    ds
  402c34:	push   eax
  402c35:	push   eax
  402c36:	dec    ebp
  402c37:	xchg   ebp,eax
  402c38:	cld    
  402c39:	out    dx,eax
  402c3a:	jg     0x402c27
  402c3c:	push   eax
  402c3d:	call   0x40fcc2
  402c42:	cwde   
  402c43:	mov    WORD PTR [ebp-0x149004],es
  402c49:	push   eax
  402c4a:	pop    edi
  402c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c4c:	in     al,dx
  402c4d:	out    dx,eax
  402c4e:	dec    edi
  402c4f:	jmp    0x402c39
  402c51:	iret   
  402c52:	inc    esp
  402c53:	jmp    0x402c54
  402c55:	pop    eax
  402c56:	aas    
  402c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c58:	call   0x512b6c4c
  402c5d:	inc    DWORD PTR [ebp-0x54]
  402c60:	out    dx,eax
  402c61:	(bad)  
  402c62:	jg     0x402c13
  402c64:	mov    esp,0xe8ea7ff4
  402c69:	sbb    DWORD PTR [eax-0x16],esp
  402c6c:	(bad)  
  402c6d:	jmp    0x402ca7
  402c6f:	lea    eax,[ebp-0x159004]
  402c75:	push   eax
  402c76:	jo     0x402c92
  402c78:	leave  
  402c79:	add    BYTE PTR [eax+0x57],bl
  402c7c:	push   eax
  402c7d:	(bad)  
  402c7e:	aad    0xea
  402c80:	out    dx,eax
  402c81:	(bad)  
  402c82:	jg     0x402c8b
  402c84:	push   DWORD PTR [ebp-0x4594]
  402c8a:	add    BYTE PTR [eax],al
  402c8c:	lock inc ebx
  402c8e:	hlt    
  402c8f:	dec    edi
  402c91:	scas   al,BYTE PTR es:[edi]
  402c92:	repnz idiv DWORD PTR [edi+0x31b5ffe9]
  402c99:	(bad)  
  402c9a:	out    0xff,al
  402c9c:	push   cs
  402c9d:	xchg   ebp,eax
  402c9e:	fdivrp st(7),st
  402ca0:	push   es
  402ca1:	call   0xffd6:0x920585d6
  402ca8:	or     BYTE PTR [edx],al
  402caa:	aad    0xff
  402cac:	out    dx,al
  402cad:	xor    DWORD PTR [eax-0x4],edx
  402cb0:	fldcw  WORD PTR [edx]
  402cb2:	retf   0x3100
  402cb5:	out    0x3,eax
  402cb7:	call   FWORD PTR [esp+ebx*2+0x54ceffe6]
  402cbe:	xor    esi,esp
  402cc0:	(bad)  
  402cc1:	pop    ecx
  402cc2:	imul   eax,DWORD PTR [eax],0xefe747be
  402cc8:	mov    dh,0x9
  402cca:	jmp    0x402d0f
  402ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ccd:	icebp  
  402cce:	aad    0x8d
  402cd0:	lods   al,BYTE PTR ds:[esi]
  402cd1:	adc    dh,ah
  402cd3:	call   FWORD PTR [esi-0x5e4a2984]
  402cd9:	sbb    esi,edx
  402cdb:	call   FWORD PTR [ecx+0x3100cbfe]
  402ce1:	xor    bl,al
  402ce3:	js     0x402ccf
  402ce5:	ror    DWORD PTR [edi-0x2a367910],0xe8
  402cec:	push   cs
  402ced:	ret    0xffd5
  402cf0:	add    BYTE PTR [eax],al
  402cf2:	mov    eax,0x5eefec2f
  402cf7:	loope  0x402cce
  402cf9:	mov    ch,0x49
  402cfb:	(bad)  
  402cfd:	call   FWORD PTR [ecx+0x31]
  402d00:	int    0xff
  402d02:	inc    esi
  402d03:	lea    ecx,[edi+0x28]
  402d06:	lock lods al,BYTE PTR ds:[esi]
  402d08:	aam    0xb5
  402d0a:	dec    ebp
  402d0b:	(bad)  
  402d0d:	call   FWORD PTR [ecx]
  402d0f:	cs int3 
  402d11:	add    BYTE PTR [ecx],dh
  402d13:	adc    al,0xf2
  402d15:	ret    
  402d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d17:	sbb    eax,0xb2098772
  402d1c:	xchg   esi,eax
  402d1d:	aad    0xba
  402d1f:	les    esp,FWORD PTR [edx+0x17]
  402d22:	jl     0x402d10
  402d24:	daa    
  402d25:	add    al,0x2
  402d27:	jns    0x402da7
  402d29:	(bad)  
  402d2a:	or     eax,0xd9d576b2
  402d2f:	sub    esp,DWORD PTR [ecx+0x6c8f3104]
  402d35:	loopne 0x402d05
  402d37:	rcr    DWORD PTR [esi+0x34],0xd6
  402d3b:	xchg   DWORD PTR [ebp-0x1b],eax
  402d3e:	into   
  402d3f:	rol    DWORD PTR [ecx+0x53],0xf8
  402d43:	adc    al,0xe9
  402d45:	jle    0x402d38
  402d47:	cmp    al,0xb2
  402d49:	aam    0x7c
  402d4b:	mov    al,0x46
  402d4d:	aad    0xae
  402d4f:	lods   al,BYTE PTR ds:[esi]
  402d50:	das    
  402d51:	out    0xa6,al
  402d53:	shl    DWORD PTR [eax+0x7f],0x0
  402d57:	add    BYTE PTR [ecx-0x692ae14f],cl
  402d5d:	xchg   DWORD PTR [ecx],eax
  402d5f:	in     eax,0x8e
  402d61:	rol    DWORD PTR [ecx],0x16
  402d64:	jle    0x402d27
  402d66:	push   es
  402d67:	mov    eax,ds:0x3a7ebf8
  402d6c:	jbe    0x402cf5
  402d6e:	or     eax,0x1c16ee5
  402d73:	and    edi,DWORD PTR [ecx+0x14]
  402d76:	jmp    0x2889e83
  402d7b:	mov    DWORD PTR [esp+ebp*4-0x72b12b3a],esp
  402d82:	(bad)  [eax+0x43113b04]
  402d88:	xor    ebp,eax
  402d8a:	test   esp,edx
  402d8c:	jl     0x402d46
  402d8e:	add    dh,al
  402d90:	add    eax,0xfae1e8c1
  402d95:	adc    eax,DWORD PTR [eax]
  402d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d98:	scas   eax,DWORD PTR es:[edi]
  402d99:	ret    
  402d9a:	out    dx,eax
  402d9b:	sahf   
  402d9c:	std    
  402d9d:	stos   DWORD PTR es:[edi],eax
  402d9e:	pop    edx
  402d9f:	xchg   ebp,esp
  402da1:	sar    bh,0x54
  402da4:	push   cs
  402da5:	mov    cl,0xff
  402da7:	xchg   BYTE PTR [edx],cl
  402da9:	push   ecx
  402daa:	out    dx,al
  402dab:	jle    0x402d8a
  402dad:	pusha  
  402dae:	pop    esi
  402daf:	mov    al,ds:0x7d8b66f1
  402db4:	pop    eax
  402db5:	or     al,0xe8
  402db7:	push   edx
  402db8:	in     al,dx
  402db9:	sar    bh,0x72
  402dbc:	add    BYTE PTR [eax],al
  402dbe:	mov    ds:0x1a3a35c0,al
  402dc3:	push   ebx
  402dc4:	add    BYTE PTR [esi+0x30],bl
  402dc7:	shl    DWORD PTR [ebp-0xf],0xb5
  402dcb:	push   ebp
  402dcc:	add    al,0x70
  402dce:	(bad)  
  402dcf:	in     eax,0x28
  402dd1:	test   al,0x32
  402dd3:	retf   
  402dd4:	ret    0x32e5
  402dd7:	mov    edx,DWORD PTR [di]
  402dda:	mov    cl,0xd7
  402ddc:	clc    
  402ddd:	mov    dh,0xd5
  402ddf:	push   esi
  402de0:	clc    
  402de1:	jmp    0x6a404218
  402de6:	fisttp WORD PTR [ebx]
  402de8:	add    BYTE PTR [ebp-0x80],bh
  402deb:	shl    DWORD PTR [ebp-0x13],0x5d
  402def:	inc    esi
  402df0:	or     BYTE PTR [ebx-0xcf953ce],al
  402df6:	add    al,0x89
  402df9:	sub    al,0x81
  402dfb:	lods   al,BYTE PTR ds:[esi]
  402dfc:	pop    es
  402dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dfe:	call   0x33292ec2
  402e03:	adc    al,0x8b
  402e05:	or     al,0x7e
  402e07:	jmp    0x402e49
  402e09:	add    BYTE PTR [eax-0x1f],cl
  402e0c:	adc    ecx,DWORD PTR [ebx+0x473be40d]
  402e12:	sbb    al,0x5d
  402e14:	or     edi,eax
  402e16:	dec    ebp
  402e17:	rol    BYTE PTR [ecx],1
  402e19:	add    BYTE PTR [eax],cl
  402e1b:	adc    al,0xeb
  402e1d:	push   es
  402e1e:	mov    ds:0xff0b23,eax
  402e23:	add    BYTE PTR ds:0xa07d83e1,ch
  402e29:	sbb    BYTE PTR [ebp+0x8],dh
  402e2c:	mov    bh,0x5d
  402e2e:	cld    
  402e2f:	call   0x4011be
  402e34:	push   ebx
  402e35:	dec    ebp
  402e36:	clc    
  402e37:	pop    edi
  402e38:	xchg   ecx,eax
  402e39:	(bad)  
  402e3a:	or     BYTE PTR [eax],al
  402e3c:	lahf   
  402e3d:	ds cmp eax,0x5940d3
  402e43:	jmp    0x402e15
  402e45:	cli    
  402e46:	mov    bh,BYTE PTR [edi]
  402e48:	jo     0x402e95
  402e4a:	idiv   bh
  402e4c:	ja     0x402e0d
  402e4e:	(bad)  
  402e4f:	jne    0x402e4d
  402e51:	retf   0xd305
  402e54:	xor    BYTE PTR [ecx+0x0],bl
  402e57:	add    BYTE PTR [eax+0x4b5f0013],bl
  402e5d:	std    
  402e5e:	mov    ch,ah
  402e60:	(bad)  
  402e62:	imul   eax,DWORD PTR [eax],0xe8085d27
  402e68:	dec    edi
  402e69:	sar    edi,1
  402e6b:	inc    DWORD PTR [ebx]
  402e6d:	sar    bh,1
  402e6f:	jne    0x402df1
  402e71:	(bad)  [edx]
  402e73:	(bad)  
  402e74:	pop    eax
  402e75:	adc    eax,DWORD PTR [ebx+0xf5d59f8]
  402e7b:	push   edi
  402e7c:	enter  0x2221,0x75
  402e80:	pusha  
  402e81:	iret   
  402e82:	lea    esi,[edi+0x31]
  402e85:	lods   al,BYTE PTR ds:[esi]
  402e86:	jle    0x402e50
  402e88:	add    BYTE PTR [eax],al
  402e8a:	inc    edx
  402e8b:	cdq    
  402e8c:	xor    ch,BYTE PTR [eax-0xd]
  402e8f:	and    eax,DWORD PTR [ebp+0x0]
  402e92:	fsubrp st(4),st
  402e94:	outs   dx,BYTE PTR ds:[esi]
  402e95:	enter  0xad31,0xfe
  402e99:	mov    edi,0x40c9b99d
  402e9e:	xor    eax,0x8b5c5dad
  402ea3:	lods   eax,DWORD PTR ds:[esi]
  402ea4:	cmp    ch,al
  402ea6:	mov    esi,0x3a000374
  402eab:	ins    DWORD PTR es:[edi],dx
  402eac:	push   edi
  402ead:	add    eax,0xeb03acf7
  402eb2:	xor    dh,BYTE PTR [edi+0xa]
  402eb5:	add    BYTE PTR [esi+0x31c6b295],al
  402ebb:	lods   eax,DWORD PTR ds:[esi]
  402ebc:	xchg   al,bh
  402ebe:	xor    bl,dh
  402ec0:	push   es
  402ec1:	(bad)  
  402ec2:	lods   eax,DWORD PTR cs:[esi]
  402ec4:	jle    0x402e8d
  402ec6:	outs   dx,DWORD PTR ds:[esi]
  402ec7:	xchg   BYTE PTR [edx+eax*8-0x74c752d3],bh
  402ece:	int    0x29
  402ed0:	(bad)  
  402ed1:	cld    
  402ed2:	stos   BYTE PTR es:[edi],al
  402ed3:	ja     0x402ed4
  402ed5:	add    al,0x31
  402ed7:	fld    QWORD PTR [ebx]
  402ed9:	add    BYTE PTR [ecx],al
  402edb:	push   ebp
  402edc:	shl    ebp,0x9e
  402edf:	cmc    
  402ee0:	jnp    0x402f27
  402ee2:	xchg   ebp,eax
  402ee3:	sbb    eax,0x9f8e0c58
  402ee8:	iret   
  402ee9:	(bad)  
  402eea:	cld    
  402eeb:	mov    ah,0xdb
  402eed:	hlt    
  402eee:	add    BYTE PTR [eax],al
  402ef0:	test   BYTE PTR ds:0xdcfcffd2,dl
  402ef6:	shl    BYTE PTR [ebp+0x3d],cl
  402ef9:	(bad)  
  402efa:	push   edi
  402efb:	cld    
  402efc:	pop    ecx
  402efd:	xor    al,0x8
  402eff:	add    BYTE PTR [ecx],dh
  402f01:	adc    al,0xe6
  402f03:	push   edi
  402f04:	push   ebp
  402f05:	stos   DWORD PTR es:[edi],eax
  402f06:	jns    0x402edf
  402f08:	dec    esi
  402f09:	mov    esi,0x1435c6a0
  402f0e:	cmp    bl,BYTE PTR [esi+ebx*1-0x13]
  402f12:	daa    
  402f13:	add    al,0x49
  402f15:	loop   0x402ebe
  402f17:	add    al,0x31
  402f19:	or     DWORD PTR [ecx-0x6e76bca8],ebp
  402f1f:	pop    esp
  402f20:	dec    edx
  402f21:	jmp    0x402f4a
  402f23:	add    al,0x82
  402f25:	lods   al,BYTE PTR ds:[esi]
  402f26:	mov    cl,0xca
  402f28:	xor    DWORD PTR [edx+ecx*2],edx
  402f2b:	adc    bl,BYTE PTR [eax+0x53]
  402f2e:	jmp    0x72a8215f
  402f33:	loopne 0x402f94
  402f35:	popa   
  402f36:	push   ss
  402f37:	shl    DWORD PTR [esp+ecx*1-0x7f],1
  402f3b:	lahf   
  402f3c:	out    dx,eax
  402f3d:	adc    al,0xe9
  402f3f:	jae    0x402f6b
  402f41:	aam    0xdc
  402f43:	or     BYTE PTR [esi+0x59],dh
  402f46:	mov    edi,0xe90cf3ba
  402f4b:	jl     0x402f91
  402f4d:	or     al,0x79
  402f4f:	jge    0x402f2a
  402f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f52:	jb     0x402fab
  402f54:	add    BYTE PTR [eax],al
  402f56:	and    eax,0xe8d028e9
  402f5b:	mov    ebp,0xa4a6d136
  402f60:	cmp    esp,DWORD PTR [edx+0x3e694c1]
  402f66:	sbb    eax,0x9934b61b
  402f6b:	xchg   edi,eax
  402f6c:	das    
  402f6d:	add    al,0x31
  402f6f:	or     DWORD PTR [ecx],ebp
  402f71:	push   edi
  402f72:	ss pop ebp
  402f74:	mov    ds:0xf1d26831,al
  402f79:	add    edi,DWORD PTR [eax+0x7b6a0016]
  402f7f:	sbb    bl,ch
  402f81:	pop    ss
  402f82:	lods   eax,DWORD PTR ds:[esi]
  402f83:	adc    eax,DWORD PTR [eax]
  402f85:	jmp    0x3f9b8cbc
  402f8a:	mov    dl,dl
  402f8c:	or     cl,ch
  402f8e:	dec    DWORD PTR [eax+0xbf762ec]
  402f94:	or     ebp,DWORD PTR [ecx+0x18016de]
  402f9a:	xor    eax,0x32710947
  402f9f:	adc    al,0x0
  402fa1:	jmp    0xe9450181
  402fa6:	xor    eax,0xb2f6ebe2
  402fab:	sti    
  402fac:	pop    ebx
  402fad:	sbb    eax,0xbe38942e
  402fb2:	addr16 adc eax,0x1432e8ba
  402fb8:	add    BYTE PTR [edx+0x7a370000],dl
  402fbe:	add    cl,ch
  402fc0:	xor    dl,BYTE PTR [eax+eax*2]
  402fc3:	imul   ebp,DWORD PTR [edx],0x554d7514
  402fc9:	ror    cl,cl
  402fcb:	sub    esi,DWORD PTR [esi]
  402fcd:	adc    al,0x55
  402fcf:	(bad)  
  402fd0:	out    0x64,al
  402fd2:	push   esi
  402fd3:	mov    edx,0xec0c573d
  402fd8:	xor    bl,BYTE PTR [eax]
  402fda:	add    cl,ch
  402fdc:	jecxz  0x402f91
  402fde:	push   eax
  402fdf:	inc    ecx
  402fe0:	fadd   st(7),st
  402fe2:	jmp    FWORD PTR [esi]
  402fe4:	sbb    eax,0x15418bbc
  402fe9:	inc    edi
  402fea:	or     BYTE PTR [edx+0x4f],dh
  402fed:	adc    bl,ch
  402fef:	jmp    0x402fbf
  402ff1:	dec    edx
  402ff2:	or     esp,DWORD PTR [eax]
  402ff4:	out    0x16,al
  402ff6:	add    BYTE PTR [eax],0x6e
  402ff9:	mov    esi,0x7963f574
  402ffe:	je     0x403002
  403000:	hlt    
  403001:	stc    
  403002:	sub    al,al
  403004:	repnz xchg ebp,eax
  403006:	leave  
  403007:	jne    0x40306f
  403009:	cmp    bl,al
  40300b:	pop    ebx
  40300c:	push   cs
  40300d:	in     eax,dx
  40300e:	enter  0x50c2,0x10
  403012:	push   ebx
  403013:	push   esi
  403014:	mov    eax,ds:0x4800000b
  403019:	inc    eax
  40301a:	xor    edx,edx
  40301c:	mov    BYTE PTR [edi],ah
  40301e:	fist   DWORD PTR [eax+0x40ac0000]
  403024:	movzx  ecx,al
  403027:	inc    eax
  403028:	cmp    al,0x2b
  40302a:	cwde   
  40302b:	pop    ebp
  40302c:	push   es
  40302d:	nop
  40302e:	fwait
  40302f:	(bad)  
  403030:	ds nop
  403032:	pop    ebx
  403033:	and    al,0x2f
  403035:	nop
  403036:	and    eax,0xca839012
  40303b:	or     edx,DWORD PTR [eax-0x6fd853bd]
  403041:	jl     0x403015
  403043:	or     edi,DWORD PTR [ecx]
  403045:	nop
  403046:	iret   
  403047:	or     al,0x4
  403049:	add    al,0xcb
  40304b:	xchg   DWORD PTR [ebx+0x3c],eax
  40304e:	cdq    
  40304f:	inc    edi
  403050:	jl     0x40305d
  403052:	sbb    al,0xee
  403054:	(bad)  
  403055:	jg     0x40302d
  403057:	sbb    eax,DWORD PTR [ecx-0x70]
  40305a:	retf   
  40305b:	xchg   DWORD PTR [ebx+0x3c],eax
  40305e:	jns    0x4030a7
  403060:	jl     0x40306c
  403062:	pushf  
  403063:	dec    ebp
  403064:	nop
  403065:	jg     0x402ffc
  403067:	sbb    eax,DWORD PTR [edi+0x3]
  40306a:	pop    eax
  40306b:	push   edi
  40306c:	rol    edx,0x96
  40306f:	mov    ch,0xb1
  403071:	shl    DWORD PTR [ecx],0xf7
  403074:	add    eax,0xbbda738b
  403079:	ror    DWORD PTR [ecx-0x456fc53b],0x6
  403080:	je     0x4030e0
  403082:	or     ch,dh
  403084:	cmp    BYTE PTR [ebx-0x61b30000],cl
  40308a:	ss push esi
  40308c:	push   ebp
  40308d:	inc    esi
  40308e:	pop    eax
  40308f:	or     BYTE PTR [ecx-0x5eefafba],ah
  403095:	ss inc eax
  403097:	or     al,0xa1
  403099:	push   ds
  40309a:	stos   DWORD PTR es:[edi],eax
  40309b:	jecxz  0x4030b0
  40309d:	pop    ebp
  40309e:	xor    al,0x90
  4030a0:	sbb    edi,edi
  4030a2:	into   
  4030a3:	jmp    DWORD PTR [esi]
  4030a5:	pop    ebp
  4030a6:	mov    cl,cl
  4030a8:	lahf   
  4030a9:	mov    ch,0x99
  4030ab:	ror    DWORD PTR [ecx],0xc5
  4030ae:	jae    0x4030f3
  4030b0:	adc    esi,DWORD PTR [ebp+0x73]
  4030b3:	pop    ecx
  4030b4:	mov    eax,ds:0xa104c52d
  4030b9:	sub    eax,0x11a104dc
  4030be:	scas   al,BYTE PTR es:[edi]
  4030bf:	nop
  4030c0:	mov    edx,0x865e736d
  4030c5:	es mov ebp,0x38ad2dc2
  4030cb:	mov    eax,ebp
  4030cd:	sub    eax,edi
  4030cf:	in     al,dx
  4030d0:	iret   
  4030d1:	pop    ecx
  4030d2:	into   
  4030d3:	push   ebx
  4030d4:	sbb    al,BYTE PTR [esi]
  4030d6:	add    BYTE PTR [ebp-0x43],0x7c
  4030da:	pop    ebx
  4030db:	inc    edi
  4030dc:	or     BYTE PTR [ebx+eax*1-0x1],ch
  4030e0:	fs cdq 
  4030e2:	sbb    al,0x41
  4030e4:	xor    DWORD PTR [ebp+0x26],edx
  4030e7:	(bad)  
  4030e8:	xor    DWORD PTR [ebp+0xbffa],ebp
  4030ee:	sbb    al,0x14
  4030f0:	retf   
  4030f1:	into   
  4030f2:	add    al,0x24
  4030f4:	push   ds
  4030f5:	pop    eax
  4030f6:	xor    eax,0x3159ea2e
  4030fb:	mov    ebx,0x4077fb94
  403100:	add    eax,0xe9d245db
  403105:	add    edi,DWORD PTR [edx]
  403107:	aam    0x7c
  403109:	add    al,0xf2
  40310b:	mov    edx,0xaa49cf74
  403110:	lods   al,BYTE PTR ds:[esi]
  403111:	add    al,0x31
  403113:	cmpps  xmm7,xmm5,0xad
  403117:	shr    cl,1
  403119:	add    esi,DWORD PTR [ecx]
  40311b:	mov    DWORD PTR [ecx+edx*8+0x37],esp
  40311f:	mov    edx,0x109934c6
  403124:	call   0x93ec622c
  403129:	enter  0x1431,0xe2
  40312d:	ret    
  40312e:	es nop
  403130:	push   ebp
  403131:	add    al,0x31
  403133:	adc    al,0xdc
  403135:	pop    es
  403136:	xor    BYTE PTR [ecx+ebp*8],dl
  403139:	cld    
  40313a:	mov    bh,0x73
  40313c:	jmp    0xe96e6244
  403141:	jle    0x4030f7
  403143:	lds    edi,FWORD PTR [edi-0x33]
  403146:	out    0x64,al
  403148:	or     DWORD PTR [ebp+0x7ee914f5],0xcd67c5ac
  403152:	add    BYTE PTR [eax],al
  403154:	into   
  403155:	fs push ecx
  403157:	inc    esp
  403158:	(bad)  
  403159:	mov    ecx,0x3f7ef956
  40315e:	in     eax,dx
  40315f:	pop    ebx
  403160:	in     al,0xec
  403162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403163:	add    edi,DWORD PTR [edi+ecx*4-0x465931c6]
  40316a:	add    BYTE PTR [ecx+0x2ef6db7a],bl
  403170:	fs mov ecx,0xac42f175
  403176:	and    al,0x16
  403178:	je     0x403133
  40317a:	jmp    0x403162
  40317c:	ins    DWORD PTR es:[edi],dx
  40317d:	aas    
  40317e:	or     BYTE PTR [esi+ebp*4-0x3b],bl
  403182:	inc    BYTE PTR [esi]
  403184:	jl     0x4031ea
  403186:	call   0xfff9b0c9
  40318b:	pusha  
  40318c:	mov    dh,0xa8
  40318e:	(bad)  
  40318f:	out    dx,al
  403190:	gs add BYTE PTR cs:[ebx+0x35],dl
  403195:	add    dl,BYTE PTR cs:[ebx+0x2d]
  403199:	add    eax,DWORD PTR cs:[ecx+0x35]
  40319d:	adc    al,0x0
  40319f:	test   eax,0xc7ec7f65
  4031a4:	std    
  4031a5:	mov    eax,0x13f1cde8
  4031aa:	add    BYTE PTR [eax+0x77],ah
  4031ad:	mov    esp,0xba053540
  4031b2:	jne    0x4031ad
  4031b4:	std    
  4031b5:	ds or  al,0x9e
  4031b8:	add    BYTE PTR [eax],al
  4031ba:	pop    edi
  4031bb:	mov    esp,0xb8dcc7e8
  4031c0:	jmp    DWORD PTR [edx-0x36]
  4031c3:	mov    eax,0xde0a8175
  4031c8:	ret    
  4031c9:	jmp    0xfd1b3f00
  4031ce:	fnstcw WORD PTR [ecx-0x471b824b]
  4031d4:	call   DWORD PTR [ecx+0x3f]
  4031d7:	rol    BYTE PTR [eax],1
  4031d9:	jmp    0x582cb0d3
  4031de:	in     eax,dx
  4031df:	mov    eax,0xb8e021e8
  4031e4:	inc    DWORD PTR [eax]
  4031e6:	and    edx,esp
  4031e8:	pop    ebx
  4031e9:	leave  
  4031ea:	pop    edx
  4031eb:	mov    ecx,0xd91354ff
  4031f0:	add    esp,0xffffc754
  4031f6:	retf   
  4031f7:	(bad)  
  4031f8:	jne    0x403206
  4031fa:	daa    
  4031fb:	bound  ecx,QWORD PTR [eax]
  4031fd:	push   0x411dcf
  403202:	daa    
  403203:	and    bl,BYTE PTR [ecx+ebp*1-0x67]
  403207:	adc    al,0xe8
  403209:	mov    ecx,0xbffcc5d
  40320e:	or     BYTE PTR [eax+0x1448da84],bh
  403214:	add    BYTE PTR [ebx],ch
  403216:	jae    0x403252
  403218:	test   edi,ebp
  40321a:	data16 int3 
  40321c:	call   DWORD PTR [eax+0x0]
  40321f:	add    al,dh
  403221:	adc    eax,DWORD PTR [ecx]
  403223:	add    BYTE PTR [eax-0x24],cl
  403226:	in     al,0xc3
  403228:	sbb    BYTE PTR [ebx+ecx*1],dl
  40322b:	rcl    BYTE PTR [edi],0x38
  40322e:	mov    ebp,0x3d140800
  403233:	add    al,0x9
  403235:	adc    al,0x0
  403237:	setg   BYTE PTR [esi+0x3d180000]
  40323e:	inc    ebp
  40323f:	cld    
  403240:	cmp    al,bl
  403242:	mov    edx,0x8dcba7e9
  403247:	test   edi,eax
  403249:	retf   0xffff
  40324c:	dec    eax
  40324d:	fmul   DWORD PTR [edi-0x3]
  403250:	addr16 retf 
  403252:	or     eax,eax
  403254:	(bad)  [edi+0x5120cd67]
  40325a:	add    BYTE PTR [ebp-0x124b3],cl
  403260:	xor    DWORD PTR [esi+0x34],ebx
  403263:	call   0xb9331
  403268:	scas   al,BYTE PTR es:[edi]
  403269:	js     0x403266
  40326b:	dec    edi
  40326c:	cdq    
  40326d:	mov    edx,0x529effd1
  403272:	sti    
  403273:	(bad)  
  403274:	sbb    al,0xb5
  403276:	js     0x4031fd
  403278:	sahf   
  403279:	out    dx,eax
  40327a:	retf   0xe1ff
  40327d:	and    al,0xba
  40327f:	cmc    
  403280:	jle    0x4032a0
  403282:	xor    al,0xff
  403284:	add    BYTE PTR [eax],al
  403286:	cld    
  403287:	or     BYTE PTR [eax+ebp*8],dh
  40328a:	xlat   BYTE PTR ds:[ebx]
  40328b:	and    ebx,ecx
  40328d:	(bad)  
  40328e:	cmp    ch,ch
  403290:	dec    edi
  403291:	push   ebx
  403292:	pop    esi
  403293:	cmp    bh,al
  403295:	call   0xb4710
  40329a:	mov    eax,0xc483cbe8
  40329f:	mov    ah,0x3
  4032a1:	je     0x403296
  4032a3:	das    
  4032a4:	inc    eax
  4032a5:	hlt    
  4032a6:	loope  0x40326d
  4032a8:	push   eax
  4032a9:	cld    
  4032aa:	sbb    DWORD PTR [edi],ebx
  4032ac:	rol    BYTE PTR [eax],0x31
  4032af:	xor    bl,al
  4032b1:	js     0x403316
  4032b3:	jle    0x403305
  4032b5:	hlt    
  4032b6:	or     DWORD PTR [ebx-0x3dceff3a],ebp
  4032bc:	ret    
  4032bd:	je     0x40330e
  4032bf:	std    
  4032c0:	retf   0xf975
  4032c3:	xchg   esp,eax
  4032c4:	add    eax,0x7e85f6f2
  4032c9:	fmul   DWORD PTR [ecx-0x7d07af72]
  4032cf:	sbb    eax,0x3de32cdc
  4032d4:	retf   0x5cff
  4032d7:	inc    ecx
  4032d8:	(bad)  
  4032da:	repz adc ebp,ecx
  4032dd:	add    edi,DWORD PTR [edx+0x44caed50]
  4032e3:	mov    esp,0xccc90366
  4032e8:	pop    eax
  4032e9:	retf   0x0
  4032ec:	scas   al,BYTE PTR es:[edi]
  4032ed:	mov    dh,0xbc
  4032ef:	(bad)  
  4032f0:	cdq    
  4032f1:	in     eax,0x4f
  4032f3:	retf   0x8a9e
  4032f6:	sub    ch,BYTE PTR [esi]
  4032f8:	push   0xe403e1d1
  4032fd:	mov    dl,BYTE PTR ds:0xf138ba32
  403303:	fisub  WORD PTR [eax]
  403305:	pop    edi
  403306:	add    al,BYTE PTR [ecx]
  403308:	stos   DWORD PTR es:[edi],eax
  403309:	dec    esi
  40330a:	call   0x698f698a
  40330f:	or     dh,BYTE PTR [ecx]
  403311:	inc    ecx
  403312:	hlt    
  403313:	sub    esi,ebp
  403315:	dec    esi
  403316:	imul   ecx,DWORD PTR [edx],0x83034011
  40331c:	push   cs
  40331d:	or     DWORD PTR [ebp-0x21],ebx
  403320:	mov    cl,0xf6
  403322:	repnz dec edi
  403324:	push   ecx
  403325:	xchg   ebx,eax
  403326:	push   ss
  403327:	sti    
  403328:	ret    0x62da
  40332b:	inc    edi
  40332c:	cmp    DWORD PTR [ebp-0x6ff103c4],esi
  403332:	stos   DWORD PTR es:[edi],eax
  403333:	add    al,0x31
  403335:	xchg   ecx,eax
  403336:	mov    cl,0x4
  403338:	lahf   
  403339:	in     eax,dx
  40333a:	push   0xc9b54948
  40333f:	dec    edi
  403340:	sbb    al,0x94
  403342:	sbb    eax,0x1d07fe0c
  403347:	cli    
  403348:	jbe    0x403382
  40334a:	ror    eax,1
  40334c:	cmp    eax,DWORD PTR [eax-0x12]
  40334f:	add    DWORD PTR [eax],0x0
  403352:	gs cld 
  403354:	jge    0x403351
  403356:	gs or  eax,0xfc71af00
  40335c:	(bad)  
  40335d:	jmp    0xec2b464f
  403362:	in     eax,0xc8
  403364:	pop    edi
  403365:	xor    bh,dh
  403367:	adc    BYTE PTR [eax],al
  403369:	mov    esp,0x2583a835
  40336e:	xchg   ecx,eax
  40336f:	popa   
  403370:	add    DWORD PTR [edi+esi*2],0xffffffe6
  403374:	inc    eax
  403375:	jmp    0x6a5273ac
  40337a:	cs mov dh,0x2e
  40337d:	test   al,0x32
  40337f:	adc    al,0x74
  403381:	lock lods eax,DWORD PTR ds:[esi]
  403383:	mul    ebp
  403385:	iret   
  403386:	repz adc eax,DWORD PTR [eax]
  403389:	pushf  
  40338a:	xor    ecx,ebp
  40338c:	mov    edi,0x8d2abb2
  403391:	jmp    0xa5080cdb
  403396:	outs   dx,BYTE PTR ds:[esi]
  403397:	adc    al,0x0
  403399:	jmp    0xf185bad0
  40339e:	add    dh,BYTE PTR [ebp+0x13e4f175]
  4033a4:	push   esp
  4033a6:	ins    BYTE PTR es:[edi],dx
  4033a7:	out    0x40,al
  4033a9:	jmp    0x32b4a8e3
  4033ae:	or     eax,0x32e9c23e
  4033b3:	mov    eax,edx
  4033b5:	ins    BYTE PTR es:[edi],dx
  4033b6:	add    BYTE PTR [eax],al
  4033b8:	pop    edi
  4033b9:	rcl    BYTE PTR [eax+0x43],0x4d
  4033bd:	(bad)  
  4033be:	call   esp
  4033c0:	adc    dh,ah
  4033c2:	inc    eax
  4033c3:	jmp    0xd0b4a8cd
  4033c8:	icebp  
  4033c9:	dec    esi
  4033ca:	in     al,0xe8
  4033cc:	xor    dl,BYTE PTR [eax+eax*1]
  4033cf:	mov    ?,WORD PTR [edi-0x44]
  4033d2:	pop    DWORD PTR [eax]
  4033d4:	adc    eax,0x5c75ffd8
  4033d9:	cmp    al,0x45
  4033db:	in     al,dx
  4033dc:	dec    ebx
  4033dd:	dec    esi
  4033de:	or     al,0x0
  4033e0:	les    edi,FWORD PTR [ecx+0xf6845c6]
  4033e6:	add    BYTE PTR [eax],al
  4033e8:	enter  0x7d7,0xc7
  4033ec:	test   eax,esp
  4033ee:	add    BYTE PTR [eax],al
  4033f0:	cwde   
  4033f1:	adc    BYTE PTR [edx+0x0],ch
  4033f4:	adc    BYTE PTR [eax],0x6a
  4033f7:	adc    BYTE PTR ds:0x7250e3f6,cl
  4033fd:	adc    bh,bh
  4033ff:	jne    0x403445
  403401:	int3   
  403402:	adc    eax,0x515efe
  403407:	or     ecx,DWORD PTR [eax+0x45]
  40340a:	add    DWORD PTR [ebx+0xb],eax
  40340d:	dec    esi
  40340e:	hlt    
  40340f:	add    ah,al
  403411:	mov    eax,0xd96475fe
  403416:	call   0xc3:0x8b1048c1
  40341d:	add    bl,al
  40341f:	jns    0x4033e3
  403421:	or     BYTE PTR [eax-0x1b],bl
  403424:	mov    ch,ah
  403426:	dec    edi
  403427:	bound  ecx,QWORD PTR [eax]
  403429:	call   0x4102f2
  40342e:	or     BYTE PTR [eax],al
  403430:	call   0x1c3cd5
  403435:	push   eax
  403436:	out    dx,eax
  403437:	inc    ebp
  403438:	or     BYTE PTR [eax+0x0],dl
  40343b:	jp     0x4033fe
  40343d:	add    BYTE PTR [eax],cl
  40343f:	add    cl,cl
  403441:	ret    0x1814
  403444:	push   ebp
  403445:	mov    ebx,DWORD PTR [edi+edx*4-0x68c4033c]
  40344c:	jge    0x403456
  40344e:	xor    DWORD PTR [ebp+0x7d1a0750],edi
  403454:	sub    ecx,ecx
  403456:	repz rol DWORD PTR [ebx],0x2b
  40345a:	cli    
  40345b:	pop    es
  40345c:	add    al,0x6a
  40345e:	xor    DWORD PTR [edi],edx
  403460:	add    al,0x6a
  403462:	xor    DWORD PTR [edi],edx
  403464:	(bad)  
  403465:	(bad)  
  403466:	cmp    al,0xa5
  403468:	pop    ecx
  403469:	add    BYTE PTR [ebx-0x43],cl
  40346c:	fcmovnb st,st(4)
  40346e:	lock mov ebp,0xc9710b03
  403474:	adc    cl,BYTE PTR [ecx+0x75c758ec]
  40347a:	popf   
  40347b:	inc    ebp
  40347c:	cs lock xchg esi,eax
  40347f:	jmp    0x1905:0xbffa
  403486:	jnp    0x403460
  403488:	sbb    edi,DWORD PTR [ebp-0x7781ffa7]
  40348e:	(bad)  
  40348f:	push   ebx
  403490:	or     ecx,DWORD PTR [edx]
  403492:	(bad)  
  403493:	jne    0x4034ce
  403495:	xchg   edi,eax
  403496:	add    ebp,DWORD PTR [edx+0x31]
  403499:	add    eax,0xbd31c16d
  40349e:	cli    
  40349f:	mov    edi,0xe832b4dc
  4034a4:	sub    BYTE PTR [ebp-0x29e5003a],ch
  4034aa:	jp     0x40346f
  4034ac:	fisub  DWORD PTR [ebx-0x3f]
  4034af:	add    al,0x31
  4034b1:	lock jp 0x4034a0
  4034b4:	mov    dl,0x78
  4034b6:	xlat   BYTE PTR ds:[ebx]
  4034b7:	push   eax
  4034b8:	or     BYTE PTR [edx+esi*1],0x57
  4034bc:	xchg   DWORD PTR [esi],esp
  4034be:	inc    eax
  4034bf:	or     al,0xa4
  4034c1:	xor    al,0x83
  4034c3:	add    BYTE PTR [ecx],dh
  4034c5:	mov    ebp,0x13ec1478
  4034ca:	jmp    0x725465d2
  4034cf:	stos   DWORD PTR es:[edi],eax
  4034d0:	stos   BYTE PTR es:[edi],al
  4034d1:	fld    TBYTE PTR [eax+0x249d37db]
  4034d7:	fdivr  DWORD PTR [edx-0x27fd0ed0]
  4034dd:	(bad)  
  4034df:	xor    DWORD PTR [edx-0x35e5494a],0xffffff96
  4034e6:	jb     0x4034f3
  4034e8:	add    BYTE PTR [eax],al
  4034ea:	inc    ebx
  4034eb:	and    ch,dl
  4034ed:	retf   0x5379
  4034f0:	jmp    0x2a3f65f8
  4034f5:	add    ch,BYTE PTR [ecx-0x47285b4e]
  4034fb:	dec    edx
  4034fc:	add    DWORD PTR [ecx+0x24],edi
  4034ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403500:	es std 
  403502:	xor    edi,esi
  403504:	stos   DWORD PTR es:[edi],eax
  403505:	pop    esi
  403506:	jbe    0x403561
  403508:	in     eax,0x7c
  40350a:	(bad)  
  40350c:	push   ss
  40350d:	mov    esi,0xa71f1bf7
  403512:	mov    ebx,0x3d3d2e8b
  403517:	sub    dh,BYTE PTR [ebp+0x7cb34111]
  40351d:	xlat   BYTE PTR ds:[ebx]
  40351e:	pop    esi
  40351f:	sub    cl,dh
  403521:	js     0x40350f
  403523:	mov    ds:0x1424db99,eax
  403528:	jmp    0xedac7a30
  40352d:	add    esi,DWORD PTR [ecx]
  40352f:	adc    al,0x72
  403531:	inc    edi
  403532:	and    DWORD PTR [edi+0x4e8e268c],esp
  403538:	xor    BYTE PTR [ecx],ch
  40353a:	mov    ebx,ebx
  40353c:	stos   DWORD PTR es:[edi],eax
  40353d:	clc    
  40353e:	push   ds
  40353f:	dec    ecx
  403540:	jb     0x40351a
  403542:	mov    dl,0xd8
  403544:	add    BYTE PTR [ebp+0x1a50495f],dh
  40354a:	inc    edx
  40354b:	inc    esi
  40354c:	mov    ebx,DWORD PTR [eax+eax*1]
  40354f:	add    cl,bh
  403551:	sahf   
  403552:	jge    0x403545
  403554:	jns    0x4035ad
  403556:	adc    BYTE PTR [eax+0x2e],ah
  403559:	mov    al,0x8b
  40355b:	out    0x69,al
  40355d:	push   ecx
  40355e:	add    al,0x72
  403560:	and    al,0x1c
  403562:	mov    edx,DWORD PTR [esi]
  403564:	fstp   DWORD PTR [esi-0xa074507]
  40356a:	cli    
  40356b:	mov    edx,0xee849ff8
  403570:	push   0x78
  403572:	push   0x36
  403574:	xor    BYTE PTR [edx],bl
  403576:	shr    DWORD PTR [ecx],0xac
  403579:	push   ss
  40357a:	ret    
  40357b:	bound  edi,QWORD PTR [eax-0x1b]
  40357e:	clc    
  40357f:	or     ch,BYTE PTR [ebp-0x1b]
  403582:	clc    
  403583:	ins    BYTE PTR es:[edi],dx
  403584:	and    DWORD PTR [ecx],ecx
  403586:	push   esi
  403587:	jle    0x403555
  403589:	mov    esp,0xd4869703
  40358e:	ret    0x31f5
  403591:	les    ecx,FWORD PTR [ebx+0x23ad2021]
  403597:	adc    eax,DWORD PTR [eax-0x53]
  40359a:	lea    ebx,[ebp+0x5c]
  40359d:	into   
  40359e:	jo     0x403569
  4035a0:	ds adc eax,0xd373f14e
  4035a6:	adc    edx,ebp
  4035a8:	mov    BYTE PTR [ebp-0xa854506],bl
  4035ae:	clc    
  4035af:	sbb    ch,BYTE PTR [ebp-0x61]
  4035b2:	pushf  
  4035b3:	inc    BYTE PTR [eax]
  4035b5:	add    BYTE PTR [edx+eiz*8-0x43],bl
  4035b9:	test   al,0x31
  4035bb:	push   edx
  4035bc:	or     al,0xa8
  4035be:	icebp  
  4035bf:	or     DWORD PTR [ebx],eax
  4035c1:	add    cl,dl
  4035c3:	sub    edi,ecx
  4035c5:	xor    esi,edx
  4035c7:	repz cli 
  4035c9:	xor    eax,edx
  4035cb:	sub    DWORD PTR [edi+eax*1-0xa845779],eax
  4035d2:	or     ebp,edi
  4035d4:	xadd   eax,ecx
  4035d7:	scas   eax,DWORD PTR es:[edi]
  4035d8:	add    al,bl
  4035da:	push   ebx
  4035db:	fdiv   QWORD PTR [ebx]
  4035dd:	stc    
  4035de:	sti    
  4035df:	fdiv   QWORD PTR [ebx]
  4035e1:	stc    
  4035e2:	gs inc ecx
  4035e4:	pop    ss
  4035e5:	sub    cl,BYTE PTR [esi+0x2e03472f]
  4035eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ec:	rol    dl,0xe4
  4035ef:	adc    edx,eax
  4035f1:	mov    edx,DWORD PTR [eax+0x4]
  4035f4:	sti    
  4035f5:	and    edx,DWORD PTR [edx+0x4]
  4035f8:	sti    
  4035f9:	lea    edx,[eax+ebp*4]
  4035fc:	adc    al,BYTE PTR [esi+0x48]
  4035ff:	nop
  403600:	add    ecx,DWORD PTR [esi-0x70]
  403603:	aad    0xc1
  403605:	adc    DWORD PTR [ebx-0x74057496],ecx
  40360b:	fsub   QWORD PTR [ebx]
  40360d:	stc    
  40360e:	mov    ebx,esp
  403610:	lea    ebx,[edi+esi*1+0x15469515]
  403617:	adc    al,0x5e
  403619:	sbb    al,0x0
  40361b:	add    BYTE PTR [ecx],bl
  40361d:	aam    0x16
  40361f:	add    esp,DWORD PTR [ecx]
  403621:	sub    al,0xf9
  403623:	xor    esi,DWORD PTR [edx]
  403625:	hlt    
  403626:	cli    
  403627:	xor    esi,DWORD PTR [edx]
  403629:	sub    al,BYTE PTR [edi+eax*1+0x69803d20]
  403630:	pop    ebx
  403631:	out    dx,al
  403632:	pop    ds
  403633:	ror    DWORD PTR [eax-0x3c3cfce4],0x70
  40363a:	xor    edi,ecx
  40363c:	xor    DWORD PTR [edx],ebx
  40363e:	mov    esp,0x98512833
  403643:	pop    ss
  403644:	into   
  403645:	outs   dx,BYTE PTR ds:[esi]
  403646:	dec    eax
  403647:	mov    esi,DWORD PTR [edx]
  403649:	pop    es
  40364a:	call   0x6fa2a0f
  40364f:	sar    BYTE PTR [edx+0x52faf765],1
  403655:	jae    0x40364e
  403657:	cli    
  403658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403659:	inc    ecx
  40365a:	adc    esi,DWORD PTR [ecx+0x3c3868a]
  403660:	ja     0x403637
  403662:	(bad)
  403666:	int    0x8b
  403668:	fld    TBYTE PTR [edx-0x45]
  40366b:	and    ecx,eax
  40366d:	push   0xffffffbb
  40366f:	lea    esp,[ebp+0x5dd781de]
  403675:	and    al,0x7
  403677:	pop    esi
  403678:	add    eax,0x3216c6fc
  40367d:	in     al,0x8e
  40367f:	stc    
  403680:	add    BYTE PTR [eax],al
  403682:	bound  eax,QWORD PTR [ebx-0x19]
  403685:	cli    
  403686:	bound  edx,QWORD PTR [ebx-0x6f]
  403689:	test   BYTE PTR [esi],ch
  40368b:	sbb    edx,DWORD PTR ds:0x49ba1a90
  403691:	xor    BYTE PTR [eax-0x3],dh
  403694:	or     al,BYTE PTR [ebx]
  403696:	jb     0x4036ba
  403698:	mov    edi,0xbbda7833
  40369d:	xor    ebp,DWORD PTR [eax+0x38]
  4036a0:	cwde   
  4036a1:	pop    ss
  4036a2:	ret    0x9b8c
  4036a5:	std    
  4036a6:	xor    cl,BYTE PTR [edi-0x3e8c3f09]
  4036ac:	push   es
  4036ad:	sar    BYTE PTR [edx+0x12faf6a5],1
  4036b3:	mov    ds:0x14acfaf6,eax
  4036b8:	jne    0x4036cc
  4036ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036bb:	push   ebx
  4036bc:	pusha  
  4036bd:	push   0x32
  4036bf:	pop    esi
  4036c0:	adc    ebp,eax
  4036c2:	lock add al,0xea
  4036c5:	int    0xaa
  4036c7:	test   eax,0xad52bbfa
  4036cc:	cli    
  4036cd:	mov    ebx,0xe4d68fbc
  4036d2:	cs push 0xf05f0720
  4036d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d9:	(bad)  
  4036da:	pop    ds
  4036db:	adc    eax,eax
  4036dd:	mov    gs,eax
  4036df:	loop   0x403672
  4036e1:	out    0xe8,al
  4036e3:	loop   0x403674
  4036e5:	nop
  4036e6:	add    BYTE PTR [eax],al
  4036e8:	mov    ch,0x16
  4036ea:	or     ebp,ecx
  4036ec:	xor    al,0xa6
  4036ee:	jmp    0x3208:0xa9d53549
  4036f5:	shl    DWORD PTR [edx-0x42],cl
  4036f8:	add    ch,BYTE PTR [edx+ecx*1+0x6cab02bd]
  4036ff:	xchg   edi,eax
  403700:	inc    esi
  403701:	push   esp
  403702:	call   0x701b:0xb7127143
  403709:	shl    eax,1
  40370b:	push   es
  40370c:	sbb    DWORD PTR [edx-0xd7709bf],0xa07ef631
  403716:	pop    ebp
  403717:	adc    ah,al
  403719:	dec    ecx
  40371a:	(bad)  
  40371b:	jmp    0xc50d9553
  403720:	jo     0x40373f
  403722:	jmp    0x12bc:0xdaa9bacd
  403729:	lods   al,BYTE PTR ds:[esi]
  40372a:	mov    edx,0xde8fa4bd
  40372f:	ins    DWORD PTR es:[edi],dx
  403730:	jbe    0x403797
  403732:	add    BYTE PTR [eax],al
  403734:	das    
  403735:	push   cs
  403736:	shr    DWORD PTR [edx],0x26
  403739:	adc    ebx,ecx
  40373b:	jb     0x4037b7
  40373d:	loop   0x403739
  40373f:	or     ch,bh
  403741:	loope  0x40373b
  403743:	fs mov ecx,0x21f95d15
  403749:	enter  0x2f03,0x0
  40374d:	add    BYTE PTR [ecx],bh
  40374f:	rol    eax,cl
  403751:	in     al,0x35
  403753:	ror    DWORD PTR [ebx+0x23a5fcb2],1
  403759:	mov    al,0x4
  40375b:	stos   DWORD PTR es:[edi],eax
  40375c:	lea    edi,[ebp+0x18]
  40375f:	inc    ecx
  403760:	adc    al,0x25
  403762:	aaa    
  403763:	adc    DWORD PTR [esi-0x3f],edx
  403766:	repz ror BYTE PTR [ecx],cl
  403769:	jmp    0xf194:0xbaf89a02
  403770:	cli    
  403771:	mov    edx,0xe68c9f8a
  403776:	mov    bl,0xb6
  403778:	mov    eax,ds:0x3c5e3491
  40377d:	sub    dl,dh
  40377f:	push   ds
  403780:	add    esi,DWORD PTR [ebx]
  403782:	mov    esp,0x8c5033aa
  403787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403788:	xor    edx,DWORD PTR [ebx-0x52]
  40378b:	nop
  40378c:	pop    ds
  40378d:	xor    esp,edx
  40378f:	shl    edi,0xea
  403792:	adc    BYTE PTR [ecx+eax*8],al
  403795:	sub    ch,BYTE PTR [ecx]
  403797:	adc    ecx,ebx
  403799:	bound  edi,QWORD PTR [edx-0x4b35051f]
  40379f:	loope  0x403799
  4037a1:	ins    BYTE PTR es:[edi],dx
  4037a2:	mov    ecx,0x9224e615
  4037a7:	repz add ah,BYTE PTR [edi+0xc0d456]
  4037ae:	inc    ebp
  4037af:	sbb    bl,al
  4037b1:	mov    eax,DWORD PTR [eax]
  4037b3:	add    BYTE PTR [ebx],dh
  4037b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037b6:	mul    DWORD PTR [ebx]
  4037b8:	inc    ecx
  4037b9:	test   al,0xfa
  4037bb:	(bad)  
  4037bc:	in     al,0xa
  4037be:	(bad)  
  4037bf:	pop    es
  4037c0:	pop    ss
  4037c1:	xlat   BYTE PTR ds:[ebx]
  4037c2:	add    edx,DWORD PTR [esi+0x50]
  4037c5:	rol    edx,1
  4037c7:	or     DWORD PTR [ebx],ebx
  4037c9:	ror    DWORD PTR [ebx+0x236e3bf8],0xfb
  4037d0:	sbb    ebp,DWORD PTR [ecx-0x73]
  4037d3:	mov    WORD PTR [edi],ds
  4037d5:	pushf  
  4037d6:	or     eax,0x4e17c4d5
  4037db:	or     al,0xc9
  4037dd:	ror    DWORD PTR [esi],1
  4037df:	add    eax,edx
  4037e1:	lahf   
  4037e2:	cli    
  4037e3:	xor    edx,DWORD PTR [ecx-0x3dcc0849]
  4037e9:	popf   
  4037ea:	pushf  
  4037eb:	pop    ds
  4037ec:	pop    ebp
  4037ed:	add    eax,0x32cb455a
  4037f2:	and    cl,al
  4037f4:	fwait
  4037f5:	add    al,0x3
  4037f7:	fst    DWORD PTR [ebx+0x6a]
  4037fa:	xor    edi,ebx
  4037fc:	jmp    0x40386c
  4037fe:	xor    edi,ecx
  403800:	cmp    eax,0x1050795
  403805:	js     0x4037b0
  403807:	add    edx,esi
  403809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380a:	rol    al,0x95
  40380d:	pop    ss
  40380e:	ret    
  40380f:	mov    esi,ebx
  403811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403812:	mul    DWORD PTR [ebx]
  403814:	icebp  
  403815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403816:	cli    
  403817:	lea    eax,[eax]
  403819:	add    ah,ah
  40381b:	or     edi,eax
  40381d:	mov    ds:0x56036d3f,eax
  403822:	adc    cl,0xc2
  403825:	or     DWORD PTR [ebx-0x40],ebx
  403828:	mov    edi,eax
  40382a:	xor    edx,ecx
  40382c:	mov    ebp,0xbbc95a23
  403831:	lea    esp,[ebp-0x21fd255b]
  403837:	xchg   ebp,eax
  403838:	add    al,0x4e
  40383a:	and    eax,0x320ec1fc
  40383f:	icebp  
  403840:	mov    edi,edx
  403842:	add    dh,BYTE PTR [ebx+eiz*8-0x6e489d09]
  403849:	pushf  
  40384a:	inc    esi
  40384b:	aaa    
  40384c:	push   eax
  40384d:	sub    ch,BYTE PTR [esi+edi*4+0x7ef0305d]
  403854:	sbb    BYTE PTR [ebx],al
  403856:	call   0xb73f581
  40385b:	scas   eax,DWORD PTR es:[edi]
  40385c:	mov    edx,0x41b2b58d
  403861:	cmp    ebx,edi
  403863:	jb     0x403868
  403865:	inc    esi
  403866:	inc    ebp
  403867:	jl     0x40382d
  403869:	add    al,0x32
  40386b:	jle    0x4037f8
  40386d:	sti    
  40386e:	and    al,BYTE PTR [ebx+esi*8+0x1749a4f7]
  403875:	add    edi,0x5f0386ac
  40387b:	ffree  st(4)
  40387d:	ret    0x0
  403880:	sub    bh,BYTE PTR [esi+0xeb98bd3]
  403886:	mov    ebx,0x9038ab33
  40388b:	rcpps  xmm3,xmm4
  40388e:	mov    al,ds:0xef8b326d
  403893:	shl    BYTE PTR [eax-0x33],0x2
  403897:	retf   0x57ba
  40389a:	repz test DWORD PTR [edx-0x1c],0xc91e9c90
  4038a2:	sti    
  4038a3:	in     al,0x74
  4038a5:	adc    al,0xea
  4038a7:	pop    ebp
  4038a8:	sub    ebp,edx
  4038aa:	sub    dl,BYTE PTR [edi]
  4038ac:	xor    cl,ch
  4038ae:	bound  edi,QWORD PTR [ebp-0x452551de]
  4038b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b5:	nop
  4038b6:	out    dx,al
  4038b7:	inc    edi
  4038b8:	pop    ebx
  4038b9:	push   0x45
  4038bb:	add    ebp,edi
  4038bd:	movaps xmm0,xmm4
  4038c0:	xor    eax,0x3a8b2a17
  4038c5:	out    0xdf,eax
  4038c7:	repnz es cdq 
  4038ca:	jne    0x4038e2
  4038cc:	fcomp  st(2)
  4038ce:	mov    bh,0x4a
  4038d0:	xor    al,BYTE PTR [edx-0x7]
  4038d3:	(bad)  
  4038d4:	repz push ds
  4038d6:	jmp    0x42ba:0xfaabbad3
  4038dd:	scas   al,BYTE PTR es:[edi]
  4038de:	fs (bad) 
  4038e0:	cs xor al,0x22
  4038e3:	jnp    0x4038e5
  4038e5:	add    bh,bh
  4038e7:	push   ss
  4038e8:	aaa    
  4038e9:	and    al,dh
  4038eb:	aam    0xf9
  4038ed:	add    bh,bl
  4038ef:	sahf   
  4038f0:	xchg   ebx,eax
  4038f1:	repnz out 0xe6,al
  4038f4:	(bad)  
  4038f5:	nop
  4038f6:	mov    ch,0xa
  4038f8:	stc    
  4038f9:	jg     0x403889
  4038fb:	imul   ebp,edx,0xaad5195d
  403901:	push   ss
  403902:	xor    cl,ch
  403904:	bound  edi,QWORD PTR [edx+eax*1-0x4344e552]
  40390b:	(bad)  
  40390c:	out    0xc5,al
  40390e:	daa    
  40390f:	pop    DWORD PTR [ecx]
  403911:	add    esi,edi
  403913:	fbld   TBYTE PTR [edi]
  403915:	ret    
  403916:	sub    eax,0x8a8a2a17
  40391b:	out    0x3f,al
  40391d:	bnd jle 0x4038b8
  403920:	add    BYTE PTR [ebp+0x27],bl
  403923:	scas   al,BYTE PTR es:[edi]
  403924:	daa    
  403925:	mov    al,cl
  403927:	push   ss
  403928:	push   ss
  403929:	sub    BYTE PTR [eax+0x1e],dh
  40392c:	add    edi,DWORD PTR [ecx]
  40392e:	mov    ebx,0x631233ab
  403933:	lods   al,BYTE PTR ds:[esi]
  403934:	lea    ebx,[ebp+0x27]
  403937:	xchg   ecx,eax
  403938:	xor    BYTE PTR [esi],dl
  40393a:	pushw  ss
  40393c:	dec    esi
  40393d:	in     eax,dx
  40393e:	ins    DWORD PTR es:[edi],dx
  40393f:	aam    0x10
  403941:	jmp    0xe67a:0xbafa9e68
  403948:	clc    
  403949:	je     0x40394b
  40394b:	add    cl,dl
  40394d:	or     DWORD PTR ds:0x310bafc,eax
  403953:	aaa    
  403954:	cmp    eax,0x31f6c3d3
  403959:	retf   
  40395a:	mov    eax,eax
  40395c:	add    BYTE PTR [ebx+esi*1+0x790b6c2],ch
  403963:	lock loop 0x403926
  403966:	fldl2e 
  403968:	ins    BYTE PTR es:[edi],dx
  403969:	lock shr BYTE PTR [ecx+0x72c31539],0xa8
  403971:	in     eax,0xf8
  403973:	ficomp DWORD PTR [edx-0x70096b69]
  403979:	mov    ebx,ebx
  40397b:	(bad)  
  40397c:	xor    BYTE PTR [edx+0x30],al
  40397f:	test   al,0xf3
  403981:	sbb    eax,0xaca89903
  403986:	xor    esi,DWORD PTR [edx-0x40]
  403989:	stos   DWORD PTR es:[edi],eax
  40398a:	lea    esi,[ebp+0x3c]
  40398d:	lods   al,BYTE PTR ds:[esi]
  40398e:	jl     0x40391b
  403990:	inc    esp
  403991:	adc    eax,0xd372154e
  403996:	adc    dl,ch
  403998:	push   0x8b00fa9d
  40399d:	ins    DWORD PTR es:[edi],dx
  40399e:	xor    edi,ecx
  4039a0:	adc    eax,0x9e651f74
  4039a5:	cmp    esp,eax
  4039a7:	add    esp,DWORD PTR [esi+0x6fc3c11d]
  4039ad:	adc    al,0xd9
  4039af:	mov    edi,0x67470000
  4039b4:	(bad)  
  4039b5:	(bad)  
  4039b6:	jnp    0x403a23
  4039b8:	or     edi,ebx
  4039ba:	jnp    0x403a2a
  4039bc:	lea    eax,[edi+ebx*2+0x3c292251]
  4039c3:	adc    al,0x6
  4039c5:	ror    DWORD PTR [eax],0x12
  4039c8:	add    eax,ebx
  4039ca:	pop    es
  4039cb:	addr16 (bad) 
  4039cd:	call   DWORD PTR [edi]
  4039cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d0:	clc    
  4039d1:	or     edx,DWORD PTR [eax]
  4039d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d4:	cli    
  4039d5:	lea    ebx,[eax+eax*1+0x5332ff97]
  4039dc:	add    edx,DWORD PTR [esi+0x14]
  4039df:	(bad)  
  4039e0:	ret    0x1b0a
  4039e3:	lds    edi,FWORD PTR [edi-0x983801]
  4039e9:	xor    eax,ebx
  4039eb:	sbb    edi,edx
  4039ed:	xor    edx,DWORD PTR [eax+0x6f0f8c99]
  4039f3:	mov    ah,0x93
  4039f5:	stos   DWORD PTR es:[edi],eax
  4039f6:	retf   
  4039f7:	push   esi
  4039f8:	cmp    cl,al
  4039fa:	mov    DWORD PTR [edi],edx
  4039fc:	add    ecx,edx
  4039fe:	ja     0x403a68
  403a00:	(bad)  
  403a01:	inc    DWORD PTR [edi-0x5c]
  403a04:	test   DWORD PTR [ebx],0x8df9a441
  403a0a:	or     BYTE PTR fs:[ecx],bh
  403a0d:	mov    al,ds:0x5e03692b
  403a12:	pushf  
  403a13:	aad    0xc3
  403a15:	adc    eax,0xbe310000
  403a1a:	fidivr DWORD PTR [edi-0x43a66a]
  403a20:	inc    edx
  403a21:	push   ebp
  403a22:	or     bl,bh
  403a24:	inc    edx
  403a25:	push   esp
  403a26:	mov    es,WORD PTR [esi+esi*1+0xc5b59fe]
  403a2d:	mov    esi,0xfa703045
  403a32:	add    al,0x3
  403a34:	jb     0x403a7f
  403a36:	mov    esp,0xf0015eff
  403a3b:	clc    
  403a3c:	sub    al,BYTE PTR [ebx]
  403a3e:	lock cli 
  403a40:	mov    esp,0x75921446
  403a45:	mov    dh,0x8c
  403a47:	add    esp,edi
  403a49:	scas   al,BYTE PTR es:[edi]
  403a4a:	ret    0x2bc2
  403a4d:	mov    esi,0xaf2ebfd3
  403a52:	mov    ebx,0xfb262ff
  403a57:	cli    
  403a58:	(bad)  
  403a59:	lds    ecx,FWORD PTR [ecx-0x4fa7d974]
  403a5f:	out    dx,eax
  403a60:	push   cs
  403a61:	mov    ebx,0x7cf02849
  403a66:	or     eax,DWORD PTR [ebx]
  403a68:	jmp    0x403a88
  403a6a:	mov    ebx,0xf776f6ff
  403a6f:	idiv   DWORD PTR [edx]
  403a71:	je     0x403a6a
  403a73:	stc    
  403a74:	mov    ah,0x29
  403a76:	sbb    edx,ecx
  403a78:	jl     0x403ab3
  403a7a:	add    DWORD PTR [ebx],0xb1770000
  403a80:	(bad)
  403a84:	fdivr  QWORD PTR [edi-0x44d93a]
  403a8a:	add    ah,BYTE PTR [ebx]
  403a8c:	psubq  mm0,QWORD PTR [edx]
  403a8f:	and    al,0x89
  403a91:	test   BYTE PTR [esi],dh
  403a93:	adc    al,0xb6
  403a95:	cmp    ecx,ebx
  403a97:	aaa    
  403a98:	jmp    0x3202:0x29d55141
  403a9f:	ror    DWORD PTR [esi+0x46a78ebb],cl
  403aa5:	test   DWORD PTR [ecx+0x7bf7411b],0x91135d99
  403aaf:	scas   al,BYTE PTR es:[edi]
  403ab0:	std    
  403ab1:	mov    ecx,0xc4e53e32
  403ab6:	jae    0x403ad2
  403ab8:	jmp    0x56bb:0x16a79ed3
  403abf:	jecxz  0x403ad2
  403ac1:	cmovnp esp,ebx
  403ac4:	add    BYTE PTR [ecx+0x46d517b5],cl
  403aca:	xor    BYTE PTR [ebx-0x16],dh
  403acd:	dec    ecx
  403ace:	sbb    ebp,edx
  403ad0:	sub    BYTE PTR [ebx],cl
  403ad2:	xor    bl,dl
  403ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad5:	mov    edx,0xf6dea726
  403ada:	es sbb edx,eax
  403add:	neg    BYTE PTR [eax]
  403adf:	cdq    
  403ae0:	ins    DWORD PTR es:[edi],dx
  403ae1:	sbb    al,BYTE PTR [eax]
  403ae3:	add    al,dl
  403ae5:	add    al,0xf1
  403ae7:	dec    ecx
  403ae8:	xor    al,BYTE PTR [esi-0xb]
  403aeb:	(bad)  
  403aec:	repnz add dl,ch
  403aef:	fdiv   QWORD PTR [esi-0x1145515a]
  403af5:	loop   0x403a99
  403af7:	push   cs
  403af8:	jmp    0x6b0e:0xb5889fe2
  403aff:	cmp    DWORD PTR [edx+0x2141ea9f],eax
  403b05:	aad    0xa9
  403b07:	add    DWORD PTR [edx],esi
  403b09:	sar    DWORD PTR [esi],cl
  403b0b:	mov    edx,0x7600a6be
  403b10:	mov    edi,0xa7710bab
  403b15:	test   eax,0xe1437d8d
  403b1a:	icebp  
  403b1b:	and    ebx,DWORD PTR [eax]
  403b1d:	adc    edx,DWORD PTR [esi+0x5]
  403b20:	ins    BYTE PTR es:[edi],dx
  403b21:	ror    DWORD PTR [edx],1
  403b23:	jmp    0xa6cb:0x46ff6662
  403b2a:	xor    eax,DWORD PTR [edx+0x2f]
  403b2d:	stos   BYTE PTR es:[edi],al
  403b2e:	xor    esi,DWORD PTR [ecx]
  403b30:	test   eax,0x84720f97
  403b35:	mov    esi,0x1bf8ea2a
  403b3a:	shr    DWORD PTR [eax],0x2b
  403b3d:	adc    ecx,edx
  403b3f:	push   esi
  403b40:	fwait
  403b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b42:	dec    DWORD PTR [esi]
  403b44:	inc    edi
  403b45:	sahf   
  403b46:	or     eax,DWORD PTR [eax]
  403b48:	add    BYTE PTR [eax],al
  403b4a:	aas    
  403b4b:	lods   al,BYTE PTR ds:[esi]
  403b4c:	lea    ebx,[ebp+0x1b]
  403b4f:	test   ebx,edx
  403b51:	outs   dx,DWORD PTR ds:[esi]
  403b52:	xchg   DWORD PTR [edx],edx
  403b54:	pop    esi
  403b55:	vpsrlw ymm2,ymm1,XMMWORD PTR ds:0x7d9a0bea
  403b5d:	icebp  
  403b5e:	xor    ecx,DWORD PTR ds:0x13313601
  403b64:	dec    edi
  403b65:	loope  0x403b9a
  403b67:	cmp    eax,0xa86ec60c
  403b6c:	lea    esi,[edi]
  403b6e:	jne    0x403b85
  403b70:	mov    esi,esp
  403b72:	mov    ah,0xa5
  403b74:	call   DWORD PTR [ebx]
  403b76:	mov    cl,BYTE PTR [ecx+0x58]
  403b79:	inc    esi
  403b7a:	mov    ebx,ebx
  403b7c:	ret    0x32ed
  403b7f:	aas    
  403b80:	mov    eax,DWORD PTR [ebp+0x36f8d0ac]
  403b86:	arpl   WORD PTR [ecx-0x39],ax
  403b89:	add    BYTE PTR ds:0xc800006c,dl
  403b8f:	adc    edi,edi
  403b91:	jne    0x403b5f
  403b93:	pushf  
  403b94:	inc    ebp
  403b95:	clc    
  403b96:	xlat   BYTE PTR ds:[ebx]
  403b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b98:	pop    edi
  403b99:	fst    DWORD PTR gs:[ecx]
  403b9c:	add    DWORD PTR [ebx],esp
  403b9e:	aad    0xf4
  403ba0:	mov    BYTE PTR ds:0x410664,0x11
  403ba7:	aaa    
  403ba8:	int    0xef
  403baa:	push   edi
  403bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bac:	add    BYTE PTR gs:[bx+si],al
  403bb0:	leave  
  403bb1:	adc    esi,edi
  403bb3:	fadd   QWORD PTR [edx]
  403bb5:	mov    bh,al
  403bb7:	add    eax,0x4106ac
  403bbc:	(bad)  
  403bbd:	push   ebp
  403bbe:	xor    dl,BYTE PTR [eax]
  403bc0:	pop    ss
  403bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc2:	outs   dx,DWORD PTR ds:[esi]
  403bc3:	mov    DWORD PTR gs:[ecx],edx
  403bc6:	lock loope 0x403bd3
  403bc9:	iret   
  403bca:	jmp    0x403be8
  403bcc:	ret    
  403bcd:	in     al,0x7
  403bcf:	add    edx,DWORD PTR [ebp-0x4fbf95a3]
  403bd5:	cmc    
  403bd6:	fs inc ecx
  403bd8:	sbb    BYTE PTR [ecx-0x18],al
  403bdb:	arpl   WORD PTR [ecx],ax
  403bdd:	ins    BYTE PTR es:[edi],dx
  403bde:	inc    DWORD PTR [ebx-0x17bf93ab]
  403be4:	int3   
  403be5:	adc    BYTE PTR [eax],al
  403be7:	add    BYTE PTR [ebx+0x4b40f7ee],bl
  403bed:	retf   0x5d8b
  403bf0:	lock pop ebx
  403bf3:	inc    eax
  403bf4:	xchg   ebx,eax
  403bf5:	out    0x7,al
  403bf7:	add    edx,DWORD PTR ds:0x4468536c
  403bfd:	add    eax,0x78180041
  403c02:	cmp    al,0xe9
  403c04:	xor    DWORD PTR [esi-0x48],edi
  403c07:	add    DWORD PTR [edi+edx*4-0x3f],ebp
  403c0b:	cmp    DWORD PTR ds:0xb1004318,0x39
  403c12:	lods   al,BYTE PTR ds:[esi]
  403c13:	aaa    
  403c14:	add    BYTE PTR [eax],al
  403c16:	aas    
  403c17:	ret    0xeb84
  403c1a:	cmp    DWORD PTR [edi-0x792d7ff3],ebx
  403c20:	push   ds
  403c21:	inc    ecx
  403c22:	xor    DWORD PTR [ebx+0x529f7844],edi
  403c28:	mov    WORD PTR [eax],es
  403c2a:	xor    DWORD PTR [ebx+0x4d86c87c],edi
  403c30:	mov    eax,0xd5f33eb
  403c35:	adc    dl,0x8e
  403c38:	push   ds
  403c39:	inc    ecx
  403c3a:	xor    DWORD PTR [ebx+0x215f7844],edi
  403c40:	ds or  al,0x98
  403c43:	mov    ds:0xca310003,al
  403c48:	aad    0xf7
  403c4a:	push   eax
  403c4b:	(bad)
  403c4e:	jnp    0x403ca9
  403c50:	jae    0x403cb7
  403c52:	lock mov edx,0x9785158a
  403c58:	inc    edx
  403c59:	add    BYTE PTR [ecx],bl
  403c5b:	xchg   BYTE PTR [ebx],al
  403c5d:	add    BYTE PTR [ecx],dh
  403c5f:	mov    WORD PTR [eiz*2+0x158aad70],fs
  403c66:	lea    edx,[eax+0x45]
  403c69:	add    BYTE PTR [edx+0x70652bc0],bh
  403c6f:	lods   eax,DWORD PTR ds:[esi]
  403c70:	push   es
  403c71:	enter  0x672e,0x7
  403c75:	leave  
  403c76:	ror    BYTE PTR [ebp+0x21],cl
  403c79:	inc    ecx
  403c7a:	add    BYTE PTR [eax],al
  403c7c:	xor    DWORD PTR [ecx+edx*1],esi
  403c7f:	fs dec esp
  403c81:	adc    al,0x28
  403c83:	add    al,0xa8
  403c85:	adc    DWORD PTR [ecx],edx
  403c87:	and    DWORD PTR [eax+0x14],esi
  403c8a:	dec    eax
  403c8b:	sub    BYTE PTR [ebp+edx*2-0x17],dl
  403c8f:	mov    bl,BYTE PTR [esp]
  403c92:	or     al,0x45
  403c94:	xor    DWORD PTR [ebx],edx
  403c96:	mov    cl,0x7
  403c98:	jmp    0x403d11
  403c9a:	add    eax,0x6013f021
  403c9f:	adc    DWORD PTR [ecx],esp
  403ca1:	cmp    DWORD PTR [eax+0x5e080b03],ebp
  403ca7:	xor    DWORD PTR [ecx+0x2c],eax
  403caa:	leave  
  403cab:	and    al,dh
  403cad:	adc    eax,DWORD PTR [ecx-0x6f]
  403cb0:	cdq    
  403cb1:	mov    ds:0x42df5b46,eax
  403cb6:	xor    dl,al
  403cb8:	and    eax,0x5d8a9c14
  403cbd:	xchg   edi,eax
  403cbe:	and    eax,0x269ca8bc
  403cc3:	mov    bh,0x5e
  403cc5:	(bad)  
  403cc6:	in     eax,0xc8
  403cc8:	popf   
  403cc9:	cmp    DWORD PTR [eax+0x1c08ba03],ebp
  403ccf:	jl     0x403c9d
  403cd1:	push   esp
  403cd2:	jmp    0x3353a5dd
  403cd7:	lea    ebp,ds:0x70213dd1
  403cdd:	adc    al,0x60
  403cdf:	adc    BYTE PTR [eax],al
  403ce1:	add    ah,dh
  403ce3:	pop    ebx
  403ce4:	dec    esp
  403ce5:	inc    ebp
  403ce6:	xor    DWORD PTR [ebp+0x54],edx
  403ce9:	(bad)  
  403ceb:	rcl    esi,cl
  403ced:	mov    dh,0xe
  403cef:	(bad)  
  403cf0:	in     eax,0x88
  403cf2:	fnstcw WORD PTR [ecx]
  403cf4:	sub    BYTE PTR [edx+ebp*4],al
  403cf7:	pop    es
  403cf8:	ins    BYTE PTR es:[edi],dx
  403cf9:	(bad)  
  403cfa:	(bad)  
  403cfb:	push   ebp
  403cfc:	add    cl,ch
  403cfe:	jecxz  0x403d16
  403d00:	lea    ebp,ds:0xda005547
  403d06:	cs xchg ecx,eax
  403d08:	je     0x403d11
  403d0a:	ins    BYTE PTR es:[edi],dx
  403d0b:	adc    al,0x33
  403d0d:	stos   DWORD PTR es:[edi],eax
  403d0e:	in     eax,0xd3
  403d10:	mov    ebp,esp
  403d12:	mov    ecx,0x35286667
  403d17:	push   ebp
  403d18:	jne    0x403cb1
  403d1a:	stos   DWORD PTR es:[edi],eax
  403d1b:	add    BYTE PTR [eax+0xc],ah
  403d1e:	hlt    
  403d1f:	adc    ecx,DWORD PTR [ebx+0x413946b4]
  403d25:	jmp    0xc4a81dd5
  403d2a:	in     eax,dx
  403d2b:	adc    edi,edi
  403d2d:	sbb    al,0x59
  403d2f:	cmp    DWORD PTR [ecx-0x17],eax
  403d32:	scas   eax,DWORD PTR es:[edi]
  403d33:	pop    eax
  403d34:	cld    
  403d35:	inc    esi
  403d36:	xor    DWORD PTR [edx],0x9332a865
  403d3c:	inc    ebp
  403d3d:	xor    ebp,ebp
  403d3f:	scas   eax,DWORD PTR es:[edi]
  403d40:	jmp    FWORD PTR [esi]
  403d42:	lahf   
  403d43:	mov    ss,esi
  403d45:	jb     0x403d47
  403d47:	add    BYTE PTR [edi-0x6b352d56],bl
  403d4d:	not    BYTE PTR [ebp+edx*1+0x3b]
  403d51:	(bad)  
  403d52:	add    esp,ebp
  403d54:	mov    ecx,0x32a865d7
  403d59:	pop    ss
  403d5a:	inc    ebp
  403d5b:	add    DWORD PTR [ecx],esi
  403d5d:	jge    0x403dd8
  403d5f:	imul   ecx,DWORD PTR [eax-0x53128a5f],0x57
  403d66:	clc    
  403d67:	jo     0x403dcf
  403d69:	mov    al,ds:0x8d3fa7c1
  403d6e:	(bad)  
  403d6f:	(bad)  
  403d70:	rcl    bl,0xc3
  403d73:	in     al,0x31
  403d75:	mov    esp,0xcc3d0041
  403d7a:	mov    ecx,0xff67b7ec
  403d7f:	mov    ebx,DWORD PTR [esi+0xd33d78b]
  403d85:	pop    esp
  403d86:	xor    eax,edx
  403d88:	retf   
  403d89:	mov    eax,ds:0x552e148c
  403d8e:	add    BYTE PTR [ebx],al
  403d90:	sbb    eax,0xb3a10560
  403d95:	mov    ebp,0x69bdff6e
  403d9a:	pop    DWORD PTR [ebp-0x50]
  403d9d:	lea    edi,[ebp-0x4]
  403da0:	fldenv [edx+0x1e]
  403da3:	mov    edx,DWORD PTR [esi]
  403da5:	mov    esi,ebx
  403da7:	ror    DWORD PTR [ebx-0x5f],0x2
  403dab:	fadd   DWORD PTR [eax]
  403dad:	add    cl,cl
  403daf:	repnz iret 
  403db1:	mov    ecx,0xffff66f4
  403db6:	adc    ebx,DWORD PTR [edi-0x75]
  403db9:	push   ebp
  403dba:	hlt    
  403dbb:	or     al,BYTE PTR [ebp-0x4]
  403dbe:	sub    ecx,edi
  403dc0:	and    eax,esi
  403dc2:	push   ebx
  403dc3:	rol    DWORD PTR [ebx],cl
  403dc5:	add    al,0x5
  403dc7:	hlt    
  403dc8:	gs inc ecx
  403dca:	dec    eax
  403dcb:	adc    al,0x45
  403dcd:	clc    
  403dce:	dec    ebp
  403dcf:	leave  
  403dd0:	mov    esp,0x7566d71b
  403dd5:	cld    
  403dd6:	out    0xe0,eax
  403dd8:	test   DWORD PTR [ecx-0x393e964b],0x8bfe8c56
  403de2:	sub    edx,esi
  403de4:	ret    
  403de5:	add    eax,0x7541bd1b
  403dea:	jecxz  0x403e09
  403dec:	in     al,dx
  403ded:	push   edi
  403def:	addr16 mov eax,esi
  403df2:	xor    DWORD PTR [esi],esi
  403df4:	int3   
  403df5:	xor    ebp,DWORD PTR [edi+ecx*8-0x10]
  403df9:	shl    DWORD PTR [edx],0xaf
  403dfc:	xchg   BYTE PTR [edi+ecx*4+0x740303ec],dh
  403e03:	arpl   si,di
  403e05:	aad    0xf0
  403e07:	dec    esp
  403e08:	retf   0x64ff
  403e0b:	ja     0x403d91
  403e0d:	inc    ebp
  403e0e:	fldenv [ebx]
  403e10:	ss cld 
  403e12:	add    BYTE PTR [eax],al
  403e14:	lock jo 0x403e2c
  403e17:	mov    eax,edi
  403e19:	xor    eax,0xaff2c1b0
  403e1e:	add    al,bl
  403e20:	jo     0x403dca
  403e22:	rol    DWORD PTR [ecx],cl
  403e24:	dec    esp
  403e25:	or     ebx,DWORD PTR [edi]
  403e27:	inc    ecx
  403e28:	xor    DWORD PTR [esi+ebp*8+0x36c1463],ebp
  403e2f:	add    DWORD PTR [ebx+eax*8+0x1e],edx
  403e33:	inc    ecx
  403e34:	xor    DWORD PTR [esi],esi
  403e36:	ds cld 
  403e38:	xor    BYTE PTR [eax-0x550f9ad9],bh
  403e3e:	mov    BYTE PTR [ebp+0x79],al
  403e41:	stos   DWORD PTR es:[edi],eax
  403e42:	(bad)  
  403e43:	outs   dx,DWORD PTR ds:[esi]
  403e44:	aam    0x6b
  403e46:	add    ecx,ecx
  403e48:	jb     0x403dd1
  403e4a:	mov    ah,ch
  403e4c:	pop    esi
  403e4d:	jg     0x403e5a
  403e4f:	call   0x437234
  403e54:	mov    dl,0x2
  403e56:	mov    ah,0x75
  403e58:	movlps xmm5,QWORD PTR [esi]
  403e5b:	or     BYTE PTR [ecx-0x7c],cl
  403e5e:	jp     0x403e60
  403e60:	xor    DWORD PTR [esi-0x1ac98a3d],esp
  403e66:	mov    bl,0xff
  403e68:	es scas eax,DWORD PTR es:[edi]
  403e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e6b:	adc    ebp,DWORD PTR [edx-0x3effd6ec]
  403e71:	or     ebp,DWORD PTR [ecx-0x29a3c9c7]
  403e77:	mov    bl,0x0
  403e79:	add    BYTE PTR [esi],al
  403e7b:	mov    al,ds:0x14aa08c2
  403e80:	jb     0x403e86
  403e82:	call   0x84442459
  403e87:	mov    eax,ebp
  403e89:	xchg   ebp,ebp
  403e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e8c:	sbb    dh,bh
  403e8e:	sti    
  403e8f:	sub    ch,bh
  403e91:	sbb    eax,0x9beb2a30
  403e96:	or     ebx,DWORD PTR [ebp-0x17]
  403e99:	add    esi,DWORD PTR [edx+0x33398e9c]
  403e9f:	stos   DWORD PTR es:[edi],eax
  403ea0:	or     edi,DWORD PTR [edi-0x27]
  403ea3:	sub    bl,cl
  403ea5:	xor    ah,0xa3
  403ea8:	sbb    DWORD PTR [ecx+edi*4+0x17b36eb6],ebx
  403eaf:	xlat   BYTE PTR ds:[ebx]
  403eb0:	lods   al,BYTE PTR ds:[esi]
  403eb1:	mov    bl,0x33
  403eb3:	adc    al,0x72
  403eb5:	inc    ecx
  403eb6:	and    DWORD PTR [esi+0x51b82a24],edx
  403ebc:	pop    ebx
  403ebd:	xchg   esp,edi
  403ebf:	psubsw mm6,QWORD PTR [edi]
  403ec2:	sub    al,0x8b
  403ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec5:	call   FWORD PTR [ebx-0x1]
  403ec8:	imul   esi,DWORD PTR [ecx],0xfdb41435
  403ece:	mov    bl,0x21
  403ed0:	icebp  
  403ed1:	add    ebx,esp
  403ed3:	pop    ss
  403ed4:	adc    ch,cl
  403ed6:	pop    ebx
  403ed7:	movhps xmm7,QWORD PTR [ecx]
  403eda:	cmp    DWORD PTR [ebp+edi*2+0x3e0000b2],ebp
  403ee1:	lahf   
  403ee2:	push   0xffffffac
  403ee4:	ss sub ebx,ebp
  403ee7:	sahf   
  403ee8:	inc    ebp
  403ee9:	lea    eax,[eax]
  403eeb:	lods   al,BYTE PTR ds:[esi]
  403eec:	fisubr WORD PTR [ecx]
  403eee:	adc    BYTE PTR [eax+ebp*2-0x5c],bl
  403ef2:	push   eax
  403ef3:	cmp    dh,BYTE PTR [ebp+0x32e9b8b7]
  403ef9:	xchg   ebx,eax
  403efa:	clc    
  403efb:	(bad)  
  403efc:	dec    ecx
  403efd:	or     al,0x53
  403eff:	shl    ebx,0x5b
  403f02:	add    cl,ch
  403f04:	(bad)  
  403f05:	mov    ecx,0xcd7faa8b
  403f0a:	ret    0x32e5
  403f0d:	dec    ecx
  403f0e:	mov    edi,DWORD PTR [ebp+0x24834787]
  403f14:	cmp    eax,0x5af27514
  403f19:	adc    eax,0x3f32e900
  403f1e:	pop    ebx
  403f1f:	mov    al,ds:0x72000ff4
  403f24:	add    DWORD PTR [eax],edx
  403f26:	mov    ebx,0x1432e9
  403f2b:	add    ebp,DWORD PTR ds:0xfbd9759f
  403f31:	sahf   
  403f32:	jne    0x403f25
  403f34:	mov    edx,0x32e9b863
  403f39:	cdq    
  403f3a:	rcl    bh,0x1e
  403f3d:	adc    edi,eax
  403f3f:	add    al,ch
  403f41:	add    eax,DWORD PTR [ebx+0x220000c4]
  403f47:	adc    al,0x75
  403f49:	out    0xdf,al
  403f4b:	adc    al,0x0
  403f4d:	jmp    0x4242ea84
  403f52:	ins    BYTE PTR es:[edi],dx
  403f53:	mov    al,bl
  403f55:	(bad)  
  403f56:	out    0xcc,eax
  403f58:	ret    0x32ed
  403f5b:	dec    ecx
  403f5c:	mov    eax,DWORD PTR ds:0xff4d7ad
  403f62:	sbb    DWORD PTR [esi-0x614aff01],0xffffff8e
  403f69:	test   DWORD PTR [eiz*2-0x73a80001],esp
  403f70:	clc    
  403f71:	dec    BYTE PTR [edi]
  403f73:	add    BYTE PTR fs:[eax],al
  403f76:	or     BYTE PTR [edx],dl
  403f78:	mov    DWORD PTR [ebp-0x9d14],0x1219
  403f82:	pop    ebp
  403f83:	xchg   ebp,eax
  403f84:	add    bh,bh
  403f86:	out    dx,eax
  403f87:	arpl   di,di
  403f89:	jne    0x403f6b
  403f8b:	xchg   esp,eax
  403f8c:	add    BYTE PTR [ebp-0x1a3ab],cl
  403f92:	(bad)
  403f96:	inc    edx
  403f97:	sbb    BYTE PTR [ebp-0x9d537b],cl
  403f9d:	dec    DWORD PTR [eax]
  403f9f:	(bad)  
  403fa0:	jmp    edi
  403fa2:	sbb    al,0x30
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	dec    ebx
  403fa7:	jo     0x403fa8
  403fa9:	je     0x403fab
  403fab:	add    BYTE PTR [eax+eiz*4-0x576b8a41],dl
  403fb2:	mov    edi,0x12995eb
  403fb7:	add    BYTE PTR [eax-0x7f3d36ef],cl
  403fbd:	adc    DWORD PTR [ebp-0x75],edx
  403fc0:	in     al,dx
  403fc1:	xchg   esi,eax
  403fc2:	(bad)  
  403fc3:	cld    
  403fc4:	mov    ebx,0xd26adac0
  403fc9:	fs jne 0x403fd4
  403fcc:	add    BYTE PTR ds:0x9f1fffff,bl
  403fd2:	mov    edi,0x59ffc474
  403fd7:	push   DWORD PTR [ebp+0x2f7fe799]
  403fdd:	arpl   di,di
  403fdf:	or     esi,DWORD PTR [ecx]
  403fe1:	jmp    0x404019
  403fe3:	add    cl,BYTE PTR [edx+0x77]
  403fe6:	sbb    eax,0x7eabcb00
  403feb:	inc    ebp
  403fec:	cs jnp 0x403f9f
  403fef:	jne    0x40402a
  403ff1:	adc    eax,DWORD PTR [edi]
  403ff3:	mov    eax,0xc086ab31
  403ff8:	xchg   edi,eax
  403ff9:	sti    
  403ffa:	jl     0x404041
  403ffc:	and    eax,0x7cff46f3
  404001:	test   eax,0xe7aa0174
  404006:	dec    DWORD PTR [edx+0x6a044123]
  40400c:	xor    BYTE PTR [eax],dh
  40400e:	inc    esi
  40400f:	inc    DWORD PTR [eax]
  404011:	add    BYTE PTR [ecx-0x21f3c99a],al
  404017:	clc    
  404018:	adc    edi,edi
  40401a:	pop    esp
  40401b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401c:	fwait
  40401d:	mov    eax,0x3bb07ded
  404022:	ins    BYTE PTR es:[edi],dx
  404023:	fwait
  404024:	xor    eax,0x86b6ca02
  404029:	fstp   TBYTE PTR ds:0xac37c47
  40402f:	lds    edx,FWORD PTR fs:[ecx+esi*1]
  404033:	add    BYTE PTR [ebp-0x14],bh
  404036:	mov    al,0x76
  404038:	add    edi,eax
  40403a:	xchg   esi,eax
  40403b:	xor    eax,0xc06a2b54
  404040:	dec    ebp
  404041:	(bad)  
  404042:	cld    
  404043:	mov    dl,0x9b
  404045:	sbb    BYTE PTR [esi+0x4d],bh
  404048:	mov    al,0xb
  40404a:	jno    0x4040aa
  40404c:	sub    BYTE PTR [edx+0xb],ch
  40404f:	fidiv  WORD PTR ds:0xb0b05908
  404055:	call   FWORD PTR [esi-0x4f]
  404058:	ret    
  404059:	jne    0x40408e
  40405b:	adc    al,0x12
  40405d:	pop    eax
  40405e:	mov    al,0x1e
  404060:	stc    
  404061:	add    edi,DWORD PTR [ecx]
  404063:	adc    al,0xe9
  404065:	cmp    DWORD PTR [esi],esi
  404067:	pop    esp
  404068:	jmp    0x12dc7768
  40406d:	add    al,0xba
  40406f:	push   ecx
  404070:	fstp   DWORD PTR ds:0x86644431
  404076:	add    BYTE PTR [eax],al
  404078:	xor    DWORD PTR [esi+ebp*8+0x5c9b81af],ebx
  40407f:	cld    
  404080:	push   ss
  404081:	and    BYTE PTR [esi-0x566ecefc],dl
  404087:	sub    eax,0x38fdaf33
  40408c:	xor    dl,BYTE PTR [edi-0x2e]
  40408f:	out    0x7e,eax
  404091:	(bad)  
  404092:	adc    al,0x0
  404094:	mov    edx,0x81044306
  404099:	mov    DWORD PTR [esp+eax*1-0x27],esp
  40409d:	fwait
  40409e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409f:	push   esp
  4040a0:	into   
  4040a1:	and    ebp,ebp
  4040a3:	scas   al,BYTE PTR es:[edi]
  4040a4:	arpl   WORD PTR [ecx+esi*1],ax
  4040a7:	fnsave [ebp+0x4]
  4040aa:	push   0x31
  4040ac:	and    DWORD PTR [esp+edi*8],edx
  4040af:	add    dh,dl
  4040b1:	scas   al,BYTE PTR es:[edi]
  4040b2:	in     eax,0x88
  4040b4:	mov    ah,BYTE PTR [eax]
  4040b6:	push   eax
  4040b7:	jnp    0x40412b
  4040b9:	aas    
  4040ba:	mov    al,ds:0xbc1425c2
  4040bf:	jp     0x40405e
  4040c1:	xchg   edi,eax
  4040c2:	and    eax,0x55e6deac
  4040c7:	sbb    dh,BYTE PTR [ecx]
  4040c9:	inc    ebx
  4040ca:	dec    esi
  4040cb:	cmp    DWORD PTR [ecx],ebp
  4040cd:	lods   al,BYTE PTR ds:[esi]
  4040ce:	sbb    cl,bl
  4040d0:	outs   dx,BYTE PTR ds:[esi]
  4040d1:	fwait
  4040d2:	es dec ecx
  4040d4:	gs adc al,0x0
  4040d7:	jmp    0x94cb550e
  4040dc:	add    BYTE PTR [eax],al
  4040de:	pop    edx
  4040df:	mov    ss,WORD PTR [edx]
  4040e1:	je     0x4040db
  4040e3:	fwait
  4040e4:	push   eax
  4040e5:	xchg   ebx,eax
  4040e6:	mov    DWORD PTR cs:[ebp+0x15],eax
  4040ea:	in     eax,0x9a
  4040ec:	jne    0x4040cf
  4040ee:	xchg   DWORD PTR [esi+0xc],eax
  4040f1:	scas   al,BYTE PTR es:[edi]
  4040f2:	mov    ch,0x18
  4040f4:	cld    
  4040f5:	in     al,dx
  4040f6:	sub    BYTE PTR [eax],cl
  4040f8:	or     bh,BYTE PTR [ebp+0x18]
  4040fb:	xchg   esi,eax
  4040fc:	jge    0x4040ef
  4040fe:	xor    ah,BYTE PTR [ecx]
  404100:	leave  
  404101:	sbb    dh,ch
  404103:	scas   al,BYTE PTR es:[edi]
  404104:	add    eax,0xc096ef72
  404109:	jmp    0x4132:0xe5c2cd6f
  404110:	mov    edx,ebp
  404112:	mov    bl,0xcf
  404114:	hlt    
  404115:	sbb    bh,BYTE PTR [esi+0x2c]
  404118:	cwde   
  404119:	repz xor dl,BYTE PTR [eax+ebp*8]
  40411d:	fimul  WORD PTR [esi+0x7970ff9a]
  404123:	cwde   
  404124:	lea    esp,[ecx+ecx*4]
  404127:	inc    ebx
  404128:	call   0xffdb2d02
  40412d:	(bad)  
  40412f:	sub    eax,0x32ab131e
  404134:	add    BYTE PTR [ebx-0x300ebce],al
  40413a:	out    0x9a,al
  40413c:	jne    0x40411f
  40413e:	mov    edx,0x66fe8f
  404143:	add    bh,bl
  404145:	nop
  404146:	shr    dh,0xae
  404149:	jecxz  0x40414b
  40414b:	jmp    0x55b5dc82
  404150:	call   0x3d69:0xf700db87
  404157:	add    dl,dh
  404159:	push   ss
  40415a:	add    BYTE PTR [esi+0x4d],dh
  40415d:	ja     0x40417b
  40415f:	add    DWORD PTR [eax+0x16],ecx
  404162:	push   DWORD PTR [ebp+0x2c]
  404165:	jg     0x4041c1
  404167:	jmp    DWORD PTR [edi]
  404169:	push   0xffffff85
  40416b:	rcr    BYTE PTR [edx+edx*8+0x7f1c75ff],0x8d
  404173:	fnsave [edi]
  404175:	push   0xffffff8b
  404177:	push   ebp
  404178:	sbb    al,0x1c
  40417a:	adc    ch,BYTE PTR [edx+0x8]
  40417d:	(bad)  
  40417e:	xor    esp,DWORD PTR [ecx]
  404180:	or     BYTE PTR [esi],dl
  404182:	push   DWORD PTR [ebp+0x14]
  404185:	push   0x46e7f475
  40418a:	or     al,0xc7
  40418c:	dec    ebp
  40418d:	push   0x16080000
  404192:	push   0x554403
  404197:	call   FWORD PTR ds:0x5e19e864
  40419d:	adc    BYTE PTR [eax],al
  40419f:	push   ebx
  4041a0:	rcl    ebp,cl
  4041a2:	je     0x4041da
  4041a4:	inc    ebx
  4041a5:	push   0x368
  4041aa:	hlt    
  4041ab:	push   esi
  4041ac:	add    al,ch
  4041ae:	sbb    BYTE PTR [eax+eax*1],bl
  4041b1:	add    bl,cl
  4041b3:	ins    DWORD PTR es:[edi],dx
  4041b4:	push   edi
  4041b5:	inc    edi
  4041b6:	and    eax,edi
  4041b8:	mov    ecx,0x158994
  4041bd:	mov    al,0x95
  4041bf:	arpl   WORD PTR [esi+0x4fcb8],bp
  4041c5:	add    BYTE PTR [ebx],ah
  4041c7:	aad    0xc6
  4041c9:	inc    edi
  4041ca:	out    0xf,eax
  4041cc:	push   edi
  4041cd:	push   ebx
  4041ce:	xor    DWORD PTR [ebx-0x4f],edx
  4041d1:	mov    ch,0x31
  4041d3:	stos   DWORD PTR es:[edi],eax
  4041d4:	jp     0x40421b
  4041d6:	imul   esi,DWORD PTR [edx-0x3b],0x4ca86647
  4041dd:	pop    ebx
  4041de:	leave  
  4041df:	mov    ebp,0xea3140df
  4041e4:	ss cld 
  4041e6:	pop    ecx
  4041e7:	(bad)  [esi+0x0]
  4041ea:	xor    DWORD PTR [esi-0x8],ebx
  4041ed:	mov    edi,0xf87866c5
  4041f2:	leave  
  4041f3:	popf   
  4041f4:	fild   WORD PTR [eax+0x31]
  4041f7:	add    esp,ebp
  4041f9:	mov    bl,0x31
  4041fb:	stos   DWORD PTR es:[edi],eax
  4041fc:	add    al,bh
  4041fe:	xchg   BYTE PTR [edx+0x78],ch
  404201:	(bad)  
  404203:	adc    eax,DWORD PTR ds:[eax]
  404206:	xor    DWORD PTR [ebx-0x2],edi
  404209:	icebp  
  40420a:	xlat   BYTE PTR ds:[ebx]
  40420b:	jb     0x4041a4
  40420d:	adc    DWORD PTR [eax],eax
  40420f:	add    BYTE PTR [ecx],dh
  404211:	stos   DWORD PTR es:[edi],eax
  404212:	fadd   st,st(0)
  404214:	out    dx,eax
  404215:	icebp  
  404216:	lods   al,BYTE PTR ds:[esi]
  404217:	add    BYTE PTR [esi-0x1c986402],al
  40421d:	pop    ecx
  40421e:	lods   al,BYTE PTR ds:[esi]
  40421f:	mov    eax,DWORD PTR [ebx+edi*4-0x50a22e08]
  404226:	jp     0x40422a
  404228:	fisubr DWORD PTR [eax-0x733f17ad]
  40422e:	lods   al,BYTE PTR ds:[esi]
  40422f:	call   FWORD PTR [esi+0x69]
  404232:	inc    esp
  404233:	jmp    DWORD PTR [edx+ebp*8]
  404236:	dec    eax
  404237:	jmp    DWORD PTR [edi+edx*1]
  40423a:	fwait
  40423b:	and    eax,0x83ac1984
  404240:	sbb    al,0x23
  404242:	add    esi,DWORD PTR [edi+0x2e]
  404245:	jb     0x40428d
  404247:	clc    
  404248:	xor    DWORD PTR [ecx+ebp*8],edx
  40424b:	arpl   WORD PTR [ecx],si
  40424d:	cdq    
  40424e:	aam    0xab
  404250:	jle    0x404270
  404252:	pop    ebp
  404253:	lods   al,BYTE PTR ds:[esi]
  404254:	cld    
  404255:	or     eax,DWORD PTR [ecx-0x5c]
  404258:	ins    BYTE PTR es:[edi],dx
  404259:	cwde   
  40425a:	inc    esi
  40425b:	lods   al,BYTE PTR ds:[esi]
  40425c:	fcomp  QWORD PTR [edi-0x678479af]
  404262:	ss clc 
  404264:	xchg   esi,eax
  404265:	push   ds
  404266:	jmp    0x404200
  404268:	sub    cl,BYTE PTR ds:0x8d1e3729
  40426e:	mov    ah,0xb7
  404270:	stos   BYTE PTR es:[edi],al
  404271:	add    eax,0x3616
  404276:	and    eax,0x2eb79499
  40427b:	inc    ebx
  40427c:	mov    ebp,0xe41cf186
  404281:	push   0x3e91430
  404286:	stos   BYTE PTR es:[edi],al
  404287:	inc    ecx
  404288:	cmc    
  404289:	ja     0x4042ae
  40428b:	xchg   edi,eax
  40428c:	pop    esp
  40428d:	mov    al,0x6
  40428f:	inc    ebx
  404290:	icebp  
  404291:	stos   BYTE PTR es:[edi],al
  404292:	test   BYTE PTR [eax-0x67ec803f],bl
  404298:	into   
  404299:	jg     0x40428d
  40429b:	aaa    
  40429c:	and    bh,BYTE PTR [ebp+0x50e908f3]
  4042a2:	stos   BYTE PTR es:[edi],al
  4042a3:	test   al,0x6a
  4042a5:	shl    BYTE PTR [ecx-0x1420e5c1],0x2c
  4042ac:	jmp    0x91d80994
  4042b1:	adc    bl,0x97
  4042b4:	xchg   esi,eax
  4042b5:	jge    0x404323
  4042b7:	cwde   
  4042b8:	add    DWORD PTR [ecx+edx*2],eax
  4042bb:	adc    al,0xe9
  4042bd:	fwait
  4042be:	sub    BYTE PTR [edx+0x51a8ab7e],dh
  4042c4:	add    BYTE PTR ds:0xe9201435,bh
  4042ca:	xor    ch,BYTE PTR [esp+ebp*2-0x766825b5]
  4042d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d2:	push   ss
  4042d3:	mov    DWORD PTR [ebp+0x29],edi
  4042d6:	add    al,0xd8
  4042d8:	(bad)  
  4042d9:	call   0xe37242de
  4042de:	mov    edi,0x45cf073a
  4042e3:	sub    DWORD PTR [ecx-0x69],ecx
  4042e6:	(bad)  
  4042e7:	jmp    0x2f14945f
  4042ec:	cmp    dl,BYTE PTR [eax+eax*1]
  4042ef:	lock mov cs:0x1432feff,eax
  4042f6:	call   FWORD PTR [esi+ecx*4-0x25c6ba79]
  4042fd:	and    BYTE PTR [esi+esi*2-0x5b725790],dh
  404304:	repnz inc ebx
  404306:	push   0x801432e9
  40430b:	xor    DWORD PTR [edx],0xffffff97
  40430e:	jne    0x404301
  404310:	stos   BYTE PTR es:[edi],al
  404311:	jno    0x4042c7
  404313:	jmp    0x5e004e4a
  404318:	xor    edx,DWORD PTR [ebx+0x2132b97d]
  40431e:	add    eax,0x13a8d0
  404323:	jmp    0xb6f0941b
  404328:	sub    edx,DWORD PTR [eax+eax*1]
  40432b:	pop    esp
  40432c:	jno    0x404392
  40432e:	push   eax
  40432f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404330:	add    DWORD PTR [eax+0x68],ebx
  404333:	jmp    0x64c0576a
  404338:	jno    0x40430e
  40433a:	push   eax
  40433b:	sbb    DWORD PTR [ecx+0x60],0x0
  404342:	cwde   
  404343:	xchg   ebp,eax
  404344:	mov    edi,0xa9779575
  404349:	add    BYTE PTR [eax+0x44458b12],cl
  40434f:	aad    0x0
  404351:	add    ch,bh
  404353:	jmp    0x404314
  404355:	mov    ecx,0x101c
  40435a:	sbb    edx,eax
  40435c:	rep stos BYTE PTR es:[edi],al
  40435e:	pop    ss
  40435f:	push   esp
  404360:	sar    BYTE PTR [eax+ebx*2],0x12
  404364:	add    bh,bh
  404366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404367:	pop    DWORD PTR es:[ebp-0x14]
  40436b:	rol    DWORD PTR [ebp-0x2c],1
  40436e:	pop    ds
  40436f:	or     al,BYTE PTR [eax]
  404371:	add    BYTE PTR [edi],dl
  404373:	push   esp
  404374:	lock (bad) 
  404376:	aas    
  404377:	adc    al,BYTE PTR [eax]
  404379:	lea    eax,[ebp+0x186a50d2]
  40437f:	clc    
  404380:	(bad)  
  404381:	(bad)  
  404382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404383:	sub    eax,0x116431e8
  404388:	add    BYTE PTR [ebx],cl
  40438a:	dec    eax
  40438b:	in     eax,0x5
  40438d:	sbb    DWORD PTR [ebp+0x1a7500c1],0x79
  404394:	pusha  
  404395:	jmp    DWORD PTR [ebp+0x6c]
  404398:	push   DWORD PTR [ebp-0x6c]
  40439b:	clc    
  40439c:	sbb    al,0x2c
  40439e:	sbb    DWORD PTR [eax],edx
  4043a0:	push   DWORD PTR [ebp-0x54]
  4043a3:	js     0x40436f
  4043a5:	mov    bl,0x0
  4043a7:	add    al,cl
  4043a9:	adc    DWORD PTR [ebx-0x4963073c],eax
  4043af:	inc    ebp
  4043b0:	mov    al,ds:0x8f006a40
  4043b5:	in     eax,0xfb
  4043b7:	call   0x3faa6a
  4043bc:	xor    DWORD PTR [edx-0x6dcc8a3d],esi
  4043c2:	out    dx,eax
  4043c3:	mov    ah,ch
  4043c5:	push   edx
  4043c6:	test   eax,0x2583dd75
  4043cb:	mov    dl,0x31
  4043cd:	stos   DWORD PTR es:[edi],eax
  4043ce:	push   ebx
  4043cf:	inc    DWORD PTR [edi+eiz*8]
  4043d2:	test   al,0x75
  4043d4:	leave  
  4043d5:	inc    ebx
  4043d6:	dec    edi
  4043d7:	sti    
  4043d8:	jle    0x404410
  4043da:	std    
  4043db:	mov    edi,0x109ca8fc
  4043e0:	outs   dx,BYTE PTR ds:[esi]
  4043e1:	rcl    BYTE PTR [ebx],0xff
  4043e4:	fcomp  QWORD PTR [esi+0x439975a8]
  4043ea:	out    dx,eax
  4043eb:	cld    
  4043ec:	push   esi
  4043ed:	fidivr WORD PTR [eax+ebx*8+0x4e]
  4043f1:	pusha  
  4043f2:	imul   ebp,eax,0x34
  4043f5:	aaa    
  4043f6:	add    al,0x0
  4043f8:	sub    BYTE PTR ds:[edi-0x18],0x4
  4043fd:	or     al,0xa9
  4043ff:	jmp    FWORD PTR [esi]
  404401:	and    BYTE PTR [edi-0x18],0x4c
  404405:	or     al,0xa9
  404407:	call   FWORD PTR [esi]
  404409:	and    BYTE PTR [edi+0x340000e8],ah
  40440f:	or     al,0xa9
  404411:	(bad)  
  404412:	mov    edx,0xf85f4ce9
  404417:	push   0x2265fff7
  40441c:	xchg   edi,eax
  40441d:	sub    ebp,0xffffffbe
  404420:	jl     0x404467
  404422:	cmp    eax,0x2f74c3b2
  404427:	add    ax,WORD PTR [eax]
  40442a:	xor    DWORD PTR [ebx+0x5f6cc703],ebp
  404430:	add    eax,DWORD PTR [eax]
  404432:	xor    DWORD PTR [ebx+0x13c54576],ebp
  404438:	cmp    DWORD PTR [ecx+0x2e9e0844],ebp
  40443e:	sub    DWORD PTR [eax+eax*1+0x6a94aeaa],ebp
  404445:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404447:	adc    edi,ebp
  404449:	adc    BYTE PTR [ebx],cl
  40444b:	adc    al,0x7e
  40444d:	cs and eax,0x99a7fc95
  404453:	cmp    eax,0x4386a86f
  404458:	data16 cs jge 0x404407
  40445c:	cmp    DWORD PTR [ebx-0x454e6b8a],esp
  404462:	jae    0x40446f
  404464:	jmp    0x6ae7feb7
  404469:	mov    edi,0x3e262d5d
  40446e:	push   ebp
  40446f:	adc    ch,cl
  404471:	and    DWORD PTR [eax],eax
  404473:	add    BYTE PTR [esi+0x4e],dh
  404476:	das    
  404477:	or     DWORD PTR [ecx],esi
  404479:	sub    ch,ch
  40447b:	jbe    0x404471
  40447d:	xchg   edi,eax
  40447e:	mov    ecx,0xe913b11b
  404483:	add    ebx,DWORD PTR [ecx+0x31030e93]
  404489:	xchg   ebx,eax
  40448a:	jl     0x404487
  40448c:	push   ss
  40448d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40448e:	cmp    al,BYTE PTR [ebx]
  404490:	xor    DWORD PTR [ebp+0x2b],ebx
  404493:	dec    DWORD PTR [esi]
  404495:	jmp    0x58f2dbfb
  40449a:	xchg   ebp,eax
  40449b:	dec    edi
  40449c:	bound  ebx,QWORD PTR [ebx+0x24]
  40449f:	pop    eax
  4044a0:	xor    DWORD PTR [ecx+ebp*8],edx
  4044a3:	add    esp,DWORD PTR [edx]
  4044a5:	outs   dx,DWORD PTR ds:[esi]
  4044a6:	inc    ecx
  4044a7:	add    al,0x41
  4044a9:	adc    al,0xe9
  4044ab:	fwait
  4044ac:	mov    eax,0xa8a7be74
  4044b1:	fcos   
  4044b3:	test   al,0x2d
  4044b5:	adc    al,0x10
  4044b7:	jmp    0x89ccc0ee
  4044bc:	xchg   esi,eax
  4044bd:	xchg   ebx,eax
  4044be:	mov    DWORD PTR [eax*2+0x32f8fffc],esp
  4044c5:	adc    al,0xe8
  4044c7:	push   cs
  4044c8:	int    0x93
  4044ca:	push   DWORD PTR [eax-0x10]
  4044cd:	iret   
  4044ce:	(bad)  
  4044cf:	cld    
  4044d0:	(bad)  
  4044d1:	int    0x3c
  4044d3:	jmp    0xa973590a
  4044d8:	add    BYTE PTR [eax],al
  4044da:	ret    0xc7be
  4044dd:	lods   al,BYTE PTR ds:[esi]
  4044de:	mov    esi,0x32e90050
  4044e3:	xchg   ebx,eax
  4044e4:	jne    0x40450f
  4044e6:	out    0xd8,al
  4044e8:	ror    DWORD PTR [esi+0x20],cl
  4044eb:	int3   
  4044ec:	(bad)  
  4044ed:	lods   al,BYTE PTR ds:[esi]
  4044ee:	mov    ds:0x8e21455b,al
  4044f3:	and    eax,DWORD PTR [eax]
  4044f5:	jmp    0x2f341e89
  4044fa:	ds xchg ebx,eax
  4044fc:	push   DWORD PTR [eax+esi*8+0x57]
  404500:	push   eax
  404501:	xchg   ecx,eax
  404502:	xor    dl,BYTE PTR [eax+eax*1]
  404505:	imul   ecx,DWORD PTR [ebx+0x14],0x7b2a94ff
  40450c:	mov    ch,0x3b
  40450e:	xor    eax,0x61290b14
  404513:	sbb    al,BYTE PTR [ebx+0x7513fe74]
  404519:	in     al,0xa5
  40451b:	nop
  40451c:	add    cl,ch
  40451e:	xor    bl,BYTE PTR [ebx+0x45]
  404521:	cdq    
  404522:	iret   
  404523:	and    al,BYTE PTR [eax]
  404525:	jmp    0x39f01e93
  40452a:	mov    cs,WORD PTR [eax]
  40452c:	mov    esp,0x188000
  404531:	add    BYTE PTR [eax+0xc],cl
  404534:	inc    ebp
  404535:	les    ebp,FWORD PTR [eax]
  404537:	mov    al,0x90
  404539:	mov    dl,0xd8
  40453b:	push   ss
  40453c:	or     eax,eax
  40453e:	add    BYTE PTR [eax],al
  404540:	sbb    eax,0xc8d8e915
  404545:	push   ss
  404546:	add    BYTE PTR [ebx+0xc6005d],cl
  40454c:	cwde   
  40454d:	or     edi,DWORD PTR [ebp-0x3c]
  404550:	icebp  
  404551:	jp     0x404552
  404553:	dec    DWORD PTR [eax-0xd0c407b]
  404559:	rol    DWORD PTR [ebp-0x3c],1
  40455c:	aam    0x16
  40455e:	add    BYTE PTR [eax],al
  404560:	pop    ss
  404561:	inc    esp
  404562:	mov    eax,0xc7c6cd8f
  404567:	inc    ebp
  404568:	and    BYTE PTR [edx-0x2ea7fff1],bh
  40456e:	inc    ebp
  40456f:	hlt    
  404570:	test   DWORD PTR [ecx-0x2c3a0001],0x167250c3
  40457a:	push   0x0
  40457c:	pop    ss
  40457d:	inc    esp
  40457e:	mov    esp,0x48ce8
  404583:	add    BYTE PTR [ebx+0x56],al
  404586:	je     0x40458e
  404588:	fwait
  404589:	cmp    al,0xd4
  40458b:	add    BYTE PTR [ebp+0x88ce914],bh
  404591:	push   ss
  404592:	add    bh,bh
  404594:	popf   
  404595:	and    eax,0xba5875ff
  40459a:	jne    0x404554
  40459c:	mov    al,0x8a
  40459e:	sub    al,BYTE PTR [ecx+0x8]
  4045a1:	mov    ecx,0xbc75
  4045a6:	loopne 0x404607
  4045a8:	mov    cl,0x0
  4045aa:	xor    DWORD PTR [ebx-0x80],edi
  4045ad:	les    edi,FWORD PTR ds:0xfd456c72
  4045b3:	sub    ebx,DWORD PTR [edx]
  4045b5:	add    dh,dl
  4045b7:	dec    eax
  4045b8:	(bad)  
  4045b9:	call   0xffe60988
  4045be:	cmp    bh,BYTE PTR [ebx-0x2635fdd1]
  4045c4:	jp     0x40460b
  4045c6:	jge    0x40457a
  4045c8:	das    
  4045c9:	mov    ah,0x99
  4045cb:	fsub   QWORD PTR [ebp+0x2fa2a6ff]
  4045d1:	mov    esp,0x742389
  4045d6:	xor    DWORD PTR [ebx],ebp
  4045d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d9:	jne    0x4045a8
  4045db:	or     ch,BYTE PTR [edi]
  4045dd:	mov    ah,0x99
  4045df:	and    eax,0x867effab
  4045e4:	ret    
  4045e5:	jne    0x40461a
  4045e7:	out    0xf2,al
  4045e9:	sub    ah,0x8a
  4045ec:	add    esi,DWORD PTR [ebp+edi*1-0x1e]
  4045f0:	adc    BYTE PTR cs:[esi-0x30],bl
  4045f4:	idiv   esi
  4045f6:	fadd   QWORD PTR [esi]
  4045f8:	pushf  
  4045f9:	inc    eax
  4045fa:	dec    eax
  4045fb:	dec    edx
  4045fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fd:	or     esi,DWORD PTR [ecx-0x38]
  404600:	add    ebx,ebp
  404602:	es push es
  404604:	int3   
  404605:	or     ebx,DWORD PTR [edx-0x59]
  404608:	adc    cl,BYTE PTR [ebp-0x288c0000]
  40460e:	push   ebx
  40460f:	call   FWORD PTR [edi+eax*4+0x22e575a4]
  404616:	or     edi,ebx
  404618:	push   ss
  404619:	xchg   edx,eax
  40461a:	js     0x4045f4
  40461c:	push   cs
  40461d:	adc    BYTE PTR [edi-0x18],ch
  404620:	add    BYTE PTR [esp+eax*1+0x0],cl
  404624:	(bad)  
  404625:	adc    ebx,DWORD PTR [esp+eax*8+0x9]
  404629:	and    edi,DWORD PTR [esi+0x5c90eea4]
  40462f:	push   0xa4ae1ad9
  404634:	ficom  WORD PTR [eax+0x12c96c3c]
  40463a:	sahf   
  40463b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463c:	into   
  40463d:	xchg   esp,eax
  40463e:	xor    al,0x58
  404640:	xor    DWORD PTR [eax],ecx
  404642:	loope  0x4045e8
  404644:	inc    esp
  404645:	rcl    BYTE PTR [ecx-0x616f2850],0x78
  40464c:	jb     0x40463a
  40464e:	xor    eax,0xe92373bb
  404653:	dec    esi
  404654:	stos   BYTE PTR es:[edi],al
  404655:	jg     0x4046c1
  404657:	mov    edi,0xc8d1e499
  40465c:	mov    dl,0xe
  40465e:	in     eax,0x3
  404660:	std    
  404661:	loope  0x4046cc
  404663:	and    DWORD PTR es:[ebx*8+0x5cd6a43b],edx
  40466b:	push   ebx
  40466c:	outs   dx,BYTE PTR ds:[esi]
  40466d:	push   es
  40466e:	in     eax,0x9b
  404670:	add    BYTE PTR [eax],al
  404672:	pop    ebp
  404673:	ret    
  404674:	jmp    0xc193fa7c
  404679:	repz push edi
  40467b:	push   es
  40467c:	in     eax,dx
  40467d:	fwait
  40467e:	mov    ch,0x69
  404680:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404682:	mov    eax,0xc4a430d6
  404687:	(bad)  
  404688:	adc    DWORD PTR [esi-0x7a],esp
  40468b:	adc    ebp,ecx
  40468d:	clc    
  40468e:	out    dx,al
  40468f:	or     al,dh
  404691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404692:	pushf  
  404693:	and    al,0xe
  404695:	cs sbb ebp,esp
  404698:	add    eax,0xea7c292e
  40469d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469e:	push   cs
  40469f:	nop
  4046a0:	add    BYTE PTR [edx-0x6],ah
  4046a3:	(bad)  
  4046a4:	jne    0x404693
  4046a6:	fwait
  4046a7:	mov    dh,0xaf
  4046a9:	jmp    0xedb5d5e0
  4046ae:	call   0xc39b:0x92d6d7ec
  4046b5:	xor    ch,ah
  4046b7:	push   edx
  4046b8:	or     al,0xe9
  4046ba:	sbb    DWORD PTR [ebx+0x4f968ec],ebx
  4046c0:	(bad)  
  4046c1:	mov    dh,0x92
  4046c3:	mov    eax,ds:0x8f933b85
  4046c8:	(bad)  
  4046c9:	cmp    DWORD PTR ds:0x32e90115,eax
  4046cf:	jl     0x404734
  4046d1:	pop    eax
  4046d2:	sub    eax,0xaac914
  4046d7:	add    BYTE PTR [eax-0x65],bl
  4046da:	in     al,dx
  4046db:	push   0x50
  4046dd:	sbb    al,0x0
  4046df:	cmc    
  4046e0:	xor    edx,DWORD PTR [ebx+0x832d97d]
  4046e6:	sbb    DWORD PTR [esi+0x18],ebp
  4046e9:	sub    bh,bh
  4046eb:	fsubr  QWORD PTR [edx]
  4046ed:	jl     0x4046c9
  4046ef:	inc    ebx
  4046f0:	xchg   edx,eax
  4046f1:	(bad)  
  4046f2:	(bad)  
  4046f3:	fsub   QWORD PTR [edx-0x72]
  4046f6:	jne    0x4046d5
  4046f8:	xchg   ebx,eax
  4046f9:	or     DWORD PTR [eax],ecx
  4046fb:	push   ecx
  4046fc:	das    
  4046fd:	imul   edi,edi,0x3e
  404700:	jl     0x404754
  404702:	adc    cl,ch
  404704:	or     DWORD PTR [ebx+0x1c106aec],ebx
  40470a:	add    BYTE PTR [ebp-0x12826dca],bl
  404710:	xor    cl,BYTE PTR [eax]
  404712:	push   ss
  404713:	push   ss
  404714:	dec    eax
  404715:	and    al,0xff
  404717:	xchg   esp,eax
  404718:	sub    bh,BYTE PTR [esi+ebp*4+0x0]
  40471c:	push   edx
  40471d:	mov    bl,0xff
  40471f:	inc    DWORD PTR [ebp+0x1075ff1f]
  404725:	mov    ebx,0xb20fdb05
  40472a:	leave  
  40472b:	ret    0x12fc
  40472e:	push   ebp
  40472f:	mov    edi,esp
  404731:	xchg   ebp,eax
  404732:	(bad)  
  404733:	lock jmp FWORD PTR [ebx]
  404736:	or     al,0xe8
  404738:	movzx  edi,di
  40473b:	inc    DWORD PTR [eax]
  40473d:	add    BYTE PTR [ecx-0x24],ah
  404740:	or     eax,DWORD PTR [ebx+0x7400240d]
  404746:	es mov bl,0x75
  404749:	or     al,0xf0
  40474b:	pop    ebp
  40474c:	loop   0x40474d
  40474e:	(bad)  
  40474f:	sbb    eax,0xa55a74c0
  404754:	inc    ebp
  404755:	lock push 0xb00c75b3
  40475b:	cwde   
  40475c:	jecxz  0x40475d
  40475e:	scas   eax,DWORD PTR es:[edi]
  40475f:	sbb    eax,0x97ca74c0
  404764:	jge    0x404762
  404766:	cwde   
  404767:	adc    dl,BYTE PTR [eax]
  404769:	add    BYTE PTR [ebx+0x72],bh
  40476c:	(bad)  
  40476d:	jne    0x40477b
  40476f:	mov    dl,0x75
  404771:	clc    
  404772:	add    BYTE PTR [esi+eiz*8-0x3fe20001],cl
  404779:	jne    0x4047d4
  40477b:	mov    cl,0x75
  40477d:	adc    bh,ch
  40477f:	sub    edi,esp
  404781:	inc    DWORD PTR [ebp+0x5075ffaa]
  404787:	mov    edx,0xb20fff4f
  40478c:	lea    eax,[ebp+0x18]
  40478f:	inc    ebx
  404790:	call   0xfff28375
  404795:	push   DWORD PTR [ecx]
  404797:	mov    al,0xf
  404799:	call   0xffe28866
  40479e:	call   0x4056dc
  4047a3:	add    BYTE PTR [edx+eax*1-0x51],ah
  4047a7:	sub    ebp,0xffffff8b
  4047aa:	mov    eax,ds:0xb1132d75
  4047af:	loop   0x4047a7
  4047b1:	jbe    0x40473e
  4047b3:	inc    ebp
  4047b4:	cmp    eax,0x310c1efa
  4047b9:	out    dx,eax
  4047ba:	dec    eax
  4047bb:	jmp    DWORD PTR [edi+ebp*2-0x55]
  4047bf:	pop    edx
  4047c0:	rcl    DWORD PTR [esi-0x5f],cl
  4047c3:	or     esi,ecx
  4047c5:	inc    edi
  4047c6:	aad    0x8c
  4047c8:	ins    BYTE PTR es:[edi],dx
  4047c9:	retf   
  4047ca:	xor    al,0xff
  4047cc:	inc    esp
  4047cd:	outs   dx,DWORD PTR ds:[esi]
  4047ce:	stos   DWORD PTR es:[edi],eax
  4047cf:	adc    edx,edx
  4047d1:	mov    dh,0xa1
  4047d3:	or     esi,DWORD PTR [ecx+0x27]
  4047d6:	in     eax,0x80
  4047d8:	and    al,0xa7
  4047da:	add    al,0x0
  4047dc:	inc    ecx
  4047dd:	jnp    0x4047f3
  4047df:	adc    DWORD PTR [esi+0x4fef390],edx
  4047e5:	pop    fs
  4047e7:	jne    0x404772
  4047e9:	push   es
  4047ea:	pop    ss
  4047eb:	or     BYTE PTR [ecx+0x76ffa210],cl
  4047f1:	or     BYTE PTR [edi-0x10],al
  4047f4:	add    ebx,esp
  4047f6:	and    ebx,esp
  4047f8:	data16 out 0xa0,al
  4047fb:	jne    0x40482a
  4047fd:	ror    DWORD PTR [eax-0x23],cl
  404800:	push   esi
  404801:	(bad)  
  404802:	retf   0x3dc2
  404805:	jnp    0x40483d
  404807:	mov    eax,DWORD PTR [eax]
  404809:	add    BYTE PTR [ebp-0x6],dl
  40480c:	(bad)  
  40480d:	lock loop 0x404821
  404810:	mov    ebp,0xf113bcff
  404815:	stos   DWORD PTR es:[edi],eax
  404816:	mov    eax,0xb8a11e71
  40481b:	(bad)  
  40481c:	loopne 0x4047a2
  40481e:	pushf  
  40481f:	sbb    al,0xe9
  404821:	pop    ss
  404822:	outs   dx,DWORD PTR ds:[esi]
  404823:	lea    edi,[ebx+ecx*1+0x19]
  404827:	xchg   DWORD PTR [eax],ecx
  404829:	mov    eax,ds:0x18291906
  40482e:	inc    ebx
  40482f:	lahf   
  404830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404831:	xchg   ebx,eax
  404832:	popa   
  404833:	lea    ebx,[esp+ecx*1-0x27]
  404837:	mov    edi,0x18e6a0cb
  40483c:	test   eax,0x4c931317
  404841:	mov    al,ds:0x3d91431
  404846:	inc    edx
  404847:	and    al,0xbe
  404849:	push   ss
  40484a:	lds    ecx,FWORD PTR [esp+edi*1-0x38b33664]
  404851:	mov    al,ds:0x17a918b6
  404856:	xor    cl,dl
  404858:	imul   eax,DWORD PTR [esi-0x5f],0xffffffe3
  40485c:	cmp    ch,0x93
  40485f:	mov    WORD PTR [esi-0x6ee3e360],cs
  404865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404866:	ins    DWORD PTR es:[edi],dx
  404867:	mov    WORD PTR [esi-0x74],?
  40486a:	jb     0x404854
  40486c:	lahf   
  40486d:	lds    eax,FWORD PTR [eax]
  40486f:	add    BYTE PTR ds:0x858d1414,dh
  404875:	xchg   edx,eax
  404876:	sub    eax,0x5e8c6f57
  40487b:	enter  0xcbac,0x57
  40487f:	mov    al,ds:0x3e9135e
  404884:	xor    DWORD PTR [ecx+0x543a0fac],ebx
  40488a:	mov    ch,0x6
  40488c:	mov    cl,0x4b
  40488e:	add    cl,ch
  404890:	daa    
  404891:	pop    ss
  404892:	jmp    0x547c48
  404897:	es inc edi
  404899:	sbb    al,ch
  40489b:	dec    eax
  40489c:	(bad)  [ebx+0x1f2e2ff]
  4048a2:	jno    0xe9818138
  4048a8:	rol    DWORD PTR [ecx],1
  4048aa:	or     al,0x11
  4048ac:	adc    BYTE PTR [edi+edi*8-0xa],ch
  4048b0:	retf   0x6819
  4048b3:	sub    al,BYTE PTR [esi]
  4048b5:	aad    0xff
  4048b7:	in     eax,0x48
  4048b9:	sbb    al,ch
  4048bb:	push   cs
  4048bc:	lea    ecx,[ebx-0x33579f01]
  4048c2:	dec    dh
  4048c4:	mov    dh,0xfc
  4048c6:	cmp    eax,0x8d1432e8
  4048cb:	fs repz mov bh,bh
  4048cf:	mov    dh,0x5
  4048d1:	jl     0x40487a
  4048d3:	lea    eax,[eax]
  4048d5:	add    BYTE PTR [esi+0x736c8d8b],dl
  4048db:	mov    bh,bh
  4048dd:	sahf   
  4048de:	pop    ebp
  4048df:	mov    esi,DWORD PTR [ebp-0x7440af]
  4048e5:	adc    edx,0xbde900b9
  4048eb:	xchg   ecx,eax
  4048ec:	mov    esp,0x408ba67f
  4048f1:	out    0xb6,al
  4048f3:	cs add ecx,ebp
  4048f6:	xor    bl,BYTE PTR [ecx-0x7430d46b]
  4048fc:	call   DWORD PTR [esi+0x33]
  4048ff:	and    al,0x0
  404901:	jmp    0x6ac46438
  404906:	sub    eax,0xc5000014
  40490b:	aad    0x2b
  40490d:	push   eax
  40490e:	pusha  
  40490f:	call   0xbf888a3f
  404914:	mov    esp,0xb1748ad
  404919:	ror    ch,0x1b
  40491c:	jmp    0x5761ed
  404921:	lea    ebx,[ebp+0x27fffe56]
  404927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404928:	inc    edx
  404929:	sub    al,0xa8
  40492b:	ds mov ebx,0xe816d92c
  404931:	lahf   
  404932:	jne    0x404944
  404934:	add    BYTE PTR [ebx],cl
  404936:	dec    eax
  404937:	sub    eax,0xe905
  40493c:	(bad)  
  40493d:	push   ss
  40493e:	add    BYTE PTR [eax],al
  404940:	pop    es
  404941:	sub    al,0xc
  404943:	call   0x3ffa4d
  404948:	rcl    DWORD PTR [esi+0x75],cl
  40494b:	punpcklbw mm4,DWORD PTR [ebp+0x28]
  40494f:	inc    ecx
  404950:	fsubr  DWORD PTR [ecx+0xcf00c75]
  404956:	(bad)  
  404958:	xchg   DWORD PTR [ebp-0x566795f6],edi
  40495e:	jne    0x40496c
  404960:	rcr    BYTE PTR [eax-0x5c380021],0x95
  404967:	ret    0xa9a6
  40496a:	dec    DWORD PTR [ebp+0x5051842a]
  404970:	mov    al,ds:0x7ffdfc4
  404975:	inc    edi
  404976:	push   DWORD PTR [ebp+0x60]
  404979:	test   eax,0x2bd71475
  40497e:	adc    BYTE PTR [eax+0x7],dl
  404981:	sub    al,0x8
  404983:	call   0xffdd36b9
  404988:	push   esi
  404989:	aam    0xc5
  40498b:	fisttp DWORD PTR [esi-0x2f]
  40498e:	test   eax,0xefbeb460
  404993:	mov    BYTE PTR [eax+ecx*1-0x2c90063],dh
  40499a:	pop    ds
  40499b:	adc    BYTE PTR [ecx],dh
  40499d:	test   al,0x1
  40499f:	jmp    0x4049a1
  4049a1:	add    BYTE PTR [ebx+0x2a],al
  4049a4:	sbb    BYTE PTR [eax],dl
  4049a6:	push   ds
  4049a7:	jmp    0x1b574802
  4049ac:	stos   DWORD PTR es:[edi],eax
  4049ad:	inc    edx
  4049ae:	fistp  QWORD PTR [ebx+0x3]
  4049b1:	or     esi,ecx
  4049b3:	(bad)  
  4049b4:	fbld   TBYTE PTR [edi-0x14]
  4049b7:	push   ebx
  4049b8:	inc    esp
  4049b9:	add    dh,dh
  4049bb:	add    BYTE PTR [edi],cl
  4049bd:	call   0xffdd9be7
  4049c2:	out    0xa0,al
  4049c4:	pop    eax
  4049c5:	(bad)  
  4049c6:	fisub  WORD PTR [edx+0x34]
  4049c9:	call   0xffde0423
  4049ce:	popa   
  4049cf:	(bad)  
  4049d0:	push   ds
  4049d1:	sbb    BYTE PTR [ecx],dh
  4049d3:	aas    
  4049d4:	adc    bh,bh
  4049d6:	inc    esp
  4049d7:	addr16 xor edi,edi
  4049da:	cmp    al,0x73
  4049dc:	pushf  
  4049dd:	push   ebp
  4049de:	dec    ecx
  4049df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e0:	adc    bh,bh
  4049e2:	sbb    al,0x7f
  4049e4:	xor    edi,edi
  4049e6:	and    al,0x73
  4049e8:	stos   DWORD PTR es:[edi],eax
  4049e9:	push   esp
  4049ea:	xchg   esp,eax
  4049eb:	call   0xff9d:0xb614e89d
  4049f2:	mov    ah,0xf0
  4049f4:	sar    esi,0x7e
  4049f7:	add    dh,BYTE PTR [edi+edi*8]
  4049fa:	mov    esp,0x6eff9e37
  4049ff:	adc    al,0x51
  404a01:	mov    ecx,0x86e91495
  404a06:	add    BYTE PTR [eax],al
  404a08:	jno    0x404a23
  404a0a:	ins    BYTE PTR es:[edi],dx
  404a0b:	xchg   ebx,eax
  404a0c:	push   edi
  404a0d:	mov    DWORD PTR [esi-0x63],ecx
  404a10:	test   al,cl
  404a12:	inc    edi
  404a13:	popf   
  404a14:	inc    esi
  404a15:	jl     0x404a46
  404a17:	jo     0x404a4a
  404a19:	adc    al,0x36
  404a1b:	push   edi
  404a1c:	jns    0x4049a8
  404a1e:	cs popf 
  404a20:	sbb    DWORD PTR [edi],edi
  404a22:	inc    edx
  404a23:	popf   
  404a24:	es pop ebx
  404a26:	sub    edi,eax
  404a28:	push   ds
  404a29:	loopne 0x404a8c
  404a2b:	mov    al,0x8b
  404a2d:	adc    al,0xe
  404a2f:	pop    ss
  404a30:	and    eax,0x7f37c89
  404a35:	(bad)  
  404a36:	in     al,dx
  404a37:	pushf  
  404a38:	test   BYTE PTR [ecx+eax*1],bl
  404a3b:	(bad)  
  404a3d:	mov    dh,ch
  404a3f:	retf   0x23f3
  404a42:	jmp    0xdeb8047d
  404a47:	push   ss
  404a48:	sub    eax,0xd6bd327c
  404a4d:	mov    dl,ah
  404a4f:	ret    
  404a50:	inc    ebp
  404a51:	sub    al,dh
  404a53:	push   ss
  404a54:	and    esp,esp
  404a56:	rcl    BYTE PTR [ecx+0x33b688df],1
  404a5c:	mov    dh,0xfe
  404a5e:	rcr    BYTE PTR [esp+0x1c9d3920],1
  404a65:	sbb    al,0x91
  404a67:	pop    ebp
  404a68:	sahf   
  404a69:	mov    BYTE PTR [esi-0x74ffff55],dl
  404a6f:	ins    DWORD PTR es:[edi],dx
  404a70:	mov    ds,WORD PTR [eax+edi*2-0x23fc22ab]
  404a77:	pushf  
  404a78:	lea    ebx,[esp+eax*1+0x1f760020]
  404a7f:	and    al,0xff
  404a81:	hlt    
  404a82:	ds (bad) 
  404a84:	sbb    DWORD PTR [esi+0x3f],esp
  404a87:	sbb    al,0xe8
  404a89:	mov    al,ds:0x56ff88bd
  404a8e:	aas    
  404a8f:	and    bh,bh
  404a91:	aam    0x42
  404a93:	mov    DWORD PTR [ebp-0xb],esi
  404a96:	sbb    BYTE PTR ds:0x7c2ab4ff,dh
  404a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9d:	ss xchg ebp,eax
  404a9f:	mov    bh,bh
  404aa1:	mov    ah,0x26
  404aa3:	xchg   DWORD PTR [ebp-0x7],esi
  404aa6:	lds    eax,FWORD PTR [ecx]
  404aa8:	or     al,0x93
  404aaa:	push   ds
  404aab:	xchg   DWORD PTR [ebp-0x1f],esi
  404aae:	retf   0xffa3
  404ab1:	push   cs
  404ab2:	lods   eax,DWORD PTR ds:[esi]
  404ab3:	pop    ebp
  404ab4:	ret    0x32d9
  404ab7:	loope  0x404a43
  404ab9:	or     eax,0x9af050b1
  404abe:	cmp    al,0xdf
  404ac0:	sub    dl,BYTE PTR [edx]
  404ac2:	mov    ecx,0xfde60bd1
  404ac7:	xchg   esi,eax
  404ac8:	inc    ebp
  404ac9:	loope  0x404a85
  404acb:	add    DWORD PTR [eax],ecx
  404acd:	data16 jo 0x404a58
  404ad0:	(bad)  
  404ad1:	and    al,0x0
  404ad3:	add    BYTE PTR [ecx+0x32e90014],ah
  404ad9:	xchg   ebx,eax
  404ada:	cmp    eax,0xffd4cdff
  404adf:	call   0x2cc3330a
  404ae4:	cmp    eax,0xb83f7414
  404ae9:	shr    edi,1
  404aeb:	cmp    DWORD PTR [edi+0x15],ecx
  404aee:	push   0xffffffe9
  404af0:	inc    esp
  404af1:	adc    al,0x83
  404af3:	or     al,0x85
  404af5:	xchg   DWORD PTR [ebx+0x0],esi
  404af8:	xchg   ebp,eax
  404af9:	stos   BYTE PTR es:[edi],al
  404afa:	jne    0x404b0c
  404afc:	mov    ds:0x32006a0e,eax
  404b01:	adc    BYTE PTR [ebp-0xc01fbb],cl
  404b07:	adc    eax,0x40790e
  404b0c:	arpl   WORD PTR [ebx+0x74],dx
  404b0f:	das    
  404b10:	retf   
  404b11:	sub    al,0xf4
  404b13:	add    BYTE PTR [eax+edi*2-0x76],ah
  404b17:	inc    ebp
  404b18:	cmp    al,0x96
  404b1a:	dec    ebp
  404b1b:	lock xor ebx,DWORD PTR [eax]
  404b1e:	ja     0x404b37
  404b20:	mov    ebx,DWORD PTR [edi-0x689b8a75]
  404b26:	jge    0x404b30
  404b28:	mov    ds:0xae3efdd,eax
  404b2d:	sahf   
  404b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2f:	mov    eax,ebp
  404b31:	push   cs
  404b32:	push   DWORD PTR [ebp+0x28]
  404b35:	fwait
  404b36:	add    bh,bh
  404b38:	add    BYTE PTR [eax],al
  404b3a:	test   DWORD PTR [edi+0x106337e8],edx
  404b40:	add    BYTE PTR [ebx+0x5b5e4b4b],cl
  404b46:	adc    DWORD PTR [esi+0xc],ecx
  404b49:	add    BYTE PTR ds:0x9483ec97,ah
  404b4f:	sahf   
  404b50:	push   ebx
  404b51:	push   esi
  404b52:	pop    ss
  404b53:	cmp    BYTE PTR [esi+0x2f],bl
  404b56:	sbb    DWORD PTR [eax],edx
  404b58:	call   0x52eef6
  404b5d:	mov    edx,DWORD PTR [eax-0x3703baaf]
  404b63:	adc    al,BYTE PTR [eax]
  404b65:	add    BYTE PTR [ebx+0x403e7452],dl
  404b6b:	(bad)  
  404b6c:	cs inc ecx
  404b6e:	mov    BYTE PTR ds:0xd23145e8,bh
  404b74:	add    al,BYTE PTR [eax]
  404b76:	cmp    bh,BYTE PTR [ebp+0xcba2f0f]
  404b7c:	sub    ebp,DWORD PTR [ebx+0x4e]
  404b7f:	cmp    al,0x4
  404b81:	push   ebx
  404b82:	mov    eax,ecx
  404b84:	outs   dx,BYTE PTR ds:[esi]
  404b85:	add    BYTE PTR [ecx],dh
  404b87:	jb     0x404b4c
  404b89:	je     0x404bd2
  404b8b:	add    bl,BYTE PTR [ebx+0x32e8f48d]
  404b91:	call   0x43ddaa
  404b96:	loope  0x404b6d
  404b98:	mov    cl,0x83
  404b9a:	(bad)  
  404b9b:	rol    BYTE PTR [edx],1
  404b9d:	je     0x404b9f
  404b9f:	add    BYTE PTR [ebx],ch
  404ba1:	xchg   ebp,eax
  404ba2:	add    al,0x0
  404ba4:	xor    DWORD PTR [ebp+0x3a],edi
  404ba7:	pop    esi
  404ba8:	mov    dh,BYTE PTR [esi+eax*8]
  404bab:	mov    eax,0x37b31
  404bb0:	jle    0x404b77
  404bb2:	ds leave 
  404bb4:	repnz enter 0xec8e,0xb2
  404bb9:	das    
  404bba:	xchg   ebx,eax
  404bbb:	add    DWORD PTR [ebp+ecx*8-0x18],0x40
  404bc0:	xor    DWORD PTR [ebx+0xf],edi
  404bc3:	adc    dh,BYTE PTR [edx+0x702ec5c0]
  404bc9:	jnp    0x404bce
  404bcb:	je     0x404c05
  404bcd:	cli    
  404bce:	(bad)  
  404bcf:	lds    ecx,FWORD PTR [edi]
  404bd1:	cmp    al,0x4
  404bd3:	add    BYTE PTR [esi+esi*2+0x5b],bl
  404bd7:	add    DWORD PTR [ecx],esi
  404bd9:	jnp    0x404bde
  404bdb:	leave  
  404bdc:	repnz add BYTE PTR [edi],bh
  404bdf:	cli    
  404be0:	idiv   DWORD PTR [ebx+0x3]
  404be3:	(bad)  
  404be4:	jno    0x404c62
  404be6:	add    eax,esi
  404be8:	icebp  
  404be9:	js     0x404bee
  404beb:	(bad)  
  404bec:	icebp  
  404bed:	adc    ebp,edx
  404bef:	add    esi,DWORD PTR [edi-0x2c]
  404bf2:	in     al,0x3
  404bf4:	outs   dx,DWORD PTR ds:[esi]
  404bf5:	aam    0xeb
  404bf7:	(bad)  
  404bf8:	mov    ebp,0x1b3494cf
  404bfd:	adc    al,0x13
  404bff:	add    al,0xb
  404c01:	adc    al,0x13
  404c03:	add    al,0x0
  404c05:	add    BYTE PTR [ebx],cl
  404c07:	adc    al,0x3
  404c09:	add    al,0xd9
  404c0b:	xor    ebp,ebx
  404c0d:	add    esi,DWORD PTR [ecx]
  404c0f:	cli    
  404c10:	or     BYTE PTR [esi],ch
  404c12:	xor    edx,DWORD PTR [edi-0x7afe625c]
  404c18:	cld    
  404c19:	pop    ecx
  404c1a:	pop    ds
  404c1b:	shr    eax,cl
  404c1d:	or     al,0x71
  404c1f:	(bad)  
  404c20:	jmp    0x3193:0xa44d72ca
  404c27:	adc    al,0xe9
  404c29:	add    edi,DWORD PTR [esi+ecx*8-0xd9cbc8]
  404c30:	sbb    al,0x2e
  404c32:	xor    DWORD PTR [ebp-0x2cb83a0c],eax
  404c38:	call   0xe63f3d49
  404c3d:	shr    BYTE PTR [esp+eax*4-0x17],0x3
  404c42:	xor    DWORD PTR [esi+edi*8],edx
  404c45:	push   cs
  404c46:	std    
  404c47:	test   ah,bl
  404c49:	rcr    DWORD PTR [edi],0xd3
  404c4c:	call   0xb0c4b8dd
  404c51:	les    eax,FWORD PTR [ecx+ebx*4-0x64127b33]
  404c58:	fs ds mov ecx,0x17f640e3
  404c5f:	shr    eax,cl
  404c61:	stos   DWORD PTR es:[edi],eax
  404c62:	jo     0x404cd2
  404c64:	mov    esi,0x196198
  404c69:	test   eax,0xe3e0000
  404c6e:	sub    DWORD PTR [esi*4-0x49ed88e1],0xffffffce
  404c76:	out    dx,eax
  404c77:	cmp    ebp,eax
  404c79:	and    eax,0x8f32e9ab
  404c7e:	rcl    BYTE PTR [ecx],0x4b
  404c81:	adc    eax,0xe3982cb6
  404c86:	push   cs
  404c87:	aaa    
  404c88:	aaa    
  404c89:	xchg   BYTE PTR [eax-0x1a],dl
  404c8c:	add    bh,cl
  404c8e:	cld    
  404c8f:	sbb    DWORD PTR [eax],edi
  404c91:	mov    esi,0x15226545
  404c96:	mov    dh,0xa4
  404c98:	mov    ch,0xe3
  404c9a:	push   cs
  404c9b:	lahf   
  404c9c:	jp     0xcf212af2
  404ca2:	clc    
  404ca3:	cdq    
  404ca4:	sub    DWORD PTR [esi+0x15024145],edi
  404caa:	mov    bh,0xac
  404cac:	shl    ah,0xe
  404caf:	jbe    0x404d18
  404cb1:	mov    BYTE PTR [eax+0x26],dl
  404cb4:	das    
  404cb5:	test   BYTE PTR [eax-0xa],ch
  404cb8:	or     ebp,edx
  404cba:	jmp    DWORD PTR [ebx+0x4f]
  404cbd:	nop
  404cbe:	push   eax
  404cbf:	add    ecx,ebx
  404cc1:	scas   al,BYTE PTR es:[edi]
  404cc2:	add    cl,ch
  404cc4:	mov    ch,0x58
  404cc6:	xor    al,0x6c
  404cc8:	aaa    
  404cc9:	nop
  404cca:	push   eax
  404ccb:	add    DWORD PTR [ecx-0x53],ebp
  404cce:	add    cl,ch
  404cd0:	add    BYTE PTR [eax],al
  404cd2:	and    dl,BYTE PTR [ecx-0x13da8abb]
  404cd8:	adc    DWORD PTR [esi],ecx
  404cda:	ins    BYTE PTR es:[edi],dx
  404cdb:	adc    al,0xe8
  404cdd:	cwde   
  404cde:	xchg   ecx,eax
  404cdf:	cmp    edi,0xffffffc1
  404ce2:	inc    esi
  404ce3:	pop    esp
  404ce4:	inc    DWORD PTR [eax]
  404ce6:	not    DWORD PTR [ecx-0x3d]
  404ce9:	push   ebp
  404cea:	inc    ebx
  404ceb:	lods   al,BYTE PTR ds:[esi]
  404cec:	add    esp,0xffffab34
  404cf2:	dec    ebx
  404cf3:	xor    ebp,DWORD PTR [edx+0x0]
  404cf6:	inc    edx
  404cf7:	sbb    bh,bh
  404cf9:	jne    0x404c9b
  404cfb:	scas   eax,DWORD PTR es:[edi]
  404cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cfd:	aad    0xa7
  404cff:	stos   DWORD PTR es:[edi],eax
  404d00:	mov    DWORD PTR [ebp-0x4c],eax
  404d03:	xor    BYTE PTR [ecx],al
  404d05:	add    BYTE PTR [edi-0x7f8a0116],ah
  404d0b:	scas   eax,DWORD PTR es:[edi]
  404d0c:	out    0xd4,eax
  404d0e:	out    0xaa,eax
  404d10:	push   0x17589c
  404d15:	(bad)  
  404d16:	int    0x37
  404d18:	(bad)  
  404d19:	push   edi
  404d1b:	inc    edi
  404d1c:	call   0xffeb4d9c
  404d21:	(bad)  
  404d22:	int    0x37
  404d24:	(bad)  
  404d25:	push   edi
  404d27:	sti    
  404d28:	(bad)  
  404d29:	dec    DWORD PTR [eax-0x74]
  404d2c:	test   DWORD PTR [eax+0x67],esp
  404d2f:	stos   DWORD PTR es:[edi],eax
  404d30:	call   DWORD PTR [eax+0x70]
  404d33:	leave  
  404d34:	test   eax,0x8000000
  404d39:	outs   dx,BYTE PTR ds:[esi]
  404d3a:	enter  0x5a2b,0x8d
  404d3e:	mov    ebp,0xffab2774
  404d43:	jmp    0x404d50
  404d45:	xchg   edi,eax
  404d46:	aas    
  404d47:	add    BYTE PTR [ebp+0x14],bh
  404d4a:	mov    edx,0x170801
  404d4f:	or     ecx,DWORD PTR [edx+0x24]
  404d52:	add    eax,esi
  404d54:	iret   
  404d55:	push   ss
  404d56:	inc    edi
  404d57:	inc    ecx
  404d58:	dec    ecx
  404d59:	mov    al,ds:0x16c80080
  404d5e:	jb     0x404d45
  404d60:	xor    DWORD PTR [esi-0x3d],esi
  404d63:	je     0x404d84
  404d65:	aad    0x77
  404d67:	add    BYTE PTR [ecx],dh
  404d69:	ins    DWORD PTR es:[edi],dx
  404d6a:	mov    BYTE PTR [ebp-0x693daf],al
  404d70:	add    edx,ecx
  404d72:	adc    BYTE PTR [eax],cl
  404d74:	cdq    
  404d75:	or     DWORD PTR [edi+0x7a59eff],ebp
  404d7b:	push   0x31
  404d7d:	daa    
  404d7e:	add    al,0xff
  404d80:	add    al,0x75
  404d82:	stos   DWORD PTR es:[edi],eax
  404d83:	test   eax,0xe896915d
  404d88:	ins    BYTE PTR es:[edi],dx
  404d89:	xchg   edi,eax
  404d8a:	xchg   esi,eax
  404d8b:	jmp    ecx
  404d8d:	add    DWORD PTR [eax],edx
  404d8f:	or     BYTE PTR [ecx+0xf],bl
  404d92:	mov    al,0xff
  404d94:	data16 adc al,0x4
  404d97:	add    al,0x31
  404d99:	ins    DWORD PTR es:[edi],dx
  404d9a:	stos   DWORD PTR es:[edi],eax
  404d9b:	jmp    0xe1be4da0
  404da0:	xchg   ebp,eax
  404da1:	mov    DWORD PTR [eax+ecx*8+0x5446ff96],esi
  404da8:	xchg   esi,eax
  404da9:	add    esi,DWORD PTR [ecx]
  404dab:	ins    DWORD PTR es:[edi],dx
  404dac:	xchg   esi,eax
  404dad:	mov    ch,0xd5
  404daf:	inc    ecx
  404db0:	xchg   esi,eax
  404db1:	call   FWORD PTR [ecx+0x26fff36d]
  404db7:	push   esp
  404db8:	add    eax,DWORD PTR [ecx+esi*1]
  404dbb:	imul   ebp,DWORD PTR [ebx+0x36bc852],0x50
  404dc2:	push   cs
  404dc3:	loope  0x404dfb
  404dc5:	inc    DWORD PTR [esi]
  404dc7:	adc    edx,DWORD PTR [esi+0x21232975]
  404dcd:	aam    0xf6
  404dcf:	sub    BYTE PTR [edx],0xff
  404dd2:	xor    ch,BYTE PTR [ebx+0x3]
  404dd5:	call   FWORD PTR [edi+ecx*4+0x14deff96]
  404ddc:	push   ecx
  404ddd:	add    eax,DWORD PTR [ecx+0x14]
  404de0:	jmp    0xe9587f10
  404de5:	add    ebx,ecx
  404de7:	sub    eax,DWORD PTR [eax-0x3a1bcefc]
  404ded:	dec    edi
  404dee:	push   ebp
  404def:	cmp    DWORD PTR [esi-0x1ef8516b],0xae6868ab
  404df9:	xchg   ebp,eax
  404dfa:	mov    DWORD PTR [edi-0x5c],edx
  404dfd:	xchg   ebp,eax
  404dfe:	xchg   esi,eax
  404dff:	in     al,0x9d
  404e01:	sldt   WORD PTR [eax]
  404e04:	cmp    DWORD PTR [esp+ebx*4-0x4f],ebp
  404e08:	xchg   BYTE PTR [ecx-0x7e80cc7f],al
  404e0e:	xchg   BYTE PTR [edi-0x6a822354],al
  404e14:	outs   dx,BYTE PTR ds:[esi]
  404e15:	in     al,0x0
  404e17:	repnz pop ss
  404e19:	shr    eax,cl
  404e1b:	stos   DWORD PTR es:[edi],eax
  404e1c:	les    edi,FWORD PTR [eax+0x66]
  404e1f:	xchg   ebp,eax
  404e20:	test   al,0x97
  404e22:	mov    ch,0x94
  404e24:	dec    esi
  404e25:	sub    DWORD PTR [edx+0x57],0x954e80dd
  404e2c:	xor    DWORD PTR [eax],ecx
  404e2e:	lods   al,BYTE PTR ds:[esi]
  404e2f:	xor    BYTE PTR [esp+ebx*8+0x3d],0x95
  404e34:	sub    BYTE PTR cs:[ebx-0x6e694c29],bh
  404e3b:	xchg   esp,eax
  404e3c:	push   ds
  404e3d:	sub    ebp,0x1ddbdc94
  404e43:	xchg   ebp,eax
  404e44:	push   cs
  404e45:	sbb    DWORD PTR [ebx+ecx*1-0x6ac539e7],0x3c5494fe
  404e50:	test   BYTE PTR [eax-0x7ea70002],0x0
  404e57:	div    BYTE PTR [edi]
  404e59:	or     al,0xe8
  404e5b:	dec    eax
  404e5c:	mov    al,ds:0x67e6ff80
  404e61:	fdiv   st(6),st
  404e63:	fisub  WORD PTR [ebp+0x3db580]
  404e69:	add    BYTE PTR [eax+eax*4+0xc2fceff],bl
  404e70:	call   0xffc0d000
  404e75:	shl    BYTE PTR [esi],cl
  404e77:	out    dx,al
  404e78:	inc    DWORD PTR [edx+0x2d]
  404e7b:	xor    DWORD PTR [ebp-0x1f],0xa6d3c6ca
  404e82:	mov    ebp,0xa435b580
  404e87:	cmp    bh,0x81
  404e8a:	fldcw  WORD PTR [ecx-0x1]
  404e8d:	mov    fs,WORD PTR [ebp-0x6279a33a]
  404e93:	sub    al,0x89
  404e96:	pushf  
  404e97:	cmp    bh,0xc2
  404e9a:	test   eax,0xf3be5deb
  404e9f:	adc    ebp,eax
  404ea1:	ror    edx,1
  404ea3:	adc    eax,DWORD PTR [eax]
  404ea5:	jo     0x404e76
  404ea7:	das    
  404ea8:	call   DWORD PTR [esi-0x63]
  404eab:	xchg   esp,eax
  404eac:	mov    ebp,0xff80a5fd
  404eb1:	jmp    0xb3a870dc
  404eb6:	adc    eax,0x7735ffd5
  404ebb:	xor    bh,bh
  404ebd:	lds    ebp,FWORD PTR cs:[ebp+ecx*1+0x51]
  404ec2:	xor    dl,BYTE PTR [ebx+ecx*1]
  404ec5:	sub    DWORD PTR [esi],edi
  404ec7:	or     cl,BYTE PTR [ebp-0x811d84]
  404ecd:	push   cs
  404ece:	add    BYTE PTR [eax],al
  404ed0:	inc    eax
  404ed1:	jg     0x404ea3
  404ed3:	add    bl,cl
  404ed5:	or     al,0xdb
  404ed7:	jne    0x404eb5
  404ed9:	xchg   esi,eax
  404eda:	test   DWORD PTR [eax],esi
  404edc:	fbld   TBYTE PTR [ebx+0x663050ff]
  404ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee3:	add    al,cl
  404ee5:	and    DWORD PTR [ecx*4-0x197ab],esp
  404eec:	fisttp WORD PTR [eax-0x1]
  404eef:	jne    0x404ec1
  404ef1:	fwait
  404ef2:	inc    ebp
  404ef3:	shr    edi,cl
  404ef5:	mov    ds:0xa3ec75ff,eax
  404efa:	jne    0x404f04
  404efc:	jo     0x404e8f
  404efe:	sar    edi,cl
  404f00:	iret   
  404f01:	inc    ebx
  404f02:	pop    ebx
  404f03:	leave  
  404f04:	retf   0xc
  404f07:	push   ebp
  404f08:	add    esi,DWORD PTR [ecx+eax*4-0x644f3c]
  404f0f:	(bad)  
  404f10:	(bad)  
  404f12:	sti    
  404f13:	push   eax
  404f14:	scas   eax,DWORD PTR es:[edi]
  404f15:	sbb    eax,0x2fa5ff0c
  404f1a:	sub    DWORD PTR [ecx+0x58],eax
  404f1d:	fwait
  404f1e:	mov    edx,0xb1348a8
  404f23:	rcr    BYTE PTR [edi-0x74],0xe7
  404f27:	add    BYTE PTR [eax+0x13],bl
  404f2a:	mov    DWORD PTR [ebp-0x20],0x48000017
  404f31:	dec    edx
  404f32:	inc    ebp
  404f33:	hlt    
  404f34:	add    BYTE PTR [eax],al
  404f36:	out    dx,eax
  404f37:	or     al,BYTE PTR [eax]
  404f39:	add    BYTE PTR [edx],al
  404f3b:	adc    ebp,DWORD PTR [edx+0x0]
  404f3e:	lea    ecx,[ebp-0x5cb00814]
  404f44:	push   eax
  404f45:	push   0x8
  404f47:	xchg   esp,eax
  404f48:	inc    ebp
  404f49:	hlt    
  404f4a:	enter  0x8593,0xf4
  404f4e:	xor    DWORD PTR [esi],ebx
  404f50:	xchg   ebx,eax
  404f51:	jmp    DWORD PTR [ecx+0xe]
  404f54:	sbb    eax,edi
  404f56:	idiv   bh
  404f58:	mov    gs,eax
  404f5a:	enter  0x3e4,0x0
  404f5e:	cmp    ch,BYTE PTR ds:0xd7c80518
  404f64:	add    eax,DWORD PTR [eax]
  404f66:	xor    edx,ebp
  404f68:	dec    edi
  404f69:	in     al,dx
  404f6a:	(bad)  
  404f6b:	pop    ebp
  404f6c:	xchg   edx,eax
  404f6d:	add    DWORD PTR ds:0xcdbd8677,edi
  404f73:	gs xchg edx,eax
  404f75:	jmp    FWORD PTR [esi]
  404f77:	inc    ecx
  404f78:	or     edi,edi
  404f7a:	hlt    
  404f7b:	push   esp
  404f7c:	sahf   
  404f7d:	mov    dh,0x19
  404f7f:	or     al,0xd4
  404f81:	inc    eax
  404f82:	xor    eax,esp
  404f84:	xchg   esp,esi
  404f86:	sahf   
  404f87:	mov    ch,0x92
  404f89:	push   eax
  404f8a:	cdq    
  404f8b:	lock pop edx
  404f8d:	add    BYTE PTR [ecx],dh
  404f8f:	jb     0x404f54
  404f91:	je     0x404f93
  404f93:	loopne 0x404f1c
  404f95:	call   0x50d2e518
  404f9a:	add    BYTE PTR [eax],al
  404f9c:	mov    esp,0x66f796f7
  404fa1:	add    eax,0x60e4ff33
  404fa6:	xchg   edx,eax
  404fa7:	xor    eax,0x4523f5
  404fac:	pop    ecx
  404fad:	in     al,0xaa
  404faf:	inc    DWORD PTR [esi+0x71]
  404fb2:	ret    
  404fb3:	je     0x404f95
  404fb5:	repz xchg eax,esi
  404fb8:	ds aad 0x91
  404fbb:	push   0xbea26b30
  404fc0:	es sar ebx,0xe7
  404fc4:	jae    0x404fdf
  404fc6:	xchg   edx,eax
  404fc7:	push   DWORD PTR [edx+0x69f6414]
  404fcd:	jle    0x404fed
  404fcf:	add    al,0x7c
  404fd1:	adc    BYTE PTR [ebx-0x1ef801fd],al
  404fd7:	fwait
  404fd8:	inc    esi
  404fd9:	bound  eax,QWORD PTR [esi]
  404fdb:	xchg   edx,eax
  404fdc:	fimul  DWORD PTR [edx]
  404fde:	xchg   ebx,eax
  404fdf:	add    al,0xe6
  404fe1:	pop    es
  404fe2:	loope  0x404f7f
  404fe4:	adc    ah,BYTE PTR [edx-0x12]
  404fe7:	xchg   ecx,eax
  404fe8:	(bad)  
  404fe9:	(bad)  
  404fea:	rcr    DWORD PTR [ecx+0x57de7dce],1
  404ff0:	rol    DWORD PTR [ebp+0x7be91d6],0xe1
  404ff7:	fwait
  404ff8:	ins    BYTE PTR es:[edi],dx
  404ff9:	(bad)  
  404ffa:	(bad)  
  404ffb:	xchg   ecx,eax
  404ffc:	scas   al,BYTE PTR es:[edi]
  404ffd:	(bad)  
  404ffe:	mov    ecx,0xa6000099
  405003:	jge    0x404fc6
  405005:	or     eax,0x91ae7d84
  40500a:	in     al,dx
  40500b:	jnp    0x404f9d
  40500d:	fmul   QWORD PTR [edi-0x36e6183]
  405013:	jg     0x404f96
  405015:	(bad)  
  405016:	(bad)  
  405017:	adc    al,0xe9
  405019:	mov    edx,0x36e90c73
  40501e:	mov    edx,0x4dc86870
  405023:	test   DWORD PTR [esi-0x6f],esi
  405026:	lods   al,BYTE PTR ds:[esi]
  405027:	xlat   BYTE PTR ds:[ebx]
  405028:	ins    BYTE PTR es:[edi],dx
  405029:	xor    al,0x56
  40502b:	pop    es
  40502c:	cmc    
  40502d:	nop
  40502e:	add    al,0xe0
  405030:	cmovae esi,DWORD PTR [ecx]
  405033:	ins    BYTE PTR es:[edi],dx
  405034:	test   DWORD PTR [ecx+0x31],ebp
  405037:	adc    al,0xe2
  405039:	ret    
  40503a:	es xchg edi,eax
  40503c:	call   0x2947:0x26143102
  405043:	adc    al,0x0
  405045:	jmp    0xa507647c
  40504a:	mov    esi,0x32e9077c
  40504f:	jmp    0x82ff:0xea3292ff
  405056:	xor    cl,BYTE PTR [edi-0x70c2eabb]
  40505c:	test   ebp,edi
  40505e:	leave  
  40505f:	jl     0x405060
  405061:	cdq    
  405062:	rol    DWORD PTR [esi],0xf8
  405065:	test   BYTE PTR [eax],0x0
  405068:	inc    edi
  405069:	sub    al,0x6f
  40506c:	dec    ecx
  40506d:	adc    al,0x0
  40506f:	repnz repnz pop es
  405072:	add    eax,0x13c8d0
  405077:	jmp    0x28689f96
  40507c:	sub    eax,0xcaf5757d
  405081:	mov    dl,0xd8
  405083:	mov    esi,0x998ae3c1
  405088:	pop    ds
  405089:	xchg   edi,eax
  40508a:	hlt    
  40508b:	mov    dh,0xc1
  40508d:	jl     0x4050df
  40508f:	cmp    ebp,DWORD PTR [ebp-0x5e61275e]
  405095:	mov    al,BYTE PTR [ebp-0x836667]
  40509b:	or     ecx,0x4c86ff67
  4050a1:	adc    al,0x68
  4050a3:	repz adc bl,0xff
  4050a7:	jne    0x4050b0
  4050a9:	test   bh,dh
  4050ab:	outs   dx,BYTE PTR ds:[esi]
  4050ac:	sar    DWORD PTR [ebp+esi*1-0x3b],0x6b
  4050b1:	sar    edi,cl
  4050b3:	push   eax
  4050b4:	cdq    
  4050b5:	call   DWORD PTR fs:[esi-0x45]
  4050b9:	xchg   esi,eax
  4050ba:	in     al,0x56
  4050bc:	mov    eax,ds:0x18006a7c
  4050c1:	and    BYTE PTR [ebx],dl
  4050c3:	xor    cl,bl
  4050c5:	pop    ss
  4050c6:	push   DWORD PTR [ebp-0x63a8]
  4050cc:	add    BYTE PTR [eax],al
  4050ce:	inc    edi
  4050cf:	bound  ebx,QWORD PTR [ebx+0x29]
  4050d2:	fst    DWORD PTR [edi]
  4050d4:	call   0xffe490a2
  4050d9:	mov    DWORD PTR [ebp+0x27fff79b],ecx
  4050df:	sbb    DWORD PTR [eax],eax
  4050e1:	push   0x4067d4
  4050e6:	out    0xe1,eax
  4050e8:	out    dx,eax
  4050e9:	mul    edi
  4050eb:	mov    edi,edi
  4050ed:	xor    eax,0x405ea4
  4050f2:	loopne 0x4050d3
  4050f4:	(bad)  
  4050f5:	jmp    edi
  4050f7:	stc    
  4050f8:	test   al,ch
  4050fa:	fisttp WORD PTR [ebx-0x535a7c01]
  405100:	idiv   edi
  405102:	ja     0x405114
  405104:	je     0x40514f
  405106:	sbb    esp,ebp
  405108:	jmp    0x405101
  40510a:	out    0x8b,eax
  40510c:	add    BYTE PTR [eax+ecx*2-0x69],dh
  405110:	mov    ebp,0xff8bafe8
  405115:	add    BYTE PTR [ebx+eiz*2],bl
  405118:	add    BYTE PTR [bx+si-0x4166],cl
  40511d:	call   FWORD PTR ds:0xc8eee778
  405123:	mov    edi,edi
  405125:	call   FWORD PTR ds:0xe7fff7b4
  40512b:	mov    dh,BYTE PTR [ebp+0x8]
  40512e:	mov    al,0xd6
  405130:	sar    bh,1
  405132:	add    BYTE PTR [eax],al
  405134:	xlat   BYTE PTR ds:[ebx]
  405135:	mov    dh,BYTE PTR [ebp-0x752018]
  40513b:	push   DWORD PTR [ecx]
  40513d:	pop    eax
  40513e:	sti    
  40513f:	out    0xfd,eax
  405141:	cmp    ecx,DWORD PTR [edi-0x5807d101]
  405147:	mul    DWORD PTR [esi]
  405149:	cmp    cl,BYTE PTR [edi-0x1a2ad68b]
  40514f:	rcl    BYTE PTR [esi],1
  405151:	sub    cl,BYTE PTR [edi-0x70e5ea4b]
  405157:	call   FWORD PTR [ecx]
  405159:	pop    ebp
  40515a:	mov    bh,0xff
  40515c:	(bad)  
  40515d:	and    DWORD PTR [ecx-0x14],ebx
  405160:	dec    BYTE PTR [ecx]
  405162:	(bad)
  405166:	(bad)  
  405167:	jmp    esi
  405169:	aas    
  40516a:	pushf  
  40516b:	neg    esi
  40516d:	sbb    DWORD PTR [ebx-0x719602e6],0x965c84ff
  405177:	inc    esi
  405179:	pop    ecx
  40517a:	sbb    BYTE PTR [eax],cl
  40517c:	leave  
  40517d:	xchg   DWORD PTR [ebp+0x5849b6ff],ecx
  405183:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405185:	push   ecx
  405186:	mov    gs,eax
  405188:	xor    BYTE PTR [ecx+0x279eff8e],ah
  40518e:	mov    ecx,gs
  405190:	aad    0xaa
  405192:	mov    ?,edi
  405194:	mov    ss,WORD PTR [edi]
  405196:	nop
  405197:	call   0xd33a519c
  40519c:	add    al,BYTE PTR [eax]
  40519e:	push   0xddfffbae
  4051a3:	cmc    
  4051a4:	sahf   
  4051a5:	xor    DWORD PTR [ebp-0x70],0x19
  4051a9:	add    bl,bl
  4051ab:	imul   ecx,DWORD PTR [esi-0xd6ad68b],0xffffffd0
  4051b2:	push   esi
  4051b3:	jmp    0x138d9733
  4051b8:	ror    DWORD PTR [ecx],1
  4051ba:	push   ss
  4051bb:	aad    0xe8
  4051bd:	mov    es,esp
  4051bf:	or     eax,DWORD PTR [ecx+0x27]
  4051c2:	aaa    
  4051c3:	jp     0x405213
  4051c5:	sbb    ecx,eax
  4051c7:	sub    DWORD PTR [eax-0xeffd9fd],ebp
  4051cd:	fwait
  4051ce:	xchg   BYTE PTR [edx+0x36],bh
  4051d1:	mov    cs,WORD PTR [ecx+0x3144febb]
  4051d7:	jns    0x405175
  4051d9:	sti    
  4051da:	push   cs
  4051db:	cmp    DWORD PTR [esi+ecx*4],ebx
  4051de:	(bad)  
  4051df:	in     al,dx
  4051e0:	pop    es
  4051e1:	fidiv  WORD PTR [ecx+0x14]
  4051e4:	push   cs
  4051e5:	sbb    BYTE PTR [ecx],bh
  4051e7:	ins    BYTE PTR es:[edi],dx
  4051e8:	(bad)  
  4051e9:	nop
  4051ea:	out    0x79,al
  4051ec:	(bad)  
  4051ed:	pop    ss
  4051ee:	fnstsw WORD PTR [ecx+0x7c]
  4051f1:	sti    
  4051f2:	into   
  4051f3:	and    DWORD PTR [eax],ebx
  4051f5:	mov    cs,esi
  4051f7:	dec    ebx
  4051f8:	stos   DWORD PTR es:[edi],eax
  4051f9:	or     BYTE PTR [ecx],dh
  4051fb:	fbstp  TBYTE PTR [ecx-0x60]
  4051fe:	add    BYTE PTR [eax],al
  405200:	dec    ecx
  405201:	adc    al,0xe9
  405203:	pushf  
  405204:	ja     0x40527f
  405206:	push   esp
  405207:	add    BYTE PTR [esi+0x159bf0ff],ch
  40520d:	jg     0x4051cd
  40520f:	lea    ebp,[eax+0x56]
  405212:	loope  0x405217
  405214:	cld    
  405215:	mov    WORD PTR [ebp-0x16f7f37f],?
  40521b:	cld    
  40521c:	mov    dl,0x36
  40521e:	call   0x1cb98326
  405223:	add    BYTE PTR [ecx+0x6e8daede],cl
  405229:	or     eax,0xec4117a9
  40522e:	stos   DWORD PTR es:[edi],eax
  40522f:	fdivr  st(1),st
  405231:	adc    eax,DWORD PTR [eax]
  405233:	jbe    0x405273
  405235:	or     al,ch
  405237:	and    al,BYTE PTR [ecx+edi*2+0x7ee70ff]
  40523e:	push   0xffffffe9
  405240:	sbb    dl,dl
  405242:	das    
  405243:	test   al,0x32
  405245:	in     al,dx
  405246:	push   eax
  405247:	sbb    DWORD PTR [edx+0x14],esi
  40524a:	(bad)  
  40524b:	cld    
  40524c:	push   esi
  40524d:	sub    eax,DWORD PTR [ecx-0x17]
  405250:	mov    edx,0xa436d5e1
  405255:	or     al,0xc0
  405257:	mov    ch,0x1c
  405259:	leave  
  40525a:	dec    edi
  40525b:	es push ds
  40525d:	or     al,ch
  40525f:	cs (bad) 
  405261:	js     0x405262
  405263:	mov    ecx,0x79420000
  405268:	jne    0x40524b
  40526a:	retf   0xffa2
  40526d:	push   es
  40526e:	mov    ah,0x6b
  405270:	and    DWORD PTR [edx],ebx
  405272:	lods   al,BYTE PTR ds:[esi]
  405273:	js     0x40525d
  405275:	aad    0xa1
  405277:	js     0x405278
  405279:	xor    DWORD PTR [edx],0xffffffec
  40527c:	inc    ebp
  40527d:	sbb    DWORD PTR [edx+0x14],esi
  405280:	push   0xffd3e538
  405285:	inc    eax
  405286:	xor    edx,DWORD PTR [eax+eax*1]
  405289:	imul   ecx,edx,0xb5c6d619
  40528f:	or     al,0xc0
  405291:	xor    eax,0xb64fc88f
  405296:	aas    
  405297:	or     al,ch
  405299:	push   esi
  40529a:	les    edi,FWORD PTR [eax-0x1]
  40529d:	cmp    DWORD PTR ds:0x9af17579,edi
  4052a3:	(bad)  
  4052a5:	xchg   esi,eax
  4052a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a7:	imul   ebp,ecx,0xffffffbb
  4052aa:	mov    ebp,0xb400e878
  4052af:	ret    0xffff
  4052b2:	inc    edx
  4052b3:	adc    BYTE PTR [eax+0x46],ch
  4052b6:	cwde   
  4052b7:	aad    0xff
  4052b9:	addr16 inc esp
  4052bb:	fs inc eax
  4052bd:	add    bh,cl
  4052bf:	popa   
  4052c0:	pop    ebx
  4052c1:	sub    DWORD PTR [ecx-0xa1a17ec],ecx
  4052c7:	xchg   edi,edi
  4052c9:	or     eax,DWORD PTR [eax]
  4052cb:	add    BYTE PTR [eax+0x1f],bl
  4052ce:	push   ds
  4052cf:	push   eax
  4052d0:	enter  0x7588,0xc
  4052d4:	sub    BYTE PTR [ecx],0xd6
  4052d7:	call   FWORD PTR [edi+0x43]
  4052da:	push   eax
  4052db:	inc    ebp
  4052dd:	jnp    0x4052c6
  4052df:	and    BYTE PTR [edi-0x78],cl
  4052e2:	(bad)  
  4052e3:	call   0x401840
  4052e8:	xor    ah,bl
  4052ea:	sar    edi,1
  4052ec:	aas    
  4052ed:	sbb    eax,0x63966800
  4052f2:	inc    eax
  4052f3:	add    al,al
  4052f5:	pop    ds
  4052f6:	xor    BYTE PTR [ecx-0x38],al
  4052f9:	sbb    eax,DWORD PTR [edx]
  4052fb:	add    al,bl
  4052fd:	xchg   ebx,eax
  4052fe:	call   0xffcbd8b0
  405303:	or     ecx,DWORD PTR [eax-0x7afe1dc]
  405309:	mov    dh,BYTE PTR [ebp+0xc]
  40530c:	jo     0x405380
  40530e:	aad    0xff
  405310:	outs   dx,DWORD PTR ds:[esi]
  405311:	inc    eax
  405312:	push   eax
  405313:	jmp    DWORD PTR [ebp+0x78]
  405316:	out    0xe8,eax
  405318:	fimul  WORD PTR [ebx-0x41bf1701]
  40531e:	(bad)  
  40531f:	jmp    DWORD PTR [eax-0x60002de1]
  405325:	sbb    BYTE PTR [esi],ah
  405327:	xor    BYTE PTR [ecx],dh
  405329:	sub    al,0x4
  40532b:	jmp    esp
  40532d:	pop    eax
  40532e:	fwait
  40532f:	add    eax,0x8e7f0000
  405334:	mov    edx,DWORD PTR [eax+0x1]
  405337:	not    BYTE PTR [eax]
  405339:	or     BYTE PTR [ecx-0x5a],cl
  40533c:	mov    bh,bh
  40533e:	dec    esi
  40533f:	xchg   ebp,eax
  405340:	xor    edx,edx
  405342:	inc    esi
  405343:	out    dx,al
  405344:	mov    dh,BYTE PTR [ebp+0x2d]
  405347:	in     eax,0x3a
  405349:	shl    BYTE PTR [esi],cl
  40534b:	fidivr WORD PTR [edx+eax*8-0x74cf92c7]
  405352:	adc    eax,0x8bf4bfea
  405357:	ins    DWORD PTR es:[edi],dx
  405358:	sbb    eax,0xfbb81602
  40535d:	out    0x80,eax
  40535f:	push   ss
  405360:	mov    edi,edi
  405362:	mov    eax,0x346887a7
  405367:	ins    BYTE PTR es:[edi],dx
  405368:	add    eax,DWORD PTR [eax]
  40536a:	or     DWORD PTR [edx-0xc11004b],ebp
  405370:	inc    eax
  405371:	clc    
  405372:	pop    ecx
  405373:	imul   eax,DWORD PTR [eax+eax*1],0xf8107631
  40537a:	leave  
  40537b:	xor    al,0x67
  40537d:	add    BYTE PTR [ecx],dh
  40537f:	jb     0x405344
  405381:	je     0x4053a0
  405383:	xor    BYTE PTR [eax],al
  405385:	add    DWORD PTR [ecx],esi
  405387:	ins    DWORD PTR es:[edi],dx
  405388:	adc    cl,BYTE PTR ds:0xff8bd7b6
  40538e:	and    al,0x75
  405390:	fwait
  405391:	mov    BYTE PTR [edi+0xeb8a4d],ah
  405397:	add    BYTE PTR [ecx],ch
  405399:	mov    dh,0x10
  40539b:	clc    
  40539c:	mov    eax,eax
  40539e:	mov    ah,0xff
  4053a0:	mov    ss,edx
  4053a2:	(bad)  
  4053a4:	in     eax,dx
  4053a5:	adc    edi,DWORD PTR [edi-0x621c8176]
  4053ab:	adc    BYTE PTR [ecx],ch
  4053ad:	ins    BYTE PTR es:[edi],dx
  4053ae:	pop    es
  4053af:	mov    ch,BYTE PTR [esi+0x76]
  4053b2:	add    ebp,esi
  4053b4:	dec    esi
  4053b5:	aas    
  4053b6:	lahf   
  4053b7:	mov    bl,BYTE PTR [esi+0xa]
  4053ba:	test   eax,0xbaec3d0f
  4053bf:	shl    ecx,cl
  4053c1:	adc    ebx,DWORD PTR [ecx]
  4053c3:	pushf  
  4053c4:	js     0x405426
  4053c6:	data16 mov ah,cl
  4053c9:	jbe    0x40539f
  4053cb:	sti    
  4053cc:	dec    esi
  4053cd:	(bad)  
  4053ce:	push   esi
  4053cf:	mov    ch,BYTE PTR [esi]
  4053d1:	jmp    0x4053dc
  4053d3:	pushf  
  4053d4:	cmp    al,0x5e
  4053d6:	inc    esi
  4053d7:	mov    ch,BYTE PTR [edx]
  4053d9:	push   esp
  4053da:	mov    ch,0xef
  4053dc:	mov    es,WORD PTR [edx-0x7]
  4053df:	inc    esp
  4053e0:	xor    esp,esp
  4053e2:	inc    eax
  4053e3:	pop    ebp
  4053e4:	fdiv   QWORD PTR [ebp+0x26]
  4053e7:	xor    edi,esi
  4053e9:	push   eax
  4053eb:	fwait
  4053ec:	inc    ecx
  4053ed:	jbe    0x405405
  4053ef:	mov    bl,BYTE PTR [ebx+0x18]
  4053f2:	add    DWORD PTR [ecx-0x1f98a04],edx
  4053f8:	sahf   
  4053f9:	add    ch,dl
  4053fb:	sbb    eax,DWORD PTR [eax]
  4053fd:	add    BYTE PTR [ebx],ah
  4053ff:	inc    esp
  405400:	test   al,0x3
  405402:	popa   
  405403:	ins    BYTE PTR es:[edi],dx
  405404:	bound  esi,QWORD PTR [eax-0x76c68a3a]
  40540a:	inc    esp
  40540b:	or     al,0xd1
  40540d:	repz mov ah,0x75
  405410:	(bad)  
  405411:	push   ds
  405412:	xor    esp,ebp
  405414:	adc    esp,edx
  405416:	icebp  
  405417:	adc    edx,DWORD PTR [ecx+0x33]
  40541a:	popa   
  40541b:	shr    eax,cl
  40541d:	mov    BYTE PTR [eax+ebx*8-0x1],bl
  405421:	push   edx
  405423:	adc    ebp,eax
  405425:	pop    ecx
  405426:	shl    DWORD PTR [ebp-0x1],0x39
  40542a:	test   al,0xff
  40542c:	pop    es
  40542d:	xchg   ecx,eax
  40542e:	mov    ds:0x4f96ff77,al
  405433:	adc    al,0x68
  405435:	daa    
  405436:	jge    0x40540c
  405438:	call   DWORD PTR [eax]
  40543a:	and    al,BYTE PTR [ecx+eax*2-0x17]
  40543e:	test   eax,0xf3c05c3f
  405443:	adc    ebp,eax
  405445:	stc    
  405446:	xchg   esi,eax
  405447:	jne    0x405448
  405449:	bnd jb 0x40544c
  40544c:	push   ss
  40544d:	jo     0x405445
  40544f:	jg     0x405450
  405451:	fdivr  QWORD PTR [esi-0x351e8a8c]
  405457:	ret    0x46fd
  40545a:	test   al,0x74
  40545c:	jne    0x405493
  40545e:	mov    ch,0x35
  405460:	shl    DWORD PTR [esi],1
  405462:	add    BYTE PTR [eax],al
  405464:	mov    eax,0xf5c0ffe9
  405469:	and    al,0x41
  40546b:	jmp    0xa870548a
  405470:	xor    dh,BYTE PTR [ebp+0x35]
  405473:	mov    ch,0xb
  405475:	aam    0xff
  405477:	add    al,bh
  405479:	pusha  
  40547a:	inc    DWORD PTR [esi]
  40547c:	and    eax,0xbaf17575
  405481:	mov    bl,0xfd
  405483:	idiv   BYTE PTR [ecx+0x7080ffe9]
  405489:	inc    esp
  40548a:	inc    ecx
  40548b:	jmp    0x287054aa
  405490:	sub    eax,0x8a353575
  405495:	sar    edi,cl
  405497:	rcr    BYTE PTR [ecx+0x7700ff60],0x77
  40549e:	mov    edi,0x44f97e74
  4054a3:	hlt    
  4054a4:	mov    DWORD PTR ds:0x783dfff4,0x8bd560e7
  4054ae:	(bad)  
  4054af:	call   FWORD PTR ds:0xa8ede8a4
  4054b5:	mov    edi,edi
  4054b7:	push   0x58
  4054b9:	sbb    BYTE PTR [ebx],bh
  4054bb:	xor    BYTE PTR [ecx],cl
  4054bd:	adc    BYTE PTR [eax+0x51],ch
  4054c0:	cwde   
  4054c1:	sar    edi,1
  4054c3:	addr16 pop edx
  4054c5:	adc    BYTE PTR [eax],al
  4054c7:	add    BYTE PTR [eax],0x0
  4054ca:	mov    al,0x9b
  4054cc:	sar    edi,cl
  4054ce:	xlat   BYTE PTR ds:[ebx]
  4054cf:	inc    eax
  4054d0:	push   DWORD PTR [ebp+0x40]
  4054d3:	cwde   
  4054d4:	push   eax
  4054d5:	std    
  4054d6:	xchg   DWORD PTR [edx+ebp*2+0x2fd5f000],ebx
  4054dd:	inc    ecx
  4054de:	or     BYTE PTR [eax],dl
  4054e0:	push   ecx
  4054e1:	xor    cl,cl
  4054e3:	pop    ss
  4054e4:	push   0x80181802
  4054e9:	call   0x3ffd16
  4054ee:	add    ebx,DWORD PTR [eax+0x74]
  4054f1:	push   ss
  4054f2:	xor    DWORD PTR [edx],0xa3cdfff4
  4054f8:	push   DWORD PTR [ebp-0x30]
  4054fb:	(bad)  
  4054fc:	adc    ebp,edi
  4054fe:	aaa    
  4054ff:	pushf  
  405500:	push   DWORD PTR [ebp-0x24]
  405503:	mov    ds,WORD PTR [esi+0x6a9bc7d0]
  405509:	add    BYTE PTR [eax-0x37bed0a0],dh
  40550f:	pcmpeqb mm6,QWORD PTR [eax]
  405512:	or     DWORD PTR [eax],ebx
  405514:	push   0x37d3102
  405519:	sbb    BYTE PTR [ecx-0x61004c63],0xd
  405520:	xchg   DWORD PTR [ebp+0x29],esi
  405523:	inc    ebp
  405524:	add    eax,0x1aaa8efd
  405529:	add    BYTE PTR [ecx],bl
  40552b:	cmp    edx,esp
  40552d:	inc    eax
  40552e:	add    BYTE PTR [eax],al
  405530:	xor    DWORD PTR ds:0x7cf03010,eax
  405536:	sbb    eax,DWORD PTR [edx]
  405538:	xor    DWORD PTR [ebp-0x7d],edi
  40553b:	call   0xffc803f0
  405540:	sub    bh,BYTE PTR [ebp+0x38a81610]
  405546:	nop
  405547:	inc    esp
  405549:	lock xchg BYTE PTR [ebp+0x39],dh
  40554d:	xchg   ebp,eax
  40554e:	ret    0x3efc
  405551:	cli    
  405552:	xchg   BYTE PTR [ebp+0x3d],dh
  405555:	lds    esi,FWORD PTR [esi]
  405557:	shr    BYTE PTR [esi],1
  405559:	retf   0x7586
  40555c:	and    eax,0x90810e2
  405561:	aas    
  405562:	mov    ecx,0xc22416ff
  405567:	add    al,0x31
  405569:	nop
  40556a:	jp     0x405558
  40556c:	cdq    
  40556d:	jge    0x405572
  40556f:	out    dx,eax
  405570:	mov    edi,0xf60c1139
  405575:	xchg   ebx,edi
  405577:	out    0x46,eax
  405579:	ja     0xfc7f4e7e
  40557f:	inc    DWORD PTR [ebp-0x127e681a]
  405585:	sub    BYTE PTR [esi-0x7ebe3101],al
  40558b:	mov    eax,0x8681c7
  405590:	xor    DWORD PTR [ecx+ebp*8],edx
  405593:	add    eax,DWORD PTR [eax]
  405595:	add    BYTE PTR [edx-0x11051328],ch
  40559b:	out    0xeb,eax
  40559d:	sub    DWORD PTR [ecx+0x14],0x54
  4055a1:	add    DWORD PTR [eax+0x3103e7cc],ecx
  4055a7:	jae    0x4055dd
  4055a9:	clc    
  4055aa:	xchg   esi,eax
  4055ab:	adc    DWORD PTR [ebx-0x56e1797a],0x66fc2e10
  4055b5:	xlat   BYTE PTR ds:[ebx]
  4055b6:	icebp  
  4055b7:	adc    ebx,DWORD PTR [esi+0x627c3d10]
  4055bd:	mov    dl,0x66
  4055bf:	jb     0x405543
  4055c1:	clc    
  4055c2:	(bad)  
  4055c3:	push   esi
  4055c4:	aad    0x44
  4055c6:	xor    DWORD PTR [ebx-0xc],esi
  4055c9:	not    DWORD PTR [esi-0x11]
  4055cc:	cdq    
  4055cd:	xchg   BYTE PTR [esi-0x64],al
  4055d0:	fs dec ebx
  4055d2:	aas    
  4055d3:	jb     0x40563b
  4055d5:	sbb    esi,edi
  4055d7:	adc    al,0xe9
  4055d9:	add    edi,DWORD PTR [edi+edx*4+0x7226852b]
  4055e0:	mov    ecx,0x4662259b
  4055e5:	xchg   BYTE PTR [edi+edx*4+0x720e852b],ah
  4055ec:	cdq    
  4055ed:	xchg   BYTE PTR [esp+ebp*4+0x7cfe862f],bh
  4055f4:	fldenv [ecx+esi*1+0x14]
  4055f8:	jo     0x40557a
  4055fa:	add    BYTE PTR [eax],al
  4055fc:	lods   eax,DWORD PTR ds:[esi]
  4055fd:	jb     0x405615
  4055ff:	xchg   BYTE PTR [ecx+0x21],dh
  405602:	mov    dh,BYTE PTR gs:[ecx]
  405605:	adc    al,0xe9
  405607:	js     0x4055c5
  405609:	push   esi
  40560a:	inc    DWORD PTR [ebp-0x14ff9632]
  405610:	ret    0xff71
  405613:	jmp    0x2bcd4d46
  405618:	fabs   
  40561a:	addr16 mov al,ds:0xd489
  40561e:	inc    eax
  405620:	sahf   
  405621:	mov    ah,0x0
  405623:	jmp    0xecb607c1
  405628:	mov    ebx,0x32e900a3
  40562d:	lahf   
  40562e:	xchg   ebp,eax
  40562f:	stos   DWORD PTR es:[edi],eax
  405630:	scas   eax,DWORD PTR es:[edi]
  405631:	jno    0x405632
  405633:	pop    esp
  405634:	repz aas 
  405636:	push   eax
  405637:	adc    eax,ebp
  405639:	aas    
  40563a:	inc    ecx
  40563b:	jmp    0xe9e0bb0a
  405640:	xor    bl,BYTE PTR ds:0x7c5e14c0
  405646:	xchg   esp,eax
  405647:	jmp    0xaca86a7e
  40564c:	ins    DWORD PTR es:[edi],dx
  40564d:	aam    0xff
  40564f:	jne    0x405687
  405651:	and    al,ch
  405653:	jbe    0x4055d8
  405655:	jno    0x405656
  405657:	je     0x40561f
  405659:	push   ebp
  40565a:	(bad)  
  40565b:	pop    esi
  40565c:	mov    ah,0x9e
  40565e:	push   edx
  40565f:	add    eax,0xc4630000
  405664:	out    0x12,eax
  405666:	loopne 0x4056d8
  405668:	call   FWORD PTR [ecx-0x66f01953]
  40566e:	mov    ch,0xe6
  405670:	pop    es
  405671:	inc    ecx
  405672:	add    esi,DWORD PTR [edx-0x1]
  405675:	cs popf 
  405677:	sub    edi,ecx
  405679:	lods   al,BYTE PTR es:[esi]
  40567b:	jl     0x4056e0
  40567d:	ins    BYTE PTR es:[edi],dx
  40567e:	jae    0x4056c0
  405680:	mov    DWORD PTR [ecx+eax*4+0x72],ebp
  405684:	dec    DWORD PTR [esi]
  405686:	cmp    eax,0x89003054
  40568b:	adc    al,0xff
  40568d:	mov    ch,0x4
  40568f:	call   0xa0:0xdf30ffff
  405696:	enter  0xbf6b,0x74
  40569a:	push   es
  40569b:	adc    ch,cl
  40569d:	sub    BYTE PTR [ecx+0x18],bl
  4056a0:	push   DWORD PTR [ebp-0x74]
  4056a3:	mov    WORD PTR [ecx-0x68902e],gs
  4056a9:	mov    ch,0x14
  4056ab:	xchg   edi,eax
  4056ac:	(bad)  
  4056ad:	jmp    FWORD PTR [eax]
  4056af:	nop
  4056b0:	icebp  
  4056b1:	sar    BYTE PTR [edi+0xb505097],cl
  4056b7:	sbb    dl,BYTE PTR [eax]
  4056b9:	add    BYTE PTR [ecx+ebp*2],dl
  4056bc:	addr16 lahf 
  4056be:	mov    ch,dl
  4056c0:	dec    DWORD PTR [edi-0x50]
  4056c3:	out    dx,eax
  4056c4:	mov    al,ds:0x48000000
  4056c9:	mov    eax,DWORD PTR ds:0x1449b8
  4056cf:	add    BYTE PTR [edx],dl
  4056d1:	imul   edi,DWORD PTR [edi-0xddae8c],0x75
  4056d8:	push   eax
  4056d9:	mov    WORD PTR [esi-0x17683002],ss
  4056df:	rcr    DWORD PTR [esi-0x68],1
  4056e2:	dec    DWORD PTR [ebp-0x1aa6b]
  4056e8:	outs   dx,DWORD PTR ds:[esi]
  4056e9:	and    edi,edi
  4056eb:	mov    ch,0xac
  4056ed:	cdq    
  4056ee:	(bad)  
  4056ef:	jmp    DWORD PTR [eax+0x30]
  4056f2:	mov    al,ds:0xbfef1800
  4056f7:	setne  BYTE PTR [ebx-0x2]
  4056fb:	dec    DWORD PTR [edi-0x68]
  4056fe:	mov    ch,0xbc
  405700:	dec    esi
  405701:	cwde   
  405702:	(bad)  
  405703:	call   0xa39a39
  405708:	xor    DWORD PTR [esi],ebx
  40570a:	dec    esi
  40570b:	mov    eax,0xe88416d7
  405710:	nop
  405711:	aas    
  405712:	test   bh,bh
  405714:	clc    
  405715:	cmp    esi,edi
  405717:	jmp    DWORD PTR [ebp-0xe]
  40571a:	xchg   esi,eax
  40571b:	sub    ebp,0x79
  40571e:	dec    ebx
  40571f:	inc    ebp
  405720:	lods   eax,DWORD PTR ds:[esi]
  405721:	jge    0x405726
  405723:	add    BYTE PTR [ecx],dh
  405725:	inc    esi
  405726:	stc    
  405727:	or     ecx,DWORD PTR [ecx+0xff56a6]
  40572d:	add    BYTE PTR [esi+0x2b744362],dl
  405733:	in     al,0xc8
  405735:	sti    
  405736:	xchg   BYTE PTR [eax],dh
  405738:	adc    al,0xff
  40573a:	add    al,0xc1
  40573c:	ins    BYTE PTR es:[edi],dx
  40573d:	adc    eax,0x5083b663
  405742:	outs   dx,BYTE PTR ds:[esi]
  405743:	or     BYTE PTR [eax-0x7c492b18],al
  405749:	jmp    FWORD PTR [esi+0x306a8038]
  40574f:	xchg   esi,eax
  405750:	stc    
  405751:	sti    
  405752:	dec    esi
  405753:	push   0xe6fde80b
  405758:	cmp    bh,0x3e
  40575b:	push   0x26dce87f
  405760:	cmp    edi,0xfffffff8
  405763:	cmp    dl,BYTE PTR [eax]
  405765:	add    BYTE PTR [edx+esi*8+0x6f],bh
  405769:	xor    ebp,0x16ff81cc
  40576f:	inc    ebx
  405770:	add    ebp,DWORD PTR [edx+0x32]
  405773:	cs stc 
  405775:	pop    es
  405776:	sbb    DWORD PTR [ecx-0xc0100b2],esi
  40577c:	enter  0x89fb,0x14
  405780:	in     eax,dx
  405781:	add    al,0x31
  405783:	adc    al,0x6c
  405785:	mov    esi,ebx
  405787:	ins    DWORD PTR es:[edi],dx
  405788:	push   ss
  405789:	add    DWORD PTR [ecx+0x31a3357c],0x14
  405790:	repnz inc ebx
  405792:	add    BYTE PTR [eax],al
  405794:	ds cwde 
  405796:	dec    edx
  405797:	add    al,0x31
  405799:	adc    al,0xb4
  40579b:	pop    es
  40579c:	xor    BYTE PTR [ecx+ebp*8],dl
  40579f:	adc    ch,BYTE PTR [esi+0x3103e98b]
  4057a5:	cld    
  4057a6:	xchg   ebp,eax
  4057a7:	xor    esi,eax
  4057a9:	adc    esp,DWORD PTR [eax+ecx*4-0x5a]
  4057ad:	ins    DWORD PTR es:[edi],dx
  4057ae:	into   
  4057af:	add    BYTE PTR [ecx],0x7c
  4057b2:	mov    dl,BYTE PTR [esi+ecx*4+0x6e]
  4057b6:	jo     0x405740
  4057b8:	sub    DWORD PTR [ebp-0x4a],0xb9a87e82
  4057bf:	xor    DWORD PTR [esi+0x6e],0x14300811
  4057c6:	jmp    0x97a7045b
  4057cb:	sbb    BYTE PTR [esi-0x3d],0x0
  4057cf:	push   ebx
  4057d0:	or     ebp,edx
  4057d2:	call   0x2863d2c2
  4057d7:	add    al,0xd9
  4057d9:	pop    eax
  4057da:	mov    ecx,0x63763ec4
  4057df:	mov    ds:0x43f21431,al
  4057e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e5:	add    edx,ebx
  4057e7:	add    esi,DWORD PTR [edi+edx*4+0x6e1e815e]
  4057ee:	mov    ecx,0x511c9c82
  4057f3:	popf   
  4057f4:	or     al,0x6e
  4057f6:	add    BYTE PTR ds:[eax],0x0
  4057fa:	mov    esp,0xb3370064
  4057ff:	ins    DWORD PTR es:[edi],dx
  405800:	push   0x142de5
  405805:	je     0x4057c0
  405807:	gs (bad) 
  405809:	push   ds
  40580a:	mov    bl,0xc4
  40580c:	addr16 es or dl,bl
  405810:	inc    DWORD PTR [eax-0x16bedb7e]
  405816:	ficomp DWORD PTR [eax+0x30]
  405819:	test   al,0x32
  40581b:	jl     0x40586c
  40581d:	push   esi
  40581e:	xor    dl,BYTE PTR [ebx+ecx*1]
  405821:	sub    DWORD PTR [esi-0x401695fc],edi
  405827:	xchg   edi,eax
  405828:	neg    edi
  40582a:	mov    al,0x6d
  40582c:	push   eax
  40582d:	(bad)  
  40582e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40582f:	adc    eax,0x6d162ee8
  405834:	inc    esi
  405836:	(bad)  
  405837:	fs (bad) 
  405839:	mov    esi,0xa47d7cb0
  40583e:	mov    al,0x6d
  405840:	push   0x2
  405842:	add    eax,0xb0a6d157
  405847:	sbb    eax,eax
  405849:	adc    eax,0xd9a5fc11
  40584e:	jae    0x4058bd
  405850:	dec    edi
  405851:	xor    DWORD PTR [edi+0x44],0xfb6586ff
  405858:	call   FWORD PTR [eax]
  40585a:	mov    al,0xe7
  40585c:	pop    es
  40585d:	add    DWORD PTR [eax],0xff6f0700
  405863:	outs   dx,BYTE PTR ds:[esi]
  405864:	(bad)
  405867:	data16 mov al,0xfb
  40586a:	xchg   esp,eax
  40586b:	sbb    edx,esi
  40586d:	ins    BYTE PTR es:[edi],dx
  40586e:	imul   esi,ebx,0x4107e6b1
  405874:	(bad)  
  405875:	ins    DWORD PTR es:[edi],dx
  405876:	inc    DWORD PTR [eax]
  405878:	ja     0x4057fa
  40587a:	xchg   esp,eax
  40587b:	xor    cl,bl
  40587d:	adc    BYTE PTR [edx+0x23],ch
  405880:	inc    edi
  405881:	gs pop es
  405883:	call   0x3feaeb
  405888:	rol    BYTE PTR [ebp+0x7ed84130],0x1b
  40588f:	(bad)  
  405890:	mov    ebp,0x268ce818
  405895:	xchg   ebx,eax
  405896:	(bad)  
  405897:	dec    DWORD PTR [ebp-0x13]
  40589a:	(bad)  
  40589b:	jne    0x40585d
  40589d:	clc    
  40589e:	fwait
  40589f:	retf   0x93c7
  4058a2:	leave  
  4058a3:	ret    0x10cc
  4058a6:	push   ebp
  4058a7:	mov    eax,DWORD PTR [eax+edi*2+0x5277ffff]
  4058ae:	push   DWORD PTR [ebp-0x6c]
  4058b1:	xchg   ebx,eax
  4058b2:	jne    0x4058bc
  4058b4:	jo     0x405897
  4058b6:	in     eax,dx
  4058b7:	push   DWORD PTR [edi-0x27]
  4058ba:	ror    DWORD PTR [eax],0x98
  4058bd:	inc    ebp
  4058be:	mov    ch,ah
  4058c0:	or     edx,ebp
  4058c2:	test   edi,0x944d0000
  4058c8:	add    BYTE PTR [eax],al
  4058ca:	pop    eax
  4058cb:	adc    BYTE PTR [ebp+0x6740c445],cl
  4058d1:	fistp  QWORD PTR [eax+0x51]
  4058d4:	(bad)  
  4058d5:	(bad)  
  4058d6:	cmp    eax,0x1435ff04
  4058db:	cmp    DWORD PTR [ecx+0x0],eax
  4058de:	mov    al,ds:0xc7ffceeb
  4058e3:	pop    ds
  4058e4:	shl    BYTE PTR [esi+eiz*2-0x67],0x45
  4058e9:	clc    
  4058ea:	add    BYTE PTR [edi],dl
  4058ec:	add    bh,ch
  4058ee:	(bad)  
  4058ef:	xchg   esp,eax
  4058f0:	jne    0x4058ee
  4058f2:	xor    edx,eax
  4058f4:	cmc    
  4058f5:	not    DWORD PTR [esi]
  4058f7:	inc    ecx
  4058f8:	or     ebp,eax
  4058fa:	imul   eax,ebx,0x7f
  4058fd:	inc    DWORD PTR [esi]
  4058ff:	mov    eax,ds:0x31bce87b
  405904:	cmp    bh,0xe8
  405907:	aas    
  405908:	or     eax,DWORD PTR [eax]
  40590a:	test   dh,ah
  40590c:	outs   dx,BYTE PTR ds:[esi]
  40590d:	sub    ebp,0xdeff80c1
  405913:	cmp    al,BYTE PTR [esi-0x7fe52848]
  405919:	add    BYTE PTR [ecx],dh
  40591b:	jge    0x405920
  40591d:	mov    ebp,DWORD PTR [ecx+edi*2+0xc]
  405921:	rol    BYTE PTR [ebp+0x78],0x83
  405925:	cmp    BYTE PTR [ecx],dh
  405927:	loopne 0x40592e
  405929:	jmp    0x7c75592e
  40592e:	add    eax,DWORD PTR [eax]
  405930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405931:	rcl    BYTE PTR [ebx],0xff
  405934:	and    al,0x71
  405936:	imul   ebp,DWORD PTR [ecx],0xffffff81
  405939:	pop    edx
  40593a:	jg     0x40598c
  40593c:	loope  0x40598f
  40593e:	stc    
  40593f:	pop    es
  405940:	cdq    
  405941:	sar    DWORD PTR [esi-0x1],cl
  405944:	jle    0x40599b
  405946:	sti    
  405947:	retf   
  405948:	jbe    0x405904
  40594a:	in     al,dx
  40594b:	mov    ebp,0xff043c1d
  405950:	fdivr  QWORD PTR [eax+0x6b]
  405953:	or     eax,0x897f8281
  405958:	lods   al,BYTE PTR ds:[esi]
  405959:	lds    edi,FWORD PTR [ebp-0x1]
  40595c:	dec    esi
  40595d:	add    eax,0x7d31013e
  405962:	nop
  405963:	test   DWORD PTR [ebx-0x1d],esi
  405966:	jle    0x405967
  405968:	loope  0x4058fe
  40596a:	mov    esp,ecx
  40596c:	cs adc al,0x66
  40596f:	xchg   ecx,eax
  405970:	lods   al,BYTE PTR ds:[esi]
  405971:	push   ebp
  405972:	pop    edi
  405973:	jg     0x405993
  405975:	les    edx,FWORD PTR [ebp-0x47]
  405978:	fldcw  WORD PTR [ecx+0x4e]
  40597b:	jg     0x405996
  40597d:	push   ebp
  40597e:	fs add al,0x31
  405981:	popf   
  405982:	fs sar bh,0x6a
  405986:	les    esp,FWORD PTR ss:[edi]
  405989:	nop
  40598a:	xchg   BYTE PTR [ecx+esi*1],al
  40598d:	adc    al,0x74
  40598f:	cdq    
  405990:	add    BYTE PTR [eax],al
  405992:	repz imul ebx,DWORD PTR [esi],0xf915e67f
  405999:	add    esi,DWORD PTR [ecx]
  40599b:	adc    al,0x95
  40599d:	idiv   DWORD PTR [ebp-0x3981d480]
  4059a3:	push   0x6c
  4059a5:	ret    0xc40a
  4059a8:	cmp    BYTE PTR [ebp+eax*1-0x3694172b],0x88
  4059b0:	jmp    0x549493b8
  4059b5:	add    cl,BYTE PTR [edx+0x739863cd]
  4059bb:	imul   ecx,esi,0x14d5bc7e
  4059c1:	aam    0xe
  4059c3:	scas   eax,DWORD PTR es:[edi]
  4059c4:	or     eax,0x37727ec5
  4059c9:	mov    eax,ds:0x43e21431
  4059ce:	in     al,0x15
  4059d0:	xchg   edx,eax
  4059d1:	ret    
  4059d2:	mov    ch,0x80
  4059d4:	stos   DWORD PTR es:[edi],eax
  4059d5:	jge    0x405a35
  4059d7:	push   0x64
  4059d9:	ror    DWORD PTR [edx],0x9d
  4059dc:	fs mov bh,0x4f
  4059df:	push   0xffffff86
  4059e1:	jmp    0x405a58
  4059e3:	cmp    ebp,DWORD PTR [eax]
  4059e5:	add    al,0x3e
  4059e7:	loopne 0x4059e8
  4059e9:	in     al,0xca
  4059eb:	in     al,dx
  4059ec:	into   
  4059ed:	outs   dx,BYTE PTR ds:[esi]
  4059ee:	scas   eax,DWORD PTR es:[edi]
  4059ef:	imul   esi,DWORD PTR [ebp-0x965b63],0x8a0000b9
  4059f9:	push   ebx
  4059fa:	iret   
  4059fb:	push   esi
  4059fc:	xchg   edi,eax
  4059fd:	imul   esi,DWORD PTR [ebp-0x7],0x36b871e2
  405a04:	xchg   DWORD PTR [ecx+0x50],ebp
  405a07:	cdq    
  405a08:	jg     0x4059e9
  405a0a:	pop    es
  405a0b:	inc    ecx
  405a0c:	int    0x6a
  405a0e:	jmp    FWORD PTR [esi]
  405a10:	pop    edx
  405a11:	mov    ds:0x976726cb,al
  405a16:	test   DWORD PTR [ebx],ebp
  405a18:	pop    esp
  405a19:	imul   edi,edi,0xbc9f57b9
  405a1f:	cmovg  ebp,DWORD PTR [ecx-0x18]
  405a23:	aad    0x91
  405a25:	adc    al,0x0
  405a27:	fs jb  0x405a43
  405a2a:	test   DWORD PTR [ebp-0x110096c9],ecx
  405a30:	out    0xa8,al
  405a32:	(bad)  
  405a33:	out    0x24,al
  405a35:	jl     0x405a56
  405a37:	jl     0x405a6e
  405a39:	adc    al,0xff
  405a3b:	pushf  
  405a3c:	aad    0x6a
  405a3e:	dec    esi
  405a40:	sbb    eax,0x4c6cb92
  405a45:	pop    ebx
  405a46:	ret    0x32ed
  405a49:	mov    edi,0x50b0c58a
  405a4e:	cld    
  405a4f:	scas   al,BYTE PTR es:[edi]
  405a50:	sbb    ax,0xaae8
  405a54:	hlt    
  405a55:	push   0x6d7670ff
  405a5a:	or     ebp,DWORD PTR [ecx-0x6fdc0000]
  405a60:	mov    ecx,gs
  405a62:	xor    dl,BYTE PTR [eax+ebp*2]
  405a65:	add    BYTE PTR [ebp+0x23],ah
  405a68:	inc    ecx
  405a69:	add    BYTE PTR [edi-0x3c1704a0],bh
  405a6f:	fsin   
  405a71:	dec    DWORD PTR [eax+0x78]
  405a74:	gs xor bl,cl
  405a77:	adc    al,0x50
  405a79:	inc    DWORD PTR ds:0x7e94e81d
  405a7f:	out    0xfe,eax
  405a81:	call   0x3f3656
  405a86:	loopne 0x405ac2
  405a88:	xor    al,BYTE PTR [ecx+0x8]
  405a8b:	call   0xceb15704
  405a90:	int    0xff
  405a92:	pop    ds
  405a93:	inc    eax
  405a94:	data16 or dl,BYTE PTR [bp-0x1]
  405a99:	dec    edi
  405a9a:	aas    
  405a9b:	popa   
  405a9c:	pop    es
  405a9d:	call   0x3f415d
  405aa2:	xor    BYTE PTR [edi],ch
  405aa4:	retf   
  405aa5:	jmp    FWORD PTR [edi]
  405aa7:	js     0x405aeb
  405aa9:	xor    cl,BYTE PTR [ecx-0x438a00ec]
  405aaf:	cld    
  405ab0:	mov    eax,0x4fe79fce
  405ab5:	push   0x4125f6
  405aba:	pop    eax
  405abb:	out    0x74,eax
  405abd:	or     BYTE PTR [eax+0x42],dh
  405ac0:	std    
  405ac1:	inc    DWORD PTR [eax]
  405ac3:	add    BYTE PTR [edi-0x4],bh
  405ac6:	add    eax,0x67e76fcb
  405acb:	pop    ebp
  405acc:	jp     0x405b23
  405ace:	(bad)  
  405acf:	(bad)  
  405ad0:	xor    eax,0xce98e894
  405ad5:	out    0xfe,eax
  405ad7:	push   eax
  405ad8:	inc    eax
  405ad9:	jb     0x405b0c
  405adb:	inc    ecx
  405adc:	dec    eax
  405add:	inc    esp
  405ade:	(bad)  
  405adf:	jne    0x405b12
  405ae1:	jae    0x405b4e
  405ae3:	xor    DWORD PTR [edi-0x67],ecx
  405ae6:	jl     0x405ad0
  405ae8:	dec    esp
  405ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aea:	jl     0x405aeb
  405aec:	ds pop edi
  405aee:	jg     0x405ad8
  405af0:	push   esp
  405af1:	mov    ah,0x7c
  405af3:	(bad)  
  405af4:	clc    
  405af5:	mov    ebx,0xe27c000b
  405afa:	outs   dx,BYTE PTR ds:[esi]
  405afb:	xor    ebp,0xffffffc9
  405afe:	shr    DWORD PTR [ecx+0x31],cl
  405b01:	push   ebx
  405b02:	pop    es
  405b03:	inc    DWORD PTR [ebp+esi*2-0x31110195]
  405b0a:	jnp    0x405a95
  405b0c:	je     0x405b37
  405b0e:	mov    BYTE PTR ds:0xffc3157c,bh
  405b14:	outs   dx,BYTE PTR ds:[esi]
  405b15:	jbe    0x405b1a
  405b17:	je     0x405b43
  405b19:	test   DWORD PTR [eax+esi*1+0x70],edx
  405b1d:	jge    0x405af3
  405b1f:	out    0x68,eax
  405b21:	loopne 0x405b25
  405b23:	add    BYTE PTR [edx],bh
  405b25:	cmp    eax,0x1df7
  405b2a:	pop    esi
  405b2b:	add    eax,0x66bed3ef
  405b30:	pop    es
  405b31:	sar    BYTE PTR ds:0x1767d349,0xab
  405b38:	ret    0xf6ff
  405b3b:	ins    DWORD PTR es:[edi],dx
  405b3c:	icebp  
  405b3d:	pop    es
  405b3e:	mov    DWORD PTR [esi+0x5596ff79],ebx
  405b44:	(bad)
  405b48:	js     0x405b7d
  405b4a:	jno    0x405ae0
  405b4c:	jnp    0x405b4d
  405b4e:	jle    0x405af6
  405b50:	jbe    0x405b00
  405b52:	cmp    DWORD PTR [esi-0x10],esi
  405b55:	(bad)  
  405b56:	fild   DWORD PTR [edx+0x7a]
  405b59:	jne    0x405b94
  405b5b:	adc    al,0x91
  405b5d:	jne    0x405bbe
  405b5f:	addr16 sahf 
  405b61:	out    dx,al
  405b62:	adc    esp,DWORD PTR [edi+0x1c]
  405b65:	or     al,0x59
  405b67:	outs   dx,DWORD PTR ds:[esi]
  405b68:	(bad)  
  405b69:	jnp    0x405bb1
  405b6b:	cli    
  405b6c:	in     al,0x7a
  405b6e:	les    ebx,FWORD PTR [ebx]
  405b70:	xchg   ecx,eax
  405b71:	pop    ecx
  405b72:	aaa    
  405b73:	addr16 jbe 0x405b64
  405b76:	push   esp
  405b77:	addr16 hlt 
  405b79:	or     ebx,DWORD PTR [ecx]
  405b7b:	inc    ebx
  405b7c:	addr16 jnp 0x405b9d
  405b7f:	cld    
  405b80:	dec    edi
  405b81:	xor    al,0x70
  405b83:	adc    al,0x56
  405b85:	icebp  
  405b86:	ss jl  0x405b2d
  405b89:	js     0x405b91
  405b8b:	rcl    DWORD PTR [bp+si],1
  405b8e:	add    BYTE PTR [eax],al
  405b90:	inc    eax
  405b91:	aad    0xe8
  405b93:	jp     0x405c11
  405b95:	sbb    al,0x41
  405b97:	cmp    al,0xec
  405b99:	data16 cs in al,dx
  405b9c:	jne    0x405bc3
  405b9e:	test   al,0x3
  405ba0:	fsubrp st(0),st
  405ba2:	lock imul ecx,DWORD PTR [edx],0x69
  405ba6:	push   ss
  405ba7:	jnp    0x405c02
  405ba9:	jmp    0x405b82
  405bab:	(bad)  
  405bac:	(bad)  
  405bad:	gs jl  0x405bbb
  405bb0:	leave  
  405bb1:	add    eax,0xfbb67afc
  405bb6:	aaa    
  405bb7:	xor    eax,0xf0ee13f0
  405bbc:	cs jl  0x405bb7
  405bbf:	js     0x405b5f
  405bc1:	push   cx
  405bc3:	pop    ebx
  405bc4:	pusha  
  405bc5:	aad    0xe8
  405bc7:	jp     0x405bcd
  405bc9:	sbb    al,0xc1
  405bcb:	inc    DWORD PTR [ebp+0x47ac666]
  405bd1:	push   0x7c2ef0be
  405bd6:	add    BYTE PTR [ebx],dh
  405bd8:	repnz dec WORD PTR [esi]
  405bdc:	hlt    
  405bdd:	push   ecx
  405bde:	add    al,0xe9
  405be0:	sbb    DWORD PTR [ecx+0x1a596aec],0x67231d00
  405bea:	jne    0x405be5
  405bec:	retf   
  405bed:	loopne 0x405bfa
  405bef:	xchg   BYTE PTR [ecx+0xe],al
  405bf2:	call   0xc7405caa
  405bf7:	push   WORD PTR [esi+0x21]
  405bfb:	sbb    ch,al
  405bfd:	xchg   ecx,eax
  405bfe:	jne    0x405c65
  405c00:	push   DWORD PTR [eax]
  405c02:	je     0x405c1c
  405c04:	add    BYTE PTR [edi+eiz*4-0x79d27c88],dh
  405c0b:	cli    
  405c0c:	dec    DWORD PTR [ebp+0x1]
  405c0f:	add    bh,bh
  405c11:	mov    esp,0xed756522
  405c16:	mov    bh,BYTE PTR [esi]
  405c18:	int3   
  405c19:	imul   ebx,DWORD PTR ss:[ecx],0xffffffc0
  405c1d:	mov    ch,0xfe
  405c1f:	pushf  
  405c20:	inc    ebp
  405c21:	and    eax,0xa8323eca
  405c26:	xor    ah,BYTE PTR [ebp+0x75]
  405c29:	adc    eax,0xeccdb5a
  405c2e:	dec    ebx
  405c2f:	cld    
  405c30:	(bad)  
  405c31:	call   0xfe910281
  405c36:	(bad)  
  405c37:	or     eax,0x652b4ce8
  405c3c:	inc    DWORD PTR [ecx-0x16beddf4]
  405c42:	sbb    edi,ebx
  405c44:	sti    
  405c45:	ror    DWORD PTR [ebx+0x57],1
  405c48:	call   esi
  405c4a:	popf   
  405c4b:	adc    al,0x0
  405c4d:	mov    esi,0xfec4cb
  405c52:	cmp    eax,0xb78ae818
  405c57:	jmp    0x405c57
  405c59:	push   0x1e750000
  405c5e:	inc    ecx
  405c5f:	add    BYTE PTR [edi+0x5be8fb75],dl
  405c65:	into   
  405c66:	(bad)  
  405c67:	inc    DWORD PTR [eax+0xe]
  405c6a:	add    bh,ch
  405c6c:	out    0x3f,al
  405c6e:	(bad)  
  405c6f:	jne    0x405cc1
  405c71:	stc    
  405c72:	outs   dx,BYTE PTR ds:[esi]
  405c73:	push   DWORD PTR [edi-0x4b8a0115]
  405c79:	neg    DWORD PTR [ebp-0x37]
  405c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c7d:	jmp    0x405c47
  405c7f:	ret    0x1108
  405c82:	push   ebp
  405c83:	mov    eax,DWORD PTR [eax+edi*2+0x10c932f9]
  405c8a:	push   DWORD PTR [ebp+0x14]
  405c8d:	stc    
  405c8e:	call   0xff2bd45f
  405c93:	jne    0x405c6d
  405c95:	inc    eax
  405c96:	out    0x34,eax
  405c98:	inc    ebp
  405c99:	jmp    0x405c99
  405c9b:	jmp    FWORD PTR [ebp-0x6200afec]
  405ca1:	sbb    al,ch
  405ca3:	ds pop ss
  405ca5:	jmp    0x405ca5
  405ca7:	push   0x411fce
  405cac:	daa    
  405cad:	jne    0x405cba
  405caf:	call   0x3f38c3
  405cb4:	aaa    
  405cb5:	jne    0x405cc6
  405cb7:	push   eax
  405cb8:	and    dh,bh
  405cba:	int3   
  405cbb:	jmp    DWORD PTR [edi+0x1474eb]
  405cc1:	add    al,cl
  405cc3:	jmp    0x405d39
  405cc5:	or     BYTE PTR [eax+0x77fffefc],al
  405ccb:	fld    st(1)
  405ccd:	adc    BYTE PTR [ecx],dh
  405ccf:	jnp    0x405c9f
  405cd1:	mov    dl,BYTE PTR [ebp+0x7efc3ef9]
  405cd7:	daa    
  405cd8:	or     al,ch
  405cda:	loope  0x405c93
  405cdc:	js     0x405cdd
  405cde:	cmp    bh,BYTE PTR [ebx+0x2fb849ef]
  405ce4:	js     0x405d4e
  405ce6:	xor    DWORD PTR [ebx+0x68],edi
  405ce9:	mov    esi,0x41359dc9
  405cee:	xor    DWORD PTR [esi-0x12],edi
  405cf1:	sti    
  405cf2:	inc    esi
  405cf3:	dec    DWORD PTR [ebx]
  405cf5:	call   0xffb8eaa4
  405cfa:	leave  
  405cfb:	jnp    0x405d00
  405cfd:	out    dx,eax
  405cfe:	out    dx,eax
  405cff:	adc    eax,0x6d703266
  405d04:	js     0x405d7b
  405d06:	sbb    eax,0x907edfb
  405d0b:	dec    esp
  405d0c:	js     0x405d0d
  405d0e:	push   cs
  405d0f:	push   esi
  405d10:	add    eax,0xeb941600
  405d15:	in     al,dx
  405d16:	inc    ebx
  405d17:	lods   al,BYTE PTR ds:[esi]
  405d18:	add    edi,edi
  405d1a:	jl     0x405d3d
  405d1c:	js     0x405d93
  405d1e:	cmp    ebp,edx
  405d20:	loope  0x405d20
  405d22:	out    0x32,al
  405d24:	js     0x405d9b
  405d26:	add    BYTE PTR [eax],al
  405d28:	fld    QWORD PTR ds:0x2d6c8b4
  405d2e:	dec    edx
  405d2f:	ret    0x6d39
  405d32:	into   
  405d33:	mov    dl,ch
  405d35:	out    dx,al
  405d36:	ds cld 
  405d38:	dec    ebx
  405d39:	ins    DWORD PTR es:[edi],dx
  405d3a:	in     eax,dx
  405d3b:	add    al,0xb6
  405d3d:	call   0x30c5454c
  405d42:	js     0x405d43
  405d44:	mov    eax,0xc96877b8
  405d49:	adc    al,0x1b
  405d4b:	lds    edx,FWORD PTR [esi-0xfcdb105]
  405d51:	adc    edx,esi
  405d53:	xor    ebp,esp
  405d55:	sub    al,0x28
  405d57:	add    al,0x7e
  405d59:	jmp    0x6307c94e
  405d5e:	mov    esi,0xfb9dd977
  405d63:	les    esp,FWORD PTR [esi-0x5]
  405d66:	push   0x32
  405d68:	lock adc esp,DWORD PTR [esi+0x282cf531]
  405d6f:	add    al,0x4e
  405d71:	jmp    0x62dfc956
  405d76:	mov    ?,WORD PTR [edi-0x37]
  405d79:	mov    ds:0xfb36c4bb,al
  405d7e:	push   cs
  405d7f:	xor    dh,BYTE PTR [eax+0x14]
  405d82:	jbe    0x405db5
  405d84:	test   DWORD PTR ds:0xe91e0428,ebp
  405d8a:	lock imul eax,DWORD PTR [eax],0x0
  405d8e:	xchg   edi,eax
  405d8f:	bound  ebx,QWORD PTR [esi+0x77]
  405d92:	cdq    
  405d93:	push   eax
  405d94:	sbb    eax,ebp
  405d96:	push   es
  405d97:	sti    
  405d98:	mov    esi,0x46147031
  405d9d:	xor    DWORD PTR [ebp+0x2d],edx
  405da0:	test   al,0x3
  405da2:	out    dx,al
  405da3:	call   0x628fc988
  405da8:	cs ja  0x405df4
  405dab:	lods   al,BYTE PTR ds:[esi]
  405dac:	fcmovnb st,st(4)
  405dae:	(bad)  
  405daf:	cli    
  405db0:	je     0x405de4
  405db2:	jo     0x405dc8
  405db4:	push   ss
  405db5:	xor    DWORD PTR [ebp+0x2d],esp
  405db8:	test   al,0x3
  405dba:	mov    esi,0x676bf0e8
  405dbf:	(bad)  
  405dc0:	(bad)  
  405dc1:	jbe    0x405ddc
  405dc3:	sahf   
  405dc4:	add    BYTE PTR [ebx+0x5567626d],bh
  405dca:	arpl   bp,dx
  405dcc:	jmp    ebp
  405dce:	popa   
  405dcf:	shr    BYTE PTR [eax],0x28
  405dd2:	xor    eax,0x1ae17563
  405dd7:	sub    bh,dh
  405dd9:	into   
  405dda:	pop    es
  405ddb:	in     al,dx
  405ddc:	mov    esi,0x67626dfb
  405de1:	push   ebp
  405de2:	and    ch,dl
  405de4:	push   DWORD PTR [ebp+0x2828c021]
  405dea:	xor    eax,0xcaf17563
  405def:	add    esi,edi
  405df1:	sahf   
  405df2:	add    BYTE PTR [eax],al
  405df4:	(bad)  
  405df5:	jmp    0x405dc2
  405df7:	fld    TBYTE PTR [ebp+0x62]
  405dfa:	addr16 jne 0x405dfd
  405dfd:	aad    0xff
  405dff:	test   DWORD PTR [ecx],eax
  405e01:	shr    BYTE PTR [eax],0x28
  405e04:	xor    eax,0x9ae17561
  405e09:	sbb    bh,dh
  405e0b:	outs   dx,BYTE PTR ds:[esi]
  405e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0d:	in     al,dx
  405e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0f:	sbb    ebp,esp
  405e11:	popa   
  405e12:	addr16 iret 
  405e14:	inc    eax
  405e15:	sar    edi,cl
  405e17:	shl    BYTE PTR [eax],0x14
  405e1a:	add    BYTE PTR [ecx-0x79],ch
  405e1d:	out    0x7,eax
  405e1f:	push   ecx
  405e20:	(bad)  
  405e21:	pop    edi
  405e22:	(bad)  
  405e23:	ficomp DWORD PTR ds:[ebx-0x13cd57ce]
  405e2a:	cmp    ebx,0xeb6761f5
  405e30:	xor    dl,BYTE PTR [eax+eax*4]
  405e33:	push   ds
  405e34:	rcr    DWORD PTR [ecx],0xe8
  405e37:	xor    DWORD PTR [ecx+0x61],ecx
  405e3a:	inc    DWORD PTR [ecx+0x412687]
  405e40:	enter  0x6d6d,0x32
  405e44:	fst    DWORD PTR ds:0x15980268
  405e4a:	cmp    bh,0x25
  405e4d:	or     eax,0xe78dc1e8
  405e52:	(bad)  
  405e53:	push   0x4126dc
  405e58:	add    BYTE PTR [eax],al
  405e5a:	lock jns 0x405e8e
  405e5d:	inc    ecx
  405e5e:	mov    BYTE PTR [ebp+0x1],ch
  405e61:	add    BYTE PTR [eax+0x6075ff95],cl
  405e67:	in     eax,dx
  405e68:	test   eax,0x67e79ffd
  405e6d:	test   al,0x5a
  405e6f:	push   esi
  405e70:	jmp    DWORD PTR [edi-0x2c]
  405e73:	and    eax,0x16200041
  405e78:	add    BYTE PTR [eax],al
  405e7a:	fsub   st,st(6)
  405e7c:	je     0x405e86
  405e7e:	mov    al,0x83
  405e80:	std    
  405e81:	jmp    FWORD PTR [edi+0x5932b970]
  405e87:	sbb    BYTE PTR [eax-0x6c],ch
  405e8a:	jmp    0x15:0xa67ff55
  405e91:	or     BYTE PTR [edi-0x1317f88f],0xe9
  405e98:	(bad)  
  405e99:	push   eax
  405e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e9c:	xor    al,BYTE PTR [ecx+0x8]
  405e9f:	ins    DWORD PTR es:[edi],dx
  405ea0:	xchg   ebx,eax
  405ea1:	xor    cl,cl
  405ea3:	adc    al,0x68
  405ea5:	add    bl,al
  405ea7:	adc    al,0x80
  405ea9:	jmp    DWORD PTR [ebp+0xd65e80c]
  405eaf:	out    0xfe,eax
  405eb1:	push   0x41261c
  405eb6:	mov    al,ds:0x31413290
  405ebb:	imul   ebp,ebx,0x1
  405ebe:	add    BYTE PTR [eax],al
  405ec0:	xor    DWORD PTR [ebx-0x7d],ebp
  405ec3:	(bad)  
  405ec4:	cmp    al,0x63
  405ec6:	imul   ecx,DWORD PTR [esi-0x54],0x61
  405eca:	je     0x405f36
  405ecc:	dec    ebx
  405ecd:	push   0xffffffee
  405ecf:	pop    es
  405ed0:	mov    DWORD PTR [ebx+0x75],esi
  405ed3:	call   DWORD PTR [esi+0x4ff20c4]
  405ed9:	arpl   WORD PTR [ebx-0x1],bp
  405edc:	test   BYTE PTR [ecx+0x74],cl
  405edf:	push   0x1d
  405ee1:	push   edx
  405ee2:	out    dx,al
  405ee3:	pop    es
  405ee4:	mov    DWORD PTR [edi-0x5e91008a],ebx
  405eea:	out    dx,al
  405eeb:	sti    
  405eec:	popw   ds
  405eee:	or     al,0xe8
  405ef0:	out    0xb6,al
  405ef2:	je     0x405ef3
  405ef4:	push   0xe5ffffac
  405ef9:	in     eax,0x66
  405efb:	add    esp,0x76
  405efe:	add    esi,DWORD PTR [edx+edx*8+0x12]
  405f02:	pop    ss
  405f03:	xor    esi,eax
  405f05:	push   0x74
  405f07:	jne    0x405f46
  405f09:	test   ebp,esi
  405f0b:	leave  
  405f0c:	es out 0xd2,eax
  405f0f:	xor    DWORD PTR [di+0x64],ebp
  405f13:	mov    esi,0x7edf681
  405f18:	sbb    DWORD PTR [ebx+ebp*2+0x47d606ff],esi
  405f1f:	(bad)  
  405f20:	dec    dh
  405f22:	jmp    0x3ac:0x4200002d
  405f29:	jmp    DWORD PTR [ecx+esi*2+0x6b]
  405f2d:	pop    ebp
  405f2e:	sti    
  405f2f:	es je  0x405f82
  405f32:	dec    ecx
  405f33:	ins    BYTE PTR es:[edi],dx
  405f34:	add    ebp,edi
  405f36:	xchg   edi,eax
  405f37:	adc    al,0xb9
  405f39:	je     0x405f7f
  405f3b:	or     al,0x11
  405f3d:	call   0x568b:0x6b165fd9
  405f44:	push   cs
  405f45:	je     0x405f90
  405f47:	aad    0xb9
  405f49:	ret    0x5eae
  405f4c:	je     0x405f55
  405f4e:	cdq    
  405f4f:	and    BYTE PTR [ebx],ah
  405f51:	je     0x405ef1
  405f53:	les    eax,FWORD PTR [eax-0x5890ceff]
  405f59:	aam    0x8f
  405f5b:	jmp    0x6c49bb50
  405f60:	(bad)  
  405f61:	jae    0x405eec
  405f63:	lea    esp,[edi-0x54b2898d]
  405f69:	cld    
  405f6a:	outs   dx,BYTE PTR ds:[esi]
  405f6b:	enter  0x6071,0x66
  405f6f:	jmp    0x4aa8bb58
  405f74:	scas   al,BYTE PTR es:[edi]
  405f75:	jae    0x405fa1
  405f77:	push   esp
  405f78:	sbb    eax,0xda01d90e
  405f7d:	les    eax,FWORD PTR [esi-0x31]
  405f80:	adc    dl,0x68
  405f83:	pop    edi
  405f84:	mov    ss,esp
  405f86:	out    0x5e,al
  405f88:	cld    
  405f89:	sti    
  405f8a:	add    BYTE PTR [eax],al
  405f8c:	push   ss
  405f8d:	lock jge 0x406003
  405f90:	es ins BYTE PTR es:[edi],dx
  405f92:	adc    eax,0xa05f1e4a
  405f97:	inc    esi
  405f98:	sub    DWORD PTR [esp+edi*4],edx
  405f9b:	jle    0x405fba
  405f9d:	xchg   ebx,eax
  405f9e:	and    eax,0x56149b64
  405fa3:	stc    
  405fa4:	cs pop edi
  405fa6:	aam    0xff
  405fa8:	imul   DWORD PTR [eax]
  405faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fab:	sbb    al,0x70
  405fad:	adc    al,0x51
  405faf:	(bad)  
  405fb1:	pop    esi
  405fb2:	add    BYTE PTR [esi],dh
  405fb4:	pop    esp
  405fb5:	fpatan 
  405fb7:	ret    
  405fb8:	xor    bl,BYTE PTR [edi+0x75]
  405fbb:	std    
  405fbc:	inc    ebx
  405fbd:	jmp    0xc0487dcd
  405fc2:	sub    BYTE PTR [eax+0x20416c32],ch
  405fc8:	inc    edx
  405fc9:	pop    edi
  405fca:	mov    DWORD PTR [esi+ebx*1-0x56020016],ebp
  405fd1:	push   es
  405fd2:	(bad)  
  405fd3:	jl     0x405f73
  405fd5:	pop    ebp
  405fd6:	xor    eax,0xffd5358d
  405fdb:	shr    BYTE PTR [edi],1
  405fdd:	dec    ebp
  405fde:	(bad)  
  405fdf:	fiadd  WORD PTR ds:0x6964f7d9
  405fe5:	jbe    0x406037
  405fe7:	into   
  405fe8:	jns    0x405fe4
  405fea:	(bad)  
  405feb:	cmp    al,0x31
  405fed:	pop    edi
  405fee:	xor    eax,0x4400001d
  405ff3:	aad    0xff
  405ff5:	rol    BYTE PTR [edi+0x4d],0xff
  405ff9:	scas   al,BYTE PTR es:[edi]
  405ffa:	aad    0xd8
  405ffc:	out    dx,eax
  405ffd:	adc    esi,DWORD PTR ds:0xc3c9755f
  406003:	call   0xc039f613
  406008:	sub    BYTE PTR [eax],ch
  40600a:	sub    eax,0xa3b1fd6c
  40600f:	pop    ebp
  406010:	mov    DWORD PTR [ecx+edx*4],esp
  406013:	pop    DWORD PTR [ebp-0x77]
  406016:	add    bl,BYTE PTR [edi+0x75]
  406019:	lds    esp,FWORD PTR [ebx+0x49660be7]
  40601f:	shr    BYTE PTR [eax],0xa8
  406022:	xor    ch,BYTE PTR [ebp+eiz*8+0x21]
  406026:	sbb    DWORD PTR [ebp-0x77],0xffffffa4
  40602a:	mov    ss,WORD PTR [ecx+0x1174007d]
  406030:	je     0x4071b2
  406036:	dec    ebx
  406037:	test   DWORD PTR fs:[eax],0x8a95f7
  40603e:	fcom   DWORD PTR [ecx]
  406040:	cmp    DWORD PTR [ebp+0x1c],0x11
  406044:	je     0x407192
  40604a:	daa    
  40604b:	pop    esp
  40604c:	daa    
  40604d:	jmp    FWORD PTR ds:0x5a2ae759
  406053:	loop   0x406053
  406055:	inc    DWORD PTR [eax]
  406057:	add    BYTE PTR ds:0x9075feed,bl
  40605d:	mov    ecx,0xe397c280
  406062:	(bad)  
  406063:	jne    0x405ff5
  406065:	jecxz  0x4060db
  406067:	or     BYTE PTR [eax+0x5a],dh
  40606a:	sar    edi,0x67
  40606d:	jecxz  0x4060e3
  40606f:	hlt    
  406070:	ja     0x4060d7
  406072:	pop    es
  406073:	call   0x3f367b
  406078:	leave  
  406079:	ins    BYTE PTR es:[edi],dx
  40607a:	daa    
  40607b:	adc    ecx,DWORD PTR [eax-0xc]
  40607e:	mov    ebp,0x74e44575
  406083:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406085:	gs pop es
  406087:	call   0x3f368b
  40608c:	mov    bl,0x12
  40608e:	push   DWORD PTR [ebp-0x40]
  406091:	loop   0x406107
  406093:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406095:	gs pop es
  406097:	call   0x3f379f
  40609c:	xchg   DWORD PTR [ebp-0x15],esp
  40609f:	(bad)  
  4060a0:	in     eax,dx
  4060a1:	pop    eax
  4060a2:	out    0x3c,eax
  4060a4:	pop    edx
  4060a5:	jecxz  0x4060a5
  4060a7:	xor    DWORD PTR [ecx],0x48
  4060aa:	add    BYTE PTR [di+0x68],bh
  4060ae:	test   BYTE PTR [ebp-0x2f],bh
  4060b1:	outs   dx,BYTE PTR ds:[esi]
  4060b2:	test   BYTE PTR [esi],0xba
  4060b5:	mov    bh,0x67
  4060b7:	jmp    DWORD PTR [ecx]
  4060b9:	test   DWORD PTR es:[edi],0x2bc90000
  4060c0:	inc    ebx
  4060c1:	dec    esi
  4060c3:	add    esi,edi
  4060c5:	imul   esi,DWORD PTR [ecx],0xc907f6fe
  4060cb:	mov    edi,0xdb6ff42
  4060d0:	div    ebx
  4060d2:	cdq    
  4060d3:	dec    esi
  4060d4:	inc    esi
  4060d5:	jmp    DWORD PTR [esi-0x760409a3]
  4060db:	inc    esi
  4060dc:	inc    esi
  4060dd:	call   DWORD PTR [esi-0x66080993]
  4060e3:	pop    esi
  4060e4:	inc    esi
  4060e5:	inc    DWORD PTR [esi-0x761009c3]
  4060eb:	jbe    0x406133
  4060ed:	push   DWORD PTR [esi+0x4d]
  4060f0:	imul   bl
  4060f2:	pop    ecx
  4060f3:	outs   dx,BYTE PTR ds:[esi]
  4060f4:	inc    esi
  4060f5:	jmp    DWORD PTR [esi-0x63]
  4060f8:	mul    bl
  4060fa:	dec    ecx
  4060fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060fc:	inc    edi
  4060fd:	call   DWORD PTR [esi-0x4d]
  406100:	inc    ebp
  406101:	and    al,0x31
  406103:	and    BYTE PTR [ebp-0x14],bh
  406106:	mov    al,0xb6
  406108:	jae    0x406101
  40610a:	ds test ebx,ebx
  40610d:	adc    dh,BYTE PTR [ecx]
  40610f:	fidiv  WORD PTR [eax-0x3d612698]
  406115:	dec    DWORD PTR [esi+0x314133b8]
  40611b:	adc    eax,0x6d70338c
  406120:	fisttp DWORD PTR [ebp+0x14420000]
  406126:	test   al,0x3
  406128:	cdq    
  406129:	lea    ebx,[edx]
  40612b:	ret    
  40612c:	(bad)  
  40612d:	repz jns 0x406164
  406130:	jo     0x406146
  406132:	dec    esi
  406133:	idiv   BYTE PTR [edx]
  406135:	pop    ebx
  406136:	mov    esp,0x3eedcefb
  40613b:	jo     0x40611b
  40613d:	in     al,dx
  40613e:	fld    DWORD PTR [ebx]
  406140:	(bad)  
  406141:	call   0xdbe8:0xd5025ac1
  406148:	shl    BYTE PTR [edi],cl
  40614a:	test   al,0x3
  40614c:	dec    ecx
  40614d:	cmp    al,0xda
  40614f:	ret    0xf3b6
  406152:	sub    BYTE PTR [eax+esi*8],dh
  406155:	adc    edx,DWORD PTR [ecx-0x172a9d49]
  40615b:	fld    TBYTE PTR [edx+0x27]
  40615e:	test   al,0x3
  406160:	xchg   esi,eax
  406161:	loope  0x40613f
  406163:	jo     0x406169
  406165:	or     al,0xd1
  406167:	sub    eax,DWORD PTR [edi+0x22dcde5b]
  40616d:	adc    al,0xc6
  40616f:	scas   al,BYTE PTR es:[edi]
  406170:	or     ebp,ecx
  406172:	adc    al,0xc5
  406174:	outs   dx,BYTE PTR ds:[esi]
  406175:	repz add BYTE PTR [eax],bh
  406178:	lock adc edx,DWORD PTR [ecx+0x27]
  40617c:	and    eax,0x2ddbe8d5
  406181:	and    BYTE PTR [eax],ch
  406183:	add    al,0xd9
  406185:	pop    edi
  406186:	fcmovb st,st(4)
  406188:	add    BYTE PTR [eax],al
  40618a:	inc    esi
  40618b:	repz div BYTE PTR [edi]
  40618e:	lock adc edx,DWORD PTR [esi+0x145b2af9]
  406195:	cld    
  406196:	push   ss
  406197:	or     DWORD PTR [edi+0x2489266f],eax
  40619d:	jo     0x406120
  40619f:	pop    ebx
  4061a0:	add    ah,bh
  4061a2:	push   ss
  4061a3:	pop    edx
  4061a4:	xor    eax,0xffd52c0d
  4061a9:	push   eax
  4061aa:	ret    0x81
  4061ad:	jmp    0xd3b5fcad
  4061b2:	outs   dx,DWORD PTR ds:[esi]
  4061b3:	shl    edi,1
  4061b5:	jmp    0x2e4075ec
  4061ba:	clc    
  4061bb:	jmp    si
  4061be:	xor    dl,BYTE PTR [edx+ebp*2]
  4061c1:	jmp    0xe9a9bcbe
  4061c6:	call   0x3eecee25
  4061cb:	les    ecx,FWORD PTR [esp+eiz*2+0x16ff6339]
  4061d2:	fstp   QWORD PTR [ecx+0x75]
  4061d5:	adc    DWORD PTR [esi],ebx
  4061d7:	loope  0x4061d4
  4061d9:	adc    DWORD PTR [edx+eax*4],esp
  4061dc:	add    cl,ch
  4061de:	fwait
  4061df:	call   0x1c67:0xd3fbeb74
  4061e6:	sub    eax,0x89e5ffd5
  4061eb:	push   cs
  4061ec:	call   0xf740627f
  4061f1:	pop    edx
  4061f2:	jmp    DWORD PTR [edx-0x1e]
  4061f5:	mov    BYTE PTR [ebp-0xa5182b],al
  4061fb:	sbb    DWORD PTR [ebx-0x30590b8e],eax
  406201:	pop    edx
  406202:	mov    DWORD PTR [edx+eiz*8+0x62],ebp
  406206:	jmp    FWORD PTR [esi-0x610f5f21]
  40620c:	xlat   BYTE PTR ds:[ebx]
  40620d:	pop    edx
  40620e:	call   DWORD PTR [edi*1-0x38680a8e]
  406215:	pop    edx
  406216:	call   DWORD PTR [edx+eiz*4+0x61]
  40621a:	inc    DWORD PTR [eax]
  40621c:	scas   eax,DWORD PTR es:[edi]
  40621d:	mov    ebp,0xea9fc3e1
  406222:	inc    BYTE PTR [ebp-0x60]
  406225:	mov    esi,0xea05ff94
  40622a:	out    0x2f,eax
  40622c:	xchg   BYTE PTR ds:0x5d4ac900,dl
  406232:	call   DWORD PTR [ebx+edx*4-0x47]
  406236:	add    ah,0x7c
  406239:	cmp    edi,edi
  40623b:	imul   edx,esi,0x800874ea
  406241:	loop   0x406202
  406243:	call   FWORD PTR [edi]
  406245:	fadd   DWORD PTR [esp+edi*8-0x10]
  406249:	inc    ebp
  40624a:	xor    al,BYTE PTR [ecx-0x28]
  40624d:	jmp    0xfffe:0xa2200874
  406254:	add    BYTE PTR [eax],al
  406256:	pop    ds
  406257:	cmp    edi,edi
  406259:	addr16 mov ebp,0xc0004126
  40625f:	inc    ebp
  406260:	xor    al,BYTE PTR [ecx-0x78]
  406263:	jmp    0xe7ff:0x50715c34
  40626a:	dec    eax
  40626b:	iret   
  40626c:	(bad)  
  40626d:	inc    DWORD PTR [ebx+0x380f73d5]
  406273:	inc    eax
  406274:	(bad)  
  406275:	jne    0x406207
  406277:	mov    ebp,0xe77ffc94
  40627c:	out    0x85,eax
  40627e:	fwait
  40627f:	out    0xfe,eax
  406281:	push   0x48
  406283:	cmp    eax,0x100928ce
  406288:	push   0xff564b63
  40628d:	(bad)  
  40628e:	gs dec ecx
  406290:	sub    BYTE PTR [ecx+0x48],al
  406293:	mov    ebp,0x8231c685
  406298:	ins    DWORD PTR es:[edi],dx
  406299:	or     esi,ecx
  40629b:	(bad)  
  40629c:	cld    
  40629d:	dec    edi
  40629e:	adc    DWORD PTR [edx+0x60907f7],0x9316ff70
  4062a8:	leave  
  4062a9:	ret    0xea0e
  4062ac:	fcos   
  4062ae:	mov    ?,WORD PTR [eax+0x30]
  4062b1:	inc    ecx
  4062b2:	xor    DWORD PTR [ebx-0x2d],eax
  4062b5:	xor    dh,BYTE PTR [eax+0x6b]
  4062b8:	fild   DWORD PTR [ecx]
  4062ba:	add    BYTE PTR [eax],al
  4062bc:	xor    DWORD PTR [ebx-0x7d],ebp
  4062bf:	call   0xffad8c48
  4062c4:	sub    ch,BYTE PTR [ebx]
  4062c6:	clc    
  4062c7:	push   cs
  4062c8:	cmp    DWORD PTR [ebx+0x6c],0xc1d33975
  4062cf:	sti    
  4062d0:	(bad)  
  4062d1:	xor    DWORD PTR [edx+esi*1-0xe],ebx
  4062d5:	stc    
  4062d6:	ins    BYTE PTR es:[edi],dx
  4062d7:	push   0x31
  4062d9:	xchg   ebx,eax
  4062da:	cmp    al,0x28
  4062dc:	lock push 0xffffffdb
  4062df:	bound  esp,QWORD PTR [edx-0x54]
  4062e2:	add    ebp,DWORD PTR [eax+0x33]
  4062e5:	imul   eax,DWORD PTR [ebx],0xffffff80
  4062e8:	mov    DWORD PTR [esi+0x758eff45],edx
  4062ee:	inc    ebx
  4062ef:	je     0x406327
  4062f1:	sbb    edx,esp
  4062f3:	inc    BYTE PTR [ebx+eiz*2]
  4062f6:	pop    ebx
  4062f7:	sbb    DWORD PTR [ebp+0x41],esi
  4062fa:	ins    BYTE PTR es:[edi],dx
  4062fb:	call   0xffad1138
  406300:	(bad)  [esp+ebp*2+0x75]
  406304:	sub    DWORD PTR [ebx-0x17],eax
  406307:	sti    
  406308:	push   esi
  406309:	mov    eax,ds:0x1f4e22d9
  40630e:	cld    
  40630f:	out    0xc1,eax
  406311:	adc    esp,DWORD PTR [ebp-0x312c194]
  406317:	ins    BYTE PTR es:[edi],dx
  406318:	mov    esp,0x2ae5810b
  40631d:	pop    eax
  40631e:	mov    gs,WORD PTR [eax+eax*1+0x0]
  406322:	pushf  
  406323:	pop    eax
  406324:	xchg   dh,dh
  406326:	ss ins BYTE PTR es:[edi],dx
  406328:	pop    ds
  406329:	inc    esp
  40632a:	push   ss
  40632b:	pop    eax
  40632c:	mov    al,ds:0x14143541
  406331:	jns    0x406348
  406333:	xchg   esp,eax
  406334:	sub    eax,0xd2bf676f
  406339:	add    ecx,DWORD PTR [ebx+0x36f6560f]
  40633f:	ins    BYTE PTR es:[edi],dx
  406340:	jmp    0x70984988
  406345:	(bad)  
  406346:	fimul  DWORD PTR [ebx-0x2af1090c]
  40634c:	call   0x11d6fc9
  406351:	ret    
  406352:	(bad)  
  406353:	xlat   BYTE PTR ds:[ebx]
  406354:	in     eax,0x3
  406356:	inc    ebp
  406357:	jecxz  0x4062e9
  406359:	leave  
  40635a:	add    dl,ch
  40635c:	call   0x7411fa35
  406361:	add    esi,DWORD PTR [ecx]
  406363:	or     ebp,DWORD PTR [ecx]
  406365:	idiv   DWORD PTR [edi]
  406367:	mov    esi,0x576adb10
  40636c:	not    dl
  40636e:	push   ss
  40636f:	adc    al,0xe9
  406371:	pop    esp
  406372:	(bad)  
  406373:	in     al,dx
  406374:	pop    esi
  406375:	xor    al,dh
  406377:	adc    edi,DWORD PTR [ecx]
  406379:	imul   edi,esp,0xb
  40637c:	ror    esi,0x57
  40637f:	push   edi
  406380:	into   
  406381:	pop    esp
  406382:	scas   eax,DWORD PTR es:[edi]
  406383:	push   edx
  406384:	(bad)  
  406385:	imul   eax,DWORD PTR [eax],0x0
  406388:	leave  
  406389:	jmp    0x40637f
  40638b:	les    edx,FWORD PTR [esi-0x42]
  40638e:	inc    eax
  406390:	and    al,BYTE PTR [ecx-0x68b81700]
  406396:	je     0x40639e
  406398:	arpl   WORD PTR [edi+0x3a],bp
  40639b:	lods   eax,DWORD PTR ds:[esi]
  40639c:	retf   0x5056
  40639f:	add    DWORD PTR ds:0x54fef14,esi
  4063a5:	loope  0x4063da
  4063a7:	sub    BYTE PTR ds:0x1af4fec4,dh
  4063ad:	outs   dx,DWORD PTR ds:[esi]
  4063ae:	sub    al,0x8e
  4063b0:	call   0xff57:0x6f11e857
  4063b7:	push   edx
  4063b8:	xor    al,0xce
  4063ba:	jg     0x4063db
  4063bc:	sub    eax,0x56aff9e1
  4063c1:	and    eax,eax
  4063c3:	nop
  4063c4:	pop    edx
  4063c5:	push   edi
  4063c6:	inc    DWORD PTR [esi+0x67]
  4063c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ca:	cmp    dh,ah
  4063cc:	loope  0x406355
  4063ce:	(bad)  
  4063cf:	mov    esp,0xe1755756
  4063d4:	push   0xffffffa0
  4063d6:	mov    edi,0x5db74a26
  4063db:	xor    BYTE PTR [edi+0x10],ch
  4063de:	add    BYTE PTR [edi+ebp*1+0x32e96868],bh
  4063e5:	addr16 mov esi,0x411faa91
  4063eb:	jmp    0xe14b63f0
  4063f0:	or     esi,esi
  4063f2:	or     DWORD PTR [esi],0x571306e8
  4063f8:	call   DWORD PTR [ecx+0x34]
  4063fb:	adc    al,0xef
  4063fd:	lahf   
  4063fe:	pop    edx
  4063ff:	ja     0x406435
  406401:	sub    BYTE PTR ds:0xdbdd7557,dh
  406407:	loopne 0x406410
  406409:	add    BYTE PTR [eax-0x68001a40],al
  40640f:	pop    ss
  406410:	ret    0x5808
  406413:	inc    ebx
  406414:	mov    ch,ah
  406416:	xchg   edi,eax
  406417:	arpl   WORD PTR [ebx],cx
  406419:	call   0x3f3629
  40641e:	inc    ebx
  40641f:	shl    BYTE PTR [ebx+0x1a],cl
  406422:	xor    BYTE PTR [esi+0x42184134],cl
  406428:	out    0xd8,eax
  40642a:	int    0xea
  40642c:	(bad)  
  40642d:	push   eax
  40642e:	cmp    cl,ch
  406430:	je     0x40643a
  406432:	mov    al,0x76
  406434:	(bad)  
  406435:	call   DWORD PTR [edi-0x683e2a47]
  40643b:	jmp    0x8b55:0x1200c2c8
  406442:	je     0x4063d2
  406444:	(bad)  
  406445:	cld    
  406446:	repnz adc DWORD PTR [edx+0x8],ebp
  40644a:	ja     0x4064b0
  40644c:	pop    es
  40644d:	call   0x400fc2
  406452:	add    BYTE PTR [eax],al
  406454:	push   ecx
  406455:	push   esp
  406456:	sti    
  406457:	push   0xffffffd8
  406459:	cmp    DWORD PTR [ebp+esi*1-0x77],esi
  40645d:	adc    DWORD PTR [eax-0x5e],ebp
  406460:	fcom   QWORD PTR [eax-0x1]
  406463:	dec    BYTE PTR [ebp-0x67bed7b3]
  406469:	mov    ecx,0xea37c4bd
  40646e:	or     al,al
  406470:	sbb    al,0x5
  406472:	push   eax
  406473:	push   0xbeef1199
  406478:	test   al,0xea
  40647a:	je     0x406484
  40647c:	pusha  
  40647d:	ins    DWORD PTR es:[edi],dx
  40647e:	loop   0x40647f
  406480:	push   edi
  406481:	mov    eax,0x3e31c18d
  406486:	imul   ebp,DWORD PTR [edx+0x31],0xf034eed3
  40648d:	push   0xffffffdb
  40648f:	(bad)  
  406490:	sbb    eax,0x4ff042c
  406495:	call   FWORD PTR [edx]
  406497:	inc    ecx
  406498:	xor    DWORD PTR [ebx+0x79],edx
  40649b:	les    edi,FWORD PTR [esi]
  40649d:	scas   al,BYTE PTR es:[edi]
  40649e:	std    
  40649f:	mov    edi,0x67d35ebd
  4064a4:	xor    BYTE PTR [ebx+0x58],ch
  4064a7:	mov    esi,0x7ef8681
  4064ac:	or     DWORD PTR ds:0x8316ff65,ebx
  4064b2:	leave  
  4064b3:	ror    BYTE PTR [esi],0xde
  4064b6:	(bad)  
  4064b8:	add    BYTE PTR [eax],al
  4064ba:	mov    ?,eax
  4064bc:	cs inc ecx
  4064be:	xor    DWORD PTR [ebx+0x2],eax
  4064c1:	xor    eax,0x35686b70
  4064c6:	lea    edx,[ebx+eax*8]
  4064c9:	dec    esi
  4064cb:	dec    edx
  4064cc:	aas    
  4064cd:	(bad)  
  4064ce:	fisub  WORD PTR [ecx+0x43]
  4064d1:	je     0x4064f9
  4064d3:	jnp    0x4064a8
  4064d5:	inc    BYTE PTR [ebx+esi*2+0x5b]
  4064d9:	or     al,dh
  4064db:	and    eax,0x2c04e869
  4064e0:	imul   edi,edi,0x84db6b4b
  4064e6:	lods   al,BYTE PTR fs:[esi]
  4064e8:	add    ebp,DWORD PTR [eax+0x58]
  4064eb:	inc    eax
  4064ec:	ret    0x9fff
  4064ef:	xchg   edi,eax
  4064f0:	(bad)  
  4064f1:	sub    al,dh
  4064f3:	push   0x5b
  4064f5:	ss jne 0x406555
  4064f8:	push   0xf7de710b
  4064fd:	dec    edi
  4064fe:	loope  0x406513
  406500:	out    0xee,al
  406502:	cs ins BYTE PTR es:[edi],dx
  406504:	leave  
  406505:	imul   ebp,DWORD PTR [esi+0x54],0x5471fcc1
  40650c:	into   
  40650d:	fstp   QWORD PTR [esi-0x14]
  406510:	jbe    0x406540
  406512:	lock adc edx,DWORD PTR [ecx-0x1e]
  406516:	add    eax,0xfc68e8d3
  40651b:	mov    bh,0xff
  40651d:	ret    0x0
  406520:	ds ins BYTE PTR es:[edi],dx
  406522:	cmc    
  406523:	aas    
  406524:	ss push esp
  406526:	repnz inc ebx
  406528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406529:	and    edi,DWORD PTR [ecx]
  40652b:	aam    0x27
  40652d:	retf   0x5be0
  406530:	out    0x52,eax
  406532:	xchg   BYTE PTR [eax+0x9],ch
  406535:	ss test eax,0xd4bf0e68
  40653b:	push   0x4b811c7c
  406540:	call   DWORD PTR [ebx+0x66]
  406543:	fstp   QWORD PTR [eax]
  406545:	push   ebx
  406546:	aam    0xfb
  406548:	(bad)  
  406549:	bound  edx,QWORD PTR [edi+0x68]
  40654c:	out    0xbe,al
  40654e:	or     DWORD PTR [ecx+0x64],ebp
  406551:	sbb    al,0x51
  406553:	aas    
  406554:	xlat   BYTE PTR ds:[ebx]
  406555:	push   ebx
  406556:	ds push 0xee365044
  40655c:	cs cmp al,0xf7
  40655f:	test   eax,0x453053be
  406564:	sub    eax,0x9d7cb414
  406569:	push   ebx
  40656a:	pushf  
  40656b:	test   DWORD PTR [esi-0x6197dab4],0xe4ef291f
  406575:	mov    ebx,0x13f02e5d
  40657a:	add    BYTE PTR [ecx-0x113b5f16],bl
  406580:	push   ss
  406581:	in     al,0x4f
  406583:	cmp    DWORD PTR [eax],eax
  406585:	add    BYTE PTR [ebp+0x53],dl
  406588:	dec    esi
  40658a:	xchg   edi,eax
  40658b:	mov    esp,0x536c1c99
  406590:	dec    edi
  406591:	into   
  406592:	pusha  
  406593:	sbb    ebp,eax
  406595:	sbb    dl,al
  406597:	push   edx
  406598:	jmp    DWORD PTR [ecx]
  40659a:	ins    DWORD PTR es:[edi],dx
  40659b:	adc    al,0x0
  40659d:	(bad)  
  40659e:	(bad)  
  40659f:	mov    esp,0x5375f4a8
  4065a4:	dec    edi
  4065a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a6:	inc    eax
  4065a7:	sbb    ebp,eax
  4065a9:	ficom  WORD PTR [ecx+0x531ff53]
  4065af:	adc    eax,0xbbd77e00
  4065b4:	mov    dh,0xbc
  4065b6:	in     eax,dx
  4065b7:	push   edx
  4065b8:	dec    edi
  4065b9:	jle    0x4065bb
  4065bb:	sbb    ebp,eax
  4065bd:	ret    0x5391
  4065c0:	inc    DWORD PTR [ecx+0x66ff92ee]
  4065c6:	xor    al,0x56
  4065c8:	or     cl,ch
  4065ca:	add    DWORD PTR [esi+0x50716aec],ebx
  4065d0:	push   0xffffffe9
  4065d2:	clc    
  4065d3:	sbb    edi,edi
  4065d5:	mov    esp,0x7c793ada
  4065da:	push   esi
  4065db:	push   ebx
  4065dc:	mov    DWORD PTR [esi+ecx*2-0x3fd1e642],ebp
  4065e3:	sbb    ch,al
  4065e5:	imul   ecx,DWORD PTR [esi+0x53],0x93ff
  4065ec:	push   ebx
  4065ed:	push   ebx
  4065ee:	jne    0x4065d1
  4065f0:	or     cl,dl
  4065f2:	dec    BYTE PTR [esi]
  4065f4:	push   ss
  4065f5:	mov    esi,0x452f001b
  4065fa:	pop    es
  4065fb:	call   0x3f1fbc
  406600:	jg     0x406645
  406602:	sti    
  406603:	inc    DWORD PTR ds:0xcd93e74f
  406609:	mov    ecx,0x529ac9fe
  40660e:	call   DWORD PTR [ebx+edx*8-0x16]
  406612:	imul   eax,DWORD PTR [eax],0x4134c3f0
  406618:	dec    eax
  406619:	outs   dx,BYTE PTR ds:[esi]
  40661a:	loope  0x406651
  40661c:	sbb    DWORD PTR [eax],ebx
  40661e:	push   DWORD PTR ds:0x41311c
  406624:	jo     0x40666f
  406626:	ret    0x8fff
  406629:	dec    ebp
  40662a:	mov    edi,0xfe662574
  40662f:	jne    0x406659
  406631:	mov    ebx,0xb9580c74
  406636:	je     0x406640
  406638:	rol    BYTE PTR [ebx-0x1270001c],0xdd
  40663f:	mov    edi,0x69ba7f
  406644:	xor    ah,al
  406646:	xor    al,0x41
  406648:	or     BYTE PTR [esi-0x1f],ch
  40664b:	xor    eax,0x2681599
  406650:	add    BYTE PTR [eax],al
  406652:	fcom   DWORD PTR ds:0xd368e880
  406658:	(bad)  
  406659:	jmp    ebx
  40665b:	aad    0x73
  40665d:	adc    eax,0x1074baa8
  406662:	inc    DWORD PTR [ebx+0xb]
  406665:	push   eax
  406666:	cmove  eax,DWORD PTR [edi]
  406669:	call   0x3f57b9
  40666e:	inc    eax
  40666f:	stos   BYTE PTR es:[edi],al
  406670:	mov    edi,0x662a31ff
  406675:	jne    0x4066b8
  406677:	and    dh,al
  406679:	or     ecx,DWORD PTR [ecx]
  40667b:	repz das 
  40667d:	inc    ecx
  40667e:	xor    DWORD PTR [edx-0x11],edx
  406681:	pop    es
  406682:	cdq    
  406683:	adc    DWORD PTR [edi-0x1],ebx
  406686:	jle    0x40667c
  406688:	inc    eax
  406689:	or     al,0x31
  40668b:	adc    BYTE PTR [ecx-0x14],bh
  40668e:	mov    dl,0x77
  406690:	push   0xf9d5316a
  406695:	(bad)  
  406696:	in     al,0x32
  406698:	pop    ebx
  406699:	mov    esi,0x89655a95
  40669e:	hlt    
  40669f:	mov    ds,esp
  4066a1:	inc    DWORD PTR [esi+0x5a]
  4066a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a5:	push   0xffc24872
  4066aa:	aaa    
  4066ab:	xor    ah,bh
  4066ad:	out    0x91,eax
  4066af:	mov    dl,0x65
  4066b1:	call   FWORD PTR [ecx+0xef033c]
  4066b7:	add    bh,bl
  4066b9:	adc    dh,BYTE PTR [esi]
  4066bb:	xor    eax,0x75643b70
  4066c0:	cmp    DWORD PTR [ebx-0x35f9014a],esp
  4066c6:	fs jne 0x4066c6
  4066c9:	shr    esi,0x7
  4066cc:	or     DWORD PTR ds:0x3eeffa8,ecx
  4066d2:	inc    edx
  4066d3:	add    al,0x31
  4066d5:	nop
  4066d6:	js     0x4066c4
  4066d8:	mov    al,0xf6
  4066da:	dec    ebx
  4066db:	not    esi
  4066dd:	fnstenv [esi+0x45]
  4066e0:	int    0xaa
  4066e2:	fs jne 0x40671a
  4066e5:	or     ch,BYTE PTR [edi]
  4066e7:	pop    esp
  4066e8:	or     BYTE PTR [ebx+eax*1-0x18],bh
  4066ec:	pushf  
  4066ed:	adc    edi,DWORD PTR [eax+0x4]
  4066f0:	xor    DWORD PTR ds:0x6badf529,ebx
  4066f6:	call   0xa49997fe
  4066fb:	imul   esi,DWORD PTR [ecx],0x14
  4066fe:	jmp    0xf516dd06
  406703:	fs cs adc al,0xe9
  406707:	fnstcw WORD PTR [esi-0x46]
  40670a:	call   0xe8fadde8
  40670f:	jbe    0x406705
  406711:	inc    edi
  406712:	cmp    DWORD PTR [edi-0x54],esi
  406715:	inc    edi
  406716:	fisub  WORD PTR [esi+ebx*2-0x1d]
  40671a:	int    0xee
  40671c:	add    BYTE PTR [eax],al
  40671e:	pop    esi
  40671f:	push   eax
  406720:	cmp    al,0x68
  406722:	pop    ecx
  406723:	mov    eax,0x1d310357
  406728:	test   eax,0x523b35ef
  40672d:	add    dh,BYTE PTR [ecx]
  40672f:	adc    al,0x11
  406731:	aaa    
  406732:	pop    ecx
  406733:	aad    0xe8
  406735:	fs pushf 
  406737:	and    BYTE PTR [ecx-0x71b00c87],al
  40673d:	shr    DWORD PTR [ebx+0x57e7464],cl
  406743:	dec    eax
  406744:	jle    0x4067aa
  406746:	popa   
  406747:	loop   0x4066c9
  406749:	jmp    0x7aaeb73e
  40674e:	lods   al,BYTE PTR ds:[esi]
  40674f:	inc    esp
  406750:	pop    esi
  406751:	fs out dx,al
  406753:	cmp    al,0x39
  406755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406756:	out    0x4f,al
  406758:	ret    
  406759:	add    ecx,DWORD PTR [ecx-0x21]
  40675c:	push   ss
  40675d:	ret    
  40675e:	(bad)  
  40675f:	dec    esi
  406760:	jl     0x4067d5
  406762:	(bad)  
  406763:	dec    edi
  406764:	ds fs cld 
  406767:	out    dx,eax
  406768:	(bad)  
  406769:	push   edx
  40676b:	dec    edi
  40676c:	out    0x19,eax
  40676e:	jae    0x4067bf
  406770:	push   DWORD PTR [eax+0x2f]
  406773:	cmp    bh,dh
  406775:	push   ds
  406776:	or     eax,0x9380ffba
  40677b:	or     DWORD PTR [ecx-0x17],eax
  40677e:	or     eax,0xfef089
  406783:	add    BYTE PTR [edx],dl
  406785:	dec    edi
  406786:	push   DWORD PTR [esi+ebp*2-0x2516bf04]
  40678d:	add    ecx,0x859d12ee
  406793:	aad    0xa
  406795:	dec    edi
  406796:	call   DWORD PTR [ebx+0x2d]
  406799:	mov    esp,0x4f741f57
  40679e:	(bad)  
  40679f:	xchg   esp,eax
  4067a0:	std    
  4067a1:	inc    esi
  4067a2:	inc    esi
  4067a4:	ror    BYTE PTR [eax],cl
  4067a6:	pop    esp
  4067a7:	adc    BYTE PTR [edi+ecx*2-0x19],ch
  4067ab:	pop    ebp
  4067ac:	hlt    
  4067ad:	dec    esi
  4067ae:	jmp    DWORD PTR [eax-0x58]
  4067b1:	cmp    al,0xf7
  4067b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067b4:	xchg   edx,eax
  4067b5:	mov    edx,0x91710ff
  4067ba:	inc    ecx
  4067bb:	jmp    0x9730f153
  4067c0:	xchg   edx,eax
  4067c1:	dec    edi
  4067c2:	(bad)  
  4067c3:	mov    esp,0xe940fbce
  4067c8:	call   0x859d:0x9276c0c6
  4067cf:	mov    DWORD PTR [edx+0x4f],ebx
  4067d2:	push   DWORD PTR [eax+edi*4+0x6b]
  4067d6:	neg    DWORD PTR [esi+0x52]
  4067d9:	in     al,0x67
  4067db:	fnstsw WORD PTR [eax]
  4067dd:	aad    0xff
  4067df:	dec    ebp
  4067e0:	mov    eax,0x7700f743
  4067e5:	mov    bl,0xfe
  4067e7:	xor    eax,0xffa40000
  4067ec:	inc    eax
  4067ed:	add    BYTE PTR [eax-0x79],dh
  4067f0:	sar    bh,0x7
  4067f3:	pop    ds
  4067f4:	shl    BYTE PTR [ecx+esi*1-0x69],0xbd
  4067f9:	fdivr  DWORD PTR [edi]
  4067fb:	mov    bl,0xfe
  4067fd:	add    al,0xbd
  4067ff:	inc    edx
  406800:	(bad)  
  406801:	xor    bh,dh
  406803:	pushf  
  406804:	fdivr  st(7),st
  406806:	aaa    
  406807:	mov    bl,0x4f
  406809:	call   0x3fdc86
  40680e:	xor    ecx,DWORD PTR [edx+ecx*1-0x40]
  406812:	cld    
  406813:	sbb    al,0x50
  406815:	call   0x3fdc86
  40681a:	(bad)  
  40681b:	fdivr  st(7),st
  40681e:	xchg   DWORD PTR [ecx+0x12480014],esi
  406824:	cmp    DWORD PTR [ebp-0x11684],0x58
  40682b:	fs add bp,0xffbe
  406830:	idiv   bh
  406832:	xchg   DWORD PTR [edx],edx
  406834:	je     0x406892
  406836:	fwait
  406837:	je     0x406821
  406839:	test   edi,0x5b73ffb2
  40683f:	inc    eax
  406840:	(bad)  
  406841:	call   DWORD PTR [edi+0x75ff73]
  406847:	mov    edx,0xb287ba6a
  40684c:	(bad)  
  40684d:	mov    ch,0x0
  40684f:	add    BYTE PTR [edx+ebp*8+0x6c87fffe],dh
  406856:	pop    es
  406857:	call   0x4017f3
  40685c:	xchg   DWORD PTR [eax+ebp*8+0x61e631f7],ebp
  406863:	call   FWORD PTR [ebx+esi*1+0x6b]
  406867:	mov    cl,0x8b
  406869:	(bad)  
  40686a:	popa   
  40686b:	(bad)  
  40686c:	jl     0x406845
  40686e:	pop    ecx
  40686f:	(bad)  
  406870:	mov    esi,0xc907d806
  406875:	call   0xe097:0xf6aeff9d
  40687c:	sahf   
  40687d:	cs (bad) 
  40687f:	jmp    DWORD PTR [ebx+esi*1]
  406882:	imul   edx,DWORD PTR [ebp-0x9de125],0xffffffc4
  406889:	neg    DWORD PTR [ecx-0x1]
  40688c:	xchg   BYTE PTR [esi-0x29],cl
  40688f:	pop    es
  406890:	mov    DWORD PTR [eax-0x63],esp
  406893:	push   DWORD PTR [esi+0x3e]
  406896:	xchg   edi,eax
  406897:	in     al,0x66
  406899:	ss popa 
  40689b:	call   0xffa21960
  4068a0:	pop    esi
  4068a1:	mov    al,0x70
  4068a3:	not    DWORD PTR [esi+0x5e]
  4068a6:	ins    BYTE PTR es:[edi],dx
  4068a7:	xchg   BYTE PTR [esi+edx*2+0x637cff61],cl
  4068ae:	pop    ecx
  4068af:	(bad)  
  4068b0:	ds push ebx
  4068b2:	fnstsw WORD PTR [eax+eax*1+0x617e3600]
  4068b9:	mov    ch,0x11
  4068bb:	scas   al,BYTE PTR es:[edi]
  4068bc:	popa   
  4068bd:	call   FWORD PTR [ecx]
  4068bf:	sub    ebx,DWORD PTR [edi-0x6859e101]
  4068c5:	lock push ds
  4068c7:	sahf   
  4068c8:	popa   
  4068c9:	call   0xffa14162
  4068ce:	push   es
  4068cf:	clc    
  4068d0:	pop    ebx
  4068d1:	jmp    0xffa12e1c
  4068d6:	test   BYTE PTR [edi+0x5f],0xe8
  4068da:	sahf   
  4068db:	adc    esi,DWORD PTR [esi+0x4]
  4068de:	xor    DWORD PTR [ebx+0x2b],ebx
  4068e1:	or     al,0x31
  4068e3:	out    0x61,eax
  4068e5:	jo     0x406899
  4068e7:	push   edi
  4068e8:	push   ecx
  4068e9:	out    dx,al
  4068ea:	into   
  4068eb:	mov    edx,0x1c3c60f1
  4068f0:	push   ecx
  4068f1:	fnstcw WORD PTR [eax+0x4c]
  4068f4:	mov    ebp,DWORD PTR ss:[eax+edx*2+0x5c]
  4068f9:	(bad)  
  4068fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fb:	jecxz  0x40688d
  4068fd:	neg    DWORD PTR [ebx+edx*8-0x18]
  406901:	jmp    0x4068a1
  406903:	push   es
  406904:	test   al,0x3
  406906:	xchg   esi,eax
  406907:	push   es
  406908:	lods   eax,DWORD PTR ds:[esi]
  406909:	sub    dh,al
  40690b:	adc    edx,DWORD PTR [ecx]
  40690d:	sbb    eax,0xcfe4c71
  406912:	jno    0x4068db
  406914:	fnsave [ebx+0x70e9130e]
  40691a:	add    BYTE PTR [eax],al
  40691c:	scas   eax,DWORD PTR es:[edi]
  40691d:	dec    esp
  40691e:	pop    esp
  40691f:	pop    esp
  406920:	add    DWORD PTR [ebp+0x54],ecx
  406923:	or     al,0x49
  406925:	jno    0x4068de
  406927:	pusha  
  406928:	push   esi
  406929:	cmp    esp,ecx
  40692b:	sahf   
  40692c:	dec    esi
  40692d:	dec    esp
  40692e:	je     0x4068f6
  406930:	ds jecxz 0x406983
  406933:	and    eax,0xebe8d307
  406938:	ss push es
  40693a:	sub    BYTE PTR [esi+ebp*1],al
  40693d:	add    al,BYTE PTR [ebp+0x2b]
  406940:	jo     0x406956
  406942:	xchg   ecx,eax
  406943:	or     cl,dh
  406945:	dec    ebx
  406946:	xchg   esi,eax
  406947:	or     al,0xf1
  406949:	shl    ch,0xb3
  40694c:	xchg   esi,eax
  40694d:	push   ss
  40694e:	jmp    0xf48c30c3
  406953:	pop    ebx
  406954:	popa   
  406955:	dec    ebx
  406956:	add    ah,bh
  406958:	sub    bh,BYTE PTR [esi+ebp*2]
  40695b:	(bad)  
  40695c:	push   ecx
  40695d:	dec    ebx
  40695e:	call   0xff8c2fa0
  406963:	rol    DWORD PTR [ebp+0x2],1
  406966:	inc    ecx
  406967:	jmp    0x41482abd
  40696c:	jmp    0x518768b9
  406971:	sar    ebx,0x3e
  406974:	out    0x13,eax
  406976:	call   0xff8bfe6e
  40697b:	and    ah,dh
  40697d:	(bad)  
  40697f:	mov    esp,0x38b50000
  406984:	and    DWORD PTR ds:0x16ff435e,0xb9fbd1a7
  40698e:	adc    ecx,eax
  406990:	or     eax,DWORD PTR [esi]
  406992:	pop    ds
  406993:	call   0x3c7311c0
  406998:	std    
  406999:	xor    dl,BYTE PTR [si]
  40699c:	or     ebp,DWORD PTR [ecx]
  40699e:	inc    ecx
  40699f:	xchg   ecx,eax
  4069a0:	shr    eax,0x32
  4069a3:	adc    al,0xc7
  4069a5:	and    al,0xfd
  4069a7:	adc    eax,DWORD PTR [eax]
  4069a9:	jmp    0xd585bce0
  4069ae:	out    dx,al
  4069af:	adc    al,BYTE PTR [eax]
  4069b1:	jmp    0xe9a9b50e
  4069b6:	dec    eax
  4069b7:	dec    ebx
  4069b8:	imul   ebp,ecx,0x19f3d1a1
  4069be:	rcl    BYTE PTR [eax+0x4b869ef4],0x50
  4069c5:	sahf   
  4069c6:	clc    
  4069c7:	inc    edx
  4069c8:	call   FWORD PTR [ecx+edx*4]
  4069cb:	cmp    al,0xcf
  4069cd:	pop    edi
  4069ce:	xor    eax,0xd8000b14
  4069d3:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff94
  4069d7:	adc    DWORD PTR [eax],eax
  4069d9:	add    BYTE PTR [eax],dh
  4069db:	in     eax,0x27
  4069dd:	inc    ecx
  4069de:	fsubr  st,st(1)
  4069e0:	je     0x4069ee
  4069e2:	and    dh,0xbe
  4069e5:	inc    DWORD PTR [eax]
  4069e7:	add    BYTE PTR [edi-0x80],bh
  4069ea:	mov    dl,al
  4069ec:	dec    ebp
  4069ed:	popf   
  4069ee:	hlt    
  4069ef:	idiv   DWORD PTR [edi-0x15]
  4069f2:	dec    edi
  4069f3:	push   edx
  4069f4:	pusha  
  4069f5:	mov    dh,0xbe
  4069f7:	(bad)  
  4069f8:	call   FWORD PTR [eax-0x15080f7b]
  4069fe:	(bad)  
  4069ff:	call   0x4014a4
  406a04:	ret    0x6816
  406a07:	nop
  406a08:	xchg   BYTE PTR [edi-0x1],cl
  406a0b:	(bad)  
  406a0c:	cmc    
  406a0d:	fcomip st,st(6)
  406a0f:	(bad)  
  406a10:	aas    
  406a11:	jmp    0x406a47
  406a13:	pop    esp
  406a14:	popa   
  406a15:	dec    edi
  406a16:	jmp    edi
  406a18:	jo     0x4069c3
  406a1a:	(bad)  
  406a1b:	call   DWORD PTR [ecx]
  406a1d:	popf   
  406a1e:	in     al,0xf7
  406a20:	pop    edi
  406a21:	jmp    0x69406a8f
  406a26:	xor    eax,0xb4e94841
  406a2b:	lock ja 0x406a17
  406a2e:	(bad)  
  406a2f:	jmp    DWORD PTR ds:0x58412854
  406a35:	mov    esi,0xe97fbf19
  406a3a:	mov    BYTE PTR [ebp-0x11e94],al
  406a40:	jb     0x406a52
  406a42:	push   0xff510682
  406a47:	inc    BYTE PTR [ebp+0xfff6e5]
  406a4d:	add    BYTE PTR [ecx],dh
  406a4f:	mov    ds:0x546d355e,al
  406a54:	(bad)  
  406a55:	dec    DWORD PTR [esi]
  406a57:	nop
  406a58:	popf   
  406a59:	(bad)  
  406a5a:	inc    ah
  406a5c:	xchg   eax,esp
  406a5e:	inc    dl
  406a60:	pop    ebp
  406a61:	push   0x31
  406a63:	adc    eax,DWORD PTR [edi+0x5e3b7036]
  406a69:	mov    ch,0xe1
  406a6b:	loop   0x406aca
  406a6d:	call   esi
  406a6f:	sub    al,al
  406a71:	sub    BYTE PTR [eax+0x3b],dh
  406a74:	imul   ebx,esi,0xffffff87
  406a77:	rcr    BYTE PTR [ebp-0x77],cl
  406a7a:	mov    ah,0xe3
  406a7c:	push   ebp
  406a7d:	push   DWORD PTR [esi-0x3797fcab]
  406a83:	inc    ecx
  406a84:	(bad)  
  406a85:	jmp    DWORD PTR [edi-0x6108ad18]
  406a8b:	sub    bl,BYTE PTR [esi+0x35]
  406a8e:	cmc    
  406a8f:	push   ebx
  406a90:	(bad)  
  406a91:	call   DWORD PTR [esi-0x79006305]
  406a97:	les    eax,FWORD PTR [edi+0x5d4a86dc]
  406a9d:	xor    DWORD PTR [edi+edx*1+0x3b6eff56],0xffffffd7
  406aa5:	fs mov dl,0x70
  406aa8:	jo     0x406aa1
  406aaa:	pop    esi
  406aab:	push   0x4
  406aad:	je     0x406aa4
  406aaf:	mov    ebp,0xe89e
  406ab4:	inc    esi
  406ab5:	pop    edx
  406ab6:	pop    ebp
  406ab7:	add    BYTE PTR [ebp+0x3effec2d],bh
  406abd:	pop    edx
  406abe:	sahf   
  406abf:	(bad)  
  406ac0:	mov    esp,0xe9036b32
  406ac5:	jns    0x406b24
  406ac7:	(bad)  
  406ac8:	fcom   QWORD PTR [ebx]
  406aca:	xchg   ebp,eax
  406acb:	push   ebp
  406acc:	push   ds
  406acd:	dec    ecx
  406ace:	sahf   
  406acf:	xlat   BYTE PTR ds:[ebx]
  406ad0:	cs cmp al,0x3e
  406ad3:	pushf  
  406ad4:	push   cs
  406ad5:	dec    ecx
  406ad6:	mov    ss,WORD PTR [edi+0x5d864119]
  406adc:	(bad)  
  406add:	mov    esi,0x8c686bf0
  406ae2:	jbe    0x406b41
  406ae4:	out    dx,al
  406ae5:	jle    0x406a6c
  406ae7:	push   ebp
  406ae8:	out    0x48,al
  406aea:	data16 xlat BYTE PTR ds:[ebx]
  406aec:	ss cmp al,0x22
  406aef:	pushf  
  406af0:	(bad)  
  406af1:	dec    eax
  406af2:	push   esi
  406af3:	xchg   edi,eax
  406af4:	rol    DWORD PTR [eax+0x4e],1
  406af7:	pop    ebp
  406af8:	(bad)  
  406af9:	mov    esi,0x8c0c6bf0
  406afe:	ds pop ebp
  406b00:	mov    dh,0x7e
  406b02:	adc    eax,0x2e48ae55
  406b07:	xlat   BYTE PTR ds:[ebx]
  406b08:	cs cmp al,0x6
  406b0b:	pushf  
  406b0c:	sahf   
  406b0d:	dec    eax
  406b0e:	push   ds
  406b0f:	xchg   edi,eax
  406b10:	lea    eax,[eax+0x16]
  406b13:	pop    ebp
  406b14:	cdq    
  406b15:	cli    
  406b16:	push   ecx
  406b17:	pop    ebp
  406b18:	add    BYTE PTR [eax],al
  406b1a:	xchg   BYTE PTR [eax+0x3c],cl
  406b1d:	jo     0x406aa5
  406b1f:	dec    eax
  406b20:	(bad)  
  406b21:	imul   edx,DWORD PTR [edi],0xffffff8d
  406b24:	neg    BYTE PTR [esi+ebp*2+0x7e]
  406b28:	add    DWORD PTR [ebp+0x66],edx
  406b2b:	dec    eax
  406b2c:	shl    eax,1
  406b2e:	fwait
  406b2f:	dec    eax
  406b30:	ficomp WORD PTR [esp+ebx*4+0x33]
  406b34:	ficomp WORD PTR [esi+ecx*2+0x3b]
  406b38:	loope  0x406ad2
  406b3a:	inc    esi
  406b3b:	dec    eax
  406b3c:	(bad)  
  406b3d:	xchg   esi,eax
  406b3e:	pop    ebp
  406b3f:	inc    eax
  406b40:	mov    esi,0x46495c
  406b45:	jae    0x406ad4
  406b47:	inc    edi
  406b48:	push   DWORD PTR [edx+eax*4+0x3f]
  406b4c:	jmp    DWORD PTR [esi-0x6ef83e83]
  406b52:	cmp    eax,0x6d96ff46
  406b57:	xor    eax,0xe8476596
  406b5d:	lea    ebx,[eax-0x108100b9]
  406b63:	aas    
  406b64:	jmp    0xff87fa90
  406b69:	outs   dx,BYTE PTR ds:[esi]
  406b6a:	dec    DWORD PTR [ebx-0x18]
  406b6d:	pop    ss
  406b6e:	scas   al,BYTE PTR es:[edi]
  406b6f:	adc    al,0x0
  406b71:	xor    BYTE PTR [eax+0x1c],dh
  406b74:	add    BYTE PTR [ecx+edi*4+0x66258338],bh
  406b7b:	mov    edx,0xd2ff
  406b80:	cs inc edi
  406b82:	jne    0x406b75
  406b84:	dec    edx
  406b85:	ds mov bh,0x36
  406b88:	or     eax,0x9a2d459d
  406b8d:	jo     0x406bc5
  406b8f:	test   al,0x32
  406b91:	inc    edi
  406b92:	jne    0x406b85
  406b94:	or     bh,BYTE PTR [esi]
  406b96:	std    
  406b97:	push   ss
  406b98:	in     eax,dx
  406b99:	inc    esi
  406b9a:	jne    0x406ba9
  406b9c:	in     eax,0xc0
  406b9e:	pop    es
  406b9f:	adc    DWORD PTR [ebx-0x74],edx
  406ba2:	(bad)  
  406ba3:	(bad)  
  406ba4:	call   0xa8296ffa
  406ba9:	call   0xe6f7:0x63ee68ec
  406bb0:	cli    
  406bb1:	cwde   
  406bb2:	inc    ebp
  406bb3:	fstp   QWORD PTR [ebp-0x141a8aba]
  406bb9:	add    BYTE PTR [eax+eax*1+0x6c],bl
  406bbd:	inc    edi
  406bbe:	out    0x0,eax
  406bc0:	ins    BYTE PTR es:[edi],dx
  406bc1:	pushf  
  406bc2:	add    BYTE PTR [eax],al
  406bc4:	inc    ebx
  406bc5:	ror    DWORD PTR [esi],cl
  406bc7:	test   DWORD PTR [edx],esp
  406bc9:	adc    DWORD PTR [eax],eax
  406bcb:	add    bh,cl
  406bcd:	push   esp
  406bce:	test   DWORD PTR [eax],0xc7001308
  406bd4:	dec    ebp
  406bd5:	in     al,0xfe
  406bd7:	pop    es
  406bd8:	sbb    BYTE PTR [ebx],dl
  406bda:	push   0x0
  406bdc:	xor    dl,BYTE PTR [eax]
  406bde:	push   0x0
  406be0:	and    dl,BYTE PTR [eax]
  406be2:	lea    eax,[ebp+0x0]
  406be5:	add    BYTE PTR [eax+eax*4-0x74],bh
  406be9:	test   DWORD PTR [ebx+eiz*8-0x2],ebp
  406bed:	dec    DWORD PTR [eax-0x15]
  406bf0:	je     0x406bea
  406bf2:	push   edi
  406bf3:	gs sti 
  406bf5:	call   0x4107b8
  406bfa:	rcl    edx,cl
  406bfc:	jae    0x406c03
  406bfe:	jno    0x406bed
  406c00:	add    BYTE PTR [eax],al
  406c02:	enter  0xcc3a,0x28
  406c06:	mov    DWORD PTR [edx],edx
  406c08:	push   DWORD PTR [ebp-0x6c]
  406c0b:	mov    edx,0xeb57bdd8
  406c10:	mov    dl,al
  406c12:	and    eax,0x37f7f495
  406c17:	jmp    0x406c68
  406c19:	push   edx
  406c1a:	xor    BYTE PTR [edx-0x43],cl
  406c1d:	push   DWORD PTR [edi]
  406c1f:	cdq    
  406c20:	test   eax,esi
  406c22:	jg     0x406c0d
  406c24:	(bad)  
  406c25:	push   0xffffff88
  406c27:	cmp    al,BYTE PTR [eax]
  406c29:	aaa    
  406c2a:	cdq    
  406c2b:	adc    bh,bh
  406c2d:	mov    ch,0x68
  406c2f:	loope  0x406c2f
  406c31:	call   DWORD PTR [edi+0x23]
  406c34:	pop    esp
  406c35:	sub    DWORD PTR [ecx],ecx
  406c37:	adc    al,ch
  406c39:	and    eax,0xff5aa031
  406c3e:	mov    eax,0x3ef75eaf
  406c43:	dec    ebp
  406c44:	in     eax,dx
  406c45:	dec    esi
  406c47:	mov    dl,BYTE PTR [ecx]
  406c49:	inc    ecx
  406c4a:	add    BYTE PTR [eax],al
  406c4c:	xor    DWORD PTR [esi-0x70],edi
  406c4f:	lock push ds
  406c51:	ja     0x406cad
  406c53:	jmp    DWORD PTR [edi+ecx*8+0x2c]
  406c57:	inc    ecx
  406c58:	xor    DWORD PTR [ebx-0x60f142fe],esp
  406c5e:	mov    WORD PTR [ebp-0xa560eb],es
  406c64:	mov    edi,DWORD PTR [ebx]
  406c66:	jmp    0x406c5e
  406c68:	aas    
  406c69:	cld    
  406c6a:	add    edi,edi
  406c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c6d:	retf   
  406c6e:	push   ecx
  406c6f:	jmp    esi
  406c71:	mov    dh,0xf
  406c73:	pop    esp
  406c74:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406c78:	enter  0x5aa7,0xff
  406c7c:	mov    eax,0xc6f76ab8
  406c81:	(bad)  
  406c82:	in     al,dx
  406c83:	call   DWORD PTR [esi+0x37]
  406c86:	adc    al,BYTE PTR [ecx+0x31]
  406c89:	push   es
  406c8a:	nop
  406c8b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8d:	(bad)  
  406c8e:	pop    ecx
  406c8f:	call   FWORD PTR [edi+edx*4+0x2c]
  406c93:	inc    ecx
  406c94:	xor    DWORD PTR [ebx],esp
  406c96:	dec    esi
  406c97:	mov    esp,0x858c2696
  406c9c:	xchg   ecx,eax
  406c9d:	es pop edx
  406c9f:	push   DWORD PTR [eax+esi*4+0xe7ef72e]
  406ca6:	mov    bl,0x67
  406ca8:	jne    0x406d27
  406caa:	(bad)  
  406cab:	jmp    FWORD PTR [edi+0x8]
  406cae:	push   ebx
  406caf:	test   DWORD PTR [eax],0x59366600
  406cb5:	xor    eax,0xc31013fd
  406cba:	push   esi
  406cbb:	sub    eax,0x454e9891
  406cc0:	loop   0x406d05
  406cc2:	mov    ebp,0x65976a2a
  406cc7:	cmp    eax,0xbf2d59c6
  406ccc:	fcomp  DWORD PTR [eax+0x61]
  406ccf:	xchg   ebp,eax
  406cd0:	ins    BYTE PTR es:[edi],dx
  406cd1:	cmp    BYTE PTR [esi],bl
  406cd3:	inc    ebp
  406cd4:	scas   al,BYTE PTR es:[edi]
  406cd5:	mov    ah,0x16
  406cd7:	mov    edi,0x3916595f
  406cdc:	cmc    
  406cdd:	or     al,0xf1
  406cdf:	mov    edi,0xbb0eb3ee
  406ce4:	dec    edi
  406ce5:	pop    ecx
  406ce6:	dec    BYTE PTR [esp+ebp*2+0x38]
  406cea:	inc    BYTE PTR [esi+edi*2-0x11]
  406cee:	out    dx,al
  406cef:	inc    esp
  406cf0:	jmp    0x76a4197b
  406cf5:	pop    ecx
  406cf6:	fsubrp st(3),st
  406cf8:	ror    BYTE PTR [edx],1
  406cfa:	push   ds
  406cfb:	shr    eax,cl
  406cfd:	pop    eax
  406cfe:	test   BYTE PTR [ebx+0x5e],al
  406d01:	pop    ecx
  406d02:	mov    BYTE PTR [esp+edx*1-0x48],0x9
  406d07:	shr    eax,cl
  406d09:	imul   ebx,DWORD PTR [ebx-0x78],0x3e
  406d0d:	pop    ecx
  406d0e:	mov    eax,0xa651118e
  406d13:	inc    esp
  406d14:	push   0xffffff97
  406d16:	add    BYTE PTR [eax],al
  406d18:	xchg   ebp,eax
  406d19:	cmp    al,0x26
  406d1b:	pop    ecx
  406d1c:	xor    DWORD PTR ds:0x14317d65,edx
  406d22:	jmp    0x167831ab
  406d27:	pop    ecx
  406d28:	jle    0x406d3d
  406d2a:	idiv   BYTE PTR [edi-0x59]
  406d2d:	adc    ebp,ecx
  406d2f:	add    esi,DWORD PTR [edx+0x10086]
  406d35:	inc    ebp
  406d36:	(bad)  
  406d37:	jmp    0xe9c1fd65
  406d3c:	xor    dl,BYTE PTR [eax+ebp*2]
  406d3f:	stc    
  406d40:	xor    dh,BYTE PTR ds:0xc77d6be
  406d46:	call   0xff851cc3
  406d4b:	(bad)  
  406d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4d:	aaa    
  406d4e:	idiv   DWORD PTR [esi-0x1e8abc77]
  406d54:	call   0xb543:0x79aeb539
  406d5b:	xchg   ecx,eax
  406d5c:	add    DWORD PTR [ebx-0x1],0xe81bff9e
  406d63:	mov    esi,0x8eff43b7
  406d68:	scas   eax,DWORD PTR es:[edi]
  406d69:	cmp    bh,dh
  406d6b:	xchg   BYTE PTR [ecx+0x43],bl
  406d6e:	jne    0x406d61
  406d70:	pop    edx
  406d71:	dec    ebp
  406d72:	mov    ch,0x76
  406d74:	mov    DWORD PTR [ebx-0x4b],eax
  406d77:	lea    eax,[ecx+0x66ff43]
  406d7d:	add    bh,ah
  406d7f:	sbb    ebp,eax
  406d81:	sar    BYTE PTR [edi-0x48a900bd],0x34
  406d88:	test   DWORD PTR [esi+0x59],0x4af17543
  406d8f:	jno    0x406d46
  406d91:	or     DWORD PTR ds:[edi+0x430111bd],edx
  406d98:	(bad)  
  406d99:	jmp    0x64c38c0c
  406d9e:	bound  ecx,QWORD PTR [ebx-0x1]
  406da1:	push   ds
  406da2:	mov    cs,eax
  406da4:	adc    DWORD PTR [edx+0x7],esp
  406da7:	pop    esp
  406da8:	test   DWORD PTR [esi],0x3042d9
  406dae:	das    
  406daf:	push   edx
  406db0:	pop    es
  406db1:	call   0x400037
  406db6:	xor    edx,DWORD PTR [ecx]
  406db8:	push   0x0
  406dba:	dec    edi
  406dbb:	push   ecx
  406dbc:	pop    es
  406dbd:	call   0x4012ef
  406dc2:	outs   dx,DWORD PTR ds:[esi]
  406dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dc4:	in     al,0xf7
  406dc6:	pop    edi
  406dc7:	jmp    0x406db0
  406dc9:	mov    DWORD PTR [eax-0x4a000115],esp
  406dcf:	stos   DWORD PTR es:[edi],eax
  406dd0:	idiv   bh
  406dd2:	out    dx,eax
  406dd3:	scas   eax,DWORD PTR es:[edi]
  406dd4:	jge    0x406d8e
  406dd6:	fucomip st,st(2)
  406dd8:	(bad)  
  406dd9:	mov    ch,0xf0
  406ddb:	sar    dh,cl
  406ddd:	inc    eax
  406ddf:	data16 mov bh,0xff
  406de2:	add    BYTE PTR [eax],al
  406de4:	scas   eax,DWORD PTR es:[edi]
  406de5:	jmp    0xe8fe:0xeaa7e0b4
  406dec:	xor    BYTE PTR [eax-0x5b500001],ah
  406df2:	fdiv   st,st(7)
  406df4:	outs   dx,DWORD PTR ds:[esi]
  406df5:	jmp    0x406dde
  406df7:	pop    ebp
  406df8:	and    bl,ch
  406dfa:	(bad)  
  406dfb:	jmp    DWORD PTR ds:0x4ffff6e8
  406e01:	mov    al,0x51
  406e03:	mov    eax,0x45feeb6f
  406e08:	pusha  
  406e09:	mov    cl,0xd4
  406e0b:	std    
  406e0c:	outs   dx,DWORD PTR ds:[esi]
  406e0d:	jmp    0x406e0d
  406e0f:	jne    0x406e7d
  406e11:	mov    al,0x9b
  406e13:	mov    bl,BYTE PTR [eax-0x6f3d36ea]
  406e19:	push   ss
  406e1a:	push   ebp
  406e1b:	mov    ebx,DWORD PTR [edi+edx*4-0x3c]
  406e1f:	cld    
  406e20:	ret    0x6a16
  406e23:	or     eax,0xe807652f
  406e28:	xor    DWORD PTR [ecx-0x4c810070],edx
  406e2e:	sar    bl,0x9
  406e31:	push   ds
  406e32:	push   cs
  406e33:	inc    ecx
  406e34:	xor    DWORD PTR [edx-0x30],eax
  406e37:	pop    es
  406e38:	pop    ecx
  406e39:	(bad)  
  406e3a:	push   edi
  406e3b:	call   FWORD PTR [esi+0x31]
  406e3e:	sar    bl,1
  406e40:	push   esi
  406e41:	fisttp WORD PTR [ebx]
  406e43:	call   0xff971606
  406e48:	add    BYTE PTR [eax],al
  406e4a:	js     0x406eba
  406e4c:	(bad)  
  406e4d:	jmp    ebp
  406e4f:	mov    ch,0x66
  406e51:	sub    DWORD PTR [ebp-0x78],0xb12eff4e
  406e58:	mov    edi,0xd08a81fb
  406e5d:	or     ebx,DWORD PTR [esi]
  406e5f:	dec    ecx
  406e60:	mov    bh,0x28
  406e62:	jo     0x406e8f
  406e64:	imul   edx,DWORD PTR [edx-0x45],0x2b
  406e68:	add    ecx,DWORD PTR [ebx]
  406e6a:	icebp  
  406e6b:	cmp    al,BYTE PTR [eax+0x32b335f]
  406e71:	(bad)  
  406e72:	ins    BYTE PTR es:[edi],dx
  406e73:	xchg   ebx,eax
  406e74:	add    eax,DWORD PTR [eax]
  406e76:	xor    DWORD PTR [ebx],ebp
  406e78:	ds inc ebp
  406e7a:	(bad)  
  406e7c:	std    
  406e7d:	(bad)  
  406e7e:	ficom  WORD PTR ds:0x65316a04
  406e84:	add    ebp,DWORD PTR [edx+0x31]
  406e87:	mov    al,0xbf
  406e89:	repz popa 
  406e8b:	mov    eax,0xd2c6f47f
  406e90:	push   ebp
  406e91:	push   eax
  406e92:	mov    dh,0x80
  406e94:	pop    ebx
  406e95:	jmp    DWORD PTR [edi+edi*8]
  406e98:	push   0x24
  406e9a:	mov    ebx,0x710b032b
  406e9f:	xchg   DWORD PTR [eax],eax
  406ea1:	jmp    0x42b82f9
  406ea6:	xor    DWORD PTR [ebx+ebp*1+0x1613f02b],ebp
  406ead:	rol    BYTE PTR [eax],1
  406eaf:	add    BYTE PTR [edx],ch
  406eb1:	sub    al,0xa6
  406eb3:	call   0x97bc:0x33724176
  406eba:	cmc    
  406ebb:	dec    ebp
  406ebc:	inc    cx
  406ebe:	cdq    
  406ebf:	mov    cl,0x56
  406ec1:	nop
  406ec2:	xor    dl,BYTE PTR [esi+0x56]
  406ec5:	mov    ebp,DWORD PTR [esp+edx*2+0x46]
  406ec9:	inc    ecx
  406eca:	fiadd  WORD PTR [edi+0x55de50ac]
  406ed0:	ds in  al,0x40
  406ed3:	mov    esi,edi
  406ed5:	shr    al,cl
  406ed7:	push   esp
  406ed8:	in     al,0x43
  406eda:	mov    dh,0x55
  406edc:	es inc ecx
  406ede:	cld    
  406edf:	mov    bh,0x49
  406ee1:	shr    eax,cl
  406ee3:	imul   esp,DWORD PTR [edi-0x47aa5983],0xffffff96
  406eea:	test   DWORD PTR [ebp+0x6],ecx
  406eed:	inc    ecx
  406eee:	add    eax,DWORD PTR [ecx+ecx*4]
  406ef1:	jae    0x406ec9
  406ef3:	ret    0x41f6
  406ef6:	cmp    al,0x54
  406ef8:	out    0x40,al
  406efa:	jle    0x406f51
  406efc:	sbb    al,0xe0
  406efe:	mov    edi,0xf938dec2
  406f03:	cdq    
  406f04:	(bad)  
  406f05:	inc    eax
  406f06:	jo     0x406f87
  406f08:	fisttp QWORD PTR [eax+0x5e]
  406f0b:	push   ebp
  406f0c:	pop    ebx
  406f0d:	adc    al,0xc1
  406f0f:	popf   
  406f10:	push   es
  406f11:	shr    eax,cl
  406f13:	push   esp
  406f14:	add    BYTE PTR [eax],al
  406f16:	jl     0x406f5b
  406f18:	ds push ebp
  406f1a:	scas   al,BYTE PTR es:[edi]
  406f1b:	inc    eax
  406f1c:	hlt    
  406f1d:	mov    bh,0x59
  406f1f:	sar    edi,cl
  406f21:	call   0x2efa5530
  406f26:	cld    
  406f27:	mov    al,BYTE PTR [ebp-0xbf03ef]
  406f2d:	xchg   ebx,eax
  406f2e:	xor    ch,BYTE PTR [eax+esi*4-0x1bf8c22]
  406f35:	push   esp
  406f36:	fisttp QWORD PTR [eax-0x1]
  406f39:	push   es
  406f3a:	add    al,0x7
  406f3c:	pop    esp
  406f3d:	shl    BYTE PTR [ebx+0x40],1
  406f40:	out    0xbd,eax
  406f42:	mov    eax,0xd660ff40
  406f47:	xor    esi,edi
  406f49:	out    0xe5,al
  406f4b:	mov    es,WORD PTR [ebp-0xbf0a3f]
  406f51:	cmp    DWORD PTR [ebp+0x6c],ecx
  406f54:	aaa    
  406f55:	sub    BYTE PTR ds:0x7db9b541,ch
  406f5b:	aas    
  406f5c:	(bad)  
  406f5d:	mov    esi,0x2828e037
  406f62:	xor    eax,0x7d73112c
  406f67:	aas    
  406f68:	or     ebp,DWORD PTR [ecx+0x5c8322fe]
  406f6e:	dec    edx
  406f6f:	inc    edi
  406f70:	call   DWORD PTR [esi-0x71f63702]
  406f76:	and    cl,BYTE PTR [edi+0xa585]
  406f7c:	jge    0x406fbd
  406f7e:	call   DWORD PTR [edx-0x6a7aa8c8]
  406f84:	ins    DWORD PTR es:[edi],dx
  406f85:	aas    
  406f86:	call   esp
  406f88:	xor    dl,BYTE PTR [eax+eax*1]
  406f8b:	mov    ecx,0x5eb6625a
  406f90:	pop    ebp
  406f91:	xchg   ecx,eax
  406f92:	test   DWORD PTR [ecx],edi
  406f94:	ins    DWORD PTR es:[edi],dx
  406f95:	aas    
  406f96:	(bad)  
  406f97:	mov    ecx,0x37a3ca
  406f9c:	fst    DWORD PTR [ebx]
  406f9e:	push   DWORD PTR [ebp-0x12f98]
  406fa4:	addr16 push cs
  406fa6:	pop    esp
  406fa7:	sub    ecx,ecx
  406fa9:	adc    ebp,eax
  406fab:	int    0x11
  406fad:	call   0x4f987bb0
  406fb2:	adc    al,BYTE PTR [ebx-0x8fd1b]
  406fb8:	daa    
  406fb9:	aas    
  406fba:	je     0x406fc6
  406fbc:	aaa    
  406fbd:	and    ecx,DWORD PTR [edi-0x12fc37b]
  406fc3:	push   DWORD PTR [ebx]
  406fc5:	or     eax,0xd03c85c7
  406fca:	(bad)  
  406fcb:	call   FWORD PTR [eax+0x13]
  406fce:	add    BYTE PTR [eax],al
  406fd0:	or     al,ah
  406fd2:	lea    esi,[esi-0x427d1c99]
  406fd8:	ins    BYTE PTR es:[edi],dx
  406fd9:	(bad)  
  406fdb:	call   FWORD PTR [eax]
  406fdd:	add    DWORD PTR ds:[bx+si],0x0
  406fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe3:	cld    
  406fe4:	idiv   bh
  406fe6:	out    0x15,eax
  406fe8:	jne    0x407020
  406fea:	jb     0x407004
  406fec:	lea    eax,[ebp-0x1253c]
  406ff2:	dec    eax
  406ff3:	jecxz  0x406fa9
  406ff5:	in     al,0x9f
  406ff7:	loop   0x406ff7
  406ff9:	call   0x3f5ec8
  406ffe:	jecxz  0x406fd2
  407000:	jae    0x40700b
  407002:	pop    ebx
  407003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407004:	int3   
  407005:	mul    DWORD PTR [edi-0x1d]
  407008:	push   DWORD PTR [ebp+edi*8-0x1f]
  40700c:	mov    ah,0xe4
  40700e:	outs   dx,DWORD PTR ds:[esi]
  40700f:	jecxz  0x40700f
  407011:	call   0x400c9e
  407016:	xor    esi,ebp
  407018:	mov    ah,ah
  40701a:	mov    esi,0x310052cd
  40701f:	sub    eax,0xd8e48303
  407024:	pop    edx
  407025:	call   FWORD PTR [esi-0x4d9528d4]
  40702b:	scas   eax,DWORD PTR es:[edi]
  40702c:	pop    edi
  40702d:	test   DWORD PTR [esi+0x137403f5],0x86e890aa
  407037:	and    eax,0x83fd0053
  40703c:	fild   DWORD PTR [ecx]
  40703e:	xor    DWORD PTR [esi],esp
  407040:	xchg   edx,eax
  407041:	(bad)  
  407042:	fadd   QWORD PTR [ebx+ebx*2-0x59]
  407046:	add    BYTE PTR [eax],al
  407048:	mov    ds:0x9cff5245,eax
  40704d:	inc    eax
  40704e:	pop    edx
  40704f:	dec    DWORD PTR [esi+0x35]
  407052:	fadd   DWORD PTR [edi]
  407054:	pop    ecx
  407055:	xor    DWORD PTR [ebp-0x679ac101],edx
  40705b:	call   0xff92bd9e
  407060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407061:	inc    ebx
  407062:	pop    ebx
  407063:	in     eax,dx
  407064:	jecxz  0x4070e4
  407066:	push   edx
  407067:	jmp    esp
  407069:	ja     0x4070c5
  40706b:	call   DWORD PTR [esi]
  40706d:	outs   dx,DWORD PTR ds:[esi]
  40706e:	cwde   
  40706f:	in     al,0x6
  407071:	ja     0x4070c5
  407073:	(bad)  
  407074:	jl     0x4070b9
  407076:	pop    ebx
  407077:	lods   eax,DWORD PTR ds:[esi]
  407078:	ret    
  407079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707a:	push   edx
  40707b:	(bad)  
  40707c:	mov    esp,0xeeff5a6f
  407081:	xchg   esi,eax
  407082:	fadd   DWORD PTR [edi]
  407084:	fldenv [esi+edx*4]
  407087:	(bad)  
  407088:	faddp  st(6),st
  40708a:	xchg   edi,eax
  40708b:	loopne 0x40706b
  40708d:	scas   al,BYTE PTR es:[edi]
  40708e:	push   ecx
  40708f:	inc    DWORD PTR [esp+edx*1-0xf]
  407093:	pop    ebx
  407094:	test   BYTE PTR [edx-0x7841ada2],al
  40709a:	dec    ebp
  40709b:	pop    edx
  40709c:	mov    dh,0x3d
  40709e:	inc    ecx
  40709f:	dec    edx
  4070a0:	in     al,0x3d
  4070a2:	inc    esi
  4070a3:	push   edx
  4070a4:	fdiv   QWORD PTR [eax]
  4070a6:	ss push edx
  4070a8:	sahf   
  4070a9:	sub    al,0x75
  4070ab:	cwde   
  4070ac:	add    BYTE PTR [eax],al
  4070ae:	xchg   esi,eax
  4070af:	cmp    eax,0x4599982e
  4070b4:	es push edx
  4070b6:	cdq    
  4070b7:	adc    DWORD PTR [edx+edx*2+0x7e],0x3d
  4070bc:	pop    esp
  4070bd:	arpl   WORD PTR [esi+0x3d],di
  4070c0:	push   cs
  4070c1:	pop    ebx
  4070c2:	xchg   edi,eax
  4070c3:	xchg   DWORD PTR [esi],eax
  4070c5:	push   edx
  4070c6:	xchg   cx,di
  4070c9:	pop    ecx
  4070ca:	pop    esi
  4070cb:	cmp    eax,0x3d9c6e01
  4070d0:	out    dx,al
  4070d1:	push   ecx
  4070d2:	hlt    
  4070d3:	cmp    edx,eax
  4070d5:	xchg   esp,eax
  4070d6:	inc    esp
  4070d7:	cmp    eax,0x3fc451de
  4070dc:	shl    DWORD PTR [edi-0x52],0x14
  4070e0:	jmp    0xe94c641f
  4070e5:	mov    dh,0xbb
  4070e7:	das    
  4070e8:	push   0x48
  4070ea:	and    eax,0x24dde8aa
  4070ef:	cmp    eax,0x6f16fc34
  4070f4:	pop    ebx
  4070f5:	push   ecx
  4070f6:	push   es
  4070f7:	mov    esp,DWORD PTR [eax+edx*2]
  4070fa:	mov    DWORD PTR [ecx+ebp*8],edx
  4070fd:	pusha  
  4070fe:	mov    bh,0xab
  407100:	fistp  DWORD PTR [eax]
  407102:	jo     0x407118
  407104:	adc    esi,ebp
  407106:	pop    ds
  407107:	shr    eax,cl
  407109:	push   eax
  40710a:	fs or  al,0x0
  40710d:	cmp    esi,0x6eff5a
  407113:	add    BYTE PTR [esi-0x29],cl
  407116:	idiv   DWORD PTR [ecx-0x57c94f16]
  40711c:	xor    ch,BYTE PTR [edi+eiz*1-0x1c30de2]
  407123:	adc    al,0xe1
  407125:	jmp    0x407167
  407127:	jmp    0x3ef84b36
  40712c:	add    BYTE PTR [ecx],cl
  40712e:	sar    BYTE PTR [ebp+0x35458b48],0x6d
  407135:	adc    eax,DWORD PTR [eax]
  407137:	push   ss
  407138:	mov    ds:0xdaf1753c,eax
  40713d:	test   BYTE PTR [ecx+0x753ce016],dh
  407143:	adc    DWORD PTR [eax],eax
  407145:	(bad)  
  407146:	repz push es
  407148:	jle    0x40715e
  40714a:	call   0xff7d336d
  40714f:	idiv   BYTE PTR [edi+0x40]
  407152:	call   0xff7d1928
  407157:	push   ecx
  407158:	push   ecx
  407159:	add    eax,0xc6e1e941
  40715e:	pop    es
  40715f:	shl    eax,0x3f
  407162:	dec    esi
  407164:	add    ecx,0x13ffc6fb
  40716a:	call   0xff7c38ae
  40716f:	mov    al,ds:0x1400106c
  407174:	mov    WORD PTR [eax],gs
  407176:	sub    DWORD PTR [ebp-0x518a0000],0xffffffff
  40717d:	adc    dh,BYTE PTR [eax]
  40717f:	cmp    esi,DWORD PTR [ebp-0x1f]
  407182:	pop    edx
  407183:	div    BYTE PTR [ecx+0x458d818e]
  407189:	add    BYTE PTR [edi+ebx*2-0x5a500001],ch
  407190:	push   0xff5697bd
  407195:	addr16 xchg ecx,eax
  407197:	sbb    al,0x41
  407199:	add    BYTE PTR [edi+0x62],cl
  40719c:	pop    es
  40719d:	call   0x3f6004
  4071a2:	pop    edi
  4071a3:	(bad)  
  4071a4:	sti    
  4071a5:	inc    DWORD PTR [ebp+0x2a43e73f]
  4071ab:	in     al,0xfe
  4071ad:	leave  
  4071ae:	dec    edx
  4071af:	adc    eax,DWORD PTR [eax]
  4071b1:	push   ebp
  4071b2:	adc    ebx,ebx
  4071b4:	add    ah,0x5c
  4071b7:	pop    ecx
  4071b8:	jmp    FWORD PTR [ecx-0x78]
  4071bb:	in     al,0x74
  4071bd:	or     BYTE PTR [eax],ah
  4071bf:	lods   al,BYTE PTR ds:[esi]
  4071c0:	mov    al,0xff
  4071c2:	pop    ds
  4071c3:	mov    esi,0x17b0fc44
  4071c8:	add    bh,ch
  4071ca:	out    dx,al
  4071cb:	pop    esi
  4071cc:	shl    BYTE PTR [edi],cl
  4071ce:	mov    DWORD PTR [edi],edx
  4071d0:	push   0xff5697d8
  4071d5:	inc    ch
  4071d7:	ds out 0xaf,eax
  4071da:	jno    0x4071a7
  4071dc:	(bad)  
  4071dd:	push   0x0
  4071df:	add    BYTE PTR [eax+0x5f],cl
  4071e2:	adc    al,0x38
  4071e4:	or     DWORD PTR [eax],edx
  4071e6:	push   0xff5147fb
  4071eb:	(bad)  
  4071ec:	and    eax,0x841286b
  4071f1:	fist   WORD PTR [ebp+0xacadfb7]
  4071f7:	rol    BYTE PTR [esp+ebp*8+0x67],0xf1
  4071fc:	out    0x4f,eax
  4071fe:	dec    DWORD PTR [edi-0x60]
  407201:	xor    eax,0xa231ffb7
  407206:	mov    ah,0x67
  407208:	xor    DWORD PTR ds:0x9e59be5e,ebp
  40720e:	pop    ss
  40720f:	inc    ecx
  407210:	xor    DWORD PTR ds:0x9529754f,ebx
  407216:	sbb    bl,cl
  407218:	into   
  407219:	test   eax,0xb17d565b
  40721e:	dec    esi
  40721f:	inc    DWORD PTR [ecx+ebx*8+0x4e]
  407223:	jne    0x40724e
  407225:	aad    0x3c
  407227:	mov    cl,0xae
  407229:	leave  
  40722a:	cmp    al,0xc2
  40722c:	sub    eax,0x8d8ab82d
  407231:	lods   eax,DWORD PTR ds:[esi]
  407232:	inc    edi
  407233:	cld    
  407234:	call   FWORD PTR [ecx+0x5c18ffd9]
  40723a:	dec    esi
  40723b:	jne    0x407276
  40723d:	and    eax,0x197eb0db
  407242:	jge    0x407289
  407244:	add    BYTE PTR [eax],al
  407246:	jne    0x4071fd
  407248:	sbb    BYTE PTR [ebp+0x19],dh
  40724b:	ins    BYTE PTR es:[edi],dx
  40724c:	add    ecx,DWORD PTR [ebx+0x411b9424]
  407252:	xor    DWORD PTR [ebp+0x75dd000e],ebp
  407258:	(bad)  [eax]
  40725a:	or     DWORD PTR [ebx+eax*1+0x57],ebp
  40725e:	pop    ecx
  40725f:	pushf  
  407260:	test   DWORD PTR [eax],eax
  407262:	xor    DWORD PTR [esi+0x43],eax
  407265:	je     0x407273
  407267:	sti    
  407268:	pop    ebx
  407269:	shr    esp,cl
  40726b:	dec    edx
  40726c:	dec    esi
  40726d:	push   0xffc5135b
  407272:	outs   dx,BYTE PTR ds:[esi]
  407273:	arpl   WORD PTR [ecx-0x49],dx
  407276:	push   ss
  407277:	xor    DWORD PTR [ebx+0x5e2b3167],0xffffffbe
  40727e:	popa   
  40727f:	adc    al,0xa6
  407281:	fdiv   DWORD PTR [esi]
  407283:	sub    al,0xc3
  407285:	cmp    dh,dh
  407287:	cmp    DWORD PTR [ecx-0x71c65da6],eax
  40728d:	pop    edx
  40728e:	xor    dl,dl
  407290:	push   0x82bf310d
  407295:	(bad)
  407298:	test   eax,0x6e39ce8c
  40729d:	dec    esi
  40729e:	ret    
  40729f:	push   0x21
  4072a1:	pop    es
  4072a2:	inc    esp
  4072a3:	jg     0x407303
  4072a5:	fdivr  DWORD PTR [edx+0xfbdc39]
  4072ab:	add    BYTE PTR [esi-0x59b1682f],dl
  4072b1:	fldenv [esi-0x16ef8cc4]
  4072b7:	mov    eax,0x476a28ab
  4072bc:	lea    ebp,[esi+0x3920d9e8]
  4072c2:	pushf  
  4072c3:	sti    
  4072c4:	xchg   esi,eax
  4072c5:	sub    ebx,DWORD PTR [ecx+0x4e]
  4072c8:	jbe    0x407255
  4072ca:	lods   al,BYTE PTR ds:[esi]
  4072cb:	dec    edi
  4072cc:	fst    DWORD PTR [ebx]
  4072ce:	jmp    0xc6ed1a31
  4072d3:	or     esi,eax
  4072d5:	adc    edx,DWORD PTR [ecx-0x172ce6e8]
  4072db:	dec    esi
  4072dc:	les    ecx,FWORD PTR [ebx]
  4072de:	add    DWORD PTR [ecx+ebp*2-0x3bb219c7],edx
  4072e5:	aaa    
  4072e6:	(bad)  
  4072e8:	cs sub al,0xe3
  4072eb:	xchg   edx,eax
  4072ec:	cmp    DWORD PTR cs:[eax+0x1c142d42],esp
  4072f3:	jns    0x407302
  4072f5:	xchg   ebx,eax
  4072f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f7:	xor    BYTE PTR [esi],bl
  4072f9:	cmp    DWORD PTR [eax],eax
  4072fb:	mov    dh,0x8e
  4072fd:	iret   
  4072fe:	sti    
  4072ff:	sbb    DWORD PTR [edi+edi*4+0xb],esi
  407303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407304:	fsubr  DWORD PTR es:[eax]
  407307:	sub    BYTE PTR ds:0x356ccd2c,ch
  40730d:	adc    al,0xb
  40730f:	test   eax,0x8fe40000
  407314:	mov    eax,ds:0xc71432e8
  407319:	and    al,0x65
  40731b:	adc    al,0x0
  40731d:	jmp    0x7585c454
  407322:	je     0x407335
  407324:	add    cl,ch
  407326:	fdivr  DWORD PTR [eax]
  407328:	imul   ebp,ecx,0xe96938d8
  40732e:	das    
  40732f:	iret   
  407330:	repz mov ecx,0x3ef48f27
  407336:	in     al,dx
  407337:	cmp    BYTE PTR [eax+0x3e],dl
  40733a:	jle    0x40737c
  40733c:	(bad)  
  40733d:	mov    esp,0x649f2bfe
  407342:	sub    eax,0x59290b14
  407347:	psubsw mm0,QWORD PTR [ebp-0x7effebcd]
  40734e:	das    
  40734f:	in     al,dx
  407350:	inc    eax
  407351:	jmp    0x114c324b
  407356:	repz cmp edi,0xd08da2fe
  40735d:	fs mov dh,0x3f
  407360:	imul   esi
  407362:	cmc    
  407363:	jecxz  0x4073b6
  407365:	shl    DWORD PTR [eax-0x4421007f],1
  40736b:	mov    ?,eax
  40736d:	fidivr WORD PTR [ebp+0x37]
  407370:	call   0xff783556
  407375:	add    BYTE PTR [eax],al
  407377:	add    BYTE PTR [edx+0x305b6810],al
  40737d:	push   ebx
  40737e:	(bad)  
  40737f:	dec    BYTE PTR [ebp-0x2800091d]
  407385:	enter  0x5c34,0xe1
  407389:	push   edx
  40738a:	jmp    edi
  40738c:	add    BYTE PTR [edx-0x71ae0001],ah
  407392:	in     al,0xf7
  407394:	mov    bh,0xc8
  407396:	imul   eax,DWORD PTR [eax],0x41377d40
  40739c:	enter  0xb4c8,0xf0
  4073a0:	dec    edi
  4073a1:	enter  0xfffe,0x7d
  4073a5:	sub    BYTE PTR [bx+di-0x38],al
  4073a9:	fucomi st,st(1)
  4073ab:	mov    ch,0x57
  4073ad:	enter  0x8588,0xf4
  4073b1:	(bad)  
  4073b3:	push   DWORD PTR [edx+0x13]
  4073b6:	push   0xff533052
  4073bb:	(bad)  
  4073bc:	sbb    eax,0x47fff6e3
  4073c1:	enter  0x5c34,0x31
  4073c5:	push   ebx
  4073c6:	jmp    edi
  4073c8:	inc    esp
  4073c9:	sahf   
  4073ca:	(bad)  
  4073cb:	inc    DWORD PTR [ecx]
  4073cd:	mov    gs,eax
  4073cf:	test   DWORD PTR [edi-0x38],0xe014858c
  4073d6:	(bad)  
  4073d7:	(bad)  
  4073d8:	mov    eax,0x38635b
  4073dd:	add    BYTE PTR [ecx+0x48b5ff13],cl
  4073e3:	jecxz  0x4073e3
  4073e5:	call   DWORD PTR [edi+0x21]
  4073e8:	pop    esp
  4073e9:	sub    DWORD PTR [ecx],ecx
  4073eb:	adc    al,ch
  4073ed:	test   eax,0xbfecb9d
  4073f2:	xor    DWORD PTR [ebp-0x30],ebp
  4073f5:	sbb    BYTE PTR [edx+0x1ef72887],dh
  4073fb:	dec    esi
  4073fc:	add    BYTE PTR [ebp+0x41],dh
  4073ff:	jbe    0x407415
  407401:	(bad)  
  407402:	mov    ah,0x4c
  407404:	push   ebx
  407405:	inc    DWORD PTR [esi]
  407407:	sbb    eax,0x6dc3765c
  40740c:	dec    ebx
  40740d:	jmp    0x40742c
  40740f:	inc    edx
  407410:	inc    ebx
  407411:	je     0x40744a
  407413:	std    
  407414:	pop    ebx
  407415:	push   0xffffffa3
  407417:	test   DWORD PTR [ebx-0x39],ecx
  40741a:	mov    ah,0x8c
  40741c:	push   ebx
  40741d:	call   esi
  40741f:	pop    edi
  407420:	add    eax,DWORD PTR [eax]
  407422:	xor    DWORD PTR [edx-0x5a411b78],ebp
  407428:	dec    edx
  407429:	add    BYTE PTR [ebp+0x76],al
  40742c:	xchg   BYTE PTR [ebp-0xb5223b],bh
  407432:	xor    DWORD PTR [ecx-0x47],ebx
  407435:	and    ah,0xd4
  407438:	push   edx
  407439:	call   FWORD PTR [esi+0x944cf2c]
  40743f:	sub    eax,0xef03
  407444:	iret   
  407445:	std    
  407446:	rol    BYTE PTR [edi],1
  407448:	cdq    
  407449:	jmp    0x4073e4
  40744b:	(bad)  
  40744c:	jle    0x40743b
  40744e:	nop
  40744f:	in     al,dx
  407450:	jle    0x407467
  407452:	dec    ebx
  407453:	jmp    esp
  407455:	xor    al,0x5b
  407457:	adc    eax,0xff4b0596
  40745c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40745d:	and    al,0x53
  40745f:	call   DWORD PTR [esi+0x35]
  407462:	rol    BYTE PTR [edi],1
  407464:	pop    ecx
  407465:	and    eax,0x2546ff9a
  40746a:	nop
  40746b:	in     al,0x46
  40746d:	adc    esp,esi
  40746f:	dec    edx
  407470:	ss shl al,0x5b
  407474:	sub    BYTE PTR [edi-0x2a],ah
  407477:	dec    edx
  407478:	es or  cl,0x52
  40747c:	push   ds
  40747d:	ss (bad) 
  40747f:	shr    BYTE PTR [esi],1
  407481:	sub    al,0x70
  407483:	cdq    
  407484:	push   cs
  407485:	ss mov dh,0x90
  407488:	or     eax,0x94aae3e
  40748d:	inc    eax
  40748e:	pop    eax
  40748f:	dec    edx
  407490:	div    BYTE PTR ds:0x35e65754
  407496:	xchg   esi,eax
  407497:	pop    ebx
  407498:	fild   DWORD PTR [ebx+0x7fde4a8e]
  40749e:	xchg   ecx,eax
  40749f:	push   edx
  4074a0:	(bad)  
  4074a1:	xor    eax,0x35802a91
  4074a6:	jbe    0x4074f2
  4074a8:	add    BYTE PTR [eax],al
  4074aa:	jl     0x4074f0
  4074ac:	jbe    0x4074f8
  4074ae:	mov    esi,0xb6943d2c
  4074b3:	xor    eax,0x2ba6c05e
  4074b8:	(bad)  
  4074b9:	dec    ecx
  4074ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bb:	xor    eax,0x2c9ad04e
  4074c0:	out    0x7f,eax
  4074c2:	xor    DWORD PTR [eax+esi*1],edx
  4074c5:	inc    ebp
  4074c6:	cmp    DWORD PTR [esp+ebx*4],edx
  4074c9:	jle    0x407460
  4074cb:	xchg   ecx,eax
  4074cc:	and    eax,0x93140b47
  4074d1:	div    BYTE PTR [edi-0x41]
  4074d4:	lock pop ebx
  4074d6:	push   edi
  4074d7:	pushw  ss
  4074d9:	dec    edx
  4074da:	mov    eax,0xcadb0ccf
  4074df:	sti    
  4074e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e1:	add    edx,DWORD PTR [esi-0x41]
  4074e4:	lock pop ebx
  4074e6:	daa    
  4074e7:	ss add dh,dh
  4074ea:	clc    
  4074eb:	xor    al,0x75
  4074ed:	in     eax,dx
  4074ee:	call   0x43117cb1
  4074f3:	data16 (bad) 
  4074f5:	fisubr WORD PTR [edx+0x52]
  4074f8:	add    al,0xe9
  4074fa:	xlat   BYTE PTR ds:[ebx]
  4074fb:	mov    esp,ebp
  4074fd:	push   0x71
  4074ff:	cmp    BYTE PTR [edx-0x17],ch
  407502:	hlt    
  407503:	and    bh,bh
  407505:	xor    al,0xd
  407507:	sub    eax,0x357887b5
  40750c:	mov    DWORD PTR [eax+eax*1],esp
  40750f:	add    BYTE PTR [ecx-0x54],ch
  407512:	(bad)  
  407513:	call   0x77a8eb71
  407518:	cmp    eax,0x6900ffd3
  40751d:	cld    
  40751e:	inc    eax
  40751f:	jmp    0x9148348d
  407524:	out    dx,al
  407525:	pop    esi
  407526:	(bad)  
  407527:	jle    0x4075a1
  407529:	mov    edi,0xcf676fb
  40752e:	call   0xff7510ca
  407533:	xor    BYTE PTR [edi+0x10],ch
  407536:	add    BYTE PTR [ebp+ebp*1+0x552d8128],dh
  40753d:	cmp    eax,0xcf264eff
  407542:	sti    
  407543:	cdq    
  407544:	jmp    0x3e7e8107
  407549:	fsubr  DWORD PTR [eax]
  40754b:	test   al,0x32
  40754d:	sub    al,0x99
  40754f:	push   0x35
  407551:	adc    al,0xb
  407553:	sub    DWORD PTR [eax-0x71],edi
  407556:	int    0xe8
  407558:	xor    dl,BYTE PTR [edi+eax*8]
  40755b:	lods   al,BYTE PTR ds:[esi]
  40755c:	cli    
  40755d:	adc    eax,DWORD PTR [eax]
  40755f:	jmp    0x85c296
  407564:	push   esp
  407565:	retf   
  407566:	push   es
  407567:	add    BYTE PTR [eax+0x56],bl
  40756a:	jmp    FWORD PTR [ecx+0x58]
  40756d:	push   esi
  40756e:	jmp    FWORD PTR [ecx+0x48]
  407571:	mov    ebp,0xf444
  407576:	clc    
  407577:	mov    esp,0xdd07f484
  40757c:	(bad)  
  40757d:	push   eax
  40757e:	jmp    DWORD PTR [edx-0x9]
  407581:	inc    DWORD PTR [ebp-0x74941824]
  407587:	pop    ss
  407588:	add    BYTE PTR [ebx],cl
  40758a:	fsub   DWORD PTR [ebx+0x4]
  40758d:	jmp    0x408bfa
  407592:	jo     0x40757f
  407594:	daa    
  407595:	inc    ecx
  407596:	or     ch,bl
  407598:	je     0x4075a6
  40759a:	shr    BYTE PTR [ebp+0x67bfffb3],0x8a
  4075a1:	sar    BYTE PTR [ebp-0x4e],1
  4075a4:	repz imul DWORD PTR [edi-0x5fadb024]
  4075ab:	pop    ebp
  4075ac:	mov    bl,0xff
  4075ae:	aas    
  4075af:	scas   al,BYTE PTR es:[edi]
  4075b0:	test   al,dh
  4075b2:	inc    edi
  4075b3:	fdiv   st(6),st
  4075b5:	call   0x3ffcae
  4075ba:	sbb    eax,0xfff7d7b2
  4075bf:	fisttp DWORD PTR [edi+0x68]
  4075c2:	les    ebx,FWORD PTR [edi]
  4075c4:	inc    ecx
  4075c5:	add    bh,ch
  4075c7:	mov    eax,ds:0xdc4ff7f0
  4075cc:	(bad)  
  4075cd:	xor    eax,0x410e9c
  4075d2:	lock jmp 0x407587
  4075d5:	dec    DWORD PTR [edi-0x52]
  4075d8:	test   ah,ah
  4075da:	add    BYTE PTR [eax],al
  4075dc:	inc    edi
  4075dd:	fdiv   st(6),st
  4075df:	push   0x31
  4075e1:	cmp    eax,0x7c19a1db
  4075e6:	add    edi,edi
  4075e8:	pushf  
  4075e9:	sub    eax,0x324eff4f
  4075ee:	or     eax,0x37c185c
  4075f3:	call   0xff886478
  4075f8:	test   al,0xc0
  4075fa:	push   edi
  4075fb:	imul   DWORD PTR [esi]
  4075fd:	push   edx
  4075fe:	(bad)  
  407600:	mov    ss,WORD PTR [esi+0x6231410c]
  407606:	xchg   ecx,eax
  407607:	lock push ds
  407609:	pop    edx
  40760a:	inc    edi
  40760b:	inc    DWORD PTR [ecx+edx*1+0x1d]
  40760f:	inc    ecx
  407610:	xor    DWORD PTR [ebp+0x73],edx
  407613:	mov    bl,0xfe
  407615:	cmp    DWORD PTR [ebp-0x7b],0xff479209
  40761c:	mov    esp,0xe6f727b7
  407621:	mov    DWORD PTR [edi+eiz*2-0x3bbb64],esi
  407628:	xlat   BYTE PTR ds:[ebx]
  407629:	out    dx,eax
  40762a:	push   ebx
  40762b:	test   esi,0x653546b1
  407631:	push   esp
  407632:	(bad)  
  407633:	call   esi
  407635:	sub    al,0x92
  407637:	push   DWORD PTR [esi+0x48744325]
  40763d:	mov    esi,0xdc88
  407642:	sahf   
  407643:	leave  
  407644:	inc    esi
  407645:	add    al,0x24
  407647:	sub    eax,0xbfa63046
  40764c:	arpl   di,si
  40764e:	mov    ?,ecx
  407650:	mov    bl,0xe7
  407652:	inc    esp
  407653:	lods   eax,DWORD PTR ds:[esi]
  407654:	inc    esi
  407655:	dec    DWORD PTR [edx-0x24005b8]
  40765b:	adc    ebp,edi
  40765d:	mov    bl,0x56
  40765f:	in     al,0x58
  407661:	inc    edi
  407662:	pop    dx
  407664:	ins    BYTE PTR es:[edi],dx
  407665:	data16 xor cl,BYTE PTR fs:[esi]
  407669:	icebp  
  40766a:	push   esi
  40766b:	xor    ch,cl
  40766d:	or     BYTE PTR [edi+esi*1+0x134646f6],0x7d
  407675:	lds    esi,FWORD PTR [ebx+0x364efd70]
  40767b:	xor    ch,cl
  40767d:	iret   
  40767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767f:	xchg   ebp,eax
  407680:	pushf  
  407681:	pop    ebx
  407682:	push   ds
  407683:	xor    dl,dh
  407685:	add    esp,DWORD PTR [ebp-0x5bfbbd40]
  40768b:	xchg   edi,eax
  40768c:	mov    eax,ds:0x19320e4e
  407691:	inc    edi
  407692:	mov    esp,0xfe46be38
  407697:	cmp    al,0x1b
  407699:	xor    esi,esi
  40769b:	xor    edx,esi
  40769d:	inc    ebx
  40769e:	gs enter 0x8869,0x9
  4076a3:	sub    dl,BYTE PTR [esi+0x31000046]
  4076a9:	test   al,0x21
  4076ab:	(bad)  
  4076ad:	xor    DWORD PTR [esi-0xf58317b],edx
  4076b3:	pop    ebx
  4076b4:	dec    esi
  4076b5:	xor    BYTE PTR [esi+0x46],0xbe
  4076b9:	addr16 jge 0x40770a
  4076bc:	mov    dh,0x31
  4076be:	data16 shl BYTE PTR [esi],1
  4076c1:	cmp    al,0xa2
  4076c3:	xchg   edi,eax
  4076c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c5:	xor    DWORD PTR [esi-0x70],edx
  4076c8:	mov    DWORD PTR [ecx],ebp
  4076ca:	dec    esi
  4076cb:	inc    esi
  4076cc:	xchg   esi,eax
  4076cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076ce:	lock pop ebx
  4076d0:	fadd   QWORD PTR [eax+0x6786463e]
  4076d6:	add    BYTE PTR [ecx],dl
  4076d8:	out    dx,eax
  4076d9:	xor    bh,bh
  4076db:	mov    eax,cs:0xf726f738
  4076e1:	xor    BYTE PTR [ebp-0xf],dh
  4076e4:	or     bh,BYTE PTR [edi+0x30f716ab]
  4076ea:	mov    ch,0x9
  4076ec:	out    0x30,eax
  4076ee:	inc    DWORD PTR [esi]
  4076f0:	popa   
  4076f1:	sbb    eax,ebp
  4076f3:	rcr    BYTE PTR [esi-0x510900cf],1
  4076f9:	cmp    bh,dh
  4076fb:	out    dx,al
  4076fc:	in     al,dx
  4076fd:	cmp    edx,DWORD PTR [ebp-0xce8b6a]
  407703:	xchg   esp,eax
  407704:	mov    DWORD PTR [ecx],ebp
  407706:	call   esi
  407708:	jge    0x4076a8
  40770a:	scas   eax,DWORD PTR es:[edi]
  40770b:	into   
  40770c:	add    BYTE PTR [eax],al
  40770e:	ins    BYTE PTR es:[edi],dx
  40770f:	xor    DWORD PTR [ebp-0xce832f],esi
  407715:	shr    esp,1
  407717:	cmp    edi,0xf06774b6
  40771d:	mov    dh,0x6c
  40771f:	xor    eax,ebp
  407721:	sbb    eax,0x9eff30c4
  407726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407727:	sub    cl,ch
  407729:	sub    esi,DWORD PTR [edi+0x31]
  40772c:	dec    DWORD PTR [esi+0x47e82ce6]
  407732:	mov    dl,0x13
  407734:	add    BYTE PTR [eax+0x1c001c73],dh
  40773a:	cmp    BYTE PTR [eax-0x7d],al
  40773d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40773e:	popa   
  40773f:	xor    DWORD PTR [ebp-0xb],esi
  407742:	or     cl,dl
  407744:	jg     0x40772f
  407746:	xor    bl,BYTE PTR [ebx-0x590baebb]
  40774c:	test   DWORD PTR [ecx-0x31],0xf700ff81
  407753:	lods   al,BYTE PTR ds:[esi]
  407754:	inc    esp
  407755:	cld    
  407756:	inc    edi
  407757:	popa   
  407758:	sti    
  407759:	(bad)  
  40775a:	mov    ebp,0x5475fedc
  40775f:	int3   
  407760:	push   ss
  407761:	mov    ebx,0xc00ad717
  407766:	mov    esp,0x3c458916
  40776b:	dec    esi
  40776c:	dec    DWORD PTR [ebp+ecx*4+0xff4fe0]
  407773:	add    ch,cl
  407775:	fsub   st,st(7)
  407777:	jnp    0x407795
  407779:	xlat   BYTE PTR ds:[ebx]
  40777a:	dec    BYTE PTR [ebx]
  40777c:	or     BYTE PTR [eax+ebp*1+0x68],al
  407780:	dec    eax
  407781:	and    al,0xee
  407783:	mov    esi,0xe8075f17
  407788:	mov    cl,0x8c
  40778a:	(bad)  
  40778b:	inc    DWORD PTR [edi]
  40778d:	pop    edi
  40778e:	idiv   edi
  407790:	jge    0x4077be
  407792:	(bad)  
  407793:	jne    0x407795
  407795:	int3   
  407796:	shr    BYTE PTR [ebx+0x75fed8c7],0xbc
  40779d:	fdiv   DWORD PTR [esp+edi*8-0x39]
  4077a1:	pop    esi
  4077a2:	pop    es
  4077a3:	call   0x400433
  4077a8:	(bad)  
  4077a9:	pop    esi
  4077aa:	sti    
  4077ab:	call   0x400164
  4077b0:	xchg   ecx,eax
  4077b1:	aad    0x7
  4077b3:	add    BYTE PTR ds:0x8c83ebad,ch
  4077b9:	retf   
  4077ba:	push   ebp
  4077bb:	(bad)  
  4077bc:	mov    ebp,0xfbade727
  4077c1:	xlat   BYTE PTR ds:[ebx]
  4077c2:	dec    BYTE PTR [ebx]
  4077c4:	pop    eax
  4077c5:	pop    esi
  4077c6:	add    al,0x5e
  4077c8:	popa   
  4077c9:	aad    0x7
  4077cb:	add    BYTE PTR [ecx],dh
  4077cd:	mov    eax,0xde01efbd
  4077d2:	int    0xb
  4077d4:	cdq    
  4077d5:	jbe    0x407766
  4077d7:	inc    DWORD PTR [eax]
  4077d9:	add    BYTE PTR [esi-0x4af0bcde],al
  4077df:	ret    
  4077e0:	add    al,BYTE PTR [eax]
  4077e2:	xor    esi,edi
  4077e4:	int    0xfb
  4077e6:	pop    ecx
  4077e7:	loop   0x40777d
  4077e9:	jmp    DWORD PTR [esi-0x5c]
  4077ec:	mov    ebp,0x47905eeb
  4077f1:	(bad)  
  4077f2:	fdiv   QWORD PTR [eax]
  4077f4:	inc    ebx
  4077f5:	jne    0x407840
  4077f7:	add    eax,0x2e46ae52
  4077fc:	ja     0x407873
  4077fe:	dec    ebp
  4077ff:	adc    bh,BYTE PTR [edx-0x3d9ac099]
  407805:	inc    DWORD PTR [ebp+eax*2+0x3d3180c5]
  40780c:	push   cs
  40780d:	shl    BYTE PTR [ebx+edi*1+0x4caa3d2e],0xac
  407815:	cmc    
  407816:	dec    ecx
  407817:	cld    
  407818:	add    ebp,eax
  40781a:	lods   al,BYTE PTR ds:[esi]
  40781b:	in     eax,dx
  40781c:	add    eax,DWORD PTR [eax]
  40781e:	xor    ch,BYTE PTR [ebp-0x73]
  407821:	jne    0x40782c
  407823:	aad    0x8
  407825:	cmp    DWORD PTR [eax+0x3d],esi
  407828:	(bad)  
  40782a:	inc    esi
  40782b:	mov    esp,0x7d2a0003
  407830:	mov    ecx,0x8d21ca01
  407835:	adc    bh,dh
  407837:	cmp    al,0x3
  407839:	push   eax
  40783a:	arpl   WORD PTR [esi+0xe7b8],bp
  407840:	mov    esi,0xb8e80b2f
  407845:	mov    esi,0x140bff42
  40784a:	ror    DWORD PTR [ebx+0x41f9441],0x24
  407851:	(bad)
  407856:	pop    DWORD PTR [ebx+0x4]
  407859:	sbb    al,0x51
  40785b:	push   eax
  40785c:	fld    TBYTE PTR [esi]
  40785e:	ds inc ebx
  407860:	add    al,0x30
  407862:	ss mov ecx,0xbb42e8a
  407868:	pop    ecx
  407869:	daa    
  40786a:	push   ebx
  40786b:	inc    ebx
  40786c:	cs xchg sp,ax
  40786f:	das    
  407870:	dec    ecx
  407871:	add    BYTE PTR [edi+0x43],al
  407874:	push   esi
  407875:	mov    al,ds:0x3be133a4
  40787a:	call   0xdf04:0x122e4677
  407881:	pop    esp
  407882:	sub    ecx,DWORD PTR [ecx+esi*1]
  407885:	leave  
  407886:	popa   
  407887:	xor    BYTE PTR [edx+0x26ade558],dh
  40788d:	mov    esp,0x1ca442f3
  407892:	rol    esi,0xcb
  407895:	sub    eax,0x30748cce
  40789a:	push   ecx
  40789b:	inc    esi
  40789c:	dec    ecx
  40789d:	shr    eax,cl
  40789f:	inc    edx
  4078a0:	test   BYTE PTR [ecx+eax*8],bl
  4078a3:	push   0x0
  4078a5:	add    ch,dh
  4078a7:	sub    eax,0xb5eeadae
  4078ac:	add    al,0xfd
  4078ae:	jno    0x4078c4
  4078b0:	adc    DWORD PTR [eax+ebx*1],ecx
  4078b3:	shr    eax,cl
  4078b5:	inc    edx
  4078b6:	sbb    al,0xd0
  4078b8:	mov    edi,0x8535cec4
  4078bd:	jae    0x407885
  4078bf:	sub    eax,0xa4543f2
  4078c4:	add    BYTE PTR [ecx],al
  4078c6:	push   es
  4078c7:	in     al,dx
  4078c8:	inc    eax
  4078c9:	jmp    0x9908ae50
  4078ce:	repz sub al,0x50
  4078d1:	mov    ecx,0x4107a6f3
  4078d6:	dec    edi
  4078d7:	dec    DWORD PTR cs:[esi+0x5a]
  4078db:	push   esi
  4078dc:	lods   eax,DWORD PTR ds:[esi]
  4078dd:	inc    esi
  4078de:	repz mov ecx,0x62205119
  4078e4:	push   DWORD PTR [esi]
  4078e6:	daa    
  4078e7:	push   esp
  4078e8:	je     0x4078ee
  4078ea:	popf   
  4078eb:	dec    esi
  4078ec:	cmp    BYTE PTR [eax+0x4ae7c432],ch
  4078f2:	in     eax,0x2c
  4078f4:	inc    DWORD PTR [ecx-0x16bf13f9]
  4078fa:	bound  esi,QWORD PTR ds:0x2cf33898
  407900:	push   eax
  407901:	cdq    
  407902:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407904:	pop    es
  407905:	add    DWORD PTR [edi+0xeeff2d],edi
  40790b:	add    BYTE PTR [ebx-0x7a],bl
  40790e:	lods   eax,DWORD PTR ds:[esi]
  40790f:	out    0x70,al
  407911:	mov    edx,0x6393d11b
  407916:	call   esi
  407918:	and    al,0x54
  40791a:	je     0x407920
  40791c:	fisttp QWORD PTR [ebp+0x38]
  40791f:	sub    BYTE PTR ds:0x823ae7c4,ch
  407925:	sub    eax,0xec4441ff
  40792a:	inc    eax
  40792b:	jmp    0x58a8ae32
  407930:	jo     0x40795f
  407932:	push   eax
  407933:	cmp    DWORD PTR [eax-0x59],esi
  407936:	pop    es
  407937:	sub    DWORD PTR [ebp+ebp*1-0x49e27101],0xd2af00ac
  407942:	imul   esp,DWORD PTR [ebx],0xffb0a1a0
  407948:	aas    
  407949:	pop    ds
  40794a:	shl    BYTE PTR [ebp+esi*2+0x78],0xde
  40794f:	cmp    cl,bl
  407951:	adc    BYTE PTR [eax-0x18],dl
  407954:	retf   
  407955:	mov    eax,ds:0xff70fffe
  40795a:	aaa    
  40795b:	inc    ecx
  40795c:	cwde   
  40795d:	inc    eax
  40795e:	out    0x38,eax
  407960:	or     ebx,edx
  407962:	(bad)  
  407963:	push   eax
  407964:	cwde   
  407965:	shl    DWORD PTR [eax+ecx*1-0x10],cl
  407969:	inc    esi
  40796a:	std    
  40796b:	call   FWORD PTR [edi]
  40796d:	add    BYTE PTR [esi],dh
  40796f:	lods   eax,DWORD PTR ds:[esi]
  407970:	add    BYTE PTR [eax],al
  407972:	psrlq  mm7,mm6
  407975:	jne    0x4079b3
  407977:	shl    DWORD PTR [eax+ecx*1+0x30],cl
  40797b:	mov    ecx,0xd93fffa9
  407980:	rol    DWORD PTR [eax+ebx*2],0x45
  407984:	mov    ch,ah
  407986:	leave  
  407987:	fcmovnu st,st(3)
  407989:	idiv   DWORD PTR [edi]
  40798b:	ror    DWORD PTR [ebp+eax*2+0x75fe481c],cl
  407992:	sub    ch,dl
  407994:	je     0x4079a2
  407996:	add    BYTE PTR [ebp+0x7e],ah
  407999:	add    BYTE PTR [eax],cl
  40799b:	sbb    eax,eax
  40799d:	setne  BYTE PTR [ebp-0x22e7ffff]
  4079a4:	inc    esp
  4079a5:	clc    
  4079a6:	or     BYTE PTR [eax],bl
  4079a8:	add    BYTE PTR [eax],al
  4079aa:	(bad)  
  4079ab:	push   edx
  4079ac:	repz call edi
  4079af:	pop    ss
  4079b0:	add    BYTE PTR [edx-0x28],ch
  4079b3:	jns    0x4079b4
  4079b5:	imul   ecx,eax,0x318cff79
  4079bb:	clc    
  4079bc:	aaa    
  4079bd:	push   eax
  4079be:	mov    esp,0xc6f736b0
  4079c3:	xchg   edx,eax
  4079c4:	sar    esi,cl
  4079c6:	inc    esp
  4079c7:	xchg   ebp,eax
  4079c8:	inc    eax
  4079c9:	jne    0x407980
  4079cb:	xchg   ebp,eax
  4079cc:	ret    0x317e
  4079cf:	cmp    eax,0x381dc00c
  4079d4:	sub    al,BYTE PTR [ecx+0x3d300000]
  4079da:	add    ebp,DWORD PTR [eax+0x64]
  4079dd:	adc    eax,0x408fffc3
  4079e2:	adc    ebp,eax
  4079e4:	or     eax,0xe1ff3fad
  4079e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ea:	push   edx
  4079eb:	lea    ebp,[ecx+ebp*8-0x729100c9]
  4079f2:	aad    0xe7
  4079f4:	std    
  4079f5:	int3   
  4079f6:	aas    
  4079f7:	jmp    FWORD PTR [eax+0x56f732b0]
  4079fd:	add    ch,BYTE PTR [ebx]
  4079ff:	stos   BYTE PTR es:[edi],al
  407a00:	popf   
  407a01:	sbb    al,BYTE PTR [eax+0x6a]
  407a04:	xor    DWORD PTR [ebp+0x3cf038ff],eax
  407a0a:	inc    eax
  407a0b:	mov    ch,0x41
  407a0d:	sub    bh,BYTE PTR [edi]
  407a0f:	jmp    FWORD PTR [esi]
  407a11:	mov    al,ds:0x81d4e80e
  407a16:	aas    
  407a17:	jmp    FWORD PTR [eax+0x16f727af]
  407a1d:	inc    edx
  407a1e:	stos   BYTE PTR es:[edi],al
  407a1f:	call   DWORD PTR [esi+0x3140fcf0]
  407a25:	push   edx
  407a26:	jns    0x407a18
  407a28:	push   es
  407a29:	push   0x3f
  407a2b:	(bad)  
  407a2c:	jl     0x407a5f
  407a2e:	sub    edx,DWORD PTR [edx-0x76c08662]
  407a34:	lods   al,BYTE PTR ds:[esi]
  407a35:	adc    ecx,DWORD PTR [ecx+0x132ade37]
  407a3b:	add    al,0x0
  407a3d:	add    BYTE PTR [ecx-0x8],cl
  407a40:	iret   
  407a41:	(bad)  
  407a42:	into   
  407a43:	sub    DWORD PTR [esp+esi*1-0x42],edx
  407a47:	sub    al,BYTE PTR [esi-0x6ee7bbc1]
  407a4d:	mov    bh,0x87
  407a4f:	sub    dh,BYTE PTR [esi-0x73]
  407a52:	mov    ah,0x37
  407a54:	jbe    0x407a95
  407a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a57:	mov    ebp,0xed63abe8
  407a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5d:	add    edx,DWORD PTR [esi-0x71c8a6a0]
  407a63:	sub    cl,BYTE PTR [esi-0x47]
  407a66:	cmp    bh,BYTE PTR [eiz*4+0x702a7e6e]
  407a6d:	mov    DWORD PTR [ecx-0x24c0c9de],ecx
  407a73:	adc    eax,ecx
  407a75:	into   
  407a76:	sub    ebp,edx
  407a78:	call   0x16641ebb
  407a7d:	aas    
  407a7e:	push   esi
  407a7f:	sub    bl,BYTE PTR [edi+ecx*1+0x3f3dd459]
  407a86:	inc    esi
  407a87:	pushf  
  407a88:	ins    BYTE PTR es:[edi],dx
  407a89:	pusha  
  407a8a:	inc    esi
  407a8b:	sub    bh,dh
  407a8d:	xor    BYTE PTR [edi+ebp*1-0x2],0x3e
  407a92:	cs adc eax,0x67b20c74
  407a98:	leave  
  407a99:	ss push ds
  407a9b:	sub    ch,cl
  407a9d:	mov    bh,0x8d
  407a9f:	xchg   ebp,eax
  407aa0:	xchg   esp,eax
  407aa1:	das    
  407aa2:	add    BYTE PTR [eax],al
  407aa4:	push   es
  407aa5:	sub    cl,dh
  407aa7:	add    edi,DWORD PTR [ebp-0x38]
  407aaa:	imul   eax,DWORD PTR [eax+0x3ebe2209],0x19ffa031
  407ab4:	popf   
  407ab5:	sub    edi,edi
  407ab7:	mov    esi,0xf1752964
  407abc:	or     ch,BYTE PTR [ebp+0x29179ea7]
  407ac2:	mov    ch,0x85
  407ac4:	pop    es
  407ac5:	sub    edi,edi
  407ac7:	mov    cs,WORD PTR [ecx+0x4ab6e811]
  407acd:	sub    edi,edi
  407acf:	jle    0x407b0a
  407ad1:	cmp    al,0xf7
  407ad3:	jbe    0x407b44
  407ad5:	sub    DWORD PTR [ebp-0x1f],esi
  407ad8:	pop    edx
  407ad9:	push   ebx
  407ada:	test   al,0x66
  407adc:	pop    edi
  407add:	sub    DWORD PTR [ebp-0xd6a0bb],esi
  407ae3:	push   esi
  407ae4:	leave  
  407ae5:	adc    eax,ebp
  407ae7:	call   0x33f9:0x46ff291a
  407aee:	idiv   DWORD PTR [esi]
  407af0:	aaa    
  407af1:	sub    DWORD PTR [ebp-0x1f],esi
  407af4:	sbb    ch,BYTE PTR [edi-0x58]
  407af7:	cs daa 
  407af9:	sub    DWORD PTR [ebp-0xd6d8bb],esi
  407aff:	push   ds
  407b00:	cdq    
  407b01:	adc    eax,ebp
  407b03:	jle    0x407adf
  407b05:	sub    bh,bh
  407b07:	push   cs
  407b08:	add    BYTE PTR [eax],al
  407b0a:	leave  
  407b0b:	das    
  407b0c:	test   DWORD PTR [esi],0x52a13bff
  407b12:	imul   DWORD PTR [eax]
  407b14:	(bad)  
  407b15:	cmp    al,0x52
  407b17:	and    edi,edi
  407b19:	out    dx,al
  407b1a:	pop    ebx
  407b1b:	sub    BYTE PTR [ebx-0x4ad6a31a],0xcd
  407b22:	pop    esp
  407b23:	sub    edi,edi
  407b25:	sar    DWORD PTR [eax+0x44ceff7c],0x5f
  407b2c:	call   0xff273a31
  407b31:	call   0x3f36be
  407b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b37:	mov    al,ds:0xe697f7db
  407b3c:	out    0x75,eax
  407b3e:	and    edi,0xfffffffe
  407b41:	(bad)  
  407b42:	jge    0x407b24
  407b44:	idiv   bh
  407b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b47:	out    0x74,al
  407b49:	or     al,0xb7
  407b4b:	pusha  
  407b4c:	pop    es
  407b4d:	call   0x3f6247
  407b52:	aaa    
  407b53:	mov    eax,ds:0xe727f7ef
  407b58:	out    0x59,eax
  407b5a:	repz out 0xfe,al
  407b5d:	dec    ebp
  407b5f:	in     al,dx
  407b60:	call   0xff2771b6
  407b65:	jmp    FWORD PTR [ebp-0x18]
  407b68:	out    0xa3,eax
  407b6a:	jne    0x407b80
  407b6c:	add    cl,cl
  407b6e:	add    BYTE PTR [eax],al
  407b70:	dec    edx
  407b71:	add    al,0x0
  407b73:	push   ebp
  407b74:	add    esp,esp
  407b76:	add    ah,0x24
  407b79:	jle    0x407b7a
  407b7b:	imul   edi,DWORD PTR [esi-0x19],0x7b400874
  407b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b83:	push   DWORD PTR [edi]
  407b85:	popf   
  407b86:	inc    ebp
  407b87:	cld    
  407b88:	mov    al,0x4d
  407b8a:	cmp    BYTE PTR [ecx+0x58],al
  407b8d:	jl     0x407b90
  407b8f:	add    BYTE PTR [eax-0x6c],cl
  407b92:	push   DWORD PTR [ebp+0x40]
  407b95:	cld    
  407b96:	idiv   ch
  407b98:	daa    
  407b99:	jmp    0x5321d505
  407b9e:	(bad)  
  407b9f:	(bad)  
  407ba0:	cmp    eax,0x8412834
  407ba5:	jmp    0x5571841e
  407baa:	daa    
  407bab:	std    
  407bac:	push   es
  407bad:	push   edi
  407bae:	cmp    al,0x75
  407bb0:	std    
  407bb1:	dec    esi
  407bb2:	mov    dh,0x7
  407bb4:	or     eax,ebp
  407bb6:	imul   edi,edi,0xffffffee
  407bb9:	je     0x407bfc
  407bbb:	add    al,0x31
  407bbd:	add    BYTE PTR [ecx+0x5f79b0ec],cl
  407bc3:	not    esi
  407bc5:	xchg   BYTE PTR [esi+0x3cedcd45],cl
  407bcb:	jne    0x407bee
  407bcd:	xchg   esi,eax
  407bce:	mov    dh,0xb
  407bd0:	leave  
  407bd1:	stc    
  407bd2:	mov    esi,0xb60000ff
  407bd7:	and    al,BYTE PTR [ebx+0xf]
  407bda:	mov    ah,0xdf
  407bdc:	add    DWORD PTR [eax],eax
  407bde:	xor    DWORD PTR [esi-0x3a],ebp
  407be1:	div    DWORD PTR [ecx]
  407be3:	cmp    eax,0x706e0003
  407be8:	aaa    
  407be9:	push   DWORD PTR [esi]
  407beb:	cmp    eax,0x53316a03
  407bf0:	add    ebp,DWORD PTR [edx+0x31]
  407bf3:	inc    ebx
  407bf4:	add    ecx,DWORD PTR [ebp-0x732d1f14]
  407bfa:	mov    ah,0xe9
  407bfc:	xor    edi,edi
  407bfe:	lea    di,[esi*2-0x44a11a7]
  407c06:	dec    ecx
  407c07:	pop    ds
  407c08:	mov    esi,0x43324eff
  407c0d:	je     0x407c3b
  407c0f:	adc    al,0x82
  407c11:	add    DWORD PTR [ecx],esi
  407c13:	cmp    eax,0x7c09ccab
  407c18:	add    edi,edi
  407c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c1b:	dec    ebp
  407c1c:	sub    edi,DWORD PTR [ecx]
  407c1e:	xlat   BYTE PTR ds:[ebx]
  407c1f:	xor    eax,0x13aa503b
  407c24:	mov    ecx,0xd61fac89
  407c29:	cmp    ecx,DWORD PTR [esi]
  407c2b:	les    edi,FWORD PTR [edx]
  407c2d:	sub    al,0x58
  407c2f:	jbe    0x407bff
  407c31:	cmp    ebp,DWORD PTR [eax-0x9cc4670]
  407c37:	sar    DWORD PTR es:[ebx+0x26980000],1
  407c3e:	mov    dh,0xae
  407c40:	out    0xae,al
  407c42:	dec    esp
  407c43:	std    
  407c44:	jno    0x407c5a
  407c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c47:	jno    0x407c2a
  407c49:	push   ds
  407c4a:	sahf   
  407c4b:	cmp    ecx,esi
  407c4d:	mov    al,ds:0x78b32be4
  407c52:	mov    ?,WORD PTR [ebx]
  407c54:	test   al,0x90
  407c56:	lea    esi,[ebx]
  407c58:	mov    dh,0x26
  407c5a:	adc    eax,DWORD PTR [ecx+ebx*1]
  407c5d:	jl     0x407c0f
  407c5f:	les    esp,FWORD PTR [esi-0x59cbcbdb]
  407c65:	cmp    bx,WORD PTR es:[eax+ebx*1]
  407c6a:	push   ecx
  407c6b:	mov    ds:0x8d5626dd,eax
  407c70:	lods   al,BYTE PTR ds:[esi]
  407c71:	xor    edx,DWORD PTR [esi+0x3b]
  407c74:	jle    0x407c2f
  407c76:	call   0xa82d2926
  407c7b:	add    ebp,DWORD PTR [esi+0x60]
  407c7e:	cmp    DWORD PTR [ebx],esi
  407c80:	data16 es cs mov cl,0x2a
  407c85:	cmp    al,0xb5
  407c87:	push   0x81702656
  407c8c:	pop    ebp
  407c8d:	push   ds
  407c8e:	push   ss
  407c8f:	cmp    ebx,ebx
  407c91:	adc    eax,DWORD PTR [ecx-0x172b076d]
  407c97:	cmp    bh,BYTE PTR [ebx+eiz*1-0xa]
  407c9b:	cmp    ch,BYTE PTR [esi]
  407c9d:	add    BYTE PTR es:[eax+eax*1+0x0],bh
  407ca2:	cs cmp al,0x31
  407ca5:	cmp    al,0x5a
  407ca7:	and    eax,0x1d4a6c89
  407cac:	(bad)  
  407cad:	(bad)  
  407caf:	and    eax,0xd5059c67
  407cb4:	dec    ebp
  407cb6:	and    DWORD PTR [edi+esi*8],0x75253bc6
  407cbd:	in     eax,dx
  407cbe:	sbb    bh,dh
  407cc0:	lods   al,BYTE PTR ds:[esi]
  407cc1:	mov    dh,0x2b
  407cc3:	fwait
  407cc4:	test   DWORD PTR [ebp+0x6aff2523],ecx
  407cca:	pop    ecx
  407ccb:	xor    bh,dh
  407ccd:	sahf   
  407cce:	or     edx,DWORD PTR [esi*2-0x1f985020]
  407cd5:	xchg   esi,eax
  407cd6:	sti    
  407cd7:	and    al,0x0
  407cd9:	std    
  407cda:	xchg   ecx,eax
  407cdb:	xchg   edx,eax
  407cdc:	mov    ebp,0xff25638d
  407ce1:	jmp    0x2cc346bc
  407ce6:	dec    edx
  407ce7:	sbb    eax,0xa03266ff
  407cec:	push   edx
  407ced:	shl    DWORD PTR [edx],1
  407cef:	adc    al,0xef
  407cf1:	xchg   edi,eax
  407cf2:	dec    ebx
  407cf3:	lahf   
  407cf4:	pop    es
  407cf5:	inc    ecx
  407cf6:	bound  ebp,QWORD PTR [edi-0x1]
  407cf9:	inc    esi
  407cfa:	cmp    ebx,DWORD PTR [edi-0x14]
  407cfd:	sub    esp,DWORD PTR ss:0x3c3abcff
  407d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d05:	xchg   DWORD PTR [eax],eax
  407d07:	add    BYTE PTR [ebx],bl
  407d09:	and    eax,0x1d0a5cff
  407d0e:	call   FWORD PTR [esi]
  407d10:	or     ebx,DWORD PTR [edi+0x6ea00107]
  407d16:	dec    DWORD PTR [esi]
  407d18:	sti    
  407d19:	pop    esi
  407d1a:	in     al,0x0
  407d1c:	aaa    
  407d1d:	jmp    0x407d1d
  407d1f:	jmp    DWORD PTR [ebp+0x7688e819]
  407d25:	jmp    0xfff6:0xf165fffe
  407d2c:	por    mm6,QWORD PTR [eax+ecx*1-0x20]
  407d31:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407d33:	(bad)  
  407d34:	fucomip st,st(2)
  407d36:	mov    ah,0xdc
  407d38:	out    0xea,eax
  407d3a:	(bad)  
  407d3b:	push   DWORD PTR ds:0xb66ce818
  407d41:	jmp    0xfff6:0xf465fffe
  407d48:	(bad)  
  407d49:	div    DWORD PTR [ebp-0x57]
  407d4c:	(bad)  
  407d50:	mov    eax,0xb0fffee2
  407d55:	jbe    0x407cff
  407d57:	jmp    FWORD PTR [edi+0x37ecb4ea]
  407d5d:	jmp    0x407d5d
  407d5f:	call   0x3f369c
  407d64:	pop    ds
  407d65:	mov    ch,0xe7
  407d67:	test   DWORD PTR [edi],0x55e7eb
  407d6d:	add    cl,al
  407d6f:	jmp    0xfff6:0xcba5fffe
  407d76:	fcomip st,st(7)
  407d78:	dec    ecx
  407d79:	test   eax,0xb5feeaef
  407d7e:	cmp    bl,ah
  407d80:	(bad)  
  407d81:	jmp    FWORD PTR [edi]
  407d83:	jne    0x407d90
  407d85:	jmp    DWORD PTR [ebp+0xe3de818]
  407d8b:	jmp    0x407d8b
  407d8d:	push   ebp
  407d8f:	fcomip st,st(6)
  407d91:	jmp    FWORD PTR [edi]
  407d93:	clc    
  407d94:	sub    eax,0x38fe31a9
  407d99:	push   esp
  407d9b:	add    ch,BYTE PTR [ebx]
  407d9d:	push   ecx
  407d9e:	aaa    
  407d9f:	or     eax,0x21a4ff39
  407da4:	sub    edi,DWORD PTR [eax-0x56]
  407da7:	sub    eax,0x41f3c903
  407dac:	add    edx,DWORD PTR [ebp-0x56]
  407daf:	dec    ecx
  407db0:	test   ah,al
  407db2:	or     eax,0x1e6a03c8
  407db7:	dec    edx
  407db8:	scas   al,BYTE PTR es:[edi]
  407db9:	pop    es
  407dba:	or     esi,ebp
  407dbc:	popa   
  407dbd:	push   esi
  407dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc0:	mov    ebp,0xfa6f59fb
  407dc5:	inc    eax
  407dc6:	xor    DWORD PTR [edx-0x12],ebp
  407dc9:	pop    ebx
  407dca:	or     ah,ch
  407dcc:	add    edi,edi
  407dce:	pop    esp
  407dcf:	and    eax,0xf62b
  407dd4:	int3   
  407dd5:	cmp    BYTE PTR [eax],0x68
  407dd8:	repz inc esp
  407dda:	ret    0x56ff
  407ddd:	das    
  407dde:	add    eax,DWORD PTR [eax]
  407de0:	mov    cl,0x9a
  407de2:	scas   al,BYTE PTR es:[edi]
  407de3:	pop    es
  407de4:	cdq    
  407de5:	cdq    
  407de6:	jmp    DWORD PTR ss:[esi-0x61045256]
  407ded:	sub    BYTE PTR [ebx],cl
  407def:	call   0xff7910f6
  407df4:	js     0x407de5
  407df6:	(bad)  
  407df7:	(bad)  
  407df8:	fnsave [ebp-0x1e8a7eda]
  407dfe:	das    
  407dff:	push   DWORD PTR [esi-0x58]
  407e02:	mov    ebp,0xade201fb
  407e07:	pcmpgtd mm4,QWORD PTR [eax+0x7]
  407e0b:	call   0x43e448
  407e10:	sub    dl,BYTE PTR [ecx+ebp*1]
  407e13:	or     BYTE PTR [ebx+edx*4+0x5b3103e9],dh
  407e1a:	lods   al,BYTE PTR ds:[esi]
  407e1b:	cmp    esi,DWORD PTR [ecx]
  407e1d:	adc    al,0xe9
  407e1f:	add    ebp,DWORD PTR [esi-0x27]
  407e22:	cld    
  407e23:	aaa    
  407e24:	ss adc al,0xe9
  407e27:	lods   eax,DWORD PTR ds:[esi]
  407e28:	lods   eax,DWORD PTR es:[esi]
  407e2a:	call   0xe8ed9cdc
  407e2f:	xchg   BYTE PTR [eax+ebp*1+0x39],ch
  407e33:	mov    DWORD PTR [edi+eiz*1+0x37d6],esi
  407e3a:	push   es
  407e3b:	(bad)  
  407e3c:	aad    0xb1
  407e3e:	push   es
  407e3f:	and    edx,DWORD PTR [eax+edi*1+0x9]
  407e43:	and    DWORD PTR [ebx+0x4],eax
  407e46:	xor    DWORD PTR [edi],ecx
  407e48:	test   eax,0x1c2f30b0
  407e4d:	mov    DWORD PTR [edi+ebp*1-0x3c29c84a],esi
  407e54:	jae    0x407dd7
  407e56:	lds    ebp,FWORD PTR [edx]
  407e58:	sahf   
  407e59:	aaa    
  407e5a:	popa   
  407e5b:	and    ebx,DWORD PTR [esp+edx*1]
  407e5e:	mov    esi,0x372bdca8
  407e63:	outs   dx,DWORD PTR ds:[esi]
  407e64:	xchg   BYTE PTR [edi],dh
  407e66:	mov    eax,0xa62f7998
  407e6b:	and    ah,dl
  407e6d:	inc    ebx
  407e6e:	and    eax,0x857969f6
  407e73:	sub    ah,BYTE PTR [esi+0x37]
  407e76:	xor    DWORD PTR [eax+0x2286abff],ebp
  407e7c:	inc    esi
  407e7d:	jbe    0x407efd
  407e7f:	push   0x22762f3d
  407e84:	inc    esi
  407e85:	jno    0x407ee8
  407e87:	sub    bh,BYTE PTR [esi]
  407e89:	aaa    
  407e8a:	data16 test al,0xff
  407e8d:	loopne 0x407e99
  407e8f:	push   ebx
  407e90:	leave  
  407e91:	cs push ds
  407e93:	and    esi,DWORD PTR [ebp-0xdce1e7]
  407e99:	adc    DWORD PTR [esi+0x7a],ecx
  407e9c:	call   DWORD PTR [esi]
  407e9e:	add    BYTE PTR [eax],al
  407ea0:	push   es
  407ea1:	fincstp 
  407ea3:	add    ch,BYTE PTR [ebp+0x5d057522]
  407ea9:	mov    al,ds:0x4b32e979
  407eae:	ret    0x32e5
  407eb1:	(bad)  
  407eb2:	mov    bh,ch
  407eb4:	mov    bl,0x58
  407eb6:	cld    
  407eb7:	push   ebx
  407eb8:	xor    eax,0xc1de17ae
  407ebd:	sbb    eax,ebp
  407ebf:	sub    eax,0x60ff2190
  407ec4:	icebp  
  407ec5:	sbb    eax,0xd4edce68
  407eca:	(bad)  
  407ecb:	mov    ebp,0x2828bde1
  407ed0:	xor    eax,0xae17521
  407ed5:	idiv   esi
  407ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ed8:	pop    es
  407ed9:	lods   al,BYTE PTR ds:[esi]
  407eda:	out    0xe0,al
  407edc:	in     eax,dx
  407edd:	and    DWORD PTR [edi-0x15],esp
  407ee0:	xor    dl,BYTE PTR [eax+eax*4]
  407ee3:	mov    es,WORD PTR [ecx+0x67dae819]
  407ee9:	and    edi,edi
  407eeb:	adc    DWORD PTR ds:0x67e940de,ebp
  407ef1:	out    0x5b,eax
  407ef3:	shr    BYTE PTR [ebp+0x21],0xfe
  407ef7:	fdivr  QWORD PTR [edx]
  407ef9:	sub    al,0x0
  407efb:	pop    esi
  407efc:	aas    
  407efd:	and    DWORD PTR [eax-0x17],ebp
  407f00:	js     0x407ed6
  407f02:	inc    eax
  407f04:	add    BYTE PTR [eax],al
  407f06:	xor    BYTE PTR [eax+eax*1],dl
  407f09:	add    al,bl
  407f0b:	jmp    0xf7408784
  407f10:	std    
  407f11:	jmp    DWORD PTR [edi]
  407f13:	jmp    0xe807:0x6407fc74
  407f1a:	push   0xffffffb4
  407f1c:	(bad)  
  407f1d:	inc    DWORD PTR [ecx]
  407f1f:	rol    DWORD PTR [ebx],cl
  407f21:	add    BYTE PTR [ebp-0x72],bh
  407f24:	in     al,dx
  407f25:	call   FWORD PTR [ebp-0x7c0b17e7]
  407f2b:	jmp    0x6838:0x71580bfe
  407f32:	cmc    
  407f33:	sbb    al,BYTE PTR [eax+0x0]
  407f36:	mov    eax,0x17ab88ec
  407f3b:	out    0x4f,eax
  407f3d:	push   eax
  407f3e:	pusha  
  407f3f:	sbb    BYTE PTR [eax],al
  407f41:	out    dx,eax
  407f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f43:	outs   dx,DWORD PTR ds:[esi]
  407f44:	and    bh,BYTE PTR [edx]
  407f46:	dec    ecx
  407f47:	sbb    BYTE PTR [eax-0x1],dl
  407f4a:	sub    eax,0x9450e810
  407f4f:	out    0xfe,al
  407f51:	pop    eax
  407f52:	jo     0x407f69
  407f54:	add    bh,ch
  407f56:	inc    esi
  407f57:	jo     0x407f80
  407f59:	cmp    bl,BYTE PTR [ecx]
  407f5b:	sbb    BYTE PTR [eax-0x1],dl
  407f5e:	sbb    eax,0x943ce810
  407f63:	out    0xfe,al
  407f65:	call   0x3f3e9a
  407f6a:	add    BYTE PTR [eax],al
  407f6c:	loope  0x407f43
  407f6e:	pop    es
  407f6f:	add    BYTE PTR ds:0xcc83ec8b,bh
  407f75:	fld    TBYTE PTR [ecx+0x0]
  407f78:	xor    bh,ch
  407f7a:	(bad)  
  407f7b:	jne    0x407efd
  407f7d:	in     al,dx
  407f7e:	mov    DWORD PTR [edi+eiz*8+0x314588e6],esp
  407f85:	(bad)  
  407f86:	test   eax,0xb477619
  407f8b:	call   0xff755954
  407f90:	fisttp DWORD PTR ds:0xd3297535
  407f96:	mov    bh,bh
  407f98:	push   esi
  407f99:	icebp  
  407f9a:	test   eax,0xb7f4e1b
  407f9f:	call   0xff758154
  407fa4:	ds jg  0x407fde
  407fa7:	(bad)  
  407fa8:	mov    esp,0xd5a42b32
  407fad:	push   ss
  407fae:	xor    eax,0x339f3c9
  407fb3:	push   ebp
  407fb4:	stos   BYTE PTR es:[edi],al
  407fb5:	sbb    DWORD PTR [ecx-0x51d0ea3c],eax
  407fbb:	or     ebx,DWORD PTR [ecx]
  407fbd:	retf   
  407fbe:	push   0x432306ff
  407fc3:	lgs    ecx,FWORD PTR [edx-0x4bcefffd]
  407fca:	mov    ebp,0x13d8b2fb
  407fcf:	add    BYTE PTR [eax],al
  407fd1:	add    BYTE PTR [ebp+0x2f],bl
  407fd4:	xor    al,0x75
  407fd6:	inc    ecx
  407fd7:	data16 scas al,BYTE PTR es:[edi]
  407fd9:	sti    
  407fda:	leave  
  407fdb:	push   edx
  407fdc:	imul   edi,edi,0xfbbda4ce
  407fe2:	pop    ecx
  407fe3:	in     eax,0xf9
  407fe5:	inc    eax
  407fe6:	xor    DWORD PTR [esi-0x49360452],eax
  407fec:	push   0xabfdaeff
  407ff1:	jmp    DWORD PTR [esi-0x61af8a72]
  407ff7:	and    BYTE PTR [ebx],cl
  407ff9:	call   0xff74f570
  407ffe:	cdq    
  407fff:	adc    al,0x3d
  408001:	pop    ebp
  408002:	xchg   BYTE PTR [edi],bl
  408004:	shr    DWORD PTR [ebp+0x34e8d538],1
  40800a:	cld    
  40800b:	pop    ds
  40800c:	inc    ecx
  40800d:	popf   
  40800e:	cwde   
  40800f:	pop    ds
  408010:	inc    esi
  408011:	ror    esi,cl
  408013:	adc    al,0xe9
  408015:	and    al,0x9f
  408017:	les    esi,FWORD PTR ds:0x8b2c2eae
  40801d:	dec    ebx
  40801e:	dec    esi
  40801f:	pop    ds
  408020:	adc    DWORD PTR [eax-0x71],esi
  408023:	pop    ds
  408024:	push   ds
  408025:	stos   DWORD PTR es:[edi],eax
  408026:	fcmovu st,st(1)
  408028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408029:	add    esi,DWORD PTR [esi]
  40802b:	test   eax,0x6a742b0c
  408030:	push   es
  408031:	xor    al,0x81
  408033:	lods   al,BYTE PTR ds:[esi]
  408034:	call   0xe40803c
  408039:	pop    esi
  40803a:	cdq    
  40803b:	xor    al,0x9c
  40803d:	or     al,0x1
  40803f:	cmp    cl,0x1e
  408042:	out    0x1c,al
  408044:	mov    ds:0x8933de75,eax
  408049:	xchg   ecx,eax
  40804a:	adc    eax,ebp
  40804c:	neg    BYTE PTR ds:0xf7d93054
  408052:	xchg   edx,eax
  408053:	xor    esp,esi
  408055:	ret    
  408056:	push   eax
  408057:	add    eax,0xd4772f31
  40805c:	xlat   BYTE PTR ds:[ebx]
  40805d:	test   al,0xe0
  40805f:	sbb    edx,DWORD PTR [ecx+0x4c]
  408062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408063:	xor    ebx,ecx
  408065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408066:	inc    esi
  408067:	xor    edi,DWORD PTR [esi-0x36cfe3e2]
  40806d:	lods   al,BYTE PTR ds:[esi]
  40806e:	inc    esi
  40806f:	xor    ebp,DWORD PTR [esi+0x3100ab4c]
  408075:	leave  
  408076:	jno    0x408098
  408078:	mov    dl,0x57
  40807a:	add    BYTE PTR [ebp-0x49],dh
  40807d:	push   ds
  40807e:	imul   edx,ebx,0x5107a943
  408084:	push   es
  408085:	jae    0x408086
  408087:	pop    esi
  408088:	cld    
  408089:	fdivr  st,st(3)
  40808b:	ret    
  40808c:	xor    ch,BYTE PTR [edx+0x16a84e19]
  408092:	call   0xff5fa2a2
  408097:	shl    DWORD PTR [edx],cl
  408099:	stos   BYTE PTR es:[edi],al
  40809a:	and    dh,BYTE PTR [esi]
  40809c:	add    BYTE PTR [eax],al
  40809e:	cwde   
  40809f:	push   ss
  4080a0:	call   0xff5f847c
  4080a5:	xchg   ebx,eax
  4080a6:	xor    ch,BYTE PTR [edx+0x16781e1b]
  4080ac:	call   0xff5f8494
  4080b1:	or     DWORD PTR [edx+ebx*8-0x43b16c0],0x361a74fe
  4080bc:	sti    
  4080bd:	mul    DWORD PTR [ebx+0x1d]
  4080c0:	push   0xffd51f43
  4080c5:	push   edx
  4080c6:	push   cs
  4080c7:	pop    ds
  4080c8:	jne    0x4080bb
  4080ca:	sbb    dh,BYTE PTR [eax]
  4080cc:	(bad)  
  4080cd:	(bad)  
  4080ce:	inc    ebx
  4080cf:	lods   al,BYTE PTR ds:[esi]
  4080d0:	test   eax,0x691df413
  4080d5:	in     eax,0x23
  4080d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d8:	pop    es
  4080d9:	rol    DWORD PTR [ecx+0x23b6ff1e],1
  4080df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e0:	sti    
  4080e1:	scas   al,BYTE PTR es:[edi]
  4080e2:	mov    DWORD PTR ds:0x1d4e1be8,edx
  4080e8:	push   DWORD PTR [eax+0x3c001874]
  4080ee:	xor    BYTE PTR ss:[ecx-0xdab55b],al
  4080f5:	add    BYTE PTR [edi+0x38fc4594],ch
  4080fb:	loope  0x408171
  4080fd:	adc    BYTE PTR [edi],bl
  4080ff:	pop    esp
  408100:	or     ebp,eax
  408102:	add    BYTE PTR [eax],al
  408104:	shr    BYTE PTR [ecx-0x1],0xff
  408108:	adc    ecx,0xe
  40810b:	test   edi,edx
  40810d:	sbb    BYTE PTR [eax],al
  40810f:	add    BYTE PTR [edi+0x4c],al
  408112:	test   DWORD PTR [eax],0xc7001158
  408118:	xchg   ebp,eax
  408119:	in     eax,0xfe
  40811b:	pop    es
  40811c:	dec    eax
  40811d:	adc    DWORD PTR [edx+0x0],ebp
  408120:	jb     0x408133
  408122:	push   0x0
  408124:	jb     0x408137
  408126:	lea    eax,[ebp+0x24]
  408129:	inc    ecx
  40812a:	mov    WORD PTR [ebp-0x125dc],es
  408130:	js     0x408114
  408132:	je     0x40812c
  408134:	aas    
  408135:	pop    esp
  408136:	sti    
  408137:	call   0x3fea5e
  40813c:	and    edx,ecx
  40813e:	jae    0x408145
  408140:	xor    DWORD PTR [edi],ebx
  408142:	add    BYTE PTR [eax],al
  408144:	sbb    BYTE PTR [ecx-0x34],bh
  408147:	sub    BYTE PTR [ecx+0x18],bl
  40814a:	push   DWORD PTR [ebp-0x8]
  40814d:	clc    
  40814e:	sub    al,0xa9
  408150:	(bad)  
  408152:	dec    edi
  408153:	mov    ebp,DWORD PTR [eax-0x580b7b64]
  408159:	loop   0x408159
  40815b:	push   eax
  40815c:	cmp    al,BYTE PTR [eax]
  40815e:	sbb    eax,0x88e29fa9
  408163:	test   DWORD PTR [eax+0xfffeda],ecx
  408169:	add    BYTE PTR [eax-0x60005b9a],ah
  40816f:	jge    0x408170
  408171:	xor    DWORD PTR [si],esi
  408174:	in     al,dx
  408175:	inc    eax
  408176:	xor    DWORD PTR [esi-0x6a610f89],ecx
  40817c:	xor    edi,edi
  40817e:	and    al,0x2f
  408180:	sbb    esi,DWORD PTR [esi-0x37]
  408183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408184:	xor    BYTE PTR [ecx-0xc7614c],cl
  40818a:	xchg   BYTE PTR [eax+0x3],al
  40818d:	push   0xffc2f224
  408192:	ja     0x408213
  408194:	xor    al,0xf7
  408196:	outs   dx,BYTE PTR ds:[esi]
  408197:	int    0x30
  408199:	jne    0x4081d0
  40819b:	ret    
  40819c:	int3   
  40819d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819e:	pop    esi
  40819f:	fnstsw WORD PTR [edx-0x7b]
  4081a2:	dec    ecx
  4081a3:	fnsave [eax]
  4081a5:	push   DWORD PTR [edx+0x46f71faf]
  4081ab:	cmc    
  4081ac:	add    esi,DWORD PTR [ecx+eax*1-0x7d]
  4081b0:	add    eax,DWORD PTR [eax]
  4081b2:	inc    esi
  4081b3:	les    ebx,FWORD PTR [ebx+0x36c6bd0]
  4081b9:	(bad)  
  4081ba:	fadd   QWORD PTR [ecx]
  4081bc:	cmp    edi,edi
  4081be:	push   ds
  4081bf:	sbb    esi,DWORD PTR [esi+0x3b170907]
  4081c5:	dec    DWORD PTR [esi]
  4081c7:	xchg   esi,eax
  4081c8:	add    al,BYTE PTR [eax]
  4081ca:	push   ss
  4081cb:	je     0x408168
  4081cd:	fiadd  DWORD PTR [eax]
  4081cf:	add    BYTE PTR [ebx],bh
  4081d1:	in     al,dx
  4081d2:	add    edi,edi
  4081d4:	mov    esp,0xeeff3851
  4081d9:	dec    edx
  4081da:	mov    dh,0x7
  4081dc:	fnstcw WORD PTR [esi+0x3a]
  4081df:	(bad)  
  4081e0:	fisubr WORD PTR [esi+0x62dee86d]
  4081e6:	xor    BYTE PTR [eax],al
  4081e8:	inc    ebp
  4081e9:	sbb    eax,0x14c6ff9b
  4081ee:	xchg   esi,eax
  4081ef:	jno    0x40823a
  4081f1:	inc    ebp
  4081f2:	jecxz  0x4081b6
  4081f4:	mov    dh,0x1a
  4081f6:	pop    esp
  4081f7:	sbb    esp,DWORD PTR [esi+0x1c308e1b]
  4081fd:	or     al,0x91
  4081ff:	jne    0x408269
  408201:	sbb    edi,DWORD PTR [esi-0x65]
  408204:	xor    DWORD PTR [esi+eax*4],edx
  408207:	jno    0x408222
  408209:	aas    
  40820a:	mov    bl,0xc2
  40820c:	xchg   BYTE PTR [edx],bl
  40820e:	pushf  
  40820f:	sbb    eax,DWORD PTR [esi-0x3cfa1e5]
  408215:	or     eax,DWORD PTR [ecx-0x73]
  408218:	js     0x408235
  40821a:	dec    esi
  40821b:	xor    BYTE PTR [eax+ebp*1+0x2c5e303e],bl
  408222:	sub    DWORD PTR [edi+0x56],esp
  408225:	sbb    esi,DWORD PTR [esi]
  408227:	jbe    0x408282
  408229:	and    ebp,DWORD PTR [esi]
  40822b:	xor    BYTE PTR [ecx+0x61],bl
  40822e:	dec    ebp
  40822f:	xor    BYTE PTR [esi],bh
  408231:	sbb    edx,DWORD PTR [ebx+esi*1+0x0]
  408235:	add    BYTE PTR [esi],bh
  408237:	sbb    edx,DWORD PTR [esi]
  408239:	xor    BYTE PTR [eax+ecx*1+0x2c2eb60e],ah
  408240:	cmp    eax,0xfe1b1e31
  408245:	jne    0x408268
  408247:	and    esi,esi
  408249:	das    
  40824a:	sbb    DWORD PTR [ebp+0x45],edi
  40824d:	xor    BYTE PTR [esi],al
  40824f:	sbb    ebp,DWORD PTR [esp+ebp*1]
  408252:	or     BYTE PTR [edi+ebx*8+0x2f],cl
  408256:	neg    BYTE PTR [edx]
  408258:	pop    esp
  408259:	xor    cl,bl
  40825b:	ss push edi
  40825d:	add    al,0x31
  40825f:	dec    ebp
  408260:	stos   DWORD PTR es:[edi],eax
  408261:	add    BYTE PTR [ecx],dh
  408263:	shl    DWORD PTR [ecx+0x20],0xd6
  408267:	mov    al,ds:0x4d2ae4ff
  40826c:	test   al,0xae
  40826e:	push   ss
  40826f:	xadd   BYTE PTR ds:0xe3e4b2cc,bl
  408276:	in     eax,dx
  408277:	sbb    cl,BYTE PTR [edi-0x7f]
  40827a:	jg     0x4082ee
  40827c:	dec    DWORD PTR [esi-0x16983583]
  408282:	xor    ch,BYTE PTR [ebx]
  408284:	mov    esi,0x40ddfc11
  408289:	jmp    0xe1b59bf0
  40828e:	sub    dh,cl
  408290:	enter  0x4e66,0xbc
  408294:	addr16 call 0xc1feadcc
  40829a:	add    BYTE PTR [eax],al
  40829c:	sti    
  40829d:	fld    QWORD PTR [eax-0x17]
  4082a0:	sbb    BYTE PTR [ecx],0x75
  4082a3:	icebp  
  4082a4:	cmp    al,BYTE PTR ds:0x2c063ec9
  4082aa:	cmp    eax,0xc91b1e8d
  4082af:	sub    eax,DWORD PTR [ebp+0x1a]
  4082b2:	push   esp
  4082b3:	jb     0x4082c6
  4082b5:	xchg   edi,eax
  4082b6:	les    ebx,FWORD PTR ds:0xe969c15f
  4082bc:	enter  0xfefe,0x94
  4082c0:	sub    dh,BYTE PTR [edx]
  4082c2:	pop    ebp
  4082c3:	dec    eax
  4082c4:	dec    esi
  4082c5:	sbb    DWORD PTR [ecx+0x358d46a4],ecx
  4082cb:	jl     0x4082b7
  4082cd:	aam    0xff
  4082cf:	popa   
  4082d0:	add    BYTE PTR [ebp-0x6bcad7d9],bl
  4082d6:	aas    
  4082d7:	jmp    0xe9fc18d3
  4082dc:	xor    dl,BYTE PTR [eax+ebp*2]
  4082df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e0:	fcom   st(4)
  4082e2:	(bad)  
  4082e3:	(bad)  
  4082e4:	ds clc 
  4082e6:	scas   eax,DWORD PTR es:[edi]
  4082e7:	jbe    0x4082b1
  4082e9:	adc    eax,0x5a0cc00b
  4082ee:	aas    
  4082ef:	add    al,0x15
  4082f2:	je     0x409847
  4082f8:	clc    
  4082f9:	ja     0x4082c0
  4082fb:	cmp    bl,BYTE PTR [ecx+0x10]
  4082fe:	call   0x3c4083f0
  408303:	adc    BYTE PTR [eax],al
  408305:	pop    edx
  408306:	mov    edx,ebx
  408308:	dec    edi
  408309:	call   0x3f370f
  40830e:	sub    BYTE PTR [eax+0x67],al
  408311:	add    BYTE PTR [eax+0x3968bdfa],bl
  408317:	sub    eax,DWORD PTR [eax+0x0]
  40831a:	mov    eax,0xf00874ea
  40831f:	mov    cl,al
  408321:	push   edi
  408323:	dec    esp
  408324:	add    DWORD PTR [bx+si-0x6],ecx
  408328:	mov    ebp,0x402b1368
  40832d:	add    BYTE PTR [eax-0xff78b16],ch
  408333:	mov    cs,eax
  408335:	call   DWORD PTR [edi]
  408337:	std    
  408338:	mov    cl,0xa3
  40833a:	pop    ss
  40833b:	jmp    0x4139:0xa6b043ea
  408342:	sbb    BYTE PTR [edx-0x19],al
  408345:	inc    ecx
  408346:	sahf   
  408347:	adc    eax,0x61480b00
  40834c:	xor    edx,DWORD PTR [esi+0x30]
  40834f:	jno    0x4082fd
  408351:	call   DWORD PTR [edi]
  408353:	inc    esi
  408354:	dec    edi
  408355:	push   0xbeef1508
  40835a:	pusha  
  40835b:	lds    edi,FWORD PTR [ecx]
  40835d:	inc    ecx
  40835e:	xor    DWORD PTR [ebx],ebp
  408360:	sar    esi,cl
  408362:	pop    esp
  408363:	xor    ebx,DWORD PTR [ebx]
  408365:	push   ebp
  408366:	add    BYTE PTR [eax],al
  408368:	jmp    0x4998b0be
  40836d:	sub    al,0x3
  40836f:	out    dx,eax
  408370:	(bad)  
  408371:	ror    BYTE PTR [eax+0x3a],cl
  408374:	jo     0x4083a1
  408376:	sar    esi,cl
  408378:	inc    esp
  408379:	and    ebx,DWORD PTR [ebx]
  40837b:	inc    ecx
  40837c:	jmp    0x1d28b0fa
  408381:	into   
  408382:	sub    al,0xff
  408384:	call   0xb62b:0x5f7fc52b
  40838b:	stc    
  40838c:	out    dx,eax
  40838d:	xchg   esi,eax
  40838e:	lock mov edi,0xff2ca1c8
  408394:	xchg   BYTE PTR [ebp+ebx*2-0x79ddc9c8],bl
  40839b:	inc    ebp
  40839c:	jbe    0x408357
  40839e:	sub    al,0x6a
  4083a0:	dec    ebx
  4083a1:	ret    0x7b6
  4083a4:	pop    ecx
  4083a5:	in     eax,dx
  4083a6:	sub    eax,0xe0445eff
  4083ab:	(bad)  
  4083ac:	fsub   QWORD PTR [edx]
  4083ae:	sbb    edi,DWORD PTR [ecx+0x6a2ce14f]
  4083b4:	and    eax,0x4907b6ea
  4083b9:	shr    DWORD PTR ds:0x348236ff,0x3a
  4083c0:	jo     0x4083ef
  4083c2:	sub    al,0x35
  4083c4:	test   DWORD PTR [edx+eax*8-0x1],edx
  4083c8:	pop    ds
  4083c9:	cdq    
  4083ca:	cli    
  4083cb:	out    0x0,eax
  4083cd:	add    BYTE PTR [eax+0x18],ah
  4083d0:	sub    al,0xff
  4083d2:	cdq    
  4083d3:	push   ss
  4083d4:	jmp    0x1d5b519
  4083d9:	add    BYTE PTR [ecx],dh
  4083db:	adc    al,0x69
  4083dd:	sub    al,0x7c
  4083df:	or     al,0xd1
  4083e1:	or     al,0xec
  4083e3:	pop    ss
  4083e4:	(bad)  
  4083e5:	sub    al,0x5c
  4083e7:	sbb    dh,cl
  4083e9:	mov    dh,0x36
  4083eb:	sub    al,0x6b
  4083ed:	arpl   si,dx
  4083ef:	pop    ss
  4083f0:	push   ds
  4083f1:	into   
  4083f2:	stc    
  4083f3:	push   edx
  4083f4:	in     eax,dx
  4083f5:	add    ebx,DWORD PTR [ebx+ecx*4-0x43]
  4083f9:	xor    ch,0x44
  4083fc:	sahf   
  4083fd:	sub    al,0xb6
  4083ff:	mov    DWORD PTR [eax+esi*1],esp
  408402:	add    DWORD PTR [edi],edx
  408404:	sbb    al,0x14
  408406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408407:	mov    eax,ds:0xa0f71bdc
  40840c:	call   0xee94ae14
  408411:	xchg   bl,dh
  408413:	adc    ecx,ebp
  408415:	add    ebp,DWORD PTR [esi-0x2f]
  408418:	jo     0x40841d
  40841a:	xor    DWORD PTR [ecx+ebp*8],edx
  40841d:	inc    esp
  40841e:	in     al,dx
  40841f:	pop    ds
  408420:	pop    esi
  408421:	add    al,0x31
  408423:	adc    al,0xc3
  408425:	add    ebx,ebx
  408427:	adc    eax,ebx
  408429:	add    ecx,ebx
  40842b:	adc    esi,DWORD PTR [esi+eax*8+0x62]
  40842f:	les    ebp,FWORD PTR [ebx-0x7a]
  408432:	add    BYTE PTR [eax],al
  408434:	inc    ebp
  408435:	pop    ds
  408436:	ss sub al,0xe1
  408439:	push   ss
  40843a:	mov    ah,0x2b
  40843c:	mov    eax,ds:0xa1191b24
  408442:	call   0x9d94be4a
  408447:	push   es
  408448:	sbb    BYTE PTR [ecx],dl
  40844a:	jmp    0x40844f
  40844c:	xor    DWORD PTR [ebx+esi*1-0x1eb8e25],ebp
  408453:	mov    ch,0x3e
  408455:	sub    al,0x0
  408457:	mov    dl,0x8c
  408459:	pop    ss
  40845a:	call   FWORD PTR [ecx+0x6c8d4479]
  408460:	inc    ecx
  408461:	pop    ds
  408462:	(bad)  
  408463:	fiadd  WORD PTR ds:0x5302e7c5
  408469:	pop    ss
  40846a:	jmp    DWORD PTR [eax-0x50]
  40846d:	and    esi,edi
  40846f:	(bad)  
  408470:	or     ch,BYTE PTR [ecx+eax*4]
  408473:	mov    ebx,DWORD PTR [edx]
  408475:	pop    ss
  408476:	push   0xffffffe9
  408478:	stos   BYTE PTR es:[edi],al
  408479:	idiv   DWORD PTR [edx]
  40847b:	sub    BYTE PTR ds:0x299b517,dh
  408481:	pop    ss
  408482:	call   FWORD PTR [esi+0x6de80ae0]
  408488:	adc    BYTE PTR [edi],dl
  40848a:	jmp    DWORD PTR [eax-0x50]
  40848d:	das    
  40848e:	test   DWORD PTR [esi+0x10ffaa4a],0xe940d993
  408498:	add    BYTE PTR [eax],al
  40849a:	pop    ebx
  40849b:	popa   
  40849c:	lock jbe 0x4084e9
  40849f:	pop    ss
  4084a0:	(bad)  
  4084a1:	fdivr  QWORD PTR [esi+0x2e]
  4084a4:	imul   eax,DWORD PTR [edx+ebx*1+0x496c8917],0xbf4eff1f
  4084af:	push   ss
  4084b0:	addr16 push ss
  4084b2:	inc    esi
  4084b3:	sar    edi,cl
  4084b5:	cmp    eax,0x36f723c0
  4084ba:	sbb    dl,BYTE PTR [edi]
  4084bc:	jne    0x40849b
  4084be:	sbb    al,dh
  4084c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c1:	or     cl,BYTE PTR es:[ebp+0x15621185]
  4084c8:	inc    DWORD PTR [ebx-0x2dc853ce]
  4084ce:	cmc    
  4084cf:	adc    eax,0xe05500fe
  4084d4:	idiv   bh
  4084d6:	por    mm6,QWORD PTR [esp+ecx*1+0x30]
  4084db:	sbb    eax,0x990fffa4
  4084e0:	test   ah,bl
  4084e2:	xlat   BYTE PTR ds:[ebx]
  4084e3:	jmp    0xfff6:0xf1558dfe
  4084ea:	inc    DWORD PTR [ecx+0x67]
  4084ed:	dec    eax
  4084ee:	inc    ebx
  4084ef:	dec    edi
  4084f0:	(bad)  
  4084f1:	(bad)  
  4084f2:	push   ebp
  4084f3:	loope  0x4084eb
  4084f5:	dec    DWORD PTR [edi+0x315c34ea]
  4084fb:	dec    edi
  4084fc:	jmp    edi
  4084fe:	add    BYTE PTR [eax],al
  408500:	fdiv   DWORD PTR [esi+edi*8+0x73d1c3ff]
  408507:	sbb    DWORD PTR [ebx],ebx
  408509:	lods   al,BYTE PTR ds:[esi]
  40850a:	fcomip st,st(7)
  40850c:	mov    edi,0x987503ea
  408511:	jmp    0xfff6:0xc9058f2f
  408518:	cmovno esp,edi
  40851b:	(bad)  
  40851d:	jmp    0x16a57120
  408522:	mov    edi,0xe7418674
  408527:	sar    DWORD PTR [ecx-0x2a380116],1
  40852d:	enter  0xfff6,0xef
  408531:	add    eax,DWORD PTR [eax]
  408533:	add    BYTE PTR [eax-0x64],cl
  408536:	test   al,dl
  408538:	pop    es
  408539:	jmp    0x413a:0x3e7050fe
  408540:	dec    eax
  408541:	jmp    0xfffe:0xea17f0b4
  408548:	lds    ebx,FWORD PTR [edi+eiz*8]
  40854b:	lds    esi,FWORD PTR [ecx]
  40854d:	(bad)  
  40854e:	sub    edi,edi
  408550:	test   al,0xaf
  408552:	dec    esi
  408553:	not    DWORD PTR [esi]
  408555:	push   cs
  408556:	xchg   BYTE PTR [ebp-0xd6e1eb],bh
  40855c:	xor    DWORD PTR [esi],ebp
  40855e:	jg     0x4084fb
  408560:	xor    DWORD PTR [ebx],ebp
  408562:	add    eax,DWORD PTR [ebx+0x3eb40000]
  408568:	xor    edi,edi
  40856a:	out    dx,al
  40856b:	sub    bh,al
  40856d:	xor    DWORD PTR [edi-0x4dfffcd6],0xffffff87
  408574:	sbb    al,0xf7
  408576:	(bad)  
  408577:	dec    ebp
  408578:	add    al,0xf
  40857a:	mov    ch,0xab
  40857c:	add    eax,DWORD PTR [eax]
  40857e:	xor    ebx,edx
  408580:	adc    eax,DWORD PTR [eax]
  408582:	into   
  408583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408584:	sub    BYTE PTR [ebp+0x29],dh
  408587:	sub    DWORD PTR [eax],0xffffff9d
  40858a:	scas   al,BYTE PTR es:[edi]
  40858b:	jne    0x4085b6
  40858d:	mov    ch,0x95
  40858f:	jne    0x4085ba
  408591:	call   FWORD PTR [esi+0x1e7fbff]
  408597:	lods   eax,DWORD PTR ds:[esi]
  408598:	sub    bh,bh
  40859a:	mov    ds,edi
  40859c:	sbb    esi,edi
  40859e:	xchg   BYTE PTR [ebp-0x6cd68ad8],bl
  4085a4:	(bad)  
  4085a5:	popf   
  4085a6:	jbe    0x408555
  4085a8:	sub    BYTE PTR [ebp-0xd742ab],dh
  4085ae:	data16 aaa 
  4085b0:	sti    
  4085b1:	out    0x25,eax
  4085b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085b4:	sub    bh,bh
  4085b6:	push   esi
  4085b7:	xchg   edi,eax
  4085b8:	dec    ebx
  4085b9:	test   DWORD PTR [esi-0x2b],0xd3397528
  4085c0:	aas    
  4085c1:	popf   
  4085c2:	ds in  eax,0x28
  4085c5:	mov    ch,0x55
  4085c7:	adc    ebx,DWORD PTR [esi]
  4085c9:	sub    DWORD PTR [eax],eax
  4085cb:	add    BYTE PTR [esi],ch
  4085cd:	adc    al,0x94
  4085cf:	sti    
  4085d0:	push   cs
  4085d1:	sub    eax,0x981e2977
  4085d6:	dec    ebx
  4085d7:	push   eax
  4085d8:	push   ds
  4085d9:	adc    al,0x6
  4085db:	add    al,0x85
  4085dd:	das    
  4085de:	push   0x67
  4085e0:	loope  0x4085ed
  4085e2:	imul   BYTE PTR [eax]
  4085e4:	xor    eax,0xac7cdb89
  4085e9:	call   0x142eaecb
  4085ee:	sbb    DWORD PTR [ecx],ebp
  4085f0:	pop    esp
  4085f1:	sbb    al,0xc1
  4085f3:	(bad)  
  4085f4:	mov    esp,0x2b1cce13
  4085f9:	jle    0x4085e4
  4085fb:	sub    BYTE PTR [esp+ebx*1-0x2f],al
  4085ff:	jnp    0x4085a5
  408601:	adc    esi,DWORD PTR [esi-0x4a077bd8]
  408607:	sub    BYTE PTR [esi-0x519c6304],dh
  40860d:	adc    ebx,DWORD PTR [esi-0x69f46a92]
  408613:	sub    BYTE PTR [ecx-0x69d7b703],cl
  408619:	adc    edi,DWORD PTR [ebx+ebx*1]
  40861c:	xchg   BYTE PTR [ebx],dl
  40861e:	jle    0x40863b
  408620:	addr16 mov ah,0x75
  408623:	sub    BYTE PTR [esi-0x37],bh
  408626:	mov    WORD PTR [eax],?
  408628:	jbe    0x40863d
  40862a:	push   ecx
  40862b:	push   esp
  40862c:	xchg   ecx,eax
  40862d:	adc    ebx,DWORD PTR [esi+0x28]
  408630:	add    BYTE PTR [eax],al
  408632:	pushf  
  408633:	call   0xfc9eae95
  408638:	and    BYTE PTR [ebx+0x56],ah
  40863b:	adc    eax,DWORD PTR [esi+0x6e]
  40863e:	inc    ecx
  40863f:	or     edi,DWORD PTR [esi]
  408641:	sub    BYTE PTR [esi-0x77],al
  408644:	add    ch,ah
  408646:	or     DWORD PTR [ecx+0x10cb4108],ecx
  40864c:	jmp    DWORD PTR [esi]
  40864e:	pop    ecx
  40864f:	leave  
  408650:	out    dx,eax
  408651:	push   ss
  408652:	pop    ecx
  408653:	adc    ebp,eax
  408655:	inc    ebp
  408656:	xchg   edx,eax
  408657:	adc    edi,edi
  408659:	push   cs
  40865a:	xlat   BYTE PTR ds:[ebx]
  40865b:	or     ch,cl
  40865d:	xor    al,0x57
  40865f:	adc    edi,edi
  408661:	(bad)  
  408662:	aam    0xe
  408664:	call   0xff534c68
  408669:	and    BYTE PTR [eax+eiz*1+0x0],ch
  40866d:	cmp    al,0x6a
  40866f:	add    BYTE PTR [ebx+0x7e19a5],al
  408675:	inc    ebx
  408676:	sub    DWORD PTR [ebx],edx
  408678:	jne    0x40865b
  40867a:	cmp    dl,dl
  40867c:	pushf  
  40867d:	(bad)  
  40867e:	push   ss
  40867f:	popf   
  408680:	inc    esp
  408681:	mov    ebp,0x283b70a5
  408686:	xor    eax,0xd40d3513
  40868b:	push   ebx
  40868c:	add    BYTE PTR [esi+0x1be81ae0],ah
  408692:	pop    eax
  408693:	adc    edi,edi
  408695:	add    DWORD PTR [eax],eax
  408697:	add    BYTE PTR [edi+0x4d],dh
  40869a:	inc    ecx
  40869b:	jmp    0xe9409b5a
  4086a0:	mov    dl,0x12
  4086a2:	jne    0x408695
  4086a4:	sub    dh,BYTE PTR [ebp+edi*8+0x76]
  4086a8:	push   esi
  4086a9:	adc    esi,DWORD PTR [ebp+0x6d]
  4086ac:	dec    esi
  4086ad:	mov    DWORD PTR [eax],ecx
  4086af:	push   ecx
  4086b0:	add    al,0xb1
  4086b2:	(bad)  
  4086b3:	pop    esi
  4086b4:	and    al,0xd6
  4086b6:	add    ebp,ecx
  4086b8:	sbb    DWORD PTR [ebp+0x7f168eb],0x3af700fe
  4086c2:	push   0x0
  4086c4:	bound  ebx,QWORD PTR [ebx]
  4086c6:	push   DWORD PTR [ebp+0x50]
  4086c9:	cs jb  0x408669
  4086cc:	pop    es
  4086cd:	cmp    ecx,DWORD PTR [ecx+0x2b05445]
  4086d3:	add    DWORD PTR [eax],ebx
  4086d5:	push   ss
  4086d6:	lea    eax,[ebp-0xc5c1]
  4086dc:	fsubr  DWORD PTR ds:0x161871d2
  4086e2:	or     eax,eax
  4086e4:	jl     0x4086cf
  4086e6:	cmp    eax,DWORD PTR [ecx+ecx*1]
  4086e9:	push   ss
  4086ea:	add    BYTE PTR [edi-0x13],dh
  4086ed:	lods   eax,DWORD PTR ds:[esi]
  4086ee:	je     0x40872b
  4086f0:	sbb    DWORD PTR [eax],ebx
  4086f2:	lea    eax,[ebp-0xc801]
  4086f8:	sbb    BYTE PTR [eax],dh
  4086fa:	test   eax,0xe70000a3
  4086ff:	cmp    dl,BYTE PTR [eax+0x68]
  408702:	fcom   DWORD PTR ds:0x3928beef
  408708:	jne    0x408712
  40870a:	lock xor al,0xc1
  40870d:	inc    DWORD PTR [edi-0x286009d3]
  408713:	cmp    bh,bh
  408715:	jne    0x4086db
  408717:	cmp    dh,BYTE PTR [ebp+0x8]
  40871a:	mov    al,0xb0
  40871c:	fwait
  40871d:	jmp    DWORD PTR [edi-0x67fb3db0]
  408723:	in     al,0x89
  408725:	in     al,dx
  408726:	sbb    edx,DWORD PTR [ecx-0x4]
  408729:	push   0xffffff88
  40872b:	stos   DWORD PTR es:[edi],eax
  40872c:	sbb    al,0xff
  40872e:	jge    0x40873d
  408730:	out    0xd,eax
  408732:	mov    ch,0x3a
  408734:	dec    DWORD PTR [ecx+0x68398d]
  40873a:	xor    ebx,edi
  40873c:	adc    eax,0xea76c9be
  408741:	inc    eax
  408742:	xor    ebx,esp
  408744:	xchg   edx,eax
  408745:	cmp    esi,eax
  408747:	cli    
  408748:	and    eax,0x50532975
  40874d:	les    esi,FWORD PTR [esi]
  40874f:	inc    edx
  408750:	es jne 0x408780
  408753:	cmp    dh,BYTE PTR [eax-0x781ee6f9]
  408759:	call   FWORD PTR [esi]
  40875b:	xor    al,0x41
  40875d:	add    al,0x31
  40875f:	enter  0xec79,0x0
  408763:	add    BYTE PTR [eax+0x6f74f3e],dh
  408769:	adc    dh,BYTE PTR [edi+0x45]
  40876c:	std    
  40876d:	stos   BYTE PTR es:[edi],al
  40876e:	and    eax,0xaf022175
  408773:	or     ebx,ecx
  408775:	out    dx,al
  408776:	mov    dl,0xff
  408778:	out    0x5,al
  40877a:	inc    ebx
  40877b:	(bad)  
  40877d:	out    dx,al
  40877e:	add    al,BYTE PTR [eax]
  408780:	xor    DWORD PTR [edx-0x4ce0842],edi
  408786:	add    al,BYTE PTR [eax]
  408788:	out    dx,al
  408789:	aaa    
  40878a:	xor    bh,bh
  40878c:	ss sti 
  40878e:	add    ch,BYTE PTR [edx+0x31]
  408791:	push   ebp
  408792:	add    al,0x6a
  408794:	xor    DWORD PTR ds:0xa6ec8d04,esp
  40879a:	ror    DWORD PTR [esp+esi*4-0x6900d352],cl
  4087a1:	dec    edx
  4087a2:	and    eax,0xae998975
  4087a7:	sti    
  4087a8:	cdq    
  4087a9:	mov    eax,0xf57effb2
  4087ae:	inc    edx
  4087af:	je     0x4087dd
  4087b1:	xchg   esp,eax
  4087b2:	ins    BYTE PTR es:[edi],dx
  4087b3:	add    DWORD PTR [ecx],esi
  4087b5:	adc    al,0xe9
  4087b7:	fwait
  4087b8:	jne    0x4087f5
  4087ba:	test   al,0x3
  4087bc:	pop    esi
  4087bd:	xchg   cl,bh
  4087bf:	sbb    ecx,DWORD PTR [eax-0x4b]
  4087c2:	dec    ebp
  4087c3:	and    eax,0x77189ce1
  4087c8:	add    BYTE PTR [eax],al
  4087ca:	lods   al,BYTE PTR ds:[esi]
  4087cb:	pop    es
  4087cc:	ss and eax,0x1b9b633e
  4087d2:	pop    eax
  4087d3:	mov    ch,0x2d
  4087d5:	and    eax,0x2d1899b8
  4087da:	adc    BYTE PTR es:[ecx],dl
  4087dd:	aad    0xbf
  4087df:	movhps xmm6,QWORD PTR [edi-0x54]
  4087e3:	hlt    
  4087e4:	adc    eax,0x91650e25
  4087e9:	mov    DWORD PTR [edx+0x55],ecx
  4087ec:	jmp    0xfe454c15
  4087f1:	and    al,0xf6
  4087f3:	pcmpeqb mm6,mm7
  4087f6:	(bad)  
  4087f7:	inc    ecx
  4087f8:	mov    esp,DWORD PTR [esi+eiz*8]
  4087fb:	popf   
  4087fc:	arpl   WORD PTR [edi],bx
  4087fe:	out    0xf,al
  408800:	(bad)  
  408801:	cdq    
  408802:	(bad)  
  408803:	ja     0x40878f
  408805:	call   0x6f069c7b
  40880a:	rol    DWORD PTR [edi],0xbe
  40880d:	and    al,0xbe
  40880f:	mov    ebp,esp
  408811:	sbb    esp,DWORD PTR [ebx]
  408813:	mov    dl,0xad
  408815:	and    al,0xb8
  408817:	cdq    
  408818:	xchg   esp,eax
  408819:	sub    al,0xa6
  40881b:	movlps QWORD PTR [ecx+ecx*1],xmm0
  40881f:	mov    bh,0xd1
  408821:	ret    0xe96
  408824:	push   esp
  408825:	xor    eax,DWORD PTR [esi-0x3db79f1]
  40882b:	pop    ds
  40882c:	xchg   ecx,eax
  40882d:	sub    al,0x0
  40882f:	add    al,dl
  408831:	(bad)  
  408833:	jbe    0x408830
  408835:	cwde   
  408836:	out    0x76,eax
  408838:	adc    eax,0xcae96a0f
  40883d:	mov    edi,0xf32a83a
  408842:	mov    ch,0x59
  408844:	add    eax,0x9f4eff0f
  408849:	sbb    ebp,eax
  40884b:	and    eax,0x70ff0ed3
  408850:	mov    edi,0xd36f6ef
  408855:	jp     0x408857
  408857:	rcl    DWORD PTR [ebx+ecx*2-0x36b216bf],0xef
  40885f:	push   ss
  408860:	push   ebp
  408861:	ud0    ebx,DWORD PTR [esi+ebx*1+0x5548c0f7]
  408869:	jns    0xff4802db
  40886f:	(bad)  
  408870:	cdq    
  408871:	push   cs
  408872:	addr16 repz push cs
  408875:	push   esp
  408876:	add    dh,ch
  408878:	pop    esp
  408879:	add    al,0xf7
  40887b:	out    0x12,al
  40887d:	pcmpeqw mm5,mm5
  408880:	or     dh,BYTE PTR [esi-0x62ed2960]
  408886:	test   BYTE PTR [ebp+0x6aff0f2a],dh
  40888c:	push   eax
  40888d:	clc    
  40888e:	idiv   BYTE PTR [esi+0x30741412]
  408894:	add    BYTE PTR [eax],al
  408896:	scas   al,BYTE PTR es:[edi]
  408897:	shr    bl,1
  408899:	mov    dh,0x52
  40889b:	ltr    WORD PTR ds:0x91bc91bd
  4088a2:	cmp    cl,BYTE PTR [edi]
  4088a4:	(bad)  
  4088a5:	jmp    0xf9a8fe68
  4088aa:	xor    bh,bh
  4088ac:	mov    ebp,0x6acaf00
  4088b1:	call   0x401657
  4088b6:	jmp    FWORD PTR [esp+ebp*8-0x9]
  4088ba:	fbstp  TBYTE PTR [edx]
  4088bc:	push   DWORD PTR [ebp+0x60]
  4088bf:	cmp    bh,BYTE PTR ds:0xff32ff9b
  4088c5:	mov    ch,0xf0
  4088c7:	sub    bh,bh
  4088c9:	(bad)  
  4088ca:	jmp    FWORD PTR [esi+eax*1-0x70e018]
  4088d1:	(bad)  
  4088d2:	jmp    FWORD PTR [eax+eiz*8-0x9]
  4088d6:	push   DWORD PTR [edx]
  4088d8:	push   DWORD PTR [ebp-0xd68c]
  4088de:	dec    edi
  4088df:	stos   DWORD PTR es:[edi],eax
  4088e0:	push   es
  4088e1:	call   0x401715
  4088e6:	aas    
  4088e7:	imul   ebx,eax,0xfffffff7
  4088ea:	aas    
  4088eb:	xor    edi,edi
  4088ed:	jne    0x4088ef
  4088ef:	cmp    cl,BYTE PTR ds:0xff32ff9b
  4088f5:	mov    ch,0x1c
  4088f7:	sub    edi,edi
  4088f9:	inc    DWORD PTR [eax]
  4088fb:	add    bh,bl
  4088fd:	lods   al,BYTE PTR ds:[esi]
  4088fe:	push   es
  4088ff:	call   0x4018d3
  408904:	jmp    FWORD PTR [esp+edx*8-0x9]
  408908:	push   DWORD PTR [edx]
  40890a:	push   DWORD PTR [ebp-0x30]
  40890d:	cmp    ecx,esi
  40890f:	call   0x2af4:0xb5ff32ef
  408916:	(bad)  
  408917:	push   eax
  408919:	cs popf 
  40891b:	(bad)  
  40891c:	fbstp  TBYTE PTR [edx]
  40891e:	mov    ch,0xec
  408920:	(bad)  
  408921:	xor    bh,bh
  408923:	call   0x3f1de0
  408928:	xor    DWORD PTR [esi-0x617917a9],esp
  40892e:	and    eax,ebp
  408930:	mov    WORD PTR [eax+0x22],?
  408933:	(bad)  
  408934:	jle    0x40897e
  408936:	aas    
  408937:	div    DWORD PTR [esi-0x7a]
  40893a:	sub    ebx,edx
  40893c:	int3   
  40893d:	jle    0x408961
  40893f:	call   FWORD PTR [ebx+edx*2+0x635eff1a]
  408946:	push   edx
  408947:	popf   
  408948:	push   esi
  408949:	data16 and dh,BYTE PTR [ebp-0xdd999b]
  408950:	pop    ecx
  408951:	aas    
  408952:	cmp    bh,0x3e
  408955:	dec    esi
  408956:	pop    eax
  408957:	lock ds inc esi
  40895a:	and    bh,bh
  40895c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895d:	out    dx,eax
  40895e:	and    DWORD PTR [ebp+0x0],esi
  408961:	add    BYTE PTR [ecx],bh
  408963:	and    ecx,DWORD PTR [edx]
  408965:	(bad)  
  408966:	push   ds
  408967:	and    dh,BYTE PTR cs:[ebp-0xddd1df]
  40896e:	sbb    DWORD PTR [ebx-0x80],edx
  408971:	inc    DWORD PTR [esi]
  408973:	push   ss
  408974:	enter  0x8f7,0xf2
  408978:	and    bh,bh
  40897a:	test   BYTE PTR ds:0x8d9fb97,0xb1
  408981:	jmp    esi
  408983:	ret    
  408984:	inc    ebp
  408985:	or     al,0x31
  408987:	dec    eax
  408988:	(bad)  
  408989:	in     al,dx
  40898a:	mov    dl,0xbe
  40898c:	pop    ds
  40898d:	push   0x31
  40898f:	push   ecx
  408990:	add    edi,edi
  408992:	cmp    al,0x3
  408994:	sub    edi,DWORD PTR [edx-0x76df3265]
  40899a:	ins    BYTE PTR es:[edi],dx
  40899b:	(bad)  
  40899c:	stos   DWORD PTR es:[edi],eax
  40899d:	ret    0x3c6a
  4089a0:	add    al,0xff
  4089a2:	pop    esp
  4089a3:	adc    al,0x45
  4089a5:	jmp    0x408998
  4089a7:	adc    ebx,DWORD PTR [esi-0x5703d169]
  4089ad:	pop    ds
  4089ae:	mov    cs,WORD PTR [ecx+eax*1]
  4089b1:	inc    ebp
  4089b2:	dec    edx
  4089b3:	push   ebx
  4089b4:	jmp    0xe954ba64
  4089b9:	xor    DWORD PTR [esi-0x7a],0xffffffe1
  4089bd:	sub    ebx,DWORD PTR [edi+0x66216e0e]
  4089c3:	xchg   BYTE PTR [ebp+0x21],ah
  4089c6:	add    BYTE PTR [eax],al
  4089c8:	in     al,0x1b
  4089ca:	push   ecx
  4089cb:	dec    edi
  4089cc:	mov    ebx,0x734b560c
  4089d1:	pop    ss
  4089d2:	jmp    0x6a40458d
  4089d7:	dec    eax
  4089d8:	cmp    eax,0x36ad9665
  4089dd:	jp     0x4089e8
  4089df:	and    DWORD PTR [esp+ebx*1+0xbc8b141],esp
  4089e6:	mov    esi,DWORD PTR es:[eax+ecx*1+0x72]
  4089eb:	xlat   BYTE PTR ds:[ebx]
  4089ec:	popf   
  4089ed:	cmp    al,0xa8
  4089ef:	add    edi,DWORD PTR [edx+0x71eb9049]
  4089f5:	adc    al,0x69
  4089f7:	loope  0x4089f7
  4089f9:	xchg   DWORD PTR [eax-0x57b7de55],ecx
  4089ff:	add    eax,DWORD PTR [edi-0x194ecb04]
  408a05:	or     edi,DWORD PTR [ecx]
  408a07:	lods   al,BYTE PTR ds:[esi]
  408a08:	xor    eax,0x7e042848
  408a0d:	cld    
  408a0e:	xor    BYTE PTR [eax+0xd330bce],0xf1
  408a15:	sub    ebp,0x1380e30c
  408a1b:	mov    edx,0x8effd2ce
  408a20:	push   ecx
  408a21:	or     ebp,DWORD PTR [eax-0x34]
  408a24:	xchg   BYTE PTR [eax+eax*1+0x39],dl
  408a28:	dec    ebp
  408a29:	icebp  
  408a2a:	lahf   
  408a2b:	sahf   
  408a2c:	add    BYTE PTR [eax],al
  408a2e:	push   ecx
  408a2f:	fs push 0xbdfb32e9
  408a35:	add    DWORD PTR [ebp-0x3d16beb1],eax
  408a3b:	or     dh,BYTE PTR [ebp-0xf]
  408a3e:	dec    edx
  408a3f:	mov    ecx,0xfc1176c0
  408a44:	fmul   DWORD PTR [ebp+0x11]
  408a47:	or     ebp,ebx
  408a49:	call   0xe97f15b6
  408a4e:	mov    edi,0x6555460d
  408a53:	retf   
  408a54:	mov    eax,0xff0b114e
  408a59:	cmp    eax,eax
  408a5b:	dec    ebx
  408a5c:	pop    es
  408a5d:	mov    ah,0xb1
  408a5f:	or     esi,DWORD PTR [ebp+0x35]
  408a62:	push   ecx
  408a63:	or     DWORD PTR [eax],0xfeacff41
  408a69:	es icebp 
  408a6b:	push   0x142e2bc9
  408a70:	push   ebp
  408a71:	bound  ebx,QWORD PTR [esi-0x69]
  408a74:	ret    
  408a75:	or     eax,0x60c8151
  408a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7b:	adc    ch,al
  408a7d:	lds    edi,FWORD PTR [ecx+0xb]
  408a80:	jmp    DWORD PTR [eax-0x9]
  408a83:	push   cs
  408a84:	push   DWORD PTR [esi+eax*2+0xb]
  408a88:	jne    0x408a7b
  408a8a:	or     ah,BYTE PTR [eax-0x60c9216d]
  408a90:	dec    esp
  408a91:	in     eax,0x0
  408a93:	add    BYTE PTR [ebx],bh
  408a95:	aam    0x73
  408a97:	sub    esi,DWORD PTR [edx-0x3ffffb4]
  408a9d:	hlt    
  408a9e:	std    
  408a9f:	jne    0x408b15
  408aa1:	aaa    
  408aa2:	xchg   ebp,eax
  408aa3:	pushf  
  408aa4:	out    0x2a,eax
  408aa6:	push   eax
  408aa7:	call   FWORD PTR [ebp+0x24]
  408aaa:	push   DWORD PTR [ebp-0x2c]
  408aad:	mov    edi,0x3ea075fd
  408ab2:	int3   
  408ab3:	xchg   esi,eax
  408ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab5:	sub    bl,BYTE PTR [edx-0x75]
  408ab8:	and    eax,0x88398324
  408abd:	stos   DWORD PTR es:[edi],eax
  408abe:	or     BYTE PTR [edx-0x60],dl
  408ac1:	retf   0xff9a
  408ac4:	out    0xfe,eax
  408ac6:	mov    esi,0x7c957ceb
  408acb:	adc    BYTE PTR [eax-0x5e],cl
  408ace:	push   es
  408acf:	mov    ecx,DWORD PTR [ebp-0x1b8a01fa]
  408ad5:	call   0x2b02:0x3f1a8aff
  408adc:	or     BYTE PTR [ecx-0x3e],bl
  408adf:	or     al,0x48
  408ae1:	retf   
  408ae2:	mov    esp,ebp
  408ae4:	stos   DWORD PTR es:[di],eax
  408ae6:	or     bh,bh
  408ae8:	fstp   QWORD PTR ds:0x299eb9e8
  408aee:	(bad)  
  408aef:	(bad)  
  408af0:	mov    ebp,0xadff5019
  408af5:	sbb    eax,0x31e8
  408afa:	jg     0x408b25
  408afc:	dec    ecx
  408afe:	dec    edx
  408aff:	sbb    BYTE PTR [eax],al
  408b01:	push   ebp
  408b02:	add    DWORD PTR [ebx+eax*4-0x3c],0x18
  408b07:	ret    0x5355
  408b0a:	pop    ebx
  408b0b:	mov    bl,0x6
  408b0d:	add    BYTE PTR [esi+eax*1-0x7e],bh
  408b11:	jge    0x408ad7
  408b13:	adc    eax,0x7e310c74
  408b18:	mov    al,ds:0x65f310f
  408b1d:	cmp    DWORD PTR [edi+eiz*8],0x2
  408b21:	jne    0x408b4b
  408b23:	es inc esp
  408b25:	pop    ebx
  408b26:	push   cs
  408b27:	and    DWORD PTR [ebp-0x3e],ecx
  408b2a:	inc    ecx
  408b2b:	sti    
  408b2c:	mov    DWORD PTR [ebp+0x2d],eax
  408b2f:	jle    0x408b54
  408b31:	pop    es
  408b32:	mov    dl,0x28
  408b34:	adc    BYTE PTR [eax],al
  408b36:	add    eax,0xfdc009f7
  408b3b:	repz jmp 0xbe726600
  408b41:	enter  0xeb73,0x2
  408b45:	mov    esi,esp
  408b47:	out    0x81,al
  408b49:	loopne 0x408b79
  408b4b:	jle    0x408aed
  408b4d:	adc    esi,DWORD PTR [ecx]
  408b4f:	out    0x6,eax
  408b51:	or     esi,DWORD PTR [ecx-0x21]
  408b54:	or     ebp,DWORD PTR [ebx]
  408b56:	jno    0x408b1e
  408b58:	mov    ebp,0xf33d785d
  408b5d:	inc    DWORD PTR [eax]
  408b5f:	add    BYTE PTR [ebx],cl
  408b61:	ss push ds
  408b63:	jne    0x408b8a
  408b65:	jp     0x408b2f
  408b67:	mov    edi,0xb42b7b2
  408b6c:	rol    BYTE PTR es:[edx-0x18],0xed
  408b71:	xchg   ebp,eax
  408b72:	sbb    eax,0xc88415ff
  408b77:	ret    
  408b78:	mov    edx,0x4ebe469f
  408b7d:	xlat   BYTE PTR ds:[ebx]
  408b7e:	ret    
  408b7f:	(bad)  
  408b80:	mov    ecx,0x31000305
  408b85:	push   cs
  408b86:	mov    sp,WORD PTR [ebx+esi*8-0x77]
  408b8b:	dec    ebp
  408b8c:	xor    eax,0x748d660e
  408b91:	adc    al,0xd9
  408b93:	mov    ah,0xd7
  408b95:	jle    0x408b40
  408b97:	sbb    eax,0x44c0d044
  408b9c:	mov    WORD PTR [eax],cs
  408b9e:	into   
  408b9f:	sbb    eax,0x81d0d044
  408ba4:	call   0x6618:0x241dbe08
  408bab:	(bad)  
  408bac:	out    0x94,al
  408bae:	and    eax,DWORD PTR [edx+edi*1+0x9]
  408bb2:	sbb    al,0x44
  408bb4:	mov    DWORD PTR [ebx-0x6571e27f],ebx
  408bba:	sub    ecx,DWORD PTR [eax-0x7b]
  408bbd:	call   0x8979:0x7eac4823
  408bc4:	add    BYTE PTR [eax],al
  408bc6:	hlt    
  408bc7:	iret   
  408bc8:	aas    
  408bc9:	hlt    
  408bca:	outs   dx,BYTE PTR ds:[esi]
  408bcb:	or     cl,ch
  408bcd:	adc    BYTE PTR [ebp-0xe203a37],cl
  408bd3:	adc    esp,DWORD PTR [eax-0x16ebcef7]
  408bd9:	adc    BYTE PTR [ebp-0x45f42464],dl
  408bdf:	push   esi
  408be0:	fst    QWORD PTR [eax]
  408be2:	xchg   ebp,eax
  408be3:	xchg   esi,eax
  408be4:	stos   DWORD PTR es:[edi],eax
  408be5:	and    esp,ecx
  408be7:	or     BYTE PTR [ebx+eax*2+0x2c2d822e],dh
  408bee:	xchg   esi,eax
  408bef:	mov    cl,0x2d
  408bf1:	sbb    eax,0x2c2d821e
  408bf6:	arpl   WORD PTR [ebx-0x65f2e2e3],bp
  408bfc:	fwait
  408bfd:	adc    esi,DWORD PTR [ecx+ecx*4+0x14215b21]
  408c04:	jmp    0x6bf18e0c
  408c09:	xchg   edi,eax
  408c0a:	push   cs
  408c0b:	into   
  408c0c:	jmp    eax
  408c0e:	xor    dl,BYTE PTR [eax+eax*1]
  408c11:	cli    
  408c12:	push   esi
  408c13:	jp     0x408c16
  408c15:	je     0x408c06
  408c17:	iret   
  408c18:	dec    edi
  408c19:	rcr    DWORD PTR [eax],1
  408c1b:	cwde   
  408c1c:	(bad)  
  408c1d:	call   0x62510ddb
  408c22:	lahf   
  408c23:	and    eax,ecx
  408c25:	(bad)  
  408c26:	xor    DWORD PTR [ebx],ebx
  408c28:	push   DWORD PTR ds:0xfad40000
  408c2e:	push   cs
  408c2f:	outs   dx,DWORD PTR fs:[esi]
  408c31:	out    dx,eax
  408c32:	dec    edi
  408c33:	pop    ss
  408c34:	out    0xef,eax
  408c36:	jp     0x408cae
  408c38:	xor    dl,BYTE PTR [ebx+eax*4]
  408c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c3c:	cmp    dl,BYTE PTR [edi+0xb]
  408c3f:	xchg   esi,eax
  408c40:	lahf   
  408c41:	clc    
  408c42:	push   cs
  408c43:	push   edi
  408c44:	je     0x408c4c
  408c46:	add    DWORD PTR [ecx-0x2dfd80d6],0x42
  408c4d:	cmp    esi,DWORD PTR [ebp-0x27]
  408c50:	and    esi,esi
  408c52:	imul   ebp,ecx,0xe9690788
  408c58:	mov    BYTE PTR [edi],al
  408c5a:	push   ebp
  408c5b:	pop    esi
  408c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5d:	pop    ss
  408c5e:	push   0xffffffe9
  408c60:	cwde   
  408c61:	pop    es
  408c62:	out    0xf,eax
  408c64:	add    DWORD PTR [edi],0x7ff2f2ff
  408c6a:	sub    DWORD PTR [ecx+0x53d3eee2],ebx
  408c70:	inc    ebp
  408c71:	pop    es
  408c72:	mov    edx,DWORD PTR [ecx]
  408c74:	fstp   TBYTE PTR [eax+eax*1-0x6d]
  408c78:	xor    ah,BYTE PTR [ebp+0x53]
  408c7b:	mov    bh,0x2d
  408c7d:	adc    DWORD PTR [eax],0x7a3283
  408c83:	add    edi,edi
  408c85:	jp     0x408c87
  408c87:	add    BYTE PTR [eax],cl
  408c89:	sbb    al,0xc0
  408c8b:	jne    0x408c6d
  408c8d:	ret    
  408c8e:	out    0x9d,al
  408c90:	add    BYTE PTR [eax],al
  408c92:	sub    BYTE PTR [eax],0xff
  408c95:	sub    eax,DWORD PTR [ebx-0x64]
  408c98:	ret    0x6f5b
  408c9b:	retf   0xc2c7
  408c9e:	enter  0x5512,0x8b
  408ca2:	in     al,dx
  408ca3:	mov    es,ebx
  408ca5:	lock pop es
  408ca7:	mov    edi,0xa4efdb29
  408cac:	or     bh,bh
  408cae:	gs sbb al,ch
  408cb1:	add    DWORD PTR ds:0xcf50ff2b,eax
  408cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb8:	push   es
  408cb9:	call   0x400eb4
  408cbe:	add    ebp,DWORD PTR [eax]
  408cc0:	pop    eax
  408cc1:	add    esp,DWORD PTR [eax+0x5774c016]
  408cc7:	popf   
  408cc8:	inc    esp
  408cc9:	hlt    
  408cca:	sbb    BYTE PTR [ebx],ch
  408ccc:	jne    0x408cda
  408cce:	out    dx,eax
  408ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd0:	push   es
  408cd1:	call   0x3fb9c9
  408cd6:	rcl    esp,1
  408cd8:	cli    
  408cd9:	lea    eax,[ebp+0x65ff5022]
  408cdf:	push   cs
  408ce0:	push   DWORD PTR [ebp+0x50]
  408ce3:	cmp    bl,BYTE PTR [ecx-0x76d51003]
  408ce9:	inc    ebp
  408cea:	lock sub dh,BYTE PTR [ebp-0x10]
  408cee:	outs   dx,DWORD PTR ds:[esi]
  408cef:	mov    ds:0x15e5fff6,eax
  408cf4:	push   DWORD PTR [ebp+0x0]
  408cf7:	add    BYTE PTR [eax+edi*1+0x11],cl
  408cfb:	dec    BYTE PTR [edi+0x29]
  408cfe:	mov    ebx,eax
  408d00:	das    
  408d01:	mov    ds:0xcf31e8fa,eax
  408d06:	jl     0x408d07
  408d08:	(bad)  
  408d09:	push   ss
  408d0a:	xchg   ecx,eax
  408d0b:	test   DWORD PTR [ecx],0xeeff7cd8
  408d11:	mov    eax,ds:0x88e65702
  408d16:	or     ebp,eax
  408d18:	mov    DWORD PTR [ebx+ebx*1-0x1],ebp
  408d1c:	stos   BYTE PTR es:[edi],al
  408d1d:	mov    edx,0xb9f85ebd
  408d22:	or     al,BYTE PTR [eax]
  408d24:	pop    esp
  408d25:	jb     0x408d4e
  408d27:	cmp    DWORD PTR [edi+eiz*8],0x0
  408d2b:	jb     0x408d3d
  408d2d:	into   
  408d2e:	(bad)  
  408d2f:	fxsave [eax+0xc]
  408d33:	call   0xff5af4e8
  408d38:	sahf   
  408d39:	inc    eax
  408d3a:	hlt    
  408d3b:	(bad)  
  408d3c:	sbb    al,0x3
  408d3e:	sub    ebp,DWORD PTR [edi-0xe65974]
  408d44:	cld    
  408d45:	or     bl,BYTE PTR [edx]
  408d47:	jne    0x408d72
  408d49:	xchg   ebx,eax
  408d4a:	pop    esi
  408d4b:	std    
  408d4c:	jbe    0x408cdc
  408d4e:	sbb    DWORD PTR [ebp+0x41],esi
  408d51:	xchg   BYTE PTR [eax+0x1b315907],dl
  408d57:	call   FWORD PTR [esi+0x72]
  408d5a:	mov    al,0x13
  408d5c:	add    BYTE PTR [eax],al
  408d5e:	test   al,0xf9
  408d60:	sbb    DWORD PTR [ebp+0x21],esi
  408d63:	xchg   ax,ax
  408d65:	pop    es
  408d66:	pop    ecx
  408d67:	je     0x408d81
  408d69:	(bad)  
  408d6a:	ds jp  0x408d05
  408d6d:	or     esi,DWORD PTR [edx]
  408d6f:	(bad)
  408d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d73:	jmp    0x408d8e
  408d75:	jne    0x408db0
  408d77:	push   ebx
  408d78:	fwait
  408d79:	cld    
  408d7a:	push   ds
  408d7b:	sbb    dh,BYTE PTR ss:[ebp+0x41]
  408d7f:	adc    al,0x26
  408d81:	nop
  408d82:	ss cld 
  408d84:	mov    ebx,DWORD PTR [eax]
  408d86:	push   es
  408d87:	add    eax,0x7a2e9016
  408d8c:	icebp  
  408d8d:	sbb    bh,BYTE PTR [esp+ebx*1+0x11]
  408d91:	outs   dx,BYTE PTR ds:[esi]
  408d92:	lds    eax,FWORD PTR [esi+edi*8]
  408d95:	sbb    DWORD PTR [esp-0xa],ebx
  408d99:	(bad)  
  408d9a:	ss cld 
  408d9c:	int3   
  408d9d:	outs   dx,DWORD PTR ds:[esi]
  408d9e:	(bad)  
  408d9f:	add    al,0xb0
  408da1:	inc    esi
  408da2:	and    DWORD PTR [esp+esi*1],edx
  408da5:	(bad)  
  408da6:	aad    0x4
  408da8:	pop    esp
  408da9:	or     BYTE PTR [ebx+0x13],cl
  408dac:	into   
  408dad:	(bad)  
  408dae:	cs cld 
  408db0:	je     0x408e22
  408db2:	scas   al,BYTE PTR es:[edi]
  408db3:	add    al,0xbe
  408db5:	(bad)  
  408db6:	cmp    al,BYTE PTR ds:0xec890c3c
  408dbc:	scas   al,BYTE PTR es:[edi]
  408dbd:	sbb    DWORD PTR [esi+0xf43b98],edx
  408dc3:	add    BYTE PTR [ecx+0x3a8f9e11],bh
  408dc9:	add    eax,0xdc890c1c
  408dce:	mov    ds,WORD PTR [ecx]
  408dd0:	jbe    0x408d6a
  408dd2:	sbb    esi,eax
  408dd4:	mov    ecx,0x3a8f7e11
  408dd9:	add    eax,0xcc490bfc
  408dde:	outs   dx,BYTE PTR ds:[esi]
  408ddf:	sbb    DWORD PTR [esi-0x68],edx
  408de2:	mov    ebx,0x3011b9fb
  408de7:	inc    esi
  408de8:	sbb    eax,0x4d8cbc14
  408ded:	nop
  408dee:	and    al,0x28
  408df0:	fistp  WORD PTR [esi+eax*2-0x71]
  408df4:	inc    edx
  408df5:	outs   dx,BYTE PTR ds:[esi]
  408df6:	call   0x4d2a13
  408dfb:	inc    ecx
  408dfc:	hlt    
  408dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfe:	(bad)  
  408dff:	cmp    BYTE PTR cs:[ecx+0x1bbe2614],cl
  408e06:	call   0xff440a60
  408e0b:	bound  esp,QWORD PTR ds:0x32e83aed
  408e11:	adc    al,0x8b
  408e13:	lods   al,BYTE PTR ds:[esi]
  408e14:	ficom  WORD PTR [esi+0x18b7e937]
  408e1a:	jmp    0x54c1de
  408e1f:	es xchg esi,eax
  408e21:	(bad)  
  408e22:	(bad)  
  408e23:	call   0x24cda25a
  408e28:	add    BYTE PTR [eax],al
  408e2a:	sub    DWORD PTR [edi+edi*8+0x5c],esp
  408e2e:	rol    DWORD PTR [edx],0x75
  408e31:	stc    
  408e32:	sbb    DWORD PTR [ecx+0x244d108],ecx
  408e38:	(bad)  
  408e39:	mov    esi,0x3482fcb5
  408e3e:	cmp    DWORD PTR [esp+esi*2],edx
  408e41:	or     al,ch
  408e43:	inc    ebp
  408e44:	cmp    al,0x28
  408e46:	xor    eax,0x5a9d7503
  408e4b:	mov    gs,WORD PTR [edx-0x17]
  408e4e:	xor    cl,BYTE PTR [edi]
  408e50:	rcl    BYTE PTR [esi+ebp*1],0x6c
  408e54:	cmp    al,ch
  408e56:	jae    0x408e5b
  408e58:	(bad)  
  408e59:	hlt    
  408e5a:	ds in  al,dx
  408e5c:	js     0x408e60
  408e5e:	xor    eax,0x9248914
  408e63:	out    dx,eax
  408e64:	push   es
  408e65:	cs (bad) 
  408e67:	out    dx,eax
  408e68:	(bad)  
  408e69:	call   0xd4c3a2a0
  408e6e:	push   ss
  408e6f:	adc    al,0x74
  408e71:	icebp  
  408e72:	mov    dl,BYTE PTR [eax+eax*1]
  408e75:	add    BYTE PTR [edi+0x1475ff5d],al
  408e7b:	das    
  408e7c:	inc    edi
  408e7d:	xchg   ebp,eax
  408e7e:	addr16 sbb al,0xff
  408e81:	jne    0x408ec7
  408e83:	sbb    al,0x75
  408e85:	or     al,0x20
  408e87:	jge    0x408e1e
  408e89:	jmp    DWORD PTR [edi]
  408e8b:	mov    eax,DWORD PTR cs:[eax]
  408e8e:	add    BYTE PTR [eax],al
  408e90:	or     BYTE PTR [edi],dl
  408e92:	mov    eax,DWORD PTR [ebp-0x4]
  408e95:	xchg   edi,eax
  408e96:	aaa    
  408e97:	add    BYTE PTR [ebp+0x2],ch
  408e9a:	call   0x576725
  408e9f:	(bad)  
  408ea0:	lea    ebx,[esi]
  408ea2:	add    BYTE PTR [eax],al
  408ea4:	enter  0xc716,0x45
  408ea8:	in     al,dx
  408ea9:	pop    ss
  408eaa:	add    BYTE PTR [eax],al
  408eac:	fadd   DWORD PTR [ecx+0x45]
  408eaf:	lock enter 0x16,0x0
  408eb4:	push   ebp
  408eb5:	aad    0xee
  408eb7:	push   eax
  408eb8:	and    eax,0x1550f2d5
  408ebd:	aad    0xf6
  408ebf:	push   eax
  408ec0:	out    0xa4,eax
  408ec2:	adc    bh,bh
  408ec4:	pop    ebp
  408ec5:	adc    al,ch
  408ec7:	loope  0x408e9f
  408ec9:	sub    bh,bh
  408ecb:	and    DWORD PTR ds:0x5b74002c,0xffffff95
  408ed2:	jl     0x408ecc
  408ed4:	mov    BYTE PTR [edx+0x2435832b],dl
  408eda:	add    BYTE PTR [ebp+0x4e],dh
  408edd:	xchg   ebp,eax
  408ede:	jl     0x408ed0
  408ee0:	dec    eax
  408ee1:	xchg   edx,eax
  408ee2:	pop    ds
  408ee3:	call   FWORD PTR [ebp+0x1e]
  408ee6:	push   DWORD PTR [ebp+0x44]
  408ee9:	cs cmp eax,0xff2ae795
  408eef:	jne    0x408f22
  408ef1:	popa   
  408ef2:	pop    ss
  408ef3:	jne    0x408ef5
  408ef5:	add    BYTE PTR ds:0x2e94d255,ah
  408efb:	pop    ebx
  408efc:	pop    ss
  408efd:	jne    0x408f20
  408eff:	inc    ebx
  408f00:	xchg   ecx,eax
  408f01:	or     ecx,DWORD PTR [ecx]
  408f03:	adc    esi,DWORD PTR [ecx-0x1]
  408f06:	push   ss
  408f07:	xor    edx,DWORD PTR [ecx+0x7ae019f7]
  408f0d:	inc    DWORD PTR [esi]
  408f0f:	and    edx,DWORD PTR [ecx+0x7ad809f3]
  408f15:	push   esi
  408f17:	adc    dl,BYTE PTR [ecx+0x7acfd9ef]
  408f1d:	jmp    esi
  408f1f:	mov    dl,0x9
  408f21:	jmp    FWORD PTR [esi]
  408f23:	jo     0x408ece
  408f25:	(bad)  
  408f26:	(bad)  
  408f27:	repnz cmp DWORD PTR [ebp-0x23],0x5b1d8eeb
  408f2f:	jmp    0x408f46
  408f31:	jne    0x408f60
  408f33:	shr    DWORD PTR [esi-0x6c],cl
  408f36:	mov    dh,0xd2
  408f38:	test   al,0xff
  408f3a:	scas   eax,DWORD PTR es:[edi]
  408f3b:	inc    eax
  408f3c:	or     al,ch
  408f3e:	mov    ebx,0xbff1667
  408f43:	jmp    0x408f5a
  408f45:	jne    0x408f6c
  408f47:	rol    DWORD PTR [edx+0x15ba8e94],cl
  408f4d:	jne    0x408ed4
  408f4f:	mov    ds:0xaa7e9725,eax
  408f54:	les    ecx,FWORD PTR [edx]
  408f56:	jg     0x408f3a
  408f58:	jg     0x408f17
  408f5a:	add    BYTE PTR [eax],al
  408f5c:	outs   dx,DWORD PTR ds:[esi]
  408f5d:	call   0x1040:0xc4075f15
  408f64:	xor    DWORD PTR [eax],esp
  408f66:	mov    ebp,esp
  408f68:	mov    dl,0xb7
  408f6a:	push   ds
  408f6b:	push   esi
  408f6c:	dec    esi
  408f6d:	adc    al,0xdc
  408f6f:	or     ebx,DWORD PTR [ecx-0x57]
  408f72:	ins    DWORD PTR es:[edi],dx
  408f73:	push   ss
  408f74:	mov    ebp,DWORD PTR ds:[ebx+0x557fb20f]
  408f7b:	repz mov ds:0x3104810e,eax
  408f81:	adc    al,0xe9
  408f83:	mov    ch,0xe9
  408f85:	aad    0xe0
  408f87:	add    edx,DWORD PTR [esi]
  408f89:	xchg   ecx,esp
  408f8b:	sub    ebp,DWORD PTR [edx+eiz*4+0x56ee1625]
  408f92:	and    DWORD PTR [ecx+esi*1],eax
  408f95:	adc    al,0xe9
  408f97:	mov    BYTE PTR [esp+edi*8-0x48],ch
  408f9b:	push   ss
  408f9c:	fs or  al,0x11
  408f9f:	faddp  st(0),st
  408fa1:	add    dh,bh
  408fa3:	mov    esi,DWORD PTR [eax+eax*1+0x6a]
  408fa7:	cwde   
  408fa8:	ficom  WORD PTR [ebx]
  408faa:	jne    0x408fb3
  408fac:	mov    dl,0x7e
  408fae:	in     eax,0x2
  408fb0:	inc    ebx
  408fb1:	sbb    ch,BYTE PTR [edx-0x69]
  408fb4:	mov    edx,0x790a5f19
  408fb9:	adc    ch,cl
  408fbb:	add    esi,DWORD PTR [ecx]
  408fbd:	bound  esi,QWORD PTR [eax+0x39000042]
  408fc3:	adc    al,0x6c
  408fc5:	mov    edi,0x8fb663a6
  408fca:	cs in  al,dx
  408fcc:	lods   al,BYTE PTR ds:[esi]
  408fcd:	jae    0x408f5d
  408fcf:	add    BYTE PTR [edx-0x69],ch
  408fd2:	jle    0x408fe7
  408fd4:	adc    eax,0x1cd42a00
  408fd9:	or     bh,BYTE PTR [ecx+0x3103e912]
  408fdf:	bound  esi,QWORD PTR [eax+0x6a143942]
  408fe5:	xchg   edi,eax
  408fe6:	pop    edx
  408fe7:	push   ss
  408fe8:	add    bl,bh
  408fea:	pop    ebp
  408feb:	pop    DWORD PTR [ecx+esi*2-0x7b]
  408fef:	push   0x18
  408ff1:	data16 mov dh,0x18
  408ff4:	call   0xff4150ba
  408ff9:	fs jbe 0x409004
  408ffc:	push   eax
  408ffd:	dec    esi
  408ffe:	mov    esi,0xa231e817
  409003:	(bad)  
  409004:	(bad)  
  409005:	jo     0x408fe5
  409007:	repz jmp 0x2599:0xf859afd4
  40900f:	mov    DWORD PTR [eax],ecx
  409011:	adc    DWORD PTR [ebp+eiz*4-0x2],esi
  409015:	push   ds
  409016:	stos   BYTE PTR es:[edi],al
  409017:	pop    ecx
  409018:	in     al,0x64
  40901a:	mov    dh,0x7
  40901c:	push   eax
  40901d:	sub    esi,0xfffffffe
  409020:	je     0x409013
  409022:	sbb    ch,BYTE PTR [edx]
  409024:	xchg   edx,eax
  409025:	inc    BYTE PTR [eax]
  409027:	add    BYTE PTR [ebp-0x6f],al
  40902a:	inc    esp
  40902b:	icebp  
  40902c:	mov    ds:0x1ae174fe,al
  409031:	jecxz  0x40902c
  409033:	out    0x1d,al
  409035:	xchg   ebx,eax
  409036:	jl     0x408ffd
  409038:	xor    ecx,DWORD PTR [ecx+0x777641e]
  40903e:	push   eax
  40903f:	into   
  409040:	mov    edi,0x393cfefb
  409045:	push   DWORD PTR [ecx+esi*8+0x4a]
  409049:	scas   al,BYTE PTR es:[edi]
  40904a:	cld    
  40904b:	mov    dh,0x3d
  40904d:	xchg   ecx,eax
  40904e:	inc    esp
  40904f:	mov    cl,0xc2
  409051:	(bad)  
  409052:	je     0x409045
  409054:	pop    edx
  409055:	scas   eax,DWORD PTR es:[edi]
  409056:	stc    
  409057:	sahf   
  409058:	and    eax,0x32917c93
  40905d:	mov    DWORD PTR [edx],ecx
  40905f:	push   ecx
  409060:	xor    dl,BYTE PTR [eax+eax*1]
  409063:	add    BYTE PTR [eax-0x37],bl
  409066:	mov    edx,0x458d1360
  40906c:	loopne 0x409030
  40906e:	std    
  40906f:	jne    0x40904d
  409071:	daa    
  409072:	jne    0x409080
  409074:	iret   
  409075:	lea    eax,[esi]
  409077:	call   0x3fb644
  40907c:	retf   
  40907d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40907e:	test   BYTE PTR [eax],0x5
  409081:	or     eax,0x131800b8
  409086:	add    BYTE PTR [esi+0x61],bl
  409089:	push   ebp
  40908a:	or     BYTE PTR [eax],al
  40908c:	add    BYTE PTR [eax],al
  40908e:	lea    edi,[esi-0x71a0af0a]
  409094:	push   es
  409095:	call   0x4012aa
  40909a:	and    DWORD PTR [ebx],0xffffffe9
  40909d:	sti    
  40909e:	or     BYTE PTR [ebx],dl
  4090a0:	add    bh,bh
  4090a2:	lds    ecx,FWORD PTR [edx]
  4090a4:	call   0xff691b90
  4090a9:	cmp    edx,DWORD PTR [ebp+0x3105750e]
  4090af:	adc    BYTE PTR [eax],al
  4090b1:	add    al,bl
  4090b3:	xchg   ebx,eax
  4090b4:	jl     0x4090b2
  4090b6:	(bad)  
  4090b7:	test   al,0x22
  4090b9:	lea    edx,ds:0x55ff5010
  4090bf:	add    bh,ah
  4090c1:	or     eax,0x8dff2329
  4090c6:	push   ebp
  4090c7:	adc    BYTE PTR [eax-0x1],dl
  4090ca:	gs add bh,ah
  4090cd:	cmp    ah,dl
  4090cf:	and    bh,bh
  4090d1:	lea    edx,[ebp+0x10]
  4090d4:	push   eax
  4090d5:	jmp    DWORD PTR ds:0xd22ee700
  4090db:	and    bh,bh
  4090dd:	lea    esi,[ecx]
  4090df:	xor    BYTE PTR [eax+edx*2],cl
  4090e2:	outs   dx,BYTE PTR ds:[esi]
  4090e3:	daa    
  4090e4:	cld    
  4090e5:	out    0x82,eax
  4090e7:	xchg   ecx,eax
  4090e8:	adc    bh,bh
  4090ea:	test   al,0x37
  4090ec:	adc    al,0x8d
  4090ee:	in     al,dx
  4090ef:	test   BYTE PTR [esi+edi*8-0xb3c0000],dh
  4090f6:	sbb    al,ah
  4090f8:	dec    edx
  4090f9:	jne    0x40910e
  4090fb:	mov    esp,esi
  4090fd:	push   eax
  4090fe:	add    DWORD PTR [ebp+0x39],0x397511bc
  409105:	push   ebx
  409106:	pop    ecx
  409107:	sti    
  409108:	es push edi
  40910a:	jge    0x409151
  40910c:	or     DWORD PTR [ebx-0x6f],ebp
  40910f:	out    dx,eax
  409110:	xor    DWORD PTR [edi+0x3f8c8295],edi
  409116:	add    al,0x74
  409118:	xchg   esp,eax
  409119:	push   0xffffff91
  40911b:	out    0x31,eax
  40911d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40911e:	test   eax,0x4237482
  409123:	je     0x409175
  409125:	xchg   ebx,eax
  409126:	lds    edi,FWORD PTR [ebx]
  409128:	jo     0x409115
  40912a:	adc    DWORD PTR [ebp-0x1f],esi
  40912d:	and    ecx,DWORD PTR [edi+0x68]
  409130:	xor    ebx,ebp
  409132:	std    
  409133:	mov    edi,0x319acd44
  409138:	add    eax,0x44ff042c
  40913d:	fistp  DWORD PTR [edx]
  40913f:	stos   BYTE PTR es:[edi],al
  409140:	dec    ecx
  409141:	jmp    0x409145
  409143:	or     esi,DWORD PTR [ecx+0x68]
  409146:	add    DWORD PTR [eax+0x6b],ebp
  409149:	pop    ss
  40914a:	(bad)  
  40914d:	dec    eax
  40914e:	adc    al,0xe8
  409150:	mov    eax,0x3a000453
  409155:	stos   DWORD PTR es:[edi],eax
  409156:	xchg   esi,eax
  409157:	sub    eax,0x14190000
  40915c:	jmp    0x9dff1f64
  409161:	cwde   
  409162:	sub    ch,ah
  409164:	sbb    esi,DWORD PTR [esi+0x6e]
  409167:	std    
  409168:	lea    ebx,[eax-0x402aa]
  40916e:	push   esi
  40916f:	rcr    BYTE PTR [edx+0x12],1
  409172:	push   esi
  409173:	std    
  409174:	sti    
  409175:	pop    ds
  409176:	dec    esi
  409177:	xchg   ebp,ebx
  409179:	sbb    esi,DWORD PTR [eax-0x5e]
  40917c:	adc    bh,BYTE PTR gs:[esi]
  40917f:	xchg   DWORD PTR [ecx+0x12],edx
  409182:	mov    esp,0xc359410f
  409187:	cld    
  409188:	dec    ebp
  409189:	adc    bl,BYTE PTR [esp+eax*1-0x33bb9af]
  409190:	cmp    eax,0x40f09c12
  409195:	dec    esi
  409196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409197:	cld    
  409198:	sub    eax,0x10ec7c12
  40919d:	push   esi
  40919e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40919f:	cld    
  4091a0:	sbb    eax,0x117eb3c1
  4091a5:	add    esp,DWORD PTR [ebp+0xc]
  4091a8:	loop   0x4091c3
  4091aa:	ss xchg edi,eax
  4091ac:	std    
  4091ad:	adc    dh,bl
  4091af:	cld    
  4091b0:	jno    0x40917a
  4091b2:	ficomp WORD PTR [ebp+0x20]
  4091b5:	inc    ebp
  4091b6:	cmp    DWORD PTR [esp+edx*4],edx
  4091b9:	jle    0x409190
  4091bb:	nop
  4091bc:	lods   al,BYTE PTR ds:[esi]
  4091bd:	adc    BYTE PTR [eax],al
  4091bf:	add    BYTE PTR [esi+0x6a1bed86],bh
  4091c5:	mov    esp,0xd43a11d5
  4091ca:	push   ebx
  4091cb:	shl    DWORD PTR [ebp-0x694b3aaa],1
  4091d1:	loop   0x40923f
  4091d3:	adc    DWORD PTR [esi+0x213bfffc],edx
  4091d9:	std    
  4091da:	je     0x4091b9
  4091dc:	sub    al,ch
  4091de:	lea    esp,[esi+0x15c00920]
  4091e4:	cmp    ch,0x74
  4091e7:	loope  0x40922a
  4091e9:	xchg   esp,edi
  4091eb:	cmp    DWORD PTR [eax+0x5c86fefe],0xbad974bc
  4091f5:	cld    
  4091f6:	push   cs
  4091f7:	xchg   bl,ah
  4091f9:	cld    
  4091fa:	je     0x4091d9
  4091fc:	and    DWORD PTR [edi-0x3b2caef8],eax
  409202:	(bad)  
  409203:	pop    esi
  409204:	and    BYTE PTR [edi-0x7782be04],al
  40920a:	dec    BYTE PTR [esi+0x6a]
  40920d:	(bad)  
  40920e:	pop    es
  40920f:	jmp    0x692c20fb
  409214:	imul   eax,eax,0xd32036fd
  40921a:	test   BYTE PTR [ecx+0x23],dh
  40921d:	sti    
  40921e:	(bad)  
  40921f:	jmp    0x7240a656
  409224:	add    BYTE PTR [eax],al
  409226:	out    dx,al
  409227:	ud2    
  409229:	sub    ecx,ecx
  40922b:	adc    BYTE PTR [eax+0x58132d1],al
  409231:	adc    BYTE PTR [edx+0x41e90014],ah
  409237:	or     DWORD PTR [ecx+eax*1],0xeefeb431
  40923e:	lds    edi,FWORD PTR [ebx-0x4665098c]
  409244:	sub    ebp,DWORD PTR [eax]
  409246:	sub    eax,0x4ae574fb
  40924b:	lods   eax,DWORD PTR ds:[esi]
  40924c:	xchg   edi,eax
  40924d:	into   
  40924e:	inc    ecx
  40924f:	out    dx,eax
  409250:	or     al,0x0
  409252:	add    BYTE PTR [ecx+0x2c],dl
  409255:	inc    ecx
  409256:	mov    BYTE PTR [esi*2-0x67968ff4],ah
  40925d:	call   edi
  40925f:	jle    0x4091e6
  409261:	mov    eax,0x68ff24d6
  409266:	push   esi
  409267:	push   ss
  409268:	add    BYTE PTR [eax],al
  40926a:	aad    0x91
  40926c:	sar    esi,0xb7
  40926f:	and    al,0x50
  409271:	call   0x4014f0
  409276:	lds    edx,FWORD PTR [ecx+0x23c7fec1]
  40927c:	push   eax
  40927d:	(bad)  
  40927e:	std    
  40927f:	dec    esi
  409280:	(bad)  
  409281:	call   edi
  409283:	push   ds
  409284:	dec    esi
  409285:	dec    ax
  409287:	pop    ss
  409288:	mov    DWORD PTR [ebp+0x24c40000],eax
  40928e:	(bad)  
  40928f:	(bad)  
  409290:	fcom   DWORD PTR [ebx]
  409292:	test   bl,dh
  409294:	or     BYTE PTR [edi],dl
  409296:	add    BYTE PTR [ebp-0x1ae83],cl
  40929c:	inc    edi
  40929d:	sbb    al,0x2
  40929f:	adc    BYTE PTR [eax],bl
  4092a1:	pop    ss
  4092a2:	add    BYTE PTR [ebp+edx*8+0x79],dh
  4092a6:	inc    edx
  4092a7:	sub    al,0xb8
  4092a9:	sahf   
  4092aa:	mov    bh,0x2c
  4092ac:	cdq    
  4092ad:	push   ss
  4092ae:	call   0x5740de
  4092b3:	or     ecx,DWORD PTR [eax]
  4092b5:	mov    ds:0x1781e903,al
  4092ba:	add    BYTE PTR [eax],al
  4092bc:	push   ebp
  4092bd:	add    dl,0xfe
  4092c0:	xlat   BYTE PTR ds:[ebx]
  4092c1:	or     cl,BYTE PTR [ebp+0x66c02442]
  4092c7:	mov    ebx,0xe7fed124
  4092cc:	xor    ebx,esi
  4092ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092cf:	jmp    DWORD PTR [esi+0x347542f5]
  4092d5:	in     al,0x7f
  4092d7:	add    BYTE PTR [ecx],dh
  4092d9:	in     eax,dx
  4092da:	or     eax,0x9fd53d75
  4092df:	sahf   
  4092e0:	xchg   BYTE PTR [ecx+0x204bffa],ch
  4092e6:	fwait
  4092e7:	int3   
  4092e8:	dec    ecx
  4092e9:	sub    al,0x4
  4092eb:	jmp    esp
  4092ed:	lock sbb cl,BYTE PTR [ecx]
  4092f0:	add    BYTE PTR [eax],al
  4092f2:	leave  
  4092f3:	mov    DWORD PTR [esi],ecx
  4092f5:	jmp    0x409322
  4092f7:	daa    
  4092f8:	add    al,0xff
  4092fa:	fsub   st(0),st
  4092fc:	sbb    bh,ch
  4092fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ff:	or     DWORD PTR [edi],0xdae9c8d
  409305:	(bad)  
  409306:	ds jg  0x4092bb
  409309:	sub    esp,ebx
  40930b:	mov    esp,0x62c9411a
  409310:	(bad)  
  409312:	es loope 0x409307
  409315:	dec    edi
  409316:	push   ds
  409317:	mov    ecx,0x3a1be7fa
  40931c:	ud0    ebx,DWORD PTR [ecx]
  40931f:	add    BYTE PTR [edi-0x1],dh
  409322:	push   es
  409323:	push   edi
  409324:	ret    
  409325:	mov    WORD PTR [ebx-0x21],?
  409328:	jnp    0x4092af
  40932a:	mov    ebp,0xeeff0f19
  40932f:	cwde   
  409330:	repnz (bad) 
  409332:	pushf  
  409333:	pop    edi
  409334:	push   cs
  409335:	(bad)  
  409336:	fisub  WORD PTR [ebx]
  409338:	dec    edi
  409339:	xor    bx,bp
  40933c:	stc    
  40933d:	mov    edi,0xcc9ad345
  409342:	sbb    DWORD PTR [edx+eax*1-0xaebbb01],ebp
  409349:	sbb    eax,DWORD PTR [eax-0x51f1225f]
  40934f:	mov    edi,0xf9a60d9c
  409354:	cmp    BYTE PTR [eax+eax*1],bl
  409357:	add    BYTE PTR [eax+0x10ec5a1],bl
  40935d:	fs mov esi,0x48ec3698
  409363:	push   cs
  409364:	xchg   cl,bh
  409366:	rcl    BYTE PTR [esi],0xa2
  409369:	stc    
  40936a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40936b:	sub    BYTE PTR [esi+edx*8+0x646e0e9e],0x96
  409373:	pop    eax
  409374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409375:	cli    
  409376:	lea    ecx,[esi]
  409378:	dec    ecx
  409379:	addr16 or al,0x4
  40937c:	xor    DWORD PTR [edi+0x1cb5fea8],ecx
  409382:	jbe    0x409392
  409384:	inc    esi
  409385:	stc    
  409386:	xor    ecx,DWORD PTR [edi+0x3f]
  409389:	stc    
  40938a:	gs sbb edx,ecx
  40938d:	outs   dx,BYTE PTR ds:[esi]
  40938e:	jmp    0x90ffc196
  409393:	or     eax,0x4640f926
  409398:	ret    0x45f8
  40939b:	cmp    al,0xf3
  40939d:	pop    es
  40939e:	jmp    0x68284f5b
  4093a3:	inc    edi
  4093a4:	sar    ecx,0x2d
  4093a7:	push   cs
  4093a8:	test   BYTE PTR [esi-0x709f2a0],0xe8
  4093af:	add    esi,DWORD PTR [ecx]
  4093b1:	adc    al,0x62
  4093b3:	enter  0xd3a,0x29
  4093b7:	xchg   edi,eax
  4093b8:	xor    eax,0x3c094
  4093bd:	add    BYTE PTR [edi+ecx*1+0x10],bl
  4093c1:	cld    
  4093c2:	xor    DWORD PTR [eax+eax*1],edx
  4093c5:	jmp    0xa86c4a74
  4093ca:	xor    bh,cl
  4093cc:	je     0x4093c3
  4093ce:	sbb    al,BYTE PTR [ebx-0x69]
  4093d1:	fidivr WORD PTR [ebx+ecx*4]
  4093d4:	test   BYTE PTR [ecx+0x41fef937],dl
  4093da:	outs   dx,DWORD PTR ds:[esi]
  4093db:	adc    eax,DWORD PTR [eax]
  4093dd:	jmp    0xc00222f9
  4093e2:	cmp    al,0xf9
  4093e4:	dec    edi
  4093e5:	shr    edx,0xa4
  4093e8:	(bad)  
  4093e9:	scas   al,BYTE PTR es:[edi]
  4093ea:	dec    BYTE PTR [esi-0x6db583f]
  4093f0:	dec    edi
  4093f1:	sahf   
  4093f2:	push   es
  4093f3:	mov    esp,0xec3496fd
  4093f8:	in     al,0x5
  4093fa:	xor    eax,0x16c8914
  4093ff:	cli    
  409400:	(bad)  
  409401:	jle    0x409478
  409403:	or     DWORD PTR [edi+ebp*4+0x5c00142d],eax
  40940a:	(bad)  
  40940b:	aad    0xfd
  40940d:	data16 and al,0x1
  409410:	add    bh,cl
  409412:	xor    dl,BYTE PTR [eax+eax*1]
  409415:	out    0xae,al
  409417:	xchg   edi,edi
  409419:	call   0x2bd51d50
  40941e:	daa    
  40941f:	idiv   esi
  409421:	ins    BYTE PTR es:[edi],dx
  409422:	add    BYTE PTR [eax],al
  409424:	repz sub edx,DWORD PTR [eax-0x3f]
  409428:	jnp    0x409452
  40942a:	inc    ecx
  40942b:	jmp    0xe9a4504a
  409430:	xor    cl,BYTE PTR [ebx]
  409432:	rcl    BYTE PTR [eax+esi*1+0x5e6474eb],0xd2
  40943a:	std    
  40943b:	push   cs
  40943c:	sub    al,0x89
  40943e:	inc    ecx
  40943f:	add    ah,bh
  409441:	ret    
  409442:	mov    bx,0xd2fc
  409446:	(bad)  
  409447:	out    0x5e,eax
  409449:	lods   al,BYTE PTR ds:[esi]
  40944a:	(bad)  
  40944b:	call   ebx
  40944d:	push   ebx
  40944e:	jne    0x409452
  409450:	jecxz  0x4093fe
  409452:	mov    edx,DWORD PTR [ebp-0xf626]
  409458:	or     eax,0x15892ad5
  40945d:	pop    edi
  40945e:	(bad)  
  40945f:	jmp    FWORD PTR [edi-0x65]
  409462:	retf   
  409463:	sub    BYTE PTR [ecx+0x10],bl
  409466:	push   DWORD PTR [ebp-0x74]
  409469:	sbb    ebx,DWORD PTR [ecx-0xf7306a]
  40946f:	mov    ch,0xd4
  409471:	or     bh,bh
  409473:	jmp    FWORD PTR [eax]
  409475:	sbb    cl,ah
  409477:	xchg   esi,eax
  409478:	mov    edi,0xf8858908
  40947d:	or     bh,bh
  40947f:	(bad)  
  409480:	cmp    BYTE PTR [eax+0x10193c48],bl
  409486:	push   DWORD PTR [ebp+0x9080000]
  40948c:	(bad)  
  40948d:	push   DWORD PTR [eax+0x480063a4]
  409493:	cld    
  409494:	mov    esi,0x4e9b2b74
  409499:	cmp    al,0xd9
  40949b:	adc    bh,bh
  40949d:	mov    ch,0xb8
  40949f:	or     bh,bh
  4094a1:	jmp    FWORD PTR [edi-0x62]
  4094a4:	push   es
  4094a5:	call   0x3f9a9b
  4094aa:	jo     0x4094f8
  4094ac:	xchg   edx,eax
  4094ad:	dec    DWORD PTR [edi+0x76]
  4094b0:	test   edx,eax
  4094b2:	dec    esi
  4094b3:	or     bh,bh
  4094b5:	push   eax
  4094b6:	dec    edi
  4094b7:	pop    esi
  4094b8:	mov    esp,0xc1e31fe
  4094bd:	call   0x4325e2
  4094c2:	lods   al,BYTE PTR ds:[esi]
  4094c3:	sub    al,0xfc
  4094c5:	test   BYTE PTR [esi+esi*8+0xa],dh
  4094c9:	inc    esi
  4094cb:	aaa    
  4094cc:	dec    edi
  4094cd:	(bad)  
  4094ce:	mov    esi,0x4d2419e5
  4094d3:	in     eax,dx
  4094d4:	add    bh,bh
  4094d6:	in     al,0xb4
  4094d8:	or     edi,edi
  4094da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094db:	aam    0x7e
  4094dd:	xchg   edx,eax
  4094de:	sahf   
  4094df:	lds    edi,FWORD PTR [edx+eax*8]
  4094e2:	sub    ebp,ebp
  4094e4:	scas   eax,DWORD PTR es:[edi]
  4094e5:	mov    bl,BYTE PTR [ebp-0x66f46f4b]
  4094eb:	mov    cl,0x71
  4094ed:	inc    DWORD PTR [eax]
  4094ef:	add    BYTE PTR [esi-0xf],bh
  4094f2:	inc    edx
  4094f3:	je     0x40951b
  4094f5:	cmp    eax,0x4e4feb4
  4094fa:	sbb    ebp,DWORD PTR [ebx-0x17f56299]
  409500:	enter  0xb7a,0xff
  409504:	push   0xe5fffbaa
  409509:	sbb    DWORD PTR [eax],0x9e806d83
  40950f:	dec    eax
  409511:	retf   
  409512:	or     DWORD PTR [ebp+0x29],esi
  409515:	gs jg  0x4094a7
  409518:	cs push edi
  40951a:	jge    0x409561
  40951c:	and    eax,0xa4feecd2
  409521:	repz sbb bh,BYTE PTR [edi+0x6a0b4f16]
  409528:	push   edx
  409529:	ss xchg ecx,eax
  40952b:	pop    es
  40952c:	sbb    DWORD PTR [ecx+0xb],edi
  40952f:	(bad)  
  409530:	(bad)  
  409531:	shl    esi,1
  409533:	(bad)  
  409534:	jl     0x40954a
  409536:	icebp  
  409537:	sbb    ebx,DWORD PTR [edx+0x5b0b1df5]
  40953d:	adc    al,0x81
  40953f:	xchg   ebp,eax
  409540:	sbb    dl,BYTE PTR [ebx-0x17]
  409543:	fwait
  409544:	js     0x40957e
  409546:	test   al,0x3
  409548:	into   
  409549:	aas    
  40954a:	popf   
  40954b:	fdiv   QWORD PTR [ecx+0x14]
  40954e:	add    edi,edx
  409550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409551:	cmc    
  409552:	in     eax,dx
  409553:	inc    BYTE PTR [eax]
  409555:	add    BYTE PTR [esi-0x80],dh
  409558:	std    
  409559:	mov    bl,0x16
  40955b:	fs sbb eax,0xd645a6c5
  409561:	nop
  409562:	ss in  al,dx
  409564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409565:	pop    es
  409566:	xchg   esi,eax
  409567:	cmc    
  409568:	rol    BYTE PTR [esi],1
  40956a:	mov    ds:0x869dbdf5,eax
  40956f:	ins    DWORD PTR es:[edi],dx
  409570:	imul   eax,edi,0xfffffff1
  409573:	adc    eax,DWORD PTR [ecx-0x52]
  409576:	cmp    dl,BYTE PTR [ebx-0x17]
  409579:	or     ah,BYTE PTR [eax+ebx*2]
  40957c:	rol    ah,1
  40957e:	in     ax,dx
  409580:	in     al,dx
  409581:	jo     0x4095e1
  409583:	cmc    
  409584:	loope  0x4095c9
  409586:	fstp   QWORD PTR [edi]
  409588:	sbb    DWORD PTR [esi+edi*8-0x1efbd7c9],ebx
  40958f:	hlt    
  409590:	sti    
  409591:	sti    
  409592:	push   esi
  409593:	mov    ds:0xec360a6c,al
  409598:	cmp    al,0x74
  40959a:	cs cmc 
  40959c:	rol    BYTE PTR [ebx],cl
  40959e:	fwait
  40959f:	adc    al,0xc1
  4095a1:	outs   dx,DWORD PTR ds:[esi]
  4095a2:	pop    ebp
  4095a3:	push   ebx
  4095a4:	jmp    0xe935ac44
  4095a9:	sbb    DWORD PTR [ecx],0xffffffdb
  4095ac:	push   esp
  4095ad:	or     al,BYTE PTR [esi]
  4095af:	or     DWORD PTR [eax],eax
  4095b1:	sub    DWORD PTR [esi+0x1a995030],ebp
  4095b7:	jne    0x409554
  4095b9:	add    BYTE PTR es:[eax],al
  4095bc:	cmp    ecx,DWORD PTR [ecx]
  4095be:	rcl    BYTE PTR [ebp-0x4697bb2a],0xf6
  4095c5:	push   ebx
  4095c6:	add    BYTE PTR [ecx+0x11087f2b],bh
  4095cc:	xchg   esi,eax
  4095cd:	clc    
  4095ce:	(bad)  
  4095cf:	(bad)  
  4095d0:	sub    edx,DWORD PTR [esi-0x13d70970]
  4095d6:	cwde   
  4095d7:	pop    eax
  4095d8:	sub    esi,ebp
  4095da:	(bad)  
  4095db:	pop    esp
  4095dc:	cmp    ebp,esi
  4095de:	je     0x4095d1
  4095e0:	dec    edx
  4095e1:	or     BYTE PTR [edi-0x3e34d72a],cl
  4095e7:	in     eax,0x32
  4095e9:	pop    edi
  4095ea:	mov    edx,ebp
  4095ec:	mov    dl,0xcf
  4095ee:	jmp    0x4095a6
  4095f0:	cmp    ch,dh
  4095f2:	mov    WORD PTR [ecx+ebp*1],gs
  4095f5:	push   DWORD PTR fs:[edi*2+0x4af574f5]
  4095fd:	loop   0x409661
  4095ff:	jmp    0xe7009f36
  409604:	(bad)  
  409606:	(bad)  
  409607:	call   0x8185633e
  40960c:	xor    eax,0xf1e90014
  409611:	dec    esi
  409612:	hlt    
  409613:	jbe    0x409645
  409615:	adc    al,0x0
  409617:	add    ebp,DWORD PTR ds:0x32d3006a
  40961d:	jle    0x40961f
  40961f:	ins    BYTE PTR es:[edi],dx
  409620:	add    BYTE PTR [eax],al
  409622:	out    0xe7,al
  409624:	dec    edi
  409625:	fs sahf 
  409627:	call   0x4468e522
  40962c:	inc    DWORD PTR [eax]
  40962e:	int    0x1f
  409630:	push   DWORD PTR [ebp+0x44]
  409633:	adc    BYTE PTR [ebx+eiz*2-0x3ff4e7f8],ah
  40963a:	mov    esp,0xd88ee7f2
  40963f:	pop    ss
  409640:	add    BYTE PTR [eax+0x15],ch
  409643:	sar    BYTE PTR [edi],1
  409645:	add    BYTE PTR [edi-0x5d],al
  409648:	push   cs
  409649:	call   0x3ffa5d
  40964e:	test   al,0x70
  409650:	ror    BYTE PTR [ebp-0x8fbb3],1
  409656:	(bad)  
  409657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409658:	push   eax
  409659:	call   0x3ffa5d
  40965e:	and    DWORD PTR [edx-0x10],esi
  409661:	test   DWORD PTR [edi+0x190de81c],0x886aff1c
  40966b:	(bad)  
  40966c:	fdivr  DWORD PTR [ecx+ebx*2]
  40966f:	sbb    bh,bh
  409671:	mov    ch,0xc8
  409673:	add    al,0xff
  409675:	inc    edi
  409677:	mov    ds:0x8358e80a,al
  40967c:	(bad)  
  40967d:	jmp    ecx
  40967f:	jno    0x40966d
  409681:	test   edi,0xbd831c
  409687:	add    BYTE PTR [esp+eax*1-0x5cb70001],dh
  40968e:	adc    DWORD PTR [eax+0x59],ebp
  409691:	pop    ss
  409692:	out    dx,eax
  409693:	mov    esi,0xf7ec61c7
  409698:	(bad)  
  409699:	sbb    edi,edi
  40969b:	jne    0x4096ed
  40969d:	seta   BYTE PTR [edx-0x4a00e369]
  4096a4:	je     0x4096aa
  4096a6:	(bad)  
  4096a7:	push   DWORD PTR [ecx]
  4096a9:	push   ebp
  4096aa:	cmp    al,0x90
  4096ac:	push   ss
  4096ad:	bound  ecx,QWORD PTR [eax]
  4096af:	mov    ch,0x1
  4096b1:	xor    cl,BYTE PTR [eax]
  4096b3:	inc    DWORD PTR [esi]
  4096b5:	test   al,0xf6
  4096b7:	inc    BYTE PTR [ebp+esi*8+0x41f6301a]
  4096be:	or     bh,bh
  4096c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c1:	or     al,0x10
  4096c3:	jmp    esi
  4096c5:	add    al,0x58
  4096c7:	nop
  4096c8:	fimul  WORD PTR [ecx]
  4096ca:	or     BYTE PTR [ebp-0x27],al
  4096cd:	adc    edi,DWORD PTR [edi+0x819cefe]
  4096d3:	jne    0x40969a
  4096d5:	add    al,0xa
  4096d7:	bound  esi,QWORD PTR [ecx]
  4096d9:	std    
  4096da:	cmp    edx,eax
  4096dc:	and    eax,0x9d8aadfd
  4096e1:	jnp    0x409723
  4096e3:	call   0x8d476886
  4096e8:	hlt    
  4096e9:	enter  0xfeb3,0x0
  4096ed:	add    BYTE PTR [ebp*8-0x3ac28afb],bl
  4096f4:	and    ah,BYTE PTR [edx+0x31]
  4096f7:	std    
  4096f8:	stc    
  4096f9:	mov    edi,0xe6802e
  4096fe:	xor    ebp,edi
  409700:	cmp    eax,0x2fc6945
  409705:	add    BYTE PTR [ecx],dh
  409707:	mov    edx,0x15ef3c0
  40970c:	add    eax,DWORD PTR [eax]
  40970e:	retf   
  40970f:	cld    
  409710:	cwde   
  409711:	(bad)  
  409712:	fdivr  st,st(4)
  409714:	cwde   
  409715:	push   DWORD PTR [ebp-0x53afefc9]
  40971b:	jg     0x40972d
  40971d:	div    DWORD PTR [esi]
  40971f:	xor    DWORD PTR [esi+edi*8+0x76114a4],0x5150f09c
  40972a:	xchg   ebx,eax
  40972b:	adc    al,0xe9
  40972d:	cli    
  40972e:	(bad)  
  40972f:	push   0x15101ce4
  409734:	jmp    0x1120303c
  409739:	(bad)  
  40973c:	mov    ebx,0x59cd0ef3
  409741:	pop    es
  409742:	out    dx,al
  409743:	inc    esp
  409744:	jb     0x40977a
  409746:	mov    ah,0x97
  409748:	adc    al,0xf
  40974a:	fdivrp st(1),st
  40974c:	mov    eax,0x79dcceb1
  409751:	pop    es
  409752:	add    BYTE PTR [eax],al
  409754:	into   
  409755:	fwait
  409756:	imul   edx,DWORD PTR [esi+edi*4],0xfffffff1
  40975a:	std    
  40975b:	sbb    ebx,DWORD PTR [edi]
  40975d:	test   ch,dh
  40975f:	push   es
  409760:	dec    ebx
  409761:	adc    al,0x83
  409763:	add    ebp,DWORD PTR [esi-0x59f12759]
  409769:	icebp  
  40976a:	fst    QWORD PTR [eax+0x730cfc2a]
  409770:	xchg   esi,eax
  409771:	icebp  
  409772:	pop    edi
  409773:	sbb    BYTE PTR [ebp-0x79f93a17],0xa7
  40977a:	int3   
  40977b:	push   cs
  40977c:	jle    0x40976f
  40977e:	sar    BYTE PTR [edi],0x98
  409781:	icebp  
  409782:	lods   eax,DWORD PTR ds:[esi]
  409783:	cli    
  409784:	scas   al,BYTE PTR es:[edi]
  409785:	push   0x97b9b40a
  40978a:	nop
  40978b:	push   cs
  40978c:	pop    esi
  40978d:	icebp  
  40978e:	xchg   ebp,eax
  40978f:	push   eax
  409790:	dec    ecx
  409791:	jmp    0x13999e23
  409796:	pop    esp
  409797:	push   es
  409798:	inc    esi
  409799:	sbb    eax,0x7bf68fa9
  40979e:	add    bl,ch
  4097a0:	xor    al,BYTE PTR [ecx]
  4097a2:	mov    esi,0x412fd701
  4097a7:	jmp    0x57283edb
  4097ac:	aaa    
  4097ad:	icebp  
  4097ae:	(bad)  
  4097af:	fcomp  QWORD PTR [edx]
  4097b1:	stc    
  4097b2:	xchg   edi,eax
  4097b3:	xchg   ebp,eax
  4097b4:	aaa    
  4097b5:	icebp  
  4097b6:	addr16 jmp 0x4097b9
  4097b9:	add    BYTE PTR [edx],dh
  4097bb:	add    DWORD PTR [esi+0x412fa4d1],edi
  4097c1:	jmp    0x37283ef5
  4097c6:	aaa    
  4097c7:	icebp  
  4097c8:	(bad)  
  4097c9:	pushf  
  4097ca:	jmp    0x67f1:0x37557ff8
  4097d1:	jmp    0x81fe9908
  4097d6:	pusha  
  4097d7:	xor    BYTE PTR [ecx-0x17],al
  4097da:	das    
  4097db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097dc:	out    0xf6,eax
  4097de:	xor    al,0xf1
  4097e0:	(bad)  
  4097e1:	jl     0x40979d
  4097e3:	clc    
  4097e4:	addr16 xor eax,0x7de7f137
  4097ea:	sbb    al,0xf1
  4097ec:	(bad)  
  4097ed:	fsubp  st(6),st
  4097ef:	push   esi
  4097f1:	(bad)  
  4097f2:	sub    al,0xfc
  4097f4:	mov    BYTE PTR [esi+0x34],bl
  4097f7:	icebp  
  4097f8:	(bad)  
  4097f9:	jl     0x409818
  4097fb:	jmp    0x677556fe
  409800:	or     al,0xb6
  409802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409803:	sbb    al,ch
  409805:	mov    WORD PTR [edi],?
  409807:	icebp  
  409808:	(bad)  
  409809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40980a:	mul    bl
  40980c:	neg    BYTE PTR [esi+0x666cfc34]
  409812:	sub    al,0xf1
  409814:	(bad)  
  409815:	and    al,0x3d
  409817:	sti    
  409818:	lock add BYTE PTR [esi+0xffff16],ch
  40981f:	add    BYTE PTR [ebp+0x18],al
  409822:	call   0x58c1de
  409827:	leave  
  409828:	(bad)  
  40982a:	(bad)  
  40982b:	push   esp
  40982c:	mov    ds:0x7cc4830c,eax
  409831:	mov    bh,dh
  409833:	imul   ebp,DWORD PTR [edx],0x70087519
  409839:	cdq    
  40983a:	mov    bh,bh
  40983c:	outs   dx,DWORD PTR ds:[esi]
  40983d:	imul   eax,DWORD PTR [ebp-0x4],0xffffffe0
  409841:	adc    eax,DWORD PTR [eax]
  409843:	out    dx,eax
  409844:	jle    0x4097d6
  409846:	mov    al,0x3c
  409848:	cdq    
  409849:	adc    ebp,DWORD PTR [eax-0x3e]
  40984c:	int3   
  40984d:	sar    dh,cl
  40984f:	inc    ch
  409851:	jmp    0x409839
  409853:	inc    edi
  409854:	je     0x40986f
  409856:	jmp    FWORD PTR [eax+0x12]
  409859:	fdivr  QWORD PTR [edi]
  40985b:	add    BYTE PTR [edi],ch
  40985d:	fistp  WORD PTR [edx+0x29]
  409860:	mov    DWORD PTR [ebx],edx
  409862:	push   DWORD PTR [ebp-0x30]
  409865:	or     edx,DWORD PTR [eax+0x68189ffd]
  40986b:	retf   0xd34c
  40986e:	(bad)  
  40986f:	mov    dl,BYTE PTR [bp+di]
  409872:	add    BYTE PTR [eax-0x17f96181],al
  409878:	(bad)  
  409879:	push   ss
  40987a:	(bad)  
  40987b:	jmp    eax
  40987d:	xor    eax,0x8b88413c
  409882:	add    BYTE PTR [eax],al
  409884:	add    BYTE PTR [eax],al
  409886:	mov    BYTE PTR [ebx+0xb5075fe],dl
  40988c:	pop    ebx
  40988d:	dec    BYTE PTR [edi+0x7d1e6818]
  409893:	sar    dh,cl
  409895:	addr16 xor ebx,edi
  409898:	add    al,BYTE PTR [eax]
  40989a:	mov    cl,0x9e
  40989c:	lea    eax,[edi]
  40989e:	pop    ecx
  40989f:	and    al,0x6
  4098a1:	(bad)  
  4098a2:	outs   dx,BYTE PTR ds:[esi]
  4098a4:	mov    ?,ebx
  4098a6:	ss lock cli 
  4098a9:	out    0x86,eax
  4098ab:	push   ecx
  4098ac:	add    al,0xff
  4098ae:	clc    
  4098af:	cmp    bh,bh
  4098b1:	inc    DWORD PTR [ebp-0x6300e89e]
  4098b7:	stc    
  4098b8:	sbb    bl,BYTE PTR [ecx]
  4098ba:	mov    ds:0xf10b045d,al
  4098bf:	mov    al,0xc9
  4098c1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4098c3:	out    dx,eax
  4098c4:	sar    edi,0x66
  4098c7:	push   ebp
  4098c8:	push   ebp
  4098c9:	xchg   edx,eax
  4098ca:	out    dx,al
  4098cb:	cmp    eax,0xfd594fb3
  4098d0:	add    ch,bh
  4098d2:	lahf   
  4098d3:	test   BYTE PTR [eax-0x4d028fc4],cl
  4098d9:	inc    BYTE PTR [ebp+esi*8+0x1a]
  4098dd:	jne    0x409861
  4098df:	adc    eax,0xfc495804
  4098e4:	add    ch,bh
  4098e6:	ja     0x40987c
  4098e8:	jns    0x409927
  4098ea:	add    BYTE PTR [eax],al
  4098ec:	lock cld 
  4098ee:	mov    dl,0xfe
  4098f0:	sbb    al,0xe5
  4098f2:	jmp    0xa4e8:0x2cde260
  4098f9:	jbe    0x4098fe
  4098fb:	(bad)  
  4098fc:	js     0x4098b8
  4098fe:	or     eax,DWORD PTR [eax]
  409900:	fsub   QWORD PTR [ecx-0x10]
  409903:	xor    BYTE PTR [ebp-0x50],0x6d
  409907:	add    BYTE PTR [ebx],cl
  409909:	sbb    al,BYTE PTR [ebx]
  40990b:	jne    0x409946
  40990d:	aad    0xb2
  40990f:	mov    ah,BYTE PTR [esi+0x13]
  409912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409913:	(bad)  
  409914:	cmc    
  409915:	out    dx,eax
  409916:	adc    bl,BYTE PTR [esi]
  409918:	push   esi
  409919:	push   0xeea5ebe1
  40991e:	lea    eax,[ebx]
  409920:	(bad)  [edx]
  409922:	xchg   BYTE PTR [ecx+0x29],bh
  409925:	cld    
  409926:	jno    0x40992b
  409928:	ss out dx,al
  40992a:	add    ah,BYTE PTR [eax]
  40992c:	cs push 0xedb1ebe1
  409932:	add    ebx,DWORD PTR gs:[esi]
  409935:	push   0x1c9c035d
  40993a:	inc    ecx
  40993b:	int    0xbb
  40993d:	in     eax,dx
  40993e:	dec    ebp
  40993f:	int    0xf0
  409941:	sbb    cl,ch
  409943:	pop    eax
  409944:	stos   BYTE PTR es:[edi],al
  409945:	add    BYTE PTR [edx-0x9bcd236],bl
  40994b:	inc    esp
  40994c:	xor    DWORD PTR [ecx+ebp*8],edx
  40994f:	add    eax,DWORD PTR [eax]
  409951:	add    BYTE PTR [ecx],dh
  409953:	cmp    DWORD PTR [edx+0x3],eax
  409956:	fs sbb al,0x11
  409959:	aaa    
  40995a:	jbe    0x409970
  40995c:	jmp    0x6a5cfeef
  409961:	cld    
  409962:	xor    BYTE PTR [esi-0x28],ah
  409965:	push   es
  409966:	loope  0x4098f9
  409968:	adc    al,BYTE PTR [esi]
  40996a:	dec    edi
  40996b:	xchg   ebx,eax
  40996c:	mov    dl,0x5f
  40996e:	or     eax,0x6e69e467
  409973:	adc    al,BYTE PTR [ebp+0x4]
  409976:	sahf   
  409977:	addr16 in eax,dx
  409979:	jmp    0x4099e7
  40997b:	dec    ebp
  40997c:	jmp    0xf66b284
  409981:	inc    ebp
  409982:	xor    DWORD PTR [edi+ecx*4+0x40],edi
  409986:	lock adc edx,ecx
  409989:	cdq    
  40998a:	sahf   
  40998b:	in     eax,dx
  40998c:	push   DWORD PTR [ebp+0x4473d43f]
  409992:	xor    ah,BYTE PTR [edi+0x8]
  409995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409996:	cmp    DWORD PTR [esi],esp
  409998:	sub    BYTE PTR ds:0x3fedc391,ch
  40999f:	aam    0x74
  4099a1:	xor    al,0x32
  4099a3:	pop    es
  4099a4:	inc    esi
  4099a5:	(bad)  
  4099a6:	cmc    
  4099a7:	adc    esp,DWORD PTR [ebx+0x52f218]
  4099ad:	push   0x71
  4099af:	inc    ebx
  4099b0:	aas    
  4099b1:	sub    BYTE PTR ds:0xf17514,ch
  4099b7:	add    BYTE PTR [ebx],dh
  4099b9:	pop    es
  4099ba:	cmp    bl,BYTE PTR [edi]
  4099bc:	ins    BYTE PTR es:[edi],dx
  4099bd:	adc    al,0xeb
  4099bf:	adc    BYTE PTR [edi+0x33e86a14],bl
  4099c5:	daa    
  4099c6:	push   ecx
  4099c7:	push   es
  4099c8:	je     0x4099de
  4099ca:	call   esp
  4099cc:	fs cs inc ecx
  4099cf:	jmp    0xe24c6a8b
  4099d4:	repnz pusha 
  4099d6:	and    DWORD PTR [esi],esp
  4099d8:	sbb    DWORD PTR [ebx+0x3f],eax
  4099db:	test   al,0x32
  4099dd:	in     eax,dx
  4099de:	adc    al,0xbb
  4099e0:	jo     0x409a35
  4099e2:	add    BYTE PTR [edx-0x12],ch
  4099e5:	adc    bh,bh
  4099e7:	fdiv   st(4),st
  4099e9:	sub    eax,0x17ebe941
  4099ee:	push   ecx
  4099ef:	mov    dh,0xf5
  4099f1:	adc    eax,DWORD PTR [eax]
  4099f3:	jmp    0xe92bae2a
  4099f8:	cmc    
  4099f9:	cwde   
  4099fa:	ret    0x6a42
  4099fd:	rol    BYTE PTR [edi],cl
  4099ff:	jmp    0xe91c9b9
  409a04:	repnz adc eax,DWORD PTR [eax]
  409a07:	add    BYTE PTR [ebx+esi*1],bh
  409a0a:	push   DWORD PTR ds:0x415319
  409a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a11:	add    al,0x52
  409a13:	sbb    DWORD PTR ds:[eax],ebx
  409a16:	add    esp,0x4c
  409a19:	adc    edx,DWORD PTR ds:0x7600003a
  409a1f:	push   ecx
  409a20:	add    bh,al
  409a22:	pop    ebp
  409a23:	inc    ecx
  409a24:	aas    
  409a25:	inc    ecx
  409a26:	pop    eax
  409a27:	adc    BYTE PTR [eax],al
  409a29:	add    BYTE PTR [eax-0x29],cl
  409a2c:	push   ebx
  409a2d:	mov    esp,DWORD PTR [esi+edx*4-0x66b40f3e]
  409a34:	inc    ebx
  409a35:	or     BYTE PTR [ebx],dl
  409a37:	fdiv   DWORD PTR [edx+0xb]
  409a3a:	mov    ebp,DWORD PTR [ebx+0xc]
  409a3d:	add    ah,bh
  409a3f:	adc    al,BYTE PTR [eax+0x7631838]
  409a45:	sub    ebx,DWORD PTR [eax+0x49]
  409a48:	leave  
  409a49:	ret    0x1800
  409a4c:	cmp    BYTE PTR [eax],0xb6
  409a4f:	arpl   WORD PTR [eax],dx
  409a51:	and    ebp,0x46
  409a54:	aas    
  409a55:	inc    ecx
  409a56:	fcom   DWORD PTR [edi]
  409a58:	jne    0x409a61
  409a5a:	add    ebx,eax
  409a5c:	pop    ecx
  409a5d:	leave  
  409a5e:	or     bl,BYTE PTR [eax]
  409a60:	add    BYTE PTR [eax+0x3e7495e0],al
  409a66:	push   ebx
  409a67:	inc    ebx
  409a68:	or     al,0x4a
  409a6a:	dec    ebx
  409a6b:	repnz add DWORD PTR [ebx],ecx
  409a6e:	sbb    ah,BYTE PTR [ebx+0x6]
  409a71:	and    DWORD PTR ds:0x8c75011b,0x38
  409a78:	shr    bl,0x2c
  409a7b:	adc    eax,0x52230c4d
  409a80:	or     al,0x5
  409a82:	add    BYTE PTR [eax],al
  409a84:	xor    ebp,edi
  409a86:	push   es
  409a87:	add    BYTE PTR [ecx],dh
  409a89:	mov    esp,0xc4e101e2
  409a8e:	sbb    al,0x8d
  409a90:	jbe    0x409a3c
  409a92:	push   edx
  409a93:	mov    eax,DWORD PTR [esi*8+0x20665044]
  409a9a:	adc    BYTE PTR [edx+0x49],dl
  409a9d:	test   al,0x9a
  409a9f:	(bad)  
  409aa0:	push   esi
  409aa1:	push   ebp
  409aa2:	pop    ebp
  409aa3:	leave  
  409aa4:	jae    0x409a9b
  409aa6:	add    ch,BYTE PTR [ebx]
  409aa8:	push   0xffffff9a
  409aaa:	jne    0x409ab8
  409aac:	ds call 0x77204bc
  409ab2:	add    al,0xff
  409ab4:	inc    esp
  409ab5:	mov    ds:0x7e314140,eax
  409aba:	(bad)  
  409abb:	cvtpi2ps xmm7,QWORD PTR ds:0xafa86577
  409ac2:	(bad)  
  409ac3:	imul   edi,DWORD PTR ds:0x61f04670,0xfe8bf655
  409acd:	push   ecx
  409ace:	ins    DWORD PTR es:[edi],dx
  409acf:	add    BYTE PTR [edi+ebp*4-0x5811b00e],ah
  409ad6:	(bad)  
  409ad7:	(bad)  
  409ad8:	cmp    al,0x8b
  409ada:	inc    eax
  409adb:	inc    ecx
  409adc:	xor    DWORD PTR [esi-0x39],edi
  409adf:	or     ebp,DWORD PTR [edx]
  409ae1:	cmp    eax,0xb7bc3376
  409ae6:	repnz add BYTE PTR [eax],0x0
  409aea:	dec    ecx
  409aeb:	icebp  
  409aec:	add    dh,BYTE PTR [edx+ebx*1+0x66]
  409af0:	inc    ebx
  409af1:	or     BYTE PTR [ecx-0x73],dh
  409af4:	jmp    0x898a:0xfee1bdb4
  409afb:	inc    edi
  409afc:	inc    esi
  409afd:	lock sahf 
  409aff:	adc    ebx,DWORD PTR [ecx+0xc]
  409b02:	add    ch,bl
  409b04:	pop    eax
  409b05:	or     BYTE PTR [ecx-0x78009b32],bl
  409b0b:	jge    0x409af6
  409b0d:	nop
  409b0e:	cmc    
  409b0f:	jecxz  0x409b29
  409b11:	call   FWORD PTR ds:0x3144ff56
  409b17:	xchg   edi,eax
  409b18:	lods   al,BYTE PTR ds:[esi]
  409b19:	or     al,0xdb
  409b1b:	adc    al,0xae
  409b1d:	jns    0x409b7c
  409b1f:	jmp    0x82e9:0x551741fb
  409b26:	jb     0x409b43
  409b28:	(bad)  
  409b2a:	jmp    0x409b08
  409b2c:	stos   BYTE PTR es:[edi],al
  409b2d:	or     al,0x31
  409b2f:	inc    ecx
  409b30:	jb     0x409b22
  409b32:	aaa    
  409b33:	pusha  
  409b34:	in     eax,dx
  409b35:	(bad)  
  409b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b37:	sbb    al,0x76
  409b39:	sbb    DWORD PTR [eax+0x29],edi
  409b3c:	sub    BYTE PTR [edx+esi*4],al
  409b3f:	shl    al,1
  409b41:	push   ebx
  409b42:	push   ss
  409b43:	pusha  
  409b44:	in     eax,dx
  409b45:	inc    BYTE PTR [ebp+0x6c19561c]
  409b4b:	sub    DWORD PTR [eax-0x4dfffffd],ebp
  409b51:	shl    al,1
  409b53:	mov    bl,BYTE PTR [ebp+0x4]
  409b56:	jo     0x409b5a
  409b58:	mov    ebx,ebx
  409b5a:	sub    dl,BYTE PTR [eax]
  409b5c:	xor    DWORD PTR [edi],edi
  409b5e:	(bad)  
  409b5f:	lock mov bl,0xd0
  409b62:	adc    bh,bh
  409b64:	pop    ebp
  409b65:	sbb    BYTE PTR [ecx],dl
  409b67:	add    esp,DWORD PTR [eax-0xef4ea17]
  409b6d:	pop    edi
  409b6e:	in     eax,0xcc
  409b70:	lock add al,0xe9
  409b73:	(bad)  
  409b74:	cmp    eax,0xdce01118
  409b79:	jmp    0xd47c917d
  409b7e:	jae    0x409b65
  409b80:	ins    DWORD PTR es:[edi],dx
  409b81:	ror    DWORD PTR [edi],cl
  409b83:	jmp    0xde54fc1f
  409b88:	or     DWORD PTR [eax+ebp*8],eax
  409b8b:	lods   al,BYTE PTR ds:[esi]
  409b8c:	xor    ecx,ebp
  409b8e:	(bad)  
  409b8f:	loop   0x409c03
  409b91:	pusha  
  409b92:	add    al,0xb0
  409b94:	jo     0x409baf
  409b96:	add    BYTE PTR [ecx+0x28],dl
  409b99:	sub    DWORD PTR [ecx-0x17],eax
  409b9c:	fcmove st,st(7)
  409b9e:	cmp    eax,0x8bfc3528
  409ba3:	jg     0x409bfc
  409ba5:	jmp    0xdc68:0x18c9a90a
  409bac:	pop    es
  409bad:	push   ebx
  409bae:	add    BYTE PTR [ecx],al
  409bb0:	out    0x29,eax
  409bb2:	inc    ecx
  409bb3:	jmp    0x6c8a9bb8
  409bb8:	xchg   esi,eax
  409bb9:	jle    0x409bea
  409bbb:	push   ds
  409bbc:	shl    dh,0xae
  409bbf:	mov    ecx,0x9732e900
  409bc4:	inc    esp
  409bc5:	gs sub cl,0x74
  409bc9:	in     eax,dx
  409bca:	(bad)  
  409bcc:	xor    eax,0x83146c16
  409bd1:	and    eax,0xf6c01d2a
  409bd6:	test   eax,0x32e90081
  409bdb:	jle    0x409bdd
  409bdd:	fs jns 0x409bcc
  409be0:	dec    edi
  409be1:	ret    
  409be2:	fbstp  TBYTE PTR [eax-0x3b]
  409be5:	out    0x6d,al
  409be7:	adc    al,0xff
  409be9:	xchg   esp,eax
  409bea:	into   
  409beb:	jmp    0x53487004
  409bf0:	add    BYTE PTR [edx-0xa],ch
  409bf3:	add    al,0xb
  409bf5:	add    BYTE PTR [eax],cl
  409bf7:	sbb    al,BYTE PTR [ebp+0x14996a]
  409bfd:	jmp    DWORD PTR ds:0xc915fded
  409c03:	sub    DWORD PTR [ecx+0x0],eax
  409c06:	or     ebx,esp
  409c08:	add    al,BYTE PTR [ebx+0x5747b90]
  409c0e:	jno    0x409c5b
  409c10:	add    DWORD PTR [eax],eax
  409c12:	mov    BYTE PTR [ecx+0x7e18f443],bl
  409c18:	add    bh,bh
  409c1a:	add    BYTE PTR [eax],al
  409c1c:	and    eax,0x9f14e6e8
  409c21:	out    0xfd,al
  409c23:	or     ecx,DWORD PTR [eax+0x49398416]
  409c29:	adc    al,0x0
  409c2b:	sub    DWORD PTR ds:0xd40efeec,0x36
  409c32:	add    DWORD PTR [eax],eax
  409c34:	dec    eax
  409c35:	xchg   esp,eax
  409c36:	add    BYTE PTR ss:[edi],bh
  409c39:	nop
  409c3a:	and    al,0x1
  409c3c:	sbb    BYTE PTR [eax+edx*2],dl
  409c3f:	mov    eax,DWORD PTR [ebp-0x14]
  409c42:	inc    eax
  409c43:	push   edx
  409c44:	mov    al,0x76
  409c46:	mov    edi,edi
  409c48:	(bad)
  409c4c:	pusha  
  409c4d:	jmp    0x5fa090c5
  409c52:	call   0x89c00ca9
  409c57:	jmp    FWORD PTR [edi-0x2f]
  409c5a:	inc    ebx
  409c5b:	lock fcom DWORD PTR [ebx]
  409c5e:	add    BYTE PTR [eax],al
  409c60:	pop    ss
  409c61:	dec    edi
  409c62:	in     al,dx
  409c63:	add    al,cl
  409c65:	adc    eax,DWORD PTR [eax]
  409c67:	or     ebp,0x56
  409c6a:	aas    
  409c6b:	inc    ecx
  409c6c:	fcom   DWORD PTR [ebx]
  409c6e:	jne    0x409cc2
  409c70:	xor    DWORD PTR [ebp-0x28fbfc8],edx
  409c76:	jmp    0x1950:0x2fd5529
  409c7d:	rol    DWORD PTR [edx+0x41],cl
  409c80:	add    BYTE PTR [eax],al
  409c82:	xor    esi,ebx
  409c84:	jne    0x409c6e
  409c86:	mov    DWORD PTR [ecx],ecx
  409c88:	pop    edi
  409c89:	add    BYTE PTR [ecx],dh
  409c8b:	loop   0x409c4f
  409c8d:	jae    0x409cb8
  409c8f:	inc    ebp
  409c90:	inc    ebx
  409c91:	inc    eax
  409c92:	lock cld 
  409c94:	jmp    0x950:0x2fcdd0d
  409c9b:	cmp    al,0x44
  409c9d:	inc    ecx
  409c9e:	xor    DWORD PTR [esi+0x6d59e875],esp
  409ca4:	pop    esi
  409ca5:	add    BYTE PTR [ecx],dh
  409ca7:	bnd ret 0x2373
  409cab:	add    eax,0xfcf0404b
  409cb0:	jmp    0xc950:0x2fceaf1
  409cb7:	xor    eax,DWORD PTR [ecx+eax*2+0x31]
  409cbb:	mov    ?,WORD PTR [ebp-0x18]
  409cbe:	sbb    DWORD PTR [ecx+0x5e],eax
  409cc1:	add    BYTE PTR [ecx],dh
  409cc3:	xchg   edx,eax
  409cc4:	sbb    ch,BYTE PTR [eax-0x7d]
  409cc7:	cmp    eax,0x55090043
  409ccc:	pop    eax
  409ccd:	add    BYTE PTR [ecx],dh
  409ccf:	lods   eax,DWORD PTR ds:[esi]
  409cd0:	push   0x52
  409cd2:	jno    0x409c90
  409cd4:	add    bh,bh
  409cd6:	test   BYTE PTR [ebp-0x15],dl
  409cd9:	jns    0x409d2f
  409cdb:	std    
  409cdc:	add    cl,BYTE PTR [ebx]
  409cde:	icebp  
  409cdf:	lahf   
  409ce0:	ins    BYTE PTR es:[edi],dx
  409ce1:	lea    ebp,[ecx+ebp*1+0x53]
  409ce5:	push   0x0
  409ce7:	add    BYTE PTR [eax],dh
  409ce9:	ss jbe 0x409ce4
  409cec:	leave  
  409ced:	adc    esi,DWORD PTR [edx+0x1de6cffd]
  409cf3:	jbe    0x409cb2
  409cf5:	inc    ebx
  409cf6:	add    DWORD PTR [esi-0x44],eax
  409cf9:	out    0xd,al
  409cfb:	mov    ch,BYTE PTR [ebp-0x1c]
  409cfe:	jae    0x409d46
  409d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d01:	inc    ebx
  409d02:	xchg   ebx,eax
  409d03:	add    DWORD PTR [esi+0x61eaf160],esp
  409d09:	out    0xed,al
  409d0b:	sti    
  409d0c:	xchg   edi,eax
  409d0d:	pusha  
  409d0e:	fst    QWORD PTR [ecx+ebx*4+0x3a]
  409d12:	fdiv   st(3),st
  409d14:	xchg   DWORD PTR [ebx+ebp*1-0x3e974c18],ebx
  409d1b:	add    al,0xfd
  409d1d:	pop    ds
  409d1e:	push   0x79
  409d20:	pop    ebp
  409d21:	adc    esi,DWORD PTR ds:0xe913d92a
  409d27:	jmp    0xe549:0xc33e69c
  409d2e:	outs   dx,BYTE PTR ds:[esi]
  409d2f:	sti    
  409d30:	dec    edi
  409d31:	out    0x13,al
  409d33:	in     al,dx
  409d34:	inc    edi
  409d35:	pusha  
  409d36:	loope  0x409d23
  409d38:	in     eax,0x8e
  409d3a:	(bad)  
  409d3b:	sti    
  409d3c:	aaa    
  409d3d:	pusha  
  409d3e:	jns    0x409d3b
  409d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d41:	sbb    al,0x91
  409d43:	dec    esi
  409d44:	scas   al,BYTE PTR es:[edi]
  409d45:	in     eax,0x75
  409d47:	sti    
  409d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d49:	clc    
  409d4a:	ins    DWORD PTR es:[edi],dx
  409d4b:	jno    0x409d4d
  409d4d:	add    BYTE PTR [ecx],ch
  409d4f:	cld    
  409d50:	and    eax,0x5de60f83
  409d55:	jno    0x409d58
  409d57:	std    
  409d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d59:	(bad)  
  409d5a:	jmp    ebp
  409d5c:	dec    ebp
  409d5d:	jno    0x409d64
  409d5f:	std    
  409d60:	lods   al,BYTE PTR ds:[esi]
  409d61:	(bad)  
  409d62:	out    dx,eax
  409d63:	in     eax,0x3d
  409d65:	jno    0x409d40
  409d67:	cld    
  409d68:	push   esp
  409d6a:	lods   al,BYTE PTR ds:[esi]
  409d6b:	out    0xfe,al
  409d6d:	inc    eax
  409d6e:	ret    
  409d6f:	out    0xfe,eax
  409d71:	es retf 0xfc60
  409d75:	push   ds
  409d76:	and    BYTE PTR [ebx],ch
  409d78:	aas    
  409d79:	test   al,0x32
  409d7b:	xchg   ecx,eax
  409d7c:	ret    
  409d7d:	in     eax,0xca
  409d7f:	jle    0x409d7c
  409d81:	push   es
  409d82:	stos   BYTE PTR es:[edi],al
  409d83:	fadd   st(1),st
  409d85:	fnstenv [edx]
  409d87:	aas    
  409d88:	mov    eax,DWORD PTR ds:0xee007a06
  409d8e:	and    DWORD PTR [eax+ebp*8],ebx
  409d91:	call   0x426a:0x72fee6b9
  409d98:	call   0x547d96
  409d9d:	loop   0x409e11
  409d9f:	popa   
  409da0:	sbb    ebp,edx
  409da2:	ja     0x409df1
  409da4:	jmp    0x409d81
  409da6:	mov    dl,0x1d
  409da8:	or     eax,0x3794303d
  409dad:	jecxz  0x409d90
  409daf:	push   cs
  409db0:	(bad)  
  409db1:	jmp    0xf9729db6
  409db6:	add    DWORD PTR [edx-0x55c4a3cf],edx
  409dbc:	(bad)  
  409dbd:	stc    
  409dbe:	mov    ch,BYTE PTR [edx-0x123e2529]
  409dc4:	xor    bh,BYTE PTR [edi]
  409dc6:	mov    ecx,DWORD PTR [ebp+0x1eb3d0af]
  409dcc:	sbb    ah,BYTE PTR [eax+0xc]
  409dcf:	add    edi,0x3f66fe96
  409dd5:	aam    0x74
  409dd7:	in     al,0x6b
  409dd9:	fcmovnb st,st(1)
  409ddb:	stc    
  409ddc:	xor    ah,ch
  409dde:	je     0x409dbd
  409de0:	or     dl,BYTE PTR [edx-0x1588ff55]
  409de6:	or     eax,eax
  409de8:	pushf  
  409de9:	adc    ebx,DWORD PTR [edi-0x37]
  409dec:	or     al,BYTE PTR [ecx]
  409dee:	add    bh,bh
  409df0:	popf   
  409df1:	adc    al,0xff
  409df3:	jne    0x409dbd
  409df5:	clc    
  409df6:	imul   edi,ebx,0x458bea27
  409dfc:	sbb    BYTE PTR [ecx-0x1],al
  409dff:	jne    0x409dd5
  409e01:	clc    
  409e02:	aas    
  409e03:	(bad)  
  409e04:	aaa    
  409e05:	jmp    0x2fa:0x6497c009
  409e0c:	mov    BYTE PTR [eax],dl
  409e0e:	push   DWORD PTR [ebp-0x7c]
  409e11:	jmp    0xff92:0xcd60f873
  409e18:	add    BYTE PTR [eax],al
  409e1a:	addr16 push ss
  409e1c:	ror    BYTE PTR [edi],0xc
  409e1f:	retf   
  409e20:	add    BYTE PTR [eax],al
  409e22:	mov    BYTE PTR [ecx-0x181c13bd],bl
  409e28:	jle    0x409e69
  409e2a:	pop    eax
  409e2b:	sbb    eax,DWORD PTR [ecx+ecx*8+0x5700104a]
  409e32:	jo     0x409e88
  409e34:	(bad)  
  409e35:	call   DWORD PTR [edi-0x582fbc68]
  409e3b:	je     0x409e0d
  409e3d:	push   0x412ae1
  409e42:	mov    al,0x4
  409e44:	pop    ebx
  409e45:	add    BYTE PTR [eax],bl
  409e47:	dec    eax
  409e48:	push   DWORD PTR [ebp-0x38]
  409e4b:	jo     0x409e0a
  409e4d:	aas    
  409e4e:	dec    ecx
  409e4f:	sbb    al,ch
  409e51:	pop    ss
  409e52:	inc    ebx
  409e53:	sbb    BYTE PTR [eax],al
  409e55:	push   eax
  409e56:	xchg   edi,eax
  409e57:	jae    0x409e29
  409e59:	push   0x411d59
  409e5e:	xor    DWORD PTR [ebp+0xb],edx
  409e61:	pop    ebx
  409e62:	xor    ebp,ebp
  409e64:	pop    esp
  409e65:	pop    ecx
  409e66:	cmp    ch,BYTE PTR ds:0xff3a0c70
  409e6c:	outs   dx,DWORD PTR ds:[esi]
  409e6d:	or     BYTE PTR [edx],ch
  409e6f:	xor    al,0x9
  409e71:	test   DWORD PTR [edi+ebp*8+0x2],edx
  409e75:	add    BYTE PTR [edx],bh
  409e77:	and    al,0x6f
  409e79:	or     esi,ebp
  409e7b:	mov    eax,0xae
  409e80:	xor    ebp,ebp
  409e82:	add    ch,bl
  409e84:	cmp    bh,BYTE PTR cs:[edi]
  409e87:	mov    ah,0x31
  409e89:	in     eax,dx
  409e8a:	add    al,BYTE PTR [eax]
  409e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8d:	sahf   
  409e8e:	ret    0x9eb8
  409e91:	jmp    0x73c:0x23a3fef7
  409e98:	add    al,0xed
  409e9a:	mov    edi,0x2ed9944
  409e9f:	add    BYTE PTR [ecx],dh
  409ea1:	ins    DWORD PTR es:[edi],dx
  409ea2:	cmp    BYTE PTR [eax],al
  409ea4:	es jns 0x409ef3
  409ea7:	add    dh,BYTE PTR [ecx]
  409ea9:	in     eax,dx
  409eaa:	dec    edi
  409eab:	call   0xff384236
  409eb0:	test   al,0x30
  409eb2:	enter  0xd482,0xd4
  409eb6:	add    dh,BYTE PTR [ebp+0x10]
  409eb9:	add    eax,0xecf02bbb
  409ebe:	div    DWORD PTR [ebp+ebp*2-0x6b]
  409ec2:	test   eax,0xbed3159
  409ec7:	sar    BYTE PTR [esi],0x70
  409eca:	push   es
  409ecb:	add    dh,BYTE PTR [ecx]
  409ecd:	in     eax,dx
  409ece:	mov    edi,0x2ec0944
  409ed3:	add    BYTE PTR [ecx],dh
  409ed5:	xchg   esp,eax
  409ed6:	add    DWORD PTR [edx],eax
  409ed8:	xor    DWORD PTR [ecx+ebp*8],edx
  409edb:	test   BYTE PTR [ebp+0x2e6ee7ec],al
  409ee1:	(bad)  
  409ee2:	rcr    edi,cl
  409ee4:	add    BYTE PTR [eax],al
  409ee6:	out    dx,eax
  409ee7:	pop    eax
  409ee8:	inc    ecx
  409ee9:	add    eax,0xeae91431
  409eee:	pushf  
  409eef:	adc    al,0xe9
  409ef1:	add    esi,DWORD PTR [edx+0x5c054160]
  409ef7:	adc    esp,DWORD PTR [eax+0x76]
  409efa:	rcr    edx,1
  409efc:	stos   DWORD PTR es:[edi],eax
  409efd:	jmp    0x409f32
  409eff:	adc    al,0xe9
  409f01:	add    ecx,eax
  409f03:	mov    ah,0xe7
  409f05:	add    esi,DWORD PTR [ecx]
  409f07:	xchg   edi,eax
  409f08:	mov    ebp,ebx
  409f0a:	xor    ebp,DWORD PTR [ecx-0xa]
  409f0d:	mov    ah,BYTE PTR ds:0x893e25c0
  409f13:	pop    ss
  409f14:	jmp    0x5d2dd01c
  409f19:	add    dh,BYTE PTR [ecx]
  409f1b:	adc    al,0x6a
  409f1d:	jns    0x409eb8
  409f1f:	pop    ss
  409f20:	push   esp
  409f21:	pop    es
  409f22:	test   al,0x60
  409f24:	mov    cl,0xbf
  409f26:	in     eax,dx
  409f27:	jmp    0x409f0c
  409f29:	add    esi,DWORD PTR [ecx]
  409f2b:	adc    al,0xd0
  409f2d:	outs   dx,DWORD PTR ds:[esi]
  409f2e:	xor    BYTE PTR [ecx+ebp*8],dl
  409f31:	sbb    ch,0xeb
  409f34:	jmp    0x409f3c
  409f36:	lods   al,BYTE PTR ds:[esi]
  409f37:	jae    0x409f21
  409f39:	add    esi,DWORD PTR [ecx]
  409f3b:	lea    esp,[ebx]
  409f3d:	shl    BYTE PTR [ebx-0x3afbaaa0],1
  409f43:	or     al,0xae
  409f45:	inc    ecx
  409f46:	dec    ecx
  409f47:	adc    eax,0x3e9
  409f4c:	xor    ebp,ebp
  409f4e:	in     eax,dx
  409f4f:	mov    esi,0x3e6ec6d
  409f54:	xor    DWORD PTR [eax+eax*1],edx
  409f57:	scas   al,BYTE PTR es:[edi]
  409f58:	jo     0x409f2e
  409f5a:	(bad)  
  409f5b:	call   0xad07b392
  409f60:	cli    
  409f61:	loope  0x409f61
  409f63:	jmp    0x2d85789a
  409f68:	sub    eax,0xafe90014
  409f6d:	pop    eax
  409f6e:	mov    esp,0x1432e9
  409f73:	es jo  0x409f12
  409f76:	(bad)  
  409f77:	call   0xb53fb3ae
  409f7c:	out    dx,al
  409f7d:	stc    
  409f7e:	adc    ah,BYTE PTR [edi]
  409f80:	mov    esi,0xf2a488e2
  409f85:	loop   0x409ffb
  409f87:	xor    eax,0xefe19c5
  409f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f8d:	mov    WORD PTR [ecx+esi*1-0x62],es
  409f91:	push   0xe09811d4
  409f96:	(bad)  
  409f97:	mul    BYTE PTR [ebp+0x486ac458]
  409f9d:	dec    edi
  409f9e:	aas    
  409f9f:	sub    BYTE PTR ds:0xd3b7514,ch
  409fa5:	push   ds
  409fa6:	inc    eax
  409fa7:	sub    BYTE PTR ds:0x35300cec,ch
  409fad:	adc    al,0x50
  409faf:	push   ecx
  409fb0:	add    BYTE PTR [eax],al
  409fb2:	sub    edx,DWORD PTR [ecx+eax*2-0x17]
  409fb6:	addr16 push 0x3b8fc1c0
  409fbc:	add    cl,ch
  409fbe:	cmp    edx,esp
  409fc0:	jae    0x409fc3
  409fc2:	aad    0x52
  409fc4:	inc    eax
  409fc5:	sub    BYTE PTR ds:0x2d31f0ec,dh
  409fcb:	adc    al,0x50
  409fcd:	add    DWORD PTR [esp+edx*2+0x41],esi
  409fd1:	add    BYTE PTR [eax],bl
  409fd3:	jmp    0x58:0x85c0c073
  409fda:	or     BYTE PTR [esi],cl
  409fdc:	shl    BYTE PTR [edx+ecx*8+0x6c],0x49
  409fe1:	inc    eax
  409fe2:	fst    DWORD PTR [eax+ebp*8]
  409fe5:	aad    0xf0
  409fe7:	adc    al,0x0
  409fe9:	push   eax
  409fea:	lock dec edi
  409fec:	inc    eax
  409fed:	inc    ecx
  409fee:	fsubr  st,st(1)
  409ff0:	jae    0x409fb2
  409ff2:	xor    BYTE PTR [edx+0x5a],0x0
  409ff6:	enter  0x16ed,0x68
  409ffa:	mov    edx,0x70004154
  409fff:	sahf   
  40a000:	push   esi
  40a001:	add    al,bl
  40a003:	inc    esp
  40a004:	push   0x578852
  40a009:	call   DWORD PTR [ebp-0x1da2192c]
  40a00f:	adc    al,0x0
  40a011:	or     ebx,DWORD PTR [eax+0x64]
  40a014:	(bad)  
  40a015:	inc    DWORD PTR [eax]
  40a017:	add    BYTE PTR ds:0xc0a1e6cd,ah
  40a01d:	adc    al,0x0
  40a01f:	push   eax
  40a020:	lahf   
  40a021:	jo     0x409feb
  40a023:	call   0x3e7e46
  40a028:	add    DWORD PTR [ecx],esp
  40a02a:	mov    esp,0xe6d3d5ff
  40a02f:	lea    esp,[eax]
  40a031:	sbb    BYTE PTR [eax],al
  40a033:	push   eax
  40a034:	outs   dx,DWORD PTR ds:[esi]
  40a035:	jo     0x409ffb
  40a037:	call   0x3e7a8e
  40a03c:	shl    DWORD PTR [eax],1
  40a03e:	mov    eax,0xfed81d83
  40a043:	jae    0x40a0a9
  40a045:	xchg   ebx,eax
  40a046:	jnp    0x40a000
  40a048:	dec    eax
  40a049:	jo     0x40a079
  40a04b:	push   0xef02eb31
  40a050:	out    dx,eax
  40a051:	mov    gs,WORD PTR [esi+0x8]
  40a054:	sbb    DWORD PTR [ecx+0x5f1efe80],ecx
  40a05a:	outs   dx,DWORD PTR ds:[esi]
  40a05b:	rcl    BYTE PTR [esi],0xe1
  40a05e:	or     ch,al
  40a060:	jne    0x40a0db
  40a062:	cmc    
  40a063:	inc    BYTE PTR [esi]
  40a065:	shl    DWORD PTR [esi-0x151a7b02],0x38
  40a06c:	lods   eax,DWORD PTR ds:[esi]
  40a06d:	inc    esi
  40a06e:	cmc    
  40a06f:	(bad)  
  40a070:	fs test esp,esi
  40a073:	je     0x40a0ae
  40a075:	inc    ebp
  40a076:	es test dh,bl
  40a079:	push   ds
  40a07a:	cmc    
  40a07b:	je     0x40a07d
  40a07d:	add    cl,dh
  40a07f:	push   ebp
  40a080:	cmp    DWORD PTR [edi+0x74f52ece],eax
  40a086:	stc    
  40a087:	add    eax,0xfebe8731
  40a08c:	hlt    
  40a08d:	je     0x40a07c
  40a08f:	adc    eax,0xeae8729
  40a094:	cmc    
  40a095:	je     0x40a07c
  40a097:	add    eax,0xde9e8721
  40a09c:	repz je 0x40a078
  40a09f:	adc    eax,0xee8e8719
  40a0a4:	out    0xc,eax
  40a0a6:	mov    dl,0x78
  40a0a8:	in     al,dx
  40a0a9:	add    eax,0x44bbf604
  40a0ae:	mov    ebx,ebp
  40a0b0:	add    al,BYTE PTR [eax]
  40a0b2:	xor    DWORD PTR [edx+0x76],ebp
  40a0b5:	call   0x6874c1eb
  40a0ba:	cwde   
  40a0bb:	adc    DWORD PTR [ebx+0x0],eax
  40a0be:	push   esi
  40a0bf:	and    al,cl
  40a0c1:	out    0x86,eax
  40a0c3:	add    eax,0x143a0004
  40a0c8:	test   eax,0x23d7366e
  40a0cd:	in     al,dx
  40a0ce:	xor    DWORD PTR [ecx+ebp*8],edx
  40a0d1:	add    ebx,DWORD PTR [ecx+0x31432926]
  40a0d7:	(bad)  
  40a0d9:	(bad)  
  40a0da:	push   ss
  40a0db:	jg     0x40a0fd
  40a0dd:	add    al,0x31
  40a0df:	or     ebp,DWORD PTR [ecx+0x3600006e]
  40a0e5:	xlat   BYTE PTR ds:[ebx]
  40a0e6:	and    ebp,esp
  40a0e8:	xor    BYTE PTR [ecx+ebp*8],dl
  40a0eb:	add    edi,esi
  40a0ed:	push   0x95e4eb2d
  40a0f2:	push   ebp
  40a0f3:	hlt    
  40a0f4:	jmp    0x45de:0xe7ba2922
  40a0fb:	hlt    
  40a0fc:	loopne 0x40a0ab
  40a0fe:	add    ch,bh
  40a100:	daa    
  40a101:	cdq    
  40a102:	test   dh,dh
  40a104:	iret   
  40a105:	fisubr WORD PTR ds:0x5cebe16e
  40a10b:	jge    0x40a0cc
  40a10d:	ficomp WORD PTR ds:0x44ebc56e
  40a113:	jge    0x40a0c4
  40a115:	ficomp WORD PTR [ebx+0x3e]
  40a118:	mov    eax,ds:0xaad11143
  40a11d:	fdivp  st(5),st
  40a11f:	jmp    0xccef:0xf3f5dd27
  40a126:	sub    dl,BYTE PTR [ebx]
  40a128:	xor    DWORD PTR [ecx+0x72],ecx
  40a12b:	loopne 0x40a0de
  40a12d:	xlat   BYTE PTR ds:[ebx]
  40a12e:	xchg   esp,eax
  40a12f:	bnd ja 0x40a110
  40a132:	lods   eax,DWORD PTR ds:[esi]
  40a133:	mov    DWORD PTR [esi+0x66f3cddd],esp
  40a139:	fsubp  st(0),st
  40a13b:	add    ebp,DWORD PTR [edx-0x69012aa8]
  40a141:	addr16 add ah,ch
  40a144:	mov    dl,0x26
  40a146:	add    BYTE PTR [eax+eax*1],dh
  40a149:	add    BYTE PTR [eax],bh
  40a14b:	in     eax,dx
  40a14c:	hlt    
  40a14d:	call   0x153fb584
  40a152:	sbb    esp,ebp
  40a154:	pop    ebp
  40a155:	js     0x40a179
  40a157:	fisttp WORD PTR [edx]
  40a159:	test   eax,0x47680da8
  40a15e:	push   ecx
  40a15f:	push   ebx
  40a160:	add    BYTE PTR [esi-0x68],bh
  40a163:	or     al,ch
  40a165:	jb     0x40a0f3
  40a167:	fdivp  st(6),st
  40a169:	xor    BYTE PTR [eax],0x6c
  40a16c:	ret    
  40a16d:	adc    eax,0xd4ff1474
  40a172:	push   ds
  40a173:	in     al,dx
  40a174:	jmp    0x40a1d6
  40a176:	loop   0x40a156
  40a178:	mov    BYTE PTR [ebp+edx*4-0x21],ah
  40a17c:	inc    BYTE PTR [esi+0x7d]
  40a17f:	push   ds
  40a180:	add    ecx,ebp
  40a182:	xor    cl,BYTE PTR [edi-0x213cd47c]
  40a188:	(bad)  
  40a189:	cdq    
  40a18a:	jmp    0x8490:0xc2268671
  40a191:	sub    eax,ebx
  40a193:	fdivp  st(6),st
  40a195:	mov    ecx,0xfb7a8a3
  40a19a:	mov    ds:0xfa49e7de,al
  40a19f:	adc    eax,DWORD PTR [eax]
  40a1a1:	jo     0x40a14b
  40a1a3:	cdq    
  40a1a4:	std    
  40a1a5:	test   BYTE PTR [ebx-0x559af0e3],0x14
  40a1ac:	add    cl,ch
  40a1ae:	add    BYTE PTR [eax],al
  40a1b0:	mov    cl,0x88
  40a1b2:	rcr    edi,0x83
  40a1b5:	fdivrp st(6),st
  40a1b7:	jmp    0x40a1fb
  40a1b9:	adc    al,0x0
  40a1bb:	jmp    0xc339f3
  40a1c0:	dec    eax
  40a1c1:	adc    DWORD PTR [eax],eax
  40a1c3:	lea    ecx,[edx]
  40a1c5:	xor    al,0x50
  40a1c7:	push   0x40fcc1
  40a1cc:	jo     0x40a23e
  40a1ce:	push   edi
  40a1cf:	add    BYTE PTR [eax-0x22],cl
  40a1d2:	mov    esi,0x47c04d75
  40a1d7:	add    DWORD PTR [eax],ebx
  40a1d9:	adc    DWORD PTR [ebp-0x21d256b],ecx
  40a1df:	jmp    DWORD PTR [ebp+0x40502c57]
  40a1e5:	lods   eax,DWORD PTR ds:[esi]
  40a1e6:	sub    al,BYTE PTR [ecx+0x18]
  40a1e9:	mov    ecx,0x1118575a
  40a1ee:	or     eax,eax
  40a1f0:	fisttp QWORD PTR [ebx]
  40a1f2:	jmp    0x51ab23
  40a1f7:	dec    DWORD PTR ds:0x68bae805
  40a1fd:	loop   0x40a1fc
  40a1ff:	or     ecx,DWORD PTR [eax]
  40a201:	pop    esp
  40a202:	punpckhbw mm0,QWORD PTR ds:0x70040f9
  40a209:	pop    esp
  40a20a:	adc    al,0xe8
  40a20c:	lahf   
  40a20d:	pop    edi
  40a20e:	(bad)  
  40a20f:	jmp    DWORD PTR [ebx]
  40a211:	fild   QWORD PTR [eax+0x0]
  40a214:	add    BYTE PTR [eax],al
  40a216:	pop    ss
  40a217:	pop    esp
  40a218:	adc    al,0xe8
  40a21a:	rcr    DWORD PTR [edi-0x2],cl
  40a21d:	inc    DWORD PTR ds:0x37fec07c
  40a223:	loop   0x40a1b0
  40a225:	push   edx
  40a226:	fs inc esi
  40a228:	push   eax
  40a229:	call   0x3f0245
  40a22e:	test   al,0x40
  40a230:	push   DWORD PTR [ebp+0x78]
  40a233:	jecxz  0x40a2a8
  40a235:	or     al,0x57
  40a237:	fs or  al,ch
  40a23a:	xor    DWORD PTR [edx-0x2d99010f],edi
  40a240:	mov    BYTE PTR [esi+ebx*2+0x31dcdad5],al
  40a247:	jmp    0x40a24b
  40a249:	(bad)  
  40a24a:	repz push ss
  40a24c:	jnp    0x40a1d2
  40a24e:	jge    0x40a1fc
  40a250:	lock dec cl
  40a253:	outs   dx,BYTE PTR ds:[esi]
  40a254:	xor    DWORD PTR [ecx+0x31],eax
  40a257:	jle    0x40a20f
  40a259:	mov    bl,0x2f
  40a25b:	xor    eax,0xffffffe7
  40a25e:	sub    al,0x25
  40a260:	add    al,0x0
  40a262:	sub    ch,BYTE PTR [ebp-0x5776d189]
  40a268:	sbb    eax,DWORD PTR [ecx+0x31]
  40a26b:	bound  esi,QWORD PTR [edi+0x14]
  40a26e:	sbb    DWORD PTR [ebx+0x7c],esp
  40a271:	(bad)  
  40a272:	(bad)  
  40a273:	jb     0x40a22c
  40a275:	mov    bl,0xf7
  40a277:	cmp    dh,cl
  40a279:	dec    edi
  40a27a:	add    BYTE PTR [eax],al
  40a27c:	fld    DWORD PTR [edx]
  40a27e:	jnp    0x40a27e
  40a280:	out    0x9d,al
  40a282:	out    dx,eax
  40a283:	je     0x40a2c6
  40a285:	push   edx
  40a286:	ja     0x40a294
  40a288:	sbb    DWORD PTR [edx],0x22d90877
  40a28e:	in     al,dx
  40a28f:	inc    dh
  40a291:	push   ebp
  40a292:	cmp    DWORD PTR [ebp-0x4b0ecd42],eax
  40a298:	jge    0x40a295
  40a29a:	lock (bad) 
  40a29c:	cdq    
  40a29d:	mov    ebp,0x6e310058
  40a2a2:	in     al,dx
  40a2a3:	add    DWORD PTR [ebx],esp
  40a2a5:	mov    ecx,0xdbdd947b
  40a2aa:	out    dx,eax
  40a2ab:	(bad)  
  40a2ac:	xor    bh,ch
  40a2ae:	test   cl,ch
  40a2b0:	xor    edx,DWORD PTR [ebx+0x144f3981]
  40a2b6:	pop    edx
  40a2b7:	ja     0x40a2ec
  40a2b9:	out    dx,eax
  40a2ba:	sub    BYTE PTR [edx+eax*8+0x1b],bl
  40a2be:	sub    BYTE PTR [esi+eiz*2],al
  40a2c1:	mov    eax,ds:0xdb5ff194
  40a2c6:	rcl    BYTE PTR [eax+0x53e913ff],1
  40a2cc:	fnstcw WORD PTR [edx-0xb]
  40a2cf:	inc    edx
  40a2d0:	xor    ebx,ebx
  40a2d2:	jae    0x40a28b
  40a2d4:	cmp    al,0xdb
  40a2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d7:	(bad)  [ebx+eax*2+0x6c8103e9]
  40a2de:	inc    ebp
  40a2df:	xor    BYTE PTR [eax],al
  40a2e1:	add    BYTE PTR [eax+0x14],dh
  40a2e4:	mov    ?,WORD PTR [esi-0xf7a261e]
  40a2ea:	push   cs
  40a2eb:	pop    ecx
  40a2ec:	push   ss
  40a2ed:	add    al,0x31
  40a2ef:	ds adc ch,bh
  40a2f2:	(bad)  
  40a2f3:	pusha  
  40a2f4:	loope  0x40a2f2
  40a2f6:	loopne 0x40a358
  40a2f8:	in     eax,dx
  40a2f9:	cld    
  40a2fa:	jmp    0xfc9cb25e
  40a2ff:	sub    ebp,DWORD PTR [eax-0xa9f19fd]
  40a305:	fist   DWORD PTR [ebp-0x74]
  40a308:	inc    ebp
  40a309:	lock xlat BYTE PTR ds:[ebx]
  40a30b:	mov    al,ds:0xdacff174
  40a310:	cwde   
  40a311:	fist   DWORD PTR [ebp+0x6ef02d8b]
  40a317:	fistp  DWORD PTR [ebx-0x129f49ed]
  40a31d:	push   ebx
  40a31e:	scas   al,BYTE PTR es:[edi]
  40a31f:	pusha  
  40a320:	loope  0x40a2fd
  40a322:	jb     0x40a301
  40a324:	or     eax,0x6cb096f0
  40a329:	lock xchg edi,eax
  40a32b:	mov    BYTE PTR [ebx-0x3b],ah
  40a32e:	mov    edx,ds
  40a330:	push   ebp
  40a332:	jecxz  0x40a30e
  40a334:	mov    ah,0x2d
  40a336:	sbb    cl,0xfe
  40a339:	shr    DWORD PTR [edx],1
  40a33b:	inc    edx
  40a33c:	add    cl,ch
  40a33e:	mov    ecx,0xe96c0e9a
  40a343:	fsin   
  40a345:	into   
  40a346:	add    BYTE PTR [eax],al
  40a348:	dec    esi
  40a349:	lahf   
  40a34a:	mov    ebx,0xe7d946c7
  40a34f:	out    dx,eax
  40a350:	in     al,0x13
  40a352:	add    BYTE PTR [esi-0x51025d78],dh
  40a358:	dec    esi
  40a359:	bnd je 0x40a3c9
  40a35c:	inc    esi
  40a35d:	fxch   st(0)
  40a35f:	stos   DWORD PTR es:[edi],eax
  40a360:	inc    ebp
  40a361:	adc    al,0x55
  40a363:	bound  edx,QWORD PTR [ecx]
  40a365:	(bad)  [ebp+ebx*8+0xf]
  40a369:	popa   
  40a36a:	adc    BYTE PTR [esi-0xb00f768],al
  40a370:	or     dh,dl
  40a372:	ret    
  40a373:	je     0x40a38b
  40a375:	fcmovne st,st(0)
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	xor    DWORD PTR [edx*2-0x3c68ee8e],edx
  40a37f:	pop    ecx
  40a380:	xchg   cl,bl
  40a382:	je     0x40a369
  40a384:	or     dh,BYTE PTR [eax-0x77]
  40a387:	dec    esi
  40a388:	into   
  40a389:	push   cs
  40a38a:	sar    BYTE PTR [ecx+ebp*1+0x312bc939],0x14
  40a392:	(bad)  
  40a393:	mov    esp,0x6054ec22
  40a398:	into   
  40a399:	fimul  DWORD PTR [edx]
  40a39b:	sub    DWORD PTR [eax],edi
  40a39d:	maxps  xmm6,XMMWORD PTR [eax]
  40a3a0:	jae    0x40a3af
  40a3a2:	add    BYTE PTR [esi],dl
  40a3a4:	sub    BYTE PTR [eax],cl
  40a3a6:	call   0xff1ac39b
  40a3ab:	add    BYTE PTR [eax],al
  40a3ad:	add    BYTE PTR [ebx-0x5ff08c2b],ah
  40a3b3:	aam    0x26
  40a3b5:	inc    ecx
  40a3b6:	cwde   
  40a3b7:	jmp    0xff85:0xa2300c73
  40a3be:	(bad)  
  40a3bf:	mov    esi,0xea586a08
  40a3c4:	jae    0x40a3d2
  40a3c6:	jo     0x40a443
  40a3c8:	test   edi,edi
  40a3ca:	outs   dx,DWORD PTR ds:[esi]
  40a3cb:	pop    eax
  40a3cc:	inc    esp
  40a3cd:	hlt    
  40a3ce:	add    BYTE PTR [ebx],bh
  40a3d0:	aas    
  40a3d1:	inc    ecx
  40a3d2:	pop    eax
  40a3d3:	jmp    0xff85:0x8b70f473
  40a3da:	(bad)  
  40a3db:	pop    eax
  40a3dc:	inc    esp
  40a3dd:	clc    
  40a3de:	and    BYTE PTR [esi-0x42e7ff05],bh
  40a3e4:	add    eax,DWORD PTR [edi+edi*4-0x53ba7817]
  40a3eb:	cmp    al,0x0
  40a3ed:	adc    BYTE PTR [eax],cl
  40a3ef:	adc    eax,0xea9bf8e8
  40a3f4:	std    
  40a3f5:	mov    DWORD PTR [ebp-0x20],edx
  40a3f8:	std    
  40a3f9:	jne    0x40a37b
  40a3fb:	mov    ebp,0xea8f88a8
  40a400:	or     eax,eax
  40a402:	fist   WORD PTR [eax+0x14d800bb]
  40a408:	push   DWORD PTR [ebp-0x80]
  40a40b:	cmp    eax,0x14c8fde8
  40a410:	push   DWORD PTR [ebp+0x0]
  40a413:	add    BYTE PTR [edi*4+0x14d85580],cl
  40a41a:	cmp    eax,0xffffffca
  40a41d:	fld    DWORD PTR [esp+eiz*4-0x74ffeb38]
  40a424:	int    0xe8
  40a426:	jle    0x40a467
  40a428:	xor    ebx,ebp
  40a42a:	std    
  40a42b:	cmp    DWORD PTR [ecx+0x90002ea],0xffffff8d
  40a432:	sub    eax,0xda823141
  40a437:	cmp    edi,ebx
  40a439:	jmp    0xff76:0x5e710b02
  40a440:	cld    
  40a441:	repnz pop ebx
  40a443:	(bad)  
  40a444:	ds jmp 0x40a449
  40a447:	(bad)  
  40a448:	fdivr  QWORD PTR [edx+0x2c09cf5b]
  40a44e:	add    al,0x68
  40a450:	fcom   QWORD PTR [ecx]
  40a452:	inc    ebx
  40a453:	add    dh,ah
  40a455:	ret    0x5532
  40a458:	xor    ebx,ebp
  40a45a:	idiv   DWORD PTR [edi+0x74ed02c5]
  40a460:	cmp    DWORD PTR [ebx+eax*1],eax
  40a463:	push   0x41b69b
  40a468:	jle    0x40a3ff
  40a46a:	ss push ebp
  40a46c:	xor    ebp,ebp
  40a46e:	jg     0x40a467
  40a470:	xor    al,bl
  40a472:	xor    eax,0xed5d84ff
  40a477:	je     0x40a479
  40a479:	add    ch,bh
  40a47b:	xchg   ebp,eax
  40a47c:	jmp    0x54a7a306
  40a481:	mov    esp,ecx
  40a483:	inc    edx
  40a484:	sti    
  40a485:	jg     0x40a4b2
  40a487:	push   es
  40a488:	ja     0x40a48d
  40a48a:	out    dx,eax
  40a48b:	jmp    0x40a4db
  40a48d:	inc    edx
  40a48e:	sub    bl,BYTE PTR [ebx]
  40a490:	js     0x40a497
  40a492:	mov    cl,0x13
  40a494:	add    al,0x75
  40a496:	fist   WORD PTR [esi]
  40a498:	ja     0x40a4aa
  40a49a:	popa   
  40a49b:	push   ds
  40a49c:	ja     0x40a4a6
  40a49e:	leave  
  40a49f:	cs out dx,al
  40a4a1:	(bad)  
  40a4a2:	mov    dh,0x14
  40a4a4:	adc    DWORD PTR [ecx],esi
  40a4a6:	mov    dl,0xd7
  40a4a8:	sbb    eax,0x9bd734d9
  40a4ad:	adc    ebx,DWORD PTR [esi+0x1ded1961]
  40a4b3:	or     al,0x11
  40a4b5:	mov    dl,0x8c
  40a4b7:	xlat   BYTE PTR ds:[ebx]
  40a4b8:	std    
  40a4b9:	out    dx,eax
  40a4ba:	inc    ebx
  40a4bb:	aam    0x2f
  40a4bd:	in     eax,dx
  40a4be:	jg     0x40a497
  40a4c0:	in     eax,dx
  40a4c1:	icebp  
  40a4c2:	les    ebx,FWORD PTR [esi+ebp*8]
  40a4c5:	cld    
  40a4c6:	mov    ch,0x6c
  40a4c8:	fsubp  st(4),st
  40a4ca:	xlat   BYTE PTR ds:[bx]
  40a4cc:	pop    ebx
  40a4cd:	clc    
  40a4ce:	push   esi
  40a4cf:	or     eax,0xd757ec6a
  40a4d4:	cmp    esi,esp
  40a4d6:	push   esi
  40a4d7:	adc    eax,0xd747ec6a
  40a4dc:	cmp    ebp,esp
  40a4de:	add    BYTE PTR [eax],al
  40a4e0:	push   esi
  40a4e1:	(bad)  [edx-0x14]
  40a4e4:	aaa    
  40a4e5:	xlat   BYTE PTR ds:[ebx]
  40a4e6:	sbb    esi,eax
  40a4e8:	push   ss
  40a4e9:	in     eax,0x6a
  40a4eb:	in     al,dx
  40a4ec:	daa    
  40a4ed:	xlat   BYTE PTR ds:[ebx]
  40a4ee:	sbb    edx,DWORD PTR [esi+ebx*1]
  40a4f1:	popa   
  40a4f2:	fucomp st(4)
  40a4f4:	popf   
  40a4f5:	or     al,0x91
  40a4f7:	jno    0x40a508
  40a4f9:	xlat   BYTE PTR ds:[ebx]
  40a4fa:	jge    0x40a548
  40a4fc:	clc    
  40a4fd:	shl    esp,1
  40a4ff:	add    esp,DWORD PTR [ebx+ecx*4+0x7c]
  40a503:	xor    dl,0xeb
  40a506:	gs jbe 0x40a54e
  40a509:	xlat   BYTE PTR ds:[ebx]
  40a50a:	rcl    DWORD PTR [ebx],cl
  40a50c:	fldcw  WORD PTR [esp+edi*4+0x3]
  40a510:	xor    DWORD PTR [ebx],ecx
  40a512:	sub    DWORD PTR [edi+0x7e],esi
  40a515:	push   0xffffffe9
  40a517:	pop    ebx
  40a518:	dec    ebx
  40a519:	pop    ss
  40a51a:	test   al,0x3
  40a51c:	(bad)  
  40a51d:	pusha  
  40a51e:	add    cl,bl
  40a520:	int    0x5f
  40a522:	or     al,0x41
  40a524:	jne    0x40a4b5
  40a526:	(bad)  
  40a527:	es test eax,0x2a87396
  40a52d:	inc    esp
  40a52e:	call   0xff16c3cf
  40a533:	loop   0x40a5a7
  40a535:	bound  esi,QWORD PTR [ecx]
  40a537:	jo     0x40a530
  40a539:	jmp    0x40a5a4
  40a53b:	jecxz  0x40a5a7
  40a53d:	out    0x85,eax
  40a53f:	test   BYTE PTR [edx+0x75c009],0x0
  40a546:	sub    edi,edx
  40a548:	je     0x40a54b
  40a54a:	add    eax,0x5a6783ec
  40a54f:	aad    0x4f
  40a551:	(bad)  
  40a552:	loopne 0x40a53f
  40a554:	dec    edi
  40a555:	into   
  40a556:	loopne 0x40a563
  40a558:	call   0xff16006f
  40a55d:	rcr    edx,1
  40a55f:	xchg   ecx,eax
  40a560:	(bad)  
  40a561:	mov    dh,0x4a
  40a563:	pop    edi
  40a564:	call   0xfed2682a
  40a569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a56a:	or     eax,0x1a9e8264
  40a56f:	outs   dx,BYTE PTR ds:[esi]
  40a570:	add    cl,ah
  40a572:	xor    dl,BYTE PTR [eax+ebp*8]
  40a575:	push   cs
  40a576:	scas   eax,DWORD PTR es:[edi]
  40a577:	(bad)  
  40a578:	(bad)  
  40a579:	jo     0x40a5eb
  40a57b:	fmul   QWORD PTR [esp-0x300b9e7]
  40a582:	and    dl,ch
  40a584:	je     0x40a563
  40a586:	ficomp DWORD PTR [edi+0x932e953]
  40a58c:	rcl    ah,0x62
  40a58f:	int    0x44
  40a591:	pop    ecx
  40a592:	xor    eax,0xf3e90014
  40a597:	push   eax
  40a598:	hlt    
  40a599:	add    BYTE PTR [edi+0x11],dh
  40a59c:	add    BYTE PTR [eax],al
  40a59e:	loop   0x40a5b1
  40a5a0:	push   0x0
  40a5a2:	repnz adc DWORD PTR [edx+0x0],ebp
  40a5a6:	push   ebp
  40a5a7:	push   ebx
  40a5a8:	hlt    
  40a5a9:	push   eax
  40a5aa:	add    BYTE PTR [eax],al
  40a5ac:	push   edi
  40a5ad:	arpl   ax,di
  40a5af:	(bad)  
  40a5b0:	mov    ebp,0x4475fde1
  40a5b5:	mov    eax,0x1188548e
  40a5ba:	or     eax,eax
  40a5bc:	or     al,0xf
  40a5be:	jmp    0x40a5fa
  40a5c0:	mov    al,ds:0x8841269c
  40a5c5:	jmp    0xff83:0xa2301073
  40a5cc:	push   edi
  40a5cd:	jmp    0x85ff:0xb828f873
  40a5d4:	xchg   edx,ebp
  40a5d6:	xchg   DWORD PTR [ebp-0x6c],eax
  40a5d9:	jmp    0xff14:0x64771873
  40a5e0:	std    
  40a5e1:	mov    ebx,0xea5475fd
  40a5e6:	jae    0x40a5f0
  40a5e8:	jo     0x40a5f2
  40a5ea:	(bad)  
  40a5eb:	call   edi
  40a5ed:	jmp    0xba019265
  40a5f2:	jg     0x40a5f3
  40a5f4:	(bad)  
  40a5f5:	jmp    0x89f4963d
  40a5fa:	std    
  40a5fb:	jne    0x40a5b1
  40a5fd:	mov    eax,0x1118543a
  40a602:	push   DWORD PTR [ebp-0x80]
  40a605:	mov    ecx,0xea8781d8
  40a60a:	mov    edx,0x8b5510ec
  40a610:	add    BYTE PTR [eax],al
  40a612:	je     0x40a5a4
  40a614:	ret    0x31f4
  40a617:	cmp    eax,0xeb4bfeea
  40a61c:	pop    esp
  40a61d:	and    al,0xce
  40a61f:	xchg   edi,eax
  40a620:	cli    
  40a621:	out    0xc8,eax
  40a623:	xchg   esp,eax
  40a624:	jmp    0xe6e84f27
  40a629:	(bad)  
  40a62a:	sub    al,0x78
  40a62c:	sub    DWORD PTR [ecx+0x31],eax
  40a62f:	jmp    0x40a633
  40a631:	add    BYTE PTR [ecx],dh
  40a633:	push   0xfd9ff680
  40a638:	jmp    0x42faf8c
  40a63d:	add    BYTE PTR [ecx],dh
  40a63f:	add    esi,DWORD PTR [esi+0x53]
  40a642:	xor    ebx,ebp
  40a644:	pop    edx
  40a645:	adc    esi,ecx
  40a647:	stos   DWORD PTR es:[edi],eax
  40a648:	add    ch,BYTE PTR [eax+0x2a]
  40a64b:	stos   DWORD PTR es:[edi],eax
  40a64c:	inc    ebx
  40a64d:	add    cl,bl
  40a64f:	pop    es
  40a650:	inc    esp
  40a651:	inc    ecx
  40a652:	xor    DWORD PTR [esi+0x2c085c2e],esi
  40a658:	add    al,0xff
  40a65a:	fdivr  st(2),st
  40a65c:	fisub  DWORD PTR [edi+0x67e8cd4f]
  40a662:	and    ch,BYTE PTR [ebx]
  40a664:	inc    ebx
  40a665:	add    cl,cl
  40a667:	icebp  
  40a668:	inc    edx
  40a669:	inc    ecx
  40a66a:	xor    DWORD PTR [ebx+0x1f],edx
  40a66d:	inc    eax
  40a66e:	jo     0x40a62d
  40a670:	pop    edx
  40a671:	add    dh,BYTE PTR [ecx]
  40a673:	mov    ebp,0xfe82
  40a678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a679:	mov    ch,0xda
  40a67b:	mov    edx,DWORD PTR [edi]
  40a67d:	mov    ds:0x52b48ce8,eax
  40a682:	jmp    0x6215:0xdc2e06fe
  40a689:	mov    ebp,0x417cff02
  40a68e:	jmp    0x5154e007
  40a693:	shl    DWORD PTR [ebx+edx*8+0x5d],cl
  40a697:	mov    ebx,0x4ee918f0
  40a69c:	stos   BYTE PTR es:[edi],al
  40a69d:	shl    BYTE PTR [edi-0x40],0xc2
  40a6a1:	rol    BYTE PTR [ebp-0x17],cl
  40a6a4:	pop    eax
  40a6a5:	adc    al,0xd3
  40a6a7:	push   ds
  40a6a8:	mov    esi,0x40dbe149
  40a6ad:	push   edx
  40a6ae:	cs jmp 0x5e66006d
  40a6b4:	dec    ebx
  40a6b5:	mov    esp,0xd39f7e9d
  40a6ba:	loope  0x40a67f
  40a6bc:	and    bh,al
  40a6be:	adc    BYTE PTR [ecx+esi*8],0x54
  40a6c2:	jmp    0x6469401a
  40a6c7:	jmp    0x3c20b4b
  40a6cc:	and    ebx,eax
  40a6ce:	cs pop esp
  40a6d0:	push   es
  40a6d1:	push   esp
  40a6d2:	sub    BYTE PTR [ecx+eax*1],al
  40a6d5:	rcl    DWORD PTR [ebx-0x4],cl
  40a6d8:	push   esi
  40a6d9:	lock mov ebp,eax
  40a6dc:	add    BYTE PTR [eax],al
  40a6de:	push   edi
  40a6df:	mov    esp,0xd34f82e0
  40a6e4:	lods   eax,DWORD PTR ds:[esi]
  40a6e5:	(bad)  
  40a6e6:	cmc    
  40a6e7:	adc    ch,BYTE PTR [eax]
  40a6e9:	add    al,0x30
  40a6eb:	adc    al,0xe9
  40a6ed:	add    esp,DWORD PTR [ecx+ebx*4-0x2cd0164b]
  40a6f4:	cmp    BYTE PTR [ebp+ebp*1+0x15],bl
  40a6f8:	jmp    0x3ad1b000
  40a6fd:	add    al,0x31
  40a6ff:	cmp    al,0xfa
  40a701:	inc    ebx
  40a702:	jo     0x40a718
  40a704:	adc    ebp,edi
  40a706:	inc    esi
  40a707:	push   ebp
  40a708:	jmp    0x94fb68
  40a70d:	sub    BYTE PTR ds:0x4a0d34d3,ch
  40a713:	push   ebp
  40a714:	add    BYTE PTR [esi+0x57],ah
  40a717:	sbb    al,0xe8
  40a719:	pop    ebx
  40a71a:	xlat   BYTE PTR ds:[ebx]
  40a71b:	sar    esi,1
  40a71d:	sar    DWORD PTR ds:0x6ae94154,0x1f
  40a724:	inc    eax
  40a725:	test   al,0x32
  40a727:	cmp    al,0x25
  40a729:	test   eax,0xeb681473
  40a72e:	xor    dl,BYTE PTR [eax+eax*4]
  40a731:	cs pop ds
  40a733:	sbb    al,0xe8
  40a735:	aas    
  40a736:	(bad)  
  40a737:	sar    esi,1
  40a739:	ins    BYTE PTR es:[edi],dx
  40a73a:	pop    ds
  40a73b:	retf   0x16fd
  40a73e:	mov    DWORD PTR [edx-0x18],esp
  40a741:	mov    DWORD PTR [eax],eax
  40a743:	add    ah,ah
  40a745:	adc    eax,DWORD PTR [eax]
  40a747:	push   es
  40a748:	pop    ss
  40a749:	sar    dh,1
  40a74b:	je     0x40a7c7
  40a74d:	mov    edx,0xd189771a
  40a752:	enter  0x6e2b,0xd2
  40a756:	push   ebx
  40a757:	jb     0x40a6e2
  40a759:	xchg   ebx,eax
  40a75a:	ret    
  40a75b:	aad    0x57
  40a75d:	sar    esi,1
  40a75f:	inc    ebx
  40a760:	sub    eax,0xc0ce263e
  40a765:	sbb    ebp,eax
  40a767:	test   eax,ebx
  40a769:	sar    dh,cl
  40a76b:	jo     0x40a75d
  40a76d:	iret   
  40a76e:	(bad)  
  40a76f:	in     al,dx
  40a770:	stc    
  40a771:	adc    al,BYTE PTR [ecx-0x17]
  40a774:	xor    dl,BYTE PTR [eax+eax*1]
  40a777:	jmp    0xa0374025
  40a77c:	push   ss
  40a77d:	ror    DWORD PTR [edi+0x1],cl
  40a780:	xor    DWORD PTR [ebx],edx
  40a782:	add    cl,ch
  40a784:	jmp    0x6816:0x18005207
  40a78b:	jb     0x40a7d5
  40a78d:	push   edi
  40a78e:	add    BYTE PTR [eax+0x30],ch
  40a791:	pop    eax
  40a792:	inc    ecx
  40a793:	add    BYTE PTR [eax],dh
  40a795:	repz aas 
  40a797:	inc    ecx
  40a798:	fdivr  DWORD PTR [edx+0x57415c33]
  40a79e:	add    bh,bh
  40a7a0:	cmc    
  40a7a1:	int    0xe6
  40a7a3:	imul   edi,DWORD PTR [ebp-0x47],0xfffffffd
  40a7a7:	push   0x558a0000
  40a7ac:	inc    ecx
  40a7ad:	add    al,ah
  40a7af:	ins    DWORD PTR es:[edi],dx
  40a7b0:	inc    eax
  40a7b1:	inc    ecx
  40a7b2:	enter  0x256d,0x40
  40a7b6:	fst    DWORD PTR ds:0x15980268
  40a7bc:	cmp    bh,0xc5
  40a7bf:	int    0xe6
  40a7c1:	dec    edi
  40a7c2:	cmp    eax,0x158dfdb9
  40a7c7:	sar    esp,0xff
  40a7ca:	das    
  40a7cb:	push   0x1599d9e8
  40a7d0:	add    bh,bh
  40a7d2:	cmc    
  40a7d3:	mov    eax,0xed5075fd
  40a7d8:	xchg   edx,eax
  40a7d9:	jge    0x40a82a
  40a7db:	mov    edx,0x1554c2c7
  40a7e0:	push   ebp
  40a7e1:	mov    ebp,DWORD PTR [eax+ebx*4-0x3e]
  40a7e5:	hlt    
  40a7e6:	jle    0x40a7a2
  40a7e8:	std    
  40a7e9:	push   0x58
  40a7eb:	imul   esp,DWORD PTR [edi],0xffffffff
  40a7ee:	add    eax,0xfd35e6d0
  40a7f3:	mov    eax,0xbc5589fd
  40a7f8:	lds    eax,FWORD PTR ds:0x40f95d
  40a7fe:	or     BYTE PTR ds:0x38310000,dl
  40a804:	xor    dh,0xf
  40a807:	mov    ds:0xbf994fe5,al
  40a80c:	add    eax,DWORD PTR [eax]
  40a80e:	add    BYTE PTR [eax],al
  40a810:	xor    DWORD PTR [ebx-0x44ceaf6b],esp
  40a816:	pop    edx
  40a817:	mov    WORD PTR [ecx-0x4],?
  40a81a:	add    ebp,DWORD PTR [eax-0x51]
  40a81d:	jp     0x40a862
  40a81f:	add    BYTE PTR [ecx+0x18],cl
  40a822:	inc    esp
  40a823:	inc    ecx
  40a824:	xor    DWORD PTR [edx+0x30],ebp
  40a827:	pop    esp
  40a828:	sbb    BYTE PTR [edx+eax*1-0x1],bh
  40a82c:	cmp    al,0xc3
  40a82e:	(bad)  
  40a830:	mov    ebp,0xa567e611
  40a835:	jp     0x40a87a
  40a837:	add    BYTE PTR [ecx],bl
  40a839:	cmp    DWORD PTR [ebx+0x41],eax
  40a83c:	xor    DWORD PTR [ebx-0x450fbfe1],esp
  40a842:	pop    edx
  40a843:	add    dh,BYTE PTR [ecx]
  40a845:	mov    ebx,0xb304fe82
  40a84a:	fcmovb st,st(7)
  40a84c:	test   DWORD PTR [ecx],ebx
  40a84e:	out    0x8c,al
  40a850:	mov    ah,0xc9
  40a852:	jecxz  0x40a852
  40a854:	jbe    0x40a800
  40a856:	ficom  DWORD PTR [ecx+0x0]
  40a859:	mov    ebx,0xb6dcff02
  40a85e:	in     al,0x74
  40a860:	sub    ebx,esp
  40a862:	idiv   BYTE PTR [esi+edx*2-0x17]
  40a866:	mov    edx,0x4dbb35c1
  40a86b:	mov    edx,DWORD PTR [ebp+0x3b]
  40a86e:	shl    bl,0x3f
  40a871:	xchg   ecx,eax
  40a872:	in     al,0x69
  40a874:	add    BYTE PTR [eax],al
  40a876:	xor    DWORD PTR [ebp+0x1c],edx
  40a879:	jmp    DWORD PTR [ebp+esi*4+0x14a5adda]
  40a880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a881:	in     eax,0xa9
  40a883:	pop    ecx
  40a884:	popf   
  40a885:	mov    ebp,0x42d6612d
  40a88a:	xor    DWORD PTR [ecx+ebp*8],edx
  40a88d:	add    esi,DWORD PTR [ecx]
  40a88f:	mov    eax,ds:0xcffced6b
  40a894:	jge    0x40a8ea
  40a896:	mov    DWORD PTR [eax],ebx
  40a898:	call   0xc0fcd9a0
  40a89d:	push   edx
  40a89e:	xor    DWORD PTR [ecx+edx*8],edx
  40a8a1:	lahf   
  40a8a2:	push   ds
  40a8a3:	push   ebp
  40a8a4:	jmp    0xa8955e04
  40a8a9:	add    ebx,DWORD PTR [ecx-0x7]
  40a8ac:	test   al,0x42
  40a8ae:	xor    edi,ecx
  40a8b0:	sti    
  40a8b1:	inc    edi
  40a8b2:	or     BYTE PTR [ebp-0x17],dl
  40a8b5:	in     al,0x3d
  40a8b7:	sbb    al,0x41
  40a8b9:	inc    edi
  40a8ba:	lods   eax,DWORD PTR ds:[esi]
  40a8bb:	iret   
  40a8bc:	sub    eax,0xa854cd5c
  40a8c1:	add    ecx,DWORD PTR [ecx]
  40a8c3:	mov    al,0xa8
  40a8c5:	inc    edx
  40a8c6:	xor    DWORD PTR [esp+ecx*8],edi
  40a8c9:	inc    ebx
  40a8ca:	lock adc eax,DWORD PTR [ecx+0x69143101]
  40a8d1:	in     eax,0x5
  40a8d3:	sbb    al,0x11
  40a8d5:	inc    ebx
  40a8d6:	jne    0x40a8a7
  40a8d8:	cmc    
  40a8d9:	jbe    0x40a8db
  40a8db:	add    BYTE PTR [ebp+0x67e4eec7],dh
  40a8e1:	sar    DWORD PTR fs:[eax-0x1b16ec12],1
  40a8e8:	(bad)  
  40a8ea:	aad    0x6e
  40a8ec:	cmp    DWORD PTR [esi+eiz*2-0x5030b999],edi
  40a8f3:	shl    DWORD PTR [edx],0x14
  40a8f6:	adc    al,0x79
  40a8f8:	dec    edx
  40a8f9:	xchg   ebx,eax
  40a8fa:	jmp    FWORD PTR [esi+edx*1+0x4a43003d]
  40a901:	iret   
  40a902:	je     0x40a8f5
  40a904:	cli    
  40a905:	cld    
  40a906:	jnp    0x40a8a6
  40a908:	or     eax,0x6895449c
  40a90d:	adc    al,0x68
  40a90f:	mov    al,ds:0x11005572
  40a914:	int3   
  40a915:	push   cs
  40a916:	inc    ecx
  40a917:	jmp    0xc09cb129
  40a91c:	jae    0x40a932
  40a91e:	call   0xff0e5c9c
  40a923:	repnz repnz inc edx
  40a926:	sbb    DWORD PTR [ecx+0x4600147a],edi
  40a92c:	xchg   esp,eax
  40a92d:	fldcw  WORD PTR ss:[ecx+0x46501473]
  40a934:	dec    edi
  40a935:	sbb    al,0xe8
  40a937:	outs   dx,BYTE PTR ds:[esi]
  40a938:	xchg   ecx,eax
  40a939:	int    0xfe
  40a93b:	inc    ecx
  40a93c:	fst    DWORD PTR [eax-0x1]
  40a93f:	add    BYTE PTR cs:[eax],al
  40a942:	or     BYTE PTR [eax+ebp*2],dl
  40a945:	cmp    edx,esi
  40a947:	push   esp
  40a948:	add    BYTE PTR [ecx-0x16bef13b],dl
  40a94e:	xchg   ebp,eax
  40a94f:	pop    es
  40a950:	pop    esp
  40a951:	shl    bl,0x13
  40a954:	call   0xff0e5c9e
  40a959:	bnd jb 0x40a99e
  40a95c:	sbb    DWORD PTR [ecx-0x1ffebf6],ebx
  40a962:	lea    esi,[esi]
  40a964:	fldcw  WORD PTR [ecx]
  40a966:	hlt    
  40a967:	adc    edx,DWORD PTR [eax-0x22]
  40a96a:	clc    
  40a96b:	sbb    ebp,eax
  40a96d:	xor    dl,BYTE PTR [esi-0x453e0133]
  40a973:	push   eax
  40a974:	inc    DWORD PTR [eax]
  40a976:	ja     0x40a92a
  40a978:	jae    0x40a976
  40a97a:	ja     0x40a9e8
  40a97c:	or     al,ch
  40a97e:	loop   0x40a9ed
  40a980:	(bad)  
  40a981:	call   ecx
  40a983:	(bad)  
  40a984:	add    al,BYTE PTR [eax]
  40a986:	pop    ebp
  40a987:	popf   
  40a988:	jmp    0x3257:0x54b4cc83
  40a98f:	sbb    BYTE PTR [edx+0x2a],ch
  40a992:	mov    bh,0x6b
  40a994:	or     al,ch
  40a996:	xchg   esp,eax
  40a997:	ins    DWORD PTR es:[edi],dx
  40a998:	(bad)  
  40a999:	inc    DWORD PTR [ecx-0x279503a5]
  40a99f:	mov    ecx,0xb15782a7
  40a9a4:	or     eax,eax
  40a9a6:	add    BYTE PTR [eax],al
  40a9a8:	cld    
  40a9a9:	ror    BYTE PTR [esi+0x68],1
  40a9ac:	enter  0xef11,0xbe
  40a9b0:	lock mov ebx,0x1d8413e
  40a9b6:	push   DWORD PTR [ebp-0x40]
  40a9b9:	mov    ecx,0xb0f7a30f
  40a9be:	out    0x3d,al
  40a9c0:	out    0xb2,al
  40a9c2:	std    
  40a9c3:	mov    ebx,DWORD PTR [ebp-0x77bed794]
  40a9c9:	sahf   
  40a9ca:	cmp    edi,DWORD PTR [ecx-0x80]
  40a9cd:	pop    eax
  40a9ce:	add    BYTE PTR [eax+0x45741167],al
  40a9d4:	mov    al,0xe6
  40a9d6:	ds inc ecx
  40a9d8:	mov    BYTE PTR [edx],cl
  40a9da:	call   0x52429c
  40a9df:	or     ebx,DWORD PTR [eax]
  40a9e1:	ins    BYTE PTR es:[edi],dx
  40a9e2:	pop    ds
  40a9e3:	push   esi
  40a9e4:	xor    BYTE PTR [eax+0x157ff85],bh
  40a9ea:	push   0xbcc24800
  40a9ef:	push   0x4142dd31
  40a9f4:	xor    DWORD PTR [ebx],ecx
  40a9f6:	jecxz  0x40aa6c
  40a9f8:	sub    ebx,esp
  40a9fa:	mov    ah,0xa1
  40a9fc:	ss mov gs,edx
  40a9ff:	std    
  40aa00:	lods   al,BYTE PTR ds:[esi]
  40aa01:	xchg   cl,ah
  40aa03:	jmp    0x3031:0x3d83f530
  40aa0a:	fiadd  WORD PTR [ebp+0x0]
  40aa0d:	add    BYTE PTR ds:0xeb8c2ea,dl
  40aa13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa14:	loope  0x40aa14
  40aa16:	add    ecx,DWORD PTR ds:0x5284071b
  40aa1c:	loop   0x40aa92
  40aa1e:	cmc    
  40aa1f:	dec    ebp
  40aa20:	pop    eax
  40aa21:	or     cl,bl
  40aa23:	and    BYTE PTR [edi-0x1],bl
  40aa26:	out    0x1d,al
  40aa28:	inc    edx
  40aa29:	leave  
  40aa2a:	repz mov esi,0x5eaa5502
  40aa30:	xchg   bl,al
  40aa32:	int    0x8c
  40aa34:	cmp    DWORD PTR [edx+0x31],ebp
  40aa37:	shr    DWORD PTR ds:0xeac344ff,1
  40aa3d:	stc    
  40aa3e:	cmp    ecx,DWORD PTR [esi]
  40aa40:	loop   0x40a9ca
  40aa42:	hlt    
  40aa43:	push   es
  40aa44:	mov    ?,WORD PTR [esp+ebx*1]
  40aa47:	adc    eax,DWORD PTR [ebp+0x0]
  40aa4a:	stos   BYTE PTR es:[edi],al
  40aa4b:	mov    bh,0x5b
  40aa4d:	sub    al,dh
  40aa4f:	mov    edx,0xaf313e82
  40aa54:	inc    edi
  40aa55:	push   0x437c2f
  40aa5a:	out    0x22,al
  40aa5c:	and    dl,BYTE PTR [eax+0x31]
  40aa5f:	mov    ebx,0xe5e5c00d
  40aa64:	cmp    al,ch
  40aa66:	shl    DWORD PTR ds:0x1401fee2,cl
  40aa6c:	push   ecx
  40aa6d:	add    al,0x31
  40aa6f:	mov    ebp,0x6c9e
  40aa74:	dec    ecx
  40aa75:	push   ebx
  40aa76:	sub    BYTE PTR [ecx+eiz*8],al
  40aa79:	int3   
  40aa7a:	push   ebx
  40aa7b:	or     al,0x49
  40aa7d:	addr16 mov esp,ecx
  40aa80:	aaa    
  40aa81:	mov    ebx,0xcc2e5f68
  40aa86:	rol    DWORD PTR [ebx],0x6f
  40aa89:	xchg   esp,eax
  40aa8a:	out    dx,al
  40aa8b:	add    esp,DWORD PTR [esi+ecx*8-0x2b9c1fd2]
  40aa92:	pop    edi
  40aa93:	loope  0x40aaa4
  40aa95:	int3   
  40aa96:	xchg   ebp,eax
  40aa97:	(bad)  
  40aa98:	aam    0xc
  40aa9a:	out    0x56,al
  40aa9c:	mov    edx,0xf7dffbcb
  40aaa1:	inc    ecx
  40aaa2:	icebp  
  40aaa3:	jmp    0x40aaaf
  40aaa5:	dec    edi
  40aaa6:	jbe    0x40aa89
  40aaa8:	xchg   DWORD PTR [edx-0x60],ebp
  40aaab:	(bad)  
  40aaac:	xor    dl,BYTE PTR [esp+edi*4]
  40aaaf:	mov    edx,cs
  40aab1:	xchg   edi,eax
  40aab2:	and    al,0xe0
  40aab4:	pop    eax
  40aab5:	adc    al,0xc3
  40aab7:	das    
  40aab8:	mov    BYTE PTR [ecx-0x1f],0xeb
  40aabc:	cmp    al,0x4e
  40aabe:	inc    esi
  40aabf:	loope  0x40aa6a
  40aac1:	push   ecx
  40aac2:	cmp    eax,0xe93e316e
  40aac7:	imul   edi,DWORD PTR [edi],0x55
  40aaca:	test   al,0x3
  40aacc:	or     DWORD PTR [ecx+ebp*8],edx
  40aacf:	add    esi,DWORD PTR [ecx-0x707c4f44]
  40aad5:	retf   
  40aad6:	loope  0x40aa9b
  40aad8:	add    BYTE PTR [eax],al
  40aada:	add    ch,BYTE PTR [ebx]
  40aadc:	mov    ecx,0x5928feb
  40aae1:	loope  0x40aac9
  40aae3:	cmp    ebp,ecx
  40aae5:	add    ebx,DWORD PTR [esi-0x76]
  40aae8:	inc    DWORD PTR [eax-0x16beaac9]
  40aaee:	and    cl,bl
  40aaf0:	je     0x40aae3
  40aaf2:	dec    edx
  40aaf3:	mov    ah,0xa0
  40aaf5:	ficom  WORD PTR [ecx-0x4d]
  40aaf8:	or     al,0x54
  40aafa:	push   eax
  40aafb:	retf   0x54fe
  40aafe:	push   ecx
  40aaff:	retf   0xf174
  40ab02:	dec    edx
  40ab03:	dec    ebx
  40ab04:	jp     0x40aac4
  40ab06:	adc    esp,ebx
  40ab08:	shr    ebp,0x32
  40ab0b:	popa   
  40ab0c:	mov    edi,DWORD PTR [ebp+0x13fbd6b5]
  40ab12:	sub    eax,0x679e2d3e
  40ab17:	sbb    al,0xe8
  40ab19:	int    0x64
  40ab1b:	retf   
  40ab1c:	(bad)  
  40ab1d:	pusha  
  40ab1e:	ja     0x40aae8
  40ab20:	addr16 jmp 0x11fe6658
  40ab26:	daa    
  40ab27:	push   ebp
  40ab28:	inc    ecx
  40ab29:	jmp    0x28821588
  40ab2e:	xor    eax,0xcaf174cb
  40ab33:	mov    esi,0xc9d15ea0
  40ab38:	je     0x40ab8f
  40ab3a:	sar    DWORD PTR [edi],1
  40ab3c:	or     BYTE PTR [ecx+0x0],al
  40ab3f:	add    BYTE PTR [edi+0x4e],dh
  40ab42:	inc    DWORD PTR [esi-0x15]
  40ab45:	aam    0x3
  40ab47:	jmp    0x6b2c4ab3
  40ab4c:	outs   dx,BYTE PTR ds:[esi]
  40ab4d:	into   
  40ab4e:	imul   ebp,ecx,0x9cfefa0c
  40ab54:	sub    bh,BYTE PTR [eax+ebp*8-0x77366e60]
  40ab5b:	lods   al,BYTE PTR ds:[esi]
  40ab5c:	data16 xor al,BYTE PTR [eax]
  40ab5f:	jmp    0xa833e5
  40ab64:	mov    eax,ds:0xc0004155
  40ab69:	xor    al,0x41
  40ab6b:	inc    ecx
  40ab6c:	pop    eax
  40ab6d:	mov    bl,0x73
  40ab6f:	or     BYTE PTR [eax],dh
  40ab71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab72:	lahf   
  40ab73:	dec    DWORD PTR [edi+0x37]
  40ab76:	add    BYTE PTR [eax],al
  40ab78:	jg     0x40ab23
  40ab7a:	data16 je 0x40ab96
  40ab7d:	push   ecx
  40ab7e:	add    BYTE PTR [eax-0x12],ch
  40ab81:	push   eax
  40ab82:	inc    ecx
  40ab83:	add    BYTE PTR [edi+0x6c],ch
  40ab86:	or     al,ch
  40ab88:	xchg   edx,eax
  40ab89:	outs   dx,DWORD PTR ds:[esi]
  40ab8a:	std    
  40ab8b:	(bad)  
  40ab8c:	fild   QWORD PTR [ebx-0x4]
  40ab8f:	jmp    DWORD PTR [ebp+0x18]
  40ab92:	call   0xfe29fd8a
  40ab97:	leave  
  40ab98:	ficomp DWORD PTR [eax+eax*1]
  40ab9b:	push   ebp
  40ab9c:	xchg   ebx,eax
  40ab9d:	les    eax,FWORD PTR [ecx+0x539dacc4]
  40aba3:	adc    BYTE PTR [eax],al
  40aba5:	add    BYTE PTR [ebx+0x5d0068c6],al
  40abab:	pop    ebx
  40abac:	cld    
  40abad:	push   eax
  40abae:	pop    edi
  40abaf:	imul   ecx,DWORD PTR [eax],0x6a
  40abb2:	enter  0x73ea,0x10
  40abb6:	dec    edi
  40abb7:	push   es
  40abb8:	sbb    al,0x85
  40abba:	sbb    BYTE PTR [ebx+0x27],ch
  40abbd:	mov    eax,DWORD PTR [ebp-0x37957117]
  40abc3:	cmp    eax,DWORD PTR [eax]
  40abc5:	push   0x156f
  40abca:	outs   dx,DWORD PTR ds:[esi]
  40abcb:	imul   ecx,DWORD PTR [edx+ebp*2],0x5f
  40abcf:	jmp    0x15b2b044
  40abd4:	push   0x0
  40abd6:	inc    eax
  40abd7:	ja     0x40ac24
  40abd9:	add    BYTE PTR [eax+0x3175fe45],bl
  40abdf:	pop    ds
  40abe0:	in     al,dx
  40abe1:	pop    edi
  40abe2:	out    dx,eax
  40abe3:	mov    edx,0xbf73c902
  40abe8:	add    dl,BYTE PTR [ebp-0x46]
  40abeb:	pop    ss
  40abec:	add    ebx,0x65
  40abef:	cmp    DWORD PTR ss:[edx+ebp*4],edx
  40abf3:	in     eax,dx
  40abf4:	push   0xdff8a400
  40abf9:	dec    edi
  40abfa:	dec    esi
  40abfb:	pusha  
  40abfc:	adc    bh,bh
  40abfe:	mov    esp,0x3e0068b2
  40ac03:	pusha  
  40ac04:	clc    
  40ac05:	(bad)  
  40ac06:	jecxz  0x40ac2a
  40ac08:	mov    DWORD PTR [edi+0x12a40000],edi
  40ac0e:	mov    edx,DWORD PTR [ebp+eiz*1+0x6b]
  40ac12:	imul   eax,DWORD PTR [eax],0xff6abb8b
  40ac18:	xor    bh,BYTE PTR [ebx-0x347b00fe]
  40ac1e:	push   0x82d06ff
  40ac23:	push   0x31
  40ac25:	adc    eax,0x5ae804
  40ac2a:	add    al,0x0
  40ac2c:	ror    DWORD PTR [ecx+0x58],0xfc
  40ac30:	fldlg2 
  40ac32:	dec    esp
  40ac33:	add    BYTE PTR [ecx],dh
  40ac35:	je     0x40abf7
  40ac37:	rdtsc  
  40ac39:	mov    BYTE PTR [ecx+0xadfceeb],cl
  40ac3f:	(bad)  
  40ac40:	cmp    al,0xc3
  40ac42:	jmp    0x3cfe:0xde5a3952
  40ac49:	mov    edi,0xbafc97ea
  40ac4e:	add    dl,cl
  40ac50:	xchg   ecx,eax
  40ac51:	cmp    eax,0xfa0101c3
  40ac56:	push   edi
  40ac57:	or     al,0x96
  40ac59:	adc    ebx,DWORD PTR [ebx+edi*8-0x215ebc6a]
  40ac60:	xchg   eax,ecx
  40ac62:	fwait
  40ac63:	idiv   DWORD PTR [edi+0x3e]
  40ac66:	stc    
  40ac67:	fdivp  st(5),st
  40ac69:	sub    edx,DWORD PTR [ecx]
  40ac6b:	popa   
  40ac6c:	jmp    0x10caa39
  40ac71:	add    BYTE PTR [eax+0x1f],dh
  40ac74:	jmp    0xedf856b1
  40ac79:	push   edi
  40ac7a:	sub    ecx,ecx
  40ac7c:	pop    ebx
  40ac7d:	cld    
  40ac7e:	push   esi
  40ac7f:	sub    eax,0xc847dd61
  40ac84:	pop    ebx
  40ac85:	adc    BYTE PTR [ecx-0x6a],cl
  40ac88:	sbb    al,0x4
  40ac8a:	xor    DWORD PTR [ecx+ebx*1-0x23],edx
  40ac8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac8f:	sbb    BYTE PTR [esi-0xe43b6a9],bh
  40ac95:	pop    ebx
  40ac96:	push   ds
  40ac97:	enter  0x57ad,0x3d
  40ac9b:	(bad)  
  40ac9c:	sbb    esi,esp
  40ac9e:	cmovb  eax,DWORD PTR [ecx]
  40aca1:	in     al,dx
  40aca2:	push   ebp
  40aca3:	dec    esp
  40aca4:	xchg   esi,eax
  40aca5:	fucomp st(1)
  40aca7:	shl    ah,cl
  40aca9:	add    ebx,DWORD PTR [ebx+ebx*4-0x6c]
  40acad:	xor    edx,0xffffffe0
  40acb0:	jns    0x40ac8f
  40acb2:	out    0xc7,eax
  40acb4:	sti    
  40acb5:	sti    
  40acb6:	lods   eax,DWORD PTR ds:[esi]
  40acb7:	xchg   ecx,eax
  40acb8:	call   0xb908849c
  40acbd:	fadd   QWORD PTR [ebp+0x1c]
  40acc0:	push   ecx
  40acc1:	mov    esi,0xdd55c7c4
  40acc6:	inc    ebp
  40acc7:	sub    al,0x5c
  40acc9:	xchg   DWORD PTR [esi-0x122ba41],esi
  40accf:	(bad)  
  40acd0:	mov    bl,0xf
  40acd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd3:	inc    ecx
  40acd4:	add    cl,ah
  40acd6:	add    BYTE PTR [eax],al
  40acd8:	mov    ah,BYTE PTR [ebx]
  40acda:	jmp    FWORD PTR [esi]
  40acdc:	je     0x40ad1b
  40acde:	add    BYTE PTR [ebx-0x1500c3ce],dl
  40ace4:	xor    dl,BYTE PTR [ecx*4-0x13fca94]
  40aceb:	push   cs
  40acec:	cmp    eax,0x606ff3a
  40acf1:	and    al,0x6a
  40acf3:	jmp    0x5c28c0d0
  40acf8:	add    DWORD PTR [eax+eax*1],edx
  40acfb:	es scas al,BYTE PTR es:[edi]
  40acfd:	mov    bh,0xf2
  40acff:	out    0x6d,al
  40ad01:	pop    ss
  40ad02:	add    cl,ch
  40ad04:	xor    cl,bh
  40ad06:	test   ch,bl
  40ad08:	popa   
  40ad09:	(bad)  
  40ad0a:	(bad)  
  40ad0b:	jmp    0x40ad3f
  40ad0d:	adc    al,0x0
  40ad0f:	scas   al,BYTE PTR es:[edi]
  40ad10:	mov    bh,0xbe
  40ad12:	repnz mov esi,0xe9fec705
  40ad18:	xor    cl,bh
  40ad1a:	test   BYTE PTR [ebp-0x160139ff],ch
  40ad20:	xor    dl,BYTE PTR [eax+eax*1]
  40ad23:	jb     0x40ad64
  40ad25:	sub    al,0x8b
  40ad27:	sti    
  40ad28:	mov    BYTE PTR [ecx*4-0x13e1d9c],dl
  40ad2f:	xchg   BYTE PTR [edx],ah
  40ad31:	cdq    
  40ad32:	test   BYTE PTR [ebp+0x19fec601],cl
  40ad38:	scas   al,BYTE PTR es:[edi]
  40ad39:	(bad)  
  40ad3a:	out    0x7a,eax
  40ad3c:	add    BYTE PTR [eax],al
  40ad3e:	cmc    
  40ad3f:	lds    ecx,FWORD PTR [edi+0x66]
  40ad42:	addr16 and al,0xff
  40ad45:	aam    0x36
  40ad47:	(bad)  
  40ad48:	je     0x40ad2b
  40ad4a:	dec    eax
  40ad4b:	adc    al,0xff
  40ad4d:	aam    0xba
  40ad4f:	lds    edx,FWORD PTR [ecx+0x0]
  40ad52:	fcom   QWORD PTR [ebx-0x17941745]
  40ad58:	std    
  40ad59:	add    BYTE PTR [edi-0x77fee572],dl
  40ad5f:	adc    al,BYTE PTR [ebx-0x21bdb43]
  40ad65:	call   FWORD PTR [eax-0x76f07be9]
  40ad6b:	adc    al,BYTE PTR [eax]
  40ad6d:	(bad)  
  40ad6e:	or     eax,0x37fff17f
  40ad73:	adc    eax,DWORD PTR [eax]
  40ad75:	out    dx,eax
  40ad76:	cmp    ecx,DWORD PTR es:[ebp-0x72ed76bf]
  40ad7d:	test   DWORD PTR [eax-0x1a],ecx
  40ad80:	std    
  40ad81:	dec    DWORD PTR [eax]
  40ad83:	mov    eax,0x12584c12
  40ad88:	test   eax,eax
  40ad8a:	fmul   QWORD PTR [ebp-0x39]
  40ad8d:	test   DWORD PTR [esi+ebx*8-0x3],edi
  40ad91:	call   FWORD PTR [ecx]
  40ad93:	adc    ch,bh
  40ad95:	mov    esi,0x41404980
  40ad9a:	or     BYTE PTR [ebp-0x163bff7d],bl
  40ada0:	std    
  40ada1:	push   eax
  40ada2:	add    BYTE PTR [eax],al
  40ada4:	mov    al,ds:0x180049e3
  40ada9:	xchg   ebp,eax
  40adaa:	mov    esi,0x83d2eb74
  40adaf:	aam    0x9b
  40adb1:	jmp    0xbb18b0b3
  40adb6:	mov    esp,0x414f1f68
  40adbb:	add    BYTE PTR [ebp-0x6d],dl
  40adbe:	(bad)  
  40adbf:	sti    
  40adc0:	inc    edi
  40adc1:	jmp    0x554f9614
  40adc6:	add    BYTE PTR [eax],al
  40adc8:	dec    ebp
  40adc9:	ror    BYTE PTR ds:0x39a3185,1
  40adcf:	add    BYTE PTR [ecx],dh
  40add1:	ror    ebp,cl
  40add3:	inc    eax
  40add4:	lock mov edx,0xff318487
  40adda:	(bad)  
  40addc:	add    DWORD PTR [ebx-0x4d],edx
  40addf:	dec    ebx
  40ade0:	xor    DWORD PTR [ebx-0x53fa3ff3],edi
  40ade6:	test   DWORD PTR [edi+ebx*1],edi
  40ade9:	jns    0x40ae2e
  40adeb:	add    BYTE PTR [ecx],dh
  40aded:	scas   al,BYTE PTR es:[edi]
  40adee:	jle    0x40ad70
  40adf0:	xor    DWORD PTR [ebx+0x23a4ff02],edi
  40adf6:	xlat   BYTE PTR ds:[ebx]
  40adf7:	(bad)  
  40adf8:	ss sbb di,0xbe62
  40adfe:	fsin   
  40ae00:	pushf  
  40ae01:	(bad)  
  40ae02:	aad    0xfe
  40ae04:	dec    esi
  40ae05:	ds and bl,0x0
  40ae09:	add    BYTE PTR [edx-0x1a],al
  40ae0c:	(bad)  [esp+esi*4+0x36fed583]
  40ae13:	or     ebp,DWORD PTR [esi+0x1]
  40ae16:	fwait
  40ae17:	mov    ebx,0xbb9b006c
  40ae1c:	ins    BYTE PTR es:[edi],dx
  40ae1d:	add    BYTE PTR [edi+esi*1+0x7616f2e3],ch
  40ae24:	xor    bh,bh
  40ae26:	and    al,0xc5
  40ae28:	inc    esp
  40ae29:	inc    ecx
  40ae2a:	xor    edx,eax
  40ae2c:	ret    0x7673
  40ae2f:	sahf   
  40ae30:	dec    edi
  40ae31:	adc    al,0xf6
  40ae33:	pop    edi
  40ae34:	mov    ebx,0xd98deef2
  40ae39:	mov    ah,0x5
  40ae3b:	dec    edx
  40ae3c:	(bad)  
  40ae3e:	faddp  st(7),st
  40ae40:	repnz (bad) 
  40ae42:	pushf  
  40ae43:	sahf   
  40ae44:	aad    0xfe
  40ae46:	into   
  40ae47:	adc    edx,DWORD PTR [ecx-0x22]
  40ae4a:	vminps ymm3,ymm7,ymm2
  40ae4e:	test   edi,esp
  40ae50:	pop    ecx
  40ae51:	fidiv  DWORD PTR [edi+0x314d2ebb]
  40ae57:	adc    al,0x52
  40ae59:	clc    
  40ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5b:	ds aad 0xda
  40ae5e:	in     eax,0xbb
  40ae60:	cmp    edx,ebx
  40ae62:	xchg   edi,eax
  40ae63:	les    esi,FWORD PTR [ebx-0x19]
  40ae66:	add    esp,0x25
  40ae69:	(bad)  
  40ae6b:	and    ebx,DWORD PTR [esi]
  40ae6d:	nop
  40ae6e:	add    BYTE PTR [eax],al
  40ae70:	(bad)  
  40ae71:	rcl    BYTE PTR ds:0xbe28eda,0xda
  40ae78:	outs   dx,DWORD PTR ds:[esi]
  40ae79:	les    edi,FWORD PTR [ebx]
  40ae7b:	out    0x63,eax
  40ae7d:	(bad)  
  40ae7e:	std    
  40ae7f:	jmp    0xd168:0x3e95882
  40ae86:	aam    0x3
  40ae88:	in     al,0x98
  40ae8a:	aam    0x85
  40ae8c:	jb     0x40ae19
  40ae8e:	xor    eax,0x621fe58d
  40ae93:	mul    BYTE PTR [ebp-0x64cb6eb2]
  40ae99:	adc    al,0xc6
  40ae9b:	dec    edi
  40ae9c:	xor    eax,0x8b0c33c3
  40aea1:	adc    al,0xb6
  40aea3:	dec    edi
  40aea4:	cmp    eax,0xb4301ac3
  40aea9:	aam    0x1b
  40aeab:	xor    dh,ch
  40aead:	pop    ecx
  40aeae:	pop    ebp
  40aeaf:	add    al,0x31
  40aeb1:	adc    al,0xe9
  40aeb3:	mov    WORD PTR [ebp+0x7c],ds
  40aeb6:	popa   
  40aeb7:	idiv   BYTE PTR [ebp-0x4bcbbaa7]
  40aebd:	pop    ecx
  40aebe:	test   eax,0x244b34
  40aec3:	jbe    0x40af2b
  40aec5:	jl     0x40aec5
  40aec7:	sbb    edi,DWORD PTR [ecx]
  40aec9:	xchg   edi,eax
  40aeca:	jl     0x40ae71
  40aecc:	sub    eax,0x666c2748
  40aed1:	aam    0xfe
  40aed3:	fadd   QWORD PTR [eax]
  40aed5:	add    dh,al
  40aed7:	ret    0xf974
  40aeda:	mov    DWORD PTR [edx],ecx
  40aedc:	(bad)  
  40aedd:	mov    esp,0xf174c32e
  40aee2:	mov    ah,bh
  40aee4:	cld    
  40aee5:	ss js  0x40aeaa
  40aee8:	ss inc ecx
  40aeea:	push   ss
  40aeeb:	dec    edi
  40aeec:	add    cl,ch
  40aeee:	lods   eax,DWORD PTR ds:[esi]
  40aeef:	fiadd  DWORD PTR [ebx]
  40aef1:	push   ds
  40aef2:	idiv   BYTE PTR [edi+0x74]
  40aef5:	aaa    
  40aef6:	test   BYTE PTR [edx-0x71354b76],cl
  40aefc:	adc    DWORD PTR [esi],eax
  40aefe:	idiv   BYTE PTR [ebx-0x2]
  40af01:	fwait
  40af02:	sub    ah,BYTE PTR [ebx-0x37]
  40af05:	sub    ebx,DWORD PTR [ebp-0x3d]
  40af08:	push   ebx
  40af09:	bound  ebx,QWORD PTR [ecx-0x6c]
  40af0c:	ret    
  40af0d:	loope  0x40af77
  40af0f:	ret    0x36fe
  40af12:	lods   al,BYTE PTR ds:[esi]
  40af13:	push   0x903c6210
  40af18:	test   cl,dl
  40af1a:	or     dl,al
  40af1c:	(bad)  
  40af1d:	sbb    DWORD PTR [edi+0x2d34ff14],edx
  40af23:	add    BYTE PTR cs:[esi+0x1bff2467],dh
  40af2a:	sub    DWORD PTR [ecx-0x246fe341],ebx
  40af30:	test   BYTE PTR [ebp-0x16013e28],bl
  40af36:	xor    dl,BYTE PTR [eax+eax*1]
  40af39:	bound  eax,QWORD PTR [eax]
  40af3b:	add    BYTE PTR [edi-0x35],bl
  40af3e:	std    
  40af3f:	add    BYTE PTR [edi+0x4d1289db],ch
  40af45:	inc    edx
  40af46:	sti    
  40af47:	(bad)  
  40af48:	pop    edi
  40af49:	fmul   QWORD PTR [esi-0x73]
  40af4c:	push   ebp
  40af4d:	pop    ss
  40af4e:	(bad)  
  40af4f:	dec    DWORD PTR [edi+0x7]
  40af52:	push   0x10
  40af54:	pop    edi
  40af55:	xchg   edx,eax
  40af56:	idiv   dh
  40af58:	pop    edi
  40af59:	fdiv   st(5),st
  40af5b:	push   edx
  40af5c:	mov    WORD PTR [edi-0x24110345],ss
  40af62:	std    
  40af63:	add    ah,ah
  40af65:	clc    
  40af66:	mov    WORD PTR [ebp-0x22478],?
  40af6c:	pop    edi
  40af6d:	push   edx
  40af6e:	adc    bh,bh
  40af70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af71:	sbb    dl,BYTE PTR [edi-0x1]
  40af74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af75:	push   cs
  40af76:	call   0xfe1cce8e
  40af7b:	adc    DWORD PTR [edi],0xffffffc7
  40af7e:	std    
  40af7f:	lea    ebp,[ebx*8-0x4b1a0003]
  40af86:	jmp    0xf7728335
  40af8b:	(bad)  
  40af8c:	pop    edi
  40af8d:	jmp    0xfef6:0xa44f1289
  40af94:	pop    edi
  40af95:	jmp    0xc2c9:0x95052fd
  40af9c:	or     al,0x16
  40af9e:	push   ebp
  40af9f:	mov    eax,DWORD PTR [eax]
  40afa1:	add    ah,bh
  40afa3:	xchg   edi,eax
  40afa4:	ret    0xdef8
  40afa7:	jmp    0x3d407a9
  40afac:	or     al,0x8b
  40afae:	jmp    0xfde9:0xcef8838c
  40afb5:	push   eax
  40afb6:	and    bl,BYTE PTR [eax]
  40afb8:	push   0x0
  40afba:	xor    DWORD PTR [edx-0x211f3b0],ebp
  40afc0:	sbb    eax,DWORD PTR [ebp-0x38ca3f0f]
  40afc6:	je     0x40b007
  40afc8:	add    al,0x0
  40afca:	xor    DWORD PTR [ebx+0x43a48a72],ebp
  40afd0:	(bad)  
  40afd1:	inc    dh
  40afd3:	inc    esi
  40afd4:	repnz mov WORD PTR [edi+ebx*2+0x34],?
  40afd9:	lea    ebp,[edi+eiz*2+0x7baefed6]
  40afe0:	push   0xdc40a610
  40afe5:	std    
  40afe6:	sahf   
  40afe7:	add    dl,bh
  40afe9:	push   ecx
  40afea:	and    eax,0x8d7c835b
  40afef:	stos   DWORD PTR es:[edi],eax
  40aff0:	jb     0x40b065
  40aff2:	push   ecx
  40aff3:	dec    eax
  40aff4:	cdq    
  40aff5:	sti    
  40aff6:	jg     0x40b01a
  40aff8:	xlat   BYTE PTR ds:[ebx]
  40aff9:	(bad)  
  40affa:	jbe    0x40af9c
  40affc:	push   es
  40affd:	jmp    esp
  40afff:	mov    dl,0x2d
  40b001:	call   0xff17ca3f
  40b006:	add    BYTE PTR [eax],al
  40b008:	mov    dl,0xfa
  40b00a:	repz (bad) 
  40b00c:	push   esi
  40b00d:	js     0x40afe5
  40b00f:	pop    esp
  40b011:	adc    esi,DWORD PTR [edx+ebp*8-0x7d]
  40b015:	inc    esi
  40b016:	jo     0x40b00f
  40b018:	aas    
  40b019:	loop   0x40aff0
  40b01b:	mov    ah,BYTE PTR [ebx]
  40b01d:	jmp    0xfed5:0xd22ff78f
  40b024:	add    ebx,0x35
  40b027:	leave  
  40b028:	repz ret 0x5502
  40b02c:	stos   BYTE PTR es:[edi],al
  40b02d:	(bad)  
  40b02e:	add    ebx,0x74d728c1
  40b034:	xor    eax,0x69cc9114
  40b039:	adc    al,0xe9
  40b03b:	or     dh,cl
  40b03d:	inc    esi
  40b03e:	in     al,dx
  40b03f:	xor    eax,0x3dcd5f8
  40b044:	add    BYTE PTR [ecx+ebp*2-0x6772cf3d],dh
  40b04b:	mov    BYTE PTR [ebp-0x50],ch
  40b04e:	sbb    BYTE PTR [edx],dh
  40b050:	into   
  40b051:	inc    esi
  40b052:	fucomp st(3)
  40b054:	push   edx
  40b055:	xchg   edx,eax
  40b056:	gs (bad) 
  40b058:	or     ecx,ebx
  40b05a:	outs   dx,DWORD PTR ds:[esi]
  40b05b:	dec    eax
  40b05c:	(bad)  [edx+eiz*8-0x5b75c1f3]
  40b063:	sub    al,0x95
  40b065:	adc    ch,BYTE PTR [edi+ebp*4-0x10c06b0f]
  40b06c:	add    BYTE PTR [eax],al
  40b06e:	and    bl,al
  40b070:	add    esi,ecx
  40b072:	mov    ecx,0x4eea1946
  40b077:	or     dh,dh
  40b079:	(bad)  
  40b07a:	repnz icebp 
  40b07c:	or     al,0x33
  40b07e:	or     DWORD PTR [esi-0x55],esp
  40b081:	inc    esp
  40b082:	xor    DWORD PTR [edi-0x5409445d],ecx
  40b088:	adc    al,0x4c
  40b08a:	xor    DWORD PTR [edx+ebp*2],edx
  40b08d:	mov    edi,0xbbab8f2a
  40b092:	inc    al
  40b094:	jae    0x40b049
  40b096:	dec    esi
  40b097:	mov    esp,DWORD PTR [ecx-0x2b]
  40b09a:	aas    
  40b09b:	mov    ah,BYTE PTR [ebx]
  40b09d:	mov    ah,0xec
  40b09f:	xchg   esp,eax
  40b0a0:	(bad)  
  40b0a1:	lock mov al,ds:0xfd5f67e3
  40b0a7:	mov    edi,0xbf3103e8
  40b0ac:	xor    esi,DWORD PTR [eax+0x2b00628e]
  40b0b2:	jb     0x40b0c8
  40b0b4:	lea    esp,[eax*8+0x6a65e84f]
  40b0bb:	adc    al,0x0
  40b0bd:	push   0xfffffff1
  40b0bf:	or     ecx,DWORD PTR [ebp-0xb052d4]
  40b0c5:	adc    al,0x9d
  40b0c7:	mov    bh,0x57
  40b0c9:	add    al,BYTE PTR [edi+edi*4]
  40b0cc:	mov    BYTE PTR [ebx*4+0xa54490],ah
  40b0d3:	add    BYTE PTR ds:0x559974bf,al
  40b0d9:	addr16 inc edx
  40b0db:	test   al,0x32
  40b0dd:	mov    edi,0x550bbd34
  40b0e2:	add    BYTE PTR [ecx+0x10],al
  40b0e5:	cmp    bh,bh
  40b0e7:	dec    esi
  40b0e8:	cmp    ah,dl
  40b0ea:	push   cs
  40b0eb:	ins    DWORD PTR es:[edi],dx
  40b0ec:	or     al,0xbf
  40b0ee:	(bad)  
  40b0ef:	jmp    0x6b09099f
  40b0f4:	out    0xcf,al
  40b0f6:	(bad)  
  40b0f7:	fld    QWORD PTR [esi]
  40b0f9:	xchg   ebp,eax
  40b0fa:	(bad)  
  40b0fb:	call   0xedb57032
  40b100:	mov    dl,BYTE PTR [ebx]
  40b102:	dec    ecx
  40b103:	jmp    0x6b20963a
  40b108:	ins    DWORD PTR es:[edi],dx
  40b109:	adc    eax,0xbec2ac89
  40b10e:	je     0x40b0fd
  40b110:	lods   eax,DWORD PTR ds:[esi]
  40b111:	pop    eax
  40b112:	mov    ah,0xf6
  40b114:	dec    edi
  40b116:	mov    fs,WORD PTR [edx+esi*2-0x4a4e8b42]
  40b11d:	pop    eax
  40b11e:	les    esp,FWORD PTR [esi-0x17008009]
  40b124:	xor    dl,BYTE PTR [ebx+eax*4]
  40b127:	or     al,0x3f
  40b129:	in     eax,dx
  40b12a:	inc    eax
  40b12b:	add    BYTE PTR [eax],cl
  40b12d:	adc    esi,DWORD PTR [eax+edx*2-0x7b]
  40b131:	(bad)  
  40b132:	mov    bh,0x50
  40b134:	jb     0x40b149
  40b136:	push   0x0
  40b138:	add    BYTE PTR [eax],al
  40b13a:	jb     0x40b154
  40b13c:	lea    eax,[ebp+0x58]
  40b13f:	add    ebp,DWORD PTR [edx+0x0]
  40b142:	test   esi,edi
  40b144:	mov    edi,0x3cadc750
  40b149:	sub    DWORD PTR [ecx],ebx
  40b14b:	sbb    BYTE PTR [ebx],cl
  40b14d:	rcr    ah,0x24
  40b150:	cmp    DWORD PTR [ebp+0x14],0x13
  40b154:	je     0x40b182
  40b156:	pop    ebx
  40b157:	data16 adc BYTE PTR [eax],al
  40b15a:	mov    esp,0xb8558b0a
  40b15f:	pusha  
  40b160:	mov    DWORD PTR [edx],0x75ff1817
  40b166:	nop
  40b167:	out    0x73,eax
  40b169:	mov    eax,0xffbc4df7
  40b16e:	fst    QWORD PTR [esi]
  40b170:	push   0xbcb78803
  40b175:	call   0x3e8e76
  40b17a:	push   edi
  40b17b:	dec    esi
  40b17c:	mov    esp,0x42e8
  40b181:	add    BYTE PTR [edi],dl
  40b183:	dec    esi
  40b184:	enter  0xf4e8,0x50
  40b188:	(bad)  
  40b189:	push   DWORD PTR [edi]
  40b18b:	dec    esi
  40b18c:	shr    al,1
  40b18e:	in     al,dx
  40b18f:	push   eax
  40b190:	(bad)  
  40b191:	push   DWORD PTR [esi+0x580cc0c9]
  40b197:	in     eax,dx
  40b198:	mov    ch,ah
  40b19a:	fstp   TBYTE PTR [esi-0x3a]
  40b19d:	lea    eax,[eax]
  40b19f:	add    BYTE PTR ds:0x26684ee4,cl
  40b1a5:	push   esi
  40b1a6:	inc    ecx
  40b1a7:	add    BYTE PTR [ecx],dh
  40b1a9:	push   ecx
  40b1aa:	or     DWORD PTR [edx+0x31],ebp
  40b1ad:	push   ebx
  40b1ae:	repnz inc ecx
  40b1b0:	jo     0x40b15d
  40b1b2:	fidivr DWORD PTR [ebp-0x7afd5497]
  40b1b8:	icebp  
  40b1b9:	mov    dh,0x7a
  40b1bb:	mov    edi,0x8b02ab31
  40b1c0:	fs ja  0x40b241
  40b1c3:	adc    DWORD PTR [eax+edi*8+0x20ee4fcb],esp
  40b1ca:	sar    dh,1
  40b1cc:	sub    DWORD PTR [edi+0x432ebf87],0x72
  40b1d3:	call   esi
  40b1d5:	stos   DWORD PTR es:[edi],eax
  40b1d6:	test   DWORD PTR [ecx+ecx*8-0x55],edi
  40b1da:	add    DWORD PTR [ebp+ebx*4-0x9fffd55],eax
  40b1e1:	jo     0x40b199
  40b1e3:	push   DWORD PTR [esi-0xb38fd55]
  40b1e9:	add    al,BYTE PTR [eax+eax*1]
  40b1ec:	xor    DWORD PTR [ebx+0x238144c9],ebp
  40b1f2:	add    al,0x0
  40b1f4:	xor    esi,esi
  40b1f6:	dec    eax
  40b1f7:	int3   
  40b1f8:	xor    DWORD PTR [ebx-0x5745fffe],ebp
  40b1fe:	retf   0x238a
  40b201:	dec    eax
  40b202:	dec    ecx
  40b203:	int3   
  40b204:	add    BYTE PTR [eax],al
  40b206:	loope  0x40b237
  40b208:	dec    ecx
  40b209:	rol    BYTE PTR [ecx],1
  40b20b:	xchg   ecx,eax
  40b20c:	add    edi,edi
  40b20e:	fsub   QWORD PTR [edx]
  40b210:	rcl    DWORD PTR [ecx+0x2d],cl
  40b213:	ret    0x74c2
  40b216:	std    
  40b217:	sub    DWORD PTR [ecx-0x34],edx
  40b21a:	xor    BYTE PTR [eax+0x41],al
  40b21d:	add    esp,0x26
  40b220:	add    al,0x74
  40b222:	not    DWORD PTR [ebx]
  40b224:	push   ecx
  40b225:	inc    edx
  40b226:	repz push edx
  40b228:	jmp    0xc12957ff
  40b22d:	enter  0x146e,0xe9
  40b231:	(bad)  
  40b232:	fiadd  WORD PTR [edi-0xd]
  40b235:	imul   ebp,esi,0xb803e913
  40b23b:	push   esi
  40b23c:	mov    eax,ds:0x23d52fde
  40b241:	mov    esp,0x3e8bcfe
  40b246:	test   BYTE PTR [esi-0x4f],0xd2
  40b24a:	gs call 0xac7a0ae5
  40b250:	xchg   al,dl
  40b252:	fistp  QWORD PTR [ebp+eax*4-0x295402a8]
  40b259:	cmp    esi,DWORD PTR [ecx]
  40b25b:	adc    al,0x6a
  40b25d:	push   eax
  40b25e:	jmp    0xc03ca776
  40b263:	inc    esi
  40b264:	inc    ecx
  40b265:	fld    TBYTE PTR [esi]
  40b267:	dec    esp
  40b268:	jmp    0x9a40b270
  40b26d:	(bad)  
  40b26e:	popa   
  40b26f:	cmp    BYTE PTR [ecx+0x25d2fa88],ch
  40b275:	mov    esp,0x89293545
  40b27a:	xchg   ebx,eax
  40b27b:	iret   
  40b27c:	mov    ebx,0x85583621
  40b281:	mov    esp,0xd169fb9a
  40b286:	in     al,dx
  40b287:	add    ebx,esp
  40b289:	mov    BYTE PTR [esi+eax*4],cl
  40b28c:	jb     0x40b241
  40b28e:	mov    esi,0xaaa22586
  40b293:	inc    esp
  40b294:	xor    DWORD PTR [esp+edi*2],edx
  40b297:	icebp  
  40b298:	outs   dx,DWORD PTR ds:[esi]
  40b299:	push   ss
  40b29a:	pop    ebx
  40b29b:	inc    ebp
  40b29c:	lock adc eax,DWORD PTR [eax]
  40b29f:	call   0x2f40c6d6
  40b2a4:	mov    eax,0x55e94152
  40b2a9:	adc    eax,0x165ba866
  40b2ae:	sub    DWORD PTR [edi+0xf83322f],0x35
  40b2b5:	inc    ecx
  40b2b6:	repz push 0x26
  40b2b9:	retf   0x282d
  40b2bc:	xor    eax,0xf46d0f14
  40b2c1:	mov    ebx,0xf8b5e9fe
  40b2c6:	leave  
  40b2c7:	xlat   BYTE PTR ds:[ebx]
  40b2c8:	jae    0x40b2de
  40b2ca:	add    dh,ch
  40b2cc:	mov    dh,0xa9
  40b2ce:	(bad)  
  40b2cf:	call   0x9772b2d4
  40b2d4:	cmp    al,0xcf
  40b2d6:	cmp    edx,DWORD PTR [ebp+0x0]
  40b2d9:	jmp    0xea21430f
  40b2de:	xor    dl,BYTE PTR [edi+eax*8]
  40b2e1:	sub    al,0xe1
  40b2e3:	mov    ebx,0xd332e9fe
  40b2e8:	inc    esp
  40b2e9:	popa   
  40b2ea:	sub    eax,0x2fe90014
  40b2ef:	push   eax
  40b2f0:	cld    
  40b2f1:	mov    ecx,0xb9f85027
  40b2f6:	cld    
  40b2f7:	adc    ebp,DWORD PTR [eax+0x49]
  40b2fa:	out    dx,eax
  40b2fb:	push   esp
  40b2fc:	add    BYTE PTR [esi],bh
  40b2fe:	xchg   ch,cl
  40b300:	sub    eax,0xc00f32a8
  40b305:	fidiv  WORD PTR [esi+0x32e8ff81]
  40b30b:	xchg   edi,eax
  40b30c:	jl     0x40b32f
  40b30e:	xor    eax,0x2d45840b
  40b313:	adc    al,0x0
  40b315:	push   0xffffffee
  40b317:	mov    bh,0xff
  40b319:	call   FWORD PTR [edi-0x6d]
  40b31c:	mov    al,ds:0x8b175800
  40b321:	jne    0x40b35f
  40b323:	fiadd  WORD PTR [eax+0x56174800]
  40b329:	mov    edx,DWORD PTR [esi]
  40b32b:	in     eax,0x74
  40b32d:	sbb    BYTE PTR [edi-0x79000fae],bl
  40b333:	les    ecx,FWORD PTR [ebp+0x4000045]
  40b339:	pop    edi
  40b33a:	xchg   esi,eax
  40b33b:	inc    edx
  40b33c:	dec    ecx
  40b33d:	adc    al,ch
  40b33f:	xlat   BYTE PTR ds:[ebx]
  40b340:	push   esi
  40b341:	adc    BYTE PTR [eax],al
  40b343:	sar    eax,1
  40b345:	(bad)  
  40b346:	mov    esi,0xe0529102
  40b34b:	push   0x415176
  40b350:	pop    edi
  40b351:	push   edx
  40b352:	in     al,0xc7
  40b354:	adc    eax,0xc8fffeb4
  40b359:	push   ss
  40b35a:	lea    eax,[ebp-0x40]
  40b35d:	push   es
  40b35e:	push   0x1
  40b360:	and    dl,BYTE PTR [eax]
  40b362:	push   0x0
  40b364:	dec    ebp
  40b365:	push   edx
  40b366:	loopne 0x40b3b8
  40b368:	xor    dl,BYTE PTR [eax]
  40b36a:	lea    eax,[ebp+0x58]
  40b36d:	pop    es
  40b36e:	call   DWORD PTR ds:0x411f4e
  40b374:	xchg   ebx,eax
  40b375:	(bad)  
  40b376:	jb     0x40b3a5
  40b378:	or     ecx,DWORD PTR [edx-0x14]
  40b37b:	add    ah,dl
  40b37d:	jmp    0x40b336
  40b37f:	add    DWORD PTR [eax+0x580b0016],ebx
  40b385:	arpl   WORD PTR [esi],dx
  40b387:	inc    ebp
  40b389:	mov    esi,0xe42075fd
  40b38e:	jae    0x40b37c
  40b390:	dec    edi
  40b391:	pop    ebp
  40b392:	or     BYTE PTR [eax+0x31],ch
  40b395:	test   eax,0x149fef02
  40b39a:	sti    
  40b39b:	clc    
  40b39c:	add    BYTE PTR [eax],al
  40b39e:	push   esi
  40b39f:	adc    eax,edx
  40b3a1:	je     0x40b400
  40b3a3:	and    al,0x96
  40b3a5:	inc    esp
  40b3a6:	xor    DWORD PTR [ebp-0x3b1300d0],ebp
  40b3ac:	add    ch,0x2d
  40b3af:	cs push ecx
  40b3b1:	clc    
  40b3b2:	xor    DWORD PTR [edi-0x3],ebx
  40b3b5:	and    BYTE PTR [edi-0x55],0xfd
  40b3b9:	test   BYTE PTR [esi+0x16fececa],cl
  40b3bf:	stc    
  40b3c0:	iret   
  40b3c1:	(bad)  
  40b3c2:	and    al,0x69
  40b3c4:	sbb    eax,0xbd213141
  40b3c9:	shl    DWORD PTR ds:0x58b37ab,0x2f
  40b3d0:	enter  0x5bf7,0xab
  40b3d4:	pop    eax
  40b3d5:	das    
  40b3d6:	out    0x18,al
  40b3d8:	cld    
  40b3d9:	out    0x90,eax
  40b3db:	sbb    al,0xcf
  40b3dd:	(bad)  
  40b3de:	test   al,0xe8
  40b3e0:	iret   
  40b3e1:	jg     0x40b3ef
  40b3e3:	loopne 0x40b425
  40b3e5:	inc    ecx
  40b3e6:	xor    DWORD PTR [ebx-0x1ab6d6a9],ebp
  40b3ec:	inc    eax
  40b3ed:	inc    ecx
  40b3ee:	xor    ebx,esp
  40b3f0:	mov    cl,0x40
  40b3f2:	lock stos BYTE PTR es:[edi],al
  40b3f4:	(bad)  
  40b3f6:	daa    
  40b3f7:	(bad)  
  40b3f8:	iret   
  40b3f9:	test   BYTE PTR [ecx-0x21],dh
  40b3fc:	sub    ebp,DWORD PTR [eax+0x3f]
  40b3ff:	ins    DWORD PTR es:[edi],dx
  40b400:	inc    ebx
  40b401:	add    BYTE PTR [eax],al
  40b403:	add    BYTE PTR [ecx],bl
  40b405:	add    BYTE PTR [ebp+0x41],al
  40b408:	xor    DWORD PTR [ebx-0x4e],edx
  40b40b:	jge    0x40b48b
  40b40d:	jmp    0x44ab:0x141c04c5
  40b414:	xor    DWORD PTR [ebx],edx
  40b416:	push   0x11
  40b418:	dec    ebx
  40b419:	push   esi
  40b41a:	test   al,0x3
  40b41c:	xor    DWORD PTR [eax-0x2d],eax
  40b41f:	(bad)  
  40b420:	in     eax,dx
  40b421:	mov    ebx,0x143103e8
  40b426:	rol    bl,cl
  40b428:	mul    BYTE PTR [ebx-0x67]
  40b42b:	and    ch,0xbb
  40b42e:	call   0x3145:0x2b1e1dce
  40b435:	(bad)
  40b439:	lods   eax,DWORD PTR ds:[esi]
  40b43a:	test   BYTE PTR [edx+0x58e8bc9d],0x33
  40b441:	lods   eax,DWORD PTR ds:[esi]
  40b442:	fmulp  st(6),st
  40b444:	test   DWORD PTR [ebp+edi*4+0x3aac3958],edi
  40b44b:	retf   
  40b44c:	(bad)  
  40b44d:	mov    eax,0x8cf93861
  40b452:	cli    
  40b453:	into   
  40b454:	gs mov esp,0xb939319d
  40b45a:	sbb    edi,esp
  40b45c:	(bad)  
  40b45d:	dec    ebp
  40b45e:	mov    esi,cs
  40b460:	xlat   BYTE PTR ds:[ebx]
  40b461:	mov    eax,0xecd6fbfb
  40b466:	jle    0x40b436
  40b468:	add    BYTE PTR [eax],al
  40b46a:	(bad)  
  40b46b:	mov    eax,0x3ebfcffb
  40b470:	loope  0x40b44d
  40b472:	bound  eax,QWORD PTR [ebx+0x66]
  40b475:	into   
  40b476:	jns    0x40b44d
  40b478:	in     al,0x3
  40b47a:	cld    
  40b47b:	mov    WORD PTR [edx+eax*4+0x72],es
  40b47f:	ret    
  40b480:	mov    dh,0x36
  40b482:	add    cl,BYTE PTR [ebp+0x1577ff9b]
  40b488:	jmp    0x54e590
  40b48d:	(bad)  ss:[ebx]
  40b490:	call   0x54a302
  40b495:	push   0x7a
  40b497:	adc    esi,DWORD PTR [edi-0x10]
  40b49a:	dec    ebx
  40b49b:	aam    0x5a
  40b49d:	mov    dh,0xc
  40b49f:	retf   
  40b4a0:	shl    ecx,0x32
  40b4a3:	jecxz  0x40b48c
  40b4a5:	jb     0x40b4b0
  40b4a7:	or     BYTE PTR [ecx+0xee0cbeb],cl
  40b4ad:	imul   ecx,DWORD PTR [eax-0x44160148],0x3f
  40b4b4:	or     BYTE PTR [edx+0x7e],dh
  40b4b7:	or     al,0xeb
  40b4b9:	inc    ebx
  40b4ba:	(bad)  
  40b4bb:	mov    eax,DWORD PTR ds:0x71e80169
  40b4c1:	jecxz  0x40b475
  40b4c3:	mov    ebx,0x94363e38
  40b4c8:	jmp    0x40b4c3
  40b4ca:	jmp    0xf634e9
  40b4cf:	add    BYTE PTR [edx+0x42],dh
  40b4d2:	or     eax,0x7751e169
  40b4d7:	icebp  
  40b4d8:	mov    dl,0xab
  40b4da:	inc    eax
  40b4db:	imul   edi,ecx,0x39e0eb0d
  40b4e1:	aam    0x5a
  40b4e3:	cs pop es
  40b4e5:	int    0xc1
  40b4e7:	icebp  
  40b4e8:	xor    bh,al
  40b4ea:	das    
  40b4eb:	sti    
  40b4ec:	retf   0x38fb
  40b4ef:	(bad)  
  40b4f0:	ss call 0xfbfd3725
  40b4f6:	inc    eax
  40b4f7:	fld    TBYTE PTR [eax+0x2cd645fb]
  40b4fd:	call   0xaad9a242
  40b502:	or     BYTE PTR [edx],al
  40b504:	ins    DWORD PTR es:[edi],dx
  40b505:	pop    edx
  40b506:	pop    edi
  40b507:	add    dh,dl
  40b509:	jp     0x40b4cb
  40b50b:	or     BYTE PTR [eax-0x6dfb212d],bl
  40b511:	iret   
  40b512:	test   al,0x4b
  40b514:	or     ecx,esi
  40b516:	add    BYTE PTR [ebx],cl
  40b518:	repz pop esi
  40b51a:	mov    ds:0xfdb78d8b,al
  40b51f:	xor    bh,dl
  40b521:	dec    esi
  40b522:	clc    
  40b523:	(bad)  
  40b524:	mov    ebp,0x34458dbb
  40b529:	rol    DWORD PTR [ebx-0xc],1
  40b52c:	pop    eax
  40b52d:	adc    eax,DWORD PTR [eax]
  40b52f:	add    bl,cl
  40b531:	push   es
  40b532:	sub    DWORD PTR ds:[eax],eax
  40b535:	add    BYTE PTR [ecx+0x6e740013],cl
  40b53b:	aaa    
  40b53c:	inc    esp
  40b53d:	lock push 0x86a015a
  40b543:	pop    ebp
  40b544:	add    BYTE PTR [edx+0x8],ch
  40b547:	pop    ebp
  40b548:	add    BYTE PTR [ebp-0xb137a3],cl
  40b54e:	fisttp QWORD PTR [eax]
  40b550:	sub    DWORD PTR [ecx+0x8],eax
  40b553:	mov    esp,0x940274be
  40b558:	jnp    0x40b54e
  40b55a:	fcomp  DWORD PTR [esi+0x34]
  40b55d:	mov    ecx,DWORD PTR ds:0xb84d8b14
  40b563:	or     ecx,DWORD PTR [eax]
  40b565:	ja     0x40b559
  40b567:	(bad)  
  40b568:	mov    DWORD PTR [ebp+0x4c],esi
  40b56b:	cmp    al,0x7c
  40b56d:	or     BYTE PTR [ebx-0xa],al
  40b570:	out    dx,eax
  40b571:	jecxz  0x40b53d
  40b573:	jecxz  0x40b517
  40b575:	mov    ecx,DWORD PTR ds:0x875ff14
  40b57b:	cmp    bh,bh
  40b57d:	(bad)  
  40b57e:	jge    0x40b55e
  40b580:	out    0xe3,al
  40b582:	xor    DWORD PTR [edx+0x2],ebp
  40b585:	add    cl,bl
  40b587:	stos   DWORD PTR es:[edi],eax
  40b588:	add    al,BYTE PTR [eax]
  40b58a:	xor    DWORD PTR [edx+0x2b],esi
  40b58d:	pop    esi
  40b58e:	js     0x40b57a
  40b590:	cli    
  40b591:	dec    DWORD PTR [ebx-0x13]
  40b594:	daa    
  40b595:	pop    edi
  40b596:	xlat   BYTE PTR ds:[ebx]
  40b597:	repz rol BYTE PTR [edi],0x0
  40b59b:	add    BYTE PTR [ecx],dh
  40b59d:	js     0x40b616
  40b59f:	jmp    0x40b553
  40b5a1:	lock ret 0x3167
  40b5a5:	int    0x2
  40b5a7:	add    BYTE PTR [ecx+0x45],cl
  40b5aa:	push   ecx
  40b5ab:	dec    DWORD PTR [esi+0x43]
  40b5ae:	inc    esi
  40b5af:	cld    
  40b5b0:	fldcw  WORD PTR [edx+eiz*1-0x6eeacf00]
  40b5b7:	jno    0x40b5ef
  40b5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ba:	js     0x40b600
  40b5bc:	sub    DWORD PTR [esp+eax*1+0x20],esp
  40b5c0:	xor    DWORD PTR [ebx-0x215c5b26],ebp
  40b5c6:	retf   0x6c88
  40b5c9:	fistp  WORD PTR [ebx+0x0]
  40b5cc:	push   ecx
  40b5cd:	stos   DWORD PTR es:[edi],eax
  40b5ce:	add    ch,al
  40b5d0:	test   eax,0xa8fecaf9
  40b5d5:	call   0xb721dad
  40b5da:	add    al,0x0
  40b5dc:	fld    DWORD PTR [edx+0x56]
  40b5df:	jmp    esi
  40b5e1:	inc    esp
  40b5e2:	inc    ecx
  40b5e3:	in     al,dx
  40b5e4:	dec    ecx
  40b5e5:	stos   DWORD PTR es:[edi],eax
  40b5e6:	and    al,BYTE PTR [eax]
  40b5e8:	xor    DWORD PTR [ebx-0x71318db7],edx
  40b5ee:	jl     0x40b634
  40b5f0:	fldenv [ebx]
  40b5f2:	add    al,0x20
  40b5f4:	xor    DWORD PTR [ebx+0x264370da],ebp
  40b5fa:	retf   
  40b5fb:	mov    ah,dh
  40b5fd:	adc    ecx,DWORD PTR [ebp-0x35]
  40b600:	add    BYTE PTR [eax],al
  40b602:	sbb    eax,0xf3e8d124
  40b607:	push   edx
  40b608:	jmp    0x40f8d3d7
  40b60d:	jnp    0x40b601
  40b60f:	adc    ebp,ecx
  40b611:	xchg   BYTE PTR [edx+0x8],dh
  40b614:	ds push ecx
  40b616:	and    DWORD PTR [ecx+edi*8],ebp
  40b619:	inc    esi
  40b61a:	lock adc ebp,DWORD PTR [esi]
  40b61d:	push   ecx
  40b61e:	imul   ebp,DWORD PTR [esp+eiz*4+0x6a14313f],0x9bb52ac0
  40b629:	repz into 
  40b62b:	dec    esi
  40b62c:	stos   BYTE PTR es:[edi],al
  40b62d:	inc    esp
  40b62e:	xor    DWORD PTR [ebp+0x2b4ecf7b],esi
  40b634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b635:	add    esi,DWORD PTR [ecx]
  40b637:	xchg   ecx,eax
  40b638:	sub    al,0xf8
  40b63a:	aaa    
  40b63b:	aas    
  40b63c:	fstp   DWORD PTR [ebx-0x6b]
  40b63f:	push   ecx
  40b640:	sub    BYTE PTR [esi+eiz*1],al
  40b643:	aas    
  40b644:	(bad)  
  40b646:	test   BYTE PTR [eax-0x17],dl
  40b649:	add    esi,DWORD PTR [edx-0x7a352331]
  40b64f:	and    al,0x51
  40b651:	push   ebx
  40b652:	jb     0x40b6a7
  40b654:	jmp    0xc0e93c23
  40b659:	inc    esi
  40b65a:	ins    DWORD PTR es:[edi],dx
  40b65b:	adc    al,0xe9
  40b65d:	xchg   dl,dh
  40b65f:	pop    es
  40b660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b661:	push   eax
  40b662:	xor    eax,0x466c2c
  40b667:	add    BYTE PTR [eax+0x14],dh
  40b66a:	xchg   esi,eax
  40b66b:	push   eax
  40b66c:	leave  
  40b66d:	stos   DWORD PTR es:[edi],eax
  40b66e:	fdivr  DWORD PTR [edi]
  40b670:	xor    DWORD PTR [edx+ebp*2],edx
  40b673:	mov    edi,0xf3f3b53a
  40b678:	push   esi
  40b679:	fwait
  40b67a:	jmp    FWORD PTR [ecx]
  40b67c:	ins    BYTE PTR es:[edi],dx
  40b67d:	adc    al,0xff
  40b67f:	hlt    
  40b680:	mov    gs,WORD PTR [esp+ebx*1-0x7cebcd53]
  40b687:	and    eax,0x56002aa6
  40b68c:	add    DWORD PTR [eax-0x4a792b02],edi
  40b692:	xor    al,0xa5
  40b694:	and    eax,0xc3510053
  40b699:	inc    eax
  40b69a:	push   DWORD PTR [esi]
  40b69c:	cmc    
  40b69d:	dec    edi
  40b69e:	loopne 0x40b663
  40b6a0:	xor    dh,BYTE PTR [ebp+0x3f7b2174]
  40b6a6:	or     al,0x1e
  40b6a8:	inc    ecx
  40b6a9:	pop    eax
  40b6aa:	sub    DWORD PTR [eax-0x6a3f53ce],ebp
  40b6b0:	jnp    0x40b667
  40b6b2:	mov    BYTE PTR [esi+ecx*4-0x1101ffd6],ch
  40b6b9:	mov    edi,0xb53e7cfe
  40b6be:	xor    al,0x8d
  40b6c0:	dec    ebp
  40b6c1:	push   ebp
  40b6c2:	add    cl,dl
  40b6c4:	les    esp,FWORD PTR [edi]
  40b6c6:	(bad)  
  40b6c7:	ficomp WORD PTR [edx+0x43d858]
  40b6cd:	add    BYTE PTR ds:0xf8d974b3,ch
  40b6d3:	sub    al,ch
  40b6d5:	(bad)  
  40b6d6:	ss push eax
  40b6d8:	sub    DWORD PTR [eax],ebp
  40b6da:	xor    eax,0xe83d94bc
  40b6df:	mov    dl,0x88
  40b6e1:	and    al,0xa1
  40b6e3:	cmp    eax,0xc076a600
  40b6e8:	(bad)  
  40b6e9:	adc    al,0xfd
  40b6eb:	mov    dl,0x34
  40b6ed:	xor    eax,0x8100553a
  40b6f2:	js     0x40b71c
  40b6f4:	inc    DWORD PTR [eax]
  40b6f6:	scas   eax,DWORD PTR es:[edi]
  40b6f7:	das    
  40b6f8:	inc    esp
  40b6f9:	ror    BYTE PTR [ebp-0xd],1
  40b6fc:	mov    edi,0xe4633f50
  40b701:	jmp    DWORD PTR [ebp+0x6c35fdab]
  40b707:	push   cs
  40b708:	inc    ecx
  40b709:	add    BYTE PTR [eax],al
  40b70b:	xor    eax,0x2effff74
  40b710:	inc    esp
  40b711:	int3   
  40b712:	sbb    ebx,DWORD PTR [ebx-0x20]
  40b715:	add    BYTE PTR [edi+0x33],bh
  40b718:	mov    dh,0x0
  40b71a:	mov    BYTE PTR [edi],dl
  40b71c:	cmp    DWORD PTR [ebp+0x14],0x18
  40b720:	je     0x40cf13
  40b726:	fistp  DWORD PTR [edx-0x30]
  40b729:	add    BYTE PTR [edi+0x33],cl
  40b72c:	mov    ds:0x8d174800,al
  40b731:	inc    ebp
  40b732:	add    BYTE PTR [eax],al
  40b734:	adc    al,0xe8
  40b736:	(bad)  
  40b737:	jne    0x40b75d
  40b739:	ror    BYTE PTR [esi-0x3],1
  40b73c:	aas    
  40b73d:	fmul   QWORD PTR [ecx]
  40b73f:	ror    BYTE PTR [edi+0x33],0x8e
  40b743:	add    BYTE PTR [eax],bl
  40b745:	pop    ss
  40b746:	cmp    DWORD PTR [ebp-0x2c],0x16
  40b74a:	je     0x40cee5
  40b750:	(bad)  
  40b751:	repnz (bad) 
  40b753:	push   eax
  40b754:	jmp    DWORD PTR [ecx-0x30]
  40b757:	call   0x3e9166
  40b75c:	add    edx,edi
  40b75e:	jb     0x40b7d5
  40b760:	mov    ebx,DWORD PTR [edx-0x38]
  40b763:	add    BYTE PTR [ecx*2-0x3427ef98],ah
  40b76a:	mov    esp,0xe6b045ff
  40b76f:	jbe    0x40b7a2
  40b771:	sbb    cl,cl
  40b773:	dec    dh
  40b775:	pop    es
  40b776:	in     al,0xfe
  40b778:	cmp    al,0xa5
  40b77a:	fcmove st,st(4)
  40b77c:	dec    esp
  40b77d:	xor    cl,al
  40b77f:	(bad)  
  40b780:	cmp    al,0x89
  40b782:	(bad)  
  40b783:	je     0x40b7be
  40b785:	xchg   ebp,eax
  40b786:	les    ebp,FWORD PTR [esi+eiz*4+0x39]
  40b78a:	enter  0x7974,0x51
  40b78e:	dec    esi
  40b78f:	or     BYTE PTR [ecx-0x7100aa6f],cl
  40b795:	popa   
  40b796:	dec    esi
  40b797:	les    eax,FWORD PTR [eax]
  40b799:	add    BYTE PTR [esi+0x4feae6f],al
  40b79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a0:	fidivr DWORD PTR [esp+eax*1-0x16]
  40b7a4:	(bad)  
  40b7a5:	(bad)  
  40b7a6:	in     al,0xf4
  40b7a8:	(bad)  
  40b7a9:	je     0x40b72c
  40b7ab:	stc    
  40b7ac:	dec    ebp
  40b7ad:	or     BYTE PTR [ecx-0x5f],cl
  40b7b0:	push   ebp
  40b7b1:	call   DWORD PTR [esi+0x3d]
  40b7b4:	inc    esi
  40b7b5:	int3   
  40b7b6:	xor    DWORD PTR [ecx-0x33b7d13],ecx
  40b7bc:	(bad)  
  40b7bd:	je     0x40b7ed
  40b7bf:	es ds int3 
  40b7c2:	ss ins BYTE PTR es:[edi],dx
  40b7c4:	(bad)  
  40b7c5:	je     0x40b800
  40b7c7:	adc    esp,DWORD PTR [ebx]
  40b7c9:	ins    DWORD PTR es:[edi],dx
  40b7ca:	es mov ebx,0xbb8b09da
  40b7d0:	lds    esi,FWORD PTR [ecx+ebp*1-0x2d]
  40b7d4:	out    dx,eax
  40b7d5:	ins    BYTE PTR es:[edi],dx
  40b7d6:	push   cs
  40b7d7:	jecxz  0x40b79f
  40b7d9:	je     0x40b7e0
  40b7db:	les    eax,FWORD PTR [edx-0x398d0191]
  40b7e1:	je     0x40b7dc
  40b7e3:	ror    DWORD PTR [edx+0x70],cl
  40b7e6:	out    dx,al
  40b7e7:	add    dh,0x74
  40b7ea:	fst    QWORD PTR [ecx+edx*4]
  40b7ed:	push   ebx
  40b7ee:	popa   
  40b7ef:	mov    cl,0x9d
  40b7f1:	(bad)  
  40b7f2:	pop    ebp
  40b7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f4:	sbb    BYTE PTR [ebx+0x41],0xb1
  40b7f8:	(bad)  
  40b7f9:	(bad)  
  40b7fa:	cmp    eax,0x6390c0
  40b7ff:	add    BYTE PTR [ecx-0x4f],al
  40b802:	jge    0x40b7cb
  40b804:	cmp    eax,0x212b80bc
  40b809:	mov    cl,0x6d
  40b80b:	(bad)  
  40b80c:	sbb    eax,0x213350b8
  40b811:	mov    cl,0x5d
  40b813:	(bad)  
  40b814:	sbb    eax,0x13b40b4
  40b819:	mov    cl,0x4d
  40b81b:	(bad)  
  40b81c:	std    
  40b81d:	iret   
  40b81e:	push   eax
  40b81f:	inc    ebx
  40b820:	add    DWORD PTR [ecx-0x340238c3],esi
  40b826:	inc    eax
  40b827:	or     esp,ecx
  40b829:	mov    al,0x2d
  40b82b:	(bad)  
  40b82c:	ffree  st(7)
  40b82e:	adc    BYTE PTR [ebx],dl
  40b830:	loope  0x40b7e2
  40b832:	sbb    eax,0xc3ddc7
  40b837:	sbb    eax,ecx
  40b839:	mov    al,0xd
  40b83b:	(bad)  
  40b83c:	mov    ebp,0xc12310df
  40b841:	mov    al,0xfd
  40b843:	mov    esp,0x30e92070
  40b848:	mov    edx,0xec067bf
  40b84d:	test   eax,0x56adc6e5
  40b852:	fnsave [ebx]
  40b854:	push   ss
  40b855:	daa    
  40b856:	in     eax,0xc6
  40b858:	inc    ebp
  40b859:	push   eax
  40b85a:	add    BYTE PTR [ebp+0x31],al
  40b85d:	mov    esp,0x1431424c
  40b862:	bnd ret 
  40b864:	add    BYTE PTR [eax],al
  40b866:	daa    
  40b867:	xchg   edi,eax
  40b868:	(bad)  
  40b869:	fdiv   QWORD PTR ds:0x71a60014
  40b86f:	lods   al,BYTE PTR ds:[esi]
  40b870:	(bad)  
  40b871:	call   0x2507cca8
  40b876:	add    DWORD PTR [edx+0x3e32e906],esi
  40b87c:	add    BYTE PTR [ebx],al
  40b87e:	sub    eax,0x3513003e
  40b883:	lahf   
  40b884:	inc    esp
  40b885:	jne    0x40b889
  40b887:	lahf   
  40b888:	test   BYTE PTR [ecx+0x7f],bh
  40b88b:	mov    cl,0xfe
  40b88d:	sbb    DWORD PTR [esi+0x27],ebp
  40b890:	clc    
  40b891:	add    WORD PTR [eax+0x13f317e7],si
  40b898:	add    dl,ah
  40b89a:	jb     0x40b8c0
  40b89c:	add    eax,0xfeb0d740
  40b8a1:	jmp    0xa8689780
  40b8a6:	xor    dh,BYTE PTR [ecx+0x4b8ae574]
  40b8ac:	jae    0x40b8dc
  40b8ae:	outs   dx,DWORD PTR ds:[esi]
  40b8af:	pusha  
  40b8b0:	mov    edi,DWORD PTR [ecx]
  40b8b2:	fst    DWORD PTR [edi-0x4e90e911]
  40b8b8:	dec    edi
  40b8b9:	mov    ebx,0xe735b6a
  40b8be:	outs   dx,DWORD PTR ds:[esi]
  40b8bf:	fwait
  40b8c0:	test   BYTE PTR [ecx],dl
  40b8c2:	outs   dx,DWORD PTR ds:[esi]
  40b8c3:	mov    cl,0xfe
  40b8c5:	adc    edi,ecx
  40b8c7:	inc    ecx
  40b8c8:	push   esi
  40b8ca:	add    BYTE PTR [eax],al
  40b8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8cd:	pop    eax
  40b8ce:	lock cdq 
  40b8d0:	mov    al,BYTE PTR ds:0xaf352843
  40b8d6:	mov    ah,0xd1
  40b8d8:	in     al,0xae
  40b8da:	(bad)  
  40b8db:	(bad)  
  40b8dc:	ds push eax
  40b8de:	sub    DWORD PTR [eax],ebp
  40b8e0:	sub    eax,0x3a009cbc
  40b8e5:	fscale 
  40b8e7:	mov    DWORD PTR [ebp-0x58000a34],ecx
  40b8ed:	xchg   ebp,eax
  40b8ee:	mov    ebx,0xfdd99fec
  40b8f3:	add    BYTE PTR [edx+edi*8],bh
  40b8f6:	cmp    BYTE PTR [ebp-0x48],0x14
  40b8fa:	jne    0x40b945
  40b8fc:	push   ebx
  40b8fd:	das    
  40b8fe:	jmp    0x40b8f7
  40b900:	mov    bh,0xd9
  40b902:	std    
  40b903:	xor    BYTE PTR [edi+0x2f],al
  40b906:	jmp    0x40b8ff
  40b908:	aaa    
  40b909:	fnstcw WORD PTR [edi-0x43]
  40b90c:	mov    ah,0xe1
  40b90e:	std    
  40b90f:	push   DWORD PTR [eax+0x7e000015]
  40b915:	lods   eax,DWORD PTR ds:[esi]
  40b916:	lds    eax,FWORD PTR [ebp-0x21f1c]
  40b91c:	lock adc al,0x0
  40b91f:	add    bl,dh
  40b921:	mov    ecx,0xe0e48dfd
  40b926:	std    
  40b927:	push   DWORD PTR [edi]
  40b929:	lahf   
  40b92a:	jmp    0xb5:0xfdd927f7
  40b931:	add    al,dh
  40b933:	loopne 0x40b932
  40b935:	call   DWORD PTR [edi]
  40b937:	pop    edi
  40b938:	or     al,ch
  40b93a:	nop
  40b93b:	xlat   BYTE PTR ds:[ebx]
  40b93c:	std    
  40b93d:	(bad)  
  40b93e:	fist   DWORD PTR [esi-0x26c80816]
  40b944:	(bad)  
  40b945:	je     0x40b95c
  40b947:	fnstenv [ebx-0x227c014]
  40b94d:	call   0x400156
  40b952:	pop    ss
  40b953:	sahf   
  40b954:	jmp    0x6711:0xe6d817f7
  40b95b:	fscale 
  40b95d:	push   DWORD PTR [ecx]
  40b95f:	nop
  40b960:	(bad)  
  40b962:	push   es
  40b963:	faddp  st(3),st
  40b965:	je     0x40b990
  40b967:	(bad)
  40b96a:	imul   BYTE PTR [ebp-0x3d]
  40b96d:	mov    ah,0xd9
  40b96f:	ins    DWORD PTR es:[edi],dx
  40b970:	ret    
  40b971:	(bad)  
  40b972:	fldenv [esp+edx*2-0x1]
  40b976:	fidiv  WORD PTR [ebp+0x3d]
  40b979:	clc    
  40b97a:	enter  0xc471,0xfe
  40b97e:	into   
  40b97f:	test   DWORD PTR [ebp-0x4],ecx
  40b982:	fsqrt  
  40b984:	inc    edx
  40b985:	add    BYTE PTR [ecx],dh
  40b987:	rol    BYTE PTR fs:[edi],0x31
  40b98b:	or     BYTE PTR [ecx-0x15],bh
  40b98e:	mov    dl,0x80
  40b990:	(bad)  
  40b991:	imul   esi,DWORD PTR [ecx],0xff1413
  40b997:	add    BYTE PTR [eiz*4+0x4e0509da],ah
  40b99e:	les    ecx,FWORD PTR [eax-0x4a4b70c]
  40b9a4:	repz jnp 0x40b9a9
  40b9a7:	inc    DWORD PTR [eiz*4-0x12885d26]
  40b9ae:	ret    
  40b9af:	(bad)  
  40b9b0:	in     al,0xe8
  40b9b2:	ret    
  40b9b3:	je     0x40b9ee
  40b9b5:	push   ebp
  40b9b6:	push   cs
  40b9b7:	ins    BYTE PTR es:[edi],dx
  40b9b8:	pop    esi
  40b9b9:	cmc    
  40b9ba:	mov    ecx,0x2dbd2dc1
  40b9bf:	mov    ebx,DWORD PTR [ebp+0x39]
  40b9c2:	mov    edi,0x5865dffb
  40b9c7:	add    bl,cl
  40b9c9:	imul   eax,ebx,0x74
  40b9cc:	sub    DWORD PTR ds:0xa72e6aac,eax
  40b9d2:	js     0x40ba18
  40b9d4:	and    eax,0x49750e33
  40b9d9:	adc    al,0x28
  40b9db:	add    al,0xaa
  40b9dd:	out    dx,eax
  40b9de:	pop    edi
  40b9df:	in     al,dx
  40b9e0:	jno    0x40b9f6
  40b9e2:	imul   eax,DWORD PTR [ebx],0x2c242831
  40b9e8:	int    0x51
  40b9ea:	sub    BYTE PTR [esi+ebx*2],al
  40b9ed:	mov    esp,0x143144dc
  40b9f2:	loop   0x40b9b7
  40b9f4:	bound  ecx,QWORD PTR ds:0x2c1fac17
  40b9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9fb:	ret    
  40b9fc:	add    BYTE PTR [eax],al
  40b9fe:	data16 cmp al,0xe9
  40ba01:	add    ebx,esi
  40ba03:	outs   dx,BYTE PTR ds:[esi]
  40ba04:	add    BYTE PTR [edx+0x73],bh
  40ba07:	push   ebx
  40ba08:	jmp    0xf1687860
  40ba0d:	stos   DWORD PTR es:[edi],eax
  40ba0e:	add    DWORD PTR [ecx+0x4f96c37d],eax
  40ba14:	pop    es
  40ba15:	ret    
  40ba16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba17:	mov    ecx,0xeeb149e7
  40ba1c:	call   0x5d975559
  40ba21:	test   esi,0x87c3556b
  40ba27:	lods   eax,DWORD PTR ds:[esi]
  40ba28:	pop    edx
  40ba29:	jb     0x40ba71
  40ba2b:	adc    eax,0x27777ebc
  40ba30:	cmp    eax,0x411be5c3
  40ba35:	jge    0x40ba12
  40ba37:	lods   al,BYTE PTR ds:[esi]
  40ba38:	sub    eax,0x2adaff63
  40ba3d:	or     BYTE PTR [ecx],dh
  40ba3f:	inc    edi
  40ba40:	jb     0x40b9f2
  40ba42:	mov    bl,0xd8
  40ba44:	adc    BYTE PTR [edi+0x6e],dl
  40ba47:	push   edi
  40ba48:	adc    DWORD PTR [ecx+esi*1],eax
  40ba4b:	adc    al,0xe9
  40ba4d:	retf   0xafed
  40ba50:	call   0x54eb58
  40ba55:	bound  edi,QWORD PTR [eax+0x20]
  40ba58:	xor    DWORD PTR [ecx+0x12092732],0xffffffed
  40ba5f:	stc    
  40ba60:	rol    DWORD PTR [edx+0x0],1
  40ba63:	add    ah,bh
  40ba65:	ror    BYTE PTR [ebx],cl
  40ba67:	jmp    0xe940cef3
  40ba6c:	xor    bh,BYTE PTR [ecx+0x4716a60]
  40ba72:	add    BYTE PTR ds:0xd9449938,dh
  40ba78:	mov    ch,0x4
  40ba7a:	push   DWORD PTR [ecx+eax*2]
  40ba7d:	lods   eax,DWORD PTR ds:[esi]
  40ba7e:	je     0x40ba71
  40ba80:	mov    bl,ch
  40ba82:	addr16 sahf 
  40ba84:	repz xchg ecx,eax
  40ba86:	cli    
  40ba87:	loopne 0x40ba92
  40ba89:	pop    ss
  40ba8a:	or     DWORD PTR [edi*2-0x37e6ba47],esp
  40ba91:	sub    eax,0x1b737eff
  40ba96:	inc    ebp
  40ba97:	jno    0x40baa3
  40ba99:	jnp    0x40bb1a
  40ba9b:	jmp    0xebb5ced2
  40baa0:	(bad)  
  40baa1:	loope  0x40ba25
  40baa3:	bound  edi,QWORD PTR [edx]
  40baa5:	daa    
  40baa6:	adc    eax,0x8aabf962
  40baab:	mov    ah,0xbe
  40baad:	sbb    eax,0xd32a2ba4
  40bab2:	fcomip st,st(1)
  40bab4:	mov    ebp,0x960f857
  40bab9:	mov    al,0xea
  40babb:	fisubr DWORD PTR [edi-0x68d07a9]
  40bac1:	scas   eax,DWORD PTR es:[edi]
  40bac2:	push   cs
  40bac3:	inc    ebp
  40bac4:	je     0x40badb
  40bac6:	ror    DWORD PTR [ecx],0x0
  40bac9:	add    BYTE PTR [ebx],bh
  40bacb:	fwait
  40bacc:	inc    esp
  40bacd:	adc    DWORD PTR [ebp-0x74ff03b9],ebp
  40bad3:	xchg   ebp,eax
  40bad4:	stc    
  40bad5:	or     DWORD PTR [esi+0xc458989],esp
  40badb:	xchg   ebx,eax
  40badc:	add    BYTE PTR ss:[ebp+0x43c02b1d],ah
  40bae3:	ret    0x6e9
  40bae6:	adc    DWORD PTR [ebx-0x8],0xffffff8b
  40baea:	inc    ebp
  40baeb:	aam    0x59
  40baed:	leave  
  40baee:	retf   0x4
  40baf1:	push   ebp
  40baf2:	and    DWORD PTR [ecx+eax*4-0x3c],0xffffffa4
  40baf7:	aaa    
  40baf8:	mov    bl,0x66
  40bafa:	sbb    DWORD PTR [eax],edx
  40bafc:	cmp    DWORD PTR [ebp-0x4],eax
  40baff:	in     eax,dx
  40bb00:	add    eax,0xc0df882b
  40bb05:	adc    al,bl
  40bb07:	aam    0x33
  40bb09:	mov    ah,0x36
  40bb0b:	push   edi
  40bb0c:	add    al,ch
  40bb0e:	das    
  40bb0f:	sti    
  40bb10:	(bad)  
  40bb11:	inc    DWORD PTR [ecx+0x53]
  40bb14:	clc    
  40bb15:	lea    edx,[ebp-0x2c]
  40bb18:	dec    esi
  40bb19:	call   0x3fb70a
  40bb1e:	pavgw  mm2,QWORD PTR [ebx]
  40bb21:	push   DWORD PTR [ebp+0x1b]
  40bb24:	push   DWORD PTR [ebp+0x10]
  40bb27:	aad    0x73
  40bb29:	or     al,dh
  40bb2b:	inc    WORD PTR ds:[eax]
  40bb2f:	add    bh,ch
  40bb31:	sbb    al,al
  40bb33:	(bad)  
  40bb35:	ds (bad) 
  40bb37:	call   FWORD PTR [eax-0x2c]
  40bb3a:	jae    0x40bb48
  40bb3c:	pop    ds
  40bb3d:	jecxz  0x40bb36
  40bb3f:	jmp    DWORD PTR [ebp-0x5a061995]
  40bb45:	aam    0xfd
  40bb47:	mov    edx,DWORD PTR [ebp+0x31453b1b]
  40bb4d:	lods   eax,DWORD PTR ds:[esi]
  40bb4e:	jae    0x4378e9
  40bb54:	sub    BYTE PTR ss:[edi],dl
  40bb57:	jmp    DWORD PTR [ebp+eiz*4-0x5d715e56]
  40bb5e:	mov    edi,0xaba17488
  40bb63:	jae    0x40bb7b
  40bb65:	loopne 0x40bb1e
  40bb67:	sub    ah,bl
  40bb69:	and    eax,0x17fef446
  40bb6e:	js     0x40bbd5
  40bb70:	jo     0x40bb2f
  40bb72:	or     edx,edx
  40bb74:	jge    0x40bb35
  40bb76:	stos   DWORD PTR es:[edi],eax
  40bb77:	addr16 pop ebx
  40bb79:	mov    ebp,0xb55cff52
  40bb7e:	stos   BYTE PTR es:[edi],al
  40bb7f:	mov    BYTE PTR [ebp+0x7a],dl
  40bb82:	mov    edi,0xbfa95cfe
  40bb87:	je     0x40bbc2
  40bb89:	test   DWORD PTR [ebx],esi
  40bb8b:	mov    BYTE PTR [bx+di+0x548b],0x25
  40bb91:	ds std 
  40bb93:	inc    DWORD PTR [eax]
  40bb95:	add    BYTE PTR ds:0xb847abbf,bh
  40bb9b:	out    dx,eax
  40bb9c:	mov    bh,0x8a
  40bb9e:	xor    al,0xe9
  40bba0:	sub    BYTE PTR [ecx+0x31],al
  40bba3:	ds stos BYTE PTR es:[edi],al
  40bba5:	add    eax,DWORD PTR [eax]
  40bba7:	xor    dh,BYTE PTR [esi]
  40bba9:	adc    al,0xe0
  40bbab:	dec    ecx
  40bbac:	ss clc 
  40bbae:	xchg   bh,al
  40bbb0:	or     ch,al
  40bbb2:	push   esi
  40bbb3:	sar    BYTE PTR [edi-0x3d5a2702],cl
  40bbb9:	je     0x40bbee
  40bbbb:	inc    esi
  40bbbc:	out    0x50,al
  40bbbe:	addr16 mov dx,0xe4fe
  40bbc3:	clc    
  40bbc4:	stos   BYTE PTR es:[edi],al
  40bbc5:	jns    0x40bb93
  40bbc7:	adc    esp,DWORD PTR [esi]
  40bbc9:	ror    BYTE PTR [edi+0x20],0x1d
  40bbcd:	stos   DWORD PTR es:[edi],eax
  40bbce:	ret    0x162f
  40bbd1:	sar    ch,0x13
  40bbd4:	jmp    0xeb62eb1c
  40bbd9:	lods   al,BYTE PTR ds:[esi]
  40bbda:	ss xchg ebp,eax
  40bbdc:	jnp    0x40bb95
  40bbde:	and    DWORD PTR es:[edi-0x54],ebp
  40bbe2:	inc    esi
  40bbe3:	test   eax,0x170ebf73
  40bbe8:	dec    ebp
  40bbe9:	mov    edi,0xc023d20f
  40bbee:	push   es
  40bbef:	stos   BYTE PTR es:[edi],al
  40bbf0:	call   0xf59065f8
  40bbf5:	(bad)  
  40bbf6:	imul   BYTE PTR [ecx+0x3e8]
  40bbfc:	xor    DWORD PTR [ecx+0x27cebc33],ebp
  40bc02:	inc    ebp
  40bc03:	mov    edi,0xc0239ddf
  40bc08:	jmp    0x6444b4e3
  40bc0d:	popf   
  40bc0e:	mov    WORD PTR [edi-0x46],ss
  40bc11:	dec    edi
  40bc12:	in     eax,0x82
  40bc14:	jle    0x40bc32
  40bc16:	cmp    DWORD PTR [ebp+esi*1-0x444079c8],ebp
  40bc1d:	lods   al,BYTE PTR ds:[esi]
  40bc1e:	jge    0x40bc59
  40bc20:	xor    eax,0x25beed99
  40bc25:	add    al,0x5e
  40bc27:	inc    edi
  40bc28:	sub    eax,0x310fe395
  40bc2d:	and    dh,ch
  40bc2f:	mov    esi,0x476417fd
  40bc34:	sub    DWORD PTR [esi+ecx*2+0x39],eax
  40bc38:	sub    DWORD PTR [edx+ebx*2+0x71a96e30],edi
  40bc3f:	dec    ecx
  40bc40:	cmp    eax,0xdaf0ff9b
  40bc45:	adc    eax,DWORD PTR [eax]
  40bc47:	jmp    0x2c0a057e
  40bc4c:	and    eax,0x81725514
  40bc51:	xchg   esi,eax
  40bc52:	ret    
  40bc53:	sbb    eax,0x261440aa
  40bc58:	xor    edx,DWORD PTR [eax+eax*1]
  40bc5b:	jmp    0xf712b992
  40bc60:	add    BYTE PTR [eax],al
  40bc62:	jns    0x40bc7c
  40bc64:	add    ecx,ebp
  40bc66:	xor    dl,BYTE PTR [edi+ecx*1]
  40bc69:	push   ebp
  40bc6a:	repz xchg ebp,eax
  40bc6c:	jl     0x40bc63
  40bc6e:	xor    bl,BYTE PTR [edi]
  40bc70:	adc    ebx,esi
  40bc72:	dec    ecx
  40bc73:	add    BYTE PTR [edx-0x16],ch
  40bc76:	dec    eax
  40bc77:	adc    al,0x6a
  40bc79:	jmp    0xc73f5548
  40bc7e:	scas   eax,DWORD PTR es:[edi]
  40bc7f:	mov    ebx,0x1432eb28
  40bc84:	xor    DWORD PTR [ecx+eax*2],0x13
  40bc88:	jne    0x40bc94
  40bc8a:	xchg   esi,eax
  40bc8b:	pop    ds
  40bc8c:	adc    BYTE PTR [esi-0x5317e3f7],ah
  40bc92:	or     al,0xa9
  40bc94:	(bad)  
  40bc95:	pusha  
  40bc96:	imul   ebp,DWORD PTR [eax+0x3e1914fe],0x97391300
  40bca0:	inc    esp
  40bca1:	jge    0x40bca5
  40bca3:	mov    esp,0xa9df7666
  40bca8:	call   0x54ed96
  40bcad:	push   0xfffffff1
  40bcaf:	pop    ss
  40bcb0:	add    dl,ah
  40bcb2:	xchg   ebx,eax
  40bcb3:	test   eax,0x1fbff974
  40bcb8:	or     BYTE PTR [ecx+0x3f],al
  40bcbb:	xor    bh,bh
  40bcbd:	add    bh,dh
  40bcbf:	xchg   edi,eax
  40bcc0:	inc    ebx
  40bcc1:	cld    
  40bcc2:	daa    
  40bcc3:	in     al,dx
  40bcc4:	adc    ebp,DWORD PTR [edx+0x0]
  40bcc7:	add    BYTE PTR [eax-0x6],cl
  40bcca:	add    ecx,DWORD PTR [ebp-0x17b19773]
  40bcd0:	push   esi
  40bcd1:	imul   edi,ebp,0xffc221ff
  40bcd7:	dec    DWORD PTR [eax-0x6b]
  40bcda:	jnp    0x40bce8
  40bcdc:	dec    ebx
  40bcdd:	jmp    0x40bcfe
  40bcdf:	jmp    FWORD PTR [ebp+0x27036a03]
  40bce5:	loopne 0x40bcee
  40bce7:	call   0x3fae58
  40bcec:	pop    es
  40bced:	loopne 0x40bd02
  40bcef:	push   0x1b
  40bcf1:	(bad)  
  40bcf2:	jmp    FWORD PTR [ecx+0x18]
  40bcf5:	jl     0x40bd0d
  40bcf7:	jmp    edi
  40bcf9:	imul   esp,edi,0x1409b1
  40bcff:	xor    DWORD PTR [ebp+0x4],0x4
  40bd03:	jne    0x40bd40
  40bd05:	imul   esi,DWORD PTR [ebx+0x10],0xe807dfa7
  40bd0c:	test   bh,ch
  40bd0e:	(bad)  
  40bd0f:	inc    DWORD PTR [ecx+0x4f]
  40bd12:	cld    
  40bd13:	call   FWORD PTR ds:0x32006a0c
  40bd19:	sbb    al,0x8d
  40bd1b:	inc    ebp
  40bd1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1d:	inc    eax
  40bd1e:	call   0xfdaa7412
  40bd23:	jmp    0x40d048
  40bd28:	or     esp,edi
  40bd2a:	or     eax,DWORD PTR ds:0x9d0000
  40bd30:	push   DWORD PTR [ebp-0x78]
  40bd33:	std    
  40bd34:	add    eax,0xe81b5dff
  40bd39:	push   ebp
  40bd3a:	xor    edi,edx
  40bd3c:	mov    ebx,0x2bcb9fe
  40bd41:	add    BYTE PTR [ecx],dh
  40bd43:	inc    esp
  40bd44:	sub    DWORD PTR [ecx],eax
  40bd46:	xor    DWORD PTR [ebp-0x48d28381],edi
  40bd4c:	xor    eax,0x12605620
  40bd51:	push   0x39
  40bd53:	out    dx,al
  40bd54:	or     BYTE PTR ss:[ecx-0x4b],bl
  40bd58:	and    al,0xff
  40bd5a:	ds (bad) 
  40bd5c:	ss adc al,0xcb
  40bd5f:	mov    ecx,0xbd9b0028
  40bd64:	stos   BYTE PTR es:[edi],al
  40bd65:	stos   DWORD PTR es:[edi],eax
  40bd66:	daa    
  40bd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd68:	mov    ebx,0x2bc74e8
  40bd6d:	add    BYTE PTR [edx-0x7bf8f0c9],dh
  40bd73:	sbb    eax,0x432174bd
  40bd78:	or     al,0xff
  40bd7a:	test   BYTE PTR [ebp-0x2970ee56],dh
  40bd80:	mov    ebx,0x28c964fe
  40bd85:	add    ebx,DWORD PTR [ebx-0x43]
  40bd88:	sub    BYTE PTR [eax],al
  40bd8a:	leave  
  40bd8b:	ss mov ebp,0x1bd3d6fe
  40bd91:	add    DWORD PTR [eax],eax
  40bd93:	add    BYTE PTR [ecx],dh
  40bd95:	mov    ebp,0xa5357c7f
  40bd9a:	xor    eax,0xbff7f61c
  40bd9f:	push   DWORD PTR [esi+0x24ff02bc]
  40bda5:	leave  
  40bda6:	sub    BYTE PTR [eax],al
  40bda8:	sbb    esi,DWORD PTR [ecx+0xc9d448d]
  40bdae:	lods   al,BYTE PTR ds:[esi]
  40bdaf:	arpl   WORD PTR [edi-0x731743cb],dx
  40bdb5:	adc    ebp,ecx
  40bdb7:	add    esi,DWORD PTR [ecx]
  40bdb9:	xchg   ebx,eax
  40bdba:	fisttp DWORD PTR [edi]
  40bdbc:	sub    BYTE PTR [ecx],ah
  40bdbe:	cmc    
  40bdbf:	(bad)  
  40bdc0:	in     eax,dx
  40bdc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc2:	out    0x3,eax
  40bdc4:	xor    DWORD PTR [esi+eax*2],edx
  40bdc7:	ss cmp eax,0x3529e93a
  40bdcd:	cdq    
  40bdce:	stos   DWORD PTR es:[edi],eax
  40bdcf:	mov    edi,0xbdaabbe6
  40bdd4:	dec    edi
  40bdd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd6:	psubusb mm0,QWORD PTR [esi-0x5a]
  40bdda:	call   0xe3587b5f
  40bddf:	sub    ebp,DWORD PTR ss:[eax+ebp*8+0x3]
  40bde4:	xor    DWORD PTR [eax+edx*1],edx
  40bde7:	enter  0xa626,0xe8
  40bdeb:	sbb    BYTE PTR [ebp+0x2b36e218],0x6c
  40bdf2:	call   0xd054eefa
  40bdf7:	jg     0x40bdf9
  40bdf9:	add    BYTE PTR [esi],al
  40bdfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfc:	call   0xe5593b87
  40be01:	xor    eax,0x30bb195c
  40be06:	adc    BYTE PTR [ebx+0x14310843],0x29
  40be0d:	add    ah,BYTE PTR [edx+0x5c]
  40be10:	mov    dh,0x31
  40be12:	and    eax,0xb3b02395
  40be17:	aaa    
  40be18:	popf   
  40be19:	or     al,ah
  40be1b:	aaa    
  40be1c:	xchg   ebp,eax
  40be1d:	mov    ebx,0x8680a045
  40be22:	dec    eax
  40be23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be24:	lea    ecx,[ebp+0x3185abf5]
  40be2a:	inc    ecx
  40be2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2c:	repz scas eax,DWORD PTR es:[edi]
  40be2e:	lahf   
  40be2f:	pop    ds
  40be30:	add    BYTE PTR [ecx-0x26],dh
  40be33:	and    BYTE PTR [eax],cl
  40be35:	add    DWORD PTR [eax],0xca66ff31
  40be3b:	and    BYTE PTR [ebx+edx*8],dl
  40be3e:	xor    al,0xa5
  40be40:	je     0x40be9f
  40be42:	mov    edx,0x8441f820
  40be47:	test   al,0xfe
  40be49:	inc    esi
  40be4a:	stos   BYTE PTR es:[edi],al
  40be4b:	and    al,bh
  40be4d:	push   ecx
  40be4e:	pop    edx
  40be4f:	cmp    edi,edi
  40be51:	ss aad 0x13
  40be54:	add    cl,ch
  40be56:	xor    bh,BYTE PTR [ecx+0x18086a5f]
  40be5c:	or     eax,0xe100009b
  40be61:	sbb    dl,dl
  40be63:	pushf  
  40be64:	fst    QWORD PTR [edx+0x1432dd7c]
  40be6a:	inc    eax
  40be6b:	out    dx,eax
  40be6c:	pop    edi
  40be6d:	pop    esp
  40be6e:	push   DWORD PTR [esi+esi*1-0x6b]
  40be72:	inc    esp
  40be73:	std    
  40be74:	scas   eax,DWORD PTR es:[edi]
  40be75:	aaa    
  40be76:	hlt    
  40be77:	fsubr  st(5),st
  40be79:	aaa    
  40be7a:	hlt    
  40be7b:	out    0x41,al
  40be7d:	mov    al,ds:0xa54f06e7
  40be82:	(bad)  
  40be83:	pusha  
  40be84:	jno    0x40be32
  40be86:	(bad)  
  40be87:	push   esp
  40be88:	inc    ebp
  40be89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8a:	je     0x40be49
  40be8c:	stos   DWORD PTR es:[edi],eax
  40be8d:	pop    ds
  40be8e:	clc    
  40be8f:	mov    esi,0x13e81c21
  40be94:	adc    DWORD PTR [ebp+0x1aefe],esp
  40be9a:	push   0xffffffe8
  40be9c:	mov    ebx,DWORD PTR [edi]
  40be9e:	hlt    
  40be9f:	sahf   
  40bea0:	add    DWORD PTR [edi+eiz*8-0x15a87e1],ebp
  40bea7:	mov    fs,WORD PTR [ecx-0x54]
  40beaa:	out    0x0,eax
  40beac:	mov    ah,0xf7
  40beae:	(bad)  
  40beaf:	push   eax
  40beb1:	sldt   WORD PTR [eax]
  40beb4:	mov    BYTE PTR [ebp+0x3],dh
  40beb7:	mov    eax,0x1098
  40bebc:	inc    ecx
  40bebd:	iret   
  40bebe:	push   cs
  40bebf:	add    ch,al
  40bec1:	xchg   ebp,eax
  40bec2:	jmp    0x7ec:0xb000056
  40bec9:	add    BYTE PTR [ebp+0x1ac95e13],al
  40becf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed0:	dec    BYTE PTR [edx+0xaeb18a5]
  40bed6:	pop    ds
  40bed7:	mov    ds:0x6971b9e6,eax
  40bedc:	std    
  40bedd:	adc    DWORD PTR [esi],0xffffffa5
  40bee0:	cmp    DWORD PTR [esi],0xfff0e348
  40bee6:	xchg   ebp,eax
  40bee7:	sbb    al,ch
  40bee9:	test   eax,0x5efd5eb1
  40beee:	popa   
  40beef:	fld    DWORD PTR [edx]
  40bef1:	add    ch,al
  40bef3:	xchg   edx,eax
  40bef4:	jmp    0xec55:0x8b0fc58b
  40befb:	xchg   edx,eax
  40befc:	add    dl,BYTE PTR [eax+0xfeb9b]
  40bf02:	fs adc eax,0x5cf8558b
  40bf08:	cs (bad) 
  40bf0a:	ficomp DWORD PTR [eax-0xc27eb85]
  40bf10:	pop    es
  40bf11:	mov    eax,DWORD PTR [ebp+0x4]
  40bf14:	push   DWORD PTR [eax-0x3c]
  40bf17:	mov    WORD PTR [eax],es
  40bf19:	sbb    DWORD PTR ds:0xc1740000,0xffffff90
  40bf20:	push   ebx
  40bf21:	sbb    al,bh
  40bf23:	mov    WORD PTR [eax],es
  40bf25:	xor    DWORD PTR [ecx],0xffffffaf
  40bf28:	or     cl,cl
  40bf2a:	add    BYTE PTR [eax],al
  40bf2c:	jae    0x40bed7
  40bf2e:	add    dl,BYTE PTR [ebp-0x46]
  40bf31:	mov    DWORD PTR [ebx+eax*8-0x74adf583],eax
  40bf38:	in     al,dx
  40bf39:	mov    esp,0xad8effbf
  40bf3e:	add    al,BYTE PTR [eax]
  40bf40:	mov    edx,0x31c70670
  40bf45:	lods   eax,DWORD PTR ds:[esi]
  40bf46:	add    al,BYTE PTR [eax]
  40bf48:	xor    DWORD PTR [esi],ebp
  40bf4a:	aaa    
  40bf4b:	or     BYTE PTR [ecx],dh
  40bf4d:	enter  0x2b0a,0x71
  40bf51:	jnp    0x40bfaa
  40bf53:	leave  
  40bf54:	jae    0x40bf07
  40bf56:	add    bh,bh
  40bf58:	fdiv   QWORD PTR [edx+ebp*4-0x470e2e01]
  40bf5f:	or     dh,BYTE PTR [ecx-0x80]
  40bf62:	or     ch,BYTE PTR [ebx]
  40bf64:	jno    0x40bfc9
  40bf66:	push   edi
  40bf67:	leave  
  40bf68:	jae    0x40bf23
  40bf6a:	add    cl,BYTE PTR [ecx+0x74b90574]
  40bf70:	cmp    DWORD PTR ds:0xa21e630e,eax
  40bf76:	mov    edi,0x2ac1d44
  40bf7b:	add    BYTE PTR [ecx],dh
  40bf7d:	inc    eax
  40bf7e:	aas    
  40bf7f:	in     al,dx
  40bf80:	popa   
  40bf81:	sub    BYTE PTR [esi],bh
  40bf83:	hlt    
  40bf84:	popa   
  40bf85:	ret    0x82d
  40bf88:	or     DWORD PTR [edx-0x44],esp
  40bf8b:	(bad)  
  40bf8c:	out    dx,al
  40bf8d:	add    edi,DWORD PTR [edi]
  40bf8f:	in     al,dx
  40bf90:	add    BYTE PTR [eax],al
  40bf92:	pop    esi
  40bf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf94:	cmp    DWORD PTR [ebp+eiz*8-0x54],0x2e
  40bf99:	add    al,0x2a
  40bf9b:	jg     0x40bfcb
  40bf9d:	or     BYTE PTR [edx],bl
  40bf9f:	ins    DWORD PTR es:[edi],dx
  40bfa0:	pop    eax
  40bfa1:	pop    edi
  40bfa2:	clc    
  40bfa3:	adc    ebp,DWORD PTR [ebx+0x23ef3107]
  40bfa9:	test   al,0xa9
  40bfab:	pop    eax
  40bfac:	add    DWORD PTR [edx+0x3e8ac2d],0xbff13d1
  40bfb6:	dec    edx
  40bfb7:	aam    0x1e
  40bfb9:	pop    ecx
  40bfba:	push   0xba03e4d5
  40bfbf:	pop    eax
  40bfc0:	add    edx,0xabb91566
  40bfc6:	mov    DWORD PTR [ebx],ebp
  40bfc8:	pop    esi
  40bfc9:	mov    eax,0x8c5558a9
  40bfce:	data16 fisub DWORD PTR [ebx-0x175d9961]
  40bfd5:	add    ecx,DWORD PTR [edx-0x1a]
  40bfd8:	imul   edi,DWORD PTR [esi],0x61
  40bfdb:	inc    ebx
  40bfdc:	fs ds inc ebp
  40bfdf:	inc    ebx
  40bfe0:	cs cmp DWORD PTR cs:[ebp+eiz*4+0x71a23fbd],ebp
  40bfe9:	inc    esi
  40bfea:	inc    ecx
  40bfeb:	fisub  WORD PTR [ebx-0x1de75855]
  40bff1:	aad    0xa2
  40bff3:	add    al,0x6
  40bff5:	add    BYTE PTR cs:[eax],al
  40bff8:	sbb    eax,0x162b48ad
  40bffd:	mov    ds:0x416cc3c1,al
  40c002:	and    ch,al
  40c004:	cmp    dl,BYTE PTR [eax+edx*1]
  40c007:	dec    ecx
  40c008:	or     DWORD PTR [edx-0x6a345fdd],esp
  40c00e:	push   ebx
  40c00f:	lods   al,BYTE PTR ds:[esi]
  40c010:	out    dx,al
  40c011:	daa    
  40c012:	out    0x82,eax
  40c014:	gs test al,0xe8
  40c017:	xor    al,dh
  40c019:	xchg   ebp,eax
  40c01a:	cmp    ebp,DWORD PTR [esi+edx*8-0x4c10ffd8]
  40c021:	and    ah,dh
  40c023:	jmp    0x1d3fc429
  40c028:	jns    0x40bfe3
  40c02a:	jo     0x40c03d
  40c02c:	jle    0x40bfd0
  40c02e:	sub    ch,BYTE PTR [ecx-0x5436bef9]
  40c034:	cmp    DWORD PTR [ebx+eax*4],edx
  40c037:	add    al,0xd1
  40c039:	mov    eax,ds:0x8ec5e473
  40c03e:	(bad)  
  40c03f:	call   0xd9854d76
  40c044:	mov    edi,0x3576e428
  40c049:	lea    eax,[ebp+eax*2+0x6c]
  40c04d:	rol    DWORD PTR [ecx],0xb9
  40c050:	call   0x448c:0x9e4e6834
  40c057:	and    eax,0x72dc20aa
  40c05c:	add    BYTE PTR [eax],al
  40c05e:	and    BYTE PTR [eax-0x72266e16],ah
  40c064:	iret   
  40c065:	es lock mov bl,0xff
  40c069:	call   0xa4cdd4a0
  40c06e:	xchg   edx,eax
  40c06f:	push   ecx
  40c070:	lea    ebp,[esi+ebx*8+0x600e5250]
  40c077:	or     al,0xe8
  40c079:	push   ss
  40c07a:	fisub  DWORD PTR [ecx+0x24f2f2fe]
  40c080:	or     al,0x6a
  40c082:	dec    eax
  40c083:	test   al,0xff
  40c085:	je     0x40c08b
  40c087:	xchg   esi,eax
  40c088:	jl     0x40c053
  40c08a:	xor    ah,BYTE PTR [edi]
  40c08c:	es push 0x39
  40c08f:	mov    ah,0xff
  40c091:	pop    esp
  40c092:	cmp    eax,0x9ac974a1
  40c097:	push   ss
  40c098:	push   0xfd69f700
  40c09d:	jne    0x40c053
  40c09f:	ins    BYTE PTR es:[edi],dx
  40c0a0:	sub    dh,bh
  40c0a2:	xchg   DWORD PTR [ecx-0x3],ebp
  40c0a5:	jne    0x40c03b
  40c0a7:	ins    BYTE PTR es:[edi],dx
  40c0a8:	hlt    
  40c0a9:	addr16 xchg edi,eax
  40c0ab:	imul   ebp,DWORD PTR [ecx],0xc948f6c0
  40c0b1:	ret    0x1494
  40c0b4:	mov    eax,DWORD PTR [ebp-0x48]
  40c0b7:	sub    eax,0x95ac4dfe
  40c0bc:	jnp    0x40c0a2
  40c0be:	mov    al,dh
  40c0c0:	add    eax,0x85000083
  40c0c5:	jo     0x40c0c5
  40c0c7:	je     0x40c0bd
  40c0c9:	lea    eax,[ebx+0xc]
  40c0cc:	pop    ss
  40c0cd:	in     al,0xdb
  40c0cf:	(bad)
  40c0d3:	cld    
  40c0d4:	lock int 0x65
  40c0d7:	push   edi
  40c0d9:	sbb    al,0x0
  40c0db:	add    BYTE PTR [eax+0x14],cl
  40c0de:	pop    esi
  40c0df:	pop    edi
  40c0e0:	and    ebx,edx
  40c0e2:	or     al,BYTE PTR [eax]
  40c0e4:	lods   eax,DWORD PTR ds:[esi]
  40c0e5:	(bad)  
  40c0e6:	jmp    0x9583:0x55cd0c83
  40c0ed:	add    al,0x0
  40c0ef:	jne    0x40c133
  40c0f1:	sbb    al,0x0
  40c0f3:	add    BYTE PTR [eax],bl
  40c0f5:	adc    al,0x5f
  40c0f7:	leave  
  40c0f8:	pop    edx
  40c0f9:	(bad)  
  40c0fb:	jmp    ebp
  40c0fd:	add    ebp,DWORD PTR [ebx]
  40c0ff:	shl    BYTE PTR [ebx-0x208efac],cl
  40c105:	das    
  40c106:	gs inc ecx
  40c108:	sbb    BYTE PTR [ecx+0x1862f043],dl
  40c10e:	push   DWORD PTR [ebp-0x28]
  40c111:	imul   esi,DWORD PTR [ebx+0x8],0x5f19d531
  40c118:	out    0xce,al
  40c11a:	cmp    BYTE PTR [ecx+eax*2-0x53],0x2d
  40c11f:	or     al,0x4b
  40c121:	lods   al,BYTE PTR ds:[esi]
  40c122:	sub    BYTE PTR [esi+ecx*8-0x20],ah
  40c126:	or     ebp,eax
  40c128:	add    BYTE PTR [eax],al
  40c12a:	cmp    DWORD PTR [esi],ecx
  40c12c:	mov    ch,0xfe
  40c12e:	mov    esi,0x3cff1000
  40c133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c134:	stos   BYTE PTR es:[edi],al
  40c135:	dec    edx
  40c136:	adc    eax,DWORD PTR [esi-0x6f13774c]
  40c13c:	mov    ah,0x74
  40c13e:	inc    ebp
  40c13f:	xchg   esi,eax
  40c140:	or     BYTE PTR cs:[ecx-0x7100df43],cl
  40c147:	es das 
  40c149:	adc    al,0x86
  40c14b:	test   al,0xa
  40c14d:	call   0xfef48c86
  40c152:	test   al,0x78
  40c154:	mov    edx,0xb3a0e4fe
  40c159:	je     0x40c194
  40c15b:	push   ebp
  40c15c:	lods   eax,DWORD PTR ds:[esi]
  40c15d:	pusha  
  40c15e:	pop    esi
  40c15f:	push   esi
  40c160:	mov    ch,0x74
  40c162:	cmp    eax,0x59082ede
  40c167:	les    esp,FWORD PTR [eax]
  40c169:	inc    DWORD PTR [esi+0x32]
  40c16c:	aas    
  40c16d:	adc    al,0xb2
  40c16f:	mov    ch,0x2
  40c171:	je     0x40c198
  40c173:	sub    dh,BYTE PTR [edi]
  40c175:	cld    
  40c176:	cmp    al,0x81
  40c178:	add    eax,0xff11a483
  40c17d:	jae    0x40c1b5
  40c17f:	ret    0x5ec2
  40c182:	call   0xd040d171
  40c187:	loopne 0x40c1a6
  40c189:	inc    ecx
  40c18a:	xor    esp,edi
  40c18c:	stos   DWORD PTR es:[edi],eax
  40c18d:	cmp    BYTE PTR [eax],al
  40c18f:	add    BYTE PTR [esp+edx*1-0x1f],dh
  40c193:	sub    eax,0x54a8eb2e
  40c198:	clc    
  40c199:	sar    esp,1
  40c19b:	add    esi,DWORD PTR [edx+0x65fecd20]
  40c1a1:	push   cs
  40c1a2:	(bad)  
  40c1a3:	cs cmp eax,0xd90c339f
  40c1a9:	xchg   esp,eax
  40c1aa:	inc    edi
  40c1ab:	mov    ch,0xc7
  40c1ad:	mov    WORD PTR [ebx],fs
  40c1af:	int3   
  40c1b0:	push   esi
  40c1b1:	adc    al,0xe9
  40c1b3:	add    dh,BYTE PTR [ecx]
  40c1b5:	lods   al,BYTE PTR ds:[esi]
  40c1b6:	in     eax,0x1c
  40c1b8:	scas   al,BYTE PTR es:[edi]
  40c1b9:	sahf   
  40c1ba:	pop    edi
  40c1bb:	ds popf 
  40c1bd:	jmp    0xffb:0x9f40a88d
  40c1c4:	xchg   esi,eax
  40c1c5:	sub    cl,dh
  40c1c7:	stos   DWORD PTR es:[edi],eax
  40c1c8:	mov    esp,0xbbb47634
  40c1cd:	dec    eax
  40c1ce:	jne    0x40c15a
  40c1d0:	xor    bl,BYTE PTR [edx-0x53]
  40c1d3:	clc    
  40c1d4:	cmc    
  40c1d5:	fisubr DWORD PTR [edx-0x7f02a745]
  40c1dc:	push   ds
  40c1dd:	adc    al,0xd4
  40c1df:	add    al,0x5e
  40c1e1:	sub    BYTE PTR ds:0x3e3570ab,bh
  40c1e7:	mov    ah,0x1b
  40c1e9:	aam    0x95
  40c1eb:	retf   0x770
  40c1ee:	jmp    0xebe07f73
  40c1f3:	add    al,0x0
  40c1f5:	add    BYTE PTR [esi+esi*2-0x16cefc18],ch
  40c1fc:	adc    eax,0xb38994a8
  40c201:	scas   eax,DWORD PTR es:[edi]
  40c202:	stos   DWORD PTR es:[edi],eax
  40c203:	sbb    BYTE PTR [ebx+0x0],al
  40c206:	ins    BYTE PTR es:[edi],dx
  40c207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c208:	xchg   edx,eax
  40c209:	add    esp,DWORD PTR [ecx-0x63]
  40c20c:	(bad)  
  40c20d:	jnp    0x40c249
  40c20f:	lods   al,BYTE PTR ds:[esi]
  40c210:	daa    
  40c211:	pop    ebp
  40c213:	sahf   
  40c214:	(bad)  
  40c215:	pop    esp
  40c216:	sbb    DWORD PTR [ebp+0x3caf174],ebx
  40c21c:	popa   
  40c21d:	(bad)  
  40c21e:	mov    ds:0x3f9d448c,al
  40c223:	adc    al,0xff
  40c225:	cmp    al,0x39
  40c227:	popf   
  40c228:	je     0x40c21b
  40c22a:	stos   BYTE PTR es:[edi],al
  40c22b:	dec    esp
  40c22c:	clc    
  40c22d:	mov    dh,0x82
  40c22f:	mov    cl,BYTE PTR [ebp+edx*8-0x49]
  40c233:	fdiv   st(7),st
  40c235:	sbb    esi,DWORD PTR [edx]
  40c237:	popf   
  40c238:	je     0x40c1cf
  40c23a:	int    0x2f
  40c23c:	xchg   si,ax
  40c23e:	loop   0x40c22a
  40c240:	mov    edi,0x13d3dc2e
  40c245:	jmp    0x7e58eb2d
  40c24a:	dec    eax
  40c24b:	or     bh,bh
  40c24d:	cld    
  40c24e:	(bad)  
  40c24f:	sahf   
  40c250:	je     0x40c22f
  40c252:	ret    
  40c253:	sub    BYTE PTR [eax],cl
  40c255:	push   ecx
  40c256:	sahf   
  40c257:	lahf   
  40c258:	(bad)  
  40c259:	pop    esi
  40c25a:	add    BYTE PTR [eax],al
  40c25c:	outs   dx,BYTE PTR ds:[esi]
  40c25d:	pop    ebp
  40c25e:	je     0x40c246
  40c260:	mov    ds:0xea41f428,eax
  40c265:	xor    eax,0x5d7646ff
  40c26a:	pop    esi
  40c26b:	xor    BYTE PTR [edi+0x1],dh
  40c26e:	add    BYTE PTR [esi-0x4407dfa9],ch
  40c274:	mov    cl,0x9e
  40c276:	je     0x40c279
  40c278:	sub    BYTE PTR [eax],0x14
  40c27b:	push   ds
  40c27c:	push   0x269cfecc
  40c281:	sahf   
  40c282:	je     0x40c265
  40c284:	mov    edx,0x2f00fe36
  40c289:	popa   
  40c28a:	or     eax,eax
  40c28c:	pop    ds
  40c28d:	mov    WORD PTR [eax+0x1],ss
  40c290:	sbb    BYTE PTR [ecx],dl
  40c292:	push   DWORD PTR [ebp+0x4]
  40c295:	jns    0x40c2ab
  40c297:	punpckldq xmm5,XMMWORD PTR [ecx]
  40c29b:	shr    BYTE PTR [edi],0x5f
  40c29e:	rcl    BYTE PTR [eax+ebx*8],0x7f
  40c2a2:	cmp    al,0x1
  40c2a4:	enter  0x8310,0x7d
  40c2a8:	in     al,dx
  40c2a9:	adc    ecx,DWORD PTR [edi]
  40c2ab:	test   esp,eax
  40c2ad:	pop    ss
  40c2ae:	add    BYTE PTR [eax],al
  40c2b0:	xor    esp,DWORD PTR [ecx-0x19]
  40c2b3:	and    al,0xc9
  40c2b5:	adc    BYTE PTR [eax],al
  40c2b7:	mov    esi,ebp
  40c2b9:	pop    ebx
  40c2ba:	mov    DWORD PTR [edx+edx*1],eax
  40c2bd:	push   ss
  40c2be:	inc    ebp
  40c2bf:	lock add BYTE PTR [eax],al
  40c2c2:	xor    bl,BYTE PTR [eax]
  40c2c4:	push   eax
  40c2c5:	inc    DWORD PTR [ebp-0x60]
  40c2c8:	out    0x74,al
  40c2ca:	dec    ebp
  40c2cb:	popa   
  40c2cc:	std    
  40c2cd:	push   0xffffff98
  40c2cf:	popa   
  40c2d0:	jae    0x40c2e6
  40c2d2:	(bad)  
  40c2d3:	fild   DWORD PTR [edi]
  40c2d5:	call   0x3e1cc5
  40c2da:	add    edx,DWORD PTR [esp+edx*1-0x7d]
  40c2de:	adc    DWORD PTR [eax],ebx
  40c2e0:	jne    0x40c2f1
  40c2e2:	(bad)  
  40c2e3:	fcomi  st,st(3)
  40c2e5:	call   0x3faefa
  40c2ea:	inc    ebx
  40c2eb:	fcomp  DWORD PTR [ebp-0x37]
  40c2ee:	sbb    al,BYTE PTR ds:0xe52a0b00
  40c2f4:	add    al,0xe9
  40c2f6:	cld    
  40c2f7:	adc    BYTE PTR [eax],al
  40c2f9:	add    cl,al
  40c2fb:	dec    ebx
  40c2fc:	in     al,dx
  40c2fd:	push   0x18
  40c2ff:	addr16 jae 0x40c316
  40c302:	xor    DWORD PTR [edx],eax
  40c304:	cmp    BYTE PTR [eax],cl
  40c306:	or     DWORD PTR [edi-0x47],edi
  40c309:	(bad)  
  40c30a:	push   ss
  40c30b:	daa    
  40c30c:	inc    eax
  40c30d:	adc    al,0xb2
  40c30f:	aam    0x2
  40c311:	jne    0x40c349
  40c313:	mov    ds:0x4609f436,al
  40c318:	sub    bh,bh
  40c31a:	test   BYTE PTR [esi],0xc4
  40c31d:	pop    esi
  40c31e:	clc    
  40c31f:	outs   dx,DWORD PTR ds:[esi]
  40c320:	pop    ss
  40c321:	add    dh,ah
  40c323:	clc    
  40c324:	ja     0x40c38b
  40c326:	add    BYTE PTR [eax],al
  40c328:	jo     0x40c2d7
  40c32a:	jg     0x40c370
  40c32c:	leave  
  40c32d:	es inc edi
  40c32f:	call   0xc14088e6
  40c334:	shr    DWORD PTR [eax+0x6a78d1db],1
  40c33a:	add    eax,DWORD PTR [eax]
  40c33c:	xor    DWORD PTR [edx-0x4e],edi
  40c33f:	sbb    BYTE PTR [ecx-0x6ebb865e],0x2e
  40c346:	pop    ds
  40c347:	call   0xec87f99e
  40c34c:	pop    edx
  40c34d:	call   0x867439ed
  40c352:	fisubr DWORD PTR [edx]
  40c354:	arpl   WORD PTR [esi],si
  40c356:	inc    edi
  40c357:	in     al,dx
  40c358:	dec    edx
  40c359:	lock mov ds:0x8544e48a,eax
  40c35f:	rcl    BYTE PTR [edx],0x2e
  40c362:	fwait
  40c363:	add    ebx,DWORD PTR [esi+0x3c]
  40c366:	add    eax,0x57345155
  40c36b:	in     al,0xaa
  40c36d:	push   0x50f43a9a
  40c372:	xor    eax,0xa268ba05
  40c377:	jmp    0x1436:0xe4473632
  40c37e:	pushf  
  40c37f:	pop    ss
  40c380:	and    DWORD PTR cs:0xe1212654,ecx
  40c387:	fwait
  40c388:	shl    DWORD PTR [edx+0xb10d],1
  40c38e:	sub    edx,esp
  40c390:	jnp    0x40c392
  40c392:	push   cs
  40c393:	and    ebp,esi
  40c395:	fwait
  40c396:	and    al,0x31
  40c398:	div    BYTE PTR [eax-0x45722bb5]
  40c39e:	lock (bad) 
  40c3a0:	call   0x71f9391f
  40c3a5:	shl    DWORD PTR [ebp-0x53ac42b0],cl
  40c3ab:	push   eax
  40c3ac:	mov    cl,0x53
  40c3ae:	sub    DWORD PTR [edx+eiz*2+0x6f9acfac],0x46
  40c3b6:	loope  0x40c352
  40c3b8:	cmp    edx,eax
  40c3ba:	(bad)  
  40c3bb:	xor    DWORD PTR ds:0x2396b7b1,ecx
  40c3c1:	aam    0xae
  40c3c3:	es cld 
  40c3c5:	test   BYTE PTR ds:0x4637e8bc,ah
  40c3cb:	fwait
  40c3cc:	adc    ebx,eax
  40c3ce:	xchg   edi,eax
  40c3cf:	and    BYTE PTR [ecx+0x7e0805b0],ah
  40c3d5:	cmp    DWORD PTR ss:[ebx+0x207e0c1b],ebx
  40c3dc:	xchg   ecx,eax
  40c3dd:	fwait
  40c3de:	xor    BYTE PTR [edi-0x21084f9b],bl
  40c3e4:	fld    TBYTE PTR [ebx-0x4ec669c9]
  40c3ea:	pop    edi
  40c3eb:	call   0x272c:0xab5d364d
  40c3f2:	add    BYTE PTR [eax],al
  40c3f4:	dec    esi
  40c3f5:	call   0xe900:0x14310280
  40c3fc:	loope  0x40c3ca
  40c3fe:	rcl    ebp,0x32
  40c401:	inc    ecx
  40c402:	mov    edx,DWORD PTR ds:0xf1749989
  40c408:	retf   0x71a5
  40c40b:	push   ss
  40c40c:	loope  0x40c43f
  40c40e:	out    dx,al
  40c40f:	stos   BYTE PTR es:[edi],al
  40c410:	jae    0x40c426
  40c412:	(bad)  
  40c413:	jl     0x40c41f
  40c415:	mov    dl,0x3c
  40c417:	mov    dh,0x32
  40c419:	adc    al,0xb
  40c41b:	sub    DWORD PTR [edi+0xf],eax
  40c41e:	pop    edi
  40c41f:	and    ah,ch
  40c421:	adc    DWORD PTR [eax],eax
  40c423:	scas   eax,DWORD PTR es:[edi]
  40c424:	xor    eax,0xe554ff14
  40c429:	mov    cl,0xd2
  40c42b:	pop    ebx
  40c42c:	mov    ds,WORD PTR [edx+0x5372d9be]
  40c432:	add    dh,al
  40c434:	or     BYTE PTR [edi+edx*2],cl
  40c437:	shr    DWORD PTR [edx+eiz*8],1
  40c43a:	(bad)  
  40c43b:	call   0xe4b51dfb
  40c440:	addr16 retf 
  40c442:	shl    ecx,0x32
  40c445:	cwde   
  40c446:	xor    ch,BYTE PTR [ecx-0x690165ec]
  40c44c:	into   
  40c44d:	mov    ds:0x1f2fd1ad,eax
  40c452:	loopne 0x40c3da
  40c454:	dec    eax
  40c455:	or     al,0xe8
  40c457:	add    eax,0x99880000
  40c45c:	(bad)  
  40c45d:	loop   0x40c4d1
  40c45f:	and    BYTE PTR ds:0x7d3b40e,al
  40c465:	jmp    0xa884b8b4
  40c46a:	xor    bl,BYTE PTR [ecx-0x32451e8c]
  40c470:	xor    al,0xe9
  40c472:	xor    cl,BYTE PTR ds:0x988d00c0
  40c478:	std    
  40c479:	jne    0x40c4cf
  40c47b:	sbb    al,BYTE PTR [esp+edi*4]
  40c47e:	outs   dx,BYTE PTR ds:[esi]
  40c47f:	push   eax
  40c480:	add    BYTE PTR [eax+0x33],ch
  40c483:	dec    esp
  40c484:	inc    ecx
  40c485:	add    BYTE PTR [edi-0x25],dl
  40c488:	pop    es
  40c489:	call   0x3f6018
  40c48e:	adc    edx,ebp
  40c490:	jae    0x40c49b
  40c492:	daa    
  40c493:	fisttp DWORD PTR [ebx]
  40c495:	(bad)  
  40c496:	sbb    eax,0x184164d5
  40c49b:	std    
  40c49c:	cmp    DWORD PTR [ecx+ecx*8+0x14],eax
  40c4a0:	push   DWORD PTR [ebp+0x10]
  40c4a3:	jge    0x40c43b
  40c4a5:	xor    eax,0xc00b14d8
  40c4aa:	jge    0x40c443
  40c4ac:	std    
  40c4ad:	jne    0x40c483
  40c4af:	sbb    DWORD PTR [esp+eax*8],eax
  40c4b2:	outs   dx,BYTE PTR ds:[esi]
  40c4b3:	dec    edi
  40c4b4:	add    BYTE PTR [eax+0x14d9],bh
  40c4ba:	daa    
  40c4bb:	push   edi
  40c4bc:	ror    BYTE PTR [eax],0x0
  40c4bf:	add    al,cl
  40c4c1:	cmp    ecx,DWORD PTR [ebx-0xd2eb414]
  40c4c7:	push   esi
  40c4c8:	outs   dx,DWORD PTR ds:[esi]
  40c4c9:	clc    
  40c4ca:	jmp    0xff511e12
  40c4cf:	jne    0x40c461
  40c4d1:	jl     0x40c457
  40c4d3:	mov    BYTE PTR ss:[ebx+ecx*1],dl
  40c4d7:	ror    BYTE PTR [ebp-0x3ea1a0f2],0xd2
  40c4de:	add    al,BYTE PTR [eax]
  40c4e0:	dec    eax
  40c4e1:	sbb    eax,0x9c858bef
  40c4e6:	jmp    0x3cd580ec
  40c4eb:	add    BYTE PTR [ebp+0x6a],bh
  40c4ee:	mov    ds:0x424f3168,al
  40c4f3:	inc    ecx
  40c4f4:	xor    DWORD PTR [edx+0x38],ecx
  40c4f7:	or     BYTE PTR [ecx-0x36],bl
  40c4fa:	hlt    
  40c4fb:	inc    DWORD PTR [esi-0x5b]
  40c4fe:	ret    0x3774
  40c501:	or     BYTE PTR [ecx+ecx*8+0x73],0xae
  40c506:	add    cl,BYTE PTR [ebx+0x2199a5ac]
  40c50c:	mov    cl,0xb6
  40c50e:	sti    
  40c50f:	jae    0x40c549
  40c511:	sub    eax,0xa19d0cee
  40c516:	cmp    BYTE PTR [esi],0x3b
  40c519:	sbb    esi,edi
  40c51b:	jg     0x40c563
  40c51d:	jb     0x40c555
  40c51f:	or     dh,BYTE PTR [ecx+0x744f5e]
  40c525:	add    BYTE PTR [ebp*1-0x559ba012],ch
  40c52c:	les    eax,FWORD PTR [esi]
  40c52e:	adc    esi,ebp
  40c530:	cmp    DWORD PTR [esi],0x31
  40c533:	cmp    bl,cl
  40c535:	(bad)  
  40c536:	ins    BYTE PTR es:[edi],dx
  40c537:	leave  
  40c538:	add    eax,DWORD PTR [eax]
  40c53a:	xor    DWORD PTR [ebp-0x5236bb3d],ebp
  40c540:	add    al,BYTE PTR [eax]
  40c542:	xor    DWORD PTR [edx],esi
  40c544:	das    
  40c545:	or     dl,cl
  40c547:	repnz cmp DWORD PTR [esi],0x56
  40c54b:	clc    
  40c54c:	fadd   DWORD PTR [edx+0x75037924]
  40c552:	inc    ebx
  40c553:	jbe    0x40c59b
  40c555:	clc    
  40c556:	xor    BYTE PTR [ebp-0x4efbfffe],ch
  40c55c:	ret    
  40c55d:	inc    esp
  40c55e:	test   DWORD PTR [edx+eax*1+0x10923100],ebp
  40c565:	imul   esp
  40c567:	and    al,0x3
  40c569:	add    BYTE PTR [ecx],dh
  40c56b:	adc    al,0xe9
  40c56d:	ss cmp ecx,esi
  40c570:	in     eax,0xe3
  40c572:	ja     0x40c5c5
  40c574:	push   ebp
  40c575:	add    al,0x31
  40c577:	adc    al,0xe9
  40c579:	or     DWORD PTR [edi],0x38
  40c57c:	mov    esp,0x41514606
  40c581:	cdq    
  40c582:	aaa    
  40c583:	iret   
  40c584:	stos   DWORD PTR es:[edi],eax
  40c585:	stos   DWORD PTR es:[edi],eax
  40c586:	ss xchg edi,eax
  40c588:	call   0xb240c590
  40c58d:	sbb    BYTE PTR ds:0x27139c03,ah
  40c593:	add    eax,0xed694f51
  40c598:	push   ss
  40c599:	and    BYTE PTR [ecx+0x79],bl
  40c59c:	lea    ecx,[edx+edx*1]
  40c59f:	adc    BYTE PTR [ecx+0x2736c8d6],dh
  40c5a5:	xchg   esp,eax
  40c5a6:	jne    0x40c5aa
  40c5a8:	push   ecx
  40c5a9:	and    ecx,ebx
  40c5ab:	push   esp
  40c5ac:	fimul  DWORD PTR ds:0x8c304473
  40c5b2:	in     eax,0x44
  40c5b4:	mov    cl,0xd6
  40c5b6:	call   0x1e77a1f1
  40c5bb:	inc    ebp
  40c5bc:	mov    cl,0xd6
  40c5be:	call   0x240fabf9
  40c5c3:	mov    eax,0x3e896be
  40c5c8:	stos   BYTE PTR es:[edi],al
  40c5c9:	and    cl,ah
  40c5cb:	js     0x40c5fa
  40c5cd:	or     al,0x92
  40c5cf:	loope  0x40c5f7
  40c5d1:	xlat   BYTE PTR ds:[ebx]
  40c5d2:	int3   
  40c5d3:	ss cmp eax,0x9603edce
  40c5d9:	and    BYTE PTR [ebp-0x791566ab],dl
  40c5df:	lods   al,BYTE PTR ds:[esi]
  40c5e0:	xchg   DWORD PTR [edx],ecx
  40c5e2:	test   eax,0x373736
  40c5e7:	pop    ss
  40c5e8:	mov    edx,0xe9e903d4
  40c5ed:	popf   
  40c5ee:	inc    ebp
  40c5ef:	data16 add BYTE PTR [eax],al
  40c5f2:	out    dx,eax
  40c5f3:	lahf   
  40c5f4:	inc    esi
  40c5f5:	imul   ecx,DWORD PTR [ebp-0x6a],0x1f853073
  40c5fc:	hlt    
  40c5fd:	mov    bh,0xaa
  40c5ff:	or     bh,dh
  40c601:	inc    esi
  40c602:	xchg   ebp,eax
  40c603:	xor    eax,0x1270305e
  40c608:	add    BYTE PTR [ecx+edi*4-0x15da7d56],bl
  40c60f:	aas    
  40c610:	push   edi
  40c611:	push   0x57
  40c613:	add    BYTE PTR [eax],al
  40c615:	xchg   ebp,eax
  40c616:	sbb    edx,DWORD PTR [ebx+0x54fbd73c]
  40c61c:	add    cl,ch
  40c61e:	inc    edi
  40c61f:	push   cs
  40c620:	pop    edi
  40c621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c622:	retf   
  40c623:	ror    DWORD PTR [edi],cl
  40c625:	jmp    0xb05516a3
  40c62a:	das    
  40c62b:	pop    eax
  40c62c:	gs test al,0x32
  40c62f:	add    eax,0x142c8a83
  40c634:	add    BYTE PTR [eax],ah
  40c636:	xor    ah,dl
  40c638:	sub    BYTE PTR gs:0x34768305,ch
  40c63f:	adc    al,0x0
  40c641:	add    BYTE PTR [eax],dh
  40c643:	shl    BYTE PTR [ebp+0x28],1
  40c646:	xor    eax,0x2c628305
  40c64b:	adc    al,0x0
  40c64d:	pop    esp
  40c64e:	lock lahf 
  40c650:	dec    edi
  40c651:	je     0x40c643
  40c653:	fwait
  40c654:	dec    edi
  40c655:	ins    BYTE PTR es:[edi],dx
  40c656:	add    BYTE PTR [eax],al
  40c658:	lock xchg edi,eax
  40c65a:	dec    edi
  40c65b:	xchg   esi,eax
  40c65c:	mov    al,ds:0x35286559
  40c661:	xchg   ebp,eax
  40c662:	je     0x40c664
  40c664:	push   0xfff8bc79
  40c669:	push   0x40b0458b
  40c66e:	lea    eax,[ebp-0x14]
  40c671:	aas    
  40c672:	lea    eax,[ebp+0x8]
  40c675:	inc    eax
  40c676:	push   DWORD PTR ds:0x40f214
  40c67c:	jmp    edx
  40c67e:	psubsb mm6,QWORD PTR [eax+ebp*2+0x52bdfffd]
  40c686:	fcom   QWORD PTR [eax-0x33]
  40c689:	push   edx
  40c68a:	loopne 0x40c6dc
  40c68c:	int    0x52
  40c68e:	in     al,0x50
  40c690:	pop    edi
  40c691:	mov    ds:0x10d966be,eax
  40c696:	push   DWORD PTR [ebp+0x18]
  40c699:	jns    0x40c623
  40c69b:	clc    
  40c69c:	aas    
  40c69d:	imul   edi,ebp,0x44193475
  40c6a3:	aam    0x2f
  40c6a5:	jecxz  0x40c682
  40c6a7:	(bad)  
  40c6a8:	aad    0xc8
  40c6aa:	lds    eax,FWORD PTR [ebp+0x18]
  40c6ad:	adc    BYTE PTR [eax],al
  40c6af:	add    al,bl
  40c6b1:	sbb    eax,DWORD PTR [esp+ecx*8+0x28]
  40c6b5:	test   BYTE PTR [eax],0x6a
  40c6b8:	enter  0xfff6,0x69
  40c6bc:	add    BYTE PTR [eax],al
  40c6be:	enter  0xfff6,0x8c
  40c6c2:	adc    eax,0xe5ff4ec4
  40c6c7:	stos   BYTE PTR es:[edi],al
  40c6c8:	daa    
  40c6c9:	inc    ecx
  40c6ca:	enter  0xbe95,0xf
  40c6ce:	inc    esp
  40c6cf:	xchg   edi,eax
  40c6d0:	(bad)  
  40c6d1:	call   FWORD PTR [eax-0x672f8473]
  40c6d7:	cdq    
  40c6d8:	add    BYTE PTR [eax],0x89
  40c6db:	adc    BYTE PTR [eax],al
  40c6dd:	mov    esi,DWORD PTR [ecx]
  40c6df:	lock mov bh,0x3a
  40c6e2:	cld    
  40c6e3:	mov    ?,ecx
  40c6e5:	xchg   BYTE PTR [ebp-0x56],bh
  40c6e8:	add    al,BYTE PTR [eax]
  40c6ea:	jge    0x40c70d
  40c6ec:	xor    al,dl
  40c6ee:	stos   BYTE PTR es:[edi],al
  40c6ef:	lahf   
  40c6f0:	(bad)  
  40c6f1:	mov    bh,ah
  40c6f3:	jbe    0x40c69a
  40c6f5:	add    DWORD PTR [edx-0x7a],esp
  40c6f8:	test   eax,0x40256d74
  40c6fd:	in     al,0x56
  40c6ff:	mov    bh,0xd2
  40c701:	out    0x6e,eax
  40c703:	clc    
  40c704:	add    eax,DWORD PTR [eax]
  40c706:	mov    dl,0xcf
  40c708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c709:	jmp    FWORD PTR [edi]
  40c70b:	das    
  40c70c:	mov    ecx,0x85aa36ff
  40c711:	jl     0x40c734
  40c713:	jle    0x40c70e
  40c715:	sub    ebp,0x7d
  40c718:	add    al,BYTE PTR [eax]
  40c71a:	mov    dl,0xb0
  40c71c:	sahf   
  40c71d:	jmp    DWORD PTR [edi]
  40c71f:	add    DWORD PTR [ebp-0x1],ebp
  40c722:	add    BYTE PTR [eax],al
  40c724:	push   cs
  40c725:	jle    0x40c6d0
  40c727:	je     0x40c72e
  40c729:	es ins DWORD PTR es:[edi],dx
  40c72b:	pusha  
  40c72c:	(bad)  
  40c72d:	xchg   edx,eax
  40c72e:	jp     0x40c774
  40c730:	jmp    0xef3cf5bf
  40c735:	or     BYTE PTR [ebx-0x648ea302],bh
  40c73b:	fist   WORD PTR [eax+0x72]
  40c73e:	test   al,0x67
  40c740:	push   0xd9004341
  40c745:	icebp  
  40c746:	cmc    
  40c747:	inc    esi
  40c749:	sub    eax,0x3c75491c
  40c74e:	add    al,0xff
  40c750:	cmp    al,0xb5
  40c752:	fwait
  40c753:	sub    eax,0xb027d65
  40c758:	jno    0x40c76e
  40c75a:	sbb    eax,0x24e4090c
  40c75f:	inc    ebx
  40c760:	xor    DWORD PTR [eax+ebx*1-0xa],edi
  40c764:	mov    ss,WORD PTR [ebx-0x281ee3c8]
  40c76a:	daa    
  40c76b:	add    al,0x7e
  40c76d:	or     DWORD PTR [ecx-0x16b7df64],esi
  40c773:	add    edi,DWORD PTR [edx]
  40c775:	push   esp
  40c776:	hlt    
  40c777:	or     ebx,ecx
  40c779:	jmp    0x40c727
  40c77b:	inc    edx
  40c77c:	xor    DWORD PTR [esp+esi*4-0xb],edi
  40c780:	push   esi
  40c781:	xchg   ebx,eax
  40c782:	mov    eax,0xa7d7e91b
  40c787:	add    eax,DWORD PTR [eax]
  40c789:	add    BYTE PTR [esi+0x9],al
  40c78c:	xor    DWORD PTR [esp+eax*2+0x2a03e947],ebx
  40c793:	push   esp
  40c794:	mov    ebx,0xe914993e
  40c799:	cwde   
  40c79a:	in     al,0x92
  40c79c:	fwait
  40c79d:	not    DWORD PTR [esi]
  40c79f:	into   
  40c7a0:	mov    ebx,0xdb9317a8
  40c7a5:	imul   edx,DWORD PTR [ebp+edx*8+0x207da8e8],0x11
  40c7ad:	pop    eax
  40c7ae:	pop    ebp
  40c7af:	xchg   ebx,eax
  40c7b0:	std    
  40c7b1:	test   al,0x7d
  40c7b3:	nop
  40c7b4:	cmc    
  40c7b5:	cs in  eax,0x92
  40c7b8:	jae    0x40c7b1
  40c7ba:	into   
  40c7bb:	addr16 inc ebx
  40c7bd:	test   eax,0xb45392df
  40c7c2:	xlat   BYTE PTR ds:[ebx]
  40c7c3:	or     cl,al
  40c7c5:	test   al,0x45
  40c7c7:	and    cl,al
  40c7c9:	shl    DWORD PTR [ebp-0x6d],0xc5
  40c7cd:	test   al,0x45
  40c7cf:	js     0x40c78e
  40c7d1:	cs aad 0x92
  40c7d4:	(bad)  
  40c7d5:	cmp    ebp,DWORD PTR [ecx-0x27f34886]
  40c7db:	xchg   ecx,eax
  40c7dc:	(bad)  
  40c7dd:	sbb    al,0xdd
  40c7df:	jp     0x40c7d1
  40c7e1:	or     eax,ecx
  40c7e3:	xchg   ecx,eax
  40c7e4:	pop    esi
  40c7e5:	aaa    
  40c7e6:	retf   0xf54
  40c7e9:	jmp    0x6b2c66e5
  40c7ee:	add    BYTE PTR [eax],al
  40c7f0:	mov    esi,0x26fc827a
  40c7f5:	sbb    DWORD PTR [edi],ecx
  40c7f7:	ins    BYTE PTR es:[edi],dx
  40c7f8:	inc    ebp
  40c7f9:	adc    eax,0xd7dfe900
  40c7fe:	repz mov ecx,0xb9f7d7e7
  40c804:	(bad)  
  40c806:	sti    
  40c807:	mov    ecx,0xd4ff162c
  40c80c:	and    bh,BYTE PTR [eax+eiz*1+0x3e]
  40c810:	mov    DWORD PTR [ecx+0x138abc82],edx
  40c816:	(bad)  
  40c818:	in     eax,0x91
  40c81a:	(bad)  
  40c81b:	jmp    0x7734d0f9
  40c820:	pop    edi
  40c821:	test   BYTE PTR [edi+0x0],ah
  40c824:	jno    0x40c7f9
  40c826:	call   DWORD PTR ds:0xc3e7845f
  40c82c:	cld    
  40c82d:	xchg   ecx,eax
  40c82e:	(bad)  
  40c82f:	repnz repnz and al,BYTE PTR [ebp+0x143221]
  40c837:	fs das 
  40c839:	mov    BYTE PTR [edi+0x5c],cl
  40c83c:	daa    
  40c83d:	mov    WORD PTR [edi+0x74],cs
  40c840:	jo     0x40c7d2
  40c842:	dec    edi
  40c843:	push   ebx
  40c844:	sub    eax,0xaaf97491
  40c849:	ja     0x40c840
  40c84b:	into   
  40c84c:	mov    ss,WORD PTR [esi+0x17f0007c]
  40c852:	jne    0x18f0c858
  40c858:	add    BYTE PTR [eax],al
  40c85a:	out    0x43,eax
  40c85c:	hlt    
  40c85d:	push   0x40d56c
  40c862:	rol    BYTE PTR [edi-0x7177ffd0],0xbe
  40c869:	nop    ebp
  40c86c:	(bad)  
  40c86d:	call   FWORD PTR [eax+0x18f4440c]
  40c873:	or     eax,DWORD PTR [eax+edi*8+0x18]
  40c877:	or     eax,DWORD PTR [esp+edi*8+0x48]
  40c87b:	cs add edi,edi
  40c87e:	pop    ebp
  40c87f:	and    eax,0xb8feb1e8
  40c884:	std    
  40c885:	xor    DWORD PTR [ebp-0x43],0xfffffffe
  40c889:	push   cs
  40c88a:	fst    QWORD PTR [esi+edi*8+0x440e58ff]
  40c891:	hlt    
  40c892:	test   DWORD PTR [edi+0xae4458d],0xbc8f444
  40c89c:	inc    esp
  40c89d:	clc    
  40c89e:	enter  0x440b,0xfc
  40c8a2:	fsubr  DWORD PTR [edx]
  40c8a4:	add    al,0xff
  40c8a6:	mov    ebp,0x2e89e824
  40c8ab:	mov    ecx,0xbcb583fd
  40c8b0:	push   DWORD PTR [edi+edx*8-0x2f]
  40c8b4:	add    edi,DWORD PTR [esi+ebp*4+0xfeffd7]
  40c8bb:	add    bh,ah
  40c8bd:	mov    ecx,0x54cdc7fd
  40c8c2:	fs inc ecx
  40c8c4:	enter  0xfdb9,0xff
  40c8c8:	not    ecx
  40c8ca:	add    eax,esp
  40c8cc:	xor    ecx,esp
  40c8ce:	inc    esp
  40c8cf:	add    dh,al
  40c8d1:	popa   
  40c8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d3:	(bad)  
  40c8d4:	mov    esi,0x33e7b04f
  40c8d9:	iret   
  40c8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8db:	(bad)  
  40c8dc:	jbe    0x40c91d
  40c8de:	pushf  
  40c8df:	add    BYTE PTR [ecx],dh
  40c8e1:	jnp    0x40c8e5
  40c8e3:	sbb    DWORD PTR [edi+esi*8+0x1c],0x41
  40c8e8:	xor    DWORD PTR [edx+0x67b2292e],esi
  40c8ee:	ret    0xf065
  40c8f1:	jp     0x40c898
  40c8f3:	jae    0x40c946
  40c8f5:	(bad)  
  40c8f6:	out    0xc3,eax
  40c8f8:	(bad)  
  40c8fa:	add    al,0xff
  40c8fc:	in     eax,0x71
  40c8fe:	sbb    dh,al
  40c900:	pushf  
  40c901:	cmp    al,BYTE PTR [ecx*4-0xad1d0c]
  40c908:	(bad)  
  40c90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90b:	je     0x40c94a
  40c90d:	jmp    0xfeaa:0x7259082f
  40c914:	ds inc ebx
  40c916:	ror    DWORD PTR [edi],0x31
  40c919:	test   al,0x79
  40c91b:	jmp    0x40c8cf
  40c91d:	inc    ecx
  40c91e:	xchg   edi,eax
  40c91f:	inc    BYTE PTR [eax]
  40c921:	add    BYTE PTR [ebp+esi*2+0x36789c9a],bl
  40c928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c929:	imul   eax,DWORD PTR [ecx+0x0],0x2661f040
  40c930:	xor    BYTE PTR [eax],cl
  40c932:	sbb    DWORD PTR [edi-0x7d0100b6],eax
  40c938:	ret    0x2d74
  40c93b:	inc    esp
  40c93c:	rol    DWORD PTR [edi],0x31
  40c93f:	xchg   ebx,eax
  40c940:	adc    ch,BYTE PTR [eax-0x3]
  40c943:	mov    edx,0x14ac0043
  40c948:	sub    al,0xb4
  40c94a:	data16 jl 0x40c922
  40c94d:	inc    ebp
  40c94e:	into   
  40c94f:	(bad)  
  40c950:	loope  0x40c915
  40c952:	cmp    eax,0x36c2a018
  40c957:	adc    al,0xae
  40c959:	aas    
  40c95a:	lds    edx,FWORD PTR ds:0xa13103e9
  40c960:	sub    ebx,DWORD PTR [eax-0x3cc710a]
  40c966:	xchg   esi,eax
  40c967:	cmp    DWORD PTR [ebx-0x5b],eax
  40c96a:	xchg   edi,eax
  40c96b:	sbb    ebp,DWORD PTR [ecx+0x13933730]
  40c971:	cwde   
  40c972:	xchg   BYTE PTR [eax],cl
  40c974:	out    0xd8,eax
  40c976:	mov    esi,0x76fcaa5d
  40c97b:	(bad)  
  40c97d:	mov    edx,0x9c98195b
  40c982:	jecxz  0x40c998
  40c984:	sub    cl,bh
  40c986:	add    BYTE PTR [eax],al
  40c988:	sahf   
  40c989:	or     DWORD PTR [esi+0x4c],ebx
  40c98c:	mov    dl,0x8c
  40c98e:	out    0x2e,eax
  40c990:	xor    al,0xcc
  40c992:	call   0x6a54f99a
  40c997:	stos   DWORD PTR es:[edi],eax
  40c998:	xor    DWORD PTR [eax],ecx
  40c99a:	out    dx,eax
  40c99b:	fdiv   DWORD PTR [esi+0x5d]
  40c99e:	sub    bh,ah
  40c9a0:	cs mov dl,0x7c
  40c9a3:	push   ds
  40c9a4:	jo     0x40c9ba
  40c9a6:	pop    esp
  40c9a7:	aas    
  40c9a8:	or     eax,0x292f25e4
  40c9ad:	jl     0x40c99a
  40c9af:	dec    ecx
  40c9b0:	push   cs
  40c9b1:	(bad)
  40c9b5:	or     ah,ah
  40c9b7:	add    BYTE PTR [esi],0x12
  40c9ba:	jl     0x40c9b9
  40c9bc:	mov    bl,0x10
  40c9be:	or     eax,0x166404
  40c9c3:	ret    0x5bf2
  40c9c6:	shl    ecx,0x32
  40c9c9:	mov    eax,ds:0x8f82d544
  40c9ce:	je     0x40c9c1
  40c9d0:	stos   BYTE PTR es:[edi],al
  40c9d1:	jns    0x40ca2b
  40c9d3:	(bad)  
  40c9d4:	lea    edx,[ecx+0x190ee8f7]
  40c9da:	add    ecx,0x30
  40c9dd:	or     DWORD PTR [esi],eax
  40c9df:	push   0x57
  40c9e1:	cmp    bh,0x3b
  40c9e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e5:	cmp    eax,eax
  40c9e7:	mov    al,ds:0x74001670
  40c9ec:	add    BYTE PTR [eax],al
  40c9ee:	push   edi
  40c9ef:	or     BYTE PTR [edi-0x62],0x5f
  40c9f3:	sbb    al,0xe8
  40c9f5:	mov    al,ds:0xe2fe8efb
  40c9fa:	jb     0x40ca03
  40c9fc:	push   es
  40c9fd:	push   0x4f
  40c9ff:	cmp    bh,0xf3
  40ca02:	ins    BYTE PTR es:[edi],dx
  40ca03:	cmp    eax,eax
  40ca05:	mov    al,ds:0x5c001670
  40ca0a:	pop    ds
  40ca0b:	or     BYTE PTR [edi+0x66],0x7
  40ca0f:	sbb    al,0xe8
  40ca11:	mov    ebx,?
  40ca13:	mov    ?,esi
  40ca15:	push   0xffffff9a
  40ca17:	dec    esi
  40ca18:	jne    0x40ca01
  40ca1a:	mov    cl,0xf
  40ca1c:	in     al,dx
  40ca1d:	jmp    0x296be029
  40ca22:	jmp    0x40ca77
  40ca24:	pop    es
  40ca25:	jmp    0x9a2ca2c9
  40ca2a:	aad    0x8
  40ca2c:	or     BYTE PTR [ecx],dl
  40ca2e:	ret    0xfeec
  40ca31:	push   ds
  40ca32:	mov    cl,0x85
  40ca34:	pop    ds
  40ca35:	pushf  
  40ca36:	add    al,0x93
  40ca38:	jl     0x40ca37
  40ca3a:	xor    eax,DWORD PTR [edi]
  40ca3c:	push   es
  40ca3d:	add    bl,ah
  40ca3f:	push   ecx
  40ca40:	mov    edx,0x458d11e0
  40ca46:	sub    al,0xe1
  40ca48:	(bad)  
  40ca49:	jne    0x40ca1b
  40ca4b:	test   eax,0xb1cf5971
  40ca50:	cmp    eax,0x2b380000
  40ca56:	push   es
  40ca57:	sbb    DWORD PTR [ebp-0x3c],0xfffffffe
  40ca5b:	je     0x40ca33
  40ca5d:	jle    0x40ca1d
  40ca5f:	leave  
  40ca60:	mov    ah,BYTE PTR [eax]
  40ca62:	add    BYTE PTR [ebp+0x6a4ec455],cl
  40ca68:	cmp    BYTE PTR [ecx+0x31700873],dh
  40ca6e:	pop    ecx
  40ca6f:	dec    edi
  40ca71:	mov    ds:0xb148ec43,eax
  40ca76:	jae    0x40ca80
  40ca78:	mov    al,0xc1
  40ca7a:	push   esi
  40ca7b:	jmp    FWORD PTR [edi+0x7a01f695]
  40ca81:	push   ds
  40ca82:	cmp    eax,0x5b
  40ca85:	sub    al,BYTE PTR [esi]
  40ca87:	sbb    DWORD PTR [ebp-0x43],0xfffffffe
  40ca8b:	je     0x40cae3
  40ca8d:	jle    0x40ca4d
  40ca8f:	leave  
  40ca90:	or     ah,BYTE PTR [eax]
  40ca92:	add    BYTE PTR [ebx+0x413a90],ah
  40ca98:	int    0xda
  40ca9a:	jmp    0x40caec
  40ca9c:	jb     0x40cb17
  40ca9e:	std    
  40ca9f:	jne    0x40cae1
  40caa1:	mov    ecx,0xb16f5948
  40caa6:	lds    sp,DWORD PTR [edi-0x2a730028]
  40caad:	mov    esp,0xb2096a4e
  40cab2:	jae    0x40cac0
  40cab4:	das    
  40cab5:	sub    ecx,DWORD PTR [eax]
  40cab7:	call   0x9771cabc
  40cabc:	cwde   
  40cabd:	(bad)  
  40cabe:	(bad)  
  40cabf:	xor    eax,esi
  40cac1:	pop    es
  40cac2:	xor    DWORD PTR [eax+0x36b2eb8d],esi
  40cac8:	mov    al,ds:0x32876c8c
  40cacd:	call   0xfee2731a
  40cad2:	(bad)  
  40cad3:	out    dx,eax
  40cad4:	lahf   
  40cad5:	inc    BYTE PTR [edi+edi*2-0x56]
  40cad9:	dec    esi
  40cada:	pop    esi
  40cadb:	mov    ax,ds:0x12e6f10a
  40cae1:	(bad)  
  40cae2:	cmp    al,0x83
  40cae4:	mov    eax,ds:0xdd62ad74
  40cae9:	std    
  40caea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caeb:	lds    ecx,FWORD PTR ds:0xa17b24c0
  40caf1:	je     0x40ca88
  40caf3:	mov    ds:0xad8e5522,al
  40caf8:	retf   
  40caf9:	shl    DWORD PTR ds:0x8d8b377b,0x9d
  40cb00:	pop    ss
  40cb01:	or     al,0x89
  40cb03:	leave  
  40cb04:	and    al,0xff
  40cb06:	outs   dx,BYTE PTR ds:[esi]
  40cb07:	add    edx,0x18061273
  40cb0d:	adc    BYTE PTR [ecx],al
  40cb0f:	xchg   ebx,eax
  40cb10:	int3   
  40cb11:	pusha  
  40cb12:	push   esi
  40cb13:	cmc    
  40cb14:	xor    ch,BYTE PTR [eax-0x47]
  40cb17:	mov    al,0x42
  40cb19:	add    BYTE PTR [esi+0x6f],al
  40cb1c:	cli    
  40cb1d:	inc    BYTE PTR [eax]
  40cb1f:	add    ah,al
  40cb21:	xchg   BYTE PTR [edx],dh
  40cb23:	(bad)  
  40cb24:	mov    esp,0xb1e5aa82
  40cb29:	dec    edx
  40cb2a:	mov    ds:0xa1a0e4e7,al
  40cb2f:	(bad)  
  40cb30:	call   0x7e40c274
  40cb35:	adc    al,0x72
  40cb37:	scas   eax,DWORD PTR es:[edi]
  40cb38:	xchg   esi,eax
  40cb39:	adc    al,0xe9
  40cb3b:	mov    dl,0xc4
  40cb3d:	cld    
  40cb3e:	sub    BYTE PTR [esi+0x70],al
  40cb41:	adc    al,0xe
  40cb43:	sbb    BYTE PTR ds:0x65a2e2fe,ah
  40cb49:	sbb    al,0x11
  40cb4b:	push   ebx
  40cb4c:	out    0x8b,eax
  40cb4e:	cmc    
  40cb4f:	sub    dh,BYTE PTR [ecx]
  40cb51:	adc    al,0xfe
  40cb53:	pusha  
  40cb54:	dec    esi
  40cb55:	pop    ebp
  40cb56:	sub    DWORD PTR [ebx+0x31],eax
  40cb59:	mov    edx,DWORD PTR [ebx+0x10]
  40cb5c:	pop    ebx
  40cb5d:	cs (bad) 
  40cb5f:	pop    ss
  40cb60:	sub    DWORD PTR [edi+ebp*2-0x5f],edi
  40cb64:	mov    bh,0x8b
  40cb66:	push   eax
  40cb67:	add    al,0x31
  40cb69:	jnp    0x40cbe9
  40cb6b:	sub    al,0x71
  40cb6d:	xlat   BYTE PTR ds:[ebx]
  40cb6e:	daa    
  40cb6f:	add    al,0x9e
  40cb71:	add    ebp,ebx
  40cb73:	sub    eax,0xc1b8b35
  40cb78:	cdq    
  40cb79:	xchg   esi,eax
  40cb7a:	popf   
  40cb7b:	mov    eax,ds:0x3e8fc87
  40cb80:	mov    cs,edx
  40cb82:	add    bl,cl
  40cb84:	add    BYTE PTR [eax],al
  40cb86:	repz aam 0xe8
  40cb89:	mov    al,ds:0x1317e5
  40cb8e:	add    cx,sp
  40cb91:	stos   DWORD PTR es:[edi],eax
  40cb92:	retf   
  40cb93:	mov    ch,BYTE PTR [ebp-0x5f]
  40cb96:	into   
  40cb97:	adc    ebp,ecx
  40cb99:	mov    al,0x8c
  40cb9b:	cld    
  40cb9c:	sub    BYTE PTR [ebp-0x10],al
  40cb9f:	adc    edx,DWORD PTR [esi+0x17]
  40cba2:	sub    eax,0xbda109fe
  40cba7:	sbb    edx,DWORD PTR [ecx+0x38]
  40cbaa:	mov    edi,DWORD PTR cs:0x14312c
  40cbb1:	inc    esi
  40cbb2:	xchg   ebx,eax
  40cbb3:	repz enter 0x73aa,0x14
  40cbb8:	call   FWORD PTR [esi+edi*1+0x1e1e22fe]
  40cbbf:	sbb    al,0xe8
  40cbc1:	aam    0xd1
  40cbc3:	mov    esi,edi
  40cbc5:	and    bh,ch
  40cbc7:	adc    al,BYTE PTR [eax]
  40cbc9:	pushf  
  40cbca:	mov    ebp,0x9125827e
  40cbcf:	cld    
  40cbd0:	inc    DWORD PTR [edx-0x1e8b75fc]
  40cbd6:	mov    bl,al
  40cbd8:	pop    ecx
  40cbd9:	out    0x91,al
  40cbdb:	fwait
  40cbdc:	inc    esp
  40cbdd:	fstp   QWORD PTR [edx]
  40cbdf:	cmc    
  40cbe0:	inc    ebx
  40cbe1:	sub    BYTE PTR ds:0x8ae1748b,dh
  40cbe7:	xlat   BYTE PTR ds:[ebx]
  40cbe8:	inc    dh
  40cbea:	add    BYTE PTR [eax],al
  40cbec:	ror    DWORD PTR [ecx-0x2e428c],1
  40cbf2:	pop    es
  40cbf3:	sar    DWORD PTR [ebx],0xee
  40cbf6:	(bad)  
  40cbf7:	scas   al,BYTE PTR es:[edi]
  40cbf8:	imul   edx,DWORD PTR [ebx+eax*1-0x17],0x47
  40cbfd:	lahf   
  40cbfe:	jmp    0x40cc6a
  40cc00:	outs   dx,BYTE PTR ds:[esi]
  40cc01:	mov    gs,WORD PTR [ecx-0x17]
  40cc04:	dec    esp
  40cc05:	inc    edi
  40cc06:	call   DWORD PTR [eiz*1-0x6fdce384]
  40cc0d:	mov    DWORD PTR [eax+0x6ff29124],ecx
  40cc13:	sub    eax,0xf4ff13f2
  40cc18:	sub    bh,BYTE PTR [ebx+ebx*1+0x66]
  40cc1c:	xchg   ecx,eax
  40cc1d:	mov    esi,edi
  40cc1f:	aam    0xa6
  40cc21:	mov    DWORD PTR [ecx+eiz*8-0x76],esi
  40cc25:	rcr    BYTE PTR [ecx+0x4e],cl
  40cc28:	xchg   ecx,eax
  40cc29:	pop    ebx
  40cc2a:	rol    DWORD PTR [eax],0x1c
  40cc2d:	push   ss
  40cc2e:	push   ebp
  40cc2f:	mov    esi,DWORD PTR [eax+edx*4-0x3e]
  40cc33:	clc    
  40cc34:	repnz adc eax,0x2247346a
  40cc3a:	or     al,ch
  40cc3c:	and    al,0x4e
  40cc3e:	(bad)  
  40cc3f:	inc    DWORD PTR [ecx-0x5d97042e]
  40cc45:	rol    DWORD PTR [eax+0x0],1
  40cc48:	daa    
  40cc49:	and    cl,BYTE PTR [eax]
  40cc4b:	call   0x3e7f93
  40cc50:	add    BYTE PTR [eax],al
  40cc52:	ret    0x6815
  40cc55:	call   0xd14e:0x67ffd68c
  40cc5c:	inc    eax
  40cc5d:	add    bh,dl
  40cc5f:	imul   ebx,DWORD PTR [edx+0x29],0x19
  40cc63:	adc    al,ch
  40cc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc66:	pop    es
  40cc67:	test   eax,0x2c880bfd
  40cc6c:	aas    
  40cc6d:	mov    DWORD PTR [ebp-0x58],ebx
  40cc70:	data16 mov BYTE PTR [edx-0x77980030],dh
  40cc77:	adc    eax,0x4ff0beef
  40cc7c:	inc    ecx
  40cc7d:	inc    ecx
  40cc7e:	cwde   
  40cc7f:	stos   BYTE PTR es:[edi],al
  40cc80:	jae    0x40cc7a
  40cc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc83:	sub    ecx,DWORD PTR [eax]
  40cc85:	call   0x3ff582
  40cc8a:	xor    BYTE PTR [eax+0x3d5840b8],bl
  40cc90:	add    BYTE PTR [eax],al
  40cc92:	mov    bh,0xea
  40cc94:	leavew 
  40cc96:	or     ecx,edi
  40cc98:	(bad)  
  40cc99:	(bad)  
  40cc9a:	pop    ebp
  40cc9b:	lods   eax,DWORD PTR ds:[esi]
  40cc9c:	std    
  40cc9d:	jne    0x40ccdf
  40cc9f:	mov    ebp,0xa8e77f74
  40cca4:	std    
  40cca5:	jne    0x40ccd8
  40cca7:	jecxz  0x40cc54
  40cca9:	dec    ecx
  40ccaa:	aad    0xd9
  40ccac:	sahf   
  40ccad:	(bad)  
  40ccae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccaf:	iret   
  40ccb0:	sahf   
  40ccb1:	je     0x40ccec
  40ccb3:	jecxz  0x40cd15
  40ccb5:	pop    eax
  40ccb6:	add    BYTE PTR [eax],al
  40ccb8:	push   ds
  40ccb9:	inc    edx
  40ccba:	int    0xc1
  40ccbc:	sub    eax,0x1d8b377b
  40ccc1:	inc    bh
  40ccc3:	sti    
  40ccc4:	fwait
  40ccc5:	jnp    0x40ccef
  40ccc7:	xor    eax,0xe80aa7fe
  40cccc:	nop
  40cccd:	les    ebx,FWORD PTR [ebp-0x61484702]
  40ccd3:	addr16 (bad) 
  40ccd5:	scas   al,BYTE PTR es:[edi]
  40ccd6:	inc    ebx
  40ccd7:	add    dh,bl
  40ccd9:	pop    es
  40ccda:	or     ebp,eax
  40ccdc:	push   ecx
  40ccdd:	jns    0x40cc7c
  40ccdf:	dec    dh
  40cce1:	out    0x9f,eax
  40cce3:	(bad)  
  40cce4:	cmp    al,0x83
  40cce6:	stos   BYTE PTR es:[edi],al
  40cce7:	mov    ebx,DWORD PTR [eax+0x62]
  40ccea:	popf   
  40cceb:	enter  0x6ef3,0x2
  40ccef:	push   ebp
  40ccf0:	mov    edx,0xa5c3815e
  40ccf5:	in     al,0x3
  40ccf7:	push   0x67
  40ccf9:	ret    0x817
  40ccfc:	mov    DWORD PTR [edx+0x38eff3b],ecx
  40cd02:	dec    eax
  40cd03:	cld    
  40cd04:	sbb    edx,ebx
  40cd06:	inc    esi
  40cd07:	inc    ecx
  40cd08:	xor    DWORD PTR [edx-0x3676f7e9],esp
  40cd0e:	pushf  
  40cd0f:	(bad)  
  40cd10:	outs   dx,BYTE PTR ds:[esi]
  40cd11:	xchg   ecx,eax
  40cd12:	pop    ss
  40cd13:	cld    
  40cd14:	data16 jg 0x40cd21
  40cd17:	call   0xfedff116
  40cd1c:	add    BYTE PTR [eax],al
  40cd1e:	push   0xe40006bc
  40cd23:	adc    esi,DWORD PTR [edx-0x51]
  40cd26:	mov    bl,0x4f
  40cd28:	pop    esp
  40cd29:	sub    DWORD PTR [ecx],esi
  40cd2b:	(bad)  
  40cd2c:	sbb    eax,0x411bbd9f
  40cd31:	sahf   
  40cd32:	xchg   BYTE PTR [edi-0x779273bb],al
  40cd38:	rcr    BYTE PTR [edx+esi*2-0x2b],1
  40cd3c:	call   0x415d6adf
  40cd41:	popf   
  40cd42:	or     eax,0x7d9e2588
  40cd47:	mov    BYTE PTR ds:0xc27c2918,bl
  40cd4d:	cmp    al,0xf6
  40cd4f:	xchg   DWORD PTR [edi],ebx
  40cd51:	shl    DWORD PTR [edx],0x14
  40cd54:	pushf  
  40cd55:	mov    bl,dl
  40cd57:	xchg   ebx,eax
  40cd58:	and    al,0x9f
  40cd5a:	dec    eax
  40cd5b:	adc    al,0x83
  40cd5d:	fcmovnbe st,st(7)
  40cd5f:	add    ecx,esp
  40cd61:	stos   DWORD PTR es:[edi],eax
  40cd62:	cld    
  40cd63:	in     al,dx
  40cd64:	in     eax,0x9d
  40cd66:	mov    ecx,0xf02cdcd1
  40cd6b:	shl    BYTE PTR [edi],1
  40cd6d:	add    al,0xb6
  40cd6f:	add    ecx,esp
  40cd71:	stos   DWORD PTR es:[edi],eax
  40cd72:	jge    0x40ccfd
  40cd74:	lds    ebx,FWORD PTR [ebp-0x6242fe59]
  40cd7a:	and    eax,0xfe9bc11c
  40cd7f:	xchg   BYTE PTR [ebp+0x700000cb],ch
  40cd85:	adc    cl,ch
  40cd87:	ss mov edx,0x2d179d78
  40cd8d:	jl     0x40cde0
  40cd8f:	cmp    eax,0xc3e18776
  40cd94:	loop   0x40cdbe
  40cd96:	adc    DWORD PTR [eax+0x33e8d4f2],edi
  40cd9c:	dec    ecx
  40cd9d:	in     al,0xff
  40cd9f:	adc    eax,0x6e4f86b4
  40cda4:	es and al,0x50
  40cda7:	pushw  ds
  40cda9:	sbb    al,0xe8
  40cdab:	push   esi
  40cdac:	xchg   DWORD PTR [esi-0x1517be02],eax
  40cdb2:	dec    BYTE PTR [esi-0x6]
  40cdb5:	push   esp
  40cdb6:	or     ebp,ecx
  40cdb8:	pop    edi
  40cdb9:	fwait
  40cdba:	jmp    0x40ce26
  40cdbc:	jmp    0x3304243f
  40cdc1:	cli    
  40cdc2:	cmp    BYTE PTR [esi],ch
  40cdc4:	es sbb al,0xe8
  40cdc7:	xchg   ebp,eax
  40cdc8:	dec    edx
  40cdc9:	xchg   esi,edi
  40cdcb:	jo     0x40ce43
  40cdcd:	mov    BYTE PTR [edx+0x413c1fd4],cl
  40cdd3:	jmp    0x7d41138a
  40cdd8:	inc    esi
  40cdd9:	cld    
  40cdda:	retf   0x73a5
  40cddd:	adc    al,0x57
  40cddf:	add    DWORD PTR [eax+edi*1+0x0],edi
  40cde3:	jmp    0x46b42221
  40cde8:	add    BYTE PTR [eax],al
  40cdea:	cld    
  40cdeb:	jnp    0x40cdc6
  40cded:	inc    ebp
  40cdee:	pushf  
  40cdef:	test   DWORD PTR [edx],ecx
  40cdf1:	test   eax,0x2488e11e
  40cdf6:	int    0x85
  40cdf8:	je     0x40cdbb
  40cdfa:	pop    eax
  40cdfb:	sub    bh,bh
  40cdfd:	xor    al,0x2d
  40cdff:	jl     0x40cd86
  40ce01:	mov    dh,0xb5
  40ce03:	test   esi,edi
  40ce05:	xor    al,0xad
  40ce07:	cld    
  40ce08:	sbb    esp,DWORD PTR [esi+0x20e81c1f]
  40ce0e:	pushf  
  40ce0f:	test   esi,edi
  40ce11:	xchg   esi,eax
  40ce12:	pop    ds
  40ce13:	mov    WORD PTR [ecx-0x36],gs
  40ce16:	int    0xff
  40ce18:	pop    es
  40ce19:	add    al,al
  40ce1b:	ss (bad) 
  40ce1d:	(bad)  
  40ce1e:	fistp  QWORD PTR [edx]
  40ce20:	fiadd  WORD PTR [ecx+ecx*1+0x10]
  40ce24:	push   DWORD PTR [ebp-0x40]
  40ce27:	mov    edx,0xa7cf5e73
  40ce2c:	or     eax,eax
  40ce2e:	test   BYTE PTR fs:[esi-0x1],cl
  40ce32:	push   ebp
  40ce33:	stos   BYTE PTR es:[edi],al
  40ce34:	dec    esi
  40ce35:	inc    DWORD PTR ds:0x466ce81a
  40ce3b:	test   al,0xfd
  40ce3d:	call   0x40198a
  40ce42:	pop    edi
  40ce43:	push   ds
  40ce44:	clc    
  40ce45:	call   0x4019ca
  40ce4a:	dec    esp
  40ce4b:	fs mov esi,0x1f0000b9
  40ce51:	test   al,0xfd
  40ce53:	call   FWORD PTR [edx]
  40ce55:	div    DWORD PTR [esi]
  40ce57:	pop    es
  40ce58:	lds    ecx,FWORD PTR [ebp-0x57d38a03]
  40ce5e:	jae    0x40ce68
  40ce60:	inc    eax
  40ce61:	xchg   BYTE PTR [esi-0x1],dl
  40ce64:	fisttp WORD PTR [ecx-0x37]
  40ce67:	ret    0x11d4
  40ce6a:	push   ebp
  40ce6b:	mov    ebx,esp
  40ce6d:	test   eax,0xcae00c73
  40ce72:	pop    esp
  40ce73:	(bad)  
  40ce74:	fist   WORD PTR ds:0x399d74c0
  40ce7a:	in     eax,dx
  40ce7b:	inc    esp
  40ce7c:	pop    ecx
  40ce7d:	adc    BYTE PTR [eax-0x18],dl
  40ce80:	pop    ebx
  40ce81:	dec    edx
  40ce82:	(bad)  
  40ce83:	(bad)  
  40ce84:	cmp    BYTE PTR [ecx-0x56d7ef8d],ch
  40ce8a:	jae    0x40ce94
  40ce8c:	mov    al,ds:0x9fffd486
  40ce91:	mov    eax,0x9e315a6c
  40ce96:	call   0xba55:0x26773c8
  40ce9d:	lahf   
  40ce9e:	xchg   bl,al
  40cea0:	pop    ecx
  40cea1:	push   ds
  40cea2:	cs add bl,cl
  40cea5:	rcr    BYTE PTR [ecx-0x756cc68c],0x56
  40ceac:	inc    esi
  40cead:	out    dx,al
  40ceae:	mov    WORD PTR [ebp+edi*1+0x2],es
  40ceb2:	fnstenv [eax+eax*1+0x0]
  40ceb6:	or     DWORD PTR [edx+eax*1+0xe7b6e80],edi
  40cebd:	pop    ecx
  40cebe:	cdq    
  40cebf:	jecxz  0x40cf00
  40cec1:	inc    ecx
  40cec2:	xor    DWORD PTR [esi+0x7b45d9aa],ebx
  40cec8:	add    cl,BYTE PTR [ebx]
  40ceca:	icebp  
  40cecb:	mov    esi,0x301956d6
  40ced0:	daa    
  40ced1:	(bad)  
  40ced2:	inc    BYTE PTR [ecx-0xbbc8c3e]
  40ced8:	inc    eax
  40ced9:	clc    
  40ceda:	out    dx,al
  40cedb:	lahf   
  40cedc:	call   0xc908:0x110e4b69
  40cee3:	in     al,dx
  40cee4:	call   0x5bf8:0xf7dd6fe
  40ceeb:	push   edi
  40ceec:	cdq    
  40ceed:	je     0x40cf28
  40ceef:	arpl   WORD PTR [ebx],bx
  40cef1:	(bad)  
  40cef2:	mov    esi,0xb9749965
  40cef7:	shl    dh,1
  40cef9:	(bad)  
  40cefa:	and    al,0x73
  40cefc:	stos   BYTE PTR es:[edi],al
  40cefd:	imul   esp,DWORD PTR [esi+0x24fe994d],0x53
  40cf04:	stos   BYTE PTR es:[edi],al
  40cf05:	std    
  40cf06:	clc    
  40cf07:	mov    ebp,0xbb42fb99
  40cf0c:	pop    ebx
  40cf0d:	inc    BYTE PTR [esi-0x7f6559ed]
  40cf13:	mov    ch,0xe0
  40cf15:	add    bh,ah
  40cf17:	lods   al,BYTE PTR ds:[esi]
  40cf18:	xchg   ebp,eax
  40cf19:	adc    BYTE PTR [eax],al
  40cf1b:	add    BYTE PTR [ebp-0x7c],ch
  40cf1e:	adc    ecx,DWORD PTR [ecx+ebx*2]
  40cf21:	lock sbb eax,0xafe45f9b
  40cf27:	lds    esi,FWORD PTR [edx]
  40cf29:	adc    al,0x1c
  40cf2b:	(bad)  
  40cf2c:	pop    edx
  40cf2d:	nop
  40cf2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf2f:	xchg   edi,eax
  40cf30:	(bad)  
  40cf32:	call   0xd3c5c964
  40cf37:	or     ecx,DWORD PTR [ecx+0xe]
  40cf3a:	mov    esi,0xa38e2f9a
  40cf3f:	xchg   edi,eax
  40cf40:	mov    ebx,0x71ebbc41
  40cf45:	adc    al,0x69
  40cf47:	ficom  DWORD PTR [esi]
  40cf49:	or     BYTE PTR [ecx-0x5826f6d5],ch
  40cf4f:	add    ebx,DWORD PTR [esi+0x6c]
  40cf52:	mov    eax,0xf183fee7
  40cf57:	ret    
  40cf58:	xor    BYTE PTR [edi],0xbe
  40cf5b:	stos   DWORD PTR es:[edi],eax
  40cf5c:	arpl   di,si
  40cf5e:	or     eax,0x7c543b9a
  40cf63:	cld    
  40cf64:	outs   dx,BYTE PTR ds:[esi]
  40cf65:	in     al,dx
  40cf66:	call   0x8103956e
  40cf6b:	add    eax,0x33e8d574
  40cf70:	(bad)  
  40cf71:	or     ecx,esi
  40cf73:	stos   DWORD PTR es:[edi],eax
  40cf74:	push   ecx
  40cf75:	add    bl,dh
  40cf77:	cdq    
  40cf78:	into   
  40cf79:	xchg   ecx,eax
  40cf7a:	das    
  40cf7b:	cdq    
  40cf7c:	scas   eax,DWORD PTR es:[edi]
  40cf7d:	sbb    BYTE PTR [ecx],0xc4
  40cf80:	add    BYTE PTR [eax],al
  40cf82:	jmp    0x9fda950a
  40cf87:	xchg   BYTE PTR [esi+0x92fdc],cl
  40cf8d:	test   eax,0xaefc08a8
  40cf92:	ss or  al,0xe8
  40cf95:	fwait
  40cf96:	inc    ebx
  40cf97:	cmp    esi,0x3e
  40cf9a:	push   0x55
  40cf9c:	add    ebp,ecx
  40cf9e:	pop    ds
  40cf9f:	(bad)  
  40cfa0:	jmp    0x40d00c
  40cfa2:	jno    0x40d01f
  40cfa4:	add    ah,0xfc
  40cfa7:	xor    BYTE PTR [ecx-0x17],al
  40cfaa:	xor    cl,BYTE PTR [ecx]
  40cfac:	add    al,0xa0
  40cfae:	ja     0x40cfbf
  40cfb0:	add    BYTE PTR [ebx],al
  40cfb2:	sub    eax,0x99d2ffee
  40cfb7:	xor    BYTE PTR [ebp+ebp*8+0x4],0x14
  40cfbc:	push   0xffffffe9
  40cfbe:	fidivr DWORD PTR [eax]
  40cfc0:	sub    ebp,ecx
  40cfc2:	xor    cl,BYTE PTR [ebp+0x7b84144]
  40cfc8:	clc    
  40cfc9:	push   ecx
  40cfca:	arpl   bp,bx
  40cfcc:	(bad)  
  40cfcd:	ss mov edx,0x362efbd7
  40cfd3:	jl     0x40cfd3
  40cfd5:	pushf  
  40cfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd7:	in     al,dx
  40cfd8:	(bad)  
  40cfd9:	push   ds
  40cfda:	adc    BYTE PTR es:[edx-0x17],ch
  40cfde:	sbb    al,0x14
  40cfe0:	call   0xfec3a5ca
  40cfe5:	je     0x40cfe7
  40cfe7:	add    BYTE PTR [esi],bl
  40cfe9:	mov    BYTE PTR [edi-0x6d],cl
  40cfec:	xor    ch,dh
  40cfee:	inc    DWORD PTR [edx-0x1200133c]
  40cff4:	aaa    
  40cff5:	cmp    dh,0xfc
  40cff8:	pop    esp
  40cff9:	xor    DWORD PTR [ecx-0x17],eax
  40cffc:	aaa    
  40cffd:	ret    
  40cffe:	push   cs
  40cfff:	popa   
  40d000:	mov    edx,0xb5e9fe82
  40d005:	out    0xf3,eax
  40d007:	add    BYTE PTR [ebx],ah
  40d009:	mov    DWORD PTR [ebx+0x6a46d845],ecx
  40d00f:	add    dl,dh
  40d011:	mov    DWORD PTR [eax+0x0],ebp
  40d014:	lock je 0x40d05a
  40d017:	inc    ecx
  40d018:	mov    BYTE PTR [ebx+0x4897f473],bl
  40d01e:	adc    BYTE PTR [ebp-0xa0e168],al
  40d024:	cmp    eax,0x38abe6a8
  40d029:	popf   
  40d02a:	std    
  40d02b:	mov    DWORD PTR ds:0x4cc009b0,ecx
  40d031:	into   
  40d032:	(bad)  
  40d033:	jne    0x40cfe5
  40d035:	scas   al,BYTE PTR es:[edi]
  40d036:	jmp    0x40d090
  40d038:	xlat   BYTE PTR ds:[ebx]
  40d039:	fwait
  40d03a:	xchg   DWORD PTR [ebp-0x1c],eax
  40d03d:	fwait
  40d03e:	jae    0x40d030
  40d040:	jo     0x40d029
  40d042:	push   eax
  40d043:	push   DWORD PTR [edi-0x64]
  40d046:	jae    0x40d030
  40d048:	ja     0x40d05c
  40d04a:	in     al,dx
  40d04b:	inc    DWORD PTR [eax]
  40d04d:	add    ch,bl
  40d04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d050:	out    0x2c,al
  40d052:	test   eax,0x580bfd9c
  40d057:	adc    DWORD PTR [ebx],ebx
  40d059:	push   0xbeef1608
  40d05e:	pop    ss
  40d05f:	adc    cl,BYTE PTR [eax]
  40d061:	call   0x400373
  40d066:	aaa    
  40d067:	adc    ch,al
  40d069:	call   FWORD PTR [ebp-0x47]
  40d06c:	std    
  40d06d:	jne    0x40d04f
  40d06f:	lods   eax,DWORD PTR ds:[esi]
  40d070:	pop    ebx
  40d071:	push   ebp
  40d072:	(bad)  
  40d073:	test   eax,0xaec475fd
  40d078:	xchg   esp,eax
  40d079:	pop    eax
  40d07a:	xlat   BYTE PTR ds:[ebx]
  40d07b:	test   eax,0xb0d875fd
  40d080:	stc    
  40d081:	dec    edi
  40d082:	xor    DWORD PTR [edx-0x6a],ebp
  40d085:	mov    bh,ah
  40d087:	data16 mov dl,BYTE PTR [ecx]
  40d08a:	sahf   
  40d08b:	inc    eax
  40d08c:	nop
  40d08d:	inc    BYTE PTR [ebx]
  40d08f:	adc    DWORD PTR [ebp+0x1a538d74],0x58
  40d096:	xchg   BYTE PTR [edx+0x6b2dc1cc],dh
  40d09c:	das    
  40d09d:	mov    eax,DWORD PTR [ebp+0x590c10a2]
  40d0a3:	out    0x37,al
  40d0a5:	jmp    DWORD PTR [esi+0x76]
  40d0a8:	ret    0x873
  40d0ab:	and    ecx,DWORD PTR [eax]
  40d0ad:	inc    ebp
  40d0ae:	lock push 0x32
  40d0b1:	call   0x2721d0b6
  40d0b6:	xchg   edi,eax
  40d0b7:	(bad)  
  40d0b8:	loope  0x40d0cc
  40d0ba:	inc    ebp
  40d0bb:	mov    edi,0x2a6af1
  40d0c0:	xor    edx,edx
  40d0c2:	push   ebp
  40d0c3:	addr16 push ebx
  40d0c5:	mov    al,0x43
  40d0c7:	add    BYTE PTR [ecx+0x90810d2],al
  40d0cd:	arpl   WORD PTR [ecx],bx
  40d0cf:	call   DWORD PTR [esi]
  40d0d1:	jecxz  0x40d0a9
  40d0d3:	push   edi
  40d0d4:	push   cs
  40d0d5:	dec    edx
  40d0d6:	xchg   edi,eax
  40d0d7:	je     0x40d10e
  40d0d9:	sar    DWORD PTR [ebp+0x5b],cl
  40d0dc:	(bad)  
  40d0dd:	cmp    DWORD PTR [ebx],ecx
  40d0df:	sar    BYTE PTR [ebp+0x64],0x2a
  40d0e3:	adc    esi,DWORD PTR [esp+ebp*4+0x2]
  40d0e7:	push   eax
  40d0e8:	fld    DWORD PTR [ebp-0x652100ca]
  40d0ee:	sub    al,BYTE PTR [ecx-0x6a]
  40d0f1:	stos   BYTE PTR es:[edi],al
  40d0f2:	add    ch,BYTE PTR [eax+0x31]
  40d0f5:	imul   esp,DWORD PTR [ebp+0x3f4d59bd],0x41
  40d0fc:	xor    DWORD PTR [ecx+edi*1],edx
  40d0ff:	xchg   edi,eax
  40d100:	cmp    eax,0x2bd2d10c
  40d105:	adc    ebp,0xcddc38ab
  40d10b:	xchg   esi,eax
  40d10c:	imul   edx,DWORD PTR [ebp-0x10],0xcc8cfc03
  40d113:	xor    BYTE PTR [edx+0x7f],0x42
  40d117:	add    al,0x0
  40d119:	add    BYTE PTR [ebx],bl
  40d11b:	inc    eax
  40d11c:	scas   al,BYTE PTR es:[edi]
  40d11d:	adc    BYTE PTR [ecx],ch
  40d11f:	ins    BYTE PTR es:[edi],dx
  40d120:	aam    0x30
  40d122:	jbe    0x40d0a4
  40d124:	outs   dx,DWORD PTR ds:[esi]
  40d125:	inc    eax
  40d126:	ins    DWORD PTR es:[edi],dx
  40d127:	in     eax,dx
  40d128:	repnz xchg esi,eax
  40d12a:	fisttp QWORD PTR [ebx]
  40d12c:	adc    DWORD PTR [ebx],0x2985805e
  40d132:	adc    al,BYTE PTR [ecx-0x6a6f40d]
  40d138:	jne    0x40d0d0
  40d13a:	inc    edi
  40d13b:	in     eax,dx
  40d13c:	int3   
  40d13d:	xchg   esi,eax
  40d13e:	lds    ecx,FWORD PTR [ebx]
  40d140:	push   ecx
  40d141:	aaa    
  40d142:	sbb    BYTE PTR ss:[ebp-0x6a],0xa5
  40d147:	adc    BYTE PTR [ebp+0x10],0x39
  40d14b:	ins    BYTE PTR es:[edi],dx
  40d14c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14d:	xor    BYTE PTR [esi],bl
  40d14f:	sub    BYTE PTR [edi],0xc1
  40d152:	xor    dl,BYTE PTR [esp+edx*4]
  40d155:	mov    bl,BYTE PTR [edx]
  40d157:	cmp    BYTE PTR [ebx-0x72f2e6f9],0x96
  40d15e:	dec    DWORD PTR [ebx]
  40d160:	sub    DWORD PTR [edi],ecx
  40d162:	dec    ebp
  40d163:	in     al,dx
  40d164:	fild   WORD PTR [eax+0x70]
  40d167:	adc    al,0xb9
  40d169:	stos   DWORD PTR es:[edi],eax
  40d16a:	(bad)
  40d16d:	xchg   esi,eax
  40d16e:	outs   dx,BYTE PTR ds:[esi]
  40d16f:	in     al,dx
  40d170:	call   0x90ff9778
  40d175:	inc    edi
  40d176:	je     0x40d14d
  40d178:	(bad)  
  40d179:	call   0xe1b55080
  40d17e:	add    BYTE PTR [eax],al
  40d180:	mov    bh,al
  40d182:	jnp    0x40d16a
  40d184:	pushf  
  40d185:	ja     0x40d117
  40d187:	les    edi,FWORD PTR ss:[esi-0x38]
  40d18b:	stos   DWORD PTR es:[edi],eax
  40d18c:	xor    eax,0xc9625514
  40d191:	xchg   edx,eax
  40d192:	ret    
  40d193:	lds    ecx,FWORD PTR [ebx+0x14]
  40d196:	push   0xfffffffc
  40d198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d199:	or     BYTE PTR [eax],cl
  40d19b:	shl    eax,0xe2
  40d19e:	(bad)  
  40d19f:	scas   al,BYTE PTR es:[edi]
  40d1a0:	stos   BYTE PTR es:[edi],al
  40d1a1:	fdivr  st,st(3)
  40d1a3:	adc    edi,DWORD PTR [ebx+0x7e]
  40d1a6:	je     0x40d199
  40d1a8:	call   0x22ed:0xbc96fead
  40d1af:	mov    gs,WORD PTR [esi]
  40d1b1:	or     al,0xe8
  40d1b3:	dec    ecx
  40d1b4:	mov    esp,0x4913fe7e
  40d1b9:	jle    0x40d22f
  40d1bb:	loope  0x40d157
  40d1bd:	test   eax,0x7ea46efe
  40d1c2:	je     0x40d229
  40d1c4:	pushf  
  40d1c5:	or     BYTE PTR [eax],cl
  40d1c7:	push   ecx
  40d1c8:	mul    dl
  40d1ca:	(bad)  
  40d1cb:	push   esi
  40d1cc:	cli    
  40d1cd:	push   esp
  40d1ce:	add    ebp,ecx
  40d1d0:	dec    edi
  40d1d1:	mov    ebp,ebx
  40d1d3:	push   0xfffffff1
  40d1d5:	xchg   BYTE PTR [esi-0x2d],dl
  40d1d8:	xor    ch,dl
  40d1da:	cmp    eax,0xe80c3636
  40d1df:	mov    ecx,0x70fe7f4e
  40d1e4:	add    BYTE PTR [eax],al
  40d1e6:	or     BYTE PTR ss:[edx+0x412c3fdc],0xe9
  40d1ee:	mov    dl,0x3d
  40d1f0:	add    BYTE PTR [ebp+0x53ec1d],dl
  40d1f6:	test   ecx,edx
  40d1f8:	call   DWORD PTR [esi+0x20]
  40d1fb:	frstor [edi]
  40d1fd:	add    al,bl
  40d1ff:	or     eax,eax
  40d201:	je     0x40d1f5
  40d203:	das    
  40d204:	call   0xfdea3ae7
  40d209:	or     ebx,eax
  40d20b:	push   cs
  40d20c:	and    BYTE PTR [ecx+0x66a055],cl
  40d212:	mov    BYTE PTR [edi+0x3f4d68bc],dh
  40d218:	inc    ecx
  40d219:	add    bh,cl
  40d21b:	or     eax,0x1045fff8
  40d220:	call   0xfdea15ed
  40d225:	call   DWORD PTR ds:0x26f1e6a0
  40d22b:	test   eax,0x528bfcfd
  40d230:	mov    bh,0xff
  40d232:	scas   eax,DWORD PTR es:[edi]
  40d233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d234:	std    
  40d235:	repnz (bad) 
  40d237:	pop    edx
  40d238:	add    eax,0x73a7f175
  40d23d:	cld    
  40d23e:	mov    edi,0x26e8080d
  40d243:	inc    esp
  40d244:	(bad)  
  40d245:	jmp    FWORD PTR [edi+0x49]
  40d248:	rol    BYTE PTR [eax+eax*1],0x0
  40d24c:	sbb    BYTE PTR [edi],ch
  40d24e:	mov    ebp,esp
  40d250:	fwait
  40d251:	mov    ebp,0x11f257e2
  40d256:	push   0x3f
  40d258:	outs   dx,DWORD PTR ds:[esi]
  40d259:	push   cs
  40d25a:	or     al,ch
  40d25c:	jo     0x40d2a2
  40d25e:	(bad)  
  40d25f:	call   DWORD PTR [ecx+0xd8bfc3e]
  40d265:	movaps xmm0,XMMWORD PTR [ecx+0x8]
  40d269:	xchg   edx,eax
  40d26a:	cmp    eax,0x6840c400
  40d26f:	bound  esi,QWORD PTR [ecx]
  40d271:	mov    al,0x41
  40d273:	add    BYTE PTR [esi+0x31294013],al
  40d279:	imul   eax,DWORD PTR [edi],0xffffffc0
  40d27c:	inc    ebp
  40d27d:	popa   
  40d27e:	sub    ebp,eax
  40d280:	dec    edi
  40d281:	mov    edx,DWORD PTR [ebx+0xf2b2afe]
  40d287:	and    BYTE PTR [eax+0x31678c30],ch
  40d28d:	imul   esp,DWORD PTR [ecx+0x48d219bd],0x41
  40d294:	xor    DWORD PTR [esi+0x18],ecx
  40d297:	clc    
  40d298:	xchg   esi,eax
  40d299:	inc    eax
  40d29a:	cld    
  40d29b:	out    0xe1,eax
  40d29d:	rcl    DWORD PTR [edx-0x73bf7902],1
  40d2a3:	out    0xf8,eax
  40d2a5:	and    al,0x93
  40d2a7:	(bad)  
  40d2a8:	jne    0x40d304
  40d2aa:	ret    0x6eb8
  40d2ad:	sahf   
  40d2ae:	xchg   edx,eax
  40d2af:	inc    BYTE PTR [eax]
  40d2b1:	add    BYTE PTR [ebx-0x2b],ah
  40d2b4:	retf   
  40d2b5:	push   es
  40d2b6:	in     al,0xe3
  40d2b8:	sbb    eax,DWORD PTR [eax]
  40d2ba:	xor    DWORD PTR [esi+0x37da6751],esp
  40d2c0:	inc    ebp
  40d2c1:	add    cl,bl
  40d2c3:	scas   al,BYTE PTR es:[edi]
  40d2c4:	dec    eax
  40d2c5:	inc    ecx
  40d2c6:	xor    esi,ebp
  40d2c8:	sbb    BYTE PTR [eax],cl
  40d2ca:	dec    ecx
  40d2cb:	gs or  eax,0x2612eff
  40d2d1:	push   0x43b09d
  40d2d6:	mov    esi,ebp
  40d2d8:	dec    eax
  40d2d9:	inc    ecx
  40d2da:	xor    esi,edx
  40d2dc:	fcomp  DWORD PTR [ebx+0x58]
  40d2df:	lods   al,BYTE PTR ds:[esi]
  40d2e0:	add    ch,al
  40d2e2:	pop    esp
  40d2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e4:	xchg   ecx,eax
  40d2e5:	(bad)  
  40d2e6:	test   al,0xb7
  40d2e8:	sahf   
  40d2e9:	imul   esi,DWORD PTR [ecx],0x75849114
  40d2ef:	shr    eax,cl
  40d2f1:	sbb    eax,esi
  40d2f3:	(bad)  
  40d2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f5:	add    ebx,esi
  40d2f7:	inc    esi
  40d2f8:	lods   eax,DWORD PTR ds:[esi]
  40d2f9:	fdiv   QWORD PTR [ecx+0x14]
  40d2fc:	adc    edi,ecx
  40d2fe:	imul   edi,DWORD PTR [ebp-0x3],0x82886d7c
  40d305:	add    ecx,DWORD PTR [ecx-0x71]
  40d308:	mov    ds:0x85ec3144,eax
  40d30d:	dec    eax
  40d30e:	lock adc ebx,esi
  40d311:	fmul   DWORD PTR [edx]
  40d313:	sub    ebp,DWORD PTR [eax]
  40d315:	add    al,0x0
  40d317:	add    BYTE PTR [ecx-0x686ccfce],cl
  40d31d:	mov    ch,BYTE PTR [ebx]
  40d31f:	xchg   esp,eax
  40d320:	mov    ebp,0x1933c4d6
  40d325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d326:	sub    eax,DWORD PTR [ebp+0x31]
  40d329:	in     al,dx
  40d32a:	dec    ebp
  40d32b:	dec    eax
  40d32c:	lock adc esp,DWORD PTR [esi+0x282b0ad8]
  40d333:	add    al,0x59
  40d335:	push   ss
  40d336:	xor    BYTE PTR [ebx-0x63dc75a1],dl
  40d33c:	mov    bl,0xfe
  40d33e:	jl     0x40d343
  40d340:	(bad)
  40d343:	adc    BYTE PTR [ecx+0x13],al
  40d346:	std    
  40d347:	inc    ebp
  40d348:	mov    dl,0xfe
  40d34a:	jl     0x40d34f
  40d34c:	mov    ebp,0x3104d13f
  40d351:	imul   ebx,DWORD PTR [esi+0x410c9d92],0x37
  40d358:	cmp    DWORD PTR [ebx+0x4d],0xffffff92
  40d35c:	popf   
  40d35d:	add    BYTE PTR [ebp+0x18],0x39
  40d361:	ins    BYTE PTR es:[edi],dx
  40d362:	xchg   ecx,eax
  40d363:	xor    eax,0x35ff7c06
  40d368:	sbb    DWORD PTR [esi+edi*8-0x608c054c],eax
  40d36f:	mov    ebx,0x94fe7ac3
  40d374:	(bad)  
  40d375:	jp     0x40d3eb
  40d377:	loope  0x40d333
  40d379:	mov    al,ds:0xe51
  40d37e:	ret    
  40d37f:	jp     0x40d3f5
  40d381:	or     eax,0xfee800a3
  40d386:	push   ds
  40d387:	or     al,0xe8
  40d389:	xchg   edx,eax
  40d38a:	add    al,0x7b
  40d38c:	(bad)  
  40d38d:	out    dx,al
  40d38e:	push   ds
  40d38f:	push   0x7b667de7
  40d394:	(bad)  
  40d395:	fidivr WORD PTR [esi]
  40d397:	and    bh,0x65
  40d39a:	data16 jnp 0x40d39b
  40d39d:	into   
  40d39e:	ds test bh,ah
  40d3a1:	ins    DWORD PTR es:[edi],dx
  40d3a2:	inc    esi
  40d3a3:	jnp    0x40d3a3
  40d3a5:	mov    esi,0x35e76c1e
  40d3aa:	inc    esi
  40d3ab:	jnp    0x40d3ab
  40d3ad:	scas   al,BYTE PTR es:[edi]
  40d3ae:	push   ds
  40d3af:	js     0x40d3af
  40d3b1:	sbb    al,0x6d
  40d3b3:	jae    0x40d3a3
  40d3b5:	cmp    eax,eax
  40d3b7:	jp     0x40d417
  40d3b9:	mov    al,ds:0x34001777
  40d3be:	aam    0x6e
  40d3c0:	sub    BYTE PTR [ebp+0x12ffeda1],0xed
  40d3c7:	jp     0x40d43d
  40d3c9:	loope  0x40d365
  40d3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3cc:	push   ecx
  40d3cd:	outs   dx,BYTE PTR ds:[esi]
  40d3ce:	mov    al,ds:0x4f65448c
  40d3d3:	adc    al,0x6a
  40d3d5:	jmp    0xa8853b24
  40d3da:	xor    ch,ah
  40d3dc:	(bad)  
  40d3dd:	call   0x1286814
  40d3e2:	add    BYTE PTR [eax],al
  40d3e4:	aam    0x2e
  40d3e6:	(bad)  
  40d3e7:	inc    DWORD PTR [ebx]
  40d3e9:	push   edi
  40d3ea:	jb     0x40d40f
  40d3ec:	cwde   
  40d3ed:	sahf   
  40d3ee:	add    DWORD PTR [edi+0x47],ebx
  40d3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f2:	or     eax,eax
  40d3f4:	int3   
  40d3f5:	ins    DWORD PTR es:[edi],dx
  40d3f6:	dec    esi
  40d3f7:	push   0xbeef16d8
  40d3fc:	mov    al,0x54
  40d3fe:	inc    ebx
  40d3ff:	inc    ecx
  40d400:	enter  0xff46,0x75
  40d404:	rcr    BYTE PTR [esi-0x5c388611],0xe6
  40d40b:	sbb    eax,0xfffda39d
  40d410:	cmp    eax,0xa075fd8b
  40d415:	sahf   
  40d416:	mov    ss,WORD PTR [edx-0x79]
  40d419:	mov    ds:0x168cc2c7,eax
  40d41e:	push   ebp
  40d41f:	mov    edx,esp
  40d421:	pop    edx
  40d423:	cld    
  40d424:	das    
  40d425:	sbb    al,BYTE PTR [eax]
  40d427:	push   0x59
  40d429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d42a:	jae    0x40d434
  40d42c:	jo     0x40d48d
  40d42e:	push   eax
  40d42f:	inc    edi
  40d431:	std    
  40d432:	inc    ebx
  40d433:	cld    
  40d434:	jecxz  0x40d47f
  40d436:	jae    0x40d460
  40d438:	sbb    DWORD PTR [eax],edx
  40d43a:	cmp    BYTE PTR [edi],0x48
  40d43d:	and    al,BYTE PTR [eax+0x68]
  40d440:	mov    ecx,0x2f0040d1
  40d445:	cwde   
  40d446:	jl     0x40d46f
  40d448:	add    BYTE PTR [eax],al
  40d44a:	pop    eax
  40d44b:	push   ss
  40d44c:	or     eax,eax
  40d44e:	cmp    al,0x6f
  40d450:	push   ebp
  40d451:	call   0x40193f
  40d456:	and    edx,DWORD PTR [esi+0x72]
  40d459:	sbb    eax,ebp
  40d45b:	sbb    eax,0xd2310000
  40d460:	push   eax
  40d461:	addr16 push ds
  40d463:	mov    cl,0x41
  40d465:	add    BYTE PTR [ecx-0x2e],ah
  40d468:	adc    eax,0x9eb1908
  40d46d:	(bad)  
  40d46e:	(bad)  
  40d46f:	ror    DWORD PTR [ebx+0x53],cl
  40d472:	imul   BYTE PTR [edx]
  40d474:	(bad)  
  40d475:	xor    dh,cl
  40d477:	hlt    
  40d478:	(bad)  
  40d479:	(bad)  
  40d47a:	out    0x1a,al
  40d47c:	xchg   ebp,eax
  40d47d:	lods   eax,DWORD PTR ds:[esi]
  40d47e:	sbb    DWORD PTR [edx+0x15],ebp
  40d481:	rcl    dh,0xa0
  40d484:	mov    ?,esi
  40d486:	inc    esp
  40d487:	sbb    DWORD PTR [edx-0x71859ce1],0x5e
  40d48e:	call   0x5c40dbc0
  40d493:	neg    BYTE PTR [esi+0x366f7582]
  40d499:	push   0x31
  40d49b:	in     eax,0x41
  40d49d:	jmp    DWORD PTR [ebx+esi*2]
  40d4a0:	call   0xf488:0x8e4a00c1
  40d4a7:	dec    esi
  40d4a8:	jp     0x40d4e6
  40d4aa:	cld    
  40d4ab:	and    al,BYTE PTR [ebp+0x0]
  40d4ae:	add    BYTE PTR [eax],al
  40d4b0:	mov    cl,0x82
  40d4b2:	add    dh,BYTE PTR [ecx+esi*8-0x2e]
  40d4b6:	push   es
  40d4b7:	inc    esi
  40d4b8:	lock push 0x35
  40d4bb:	call   0x4326f4
  40d4c0:	sub    ch,BYTE PTR [ebx-0x6d01dce9]
  40d4c6:	rcr    DWORD PTR [ebp+0x4e],cl
  40d4c9:	xchg   edx,eax
  40d4ca:	cli    
  40d4cb:	mov    edi,0x683273bd
  40d4d0:	xor    DWORD PTR [ebx-0x63],ebp
  40d4d3:	mov    ebp,0x414458c9
  40d4d8:	xor    DWORD PTR [ecx+edi*4],edx
  40d4db:	mov    ds,WORD PTR [ebp-0x6611aef4]
  40d4e1:	jns    0x40d538
  40d4e3:	pushf  
  40d4e4:	push   0xa8f4de0
  40d4e9:	inc    ebp
  40d4ea:	sub    DWORD PTR [ebp+0x7],ecx
  40d4ed:	jns    0x40d52c
  40d4ef:	pop    DWORD PTR [eax]
  40d4f1:	stos   BYTE PTR es:[edi],al
  40d4f2:	lock push es
  40d4f4:	jl     0x40d54a
  40d4f6:	ret    0xd6e2
  40d4f9:	pop    eax
  40d4fb:	mov    fs,edi
  40d4fd:	or     al,0x29
  40d4ff:	sbb    BYTE PTR ds:0x7045f0ec,dl
  40d505:	adc    al,0xb9
  40d507:	fwait
  40d508:	sub    esp,ebx
  40d50a:	add    eax,0xe8ec768f
  40d50f:	add    ecx,esi
  40d511:	mov    ecx,0xfd80
  40d516:	ins    BYTE PTR es:[edi],dx
  40d517:	shr    eax,cl
  40d519:	xor    ebp,DWORD PTR [esi-0x6e640f02]
  40d51f:	sti    
  40d520:	fisttp QWORD PTR [esi-0x70c2f96a]
  40d526:	xchg   edi,eax
  40d527:	in     eax,dx
  40d528:	or     DWORD PTR [ebp+eiz*8+0x3b8ec5db],ebx
  40d52f:	push   esp
  40d530:	xor    al,0xe8
  40d532:	push   ss
  40d533:	xor    al,0x2f
  40d535:	inc    ebp
  40d536:	xor    esp,esp
  40d538:	rcr    BYTE PTR [ecx+0x33a57907],0xd9
  40d53f:	adc    ebp,ecx
  40d541:	sahf   
  40d542:	pushf  
  40d543:	jmp    0x40d52b
  40d545:	inc    ebp
  40d546:	lock adc edi,DWORD PTR [ecx]
  40d549:	pop    ebp
  40d54b:	or     edx,DWORD PTR [ecx+0x7d78be51]
  40d551:	fwait
  40d552:	pop    esp
  40d553:	in     al,0xff
  40d555:	jne    0x40d4fe
  40d557:	jns    0x40d5cd
  40d559:	ins    DWORD PTR es:[edi],dx
  40d55a:	mov    edi,0x5d510800
  40d55f:	in     eax,0xfe
  40d561:	pop    esi
  40d562:	dec    edi
  40d563:	dec    ebp
  40d564:	shr    ebp,0x32
  40d567:	loope  0x40d4f3
  40d569:	cmp    eax,0x74ef53b3
  40d56e:	jns    0x40d4f4
  40d570:	dec    edi
  40d571:	sbb    DWORD PTR ds:[eax],ecx
  40d574:	call   0xfeb81b17
  40d579:	loop   0x40d57b
  40d57b:	add    dl,dh
  40d57d:	add    esi,DWORD PTR [edx]
  40d57f:	push   0x41
  40d581:	js     0x40d584
  40d583:	xchg   edi,eax
  40d584:	ror    DWORD PTR [edx-0x6af3eebc],cl
  40d58a:	aaa    
  40d58b:	mov    ebp,0x61900d0
  40d590:	sub    DWORD PTR [edi+edi*8],esp
  40d593:	je     0x40d54f
  40d595:	outs   dx,DWORD PTR ds:[esi]
  40d596:	and    eax,0xfe76a799
  40d59b:	je     0x40d55b
  40d59d:	jbe    0x40d613
  40d59f:	loope  0x40d555
  40d5a1:	add    BYTE PTR [eax],cl
  40d5a3:	rcr    DWORD PTR [edi-0x1c],1
  40d5a6:	(bad)  
  40d5a7:	(bad)  
  40d5a8:	push   ss
  40d5a9:	shr    bh,1
  40d5ab:	cmp    DWORD PTR [ebp-0x4b39a740],ebp
  40d5b1:	dec    esp
  40d5b2:	shr    ebp,0x32
  40d5b5:	loope  0x40d541
  40d5b7:	lds    esi,FWORD PTR [eax+0x3543f753]
  40d5bd:	jmp    0x51e8:0xc3ea642
  40d5c4:	and    eax,0xee60fe77
  40d5c9:	ja     0x40d634
  40d5cb:	jmp    0xa8e9f8
  40d5d0:	pop    esi
  40d5d1:	rol    DWORD PTR [eax+0x0],1
  40d5d4:	and    BYTE PTR [edx],dl
  40d5d6:	add    BYTE PTR [eax],al
  40d5d8:	enter  0x7097,0x56
  40d5dc:	lahf   
  40d5dd:	mov    DWORD PTR [ecx],ecx
  40d5df:	rol    BYTE PTR [eax],0x0
  40d5e2:	add    al,0x48
  40d5e4:	xchg   DWORD PTR [ebp-0x70],eax
  40d5e7:	sbb    BYTE PTR [edx+0x46],bh
  40d5ea:	leave  
  40d5eb:	adc    bh,bh
  40d5ed:	jne    0x40d64f
  40d5ef:	cwde   
  40d5f0:	loopne 0x40d617
  40d5f2:	sbb    BYTE PTR [ebx],dl
  40d5f4:	or     eax,eax
  40d5f6:	les    esi,FWORD PTR [ebx-0x3]
  40d5f9:	jne    0x40d63b
  40d5fb:	cwde   
  40d5fc:	add    DWORD PTR [ebp+0x1f],ebx
  40d5ff:	mov    DWORD PTR [esi+0x68],ecx
  40d602:	cmp    cl,BYTE PTR [esi+edi*1+0x0]
  40d606:	rcl    BYTE PTR [edx],0x0
  40d609:	out    dx,eax
  40d60a:	jle    0x40d626
  40d60c:	add    BYTE PTR [eax+0x3f],dl
  40d60f:	pop    ds
  40d610:	or     al,ch
  40d612:	and    BYTE PTR [eax],0xff
  40d615:	jmp    DWORD PTR [eax]
  40d617:	imul   edx,DWORD PTR [ecx-0x1],0xf87387bf
  40d61e:	xor    BYTE PTR [ecx-0x787000af],al
  40d624:	jae    0x40d622
  40d626:	jg     0x40d645
  40d628:	or     al,ch
  40d62a:	adc    al,BYTE PTR [ebx-0x1]
  40d62d:	call   ecx
  40d62f:	push   esp
  40d630:	add    al,BYTE PTR [eax]
  40d632:	and    eax,0xd483eafd
  40d637:	xchg   BYTE PTR [eax+0x0],ch
  40d63a:	repnz retf 
  40d63c:	(bad)  
  40d63d:	jne    0x40d68f
  40d63f:	call   0x4587:0x878f502c
  40d646:	add    BYTE PTR [eax],al
  40d648:	mov    esp,0x3100001a
  40d64d:	mov    cs,WORD PTR [edi+eiz*2-0x44]
  40d651:	cs inc ebx
  40d653:	add    cl,bl
  40d655:	jmp    0x815:0xf6314144
  40d65c:	dec    ecx
  40d65d:	not    BYTE PTR [ebx]
  40d65f:	jmp    FWORD PTR [esi]
  40d661:	out    0x15,eax
  40d663:	cld    
  40d664:	es pop ecx
  40d666:	cli    
  40d667:	out    0x6e,eax
  40d669:	mov    ebx,0x29e8fe8b
  40d66e:	pop    es
  40d66f:	add    BYTE PTR [edx+esi*8-0x62],ah
  40d673:	sub    ch,0xd3
  40d676:	sbb    al,BYTE PTR [eax]
  40d678:	xor    esi,eax
  40d67a:	dec    esp
  40d67b:	(bad)  
  40d67c:	jl     0x40d6f1
  40d67e:	call   0x5cfe:0x8c267e42
  40d685:	jg     0x40d612
  40d687:	je     0x40d6b2
  40d689:	and    ebp,DWORD PTR [ecx+0x4e]
  40d68c:	(bad)  
  40d68d:	push   ds
  40d68e:	mov    WORD PTR [ecx+eiz*1+0x6],?
  40d692:	push   ss
  40d693:	or     cl,bl
  40d695:	(bad)  
  40d696:	cmp    edi,edi
  40d698:	mov    esi,0xb6181476
  40d69d:	clc    
  40d69e:	idiv   dh
  40d6a0:	and    al,0x73
  40d6a2:	call   0x6d67:0x8a6df654
  40d6a9:	sub    eax,0x45
  40d6ae:	xchg   esi,eax
  40d6af:	fdiv   st,st(3)
  40d6b1:	out    0x54,eax
  40d6b3:	adc    BYTE PTR [eax+eax*1],al
  40d6b6:	cmp    ch,BYTE PTR [ebx-0x5af69af0]
  40d6bc:	inc    ecx
  40d6bd:	inc    ecx
  40d6be:	xor    DWORD PTR [ebx+0xa],edx
  40d6c1:	and    esi,DWORD PTR [ecx]
  40d6c3:	imul   edi,DWORD PTR [ebx+0x44],0x69
  40d6c7:	adc    al,0x11
  40d6c9:	mov    edx,0x8ae8d2f4
  40d6ce:	frstor [ebx]
  40d6d0:	add    DWORD PTR [ebx],0xfee91414
  40d6d6:	xchg   BYTE PTR [eax],al
  40d6d8:	out    dx,eax
  40d6d9:	push   es
  40d6da:	hlt    
  40d6db:	jnp    0x40d74c
  40d6dd:	inc    ecx
  40d6de:	and    DWORD PTR [ebp-0x5],esi
  40d6e1:	repz push ss
  40d6e3:	xchg   edi,eax
  40d6e4:	add    DWORD PTR [ebx-0x749f6ed9],ecx
  40d6ea:	mov    ds:0x15417040,al
  40d6ef:	in     al,dx
  40d6f0:	out    0x3,eax
  40d6f2:	push   ds
  40d6f3:	mov    dh,0x4d
  40d6f5:	adc    DWORD PTR [ecx],edi
  40d6f7:	ins    BYTE PTR es:[edi],dx
  40d6f8:	xor    edi,DWORD PTR [edx]
  40d6fa:	(bad)  
  40d6fb:	je     0x40d73a
  40d6fd:	adc    DWORD PTR ds:0xd6fbbb75,esp
  40d703:	das    
  40d704:	sahf   
  40d705:	mov    ah,bh
  40d707:	je     0x40d6a4
  40d709:	xchg   edi,ebx
  40d70b:	(bad)  
  40d70c:	lock fwait
  40d70e:	lahf   
  40d70f:	lds    edx,FWORD PTR ds:0xcf00008b
  40d715:	(bad)  
  40d716:	lock mov bh,BYTE PTR ds:0x29110620
  40d71d:	ins    BYTE PTR es:[edi],dx
  40d71e:	sbb    eax,0x1f74b63a
  40d723:	mov    BYTE PTR [edx+0x14],0x94
  40d727:	jle    0x40d6c3
  40d729:	nop
  40d72a:	lods   al,BYTE PTR ds:[esi]
  40d72b:	mov    eax,DWORD PTR [ecx+edx*4]
  40d72e:	sbb    edi,DWORD PTR [edx+0x3e8d344]
  40d734:	add    eax,0x78c869f8
  40d739:	and    eax,0x310428
  40d73e:	cmp    al,BYTE PTR [edi+0x3635]
  40d744:	hlt    
  40d745:	adc    eax,DWORD PTR [eax]
  40d747:	xor    eax,0xa5444d47
  40d74c:	xor    dl,BYTE PTR [eax+eax*1]
  40d74f:	jmp    0xea38a6c7
  40d754:	xor    dl,BYTE PTR [eax+eax*1]
  40d757:	pop    esp
  40d758:	icebp  
  40d759:	ja     0x40d7aa
  40d75b:	je     0x40d74e
  40d75d:	jnp    0x40d7ae
  40d75f:	adc    ebp,DWORD PTR ds:0x742f96ec
  40d765:	adc    al,0xff
  40d767:	aam    0xe4
  40d769:	inc    ecx
  40d76a:	inc    ecx
  40d76b:	jmp    0xaab48b8f
  40d770:	scas   eax,DWORD PTR es:[edi]
  40d771:	lock imul ecx
  40d774:	xor    DWORD PTR ds:[ebx-0x51ffff34],eax
  40d77b:	jae    0x40d7ef
  40d77d:	(bad)  
  40d77e:	jg     0x40d768
  40d780:	sti    
  40d781:	push   edx
  40d782:	or     dl,cl
  40d784:	mov    bh,bh
  40d786:	mov    ebx,0x402e17e9
  40d78b:	adc    bh,bh
  40d78d:	lahf   
  40d78e:	fidiv  DWORD PTR [edx+0x75]
  40d791:	fldcw  WORD PTR [ebx-0x67fef818]
  40d797:	jno    0x40d797
  40d799:	push   cs
  40d79a:	sbb    BYTE PTR [ebx+0x4c],dh
  40d79d:	add    DWORD PTR [edi+0x296a0359],esi
  40d7a3:	ins    BYTE PTR es:[edi],dx
  40d7a4:	(bad)  
  40d7a5:	jl     0x40d7d8
  40d7a7:	xchg   edi,eax
  40d7a8:	cmp    eax,0xfe4b41e9
  40d7ad:	pop    esp
  40d7ae:	test   eax,0x7baf1472
  40d7b3:	aam    0xff
  40d7b5:	ss retf 0x355
  40d7b9:	jmp    0x12c7715
  40d7be:	or     edx,DWORD PTR [edx+esi*8+0x53]
  40d7c2:	iret   
  40d7c3:	xor    edi,eax
  40d7c5:	add    BYTE PTR [eax+0x17],bl
  40d7c8:	add    bh,al
  40d7ca:	or     eax,0x48fffe84
  40d7cf:	pop    ss
  40d7d0:	push   DWORD PTR [ebp+0x58]
  40d7d3:	in     al,dx
  40d7d4:	inc    ebx
  40d7d5:	cld    
  40d7d6:	mov    DWORD PTR [ebx],ecx
  40d7d8:	cld    
  40d7d9:	push   0x58
  40d7db:	adc    DWORD PTR [eax],eax
  40d7dd:	push   0x0
  40d7df:	add    BYTE PTR [eax+0x11],cl
  40d7e2:	add    bh,bh
  40d7e4:	cmp    eax,0x1475fd9b
  40d7e9:	adc    DWORD PTR [eax],eax
  40d7eb:	push   0x18
  40d7ed:	(bad)
  40d7f1:	pop    ss
  40d7f2:	or     eax,eax
  40d7f4:	cld    
  40d7f5:	popa   
  40d7f6:	dec    esi
  40d7f7:	push   eax
  40d7f8:	jo     0x40d834
  40d7fa:	push   ecx
  40d7fb:	push   DWORD PTR [edi-0x11]
  40d7fe:	inc    ebx
  40d7ff:	clc    
  40d800:	rcl    DWORD PTR [eax],1
  40d802:	add    BYTE PTR [edx+0x8],ch
  40d805:	push   DWORD PTR es:[ebp+0x20]
  40d809:	popf   
  40d80a:	jae    0x40d808
  40d80c:	pop    ss
  40d80d:	and    ecx,DWORD PTR [edx+ebp*2]
  40d810:	enter  0x10,0xe8
  40d814:	outs   dx,BYTE PTR ds:[esi]
  40d815:	jp     0x40d815
  40d817:	call   ebx
  40d819:	push   esi
  40d81a:	jae    0x40d82b
  40d81c:	aaa    
  40d81d:	and    edi,eax
  40d81f:	call   0x3ffe10
  40d824:	rdpmc  
  40d826:	clc    
  40d827:	add    BYTE PTR [eax+0x15830016],bl
  40d82d:	lahf   
  40d82e:	(bad)  
  40d82f:	jae    0x40d897
  40d831:	popf   
  40d832:	jae    0x40d83c
  40d834:	ja     0x40d857
  40d836:	clc    
  40d837:	call   0x246d6d
  40d83c:	xchg   BYTE PTR [ebp-0x3e],dh
  40d83f:	jae    0x40d87f
  40d841:	or     eax,0x7489
  40d846:	sub    DWORD PTR [ebp+0x3],eax
  40d849:	and    dh,BYTE PTR [ecx]
  40d84b:	jge    0x40d876
  40d84d:	add    esi,DWORD PTR [eax-0xb]
  40d850:	stos   BYTE PTR es:[edi],al
  40d851:	jmp    0x58dc:0xccafd0b
  40d858:	sar    bh,0x4e
  40d85b:	sub    eax,0x7d10ed9c
  40d860:	add    cl,BYTE PTR [ebx]
  40d862:	jno    0x40d8d4
  40d864:	in     eax,dx
  40d865:	dec    edi
  40d866:	loope  0x40d7ec
  40d868:	nop
  40d869:	dec    edi
  40d86a:	cs jmp 0x40d8e6
  40d86d:	inc    esp
  40d86e:	sbb    eax,0xa4ff3305
  40d873:	iret   
  40d874:	xor    ebp,eax
  40d876:	lods   al,BYTE PTR ss:[esi]
  40d878:	xchg   esi,edi
  40d87a:	sbb    al,BYTE PTR [edx+0x7b498042]
  40d880:	or     eax,0x8ab0fed1
  40d885:	out    0xf0,eax
  40d887:	mov    eax,DWORD PTR [edi-0x713f4502]
  40d88d:	pop    edx
  40d88e:	clc    
  40d88f:	cmp    eax,0xe685fff7
  40d894:	xchg   esi,eax
  40d895:	sub    ch,0x27
  40d898:	xor    DWORD PTR [edi-0x4e],edx
  40d89b:	dec    eax
  40d89c:	enter  0x7028,0x7b
  40d8a0:	add    dh,BYTE PTR [ebp+0x37]
  40d8a3:	mov    edx,0x7ff3c928
  40d8a8:	add    cl,BYTE PTR [ebp+0x6af40000]
  40d8ae:	xor    edi,edi
  40d8b0:	sbb    al,0x4f
  40d8b2:	call   0x2b87:0xe6140730
  40d8b9:	push   esp
  40d8ba:	in     eax,dx
  40d8bb:	jg     0x40d91a
  40d8bd:	adc    ebp,ecx
  40d8bf:	add    esi,DWORD PTR [eax+0x3104ccef]
  40d8c5:	add    al,0xe9
  40d8c7:	div    BYTE PTR [ebx+0x3103e809]
  40d8cd:	jno    0x40d90a
  40d8cf:	mov    BYTE PTR [edi-0x19],ah
  40d8d2:	mov    al,0x9c
  40d8d4:	call   0xed54:0x2b87a5cb
  40d8db:	xor    BYTE PTR [edx],0x13
  40d8de:	jmp    0x8d281ee6
  40d8e3:	xchg   ebp,eax
  40d8e5:	imul   edx,DWORD PTR [eax],0x54
  40d8e8:	in     al,dx
  40d8e9:	shr    al,cl
  40d8eb:	fwait
  40d8ec:	add    esi,DWORD PTR [edx+0x75]
  40d8ef:	xchg   DWORD PTR [ecx-0x5a78832a],edi
  40d8f5:	jo     0x40d95c
  40d8f7:	adc    DWORD PTR [ecx],ebx
  40d8f9:	cld    
  40d8fa:	xchg   DWORD PTR [esi],edi
  40d8fc:	jo     0x40d912
  40d8fe:	inc    ecx
  40d8ff:	les    eax,FWORD PTR [ecx+esi*2]
  40d902:	dec    ebp
  40d903:	jge    0x40d97a
  40d905:	jl     0x40d94c
  40d907:	adc    ebp,esi
  40d909:	jo     0x40d8be
  40d90b:	mov    edx,DWORD PTR [esi-0x50]
  40d90e:	scas   al,BYTE PTR es:[edi]
  40d90f:	inc    esp
  40d910:	add    BYTE PTR [eax],al
  40d912:	xor    DWORD PTR [ebx+edi*2-0x7a],edi
  40d916:	fbstp  TBYTE PTR [eax+0x6f]
  40d919:	inc    ecx
  40d91a:	int    0x94
  40d91c:	fwait
  40d91d:	xchg   edi,eax
  40d91e:	into   
  40d91f:	and    DWORD PTR [ebp+0x5d],ebp
  40d922:	(bad)  
  40d923:	jo     0x40d90d
  40d925:	cmp    BYTE PTR ds:0xb2f6e87c,0x90
  40d92c:	call   0xffd60a34
  40d931:	jae    0x40d8f9
  40d933:	jo     0x40d942
  40d935:	and    BYTE PTR gs:[ecx-0x2],dh
  40d939:	jmp    0xd228c0ed
  40d93e:	xor    DWORD PTR [ebx],0x0
  40d941:	jmp    0x6328c151
  40d946:	mov    ah,0x9d
  40d948:	(bad)  
  40d949:	cwde   
  40d94a:	xchg   ebp,eax
  40d94b:	ret    
  40d94c:	jmp    0x40f9:0x3bbf4f0f
  40d953:	sbb    al,0x3c
  40d955:	lock das 
  40d957:	sbb    BYTE PTR [ecx+ebx*8],ch
  40d95a:	mov    ebx,0x31282c14
  40d95f:	push   ds
  40d960:	adc    BYTE PTR [ebp+0x6909e262],0xb6
  40d967:	sub    esi,DWORD PTR [edi-0x14]
  40d96a:	mov    dl,0x7c
  40d96c:	das    
  40d96d:	xchg   edx,eax
  40d96e:	sub    al,0xf0
  40d970:	jmp    0x40d99a
  40d972:	lods   eax,DWORD PTR ds:[esi]
  40d973:	push   ebx
  40d974:	or     DWORD PTR [ecx+0x13d20000],ebp
  40d97a:	or     ch,BYTE PTR ds:0x300adc78
  40d980:	and    DWORD PTR [esi+0x58],ebx
  40d983:	pusha  
  40d984:	dec    ecx
  40d985:	push   eax
  40d986:	(bad)  
  40d987:	aam    0x9a
  40d989:	sahf   
  40d98a:	inc    esp
  40d98b:	dec    ecx
  40d98c:	mov    bh,0xd8
  40d98e:	xlat   BYTE PTR ds:[ebx]
  40d98f:	jmp    0x6440edc6
  40d994:	jno    0x40d9de
  40d996:	dec    edi
  40d997:	ret    
  40d998:	xor    eax,0x3292fffa
  40d99d:	cli    
  40d99e:	call   DWORD PTR [edx+0x3544a132]
  40d9a4:	add    ch,BYTE PTR [edi+0x14]
  40d9a7:	iret   
  40d9a8:	fst    st(4)
  40d9aa:	(bad)  
  40d9ab:	inc    ebx
  40d9ad:	push   ebx
  40d9ae:	jb     0x40d9d2
  40d9b0:	sbb    ebx,DWORD PTR [eax+ebx*8]
  40d9b3:	add    BYTE PTR [edi+esi*2],ah
  40d9b6:	std    
  40d9b7:	jne    0x40d9fd
  40d9b9:	xchg   esi,eax
  40d9ba:	jae    0x40d994
  40d9bc:	(bad)  
  40d9bd:	pop    ds
  40d9be:	in     al,0xff
  40d9c0:	in     eax,0x8b
  40d9c2:	std    
  40d9c3:	jne    0x40d955
  40d9c5:	mov    edi,DWORD PTR [ebx-0x2669004]
  40d9cb:	jne    0x40d99d
  40d9cd:	nop
  40d9ce:	xchg   esi,eax
  40d9cf:	and    BYTE PTR [eax+0x13],bl
  40d9d2:	push   DWORD PTR [ebp+0x6c]
  40d9d5:	nop
  40d9d6:	js     0x40da27
  40d9d8:	(bad)  
  40d9d9:	cdq    
  40d9da:	std    
  40d9db:	jne    0x40d9dd
  40d9dd:	add    al,al
  40d9df:	nop
  40d9e0:	jo     0x40da31
  40d9e2:	scas   eax,DWORD PTR es:[edi]
  40d9e3:	cdq    
  40d9e4:	std    
  40d9e5:	jne    0x40d99b
  40d9e7:	nop
  40d9e8:	push   0x8b99af4f
  40d9ed:	inc    ebp
  40d9ee:	mov    eax,0x4590e827
  40d9f3:	cdq    
  40d9f4:	std    
  40d9f5:	pop    edi
  40d9f6:	ds stos DWORD PTR es:[edi],eax
  40d9f8:	ror    BYTE PTR [eax+ecx*1],0x3e
  40d9fc:	mov    ebp,esp
  40d9fe:	mov    edx,DWORD PTR [edx+edi*8+0x6a]
  40da02:	sbb    BYTE PTR ds:0x6ae5ff45,cl
  40da08:	out    0x81,al
  40da0a:	pushf  
  40da0b:	xchg   edi,eax
  40da0c:	std    
  40da0d:	mov    ebp,eax
  40da0f:	xchg   esi,eax
  40da10:	std    
  40da11:	jne    0x40d9f3
  40da13:	mov    ah,BYTE PTR [eax]
  40da15:	std    
  40da16:	pop    ds
  40da17:	cdq    
  40da18:	push   0x51ee7005
  40da1d:	dec    DWORD PTR [edi]
  40da1f:	ins    DWORD PTR es:[edi],dx
  40da20:	mov    esi,0x6822ce74
  40da25:	div    DWORD PTR [ecx]
  40da27:	ds inc esp
  40da29:	add    BYTE PTR [ecx+0x7d],cl
  40da2c:	add    ch,bh
  40da2e:	ja     0x40d9b4
  40da30:	jo     0x40da77
  40da32:	lock jl 0x40da67
  40da35:	call   FWORD PTR [esi*2+0x7e233d9a]
  40da3c:	and    edi,0x3c
  40da3f:	es test esi,edi
  40da42:	add    BYTE PTR [eax],al
  40da44:	mov    es,edi
  40da46:	xchg   esi,edi
  40da48:	cld    
  40da49:	je     0x40d9e5
  40da4b:	xchg   ebp,ebp
  40da4d:	pop    ebp
  40da4e:	or     eax,0x73
  40da51:	add    BYTE PTR [edx],0x55
  40da54:	mov    edx,0x65c37f60
  40da59:	or     eax,0x36cb001a
  40da5e:	test   DWORD PTR [ecx+ebp*1-0x7b],esi
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	dec    ebx
  40da64:	dec    esi
  40da65:	lea    edi,[ecx+0x44]
  40da68:	inc    ebp
  40da69:	icebp  
  40da6a:	lds    esi,FWORD PTR [ecx+ecx*1+0x3c]
  40da6e:	add    al,0x80
  40da70:	idiv   BYTE PTR [esi+ecx*1+0x51]
  40da74:	cdq    
  40da75:	mov    ?,WORD PTR [ecx+eax*2]
  40da78:	xor    DWORD PTR [esi],ecx
  40da7a:	pushf  
  40da7b:	jne    0x40dacd
  40da7d:	jnp    0x40da81
  40da7f:	or     esi,ecx
  40da81:	dec    edi
  40da82:	add    bl,ch
  40da84:	ds inc ebx
  40da86:	stos   DWORD PTR es:[edi],eax
  40da87:	inc    ebp
  40da88:	jo     0x40db05
  40da8a:	sub    ebp,eax
  40da8c:	xchg   esp,eax
  40da8d:	sbb    al,0x4
  40da8f:	add    BYTE PTR [edx],ch
  40da91:	cmp    ecx,DWORD PTR [edi]
  40da93:	and    eax,DWORD PTR [esi-0x19a8853d]
  40da99:	es clc 
  40da9b:	mov    edi,0x68324465
  40daa0:	xor    DWORD PTR [ecx+ebp*8],edx
  40daa3:	xchg   esp,eax
  40daa4:	mov    esp,?
  40daa6:	push   es
  40daa7:	cmp    eax,0x14700000
  40daac:	mov    ecx,0x11c4584
  40dab1:	or     eax,0x9b056d42
  40dab6:	rcr    dh,1
  40dab8:	std    
  40dab9:	sub    DWORD PTR [edx-0x60b5d6df],0x6d
  40dac0:	in     eax,dx
  40dac1:	and    DWORD PTR [eax+0x40b20be],0xffffffbd
  40dac8:	(bad)  
  40daca:	mov    ch,BYTE PTR [ebp+0x5b]
  40dacd:	or     al,0x89
  40dacf:	adc    eax,0xcd77831d
  40dad4:	scas   eax,DWORD PTR es:[edi]
  40dad5:	inc    esi
  40dad6:	xor    dl,BYTE PTR [esp+edx*1]
  40dad9:	(bad)  
  40dada:	pop    edx
  40dadb:	xchg   ebx,eax
  40dadc:	lods   al,BYTE PTR ds:[esi]
  40dadd:	push   esp
  40dade:	ins    DWORD PTR es:[di],dx
  40dae0:	lods   eax,DWORD PTR ds:[esi]
  40dae1:	xchg   ecx,eax
  40dae2:	in     eax,dx
  40dae3:	outs   dx,DWORD PTR ds:[esi]
  40dae4:	cmp    BYTE PTR [ebx-0x661fc3b],al
  40daea:	cmp    bh,BYTE PTR [esp+eiz*4+0x24]
  40daee:	xor    DWORD PTR [edx+eiz*8],edx
  40daf1:	inc    ebx
  40daf2:	daa    
  40daf3:	xchg   edi,eax
  40daf4:	mov    ebx,0xa6143105
  40daf9:	leave  
  40dafa:	push   ds
  40dafb:	adc    al,0xe9
  40dafd:	add    esi,DWORD PTR [ecx]
  40daff:	push   ebp
  40db00:	and    esi,DWORD PTR [edi+edx*1+0x15]
  40db04:	jmp    0xd355760c
  40db09:	add    ebx,DWORD PTR [ebx+0x3c314]
  40db0f:	add    BYTE PTR [esi+edx*8-0x695a2ba8],ch
  40db16:	cmp    BYTE PTR [ebx-0x11],bh
  40db19:	ins    BYTE PTR es:[edi],dx
  40db1a:	cwde   
  40db1b:	sbb    BYTE PTR [ebp+0x6c],0xff
  40db1f:	xor    eax,0x4fe768d8
  40db24:	or     eax,0x72f20014
  40db29:	loope  0x40db2f
  40db2b:	adc    BYTE PTR [ebp+0x14],al
  40db2e:	add    cl,ch
  40db30:	retf   0x275f
  40db33:	test   al,0x32
  40db35:	ins    DWORD PTR es:[edi],dx
  40db36:	je     0x40db11
  40db38:	sbb    dl,BYTE PTR [eax+edx*2-0x2]
  40db3c:	mov    bl,0xdc
  40db3e:	mov    bl,BYTE PTR [ecx]
  40db40:	rcl    BYTE PTR [edi+0x6db3f6ef],0x4f
  40db47:	cmp    ebx,DWORD PTR ds:0xb3de50a4
  40db4d:	fwait
  40db4e:	test   ch,al
  40db50:	sti    
  40db51:	ins    DWORD PTR es:[edi],dx
  40db52:	inc    cl
  40db54:	sub    ebx,esi
  40db56:	inc    dh
  40db58:	rcl    edi,0xf3
  40db5b:	sbb    DWORD PTR [ebp-0x30],edx
  40db5e:	inc    esi
  40db5f:	sub    BYTE PTR ds:0xdbbdb46d,dh
  40db65:	ins    DWORD PTR es:[edi],dx
  40db66:	(bad)  
  40db67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db68:	dec    ecx
  40db69:	sbb    al,ch
  40db6b:	icebp  
  40db6c:	pop    ebp
  40db6d:	ins    DWORD PTR es:[edi],dx
  40db6e:	(bad)  
  40db6f:	pusha  
  40db70:	test   eax,0x8ef644
  40db75:	add    BYTE PTR [ebx+0x10fffa],dh
  40db7b:	rol    DWORD PTR [eax-0x17],cl
  40db7e:	mov    bl,0xa0
  40db80:	jmp    0x40dc00
  40db82:	mov    bl,0x6a
  40db84:	(bad)  
  40db85:	hlt    
  40db86:	es jl  0x40db75
  40db89:	mov    ecx,0x64886ab3
  40db8e:	call   0x666c:0xc56fe62
  40db95:	mov    cl,0xeb
  40db97:	aam    0xff
  40db99:	push   DWORD PTR [edi-0x54]
  40db9c:	jmp    0xd475:0xfd9627f7
  40dba3:	call   eax
  40dba5:	push   eax
  40dba6:	pop    es
  40dba7:	xchg   esi,eax
  40dba8:	xchg   DWORD PTR [ebp-0x211c4],eax
  40dbae:	push   ebp
  40dbaf:	pushf  
  40dbb0:	shl    bh,cl
  40dbb2:	daa    
  40dbb3:	xchg   esi,eax
  40dbb4:	dec    esi
  40dbb5:	push   0x3f5e98
  40dbba:	aaa    
  40dbbb:	lods   al,BYTE PTR ds:[esi]
  40dbbc:	jmp    0x9475:0xfd95a7f7
  40dbc3:	push   DWORD PTR [eax+0x9958750]
  40dbc9:	shr    ah,0xe
  40dbcc:	cmp    DWORD PTR [ebp-0x21244],0xffffff8c
  40dbd3:	bound  ecx,QWORD PTR [esi]
  40dbd5:	call   FWORD PTR [eax]
  40dbd7:	test   DWORD PTR [ebx-0x50ffff20],eax
  40dbdd:	xchg   ebp,eax
  40dbde:	std    
  40dbdf:	push   eax
  40dbe0:	adc    BYTE PTR ds:0xf9a7ff4d,0x12
  40dbe7:	or     ecx,DWORD PTR [eax-0x5faffb94]
  40dbed:	popa   
  40dbee:	dec    ebx
  40dbef:	jmp    DWORD PTR [edi-0x601f7c23]
  40dbf5:	xchg   ebp,eax
  40dbf6:	std    
  40dbf7:	adc    eax,0x6a001748
  40dbfc:	sbb    BYTE PTR [edi+0x5d],bh
  40dbff:	inc    edi
  40dc00:	pop    ecx
  40dc01:	adc    bh,bh
  40dc03:	mov    ch,0xb4
  40dc05:	in     al,dx
  40dc06:	std    
  40dc07:	inc    DWORD PTR [edi-0x1b17f59d]
  40dc0d:	inc    esi
  40dc0e:	std    
  40dc0f:	inc    DWORD PTR [ecx+0x31f7da93]
  40dc15:	ret    0x6980
  40dc18:	xor    DWORD PTR [ebp-0x5],edx
  40dc1b:	inc    esi
  40dc1c:	jo     0x40dc9b
  40dc1e:	jg     0x40dbd4
  40dc20:	aad    0x21
  40dc22:	cmp    esi,0xe80ea7de
  40dc28:	or     BYTE PTR [ebp-0x8470181],0x53
  40dc2f:	test   dh,0x9
  40dc32:	test   DWORD PTR [ecx+ebx*8+0x31fe8109],edi
  40dc39:	dec    edx
  40dc3a:	xchg   BYTE PTR [ebx+0x68027d31],dl
  40dc40:	add    BYTE PTR [eax],al
  40dc42:	scas   eax,DWORD PTR es:[edi]
  40dc43:	mov    cl,0xc1
  40dc45:	jmp    FWORD PTR [ebp-0x69b08949]
  40dc4b:	pop    ds
  40dc4c:	pop    esp
  40dc4d:	test   BYTE PTR [esi+0x36b6a71],0x4a
  40dc54:	jg     0x40dc60
  40dc56:	jno    0x40dc20
  40dc58:	inc    DWORD PTR [edx+0x740240f4]
  40dc5e:	out    0xfd,eax
  40dc60:	mov    ebp,0x7fa95ee3
  40dc65:	jmp    edx
  40dc67:	iret   
  40dc68:	test   BYTE PTR [ecx+ecx*2+0x31fe7fa1],bh
  40dc6f:	or     eax,ebp
  40dc71:	and    DWORD PTR [di+0x6f],edi
  40dc75:	mov    ebp,0xe80c073e
  40dc7a:	ret    
  40dc7b:	xor    eax,DWORD PTR [ecx+0x6b292efe]
  40dc81:	mul    BYTE PTR [esi]
  40dc83:	jmp    0x40dd04
  40dc85:	je     0x40dcb0
  40dc87:	xchg   ebx,eax
  40dc88:	dec    eax
  40dc89:	dec    eax
  40dc8a:	push   ss
  40dc8b:	sti    
  40dc8c:	jg     0x40dc42
  40dc8e:	adc    eax,0x7805e15
  40dc93:	push   0xffffffd3
  40dc95:	or     ecx,DWORD PTR [ecx]
  40dc97:	lods   eax,DWORD PTR ds:[esi]
  40dc98:	lahf   
  40dc99:	xor    bh,0x69
  40dc9c:	shl    DWORD PTR [edi-0x11],cl
  40dc9f:	lahf   
  40dca0:	and    BYTE PTR [eax-0x19],bh
  40dca3:	imul   edi,DWORD PTR ds:0x360000f6,0xd7cab17c
  40dcad:	imul   ebp,DWORD PTR ds:0x2561eeb6,0xf0dfc780
  40dcb7:	imul   eax,DWORD PTR [edi],0xffffffdb
  40dcba:	adc    eax,0x2c9fb780
  40dcbf:	js     0x40dc70
  40dcc1:	imul   eax,DWORD PTR ds:0x717c2ef6,0xf5699fca
  40dccb:	mov    ch,0x66
  40dccd:	popa   
  40dcce:	in     eax,dx
  40dccf:	jg     0x40dc60
  40dcd1:	fcomip st,st(0)
  40dcd3:	imul   eax,DWORD PTR ds:0x7f7fdddb,0xffffff9f
  40dcda:	mov    al,0x77
  40dcdc:	ja     0x40dd47
  40dcde:	rol    BYTE PTR [edi+0x7fc568fa],0x9d
  40dce5:	jl     0x40dc9c
  40dce7:	jg     0x40dd48
  40dce9:	jl     0x40dd1f
  40dceb:	rcl    BYTE PTR [edi+0x69],1
  40dcee:	lods   eax,DWORD PTR ds:[esi]
  40dcef:	mov    ecx,0x7fa5616a
  40dcf4:	dec    esi
  40dcf5:	jecxz  0x40dd23
  40dcf7:	jg     0x40dd38
  40dcf9:	imul   ebx,DWORD PTR [ebx+0x68],0x6c8d693f
  40dd00:	xchg   esp,eax
  40dd01:	fadd   DWORD PTR [ebp-0x6760d881]
  40dd07:	ja     0x40dd28
  40dd09:	imul   edi,edi,0xfa000080
  40dd0f:	fdiv   st(6),st
  40dd11:	outs   dx,BYTE PTR ds:[esi]
  40dd12:	mov    fs,WORD PTR [eax+0x6a865eeb]
  40dd18:	(bad)  
  40dd19:	aam    0x2e
  40dd1b:	imul   esi,DWORD PTR [ecx+eiz*8-0x76],0x6e4efc4f
  40dd23:	push   0xffffffb4
  40dd25:	push   ebp
  40dd26:	pop    esi
  40dd27:	push   0xfffffffe
  40dd29:	push   ecx
  40dd2a:	push   ds
  40dd2b:	fdivr  st,st(6)
  40dd2d:	ss push esi
  40dd2f:	shl    bh,1
  40dd31:	inc    eax
  40dd32:	imul   ebp,DWORD PTR [eax-0x2],0x26
  40dd36:	inc    esi
  40dd37:	loopne 0x40dd34
  40dd39:	adc    DWORD PTR [esi+eax*1+0x5365e900],ebp
  40dd40:	or     ebp,ecx
  40dd42:	mov    DWORD PTR [ebp+0x74f96aeb],ebx
  40dd48:	mov    WORD PTR [esi+ebx*1+0x6fc667d9],fs
  40dd4f:	sar    edi,cl
  40dd51:	add    BYTE PTR [edx],0xcf
  40dd54:	inc    eax
  40dd55:	jmp    0xd14cbd61
  40dd5a:	push   edi
  40dd5b:	fsin   
  40dd5d:	(bad)  
  40dd5e:	sub    edx,DWORD PTR [ebx+esi*2+0x42]
  40dd62:	test   DWORD PTR [ebp-0x20d13a84],edx
  40dd68:	pop    esi
  40dd69:	mov    esi,0xb1449922
  40dd6e:	lods   eax,DWORD PTR ds:[esi]
  40dd6f:	out    0xf7,eax
  40dd71:	mov    ch,0x0
  40dd73:	add    BYTE PTR ds:0x2e1f0014,dh
  40dd79:	push   ecx
  40dd7a:	inc    esp
  40dd7b:	mov    eax,ds:0xe90013c6
  40dd80:	retf   
  40dd81:	sar    dh,cl
  40dd83:	adc    al,0xad
  40dd85:	out    dx,eax
  40dd86:	cmp    BYTE PTR [eax],al
  40dd88:	push   edi
  40dd89:	push   ecx
  40dd8a:	dec    BYTE PTR [ebp+edx*2-0x1b17b104]
  40dd91:	or     DWORD PTR [eax],eax
  40dd93:	add    BYTE PTR [ebx+0x186a0acf],bl
  40dd99:	test   DWORD PTR [ebx-0x1c],eax
  40dd9c:	mov    eax,0xc946ee7b
  40dda1:	adc    edi,edi
  40dda3:	jne    0x40ddb1
  40dda5:	cld    
  40dda6:	fmul   QWORD PTR [esi+0x6f]
  40dda9:	out    0x9,al
  40ddab:	shl    BYTE PTR [edi+edi*8+0x13c9684f],0xef
  40ddb3:	mov    esi,0x873e6a8
  40ddb8:	and    BYTE PTR [ebx+ebp*2-0x5304e001],dh
  40ddbf:	dec    ebx
  40ddc0:	pop    ds
  40ddc1:	out    0xfd,al
  40ddc3:	dec    ebp
  40ddc4:	inc    eax
  40ddc5:	xchg   edx,eax
  40ddc6:	jnp    0x40ddc0
  40ddc8:	cwde   
  40ddc9:	ins    BYTE PTR es:[edi],dx
  40ddca:	mov    dh,0xe8
  40ddcc:	call   0x5240db2a
  40ddd1:	aad    0x6
  40ddd3:	add    BYTE PTR [ebp+0x83ea9a],ah
  40ddd9:	add    ah,dl
  40dddb:	xchg   esp,eax
  40dddc:	push   0xfd50e200
  40dde1:	jne    0x40dd73
  40dde3:	sti    
  40dde4:	ror    BYTE PTR [eax+0x7f],0xe9
  40dde8:	xchg   DWORD PTR [ebp+0x6c],eax
  40ddeb:	js     0x40ddf9
  40dded:	inc    edi
  40ddee:	or     DWORD PTR [eax],edx
  40ddf0:	push   DWORD PTR ds:0x413b3c
  40ddf6:	lahf   
  40ddf7:	pop    edi
  40ddf8:	push   es
  40ddf9:	call   0x3e72a6
  40ddfe:	and    BYTE PTR [esi],dl
  40de00:	inc    edi
  40de01:	inc    ecx
  40de02:	xor    DWORD PTR [ebp-0x16],edi
  40de05:	add    DWORD PTR [ecx],esi
  40de07:	jge    0x40dd8b
  40de09:	(bad)  
  40de0a:	pushf  
  40de0b:	gs push 0xffffffdd
  40de0e:	sbb    eax,0x5cfe7ce6
  40de13:	add    DWORD PTR [ebx],ebp
  40de15:	inc    ecx
  40de16:	xor    esi,esi
  40de18:	test   BYTE PTR [edi],0x19
  40de1b:	add    al,0x7d
  40de1d:	(bad)  
  40de1e:	inc    BYTE PTR [eax+eax*1+0x0]
  40de22:	xor    ebp,edi
  40de24:	jl     0x40de9a
  40de26:	cmp    ebp,edx
  40de28:	pop    ds
  40de29:	jmp    esi
  40de2b:	int    0x7c
  40de2d:	je     0x40de0c
  40de2f:	and    eax,0xe2c907f7
  40de34:	retf   
  40de35:	dec    dh
  40de37:	xor    eax,DWORD PTR [edx+0x3]
  40de3a:	xor    DWORD PTR [eax+0xeb87],ebp
  40de40:	mov    dl,0x30
  40de42:	pusha  
  40de43:	push   ebp
  40de44:	pop    esi
  40de45:	xchg   ebx,eax
  40de46:	add    ch,BYTE PTR [edx-0x7]
  40de49:	adc    eax,0xb09907f7
  40de4e:	retf   0x9efe
  40de51:	jecxz  0x40de19
  40de53:	sti    
  40de54:	mov    dl,0x9f
  40de56:	add    BYTE PTR [edi],ch
  40de58:	lock jl 0x40de5d
  40de5b:	shrd   DWORD PTR [edi-0x5ceffff],ebx,cl
  40de62:	cmp    eax,0x43c4606
  40de67:	add    BYTE PTR [esi],bh
  40de69:	icebp  
  40de6a:	inc    edx
  40de6b:	add    BYTE PTR [ecx],dh
  40de6d:	jge    0x40deee
  40de6f:	cmp    al,0x2f
  40de71:	push   ss
  40de72:	ret    
  40de73:	call   DWORD PTR [esi+0x6d]
  40de76:	xchg   BYTE PTR [edx-0x7cfd82d0],dh
  40de7c:	add    al,0x14
  40de7e:	mov    ebx,0xe913f02d
  40de83:	or     al,0xad
  40de85:	lods   eax,DWORD PTR ds:[esi]
  40de86:	out    0x3,eax
  40de88:	xor    DWORD PTR [ecx-0x2cabaa35],edx
  40de8e:	call   0x5fd10c96
  40de93:	add    dh,BYTE PTR [ecx]
  40de95:	adc    al,0x6a
  40de97:	ds jmp 0x40ded0
  40de9a:	sub    BYTE PTR [ecx+esi*1],al
  40de9d:	adc    eax,0x14318f6d
  40dea2:	jmp    0x3540df27
  40dea7:	inc    esi
  40dea8:	push   es
  40dea9:	ret    
  40deaa:	out    dx,al
  40deab:	fld    QWORD PTR gs:[edi+0x3e91367]
  40deb2:	mov    dl,0x27
  40deb4:	repz sub al,0x70
  40deb7:	adc    al,0xe9
  40deb9:	or     al,0xb5
  40debb:	loop   0x40dea4
  40debd:	add    esi,DWORD PTR [ecx]
  40debf:	cld    
  40dec0:	xchg   ah,al
  40dec2:	jno    0x40ded8
  40dec4:	xchg   ebx,eax
  40dec5:	add    esi,DWORD PTR [esi-0xfd31501]
  40decb:	adc    esp,DWORD PTR [eax-0x3a]
  40dece:	sahf   
  40decf:	xchg   ecx,eax
  40ded0:	cmp    DWORD PTR [ebx-0x62],0x16
  40ded4:	(bad)  gs:[ecx]
  40ded7:	adc    al,0xe9
  40ded9:	sub    BYTE PTR [edi+0x7ef5edbe],al
  40dedf:	gs sti 
  40dee1:	add    DWORD PTR [esi-0x2d],ecx
  40dee4:	call   0xdf5a6577
  40dee9:	icebp  
  40deea:	xor    eax,0x3105167b
  40deef:	adc    al,0x72
  40def1:	shr    BYTE PTR [edx],cl
  40def3:	cdq    
  40def4:	xor    ch,ah
  40def6:	stos   DWORD PTR es:[edi],eax
  40def7:	jmp    0xe2f3:0xd8bc44ff
  40defe:	retf   
  40deff:	adc    eax,0x14340484
  40df04:	add    BYTE PTR [eax-0x16ffecd5],dl
  40df0a:	add    BYTE PTR [eax],al
  40df0c:	sbb    dh,BYTE PTR [esi+eax*2+0x36652d28]
  40df13:	xchg   ecx,eax
  40df14:	push   esp
  40df15:	or     BYTE PTR [eax],al
  40df17:	jmp    0x6c4f3343
  40df1c:	and    DWORD PTR [ebp-0x2],0x7e5afe9
  40df23:	jmp    0xea2a6f53
  40df28:	xor    dl,BYTE PTR [edi+edi*8]
  40df2b:	fidivr WORD PTR [edx]
  40df2d:	jl     0x40df8e
  40df2f:	mov    ds:0xac88666b,eax
  40df34:	bound  esp,QWORD PTR [esi+0x76]
  40df37:	icebp  
  40df38:	pop    ebx
  40df39:	loopne 0x40df2a
  40df3b:	ss ret 0xe818
  40df3f:	mul    DWORD PTR [di-0x2]
  40df43:	xchg   ecx,eax
  40df44:	(bad)  
  40df45:	int    0x40
  40df47:	jmp    0x230bf87
  40df4c:	sbb    al,0xa
  40df4e:	add    cl,ch
  40df50:	aaa    
  40df51:	push   esp
  40df52:	push   cs
  40df53:	ins    BYTE PTR es:[edi],dx
  40df54:	loope  0x40dfba
  40df56:	(bad)  
  40df57:	jmp    0xaccc43e0
  40df5c:	sbb    dl,ch
  40df5e:	mov    WORD PTR [esi+ecx*1-0x7316962b],fs
  40df65:	fs push esp
  40df67:	fisub  WORD PTR [ecx]
  40df69:	push   ss
  40df6a:	das    
  40df6b:	sub    BYTE PTR ds:0xdec019,dh
  40df71:	add    dh,ah
  40df73:	jge    0x40df74
  40df75:	dec    DWORD PTR [eax+0x10]
  40df78:	lea    eax,[ebp+0x6c]
  40df7b:	inc    eax
  40df7c:	std    
  40df7d:	jne    0x40dfef
  40df7f:	jmp    0x3d8cbf7
  40df84:	shr    BYTE PTR [esi],cl
  40df86:	or     DWORD PTR [eax],edx
  40df88:	or     eax,eax
  40df8a:	sbb    al,0x68
  40df8c:	mov    eax,DWORD PTR [ebp-0x48]
  40df8f:	inc    edi
  40df90:	push   0x6a183200
  40df95:	pop    es
  40df96:	inc    edx
  40df97:	sbb    bh,bh
  40df99:	jne    0x40df47
  40df9b:	ficom  WORD PTR [ebx]
  40df9d:	(bad)  
  40df9e:	neg    BYTE PTR [eax-0x2]
  40dfa1:	or     bl,al
  40dfa3:	jae    0x40dff9
  40dfa5:	(bad)  
  40dfa6:	(bad)  
  40dfa8:	out    0xe8,al
  40dfaa:	rcr    esi,0xfd
  40dfad:	mov    DWORD PTR [ebp+0x78458bcb],ebx
  40dfb3:	inc    edi
  40dfb4:	std    
  40dfb5:	jne    0x40dfcb
  40dfb7:	jno    0x40dfb7
  40dfb9:	imul   ecx,edi,0x8dfefe71
  40dfbf:	ret    
  40dfc0:	std    
  40dfc1:	adc    eax,0x412d1e
  40dfc6:	ret    
  40dfc7:	xlat   BYTE PTR ds:[ebx]
  40dfc8:	jb     0x40dff3
  40dfca:	mov    al,ds:0x6ef0017
  40dfcf:	fidiv  WORD PTR [ebx+0x8]
  40dfd2:	xor    BYTE PTR [edi],ah
  40dfd4:	inc    esi
  40dfd5:	inc    DWORD PTR [eax]
  40dfd7:	add    BYTE PTR [edi],dh
  40dfd9:	fidiv  WORD PTR [eax+ecx*1-0x69]
  40dfdd:	fs add bh,bh
  40dfe0:	or     eax,0xce58e80f
  40dfe5:	fdivp  st(5),st
  40dfe7:	(bad)  
  40dfe8:	(bad)  
  40dfea:	std    
  40dfeb:	jne    0x40dfa1
  40dfed:	fnsave [ebx+0x8]
  40dff0:	xor    DWORD PTR [ebp-0x33],edx
  40dff3:	inc    ebp
  40dff4:	push   dx
  40dff6:	js     0x40e06c
  40dff8:	jge    0x40e03f
  40dffa:	test   BYTE PTR [eax+0x56],cl
  40dffd:	mov    ds:0xaa557478,al
  40e002:	push   cs
  40e003:	ficom  DWORD PTR [edi]
  40e005:	sub    al,0x4
  40e007:	push   0x31
  40e009:	mov    edx,0x6836ebee
  40e00e:	pop    eax
  40e00f:	sub    eax,0x74776d70
  40e014:	and    DWORD PTR [ebp-0x65e1b720],edx
  40e01a:	test   dh,al
  40e01c:	inc    ecx
  40e01d:	loop   0x40dfe5
  40e01f:	repz mov dl,0x67
  40e022:	outs   dx,BYTE PTR ds:[esi]
  40e023:	push   DWORD PTR [edi]
  40e025:	clc    
  40e026:	imul   edi,ebp,0xfffffffe
  40e029:	stc    
  40e02a:	push   0xffffffb4
  40e02c:	test   ecx,0xca316978
  40e032:	out    dx,al
  40e033:	mul    esi
  40e035:	addr16 or al,0x2f
  40e038:	jo     0x40e0a7
  40e03a:	ja     0x40e0b0
  40e03c:	add    BYTE PTR [eax],al
  40e03e:	aad    0x21
  40e040:	out    dx,eax
  40e041:	pop    es
  40e042:	(bad)  
  40e044:	sar    esi,0xc6
  40e047:	xchg   ecx,eax
  40e048:	fmul   st,st(0)
  40e04a:	repz jo 0x40e04f
  40e04d:	push   ebp
  40e04e:	stos   BYTE PTR es:[edi],al
  40e04f:	adc    BYTE PTR [ebx+0x79018dc3],al
  40e055:	(bad)  
  40e056:	mov    ah,0xb7
  40e058:	jbe    0x40e0a9
  40e05a:	sahf   
  40e05b:	fild   WORD PTR [esi]
  40e05d:	call   FWORD PTR [ecx+eax*4+0x29]
  40e061:	inc    ecx
  40e062:	xor    DWORD PTR ds:0x6d311afd,edx
  40e068:	or     eax,eax
  40e06a:	cs adc al,0x6c
  40e06d:	test   al,0x31
  40e06f:	adc    al,0xe9
  40e071:	inc    eax
  40e072:	cmc    
  40e073:	pop    ebx
  40e074:	call   0xa655117c
  40e079:	mov    esi,0x3ed6262
  40e07e:	xor    esi,ebp
  40e080:	call   0xe92d2f72
  40e085:	in     eax,dx
  40e086:	inc    esi
  40e087:	(bad)  
  40e088:	and    esi,DWORD PTR [eax-0x12]
  40e08b:	nop
  40e08c:	imul   ebp,DWORD PTR [edi+0x3f],0x62
  40e090:	popf   
  40e091:	shr    DWORD PTR [edi],cl
  40e093:	call   0x60de5928
  40e098:	add    dh,0x3b
  40e09b:	adc    al,0xe9
  40e09d:	or     al,0xf1
  40e09f:	call   0x414b87
  40e0a4:	adc    BYTE PTR [ebx],0xe9
  40e0a7:	add    ebx,DWORD PTR [ecx-0x13d3fb1]
  40e0ad:	(bad)  
  40e0ae:	fild   DWORD PTR [edi]
  40e0b0:	or     ebp,esp
  40e0b2:	lods   al,BYTE PTR ds:[esi]
  40e0b3:	js     0x40e0a4
  40e0b5:	les    esp,FWORD PTR [ecx+0x53]
  40e0b8:	mov    ch,0x97
  40e0ba:	push   esp
  40e0bb:	jo     0x40e09c
  40e0bd:	popa   
  40e0be:	cwde   
  40e0bf:	aad    0xce
  40e0c1:	hlt    
  40e0c2:	lods   al,BYTE PTR ds:[esi]
  40e0c3:	js     0x40e094
  40e0c5:	mov    ebp,DWORD PTR [ebx+0x57]
  40e0c8:	mov    edi,0x846b2d61
  40e0cd:	int3   
  40e0ce:	and    eax,0x91144878
  40e0d3:	push   eax
  40e0d4:	not    edx
  40e0d6:	call   0x1581be53
  40e0db:	js     0x40e07c
  40e0dd:	popa   
  40e0de:	mov    ebx,0xe8d349d7
  40e0e3:	imul   eax,esp,0xffffffcd
  40e0e6:	push   ebp
  40e0e8:	dec    BYTE PTR [ebx+0x620ef984]
  40e0ee:	(bad)  
  40e0ef:	push   ebx
  40e0f0:	sub    eax,0x7426dbec
  40e0f5:	popa   
  40e0f6:	std    
  40e0f7:	pushf  
  40e0f8:	or     DWORD PTR [edx-0x2],ebp
  40e0fb:	into   
  40e0fc:	out    0x27,al
  40e0fe:	pop    esp
  40e0ff:	adc    BYTE PTR [ecx+eiz*2-0x1a],ch
  40e103:	popa   
  40e104:	jp     0x40e168
  40e106:	(bad)  
  40e107:	pusha  
  40e108:	add    BYTE PTR [eax],al
  40e10a:	mov    al,0x6d
  40e10c:	imul   BYTE PTR [esi+0x10ffeac6]
  40e112:	int3   
  40e113:	fld    DWORD PTR [eax-0x17]
  40e116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e117:	test   al,0xdb
  40e119:	sahf   
  40e11a:	sahf   
  40e11b:	(bad)  
  40e11c:	(bad)  
  40e11d:	aam    0x6
  40e11f:	sub    al,0x41
  40e121:	jmp    0x7e8bbcb0
  40e126:	xchg   BYTE PTR [esp+eax*4-0x19d697f],cl
  40e12d:	add    esi,DWORD PTR ds:0xedaee5ec
  40e133:	pusha  
  40e134:	std    
  40e135:	xchg   esp,eax
  40e136:	mov    DWORD PTR [edx-0x2],ebp
  40e139:	push   esi
  40e13a:	pop    esi
  40e13b:	sub    BYTE PTR [eax+eax*1-0xc],bl
  40e13f:	pusha  
  40e140:	out    0xa5,al
  40e142:	jmp    0x40e1a5
  40e144:	(bad)  
  40e145:	jo     0x40e0f7
  40e147:	je     0x40e13f
  40e149:	ss ds jmp 0x40e14c
  40e14d:	ror    BYTE PTR [ebx-0x26],0x40
  40e151:	jmp    0x171c8995
  40e156:	es (bad) 
  40e158:	(bad)  
  40e159:	fdivr  QWORD PTR [esi+0x2b]
  40e15c:	inc    ecx
  40e15d:	jmp    0x8c006c
  40e162:	das    
  40e163:	jmp    0xf17966ef
  40e168:	std    
  40e169:	call   FWORD PTR [ebx]
  40e16b:	fwait
  40e16c:	jmp    0xfee9:0x8f0000f7
  40e173:	jae    0x40e1b0
  40e175:	jo     0x40e175
  40e177:	(bad)  
  40e178:	jg     0x40e120
  40e17a:	std    
  40e17b:	jne    0x40e1cd
  40e17d:	in     al,dx
  40e17e:	xchg   ecx,eax
  40e17f:	inc    esp
  40e180:	outs   dx,DWORD PTR ds:[esi]
  40e181:	jmp    0xf1d99783
  40e186:	std    
  40e187:	dec    DWORD PTR [edi+0x77e80663]
  40e18d:	mov    al,ds:0xa38ffffd
  40e192:	jmp    0x2075:0xfde98ff7
  40e199:	in     al,dx
  40e19a:	xlat   BYTE PTR ds:[ebx]
  40e19b:	inc    esp
  40e19c:	mov    edi,0xb0b5fde6
  40e1a1:	out    dx,al
  40e1a2:	std    
  40e1a3:	jmp    FWORD PTR [edi-0x3c17f99c]
  40e1a9:	lahf   
  40e1aa:	std    
  40e1ab:	(bad)  
  40e1ac:	jg     0x40e152
  40e1ae:	loop   0x40e1a7
  40e1b0:	(bad)  
  40e1b1:	out    0xfd,al
  40e1b3:	jne    0x40e1b5
  40e1b5:	in     al,dx
  40e1b6:	mov    ebx,0xfde68f44
  40e1bb:	mov    ch,0x78
  40e1bd:	out    dx,al
  40e1be:	std    
  40e1bf:	jmp    FWORD PTR [edi+0x64]
  40e1c2:	push   es
  40e1c3:	call   0x3e8187
  40e1c8:	shld   edx,ebx,0xf7
  40e1cc:	jmp    ebp
  40e1ce:	std    
  40e1cf:	jne    0x40e1a1
  40e1d1:	jmp    0x40e251
  40e1d3:	inc    BYTE PTR [eax]
  40e1d5:	add    BYTE PTR [edi],cl
  40e1d7:	out    0xfd,al
  40e1d9:	mov    ch,0x6c
  40e1db:	out    dx,al
  40e1dc:	std    
  40e1dd:	push   DWORD PTR [ecx]
  40e1df:	adc    eax,0xe9e46aa
  40e1e4:	jbe    0x40e19a
  40e1e6:	mov    eax,ds:0x99fe745e
  40e1eb:	int    0xbd
  40e1ed:	inc    BYTE PTR [esi-0x7914519a]
  40e1f3:	outs   dx,BYTE PTR ds:[esi]
  40e1f4:	je     0x40e1dd
  40e1f6:	pushf  
  40e1f7:	cs jne 0x40e1f8
  40e1fa:	outs   dx,BYTE PTR ds:[esi]
  40e1fb:	mov    BYTE PTR [ebx-0xa],ch
  40e1fe:	inc    si
  40e200:	imul   ecx,DWORD PTR [ecx-0x18bb20a],0xffffff9c
  40e207:	push   ecx
  40e208:	ins    BYTE PTR es:[edi],dx
  40e209:	dec    BYTE PTR [esi+0x45]
  40e20c:	hlt    
  40e20d:	inc    esi
  40e20e:	inc    esi
  40e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e210:	je     0x40e1c6
  40e212:	push   ecx
  40e213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e214:	je     0x40e214
  40e216:	dec    ecx
  40e217:	add    DWORD PTR [ebp-0x4181d102],edi
  40e21d:	neg    DWORD PTR [eax]
  40e21f:	or     eax,0x8e1efe76
  40e224:	out    dx,al
  40e225:	sti    
  40e226:	or     edi,edx
  40e228:	sbb    al,BYTE PTR [eax]
  40e22a:	xor    DWORD PTR [ecx+eax*2-0x76ffcef9],esp
  40e231:	jmp    0x40e1e5
  40e233:	mov    eax,0x43316977
  40e238:	leave  
  40e239:	inc    BYTE PTR [eax]
  40e23b:	add    BYTE PTR [ebp+eiz*2+0x6a],ah
  40e23f:	test   DWORD PTR [ebp-0x3a],ebp
  40e242:	je     0x40e1cc
  40e244:	je     0x40e217
  40e246:	jmp    0x40e1ff
  40e248:	outs   dx,BYTE PTR ds:[esi]
  40e249:	lods   al,BYTE PTR ds:[esi]
  40e24a:	add    bh,bh
  40e24c:	inc    esp
  40e24d:	gs push 0x7
  40e250:	(bad)  
  40e251:	and    eax,0x3144fe75
  40e256:	jne    0x40e2cc
  40e258:	sub    DWORD PTR [ecx+edx*1],edx
  40e25b:	mov    bl,0xf2
  40e25d:	pop    esi
  40e25e:	sbb    eax,0xe917704b
  40e263:	into   
  40e264:	stos   DWORD PTR es:[edi],eax
  40e265:	outs   dx,DWORD PTR ds:[esi]
  40e266:	imul   eax,DWORD PTR [eax-0x5e],0x99077b5e
  40e26d:	cmp    cl,ah
  40e26f:	add    esi,DWORD PTR [ecx]
  40e271:	or     ebp,DWORD PTR [ecx]
  40e273:	out    dx,eax
  40e274:	xor    cl,BYTE PTR [ebp+0x2a]
  40e277:	or     BYTE PTR [ecx],dh
  40e279:	pop    edi
  40e27a:	pop    ebx
  40e27b:	adc    al,0x59
  40e27d:	or     BYTE PTR [ecx],al
  40e27f:	add    al,0x31
  40e281:	or     ebp,DWORD PTR [ecx-0x55b2cd12]
  40e287:	pop    es
  40e288:	xor    DWORD PTR [ebp-0x17b083d5],ecx
  40e28e:	shr    BYTE PTR [ebx+0x1d],0xd7
  40e292:	mov    ch,0x74
  40e294:	test   eax,0xbd74acd8
  40e299:	pop    edi
  40e29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29b:	out    dx,al
  40e29c:	es pop esi
  40e29e:	adc    edx,DWORD PTR [eax+eax*1]
  40e2a1:	add    BYTE PTR [ecx],bl
  40e2a3:	dec    edi
  40e2a4:	cmp    dh,BYTE PTR [ebp+0x1f]
  40e2a7:	or     ch,BYTE PTR [ecx+0x2b8b5bef]
  40e2ad:	jo     0x40e247
  40e2af:	adc    al,0x6c
  40e2b1:	mov    esi,0xee75c502
  40e2b6:	cli    
  40e2b7:	ins    BYTE PTR es:[edi],dx
  40e2b8:	mov    edx,0xf15df7e7
  40e2bd:	inc    ebx
  40e2be:	bound  esi,QWORD PTR [esi]
  40e2c0:	rol    DWORD PTR [ebx],1
  40e2c2:	inc    ecx
  40e2c3:	ins    DWORD PTR es:[edi],dx
  40e2c4:	xchg   esi,eax
  40e2c5:	je     0x40e32c
  40e2c7:	or     al,0x41
  40e2c9:	shl    DWORD PTR [ebx+0x5d],cl
  40e2cc:	inc    ebp
  40e2cd:	je     0x40e314
  40e2cf:	adc    BYTE PTR [esi],bh
  40e2d1:	out    dx,al
  40e2d2:	cs ins BYTE PTR es:[edi],dx
  40e2d4:	dec    DWORD PTR [ebp+0x2efe5ef1]
  40e2da:	(bad)  
  40e2db:	popa   
  40e2dc:	(bad)  
  40e2dd:	pushf  
  40e2de:	es pop esi
  40e2e0:	je     0x40e2d3
  40e2e2:	sbb    dh,al
  40e2e4:	inc    edx
  40e2e5:	push   ss
  40e2e6:	and    eax,0xa0d745e
  40e2eb:	mov    bh,0x45
  40e2ed:	push   es
  40e2ee:	add    eax,0x32edc14c
  40e2f3:	(bad)  
  40e2f4:	mov    al,BYTE PTR ds:0x97d351b1
  40e2fa:	std    
  40e2fb:	out    0xb,eax
  40e2fd:	rcr    DWORD PTR [edx-0x36],1
  40e300:	(bad)  
  40e301:	fisub  WORD PTR [esi-0x63]
  40e304:	je     0x40e2f2
  40e306:	add    BYTE PTR [eax],al
  40e308:	or     BYTE PTR [ecx+eax*8-0x23],0x32
  40e30d:	pop    DWORD PTR [ecx+edi*4+0x65]
  40e311:	pop    esi
  40e312:	je     0x40e301
  40e314:	jmp    0xc009:0xc2b64bfb
  40e31b:	fisubr WORD PTR [esi+0x32e8ff3d]
  40e321:	pop    ebp
  40e322:	je     0x40e2c1
  40e324:	test   DWORD PTR [eax-0x735d69bb],ebx
  40e32a:	inc    esp
  40e32b:	jge    0x40e2cf
  40e32d:	call   0x69496a2d
  40e332:	(bad)  
  40e333:	hlt    
  40e334:	call   0x8a5e:0x822faa75
  40e33b:	hlt    
  40e33c:	push   esi
  40e33d:	ins    BYTE PTR es:[edi],dx
  40e33e:	mov    ds:0x681432e9,al
  40e343:	cli    
  40e344:	stos   BYTE PTR es:[edi],al
  40e345:	sar    edi,cl
  40e347:	mov    esi,0xe917657a
  40e34c:	xor    cl,BYTE PTR [ecx]
  40e34e:	rol    BYTE PTR [eax],0x8d
  40e351:	or     ebp,ecx
  40e353:	cwde   
  40e354:	fcom   DWORD PTR [eax]
  40e356:	add    BYTE PTR [ebx+0x48113ff8],cl
  40e35c:	mov    DWORD PTR [eax],edx
  40e35e:	call   0x51929c
  40e363:	add    ecx,DWORD PTR [eax-0x21]
  40e366:	jae    0x40e350
  40e368:	mov    al,0x35
  40e36a:	dec    eax
  40e36b:	inc    ecx
  40e36c:	add    BYTE PTR [eax],al
  40e36e:	mov    BYTE PTR [edx],bh
  40e370:	out    0xd3,al
  40e372:	nop
  40e373:	adc    BYTE PTR [eax],al
  40e375:	or     ebx,DWORD PTR [eax+0x5b]
  40e378:	add    bl,ch
  40e37a:	(bad)  
  40e37b:	fimul  WORD PTR [esi]
  40e37d:	mov    BYTE PTR [ebp+0x7c4587f5],bl
  40e383:	cmp    BYTE PTR [ebx],ah
  40e385:	dec    eax
  40e386:	sbb    DWORD PTR [eax],ebx
  40e388:	push   esi
  40e389:	call   0x40ec50
  40e38e:	push   ebx
  40e38f:	shl    BYTE PTR [ebx+0x2],1
  40e392:	arpl   WORD PTR [ebx-0x77],ax
  40e395:	lock loopne 0x40e3c2
  40e398:	dec    eax
  40e399:	inc    ecx
  40e39a:	dec    eax
  40e39b:	mov    eax,0x104816fc
  40e3a0:	add    esi,eax
  40e3a2:	mov    eax,ds:0xfb68da5c
  40e3a7:	lahf   
  40e3a8:	aas    
  40e3a9:	add    BYTE PTR [esi-0x48],bl
  40e3ac:	xchg   esi,eax
  40e3ad:	sbb    BYTE PTR [eax],cl
  40e3af:	sbb    BYTE PTR [ebx],cl
  40e3b1:	ror    BYTE PTR ds:0x823beb12,0x7
  40e3b8:	mov    BYTE PTR [ebp-0x61],dl
  40e3bb:	fadd   DWORD PTR [ebx-0x28]
  40e3be:	xchg   ebx,eax
  40e3bf:	dec    esp
  40e3c0:	loop   0x40e388
  40e3c2:	fcom   DWORD PTR [edi]
  40e3c4:	mov    eax,DWORD PTR [ebp+0x70]
  40e3c7:	int    0xfe
  40e3c9:	push   DWORD PTR [ecx]
  40e3cb:	ret    0xdbf7
  40e3ce:	(bad)  
  40e3cf:	inc    eax
  40e3d0:	pop    edx
  40e3d1:	inc    BYTE PTR [eax]
  40e3d3:	add    BYTE PTR [ebp+eiz*2+0x5a],al
  40e3d7:	xchg   edx,eax
  40e3d8:	(bad)  
  40e3d9:	sbb    dh,BYTE PTR [edx-0x77]
  40e3dc:	fs into 
  40e3de:	jge    0x40e424
  40e3e0:	int    0xf5
  40e3e2:	adc    cl,BYTE PTR [edx+0x447e1a04]
  40e3e8:	mov    ebp,esp
  40e3ea:	adc    al,BYTE PTR [eax-0x7afe92a1]
  40e3f0:	std    
  40e3f1:	or     DWORD PTR [edx-0x2],esi
  40e3f4:	mov    ds,eax
  40e3f6:	pop    esi
  40e3f7:	out    0xd0,eax
  40e3f9:	mov    al,0x71
  40e3fb:	(bad)  
  40e3fc:	lods   al,BYTE PTR ds:[esi]
  40e3fd:	test   al,0x72
  40e3ff:	dec    edi
  40e400:	mov    DWORD PTR [edx],esi
  40e402:	mov    esi,0x3466efe
  40e407:	pop    esi
  40e408:	js     0x40e3b9
  40e40a:	(bad)  
  40e40b:	inc    DWORD PTR [esi+esi*8]
  40e40e:	pop    edi
  40e40f:	(bad)  
  40e410:	fdivr  QWORD PTR [eax]
  40e412:	pop    edx
  40e413:	aam    0xf8
  40e415:	push   ecx
  40e416:	jo     0x40e422
  40e418:	jno    0x40e43b
  40e41a:	sbb    ebp,DWORD PTR [eax+0x47]
  40e41d:	sub    al,bl
  40e41f:	jmp    esi
  40e421:	push   esp
  40e422:	fisttp QWORD PTR [eax+0x2e]
  40e425:	mov    dl,0xd3
  40e427:	addr16 aaa 
  40e429:	lahf   
  40e42a:	ret    
  40e42b:	call   DWORD PTR [esi-0x2810fd93]
  40e431:	adc    al,0x9
  40e433:	dec    eax
  40e434:	jo     0x40e4a3
  40e436:	sar    dh,cl
  40e438:	add    BYTE PTR [eax],al
  40e43a:	jl     0x40e4a1
  40e43c:	pop    edx
  40e43d:	or     DWORD PTR [ecx+0x58e770e2],0xf8fe7130
  40e447:	adc    ebp,DWORD PTR [ebx]
  40e449:	cld    
  40e44a:	out    0xbf,al
  40e44c:	jno    0x40e4ae
  40e44e:	mov    bl,0x4f
  40e450:	push   esp
  40e451:	(bad)  
  40e453:	in     al,dx
  40e454:	mov    ds:0x510c4570,al
  40e459:	in     eax,dx
  40e45a:	jo     0x40e4b7
  40e45c:	cmp    eax,0xc258757b
  40e461:	or     eax,0x5be0e0b6
  40e466:	aad    0x5a
  40e468:	and    eax,0x1e371871
  40e46d:	div    DWORD PTR [esi]
  40e46f:	ins    BYTE PTR es:[edi],dx
  40e470:	jno    0x40e4e3
  40e472:	xchg   edi,eax
  40e473:	pop    edx
  40e474:	or     BYTE PTR [edi],0x8e
  40e477:	loopne 0x40e469
  40e479:	pop    ebx
  40e47a:	mov    eax,ds:0x1670fd5a
  40e47f:	adc    al,0xe9
  40e481:	pusha  
  40e482:	mov    ah,0xeb
  40e484:	out    0xbb,eax
  40e486:	icebp  
  40e487:	adc    edx,DWORD PTR [ecx+0x7a]
  40e48a:	out    dx,eax
  40e48b:	aam    0xe8
  40e48d:	jo     0x40e474
  40e48f:	or     eax,ecx
  40e491:	es retf 
  40e493:	pop    edx
  40e494:	int    0x70
  40e496:	lds    edx,FWORD PTR [edi-0x3b]
  40e499:	imul   BYTE PTR [esi]
  40e49b:	ins    BYTE PTR es:[edi],dx
  40e49c:	mov    BYTE PTR ds:[eax],0x0
  40e4a0:	aas    
  40e4a1:	pop    edx
  40e4a2:	lahf   
  40e4a3:	inc    ebp
  40e4a4:	xor    dl,BYTE PTR [esp+edx*1]
  40e4a7:	jge    0x40e4c3
  40e4a9:	xchg   esp,eax
  40e4aa:	lods   al,BYTE PTR ds:[esi]
  40e4ab:	dec    ebx
  40e4ac:	pop    ds
  40e4ad:	pop    edx
  40e4ae:	popf   
  40e4af:	jle    0x40e526
  40e4b1:	pop    eax
  40e4b2:	cmp    BYTE PTR [ecx-0x63],dh
  40e4b5:	or     BYTE PTR [esi+0x2c6c36f6],cl
  40e4bb:	sbb    DWORD PTR [ecx],esi
  40e4bd:	adc    al,0xf2
  40e4bf:	inc    ebx
  40e4c0:	das    
  40e4c1:	(bad)  
  40e4c2:	jmp    FWORD PTR [eax-0x59ffebcd]
  40e4c8:	mul    DWORD PTR [ecx-0x1]
  40e4cb:	call   0xa507f902
  40e4d0:	pop    dx
  40e4d2:	push   es
  40e4d3:	jmp    0xc340d30a
  40e4d8:	xor    ch,dh
  40e4da:	call   edx
  40e4dc:	xor    al,BYTE PTR [edi-0x771dcabc]
  40e4e2:	test   BYTE PTR ds:0x99fe5a39,bh
  40e4e8:	and    eax,esp
  40e4ea:	mul    DWORD PTR [esi]
  40e4ec:	lahf   
  40e4ed:	pop    ebp
  40e4ee:	out    0xf7,eax
  40e4f0:	cmp    DWORD PTR [eax+eax*1],edx
  40e4f3:	loop   0x40e4e7
  40e4f5:	in     al,0x4
  40e4f7:	add    BYTE PTR [ebp+0x6ae90014],dh
  40e4fd:	dec    eax
  40e4fe:	daa    
  40e4ff:	test   al,0x32
  40e501:	pop    ecx
  40e502:	je     0x40e4e9
  40e504:	add    BYTE PTR [eax],al
  40e506:	ficomp DWORD PTR [ebx]
  40e508:	dec    eax
  40e509:	out    dx,al
  40e50a:	fmulp  st(0),st
  40e50c:	mov    bh,BYTE PTR [ecx-0x290c6f50]
  40e512:	into   
  40e513:	pop    ecx
  40e514:	dec    edi
  40e515:	cmp    esi,ebp
  40e517:	sub    ecx,DWORD PTR [eax-0x32]
  40e51a:	fimul  WORD PTR [ebx+0x59bea184]
  40e520:	(bad)  
  40e521:	ror    DWORD PTR [esi-0x2b],1
  40e524:	(bad)  
  40e525:	mov    dh,0x5b
  40e527:	pop    ecx
  40e528:	data16 sbb ch,ch
  40e52b:	sar    edi,cl
  40e52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52e:	call   0x8edfdb73
  40e533:	pop    edx
  40e534:	je     0x40e517
  40e536:	jp     0x40e4cb
  40e538:	inc    esi
  40e539:	mov    ds,WORD PTR [esi-0x77ff7b74]
  40e53f:	loope  0x40e53e
  40e541:	jmp    DWORD PTR [edx]
  40e543:	adc    BYTE PTR [eax+0x5a],ch
  40e546:	push   eax
  40e547:	dec    edi
  40e548:	(bad)  
  40e549:	(bad)  
  40e54a:	and    eax,0x4ffff5c8
  40e54f:	jmp    0x71c0edc7
  40e554:	inc    ebp
  40e555:	(bad)  
  40e556:	jg     0x40e52f
  40e558:	sub    esp,0x67
  40e55b:	jmp    0x3d19505d
  40e560:	popa   
  40e561:	dec    eax
  40e562:	mov    DWORD PTR [edi+edi*8],edx
  40e565:	mov    ch,0x20
  40e567:	loope  0x40e566
  40e569:	inc    DWORD PTR [eax]
  40e56b:	add    BYTE PTR [edi+0x5b],bl
  40e56e:	push   es
  40e56f:	call   0x3e3750
  40e574:	and    DWORD PTR [ebx-0x16c0081a],ecx
  40e57a:	mov    eax,DWORD PTR [ebp-0x21ea4]
  40e580:	test   al,0x3c
  40e582:	push   0x48
  40e584:	leave  
  40e585:	adc    al,0xff
  40e587:	mov    ch,0x20
  40e589:	loope  0x40e588
  40e58b:	call   FWORD PTR [edi+0x5b]
  40e58e:	push   es
  40e58f:	call   0x3e36d0
  40e594:	loope  0x40e521
  40e596:	loop   0x40e58f
  40e598:	jg     0x40e583
  40e59a:	push   0x4660f000
  40e59f:	inc    ecx
  40e5a0:	pop    eax
  40e5a1:	jmp    0xe9c8be59
  40e5a6:	std    
  40e5a7:	push   ebp
  40e5a9:	push   edi
  40e5aa:	out    0x11,al
  40e5ac:	push   edi
  40e5ad:	out    0xfd,eax
  40e5af:	mov    DWORD PTR [ebp-0x40000a0d],edx
  40e5b5:	xchg   edx,eax
  40e5b6:	mov    ebx,0x6d7631f0
  40e5bb:	(bad)  
  40e5bc:	xor    DWORD PTR [ecx],eax
  40e5be:	fild   DWORD PTR [edx-0x18a7e3c]
  40e5c4:	(bad)  
  40e5c5:	ins    DWORD PTR es:[edi],dx
  40e5c6:	mul    BYTE PTR [ecx-0x4e]
  40e5c9:	and    BYTE PTR [ebx-0xa],bl
  40e5cc:	out    dx,al
  40e5cd:	out    0x2,al
  40e5cf:	je     0x40e5d1
  40e5d1:	add    BYTE PTR [eax-0x31fffdbb],cl
  40e5d7:	ja     0x40e646
  40e5d9:	je     0x40e61c
  40e5db:	aad    0xd6
  40e5dd:	aas    
  40e5de:	into   
  40e5df:	(bad)  
  40e5e0:	ins    DWORD PTR es:[edi],dx
  40e5e1:	mov    ah,0xc1
  40e5e3:	push   ss
  40e5e4:	outs   dx,BYTE PTR ds:[esi]
  40e5e5:	(bad)  
  40e5e6:	mov    esi,0x89e812a0
  40e5eb:	lods   eax,DWORD PTR ds:[esi]
  40e5ec:	ins    DWORD PTR es:[edi],dx
  40e5ed:	(bad)  
  40e5ee:	scas   al,BYTE PTR es:[edi]
  40e5ef:	loopne 0x40e64f
  40e5f1:	mul    BYTE PTR [esi+0x41746e2e]
  40e5f7:	add    eax,0xfe963f89
  40e5fc:	ins    DWORD PTR es:[edi],dx
  40e5fd:	mov    ah,0x99
  40e5ff:	(bad)  
  40e600:	ins    DWORD PTR es:[edi],dx
  40e601:	inc    BYTE PTR [esi-0x5217ed28]
  40e607:	lods   eax,DWORD PTR ds:[esi]
  40e608:	ins    DWORD PTR es:[edi],dx
  40e609:	(bad)  
  40e60a:	jbe    0x40e624
  40e60c:	dec    edi
  40e60d:	imul   BYTE PTR [esi+0x66]
  40e610:	ins    BYTE PTR es:[edi],dx
  40e611:	mov    ah,0x4d
  40e613:	ss ins BYTE PTR es:[edi],dx
  40e615:	(bad)  
  40e616:	pop    esi
  40e617:	rcl    BYTE PTR [ebx],0xe8
  40e61a:	in     eax,0x2c
  40e61c:	ins    DWORD PTR es:[edi],dx
  40e61d:	dec    BYTE PTR [esi-0x80]
  40e620:	arpl   si,si
  40e622:	inc    esi
  40e623:	dec    esi
  40e624:	ins    BYTE PTR es:[edi],dx
  40e625:	je     0x40e648
  40e627:	inc    ebp
  40e628:	fnstcw WORD PTR [edi]
  40e62a:	ss sahf 
  40e62c:	ins    BYTE PTR es:[edi],dx
  40e62d:	je     0x40e670
  40e62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e630:	mov    dh,0xd7
  40e632:	push   ds
  40e633:	adc    al,0xa6
  40e635:	ins    DWORD PTR es:[edi],dx
  40e636:	add    BYTE PTR [eax],al
  40e638:	pop    ds
  40e639:	loope  0x40e62b
  40e63b:	pop    ebx
  40e63c:	mov    al,ds:0xf6d9556
  40e641:	mov    eax,ds:0x570775b0
  40e646:	nop
  40e647:	loope  0x40e6bc
  40e649:	push   edi
  40e64a:	jge    0x40e6b9
  40e64c:	mov    ebp,0xef6d7d63
  40e651:	imul   edx,DWORD PTR [eax],0xffffffc1
  40e654:	out    0x56,eax
  40e656:	gs mov bh,0xca
  40e659:	pop    esi
  40e65a:	pop    ebp
  40e65b:	ins    DWORD PTR es:[edi],dx
  40e65c:	into   
  40e65d:	enter  0x6ca9,0xcf
  40e661:	push   esi
  40e662:	xchg   ebx,eax
  40e663:	pop    esp
  40e664:	mov    edi,0x705c4556
  40e669:	sar    DWORD PTR ds:0x4ca0b76d,cl
  40e66f:	jne    0x40e620
  40e671:	push   esi
  40e672:	inc    eax
  40e673:	xor    eax,0x6d2556f2
  40e678:	in     eax,0x73
  40e67a:	adc    eax,0xc46b976d
  40e67f:	ror    BYTE PTR [edi+0x7ec70d56],0x6c
  40e686:	mov    ch,0x6d
  40e688:	jg     0x40e6e0
  40e68a:	std    
  40e68b:	idiv   BYTE PTR [edx+0x6b]
  40e68e:	jle    0x40e6a6
  40e690:	xor    DWORD PTR [eax+eiz*1],edx
  40e693:	inc    edx
  40e694:	cmp    dl,BYTE PTR [esp+edi*1]
  40e697:	jns    0x40e6e3
  40e699:	xchg   edx,eax
  40e69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e69b:	outs   dx,DWORD PTR ds:[esi]
  40e69c:	add    BYTE PTR [eax],al
  40e69e:	enter  0x4313,0xb9
  40e6a2:	dec    edi
  40e6a3:	loopne 0x40e685
  40e6a5:	pop    ebx
  40e6a6:	add    al,0xd4
  40e6a8:	lds    ebp,FWORD PTR [ecx+ebp*4-0x30]
  40e6ac:	mov    esp,0xbbd6c
  40e6b1:	inc    ecx
  40e6b2:	dec    esi
  40e6b3:	int3   
  40e6b4:	inc    eax
  40e6b5:	jmp    0xd09d074f
  40e6ba:	repz push ebp
  40e6bc:	out    0x95,al
  40e6be:	xchg   DWORD PTR [esi-0x2],edx
  40e6c1:	xchg   esi,eax
  40e6c2:	pop    es
  40e6c3:	push   cs
  40e6c4:	push   0xffd4cabc
  40e6c9:	adc    BYTE PTR [ebx],dh
  40e6cb:	adc    al,0x0
  40e6cd:	imul   ebx,DWORD PTR [edx+0x73],0x565d76fc
  40e6d4:	je     0x40e743
  40e6d6:	push   ebp
  40e6d7:	loopne 0x40e6e0
  40e6d9:	push   ecx
  40e6da:	add    edx,DWORD PTR [esi]
  40e6dc:	call   FWORD PTR [esi+0x1b]
  40e6df:	push   ebx
  40e6e0:	add    ebp,ecx
  40e6e2:	out    0x8a,eax
  40e6e4:	jmp    0x40e750
  40e6e6:	outs   dx,BYTE PTR ds:[esi]
  40e6e7:	pop    ecx
  40e6e8:	imul   ebp,ecx,0xb4fec9d8
  40e6ee:	mov    edx,0x1df6f46d
  40e6f3:	push   esi
  40e6f4:	mov    BYTE PTR [esi+edx*1-0x2170013],ah
  40e6fb:	xchg   esi,eax
  40e6fc:	addr16 gs fcmovbe st,st(4)
  40e700:	inc    DWORD PTR [eax-0x32f30000]
  40e706:	inc    eax
  40e707:	jmp    0x1148c721
  40e70c:	iret   
  40e70d:	out    dx,al
  40e70e:	(bad)  
  40e70f:	dec    BYTE PTR [edx]
  40e711:	loopne 0x40e70e
  40e713:	mul    BYTE PTR [ebp+ecx*1-0x18]
  40e717:	xlat   BYTE PTR ds:[ebx]
  40e718:	jb     0x40e770
  40e71a:	(bad)  
  40e71b:	mov    al,0xf7
  40e71d:	adc    BYTE PTR [eax],al
  40e71f:	xor    al,0xd6
  40e721:	push   0x5de5ad80
  40e726:	dec    dh
  40e728:	enter  0xfbcf,0x0
  40e72c:	sbb    cl,ch
  40e72e:	jae    0x40e73c
  40e730:	ja     0x40e795
  40e732:	push   es
  40e733:	call   0x40eafc
  40e738:	adc    edx,ecx
  40e73a:	or     eax,0xf1d85
  40e73f:	add    bh,cl
  40e741:	push   edx
  40e742:	test   BYTE PTR [eax],0x18
  40e745:	adc    DWORD PTR [eax],eax
  40e747:	(bad)  
  40e748:	dec    ebp
  40e749:	in     al,0xfd
  40e74b:	pop    es
  40e74c:	or     BYTE PTR [ecx],dl
  40e74e:	push   0x0
  40e750:	and    dl,BYTE PTR [eax]
  40e752:	push   0x0
  40e754:	xor    dl,BYTE PTR [eax]
  40e756:	lea    eax,[ebp+0x5c]
  40e759:	inc    eax
  40e75a:	mov    eax,DWORD PTR [ebp-0x21e84]
  40e760:	cwde   
  40e761:	jmp    0x63a8dfd9
  40e766:	cli    
  40e767:	call   0x486e76c
  40e76c:	add    BYTE PTR [eax],al
  40e76e:	ret    
  40e76f:	shl    BYTE PTR [edx+0x5],1
  40e772:	popa   
  40e773:	enter  0xffff,0x98
  40e777:	cmp    bl,cl
  40e779:	sub    cl,bl
  40e77b:	adc    bh,bh
  40e77d:	jne    0x40e723
  40e77f:	mov    eax,0xe93745cf
  40e784:	dec    esi
  40e785:	mov    ecx,DWORD PTR [eax-0x25]
  40e788:	xor    esp,0x1f
  40e78b:	jmp    0xb8db388d
  40e790:	mov    edi,0x87e97745
  40e795:	test   DWORD PTR [eax-0x1f],eax
  40e798:	std    
  40e799:	push   DWORD PTR [eax]
  40e79b:	add    DWORD PTR [edx-0x1],eax
  40e79e:	push   edi
  40e79f:	ss (bad) 
  40e7a1:	addr16 mov esi,0x31003f98
  40e7a7:	ds scas eax,DWORD PTR es:[edi]
  40e7a9:	xlat   BYTE PTR ds:[ebx]
  40e7aa:	ds inc ebp
  40e7ac:	imul   edi,esi,0x195a62c4
  40e7b2:	in     al,dx
  40e7b3:	xchg   ebp,eax
  40e7b4:	imul   ecx,DWORD PTR [eax-0x18e724c],0x6803d826
  40e7be:	in     al,dx
  40e7bf:	add    eax,0xe917ffc5
  40e7c4:	dec    edx
  40e7c5:	test   BYTE PTR [esi],0xab
  40e7c8:	imul   esi,DWORD PTR [ecx+edi*1-0x6b],0x4369
  40e7d0:	(bad)  
  40e7d1:	call   0xfe69:0xcb05847b
  40e7d8:	pop    ebx
  40e7d9:	cmp    eax,0xfc79e1da
  40e7de:	add    edi,edi
  40e7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e1:	aad    0x71
  40e7e3:	(bad)  
  40e7e4:	(bad)  
  40e7e5:	repnz out dx,eax
  40e7e7:	pop    es
  40e7e8:	fabs   
  40e7ea:	mov    esi,0x7fb4c6fe
  40e7ef:	out    0xc6,eax
  40e7f1:	fisubr DWORD PTR [ecx-0x74]
  40e7f4:	lods   al,BYTE PTR ds:[esi]
  40e7f5:	xor    DWORD PTR [edx-0x2],esi
  40e7f8:	scas   al,BYTE PTR es:[edi]
  40e7f9:	lods   eax,DWORD PTR ds:[esi]
  40e7fa:	(bad)  
  40e7fc:	stc    
  40e7fd:	jnp    0x40e801
  40e7ff:	jmp    esp
  40e801:	aad    0x71
  40e803:	(bad)  
  40e804:	xchg   esi,eax
  40e805:	xor    dh,al
  40e807:	pop    es
  40e808:	cdq    
  40e809:	add    DWORD PTR [edi+0x7fb486fe],edi
  40e80f:	jecxz  0x40e797
  40e811:	sbb    ch,BYTE PTR [edx+0x69]
  40e814:	xor    DWORD PTR [ebp+0x3cf04912],esp
  40e81a:	imul   esi,DWORD PTR [ecx+ecx*4+0x5efe684a],0x4efc5c14
  40e825:	jge    0x40e84b
  40e827:	imul   ecx,DWORD PTR [edi-0x63],0x533f646b
  40e82e:	int    0x77
  40e830:	mov    ch,0x64
  40e832:	mov    ebp,0x37000069
  40e837:	in     al,0x50
  40e839:	sbb    al,0x78
  40e83b:	aad    0xe8
  40e83d:	push   0x69b56bdd
  40e842:	pop    ds
  40e843:	push   ebx
  40e844:	sbb    edi,esp
  40e846:	push   cs
  40e847:	popf   
  40e848:	and    al,0x69
  40e84a:	setge  BYTE PTR [ebx+0x50]
  40e84e:	call   DWORD PTR [edx-0x73]
  40e851:	test   DWORD PTR [ebp-0x89682bd],edi
  40e857:	adc    esi,ebp
  40e859:	fdiv   QWORD PTR [ebx-0x188e7b70]
  40e85f:	push   edx
  40e860:	call   0xa3d83954
  40e865:	pop    esp
  40e866:	fist   WORD PTR [edx+0x5d]
  40e869:	add    al,0x45
  40e86b:	in     eax,dx
  40e86c:	rol    BYTE PTR [ebx],0x31
  40e86f:	inc    ebx
  40e870:	mov    gs,WORD PTR [ecx+0x45]
  40e873:	and    al,0x51
  40e875:	cmp    ch,dh
  40e877:	push   edx
  40e878:	cmp    eax,0x3d43e569
  40e87d:	imul   esp,DWORD PTR [edi-0x76ec4cae],0x9768e6f3
  40e887:	push   edx
  40e888:	push   ebx
  40e889:	pop    eax
  40e88a:	xchg   DWORD PTR [edx+0x15],edx
  40e88d:	imul   edi,ebp,0x3f160123
  40e893:	push   ebx
  40e894:	add    eax,0xf53bbd69
  40e899:	push   0x526f0000
  40e89e:	(bad)  
  40e89f:	jnp    0x40e8e3
  40e8a1:	cmp    al,0x3
  40e8a3:	scas   eax,DWORD PTR es:[edi]
  40e8a4:	leave  
  40e8a5:	push   ecx
  40e8a6:	(bad)  
  40e8a7:	pushf  
  40e8a8:	out    dx,al
  40e8a9:	dec    ecx
  40e8aa:	(bad)  
  40e8ab:	fcompp 
  40e8ad:	xchg   ebx,esp
  40e8af:	fcompp 
  40e8b1:	push   ecx
  40e8b2:	(bad)  
  40e8b3:	push   esp
  40e8b4:	and    eax,0xc804c33c
  40e8b9:	push   ecx
  40e8ba:	(bad)  
  40e8bb:	je     0x40e84f
  40e8bd:	dec    edx
  40e8be:	(bad)  
  40e8bf:	mov    dh,0x99
  40e8c1:	enter  0xc10f,0x94
  40e8c5:	adc    bh,bh
  40e8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c8:	lods   eax,DWORD PTR ds:[esi]
  40e8c9:	nop
  40e8ca:	iret   
  40e8cb:	xchg   esi,eax
  40e8cc:	cdq    
  40e8cd:	push   edx
  40e8ce:	call   FWORD PTR [edx+edx*2]
  40e8d1:	mov    esp,0x8f59e900
  40e8d6:	(bad)  
  40e8d7:	cld    
  40e8d8:	and    bh,BYTE PTR [ecx+ebp*2]
  40e8db:	mov    esp,0x3cfe5259
  40e8e0:	or     BYTE PTR [edx-0x2],0x6e
  40e8e4:	dec    ecx
  40e8e5:	mov    bl,dl
  40e8e7:	pop    esi
  40e8e8:	dec    ecx
  40e8e9:	push   edx
  40e8ea:	(bad)  
  40e8eb:	aam    0x22
  40e8ed:	cmp    al,0x8b
  40e8ef:	adc    al,0x58
  40e8f1:	push   edx
  40e8f2:	(bad)  
  40e8f3:	aam    0x22
  40e8f5:	push   ecx
  40e8f6:	mov    ah,0x21
  40e8f8:	inc    ecx
  40e8f9:	push   edx
  40e8fa:	(bad)  
  40e8fb:	ds lahf 
  40e8fd:	sbb    eax,ebp
  40e8ff:	add    DWORD PTR [eax],eax
  40e901:	add    BYTE PTR [ebx],bl
  40e903:	push   edx
  40e904:	(bad)  
  40e905:	cs iret 
  40e907:	imul   esi,esi,0xb0390926
  40e90d:	test   eax,0x5cfe5219
  40e912:	add    cl,BYTE PTR [edx-0x2]
  40e915:	push   cs
  40e916:	fidiv  DWORD PTR [esi+0x3f]
  40e919:	add    BYTE PTR [edi],ch
  40e91b:	mov    esp,0xc43cb5fd
  40e920:	std    
  40e921:	push   DWORD PTR [eax]
  40e923:	mov    al,ds:0xb94fff3e
  40e928:	mov    bl,0xe8
  40e92a:	ja     0x40e8e5
  40e92c:	std    
  40e92d:	call   0x3e40fa
  40e932:	pop    edi
  40e933:	and    edx,0xfffffff7
  40e936:	outs   dx,DWORD PTR ds:[esi]
  40e937:	mov    ecx,0xb90885e6
  40e93c:	std    
  40e93d:	jmp    DWORD PTR [ebp-0x20000a48]
  40e943:	out    dx,eax
  40e944:	js     0x40e986
  40e946:	iret   
  40e947:	mov    eax,0xc0d4b5fd
  40e94c:	std    
  40e94d:	jmp    DWORD PTR [eax-0x6000c198]
  40e953:	mov    eax,0xbdb1f843
  40e958:	sti    
  40e959:	jmp    FWORD PTR [edi-0x3f038c48]
  40e95f:	jle    0x40e971
  40e961:	add    al,bl
  40e963:	xadd   DWORD PTR [eax+eax*1],ecx
  40e967:	add    al,cl
  40e969:	arpl   WORD PTR [ecx-0x52bb414],cx
  40e96f:	push   0xffffffd8
  40e971:	push   0x4b
  40e973:	jmp    ebp
  40e975:	dec    esp
  40e976:	out    0x81,al
  40e978:	sub    eax,0x8589fdb9
  40e97d:	mov    eax,0x6ca075fd
  40e982:	cwde   
  40e983:	dec    eax
  40e984:	fst    DWORD PTR [edi+edi*8]
  40e987:	xor    eax,0x412fac
  40e98c:	inc    eax
  40e98d:	cdq    
  40e98e:	sti    
  40e98f:	jmp    FWORD PTR [edi]
  40e991:	mov    ecx,0x93310873
  40e996:	mov    BYTE PTR [edi-0x10],al
  40e999:	cmp    bl,dl
  40e99b:	add    DWORD PTR [ecx],esi
  40e99d:	cmp    eax,DWORD PTR [edx+0x654fbce7]
  40e9a3:	(bad)  
  40e9a4:	iretw  
  40e9a6:	data16 (bad) 
  40e9a8:	in     al,0x32
  40e9aa:	pop    edx
  40e9ab:	xchg   ebx,eax
  40e9ac:	adc    al,0x3a
  40e9ae:	gs enter 0x3673,0x2
  40e9b3:	push   ebp
  40e9b4:	mov    edx,0x3dc38156
  40e9b9:	or     bh,cl
  40e9bb:	imul   esi,DWORD PTR [ecx],0xa4feb5e5
  40e9c1:	inc    ebp
  40e9c2:	pop    edx
  40e9c3:	xor    eax,0x88658664
  40e9c8:	je     0x40e94b
  40e9ca:	jns    0x40ea00
  40e9cc:	add    BYTE PTR [eax],al
  40e9ce:	pushf  
  40e9cf:	gs ret 
  40e9d1:	(bad)  
  40e9d2:	mov    ebx,0x7027eb70
  40e9d7:	cmp    eax,0x29313e82
  40e9dc:	shl    DWORD PTR [edi+0x3c],0x4
  40e9e0:	(bad)  
  40e9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e4:	jmp    0xf97e1afa
  40e9e9:	mov    edi,0xe7cc5e65
  40e9ee:	mov    bh,0x84
  40e9f0:	gs (bad) 
  40e9f2:	popa   
  40e9f3:	add    al,BYTE PTR gs:[eax]
  40e9f6:	(bad)  
  40e9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f8:	fidivr DWORD PTR ds:0x50027c68
  40e9fe:	mov    dh,0x90
  40ea00:	cli    
  40ea01:	out    0xc1,eax
  40ea03:	pop    ecx
  40ea04:	gs (bad) 
  40ea06:	cdq    
  40ea07:	leave  
  40ea08:	and    eax,0x3d29eff
  40ea0d:	inc    esi
  40ea0e:	mov    cl,0x14
  40ea10:	out    0x3,eax
  40ea12:	add    al,0x4a
  40ea14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea15:	addr16 inc ebx
  40ea17:	push   esp
  40ea18:	dec    edi
  40ea19:	data16 jg 0x40ea6b
  40ea1c:	or     eax,0xee0cc471
  40ea21:	lock stos DWORD PTR es:[edi],eax
  40ea23:	dec    edi
  40ea24:	jae    0x40ea8d
  40ea26:	addr16 leave 
  40ea28:	loopne 0x40ea85
  40ea2a:	inc    esi
  40ea2b:	adc    esi,ebp
  40ea2d:	gs imul ebp
  40ea30:	scas   eax,DWORD PTR es:[edi]
  40ea31:	inc    edx
  40ea32:	add    BYTE PTR [eax],al
  40ea34:	xor    dl,BYTE PTR [esp+esi*1]
  40ea37:	jns    0x40ea93
  40ea39:	xchg   ebx,eax
  40ea3a:	lods   al,BYTE PTR ds:[esi]
  40ea3b:	push   0xb54313c8
  40ea40:	aaa    
  40ea41:	leave  
  40ea42:	lock pop ebx
  40ea44:	call   0xb9a6a858
  40ea49:	fdiv   DWORD PTR [edx+ebx*8-0x44be48e2]
  40ea50:	jno    0x40ea66
  40ea52:	adc    DWORD PTR [ecx+0x64e8d579],edi
  40ea58:	cmp    eax,0xfec2bff0
  40ea5d:	ss push 0xf14ef7c2
  40ea63:	inc    ebx
  40ea64:	bound  ebp,QWORD PTR ds:0x4ee6dc19
  40ea6a:	test   DWORD PTR [esi-0x3ce02faa],esp
  40ea70:	(bad)  
  40ea71:	fisub  WORD PTR [ebp-0x11]
  40ea74:	ss cmp al,0xfd
  40ea77:	ffreep st(7)
  40ea79:	dec    esi
  40ea7a:	inc    eax
  40ea7b:	mov    ecx,0xdc4d4eff
  40ea80:	mov    dh,0x4e
  40ea82:	push   ebp
  40ea83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea84:	push   ss
  40ea85:	shr    BYTE PTR [edi-0x49593e],1
  40ea8b:	mov    ecx,0x2dffd3db
  40ea90:	xchg   BYTE PTR [esi],dl
  40ea92:	call   0xfe8e594e
  40ea97:	push   ds
  40ea98:	add    BYTE PTR [eax],al
  40ea9a:	xchg   esi,eax
  40ea9b:	dec    edx
  40ea9c:	(bad)  
  40ea9d:	pushf  
  40ea9e:	jp     0x40ead6
  40eaa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa1:	int    0xd
  40eaa3:	dec    esi
  40eaa4:	enter  0x312b,0x14
  40eaa8:	push   ebp
  40eaa9:	jb     0x40eab4
  40eaab:	xchg   edx,eax
  40eaac:	ret    
  40eaad:	cmc    
  40eaae:	ins    BYTE PTR es:[edi],dx
  40eaaf:	in     eax,0x69
  40eab1:	jmp    0x5d3fc92e
  40eab6:	dec    ebp
  40eab7:	ss dec eax
  40eab9:	sbb    eax,0x2c884dcc
  40eabe:	leave  
  40eabf:	cdq    
  40eac0:	xor    al,0x54
  40eac2:	adc    eax,0x5771ffd5
  40eac7:	retf   
  40eac8:	daa    
  40eac9:	sub    BYTE PTR ds:0xee93e94,ch
  40eacf:	fldenv [edi+0x62]
  40ead2:	fcmovnbe st,st(4)
  40ead4:	(bad)  
  40ead5:	cmp    eax,0xe9109f6d
  40eada:	xor    bl,BYTE PTR [ecx]
  40eadc:	rcr    BYTE PTR ds:0x58e7e634,0xba
  40eae3:	dec    esi
  40eae4:	(bad)  
  40eae5:	sbb    DWORD PTR ds:0x8c8efe4e,ecx
  40eaeb:	mov    ch,0x94
  40eaed:	and    dl,dh
  40eaef:	dec    ebp
  40eaf0:	dec    esi
  40eaf1:	outs   dx,BYTE PTR ds:[esi]
  40eaf2:	(bad)  
  40eaf3:	adc    eax,0x4ed18ae8
  40eaf8:	(bad)  
  40eaf9:	push   ecx
  40eafa:	std    
  40eafb:	push   cs
  40eafc:	call   DWORD PTR [esi+0x0]
  40eaff:	add    BYTE PTR [ecx+0x14],bl
  40eb02:	inc    esi
  40eb03:	imul   ecx,DWORD PTR [esp+edx*1],0x8ef20075
  40eb0a:	cli    
  40eb0b:	xor    ebx,DWORD PTR [eax+0x7a]
  40eb0e:	std    
  40eb0f:	jmp    DWORD PTR [edi-0x48]
  40eb12:	lock scas al,BYTE PTR es:[edi]
  40eb14:	mov    al,ds:0x57bb7350
  40eb19:	ds cli 
  40eb1b:	call   FWORD PTR [ebp+0x642be649]
  40eb21:	mov    eax,0xac65ffd
  40eb26:	rol    DWORD PTR [eax+ebx*2],0x5e
  40eb2a:	mov    esp,ebp
  40eb2c:	fisttp DWORD PTR [ebx+edi*8]
  40eb2f:	push   esi
  40eb30:	mov    edi,0xb969fe6b
  40eb35:	mov    eax,0xdd600873
  40eb3a:	cmp    edi,edi
  40eb3c:	addr16 lahf 
  40eb3e:	inc    ebx
  40eb3f:	cld    
  40eb40:	shr    DWORD PTR [edx],cl
  40eb42:	jne    0x40eb6c
  40eb44:	or     DWORD PTR [eax],ebx
  40eb46:	mov    edi,DWORD PTR ds:0x410071
  40eb4c:	cwde   
  40eb4d:	icebp  
  40eb4e:	push   DWORD PTR [ebx+0x4d]
  40eb51:	inc    eax
  40eb52:	lahf   
  40eb53:	dec    ecx
  40eb54:	dec    ecx
  40eb55:	sbb    BYTE PTR [edi-0x18],dl
  40eb58:	or     BYTE PTR [eax-0x2],cl
  40eb5b:	inc    DWORD PTR [ebx]
  40eb5d:	shl    DWORD PTR [edx+0x1f],1
  40eb60:	shl    BYTE PTR ds:[ecx],0x48
  40eb64:	add    BYTE PTR [eax],al
  40eb66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb67:	mov    al,0x4e
  40eb69:	push   0xbeef10d8
  40eb6e:	inc    eax
  40eb6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb70:	inc    edi
  40eb71:	inc    ecx
  40eb72:	enter  0xfd80,0x75
  40eb76:	sar    BYTE PTR [eax-0x4ea89cdd],1
  40eb7c:	out    0x51,al
  40eb7e:	es mov cl,0xfd
  40eb81:	jmp    0x40ebb4
  40eb83:	cmp    al,0xc8
  40eb85:	jg     0x40eb7e
  40eb87:	cmp    dl,bh
  40eb89:	stc    
  40eb8a:	not    esi
  40eb8c:	push   ss
  40eb8d:	shr    al,0xd
  40eb90:	arpl   si,di
  40eb92:	sahf   
  40eb93:	or     BYTE PTR [edx-0x6277d1c9],dh
  40eb99:	inc    BYTE PTR [edi+esi*8]
  40eb9c:	bound  esi,QWORD PTR [ecx+edi*1+0x23]
  40eba0:	mov    cl,0x3a
  40eba2:	jle    0x40ebc9
  40eba4:	ret    
  40eba5:	pop    ebp
  40eba6:	push   0x40007f8
  40ebab:	ret    0x826f
  40ebae:	ins    DWORD PTR es:[edi],dx
  40ebaf:	dec    esi
  40ebb0:	in     al,dx
  40ebb1:	dec    eax
  40ebb3:	test   al,0x61
  40ebb5:	je     0x40ebe0
  40ebb7:	adc    edx,ebx
  40ebb9:	cmp    cl,BYTE PTR [esi+0x35]
  40ebbc:	mov    eax,DWORD PTR [ebp+eax*2-0x1e]
  40ebc0:	mov    eax,ds:0x613af048
  40ebc5:	je     0x40ebf0
  40ebc7:	push   ebx
  40ebc8:	rcr    bh,1
  40ebca:	add    BYTE PTR [eax],al
  40ebcc:	cs push ebx
  40ebce:	popa   
  40ebcf:	je     0x40ebf6
  40ebd1:	mov    edx,edi
  40ebd3:	pop    es
  40ebd4:	or     DWORD PTR [eax],ecx
  40ebd6:	pop    ds
  40ebd7:	call   DWORD PTR [esi]
  40ebd9:	jne    0x40ec1f
  40ebdb:	add    esi,DWORD PTR [ecx]
  40ebdd:	or     BYTE PTR [edi+0x5e71b2eb],cl
  40ebe3:	push   esi
  40ebe4:	mov    DWORD PTR [esp+edi*1+0x3f],esi
  40ebe8:	xor    DWORD PTR [ebp-0x6d0dff2c],esp
  40ebee:	dec    ecx
  40ebef:	inc    esp
  40ebf0:	in     eax,0x3d
  40ebf2:	add    al,BYTE PTR [eax]
  40ebf4:	xor    DWORD PTR [edx],eax
  40ebf6:	cmp    DWORD PTR [eax+0x70],ecx
  40ebf9:	cmp    eax,0x14397461
  40ebfe:	jbe    0x40ec08
  40ec00:	sbb    ebx,edi
  40ec02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec03:	add    edx,DWORD PTR [ebp+0x75]
  40ec06:	sbb    BYTE PTR [ecx+esi*1],al
  40ec09:	adc    al,0x69
  40ec0b:	(bad)  [eax]
  40ec0d:	adc    al,0xbd
  40ec0f:	or     esp,DWORD PTR [esi+0x4b6bf0c1]
  40ec15:	add    DWORD PTR [esi],esi
  40ec17:	bound  ecx,QWORD PTR [ecx+0x3103e88c]
  40ec1d:	cmp    al,0xc4
  40ec1f:	retf   0x4b87
  40ec22:	sbb    eax,0x63c36d8
  40ec27:	sbb    al,0x76
  40ec29:	dec    ebx
  40ec2a:	dec    ecx
  40ec2b:	sub    edx,edi
  40ec2d:	aam    0xe8
  40ec2f:	out    0x0,eax
  40ec31:	add    BYTE PTR [edi+0x1],ah
  40ec34:	jmp    0x62551d3c
  40ec39:	inc    edi
  40ec3a:	ror    BYTE PTR [edx-0x4d],cl
  40ec3d:	add    esi,DWORD PTR [ecx]
  40ec3f:	adc    al,0xe9
  40ec41:	mov    dh,0xf6
  40ec43:	mov    ebx,0x13fe3d83
  40ec48:	inc    ecx
  40ec49:	ret    0xd45b
  40ec4c:	call   0xbde7f04
  40ec51:	add    al,0x31
  40ec53:	adc    al,0xe9
  40ec55:	pusha  
  40ec56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec57:	sbb    al,0xb6
  40ec59:	stc    
  40ec5a:	mov    cl,0xa
  40ec5c:	add    al,ah
  40ec5e:	dec    esi
  40ec5f:	adc    al,0x1d
  40ec61:	add    DWORD PTR [edx+0x29d7f84b],esi
  40ec67:	push   ebx
  40ec68:	sub    esp,DWORD PTR [eax+0x31]
  40ec6b:	adc    al,0xe9
  40ec6d:	add    ebx,edx
  40ec6f:	and    al,0x86
  40ec71:	pop    ss
  40ec72:	pandn  mm4,QWORD PTR [edi]
  40ec75:	add    al,0xde
  40ec77:	add    BYTE PTR [eax],al
  40ec79:	ret    
  40ec7a:	in     eax,0xd3
  40ec7c:	inc    DWORD PTR [eax+0x66ff018c]
  40ec82:	lods   al,BYTE PTR ds:[esi]
  40ec83:	push   esi
  40ec84:	pop    ss
  40ec85:	push   edx
  40ec86:	call   0xa486776a
  40ec8b:	fisttp WORD PTR [ebx]
  40ec8d:	bound  esi,QWORD PTR [esi+0x1a]
  40ec90:	(bad)  
  40ec91:	mov    ebx,0x817f9b3a
  40ec96:	add    BYTE PTR [eax],al
  40ec98:	xor    eax,0x7f360014
  40ec9d:	push   ds
  40ec9e:	(bad)  
  40eca2:	(bad)  
  40eca3:	jmp    0x6e50b1b9
  40eca8:	mov    ch,0x86
  40ecaa:	(bad)  
  40ecab:	call   0xc37d83e2
  40ecb0:	jge    0x40ec85
  40ecb2:	(bad)  
  40ecb3:	call   0xb5401036
  40ecb8:	or     bh,bl
  40ecba:	inc    eax
  40ecbb:	jmp    0xa26aec91
  40ecc0:	jae    0x40ed0c
  40ecc2:	out    0x1,al
  40ecc4:	sub    BYTE PTR [ebx-0x2],cl
  40ecc7:	mov    eax,ds:0xe9001432
  40eccc:	ja     0x40ed22
  40ecce:	and    ebp,ecx
  40ecd0:	push   ss
  40ecd1:	fwait
  40ecd2:	add    al,0xe9
  40ecd4:	xor    dl,BYTE PTR [eax+eax*1]
  40ecd7:	push   0x69
  40ecd9:	adc    eax,0x1932f683
  40ecde:	test   esi,ebp
  40ece0:	xchg   ecx,eax
  40ece1:	dec    edx
  40ece2:	(bad)  
  40ece3:	jb     0x40ecd4
  40ece5:	dec    ebp
  40ece6:	pop    esi
  40ece7:	mov    al,0x74
  40ece9:	adc    eax,0x5f053f00
  40ecee:	fisubr DWORD PTR [ecx]
  40ecf0:	xor    eax,0xd900714c
  40ecf5:	sar    ch,1
  40ecf7:	mov    esp,DWORD PTR [ecx+0x8bf5f8]
  40ecfd:	add    BYTE PTR [ecx-0x155781c3],dl
  40ed03:	push   ss
  40ed04:	mov    ecx,ecx
  40ed06:	out    dx,al
  40ed07:	cwde   
  40ed08:	(bad)  
  40ed09:	jmp    0x40ed3b
  40ed0b:	xchg   edi,eax
  40ed0c:	mov    DWORD PTR [ebx],0x50c79806
  40ed12:	adc    ebx,esi
  40ed14:	out    0xa7,al
  40ed16:	sahf   
  40ed17:	adc    eax,0x8d618b00
  40ed1c:	mov    ecx,ecx
  40ed1e:	mov    ecx,edi
  40ed20:	mov    ecx,ecx
  40ed22:	scas   al,BYTE PTR es:[edi]
  40ed23:	sbb    dh,dh
  40ed25:	jne    0x40ed5b
  40ed27:	push   ebx
  40ed28:	rcl    DWORD PTR [ebp+0x3],0xb9
  40ed2c:	data16 or BYTE PTR [edx*2+0x16caf7fe],bh
  40ed34:	ret    
  40ed35:	jmp    ebx
  40ed37:	push   ecx
  40ed38:	push   es
  40ed39:	or     ecx,DWORD PTR [eax]
  40ed3b:	popa   
  40ed3c:	or     ch,bl
  40ed3e:	inc    ebp
  40ed3f:	mov    bl,0x6
  40ed41:	(bad)  
  40ed42:	push   eax
  40ed43:	push   ebp
  40ed44:	jle    0x40ed7e
  40ed46:	pop    eax
  40ed47:	ins    BYTE PTR es:[edi],dx
  40ed48:	hlt    
  40ed49:	leave  
  40ed4a:	mov    bl,BYTE PTR [eax+eax*1]
  40ed4d:	push   ebp
  40ed4e:	rol    ebx,cl
  40ed50:	add    esp,0x30668504
  40ed56:	int3   
  40ed57:	dec    edi
  40ed58:	(bad)  
  40ed59:	neg    DWORD PTR [edx+0xf]
  40ed5c:	ret    
  40ed5d:	inc    edi
  40ed5f:	pop    edx
  40ed60:	repnz add BYTE PTR [eax],al
  40ed63:	add    BYTE PTR [eax],bl
  40ed65:	adc    eax,0xa2f32b00
  40ed6a:	inc    ebx
  40ed6b:	cld    
  40ed6c:	cmp    cl,ch
  40ed6e:	jae    0x40ed78
  40ed70:	xor    DWORD PTR [ebx+0x3b310d78],edx
  40ed76:	xchg   DWORD PTR [edi+0x745d8869],edi
  40ed7c:	sub    DWORD PTR [ebx-0x3e29cbd8],esp
  40ed82:	mov    WORD PTR [ecx+ecx*8-0x6],es
  40ed86:	mov    bl,0xe7
  40ed88:	push   ebp
  40ed89:	out    dx,eax
  40ed8a:	pop    esi
  40ed8b:	(bad)  
  40ed8c:	test   al,0x6f
  40ed8e:	push   esi
  40ed8f:	(bad)  
  40ed90:	cmp    al,0xdf
  40ed92:	imul   edx,DWORD PTR [ebx+0x3c],0x3b
  40ed96:	add    cl,BYTE PTR [ebx]
  40ed98:	jno    0x40ed20
  40ed9a:	idiv   dh
  40ed9c:	and    al,0xd3
  40ed9e:	pop    esi
  40ed9f:	je     0x40ed3e
  40eda1:	stos   BYTE PTR es:[edi],al
  40eda2:	push   0xffffff87
  40eda4:	dec    ebp
  40eda5:	cli    
  40eda6:	pop    esi
  40eda7:	(bad)  
  40eda8:	cld    
  40eda9:	out    dx,al
  40edaa:	imul   eax,DWORD PTR [ecx+0x2c],0x3b
  40edae:	add    bh,bh
  40edb0:	cld    
  40edb1:	xor    ch,BYTE PTR [edx-0xd]
  40edb4:	and    al,0x1a
  40edb6:	pop    edi
  40edb7:	and    ah,0x46
  40edba:	add    dh,BYTE PTR [edi+edi*1-0x5d]
  40edbe:	ror    BYTE PTR [edx-0x10],0x3a
  40edc2:	pop    ebp
  40edc3:	je     0x40ee0a
  40edc5:	adc    dl,BYTE PTR [ebx+0x3100000d]
  40edcb:	cmp    ecx,DWORD PTR [ecx]
  40edcd:	rol    ch,0x2f
  40edd0:	cdq    
  40edd1:	add    BYTE PTR [ecx],dh
  40edd3:	cmp    eax,DWORD PTR [edx]
  40edd5:	jmp    DWORD PTR [ecx+eiz*2+0x4e65056a]
  40eddc:	pop    ebp
  40eddd:	mov    dh,dl
  40eddf:	repnz dec esp
  40ede1:	shr    DWORD PTR ds:0x1d8ab73d,0xd6
  40ede8:	popf   
  40ede9:	(bad)  [ecx+0x14]
  40edec:	jmp    0xaa566e4c
  40edf1:	pop    esi
  40edf2:	test   ecx,0xfe1d6be0
  40edf8:	lea    ebx,[esi+0x58]
  40edfb:	sbb    al,0x11
  40edfd:	enter  0xd516,0xe8
  40ee01:	pop    esi
  40ee02:	pop    ebp
  40ee03:	sbb    al,0x81
  40ee05:	fadd   QWORD PTR [esi]
  40ee07:	inc    edi
  40ee08:	ins    DWORD PTR es:[edi],dx
  40ee09:	jmp    0x2c0caa3c
  40ee0e:	jo     0x40ee24
  40ee10:	pop    esi
  40ee11:	fsubr  DWORD PTR [esi]
  40ee13:	cmp    al,0xc2
  40ee15:	sbb    ebp,DWORD PTR [esi+0x2ed84d47]
  40ee1b:	cmp    al,0x34
  40ee1d:	pusha  
  40ee1e:	lahf   
  40ee1f:	inc    edi
  40ee20:	add    BYTE PTR [ecx+esi*1],0x14
  40ee24:	jmp    0xe9515e75
  40ee29:	mov    eax,0x476938bb
  40ee2e:	add    BYTE PTR [eax],al
  40ee30:	xchg   BYTE PTR [ebx+eiz*8+0x11143640],bh
  40ee37:	shl    DWORD PTR [ecx],1
  40ee39:	push   ebx
  40ee3a:	or     eax,0x617dd5e
  40ee3f:	fdiv   DWORD PTR [esi]
  40ee41:	cmp    al,0x78
  40ee43:	sbb    DWORD PTR [esi+0x47],edx
  40ee46:	sub    eax,0xe9154ac8
  40ee4b:	add    esi,DWORD PTR [ecx]
  40ee4d:	cdq    
  40ee4e:	sub    ebx,DWORD PTR [esi+ebp*8-0x45]
  40ee52:	push   ss
  40ee53:	leave  
  40ee54:	icebp  
  40ee55:	adc    eax,ecx
  40ee57:	dec    edx
  40ee58:	jbe    0x40eea1
  40ee5a:	int    0x9
  40ee5c:	icebp  
  40ee5d:	mov    edi,0xc8b3b40a
  40ee62:	shl    ah,0x9d
  40ee65:	push   ds
  40ee66:	add    BYTE PTR [ebx+0x5],al
  40ee69:	xlat   BYTE PTR ds:[ebx]
  40ee6a:	(bad)  
  40ee6b:	xor    al,0x21
  40ee6d:	cmp    al,0xdb
  40ee6f:	loop   0x40eece
  40ee71:	inc    esi
  40ee72:	or     ch,BYTE PTR [ecx+0x2cc70dd9]
  40ee78:	push   ecx
  40ee79:	inc    edi
  40ee7a:	(bad)  
  40ee7b:	jmp    0xc2a52ab2
  40ee80:	jge    0x40eec8
  40ee82:	mov    ah,BYTE PTR [ecx+edx*2]
  40ee85:	pop    esp
  40ee86:	shl    ecx,0x32
  40ee89:	loope  0x40ee15
  40ee8b:	jge    0x40ee0d
  40ee8d:	scas   al,BYTE PTR es:[edi]
  40ee8e:	pop    edi
  40ee8f:	inc    esp
  40ee90:	cmc    
  40ee91:	inc    esi
  40ee92:	neg    bl
  40ee94:	add    BYTE PTR [eax],al
  40ee96:	xor    edx,DWORD PTR [ebx-0x2]
  40ee99:	add    ch,BYTE PTR [eax+0x46]
  40ee9c:	je     0x40ee7f
  40ee9e:	sbb    cl,dh
  40eea0:	inc    BYTE PTR [esi-0x4]
  40eea3:	sbb    eax,eax
  40eea5:	out    dx,al
  40eea6:	scas   al,BYTE PTR es:[edi]
  40eea7:	mov    al,ds:0x4732e8ff
  40eeac:	je     0x40ee8f
  40eeae:	sbb    cl,BYTE PTR [ebx+0x31]
  40eeb1:	fcomp  QWORD PTR es:[ecx]
  40eeb4:	rcl    BYTE PTR [edi+ebp*1+0x32e9893d],0x14
  40eebc:	call   DWORD PTR [esi+esi*1-0x350e8bb9]
  40eec3:	lods   eax,DWORD PTR ds:[esi]
  40eec4:	(bad)  
  40eec5:	(bad)  
  40eec6:	cmc    
  40eec7:	inc    ebp
  40eec8:	je     0x40eeab
  40eeca:	(bad)  
  40eecc:	cmp    esi,ebp
  40eece:	in     eax,0x19
  40eed0:	rcr    BYTE PTR [ebx+esi*1+0x3b],0x70
  40eed5:	ficomp WORD PTR [edi+0xe]
  40eed8:	call   0xfe86397d
  40eedd:	loop   0x40ef51
  40eedf:	rol    BYTE PTR [ecx],0x0
  40eee2:	add    esi,DWORD PTR ds:0xba2075fd
  40eee8:	pop    ds
  40eee9:	cmp    edi,eax
  40eeeb:	call   0x127eaef9
  40eef0:	jmp    0x40ef47
  40eef2:	and    BYTE PTR [esi+0x25],bh
  40eef5:	inc    ecx
  40eef6:	or     cl,ch
  40eef8:	jae    0x40ef02
  40eefa:	add    BYTE PTR [eax],al
  40eefc:	mov    al,0x8b
  40eefe:	cmp    bh,bh
  40ef00:	mov    bh,0x1c
  40ef02:	shl    BYTE PTR [ebp-0x36],0xbc
  40ef06:	inc    eax
  40ef07:	(bad)  
  40ef08:	fstp   QWORD PTR [ecx]
  40ef0a:	call   0xfe296fa9
  40ef0f:	or     ebx,DWORD PTR [eax+0x1ceb005e]
  40ef15:	out    0x73,eax
  40ef17:	or     BYTE PTR [eax-0x1d],ah
  40ef1a:	inc    DWORD PTR ss:[edi]
  40ef1d:	sbb    al,0xc0
  40ef1f:	jne    0x40eebb
  40ef21:	mov    esp,0x19ddff24
  40ef26:	call   0xfe2989b2
  40ef2b:	add    DWORD PTR [eax-0xf],0x76
  40ef2f:	add    dh,BYTE PTR [ebx]
  40ef31:	ror    BYTE PTR [ecx],1
  40ef33:	rcr    BYTE PTR [esp+eax*2+0x4188003b],0xfe
  40ef3b:	jb     0x40ef91
  40ef3d:	lods   al,BYTE PTR ds:[esi]
  40ef3e:	(bad)  
  40ef3f:	call   FWORD PTR [eax+0x11]
  40ef42:	jmp    0x40ef49
  40ef44:	repz adc eax,DWORD PTR [eax]
  40ef47:	add    BYTE PTR [eax-0x64],cl
  40ef4a:	rcr    DWORD PTR [ebx+0x11],0xd3
  40ef4e:	push   es
  40ef4f:	add    BYTE PTR [ebp+0x2968ea9c],bl
  40ef55:	or     bh,BYTE PTR [edi]
  40ef57:	add    BYTE PTR [eax+0x5e],dl
  40ef5a:	inc    edx
  40ef5c:	xor    DWORD PTR [esi+0x5a],ebx
  40ef5f:	je     0x40ef61
  40ef61:	add    BYTE PTR ds:0x907d056,dh
  40ef67:	adc    eax,0x4216fe5b
  40ef6c:	inc    edx
  40ef6d:	je     0x40ef9a
  40ef6f:	jle    0x40ef41
  40ef71:	or     eax,DWORD PTR [esi]
  40ef73:	add    BYTE PTR [eax+ebp*8],cl
  40ef76:	outs   dx,BYTE PTR es:[esi]
  40ef78:	pop    edx
  40ef79:	(bad)  
  40ef7a:	sub    bh,BYTE PTR [ebx-0x30]
  40ef7d:	or     ch,dh
  40ef7f:	daa    
  40ef80:	or     bh,bh
  40ef82:	pop    esp
  40ef83:	xor    ebp,DWORD PTR [edx+0x7]
  40ef86:	fimul  WORD PTR [ebp+0x42f3c85a]
  40ef8c:	add    dl,BYTE PTR [ebp-0x46]
  40ef8f:	mov    es,WORD PTR [esi-0x4cd6323d]
  40ef95:	addr16 push ecx
  40ef97:	int    0xc3
  40ef99:	(bad)  
  40ef9a:	mov    esi,0xaec30368
  40ef9f:	adc    DWORD PTR [edi],edi
  40efa1:	out    0x73,eax
  40efa3:	sbb    DWORD PTR [ecx-0x2],0xff667776
  40efaa:	xchg   esi,eax
  40efab:	cmp    al,BYTE PTR [edx]
  40efad:	(bad)  
  40efae:	hlt    
  40efaf:	into   
  40efb0:	mov    bl,0xe7
  40efb2:	mov    eax,0xb2fe594b
  40efb7:	outs   dx,DWORD PTR ds:[esi]
  40efb8:	data16 (bad) 
  40efba:	std    
  40efbb:	adc    cl,BYTE PTR [ecx+0x6a8a5d44]
  40efc1:	jns    0x40efe3
  40efc3:	push   ss
  40efc4:	pop    ebx
  40efc5:	add    BYTE PTR [eax],0x0
  40efc8:	fcomp  QWORD PTR [esi]
  40efca:	add    al,0x75
  40efcc:	sub    BYTE PTR [eax+0x12e1ebc0],bh
  40efd2:	out    dx,eax
  40efd3:	xor    BYTE PTR [esi+0x35],al
  40efd6:	test   DWORD PTR [ebp+ecx*2+0x13],edi
  40efda:	jmp    0xe8d69ce9
  40efdf:	add    esi,DWORD PTR [ecx]
  40efe1:	xchg   ecx,eax
  40efe2:	sub    edx,DWORD PTR [esi+esi*2+0x43]
  40efe6:	push   ebx
  40efe7:	push   0x5ac5ae16
  40efec:	pop    ss
  40efed:	cwde   
  40efee:	rol    BYTE PTR [esp+eax*4],0xc1
  40eff2:	jne    0x40efd9
  40eff4:	dec    edi
  40eff5:	aad    0xe8
  40eff7:	outs   dx,BYTE PTR ds:[esi]
  40eff8:	pop    ecx
  40eff9:	pop    ebx
  40effa:	sub    esp,DWORD PTR [eax+0x28]
  40effd:	adc    al,0xe9
  40efff:	add    esi,esi
  40f001:	fld    DWORD PTR [eax-0x16ebcefd]
  40f007:	mov    BYTE PTR [ebp+0x2c],dh
  40f00a:	sbb    BYTE PTR [ebx+0x5d],bl
  40f00d:	xor    BYTE PTR ds:0x75dec36c,dl
  40f013:	pop    edx
  40f014:	cmp    edx,DWORD PTR [esp+esi*8-0xd]
  40f018:	mov    bl,0xc1
  40f01a:	push   eax
  40f01b:	add    edi,DWORD PTR ds:0x96d05e0e
  40f021:	sub    al,0x11
  40f023:	pop    ecx
  40f024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f025:	inc    ebx
  40f026:	popa   
  40f027:	cmp    ebx,DWORD PTR [edi+0x6b50c9]
  40f02d:	add    BYTE PTR [edi+0x5],al
  40f030:	ds pop edx
  40f032:	cmp    ebx,DWORD PTR [edi-0x45]
  40f035:	lock mov bl,0xc1
  40f038:	inc    esp
  40f039:	add    eax,DWORD PTR ds:0x92c82613
  40f03f:	lods   al,BYTE PTR ds:[esi]
  40f040:	jo     0x40f038
  40f042:	outs   dx,BYTE PTR ds:[esi]
  40f043:	inc    ebx
  40f044:	add    BYTE PTR [esi+0x3b],dh
  40f047:	adc    al,0xe9
  40f049:	outs   dx,BYTE PTR ds:[esi]
  40f04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f04b:	das    
  40f04c:	out    0xc2,eax
  40f04e:	(bad)  
  40f04f:	add    ch,cl
  40f051:	ror    BYTE PTR [eax-0x25],1
  40f054:	jmp    FWORD PTR [eax+0x2b]
  40f057:	adc    al,0x74
  40f059:	in     eax,0x2f
  40f05b:	pop    edi
  40f05c:	jae    0x40efe5
  40f05e:	and    al,0x5f
  40f060:	jae    0x40f05b
  40f062:	sbb    al,0x13
  40f064:	lea    ebp,[edi*2-0x13e8982d]
  40f06b:	sar    edi,cl
  40f06d:	rol    ch,1
  40f06f:	xlat   BYTE PTR ds:[ebx]
  40f070:	(bad)  
  40f071:	mov    esi,0xc1ebc868
  40f076:	xchg   ebp,eax
  40f077:	repz (bad) 
  40f079:	scas   al,BYTE PTR es:[edi]
  40f07a:	lods   al,BYTE PTR ds:[esi]
  40f07b:	push   ebp
  40f07c:	pop    esi
  40f07d:	inc    edx
  40f07e:	push   0x56
  40f080:	push   esp
  40f081:	jb     0x40f0dc
  40f083:	xchg   esp,eax
  40f084:	ret    
  40f085:	dec    ecx
  40f086:	mov    eax,DWORD PTR [edx-0x2]
  40f089:	mov    ss:0xeda64fba,eax
  40f08f:	inc    edx
  40f090:	idiv   bl
  40f092:	add    BYTE PTR [eax],al
  40f094:	xor    edx,DWORD PTR [edi-0x2]
  40f097:	ss lahf 
  40f099:	stc    
  40f09a:	inc    eax
  40f09b:	jmp    0xf640f252
  40f0a0:	ss dec esi
  40f0a2:	add    cl,ch
  40f0a4:	xor    dl,BYTE PTR [ecx+0x420b5d84]
  40f0aa:	(bad)  
  40f0ab:	mov    ecx,0xa12f3ae1
  40f0b0:	stc    
  40f0b1:	inc    ecx
  40f0b2:	or     ch,BYTE PTR [ecx]
  40f0b4:	cmp    BYTE PTR [eax+0x1432e8a3],bl
  40f0ba:	sub    DWORD PTR [ecx+eiz*8+0x40],0xfffffffe
  40f0bf:	es sub eax,0x32768413
  40f0c5:	adc    al,0x0
  40f0c7:	fs out 0x7a,al
  40f0ca:	std    
  40f0cb:	push   cs
  40f0cc:	clc    
  40f0cd:	sar    dh,cl
  40f0cf:	add    BYTE PTR ds:0x4ffffce4,dl
  40f0d5:	scas   al,BYTE PTR es:[edi]
  40f0d6:	in     al,dx
  40f0d7:	aaa    
  40f0d8:	aas    
  40f0d9:	fld    TBYTE PTR [ecx]
  40f0db:	not    cl
  40f0dd:	xchg   edx,eax
  40f0de:	mov    ds:0xe9db4ffe,al
  40f0e3:	aaa    
  40f0e4:	inc    esi
  40f0e5:	or     esi,DWORD PTR [esi-0x38fd17c]
  40f0eb:	(bad)  
  40f0ec:	out    dx,eax
  40f0ed:	test   DWORD PTR [esi+0x5a],esp
  40f0f0:	arpl   WORD PTR [ebp-0x2],dx
  40f0f3:	mov    WORD PTR [ebp+0xfffcd7],ss
  40f0f9:	add    BYTE PTR [edi+0x1341e685],bh
  40f0ff:	push   ss
  40f100:	add    BYTE PTR [ebx-0x7a72e63c],al
  40f106:	call   0xb3db:0x28fffddb
  40f10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f10e:	scas   al,BYTE PTR es:[edi]
  40f10f:	fdiv   st(5),st
  40f111:	call   0x401acd
  40f116:	inc    ecx
  40f117:	ret    0xfea2
  40f11a:	aas    
  40f11b:	fadd   QWORD PTR [ebx+eax*4+0x4e]
  40f11f:	inc    ebp
  40f120:	jo     0x40f0e6
  40f122:	dec    edi
  40f123:	xchg   edx,eax
  40f124:	repnz dec BYTE PTR [edi]
  40f127:	fsubr  st(6),st
  40f129:	mov    ah,0x4a
  40f12b:	(bad)  
  40f12d:	(bad)  
  40f12e:	adc    eax,0xeffffc9d
  40f133:	adc    al,0x0
  40f135:	add    BYTE PTR [eax+0x158d002f],bl
  40f13b:	popf   
  40f13c:	cld    
  40f13d:	dec    DWORD PTR [edi-0x7b]
  40f140:	std    
  40f141:	mov    ch,0x14
  40f143:	(bad)  
  40f145:	inc    DWORD PTR [eax+0x3b]
  40f148:	das    
  40f149:	push   DWORD PTR [ecx]
  40f14b:	sub    cl,BYTE PTR [eax+eax*8]
  40f14e:	cs mov bh,0x5a
  40f151:	call   DWORD PTR [esi+0x2b]
  40f154:	cmp    DWORD PTR [ecx+ecx*4-0xb01a9bf],0x2a4
  40f15f:	add    BYTE PTR [esi],ch
  40f161:	mov    eax,0x2b36ff6a
  40f166:	xchg   DWORD PTR [edx+ebp*1-0x7e01a99f],eax
  40f16d:	sar    edi,cl
  40f16f:	add    BYTE PTR [ecx],dh
  40f171:	sub    ebp,DWORD PTR [edx-0x1d]
  40f174:	sub    BYTE PTR [ebx],ch
  40f176:	add    cl,BYTE PTR [ebx]
  40f178:	icebp  
  40f179:	xor    DWORD PTR [esi-0x32],edi
  40f17c:	xor    DWORD PTR [ebx],ebp
  40f17e:	add    bh,BYTE PTR ds:0x22c35
  40f184:	es mov dl,0x3f
  40f187:	(bad)  
  40f188:	out    dx,al
  40f189:	sub    ch,BYTE PTR [edx+0x4f]
  40f18c:	cmp    ebp,DWORD PTR [ebx]
  40f18e:	add    dl,BYTE PTR [eax+0x49]
  40f191:	dec    dl
  40f193:	inc    eax
  40f194:	xor    eax,ecx
  40f196:	add    cl,0xcf
  40f199:	rcl    DWORD PTR [esi+0x4f],0xd9
  40f19d:	into   
  40f19e:	or     DWORD PTR [eax],eax
  40f1a0:	xor    DWORD PTR [esi+0x2b4b0b3f],ebp
  40f1a6:	xchg   DWORD PTR [edx+ebp*4+0x1fe56e0],eax
  40f1ad:	shl    DWORD PTR [esi-0x78d4cef8],cl
  40f1b3:	test   BYTE PTR [edx-0x1e01a928],bl
  40f1b9:	loop   0x40f1ce
  40f1bb:	inc    ebx
  40f1bc:	xchg   BYTE PTR [ecx],cl
  40f1be:	or     eax,eax
  40f1c0:	add    al,0xb
  40f1c2:	in     al,dx
  40f1c3:	int3   
  40f1c4:	add    BYTE PTR [eax],al
  40f1c6:	dec    ecx
  40f1c7:	adc    al,0xa8
  40f1c9:	add    edi,DWORD PTR [esi+edx*4+0x40675621]
  40f1d0:	mov    eax,0xdfc696b
  40f1d5:	push   edi
  40f1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d8:	sub    dl,BYTE PTR [esi+0x4f]
  40f1db:	inc    eax
  40f1dc:	call   0x3f56:0xb5234eb3
  40f1e3:	sub    al,0xd9
  40f1e5:	mov    BYTE PTR [ebp+0x2f56e655],ch
  40f1eb:	in     eax,0x6b
  40f1ed:	sub    BYTE PTR [ebx],0x3f
  40f1f0:	aad    0x56
  40f1f2:	outs   dx,BYTE PTR ds:[esi]
  40f1f3:	sub    al,0x85
  40f1f5:	sbb    dl,BYTE PTR [esi]
  40f1f7:	inc    eax
  40f1f8:	outs   dx,DWORD PTR ds:[esi]
  40f1f9:	or     dl,0x3e
  40f1fc:	mov    ebp,0x748a0756
  40f201:	push   ebp
  40f202:	(bad)  
  40f203:	aas    
  40f204:	lods   eax,DWORD PTR ds:[esi]
  40f205:	nop
  40f206:	add    bh,BYTE PTR [edi]
  40f208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f209:	push   esi
  40f20a:	(bad)  
  40f20b:	enter  0x56d9,0xe7
  40f20f:	or     ebp,DWORD PTR [ecx+0x2dac23cf]
  40f215:	retf   
  40f216:	jno    0x40f22c
  40f218:	xchg   ecx,eax
  40f219:	pop    esi
  40f21a:	ss adc al,0xe9
  40f21d:	mov    bl,0x4e
  40f21f:	fbld   TBYTE PTR [ecx]
  40f221:	lds    edi,FWORD PTR [esi-0x4b60ccc2]
  40f227:	aas    
  40f228:	imul   eax,DWORD PTR gs:[eax],0x0
  40f22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f22d:	rcr    DWORD PTR [ebp+0x56],cl
  40f230:	sbb    BYTE PTR ds:0x140b03c3,dl
  40f236:	dec    esi
  40f237:	nop
  40f238:	fidivr DWORD PTR [esi]
  40f23a:	inc    ebp
  40f23b:	push   esi
  40f23c:	push   ss
  40f23d:	out    0xf,eax
  40f23f:	lds    eax,FWORD PTR [esi+0xae8ffad]
  40f245:	ror    DWORD PTR [ecx],cl
  40f247:	jmp    0x65f5317e
  40f24c:	add    al,0x3e
  40f24e:	(bad)  
  40f24f:	adc    DWORD PTR [edi+0x716ff06],ecx
  40f255:	mov    BYTE PTR [ebx-0x18c200f1],ah
  40f25b:	dec    ebp
  40f25c:	aas    
  40f25d:	aas    
  40f25e:	(bad)  
  40f25f:	(bad)  
  40f260:	mov    dh,0x43
  40f262:	std    
  40f263:	mul    ah
  40f265:	ss add eax,0xfb3ddfbe
  40f26b:	sbb    dh,BYTE PTR [ebp+0x7c]
  40f26e:	(bad)  
  40f26f:	fidivr WORD PTR [esi+edi*1-0xf]
  40f273:	xchg   DWORD PTR ds:0x26640f17,edi
  40f279:	ds inc dh
  40f27c:	(bad)  
  40f27d:	(bad)  
  40f27f:	stos   BYTE PTR es:[edi],al
  40f280:	(bad)  
  40f281:	mov    ebx,ebp
  40f283:	push   0x71
  40f285:	das    
  40f286:	addr16 in al,dx
  40f288:	xchg   ebx,eax
  40f289:	(bad)  
  40f28a:	jmp    DWORD PTR [eax-0x613cebfd]
  40f290:	add    BYTE PTR [eax],al
  40f292:	mov    eax,0x33ec6764
  40f297:	adc    al,0x0
  40f299:	cmp    edi,0xb886ff05
  40f29f:	mov    BYTE PTR fs:[ecx+ebp*2],ah
  40f2a3:	mov    dl,cl
  40f2a5:	add    DWORD PTR [esi+0x4ae90013],edi
  40f2ab:	mov    al,0x36
  40f2ad:	data16 add al,0x8a
  40f2b0:	shl    DWORD PTR [eax-0x1a],1
  40f2b3:	cs addr16 in al,dx
  40f2b6:	xor    edx,DWORD PTR [eax+eax*1]
  40f2b9:	inc    ecx
  40f2ba:	fild   WORD PTR ds:0x8cf700ff
  40f2c0:	ror    BYTE PTR [ebx-0x7bc74d6],1
  40f2c6:	adc    eax,DWORD PTR [edx]
  40f2c8:	mov    dl,dl
  40f2ca:	jo     0x40f30a
  40f2cc:	(bad)  
  40f2cd:	call   FWORD PTR [eax-0x19]
  40f2d0:	jae    0x40f2ce
  40f2d2:	ret    0xe812
  40f2d5:	sbb    edx,DWORD PTR [ecx+0x12]
  40f2d8:	add    BYTE PTR [ebx-0x2f72e6],cl
  40f2de:	int    0xe2
  40f2e0:	data16 add al,0x59
  40f2e3:	adc    al,BYTE PTR [eax]
  40f2e5:	call   0x40fdac
  40f2ea:	push   ebx
  40f2eb:	shl    BYTE PTR [edx+0xf],cl
  40f2ee:	mov    ds:0x63646703,eax
  40f2f3:	push   ecx
  40f2f4:	(bad)  
  40f2f5:	inc    BYTE PTR [eax]
  40f2f7:	add    BYTE PTR [ebp-0x18],bh
  40f2fa:	out    0x31,al
  40f2fc:	adc    BYTE PTR [edx],dl
  40f2fe:	add    BYTE PTR [ebx+0x69fe2baa],cl
  40f304:	sbb    BYTE PTR [eax+eax*1],ch
  40f307:	push   0x8
  40f309:	sub    al,0x1
  40f30b:	push   0xc0001208
  40f310:	xchg   edi,eax
  40f311:	dec    esi
  40f312:	out    dx,al
  40f313:	call   0x3f33bc
  40f318:	push   ecx
  40f319:	jle    0x40f30d
  40f31b:	inc    eax
  40f31c:	rcl    ecx,cl
  40f31e:	jae    0x40f364
  40f320:	mov    bh,0x4e
  40f322:	cli    
  40f323:	(bad)  
  40f324:	mov    ebp,0xcfffe6e1
  40f329:	adc    DWORD PTR [eax],eax
  40f32b:	push   0x24
  40f32d:	sub    bh,dh
  40f32f:	dec    BYTE PTR [ebp-0x5e8c191f]
  40f335:	adc    DWORD PTR [eax],eax
  40f337:	or     esi,DWORD PTR [ecx]
  40f339:	jmp    0x40f309
  40f33b:	or     esi,ecx
  40f33d:	push   edx
  40f33e:	fimul  WORD PTR [edx-0x10]
  40f341:	sub    dh,BYTE PTR [edx+0x23692e7]
  40f347:	add    BYTE PTR [ebx],cl
  40f349:	sub    ebp,eax
  40f34b:	dec    DWORD PTR [eax]
  40f34d:	sub    eax,ebp
  40f34f:	(bad)  
  40f350:	fsubr  DWORD PTR [ecx]
  40f352:	jmp    0xe4fe:0x422b66ff
  40f359:	sbb    ch,BYTE PTR [ebx-0x6b]
  40f35c:	add    BYTE PTR [eax],al
  40f35e:	sub    eax,DWORD PTR cs:[edx]
  40f361:	mov    esp,esi
  40f363:	shl    DWORD PTR ds:[ebx-0x26],0xa2
  40f368:	out    0x4a,al
  40f36a:	lock sub ch,BYTE PTR [edx-0x63]
  40f36e:	sub    eax,DWORD PTR cs:[edx]
  40f371:	push   eax
  40f372:	cdq    
  40f373:	out    0xbe,eax
  40f375:	inc    eax
  40f376:	xor    DWORD PTR [esi-0x28],ebx
  40f379:	repz or DWORD PTR [ebp+0x14],esi
  40f37d:	call   DWORD PTR [esi]
  40f37f:	sti    
  40f380:	push   edx
  40f381:	je     0x40f388
  40f383:	arpl   si,cx
  40f385:	push   es
  40f386:	xor    DWORD PTR [ebx],ebp
  40f388:	stos   BYTE PTR es:[edi],al
  40f389:	or     dh,cl
  40f38b:	inc    DWORD PTR ds:0xd86e72eb
  40f391:	sti    
  40f392:	pop    ecx
  40f393:	fistp  QWORD PTR [esi-0x2761cec0]
  40f399:	test   ecx,0xd6fffbde
  40f39f:	test   eax,0x85590b47
  40f3a4:	mov    esi,0x94a33140
  40f3a9:	push   es
  40f3aa:	xor    DWORD PTR [ebx],ebp
  40f3ac:	std    
  40f3ad:	mov    edi,0xbfda493d
  40f3b2:	cli    
  40f3b3:	adc    ebp,DWORD PTR [eax-0x6fd3fefd]
  40f3b9:	or     esi,DWORD PTR [ecx]
  40f3bb:	adc    al,0xe2
  40f3bd:	inc    ebx
  40f3be:	and    ah,BYTE PTR [ecx]
  40f3c0:	ret    
  40f3c1:	add    eax,DWORD PTR [eax]
  40f3c3:	add    BYTE PTR [ebx],bl
  40f3c5:	adc    al,0x46
  40f3c7:	fnstcw WORD PTR [esi+0x3c]
  40f3ca:	mov    bl,0x53
  40f3cc:	push   ss
  40f3cd:	in     eax,0xff
  40f3cf:	les    esi,FWORD PTR [esi-0x56]
  40f3d2:	call   0x9b7d7229
  40f3d7:	dec    edi
  40f3d8:	dec    esi
  40f3d9:	add    dl,bh
  40f3db:	push   edx
  40f3dc:	pop    edi
  40f3dd:	cmp    al,0x9b
  40f3df:	push   ebx
  40f3e0:	dec    esi
  40f3e1:	jmp    0x4b7b:0x3c4f52d6
  40f3e8:	dec    esi
  40f3e9:	repnz mov dh,0x52
  40f3ec:	aas    
  40f3ed:	dec    edx
  40f3ee:	sub    DWORD PTR [ebx+0x664babe3],edi
  40f3f4:	outs   dx,BYTE PTR ds:[esi]
  40f3f5:	adc    al,0xe1
  40f3f7:	aad    0x31
  40f3f9:	push   edi
  40f3fa:	fisttp QWORD PTR [esi+0x3e91431]
  40f400:	(bad)  
  40f401:	inc    eax
  40f402:	and    ebp,eax
  40f404:	push   cs
  40f405:	scas   al,BYTE PTR es:[edi]
  40f406:	out    0xba,eax
  40f408:	push   cs
  40f409:	xchg   BYTE PTR [ebx+edx*2],ah
  40f40c:	push   edi
  40f40e:	nop
  40f40f:	dec    edi
  40f410:	inc    ebx
  40f411:	push   esp
  40f412:	outs   dx,DWORD PTR ds:[esi]
  40f413:	push   edx
  40f414:	out    dx,eax
  40f415:	cmp    esp,DWORD PTR [ebp-0x1a036bab]
  40f41b:	fcom   st(6)
  40f41d:	(bad)
  40f421:	push   edi
  40f422:	xor    edi,DWORD PTR [edi-0x26]
  40f425:	xchg   edi,eax
  40f426:	lods   al,BYTE PTR ds:[esi]
  40f427:	push   ebx
  40f428:	add    BYTE PTR [eax],al
  40f42a:	arpl   WORD PTR [ebx+edx*4+0x13fe65],bp
  40f431:	jno    0x40f40f
  40f433:	adc    al,0xc3
  40f435:	outs   dx,BYTE PTR ds:[esi]
  40f436:	mov    bh,0xf8
  40f438:	in     eax,0x17
  40f43a:	ins    BYTE PTR es:[edi],dx
  40f43b:	cmp    edi,esi
  40f43d:	aad    0xa4
  40f43f:	xchg   esi,eax
  40f440:	cmp    al,0x47
  40f442:	push   eax
  40f443:	aad    0xff
  40f445:	call   0x4c400b0
  40f44a:	fucomip st,st(0)
  40f44c:	inc    eax
  40f44d:	jmp    0x245b584
  40f452:	in     eax,dx
  40f453:	(bad)  
  40f455:	sub    cl,BYTE PTR [edi+0x5f]
  40f458:	out    0xcd,eax
  40f45a:	cmp    edx,DWORD PTR [eax+eax*1]
  40f45d:	ins    BYTE PTR es:[edi],dx
  40f45e:	cdq    
  40f45f:	aas    
  40f460:	push   ecx
  40f461:	sbb    DWORD PTR [edx-0x35],0xfffffffe
  40f465:	hlt    
  40f466:	fsubr  st,st(0)
  40f468:	inc    eax
  40f469:	jmp    0x654f6fb5
  40f46e:	ret    0xfe3a
  40f471:	jmp    0xea38c461
  40f476:	xor    dl,BYTE PTR [eax+eax*1]
  40f479:	je     0x40f469
  40f47b:	inc    edx
  40f47c:	dec    edi
  40f47d:	push   ebx
  40f47e:	xor    eax,0x3242ffae
  40f483:	cmp    esi,DWORD PTR [ebp+ecx*8+0x60]
  40f487:	and    dh,ch
  40f489:	pop    ss
  40f48a:	repnz cmp cl,BYTE PTR [ecx]
  40f48d:	test   eax,0xace60000
  40f492:	out    0x39,eax
  40f494:	sub    BYTE PTR [eax+eax*1],dl
  40f497:	push   0x7d
  40f499:	mov    ebp,0xb7ac0974
  40f49e:	imul   ecx
  40f4a0:	push   es
  40f4a1:	(bad)  
  40f4a3:	sbb    al,0x65
  40f4a5:	xor    edi,DWORD PTR [edi-0x2c]
  40f4a8:	popa   
  40f4a9:	cmp    cl,BYTE PTR [eax-0x7423eb00]
  40f4af:	inc    ebp
  40f4b0:	mov    al,0x7f
  40f4b2:	std    
  40f4b3:	jne    0x40f4f5
  40f4b5:	in     eax,0x73
  40f4b7:	hlt    
  40f4b8:	xor    dl,BYTE PTR [edi]
  40f4ba:	push   DWORD PTR [ebp+0xc]
  40f4bd:	in     eax,0x13
  40f4bf:	out    dx,al
  40f4c0:	cs push edi
  40f4c2:	dec    BYTE PTR [edx]
  40f4c4:	dec    eax
  40f4c5:	pop    esp
  40f4c6:	sub    al,0x8b
  40f4c8:	aad    0xe2
  40f4ca:	mov    DWORD PTR [eax],edx
  40f4cc:	std    
  40f4cd:	push   edx
  40f4ce:	out    dx,al
  40f4cf:	push   eax
  40f4d0:	call   0xfe57:0x2ef213e3
  40f4d7:	or     bl,BYTE PTR [eax]
  40f4d9:	pop    esp
  40f4da:	sbb    BYTE PTR [eax+0x37],ch
  40f4dd:	jns    0x40f51e
  40f4df:	add    BYTE PTR [edi],bh
  40f4e1:	arpl   si,bp
  40f4e3:	call   0x41031a
  40f4e8:	push   ebx
  40f4e9:	(bad)  
  40f4ea:	jae    0x40f4ed
  40f4ec:	fwait
  40f4ed:	jecxz  0x40f562
  40f4ef:	lock and BYTE PTR [ebx],ah
  40f4f2:	push   es
  40f4f3:	add    BYTE PTR [eax],al
  40f4f5:	add    BYTE PTR [eax-0x1d],cl
  40f4f8:	jae    0x40f4ee
  40f4fa:	xor    BYTE PTR [ebx],bh
  40f4fc:	xor    edi,edi
  40f4fe:	pmulhw mm6,QWORD PTR [ebx-0x4]
  40f502:	add    BYTE PTR ds:0xb9080006,cl
  40f508:	rcr    DWORD PTR [ebx-0x2f],0xd0
  40f50c:	push   ebx
  40f50d:	mov    ebx,esp
  40f50f:	xchg   esi,eax
  40f510:	ret    0xbec0
  40f513:	in     al,0xfd
  40f515:	push   ebx
  40f516:	jo     0x40f4a2
  40f518:	loope  0x40f55a
  40f51a:	fmul   st,st(5)
  40f51c:	jo     0x40f51f
  40f51e:	fwait
  40f51f:	in     al,0x81
  40f521:	cmp    eax,0x411ee7
  40f526:	xor    DWORD PTR [ebx],ebp
  40f528:	(bad)  
  40f529:	sbb    dh,BYTE PTR [edx+0x7028eb48]
  40f52f:	sub    eax,DWORD PTR [edx]
  40f531:	je     0x40f556
  40f533:	scas   al,BYTE PTR es:[edi]
  40f534:	or     eax,0x3ec07e6
  40f539:	add    BYTE PTR ds:0x9b3c8334,ah
  40f53f:	and    ebx,eax
  40f541:	call   FWORD PTR [esi+0x712b0560]
  40f547:	xchg   BYTE PTR [ecx],bh
  40f549:	ret    0x65a
  40f54c:	push   eax
  40f54d:	adc    al,0x1e
  40f54f:	and    al,0xc3
  40f551:	jmp    FWORD PTR [ecx-0x5339a990]
  40f557:	out    dx,eax
  40f558:	push   eax
  40f559:	inc    BYTE PTR [eax]
  40f55b:	add    BYTE PTR [esi+0x13],ch
  40f55e:	add    eax,DWORD PTR [eax]
  40f560:	xor    DWORD PTR [ebp+0x23336a02],esp
  40f566:	call   0x4ef7:0x832b3105
  40f56d:	pop    edx
  40f56e:	xchg   BYTE PTR ds:0x89022b30,bl
  40f574:	mov    ah,0x3
  40f576:	push   ecx
  40f577:	(bad)  
  40f578:	ss mov al,0x85
  40f57b:	retf   
  40f57c:	das    
  40f57d:	sub    cl,BYTE PTR [esi+0x4f]
  40f580:	es cwde 
  40f582:	cmp    edi,ebp
  40f584:	push   ds
  40f585:	pop    edx
  40f586:	pop    ebx
  40f587:	lea    ebp,[edi]
  40f589:	sub    eax,DWORD PTR [edx]
  40f58b:	or     esi,ecx
  40f58d:	pop    ecx
  40f58e:	xchg   dl,dh
  40f590:	xor    DWORD PTR [ebx],ebp
  40f592:	add    ch,BYTE PTR [eax-0x25]
  40f595:	add    eax,0xa7a5ffc5
  40f59a:	push   ebx
  40f59b:	std    
  40f59c:	out    dx,al
  40f59d:	imul   esi,DWORD PTR [ebx-0x11ebbf19],0xa90d3103
  40f5a7:	push   DWORD PTR [edx+0x3103e854]
  40f5ad:	push   ecx
  40f5ae:	arpl   WORD PTR [eax-0x3c],cx
  40f5b1:	cmp    BYTE PTR [ebp-0x16ebcefc],al
  40f5b7:	sub    BYTE PTR [ebp-0x50b089b1],0xe3
  40f5be:	ins    DWORD PTR es:[edi],dx
  40f5bf:	cdq    
  40f5c0:	add    BYTE PTR [eax],al
  40f5c2:	cmp    BYTE PTR [ecx],0x65
  40f5c5:	dec    edi
  40f5c6:	lahf   
  40f5c7:	push   ds
  40f5c8:	add    bl,BYTE PTR ds:0x796213f0
  40f5ce:	jb     0x40f609
  40f5d0:	dec    ebp
  40f5d1:	dec    edi
  40f5d2:	cmp    edx,DWORD PTR [ebp+esi*8-0x79]
  40f5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5d7:	adc    ebp,ecx
  40f5d9:	add    edi,DWORD PTR [edx]
  40f5db:	fistp  QWORD PTR [edi+edi*8]
  40f5de:	mov    ch,0x88
  40f5e0:	call   0x5b7a26e8
  40f5e5:	cmp    BYTE PTR [eax+edi*1+0x1d],bl
  40f5e9:	ficom  DWORD PTR [esi-0x50]
  40f5ec:	call   0x15726f4
  40f5f1:	and    DWORD PTR [edi],ebp
  40f5f3:	adc    al,0xe9
  40f5f5:	cli    
  40f5f6:	jle    0x40f5b7
  40f5f8:	jg     0x40f676
  40f5fa:	in     eax,dx
  40f5fb:	cmp    esp,DWORD PTR [ebx-0x37]
  40f5fe:	sub    ah,ch
  40f600:	sbb    BYTE PTR [edx+0x31],0x12
  40f604:	jmp    0xdd7d9b57
  40f609:	clc    
  40f60a:	or     al,0xe7
  40f60c:	daa    
  40f60d:	add    al,0x3a
  40f60f:	push   esp
  40f610:	push   esp
  40f611:	lods   al,BYTE PTR ds:[esi]
  40f612:	pop    es
  40f613:	ret    0x4ec4
  40f616:	and    eax,0xf6c50e2a
  40f61b:	or     al,BYTE PTR [eax]
  40f61d:	test   eax,0xa642fd06
  40f622:	mov    ecx,0xa6fd77
  40f627:	add    BYTE PTR [edi+0x37],ch
  40f62a:	(bad)  
  40f62b:	jmp    0xa9c57f62
  40f630:	jl     0x40f668
  40f632:	(bad)  
  40f633:	cmp    ebp,esp
  40f635:	idiv   bh
  40f637:	cmc    
  40f638:	xor    ch,BYTE PTR [esi+ebx*2]
  40f63b:	out    0x32,eax
  40f63d:	adc    al,0xb
  40f63f:	test   eax,0x2c832089
  40f644:	repnz cmp dh,bh
  40f647:	data16 xor al,al
  40f64a:	or     ebx,DWORD PTR [esi-0x47]
  40f64d:	ja     0x40f64c
  40f64f:	push   esi
  40f650:	inc    DWORD PTR [ebp-0x2ada52fc]
  40f656:	call   DWORD PTR [ecx+0x23]
  40f659:	sub    ebx,DWORD PTR [ecx]
  40f65b:	ds pop ecx
  40f65d:	cmp    esp,edi
  40f65f:	jge    0x40f697
  40f661:	adc    al,0x0
  40f663:	mov    DWORD PTR cs:[edi],edi
  40f666:	out    0x55,eax
  40f668:	ss adc al,0x0
  40f66b:	adc    bl,BYTE PTR [edx+0x36]
  40f66e:	je     0x40f681
  40f670:	jmp    0x8489:0x32e90374
  40f677:	xor    eax,0x99fe35ec
  40f67c:	out    0x7f,eax
  40f67e:	(bad)  
  40f67f:	idiv   DWORD PTR [esi+esi*1-0x19]
  40f683:	inc    ebp
  40f684:	cmp    DWORD PTR [eax+eax*1],edx
  40f687:	shl    BYTE PTR [esi],1
  40f689:	aaa    
  40f68a:	(bad)  
  40f68b:	fiadd  WORD PTR [eax]
  40f68d:	add    BYTE PTR [eax+eax*4-0x39],ah
  40f691:	xlat   BYTE PTR ds:[ebx]
  40f692:	jl     0x40f6ca
  40f694:	out    0x69,eax
  40f696:	cmp    DWORD PTR [eax+eax*1],edx
  40f699:	add    BYTE PTR [ebx-0x3436a62b],al
  40f69f:	jle    0x40f62a
  40f6a1:	in     al,dx
  40f6a2:	pop    ebx
  40f6a3:	int3   
  40f6a4:	ficom  WORD PTR [ebx+0x70]
  40f6a7:	push   es
  40f6a8:	in     eax,0x40
  40f6aa:	enter  0x70ca,0x1
  40f6ae:	mov    ecx,eax
  40f6b0:	cmp    DWORD PTR ds:0x41166e,0x83075ed8
  40f6ba:	cmc    
  40f6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6bc:	sub    al,0x41
  40f6be:	enter  0x7512,0x5
  40f6c2:	jae    0x40f696
  40f6c4:	pop    ecx
  40f6c5:	leave  
  40f6c6:	fcmovnbe st,st(0)
  40f6c8:	inc    ebx
  40f6c9:	cld    
  40f6ca:	mov    BYTE PTR [edx],dl
  40f6cc:	add    BYTE PTR [eax],al
  40f6ce:	dec    edi
  40f6cf:	dec    edi
  40f6d0:	test   BYTE PTR [eax],0x98
  40f6d3:	adc    al,BYTE PTR [eax]
  40f6d5:	(bad)  
  40f6d6:	int    0xd6
  40f6d8:	(bad)  
  40f6d9:	dec    DWORD PTR [eax+0x3c45c712]
  40f6df:	adc    BYTE PTR [eax],al
  40f6e1:	add    BYTE PTR [eax-0x31],bl
  40f6e4:	inc    ebx
  40f6e5:	lock pop eax
  40f6e7:	adc    al,BYTE PTR [eax]
  40f6e9:	add    ch,ah
  40f6eb:	dec    esi
  40f6ec:	out    dx,al
  40f6ed:	push   eax
  40f6ee:	lds    ecx,FWORD PTR [esi-0xe]
  40f6f1:	push   eax
  40f6f2:	add    BYTE PTR [eax],al
  40f6f4:	aad    0x4e
  40f6f6:	jmp    0x3445:0x8bc7b250
  40f6fd:	sub    BYTE PTR [eax+0x2],0xa2
  40f701:	adc    ebp,DWORD PTR [edx+0x0]
  40f704:	daa    
  40f705:	aas    
  40f706:	mov    ah,0x2e
  40f708:	fst    DWORD PTR [ecx]
  40f70a:	mov    DWORD PTR [ebp+0x0],eax
  40f70d:	xchg   ebp,eax
  40f70e:	jnp    0x40f6f8
  40f710:	or     BYTE PTR [esi+0x7],bl
  40f713:	xor    DWORD PTR [ecx],0x31e95be0
  40f719:	sub    eax,DWORD PTR [edx]
  40f71b:	jne    0x40f6a2
  40f71d:	dec    esi
  40f71e:	aad    0xfb
  40f720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f721:	lock dec ebx
  40f723:	sub    BYTE PTR [ebx+eax*4+0x2],0x74
  40f728:	mov    esi,DWORD PTR [edx+0x2ecaf7ad]
  40f72e:	dec    ebx
  40f72f:	jb     0x40f77a
  40f731:	mov    ds:0x9ece41d5,eax
  40f736:	jns    0x40f77c
  40f738:	rol    DWORD PTR [esi-0x16b517f1],1
  40f73e:	dec    esp
  40f73f:	(bad)  
  40f740:	sub    ch,BYTE PTR [ebx-0x2a]
  40f743:	and    bh,BYTE PTR [eax+0x356967e8]
  40f749:	xchg   ebx,eax
  40f74a:	pop    esp
  40f74b:	xor    DWORD PTR [esi-0x6e8bb452],ebx
  40f751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f752:	ret    0x8e07
  40f755:	pop    eax
  40f756:	data16 mov es,WORD PTR [eax]
  40f759:	add    cl,dh
  40f75b:	cs dec ebx
  40f75d:	xor    al,0x4f
  40f75f:	add    cl,0xff
  40f762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f763:	sub    ebx,DWORD PTR [edi+0x26bfa2d]
  40f769:	xor    DWORD PTR [edx+0x7f],0x4b
  40f76d:	dec    esp
  40f76e:	dec    ebp
  40f76f:	stos   BYTE PTR es:[edi],al
  40f770:	int    0xeb
  40f772:	xor    DWORD PTR [eax+0x1ec4fe87],esp
  40f778:	dec    esp
  40f779:	adc    al,0x83
  40f77b:	jne    0x40f73e
  40f77d:	push   DWORD PTR [edi+0x68]
  40f780:	dec    esi
  40f781:	push   DWORD PTR [esi]
  40f783:	sub    eax,DWORD PTR [edx]
  40f785:	sub    DWORD PTR [ebx+edx*1+0x2b26ff59],0x140804d5
  40f790:	inc    ebp
  40f791:	dec    ebx
  40f792:	pop    ss
  40f793:	xor    eax,0x140ac969
  40f798:	pop    ebp
  40f799:	std    
  40f79a:	pop    es
  40f79b:	mov    edi,0x82254bcc
  40f7a0:	push   ss
  40f7a1:	(bad)
  40f7a4:	out    0x3,eax
  40f7a6:	xor    DWORD PTR [edx+edx*1],edx
  40f7a9:	cmp    eax,0x5861def3
  40f7ae:	mov    bl,0x4f
  40f7b0:	mov    esp,0x23ac7fb7
  40f7b5:	bound  ecx,QWORD PTR [esi]
  40f7b7:	adc    al,0x91
  40f7b9:	(bad)  
  40f7ba:	xor    DWORD PTR [ecx-0x73],edx
  40f7bd:	xchg   DWORD PTR [eax],eax
  40f7bf:	add    ch,bh
  40f7c1:	sub    esi,edx
  40f7c3:	les    esi,FWORD PTR [esi-0x4c030bcc]
  40f7c9:	idiv   BYTE PTR [esi+0x1a]
  40f7cc:	lock adc ebp,ecx
  40f7cf:	shl    BYTE PTR [ecx+ebp*8],1
  40f7d2:	sub    BYTE PTR [ebx+0x7f294afb],ch
  40f7d8:	sub    eax,0x86c4a1e6
  40f7dd:	sub    esi,DWORD PTR [edi+0x5]
  40f7e0:	xor    DWORD PTR [ecx+edx*2],edx
  40f7e3:	and    BYTE PTR [ebp+0x34],dh
  40f7e6:	cmp    eax,0xa2022d87
  40f7eb:	les    esp,FWORD PTR [esi+0x34]
  40f7ee:	mov    ah,0xf2
  40f7f0:	pop    edi
  40f7f1:	shr    ah,0x4a
  40f7f4:	sbb    eax,0x4ec4b202
  40f7f9:	sub    al,0x46
  40f7fb:	pop    es
  40f7fc:	xor    DWORD PTR [edx+eiz*8],edx
  40f7ff:	inc    ebx
  40f800:	lds    ecx,FWORD PTR [esi]
  40f802:	adc    dh,bl
  40f804:	xor    DWORD PTR [ecx+ebp*8],edx
  40f807:	inc    edx
  40f808:	jne    0x40f83a
  40f80a:	(bad)  
  40f80b:	call   0x5c410c42
  40f810:	lock das 
  40f812:	dec    edi
  40f813:	push   ebx
  40f814:	sub    eax,0xe7de01be
  40f819:	pop    ss
  40f81a:	push   0xffffffe9
  40f81c:	jnp    0x40f7c4
  40f81e:	add    ecx,esi
  40f820:	add    DWORD PTR [edx],ebp
  40f822:	sub    eax,0x2d000028
  40f827:	pop    ds
  40f828:	shl    BYTE PTR ds:0xe9883d30,0x32
  40f82f:	adc    al,0xff
  40f831:	cmp    dh,BYTE PTR [ecx]
  40f833:	cmp    al,0x59
  40f835:	sub    BYTE PTR [edx+0x32],ch
  40f838:	mov    BYTE PTR [edi*2+0x6aed7232],ah
  40f83f:	inc    ecx
  40f840:	add    ecx,ebp
  40f842:	xor    al,ah
  40f844:	(bad)  
  40f845:	cld    
  40f846:	push   0xffffffe3
  40f848:	(bad)  
  40f849:	cli    
  40f84a:	scas   al,BYTE PTR es:[edi]
  40f84b:	mov    ebx,0x1432e7ff
  40f850:	push   0xfe339ee9
  40f855:	push   ecx
  40f856:	adc    DWORD PTR [esi],edx
  40f858:	add    cl,ch
  40f85a:	(bad)  
  40f85b:	jae    0x40f8d0
  40f85d:	add    dh,dl
  40f85f:	xlat   BYTE PTR ds:[ebx]
  40f860:	sti    
  40f861:	jmp    0x74410c98
  40f866:	jno    0x40f897
  40f868:	dec    edi
  40f869:	shl    DWORD PTR [edx],cl
  40f86b:	mov    esi,0x2b813601
  40f870:	imul   ebp,ecx,0x2603a5eb
  40f876:	popa   
  40f877:	sub    DWORD PTR ds:0xc01f32a8,ebp
  40f87d:	popf   
  40f87e:	inc    esp
  40f87f:	xor    dh,BYTE PTR [ecx+edx*1-0x26]
  40f883:	js     0x40f8b5
  40f885:	add    BYTE PTR [edi],ch
  40f887:	fsubp  st(1),st
  40f889:	xor    BYTE PTR [eax],al
  40f88b:	add    BYTE PTR [edi],ch
  40f88d:	arpl   si,si
  40f88f:	call   0x400110
  40f894:	dec    edi
  40f895:	pop    ss
  40f896:	and    BYTE PTR [ecx+0x8],al
  40f899:	aam    0x43
  40f89b:	cld    
  40f89c:	sbb    BYTE PTR [edi],dl
  40f89e:	add    BYTE PTR [eax],al
  40f8a0:	lea    esi,[ebx-0x6]
  40f8a3:	push   eax
  40f8a4:	jb     0x40f8be
  40f8a6:	push   0x2
  40f8a8:	pop    ss
  40f8a9:	push   edx
  40f8aa:	(bad)  
  40f8ab:	(bad)  
  40f8ac:	sub    edx,DWORD PTR [edi+edi*8]
  40f8af:	adc    eax,0x410da6
  40f8b4:	rcl    esi,cl
  40f8b6:	or     eax,0x188184
  40f8bb:	add    BYTE PTR [edi-0x27df298e],dl
  40f8c1:	push   ss
  40f8c2:	add    bh,al
  40f8c4:	adc    eax,0xc8fffffc
  40f8c9:	push   ss
  40f8ca:	push   DWORD PTR [ebx-0x6c]
  40f8cd:	stos   DWORD PTR es:[edi],eax
  40f8ce:	inc    ebx
  40f8cf:	loopne 0x40f8f0
  40f8d1:	dec    ecx
  40f8d2:	push   es
  40f8d3:	(bad)  
  40f8d4:	push   ebp
  40f8d5:	mov    ah,0xc5
  40f8d7:	inc    ebp
  40f8d8:	add    BYTE PTR [eax],bl
  40f8da:	add    BYTE PTR [eax],al
  40f8dc:	cwde   
  40f8dd:	rol    DWORD PTR [ebx-0x14],cl
  40f8e0:	cwde   
  40f8e1:	push   ss
  40f8e2:	add    BYTE PTR [eax],al
  40f8e4:	push   edi
  40f8e5:	jae    0x40f8d5
  40f8e7:	add    BYTE PTR [eax-0x6a38ffea],cl
  40f8ed:	loop   0x40f8ed
  40f8ef:	inc    DWORD PTR [eax]
  40f8f1:	add    BYTE PTR [eax+0x16],bl
  40f8f4:	lea    eax,[ebp+0x40]
  40f8f7:	push   0xd00c75fd
  40f8fc:	sub    al,0x4
  40f8fe:	pop    eax
  40f8ff:	push   ss
  40f900:	or     eax,eax
  40f902:	xor    DWORD PTR [ecx+0x8bc82ea],edx
  40f908:	add    al,0x74
  40f90a:	sub    BYTE PTR [edx],bl
  40f90c:	iret   
  40f90d:	repz mov esi,0x7028a638
  40f913:	cmp    edi,DWORD PTR [edi]
  40f915:	inc    esp
  40f916:	add    eax,0x3100023d
  40f91b:	inc    esi
  40f91c:	inc    esi
  40f91e:	je     0x40f987
  40f920:	add    al,BYTE PTR [eax]
  40f922:	xor    DWORD PTR [ebx],edi
  40f924:	inc    edi
  40f925:	je     0x40f924
  40f927:	(bad)  
  40f928:	in     eax,dx
  40f929:	jmp    0xb44f575
  40f92e:	icebp  
  40f92f:	out    0xe9,eax
  40f931:	out    0xca,eax
  40f933:	jno    0x40f97c
  40f935:	(bad)  
  40f936:	mov    dl,0x40
  40f938:	fs sub eax,0x74023b70
  40f93e:	aaa    
  40f93f:	xchg   edx,eax
  40f940:	in     eax,dx
  40f941:	loope  0x40f95a
  40f943:	cld    
  40f944:	add    eax,edi
  40f946:	xor    al,0xff
  40f948:	sbb    al,BYTE PTR [ecx+0x31]
  40f94b:	cmp    al,0x2
  40f94d:	add    BYTE PTR [ecx+0x31d3c5be],dh
  40f953:	das    
  40f954:	sti    
  40f955:	inc    BYTE PTR [eax]
  40f957:	add    BYTE PTR [edi+eiz*4],ah
  40f95a:	inc    edi
  40f95b:	je     0x40f8f2
  40f95d:	ret    
  40f95e:	sub    eax,0x473b3102
  40f963:	je     0x40f8ea
  40f965:	rol    DWORD PTR [ebx+0x0],cl
  40f968:	xor    DWORD PTR [ebx],edi
  40f96a:	inc    esi
  40f96b:	xor    dh,BYTE PTR [ecx-0x6c]
  40f96e:	inc    edi
  40f96f:	(bad)  
  40f970:	outs   dx,BYTE PTR ds:[esi]
  40f971:	repnz push esp
  40f973:	lods   eax,DWORD PTR ds:[esi]
  40f974:	sub    DWORD PTR [edx-0x9],eax
  40f977:	test   BYTE PTR [ebx],dl
  40f979:	add    cl,BYTE PTR [eax-0x2]
  40f97c:	stos   BYTE PTR es:[edi],al
  40f97d:	adc    al,0x2
  40f97f:	std    
  40f980:	imul   esp,DWORD PTR [ecx],0x64
  40f983:	loopne 0x40f9c9
  40f985:	xor    DWORD PTR ds:0xe914318b,edx
  40f98b:	add    edx,esi
  40f98d:	int3   
  40f98e:	das    
  40f98f:	inc    esp
  40f990:	test   DWORD PTR [ebp+0x2ff2840c],ebx
  40f996:	sub    ch,0x16
  40f999:	aam    0xe8
  40f99b:	dec    ebx
  40f99c:	mov    al,ds:0x9847aa13
  40f9a1:	adc    al,0xd1
  40f9a3:	xor    eax,0x5be91430
  40f9a8:	cld    
  40f9a9:	in     eax,dx
  40f9aa:	int    0x47
  40f9ac:	push   cs
  40f9ad:	xchg   DWORD PTR [ecx-0x7d4410b9],edi
  40f9b3:	push   ss
  40f9b4:	jo     0x40f9ca
  40f9b6:	inc    ecx
  40f9b7:	push   edx
  40f9b8:	or     dl,bl
  40f9ba:	call   0x2540fa1a
  40f9bf:	in     eax,dx
  40f9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c1:	inc    edi
  40f9c2:	push   esi
  40f9c3:	push   ss
  40f9c4:	into   
  40f9c5:	(bad)  
  40f9c6:	(bad)  
  40f9c7:	mov    eax,0x14701629
  40f9cc:	add    DWORD PTR [esi-0x8],0xecdc8530
  40f9d3:	add    DWORD PTR [eax],ebp
  40f9d5:	add    al,0x19
  40f9d7:	and    ah,al
  40f9d9:	les    ebx,FWORD PTR [esi-0x69f582c8]
  40f9df:	xor    al,dl
  40f9e1:	lds    ebx,FWORD PTR [ecx-0x2d]
  40f9e4:	call   0xa83be0c4
  40f9e9:	add    ecx,DWORD PTR [ecx+0x77471233]
  40f9ef:	mov    ebx,0x13f0167a
  40f9f4:	sar    DWORD PTR [esi],1
  40f9f6:	sbb    dl,bl
  40f9f8:	(bad)  
  40f9f9:	call   0x2e7a3df8
  40f9fe:	out    dx,al
  40f9ff:	mov    eax,0x3075d016
  40fa04:	ss and ax,0xffd3
  40fa09:	add    bl,dh
  40fa0b:	jmp    0x6fa:0x19d50efe
  40fa12:	jbe    0x40fa4b
  40fa14:	xor    al,0x3
  40fa16:	outs   dx,BYTE PTR ds:[esi]
  40fa17:	or     ch,BYTE PTR cs:[ecx]
  40fa1a:	add    DWORD PTR [ebx],eax
  40fa1c:	call   0xfe6f6600
  40fa21:	repnz add BYTE PTR [eax],al
  40fa24:	jb     0x40f9c9
  40fa26:	or     DWORD PTR [esi+0x284a2431],esp
  40fa2c:	xor    eax,0x32e90015
  40fa31:	mov    esp,0x1432e800
  40fa36:	call   0xfe703d11
  40fa3b:	mov    al,BYTE PTR [eax-0x25]
  40fa3e:	inc    eax
  40fa3f:	jmp    0xe93cd25b
  40fa44:	xor    eax,0xf16c0014
  40fa49:	sub    ecx,DWORD PTR [edi-0x6a]
  40fa4c:	and    edx,esp
  40fa4e:	dec    edx
  40fa4f:	sub    BYTE PTR ds:0x32eb683c,ch
  40fa55:	adc    al,0xb
  40fa57:	test   eax,0xbcff0881
  40fa5c:	inc    eax
  40fa5d:	fild   DWORD PTR [eax-0x17]
  40fa60:	cli    
  40fa61:	dec    eax
  40fa62:	not    WORD PTR cs:[ebp+0x4]
  40fa67:	sbb    ecx,edx
  40fa69:	aam    0xff
  40fa6b:	call   0x41410ea2
  40fa70:	mov    ecx,gs
  40fa72:	inc    BYTE PTR [eax]
  40fa74:	test   edx,0xd6273304
  40fa7a:	push   si
  40fa7c:	das    
  40fa7d:	pop    ecx
  40fa7e:	(bad)  
  40fa7f:	out    0x4b,eax
  40fa81:	ret    0xfffd
  40fa84:	add    edx,edx
  40fa86:	push   ebx
  40fa87:	mov    eax,DWORD PTR [eax]
  40fa89:	add    BYTE PTR [ebx+ecx*2],dh
  40fa8c:	add    eax,0xf81388e9
  40fa91:	jb     0x40fadc
  40fa93:	sar    ch,cl
  40fa95:	push   0x18
  40fa97:	retf   
  40fa98:	mov    eax,0xb8131801
  40fa9d:	add    BYTE PTR [eax],cl
  40fa9f:	adc    eax,DWORD PTR [eax]
  40faa1:	leave  
  40faa2:	dec    edx
  40faa3:	das    
  40faa4:	(bad)  
  40faa5:	addr16 cmp ebx,ecx
  40faa8:	add    BYTE PTR ds:[eax],dl
  40faab:	inc    edx
  40faac:	inc    edx
  40faae:	out    0x4f,eax
  40fab0:	clc    
  40fab1:	call   0xa42912fe
  40fab6:	fst    DWORD PTR [edx]
  40fab8:	add    al,ch
  40faba:	xchg   edx,eax
  40fabb:	aad    0xfd
  40fabd:	push   eax
  40fabf:	lods   al,BYTE PTR ds:[esi]
  40fac0:	lock inc DWORD PTR [edi-0x680aed31]
  40fac7:	fsub   st,st(6)
  40fac9:	cld    
  40faca:	popf   
  40facb:	fdivr  st,st(5)
  40facd:	and    ebp,0xffffffc2
  40fad0:	dec    ecx
  40fad1:	inc    ecx
  40fad2:	enter  0x7412,0x19
  40fad6:	sbb    edx,DWORD PTR [edi]
  40fad8:	loop   0x40fb08
  40fada:	pop    ecx
  40fadb:	sbb    BYTE PTR [eax],al
  40fadd:	je     0x40fa6d
  40fadf:	xlat   BYTE PTR ds:[ebx]
  40fae0:	adc    esp,edx
  40fae2:	(bad)  
  40fae3:	push   ecx
  40fae4:	inc    dh
  40fae6:	popf   
  40fae7:	jbe    0x40fb10
  40fae9:	inc    ecx
  40faea:	cwde   
  40faeb:	adc    DWORD PTR [eax],eax
  40faed:	add    BYTE PTR [eax],al
  40faef:	add    BYTE PTR [ecx],dh
  40faf1:	mov    ebp,0xdd7ac65b
  40faf6:	inc    esp
  40faf7:	out    0x79,eax
  40faf9:	fadd   DWORD PTR [esi+edi*8+0x72]
  40fafd:	inc    esp
  40fafe:	int3   
  40faff:	call   0x718b37f5
  40fb04:	xor    dl,bh
  40fb06:	inc    esp
  40fb07:	out    0x26,eax
  40fb09:	cmp    al,0x2
  40fb0b:	add    bl,bl
  40fb0d:	aaa    
  40fb0e:	test   eax,0x530d632a
  40fb13:	cmp    BYTE PTR [ebx],0x38
  40fb16:	int    0x1
  40fb18:	sbb    bh,BYTE PTR [edx]
  40fb1a:	push   edi
  40fb1b:	jmp    0x141e:0xfe44b719
  40fb22:	ins    BYTE PTR es:[edi],dx
  40fb23:	not    BYTE PTR [esi]
  40fb25:	aas    
  40fb26:	fdivr  st,st(7)
  40fb28:	push   ss
  40fb29:	or     BYTE PTR [ebx],al
  40fb2b:	add    BYTE PTR [ecx],dh
  40fb2d:	dec    esi
  40fb2e:	sbb    eax,0x3fc587c
  40fb33:	dec    DWORD PTR [ebx+edi*4-0x57]
  40fb37:	inc    eax
  40fb38:	xor    DWORD PTR [esi+0x1d],edx
  40fb3b:	test   BYTE PTR [eax+0x14ff03fc],cl
  40fb41:	mov    bl,0xa9
  40fb43:	inc    eax
  40fb44:	xor    DWORD PTR [esi+0x1d],edi
  40fb47:	mov    WORD PTR [eax-0x4],gs
  40fb4a:	add    edi,edi
  40fb4c:	or     al,0xab
  40fb4e:	test   eax,0x1d863140
  40fb53:	xchg   esp,eax
  40fb54:	add    BYTE PTR [eax],al
  40fb56:	pop    eax
  40fb57:	cld    
  40fb58:	add    edi,edi
  40fb5a:	push   esp
  40fb5b:	mov    bl,0xa9
  40fb5d:	inc    eax
  40fb5e:	xor    DWORD PTR [esi-0x40763e3],ebp
  40fb64:	add    edi,edi
  40fb66:	dec    esp
  40fb67:	fld    TBYTE PTR [ecx+0x66143140]
  40fb6d:	push   ds
  40fb6e:	int    0xcb
  40fb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb71:	add    edi,DWORD PTR [esi-0x9]
  40fb74:	sub    BYTE PTR [edx+0x1e4e13f1],0x9d
  40fb7b:	retf   
  40fb7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb7d:	add    esp,DWORD PTR [esi-0x9]
  40fb80:	js     0x40fb2c
  40fb82:	icebp  
  40fb83:	adc    esi,DWORD PTR [esi]
  40fb85:	push   ds
  40fb86:	popf   
  40fb87:	retf   
  40fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb89:	add    ecx,DWORD PTR [esi-0x9]
  40fb8c:	pusha  
  40fb8d:	stos   BYTE PTR es:[edi],al
  40fb8e:	icebp  
  40fb8f:	adc    ebx,DWORD PTR [esi]
  40fb91:	push   ds
  40fb92:	jge    0x40fb5f
  40fb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb95:	add    esi,DWORD PTR [esi]
  40fb97:	imul   DWORD PTR [eax]
  40fb99:	stos   BYTE PTR es:[edi],al
  40fb9a:	jno    0x40fbb0
  40fb9c:	push   es
  40fb9d:	push   ds
  40fb9e:	in     eax,dx
  40fb9f:	retf   0x3a7
  40fba2:	push   ds
  40fba3:	mul    DWORD PTR [eax]
  40fba5:	stos   BYTE PTR es:[edi],al
  40fba6:	jno    0x40fbbc
  40fba8:	out    dx,al
  40fba9:	sbb    eax,0x427cafd
  40fbae:	push   es
  40fbaf:	idiv   DWORD PTR [eax-0x29eb8e23]
  40fbb5:	jmp    0x468c69c
  40fbba:	add    BYTE PTR [eax],al
  40fbbc:	out    dx,al
  40fbbd:	mul    BYTE PTR [eax-0x41eb8e23]
  40fbc3:	jmp    0x468c6c2
  40fbc8:	(bad)  
  40fbc9:	test   al,0xdd
  40fbcc:	jno    0x40fbe2
  40fbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbcf:	jmp    0x468c6a6
  40fbd4:	mov    esi,0x71dd80f6
  40fbd9:	adc    al,0x8e
  40fbdb:	jmp    0x468c67a
  40fbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbe1:	idiv   BYTE PTR [eax-0x23]
  40fbe4:	icebp  
  40fbe5:	adc    eax,DWORD PTR [eax]
  40fbe7:	jbe    0x40fb71
  40fbe9:	and    BYTE PTR [eax+0x28],bl
  40fbec:	xor    eax,0x6461242d
  40fbf1:	sar    edi,cl
  40fbf3:	pop    ebp
  40fbf4:	mov    BYTE PTR [eax],ch
  40fbf6:	pop    eax
  40fbf7:	test   al,0x32
  40fbf9:	sub    eax,0xd38ce924
  40fbfe:	inc    DWORD PTR [ebp+0x58]
  40fc01:	adc    BYTE PTR [edx-0x58],bl
  40fc04:	xor    ch,BYTE PTR ds:0xd374e124
  40fc0a:	jmp    FWORD PTR ds:0xa85a1858
  40fc10:	xor    ch,BYTE PTR ds:0xd35cf924
  40fc16:	call   DWORD PTR ds:0xa85a0048
  40fc1c:	xor    ch,BYTE PTR [ebx]
  40fc1e:	and    al,0xe1
  40fc20:	add    BYTE PTR [eax],al
  40fc22:	add    al,0xd5
  40fc24:	(bad)  
  40fc25:	std    
  40fc26:	or     DWORD PTR [eax],edx
  40fc28:	pop    edx
  40fc29:	test   al,0x32
  40fc2b:	sub    esp,DWORD PTR [ecx+ecx*8]
  40fc2e:	in     al,dx
  40fc2f:	aam    0xff
  40fc31:	in     eax,0x19
  40fc33:	clc    
  40fc34:	pop    ecx
  40fc35:	sub    BYTE PTR ds:0xd701242b,dh
  40fc3b:	aam    0xff
  40fc3d:	int    0xd9
  40fc3f:	call   FWORD PTR [ecx+0x28]
  40fc42:	sub    eax,0xfcf9242b
  40fc47:	aam    0xff
  40fc49:	mov    ch,0xc9
  40fc4b:	out    0x59,eax
  40fc4d:	sub    BYTE PTR ds:0xe4e1242b,dh
  40fc53:	aam    0xff
  40fc55:	popf   
  40fc56:	leave  
  40fc57:	out    dx,eax
  40fc58:	pop    ecx
  40fc59:	sub    BYTE PTR ds:0x8f29242b,ch
  40fc5f:	aam    0xff
  40fc61:	jmp    FWORD PTR [edi+0x495a423c]
  40fc67:	adc    bh,bh
  40fc69:	and    eax,0x3f4a50
  40fc6e:	pop    ds
  40fc6f:	cmp    al,0x4e
  40fc71:	pop    edx
  40fc72:	fst    DWORD PTR [edi]
  40fc74:	jmp    DWORD PTR ds:0x3f49c4
  40fc7a:	fistp  QWORD PTR [ebx]
  40fc7c:	push   esi
  40fc7d:	pop    edx
  40fc7e:	cdq    
  40fc7f:	pop    ss
  40fc80:	jmp    DWORD PTR ds:0x3f498c
  40fc86:	add    BYTE PTR [eax],al
  40fc88:	pop    ds
  40fc89:	cmp    al,0x5e
  40fc8b:	pop    edx
  40fc8c:	mov    DWORD PTR [edi],edx
  40fc8e:	jmp    DWORD PTR ds:0x3f4974
  40fc94:	(bad)  
  40fc96:	push   0x5a
  40fc98:	mov    DWORD PTR [edi],edx
  40fc9a:	jmp    DWORD PTR ds:0x3f4994
  40fca0:	aas    
  40fca1:	cmp    al,0x76
  40fca3:	pop    edx
  40fca4:	fst    DWORD PTR [esi]
  40fca6:	jmp    DWORD PTR ds:0x3f499c
  40fcac:	pop    ds
  40fcad:	xor    edi,DWORD PTR [esi+0x5a]
  40fcb0:	fst    DWORD PTR [esi]
  40fcb2:	jmp    DWORD PTR ds:0x3f4a94
  40fcb8:	fbstp  TBYTE PTR [edx]
  40fcba:	xchg   BYTE PTR [edx+0x49],bl
  40fcbd:	adc    bh,bh
  40fcbf:	and    eax,0x3f4a8c
  40fcc4:	out    dx,eax
  40fcc5:	xor    cl,BYTE PTR [esi-0xeff6a6]
  40fccb:	and    eax,0x3f4a74
  40fcd0:	lahf   
  40fcd1:	xor    dl,BYTE PTR [esi-0xefe6a6]
  40fcd7:	and    eax,0x3f4a68
  40fcdc:	xor    DWORD PTR [edx-0x3f4581a],eax
  40fce2:	add    edi,edi
  40fce4:	dec    esp
  40fce5:	rcr    ebp,0x40
  40fce8:	xor    DWORD PTR [edx+0xb3e6],ebp
  40fcee:	sti    
  40fcef:	sti    
  40fcf0:	add    edi,edi
  40fcf2:	push   esp
  40fcf3:	in     eax,0xdd
  40fcf5:	inc    eax
  40fcf6:	xor    DWORD PTR [edx+0x7bdbbbe6],esi
  40fcfc:	add    bh,bh
  40fcfe:	dec    esp
  40fcff:	std    
  40fd00:	fld    QWORD PTR [eax+0x31]
  40fd03:	(bad)  
  40fd05:	ret    
  40fd06:	or     edi,DWORD PTR [edx+eax*1-0x1]
  40fd0a:	adc    al,0xe5
  40fd0c:	fld    QWORD PTR [eax+0x31]
  40fd0f:	loop   0x40fcf7
  40fd11:	iret   
  40fd12:	jmp    0x40fd8f
  40fd14:	add    bh,bh
  40fd16:	or     al,0xe9
  40fd18:	fld    QWORD PTR [eax+0x31]
  40fd1b:	or     ah,bh
  40fd1d:	xlat   BYTE PTR ds:[ebx]
  40fd1e:	fstp   TBYTE PTR [ebx+0x2]
  40fd21:	call   DWORD PTR [edi+esi*8-0x23]
  40fd25:	inc    eax
  40fd26:	xor    DWORD PTR [edx],edx
  40fd28:	out    0xdf,eax
  40fd2a:	jnp    0x40fda8
  40fd2c:	add    bh,bh
  40fd2e:	dec    esp
  40fd2f:	pop    ss
  40fd30:	fiadd  WORD PTR [eax+0x31]
  40fd33:	cmp    ah,ch
  40fd35:	out    0x6b,eax
  40fd37:	cld    
  40fd38:	add    edi,edi
  40fd3a:	push   esp
  40fd3b:	push   edi
  40fd3c:	fadd   QWORD PTR [eax+0x31]
  40fd3f:	inc    edx
  40fd40:	in     eax,0xef
  40fd42:	mov    edi,esp
  40fd44:	add    edi,edi
  40fd46:	or     al,0x67
  40fd48:	fadd   QWORD PTR [eax+0x31]
  40fd4b:	push   0xffffffe5
  40fd4d:	sti    
  40fd4e:	jnp    0x40fd4c
  40fd50:	add    edi,edi
  40fd52:	add    BYTE PTR [eax],al
  40fd54:	adc    al,0x3b
  40fd56:	fild   DWORD PTR [eax+0x31]
  40fd59:	adc    al,0xb5
  40fd5b:	dec    edi
  40fd5c:	jmp    0x6158:0xea4fac58
  40fd63:	(bad)  
  40fd64:	push   edx
  40fd65:	adc    BYTE PTR [edx+0x3b],ch
  40fd68:	xor    BYTE PTR [edi+0x14127bf0],ah
  40fd6e:	jmp    0xe9517076
  40fd73:	test   BYTE PTR [esi-0x36f413f0],al
  40fd79:	push   ss
  40fd7a:	jmp    0xe4972e82
  40fd7f:	add    esi,DWORD PTR [edx+0x36bee02c]
  40fd85:	ins    BYTE PTR es:[edi],dx
  40fd86:	in     al,0x3
  40fd88:	xor    DWORD PTR [ebx+ebp*1],edx
  40fd8b:	pop    es
  40fd8c:	xor    DWORD PTR [ebp+0x1bd41340],edx
  40fd92:	jno    0x40fd9d
  40fd94:	xor    DWORD PTR [ecx+ebp*8],edx
  40fd97:	inc    ebp
  40fd98:	xor    dl,BYTE PTR [edx+ebp*2]
  40fd9b:	cmp    ebx,DWORD PTR [esi]
  40fd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9e:	lock jnp 0x40fdcf
  40fda1:	adc    al,0xe9
  40fda3:	add    esi,ebx
  40fda5:	psubsw mm0,QWORD PTR [esi+ebx*1-0x26f47c2c]
  40fdad:	sbb    eax,0x563103e9
  40fdb2:	in     al,dx
  40fdb3:	add    ecx,DWORD PTR [esp+edx*4-0x18]
  40fdb7:	add    eax,DWORD PTR [eax]
  40fdb9:	add    BYTE PTR [ecx],dh
  40fdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbc:	lock jnp 0x40fde9
  40fdbf:	adc    al,0xe9
  40fdc1:	add    esi,ebx
  40fdc3:	psubsw mm0,QWORD PTR [eax]
  40fdc6:	xor    DWORD PTR [ebx],edx
  40fdc8:	jmp    0x815d61d0
  40fdcd:	push   cs
  40fdce:	xor    DWORD PTR [ecx+ebp*8],edx
  40fdd1:	inc    ecx
  40fdd2:	xor    dl,BYTE PTR [eax+eax*1]
  40fdd5:	hlt    
  40fdd6:	xor    dl,BYTE PTR [esi]
  40fdd8:	add    cl,ch
  40fdda:	icebp  
  40fddb:	adc    BYTE PTR [eax+0x1432f9],bh
  40fde1:	stos   DWORD PTR es:[edi],eax
  40fde2:	sub    DWORD PTR [edi*1+0x1436e9],edx
  40fde9:	or     al,0x35
  40fdeb:	ins    BYTE PTR es:[edi],dx
  40fdec:	adc    ecx,ebp
  40fdee:	xor    dl,BYTE PTR [edx+eax*8]
  40fdf1:	in     eax,0x32
  40fdf3:	out    0xff,eax
  40fdf5:	loopne 0x40fe29
  40fdf7:	adc    al,0x7d
  40fdf9:	loope  0x40fe05
  40fdfb:	add    eax,0x5632e900
  40fe00:	add    ebp,ecx
  40fe02:	xor    DWORD PTR [eax+edx*1],edx
  40fe05:	jmp    0x9148a53c
  40fe0a:	aas    
  40fe0b:	adc    al,0x0
  40fe0d:	jmp    0xfc411302
  40fe12:	xor    dh,ah
  40fe14:	(bad)  
  40fe15:	call   0xd1f90e8b
  40fe1a:	xor    dl,BYTE PTR [eax+eax*1]
  40fe1d:	sub    eax,DWORD PTR [eax]
  40fe1f:	add    BYTE PTR [ecx],ch
  40fe21:	adc    al,0x3d
  40fe23:	jmp    0x953f269a
  40fe28:	cmp    ch,BYTE PTR [ecx+ebx*1-0x17]
  40fe2c:	xor    dl,BYTE PTR [edx+eax*8]
  40fe2f:	in     eax,dx
  40fe30:	xor    ch,cl
  40fe32:	jmp    FWORD PTR [eax+0x2d]
  40fe35:	adc    al,0x7d
  40fe37:	loope  0x40fdc3
  40fe39:	or     eax,DWORD PTR [eax]
  40fe3b:	jmp    0xe9445072
  40fe40:	add    ebx,DWORD PTR [ebp+0x3c]
  40fe43:	jmp    0xe641137a
  40fe48:	xchg   ecx,eax
  40fe49:	push   esp
  40fe4a:	mov    WORD PTR ds:0x8b0634,ds
  40fe50:	mov    ebp,edx
  40fe52:	add    al,BYTE PTR [eax]
  40fe54:	dec    ebx
  40fe55:	nop
  40fe56:	sbb    al,BYTE PTR [eax+ebx*8]
  40fe59:	adc    edi,edi
  40fe5b:	jne    0x40fe52
  40fe5d:	call   0x8900:0x13cc107f
  40fe64:	dec    ecx
  40fe65:	or     eax,DWORD PTR [eax+eax*1]
  40fe68:	cwde   
  40fe69:	push   ebx
  40fe6a:	lds    eax,FWORD PTR [ecx+0xf94]
  40fe70:	mov    al,ds:0x21000013
  40fe75:	nop
  40fe76:	push   cs
  40fe77:	add    al,0x98
  40fe79:	adc    eax,DWORD PTR [ebx+0xf6c7c]
  40fe7f:	mov    eax,DWORD PTR [ecx]
  40fe81:	or     eax,DWORD PTR [eax+eax*1]
  40fe84:	add    BYTE PTR [eax],al
  40fe86:	mov    BYTE PTR [edi+0x9],bl
  40fe89:	mov    bl,BYTE PTR [ecx+0x15]
  40fe8c:	sar    dh,0x18
  40fe8f:	fwait
  40fe90:	inc    ecx
  40fe92:	dec    esp
  40fe93:	adc    edx,eax
  40fe95:	and    DWORD PTR [edx],ecx
  40fe97:	sldt   WORD PTR [ebx+0x406d9]
  40fe9e:	pop    eax
  40fe9f:	out    0x73,al
  40fea1:	sbb    eax,0x40e8fc3
  40fea6:	dec    eax
  40fea7:	adc    ecx,DWORD PTR [ecx+0xf2081]
  40fead:	add    al,bl
  40feaf:	int    0x7f
  40feb1:	sbb    al,0xc
  40feb3:	adc    eax,DWORD PTR [eax]
  40feb5:	or     BYTE PTR [eax],cl
  40feb7:	adc    eax,DWORD PTR [eax]
  40feb9:	mov    DWORD PTR [ecx+0x18000403],ebx
  40febf:	call   0xd000:0x130c1887
  40fec6:	sub    ebp,edx
  40fec8:	add    DWORD PTR [ecx+0x62131],0x1cb65631
  40fed2:	stos   BYTE PTR es:[edi],al
  40fed3:	mov    ebx,0x3d310413
  40fed8:	mov    DWORD PTR [eax+0x23929],eax
  40fede:	jno    0x40ff4e
  40fee0:	sbb    BYTE PTR [ebx],0x35
  40fee3:	cmp    eax,0x3d310802
  40fee8:	add    cl,BYTE PTR [ecx+0x2cb00000]
  40feee:	push   es
  40feef:	add    BYTE PTR [ecx],dh
  40fef1:	mov    dl,0x8a
  40fef3:	pop    ss
  40fef4:	xor    eax,0x308a023d
  40fef9:	cmp    eax,DWORD PTR [edx-0x3]
  40fefc:	jno    0x40feb2
  40fefe:	add    al,bl
  40ff00:	mov    edx,0xaa03e7f0
  40ff05:	push   0x5edc03e6
  40ff0a:	shl    DWORD PTR [edx],cl
  40ff0c:	scas   eax,DWORD PTR es:[di]
  40ff0e:	retf   0xbbff
  40ff11:	les    eax,FWORD PTR [eax+0x2c0c30e6]
  40ff17:	inc    ebp
  40ff18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff19:	inc    eax
  40ff1a:	rol    DWORD PTR [edx-0x104cc4b7],cl
  40ff20:	mov    dl,0xe6
  40ff22:	add    bh,BYTE PTR [ebp-0x1c312c2]
  40ff28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff29:	xchg   DWORD PTR [ecx],ecx
  40ff2b:	je     0x40fed0
  40ff2d:	push   0xffffff87
  40ff2f:	(bad)  
  40ff30:	xor    ah,dl
  40ff32:	pop    ds
  40ff33:	add    al,0x31
  40ff35:	cmp    esi,DWORD PTR [ebp+0x13bcaa18]
  40ff3b:	add    al,0x31
  40ff3d:	cmp    ecx,DWORD PTR [ecx+0x22f2980]
  40ff43:	add    BYTE PTR [ecx+0x14],dh
  40ff46:	jo     0x40ffc2
  40ff48:	sbb    dl,BYTE PTR [eax]
  40ff4a:	jmp    0xf8d4b752
  40ff4f:	pop    es
  40ff50:	add    BYTE PTR [eax],al
  40ff52:	xor    DWORD PTR [edx+eiz*2],edx
  40ff55:	add    BYTE PTR [esi+0x10],0xe9
  40ff59:	add    ebx,edi
  40ff5b:	push   edx
  40ff5c:	out    0xb7,eax
  40ff5e:	cmp    BYTE PTR [edx+0x26ea01d0],bl
  40ff64:	test   eax,0xea39268b
  40ff69:	push   ebx
  40ff6a:	push   ss
  40ff6b:	adc    edx,DWORD PTR [eax+0x1f]
  40ff6e:	xor    eax,0x49b6e914
  40ff73:	cdq    
  40ff74:	adc    esi,DWORD PTR [di]
  40ff77:	adc    al,0xe9
  40ff79:	mov    dh,BYTE PTR [ecx+0x3103e50c]
  40ff7f:	aam    0x5f
  40ff81:	jp     0x40ffad
  40ff83:	adc    cl,ch
  40ff85:	add    ebp,DWORD PTR [eax+0x3107f893]
  40ff8b:	adc    al,0x72
  40ff8d:	add    BYTE PTR [esi+0x10],0xe9
  40ff91:	add    edi,DWORD PTR [ebx+0x5c58eb0c]
  40ff97:	push   ecx
  40ff98:	pop    ss
  40ff99:	sub    DWORD PTR [ebx+0x268be736],esi
  40ff9f:	lahf   
  40ffa0:	pop    edx
  40ffa1:	fdiv   DWORD PTR [ecx]
  40ffa3:	jnp    0x40ff71
  40ffa5:	pop    es
  40ffa6:	xor    DWORD PTR [esp+ebx*4],edx
  40ffa9:	sbb    ch,BYTE PTR [edx+0x3107f893]
  40ffaf:	adc    al,0x60
  40ffb1:	cmp    BYTE PTR [esi],0x10
  40ffb4:	jmp    0x7140ffbc
  40ffb9:	fwait
  40ffba:	aas    
  40ffbb:	pop    ds
  40ffbc:	sub    eax,0xb18ae914
  40ffc1:	add    eax,DWORD PTR [eax]
  40ffc3:	in     eax,dx
  40ffc4:	xor    dl,BYTE PTR [ebx+ecx*4]
  40ffc7:	push   0xe900101a
  40ffcc:	inc    eax
  40ffcd:	push   ebx
  40ffce:	add    BYTE PTR [ebp+0x3f],dl
  40ffd1:	call   0x61c1:0x277ceb0f
  40ffd8:	inc    ebp
  40ffd9:	cmp    DWORD PTR [ecx],eax
  40ffdb:	cdq    
  40ffdc:	int    0x13
  40ffde:	test   eax,0xfe24cedd
  40ffe3:	cmp    al,0x24
  40ffe5:	cdq    
  40ffe6:	sbb    cl,0xbe
  40ffe9:	and    al,0xfe
  40ffeb:	jo     0x40ff99
  40ffed:	cld    
  40ffee:	add    ebp,ecx
  40fff0:	xor    dl,ah
  40fff2:	mov    BYTE PTR [eax+0x49],dl
  40fff5:	adc    BYTE PTR [eax],al
  40fff7:	jmp    0xed5093a9
  40fffc:	xor    dl,BYTE PTR [ebx+ecx*4]
  40ffff:	jo     0x41002e
  410001:	adc    BYTE PTR [eax],al
  410003:	jmp    0xf9ff3ea
  410008:	pop    eax
  410009:	push   edx
  41000a:	add    ebp,ecx
  41000c:	pop    edi
  41000d:	mov    edi,0x148ecd8a
  410012:	push   esi
  410013:	sbb    ch,ch
  410015:	mov    ebp,0x9e2a4c82
  41001a:	add    al,0x84
  41001c:	add    BYTE PTR [eax],al
  41001e:	sub    dl,BYTE PTR [eax+eax*1]
  410021:	jmp    0xdd64a8e5
  410026:	mov    bh,0x1d
  410028:	sub    dh,BYTE PTR [eax+ebp*4]
  41002b:	mov    al,0x23
  41002d:	jmp    0x42c505d6
  410032:	loope  0x410037
  410034:	mov    esp,DWORD PTR [esi+esi*4]
  410037:	dec    ecx
  410038:	mov    WORD PTR [edx+0x35],?
  41003b:	adc    al,0x0
  41003d:	add    BYTE PTR [eax],cl
  41003f:	and    bl,BYTE PTR [eax]
  410041:	je     0x410059
  410043:	push   ecx
  410044:	inc    eax
  410045:	test   DWORD PTR [ecx+0x65],edx
  410048:	hlt    
  410049:	or     DWORD PTR [eax+0x17],0xffffff85
  41004d:	leave  
  41004e:	push   ebp
  41004f:	adc    BYTE PTR [ebx+0x1f2dac0],al
  410055:	sbb    DWORD PTR [eax+0x4b464716],0x7b
  41005c:	and    bl,BYTE PTR [ecx+ecx*8]
  41005f:	fs int3 
  410061:	pop    edi
  410062:	cs cmp eax,0x17ccc259
  410068:	mov    edx,DWORD PTR [esp+esi*1+0x14]
  41006c:	push   ebp
  41006d:	push   esi
  41006e:	inc    ebx
  41006f:	call   0x23c18739
  410074:	(bad)  
  410075:	call   FWORD PTR [eax+0x12000017]
  41007b:	adc    DWORD PTR [ecx+ecx*8+0x12ea39f],eax
  410082:	add    BYTE PTR [eax],al
  410084:	cwde   
  410085:	pop    ss
  410086:	push   edi
  410087:	mov    edi,DWORD PTR [ebx+eax*2+0x12]
  41008b:	or     DWORD PTR [edi],0xe
  41008e:	jbe    0x410095
  410090:	iret   
  410091:	push   cs
  410092:	add    BYTE PTR [eax],al
  410094:	pop    eax
  410095:	xchg   edx,eax
  410096:	shr    BYTE PTR [ebx],0x17
  410099:	xchg   DWORD PTR [eax],edi
  41009b:	or     BYTE PTR [ecx+edx*2-0x223abfb3],al
  4100a2:	jae    0x41009a
  4100a4:	fist   DWORD PTR [edx+ebx*1-0xe8a7fc]
  4100ab:	jne    0x41011a
  4100ad:	xchg   edx,eax
  4100ae:	test   BYTE PTR [eax],dl
  4100b0:	inc    esp
  4100b1:	pop    ss
  4100b2:	add    BYTE PTR [ecx+0x3ff96],cl
  4100b8:	xor    DWORD PTR ds:0x30b7c6c2,ebp
  4100be:	(bad)  
  4100bf:	call   DWORD PTR [esi]
  4100c1:	and    eax,0xa4310002
  4100c6:	or     BYTE PTR [edi],0x2d
  4100c9:	sub    eax,0x44b78b02
  4100ce:	(bad)  
  4100cf:	push   esi
  4100d1:	pop    esp
  4100d2:	jecxz  0x41005e
  4100d4:	mov    bh,0x1c
  4100d6:	(bad)  
  4100d7:	jmp    esi
  4100d9:	mov    dh,0xd
  4100db:	pop    edi
  4100dc:	test   eax,0x41853734
  4100e1:	xor    DWORD PTR [edx],eax
  4100e3:	add    BYTE PTR [edi+0x0],ch
  4100e6:	inc    esi
  4100e7:	pop    es
  4100e8:	add    BYTE PTR [eax],al
  4100ea:	xor    DWORD PTR [eax-0x52868cc8],esi
  4100f0:	dec    edx
  4100f1:	(bad)  
  4100f2:	xor    BYTE PTR [ebx+0x2d310417],ch
  4100f8:	test   DWORD PTR [eax+0x38],ebp
  4100fb:	add    BYTE PTR [ebx],bl
  4100fd:	mov    esi,DWORD PTR [edi-0x690001e4]
  410103:	mov    ds:0x2d351781,eax
  410108:	add    al,BYTE PTR [eax-0x48]
  41010b:	ficom  DWORD PTR [edi]
  41010d:	add    al,0x31
  41010f:	sub    eax,0x31218589
  410114:	add    al,BYTE PTR [eax]
  410116:	mov    edx,0x31041bba
  41011b:	sub    eax,0xdf330f8c
  410120:	cmp    ecx,eax
  410122:	test   eax,0x2d8e013c
  410127:	cmp    DWORD PTR [edx],eax
  410129:	add    BYTE PTR [ebx+eax*2+0x3921858b],bh
  410130:	add    al,BYTE PTR [eax]
  410132:	test   al,0x13
  410134:	outs   dx,DWORD PTR ds:[esi]
  410135:	sbb    al,0x35
  410137:	adc    al,0xe9
  410139:	ret    
  41013a:	mov    ecx,0x1efff472
  41013f:	and    bl,BYTE PTR [edi-0x7e]
  410142:	es sbb cl,ch
  410145:	add    edi,DWORD PTR [edx+0x6ffe09a]
  41014b:	and    ah,BYTE PTR [edx+0x14]
  41014e:	add    BYTE PTR [eax],al
  410150:	xor    eax,DWORD PTR [esi-0x12]
  410153:	inc    ebp
  410154:	scas   al,BYTE PTR es:[edi]
  410155:	add    al,0xe8
  410157:	mov    DWORD PTR [edx+0x18],ecx
  41015a:	jmp    0x623c5d62
  41015f:	sub    DWORD PTR [esi],0xa803e918
  410165:	call   0x8b28:0x21ceffe0
  41016c:	xchg   esp,eax
  41016d:	add    ch,ch
  41016f:	add    esi,DWORD PTR [ecx]
  410171:	mov    esp,DWORD PTR [esi+0x13]
  410174:	sub    eax,0xb48ce914
  410179:	cld    
  41017a:	in     al,0x3
  41017c:	xor    DWORD PTR [esi+0x226805e0],ecx
  410182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410183:	mov    WORD PTR [edi-0xb],?
  410186:	fwait
  410187:	mov    esi,DWORD PTR [esi]
  410189:	(bad)  
  41018a:	jno    0x4101d5
  41018c:	mov    ?,WORD PTR [ebx]
  41018e:	je     0x4101c8
  410190:	jg     0x41011f
  410192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410193:	test   BYTE PTR [esi+0x18],dl
  410196:	mov    ecx,0x2c2c7c8c
  41019b:	aaa    
  41019c:	and    DWORD PTR [bx+di+0x48],esp
  4101a0:	mov    bl,0x33
  4101a2:	jmp    0x4a78:0x5052abd2
  4101a9:	and    DWORD PTR ds:0x134f84,edi
  4101af:	sahf   
  4101b0:	lods   eax,DWORD PTR ds:[esi]
  4101b1:	dec    edi
  4101b2:	out    0x75,eax
  4101b4:	add    BYTE PTR [eax],al
  4101b6:	(bad)  
  4101b7:	and    esi,edi
  4101b9:	(bad)  
  4101ba:	or     al,al
  4101bc:	shl    ecx,0x32
  4101bf:	xchg   ebp,eax
  4101c0:	enter  0x3316,0x92
  4101c4:	sbb    esp,ebp
  4101c6:	xor    dl,BYTE PTR [ecx*4+0x18a73b90]
  4101cd:	jb     0x41017f
  4101cf:	adc    BYTE PTR [ecx+ebp*8],al
  4101d2:	xor    cl,BYTE PTR [ebx+0x20f6d185]
  4101d8:	(bad)  
  4101d9:	sub    DWORD PTR [esi+ebp*2+0x1432e51b],edi
  4101e0:	mov    DWORD PTR [edi+0x45],ebp
  4101e3:	sbb    BYTE PTR [eax],al
  4101e5:	jmp    0xed589895
  4101ea:	xor    dl,BYTE PTR [edx+ecx*4]
  4101ed:	fnstenv [eax]
  4101ef:	inc    esi
  4101f0:	std    
  4101f1:	stos   DWORD PTR es:[edi],eax
  4101f2:	lods   eax,DWORD PTR ds:[esi]
  4101f3:	adc    BYTE PTR [ecx],al
  4101f5:	pop    edi
  4101f6:	sbb    DWORD PTR [eax],ebx
  4101f8:	add    cl,ch
  4101fa:	loope  0x4101f7
  4101fc:	mov    ah,BYTE PTR [edi+0x3d]
  4101ff:	sbb    BYTE PTR [eax],al
  410201:	jmp    0xe55898b3
  410206:	xor    dl,BYTE PTR [eax+eax*2]
  410209:	jo     0x410222
  41020b:	std    
  41020c:	add    ebp,ecx
  41020e:	xor    cl,BYTE PTR [ebx+0x207ed985]
  410214:	(bad)  
  410215:	(bad)  
  410216:	test   DWORD PTR [eax],0xe904
  41021c:	xor    cl,BYTE PTR [esi+0x1f00eb0f]
  410222:	shl    DWORD PTR [ecx+0x45],0x13
  410226:	mov    gs,ebp
  410228:	push   esi
  410229:	and    dh,bh
  41022b:	add    BYTE PTR [ebp+0x68868aff],cl
  410231:	and    dh,bh
  410233:	call   ecx
  410235:	mov    eax,ds:0x14480416
  41023a:	inc    eax
  41023b:	mov    DWORD PTR [esi+0x180003fc],eax
  410241:	xchg   ecx,eax
  410242:	test   BYTE PTR [eax],dl
  410244:	or     al,0x14
  410246:	add    BYTE PTR [ebx+0x4008e],cl
  41024c:	sbb    BYTE PTR [esi-0x19d5fdf2],cl
  410252:	ror    BYTE PTR [eax+0x1c8e18d8],0xc
  410259:	adc    al,0x0
  41025b:	jne    0x41028e
  41025d:	mov    eax,DWORD PTR [eax+edx*1-0x76ffec34]
  410264:	dec    esi
  410265:	sti    
  410266:	add    eax,DWORD PTR [eax]
  410268:	enter  0x8753,0xae
  41026c:	aam    0x1f
  41026e:	(bad)  
  41026f:	inc    DWORD PTR [ecx-0x5f]
  410272:	push   cs
  410273:	add    al,0xc8
  410275:	adc    ecx,DWORD PTR [ebx-0x1e01f7a]
  41027b:	(bad)  
  41027c:	call   0xcf01b4
  410281:	add    BYTE PTR [edi+ebx*1+0x13dfffe],ah
  410288:	mov    eax,DWORD PTR [esi-0x1e068]
  41028e:	add    DWORD PTR [ecx+0x13980416],esp
  410294:	inc    eax
  410295:	mov    esi,esi
  410297:	push   es
  410298:	add    al,0x0
  41029a:	mov    BYTE PTR [eax+0x135c1084],dl
  4102a0:	add    BYTE PTR [ebx+0x3face],cl
  4102a6:	xor    DWORD PTR ds:0xbf301f52,ebp
  4102ac:	push   ss
  4102ad:	add    al,0x31
  4102af:	sub    eax,0xb7ba18af
  4102b4:	adc    al,BYTE PTR [ecx+esi*1]
  4102b7:	sub    eax,0x3919858b
  4102bc:	add    al,BYTE PTR [eax]
  4102be:	jno    0x410264
  4102c0:	sbb    ebp,DWORD PTR fs:0xb789022d
  4102c7:	sbb    al,0xfe
  4102c9:	call   DWORD PTR [esi]
  4102cb:	mov    dl,0x7c
  4102cd:	pop    ss
  4102ce:	xor    eax,0x51d0022d
  4102d3:	sub    al,0x84
  4102d5:	sbb    esi,DWORD PTR ds:0x1875022d
  4102db:	mov    dl,0x7c
  4102dd:	sysexit 
  4102df:	sub    eax,0x14af8902
  4102e4:	add    BYTE PTR [eax],al
  4102e6:	add    BYTE PTR [eax],al
  4102e8:	xor    ebp,ebp
  4102ea:	mov    ch,BYTE PTR [ebp+0x23935]
  4102f0:	mov    eax,0x310413ae
  4102f5:	sub    eax,0x3119b587
  4102fa:	add    al,BYTE PTR [eax]
  4102fc:	loope  0x410314
  4102fe:	(bad)  
  4102ff:	pop    esp
  410300:	jae    0x410326
  410302:	add    cl,BYTE PTR [ebx+0x55fe58ed]
  410308:	push   es
  410309:	mov    dl,0xb7
  41030b:	and    eax,DWORD PTR [ecx-0x4e]
  41030e:	xor    bh,BYTE PTR [ecx+esi*4]
  410311:	sub    al,0x2
  410313:	add    BYTE PTR [edx],al
  410315:	inc    ecx
  410316:	jg     0x410316
  410318:	xor    eax,0xaf3b0b1a
  41031d:	pop    eax
  41031e:	(bad)  
  41031f:	jmp    FWORD PTR [esi+0x13]
  410322:	(bad)  
  410324:	pop    edi
  410325:	cmp    eax,DWORD PTR [ecx]
  410327:	inc    esp
  410328:	mov    bl,0x33
  41032a:	out    dx,al
  41032b:	aam    0xb3
  41032d:	push   ebx
  41032e:	jecxz  0x410305
  410330:	jo     0x41033d
  410332:	jmp    0xe538b02f
  410337:	add    esi,DWORD PTR [ecx]
  410339:	test   al,0xf3
  41033b:	div    BYTE PTR [esi-0x5dfc16ed]
  410341:	pop    ss
  410342:	push   0x25
  410344:	xor    BYTE PTR [ecx],ch
  410346:	clc    
  410347:	neg    BYTE PTR [esi]
  410349:	sbb    ecx,ebp
  41034b:	add    eax,DWORD PTR [eax]
  41034d:	add    BYTE PTR [ebx+0xef69e13],ah
  410353:	mov    eax,ds:0x138303e8
  410358:	scas   al,BYTE PTR es:[edi]
  410359:	inc    edx
  41035a:	push   ss
  41035b:	or     eax,0x11b6809a
  410360:	cdq    
  410361:	sub    edx,DWORD PTR [edx+ebx*1]
  410364:	in     eax,0x34
  410366:	jg     0x4102f1
  410368:	scas   al,BYTE PTR es:[edi]
  410369:	mov    BYTE PTR [esi],al
  41036b:	sub    eax,0x1dd739f4
  410370:	pop    ebx
  410371:	mov    edi,0xd5220a26
  410376:	fs push edx
  410378:	lock add esp,DWORD PTR [esi+0x2c]
  41037c:	in     al,0x39
  41037e:	mov    bh,0x1d
  410380:	or     eax,0x4718ee81
  410385:	inc    edx
  410386:	cs adc al,0x3a
  410389:	mov    edx,edi
  41038b:	mul    eax
  41038d:	into   
  41038e:	cld    
  41038f:	mov    BYTE PTR [edi-0x13133380],dl
  410395:	add    esi,DWORD PTR [ecx]
  410397:	adc    al,0x16
  410399:	add    eax,0xe7fff9b5
  41039e:	xor    dl,BYTE PTR [ecx+eax*4]
  4103a1:	jb     0x410355
  4103a3:	sbb    eax,0xd4a1e9fe
  4103a8:	sbb    ch,0x7e
  4103ab:	add    eax,0x3558da04
  4103b0:	ss push edx
  4103b2:	add    BYTE PTR [eax],al
  4103b4:	add    eax,0x1a378a1e
  4103b9:	in     eax,dx
  4103ba:	cli    
  4103bb:	ds add eax,0xf841cd8a
  4103c1:	sbb    bh,dh
  4103c3:	cs mov eax,0xb80123d0
  4103c9:	xchg   BYTE PTR [edi],cl
  4103cb:	in     eax,0x32
  4103cd:	adc    al,0x8a
  4103cf:	and    dh,dh
  4103d1:	adc    eax,DWORD PTR [edx]
  4103d3:	and    BYTE PTR [eax],dh
  4103d5:	push   ebx
  4103d6:	pop    esi
  4103d7:	jno    0x410409
  4103d9:	sbb    eax,0x1cfed985
  4103de:	(bad)  
  4103df:	pusha  
  4103e0:	pushf  
  4103e1:	lock add ebp,ecx
  4103e4:	xor    bh,BYTE PTR [esi+0x156f425c]
  4103ea:	add    BYTE PTR [edx+0x72],ch
  4103ed:	push   ds
  4103ee:	add    BYTE PTR [edi-0x16ffe7bf],dl
  4103f4:	mov    cl,0xad
  4103f6:	or     BYTE PTR [esp+esi*1],bh
  4103f9:	mov    DWORD PTR [ebp+0x1436d9],eax
  4103ff:	pusha  
  410400:	stos   DWORD PTR es:[edi],eax
  410401:	add    al,0x4
  410403:	jmp    0x57c9d83a
  410408:	inc    ecx
  410409:	sbb    BYTE PTR [eax],al
  41040b:	jmp    0xed509b2d
  410410:	xor    dl,BYTE PTR [ebx+ecx*4]
  410413:	addr16 cmp eax,0x18
  410419:	add    BYTE PTR [eax-0x3efdf962],bl
  41041f:	loope  0x4103e0
  410421:	mov    BYTE PTR [eax+0x541cbe17],dl
  410427:	adc    BYTE PTR [eax],al
  410429:	jne    0x41045c
  41042b:	popf   
  41042c:	test   BYTE PTR [eax],dl
  41042e:	push   esp
  41042f:	adc    BYTE PTR [eax],al
  410431:	mov    esi,eax
  410433:	(bad)  
  410435:	add    BYTE PTR [eax+0x50],bl
  410438:	xchg   DWORD PTR [esi+0x144c],ebp
  41043e:	ror    DWORD PTR [ecx+0x1048040e],0x8b
  410445:	xchg   BYTE PTR [eax],al
  410447:	adc    al,0x0
  410449:	add    BYTE PTR [eax+0x30],ch
  41044c:	mov    ebx,edx
  41044e:	dec    ecx
  41044f:	cli    
  410450:	push   es
  410451:	or     DWORD PTR [edx+0x12],0x52
  410455:	mov    ebp,DWORD PTR [esi]
  410457:	clc    
  410458:	(bad)  
  410459:	cli    
  41045a:	das    
  41045b:	out    0x89,eax
  41045d:	xchg   al,bl
  41045f:	adc    eax,DWORD PTR [eax]
  410461:	add    BYTE PTR [eax-0x27fe47f8],dl
  410467:	pop    ss
  410468:	add    BYTE PTR [ecx],al
  41046a:	push   esi
  41046b:	pop    es
  41046c:	add    al,0x0
  41046e:	enter  0x9c98,0x24
  410472:	les    edx,FWORD PTR [edi]
  410474:	add    BYTE PTR [ecx-0x1681d],al
  41047a:	fsub   DWORD PTR [edx+0x16]
  41047d:	add    DWORD PTR [eax],0x0
  410480:	ins    BYTE PTR es:[edi],dx
  410481:	sub    al,0x16
  410483:	add    dl,BYTE PTR [ebx+0x5b]
  410486:	and    bl,BYTE PTR [eax]
  410488:	dec    ecx
  410489:	fwait
  41048a:	int3   
  41048b:	call   0x3eedb7
  410490:	pop    edi
  410491:	inc    esi
  410492:	pop    ebx
  410493:	pop    ebx
  410494:	xor    DWORD PTR [edi-0x6],ebp
  410497:	push   DWORD PTR [ecx+0x31050286]
  41049d:	sub    eax,0xf14803b4
  4104a2:	out    0x17,eax
  4104a4:	mov    al,0xa6
  4104a6:	add    bh,BYTE PTR [ebp+0x31]
  4104a9:	sub    eax,0x691803b4
  4104ae:	out    0x17,al
  4104b0:	stos   BYTE PTR es:[edi],al
  4104b1:	imul   esp,esi,0x40b60017
  4104b7:	out    0xdd,eax
  4104b9:	(bad)  
  4104ba:	xor    esi,edi
  4104bc:	out    0x72,al
  4104be:	iret   
  4104bf:	pop    edx
  4104c0:	jae    0x4104e7
  4104c2:	add    al,bh
  4104c4:	scas   eax,DWORD PTR es:[edi]
  4104c5:	adc    eax,0x2c310008
  4104ca:	add    al,BYTE PTR [eax]
  4104cc:	xor    DWORD PTR [ebp+ebp*1+0x22d317f],ebp
  4104d3:	jae    0x41053d
  4104d5:	scas   al,BYTE PTR es:[edi]
  4104d6:	scas   al,BYTE PTR es:[edi]
  4104d7:	and    ebp,DWORD PTR [ecx]
  4104d9:	xor    DWORD PTR [ebp-0x194cb5bf],esi
  4104df:	add    esi,DWORD PTR [ecx]
  4104e1:	sub    eax,0x39b6
  4104e6:	or     DWORD PTR [edi],esi
  4104e8:	sub    al,0xfe
  4104ea:	out    dx,al
  4104eb:	mov    ch,0x40
  4104ed:	out    0x32,eax
  4104ef:	aaa    
  4104f0:	xor    dh,bh
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	push   0x1b
  4104f5:	int3   
  4104f6:	fadd   DWORD PTR [ecx+0x30]
  4104f9:	mov    DWORD PTR [ebp+0x11],esi
  4104fc:	or     al,0x8b
  4104fe:	mov    bh,0x3c
  410500:	push   es
  410501:	add    BYTE PTR [ecx],dh
  410503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410504:	push   esp
  410505:	and    esi,DWORD PTR [eax]
  410507:	das    
  410508:	push   esp
  410509:	add    DWORD PTR [ebx+0x9],esi
  41050c:	jl     0x41050e
  41050e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050f:	adc    ebp,DWORD PTR [edi+0x14]
  410512:	xor    eax,0xb47ae914
  410517:	out    dx,eax
  410518:	in     al,dx
  410519:	add    esi,DWORD PTR [ecx]
  41051b:	mov    edx,0xb70cd2b
  410520:	jmp    0xe75b74a9
  410525:	jno    0x410541
  410527:	adc    cl,ch
  410529:	add    edi,DWORD PTR [edx+ebp*4-0x70b64921]
  410530:	outs   dx,BYTE PTR ds:[esi]
  410531:	adc    al,0x35
  410533:	adc    al,0xe9
  410535:	jp     0x4104e3
  410537:	sti    
  410538:	in     al,dx
  410539:	add    esi,DWORD PTR [ecx]
  41053b:	aam    0x5f
  41053d:	bound  ebp,QWORD PTR [edx]
  41053f:	adc    cl,ch
  410541:	add    ebp,DWORD PTR [eax+0x3107d891]
  410547:	adc    al,0x62
  410549:	mov    al,BYTE PTR [eax]
  41054b:	add    BYTE PTR [esi+0x10],al
  41054e:	jmp    0xeb45c056
  410553:	push   ebp
  410554:	sbb    al,0x57
  410556:	jo     0x41056c
  410558:	xor    BYTE PTR [edx-0xc],bl
  41055b:	pop    es
  41055c:	xor    DWORD PTR [esp+edx*4],edx
  41055f:	or     bh,BYTE PTR [edx+0x3107d892]
  410565:	adc    al,0x70
  410567:	mov    bl,BYTE PTR [esi]
  410569:	adc    cl,ch
  41056b:	add    esi,DWORD PTR [ecx-0x75]
  41056e:	adc    BYTE PTR ds:0xb47ae914,ch
  410575:	add    al,0xe5
  410577:	add    esi,DWORD PTR [ecx]
  410579:	lea    ebp,[esi+0xb]
  41057c:	xor    eax,0x2653e914
  410581:	frstor [esi-0x19]
  410584:	xor    dl,BYTE PTR [ecx+ebp*8]
  410587:	mov    bh,0x40
  410589:	(bad)  
  41058a:	jmp    FWORD PTR [ecx+0x6a0730f3]
  410590:	repnz adc eax,0x1cb89150
  410596:	(bad)  
  410597:	sahf   
  410598:	adc    eax,0x32ed0f87
  41059d:	adc    al,0x88
  41059f:	lock sbb dl,BYTE PTR [eax+eax*1]
  4105a3:	jmp    0xd9c718da
  4105a8:	cs adc al,0x0
  4105ab:	pusha  
  4105ac:	shl    ch,0x3
  4105af:	jmp    0x937305b4
  4105b4:	cli    
  4105b5:	imul   esi,DWORD PTR [edx],0x2ada0014
  4105bb:	xchg   ebp,eax
  4105bc:	imul   ecx,DWORD PTR ds:0xb58b163d,0x4e
  4105c3:	add    DWORD PTR [edx+0x72],edx
  4105c6:	lock xor BYTE PTR [ebx+0x40],ah
  4105ca:	add    DWORD PTR [edx],ebx
  4105cc:	pop    esi
  4105cd:	xchg   edi,eax
  4105ce:	(bad)  
  4105cf:	mov    ebp,0x9332e1c1
  4105d4:	cli    
  4105d5:	jmp    0x9b411a11
  4105da:	cs jmp 0x410620
  4105dd:	int    0x3a
  4105df:	xchg   ebx,eax
  4105e0:	cli    
  4105e1:	jmp    0x7c3f1ebd
  4105e6:	fwait
  4105e7:	jmp    0x41062c
  4105e9:	lds    ebp,FWORD PTR [edx]
  4105eb:	lea    edx,[ebx-0x33]
  4105ee:	cmp    al,dh
  4105f0:	mov    bl,BYTE PTR [edi]
  4105f2:	dec    edx
  4105f3:	fdiv   st(0),st
  4105f5:	out    0xe,al
  4105f7:	mov    edx,0x52ea3c5d
  4105fc:	pop    es
  4105fd:	jmp    0xe55c6037
  410602:	xor    dl,BYTE PTR [esi*2-0x7b622f00]
  410609:	adc    ah,cl
  41060b:	adc    al,0x0
  41060d:	mov    DWORD PTR [esi],ebx
  41060f:	or     BYTE PTR [eax+eax*1],al
  410612:	cwde   
  410613:	push   esp
  410614:	xchg   DWORD PTR [esi+0xc340000],ebp
  41061a:	add    BYTE PTR [eax],al
  41061c:	and    DWORD PTR [edx+0x1498040e],edx
  410622:	mov    eax,DWORD PTR [esi+0x1080]
  410628:	cwde   
  410629:	das    
  41062a:	(bad)  
  41062b:	mov    ebp,0x1054
  410630:	ins    DWORD PTR es:[edi],dx
  410631:	pop    es
  410632:	mov    eax,DWORD PTR [esi+0x1088]
  410638:	loope  0x4105cb
  41063a:	push   ss
  41063b:	add    al,0x48
  41063d:	adc    al,0x40
  41063f:	mov    DWORD PTR [esi+0x58000403],esi
  410645:	xchg   edi,eax
  410646:	test   BYTE PTR [eax],dl
  410648:	dec    esp
  410649:	adc    al,0x0
  41064b:	mov    ecx,esi
  41064d:	pop    es
  41064e:	add    al,0x0
  410650:	sbb    ah,al
  410652:	push   ds
  410653:	mov    edi,DWORD PTR [edi+ebp*1-0x295cadea]
  41065a:	out    0xd4,al
  41065c:	push   eax
  41065d:	out    0xfd,eax
  41065f:	pop    edi
  410660:	mov    BYTE PTR [ecx+ebx*2-0x3e],0x10
  410665:	adc    al,0x8b
  410667:	inc    esp
  410668:	in     al,dx
  410669:	jge    0xffbd0eff
  41066f:	jmp    DWORD PTR [ebx-0x27fbfd80]
  410675:	adc    esi,DWORD PTR [esi+0x19]
  410678:	arpl   WORD PTR [eax+0x40a],bx
  41067e:	enter  0x3b13,0xc1
  410682:	xor    DWORD PTR [edi+0x6bf02b08],esi
  410688:	push   es
  410689:	add    BYTE PTR [edx],cl
  41068b:	ins    BYTE PTR es:[edi],dx
  41068c:	pop    es
  41068d:	add    BYTE PTR [ecx+0x2c],cl
  410690:	add    al,dl
  410692:	xor    eax,0x73bff12d
  410697:	xor    DWORD PTR [edx],eax
  410699:	or     DWORD PTR [ebp-0x55ab2ee3],0x9
  4106a0:	call   0x497aedc4
  4106a5:	mov    al,BYTE PTR [eax+0x555b7cde]
  4106ab:	cmp    eax,0x354d5b7b
  4106b0:	jmp    0x41065f
  4106b2:	cmp    DWORD PTR [ecx],ebp
  4106b4:	add    al,BYTE PTR [eax]
  4106b6:	ss stos BYTE PTR es:[edi],al
  4106b8:	popa   
  4106b9:	call   FWORD PTR [esi+0x2d]
  4106bc:	sbb    DWORD PTR [edx],ecx
  4106be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106bf:	xchg   ecx,eax
  4106c0:	out    0xff,al
  4106c2:	dec    esi
  4106c3:	sub    eax,0x10cd8d02
  4106c8:	add    al,0x8b
  4106ca:	mov    bh,0x29
  4106cc:	push   es
  4106cd:	add    BYTE PTR [ecx],dh
  4106cf:	test   al,0x7a
  4106d1:	call   DWORD PTR [esi-0x6c4fdd4]
  4106d7:	pop    esi
  4106d8:	adc    eax,0x620af8b
  4106dd:	add    BYTE PTR [ecx],dh
  4106df:	xor    al,BYTE PTR [ebx+0x75]
  4106e2:	add    BYTE PTR [eax],al
  4106e4:	xor    eax,0x3aea4352
  4106e9:	push   edx
  4106ea:	inc    ebx
  4106eb:	add    al,0x31
  4106ed:	test   DWORD PTR [ebx],eax
  4106ef:	add    BYTE PTR [edx],cl
  4106f1:	sub    esi,ecx
  4106f3:	mov    edi,0x3faaeba
  4106f8:	xor    DWORD PTR ds:0x1440b5fd,ebp
  4106fe:	div    BYTE PTR [ebp+0x69]
  410701:	adc    eax,0xfa4d872
  410706:	bound  eax,QWORD PTR [eax]
  410708:	mov    ebx,0x2a7b0e8a
  41070d:	(bad)  
  41070e:	jno    0x410696
  410710:	cs adc cl,ch
  410713:	add    edi,DWORD PTR [esi]
  410715:	pop    esi
  410716:	fdivr  st,st(4)
  410718:	(bad)  
  41071a:	out    0x78,eax
  41071c:	jmp    0xe50f:0xbc78ec7d
  410723:	add    esi,DWORD PTR [ecx]
  410725:	(bad)  
  410726:	cld    
  410727:	or     cl,0x14
  41072a:	jmp    0x77563832
  41072f:	or     BYTE PTR ds:0xbf02e914,ch
  410735:	or     ebp,ebp
  410737:	add    esi,DWORD PTR [ecx]
  410739:	mov    esp,DWORD PTR [esi+0x8]
  41073c:	xor    eax,0x6e78e914
  410741:	jmp    0x82e9:0x1435006e
  410748:	add    BYTE PTR [eax],al
  41074a:	dec    ecx
  41074b:	adc    eax,ecx
  41074d:	add    dh,BYTE PTR [ecx]
  41074f:	sahf   
  410750:	in     eax,dx
  410751:	mov    ebx,0x7ec8da9
  410756:	xor    DWORD PTR [eax+esi*8],edx
  410759:	pop    ebp
  41075a:	cs adc cl,ch
  41075d:	add    ebp,DWORD PTR [esi]
  41075f:	xchg   edx,eax
  410760:	xchg   edx,eax
  410761:	sub    al,0x17
  410763:	push   ss
  410764:	jno    0x41072e
  410766:	push   edx
  410767:	in     al,0x52
  410769:	add    al,0x8e
  41076b:	adc    ebp,ecx
  41076d:	call   0x7b2fa662
  410772:	(bad)  
  410773:	lock mov eax,0xff913918
  410779:	lock xor eax,DWORD PTR ds:0x14322386
  410780:	add    dh,dh
  410782:	pop    esp
  410783:	sar    bh,1
  410785:	in     eax,dx
  410786:	inc    esp
  410787:	enter  0x6200,0xee
  41078b:	pop    DWORD PTR [ebx]
  41078d:	(bad)  
  41078e:	into   
  41078f:	lea    edi,[edx]
  410791:	ret    0x91b5
  410794:	mov    dl,0xe8
  410796:	xor    dl,BYTE PTR [ebx+ecx*4]
  410799:	addr16 xchg edx,eax
  41079b:	adc    DWORD PTR [eax],eax
  41079d:	jmp    0xae5018c1
  4107a2:	outs   dx,BYTE PTR ds:[esi]
  4107a3:	icebp  
  4107a4:	sbb    ebp,ecx
  4107a6:	mov    dl,BYTE PTR ds:0xa2efd2fe
  4107ac:	cmp    DWORD PTR [edx+0x0],esp
  4107af:	add    BYTE PTR [ebp-0x26],cl
  4107b2:	cli    
  4107b3:	std    
  4107b4:	jle    0x41073e
  4107b6:	xchg   cl,ch
  4107b8:	retf   0x14
  4107bb:	mov    dl,0xac
  4107bd:	adc    DWORD PTR [ecx+ebp*8],eax
  4107c0:	xor    bl,BYTE PTR [esi+0x9ac7217]
  4107c6:	add    al,0xe9
  4107c8:	xor    bl,cl
  4107ca:	neg    edi
  4107cc:	cs jmp 0xea7f4ac9
  4107d2:	imul   DWORD PTR [eax-0x13]
  4107d5:	adc    al,0x66
  4107d7:	call   0xfa42310e
  4107dc:	push   ebp
  4107dd:	mov    al,BYTE PTR ds:0x8c5d0e62
  4107e3:	in     eax,dx
  4107e4:	adc    eax,0x4a9ac4da
  4107e9:	fcom   QWORD PTR [ebx-0x33]
  4107ec:	out    0x9e,al
  4107ee:	add    esp,DWORD PTR [eax-0x1a]
  4107f1:	lock sub eax,DWORD PTR [eax]
  4107f4:	repz jmp 0x410804
  4107f7:	test   dl,cl
  4107f9:	adc    DWORD PTR [eax],eax
  4107fb:	add    BYTE PTR [ebp-0x74],cl
  4107fe:	(bad)  
  4107ff:	dec    eax
  410801:	adc    BYTE PTR [ebx-0x7827bc33],cl
  410807:	dec    esp
  410808:	xor    al,0x4
  41080a:	cmp    ecx,DWORD PTR [esp+esi*1+0x3c]
  41080e:	or     eax,0xf2287
  410813:	add    BYTE PTR [eax],al
  410815:	add    BYTE PTR [ebx+0x5c],al
  410818:	and    dl,BYTE PTR [eax]
  41081a:	and    al,BYTE PTR [ecx+eax*1]
  41081d:	cmp    al,BYTE PTR [ebx+ebx*1-0x2]
  410821:	mov    bh,BYTE PTR [esp+esi*1]
  410824:	adc    bh,BYTE PTR [ebx+0x108a]
  41082a:	and    al,0x1c
  41082c:	cmp    DWORD PTR [esi-0x1eb8c],ecx
  410832:	pop    edi
  410833:	xchg   ebx,eax
  410834:	enter  0x8800,0x10
  410838:	mov    edx,DWORD PTR [esp+esi*2+0x20]
  41083c:	cmp    edx,ebx
  41083e:	imul   ebp,DWORD PTR [edi],0xffffff8b
  410841:	dec    ebp
  410842:	dec    edx
  410843:	xchg   ebp,eax
  410844:	out    0x2b,al
  410846:	jl     0x41087c
  410848:	mov    dl,BYTE PTR es:[ebx+ebx*1+0x635939fe]
  410850:	add    al,0x43
  410852:	mov    DWORD PTR ds:0x94fa72d8,esp
  410858:	dec    edx
  410859:	and    al,0x4
  41085b:	xchg   ebx,eax
  41085c:	imul   esp,DWORD PTR [eax+esi*1],0x940fd803
  410863:	cmp    ebp,edi
  410865:	dec    DWORD PTR [eax]
  410867:	add    ebx,DWORD PTR [edx+0x24]
  41086a:	or     dh,al
  41086c:	inc    esi
  41086d:	push   ebx
  41086e:	xor    esp,ecx
  410870:	jle    0x41083f
  410872:	or     DWORD PTR [eax+0x2e],esi
  410875:	(bad)  
  410876:	test   BYTE PTR [esi+0x23b8],0x41
  41087d:	xchg   al,dl
  41087f:	and    ecx,DWORD PTR [ecx-0x54]
  410882:	ror    DWORD PTR [edx-0x18e38911],cl
  410888:	mov    dh,0xf7
  41088a:	sub    bh,dh
  41088c:	sbb    ah,ch
  41088e:	jle    0x4108db
  410890:	or     eax,0x79ed0711
  410895:	xor    bl,BYTE PTR [eax]
  410897:	ret    
  410898:	rcr    BYTE PTR [bx+si],cl
  41089b:	mov    bl,BYTE PTR ds:0xabc0dc19
  4108a1:	(bad)  
  4108a2:	jle    0x410865
  4108a4:	jo     0x41087b
  4108a6:	or     al,BYTE PTR [ebx]
  4108a8:	jae    0x4108a8
  4108aa:	mov    ebp,0x49f62123
  4108af:	jne    0x4108e0
  4108b1:	je     0x410868
  4108b3:	and    ebx,DWORD PTR [ecx]
  4108b5:	xchg   esi,eax
  4108b6:	mov    ebx,0xfde1a73a
  4108bb:	jmp    FWORD PTR [esi+0x8]
  4108be:	rcl    BYTE PTR [edx+0x0],0x76
  4108c2:	aaa    
  4108c3:	out    0xd2,eax
  4108c5:	xchg   BYTE PTR [edx],ch
  4108c7:	(bad)  
  4108c8:	stos   BYTE PTR es:[edi],al
  4108c9:	rcr    ebp,1
  4108cb:	bt     DWORD PTR [ebp+0x7e],0x43
  4108d0:	or     eax,0xaa4fd405
  4108d5:	xor    ebx,DWORD PTR [ecx]
  4108d7:	dec    edi
  4108d8:	cmp    ebx,DWORD PTR [edx+0x2a]
  4108db:	mov    bh,cl
  4108dd:	and    eax,0x8a37
  4108e2:	xchg   ebp,eax
  4108e3:	and    esp,ebx
  4108e5:	mov    bh,0xca
  4108e7:	xchg   esi,eax
  4108e8:	pop    ebx
  4108e9:	sub    DWORD PTR [esi],ebx
  4108eb:	adc    al,0x10
  4108ed:	jle    0x4108e7
  4108ef:	aam    0x10
  4108f1:	or     dh,BYTE PTR [edx]
  4108f3:	fsubp  st(2),st
  4108f5:	cmp    esp,DWORD PTR ds:[eax-0x3d]
  4108f9:	adc    eax,DWORD PTR [ebx+0x12cf7220]
  4108ff:	sub    BYTE PTR [eax-0x31],dh
  410902:	adc    ch,BYTE PTR [eax+eiz*2]
  410905:	(bad)  
  410906:	adc    ah,BYTE PTR [esp+ebx*2]
  410909:	adc    dh,0x7a
  41090c:	call   0xe3db1314
  410911:	inc    esi
  410913:	adc    bl,BYTE PTR [esi+0xc]
  410916:	stos   BYTE PTR es:[edi],al
  410917:	cdq    
  410918:	(bad)  
  41091a:	mov    dh,0x12
  41091c:	add    ebp,DWORD PTR [esp]
  41091f:	sbb    BYTE PTR [edx],dl
  410921:	sub    al,0x9b
  410923:	pop    ds
  410924:	add    ch,BYTE PTR [ecx+esi*4]
  410927:	(bad)  
  410929:	fwait
  41092a:	xor    DWORD PTR [edx+edx*4],edx
  41092d:	push   es
  41092e:	inc    edx
  41092f:	adc    esi,DWORD PTR [ebx-0x6]
  410932:	mov    ebx,0xb47d504f
  410937:	xor    esp,ebx
  410939:	add    esi,DWORD PTR [ecx]
  41093b:	pop    ss
  41093c:	scas   al,BYTE PTR es:[edi]
  41093d:	test   edx,ebx
  41093f:	aaa    
  410940:	fild   DWORD PTR [edx]
  410942:	frstor ds:0x296c
  410948:	das    
  410949:	cdq    
  41094a:	sub    eax,0x5312572a
  41094f:	cld    
  410950:	mov    ecx,0xb80c035f
  410955:	outs   dx,DWORD PTR ds:[esi]
  410956:	or     edx,DWORD PTR [edx+ebp*4]
  410959:	push   edi
  41095a:	add    esp,eax
  41095c:	stos   DWORD PTR es:[edi],eax
  41095d:	or     edx,DWORD PTR [si]
  410960:	mov    edx,0x860c0360
  410965:	jb     0x410967
  410967:	xchg   esp,eax
  410968:	fwait
  410969:	popa   
  41096a:	add    al,0x60
  41096c:	adc    eax,0x252d816f
  410971:	(bad)  
  410972:	adc    cl,ch
  410974:	lods   eax,DWORD PTR ds:[esi]
  410975:	std    
  410976:	cmp    BYTE PTR [edx-0x37],ch
  410979:	xor    eax,0x9ee0e944
  41097e:	out    dx,eax
  41097f:	jl     0x41096c
  410981:	inc    esi
  410982:	rcr    BYTE PTR [edi+0x2b38d5ad],0x2d
  410989:	adc    al,0x89
  41098b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41098c:	not    BYTE PTR [ecx-0x7d]
  41098f:	test   eax,0xb1811b9f
  410994:	sbb    DWORD PTR [edi-0x7f],ebp
  410997:	lods   eax,DWORD PTR ds:[esi]
  410998:	retf   0x18d3
  41099b:	jmp    0x2d6566d5
  4109a0:	fdiv   QWORD PTR cs:[edi+ecx*8+0x25]
  4109a5:	gs and al,0x25
  4109a8:	push   ds
  4109a9:	jecxz  0x410a1f
  4109ab:	mov    DWORD PTR [eax],0x14971b00
  4109b1:	in     eax,dx
  4109b2:	xor    dl,BYTE PTR [eax+ecx*2]
  4109b5:	jo     0x410967
  4109b7:	xor    DWORD PTR [ecx+ebp*8],eax
  4109ba:	xor    bl,BYTE PTR [ebx+0x1176f98e]
  4109c0:	inc    BYTE PTR [ecx+0x48]
  4109c3:	push   cs
  4109c4:	out    dx,eax
  4109c5:	push   edx
  4109c6:	pop    ebp
  4109c7:	fcom   QWORD PTR [ebp-0x1a]
  4109ca:	loopne 0x410997
  4109cc:	add    cl,bl
  4109ce:	jae    0x4109e1
  4109d0:	shr    DWORD PTR [ecx],1
  4109d2:	inc    ebp
  4109d3:	fimul  DWORD PTR ds:0x1013db97
  4109d9:	test   al,0x32
  4109db:	jecxz  0x41099d
  4109dd:	sbb    dh,al
  4109df:	and    DWORD PTR [esi+0x1016b100],esi
  4109e5:	inc    ecx
  4109e6:	sbb    BYTE PTR [esi-0x43],ah
  4109e9:	xor    ecx,DWORD PTR [edi+0xc]
  4109ec:	mov    ah,0xb9
  4109ee:	or     esp,DWORD PTR ds:0x5549003f
  4109f4:	add    cl,0xc
  4109f7:	or     bh,al
  4109f9:	and    DWORD PTR [ecx],0x8ffff15
  4109ff:	(bad)  
  410a00:	enter  0x1885,0xc
  410a04:	test   DWORD PTR [ebx+0x530014e1],edi
  410a0a:	push   ecx
  410a0b:	and    ecx,DWORD PTR [ebx-0x406a33b2]
  410a11:	sbb    BYTE PTR [eax],al
  410a13:	add    BYTE PTR [eax-0x2740ffee],bh
  410a19:	pop    ss
  410a1a:	add    BYTE PTR [eax],al
  410a1c:	push   ebp
  410a1d:	loopne 0x410a1f
  410a1f:	push   ebp
  410a20:	push   ecx
  410a21:	daa    
  410a22:	xor    eax,eax
  410a24:	popf   
  410a25:	adc    al,0x0
  410a27:	add    BYTE PTR [eax+0x4cc7288d],bl
  410a2d:	adc    eax,DWORD PTR [eax]
  410a2f:	add    BYTE PTR [eax-0x277cffec],cl
  410a35:	adc    edi,DWORD PTR [ebx]
  410a37:	add    BYTE PTR [esp+edx*1-0x694b8e00],cl
  410a3e:	mov    edi,0x148c00
  410a43:	sbb    DWORD PTR [ecx+0x5dfb2913],0x5e
  410a4a:	mov    cl,BYTE PTR [esi-0x1ef84]
  410a50:	shl    DWORD PTR [ecx],cl
  410a52:	or     eax,0x24838ed7
  410a58:	dec    esp
  410a59:	adc    al,0x0
  410a5b:	mov    DWORD PTR [ecx],esi
  410a5d:	jns    0x410a5b
  410a5f:	add    esi,DWORD PTR [ecx]
  410a61:	sti    
  410a62:	jl     0x410a01
  410a64:	xor    eax,0xb8000201
  410a69:	(bad)  
  410a6a:	clc    
  410a6b:	add    esi,DWORD PTR [ecx]
  410a6d:	std    
  410a6e:	jl     0x410aa9
  410a70:	stos   BYTE PTR es:[edi],al
  410a71:	outs   dx,DWORD PTR ds:[esi]
  410a72:	adc    BYTE PTR [ecx+esi*1],al
  410a75:	std    
  410a76:	jp     0x410a0d
  410a78:	add    BYTE PTR [eax],al
  410a7a:	and    ecx,edi
  410a7c:	add    DWORD PTR [eax],eax
  410a7e:	test   al,0x67
  410a80:	fadd   QWORD PTR [ebx]
  410a82:	xor    ebp,edi
  410a84:	ja     0x410a8e
  410a86:	mov    eax,0xba1bddc1
  410a8b:	mov    ecx,0xf3a953dd
  410a90:	add    al,0x9e
  410a92:	cmp    eax,0x300001f9
  410a97:	xchg   edi,eax
  410a98:	adc    DWORD PTR [ecx+esi*1],eax
  410a9b:	std    
  410a9c:	mov    ecx,0x14213d88
  410aa1:	mov    DWORD PTR ds:0xcf890c19,esi
  410aa7:	stc    
  410aa8:	std    
  410aa9:	jmp    DWORD PTR [esi-0x6dc3a7c]
  410aaf:	add    DWORD PTR [ebx+0xe],eax
  410ab2:	scas   eax,DWORD PTR es:[edi]
  410ab3:	retf   0xfffe
  410ab6:	mov    cs,WORD PTR [eax-0x2790076]
  410abc:	add    DWORD PTR [ebx-0x7b3a1f0b],ecx
  410ac2:	jno    0x410aed
  410ac4:	jmp    0xb841:0x9e0fd8a
  410acb:	inc    ecx
  410acc:	loopne 0x410ae5
  410ace:	mov    ch,0xb4
  410ad0:	mov    al,0x2c
  410ad2:	stos   BYTE PTR es:[edi],al
  410ad3:	sub    eax,esp
  410ad5:	pop    edi
  410ad6:	mov    edx,0x2d137514
  410adb:	adc    al,0xe7
  410add:	fiadd  DWORD PTR [eax]
  410adf:	add    dl,ch
  410ae1:	aaa    
  410ae2:	mov    bh,0xd1
  410ae4:	stos   DWORD PTR es:[edi],eax
  410ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae6:	repz jmp FWORD PTR [esi]
  410ae9:	(bad)  
  410aeb:	rcl    BYTE PTR [edx+0x64],1
  410aee:	cwde   
  410aef:	jp     0x410b5b
  410af1:	cmp    BYTE PTR [ebx+0x180f81d1],dl
  410af7:	xor    dl,0x23
  410afa:	ins    BYTE PTR es:[edi],dx
  410afb:	inc    ebx
  410afc:	aaa    
  410afd:	cwde   
  410afe:	xchg   esp,eax
  410aff:	(bad)  
  410b00:	dec    BYTE PTR [esi]
  410b02:	rol    edi,cl
  410b04:	push   edx
  410b05:	xor    BYTE PTR [ecx+edx*1-0x40348046],dl
  410b0c:	mov    ebx,0xa9c3c367
  410b11:	jg     0x410ade
  410b13:	xlat   BYTE PTR ds:[ebx]
  410b14:	test   eax,0xdbdbc367
  410b19:	cs jb  0x410adc
  410b1c:	adc    ch,BYTE PTR [eax+0x72]
  410b1f:	jbe    0x410b43
  410b21:	sbb    bh,ah
  410b23:	add    ecx,DWORD PTR [edx]
  410b25:	shl    DWORD PTR [edi],cl
  410b27:	rol    DWORD PTR [ecx],1
  410b29:	mov    eax,ds:0x6262e01b
  410b2e:	jb     0x410b66
  410b30:	xchg   esi,eax
  410b31:	xchg   edx,eax
  410b32:	mov    dl,0x25
  410b34:	xchg   edi,eax
  410b35:	call   0x2a4:0x935ae03b
  410b3c:	mov    al,ss:0xe7eff45
  410b42:	arpl   WORD PTR [esi+0x0],di
  410b45:	add    BYTE PTR [edx+0x18],dl
  410b48:	out    0x3,eax
  410b4a:	jbe    0x410ba3
  410b4c:	retf   
  410b4d:	rdtsc  
  410b4f:	adc    al,0xe7
  410b51:	add    ebx,DWORD PTR [eax]
  410b53:	pop    eax
  410b54:	add    ch,cl
  410b56:	jp     0x410adf
  410b58:	bound  ebp,QWORD PTR [edx+0x14]
  410b5b:	adc    al,0xd
  410b5d:	outs   dx,DWORD PTR ds:[esi]
  410b5e:	arpl   WORD PTR [ecx],dx
  410b60:	add    cl,ch
  410b62:	dec    ebx
  410b63:	push   edx
  410b64:	and    al,0x11
  410b66:	cmp    al,0x92
  410b68:	dec    eax
  410b69:	jmp    0x1e06:0xad891432
  410b70:	push   ebp
  410b71:	adc    dh,BYTE PTR [edx+eiz*2+0x50]
  410b75:	bound  ebx,QWORD PTR [edi-0xb]
  410b78:	loop   0x410baf
  410b7a:	push   esp
  410b7b:	push   cs
  410b7c:	mov    dh,BYTE PTR [ebp-0x47aaba1a]
  410b82:	jns    0x410b63
  410b84:	mov    DWORD PTR [ecx],esi
  410b86:	adc    eax,0x140ef5c1
  410b8b:	dec    edx
  410b8c:	shl    esi,0x5f
  410b8f:	xor    BYTE PTR [ecx],al
  410b91:	jmp    0xcd85a4c8
  410b96:	retf   0x50
  410b99:	in     al,0x32
  410b9b:	adc    al,0x7c
  410b9d:	lock mov cl,0xe
  410ba0:	add    ebp,esi
  410ba2:	ds sbb al,0x1
  410ba5:	jmp    0x4c415adc
  410baa:	add    BYTE PTR [eax],al
  410bac:	xor    eax,0xb1f07c14
  410bb1:	push   cs
  410bb2:	add    ch,dh
  410bb4:	push   ds
  410bb5:	or     al,0x3
  410bb7:	jmp    0x59da4ee
  410bbc:	jge    0x410b58
  410bbe:	inc    esp
  410bbf:	int    0x76
  410bc1:	call   0xc2fe:0xd7ef596
  410bc8:	icebp  
  410bc9:	fwait
  410bca:	inc    esp
  410bcb:	lds    edx,FWORD PTR [edx+0x55]
  410bce:	push   eax
  410bcf:	add    ch,bl
  410bd1:	retf   
  410bd2:	add    BYTE PTR [ecx+0xa],dl
  410bd5:	loop   0x410b63
  410bd7:	inc    esp
  410bd8:	lds    ecx,FWORD PTR fs:[ebp-0x75]
  410bdc:	scas   al,BYTE PTR es:[edi]
  410bdd:	sub    ecx,ebx
  410bdf:	cli    
  410be0:	iret   
  410be1:	aaa    
  410be2:	mov    cl,BYTE PTR [esp+esi*1-0x10]
  410be6:	cmp    BYTE PTR [esp-0x28],cl
  410bea:	mov    WORD PTR [ebx+0x19],es
  410bed:	mov    al,BYTE PTR [ecx+0x24]
  410bf0:	or     al,0xde
  410bf2:	jns    0x410c2d
  410bf4:	mov    ds:0x4e8b4f62,eax
  410bf9:	sub    DWORD PTR [ecx-0x9],eax
  410bfc:	pop    edi
  410bfd:	cmp    BYTE PTR [edx-0x772f0bb4],cl
  410c03:	inc    esp
  410c04:	hlt    
  410c05:	in     al,dx
  410c06:	mov    al,BYTE PTR [esp+eiz*8-0x34]
  410c0a:	dec    ebp
  410c0b:	push   ecx
  410c0c:	push   ebx
  410c0d:	inc    edi
  410c0e:	in     eax,0x2f
  410c10:	add    BYTE PTR [eax],al
  410c12:	out    0x30,eax
  410c14:	dec    BYTE PTR [ebx+0x2b21ec8c]
  410c1a:	adc    BYTE PTR [edi+eax*8],dl
  410c1d:	mov    eax,0x38e28681
  410c22:	out    0x3e,eax
  410c24:	sar    dl,1
  410c26:	inc    ebx
  410c27:	push   esi
  410c28:	shr    al,0xbf
  410c2b:	adc    eax,0x9d48ebc2
  410c30:	dec    ecx
  410c31:	and    al,0x3c
  410c33:	(bad)  
  410c34:	mov    cl,dh
  410c36:	sbb    BYTE PTR [esi],0xf5
  410c39:	(bad)  
  410c3a:	fistp  WORD PTR [ecx+edx*2-0x2a62abdc]
  410c41:	mov    edx,DWORD PTR [esp+edi*8+0x3d]
  410c45:	push   edx
  410c46:	cmp    BYTE PTR [ebp-0x52ce1735],bl
  410c4c:	sbb    bh,dh
  410c4e:	outs   dx,BYTE PTR ds:[esi]
  410c4f:	sar    DWORD PTR [ecx],1
  410c51:	mov    dh,BYTE PTR [edx-0x7f]
  410c54:	shl    BYTE PTR [ebx],0xf9
  410c57:	jae    0x410bde
  410c59:	loope  0x410c8d
  410c5b:	cli    
  410c5c:	inc    ebx
  410c5d:	ror    BYTE PTR [ecx-0x8],0x6
  410c61:	inc    esp
  410c62:	or     eax,0xbce7debf
  410c67:	add    cl,BYTE PTR [ebx+0x43]
  410c6a:	or     eax,0x3100050f
  410c6f:	std    
  410c70:	mov    dh,bh
  410c72:	lahf   
  410c73:	adc    eax,0x6bdb
  410c78:	push   ebp
  410c79:	mov    cl,0x9d
  410c7b:	das    
  410c7c:	stos   BYTE PTR es:[edi],al
  410c7d:	mov    cl,0xe5
  410c7f:	daa    
  410c80:	lods   al,BYTE PTR fs:[esi]
  410c82:	mov    cs,ebp
  410c84:	sbb    DWORD PTR [edx+ebx*1-0x2],esi
  410c88:	inc    BYTE PTR [esi+0x766d23b8]
  410c8e:	cmp    al,0x8a
  410c90:	jne    0x410c63
  410c92:	rcl    DWORD PTR [ecx-0x7f],0x86
  410c96:	push   edx
  410c97:	out    0x8a,eax
  410c99:	add    esp,DWORD PTR [ebx]
  410c9b:	(bad)  
  410c9c:	sbb    bh,BYTE PTR [esi]
  410c9e:	lea    ebx,[ebx+0x15]
  410ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ca2:	mov    al,ds:0xe839ee07
  410ca7:	adc    esi,DWORD PTR [eax]
  410ca9:	std    
  410caa:	add    DWORD PTR [eax],eax
  410cac:	lods   al,BYTE PTR ds:[esi]
  410cad:	loop   0x410c47
  410caf:	dec    esp
  410cb0:	push   0x2443e849
  410cb5:	cmp    cl,BYTE PTR [ebp+0x1f1458d]
  410cbb:	add    BYTE PTR [ebx],cl
  410cbd:	cld    
  410cbe:	mov    dh,0x50
  410cc0:	mov    edx,0x829e29ab
  410cc5:	adc    al,0xa6
  410cc7:	and    ch,BYTE PTR [ebx-0x54383ca0]
  410ccd:	in     al,dx
  410cce:	(bad)  
  410ccf:	(bad)  
  410cd0:	adc    dl,BYTE PTR [ecx+edi*1-0x4c]
  410cd4:	mov    ebx,0x64b08fda
  410cd9:	or     edi,DWORD PTR [edi-0x72]
  410cdc:	add    BYTE PTR [eax],al
  410cde:	jmp    0x9d9e:0xe1b8bf2f
  410ce5:	nop
  410ce6:	jmp    0x5f01:0xda2be82b
  410ced:	and    bh,bl
  410cef:	jmp    0x410d53
  410cf1:	mov    edi,0xdcd6c52
  410cf6:	out    dx,al
  410cf7:	dec    edi
  410cf8:	or     edi,eax
  410cfa:	push   ds
  410cfb:	or     ebp,eax
  410cfd:	add    ecx,DWORD PTR [edx]
  410cff:	pop    ds
  410d00:	push   0xffffff9f
  410d02:	push   edx
  410d03:	and    bh,ah
  410d05:	adc    ch,BYTE PTR [ecx+ebx*8-0x68cefc16]
  410d0c:	sbb    al,0x5
  410d0e:	es call 0xb762:0x14310442
  410d16:	adc    dh,BYTE PTR [edx+esi*2]
  410d19:	mov    DWORD PTR [edx+0x10],eax
  410d1c:	out    0x3,eax
  410d1e:	mov    dl,0xd5
  410d20:	cmc    
  410d21:	mov    ah,0xb3
  410d23:	(bad)  
  410d24:	jmp    0xea14c0df
  410d29:	mov    bl,0xad
  410d2b:	push   edi
  410d2c:	add    esp,eax
  410d2e:	popa   
  410d2f:	lahf   
  410d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d31:	sub    al,0xbe
  410d33:	or     al,0xcf
  410d35:	and    DWORD PTR [ebx+0x5bd40b4f],edi
  410d3b:	push   eax
  410d3c:	add    ebp,esp
  410d3e:	stos   DWORD PTR es:[edi],eax
  410d3f:	pop    edi
  410d40:	add    BYTE PTR ds:0x64690000,cl
  410d46:	mov    DWORD PTR [edi-0x6ede7143],ebx
  410d4c:	push   ds
  410d4d:	add    dh,bh
  410d4f:	sahf   
  410d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d51:	loop   0x410cdc
  410d53:	sub    eax,0x39533259
  410d58:	mov    ah,0xd8
  410d5a:	call   0xfe4b53f6
  410d5f:	shr    ch,cl
  410d61:	stos   DWORD PTR es:[edi],eax
  410d62:	or     DWORD PTR [ebx+0x62c21734],0xebf7d3f5
  410d6c:	or     eax,0x1e43e83d
  410d71:	or     bh,dh
  410d73:	bound  ebp,QWORD PTR [ebp-0x62]
  410d76:	inc    esp
  410d77:	add    eax,0x72506115
  410d7c:	xor    ecx,0xffffffc9
  410d7f:	xor    al,0x50
  410d81:	or     cl,BYTE PTR [edx+0x1df1c21]
  410d87:	and    BYTE PTR [ebp-0x4],ah
  410d8a:	mov    ds:0xe8030372,al
  410d8f:	cmp    BYTE PTR [edi],dl
  410d91:	sahf   
  410d92:	retf   0x1a28
  410d95:	sub    al,BYTE PTR [ecx]
  410d97:	and    esi,DWORD PTR [ebp+edx*2-0x23ca42dc]
  410d9e:	cmp    DWORD PTR [eax],edx
  410da0:	mov    dh,0x11
  410da2:	lds    ebp,FWORD PTR [ebp-0x1700da2a]
  410da8:	add    BYTE PTR [eax],al
  410daa:	xor    dl,BYTE PTR [ebx+eax*4]
  410dad:	out    0x98,al
  410daf:	xor    DWORD PTR [ecx],edi
  410db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db2:	xchg   esi,eax
  410db3:	xor    eax,0x39993d89
  410db8:	push   eax
  410db9:	cmp    esi,DWORD PTR [edi+edx*8+0x222600e8]
  410dc0:	(bad)  
  410dc1:	jmp    DWORD PTR [ebx]
  410dc3:	dec    ebp
  410dc4:	mov    al,BYTE PTR [esp+edi*1-0x8]
  410dc8:	push   esp
  410dc9:	push   eax
  410dca:	adc    esp,DWORD PTR [ebx-0x1b]
  410dcd:	jg     0x410d6c
  410dcf:	xor    al,0xfe
  410dd1:	cmp    esi,DWORD PTR [eax+0x24]
  410dd4:	mov    WORD PTR [edx],es
  410dd6:	pop    ebx
  410dd7:	adc    eax,0xfc348300
  410ddc:	adc    DWORD PTR [eax],eax
  410dde:	addr16 xchg edx,eax
  410de0:	test   BYTE PTR [edx],0x48
  410de3:	adc    eax,0x245bfd81
  410de8:	mov    ss,esp
  410dea:	pop    eax
  410deb:	adc    eax,0xf1848b00
  410df0:	sbb    eax,0x55f17c8b
  410df5:	mov    ebx,DWORD PTR [esi+0x18000201]
  410dfb:	nop
  410dfc:	sar    ch,0xb9
  410dff:	(bad)  
  410e00:	mov    edi,0xbd8fba03
  410e05:	add    ebp,DWORD PTR [eax+0x14244999]
  410e0b:	(bad)  
  410e0c:	mov    cl,dh
  410e0e:	add    BYTE PTR [eax],al
  410e10:	and    BYTE PTR [esi-0xb],ch
  410e13:	call   DWORD PTR [edi]
  410e15:	cwde   
  410e16:	inc    ecx
  410e17:	and    al,0x8
  410e19:	cwde   
  410e1a:	push   ecx
  410e1b:	and    al,0xfc
  410e1d:	xchg   edi,eax
  410e1e:	pop    ecx
  410e1f:	and    al,0x0
  410e21:	call   0x63a460e8
  410e26:	dec    ebp
  410e27:	jl     0x410e26
  410e29:	cmp    al,0x21
  410e2b:	cmc    
  410e2c:	xlat   BYTE PTR ds:[ebx]
  410e2d:	sub    BYTE PTR [ebx+edx*2+0x43],dl
  410e31:	pop    edx
  410e32:	mov    BYTE PTR [esp+ebp*1+0x4],al
  410e36:	out    0x17,al
  410e38:	xor    eax,ebp
  410e3a:	sbb    eax,0xe826bafe
  410e3f:	and    ecx,DWORD PTR [edx-0x44]
  410e42:	jnp    0x410dc6
  410e44:	xchg   ebx,eax
  410e45:	std    
  410e46:	add    al,dl
  410e48:	mov    edx,0x33f843b2
  410e4d:	(bad)  
  410e4e:	lock out 0x7e,eax
  410e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e52:	sbb    eax,0x894ddcfe
  410e57:	int    0xb8
  410e59:	ss call 0x18ed678a
  410e5f:	(bad)  
  410e60:	pop    esi
  410e61:	test   DWORD PTR [edx+ecx*4-0x13],ecx
  410e65:	into   
  410e66:	in     eax,0x2a
  410e68:	jns    0x410e67
  410e6a:	dec    esp
  410e6b:	mov    bh,0x58
  410e6d:	pop    esp
  410e6e:	mov    DWORD PTR ds:0xf9336346,ebp
  410e74:	add    BYTE PTR [eax],al
  410e76:	stos   BYTE PTR es:[edi],al
  410e77:	inc    esp
  410e78:	inc    ebx
  410e79:	call   0x8a8908cc
  410e7e:	ins    DWORD PTR es:[edi],dx
  410e7f:	adc    eax,ebx
  410e81:	add    ch,cl
  410e83:	adc    ch,BYTE PTR [ebx]
  410e85:	jl     0x410eb0
  410e87:	cs enter 0x2523,0xfc
  410e8c:	add    DWORD PTR [eax],eax
  410e8e:	xor    DWORD PTR [eax+0x1d],esi
  410e91:	jne    0x410edc
  410e93:	repnz dec eax
  410e95:	jnp    0x410ee4
  410e97:	cmp    BYTE PTR [eax-0x5032dedd],0x8a
  410e9e:	not    DWORD PTR ds:0xedef353
  410ea4:	mov    edi,edx
  410ea6:	stos   BYTE PTR es:[edi],al
  410ea7:	mov    cl,0xe5
  410ea9:	daa    
  410eaa:	lods   eax,DWORD PTR fs:[esi]
  410eac:	mov    cl,ch
  410eae:	fstp   DWORD PTR [ebx+0x18]
  410eb1:	(bad)  
  410eb2:	mov    esi,0x273c2214
  410eb7:	cwde   
  410eb8:	add    al,0x2
  410eba:	xor    DWORD PTR [edx+ebp*2],edx
  410ebd:	lahf   
  410ebe:	push   edx
  410ebf:	and    bh,ah
  410ec1:	push   cs
  410ec2:	mov    ah,0x2a
  410ec4:	jmp    0x1bdc3fcc
  410ec9:	call   0xef79fb4
  410ece:	lods   eax,DWORD PTR ds:[esi]
  410ecf:	jnp    0x410eb9
  410ed1:	add    esi,DWORD PTR [ecx]
  410ed3:	xchg   ebx,eax
  410ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed5:	add    al,0x26
  410ed7:	mov    ?,WORD PTR [edi]
  410ed9:	add    eax,0x14310000
  410ede:	bound  esi,QWORD PTR [edi+0x4e626012]
  410ee4:	or     ebx,ebx
  410ee6:	je     0x410eef
  410ee8:	sub    ecx,DWORD PTR [ebx-0x5a]
  410eeb:	xchg   ebp,eax
  410eec:	xor    BYTE PTR [ebx+0x50bbb3ae],bl
  410ef2:	ret    
  410ef3:	test   DWORD PTR [ebx],0xa5b3bae7
  410ef9:	pop    eax
  410efa:	add    esp,eax
  410efc:	sbb    DWORD PTR [ebx+0x308a8c25],0xfeea2c03
  410f06:	inc    esi
  410f07:	push   ds
  410f08:	pop    ecx
  410f09:	mov    BYTE PTR [ebx],al
  410f0b:	fadd   DWORD PTR [eax+0x52b76240]
  410f11:	inc    esp
  410f12:	xchg   esi,eax
  410f13:	mov    cl,0xab
  410f15:	aad    0xf
  410f17:	loopne 0x410f1b
  410f19:	pop    es
  410f1a:	pop    ds
  410f1b:	mov    al,BYTE PTR [esi]
  410f1d:	fwait
  410f1e:	stos   DWORD PTR es:[edi],eax
  410f1f:	out    0x1e,eax
  410f21:	pop    edi
  410f22:	mov    bh,0x8a
  410f24:	in     al,dx
  410f25:	sti    
  410f26:	aad    0x17
  410f28:	xlat   BYTE PTR ds:[ebx]
  410f29:	push   es
  410f2a:	ret    
  410f2b:	inc    edx
  410f2c:	mov    ebx,0xbecd0067
  410f31:	mov    BYTE PTR [eax],dl
  410f33:	(bad)  
  410f34:	out    dx,al
  410f35:	xor    dh,BYTE PTR [eax]
  410f37:	jb     0x410fb2
  410f39:	xor    dh,BYTE PTR [eax+esi*2]
  410f3c:	xor    DWORD PTR [edx],0x6038
  410f42:	jmp    0x69a34b79
  410f47:	xor    dl,BYTE PTR [eax]
  410f49:	push   ds
  410f4a:	loopne 0x410fa2
  410f4c:	mov    DWORD PTR [edi-0x4910d1a3],ebp
  410f52:	and    al,0x9a
  410f54:	dec    esp
  410f55:	add    eax,0x724f5d5d
  410f5a:	out    0x99,eax
  410f5c:	fcom   DWORD PTR [ecx-0x6901fdb6]
  410f62:	mov    cl,dl
  410f64:	or     eax,0xfe06d45c
  410f69:	jmp    0xd1657a17
  410f6e:	imul   ebp,DWORD PTR [eax+0x1432ed24],0x62a81173
  410f78:	and    al,0xfd
  410f7a:	test   eax,0xe5f92452
  410f7f:	arpl   WORD PTR [eax+0x62],dx
  410f82:	ja     0x410f71
  410f84:	repnz pop ecx
  410f86:	cmp    al,0x6
  410f88:	push   esp
  410f89:	call   0x3a16:0xa587d7a9
  410f90:	call   0xfe472fc4
  410f95:	(bad)  
  410f97:	xor    DWORD PTR [edx+ebp*8],esp
  410f9a:	push   0xffffff9a
  410f9c:	shl    DWORD PTR [eax+esi*8-0x2532b364],1
  410fa3:	arpl   WORD PTR [ecx+0xd00001f],cx
  410fa9:	mov    ch,0xf1
  410fab:	add    BYTE PTR [edi],ch
  410fad:	daa    
  410fae:	mov    bl,al
  410fb0:	inc    ebx
  410fb1:	fsub   QWORD PTR [ecx]
  410fb3:	cmp    BYTE PTR [edi+0x30ce8ac1],ah
  410fb9:	jno    0x410fad
  410fbb:	dec    edi
  410fbd:	pushf  
  410fbe:	imul   esp,DWORD PTR [esp+edi*1],0x548bd813
  410fc5:	cld    
  410fc6:	and    DWORD PTR [ebx],edi
  410fc8:	retf   
  410fc9:	pushf  
  410fca:	pop    ecx
  410fcb:	and    al,0x50
  410fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fce:	dec    eax
  410fcf:	jmp    0x410f65
  410fd1:	pushf  
  410fd2:	pop    ecx
  410fd3:	and    al,0x20
  410fd5:	fwait
  410fd6:	inc    ecx
  410fd7:	and    al,0x80
  410fd9:	in     al,dx
  410fda:	and    DWORD PTR [esp+eax*4],0x11
  410fde:	add    BYTE PTR [ebp+0x61],dh
  410fe1:	xchg   esp,eax
  410fe2:	mov    ebx,0x115428
  410fe7:	add    BYTE PTR [ebx+ecx*1+0x3d],al
  410feb:	add    BYTE PTR [ebp+0x11],al
  410fee:	add    BYTE PTR [ebp+edx*2-0x6c],bh
  410ff2:	inc    BYTE PTR [edx]
  410ff4:	inc    esp
  410ff5:	repz cmp BYTE PTR [esp+esi*2-0x17],0xfd
  410ffb:	jl     0x411045
  410ffd:	adc    DWORD PTR [ebp+eax*1-0x65],edi
  411001:	sub    BYTE PTR [edx],al
  411003:	je     0x411030
  411005:	pushf  
  411006:	dec    ecx
  411007:	and    al,0x40
  411009:	mov    edi,0x8b50
  41100e:	pop    esi
  41100f:	cmp    ebx,ecx
  411011:	repz dec edi
  411013:	sub    dl,ch
  411015:	xor    BYTE PTR [ebx-0x6ca7de3b],dl
  41101b:	int    0x21
  41101d:	adc    BYTE PTR [ebx-0x5528d5bc],al
  411023:	ror    BYTE PTR [edx+0x6e1331ce],0xef
  41102a:	ficom  WORD PTR ds:0xeb0d431c
  411030:	sub    dh,0x30
  411033:	and    BYTE PTR [ebx],0xea
  411036:	and    esi,DWORD PTR [edx-0x4b]
  411039:	and    esp,DWORD PTR [ecx]
  41103b:	push   0x4960fec8
  411040:	(bad)  
  411041:	int    0x99
  411043:	mov    BYTE PTR [esi+edi*8],dl
  411046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411047:	sub    DWORD PTR [ecx],ebx
  411049:	sbb    BYTE PTR [ecx+edi*8-0x54f70f6],0x1
  411051:	add    BYTE PTR [edx+0x3103f06c],bh
  411057:	sti    
  411058:	mov    al,0x52
  41105a:	loope  0x4110cd
  41105c:	dec    edx
  41105d:	out    0x17,eax
  41105f:	stos   DWORD PTR es:[edi],eax
  411060:	sbb    esi,edi
  411062:	mov    edx,0xfc27e036
  411067:	dec    ebx
  411068:	(bad)  
  411069:	int    0xaa
  41106b:	ret    0xef2c
  41106e:	arpl   WORD PTR [ebp+0x3a19],cx
  411074:	jb     0x41107b
  411076:	jmp    0xb73a:0xe9d6ed8a
  41107d:	into   
  41107e:	std    
  41107f:	push   DWORD PTR [esi]
  411081:	out    0xc,eax
  411083:	sub    edi,0x25
  411086:	add    BYTE PTR [eax],al
  411088:	xor    ebp,ebp
  41108a:	lea    eax,[esp+ebx*2-0x13]
  41108e:	add    BYTE PTR [eax],al
  411090:	xor    ecx,ebx
  411092:	add    BYTE PTR [ebx+0x68df00c],al
  411098:	inc    esp
  411099:	in     eax,dx
  41109a:	cwde   
  41109b:	(bad)  
  41109c:	(bad)  
  41109d:	mov    cl,0xd3
  41109f:	mov    dl,BYTE PTR [ebp+0x14]
  4110a2:	retf   
  4110a3:	mov    ebx,0xefc370b9
  4110a8:	lods   eax,DWORD PTR ds:[esi]
  4110a9:	icebp  
  4110aa:	fwait
  4110ab:	jecxz  0x411058
  4110ad:	stos   BYTE PTR es:[edi],al
  4110ae:	repz call esi
  4110b1:	add    ebx,DWORD PTR [ebx+0xfd2bbb5]
  4110b7:	in     eax,0xd6
  4110b9:	add    esi,edi
  4110bb:	pop    ebx
  4110bc:	xor    DWORD PTR [edi+eiz*8],edx
  4110bf:	add    esi,DWORD PTR [eax]
  4110c1:	call   0xc011:0x3aefffb
  4110c8:	push   edx
  4110c9:	sub    BYTE PTR [esp-0x53],bl
  4110cd:	pusha  
  4110ce:	in     al,dx
  4110cf:	sbb    cl,BYTE PTR [ebx+0x52b7725e]
  4110d5:	pop    esp
  4110d6:	jb     0x411097
  4110d8:	add    BYTE PTR [eax],al
  4110da:	push   edx
  4110db:	sub    al,0x1c
  4110dd:	mov    ah,0xab
  4110df:	sar    BYTE PTR [edi-0x58fc7dfa],cl
  4110e5:	add    al,0x9f
  4110e7:	sub    bl,ah
  4110e9:	add    esi,DWORD PTR [ecx]
  4110eb:	xchg   ecx,eax
  4110ec:	xor    edi,ecx
  4110ee:	pop    edi
  4110ef:	out    dx,eax
  4110f0:	int3   
  4110f1:	mov    ?,edx
  4110f3:	aaa    
  4110f4:	pop    ds
  4110f5:	or     DWORD PTR [edi-0x77],0x37fa8ed5
  4110fc:	mov    edi,0xe328a48e
  411101:	add    esi,DWORD PTR [ecx]
  411103:	(bad)  
  411104:	rcr    edi,cl
  411106:	push   0xffffff8d
  411108:	stos   DWORD PTR es:[edi],eax
  411109:	fistp  WORD PTR [esi-0x73]
  41110c:	mov    ebx,0x425b2edf
  411111:	icebp  
  411112:	lods   eax,DWORD PTR ds:[esi]
  411113:	add    bh,BYTE PTR [esi+eax*1-0x7111108a]
  41111a:	lods   al,BYTE PTR ds:[esi]
  41111b:	daa    
  41111c:	add    ch,ch
  41111e:	xor    dl,BYTE PTR [ecx+edx*2]
  411121:	cdq    
  411122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411123:	shr    al,1
  411125:	pop    edi
  411126:	sbb    eax,DWORD PTR [edx]
  411128:	(bad)  
  411129:	push   ds
  41112a:	mov    al,0x26
  41112c:	add    al,0xe9
  41112e:	xor    bl,BYTE PTR [ecx-0x11a92103]
  411134:	add    cl,ch
  411136:	xor    bh,BYTE PTR [edi]
  411138:	jl     0x4110ff
  41113a:	ficom  WORD PTR [ecx]
  41113c:	or     DWORD PTR [eax],0x0
  41113f:	add    BYTE PTR [edx],dh
  411141:	adc    al,0x0
  411143:	bound  eax,QWORD PTR [esi-0x78dabca]
  411149:	sub    eax,0xe316cc9
  41114e:	cmp    DWORD PTR [esi-0x5976eb3d],ebp
  411154:	fisttp QWORD PTR [ebp-0x727ef2bc]
  41115a:	jmp    0x50a96971
  41115f:	imul   esi,DWORD PTR fs:[esi],0xd0a4183c
  411166:	xchg   DWORD PTR ds:0x17e83651,edx
  41116c:	ss add bh,dh
  41116f:	rol    dh,1
  411171:	ss xor al,0x1b
  411174:	or     DWORD PTR [ebp+0x6962cd54],0xfafb7252
  41117e:	in     eax,0x78
  411180:	sbb    BYTE PTR [edx],al
  411182:	mov    al,BYTE PTR [ecx+0x212456a4]
  411188:	loopne 0x4111db
  41118a:	mov    DWORD PTR [edi],ebp
  41118c:	push   ebp
  41118d:	jmp    0x3e796881
  411192:	ret    
  411193:	(bad)  
  411194:	leave  
  411195:	xor    eax,0x5f60014
  41119a:	mov    ecx,DWORD PTR [esp+ebp*1-0x18]
  41119e:	mov    dl,BYTE PTR [esp+ebp*1-0x1c]
  4111a2:	mov    BYTE PTR [eax+eax*1+0x0],cl
  4111a6:	sub    al,0xe0
  4111a8:	mov    BYTE PTR [esp+edi*8-0x17],dl
  4111ac:	mov    al,BYTE PTR [esp+ebp*8+0x5]
  4111b0:	push   edi
  4111b1:	push   ebp
  4111b2:	cwde   
  4111b3:	nop
  4111b4:	retf   
  4111b5:	call   0x3f3fd3
  4111ba:	inc    ebx
  4111bb:	int3   
  4111bc:	and    DWORD PTR [eax],edi
  4111be:	lahf   
  4111bf:	(bad)  
  4111c0:	mov    cl,dh
  4111c2:	push   ebx
  4111c3:	xor    ch,ah
  4111c5:	mov    ds:0x3bfe1cb9,eax
  4111ca:	(bad)  [edx-0xbb374c9]
  4111d0:	xor    eax,0x1e10e3b
  4111d5:	add    BYTE PTR [eax-0x497cf76e],cl
  4111db:	in     eax,dx
  4111dc:	add    DWORD PTR [eax],eax
  4111de:	cwde   
  4111df:	adc    eax,0x15851874
  4111e4:	add    eax,DWORD PTR [eax]
  4111e6:	mov    BYTE PTR [ecx+0x17978304],ch
  4111ec:	je     0x411207
  4111ee:	test   DWORD PTR ds:0xa948007b,edx
  4111f4:	add    al,0x83
  4111f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f7:	sbb    BYTE PTR [ebp+ecx*1+0x2f],dh
  4111fb:	enter  0xce8a,0xa0
  4111ff:	xor    al,dh
  411201:	inc    edi
  411203:	out    0xfe,eax
  411205:	jmp    0x41126f
  411207:	nop
  411208:	imul   esp,DWORD PTR [eax+eax*1],0xfe022800
  41120f:	call   FWORD PTR [eax]
  411211:	adc    eax,0x1631d389
  411216:	das    
  411217:	push   ecx
  411218:	jl     0x411290
  41121a:	inc    edi
  41121b:	out    0xf6,eax
  41121d:	push   0x6e6cfe18
  411222:	sub    BYTE PTR [eax],al
  411224:	test   BYTE PTR [eax-0x76],bl
  411227:	imul   ecx,DWORD PTR [ebp-0x25],0xffffff8c
  41122b:	inc    ebx
  41122c:	adc    eax,0xb847c4bf
  411231:	mov    esi,0x431a57dd
  411236:	or     BYTE PTR [edx-0x1e7dd62],al
  41123c:	mov    ah,0x19
  41123e:	or     BYTE PTR [ebp+eiz*4-0x4dfffe16],al
  411245:	or     DWORD PTR [eax],eax
  411247:	imul   ebp,DWORD PTR [ebp+0x1]
  41124b:	add    BYTE PTR [ecx],dh
  41124d:	xchg   al,cl
  41124f:	and    eax,DWORD PTR [ecx+0x4a]
  411252:	mov    edx,eax
  411254:	dec    edx
  411255:	mov    dl,0xb4
  411257:	push   eax
  411258:	stos   BYTE PTR es:[edi],al
  411259:	mov    al,ds:0xd99f2e2c
  41125e:	adc    eax,0xdc16dd8a
  411263:	push   esi
  411264:	jecxz  0x4112db
  411266:	inc    esi
  411267:	mov    cl,BYTE PTR [ecx+0x6ef103d2]
  41126d:	mov    ecx,0xc4d9
  411272:	out    0x37,al
  411274:	mov    DWORD PTR [ebx+0x15],eax
  411277:	jecxz  0x411253
  411279:	test   DWORD PTR ds:0xc40001f7,ecx
  41127f:	add    eax,DWORD PTR [ebx+0x1f719bd]
  411285:	add    BYTE PTR [ecx],dh
  411287:	(bad)  
  411288:	stc    
  411289:	cmp    al,0x31
  41128b:	clc    
  41128c:	add    DWORD PTR [eax],eax
  41128e:	lods   eax,DWORD PTR ds:[esi]
  41128f:	adc    al,0xec
  411291:	and    BYTE PTR [edi],0x13
  411294:	rcr    edi,cl
  411296:	pop    ebp
  411297:	adc    al,0xd4
  411299:	add    esi,DWORD PTR [ecx]
  41129b:	and    ah,0x82
  41129e:	unpcklps xmm7,XMMWORD PTR [ebx+0x72645ffb]
  4112a5:	inc    esi
  4112a6:	push   ss
  4112a7:	dec    esi
  4112a8:	cmp    BYTE PTR [edi],dl
  4112aa:	imul   ebx
  4112ac:	cmc    
  4112ad:	mov    eax,0x4c6a5f8b
  4112b2:	out    0x5e,eax
  4112b4:	push   0x40
  4112b6:	es shr bh,cl
  4112b9:	add    ebp,DWORD PTR [edx-0x440c3c90]
  4112bf:	rcl    edx,cl
  4112c1:	ds jbe 0x41132d
  4112c4:	jb     0x41130c
  4112c6:	(bad)  
  4112c7:	pop    ds
  4112c8:	add    eax,0x6a59b717
  4112cd:	daa    
  4112ce:	xor    DWORD PTR [ecx-0x74c9d52c],ecx
  4112d4:	xor    esp,eax
  4112d6:	add    BYTE PTR [eax],al
  4112d8:	cs xchg ecx,eax
  4112da:	and    dl,BYTE PTR [edi]
  4112dc:	add    DWORD PTR [edx+0x62],esp
  4112df:	inc    ebp
  4112e0:	xchg   esi,eax
  4112e1:	pop    ss
  4112e2:	aad    0x16
  4112e4:	xchg   DWORD PTR [ebx-0x3f1d1fc5],ecx
  4112ea:	call   0xf25543f2
  4112ef:	ss jecxz 0x411326
  4112f2:	je     0x41136e
  4112f4:	jmp    di
  4112f7:	add    ebp,DWORD PTR [edx+0x56fffb96]
  4112fd:	(bad)  
  4112fe:	cmp    dh,BYTE PTR [ebx+edi*4+0x55208fce]
  411305:	(bad)  
  411306:	jle    0x41130c
  411308:	vpcomuw xmm14,xmm7,XMMWORD PTR [edx],0x14
  41130e:	add    DWORD PTR [ebx+ecx*1-0x4cb38d22],ecx
  411315:	leave  
  411316:	std    
  411317:	call   0xe9452ec0
  41131c:	xor    dl,BYTE PTR [ecx+0x1ba1e049]
  411322:	mov    DWORD PTR [edi+0x2],ebp
  411325:	adc    eax,DWORD PTR [eax]
  411327:	jmp    0xed59abd9
  41132c:	xor    dl,BYTE PTR [eax+eax*2]
  41132f:	pusha  
  411330:	mov    ah,0x1a
  411332:	add    al,0xe9
  411334:	xor    cl,BYTE PTR [ebp-0x121067a]
  41133a:	std    
  41133b:	bound  eax,QWORD PTR [eax]
  41133d:	add    BYTE PTR [edi+eiz*1+0x4],dl
  411341:	jmp    0xeb519d78
  411346:	add    BYTE PTR [ecx],al
  411348:	ret    
  411349:	jno    0x41130d
  41134b:	adc    ebx,DWORD PTR [esi-0x201492b]
  411351:	je     0x411300
  411353:	mov    DWORD PTR [esi-0x2015907],eax
  411359:	jo     0x41137a
  41135b:	daa    
  41135c:	add    al,0xe9
  41135e:	xor    dl,BYTE PTR [edi+eax*4+0x5f]
  411362:	mov    DWORD PTR [edx],edx
  411364:	add    cl,ch
  411366:	mov    ebx,0x32e51098
  41136b:	adc    al,0x89
  41136d:	outs   dx,DWORD PTR ds:[esi]
  41136e:	jne    0x411382
  411370:	add    cl,ch
  411372:	mov    eax,0x3fbb020e
  411377:	aad    0x88
  411379:	stc    
  41137a:	xor    ebx,DWORD PTR [esi+0x1432ed1c]
  411380:	jae    0x411372
  411382:	mov    ecx,0x54001098
  411387:	adc    al,BYTE PTR [eax]
  411389:	mov    esi,edx
  41138b:	inc    DWORD PTR [ecx]
  41138d:	add    BYTE PTR [eax-0x2e],cl
  411390:	mov    BYTE PTR [esi-0x20204],cl
  411396:	mov    eax,ds:0x8040d7e
  41139b:	adc    cl,BYTE PTR [ecx-0x201df7a]
  4113a1:	inc    DWORD PTR [eax]
  4113a3:	add    BYTE PTR [eax-0x8],cl
  4113a6:	mov    al,BYTE PTR [esi-0x20218]
  4113ac:	push   esi
  4113ad:	sbb    BYTE PTR [eax],al
  4113af:	mov    ecx,DWORD PTR [esi-0x27fffe04]
  4113b5:	mov    WORD PTR [ebx+0x11d418],es
  4113bb:	add    DWORD PTR [esi+0x8],ebp
  4113be:	add    al,BYTE PTR [eax]
  4113c0:	enter  0xccec,0xd2
  4113c4:	clc    
  4113c5:	mov    WORD PTR [ecx+0x24],es
  4113c8:	mov    WORD PTR [esi-0x43],?
  4113cb:	je     0x411446
  4113cd:	mov    WORD PTR [ecx+0x24],cs
  4113d0:	test   al,0x8c
  4113d2:	xchg   ebx,eax
  4113d3:	adc    BYTE PTR [ecx+edx*1-0xb9bd500],dl
  4113da:	dec    ebp
  4113db:	push   ecx
  4113dc:	and    edx,DWORD PTR [edi+0x11880411]
  4113e2:	sub    DWORD PTR [esp+esi*1-0x38],ecx
  4113e6:	dec    edi
  4113e7:	push   ecx
  4113e8:	daa    
  4113e9:	daa    
  4113ea:	int    0x83
  4113ec:	aam    0x1
  4113ee:	test   eax,eax
  4113f0:	xor    eax,0x9b8b5b0c
  4113f5:	mov    esp,0x3cdb5e5e
  4113fa:	xor    eax,0x891830c2
  4113ff:	xchg   BYTE PTR [ecx],dh
  411401:	sti    
  411402:	std    
  411403:	dec    DWORD PTR [esi-0x2e]
  411406:	mov    ebp,0xe1000023
  41140b:	aaa    
  41140c:	mov    bh,0x5e
  41140e:	fild   QWORD PTR [ecx+0x3d]
  411411:	aaa    
  411412:	jae    0x4113f7
  411414:	add    DWORD PTR [eax+0x7eb31],edi
  41141a:	repnz cmp DWORD PTR [ebp+0x49823523],0x86ea08c0
  411425:	inc    ebx
  411426:	cmp    DWORD PTR [ebx+0xf6d8a40],ebp
  41142c:	or     BYTE PTR [ecx+0xf0d],al
  411432:	xor    DWORD PTR [eax+0x41],esi
  411435:	je     0x41146d
  411437:	ins    BYTE PTR es:[edi],dx
  411438:	cmp    eax,0x1eb2d2b
  41143d:	ret    
  41143e:	stos   BYTE PTR es:[edi],al
  41143f:	outs   dx,BYTE PTR ds:[esi]
  411440:	fld    QWORD PTR [ebx+0x2d]
  411443:	jmp    0x411446
  411445:	mov    esp,DWORD PTR [ebp+0x3103c1d6]
  41144b:	jmp    0x4113ff
  41144d:	mov    ch,BYTE PTR [ebp+0x3103c1d6]
  411453:	jmp    0x411404
  411455:	mov    al,ch
  411457:	(bad)  
  411458:	aad    0x3
  41145a:	xor    ebx,ebp
  41145c:	mov    ah,0x4f
  41145e:	stos   BYTE PTR es:[edi],al
  41145f:	jbe    0x411449
  411461:	aas    
  411462:	sub    eax,0xe15201eb
  411467:	pop    edi
  411468:	shl    BYTE PTR [ebx],0x29
  41146b:	jecxz  0x411421
  41146d:	hlt    
  41146e:	add    BYTE PTR [eax],al
  411470:	jle    0x41142f
  411472:	add    ebx,0x45
  411475:	out    dx,eax
  411476:	add    DWORD PTR [eax],eax
  411478:	jb     0x411418
  41147a:	inc    eax
  41147b:	retf   
  41147c:	jne    0x411491
  41147e:	mov    bl,0x40
  411480:	push   0xffffffcf
  411482:	stos   DWORD PTR es:[edi],eax
  411483:	inc    eax
  411484:	push   0xffffffcf
  411486:	cmp    al,0x7d
  411488:	push   ebp
  411489:	xchg   edx,eax
  41148a:	jnp    0x4114a0
  41148c:	inc    esi
  41148d:	cld    
  41148e:	out    0xb6,eax
  411490:	in     al,0x64
  411492:	jb     0x41144d
  411494:	cs inc ebx
  411496:	xchg   edx,eax
  411497:	add    esp,edi
  411499:	(bad)  
  41149a:	aaa    
  41149b:	ret    0x1471
  41149e:	jo     0x4114b4
  4114a0:	icebp  
  4114a1:	cld    
  4114a2:	jmp    0x17c:0xf710df02
  4114a9:	cwde   
  4114aa:	dec    eax
  4114ab:	or     esi,DWORD PTR [esi]
  4114ad:	ret    
  4114ae:	jae    0x4114ad
  4114b0:	ds dec edx
  4114b2:	test   al,0x3
  4114b4:	lods   al,BYTE PTR ds:[esi]
  4114b5:	int3   
  4114b6:	out    0x78,al
  4114b8:	add    DWORD PTR [esi*2+0x450ae45],ecx
  4114bf:	cmp    al,0x73
  4114c1:	xchg   edi,eax
  4114c2:	and    cl,ah
  4114c4:	pop    edx
  4114c5:	in     eax,0xd8
  4114c7:	xor    eax,0xff8c9754
  4114cc:	xor    DWORD PTR [ecx+0x3ee7cf1],eax
  4114d2:	and    BYTE PTR [ecx+0x146a0000],al
  4114d8:	aad    0x1e
  4114da:	xor    ecx,DWORD PTR [ecx+0x7db5f5db]
  4114e0:	call   0xf7fae76b
  4114e5:	adc    dl,BYTE PTR [edi-0x2d791805]
  4114eb:	mov    edi,esi
  4114ed:	adc    al,BYTE PTR [edi+0x5bd4e7fb]
  4114f3:	or     esi,DWORD PTR [ebp-0x7b]
  4114f6:	mov    cs,WORD PTR [edx+0x0]
  4114f9:	sub    BYTE PTR ds:0xafd13489,dh
  4114ff:	stc    
  411500:	sbb    al,0x24
  411502:	pop    edi
  411503:	lea    eax,[esp+edx*8+0x1a]
  411507:	xchg   ebx,eax
  411508:	inc    esp
  411509:	hlt    
  41150a:	ret    0x8ed
  41150d:	arpl   WORD PTR [esi+0x40],bp
  411510:	lods   al,BYTE PTR ds:[esi]
  411511:	jno    0x411589
  411513:	sbb    BYTE PTR [eax+0x1cfeae2a],dl
  411519:	cmc    
  41151a:	pop    ebp
  41151b:	mov    esi,0x1432e91c
  411520:	or     eax,0x4ef2b49f
  411525:	test   al,0x32
  411527:	mov    DWORD PTR [ecx+esi*8],esi
  41152a:	mov    bh,0xf8
  41152c:	cmp    ah,cl
  41152e:	add    al,0x8d
  411530:	inc    esp
  411531:	cld    
  411532:	cmp    dl,BYTE PTR [ebx-0x117d23bc]
  411538:	or     BYTE PTR [ebx+0x0],ah
  41153b:	add    dh,dh
  41153d:	aas    
  41153e:	lods   al,BYTE PTR ds:[esi]
  41153f:	popa   
  411540:	out    dx,al
  411541:	pop    ss
  411542:	nop
  411543:	stos   BYTE PTR es:[edi],al
  411544:	mov    bh,0xfd
  411546:	cmp    BYTE PTR [ebp-0x1926bbfb],bl
  41154c:	push   0xed9ff896
  411551:	cli    
  411552:	jge    0x4114d9
  411554:	sub    DWORD PTR [eax+eax*1+0x48f3075],esp
  41155b:	push   esp
  41155c:	loop   0x4115a6
  41155e:	aas    
  41155f:	jmp    0xf9ccac09
  411564:	inc    ecx
  411565:	cli    
  411566:	std    
  411567:	out    dx,al
  411568:	clc    
  411569:	xchg   ebp,eax
  41156a:	adc    BYTE PTR [esi],ah
  41156c:	jb     0x411568
  41156e:	jge    0x4115bd
  411570:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411572:	add    BYTE PTR [eax],al
  411574:	cmp    al,0x16
  411576:	mov    DWORD PTR [edx*8+0x58414bbf],eax
  41157d:	std    
  41157e:	cmp    DWORD PTR [ebp-0x1dc78],0x18fa910b
  411588:	xor    al,0x52
  41158a:	aas    
  41158b:	and    DWORD PTR [edx+0x628c0eff],0x23
  411592:	(bad)  
  411593:	inc    ebp
  411595:	xchg   edx,eax
  411596:	or     eax,0x4d24b7ff
  41159b:	call   0x412bb1
  4115a0:	add    BYTE PTR [eax],al
  4115a2:	aaa    
  4115a3:	(bad)  
  4115a4:	pop    edx
  4115a5:	mov    DWORD PTR [ecx+ebp*4-0x3cf7f741],eax
  4115ac:	mov    ch,ah
  4115ae:	cdq    
  4115af:	xor    al,0x7d
  4115b1:	add    BYTE PTR [eax],bl
  4115b3:	push   ss
  4115b4:	push   ecx
  4115b5:	push   esi
  4115b6:	lahf   
  4115b7:	js     0x4115fd
  4115b9:	or     BYTE PTR [ebp+0x8b97dc1],al
  4115bf:	push   ss
  4115c0:	add    BYTE PTR [eax],al
  4115c2:	push   ecx
  4115c3:	dec    edi
  4115c4:	add    al,0xcc
  4115c7:	js     0x4115fb
  4115c9:	sub    DWORD PTR [esi],0xd8fc0010
  4115cf:	push   esi
  4115d0:	jecxz  0x4115d8
  4115d2:	push   ebx
  4115d3:	mov    DWORD PTR [eax+0x1308e7],0x72b0900
  4115dd:	or     DWORD PTR [esi+0x2f813578],esp
  4115e3:	adc    BYTE PTR [eax],al
  4115e5:	cld    
  4115e6:	mov    BYTE PTR [esi-0x12],dl
  4115e9:	or     ah,BYTE PTR [ecx+0x31328823]
  4115ef:	je     0x411628
  4115f1:	xor    BYTE PTR [ebx-0x11],0x7c
  4115f5:	aaa    
  4115f6:	mov    al,0xca
  4115f8:	inc    ecx
  4115f9:	push   cs
  4115fa:	xor    ebx,ebp
  4115fc:	inc    edx
  4115fd:	out    dx,al
  4115fe:	aaa    
  4115ff:	test   bh,0x88
  411602:	daa    
  411603:	jbe    0x4115d9
  411605:	add    BYTE PTR [eax],0x0
  411608:	push   edi
  411609:	jmp    0x41161c
  41160b:	add    dh,BYTE PTR [ecx]
  41160d:	lods   al,BYTE PTR ds:[esi]
  41160e:	daa    
  41160f:	or     edi,DWORD PTR [edx+0x6e28506]
  411615:	lods   al,BYTE PTR ds:[esi]
  411616:	and    al,0xf
  411618:	sub    BYTE PTR [ecx-0x714fe884],dh
  41161e:	add    eax,esi
  411620:	xor    ch,bl
  411622:	inc    edx
  411623:	jmp    0x8463:0x882ff42d
  41162a:	xor    al,0x82
  41162c:	repz out dx,al
  41162e:	jl     0x41165f
  411630:	mov    dl,0x48
  411632:	ror    BYTE PTR [edx],1
  411634:	inc    edx
  411635:	je     0x41160b
  411637:	dec    eax
  411638:	mov    dl,0x2a
  41163a:	add    eax,0x87bfe885
  41163f:	mov    WORD PTR [ebx+ebp*2-0x4f],?
  411643:	out    0xe,eax
  411645:	jmp    0x411648
  411647:	add    BYTE PTR [esi-0x2f],bh
  41164a:	lods   al,BYTE PTR ds:[esi]
  41164b:	mov    ch,al
  41164d:	mov    bh,0x43
  41164f:	add    esi,DWORD PTR [ecx]
  411651:	jbe    0x411618
  411653:	and    ebp,DWORD PTR ds:0x704b5965
  411659:	jmp    0x4116d7
  41165b:	or     DWORD PTR [eax+0x35c18502],ebp
  411661:	outs   dx,BYTE PTR ds:[esi]
  411662:	inc    ecx
  411663:	add    esi,DWORD PTR [eax-0xfb324fc]
  411669:	adc    esp,edi
  41166b:	xchg   ecx,eax
  41166c:	add    BYTE PTR [eax],al
  41166e:	test   ch,dl
  411670:	jecxz  0x411675
  411672:	mov    edx,0xcb080b4f
  411677:	stos   DWORD PTR es:[edi],eax
  411678:	sbb    eax,ebp
  41167a:	jle    0x411609
  41167c:	out    dx,eax
  41167d:	jl     0x4116a7
  41167f:	xchg   ebp,eax
  411680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411681:	or     BYTE PTR [edx+0x6884ebd5],dh
  411687:	sub    ebx,DWORD PTR [eax*8+0x4295825e]
  41168e:	xor    dl,BYTE PTR [esp+esi*1]
  411691:	jge    0x4116e8
  411693:	arpl   WORD PTR [edi],si
  411695:	mov    bl,0xbb
  411697:	dec    esi
  411698:	fistp  QWORD PTR [edx-0x23]
  41169b:	pop    es
  41169c:	je     0x411657
  41169e:	ds gs pop ss
  4116a1:	sbb    al,0x4f
  4116a3:	adc    al,0xe7
  4116a5:	add    ebx,DWORD PTR [ecx+0x1ec51bac]
  4116ab:	mov    DWORD PTR [ebx+ecx*1+0x430ec66],ebp
  4116b2:	xor    DWORD PTR [edx+edi*4],edx
  4116b5:	sub    BYTE PTR [ebp-0x4],0xb7
  4116b9:	sbb    ecx,DWORD PTR [esi+0x5a03e714]
  4116bf:	lea    ecx,[ebx-0x4f]
  4116c2:	lock or al,0xe7
  4116c5:	mov    dl,0xbb
  4116c7:	push   eax
  4116c8:	add    edi,esp
  4116ca:	stos   DWORD PTR es:[edi],eax
  4116cb:	pusha  
  4116cc:	retf   
  4116cd:	jmp    FWORD PTR [ecx+0xfea7d5]
  4116d3:	add    BYTE PTR [ebp+ecx*1-0x72e1dad8],al
  4116da:	loope  0x411758
  4116dc:	icebp  
  4116dd:	push   esp
  4116de:	not    BYTE PTR [ebp+0x29]
  4116e1:	aad    0x8
  4116e3:	hlt    
  4116e4:	cmp    ecx,DWORD PTR [edx]
  4116e6:	add    BYTE PTR [eax-0x55],ah
  4116e9:	mov    WORD PTR [edi+0x7c19fa9],?
  4116ef:	test   al,0x4d
  4116f1:	wbinvd 
  4116f3:	repz or eax,0xb3b8870d
  4116f9:	aad    0x4
  4116fb:	pusha  
  4116fc:	repz ss or eax,0x170c8b7f
  411703:	jo     0x4116fa
  411705:	ss or  eax,0xdfd4657f
  41170b:	rcr    ebp,1
  41170d:	or     al,0x87
  41170f:	test   al,0x72
  411711:	push   es
  411712:	mov    dh,0xf0
  411714:	cmc    
  411715:	repz adc dl,ah
  411718:	dec    eax
  411719:	mov    WORD PTR [edx],cs
  41171b:	pusha  
  41171c:	cmc    
  41171d:	ss or  eax,0xdfd4353f
  411723:	icebp  
  411724:	sub    ecx,DWORD PTR ds:0xd323f0d
  41172a:	mov    edi,0xc25a1860
  41172f:	icebp  
  411730:	xor    ah,BYTE PTR [ebx-0x77]
  411733:	mov    ch,0x16
  411735:	jns    0xe4117e0
  41173b:	or     ecx,DWORD PTR [ecx+0x18ef75eb]
  411741:	jno    0x411770
  411743:	push   ebp
  411744:	mov    ebx,ebp
  411746:	jne    0x411737
  411748:	adc    BYTE PTR [ecx+0x2d],ah
  41174b:	push   ebp
  41174c:	mov    ebx,ebp
  41174e:	jne    0x41173f
  411750:	or     BYTE PTR [ecx+0x2d],dh
  411753:	push   ebp
  411754:	xchg   DWORD PTR [edx],esi
  411756:	cmc    
  411757:	mov    edx,eax
  411759:	push   0x70
  41175b:	adc    ecx,DWORD PTR [ecx-0x76edc517]
  411761:	add    dl,cl
  411763:	dec    edi
  411764:	in     eax,0x18
  411766:	and    BYTE PTR [eax],dl
  411768:	aas    
  411769:	mov    ebx,DWORD PTR [edx+0x1010e54f]
  41176f:	adc    BYTE PTR [edi],bh
  411771:	mov    ecx,DWORD PTR [edx+0x8e551]
  411777:	adc    edi,DWORD PTR [edi]
  411779:	mov    ecx,DWORD PTR [edx-0x76773286]
  41177f:	stos   DWORD PTR es:[edi],eax
  411780:	mov    edi,0x88bd8808
  411785:	in     eax,0xdb
  411787:	xor    ecx,DWORD PTR [ecx]
  411789:	push   ebx
  41178a:	inc    esi
  41178b:	ror    DWORD PTR [edx+0x547b7c45],0x8
  411792:	jecxz  0x411795
  411794:	mov    ecx,DWORD PTR [ebp+0x40]
  411797:	jnp    0x4117e1
  411799:	add    al,0xd1
  41179b:	inc    esp
  41179c:	shr    bl,0x0
  41179f:	add    BYTE PTR [ecx+eiz*8-0x36],dl
  4117a3:	sub    DWORD PTR [ebx+0x1f0f0ef8],0xbe89d8e3
  4117ad:	push   ecx
  4117ae:	jecxz  0x4117b4
  4117b0:	fldenv [ebx]
  4117b2:	mov    dh,dl
  4117b4:	dec    ecx
  4117b5:	push   ss
  4117b6:	or     eax,0xf2795e31
  4117bb:	cmp    DWORD PTR [ebx+0x7],0xe30800fe
  4117c2:	fmul   DWORD PTR [ecx+0x10e3514e]
  4117c8:	jmp    0x1a0f9ff0
  4117cd:	push   ss
  4117ce:	push   DWORD PTR [eax]
  4117d0:	inc    esi
  4117d1:	jns    0x4117c5
  4117d3:	sub    DWORD PTR [ebx],0xeb3332e3
  4117d9:	loop   0x4117b2
  4117db:	mov    DWORD PTR [ecx],esi
  4117dd:	cmp    eax,0xdc33e541
  4117e2:	adc    cl,BYTE PTR [eax+0x71e2ce7]
  4117e8:	pusha  
  4117e9:	sbb    eax,0xab0f279
  4117ee:	or     edi,edi
  4117f0:	lahf   
  4117f1:	jmp    0x4117c5
  4117f3:	fldcw  WORD PTR [eax+0x39e542cd]
  4117f9:	sbb    al,0x3e
  4117fb:	mov    ah,bh
  4117fd:	fiadd  WORD PTR [edx]
  4117ff:	imul   BYTE PTR [edx+0xc01048]
  411805:	add    BYTE PTR [esi+0x30e680ee],al
  41180b:	test   BYTE PTR [edx],dl
  41180d:	or     BYTE PTR [eax+0x74],ch
  411810:	xor    esi,DWORD PTR [eax]
  411812:	outs   dx,DWORD PTR ds:[esi]
  411813:	je     0x411825
  411815:	adc    BYTE PTR [edx+0x61],0x57
  411819:	test   eax,0x3027dc9b
  41181e:	push   0xa811d570
  411823:	mov    esi,0x6a16ee42
  411828:	and    al,0x0
  41182a:	mov    eax,0xeef9fa78
  41182f:	daa    
  411830:	or     al,0x7
  411832:	xor    ebx,ebp
  411834:	add    DWORD PTR [ecx+0x1b232be7],ecx
  41183a:	mov    eax,0x2dee4225
  41183f:	je     0x411851
  411841:	or     dl,bh
  411843:	jae    0x411888
  411845:	xor    cl,0xe6
  411848:	rcr    BYTE PTR ds:0xe58014b8,1
  41184e:	es jb  0x411826
  411851:	mov    ah,0x9
  411853:	mov    al,ds:0x13a9ffc2
  411858:	inc    esi
  411859:	inc    edx
  41185a:	fisttp WORD PTR ds:0x13ca2468
  411860:	out    0x3,eax
  411862:	sub    bh,BYTE PTR [ebp+0x1471b0bf]
  411868:	jo     0x411896
  41186a:	add    BYTE PTR [eax],al
  41186c:	jno    0x411852
  41186e:	in     eax,dx
  41186f:	or     BYTE PTR [edi+0x3103e7f7],0x9
  411876:	fild   DWORD PTR ss:[ecx]
  411879:	push   ebx
  41187a:	out    0x7c,eax
  41187c:	outs   dx,DWORD PTR ds:[esi]
  41187d:	ror    dh,cl
  41187f:	repnz mov cl,0xec
  411882:	rol    DWORD PTR [ecx+esi*1],cl
  411885:	adc    al,0xe2
  411887:	push   edx
  411888:	dec    esi
  411889:	inc    ebp
  41188a:	sub    BYTE PTR [eax+edi*4],al
  41188d:	jle    0x411842
  41188f:	jge    0x4118fd
  411891:	nop
  411892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411893:	add    BYTE PTR [eax-0x56160538],ch
  411899:	aad    0x6a
  41189b:	and    cl,BYTE PTR [edi]
  41189d:	mov    ebx,edx
  41189f:	push   eax
  4118a0:	push   cs
  4118a1:	pop    esi
  4118a2:	sub    BYTE PTR [edx+ebp*1],al
  4118a5:	jg     0x41183a
  4118a7:	jge    0x411900
  4118a9:	rcl    BYTE PTR [esi+0x7bfbb002],cl
  4118af:	add    al,0x31
  4118b1:	adc    al,0xe2
  4118b3:	push   edx
  4118b4:	push   esi
  4118b5:	dec    eax
  4118b6:	sub    BYTE PTR [eax+ebp*4],al
  4118b9:	shr    DWORD PTR [eax],cl
  4118bb:	sbb    edi,DWORD PTR [edx*4-0xbf9f7ba]
  4118c2:	out    0xfe,eax
  4118c4:	(bad)  
  4118c5:	cmp    al,0xb9
  4118c7:	(bad)  
  4118c8:	neg    BYTE PTR [esi+eiz*1+0x680adf45]
  4118cf:	and    eax,DWORD PTR [eax]
  4118d1:	add    dl,ch
  4118d3:	adc    al,0x0
  4118d5:	jmp    0x1f6380c
  4118da:	popf   
  4118db:	push   esp
  4118dc:	add    al,bl
  4118de:	and    al,0x9c
  4118e0:	(bad)  
  4118e1:	sub    BYTE PTR [ebx],dl
  4118e3:	ja     0x5438d27
  4118e9:	pusha  
  4118ea:	push   ds
  4118eb:	sbb    al,0xf9
  4118ed:	jo     0x4118e2
  4118ef:	xchg   ebp,eax
  4118f0:	shl    ch,0x7f
  4118f3:	adc    DWORD PTR [edi+0x3df9b617],eax
  4118f9:	bound  eax,QWORD PTR [ecx+0x743c28a8]
  4118ff:	xrelease mov BYTE PTR [esi+0x680701ed],bh
  411906:	push   ebx
  411907:	out    dx,eax
  411908:	add    cl,ch
  41190a:	xor    bl,BYTE PTR [edi]
  41190c:	mov    ch,0x11
  41190e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190f:	push   esp
  411910:	add    BYTE PTR [eax+0x1b],dh
  411913:	aam    0xed
  411915:	out    0xb5,eax
  411917:	cli    
  411918:	cld    
  411919:	jmp    0x5e4a2d50
  41191e:	push   0x44
  411920:	aas    
  411921:	jmp    0x8700eaeb
  411926:	inc    eax
  411927:	xchg   esp,eax
  411928:	in     eax,0x8d
  41192a:	xor    dl,BYTE PTR [eax+eax*1]
  41192d:	repnz cmp DWORD PTR [ebx],0x4d
  411931:	sub    BYTE PTR ds:0x7d739d,ch
  411937:	add    BYTE PTR [ebp+0x16a981d9],bl
  41193d:	pushf  
  41193e:	rcr    DWORD PTR [edx],1
  411940:	sbb    ebx,DWORD PTR [esi+ebx*8-0x76cdaf96]
  411947:	sbb    eax,0xa8563b60
  41194c:	xor    bl,BYTE PTR [edi]
  41194e:	jae    0x411950
  411950:	sub    al,0x70
  411952:	faddp  st(1),st
  411954:	ja     0x41196b
  411956:	jg     0x41193f
  411958:	and    al,0x17
  41195a:	add    BYTE PTR [eax],al
  41195c:	rol    DWORD PTR [ebp+0x25],cl
  41195f:	push   esp
  411960:	cdq    
  411961:	push   ss
  411962:	xchg   edi,ebx
  411964:	sbb    DWORD PTR [esi],ecx
  411966:	or     eax,DWORD PTR [ecx-0x2e4d1]
  41196c:	enter  0xb6f1,0x28
  411970:	retf   0xfdd7
  411973:	mov    BYTE PTR [edi+0x58],al
  411976:	out    dx,al
  411977:	push   ss
  411978:	or     DWORD PTR [esi],esi
  41197a:	stc    
  41197b:	add    BYTE PTR [eax+0x20b70916],cl
  411981:	test   al,0x40
  411983:	add    BYTE PTR [ecx],ch
  411985:	pop    es
  411986:	dec    BYTE PTR [ebp+0x60]
  411989:	cwde   
  41198a:	jl     0x411984
  41198c:	mov    bl,ch
  41198e:	test   BYTE PTR [ebx-0x7601e38a],ch
  411994:	mov    al,ds:0xd11fdd56
  411999:	sub    eax,0xeed0
  41199e:	rcl    DWORD PTR [esi+0x8],1
  4119a1:	icebp  
  4119a2:	shl    DWORD PTR [edi],0x30
  4119a5:	enter  0x58c1,0x80
  4119a9:	jecxz  0x41199d
  4119ab:	push   ecx
  4119ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ad:	stos   BYTE PTR es:[edi],al
  4119ae:	pop    ecx
  4119af:	inc    eax
  4119b0:	xor    cl,bl
  4119b2:	mov    eax,ds:0x7e0c028
  4119b7:	outs   dx,DWORD PTR ds:[esi]
  4119b8:	rcl    ecx,cl
  4119ba:	mov    dh,0x6d
  4119bc:	mov    edi,0xcd6d9a09
  4119c1:	shl    DWORD PTR [eax-0x10],0x30
  4119c5:	enter  0x5781,0x80
  4119c9:	jecxz  0x4119fc
  4119cb:	dec    edx
  4119cc:	add    al,0xff
  4119ce:	xor    DWORD PTR [ecx+ebp*1],ecx
  4119d1:	mov    BYTE PTR [ecx],cl
  4119d3:	cmp    eax,0x3d200724
  4119d8:	jns    0x4119a9
  4119da:	lock push ebx
  4119dc:	push   es
  4119dd:	xor    ecx,ebp
  4119df:	je     0x411a24
  4119e1:	adc    dl,0xce
  4119e4:	aam    0x32
  4119e6:	add    cl,ah
  4119e8:	sub    cl,BYTE PTR [eax+0x1243cd9]
  4119ee:	add    BYTE PTR ds:0x370c779,bh
  4119f4:	hlt    
  4119f5:	xor    BYTE PTR [ecx-0x6d7fbc9c],al
  4119fb:	jmp    0x882b:0xac96ff08
  411a02:	add    BYTE PTR [eax],al
  411a04:	imul   edi,DWORD PTR [ecx+eiz*1+0x7abc400f],0xfdd370c7
  411a0f:	xor    BYTE PTR [ecx+0x74],ah
  411a12:	inc    esp
  411a13:	adc    BYTE PTR [edx-0x16],0xf8
  411a17:	push   cs
  411a18:	ss in  al,dx
  411a1a:	sub    ecx,DWORD PTR [edx-0x1dbd0d0c]
  411a20:	sub    eax,0x29883cec
  411a25:	jle    0x4119e5
  411a27:	pop    es
  411a28:	sub    eax,0xa807be66
  411a2d:	jmp    0x4119d7
  411a2f:	pop    ebp
  411a30:	fidiv  DWORD PTR [ebx+0x15]
  411a33:	pop    esp
  411a34:	repz loop 0x411a38
  411a37:	push   ebx
  411a38:	jg     0x411aa0
  411a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3b:	and    ebp,DWORD PTR ds:0x4d737b21
  411a41:	retf   
  411a42:	lahf   
  411a43:	test   BYTE PTR [edi],al
  411a45:	adc    al,0xf6
  411a47:	outs   dx,DWORD PTR ds:[esi]
  411a48:	loope  0x411a6a
  411a4a:	xchg   ebp,eax
  411a4b:	inc    edx
  411a4c:	das    
  411a4d:	test   eax,0x54a5b327
  411a52:	fbstp  TBYTE PTR [ebx+0x84146d6]
  411a58:	out    0x7b,eax
  411a5a:	movzx  esi,WORD PTR [ecx+0x14]
  411a5e:	aas    
  411a5f:	cld    
  411a60:	(bad)  
  411a62:	cs clc 
  411a64:	xchg   ecx,ebp
  411a66:	mov    ebp,0xce0000b4
  411a6b:	push   edx
  411a6c:	and    DWORD PTR [eax],ecx
  411a6e:	mov    edi,0x71b63f7b
  411a73:	adc    al,0xff
  411a75:	bts    eax,esi
  411a78:	push   es
  411a79:	test   eax,0x3efd60b
  411a7e:	add    al,0x9b
  411a80:	or     al,0xb3
  411a82:	out    0x44,al
  411a84:	bound  edi,QWORD PTR [esi-0x7bb62ca]
  411a8a:	mov    ch,0x46
  411a8c:	fbstp  TBYTE PTR [edx+0x824fbee]
  411a92:	ja     0x411a84
  411a94:	aas    
  411a95:	pop    esp
  411a96:	cli    
  411a97:	push   edx
  411a98:	out    0x78,eax
  411a9a:	in     eax,dx
  411a9b:	jmp    0x411ab4
  411a9d:	sbb    al,0x67
  411a9f:	out    dx,eax
  411aa0:	mov    dh,0x7
  411aa2:	into   
  411aa3:	cmp    ebx,DWORD PTR [eax*8+0xc2c9f4e]
  411aaa:	idiv   bl
  411aac:	nop
  411aad:	or     BYTE PTR [edi],bh
  411aaf:	lock call FWORD PTR [ebx-0x1b]
  411ab3:	push   edx
  411ab4:	out    0x78,eax
  411ab6:	jne    0x411aa4
  411ab8:	pop    ss
  411ab9:	sbb    al,0xb
  411abb:	icebp  
  411abc:	jle    0x411ac5
  411abe:	and    DWORD PTR [ecx+0x5f252c00],0xffffffe8
  411ac5:	imul   edi,DWORD PTR [ecx],0xffffffee
  411ac8:	std    
  411ac9:	ret    0xfb85
  411acc:	pop    ebx
  411acd:	sub    eax,DWORD PTR [eax]
  411acf:	add    ch,bh
  411ad1:	out    dx,eax
  411ad2:	push   esp
  411ad3:	pusha  
  411ad4:	push   eax
  411ad5:	xchg   edx,eax
  411ad6:	in     al,dx
  411ad7:	stc    
  411ad8:	mov    ds:0xeaa48949,eax
  411add:	call   0x99f8:0x5859ed73
  411ae4:	mov    ds:0x3632faf7,eax
  411ae9:	out    dx,al
  411aea:	mov    ebp,DWORD PTR [edx+eiz*1-0x42d57ea1]
  411af1:	inc    edx
  411af2:	call   0xfe2f44fb
  411af7:	or     DWORD PTR [edx],0x29e93f5b
  411afd:	pop    eax
  411afe:	clc    
  411aff:	cdq    
  411b00:	cmp    al,BYTE PTR [esi+0x772ff6fc]
  411b06:	test   al,0x9d
  411b08:	jne    0x411af9
  411b0a:	mov    WORD PTR [ebx*1+0x3670e85f],gs
  411b11:	out    dx,al
  411b12:	std    
  411b13:	(bad)  
  411b14:	leave  
  411b15:	jmp    0x411aa0
  411b17:	and    al,0x45
  411b19:	pushf  
  411b1a:	inc    ebx
  411b1b:	(bad)
  411b1e:	lock push ecx
  411b20:	jge    0x411b82
  411b22:	aas    
  411b23:	jmp    0x1a397301
  411b28:	sub    eax,0x2fa6fc7e
  411b2d:	ja     0x411b57
  411b2f:	sub    al,0x74
  411b31:	out    dx,eax
  411b32:	mov    WORD PTR [eax+eax*1],gs
  411b35:	add    BYTE PTR ds:0x3908e85f,bl
  411b3b:	out    dx,al
  411b3c:	std    
  411b3d:	add    BYTE PTR [ebx+0x558bf9bc],ah
  411b43:	or     BYTE PTR [eax+0x5c709c45],cl
  411b49:	lock xor BYTE PTR [eax+0x4c],dl
  411b4d:	inc    ecx
  411b4e:	sbb    BYTE PTR [esp+eax*2-0x8],ch
  411b52:	mov    eax,0x5ffc460a
  411b57:	push   ss
  411b58:	gs test al,0xcd
  411b5b:	xlat   BYTE PTR ds:[ebx]
  411b5c:	std    
  411b5d:	mov    WORD PTR [ebp+0x31e84d02],ss
  411b63:	sbb    al,0xfe
  411b65:	push   DWORD PTR [esi-0x5707bb95]
  411b6b:	or     bl,ch
  411b6d:	sti    
  411b6e:	movhps xmm0,QWORD PTR [edx-0x733f3f3a]
  411b75:	inc    ebp
  411b76:	sbb    BYTE PTR [ebx+0x1643d3e5],ah
  411b7c:	(bad)  
  411b7d:	pop    esi
  411b7e:	shr    DWORD PTR [edi-0x17],cl
  411b81:	pop    ebp
  411b82:	dec    edx
  411b83:	jmp    0x411b82
  411b85:	push   esp
  411b86:	adc    DWORD PTR [eax+eax*4],esi
  411b89:	in     al,dx
  411b8a:	in     al,dx
  411b8b:	pop    ss
  411b8c:	add    BYTE PTR [eax],al
  411b8e:	dec    ebx
  411b8f:	mov    esi,0xf03d8b56
  411b94:	mov    dh,BYTE PTR [ebp-0x74]
  411b97:	test   BYTE PTR gs:[eax+0x187e0000],al
  411b9e:	(bad)  
  411b9f:	push   eax
  411ba0:	adc    BYTE PTR [esi+0x0],0x0
  411ba4:	dec    eax
  411ba5:	mov    ebp,?
  411ba7:	xor    BYTE PTR [bp+0x40],ah
  411bac:	jo     0x411c10
  411bae:	sti    
  411baf:	dec    DWORD PTR [edi-0x3575303e]
  411bb5:	iret   
  411bb6:	dec    ebx
  411bb7:	inc    ecx
  411bb8:	xor    ebp,edi
  411bba:	jns    0x411bbf
  411bbc:	arpl   WORD PTR [ecx],di
  411bbe:	jg     0x411bb9
  411bc0:	cmp    DWORD PTR [edi],edx
  411bc2:	adc    esi,eax
  411bc4:	mov    ah,0x13
  411bc6:	push   es
  411bc7:	(bad)  
  411bc8:	push   ss
  411bc9:	std    
  411bca:	add    DWORD PTR [eax],eax
  411bcc:	xor    DWORD PTR [edx+0x650188b0],edx
  411bd2:	jge    0x411c47
  411bd4:	dec    DWORD PTR [esi+0x3]
  411bd7:	xor    bl,ah
  411bd9:	push   edx
  411bda:	aam    0x8a
  411bdc:	mov    ah,0xc7
  411bde:	add    edi,esi
  411be0:	out    0x64,al
  411be2:	jge    0x411c5f
  411be4:	fild   QWORD PTR [esi]
  411be6:	add    edi,esi
  411be8:	lods   al,BYTE PTR ds:[esi]
  411be9:	scas   eax,DWORD PTR es:[edi]
  411bea:	add    edi,esi
  411bec:	into   
  411bed:	jb     0x411c64
  411bef:	jnp    0x411bb8
  411bf1:	add    ecx,DWORD PTR ss:[esi]
  411bf4:	jg     0x411bf0
  411bf6:	sbb    bh,0x36
  411bf9:	jb     0x411c40
  411bfb:	jnp    0x411bac
  411bfd:	push   ds
  411bfe:	add    ecx,DWORD PTR [esi]
  411c00:	add    BYTE PTR [eax],al
  411c02:	(bad)  
  411c04:	shl    bh,cl
  411c06:	test   eax,0x31023bfc
  411c0b:	mov    edx,0xf38b82bf
  411c10:	xchg   BYTE PTR [ecx+esi*4],al
  411c13:	xor    al,BYTE PTR [esi*2-0x1851da89]
  411c1a:	or     al,ch
  411c1c:	add    al,0xfe
  411c1e:	mov    dl,0x98
  411c20:	mov    ebp,edi
  411c22:	data16 (bad) 
  411c24:	add    DWORD PTR [eax-0x597104e6],eax
  411c2a:	mov    dl,0x68
  411c2c:	mov    ebp,edi
  411c2e:	dec    esi
  411c2f:	mov    esi,0x14a77501
  411c34:	je     0x411cb4
  411c36:	mov    esi,0xe6049eed
  411c3b:	sti    
  411c3c:	push   cs
  411c3d:	add    esi,DWORD PTR [ecx]
  411c3f:	adc    al,0x2e
  411c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c42:	mov    ebx,DWORD PTR [ebx+0x1bf0a693]
  411c48:	out    0xae,eax
  411c4a:	test   eax,0xba1768f6
  411c4f:	adc    ah,bh
  411c51:	add    esp,DWORD PTR [edx+0x46]
  411c54:	mov    esi,0x721c5d78
  411c59:	mov    gs,WORD PTR [edx]
  411c5b:	lahf   
  411c5c:	ins    BYTE PTR es:[edi],dx
  411c5d:	sub    esp,0xffffffec
  411c60:	dec    esi
  411c61:	mov    bl,0xce
  411c63:	in     al,dx
  411c64:	out    0x3,eax
  411c66:	add    BYTE PTR [eax],al
  411c68:	xor    DWORD PTR [edx-0x19],edi
  411c6b:	fwait
  411c6c:	push   cs
  411c6d:	pop    esi
  411c6e:	test   al,0x3
  411c70:	fld    st(0)
  411c72:	sub    al,0x4
  411c74:	(bad)  
  411c75:	and    bh,BYTE PTR [ecx]
  411c77:	jns    0x411c29
  411c79:	cmp    ebp,DWORD PTR [ebp-0x146b493e]
  411c7f:	shl    eax,1
  411c81:	nop
  411c82:	adc    ebx,esi
  411c84:	sub    ah,bl
  411c86:	cs jle 0x411caf
  411c89:	out    dx,al
  411c8a:	inc    BYTE PTR [ebx]
  411c8c:	xor    DWORD PTR [edi+eiz*8],edx
  411c8f:	add    ebx,DWORD PTR [edx-0x46ec9fb9]
  411c95:	xchg   esi,eax
  411c96:	pop    ebx
  411c97:	add    bh,BYTE PTR [edi-0x14]
  411c9a:	sbb    dh,dl
  411c9c:	mov    BYTE PTR [ebx],ah
  411c9e:	bound  ecx,QWORD PTR [ecx+0x3ceede5]
  411ca4:	mov    ecx,0x5f024396
  411ca9:	in     al,dx
  411caa:	mov    esi,0xeddd89
  411caf:	mov    dh,0x32
  411cb1:	call   0xf6fd:0xee332d8b
  411cb8:	jo     0x411ccc
  411cba:	or     DWORD PTR [ecx+0x15bb9ab2],0xdefdea33
  411cc4:	call   0xadc24bf2
  411cc9:	jmp    0x411c8e
  411ccb:	jmp    0x6a42:0x55320000
  411cd2:	syscall 
  411cd4:	jnp    0x411cba
  411cd6:	mov    dl,0x2d
  411cd8:	add    ah,bl
  411cda:	call   0x33927321
  411cdf:	call   0xb7f773e1
  411ce4:	js     0x411d35
  411ce6:	xor    ch,dl
  411ce8:	add    BYTE PTR [ecx+0x1e],ch
  411ceb:	adc    al,0x73
  411ced:	xchg   BYTE PTR [esi+0x323778af],ch
  411cf3:	jmp    0x6983:0x9f90b400
  411cfa:	xor    ebp,edx
  411cfc:	std    
  411cfd:	mov    ecx,0xe900b3ca
  411d02:	xor    cl,BYTE PTR [ecx+0x5e]
  411d05:	mov    dl,0xb5
  411d07:	clc    
  411d08:	pop    ebx
  411d09:	sub    ebp,DWORD PTR ds:0xfb975114
  411d0f:	pushf  
  411d10:	inc    esp
  411d11:	int    0x22
  411d13:	jb     0x411c9e
  411d15:	lea    ecx,[esi+0x0]
  411d18:	data16 ins BYTE PTR es:[edi],dx
  411d1a:	pop    edi
  411d1b:	or     DWORD PTR [bx+si+0x68],esi
  411d1f:	lahf   
  411d20:	js     0x411d1b
  411d22:	fsubr  DWORD PTR [ebp+0x1c57e8ff]
  411d28:	mov    eax,DWORD PTR [eax]
  411d2a:	sbb    BYTE PTR [eax],al
  411d2c:	test   edi,eax
  411d2e:	out    dx,al
  411d2f:	and    dl,dl
  411d31:	sldt   WORD PTR [eax]
  411d34:	iret   
  411d35:	rcl    BYTE PTR [edx-0x7d],0x98
  411d39:	pop    ds
  411d3a:	push   eax
  411d3b:	call   0x3d0b0c
  411d40:	and    BYTE PTR [eax],bh
  411d42:	dec    ecx
  411d43:	inc    ecx
  411d44:	sbb    bh,bh
  411d46:	cmp    bh,cl
  411d48:	mov    bh,0x15
  411d4a:	push   cs
  411d4b:	mov    bh,0xd3
  411d4d:	inc    ecx
  411d4e:	push   ebx
  411d4f:	call   0x3d0b6c
  411d54:	xor    BYTE PTR [eax-0xe7beb7],bh
  411d5a:	es stc 
  411d5c:	xchg   edi,eax
  411d5d:	push   ss
  411d5e:	push   cs
  411d5f:	mov    bh,0x73
  411d61:	inc    edx
  411d62:	push   esi
  411d63:	call   0x3d0b0c
  411d68:	xchg   edi,eax
  411d69:	je     0x411dc2
  411d6b:	ret    0x16e0
  411d6e:	dec    edi
  411d6f:	mov    esi,DWORD PTR [edx+esi*1+0x1a705308]
  411d76:	cmc    
  411d77:	call   DWORD PTR [edi]
  411d79:	nop
  411d7a:	mov    edi,0x16c880
  411d7f:	mov    eax,0x3d43e0
  411d84:	adc    eax,DWORD PTR [edi]
  411d86:	test   DWORD PTR [ebx],edx
  411d88:	sbb    edx,edi
  411d8a:	add    al,0x83
  411d8c:	dec    ebx
  411d8d:	adc    edi,DWORD PTR [ecx]
  411d8f:	test   al,0xc5
  411d91:	dec    edi
  411d92:	add    BYTE PTR [edx+0x37],dh
  411d95:	scas   eax,DWORD PTR es:[edi]
  411d96:	test   al,0x4d
  411d98:	add    BYTE PTR [eax],al
  411d9a:	fst    DWORD PTR [esi]
  411d9c:	xchg   DWORD PTR [eax],edx
  411d9e:	add    DWORD PTR [ecx],eax
  411da0:	jg     0x411d62
  411da2:	mov    WORD PTR [edi+0x3104bf],cs
  411da8:	sub    al,0x4e
  411daa:	lock cld 
  411dac:	jae    0x411d9b
  411dae:	cli    
  411daf:	mov    esi,0x66020008
  411db4:	pusha  
  411db5:	and    al,0x39
  411db7:	push   cs
  411db8:	in     al,dx
  411db9:	call   0x8040d707
  411dbe:	jb     0x411e3c
  411dc0:	add    al,0x0
  411dc2:	xor    DWORD PTR [ebp+0x2c],esi
  411dc5:	dec    ebx
  411dc6:	jo     0x411dc3
  411dc8:	mov    WORD PTR [ecx],ss
  411dca:	mov    eax,0x35c184eb
  411dcf:	jle    0x411d95
  411dd1:	add    al,0x54
  411dd3:	inc    ebx
  411dd4:	dec    ebp
  411dd5:	aas    
  411dd6:	xor    ebp,ebp
  411dd8:	lock mov eax,0x4108d9
  411dde:	stos   BYTE PTR es:[edi],al
  411ddf:	out    dx,al
  411de0:	mov    dl,BYTE PTR [eax]
  411de2:	mov    dl,0x3e
  411de4:	or     BYTE PTR [ecx+0x283ef7f1],al
  411dea:	ja     0x411da8
  411dec:	add    DWORD PTR [edx-0x32],esi
  411def:	mov    dh,0xc3
  411df1:	add    al,0x31
  411df3:	or     BYTE PTR [edx+0x1c4fb2e3],0x51
  411dfa:	pop    edi
  411dfb:	jbe    0x411e5a
  411dfd:	or     BYTE PTR [eax],al
  411dff:	add    BYTE PTR [edx+0x6c8b0d88],ch
  411e05:	xor    edx,DWORD PTR [ecx+edx*2-0x67]
  411e09:	adc    ah,bh
  411e0b:	std    
  411e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0d:	dec    eax
  411e0e:	inc    ebp
  411e0f:	lock add DWORD PTR [eax+0x43],esp
  411e13:	or     BYTE PTR [ecx],al
  411e15:	add    esp,esp
  411e17:	clc    
  411e18:	mov    fs,edx
  411e1a:	mov    es,WORD PTR [ebx-0x67]
  411e1d:	mov    eax,DWORD PTR [ecx+eax*8-0x13c5ebdf]
  411e24:	pusha  
  411e25:	in     al,dx
  411e26:	fiadd  WORD PTR [eax]
  411e28:	fdivr  DWORD PTR [ebx-0x68cebcdd]
  411e2e:	and    al,0xfc
  411e30:	add    esp,edi
  411e32:	inc    esp
  411e33:	sti    
  411e34:	push   esp
  411e35:	jmp    0x533eca89
  411e3a:	out    0x8e,eax
  411e3c:	repnz jecxz 0x411e56
  411e3f:	in     al,dx
  411e40:	int3   
  411e41:	jmp    0x432b:0xbbc800a6
  411e48:	xor    DWORD PTR [edi-0x37e13d4],edx
  411e4e:	or     bl,bh
  411e50:	sbb    al,0xe9
  411e52:	jb     0x411eb2
  411e54:	adc    eax,0xb6f4249d
  411e59:	dec    esi
  411e5a:	jae    0x411de6
  411e5c:	push   0xffffffe4
  411e5e:	bound  ebx,QWORD PTR [esi+0x5]
  411e61:	popf   
  411e62:	lods   al,BYTE PTR ds:[esi]
  411e63:	jmp    0x411e65
  411e65:	add    BYTE PTR [esi-0x7575acb2],ch
  411e6b:	cld    
  411e6c:	mov    edi,0xe7537a2b
  411e71:	mov    ?,WORD PTR [edx-0x14]
  411e74:	xchg   edi,eax
  411e75:	jmp    0x411e8f
  411e77:	jmp    0x411eb7
  411e79:	add    BYTE PTR [eax+0x3c],bl
  411e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7d:	inc    edx
  411e7e:	xor    DWORD PTR [edi-0x39e0c5c],edx
  411e84:	aam    0xfa
  411e86:	mov    ah,0xe8
  411e88:	(bad)  
  411e89:	sub    edi,edx
  411e8b:	push   edx
  411e8c:	out    0x8e,eax
  411e8e:	repnz sti 
  411e90:	mov    bh,0xeb
  411e92:	cmp    al,0xeb
  411e94:	push   es
  411e95:	add    BYTE PTR [ebx-0xd7404ba],ch
  411e9b:	jecxz  0x411e9d
  411e9d:	pusha  
  411e9e:	out    dx,eax
  411e9f:	out    0x87,eax
  411ea1:	mov    WORD PTR [edx-0x5522a466],es
  411ea7:	push   esp
  411ea8:	call   0x8821171d
  411ead:	xor    al,0x55
  411eaf:	jnp    0x411e59
  411eb1:	sbb    al,0xf4
  411eb3:	adc    ecx,DWORD PTR [ebx-0x17bcaad4]
  411eb9:	ror    BYTE PTR [ebp-0x1a],0xfd
  411ebd:	inc    ecx
  411ebe:	xchg   ebp,eax
  411ebf:	pop    esp
  411ec0:	aas    
  411ec1:	jmp    0x3a317367
  411ec6:	inc    ebp
  411ec7:	cli    
  411ec8:	clc    
  411ec9:	sahf   
  411eca:	add    BYTE PTR [eax],al
  411ecc:	cs jge 0x411e77
  411ecf:	and    al,0x6c
  411ed1:	adc    al,0x8b
  411ed3:	and    al,0xd
  411ed5:	inc    ebp
  411ed6:	call   0xfe2b347f
  411edb:	pop    ss
  411edc:	mov    al,ds:0x1519f853
  411ee1:	xchg   ecx,eax
  411ee2:	clc    
  411ee3:	outs   dx,BYTE PTR ds:[esi]
  411ee4:	(bad)  
  411ee5:	fwait
  411ee6:	inc    esi
  411ee7:	icebp  
  411ee8:	bound  ebx,QWORD PTR [ebx-0x37aa6bd]
  411eee:	jne    0x411f41
  411ef0:	out    0xe9,al
  411ef2:	and    DWORD PTR [edi],0xac8b3e45
  411ef8:	retf   0xe844
  411efb:	ror    edx,cl
  411efd:	jmp    0x8facb6ff
  411f02:	in     al,dx
  411f03:	mov    eax,?
  411f05:	sbb    al,0x0
  411f07:	mov    esp,0xd7ff3a5
  411f0c:	shl    edi,0xfd
  411f0f:	jmp    0x62965d17
  411f14:	adc    BYTE PTR [ecx+ecx*4],bl
  411f17:	add    BYTE PTR ds:0x18858917,dl
  411f1d:	out    0xfb,al
  411f1f:	jmp    FWORD PTR [eax-0x7001ab05]
  411f25:	out    0x6a,al
  411f27:	add    al,ah
  411f29:	aaa    
  411f2a:	dec    esi
  411f2b:	inc    ecx
  411f2c:	pop    eax
  411f2d:	sti    
  411f2e:	in     eax,0xfd
  411f30:	add    BYTE PTR [eax],al
  411f32:	jg     0x411f1a
  411f34:	sub    eax,0x2894d2d2
  411f39:	dec    esi
  411f3a:	or     DWORD PTR [eax],edx
  411f3c:	mov    BYTE PTR [edx+ecx*2],al
  411f3f:	push   ebp
  411f40:	jg     0x411f3c
  411f42:	pusha  
  411f43:	addr16 in eax,dx
  411f45:	(bad)  
  411f46:	aad    0x6a
  411f48:	(bad)  
  411f49:	dec    DWORD PTR [edi+0x18000010]
  411f4f:	cli    
  411f50:	push   esp
  411f51:	mov    eax,ecx
  411f53:	xchg   edi,eax
  411f54:	xor    DWORD PTR [esi+ebp*4-0x1b],0xf9ba31fb
  411f5c:	xor    BYTE PTR [ebx-0x1a06b],cl
  411f62:	jg     0x411efc
  411f64:	cmp    DWORD PTR [esi+ecx*4-0x1a],0x5f85fffb
  411f6c:	(bad)  
  411f6d:	dec    DWORD PTR [edi+0x7e7c899a]
  411f73:	out    0xfb,al
  411f75:	ldmxcsr DWORD PTR [ecx]
  411f78:	jg     0x411f5a
  411f7a:	out    dx,eax
  411f7b:	cdq    
  411f7c:	mov    ecx,0xfbe60e7c
  411f81:	cmovbe esp,DWORD PTR [esi]
  411f84:	sub    eax,0xc61050f8
  411f89:	add    ecx,eax
  411f8b:	push   ecx
  411f8c:	inc    edx
  411f8d:	adc    DWORD PTR [edx+0xb],0x79
  411f91:	add    eax,0x3a7d31
  411f96:	add    BYTE PTR [eax],al
  411f98:	and    al,0x2f
  411f9a:	push   ebx
  411f9b:	push   esi
  411f9c:	mov    DWORD PTR [ebx+edi*8-0x57867103],ebx
  411fa3:	js     0x411f2c
  411fa5:	(bad)  
  411fa7:	add    BYTE PTR [ecx-0x318cfe5f],dh
  411fad:	jns    0x411f6c
  411faf:	js     0x412020
  411fb1:	(bad)  
  411fb4:	fcomp  QWORD PTR [esi-0x73]
  411fb7:	xor    DWORD PTR [ecx+0x1fdfbd6],0xffffffc5
  411fbe:	(bad)  
  411fbf:	sti    
  411fc0:	dec    esi
  411fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc2:	pop    ebx
  411fc3:	pop    esi
  411fc4:	jmp    0x1f4:0x735bf073
  411fcb:	push   ebx
  411fcc:	test   al,0x97
  411fce:	push   esp
  411fcf:	push   eax
  411fd0:	sbb    BYTE PTR ds:0x72395387,0x5d
  411fd7:	or     al,0xaa
  411fd9:	add    BYTE PTR [edi+ebp*1],dl
  411fdc:	call   0xb9502842
  411fe1:	das    
  411fe2:	or     eax,0x12f7bbf8
  411fe7:	mov    BYTE PTR ds:0xf88142c4,dh
  411fed:	jecxz  0x41206c
  411fef:	jmp    0x411f73
  411ff1:	test   eax,0x3eebace9
  411ff6:	sti    
  411ff7:	das    
  411ff8:	add    ecx,DWORD PTR [ecx+0x10]
  411ffb:	sbb    al,BYTE PTR [eax]
  411ffd:	add    BYTE PTR [ebx+0x30322ff7],ch
  412003:	arpl   WORD PTR [ecx],ax
  412005:	inc    edx
  412006:	mov    dl,0x21
  412008:	or     al,0x7c
  41200a:	shr    esp,0xcf
  41200d:	mov    ch,BYTE PTR [ebp+0x14]
  412010:	cld    
  412011:	sti    
  412012:	mov    ecx,0xb041d910
  412017:	jmp    0x8ab2:0x46a07fdf
  41201e:	test   DWORD PTR [edi+0x29],eax
  412021:	adc    BYTE PTR [ecx],dh
  412023:	adc    al,0xe7
  412025:	add    esi,DWORD PTR [ecx]
  412027:	adc    al,0xe7
  412029:	add    esi,DWORD PTR [ecx]
  41202b:	adc    al,0xe7
  41202d:	add    esi,DWORD PTR [ecx]
  41202f:	adc    al,0xe7
  412031:	add    esi,DWORD PTR [ecx]
  412033:	adc    al,0xe7
  412035:	add    esi,DWORD PTR [ecx]
  412037:	adc    al,0xe7
  412039:	add    esi,DWORD PTR [ecx]
  41203b:	adc    al,0xe7
  41203d:	add    esi,DWORD PTR [ecx]
  41203f:	adc    al,0xe7
  412041:	add    esi,DWORD PTR [ecx]
  412043:	adc    al,0xe7
  412045:	add    esi,DWORD PTR [ecx]
  412047:	adc    al,0xe7
  412049:	add    esi,DWORD PTR [ecx]
  41204b:	adc    al,0xe7
  41204d:	add    esi,DWORD PTR [ecx]
  41204f:	adc    al,0xe7
  412051:	add    esi,DWORD PTR [ecx]
  412053:	adc    al,0xe7
  412055:	add    esi,DWORD PTR [ecx]
  412057:	adc    al,0xe7
  412059:	add    esi,DWORD PTR [ecx]
  41205b:	adc    al,0xe7
  41205d:	add    esi,DWORD PTR [ecx]
  41205f:	adc    al,0xe7
  412061:	add    eax,DWORD PTR [eax]
  412063:	add    BYTE PTR [ecx],dh
  412065:	adc    al,0xe7
  412067:	add    esi,DWORD PTR [ecx]
  412069:	adc    al,0xe7
  41206b:	add    esi,DWORD PTR [ecx]
  41206d:	adc    al,0xe7
  41206f:	add    esi,DWORD PTR [ecx]
  412071:	adc    al,0xe7
  412073:	add    esi,DWORD PTR [ecx]
  412075:	adc    al,0xe7
  412077:	add    esi,DWORD PTR [ecx]
  412079:	adc    al,0xe7
  41207b:	add    esi,DWORD PTR [ecx]
  41207d:	adc    al,0xe7
  41207f:	add    esi,DWORD PTR [ecx]
  412081:	adc    al,0xe7
  412083:	add    esi,DWORD PTR [ecx]
  412085:	adc    al,0xe7
  412087:	add    esi,DWORD PTR [ecx]
  412089:	adc    al,0x0
  41208b:	jmp    0xe94134c2
  412090:	xor    dl,BYTE PTR [eax+eax*1]
  412093:	jmp    0xe94134ca
  412098:	xor    dl,BYTE PTR [eax+eax*1]
  41209b:	in     al,0x28
  41209d:	sbb    DWORD PTR [edx],ecx
  41209f:	mov    BYTE PTR [edx],al
  4120a1:	pop    eax
  4120a2:	mov    edx,DWORD PTR [bp+si+0x5e]
  4120a6:	das    
  4120a7:	iret   
  4120a8:	inc    edx
  4120a9:	xor    eax,0x344fc920
  4120ae:	and    BYTE PTR [ebp+0xa],dh
  4120b1:	jno    0x4120d3
  4120b3:	pop    edx
  4120b4:	fadd   DWORD PTR [esp+ebp*2+0x4d]
  4120b8:	shl    BYTE PTR [ecx+0x20],1
  4120bb:	pop    ebp
  4120bc:	int    0x70
  4120be:	and    BYTE PTR [ebx-0x30],cl
  4120c1:	pop    edi
  4120c2:	je     0x412110
  4120c4:	(bad)  
  4120c5:	xor    edi,DWORD PTR [edx]
  4120c7:	adc    BYTE PTR [eax],al
  4120c9:	add    BYTE PTR [eax],bh
  4120cb:	sbb    al,BYTE PTR [ecx+0x46]
  4120ce:	lds    ebx,FWORD PTR [edx+esi*2+0x40]
  4120d2:	sar    BYTE PTR [ebx+0x74],cl
  4120d5:	leave  
  4120d6:	pop    edx
  4120d7:	jne    0x412100
  4120d9:	leave  
  4120da:	pop    ebp
  4120db:	sub    esi,DWORD PTR [edi]
  4120dd:	ror    DWORD PTR [ecx+0x26],1
  4120e0:	xor    cl,bl
  4120e2:	push   ebp
  4120e3:	xor    al,0x62
  4120e5:	add    BYTE PTR [ebp+0x4e],dl
  4120e8:	ins    DWORD PTR es:[edi],dx
  4120e9:	add    al,0x7f
  4120eb:	jns    0x412150
  4120ed:	pop    es
  4120ee:	push   ebp
  4120ef:	pop    ebx
  4120f0:	(bad)  
  4120f1:	cli    
  4120f2:	xchg   ecx,eax
  4120f3:	jb     0x412121
  4120f5:	or     DWORD PTR [eax+esi*2+0x6c],esi
  4120f9:	or     DWORD PTR [edi+0x7b],edi
  4120fc:	ror    DWORD PTR gs:[esi+0x65],0x20
  412101:	mov    ebx,0x636551
  412106:	mov    ah,BYTE PTR [ebp+0x61]
  412109:	fs ss or eax,0x4cd20d0a
  412110:	imul   esi,DWORD PTR [edx-0x13],0x37
  412114:	outs   dx,BYTE PTR gs:[esi]
  412116:	mov    esi,0xb96d726e
  41211b:	jae    0x412182
  41211d:	outs   dx,DWORD PTR ds:[esi]
  41211e:	mov    dh,0x21
  412120:	and    BYTE PTR [eax-0x44],ch
  412123:	jae    0x412195
  412125:	cmp    ah,BYTE PTR [edi+0x2e]
  412128:	jae    0x4121a1
  41212a:	jmp    FWORD PTR [eiz*2-0x4ffff9e]
  412131:	jae    0x4121a1
  412133:	jae    0x41212c
  412135:	je     0x4121ab
  412137:	ja     0x412132
  412139:	imul   esp,DWORD PTR [ecx+0x2e],0x2f696efb
  412140:	push   ebp
  412141:	adc    DWORD PTR [ecx],ecx
  412143:	or     cl,BYTE PTR [eax+0x17]
  412146:	add    BYTE PTR [eax],al
  412148:	pop    eax
  412149:	pop    ss
  41214a:	add    BYTE PTR [eax],al
  41214c:	pop    eax
  41214d:	pop    ss
  41214e:	add    BYTE PTR [eax],al
  412150:	dec    eax
  412151:	pop    ss
  412152:	add    BYTE PTR [eax],al
  412154:	dec    eax
  412155:	pop    ss
  412156:	add    BYTE PTR [eax],al
  412158:	sbb    BYTE PTR [edi],dl
  41215a:	add    BYTE PTR [eax],al
  41215c:	sbb    BYTE PTR [edi],dl
  41215e:	add    BYTE PTR [eax],al
  412160:	or     BYTE PTR [edi],dl
  412162:	add    BYTE PTR [eax],al
  412164:	or     BYTE PTR [edi],dl
  412166:	add    BYTE PTR [eax],al
  412168:	sbb    BYTE PTR [edi],dl
  41216a:	add    BYTE PTR [eax],al
  41216c:	sbb    BYTE PTR [edi],dl
  41216e:	add    BYTE PTR [eax],al
  412170:	or     BYTE PTR [edi],dl
  412172:	add    BYTE PTR [eax],al
  412174:	or     BYTE PTR [edi],dl
  412176:	add    BYTE PTR [eax],al
  412178:	fcom   DWORD PTR [esi]
  41217a:	add    BYTE PTR [eax],al
  41217c:	fcom   DWORD PTR [esi]
  41217e:	add    BYTE PTR [eax],al
  412180:	xor    DWORD PTR [eax+0x2c4a4eb2],ecx
  412186:	and    BYTE PTR [ebx],ch
  412188:	xor    eax,0xd554cf23
  41218d:	jmp    DWORD PTR [edx-0x7f25f39e]
  412193:	or     DWORD PTR [eax],eax
  412195:	add    BYTE PTR [esi-0x20],bl
  412198:	or     ecx,DWORD PTR [eax]
  41219a:	inc    eax
  41219b:	mov    cl,0xa
  41219d:	push   0x517ba48d
  4121a2:	scas   eax,DWORD PTR es:[edi]
  4121a3:	in     al,dx
  4121a4:	add    DWORD PTR [eax],eax
  4121a6:	xor    ebp,ebp
  4121a8:	add    DWORD PTR [eax],eax
  4121aa:	xor    ebp,ebp
  4121ac:	add    DWORD PTR [eax],eax
  4121ae:	xor    ebp,ebp
  4121b0:	add    DWORD PTR [eax],eax
  4121b2:	xor    ebp,ebp
  4121b4:	add    DWORD PTR [eax],eax
  4121b6:	xor    ebp,ebp
  4121b8:	add    DWORD PTR [eax],eax
  4121ba:	xor    ebp,ebp
  4121bc:	add    DWORD PTR [eax],eax
  4121be:	xor    ebp,ebp
  4121c0:	add    DWORD PTR [eax],eax
  4121c2:	xor    ebp,ebp
  4121c4:	add    DWORD PTR [eax],eax
  4121c6:	xor    ebp,ebp
  4121c8:	add    DWORD PTR [eax],eax
  4121ca:	xor    ebp,ebp
  4121cc:	add    DWORD PTR [eax],eax
  4121ce:	xor    ebp,ebp
  4121d0:	add    DWORD PTR [eax],eax
  4121d2:	xor    ebp,ebp
  4121d4:	add    DWORD PTR [eax],eax
  4121d6:	xor    ebp,ebp
  4121d8:	add    DWORD PTR [eax],eax
  4121da:	xor    ebx,ebp
  4121dc:	add    DWORD PTR [eax],eax
  4121de:	xor    ebx,ebp
  4121e0:	add    DWORD PTR [eax],eax
  4121e2:	xor    ebx,ebp
  4121e4:	add    DWORD PTR [eax],eax
  4121e6:	xor    ebx,ebp
  4121e8:	add    DWORD PTR [eax],eax
  4121ea:	xor    ebx,ebp
  4121ec:	add    DWORD PTR [eax],eax
  4121ee:	xor    ebx,ebp
  4121f0:	add    DWORD PTR [eax],eax
  4121f2:	xor    ebx,ebp
  4121f4:	add    DWORD PTR [eax],eax
  4121f6:	xor    ebx,ebp
  4121f8:	add    DWORD PTR [eax],eax
  4121fa:	add    BYTE PTR [eax],al
  4121fc:	xor    DWORD PTR [edi+eiz*8],edx
  4121ff:	add    esi,DWORD PTR [ecx]
  412201:	adc    al,0xe7
  412203:	add    esi,DWORD PTR [ecx]
  412205:	adc    al,0xe7
  412207:	add    esi,DWORD PTR [ecx]
  412209:	adc    al,0xe7
  41220b:	add    esi,DWORD PTR [ecx]
  41220d:	adc    al,0xe7
  41220f:	add    esi,DWORD PTR [ecx]
  412211:	adc    al,0xe7
  412213:	add    esi,DWORD PTR [ecx]
  412215:	adc    al,0xe7
  412217:	add    esi,DWORD PTR [ecx]
  412219:	adc    al,0xe7
  41221b:	add    esi,DWORD PTR [ecx]
  41221d:	adc    al,0xe7
  41221f:	add    esi,DWORD PTR [ecx]
  412221:	adc    al,0xe7
  412223:	add    esi,DWORD PTR [ecx]
  412225:	adc    al,0xe7
  412227:	add    esi,DWORD PTR [ecx]
  412229:	adc    al,0xe7
  41222b:	add    esi,DWORD PTR [ecx]
  41222d:	adc    al,0xe7
  41222f:	add    esi,DWORD PTR [ecx]
  412231:	adc    al,0xe7
  412233:	add    esi,DWORD PTR [ecx]
  412235:	adc    al,0xe7
  412237:	add    esi,DWORD PTR [ecx]
  412239:	adc    al,0xe7
  41223b:	add    esi,DWORD PTR [ecx]
  41223d:	adc    al,0xe7
  41223f:	add    esi,DWORD PTR [ecx]
  412241:	adc    al,0xe7
  412243:	add    esi,DWORD PTR [ecx]
  412245:	adc    al,0xe7
  412247:	add    esi,DWORD PTR [ecx]
  412249:	adc    al,0xe7
  41224b:	add    esi,DWORD PTR [ecx]
  41224d:	adc    al,0xe7
  41224f:	add    esi,DWORD PTR [ecx]
  412251:	adc    al,0xe7
  412253:	add    esi,DWORD PTR [ecx]
  412255:	adc    al,0xe7
  412257:	add    esi,DWORD PTR [ecx]
  412259:	adc    al,0xe7
  41225b:	add    esi,DWORD PTR [ecx]
  41225d:	adc    al,0xe7
  41225f:	add    eax,DWORD PTR [eax]
  412261:	add    BYTE PTR [ecx],dh
  412263:	adc    al,0xe7
  412265:	add    esi,DWORD PTR [ecx]
  412267:	adc    al,0xe7
  412269:	add    esi,DWORD PTR [ecx]
  41226b:	adc    al,0xe7
  41226d:	add    esi,DWORD PTR [ecx]
  41226f:	adc    al,0xe7
  412271:	add    esi,DWORD PTR [ecx]
  412273:	adc    al,0xe7
  412275:	add    esi,DWORD PTR [ecx]
  412277:	adc    al,0x0
  412279:	jmp    0xe94136b0
  41227e:	xor    dl,BYTE PTR [eax+eax*1]
  412281:	jmp    0xe94136b8
  412286:	xor    dl,BYTE PTR [eax+eax*1]
  412289:	jmp    0xe94136c0
  41228e:	xor    dl,BYTE PTR [eax+eax*1]
  412291:	jmp    0xe94136c8
  412296:	xor    dl,BYTE PTR [eax+eax*1]
  412299:	jmp    0xe94136d0
  41229e:	xor    dl,BYTE PTR [eax+eax*1]
  4122a1:	jmp    0xe94136d8
  4122a6:	xor    dl,BYTE PTR [eax+eax*1]
  4122a9:	fcomp  DWORD PTR [ebx+eiz*1+0x34]
  4122ad:	aam    0x40
  4122af:	adc    al,0x70
  4122b1:	mov    ch,bh
  4122b3:	bound  esi,QWORD PTR [ebp-0x72]
  4122b6:	add    al,0x78
  4122b8:	add    BYTE PTR [ecx+0xa],bh
  4122bb:	bound  ecx,QWORD PTR fs:[ebx+0x4c757132]
  4122c2:	jecxz  0x41232b
  4122c4:	ja     0x4122af
  4122c6:	add    BYTE PTR [eax],al
  4122c8:	and    eax,0x201d3126
  4122cd:	adc    al,0x6a
  4122cf:	inc    esp
  4122d0:	ret    0x7164
  4122d3:	jmp    0xf57248d5
  4122d8:	add    DWORD PTR [edx],ebp
  4122da:	xor    eax,0x323132f1
  4122df:	cli    
  4122e0:	pop    esi
  4122e1:	adc    al,0x5f
  4122e3:	or     edx,DWORD PTR [edx+0x32da322f]
  4122e9:	jo     0x41234e
  4122eb:	sbb    eax,0xff677388
  4122f0:	xor    ch,BYTE PTR [eax+0x63]
  4122f3:	add    BYTE PTR [ebx],cl
  4122f5:	jo     0x4122f7
  4122f7:	ins    BYTE PTR es:[edi],dx
  4122f8:	das    
  4122f9:	outs   dx,BYTE PTR ds:[esi]
  4122fa:	popa   
  4122fb:	add    BYTE PTR [ecx-0x17ffd0db],bh
  412301:	js     0x412372
  412303:	jae    0x41230c
  412305:	ja     0x412379
  412307:	cmp    DWORD PTR fs:[eax],ebx
  41230a:	push   0x6b77ec65
  41230f:	add    BYTE PTR [ebp-0xa94918a],cl
  412315:	pusha  
  412316:	add    BYTE PTR [edx+edi*2+0x78],ah
  41231a:	arpl   WORD PTR [edi-0x12],bp
  41231d:	adc    esi,DWORD PTR [edx+esi*2-0x1b]
  412321:	bound  esi,QWORD PTR [esi+ebp*2-0x41]
  412325:	sub    BYTE PTR [eax],al
  412327:	xor    DWORD PTR [ecx+0x28],edi
  41232a:	sub    eax,0x79000031
  41232f:	adc    esp,DWORD PTR [ebp+0x6c]
  412332:	(bad)  
  412334:	popa   
  412335:	jns    0x4122d6
  412337:	add    BYTE PTR fs:[ecx],dh
  41233a:	mov    edx,0xb6353422
  41233f:	add    BYTE PTR cs:[ebx-0x50],dh
  412343:	js     0x4123a9
  412345:	outs   dx,DWORD PTR ds:[esi]
  412346:	pop    es
  412347:	sbb    BYTE PTR ds:0x31243b32,ch
  41234d:	ss aaa 
  41234f:	and    BYTE PTR ds:0x726ffb00,dh
  412355:	imul   ecx,DWORD PTR [ebx],0x5730064
  41235b:	jbe    0x4123cc
  41235d:	push   0x6175f1
  412362:	ins    DWORD PTR es:[edi],dx
  412363:	jns    0x4123d4
  412365:	je     0x41239c
  412367:	bound  eax,QWORD PTR [eax]
  412369:	arpl   WORD PTR [edi],bp
  41236b:	ins    DWORD PTR es:[edi],dx
  41236c:	jo     0x4123e3
  41236e:	xor    DWORD PTR [ecx],eax
  412370:	pop    edi
  412371:	jb     0x4123a4
  412373:	std    
  412374:	jno    0x4123dd
  412376:	xchg   edi,eax
  412377:	or     bl,BYTE PTR [edi+0x71]
  41237a:	sub    ch,0x6d
  41237d:	mov    cs,WORD PTR ds:0x725f
  412382:	xor    DWORD PTR [edi],edx
  412384:	gs ins DWORD PTR es:[edi],dx
  412386:	pop    ebp
  412387:	retf   
  412388:	fs ins BYTE PTR es:[edi],dx
  41238a:	dec    ebp
  41238b:	in     eax,dx
  41238c:	outs   dx,BYTE PTR fs:[esi]
  41238e:	dec    esi
  41238f:	shl    BYTE PTR [ebp+0x0],1
  412392:	add    BYTE PTR [eax],al
  412394:	pop    ebx
  412395:	fdiv   DWORD PTR [edx+0x73]
  412398:	inc    edx
  412399:	fadd   QWORD PTR [ecx]
  41239b:	das    
  41239c:	add    ebx,edx
  41239e:	xor    al,0x32
  4123a0:	add    ch,ch
  4123a2:	outs   dx,BYTE PTR ds:[esi]
  4123a3:	push   0x7660a910
  4123a8:	or     al,0x7b
  4123aa:	add    DWORD PTR [esi+0x23],esp
  4123ad:	cwde   
  4123ae:	pusha  
  4123af:	fs push es
  4123b1:	cwde   
  4123b2:	add    DWORD PTR [ecx+0x18],ebp
  4123b5:	popa   
  4123b6:	arpl   WORD PTR gs:[ebx],ax
  4123b9:	in     eax,dx
  4123ba:	fs jno 0x4123d2
  4123bd:	xchg   edi,eax
  4123be:	add    DWORD PTR [ecx+0x6],esi
  4123c1:	mov    ah,BYTE PTR [edx+0x63]
  4123c4:	jecxz  0x4123b2
  4123c6:	jb     0x41243b
  4123c8:	loope  0x412419
  4123ca:	jb     0x412437
  4123cc:	ror    BYTE PTR [esi+0x4],1
  4123cf:	imul   ecx,eax,0x49
  4123d2:	ins    BYTE PTR es:[edi],dx
  4123d3:	pop    edi
  4123d4:	aam    0x20
  4123d6:	add    al,0x61
  4123d8:	(bad)  [edi+0x5d]
  4123db:	jno    0x4123b1
  4123dd:	in     al,dx
  4123de:	push   0x6e
  4123e0:	mov    ebp,0x946e724f
  4123e5:	daa    
  4123e6:	add    al,0x6a
  4123e8:	xchg   esi,eax
  4123e9:	adc    al,0x1a
  4123eb:	ins    BYTE PTR es:[edi],dx
  4123ec:	mov    ds:0xa25de773,al
  4123f1:	jno    0x4123f5
  4123f3:	jnp    0x412391
  4123f5:	addr16 out 0x61,eax
  4123f8:	add    BYTE PTR [eax],al
  4123fa:	xchg   ebp,eax
  4123fb:	ja     0x4123f7
  4123fd:	jo     0x412391
  4123ff:	js     0x4123e8
  412401:	popa   
  412402:	push   esi
  412403:	popa   
  412404:	or     al,0x62
  412406:	mov    ?,WORD PTR [eax-0x5]
  412409:	add    esp,DWORD PTR [eax+0x68]
  41240c:	enter  0x6471,0x73
  412410:	fnstenv [eax+0x31]
  412413:	and    al,0x17
  412415:	xor    al,0x1
  412417:	and    al,0x17
  412419:	add    al,0x41
  41241b:	addr16 mov ecx,0xe7774d73
  412421:	imul   eax,DWORD PTR [edx+eiz*2-0x35],0xc5141f62
  412429:	bound  ecx,QWORD PTR [esi]
  41242b:	push   0x6720038f
  412430:	mov    WORD PTR [esi+0x12],fs
  412433:	(bad)  
  412434:	out    0x62,eax
  412436:	add    BYTE PTR [ebx+edi*2+0x5e],ch
  41243a:	(bad)  
  41243b:	adc    ecx,DWORD PTR [ecx-0x7b97ff92]
  412441:	jno    0x412474
  412443:	ins    BYTE PTR es:[edi],dx
  412444:	mov    WORD PTR [edx-0x19],fs
  412447:	jbe    0x4124c6
  412449:	add    esp,ecx
  41244b:	jbe    0x4124a4
  41244d:	je     0x412421
  41244f:	popa   
  412450:	out    0x2c,eax
  412452:	sbb    al,0x25
  412454:	push   ds
  412455:	sub    eax,0x6be72504
  41245a:	ret    0x3b6d
  41245d:	pop    edi
  41245e:	add    BYTE PTR [eax],al
  412460:	ret    
  412461:	adc    ecx,DWORD PTR [ebx+0x65]
  412464:	mov    edi,0xaa450076
  412469:	adc    al,0x5f
  41246b:	aas    
  41246c:	xchg   ecx,eax
  41246d:	bound  esp,QWORD PTR [ebx+0x1e]
  412470:	xor    eax,0x8e0e6868
  412475:	cmp    eax,0x6e93e971
  41247a:	gs add al,0x99
  41247d:	arpl   WORD PTR [eax],ax
  41247f:	or     cl,BYTE PTR [ebp-0x75f28dc3]
  412485:	jno    0x412487
  412487:	or     eax,0x4676e52
  41248c:	pop    ecx
  41248d:	adc    al,0x2f
  41248f:	sbb    BYTE PTR [edx],ah
  412491:	sub    eax,0x6e77d300
  412496:	outs   dx,BYTE PTR ds:[esi]
  412497:	shr    BYTE PTR [ecx+esi*2+0x72],0xe9
  41249c:	inc    ecx
  41249d:	jne    0x41250d
  41249f:	into   
  4124a0:	push   esi
  4124a1:	jno    0x4124a3
  4124a3:	rcl    DWORD PTR [ebx+0x6e],1
  4124a6:	outs   dx,BYTE PTR ds:[esi]
  4124a7:	enter  0x141a,0x6f
  4124ab:	enter  0x6728,0x71
  4124af:	mov    eax,ds:0x995f6c32
  4124b4:	and    ah,BYTE PTR [ebp+0x0]
  4124b7:	test   BYTE PTR [ebx],dl
  4124b9:	push   0x140a8072
  4124be:	jo     0x412448
  4124c0:	add    DWORD PTR [ebx+0x0],esp
  4124c3:	mov    BYTE PTR [eax],al
  4124c5:	add    BYTE PTR [ebx],dl
  4124c7:	cmp    eax,0x13d3885f
  4124cc:	ss mov ah,0x16
  4124cf:	and    esi,DWORD PTR [edx]
  4124d1:	sbb    BYTE PTR ds:0xd3486b3d,dh
  4124d7:	ja     0x412538
  4124d9:	jmp    0x41b593ae
  4124de:	in     al,0x6d
  4124e0:	add    BYTE PTR gs:[eax+0x69],cl
  4124e4:	outs   dx,BYTE PTR gs:[esi]
  4124e6:	out    dx,eax
  4124e7:	push   0x72
  4124e9:	add    BYTE PTR [ebp+0x77],dh
  4124ec:	je     0x412556
  4124ee:	ins    DWORD PTR es:[edi],dx
  4124ef:	bound  eax,QWORD PTR [eax]
  4124f1:	jae    0x412539
  4124f3:	ja     0x412560
  4124f5:	jo     0x412548
  4124f7:	adc    BYTE PTR [edx+0x65],ch
  4124fa:	sub    esp,DWORD PTR [ebx+0x65]
  4124fd:	arpl   WORD PTR [ecx],di
  4124ff:	adc    BYTE PTR [ebx+0x65],dh
  412502:	and    al,0x73
  412504:	imul   ebp,DWORD PTR [ebp+0x2d],0x10
  412508:	jo     0x412579
  41250a:	xor    ebp,DWORD PTR [ebp+0x69]
  41250d:	outs   dx,DWORD PTR ds:[esi]
  41250e:	out    0x17,al
  412510:	gs ins BYTE PTR es:[edi],dx
  412512:	pop    es
  412513:	pop    esi
  412514:	popa   
  412515:	jns    0x4124fe
  412517:	pop    esp
  412518:	sub    eax,0x2d212900
  41251d:	xor    DWORD PTR [ecx],ebp
  41251f:	adc    BYTE PTR [ecx+0x75],ch
  412522:	jnp    0x412587
  412524:	pop    ebp
  412525:	outs   dx,BYTE PTR ds:[esi]
  412526:	out    dx,eax
  412527:	pop    ss
  412528:	push   0x74000065
  41252d:	imul   esp,DWORD PTR [di-0x68],0xbc737139
  412535:	cmp    BYTE PTR [esi+0x0],ch
  412538:	ret    0x6f70
  41253b:	ins    DWORD PTR es:[edi],dx
  41253c:	mov    cl,0x75
  41253e:	popa   
  41253f:	add    BYTE PTR [edi],al
  412541:	popa   
  412542:	pop    ebp
  412543:	outs   dx,BYTE PTR ds:[esi]
  412544:	scas   eax,DWORD PTR es:[edi]
  412545:	ins    BYTE PTR es:[edi],dx
  412546:	add    BYTE PTR [ebp+ebp*4+0x62],dh
  41254a:	je     0x4125b5
  41254c:	mov    dh,0x6e
  41254e:	add    BYTE PTR [ecx-0x18],ah
  412551:	data16 ins BYTE PTR es:[edi],dx
  412553:	gs dec eax
  412555:	je     0x4125bc
  412557:	arpl   WORD PTR [eax],ax
  412559:	ins    DWORD PTR es:[edi],dx
  41255a:	ins    BYTE PTR es:[edi],dx
  41255b:	ins    BYTE PTR es:[edi],dx
  41255c:	xor    DWORD PTR [eax+0x4],ecx
  41255f:	jo     0x41252d
  412561:	dec    ebx
  412562:	arpl   WORD PTR gs:[ecx],si
  412565:	push   ds
  412566:	addr16 popa 
  412568:	ret    
  412569:	dec    edi
  41256a:	js     0x41256c
  41256c:	pusha  
  41256d:	in     eax,dx
  41256e:	push   0x72
  412570:	nop
  412571:	dec    esi
  412572:	add    BYTE PTR [bp+0x6004],ah
  412577:	ins    BYTE PTR es:[edi],dx
  412578:	mov    BYTE PTR [edi+ebx*2],cl
  41257b:	add    BYTE PTR [eax-0x73899eef],bl
  412581:	add    al,0x61
  412583:	jae    0x4125c8
  412585:	in     eax,dx
  412586:	pop    edi
  412587:	addr16 xchg edx,eax
  412589:	or     ah,BYTE PTR [eax+0x63]
  41258c:	xor    DWORD PTR [ebx+0x3637],ebx
  412592:	pop    ds
  412593:	mov    ds:0xb84c0037,eax
  412598:	addr16 dec ax
  41259b:	retf   
  41259c:	add    DWORD PTR [ebp+0x50],esp
  41259f:	mov    ecx,0xc4507568
  4125a4:	add    DWORD PTR [esi+0x44],esp
  4125a7:	into   
  4125a8:	pop    esi
  4125a9:	ja     0x4125f1
  4125ab:	mov    al,ds:0x9e100034
  4125b0:	jbe    0x41261a
  4125b2:	push   ss
  4125b3:	cdq    
  4125b4:	push   0x598c0900
  4125b9:	pop    edi
  4125ba:	or     DWORD PTR [ecx+eax*1+0x71921e70],ecx
  4125c1:	add    BYTE PTR [ebx],dl
  4125c3:	pop    ecx
  4125c4:	push   0x5f840271
  4125c9:	xor    DWORD PTR gs:[edi-0x7126a0a3],ecx
  4125d0:	pop    ebp
  4125d1:	pop    edi
  4125d2:	fldlg2 
  4125d4:	pusha  
  4125d5:	ja     0x4125b9
  4125d7:	adc    edx,DWORD PTR [edi+0x63]
  4125da:	shl    BYTE PTR [eax+0x18],1
  4125dd:	add    al,0xda
  4125df:	je     0x41263c
  4125e1:	js     0x4125bc
  4125e3:	jo     0x41263b
  4125e5:	add    al,0xd0
  4125e7:	je     0x41263e
  4125e9:	arpl   bp,cx
  4125eb:	je     0x4125d4
  4125ed:	je     0x412585
  4125ef:	push   0x14a3673d
  4125f4:	cmp    DWORD PTR [ecx+0x0],esp
  4125f7:	add    BYTE PTR [ebx+0x3178196f],dl
  4125fd:	jb     0x41260d
  4125ff:	jbe    0x412593
  412601:	bound  ecx,QWORD PTR [esi+esi*2]
  412604:	xor    DWORD PTR [ebx+0x1a],esi
  412607:	push   0x40f7197
  41260c:	xor    DWORD PTR [ebx+0xa],0x5c
  412610:	push   edx
  412611:	push   0x6b8675e7
  412616:	std    
  412617:	gs dec esp
  412619:	popa   
  41261a:	out    0x68,eax
  41261c:	bound  ebp,QWORD PTR [ebx-0x2d]
  41261f:	bound  eax,QWORD PTR [ebx+0x14]
  412622:	xlat   BYTE PTR ds:[ebx]
  412623:	data16 pushw 0xffd4
  412627:	ja     0x41265a
  412629:	jbe    0x4125f3
  41262b:	ja     0x412677
  41262d:	jae    0x4125fc
  41262f:	add    edx,DWORD PTR [eax]
  412631:	imul   eax,esi,0xe76f0e5c
  412637:	gs (bad) 
  412639:	push   0xffffff93
  41263b:	pushw  ds
  41263d:	adc    al,0x9a
  41263f:	pusha  
  412640:	adc    BYTE PTR [ebp-0x74],dh
  412643:	jne    0x41269b
  412645:	adc    al,0x7c
  412647:	pop    edx
  412648:	adc    BYTE PTR [ebp-0x74],ch
  41264b:	push   0x31
  41264d:	jbe    0x4125df
  41264f:	ja     0x412623
  412651:	data16 add BYTE PTR [edx+esi*1-0x1829c94],cl
  412659:	data16 das 
  41265b:	jmp    0x6d102660
  412660:	addr16 dec edi
  412662:	(bad)  
  412663:	ins    BYTE PTR es:[edi],dx
  412664:	add    BYTE PTR [ebp-0x2e],cl
  412667:	push   0x6d
  412669:	push   ebp
  41266a:	rcl    BYTE PTR [ebx],cl
  41266c:	jno    0x4126b6
  41266e:	(bad)  
  41266f:	cmp    BYTE PTR [esi+0x35],ch
  412672:	lea    edi,[ecx]
  412674:	add    BYTE PTR [edx-0x70],cl
  412677:	ins    DWORD PTR es:[edi],dx
  412678:	jo     0x4126c2
  41267a:	mov    ds:0x92106414,al
  41267f:	ins    DWORD PTR es:[edi],dx
  412680:	ins    DWORD PTR es:[edi],dx
  412681:	setns  BYTE PTR [esp+esi*2]
  412685:	or     BYTE PTR [edx+0x351b6d68],bl
  41268b:	jb     0x4126fa
  41268d:	sti    
  41268e:	jg     0x4126fd
  412690:	add    BYTE PTR [ebx],dl
  412692:	push   eax
  412693:	ins    BYTE PTR es:[edi],dx
  412694:	outs   dx,BYTE PTR ds:[esi]
  412695:	mov    edx,0xfb002223
  41269a:	jnp    0x41270f
  41269c:	push   0x705cc8
  4126a1:	retf   
  4126a2:	outs   dx,BYTE PTR ds:[esi]
  4126a3:	jno    0x412713
  4126a5:	ret    0x1c03
  4126a8:	xor    ch,cl
  4126aa:	inc    edx
  4126ab:	jne    0x41270c
  4126ad:	retf   0x755a
  4126b0:	jno    0x41269b
  4126b2:	adc    eax,0x32c56d67
  4126b7:	jb     0x412725
  4126b9:	mov    esi,0xe9727519
  4126be:	sbb    eax,0x8e6d73
  4126c3:	add    BYTE PTR [esi],al
  4126c5:	jne    0x412739
  4126c7:	jmp    0x88af5fd8
  4126cc:	adc    BYTE PTR [ecx],bh
  4126ce:	add    BYTE PTR [eax],al
  4126d0:	mov    ds:0xeb656975,al
  4126d5:	adc    al,0x5d
  4126d7:	jae    0x41268d
  4126d9:	push   0x5d
  4126db:	jae    0x412691
  4126dd:	push   0x0
  4126df:	jbe    0x4126e2
  4126e1:	jne    0x412757
  4126e3:	outs   dx,DWORD PTR ds:[esi]
  4126e4:	jmp    0x6439:0xef6c0066
  4126eb:	outs   dx,DWORD PTR ds:[esi]
  4126ec:	dec    BYTE PTR [edi]
  4126ee:	sub    eax,0x735f3b32
  4126f3:	sbb    BYTE PTR gs:[ecx],ah
  4126f6:	xor    dh,BYTE PTR [ebx]
  4126f8:	sub    esp,DWORD PTR [esi]
  4126fa:	sub    eax,0x5d5c5b00
  4126ff:	jb     0x412735
  412701:	bound  esp,QWORD PTR [ecx+0x6b]
  412704:	sbb    BYTE PTR [edi+0x61],ch
  412707:	outs   dx,DWORD PTR ds:[esi]
  412708:	sub    ch,BYTE PTR [edi+0x61]
  41270b:	add    BYTE PTR [edi],ah
  41270d:	cmp    DWORD PTR [esi+0x6e],ebp
  412710:	and    eax,0x396d0062
  412715:	outs   dx,DWORD PTR ds:[esi]
  412716:	arpl   WORD PTR [ecx+0x35],bp
  412719:	adc    BYTE PTR [edx+esi*2+0x31],dh
  41271d:	ss gs je 0x4126f2
  412721:	adc    ebp,DWORD PTR [ebx+0x6e]
  412724:	cld    
  412725:	cmp    BYTE PTR [esi+0x65],ch
  412728:	add    BYTE PTR [eax],al
  41272a:	fsub   DWORD PTR [eax]
  41272c:	xor    dh,BYTE PTR [ebx]
  41272e:	jmp    0xeb4186a8
  412733:	cmp    esp,DWORD PTR [ebp+0x63]
  412736:	sub    DWORD PTR [esi+ebp*2+0x0],0x72
  41273b:	pop    esp
  41273c:	outs   dx,BYTE PTR ds:[esi]
  41273d:	imul   ebx,edi,0xc0630065
  412743:	gs gs jae 0x4126df
  412747:	arpl   WORD PTR [ebp+0x73],bx
  41274a:	xor    DWORD PTR [edx+0x76],edi
  41274d:	xor    BYTE PTR [ebx],al
  41274f:	xchg   ecx,eax
  412750:	add    DWORD PTR [edi-0x4],ebx
  412753:	pop    ecx
  412754:	jne    0x4127bd
  412756:	fucomip st,st(4)
  412758:	jb     0x4127ca
  41275a:	rcr    BYTE PTR [edx+0x5a],1
  41275d:	ja     0x412790
  41275f:	mov    WORD PTR [ebp+0x6b],fs
  412762:	enter  0x43e,0x6b
  412766:	aam    0x3a
  412768:	pusha  
  412769:	xlat   BYTE PTR ds:[bx]
  41276b:	in     al,dx
  41276c:	ins    WORD PTR es:[edi],dx
  41276e:	into   
  41276f:	dec    ebp
  412770:	pusha  
  412771:	arpl   WORD PTR [ecx],si
  412773:	inc    edi
  412774:	jb     0x4127dd
  412776:	xchg   esp,eax
  412777:	inc    edi
  412778:	push   0x5d553171
  41277d:	jo     0x412713
  41277f:	in     eax,dx
  412780:	jb     0x4127ea
  412782:	nop
  412783:	add    DWORD PTR [ebp+0x6b],ebx
  412786:	xor    DWORD PTR [edi],eax
  412788:	pop    ebx
  412789:	outs   dx,BYTE PTR ds:[esi]
  41278a:	jge    0x412794
  41278c:	pop    esi
  41278d:	add    BYTE PTR fs:[eax],al
  412790:	mov    gs,ebp
  412792:	pop    ebp
  412793:	ins    DWORD PTR es:[edi],dx
  412794:	xchg   BYTE PTR [edx],al
  412796:	pop    ebx
  412797:	outs   dx,BYTE PTR ds:[esi]
  412798:	push   esi
  412799:	in     eax,dx
  41279a:	pop    ecx
  41279b:	pop    edi
  41279c:	arpl   WORD PTR [ecx],dx
  41279e:	addr16 ja 0x4127d2
  4127a1:	fisub  DWORD PTR [eax+0x6d]
  4127a4:	dec    edx
  4127a5:	enter  0x6c,0x6
  4127a9:	(bad)  
  4127aa:	xor    al,0x35
  4127ac:	xor    ebx,edx
  4127ae:	pop    esi
  4127af:	jno    0x412805
  4127b1:	mov    ebp,0x98450059
  4127b6:	bound  ebp,QWORD PTR [ecx+0x28]
  4127b9:	in     eax,dx
  4127ba:	gs addr16 push cs
  4127bd:	aam    0x75
  4127bf:	pop    edi
  4127c0:	or     eax,0x1d0064ed
  4127c5:	adc    al,0x8f
  4127c7:	js     0x4127e8
  4127c9:	jo     0x41274f
  4127cb:	jno    0x4127fe
  4127cd:	arpl   WORD PTR [edi-0x6c92fca4],dx
  4127d3:	add    edx,DWORD PTR [ebx]
  4127d5:	jne    0x41276c
  4127d7:	addr16 (bad) 
  4127d9:	pop    edi
  4127da:	out    0x68,eax
  4127dc:	xlat   BYTE PTR ds:[ebx]
  4127dd:	pop    edi
  4127de:	mov    WORD PTR [ecx+0x31],?
  4127e1:	jne    0x412860
  4127e3:	ja     0x4127ae
  4127e5:	push   bp
  4127e7:	imul   esi,DWORD PTR [ecx],0x73
  4127ea:	dec    esi
  4127eb:	jb     0x4127ac
  4127ed:	jo     0x41284a
  4127ef:	js     0x4127c3
  4127f1:	adc    edi,DWORD PTR [edi]
  4127f3:	pop    ebp
  4127f4:	add    BYTE PTR [eax],al
  4127f6:	shr    BYTE PTR [edx+0x4c],1
  4127f9:	imul   esi,DWORD PTR [ecx],0x64
  4127fc:	dec    esi
  4127fd:	jne    0x412791
  4127ff:	(bad)  
  412800:	out    0x61,eax
  412802:	xchg   edx,eax
  412803:	inc    cx
  412805:	arpl   WORD PTR [edx-0x69fbea95],cx
  41280b:	push   0x5b92760e
  412810:	push   es
  412811:	ja     0x412831
  412813:	adc    al,0xd8
  412815:	jb     0x41285a
  412817:	pop    ebp
  412818:	mov    edx,0x105e3166
  41281d:	je     0x412871
  41281f:	(bad)  
  412820:	out    0x64,eax
  412822:	push   edx
  412823:	data16 add al,0x71
  412826:	dec    esi
  412827:	popa   
  412828:	out    0x58,eax
  41282a:	pop    edi
  41282b:	imul   eax,esi,0x5b
  41282e:	cmp    eax,0x5274d814
  412833:	(bad)  
  412835:	push   0x6
  412837:	adc    al,0xca
  412839:	jno    0x41284d
  41283b:	jae    0x4127f0
  41283d:	pop    edx
  41283e:	pop    ds
  41283f:	outs   dx,DWORD PTR ds:[esi]
  412840:	add    cl,ch
  412842:	adc    al,0x67
  412844:	ins    DWORD PTR es:[edi],dx
  412845:	retf   
  412846:	adc    esp,DWORD PTR [edx+0x0]
  412849:	mov    BYTE PTR [esi],dl
  41284b:	ins    DWORD PTR es:[edi],dx
  41284c:	mov    BYTE PTR fs:[ecx],al
  41284f:	adc    al,0x72
  412851:	xchg   BYTE PTR [esi],al
  412853:	ins    DWORD PTR es:[edi],dx
  412854:	imul   eax,DWORD PTR [eax-0x77939cce],0x0
  41285b:	add    bl,bl
  41285d:	jo     0x4128d1
  41285f:	jmp    0x8db29541
  412864:	std    
  412865:	push   0x34e07900
  41286a:	addr16 pop edx
  41286c:	(bad)  
  41286d:	adc    edi,DWORD PTR [edx+0x61]
  412870:	rcr    BYTE PTR [ebp+0x62],1
  412873:	inc    edi
  412874:	ficom  WORD PTR [ebx]
  412876:	jno    0x4128c0
  412878:	(bad)  
  412879:	pusha  
  41287a:	arpl   WORD PTR [ebp+0x35],dx
  41287d:	imul   esp,DWORD PTR [edi+0x52],0x4864148e
  412884:	xchg   ecx,eax
  412885:	push   0x6f2d3a5f
  41288a:	jb     0x412898
  41288c:	xchg   esi,eax
  41288d:	data16 add BYTE PTR ds:0x1d74638e,dl
  412894:	xchg   esi,eax
  412895:	arpl   WORD PTR [ecx+ebp*8+0x57],si
  412899:	xor    eax,0x6d630c76
  41289e:	popa   
  41289f:	adc    ch,BYTE PTR ds:0x510c6e67
  4128a5:	addr16 jbe 0x4128ac
  4128a8:	sub    eax,0x6bdf5f70
  4128ad:	jo     0x4128af
  4128af:	int3   
  4128b0:	pop    ebx
  4128b1:	push   0x1457df6d
  4128b6:	popa   
  4128b7:	sar    DWORD PTR [edi],0x62
  4128ba:	popa   
  4128bb:	add    BYTE PTR [eax+0x726610],al
  4128c1:	add    BYTE PTR [ecx-0x779b9193],al
  4128c7:	outs   dx,DWORD PTR ds:[esi]
  4128c8:	imul   esp,DWORD PTR [eax+ecx*4+0x6c],0x61
  4128cd:	jae    0x41287b
  4128cf:	cmp    DWORD PTR [esi+0x79],ebp
  4128d2:	cwde   
  4128d3:	imul   ebp,DWORD PTR ss:[esi-0x53],0x10
  4128d8:	imul   ebp,DWORD PTR [ecx-0x55],0xc7736b62
  4128df:	outs   dx,BYTE PTR ds:[esi]
  4128e0:	je     0x4128e2
  4128e2:	stos   BYTE PTR es:[edi],al
  4128e3:	and    dh,BYTE PTR [edx]
  4128e5:	xor    bl,BYTE PTR [edx-0x229dffde]
  4128eb:	jb     0x41294f
  4128ed:	ins    BYTE PTR es:[edi],dx
  4128ee:	std    
  4128ef:	pop    esp
  4128f0:	add    BYTE PTR [ecx],dh
  4128f2:	sub    DWORD PTR [edi],ebx
  4128f4:	sub    eax,0x2d1f1931
  4128f9:	add    bl,ch
  4128fb:	cmp    BYTE PTR [edi+0x61],bl
  4128fe:	jnp    0x41296f
  412900:	ins    BYTE PTR es:[edi],dx
  412901:	popa   
  412902:	sbb    BYTE PTR [edx+0x6b],dh
  412905:	jb     0x412973
  412907:	cmp    DWORD PTR [esi+0x32],ebp
  41290a:	sbb    ebx,DWORD PTR [eax]
  41290c:	gs ins BYTE PTR es:[edi],dx
  41290e:	daa    
  41290f:	inc    esi
  412910:	popa   
  412911:	addr16 aaa 
  412913:	xor    al,0x0
  412915:	data16 aaa 
  412917:	outs   dx,DWORD PTR ds:[esi]
  412918:	je     0x41297c
  41291a:	sub    DWORD PTR [esp+ebp*2+0x31],ebp
  41291e:	fsubr  DWORD PTR [ebx+0x6b]
  412921:	jbe    0x412964
  412923:	outs   dx,BYTE PTR ds:[esi]
  412924:	arpl   WORD PTR [eax],ax
  412926:	add    BYTE PTR [eax],al
  412928:	cmp    DWORD PTR ss:[eax+ebp*2+0x29],esi
  41292d:	outs   dx,BYTE PTR ds:[esi]
  41292e:	add    BYTE PTR [ebp-0x1b],ah
  412931:	ins    BYTE PTR es:[edi],dx
  412932:	pop    ebp
  412933:	outs   dx,BYTE PTR ds:[esi]
  412934:	fnsave [esp+ebp*2]
  412937:	add    BYTE PTR [ecx],dh
  412939:	out    dx,al
  41293a:	ins    WORD PTR es:[edi],dx
  41293c:	inc    esi
  41293d:	fild   QWORD PTR [eax+eax*1+0x17]
  412941:	nop
  412942:	imul   dx,WORD PTR [esi],0x5fdb
  412947:	add    BYTE PTR [edx],ah
  412949:	fcomp  QWORD PTR [eax+0x6b]
  41294c:	sbb    BYTE PTR [ebp-0x4df6a0a8],bh
  412952:	pusha  
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	adc    eax,0x25f5bbd
  412959:	call   0x6e59:0x520b0057
  412960:	xor    DWORD PTR [esp+esi*2+0x608dde32],ecx
  412967:	xor    al,0xe3
  412969:	mov    esp,0x43d35f63
  41296e:	add    DWORD PTR [edx-0x2c],esi
  412971:	pusha  
  412972:	xor    esi,DWORD PTR [edx]
  412974:	add    bh,BYTE PTR [ebp+0x5ed06c63]
  41297a:	pop    eax
  41297b:	pop    edi
  41297c:	xor    DWORD PTR [ebp+0x76],ebp
  41297f:	addr16 lahf 
  412981:	pop    esi
  412982:	pop    edi
  412983:	add    BYTE PTR [eax-0x5a8da0f6],ah
  412989:	mov    ebp,0x6866
  41298e:	mov    WORD PTR [ecx],ss
  412990:	jne    0x4129f5
  412992:	nop
  412993:	mov    ebp,0xe83c3330
  412998:	xor    BYTE PTR [eax],al
  41299a:	nop
  41299b:	sbb    esp,DWORD PTR [ecx+0x63]
  41299e:	test   esp,ebp
  4129a0:	add    DWORD PTR [eax+0x50],ebp
  4129a3:	iret   
  4129a4:	pop    ebp
  4129a5:	popa   
  4129a6:	push   esi
  4129a7:	iret   
  4129a8:	pusha  
  4129a9:	add    BYTE PTR [ebp+0x20],dl
  4129ac:	ins    BYTE PTR es:[edi],dx
  4129ad:	je     0x4129fb
  4129af:	iret   
  4129b0:	add    DWORD PTR [ecx+0x50],esi
  4129b3:	adc    al,0xdd
  4129b5:	pusha  
  4129b6:	dec    ebp
  4129b7:	adc    al,0x18
  4129b9:	xor    eax,0x371a0603
  4129be:	xor    DWORD PTR [eax+ecx*8],edi
  4129c1:	push   edi
  4129c2:	sbb    eax,0x65de743
  4129c7:	inc    edi
  4129c8:	mov    bh,0x60
  4129ca:	and    edx,DWORD PTR [ebx+ecx*8]
  4129cd:	fs pop es
  4129cf:	cmp    eax,0x391d57c4
  4129d4:	out    0x5e,eax
  4129d6:	push   cs
  4129d7:	dec    eax
  4129d8:	xchg   ebx,eax
  4129d9:	pusha  
  4129da:	unpcklps xmm1,XMMWORD PTR [edx-0x7fb8ff9c]
  4129e1:	pusha  
  4129e2:	xor    DWORD PTR [edi+0x7b],eax
  4129e5:	pusha  
  4129e6:	aad    0x3f
  4129e8:	mov    BYTE PTR [ebx],al
  4129ea:	loope  0x412a31
  4129ec:	mov    BYTE PTR [edx+edx*8+0x45],ch
  4129f0:	out    0x5b,eax
  4129f2:	add    BYTE PTR [eax],al
  4129f4:	fadd   QWORD PTR [edi+0x4b]
  4129f7:	pop    ecx
  4129f8:	int3   
  4129f9:	adc    edx,DWORD PTR [esi+0x5b]
  4129fc:	iret   
  4129fd:	aaa    
  4129fe:	inc    esi
  4129ff:	jno    0x4129c1
  412a01:	adc    edi,DWORD PTR [edi+ebp*2]
  412a04:	mov    al,ds:0x925b4b48
  412a09:	adc    al,0x46
  412a0b:	arpl   WORD PTR [ebp-0x6cfbc5c9],sp
  412a11:	cmp    edi,DWORD PTR [ebx]
  412a13:	pop    eax
  412a14:	xchg   esp,eax
  412a15:	xor    ebx,DWORD PTR [ebx]
  412a17:	pop    edi
  412a18:	adc    BYTE PTR [esi+eax*1],0x5c
  412a1c:	xchg   ebx,eax
  412a1d:	cmp    BYTE PTR [ebx],bl
  412a1f:	pop    edx
  412a20:	xor    DWORD PTR [ecx],edi
  412a22:	add    eax,0x143d5b5c
  412a27:	add    al,0x16
  412a29:	push   es
  412a2a:	mov    edx,0xa222f
  412a2f:	mov    esi,0xe930090a
  412a34:	xor    dh,BYTE PTR ds:0x4a3ce274
  412a3a:	imul   ecx,esi,0xdc754244
  412a40:	xor    bh,BYTE PTR [esp+esi*2]
  412a43:	aad    0x22
  412a45:	push   cs
  412a46:	sub    eax,0x2e0c6016
  412a4b:	clc    
  412a4c:	or     DWORD PTR fs:[esi],ebp
  412a4f:	clc    
  412a50:	pop    ebp
  412a51:	push   es
  412a52:	cs sti 
  412a54:	inc    ebp
  412a55:	or     DWORD PTR [edx],edi
  412a57:	loope  0x412a59
  412a59:	add    BYTE PTR [edx+0xc],al
  412a5c:	xor    dh,cl
  412a5e:	add    bh,BYTE PTR [edi]
  412a60:	outs   dx,BYTE PTR ds:[esi]
  412a61:	nop
  412a62:	sbb    DWORD PTR [edi],esi
  412a64:	pop    edi
  412a65:	xchg   ebp,eax
  412a66:	lar    esi,WORD PTR [eax-0x6f]
  412a6a:	loop   0x412a7f
  412a6c:	push   0x3a43ce75
  412a71:	(bad)  
  412a72:	cmp    DWORD PTR [ecx],edi
  412a74:	outs   dx,BYTE PTR ds:[esi]
  412a75:	xchg   ecx,ebp
  412a77:	dec    ecx
  412a78:	arpl   WORD PTR [esi-0x2e],cx
  412a7b:	add    DWORD PTR [ebp+edx*2+0xf],ebp
  412a7f:	or     al,0x30
  412a81:	adc    ebp,edi
  412a83:	(bad)  
  412a84:	outs   dx,DWORD PTR ds:[esi]
  412a85:	mov    ecx,DWORD PTR ds:[ecx+0x2d]
  412a89:	dec    esi
  412a8a:	xchg   edx,eax
  412a8b:	dec    eax
  412a8c:	arpl   WORD PTR [edi],cx
  412a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a8f:	cmp    al,0x70
  412a91:	jmp    0x35b566c8
  412a96:	test   DWORD PTR [esi],ecx
  412a98:	sub    eax,0x754781d6
  412a9d:	iret   
  412a9e:	pop    edi
  412a9f:	xor    DWORD PTR ss:[ebx],ecx
  412aa2:	or     DWORD PTR [esi+0x2e],0x2d3d880a
  412aa9:	add    BYTE PTR [edi+0x2d546606],ah
  412aaf:	adc    DWORD PTR [eax+0x6b],ebx
  412ab2:	out    dx,eax
  412ab3:	inc    ebx
  412ab4:	xor    eax,0x2dfdcb6b
  412ab9:	shl    BYTE PTR gs:[ecx+0x0],1
  412abd:	push   0x40e40000
  412ac2:	jo     0x412afe
  412ac4:	das    
  412ac5:	sub    esp,DWORD PTR [esi+0x74]
  412ac8:	mov    BYTE PTR [edx],ch
  412aca:	gs ins DWORD PTR es:[edi],dx
  412acc:	call   0xe5aa9d42
  412ad1:	imul   esp,DWORD PTR [ebp+0x74],0x6d6b372e
  412ad8:	mov    ?,WORD PTR [esi]
  412ada:	jb     0x412b0b
  412adc:	mov    bh,0x42
  412ade:	imul   edx,DWORD PTR [edi-0x60],0x62
  412ae2:	push   esi
  412ae3:	outs   dx,WORD PTR ds:[esi]
  412ae5:	outs   dx,DWORD PTR ds:[esi]
  412ae6:	imul   edx,DWORD PTR [ebx-0x4c],0x7e316971
  412aed:	jno    0x412b67
  412aef:	gs dec eax
  412af1:	ins    BYTE PTR es:[edi],dx
  412af2:	je     0x412b68
  412af4:	fdivr  st,st(6)
  412af6:	sub    ch,BYTE PTR [edi]
  412af8:	int3   
  412af9:	xor    eax,0x33de6176
  412afe:	popa   
  412aff:	jb     0x412ae2
  412b01:	ss je  0x412b6d
  412b04:	out    dx,al
  412b05:	jo     0x412b68
  412b07:	ins    DWORD PTR es:[edi],dx
  412b08:	jns    0x412b7b
  412b0a:	outs   dx,DWORD PTR ds:[esi]
  412b0b:	cs jnp 0x412b75
  412b0e:	imul   ebp,DWORD PTR [esi],0x462b426a
  412b14:	push   ss
  412b15:	push   ebp
  412b16:	jne    0x412b6b
  412b18:	add    eax,0x592f3310
  412b1d:	add    eax,0x40352e69
  412b22:	popa   
  412b23:	add    BYTE PTR [eax],al
  412b25:	add    BYTE PTR [ecx],dh
  412b27:	mov    ebp,0xd78534c
  412b2c:	dec    ebp
  412b2d:	inc    esp
  412b2e:	outs   dx,DWORD PTR ds:[esi]
  412b2f:	add    al,0x38
  412b31:	inc    ebx
  412b32:	and    esp,esi
  412b34:	dec    esi
  412b35:	inc    edi
  412b36:	xor    edx,0x3178463f
  412b3c:	aas    
  412b3d:	xor    BYTE PTR [eax-0x70],ch
  412b40:	cmp    al,0x41
  412b42:	arpl   sp,dx
  412b44:	push   ecx
  412b45:	push   esp
  412b46:	ins    BYTE PTR es:[edi],dx
  412b47:	xor    DWORD PTR [ecx],0x34740457
  412b4d:	cs popa 
  412b4f:	mov    ebp,0xbd310001
  412b54:	(bad)  
  412b55:	jmp    esp
  412b57:	jne    0x412b96
  412b59:	push   ebx
  412b5a:	xor    BYTE PTR [ecx+eax*1+0x1bd3100],bh
  412b61:	add    BYTE PTR [ecx],dh
  412b63:	mov    ebp,0x90ef4d52
  412b68:	dec    esi
  412b69:	aas    
  412b6a:	add    edi,DWORD PTR [eax+0x45]
  412b6d:	dec    ebx
  412b6e:	fcomp  DWORD PTR [ecx-0x621d9291]
  412b74:	pop    ebx
  412b75:	je     0x412b6c
  412b77:	lods   eax,DWORD PTR ds:[esi]
  412b78:	pop    esp
  412b79:	outs   dx,BYTE PTR ds:[esi]
  412b7a:	aad    0x4d
  412b7c:	outs   dx,BYTE PTR ds:[esi]
  412b7d:	jno    0x412b64
  412b7f:	stc    
  412b80:	outs   dx,BYTE PTR ds:[esi]
  412b81:	jb     0x412b46
  412b83:	push   edi
  412b84:	push   esi
  412b85:	je     0x412b66
  412b87:	pop    edi
  412b88:	jb     0x412bfb
  412b8a:	add    BYTE PTR [eax],al
  412b8c:	cwde   
  412b8d:	push   cs
  412b8e:	push   esi
  412b8f:	pop    esp
  412b90:	jl     0x412bf9
  412b92:	pop    ebx
  412b93:	outs   dx,BYTE PTR ds:[esi]
  412b94:	mov    ds:0x856c6309,al
  412b99:	mov    ebp,0xf986e50
  412b9e:	jno    0x412c14
  412ba0:	nop
  412ba1:	adc    al,0x13
  412ba3:	pop    eax
  412ba4:	pusha  
  412ba5:	dec    eax
  412ba6:	sbb    DWORD PTR [ebp-0x79],ebx
  412ba9:	aaa    
  412baa:	out    0x3f,eax
  412bac:	push   esi
  412bad:	inc    ebx
  412bae:	pop    ss
  412baf:	pop    eax
  412bb0:	xchg   BYTE PTR [ebp+0x35],cl
  412bb3:	gs dec edx
  412bb5:	cmp    edi,esp
  412bb7:	inc    edi
  412bb8:	xor    DWORD PTR [edi+eiz*8],edx
  412bbb:	add    esi,DWORD PTR [ecx]
  412bbd:	adc    al,0xe7
  412bbf:	add    esi,DWORD PTR [ecx]
  412bc1:	cmp    ecx,esp
  412bc3:	jno    0x412c14
  412bc5:	cmp    ebx,ecx
  412bc7:	xor    al,BYTE PTR [ebx]
  412bc9:	dec    dl
  412bcb:	push   edi
  412bcc:	sbb    eax,0x4fb614
  412bd1:	push   edi
  412bd2:	int3   
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	pop    esi
  412bd5:	xor    esi,DWORD PTR [ebx-0x55c6e0a4]
  412bdb:	push   esi
  412bdc:	pop    ds
  412bdd:	inc    ebx
  412bde:	mov    esi,0x8c631257
  412be3:	jb     0x412be5
  412be5:	cmp    eax,0x37ee558e
  412bea:	out    0x53,eax
  412bec:	jecxz  0x412c2c
  412bee:	mov    ah,BYTE PTR [eax+0x0]
  412bf1:	add    al,ah
  412bf3:	inc    edx
  412bf4:	mov    al,0x5f
  412bf6:	add    eax,0xe0609a3f
  412bfb:	inc    edx
  412bfc:	adc    BYTE PTR [esi-0x21],0x5c
  412c00:	add    DWORD PTR [ebx],0x31
  412c03:	adc    al,0xe7
  412c05:	add    esi,DWORD PTR [ecx]
  412c07:	adc    al,0xe7
  412c09:	add    esi,DWORD PTR [ecx]
  412c0b:	xor    ebx,DWORD PTR [ecx+0x6b]
  412c0e:	mov    eax,ds:0x57321a48
  412c13:	cmp    BYTE PTR [ebx+0x58],dl
  412c16:	xor    DWORD PTR [ecx+0x39],edx
  412c19:	imul   esp,DWORD PTR [ecx+0x671c0048],0x44
  412c20:	jb     0x412c60
  412c22:	xor    DWORD PTR [ecx],0x6d711d61
  412c28:	je     0x412c32
  412c2a:	sub    eax,0x32e90014
  412c2f:	(bad)  
  412c30:	bound  edx,QWORD PTR [ecx]
  412c32:	xchg   BYTE PTR [ecx+edx*2],dl
  412c35:	push   ss
  412c36:	jg     0x412c80
  412c38:	jne    0x412c42
  412c3a:	arpl   WORD PTR [ecx],si
  412c3c:	pop    esp
  412c3d:	push   ds
  412c3e:	push   0x3e
  412c40:	push   edx
  412c41:	sub    BYTE PTR [ebx+0x14],ah
  412c44:	ins    DWORD PTR es:[edi],dx
  412c45:	fstp   DWORD PTR [edi+0x3e]
  412c48:	add    al,ch
  412c4a:	xor    dl,BYTE PTR [eax+eax*4]
  412c4d:	fimul  DWORD PTR [edx]
  412c4f:	xor    DWORD PTR [ebp+edi*4+0x61],ebp
  412c53:	add    ch,BYTE PTR [esi]
  412c55:	int    0x0
  412c57:	add    BYTE PTR [esi],al
  412c59:	inc    eax
  412c5a:	add    BYTE PTR [edx-0x429ca8a6],bl
  412c60:	dec    esp
  412c61:	aas    
  412c62:	ins    BYTE PTR es:[edi],dx
  412c63:	(bad)
  412c66:	push   eax
  412c67:	mov    BYTE PTR [esi],cl
  412c69:	cmp    al,0x3f
  412c6b:	jmp    0xe94140a2
  412c70:	xor    cl,BYTE PTR [edx-0x20cd57d9]
  412c76:	daa    
  412c77:	test   al,0x32
  412c79:	out    dx,eax
  412c7a:	daa    
  412c7b:	test   al,0x32
  412c7d:	shl    DWORD PTR [edi],0xa8
  412c80:	xor    dl,BYTE PTR [ebx]
  412c82:	sub    ch,BYTE PTR [eax+0x282a2332]
  412c88:	xor    eax,0x2d2829f3
  412c8d:	or     al,0x2a
  412c8f:	sub    BYTE PTR ds:0x2d282a5f,dh
  412c95:	xor    ebp,DWORD PTR [edx]
  412c97:	add    BYTE PTR [ecx+0x18],cl
  412c9a:	jl     0x412cc6
  412c9c:	dec    ecx
  412c9d:	sbb    BYTE PTR [eax-0x46e7a6d6],ah
  412ca3:	sub    bl,BYTE PTR [ecx+0x18]
  412ca6:	add    BYTE PTR [eax],al
  412ca8:	or     BYTE PTR [ecx],dl
  412caa:	std    
  412cab:	dec    DWORD PTR [eax]
  412cad:	xchg   ecx,eax
  412cae:	add    DWORD PTR [eax],eax
  412cb0:	fcom   DWORD PTR [eax]
  412cb2:	dec    ecx
  412cb3:	jns    0x412cad
  412cb5:	or     al,0x6b
  412cb7:	arpl   bp,bx
  412cb9:	gs popa 
  412cbb:	outs   dx,BYTE PTR ds:[esi]
  412cbc:	add    BYTE PTR [eax],al
  412cbe:	fadd   QWORD PTR [ebx+0x0]
  412cc1:	add    eax,ebx
  412cc3:	adc    BYTE PTR [eax+0x10d81a],al
  412cc9:	inc    ecx
  412cca:	fadd   DWORD PTR [eax+0x44]
  412ccd:	popa   
  412cce:	fdiv   QWORD PTR [ecx]
  412cd0:	add    BYTE PTR [ecx],al
  412cd2:	cwde   
  412cd3:	adc    BYTE PTR [eax+0x10981c],al
  412cd9:	dec    esp
  412cda:	xchg   DWORD PTR [ebx],esi
  412cdc:	pop    ebp
  412cdd:	ins    BYTE PTR es:[edi],dx
  412cde:	sub    BYTE PTR [ecx+0x70],dl
  412ce1:	jo     0x412cbf
  412ce3:	xor    DWORD PTR [ecx+eiz*2-0x68],esi
  412ce7:	adc    DWORD PTR [eax],eax
  412ce9:	add    BYTE PTR [eax],cl
  412ceb:	icebp  
  412cec:	(bad)  
  412ced:	dec    DWORD PTR [eax-0x4f9ca2ad]
  412cf3:	ins    DWORD PTR es:[edi],dx
  412cf4:	add    BYTE PTR [ecx],al
  412cf6:	pop    eax
  412cf7:	adc    BYTE PTR [eax+0x104821],al
  412cfd:	inc    ebx
  412cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cff:	addr16 imul edi,DWORD PTR [di+0x43],0x80105801
  412d09:	and    cl,BYTE PTR [eax+0x10]
  412d0c:	add    BYTE PTR [eax-0x1f],cl
  412d0f:	fs je  0x412d81
  412d12:	xor    DWORD PTR [edi+0x5b],ebp
  412d15:	add    BYTE PTR [ebx],dh
  412d17:	mov    ebp,0xbd348001
  412d1c:	add    DWORD PTR [eax],eax
  412d1e:	fs push esp
  412d20:	and    al,0x44
  412d22:	add    BYTE PTR [eax],al
  412d24:	sahf   
  412d25:	pop    esi
  412d26:	push   edi
  412d27:	imul   ecx,DWORD PTR [ebx+ecx*1-0x40ce8ea8],0x1
  412d2f:	add    BYTE PTR [ecx+0x310001de],dh
  412d35:	(bad)  
  412d36:	jo     0x412da3
  412d38:	push   esp
  412d39:	retf   0x206f
  412d3c:	jo     0x412d0b
  412d3e:	push   ecx
  412d3f:	inc    esp
  412d40:	push   eax
  412d41:	shl    DWORD PTR [eax+eax*1+0x30],0xbd
  412d46:	add    DWORD PTR [eax+0x1bd0e],eax
  412d4c:	ins    BYTE PTR es:[edi],dx
  412d4d:	mov    ah,0x21
  412d4f:	push   eax
  412d50:	dec    eax
  412d51:	ficom  WORD PTR [ebp+0x73]
  412d54:	and    ebx,eax
  412d56:	push   esi
  412d57:	add    BYTE PTR [ebx],dh
  412d59:	mov    ebp,0xbd4f8001
  412d5e:	add    DWORD PTR [eax],eax
  412d60:	repnz fnstenv [eax+0x6b]
  412d64:	push   ds
  412d65:	shl    DWORD PTR [ecx],cl
  412d67:	inc    esp
  412d68:	push   ss
  412d69:	ficomp WORD PTR [eax+0x6b]
  412d6c:	adc    al,0xa3
  412d6e:	push   ebp
  412d6f:	jno    0x412da2
  412d71:	mov    edi,0xd2b10001
  412d76:	add    DWORD PTR [eax],eax
  412d78:	xor    DWORD PTR [esi+0x72],edi
  412d7b:	imul   ecx,esp,0xffffffa1
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	and    al,dh
  412d81:	nop
  412d82:	jo     0x412deb
  412d84:	fist   WORD PTR [ebx+0x7456]
  412d8a:	ret    
  412d8b:	fwait
  412d8c:	push   ebp
  412d8d:	addr16 (bad) 
  412d8f:	adc    ecx,DWORD PTR [esp-0x23]
  412d93:	cmp    cl,BYTE PTR [esi+0x70]
  412d96:	mov    al,ds:0x3103e814
  412d9b:	xchg   esp,eax
  412d9c:	pop    ss
  412d9d:	add    al,0x31
  412d9f:	adc    al,0x28
  412da1:	push   0x6d4d3d8a
  412da6:	add    BYTE PTR [eax+0x39],0x65
  412daa:	jge    0x412de9
  412dac:	xor    eax,0x16605169
  412db1:	jae    0x412d38
  412db3:	inc    edi
  412db4:	out    0x4,eax
  412db6:	xor    DWORD PTR [edi+eiz*2],edx
  412db9:	or     BYTE PTR [ecx],dh
  412dbb:	adc    al,0xe7
  412dbd:	xor    edx,DWORD PTR [edx+0x46]
  412dc0:	cli    
  412dc1:	jb     0x412e0a
  412dc3:	xor    eax,0x3b60040b
  412dc8:	or     eax,0xf9353c58
  412dcd:	push   0x66d0595d
  412dd2:	inc    ebx
  412dd3:	cmp    ebx,edx
  412dd5:	jb     0x412dee
  412dd7:	inc    eax
  412dd8:	mov    bl,0x3a
  412dda:	push   cs
  412ddb:	cmp    al,bl
  412ddd:	jb     0x412e03
  412ddf:	inc    edi
  412de0:	mov    ds:0xb9462246,eax
  412de5:	push   0x689d401f
  412dea:	add    eax,DWORD PTR [edi-0x40]
  412ded:	jb     0x412def
  412def:	add    BYTE PTR [edi],cl
  412df1:	push   0x38015bac
  412df6:	mov    ss,WORD PTR [ebp-0x2e]
  412df9:	inc    ebp
  412dfa:	mov    bl,0x36
  412dfc:	fnstenv [eax]
  412dfe:	jnp    0x412e6f
  412e00:	adc    DWORD PTR [edx-0x6a],edx
  412e03:	outs   dx,DWORD PTR ds:[esi]
  412e04:	int    0x30
  412e06:	jns    0x412e5e
  412e08:	xor    DWORD PTR [eax+eax*1-0x5a],esp
  412e0c:	call   FWORD PTR [edi+0x20]
  412e0f:	(bad)  
  412e10:	out    0xf3,eax
  412e12:	inc    edi
  412e13:	cmp    eax,0x182d63f9
  412e18:	arpl   WORD PTR [ebx+ecx*1],ax
  412e1b:	jecxz  0x412e97
  412e1d:	aaa    
  412e1e:	jno    0x412e75
  412e20:	aas    
  412e21:	hlt    
  412e22:	and    bh,BYTE PTR [edx]
  412e24:	es push ds
  412e26:	aas    
  412e27:	dec    edx
  412e28:	xchg   esp,eax
  412e29:	xor    eax,0xf4273d70
  412e2e:	sub    esi,edi
  412e30:	dec    esp
  412e31:	sbb    eax,0x338c280a
  412e36:	arpl   WORD PTR [ecx],bx
  412e38:	mov    ebp,edi
  412e3a:	inc    edx
  412e3b:	pop    es
  412e3c:	dec    esp
  412e3d:	aaa    
  412e3e:	add    BYTE PTR fs:[ebx+0x2f],ah
  412e42:	cmp    cl,cl
  412e44:	dec    ebx
  412e45:	xor    BYTE PTR [ebx+0xf],ah
  412e48:	imul   esi,DWORD PTR [ecx],0xf416f074
  412e4e:	sub    DWORD PTR [edx-0xbcff29d],esi
  412e54:	add    BYTE PTR [eax],al
  412e56:	and    al,0x53
  412e58:	ins    DWORD PTR es:[edi],dx
  412e59:	iret   
  412e5a:	push   es
  412e5b:	xor    eax,0x5857dd6e
  412e60:	arpl   WORD PTR [edi+0x3684009],di
  412e66:	dec    ebp
  412e67:	cmc    
  412e68:	imul   esi,DWORD PTR [edi+edi*1+0xc6411e],0x3a
  412e70:	arpl   dx,cx
  412e72:	out    0x30,al
  412e74:	ins    DWORD PTR es:[edi],dx
  412e75:	xchg   edi,eax
  412e76:	adc    al,0xf4
  412e78:	pusha  
  412e79:	(bad)  
  412e7a:	loope  0x412ebe
  412e7c:	arpl   sp,sp
  412e7e:	xor    al,0x53
  412e80:	ins    DWORD PTR es:[edi],dx
  412e81:	jg     0x412e89
  412e83:	xor    eax,0xf9d4006e
  412e88:	push   ebx
  412e89:	jns    0x412e53
  412e8b:	xor    DWORD PTR [edx],edi
  412e8d:	and    BYTE PTR [ecx-0x4e938f9b],bh
  412e93:	xor    BYTE PTR [ebp+0x74],bl
  412e96:	loope  0x412eda
  412e98:	outs   dx,BYTE PTR ds:[esi]
  412e99:	das    
  412e9a:	jg     0x412ecb
  412e9c:	je     0x412f03
  412e9e:	test   cl,bh
  412ea0:	outs   dx,BYTE PTR ds:[esi]
  412ea1:	je     0x412f1d
  412ea3:	xor    DWORD PTR [ebp+0x6d],ebx
  412ea6:	sbb    eax,0x7e6f3f17
  412eab:	ins    BYTE PTR es:[edi],dx
  412eac:	popa   
  412ead:	outs   dx,BYTE PTR ds:[esi]
  412eae:	inc    esp
  412eaf:	stc    
  412eb0:	inc    eax
  412eb1:	outs   dx,BYTE PTR ds:[esi]
  412eb2:	imul   eax,DWORD PTR [ebx+0x64],0x69
  412eb6:	push   ds
  412eb7:	cmp    edi,DWORD PTR [edx]
  412eb9:	and    BYTE PTR [eax],al
  412ebb:	add    BYTE PTR [edx],bh
  412ebd:	cmp    eax,0x6d4a616e
  412ec2:	or     DWORD PTR [edx],ecx
  412ec4:	and    eax,0xfd72615f
  412ec9:	push   ebp
  412eca:	arpl   WORD PTR [ebp+0x3e],sp
  412ecd:	ins    BYTE PTR es:[edi],dx
  412ece:	cmp    ah,BYTE PTR [eax]
  412ed0:	or     eax,0xbc697a43
  412ed5:	cmp    BYTE PTR [ebp+0x2f],bl
  412ed8:	adc    al,0x6
  412eda:	xor    BYTE PTR [eax],ah
  412edc:	inc    eax
  412edd:	das    
  412ede:	imul   ebp,DWORD PTR [ebp-0x78],0x35
  412ee2:	je     0x412f4d
  412ee4:	push   0x38
  412ee6:	popa   
  412ee7:	cmp    ebp,DWORD PTR [eax]
  412ee9:	pop    ecx
  412eea:	dec    edi
  412eeb:	dec    ecx
  412eec:	aad    0xf4
  412eee:	xor    BYTE PTR [esi],ch
  412ef0:	mov    BYTE PTR [edi],ah
  412ef2:	and    BYTE PTR [edi+0x71],dl
  412ef5:	inc    edx
  412ef6:	outs   dx,DWORD PTR fs:[esi]
  412ef8:	xchg   edi,eax
  412ef9:	pop    edi
  412efa:	and    BYTE PTR [ecx],bh
  412efc:	push   eax
  412efd:	std    
  412efe:	or     BYTE PTR [edx],cl
  412f00:	xor    DWORD PTR [eax+0x49f2000b],esi
  412f06:	outs   dx,DWORD PTR ds:[esi]
  412f07:	je     0x412ed5
  412f09:	mov    al,ds:0x8ffd2b55
  412f0e:	outs   dx,DWORD PTR ds:[esi]
  412f0f:	gs mov ebp,0xed001b92
  412f15:	dec    ecx
  412f16:	fs pop edi
  412f18:	mov    ebp,0x6b6e6d63
  412f1d:	mov    ebp,0x4346
  412f22:	jge    0x412f41
  412f24:	daa    
  412f25:	jno    0x412f78
  412f27:	cmc    
  412f28:	aaa    
  412f29:	push   esp
  412f2a:	sbb    DWORD PTR [esi],0xb8412e13
  412f30:	pop    es
  412f31:	dec    eax
  412f32:	xchg   esi,eax
  412f33:	or     bl,BYTE PTR [eax+0x3a]
  412f36:	push   ecx
  412f37:	adc    BYTE PTR [ecx+0xb],dl
  412f3a:	sub    edi,esp
  412f3c:	pusha  
  412f3d:	popa   
  412f3e:	push   esp
  412f3f:	sub    eax,0xd3113a58
  412f44:	sub    ch,BYTE PTR cs:[ebx+esi*4]
  412f48:	inc    esp
  412f49:	popa   
  412f4a:	push   edx
  412f4b:	sbb    BYTE PTR [esp+esi*2+0x1c],dl
  412f4f:	lock ins DWORD PTR es:[edi],dx
  412f51:	popa   
  412f52:	push   esi
  412f53:	sbb    DWORD PTR [ebx+0x6e],ebp
  412f56:	push   esi
  412f57:	and    DWORD PTR [ecx],0x67
  412f5a:	dec    ebp
  412f5b:	fsubr  DWORD PTR [ebx+0x74]
  412f5e:	sbb    cl,ah
  412f60:	pop    esp
  412f61:	sub    al,0x51
  412f63:	adc    ebx,DWORD PTR [ecx]
  412f65:	outs   dx,DWORD PTR ds:[esi]
  412f66:	pop    esp
  412f67:	sub    eax,0xddf20a0f
  412f6c:	imul   ebp,DWORD PTR [esi+0x14],0xffffffda
  412f70:	push   ebp
  412f71:	addr16 push ss
  412f73:	iret   
  412f74:	pop    ss
  412f75:	and    BYTE PTR [edx],dl
  412f77:	mov    DWORD PTR [esi+0x71],ebp
  412f7a:	or     al,0x14
  412f7c:	hlt    
  412f7d:	or     DWORD PTR [edx],eax
  412f7f:	inc    ebx
  412f80:	test   BYTE PTR [ecx+0x1a],dl
  412f83:	push   ebp
  412f84:	mov    gs,WORD PTR [eax+0x0]
  412f87:	add    bh,cl
  412f89:	aas    
  412f8a:	shl    DWORD PTR [ebx],1
  412f8c:	jmp    0x8837:0xdd6c8136
  412f93:	cs std 
  412f95:	cmc    
  412f96:	mov    dh,0x23
  412f98:	or     DWORD PTR [ebx],esi
  412f9a:	jle    0x41300c
  412f9c:	shl    DWORD PTR [ebx+ebx*2],0x6d
  412fa0:	xchg   ebx,eax
  412fa1:	cmp    BYTE PTR [ebx+ebx*1+0x51],al
  412fa5:	pop    ecx
  412fa6:	cmp    cl,BYTE PTR [ebp+0x72]
  412fa9:	hlt    
  412faa:	adc    ebp,DWORD PTR [esi]
  412fac:	popa   
  412fad:	or     eax,DWORD PTR [edi]
  412faf:	aaa    
  412fb0:	xchg   esi,eax
  412fb1:	ss inc ebx
  412fb3:	outs   dx,DWORD PTR ds:[esi]
  412fb4:	jl     0x412ff9
  412fb6:	pop    es
  412fb7:	sbb    eax,0x9dbfd39
  412fbc:	sub    bl,BYTE PTR [edx]
  412fbe:	out    0x2d,eax
  412fc0:	xor    esi,esi
  412fc2:	int3   
  412fc3:	add    eax,DWORD PTR [ebp+0x3129c4fa]
  412fc9:	cli    
  412fca:	mov    esp,0xc363129
  412fcf:	pop    eax
  412fd0:	outs   dx,BYTE PTR ds:[esi]
  412fd1:	inc    esp
  412fd2:	adc    BYTE PTR [ebx],dl
  412fd4:	add    esi,esi
  412fd6:	or     dh,BYTE PTR [eax+0x4d]
  412fd9:	adc    al,0x1d
  412fdb:	imul   edi,DWORD PTR ds:0xf36cd755,0x1265c540
  412fe5:	inc    edx
  412fe6:	lods   eax,DWORD PTR ds:[esi]
  412fe7:	push   ecx
  412fe8:	adc    dh,BYTE PTR [ecx]
  412fea:	out    0x4d,eax
  412fec:	add    BYTE PTR [eax],al
  412fee:	adc    al,BYTE PTR [eax-0x64]
  412ff1:	push   edx
  412ff2:	adc    al,BYTE PTR [edx-0x5c]
  412ff5:	ins    DWORD PTR es:[edi],dx
  412ff6:	add    bh,BYTE PTR [ecx]
  412ff8:	add    cl,ch
  412ffa:	xor    bh,BYTE PTR [ecx]
  412ffc:	ins    BYTE PTR es:[edi],dx
  412ffd:	les    esp,FWORD PTR [ebx]
  412fff:	add    ch,BYTE PTR [esi]
  413001:	(bad)  
  413002:	fidiv  WORD PTR [edi]
  413004:	add    BYTE PTR [edx-0x66b2cf02],bh
  41300a:	leave  
  41300b:	xor    eax,0x41c79551
  413010:	pop    edi
  413011:	mov    ds,ecx
  413013:	adc    eax,DWORD PTR [eax]
  413015:	mov    dh,cl
  413017:	cmp    eax,0x4cd795f
  41301c:	xor    bh,BYTE PTR [edi-0x1693c832]
  413022:	jae    0x41305c
  413024:	ins    BYTE PTR es:[edi],dx
  413025:	dec    esi
  413026:	nop
  413027:	gs je  0x413076
  41302a:	jb     0x413062
  41302c:	and    BYTE PTR fs:[edi-0x6daf8bd3],al
  413033:	cmp    BYTE PTR [edi+0x43],ah
  413036:	mov    fs,WORD PTR [ebx+0x67]
  413039:	dec    ebp
  41303a:	xor    eax,0x90446853
  41303f:	cmp    edx,DWORD PTR [esi+edx*1+0x58]
  413043:	xor    DWORD PTR [esi+0x2c],ebp
  413046:	dec    esi
  413047:	cmp    DWORD PTR [edx+0xc],esp
  41304a:	add    DWORD PTR [ebx+0x68],0x0
  41304e:	jge    0x413064
  413050:	inc    esi
  413051:	sti    
  413052:	add    BYTE PTR [eax],al
  413054:	push   edi
  413055:	xor    DWORD PTR [ecx+0x10],edx
  413058:	pop    ecx
  413059:	adc    al,0x41
  41305b:	sti    
  41305c:	push   edi
  41305d:	xor    BYTE PTR [ebx-0x1],al
  413060:	pop    edi
  413061:	cmp    DWORD PTR [ebx-0x25],esp
  413064:	adc    eax,DWORD PTR [eax+0x63]
  413067:	test   al,0x32
  413069:	push   ebx
  41306a:	jb     0x413038
  41306c:	push   ss
  41306d:	dec    esi
  41306e:	jb     0x413034
  413070:	unpcklps xmm0,XMMWORD PTR [ecx+0x0]
  413074:	retf   0x706a
  413077:	je     0x413048
  413079:	cs je  0x4130d1
  41307c:	mov    ebx,0x6d4b722e
  413081:	push   0x0
  413083:	inc    ebx
  413084:	retf   0x706a
  413087:	je     0x413016
  413089:	imul   esi,DWORD PTR [eax+0x6f],0x65475dba
  413090:	rcl    DWORD PTR [ecx],0x3f
  413093:	jb     0x413046
  413095:	popa   
  413096:	je     0x4130dc
  413098:	lods   eax,DWORD PTR ds:[esi]
  413099:	fs je  0x41310e
  41309c:	mov    bh,0x6a
  41309e:	inc    edi
  41309f:	rcl    DWORD PTR gs:[eax],0x3f
  4130a3:	jb     0x413036
  4130a5:	pusha  
  4130a6:	je     0x4130fa
  4130a8:	ins    DWORD PTR es:[edi],dx
  4130a9:	inc    esp
  4130aa:	popa   
  4130ab:	popa   
  4130ac:	jnp    0x4130db
  4130ae:	aas    
  4130af:	outs   dx,DWORD PTR ds:[esi]
  4130b0:	push   esi
  4130b1:	ins    BYTE PTR es:[edi],dx
  4130b2:	popa   
  4130b3:	js     0x413101
  4130b5:	adc    BYTE PTR [edx+0x65],dl
  4130b8:	add    BYTE PTR [eax],al
  4130ba:	ds sub eax,0x371c7472
  4130c0:	dec    edi
  4130c1:	gs xor al,0x2e
  4130c4:	add    BYTE PTR [edi+0x48],cl
  4130c7:	sub    eax,0x374a506e
  4130cc:	pop    edi
  4130cd:	cmp    esp,DWORD PTR gs:[ebx+0x54]
  4130d1:	outs   dx,DWORD PTR ds:[esi]
  4130d2:	xor    ebp,DWORD PTR ds:0x3501006e
  4130d8:	jo     0x41313f
  4130da:	retf   0x6b63
  4130dd:	outs   dx,BYTE PTR ds:[esi]
  4130de:	sub    DWORD PTR [ecx+eiz*2+0x4c],ebp
  4130e2:	mov    bh,0x2f
  4130e4:	arpl   WORD PTR [ebp+0x7c],sp
  4130e7:	push   edi
  4130e8:	outs   dx,BYTE PTR ds:[esi]
  4130e9:	push   ebp
  4130ea:	mov    ebp,DWORD PTR ds:0x76310072
  4130f0:	data16 je 0x4130f0
  4130f3:	test   DWORD PTR [eax+0x63],ebp
  4130f6:	pop    ds
  4130f7:	test   BYTE PTR [ebx+0x66],ch
  4130fa:	push   ss
  4130fb:	mov    DWORD PTR [esi+0x5f],ebp
  4130fe:	add    eax,0x316e6cd4
  413103:	jp     0x413171
  413105:	outs   dx,BYTE PTR ds:[esi]
  413106:	out    0x97,eax
  413108:	dec    edi
  413109:	je     0x41310d
  41310b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310c:	gs push esp
  41310e:	into   
  41310f:	mov    DWORD PTR [ebp+0x72],edx
  413112:	enter  0x6444,0x51
  413116:	fcom   DWORD PTR [esi-0x6a0affbe]
  41311c:	fs ins DWORD PTR es:[edi],dx
  41311e:	add    BYTE PTR [eax],al
  413120:	iret   
  413121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413122:	push   eax
  413123:	arpl   bx,ax
  413125:	jnp    0x413128
  413127:	dec    esp
  413128:	sahf   
  413129:	push   0x6d
  41312b:	jae    0x4130ce
  41312d:	std    
  41312e:	push   ebp
  41312f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413131:	push   esp
  413132:	push   0x32588e63
  413137:	pop    edi
  413138:	popf   
  413139:	add    BYTE PTR [edi+0x3f],bl
  41313c:	xor    esp,ebp
  41313e:	pop    edi
  41313f:	push   0xffffff84
  413141:	dec    BYTE PTR [edi+0x54]
  413144:	xchg   BYTE PTR [esi+0x5f],dl
  413147:	outs   dx,BYTE PTR ds:[esi]
  413148:	sbb    DWORD PTR [edi],0x1158766b
  41314e:	pop    edi
  41314f:	gs push esp
  413151:	push   ds
  413152:	add    al,0x0
  413154:	push   edx
  413155:	pop    ds
  413156:	pop    ebx
  413157:	jo     0x41319e
  413159:	jle    0x41316e
  41315b:	cs dec ebp
  41315d:	adc    DWORD PTR [eax+0x0],ebp
  413160:	jb     0x413172
  413162:	push   esi
  413163:	je     0x4131cb
  413165:	mov    ebp,0x14026e60
  41316a:	loopne 0x4131c2
  41316c:	sbb    eax,0x2536cc39
  413171:	xor    ebx,ecx
  413173:	pusha  
  413174:	push   esi
  413175:	adc    al,0xaa
  413177:	pusha  
  413178:	add    ecx,DWORD PTR [eax-0x54]
  41317b:	imul   eax,DWORD PTR [edx],0x360aa31
  413181:	dec    eax
  413182:	shl    BYTE PTR [ecx+0x0],0x0
  413186:	push   cs
  413187:	aaa    
  413188:	enter  0xd24f,0x46
  41318c:	mov    al,0x69
  41318e:	add    BYTE PTR [eax-0x72],cl
  413191:	push   ebp
  413192:	rcl    BYTE PTR [ebx],cl
  413194:	stos   BYTE PTR es:[edi],al
  413195:	pusha  
  413196:	jecxz  0x4131df
  413198:	stos   BYTE PTR es:[edi],al
  413199:	fadd   QWORD PTR [bp-0x74]
  41319d:	ss mov ebp,0x31607932
  4131a3:	push   edi
  4131a4:	jns    0x413202
  4131a6:	rol    DWORD PTR [edi-0x58],0x66
  4131aa:	sahf   
  4131ab:	dec    ecx
  4131ac:	push   eax
  4131ad:	push   esi
  4131ae:	xchg   edx,eax
  4131af:	push   edi
  4131b0:	inc    esp
  4131b1:	push   esi
  4131b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b3:	sub    eax,0x35906d4d
  4131b8:	push   ebx
  4131b9:	popa   
  4131ba:	popa   
  4131bb:	inc    esi
  4131bc:	push   eax
  4131bd:	push   edx
  4131be:	dec    ax
  4131c0:	inc    esp
  4131c1:	dec    edi
  4131c2:	xchg   edx,eax
  4131c3:	cmp    eax,0x143103e7
  4131c8:	out    0x3,eax
  4131ca:	xor    DWORD PTR [edi+eiz*8],edx
  4131cd:	add    esi,DWORD PTR [ecx]
  4131cf:	adc    al,0xe7
  4131d1:	add    esi,DWORD PTR [ecx]
  4131d3:	adc    al,0xe7
  4131d5:	add    esi,DWORD PTR [ecx]
  4131d7:	adc    al,0xe7
  4131d9:	add    esi,DWORD PTR [ecx]
  4131db:	adc    al,0xe7
  4131dd:	add    esi,DWORD PTR [ecx]
  4131df:	adc    al,0xe7
  4131e1:	add    esi,DWORD PTR [ecx]
  4131e3:	adc    al,0x0
  4131e5:	jmp    0xe941461c
  4131ea:	add    BYTE PTR [eax],al
  4131ec:	xor    dl,BYTE PTR [eax+eax*1]
  4131ef:	jmp    0xe9414626
  4131f4:	xor    dl,BYTE PTR [eax+eax*1]
  4131f7:	jmp    0xe941462e
  4131fc:	xor    dl,BYTE PTR [eax+eax*1]
  4131ff:	jmp    0xe9414636
  413204:	xor    dl,BYTE PTR [eax+eax*1]
  413207:	jmp    0xe941463e
  41320c:	xor    dl,BYTE PTR [eax+eax*1]
  41320f:	jmp    0xe9414646
  413214:	xor    dl,BYTE PTR [eax+eax*1]
  413217:	jmp    0xe941464e
  41321c:	xor    dl,BYTE PTR [eax+eax*1]
  41321f:	jmp    0xe9414656
  413224:	xor    dl,BYTE PTR [eax+eax*1]
  413227:	jmp    0xa0967e5e
  41322c:	outs   dx,BYTE PTR ds:[esi]
  41322d:	adc    al,0x79
  41322f:	or     al,0x3d
  413231:	cld    
  413232:	push   edi
  413233:	or     al,0x3e
  413235:	add    al,0x34
  413237:	xor    DWORD PTR [esi-0xb],ecx
  41323a:	das    
  41323b:	adc    eax,0xf922ed4d
  413240:	sbb    al,0x5c
  413242:	and    edi,ecx
  413244:	and    al,0x5c
  413246:	sub    ecx,DWORD PTR [ebx*1+0x45045806]
  41324d:	push   es
  41324e:	pop    eax
  41324f:	int3   
  413250:	add    BYTE PTR [eax],al
  413252:	inc    edx
  413253:	push   es
  413254:	pop    eax
  413255:	les    eax,FWORD PTR [edx+0x6]
  413258:	pop    eax
  413259:	int3   
  41325a:	inc    edx
  41325b:	push   es
  41325c:	pop    eax
  41325d:	les    esp,FWORD PTR [edx]
  41325f:	push   es
  413260:	pop    eax
  413261:	add    BYTE PTR ds:0xc4654318,ch
  413267:	dec    ebx
  413268:	pop    ebp
  413269:	je     0x41329c
  41326b:	popaw  
  41326d:	push   ebx
  41326e:	mov    eax,ds:0x7d657468
  413273:	dec    esi
  413274:	outs   dx,BYTE PTR ds:[esi]
  413275:	outs   dx,WORD PTR ds:[esi]
  413277:	adc    eax,0x2b7a6567
  41327c:	popa   
  41327d:	ins    BYTE PTR es:[edi],dx
  41327e:	sub    ebp,DWORD PTR [edx]
  413280:	cs fs pop esp
  413283:	cmp    DWORD PTR [eax],eax
  413285:	dec    ecx
  413286:	mov    ebx,0x76776b04
  41328b:	adc    DWORD PTR [eax+0x72],edx
  41328e:	scas   eax,DWORD PTR es:[edi]
  41328f:	cmp    BYTE PTR [ecx+0x73],ah
  413292:	retf   
  413293:	adc    eax,0x51b66f4f
  413298:	jae    0x4132fb
  41329a:	mov    edx,0xb9465c62
  41329f:	addr16 pop esp
  4132a1:	push   eax
  4132a2:	pushf  
  4132a3:	push   edx
  4132a4:	arpl   WORD PTR [ecx-0x52],bp
  4132a7:	push   0x594465c
  4132ac:	pop    esp
  4132ad:	dec    eax
  4132ae:	scas   eax,DWORD PTR es:[edi]
  4132af:	push   0x8187374
  4132b4:	imul   esp,DWORD PTR [esi+0x0],0x0
  4132b8:	test   BYTE PTR [ebx+0x5d],ah
  4132bb:	jb     0x413322
  4132bd:	cld    
  4132be:	inc    ebp
  4132bf:	popa   
  4132c0:	push   0x2a
  4132c2:	pop    esp
  4132c3:	push   eax
  4132c4:	pop    esp
  4132c5:	push   ecx
  4132c6:	arpl   WORD PTR [ecx+0x6e],bp
  4132c9:	addr16 pop esp
  4132cb:	inc    esi
  4132cc:	adc    al,0x8
  4132ce:	pop    esp
  4132cf:	dec    eax
  4132d0:	das    
  4132d1:	addr16 je 0x413347
  4132d4:	fadd   DWORD PTR [edi]
  4132d6:	imul   esp,DWORD PTR [esi+0x44],0x63
  4132da:	pop    ebp
  4132db:	jb     0x41330e
  4132dd:	adc    BYTE PTR [eax],bh
  4132df:	inc    esi
  4132e0:	push   eax
  4132e1:	sbb    eax,0xc1505138
  4132e6:	pop    esi
  4132e7:	fs jne 0x41330e
  4132ea:	popa   
  4132eb:	ins    BYTE PTR es:[edi],dx
  4132ec:	inc    esi
  4132ed:	adc    cl,BYTE PTR [edi+eiz*2+0x22]
  4132f1:	(bad)  
  4132f2:	push   0x3fd72872
  4132f7:	push   esp
  4132f8:	add    DWORD PTR [ebx-0x54e28e98],eax
  4132fe:	xor    al,0x6d
  413300:	pop    ss
  413301:	out    0x50,eax
  413303:	pop    edi
  413304:	add    edx,eax
  413306:	xor    eax,0x137d1046
  41330b:	pop    esp
  41330c:	loop   0x4132d9
  41330e:	dec    edi
  41330f:	arpl   bp,dx
  413311:	jbe    0x41337d
  413313:	pop    edi
  413314:	aad    0xa9
  413316:	pusha  
  413317:	dec    eax
  413318:	enter  0x4d9d,0x6d
  41331c:	add    BYTE PTR [eax],al
  41331e:	jecxz  0x4132c3
  413320:	xor    eax,0x497ae546
  413325:	ins    DWORD PTR es:[edi],dx
  413326:	ret    0x13e
  413329:	push   eax
  41332a:	sar    BYTE PTR ds:0x3cc67554,1
  413330:	pop    ebp
  413331:	add    BYTE PTR [ecx+0x3e],bh
  413334:	push   esp
  413335:	je     0x4133ae
  413337:	dec    esp
  413338:	arpl   WORD PTR [bx+di],si
  41333b:	or     BYTE PTR [ecx+0x63],dl
  41333e:	mov    ds:0x9f6745ad,eax
  413343:	pop    eax
  413344:	add    al,0x75
  413346:	xchg   edx,eax
  413347:	push   ebp
  413348:	xor    eax,0x25fd8566
  41334d:	xchg   DWORD PTR [si+0x4],edx
  413351:	pop    esp
  413352:	jbe    0x413349
  413354:	dec    edx
  413355:	push   ecx
  413356:	jne    0x41336c
  413358:	sub    al,0x32
  41335a:	xor    DWORD PTR [ebp+0xd],ecx
  41335d:	push   ebx
  41335e:	pop    ebp
  41335f:	xor    eax,0x2d756803
  413364:	sbb    DWORD PTR [edi+ebp*2],eax
  413367:	dec    eax
  413368:	test   DWORD PTR [edi+ecx*2+0x2d],0x394a652d
  413370:	out    0x32,eax
  413372:	sbb    al,0x36
  413374:	repz dec esi
  413376:	push   es
  413377:	inc    edx
  413378:	int3   
  413379:	aaa    
  41337a:	hlt    
  41337b:	sub    edx,eax
  41337d:	push   edx
  41337e:	add    eax,0x37d939
  413383:	add    ah,ah
  413385:	sub    al,0xbd
  413387:	pop    edi
  413388:	adc    al,0x47
  41338a:	mov    edx,0xcc2ef023
  41338f:	push   0x60cb2dd6
  413394:	jecxz  0x4133a9
  413396:	call   0xe364:0x9e47cf66
  41339d:	cmp    BYTE PTR [ebx-0x65d336c2],bh
  4133a3:	rol    BYTE PTR [bx+di-0x55],cl
  4133a7:	das    
  4133a8:	aam    0x47
  4133aa:	mov    BYTE PTR [edi+0x11],ah
  4133ad:	push   ebx
  4133ae:	mov    gs,WORD PTR [eax-0x36]
  4133b1:	xor    al,0x85
  4133b3:	pop    edi
  4133b4:	xchg   edx,eax
  4133b5:	inc    edx
  4133b6:	out    0x37,eax
  4133b8:	outs   dx,BYTE PTR ds:[esi]
  4133b9:	inc    esp
  4133ba:	pop    edx
  4133bb:	dec    edi
  4133bc:	xchg   esi,eax
  4133bd:	dec    eax
  4133be:	dec    edx
  4133bf:	ins    BYTE PTR es:[edi],dx
  4133c0:	xor    DWORD PTR [ebx+0x40],esp
  4133c3:	push   eax
  4133c4:	xchg   edx,eax
  4133c5:	inc    ebx
  4133c6:	sub    eax,DWORD PTR [eiz*2-0x7bacc8b3]
  4133cd:	sub    eax,0x60896333
  4133d2:	add    BYTE PTR [esi],bl
  4133d4:	and    ah,BYTE PTR [ecx+0x46]
  4133d7:	adc    eax,0x1e5c141d
  4133dc:	dec    esp
  4133dd:	cs adc BYTE PTR cs:[edi+0x37],cl
  4133e2:	add    bh,al
  4133e4:	pop    ebp
  4133e5:	cs addr16 jmp 0x655833ec
  4133ec:	pop    ebp
  4133ed:	das    
  4133ee:	add    DWORD PTR [eax+eax*1+0x25],esp
  4133f2:	bound  eax,QWORD PTR fs:[eax]
  4133f5:	sub    eax,0x204455f0
  4133fa:	arpl   WORD PTR [ecx+eax*2],dx
  4133fd:	mov    esp,0xb546534e
  413402:	bound  edx,QWORD PTR [edi+ecx*2]
  413405:	stos   BYTE PTR es:[edi],al
  413406:	cli    
  413407:	ss jno 0x4133df
  41340a:	cmovb  esi,DWORD PTR [edi-0x17]
  41340e:	inc    ebx
  41340f:	xor    DWORD PTR [esi-0x4b],esp
  413412:	out    0x5e,eax
  413414:	jb     0x4133e2
  413416:	es pop ecx
  413418:	ins    BYTE PTR es:[edi],dx
  413419:	mov    esi,0xba6c5ed0
  41341e:	repz dec BYTE PTR [edi-0x5c]
  413422:	push   ds
  413423:	push   ebp
  413424:	jae    0x4133c3
  413426:	rcl    DWORD PTR [ebp+0x54],1
  413429:	mov    ecx,0xb1200612
  41342e:	xlat   BYTE PTR ds:[ebx]
  41342f:	sub    ah,BYTE PTR [ebx-0x63]
  413432:	std    
  413433:	push   esp
  413434:	push   esp
  413435:	xchg   BYTE PTR [edi-0x7f779dd0],dl
  41343b:	adc    al,0x51
  41343d:	push   esi
  41343e:	jg     0x413488
  413440:	jne    0x41348a
  413442:	xor    DWORD PTR [ecx],0x5c
  413445:	cs cdq 
  413447:	das    
  413448:	bound  ecx,QWORD PTR [eax-0x67]
  41344b:	arpl   WORD PTR [ecx+0x0],ax
  41344e:	add    BYTE PTR [eax],al
  413450:	dec    ecx
  413451:	or     BYTE PTR [ecx+0x5c],al
  413454:	dec    ebx
  413455:	dec    ebp
  413456:	je     0x4134bd
  413458:	push   ds
  413459:	add    al,0x50
  41345b:	and    dh,bl
  41345d:	icebp  
  41345e:	dec    edi
  41345f:	jb     0x4134a8
  413461:	pop    esi
  413462:	popa   
  413463:	jae    0x4134a0
  413465:	sub    DWORD PTR [ebx+0x6e],ebp
  413468:	cmp    DWORD PTR [esp+ebx*2],ebp
  41346b:	push   ecx
  41346c:	sbb    eax,DWORD PTR [ebx+ebp*2]
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	and    al,0x32
  413472:	pop    ebp
  413473:	jb     0x41343d
  413475:	add    al,0x6b
  413477:	data16 lods al,BYTE PTR ds:[esi]
  413479:	push   eax
  41347a:	pop    ebp
  41347b:	jb     0x4134aa
  41347d:	cld    
  41347e:	inc    edx
  41347f:	ins    BYTE PTR es:[edi],dx
  413480:	xchg   DWORD PTR [ebx],esi
  413482:	pop    ebp
  413483:	ins    BYTE PTR es:[edi],dx
  413484:	fist   DWORD PTR [ebp+edi*1+0x50]
  413488:	fld    QWORD PTR ds:0x5e5c753f
  41348e:	inc    esi
  41348f:	push   esp
  413490:	cwde   
  413491:	icebp  
  413492:	xor    ah,BYTE PTR [eax]
  413494:	sar    BYTE PTR [eax],0x69
  413497:	les    eax,FWORD PTR gs:[edx]
  41349a:	aas    
  41349b:	push   esp
  41349c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41349d:	cmp    BYTE PTR [edx+eiz*2-0x57],ch
  4134a1:	arpl   WORD PTR [eax],ax
  4134a3:	push   ebx
  4134a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a5:	pop    edi
  4134a6:	je     0x41351f
  4134a8:	mov    ecx,0x8f5c6163
  4134ad:	xor    eax,0x35a9626b
  4134b2:	dec    edi
  4134b3:	inc    ebx
  4134b4:	add    BYTE PTR [eax],al
  4134b6:	mov    DWORD PTR [ecx],eax
  4134b8:	inc    ecx
  4134b9:	pop    esp
  4134ba:	fisttp DWORD PTR [ebp+0x74]
  4134bd:	gs into 
  4134bf:	in     al,dx
  4134c0:	dec    edi
  4134c1:	and    BYTE PTR [edi],bh
  4134c3:	clc    
  4134c4:	dec    edi
  4134c5:	jb     0x41352e
  4134c7:	pop    esi
  4134c8:	popa   
  4134c9:	jae    0x4134fc
  4134cb:	pop    edx
  4134cc:	imul   ebp,DWORD PTR [ebp-0x69],0x605c684c
  4134d3:	jmp    0x5f62:0x4f866d2f
  4134da:	arpl   WORD PTR [ebx+0x74f6d30],bp
  4134e0:	dec    ebx
  4134e1:	pop    edi
  4134e2:	arpl   WORD PTR [eax],dx
  4134e4:	cmp    BYTE PTR [ebp+0x45],al
  4134e7:	push   cs
  4134e8:	bound  ebx,QWORD PTR [edi+0x5d]
  4134eb:	cli    
  4134ec:	ds aas 
  4134ee:	popa   
  4134ef:	clc    
  4134f0:	aaa    
  4134f1:	inc    ecx
  4134f2:	inc    esp
  4134f3:	mov    edi,0x1b5d465e
  4134f8:	and    al,0x38
  4134fa:	push   ecx
  4134fb:	repz bound ebp,QWORD PTR [ebx+0xc]
  4134ff:	rdtsc  
  413501:	inc    ecx
  413502:	add    eax,0x136c64e6
  413507:	int3   
  413508:	dec    edi
  413509:	add    dl,ah
  41350b:	aad    0x5b
  41350d:	je     0x41350d
  41350f:	retf   
  413510:	dec    edi
  413511:	arpl   bp,bx
  413513:	ins    DWORD PTR es:[edi],dx
  413514:	gs ins DWORD PTR es:[edi],dx
  413516:	adc    ecx,esp
  413518:	gs push ecx
  41351a:	add    BYTE PTR [eax],al
  41351c:	repnz imul esi,DWORD PTR [ecx],0x43
  413520:	add    eax,0xd4744e6a
  413525:	ins    BYTE PTR es:[edi],dx
  413526:	sub    eax,0x21b31150
  41352b:	push   eax
  41352c:	ret    
  41352d:	xchg   ebp,eax
  41352e:	pop    ebx
  41352f:	arpl   dx,ax
  413531:	cdq    
  413532:	push   0x6d
  413534:	iret   
  413535:	mov    esp,DWORD PTR [ebp+0x5c]
  413538:	loopne 0x4135a3
  41353a:	sub    eax,0x5f919e6d
  41353f:	pop    edi
  413540:	mov    ds:0x8d4535ad,eax
  413545:	adc    al,0x56
  413547:	data16 jbe 0x413572
  41354a:	cmp    al,BYTE PTR [edi+0x4e]
  41354d:	fs sub al,0x30
  413550:	jo     0x413593
  413552:	push   ebx
  413553:	imul   esi,DWORD PTR [edi+0x60],0x53550417
  41355a:	dec    ebx
  41355b:	arpl   WORD PTR [ebx+0x35],dx
  41355e:	inc    ebx
  41355f:	aaa    
  413560:	jo     0x4135b7
  413562:	pop    ss
  413563:	dec    ecx
  413564:	jge    0x4135bd
  413566:	sbb    al,0x58
  413568:	push   edx
  413569:	push   edx
  41356a:	xor    esi,DWORD PTR [ecx+edx*1]
  41356d:	sbb    DWORD PTR fs:[ebx+0x31],esp
  413571:	pop    eax
  413572:	es pusha 
  413574:	dec    esp
  413575:	or     BYTE PTR ss:[eax+0x60],ah
  413579:	push   edi
  41357a:	sub    BYTE PTR [edx+esi*8],dh
  41357d:	push   edi
  41357e:	sub    bl,BYTE PTR [ecx+0x0]
  413581:	add    BYTE PTR ds:0x1382531,bl
  413587:	hlt    
  413588:	mov    dl,0x5c
  41358a:	sbb    eax,0xf02fe731
  41358f:	inc    eax
  413590:	fld    TBYTE PTR [eax-0x11]
  413593:	pop    edi
  413594:	mov    bh,0x3
  413596:	fld    QWORD PTR [esi-0x2c]
  413599:	and    DWORD PTR ds:0x3b335,ecx
  41359f:	sub    ecx,ebp
  4135a1:	push   edi
  4135a2:	fdiv   QWORD PTR [ecx+edi*4]
  4135a5:	push   0x649351fd
  4135aa:	loopne 0x4135d7
  4135ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ad:	sub    esp,ecx
  4135af:	push   edi
  4135b0:	fiadd  DWORD PTR [ebx]
  4135b2:	loopne 0x4135de
  4135b4:	test   DWORD PTR [edi-0x3c],edx
  4135b7:	xor    al,0x79
  4135b9:	push   0x648b51d5
  4135be:	mov    al,ds:0x5aaf002c
  4135c3:	add    BYTE PTR fs:[edx+0x5e743293],bl
  4135ca:	mov    WORD PTR [esi+0x63],es
  4135cd:	cmp    eax,0x5a5f287b
  4135d2:	gs push edx
  4135d4:	pop    eax
  4135d5:	cmp    DWORD PTR [ecx+0x0],eax
  4135d8:	add    BYTE PTR [eax],dh
  4135da:	xchg   ebx,eax
  4135db:	inc    ebp
  4135dc:	je     0x413626
  4135de:	push   ecx
  4135df:	sub    BYTE PTR [ebx+0x3b],ah
  4135e2:	jns    0x41363f
  4135e4:	je     0x413627
  4135e6:	add    BYTE PTR [eax],al
  4135e8:	and    eax,0x2d11745b
  4135ed:	inc    esp
  4135ee:	pop    edi
  4135ef:	adc    eax,0x747146d
  4135f4:	pop    esi
  4135f5:	inc    eax
  4135f6:	pop    edi
  4135f7:	std    
  4135f8:	pop    esi
  4135f9:	hlt    
  4135fa:	dec    edi
  4135fb:	or     BYTE PTR [ecx+0x2c],bl
  4135fe:	add    BYTE PTR ds:0x2f5f4014,ah
  413604:	adc    ch,BYTE PTR [eax]
  413606:	fs add al,0x7
  413609:	adc    al,0x5c
  41360b:	mov    edx,0xda633ff5
  413610:	push   eax
  413611:	xor    BYTE PTR [edi-0x23],bl
  413614:	xor    bl,BYTE PTR [eax+0x4f]
  413617:	aam    0xdd
  413619:	xor    al,0x69
  41361b:	pop    ss
  41361c:	or     DWORD PTR [ebx+0x74],ebx
  41361f:	jmp    0xbaa88242
  413624:	(bad)  
  413625:	sub    BYTE PTR [edx-0x50],dh
  413628:	adc    BYTE PTR [eax],dh
  41362a:	pop    edi
  41362b:	popf   
  41362c:	xor    bl,BYTE PTR [eax+0x46]
  41362f:	(bad)  
  413630:	aad    0x44
  413632:	push   0x5c641aaf
  413637:	fidiv  DWORD PTR [edx]
  413639:	pop    eax
  41363a:	inc    esi
  41363b:	add    BYTE PTR [edi+ebp*1-0x12299791],bl
  413642:	dec    edi
  413643:	pop    esp
  413644:	in     al,0x15
  413646:	pop    esp
  413647:	inc    esi
  413648:	mov    cl,0x59
  41364a:	popa   
  41364b:	pop    edx
  41364c:	add    BYTE PTR [eax],al
  41364e:	xor    DWORD PTR [esp+ebp*2],0x6eea1861
  413655:	imul   esp,DWORD PTR [ecx+esi*1+0x69],0x63353e61
  41365d:	gs cmp dh,dh
  413660:	ja     0x4136cf
  413662:	jl     0x413674
  413664:	pop    esp
  413665:	jb     0x4136dc
  413667:	das    
  413668:	popa   
  413669:	outs   dx,BYTE PTR ds:[esi]
  41366a:	and    al,0x5f
  41366c:	popa   
  41366d:	jb     0x4136a5
  41366f:	xor    DWORD PTR [edx+0x73],esi
  413672:	dec    BYTE PTR [ebp+0x69]
  413675:	ins    BYTE PTR es:[edi],dx
  413676:	fsubr  st,st(1)
  413678:	imul   edi,DWORD PTR gs:[edx+esi*1+0x341c697a],0x59302e5d
  413684:	ins    BYTE PTR es:[edi],dx
  413685:	add    BYTE PTR [ebx+0x33],cl
  413688:	data16 je 0x413632
  41368b:	ss jb  0x4136f3
  41368e:	ins    BYTE PTR es:[edi],dx
  41368f:	dec    ebx
  413690:	gs ins BYTE PTR es:[edi],dx
  413692:	jne    0x41367b
  413694:	fs ins BYTE PTR es:[edi],dx
  413696:	ins    BYTE PTR es:[edi],dx
  413697:	add    BYTE PTR ss:[ebx-0x41],dl
  41369b:	sub    esi,DWORD PTR [edi+esi*2+0x69]
  41369f:	pop    edi
  4136a0:	popa   
  4136a1:	pop    esp
  4136a2:	xchg   esi,eax
  4136a3:	pop    esi
  4136a4:	ins    BYTE PTR es:[edi],dx
  4136a5:	gs ret 0x6c5e
  4136a9:	ins    BYTE PTR es:[edi],dx
  4136aa:	imul   esi,ebp,0x32c16c3e
  4136b0:	outs   dx,BYTE PTR ds:[esi]
  4136b1:	je     0x4136b3
  4136b3:	add    BYTE PTR [eax-0x2],bl
  4136b6:	ins    DWORD PTR es:[edi],dx
  4136b7:	jae    0x4136ea
  4136b9:	xchg   edi,eax
  4136ba:	bound  ebp,QWORD PTR [ebp+ecx*8+0x69]
  4136be:	inc    ebp
  4136bf:	addr16 ret 
  4136c1:	stos   BYTE PTR es:[edi],al
  4136c2:	cmp    DWORD PTR [ebp-0x5e],ebp
  4136c5:	aas    
  4136c6:	add    DWORD PTR [ebx-0x5e],edx
  4136c9:	mov    BYTE PTR [ebx+0x0],dl
  4136cc:	or     DWORD PTR [esp+edx*2+0x5efb3171],0x33ab8572
  4136d7:	arpl   WORD PTR [edx+edx*2-0x10ae9ca8],dx
  4136de:	pop    eax
  4136df:	jb     0x413712
  4136e1:	push   ds
  4136e2:	gs jb  0x41374c
  4136e5:	push   eax
  4136e6:	push   esi
  4136e7:	and    BYTE PTR [ebp+0x4],bh
  4136ea:	push   esp
  4136eb:	arpl   WORD PTR [ecx],si
  4136ed:	push   ds
  4136ee:	gs jb  0x413750
  4136f1:	or     BYTE PTR [esi+0x2e],dl
  4136f4:	jns    0x413700
  4136f6:	push   ebx
  4136f7:	je     0x41372a
  4136f9:	(bad)  
  4136fa:	fs jb  0x413744
  4136fd:	adc    BYTE PTR [esi+0x2e],dl
  413700:	pop    esp
  413701:	mov    esi,0x1e317266
  413706:	gs jb  0x413728
  413709:	or     BYTE PTR [esi+0x2e],dl
  41370c:	add    DWORD PTR [ebx+edx*2],ecx
  41370f:	jno    0x413742
  413711:	jle    0x413779
  413713:	jb     0x41371c
  413715:	rcl    BYTE PTR [ebx+0x2e],1
  413718:	add    BYTE PTR [eax],al
  41371a:	loope  0x4136ed
  41371c:	push   ebx
  41371d:	je     0x413750
  41371f:	jnp    0x413783
  413721:	je     0x41372c
  413723:	stos   DWORD PTR es:[edi],eax
  413724:	xor    al,0x63
  413726:	jecxz  0x4136a8
  413728:	data16 jb 0x413728
  41372b:	adc    DWORD PTR [ecx+0x63],0x31
  41372f:	xchg   edi,eax
  413730:	bound  esi,QWORD PTR [ecx-0x23]
  413733:	adc    eax,edi
  413735:	xor    al,0xd2
  413737:	inc    ebp
  413738:	xchg   ebp,eax
  413739:	retw   
  41373b:	repz sahf 
  41373d:	pusha  
  41373e:	sar    BYTE PTR [edi],0xe7
  413741:	aas    
  413742:	(bad)  
  413743:	inc    esp
  413744:	jnp    0x413769
  413746:	xor    BYTE PTR [ecx],0x79
  413749:	pop    ecx
  41374a:	xchg   edx,eax
  41374b:	inc    edx
  41374c:	(bad)  
  41374d:	mov    al,ss:0x65037931
  413753:	xor    eax,0x6351585a
  413758:	inc    esp
  413759:	push   edx
  41375a:	jg     0x41378d
  41375c:	pop    ecx
  41375d:	and    al,0x61
  41375f:	xor    eax,0x4831535a
  413764:	dec    eax
  413765:	push   ebx
  413766:	gs hlt 
  413768:	sbb    DWORD PTR [ecx+0x63],ebp
  41376b:	ds dec esp
  41376d:	push   edx
  41376e:	adc    DWORD PTR [esi+edi*1+0x52],esp
  413772:	pop    ebp
  413773:	adc    al,0x33
  413775:	gs inc eax
  413777:	inc    eax
  413778:	(bad)  
  413779:	xor    dl,BYTE PTR [edx+0x42]
  41377c:	sbb    eax,0x43000069
  413781:	hlt    
  413782:	ss gs cmp eax,0xe3fe72c
  413789:	inc    ebx
  41378a:	repz and eax,DWORD PTR [eax]
  41378d:	xor    ecx,edi
  41378f:	push   ebp
  413790:	adc    al,BYTE PTR [edx-0x39]
  413793:	aaa    
  413794:	push   ds
  413795:	inc    esp
  413796:	int3   
  413797:	add    esi,edi
  413799:	pop    edi
  41379a:	mov    bh,0x23
  41379c:	div    DWORD PTR [ebx*8-0x2ccaeba4]
  4137a3:	pop    esi
  4137a4:	add    edx,DWORD PTR [ebp*4-0x560bfec9]
  4137ab:	pop    esi
  4137ac:	fisubr DWORD PTR [eax]
  4137ae:	add    al,cl
  4137b0:	cld    
  4137b1:	das    
  4137b2:	arpl   WORD PTR [ebx-0x668bd1ce],di
  4137b8:	out    dx,al
  4137b9:	cs jno 0x413751
  4137bc:	and    al,0x40
  4137be:	js     0x41375d
  4137c0:	xor    bl,BYTE PTR [eax+0x42]
  4137c3:	xchg   esp,eax
  4137c4:	(bad)  
  4137c5:	daa    
  4137c6:	arpl   WORD PTR [ebp+0x62],di
  4137c9:	inc    edx
  4137ca:	ins    DWORD PTR es:[edi],dx
  4137cb:	mov    cs,WORD PTR [esp+esi*8+0x40948650]
  4137d2:	jne    0x41375c
  4137d4:	xor    BYTE PTR [ebx],0x0
  4137d7:	pop    ss
  4137d8:	cdq    
  4137d9:	push   edi
  4137da:	je     0x4137c5
  4137dc:	and    al,0x32
  4137de:	jo     0x41383a
  4137e0:	xor    eax,0x476d65
  4137e5:	add    BYTE PTR [ecx+0x41],bl
  4137e8:	pop    edi
  4137e9:	cmp    ebx,DWORD PTR [eax+0x58]
  4137ec:	inc    edx
  4137ed:	sbb    DWORD PTR [edi+0x60],ebp
  4137f0:	push   eax
  4137f1:	adc    eax,0x3d6c4373
  4137f6:	dec    eax
  4137f7:	inc    eax
  4137f8:	and    BYTE PTR [ecx],bh
  4137fa:	arpl   WORD PTR [ecx],bp
  4137fc:	ins    DWORD PTR es:[edi],dx
  4137fd:	pop    es
  4137fe:	or     eax,0x139544e
  413803:	dec    ebx
  413804:	pop    edi
  413805:	add    BYTE PTR [edi+0x14],dl
  413808:	push   ecx
  413809:	push   ss
  41380a:	pop    ss
  41380b:	inc    eax
  41380c:	jne    0x413816
  41380e:	add    esi,DWORD PTR [ebx]
  413810:	pop    esp
  413811:	sub    edi,eax
  413813:	daa    
  413814:	ins    BYTE PTR es:[edi],dx
  413815:	add    al,0xf9
  413817:	arpl   WORD PTR [edx-0x2a],si
  41381a:	out    dx,eax
  41381b:	sub    eax,0x2de7ba20
  413820:	je     0x413800
  413822:	adc    eax,0xf0ad6342
  413827:	inc    edx
  413828:	ins    BYTE PTR es:[edi],dx
  413829:	add    BYTE PTR [ebx+ebp*1+0x55aa5074],al
  413830:	imul   esp,DWORD PTR [esi+0x28],0x4e
  413834:	push   esp
  413835:	push   eax
  413836:	sub    BYTE PTR [ebx+0x6c],dl
  413839:	imul   edi,DWORD PTR [ebp-0x6aa38ba8],0x486e652f
  413843:	add    DWORD PTR [ebx+0x66],ebp
  413846:	pushf  
  413847:	pop    ebp
  413848:	pop    ebp
  413849:	jb     0x41384b
  41384b:	add    BYTE PTR [ebp-0x31afbe1b],bh
  413851:	std    
  413852:	dec    edi
  413853:	pop    esp
  413854:	retf   0x6c5c
  413857:	ins    BYTE PTR es:[edi],dx
  413858:	lods   eax,DWORD PTR ds:[esi]
  413859:	pop    ebp
  41385a:	and    BYTE PTR [eax+0x6a],dl
  41385d:	push   edi
  41385e:	imul   esp,DWORD PTR [esi+0x38],0x4e
  413862:	push   esp
  413863:	push   eax
  413864:	inc    esp
  413865:	imul   DWORD PTR [edi+0x74]
  413868:	jno    0x4138c1
  41386a:	outs   dx,BYTE PTR ds:[esi]
  41386b:	jae    0x413845
  41386d:	add    al,0x6b
  41386f:	data16 sbb al,0x5f
  413872:	pop    ebp
  413873:	jb     0x4138e2
  413875:	add    al,0x42
  413877:	jne    0x41388d
  413879:	xor    al,0x61
  41387b:	je     0x413885
  41387d:	bound  ebp,QWORD PTR [ebx+0x6f]
  413880:	cs lock dec esi
  413883:	outs   dx,DWORD PTR ds:[esi]
  413884:	cs pop esp
  413886:	jae    0x4138e9
  413888:	sbb    ch,BYTE PTR ds:0x55ad425c
  41388e:	ins    BYTE PTR es:[edi],dx
  41388f:	gs pushf 
  413891:	add    DWORD PTR [edx+0x6f],esi
  413894:	aaa    
  413895:	and    BYTE PTR cs:[esi+0x3c],al
  413899:	add    BYTE PTR [eax],ah
  41389b:	inc    ebx
  41389c:	fs pop edx
  41389e:	popa   
  41389f:	outs   dx,BYTE PTR ds:[esi]
  4138a0:	pop    esp
  4138a1:	in     eax,0x4a
  4138a3:	jo     0x4138d6
  4138a5:	xlat   BYTE PTR ds:[ebx]
  4138a6:	pop    edx
  4138a7:	ins    DWORD PTR es:[edi],dx
  4138a8:	pop    es
  4138a9:	fiadd  DWORD PTR [ecx]
  4138ab:	push   ecx
  4138ac:	faddp  st(4),st
  4138ae:	push   ebp
  4138af:	jne    0x4138b1
  4138b1:	add    al,dl
  4138b3:	js     0x41391b
  4138b5:	pop    esp
  4138b6:	repz call 0x5f3d:0xab015443
  4138be:	ret    0x3096
  4138c1:	arpl   dx,ax
  4138c3:	cdq    
  4138c4:	pop    edx
  4138c5:	ins    DWORD PTR es:[edi],dx
  4138c6:	iret   
  4138c7:	fs pop edx
  4138c9:	ins    BYTE PTR es:[edi],dx
  4138ca:	int3   
  4138cb:	stos   BYTE PTR es:[edi],al
  4138cc:	xor    BYTE PTR [edi-0x5b],ah
  4138cf:	mov    BYTE PTR [eax+0x44],dl
  4138d2:	cwde   
  4138d3:	cmp    DWORD PTR [ecx],eax
  4138d5:	inc    edi
  4138d6:	(bad)  
  4138d7:	cmp    dl,BYTE PTR [ebp+0x5f]
  4138da:	test   DWORD PTR [edi],esi
  4138dc:	inc    ebp
  4138dd:	sbb    DWORD PTR [si],0x4
  4138e1:	mov    DWORD PTR cs:[eax+0x60],ecx
  4138e5:	add    BYTE PTR [ebp-0x6],bl
  4138e8:	pop    esp
  4138e9:	pop    edi
  4138ea:	sbb    DWORD PTR [edi+0x46],0x54
  4138ee:	sub    DWORD PTR [ebx+0x465f5f43],0x48656752
  4138f8:	dec    edi
  4138f9:	cs dec ebp
  4138fb:	dec    esp
  4138fc:	pop    eax
  4138fd:	add    BYTE PTR [ecx+0x24],bh
  413900:	dec    edi
  413901:	je     0x413959
  413903:	sbb    DWORD PTR [ecx+0x2e],ecx
  413906:	push   ebp
  413907:	or     al,0x58
  413909:	add    BYTE PTR [eax+0xf],dl
  41390c:	push   0x1e221372
  413911:	adc    BYTE PTR fs:[edi+0x6f01],bh
  413918:	and    al,0x14
  41391a:	pop    edi
  41391b:	imul   eax,DWORD PTR [edi+0xf],0x14317461
  413922:	ret    
  413923:	aaa    
  413924:	add    al,BYTE PTR [edx-0x37]
  413927:	pop    esp
  413928:	neg    DWORD PTR [edi-0x49]
  41392b:	add    esp,eax
  41392d:	and    al,0xc5
  41392f:	push   edi
  413930:	in     al,0x32
  413932:	mov    ecx,0xb4600566
  413937:	push   ecx
  413938:	shl    DWORD PTR [ebp*4-0x3febfec9],cl
  41393f:	pop    ebp
  413940:	sar    BYTE PTR [edi],0x88
  413943:	pop    edi
  413944:	aad    0x43
  413946:	mov    BYTE PTR [edi-0x37],dl
  413949:	adc    edi,DWORD PTR [edx-0x69c030a4]
  41394f:	bound  esp,QWORD PTR [ebx-0x6bcf5cc7]
  413955:	sub    BYTE PTR [eax-0x52a588d1],cl
  41395b:	aaa    
  41395c:	adc    DWORD PTR [edx+ebp*4],0x4c389251
  413963:	pop    edx
  413964:	jge    0x4139a3
  413966:	dec    eax
  413967:	pop    eax
  413968:	pusha  
  413969:	xor    eax,0x57315043
  41396e:	pop    ecx
  41396f:	popa   
  413970:	push   ebp
  413971:	cmp    DWORD PTR [ebp+0x50],edx
  413974:	dec    esi
  413975:	xor    eax,0x3949474b
  41397a:	dec    edx
  41397b:	pop    edi
  41397c:	add    BYTE PTR [eax],al
  41397e:	xor    DWORD PTR [edi+0x3e],eax
  413981:	bound  eax,QWORD PTR [ebp+0x2b]
  413984:	or     BYTE PTR [esi+0x52],dl
  413987:	push   eax
  413988:	cmp    bl,BYTE PTR [ebx+0x45]
  41398b:	xor    eax,0x5a6f4233
  413990:	xor    esi,DWORD PTR [ecx*1+0xe4ff763]
  413997:	inc    ebx
  413998:	or     eax,0x443157
  41399d:	or     dh,bh
  41399f:	and    al,0x75
  4139a1:	(bad)  
  4139a2:	in     al,0x37
  4139a4:	add    BYTE PTR [edi+ebx*8+0x15af7236],bh
  4139ab:	aas    
  4139ac:	arpl   cx,bp
  4139ae:	cmp    al,BYTE PTR [ecx+0x71]
  4139b1:	aad    0xf5
  4139b3:	aaa    
  4139b4:	jb     0x413970
  4139b6:	xor    al,BYTE PTR [esi+0x63]
  4139b9:	int3   
  4139ba:	sti    
  4139bb:	daa    
  4139bc:	arpl   WORD PTR [ebp-0x66ffda0b],bp
  4139c2:	jmp    0x4139e9
  4139c4:	je     0x4139af
  4139c6:	or     al,BYTE PTR [ecx+0x71]
  4139c9:	xchg   ebp,eax
  4139ca:	clc    
  4139cb:	push   edx
  4139cc:	imul   ecx,DWORD PTR [edx+esi*1+0x7e9b6d44],0x14
  4139d4:	push   ebx
  4139d5:	jp     0x413968
  4139d7:	outs   dx,BYTE PTR es:[esi]
  4139d9:	mov    BYTE PTR [ecx+0x37],bh
  4139dc:	add    BYTE PTR [ecx+0x7671258d],bl
  4139e2:	add    BYTE PTR [eax],al
  4139e4:	imul   esp,DWORD PTR [esi],0x64
  4139e7:	jmp    0x55b27b36
  4139ec:	jno    0x413a29
  4139ee:	jb     0x413a17
  4139f0:	mov    WORD PTR [edi],?
  4139f2:	arpl   cx,bp
  4139f4:	daa    
  4139f5:	inc    ecx
  4139f6:	cmp    ax,0x5382
  4139fa:	jb     0x413a40
  4139fc:	or     DWORD PTR [ebp+0x6d],edx
  4139ff:	dec    edi
  413a00:	push   ebx
  413a01:	aaa    
  413a02:	arpl   WORD PTR [edx],bp
  413a04:	pusha  
  413a05:	and    al,0x20
  413a07:	cmp    ch,BYTE PTR [edx+0x3a]
  413a0a:	je     0x413a22
  413a0c:	push   esp
  413a0d:	arpl   WORD PTR es:0x47441f4,si
  413a14:	pop    es
  413a15:	inc    edx
  413a16:	arpl   WORD PTR [eax],ax
  413a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a19:	cli    
  413a1a:	dec    edi
  413a1b:	jb     0x413a4c
  413a1d:	ss gs ins BYTE PTR es:[edi],dx
  413a20:	and    eax,0x8f53004b
  413a25:	xor    al,0x74
  413a27:	ja     0x413aa2
  413a29:	dec    eax
  413a2a:	popa   
  413a2b:	pop    esp
  413a2c:	(bad)  
  413a2d:	add    dl,BYTE PTR [eax+0x57]
  413a30:	imul   ecx,DWORD PTR [eax+0x61],0x51ed9b5c
  413a37:	inc    ebp
  413a38:	xchg   esi,eax
  413a39:	add    dl,BYTE PTR [eax+0x5c]
  413a3c:	mov    ebx,0x9b65744f
  413a41:	push   ss
  413a42:	dec    eax
  413a43:	outs   dx,DWORD PTR ds:[esi]
  413a44:	mov    esp,DWORD PTR [edx+0x0]
  413a47:	push   ebp
  413a48:	add    BYTE PTR [eax],al
  413a4a:	stos   DWORD PTR es:[edi],eax
  413a4b:	xor    esi,DWORD PTR [edx+0x0]
  413a4e:	js     0x413a9d
  413a50:	jb     0x413ac6
  413a52:	dec    eax
  413a53:	out    0x52,al
  413a55:	add    al,ch
  413a57:	popa   
  413a58:	push   0x4eeb1852
  413a5d:	dec    eax
  413a5e:	or     BYTE PTR [esi+0x72],al
  413a61:	outs   dx,DWORD PTR ds:[esi]
  413a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a63:	push   eax
  413a64:	ins    BYTE PTR es:[edi],dx
  413a65:	mov    ecx,DWORD PTR gs:[ebx]
  413a68:	js     0x413ad7
  413a6a:	pop    esp
  413a6b:	sbb    BYTE PTR [esi+eax*2+0x44],bl
  413a6f:	call   0x48a17f93
  413a74:	ins    BYTE PTR es:[edi],dx
  413a75:	outs   dx,DWORD PTR ds:[esi]
  413a76:	mov    dl,BYTE PTR [ecx+0x72]
  413a79:	add    BYTE PTR [ebx+0x4b],cl
  413a7c:	data16 je 0x413aa6
  413a7f:	xor    eax,0x563c6572
  413a84:	push   esp
  413a85:	push   eax
  413a86:	cmp    cl,dh
  413a88:	ja     0x413afa
  413a8a:	sbb    al,0x4b
  413a8c:	jb     0x413af3
  413a8e:	sbb    bh,ah
  413a90:	inc    ebp
  413a91:	push   esp
  413a92:	xor    ebx,ebp
  413a94:	and    eax,DWORD PTR [ebx+0x29]
  413a97:	or     ebx,DWORD PTR [eax+0x6d]
  413a9a:	and    esp,DWORD PTR [eax]
  413a9c:	push   esi
  413a9d:	pop    esp
  413a9e:	push   es
  413a9f:	and    dl,BYTE PTR [esi+0x69]
  413aa2:	and    ch,BYTE PTR [ebx+0x1f146162]
  413aa8:	xor    eax,0x586ef246
  413aad:	ins    DWORD PTR es:[edi],dx
  413aae:	add    BYTE PTR [eax],al
  413ab0:	or     eax,0x4472627d
  413ab5:	or     eax,0x7d313416
  413aba:	dec    esi
  413abb:	je     0x413a9a
  413abd:	leave  
  413abe:	push   edi
  413abf:	jno    0x413af2
  413ac1:	mov    ds,WORD PTR [eax+0x66]
  413ac4:	fnsave [ecx+0x62]
  413ac7:	jb     0x413a9d
  413ac9:	sahf   
  413aca:	aas    
  413acb:	push   esp
  413acc:	loope  0x413aa8
  413ace:	ds js  0x413a92
  413ad1:	sahf   
  413ad2:	pop    eax
  413ad3:	jb     0x413aa1
  413ad5:	mov    WORD PTR ds:0x5f32a350,fs
  413adb:	addr16 xchg ebp,eax
  413add:	mov    al,ds:0x9c810054
  413ae2:	push   esp
  413ae3:	jno    0x413a83
  413ae5:	call   0x7162:0x8b316453
  413aec:	adc    BYTE PTR [edx+0x57],0x72
  413af0:	xchg   ebp,eax
  413af1:	out    0x48,eax
  413af3:	jo     0x413a81
  413af5:	mov    ebx,0x47626d39
  413afa:	add    al,0x4c
  413afc:	push   esi
  413afd:	bound  ebx,QWORD PTR [ecx+0x6e]
  413b00:	xor    DWORD PTR [ebx],ecx
  413b02:	push   edi
  413b03:	jb     0x413b62
  413b05:	mov    ebx,0xe7586e3a
  413b0a:	pop    eax
  413b0b:	pop    edi
  413b0c:	push   ebp
  413b0d:	adc    al,0x37
  413b0f:	arpl   WORD PTR [ebp+0x3c],ax
  413b12:	out    0x41,eax
  413b14:	add    BYTE PTR [eax],al
  413b16:	cmp    eax,0x255b3a24
  413b1b:	aaa    
  413b1c:	mov    ebp,0xe7401a4b
  413b21:	daa    
  413b22:	mul    DWORD PTR ds:0x27f66110
  413b28:	or     al,0x15
  413b2a:	xor    DWORD PTR [edx],eax
  413b2c:	add    BYTE PTR [edx+0xe],bl
  413b2f:	adc    al,0xc3
  413b31:	xor    esi,ebx
  413b33:	inc    ecx
  413b34:	mov    ds:0xb337084a,eax
  413b39:	inc    esp
  413b3a:	fadd   QWORD PTR [ecx-0x3b]
  413b3d:	pop    edx
  413b3e:	int3   
  413b3f:	dec    edi
  413b40:	call   0xc758:0xd024e05e
  413b47:	and    al,0xe7
  413b49:	daa    
  413b4a:	loopne 0x413b82
  413b4c:	mov    edx,0x9540ce54
  413b51:	push   esp
  413b52:	xor    DWORD PTR [ebp-0x72],eax
  413b55:	popa   
  413b56:	mov    ebp,0x92558828
  413b5b:	push   eax
  413b5c:	mov    ch,0x62
  413b5e:	xchg   edi,eax
  413b5f:	pop    eax
  413b60:	sbb    BYTE PTR [edx+edx*4+0x50],0x9a
  413b65:	pop    esi
  413b66:	nop
  413b67:	sub    DWORD PTR [ecx+0x5e],edi
  413b6a:	ja     0x413bb8
  413b6c:	out    0x44,eax
  413b6e:	xchg   esp,eax
  413b6f:	ds dec ebp
  413b71:	pop    ebp
  413b72:	xchg   esp,eax
  413b73:	hlt    
  413b74:	ss gs jge 0x413bb4
  413b78:	out    0x30,eax
  413b7a:	add    BYTE PTR [eax],al
  413b7c:	pop    ebp
  413b7d:	sub    BYTE PTR [ecx+0x65],bl
  413b80:	outs   dx,DWORD PTR ds:[esi]
  413b81:	dec    esp
  413b82:	pop    ss
  413b83:	add    al,0x7d
  413b85:	and    edx,DWORD PTR [eax+0x50]
  413b88:	push   edx
  413b89:	and    eax,DWORD PTR [eax]
  413b8b:	pop    es
  413b8c:	jge    0x413bc9
  413b8e:	ins    BYTE PTR es:[edi],dx
  413b8f:	jmp    0x399591a2
  413b94:	add    esp,DWORD PTR [ebx]
  413b96:	jno    0x413ba9
  413b98:	sub    eax,0xd1a7342
  413b9d:	inc    ebp
  413b9e:	addr16 adc eax,0x1477fe10
  413ba4:	stc    
  413ba5:	adc    edx,DWORD PTR [ecx+0x4]
  413ba8:	add    esp,DWORD PTR [esi]
  413baa:	arpl   bx,di
  413bac:	xor    al,BYTE PTR [ebx+0x71]
  413baf:	add    al,0xe3
  413bb1:	cmp    eax,0x1411d45f
  413bb6:	push   eax
  413bb7:	enter  0x24e3,0x75
  413bbb:	mov    BYTE PTR [eax],0x38
  413bbe:	add    BYTE PTR [edi-0x29afdc0a],ah
  413bc4:	add    BYTE PTR [eax],ch
  413bc6:	add    BYTE PTR [edx-0x418bca01],bl
  413bcc:	aad    0x21
  413bce:	arpl   WORD PTR [ebp-0x7388de0d],cx
  413bd4:	loopne 0x413c25
  413bd6:	push   ebp
  413bd7:	test   al,dl
  413bd9:	inc    esp
  413bda:	addr16 popf 
  413bdc:	xchg   ecx,eax
  413bdd:	inc    esp
  413bde:	jae    0x413b6b
  413be0:	add    BYTE PTR [eax],al
  413be2:	jle    0x413c1b
  413be4:	jno    0x413b77
  413be6:	xchg   ecx,eax
  413be7:	and    al,BYTE PTR [eax]
  413be9:	popf   
  413bea:	jo     0x413c23
  413bec:	je     0x413b90
  413bee:	ins    DWORD PTR es:[edi],dx
  413bef:	arpl   WORD PTR ds:[ecx+0x32],si
  413bf3:	xor    ah,BYTE PTR [edi+0x5d]
  413bf6:	pop    edx
  413bf7:	aaa    
  413bf8:	outs   dx,BYTE PTR ds:[esi]
  413bf9:	inc    esp
  413bfa:	gs (bad) 
  413bfc:	arpl   WORD PTR [edx+0x35],bx
  413bff:	pop    esp
  413c00:	ins    DWORD PTR es:[edi],dx
  413c01:	pop    edx
  413c02:	cmp    DWORD PTR [esi],0x3585005f
  413c08:	add    BYTE PTR [ebp+0x1b],dl
  413c0b:	xor    eax,0x4d796e72
  413c10:	popa   
  413c11:	add    BYTE PTR [eax],ch
  413c13:	cmp    DWORD PTR [edi+0x73],ebp
  413c16:	pop    ds
  413c17:	inc    edi
  413c18:	jb     0x413c7e
  413c1a:	enter  0x6ae2,0x72
  413c1e:	dec    esp
  413c1f:	sbb    BYTE PTR [edi+0x6f],cl
  413c22:	cs inc esp
  413c24:	jae    0x413c87
  413c26:	call   0x5d48:0x30455c33
  413c2d:	outs   dx,BYTE PTR ds:[esi]
  413c2e:	pop    esp
  413c2f:	inc    edx
  413c30:	gs jbe 0x413c60
  413c33:	cld    
  413c34:	dec    esi
  413c35:	gs pop ebx
  413c37:	inc    ecx
  413c38:	outs   dx,DWORD PTR gs:[esi]
  413c3a:	inc    cx
  413c3c:	add    BYTE PTR [ebp+ebx*4+0x5a],bl
  413c40:	jo     0x413ca3
  413c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c43:	out    dx,al
  413c44:	jno    0x413caf
  413c46:	add    BYTE PTR [eax],al
  413c48:	sahf   
  413c49:	xor    eax,DWORD PTR [eax]
  413c4b:	pop    esp
  413c4c:	ins    BYTE PTR es:[edi],dx
  413c4d:	inc    esp
  413c4e:	gs jbe 0x413cce
  413c51:	inc    ecx
  413c52:	cs push 0xffffff8b
  413c55:	adc    ah,BYTE PTR [edx]
  413c57:	jo     0x413c02
  413c59:	inc    ecx
  413c5a:	outs   dx,DWORD PTR ds:[esi]
  413c5b:	ja     0x413c04
  413c5d:	inc    esp
  413c5e:	fs and bh,al
  413c61:	sbb    esp,DWORD PTR [eax]
  413c63:	and    bl,BYTE PTR [eax]
  413c65:	hlt    
  413c66:	sub    eax,DWORD PTR [eax]
  413c68:	mov    ebx,0x9f746646
  413c6d:	cmp    BYTE PTR [edx+0x65],dh
  413c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c71:	push   esp
  413c72:	js     0x413ce4
  413c74:	mov    ecx,0x61724447
  413c79:	pop    esi
  413c7a:	popa   
  413c7b:	add    BYTE PTR [ebp+0x60],cl
  413c7e:	jo     0x413ce1
  413c80:	xor    DWORD PTR [ebp+0x40],edx
  413c83:	jb     0x413cdd
  413c85:	inc    ebp
  413c86:	pop    ebp
  413c87:	pop    ebp
  413c88:	imul   eax,DWORD PTR [esi+0x55],0x5d0a3163
  413c8f:	jb     0x413cd8
  413c91:	pusha  
  413c92:	push   edx
  413c93:	add    BYTE PTR [edx+ebp*8+0x5c],bl
  413c97:	jb     0x413d08
  413c99:	sbb    al,0x55
  413c9b:	arpl   WORD PTR [ecx],si
  413c9d:	jmp    0x413cff
  413c9f:	jno    0x413cc3
  413ca1:	push   cs
  413ca2:	push   ebx
  413ca3:	jb     0x413cb2
  413ca5:	mov    ebx,0xaa105024
  413caa:	push   eax
  413cab:	jne    0x413cad
  413cad:	add    BYTE PTR [esi],al
  413caf:	test   eax,0x13f5005d
  413cb4:	push   edx
  413cb5:	arpl   WORD PTR [edx],dx
  413cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb8:	push   esp
  413cb9:	jb     0x413cb3
  413cbb:	mov    edx,0xc70f6d30
  413cc0:	dec    esp
  413cc1:	pop    edi
  413cc2:	jecxz  0x413ca3
  413cc4:	and    eax,0x2172f24e
  413cc9:	push   ecx
  413cca:	into   
  413ccb:	fmul   QWORD PTR [ebp+0x75]
  413cce:	shr    BYTE PTR [eax+0x5e],1
  413cd1:	pop    esp
  413cd2:	repnz (bad) 
  413cd4:	bound  esi,QWORD PTR [ecx-0x3e]
  413cd7:	shl    DWORD PTR [eax+0x46],cl
  413cda:	in     eax,0x6a
  413cdc:	and    eax,0x426add46
  413ce1:	popa   
  413ce2:	xchg   edx,eax
  413ce3:	xchg   esi,eax
  413ce4:	dec    esi
  413ce5:	outs   dx,BYTE PTR ds:[esi]
  413ce6:	popf   
  413ce7:	mov    al,BYTE PTR [ecx]
  413ce9:	inc    esi
  413cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ceb:	sub    esi,DWORD PTR [eax]
  413ced:	arpl   WORD PTR [ebx+0x31725e25],sp
  413cf3:	jge    0x413d42
  413cf5:	jo     0x413d53
  413cf7:	sub    bl,BYTE PTR [esi+0x72]
  413cfa:	outs   dx,DWORD PTR ds:[esi]
  413cfb:	adc    al,0x48
  413cfd:	push   edi
  413cfe:	xchg   edx,eax
  413cff:	adc    al,0x25
  413d01:	push   eax
  413d02:	popa   
  413d03:	inc    esp
  413d04:	dec    eax
  413d05:	push   ecx
  413d06:	pusha  
  413d07:	and    eax,0x1455523e
  413d0c:	es ds pop ebp
  413d0f:	and    al,0x17
  413d11:	arpl   WORD PTR [eax],ax
  413d13:	add    BYTE PTR [eax+0x21],al
  413d16:	ds push ebp
  413d18:	inc    ebx
  413d19:	cmp    bh,ah
  413d1b:	cmp    eax,0x5b2b2445
  413d20:	inc    ebx
  413d21:	aaa    
  413d22:	or     dl,BYTE PTR [eax+0x1c]
  413d25:	and    dl,BYTE PTR [eax]
  413d27:	add    al,0x0
  413d29:	pop    ebp
  413d2a:	and    eax,0x19530430
  413d2f:	aas    
  413d30:	cmc    
  413d31:	pop    ebp
  413d32:	sub    bh,BYTE PTR [ecx+edx*2]
  413d35:	inc    ecx
  413d36:	push   es
  413d37:	pop    esi
  413d38:	std    
  413d39:	and    al,0x8
  413d3b:	push   edx
  413d3c:	adc    dl,BYTE PTR [eax-0x53]
  413d3f:	push   edi
  413d40:	push   cs
  413d41:	ds (bad) 
  413d43:	daa    
  413d44:	cs xor edx,ecx
  413d47:	push   esp
  413d48:	loop   0x413d87
  413d4a:	rcl    DWORD PTR [eax+0x31],cl
  413d4d:	inc    ecx
  413d4e:	(bad)  
  413d4f:	pop    ebp
  413d50:	frstor [eax+ecx*8]
  413d53:	push   ecx
  413d54:	ror    BYTE PTR [edi-0x53],cl
  413d57:	das    
  413d58:	loope  0x413daa
  413d5a:	mov    ebx,0x9b3dd25a
  413d5f:	daa    
  413d60:	loopne 0x413d9c
  413d62:	xchg   ebx,eax
  413d63:	pop    esi
  413d64:	mov    al,ds:0x8f54ba14
  413d69:	and    BYTE PTR [esi-0x5cce5c9e],dl
  413d6f:	xor    BYTE PTR [edx+esi*1+0x3b5f2b73],al
  413d76:	add    BYTE PTR [ebx+0x0],bh
  413d79:	add    BYTE PTR [ebp+0x48],ah
  413d7c:	inc    esi
  413d7d:	xchg   ebp,eax
  413d7e:	inc    edx
  413d7f:	push   ebp
  413d80:	ins    BYTE PTR es:[edi],dx
  413d81:	push   eax
  413d82:	dec    eax
  413d83:	cmp    dh,BYTE PTR [ebp+edi*1-0x7a]
  413d87:	xor    esi,DWORD PTR [esp+ecx*2+0x1e]
  413d8b:	adc    al,0x2e
  413d8d:	ds sbb eax,0x22170035
  413d93:	cmp    BYTE PTR [ecx+ebp*8+0x6e],ch
  413d97:	push   ecx
  413d98:	push   eax
  413d99:	sbb    al,BYTE PTR [edx]
  413d9b:	xor    dh,BYTE PTR [esi+esi*1+0x14]
  413d9f:	arpl   WORD PTR es:[ebp+0x69],ax
  413da3:	xor    esi,DWORD PTR [edx+0x4]
  413da6:	push   esi
  413da7:	and    BYTE PTR [ebp+0x1b],ch
  413daa:	fs hlt 
  413dac:	dec    esp
  413dad:	sbb    DWORD PTR [eax+0x25],ebx
  413db0:	add    BYTE PTR ds:0xfb5f3bfe,ah
  413db6:	pop    ecx
  413db7:	xor    BYTE PTR [ecx+0xc],dl
  413dba:	dec    ecx
  413dbb:	and    BYTE PTR [edi-0x1],ah
  413dbe:	dec    ebx
  413dbf:	and    eax,0x254fca2e
  413dc4:	add    BYTE PTR [ebp-0x24a0c3f9],bh
  413dca:	sbb    DWORD PTR [eax],esi
  413dcc:	push   ecx
  413dcd:	les    esp,FWORD PTR [esi]
  413dcf:	and    BYTE PTR [edi-0x29],ah
  413dd2:	or     esp,DWORD PTR ds:0xe3d3f85d
  413dd8:	pop    esp
  413dd9:	cld    
  413dda:	inc    eax
  413ddb:	xor    al,0x61
  413ddd:	mov    edx,0x48320000
  413de2:	push   ecx
  413de3:	xchg   ecx,eax
  413de4:	or     eax,0x87856326
  413de9:	aaa    
  413dea:	je     0x413d89
  413dec:	push   ebp
  413ded:	cmp    ah,BYTE PTR [ebp-0x66]
  413df0:	and    BYTE PTR [edi+ebp*2],ah
  413df3:	add    BYTE PTR [edi+esi*8+0x4b186573],bh
  413dfa:	dec    edi
  413dfb:	push   0x6460e0b9
  413e00:	fwait
  413e01:	sti    
  413e02:	jae    0x413e78
  413e04:	popa   
  413e05:	out    0x62,al
  413e07:	jae    0x413e38
  413e09:	mov    eax,ds:0xad1f305c
  413e0e:	sub    esi,DWORD PTR [ebx+0x79]
  413e11:	in     al,0x64
  413e13:	je     0x413e7a
  413e15:	adc    BYTE PTR [ebx+eax*2+0x7f],bl
  413e19:	(bad)  
  413e1a:	gs gs jne 0x413e71
  413e1e:	jno    0x413e90
  413e20:	sub    BYTE PTR [ebx+0x6b],al
  413e23:	data16 adc al,0xef
  413e26:	pop    esp
  413e27:	jb     0x413e5e
  413e29:	adc    BYTE PTR [ebp+eiz*2+0x39],ch
  413e2d:	loopne 0x413e94
  413e2f:	je     0x413e69
  413e31:	adc    BYTE PTR [ecx+0x6e],dh
  413e34:	cmp    al,0xfd
  413e36:	pop    esp
  413e37:	jo     0x413eb7
  413e39:	sti    
  413e3a:	ja     0x413ea1
  413e3c:	cwde   
  413e3d:	loope  0x413ea3
  413e3f:	je     0x413e76
  413e41:	jecxz  0x413e70
  413e43:	add    BYTE PTR fs:[eax],al
  413e46:	imul   esp,edx,0xe28172ff
  413e4c:	pusha  
  413e4d:	jae    0x413e7d
  413e4f:	stc    
  413e50:	ins    DWORD PTR es:[edi],dx
  413e51:	imul   ecx,DWORD PTR [eax+0x4a],0xe669654c
  413e58:	push   edx
  413e59:	popa   
  413e5a:	mov    bh,bl
  413e5c:	pop    ebx
  413e5d:	dec    esp
  413e5e:	jne    0x413e4f
  413e60:	outs   dx,DWORD PTR ds:[esi]
  413e61:	inc    esi
  413e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e63:	inc    esi
  413e64:	add    BYTE PTR [ebx+0x7f],dl
  413e67:	pop    esp
  413e68:	push   esp
  413e69:	push   edi
  413e6a:	fnstcw WORD PTR [edi]
  413e6c:	inc    ecx
  413e6d:	pop    esp
  413e6e:	xor    DWORD PTR [edi+0x28],ebp
  413e71:	pop    edi
  413e72:	mov    eax,ds:0x8c722462
  413e77:	mov    ebx,0x1f826e4c
  413e7c:	and    al,0x6c
  413e7e:	xchg   ebp,eax
  413e7f:	mov    esp,DWORD PTR [esp+esi*2]
  413e82:	mov    DWORD PTR [ebx+0x5c7d5f45],edi
  413e88:	dec    eax
  413e89:	arpl   WORD PTR [bp+di+0x5f51],di
  413e8e:	bound  ecx,QWORD PTR [esi+0x37]
  413e91:	ins    DWORD PTR es:[edi],dx
  413e92:	arpl   WORD PTR [edi+0x4],cx
  413e95:	dec    eax
  413e96:	inc    esi
  413e97:	out    dx,al
  413e98:	aaa    
  413e99:	dec    esi
  413e9a:	push   eax
  413e9b:	pop    eax
  413e9c:	and    eax,0x24ee5c00
  413ea1:	jb     0x413f12
  413ea3:	pop    esp
  413ea4:	sub    eax,0x24ed3163
  413ea9:	imul   eax,DWORD PTR [eax],0x0
  413eac:	push   ds
  413ead:	jmp    DWORD PTR [esp+eax*2]
  413eb0:	sbb    BYTE PTR ds:0xaa256125,cl
  413eb6:	xor    esi,DWORD PTR [edi+0x31]
  413eb9:	or     ebp,DWORD PTR [edi]
  413ebb:	jb     0x413ec2
  413ebd:	stc    
  413ebe:	xor    al,0x6b
  413ec0:	adc    ebx,DWORD PTR [eax]
  413ec2:	ss add bh,dh
  413ec5:	or     eax,0xc7067254
  413eca:	xor    BYTE PTR [ecx-0x22],ah
  413ecd:	(bad)  
  413ece:	add    DWORD PTR [ecx-0x2a],edx
  413ed1:	fdiv   DWORD PTR ds:0x26ccd075
  413ed7:	pop    esp
  413ed8:	in     al,0xdb
  413eda:	xor    esi,DWORD PTR [eax+ebx*8-0x28]
  413ede:	loope  0x413f2f
  413ee0:	ret    
  413ee1:	shr    DWORD PTR [edx+esi*2],cl
  413ee4:	mov    eax,0x25c0166
  413ee9:	adc    al,0xd9
  413eeb:	inc    ebp
  413eec:	xchg   esi,eax
  413eed:	and    BYTE PTR [ebp+0x7ffaa137],ah
  413ef3:	xor    DWORD PTR [esi-0x7fb862ec],edx
  413ef9:	cmp    edi,DWORD PTR [ebx+0x26]
  413efc:	cmp    dl,0x8f
  413eff:	xor    DWORD PTR [esi-0x6dae6cec],ecx
  413f05:	and    BYTE PTR [ebx+0x4c228e35],ah
  413f0b:	add    al,0x81
  413f0d:	xor    ebx,DWORD PTR [edx+0x35]
  413f10:	add    BYTE PTR [eax],al
  413f12:	jl     0x413f4d
  413f14:	pop    ecx
  413f15:	sub    BYTE PTR [ecx],dh
  413f17:	aas    
  413f18:	pop    ecx
  413f19:	xor    BYTE PTR [ecx],dh
  413f1b:	aas    
  413f1c:	cmp    ah,BYTE PTR [edi]
  413f1e:	inc    ebx
  413f1f:	pop    edx
  413f20:	dec    eax
  413f21:	das    
  413f22:	push   edx
  413f23:	adc    al,0x19
  413f25:	xor    DWORD PTR [eax+eiz*1+0x23],ecx
  413f29:	sub    eax,DWORD PTR [ebx+0x2f]
  413f2c:	or     bh,BYTE PTR [eax]
  413f2e:	sbb    al,0x26
  413f30:	and    BYTE PTR [ecx+eax*1],al
  413f33:	cmp    DWORD PTR [ecx],ebx
  413f35:	cmp    BYTE PTR [ecx],dh
  413f37:	inc    ebp
  413f38:	(bad)  
  413f39:	sub    DWORD PTR ds:0x12360821,ebx
  413f3f:	dec    eax
  413f40:	sbb    dh,BYTE PTR [ecx]
  413f42:	add    ah,BYTE PTR [eax]
  413f44:	jmp    ebx
  413f46:	loopne 0x413f82
  413f48:	cmc    
  413f49:	es add esi,esp
  413f4c:	mov    edx,0xcd3bd026
  413f51:	xor    ch,dl
  413f53:	cmp    dh,cl
  413f55:	sub    dl,dl
  413f57:	and    al,0xab
  413f59:	pop    eax
  413f5a:	shl    BYTE PTR ds:0x21d635ab,cl
  413f60:	les    ebx,FWORD PTR [edi-0x10]
  413f63:	cmp    BYTE PTR [eax],al
  413f65:	mov    DWORD PTR [eax],0xbb56135
  413f6b:	aaa    
  413f6c:	outs   dx,BYTE PTR ds:[esi]
  413f6d:	call   0x3368:0x9b634532
  413f74:	jb     0x413f33
  413f76:	add    BYTE PTR [eax],al
  413f78:	pop    ebx
  413f79:	and    al,0x63
  413f7b:	jmp    0xc9917fe8
  413f80:	jne    0x413fdb
  413f82:	dec    esi
  413f83:	xchg   ebp,eax
  413f84:	pop    esp
  413f85:	pop    ecx
  413f86:	dec    esp
  413f87:	jmp    0xaa917ff4
  413f8c:	popa   
  413f8d:	push   esi
  413f8e:	add    BYTE PTR [edi],dl
  413f90:	and    eax,0x86e96622
  413f95:	inc    esp
  413f96:	jb     0x413fde
  413f98:	pop    ss
  413f99:	das    
  413f9a:	ins    BYTE PTR es:[edi],dx
  413f9b:	inc    esp
  413f9c:	and    dl,BYTE PTR [ecx+eax*4]
  413f9f:	inc    esp
  413fa0:	icebp  
  413fa1:	sbb    DWORD PTR [esi+0x712f957a],ecx
  413fa7:	xchg   BYTE PTR [esi+0x3c],bh
  413faa:	je     0x413fe1
  413fac:	std    
  413fad:	jmp    0x3c7415de
  413fb2:	je     0x413fc9
  413fb4:	pop    ebp
  413fb5:	and    eax,0xa78fc63a
  413fba:	arpl   WORD PTR ds:0xd62cea5d,dx
  413fc0:	xor    bh,BYTE PTR [ecx]
  413fc2:	jo     0x413fc8
  413fc4:	inc    ebx
  413fc5:	inc    edi
  413fc6:	add    dh,bh
  413fc8:	push   ebp
  413fc9:	ss fs mov edi,0xe974474e
  413fd0:	cmovne ebp,DWORD PTR [ebp-0x39]
  413fd4:	push   ds
  413fd5:	and    DWORD PTR [edi-0x25],ebx
  413fd8:	or     DWORD PTR [eax+0x4d],ecx
  413fdb:	fld    DWORD PTR [eax]
  413fdd:	add    BYTE PTR [ecx],cl
  413fdf:	and    bl,BYTE PTR [edi+0x0]
  413fe2:	cmp    BYTE PTR [ebx+0x6b],al
  413fe5:	data16 jl 0x413fc6
  413fe8:	pop    esp
  413fe9:	jb     0x414058
  413feb:	adc    ecx,DWORD PTR [ecx+eiz*2+0x7b]
  413fef:	fistp  WORD PTR [edi]
  413ff1:	inc    esp
  413ff2:	shl    esp,0x60
  413ff5:	arpl   WORD PTR [ebp+esi*8+0x12fb7971],di
  413ffc:	dec    esp
  413ffd:	popa   
  413ffe:	mov    ebx,0xa6491fde
  414003:	loope  0x414078
  414005:	popa   
  414006:	mov    ah,0xf6
  414008:	pop    ds
  414009:	push   eax
  41400a:	test   eax,0x970067de
  41400f:	loop   0x414071
  414011:	jb     0x41408c
  414013:	mov    dh,0x45
  414015:	push   esp
  414016:	adc    eax,0x70735c44
  41401b:	std    
  41401c:	imul   ebp,DWORD PTR [esp+eax*1-0x9],0x6f
  414021:	gs data16 xor al,0x5f
  414025:	outs   dx,DWORD PTR ds:[esi]
  414026:	jne    0x41400d
  414028:	pop    esp
  414029:	outs   dx,BYTE PTR ds:[esi]
  41402a:	ins    BYTE PTR es:[edi],dx
  41402b:	adc    BYTE PTR [ebx+0x69],dh
  41402e:	sti    
  41402f:	cld    
  414030:	gs je  0x41407b
  414033:	jecxz  0x4140a6
  414035:	jbe    0x414082
  414037:	mov    dh,0x5f
  414039:	imul   esi,DWORD PTR [esi],0x2b415c10
  41403f:	std    
  414040:	inc    ecx
  414041:	dec    ecx
  414042:	add    BYTE PTR [eax],al
  414044:	sub    al,0x10
  414046:	dec    edi
  414047:	outs   dx,DWORD PTR ds:[esi]
  414048:	cs in  al,dx
  41404a:	jb     0x4140ad
  41404c:	jp     0x414049
  41404e:	pop    ebx
  41404f:	inc    ecx
  414050:	sub    edi,ebp
  414052:	inc    ecx
  414053:	dec    ecx
  414054:	lods   al,BYTE PTR ds:[esi]
  414055:	adc    cl,BYTE PTR [ecx+0x52]
  414058:	popf   
  414059:	adc    cl,BYTE PTR [edi+0x4f]
  41405c:	xor    DWORD PTR [edi+0x55],esi
  41405f:	push   ebp
  414060:	lock push 0x48
  414063:	pop    esp
  414064:	repnz shl BYTE PTR [ecx+esi*2],0xc2
  414069:	iret   
  41406a:	xor    bl,BYTE PTR [ebp+eiz*8+0x63]
  41406e:	xor    DWORD PTR [ebx-0x1b],esp
  414071:	rcr    DWORD PTR [edi],cl
  414073:	pop    esp
  414074:	stos   BYTE PTR es:[edi],al
  414075:	jp     0x4140b6
  414077:	das    
  414078:	outs   dx,DWORD PTR ds:[esi]
  414079:	leave  
  41407a:	inc    edx
  41407b:	xor    BYTE PTR [edi-0x30],dh
  41407e:	stc    
  41407f:	das    
  414080:	pop    eax
  414081:	mov    edi,0x7c7033f0
  414086:	inc    edx
  414087:	sub    esi,DWORD PTR [ebx+0x7a]
  41408a:	inc    ebx
  41408b:	xor    ecx,DWORD PTR [edi+eiz*2-0xc]
  41408f:	ds aas 
  414091:	pop    edi
  414092:	dec    eax
  414093:	xor    ah,BYTE PTR [esi]
  414095:	cmc    
  414096:	repnz xor al,0x1e
  414099:	dec    eax
  41409a:	add    al,0x51
  41409c:	outs   dx,BYTE PTR ds:[esi]
  41409d:	cmc    
  41409e:	push   edi
  41409f:	push   ebp
  4140a0:	jo     0x41408b
  4140a2:	inc    esp
  4140a3:	pop    esp
  4140a4:	jb     0x4140e5
  4140a6:	and    DWORD PTR [ecx+0x0],esi
  4140a9:	add    BYTE PTR [edx+0x50],al
  4140ac:	das    
  4140ad:	pop    esp
  4140ae:	gs in  al,0x33
  4140b1:	arpl   WORD PTR [ebp+0x54],sp
  4140b4:	and    bl,BYTE PTR [edx+ebp*1-0x4c]
  4140b8:	inc    esi
  4140b9:	aas    
  4140ba:	pop    esp
  4140bb:	shl    dh,0x31
  4140be:	pop    eax
  4140bf:	rol    BYTE PTR [esi+0x2f],1
  4140c2:	arpl   cx,cx
  4140c4:	out    dx,al
  4140c5:	xor    eax,DWORD PTR [esi+0x68]
  4140c8:	hlt    
  4140c9:	sub    dh,bl
  4140cb:	stc    
  4140cc:	repnz ss dec esp
  4140cf:	clc    
  4140d0:	div    DWORD PTR [edi]
  4140d2:	inc    ebx
  4140d3:	pusha  
  4140d4:	inc    ebx
  4140d5:	cmp    BYTE PTR [ecx],ah
  4140d7:	adc    al,0x1e
  4140d9:	icebp  
  4140da:	and    BYTE PTR [ecx-0x24],dl
  4140dd:	add    esp,esp
  4140df:	cmp    bl,dl
  4140e1:	es iret 
  4140e3:	pop    ds
  4140e4:	xlat   BYTE PTR ds:[ebx]
  4140e5:	xor    bl,al
  4140e7:	sbb    eax,0x35cfedba
  4140ec:	rol    BYTE PTR [ebx],1
  4140ee:	les    edi,FWORD PTR [edx]
  4140f0:	mov    edx,0xb71fcf26
  4140f5:	in     eax,dx
  4140f6:	xchg   edi,eax
  4140f7:	ss nop
  4140f9:	add    ebp,DWORD PTR [edi+0x40]
  4140fc:	mov    bh,0x55
  4140fe:	mov    WORD PTR [ebx],gs
  414100:	mov    BYTE PTR [edx+edx*4],ah
  414103:	and    bh,BYTE PTR [ebp-0x18db7adb]
  414109:	inc    ebp
  41410a:	pop    ebp
  41410b:	inc    esp
  41410c:	xchg   ebp,eax
  41410d:	sub    al,0x0
  41410f:	add    BYTE PTR [esi-0x7cd971cd],al
  414115:	div    BYTE PTR [edi+0x20]
  414118:	xor    DWORD PTR [eax+0x39],ecx
  41411b:	sub    al,0x4e
  41411d:	ss dec esi
  41411f:	push   ecx
  414120:	dec    esp
  414121:	cs pop ebx
  414123:	out    dx,al
  414124:	push   ecx
  414125:	xor    eax,0x215f043c
  41412a:	cmp    dh,cl
  41412c:	adc    al,0x30
  41412e:	dec    ebx
  41412f:	xor    BYTE PTR [ecx],dh
  414131:	push   esi
  414132:	sbb    dl,BYTE PTR [ecx+0x54]
  414135:	pop    ebx
  414136:	cmp    eax,0x3514252b
  41413b:	push   ecx
  41413c:	add    BYTE PTR [ebp+0x3a],al
  41413f:	sub    al,0x22
  414141:	and    BYTE PTR [ebx],cl
  414143:	sub    eax,0x4de7361c
  414148:	loopne 0x41418a
  41414a:	sub    DWORD PTR [ebx],esp
  41414c:	add    BYTE PTR [edi],ch
  41414e:	mov    ch,0xf7
  414150:	fisttp QWORD PTR [edi+0x0]
  414153:	or     al,0x50
  414155:	aaa    
  414156:	fs add al,0xf3
  414159:	and    BYTE PTR [esi-0x31],ah
  41415c:	mov    cr0,eax
  41415f:	mov    edx,0xbd4752f7
  414164:	out    dx,eax
  414165:	pop    eax
  414166:	pop    ebp
  414167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414168:	add    BYTE PTR [ecx],dh
  41416a:	arpl   WORD PTR [eax-0x1694cf02],si
  414170:	loop   0x4141cc
  414172:	das    
  414173:	clc    
  414174:	add    BYTE PTR [eax],al
  414176:	aad    0x4e
  414178:	arpl   WORD PTR [ebp-0x738bcd85],si
  41417e:	pusha  
  41417f:	xor    bl,BYTE PTR [edi-0x73]
  414182:	imul   esi,DWORD PTR [edi],0x3146ba77
  414188:	je     0x414173
  41418a:	bound  ecx,QWORD PTR [ebp+0x2f]
  41418d:	mov    eax,0x7572e365
  414192:	dec    edx
  414193:	aaa    
  414194:	outs   dx,BYTE PTR ds:[esi]
  414195:	jge    0x4141e2
  414197:	xor    eax,0x1417755f
  41419c:	push   eax
  41419d:	xor    bl,ah
  41419f:	repnz push eax
  4141a1:	and    eax,0x4c444187
  4141a6:	push   cs
  4141a7:	es ja  0x414203
  4141aa:	add    DWORD PTR [eax+edx*2],edx
  4141ad:	xor    bh,BYTE PTR [edx+esi*8+0x3707275c]
  4141b4:	arpl   WORD PTR [edx],bx
  4141b6:	or     DWORD PTR [ecx],esi
  4141b8:	je     0x4141a3
  4141ba:	xor    dl,BYTE PTR [eax+eax*1]
  4141bd:	jmp    0xe94155f4
  4141c2:	xor    dl,BYTE PTR [eax+eax*1]
  4141c5:	jmp    0xe94155fc
  4141ca:	xor    dl,BYTE PTR [eax+eax*1]
  4141cd:	add    BYTE PTR [eax-0x77ffffe9],bl
  4141d3:	pop    ss
  4141d4:	add    BYTE PTR [eax],al
  4141d6:	mov    BYTE PTR [edi],dl
  4141d8:	add    BYTE PTR [eax],al
  4141da:	add    BYTE PTR [eax],al
  4141dc:	pop    eax
  4141dd:	pop    ss
  4141de:	outs   dx,DWORD PTR ds:[esi]
  4141df:	jno    0x41425d
  4141e1:	lock jae 0x414249
  4141e4:	cmp    ebp,DWORD PTR [esi+0x176c6c61]
  4141ea:	outs   dx,DWORD PTR ds:[esi]
  4141eb:	jno    0x414179
  4141ed:	lock jae 0x414255
  4141f0:	dec    ebx
  4141f1:	imul   esi,DWORD PTR ds:[eax+0x75],0xffffffed
  4141f6:	push   DWORD PTR [edx+0x79]
  4141f9:	sti    
  4141fa:	fs je  0x4141f2
  4141fd:	test   eax,0xedbc635c
  414202:	outs   dx,BYTE PTR ds:[esi]
  414203:	gs or  dl,ch
  414206:	ins    BYTE PTR es:[edi],dx
  414207:	ins    BYTE PTR es:[edi],dx
  414208:	mov    cl,0xf2
  41420a:	pusha  
  41420b:	xor    ebx,edi
  41420d:	out    0x71,al
  41420f:	gs mov al,bh
  414212:	jno    0x414279
  414214:	or     dl,ch
  414216:	ins    BYTE PTR es:[edi],dx
  414217:	ins    BYTE PTR es:[edi],dx
  414218:	mov    cl,0xf2
  41421a:	pusha  
  41421b:	xor    edi,DWORD PTR [edi-0x779a8c17]
  414221:	sbb    BYTE PTR [edi+0x71],ch
  414224:	ins    BYTE PTR es:[edi],dx
  414225:	icebp  
  414226:	jae    0x41428d
  414228:	cmp    edi,DWORD PTR [edi]
  41422a:	pop    edi
  41422b:	outs   dx,DWORD PTR ds:[esi]
  41422c:	or     al,0xe5
  41422e:	push   0x74fa0f6e
  414233:	je     0x4142aa
  414235:	jmp    0x414236
  414237:	jb     0x414232
  414239:	jmp    0x41429f
  41423b:	je     0x414232
  41423d:	stos   BYTE PTR es:[edi],al
  41423e:	pop    esp
  41423f:	arpl   WORD PTR [eax],ax
  414241:	add    BYTE PTR [edi],bh
  414243:	in     al,dx
  414244:	jo     0x4142b3
  414246:	cs aas 
  414248:	bound  ebp,QWORD PTR [ecx+esi*1+0x1a]
  41424c:	add    BYTE PTR es:[ecx],dh
  41424f:	mov    al,ds:0x9c027a2a
  414254:	and    eax,0xf5180567
  414259:	sub    eax,0x28190d
  41425e:	loop   0x4141fb
  414260:	and    eax,0xf6cfdd67
  414265:	pop    esp
  414266:	into   
  414267:	mov    esp,0xbe316e20
  41426c:	xor    al,0x6c
  41426e:	fmul   st,st(0)
  414270:	and    BYTE PTR [ecx],dh
  414272:	out    0xcd,al
  414274:	and    eax,0x1d7c26d
  414279:	jno    0x41423b
  41427b:	fsubr  DWORD PTR [esp+esi*2]
  41427e:	xchg   esp,eax
  41427f:	sahf   
  414280:	pop    edx
  414281:	jo     0x414226
  414283:	nop
  414284:	xor    DWORD PTR [edi-0x5d],ebx
  414287:	cwde   
  414288:	add    DWORD PTR [ecx-0x60],esi
  41428b:	xchg   edi,eax
  41428c:	sub    al,0x74
  41428e:	xchg   esp,eax
  41428f:	mov    esi,0x907d715a
  414294:	xor    DWORD PTR [eax],eax
  414296:	sbb    BYTE PTR [eiz*1-0x96f8299],0x5c
  41429e:	push   edx
  41429f:	and    ah,BYTE PTR ds:0x57495473
  4142a5:	bound  eax,QWORD PTR [eax]
  4142a7:	add    BYTE PTR [eax+0x47],bl
  4142aa:	sbb    eax,0x313e3171
  4142af:	ins    BYTE PTR es:[edi],dx
  4142b0:	pop    eax
  4142b1:	inc    edi
  4142b2:	sbb    eax,0x274e6631
  4142b7:	ins    BYTE PTR es:[edi],dx
  4142b8:	inc    esp
  4142b9:	push   eax
  4142ba:	sub    bl,BYTE PTR [ebp+0x53]
  4142bd:	push   edi
  4142be:	daa    
  4142bf:	bound  esi,QWORD PTR [ecx]
  4142c1:	stos   DWORD PTR es:[edi],eax
  4142c2:	add    DWORD PTR [eax],eax
  4142c4:	xor    DWORD PTR [edi+eiz*8],edx
  4142c7:	add    esi,DWORD PTR [ecx]
  4142c9:	adc    al,0xe7
  4142cb:	add    esi,DWORD PTR [ecx]
  4142cd:	adc    al,0xe7
  4142cf:	add    esi,DWORD PTR [ecx]
  4142d1:	adc    al,0xe7
  4142d3:	add    esi,DWORD PTR [ecx]
  4142d5:	adc    al,0xe7
  4142d7:	add    esi,DWORD PTR [ecx]
  4142d9:	adc    al,0xe7
  4142db:	add    esi,DWORD PTR [ecx]
  4142dd:	adc    al,0xe7
  4142df:	add    esi,DWORD PTR [ecx]
  4142e1:	adc    al,0xe7
  4142e3:	xor    esp,ebx
  4142e5:	xor    ch,cl
  4142e7:	sub    cl,ch
  4142e9:	ss fucompp 
  4142ec:	iret   
  4142ed:	xor    eax,eax
  4142ef:	add    esp,ecx
  4142f1:	and    eax,0x2fce21be
  4142f6:	int3   
  4142f7:	add    esi,esi
  4142f9:	and    al,0x99
  4142fb:	push   ds
  4142fc:	lds    esi,FWORD PTR [edx]
  4142fe:	mov    ebx,0xe737a72a
  414303:	push   ebx
  414304:	xchg   BYTE PTR [eax],ch
  414306:	pop    DWORD PTR [ebx]
  414308:	xor    DWORD PTR [ebx],0x2b93
  41430e:	jge    0x414341
  414310:	lods   al,BYTE PTR ds:[esi]
  414311:	cmp    edx,DWORD PTR [edx-0x73d565ec]
  414317:	xor    dl,BYTE PTR [esi+0x79f28029]
  41431d:	xor    al,BYTE PTR [ebp+0x311e7b2b]
  414323:	and    eax,0x31572080
  414328:	push   ebp
  414329:	xor    eax,0x305f280f
  41432e:	xor    DWORD PTR ds:0x315f2140,esp
  414334:	cmp    eax,0x3af20335
  414339:	cmp    al,0x45
  41433b:	adc    al,0x3a
  41433d:	sub    ecx,DWORD PTR [edx+esi*1+0x0]
  414341:	inc    esi
  414342:	pop    ebx
  414343:	and    esi,DWORD PTR [ecx]
  414345:	call   DWORD PTR [esi+0x1c]
  414348:	je     0x414333
  41434a:	xchg   ebp,eax
  41434b:	loop   0x4143ad
  41434d:	jmp    0xe9a525df
  414352:	xchg   ebp,eax
  414353:	loop   0x4143b7
  414355:	jmp    0x2c8d9837
  41435a:	hlt    
  41435b:	inc    edi
  41435c:	and    BYTE PTR [ecx],dl
  41435e:	dec    eax
  41435f:	and    esi,DWORD PTR [edi+eax*1+0x12]
  414363:	sub    eax,0x3552bd63
  414368:	outs   dx,BYTE PTR ds:[esi]
  414369:	retf   0x2924
  41436c:	jo     0x414343
  41436e:	aaa    
  41436f:	cmp    BYTE PTR [ebx-0x26],dl
  414372:	add    BYTE PTR [eax],al
  414374:	das    
  414375:	outs   dx,BYTE PTR es:[esi]
  414377:	enter  0x350f,0x2c
  41437b:	or     DWORD PTR [esi],ebx
  41437d:	xor    ah,BYTE PTR [ecx-0x45]
  414380:	sti    
  414381:	and    esi,DWORD PTR [esp+ecx*8+0x4e]
  414385:	inc    esp
  414386:	pop    edi
  414387:	mov    edx,0x9b6d295d
  41438c:	ds hlt 
  41438e:	inc    ebp
  41438f:	mov    ebx,0x84204b69
  414394:	pop    ecx
  414395:	sbb    bl,BYTE PTR [ebp+0x7d]
  414398:	pop    ecx
  414399:	cmp    DWORD PTR [edi-0x69],esp
  41439c:	inc    ebp
  41439d:	adc    al,0x46
  41439f:	nop
  4143a0:	cmp    al,0x33
  4143a2:	data16 xchg BYTE PTR [edx],ch
  4143a5:	adc    al,0x5c
  4143a7:	pushf  
  4143a8:	sbb    DWORD PTR [edx],ebx
  4143aa:	addr16 push ebp
  4143ac:	or     DWORD PTR [edi],edi
  4143ae:	pop    esp
  4143af:	daa    
  4143b0:	add    al,0x22
  4143b2:	arpl   WORD PTR [edi+0x16],cx
  4143b5:	sbb    al,0x5c
  4143b7:	jmp    0xa7751f
  4143bc:	cld    
  4143bd:	out    dx,al
  4143be:	pop    esp
  4143bf:	jb     0x41442e
  4143c1:	cmp    al,0x49
  4143c3:	outs   dx,DWORD PTR ds:[esi]
  4143c4:	(bad)  
  4143c6:	imul   ebp,DWORD PTR [ecx+edi*8+0x17],0x29
  4143cb:	sub    eax,0x74661385
  4143d0:	cmp    BYTE PTR [edx-0x1467d0d4],bl
  4143d6:	jae    0x41444c
  4143d8:	add    BYTE PTR [eax],al
  4143da:	sub    BYTE PTR [edx-0x1477d0d4],bl
  4143e0:	jae    0x414456
  4143e2:	js     0x4143c6
  4143e4:	cmp    DWORD PTR [edi],ebp
  4143e6:	ja     0x4143fb
  4143e8:	data16 je 0x414453
  4143eb:	mov    ecx,0xe58165fd
  4143f0:	pusha  
  4143f1:	inc    esi
  4143f2:	pushf  
  4143f3:	inc    ebx
  4143f4:	outs   dx,DWORD PTR ds:[esi]
  4143f5:	imul   ebp,DWORD PTR [esp+esi*8+0x6e],0x73f86c2e
  4143fd:	add    BYTE PTR [ebx+0x674d5cf4],bl
  414403:	stc    
  414404:	data16 gs loope 0x41441a
  414408:	pop    esp
  414409:	dec    ebp
  41440a:	out    0xdc,eax
  41440c:	fs ins BYTE PTR es:[edi],dx
  41440e:	(bad)  
  41440f:	neg    DWORD PTR [ebx+0x53]
  414412:	lods   eax,DWORD PTR ds:[esi]
  414413:	test   DWORD PTR [eax+0x6f],0x7960e9b6
  41441a:	aam    0x12
  41441c:	inc    esi
  41441d:	ins    BYTE PTR es:[edi],dx
  41441e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41441f:	icebp  
  414420:	data16 add BYTE PTR [eax+eiz*8-0x16449095],dl
  414428:	pop    ebx
  414429:	inc    edx
  41442a:	push   0xfffffff6
  41442c:	jb     0x4144a1
  41442e:	ins    DWORD PTR es:[edi],dx
  41442f:	loop   0x41448c
  414431:	add    BYTE PTR ds:0x316979f7,al
  414437:	pop    ecx
  414438:	sub    BYTE PTR [edi+0x31],bl
  41443b:	icebp  
  41443c:	inc    esi
  41443d:	ins    DWORD PTR es:[edi],dx
  41443e:	add    BYTE PTR [eax],al
  414440:	cmp    eax,DWORD PTR [eax+ebp*1+0x6c]
  414444:	push   eax
  414445:	add    DWORD PTR [edx+esi*2+0x1e],edx
  414449:	dec    edi
  41444a:	sub    ebp,DWORD PTR [esp+ecx*1-0x26]
  41444e:	push   edi
  41444f:	add    BYTE PTR [edx],al
  414451:	push   es
  414452:	push   ds
  414453:	je     0x414473
  414455:	or     al,0x32
  414457:	arpl   bp,bp
  414459:	clc    
  41445a:	push   ds
  41445b:	arpl   WORD PTR [edx],dx
  41445d:	adc    eax,0xace1543e
  414462:	inc    esp
  414463:	jo     0x414466
  414465:	stc    
  414466:	sub    dh,BYTE PTR [edx+0x31]
  414469:	stc    
  41446a:	and    al,0x61
  41446c:	shl    BYTE PTR [eax-0x531c98c3],1
  414472:	pop    ds
  414473:	ins    DWORD PTR es:[edi],dx
  414474:	mov    cl,0x28
  414477:	pop    edi
  414478:	ret    
  414479:	shl    ebx,1
  41447b:	arpl   ax,dx
  41447d:	enter  0x5101,0xc8
  414481:	pusha  
  414482:	and    BYTE PTR [edi-0x39],al
  414485:	(bad)  
  414486:	es sub BYTE PTR cs:[ebp+0x51],0x0
  41448c:	jbe    0x414465
  41448e:	sub    al,0x6e
  414490:	xor    DWORD PTR [ebp+0x24],ebp
  414493:	jbe    0x41441b
  414495:	jns    0x4144c3
  414497:	je     0x41442d
  414499:	jp     0x41447e
  41449b:	arpl   WORD PTR [eax-0x77aafe79],dx
  4144a1:	test   DWORD PTR [ebx],edi
  4144a3:	push   esp
  4144a4:	add    BYTE PTR [eax],al
  4144a6:	popa   
  4144a7:	stos   DWORD PTR es:[edi],eax
  4144a8:	xor    ah,BYTE PTR [edi+0x65]
  4144ab:	nop
  4144ac:	xor    ch,BYTE PTR [esi]
  4144ae:	dec    ebp
  4144af:	mov    DWORD PTR [ecx],eax
  4144b1:	inc    ecx
  4144b2:	ins    DWORD PTR es:[edi],dx
  4144b3:	adc    al,0x3a
  4144b5:	dec    ebx
  4144b6:	ins    DWORD PTR es:[edi],dx
  4144b7:	inc    eax
  4144b8:	(bad)
  4144bd:	inc    eax
  4144be:	cld    
  4144bf:	out    0x17,eax
  4144c1:	out    0xff,eax
  4144c3:	(bad)  
  4144c5:	inc    ecx
  4144c6:	or     ah,bl
  4144c8:	neg    DWORD PTR [edi]
  4144ca:	arpl   di,bp
  4144cc:	out    dx,al
  4144cd:	inc    edx
  4144ce:	imul   esp,esp,0xdc4ef3fb
  4144d4:	(bad)  
  4144d5:	inc    edx
  4144d6:	in     eax,dx
  4144d7:	push   ecx
  4144d8:	(bad)  
  4144da:	hlt    
  4144db:	push   ebp
  4144dc:	(bad)  [esi]
  4144de:	in     eax,0x4a
  4144e0:	std    
  4144e1:	push   ebx
  4144e2:	add    ebp,DWORD PTR ds:0x2212510a
  4144e8:	cmc    
  4144e9:	push   ds
  4144ea:	jecxz  0x4144cc
  4144ec:	mov    eax,0xf936e003
  4144f1:	sub    eax,0xe5da21d2
  4144f6:	fisubr WORD PTR [esi]
  4144f8:	retf   
  4144f9:	add    ebp,ebp
  4144fb:	push   ebp
  4144fc:	mov    ebx,0xd336ec53
  414501:	das    
  414502:	shl    BYTE PTR [ecx],cl
  414504:	out    0x3e,eax
  414506:	loopne 0x41454f
  414508:	ret    
  414509:	and    DWORD PTR [eax],eax
  41450b:	add    BYTE PTR [ebx-0x12],ah
  41450e:	retf   0x9d22
  414511:	adc    al,0x98
  414513:	aas    
  414514:	jle    0x41453e
  414516:	mov    ch,ah
  414518:	xchg   edx,eax
  414519:	xor    edx,DWORD PTR [ebx-0x65a892fd]
  41451f:	das    
  414520:	sub    BYTE PTR ds:0x535d2f85,0xb3
  414527:	cmp    eax,0x4ae7445d
  41452c:	pop    edi
  41452d:	sub    BYTE PTR [eax],al
  41452f:	mov    WORD PTR [eax],fs
  414531:	arpl   WORD PTR cs:[ebp-0x2e],si
  414535:	push   ecx
  414536:	js     0x414591
  414538:	or     DWORD PTR [edi],ebp
  41453a:	jb     0x414580
  41453c:	add    edx,DWORD PTR [edx*2+0x6e350f40]
  414543:	inc    esp
  414544:	add    DWORD PTR [ebx+0x5f],edx
  414547:	dec    edx
  414548:	add    eax,0x4e3b4131
  41454d:	cmp    BYTE PTR [ebx+0x47],ah
  414550:	popa   
  414551:	xor    eax,0x14603d5f
  414556:	dec    ebx
  414557:	cmp    cl,BYTE PTR [ebp+0x4cc94355]
  41455d:	dec    eax
  41455e:	push   eax
  41455f:	leave  
  414560:	loop   0x41459e
  414562:	jno    0x41457e
  414564:	dec    esp
  414565:	das    
  414566:	jb     0x414575
  414568:	inc    eax
  414569:	adc    al,0x44
  41456b:	sbb    edx,esi
  41456d:	inc    ebx
  41456e:	inc    edi
  41456f:	mov    bl,0x0
  414571:	add    BYTE PTR [edx-0x64],dl
  414574:	ins    DWORD PTR es:[edi],dx
  414575:	cli    
  414576:	push   cs
  414577:	das    
  414578:	jb     0x414546
  41457a:	adc    esi,ebp
  41457c:	arpl   bp,cx
  41457e:	push   ss
  41457f:	adc    al,0x50
  414581:	mov    edx,0xc4722f16
  414586:	icebp  
  414587:	and    DWORD PTR [ebx-0x38],esp
  41458a:	push   es
  41458b:	xor    DWORD PTR [edi-0x31],eax
  41458e:	popa   
  41458f:	and    BYTE PTR [edi-0x39],bl
  414592:	push   ecx
  414593:	aaa    
  414594:	add    cl,ch
  414596:	push   ecx
  414597:	es ja  0x414533
  41459a:	inc    esi
  41459b:	in     eax,0x31
  41459d:	iret   
  41459e:	sub    BYTE PTR cs:[ecx+ebp*8+0x71],ch
  4145a3:	es ja  0x41453f
  4145a6:	dec    esi
  4145a7:	inc    edi
  4145a8:	outs   dx,BYTE PTR ds:[esi]
  4145a9:	add    BYTE PTR [eax-0x1b],bh
  4145ac:	push   0x74
  4145ae:	mov    ch,0xf4
  4145b0:	jae    0x4145f6
  4145b2:	mov    ecx,0xc8005ceb
  4145b7:	pop    ss
  4145b8:	add    BYTE PTR [eax],al
  4145ba:	enter  0x17,0x0
  4145be:	fcom   DWORD PTR [edi]
  4145c0:	inc    eax
  4145c1:	dec    edx
  4145c2:	daa    
  4145c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c4:	loope  0x414580
  4145c6:	lahf   
  4145c7:	add    DWORD PTR [ebx+0x39c87d],edi
  4145cd:	imul   edx,DWORD PTR [esi+0x76],0xaba74a3d
  4145d4:	loope  0x414590
  4145d6:	add    BYTE PTR [eax],al
  4145d8:	mov    edi,0x887dbb01
  4145dd:	cmp    DWORD PTR [eax],eax
  4145df:	imul   edx,DWORD PTR [esi+0x76],0xab674a42
  4145e6:	loope  0x4145a2
  4145e8:	lahf   
  4145e9:	add    DWORD PTR [ebx+0x39887d],edi
  4145ef:	imul   edx,DWORD PTR [esi],0x58003b76
  4145f5:	pop    ss
  4145f6:	and    DWORD PTR [eax],esi
  4145f8:	call   0x73ed:0x7f53004f
  4145ff:	ja     0x41467a
  414601:	loope  0x414663
  414603:	pop    esp
  414604:	(bad)  
  414605:	clc    
  414606:	pop    esi
  414607:	jb     0x414688
  414609:	loop   0x414675
  41460b:	data16 je 0x414659
  41460e:	inc    ebp
  41460f:	outs   dx,BYTE PTR ds:[esi]
  414610:	in     al,0xeb
  414612:	jno    0x414682
  414614:	cmc    
  414615:	loop   0x414636
  414617:	inc    ebp
  414618:	loopne 0x414600
  41461a:	imul   ebp,DWORD PTR [edi-0x46],0xffffffeb
  41461e:	jno    0x41467c
  414620:	shl    esp,0x73
  414623:	xor    DWORD PTR gs:[ecx+0x1a77671d],edx
  41462a:	xor    ebp,DWORD PTR [ebx-0x7e]
  41462d:	jno    0x414685
  41462f:	je     0x41468f
  414631:	pop    ds
  414632:	and    al,0x65
  414634:	dec    esp
  414635:	pop    edi
  414636:	add    DWORD PTR [eax],eax
  414638:	xor    DWORD PTR [ebp+0x5f01],ebp
  41463e:	xor    DWORD PTR [edi+0x4],ecx
  414641:	arpl   WORD PTR [ecx],si
  414643:	inc    DWORD PTR [ebx]
  414645:	cmp    BYTE PTR [ecx],dh
  414647:	sti    
  414648:	add    esi,DWORD PTR [edi]
  41464a:	xor    DWORD PTR [ebx+0x4],edx
  41464d:	sub    esi,DWORD PTR [ecx]
  41464f:	adc    al,0x4
  414651:	bound  esi,QWORD PTR [ecx]
  414653:	mov    eax,ds:0x10313501
  414658:	add    al,0x34
  41465a:	xor    DWORD PTR [esi+0x4],ecx
  41465d:	xor    DWORD PTR fs:[ecx+eax*1+0x40c312b],esi
  414665:	xor    DWORD PTR [ecx],esi
  414667:	mov    eax,0x58313801
  41466c:	add    DWORD PTR [ecx+0x31],esp
  41466f:	pop    edi
  414670:	add    DWORD PTR [edx],esi
  414672:	xor    esp,edx
  414674:	add    DWORD PTR [eax],esi
  414676:	xor    DWORD PTR [ecx+0x1],ebx
  414679:	xor    DWORD PTR fs:[edi],ecx
  41467c:	add    al,0x5f
  41467e:	xor    edx,edi
  414680:	add    esp,DWORD PTR [esi+0x31]
  414683:	add    al,BYTE PTR [eax+eax*1]
  414686:	xor    DWORD PTR [eax+0x1c],esi
  414689:	popa   
  41468a:	ret    
  41468b:	pop    ecx
  41468c:	ss ins DWORD PTR es:[edi],dx
  41468e:	iret   
  41468f:	pop    eax
  414690:	push   edx
  414691:	push   ebp
  414692:	cwde   
  414693:	leave  
  414694:	cmp    al,0x6e
  414696:	mov    WORD PTR [edi+0x52],ss
  414699:	sub    dh,BYTE PTR [ecx]
  41469b:	shl    DWORD PTR ds:0xd6145b70,1
  4146a1:	loop   0x4146a3
  4146a3:	add    BYTE PTR [esi],cl
  4146a5:	inc    edi
  4146a6:	mov    gs,WORD PTR [ecx]
  4146a8:	jge    0x4146cb
  4146aa:	mov    BYTE PTR ds:0x27a83892,dh
  4146b0:	test   BYTE PTR [esi],dh
  4146b2:	mov    WORD PTR [edi+0x70],cs
  4146b5:	sub    DWORD PTR [eax+eiz*1+0x56e72a54],ecx
  4146bc:	push   esi
  4146bd:	and    BYTE PTR [esi+edx*2+0x275d2652],al
  4146c4:	inc    ebx
  4146c5:	and    eax,0x204e54e7
  4146ca:	dec    esp
  4146cb:	push   ebp
  4146cc:	push   edx
  4146cd:	es push ebp
  4146cf:	daa    
  4146d0:	inc    ebx
  4146d1:	hlt    
  4146d2:	or     ebp,DWORD PTR [eax]
  4146d4:	or     eax,0x1d354e4c
  4146d9:	adc    al,0x1a
  4146db:	sbb    esp,DWORD PTR ds:0x23271a2f
  4146e1:	and    cl,BYTE PTR [esi+esi*1]
  4146e4:	push   ecx
  4146e5:	out    dx,eax
  4146e6:	add    dl,BYTE PTR [eax-0x24]
  4146e9:	or     DWORD PTR cs:[edi+0x3],edx
  4146ed:	sub    bh,ah
  4146ef:	push   esp
  4146f0:	push   cs
  4146f1:	and    BYTE PTR [edx*2+0x26f525d2],cl
  4146f8:	jecxz  0x4146ed
  4146fa:	retf   
  4146fb:	daa    
  4146fc:	std    
  4146fd:	inc    ebp
  4146fe:	add    al,0x1f
  414700:	les    ebx,FWORD PTR [edi]
  414702:	int3   
  414703:	jecxz  0x4146f7
  414705:	sub    bl,cl
  414707:	add    BYTE PTR es:[eax],al
  41470a:	rcr    BYTE PTR [edi],1
  41470c:	(bad)  
  41470d:	xor    eax,0x1aba13c6
  414712:	mov    ebp,0xa3269a2e
  414717:	and    al,ah
  414719:	xor    eax,0xccffef51
  41471e:	inc    DWORD PTR [ebp+0x71]
  414721:	les    ebx,FWORD PTR [esp+edx*1+0x51]
  414725:	nop
  414726:	inc    esi
  414727:	xor    eax,0x223c8451
  41472c:	arpl   WORD PTR [ebx-0x439c09ee],bx
  414732:	pop    edi
  414733:	and    esp,DWORD PTR [ebx+0x7b]
  414736:	ror    BYTE PTR [eax+0x55],cl
  414739:	jmp    0xa29d6b0d
  41473e:	pop    ss
  41473f:	and    DWORD PTR [ecx-0x7f],esp
  414742:	adc    esi,DWORD PTR [ecx]
  414744:	outs   dx,BYTE PTR ds:[esi]
  414745:	jmp    0x44b578af
  41474a:	pop    esp
  41474b:	xor    eax,0x26165f72
  414750:	and    BYTE PTR [ecx+ecx*1],al
  414753:	cmp    BYTE PTR [ecx+0x2f],dl
  414756:	or     DWORD PTR [eax+eax*1+0x25],eax
  41475a:	dec    esi
  41475b:	sub    BYTE PTR [ebx+0x31],dh
  41475e:	push   esi
  41475f:	push   edx
  414760:	push   esp
  414761:	sbb    DWORD PTR ds:0x561d6723,ebp
  414767:	and    ebp,DWORD PTR [esi]
  414769:	and    DWORD PTR [esi],esp
  41476b:	sub    BYTE PTR [eax],al
  41476d:	add    BYTE PTR ds:[eax],al
  414770:	push   esi
  414771:	and    BYTE PTR ss:0xe95f2052,ah
  414778:	cs daa 
  41477a:	adc    BYTE PTR gs:[ebx],dl
  41477d:	hlt    
  41477e:	inc    ebx
  41477f:	or     BYTE PTR [ecx],bl
  414781:	cmp    DWORD PTR [eax],eax
  414783:	sbb    al,BYTE PTR [edx]
  414785:	dec    eax
  414786:	fst    QWORD PTR [bx]
  414789:	hlt    
  41478a:	gs into 
  41478c:	cld    
  41478d:	sub    al,0x5f
  41478f:	fst    QWORD PTR [edx-0x1d]
  414792:	call   esp
  414794:	adc    esi,DWORD PTR [esi]
  414796:	ins    BYTE PTR es:[edi],dx
  414797:	add    ch,bh
  414799:	adc    ebp,DWORD PTR [eax]
  41479b:	add    BYTE PTR [ecx+0x10],al
  41479e:	and    BYTE PTR [eax],al
  4147a0:	retf   
  4147a1:	push   esp
  4147a2:	dec    esi
  4147a3:	push   ebx
  4147a4:	mov    esp,0xc6493d41
  4147a9:	aas    
  4147aa:	add    BYTE PTR [eax-0x36],dl
  4147ad:	fimul  DWORD PTR [eax+0x41]
  4147b0:	mov    edx,0x9655004a
  4147b5:	fimul  DWORD PTR [ebp+edx*2-0x63]
  4147b9:	adc    edi,DWORD PTR [edi]
  4147bb:	dec    eax
  4147bc:	lea    edx,[eax+0x47]
  4147bf:	add    BYTE PTR [esi-0x6ebaadac],cl
  4147c5:	dec    esp
  4147c6:	dec    esi
  4147c7:	add    al,bl
  4147c9:	imul   DWORD PTR [edx+0x67]
  4147cc:	popa   
  4147cd:	imul   BYTE PTR [esi+0x0]
  4147d0:	ja     0x4147b4
  4147d2:	add    BYTE PTR fs:[bx+si],al
  4147d6:	jno    0x4147ce
  4147d8:	pop    edx
  4147d9:	jne    0x414845
  4147db:	hlt    
  4147dc:	jmp    FWORD PTR [edi-0x7]
  4147df:	loop   0x41484f
  4147e1:	ja     0x4147da
  4147e3:	loope  0x414848
  4147e5:	pop    edi
  4147e6:	pop    esi
  4147e7:	icebp  
  4147e8:	imul   esi,DWORD PTR [ebp+0x3d],0x10
  4147ec:	jno    0x414861
  4147ee:	sub    eax,0x35616de2
  4147f3:	in     eax,dx
  4147f4:	pop    edx
  4147f5:	jbe    0x414820
  4147f7:	hlt    
  4147f8:	jo     0x41485f
  4147fa:	pop    eax
  4147fb:	icebp  
  4147fc:	jae    0x41486e
  4147fe:	jb     0x4147b6
  414800:	sub    al,0x0
  414802:	xor    ah,bl
  414804:	jae    0x414876
  414806:	mov    ds:0x60002cb6,al
  41480b:	fbstp  TBYTE PTR [ebx+0x70]
  41480e:	imul   ebp,DWORD PTR [ebp-0x52ced0d4],0x4d
  414815:	inc    ebp
  414816:	(bad)  
  414817:	push   ebp
  414818:	es ins BYTE PTR es:[edi],dx
  41481a:	xchg   esp,eax
  41481b:	jno    0x41485f
  41481d:	push   0x6320c6a3
  414822:	xor    DWORD PTR [ecx+0x56a36842],eax
  414828:	and    BYTE PTR [edi-0x7c],ah
  41482b:	add    BYTE PTR [ecx],0x5c
  41482e:	jb     0x4147b5
  414830:	das    
  414831:	ins    DWORD PTR es:[edi],dx
  414832:	mov    WORD PTR [eax+0x7a7c6c51],cs
  414838:	add    DWORD PTR [ecx+0x0],edx
  41483b:	add    BYTE PTR [esi-0x79],bl
  41483e:	xor    eax,0x281b5075
  414843:	pop    esp
  414844:	jb     0x4147db
  414846:	das    
  414847:	ins    DWORD PTR es:[edi],dx
  414848:	inc    esp
  414849:	nop
  41484a:	push   ecx
  41484b:	ins    BYTE PTR es:[edi],dx
  41484c:	inc    esp
  41484d:	cmp    al,BYTE PTR [edi+eax*2]
  414850:	push   edi
  414851:	cmp    bh,BYTE PTR [eax]
  414853:	pop    edi
  414854:	dec    ebp
  414855:	push   ecx
  414856:	dec    ebp
  414857:	inc    esp
  414858:	dec    eax
  414859:	cmp    eax,DWORD PTR [esp+ebx*2]
  41485c:	repz ficomp DWORD PTR [ebx+ebp*2]
  414860:	sbb    al,ah
  414862:	push   ds
  414863:	add    ch,bh
  414865:	out    dx,al
  414866:	sbb    ah,BYTE PTR [ecx+0x9]
  414869:	fistp  DWORD PTR [ebx+ebp*2]
  41486c:	adc    al,0xad
  41486e:	dec    ebp
  41486f:	inc    ecx
  414870:	push   ss
  414871:	or     BYTE PTR ds:0x4dad0e64,bl
  414877:	push   edx
  414878:	push   es
  414879:	or     bl,BYTE PTR [ecx]
  41487b:	dec    ebx
  41487c:	aam    0x0
  41487e:	cmp    BYTE PTR [eax],al
  414880:	cli    
  414881:	mov    DWORD PTR [eax+0x63],0x6e1d07cd
  414888:	xor    DWORD PTR [ecx],ecx
  41488a:	cmp    DWORD PTR [ebx],ebp
  41488c:	cld    
  41488d:	adc    ecx,esp
  41488f:	pop    ds
  414890:	shl    BYTE PTR [esi],cl
  414892:	int    0x3
  414894:	fld    QWORD PTR [ebx-0x27]
  414897:	push   ds
  414898:	iret   
  414899:	sub    al,0xbb
  41489b:	sub    BYTE PTR [eax+0x33ac14],ah
  4148a1:	add    BYTE PTR [esi+0x724fe731],cl
  4148a7:	and    al,0xc0
  4148a9:	and    dh,BYTE PTR [ebp+0x4f]
  4148ac:	mov    bh,0x1c
  4148ae:	nop
  4148af:	adc    al,0xba
  4148b1:	aaa    
  4148b2:	cs test ax,sp
  4148b6:	je     0x4148f8
  4148b8:	mov    bh,0x3
  4148ba:	sub    BYTE PTR [ebx],0x93
  4148bd:	sub    BYTE PTR [eax-0x1a],ah
  4148c0:	(bad)  
  4148c1:	sbb    eax,0x529b144e
  4148c6:	push   esi
  4148c7:	and    BYTE PTR [edx+esi*1+0x1c953831],cl
  4148ce:	inc    eax
  4148cf:	sub    ecx,DWORD PTR [edx+0x1d]
  4148d2:	pop    edx
  4148d3:	hlt    
  4148d4:	sub    esp,DWORD PTR [edi]
  4148d6:	push   ebp
  4148d7:	sub    ecx,DWORD PTR [eax+0x4]
  4148da:	pop    es
  4148db:	cs push ebx
  4148dd:	xor    al,0x31
  4148df:	inc    ecx
  4148e0:	out    0x26,eax
  4148e2:	xor    DWORD PTR [eax],esp
  4148e4:	out    0x37,eax
  4148e6:	xor    DWORD PTR [ebx],ebp
  4148e8:	out    0x1d,eax
  4148ea:	xor    DWORD PTR ds:0x143130e7,ebp
  4148f0:	out    0x4f,eax
  4148f2:	in     al,dx
  4148f3:	daa    
  4148f4:	push   cs
  4148f5:	and    bl,dh
  4148f7:	daa    
  4148f8:	mov    DWORD PTR [edi+0x4],0xdc1ffd1d
  4148ff:	xor    cl,BYTE PTR [ebx]
  414901:	daa    
  414902:	jecxz  0x414917
  414904:	sbb    bh,BYTE PTR [edi]
  414906:	add    BYTE PTR [eax],al
  414908:	rdpmc  
  41490a:	add    bl,bh
  41490c:	adc    DWORD PTR [eax+eax*1],ebp
  41490f:	daa    
  414910:	add    esi,DWORD PTR [ecx]
  414912:	jno    0x4148e5
  414914:	in     al,dx
  414915:	aas    
  414916:	push   eax
  414917:	jmp    0xaf8c8d78
  41491c:	xor    dl,BYTE PTR [edx+0x6c]
  41491f:	enter  0x3158,0x46
  414923:	mov    ebp,0xd0711462
  414928:	xor    WORD PTR [esi],bp
  41492b:	int    0x53
  41492d:	and    BYTE PTR [eax],al
  41492f:	popf   
  414930:	push   ebx
  414931:	and    esi,DWORD PTR [ecx+edi*4+0x53]
  414935:	and    esi,DWORD PTR [ecx-0x6a]
  414938:	sbb    eax,0x36e96422
  41493d:	xor    eax,0x30739571
  414942:	fs jnp 0x414954
  414945:	and    esi,DWORD PTR [ecx-0x17]
  414948:	push   ds
  414949:	xor    eax,0x237f7d71
  41494e:	arpl   WORD PTR [ebx+0x32],di
  414951:	dec    eax
  414952:	pop    edi
  414953:	pop    edx
  414954:	or     DWORD PTR [ebp+ebp*2+0x5b],eax
  414958:	stc    
  414959:	adc    edx,DWORD PTR [ecx+0x46]
  41495c:	mov    ebp,cr6
  41495f:	dec    eax
  414960:	arpl   WORD PTR [ecx],si
  414962:	pop    esp
  414963:	das    
  414964:	push   ecx
  414965:	xor    eax,0x31055171
  41496a:	pop    edi
  41496b:	inc    edx
  41496c:	add    BYTE PTR [eax],al
  41496e:	add    DWORD PTR [edx+0x6c],edx
  414971:	dec    eax
  414972:	pop    ebx
  414973:	xor    DWORD PTR [esi+0x1d],eax
  414976:	cmp    eax,0x39045138
  41497b:	and    BYTE PTR [edi+0x7],ah
  41497e:	dec    esp
  41497f:	and    eax,DWORD PTR [eax]
  414981:	sub    eax,0x5f27f3
  414986:	xor    ch,ch
  414988:	inc    ebp
  414989:	je     0x4149e3
  41498b:	adc    BYTE PTR [esi],ch
  41498d:	pop    ax
  41498f:	hlt    
  414990:	inc    DWORD PTR [ebp+0x24]
  414993:	inc    eax
  414994:	daa    
  414995:	sub    ebx,DWORD PTR [esi]
  414997:	push   esp
  414998:	outs   dx,BYTE PTR gs:[esi]
  41499a:	arpl   WORD PTR [edi+ebp*2+0x68],ax
  41499e:	gs hlt 
  4149a0:	imul   ebx,DWORD PTR [edi+ebp*8+0x47],0x61
  4149a5:	outs   dx,BYTE PTR ds:[esi]
  4149a6:	int3   
  4149a7:	xor    al,0x6b
  4149a9:	ins    DWORD PTR es:[edi],dx
  4149aa:	in     eax,dx
  4149ab:	outs   dx,BYTE PTR ss:[esi]
  4149ad:	fs or  cl,bl
  4149b0:	push   0x46
  4149b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b3:	out    0xff,eax
  4149b5:	inc    edx
  4149b6:	lahf   
  4149b7:	xor    DWORD PTR [esi+0x65],ebp
  4149ba:	stos   DWORD PTR es:[edi],eax
  4149bb:	dec    ebx
  4149bc:	outs   dx,DWORD PTR gs:[esi]
  4149be:	scas   al,BYTE PTR es:[edi]
  4149bf:	inc    esp
  4149c0:	cs je  0x414983
  4149c3:	dec    ebx
  4149c4:	add    BYTE PTR [ebx],dh
  4149c6:	xchg   esp,eax
  4149c7:	jb     0x414a0c
  4149c9:	push   esp
  4149ca:	mov    eax,0x54696f17
  4149cf:	cmp    ch,BYTE PTR [edi+0x2e]
  4149d2:	add    BYTE PTR [eax],al
  4149d4:	mov    cl,0x31
  4149d6:	add    BYTE PTR gs:[ebx+ecx*4+0x41],ch
  4149db:	sub    eax,0x4fe416
  4149e0:	cld    
  4149e1:	jmp    0x7360:0xd3f57464
  4149e8:	add    DWORD PTR [edi],esi
  4149ea:	outs   dx,BYTE PTR ds:[esi]
  4149eb:	gs pop edx
  4149ed:	sbb    BYTE PTR [edi+0x4f],cl
  4149f0:	inc    esi
  4149f1:	in     al,0x52
  4149f3:	inc    ecx
  4149f4:	sub    dl,ch
  4149f6:	pop    ebx
  4149f7:	inc    ebx
  4149f8:	sbb    al,0x39
  4149fa:	outs   dx,DWORD PTR ds:[esi]
  4149fb:	jae    0x414a32
  4149fd:	dec    ebx
  4149fe:	pop    esp
  4149ff:	push   esp
  414a00:	xor    DWORD PTR [esp+esi*1],esp
  414a03:	arpl   bp,di
  414a05:	adc    esp,DWORD PTR [esi]
  414a07:	pop    esp
  414a08:	jmp    0x46ce:0x252feb42
  414a0f:	cmp    BYTE PTR [ecx],bl
  414a11:	pop    eax
  414a12:	aas    
  414a13:	ss test esi,0x2c012ed8
  414a1a:	inc    ebx
  414a1b:	sub    esi,eax
  414a1d:	sub    eax,0x2d043745
  414a22:	in     al,dx
  414a23:	das    
  414a24:	popa   
  414a25:	das    
  414a26:	inc    esi
  414a27:	xor    ch,BYTE PTR [edi-0x6f]
  414a2a:	in     al,dx
  414a2b:	inc    ebp
  414a2c:	jae    0x4149fe
  414a2e:	inc    ebp
  414a2f:	das    
  414a30:	inc    edi
  414a31:	pop    DWORD PTR [ebp+0x30]
  414a34:	ins    DWORD PTR es:[edi],dx
  414a35:	retf   0x6e1c
  414a38:	add    BYTE PTR [eax],al
  414a3a:	inc    edx
  414a3b:	outs   dx,DWORD PTR ds:[esi]
  414a3c:	add    DWORD PTR [ebx-0x70],eax
  414a3f:	scas   al,BYTE PTR es:[edi]
  414a40:	sub    al,0x46
  414a42:	pop    ebp
  414a43:	int    0x1
  414a45:	pop    esp
  414a46:	jg     0x4149e0
  414a48:	sub    eax,0x240f5051
  414a4d:	outs   dx,BYTE PTR ds:[esi]
  414a4e:	push   esi
  414a4f:	jge    0x414a28
  414a51:	ja     0x414aa2
  414a53:	or     eax,0x99432e01
  414a58:	xor    DWORD PTR [eax],eax
  414a5a:	pop    ebp
  414a5b:	inc    eax
  414a5c:	push   esi
  414a5d:	dec    ebx
  414a5e:	bound  ecx,QWORD PTR [edi+0x52]
  414a61:	sub    eax,0x5f317d0b
  414a66:	and    ch,dh
  414a68:	xor    BYTE PTR [ebp+0x23],ch
  414a6b:	loope  0x414a50
  414a6d:	xor    ah,BYTE PTR [eax+0x17]
  414a70:	cmp    dh,BYTE PTR es:[ecx]
  414a73:	push   eax
  414a74:	xor    eax,0x23530363
  414a79:	imul   ecx,DWORD PTR [esp+edx*1],0xffffffe1
  414a7d:	cmp    edx,DWORD PTR ss:[eax*1-0x38fffacf]
  414a85:	and    al,0xd5
  414a87:	neg    DWORD PTR [eax]
  414a89:	and    eax,esp
  414a8b:	push   es
  414a8c:	shl    DWORD PTR [esi],0x1b
  414a8f:	adc    al,0xcd
  414a91:	add    edi,ebp
  414a93:	fcomp  DWORD PTR [eax]
  414a95:	cmp    eax,esp
  414a97:	in     eax,0x14
  414a99:	fild   DWORD PTR [esi-0x28]
  414a9c:	mov    edx,0x11000053
  414aa1:	loop   0x414a70
  414aa3:	xor    dh,BYTE PTR [ecx]
  414aa5:	fidivr DWORD PTR [edx-0x29fe80ad]
  414aab:	add    esp,DWORD PTR [eax-0x5fdf4505]
  414ab1:	inc    edx
  414ab2:	mov    edi,0x9a148518
  414ab7:	cmp    dh,BYTE PTR [edi-0x18]
  414aba:	xchg   ebp,eax
  414abb:	inc    esp
  414abc:	arpl   di,dx
  414abe:	ret    0x8c55
  414ac1:	test   BYTE PTR [ebp-0x49179328],0xe3
  414ac8:	and    DWORD PTR [edx-0x2a],eax
  414acb:	inc    edi
  414acc:	xor    ch,0x78
  414acf:	sbb    al,0x61
  414ad1:	or     BYTE PTR [edx+0x3],bh
  414ad4:	and    cl,0xac
  414ad7:	dec    edi
  414ad8:	rcr    DWORD PTR fs:[eax+0x55e66540],cl
  414adf:	es dec esp
  414ae1:	aas    
  414ae2:	and    eax,0x1a346150
  414ae7:	fisub  DWORD PTR [ebp-0x10]
  414aea:	and    al,0x50
  414aec:	add    ebp,esp
  414aee:	dec    ebx
  414aef:	ss daa 
  414af1:	idiv   DWORD PTR [eax]
  414af3:	xor    eax,0x1cffda31
  414af8:	in     eax,0x33
  414afa:	inc    ecx
  414afb:	ds push esi
  414afd:	add    dh,BYTE PTR [ecx+ebp*8-0x10]
  414b01:	out    0x4f,eax
  414b03:	leave  
  414b04:	add    BYTE PTR [eax],al
  414b06:	lock clc 
  414b08:	imul   ecx,DWORD PTR [esi+ecx*4],0xfffffff5
  414b0c:	(bad)  
  414b0d:	cmp    BYTE PTR [edx],dl
  414b0f:	add    esi,DWORD PTR [ecx-0x2]
  414b12:	cmp    DWORD PTR [esi],eax
  414b14:	fs jmp 0xffb34017
  414b1a:	das    
  414b1b:	push   es
  414b1c:	dec    esi
  414b1d:	or     BYTE PTR [esi],bl
  414b1f:	cmc    
  414b20:	(bad)  
  414b21:	mov    ebx,0xb071f505
  414b26:	not    BYTE PTR [ebx]
  414b28:	inc    edi
  414b29:	(bad)  
  414b2a:	dec    ebx
  414b2b:	or     BYTE PTR [edi-0x38],ah
  414b2e:	fsub   DWORD PTR ds:[esi-0x45]
  414b32:	aas    
  414b33:	repz jae 0x414b04
  414b36:	pop    esp
  414b37:	or     DWORD PTR [eax],eax
  414b39:	cdq    
  414b3a:	sub    DWORD PTR [esi],eax
  414b3c:	je     0x414add
  414b3e:	push   edi
  414b3f:	std    
  414b40:	popa   
  414b41:	mov    WORD PTR [esp+edx*1+0x51],es
  414b45:	test   BYTE PTR [edx+ecx*1],bh
  414b48:	arpl   WORD PTR [ebx-0x7b8ff682],bx
  414b4e:	xor    ah,BYTE PTR [eax+eax*1]
  414b51:	jmp    0xa886ed88
  414b56:	xor    bh,dh
  414b58:	bound  ebx,QWORD PTR [eax+0x16]
  414b5b:	adc    DWORD PTR [ebp-0x63],eax
  414b5e:	jmp    0x53302329
  414b63:	mov    ebx,fs
  414b65:	mov    edx,0xe956dd10
  414b6a:	add    BYTE PTR [eax],al
  414b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b6d:	ds xor edi,edi
  414b70:	pushf  
  414b71:	dec    ecx
  414b72:	add    BYTE PTR cs:[ebx-0x5dd0027d],bl
  414b79:	adc    cl,BYTE PTR [eax]
  414b7b:	sub    ebx,DWORD PTR [esi-0x70fafeeb]
  414b81:	pop    ss
  414b82:	(bad)  
  414b83:	(bad)  
  414b84:	cmp    ebp,DWORD PTR [ebx]
  414b86:	data16 je 0x414ba8
  414b89:	xor    eax,0x4c246572
  414b8e:	outs   dx,BYTE PTR gs:[esi]
  414b90:	cmp    DWORD PTR [edi+0x46],eax
  414b93:	push   esp
  414b94:	cmp    ah,bl
  414b96:	dec    esi
  414b97:	imul   ebx,DWORD PTR [ecx+esi*1+0x20],0x5d2e394d
  414b9f:	addr16 sub eax,0x6748004a
  414ba5:	inc    edi
  414ba6:	je     0x414ba8
  414ba8:	jge    0x414bf1
  414baa:	popa   
  414bab:	jb     0x414bc5
  414bad:	in     al,0x5c
  414baf:	jae    0x414bbc
  414bb1:	adc    al,0x50
  414bb3:	outs   dx,DWORD PTR ds:[esi]
  414bb4:	fidivr DWORD PTR [edi]
  414bb6:	add    BYTE PTR [edx-0x13],dl
  414bb9:	imul   esi,DWORD PTR es:[ebp+edi*8+0x73],0x41
  414bbf:	imul   ecx,edx,0xd1435c13
  414bc5:	cmp    DWORD PTR [ecx+0x72],esp
  414bc8:	lods   al,BYTE PTR ds:[esi]
  414bc9:	ds pop edi
  414bcb:	imul   ebx,eax,0x6d
  414bce:	popa   
  414bcf:	jne    0x414bd1
  414bd1:	add    BYTE PTR [ebx+0x5b750030],bh
  414bd7:	cs jb  0x414c08
  414bda:	stos   DWORD PTR es:[edi],eax
  414bdb:	sub    al,0x6e
  414bdd:	data16 mov cl,0x34
  414be0:	add    BYTE PTR [ebx+ecx*2],bh
  414be3:	cs je  0x414c5a
  414be6:	popa   
  414be7:	arpl   WORD PTR es:[eax],sp
  414bea:	cmp    WORD PTR [ecx+0x65],bp
  414bee:	xor    DWORD PTR [eax],ebp
  414bf0:	loop   0x414bf1
  414bf2:	push   eax
  414bf3:	jge    0x414c20
  414bf5:	pop    edi
  414bf6:	or     eax,0x533b1f50
  414bfb:	jge    0x414c4f
  414bfd:	ins    DWORD PTR es:[edi],dx
  414bfe:	pop    ss
  414bff:	push   ecx
  414c00:	sub    eax,0x47d8035f
  414c05:	push   ecx
  414c06:	or     BYTE PTR [eax],ch
  414c08:	adc    eax,0x301bdd6e
  414c0d:	push   0x504817d0
  414c12:	fmul   QWORD PTR [eax+0x50]
  414c15:	push   edi
  414c16:	std    
  414c17:	sub    DWORD PTR [edi],ebx
  414c19:	jno    0x414bfd
  414c1b:	and    edx,DWORD PTR ds:0x397cc26e
  414c21:	ins    DWORD PTR es:[edi],dx
  414c22:	ret    0x3388
  414c25:	pop    edi
  414c26:	int3   
  414c27:	pop    edi
  414c28:	add    DWORD PTR [ebx-0x3e],edx
  414c2b:	push   edi
  414c2c:	das    
  414c2d:	dec    esi
  414c2e:	nop
  414c2f:	pop    eax
  414c30:	and    BYTE PTR [eax],al
  414c32:	sbb    DWORD PTR [edx+esi*1+0x71],0x66a60000
  414c3a:	das    
  414c3b:	xor    DWORD PTR fs:[ebp-0x487a8dea],ebp
  414c42:	xor    BYTE PTR [ebx-0x6d],ch
  414c45:	pop    eax
  414c46:	das    
  414c47:	add    BYTE PTR [ebp-0x60],ah
  414c4a:	das    
  414c4b:	imul   ecx,DWORD PTR [eax-0x7a93db61],0xffffffa4
  414c52:	xor    DWORD PTR [ebx+0x31],esp
  414c55:	scas   eax,DWORD PTR es:[edi]
  414c56:	xor    DWORD PTR [eax+0x77],esi
  414c59:	mov    cl,0x51
  414c5b:	cs pop ecx
  414c5d:	mov    al,ds:0xb76d0015
  414c62:	push   ss
  414c63:	je     0x414cb1
  414c65:	or     eax,0x140a6424
  414c6a:	adc    al,BYTE PTR [eax+eiz*2]
  414c6d:	inc    DWORD PTR [eax+esi*1+0x24]
  414c71:	cmc    
  414c72:	pop    eax
  414c73:	and    DWORD PTR ds:0x171e3dd3,eax
  414c79:	stc    
  414c7a:	dec    ebx
  414c7b:	inc    ebx
  414c7c:	and    al,BYTE PTR [edi+eax*1]
  414c7f:	push   ebx
  414c80:	sbb    al,0xf6
  414c82:	cmp    ch,BYTE PTR [edi]
  414c84:	out    0x1,al
  414c86:	inc    esp
  414c87:	add    al,0xf7
  414c89:	out    0x36,eax
  414c8b:	in     al,0x12
  414c8d:	stc    
  414c8e:	sbb    DWORD PTR [eax],esi
  414c90:	(bad)  
  414c91:	std    
  414c92:	pop    es
  414c93:	xor    dh,cl
  414c95:	(bad)  
  414c96:	cld    
  414c97:	jecxz  0x414c7a
  414c99:	clc    
  414c9a:	clc    
  414c9b:	sub    eax,0x1d20000
  414ca0:	out    0x3d,eax
  414ca2:	in     eax,0xe3
  414ca4:	(bad)  
  414ca5:	pop    ds
  414ca6:	rol    BYTE PTR [edx],cl
  414ca8:	repz sbb al,0xcf
  414cab:	hlt    
  414cac:	ficomp DWORD PTR [esp+eax*8]
  414caf:	std    
  414cb0:	push   es
  414cb1:	xor    DWORD PTR [eax+0x6f03d8f7],esp
  414cb7:	call   0xf7d43072
  414cbc:	mov    ecx,0xc7fe8e2f
  414cc1:	das    
  414cc2:	xchg   esi,eax
  414cc3:	std    
  414cc4:	(bad)
  414cc8:	mov    ecx,0x98fd8432
  414ccd:	pop    ds
  414cce:	xor    esi,edx
  414cd0:	mov    dl,0x53
  414cd2:	adc    eax,edi
  414cd4:	mov    esi,DWORD PTR [edx]
  414cd6:	pop    ebp
  414cd7:	sti    
  414cd8:	jl     0x414cfe
  414cda:	gs sti 
  414cdc:	xchg   ebp,eax
  414cdd:	adc    eax,0x318e0411
  414ce2:	inc    ebp
  414ce3:	adc    al,0x0
  414ce5:	scas   eax,DWORD PTR es:[edi]
  414ce6:	jbe    0x414ccc
  414ce8:	pop    ds
  414ce9:	test   DWORD PTR [ecx],edx
  414ceb:	add    esi,DWORD PTR [eax+edx*2+0x1f]
  414cef:	in     eax,dx
  414cf0:	jae    0x414d42
  414cf2:	inc    esp
  414cf3:	(bad)  
  414cf4:	pop    ds
  414cf5:	dec    edx
  414cf6:	push   edx
  414cf7:	or     BYTE PTR [edi+0x3d],bl
  414cfa:	inc    esp
  414cfb:	idiv   edi
  414cfd:	cs add esp,esp
  414d00:	pop    ds
  414d01:	cmp    DWORD PTR [eax],eax
  414d03:	add    BYTE PTR [ebx-0x1],al
  414d06:	gs inc eax
  414d08:	sub    ecx,esi
  414d0a:	jo     0x414cf5
  414d0c:	cmp    al,0xe8
  414d0e:	dec    edi
  414d0f:	cmp    dl,BYTE PTR ds:0x350d6bf1
  414d15:	div    BYTE PTR [ebx+0x19]
  414d18:	and    ah,bh
  414d1a:	(bad)  
  414d1b:	std    
  414d1c:	inc    esi
  414d1d:	ds data16 cli 
  414d20:	cmp    edx,DWORD PTR [ecx+edx*2]
  414d23:	push   cs
  414d24:	das    
  414d25:	or     BYTE PTR [ebp+0x8],dh
  414d28:	add    esi,ecx
  414d2a:	pop    ebx
  414d2b:	sbb    al,0xf2
  414d2d:	loop   0x414d59
  414d2f:	mov    edx,0xbd73f61d
  414d34:	ins    BYTE PTR es:[edi],dx
  414d35:	call   0xf67ded89
  414d3a:	ins    BYTE PTR es:[edi],dx
  414d3b:	lods   eax,DWORD PTR ds:[esi]
  414d3c:	xor    ecx,0x1462bc73
  414d42:	inc    esp
  414d43:	enter  0xed5e,0x43
  414d47:	rol    BYTE PTR [eax+0x14],0x5c
  414d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d4c:	outs   dx,BYTE PTR ds:[esi]
  414d4d:	in     al,0x46
  414d4f:	xchg   edi,eax
  414d50:	adc    al,0xff
  414d52:	(bad)  
  414d53:	mov    ecx,0x8c76024f
  414d58:	and    al,ah
  414d5a:	call   0x78:0x3e0e
  414d60:	mov    ebp,0xb54e0024
  414d65:	cmp    BYTE PTR [ecx+0x73],dh
  414d68:	add    BYTE PTR [eax],al
  414d6a:	xchg   esi,eax
  414d6b:	sub    DWORD PTR [ebp+eiz*2-0x38],ebp
  414d6f:	cs je  0x414de2
  414d72:	pop    ebx
  414d73:	sub    DWORD PTR [ebp+eiz*2+0x3e],esi
  414d77:	sub    DWORD PTR [esi+0x69],ebp
  414d7a:	cwde   
  414d7b:	dec    esi
  414d7c:	pop    ebp
  414d7d:	jae    0x414d83
  414d7f:	jecxz  0x414df4
  414d81:	outs   dx,DWORD PTR ds:[esi]
  414d82:	(bad)  
  414d83:	sub    al,0x20
  414d85:	inc    edx
  414d86:	dec    edx
  414d87:	daa    
  414d88:	jae    0x414dfd
  414d8a:	cmc    
  414d8b:	inc    ecx
  414d8c:	add    BYTE PTR [esi+0x24],al
  414d8f:	call   0x445cb6df
  414d94:	cs cmp bl,BYTE PTR fs:[eax]
  414d98:	pop    esp
  414d99:	dec    ebp
  414d9a:	cmp    DWORD PTR [eax+0x6c],ecx
  414d9d:	sbb    eax,DWORD PTR gs:[ecx+esi*2+0x64]
  414da2:	inc    ecx
  414da3:	daa    
  414da4:	pop    esp
  414da5:	inc    ebx
  414da6:	and    BYTE PTR [edx+0x6b],al
  414da9:	ins    DWORD PTR es:[edi],dx
  414daa:	xor    eax,0x3b756be8
  414daf:	adc    BYTE PTR [edi],ah
  414db1:	inc    eax
  414db2:	mov    BYTE PTR [eax],dl
  414db4:	mov    edi,0x6117d844
  414db9:	inc    esi
  414dba:	fcom   DWORD PTR [edi]
  414dbc:	pop    ebx
  414dbd:	dec    edx
  414dbe:	enter  0xd317,0x4d
  414dc2:	enter  0xfd17,0x4f
  414dc6:	fcom   DWORD PTR [edi]
  414dc8:	fist   DWORD PTR [eax+ebx*8+0x17]
  414dcc:	aam    0x55
  414dce:	add    BYTE PTR [eax],al
  414dd0:	enter  0xde17,0x56
  414dd4:	enter  0x5917,0x58
  414dd8:	cwde   
  414dd9:	pop    ss
  414dda:	sbb    BYTE PTR [ecx+0x31],bl
  414ddd:	mov    ebp,0xbd7a5d01
  414de2:	add    eax,esp
  414de4:	je     0x414da3
  414de6:	add    DWORD PTR [edx+0x51],esi
  414de9:	mov    ebp,0xbd522701
  414dee:	add    DWORD PTR [edx+edx*2+0x52ed01bd],esi
  414df5:	cmp    eax,0x3d156704
  414dfa:	add    al,0xeb
  414dfc:	or     eax,0x17f0043d
  414e01:	cmp    eax,0x3d0e1f04
  414e06:	add    al,0x91
  414e08:	sbb    edi,DWORD PTR ds:0x3d146904
  414e0e:	add    al,0x96
  414e10:	push   cs
  414e11:	cmp    eax,0x3d019204
  414e16:	add    al,0x4c
  414e18:	loopne 0x414e56
  414e1a:	add    al,0x49
  414e1c:	jecxz  0x414e5a
  414e1e:	add    al,0x75
  414e20:	in     eax,0x3c
  414e22:	add    al,0x18
  414e24:	fnstcw WORD PTR [esp+eax*1]
  414e27:	pop    edi
  414e28:	leave  
  414e29:	cmp    al,0x4
  414e2b:	(bad)  
  414e2c:	leave  
  414e2d:	cmp    al,0x4
  414e2f:	sbb    al,0xba
  414e31:	cmp    al,0x4
  414e33:	arpl   WORD PTR [eax],ax
  414e35:	add    BYTE PTR [edx-0x48b6fe44],bh
  414e3b:	mov    esp,0xbcb85501
  414e40:	add    DWORD PTR ds:0xda01bcab,esp
  414e46:	mov    edi,0xa65f01bc
  414e4b:	mov    esp,0xbca91501
  414e50:	add    DWORD PTR [esi+0x2301bc99],ebx
  414e56:	cwde   
  414e57:	adc    esp,DWORD PTR [edi-0x585362fd]
  414e5d:	add    ebp,DWORD PTR [ecx]
  414e5f:	scas   al,BYTE PTR es:[edi]
  414e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e61:	add    edi,ebx
  414e63:	lods   eax,DWORD PTR ds:[esi]
  414e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e65:	add    edi,DWORD PTR [ecx-0x51]
  414e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e69:	add    eax,DWORD PTR [ebx-0x25fc5852]
  414e6f:	scas   al,BYTE PTR es:[edi]
  414e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e71:	add    eax,DWORD PTR [edx]
  414e73:	mov    al,0xa7
  414e75:	add    esp,ebp
  414e77:	mov    esp,0xbcaa0427
  414e7c:	daa    
  414e7d:	add    al,0xb9
  414e7f:	into   
  414e80:	daa    
  414e81:	add    al,0xe6
  414e83:	into   
  414e84:	daa    
  414e85:	add    al,0x8b
  414e87:	into   
  414e88:	daa    
  414e89:	add    al,0x2
  414e8b:	enter  0x427,0xcf
  414e8f:	(bad)  
  414e90:	daa    
  414e91:	add    al,0x64
  414e93:	(bad)  
  414e94:	daa    
  414e95:	add    al,0x29
  414e97:	leave  
  414e98:	daa    
  414e99:	add    al,0x0
  414e9b:	add    dh,dl
  414e9d:	enter  0x427,0xef
  414ea1:	leave  
  414ea2:	daa    
  414ea3:	add    al,0x81
  414ea5:	leave  
  414ea6:	daa    
  414ea7:	add    al,0x8b
  414ea9:	push   ebx
  414eaa:	daa    
  414eab:	add    al,0x10
  414ead:	push   ebp
  414eae:	daa    
  414eaf:	add    al,0xd2
  414eb1:	push   esp
  414eb2:	daa    
  414eb3:	add    al,0x5a
  414eb5:	push   esp
  414eb6:	daa    
  414eb7:	add    al,0xed
  414eb9:	push   esi
  414eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebb:	add    edx,ebx
  414ebd:	push   ebp
  414ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebf:	add    eax,DWORD PTR [eax+0x50]
  414ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec3:	add    ecx,DWORD PTR [edi+0x4f]
  414ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec7:	add    ecx,ecx
  414ec9:	dec    edi
  414eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ecb:	add    esp,DWORD PTR [edx+0x5b]
  414ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ecf:	add    ebx,ebx
  414ed1:	pop    ebx
  414ed2:	add    BYTE PTR [ecx-0x5634dfce],ch
  414ed8:	xor    cl,BYTE PTR [ebx+ecx*8]
  414edb:	test   eax,0xa9cee432
  414ee0:	xor    ch,bl
  414ee2:	shr    BYTE PTR [ecx-0x562c53ce],1
  414ee8:	xor    ch,BYTE PTR [ecx-0x2d]
  414eeb:	test   eax,0xa9d7e532
  414ef0:	xor    ch,BYTE PTR [edx+0x2832a9d8]
  414ef6:	xlat   BYTE PTR ds:[ebx]
  414ef7:	test   eax,0x29d79b32
  414efc:	xor    eax,0x29da11
  414f01:	add    BYTE PTR ds:0x3529da8f,ch
  414f07:	adc    al,0x0
  414f09:	jmp    0xe9416340
  414f0e:	xor    dl,BYTE PTR [eax+eax*1]
  414f11:	jmp    0xe9416348
  414f16:	xor    dl,BYTE PTR [eax+eax*1]
  414f19:	jmp    0x10ad2250
  414f1e:	push   ss
  414f1f:	cli    
  414f20:	jae    0x414eeb
  414f22:	cli    
  414f23:	call   0xe3765098
  414f28:	push   ebx
  414f29:	sub    BYTE PTR [ecx],bl
  414f2b:	in     eax,0x50
  414f2d:	aam    0xfb
  414f2f:	fmul   QWORD PTR [edi+0x2e]
  414f32:	(bad)  
  414f33:	fild   QWORD PTR [edx]
  414f35:	es in  al,dx
  414f37:	adc    esp,DWORD PTR [ebx]
  414f39:	add    eax,0xcc77f643
  414f3e:	xor    dh,BYTE PTR ds:0x14651b30
  414f44:	je     0x414f21
  414f46:	inc    edi
  414f47:	cmc    
  414f48:	(bad)  
  414f49:	mov    ebp,0x2df04b
  414f4e:	cli    
  414f4f:	xor    eax,0x1e010074
  414f54:	or     DWORD PTR [edx],ecx
  414f56:	adc    eax,0x2200517
  414f5b:	inc    esp
  414f5c:	jno    0x414fcf
  414f5e:	clc    
  414f5f:	sbb    DWORD PTR [edx],ecx
  414f61:	and    BYTE PTR [ecx+esi*1+0x206c],ch
  414f68:	shl    DWORD PTR [ecx+0x2e],1
  414f6b:	and    al,ch
  414f6d:	sbb    DWORD PTR [edx],ecx
  414f6f:	or     DWORD PTR [ecx-0x7f6dfc6],esp
  414f75:	xor    DWORD PTR [eax+0x69],edi
  414f78:	cmp    esp,DWORD PTR [ecx]
  414f7a:	and    BYTE PTR [ecx],cl
  414f7c:	call   0x387271f5
  414f81:	sbb    eax,0x42ef2020
  414f86:	je     0x414ff7
  414f88:	sub    BYTE PTR ds:0x24fd6f20,bl
  414f8e:	add    eax,0x6174820d
  414f93:	gs hlt 
  414f95:	outs   dx,DWORD PTR ds:[esi]
  414f96:	push   es
  414f97:	and    BYTE PTR ds:0x28001d60,ch
  414f9d:	jo     0x414fbe
  414f9f:	and    eax,0x201d724b
  414fa4:	js     0x41501a
  414fa6:	sbb    eax,0x61381b00
  414fab:	ins    BYTE PTR es:[edi],dx
  414fac:	push   esp
  414fad:	shl    DWORD PTR [edi+0x65],1
  414fb0:	cmp    esp,DWORD PTR [ecx]
  414fb2:	je     0x415019
  414fb4:	sbb    DWORD PTR [eax],edx
  414fb6:	outs   dx,DWORD PTR ds:[esi]
  414fb7:	push   0x336c442d
  414fbc:	jp     0x414f40
  414fbe:	popa   
  414fbf:	ins    BYTE PTR es:[edi],dx
  414fc0:	add    al,0x14
  414fc2:	popa   
  414fc3:	js     0x414fcd
  414fc5:	cmp    BYTE PTR [ebx+0x72],ch
  414fc8:	xor    DWORD PTR [eax+0x13],ebx
  414fcb:	add    BYTE PTR cs:[eax],al
  414fce:	mov    WORD PTR [ebp+0x26],fs
  414fd1:	add    BYTE PTR [edx+0x20],ah
  414fd4:	shr    DWORD PTR [edx],1
  414fd6:	cmp    al,0x18
  414fd8:	shl    DWORD PTR [edi],1
  414fda:	xor    DWORD PTR [ebp+0x1],edi
  414fdd:	add    BYTE PTR [ecx],dh
  414fdf:	stos   BYTE PTR es:[edi],al
  414fe0:	es inc edi
  414fe2:	pop    esp
  414fe3:	lods   eax,DWORD PTR ds:[esi]
  414fe4:	es jb  0x415049
  414fe7:	xchg   esi,eax
  414fe8:	das    
  414fe9:	pop    edi
  414fea:	gs cwde 
  414fec:	xor    DWORD PTR [edx+0x48],esi
  414fef:	lahf   
  414ff0:	sub    ch,BYTE PTR [esp+edx*2-0x6a]
  414ff4:	add    BYTE PTR es:[edx-0x70],ah
  414ff8:	xor    eax,0x13ad5361
  414ffd:	addr16 aas 
  414fff:	xchg   esp,eax
  415000:	sub    eax,0x3d81663
  415005:	push   ecx
  415006:	or     al,0x3a
  415008:	sub    al,0x5f
  41500a:	(bad)  
  41500c:	es dec esi
  41500e:	push   es
  41500f:	loope  0x41503b
  415011:	data16 or BYTE PTR ds:0xe3ff6712,ch
  415018:	das    
  415019:	arpl   WORD PTR [esi],dx
  41501b:	fadd   DWORD PTR [ebx]
  41501d:	push   ecx
  41501e:	or     al,0x3a
  415020:	adc    ah,BYTE PTR [ebx-0x30]
  415023:	sub    BYTE PTR [edi],ah
  415025:	push   esp
  415026:	(bad)  
  415027:	and    DWORD PTR [edi],esp
  415029:	outs   dx,BYTE PTR ds:[esi]
  41502a:	add    DWORD PTR [ebx],ebp
  41502c:	sub    esi,DWORD PTR [esi-0x38]
  41502f:	mov    BYTE PTR [eax],ch
  415031:	add    BYTE PTR gs:[eax],al
  415034:	aam    0x7c
  415036:	xor    ah,BYTE PTR [ebx-0xd]
  415039:	sbb    esp,DWORD PTR [ecx]
  41503b:	imul   eax,esp,0xc872318c
  415041:	jle    0x41506f
  415043:	ins    BYTE PTR es:[edi],dx
  415044:	xchg   esp,eax
  415045:	adc    al,0xce
  415047:	sub    BYTE PTR [ecx],dh
  415049:	jecxz  0x41500e
  41504b:	xor    DWORD PTR [edx-0x5cd124fd],edx
  415051:	icebp  
  415052:	mov    dh,0x11
  415054:	xchg   esi,eax
  415055:	dec    bh
  415057:	das    
  415058:	xchg   edx,eax
  415059:	out    dx,eax
  41505a:	ret    
  41505b:	add    esp,DWORD PTR [eax-0xf]
  41505e:	lahf   
  41505f:	sub    eax,0x24c40290
  415064:	pusha  
  415065:	icebp  
  415066:	mov    bh,0x18
  415068:	push   esp
  415069:	add    BYTE PTR [eax-0x63029ccd],cl
  41506f:	sub    al,0x45
  415071:	icebp  
  415072:	test   DWORD PTR [eax],ebp
  415074:	xor    ebx,esp
  415076:	mov    eax,DWORD PTR [eax+eax*2+0x3]
  41507a:	nop
  41507b:	es dec edi
  41507d:	in     al,0x78
  41507f:	sub    al,0x4a
  415081:	cmc    
  415082:	js     0x4150a0
  415084:	add    eax,0x172951f7
  415089:	in     al,0x58
  41508b:	sub    eax,0x2942fd27
  415090:	or     al,0xf1
  415092:	out    0x3,al
  415094:	xor    DWORD PTR [edi+eiz*8],edx
  415097:	add    eax,DWORD PTR [eax]
  415099:	add    BYTE PTR [ecx],dh
  41509b:	adc    al,0xe7
  41509d:	add    esi,DWORD PTR [ecx]
  41509f:	adc    al,0xe7
  4150a1:	add    esi,DWORD PTR [ecx]
  4150a3:	adc    al,0xe7
  4150a5:	add    esi,DWORD PTR [ecx]
  4150a7:	adc    al,0xe7
  4150a9:	add    esi,DWORD PTR [ecx]
  4150ab:	adc    al,0xe7
  4150ad:	add    esi,DWORD PTR [ecx]
  4150af:	adc    al,0xe7
  4150b1:	add    esi,DWORD PTR [ecx]
  4150b3:	adc    al,0xe7
  4150b5:	add    esi,DWORD PTR [ecx]
  4150b7:	adc    al,0xe7
  4150b9:	add    esi,DWORD PTR [ecx]
  4150bb:	adc    al,0xe7
  4150bd:	add    esi,DWORD PTR [ecx]
  4150bf:	adc    al,0x0
  4150c1:	jmp    0xe94164f8
  4150c6:	xor    dl,BYTE PTR [eax+eax*1]
  4150c9:	jmp    0xe9416500
  4150ce:	xor    dl,BYTE PTR [eax+eax*1]
  4150d1:	jmp    0xe9416508
  4150d6:	xor    dl,BYTE PTR [eax+eax*1]
  4150d9:	jmp    0xe9416510
  4150de:	xor    dl,BYTE PTR [eax+eax*1]
  4150e1:	jmp    0xe9416518
  4150e6:	xor    dl,BYTE PTR [eax+eax*1]
  4150e9:	jmp    0xe9416520
  4150ee:	xor    dl,BYTE PTR [eax+eax*1]
  4150f1:	jmp    0xe9416528
  4150f6:	xor    dl,BYTE PTR [eax+eax*1]
  4150f9:	jmp    0xe9416530
  4150fe:	add    BYTE PTR [eax],al
  415100:	xor    dl,BYTE PTR [eax+eax*1]
  415103:	jmp    0xe941653a
  415108:	xor    dl,BYTE PTR [eax+eax*1]
  41510b:	jmp    0xe9416542
  415110:	xor    dl,BYTE PTR [eax+eax*1]
  415113:	jmp    0xe941654a
  415118:	xor    dl,BYTE PTR [eax+eax*1]
  41511b:	jmp    0xe9416552
  415120:	xor    dl,BYTE PTR [eax+eax*1]
  415123:	jmp    0xe941655a
  415128:	xor    dl,BYTE PTR [eax+eax*1]
  41512b:	jmp    0xe9416562
  415130:	xor    dl,BYTE PTR [eax+eax*1]
  415133:	jmp    0xe941656a
  415138:	xor    dl,BYTE PTR [eax+eax*1]
  41513b:	add    BYTE PTR [eax+0x11],bl
  41513e:	add    BYTE PTR [eax],al
  415140:	dec    eax
  415141:	adc    DWORD PTR [eax],eax
  415143:	add    BYTE PTR [eax+0x11],cl
  415146:	add    BYTE PTR [eax],al
  415148:	sbb    BYTE PTR [ecx],dl
  41514a:	add    BYTE PTR [eax],al
  41514c:	sbb    BYTE PTR [ecx],dl
  41514e:	add    BYTE PTR [eax],al
  415150:	or     BYTE PTR [ecx],dl
  415152:	add    BYTE PTR [eax],al
  415154:	or     BYTE PTR [ecx],dl
  415156:	add    BYTE PTR [eax],al
  415158:	sbb    BYTE PTR [ecx],dl
  41515a:	add    BYTE PTR [eax],al
  41515c:	sbb    BYTE PTR [ecx],dl
  41515e:	add    BYTE PTR [eax],al
  415160:	or     BYTE PTR [ecx],dl
  415162:	add    BYTE PTR [eax],al
  415164:	add    BYTE PTR [eax],al
  415166:	or     BYTE PTR [ecx],dl
  415168:	add    BYTE PTR [eax],al
  41516a:	fcom   DWORD PTR [eax]
  41516c:	add    BYTE PTR [eax],al
  41516e:	fcom   DWORD PTR [eax]
  415170:	add    BYTE PTR [eax],al
  415172:	enter  0x10,0x0
  415176:	enter  0x10,0x0
  41517a:	fcom   DWORD PTR [eax]
  41517c:	add    BYTE PTR [eax],al
  41517e:	fcom   DWORD PTR [eax]
  415180:	add    BYTE PTR [eax],al
  415182:	enter  0x10,0x0
  415186:	enter  0x10,0x0
  41518a:	cwde   
  41518b:	adc    BYTE PTR [eax],al
  41518d:	add    BYTE PTR [eax-0x77fffff0],bl
  415193:	adc    BYTE PTR [eax],al
  415195:	add    BYTE PTR [eax-0x67fffff0],cl
  41519b:	adc    BYTE PTR [eax],al
  41519d:	add    BYTE PTR [eax-0x77fffff0],bl
  4151a3:	adc    BYTE PTR [eax],al
  4151a5:	add    BYTE PTR [eax+0x58000010],cl
  4151ab:	adc    BYTE PTR [eax],al
  4151ad:	add    BYTE PTR [eax+0x10],bl
  4151b0:	add    BYTE PTR [eax],al
  4151b2:	dec    eax
  4151b3:	adc    BYTE PTR [eax],al
  4151b5:	add    BYTE PTR [ecx],dh
  4151b7:	jnp    0x4151ba
  4151b9:	add    BYTE PTR [ecx],dh
  4151bb:	jnp    0x4151be
  4151bd:	add    BYTE PTR [ecx],dh
  4151bf:	jnp    0x4151c2
  4151c1:	add    BYTE PTR [ecx],dh
  4151c3:	jnp    0x4151c6
  4151c5:	add    BYTE PTR [ecx],dh
  4151c7:	jnp    0x4151ca
  4151c9:	add    BYTE PTR [eax],al
  4151cb:	add    BYTE PTR [ecx],dh
  4151cd:	ins    DWORD PTR es:[edi],dx
  4151ce:	add    DWORD PTR [eax],eax
  4151d0:	xor    DWORD PTR [ebp+0x1],ebp
  4151d3:	add    BYTE PTR [ecx],dh
  4151d5:	ins    DWORD PTR es:[edi],dx
  4151d6:	add    DWORD PTR [eax],eax
  4151d8:	xor    DWORD PTR [ebp+0x1],ebp
  4151db:	add    BYTE PTR [ecx],dh
  4151dd:	ins    DWORD PTR es:[edi],dx
  4151de:	add    DWORD PTR [eax],eax
  4151e0:	xor    DWORD PTR [ebp+0x1],ebp
  4151e3:	add    BYTE PTR [ecx],dh
  4151e5:	ins    DWORD PTR es:[edi],dx
  4151e6:	add    DWORD PTR [eax],eax
  4151e8:	xor    DWORD PTR [ebp+0x1],ebp
  4151eb:	add    BYTE PTR [ecx],dh
  4151ed:	ins    DWORD PTR es:[edi],dx
  4151ee:	add    DWORD PTR [eax],eax
  4151f0:	xor    DWORD PTR [ebp+0x1],ebp
  4151f3:	add    BYTE PTR [ecx],dh
  4151f5:	ins    DWORD PTR es:[edi],dx
  4151f6:	add    DWORD PTR [eax],eax
  4151f8:	xor    DWORD PTR [ebp+0x1],ebp
  4151fb:	add    BYTE PTR [ecx],dh
  4151fd:	ins    DWORD PTR es:[edi],dx
  4151fe:	add    DWORD PTR [eax],eax
  415200:	xor    DWORD PTR [ebp+0x1],ebp
  415203:	add    BYTE PTR [ecx],dh
  415205:	ins    DWORD PTR es:[edi],dx
  415206:	add    DWORD PTR [eax],eax
  415208:	xor    DWORD PTR [ebp+0x1],ebp
  41520b:	add    BYTE PTR [ecx],dh
  41520d:	ins    DWORD PTR es:[edi],dx
  41520e:	add    DWORD PTR [eax],eax
  415210:	xor    DWORD PTR [ebp+0x1],ebp
  415213:	add    BYTE PTR [ecx],dh
  415215:	ins    DWORD PTR es:[edi],dx
  415216:	add    DWORD PTR [eax],eax
  415218:	xor    DWORD PTR [ebp+0x1],ebp
  41521b:	add    BYTE PTR [ecx],dh
  41521d:	ins    DWORD PTR es:[edi],dx
  41521e:	add    DWORD PTR [eax],eax
  415220:	xor    DWORD PTR [esi+eiz*8+0x42],ebp
  415224:	push   ss
  415225:	add    al,0x6d
  415227:	retf   
  415228:	xchg   bl,cl
  41522a:	mov    eax,0x304bc9ba
  41522f:	xor    al,BYTE PTR [eax]
  415231:	add    BYTE PTR [ecx+0x14],al
  415234:	jo     0x4152a5
  415236:	push   0x73
  415238:	call   0x673c4623
  41523d:	add    al,0xf1
  41523f:	adc    eax,edi
  415241:	add    esp,DWORD PTR [ecx]
  415243:	adc    al,0xef
  415245:	add    esi,DWORD PTR ds:0x3603e914
  41524b:	and    edi,0x3
  41524e:	mov    cl,0x13
  415250:	out    0x3,eax
  415252:	jno    0x415268
  415254:	out    0x3,eax
  415256:	push   ecx
  415257:	adc    al,0xe7
  415259:	add    eax,DWORD PTR [ecx+0x14]
  41525c:	out    0x3,eax
  41525e:	cmp    DWORD PTR [edi+eiz*8],edx
  415261:	add    ebp,DWORD PTR ds:0x3303e714
  415267:	adc    al,0xe7
  415269:	add    esi,esi
  41526b:	and    bh,0x83
  41526e:	xor    DWORD PTR [edi+eiz*8],edx
  415271:	inc    ebx
  415272:	xor    DWORD PTR [edi+eiz*8],edx
  415275:	jecxz  0x415255
  415277:	and    bh,0xf3
  41527a:	(bad)  
  41527b:	and    bh,0xb
  41527e:	xor    DWORD PTR [edi+eiz*8],edx
  415281:	inc    esi
  415283:	and    bh,0x5
  415286:	xor    DWORD PTR [edi+eiz*8],edx
  415289:	add    al,0x31
  41528b:	adc    al,0x67
  41528d:	add    al,0x31
  41528f:	adc    al,0xa7
  415291:	add    esi,DWORD PTR [ecx]
  415293:	adc    al,0x7
  415295:	add    al,0x0
  415297:	add    BYTE PTR [ecx],dh
  415299:	adc    al,0xf7
  41529b:	add    esi,DWORD PTR [ecx]
  41529d:	adc    al,0xdf
  41529f:	add    esi,DWORD PTR [ecx]
  4152a1:	adc    al,0xe3
  4152a3:	add    esi,DWORD PTR [ecx]
  4152a5:	adc    al,0xe9
  4152a7:	add    esi,DWORD PTR [ecx]
  4152a9:	adc    al,0xe8
  4152ab:	add    esi,DWORD PTR [ecx]
  4152ad:	adc    al,0x0
  4152af:	icebp  
  4152b0:	cmp    BYTE PTR [edx],0x20
  4152b3:	shl    DWORD PTR [edx+0x1a],1
  4152b6:	add    al,ah
  4152b8:	test   DWORD PTR [ecx],edi
  4152ba:	pop    ds
  4152bb:	add    BYTE PTR [ecx+ebx*1-0x1],bl
  4152bf:	shl    BYTE PTR [esp+ebp*1+0x22],cl
  4152c3:	repz cmp al,0xc
  4152c6:	add    al,dl
  4152c8:	sub    esp,DWORD PTR [bx+di]
  4152cb:	mov    edi,0xd7263060
  4152d0:	and    BYTE PTR [eax],dl
  4152d2:	push   es
  4152d3:	lods   al,BYTE PTR ds:[esi]
  4152d4:	add    DWORD PTR [edi],ebp
  4152d6:	and    eax,DWORD PTR [eax+eiz*1]
  4152d9:	lsl    ebx,WORD PTR ds:0xf5242e01
  4152e0:	push   ds
  4152e1:	push   cs
  4152e2:	add    al,0xf2
  4152e4:	dec    DWORD PTR [ecx+eax*1]
  4152e7:	call   0xf1476b20
  4152ec:	and    al,0x10
  4152ee:	push   cs
  4152ef:	out    0xe5,al
  4152f1:	and    al,0x13
  4152f3:	(bad)  
  4152f4:	in     eax,0x1c
  4152f6:	sbb    al,0xf4
  4152f8:	loop   0x415305
  4152fa:	adc    eax,0xd60000e9
  4152ff:	adc    ebx,DWORD PTR [ecx]
  415301:	out    0x31,eax
  415303:	sub    BYTE PTR [edi],al
  415305:	idiv   DWORD PTR [esp+ecx*1+0xf33e001]
  41530c:	push   es
  41530d:	jecxz  0x4152ce
  41530f:	or     eax,0x1f87c0ff
  415314:	and    al,0xbf
  415316:	sbb    BYTE PTR [esi],0x25
  415319:	sbb    ecx,DWORD PTR [ecx+0x7d122d21]
  41531f:	aaa    
  415320:	xor    eax,0x272e6108
  415325:	sbb    BYTE PTR [ebp+ebx*1-0x7e77ffe3],cl
  41532c:	inc    BYTE PTR [eax]
  41532e:	mov    BYTE PTR ds:0x15580000,dl
  415334:	std    
  415335:	dec    DWORD PTR [ecx+eax*4-0x2]
  415339:	add    BYTE PTR [ebp+edx*1-0x3],cl
  41533d:	add    BYTE PTR [ecx+eax*4-0x2],cl
  415341:	call   FWORD PTR [ebp+edx*1+0x0]
  415345:	add    BYTE PTR [eax+0x15],bl
  415348:	std    
  415349:	dec    DWORD PTR [eax-0x7f]
  41534c:	std    
  41534d:	dec    DWORD PTR [eax-0x7f]
  415350:	inc    BYTE PTR [eax]
  415352:	sbb    al,0x81
  415354:	inc    BYTE PTR [eax]
  415356:	sbb    BYTE PTR [ecx-0x7ef30003],al
  41535c:	std    
  41535d:	add    BYTE PTR [edx*1+0xfd],cl
  415364:	sbb    BYTE PTR ds:0x150c0100,dl
  41536a:	add    BYTE PTR [eax],al
  41536c:	or     al,0x81
  41536e:	std    
  41536f:	dec    DWORD PTR [eax]
  415371:	cmp    ebp,0xfd80d800
  415377:	add    al,bl
  415379:	cmp    dh,0xff
  41537c:	enter  0xfe80,0xff
  415380:	enter  0xfd14,0x0
  415384:	fcom   DWORD PTR [edi*8-0x27f3400]
  41538b:	add    ah,cl
  41538d:	adc    al,0xfd
  41538f:	dec    esp
  415391:	adc    al,0x0
  415393:	add    DWORD PTR [esp+edx*1+0x148c0100],ebx
  41539a:	std    
  41539b:	dec    DWORD PTR [eax-0x73ffffec]
  4153a1:	cmp    ch,0xff
  4153a4:	xor    DWORD PTR [edi-0x3],ebp
  4153a7:	inc    BYTE PTR [esi+0x3000016a]
  4153ad:	imul   eax,DWORD PTR [ecx],0xffffffff
  4153b0:	jbe    0x415428
  4153b2:	std    
  4153b3:	(bad)  
  4153b4:	xor    DWORD PTR [edi+0x1],ebp
  4153b7:	add    BYTE PTR [ecx],dh
  4153b9:	imul   eax,DWORD PTR [ecx],0xffffffff
  4153bc:	xor    DWORD PTR [ebx-0x3],ebp
  4153bf:	(bad)  
  4153c0:	xor    DWORD PTR [ebx+0x1],ebp
  4153c3:	add    BYTE PTR [eax],dh
  4153c5:	imul   eax,DWORD PTR [ecx],0x0
  4153c8:	add    BYTE PTR [eax],al
  4153ca:	xor    BYTE PTR [ebx-0x3],ch
  4153cd:	(bad)  
  4153ce:	outs   dx,BYTE PTR ds:[esi]
  4153d0:	add    edi,edi
  4153d2:	xor    DWORD PTR [ebx+0x1],ebp
  4153d5:	jmp    FWORD PTR [esi]
  4153d7:	outs   dx,BYTE PTR ds:[esi]
  4153d8:	std    
  4153d9:	(bad)  
  4153da:	es jp  0x4153de
  4153dd:	add    BYTE PTR [eax],dh
  4153df:	ins    DWORD PTR es:[edi],dx
  4153e0:	std    
  4153e1:	call   DWORD PTR [esi]
  4153e3:	jp     0x4153e6
  4153e5:	add    BYTE PTR [ecx],dh
  4153e7:	jno    0x4153e6
  4153e9:	push   DWORD PTR [ecx]
  4153eb:	jns    0x4153ea
  4153ed:	(bad)  
  4153ee:	(bad)  
  4153ef:	jno    0x4153ee
  4153f1:	(bad)  
  4153f2:	xor    DWORD PTR [ecx+0x1],edi
  4153f5:	(bad)  
  4153f6:	out    dx,al
  4153f7:	ins    DWORD PTR es:[edi],dx
  4153f8:	add    edi,edi
  4153fa:	xor    DWORD PTR [ecx-0x3],edi
  4153fd:	push   DWORD PTR [ecx]
  4153ff:	jno    0x415402
  415401:	add    BYTE PTR [eax],dh
  415403:	jns    0x415402
  415405:	dec    esi
  415407:	jno    0x415406
  415409:	inc    dh
  41540b:	ins    DWORD PTR es:[edi],dx
  41540c:	std    
  41540d:	(bad)  
  41540e:	xor    DWORD PTR [ecx-0x3],esi
  415411:	push   DWORD PTR [esi+0x31fffd6d]
  415417:	ins    DWORD PTR es:[edi],dx
  415418:	std    
  415419:	push   DWORD PTR [ecx]
  41541b:	ins    DWORD PTR es:[edi],dx
  41541c:	add    DWORD PTR [eax],eax
  41541e:	xor    DWORD PTR [ebx+ebp*8],edx
  415421:	add    edx,DWORD PTR [esi-0x70001881]
  415427:	jg     0x415410
  415429:	add    esi,DWORD PTR [ecx]
  41542b:	adc    al,0xe3
  41542d:	add    eax,DWORD PTR [eax]
  41542f:	add    BYTE PTR [esi+0x14],bh
  415432:	pop    es
  415433:	test   BYTE PTR [ecx],ah
  415435:	xchg   esp,eax
  415436:	out    0x83,eax
  415438:	xor    DWORD PTR [edi+eiz*8+0x7143183],edx
  41543f:	test   BYTE PTR [ecx+0x14],al
  415442:	out    0x3,eax
  415444:	inc    ecx
  415445:	adc    al,0xc7
  415447:	add    esi,DWORD PTR [ecx]
  415449:	adc    al,0xc7
  41544b:	add    esp,DWORD PTR [ecx]
  41544d:	xchg   esp,eax
  41544e:	mov    DWORD PTR [ebx+0x3c79431],0x83c79431
  415458:	inc    ecx
  415459:	xchg   esp,eax
  41545a:	out    0x83,eax
  41545c:	inc    ecx
  41545d:	xchg   esp,eax
  41545e:	out    0x3,eax
  415460:	xor    DWORD PTR [edi+eiz*8-0x186bce7d],edx
  415467:	add    esp,DWORD PTR [ecx]
  415469:	adc    al,0x7
  41546b:	add    al,0x31
  41546d:	adc    al,0x7
  41546f:	add    al,0x21
  415471:	xchg   esp,eax
  415472:	out    0x83,eax
  415474:	and    DWORD PTR [edi+eax*1],edx
  415477:	add    al,0x41
  415479:	adc    al,0x7
  41547b:	test   BYTE PTR [ecx],dh
  41547d:	xchg   esp,eax
  41547e:	out    0x3,eax
  415480:	xor    DWORD PTR [edi+eiz*8],edx
  415483:	add    esi,DWORD PTR [ecx]
  415485:	xchg   esp,eax
  415486:	out    0x83,eax
  415488:	xor    DWORD PTR [edi+eax*8],edx
  41548b:	and    DWORD PTR [ecx],0x14
  41548e:	out    0x3,eax
  415490:	and    DWORD PTR [edi+eax*8+0x21000003],edx
  415497:	adc    al,0xc7
  415499:	add    esi,DWORD PTR [ecx]
  41549b:	xchg   esp,eax
  41549c:	add    cl,ch
  41549e:	xor    dl,BYTE PTR [eax+eax*1]
  4154a1:	jmp    0x9417858
  4154a6:	lods   eax,DWORD PTR ds:[esi]
  4154a7:	adc    eax,DWORD PTR [eax]
  4154a9:	jmp    0xe9c17860
  4154ae:	xor    ah,BYTE PTR [eax+eax*4]
  4154b1:	or     DWORD PTR [ebp+0x32e90013],esi
  4154b7:	adc    al,0x0
  4154b9:	or     DWORD PTR [ebp+0x2d090023],esi
  4154bf:	and    al,0x80
  4154c1:	jmp    0xc94178f8
  4154c6:	mov    dl,0x13
  4154c8:	sub    cl,0x32
  4154cb:	and    al,0x80
  4154cd:	jmp    0xe9c17884
  4154d2:	mov    dl,0x13
  4154d4:	add    cl,ch
  4154d6:	xor    ah,BYTE PTR [eax+eax*4]
  4154d9:	jmp    0xc9c16990
  4154de:	xor    dl,BYTE PTR [eax+eax*1]
  4154e1:	leave  
  4154e2:	mov    dl,0x24
  4154e4:	or     BYTE PTR [ecx],0xad
  4154e7:	and    al,0x0
  4154e9:	or     DWORD PTR ds:0xb2e90014,esi
  4154ef:	adc    al,0x0
  4154f1:	jmp    0x9c16928
  4154f6:	lods   eax,DWORD PTR ds:[esi]
  4154f7:	adc    al,0x0
  4154f9:	jmp    0x24f354fe
  4154fe:	sub    cl,0x32
  415501:	and    al,0x0
  415503:	or     DWORD PTR ds:0x32c98014,esi
  415509:	and    al,0x0
  41550b:	leave  
  41550c:	mov    dl,0x14
  41550e:	or     cl,0x32
  415511:	adc    al,0x80
  415513:	leave  
  415514:	xor    ah,BYTE PTR [eax+eax*1]
  415517:	add    al,cl
  415519:	xchg   ecx,eax
  41551a:	adc    BYTE PTR [eax],al
  41551c:	cwde   
  41551d:	adc    DWORD PTR [eax],eax
  41551f:	add    BYTE PTR [eax+0x68800091],bl
  415525:	xchg   ecx,eax
  415526:	add    BYTE PTR [eax],al
  415528:	mov    BYTE PTR [ecx],dl
  41552a:	add    BYTE PTR [eax-0x7fefe7c8],al
  415530:	cmp    BYTE PTR [eax-0x6e777ff0],bl
  415536:	adc    BYTE PTR [eax],al
  415538:	adc    BYTE PTR [ebx],0x0
  41553b:	add    BYTE PTR [eax+0x13],bl
  41553e:	add    cl,BYTE PTR [eax]
  415540:	pop    eax
  415541:	adc    DWORD PTR [eax],eax
  415543:	add    BYTE PTR [eax+0x11],dl
  415546:	add    cl,BYTE PTR [eax]
  415548:	dec    eax
  415549:	adc    eax,DWORD PTR [eax]
  41554b:	or     BYTE PTR [eax+0x11],bl
  41554e:	add    BYTE PTR [eax],al
  415550:	push   eax
  415551:	adc    eax,DWORD PTR [edx]
  415553:	add    BYTE PTR [eax+0x13],cl
  415556:	add    BYTE PTR [eax],cl
  415558:	inc    eax
  415559:	adc    DWORD PTR [edx],eax
  41555b:	add    BYTE PTR [eax],ah
  41555d:	adc    DWORD PTR [eax],eax
  41555f:	or     BYTE PTR [eax],al
  415561:	add    BYTE PTR [eax],dl
  415563:	adc    DWORD PTR [eax],eax
  415565:	or     BYTE PTR [eax],cl
  415567:	adc    DWORD PTR [edx],eax
  415569:	add    BYTE PTR [eax],ah
  41556b:	adc    eax,DWORD PTR [edx]
  41556d:	or     BYTE PTR [eax],al
  41556f:	adc    DWORD PTR [edx],eax
  415571:	add    BYTE PTR [eax],bl
  415573:	adc    DWORD PTR [edx],eax
  415575:	or     BYTE PTR [eax],dl
  415577:	adc    eax,DWORD PTR [eax]
  415579:	add    BYTE PTR [eax],cl
  41557b:	adc    DWORD PTR [eax],eax
  41557d:	or     al,ah
  41557f:	adc    BYTE PTR [eax],al
  415581:	add    al,bl
  415583:	adc    al,BYTE PTR [edx]
  415585:	or     al,cl
  415587:	adc    al,BYTE PTR [eax]
  415589:	add    al,cl
  41558b:	adc    al,BYTE PTR [edx]
  41558d:	add    al,bl
  41558f:	adc    BYTE PTR [edx],al
  415591:	or     BYTE PTR [ecx],dh
  415593:	jae    0x415596
  415595:	add    ch,BYTE PTR [ecx]
  415597:	jae    0x415598
  415599:	add    DWORD PTR [ecx],esi
  41559b:	cmp    edi,0xffffffff
  41559e:	cmp    DWORD PTR [ebx-0x1],ebp
  4155a1:	add    DWORD PTR [ecx],esi
  4155a3:	imul   eax,DWORD PTR [ecx],0x2
  4155a6:	xor    DWORD PTR [ebx-0x1],esi
  4155a9:	jmp    FWORD PTR [ecx]
  4155ab:	add    DWORD PTR [ecx],0x0
  4155ae:	xor    DWORD PTR [ebx+0x6b3901ff],eax
  4155b4:	(bad)  
  4155b5:	push   DWORD PTR [ecx]
  4155b7:	imul   eax,DWORD PTR [ecx],0x0
  4155ba:	sub    DWORD PTR [ebx-0x1],ebp
  4155bd:	add    DWORD PTR [ecx],edi
  4155bf:	imul   eax,DWORD PTR [ecx],0x0
  4155c2:	cmp    DWORD PTR [ebx+0x1],esi
  4155c5:	add    al,BYTE PTR [eax]
  4155c7:	add    BYTE PTR [ecx],dh
  4155c9:	jae    0x4155ca
  4155cb:	push   DWORD PTR [ecx]
  4155cd:	imul   eax,DWORD PTR [ecx],0x2
  4155d0:	xor    DWORD PTR [ebx-0x1],ebp
  4155d3:	add    DWORD PTR [ecx],edi
  4155d5:	imul   edi,edi,0xffffffff
  4155d8:	sub    DWORD PTR [ebx+0x1],ebp
  4155db:	add    BYTE PTR [ecx],dh
  4155dd:	imul   edi,edi,0xffffffff
  4155e0:	xor    DWORD PTR [ebp+0x75310201],eax
  4155e6:	inc    DWORD PTR [ecx]
  4155e8:	sub    DWORD PTR [ebp-0x1],ebp
  4155eb:	jmp    FWORD PTR [ecx]
  4155ed:	test   DWORD PTR [ecx],eax
  4155ef:	add    BYTE PTR [ecx],bh
  4155f1:	ins    DWORD PTR es:[edi],dx
  4155f2:	(bad)  
  4155f3:	push   DWORD PTR [ecx]
  4155f5:	ins    DWORD PTR es:[edi],dx
  4155f6:	add    DWORD PTR [eax],eax
  4155f8:	xor    DWORD PTR [ebp+0x1],esi
  4155fb:	add    ch,BYTE PTR [ecx]
  4155fd:	test   edi,edi
  4155ff:	(bad)  
  415600:	cmp    DWORD PTR [ebp+0x1],ebp
  415603:	add    dh,BYTE PTR [ecx]
  415605:	ins    DWORD PTR es:[edi],dx
  415606:	add    DWORD PTR [eax],eax
  415608:	sub    DWORD PTR [ebp-0x1],esi
  41560b:	add    DWORD PTR [ecx],ebp
  41560d:	adc    al,0xef
  41560f:	add    esi,DWORD PTR [ecx]
  415611:	adc    al,0xef
  415613:	add    DWORD PTR [ebx],esi
  415615:	adc    al,0xe7
  415617:	add    DWORD PTR [ebx],esi
  415619:	adc    al,0xdf
  41561b:	add    esi,DWORD PTR [ecx]
  41561d:	or     al,0xe7
  41561f:	add    esi,DWORD PTR [ebx]
  415621:	or     al,0xef
  415623:	add    DWORD PTR [ecx],esi
  415625:	or     al,0xdf
  415627:	add    DWORD PTR [ecx],esi
  415629:	adc    al,0xe7
  41562b:	add    eax,DWORD PTR [eax]
  41562d:	add    BYTE PTR [ebx],dh
  41562f:	or     al,0xef
  415631:	add    eax,0x3ef1433
  415636:	xor    DWORD PTR [edi+ebx*8],edx
  415639:	add    esi,DWORD PTR [ebx]
  41563b:	or     al,0xe7
  41563d:	add    eax,0xe3e81433
  415642:	out    dx,al
  415643:	adc    ebp,DWORD PTR [eax-0x1c]
  415646:	data16 jnp 0x4156b1
  415649:	in     al,0x5e
  41564b:	jnp    0x4156b4
  41564d:	add    al,0x31
  41564f:	adc    al,0x67
  415651:	in     al,0xce
  415653:	adc    ebp,DWORD PTR [eax+0x4]
  415656:	mov    cl,0x14
  415658:	call   0xe8560760
  41565d:	jecxz  0x415695
  41565f:	jnp    0x415648
  415661:	add    esi,DWORD PTR [ecx]
  415663:	adc    al,0xe7
  415665:	jecxz  0x41560d
  415667:	adc    al,0xe7
  415669:	jecxz  0x415609
  41566b:	adc    al,0x68
  41566d:	in     al,0x96
  41566f:	adc    al,0x68
  415671:	add    al,0x31
  415673:	adc    al,0xe7
  415675:	add    esi,DWORD PTR [ecx]
  415677:	adc    al,0x67
  415679:	add    al,0xb1
  41567b:	adc    ebp,eax
  41567d:	add    esi,DWORD PTR [ecx+0x3103e813]
  415683:	adc    al,0xe7
  415685:	jecxz  0x41566d
  415687:	jp     0x415689
  415689:	jmp    0xe841eac0
  41568e:	sar    dl,cl
  415690:	jmp    FWORD PTR [eax+0x0]
  415693:	add    BYTE PTR ds:0x32e90014,dh
  415699:	xchg   esp,eax
  41569a:	add    al,ch
  41569c:	sar    BYTE PTR [edx-0x3],cl
  41569f:	imul   ecx,ebp,0x3568fd7a
  4156a5:	xchg   esp,eax
  4156a6:	add    al,ch
  4156a8:	xor    dl,BYTE PTR [eax+eax*1]
  4156ab:	imul   edx,DWORD PTR [ebp+0x2d69fd7a],0x92e90094
  4156b5:	jp     0x4156b4
  4156b7:	imul   edx,DWORD PTR [edx-0x6d980006],0x3267fffa
  4156c1:	adc    al,0x0
  4156c3:	imul   esi,DWORD PTR [edx],0x32e80094
  4156c9:	xchg   esp,eax
  4156ca:	add    cl,ch
  4156cc:	push   edx
  4156cd:	cli    
  4156ce:	jmp    DWORD PTR [edi+0x52]
  4156d1:	cli    
  4156d2:	jmp    DWORD PTR [edi+0x32]
  4156d5:	adc    al,0x0
  4156d7:	jmp    0xe9416b0e
  4156dc:	xor    dl,BYTE PTR [eax+eax*1]
  4156df:	jmp    0x69415136
  4156e4:	adc    bh,BYTE PTR [edx-0x3]
  4156e7:	imul   esi,DWORD PTR [edx],0x32680094
  4156ed:	xchg   esp,eax
  4156ee:	add    al,ch
  4156f0:	xor    dl,BYTE PTR [eax+eax*1]
  4156f3:	call   0x6841510a
  4156f8:	add    BYTE PTR [eax],al
  4156fa:	adc    bh,BYTE PTR [edx-0x3]
  4156fd:	push   0x69fd7a12
  415702:	xor    dl,BYTE PTR [eax+eax*1]
  415705:	add    BYTE PTR [ecx+0x75],bl
  415708:	jge    0x41570a
  41570a:	pop    ecx
  41570b:	adc    eax,0x15c90000
  415710:	add    BYTE PTR [eax],al
  415712:	enter  0xfd75,0xff
  415716:	fst    DWORD PTR ds:0x75d90080
  41571c:	std    
  41571d:	dec    DWORD PTR [eax+0x75]
  415720:	jge    0x415722
  415722:	dec    ecx
  415723:	adc    eax,0x75990080
  415728:	std    
  415729:	call   FWORD PTR [eax]
  41572b:	jne    0x41572a
  41572d:	dec    DWORD PTR [eax-0x76ff7feb]
  415733:	jne    0x4157b2
  415735:	add    BYTE PTR [eax],bl
  415737:	adc    BYTE PTR [eax],al
  415739:	add    BYTE PTR [eax-0x77ff7feb],bl
  41573f:	jne    0x41573e
  415741:	dec    DWORD PTR [eax]
  415743:	jo     0x4157c2
  415745:	add    BYTE PTR [eax+0x16],bl
  415748:	add    BYTE PTR [eax],al
  41574a:	pop    eax
  41574b:	push   ss
  41574c:	or     BYTE PTR [edx],al
  41574e:	dec    eax
  41574f:	adc    eax,0x16480208
  415754:	add    BYTE PTR [edx+0x58],al
  415757:	adc    eax,0x16580008
  41575c:	add    BYTE PTR [eax],al
  41575e:	add    BYTE PTR [eax],al
  415760:	dec    eax
  415761:	adc    eax,0x15484000
  415766:	or     BYTE PTR [edx],al
  415768:	sbb    BYTE PTR [esi],dl
  41576a:	or     BYTE PTR [eax+0x18],al
  41576d:	adc    eax,0x16080008
  415772:	add    BYTE PTR [edx],al
  415774:	or     BYTE PTR [esi],dl
  415776:	or     BYTE PTR [eax+0x18],al
  415779:	push   ss
  41577a:	add    BYTE PTR [edx+0x18],al
  41577d:	adc    eax,0x6b314208
  415782:	add    cl,BYTE PTR [eax]
  415784:	xor    DWORD PTR [ebx+0x1],ebp
  415787:	add    BYTE PTR [ecx+0x6b],dh
  41578a:	add    DWORD PTR [eax],eax
  41578c:	xor    ebp,DWORD PTR [ebx+0x1]
  41578f:	or     BYTE PTR [ecx+0x6b],dh
  415792:	add    DWORD PTR [eax],ecx
  415794:	jno    0x415801
  415796:	add    DWORD PTR [eax],eax
  415798:	xor    DWORD PTR [ebx+0x2],ebp
  41579b:	add    BYTE PTR [ecx+0x6b],dh
  41579e:	add    cl,BYTE PTR [eax]
  4157a0:	jae    0x41580d
  4157a2:	add    cl,BYTE PTR [eax]
  4157a4:	jae    0x415811
  4157a6:	add    al,BYTE PTR [eax]
  4157a8:	xor    ebp,DWORD PTR [ebx+0x1]
  4157ab:	or     bl,dh
  4157ad:	push   0x2
  4157af:	add    cl,dh
  4157b1:	push   0x1
  4157b3:	add    BYTE PTR [ecx],dh
  4157b5:	imul   eax,DWORD PTR [ecx],0x0
  4157b8:	repz push 0x2
  4157bb:	or     BYTE PTR [ebx],dh
  4157bd:	imul   eax,DWORD PTR [ecx],0x0
  4157c0:	xor    ebp,DWORD PTR [ebx+0x1]
  4157c3:	add    BYTE PTR [eax],al
  4157c5:	add    bl,dh
  4157c7:	push   0x2
  4157c9:	or     BYTE PTR [ecx],dh
  4157cb:	imul   eax,DWORD PTR [ecx],0x8
  4157ce:	xor    DWORD PTR [ebx+0x2],ebp
  4157d1:	add    bl,dh
  4157d3:	push   0x2
  4157d5:	add    BYTE PTR [ecx],dh
  4157d7:	imul   eax,DWORD PTR [ecx],0x0
  4157da:	xor    ebp,DWORD PTR [ebx+0x1]
  4157dd:	add    cl,dh
  4157df:	push   0x1
  4157e1:	or     BYTE PTR [ebx],dh
  4157e3:	imul   eax,DWORD PTR [edx],0x0
  4157e6:	repz push 0x2
  4157e9:	or     BYTE PTR [ecx+0x6d],dh
  4157ec:	add    al,BYTE PTR [eax]
  4157ee:	xor    ebp,DWORD PTR [ebp+0x1]
  4157f1:	add    BYTE PTR [ecx+0x6d],dh
  4157f4:	add    DWORD PTR [eax],ecx
  4157f6:	jae    0x415865
  4157f8:	add    cl,BYTE PTR [eax]
  4157fa:	xor    edx,DWORD PTR [edi+eiz*8]
  4157fd:	add    bh,BYTE PTR [ecx]
  4157ff:	aam    0xe6
  415801:	add    dh,BYTE PTR [ecx]
  415803:	adc    al,0xe7
  415805:	add    esi,DWORD PTR [ecx]
  415807:	adc    ah,bh
  415809:	add    edi,DWORD PTR [ecx]
  41580b:	shl    dh,cl
  41580d:	add    bh,BYTE PTR [ecx]
  41580f:	shl    dh,cl
  415811:	add    ch,BYTE PTR [ecx]
  415813:	adc    al,0xe7
  415815:	add    esi,DWORD PTR [ecx]
  415817:	shl    dh,cl
  415819:	add    bh,BYTE PTR [ecx]
  41581b:	shl    dh,cl
  41581d:	add    edi,DWORD PTR [ecx]
  41581f:	adc    ah,bh
  415821:	add    esi,DWORD PTR [ecx]
  415823:	adc    al,0xe7
  415825:	add    ebp,DWORD PTR [ecx]
  415827:	aam    0xe6
  415829:	add    eax,DWORD PTR [eax]
  41582b:	add    BYTE PTR [ecx],dh
  41582d:	shl    dh,cl
  41582f:	add    bh,BYTE PTR [ecx]
  415831:	adc    al,0xe7
  415833:	add    dh,BYTE PTR [ecx]
  415835:	adc    ah,bh
  415837:	add    dh,BYTE PTR [ecx]
  415839:	aam    0xe6
  41583b:	add    edi,DWORD PTR [ecx]
  41583d:	adc    al,0xe7
  41583f:	add    esi,DWORD PTR [ecx]
  415841:	adc    al,0xe7
  415843:	add    ebp,DWORD PTR [ecx]
  415845:	aam    0xe6
  415847:	add    al,0x29
  415849:	adc    ah,bh
  41584b:	add    al,0x31
  41584d:	aam    0xd6
  41584f:	add    esi,DWORD PTR [ecx]
  415851:	xor    al,0xe7
  415853:	add    esi,ecx
  415855:	xor    esp,edi
  415857:	inc    ebx
  415858:	xor    DWORD PTR [edi+edx*8],edx
  41585b:	inc    ebx
  41585c:	icebp  
  41585d:	xor    esp,edi
  41585f:	add    esi,ecx
  415861:	xor    esi,edi
  415863:	add    esi,DWORD PTR [ecx]
  415865:	adc    al,0xf7
  415867:	inc    ebx
  415868:	icebp  
  415869:	xor    esp,edi
  41586b:	add    esi,DWORD PTR [ecx+0x14]
  41586e:	out    0x43,eax
  415870:	xor    DWORD PTR [edi+edx*8],esi
  415873:	inc    ebx
  415874:	jno    0x41588a
  415876:	add    cl,ch
  415878:	xor    dl,ah
  41587a:	(bad)  
  41587b:	fdiv   DWORD PTR [edx]
  41587d:	adc    al,0x20
  41587f:	stc    
  415880:	xor    dl,ah
  415882:	(bad)  
  415883:	call   0xe9616cfa
  415888:	xor    dl,BYTE PTR [eax+eiz*1]
  41588b:	stc    
  41588c:	jb     0x4158a2
  41588e:	add    cl,ch
  415890:	add    BYTE PTR [eax],al
  415892:	xor    dl,BYTE PTR [eax+eax*1]
  415895:	fnstenv [edx]
  415897:	aam    0xff
  415899:	fdiv   DWORD PTR [edx+0x14]
  41589c:	and    cl,ch
  41589e:	jb     0x4158b4
  4158a0:	add    cl,ch
  4158a2:	jb     0x415878
  4158a4:	(bad)  
  4158a5:	clc    
  4158a6:	jb     0x4158bc
  4158a8:	and    cl,bh
  4158aa:	xor    dl,BYTE PTR [eax+eax*1]
  4158ad:	stc    
  4158ae:	xor    dl,ah
  4158b0:	pop    ds
  4158b1:	fnstenv [edx]
  4158b3:	aam    0x1f
  4158b5:	jmp    0xd9416cec
  4158ba:	repnz sar edi,cl
  4158bd:	call   0xf9612cb4
  4158c2:	repnz adc eax,DWORD PTR [eax]
  4158c5:	jmp    0xe9412cbc
  4158ca:	repnz rcr DWORD PTR [edi],cl
  4158cd:	jmp    0xe9616d04
  4158d2:	repnz adc esp,DWORD PTR [eax]
  4158d5:	fnstenv [edx]
  4158d7:	adc    al,0x0
  4158d9:	fnstenv [edx]
  4158db:	aam    0x1f
  4158dd:	jmp    0xf9412cd4
  4158e2:	repnz rcr DWORD PTR [edi],cl
  4158e5:	jmp    0xf9412d1c
  4158ea:	repnz adc eax,DWORD PTR [eax]
  4158ed:	stc    
  4158ee:	xor    dl,BYTE PTR [eax+eiz*1]
  4158f1:	add    BYTE PTR [eax],bl
  4158f3:	adc    al,BYTE PTR [eax+0x0]
  4158f6:	add    BYTE PTR [eax],al
  4158f8:	or     dl,dl
  4158fa:	call   FWORD PTR [edi]
  4158fc:	or     BYTE PTR [edx],dl
  4158fe:	add    BYTE PTR [eax],ah
  415900:	call   0x94158d6
  415905:	adc    al,BYTE PTR [eax]
  415907:	and    al,bh
  415909:	sar    DWORD PTR [edi],1
  41590b:	and    BYTE PTR [eax],cl
  41590d:	sar    BYTE PTR [edi],cl
  41590f:	add    al,bl
  415911:	adc    DWORD PTR [eax+0x20],eax
  415914:	or     dl,dl
  415916:	aas    
  415917:	add    al,cl
  415919:	sar    DWORD PTR [edi],1
  41591b:	and    al,cl
  41591d:	adc    DWORD PTR [eax],eax
  41591f:	add    al,ch
  415921:	adc    DWORD PTR [eax+0x20],eax
  415924:	enter  0x11,0x0
  415928:	enter  0xffd1,0xff
  41592c:	enter  0x4011,0x20
  415930:	test   al,0xd1
  415932:	aas    
  415933:	add    BYTE PTR [eax+0x78ffffd1],bl
  415939:	adc    DWORD PTR [eax+0x0],eax
  41593c:	js     0x41590f
  41593e:	call   FWORD PTR [edi]
  415940:	cwde   
  415941:	adc    DWORD PTR [eax],eax
  415943:	add    BYTE PTR [eax-0x77dfc02f],bl
  415949:	adc    DWORD PTR [eax],eax
  41594b:	and    BYTE PTR [eax+0x11],bh
  41594e:	inc    eax
  41594f:	add    BYTE PTR [eax-0x2f],ch
  415952:	call   FWORD PTR [edi]
  415954:	pop    eax
  415955:	adc    DWORD PTR [eax],esp
  415957:	add    BYTE PTR [edx+0x11],cl
  41595a:	and    BYTE PTR [eax+eax*1],al
  41595d:	add    BYTE PTR [edx+0x79],cl
  415960:	std    
  415961:	add    ebx,DWORD PTR [eax+0x11]
  415964:	add    BYTE PTR [eax],al
  415966:	pop    eax
  415967:	jns    0x415966
  415969:	dec    DWORD PTR [edx+0x79]
  41596c:	std    
  41596d:	add    esi,DWORD PTR [ecx]
  41596f:	imul   edi,ecx,0xf96b311f
  415975:	pop    ds
  415976:	sub    eax,0x351ff969
  41597b:	imul   eax,DWORD PTR [ecx],0x20
  41597e:	xor    DWORD PTR [ebx+0x1],ebp
  415981:	add    BYTE PTR [ecx],dh
  415983:	imul   eax,DWORD PTR [ecx],0x1692d00
  415989:	add    BYTE PTR [ecx],dh
  41598b:	imul   eax,DWORD PTR [ecx],0x0
  41598e:	sub    eax,0x35200169
  415993:	imul   edi,ecx,0xf96ae6ff
  415999:	push   DWORD PTR [edx]
  41599b:	imul   edi,ecx,0x169311f
  4159a1:	and    BYTE PTR [ecx],dh
  4159a3:	imul   edi,ecx,0xffffffff
  4159a6:	xor    ch,BYTE PTR [ecx+0x1]
  4159a9:	add    BYTE PTR ds:0x2d20016b,dh
  4159af:	imul   edi,ecx,0x1f
  4159b2:	xor    eax,0x31200169
  4159b7:	imul   eax,DWORD PTR [ecx],0x20
  4159ba:	xor    eax,0x96fff96b
  4159bf:	push   0xfff9
  4159c4:	mov    gs,WORD PTR [eax-0x7]
  4159c7:	pop    ds
  4159c8:	sub    eax,0x311ff96b
  4159cd:	imul   eax,DWORD PTR [ecx],0x16b3100
  4159d3:	add    BYTE PTR ds:0x311ff96b,dh
  4159d9:	imul   eax,DWORD PTR [ecx],0x0
  4159dc:	xor    eax,0x311ff96b
  4159e1:	imul   eax,DWORD PTR [ecx],0x20
  4159e4:	xor    DWORD PTR [ecx-0x7],ebp
  4159e7:	push   DWORD PTR [edx]
  4159e9:	adc    al,0xe9
  4159eb:	sti    
  4159ec:	ds adc cl,ch
  4159ef:	add    edx,DWORD PTR [ecx]
  4159f1:	adc    cl,ch
  4159f3:	add    edx,DWORD PTR [ecx+0x18]
  4159f6:	jmp    0xe9558afe
  4159fb:	add    edx,DWORD PTR [ecx+0x14]
  4159fe:	out    0x3,eax
  415a00:	xor    DWORD PTR [eax],ebx
  415a02:	out    0xfb,eax
  415a04:	push   cs
  415a05:	sbb    bh,ah
  415a07:	add    edx,DWORD PTR [ecx+0x14]
  415a0a:	out    0xfb,eax
  415a0c:	push   ds
  415a0d:	sbb    cl,ch
  415a0f:	sti    
  415a10:	div    BYTE PTR [ebx-0x17]
  415a13:	sti    
  415a14:	dec    esi
  415a15:	adc    al,0xe7
  415a17:	sti    
  415a18:	inc    esi
  415a19:	sbb    cl,ch
  415a1b:	sti    
  415a1c:	fidiv  WORD PTR [ebx-0x17]
  415a1f:	add    esi,DWORD PTR [ecx]
  415a21:	sbb    cl,ch
  415a23:	sti    
  415a24:	cs sbb bh,ah
  415a27:	add    eax,DWORD PTR [eax]
  415a29:	add    BYTE PTR [ecx],dl
  415a2b:	sbb    bh,ah
  415a2d:	sti    
  415a2e:	push   ds
  415a2f:	adc    al,0xe7
  415a31:	add    esi,DWORD PTR [ecx]
  415a33:	adc    al,0xe9
  415a35:	add    esi,DWORD PTR [ecx]
  415a37:	adc    al,0xe9
  415a39:	sti    
  415a3a:	inc    esi
  415a3b:	sbb    bh,ah
  415a3d:	add    esi,DWORD PTR [ecx]
  415a3f:	adc    al,0xe9
  415a41:	sti    
  415a42:	ss adc al,0xe7
  415a45:	add    edx,DWORD PTR [ecx+0x18]
  415a48:	out    0xfb,eax
  415a4a:	xchg   BYTE PTR [ebx-0x17],dh
  415a4d:	add    esi,DWORD PTR [ecx]
  415a4f:	sbb    bh,ah
  415a51:	sti    
  415a52:	jbe    0x415a6b
  415a54:	out    0xfb,eax
  415a56:	outs   dx,BYTE PTR ds:[esi]
  415a57:	jae    0x415a42
  415a59:	add    edx,DWORD PTR [ecx]
  415a5b:	adc    al,0x27
  415a5d:	hlt    
  415a5e:	pop    esi
  415a5f:	and    esp,edi
  415a61:	repz push esi
  415a63:	jae    0x415a65
  415a65:	jmp    0x2941729c
  415a6a:	cmp    eax,0x32e91017
  415a6f:	adc    al,0x10
  415a71:	sub    DWORD PTR ds:0x35290d73,edi
  415a77:	adc    al,0x0
  415a79:	jmp    0x29516eb0
  415a7e:	xor    eax,0x32e90018
  415a83:	sbb    BYTE PTR [eax],dl
  415a85:	sub    DWORD PTR ds:0x2e91017,eax
  415a8b:	pop    ss
  415a8c:	add    cl,ch
  415a8e:	add    BYTE PTR [eax],al
  415a90:	add    dl,BYTE PTR [edi]
  415a92:	adc    BYTE PTR [ecx-0x16ffe8fe],ch
  415a98:	loop   0x415b0c
  415a9a:	std    
  415a9b:	test   eax,0xe9001432
  415aa0:	xor    bl,BYTE PTR [eax]
  415aa2:	adc    BYTE PTR [ecx-0x16efebce],ch
  415aa8:	ret    0xd72
  415aab:	test   eax,0xe9fd72c2
  415ab0:	ret    0x16
  415ab3:	test   eax,0xa9001832
  415ab8:	xor    bl,BYTE PTR [eax]
  415aba:	adc    cl,ch
  415abc:	mov    ds:0xa2a91016,al
  415ac1:	jb     0x415ac0
  415ac3:	jmp    0xe9416efa
  415ac8:	xor    dl,BYTE PTR [eax+eax*1]
  415acb:	test   eax,0x29101832
  415ad0:	xor    eax,0x82e91014
  415ad5:	jb     0x415ae4
  415ad7:	sub    DWORD PTR [ebp+0x16],esp
  415ada:	add    cl,ch
  415adc:	xor    bl,BYTE PTR [eax]
  415ade:	add    BYTE PTR [eax],al
  415ae0:	or     BYTE PTR [eax+0x1],ch
  415ae3:	add    BYTE PTR [eax+0x16],cl
  415ae6:	add    al,0x0
  415ae8:	pop    eax
  415ae9:	add    WORD PTR [eax],dx
  415aec:	pop    eax
  415aed:	data16 std 
  415aef:	dec    DWORD PTR [eax]
  415af1:	sbb    BYTE PTR [eax],al
  415af3:	add    BYTE PTR [eax],al
  415af5:	add    BYTE PTR [eax],cl
  415af7:	sbb    BYTE PTR [eax+edx*1],al
  415afa:	sbb    BYTE PTR [esi-0x3],ah
  415afd:	call   FWORD PTR [eax+0x68]
  415b00:	add    DWORD PTR [eax],eax
  415b02:	or     BYTE PTR [esi-0x3],ah
  415b05:	cmovs  ebx,DWORD PTR [eax]
  415b08:	add    BYTE PTR [eax],al
  415b0a:	pop    eax
  415b0b:	sbb    BYTE PTR [eax],al
  415b0d:	adc    BYTE PTR [eax],bl
  415b0f:	push   ss
  415b10:	add    al,0x10
  415b12:	enter  0x415,0x10
  415b16:	or     BYTE PTR [esi],dl
  415b18:	add    BYTE PTR [eax],dl
  415b1a:	fcom   DWORD PTR ds:0x65980004
  415b20:	std    
  415b21:	bswap  eax
  415b23:	adc    eax,0x65880000
  415b28:	add    DWORD PTR [eax],edx
  415b2a:	cwde   
  415b2b:	adc    eax,0x15980004
  415b30:	add    BYTE PTR [eax],dl
  415b32:	enter  0x415,0x10
  415b36:	enter  0xfd65,0xf
  415b3a:	fsub   DWORD PTR [ebp-0x3]
  415b3d:	sets   BYTE PTR ds:0x65c80000
  415b44:	add    DWORD PTR [eax],edx
  415b46:	mov    BYTE PTR [ebp+0x1],ah
  415b49:	add    BYTE PTR [eax-0x27fffe9b],bl
  415b4f:	gs std 
  415b51:	dec    DWORD PTR [eax+0x68]
  415b54:	std    
  415b55:	dec    DWORD PTR [eax+0x18]
  415b58:	add    al,0x0
  415b5a:	add    BYTE PTR [eax],al
  415b5c:	xor    DWORD PTR [ebx+0x1],edi
  415b5f:	add    BYTE PTR [ecx+0x7b],al
  415b62:	icebp  
  415b63:	add    eax,DWORD PTR [ecx-0x55]
  415b66:	das    
  415b67:	call   DWORD PTR [esi+0x7b]
  415b6a:	add    DWORD PTR [eax],eax
  415b6c:	xor    DWORD PTR [ebx+0x1],edi
  415b6f:	add    BYTE PTR [ecx],dh
  415b71:	fwait
  415b72:	sub    bh,bh
  415b74:	ds aaa 
  415b76:	sub    edi,edi
  415b78:	ss mov bh,0x2c
  415b7b:	jmp    FWORD PTR [esi]
  415b7d:	jnp    0x415b80
  415b7f:	add    BYTE PTR [ecx],dh
  415b81:	jnp    0x415b84
  415b83:	add    BYTE PTR [ecx],dh
  415b85:	pop    ebp
  415b86:	sub    bh,bh
  415b88:	push   ss
  415b89:	or     ebp,DWORD PTR [esi]
  415b8b:	dec    DWORD PTR [esi]
  415b8d:	fwait
  415b8e:	sub    al,0xff
  415b90:	push   es
  415b91:	jnp    0x415b94
  415b93:	add    BYTE PTR [ecx],dh
  415b95:	jnp    0x415b98
  415b97:	add    BYTE PTR [ecx],dh
  415b99:	xor    esp,DWORD PTR [edi]
  415b9b:	(bad)  
  415b9c:	out    dx,al
  415b9d:	push   esi
  415b9e:	sub    edi,edi
  415ba0:	out    0xd2,al
  415ba2:	sub    edi,edi
  415ba4:	fidivr WORD PTR [edx+0x1]
  415ba7:	add    BYTE PTR [ecx],dh
  415ba9:	jnp    0x415bac
  415bab:	add    BYTE PTR [ecx],dh
  415bad:	xlat   BYTE PTR ds:[ebx]
  415bae:	es inc esi
  415bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb2:	sub    edi,edi
  415bb4:	mov    esi,0xb6ff2a6e
  415bb9:	jp     0x415bbc
  415bbb:	add    BYTE PTR [ecx],dh
  415bbd:	jnp    0x415bc0
  415bbf:	add    BYTE PTR [eax],al
  415bc1:	add    BYTE PTR [ecx],dh
  415bc3:	jne    0x415be6
  415bc5:	call   FWORD PTR [esi-0x6900d226]
  415bcb:	dec    esi
  415bcc:	sub    bh,bh
  415bce:	mov    ?,WORD PTR [edx+0x1]
  415bd1:	add    BYTE PTR [ecx],dh
  415bd3:	jnp    0x415bd6
  415bd5:	add    BYTE PTR [ecx],dh
  415bd7:	adc    al,0x27
  415bd9:	and    al,0x76
  415bdb:	jo     0x415b6c
  415bdd:	sub    eax,0x2aff706e
  415be2:	data16 jo 0x415bcc
  415be5:	add    esi,DWORD PTR [ecx]
  415be7:	adc    al,0xe7
  415be9:	add    esi,DWORD PTR [ecx]
  415beb:	adc    al,0x59
  415bed:	and    ecx,DWORD PTR [esi+0x70]
  415bf0:	jnp    0x415c1f
  415bf2:	inc    esi
  415bf3:	jo     0x415c18
  415bf5:	sub    edi,DWORD PTR [esi]
  415bf7:	jo     0x415be0
  415bf9:	add    esi,DWORD PTR [ecx]
  415bfb:	adc    al,0xe7
  415bfd:	add    esi,DWORD PTR [ecx]
  415bff:	adc    al,0xf9
  415c01:	and    ah,BYTE PTR [esi]
  415c03:	jo     0x415bbc
  415c05:	sub    eax,0x2af7701e
  415c0a:	push   ss
  415c0b:	jo     0x415bf4
  415c0d:	add    esi,DWORD PTR [ecx]
  415c0f:	adc    al,0xe7
  415c11:	add    esi,DWORD PTR [ecx]
  415c13:	adc    al,0x25
  415c15:	and    edi,esi
  415c17:	outs   dx,DWORD PTR ds:[esi]
  415c18:	arpl   WORD PTR ds:0x3e76ff6,bp
  415c1e:	xor    DWORD PTR [edi+eiz*8],edx
  415c21:	add    esi,DWORD PTR [ecx]
  415c23:	adc    al,0xe7
  415c25:	add    eax,DWORD PTR [eax]
  415c27:	add    BYTE PTR [ecx],dh
  415c29:	adc    al,0xe7
  415c2b:	add    esi,DWORD PTR [ecx]
  415c2d:	adc    al,0xe7
  415c2f:	add    esi,DWORD PTR [ecx]
  415c31:	adc    al,0xdf
  415c33:	sub    al,0xc6
  415c35:	outs   dx,DWORD PTR ds:[esi]
  415c36:	aad    0x2c
  415c38:	mov    esi,0xb62cc96f
  415c3d:	outs   dx,DWORD PTR ds:[esi]
  415c3e:	xlat   BYTE PTR ds:[ebx]
  415c3f:	sub    al,0xae
  415c41:	outs   dx,DWORD PTR ds:[esi]
  415c42:	shr    DWORD PTR [esi+eiz*4],cl
  415c45:	outs   dx,DWORD PTR ds:[esi]
  415c46:	lahf   
  415c47:	sub    al,0x9e
  415c49:	outs   dx,DWORD PTR ds:[esi]
  415c4a:	popf   
  415c4b:	sub    al,0x96
  415c4d:	outs   dx,DWORD PTR ds:[esi]
  415c4e:	test   DWORD PTR [esi+ecx*4],ebp
  415c51:	outs   dx,DWORD PTR ds:[esi]
  415c52:	add    BYTE PTR [ebx+0x55],bh
  415c55:	outs   dx,DWORD PTR ds:[esi]
  415c56:	std    
  415c57:	imul   ecx,DWORD PTR [ebp+0x6f],0x6f4a75fd
  415c5e:	std    
  415c5f:	sbb    DWORD PTR [edx],0x1a87fd6f
  415c65:	outs   dx,DWORD PTR ds:[esi]
  415c66:	std    
  415c67:	mov    ds:0xa1fd6f0a,eax
  415c6c:	or     ch,BYTE PTR [edi-0x3]
  415c6f:	iret   
  415c70:	sbb    ch,BYTE PTR [edi-0x3]
  415c73:	mov    bh,0x1a
  415c75:	outs   dx,DWORD PTR ds:[esi]
  415c76:	std    
  415c77:	fst    DWORD PTR [esi]
  415c79:	outs   dx,DWORD PTR ds:[esi]
  415c7a:	std    
  415c7b:	leave  
  415c7c:	push   cs
  415c7d:	outs   dx,DWORD PTR ds:[esi]
  415c7e:	std    
  415c7f:	fist   DWORD PTR [esi+0x6f]
  415c82:	std    
  415c83:	sub    ebx,DWORD PTR [ecx+0x6f]
  415c86:	std    
  415c87:	aaa    
  415c88:	dec    ecx
  415c89:	outs   dx,DWORD PTR ds:[esi]
  415c8a:	std    
  415c8b:	or     eax,0x6f490000
  415c90:	std    
  415c91:	add    DWORD PTR [ecx+0x6f],ebx
  415c94:	std    
  415c95:	addr16 pop ecx
  415c97:	outs   dx,DWORD PTR ds:[esi]
  415c98:	std    
  415c99:	dec    ecx
  415c9a:	dec    ecx
  415c9b:	outs   dx,DWORD PTR ds:[esi]
  415c9c:	std    
  415c9d:	xchg   ebp,eax
  415c9e:	dec    ecx
  415c9f:	outs   dx,DWORD PTR ds:[esi]
  415ca0:	std    
  415ca1:	popf   
  415ca2:	sbb    DWORD PTR [edi-0x3],ebp
  415ca5:	and    DWORD PTR [ecx],ebx
  415ca7:	outs   dx,DWORD PTR ds:[esi]
  415ca8:	std    
  415ca9:	sub    eax,0x55fd6f09
  415cae:	or     DWORD PTR [edi-0x3],ebp
  415cb1:	aas    
  415cb2:	sbb    DWORD PTR [edi-0x3],ebp
  415cb5:	out    0x19,eax
  415cb7:	outs   dx,DWORD PTR ds:[esi]
  415cb8:	std    
  415cb9:	pop    es
  415cba:	or     BYTE PTR [edi-0x3],ch
  415cbd:	stos   DWORD PTR es:[edi],eax
  415cbe:	or     DWORD PTR [edi-0x3],ebp
  415cc1:	ret    
  415cc2:	pop    ecx
  415cc3:	outs   dx,DWORD PTR ds:[esi]
  415cc4:	std    
  415cc5:	(bad)  
  415cc6:	pop    ecx
  415cc7:	outs   dx,DWORD PTR ds:[esi]
  415cc8:	std    
  415cc9:	popa   
  415cca:	dec    eax
  415ccb:	outs   dx,DWORD PTR ds:[esi]
  415ccc:	std    
  415ccd:	add    al,ch
  415ccf:	cmp    al,0xfd
  415cd1:	push   eax
  415cd3:	cmp    al,0xfd
  415cd5:	call   DWORD PTR [ebp+edi*1-0x3]
  415cd9:	jmp    DWORD PTR [edx]
  415cdb:	cmp    eax,0x3b62fffd
  415ce0:	std    
  415ce1:	dec    DWORD PTR [edx+0x50fffd3b]
  415ce7:	cmp    ch,bh
  415ce9:	jmp    DWORD PTR [eax+0x38]
  415cec:	std    
  415ced:	call   DWORD PTR [eax+edi*1-0x3]
  415cf1:	inc    DWORD PTR [eax]
  415cf3:	add    BYTE PTR [esi],dl
  415cf5:	ss std 
  415cf7:	jmp    DWORD PTR [esi+esi*1]
  415cfa:	std    
  415cfb:	push   esp
  415cfd:	xor    eax,0x3614fffd
  415d02:	std    
  415d03:	call   FWORD PTR [edx+0x18fffd37]
  415d09:	adc    al,BYTE PTR [eax]
  415d0b:	add    BYTE PTR [esi+0x37],bl
  415d0e:	std    
  415d0f:	inc    esi
  415d11:	aaa    
  415d12:	std    
  415d13:	jmp    FWORD PTR [esi-0x510002c9]
  415d19:	aaa    
  415d1a:	std    
  415d1b:	dec    DWORD PTR [esi-0x50002c9]
  415d21:	ss std 
  415d23:	(bad)  
  415d24:	fcom   DWORD PTR [ecx]
  415d26:	add    BYTE PTR [eax],al
  415d28:	sub    al,0x35
  415d2a:	std    
  415d2b:	dec    eax
  415d2d:	adc    DWORD PTR [eax],eax
  415d2f:	add    BYTE PTR [esi+esi*1+0x36a4fffd],al
  415d36:	std    
  415d37:	push   eax
  415d39:	ss std 
  415d3b:	inc    DWORD PTR [esi+0x44fffd36]
  415d41:	ss std 
  415d43:	jmp    DWORD PTR [esi+esi*1]
  415d46:	std    
  415d47:	push   DWORD PTR [ecx]
  415d49:	fbld   TBYTE PTR ds:0x25c59eff
  415d4f:	call   DWORD PTR [esi-0x7100d9c3]
  415d55:	mov    tr7,edi
  415d58:	add    BYTE PTR [eax],al
  415d5a:	xchg   BYTE PTR [ebx+0x1],bh
  415d5d:	add    BYTE PTR [ecx],dh
  415d5f:	popa   
  415d60:	and    edi,edi
  415d62:	jbe    0x415ddf
  415d64:	add    DWORD PTR [eax],eax
  415d66:	xor    DWORD PTR [ebp+0x21],esp
  415d69:	jmp    DWORD PTR [esi+0x11]
  415d6c:	and    al,0xff
  415d6e:	pop    esi
  415d6f:	jnp    0x415d72
  415d71:	add    BYTE PTR [ecx],dh
  415d73:	daa    
  415d74:	and    al,0xff
  415d76:	dec    esi
  415d77:	xor    esp,DWORD PTR [edi+edi*8]
  415d7a:	inc    esi
  415d7b:	fbld   TBYTE PTR [ebx]
  415d7d:	(bad)  
  415d7e:	sub    esp,DWORD PTR ds:[edi+edi*8]
  415d82:	xor    DWORD PTR ss:[edi+edi*8],esp
  415d86:	cs cmc 
  415d88:	and    edi,edi
  415d8a:	es jnp 0x415d8e
  415d8d:	add    BYTE PTR [ecx],dh
  415d8f:	std    
  415d90:	and    edi,edi
  415d92:	push   ss
  415d93:	shl    DWORD PTR [ebx],0xff
  415d96:	push   cs
  415d97:	shl    DWORD PTR [ebx],1
  415d99:	inc    DWORD PTR [esi]
  415d9b:	mov    edi,0x8cfeff24
  415da0:	and    al,0xff
  415da2:	not    dh
  415da4:	and    edi,edi
  415da6:	out    dx,al
  415da7:	(bad)  
  415da8:	and    edi,edi
  415daa:	out    0xd4,al
  415dac:	and    edi,edi
  415dae:	faddp  st(4),st
  415db0:	and    edi,edi
  415db2:	(bad)  
  415db3:	jle    0x415dd7
  415db5:	dec    esi
  415db7:	jp     0x415dba
  415db9:	add    BYTE PTR [ecx],dh
  415dbb:	inc    ebp
  415dbc:	and    bh,bh
  415dbe:	add    BYTE PTR [eax],al
  415dc0:	mov    esi,0xb6ff2268
  415dc5:	adc    esp,edi
  415dc7:	add    esi,DWORD PTR [ecx]
  415dc9:	adc    al,0xef
  415dcb:	sub    BYTE PTR [esi-0x61d70294],ah
  415dd1:	ins    BYTE PTR es:[edi],dx
  415dd2:	leave  
  415dd3:	sub    BYTE PTR [esi-0x71d74894],dl
  415dd9:	ins    BYTE PTR es:[edi],dx
  415dda:	mov    ebx,0x9f6c8628
  415ddf:	sub    BYTE PTR [esi+0x6c],bh
  415de2:	xchg   ebp,eax
  415de3:	sub    BYTE PTR [esi+0x6c],dh
  415de6:	dec    ebp
  415de7:	sub    DWORD PTR [esi+0x6c],ebp
  415dea:	pop    ecx
  415deb:	sub    DWORD PTR [esi+0x6c],esp
  415dee:	sub    BYTE PTR [bp+0x6c],bl
  415df2:	pop    ebx
  415df3:	sub    BYTE PTR [esi+0x6c],dl
  415df6:	pop    edi
  415df7:	sub    BYTE PTR [esi+0x6c],cl
  415dfa:	lea    ebp,[eax]
  415dfc:	inc    esi
  415dfd:	ins    BYTE PTR es:[edi],dx
  415dfe:	mov    eax,ds:0x8f6c3e28
  415e03:	sub    BYTE PTR [esi],dh
  415e05:	ins    BYTE PTR es:[edi],dx
  415e06:	xchg   ebp,eax
  415e07:	sub    BYTE PTR [esi],ch
  415e09:	ins    BYTE PTR es:[edi],dx
  415e0a:	popf   
  415e0b:	sub    BYTE PTR [esi],ah
  415e0d:	ins    BYTE PTR es:[edi],dx
  415e0e:	mul    DWORD PTR [edi]
  415e10:	push   ds
  415e11:	ins    BYTE PTR es:[edi],dx
  415e12:	(bad)  
  415e13:	daa    
  415e14:	push   ss
  415e15:	ins    BYTE PTR es:[edi],dx
  415e16:	mov    ecx,0x296c0e27
  415e1b:	sub    BYTE PTR [esi],al
  415e1d:	ins    BYTE PTR es:[edi],dx
  415e1e:	sbb    eax,0x36bfe28
  415e23:	sub    BYTE PTR [eax],al
  415e25:	add    dh,dh
  415e27:	imul   ebx,edi,0x27
  415e2a:	out    dx,al
  415e2b:	imul   ebp,DWORD PTR [ebp+0x27],0xffffffe6
  415e2f:	imul   eax,DWORD PTR [edi+0x7b6bde27],0x27
  415e36:	(bad)  
  415e37:	imul   eax,DWORD PTR [ebx+0x2f6bce27],0x27
  415e3e:	(bad)  
  415e3f:	imul   eax,DWORD PTR [eax],0x15
  415e42:	push   ss
  415e43:	imul   edi,ebp,0x3d
  415e46:	push   cs
  415e47:	imul   edi,ebp,0x27
  415e4a:	push   esi
  415e4b:	imul   edi,ebp,0xffffffef
  415e4e:	dec    edi
  415e4f:	imul   edi,ebp,0xffffffcf
  415e52:	push   edi
  415e53:	imul   edi,ebp,0xffffffab
  415e56:	dec    edi
  415e57:	imul   edi,ebp,0xffffffa3
  415e5a:	push   edi
  415e5b:	imul   edi,ebp,0xffffff87
  415e5e:	dec    edi
  415e5f:	imul   edi,ebp,0x61
  415e62:	push   edi
  415e63:	imul   edi,ebp,0x49
  415e66:	dec    edi
  415e67:	imul   edi,ebp,0xffffffa1
  415e6a:	push   eax
  415e6b:	push   0xfffffffd
  415e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6e:	push   eax
  415e6f:	push   0xfffffffd
  415e71:	mov    bl,0x50
  415e73:	push   0xfffffffd
  415e75:	ret    
  415e76:	push   eax
  415e77:	push   0xfffffffd
  415e79:	mov    ebx,0xf1fd6a50
  415e7e:	push   eax
  415e7f:	push   0xfffffffd
  415e81:	rcl    DWORD PTR [eax+0x6a],1
  415e84:	std    
  415e85:	cmc    
  415e86:	push   eax
  415e87:	push   0xfffffffd
  415e89:	das    
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	adc    ebp,DWORD PTR [edx-0x3]
  415e8f:	xor    eax,0xdfd6a13
  415e94:	adc    ebp,DWORD PTR [edx-0x3]
  415e97:	adc    eax,0x6bfd6a13
  415e9c:	adc    ebp,DWORD PTR [edx-0x3]
  415e9f:	jmp    0x474172d6
  415ea4:	adc    ebp,DWORD PTR [edx-0x3]
  415ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea8:	adc    ebp,DWORD PTR [edx-0x3]
  415eab:	inc    edi
  415eac:	shr    DWORD PTR [ecx-0x3],cl
  415eaf:	dec    edi
  415eb0:	shr    DWORD PTR [ecx-0x3],cl
  415eb3:	push   edi
  415eb4:	shr    DWORD PTR [ecx-0x3],cl
  415eb7:	sti    
  415eb8:	shr    DWORD PTR [ecx-0x3],cl
  415ebb:	add    al,bl
  415ebd:	push   ss
  415ebe:	add    BYTE PTR [eax],al
  415ec0:	xor    al,0x77
  415ec2:	(bad)  
  415ec3:	dec    eax
  415ec5:	push   ss
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	mov    WORD PTR [ebp-0x2],?
  415ecb:	(bad)  
  415ecc:	in     al,dx
  415ecd:	jne    0x415ecd
  415ecf:	inc    eax
  415ed1:	jne    0x415ed1
  415ed3:	(bad)  
  415ed4:	mov    esi,0xcfffe75
  415ed9:	ja     0x415ed9
  415edb:	(bad)  
  415edc:	in     al,dx
  415edd:	jbe    0x415edd
  415edf:	(bad)  
  415ee0:	in     al,dx
  415ee1:	jbe    0x415ee1
  415ee3:	(bad)  
  415ee4:	ds ja  0x415ee5
  415ee7:	dec    DWORD PTR [esi+0x77]
  415eea:	(bad)  
  415eeb:	push   DWORD PTR [ebp+esi*2-0x2]
  415eef:	inc    DWORD PTR [eax]
  415ef1:	add    BYTE PTR [eax+0x16],bl
  415ef4:	add    BYTE PTR [eax],al
  415ef6:	xor    BYTE PTR [ebp-0x2],0xff
  415efa:	dec    eax
  415efb:	push   ss
  415efc:	add    BYTE PTR [eax],al
  415efe:	outs   dx,BYTE PTR ds:[esi]
  415eff:	jbe    0x415eff
  415f01:	jmp    DWORD PTR [edx]
  415f03:	jo     0x415f03
  415f05:	dec    DWORD PTR [eax+0x16]
  415f08:	add    BYTE PTR [eax],al
  415f0a:	adc    al,0x70
  415f0c:	(bad)  
  415f0d:	push   DWORD PTR [eax+0x70]
  415f10:	(bad)  
  415f11:	jmp    FWORD PTR [eax+esi*2]
  415f14:	(bad)  
  415f15:	(bad)  
  415f16:	cmp    BYTE PTR [eax-0x2],dh
  415f19:	inc    DWORD PTR [edx+0x70]
  415f1c:	(bad)  
  415f1d:	call   FWORD PTR [esi+0x18fffe75]
  415f23:	push   ss
  415f24:	add    BYTE PTR [eax],al
  415f26:	data16 jne 0x415f27
  415f29:	push   DWORD PTR [edx+0x75]
  415f2c:	(bad)  
  415f2d:	call   DWORD PTR [edx+0xcfffe75]
  415f33:	jne    0x415f33
  415f35:	push   DWORD PTR [ecx]
  415f37:	xor    ecx,esp
  415f39:	(bad)  
  415f3a:	(bad)  
  415f3b:	aaa    
  415f3c:	loope  0x415f3c
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	loopne 0x415f40
  415f42:	(bad)  
  415f43:	fchs   
  415f45:	(bad)  
  415f46:	mov    esi,0xb6fee129
  415f4b:	outs   dx,DWORD PTR ds:[esi]
  415f4c:	in     al,0xfe
  415f4e:	scas   al,BYTE PTR es:[edi]
  415f4f:	jnp    0x415f52
  415f51:	add    BYTE PTR [ecx],dh
  415f53:	imul   esp,esp,0x9e0000fe
  415f59:	dec    ebp
  415f5a:	in     al,0xfe
  415f5c:	xchg   esi,eax
  415f5d:	jnp    0x415f60
  415f5f:	add    BYTE PTR [ecx],dh
  415f61:	push   eax
  415f62:	add    DWORD PTR [ecx+0x3],eax
  415f65:	nop
  415f66:	in     al,0x73
  415f68:	adc    al,0xb9
  415f6a:	in     al,dx
  415f6b:	imul   ecx,DWORD PTR [esp+edi*4],0x1
  415f6f:	aas    
  415f70:	xor    ebp,DWORD PTR ds:0x30cd5ee5
  415f76:	jmp    0x1bc33e6
  415f7b:	and    DWORD PTR [ecx],esi
  415f7d:	ds lock ins BYTE PTR es:[edi],dx
  415f80:	ret    0xcbd7
  415f83:	pop    esi
  415f84:	xlat   BYTE PTR ds:[ebx]
  415f85:	into   
  415f86:	out    dx,eax
  415f87:	bound  esi,QWORD PTR [ecx]
  415f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8a:	push   es
  415f8b:	push   ebp
  415f8c:	ret    
  415f8d:	shl    edi,cl
  415f8f:	bound  esi,QWORD PTR [edi+0x4]
  415f92:	lock bound esi,QWORD PTR [ecx]
  415f95:	push   0x7a26c04
  415f9a:	imul   BYTE PTR [ebx-0x74]
  415f9d:	imul   eax,edx,0x12b0eff
  415fa3:	inc    ebp
  415fa4:	xchg   ebp,eax
  415fa5:	sbb    ah,dh
  415fa7:	pop    esi
  415fa8:	lea    ebp,[edi]
  415faa:	out    dx,eax
  415fab:	pusha  
  415fac:	mov    bh,BYTE PTR [ebx+0x1]
  415faf:	mov    ch,0x30
  415fb1:	adc    al,0xae
  415fb3:	out    dx,eax
  415fb4:	push   ebp
  415fb5:	test   bh,0xef
  415fb8:	cmp    edx,0xffffffc2
  415fbb:	lock add BYTE PTR [eax],al
  415fbe:	push   ecx
  415fbf:	std    
  415fc0:	out    0x3,al
  415fc2:	lds    edx,FWORD PTR [edx]
  415fc4:	mov    bl,0xf0
  415fc6:	push   ecx
  415fc7:	repz retf 0x40c9
  415fcb:	out    dx,eax
  415fcc:	retf   
  415fcd:	add    eax,ecx
  415fcf:	adc    bl,BYTE PTR [ebx-0x6d0cee10]
  415fd5:	ret    0xf81a
  415fd8:	(bad)  
  415fd9:	in     al,0x9e
  415fdb:	push   0xe50504f0
  415fe0:	xchg   edx,eax
  415fe1:	cmc    
  415fe2:	adc    esp,esp
  415fe4:	jg     0x415fa8
  415fe6:	xchg   BYTE PTR [eax-0x26],ch
  415fe9:	add    al,0xd
  415feb:	in     eax,0x7a
  415fed:	cmc    
  415fee:	adc    ebx,esi
  415ff0:	jb     0x415fb4
  415ff2:	outs   dx,BYTE PTR ds:[esi]
  415ff3:	push   0xeeec02fe
  415ff8:	push   edx
  415ff9:	retf   0xf7d7
  415ffc:	dec    ebx
  415ffd:	ret    
  415ffe:	loop   0x415fdf
  416000:	pop    eax
  416001:	jmp    0x415fd3
  416003:	fidivr WORD PTR [edx]
  416005:	out    0xc1,eax
  416007:	shl    dh,cl
  416009:	add    ebx,DWORD PTR [edx-0x3903d3ed]
  41600f:	repnz cmp al,0xe8
  416012:	jae    0x41600a
  416014:	sbb    al,0xeb
  416016:	mov    al,ds:0x93ef0cf7
  41601b:	neg    BYTE PTR [edx]
  41601d:	aad    0xa2
  41601f:	loop   0x416020
  416021:	icebp  
  416022:	add    BYTE PTR [eax],al
  416024:	xchg   ebp,eax
  416025:	jecxz  0x41604e
  416027:	add    al,0x25
  416029:	adc    eax,0xce82e726
  41602e:	(bad)  
  41602f:	inc    DWORD PTR [ecx]
  416031:	repz push eax
  416033:	add    bh,ch
  416035:	bnd jmp DWORD PTR [esi]
  416038:	sub    eax,0xd3c471d5
  41603d:	jecxz  0x4160a1
  41603f:	scas   eax,DWORD PTR es:[edi]
  416040:	retf   
  416041:	sti    
  416042:	bound  ebx,QWORD PTR [ebx+edx*8-0x3f2f9009]
  416049:	lock ds jmp 0xa4437482
  416050:	shl    edi,cl
  416052:	push   ebp
  416053:	rcl    BYTE PTR [edi+0x788f4ce0],0xee
  41605a:	imul   eax,DWORD PTR [edx+esi*1-0x5f43fdbb],0xfffffffa
  416062:	pop    esi
  416063:	cdq    
  416064:	push   0x617e62ee
  416069:	icebp  
  41606a:	inc    ebp
  41606b:	nop
  41606c:	mov    ?,edx
  41606e:	inc    DWORD PTR [edx]
  416070:	xor    ebx,eax
  416072:	ins    BYTE PTR es:[edi],dx
  416073:	mov    BYTE PTR [esi-0x25],dl
  416076:	dec    bx
  416078:	arpl   si,ax
  41607a:	jno    0x4160dc
  41607c:	je     0x4160e5
  41607e:	std    
  41607f:	cmp    ch,BYTE PTR [ecx+edx*8]
  416082:	bound  edx,QWORD PTR [ebp+0x65]
  416085:	in     eax,0x6c
  416087:	dec    edx
  416088:	add    BYTE PTR [eax],al
  41608a:	ins    BYTE PTR es:[edi],dx
  41608b:	repz arpl WORD PTR [ebx],di
  41608e:	dec    eax
  41608f:	in     al,0x70
  416091:	jmp    0x2640f0c8
  416096:	sbb    bl,ah
  416098:	push   ebx
  416099:	or     al,0x20
  41609b:	test   DWORD PTR [edi+0x8],0xe93eef19
  4160a2:	xor    ah,BYTE PTR [ebx]
  4160a4:	add    BYTE PTR [edx],ch
  4160a6:	add    esi,edx
  4160a8:	pop    esi
  4160a9:	add    BYTE PTR [esp+edi*2],al
  4160ac:	inc    ecx
  4160ad:	imul   edi,edx,0x2f74607b
  4160b3:	bound  esi,QWORD PTR [esi+0x41]
  4160b6:	fcom   DWORD PTR [edx]
  4160b8:	add    BYTE PTR gs:[ebx+edi*2+0x7c046569],dl
  4160c0:	inc    ebx
  4160c1:	imul   ebp,esp,0xd8003e7b
  4160c7:	cmovae esp,DWORD PTR [ebp-0x7c]
  4160cb:	push   ecx
  4160cc:	jb     0x416140
  4160ce:	jp     0x41614b
  4160d0:	imul   esi,DWORD PTR [eax+ebx*4+0x64],0x6c
  4160d5:	arpl   WORD PTR [ebp+0x61],si
  4160d8:	jo     0x4160da
  4160da:	dec    eax
  4160db:	adc    dl,BYTE PTR [ebx+0x69]
  4160de:	mov    ah,0x7b
  4160e0:	inc    eax
  4160e1:	push   0x6f5164a9
  4160e6:	lods   eax,DWORD PTR ds:[esi]
  4160e7:	imul   ebp,DWORD PTR [ecx+0x74],0xffffffa1
  4160eb:	push   esp
  4160ec:	jbe    0x416162
  4160ee:	add    BYTE PTR [eax],al
  4160f0:	mov    ch,0x12
  4160f2:	lods   eax,DWORD PTR ds:[esi]
  4160f3:	add    dh,al
  4160f5:	ja     0x416162
  4160f7:	fs xchg esi,eax
  4160f9:	ja     0x41616a
  4160fb:	jae    0x416101
  4160fd:	dec    esi
  4160fe:	data16 ins BYTE PTR es:[edi],dx
  416100:	cmc    
  416101:	push   eax
  416102:	std    
  416103:	call   DWORD PTR [edi+0x11]
  416106:	ins    BYTE PTR es:[edi],dx
  416107:	jae    0x4160ed
  416109:	popa   
  41610a:	pusha  
  41610b:	ins    DWORD PTR es:[edi],dx
  41610c:	or     BYTE PTR [ecx+0x3e],bh
  41610f:	add    BYTE PTR [edx-0x1196b9ee],dh
  416115:	jnp    0x416162
  416117:	gs pusha 
  416119:	ins    BYTE PTR es:[edi],dx
  41611a:	inc    ebx
  41611b:	imul   edi,DWORD PTR [ebx+edi*2],0x116d003e
  416122:	inc    esi
  416123:	imul   esi,DWORD PTR [ecx],0x9d40e80d
  416129:	repnz bound si,DWORD PTR [ecx]
  41612d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612e:	add    al,0x45
  416130:	xchg   esp,eax
  416131:	pop    edi
  416132:	shr    BYTE PTR [ebp+ecx*4+0x68],1
  416136:	in     eax,dx
  416137:	bound  edi,QWORD PTR [ecx+0x1c]
  41613a:	out    dx,al
  41613b:	arpl   WORD PTR [ebp+0x58],dx
  41613e:	(bad)  
  41613f:	(bad)  
  416140:	(bad)  
  416142:	add    eax,DWORD PTR [ebp+0x4c]
  416145:	inc    edi
  416146:	shl    DWORD PTR [edx+0x43],cl
  416149:	dec    edx
  41614a:	in     al,dx
  41614b:	ins    BYTE PTR es:[edi],dx
  41614c:	push   edi
  41614d:	mov    eax,0x1313ef9
  416152:	add    eax,DWORD PTR [ebp+0x0]
  416155:	add    BYTE PTR [edi+eiz*4-0x33],cl
  416159:	ins    BYTE PTR es:[edi],dx
  41615a:	adc    bl,BYTE PTR [ebp+ebp*8+0x62]
  41615e:	clc    
  41615f:	jl     0x416144
  416161:	ins    BYTE PTR es:[edi],dx
  416162:	lock jp 0x416166
  416165:	je     0x416197
  416167:	mov    dh,0xe8
  416169:	jae    0x41614d
  41616b:	xor    edx,0x73
  41616e:	or     al,0x80
  416170:	int3   
  416171:	ins    DWORD PTR es:[edi],dx
  416172:	pop    ss
  416173:	xchg   esi,eax
  416174:	add    DWORD PTR [eax+0x73e8b630],esp
  41617a:	push   es
  41617b:	xchg   esp,eax
  41617c:	jmp    0x4161e1
  41617e:	(bad)  
  41617f:	(bad)
  416182:	enter  0xe4c8,0x60
  416186:	(bad)  
  416188:	icebp  
  416189:	jbe    0x41617b
  41618b:	jp     0x41618e
  41618d:	dec    ebp
  41618e:	xor    BYTE PTR [esi],dh
  416190:	in     eax,0x73
  416192:	loope  0x4161bc
  416194:	jmp    0xe568320e
  416199:	dec    edi
  41619a:	mov    ds:0x9566e626,eax
  41619f:	adc    al,0xc
  4161a1:	shl    DWORD PTR [edx-0x7211f01e],1
  4161a7:	shl    esi,cl
  4161a9:	add    ecx,DWORD PTR [ebx-0x7d18c5ee]
  4161af:	sar    ebx,1
  4161b1:	icebp  
  4161b2:	sub    bh,0xc
  4161b5:	clc    
  4161b6:	jb     0x4161b3
  4161b8:	clc    
  4161b9:	out    0x0,al
  4161bb:	add    BYTE PTR [ecx-0x20],dl
  4161be:	std    
  4161bf:	icebp  
  4161c0:	pop    edi
  4161c1:	shl    esi,cl
  4161c3:	add    eax,DWORD PTR [edx+0x11]
  4161c6:	retf   
  4161c7:	lock (bad) 
  4161ca:	leave  
  4161cb:	out    dx,al
  4161cc:	pop    esi
  4161cd:	shl    esi,cl
  4161cf:	add    esi,DWORD PTR [ebp+0x13]
  4161d2:	scas   al,BYTE PTR es:[edi]
  4161d3:	out    0x42,al
  4161d5:	les    edi,FWORD PTR [eax-0x450cc316]
  4161db:	out    0xfe,al
  4161dd:	loope  0x41619c
  4161df:	in     eax,0xf
  4161e1:	clc    
  4161e2:	mov    edx,eax
  4161e4:	adc    esi,ecx
  4161e6:	xchg   edx,eax
  4161e7:	jmp    0xef1b:0xe2a4f605
  4161ee:	cdq    
  4161ef:	ret    0x6486
  4161f2:	mov    al,0x2
  4161f4:	hlt    
  4161f5:	out    dx,al
  4161f6:	jb     0x4161cb
  4161f8:	add    bl,bh
  4161fa:	jl     0x4161de
  4161fc:	loop   0x4161ec
  4161fe:	xchg   esi,eax
  4161ff:	icebp  
  416200:	aad    0xed
  416202:	dec    edi
  416203:	lock rcr edx,cl
  416206:	dec    esp
  416207:	clc    
  416208:	pop    ss
  416209:	adc    al,0xd5
  41620b:	add    esi,esp
  41620d:	out    dx,al
  41620e:	push   edx
  41620f:	rol    ebx,0xe1
  416212:	cmp    bh,ah
  416214:	int3   
  416215:	fbld   TBYTE PTR [edx]
  416217:	jmp    0x4161d9
  416219:	out    dx,al
  41621a:	dec    DWORD PTR [ecx+0x29]
  41621d:	icebp  
  41621e:	jno    0x416250
  416220:	add    BYTE PTR [eax],al
  416222:	repnz arpl bp,di
  416225:	pop    es
  416226:	xor    al,dh
  416228:	jo     0x41623f
  41622a:	and    esi,eax
  41622c:	bound  eax,QWORD PTR [edi]
  41622e:	in     al,0x63
  416230:	std    
  416231:	fdiv   QWORD PTR [eax]
  416233:	iret   
  416234:	jb     0x41624b
  416236:	stc    
  416237:	cli    
  416238:	inc    ecx
  416239:	add    cl,bh
  41623b:	not    BYTE PTR [ebx+0x6]
  41623e:	add    al,0xfb
  416240:	arpl   WORD PTR [eax+esi*8],ax
  416243:	sti    
  416244:	pop    esi
  416245:	(bad)  [edx]
  416247:	(bad)  
  416248:	jmp    DWORD PTR [ebp-0x3fac1831]
  41624e:	shr    esp,1
  416250:	inc    eax
  416251:	mov    esi,0xe973f1bf
  416256:	xor    bl,BYTE PTR [ebp-0x93965fe]
  41625c:	bound  edi,QWORD PTR [ecx-0x5a00d9ce]
  416262:	(bad)  
  416263:	out    0x4a,eax
  416265:	xchg   esi,eax
  416266:	xchg   esi,eax
  416267:	out    0x6b,al
  416269:	test   BYTE PTR [edx+edi*8+0x6b],ch
  41626d:	mov    WORD PTR [edx+eax*8+0x6a],?
  416271:	test   BYTE PTR [ebx+0x63],dh
  416274:	std    
  416275:	shl    DWORD PTR [ebx],1
  416277:	fldenv [edx+0x75]
  41627a:	retw   0x7d70
  41627e:	ja     0x416265
  416280:	jno    0x416300
  416282:	pusha  
  416283:	arpl   bp,di
  416285:	inc    eax
  416286:	add    BYTE PTR [eax],al
  416288:	xor    eax,0x4c4471d5
  41628d:	out    0x62,eax
  41628f:	cmp    eax,0x416bf05a
  416294:	push   eax
  416295:	out    dx,eax
  416296:	outs   dx,DWORD PTR ds:[esi]
  416297:	add    BYTE PTR [ebx],bh
  416299:	sub    DWORD PTR [edi+0x6e],ecx
  41629c:	jmp    0x77a9d308
  4162a1:	fs std 
  4162a3:	jmp    FWORD PTR ds:0x4772501a
  4162a9:	jnp    0x41630d
  4162ab:	jae    0x4162e8
  4162ad:	sub    esi,DWORD PTR [edx]
  4162af:	inc    esi
  4162b0:	xor    DWORD PTR [edx+0x70],ebp
  4162b3:	je     0x4162cd
  4162b5:	pop    ss
  4162b6:	sbb    BYTE PTR [edx],al
  4162b8:	inc    edi
  4162b9:	push   0x6a186e62
  4162be:	ins    BYTE PTR es:[edi],dx
  4162bf:	arpl   WORD PTR ds:0xef00706b,di
  4162c5:	sbb    BYTE PTR [eax+0x72],dl
  4162c8:	pop    es
  4162c9:	jp     0x41632d
  4162cb:	jae    0x4162c8
  4162cd:	sub    DWORD PTR [edx],esi
  4162cf:	dec    esi
  4162d0:	std    
  4162d1:	pop    esi
  4162d2:	jno    0x4162d4
  4162d4:	outs   dx,DWORD PTR ds:[esi]
  4162d5:	sbb    DWORD PTR [ebx+eax*2-0x7b],ecx
  4162d9:	ja     0x416348
  4162db:	push   ebx
  4162dc:	jl     0x416346
  4162de:	data16 outs dx,BYTE PTR ds:[esi]
  4162e0:	jg     0x416339
  4162e2:	std    
  4162e3:	inc    DWORD PTR [ebx]
  4162e5:	sbb    BYTE PTR [ecx+0x78],al
  4162e8:	shl    DWORD PTR [edx+0x4d],0x72
  4162ec:	add    BYTE PTR [eax],al
  4162ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ef:	jns    0x416353
  4162f1:	jae    0x41629e
  4162f3:	push   ss
  4162f4:	lods   eax,DWORD PTR ds:[esi]
  4162f5:	add    cl,bl
  4162f7:	jae    0x41636a
  4162f9:	push   ebp
  4162fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162fb:	outs   dx,BYTE PTR ds:[esi]
  4162fc:	pop    esi
  4162fd:	outs   dx,BYTE PTR ds:[esi]
  4162fe:	lods   al,BYTE PTR ds:[esi]
  4162ff:	jp     0x416363
  416301:	fs popf 
  416303:	pop    esi
  416304:	pusha  
  416305:	gs call 0x6b0c97d
  41630b:	push   esi
  41630c:	data16 ins BYTE PTR es:[edi],dx
  41630e:	cld    
  41630f:	je     0x416380
  416311:	add    BYTE PTR [ecx],dh
  416313:	(bad)  
  416314:	fidiv  WORD PTR [ecx-0x29]
  416317:	xlat   BYTE PTR ds:[ebx]
  416318:	out    0x30,eax
  41631a:	add    ecx,DWORD PTR [ebx]
  41631c:	loopne 0x416389
  41631e:	lds    ebp,FWORD PTR [ecx+eax*1-0x77]
  416322:	xor    DWORD PTR [esi],ebp
  416324:	mul    BYTE PTR [edx-0x70]
  416327:	daa    
  416328:	fist   WORD PTR [eax-0x5b]
  41632b:	std    
  41632c:	ficomp WORD PTR [esi-0x7c]
  41632f:	xor    ch,dl
  416331:	inc    edi
  416332:	jbe    0x41634b
  416334:	jmp    0x1a0f39a
  416339:	xchg   ebp,eax
  41633a:	xor    DWORD PTR [edx],esi
  41633c:	fbstp  TBYTE PTR [ebx+0x69]
  41633f:	cmp    ch,al
  416341:	ins    BYTE PTR es:[edi],dx
  416342:	push   ebx
  416343:	or     al,0xe8
  416345:	inc    ebp
  416346:	arpl   WORD PTR [edx-0x18],sp
  416349:	push   eax
  41634a:	gs cmp eax,0x6b445ee0
  416350:	add    DWORD PTR [esi],ecx
  416352:	add    BYTE PTR [eax],al
  416354:	xor    DWORD PTR [esi+0x584340ea],ebp
  41635a:	in     al,0x73
  41635c:	push   esp
  41635d:	mov    dl,0xf0
  41635f:	dec    bp
  416361:	imul   eax,DWORD PTR [ecx],0x60
  416364:	xor    DWORD PTR [esi-0x61efac16],ebp
  41636a:	out    dx,al
  41636b:	dec    edx
  41636c:	adc    al,0x88
  41636e:	mov    edi,0x1980c71
  416373:	or     eax,0x40eaae31
  416378:	add    ebx,DWORD PTR [eax-0x5beb8c1c]
  41637e:	out    0x70,eax
  416380:	std    
  416381:	mov    esp,edi
  416383:	pusha  
  416384:	aam    0x6a
  416386:	add    ecx,esi
  416388:	xor    DWORD PTR [edx+0x13e862e5],eax
  41638e:	push   ebp
  41638f:	jmp    0x416373
  416391:	jmp    0x44b:0xddd7e847
  416398:	aam    0xef
  41639a:	inc    ebx
  41639b:	xor    eax,0xe84b3203
  4163a0:	retf   0x3c13
  4163a3:	push   es
  4163a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163a5:	in     eax,0x36
  4163a7:	test   BYTE PTR [edi+0x5fe232f2],0x14
  4163ae:	sbb    al,0xf5
  4163b0:	xchg   ebx,eax
  4163b1:	out    0xd9,al
  4163b3:	xor    eax,0xe802f85f
  4163b8:	add    BYTE PTR [eax],al
  4163ba:	push   es
  4163bb:	popa   
  4163bc:	mov    bh,0x3
  4163be:	arpl   di,si
  4163c0:	or     eax,0xcf786c9
  4163c5:	int    0x53
  4163c7:	fld    TBYTE PTR [ebx]
  4163c9:	cld    
  4163ca:	daa    
  4163cb:	adc    al,0x91
  4163cd:	add    eax,DWORD PTR [ebx+0x63d2cdf7]
  4163d3:	neg    eax
  4163d5:	cli    
  4163d6:	fs repz ret 0x53ee
  4163db:	xlat   BYTE PTR ds:[ebx]
  4163dc:	into   
  4163dd:	ret    0x60be
  4163e0:	jle    0x4163e5
  4163e2:	arpl   di,si
  4163e4:	(bad)
  4163e7:	icebp  
  4163e8:	mov    ecx,0xaff6f9de
  4163ed:	add    ebp,DWORD PTR [edx+edx*1-0x47]
  4163f1:	fimul  WORD PTR ds:0x1cde96d1
  4163f7:	int    0x8b
  4163f9:	cli    
  4163fa:	inc    edi
  4163fb:	adc    al,0x23
  4163fd:	add    esp,ebx
  4163ff:	test   BYTE PTR [ebp-0x7418fb42],0xcc
  416406:	rcr    edx,cl
  416408:	jmp    FWORD PTR [ebx+0x3300216a]
  41640e:	xor    al,dh
  416410:	bound  ecx,QWORD PTR [esi+0x6c]
  416413:	loop   0x416477
  416415:	dec    eax
  416416:	inc    ecx
  416417:	cmc    
  416418:	dec    eax
  416419:	dec    esp
  41641a:	dec    edx
  41641b:	and    DWORD PTR [eax],eax
  41641d:	mov    BYTE PTR [eax],0x0
  416420:	xor    eax,esi
  416422:	bound  ecx,QWORD PTR [esi+0x5c]
  416425:	cmc    
  416426:	jae    0x41643f
  416428:	adc    ch,ah
  41642a:	jb     0x416478
  41642c:	out    0xe7,al
  41642e:	ds jmp 0x3b40bd66
  416434:	idiv   al
  416436:	inc    edx
  416437:	nop    ebx
  41643a:	push   ebp
  41643b:	or     BYTE PTR [ecx],bl
  41643d:	jecxz  0x4164a1
  41643f:	sub    BYTE PTR ds:0xd61aff4e,dh
  416445:	clc    
  416446:	dec    esp
  416447:	stc    
  416448:	pslld  mm0,QWORD PTR [eax-0x4]
  41644c:	fsubr  st(5),st
  41644e:	(bad)  
  41644f:	dec    esi
  416451:	ret    0xcc70
  416454:	fcomp  QWORD PTR [edi-0x3]
  416457:	add    dh,BYTE PTR [edx]
  416459:	fldenv [edx-0x23]
  41645c:	mul    esp
  41645e:	(bad)  
  41645f:	fucomi st,st(0)
  416461:	mov    esi,0x5ff3cc6a
  416466:	std    
  416467:	enter  0xe98e,0x5e
  41646b:	mov    ecx,0xff32249b
  416470:	jle    0x41645d
  416472:	imul   ebp,ecx,0x32
  416475:	inc    edi
  416476:	add    BYTE PTR [edx-0x7a940d66],bh
  41647c:	(bad)  
  41647d:	out    0x62,eax
  41647f:	mov    cl,BYTE PTR [edi+0x62e3]
  416485:	add    cl,cl
  416487:	adc    ebp,DWORD PTR [edi+0x68]
  41648a:	mov    ch,0x77
  41648c:	imul   esi,DWORD PTR [ebx],0x6c642daa
  416492:	fcom   QWORD PTR [edx]
  416494:	jne    0x416496
  416496:	and    DWORD PTR [esi+0x71],esi
  416499:	gs jmp 0x5e62:0x1b746275
  4164a1:	arpl   bx,si
  4164a3:	inc    esp
  4164a4:	outs   dx,DWORD PTR ds:[esi]
  4164a5:	ins    BYTE PTR es:[edi],dx
  4164a6:	or     DWORD PTR [eax],ebx
  4164a8:	ja     0x4164aa
  4164aa:	popa   
  4164ab:	jbe    0x41651e
  4164ad:	gs push 0x76
  4164b0:	bound  esi,QWORD PTR [ebx+ecx*2+0x62]
  4164b4:	bound  esp,QWORD PTR [ecx+0x34]
  4164b7:	jne    0x41650b
  4164b9:	jb     0x4164f7
  4164bb:	pop    ecx
  4164bc:	std    
  4164bd:	jmp    DWORD PTR [edi]
  4164bf:	jno    0x41652c
  4164c1:	imul   edi,esi,0x242e7173
  4164c7:	ins    BYTE PTR es:[edi],dx
  4164c8:	imul   eax,DWORD PTR [eax],0x744f17dd
  4164ce:	jmp    0xfd59:0x11727141
  4164d5:	dec    eax
  4164d7:	pop    ss
  4164d8:	dec    edi
  4164d9:	je     0x4164c5
  4164db:	inc    esp
  4164dc:	inc    eax
  4164dd:	push   0x3e4fea
  4164e2:	les    edx,FWORD PTR [edi]
  4164e4:	dec    edi
  4164e5:	je     0x416561
  4164e7:	dec    esi
  4164e8:	ins    BYTE PTR es:[edi],dx
  4164e9:	dec    ecx
  4164ea:	add    BYTE PTR [eax],al
  4164ec:	jle    0x41655c
  4164ee:	add    BYTE PTR ds:[edi+edx*1+0x41da744f],cl
  4164f6:	jno    0x41656a
  4164f8:	leave  
  4164f9:	adc    ch,dl
  4164fb:	add    bl,cl
  4164fd:	outs   dx,BYTE PTR ds:[esi]
  4164fe:	outs   dx,DWORD PTR ds:[esi]
  4164ff:	inc    ebx
  416500:	xor    DWORD PTR [eax-0x5417b20f],ebx
  416506:	add    DWORD PTR [esi],ecx
  416508:	xor    BYTE PTR [edx-0x13],bh
  41650b:	jno    0x41650f
  41650d:	jmp    0x6d3fac00
  416512:	add    DWORD PTR [ecx-0x37],esi
  416515:	loopne 0x416504
  416517:	pop    esi
  416518:	loope  0x4164dd
  41651a:	and    eax,0x3d0dd64
  41651f:	ss xor esp,edx
  416522:	in     eax,0x62
  416524:	lds    ebp,FWORD PTR ds:0x1acd63e3
  41652a:	add    al,0x2a
  41652c:	xor    esi,edx
  41652e:	fidiv  WORD PTR [ebx-0x67]
  416531:	(bad)  
  416532:	lock jae 0x4164c8
  416535:	and    al,0xe6
  416537:	pop    esi
  416538:	test   BYTE PTR [eax],dl
  41653a:	add    al,0x47
  41653c:	xor    edx,edi
  41653e:	in     al,0x60
  416540:	call   0x156:0xfefff010
  416547:	popa   
  416548:	xchg   BYTE PTR ds:0x675262e6,al
  41654e:	add    DWORD PTR [esi],esp
  416550:	add    BYTE PTR [eax],al
  416552:	xor    DWORD PTR [edx],ecx
  416554:	call   0xf159c7c5
  416559:	ins    BYTE PTR es:[edi],dx
  41655a:	push   edx
  41655b:	inc    edx
  41655c:	loopne 0x4165d1
  41655e:	xor    DWORD PTR [edi+0x554c7101],esi
  416564:	(bad)  
  416566:	mov    esi,0x4c7101aa
  41656b:	inc    edi
  41656c:	loopne 0x4165ce
  41656e:	and    eax,0x313e016b
  416573:	cdq    
  416574:	loopne 0x4165d6
  416576:	daa    
  416577:	imul   eax,DWORD PTR [ecx],0x45
  41657a:	xor    DWORD PTR [edx+ebx*4],edx
  41657d:	loopne 0x416581
  41657f:	loope  0x41650e
  416581:	loop   0x41659c
  416583:	in     eax,dx
  416584:	xchg   esi,eax
  416585:	out    dx,eax
  416586:	jle    0x4165e5
  416588:	enter  0xdc03,0xc0
  41658c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658d:	shl    dl,cl
  41658f:	bnd js 0x416581
  416592:	jecxz  0x416577
  416594:	out    0x3,al
  416596:	in     al,0xe0
  416598:	jge    0x41657c
  41659a:	leave  
  41659b:	and    BYTE PTR [ecx],bl
  41659d:	es aad 0xef
  4165a0:	dec    edx
  4165a1:	add    al,0xfa
  4165a3:	adc    esp,DWORD PTR [ebx]
  4165a5:	in     eax,0xdf
  4165a7:	div    DWORD PTR [ebx]
  4165a9:	icebp  
  4165aa:	shl    ecx,cl
  4165ac:	push   ss
  4165ad:	repnz popf 
  4165af:	test   BYTE PTR [edi-0x18],0x93
  4165b3:	shl    esi,cl
  4165b5:	add    eax,DWORD PTR [eax]
  4165b7:	add    BYTE PTR [esi+0x14],bh
  4165ba:	adc    al,0xe6
  4165bc:	mov    ch,ch
  4165be:	pop    es
  4165bf:	loopne 0x416624
  4165c1:	loope  0x4165c6
  4165c3:	bnd jbe 0x4165a8
  4165c6:	add    eax,0x3f097de
  4165cb:	add    al,0x82
  4165cd:	loope  0x4165da
  4165cf:	repnz push ebx
  4165d1:	out    dx,al
  4165d2:	hlt    
  4165d3:	and    eax,0x402f04d
  4165d8:	xor    DWORD PTR [edi+eiz*8],edx
  4165db:	add    esi,DWORD PTR [ecx]
  4165dd:	adc    al,0xe7
  4165df:	add    esi,DWORD PTR [ecx]
  4165e1:	adc    al,0xe7
  4165e3:	add    esi,DWORD PTR [ecx]
  4165e5:	adc    al,0xe7
  4165e7:	add    esi,DWORD PTR [ecx]
  4165e9:	adc    al,0xe7
  4165eb:	add    esi,DWORD PTR [ecx]
  4165ed:	adc    al,0xe7
  4165ef:	add    esi,DWORD PTR [ecx]
  4165f1:	adc    al,0xe7
  4165f3:	add    esi,DWORD PTR [ecx]
  4165f5:	adc    al,0x0
  4165f7:	jmp    0xe9417a2e
  4165fc:	xor    dl,BYTE PTR [eax+eax*1]
  4165ff:	jmp    0xe9417a36
  416604:	xor    dl,BYTE PTR [eax+eax*1]
  416607:	jmp    0xe9417a3e
  41660c:	xor    dl,BYTE PTR [eax+eax*1]
  41660f:	jmp    0xe9417a46
  416614:	xor    dl,BYTE PTR [eax+eax*1]
  416617:	jmp    0xe9417a4e
  41661c:	add    BYTE PTR [eax],al
  41661e:	xor    dl,BYTE PTR [eax+eax*1]
  416621:	jmp    0xe9417a58
  416626:	xor    dl,BYTE PTR [eax+eax*1]
  416629:	jmp    0xe9417a60
  41662e:	xor    dl,BYTE PTR [eax+eax*1]
  416631:	jmp    0xe9417a68
  416636:	xor    dl,BYTE PTR [eax+eax*1]
  416639:	jmp    0xe9417a70
  41663e:	xor    dl,BYTE PTR [eax+eax*1]
  416641:	jmp    0xe9417a78
  416646:	xor    dl,BYTE PTR [eax+eax*1]
  416649:	jmp    0xe9417a80
  41664e:	xor    dl,BYTE PTR [eax+eax*1]
  416651:	jmp    0xe9417a88
  416656:	xor    dl,BYTE PTR [eax+eax*1]
  416659:	jmp    0xe9417a90
  41665e:	xor    dl,BYTE PTR [eax+eax*1]
  416661:	jmp    0xe9417a98
  416666:	xor    dl,BYTE PTR [eax+eax*1]
  416669:	jmp    0xe9417aa0
  41666e:	xor    dl,BYTE PTR [eax+eax*1]
  416671:	add    BYTE PTR [eax-0x67ffffe9],bl
  416677:	pop    ss
  416678:	add    BYTE PTR [eax],al
  41667a:	mov    BYTE PTR [edi],dl
  41667c:	add    BYTE PTR [eax],al
  41667e:	mov    BYTE PTR [edi],dl
  416680:	add    BYTE PTR [eax],al
  416682:	add    BYTE PTR [eax],al
  416684:	cwde   
  416685:	pop    ss
  416686:	add    BYTE PTR [eax],al
  416688:	cwde   
  416689:	pop    ss
  41668a:	add    BYTE PTR [eax],al
  41668c:	ins    DWORD PTR es:[edi],dx
  41668d:	dec    eax
  41668e:	int3   
  41668f:	int3   
  416690:	gs dec eax
  416692:	int3   
  416693:	int3   
  416694:	add    al,0x8f
  416696:	in     al,dx
  416697:	push   ecx
  416698:	mov    edx,0x298a07d1
  41669d:	mov    WORD PTR [ebx-0x1],cs
  4166a0:	stos   BYTE PTR es:[edi],al
  4166a1:	jno    0x4166fe
  4166a3:	ret    
  4166a4:	in     al,0x8e
  4166a6:	in     al,dx
  4166a7:	push   ecx
  4166a8:	ffreep st(2)
  4166aa:	xor    cl,cl
  4166ac:	aad    0x8e
  4166ae:	outs   dx,DWORD PTR ds:[esi]
  4166af:	xor    BYTE PTR [edx-0x5874f41e],ch
  4166b5:	clc    
  4166b6:	mov    BYTE PTR [esi+0x39],al
  4166b9:	lea    eax,[ebx-0x4]
  4166bc:	stos   BYTE PTR es:[edi],al
  4166bd:	fstp   DWORD PTR [edi]
  4166bf:	mov    ebx,DWORD PTR [edi-0x6c]
  4166c2:	cmp    eax,0x8013856b
  4166c7:	aas    
  4166c8:	jp     0x4166aa
  4166ca:	add    ebx,ebp
  4166cc:	or     BYTE PTR [ebx-0x46f374a3],bh
  4166d2:	ror    ah,0x84
  4166d5:	(bad)  
  4166d6:	in     al,dx
  4166d7:	adc    ebp,0x2f
  4166da:	mov    DWORD PTR [ebp+0x29],eax
  4166dd:	lea    eax,[ebx-0x20]
  4166e0:	stos   BYTE PTR es:[edi],al
  4166e1:	enter  0x8bdf,0x64
  4166e5:	je     0x4166e8
  4166e7:	push   ecx
  4166e8:	add    BYTE PTR [eax],al
  4166ea:	add    eax,0xaae4538d
  4166ef:	shl    bl,1
  4166f1:	mov    ebp,DWORD PTR [ecx-0x24]
  4166f4:	add    BYTE PTR [ebp+0x39],cl
  4166f7:	lea    ecx,[ebx-0x8]
  4166fa:	mov    edx,0xf38bf7c0
  4166ff:	das    
  416700:	add    DWORD PTR [ebp+0x29],eax
  416703:	lea    eax,[ebx-0x18]
  416706:	mov    edx,0xe08bf7c8
  41670b:	xor    eax,DWORD PTR [ecx]
  41670d:	push   ebp
  41670e:	sub    DWORD PTR [ebp-0x2f550fad],ecx
  416714:	test   DWORD PTR [ebx+0x4d00f7f9],0xfc4b8d39
  41671e:	jbe    0x4166f0
  416720:	repz add BYTE PTR [ecx],dh
  416723:	adc    al,0x0
  416725:	jmp    0x41675f
  416727:	(bad)  
  416728:	push   ebx
  416729:	hlt    
  41672a:	mov    dl,0x55
  41672c:	dec    DWORD PTR [eax+0x45895fe4]
  416732:	cmp    DWORD PTR [esi-0x33950bb5],ecx
  416738:	pop    ss
  416739:	jae    0x4167b4
  41673b:	lea    edx,[ebx-0x10]
  41673e:	stos   BYTE PTR es:[edi],al
  41673f:	push   ss
  416740:	add    DWORD PTR [ebp+0x29],eax
  416743:	mov    eax,DWORD PTR [ebx-0x24]
  416746:	fwait
  416747:	or     ch,BYTE PTR [eax-0x54]
  41674a:	xor    edx,esp
  41674c:	dec    DWORD PTR [edx+0x386c0000]
  416752:	dec    edi
  416753:	call   0x417ab9
  416758:	mov    dl,0x50
  41675a:	or     al,0x85
  41675c:	icebp  
  41675d:	fistp  WORD PTR [eax]
  41675f:	mov    eax,DWORD PTR [eax+eiz*2+0x9c94589]
  416766:	mov    ch,0xc
  416768:	popa   
  416769:	mov    ecx,DWORD PTR [ebx-0x14]
  41676c:	mov    edx,0x748bebbf
  416771:	pop    eax
  416772:	mov    DWORD PTR [ecx+eiz*4],eax
  416775:	adc    eax,0x79a0843
  41677a:	mov    DWORD PTR [ebp-0x5f],ecx
  41677d:	xchg   ebp,eax
  41677e:	mov    edi,0xefc7a804
  416783:	jmp    0x416752
  416785:	and    eax,0xb7948bc0
  41678a:	ror    ah,0x75
  41678d:	dec    eax
  41678e:	int3   
  41678f:	int3   
  416790:	ins    DWORD PTR es:[edi],dx
  416791:	dec    eax
  416792:	int3   
  416793:	int3   
  416794:	gs dec eax
  416796:	int3   
  416797:	int3   
  416798:	add    al,0x8d
  41679a:	in     al,dx
  41679b:	adc    DWORD PTR [ebp-0x4],0xffffffe7
  41679f:	add    eax,0x89fd595e
  4167a4:	in     al,dx
  4167a5:	imul   ecx,DWORD PTR [ecx-0x183ba6bb],0x29
  4167ac:	inc    esi
  4167ad:	pop    ecx
  4167ae:	std    
  4167af:	xor    DWORD PTR [ebp+0x10],0xffffffa1
  4167b3:	mov    ah,0x0
  4167b5:	add    ah,bl
  4167b7:	sar    bh,cl
  4167b9:	addr16 in eax,dx
  4167bb:	adc    eax,0xc6ba0040
  4167c0:	out    0x51,eax
  4167c2:	push   ds
  4167c3:	push   DWORD PTR [ebx-0x5eeb8fab]
  4167c9:	mov    eax,0x69ffd364
  4167ce:	xor    esi,ebp
  4167d0:	jmp    DWORD PTR [edi-0x13]
  4167d3:	adc    eax,0xfef60040
  4167d8:	mov    bh,0x55
  4167da:	jo     0x4167f0
  4167dc:	xchg   DWORD PTR [ebp-0x27],eax
  4167df:	push   eax
  4167e0:	inc    ebx
  4167e1:	cld    
  4167e2:	xor    DWORD PTR [eax+eax*1],edx
  4167e5:	add    dl,cl
  4167e7:	or     cl,BYTE PTR [ecx-0x3d6b32ab]
  4167ed:	add    DWORD PTR [eax+0x3c83fbbe],edi
  4167f3:	pop    eax
  4167f4:	or     BYTE PTR [ebx+0x10],dh
  4167f7:	lea    eax,[ebx-0x4]
  4167fa:	mov    edx,0x338c8307
  4167ff:	aam    0xff
  416801:	push   eax
  416802:	stos   BYTE PTR es:[edi],al
  416803:	mov    esi,0xfe9652e7
  416808:	mov    bl,0x55
  41680a:	lock adc ecx,DWORD PTR [ecx+0x48a854d]
  416811:	(bad)  
  416812:	lds    edi,FWORD PTR [esi+0x438a003e]
  416818:	mov    ebp,esp
  41681a:	add    BYTE PTR [eax],al
  41681c:	or     al,0x55
  41681e:	int3   
  41681f:	int3   
  416820:	jne    0x416869
  416822:	int3   
  416823:	int3   
  416824:	ins    DWORD PTR es:[edi],dx
  416825:	inc    edi
  416826:	int3   
  416827:	int3   
  416828:	gs inc edi
  41682a:	int3   
  41682b:	int3   
  41682c:	in     al,0x8c
  41682e:	in     al,dx
  41682f:	mov    eax,ds:0x3ec221
  416834:	dec    DWORD PTR [eax+eax*2+0x7c6aa30]
  41683b:	ds mov eax,0xf25d07cc
  416841:	dec    eax
  416842:	int3   
  416843:	int3   
  416844:	in     eax,dx
  416845:	dec    eax
  416846:	int3   
  416847:	int3   
  416848:	in     eax,0x48
  41684a:	int3   
  41684b:	int3   
  41684c:	fs mov ebp,esp
  41684f:	mov    ebp,DWORD PTR [eax+ecx*1+0x50]
  416853:	mov    ebp,DWORD PTR [esp+ecx*1+0x4f]
  416857:	call   FWORD PTR [eax+eiz*4]
  41685a:	push   ebx
  41685b:	inc    ecx
  41685c:	xor    DWORD PTR [ecx+0x48f5ccc0],edi
  416862:	int3   
  416863:	int3   
  416864:	in     eax,dx
  416865:	dec    eax
  416866:	int3   
  416867:	int3   
  416868:	in     eax,0x48
  41686a:	int3   
  41686b:	int3   
  41686c:	fs mov ebp,esp
  41686f:	adc    ebp,0xc
  416872:	push   0x0
  416874:	dec    ebx
  416875:	adc    al,0x68
  416877:	fdiv   QWORD PTR [ebx]
  416879:	aam    0xff
  41687b:	inc    BYTE PTR [esp+ebx*4+0x53]
  41687f:	inc    ecx
  416880:	add    BYTE PTR [eax],al
  416882:	xor    DWORD PTR [ebp+0x6c09f843],ecx
  416888:	add    al,BYTE PTR [eax+0x31]
  41688b:	mov    eax,DWORD PTR [ebx-0x8]
  41688e:	loope  0x4168fb
  416890:	mov    edx,0x815786ff
  416895:	les    ebp,FWORD PTR [ecx]
  416897:	lea    eax,[ebx-0x4]
  41689a:	stos   BYTE PTR es:[edi],al
  41689b:	leave  
  41689c:	sqrtps xmm7,XMMWORD PTR [edx-0x45adf43f]
  4168a3:	rol    DWORD PTR [edi],1
  4168a5:	push   eax
  4168a6:	pop    esi
  4168a7:	sar    ebx,0x8b
  4168aa:	dec    esp
  4168ab:	mov    ecx,0x8ae4ccc0
  4168b0:	in     al,dx
  4168b1:	push   ecx
  4168b2:	outs   dx,BYTE PTR ds:[esi]
  4168b3:	sar    ebx,1
  4168b5:	add    BYTE PTR [ecx],dh
  4168b7:	adc    al,0x0
  4168b9:	jmp    0x4168e3
  4168bb:	mov    eax,DWORD PTR [ebx-0x4]
  4168be:	mov    dl,0x53
  4168c0:	dec    DWORD PTR [eax+0x4d89586c]
  4168c6:	sbb    eax,0xa2104b1b
  4168cb:	test   DWORD PTR [eax+0x53133955],0x29e36fc
  4168d5:	mov    ebp,DWORD PTR [eax+ecx*1+0x1]
  4168d9:	dec    ebp
  4168da:	cmc    
  4168db:	push   es
  4168dc:	mov    dh,0x11
  4168de:	sub    dl,BYTE PTR [edx+0x74]
  4168e1:	pop    es
  4168e2:	test   eax,0x14
  4168e7:	add    BYTE PTR [ecx],dh
  4168e9:	imul   eax,DWORD PTR [ebx+ebp*8],0x1
  4168ed:	and    eax,eax
  4168ef:	mov    edx,esp
  4168f1:	mov    eax,0x47f5ccc0
  4168f6:	int3   
  4168f7:	int3   
  4168f8:	in     eax,dx
  4168f9:	inc    edi
  4168fa:	int3   
  4168fb:	int3   
  4168fc:	in     eax,0x47
  4168fe:	int3   
  4168ff:	int3   
  416900:	add    al,0x8b
  416902:	in     al,dx
  416903:	mov    ecx,0x1449
  416908:	adc    eax,0x2489078b
  41690d:	add    al,0x56
  41690f:	inc    ecx
  416910:	xor    DWORD PTR [ecx+0x4775ccc0],edi
  416916:	int3   
  416917:	int3   
  416918:	ins    DWORD PTR es:[edi],dx
  416919:	inc    edi
  41691a:	int3   
  41691b:	int3   
  41691c:	gs inc edi
  41691e:	int3   
  41691f:	int3   
  416920:	add    al,0x8b
  416922:	in     al,dx
  416923:	adc    DWORD PTR [ebp+0x3],0xffffff89
  416927:	inc    ebp
  416928:	sub    DWORD PTR [ebx+0x7310478],edx
  41692e:	test   BYTE PTR [eax-0x74ffebcf],cl
  416934:	hlt    
  416935:	or     ecx,DWORD PTR [ecx-0x156ccaaf]
  41693b:	or     BYTE PTR [eax+0x69],ah
  41693e:	xchg   DWORD PTR [ebp+0x25],edx
  416941:	mov    al,BYTE PTR [ebx+0x8]
  416944:	mov    dl,0x54
  416946:	or     BYTE PTR [ecx+0x45c56474],cl
  41694c:	add    BYTE PTR [eax],al
  41694e:	adc    eax,0x31000015
  416953:	imul   eax,DWORD PTR [edi],0x8158748b
  416959:	shl    DWORD PTR [eax],0x8b
  41695c:	dec    ebx
  41695d:	cld    
  41695e:	stos   BYTE PTR es:[edi],al
  41695f:	mov    edi,0x60843bfb
  416964:	jno    0x4169ac
  416966:	mov    edx,0x6c8bfbcf
  41696b:	fs or  eax,0xbed33db7
  416971:	cli    
  416972:	cmp    eax,0x3c03fa91
  416977:	and    cl,BYTE PTR [ecx+0x4b89bd45]
  41697d:	lock es popf 
  416980:	adc    al,0x41
  416982:	mov    al,0x72
  416984:	std    
  416985:	rdtsc  
  416987:	adc    al,0x87
  416989:	push   ebp
  41698a:	cdq    
  41698b:	mov    DWORD PTR [ebx+0x8],eax
  41698e:	stos   BYTE PTR es:[edi],al
  41698f:	(bad)  
  416990:	or     eax,DWORD PTR [ebx]
  416992:	cmp    DWORD PTR [ecx+0x10baf853],ecx
  416998:	lsl    esi,sp
  41699b:	add    ecx,DWORD PTR [ecx+0x5389294d]
  4169a1:	or     al,0x32
  4169a3:	add    ecx,DWORD PTR [ecx+0x48b694d]
  4169a9:	or     cl,BYTE PTR [edx-0x55]
  4169ac:	mov    DWORD PTR [ebp+0x29],edx
  4169af:	mov    DWORD PTR [ebx+0x8],eax
  4169b2:	add    BYTE PTR [eax],al
  4169b4:	xor    dl,dl
  4169b6:	add    ecx,DWORD PTR [ecx+0x6be70bec]
  4169bc:	ds push ebp
  4169be:	std    
  4169bf:	mov    ecx,DWORD PTR [edi+esi*4-0x40]
  4169c3:	int3   
  4169c4:	test   BYTE PTR [ecx+0x301583ec],cl
  4169ca:	mov    DWORD PTR [ebp+0x29],eax
  4169cd:	mov    eax,DWORD PTR [ebx-0x1c]
  4169d0:	stos   BYTE PTR es:[edi],al
  4169d1:	(bad)  
  4169d2:	jecxz  0x41695f
  4169d4:	fs jo  0x4169d8
  4169d7:	push   ecx
  4169d8:	inc    ebp
  4169d9:	mov    edx,DWORD PTR [ebx-0x18]
  4169dc:	stos   BYTE PTR es:[edi],al
  4169dd:	into   
  4169de:	out    0x8b,eax
  4169e0:	test   eax,0x31000093
  4169e5:	mov    ecx,DWORD PTR [ebx-0x10]
  4169e8:	mov    dl,0xd6
  4169ea:	out    dx,eax
  4169eb:	add    BYTE PTR [esi],ch
  4169ed:	nop
  4169ee:	stc    
  4169ef:	add    BYTE PTR [ecx],dh
  4169f1:	adc    al,0x89
  4169f3:	push   ebp
  4169f4:	cmp    DWORD PTR [ecx],edx
  4169f6:	push   ebx
  4169f7:	lock mov eax,0x748bdfbe
  4169fd:	je     0x416980
  4169ff:	js     0x416a22
  416a01:	adc    al,0xd
  416a03:	test   BYTE PTR [ebx+edx*1+0x141b0000],dl
  416a0a:	push   0x0
  416a0c:	stos   BYTE PTR es:[edi],al
  416a0d:	(bad)  
  416a0e:	fisttp WORD PTR [ebx+0x51010bfc]
  416a14:	cmp    eax,0x15fcc2
  416a19:	add    cl,cl
  416a1b:	mov    esi,0xcea8003e
  416a20:	sti    
  416a21:	mov    ebp,esp
  416a23:	jae    0x4169a6
  416a25:	cmp    BYTE PTR [ecx],dh
  416a27:	loopne 0x416a3f
  416a29:	mov    esi,esp
  416a2b:	jae    0x4169b6
  416a2d:	push   ebp
  416a2e:	sub    DWORD PTR [ecx],edx
  416a30:	jns    0x45caca32
  416a36:	push   ecx
  416a37:	mov    BYTE PTR [ebx+0x8],cl
  416a3a:	xor    cl,ah
  416a3c:	jns    0x182ad22e
  416a42:	stos   BYTE PTR es:[edi],al
  416a43:	mov    esi,0x1c748bdf
  416a48:	add    DWORD PTR [edx+0x41],eax
  416a4b:	popf   
  416a4c:	inc    ebx
  416a4d:	hlt    
  416a4e:	stos   BYTE PTR es:[edi],al
  416a4f:	loope  0x416a30
  416a51:	mov    edi,DWORD PTR [esp+ebx*1+0x1]
  416a55:	adc    DWORD PTR [eax+0x6cc7ebe9],edi
  416a5b:	dec    esp
  416a5c:	add    BYTE PTR [eax],al
  416a5e:	xor    DWORD PTR [ecx+ecx*4],edx
  416a61:	inc    ebp
  416a62:	adc    DWORD PTR [eax-0x37ceef88],ebx
  416a68:	or     al,0x8b
  416a6a:	je     0x416aa0
  416a6c:	cmp    DWORD PTR [ecx],0xc704c831
  416a72:	ins    BYTE PTR es:[edi],dx
  416a73:	dec    esp
  416a74:	(bad)  
  416a75:	push   DWORD PTR [ecx]
  416a77:	adc    al,0x89
  416a79:	push   ebp
  416a7a:	mov    ebp,0x3a97
  416a7f:	add    BYTE PTR [ebp-0x4b],al
  416a82:	mov    BYTE PTR [ebp-0x43],al
  416a85:	lahf   
  416a86:	or     BYTE PTR [ecx+0x1490],al
  416a8c:	mov    cl,0xc8
  416a8e:	sbb    ecx,DWORD PTR [ebx+0x2894804]
  416a94:	dec    esp
  416a95:	push   ebx
  416a96:	std    
  416a97:	dec    DWORD PTR [esi]
  416a99:	in     al,0x88
  416a9b:	dec    ebp
  416a9c:	test   ebp,esp
  416a9e:	out    0xb5,eax
  416aa0:	jl     0x416af5
  416aa2:	std    
  416aa3:	sub    DWORD PTR [ebp+0x1c],0xffffff87
  416aa7:	inc    ebp
  416aa8:	lea    edi,[edi]
  416aaa:	sbb    al,0x8b
  416aac:	cld    
  416aad:	inc    edi
  416aae:	mov    DWORD PTR [edx],eax
  416ab0:	stos   BYTE PTR es:[edi],al
  416ab1:	loope  0x416aba
  416ab3:	(bad)  
  416ab4:	std    
  416ab5:	sbb    eax,DWORD PTR [edx]
  416ab7:	push   edx
  416ab8:	mov    edx,0x5950fbd9
  416abd:	stos   DWORD PTR es:[edi],eax
  416abe:	sti    
  416abf:	(bad)  
  416ac0:	ds xchg edi,eax
  416ac2:	les    ecx,FWORD PTR [eax]
  416ac4:	test   al,0xd9
  416ac6:	fisttp DWORD PTR [ebx+0x5589407c]
  416acc:	add    eax,0x748b0f9d
  416ad1:	dec    eax
  416ad2:	add    eax,0xf4439d2d
  416ad8:	mov    edx,0xf083ebe0
  416add:	pop    ss
  416ade:	xchg   DWORD PTR [ebp+0xd],ecx
  416ae1:	aas    
  416ae2:	xchg   ebp,eax
  416ae3:	mov    eax,DWORD PTR [eax]
  416ae5:	add    BYTE PTR [esp+esi*1-0x7f],bl
  416ae9:	ret    0x9d45
  416aec:	push   ebx
  416aed:	loopne 0x416ac7
  416aef:	and    ebp,edi
  416af1:	(bad)  
  416af2:	ficomp WORD PTR [esi+0x5ff25de3]
  416af8:	int3   
  416af9:	int3   
  416afa:	fs lahf 
  416afc:	in     al,dx
  416afd:	adc    ebp,0x1b
  416b00:	push   0xffd433f0
  416b05:	(bad)  
  416b06:	sbb    al,0x54
  416b08:	push   ebx
  416b09:	inc    ecx
  416b0a:	xor    DWORD PTR [ebp+0x5019f843],ebx
  416b10:	add    al,BYTE PTR [eax+0x31]
  416b13:	lahf   
  416b14:	inc    ebx
  416b15:	clc    
  416b16:	add    DWORD PTR [esi+edi*1],edi
  416b19:	std    
  416b1a:	mov    ss,WORD PTR [edx-0x7f]
  416b1d:	les    edi,FWORD PTR [ecx]
  416b1f:	popf   
  416b20:	inc    ebx
  416b21:	cld    
  416b22:	stos   BYTE PTR es:[edi],al
  416b23:	loopne 0x416b34
  416b25:	push   ecx
  416b26:	stos   BYTE PTR es:[edi],al
  416b27:	call   0xd8fbbd37
  416b2c:	pop    es
  416b2d:	push   eax
  416b2e:	callw  0xf72d
  416b32:	push   esp
  416b33:	lock ror ah,0x65
  416b37:	pop    edi
  416b38:	int3   
  416b39:	int3   
  416b3a:	in     al,0x9e
  416b3c:	in     al,dx
  416b3d:	mov    eax,ds:0x3eea25
  416b42:	ja     0x416b57
  416b44:	push   0x56281c8b
  416b49:	inc    ecx
  416b4a:	add    BYTE PTR [eax],al
  416b4c:	xor    DWORD PTR [ebx+0x55e30150],ebx
  416b52:	mov    BYTE PTR [eax+0x34],dl
  416b55:	out    dx,eax
  416b56:	ror    ah,0xe5
  416b59:	pusha  
  416b5a:	int3   
  416b5b:	int3   
  416b5c:	fs popf 
  416b5e:	in     al,dx
  416b5f:	adc    DWORD PTR ds:0x67109f21,0xffffffd3
  416b66:	dec    DWORD PTR [edx+0x3ec705e3]
  416b6c:	mov    edx,0x38b2fd4
  416b71:	sahf   
  416b72:	sar    BYTE PTR [esi],cl
  416b74:	stos   BYTE PTR es:[edi],al
  416b75:	fmul   QWORD PTR [ebx]
  416b77:	mov    eax,DWORD PTR [ebx]
  416b79:	pushf  
  416b7a:	dec    ebx
  416b7b:	hlt    
  416b7c:	mov    edx,0x798bf3d7
  416b81:	and    BYTE PTR [edi+0x539db94d],al
  416b87:	clc    
  416b88:	test   al,0xe7
  416b8a:	sti    
  416b8b:	mov    eax,0x1430
  416b90:	lods   al,BYTE PTR ds:[esi]
  416b91:	push   esp
  416b92:	je     0x416bd8
  416b94:	mov    dl,0xcf
  416b96:	test   DWORD PTR [eax],0xc031181c
  416b9c:	call   0x4f9d:0x894d8910
  416ba3:	sbb    BYTE PTR [edx],bh
  416ba5:	out    0x7,eax
  416ba7:	jne    0x416bc1
  416ba9:	popf   
  416baa:	inc    ebx
  416bab:	clc    
  416bac:	mov    edx,0x890bdf
  416bb1:	add    cl,bh
  416bb3:	das    
  416bb4:	mov    DWORD PTR [ebp+0x59],edx
  416bb7:	popf   
  416bb8:	inc    ebx
  416bb9:	adc    BYTE PTR [eax+0x30b817d6],ch
  416bbf:	adc    al,0x0
  416bc1:	add    BYTE PTR [edx+0x2c],bl
  416bc4:	mov    DWORD PTR [ebp+0x39],ecx
  416bc7:	popf   
  416bc8:	jns    0x45cab7aa
  416bce:	sub    DWORD PTR ds:0x189cfc43,ecx
  416bd4:	xor    eax,eax
  416bd6:	or     bl,BYTE PTR [eax]
  416bd8:	jmp    0x8995ce90
  416bdd:	in     eax,0x6c
  416bdf:	push   ebp
  416be0:	int3   
  416be1:	int3   
  416be2:	cmc    
  416be3:	pop    edi
  416be4:	int3   
  416be5:	int3   
  416be6:	in     eax,dx
  416be7:	pop    edi
  416be8:	int3   
  416be9:	int3   
  416bea:	in     eax,0x5f
  416bec:	int3   
  416bed:	int3   
  416bee:	test   BYTE PTR [ebp+0x2bd583ec],bl
  416bf4:	lds    eax,FWORD PTR [ebp-0x27]
  416bf7:	adc    esi,DWORD PTR [eax]
  416bf9:	add    BYTE PTR [ecx],dh
  416bfb:	mov    esp,0x14710303
  416c00:	lahf   
  416c01:	cld    
  416c02:	pop    esp
  416c03:	sar    edi,cl
  416c05:	dec    edi
  416c06:	leave  
  416c07:	in     al,0xfb
  416c09:	push   DWORD PTR [esi-0x47f73b6c]
  416c0f:	(bad)  
  416c10:	repz push 0xfffffff1
  416c13:	pushf  
  416c14:	dec    ebx
  416c15:	clc    
  416c16:	add    BYTE PTR [eax],al
  416c18:	add    BYTE PTR [ebp-0x2d0323ed],bl
  416c1e:	dec    DWORD PTR [edx+0x6a4fe3f3]
  416c24:	xor    DWORD PTR [ecx+0x53],edx
  416c27:	hlt    
  416c28:	shl    BYTE PTR [edi+0x53],cl
  416c2b:	inc    ecx
  416c2c:	xor    DWORD PTR [ebp-0x2cfb2bc5],edx
  416c32:	(bad)  
  416c33:	(bad)  
  416c34:	fcomp  QWORD PTR [eax]
  416c36:	mov    eax,0x143102
  416c3b:	jmp    0x416c08
  416c3d:	pushf  
  416c3e:	or     eax,DWORD PTR [eax]
  416c40:	xor    edx,esp
  416c42:	dec    DWORD PTR [eax+0x6843f4]
  416c48:	in     al,0x12
  416c4a:	add    BYTE PTR [eax+0x31],ch
  416c4d:	push   ss
  416c4e:	inc    eax
  416c4f:	add    BYTE PTR [edx+0x7055d429],bh
  416c55:	adc    al,0x7f
  416c57:	ret    0x1231
  416c5a:	add    BYTE PTR [eax],al
  416c5c:	cmp    DWORD PTR [esi+ebx*4],0xfffffffe
  416c60:	push   cs
  416c61:	push   eax
  416c62:	add    esp,0x2008c35
  416c68:	jno    0x416c7e
  416c6a:	sub    eax,DWORD PTR [eax]
  416c6c:	xor    edx,DWORD PTR [eax+eax*1]
  416c6f:	mov    edi,DWORD PTR [eax+ebp*2]
  416c72:	push   ebx
  416c73:	inc    ecx
  416c74:	xor    ebx,edi
  416c76:	(bad)  
  416c77:	mov    DWORD PTR [eax+ebx*1],ebp
  416c7a:	push   esi
  416c7b:	inc    ecx
  416c7c:	add    BYTE PTR [eax],al
  416c7e:	xor    DWORD PTR [ebx-0x2a98fbed],ebx
  416c84:	call   DWORD PTR [ecx-0x70]
  416c87:	push   0xe4314153
  416c8c:	mov    BYTE PTR [ebp-0x3f],cl
  416c8f:	in     eax,0xe7
  416c91:	popf   
  416c92:	lods   eax,DWORD PTR ds:[esi]
  416c93:	dec    edi
  416c94:	std    
  416c95:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416c99:	adc    eax,0x3ee985
  416c9e:	xor    ch,cl
  416ca0:	pop    es
  416ca1:	mov    esp,esp
  416ca3:	cmp    ecx,DWORD PTR [ecx-0x1db066ab]
  416ca9:	mov    edx,DWORD PTR [ecx+esi*8+0x6065ccc0]
  416cb0:	int3   
  416cb1:	int3   
  416cb2:	add    al,0x9b
  416cb4:	in     al,dx
  416cb5:	mov    ebp,esp
  416cb7:	sbb    edi,DWORD PTR [ecx]
  416cb9:	inc    ebp
  416cba:	sub    eax,0xec8b04c3
  416cbf:	sbb    ebp,ecx
  416cc1:	add    eax,0x4589135a
  416cc6:	xor    eax,0x6dccc0f1
  416ccb:	pusha  
  416ccc:	int3   
  416ccd:	int3   
  416cce:	gs pusha 
  416cd0:	int3   
  416cd1:	int3   
  416cd2:	test   BYTE PTR [ebx+0x1583ec],bl
  416cd8:	lds    eax,FWORD PTR [ebp+0x1d]
  416cdb:	adc    al,0x70
  416cdd:	add    DWORD PTR [ecx],esi
  416cdf:	fwait
  416ce0:	inc    ebx
  416ce1:	or     BYTE PTR [eax],al
  416ce3:	add    BYTE PTR [eax+0x748bd7d8],bh
  416ce9:	ins    BYTE PTR es:[edi],dx
  416cea:	mov    DWORD PTR [ebp+0x29],edx
  416ced:	adc    ecx,DWORD PTR [edi+0x3c]
  416cf0:	test   al,0xe8
  416cf2:	fisttp WORD PTR [ebx-0x48f2cb8c]
  416cf8:	jns    0x416d22
  416cfa:	mov    DWORD PTR [ebp-0x2f],edx
  416cfd:	mov    al,ds:0x9d390a44
  416d02:	inc    ebx
  416d03:	call   0x40429561
  416d08:	xor    DWORD PTR [ebx-0x2a9b03f5],ebx
  416d0e:	call   DWORD PTR [eax-0x37]
  416d11:	fdivp  st(0),st
  416d13:	jmp    FWORD PTR [esi-0x47f73b6e]
  416d19:	fsubr  st,st(7)
  416d1b:	push   0xfffffff1
  416d1d:	mov    ebx,0x14312fff
  416d22:	push   0x150100
  416d27:	push   0x31
  416d29:	dec    edi
  416d2a:	push   ebx
  416d2b:	lock test al,0xd8
  416d2e:	jecxz  0x416cbb
  416d30:	fdiv   QWORD PTR [ebx]
  416d32:	mov    DWORD PTR [edx+0x5],eax
  416d35:	in     al,0x88
  416d37:	dec    ebp
  416d38:	cmp    ebp,esp
  416d3a:	mov    BYTE PTR [ebp+0x55],dl
  416d3d:	loope  0x416d26
  416d3f:	rcl    DWORD PTR [esi+ecx*2-0x3],0x83
  416d44:	jne    0x416d65
  416d46:	lds    eax,FWORD PTR [ebp+0x0]
  416d49:	add    BYTE PTR ds:0x31000013,bh
  416d4f:	cmp    eax,DWORD PTR [edi]
  416d51:	mov    ebp,esp
  416d53:	inc    edi
  416d54:	add    eax,0xf4439b30
  416d5a:	mov    edx,0xe60fdfdf
  416d5f:	jecxz  0x416d66
  416d61:	cmp    DWORD PTR [eax+ecx*2+0x71],edi
  416d65:	pop    ecx
  416d66:	mov    edx,0x8983e7d7
  416d6b:	sub    BYTE PTR [eax],al
  416d6d:	je     0x416de3
  416d6f:	cdq    
  416d70:	dec    ebx
  416d71:	call   0x513928
  416d76:	adc    BYTE PTR gs:[ecx+0x4299d955],cl
  416d7d:	adc    BYTE PTR [edx-0x7f742021],ch
  416d83:	adc    BYTE PTR [ebx-0x76b2debc],cl
  416d89:	dec    ebp
  416d8a:	rol    DWORD PTR [ecx],1
  416d8c:	shl    bh,cl
  416d8e:	inc    eax
  416d8f:	adc    BYTE PTR [ecx-0x52e22eab],cl
  416d95:	inc    edx
  416d96:	ins    DWORD PTR es:[edi],dx
  416d97:	in     al,0x88
  416d99:	inc    ebp
  416d9a:	cdq    
  416d9b:	cdq    
  416d9c:	dec    ebx
  416d9d:	or     BYTE PTR [edx],dh
  416d9f:	fcom   QWORD PTR [ebx]
  416da1:	push   ecx
  416da2:	stos   BYTE PTR es:[edi],al
  416da3:	out    0xe7,eax
  416da5:	mov    esi,esp
  416da7:	aaa    
  416da8:	add    DWORD PTR [edx+0x35],eax
  416dab:	in     al,0xe7
  416dad:	push   ebp
  416dae:	add    BYTE PTR [eax],al
  416db0:	jl     0x416dff
  416db2:	std    
  416db3:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416db7:	dec    ebp
  416db8:	pop    ecx
  416db9:	xchg   ecx,eax
  416dba:	mov    edi,0xe7dfb828
  416dbf:	jmp    0x416d84
  416dc1:	cdq    
  416dc2:	push   ebx
  416dc3:	in     al,0x3
  416dc5:	cmp    al,0xe
  416dc7:	cld    
  416dc8:	dec    esi
  416dc9:	dec    ebp
  416dca:	add    esp,0x323bc2d
  416dd0:	icebp  
  416dd1:	adc    ebx,DWORD PTR [edi-0x2d2304]
  416dd7:	dec    edi
  416dd8:	sbb    DWORD PTR [ecx-0x6ed90006],ebx
  416dde:	les    ecx,FWORD PTR [eax]
  416de0:	test   al,0xd6
  416de2:	fild   DWORD PTR [ebx+0x41534c54]
  416de8:	xor    DWORD PTR [ebx+esi*2],edx
  416deb:	or     bh,BYTE PTR [edx+0x7055f01e]
  416df1:	adc    al,0x4f
  416df3:	call   FWORD PTR [eax+esi*2-0x7f]
  416df7:	cmp    eax,0x3ee6e9
  416dfc:	xor    edi,eax
  416dfe:	sbb    ebp,DWORD PTR [edx+0x71]
  416e01:	mov    esp,0x14312fff
  416e06:	mov    DWORD PTR [ebp-0x33],edx
  416e09:	loope  0x416d93
  416e0b:	inc    ebp
  416e0c:	rcr    DWORD PTR [eax+0x4d603448],1
  416e12:	push   ebx
  416e13:	lock add BYTE PTR [eax],al
  416e16:	xchg   edx,eax
  416e17:	addr16 push ebx
  416e19:	inc    ecx
  416e1a:	xor    DWORD PTR [ecx],edi
  416e1c:	adc    ebp,DWORD PTR [edx-0xf]
  416e1f:	mov    ebx,0x14312fff
  416e24:	mov    DWORD PTR [ebp-0x6b],edx
  416e27:	loope  0x416e92
  416e29:	add    BYTE PTR [esi+0x5da3efe6],cl
  416e2f:	out    0x3e,al
  416e31:	add    BYTE PTR [edx-0xfaa2bf2],dh
  416e37:	adc    eax,DWORD PTR [eax]
  416e39:	jne    0x416e7f
  416e3b:	mov    edx,0x431683f
  416e40:	add    BYTE PTR [eax],al
  416e42:	stos   BYTE PTR es:[edi],al
  416e43:	(bad)  
  416e44:	sti    
  416e45:	push   eax
  416e46:	retf   
  416e47:	adc    edi,ebp
  416e49:	push   ebp
  416e4a:	inc    ecx
  416e4b:	jo     0x416e21
  416e4d:	push   ebp
  416e4e:	lock adc ecx,DWORD PTR [ecx+0x4b9a554d]
  416e55:	fsubr  DWORD PTR [edx+0x748bd7e6]
  416e5b:	ins    BYTE PTR es:[edi],dx
  416e5c:	add    DWORD PTR [edx+0x65],eax
  416e5f:	popf   
  416e60:	inc    ebx
  416e61:	loopne 0x416e0d
  416e63:	(bad)  
  416e65:	mov    eax,DWORD PTR [eax+0x748b51e4]
  416e6b:	xor    BYTE PTR [eax-0x75],dl
  416e6e:	xor    al,0x60
  416e70:	push   ebx
  416e71:	inc    ecx
  416e72:	xor    ebp,esp
  416e74:	out    0x91,eax
  416e76:	cmc    
  416e77:	dec    ebx
  416e78:	std    
  416e79:	add    DWORD PTR [eax],0x0
  416e7c:	cmc    
  416e7d:	sbb    BYTE PTR [ecx-0x45682eab],cl
  416e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e84:	xor    DWORD PTR [eax+eax*1],edx
  416e87:	add    BYTE PTR [ebp+0xd],bl
  416e8a:	mov    DWORD PTR [ebp-0x2f],eax
  416e8d:	lahf   
  416e8e:	dec    ebx
  416e8f:	fdiv   DWORD PTR [edx]
  416e91:	pushf  
  416e92:	mov    al,ds:0x87143100
  416e97:	dec    ebp
  416e98:	lds    ebx,FWORD PTR [edi+0x60d0e053]
  416e9e:	push   ebx
  416e9f:	inc    ecx
  416ea0:	xor    edi,edi
  416ea2:	inc    ecx
  416ea3:	xor    al,0xd2
  416ea5:	adc    BYTE PTR [esi+0x41],dl
  416ea8:	xor    DWORD PTR [edi-0x2b18fbf5],ebx
  416eae:	call   DWORD PTR [eax-0x46]
  416eb1:	and    esp,edx
  416eb3:	push   ebp
  416eb4:	lock adc edx,DWORD PTR [edx-0x75]
  416eb8:	in     al,dx
  416eb9:	aaa    
  416eba:	push   eax
  416ebb:	call   0x3ebcad
  416ec0:	mov    dl,0x50
  416ec2:	or     al,0x8b
  416ec4:	in     al,dx
  416ec5:	xor    ecx,DWORD PTR [ecx+0x3ee17d15]
  416ecb:	add    BYTE PTR [edx],dh
  416ecd:	in     eax,0x27
  416ecf:	mov    DWORD PTR [eax+eiz*1],ebx
  416ed2:	push   esi
  416ed3:	inc    ecx
  416ed4:	xor    DWORD PTR [edi-0x2b2307c5],edx
  416eda:	(bad)  
  416edb:	jmp    DWORD PTR [eax+edi*8+0xd49e]
  416ee2:	jl     0x416eb9
  416ee4:	dec    DWORD PTR [edi-0x56]
  416ee7:	sbb    BYTE PTR [esi+edx*2],dl
  416eea:	jo     0x416f00
  416eec:	dec    edi
  416eed:	mov    esp,DWORD PTR [esp+eax*2]
  416ef0:	push   ebx
  416ef1:	inc    ecx
  416ef2:	xor    esi,esp
  416ef4:	out    0x75,eax
  416ef6:	std    
  416ef7:	dec    edx
  416ef8:	std    
  416ef9:	sub    ebp,0x17
  416efc:	lahf   
  416efd:	aam    0x84
  416eff:	aad    0xff
  416f01:	dec    edi
  416f02:	(bad)  
  416f04:	idiv   bh
  416f06:	ficom  WORD PTR [esi-0x4c35fb3c]
  416f0c:	addr16 xor al,0x32
  416f0f:	aam    0xff
  416f11:	mov    dh,BYTE PTR [eax+ecx*2]
  416f14:	push   ebx
  416f15:	inc    ecx
  416f16:	xor    ebp,esp
  416f18:	out    0x51,eax
  416f1a:	mov    eax,0x7583fd4a
  416f1f:	sbb    eax,DWORD PTR [edi+0x139e7d45]
  416f25:	aam    0x4
  416f27:	aad    0xff
  416f29:	push   ecx
  416f2a:	stos   BYTE PTR es:[edi],al
  416f2b:	rcr    bh,1
  416f2d:	mov    edi,DWORD PTR [eax+eiz*2]
  416f30:	push   ebx
  416f31:	inc    ecx
  416f32:	xor    DWORD PTR [edi],edx
  416f34:	dec    eax
  416f35:	sub    al,ah
  416f37:	sahf   
  416f38:	adc    esi,eax
  416f3a:	(bad)  
  416f3c:	call   DWORD PTR [ecx+0x59]
  416f3f:	(bad)  
  416f40:	sti    
  416f41:	jmp    DWORD PTR [esi-0x6a]
  416f44:	les    ecx,FWORD PTR [eax+eax*1]
  416f47:	add    BYTE PTR [eax+0x31415343],dl
  416f4d:	adc    DWORD PTR [eax+0x53],edx
  416f50:	xor    BYTE PTR [ecx+eiz*4],dl
  416f53:	sbb    al,0xdf
  416f55:	aam    0xff
  416f57:	mov    esp,gs
  416f59:	dec    ebx
  416f5a:	dec    edi
  416f5b:	push   0xfffffff1
  416f5d:	mov    ebp,0x28448b05
  416f62:	push   esi
  416f63:	inc    ecx
  416f64:	xor    esi,esp
  416f66:	cld    
  416f67:	push   ebp
  416f68:	add    eax,0x16fbe23d
  416f6d:	dec    edx
  416f6e:	mov    eax,0x143101
  416f73:	mov    ecx,DWORD PTR [eax+ebp*8]
  416f76:	rol    DWORD PTR [ecx+esi*1],0x58
  416f7a:	int3   
  416f7b:	int3   
  416f7c:	in     eax,0x58
  416f7e:	int3   
  416f7f:	int3   
  416f80:	test   BYTE PTR [ebp+0x1c6c8bec],bl
  416f86:	mov    DWORD PTR [eax-0x23],eax
  416f89:	out    0xc0,eax
  416f8b:	int3   
  416f8c:	in     eax,0x58
  416f8e:	int3   
  416f8f:	int3   
  416f90:	fs popf 
  416f92:	in     al,dx
  416f93:	push   ebx
  416f94:	pop    edi
  416f95:	loope  0x416f1f
  416f97:	cmp    eax,0x3edfd1
  416f9c:	stos   BYTE PTR es:[edi],al
  416f9d:	daa    
  416f9e:	in     al,dx
  416f9f:	push   ebp
  416fa0:	lock adc ecx,DWORD PTR [ecx+0x3edf8935]
  416fa7:	add    dh,bh
  416fa9:	jmp    0x41cd06
  416fae:	jb     0x417008
  416fb0:	int3   
  416fb1:	int3   
  416fb2:	in     al,0x9c
  416fb4:	in     al,dx
  416fb5:	push   ecx
  416fb6:	sbb    eax,edx
  416fb8:	add    BYTE PTR [eax+0x31],al
  416fbb:	jae    0x416fb9
  416fbd:	push   ebp
  416fbe:	lock adc edx,DWORD PTR [eax-0x18]
  416fc2:	popf   
  416fc3:	dec    esp
  416fc4:	std    
  416fc5:	push   DWORD PTR [edx-0xb76f7b0]
  416fcb:	inc    edi
  416fcc:	mov    DWORD PTR [ebp+0x29],ecx
  416fcf:	jecxz  0x41703a
  416fd1:	add    BYTE PTR [edx-0xfa9e7e1],bh
  416fd7:	adc    edx,DWORD PTR [edx-0x1]
  416fda:	in     al,0x47
  416fdc:	mov    ebp,esp
  416fde:	aam    0x54
  416fe0:	int3   
  416fe1:	int3   
  416fe2:	test   BYTE PTR [ebp-0xfea7c14],bl
  416fe8:	les    eax,FWORD PTR [ebp+0x19]
  416feb:	adc    al,0x0
  416fed:	add    BYTE PTR [ecx],dh
  416fef:	push   ecx
  416ff0:	inc    ebx
  416ff1:	fmul   QWORD PTR [ecx-0x11ffffec]
  416ff7:	into   
  416ff8:	repz add DWORD PTR [ecx],esi
  416ffb:	adc    al,0x0
  416ffd:	(bad)  
  416ffe:	ins    BYTE PTR es:[edi],dx
  416fff:	dec    eax
  417000:	add    BYTE PTR [eax],al
  417002:	xor    DWORD PTR [eax*8+0x13cd45],edx
  417009:	add    BYTE PTR [ecx],dh
  41700b:	popf   
  41700c:	dec    ebx
  41700d:	or     BYTE PTR [eax+0x55f016],ch
  417013:	add    BYTE PTR [eax+0x14],dh
  417016:	call   0xfd8a2ec4
  41701b:	mov    eax,ds:0x3edec1
  417020:	or     al,0x49
  417022:	std    
  417023:	add    BYTE PTR [ecx],dh
  417025:	ror    BYTE PTR [ebx],0xc7
  417028:	sub    al,0x4c
  41702a:	push   ebx
  41702b:	inc    ecx
  41702c:	xor    DWORD PTR [eax+eax*1],edx
  41702f:	add    BYTE PTR [ecx],dh
  417031:	cmp    eax,0x4c34c70a
  417036:	push   ebx
  417037:	inc    ecx
  417038:	xor    DWORD PTR [ebx],edx
  41703a:	add    BYTE PTR [eax],al
  41703c:	xor    DWORD PTR [ebp-0x2d230fc5],edx
  417042:	(bad)  
  417043:	jmp    esp
  417045:	sbb    eax,0xde6905c5
  41704a:	add    BYTE PTR ds:[ecx],dh
  41704d:	adc    al,0x0
  41704f:	add    BYTE PTR [edx-0xfaa07fa],dh
  417055:	adc    eax,DWORD PTR [eax]
  417057:	jne    0x41708d
  417059:	mov    esi,0x5424feff
  41705e:	push   ebx
  41705f:	inc    ecx
  417060:	xor    DWORD PTR [ebp-0x10],esi
  417063:	push   ebp
  417064:	jo     0x41707a
  417066:	mov    DWORD PTR ds:0x3ee221,ecx
  41706c:	test   al,0xd9
  41706e:	out    0x8b,eax
  417070:	cmp    al,0x44
  417072:	push   ebx
  417073:	inc    ecx
  417074:	xor    DWORD PTR [ebx+0xe843],ebx
  41707a:	xor    dl,dl
  41707c:	cmp    ecx,DWORD PTR [ecx+0x4d893c74]
  417082:	or     DWORD PTR [esi-0x2a7b23f5],ebx
  417088:	jmp    DWORD PTR [edi-0x7f]
  41708b:	adc    eax,DWORD PTR [eax+0x0]
  41708e:	fisub  WORD PTR [ecx]
  417090:	rcl    BYTE PTR [ebp+0x70],0x14
  417094:	mov    eax,ds:0xffd564fc
  417099:	(bad)  
  41709a:	sub    al,0x18
  41709c:	push   esi
  41709d:	inc    ecx
  41709e:	xor    ecx,eax
  4170a0:	add    BYTE PTR [eax+0x31],al
  4170a3:	mov    esp,0x13f1035f
  4170a8:	mov    DWORD PTR ds:0x3ee1a5,edx
  4170ae:	add    edi,DWORD PTR [edx+eax*8]
  4170b1:	not    DWORD PTR [esi+0x39c48147]
  4170b7:	jae    0x4170c1
  4170b9:	push   esi
  4170ba:	lock adc edi,ebp
  4170bd:	adc    eax,0x3ede29
  4170c2:	shr    BYTE PTR [esi+edx*2],cl
  4170c5:	inc    ecx
  4170c6:	xor    DWORD PTR [ebp+0xc],esi
  4170c9:	push   esi
  4170ca:	lock adc edx,DWORD PTR [eax-0x18]
  4170ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170cf:	inc    esi
  4170d0:	std    
  4170d1:	push   DWORD PTR [edx-0xb76fbb0]
  4170d7:	inc    ebx
  4170d8:	mov    DWORD PTR [ebp+0x41],ecx
  4170db:	in     eax,0xe7
  4170dd:	aad    0x0
  4170df:	add    BYTE PTR [edi],bh
  4170e1:	inc    edi
  4170e2:	std    
  4170e3:	sub    DWORD PTR [ebp+0x10],0xffffffa1
  4170e7:	hlt    
  4170e8:	test   ch,dl
  4170ea:	dec    DWORD PTR [edx+0x6a52447c]
  4170f0:	xor    DWORD PTR [ebp-0xc],esi
  4170f3:	push   ebp
  4170f4:	jo     0x41710a
  4170f6:	push   eax
  4170f7:	call   0x3eafa9
  4170fc:	mov    dl,0x4f
  4170fe:	or     al,0x8b
  417100:	ins    BYTE PTR es:[edi],dx
  417101:	inc    esp
  417102:	xchg   DWORD PTR [ebp+0x11],ecx
  417105:	fwait
  417106:	push   ebx
  417107:	cld    
  417108:	sub    ah,cl
  41710a:	out    dx,eax
  41710b:	jae    0x417098
  41710d:	fwait
  41710e:	inc    ebx
  41710f:	loopne 0x417092
  417111:	fwait
  417112:	dec    ebx
  417113:	fadd   QWORD PTR [eax-0x310451c4]
  417119:	inc    esi
  41711a:	add    esp,0x56007339
  417120:	jo     0x417136
  417122:	mov    DWORD PTR ds:0x3ede31,edx
  417128:	add    esi,DWORD PTR [ebp+0xc]
  41712b:	push   esi
  41712c:	lock adc eax,DWORD PTR [ecx]
  41712f:	inc    ebp
  417130:	xchg   ebp,eax
  417131:	jecxz  0x4170bb
  417133:	or     eax,0x3ee09d
  417138:	xor    bl,cl
  41713a:	sti    
  41713b:	push   ecx
  41713c:	cdq    
  41713d:	pop    esi
  41713e:	idiv   edi
  417140:	jle    0x4170d4
  417142:	les    ecx,FWORD PTR [eax+eax*1]
  417145:	add    BYTE PTR [edx+0x403f3e0],ch
  41714b:	push   0x9c4d5501
  417150:	push   ebx
  417151:	in     al,0xaa
  417153:	sar    bl,1
  417155:	add    ebp,esp
  417157:	xchg   DWORD PTR [di+0x4d],eax
  41715b:	call   0x5600:0x191ae04b
  417162:	lock adc eax,DWORD PTR [edi-0x61c5aeb3]
  417169:	(bad)  
  41716a:	je     0x4171b8
  41716c:	add    BYTE PTR [eax],al
  41716e:	xor    DWORD PTR [ecx+ebp*8],edx
  417171:	or     DWORD PTR [edx-0xc7c0821],ebp
  417177:	adc    BYTE PTR [edi+0x439a0955],al
  41717d:	clc    
  41717e:	dec    edx
  41717f:	iret   
  417180:	out    dx,eax
  417181:	jae    0x4171bc
  417183:	cdq    
  417184:	or     esi,esp
  417186:	pop    esp
  417187:	sar    edi,cl
  417189:	add    bh,BYTE PTR [esp+ecx*2-0x77]
  41718d:	adc    DWORD PTR [edx],esi
  41718f:	fcomip st,st(7)
  417191:	mov    eax,ds:0x3edfe5
  417196:	xor    cl,bh
  417198:	test   DWORD PTR [ecx-0x7b466df],0x3e753b0
  4171a2:	xor    DWORD PTR [ecx+ecx*4],edx
  4171a5:	adc    eax,0x3edfbd
  4171aa:	add    BYTE PTR [eax],al
  4171ac:	xor    bl,bh
  4171ae:	div    DWORD PTR [ebx]
  4171b0:	cmp    esi,DWORD PTR [ebx-0xc]
  4171b3:	push   ebp
  4171b4:	lock adc eax,DWORD PTR [ecx]
  4171b7:	inc    ebp
  4171b8:	cdq    
  4171b9:	fwait
  4171ba:	or     bl,ch
  4171bc:	(bad)  
  4171bd:	fwait
  4171be:	sub    esp,esp
  4171c0:	(bad)  
  4171c2:	dec    DWORD PTR [eax+0x4153343c]
  4171c8:	xor    DWORD PTR [ecx],eax
  4171ca:	(bad)  
  4171cb:	mov    DWORD PTR [esp+ebp*2],esp
  4171ce:	push   ebx
  4171cf:	inc    ecx
  4171d0:	xor    DWORD PTR [ecx],eax
  4171d2:	(bad)  
  4171d3:	mov    DWORD PTR [eax+edi*1],edi
  4171d6:	push   ebx
  4171d7:	inc    ecx
  4171d8:	xor    DWORD PTR [esi+ecx*2],edi
  4171db:	test   DWORD PTR [esi+0x45],0xded60d8b
  4171e2:	add    BYTE PTR ds:[eax+0x31b9f7d7],ch
  4171e9:	adc    al,BYTE PTR [eax+0x0]
  4171ec:	mov    al,0x3a
  4171ee:	add    BYTE PTR [edx],al
  4171f0:	xor    DWORD PTR [ecx+ecx*4],edx
  4171f3:	push   ebp
  4171f4:	sbb    ecx,edi
  4171f6:	into   
  4171f7:	mov    DWORD PTR [esp+edi*1],edi
  4171fa:	push   ebx
  4171fb:	inc    ecx
  4171fc:	xor    DWORD PTR [ebx-0x18],esi
  4171ff:	push   ebp
  417200:	jo     0x417216
  417202:	push   eax
  417203:	call   0x3ebc3d
  417208:	mov    dl,0x4f
  41720a:	add    al,0x8b
  41720c:	cmp    al,0x40
  41720e:	push   ebx
  41720f:	inc    ecx
  417210:	add    BYTE PTR [eax],al
  417212:	xor    ebx,esp
  417214:	out    0xd5,eax
  417216:	fild   DWORD PTR [ebp+edi*8-0x7b]
  41721a:	icebp  
  41721b:	mov    esi,0x38f13303
  417220:	sub    cl,BYTE PTR [ebx+0x4153300c]
  417226:	xor    DWORD PTR [ecx+0x6b204c4],edx
  41722c:	clc    
  41722d:	push   ebp
  41722e:	lock adc eax,DWORD PTR [eax]
  417231:	je     0x41726b
  417233:	jae    0x417209
  417235:	push   ebp
  417236:	lock adc eax,DWORD PTR [edi-0x17efb2bc]
  41723d:	pop    ebp
  41723e:	mov    WORD PTR [ebp+edi*8-0x75],es
  417242:	sbb    al,0x20
  417244:	push   esi
  417245:	inc    ecx
  417246:	xor    edx,esp
  417248:	shl    BYTE PTR [ebx],0x71
  41724b:	cwde   
  41724c:	jecxz  0x4172ab
  41724e:	jb     0x4172a7
  417250:	int3   
  417251:	int3   
  417252:	xor    DWORD PTR [eax+eax*1],edx
  417255:	add    BYTE PTR [ecx],dh
  417257:	adc    al,0x0
  417259:	add    BYTE PTR [ecx],dh
  41725b:	adc    al,0x0
  41725d:	add    BYTE PTR [ecx],dh
  41725f:	adc    al,0x0
  417261:	add    BYTE PTR [ecx],dh
  417263:	adc    al,0x0
  417265:	add    BYTE PTR [ecx],dh
  417267:	adc    al,0x0
  417269:	add    BYTE PTR [ecx],dh
  41726b:	adc    al,0x0
  41726d:	add    BYTE PTR [ecx],dh
  41726f:	adc    al,0x0
  417271:	add    BYTE PTR [ecx],dh
  417273:	adc    al,0x0
  417275:	add    BYTE PTR [eax],al
  417277:	add    BYTE PTR [ecx],dh
  417279:	adc    al,0x0
  41727b:	add    BYTE PTR [ecx],dh
  41727d:	adc    al,0x0
  41727f:	add    BYTE PTR [ecx],dh
  417281:	adc    al,0x0
  417283:	add    BYTE PTR [ecx],dh
  417285:	adc    al,0x0
  417287:	add    BYTE PTR [ecx],dh
  417289:	adc    al,0x0
  41728b:	add    BYTE PTR [ecx],dh
  41728d:	adc    al,0x0
  41728f:	add    BYTE PTR [ecx],dh
  417291:	adc    al,0x0
  417293:	add    BYTE PTR [ecx],dh
  417295:	adc    al,0x0
  417297:	add    BYTE PTR [ecx],dh
  417299:	adc    al,0x0
  41729b:	add    BYTE PTR [ecx],dh
  41729d:	adc    al,0x0
  41729f:	add    BYTE PTR [ecx],dh
  4172a1:	adc    al,0x0
  4172a3:	add    BYTE PTR [ecx],dh
  4172a5:	adc    al,0x0
  4172a7:	add    BYTE PTR [ecx],dh
  4172a9:	adc    al,0x0
  4172ab:	add    BYTE PTR [ecx],dh
  4172ad:	adc    al,0x0
  4172af:	add    BYTE PTR [ecx],dh
  4172b1:	adc    al,0x0
  4172b3:	add    BYTE PTR [ecx],dh
  4172b5:	adc    al,0x0
  4172b7:	add    BYTE PTR [ecx],dh
  4172b9:	adc    al,0x0
  4172bb:	add    BYTE PTR [ecx],dh
  4172bd:	adc    al,0x0
  4172bf:	add    BYTE PTR [ecx],dh
  4172c1:	adc    al,0x0
  4172c3:	add    BYTE PTR [ecx],dh
  4172c5:	adc    al,0x0
  4172c7:	add    BYTE PTR [ecx],dh
  4172c9:	adc    al,0x0
  4172cb:	add    BYTE PTR [ecx],dh
  4172cd:	adc    al,0x0
  4172cf:	add    BYTE PTR [ecx],dh
  4172d1:	adc    al,0x0
  4172d3:	add    BYTE PTR [ecx],dh
  4172d5:	adc    al,0x0
  4172d7:	add    BYTE PTR [ecx],dh
  4172d9:	adc    al,0x0
  4172db:	add    BYTE PTR [eax],al
  4172dd:	add    BYTE PTR [ecx],dh
  4172df:	adc    al,0x0
  4172e1:	add    BYTE PTR [ecx],dh
  4172e3:	adc    al,0x0
  4172e5:	add    BYTE PTR [ecx],dh
  4172e7:	adc    al,0x0
  4172e9:	add    BYTE PTR [ecx],dh
  4172eb:	adc    al,0x0
  4172ed:	add    BYTE PTR [ecx],dh
  4172ef:	adc    al,0x0
  4172f1:	add    BYTE PTR [ecx],dh
  4172f3:	adc    al,0x0
  4172f5:	add    BYTE PTR [ecx],dh
  4172f7:	adc    al,0x0
  4172f9:	add    BYTE PTR [ecx],dh
  4172fb:	adc    al,0x0
  4172fd:	add    BYTE PTR [ecx],dh
  4172ff:	adc    al,0x0
  417301:	add    BYTE PTR [ecx],dh
  417303:	adc    al,0x0
  417305:	add    BYTE PTR [ecx],dh
  417307:	adc    al,0x0
  417309:	add    BYTE PTR [ecx],dh
  41730b:	adc    al,0x0
  41730d:	add    BYTE PTR [ecx],dh
  41730f:	adc    al,0x0
  417311:	add    BYTE PTR [ecx],dh
  417313:	adc    al,0x0
  417315:	add    BYTE PTR [ecx],dh
  417317:	adc    al,0x0
  417319:	add    BYTE PTR [ecx],dh
  41731b:	adc    al,0x0
  41731d:	add    BYTE PTR [ecx],dh
  41731f:	adc    al,0x0
  417321:	add    BYTE PTR [ecx],dh
  417323:	adc    al,0x0
  417325:	add    BYTE PTR [ecx],dh
  417327:	adc    al,0x0
  417329:	add    BYTE PTR [ecx],dh
  41732b:	adc    al,0x0
  41732d:	add    BYTE PTR [ecx],dh
  41732f:	adc    al,0x0
  417331:	add    BYTE PTR [ecx],dh
  417333:	adc    al,0x0
  417335:	add    BYTE PTR [ecx],dh
  417337:	adc    al,0x0
  417339:	add    BYTE PTR [ecx],dh
  41733b:	adc    al,0x0
  41733d:	add    BYTE PTR [ecx],dh
  41733f:	adc    al,0x0
  417341:	add    BYTE PTR [eax],al
  417343:	add    BYTE PTR [ecx],dh
  417345:	adc    al,0x0
  417347:	add    BYTE PTR [ecx],dh
  417349:	adc    al,0x0
  41734b:	add    BYTE PTR [ecx],dh
  41734d:	adc    al,0x0
  41734f:	add    BYTE PTR [ecx],dh
  417351:	adc    al,0x0
  417353:	add    BYTE PTR [ecx],dh
  417355:	adc    al,0x0
  417357:	add    BYTE PTR [ecx],dh
  417359:	adc    al,0x0
  41735b:	add    BYTE PTR [ecx],dh
  41735d:	adc    al,0x0
  41735f:	add    BYTE PTR [ecx],dh
  417361:	adc    al,0x0
  417363:	add    BYTE PTR [ecx],dh
  417365:	adc    al,0x0
  417367:	add    BYTE PTR [ecx],dh
  417369:	adc    al,0x0
  41736b:	add    BYTE PTR [ecx],dh
  41736d:	adc    al,0x0
  41736f:	add    BYTE PTR [ecx],dh
  417371:	adc    al,0x0
  417373:	add    BYTE PTR [ecx],dh
  417375:	adc    al,0x0
  417377:	add    BYTE PTR [ecx],dh
  417379:	adc    al,0x0
  41737b:	add    BYTE PTR [ecx],dh
  41737d:	adc    al,0x0
  41737f:	add    BYTE PTR [ecx],dh
  417381:	adc    al,0x0
  417383:	add    BYTE PTR [ecx],dh
  417385:	adc    al,0x0
  417387:	add    BYTE PTR [ecx],dh
  417389:	adc    al,0x0
  41738b:	add    BYTE PTR [ecx],dh
  41738d:	adc    al,0x0
  41738f:	add    BYTE PTR [ecx],dh
  417391:	adc    al,0x0
  417393:	add    BYTE PTR [ecx],dh
  417395:	adc    al,0x0
  417397:	add    BYTE PTR [ecx],dh
  417399:	adc    al,0x0
  41739b:	add    BYTE PTR [ecx],dh
  41739d:	adc    al,0x0
  41739f:	add    BYTE PTR [ecx],dh
  4173a1:	adc    al,0x0
  4173a3:	add    BYTE PTR [eax],al
  4173a5:	add    al,BYTE PTR [eax]
  4173a7:	add    BYTE PTR [ecx],dh
  4173a9:	adc    al,0x0
  4173ab:	add    BYTE PTR [ecx],ch
  4173ad:	adc    al,0x0
  4173af:	add    BYTE PTR [ebp-0x62cd6fda],ch
  4173b5:	es cwde 
  4173b7:	xor    cl,ch
  4173b9:	mov    al,es:0xa826cd32
  4173bf:	xor    dh,BYTE PTR [ecx]
  4173c1:	push   esp
  4173c2:	add    DWORD PTR [eax],eax
  4173c4:	add    DWORD PTR [eax+eax*1],edx
  4173c7:	add    BYTE PTR [edx-0x1ec4b4d2],dl
  4173cd:	cs pop edx
  4173cf:	cmp    ebx,esi
  4173d1:	cs push 0x932f073b
  4173d7:	cmp    ecx,edi
  4173d9:	das    
  4173da:	test   al,0x3b
  4173dc:	ins    DWORD PTR es:[edi],dx
  4173dd:	das    
  4173de:	in     eax,dx
  4173df:	cmp    ebp,DWORD PTR [edx]
  4173e1:	sub    BYTE PTR [ecx],dl
  4173e3:	cmp    al,0x38
  4173e5:	sub    BYTE PTR [ebp-0x78d66ac4],bl
  4173eb:	ds mov ah,0x2a
  4173ee:	xchg   ebp,eax
  4173ef:	ds jne 0x41741c
  4173f2:	int    0x3e
  4173f4:	dec    esi
  4173f5:	sub    bh,BYTE PTR [esi+0x3f]
  4173f8:	mov    dl,0x2a
  4173fa:	fwait
  4173fb:	aas    
  4173fc:	fsubr  DWORD PTR [edx]
  4173fe:	scas   eax,DWORD PTR es:[edi]
  4173ff:	aas    
  417400:	fisubr WORD PTR [edx]
  417402:	int3   
  417403:	aas    
  417404:	add    ebp,DWORD PTR [ebx]
  417406:	out    0x3f,al
  417408:	add    BYTE PTR [ebx],ch
  41740a:	stc    
  41740b:	aas    
  41740c:	add    BYTE PTR [eax],al
  41740e:	push   es
  41740f:	sub    eax,DWORD PTR [eax]
  417411:	add    BYTE PTR [ecx],dh
  417413:	inc    esp
  417414:	add    DWORD PTR [eax],eax
  417416:	mov    ebp,0x34000013
  41741b:	and    al,0x18
  41741d:	xor    BYTE PTR [eax+0x77308723],dh
  417423:	and    eax,0x2574314b
  417428:	xor    WORD PTR [ecx+0x25],ax
  41742c:	lea    esi,[ecx]
  41742e:	lea    esp,[edx+ebp*4]
  417431:	xor    ebx,esi
  417433:	and    al,0xe5
  417435:	xor    DWORD PTR [eax],esp
  417437:	sbb    DWORD PTR es:[edx],esi
  41743a:	dec    esi
  41743b:	es xor ah,BYTE PTR es:[ebp+0x26]
  417440:	inc    ebp
  417441:	xor    ch,dl
  417443:	and    eax,0x25fb3253
  417448:	popa   
  417449:	xor    bl,BYTE PTR [esi]
  41744b:	es jg  0x417480
  41744e:	lods   al,BYTE PTR ds:[esi]
  41744f:	and    eax,0x25d03297
  417454:	stos   DWORD PTR es:[edi],eax
  417455:	xor    bh,BYTE PTR [eax-0x7fcd3cdb]
  41745b:	and    eax,0x27373308
  417460:	adc    al,0x33
  417462:	adc    al,0x27
  417464:	sub    dh,BYTE PTR [ebx]
  417466:	repz es jle 0x41749d
  41746a:	mov    ecx,0x90339526
  41746f:	es stos DWORD PTR es:[edi],eax
  417471:	xor    eax,DWORD PTR [eax]
  417473:	add    BYTE PTR [ebp+0x6833be26],al
  417479:	es into 
  41747b:	xor    eax,DWORD PTR ds:0x1633dd26
  417481:	es hlt 
  417483:	xor    ebx,DWORD PTR [ebx]
  417485:	push   DWORD PTR es:[ebx]
  417488:	sub    al,0x20
  41748a:	or     DWORD PTR [edi+edi*1],esi
  41748d:	and    BYTE PTR [esp+esi*1],dl
  417490:	push   ebx
  417491:	and    BYTE PTR [eax],ch
  417493:	xor    al,0x4c
  417495:	and    BYTE PTR [edx],dh
  417497:	xor    al,0x66
  417499:	and    BYTE PTR [edx+0x34],bl
  41749c:	mov    bh,0x20
  41749e:	mov    WORD PTR [ebx+eax*8],?
  4174a1:	and    BYTE PTR [esp+esi*1+0x34eb20f7],bl
  4174a8:	fldenv [eax]
  4174aa:	or     al,0x35
  4174ac:	daa    
  4174ad:	pop    ds
  4174ae:	and    esi,DWORD PTR ds:0x35311f18
  4174b4:	clc    
  4174b5:	push   ds
  4174b6:	inc    esp
  4174b7:	xor    eax,0x355d1f65
  4174bc:	adc    ebx,DWORD PTR [edi]
  4174be:	jno    0x4174f5
  4174c0:	lods   al,BYTE PTR ds:[esi]
  4174c1:	pop    ds
  4174c2:	mov    ?,WORD PTR ds:0x35a51fc7
  4174c8:	xor    DWORD PTR [eax+eax*1],edx
  4174cb:	add    BYTE PTR [ecx],dh
  4174cd:	adc    al,0x0
  4174cf:	add    BYTE PTR [ecx],dh
  4174d1:	adc    al,0x0
  4174d3:	add    BYTE PTR [ecx],dh
  4174d5:	adc    al,0x0
  4174d7:	add    BYTE PTR [eax],al
  4174d9:	add    BYTE PTR [ecx],dh
  4174db:	adc    al,0x0
  4174dd:	add    BYTE PTR [ecx],dh
  4174df:	adc    al,0x0
  4174e1:	add    BYTE PTR [ecx],dh
  4174e3:	adc    al,0x0
  4174e5:	add    BYTE PTR [ecx],dh
  4174e7:	adc    al,0x0
  4174e9:	add    BYTE PTR [ecx],dh
  4174eb:	adc    al,0x0
  4174ed:	add    BYTE PTR [ecx],dh
  4174ef:	adc    al,0x0
  4174f1:	add    BYTE PTR [ecx],dh
  4174f3:	adc    al,0x0
  4174f5:	add    BYTE PTR [ecx],dh
  4174f7:	adc    al,0x0
  4174f9:	add    BYTE PTR [ecx],dh
  4174fb:	adc    al,0x0
  4174fd:	add    BYTE PTR [ecx],dh
  4174ff:	adc    al,0x0
  417501:	add    BYTE PTR [ecx],dh
  417503:	adc    al,0x0
  417505:	add    BYTE PTR [ecx],dh
  417507:	adc    al,0x0
  417509:	add    BYTE PTR [ecx],dh
  41750b:	adc    al,0x0
  41750d:	add    BYTE PTR [ecx],dh
  41750f:	adc    al,0x0
  417511:	add    BYTE PTR [ecx],dh
  417513:	adc    al,0x0
  417515:	add    BYTE PTR [ecx],dh
  417517:	adc    al,0x0
  417519:	add    BYTE PTR [ecx],dh
  41751b:	adc    al,0x0
  41751d:	add    BYTE PTR [ecx],dh
  41751f:	adc    al,0x0
  417521:	add    BYTE PTR [ecx],dh
  417523:	adc    al,0x0
  417525:	add    BYTE PTR [ecx],dh
  417527:	adc    al,0x0
  417529:	add    BYTE PTR [ecx],dh
  41752b:	adc    al,0x0
  41752d:	add    BYTE PTR [ecx],dh
  41752f:	adc    al,0x0
  417531:	add    BYTE PTR [ecx],dh
  417533:	adc    al,0x0
  417535:	add    BYTE PTR [ecx],dh
  417537:	adc    al,0x0
  417539:	add    BYTE PTR [ecx],dh
  41753b:	adc    al,0x0
  41753d:	add    BYTE PTR [eax],al
  41753f:	add    BYTE PTR [ecx],dh
  417541:	adc    al,0x0
  417543:	add    BYTE PTR [ecx],dh
  417545:	adc    al,0x0
  417547:	add    BYTE PTR [ecx],dh
  417549:	adc    al,0x0
  41754b:	add    BYTE PTR [ecx],dh
  41754d:	adc    al,0x0
  41754f:	add    BYTE PTR [ecx],dh
  417551:	adc    al,0x0
  417553:	add    BYTE PTR [ecx],dh
  417555:	adc    al,0x0
  417557:	add    BYTE PTR [ecx],dh
  417559:	adc    al,0x0
  41755b:	add    BYTE PTR [ecx],dh
  41755d:	adc    al,0x0
  41755f:	add    BYTE PTR [ecx],dh
  417561:	adc    al,0x0
  417563:	add    BYTE PTR [ecx],dh
  417565:	adc    al,0x0
  417567:	add    BYTE PTR [ecx],dh
  417569:	adc    al,0x0
  41756b:	add    BYTE PTR [ecx],dh
  41756d:	adc    al,0x0
  41756f:	add    BYTE PTR [ecx],dh
  417571:	adc    al,0x0
  417573:	add    BYTE PTR [ecx],dh
  417575:	adc    al,0x0
  417577:	add    BYTE PTR [ecx],dh
  417579:	adc    al,0x0
  41757b:	add    BYTE PTR [ecx],dh
  41757d:	adc    al,0x0
  41757f:	add    BYTE PTR [ecx],dh
  417581:	adc    al,0x0
  417583:	add    BYTE PTR [ecx],dh
  417585:	adc    al,0x0
  417587:	add    BYTE PTR [ecx],dh
  417589:	adc    al,0x0
  41758b:	add    BYTE PTR [ecx],dh
  41758d:	adc    al,0x0
  41758f:	add    BYTE PTR [ecx],dh
  417591:	adc    al,0x0
  417593:	add    BYTE PTR [ecx],dh
  417595:	adc    al,0x0
  417597:	add    BYTE PTR [ecx],dh
  417599:	adc    al,0x0
  41759b:	add    BYTE PTR [ecx],dh
  41759d:	adc    al,0x0
  41759f:	add    BYTE PTR [ecx],dh
  4175a1:	adc    al,0x0
  4175a3:	add    BYTE PTR [eax],al
  4175a5:	add    BYTE PTR [ecx],dh
  4175a7:	adc    al,0x0
  4175a9:	add    BYTE PTR [ecx],dh
  4175ab:	adc    al,0x0
  4175ad:	add    BYTE PTR [ecx],dh
  4175af:	adc    al,0x0
  4175b1:	add    bh,bh
  4175b3:	and    eax,0x4181f8
  4175b8:	jmp    DWORD PTR ds:0x4181fc
  4175be:	jmp    DWORD PTR ds:0x418200
  4175c4:	jmp    DWORD PTR ds:0x418204
  4175ca:	jmp    DWORD PTR ds:0x418208
  4175d0:	jmp    DWORD PTR ds:0x41820c
  4175d6:	jmp    DWORD PTR ds:0x418214
  4175dc:	jmp    DWORD PTR ds:0x41821c
